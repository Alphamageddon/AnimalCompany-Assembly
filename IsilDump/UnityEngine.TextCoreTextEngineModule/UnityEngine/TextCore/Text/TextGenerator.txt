Type: UnityEngine.TextCore.Text.TextGenerator

Method: UnityEngine.TextCore.Text.TextGenerator GetTextGenerator()

Disassembly:
	0x03CB8C58 ADD X8, X8, X9, 0x4, LSL
	0x03CB8C5C ADD W9, W9, 0x1
	0x03CB8C60 ORR X10, X10, 0x1FFFFFFFF
	0x03CB8C64 MOVK X11, 0xA
	0x03CB8C68 B 0x3CB94F4
	0x03CB8C6C CMP W27, 0x3C
	0x03CB8C70 B.NE 0x3CB9488
	0x03CB8C74 LDR X8, [X31 + 0x48]
	0x03CB8C78 CBZ X8, 0x3CB9664
	0x03CB8C7C LDRB W8, [X8 + 0xB5]
	0x03CB8C80 CBZ W8, 0x3CB9488
	0x03CB8C84 LDR X0, [X29]
	0x03CB8C88 LDP X24, X23, [X19 + 0x10]
	0x03CB8C8C LDR W8, [X0 + 0xE0]
	0x03CB8C90 CBNZ W8, 0x3CB8C98
	0x03CB8C94 BL 0x1C16DFC
	0x03CB8C98 ADD W2, W26, 0x1
	0x03CB8C9C MOV X0, X24
	0x03CB8CA0 MOV X1, X23
	0x03CB8CA4 MOV X3, X31
	0x03CB8CA8 BL 0x3CC8FB4
	0x03CB8CAC CMP W0, 0x8F1
	0x03CB8CB0 B.LE 0x3CB8DB4
	0x03CB8CB4 ADRP X24, 0x4A9000
	0x03CB8CB8 LDR X24, [X24 + 0xC78]
	0x03CB8CBC LDR W23, [X31 + 0x3C]
	0x03CB8CC0 MOVZ W8, 0xC72F
	0x03CB8CC4 MOVK W8, 0x2B0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x730000
	005 Move X20, 0x4AA000
	006 Move W8, [X19+825]
	007 Move X20, [X20+2896]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4AA000
	013 Move X0, [X0+2896]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+825], W8
	017 Move X0, [X20]
	018 Move X8, [X0+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfNotEqual {29}
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Call TextGenerator..ctor, X0
	025 Move X8, [X20]
	026 Move X8, [X8+184]
	027 Move [X8], X19
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X0, [X8]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void GenerateText(UnityEngine.TextCore.Text.TextGenerationSettings settings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CB9348 MOV X0, X23
	0x03CB934C MOV X2, X31
	0x03CB9350 BL 0x3CC6D28
	0x03CB9354 LDR X4, [X31 + 0x20]
	0x03CB9358 ADD X2, X31, 0x44
	0x03CB935C ADD X5, X31, 0x48
	0x03CB9360 MOV X1, X20
	0x03CB9364 MOV X3, X25
	0x03CB9368 MOV X6, X31
	0x03CB936C BL 0x3CC69E4
	0x03CB9370 LDR W23, [X31 + 0x3C]
	0x03CB9374 B 0x3CB9488
	0x03CB9378 LDR W8, [X31 + 0x2C]
	0x03CB937C TBNZ X8, 0x0, 0x3CB9480
	0x03CB9380 LDR X8, [X20]
	0x03CB9384 CBZ X8, 0x3CB9664
	0x03CB9388 LDR W9, [X31 + 0x44]
	0x03CB938C LDR W10, [X8 + 0x18]
	0x03CB9390 CMP W9, W10
	0x03CB9394 B.NE 0x3CB93C0
	0x03CB9398 LDR X0, [X29]
	0x03CB939C LDR W8, [X0 + 0xE0]
	0x03CB93A0 CBNZ W8, 0x3CB93A8
	0x03CB93A4 BL 0x1C16DFC
	0x03CB93A8 LDR X1, [X24]
	0x03CB93AC MOV X0, X20
	0x03CB93B0 BL 0x229C034
	0x03CB93B4 LDR X8, [X20]
	0x03CB93B8 CBZ X8, 0x3CB9664
	0x03CB93BC LDR W9, [X31 + 0x44]
	0x03CB93C0 LDR W10, [X8 + 0x18]
	0x03CB93C4 CMP W9, W10
	0x03CB93C8 B.CS 0x3CB9668
	0x03CB93CC SXTW X9, W9
	0x03CB93D0 MOV W10, W26
	0x03CB93D4 MOVZ X11, 0x1
	0x03CB93D8 ORR X10, X10, 0x7FFFFFFFF
	0x03CB93DC ADD X8, X8, X9, 0x4, LSL
	0x03CB93E0 ADD W9, W9, 0x1
	0x03CB93E4 MOVK X11, 0xA
	0x03CB93E8 STR W31, [X31 + 0x2C]
	0x03CB93EC STP X11, X10, [X8 + 0x20]
	0x03CB93F0 STR W9, [X31 + 0x44]
	0x03CB93F4 ADD W28, W26, 0x3
	0x03CB93F8 B 0x3CB94FC
	0x03CB93FC LDR W8, [X31 + 0x2C]
	0x03CB9400 TBNZ X8, 0x0, 0x3CB9480
	0x03CB9404 LDR X8, [X20]
	0x03CB9408 CBZ X8, 0x3CB9664
	0x03CB940C LDR W9, [X31 + 0x44]
	0x03CB9410 LDR W10, [X8 + 0x18]
	0x03CB9414 CMP W9, W10
	0x03CB9418 B.NE 0x3CB9444
	0x03CB941C LDR X0, [X29]
	0x03CB9420 LDR W8, [X0 + 0xE0]
	0x03CB9424 CBNZ W8, 0x3CB942C
	0x03CB9428 BL 0x1C16DFC
	0x03CB942C LDR X1, [X24]
	0x03CB9430 MOV X0, X20
	0x03CB9434 BL 0x229C034
	0x03CB9438 LDR X8, [X20]
	0x03CB943C CBZ X8, 0x3CB9664
	0x03CB9440 LDR W9, [X31 + 0x44]
	0x03CB9444 LDR W10, [X8 + 0x18]
	0x03CB9448 CMP W9, W10
	0x03CB944C B.CS 0x3CB9668
	0x03CB9450 MOV W10, W26
	0x03CB9454 MOVZ X11, 0x5
	0x03CB9458 SXTW X9, W9
	0x03CB945C ORR X10, X10, X11, 0x0
	0x03CB9460 MOVZ X11, 0x1
	0x03CB9464 STR W31, [X31 + 0x2C]
	0x03CB9468 ADD X8, X8, X9, 0x4, LSL
	0x03CB946C ADD W9, W9, 0x1
	0x03CB9470 MOVK X11, 0xAD
	0x03CB9474 B 0x3CB957C
	0x03CB9478 LDR W8, [X31 + 0x2C]
	0x03CB947C TBZ X8, 0x0, 0x3CB950C
	0x03CB9480 MOVZ W8, 0x1
	0x03CB9484 STR W8, [X31 + 0x2C]
	0x03CB9488 LDR X8, [X20]
	0x03CB948C CBZ X8, 0x3CB9664
	0x03CB9490 LDR W9, [X31 + 0x44]
	0x03CB9494 LDR W10, [X8 + 0x18]
	0x03CB9498 CMP W9, W10
	0x03CB949C B.NE 0x3CB94C8
	0x03CB94A0 LDR X0, [X29]
	0x03CB94A4 LDR W8, [X0 + 0xE0]
	0x03CB94A8 CBNZ W8, 0x3CB94B0
	0x03CB94AC BL 0x1C16DFC
	0x03CB94B0 LDR X1, [X24]
	0x03CB94B4 MOV X0, X20
	0x03CB94B8 BL 0x229C034

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x72F000
	007 Move W8, [X21+826]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x43B000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x4A9000
	018 Move X0, [X0+600]
	019 Call 0x1C17CF4
	020 Move X0, 0x43B000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x4A9000
	024 Move X0, [X0+3176]
	025 Call 0x1C17CF4
	026 Move X0, 0x4A9000
	027 Move X0, [X0+3184]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+826], W8
	031 Compare X20, 0
	032 JumpIfEqual {119}
	033 Move X8, 0x43B000
	034 Move X8, [X8+1432]
	035 Move X21, [X20+64]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X22, 0x43B000
	042 Move X22, [X22+2600]
	043 Move X0, X21
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {87}
	051 Move X0, [X20+64]
	052 Compare X0, 0
	053 JumpIfEqual {119}
	054 Move X1, X31
	055 Call FontAsset.get_characterLookupTable, X0
	056 Compare X0, 0
	057 JumpIfEqual {87}
	058 Compare X19, 0
	059 JumpIfEqual {103}
	060 Call TextGenerator.GetTextGenerator
	061 Compare X0, 0
	062 JumpIfEqual {119}
	063 Move X1, X20
	064 Move X2, X19
	065 Move X21, X0
	066 Call TextGenerator.Prepare, X0, X1, X2
	067 Move X8, 0x4A9000
	068 Move X8, [X8+600]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X31
	075 Call FontAsset.UpdateFontAssetsInUpdateQueue
	076 Move X0, X21
	077 Move X1, X20
	078 Move X2, X19
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X3, X31
	084 Move X30, [X31+48]
	085 Call TextGenerator.GenerateTextMesh, X0, X1, X2
	086 Return 
	087 Move X0, [X22]
	088 Move X19, 0x4A9000
	089 Move W8, [X0+224]
	090 Move X19, [X19+3184]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, [X19]
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X1, X31
	100 Move X30, [X31+48]
	101 Call Debug.LogWarning, X0
	102 Return 
	103 Move X0, [X22]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X8, 0x4A9000
	109 Move X8, [X8+3176]
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X1, X31
	115 Move X0, [X8]
	116 Move X30, [X31+48]
	117 Call Debug.LogError, X0
	118 Return 
	119 Call 0x1C17F20

Method: UnityEngine.Vector2 GetPreferredValues(UnityEngine.TextCore.Text.TextGenerationSettings settings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CB95B0 MOVK W8, 0xB9750000
	0x03CB95B4 CMP W0, W8
	0x03CB95B8 B.EQ 0x3CB95E8
	0x03CB95BC LDR X0, [X29]
	0x03CB95C0 LDR W8, [X0 + 0xE0]
	0x03CB95C4 CBNZ W8, 0x3CB95CC
	0x03CB95C8 BL 0x1C16DFC
	0x03CB95CC LDR X3, [X31 + 0x20]
	0x03CB95D0 ADD X1, X31, 0x44
	0x03CB95D4 ADD X4, X31, 0x48
	0x03CB95D8 MOV X0, X20
	0x03CB95DC MOV X2, X25
	0x03CB95E0 MOV X5, X31
	0x03CB95E4 BL 0x3CC7240
	0x03CB95E8 LDR X8, [X20]
	0x03CB95EC CBZ X8, 0x3CB9664
	0x03CB95F0 LDR W9, [X31 + 0x44]
	0x03CB95F4 LDR W10, [X8 + 0x18]
	0x03CB95F8 CMP W9, W10
	0x03CB95FC B.NE 0x3CB9628
	0x03CB9600 LDR X0, [X29]
	0x03CB9604 LDR W8, [X0 + 0xE0]
	0x03CB9608 CBNZ W8, 0x3CB9610
	0x03CB960C BL 0x1C16DFC
	0x03CB9610 LDR X1, [X24]
	0x03CB9614 MOV X0, X20
	0x03CB9618 BL 0x229C034
	0x03CB961C LDR X8, [X20]
	0x03CB9620 CBZ X8, 0x3CB9664
	0x03CB9624 LDR W9, [X31 + 0x44]
	0x03CB9628 LDR W10, [X8 + 0x18]
	0x03CB962C CMP W9, W10
	0x03CB9630 B.CS 0x3CB9668
	0x03CB9634 ADD X8, X8, W9, 0x4, SXTW
	0x03CB9638 STR W31, [X8 + 0x24]
	0x03CB963C LDR W8, [X31 + 0x44]
	0x03CB9640 LDP X22, X21, [X31 + 0x90]
	0x03CB9644 LDP X24, X23, [X31 + 0x80]
	0x03CB9648 LDP X26, X25, [X31 + 0x70]
	0x03CB964C STR W8, [X19 + 0x28]
	0x03CB9650 LDP X20, X19, [X31 + 0xA0]
	0x03CB9654 LDP X28, X27, [X31 + 0x60]
	0x03CB9658 LDP X29, X30, [X31 + 0x50]
	0x03CB965C ADD X31, X31, 0xB0
	0x03CB9660 RET
	0x03CB9664 BL 0x1C16F20
	0x03CB9668 BL 0x1C16F28
	0x03CB966C SUB X31, X31, 0x1B0
	0x03CB9670 STP X29, X30, [X31 + 0x150]
	0x03CB9674 STP X28, X27, [X31 + 0x160]
	0x03CB9678 STP X26, X25, [X31 + 0x170]
	0x03CB967C STP X24, X23, [X31 + 0x180]
	0x03CB9680 STP X22, X21, [X31 + 0x190]
	0x03CB9684 STP X20, X19, [X31 + 0x1A0]
	0x03CB9688 ADRP X21, 0x72E000
	0x03CB968C LDRB W8, [X21 + 0x342]
	0x03CB9690 MOV X23, X1
	0x03CB9694 MOV X19, X0
	0x03CB9698 STR X3, [X31 + 0x38]
	0x03CB969C STR X2, [X31 + 0x48]
	0x03CB96A0 TBNZ X8, 0x0, 0x3CB97D8
	0x03CB96A4 ADRP X0, 0x43C000
	0x03CB96A8 LDR X0, [X0 + 0x170]
	0x03CB96AC BL 0x1C16CF4
	0x03CB96B0 ADRP X0, 0x43A000
	0x03CB96B4 LDR X0, [X0 + 0xA28]
	0x03CB96B8 BL 0x1C16CF4
	0x03CB96BC ADRP X0, 0x464000
	0x03CB96C0 LDR X0, [X0 + 0x8D0]
	0x03CB96C4 BL 0x1C16CF4
	0x03CB96C8 ADRP X0, 0x4A8000
	0x03CB96CC LDR X0, [X0 + 0xC98]
	0x03CB96D0 BL 0x1C16CF4
	0x03CB96D4 ADRP X0, 0x495000
	0x03CB96D8 LDR X0, [X0 + 0xD78]
	0x03CB96DC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x72F000
	006 Move W8, [X21+827]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x43B000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x43B000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x4A9000
	020 Move X0, [X0+3184]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+827], W8
	024 Compare X20, 0
	025 JumpIfEqual {95}
	026 Move X8, 0x43B000
	027 Move X8, [X8+1432]
	028 Move X21, [X20+64]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {63}
	042 Move X0, [X20+64]
	043 Compare X0, 0
	044 JumpIfEqual {95}
	045 Move X1, X31
	046 Call FontAsset.get_characterLookupTable, X0
	047 Compare X0, 0
	048 JumpIfEqual {63}
	049 Call TextGenerator.GetTextGenerator
	050 Compare X0, 0
	051 JumpIfEqual {95}
	052 Move X1, X20
	053 Move X2, X19
	054 Move X21, X0
	055 Call TextGenerator.Prepare, X0, X1, X2
	056 Move X1, X20
	057 Move X2, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X0, X21
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Move X8, 0x43B000
	064 Move X8, [X8+2600]
	065 Move X19, 0x4A9000
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Move X19, [X19+3184]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, [X19]
	073 Move X1, X31
	074 Call Debug.LogWarning, X0
	075 Move X19, 0x721000
	076 Move W8, [X19+1935]
	077 Compare W8, 0
	078 JumpIfNotEqual {84}
	079 Move X0, 0x443000
	080 Move X0, [X0+3848]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X19+1935], W8
	084 Move X8, 0x443000
	085 Move X8, [X8+3848]
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X8, [X8]
	089 Move X8, [X8+184]
	090 Move S0, [X8]
	091 Move S1, [X8+4]
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Return X0
	095 Call 0x1C17F20

Method: System.Boolean get_isTextTruncated()

Disassembly:
	0x03CB981C LDR X21, [X21 + 0xBC8]
	0x03CB9820 LDR X20, [X20 + 0xBB8]
	0x03CB9824 ADD X0, X19, 0x128
	0x03CB9828 MOV X1, X31
	0x03CB982C STR W8, [X19 + 0x124]
	0x03CB9830 BL 0x3CCB56C
	0x03CB9834 LDRB W8, [X19 + 0x124]
	0x03CB9838 TBNZ X8, 0x0, 0x3CB9844
	0x03CB983C LDR W1, [X22 + 0xEC]
	0x03CB9840 B 0x3CB9848
	0x03CB9844 MOVZ W1, 0x2BC
	0x03CB9848 STR W1, [X19 + 0x134]
	0x03CB984C LDR X2, [X21]
	0x03CB9850 ADD X0, X19, 0x138
	0x03CB9854 BL 0x26E2008
	0x03CB9858 LDR X2, [X22 + 0x40]
	0x03CB985C LDR V0, [X19 + 0xD8]
	0x03CB9860 MOVI V1.2D, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x72F000
	005 Move X20, 0x4A9000
	006 Move W8, [X19+828]
	007 Move X20, [X20+2896]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4A9000
	013 Move X0, [X0+2896]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+828], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8+8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void Prepare(UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CB94BC LDR X8, [X20]
	0x03CB94C0 CBZ X8, 0x3CB9664
	0x03CB94C4 LDR W9, [X31 + 0x44]
	0x03CB94C8 LDR W10, [X8 + 0x18]
	0x03CB94CC CMP W9, W10
	0x03CB94D0 B.CS 0x3CB9668
	0x03CB94D4 SXTW X9, W9
	0x03CB94D8 MOV W10, W26
	0x03CB94DC MOVZ W11, 0x1
	0x03CB94E0 ORR X10, X10, 0x1FFFFFFFF
	0x03CB94E4 BFM X11, X27, 0x20, 0x1F
	0x03CB94E8 ADD X8, X8, X9, 0x4, LSL
	0x03CB94EC ADD W9, W9, 0x1
	0x03CB94F0 MOV W28, W26
	0x03CB94F4 STP X11, X10, [X8 + 0x20]
	0x03CB94F8 STR W9, [X31 + 0x44]
	0x03CB94FC ADD W26, W28, 0x1
	0x03CB9500 CMP W26, W22
	0x03CB9504 B.LT 0x3CB8ADC
	0x03CB9508 B 0x3CB9598
	0x03CB950C LDR X8, [X20]
	0x03CB9510 CBZ X8, 0x3CB9664
	0x03CB9514 LDR W9, [X31 + 0x44]
	0x03CB9518 LDR W10, [X8 + 0x18]
	0x03CB951C CMP W9, W10
	0x03CB9520 B.NE 0x3CB954C
	0x03CB9524 LDR X0, [X29]
	0x03CB9528 LDR W8, [X0 + 0xE0]
	0x03CB952C CBNZ W8, 0x3CB9534
	0x03CB9530 BL 0x1C16DFC
	0x03CB9534 LDR X1, [X24]
	0x03CB9538 MOV X0, X20
	0x03CB953C BL 0x229C034
	0x03CB9540 LDR X8, [X20]
	0x03CB9544 CBZ X8, 0x3CB9664
	0x03CB9548 LDR W9, [X31 + 0x44]
	0x03CB954C LDR W10, [X8 + 0x18]
	0x03CB9550 CMP W9, W10
	0x03CB9554 B.CS 0x3CB9668
	0x03CB9558 MOV W10, W26
	0x03CB955C MOVZ X11, 0x5
	0x03CB9560 SXTW X9, W9
	0x03CB9564 ORR X10, X10, X11, 0x0
	0x03CB9568 MOVZ X11, 0x1
	0x03CB956C ADD X8, X8, X9, 0x4, LSL
	0x03CB9570 ADD W9, W9, 0x1
	0x03CB9574 MOVK X11, 0x200D
	0x03CB9578 STR W31, [X31 + 0x2C]
	0x03CB957C STP X11, X10, [X8 + 0x20]
	0x03CB9580 STR W9, [X31 + 0x44]
	0x03CB9584 ADD W28, W26, 0x4
	0x03CB9588 B 0x3CB94FC
	0x03CB958C LDR W23, [X31 + 0x3C]
	0x03CB9590 STR W31, [X31 + 0x2C]
	0x03CB9594 B 0x3CB9488
	0x03CB9598 LDR X0, [X31 + 0x30]
	0x03CB959C STR W31, [X25]
	0x03CB95A0 CBZ X0, 0x3CB95E8
	0x03CB95A4 MOV X1, X31
	0x03CB95A8 BL 0x3CC6540
	0x03CB95AC MOVZ W8, 0x50F3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {74}
	007 Move V0, [X1+184]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move [X0+216], S0
	012 Move W8, [X1+96]
	013 Move [X0+292], W8
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Move W8, [X20+236]
	019 Move W8, 700
	020 Move X0, X19
	021 Move X1, X20
	022 Move [X19+308], W8
	023 Call TextGenerator.GetEllipsisSpecialCharacter, X0, X1
	024 Move X0, X19
	025 Move X1, X20
	026 Call TextGenerator.GetUnderlineSpecialCharacter, X0, X1
	027 Move S0, [X20+24]
	028 Move S1, [X20+28]
	029 Move S2, [X20+32]
	030 Move S3, [X20+36]
	031 Move S4, [X20+40]
	032 Move S5, [X20+44]
	033 Move S6, [X20+48]
	034 Move S7, [X20+52]
	035 Move X0, X19
	036 Call TextGenerator.ComputeMarginSize, X0, X1, X2
	037 Move X1, [X20+16]
	038 Compare X1, 0
	039 JumpIfEqual {41}
	040 Move W3, [X1+16]
	041 Move W3, W31
	042 Move X0, X19
	043 Move W2, W31
	044 Call TextGenerator.PopulateTextBackingArray, X0, X1, X2, X3
	045 Move X0, X19
	046 Move X1, X20
	047 Call TextGenerator.PopulateTextProcessingArray, X0, X1
	048 Move X1, [X19+32]
	049 Move X0, X19
	050 Move X2, X20
	051 Move X3, X21
	052 Call TextGenerator.SetArraySizes, X0, X1, X2, X3
	053 Move W8, [X20+168]
	054 Move V0, [X20+164]
	055 Compare W8, 0
	056 JumpIfEqual {63}
	057 Move S2, [X20+172]
	058 Move S1, [X20+176]
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 NotImplemented "Instruction FCSEL not yet implemented."
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 NotImplemented "Instruction FCSEL not yet implemented."
	063 Move [X19+236], S0
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move [X19+5552], W31
	066 Move [X19+5524], W31
	067 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	068 Move [X19+5528], D0
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return 
	074 Call 0x1C17F20

Method: System.Void GenerateTextMesh(UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CB1604 LDR X8, [X22]
	0x03CB1608 CBZ X8, 0x3CB7C14
	0x03CB160C LDR X9, [X31 + 0x1C8]
	0x03CB1610 LDR W10, [X8 + 0x18]
	0x03CB1614 LDRSW X9, [X9]
	0x03CB1618 CMP W9, W10
	0x03CB161C B.CS 0x3CB7C18
	0x03CB1620 MADD X8, X9, X26, X8
	0x03CB1624 LDR X22, [X8 + 0x30]
	0x03CB1628 CBZ X22, 0x3CB7C14
	0x03CB162C ADRP X9, 0x4B0000
	0x03CB1630 LDR X8, [X22]
	0x03CB1634 LDR X9, [X9 + 0xB40]
	0x03CB1638 LDRB W10, [X8 + 0x130]
	0x03CB163C LDR X1, [X9]
	0x03CB1640 LDRB W9, [X1 + 0x130]
	0x03CB1644 CMP W10, W9
	0x03CB1648 B.CC 0x3CB7C4C
	0x03CB164C LDR X8, [X8 + 0xC8]
	0x03CB1650 ADD X8, X8, X9, 0x3, LSL
	0x03CB1654 LDUR X8, [X8 - 0x8]
	0x03CB1658 CMP X8, X1
	0x03CB165C B.NE 0x3CB7C4C
	0x03CB1660 MOV X0, X22
	0x03CB1664 MOV X1, X31
	0x03CB1668 BL 0x3CA84C0
	0x03CB166C CBZ X0, 0x3CB1690
	0x03CB1670 ADRP X8, 0x4B0000
	0x03CB1674 LDR X9, [X0]
	0x03CB1678 LDR X8, [X8 + 0x748]
	0x03CB167C LDRB W11, [X9 + 0x130]
	0x03CB1680 LDR X8, [X8]
	0x03CB1684 LDRB W10, [X8 + 0x130]
	0x03CB1688 CMP W11, W10
	0x03CB168C B.CS 0x3CB18D8
	0x03CB1690 MOV X8, X31
	0x03CB1694 B 0x3CB18EC
	0x03CB1698 LDR X8, [X22]
	0x03CB169C CBZ X8, 0x3CB7C14
	0x03CB16A0 LDR X23, [X31 + 0x1C8]
	0x03CB16A4 LDR W11, [X8 + 0x18]
	0x03CB16A8 LDRSW X9, [X23]
	0x03CB16AC CMP W9, W11
	0x03CB16B0 B.CS 0x3CB7C18
	0x03CB16B4 MADD X10, X9, X26, X8
	0x03CB16B8 LDR X10, [X10 + 0x30]
	0x03CB16BC STR X10, [X19 + 0x1588]
	0x03CB16C0 CBZ X10, 0x3CB18C8
	0x03CB16C4 MADD X12, X9, X26, X8
	0x03CB16C8 LDR X10, [X12 + 0x40]
	0x03CB16CC STR X10, [X19 + 0x68]
	0x03CB16D0 LDR X13, [X12 + 0x58]
	0x03CB16D4 STR X13, [X19 + 0x70]
	0x03CB16D8 LDR W12, [X12 + 0x60]
	0x03CB16DC STR W12, [X19 + 0x78]
	0x03CB16E0 LDR W12, [X31 + 0x1C4]
	0x03CB16E4 CBZ W12, 0x3CB171C
	0x03CB16E8 LDR X12, [X19 + 0x20]
	0x03CB16EC CBZ X12, 0x3CB7C14
	0x03CB16F0 LDRSW X13, [X31 + 0x11FC]
	0x03CB16F4 LDR W14, [X12 + 0x18]
	0x03CB16F8 CMP W13, W14
	0x03CB16FC B.CS 0x3CB7C18
	0x03CB1700 ADD X12, X12, X13, 0x4, LSL
	0x03CB1704 LDR W12, [X12 + 0x24]
	0x03CB1708 CMP W12, 0xA
	0x03CB170C B.NE 0x3CB171C
	0x03CB1710 LDR W12, [X19 + 0x328]
	0x03CB1714 CMP W9, W12
	0x03CB1718 B.NE 0x3CB383C
	0x03CB171C CBZ X10, 0x3CB7C14
	0x03CB1720 LDR V11, [X19 + 0xF4]
	0x03CB1724 ADD X0, X10, 0xB0
	0x03CB1728 MOV X1, X31
	0x03CB172C BL 0x3C9BF88
	0x03CB1730 LDR X8, [X19 + 0x68]
	0x03CB1734 CBZ X8, 0x3CB7C14
	0x03CB1738 MOV W22, W0
	0x03CB173C ADD X0, X8, 0xB0
	0x03CB1740 MOV X1, X31
	0x03CB1744 BL 0x3C9BF98
	0x03CB1748 LDRB W8, [X25 + 0xBD]
	0x03CB174C MOV V8.16B, V0.16B
	0x03CB1750 LDR W9, [X31 + 0x128C]
	0x03CB1754 LDR V0, [X31 + 0x148]
	0x03CB1758 CMP W8, 0x0
	0x03CB175C FMOV S1, 1
	0x03CB1760 MOVZ W8, 0x2026
	0x03CB1764 FCSEL S12, S0, S1, EQ
	0x03CB1768 CMP W9, W8
	0x03CB176C LDR W9, [X31 + 0x1C4]
	0x03CB1770 CSET W8, EQ
	0x03CB1774 FMOV S10, W31
	0x03CB1778 FMOV S9, W31
	0x03CB177C AND W8, W9, W8, 0x0
	0x03CB1780 TBNZ X8, 0x0, 0x3CB17B4
	0x03CB1784 LDR X8, [X24]
	0x03CB1788 CBZ X8, 0x3CB7C14
	0x03CB178C ADD X0, X8, 0xB0
	0x03CB1790 MOV X1, X31
	0x03CB1794 BL 0x3C9BFB8
	0x03CB1798 LDR X8, [X24]
	0x03CB179C CBZ X8, 0x3CB7C14
	0x03CB17A0 ADD X0, X8, 0xB0
	0x03CB17A4 MOV X1, X31
	0x03CB17A8 MOV V9.16B, V0.16B
	0x03CB17AC BL 0x3C9BFF8
	0x03CB17B0 MOV V10.16B, V0.16B
	0x03CB17B4 LDR X8, [X19 + 0x1588]
	0x03CB17B8 CBZ X8, 0x3CB7C14
	0x03CB17BC LDR X0, [X8 + 0x20]
	0x03CB17C0 STR S9, [X31 + 0x178]
	0x03CB17C4 CBZ X0, 0x3CB7C14
	0x03CB17C8 LDR V13, [X19 + 0xF0]
	0x03CB17CC LDR V14, [X8 + 0x2C]
	0x03CB17D0 MOV X1, X31
	0x03CB17D4 BL 0x3C9C4E0
	0x03CB17D8 LDR X8, [X24]
	0x03CB17DC CBZ X8, 0x3CB7C14
	0x03CB17E0 ADD X0, X8, 0xB0
	0x03CB17E4 MOV X1, X31
	0x03CB17E8 MOV V9.16B, V0.16B
	0x03CB17EC STR S10, [X31 + 0x168]
	0x03CB17F0 BL 0x3C9BFE8
	0x03CB17F4 LDR X8, [X24]
	0x03CB17F8 CBZ X8, 0x3CB7C14
	0x03CB17FC LDR V15, [X19 + 0xF0]
	0x03CB1800 ADD X0, X8, 0xB0
	0x03CB1804 MOV X1, X31
	0x03CB1808 MOV V10.16B, V0.16B
	0x03CB180C BL 0x3C9BF98
	0x03CB1810 LDR X8, [X31 + 0x1D8]
	0x03CB1814 LDR X8, [X8]
	0x03CB1818 CBZ X8, 0x3CB7C14
	0x03CB181C LDR W9, [X19 + 0x324]
	0x03CB1820 LDR W10, [X8 + 0x18]
	0x03CB1824 CMP W9, W10
	0x03CB1828 B.CS 0x3CB7C18
	0x03CB182C LDR V1, [X31 + 0x174]
	0x03CB1830 SCVTF S2, W22
	0x03CB1834 SXTW X10, W9
	0x03CB1838 MADD X10, X10, X26, X8
	0x03CB183C FMUL S1, S1, S11
	0x03CB1840 FDIV S1, S1, S2
	0x03CB1844 FMUL S1, S1, S8
	0x03CB1848 FMUL S1, S1, S12
	0x03CB184C FMUL S2, S1, S13
	0x03CB1850 FMUL S2, S2, S14
	0x03CB1854 FMUL S8, S2, S9
	0x03CB1858 MOVZ W11, 0x1
	0x03CB185C STRB W11, [X10 + 0x28]
	0x03CB1860 STR S8, [X10 + 0x16C]
	0x03CB1864 LDR V2, [X19 + 0xD8]
	0x03CB1868 LDR X22, [X31 + 0x1D8]
	0x03CB186C FMUL S1, S1, S10
	0x03CB1870 FMUL S1, S1, S15
	0x03CB1874 FMUL S0, S1, S0
	0x03CB1878 STR S2, [X31 + 0x188]
	0x03CB187C STR S0, [X31 + 0x184]
	0x03CB1880 B 0x3CB1CC0
	0x03CB1884 LDR W10, [X31 + 0x128C]
	0x03CB1888 LDR X8, [X22]
	0x03CB188C MOVZ W9, 0xAD
	0x03CB1890 FMOV S1, W31
	0x03CB1894 CMP W10, 0x3
	0x03CB1898 CCMP W10, W9, 0x4, NE
	0x03CB189C FMOV S0, W31
	0x03CB18A0 FCSEL S13, S8, S1, NE
	0x03CB18A4 STR S0, [X31 + 0x184]
	0x03CB18A8 CBZ X8, 0x3CB7C14
	0x03CB18AC LDR X23, [X31 + 0x1C8]
	0x03CB18B0 FMOV S0, W31
	0x03CB18B4 STR S0, [X31 + 0x178]
	0x03CB18B8 FMOV S0, W31
	0x03CB18BC LDR W9, [X23]
	0x03CB18C0 STR S0, [X31 + 0x168]
	0x03CB18C4 B 0x3CB1CD8
	0x03CB18C8 ADRP X28, 0x442000
	0x03CB18CC LDR X28, [X28 + 0xA28]
	0x03CB18D0 LDR W24, [X31 + 0x1A8]
	0x03CB18D4 B 0x3CB1468
	0x03CB18D8 LDR X9, [X9 + 0xC8]
	0x03CB18DC ADD X9, X9, X10, 0x3, LSL
	0x03CB18E0 LDUR X9, [X9 - 0x8]
	0x03CB18E4 CMP X9, X8
	0x03CB18E8 CSEL X8, X0, X31, EQ
	0x03CB18EC MOV X0, X22
	0x03CB18F0 MOV X1, X31
	0x03CB18F4 STR X8, [X19 + 0xE0]
	0x03CB18F8 BL 0x3CA0098
	0x03CB18FC STR W0, [X19 + 0x157C]
	0x03CB1900 LDR W8, [X31 + 0x128C]
	0x03CB1904 CMP W8, 0x3C
	0x03CB1908 B.NE 0x3CB1918
	0x03CB190C ADD W8, W0, 0xE000
	0x03CB1910 STR W8, [X31 + 0x128C]
	0x03CB1914 B 0x3CB1934
	0x03CB1918 FMOV S0, 1
	0x03CB191C FMOV S1, 1
	0x03CB1920 FMOV S2, 1
	0x03CB1924 FMOV S3, 1
	0x03CB1928 MOV X0, X31
	0x03CB192C BL 0x1E43664
	0x03CB1930 STR W0, [X19 + 0x1580]
	0x03CB1934 LDR X0, [X19 + 0x68]
	0x03CB1938 CBZ X0, 0x3CB7C14
	0x03CB193C LDR V8, [X19 + 0xF4]
	0x03CB1940 ADD X8, X31, 0x1000
	0x03CB1944 ADD X8, X8, 0x290
	0x03CB1948 MOV X1, X31
	0x03CB194C BL 0x3C9EB14
	0x03CB1950 ADD X0, X31, 0x1000
	0x03CB1954 ADD X1, X31, 0x1000
	0x03CB1958 ADD X0, X0, 0x200
	0x03CB195C ADD X1, X1, 0x290
	0x03CB1960 MOVZ W2, 0x60
	0x03CB1964 BL 0x3EB1AC0
	0x03CB1968 ADD X0, X31, 0x1000
	0x03CB196C ADD X0, X0, 0x200
	0x03CB1970 MOV X1, X31
	0x03CB1974 BL 0x3C9BF88
	0x03CB1978 LDR X9, [X24]
	0x03CB197C CBZ X9, 0x3CB7C14
	0x03CB1980 ADD X8, X31, 0x1000
	0x03CB1984 MOV W28, W0
	0x03CB1988 ADD X8, X8, 0x290
	0x03CB198C MOV X0, X9
	0x03CB1990 MOV X1, X31
	0x03CB1994 BL 0x3C9EB14
	0x03CB1998 ADD X0, X31, 0x1000
	0x03CB199C ADD X1, X31, 0x1000
	0x03CB19A0 ADD X0, X0, 0x200
	0x03CB19A4 ADD X1, X1, 0x290
	0x03CB19A8 MOVZ W2, 0x60
	0x03CB19AC BL 0x3EB1AC0
	0x03CB19B0 ADD X0, X31, 0x1000
	0x03CB19B4 ADD X0, X0, 0x200
	0x03CB19B8 MOV X1, X31
	0x03CB19BC BL 0x3C9BF98
	0x03CB19C0 LDRB W9, [X25 + 0xBD]
	0x03CB19C4 LDR V1, [X31 + 0x148]
	0x03CB19C8 LDR X8, [X19 + 0xE0]
	0x03CB19CC FMOV S2, 1
	0x03CB19D0 CMP W9, 0x0
	0x03CB19D4 FCSEL S1, S1, S2, EQ
	0x03CB19D8 CBZ X8, 0x3CB7C14
	0x03CB19DC SCVTF S2, W28
	0x03CB19E0 FDIV S2, S8, S2
	0x03CB19E4 FMUL S0, S2, S0
	0x03CB19E8 ADD X0, X8, 0x48
	0x03CB19EC MOV X1, X31
	0x03CB19F0 FMUL S10, S0, S1
	0x03CB19F4 BL 0x3C9BF88
	0x03CB19F8 LDR V13, [X19 + 0xF4]
	0x03CB19FC CMP W0, 0x1
	0x03CB1A00 B.LT 0x3CB1AF0
	0x03CB1A04 LDR X8, [X19 + 0xE0]
	0x03CB1A08 CBZ X8, 0x3CB7C14
	0x03CB1A0C ADD X0, X8, 0x48
	0x03CB1A10 MOV X1, X31
	0x03CB1A14 BL 0x3C9BF88
	0x03CB1A18 LDR X8, [X19 + 0xE0]
	0x03CB1A1C CBZ X8, 0x3CB7C14
	0x03CB1A20 MOV W28, W0
	0x03CB1A24 ADD X0, X8, 0x48
	0x03CB1A28 MOV X1, X31
	0x03CB1A2C BL 0x3C9BF98
	0x03CB1A30 LDR X0, [X22 + 0x20]
	0x03CB1A34 CBZ X0, 0x3CB7C14
	0x03CB1A38 LDRB W8, [X25 + 0xBD]
	0x03CB1A3C MOV V11.16B, V0.16B
	0x03CB1A40 LDR V0, [X31 + 0x148]
	0x03CB1A44 LDR V14, [X22 + 0x2C]
	0x03CB1A48 CMP W8, 0x0
	0x03CB1A4C FMOV S1, 1
	0x03CB1A50 MOV X1, X31
	0x03CB1A54 FCSEL S12, S0, S1, EQ
	0x03CB1A58 BL 0x3C9C4E0
	0x03CB1A5C LDR X8, [X19 + 0xE0]
	0x03CB1A60 CBZ X8, 0x3CB7C14
	0x03CB1A64 ADD X0, X8, 0x48
	0x03CB1A68 MOV X1, X31
	0x03CB1A6C MOV V9.16B, V0.16B
	0x03CB1A70 MOV V8.16B, V10.16B
	0x03CB1A74 BL 0x3C9BFB8
	0x03CB1A78 LDR X8, [X19 + 0xE0]
	0x03CB1A7C STR S0, [X31 + 0x178]
	0x03CB1A80 CBZ X8, 0x3CB7C14
	0x03CB1A84 ADD X0, X8, 0x48
	0x03CB1A88 MOV X1, X31
	0x03CB1A8C MOV V15.16B, V13.16B
	0x03CB1A90 BL 0x3C9BFE8
	0x03CB1A94 LDR X8, [X19 + 0xE0]
	0x03CB1A98 CBZ X8, 0x3CB7C14
	0x03CB1A9C LDR V13, [X19 + 0xF0]
	0x03CB1AA0 ADD X0, X8, 0x48
	0x03CB1AA4 MOV X1, X31
	0x03CB1AA8 MOV V10.16B, V0.16B
	0x03CB1AAC BL 0x3C9BF98
	0x03CB1AB0 LDR X8, [X19 + 0xE0]
	0x03CB1AB4 CBZ X8, 0x3CB7C14
	0x03CB1AB8 SCVTF S1, W28
	0x03CB1ABC FMUL S3, S8, S10
	0x03CB1AC0 FDIV S1, S15, S1
	0x03CB1AC4 FMUL S3, S3, S13
	0x03CB1AC8 FMUL S1, S1, S11
	0x03CB1ACC FMUL S2, S14, S9
	0x03CB1AD0 FMUL S10, S3, S0
	0x03CB1AD4 FMUL S0, S1, S12
	0x03CB1AD8 ADD X0, X8, 0x48
	0x03CB1ADC MOV X1, X31
	0x03CB1AE0 FMUL S8, S0, S2
	0x03CB1AE4 BL 0x3C9BFF8
	0x03CB1AE8 LDR V11, [X31 + 0x178]
	0x03CB1AEC B 0x3CB1C58
	0x03CB1AF0 LDR X8, [X24]
	0x03CB1AF4 CBZ X8, 0x3CB7C14
	0x03CB1AF8 ADD X0, X8, 0xB0
	0x03CB1AFC MOV X1, X31
	0x03CB1B00 BL 0x3C9BF88
	0x03CB1B04 LDR X8, [X24]
	0x03CB1B08 CBZ X8, 0x3CB7C14
	0x03CB1B0C MOV W28, W0
	0x03CB1B10 ADD X0, X8, 0xB0
	0x03CB1B14 MOV X1, X31
	0x03CB1B18 BL 0x3C9BF98
	0x03CB1B1C LDRB W9, [X25 + 0xBD]
	0x03CB1B20 MOV V8.16B, V0.16B
	0x03CB1B24 LDR V0, [X31 + 0x148]
	0x03CB1B28 LDR X8, [X24]
	0x03CB1B2C CMP W9, 0x0
	0x03CB1B30 FMOV S1, 1
	0x03CB1B34 FCSEL S15, S0, S1, EQ
	0x03CB1B38 CBZ X8, 0x3CB7C14
	0x03CB1B3C ADD X0, X8, 0xB0
	0x03CB1B40 MOV X1, X31
	0x03CB1B44 BL 0x3C9BFB8
	0x03CB1B48 LDR X0, [X22 + 0x20]
	0x03CB1B4C CBZ X0, 0x3CB7C14
	0x03CB1B50 ADD X8, X31, 0x1000
	0x03CB1B54 ADD X8, X8, 0x290
	0x03CB1B58 MOV X1, X31
	0x03CB1B5C MOV V9.16B, V0.16B
	0x03CB1B60 STR S10, [X31 + 0x1B4]
	0x03CB1B64 BL 0x3C9C4A4
	0x03CB1B68 LDR V0, [X31 + 0x129]
	0x03CB1B6C LDR W8, [X31 + 0x12A0]
	0x03CB1B70 ADD X0, X31, 0x1000
	0x03CB1B74 ADD X0, X0, 0x1B0
	0x03CB1B78 MOV X1, X31
	0x03CB1B7C STR V0, [X31 + 0x11B]
	0x03CB1B80 STR W8, [X31 + 0x11C0]
	0x03CB1B84 BL 0x3C9C2D4
	0x03CB1B88 LDR X0, [X22 + 0x20]
	0x03CB1B8C CBZ X0, 0x3CB7C14
	0x03CB1B90 STR S0, [X31 + 0x188]
	0x03CB1B94 LDR V0, [X22 + 0x2C]
	0x03CB1B98 MOV X1, X31
	0x03CB1B9C STR S0, [X31 + 0x1A0]
	0x03CB1BA0 BL 0x3C9C4E0
	0x03CB1BA4 LDR X8, [X24]
	0x03CB1BA8 CBZ X8, 0x3CB7C14
	0x03CB1BAC ADD X0, X8, 0xB0
	0x03CB1BB0 MOV X1, X31
	0x03CB1BB4 MOV V11.16B, V0.16B
	0x03CB1BB8 MOV V10.16B, V9.16B
	0x03CB1BBC MOV V14.16B, V13.16B
	0x03CB1BC0 BL 0x3C9BFB8
	0x03CB1BC4 LDR X8, [X24]
	0x03CB1BC8 CBZ X8, 0x3CB7C14
	0x03CB1BCC ADD X0, X8, 0xB0
	0x03CB1BD0 MOV X1, X31
	0x03CB1BD4 MOV V12.16B, V0.16B
	0x03CB1BD8 MOV V9.16B, V8.16B
	0x03CB1BDC BL 0x3C9BFE8
	0x03CB1BE0 LDR X8, [X24]
	0x03CB1BE4 CBZ X8, 0x3CB7C14
	0x03CB1BE8 LDR V8, [X19 + 0xF0]
	0x03CB1BEC ADD X0, X8, 0xB0
	0x03CB1BF0 MOV X1, X31
	0x03CB1BF4 MOV V13.16B, V0.16B
	0x03CB1BF8 BL 0x3C9BF98
	0x03CB1BFC LDR X8, [X19 + 0x68]
	0x03CB1C00 CBZ X8, 0x3CB7C14
	0x03CB1C04 LDR V2, [X31 + 0x188]
	0x03CB1C08 LDR V3, [X31 + 0x1B4]
	0x03CB1C0C LDR V4, [X31 + 0x1A0]
	0x03CB1C10 SCVTF S1, W28
	0x03CB1C14 FDIV S2, S10, S2
	0x03CB1C18 FMUL S3, S3, S13
	0x03CB1C1C FDIV S1, S14, S1
	0x03CB1C20 FMUL S2, S2, S4
	0x03CB1C24 FMUL S3, S3, S8
	0x03CB1C28 FMUL S1, S1, S9
	0x03CB1C2C FMUL S2, S2, S11
	0x03CB1C30 FMUL S10, S3, S0
	0x03CB1C34 FMUL S0, S1, S15
	0x03CB1C38 FMUL S9, S0, S2
	0x03CB1C3C FDIV S8, S0, S9
	0x03CB1C40 ADD X0, X8, 0xB0
	0x03CB1C44 MOV X1, X31
	0x03CB1C48 FMUL S11, S8, S12
	0x03CB1C4C BL 0x3C9BFF8
	0x03CB1C50 FMUL S0, S8, S0
	0x03CB1C54 MOV V8.16B, V9.16B
	0x03CB1C58 STR S0, [X31 + 0x168]
	0x03CB1C5C STR X22, [X19 + 0x1588]
	0x03CB1C60 LDR X22, [X31 + 0x1D8]
	0x03CB1C64 LDR X8, [X22]
	0x03CB1C68 CBZ X8, 0x3CB7C14
	0x03CB1C6C LDR W9, [X19 + 0x324]
	0x03CB1C70 LDR W10, [X8 + 0x18]
	0x03CB1C74 STR S11, [X31 + 0x178]
	0x03CB1C78 STR S10, [X31 + 0x184]
	0x03CB1C7C CMP W9, W10
	0x03CB1C80 B.CS 0x3CB7C18
	0x03CB1C84 SXTW X10, W9
	0x03CB1C88 MADD X10, X10, X26, X8
	0x03CB1C8C MOVZ W11, 0x2
	0x03CB1C90 STRB W11, [X10 + 0x28]
	0x03CB1C94 STR S8, [X10 + 0x16C]
	0x03CB1C98 LDR X11, [X19 + 0xE0]
	0x03CB1C9C FMOV S0, W31
	0x03CB1CA0 STR S0, [X31 + 0x188]
	0x03CB1CA4 STR X11, [X10 + 0x48]
	0x03CB1CA8 LDR X11, [X19 + 0x68]
	0x03CB1CAC STR X11, [X10 + 0x40]
	0x03CB1CB0 LDR W11, [X19 + 0x78]
	0x03CB1CB4 STR W11, [X10 + 0x60]
	0x03CB1CB8 STR W23, [X19 + 0x78]
	0x03CB1CBC LDR X23, [X31 + 0x1C8]
	0x03CB1CC0 LDR W10, [X31 + 0x128C]
	0x03CB1CC4 MOVZ W11, 0xAD
	0x03CB1CC8 FMOV S0, W31
	0x03CB1CCC CMP W10, 0x3
	0x03CB1CD0 CCMP W10, W11, 0x4, NE
	0x03CB1CD4 FCSEL S13, S8, S0, NE
	0x03CB1CD8 LDR W11, [X8 + 0x18]
	0x03CB1CDC CMP W9, W11
	0x03CB1CE0 B.CS 0x3CB7C18
	0x03CB1CE4 SMADDL X8, X9, X26, X8
	0x03CB1CE8 STRH W10, [X8 + 0x20]
	0x03CB1CEC LDR V0, [X19 + 0xF4]
	0x03CB1CF0 STR S0, [X8 + 0x68]
	0x03CB1CF4 LDR W9, [X19 + 0x1AC]
	0x03CB1CF8 STR W9, [X8 + 0x170]
	0x03CB1CFC LDR X8, [X22]
	0x03CB1D00 CBZ X8, 0x3CB7C14
	0x03CB1D04 LDRSW X9, [X19 + 0x324]
	0x03CB1D08 LDR W10, [X8 + 0x18]
	0x03CB1D0C CMP W9, W10
	0x03CB1D10 B.CS 0x3CB7C18
	0x03CB1D14 LDR W10, [X19 + 0x1B0]
	0x03CB1D18 NOP
	0x03CB1D1C MADD X8, X9, X26, X8
	0x03CB1D20 STR W10, [X8 + 0x174]
	0x03CB1D24 LDR X8, [X22]
	0x03CB1D28 CBZ X8, 0x3CB7C14
	0x03CB1D2C LDRSW X9, [X19 + 0x324]
	0x03CB1D30 LDR W10, [X8 + 0x18]
	0x03CB1D34 CMP W9, W10
	0x03CB1D38 B.CS 0x3CB7C18
	0x03CB1D3C LDR W10, [X19 + 0x1B4]
	0x03CB1D40 NOP
	0x03CB1D44 MADD X8, X9, X26, X8
	0x03CB1D48 STR W10, [X8 + 0x17C]
	0x03CB1D4C LDR X8, [X22]
	0x03CB1D50 CBZ X8, 0x3CB7C14
	0x03CB1D54 LDR X9, [X31 + 0x108]
	0x03CB1D58 LDR W10, [X9 + 0x10]
	0x03CB1D5C LDR V0, [X9]
	0x03CB1D60 LDRSW X9, [X19 + 0x324]
	0x03CB1D64 STR W10, [X31 + 0x12A0]
	0x03CB1D68 STR V0, [X31 + 0x129]
	0x03CB1D6C LDR W10, [X8 + 0x18]
	0x03CB1D70 CMP W9, W10
	0x03CB1D74 B.CS 0x3CB7C18
	0x03CB1D78 LDR W10, [X31 + 0x12A0]
	0x03CB1D7C LDR V0, [X31 + 0x129]
	0x03CB1D80 NOP
	0x03CB1D84 MADD X8, X9, X26, X8
	0x03CB1D88 ADD X8, X8, 0x188
	0x03CB1D8C STR W10, [X8 + 0x10]
	0x03CB1D90 STR V0, [X8]
	0x03CB1D94 LDR X8, [X22]
	0x03CB1D98 CBZ X8, 0x3CB7C14
	0x03CB1D9C LDRSW X9, [X23]
	0x03CB1DA0 LDR W10, [X8 + 0x18]
	0x03CB1DA4 CMP W9, W10
	0x03CB1DA8 B.CS 0x3CB7C18
	0x03CB1DAC MADD X8, X9, X26, X8
	0x03CB1DB0 LDR W10, [X19 + 0x124]
	0x03CB1DB4 LDR X0, [X8 + 0x38]
	0x03CB1DB8 STR W10, [X8 + 0x19C]
	0x03CB1DBC CBNZ X0, 0x3CB1DD0
	0x03CB1DC0 LDR X8, [X19 + 0x1588]
	0x03CB1DC4 CBZ X8, 0x3CB7C14
	0x03CB1DC8 LDR X0, [X8 + 0x20]
	0x03CB1DCC CBZ X0, 0x3CB7C14
	0x03CB1DD0 ADD X8, X31, 0x1000
	0x03CB1DD4 ADD X8, X8, 0x290
	0x03CB1DD8 MOV X1, X31
	0x03CB1DDC BL 0x3C9C4A4
	0x03CB1DE0 LDR V0, [X31 + 0x129]
	0x03CB1DE4 LDR W8, [X31 + 0x12A0]
	0x03CB1DE8 LDR W22, [X31 + 0x128C]
	0x03CB1DEC STR V0, [X31 + 0x5C]
	0x03CB1DF0 LDR V0, [X31 + 0x5C]
	0x03CB1DF4 STR W8, [X31 + 0x5D0]
	0x03CB1DF8 MOV W8, W8
	0x03CB1DFC UBFM W9, W22, 0x10, 0x1F
	0x03CB1E00 STR V0, [X31 + 0x11E]
	0x03CB1E04 STR W8, [X31 + 0x11F0]
	0x03CB1E08 CBNZ W9, 0x3CB1E3C
	0x03CB1E0C ADRP X8, 0x444000
	0x03CB1E10 LDR X8, [X8 + 0x170]
	0x03CB1E14 LDR X0, [X8]
	0x03CB1E18 LDR W8, [X0 + 0xE0]
	0x03CB1E1C CBNZ W8, 0x3CB1E24
	0x03CB1E20 BL 0x1C16DFC
	0x03CB1E24 MOV W0, W22
	0x03CB1E28 MOV X1, X31
	0x03CB1E2C BL 0x3317FCC
	0x03CB1E30 AND W8, W0, 0x1
	0x03CB1E34 STR W8, [X31 + 0x1A0]
	0x03CB1E38 B 0x3CB1E40
	0x03CB1E3C STR W31, [X31 + 0x1A0]
	0x03CB1E40 STR X31, [X31 + 0x11D8]
	0x03CB1E44 STR X31, [X31 + 0x11D0]
	0x03CB1E48 LDRB W8, [X25 + 0xB4]
	0x03CB1E4C LDR V0, [X25 + 0xC0]
	0x03CB1E50 LDR X22, [X31 + 0x1D8]
	0x03CB1E54 STR S0, [X31 + 0x180]
	0x03CB1E58 CBZ W8, 0x3CB2058
	0x03CB1E5C LDR X9, [X19 + 0x1588]
	0x03CB1E60 CBZ X9, 0x3CB7C14
	0x03CB1E64 LDR W8, [X23]
	0x03CB1E68 LDR W21, [X9 + 0x28]
	0x03CB1E6C LDR W9, [X31 + 0xE4]
	0x03CB1E70 CMP W8, W9
	0x03CB1E74 B.GE 0x3CB1F48
	0x03CB1E78 LDR X9, [X22]
	0x03CB1E7C CBZ X9, 0x3CB7C14
	0x03CB1E80 LDR W10, [X9 + 0x18]
	0x03CB1E84 ADD W8, W8, 0x1
	0x03CB1E88 CMP W8, W10
	0x03CB1E8C B.CS 0x3CB7C18
	0x03CB1E90 SMADDL X8, X8, X26, X9
	0x03CB1E94 LDR X8, [X8 + 0x30]
	0x03CB1E98 CBZ X8, 0x3CB7C14
	0x03CB1E9C LDR X9, [X24]
	0x03CB1EA0 CBZ X9, 0x3CB7C14
	0x03CB1EA4 LDR X9, [X9 + 0x170]
	0x03CB1EA8 CBZ X9, 0x3CB7C14
	0x03CB1EAC LDR X0, [X9 + 0x40]
	0x03CB1EB0 CBZ X0, 0x3CB7C14
	0x03CB1EB4 ADRP X9, 0x4B0000
	0x03CB1EB8 LDR W8, [X8 + 0x28]
	0x03CB1EBC LDR X9, [X9 + 0xB20]
	0x03CB1EC0 ADD X2, X31, 0x1000
	0x03CB1EC4 ADD X2, X2, 0x180
	0x03CB1EC8 ORR W1, W21, W8, 0x10
	0x03CB1ECC LDR X3, [X9]
	0x03CB1ED0 BL 0x2B042E8
	0x03CB1ED4 TBZ X0, 0x0, 0x3CB1F44
	0x03CB1ED8 ADD X8, X31, 0x1000
	0x03CB1EDC ADD X0, X31, 0x1000
	0x03CB1EE0 ADD X8, X8, 0x290
	0x03CB1EE4 ADD X0, X0, 0x180
	0x03CB1EE8 MOV X1, X31
	0x03CB1EEC BL 0x3C9E6D0
	0x03CB1EF0 LDR V0, [X31 + 0x129]
	0x03CB1EF4 LDR W8, [X31 + 0x12A0]
	0x03CB1EF8 ADD X0, X31, 0x1000
	0x03CB1EFC ADD X0, X0, 0x160
	0x03CB1F00 MOV X1, X31
	0x03CB1F04 STR V0, [X31 + 0x116]
	0x03CB1F08 STR W8, [X31 + 0x1170]
	0x03CB1F0C BL 0x3C9E534
	0x03CB1F10 ADD X0, X31, 0x1000
	0x03CB1F14 ADD X0, X0, 0x180
	0x03CB1F18 MOV X1, X31
	0x03CB1F1C STR S0, [X31 + 0x11D0]
	0x03CB1F20 STR S1, [X31 + 0x11D4]
	0x03CB1F24 STR S2, [X31 + 0x11D8]
	0x03CB1F28 STR S3, [X31 + 0x11DC]
	0x03CB1F2C BL 0x3C9E6F8
	0x03CB1F30 LDR V1, [X31 + 0x180]
	0x03CB1F34 ANDS W31, W0, 0x100
	0x03CB1F38 FMOV S0, W31
	0x03CB1F3C FCSEL S1, S1, S0, EQ
	0x03CB1F40 STR S1, [X31 + 0x180]
	0x03CB1F44 LDR W8, [X23]
	0x03CB1F48 SUBS W8, W8, 0x1
	0x03CB1F4C B.LT 0x3CB2058
	0x03CB1F50 LDR X9, [X22]
	0x03CB1F54 CBZ X9, 0x3CB7C14
	0x03CB1F58 LDR W10, [X9 + 0x18]
	0x03CB1F5C CMP W8, W10
	0x03CB1F60 B.CS 0x3CB7C18
	0x03CB1F64 UMADDL X8, X8, X26, X9
	0x03CB1F68 LDR X8, [X8 + 0x30]
	0x03CB1F6C CBZ X8, 0x3CB7C14
	0x03CB1F70 LDR X9, [X24]
	0x03CB1F74 CBZ X9, 0x3CB7C14
	0x03CB1F78 LDR X9, [X9 + 0x170]
	0x03CB1F7C CBZ X9, 0x3CB7C14
	0x03CB1F80 LDR X0, [X9 + 0x40]
	0x03CB1F84 CBZ X0, 0x3CB7C14
	0x03CB1F88 ADRP X9, 0x4B0000
	0x03CB1F8C LDR W8, [X8 + 0x28]
	0x03CB1F90 LDR X9, [X9 + 0xB20]
	0x03CB1F94 ADD X2, X31, 0x1000
	0x03CB1F98 ADD X2, X2, 0x180
	0x03CB1F9C ORR W1, W8, W21, 0x10
	0x03CB1FA0 LDR X3, [X9]
	0x03CB1FA4 BL 0x2B042E8
	0x03CB1FA8 TBZ X0, 0x0, 0x3CB2058
	0x03CB1FAC MOV V12.16B, V8.16B
	0x03CB1FB0 LDR V8, [X31 + 0x11D0]
	0x03CB1FB4 LDR V9, [X31 + 0x11D4]
	0x03CB1FB8 LDR V10, [X31 + 0x11D8]
	0x03CB1FBC LDR V14, [X31 + 0x11DC]
	0x03CB1FC0 ADD X8, X31, 0x1000
	0x03CB1FC4 ADD X0, X31, 0x1000
	0x03CB1FC8 ADD X8, X8, 0x290
	0x03CB1FCC ADD X0, X0, 0x180
	0x03CB1FD0 MOV X1, X31
	0x03CB1FD4 BL 0x3C9E6E4
	0x03CB1FD8 LDR V0, [X31 + 0x129]
	0x03CB1FDC LDR W8, [X31 + 0x12A0]
	0x03CB1FE0 ADD X0, X31, 0x1000
	0x03CB1FE4 ADD X0, X0, 0x160
	0x03CB1FE8 MOV X1, X31
	0x03CB1FEC STR V0, [X31 + 0x116]
	0x03CB1FF0 STR W8, [X31 + 0x1170]
	0x03CB1FF4 BL 0x3C9E534
	0x03CB1FF8 MOV V4.16B, V0.16B
	0x03CB1FFC MOV V5.16B, V1.16B
	0x03CB2000 MOV V6.16B, V2.16B
	0x03CB2004 MOV V7.16B, V3.16B
	0x03CB2008 MOV V0.16B, V8.16B
	0x03CB200C MOV V1.16B, V9.16B
	0x03CB2010 MOV V2.16B, V10.16B
	0x03CB2014 MOV V3.16B, V14.16B
	0x03CB2018 MOV X0, X31
	0x03CB201C MOV V8.16B, V12.16B
	0x03CB2020 BL 0x3C9E394
	0x03CB2024 ADD X0, X31, 0x1000
	0x03CB2028 ADD X0, X0, 0x180
	0x03CB202C MOV X1, X31
	0x03CB2030 STR S0, [X31 + 0x11D0]
	0x03CB2034 STR S1, [X31 + 0x11D4]
	0x03CB2038 STR S2, [X31 + 0x11D8]
	0x03CB203C STR S3, [X31 + 0x11DC]
	0x03CB2040 BL 0x3C9E6F8
	0x03CB2044 LDR V1, [X31 + 0x180]
	0x03CB2048 ANDS W31, W0, 0x100
	0x03CB204C FMOV S0, W31
	0x03CB2050 FCSEL S1, S1, S0, EQ
	0x03CB2054 STR S1, [X31 + 0x180]
	0x03CB2058 LDR X21, [X22]
	0x03CB205C CBZ X21, 0x3CB7C14
	0x03CB2060 LDRSW X22, [X23]
	0x03CB2064 ADD X0, X31, 0x1000
	0x03CB2068 ADD X0, X0, 0x1D0
	0x03CB206C MOV X1, X31
	0x03CB2070 BL 0x3C9E384
	0x03CB2074 LDR W8, [X21 + 0x18]
	0x03CB2078 CMP W22, W8
	0x03CB207C B.CS 0x3CB7C18
	0x03CB2080 MADD X8, X22, X26, X21
	0x03CB2084 STR S0, [X8 + 0x160]
	0x03CB2088 ADRP X8, 0x4AF000
	0x03CB208C LDR X8, [X8 + 0xB48]
	0x03CB2090 LDR W22, [X31 + 0x128C]
	0x03CB2094 LDR X0, [X8]
	0x03CB2098 LDR W8, [X0 + 0xE0]
	0x03CB209C CBNZ W8, 0x3CB20A4
	0x03CB20A0 BL 0x1C16DFC
	0x03CB20A4 MOV W0, W22
	0x03CB20A8 MOV X1, X31
	0x03CB20AC BL 0x3CC92C4
	0x03CB20B0 LDR W21, [X23]
	0x03CB20B4 MOV W22, W0
	0x03CB20B8 STR S8, [X31 + 0x15C]
	0x03CB20BC TBZ X0, 0x0, 0x3CB20C8
	0x03CB20C0 STR W21, [X19 + 0x19C4]
	0x03CB20C4 B 0x3CB25E0
	0x03CB20C8 SUBS W9, W21, 0x1
	0x03CB20CC CSET W8, LT
	0x03CB20D0 ORR W8, W22, W8, 0x0
	0x03CB20D4 TBNZ X8, 0x0, 0x3CB25E0
	0x03CB20D8 LDR W8, [X19 + 0x19C4]
	0x03CB20DC MOVZ W10, 0x80000000
	0x03CB20E0 CMP W8, W10
	0x03CB20E4 B.EQ 0x3CB2260
	0x03CB20E8 CMP W8, W9
	0x03CB20EC B.NE 0x3CB2260
	0x03CB20F0 LDR X9, [X31 + 0x1D8]
	0x03CB20F4 LDR X9, [X9]
	0x03CB20F8 CBZ X9, 0x3CB7C14
	0x03CB20FC LDR W10, [X9 + 0x18]
	0x03CB2100 SXTW X8, W8
	0x03CB2104 CMP W8, W10
	0x03CB2108 B.CS 0x3CB7C18
	0x03CB210C MADD X8, X8, X26, X9
	0x03CB2110 LDR X0, [X8 + 0x30]
	0x03CB2114 CBZ X0, 0x3CB7C14
	0x03CB2118 MOV X1, X31
	0x03CB211C BL 0x3CAC94C
	0x03CB2120 CBZ X0, 0x3CB7C14
	0x03CB2124 MOV X1, X31
	0x03CB2128 BL 0x3C9C494
	0x03CB212C LDR X8, [X19 + 0x1588]
	0x03CB2130 CBZ X8, 0x3CB7C14
	0x03CB2134 MOV W28, W0
	0x03CB2138 MOV X0, X8
	0x03CB213C MOV X1, X31
	0x03CB2140 BL 0x3CA0098
	0x03CB2144 LDR X8, [X24]
	0x03CB2148 CBZ X8, 0x3CB7C14
	0x03CB214C MOV W25, W0
	0x03CB2150 MOV X0, X8
	0x03CB2154 MOV X1, X31
	0x03CB2158 BL 0x3C9F0F4
	0x03CB215C CBZ X0, 0x3CB7C14
	0x03CB2160 LDR X0, [X0 + 0x48]
	0x03CB2164 CBZ X0, 0x3CB7C14
	0x03CB2168 ADRP X8, 0x4AF000
	0x03CB216C LDR X8, [X8 + 0xB30]
	0x03CB2170 ADD X2, X31, 0x1000
	0x03CB2174 ORR W1, W28, W25, 0x10
	0x03CB2178 ADD X2, X2, 0x148
	0x03CB217C LDR X3, [X8]
	0x03CB2180 BL 0x2B0A5E0
	0x03CB2184 LDR X25, [X31 + 0x1D0]
	0x03CB2188 TBZ X0, 0x0, 0x3CB25E0
	0x03CB218C LDR X8, [X31 + 0x1D8]
	0x03CB2190 LDR X8, [X8]
	0x03CB2194 CBZ X8, 0x3CB7C14
	0x03CB2198 LDRSW X9, [X19 + 0x19C4]
	0x03CB219C LDR W10, [X8 + 0x18]
	0x03CB21A0 CMP W9, W10
	0x03CB21A4 B.CS 0x3CB7C18
	0x03CB21A8 MADD X8, X9, X26, X8
	0x03CB21AC LDR V0, [X8 + 0x148]
	0x03CB21B0 LDR V1, [X19 + 0x2F4]
	0x03CB21B4 ADD X0, X31, 0x1000
	0x03CB21B8 ADD X0, X0, 0x148
	0x03CB21BC MOV X1, X31
	0x03CB21C0 FSUB S0, S0, S1
	0x03CB21C4 FDIV S9, S0, S13
	0x03CB21C8 BL 0x3C9E8B8
	0x03CB21CC ADD X0, X31, 0x1000
	0x03CB21D0 ADD X0, X0, 0x140
	0x03CB21D4 MOV X1, X31
	0x03CB21D8 STR S0, [X31 + 0x1140]
	0x03CB21DC STR S1, [X31 + 0x1144]
	0x03CB21E0 BL 0x3C9E890
	0x03CB21E4 ADD X0, X31, 0x1000
	0x03CB21E8 ADD X0, X0, 0x148
	0x03CB21EC MOV X1, X31
	0x03CB21F0 MOV V8.16B, V0.16B
	0x03CB21F4 BL 0x3C9E8C8
	0x03CB21F8 ADD X0, X31, 0x1000
	0x03CB21FC ADD X0, X0, 0x138
	0x03CB2200 MOV X1, X31
	0x03CB2204 STR S0, [X31 + 0x1138]
	0x03CB2208 STR S1, [X31 + 0x113C]
	0x03CB220C BL 0x3C9E8A0
	0x03CB2210 FADD S1, S9, S8
	0x03CB2214 ADD X0, X31, 0x1000
	0x03CB2218 FSUB S0, S1, S0
	0x03CB221C ADD X0, X0, 0x1D0
	0x03CB2220 MOV X1, X31
	0x03CB2224 BL 0x3C9E36C
	0x03CB2228 ADD X0, X31, 0x1000
	0x03CB222C ADD X0, X0, 0x148
	0x03CB2230 MOV X1, X31
	0x03CB2234 BL 0x3C9E8B8
	0x03CB2238 ADD X0, X31, 0x1000
	0x03CB223C ADD X0, X0, 0x140
	0x03CB2240 MOV X1, X31
	0x03CB2244 STR S0, [X31 + 0x1140]
	0x03CB2248 STR S1, [X31 + 0x1144]
	0x03CB224C BL 0x3C9E898
	0x03CB2250 ADD X0, X31, 0x1000
	0x03CB2254 MOV V8.16B, V0.16B
	0x03CB2258 ADD X0, X0, 0x148
	0x03CB225C B 0x3CB25A4
	0x03CB2260 SUBS W21, W21, 0x1
	0x03CB2264 B.LT 0x3CB242C
	0x03CB2268 LDR W8, [X19 + 0x19C4]
	0x03CB226C CMP W21, W8
	0x03CB2270 B.EQ 0x3CB242C
	0x03CB2274 LDR X8, [X31 + 0x1D8]
	0x03CB2278 LDR X8, [X8]
	0x03CB227C CBZ X8, 0x3CB7C14
	0x03CB2280 LDR W9, [X8 + 0x18]
	0x03CB2284 CMP W21, W9
	0x03CB2288 B.CS 0x3CB7C18
	0x03CB228C UMADDL X8, X21, X26, X8
	0x03CB2290 LDR X0, [X8 + 0x30]
	0x03CB2294 CBZ X0, 0x3CB7C14
	0x03CB2298 MOV X1, X31
	0x03CB229C BL 0x3CAC94C
	0x03CB22A0 CBZ X0, 0x3CB7C14
	0x03CB22A4 MOV X1, X31
	0x03CB22A8 BL 0x3C9C494
	0x03CB22AC LDR X8, [X19 + 0x1588]
	0x03CB22B0 CBZ X8, 0x3CB7C14
	0x03CB22B4 MOV W28, W0
	0x03CB22B8 MOV X0, X8
	0x03CB22BC MOV X1, X31
	0x03CB22C0 BL 0x3CA0098
	0x03CB22C4 LDR X8, [X24]
	0x03CB22C8 CBZ X8, 0x3CB7C14
	0x03CB22CC MOV W25, W0
	0x03CB22D0 MOV X0, X8
	0x03CB22D4 MOV X1, X31
	0x03CB22D8 BL 0x3C9F0F4
	0x03CB22DC CBZ X0, 0x3CB7C14
	0x03CB22E0 LDR X0, [X0 + 0x50]
	0x03CB22E4 CBZ X0, 0x3CB7C14
	0x03CB22E8 ADRP X8, 0x4AF000
	0x03CB22EC LDR X8, [X8 + 0xB28]
	0x03CB22F0 ADD X2, X31, 0x1000
	0x03CB22F4 ORR W1, W28, W25, 0x10
	0x03CB22F8 ADD X2, X2, 0x120
	0x03CB22FC LDR X3, [X8]
	0x03CB2300 BL 0x2B0D944
	0x03CB2304 LDR X25, [X31 + 0x1D0]
	0x03CB2308 TBZ X0, 0x0, 0x3CB2260
	0x03CB230C LDR X8, [X31 + 0x1D8]
	0x03CB2310 LDR X8, [X8]
	0x03CB2314 CBZ X8, 0x3CB7C14
	0x03CB2318 LDR W9, [X8 + 0x18]
	0x03CB231C CMP W21, W9
	0x03CB2320 B.CS 0x3CB7C18
	0x03CB2324 MOV W9, W21
	0x03CB2328 LDR V1, [X19 + 0x2E0]
	0x03CB232C LDR V5, [X31 + 0x184]
	0x03CB2330 LDR V2, [X19 + 0x180]
	0x03CB2334 NOP
	0x03CB2338 MADD X8, X9, X26, X8
	0x03CB233C LDR V0, [X19 + 0x2F4]
	0x03CB2340 LDR V3, [X8 + 0x148]
	0x03CB2344 LDR V4, [X8 + 0x150]
	0x03CB2348 FSUB S1, S5, S1
	0x03CB234C FADD S1, S1, S2
	0x03CB2350 ADD X0, X31, 0x1000
	0x03CB2354 FSUB S0, S3, S0
	0x03CB2358 FSUB S1, S4, S1
	0x03CB235C ADD X0, X0, 0x120
	0x03CB2360 MOV X1, X31
	0x03CB2364 FDIV S10, S0, S13
	0x03CB2368 FDIV S9, S1, S13
	0x03CB236C BL 0x3C9E8D8
	0x03CB2370 ADD X0, X31, 0x1000
	0x03CB2374 ADD X0, X0, 0x140
	0x03CB2378 MOV X1, X31
	0x03CB237C STR S0, [X31 + 0x1140]
	0x03CB2380 STR S1, [X31 + 0x1144]
	0x03CB2384 BL 0x3C9E890
	0x03CB2388 ADD X0, X31, 0x1000
	0x03CB238C ADD X0, X0, 0x120
	0x03CB2390 MOV X1, X31
	0x03CB2394 MOV V8.16B, V0.16B
	0x03CB2398 BL 0x3C9E8E8
	0x03CB239C ADD X0, X31, 0x1000
	0x03CB23A0 ADD X0, X0, 0x138
	0x03CB23A4 MOV X1, X31
	0x03CB23A8 STR S0, [X31 + 0x1138]
	0x03CB23AC STR S1, [X31 + 0x113C]
	0x03CB23B0 BL 0x3C9E8A0
	0x03CB23B4 FADD S1, S10, S8
	0x03CB23B8 ADD X0, X31, 0x1000
	0x03CB23BC FSUB S0, S1, S0
	0x03CB23C0 ADD X0, X0, 0x1D0
	0x03CB23C4 MOV X1, X31
	0x03CB23C8 BL 0x3C9E36C
	0x03CB23CC ADD X0, X31, 0x1000
	0x03CB23D0 ADD X0, X0, 0x120
	0x03CB23D4 MOV X1, X31
	0x03CB23D8 BL 0x3C9E8D8
	0x03CB23DC ADD X0, X31, 0x1000
	0x03CB23E0 ADD X0, X0, 0x140
	0x03CB23E4 MOV X1, X31
	0x03CB23E8 STR S0, [X31 + 0x1140]
	0x03CB23EC STR S1, [X31 + 0x1144]
	0x03CB23F0 BL 0x3C9E898
	0x03CB23F4 ADD X0, X31, 0x1000
	0x03CB23F8 ADD X0, X0, 0x120
	0x03CB23FC MOV X1, X31
	0x03CB2400 MOV V8.16B, V0.16B
	0x03CB2404 BL 0x3C9E8E8
	0x03CB2408 ADD X0, X31, 0x1000
	0x03CB240C ADD X0, X0, 0x138
	0x03CB2410 MOV X1, X31
	0x03CB2414 STR S0, [X31 + 0x1138]
	0x03CB2418 STR S1, [X31 + 0x113C]
	0x03CB241C BL 0x3C9E8A8
	0x03CB2420 FADD S1, S9, S8
	0x03CB2424 FSUB S0, S1, S0
	0x03CB2428 B 0x3CB25C8
	0x03CB242C LDRSW X8, [X19 + 0x19C4]
	0x03CB2430 MOVZ W9, 0x80000000
	0x03CB2434 CMP W8, W9
	0x03CB2438 B.EQ 0x3CB25E0
	0x03CB243C LDR X9, [X31 + 0x1D8]
	0x03CB2440 LDR X9, [X9]
	0x03CB2444 CBZ X9, 0x3CB7C14
	0x03CB2448 LDR W10, [X9 + 0x18]
	0x03CB244C CMP W8, W10
	0x03CB2450 B.CS 0x3CB7C18
	0x03CB2454 MADD X8, X8, X26, X9
	0x03CB2458 LDR X0, [X8 + 0x30]
	0x03CB245C CBZ X0, 0x3CB7C14
	0x03CB2460 MOV X1, X31
	0x03CB2464 BL 0x3CAC94C
	0x03CB2468 CBZ X0, 0x3CB7C14
	0x03CB246C MOV X1, X31
	0x03CB2470 BL 0x3C9C494
	0x03CB2474 LDR X8, [X19 + 0x1588]
	0x03CB2478 CBZ X8, 0x3CB7C14
	0x03CB247C MOV W28, W0
	0x03CB2480 MOV X0, X8
	0x03CB2484 MOV X1, X31
	0x03CB2488 BL 0x3CA0098
	0x03CB248C LDR X8, [X24]
	0x03CB2490 CBZ X8, 0x3CB7C14
	0x03CB2494 MOV W25, W0
	0x03CB2498 MOV X0, X8
	0x03CB249C MOV X1, X31
	0x03CB24A0 BL 0x3C9F0F4
	0x03CB24A4 CBZ X0, 0x3CB7C14
	0x03CB24A8 LDR X0, [X0 + 0x48]
	0x03CB24AC CBZ X0, 0x3CB7C14
	0x03CB24B0 ADRP X8, 0x4AF000
	0x03CB24B4 LDR X8, [X8 + 0xB30]
	0x03CB24B8 ADD X2, X31, 0x1000
	0x03CB24BC ORR W1, W28, W25, 0x10
	0x03CB24C0 ADD X2, X2, 0x108
	0x03CB24C4 LDR X3, [X8]
	0x03CB24C8 BL 0x2B0A5E0
	0x03CB24CC LDR X25, [X31 + 0x1D0]
	0x03CB24D0 TBZ X0, 0x0, 0x3CB25E0
	0x03CB24D4 LDR X8, [X31 + 0x1D8]
	0x03CB24D8 LDR X8, [X8]
	0x03CB24DC CBZ X8, 0x3CB7C14
	0x03CB24E0 LDRSW X9, [X19 + 0x19C4]
	0x03CB24E4 LDR W10, [X8 + 0x18]
	0x03CB24E8 CMP W9, W10
	0x03CB24EC B.CS 0x3CB7C18
	0x03CB24F0 MADD X8, X9, X26, X8
	0x03CB24F4 LDR V0, [X8 + 0x148]
	0x03CB24F8 LDR V1, [X19 + 0x2F4]
	0x03CB24FC ADD X0, X31, 0x1000
	0x03CB2500 ADD X0, X0, 0x108
	0x03CB2504 MOV X1, X31
	0x03CB2508 FSUB S0, S0, S1
	0x03CB250C FDIV S9, S0, S13
	0x03CB2510 BL 0x3C9E8B8
	0x03CB2514 ADD X0, X31, 0x1000
	0x03CB2518 ADD X0, X0, 0x140
	0x03CB251C MOV X1, X31
	0x03CB2520 STR S0, [X31 + 0x1140]
	0x03CB2524 STR S1, [X31 + 0x1144]
	0x03CB2528 BL 0x3C9E890
	0x03CB252C ADD X0, X31, 0x1000
	0x03CB2530 ADD X0, X0, 0x108
	0x03CB2534 MOV X1, X31
	0x03CB2538 MOV V8.16B, V0.16B
	0x03CB253C BL 0x3C9E8C8
	0x03CB2540 ADD X0, X31, 0x1000
	0x03CB2544 ADD X0, X0, 0x138
	0x03CB2548 MOV X1, X31
	0x03CB254C STR S0, [X31 + 0x1138]
	0x03CB2550 STR S1, [X31 + 0x113C]
	0x03CB2554 BL 0x3C9E8A0
	0x03CB2558 FADD S1, S9, S8
	0x03CB255C ADD X0, X31, 0x1000
	0x03CB2560 FSUB S0, S1, S0
	0x03CB2564 ADD X0, X0, 0x1D0
	0x03CB2568 MOV X1, X31
	0x03CB256C BL 0x3C9E36C
	0x03CB2570 ADD X0, X31, 0x1000
	0x03CB2574 ADD X0, X0, 0x108
	0x03CB2578 MOV X1, X31
	0x03CB257C BL 0x3C9E8B8
	0x03CB2580 ADD X0, X31, 0x1000
	0x03CB2584 ADD X0, X0, 0x140
	0x03CB2588 MOV X1, X31
	0x03CB258C STR S0, [X31 + 0x1140]
	0x03CB2590 STR S1, [X31 + 0x1144]
	0x03CB2594 BL 0x3C9E898
	0x03CB2598 ADD X0, X31, 0x1000
	0x03CB259C MOV V8.16B, V0.16B
	0x03CB25A0 ADD X0, X0, 0x108
	0x03CB25A4 MOV X1, X31
	0x03CB25A8 BL 0x3C9E8C8
	0x03CB25AC ADD X0, X31, 0x1000
	0x03CB25B0 ADD X0, X0, 0x138
	0x03CB25B4 MOV X1, X31
	0x03CB25B8 STR S0, [X31 + 0x1138]
	0x03CB25BC STR S1, [X31 + 0x113C]
	0x03CB25C0 BL 0x3C9E8A8
	0x03CB25C4 FSUB S0, S8, S0
	0x03CB25C8 ADD X0, X31, 0x1000
	0x03CB25CC ADD X0, X0, 0x1D0
	0x03CB25D0 MOV X1, X31
	0x03CB25D4 BL 0x3C9E37C
	0x03CB25D8 FMOV S0, W31
	0x03CB25DC STR S0, [X31 + 0x180]
	0x03CB25E0 ADD X0, X31, 0x1000
	0x03CB25E4 ADD X0, X0, 0x1D0
	0x03CB25E8 MOV X1, X31
	0x03CB25EC BL 0x3C9E374
	0x03CB25F0 ADD X0, X31, 0x1000
	0x03CB25F4 ADD X0, X0, 0x1D0
	0x03CB25F8 MOV X1, X31
	0x03CB25FC MOV V10.16B, V0.16B
	0x03CB2600 BL 0x3C9E374
	0x03CB2604 LDRB W8, [X25 + 0xB6]
	0x03CB2608 MOV V12.16B, V0.16B
	0x03CB260C CBZ W8, 0x3CB266C
	0x03CB2610 LDR V8, [X19 + 0x2F4]
	0x03CB2614 ADD X0, X31, 0x1000
	0x03CB2618 ADD X0, X0, 0x1E0
	0x03CB261C MOV X1, X31
	0x03CB2620 BL 0x3C9C2EC
	0x03CB2624 LDR V1, [X19 + 0x1594]
	0x03CB2628 FMOV S2, 1
	0x03CB262C LDR W8, [X31 + 0x1A0]
	0x03CB2630 FSUB S1, S2, S1
	0x03CB2634 FMUL S0, S0, S1
	0x03CB2638 FMUL S0, S13, S0
	0x03CB263C FSUB S0, S8, S0
	0x03CB2640 STR S0, [X19 + 0x2F4]
	0x03CB2644 CBNZ W8, 0x3CB2658
	0x03CB2648 LDR W8, [X31 + 0x128C]
	0x03CB264C MOVZ W9, 0x200B
	0x03CB2650 CMP W8, W9
	0x03CB2654 B.NE 0x3CB266C
	0x03CB2658 LDR V1, [X25 + 0xC4]
	0x03CB265C LDR V2, [X31 + 0x150]
	0x03CB2660 FMUL S1, S2, S1
	0x03CB2664 FSUB S0, S0, S1
	0x03CB2668 STR S0, [X19 + 0x2F4]
	0x03CB266C LDR V9, [X19 + 0x2F0]
	0x03CB2670 FCMP S9, 0x0
	0x03CB2674 B.EQ 0x3CB26D4
	0x03CB2678 ADD X0, X31, 0x1000
	0x03CB267C ADD X0, X0, 0x1E0
	0x03CB2680 MOV X1, X31
	0x03CB2684 BL 0x3C9C2CC
	0x03CB2688 ADD X0, X31, 0x1000
	0x03CB268C ADD X0, X0, 0x1E0
	0x03CB2690 MOV X1, X31
	0x03CB2694 MOV V8.16B, V0.16B
	0x03CB2698 BL 0x3C9C2DC
	0x03CB269C FMOV S3, 0.5
	0x03CB26A0 LDR V1, [X19 + 0x1594]
	0x03CB26A4 FMUL S2, S9, S3
	0x03CB26A8 FMUL S3, S8, S3
	0x03CB26AC FADD S0, S3, S0
	0x03CB26B0 FMUL S0, S13, S0
	0x03CB26B4 LDR V3, [X19 + 0x2F4]
	0x03CB26B8 FSUB S0, S2, S0
	0x03CB26BC FMOV S2, 1
	0x03CB26C0 FSUB S1, S2, S1
	0x03CB26C4 FMUL S9, S1, S0
	0x03CB26C8 FADD S0, S3, S9
	0x03CB26CC STR S0, [X19 + 0x2F4]
	0x03CB26D0 B 0x3CB26D8
	0x03CB26D4 FMOV S9, W31
	0x03CB26D8 ADRP X9, 0x441000
	0x03CB26DC LDR X9, [X9 + 0x598]
	0x03CB26E0 MOV W21, W31
	0x03CB26E4 CBNZ W20, 0x3CB26FC
	0x03CB26E8 LDRB W8, [X27]
	0x03CB26EC CMP W8, 0x1
	0x03CB26F0 B.NE 0x3CB26FC
	0x03CB26F4 LDR W8, [X19 + 0x124]
	0x03CB26F8 AND W21, W8, 0x1
	0x03CB26FC LDR X0, [X9]
	0x03CB2700 LDR X25, [X19 + 0x70]
	0x03CB2704 LDR W8, [X0 + 0xE0]
	0x03CB2708 CBNZ W8, 0x3CB2710
	0x03CB270C BL 0x1C16DFC
	0x03CB2710 MOV X0, X25
	0x03CB2714 MOV X1, X31
	0x03CB2718 MOV X2, X31
	0x03CB271C BL 0x3C354F8
	0x03CB2720 STR S9, [X31 + 0xF4]
	0x03CB2724 STR S10, [X31 + 0x164]
	0x03CB2728 STR S12, [X31 + 0x160]
	0x03CB272C CBZ W21, 0x3CB2824
	0x03CB2730 FMOV S12, W31
	0x03CB2734 TBZ X0, 0x0, 0x3CB2808
	0x03CB2738 ADRP X21, 0x4AF000
	0x03CB273C LDR X21, [X21 + 0x268]
	0x03CB2740 LDR X25, [X19 + 0x70]
	0x03CB2744 LDR X0, [X21]
	0x03CB2748 LDR W8, [X0 + 0xE0]
	0x03CB274C CBNZ W8, 0x3CB2754
	0x03CB2750 BL 0x1C16DFC
	0x03CB2754 CBZ X25, 0x3CB7C14
	0x03CB2758 LDR X8, [X21]
	0x03CB275C MOV X0, X25
	0x03CB2760 MOV X2, X31
	0x03CB2764 LDR X8, [X8 + 0xB8]
	0x03CB2768 LDR W1, [X8 + 0x6C]
	0x03CB276C BL 0x3C14D08
	0x03CB2770 TBZ X0, 0x0, 0x3CB2808
	0x03CB2774 LDR X0, [X21]
	0x03CB2778 LDR X25, [X19 + 0x70]
	0x03CB277C LDR W8, [X0 + 0xE0]
	0x03CB2780 CBNZ W8, 0x3CB2788
	0x03CB2784 BL 0x1C16DFC
	0x03CB2788 CBZ X25, 0x3CB7C14
	0x03CB278C LDR X8, [X21]
	0x03CB2790 MOV X0, X25
	0x03CB2794 MOV X2, X31
	0x03CB2798 LDR X8, [X8 + 0xB8]
	0x03CB279C LDR W1, [X8 + 0x6C]
	0x03CB27A0 BL 0x3C15F98
	0x03CB27A4 LDR X0, [X24]
	0x03CB27A8 CBZ X0, 0x3CB7C14
	0x03CB27AC MOV X1, X31
	0x03CB27B0 MOV V8.16B, V0.16B
	0x03CB27B4 BL 0x3C9F144
	0x03CB27B8 LDR X0, [X19 + 0x70]
	0x03CB27BC LDR X25, [X31 + 0x1D0]
	0x03CB27C0 CBZ X0, 0x3CB7C14
	0x03CB27C4 LDR X8, [X21]
	0x03CB27C8 MOV X2, X31
	0x03CB27CC MOV V10.16B, V0.16B
	0x03CB27D0 LDR X8, [X8 + 0xB8]
	0x03CB27D4 LDR W1, [X8 + 0xE4]
	0x03CB27D8 BL 0x3C15F98
	0x03CB27DC FMOV S1, 0.25
	0x03CB27E0 FMUL S1, S10, S1
	0x03CB27E4 FMUL S1, S8, S1
	0x03CB27E8 FMUL S12, S1, S0
	0x03CB27EC LDR V0, [X31 + 0x188]
	0x03CB27F0 FADD S0, S0, S12
	0x03CB27F4 FCMP S0, S8
	0x03CB27F8 B.LE 0x3CB280C
	0x03CB27FC FSUB S0, S8, S12
	0x03CB2800 STR S0, [X31 + 0x188]
	0x03CB2804 B 0x3CB280C
	0x03CB2808 LDR X25, [X31 + 0x1D0]
	0x03CB280C LDR X0, [X24]
	0x03CB2810 CBZ X0, 0x3CB7C14
	0x03CB2814 MOV X1, X31
	0x03CB2818 BL 0x3C9F154
	0x03CB281C STR S0, [X31 + 0x140]
	0x03CB2820 B 0x3CB2934
	0x03CB2824 FMOV S0, W31
	0x03CB2828 STR S0, [X31 + 0x140]
	0x03CB282C TBZ X0, 0x0, 0x3CB292C
	0x03CB2830 ADRP X21, 0x4AF000
	0x03CB2834 LDR X21, [X21 + 0x268]
	0x03CB2838 LDR X25, [X19 + 0x70]
	0x03CB283C LDR X0, [X21]
	0x03CB2840 LDR W8, [X0 + 0xE0]
	0x03CB2844 CBNZ W8, 0x3CB284C
	0x03CB2848 BL 0x1C16DFC
	0x03CB284C CBZ X25, 0x3CB7C14
	0x03CB2850 LDR X8, [X21]
	0x03CB2854 MOV X0, X25
	0x03CB2858 MOV X2, X31
	0x03CB285C LDR X8, [X8 + 0xB8]
	0x03CB2860 LDR W1, [X8 + 0x6C]
	0x03CB2864 BL 0x3C14D08
	0x03CB2868 TBZ X0, 0x0, 0x3CB292C
	0x03CB286C LDR X0, [X21]
	0x03CB2870 LDR X25, [X19 + 0x70]
	0x03CB2874 LDR W8, [X0 + 0xE0]
	0x03CB2878 CBNZ W8, 0x3CB2880
	0x03CB287C BL 0x1C16DFC
	0x03CB2880 CBZ X25, 0x3CB7C14
	0x03CB2884 LDR X8, [X21]
	0x03CB2888 MOV X0, X25
	0x03CB288C MOV X2, X31
	0x03CB2890 LDR X8, [X8 + 0xB8]
	0x03CB2894 LDR W1, [X8 + 0xE4]
	0x03CB2898 BL 0x3C14D08
	0x03CB289C TBZ X0, 0x0, 0x3CB292C
	0x03CB28A0 LDR X0, [X21]
	0x03CB28A4 LDR X25, [X19 + 0x70]
	0x03CB28A8 LDR W8, [X0 + 0xE0]
	0x03CB28AC CBNZ W8, 0x3CB28B4
	0x03CB28B0 BL 0x1C16DFC
	0x03CB28B4 CBZ X25, 0x3CB7C14
	0x03CB28B8 LDR X8, [X21]
	0x03CB28BC MOV X0, X25
	0x03CB28C0 MOV X2, X31
	0x03CB28C4 LDR X8, [X8 + 0xB8]
	0x03CB28C8 LDR W1, [X8 + 0x6C]
	0x03CB28CC BL 0x3C15F98
	0x03CB28D0 LDR X8, [X24]
	0x03CB28D4 CBZ X8, 0x3CB7C14
	0x03CB28D8 LDR X0, [X19 + 0x70]
	0x03CB28DC LDR X25, [X31 + 0x1D0]
	0x03CB28E0 CBZ X0, 0x3CB7C14
	0x03CB28E4 LDR X9, [X21]
	0x03CB28E8 LDR V9, [X8 + 0x188]
	0x03CB28EC MOV X2, X31
	0x03CB28F0 MOV V8.16B, V0.16B
	0x03CB28F4 LDR X9, [X9 + 0xB8]
	0x03CB28F8 LDR W1, [X9 + 0xE4]
	0x03CB28FC BL 0x3C15F98
	0x03CB2900 FMOV S1, 0.25
	0x03CB2904 FMUL S1, S9, S1
	0x03CB2908 FMUL S1, S8, S1
	0x03CB290C FMUL S12, S0, S1
	0x03CB2910 LDR V0, [X31 + 0x188]
	0x03CB2914 FADD S0, S0, S12
	0x03CB2918 FCMP S0, S8
	0x03CB291C B.LE 0x3CB2934
	0x03CB2920 FSUB S0, S8, S12
	0x03CB2924 STR S0, [X31 + 0x188]
	0x03CB2928 B 0x3CB2934
	0x03CB292C LDR X25, [X31 + 0x1D0]
	0x03CB2930 FMOV S12, W31
	0x03CB2934 LDR V9, [X19 + 0x2F4]
	0x03CB2938 ADD X0, X31, 0x1000
	0x03CB293C ADD X0, X0, 0x1E0
	0x03CB2940 MOV X1, X31
	0x03CB2944 BL 0x3C9C2DC
	0x03CB2948 LDR V10, [X19 + 0x19A8]
	0x03CB294C ADD X0, X31, 0x1000
	0x03CB2950 ADD X0, X0, 0x1D0
	0x03CB2954 MOV X1, X31
	0x03CB2958 MOV V8.16B, V0.16B
	0x03CB295C BL 0x3C9E364
	0x03CB2960 LDR V14, [X31 + 0x188]
	0x03CB2964 LDR V1, [X19 + 0x1594]
	0x03CB2968 FMUL S2, S8, S10
	0x03CB296C FMOV S15, 1
	0x03CB2970 FSUB S2, S2, S14
	0x03CB2974 FSUB S2, S2, S12
	0x03CB2978 FADD S0, S0, S2
	0x03CB297C FMUL S0, S13, S0
	0x03CB2980 FSUB S1, S15, S1
	0x03CB2984 ADD X0, X31, 0x1000
	0x03CB2988 FMUL S0, S1, S0
	0x03CB298C ADD X0, X0, 0x1E0
	0x03CB2990 MOV X1, X31
	0x03CB2994 FADD S9, S9, S0
	0x03CB2998 BL 0x3C9C2E4
	0x03CB299C ADD X0, X31, 0x1000
	0x03CB29A0 ADD X0, X0, 0x1D0
	0x03CB29A4 MOV X1, X31
	0x03CB29A8 MOV V8.16B, V0.16B
	0x03CB29AC BL 0x3C9E374
	0x03CB29B0 FADD S3, S14, S8
	0x03CB29B4 FADD S0, S3, S0
	0x03CB29B8 LDR V3, [X31 + 0x184]
	0x03CB29BC LDR V1, [X19 + 0x2E0]
	0x03CB29C0 LDR V2, [X19 + 0x180]
	0x03CB29C4 FMUL S0, S13, S0
	0x03CB29C8 FADD S0, S3, S0
	0x03CB29CC ADD X0, X31, 0x1000
	0x03CB29D0 FSUB S0, S0, S1
	0x03CB29D4 ADD X0, X0, 0x1E0
	0x03CB29D8 MOV X1, X31
	0x03CB29DC FADD S10, S2, S0
	0x03CB29E0 BL 0x3C9C2D4
	0x03CB29E4 FADD S8, S14, S14
	0x03CB29E8 FADD S0, S8, S0
	0x03CB29EC FMUL S0, S13, S0
	0x03CB29F0 ADD X0, X31, 0x1000
	0x03CB29F4 FSUB S0, S10, S0
	0x03CB29F8 ADD X0, X0, 0x1E0
	0x03CB29FC MOV X1, X31
	0x03CB2A00 STR S0, [X31 + 0x17C]
	0x03CB2A04 BL 0x3C9C2CC
	0x03CB2A08 LDR V1, [X19 + 0x19A8]
	0x03CB2A0C LDR V2, [X19 + 0x1594]
	0x03CB2A10 FADD S3, S12, S12
	0x03CB2A14 STR S9, [X31 + 0x1B4]
	0x03CB2A18 FMUL S0, S0, S1
	0x03CB2A1C FADD S0, S8, S0
	0x03CB2A20 FADD S0, S3, S0
	0x03CB2A24 FMUL S0, S13, S0
	0x03CB2A28 FSUB S1, S15, S2
	0x03CB2A2C FMUL S0, S1, S0
	0x03CB2A30 FADD S4, S9, S0
	0x03CB2A34 CBNZ W20, 0x3CB2A4C
	0x03CB2A38 LDRB W8, [X27]
	0x03CB2A3C CMP W8, 0x1
	0x03CB2A40 B.NE 0x3CB2A4C
	0x03CB2A44 LDRB W8, [X19 + 0x124]
	0x03CB2A48 TBNZ X8, 0x1, 0x3CB2A58
	0x03CB2A4C LDR V5, [X31 + 0x1B4]
	0x03CB2A50 MOV V15.16B, V4.16B
	0x03CB2A54 B 0x3CB2B68
	0x03CB2A58 LDR X8, [X19 + 0x68]
	0x03CB2A5C STR S4, [X31 + 0x118]
	0x03CB2A60 CBZ X8, 0x3CB7C14
	0x03CB2A64 LDR V9, [X19 + 0x19A4]
	0x03CB2A68 ADD X0, X8, 0xB0
	0x03CB2A6C MOV X1, X31
	0x03CB2A70 BL 0x3C9BFC8
	0x03CB2A74 LDR X8, [X24]
	0x03CB2A78 CBZ X8, 0x3CB7C14
	0x03CB2A7C ADD X0, X8, 0xB0
	0x03CB2A80 MOV X1, X31
	0x03CB2A84 MOV V8.16B, V0.16B
	0x03CB2A88 BL 0x3C9BFE8
	0x03CB2A8C LDR X8, [X24]
	0x03CB2A90 CBZ X8, 0x3CB7C14
	0x03CB2A94 LDR V1, [X31 + 0xB0]
	0x03CB2A98 LDR V11, [X19 + 0xF0]
	0x03CB2A9C LDR V14, [X19 + 0x180]
	0x03CB2AA0 MOV V15.16B, V0.16B
	0x03CB2AA4 SCVTF S0, S9
	0x03CB2AA8 ADD X0, X8, 0xB0
	0x03CB2AAC MOV X1, X31
	0x03CB2AB0 FMUL S9, S0, S1
	0x03CB2AB4 BL 0x3C9BF98
	0x03CB2AB8 FADD S1, S15, S14
	0x03CB2ABC FSUB S1, S8, S1
	0x03CB2AC0 FMOV S2, 0.5
	0x03CB2AC4 FMUL S1, S1, S2
	0x03CB2AC8 ADD X0, X31, 0x1000
	0x03CB2ACC FMUL S1, S11, S1
	0x03CB2AD0 ADD X0, X0, 0x1E0
	0x03CB2AD4 MOV X1, X31
	0x03CB2AD8 FMUL S15, S0, S1
	0x03CB2ADC BL 0x3C9C2E4
	0x03CB2AE0 LDR V11, [X31 + 0x188]
	0x03CB2AE4 ADD X0, X31, 0x1000
	0x03CB2AE8 ADD X0, X0, 0x1E0
	0x03CB2AEC MOV X1, X31
	0x03CB2AF0 FADD S0, S11, S0
	0x03CB2AF4 FADD S0, S12, S0
	0x03CB2AF8 FSUB S0, S0, S15
	0x03CB2AFC FMUL S0, S13, S0
	0x03CB2B00 FMUL S14, S9, S0
	0x03CB2B04 BL 0x3C9C2E4
	0x03CB2B08 ADD X0, X31, 0x1000
	0x03CB2B0C ADD X0, X0, 0x1E0
	0x03CB2B10 MOV X1, X31
	0x03CB2B14 MOV V8.16B, V0.16B
	0x03CB2B18 BL 0x3C9C2D4
	0x03CB2B1C FSUB S0, S8, S0
	0x03CB2B20 LDR V3, [X31 + 0x17C]
	0x03CB2B24 LDR V4, [X31 + 0x118]
	0x03CB2B28 FSUB S0, S0, S11
	0x03CB2B2C LDR V2, [X31 + 0x1B4]
	0x03CB2B30 FSUB S0, S0, S12
	0x03CB2B34 FSUB S0, S0, S15
	0x03CB2B38 FMOV S1, W31
	0x03CB2B3C FMUL S0, S13, S0
	0x03CB2B40 FADD S10, S10, S1
	0x03CB2B44 FADD S3, S3, S1
	0x03CB2B48 FADD S1, S4, S14
	0x03CB2B4C FMUL S0, S9, S0
	0x03CB2B50 FADD S5, S2, S14
	0x03CB2B54 MOV V15.16B, V1.16B
	0x03CB2B58 FADD S2, S2, S0
	0x03CB2B5C FADD S4, S4, S0
	0x03CB2B60 STR S3, [X31 + 0x17C]
	0x03CB2B64 STR S2, [X31 + 0x1B4]
	0x03CB2B68 LDP X9, X8, [X31 + 0xF8]
	0x03CB2B6C LDR V8, [X8]
	0x03CB2B70 ADRP X8, 0x726000
	0x03CB2B74 LDRB W8, [X8 + 0x793]
	0x03CB2B78 LDR V9, [X9]
	0x03CB2B7C CBNZ W8, 0x3CB2BC8
	0x03CB2B80 ADRP X0, 0x442000
	0x03CB2B84 LDR X0, [X0 + 0x5A8]
	0x03CB2B88 MOV V14.16B, V12.16B
	0x03CB2B8C MOV V12.16B, V10.16B
	0x03CB2B90 MOV V10.16B, V13.16B
	0x03CB2B94 MOV V11.16B, V15.16B
	0x03CB2B98 MOV V15.16B, V4.16B
	0x03CB2B9C MOV V13.16B, V5.16B
	0x03CB2BA0 BL 0x1C16CF4
	0x03CB2BA4 MOV V5.16B, V13.16B
	0x03CB2BA8 MOV V4.16B, V15.16B
	0x03CB2BAC MOV V15.16B, V11.16B
	0x03CB2BB0 MOV V13.16B, V10.16B
	0x03CB2BB4 MOV V10.16B, V12.16B
	0x03CB2BB8 MOV V12.16B, V14.16B
	0x03CB2BBC ADRP X8, 0x726000
	0x03CB2BC0 MOVZ W9, 0x1
	0x03CB2BC4 STRB W9, [X8 + 0x793]
	0x03CB2BC8 STR S12, [X31 + 0x170]
	0x03CB2BCC ADRP X8, 0x442000
	0x03CB2BD0 LDR X8, [X8 + 0x5A8]
	0x03CB2BD4 LDR X8, [X8]
	0x03CB2BD8 LDR X8, [X8 + 0xB8]
	0x03CB2BDC LDP D0, D1, [X8]
	0x03CB2BE0 ADRP X8, 0xFFFFFFFFFCE38000
	0x03CB2BE4 LDR V2, [X8 + 0x1B4]
	0x00000000 INVALID
	0x03CB2BEC UNIMPLEMENTED
	0x00000000 INVALID
	0x03CB2BF4 FADD V0.2S, V0.2S, V3.2S
	0x03CB2BF8 FADD V0.2S, V1.2S, V0.2S
	0x03CB2BFC UNIMPLEMENTED
	0x03CB2C00 FADD V0.2S, V1.2S, V0.2S
	0x03CB2C04 FCMP S0, S2
	0x03CB2C08 FMOV S0, W31
	0x03CB2C0C B.GT 0x3CB2D48
	0x03CB2C10 LDR V0, [X19 + 0x19B4]
	0x03CB2C14 LDR V1, [X19 + 0x19B8]
	0x03CB2C18 LDR V2, [X19 + 0x19BC]
	0x03CB2C1C LDR V3, [X19 + 0x19C0]
	0x03CB2C20 ADD X8, X31, 0x1000
	0x03CB2C24 ADD X8, X8, 0x290
	0x03CB2C28 MOV X0, X31
	0x03CB2C2C STR S4, [X31 + 0x118]
	0x03CB2C30 MOV V8.16B, V5.16B
	0x03CB2C34 BL 0x3C28378
	0x03CB2C38 LDR V9, [X31 + 0x1B4]
	0x03CB2C3C LDR V12, [X31 + 0x17C]
	0x03CB2C40 LDR V1, [X31 + 0x129]
	0x03CB2C44 LDR V2, [X31 + 0x12A]
	0x03CB2C48 LDR V3, [X31 + 0x12B]
	0x03CB2C4C LDR V4, [X31 + 0x12C]
	0x03CB2C50 FADD S0, S15, S9
	0x03CB2C54 FADD S5, S12, S10
	0x03CB2C58 FMOV S6, 0.5
	0x03CB2C5C FMUL S11, S0, S6
	0x03CB2C60 FMUL S14, S5, S6
	0x03CB2C64 FSUB S0, S8, S11
	0x03CB2C68 FSUB S8, S10, S14
	0x03CB2C6C ADD X0, X31, 0x1000
	0x03CB2C70 STR V1, [X31 + 0x10C]
	0x03CB2C74 STR V2, [X31 + 0x10D]
	0x03CB2C78 ADD X0, X0, 0xC0
	0x03CB2C7C FMOV S2, W31
	0x03CB2C80 MOV V1.16B, V8.16B
	0x03CB2C84 MOV X1, X31
	0x03CB2C88 STR V3, [X31 + 0x10E]
	0x03CB2C8C STR V4, [X31 + 0x10F]
	0x03CB2C90 BL 0x3C28278
	0x03CB2C94 FADD S3, S11, S0
	0x03CB2C98 FADD S0, S14, S1
	0x03CB2C9C STR S13, [X31 + 0xDC]
	0x03CB2CA0 FMOV S13, W31
	0x03CB2CA4 STP S3, S0, [X31 + 0xD4]
	0x03CB2CA8 FADD S0, S2, S13
	0x03CB2CAC MOV V10.16B, V15.16B
	0x03CB2CB0 FSUB S15, S12, S14
	0x03CB2CB4 ADD X0, X31, 0x1000
	0x03CB2CB8 STR S0, [X31 + 0xD0]
	0x03CB2CBC FSUB S0, S9, S11
	0x03CB2CC0 ADD X0, X0, 0xC0
	0x03CB2CC4 FMOV S2, W31
	0x03CB2CC8 MOV V1.16B, V15.16B
	0x03CB2CCC MOV X1, X31
	0x03CB2CD0 BL 0x3C28278
	0x03CB2CD4 FADD S0, S11, S0
	0x03CB2CD8 ADD X0, X31, 0x1000
	0x03CB2CDC STR S0, [X31 + 0x1B4]
	0x03CB2CE0 FADD S12, S14, S1
	0x03CB2CE4 FADD S9, S2, S13
	0x03CB2CE8 FSUB S0, S10, S11
	0x03CB2CEC ADD X0, X0, 0xC0
	0x03CB2CF0 FMOV S2, W31
	0x03CB2CF4 MOV V1.16B, V8.16B
	0x03CB2CF8 MOV X1, X31
	0x03CB2CFC BL 0x3C28278
	0x03CB2D00 FADD S3, S11, S0
	0x03CB2D04 LDR V0, [X31 + 0x118]
	0x03CB2D08 ADD X0, X31, 0x1000
	0x03CB2D0C FADD S10, S14, S1
	0x03CB2D10 FADD S8, S2, S13
	0x03CB2D14 FSUB S0, S0, S11
	0x03CB2D18 ADD X0, X0, 0xC0
	0x03CB2D1C FMOV S2, W31
	0x03CB2D20 MOV V1.16B, V15.16B
	0x03CB2D24 MOV X1, X31
	0x03CB2D28 MOV V15.16B, V3.16B
	0x03CB2D2C BL 0x3C28278
	0x03CB2D30 LDP S3, S5, [X31 + 0xD0]
	0x03CB2D34 FADD S4, S11, S0
	0x03CB2D38 FADD S1, S14, S1
	0x03CB2D3C FADD S0, S2, S13
	0x03CB2D40 LDP S14, S13, [X31 + 0xD8]
	0x03CB2D44 B 0x3CB2D60
	0x03CB2D48 LDR V1, [X31 + 0x17C]
	0x03CB2D4C FMOV S8, W31
	0x03CB2D50 FMOV S9, W31
	0x03CB2D54 FMOV S3, W31
	0x03CB2D58 MOV V12.16B, V1.16B
	0x03CB2D5C MOV V14.16B, V10.16B
	0x03CB2D60 LDR X8, [X31 + 0x1D8]
	0x03CB2D64 LDR X8, [X8]
	0x03CB2D68 CBZ X8, 0x3CB7C14
	0x03CB2D6C LDRSW X9, [X23]
	0x03CB2D70 LDR W10, [X8 + 0x18]
	0x03CB2D74 CMP W9, W10
	0x03CB2D78 B.CS 0x3CB7C18
	0x03CB2D7C LDR V2, [X31 + 0x1B4]
	0x03CB2D80 NOP
	0x03CB2D84 MADD X8, X9, X26, X8
	0x03CB2D88 STR S12, [X8 + 0x128]
	0x03CB2D8C STR S9, [X8 + 0x12C]
	0x03CB2D90 STR S2, [X8 + 0x124]
	0x03CB2D94 LDR X8, [X31 + 0x1D8]
	0x03CB2D98 LDR X8, [X8]
	0x03CB2D9C CBZ X8, 0x3CB7C14
	0x03CB2DA0 LDRSW X9, [X23]
	0x03CB2DA4 LDR W10, [X8 + 0x18]
	0x03CB2DA8 CMP W9, W10
	0x03CB2DAC B.CS 0x3CB7C18
	0x03CB2DB0 MADD X8, X9, X26, X8
	0x03CB2DB4 STR S5, [X8 + 0x118]
	0x03CB2DB8 STR S14, [X8 + 0x11C]
	0x03CB2DBC STR S3, [X8 + 0x120]
	0x03CB2DC0 LDR X8, [X31 + 0x1D8]
	0x03CB2DC4 LDR X8, [X8]
	0x03CB2DC8 CBZ X8, 0x3CB7C14
	0x03CB2DCC LDRSW X9, [X23]
	0x03CB2DD0 LDR W10, [X8 + 0x18]
	0x03CB2DD4 MOV V11.16B, V12.16B
	0x03CB2DD8 LDR V12, [X31 + 0x170]
	0x03CB2DDC CMP W9, W10
	0x03CB2DE0 B.CS 0x3CB7C18
	0x03CB2DE4 MADD X8, X9, X26, X8
	0x03CB2DE8 STR S15, [X8 + 0x130]
	0x03CB2DEC STR S10, [X8 + 0x134]
	0x03CB2DF0 STR S8, [X8 + 0x138]
	0x03CB2DF4 LDR X8, [X31 + 0x1D8]
	0x03CB2DF8 LDR X8, [X8]
	0x03CB2DFC CBZ X8, 0x3CB7C14
	0x03CB2E00 LDRSW X9, [X23]
	0x03CB2E04 LDR W10, [X8 + 0x18]
	0x03CB2E08 CMP W9, W10
	0x03CB2E0C B.CS 0x3CB7C18
	0x03CB2E10 MADD X8, X9, X26, X8
	0x03CB2E14 STR S4, [X8 + 0x13C]
	0x03CB2E18 STR S1, [X8 + 0x140]
	0x03CB2E1C STR S0, [X8 + 0x144]
	0x03CB2E20 LDR X8, [X31 + 0x1D8]
	0x03CB2E24 LDR X20, [X8]
	0x03CB2E28 CBZ X20, 0x3CB7C14
	0x03CB2E2C LDRSW X21, [X23]
	0x03CB2E30 LDR V8, [X19 + 0x2F4]
	0x03CB2E34 ADD X0, X31, 0x1000
	0x03CB2E38 ADD X0, X0, 0x1D0
	0x03CB2E3C MOV X1, X31
	0x03CB2E40 BL 0x3C9E364
	0x03CB2E44 LDR W8, [X20 + 0x18]
	0x03CB2E48 CMP W21, W8
	0x03CB2E4C B.CS 0x3CB7C18
	0x03CB2E50 FMUL S0, S13, S0
	0x03CB2E54 FADD S0, S8, S0
	0x03CB2E58 MADD X8, X21, X26, X20
	0x03CB2E5C STR S0, [X8 + 0x148]
	0x03CB2E60 LDR X8, [X31 + 0x1D8]
	0x03CB2E64 LDR X20, [X8]
	0x03CB2E68 CBZ X20, 0x3CB7C14
	0x03CB2E6C LDRSW X21, [X23]
	0x03CB2E70 LDR V9, [X19 + 0x2E0]
	0x03CB2E74 LDR V8, [X19 + 0x180]
	0x03CB2E78 ADD X0, X31, 0x1000
	0x03CB2E7C ADD X0, X0, 0x1D0
	0x03CB2E80 MOV X1, X31
	0x03CB2E84 BL 0x3C9E374
	0x03CB2E88 LDR W8, [X20 + 0x18]
	0x03CB2E8C CMP W21, W8
	0x03CB2E90 B.CS 0x3CB7C18
	0x03CB2E94 LDR V1, [X31 + 0x184]
	0x03CB2E98 FMUL S0, S13, S0
	0x03CB2E9C MADD X8, X21, X26, X20
	0x03CB2EA0 FSUB S1, S1, S9
	0x03CB2EA4 FADD S1, S1, S8
	0x03CB2EA8 FADD S0, S1, S0
	0x03CB2EAC STR S0, [X8 + 0x150]
	0x03CB2EB0 LDR X8, [X31 + 0x1D8]
	0x03CB2EB4 LDR X8, [X8]
	0x03CB2EB8 CBZ X8, 0x3CB7C14
	0x03CB2EBC LDRSW X20, [X23]
	0x03CB2EC0 LDR W9, [X8 + 0x18]
	0x03CB2EC4 CMP W20, W9
	0x03CB2EC8 B.CS 0x3CB7C18
	0x03CB2ECC LDR V0, [X31 + 0x1B4]
	0x03CB2ED0 FSUB S1, S14, S11
	0x03CB2ED4 MADD X9, X20, X26, X8
	0x03CB2ED8 LDR V2, [X31 + 0x160]
	0x03CB2EDC FSUB S0, S15, S0
	0x03CB2EE0 FDIV S0, S0, S1
	0x03CB2EE4 STR S0, [X9 + 0x168]
	0x03CB2EE8 LDR V0, [X31 + 0x178]
	0x03CB2EEC LDR V1, [X31 + 0x164]
	0x03CB2EF0 LDRB W9, [X27]
	0x03CB2EF4 FADD S0, S0, S1
	0x03CB2EF8 LDR V1, [X31 + 0x168]
	0x03CB2EFC CMP W9, 0x1
	0x03CB2F00 FMUL S0, S13, S0
	0x03CB2F04 FADD S1, S1, S2
	0x03CB2F08 B.NE 0x3CB2F20
	0x03CB2F0C LDR V2, [X31 + 0x174]
	0x03CB2F10 FMUL S1, S13, S1
	0x03CB2F14 FDIV S0, S0, S2
	0x03CB2F18 FDIV S1, S1, S2
	0x03CB2F1C B 0x3CB2F24
	0x03CB2F20 FMUL S1, S13, S1
	0x03CB2F24 LDR W24, [X19 + 0x328]
	0x03CB2F28 LDR W10, [X31 + 0x1A0]
	0x03CB2F2C LDR V4, [X19 + 0x180]
	0x03CB2F30 CMP W20, W24
	0x03CB2F34 CSET W9, NE
	0x03CB2F38 CMP W10, 0x0
	0x03CB2F3C CSET W10, NE
	0x03CB2F40 AND W9, W10, W9, 0x0
	0x03CB2F44 FADD S8, S4, S0
	0x03CB2F48 TBZ X9, 0x0, 0x3CB2F70
	0x03CB2F4C LDR V0, [X19 + 0x338]
	0x03CB2F50 NOP
	0x03CB2F54 MADD X10, X20, X26, X8
	0x03CB2F58 STR S0, [X10 + 0x158]
	0x03CB2F5C LDR V2, [X19 + 0x33C]
	0x03CB2F60 STR S2, [X10 + 0x15C]
	0x03CB2F64 LDR V1, [X19 + 0x2E0]
	0x03CB2F68 FSUB S3, S0, S1
	0x03CB2F6C B 0x3CB2FE0
	0x03CB2F70 FADD S2, S4, S1
	0x03CB2F74 FCMP S4, 0x0
	0x03CB2F78 MOV V1.16B, V2.16B
	0x03CB2F7C MOV V3.16B, V8.16B
	0x03CB2F80 B.EQ 0x3CB2FA8
	0x03CB2F84 LDR V0, [X19 + 0xF0]
	0x03CB2F88 FSUB S1, S8, S4
	0x03CB2F8C FSUB S3, S2, S4
	0x03CB2F90 FDIV S1, S1, S0
	0x03CB2F94 FDIV S0, S3, S0
	0x03CB2F98 FCMP S1, S8
	0x03CB2F9C FCSEL S3, S1, S8, GT
	0x03CB2FA0 FCMP S0, S2
	0x03CB2FA4 FCSEL S1, S0, S2, MI
	0x03CB2FA8 LDR V0, [X19 + 0x338]
	0x03CB2FAC LDR V4, [X19 + 0x33C]
	0x03CB2FB0 NOP
	0x03CB2FB4 MADD X10, X20, X26, X8
	0x03CB2FB8 FCMP S3, S0
	0x03CB2FBC FCSEL S0, S3, S0, GT
	0x03CB2FC0 FCMP S1, S4
	0x03CB2FC4 FCSEL S4, S1, S4, MI
	0x03CB2FC8 STR S0, [X19 + 0x338]
	0x03CB2FCC STR S4, [X19 + 0x33C]
	0x03CB2FD0 STR S3, [X10 + 0x158]
	0x03CB2FD4 STR S1, [X10 + 0x15C]
	0x03CB2FD8 LDR V1, [X19 + 0x2E0]
	0x03CB2FDC FSUB S3, S8, S1
	0x03CB2FE0 FSUB S2, S2, S1
	0x03CB2FE4 MADD X8, X20, X26, X8
	0x03CB2FE8 STR S3, [X10 + 0x14C]
	0x03CB2FEC STR S2, [X8 + 0x154]
	0x03CB2FF0 LDR W8, [X19 + 0x340]
	0x03CB2FF4 STR S2, [X19 + 0x378]
	0x03CB2FF8 CBZ W8, 0x3CB3004
	0x03CB2FFC LDRB W8, [X19 + 0x37C]
	0x03CB3000 CBZ W8, 0x3CB314C
	0x03CB3004 TBNZ X9, 0x0, 0x3CB3058
	0x03CB3008 LDR X8, [X19 + 0x68]
	0x03CB300C STR S0, [X19 + 0x374]
	0x03CB3010 CBZ X8, 0x3CB7C14
	0x03CB3014 LDR V9, [X19 + 0x370]
	0x03CB3018 ADD X0, X8, 0xB0
	0x03CB301C MOV X1, X31
	0x03CB3020 BL 0x3C9BFC8
	0x03CB3024 LDR V2, [X31 + 0x174]
	0x03CB3028 LDR V1, [X19 + 0x2E0]
	0x03CB302C FMUL S0, S13, S0
	0x03CB3030 FDIV S0, S0, S2
	0x03CB3034 FCMP S9, S0
	0x03CB3038 FCSEL S0, S9, S0, GT
	0x03CB303C FCMP S1, 0x0
	0x03CB3040 STR S0, [X19 + 0x370]
	0x03CB3044 B.NE 0x3CB3058
	0x03CB3048 LDR V0, [X19 + 0x19C8]
	0x03CB304C FCMP S0, S8
	0x03CB3050 FCSEL S0, S0, S8, GT
	0x03CB3054 STR S0, [X19 + 0x19C8]
	0x03CB3058 LDR X8, [X31 + 0x1D8]
	0x03CB305C LDR X8, [X8]
	0x03CB3060 CBZ X8, 0x3CB7C14
	0x03CB3064 LDR W21, [X23]
	0x03CB3068 LDR W9, [X8 + 0x18]
	0x03CB306C CMP W21, W9
	0x03CB3070 B.CS 0x3CB7C18
	0x03CB3074 SXTW X9, W21
	0x03CB3078 MADD X8, X9, X26, X8
	0x03CB307C STRB W31, [X8 + 0x1A0]
	0x03CB3080 LDR W28, [X31 + 0x128C]
	0x03CB3084 LDR W9, [X19 + 0x158]
	0x03CB3088 CMP W28, 0x9
	0x03CB308C AND W23, W9, 0x18
	0x03CB3090 B.EQ 0x3CB317C
	0x03CB3094 LDR W9, [X31 + 0x1A0]
	0x03CB3098 CBZ W9, 0x3CB3160
	0x03CB309C LDR W10, [X31 + 0xC0]
	0x03CB30A0 CMP W28, 0xAD
	0x03CB30A4 CSET W9, EQ
	0x03CB30A8 BIC W9, W9, W10, 0x0
	0x03CB30AC TBNZ X9, 0x0, 0x3CB317C
	0x03CB30B0 LDRB W9, [X27]
	0x03CB30B4 CMP W9, 0x2
	0x03CB30B8 B.EQ 0x3CB317C
	0x03CB30BC LDR X22, [X31 + 0x1D8]
	0x03CB30C0 AND W8, W28, 0xFFFFFFFE
	0x03CB30C4 CMP W8, 0xA
	0x03CB30C8 B.NE 0x3CB35EC
	0x03CB30CC LDR W8, [X25 + 0x74]
	0x03CB30D0 CMP W8, 0x6
	0x03CB30D4 B.NE 0x3CB35EC
	0x03CB30D8 FCMP S1, 0x0
	0x03CB30DC FMOV S0, W31
	0x03CB30E0 B.LE 0x3CB30F8
	0x03CB30E4 LDRB W8, [X19 + 0x2E8]
	0x03CB30E8 CBNZ W8, 0x3CB30F8
	0x03CB30EC LDR V0, [X19 + 0x338]
	0x03CB30F0 LDR V2, [X19 + 0x15AC]
	0x03CB30F4 FSUB S0, S0, S2
	0x03CB30F8 LDR V2, [X19 + 0x33C]
	0x03CB30FC LDR V3, [X19 + 0x374]
	0x03CB3100 FSUB S1, S2, S1
	0x03CB3104 FSUB S1, S3, S1
	0x03CB3108 FADD S0, S1, S0
	0x03CB310C LDR V1, [X31 + 0x110]
	0x03CB3110 FCMP S0, S1
	0x03CB3114 B.LE 0x3CB35EC
	0x03CB3118 LDR W8, [X19 + 0x34C]
	0x03CB311C ADDS W31, W8, 0x1
	0x03CB3120 B.NE 0x3CB3128
	0x03CB3124 STR W21, [X19 + 0x34C]
	0x03CB3128 LDR X20, [X31 + 0x1B8]
	0x03CB312C LDR X1, [X31 + 0xE8]
	0x03CB3130 MOV X0, X19
	0x03CB3134 MOV X3, X31
	0x03CB3138 MOV X2, X20
	0x03CB313C BL 0x3CBACF8
	0x03CB3140 STR W0, [X31 + 0x11FC]
	0x03CB3144 STR W21, [X31 + 0x1278]
	0x03CB3148 B 0x3CB3544
	0x03CB314C FCMP S1, 0x0
	0x03CB3150 CSET W8, NE
	0x03CB3154 ORR W8, W9, W8, 0x0
	0x03CB3158 TBZ X8, 0x0, 0x3CB3048
	0x03CB315C B 0x3CB3058
	0x03CB3160 CMP W28, 0x3
	0x03CB3164 B.EQ 0x3CB309C
	0x03CB3168 MOVZ W9, 0x200B
	0x03CB316C CMP W28, W9
	0x03CB3170 B.EQ 0x3CB309C
	0x03CB3174 CMP W28, 0xAD
	0x03CB3178 B.EQ 0x3CB309C
	0x03CB317C ADD X8, X8, 0x1A0
	0x03CB3180 MOVZ W9, 0x1
	0x03CB3184 STRB W9, [X8]
	0x03CB3188 LDP X8, X9, [X31 + 0x130]
	0x03CB318C LDR X10, [X31 + 0x1B8]
	0x03CB3190 LDR W11, [X31 + 0x1C4]
	0x03CB3194 CBZ W11, 0x3CB31BC
	0x03CB3198 LDR X8, [X10 + 0x48]
	0x03CB319C CBZ X8, 0x3CB7C14
	0x03CB31A0 LDRSW X9, [X19 + 0x340]
	0x03CB31A4 LDR W10, [X8 + 0x18]
	0x03CB31A8 CMP W9, W10
	0x03CB31AC B.CS 0x3CB7C18
	0x03CB31B0 MADD X8, X9, X29, X8
	0x03CB31B4 ADD X9, X8, 0x64
	0x03CB31B8 ADD X8, X8, 0x68
	0x03CB31BC LDR V9, [X9]
	0x03CB31C0 LDR V2, [X31 + 0x124]
	0x03CB31C4 LDR V8, [X8]
	0x03CB31C8 LDR V0, [X19 + 0x35C]
	0x03CB31CC LDR V10, [X19 + 0x2F4]
	0x03CB31D0 FSUB S2, S2, S9
	0x03CB31D4 FSUB S2, S2, S8
	0x03CB31D8 LDRB W8, [X25 + 0xB6]
	0x03CB31DC FCMP S2, S0
	0x03CB31E0 FMOV S3, -1
	0x03CB31E4 FCCMP S0, S3, 0x4, PL
	0x03CB31E8 FCSEL S0, S2, S0, EQ
	0x03CB31EC FMOV S11, W31
	0x03CB31F0 STR S0, [X31 + 0x16C]
	0x03CB31F4 FMOV S0, W31
	0x03CB31F8 CBNZ W8, 0x3CB3214
	0x03CB31FC ADD X0, X31, 0x1000
	0x03CB3200 ADD X0, X0, 0x1E0
	0x03CB3204 MOV X1, X31
	0x03CB3208 BL 0x3C9C2EC
	0x03CB320C LDR W28, [X31 + 0x128C]
	0x03CB3210 LDR V1, [X19 + 0x2E0]
	0x03CB3214 LDR V3, [X31 + 0x15C]
	0x03CB3218 LDR V2, [X19 + 0x1594]
	0x03CB321C LDR V5, [X19 + 0x374]
	0x03CB3220 LDR V4, [X19 + 0x33C]
	0x03CB3224 CMP W28, 0xAD
	0x03CB3228 FCSEL S3, S3, S13, EQ
	0x03CB322C FCMP S1, 0x0
	0x03CB3230 B.LE 0x3CB3248
	0x03CB3234 LDRB W8, [X19 + 0x2E8]
	0x03CB3238 CBNZ W8, 0x3CB3248
	0x03CB323C LDR V6, [X19 + 0x338]
	0x03CB3240 LDR V7, [X19 + 0x15AC]
	0x03CB3244 FSUB S11, S6, S7
	0x03CB3248 LDR X8, [X31 + 0x1C8]
	0x03CB324C FSUB S6, S4, S1
	0x03CB3250 FSUB S5, S5, S6
	0x03CB3254 LDR V6, [X31 + 0x110]
	0x03CB3258 LDR W21, [X8]
	0x03CB325C FADD S5, S5, S11
	0x03CB3260 FCMP S5, S6
	0x03CB3264 B.LE 0x3CB339C
	0x03CB3268 LDR W8, [X19 + 0x34C]
	0x03CB326C ADDS W31, W8, 0x1
	0x03CB3270 B.NE 0x3CB3278
	0x03CB3274 STR W21, [X19 + 0x34C]
	0x03CB3278 LDRB W8, [X25 + 0xA8]
	0x03CB327C CBZ W8, 0x3CB32CC
	0x03CB3280 LDR V7, [X19 + 0x15B0]
	0x03CB3284 LDR V6, [X25 + 0xD0]
	0x03CB3288 FCMP S7, S6
	0x03CB328C B.LE 0x3CB32A8
	0x03CB3290 FCMP S1, 0x0
	0x03CB3294 B.LE 0x3CB32A8
	0x03CB3298 LDR W8, [X19 + 0x15A0]
	0x03CB329C LDR W9, [X19 + 0x15A4]
	0x03CB32A0 CMP W8, W9
	0x03CB32A4 B.LT 0x3CB7AA0
	0x03CB32A8 LDR X8, [X31 + 0xC8]
	0x03CB32AC LDR V1, [X25 + 0xAC]
	0x03CB32B0 LDR V5, [X8]
	0x03CB32B4 FCMP S5, S1
	0x03CB32B8 B.LE 0x3CB32CC
	0x03CB32BC LDR W8, [X19 + 0x15A0]
	0x03CB32C0 LDR W9, [X19 + 0x15A4]
	0x03CB32C4 CMP W8, W9
	0x03CB32C8 B.LT 0x3CB7AD4
	0x03CB32CC LDR W8, [X25 + 0x74]
	0x03CB32D0 SUB W8, W8, 0x1
	0x03CB32D4 CMP W8, 0x5
	0x03CB32D8 B.HI 0x3CB339C
	0x03CB32DC ADRP X11, 0xFFFFFFFFFCEE4000
	0x03CB32E0 ADD X11, X11, 0xEBD
	0x03CB32E4 ADR X9, 0x10
	0x03CB32E8 LDRB W10, [X11, X8, LSL]
	0x03CB32EC ADD X9, X9, X10, 0x2, LSL
	0x03CB32F0 BR X9
	0x03CB32F4 LDR W8, [X19 + 0x340]
	0x03CB32F8 CMP W8, 0x1
	0x03CB32FC B.LT 0x3CB339C
	0x03CB3300 ADRP X8, 0x4AE000
	0x03CB3304 LDR X8, [X8 + 0xBD8]
	0x03CB3308 LDR X20, [X31 + 0x78]
	0x03CB330C LDR X1, [X8]
	0x03CB3310 MOV X0, X20
	0x03CB3314 BL 0x26E3614
	0x03CB3318 CBZ W0, 0x3CB49DC
	0x03CB331C ADRP X8, 0x4AE000
	0x03CB3320 LDR X8, [X8 + 0xB88]
	0x03CB3324 MOV X0, X20
	0x03CB3328 LDR X1, [X8]
	0x03CB332C ADD X8, X31, 0x1000
	0x03CB3330 ADD X8, X8, 0x290
	0x03CB3334 BL 0x26E3A7C
	0x03CB3338 ADD X1, X31, 0x1000
	0x03CB333C ADD X0, X31, 0xD28
	0x03CB3340 ADD X1, X1, 0x290
	0x03CB3344 MOVZ W2, 0x398
	0x03CB3348 BL 0x3EB1AC0
	0x03CB334C LDR X21, [X31 + 0x1B8]
	0x03CB3350 ADD X1, X31, 0xD28
	0x03CB3354 MOV X0, X19
	0x03CB3358 MOV X3, X31
	0x03CB335C MOV X2, X21
	0x03CB3360 BL 0x3CBACF8
	0x03CB3364 SUB W8, W0, 0x1
	0x03CB3368 STR W8, [X31 + 0x11FC]
	0x03CB336C LDR W8, [X19 + 0x324]
	0x03CB3370 LDR W24, [X31 + 0x1A8]
	0x03CB3374 ADRP X28, 0x440000
	0x03CB3378 SUB W8, W8, 0x1
	0x03CB337C STR W8, [X19 + 0x324]
	0x03CB3380 STR W8, [X31 + 0x1278]
	0x03CB3384 MOVZ W8, 0x2026
	0x03CB3388 STR W8, [X31 + 0x127C]
	0x03CB338C LDR X28, [X28 + 0xA28]
	0x03CB3390 LDR X23, [X31 + 0x1C8]
	0x03CB3394 LDR X22, [X31 + 0x1D8]
	0x03CB3398 B 0x3CB4964
	0x03CB339C TBZ X22, 0x0, 0x3CB33F0
	0x03CB33A0 FMOV S6, 1
	0x03CB33A4 FSUB S1, S6, S2
	0x03CB33A8 ADRP X8, 0xFFFFFFFFFCE37000
	0x03CB33AC FMUL S0, S0, S1
	0x03CB33B0 FABS S4, S10
	0x03CB33B4 LDR V5, [X8 + 0x190]
	0x03CB33B8 FMUL S0, S0, S3
	0x03CB33BC FADD S11, S4, S0
	0x03CB33C0 LDR V0, [X31 + 0x16C]
	0x03CB33C4 CMP W23, 0x0
	0x03CB33C8 MOV V12.16B, V13.16B
	0x03CB33CC FCSEL S13, S6, S5, EQ
	0x03CB33D0 FMUL S0, S13, S0
	0x03CB33D4 FCMP S11, S0
	0x03CB33D8 B.GT 0x3CB34A8
	0x03CB33DC LDR X22, [X31 + 0x1D8]
	0x03CB33E0 MOV W8, W21
	0x03CB33E4 MOV V13.16B, V12.16B
	0x03CB33E8 LDR V12, [X31 + 0x170]
	0x03CB33EC B 0x3CB33F8
	0x03CB33F0 LDR X22, [X31 + 0x1D8]
	0x03CB33F4 MOV W8, W21
	0x03CB33F8 LDR X21, [X31 + 0x1B8]
	0x03CB33FC LDR W9, [X31 + 0x1A0]
	0x03CB3400 CBZ W9, 0x3CB347C
	0x03CB3404 LDR X9, [X22]
	0x03CB3408 CBZ X9, 0x3CB7C14
	0x03CB340C LDR W10, [X9 + 0x18]
	0x03CB3410 CMP W8, W10
	0x03CB3414 B.CS 0x3CB7C18
	0x03CB3418 SMADDL X9, X8, X26, X9
	0x03CB341C STRB W31, [X9 + 0x1A0]
	0x03CB3420 STR W8, [X19 + 0x334]
	0x03CB3424 LDR X8, [X21 + 0x48]
	0x03CB3428 CBZ X8, 0x3CB7C14
	0x03CB342C LDRSW X10, [X19 + 0x340]
	0x03CB3430 LDR W9, [X8 + 0x18]
	0x03CB3434 CMP W10, W9
	0x03CB3438 B.CS 0x3CB7C18
	0x03CB343C MOVZ W12, 0x60
	0x03CB3440 MADD X10, X10, X12, X8
	0x03CB3444 LDR W11, [X10 + 0x2C]
	0x03CB3448 ADD W11, W11, 0x1
	0x03CB344C STR W11, [X10 + 0x2C]
	0x03CB3450 LDRSW X10, [X19 + 0x340]
	0x03CB3454 STR W11, [X19 + 0x348]
	0x03CB3458 CMP W10, W9
	0x03CB345C B.CS 0x3CB7C18
	0x03CB3460 MADD X8, X10, X12, X8
	0x03CB3464 STP S9, S8, [X8 + 0x64]
	0x03CB3468 LDR W8, [X21 + 0x18]
	0x03CB346C MOVZ W29, 0x60
	0x03CB3470 ADD W8, W8, 0x1
	0x03CB3474 STR W8, [X21 + 0x18]
	0x03CB3478 B 0x3CB38C8
	0x03CB347C LDR W9, [X31 + 0x128C]
	0x03CB3480 CMP W9, 0xAD
	0x03CB3484 B.NE 0x3CB3644
	0x03CB3488 LDR X9, [X22]
	0x03CB348C CBZ X9, 0x3CB7C14
	0x03CB3490 LDR W10, [X9 + 0x18]
	0x03CB3494 CMP W8, W10
	0x03CB3498 B.CS 0x3CB7C18
	0x03CB349C SMADDL X8, X8, X26, X9
	0x03CB34A0 STRB W31, [X8 + 0x1A0]
	0x03CB34A4 B 0x3CB38C8
	0x03CB34A8 LDR X22, [X31 + 0x1D8]
	0x03CB34AC LDR W8, [X31 + 0x8C]
	0x03CB34B0 CBZ W8, 0x3CB34C0
	0x03CB34B4 LDR W8, [X19 + 0x328]
	0x03CB34B8 CMP W21, W8
	0x03CB34BC B.NE 0x3CB368C
	0x03CB34C0 LDRB W8, [X25 + 0xA8]
	0x03CB34C4 CBZ W8, 0x3CB3504
	0x03CB34C8 LDR W8, [X19 + 0x15A0]
	0x03CB34CC LDR W9, [X19 + 0x15A4]
	0x03CB34D0 CMP W8, W9
	0x03CB34D4 B.GE 0x3CB3504
	0x03CB34D8 LDR V0, [X25 + 0x108]
	0x03CB34DC MOVZ W8, 0x42C80000
	0x03CB34E0 FMOV S3, W8
	0x03CB34E4 FDIV S0, S0, S3
	0x03CB34E8 FCMP S2, S0
	0x03CB34EC B.MI 0x3CB7B98
	0x03CB34F0 LDR X8, [X31 + 0xC8]
	0x03CB34F4 LDR V0, [X25 + 0xAC]
	0x03CB34F8 LDR V1, [X8]
	0x03CB34FC FCMP S1, S0
	0x03CB3500 B.GT 0x3CB7B34
	0x03CB3504 LDR W8, [X25 + 0x74]
	0x03CB3508 CMP W8, 0x1
	0x03CB350C B.EQ 0x3CB48CC
	0x03CB3510 CMP W8, 0x6
	0x03CB3514 MOV V13.16B, V12.16B
	0x03CB3518 B.EQ 0x3CB496C
	0x03CB351C CMP W8, 0x3
	0x03CB3520 B.NE 0x3CB49A8
	0x03CB3524 LDR X20, [X31 + 0x1B8]
	0x03CB3528 LDR X1, [X31 + 0xB8]
	0x03CB352C MOV X0, X19
	0x03CB3530 MOV X3, X31
	0x03CB3534 MOV X2, X20
	0x03CB3538 BL 0x3CBACF8
	0x03CB353C STR W0, [X31 + 0x11FC]
	0x03CB3540 STR W21, [X31 + 0x1278]
	0x03CB3544 MOVZ W8, 0x3
	0x03CB3548 MOV X21, X20
	0x03CB354C STR W8, [X31 + 0x127C]
	0x03CB3550 B 0x3CB4998
	0x03CB3554 LDR X20, [X31 + 0x1B8]
	0x03CB3558 LDR X1, [X31 + 0xE8]
	0x03CB355C MOV X0, X19
	0x03CB3560 MOV X3, X31
	0x03CB3564 MOV X2, X20
	0x03CB3568 BL 0x3CBACF8
	0x03CB356C STR W21, [X31 + 0x1278]
	0x03CB3570 MOV X21, X20
	0x03CB3574 STR W0, [X31 + 0x11FC]
	0x03CB3578 B 0x3CB35DC
	0x03CB357C LDR W8, [X31 + 0x11FC]
	0x03CB3580 CMP W21, 0x0
	0x03CB3584 CSET W9, EQ
	0x03CB3588 ORR W8, W9, W8, 0x1F
	0x03CB358C CBZ W8, 0x3CB37E8
	0x03CB3590 ADRP X8, 0xFFFFFFFFFCE3A000
	0x03CB3594 LDR V0, [X8 + 0xB60]
	0x03CB3598 LDR X23, [X31 + 0x1C8]
	0x03CB359C MOVN W8, 0x0
	0x03CB35A0 STR W8, [X31 + 0x11FC]
	0x03CB35A4 STR W31, [X23]
	0x03CB35A8 STR D0, [X31 + 0x1278]
	0x03CB35AC B 0x3CB49F8
	0x03CB35B0 LDR X20, [X31 + 0x1B8]
	0x03CB35B4 LDR X1, [X31 + 0xE8]
	0x03CB35B8 MOV X0, X19
	0x03CB35BC MOV X3, X31
	0x03CB35C0 MOV X2, X20
	0x03CB35C4 BL 0x3CBACF8
	0x03CB35C8 MOVZ W8, 0x3
	0x03CB35CC STR W0, [X31 + 0x11FC]
	0x03CB35D0 STR W21, [X31 + 0x1278]
	0x03CB35D4 MOV X21, X20
	0x03CB35D8 STR W8, [X31 + 0x127C]
	0x03CB35DC ADRP X28, 0x440000
	0x03CB35E0 LDR X28, [X28 + 0xA28]
	0x03CB35E4 LDR X23, [X31 + 0x1C8]
	0x03CB35E8 B 0x3CB4A04
	0x03CB35EC MOVN W8, 0x2006
	0x03CB35F0 ADD W8, W28, W8
	0x03CB35F4 CMP W8, 0x22
	0x03CB35F8 B.LS 0x3CB3740
	0x03CB35FC LDR X21, [X31 + 0x1B8]
	0x03CB3600 SUB W8, W28, 0xA
	0x03CB3604 CMP W8, 0x2
	0x03CB3608 B.CC 0x3CB375C
	0x03CB360C CMP W28, 0xA0
	0x03CB3610 B.EQ 0x3CB375C
	0x03CB3614 ADRP X8, 0x442000
	0x03CB3618 LDR X8, [X8 + 0x170]
	0x03CB361C LDR X0, [X8]
	0x03CB3620 LDR W8, [X0 + 0xE0]
	0x03CB3624 CBNZ W8, 0x3CB362C
	0x03CB3628 BL 0x1C16DFC
	0x03CB362C MOV W0, W28
	0x03CB3630 MOV X1, X31
	0x03CB3634 BL 0x331BAF4
	0x03CB3638 TBZ X0, 0x0, 0x3CB37B0
	0x03CB363C LDR W28, [X31 + 0x128C]
	0x03CB3640 B 0x3CB375C
	0x03CB3644 LDRB W8, [X25 + 0xA1]
	0x03CB3648 LDP X10, X9, [X31 + 0x40]
	0x03CB364C CMP W8, 0x0
	0x03CB3650 LDRB W8, [X27]
	0x03CB3654 CSEL X9, X10, X9, EQ
	0x03CB3658 LDR W1, [X9]
	0x03CB365C CMP W8, 0x2
	0x03CB3660 B.EQ 0x3CB386C
	0x03CB3664 CMP W8, 0x1
	0x03CB3668 B.NE 0x3CB3880
	0x03CB366C LDR V0, [X31 + 0x188]
	0x03CB3670 MOV X0, X19
	0x03CB3674 MOV V1.16B, V12.16B
	0x03CB3678 MOV X2, X25
	0x03CB367C MOV X3, X21
	0x03CB3680 MOV X4, X31
	0x03CB3684 BL 0x3CBF79C
	0x03CB3688 B 0x3CB3880
	0x03CB368C LDR X1, [X31 + 0xB8]
	0x03CB3690 LDR X2, [X31 + 0x1B8]
	0x03CB3694 MOV X0, X19
	0x03CB3698 MOV X3, X31
	0x03CB369C BL 0x3CBACF8
	0x03CB36A0 STR W0, [X31 + 0x11FC]
	0x03CB36A4 ADRP X8, 0xFFFFFFFFFCE37000
	0x03CB36A8 LDR V1, [X19 + 0x2E4]
	0x03CB36AC LDR V0, [X8 + 0x214]
	0x03CB36B0 MOV W1, W0
	0x03CB36B4 FCMP S1, S0
	0x03CB36B8 B.NE 0x3CB4A10
	0x03CB36BC LDR X9, [X22]
	0x03CB36C0 CBZ X9, 0x3CB7C14
	0x03CB36C4 LDR X8, [X31 + 0x1C8]
	0x03CB36C8 LDR W10, [X9 + 0x18]
	0x03CB36CC LDR W8, [X8]
	0x03CB36D0 CMP W8, W10
	0x03CB36D4 B.CS 0x3CB7C18
	0x03CB36D8 LDR V0, [X19 + 0x2E0]
	0x03CB36DC FMOV S1, W31
	0x03CB36E0 FCMP S0, 0x0
	0x03CB36E4 B.LE 0x3CB36FC
	0x03CB36E8 LDRB W10, [X19 + 0x2E8]
	0x03CB36EC CBNZ W10, 0x3CB36FC
	0x03CB36F0 LDR V1, [X19 + 0x338]
	0x03CB36F4 LDR V2, [X19 + 0x15AC]
	0x03CB36F8 FSUB S1, S1, S2
	0x03CB36FC LDR V2, [X19 + 0x33C]
	0x03CB3700 LDR V3, [X19 + 0x15B0]
	0x03CB3704 SXTW X10, W8
	0x03CB3708 MADD X10, X10, X26, X9
	0x03CB370C FSUB S1, S1, S2
	0x03CB3710 LDR V2, [X31 + 0x84]
	0x03CB3714 LDR V5, [X10 + 0x158]
	0x03CB3718 LDR V4, [X25 + 0xC8]
	0x03CB371C FADD S2, S2, S3
	0x03CB3720 LDR V3, [X31 + 0x88]
	0x03CB3724 FADD S1, S5, S1
	0x03CB3728 FMUL S2, S3, S2
	0x03CB372C FADD S1, S1, S2
	0x03CB3730 LDR V2, [X31 + 0x150]
	0x03CB3734 FMUL S2, S2, S4
	0x03CB3738 FADD S1, S2, S1
	0x03CB373C B 0x3CB4A38
	0x03CB3740 MOVZ W9, 0x1
	0x03CB3744 LSLV X8, X9, X8
	0x03CB3748 MOVZ X9, 0x1
	0x03CB374C MOVK X9, 0x6
	0x03CB3750 ANDS X31, X8, X9, 0x0
	0x03CB3754 B.EQ 0x3CB35FC
	0x03CB3758 LDR X21, [X31 + 0x1B8]
	0x03CB375C CMP W28, 0xAD
	0x03CB3760 B.EQ 0x3CB38C8
	0x03CB3764 MOVZ W8, 0x200B
	0x03CB3768 CMP W28, W8
	0x03CB376C B.EQ 0x3CB38C8
	0x03CB3770 MOVZ W8, 0x2060
	0x03CB3774 CMP W28, W8
	0x03CB3778 B.EQ 0x3CB37B0
	0x03CB377C LDR X8, [X21 + 0x48]
	0x03CB3780 CBZ X8, 0x3CB7C14
	0x03CB3784 LDRSW X9, [X19 + 0x340]
	0x03CB3788 LDR W10, [X8 + 0x18]
	0x03CB378C CMP W9, W10
	0x03CB3790 B.CS 0x3CB7C18
	0x03CB3794 MADD X8, X9, X29, X8
	0x03CB3798 LDR W9, [X8 + 0x2C]
	0x03CB379C ADD W9, W9, 0x1
	0x03CB37A0 STR W9, [X8 + 0x2C]
	0x03CB37A4 LDR W8, [X21 + 0x18]
	0x03CB37A8 ADD W8, W8, 0x1
	0x03CB37AC STR W8, [X21 + 0x18]
	0x03CB37B0 LDR W8, [X31 + 0x128C]
	0x03CB37B4 CMP W8, 0xA0
	0x03CB37B8 B.NE 0x3CB38C8
	0x03CB37BC LDR X8, [X21 + 0x48]
	0x03CB37C0 CBZ X8, 0x3CB7C14
	0x03CB37C4 LDRSW X9, [X19 + 0x340]
	0x03CB37C8 LDR W10, [X8 + 0x18]
	0x03CB37CC CMP W9, W10
	0x03CB37D0 B.CS 0x3CB7C18
	0x03CB37D4 MADD X8, X9, X29, X8
	0x03CB37D8 LDR W9, [X8 + 0x20]
	0x03CB37DC ADD W9, W9, 0x1
	0x03CB37E0 STR W9, [X8 + 0x20]
	0x03CB37E4 B 0x3CB38C8
	0x03CB37E8 LDR V0, [X19 + 0x338]
	0x03CB37EC LDR X1, [X31 + 0x98]
	0x03CB37F0 LDR X2, [X31 + 0x1B8]
	0x03CB37F4 MOV X0, X19
	0x03CB37F8 MOV X3, X31
	0x03CB37FC FSUB S8, S0, S4
	0x03CB3800 BL 0x3CBACF8
	0x03CB3804 LDR V0, [X31 + 0x110]
	0x03CB3808 STR W0, [X31 + 0x11FC]
	0x03CB380C ADRP X28, 0x440000
	0x03CB3810 LDR X28, [X28 + 0xA28]
	0x03CB3814 LDR X23, [X31 + 0x1C8]
	0x03CB3818 LDR X22, [X31 + 0x1D8]
	0x03CB381C LDR W24, [X31 + 0x1A8]
	0x03CB3820 FCMP S8, S0
	0x03CB3824 B.LE 0x3CB4BE4
	0x03CB3828 STR W21, [X31 + 0x1278]
	0x03CB382C LDR X21, [X31 + 0x1B8]
	0x03CB3830 MOVZ W8, 0x3
	0x03CB3834 STR W8, [X31 + 0x127C]
	0x03CB3838 B 0x3CB146C
	0x03CB383C SUB W9, W9, 0x1
	0x03CB3840 CMP W9, W11
	0x03CB3844 B.CS 0x3CB7C18
	0x03CB3848 CBZ X10, 0x3CB7C14
	0x03CB384C SMADDL X8, X9, X26, X8
	0x03CB3850 LDR V11, [X8 + 0x68]
	0x03CB3854 ADD X0, X10, 0xB0
	0x03CB3858 MOV X1, X31
	0x03CB385C BL 0x3C9BF88
	0x03CB3860 LDR X8, [X24]
	0x03CB3864 CBNZ X8, 0x3CB1738
	0x03CB3868 B 0x3CB7C14
	0x03CB386C MOV X0, X19
	0x03CB3870 MOV X2, X25
	0x03CB3874 MOV X3, X21
	0x03CB3878 MOV X4, X31
	0x03CB387C BL 0x3CC0308
	0x03CB3880 LDR X8, [X31 + 0x1C8]
	0x03CB3884 LDR W9, [X31 + 0xB4]
	0x03CB3888 LDR W8, [X8]
	0x03CB388C TBZ X9, 0x0, 0x3CB3894
	0x03CB3890 STR W8, [X19 + 0x330]
	0x03CB3894 LDR W9, [X19 + 0x344]
	0x03CB3898 STR W8, [X19 + 0x334]
	0x03CB389C ADD W9, W9, 0x1
	0x03CB38A0 STR W9, [X19 + 0x344]
	0x03CB38A4 LDR X8, [X21 + 0x48]
	0x03CB38A8 CBZ X8, 0x3CB7C14
	0x03CB38AC LDRSW X9, [X19 + 0x340]
	0x03CB38B0 LDR W10, [X8 + 0x18]
	0x03CB38B4 CMP W9, W10
	0x03CB38B8 B.CS 0x3CB7C18
	0x03CB38BC MADD X8, X9, X29, X8
	0x03CB38C0 STR W31, [X31 + 0xB4]
	0x03CB38C4 STP S9, S8, [X8 + 0x64]
	0x03CB38C8 LDR W8, [X25 + 0x74]
	0x03CB38CC LDR W9, [X31 + 0x1C4]
	0x03CB38D0 LDR W10, [X31 + 0x128C]
	0x03CB38D4 CMP W8, 0x1
	0x03CB38D8 EOR W9, W9, 0x1
	0x03CB38DC CSET W11, NE
	0x03CB38E0 CSET W8, EQ
	0x03CB38E4 CMP W10, 0x2D
	0x03CB38E8 ORR W9, W11, W9, 0x0
	0x03CB38EC CSET W10, EQ
	0x03CB38F0 CMP W9, 0x0
	0x03CB38F4 CSEL W8, W8, W10, NE
	0x03CB38F8 CMP W8, 0x1
	0x03CB38FC B.NE 0x3CB3B74
	0x03CB3900 LDR X8, [X19 + 0x1A08]
	0x03CB3904 CBZ X8, 0x3CB7C14
	0x03CB3908 LDR V8, [X19 + 0xF4]
	0x03CB390C ADD X0, X8, 0xB0
	0x03CB3910 MOV X1, X31
	0x03CB3914 BL 0x3C9BF88
	0x03CB3918 LDR X8, [X19 + 0x1A08]
	0x03CB391C CBZ X8, 0x3CB7C14
	0x03CB3920 MOV W22, W0
	0x03CB3924 ADD X0, X8, 0xB0
	0x03CB3928 MOV X1, X31
	0x03CB392C BL 0x3C9BF98
	0x03CB3930 LDRB W9, [X25 + 0xBD]
	0x03CB3934 LDR V1, [X31 + 0x148]
	0x03CB3938 LDR X8, [X19 + 0x1A00]
	0x03CB393C FMOV S2, 1
	0x03CB3940 CMP W9, 0x0
	0x03CB3944 FCSEL S1, S1, S2, EQ
	0x03CB3948 CBZ X8, 0x3CB7C14
	0x03CB394C LDR X0, [X8 + 0x20]
	0x03CB3950 CBZ X0, 0x3CB7C14
	0x03CB3954 SCVTF S2, W22
	0x03CB3958 LDR V9, [X19 + 0xF0]
	0x03CB395C LDR V11, [X8 + 0x2C]
	0x03CB3960 FDIV S2, S8, S2
	0x03CB3964 FMUL S0, S2, S0
	0x03CB3968 MOV X1, X31
	0x03CB396C FMUL S8, S0, S1
	0x03CB3970 BL 0x3C9C4E0
	0x03CB3974 LDR X9, [X31 + 0x138]
	0x03CB3978 LDR W8, [X31 + 0x128C]
	0x03CB397C FMUL S1, S9, S8
	0x03CB3980 FMUL S1, S1, S11
	0x03CB3984 LDR V10, [X9]
	0x03CB3988 LDR X9, [X31 + 0x130]
	0x03CB398C CMP W8, 0xA
	0x03CB3990 FMUL S8, S1, S0
	0x03CB3994 LDR V9, [X9]
	0x03CB3998 B.NE 0x3CB3A70
	0x03CB399C LDR W8, [X19 + 0x324]
	0x03CB39A0 LDR W9, [X19 + 0x328]
	0x03CB39A4 LDR X22, [X31 + 0x1D8]
	0x03CB39A8 CMP W8, W9
	0x03CB39AC B.EQ 0x3CB3A74
	0x03CB39B0 LDR X9, [X22]
	0x03CB39B4 CBZ X9, 0x3CB7C14
	0x03CB39B8 LDR W10, [X9 + 0x18]
	0x03CB39BC SUB W8, W8, 0x1
	0x03CB39C0 CMP W8, W10
	0x03CB39C4 B.CS 0x3CB7C18
	0x03CB39C8 LDR X10, [X19 + 0x1A08]
	0x03CB39CC CBZ X10, 0x3CB7C14
	0x03CB39D0 SMADDL X8, X8, X26, X9
	0x03CB39D4 LDR V8, [X8 + 0x68]
	0x03CB39D8 ADD X0, X10, 0xB0
	0x03CB39DC MOV X1, X31
	0x03CB39E0 BL 0x3C9BF88
	0x03CB39E4 LDR X8, [X19 + 0x1A08]
	0x03CB39E8 CBZ X8, 0x3CB7C14
	0x03CB39EC MOV W22, W0
	0x03CB39F0 ADD X0, X8, 0xB0
	0x03CB39F4 MOV X1, X31
	0x03CB39F8 BL 0x3C9BF98
	0x03CB39FC LDRB W9, [X25 + 0xBD]
	0x03CB3A00 MOV V9.16B, V0.16B
	0x03CB3A04 LDR V0, [X31 + 0x148]
	0x03CB3A08 LDR X8, [X19 + 0x1A00]
	0x03CB3A0C CMP W9, 0x0
	0x03CB3A10 FMOV S1, 1
	0x03CB3A14 FCSEL S10, S0, S1, EQ
	0x03CB3A18 CBZ X8, 0x3CB7C14
	0x03CB3A1C LDR X0, [X8 + 0x20]
	0x03CB3A20 CBZ X0, 0x3CB7C14
	0x03CB3A24 LDR V11, [X19 + 0xF0]
	0x03CB3A28 LDR V12, [X8 + 0x2C]
	0x03CB3A2C MOV X1, X31
	0x03CB3A30 BL 0x3C9C4E0
	0x03CB3A34 LDR X8, [X21 + 0x48]
	0x03CB3A38 CBZ X8, 0x3CB7C14
	0x03CB3A3C LDRSW X9, [X19 + 0x340]
	0x03CB3A40 LDR W10, [X8 + 0x18]
	0x03CB3A44 CMP W9, W10
	0x03CB3A48 B.CS 0x3CB7C18
	0x03CB3A4C SCVTF S1, W22
	0x03CB3A50 FDIV S1, S8, S1
	0x03CB3A54 MADD X8, X9, X29, X8
	0x03CB3A58 FMUL S1, S1, S9
	0x03CB3A5C FMUL S1, S1, S10
	0x03CB3A60 LDP S10, S9, [X8 + 0x64]
	0x03CB3A64 FMUL S1, S11, S1
	0x03CB3A68 FMUL S1, S1, S12
	0x03CB3A6C FMUL S8, S1, S0
	0x03CB3A70 LDR X22, [X31 + 0x1D8]
	0x03CB3A74 LDRB W8, [X25 + 0xB6]
	0x03CB3A78 LDR V11, [X19 + 0x2F4]
	0x03CB3A7C FMOV S0, W31
	0x03CB3A80 CBNZ W8, 0x3CB3AC4
	0x03CB3A84 LDR X8, [X19 + 0x1A00]
	0x03CB3A88 CBZ X8, 0x3CB7C14
	0x03CB3A8C LDR X0, [X8 + 0x20]
	0x03CB3A90 CBZ X0, 0x3CB7C14
	0x03CB3A94 ADD X8, X31, 0x1000
	0x03CB3A98 ADD X8, X8, 0x290
	0x03CB3A9C MOV X1, X31
	0x03CB3AA0 BL 0x3C9C4A4
	0x03CB3AA4 LDR V0, [X31 + 0x129]
	0x03CB3AA8 LDR W8, [X31 + 0x12A0]
	0x03CB3AAC ADD X0, X31, 0x1000
	0x03CB3AB0 ADD X0, X0, 0x1B0
	0x03CB3AB4 MOV X1, X31
	0x03CB3AB8 STR V0, [X31 + 0x11B]
	0x03CB3ABC STR W8, [X31 + 0x11C0]
	0x03CB3AC0 BL 0x3C9C2EC
	0x03CB3AC4 LDR V2, [X19 + 0x1594]
	0x03CB3AC8 LDR V3, [X31 + 0x124]
	0x03CB3ACC LDR V4, [X19 + 0x35C]
	0x03CB3AD0 FMOV S6, 1
	0x03CB3AD4 FSUB S2, S6, S2
	0x03CB3AD8 FSUB S3, S3, S10
	0x03CB3ADC ADRP X8, 0xFFFFFFFFFCE37000
	0x03CB3AE0 FSUB S3, S3, S9
	0x03CB3AE4 FMUL S0, S0, S2
	0x03CB3AE8 LDR V2, [X8 + 0x190]
	0x03CB3AEC FCMP S3, S4
	0x03CB3AF0 FMOV S5, -1
	0x03CB3AF4 FCCMP S4, S5, 0x4, PL
	0x03CB3AF8 FABS S1, S11
	0x03CB3AFC FMUL S0, S8, S0
	0x03CB3B00 FCSEL S3, S3, S4, EQ
	0x03CB3B04 CMP W23, 0x0
	0x03CB3B08 FADD S0, S1, S0
	0x03CB3B0C FCSEL S1, S6, S2, EQ
	0x03CB3B10 FMUL S1, S1, S3
	0x03CB3B14 FCMP S0, S1
	0x03CB3B18 B.PL 0x3CB3B74
	0x03CB3B1C LDR X23, [X31 + 0x68]
	0x03CB3B20 LDR W2, [X31 + 0x11FC]
	0x03CB3B24 LDR W3, [X19 + 0x324]
	0x03CB3B28 MOV X0, X19
	0x03CB3B2C MOV X1, X23
	0x03CB3B30 MOV X4, X21
	0x03CB3B34 MOV X5, X31
	0x03CB3B38 BL 0x3CBAA64
	0x03CB3B3C ADRP X8, 0x4AE000
	0x03CB3B40 LDR X8, [X8 + 0xB90]
	0x03CB3B44 ADD X0, X31, 0x1000
	0x03CB3B48 ADD X0, X0, 0x290
	0x03CB3B4C MOVZ W2, 0x398
	0x03CB3B50 LDR X22, [X8]
	0x03CB3B54 MOV X1, X23
	0x03CB3B58 BL 0x3EB1AC0
	0x03CB3B5C LDR X0, [X31 + 0x78]
	0x03CB3B60 MOV X2, X22
	0x03CB3B64 LDR X22, [X31 + 0x1D8]
	0x03CB3B68 ADD X1, X31, 0x1000
	0x03CB3B6C ADD X1, X1, 0x290
	0x03CB3B70 BL 0x26E3974
	0x03CB3B74 LDR X9, [X22]
	0x03CB3B78 CBZ X9, 0x3CB7C14
	0x03CB3B7C LDR X23, [X31 + 0x1C8]
	0x03CB3B80 LDR W8, [X9 + 0x18]
	0x03CB3B84 LDRSW X10, [X23]
	0x03CB3B88 CMP W10, W8
	0x03CB3B8C B.CS 0x3CB7C18
	0x03CB3B90 LDRSW X8, [X19 + 0x340]
	0x03CB3B94 NOP
	0x03CB3B98 MADD X9, X10, X26, X9
	0x03CB3B9C STR W8, [X9 + 0x6C]
	0x03CB3BA0 LDR W10, [X19 + 0x350]
	0x03CB3BA4 STR W10, [X9 + 0x70]
	0x03CB3BA8 LDR W9, [X31 + 0x1C4]
	0x03CB3BAC TBNZ X9, 0x0, 0x3CB3BD0
	0x03CB3BB0 LDR W9, [X31 + 0x128C]
	0x03CB3BB4 CMP W9, 0xD
	0x03CB3BB8 B.HI 0x3CB3BF8
	0x03CB3BBC MOVZ W10, 0x1
	0x03CB3BC0 LSLV W9, W10, W9
	0x03CB3BC4 MOVZ W10, 0x2C00
	0x03CB3BC8 ANDS W31, W9, W10, 0x0
	0x03CB3BCC B.EQ 0x3CB3BF8
	0x03CB3BD0 LDR X9, [X21 + 0x48]
	0x03CB3BD4 CBZ X9, 0x3CB7C14
	0x03CB3BD8 LDR W10, [X9 + 0x18]
	0x03CB3BDC CMP W8, W10
	0x03CB3BE0 B.CS 0x3CB7C18
	0x03CB3BE4 MADD X10, X8, X29, X9
	0x03CB3BE8 LDR W10, [X10 + 0x24]
	0x03CB3BEC CMP W10, 0x1
	0x03CB3BF0 B.EQ 0x3CB3C00
	0x03CB3BF4 B 0x3CB3C1C
	0x03CB3BF8 LDR X9, [X21 + 0x48]
	0x03CB3BFC CBZ X9, 0x3CB7C14
	0x03CB3C00 LDR W10, [X9 + 0x18]
	0x03CB3C04 CMP W8, W10
	0x03CB3C08 B.CS 0x3CB7C18
	0x03CB3C0C LDR W10, [X19 + 0x158]
	0x03CB3C10 NOP
	0x03CB3C14 MADD X8, X8, X29, X9
	0x03CB3C18 STR W10, [X8 + 0x6C]
	0x03CB3C1C LDR W8, [X31 + 0x128C]
	0x03CB3C20 MOVZ W9, 0x200B
	0x03CB3C24 CMP W8, W9
	0x03CB3C28 B.EQ 0x3CB3DBC
	0x03CB3C2C CMP W8, 0x9
	0x03CB3C30 B.NE 0x3CB3C90
	0x03CB3C34 LDR X28, [X31 + 0x190]
	0x03CB3C38 LDR X8, [X28]
	0x03CB3C3C CBZ X8, 0x3CB7C14
	0x03CB3C40 ADD X0, X8, 0xB0
	0x03CB3C44 MOV X1, X31
	0x03CB3C48 BL 0x3C9C080
	0x03CB3C4C LDR X0, [X28]
	0x03CB3C50 CBZ X0, 0x3CB7C14
	0x03CB3C54 MOV X1, X31
	0x03CB3C58 MOV V8.16B, V0.16B
	0x03CB3C5C BL 0x3C9F174
	0x03CB3C60 AND W8, W0, 0xFF
	0x03CB3C64 LDR V0, [X19 + 0x2F4]
	0x03CB3C68 UCVTF S1, W8
	0x03CB3C6C FMUL S1, S8, S1
	0x03CB3C70 FMUL S1, S13, S1
	0x03CB3C74 FDIV S2, S0, S1
	0x03CB3C78 FRINTP S2, S2
	0x03CB3C7C FMUL S2, S1, S2
	0x03CB3C80 FADD S1, S0, S1
	0x03CB3C84 FCMP S2, S0
	0x03CB3C88 FCSEL S0, S2, S1, GT
	0x03CB3C8C B 0x3CB3DB8
	0x03CB3C90 LDR V8, [X19 + 0x2F0]
	0x03CB3C94 FCMP S8, 0x0
	0x03CB3C98 B.EQ 0x3CB3D1C
	0x03CB3C9C LDR X8, [X31 + 0x190]
	0x03CB3CA0 LDR X0, [X8]
	0x03CB3CA4 CBZ X0, 0x3CB7C14
	0x03CB3CA8 LDR V9, [X19 + 0x2F4]
	0x03CB3CAC MOV X1, X31
	0x03CB3CB0 BL 0x3C9F134
	0x03CB3CB4 LDR V4, [X31 + 0x180]
	0x03CB3CB8 LDR V3, [X31 + 0xF4]
	0x03CB3CBC LDR V1, [X19 + 0x2EC]
	0x03CB3CC0 LDR V2, [X19 + 0x1594]
	0x03CB3CC4 FADD S0, S4, S0
	0x03CB3CC8 LDR V4, [X31 + 0x150]
	0x03CB3CCC FSUB S3, S8, S3
	0x03CB3CD0 FMUL S0, S4, S0
	0x03CB3CD4 FADD S0, S3, S0
	0x03CB3CD8 FADD S0, S1, S0
	0x03CB3CDC FMOV S1, 1
	0x03CB3CE0 FSUB S1, S1, S2
	0x03CB3CE4 FMUL S0, S1, S0
	0x03CB3CE8 FADD S0, S9, S0
	0x03CB3CEC LDR W8, [X31 + 0x1A0]
	0x03CB3CF0 STR S0, [X19 + 0x2F4]
	0x03CB3CF4 CBNZ W8, 0x3CB3D08
	0x03CB3CF8 LDR W8, [X31 + 0x128C]
	0x03CB3CFC MOVZ W9, 0x200B
	0x03CB3D00 CMP W8, W9
	0x03CB3D04 B.NE 0x3CB3DBC
	0x03CB3D08 LDR V1, [X25 + 0xC4]
	0x03CB3D0C LDR V2, [X31 + 0x150]
	0x03CB3D10 FMUL S1, S2, S1
	0x03CB3D14 FADD S0, S0, S1
	0x03CB3D18 B 0x3CB3DB8
	0x03CB3D1C LDRB W8, [X25 + 0xB6]
	0x03CB3D20 LDR V10, [X19 + 0x2F4]
	0x03CB3D24 ADD X0, X31, 0x1000
	0x03CB3D28 CBZ W8, 0x3CB484C
	0x03CB3D2C ADD X0, X0, 0x1D0
	0x03CB3D30 MOV X1, X31
	0x03CB3D34 BL 0x3C9E384
	0x03CB3D38 LDR X8, [X31 + 0x190]
	0x03CB3D3C LDR X0, [X8]
	0x03CB3D40 CBZ X0, 0x3CB7C14
	0x03CB3D44 MOV X1, X31
	0x03CB3D48 MOV V8.16B, V0.16B
	0x03CB3D4C BL 0x3C9F134
	0x03CB3D50 LDR V4, [X31 + 0x180]
	0x03CB3D54 LDR V1, [X19 + 0x2EC]
	0x03CB3D58 LDR V2, [X19 + 0x1594]
	0x03CB3D5C FMUL S3, S13, S8
	0x03CB3D60 FADD S0, S4, S0
	0x03CB3D64 LDR V4, [X31 + 0x140]
	0x03CB3D68 LDR W8, [X31 + 0x1A0]
	0x03CB3D6C FADD S0, S4, S0
	0x03CB3D70 LDR V4, [X31 + 0x150]
	0x03CB3D74 FMUL S0, S4, S0
	0x03CB3D78 FADD S0, S3, S0
	0x03CB3D7C FADD S0, S1, S0
	0x03CB3D80 FMOV S1, 1
	0x03CB3D84 FSUB S1, S1, S2
	0x03CB3D88 FMUL S0, S1, S0
	0x03CB3D8C FSUB S0, S10, S0
	0x03CB3D90 STR S0, [X19 + 0x2F4]
	0x03CB3D94 CBNZ W8, 0x3CB3DA8
	0x03CB3D98 LDR W8, [X31 + 0x128C]
	0x03CB3D9C MOVZ W9, 0x200B
	0x03CB3DA0 CMP W8, W9
	0x03CB3DA4 B.NE 0x3CB3DBC
	0x03CB3DA8 LDR V1, [X25 + 0xC4]
	0x03CB3DAC LDR V2, [X31 + 0x150]
	0x03CB3DB0 FMUL S1, S2, S1
	0x03CB3DB4 FSUB S0, S0, S1
	0x03CB3DB8 STR S0, [X19 + 0x2F4]
	0x03CB3DBC LDR X9, [X22]
	0x03CB3DC0 CBZ X9, 0x3CB7C14
	0x03CB3DC4 LDR W8, [X23]
	0x03CB3DC8 LDR W10, [X9 + 0x18]
	0x03CB3DCC CMP W8, W10
	0x03CB3DD0 B.CS 0x3CB7C18
	0x03CB3DD4 LDR V0, [X19 + 0x2F4]
	0x03CB3DD8 SXTW X10, W8
	0x03CB3DDC MADD X9, X10, X26, X9
	0x03CB3DE0 STR S0, [X9 + 0x164]
	0x03CB3DE4 LDR W22, [X31 + 0x128C]
	0x03CB3DE8 CMP W22, 0xD
	0x03CB3DEC B.NE 0x3CB3E00
	0x03CB3DF0 LDR V0, [X19 + 0x2FC]
	0x03CB3DF4 FMOV S1, W31
	0x03CB3DF8 FADD S0, S0, S1
	0x03CB3DFC STR S0, [X19 + 0x2F4]
	0x03CB3E00 LDR W9, [X25 + 0x74]
	0x03CB3E04 CMP W9, 0x5
	0x03CB3E08 B.NE 0x3CB3F00
	0x03CB3E0C CMP W22, 0xD
	0x03CB3E10 B.HI 0x3CB3E28
	0x03CB3E14 MOVZ W9, 0x1
	0x03CB3E18 LSLV W9, W9, W22
	0x03CB3E1C MOVZ W10, 0x2C00
	0x03CB3E20 ANDS W31, W9, W10, 0x0
	0x03CB3E24 B.NE 0x3CB3F00
	0x03CB3E28 MOVN W9, 0x2027
	0x03CB3E2C ADD W9, W22, W9
	0x03CB3E30 CMP W9, 0x2
	0x03CB3E34 B.CC 0x3CB3F00
	0x03CB3E38 LDR X8, [X31 + 0x50]
	0x03CB3E3C LDR X9, [X8]
	0x03CB3E40 CBZ X9, 0x3CB7C14
	0x03CB3E44 LDR W8, [X19 + 0x350]
	0x03CB3E48 LDR W10, [X9 + 0x18]
	0x03CB3E4C ADD W22, W8, 0x1
	0x03CB3E50 CMP W22, W10
	0x03CB3E54 B.LE 0x3CB3E9C
	0x03CB3E58 ADRP X8, 0x4AE000
	0x03CB3E5C LDR X8, [X8 + 0xB68]
	0x03CB3E60 LDR X0, [X8]
	0x03CB3E64 LDR W8, [X0 + 0xE0]
	0x03CB3E68 CBNZ W8, 0x3CB3E70
	0x03CB3E6C BL 0x1C16DFC
	0x03CB3E70 ADRP X8, 0x4AE000
	0x03CB3E74 LDR X8, [X8 + 0xB58]
	0x03CB3E78 LDR X28, [X31 + 0x50]
	0x03CB3E7C MOVZ W2, 0x1
	0x03CB3E80 MOV W1, W22
	0x03CB3E84 LDR X3, [X8]
	0x03CB3E88 MOV X0, X28
	0x03CB3E8C BL 0x229C33C
	0x03CB3E90 LDR X9, [X28]
	0x03CB3E94 CBZ X9, 0x3CB7C14
	0x03CB3E98 LDR W8, [X19 + 0x350]
	0x03CB3E9C LDR W10, [X9 + 0x18]
	0x03CB3EA0 CMP W8, W10
	0x03CB3EA4 B.CS 0x3CB7C18
	0x03CB3EA8 LDR V0, [X19 + 0x19C8]
	0x03CB3EAC MOVZ W12, 0x14
	0x03CB3EB0 SMADDL X10, X8, X12, X9
	0x03CB3EB4 LDR V1, [X10 + 0x30]
	0x03CB3EB8 STR S0, [X10 + 0x28]
	0x03CB3EBC LDR V0, [X19 + 0x378]
	0x03CB3EC0 FCMP S0, S1
	0x03CB3EC4 FCSEL S0, S0, S1, MI
	0x03CB3EC8 STR S0, [X10 + 0x30]
	0x03CB3ECC LDRB W11, [X19 + 0x37C]
	0x03CB3ED0 SXTW X10, W8
	0x03CB3ED4 CBZ W11, 0x3CB3EEC
	0x03CB3ED8 LDR W8, [X19 + 0x324]
	0x03CB3EDC NOP
	0x03CB3EE0 MADD X11, X10, X12, X9
	0x03CB3EE4 STRB W31, [X19 + 0x37C]
	0x03CB3EE8 STR W8, [X11 + 0x20]
	0x03CB3EEC LDR W8, [X23]
	0x03CB3EF0 NOP
	0x03CB3EF4 MADD X9, X10, X12, X9
	0x03CB3EF8 STR W8, [X9 + 0x24]
	0x03CB3EFC LDR W22, [X31 + 0x128C]
	0x03CB3F00 CMP W22, 0xB
	0x03CB3F04 B.HI 0x3CB3F1C
	0x03CB3F08 MOVZ W9, 0x1
	0x03CB3F0C LSLV W9, W9, W22
	0x03CB3F10 MOVZ W10, 0xC08
	0x03CB3F14 ANDS W31, W9, W10, 0x0
	0x03CB3F18 B.NE 0x3CB3F2C
	0x03CB3F1C MOVN W9, 0x2027
	0x03CB3F20 ADD W9, W22, W9
	0x03CB3F24 CMP W9, 0x2
	0x03CB3F28 B.CS 0x3CB4550
	0x03CB3F2C LDR V0, [X19 + 0x2E0]
	0x03CB3F30 LDR X22, [X31 + 0x1D8]
	0x03CB3F34 FCMP S0, 0x0
	0x03CB3F38 B.LE 0x3CB4080
	0x03CB3F3C ADRP X8, 0x440000
	0x03CB3F40 LDR X8, [X8 + 0x5A8]
	0x03CB3F44 LDR V8, [X19 + 0x338]
	0x03CB3F48 LDR V9, [X19 + 0x15AC]
	0x03CB3F4C LDR X0, [X8]
	0x03CB3F50 LDR W8, [X0 + 0xE0]
	0x03CB3F54 CBNZ W8, 0x3CB3F5C
	0x03CB3F58 BL 0x1C16DFC
	0x03CB3F5C LDR V1, [X31 + 0xB0]
	0x03CB3F60 FSUB S9, S8, S9
	0x03CB3F64 FABS S0, S9
	0x03CB3F68 FCMP S0, S1
	0x03CB3F6C B.LE 0x3CB4080
	0x03CB3F70 LDRB W8, [X19 + 0x2E8]
	0x03CB3F74 CBNZ W8, 0x3CB4080
	0x03CB3F78 LDRB W8, [X19 + 0x37C]
	0x03CB3F7C CMP W8, 0x1
	0x03CB3F80 B.EQ 0x3CB4080
	0x03CB3F84 ADRP X8, 0x4AE000
	0x03CB3F88 LDR X8, [X8 + 0xB48]
	0x03CB3F8C LDR W22, [X19 + 0x328]
	0x03CB3F90 LDR W25, [X19 + 0x324]
	0x03CB3F94 LDR X0, [X8]
	0x03CB3F98 LDR W8, [X0 + 0xE0]
	0x03CB3F9C CBNZ W8, 0x3CB3FA4
	0x03CB3FA0 BL 0x1C16DFC
	0x03CB3FA4 MOV W0, W22
	0x03CB3FA8 MOV W1, W25
	0x03CB3FAC MOV V0.16B, V9.16B
	0x03CB3FB0 MOV X2, X21
	0x03CB3FB4 MOV X3, X31
	0x03CB3FB8 BL 0x3CC8C40
	0x03CB3FBC LDR V0, [X19 + 0x378]
	0x03CB3FC0 LDR V1, [X19 + 0x2E0]
	0x03CB3FC4 LDR W8, [X19 + 0xAD8]
	0x03CB3FC8 LDR W9, [X19 + 0x340]
	0x03CB3FCC LDP X25, X22, [X31 + 0x1D0]
	0x03CB3FD0 FSUB S0, S0, S9
	0x03CB3FD4 FADD S1, S9, S1
	0x03CB3FD8 CMP W8, W9
	0x03CB3FDC STR S0, [X19 + 0x378]
	0x03CB3FE0 STR S1, [X19 + 0x2E0]
	0x03CB3FE4 B.NE 0x3CB4080
	0x03CB3FE8 ADRP X8, 0x4AE000
	0x03CB3FEC LDR X8, [X8 + 0xB88]
	0x03CB3FF0 LDR X29, [X31 + 0x78]
	0x03CB3FF4 LDR X1, [X8]
	0x03CB3FF8 ADD X8, X31, 0x1000
	0x03CB3FFC ADD X8, X8, 0x290
	0x03CB4000 MOV X0, X29
	0x03CB4004 BL 0x26E3A7C
	0x03CB4008 ADD X1, X31, 0x1000
	0x03CB400C ADD X0, X31, 0x220
	0x03CB4010 ADD X1, X1, 0x290
	0x03CB4014 MOVZ W2, 0x398
	0x03CB4018 BL 0x3EB1AC0
	0x03CB401C LDR X28, [X31 + 0x68]
	0x03CB4020 ADD X1, X31, 0x220
	0x03CB4024 MOVZ W2, 0x398
	0x03CB4028 MOV X0, X28
	0x03CB402C BL 0x3EB1AC0
	0x03CB4030 LDR V0, [X19 + 0xAF0]
	0x03CB4034 LDR V1, [X19 + 0xB24]
	0x03CB4038 ADRP X8, 0x4AD000
	0x03CB403C ADD X0, X31, 0x1000
	0x03CB4040 FADD S0, S9, S0
	0x03CB4044 FADD S1, S9, S1
	0x03CB4048 STR S0, [X19 + 0xAF0]
	0x03CB404C STR S1, [X19 + 0xB24]
	0x03CB4050 LDR X8, [X8 + 0xB90]
	0x03CB4054 ADD X0, X0, 0x290
	0x03CB4058 MOVZ W2, 0x398
	0x03CB405C MOV X1, X28
	0x03CB4060 LDR X22, [X8]
	0x03CB4064 BL 0x3EB1AC0
	0x03CB4068 MOV X2, X22
	0x03CB406C LDR X22, [X31 + 0x1D8]
	0x03CB4070 ADD X1, X31, 0x1000
	0x03CB4074 ADD X1, X1, 0x290
	0x03CB4078 MOV X0, X29
	0x03CB407C BL 0x26E3974
	0x03CB4080 LDR V0, [X19 + 0x2E0]
	0x03CB4084 LDR V1, [X19 + 0x33C]
	0x03CB4088 LDR V2, [X19 + 0x378]
	0x03CB408C ADD X8, X31, 0x1000
	0x03CB4090 STRB W31, [X19 + 0x37C]
	0x03CB4094 FSUB S8, S1, S0
	0x03CB4098 FCMP S2, S8
	0x03CB409C FCSEL S2, S2, S8, MI
	0x03CB40A0 STR S2, [X19 + 0x378]
	0x03CB40A4 ADD X8, X8, 0x180
	0x03CB40A8 LDRB W8, [X8 + 0x104]
	0x03CB40AC LDR V1, [X19 + 0x338]
	0x03CB40B0 CBNZ W8, 0x3CB40B8
	0x03CB40B4 STR S2, [X31 + 0x1288]
	0x03CB40B8 LDRB W8, [X25 + 0xE8]
	0x03CB40BC MOVZ W29, 0x60
	0x03CB40C0 CBZ W8, 0x3CB40F4
	0x03CB40C4 LDR W8, [X23]
	0x03CB40C8 LDR W9, [X25 + 0xD8]
	0x03CB40CC CMP W8, W9
	0x03CB40D0 B.GE 0x3CB40E4
	0x03CB40D4 LDR W8, [X19 + 0x340]
	0x03CB40D8 LDR W9, [X25 + 0xE0]
	0x03CB40DC CMP W8, W9
	0x03CB40E0 B.LT 0x3CB40F4
	0x03CB40E4 ADD X8, X31, 0x1000
	0x03CB40E8 ADD X8, X8, 0x180
	0x03CB40EC MOVZ W9, 0x1
	0x03CB40F0 STRB W9, [X8 + 0x104]
	0x03CB40F4 ADRP X28, 0x43F000
	0x03CB40F8 LDR X8, [X21 + 0x48]
	0x03CB40FC LDR X28, [X28 + 0xA28]
	0x03CB4100 CBZ X8, 0x3CB7C14
	0x03CB4104 LDRSW X9, [X19 + 0x340]
	0x03CB4108 LDR W10, [X8 + 0x18]
	0x03CB410C CMP W9, W10
	0x03CB4110 B.CS 0x3CB7C18
	0x03CB4114 LDR W11, [X19 + 0x328]
	0x03CB4118 NOP
	0x03CB411C MADD X12, X9, X29, X8
	0x03CB4120 STR W11, [X12 + 0x38]
	0x03CB4124 LDR W10, [X19 + 0x330]
	0x03CB4128 LDR W13, [X19 + 0x328]
	0x03CB412C CMP W11, W10
	0x03CB4130 CSEL W10, W13, W10, GT
	0x03CB4134 STR W10, [X19 + 0x330]
	0x03CB4138 STR W10, [X12 + 0x3C]
	0x03CB413C LDR W13, [X19 + 0x324]
	0x03CB4140 STR W13, [X19 + 0x32C]
	0x03CB4144 STR W13, [X12 + 0x40]
	0x03CB4148 LDR W14, [X19 + 0x334]
	0x03CB414C LDR W15, [X19 + 0x330]
	0x03CB4150 SUB W11, W13, W11
	0x03CB4154 ADD W11, W11, 0x1
	0x03CB4158 CMP W14, W10
	0x03CB415C CSEL W13, W15, W14, LT
	0x03CB4160 STR W13, [X19 + 0x334]
	0x03CB4164 STR W13, [X12 + 0x44]
	0x03CB4168 STR W11, [X12 + 0x24]
	0x03CB416C LDR W11, [X19 + 0x344]
	0x03CB4170 STR W11, [X12 + 0x28]
	0x03CB4174 LDR W11, [X19 + 0x348]
	0x03CB4178 STR W11, [X12 + 0x30]
	0x03CB417C LDR X11, [X22]
	0x03CB4180 CBZ X11, 0x3CB7C14
	0x03CB4184 LDR W12, [X11 + 0x18]
	0x03CB4188 CMP W10, W12
	0x03CB418C B.CS 0x3CB7C18
	0x03CB4190 SMADDL X10, X10, X26, X11
	0x03CB4194 LDR W10, [X10 + 0x124]
	0x03CB4198 NOP
	0x03CB419C MADD X8, X9, X29, X8
	0x03CB41A0 STR S8, [X8 + 0x74]
	0x03CB41A4 STR W10, [X8 + 0x70]
	0x03CB41A8 LDR X8, [X21 + 0x48]
	0x03CB41AC CBZ X8, 0x3CB7C14
	0x03CB41B0 LDRSW X9, [X19 + 0x340]
	0x03CB41B4 LDR W10, [X8 + 0x18]
	0x03CB41B8 CMP W9, W10
	0x03CB41BC B.CS 0x3CB7C18
	0x03CB41C0 LDR X10, [X22]
	0x03CB41C4 CBZ X10, 0x3CB7C14
	0x03CB41C8 LDRSW X11, [X19 + 0x334]
	0x03CB41CC LDR W12, [X10 + 0x18]
	0x03CB41D0 CMP W11, W12
	0x03CB41D4 B.CS 0x3CB7C18
	0x03CB41D8 MADD X10, X11, X26, X10
	0x03CB41DC LDR W10, [X10 + 0x130]
	0x03CB41E0 FSUB S9, S1, S0
	0x03CB41E4 MADD X8, X9, X29, X8
	0x03CB41E8 STR S9, [X8 + 0x7C]
	0x03CB41EC STR W10, [X8 + 0x78]
	0x03CB41F0 LDR X8, [X21 + 0x48]
	0x03CB41F4 CBZ X8, 0x3CB7C14
	0x03CB41F8 LDRSW X9, [X19 + 0x340]
	0x03CB41FC LDR W10, [X8 + 0x18]
	0x03CB4200 CMP W9, W10
	0x03CB4204 B.CS 0x3CB7C18
	0x03CB4208 MADD X10, X9, X29, X8
	0x03CB420C LDR V1, [X31 + 0x188]
	0x03CB4210 LDR V0, [X10 + 0x78]
	0x03CB4214 LDR W11, [X10 + 0x24]
	0x03CB4218 FMUL S1, S13, S1
	0x03CB421C FSUB S0, S0, S1
	0x03CB4220 STR S0, [X10 + 0x48]
	0x03CB4224 LDR V0, [X31 + 0x16C]
	0x03CB4228 CMP W11, 0x1
	0x03CB422C STR S0, [X10 + 0x60]
	0x03CB4230 B.NE 0x3CB4244
	0x03CB4234 LDR W10, [X19 + 0x158]
	0x03CB4238 NOP
	0x03CB423C MADD X8, X9, X29, X8
	0x03CB4240 STR W10, [X8 + 0x6C]
	0x03CB4244 LDR X8, [X31 + 0x190]
	0x03CB4248 LDR X0, [X8]
	0x03CB424C CBZ X0, 0x3CB7C14
	0x03CB4250 MOV X1, X31
	0x03CB4254 BL 0x3C9F134
	0x03CB4258 LDR X8, [X22]
	0x03CB425C CBZ X8, 0x3CB7C14
	0x03CB4260 LDRSW X10, [X19 + 0x334]
	0x03CB4264 LDR W12, [X8 + 0x18]
	0x03CB4268 CMP W10, W12
	0x03CB426C B.CS 0x3CB7C18
	0x03CB4270 LDR X9, [X21 + 0x48]
	0x03CB4274 CBZ X9, 0x3CB7C14
	0x03CB4278 MADD X11, X10, X26, X8
	0x03CB427C LDR V1, [X19 + 0x2EC]
	0x03CB4280 LDR V2, [X19 + 0x1594]
	0x03CB4284 LDRB W13, [X11 + 0x1A0]
	0x03CB4288 LDRSW X11, [X19 + 0x340]
	0x03CB428C CBNZ W13, 0x3CB429C
	0x03CB4290 LDRSW X10, [X19 + 0x32C]
	0x03CB4294 CMP W10, W12
	0x03CB4298 B.CS 0x3CB7C18
	0x03CB429C LDR X12, [X9 + 0x18]
	0x03CB42A0 CMP W11, W12
	0x03CB42A4 B.CS 0x3CB7C18
	0x03CB42A8 LDR V3, [X31 + 0x180]
	0x03CB42AC LDR V4, [X31 + 0x140]
	0x03CB42B0 LDRB W13, [X25 + 0xB6]
	0x03CB42B4 NOP
	0x03CB42B8 MADD X10, X10, X26, X8
	0x03CB42BC FADD S0, S3, S0
	0x03CB42C0 FADD S0, S4, S0
	0x03CB42C4 LDR V4, [X31 + 0x150]
	0x03CB42C8 FMOV S3, 1
	0x03CB42CC FSUB S2, S3, S2
	0x03CB42D0 LDR V3, [X10 + 0x164]
	0x03CB42D4 FMUL S0, S4, S0
	0x03CB42D8 FADD S0, S1, S0
	0x03CB42DC FMUL S0, S2, S0
	0x03CB42E0 CMP W13, 0x0
	0x03CB42E4 FNEG S1, S0
	0x03CB42E8 FCSEL S0, S1, S0, EQ
	0x03CB42EC MADD X10, X11, X29, X9
	0x03CB42F0 FADD S0, S3, S0
	0x03CB42F4 CMP W11, W12
	0x03CB42F8 STR S0, [X10 + 0x5C]
	0x03CB42FC B.CS 0x3CB7C18
	0x03CB4300 LDR V2, [X31 + 0xAC]
	0x03CB4304 LDR V0, [X19 + 0x2E0]
	0x03CB4308 FSUB S1, S9, S8
	0x03CB430C MADD X9, X11, X29, X9
	0x03CB4310 FADD S1, S2, S1
	0x03CB4314 FMOV S2, W31
	0x03CB4318 FSUB S0, S2, S0
	0x03CB431C STP S0, S8, [X9 + 0x54]
	0x03CB4320 STP S1, S9, [X9 + 0x4C]
	0x03CB4324 LDR W22, [X31 + 0x128C]
	0x03CB4328 CMP W22, 0x2C
	0x03CB432C B.GT 0x3CB4358
	0x03CB4330 SUB W9, W22, 0xA
	0x03CB4334 CMP W9, 0x2
	0x03CB4338 B.CC 0x3CB4370
	0x03CB433C CMP W22, 0x3
	0x03CB4340 B.NE 0x3CB4584
	0x03CB4344 LDR X9, [X19 + 0x20]
	0x03CB4348 CBZ X9, 0x3CB7C14
	0x03CB434C LDR X9, [X9 + 0x18]
	0x03CB4350 STR W9, [X31 + 0x11FC]
	0x03CB4354 B 0x3CB4584
	0x03CB4358 MOVN W9, 0x2027
	0x03CB435C ADD W9, W22, W9
	0x03CB4360 CMP W9, 0x2
	0x03CB4364 B.CC 0x3CB4370
	0x03CB4368 CMP W22, 0x2D
	0x03CB436C B.NE 0x3CB4584
	0x03CB4370 LDR W2, [X31 + 0x11FC]
	0x03CB4374 LDR W3, [X19 + 0x324]
	0x03CB4378 LDR X1, [X31 + 0x98]
	0x03CB437C MOV X0, X19
	0x03CB4380 MOV X4, X21
	0x03CB4384 MOV X5, X31
	0x03CB4388 BL 0x3CBAA64
	0x03CB438C LDR W8, [X19 + 0x340]
	0x03CB4390 LDR W3, [X19 + 0x324]
	0x03CB4394 ADD W22, W8, 0x1
	0x03CB4398 ADD W8, W3, 0x1
	0x03CB439C STR W22, [X19 + 0x340]
	0x03CB43A0 STR W8, [X19 + 0x328]
	0x03CB43A4 STR X31, [X23 + 0x20]
	0x03CB43A8 LDR X8, [X21 + 0x48]
	0x03CB43AC CBZ X8, 0x3CB7C14
	0x03CB43B0 LDR W8, [X8 + 0x18]
	0x03CB43B4 LDR W24, [X31 + 0x1A8]
	0x03CB43B8 CMP W22, W8
	0x03CB43BC B.LT 0x3CB43EC
	0x03CB43C0 ADRP X8, 0x4AD000
	0x03CB43C4 LDR X8, [X8 + 0xB48]
	0x03CB43C8 LDR X0, [X8]
	0x03CB43CC LDR W8, [X0 + 0xE0]
	0x03CB43D0 CBNZ W8, 0x3CB43D8
	0x03CB43D4 BL 0x1C16DFC
	0x03CB43D8 MOV W0, W22
	0x03CB43DC MOV X1, X21
	0x03CB43E0 MOV X2, X31
	0x03CB43E4 BL 0x3CC8DC0
	0x03CB43E8 LDR W3, [X23]
	0x03CB43EC LDR X22, [X31 + 0x1D8]
	0x03CB43F0 LDR X8, [X22]
	0x03CB43F4 CBZ X8, 0x3CB7C14
	0x03CB43F8 LDR W9, [X8 + 0x18]
	0x03CB43FC CMP W3, W9
	0x03CB4400 B.CS 0x3CB7C18
	0x03CB4404 ADRP X9, 0xFFFFFFFFFCE36000
	0x03CB4408 LDR V1, [X19 + 0x2E4]
	0x03CB440C LDR V2, [X9 + 0x214]
	0x03CB4410 NOP
	0x03CB4414 SMADDL X8, X3, X26, X8
	0x03CB4418 LDR V0, [X8 + 0x158]
	0x03CB441C FCMP S1, S2
	0x03CB4420 B.NE 0x3CB4490
	0x03CB4424 LDR W8, [X31 + 0x128C]
	0x03CB4428 MOVZ W9, 0x2029
	0x03CB442C FMOV S1, W31
	0x03CB4430 CMP W8, W9
	0x03CB4434 B.EQ 0x3CB4444
	0x03CB4438 CMP W8, 0xA
	0x03CB443C FMOV S2, W31
	0x03CB4440 B.NE 0x3CB4448
	0x03CB4444 LDR V2, [X25 + 0xCC]
	0x03CB4448 LDR V3, [X19 + 0x33C]
	0x03CB444C LDR V4, [X19 + 0x15B0]
	0x03CB4450 LDR V5, [X25 + 0xC8]
	0x03CB4454 LDR V6, [X19 + 0x2E0]
	0x03CB4458 FSUB S1, S1, S3
	0x03CB445C LDR V3, [X31 + 0x84]
	0x03CB4460 FADD S1, S0, S1
	0x03CB4464 FADD S2, S5, S2
	0x03CB4468 MOV W8, W31
	0x03CB446C FADD S3, S3, S4
	0x03CB4470 LDR V4, [X31 + 0x88]
	0x03CB4474 FMUL S3, S4, S3
	0x03CB4478 FADD S1, S1, S3
	0x03CB447C LDR V3, [X31 + 0x150]
	0x03CB4480 FMUL S2, S3, S2
	0x03CB4484 FADD S1, S1, S2
	0x03CB4488 FADD S1, S1, S6
	0x03CB448C B 0x3CB44D0
	0x03CB4490 LDR W8, [X31 + 0x128C]
	0x03CB4494 MOVZ W9, 0x2029
	0x03CB4498 CMP W8, W9
	0x03CB449C B.EQ 0x3CB44AC
	0x03CB44A0 CMP W8, 0xA
	0x03CB44A4 FMOV S2, W31
	0x03CB44A8 B.NE 0x3CB44B0
	0x03CB44AC LDR V2, [X25 + 0xCC]
	0x03CB44B0 LDR V3, [X25 + 0xC8]
	0x03CB44B4 LDR V4, [X19 + 0x2E0]
	0x03CB44B8 MOVZ W8, 0x1
	0x03CB44BC FADD S2, S3, S2
	0x03CB44C0 LDR V3, [X31 + 0x150]
	0x03CB44C4 FMUL S2, S3, S2
	0x03CB44C8 FADD S1, S1, S2
	0x03CB44CC FADD S1, S4, S1
	0x03CB44D0 STR S1, [X19 + 0x2E0]
	0x03CB44D4 LDR V1, [X19 + 0x2F8]
	0x03CB44D8 LDR V2, [X19 + 0x2FC]
	0x03CB44DC LDR V3, [X31 + 0x90]
	0x03CB44E0 STR S0, [X19 + 0x15AC]
	0x03CB44E4 FMOV S0, W31
	0x03CB44E8 FADD S0, S1, S0
	0x03CB44EC FADD S0, S0, S2
	0x03CB44F0 STRB W8, [X19 + 0x2E8]
	0x03CB44F4 STR D3, [X19 + 0x338]
	0x03CB44F8 STR S0, [X19 + 0x2F4]
	0x03CB44FC LDR W2, [X31 + 0x11FC]
	0x03CB4500 LDR X1, [X31 + 0xB8]
	0x03CB4504 MOV X0, X19
	0x03CB4508 MOV X4, X21
	0x03CB450C MOV X5, X31
	0x03CB4510 BL 0x3CBAA64
	0x03CB4514 LDR W2, [X31 + 0x11FC]
	0x03CB4518 LDR W3, [X19 + 0x324]
	0x03CB451C LDR X1, [X31 + 0xE8]
	0x03CB4520 MOV X0, X19
	0x03CB4524 MOV X4, X21
	0x03CB4528 MOV X5, X31
	0x03CB452C BL 0x3CBAA64
	0x03CB4530 LDR W8, [X19 + 0x324]
	0x03CB4534 MOVZ W9, 0x1
	0x03CB4538 STR W9, [X31 + 0xE0]
	0x03CB453C ADD W8, W8, 0x1
	0x03CB4540 STR W8, [X19 + 0x324]
	0x03CB4544 MOVZ W8, 0x1
	0x03CB4548 STR W8, [X31 + 0xB4]
	0x03CB454C B 0x3CB146C
	0x03CB4550 LDR W10, [X31 + 0x1C4]
	0x03CB4554 CMP W22, 0x2D
	0x03CB4558 CSET W9, EQ
	0x03CB455C AND W9, W10, W9, 0x0
	0x03CB4560 TBNZ X9, 0x0, 0x3CB3F2C
	0x03CB4564 LDR W9, [X31 + 0xE4]
	0x03CB4568 CMP W8, W9
	0x03CB456C B.EQ 0x3CB3F2C
	0x03CB4570 LDR X8, [X31 + 0x1D8]
	0x03CB4574 ADRP X28, 0x43F000
	0x03CB4578 LDR X8, [X8]
	0x03CB457C LDR X28, [X28 + 0xA28]
	0x03CB4580 CBZ X8, 0x3CB7C14
	0x03CB4584 LDRSW X3, [X23]
	0x03CB4588 LDR W9, [X8 + 0x18]
	0x03CB458C CMP W3, W9
	0x03CB4590 B.CS 0x3CB7C18
	0x03CB4594 MADD X9, X3, X26, X8
	0x03CB4598 LDRB W9, [X9 + 0x1A0]
	0x03CB459C CBZ W9, 0x3CB45D0
	0x03CB45A0 MADD X8, X3, X26, X8
	0x03CB45A4 ADD X9, X8, 0x124
	0x03CB45A8 LDR V0, [X19 + 0x360]
	0x03CB45AC LDR V1, [X9]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03CB45B8 STR D0, [X19 + 0x360]
	0x03CB45BC LDR V0, [X19 + 0x368]
	0x03CB45C0 LDR V1, [X8 + 0x130]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03CB45CC STR D0, [X19 + 0x368]
	0x03CB45D0 LDR W8, [X31 + 0x8C]
	0x03CB45D4 CBNZ W8, 0x3CB45F8
	0x03CB45D8 LDR W8, [X25 + 0x74]
	0x03CB45DC CMP W8, 0x6
	0x03CB45E0 B.HI 0x3CB4CBC
	0x03CB45E4 MOVZ W9, 0x1
	0x03CB45E8 LSLV W8, W9, W8
	0x03CB45EC MOVZ W9, 0x4A
	0x03CB45F0 ANDS W31, W8, W9, 0x0
	0x03CB45F4 B.EQ 0x3CB4CBC
	0x03CB45F8 LDR W8, [X31 + 0x1A0]
	0x03CB45FC CBZ W8, 0x3CB4670
	0x03CB4600 LDRB W8, [X19 + 0x37D]
	0x03CB4604 CMP W8, 0x1
	0x03CB4608 B.EQ 0x3CB47C4
	0x03CB460C MOVN W8, 0x2006
	0x03CB4610 ADD W8, W22, W8
	0x03CB4614 CMP W8, 0x28
	0x03CB4618 B.HI 0x3CB4634
	0x03CB461C MOVZ W9, 0x1
	0x03CB4620 LSLV X8, X9, X8
	0x03CB4624 MOVZ X9, 0x401
	0x03CB4628 MOVK X9, 0x100
	0x03CB462C ANDS X31, X8, X9, 0x0
	0x03CB4630 B.NE 0x3CB4694
	0x03CB4634 CMP W22, 0xA0
	0x03CB4638 B.EQ 0x3CB4694
	0x03CB463C MOVZ W8, 0x2060
	0x03CB4640 CMP W22, W8
	0x03CB4644 B.EQ 0x3CB4694
	0x03CB4648 LDR W2, [X31 + 0x11FC]
	0x03CB464C LDR X1, [X31 + 0xB8]
	0x03CB4650 MOV X0, X19
	0x03CB4654 MOV X4, X21
	0x03CB4658 MOV X5, X31
	0x03CB465C BL 0x3CBAA64
	0x03CB4660 MOVN W8, 0x0
	0x03CB4664 STR W31, [X31 + 0xE0]
	0x03CB4668 STR W8, [X19 + 0x11E0]
	0x03CB466C B 0x3CB4CBC
	0x03CB4670 CMP W22, 0x2D
	0x03CB4674 B.EQ 0x3CB4600
	0x03CB4678 MOVZ W8, 0x200B
	0x03CB467C CMP W22, W8
	0x03CB4680 B.EQ 0x3CB4600
	0x03CB4684 CMP W22, 0xAD
	0x03CB4688 B.EQ 0x3CB4600
	0x03CB468C LDRB W8, [X19 + 0x37D]
	0x03CB4690 CBNZ W8, 0x3CB47C4
	0x03CB4694 ADRP X8, 0x4AD000
	0x03CB4698 LDR X8, [X8 + 0xB48]
	0x03CB469C LDR X0, [X8]
	0x03CB46A0 LDR W8, [X0 + 0xE0]
	0x03CB46A4 CBNZ W8, 0x3CB46AC
	0x03CB46A8 BL 0x1C16DFC
	0x03CB46AC MOV W0, W22
	0x03CB46B0 MOV X1, X31
	0x03CB46B4 BL 0x3CC95E0
	0x03CB46B8 LDR X22, [X31 + 0x60]
	0x03CB46BC TBZ X0, 0x0, 0x3CB46DC
	0x03CB46C0 CBZ X22, 0x3CB7C14
	0x03CB46C4 MOV X0, X22
	0x03CB46C8 MOV X1, X31
	0x03CB46CC BL 0x3CCBFE8
	0x03CB46D0 CBZ X0, 0x3CB7C14
	0x03CB46D4 LDRB W8, [X0 + 0x28]
	0x03CB46D8 CBZ W8, 0x3CB4710
	0x03CB46DC ADRP X8, 0x4AD000
	0x03CB46E0 LDR X8, [X8 + 0xB48]
	0x03CB46E4 LDR W22, [X31 + 0x128C]
	0x03CB46E8 LDR X0, [X8]
	0x03CB46EC LDR W8, [X0 + 0xE0]
	0x03CB46F0 CBNZ W8, 0x3CB46F8
	0x03CB46F4 BL 0x1C16DFC
	0x03CB46F8 MOV W0, W22
	0x03CB46FC MOV X1, X31
	0x03CB4700 BL 0x3CC9650
	0x03CB4704 TBZ X0, 0x0, 0x3CB47C4
	0x03CB4708 LDR X22, [X31 + 0x60]
	0x03CB470C CBZ X22, 0x3CB7C14
	0x03CB4710 MOV X0, X22
	0x03CB4714 MOV X1, X31
	0x03CB4718 BL 0x3CCBFE8
	0x03CB471C CBZ X0, 0x3CB7C14
	0x03CB4720 MOV X1, X31
	0x03CB4724 BL 0x3CCE05C
	0x03CB4728 CBZ X0, 0x3CB7C14
	0x03CB472C ADRP X8, 0x4A4000
	0x03CB4730 LDR W1, [X31 + 0x128C]
	0x03CB4734 LDR X8, [X8 + 0xE00]
	0x03CB4738 LDR X2, [X8]
	0x03CB473C BL 0x2DCD240
	0x03CB4740 LDR W3, [X23]
	0x03CB4744 LDR W8, [X31 + 0xE4]
	0x03CB4748 MOV W22, W0
	0x03CB474C CMP W3, W8
	0x03CB4750 B.GE 0x3CB49B0
	0x03CB4754 LDR X0, [X31 + 0x60]
	0x03CB4758 MOV X1, X31
	0x03CB475C BL 0x3CCBFE8
	0x03CB4760 CBZ X0, 0x3CB7C14
	0x03CB4764 MOV X1, X31
	0x03CB4768 BL 0x3CCE258
	0x03CB476C LDR X8, [X31 + 0x1D8]
	0x03CB4770 LDR X8, [X8]
	0x03CB4774 CBZ X8, 0x3CB7C14
	0x03CB4778 LDR W9, [X23]
	0x03CB477C LDR W10, [X8 + 0x18]
	0x03CB4780 ADD W9, W9, 0x1
	0x03CB4784 CMP W9, W10
	0x03CB4788 B.CS 0x3CB7C18
	0x03CB478C CBZ X0, 0x3CB7C14
	0x03CB4790 SMADDL X8, X9, X26, X8
	0x03CB4794 LDRH W1, [X8 + 0x20]
	0x03CB4798 ADRP X8, 0x4A4000
	0x03CB479C LDR X8, [X8 + 0xE00]
	0x03CB47A0 LDR X2, [X8]
	0x03CB47A4 BL 0x2DCD240
	0x03CB47A8 TBNZ X22, 0x0, 0x3CB49B4
	0x03CB47AC TBZ X0, 0x0, 0x3CB4C9C
	0x03CB47B0 LDR W8, [X31 + 0xE0]
	0x03CB47B4 TBZ X8, 0x0, 0x3CB4CB8
	0x03CB47B8 LDR X22, [X31 + 0x1D8]
	0x03CB47BC LDR W24, [X31 + 0x1A8]
	0x03CB47C0 B 0x3CB49D0
	0x03CB47C4 LDR W8, [X31 + 0xE0]
	0x03CB47C8 TBZ X8, 0x0, 0x3CB4CB8
	0x03CB47CC LDR W9, [X31 + 0x1A0]
	0x03CB47D0 LDR W8, [X31 + 0x128C]
	0x03CB47D4 LDR X22, [X31 + 0x1D8]
	0x03CB47D8 LDR W24, [X31 + 0x1A8]
	0x03CB47DC CMP W9, 0x0
	0x03CB47E0 CSET W9, NE
	0x03CB47E4 CMP W8, 0xA0
	0x03CB47E8 CSET W10, NE
	0x03CB47EC CMP W8, 0xAD
	0x03CB47F0 AND W9, W9, W10, 0x0
	0x03CB47F4 CSET W8, NE
	0x03CB47F8 TBNZ X9, 0x0, 0x3CB4808
	0x03CB47FC LDR W9, [X31 + 0xC0]
	0x03CB4800 ORR W8, W9, W8, 0x0
	0x03CB4804 TBNZ X8, 0x0, 0x3CB4824
	0x03CB4808 LDR W2, [X31 + 0x11FC]
	0x03CB480C LDR W3, [X19 + 0x324]
	0x03CB4810 LDR X1, [X31 + 0x30]
	0x03CB4814 MOV X0, X19
	0x03CB4818 MOV X4, X21
	0x03CB481C MOV X5, X31
	0x03CB4820 BL 0x3CBAA64
	0x03CB4824 LDR W2, [X31 + 0x11FC]
	0x03CB4828 LDR W3, [X19 + 0x324]
	0x03CB482C LDR X1, [X31 + 0xB8]
	0x03CB4830 MOV X0, X19
	0x03CB4834 MOV X4, X21
	0x03CB4838 MOV X5, X31
	0x03CB483C BL 0x3CBAA64
	0x03CB4840 MOVZ W8, 0x1
	0x03CB4844 STR W8, [X31 + 0xE0]
	0x03CB4848 B 0x3CB4CC4
	0x03CB484C ADD X0, X0, 0x1E0
	0x03CB4850 MOV X1, X31
	0x03CB4854 BL 0x3C9C2EC
	0x03CB4858 LDR V11, [X19 + 0x19A8]
	0x03CB485C ADD X0, X31, 0x1000
	0x03CB4860 ADD X0, X0, 0x1D0
	0x03CB4864 MOV X1, X31
	0x03CB4868 MOV V8.16B, V0.16B
	0x03CB486C BL 0x3C9E384
	0x03CB4870 LDR X0, [X19 + 0x68]
	0x03CB4874 CBZ X0, 0x3CB7C14
	0x03CB4878 MOV X1, X31
	0x03CB487C MOV V9.16B, V0.16B
	0x03CB4880 BL 0x3C9F134
	0x03CB4884 LDR V4, [X31 + 0x180]
	0x03CB4888 LDR V1, [X19 + 0x2EC]
	0x03CB488C FMUL S3, S8, S11
	0x03CB4890 LDR V2, [X19 + 0x1594]
	0x03CB4894 FADD S0, S4, S0
	0x03CB4898 LDR V4, [X31 + 0x140]
	0x03CB489C FADD S3, S3, S9
	0x03CB48A0 FMUL S3, S13, S3
	0x03CB48A4 FADD S0, S4, S0
	0x03CB48A8 LDR V4, [X31 + 0x150]
	0x03CB48AC FMUL S0, S4, S0
	0x03CB48B0 FADD S0, S3, S0
	0x03CB48B4 FADD S0, S1, S0
	0x03CB48B8 FMOV S1, 1
	0x03CB48BC FSUB S1, S1, S2
	0x03CB48C0 FMUL S0, S1, S0
	0x03CB48C4 FADD S0, S10, S0
	0x03CB48C8 B 0x3CB3CEC
	0x03CB48CC ADRP X8, 0x4AD000
	0x03CB48D0 LDR X8, [X8 + 0xBD8]
	0x03CB48D4 LDR X20, [X31 + 0x78]
	0x03CB48D8 LDR X1, [X8]
	0x03CB48DC MOV X0, X20
	0x03CB48E0 BL 0x26E3614
	0x03CB48E4 ADRP X28, 0x43F000
	0x03CB48E8 LDR X28, [X28 + 0xA28]
	0x03CB48EC MOV V13.16B, V12.16B
	0x03CB48F0 CBZ W0, 0x3CB4C74
	0x03CB48F4 ADRP X8, 0x4AD000
	0x03CB48F8 LDR X8, [X8 + 0xB88]
	0x03CB48FC MOV X0, X20
	0x03CB4900 LDR X1, [X8]
	0x03CB4904 ADD X8, X31, 0x1000
	0x03CB4908 ADD X8, X8, 0x290
	0x03CB490C BL 0x26E3A7C
	0x03CB4910 ADD X1, X31, 0x1000
	0x03CB4914 ADD X0, X31, 0x5F8
	0x03CB4918 ADD X1, X1, 0x290
	0x03CB491C MOVZ W2, 0x398
	0x03CB4920 BL 0x3EB1AC0
	0x03CB4924 LDR X21, [X31 + 0x1B8]
	0x03CB4928 ADD X1, X31, 0x5F8
	0x03CB492C MOV X0, X19
	0x03CB4930 MOV X3, X31
	0x03CB4934 MOV X2, X21
	0x03CB4938 BL 0x3CBACF8
	0x03CB493C SUB W8, W0, 0x1
	0x03CB4940 STR W8, [X31 + 0x11FC]
	0x03CB4944 LDR W8, [X19 + 0x324]
	0x03CB4948 LDR W24, [X31 + 0x1A8]
	0x03CB494C LDR X23, [X31 + 0x1C8]
	0x03CB4950 SUB W8, W8, 0x1
	0x03CB4954 STR W8, [X19 + 0x324]
	0x03CB4958 STR W8, [X31 + 0x1278]
	0x03CB495C MOVZ W8, 0x2026
	0x03CB4960 STR W8, [X31 + 0x127C]
	0x03CB4964 ADD W24, W24, 0x1
	0x03CB4968 B 0x3CB146C
	0x03CB496C LDR X21, [X31 + 0x1B8]
	0x03CB4970 LDR X1, [X31 + 0xB8]
	0x03CB4974 MOV X0, X19
	0x03CB4978 MOV X3, X31
	0x03CB497C MOV X2, X21
	0x03CB4980 BL 0x3CBACF8
	0x03CB4984 STR W0, [X31 + 0x11FC]
	0x03CB4988 LDR W8, [X19 + 0x324]
	0x03CB498C MOVZ W9, 0x3
	0x03CB4990 STR W9, [X31 + 0x127C]
	0x03CB4994 STR W8, [X31 + 0x1278]
	0x03CB4998 ADRP X28, 0x43F000
	0x03CB499C LDR X28, [X28 + 0xA28]
	0x03CB49A0 LDR X23, [X31 + 0x1C8]
	0x03CB49A4 B 0x3CB4A08
	0x03CB49A8 LDR V12, [X31 + 0x170]
	0x03CB49AC B 0x3CB33F4
	0x03CB49B0 TBZ X22, 0x0, 0x3CB4CA0
	0x03CB49B4 LDR W9, [X31 + 0xE0]
	0x03CB49B8 CMP W20, W24
	0x03CB49BC LDR X22, [X31 + 0x1D8]
	0x03CB49C0 LDR W24, [X31 + 0x1A8]
	0x03CB49C4 CSET W8, NE
	0x03CB49C8 ORN W8, W8, W9, 0x0
	0x03CB49CC TBNZ X8, 0x0, 0x3CB4CC4
	0x03CB49D0 LDR W8, [X31 + 0x1A0]
	0x03CB49D4 CBNZ W8, 0x3CB4808
	0x03CB49D8 B 0x3CB4824
	0x03CB49DC ADRP X8, 0xFFFFFFFFFCE39000
	0x03CB49E0 LDR V0, [X8 + 0xB60]
	0x03CB49E4 LDR X23, [X31 + 0x1C8]
	0x03CB49E8 MOVN W8, 0x0
	0x03CB49EC STR W8, [X31 + 0x11FC]
	0x03CB49F0 STR D0, [X31 + 0x1278]
	0x03CB49F4 STR X31, [X23]
	0x03CB49F8 ADRP X28, 0x43F000
	0x03CB49FC LDR X21, [X31 + 0x1B8]
	0x03CB4A00 LDR X28, [X28 + 0xA28]
	0x03CB4A04 LDR X22, [X31 + 0x1D8]
	0x03CB4A08 LDR W24, [X31 + 0x1A8]
	0x03CB4A0C B 0x3CB146C
	0x03CB4A10 MOVZ W8, 0x1
	0x03CB4A14 LDR V2, [X25 + 0xC8]
	0x03CB4A18 STRB W8, [X19 + 0x2E8]
	0x03CB4A1C LDR X9, [X22]
	0x03CB4A20 CBZ X9, 0x3CB7C14
	0x03CB4A24 LDR V3, [X31 + 0x150]
	0x03CB4A28 LDR V0, [X19 + 0x2E0]
	0x03CB4A2C LDR W8, [X19 + 0x324]
	0x03CB4A30 FMUL S2, S3, S2
	0x03CB4A34 FADD S1, S1, S2
	0x03CB4A38 LDR W11, [X9 + 0x18]
	0x03CB4A3C CMP W8, W11
	0x03CB4A40 B.CS 0x3CB7C18
	0x03CB4A44 SUB W10, W8, 0x1
	0x03CB4A48 CMP W10, W11
	0x03CB4A4C B.CS 0x3CB7C18
	0x03CB4A50 SMADDL X12, X10, X26, X9
	0x03CB4A54 LDRH W12, [X12 + 0x20]
	0x03CB4A58 LDR V2, [X19 + 0x374]
	0x03CB4A5C NOP
	0x03CB4A60 SMADDL X11, X8, X26, X9
	0x03CB4A64 LDR V3, [X11 + 0x15C]
	0x03CB4A68 CMP W12, 0xAD
	0x03CB4A6C LDR W12, [X31 + 0xC0]
	0x03CB4A70 FADD S1, S1, S2
	0x03CB4A74 FADD S0, S1, S0
	0x03CB4A78 CSET W11, NE
	0x03CB4A7C ORR W11, W12, W11, 0x0
	0x03CB4A80 FSUB S10, S0, S3
	0x03CB4A84 TBNZ X11, 0x0, 0x3CB4A9C
	0x03CB4A88 LDR V0, [X31 + 0x110]
	0x03CB4A8C FCMP S10, S0
	0x03CB4A90 B.MI 0x3CB4C3C
	0x03CB4A94 LDR W11, [X25 + 0x74]
	0x03CB4A98 CBZ W11, 0x3CB4C3C
	0x03CB4A9C MOV W10, W8
	0x03CB4AA0 SXTW X10, W10
	0x03CB4AA4 MADD X9, X10, X26, X9
	0x03CB4AA8 LDRH W9, [X9 + 0x20]
	0x03CB4AAC CMP W9, 0xAD
	0x03CB4AB0 B.NE 0x3CB4AD0
	0x03CB4AB4 MOVZ W8, 0x1
	0x03CB4AB8 STR W8, [X31 + 0xC0]
	0x03CB4ABC ADRP X28, 0x43F000
	0x03CB4AC0 LDR X21, [X31 + 0x1B8]
	0x03CB4AC4 LDR X28, [X28 + 0xA28]
	0x03CB4AC8 LDR X23, [X31 + 0x1C8]
	0x03CB4ACC B 0x3CB4C68
	0x03CB4AD0 LDRB W9, [X25 + 0xA8]
	0x03CB4AD4 LDR W10, [X31 + 0xE0]
	0x03CB4AD8 AND W9, W10, W9, 0x0
	0x03CB4ADC TBZ X9, 0x0, 0x3CB4B30
	0x03CB4AE0 LDR V0, [X25 + 0x108]
	0x03CB4AE4 LDR V1, [X19 + 0x1594]
	0x03CB4AE8 MOVZ W9, 0x42C80000
	0x03CB4AEC FMOV S2, W9
	0x03CB4AF0 FDIV S0, S0, S2
	0x03CB4AF4 FCMP S1, S0
	0x03CB4AF8 B.PL 0x3CB4B0C
	0x03CB4AFC LDR W9, [X19 + 0x15A0]
	0x03CB4B00 LDR W10, [X19 + 0x15A4]
	0x03CB4B04 CMP W9, W10
	0x03CB4B08 B.LT 0x3CB7BD8
	0x03CB4B0C LDR X9, [X31 + 0xC8]
	0x03CB4B10 LDR V0, [X25 + 0xAC]
	0x03CB4B14 LDR V1, [X9]
	0x03CB4B18 FCMP S1, S0
	0x03CB4B1C B.LE 0x3CB4B30
	0x03CB4B20 LDR W9, [X19 + 0x15A0]
	0x03CB4B24 LDR W10, [X19 + 0x15A4]
	0x03CB4B28 CMP W9, W10
	0x03CB4B2C B.LT 0x3CB7B34
	0x03CB4B30 LDR X9, [X31 + 0x30]
	0x03CB4B34 LDR W10, [X31 + 0x28]
	0x03CB4B38 LDR W22, [X9]
	0x03CB4B3C ADDS W31, W22, 0x1
	0x03CB4B40 CSET W9, NE
	0x03CB4B44 CMP W22, W10
	0x03CB4B48 B.EQ 0x3CB4CF4
	0x03CB4B4C LDR W10, [X31 + 0xE0]
	0x03CB4B50 AND W9, W10, W9, 0x0
	0x03CB4B54 CBZ W9, 0x3CB4CF4
	0x03CB4B58 LDR X25, [X31 + 0x1B8]
	0x03CB4B5C LDR X1, [X31 + 0x30]
	0x03CB4B60 MOV X0, X19
	0x03CB4B64 MOV X3, X31
	0x03CB4B68 MOV X2, X25
	0x03CB4B6C BL 0x3CBACF8
	0x03CB4B70 STR W0, [X31 + 0x11FC]
	0x03CB4B74 LDR X10, [X25 + 0x30]
	0x03CB4B78 CBZ X10, 0x3CB7C14
	0x03CB4B7C LDR X8, [X31 + 0x1C8]
	0x03CB4B80 LDR W11, [X10 + 0x18]
	0x03CB4B84 LDR W8, [X8]
	0x03CB4B88 SUB W9, W8, 0x1
	0x03CB4B8C CMP W9, W11
	0x03CB4B90 B.CS 0x3CB7C18
	0x03CB4B94 SMADDL X10, X9, X26, X10
	0x03CB4B98 LDRH W10, [X10 + 0x20]
	0x03CB4B9C LDR X25, [X31 + 0x1D0]
	0x03CB4BA0 MOV W1, W0
	0x03CB4BA4 CMP W10, 0xAD
	0x03CB4BA8 B.NE 0x3CB4CF0
	0x03CB4BAC LDR X23, [X31 + 0x1C8]
	0x03CB4BB0 MOVZ W8, 0x2D
	0x03CB4BB4 STR W8, [X31 + 0x127C]
	0x03CB4BB8 SUB W8, W1, 0x1
	0x03CB4BBC STR W31, [X31 + 0xC0]
	0x03CB4BC0 STR W9, [X31 + 0x1278]
	0x03CB4BC4 STR W8, [X31 + 0x11FC]
	0x03CB4BC8 STR W9, [X23]
	0x03CB4BCC STR W22, [X31 + 0x28]
	0x03CB4BD0 ADRP X28, 0x43F000
	0x03CB4BD4 LDR X21, [X31 + 0x1B8]
	0x03CB4BD8 LDR X28, [X28 + 0xA28]
	0x03CB4BDC LDR X22, [X31 + 0x1D8]
	0x03CB4BE0 B 0x3CB4C68
	0x03CB4BE4 LDR W8, [X19 + 0x324]
	0x03CB4BE8 LDR V0, [X31 + 0x90]
	0x03CB4BEC LDR X21, [X31 + 0x1B8]
	0x03CB4BF0 FMOV S1, W31
	0x03CB4BF4 STR W8, [X19 + 0x328]
	0x03CB4BF8 LDR W8, [X19 + 0x340]
	0x03CB4BFC STR D0, [X19 + 0x338]
	0x03CB4C00 LDR V0, [X19 + 0x2FC]
	0x03CB4C04 MOVZ W9, 0x1
	0x03CB4C08 ADD W8, W8, 0x1
	0x03CB4C0C STR W8, [X19 + 0x340]
	0x03CB4C10 LDR W8, [X19 + 0x350]
	0x03CB4C14 FADD S0, S0, S1
	0x03CB4C18 STRB W9, [X19 + 0x37C]
	0x03CB4C1C STR W31, [X19 + 0x15AC]
	0x03CB4C20 ADD W8, W8, 0x1
	0x03CB4C24 STR W31, [X19 + 0x2E0]
	0x03CB4C28 STR W31, [X19 + 0x374]
	0x03CB4C2C STR W31, [X19 + 0x19C8]
	0x03CB4C30 STR S0, [X19 + 0x2F4]
	0x03CB4C34 STR W8, [X19 + 0x350]
	0x03CB4C38 B 0x3CB146C
	0x03CB4C3C LDR X23, [X31 + 0x1C8]
	0x03CB4C40 MOVZ W8, 0x2D
	0x03CB4C44 STR W8, [X31 + 0x127C]
	0x03CB4C48 SUB W8, W1, 0x1
	0x03CB4C4C STR W31, [X31 + 0xC0]
	0x03CB4C50 STR W10, [X31 + 0x1278]
	0x03CB4C54 STR W8, [X31 + 0x11FC]
	0x03CB4C58 STR W10, [X23]
	0x03CB4C5C ADRP X28, 0x43F000
	0x03CB4C60 LDR X21, [X31 + 0x1B8]
	0x03CB4C64 LDR X28, [X28 + 0xA28]
	0x03CB4C68 LDR W24, [X31 + 0x1A8]
	0x03CB4C6C MOV V13.16B, V12.16B
	0x03CB4C70 B 0x3CB146C
	0x03CB4C74 ADRP X8, 0xFFFFFFFFFCE39000
	0x03CB4C78 LDR V0, [X8 + 0xB60]
	0x03CB4C7C LDR X23, [X31 + 0x1C8]
	0x03CB4C80 LDR X21, [X31 + 0x1B8]
	0x03CB4C84 LDR W24, [X31 + 0x1A8]
	0x03CB4C88 MOVN W8, 0x0
	0x03CB4C8C STR W8, [X31 + 0x11FC]
	0x03CB4C90 STR D0, [X31 + 0x1278]
	0x03CB4C94 STR X31, [X23]
	0x03CB4C98 B 0x3CB146C
	0x03CB4C9C LDR W3, [X23]
	0x03CB4CA0 LDR W2, [X31 + 0x11FC]
	0x03CB4CA4 LDR X1, [X31 + 0xB8]
	0x03CB4CA8 MOV X0, X19
	0x03CB4CAC MOV X4, X21
	0x03CB4CB0 MOV X5, X31
	0x03CB4CB4 BL 0x3CBAA64
	0x03CB4CB8 STR W31, [X31 + 0xE0]
	0x03CB4CBC LDR X22, [X31 + 0x1D8]
	0x03CB4CC0 LDR W24, [X31 + 0x1A8]
	0x03CB4CC4 LDR W2, [X31 + 0x11FC]
	0x03CB4CC8 LDR W3, [X19 + 0x324]
	0x03CB4CCC LDR X1, [X31 + 0xE8]
	0x03CB4CD0 MOV X0, X19
	0x03CB4CD4 MOV X4, X21
	0x03CB4CD8 MOV X5, X31
	0x03CB4CDC BL 0x3CBAA64
	0x03CB4CE0 LDR W8, [X19 + 0x324]
	0x03CB4CE4 ADD W8, W8, 0x1
	0x03CB4CE8 STR W8, [X19 + 0x324]
	0x03CB4CEC B 0x3CB146C
	0x03CB4CF0 STR W22, [X31 + 0x28]
	0x03CB4CF4 LDR V0, [X31 + 0x110]
	0x03CB4CF8 FCMP S10, S0
	0x03CB4CFC B.LE 0x3CB4E04
	0x03CB4D00 LDR W9, [X19 + 0x34C]
	0x03CB4D04 LDR X22, [X31 + 0x1D8]
	0x03CB4D08 ADDS W31, W9, 0x1
	0x03CB4D0C B.NE 0x3CB4D14
	0x03CB4D10 STR W8, [X19 + 0x34C]
	0x03CB4D14 LDRB W9, [X25 + 0xA8]
	0x03CB4D18 CBZ W9, 0x3CB4D8C
	0x03CB4D1C LDR V1, [X19 + 0x15B0]
	0x03CB4D20 LDR V0, [X25 + 0xD0]
	0x03CB4D24 FCMP S1, S0
	0x03CB4D28 B.LE 0x3CB4D3C
	0x03CB4D2C LDR W9, [X19 + 0x15A0]
	0x03CB4D30 LDR W10, [X19 + 0x15A4]
	0x03CB4D34 CMP W9, W10
	0x03CB4D38 B.LT 0x3CB7C1C
	0x03CB4D3C LDR V0, [X25 + 0x108]
	0x03CB4D40 LDR V1, [X19 + 0x1594]
	0x03CB4D44 MOVZ W9, 0x42C80000
	0x03CB4D48 FMOV S2, W9
	0x03CB4D4C FDIV S0, S0, S2
	0x03CB4D50 FCMP S1, S0
	0x03CB4D54 B.PL 0x3CB4D68
	0x03CB4D58 LDR W9, [X19 + 0x15A0]
	0x03CB4D5C LDR W10, [X19 + 0x15A4]
	0x03CB4D60 CMP W9, W10
	0x03CB4D64 B.LT 0x3CB7BD8
	0x03CB4D68 LDR X9, [X31 + 0xC8]
	0x03CB4D6C LDR V0, [X25 + 0xAC]
	0x03CB4D70 LDR V1, [X9]
	0x03CB4D74 FCMP S1, S0
	0x03CB4D78 B.LE 0x3CB4D8C
	0x03CB4D7C LDR W9, [X19 + 0x15A0]
	0x03CB4D80 LDR W10, [X19 + 0x15A4]
	0x03CB4D84 CMP W9, W10
	0x03CB4D88 B.LT 0x3CB7B34
	0x03CB4D8C LDR W9, [X25 + 0x74]
	0x03CB4D90 CMP W9, 0x6
	0x03CB4D94 B.HI 0x3CB4E60
	0x03CB4D98 ADRP X12, 0xFFFFFFFFFCEE3000
	0x03CB4D9C ADD X12, X12, 0xEC3
	0x03CB4DA0 ADR X10, 0x14
	0x03CB4DA4 LDRB W11, [X12, X9, LSL]
	0x03CB4DA8 ADD X10, X10, X11, 0x2, LSL
	0x03CB4DAC MOV V13.16B, V12.16B
	0x03CB4DB0 BR X10
	0x03CB4DB4 LDR X21, [X31 + 0x1B8]
	0x03CB4DB8 LDP S6, S0, [X31 + 0x84]
	0x03CB4DBC LDR V2, [X31 + 0x150]
	0x03CB4DC0 LDR V3, [X31 + 0x140]
	0x03CB4DC4 LDR V4, [X31 + 0x180]
	0x03CB4DC8 LDR V5, [X31 + 0x16C]
	0x03CB4DCC ADD X2, X31, 0x1000
	0x03CB4DD0 ADD X3, X31, 0x1000
	0x03CB4DD4 ADD X2, X2, 0x284
	0x03CB4DD8 ADD X3, X3, 0x288
	0x03CB4DDC MOV X0, X19
	0x03CB4DE0 MOV V1.16B, V13.16B
	0x03CB4DE4 MOV X4, X25
	0x03CB4DE8 MOV X5, X21
	0x03CB4DEC MOV X6, X31
	0x03CB4DF0 BL 0x3CC4CC8
	0x03CB4DF4 MOVZ W8, 0x1
	0x03CB4DF8 STR W31, [X31 + 0xC0]
	0x03CB4DFC STR W8, [X31 + 0xE0]
	0x03CB4E00 B 0x3CB4F94
	0x03CB4E04 LDR X21, [X31 + 0x1B8]
	0x03CB4E08 LDP S6, S0, [X31 + 0x84]
	0x03CB4E0C LDR V2, [X31 + 0x150]
	0x03CB4E10 LDR V3, [X31 + 0x140]
	0x03CB4E14 LDR V4, [X31 + 0x180]
	0x03CB4E18 LDR V5, [X31 + 0x16C]
	0x03CB4E1C ADD X2, X31, 0x1000
	0x03CB4E20 ADD X3, X31, 0x1000
	0x03CB4E24 ADD X2, X2, 0x284
	0x03CB4E28 ADD X3, X3, 0x288
	0x03CB4E2C MOV X0, X19
	0x03CB4E30 MOV V1.16B, V12.16B
	0x03CB4E34 MOV X4, X25
	0x03CB4E38 MOV X5, X21
	0x03CB4E3C MOV X6, X31
	0x03CB4E40 MOV V13.16B, V12.16B
	0x03CB4E44 BL 0x3CC4CC8
	0x03CB4E48 MOVZ W8, 0x1
	0x03CB4E4C STR W8, [X31 + 0xE0]
	0x03CB4E50 MOVZ W8, 0x1
	0x03CB4E54 STR W31, [X31 + 0xC0]
	0x03CB4E58 STR W8, [X31 + 0xB4]
	0x03CB4E5C B 0x3CB35DC
	0x03CB4E60 STR W31, [X31 + 0xC0]
	0x03CB4E64 B 0x3CB33E4
	0x03CB4E68 ADRP X8, 0x4AD000
	0x03CB4E6C LDR X8, [X8 + 0xBD8]
	0x03CB4E70 LDR X20, [X31 + 0x78]
	0x03CB4E74 LDR X1, [X8]
	0x03CB4E78 MOV X0, X20
	0x03CB4E7C BL 0x26E3614
	0x03CB4E80 ADRP X28, 0x43F000
	0x03CB4E84 LDR X28, [X28 + 0xA28]
	0x03CB4E88 LDR X23, [X31 + 0x1C8]
	0x03CB4E8C LDR W24, [X31 + 0x1A8]
	0x03CB4E90 CBZ W0, 0x3CB4FB4
	0x03CB4E94 ADRP X8, 0x4AD000
	0x03CB4E98 LDR X8, [X8 + 0xB88]
	0x03CB4E9C MOV X0, X20
	0x03CB4EA0 LDR X1, [X8]
	0x03CB4EA4 ADD X8, X31, 0x1000
	0x03CB4EA8 ADD X8, X8, 0x290
	0x03CB4EAC BL 0x26E3A7C
	0x03CB4EB0 ADD X1, X31, 0x1000
	0x03CB4EB4 ADD X0, X31, 0x990
	0x03CB4EB8 ADD X1, X1, 0x290
	0x03CB4EBC MOVZ W2, 0x398
	0x03CB4EC0 BL 0x3EB1AC0
	0x03CB4EC4 LDR X21, [X31 + 0x1B8]
	0x03CB4EC8 ADD X1, X31, 0x990
	0x03CB4ECC MOV X0, X19
	0x03CB4ED0 MOV X3, X31
	0x03CB4ED4 MOV X2, X21
	0x03CB4ED8 BL 0x3CBACF8
	0x03CB4EDC SUB W8, W0, 0x1
	0x03CB4EE0 STR W8, [X31 + 0x11FC]
	0x03CB4EE4 LDR W8, [X19 + 0x324]
	0x03CB4EE8 STR W31, [X31 + 0xC0]
	0x03CB4EEC ADD W24, W24, 0x1
	0x03CB4EF0 SUB W8, W8, 0x1
	0x03CB4EF4 STR W8, [X19 + 0x324]
	0x03CB4EF8 STR W8, [X31 + 0x1278]
	0x03CB4EFC MOVZ W8, 0x2026
	0x03CB4F00 B 0x3CB3834
	0x03CB4F04 LDR X20, [X31 + 0x1B8]
	0x03CB4F08 LDR X1, [X31 + 0xE8]
	0x03CB4F0C MOV X0, X19
	0x03CB4F10 MOV X3, X31
	0x03CB4F14 MOV X2, X20
	0x03CB4F18 BL 0x3CBACF8
	0x03CB4F1C STR W31, [X31 + 0xC0]
	0x03CB4F20 B 0x3CB353C
	0x03CB4F24 LDR X21, [X31 + 0x1B8]
	0x03CB4F28 LDP S6, S0, [X31 + 0x84]
	0x03CB4F2C LDR V2, [X31 + 0x150]
	0x03CB4F30 LDR V3, [X31 + 0x140]
	0x03CB4F34 LDR V4, [X31 + 0x180]
	0x03CB4F38 LDR V5, [X31 + 0x16C]
	0x03CB4F3C ADD X2, X31, 0x1000
	0x03CB4F40 ADD X3, X31, 0x1000
	0x03CB4F44 MOVZ W9, 0x1
	0x03CB4F48 MOVZ W8, 0x1
	0x03CB4F4C ADD X2, X2, 0x284
	0x03CB4F50 ADD X3, X3, 0x288
	0x03CB4F54 MOV X0, X19
	0x03CB4F58 MOV V1.16B, V13.16B
	0x03CB4F5C MOV X4, X25
	0x03CB4F60 MOV X5, X21
	0x03CB4F64 MOV X6, X31
	0x03CB4F68 STR W8, [X31 + 0xE0]
	0x03CB4F6C STRB W9, [X19 + 0x37C]
	0x03CB4F70 BL 0x3CC4CC8
	0x03CB4F74 LDR W8, [X19 + 0x350]
	0x03CB4F78 STR W31, [X31 + 0xC0]
	0x03CB4F7C STR W31, [X19 + 0x15AC]
	0x03CB4F80 STR W31, [X19 + 0x2E0]
	0x03CB4F84 ADD W8, W8, 0x1
	0x03CB4F88 STR W31, [X19 + 0x374]
	0x03CB4F8C STR W31, [X19 + 0x19C8]
	0x03CB4F90 STR W8, [X19 + 0x350]
	0x03CB4F94 MOVZ W8, 0x1
	0x03CB4F98 STR W8, [X31 + 0xB4]
	0x03CB4F9C B 0x3CB4998
	0x03CB4FA0 LDR X21, [X31 + 0x1B8]
	0x03CB4FA4 STR W8, [X31 + 0x1278]
	0x03CB4FA8 MOVZ W8, 0x3
	0x03CB4FAC STR W31, [X31 + 0xC0]
	0x03CB4FB0 B 0x3CB354C
	0x03CB4FB4 ADRP X8, 0xFFFFFFFFFCE39000
	0x03CB4FB8 LDR V0, [X8 + 0xB60]
	0x03CB4FBC LDR X21, [X31 + 0x1B8]
	0x03CB4FC0 MOVN W8, 0x0
	0x03CB4FC4 STR W31, [X31 + 0xC0]
	0x03CB4FC8 B 0x3CB4C8C
	0x03CB4FCC LDRB W8, [X25 + 0xA8]
	0x03CB4FD0 CBZ W8, 0x3CB5098
	0x03CB4FD4 LDR V1, [X19 + 0x1598]
	0x03CB4FD8 LDR V0, [X19 + 0x159C]
	0x03CB4FDC ADRP X8, 0xFFFFFFFFFCE36000
	0x03CB4FE0 LDR V2, [X8 + 0xD0]
	0x03CB4FE4 FSUB S0, S1, S0
	0x03CB4FE8 FCMP S0, S2
	0x03CB4FEC B.LE 0x3CB5098
	0x03CB4FF0 LDR X8, [X31 + 0xC8]
	0x03CB4FF4 LDR V2, [X25 + 0xB0]
	0x03CB4FF8 LDR V0, [X8]
	0x03CB4FFC FCMP S0, S2
	0x03CB5000 B.PL 0x3CB5098
	0x03CB5004 LDR W8, [X19 + 0x15A0]
	0x03CB5008 LDR W9, [X19 + 0x15A4]
	0x03CB500C CMP W8, W9
	0x03CB5010 B.GE 0x3CB5098
	0x03CB5014 LDR V2, [X25 + 0x108]
	0x03CB5018 LDR V3, [X19 + 0x1594]
	0x03CB501C MOVZ W8, 0x42C80000
	0x03CB5020 LDR X26, [X31 + 0xA0]
	0x03CB5024 FMOV S4, W8
	0x03CB5028 FDIV S4, S2, S4
	0x03CB502C FCMP S3, S4
	0x03CB5030 B.PL 0x3CB5038
	0x03CB5034 STR W31, [X19 + 0x1594]
	0x03CB5038 ADRP X8, 0xFFFFFFFFFCE35000
	0x03CB503C LDR V3, [X8 + 0x200]
	0x03CB5040 FSUB S1, S1, S0
	0x03CB5044 FMOV S4, 0.5
	0x03CB5048 FMUL S1, S1, S4
	0x03CB504C FMAXNM S1, S1, S3
	0x03CB5050 STR S0, [X19 + 0x159C]
	0x03CB5054 FMOV S3, 20
	0x03CB5058 FADD S0, S0, S1
	0x03CB505C FMUL S0, S0, S3
	0x03CB5060 ADRP X8, 0xFFFFFFFFFCE35000
	0x03CB5064 FADD S0, S0, S4
	0x03CB5068 LDR V1, [X8 + 0x420]
	0x03CB506C FCVTZS W8, S0
	0x03CB5070 SCVTF S4, W8
	0x03CB5074 MOVZ W8, 0x7F800000
	0x03CB5078 FDIV S3, S4, S3
	0x03CB507C FMOV S4, W8
	0x03CB5080 FCMP S0, S4
	0x03CB5084 FCSEL S0, S1, S3, EQ
	0x03CB5088 FCMP S0, S2
	0x03CB508C FCSEL S0, S0, S2, MI
	0x03CB5090 STR S0, [X19 + 0xEC]
	0x03CB5094 B 0x3CB0B24
	0x03CB5098 MOVZ W8, 0x1
	0x03CB509C STRB W8, [X27 + 0x30]
	0x03CB50A0 LDR W8, [X19 + 0x15A0]
	0x03CB50A4 LDR W9, [X19 + 0x15A4]
	0x03CB50A8 LDR X26, [X31 + 0xA0]
	0x03CB50AC CMP W8, W9
	0x03CB50B0 B.LT 0x3CB5124
	0x03CB50B4 LDR X0, [X31 + 0x70]
	0x03CB50B8 MOV X1, X31
	0x03CB50BC BL 0x337B6E0
	0x03CB50C0 MOV X22, X0
	0x03CB50C4 LDR X0, [X31 + 0xC8]
	0x03CB50C8 MOV X1, X31
	0x03CB50CC BL 0x338FE24
	0x03CB50D0 ADRP X8, 0x4A3000
	0x03CB50D4 LDR X8, [X8 + 0x420]
	0x03CB50D8 ADRP X9, 0x4A3000
	0x03CB50DC LDR X9, [X9 + 0x408]
	0x03CB50E0 MOV X3, X0
	0x03CB50E4 LDR X8, [X8]
	0x03CB50E8 MOV X1, X22
	0x03CB50EC LDR X2, [X9]
	0x03CB50F0 MOV X4, X31
	0x03CB50F4 MOV X0, X8
	0x03CB50F8 BL 0x32277C4
	0x03CB50FC LDR X8, [X28]
	0x03CB5100 MOV X22, X0
	0x03CB5104 LDR W9, [X8 + 0xE0]
	0x03CB5108 CBNZ W9, 0x3CB5114
	0x03CB510C MOV X0, X8
	0x03CB5110 BL 0x1C16DFC
	0x03CB5114 MOV X0, X22
	0x03CB5118 MOV X1, X31
	0x03CB511C BL 0x3C06048
	0x03CB5120 LDR X22, [X31 + 0x1D8]
	0x03CB5124 LDR W8, [X23]
	0x03CB5128 CBZ W8, 0x3CB5140
	0x03CB512C CMP W8, 0x1
	0x03CB5130 B.NE 0x3CB5154
	0x03CB5134 LDR W8, [X31 + 0x128C]
	0x03CB5138 CMP W8, 0x3
	0x03CB513C B.NE 0x3CB5154
	0x03CB5140 MOVZ W0, 0x1
	0x03CB5144 MOV X1, X21
	0x03CB5148 MOV X2, X31
	0x03CB514C BL 0x3CC1CD4
	0x03CB5150 B 0x3CB0B24
	0x03CB5154 LDR X20, [X21 + 0x58]
	0x03CB5158 CBZ X20, 0x3CB7C14
	0x03CB515C ADRP X24, 0x4AC000
	0x03CB5160 LDR X24, [X24 + 0x6C8]
	0x03CB5164 LDRSW X21, [X19 + 0x78]
	0x03CB5168 LDR X0, [X24]
	0x03CB516C LDR W8, [X0 + 0xE0]
	0x03CB5170 CBNZ W8, 0x3CB5178
	0x03CB5174 BL 0x1C16DFC
	0x03CB5178 LDR W8, [X20 + 0x18]
	0x03CB517C CMP W21, W8
	0x03CB5180 B.CS 0x3CB7C18
	0x03CB5184 MOVZ W8, 0x50
	0x03CB5188 MADD X8, X21, X8, X20
	0x03CB518C ADD X0, X8, 0x20
	0x03CB5190 MOV W1, W31
	0x03CB5194 MOV X2, X31
	0x03CB5198 BL 0x3CAABB8
	0x03CB519C ADRP X8, 0x723000
	0x03CB51A0 LDRB W8, [X8 + 0x783]
	0x03CB51A4 CBNZ W8, 0x3CB51C0
	0x03CB51A8 ADRP X0, 0x43E000
	0x03CB51AC LDR X0, [X0 + 0x5A0]
	0x03CB51B0 BL 0x1C16CF4
	0x03CB51B4 MOVZ W8, 0x1
	0x03CB51B8 ADRP X9, 0x723000
	0x03CB51BC STRB W8, [X9 + 0x783]
	0x03CB51C0 ADRP X8, 0x43E000
	0x03CB51C4 LDR X8, [X8 + 0x5A0]
	0x03CB51C8 LDR W9, [X25 + 0x70]
	0x03CB51CC LDR X21, [X31 + 0x1B8]
	0x03CB51D0 LDR W11, [X31 + 0x80]
	0x03CB51D4 LDR X8, [X8]
	0x03CB51D8 CMP W9, 0x420
	0x03CB51DC LDR X8, [X8 + 0xB8]
	0x03CB51E0 LDR V0, [X8]
	0x03CB51E4 STR S0, [X31 + 0x15C]
	0x03CB51E8 LDUR V0, [X8 + 0x4]
	0x03CB51EC LDR X8, [X19 + 0x50]
	0x03CB51F0 STR D0, [X31 + 0x148]
	0x03CB51F4 B.LE 0x3CB5230
	0x03CB51F8 MOVZ W10, 0x1004
	0x03CB51FC CMP W9, W10
	0x03CB5200 B.LE 0x3CB5258
	0x03CB5204 MOVZ W10, 0x2002
	0x03CB5208 CMP W9, W10
	0x03CB520C B.LE 0x3CB52EC
	0x03CB5210 MOVZ W10, 0x2008
	0x03CB5214 CMP W9, W10
	0x03CB5218 B.LE 0x3CB54A8
	0x03CB521C MOVZ W10, 0x2010
	0x03CB5220 CMP W9, W10
	0x03CB5224 B.EQ 0x3CB54D0
	0x03CB5228 MOVZ W10, 0x2020
	0x03CB522C B 0x3CB54B8
	0x03CB5230 CMP W9, 0x204
	0x03CB5234 B.LE 0x3CB52A4
	0x03CB5238 CMP W9, 0x402
	0x03CB523C B.LE 0x3CB5328
	0x03CB5240 CMP W9, 0x408
	0x03CB5244 B.LE 0x3CB554C
	0x03CB5248 CMP W9, 0x410
	0x03CB524C B.EQ 0x3CB556C
	0x03CB5250 CMP W9, 0x420
	0x03CB5254 B 0x3CB5558
	0x03CB5258 CMP W9, 0x808
	0x03CB525C B.LE 0x3CB5358
	0x03CB5260 CMP W9, 0x820
	0x03CB5264 B.LE 0x3CB55B4
	0x03CB5268 LDR V0, [X31 + 0x15C]
	0x03CB526C MOVN W10, 0x1000
	0x03CB5270 ADD W9, W9, W10
	0x03CB5274 CMP W9, 0x3
	0x03CB5278 STR S0, [X31 + 0x124]
	0x03CB527C LDR V0, [X31 + 0x148]
	0x03CB5280 STR D0, [X31 + 0x118]
	0x03CB5284 B.HI 0x3CB57D8
	0x03CB5288 LDR V0, [X31 + 0x15C]
	0x03CB528C CMP W9, 0x2
	0x03CB5290 STR S0, [X31 + 0x124]
	0x03CB5294 LDR V0, [X31 + 0x148]
	0x03CB5298 STR D0, [X31 + 0x118]
	0x03CB529C B.NE 0x3CB5624
	0x03CB52A0 B 0x3CB57D8
	0x03CB52A4 CMP W9, 0x108
	0x03CB52A8 B.LE 0x3CB53F4
	0x03CB52AC CMP W9, 0x120
	0x03CB52B0 B.LE 0x3CB55D8
	0x03CB52B4 LDR V0, [X31 + 0x15C]
	0x03CB52B8 SUB W9, W9, 0x201
	0x03CB52BC CMP W9, 0x3
	0x03CB52C0 STR S0, [X31 + 0x124]
	0x03CB52C4 LDR V0, [X31 + 0x148]
	0x03CB52C8 STR D0, [X31 + 0x118]
	0x03CB52CC B.HI 0x3CB57D8
	0x03CB52D0 LDR V0, [X31 + 0x15C]
	0x03CB52D4 CMP W9, 0x2
	0x03CB52D8 STR S0, [X31 + 0x124]
	0x03CB52DC LDR V0, [X31 + 0x148]
	0x03CB52E0 STR D0, [X31 + 0x118]
	0x03CB52E4 B.NE 0x3CB56BC
	0x03CB52E8 B 0x3CB57D8
	0x03CB52EC MOVZ W10, 0x1010
	0x03CB52F0 CMP W9, W10
	0x03CB52F4 B.LE 0x3CB55FC
	0x03CB52F8 MOVZ W10, 0x1020
	0x03CB52FC CMP W9, W10
	0x03CB5300 B.EQ 0x3CB5624
	0x03CB5304 LDR V0, [X31 + 0x15C]
	0x03CB5308 MOVN W10, 0x2000
	0x03CB530C ADD W9, W9, W10
	0x03CB5310 CMP W9, 0x1
	0x03CB5314 STR S0, [X31 + 0x124]
	0x03CB5318 LDR V0, [X31 + 0x148]
	0x03CB531C STR D0, [X31 + 0x118]
	0x03CB5320 B.LS 0x3CB54D0
	0x03CB5324 B 0x3CB57D8
	0x03CB5328 CMP W9, 0x210
	0x03CB532C B.LE 0x3CB569C
	0x03CB5330 CMP W9, 0x220
	0x03CB5334 B.EQ 0x3CB56BC
	0x03CB5338 LDR V0, [X31 + 0x15C]
	0x03CB533C SUB W9, W9, 0x401
	0x03CB5340 CMP W9, 0x1
	0x03CB5344 STR S0, [X31 + 0x124]
	0x03CB5348 LDR V0, [X31 + 0x148]
	0x03CB534C STR D0, [X31 + 0x118]
	0x03CB5350 B.LS 0x3CB556C
	0x03CB5354 B 0x3CB57D8
	0x03CB5358 LDR V0, [X31 + 0x15C]
	0x03CB535C SUB W9, W9, 0x801
	0x03CB5360 CMP W9, 0x7
	0x03CB5364 STR S0, [X31 + 0x124]
	0x03CB5368 LDR V0, [X31 + 0x148]
	0x03CB536C STR D0, [X31 + 0x118]
	0x03CB5370 B.HI 0x3CB57D8
	0x03CB5374 LDR V0, [X31 + 0x15C]
	0x03CB5378 MOVZ W10, 0x1
	0x03CB537C LSLV W9, W10, W9
	0x03CB5380 MOVZ W10, 0x8B
	0x03CB5384 STR S0, [X31 + 0x124]
	0x03CB5388 LDR V0, [X31 + 0x148]
	0x03CB538C ANDS W31, W9, W10, 0x0
	0x03CB5390 STR D0, [X31 + 0x118]
	0x03CB5394 B.EQ 0x3CB57D8
	0x03CB5398 CBZ X8, 0x3CB7C14
	0x03CB539C LDR W9, [X8 + 0x18]
	0x03CB53A0 CMP W9, 0x1
	0x03CB53A4 B.EQ 0x3CB7C18
	0x03CB53A8 CBZ W9, 0x3CB7C18
	0x03CB53AC LDR V1, [X8 + 0x20]
	0x03CB53B0 LDR V2, [X8 + 0x2C]
	0x03CB53B4 LDUR V0, [X8 + 0x24]
	0x03CB53B8 LDR V3, [X8 + 0x30]
	0x03CB53BC LDR V16, [X31 + 0x5C]
	0x03CB53C0 FMOV S4, 0.5
	0x03CB53C4 FMOV S6, W31
	0x03CB53C8 FADD S1, S1, S2
	0x03CB53CC MOVI V5.2S, 0x3F, 0x18
	0x03CB53D0 FADD S6, S16, S6
	0x03CB53D4 FADD V0.2S, V0.2S, V3.2S
	0x03CB53D8 FMUL S1, S1, S4
	0x03CB53DC MOVI D7, 0x0
	0x00000000 INVALID
	0x03CB53E4 FADD S1, S6, S1
	0x03CB53E8 STR S1, [X31 + 0x124]
	0x03CB53EC FADD V0.2S, V0.2S, V7.2S
	0x03CB53F0 B 0x3CB57D4
	0x03CB53F4 LDR V0, [X31 + 0x15C]
	0x03CB53F8 SUB W9, W9, 0x101
	0x03CB53FC CMP W9, 0x7
	0x03CB5400 STR S0, [X31 + 0x124]
	0x03CB5404 LDR V0, [X31 + 0x148]
	0x03CB5408 STR D0, [X31 + 0x118]
	0x03CB540C B.HI 0x3CB57D8
	0x03CB5410 LDR V0, [X31 + 0x15C]
	0x03CB5414 MOVZ W10, 0x1
	0x03CB5418 LSLV W9, W10, W9
	0x03CB541C MOVZ W10, 0x8B
	0x03CB5420 STR S0, [X31 + 0x124]
	0x03CB5424 LDR V0, [X31 + 0x148]
	0x03CB5428 ANDS W31, W9, W10, 0x0
	0x03CB542C STR D0, [X31 + 0x118]
	0x03CB5430 B.EQ 0x3CB57D8
	0x03CB5434 CBZ X8, 0x3CB7C14
	0x03CB5438 LDR W9, [X8 + 0x18]
	0x03CB543C CMP W9, 0x1
	0x03CB5440 B.LS 0x3CB7C18
	0x03CB5444 LDR W9, [X25 + 0x74]
	0x03CB5448 LDR V1, [X8 + 0x2C]
	0x03CB544C LDR V0, [X8 + 0x30]
	0x03CB5450 CMP W9, 0x5
	0x03CB5454 B.NE 0x3CB5480
	0x03CB5458 LDR X8, [X31 + 0x50]
	0x03CB545C LDR X8, [X8]
	0x03CB5460 CBZ X8, 0x3CB7C14
	0x03CB5464 LDR W9, [X8 + 0x18]
	0x03CB5468 CMP W11, W9
	0x03CB546C B.CS 0x3CB7C18
	0x03CB5470 MOVZ W9, 0x14
	0x03CB5474 SMADDL X8, X11, X9, X8
	0x03CB5478 LDR V2, [X8 + 0x28]
	0x03CB547C B 0x3CB5484
	0x03CB5480 LDR V2, [X19 + 0x374]
	0x03CB5484 LDR V4, [X31 + 0x5C]
	0x03CB5488 FMOV S3, W31
	0x03CB548C FADD S4, S4, S3
	0x03CB5490 FADD S1, S4, S1
	0x03CB5494 STR S1, [X31 + 0x124]
	0x03CB5498 FSUB S1, S3, S2
	0x03CB549C LDR V2, [X31 + 0x3C]
	0x03CB54A0 FSUB S1, S1, S2
	0x03CB54A4 B 0x3CB57C8
	0x03CB54A8 MOVZ W10, 0x2004
	0x03CB54AC CMP W9, W10
	0x03CB54B0 B.EQ 0x3CB54D0
	0x03CB54B4 MOVZ W10, 0x2008
	0x03CB54B8 LDR V0, [X31 + 0x15C]
	0x03CB54BC CMP W9, W10
	0x03CB54C0 STR S0, [X31 + 0x124]
	0x03CB54C4 LDR V0, [X31 + 0x148]
	0x03CB54C8 STR D0, [X31 + 0x118]
	0x03CB54CC B.NE 0x3CB57D8
	0x03CB54D0 CBZ X8, 0x3CB7C14
	0x03CB54D4 LDR W9, [X8 + 0x18]
	0x03CB54D8 CMP W9, 0x1
	0x03CB54DC B.EQ 0x3CB7C18
	0x03CB54E0 CBZ W9, 0x3CB7C18
	0x03CB54E4 LDUR V2, [X8 + 0x24]
	0x03CB54E8 LDR V3, [X8 + 0x30]
	0x03CB54EC LDR V0, [X8 + 0x20]
	0x03CB54F0 LDR V1, [X8 + 0x2C]
	0x03CB54F4 LDR V4, [X19 + 0x370]
	0x03CB54F8 FADD V2.2S, V2.2S, V3.2S
	0x03CB54FC MOVI V3.2S, 0x3F, 0x18
	0x03CB5500 LDR V5, [X31 + 0x3C]
	0x03CB5504 LDR V6, [X31 + 0x5C]
	0x00000000 INVALID
	0x03CB550C LDR V3, [X31 + 0x38]
	0x03CB5510 FADD S0, S0, S1
	0x03CB5514 FMOV S1, 0.5
	0x03CB5518 FSUB S4, S4, S5
	0x03CB551C FMOV S5, W31
	0x03CB5520 FADD S6, S6, S5
	0x03CB5524 FMUL S0, S0, S1
	0x03CB5528 FSUB S3, S4, S3
	0x03CB552C FMUL S1, S3, S1
	0x03CB5530 FADD S0, S6, S0
	0x03CB5534 STR S0, [X31 + 0x124]
	0x03CB5538 FSUB S0, S5, S1
	0x03CB553C MOVI D1, 0x0
	0x03CB5540 MOV V1.S[0], V0.S[0]
	0x03CB5544 FADD V0.2S, V2.2S, V1.2S
	0x03CB5548 B 0x3CB57D4
	0x03CB554C CMP W9, 0x404
	0x03CB5550 B.EQ 0x3CB556C
	0x03CB5554 CMP W9, 0x408
	0x03CB5558 LDR V0, [X31 + 0x15C]
	0x03CB555C STR S0, [X31 + 0x124]
	0x03CB5560 LDR V0, [X31 + 0x148]
	0x03CB5564 STR D0, [X31 + 0x118]
	0x03CB5568 B.NE 0x3CB57D8
	0x03CB556C CBZ X8, 0x3CB7C14
	0x03CB5570 LDR W9, [X8 + 0x18]
	0x03CB5574 CBZ W9, 0x3CB7C18
	0x03CB5578 LDR W9, [X25 + 0x74]
	0x03CB557C LDR V1, [X8 + 0x20]
	0x03CB5580 LDUR V0, [X8 + 0x24]
	0x03CB5584 CMP W9, 0x5
	0x03CB5588 B.NE 0x3CB57A4
	0x03CB558C LDR X8, [X31 + 0x50]
	0x03CB5590 LDR X8, [X8]
	0x03CB5594 CBZ X8, 0x3CB7C14
	0x03CB5598 LDR W9, [X8 + 0x18]
	0x03CB559C CMP W11, W9
	0x03CB55A0 B.CS 0x3CB7C18
	0x03CB55A4 MOVZ W9, 0x14
	0x03CB55A8 SMADDL X8, X11, X9, X8
	0x03CB55AC LDR V2, [X8 + 0x30]
	0x03CB55B0 B 0x3CB57A8
	0x03CB55B4 CMP W9, 0x810
	0x03CB55B8 B.EQ 0x3CB5398
	0x03CB55BC LDR V0, [X31 + 0x15C]
	0x03CB55C0 CMP W9, 0x820
	0x03CB55C4 STR S0, [X31 + 0x124]
	0x03CB55C8 LDR V0, [X31 + 0x148]
	0x03CB55CC STR D0, [X31 + 0x118]
	0x03CB55D0 B.EQ 0x3CB5398
	0x03CB55D4 B 0x3CB57D8
	0x03CB55D8 CMP W9, 0x110
	0x03CB55DC B.EQ 0x3CB5434
	0x03CB55E0 LDR V0, [X31 + 0x15C]
	0x03CB55E4 CMP W9, 0x120
	0x03CB55E8 STR S0, [X31 + 0x124]
	0x03CB55EC LDR V0, [X31 + 0x148]
	0x03CB55F0 STR D0, [X31 + 0x118]
	0x03CB55F4 B.EQ 0x3CB5434
	0x03CB55F8 B 0x3CB57D8
	0x03CB55FC MOVZ W10, 0x1008
	0x03CB5600 CMP W9, W10
	0x03CB5604 B.EQ 0x3CB5624
	0x03CB5608 LDR V0, [X31 + 0x15C]
	0x03CB560C MOVZ W10, 0x1010
	0x03CB5610 CMP W9, W10
	0x03CB5614 STR S0, [X31 + 0x124]
	0x03CB5618 LDR V0, [X31 + 0x148]
	0x03CB561C STR D0, [X31 + 0x118]
	0x03CB5620 B.NE 0x3CB57D8
	0x03CB5624 CBZ X8, 0x3CB7C14
	0x03CB5628 LDR W9, [X8 + 0x18]
	0x03CB562C CMP W9, 0x1
	0x03CB5630 B.EQ 0x3CB7C18
	0x03CB5634 CBZ W9, 0x3CB7C18
	0x03CB5638 LDUR V0, [X8 + 0x24]
	0x03CB563C LDR V3, [X8 + 0x30]
	0x03CB5640 LDR V1, [X8 + 0x20]
	0x03CB5644 LDR V2, [X8 + 0x2C]
	0x03CB5648 LDR V5, [X19 + 0x36C]
	0x03CB564C LDR V6, [X31 + 0x3C]
	0x03CB5650 FADD V0.2S, V0.2S, V3.2S
	0x03CB5654 LDR V3, [X19 + 0x364]
	0x03CB5658 FADD S1, S1, S2
	0x03CB565C MOVI V2.2S, 0x3F, 0x18
	0x03CB5660 FADD S5, S6, S5
	0x03CB5664 LDR V7, [X31 + 0x5C]
	0x00000000 INVALID
	0x03CB566C FADD S2, S5, S3
	0x03CB5670 LDR V3, [X31 + 0x38]
	0x03CB5674 FMOV S4, 0.5
	0x03CB5678 FMOV S6, W31
	0x03CB567C FADD S7, S7, S6
	0x03CB5680 FMUL S1, S1, S4
	0x03CB5684 FSUB S2, S2, S3
	0x03CB5688 FADD S1, S7, S1
	0x03CB568C STR S1, [X31 + 0x124]
	0x03CB5690 FMUL S1, S2, S4
	0x03CB5694 FSUB S1, S6, S1
	0x03CB5698 B 0x3CB57C8
	0x03CB569C CMP W9, 0x208
	0x03CB56A0 B.EQ 0x3CB56BC
	0x03CB56A4 LDR V0, [X31 + 0x15C]
	0x03CB56A8 CMP W9, 0x210
	0x03CB56AC STR S0, [X31 + 0x124]
	0x03CB56B0 LDR V0, [X31 + 0x148]
	0x03CB56B4 STR D0, [X31 + 0x118]
	0x03CB56B8 B.NE 0x3CB57D8
	0x03CB56BC CBZ X8, 0x3CB7C14
	0x03CB56C0 LDR W9, [X8 + 0x18]
	0x03CB56C4 CMP W9, 0x1
	0x03CB56C8 B.EQ 0x3CB7C18
	0x03CB56CC CBZ W9, 0x3CB7C18
	0x03CB56D0 LDUR V0, [X8 + 0x24]
	0x03CB56D4 LDR V1, [X8 + 0x20]
	0x03CB56D8 LDR V2, [X8 + 0x2C]
	0x03CB56DC LDR V3, [X8 + 0x30]
	0x03CB56E0 LDR W9, [X25 + 0x74]
	0x03CB56E4 FMOV S4, 0.5
	0x03CB56E8 MOVI V5.2S, 0x3F, 0x18
	0x03CB56EC FADD S1, S1, S2
	0x03CB56F0 FADD V0.2S, V0.2S, V3.2S
	0x03CB56F4 CMP W9, 0x5
	0x03CB56F8 FMUL S1, S1, S4
	0x00000000 INVALID
	0x03CB5700 B.NE 0x3CB5764
	0x03CB5704 LDR X8, [X31 + 0x50]
	0x03CB5708 LDR X8, [X8]
	0x03CB570C CBZ X8, 0x3CB7C14
	0x03CB5710 LDR W9, [X8 + 0x18]
	0x03CB5714 CMP W11, W9
	0x03CB5718 B.CS 0x3CB7C18
	0x03CB571C LDR V3, [X31 + 0x5C]
	0x03CB5720 MOVZ W9, 0x14
	0x03CB5724 FMOV S2, W31
	0x03CB5728 SMADDL X8, X11, X9, X8
	0x03CB572C FADD S3, S3, S2
	0x03CB5730 LDR V4, [X8 + 0x28]
	0x03CB5734 FADD S1, S3, S1
	0x03CB5738 LDR V3, [X31 + 0x3C]
	0x03CB573C LDR V5, [X8 + 0x30]
	0x03CB5740 STR S1, [X31 + 0x124]
	0x03CB5744 FMOV S1, -0.5
	0x03CB5748 FADD S3, S3, S4
	0x03CB574C LDR V4, [X31 + 0x38]
	0x03CB5750 FADD S3, S3, S5
	0x03CB5754 FSUB S3, S3, S4
	0x03CB5758 FMUL S1, S3, S1
	0x03CB575C FADD S1, S1, S2
	0x03CB5760 B 0x3CB57C8
	0x03CB5764 LDR V6, [X31 + 0x5C]
	0x03CB5768 FMOV S4, W31
	0x03CB576C LDR V2, [X19 + 0x374]
	0x03CB5770 LDR V3, [X31 + 0x1288]
	0x03CB5774 FADD S6, S6, S4
	0x03CB5778 FADD S1, S6, S1
	0x03CB577C STR S1, [X31 + 0x124]
	0x03CB5780 LDR V1, [X31 + 0x3C]
	0x03CB5784 FMOV S5, -0.5
	0x03CB5788 FADD S1, S1, S2
	0x03CB578C LDR V2, [X31 + 0x38]
	0x03CB5790 FADD S1, S1, S3
	0x03CB5794 FSUB S1, S1, S2
	0x03CB5798 FMUL S1, S1, S5
	0x03CB579C FADD S1, S1, S4
	0x03CB57A0 B 0x3CB57C8
	0x03CB57A4 LDR V2, [X31 + 0x1288]
	0x03CB57A8 LDR V4, [X31 + 0x5C]
	0x03CB57AC FMOV S3, W31
	0x03CB57B0 FADD S4, S4, S3
	0x03CB57B4 FADD S1, S4, S1
	0x03CB57B8 STR S1, [X31 + 0x124]
	0x03CB57BC FSUB S1, S3, S2
	0x03CB57C0 LDR V2, [X31 + 0x38]
	0x03CB57C4 FADD S1, S2, S1
	0x03CB57C8 MOVI D2, 0x0
	0x03CB57CC MOV V2.S[0], V1.S[0]
	0x03CB57D0 FADD V0.2S, V0.2S, V2.2S
	0x03CB57D4 STR D0, [X31 + 0x118]
	0x03CB57D8 FMOV S0, 1
	0x03CB57DC FMOV S1, 1
	0x03CB57E0 FMOV S2, 1
	0x03CB57E4 FMOV S3, 1
	0x03CB57E8 MOV X0, X31
	0x03CB57EC BL 0x1E43664
	0x03CB57F0 STR X0, [X31 + 0x108]
	0x03CB57F4 FMOV S0, 1
	0x03CB57F8 FMOV S1, 1
	0x03CB57FC FMOV S2, 1
	0x03CB5800 FMOV S3, 1
	0x03CB5804 MOV X0, X31
	0x03CB5808 BL 0x1E43664
	0x03CB580C ADRP X8, 0x4AC000
	0x03CB5810 LDR X8, [X8 + 0xB38]
	0x03CB5814 STR X0, [X31 + 0x110]
	0x03CB5818 LDR X8, [X8]
	0x03CB581C LDR W9, [X8 + 0xE0]
	0x03CB5820 CBNZ W9, 0x3CB582C
	0x03CB5824 MOV X0, X8
	0x03CB5828 BL 0x1C16DFC
	0x03CB582C MOV X0, X31
	0x03CB5830 BL 0x3CC5510
	0x03CB5834 ADD X0, X31, 0x1000
	0x03CB5838 ADD X0, X0, 0x260
	0x03CB583C MOVN W1, 0xBFFF0000
	0x03CB5840 ADD X20, X31, 0x1000
	0x03CB5844 MOV X2, X31
	0x03CB5848 ADD X20, X20, 0x260
	0x03CB584C BL 0x3CC56E0
	0x03CB5850 LDR W8, [X23]
	0x03CB5854 CMP W8, 0x1
	0x03CB5858 B.LT 0x3CB79CC
	0x03CB585C LDR X25, [X22]
	0x03CB5860 CBZ X25, 0x3CB7C14
	0x03CB5864 LDR V2, [X31 + 0x12C]
	0x03CB5868 FMOV S1, W31
	0x03CB586C STR S1, [X31 + 0x174]
	0x03CB5870 FMOV S1, W31
	0x03CB5874 STR S1, [X31 + 0xE0]
	0x03CB5878 FMOV S1, W31
	0x03CB587C STR S1, [X31 + 0xB0]
	0x03CB5880 FMOV S1, W31
	0x03CB5884 ADD X8, X21, 0x38
	0x03CB5888 ADRP X10, 0xFFFFFFFFFCE35000
	0x03CB588C STP S2, S1, [X31 + 0xF4]
	0x03CB5890 FMOV S1, W31
	0x03CB5894 STR X8, [X31 + 0x100]
	0x03CB5898 ADD X8, X31, 0x1000
	0x03CB589C LDR V0, [X31 + 0x144]
	0x03CB58A0 LDR V3, [X10 + 0x374]
	0x03CB58A4 STR S1, [X31 + 0xAC]
	0x03CB58A8 LDR V1, [X31 + 0x128]
	0x03CB58AC ADD X8, X8, 0x290
	0x03CB58B0 ORR X9, X20, 0x7
	0x03CB58B4 STR X9, [X31 + 0xC0]
	0x03CB58B8 ADD X9, X31, 0x5E0
	0x03CB58BC ADD X8, X8, 0x20
	0x03CB58C0 MOV W22, W31
	0x03CB58C4 MOV W26, W31
	0x03CB58C8 MOVZ W27, 0x2FC
	0x03CB58CC MOVZ W29, 0x188
	0x03CB58D0 MOVZ W20, 0x60
	0x03CB58D4 FMOV S11, W31
	0x03CB58D8 FMOV S15, W31
	0x03CB58DC STR X8, [X31 + 0xB8]
	0x03CB58E0 ORR X8, X9, 0x7
	0x03CB58E4 MOVZ W9, 0x1
	0x03CB58E8 STR X31, [X31 + 0x180]
	0x03CB58EC STR W31, [X31 + 0x140]
	0x03CB58F0 STR W31, [X31 + 0x90]
	0x03CB58F4 STR X31, [X31 + 0x168]
	0x03CB58F8 STR W31, [X31 + 0xC8]
	0x03CB58FC STR W31, [X31 + 0x178]
	0x03CB5900 STR S2, [X31 + 0x130]
	0x03CB5904 STR S0, [X31 + 0x138]
	0x03CB5908 STR S0, [X31 + 0xD4]
	0x03CB590C STP S1, S2, [X31 + 0xD8]
	0x03CB5910 STP S1, S0, [X31 + 0xE4]
	0x03CB5914 STR X8, [X31 + 0x98]
	0x03CB5918 STR S3, [X31 + 0xB4]
	0x03CB591C STR S3, [X31 + 0x160]
	0x03CB5920 LDR W8, [X25 + 0x18]
	0x03CB5924 SUB W28, W9, 0x1
	0x03CB5928 STR W9, [X31 + 0x1B4]
	0x03CB592C CMP W28, W8
	0x03CB5930 B.CS 0x3CB7C18
	0x03CB5934 ADRP X8, 0x440000
	0x03CB5938 LDR X8, [X8 + 0x170]
	0x03CB593C SXTW X24, W28
	0x03CB5940 LDR X0, [X8]
	0x03CB5944 NOP
	0x03CB5948 MADD X8, X24, X29, X25
	0x03CB594C LDR X9, [X8 + 0x40]
	0x03CB5950 LDRH W23, [X8 + 0x20]
	0x03CB5954 STR X9, [X31 + 0x188]
	0x03CB5958 LDR W9, [X0 + 0xE0]
	0x03CB595C CBNZ W9, 0x3CB5964
	0x03CB5960 BL 0x1C16DFC
	0x03CB5964 MOV W0, W23
	0x03CB5968 MOV X1, X31
	0x03CB596C BL 0x3317FCC
	0x03CB5970 LDR W8, [X25 + 0x18]
	0x03CB5974 STR W0, [X31 + 0x17C]
	0x03CB5978 CMP W28, W8
	0x03CB597C B.CS 0x3CB7C18
	0x03CB5980 LDR X9, [X21 + 0x48]
	0x03CB5984 MOVZ W12, 0x188
	0x03CB5988 STR W23, [X31 + 0x1C4]
	0x03CB598C CBZ X9, 0x3CB7C14
	0x03CB5990 MADD X10, X24, X12, X25
	0x03CB5994 LDR W23, [X10 + 0x6C]
	0x03CB5998 LDR W10, [X9 + 0x18]
	0x03CB599C STR W22, [X31 + 0x164]
	0x03CB59A0 CMP W23, W10
	0x03CB59A4 B.CS 0x3CB7C18
	0x03CB59A8 SXTW X10, W23
	0x03CB59AC MADD X9, X10, X20, X9
	0x03CB59B0 STR X10, [X31 + 0x1A0]
	0x03CB59B4 LDRSW X10, [X9 + 0x40]
	0x03CB59B8 MOV X29, X27
	0x03CB59BC LDR W27, [X9 + 0x6C]
	0x03CB59C0 LDR W21, [X9 + 0x20]
	0x03CB59C4 LDP W20, W22, [X9 + 0x28]
	0x03CB59C8 STR X10, [X31 + 0x150]
	0x03CB59CC LDRSW X10, [X9 + 0x44]
	0x03CB59D0 LDR V3, [X9 + 0x50]
	0x03CB59D4 LDP S4, S13, [X9 + 0x58]
	0x03CB59D8 LDP S8, S10, [X9 + 0x60]
	0x03CB59DC LDP S9, S12, [X9 + 0x70]
	0x03CB59E0 LDP S14, S6, [X9 + 0x78]
	0x03CB59E4 CMP W27, 0x420
	0x03CB59E8 STR X10, [X31 + 0x1A8]
	0x03CB59EC B.LE 0x3CB5A28
	0x03CB59F0 MOVZ W9, 0x1008
	0x03CB59F4 CMP W27, W9
	0x03CB59F8 B.LE 0x3CB5A54
	0x03CB59FC MOVZ W9, 0x2004
	0x03CB5A00 CMP W27, W9
	0x03CB5A04 B.LE 0x3CB5AB0
	0x03CB5A08 MOVZ W9, 0x2008
	0x03CB5A0C CMP W27, W9
	0x03CB5A10 B.EQ 0x3CB5C20
	0x03CB5A14 MOVZ W9, 0x2010
	0x03CB5A18 CMP W27, W9
	0x03CB5A1C B.EQ 0x3CB5C20
	0x03CB5A20 MOVZ W8, 0x2020
	0x03CB5A24 B 0x3CB5BA4
	0x03CB5A28 CMP W27, 0x208
	0x03CB5A2C B.LE 0x3CB5A84
	0x03CB5A30 CMP W27, 0x404
	0x03CB5A34 B.LE 0x3CB5AE0
	0x03CB5A38 CMP W27, 0x408
	0x03CB5A3C B.EQ 0x3CB5C20
	0x03CB5A40 CMP W27, 0x410
	0x03CB5A44 B.EQ 0x3CB5C20
	0x03CB5A48 CMP W27, 0x420
	0x03CB5A4C B.EQ 0x3CB5BE4
	0x03CB5A50 B 0x3CB5C2C
	0x03CB5A54 CMP W27, 0x810
	0x03CB5A58 B.LE 0x3CB5B04
	0x03CB5A5C MOVN W9, 0x1000
	0x03CB5A60 ADD W9, W27, W9
	0x03CB5A64 CMP W9, 0x7
	0x03CB5A68 B.HI 0x3CB5BD0
	0x03CB5A6C ADRP X13, 0xFFFFFFFFFCEE2000
	0x03CB5A70 ADD X13, X13, 0xEE2
	0x03CB5A74 ADR X10, 0xD8
	0x03CB5A78 LDRB W11, [X13, X9, LSL]
	0x03CB5A7C ADD X10, X10, X11, 0x2, LSL
	0x03CB5A80 BR X10
	0x03CB5A84 CMP W27, 0x110
	0x03CB5A88 B.LE 0x3CB5B28
	0x03CB5A8C SUB W9, W27, 0x201
	0x03CB5A90 CMP W9, 0x7
	0x03CB5A94 B.HI 0x3CB5BDC
	0x03CB5A98 ADRP X13, 0xFFFFFFFFFCEE2000
	0x03CB5A9C ADD X13, X13, 0xED2
	0x03CB5AA0 ADR X10, 0xAC
	0x03CB5AA4 LDRB W11, [X13, X9, LSL]
	0x03CB5AA8 ADD X10, X10, X11, 0x2, LSL
	0x03CB5AAC BR X10
	0x03CB5AB0 CMP W27, 0x2000
	0x03CB5AB4 B.LE 0x3CB5B94
	0x03CB5AB8 MOVZ W8, 0x2001
	0x03CB5ABC CMP W27, W8
	0x03CB5AC0 B.EQ 0x3CB5B4C
	0x03CB5AC4 MOVZ W8, 0x2002
	0x03CB5AC8 CMP W27, W8
	0x03CB5ACC B.EQ 0x3CB5B64
	0x03CB5AD0 MOVZ W8, 0x2004
	0x03CB5AD4 CMP W27, W8
	0x03CB5AD8 B.EQ 0x3CB5B78
	0x03CB5ADC B 0x3CB5C2C
	0x03CB5AE0 CMP W27, 0x400
	0x03CB5AE4 B.LE 0x3CB5BB0
	0x03CB5AE8 CMP W27, 0x401
	0x03CB5AEC B.EQ 0x3CB5B4C
	0x03CB5AF0 CMP W27, 0x402
	0x03CB5AF4 B.EQ 0x3CB5B64
	0x03CB5AF8 CMP W27, 0x404
	0x03CB5AFC B.EQ 0x3CB5B78
	0x03CB5B00 B 0x3CB5C2C
	0x03CB5B04 SUB W9, W27, 0x801
	0x03CB5B08 CMP W9, 0x7
	0x03CB5B0C B.HI 0x3CB5C0C
	0x03CB5B10 ADRP X13, 0xFFFFFFFFFCEE2000
	0x03CB5B14 ADD X13, X13, 0xEDA
	0x03CB5B18 ADR X10, 0x34
	0x03CB5B1C LDRB W11, [X13, X9, LSL]
	0x03CB5B20 ADD X10, X10, X11, 0x2, LSL
	0x03CB5B24 BR X10
	0x03CB5B28 SUB W9, W27, 0x101
	0x03CB5B2C CMP W9, 0x7
	0x03CB5B30 B.HI 0x3CB5C18
	0x03CB5B34 ADRP X13, 0xFFFFFFFFFCEE2000
	0x03CB5B38 ADD X13, X13, 0xECA
	0x03CB5B3C ADR X10, 0x10
	0x03CB5B40 LDRB W11, [X13, X9, LSL]
	0x03CB5B44 ADD X10, X10, X11, 0x2, LSL
	0x03CB5B48 BR X10
	0x03CB5B4C LDR X8, [X31 + 0x1D0]
	0x03CB5B50 LDRB W8, [X8 + 0xB6]
	0x03CB5B54 CBZ W8, 0x3CB5BC4
	0x03CB5B58 FMOV S0, W31
	0x03CB5B5C FSUB S0, S0, S13
	0x03CB5B60 B 0x3CB5BFC
	0x03CB5B64 FMOV S1, 0.5
	0x03CB5B68 FMUL S0, S8, S1
	0x03CB5B6C FMUL S1, S13, S1
	0x03CB5B70 FADD S0, S10, S0
	0x03CB5B74 B 0x3CB5BF8
	0x03CB5B78 LDR X8, [X31 + 0x1D0]
	0x03CB5B7C FADD S0, S8, S10
	0x03CB5B80 FSUB S1, S0, S13
	0x03CB5B84 LDRB W8, [X8 + 0xB6]
	0x03CB5B88 CMP W8, 0x0
	0x03CB5B8C FCSEL S0, S1, S0, EQ
	0x03CB5B90 B 0x3CB5BFC
	0x03CB5B94 MOVZ W9, 0x1010
	0x03CB5B98 CMP W27, W9
	0x03CB5B9C B.EQ 0x3CB5C20
	0x03CB5BA0 MOVZ W8, 0x1020
	0x03CB5BA4 CMP W27, W8
	0x03CB5BA8 B.EQ 0x3CB5BE4
	0x03CB5BAC B 0x3CB5C2C
	0x03CB5BB0 CMP W27, 0x210
	0x03CB5BB4 B.EQ 0x3CB5C20
	0x03CB5BB8 CMP W27, 0x220
	0x03CB5BBC B.EQ 0x3CB5BE4
	0x03CB5BC0 B 0x3CB5C2C
	0x03CB5BC4 FMOV S0, W31
	0x03CB5BC8 FADD S0, S10, S0
	0x03CB5BCC B 0x3CB5BFC
	0x03CB5BD0 CMP W27, 0x820
	0x03CB5BD4 B.EQ 0x3CB5BE4
	0x03CB5BD8 B 0x3CB5C2C
	0x03CB5BDC CMP W27, 0x120
	0x03CB5BE0 B.NE 0x3CB5C2C
	0x03CB5BE4 FMOV S2, 0.5
	0x03CB5BE8 FMUL S0, S8, S2
	0x03CB5BEC FADD S1, S9, S14
	0x03CB5BF0 FADD S0, S10, S0
	0x03CB5BF4 FMUL S1, S1, S2
	0x03CB5BF8 FSUB S0, S0, S1
	0x03CB5BFC STR S0, [X31 + 0x15C]
	0x03CB5C00 MOVI D0, 0x0
	0x03CB5C04 STR D0, [X31 + 0x148]
	0x03CB5C08 B 0x3CB5C2C
	0x03CB5C0C CMP W27, 0x810
	0x03CB5C10 B.EQ 0x3CB5C20
	0x03CB5C14 B 0x3CB5C2C
	0x03CB5C18 CMP W27, 0x110
	0x03CB5C1C B.NE 0x3CB5C2C
	0x03CB5C20 LDR X9, [X31 + 0x1A8]
	0x03CB5C24 CMP W28, W9
	0x03CB5C28 B.LE 0x3CB5D1C
	0x03CB5C2C LDR X22, [X25 + 0x18]
	0x03CB5C30 CMP W28, W22
	0x03CB5C34 B.CS 0x3CB7C18
	0x03CB5C38 LDR V0, [X31 + 0x15C]
	0x03CB5C3C LDR V1, [X31 + 0x124]
	0x03CB5C40 MOVZ W10, 0x188
	0x03CB5C44 MADD X20, X24, X10, X25
	0x03CB5C48 LDRB W8, [X20 + 0x1A0]
	0x03CB5C4C FADD S8, S1, S0
	0x03CB5C50 LDR V0, [X31 + 0x148]
	0x03CB5C54 LDR V1, [X31 + 0x118]
	0x03CB5C58 MOV X9, X25
	0x03CB5C5C MOV X27, X29
	0x03CB5C60 MOV W11, W28
	0x03CB5C64 FADD V5.2S, V1.2S, V0.2S
	0x03CB5C68 STR W28, [X31 + 0x170]
	0x03CB5C6C STR V5, [X31 + 0x19]
	0x03CB5C70 CBZ W8, 0x3CB5D00
	0x03CB5C74 MADD X8, X24, X10, X9
	0x03CB5C78 LDRB W21, [X8 + 0x28]
	0x03CB5C7C CMP W21, 0x1
	0x03CB5C80 B.NE 0x3CB5D14
	0x03CB5C84 LDR X27, [X31 + 0x1D0]
	0x03CB5C88 SCVTF S1, W23
	0x03CB5C8C STR S15, [X31 + 0xD0]
	0x03CB5C90 MOV V11.16B, V12.16B
	0x03CB5C94 LDR V0, [X27 + 0xFC]
	0x03CB5C98 MOV V12.16B, V6.16B
	0x03CB5C9C MOV V13.16B, V4.16B
	0x03CB5CA0 MOV V15.16B, V3.16B
	0x03CB5CA4 FMUL S0, S0, S1
	0x03CB5CA8 FMOV S1, 1
	0x03CB5CAC BL 0x3EB1BA0
	0x03CB5CB0 LDR W8, [X27 + 0xF4]
	0x03CB5CB4 CMP W8, 0x3
	0x03CB5CB8 B.HI 0x3CB5E70
	0x03CB5CBC ADRP X11, 0xFFFFFFFFFCEE2000
	0x03CB5CC0 ADD X11, X11, 0xEEA
	0x03CB5CC4 ADR X9, 0x1C
	0x03CB5CC8 LDRB W10, [X11, X8, LSL]
	0x03CB5CCC ADD X9, X9, X10, 0x2, LSL
	0x03CB5CD0 MOV V10.16B, V0.16B
	0x03CB5CD4 MOV X27, X29
	0x03CB5CD8 MOV V6.16B, V13.16B
	0x03CB5CDC BR X9
	0x03CB5CE0 MOVZ W29, 0x188
	0x03CB5CE4 MADD X8, X24, X29, X25
	0x03CB5CE8 MOVZ W9, 0x3F800000
	0x03CB5CEC STR W31, [X8 + 0xBC]
	0x03CB5CF0 STR W31, [X8 + 0x94]
	0x03CB5CF4 STR W9, [X8 + 0xE4]
	0x03CB5CF8 FMOV S0, 1
	0x03CB5CFC B 0x3CB605C
	0x03CB5D00 LDR X21, [X31 + 0x1B8]
	0x03CB5D04 LDR X22, [X31 + 0x1D8]
	0x03CB5D08 MOV X25, X9
	0x03CB5D0C MOVZ W29, 0x188
	0x03CB5D10 B 0x3CB6450
	0x03CB5D14 MOVZ W29, 0x188
	0x03CB5D18 B 0x3CB6200
	0x03CB5D1C LDR W10, [X31 + 0x1C4]
	0x03CB5D20 CMP W10, 0xAC
	0x03CB5D24 B.LE 0x3CB5E88
	0x03CB5D28 CMP W10, 0xAD
	0x03CB5D2C B.EQ 0x3CB5C2C
	0x03CB5D30 MOVZ W9, 0x200B
	0x03CB5D34 CMP W10, W9
	0x03CB5D38 B.EQ 0x3CB5C2C
	0x03CB5D3C MOVZ W9, 0x2060
	0x03CB5D40 CMP W10, W9
	0x03CB5D44 B.EQ 0x3CB5C2C
	0x03CB5D48 B 0x3CB5E98
	0x03CB5D4C MOVZ W29, 0x188
	0x03CB5D50 MADD X8, X24, X29, X25
	0x03CB5D54 LDR V2, [X8 + 0xA0]
	0x03CB5D58 LDR V3, [X31 + 0x15C]
	0x03CB5D5C LDR V0, [X19 + 0x360]
	0x03CB5D60 LDR V1, [X19 + 0x368]
	0x03CB5D64 FADD S2, S3, S2
	0x03CB5D68 FSUB S1, S1, S0
	0x03CB5D6C FSUB S0, S2, S0
	0x03CB5D70 B 0x3CB5DB0
	0x03CB5D74 LDR X8, [X31 + 0x1D0]
	0x03CB5D78 MOVZ W29, 0x188
	0x03CB5D7C MADD X9, X24, X29, X25
	0x03CB5D80 LDR V0, [X9 + 0xA0]
	0x03CB5D84 LDR W8, [X8 + 0x70]
	0x03CB5D88 CMP W8, 0x208
	0x03CB5D8C B.NE 0x3CB5EF4
	0x03CB5D90 LDR V3, [X31 + 0x15C]
	0x03CB5D94 LDR V1, [X19 + 0x360]
	0x03CB5D98 LDR V2, [X19 + 0x368]
	0x03CB5D9C NOP
	0x03CB5DA0 MADD X8, X24, X29, X25
	0x03CB5DA4 FADD S0, S3, S0
	0x03CB5DA8 FSUB S0, S0, S1
	0x03CB5DAC FSUB S1, S2, S1
	0x03CB5DB0 FDIV S0, S0, S1
	0x03CB5DB4 FADD S0, S10, S0
	0x03CB5DB8 LDR V2, [X8 + 0x78]
	0x03CB5DBC STR S0, [X8 + 0xBC]
	0x03CB5DC0 LDR V0, [X19 + 0x360]
	0x03CB5DC4 LDR V1, [X19 + 0x368]
	0x03CB5DC8 FADD S2, S3, S2
	0x03CB5DCC FSUB S2, S2, S0
	0x03CB5DD0 FSUB S0, S1, S0
	0x03CB5DD4 FDIV S0, S2, S0
	0x03CB5DD8 FADD S0, S10, S0
	0x03CB5DDC LDR V1, [X8 + 0xC8]
	0x03CB5DE0 STR S0, [X8 + 0x94]
	0x03CB5DE4 LDR V0, [X19 + 0x360]
	0x03CB5DE8 LDR V2, [X19 + 0x368]
	0x03CB5DEC FADD S1, S3, S1
	0x03CB5DF0 FSUB S1, S1, S0
	0x03CB5DF4 FSUB S0, S2, S0
	0x03CB5DF8 FDIV S0, S1, S0
	0x03CB5DFC FADD S0, S10, S0
	0x03CB5E00 LDR V2, [X8 + 0xF0]
	0x03CB5E04 STR S0, [X8 + 0xE4]
	0x03CB5E08 LDR V0, [X19 + 0x360]
	0x03CB5E0C LDR V1, [X19 + 0x368]
	0x03CB5E10 FADD S2, S3, S2
	0x03CB5E14 FSUB S2, S2, S0
	0x03CB5E18 FSUB S0, S1, S0
	0x03CB5E1C FDIV S0, S2, S0
	0x03CB5E20 FADD S0, S10, S0
	0x03CB5E24 B 0x3CB605C
	0x03CB5E28 LDR X8, [X31 + 0x1D0]
	0x03CB5E2C MOVZ W29, 0x188
	0x03CB5E30 LDR W8, [X8 + 0xF8]
	0x03CB5E34 CMP W8, 0x3
	0x03CB5E38 B.HI 0x3CB6008
	0x03CB5E3C ADRP X11, 0xFFFFFFFFFCEE2000
	0x03CB5E40 ADD X11, X11, 0xEEE
	0x03CB5E44 ADR X9, 0x10
	0x03CB5E48 LDRB W10, [X11, X8, LSL]
	0x03CB5E4C ADD X9, X9, X10, 0x2, LSL
	0x03CB5E50 BR X9
	0x03CB5E54 MADD X8, X24, X29, X25
	0x03CB5E58 MOVZ W9, 0x3F800000
	0x03CB5E5C STR W31, [X8 + 0xC0]
	0x03CB5E60 STR W9, [X8 + 0x98]
	0x03CB5E64 STR W31, [X8 + 0xE8]
	0x03CB5E68 STR W9, [X8 + 0x110]
	0x03CB5E6C B 0x3CB6008
	0x03CB5E70 LDR V5, [X31 + 0x19]
	0x03CB5E74 MOV X27, X29
	0x03CB5E78 MOVZ W29, 0x188
	0x03CB5E7C MOV V11.16B, V15.16B
	0x03CB5E80 MOV V6.16B, V13.16B
	0x03CB5E84 B 0x3CB606C
	0x03CB5E88 CMP W10, 0x3
	0x03CB5E8C B.EQ 0x3CB5C2C
	0x03CB5E90 CMP W10, 0xA
	0x03CB5E94 B.EQ 0x3CB5C2C
	0x03CB5E98 LDR X9, [X31 + 0x150]
	0x03CB5E9C STR S6, [X31 + 0xD0]
	0x03CB5EA0 STR S4, [X31 + 0x170]
	0x03CB5EA4 STR S3, [X31 + 0x190]
	0x03CB5EA8 CMP W9, W8
	0x03CB5EAC B.CS 0x3CB7C18
	0x03CB5EB0 ADRP X8, 0x440000
	0x03CB5EB4 LDR X8, [X8 + 0x170]
	0x03CB5EB8 LDR X0, [X8]
	0x03CB5EBC NOP
	0x03CB5EC0 MADD X8, X9, X12, X25
	0x03CB5EC4 LDRH W8, [X8 + 0x20]
	0x03CB5EC8 LDR W9, [X0 + 0xE0]
	0x03CB5ECC CBNZ W9, 0x3CB5EDC
	0x03CB5ED0 STR W8, [X31 + 0x8C]
	0x03CB5ED4 BL 0x1C16DFC
	0x03CB5ED8 LDR W8, [X31 + 0x8C]
	0x03CB5EDC MOV W0, W8
	0x03CB5EE0 MOV X1, X31
	0x03CB5EE4 BL 0x331B664
	0x03CB5EE8 TBZ X0, 0x0, 0x3CB7760
	0x03CB5EEC MOV W8, W31
	0x03CB5EF0 B 0x3CB776C
	0x03CB5EF4 MADD X8, X24, X29, X25
	0x03CB5EF8 LDR V2, [X8 + 0x78]
	0x03CB5EFC LDR V3, [X8 + 0xC8]
	0x03CB5F00 FSUB S0, S0, S9
	0x03CB5F04 FSUB S1, S14, S9
	0x03CB5F08 LDR V4, [X8 + 0xF0]
	0x03CB5F0C FDIV S0, S0, S1
	0x03CB5F10 FADD S0, S10, S0
	0x03CB5F14 STR S0, [X8 + 0xBC]
	0x03CB5F18 FSUB S0, S2, S9
	0x03CB5F1C FSUB S2, S3, S9
	0x03CB5F20 FSUB S3, S4, S9
	0x03CB5F24 FDIV S0, S0, S1
	0x03CB5F28 FDIV S2, S2, S1
	0x03CB5F2C FDIV S1, S3, S1
	0x03CB5F30 FADD S0, S10, S0
	0x03CB5F34 FADD S2, S10, S2
	0x03CB5F38 STR S0, [X8 + 0x94]
	0x03CB5F3C STR S2, [X8 + 0xE4]
	0x03CB5F40 FADD S0, S10, S1
	0x03CB5F44 B 0x3CB605C
	0x03CB5F48 MADD X8, X24, X29, X25
	0x03CB5F4C LDR V0, [X8 + 0xA4]
	0x03CB5F50 LDR V1, [X8 + 0x7C]
	0x03CB5F54 FSUB S2, S12, S11
	0x03CB5F58 FSUB S0, S0, S11
	0x03CB5F5C FSUB S1, S1, S11
	0x03CB5F60 FDIV S0, S0, S2
	0x03CB5F64 FDIV S1, S1, S2
	0x03CB5F68 FADD S0, S10, S0
	0x03CB5F6C FADD S1, S10, S1
	0x03CB5F70 STR S0, [X8 + 0xC0]
	0x03CB5F74 STR S1, [X8 + 0x98]
	0x03CB5F78 STR S0, [X8 + 0xE8]
	0x03CB5F7C STR S1, [X8 + 0x110]
	0x03CB5F80 B 0x3CB6008
	0x03CB5F84 MADD X8, X24, X29, X25
	0x03CB5F88 LDR V0, [X19 + 0x364]
	0x03CB5F8C LDR V1, [X19 + 0x36C]
	0x03CB5F90 LDR V2, [X8 + 0xA4]
	0x03CB5F94 LDR V3, [X8 + 0x7C]
	0x03CB5F98 FSUB S1, S1, S0
	0x03CB5F9C FSUB S0, S2, S0
	0x03CB5FA0 FDIV S0, S0, S1
	0x03CB5FA4 FADD S0, S10, S0
	0x03CB5FA8 STR S0, [X8 + 0xC0]
	0x03CB5FAC LDR V1, [X19 + 0x364]
	0x03CB5FB0 LDR V2, [X19 + 0x36C]
	0x03CB5FB4 STR S0, [X8 + 0xE8]
	0x03CB5FB8 FSUB S0, S3, S1
	0x03CB5FBC FSUB S1, S2, S1
	0x03CB5FC0 FDIV S0, S0, S1
	0x03CB5FC4 FADD S0, S10, S0
	0x03CB5FC8 STR S0, [X8 + 0x98]
	0x03CB5FCC STR S0, [X8 + 0x110]
	0x03CB5FD0 B 0x3CB6008
	0x03CB5FD4 ADRP X8, 0x43E000
	0x03CB5FD8 LDR X8, [X8 + 0xA28]
	0x03CB5FDC LDR X0, [X8]
	0x03CB5FE0 LDR W8, [X0 + 0xE0]
	0x03CB5FE4 CBNZ W8, 0x3CB5FEC
	0x03CB5FE8 BL 0x1C16DFC
	0x03CB5FEC ADRP X8, 0x4A3000
	0x03CB5FF0 LDR X8, [X8 + 0x418]
	0x03CB5FF4 MOV X1, X31
	0x03CB5FF8 LDR X0, [X8]
	0x03CB5FFC BL 0x3C06048
	0x03CB6000 LDR X22, [X25 + 0x18]
	0x03CB6004 MOV V6.16B, V13.16B
	0x03CB6008 CMP W28, W22
	0x03CB600C B.CS 0x3CB7C18
	0x03CB6010 MADD X8, X24, X29, X25
	0x03CB6014 LDR V0, [X8 + 0xC0]
	0x03CB6018 LDR V1, [X8 + 0x98]
	0x03CB601C LDR V2, [X8 + 0x168]
	0x03CB6020 FADD S3, S0, S1
	0x03CB6024 FMUL S0, S0, S2
	0x03CB6028 FMUL S1, S1, S2
	0x03CB602C FMUL S2, S3, S2
	0x03CB6030 FMOV S3, 1
	0x03CB6034 FSUB S2, S3, S2
	0x03CB6038 FMOV S3, 0.5
	0x03CB603C FMUL S2, S2, S3
	0x03CB6040 FADD S0, S0, S2
	0x03CB6044 FADD S1, S1, S2
	0x03CB6048 FADD S2, S10, S0
	0x03CB604C FADD S0, S10, S1
	0x03CB6050 STR S2, [X8 + 0xBC]
	0x03CB6054 STR S2, [X8 + 0x94]
	0x03CB6058 STR S0, [X8 + 0xE4]
	0x03CB605C LDR V5, [X31 + 0x19]
	0x03CB6060 MOV V11.16B, V15.16B
	0x03CB6064 MADD X8, X24, X29, X25
	0x03CB6068 STR S0, [X8 + 0x10C]
	0x03CB606C LDR X8, [X31 + 0x1D0]
	0x03CB6070 LDR V15, [X31 + 0xD0]
	0x03CB6074 LDR W8, [X8 + 0xF8]
	0x03CB6078 CMP W8, 0x3
	0x03CB607C B.HI 0x3CB618C
	0x03CB6080 ADRP X11, 0xFFFFFFFFFCEE1000
	0x03CB6084 ADD X11, X11, 0xEF2
	0x03CB6088 ADR X9, 0x10
	0x03CB608C LDRB W10, [X11, X8, LSL]
	0x03CB6090 ADD X9, X9, X10, 0x2, LSL
	0x03CB6094 BR X9
	0x03CB6098 CMP W28, W22
	0x03CB609C B.CS 0x3CB7C18
	0x03CB60A0 MADD X8, X24, X29, X25
	0x03CB60A4 MOVZ W9, 0x3F800000
	0x03CB60A8 STR W31, [X8 + 0xC0]
	0x03CB60AC STR W9, [X8 + 0x98]
	0x03CB60B0 STR W9, [X8 + 0xE8]
	0x03CB60B4 STR W31, [X8 + 0x110]
	0x03CB60B8 B 0x3CB618C
	0x03CB60BC CMP W28, W22
	0x03CB60C0 B.CS 0x3CB7C18
	0x03CB60C4 MADD X8, X24, X29, X25
	0x03CB60C8 LDR V0, [X8 + 0xA4]
	0x03CB60CC LDR V1, [X8 + 0x7C]
	0x03CB60D0 FSUB S2, S11, S6
	0x03CB60D4 FSUB S0, S0, S6
	0x03CB60D8 FSUB S1, S1, S6
	0x03CB60DC FDIV S0, S0, S2
	0x03CB60E0 FDIV S1, S1, S2
	0x03CB60E4 STR S0, [X8 + 0xC0]
	0x03CB60E8 B 0x3CB612C
	0x03CB60EC CMP W28, W22
	0x03CB60F0 B.CS 0x3CB7C18
	0x03CB60F4 MADD X8, X24, X29, X25
	0x03CB60F8 LDR V0, [X19 + 0x364]
	0x03CB60FC LDR V1, [X19 + 0x36C]
	0x03CB6100 LDR V2, [X8 + 0xA4]
	0x03CB6104 LDR V3, [X8 + 0x7C]
	0x03CB6108 FSUB S1, S1, S0
	0x03CB610C FSUB S0, S2, S0
	0x03CB6110 FDIV S0, S0, S1
	0x03CB6114 STR S0, [X8 + 0xC0]
	0x03CB6118 LDR V1, [X19 + 0x364]
	0x03CB611C LDR V2, [X19 + 0x36C]
	0x03CB6120 FSUB S3, S3, S1
	0x03CB6124 FSUB S1, S2, S1
	0x03CB6128 FDIV S1, S3, S1
	0x03CB612C STR S1, [X8 + 0x98]
	0x03CB6130 STR S1, [X8 + 0xE8]
	0x03CB6134 STR S0, [X8 + 0x110]
	0x03CB6138 B 0x3CB618C
	0x03CB613C CMP W28, W22
	0x03CB6140 B.CS 0x3CB7C18
	0x03CB6144 MADD X8, X24, X29, X25
	0x03CB6148 LDR V0, [X8 + 0xBC]
	0x03CB614C LDR V1, [X8 + 0xE4]
	0x03CB6150 LDR V2, [X8 + 0x168]
	0x03CB6154 FADD S3, S0, S1
	0x03CB6158 FDIV S0, S0, S2
	0x03CB615C FDIV S1, S1, S2
	0x03CB6160 FDIV S2, S3, S2
	0x03CB6164 FMOV S3, 1
	0x03CB6168 FSUB S2, S3, S2
	0x03CB616C FMOV S3, 0.5
	0x03CB6170 FMUL S2, S2, S3
	0x03CB6174 FADD S0, S0, S2
	0x03CB6178 FADD S1, S1, S2
	0x03CB617C STR S0, [X8 + 0xC0]
	0x03CB6180 STR S1, [X8 + 0x98]
	0x03CB6184 STR S0, [X8 + 0x110]
	0x03CB6188 STR S1, [X8 + 0xE8]
	0x03CB618C CMP W28, W22
	0x03CB6190 B.CS 0x3CB7C18
	0x03CB6194 MADD X8, X24, X29, X25
	0x03CB6198 LDR V0, [X19 + 0x1594]
	0x03CB619C LDR V1, [X8 + 0x16C]
	0x03CB61A0 LDRB W8, [X8 + 0x64]
	0x03CB61A4 FMOV S2, 1
	0x03CB61A8 FSUB S0, S2, S0
	0x03CB61AC FMUL S11, S1, S0
	0x03CB61B0 CBNZ W8, 0x3CB61C8
	0x03CB61B4 MADD X8, X24, X29, X25
	0x03CB61B8 LDRB W8, [X8 + 0x19C]
	0x03CB61BC FNEG S0, S11
	0x03CB61C0 ANDS W31, W8, 0x1
	0x03CB61C4 FCSEL S11, S11, S0, EQ
	0x03CB61C8 MADD X8, X24, X29, X25
	0x03CB61CC MOVZ W9, 0x3F800000
	0x03CB61D0 STR S11, [X8 + 0xB8]
	0x03CB61D4 STR S11, [X8 + 0x90]
	0x03CB61D8 STR S11, [X8 + 0xE0]
	0x03CB61DC STR S11, [X8 + 0x108]
	0x03CB61E0 STR W9, [X8 + 0xBC]
	0x03CB61E4 STR S11, [X8 + 0xC0]
	0x03CB61E8 STR W9, [X8 + 0x94]
	0x03CB61EC STR S11, [X8 + 0x98]
	0x03CB61F0 STR W9, [X8 + 0xE4]
	0x03CB61F4 STR S11, [X8 + 0xE8]
	0x03CB61F8 STR W9, [X8 + 0x10C]
	0x03CB61FC STR S11, [X8 + 0x110]
	0x03CB6200 LDR X9, [X31 + 0x1D0]
	0x03CB6204 LDR W8, [X9 + 0xD8]
	0x03CB6208 CMP W28, W8
	0x03CB620C B.GE 0x3CB6270
	0x03CB6210 LDR W8, [X9 + 0xDC]
	0x03CB6214 LDR W10, [X31 + 0x140]
	0x03CB6218 CMP W10, W8
	0x03CB621C B.GE 0x3CB6270
	0x03CB6220 LDR W8, [X9 + 0xE0]
	0x03CB6224 CMP W23, W8
	0x03CB6228 B.GE 0x3CB6238
	0x03CB622C LDR W8, [X9 + 0x74]
	0x03CB6230 CMP W8, 0x5
	0x03CB6234 B.NE 0x3CB71BC
	0x03CB6238 LDR W8, [X9 + 0xE0]
	0x03CB623C CMP W23, W8
	0x03CB6240 B.GE 0x3CB6270
	0x03CB6244 LDR W8, [X9 + 0x74]
	0x03CB6248 CMP W8, 0x5
	0x03CB624C B.NE 0x3CB6270
	0x03CB6250 CMP W28, W22
	0x03CB6254 B.CS 0x3CB7C18
	0x03CB6258 MADD X8, X24, X29, X25
	0x03CB625C LDR W8, [X8 + 0x70]
	0x03CB6260 LDR W9, [X31 + 0x80]
	0x03CB6264 CMP W8, W9
	0x03CB6268 CSET W8, EQ
	0x03CB626C B 0x3CB6274
	0x03CB6270 MOV W8, W31
	0x03CB6274 CMP W28, W22
	0x03CB6278 B.CS 0x3CB7C18
	0x03CB627C CBZ W8, 0x3CB62F0
	0x03CB6280 MADD X8, X24, X29, X25
	0x03CB6284 LDR V2, [X8 + 0xA0]
	0x03CB6288 LDR V4, [X8 + 0x78]
	0x03CB628C LDR V6, [X8 + 0xC8]
	0x03CB6290 LDR V16, [X8 + 0xF0]
	0x03CB6294 UNIMPLEMENTED
	0x03CB6298 MOV S1, V5.S[1]
	0x03CB629C LDR V3, [X8 + 0xA8]
	0x03CB62A0 LDR V5, [X8 + 0x80]
	0x03CB62A4 LDR V7, [X8 + 0xD0]
	0x03CB62A8 FADD V2.2S, V0.2S, V2.2S
	0x03CB62AC FADD V4.2S, V0.2S, V4.2S
	0x03CB62B0 FADD V6.2S, V0.2S, V6.2S
	0x03CB62B4 FADD V0.2S, V0.2S, V16.2S
	0x03CB62B8 LDR V16, [X8 + 0xF8]
	0x03CB62BC FADD S3, S1, S3
	0x03CB62C0 FADD S5, S1, S5
	0x03CB62C4 FADD S7, S1, S7
	0x03CB62C8 FADD S1, S1, S16
	0x03CB62CC STR D2, [X8 + 0xA0]
	0x03CB62D0 STR S3, [X8 + 0xA8]
	0x03CB62D4 STR D4, [X8 + 0x78]
	0x03CB62D8 STR S5, [X8 + 0x80]
	0x03CB62DC STR D6, [X8 + 0xC8]
	0x03CB62E0 STR S7, [X8 + 0xD0]
	0x03CB62E4 STR D0, [X8 + 0xF0]
	0x03CB62E8 STR S1, [X8 + 0xF8]
	0x03CB62EC B 0x3CB63A0
	0x03CB62F0 ADRP X8, 0x722000
	0x03CB62F4 LDRB W8, [X8 + 0x783]
	0x03CB62F8 CBNZ W8, 0x3CB6318
	0x03CB62FC ADRP X0, 0x43D000
	0x03CB6300 LDR X0, [X0 + 0x5A0]
	0x03CB6304 BL 0x1C16CF4
	0x03CB6308 ADRP X8, 0x722000
	0x03CB630C MOVZ W9, 0x1
	0x03CB6310 STRB W9, [X8 + 0x783]
	0x03CB6314 LDR W22, [X25 + 0x18]
	0x03CB6318 ADRP X10, 0x43D000
	0x03CB631C LDR X10, [X10 + 0x5A0]
	0x03CB6320 CMP W28, W22
	0x03CB6324 LDR X8, [X10]
	0x03CB6328 LDR X8, [X8 + 0xB8]
	0x03CB632C LDR V0, [X8]
	0x03CB6330 LDR V1, [X8 + 0x8]
	0x03CB6334 NOP
	0x03CB6338 MADD X8, X24, X29, X25
	0x03CB633C STR D0, [X8 + 0xA0]
	0x03CB6340 STR S1, [X8 + 0xA8]
	0x03CB6344 B.CS 0x3CB7C18
	0x03CB6348 LDR X8, [X10]
	0x03CB634C LDR X8, [X8 + 0xB8]
	0x03CB6350 LDR V0, [X8]
	0x03CB6354 LDR V1, [X8 + 0x8]
	0x03CB6358 NOP
	0x03CB635C MADD X8, X24, X29, X25
	0x03CB6360 STR D0, [X8 + 0x78]
	0x03CB6364 STR S1, [X8 + 0x80]
	0x03CB6368 LDR X9, [X10]
	0x03CB636C LDR X9, [X9 + 0xB8]
	0x03CB6370 LDR V0, [X9]
	0x03CB6374 LDR V1, [X9 + 0x8]
	0x03CB6378 STR D0, [X8 + 0xC8]
	0x03CB637C STR S1, [X8 + 0xD0]
	0x03CB6380 LDR X9, [X10]
	0x03CB6384 LDR X9, [X9 + 0xB8]
	0x03CB6388 LDR V0, [X9]
	0x03CB638C LDR V1, [X9 + 0x8]
	0x03CB6390 ADD X9, X20, 0x1A0
	0x03CB6394 STR D0, [X8 + 0xF0]
	0x03CB6398 STR S1, [X8 + 0xF8]
	0x03CB639C STRB W31, [X9]
	0x03CB63A0 LDR X22, [X31 + 0x1D8]
	0x03CB63A4 MOV X0, X31
	0x03CB63A8 BL 0x3C113A8
	0x03CB63AC CMP W0, 0x1
	0x03CB63B0 B.NE 0x3CB63C0
	0x03CB63B4 LDR X8, [X31 + 0x1D0]
	0x03CB63B8 LDRB W20, [X8 + 0xA2]
	0x03CB63BC B 0x3CB63C4
	0x03CB63C0 MOV W20, W31
	0x03CB63C4 ADRP X8, 0x4AB000
	0x03CB63C8 LDR X8, [X8 + 0xB48]
	0x03CB63CC LDR V5, [X31 + 0x19]
	0x03CB63D0 CMP W21, 0x1
	0x03CB63D4 B.NE 0x3CB640C
	0x03CB63D8 LDR X0, [X8]
	0x03CB63DC LDR W8, [X0 + 0xE0]
	0x03CB63E0 CBNZ W8, 0x3CB63E8
	0x03CB63E4 BL 0x1C16DFC
	0x03CB63E8 LDR X21, [X31 + 0x1B8]
	0x03CB63EC LDR W0, [X31 + 0x170]
	0x03CB63F0 LDR X2, [X31 + 0x1D0]
	0x03CB63F4 CMP W20, 0x0
	0x03CB63F8 CSET W1, NE
	0x03CB63FC MOV X3, X21
	0x03CB6400 MOV X4, X31
	0x03CB6404 BL 0x3CC7968
	0x03CB6408 B 0x3CB6444
	0x03CB640C CMP W21, 0x2
	0x03CB6410 B.NE 0x3CB644C
	0x03CB6414 LDR X0, [X8]
	0x03CB6418 LDR X21, [X31 + 0x1B8]
	0x03CB641C LDR W8, [X0 + 0xE0]
	0x03CB6420 CBNZ W8, 0x3CB6428
	0x03CB6424 BL 0x1C16DFC
	0x03CB6428 LDR W0, [X31 + 0x170]
	0x03CB642C LDR X2, [X31 + 0x1D0]
	0x03CB6430 CMP W20, 0x0
	0x03CB6434 CSET W1, NE
	0x03CB6438 MOV X3, X21
	0x03CB643C MOV X4, X31
	0x03CB6440 BL 0x3CC83A0
	0x03CB6444 LDR V5, [X31 + 0x19]
	0x03CB6448 B 0x3CB6450
	0x03CB644C LDR X21, [X31 + 0x1B8]
	0x03CB6450 LDR X8, [X22]
	0x03CB6454 LDR X15, [X31 + 0x1A0]
	0x03CB6458 MOVZ W14, 0x60
	0x03CB645C CBZ X8, 0x3CB7C14
	0x03CB6460 LDR W9, [X8 + 0x18]
	0x03CB6464 CMP W28, W9
	0x03CB6468 B.CS 0x3CB7C18
	0x03CB646C MADD X8, X24, X29, X8
	0x03CB6470 ADD X8, X8, 0x124
	0x03CB6474 LDR V2, [X8]
	0x03CB6478 LDR V3, [X8 + 0x8]
	0x03CB647C UNIMPLEMENTED
	0x03CB6480 MOV S1, V5.S[1]
	0x03CB6484 FADD V2.2S, V0.2S, V2.2S
	0x03CB6488 FADD S3, S1, S3
	0x03CB648C STR D2, [X8]
	0x03CB6490 STR S3, [X8 + 0x8]
	0x03CB6494 LDR X8, [X22]
	0x03CB6498 CBZ X8, 0x3CB7C14
	0x03CB649C LDR W9, [X8 + 0x18]
	0x03CB64A0 CMP W28, W9
	0x03CB64A4 B.CS 0x3CB7C18
	0x03CB64A8 MADD X8, X24, X29, X8
	0x03CB64AC LDR V2, [X8 + 0x118]
	0x03CB64B0 LDR V3, [X8 + 0x120]
	0x03CB64B4 FADD V2.2S, V0.2S, V2.2S
	0x03CB64B8 FADD S3, S1, S3
	0x03CB64BC STR D2, [X8 + 0x118]
	0x03CB64C0 STR S3, [X8 + 0x120]
	0x03CB64C4 LDR X8, [X22]
	0x03CB64C8 CBZ X8, 0x3CB7C14
	0x03CB64CC LDR W9, [X8 + 0x18]
	0x03CB64D0 CMP W28, W9
	0x03CB64D4 B.CS 0x3CB7C18
	0x03CB64D8 MADD X8, X24, X29, X8
	0x03CB64DC LDR V2, [X8 + 0x130]
	0x03CB64E0 LDR V3, [X8 + 0x138]
	0x03CB64E4 FADD V0.2S, V0.2S, V2.2S
	0x03CB64E8 FADD S1, S1, S3
	0x03CB64EC STR D0, [X8 + 0x130]
	0x03CB64F0 STR S1, [X8 + 0x138]
	0x03CB64F4 LDR X8, [X22]
	0x03CB64F8 CBZ X8, 0x3CB7C14
	0x03CB64FC LDR W9, [X8 + 0x18]
	0x03CB6500 CMP W28, W9
	0x03CB6504 B.CS 0x3CB7C18
	0x03CB6508 MADD X8, X24, X29, X8
	0x03CB650C LDR V0, [X8 + 0x13C]
	0x03CB6510 LDR V1, [X8 + 0x140]
	0x03CB6514 FADD S0, S8, S0
	0x03CB6518 FADD V1.2S, V5.2S, V1.2S
	0x03CB651C STR S0, [X8 + 0x13C]
	0x03CB6520 STR D1, [X8 + 0x140]
	0x03CB6524 LDR X8, [X22]
	0x03CB6528 CBZ X8, 0x3CB7C14
	0x03CB652C LDR W10, [X8 + 0x18]
	0x03CB6530 CMP W28, W10
	0x03CB6534 B.CS 0x3CB7C18
	0x03CB6538 MADD X9, X24, X29, X8
	0x03CB653C LDR V0, [X9 + 0x148]
	0x03CB6540 LDR V1, [X9 + 0x164]
	0x03CB6544 LDR V2, [X9 + 0x154]
	0x03CB6548 ADD X11, X9, 0x14C
	0x03CB654C FADD S0, S8, S0
	0x03CB6550 STR S0, [X9 + 0x148]
	0x03CB6554 FADD S0, S8, S1
	0x03CB6558 FADD S1, S5, S2
	0x03CB655C STR S0, [X9 + 0x164]
	0x03CB6560 STR S1, [X9 + 0x154]
	0x03CB6564 LDR V1, [X11]
	0x03CB6568 UNIMPLEMENTED
	0x03CB656C CMP W23, W26
	0x03CB6570 FADD V1.2S, V0.2S, V1.2S
	0x03CB6574 STR D1, [X11]
	0x03CB6578 B.NE 0x3CB6598
	0x03CB657C LDR X8, [X31 + 0x1C8]
	0x03CB6580 LDR W26, [X31 + 0x168]
	0x03CB6584 LDR W8, [X8]
	0x03CB6588 SUB W8, W8, 0x1
	0x03CB658C CMP W28, W8
	0x03CB6590 B.EQ 0x3CB6648
	0x03CB6594 B 0x3CB66F8
	0x03CB6598 LDR X11, [X21 + 0x48]
	0x03CB659C CBZ X11, 0x3CB7C14
	0x03CB65A0 LDR W9, [X11 + 0x18]
	0x03CB65A4 CMP W26, W9
	0x03CB65A8 B.CS 0x3CB7C18
	0x03CB65AC SXTW X9, W26
	0x03CB65B0 MADD X13, X9, X14, X11
	0x03CB65B4 LDR V1, [X13 + 0x50]
	0x03CB65B8 LDP S2, S3, [X13 + 0x58]
	0x03CB65BC LDRSW X12, [X13 + 0x38]
	0x03CB65C0 FADD V4.2S, V0.2S, V1.2S
	0x03CB65C4 FADD S1, S5, S2
	0x03CB65C8 FADD S2, S8, S3
	0x03CB65CC CMP W12, W10
	0x03CB65D0 STR D4, [X13 + 0x50]
	0x03CB65D4 STP S1, S2, [X13 + 0x58]
	0x03CB65D8 B.CS 0x3CB7C18
	0x03CB65DC MADD X8, X12, X29, X8
	0x03CB65E0 LDR W8, [X8 + 0x124]
	0x03CB65E4 NOP
	0x03CB65E8 MADD X10, X9, X14, X11
	0x03CB65EC STR S1, [X10 + 0x74]
	0x03CB65F0 STR W8, [X10 + 0x70]
	0x03CB65F4 LDR X8, [X21 + 0x48]
	0x03CB65F8 CBZ X8, 0x3CB7C14
	0x03CB65FC LDR W10, [X8 + 0x18]
	0x03CB6600 CMP W26, W10
	0x03CB6604 B.CS 0x3CB7C18
	0x03CB6608 LDR X10, [X22]
	0x03CB660C LDR W26, [X31 + 0x168]
	0x03CB6610 CBZ X10, 0x3CB7C14
	0x03CB6614 MADD X11, X9, X14, X8
	0x03CB6618 LDRSW X11, [X11 + 0x44]
	0x03CB661C LDR W12, [X10 + 0x18]
	0x03CB6620 CMP W11, W12
	0x03CB6624 B.CS 0x3CB7C18
	0x03CB6628 MADD X10, X11, X29, X10
	0x03CB662C MADD X8, X9, X14, X8
	0x03CB6630 LDR W9, [X10 + 0x130]
	0x03CB6634 LDR W10, [X8 + 0x50]
	0x03CB6638 STP W9, W10, [X8 + 0x78]
	0x03CB663C LDR X8, [X31 + 0x1C8]
	0x03CB6640 LDR W8, [X8]
	0x03CB6644 SUB W8, W8, 0x1
	0x03CB6648 CMP W28, W8
	0x03CB664C B.NE 0x3CB66F8
	0x03CB6650 LDR X8, [X21 + 0x48]
	0x03CB6654 CBZ X8, 0x3CB7C14
	0x03CB6658 LDR W9, [X8 + 0x18]
	0x03CB665C CMP W23, W9
	0x03CB6660 B.CS 0x3CB7C18
	0x03CB6664 MADD X9, X15, X14, X8
	0x03CB6668 LDR V1, [X9 + 0x50]
	0x03CB666C LDP S2, S3, [X9 + 0x58]
	0x03CB6670 FADD V1.2S, V0.2S, V1.2S
	0x03CB6674 FADD S0, S5, S2
	0x03CB6678 FADD S2, S8, S3
	0x03CB667C STR D1, [X9 + 0x50]
	0x03CB6680 STP S0, S2, [X9 + 0x58]
	0x03CB6684 LDR X10, [X22]
	0x03CB6688 CBZ X10, 0x3CB7C14
	0x03CB668C LDRSW X9, [X9 + 0x38]
	0x03CB6690 LDR W11, [X10 + 0x18]
	0x03CB6694 CMP W9, W11
	0x03CB6698 B.CS 0x3CB7C18
	0x03CB669C MADD X9, X9, X29, X10
	0x03CB66A0 LDR W9, [X9 + 0x124]
	0x03CB66A4 NOP
	0x03CB66A8 MADD X8, X15, X14, X8
	0x03CB66AC STR S0, [X8 + 0x74]
	0x03CB66B0 STR W9, [X8 + 0x70]
	0x03CB66B4 LDR X8, [X21 + 0x48]
	0x03CB66B8 CBZ X8, 0x3CB7C14
	0x03CB66BC LDR W9, [X8 + 0x18]
	0x03CB66C0 CMP W23, W9
	0x03CB66C4 B.CS 0x3CB7C18
	0x03CB66C8 LDR X9, [X22]
	0x03CB66CC CBZ X9, 0x3CB7C14
	0x03CB66D0 MADD X10, X15, X14, X8
	0x03CB66D4 LDRSW X10, [X10 + 0x44]
	0x03CB66D8 LDR W11, [X9 + 0x18]
	0x03CB66DC CMP W10, W11
	0x03CB66E0 B.CS 0x3CB7C18
	0x03CB66E4 MADD X9, X10, X29, X9
	0x03CB66E8 MADD X8, X15, X14, X8
	0x03CB66EC LDR W9, [X9 + 0x130]
	0x03CB66F0 LDR W10, [X8 + 0x50]
	0x03CB66F4 STP W9, W10, [X8 + 0x78]
	0x03CB66F8 ADRP X8, 0x43F000
	0x03CB66FC LDR X8, [X8 + 0x170]
	0x03CB6700 LDR X0, [X8]
	0x03CB6704 LDR W8, [X0 + 0xE0]
	0x03CB6708 CBNZ W8, 0x3CB6710
	0x03CB670C BL 0x1C16DFC
	0x03CB6710 LDR W20, [X31 + 0x1C4]
	0x03CB6714 MOV X1, X31
	0x03CB6718 MOV W0, W20
	0x03CB671C BL 0x331ABF0
	0x03CB6720 TBNZ X0, 0x0, 0x3CB6744
	0x03CB6724 MOVN W8, 0x200F
	0x03CB6728 ADD W8, W20, W8
	0x03CB672C CMP W8, 0x2
	0x03CB6730 B.CC 0x3CB6744
	0x03CB6734 CMP W20, 0xAD
	0x03CB6738 B.EQ 0x3CB6744
	0x03CB673C CMP W20, 0x2D
	0x03CB6740 B.NE 0x3CB6D14
	0x03CB6744 LDR X8, [X31 + 0x1C8]
	0x03CB6748 LDR W9, [X31 + 0x16C]
	0x03CB674C LDR W8, [X8]
	0x03CB6750 ANDS W31, W9, 0x1
	0x03CB6754 CSEL W26, W26, W28, NE
	0x03CB6758 SUB W8, W8, 0x1
	0x03CB675C CMP W28, W8
	0x03CB6760 B.NE 0x3CB6830
	0x03CB6764 LDR X8, [X31 + 0x100]
	0x03CB6768 LDR X8, [X8]
	0x03CB676C CBZ X8, 0x3CB7C14
	0x03CB6770 LDRSW X20, [X21 + 0x1C]
	0x03CB6774 LDR W21, [X8 + 0x18]
	0x03CB6778 ADD W9, W20, 0x1
	0x03CB677C CMP W9, W21
	0x03CB6780 B.LE 0x3CB67C0
	0x03CB6784 ADRP X8, 0x4AB000
	0x03CB6788 LDR X8, [X8 + 0xB68]
	0x03CB678C LDR X0, [X8]
	0x03CB6790 LDR W8, [X0 + 0xE0]
	0x03CB6794 CBNZ W8, 0x3CB679C
	0x03CB6798 BL 0x1C16DFC
	0x03CB679C ADRP X8, 0x4AB000
	0x03CB67A0 LDR X8, [X8 + 0xB60]
	0x03CB67A4 ADD W1, W21, 0x1
	0x03CB67A8 LDR X21, [X31 + 0x100]
	0x03CB67AC LDR X2, [X8]
	0x03CB67B0 MOV X0, X21
	0x03CB67B4 BL 0x229C1E0
	0x03CB67B8 LDR X8, [X21]
	0x03CB67BC CBZ X8, 0x3CB7C14
	0x03CB67C0 LDR W9, [X8 + 0x18]
	0x03CB67C4 CMP W20, W9
	0x03CB67C8 B.CS 0x3CB7C18
	0x03CB67CC MOVZ W9, 0xC
	0x03CB67D0 MADD X8, X20, X9, X8
	0x03CB67D4 LDR W9, [X31 + 0x1B4]
	0x03CB67D8 LDR W10, [X31 + 0x170]
	0x03CB67DC LDR X21, [X31 + 0x1B8]
	0x03CB67E0 SUB W9, W9, W26
	0x03CB67E4 STP W26, W10, [X8 + 0x20]
	0x03CB67E8 STR W9, [X8 + 0x28]
	0x03CB67EC LDR W9, [X21 + 0x1C]
	0x03CB67F0 LDR X8, [X21 + 0x48]
	0x03CB67F4 ADD W9, W9, 0x1
	0x03CB67F8 STR W9, [X21 + 0x1C]
	0x03CB67FC CBZ X8, 0x3CB7C14
	0x03CB6800 LDR W9, [X8 + 0x18]
	0x03CB6804 LDR X10, [X31 + 0x1A0]
	0x03CB6808 CMP W23, W9
	0x03CB680C MOVZ W9, 0x60
	0x03CB6810 B.CS 0x3CB7C18
	0x03CB6814 MADD X8, X10, X9, X8
	0x03CB6818 LDR W9, [X8 + 0x34]
	0x03CB681C LDR W10, [X31 + 0x140]
	0x03CB6820 ADD W9, W9, 0x1
	0x03CB6824 ADD W10, W10, 0x1
	0x03CB6828 STR W10, [X31 + 0x140]
	0x03CB682C STR W9, [X8 + 0x34]
	0x03CB6830 MOVZ W8, 0x1
	0x03CB6834 STR W8, [X31 + 0x16C]
	0x03CB6838 LDR X8, [X22]
	0x03CB683C CBZ X8, 0x3CB7C14
	0x03CB6840 LDR W9, [X8 + 0x18]
	0x03CB6844 CMP W28, W9
	0x03CB6848 B.CS 0x3CB7C18
	0x03CB684C MADD X10, X24, X29, X8
	0x03CB6850 LDRB W10, [X10 + 0x19C]
	0x03CB6854 TBNZ X10, 0x2, 0x3CB6888
	0x03CB6858 LDR W10, [X31 + 0x184]
	0x03CB685C TBZ X10, 0x0, 0x3CB6A20
	0x03CB6860 LDR W10, [X31 + 0x1B4]
	0x03CB6864 SUB W10, W10, 0x2
	0x03CB6868 CMP W10, W9
	0x03CB686C B.CS 0x3CB7C18
	0x03CB6870 ADD X8, X8, X27
	0x03CB6874 SUB X9, X8, 0x354
	0x03CB6878 SUB X8, X8, 0x318
	0x03CB687C LDR V3, [X9]
	0x03CB6880 LDR V7, [X8]
	0x03CB6884 B 0x3CB6AAC
	0x03CB6888 LDR X9, [X19 + 0x15B8]
	0x03CB688C CBZ X9, 0x3CB7C14
	0x03CB6890 LDRSW X10, [X19 + 0x1A38]
	0x03CB6894 LDR W11, [X9 + 0x18]
	0x03CB6898 CMP W10, W11
	0x03CB689C B.CS 0x3CB7C18
	0x03CB68A0 MOVZ W11, 0x38
	0x03CB68A4 MADD X9, X10, X11, X9
	0x03CB68A8 LDR W9, [X9 + 0x54]
	0x03CB68AC NOP
	0x03CB68B0 MADD X10, X24, X29, X8
	0x03CB68B4 LDR W22, [X10 + 0x70]
	0x03CB68B8 NOP
	0x03CB68BC MADD X10, X24, X29, X8
	0x03CB68C0 UBFM W9, W9, 0x1E, 0x1D
	0x03CB68C4 STR W9, [X10 + 0x178]
	0x03CB68C8 LDR X10, [X31 + 0x1D0]
	0x03CB68CC LDR W9, [X10 + 0xD8]
	0x03CB68D0 CMP W28, W9
	0x03CB68D4 B.GT 0x3CB68E4
	0x03CB68D8 LDR W9, [X10 + 0xE0]
	0x03CB68DC CMP W23, W9
	0x03CB68E0 B.LE 0x3CB6CCC
	0x03CB68E4 MOVZ W20, 0x1
	0x03CB68E8 LDR W10, [X31 + 0x1C4]
	0x03CB68EC MOVZ W9, 0x200B
	0x03CB68F0 CMP W10, W9
	0x03CB68F4 LDR W10, [X31 + 0x17C]
	0x03CB68F8 CSET W9, EQ
	0x03CB68FC ORR W21, W9, W10, 0x0
	0x03CB6900 TBNZ X21, 0x0, 0x3CB69A0
	0x03CB6904 MADD X9, X24, X29, X8
	0x03CB6908 LDR V0, [X9 + 0x16C]
	0x03CB690C LDR W9, [X31 + 0xC8]
	0x03CB6910 LDR V1, [X31 + 0x160]
	0x03CB6914 LDR X0, [X31 + 0x188]
	0x03CB6918 FCMP S15, S0
	0x03CB691C FCSEL S15, S15, S0, GT
	0x03CB6920 LDR V0, [X31 + 0xB4]
	0x03CB6924 CMP W22, W9
	0x03CB6928 FCSEL S8, S1, S0, EQ
	0x03CB692C CBZ X0, 0x3CB7C14
	0x03CB6930 LDR V1, [X31 + 0x174]
	0x03CB6934 NOP
	0x03CB6938 MADD X8, X24, X29, X8
	0x03CB693C LDR V9, [X8 + 0x150]
	0x03CB6940 FABS S0, S11
	0x03CB6944 FCMP S1, S0
	0x03CB6948 ADD X8, X31, 0x1000
	0x03CB694C FCSEL S1, S1, S0, GT
	0x03CB6950 ADD X8, X8, 0x290
	0x03CB6954 MOV X1, X31
	0x03CB6958 STR S1, [X31 + 0x174]
	0x03CB695C BL 0x3C9EB14
	0x03CB6960 ADD X0, X31, 0x1000
	0x03CB6964 ADD X1, X31, 0x1000
	0x03CB6968 ADD X0, X0, 0x200
	0x03CB696C ADD X1, X1, 0x290
	0x03CB6970 MOVZ W2, 0x60
	0x03CB6974 BL 0x3EB1AC0
	0x03CB6978 ADD X0, X31, 0x1000
	0x03CB697C ADD X0, X0, 0x200
	0x03CB6980 MOV X1, X31
	0x03CB6984 BL 0x3C9C048
	0x03CB6988 FMUL S0, S15, S0
	0x03CB698C FADD S0, S9, S0
	0x03CB6990 FCMP S8, S0
	0x03CB6994 FCSEL S0, S8, S0, MI
	0x03CB6998 STR S0, [X31 + 0x160]
	0x03CB699C STR W22, [X31 + 0xC8]
	0x03CB69A0 LDR W9, [X31 + 0x1C4]
	0x03CB69A4 LDR X22, [X31 + 0x1D8]
	0x03CB69A8 CMP W20, 0x0
	0x03CB69AC CSET W8, NE
	0x03CB69B0 CMP W9, 0xD
	0x03CB69B4 B.EQ 0x3CB6A14
	0x03CB69B8 LDR W9, [X31 + 0x1C4]
	0x03CB69BC AND W9, W9, 0xFFFE
	0x03CB69C0 CMP W9, 0xA
	0x03CB69C4 B.EQ 0x3CB6A14
	0x03CB69C8 LDR X9, [X31 + 0x1A8]
	0x03CB69CC CMP W28, W9
	0x03CB69D0 B.GT 0x3CB6A14
	0x03CB69D4 LDR W9, [X31 + 0x184]
	0x03CB69D8 ORR W8, W9, W8, 0x0
	0x03CB69DC TBNZ X8, 0x0, 0x3CB6A14
	0x03CB69E0 LDR X8, [X31 + 0x1A8]
	0x03CB69E4 CMP W28, W8
	0x03CB69E8 B.NE 0x3CB6A28
	0x03CB69EC ADRP X8, 0x43F000
	0x03CB69F0 LDR X8, [X8 + 0x170]
	0x03CB69F4 LDR X0, [X8]
	0x03CB69F8 LDR W8, [X0 + 0xE0]
	0x03CB69FC CBNZ W8, 0x3CB6A04
	0x03CB6A00 BL 0x1C16DFC
	0x03CB6A04 LDR W0, [X31 + 0x1C4]
	0x03CB6A08 MOV X1, X31
	0x03CB6A0C BL 0x331BAF4
	0x03CB6A10 TBZ X0, 0x0, 0x3CB6A28
	0x03CB6A14 LDR W8, [X31 + 0x184]
	0x03CB6A18 TBNZ X8, 0x0, 0x3CB6A78
	0x03CB6A1C LDR X21, [X31 + 0x1B8]
	0x03CB6A20 STR W31, [X31 + 0x184]
	0x03CB6A24 B 0x3CB6B04
	0x03CB6A28 LDR X8, [X22]
	0x03CB6A2C CBZ X8, 0x3CB7C14
	0x03CB6A30 LDR W9, [X8 + 0x18]
	0x03CB6A34 CMP W28, W9
	0x03CB6A38 B.CS 0x3CB7C18
	0x03CB6A3C MADD X8, X24, X29, X8
	0x03CB6A40 LDR V0, [X8 + 0x16C]
	0x03CB6A44 LDR V1, [X8 + 0x124]
	0x03CB6A48 FCMP S15, 0x0
	0x03CB6A4C LDR W8, [X8 + 0x174]
	0x03CB6A50 FCSEL S15, S0, S15, EQ
	0x03CB6A54 STP S1, S0, [X31 + 0xDC]
	0x03CB6A58 LDR V1, [X31 + 0x174]
	0x03CB6A5C FMOV S0, W31
	0x03CB6A60 STR S0, [X31 + 0xD8]
	0x03CB6A64 LDR V0, [X31 + 0x160]
	0x03CB6A68 FCSEL S1, S11, S1, EQ
	0x03CB6A6C STR X8, [X31 + 0x108]
	0x03CB6A70 STR S1, [X31 + 0x174]
	0x03CB6A74 STR S0, [X31 + 0xD4]
	0x03CB6A78 LDR X8, [X31 + 0x1C8]
	0x03CB6A7C LDR W8, [X8]
	0x03CB6A80 SUBS W8, W8, 0x1
	0x03CB6A84 B.NE 0x3CB6C98
	0x03CB6A88 LDR X8, [X22]
	0x03CB6A8C CBZ X8, 0x3CB7C14
	0x03CB6A90 LDR W9, [X8 + 0x18]
	0x03CB6A94 LDR X21, [X31 + 0x1B8]
	0x03CB6A98 CMP W28, W9
	0x03CB6A9C B.CS 0x3CB7C18
	0x03CB6AA0 MADD X8, X24, X29, X8
	0x03CB6AA4 LDR V3, [X8 + 0x130]
	0x03CB6AA8 LDR V7, [X8 + 0x16C]
	0x03CB6AAC LDR V0, [X31 + 0x174]
	0x03CB6AB0 LDR X8, [X31 + 0x108]
	0x03CB6AB4 LDR V1, [X31 + 0xD4]
	0x03CB6AB8 LDR V4, [X31 + 0x160]
	0x03CB6ABC STR S0, [X31 + 0x8]
	0x03CB6AC0 LDP S2, S0, [X31 + 0xD8]
	0x03CB6AC4 LDR V6, [X31 + 0xE0]
	0x03CB6AC8 LDR X2, [X31 + 0x1D0]
	0x03CB6ACC MOV W1, W8
	0x03CB6AD0 STR S15, [X31]
	0x03CB6AD4 FMOV S5, W31
	0x03CB6AD8 FMOV S15, W31
	0x03CB6ADC MOV X0, X19
	0x03CB6AE0 MOV X3, X21
	0x03CB6AE4 MOV X4, X31
	0x03CB6AE8 BL 0x3CC0B2C
	0x03CB6AEC ADRP X8, 0xFFFFFFFFFCE34000
	0x03CB6AF0 LDR V0, [X8 + 0x374]
	0x03CB6AF4 STR W31, [X31 + 0x184]
	0x03CB6AF8 STR S0, [X31 + 0x160]
	0x03CB6AFC FMOV S0, W31
	0x03CB6B00 STR S0, [X31 + 0x174]
	0x03CB6B04 LDR X8, [X22]
	0x03CB6B08 CBZ X8, 0x3CB7C14
	0x03CB6B0C LDR W9, [X8 + 0x18]
	0x03CB6B10 CMP W28, W9
	0x03CB6B14 B.CS 0x3CB7C18
	0x03CB6B18 LDR X0, [X31 + 0x188]
	0x03CB6B1C CBZ X0, 0x3CB7C14
	0x03CB6B20 MADD X8, X24, X29, X8
	0x03CB6B24 LDR W20, [X8 + 0x19C]
	0x03CB6B28 ADD X8, X31, 0x1000
	0x03CB6B2C ADD X8, X8, 0x290
	0x03CB6B30 MOV X1, X31
	0x03CB6B34 BL 0x3C9EB14
	0x03CB6B38 ADD X0, X31, 0x1000
	0x03CB6B3C ADD X1, X31, 0x1000
	0x03CB6B40 ADD X0, X0, 0x200
	0x03CB6B44 ADD X1, X1, 0x290
	0x03CB6B48 MOVZ W2, 0x60
	0x03CB6B4C BL 0x3EB1AC0
	0x03CB6B50 ADD X0, X31, 0x1000
	0x03CB6B54 ADD X0, X0, 0x200
	0x03CB6B58 MOV X1, X31
	0x03CB6B5C BL 0x3C9C068
	0x03CB6B60 MOV V10.16B, V0.16B
	0x03CB6B64 TBNZ X20, 0x6, 0x3CB6BB0
	0x03CB6B68 LDR W8, [X31 + 0x180]
	0x03CB6B6C TBZ X8, 0x0, 0x3CB6C8C
	0x03CB6B70 LDR X8, [X22]
	0x03CB6B74 MOVZ W20, 0x60
	0x03CB6B78 CBZ X8, 0x3CB7C14
	0x03CB6B7C LDR W10, [X31 + 0x1B4]
	0x03CB6B80 LDR W9, [X8 + 0x18]
	0x03CB6B84 SUB W10, W10, 0x2
	0x03CB6B88 CMP W10, W9
	0x03CB6B8C B.CS 0x3CB7C18
	0x03CB6B90 ADD X8, X8, X27
	0x03CB6B94 SUB X9, X8, 0x334
	0x03CB6B98 SUB X8, X8, 0x354
	0x03CB6B9C LDR V6, [X31 + 0xF8]
	0x03CB6BA0 LDR V0, [X9]
	0x03CB6BA4 LDR V3, [X8]
	0x03CB6BA8 FMUL S1, S6, S10
	0x03CB6BAC B 0x3CB7270
	0x03CB6BB0 LDR X8, [X22]
	0x03CB6BB4 CBZ X8, 0x3CB7C14
	0x03CB6BB8 LDR X9, [X19 + 0x15B8]
	0x03CB6BBC CBZ X9, 0x3CB7C14
	0x03CB6BC0 LDRSW X10, [X19 + 0x1A38]
	0x03CB6BC4 LDR W11, [X9 + 0x18]
	0x03CB6BC8 CMP W10, W11
	0x03CB6BCC B.CS 0x3CB7C18
	0x03CB6BD0 LDR W11, [X8 + 0x18]
	0x03CB6BD4 CMP W28, W11
	0x03CB6BD8 B.CS 0x3CB7C18
	0x03CB6BDC MOVZ W11, 0x38
	0x03CB6BE0 MADD X9, X10, X11, X9
	0x03CB6BE4 LDR W9, [X9 + 0x54]
	0x03CB6BE8 NOP
	0x03CB6BEC MADD X10, X24, X29, X8
	0x03CB6BF0 UBFM W9, W9, 0x1E, 0x1D
	0x03CB6BF4 STR W9, [X10 + 0x180]
	0x03CB6BF8 LDR X10, [X31 + 0x1D0]
	0x03CB6BFC LDR W9, [X10 + 0xD8]
	0x03CB6C00 CMP W28, W9
	0x03CB6C04 B.GT 0x3CB6C14
	0x03CB6C08 LDR W9, [X10 + 0xE0]
	0x03CB6C0C CMP W23, W9
	0x03CB6C10 B.LE 0x3CB6CEC
	0x03CB6C14 MOVZ W20, 0x1
	0x03CB6C18 LDR W9, [X31 + 0x1C4]
	0x03CB6C1C CMP W9, 0xD
	0x03CB6C20 B.EQ 0x3CB6C84
	0x03CB6C24 LDR W9, [X31 + 0x1C4]
	0x03CB6C28 AND W9, W9, 0xFFFE
	0x03CB6C2C CMP W9, 0xA
	0x03CB6C30 B.EQ 0x3CB6C84
	0x03CB6C34 LDR X9, [X31 + 0x1A8]
	0x03CB6C38 CMP W28, W9
	0x03CB6C3C B.GT 0x3CB6C84
	0x03CB6C40 LDR W9, [X31 + 0x180]
	0x03CB6C44 ORN W9, W31, W9, 0x0
	0x03CB6C48 BIC W9, W9, W20, 0x0
	0x03CB6C4C TBZ X9, 0x0, 0x3CB6C84
	0x03CB6C50 LDR X9, [X31 + 0x1A8]
	0x03CB6C54 CMP W28, W9
	0x03CB6C58 B.NE 0x3CB6E24
	0x03CB6C5C ADRP X8, 0x43F000
	0x03CB6C60 LDR X8, [X8 + 0x170]
	0x03CB6C64 LDR X0, [X8]
	0x03CB6C68 LDR W8, [X0 + 0xE0]
	0x03CB6C6C CBNZ W8, 0x3CB6C74
	0x03CB6C70 BL 0x1C16DFC
	0x03CB6C74 LDR W0, [X31 + 0x1C4]
	0x03CB6C78 MOV X1, X31
	0x03CB6C7C BL 0x331BAF4
	0x03CB6C80 TBZ X0, 0x0, 0x3CB6E1C
	0x03CB6C84 LDR W8, [X31 + 0x180]
	0x03CB6C88 TBNZ X8, 0x0, 0x3CB6E64
	0x03CB6C8C STR W31, [X31 + 0x180]
	0x03CB6C90 MOVZ W20, 0x60
	0x03CB6C94 B 0x3CB72AC
	0x03CB6C98 LDR X9, [X31 + 0x150]
	0x03CB6C9C CMP W28, W9
	0x03CB6CA0 B.EQ 0x3CB6DF0
	0x03CB6CA4 LDR X9, [X31 + 0x1A8]
	0x03CB6CA8 CMP W28, W9
	0x03CB6CAC B.GE 0x3CB6DF0
	0x03CB6CB0 LDR X21, [X31 + 0x1B8]
	0x03CB6CB4 CBZ W20, 0x3CB71C8
	0x03CB6CB8 LDR X8, [X22]
	0x03CB6CBC CBZ X8, 0x3CB7C14
	0x03CB6CC0 LDR W10, [X31 + 0x1B4]
	0x03CB6CC4 LDR W9, [X8 + 0x18]
	0x03CB6CC8 B 0x3CB6864
	0x03CB6CCC LDR W9, [X10 + 0x74]
	0x03CB6CD0 CMP W9, 0x5
	0x03CB6CD4 B.NE 0x3CB6E14
	0x03CB6CD8 LDR W9, [X10 + 0xF0]
	0x03CB6CDC ADD W10, W22, 0x1
	0x03CB6CE0 CMP W10, W9
	0x03CB6CE4 CSET W20, NE
	0x03CB6CE8 B 0x3CB68E8
	0x03CB6CEC LDR W9, [X10 + 0x74]
	0x03CB6CF0 CMP W9, 0x5
	0x03CB6CF4 B.NE 0x3CB6FE0
	0x03CB6CF8 MADD X9, X24, X29, X8
	0x03CB6CFC LDR W9, [X9 + 0x70]
	0x03CB6D00 LDR W10, [X10 + 0xF0]
	0x03CB6D04 ADD W9, W9, 0x1
	0x03CB6D08 CMP W9, W10
	0x03CB6D0C CSET W20, NE
	0x03CB6D10 B 0x3CB6C18
	0x03CB6D14 LDR W8, [X31 + 0x16C]
	0x03CB6D18 TBZ X8, 0x0, 0x3CB6FE8
	0x03CB6D1C LDR W8, [X31 + 0x1B4]
	0x03CB6D20 CMP W8, 0x1
	0x03CB6D24 B.EQ 0x3CB7048
	0x03CB6D28 LDR W8, [X25 + 0x18]
	0x03CB6D2C SUB W9, W8, 0x1
	0x03CB6D30 CMP W28, W9
	0x03CB6D34 B.GE 0x3CB7048
	0x03CB6D38 LDR X9, [X31 + 0x1C8]
	0x03CB6D3C LDR W9, [X9]
	0x03CB6D40 CMP W28, W9
	0x03CB6D44 B.GE 0x3CB7048
	0x03CB6D48 LDR W10, [X31 + 0x1C4]
	0x03CB6D4C MOVZ W9, 0x2019
	0x03CB6D50 CMP W10, W9
	0x03CB6D54 B.EQ 0x3CB6D64
	0x03CB6D58 LDR W9, [X31 + 0x1C4]
	0x03CB6D5C CMP W9, 0x27
	0x03CB6D60 B.NE 0x3CB7048
	0x03CB6D64 LDR W9, [X31 + 0x1B4]
	0x03CB6D68 SUB W9, W9, 0x2
	0x03CB6D6C CMP W9, W8
	0x03CB6D70 B.CS 0x3CB7C18
	0x03CB6D74 ADRP X8, 0x43F000
	0x03CB6D78 LDR X8, [X8 + 0x170]
	0x03CB6D7C LDR X0, [X8]
	0x03CB6D80 ADD X8, X25, X27
	0x03CB6D84 SUB X8, X8, 0x464
	0x03CB6D88 LDRH W20, [X8]
	0x03CB6D8C LDR W9, [X0 + 0xE0]
	0x03CB6D90 CBNZ W9, 0x3CB6D98
	0x03CB6D94 BL 0x1C16DFC
	0x03CB6D98 MOV W0, W20
	0x03CB6D9C MOV X1, X31
	0x03CB6DA0 BL 0x331ABF0
	0x03CB6DA4 TBZ X0, 0x0, 0x3CB7048
	0x03CB6DA8 LDR W8, [X25 + 0x18]
	0x03CB6DAC LDR W9, [X31 + 0x1B4]
	0x03CB6DB0 CMP W9, W8
	0x03CB6DB4 B.CS 0x3CB7C18
	0x03CB6DB8 ADRP X8, 0x43F000
	0x03CB6DBC LDR X8, [X8 + 0x170]
	0x03CB6DC0 LDR X0, [X8]
	0x03CB6DC4 ADD X8, X25, X27
	0x03CB6DC8 SUB X8, X8, 0x154
	0x03CB6DCC LDRH W20, [X8]
	0x03CB6DD0 LDR W9, [X0 + 0xE0]
	0x03CB6DD4 CBNZ W9, 0x3CB6DDC
	0x03CB6DD8 BL 0x1C16DFC
	0x03CB6DDC MOV W0, W20
	0x03CB6DE0 MOV X1, X31
	0x03CB6DE4 BL 0x331ABF0
	0x03CB6DE8 TBNZ X0, 0x0, 0x3CB6830
	0x03CB6DEC B 0x3CB7048
	0x03CB6DF0 LDR X8, [X22]
	0x03CB6DF4 CBZ X8, 0x3CB7C14
	0x03CB6DF8 LDR W9, [X8 + 0x18]
	0x03CB6DFC TBZ X21, 0x0, 0x3CB7168
	0x03CB6E00 LDR X10, [X31 + 0x1A8]
	0x03CB6E04 CMP W10, W9
	0x03CB6E08 MOV X9, X10
	0x03CB6E0C B.CC 0x3CB7174
	0x03CB6E10 B 0x3CB7C18
	0x03CB6E14 MOV W20, W31
	0x03CB6E18 B 0x3CB68E8
	0x03CB6E1C LDR X8, [X22]
	0x03CB6E20 CBZ X8, 0x3CB7C14
	0x03CB6E24 LDR W9, [X8 + 0x18]
	0x03CB6E28 CMP W28, W9
	0x03CB6E2C B.CS 0x3CB7C18
	0x03CB6E30 MADD X8, X24, X29, X8
	0x03CB6E34 LDR V0, [X8 + 0x16C]
	0x03CB6E38 LDR V2, [X8 + 0x124]
	0x03CB6E3C LDR V3, [X8 + 0x68]
	0x03CB6E40 LDR V1, [X8 + 0x150]
	0x03CB6E44 LDR W8, [X8 + 0x17C]
	0x03CB6E48 STP S2, S0, [X31 + 0xF4]
	0x03CB6E4C FMUL S0, S10, S0
	0x03CB6E50 STP S1, S3, [X31 + 0xAC]
	0x03CB6E54 FADD S3, S0, S1
	0x03CB6E58 FMOV S0, W31
	0x03CB6E5C STR X8, [X31 + 0x110]
	0x03CB6E60 STP S0, S3, [X31 + 0xE4]
	0x03CB6E64 LDR X8, [X31 + 0x1C8]
	0x03CB6E68 LDR W8, [X8]
	0x03CB6E6C CMP W8, 0x1
	0x03CB6E70 B.NE 0x3CB6E94
	0x03CB6E74 LDR X8, [X22]
	0x03CB6E78 CBZ X8, 0x3CB7C14
	0x03CB6E7C LDR W9, [X8 + 0x18]
	0x03CB6E80 MOVZ W20, 0x60
	0x03CB6E84 CMP W28, W9
	0x03CB6E88 B.CS 0x3CB7C18
	0x03CB6E8C MADD X8, X24, X29, X8
	0x03CB6E90 B 0x3CB7260
	0x03CB6E94 LDR X9, [X31 + 0x150]
	0x03CB6E98 CMP W28, W9
	0x03CB6E9C B.NE 0x3CB6EE4
	0x03CB6EA0 LDR X8, [X22]
	0x03CB6EA4 MOVZ W20, 0x60
	0x03CB6EA8 CBZ X8, 0x3CB7C14
	0x03CB6EAC LDR W10, [X31 + 0x1C4]
	0x03CB6EB0 LDR W11, [X31 + 0x17C]
	0x03CB6EB4 MOVZ W9, 0x200B
	0x03CB6EB8 CMP W10, W9
	0x03CB6EBC LDR W9, [X8 + 0x18]
	0x03CB6EC0 CSET W10, NE
	0x03CB6EC4 EOR W11, W11, 0x1
	0x03CB6EC8 AND W10, W10, W11, 0x0
	0x03CB6ECC TBNZ X10, 0x0, 0x3CB71AC
	0x03CB6ED0 LDR X10, [X31 + 0x1A8]
	0x03CB6ED4 CMP W10, W9
	0x03CB6ED8 MOV X9, X10
	0x03CB6EDC B.CC 0x3CB725C
	0x03CB6EE0 B 0x3CB7C18
	0x03CB6EE4 CMP W28, W8
	0x03CB6EE8 B.GE 0x3CB6F58
	0x03CB6EEC LDR X8, [X22]
	0x03CB6EF0 CBZ X8, 0x3CB7C14
	0x03CB6EF4 LDR W9, [X8 + 0x18]
	0x03CB6EF8 LDR W10, [X31 + 0x1B4]
	0x03CB6EFC CMP W10, W9
	0x03CB6F00 B.CS 0x3CB7C18
	0x03CB6F04 ADD X9, X8, X27
	0x03CB6F08 SUB X10, X9, 0x10C
	0x03CB6F0C LDR V0, [X10]
	0x03CB6F10 LDR V1, [X31 + 0xB0]
	0x03CB6F14 FCMP S0, S1
	0x03CB6F18 B.NE 0x3CB7230
	0x03CB6F1C ADRP X8, 0x4AB000
	0x03CB6F20 LDR X8, [X8 + 0xB48]
	0x03CB6F24 LDUR V8, [X9 - 0x24]
	0x03CB6F28 LDR X0, [X8]
	0x03CB6F2C LDR W8, [X0 + 0xE0]
	0x03CB6F30 CBNZ W8, 0x3CB6F38
	0x03CB6F34 BL 0x1C16DFC
	0x03CB6F38 LDR V0, [X31 + 0x19]
	0x03CB6F3C LDR V1, [X31 + 0xAC]
	0x03CB6F40 MOV X0, X31
	0x03CB6F44 FADD S0, S0, S8
	0x03CB6F48 BL 0x3CC5918
	0x03CB6F4C TBZ X0, 0x0, 0x3CB7228
	0x03CB6F50 LDR X8, [X31 + 0x1C8]
	0x03CB6F54 LDR W8, [X8]
	0x03CB6F58 CMP W28, W8
	0x03CB6F5C B.GE 0x3CB6FA4
	0x03CB6F60 LDR X0, [X31 + 0x188]
	0x03CB6F64 MOV X1, X31
	0x03CB6F68 BL 0x3C385F8
	0x03CB6F6C LDR W8, [X25 + 0x18]
	0x03CB6F70 LDR W9, [X31 + 0x1B4]
	0x03CB6F74 CMP W9, W8
	0x03CB6F78 B.CS 0x3CB7C18
	0x03CB6F7C ADD X8, X25, X27
	0x03CB6F80 SUB X8, X8, 0x134
	0x03CB6F84 MOV W22, W0
	0x03CB6F88 LDR X0, [X8]
	0x03CB6F8C CBZ X0, 0x3CB7C14
	0x03CB6F90 MOV X1, X31
	0x03CB6F94 BL 0x3C385F8
	0x03CB6F98 CMP W22, W0
	0x03CB6F9C LDR X22, [X31 + 0x1D8]
	0x03CB6FA0 B.NE 0x3CB6E74
	0x03CB6FA4 CBZ W20, 0x3CB721C
	0x03CB6FA8 LDR X8, [X22]
	0x03CB6FAC CBZ X8, 0x3CB7C14
	0x03CB6FB0 LDR W10, [X31 + 0x1B4]
	0x03CB6FB4 LDR W9, [X8 + 0x18]
	0x03CB6FB8 MOVZ W20, 0x60
	0x03CB6FBC SUB W10, W10, 0x2
	0x03CB6FC0 CMP W10, W9
	0x03CB6FC4 B.CS 0x3CB7C18
	0x03CB6FC8 ADD X8, X8, X27
	0x03CB6FCC SUB X9, X8, 0x334
	0x03CB6FD0 SUB X8, X8, 0x354
	0x03CB6FD4 LDR V0, [X9]
	0x03CB6FD8 LDR V3, [X8]
	0x03CB6FDC B 0x3CB7268
	0x03CB6FE0 MOV W20, W31
	0x03CB6FE4 B 0x3CB6C18
	0x03CB6FE8 LDR W8, [X31 + 0x1B4]
	0x03CB6FEC CMP W8, 0x1
	0x03CB6FF0 B.NE 0x3CB7214
	0x03CB6FF4 ADRP X8, 0x43F000
	0x03CB6FF8 LDR X8, [X8 + 0x170]
	0x03CB6FFC LDR X0, [X8]
	0x03CB7000 LDR W8, [X0 + 0xE0]
	0x03CB7004 CBNZ W8, 0x3CB700C
	0x03CB7008 BL 0x1C16DFC
	0x03CB700C LDR W20, [X31 + 0x1C4]
	0x03CB7010 MOV X1, X31
	0x03CB7014 MOV W0, W20
	0x03CB7018 BL 0x331AB24
	0x03CB701C MOVZ W8, 0x200B
	0x03CB7020 CMP W20, W8
	0x03CB7024 B.EQ 0x3CB7048
	0x03CB7028 LDR W9, [X31 + 0x17C]
	0x03CB702C EOR W8, W0, 0x1
	0x03CB7030 ORR W8, W9, W8, 0x0
	0x03CB7034 TBNZ X8, 0x0, 0x3CB7048
	0x03CB7038 LDR X8, [X31 + 0x1C8]
	0x03CB703C LDR W8, [X8]
	0x03CB7040 CMP W8, 0x1
	0x03CB7044 B.NE 0x3CB7214
	0x03CB7048 LDR X8, [X31 + 0x1C8]
	0x03CB704C LDR W8, [X8]
	0x03CB7050 SUB W8, W8, 0x1
	0x03CB7054 CMP W28, W8
	0x03CB7058 B.NE 0x3CB7084
	0x03CB705C ADRP X8, 0x43E000
	0x03CB7060 LDR X8, [X8 + 0x170]
	0x03CB7064 LDR X0, [X8]
	0x03CB7068 LDR W8, [X0 + 0xE0]
	0x03CB706C CBNZ W8, 0x3CB7074
	0x03CB7070 BL 0x1C16DFC
	0x03CB7074 LDR W0, [X31 + 0x1C4]
	0x03CB7078 MOV X1, X31
	0x03CB707C BL 0x331ABF0
	0x03CB7080 TBNZ X0, 0x0, 0x3CB7090
	0x03CB7084 LDR W8, [X31 + 0x178]
	0x03CB7088 SUB W8, W8, 0x1
	0x03CB708C STR W8, [X31 + 0x170]
	0x03CB7090 LDR X8, [X31 + 0x100]
	0x03CB7094 LDR X8, [X8]
	0x03CB7098 CBZ X8, 0x3CB7C14
	0x03CB709C LDRSW X20, [X21 + 0x1C]
	0x03CB70A0 LDR W21, [X8 + 0x18]
	0x03CB70A4 ADD W9, W20, 0x1
	0x03CB70A8 CMP W9, W21
	0x03CB70AC B.LE 0x3CB70EC
	0x03CB70B0 ADRP X8, 0x4AA000
	0x03CB70B4 LDR X8, [X8 + 0xB68]
	0x03CB70B8 LDR X0, [X8]
	0x03CB70BC LDR W8, [X0 + 0xE0]
	0x03CB70C0 CBNZ W8, 0x3CB70C8
	0x03CB70C4 BL 0x1C16DFC
	0x03CB70C8 ADRP X8, 0x4AA000
	0x03CB70CC LDR X8, [X8 + 0xB60]
	0x03CB70D0 ADD W1, W21, 0x1
	0x03CB70D4 LDR X21, [X31 + 0x100]
	0x03CB70D8 LDR X2, [X8]
	0x03CB70DC MOV X0, X21
	0x03CB70E0 BL 0x229C1E0
	0x03CB70E4 LDR X8, [X21]
	0x03CB70E8 CBZ X8, 0x3CB7C14
	0x03CB70EC LDR W9, [X8 + 0x18]
	0x03CB70F0 CMP W20, W9
	0x03CB70F4 B.CS 0x3CB7C18
	0x03CB70F8 LDR W10, [X31 + 0x170]
	0x03CB70FC MOVZ W9, 0xC
	0x03CB7100 LDR X21, [X31 + 0x1B8]
	0x03CB7104 NOP
	0x03CB7108 MADD X8, X20, X9, X8
	0x03CB710C SUB W9, W10, W26
	0x03CB7110 ADD W9, W9, 0x1
	0x03CB7114 STP W26, W10, [X8 + 0x20]
	0x03CB7118 STR W9, [X8 + 0x28]
	0x03CB711C LDR W9, [X21 + 0x1C]
	0x03CB7120 LDR X8, [X21 + 0x48]
	0x03CB7124 ADD W9, W9, 0x1
	0x03CB7128 STR W9, [X21 + 0x1C]
	0x03CB712C CBZ X8, 0x3CB7C14
	0x03CB7130 LDR W9, [X8 + 0x18]
	0x03CB7134 LDR X10, [X31 + 0x1A0]
	0x03CB7138 CMP W23, W9
	0x03CB713C MOVZ W9, 0x60
	0x03CB7140 B.CS 0x3CB7C18
	0x03CB7144 MADD X8, X10, X9, X8
	0x03CB7148 LDR W9, [X8 + 0x34]
	0x03CB714C LDR W10, [X31 + 0x140]
	0x03CB7150 STR W31, [X31 + 0x16C]
	0x03CB7154 ADD W9, W9, 0x1
	0x03CB7158 ADD W10, W10, 0x1
	0x03CB715C STR W10, [X31 + 0x140]
	0x03CB7160 STR W9, [X8 + 0x34]
	0x03CB7164 B 0x3CB6838
	0x03CB7168 CMP W28, W9
	0x03CB716C MOV X9, X24
	0x03CB7170 B.CS 0x3CB7C18
	0x03CB7174 LDR V0, [X31 + 0x174]
	0x03CB7178 NOP
	0x03CB717C MADD X8, X9, X29, X8
	0x03CB7180 LDR V3, [X8 + 0x130]
	0x03CB7184 LDR V7, [X8 + 0x16C]
	0x03CB7188 LDR X8, [X31 + 0x108]
	0x03CB718C STR S0, [X31 + 0x8]
	0x03CB7190 LDP S2, S0, [X31 + 0xD8]
	0x03CB7194 LDR V1, [X31 + 0xD4]
	0x03CB7198 LDR V4, [X31 + 0x160]
	0x03CB719C LDR V6, [X31 + 0xE0]
	0x03CB71A0 LDR X2, [X31 + 0x1D0]
	0x03CB71A4 LDR X21, [X31 + 0x1B8]
	0x03CB71A8 B 0x3CB6ACC
	0x03CB71AC CMP W28, W9
	0x03CB71B0 MOV X9, X24
	0x03CB71B4 B.CC 0x3CB725C
	0x03CB71B8 B 0x3CB7C18
	0x03CB71BC CMP W28, W22
	0x03CB71C0 B.CC 0x3CB6280
	0x03CB71C4 B 0x3CB7C18
	0x03CB71C8 CMP W28, W8
	0x03CB71CC B.GE 0x3CB7208
	0x03CB71D0 LDR X8, [X22]
	0x03CB71D4 CBZ X8, 0x3CB7C14
	0x03CB71D8 LDR W9, [X8 + 0x18]
	0x03CB71DC LDR W10, [X31 + 0x1B4]
	0x03CB71E0 CMP W10, W9
	0x03CB71E4 B.CS 0x3CB7C18
	0x03CB71E8 LDR W1, [X8, X27, LSL]
	0x03CB71EC LDR X8, [X31 + 0x108]
	0x03CB71F0 MOV X2, X31
	0x03CB71F4 MOV W22, W8
	0x03CB71F8 MOV X0, X22
	0x03CB71FC BL 0x3C9E9F8
	0x03CB7200 TBZ X0, 0x0, 0x3CB77D8
	0x03CB7204 LDR X22, [X31 + 0x1D8]
	0x03CB7208 MOVZ W8, 0x1
	0x03CB720C STR W8, [X31 + 0x184]
	0x03CB7210 B 0x3CB6B04
	0x03CB7214 STR W31, [X31 + 0x16C]
	0x03CB7218 B 0x3CB6838
	0x03CB721C MOVZ W8, 0x1
	0x03CB7220 STR W8, [X31 + 0x180]
	0x03CB7224 B 0x3CB6C90
	0x03CB7228 LDR X8, [X22]
	0x03CB722C CBZ X8, 0x3CB7C14
	0x03CB7230 LDR X10, [X31 + 0x1A8]
	0x03CB7234 LDR W9, [X8 + 0x18]
	0x03CB7238 CMP W28, W10
	0x03CB723C B.LE 0x3CB724C
	0x03CB7240 CMP W10, W9
	0x03CB7244 MOV X9, X10
	0x03CB7248 B 0x3CB7254
	0x03CB724C CMP W28, W9
	0x03CB7250 MOV X9, X24
	0x03CB7254 MOVZ W20, 0x60
	0x03CB7258 B.CS 0x3CB7C18
	0x03CB725C MADD X8, X9, X29, X8
	0x03CB7260 LDR V0, [X8 + 0x150]
	0x03CB7264 LDR V3, [X8 + 0x130]
	0x03CB7268 LDR V6, [X31 + 0xF8]
	0x03CB726C FMUL S1, S10, S6
	0x03CB7270 LDR X8, [X31 + 0x110]
	0x03CB7274 FADD S4, S1, S0
	0x03CB7278 LDR V0, [X31 + 0xF4]
	0x03CB727C LDP S2, S1, [X31 + 0xE4]
	0x03CB7280 LDR X2, [X31 + 0x1D0]
	0x03CB7284 MOV W1, W8
	0x03CB7288 FMOV S5, W31
	0x03CB728C MOV X0, X19
	0x03CB7290 MOV V7.16B, V6.16B
	0x03CB7294 MOV X3, X21
	0x03CB7298 MOV X4, X31
	0x03CB729C STR S11, [X31 + 0x8]
	0x03CB72A0 STR S6, [X31]
	0x03CB72A4 BL 0x3CC0B2C
	0x03CB72A8 STR W31, [X31 + 0x180]
	0x03CB72AC LDR X8, [X22]
	0x03CB72B0 CBZ X8, 0x3CB7C14
	0x03CB72B4 LDR X9, [X8 + 0x18]
	0x03CB72B8 LDR W12, [X31 + 0x164]
	0x03CB72BC CMP W28, W9
	0x03CB72C0 B.CS 0x3CB7C18
	0x03CB72C4 MADD X10, X24, X29, X8
	0x03CB72C8 LDRB W10, [X10 + 0x19D]
	0x03CB72CC STR W26, [X31 + 0x168]
	0x03CB72D0 TBNZ X10, 0x1, 0x3CB7310
	0x03CB72D4 TBZ X12, 0x0, 0x3CB7308
	0x03CB72D8 LDR V2, [X31 + 0x128]
	0x03CB72DC LDR W1, [X31 + 0x1260]
	0x03CB72E0 LDR V0, [X31 + 0x12C]
	0x03CB72E4 LDR V1, [X31 + 0x144]
	0x03CB72E8 LDR V3, [X31 + 0x130]
	0x03CB72EC LDR V4, [X31 + 0x138]
	0x03CB72F0 LDR X2, [X31 + 0x1D0]
	0x03CB72F4 MOV X0, X19
	0x03CB72F8 MOV V5.16B, V2.16B
	0x03CB72FC MOV X3, X21
	0x03CB7300 MOV X4, X31
	0x03CB7304 BL 0x3CC1758
	0x03CB7308 MOV W22, W31
	0x03CB730C B 0x3CB73A0
	0x03CB7310 LDR X11, [X31 + 0x1D0]
	0x03CB7314 LDR W10, [X11 + 0xD8]
	0x03CB7318 CMP W28, W10
	0x03CB731C B.GT 0x3CB732C
	0x03CB7320 LDR W10, [X11 + 0xE0]
	0x03CB7324 CMP W23, W10
	0x03CB7328 B.LE 0x3CB73A8
	0x03CB732C MOVZ W20, 0x1
	0x03CB7330 TBZ X12, 0x0, 0x3CB733C
	0x03CB7334 LDR V10, [X31 + 0x12C]
	0x03CB7338 B 0x3CB7444
	0x03CB733C LDR W8, [X31 + 0x1C4]
	0x03CB7340 MOV W22, W31
	0x03CB7344 CMP W8, 0xD
	0x03CB7348 B.EQ 0x3CB739C
	0x03CB734C AND W8, W8, 0xFFFE
	0x03CB7350 CMP W8, 0xA
	0x03CB7354 B.EQ 0x3CB739C
	0x03CB7358 LDR X8, [X31 + 0x1A8]
	0x03CB735C CMP W28, W8
	0x03CB7360 B.GT 0x3CB739C
	0x03CB7364 CBNZ W20, 0x3CB739C
	0x03CB7368 CMP W28, W8
	0x03CB736C B.NE 0x3CB73D0
	0x03CB7370 ADRP X8, 0x43E000
	0x03CB7374 LDR X8, [X8 + 0x170]
	0x03CB7378 LDR X0, [X8]
	0x03CB737C LDR W8, [X0 + 0xE0]
	0x03CB7380 CBNZ W8, 0x3CB7388
	0x03CB7384 BL 0x1C16DFC
	0x03CB7388 LDR W0, [X31 + 0x1C4]
	0x03CB738C MOV X1, X31
	0x03CB7390 BL 0x331BAF4
	0x03CB7394 TBZ X0, 0x0, 0x3CB73D0
	0x03CB7398 MOV W22, W31
	0x03CB739C MOVZ W20, 0x60
	0x03CB73A0 LDR W24, [X31 + 0x1B4]
	0x03CB73A4 B 0x3CB7724
	0x03CB73A8 LDR W10, [X11 + 0x74]
	0x03CB73AC CMP W10, 0x5
	0x03CB73B0 B.NE 0x3CB7750
	0x03CB73B4 MADD X10, X24, X29, X8
	0x03CB73B8 LDR W10, [X10 + 0x70]
	0x03CB73BC LDR W11, [X11 + 0xF0]
	0x03CB73C0 ADD W10, W10, 0x1
	0x03CB73C4 CMP W10, W11
	0x03CB73C8 CSET W20, NE
	0x03CB73CC B 0x3CB7330
	0x03CB73D0 ADRP X22, 0x4AA000
	0x03CB73D4 LDR X22, [X22 + 0xB48]
	0x03CB73D8 LDR X0, [X22]
	0x03CB73DC LDR W8, [X0 + 0xE0]
	0x03CB73E0 CBNZ W8, 0x3CB73EC
	0x03CB73E4 BL 0x1C16DFC
	0x03CB73E8 LDR X0, [X22]
	0x03CB73EC LDR X8, [X31 + 0x1D8]
	0x03CB73F0 LDR X8, [X8]
	0x03CB73F4 CBZ X8, 0x3CB7C14
	0x03CB73F8 LDR X9, [X8 + 0x18]
	0x03CB73FC CMP W28, W9
	0x03CB7400 B.CS 0x3CB7C18
	0x03CB7404 LDR X10, [X0 + 0xB8]
	0x03CB7408 NOP
	0x03CB740C MADD X11, X24, X29, X8
	0x03CB7410 ADD X11, X11, 0x188
	0x03CB7414 LDR V0, [X11]
	0x03CB7418 LDP S10, S1, [X10]
	0x03CB741C LDR W11, [X11 + 0x10]
	0x03CB7420 STR S1, [X31 + 0x144]
	0x03CB7424 LDR V1, [X10 + 0x8]
	0x03CB7428 STR S1, [X31 + 0x130]
	0x03CB742C LDR V1, [X10 + 0xC]
	0x03CB7430 STR V0, [X31 + 0x126]
	0x03CB7434 FMOV S0, W31
	0x03CB7438 STR W11, [X31 + 0x1270]
	0x03CB743C STR S1, [X31 + 0x138]
	0x03CB7440 STR S0, [X31 + 0x128]
	0x03CB7444 CMP W28, W9
	0x03CB7448 B.CS 0x3CB7C18
	0x03CB744C MADD X8, X24, X29, X8
	0x03CB7450 LDR V1, [X8 + 0x130]
	0x03CB7454 LDR W9, [X31 + 0x1270]
	0x03CB7458 MOV V12.16B, V11.16B
	0x03CB745C LDR V13, [X8 + 0x124]
	0x03CB7460 LDR V14, [X8 + 0x148]
	0x03CB7464 LDR V8, [X8 + 0x14C]
	0x03CB7468 LDR V9, [X8 + 0x154]
	0x03CB746C LDR V11, [X8 + 0x164]
	0x03CB7470 ADD X8, X8, 0x168
	0x03CB7474 STR S1, [X31 + 0x1C4]
	0x03CB7478 LDP V1, V2, [X8 + 0x20]
	0x03CB747C LDP V3, V4, [X8]
	0x03CB7480 LDR V0, [X31 + 0x126]
	0x03CB7484 STR W9, [X31 + 0x210]
	0x03CB7488 LDR X9, [X31 + 0xB8]
	0x03CB748C STR V2, [X31 + 0x12C]
	0x03CB7490 STR V1, [X31 + 0x12B]
	0x03CB7494 STR V4, [X31 + 0x12A]
	0x03CB7498 STR V3, [X31 + 0x129]
	0x03CB749C STR V0, [X31 + 0x20]
	0x03CB74A0 LDR W8, [X9 + 0x10]
	0x03CB74A4 LDR V0, [X9]
	0x03CB74A8 LDR V1, [X9]
	0x03CB74AC LDR W9, [X9 + 0x10]
	0x03CB74B0 ADD X0, X31, 0x200
	0x03CB74B4 ADD X1, X31, 0x1E0
	0x03CB74B8 MOV X2, X31
	0x03CB74BC STR W8, [X31 + 0x5F0]
	0x03CB74C0 STR V0, [X31 + 0x5E]
	0x03CB74C4 STR V1, [X31 + 0x1E]
	0x03CB74C8 STR W9, [X31 + 0x1F0]
	0x03CB74CC BL 0x3CC57E4
	0x03CB74D0 ADRP X8, 0x4AA000
	0x03CB74D4 LDR X8, [X8 + 0xB38]
	0x03CB74D8 LDR X8, [X8]
	0x03CB74DC LDR W9, [X8 + 0xE0]
	0x03CB74E0 TBZ X0, 0x0, 0x3CB75FC
	0x03CB74E4 CBNZ W9, 0x3CB74F0
	0x03CB74E8 MOV X0, X8
	0x03CB74EC BL 0x1C16DFC
	0x03CB74F0 LDR X0, [X31 + 0xC0]
	0x03CB74F4 MOV X1, X31
	0x03CB74F8 BL 0x3CC54F8
	0x03CB74FC LDR W8, [X31 + 0x17C]
	0x03CB7500 LDR V1, [X31 + 0x130]
	0x03CB7504 LDR V2, [X31 + 0x144]
	0x03CB7508 LDR V4, [X31 + 0x138]
	0x03CB750C ANDS W31, W8, 0x1
	0x03CB7510 FSUB S0, S1, S0
	0x03CB7514 FCSEL S1, S14, S13, NE
	0x03CB7518 FCMP S2, S9
	0x03CB751C FADD S0, S1, S0
	0x03CB7520 FCSEL S1, S2, S9, MI
	0x03CB7524 FMOV S2, 0.5
	0x03CB7528 FMUL S3, S0, S2
	0x03CB752C LDR V2, [X31 + 0x128]
	0x03CB7530 LDR W1, [X31 + 0x1260]
	0x03CB7534 LDR X2, [X31 + 0x1D0]
	0x03CB7538 FCMP S4, S8
	0x03CB753C FCSEL S4, S4, S8, GT
	0x03CB7540 MOV X0, X19
	0x03CB7544 MOV V0.16B, V10.16B
	0x03CB7548 MOV V5.16B, V2.16B
	0x03CB754C MOV X3, X21
	0x03CB7550 MOV X4, X31
	0x03CB7554 STR S3, [X31 + 0x12C]
	0x03CB7558 BL 0x3CC1758
	0x03CB755C ADRP X22, 0x4AA000
	0x03CB7560 LDR X22, [X22 + 0xB38]
	0x03CB7564 LDR X0, [X22]
	0x03CB7568 LDR W8, [X0 + 0xE0]
	0x03CB756C CBNZ W8, 0x3CB7574
	0x03CB7570 BL 0x1C16DFC
	0x03CB7574 LDR X24, [X31 + 0x98]
	0x03CB7578 MOV X1, X31
	0x03CB757C MOV X0, X24
	0x03CB7580 BL 0x3CC5508
	0x03CB7584 LDR X0, [X22]
	0x03CB7588 MOV V10.16B, V0.16B
	0x03CB758C LDR W8, [X0 + 0xE0]
	0x03CB7590 CBNZ W8, 0x3CB7598
	0x03CB7594 BL 0x1C16DFC
	0x03CB7598 FSUB S0, S9, S10
	0x03CB759C MOV X0, X24
	0x03CB75A0 MOV X1, X31
	0x03CB75A4 STR S0, [X31 + 0x144]
	0x03CB75A8 BL 0x3CC54F8
	0x03CB75AC MOV X0, X24
	0x03CB75B0 MOV X1, X31
	0x03CB75B4 MOV V10.16B, V0.16B
	0x03CB75B8 BL 0x3CC5500
	0x03CB75BC LDR W8, [X31 + 0x17C]
	0x03CB75C0 FADD S0, S8, S0
	0x03CB75C4 LDR V1, [X31 + 0x1C4]
	0x03CB75C8 STR S0, [X31 + 0x138]
	0x03CB75CC LDR V0, [X31 + 0x5E]
	0x03CB75D0 ANDS W31, W8, 0x1
	0x03CB75D4 LDR W8, [X31 + 0x5F0]
	0x03CB75D8 LDR W24, [X31 + 0x1B4]
	0x03CB75DC FCSEL S1, S11, S1, NE
	0x03CB75E0 FADD S1, S1, S10
	0x03CB75E4 STR V0, [X31 + 0x126]
	0x03CB75E8 FMOV S0, W31
	0x03CB75EC STR S1, [X31 + 0x130]
	0x03CB75F0 STR W8, [X31 + 0x1270]
	0x03CB75F4 STR S0, [X31 + 0x128]
	0x03CB75F8 B 0x3CB76BC
	0x03CB75FC LDR W24, [X31 + 0x1B4]
	0x03CB7600 CBNZ W9, 0x3CB760C
	0x03CB7604 MOV X0, X8
	0x03CB7608 BL 0x1C16DFC
	0x03CB760C LDR X22, [X31 + 0xC0]
	0x03CB7610 MOV X1, X31
	0x03CB7614 MOV X0, X22
	0x03CB7618 BL 0x3CC54F0
	0x03CB761C LDR W8, [X31 + 0x17C]
	0x03CB7620 FSUB S1, S14, S0
	0x03CB7624 FSUB S0, S13, S0
	0x03CB7628 MOV X0, X22
	0x03CB762C ANDS W31, W8, 0x1
	0x03CB7630 FCSEL S0, S1, S0, NE
	0x03CB7634 LDR V1, [X31 + 0x1C4]
	0x03CB7638 MOV X1, X31
	0x03CB763C FCSEL S11, S11, S1, NE
	0x03CB7640 FCMP S10, S0
	0x03CB7644 FCSEL S0, S10, S0, MI
	0x03CB7648 STR S0, [X31 + 0x12C]
	0x03CB764C BL 0x3CC54F8
	0x03CB7650 ADRP X8, 0x4AA000
	0x03CB7654 LDR X8, [X8 + 0xB38]
	0x03CB7658 LDR V1, [X31 + 0x130]
	0x03CB765C FADD S0, S11, S0
	0x03CB7660 LDR X0, [X8]
	0x03CB7664 FCMP S1, S0
	0x03CB7668 FCSEL S1, S1, S0, GT
	0x03CB766C STR S1, [X31 + 0x130]
	0x03CB7670 LDR W8, [X0 + 0xE0]
	0x03CB7674 CBNZ W8, 0x3CB767C
	0x03CB7678 BL 0x1C16DFC
	0x03CB767C MOV X0, X22
	0x03CB7680 MOV X1, X31
	0x03CB7684 BL 0x3CC5508
	0x03CB7688 LDR V1, [X31 + 0x144]
	0x03CB768C FSUB S0, S9, S0
	0x03CB7690 MOV X0, X22
	0x03CB7694 MOV X1, X31
	0x03CB7698 FCMP S1, S0
	0x03CB769C FCSEL S1, S1, S0, MI
	0x03CB76A0 STR S1, [X31 + 0x144]
	0x03CB76A4 BL 0x3CC5500
	0x03CB76A8 LDR V1, [X31 + 0x138]
	0x03CB76AC FADD S0, S8, S0
	0x03CB76B0 FCMP S1, S0
	0x03CB76B4 FCSEL S1, S1, S0, GT
	0x03CB76B8 STR S1, [X31 + 0x138]
	0x03CB76BC LDR X8, [X31 + 0x1C8]
	0x03CB76C0 LDR X9, [X31 + 0x150]
	0x03CB76C4 MOV V11.16B, V12.16B
	0x03CB76C8 LDR W8, [X8]
	0x03CB76CC CMP W8, 0x1
	0x03CB76D0 B.EQ 0x3CB76EC
	0x03CB76D4 CMP W28, W9
	0x03CB76D8 B.EQ 0x3CB76EC
	0x03CB76DC LDR X8, [X31 + 0x1A8]
	0x03CB76E0 CMP W28, W8
	0x03CB76E4 B.GE 0x3CB76EC
	0x03CB76E8 CBZ W20, 0x3CB7758
	0x03CB76EC LDR V2, [X31 + 0x128]
	0x03CB76F0 LDR W1, [X31 + 0x1260]
	0x03CB76F4 LDR V0, [X31 + 0x12C]
	0x03CB76F8 LDR V1, [X31 + 0x144]
	0x03CB76FC LDR V3, [X31 + 0x130]
	0x03CB7700 LDR V4, [X31 + 0x138]
	0x03CB7704 LDR X2, [X31 + 0x1D0]
	0x03CB7708 MOV X0, X19
	0x03CB770C MOV V5.16B, V2.16B
	0x03CB7710 MOV X3, X21
	0x03CB7714 MOV X4, X31
	0x03CB7718 BL 0x3CC1758
	0x03CB771C MOV W22, W31
	0x03CB7720 MOVZ W20, 0x60
	0x03CB7724 LDR X8, [X31 + 0x1C8]
	0x03CB7728 LDR W9, [X31 + 0x178]
	0x03CB772C ADD X27, X27, 0x188
	0x03CB7730 MOV W26, W23
	0x03CB7734 LDR W8, [X8]
	0x03CB7738 ADD W9, W9, 0x1
	0x03CB773C STR W9, [X31 + 0x178]
	0x03CB7740 ADD W9, W24, 0x1
	0x03CB7744 CMP W24, W8
	0x03CB7748 B.LT 0x3CB5920
	0x03CB774C B 0x3CB79B0
	0x03CB7750 MOV W20, W31
	0x03CB7754 B 0x3CB7330
	0x03CB7758 MOVZ W22, 0x1
	0x03CB775C B 0x3CB7720
	0x03CB7760 LDR W8, [X19 + 0x340]
	0x03CB7764 CMP W23, W8
	0x03CB7768 CSET W8, LT
	0x03CB776C LDR V3, [X31 + 0x190]
	0x03CB7770 LDR V4, [X31 + 0x170]
	0x03CB7774 LDR V6, [X31 + 0xD0]
	0x03CB7778 FCMP S13, S8
	0x03CB777C B.GT 0x3CB77A4
	0x03CB7780 UBFM W9, W27, 0x4, 0x4
	0x03CB7784 ORR W8, W8, W9, 0x0
	0x03CB7788 CBNZ W8, 0x3CB77A4
	0x03CB778C LDR X8, [X31 + 0x1D0]
	0x03CB7790 FADD S0, S8, S10
	0x03CB7794 LDRB W8, [X8 + 0xB6]
	0x03CB7798 CMP W8, 0x0
	0x03CB779C FCSEL S0, S10, S0, EQ
	0x03CB77A0 B 0x3CB5BFC
	0x03CB77A4 LDR W8, [X31 + 0x1B4]
	0x03CB77A8 CMP W8, 0x1
	0x03CB77AC B.EQ 0x3CB784C
	0x03CB77B0 CMP W23, W26
	0x03CB77B4 B.NE 0x3CB784C
	0x03CB77B8 LDR X8, [X31 + 0x1D0]
	0x03CB77BC LDR W9, [X8 + 0xE4]
	0x03CB77C0 LDRB W8, [X8 + 0xB6]
	0x03CB77C4 CMP W28, W9
	0x03CB77C8 B.NE 0x3CB789C
	0x03CB77CC CBNZ W8, 0x3CB7858
	0x03CB77D0 STR S10, [X31 + 0x15C]
	0x03CB77D4 B 0x3CB7860
	0x03CB77D8 LDR X8, [X31 + 0x1D8]
	0x03CB77DC LDR X8, [X8]
	0x03CB77E0 CBZ X8, 0x3CB7C14
	0x03CB77E4 LDR W9, [X8 + 0x18]
	0x03CB77E8 CMP W28, W9
	0x03CB77EC B.CS 0x3CB7C18
	0x03CB77F0 LDR V0, [X31 + 0x174]
	0x03CB77F4 NOP
	0x03CB77F8 MADD X8, X24, X29, X8
	0x03CB77FC LDR V3, [X8 + 0x130]
	0x03CB7800 LDR V7, [X8 + 0x16C]
	0x03CB7804 STR S0, [X31 + 0x8]
	0x03CB7808 LDP S2, S0, [X31 + 0xD8]
	0x03CB780C LDR V1, [X31 + 0xD4]
	0x03CB7810 LDR V4, [X31 + 0x160]
	0x03CB7814 LDR V6, [X31 + 0xE0]
	0x03CB7818 LDR X2, [X31 + 0x1D0]
	0x03CB781C FMOV S5, W31
	0x03CB7820 MOV X0, X19
	0x03CB7824 MOV X1, X22
	0x03CB7828 MOV X3, X21
	0x03CB782C MOV X4, X31
	0x03CB7830 STR S15, [X31]
	0x03CB7834 FMOV S15, W31
	0x03CB7838 BL 0x3CC0B2C
	0x03CB783C ADRP X8, 0xFFFFFFFFFCE33000
	0x03CB7840 LDR V0, [X8 + 0x374]
	0x03CB7844 LDR X22, [X31 + 0x1D8]
	0x03CB7848 B 0x3CB6AF4
	0x03CB784C LDR X8, [X31 + 0x1D0]
	0x03CB7850 LDRB W8, [X8 + 0xB6]
	0x03CB7854 CBZ W8, 0x3CB77D0
	0x03CB7858 FADD S0, S8, S10
	0x03CB785C STR S0, [X31 + 0x15C]
	0x03CB7860 ADRP X8, 0x43E000
	0x03CB7864 LDR X8, [X8 + 0x170]
	0x03CB7868 LDR X0, [X8]
	0x03CB786C LDR W8, [X0 + 0xE0]
	0x03CB7870 CBNZ W8, 0x3CB7878
	0x03CB7874 BL 0x1C16DFC
	0x03CB7878 LDR W0, [X31 + 0x1C4]
	0x03CB787C MOV X1, X31
	0x03CB7880 BL 0x331BAF4
	0x03CB7884 LDR V3, [X31 + 0x190]
	0x03CB7888 LDR V4, [X31 + 0x170]
	0x03CB788C LDR V6, [X31 + 0xD0]
	0x03CB7890 MOVI D0, 0x0
	0x03CB7894 STR W0, [X31 + 0x90]
	0x03CB7898 B 0x3CB5C04
	0x03CB789C LDR W10, [X31 + 0x90]
	0x03CB78A0 SUB W9, W22, W21
	0x03CB78A4 FNEG S0, S13
	0x03CB78A8 CMP W8, 0x0
	0x03CB78AC AND W10, W10, 0x1
	0x03CB78B0 SUB W9, W9, W10
	0x03CB78B4 FCSEL S0, S0, S13, EQ
	0x03CB78B8 CMP W9, 0x1
	0x03CB78BC B.LT 0x3CB78CC
	0x03CB78C0 LDR X10, [X31 + 0x1D0]
	0x03CB78C4 LDR V10, [X10 + 0x7C]
	0x03CB78C8 B 0x3CB78D0
	0x03CB78CC FMOV S10, 1
	0x03CB78D0 LDR W10, [X31 + 0x1C4]
	0x03CB78D4 CMP W9, 0x1
	0x03CB78D8 CSINC W22, W9, W31, GT
	0x03CB78DC FADD S8, S8, S0
	0x03CB78E0 CMP W10, 0x9
	0x03CB78E4 B.EQ 0x3CB7940
	0x03CB78E8 LDR W9, [X31 + 0x90]
	0x03CB78EC CMP W10, 0xA0
	0x03CB78F0 ORN W9, W31, W9, 0x0
	0x03CB78F4 AND W9, W9, 0x1
	0x03CB78F8 SUB W9, W21, W9
	0x03CB78FC ADD W20, W9, W20
	0x03CB7900 B.EQ 0x3CB7970
	0x03CB7904 ADRP X8, 0x43E000
	0x03CB7908 LDR X8, [X8 + 0x170]
	0x03CB790C LDR X0, [X8]
	0x03CB7910 LDR W8, [X0 + 0xE0]
	0x03CB7914 CBNZ W8, 0x3CB791C
	0x03CB7918 BL 0x1C16DFC
	0x03CB791C LDR W0, [X31 + 0x1C4]
	0x03CB7920 MOV X1, X31
	0x03CB7924 BL 0x331BAF4
	0x03CB7928 LDR X8, [X31 + 0x1D0]
	0x03CB792C LDRB W8, [X8 + 0xB6]
	0x03CB7930 TBZ X0, 0x0, 0x3CB7964
	0x03CB7934 LDR V3, [X31 + 0x190]
	0x03CB7938 LDR V4, [X31 + 0x170]
	0x03CB793C LDR V6, [X31 + 0xD0]
	0x03CB7940 FMOV S0, 1
	0x03CB7944 FSUB S0, S0, S10
	0x03CB7948 CBZ W8, 0x3CB7958
	0x03CB794C FMUL S0, S8, S0
	0x03CB7950 SCVTF S1, W22
	0x03CB7954 B 0x3CB797C
	0x03CB7958 SCVTF S1, W22
	0x03CB795C FMUL S0, S8, S0
	0x03CB7960 B 0x3CB7990
	0x03CB7964 LDR V3, [X31 + 0x190]
	0x03CB7968 LDR V4, [X31 + 0x170]
	0x03CB796C LDR V6, [X31 + 0xD0]
	0x03CB7970 FMUL S0, S8, S10
	0x03CB7974 SCVTF S1, W20
	0x03CB7978 CBZ W8, 0x3CB7990
	0x03CB797C FDIV S0, S0, S1
	0x03CB7980 LDR V1, [X31 + 0x15C]
	0x03CB7984 FSUB S1, S1, S0
	0x03CB7988 STR S1, [X31 + 0x15C]
	0x03CB798C B 0x3CB5C2C
	0x03CB7990 FDIV S0, S0, S1
	0x03CB7994 LDR V1, [X31 + 0x15C]
	0x03CB7998 FADD S1, S1, S0
	0x03CB799C LDR V0, [X31 + 0x148]
	0x03CB79A0 STR S1, [X31 + 0x15C]
	0x03CB79A4 MOVI D1, 0x0
	0x03CB79A8 FADD V0.2S, V0.2S, V1.2S
	0x03CB79AC B 0x3CB5C04
	0x03CB79B0 ADRP X24, 0x4AA000
	0x03CB79B4 LDR X26, [X31 + 0xA0]
	0x03CB79B8 LDR X25, [X31 + 0x1D0]
	0x03CB79BC LDR X24, [X24 + 0x6C8]
	0x03CB79C0 LDR W10, [X31 + 0x140]
	0x03CB79C4 ADD W9, W23, 0x1
	0x03CB79C8 B 0x3CB79D4
	0x03CB79CC MOV W9, W31
	0x03CB79D0 MOV W10, W31
	0x03CB79D4 STR W8, [X21 + 0x10]
	0x03CB79D8 CMP W8, 0x1
	0x03CB79DC LDR W8, [X19 + 0x15C0]
	0x03CB79E0 CCMP W10, 0x0, 0x4, GE
	0x03CB79E4 STR W9, [X21 + 0x24]
	0x03CB79E8 CSINC W9, W10, W31, NE
	0x03CB79EC STR W9, [X21 + 0x1C]
	0x03CB79F0 STR W8, [X21 + 0x14]
	0x03CB79F4 LDR W8, [X19 + 0x350]
	0x03CB79F8 LDR W9, [X21 + 0x2C]
	0x03CB79FC ADD W8, W8, 0x1
	0x03CB7A00 CMP W9, 0x1
	0x03CB7A04 STR W8, [X21 + 0x28]
	0x03CB7A08 B.LE 0x3CB0B24
	0x03CB7A0C MOVZ W19, 0x1
	0x03CB7A10 MOVZ W20, 0x70
	0x03CB7A14 LDR X21, [X21 + 0x58]
	0x03CB7A18 CBZ X21, 0x3CB7C14
	0x03CB7A1C LDR X0, [X24]
	0x03CB7A20 LDR W8, [X0 + 0xE0]
	0x03CB7A24 CBNZ W8, 0x3CB7A2C
	0x03CB7A28 BL 0x1C16DFC
	0x03CB7A2C LDR W8, [X21 + 0x18]
	0x03CB7A30 CMP X19, X8
	0x03CB7A34 B.CS 0x3CB7C18
	0x03CB7A38 ADD X0, X21, X20
	0x03CB7A3C MOV X1, X31
	0x03CB7A40 BL 0x3CAABE4
	0x03CB7A44 LDR W8, [X25 + 0x100]
	0x03CB7A48 CBZ W8, 0x3CB7A84
	0x03CB7A4C LDR X8, [X31 + 0x1B8]
	0x03CB7A50 LDR X21, [X8 + 0x58]
	0x03CB7A54 CBZ X21, 0x3CB7C14
	0x03CB7A58 LDR X0, [X24]
	0x03CB7A5C LDR W8, [X0 + 0xE0]
	0x03CB7A60 CBNZ W8, 0x3CB7A68
	0x03CB7A64 BL 0x1C16DFC
	0x03CB7A68 LDR W8, [X21 + 0x18]
	0x03CB7A6C CMP X19, X8
	0x03CB7A70 B.CS 0x3CB7C18
	0x03CB7A74 ADD X0, X21, X20
	0x03CB7A78 MOVZ W1, 0x1
	0x03CB7A7C MOV X2, X31
	0x03CB7A80 BL 0x3CAAC20
	0x03CB7A84 LDR X21, [X31 + 0x1B8]
	0x03CB7A88 ADD X19, X19, 0x1
	0x03CB7A8C ADD X20, X20, 0x50
	0x03CB7A90 LDRSW X8, [X21 + 0x2C]
	0x03CB7A94 CMP X19, X8
	0x03CB7A98 B.LT 0x3CB7A14
	0x03CB7A9C B 0x3CB0B24
	0x03CB7AA0 LDR V0, [X19 + 0x340]
	0x03CB7AA4 LDR V1, [X31 + 0x24]
	0x03CB7AA8 SCVTF S0, S0
	0x03CB7AAC FSUB S1, S1, S5
	0x03CB7AB0 FDIV S0, S1, S0
	0x03CB7AB4 LDR V1, [X31 + 0x88]
	0x03CB7AB8 FDIV S0, S0, S1
	0x03CB7ABC FADD S0, S7, S0
	0x03CB7AC0 FCMP S0, S6
	0x03CB7AC4 FCSEL S0, S0, S6, GT
	0x03CB7AC8 LDR X26, [X31 + 0xA0]
	0x03CB7ACC STR S0, [X19 + 0x15B0]
	0x03CB7AD0 B 0x3CB0B24
	0x03CB7AD4 LDR V0, [X19 + 0x159C]
	0x03CB7AD8 ADRP X8, 0xFFFFFFFFFCE33000
	0x03CB7ADC LDR V2, [X8 + 0x200]
	0x03CB7AE0 FMOV S3, 0.5
	0x03CB7AE4 FSUB S0, S5, S0
	0x03CB7AE8 FMUL S0, S0, S3
	0x03CB7AEC FMAXNM S0, S0, S2
	0x03CB7AF0 FMOV S2, 20
	0x03CB7AF4 FSUB S0, S5, S0
	0x03CB7AF8 FMUL S0, S0, S2
	0x03CB7AFC ADRP X8, 0xFFFFFFFFFCE33000
	0x03CB7B00 FADD S0, S0, S3
	0x03CB7B04 LDR V4, [X8 + 0x420]
	0x03CB7B08 FCVTZS W8, S0
	0x03CB7B0C SCVTF S3, W8
	0x03CB7B10 MOVZ W8, 0x7F800000
	0x03CB7B14 FDIV S2, S3, S2
	0x03CB7B18 FMOV S3, W8
	0x03CB7B1C FCMP S0, S3
	0x03CB7B20 FCSEL S0, S4, S2, EQ
	0x03CB7B24 FCMP S0, S1
	0x03CB7B28 FCSEL S0, S0, S1, GT
	0x03CB7B2C STR S5, [X19 + 0x1598]
	0x03CB7B30 B 0x3CB7B90
	0x03CB7B34 LDR V2, [X19 + 0x159C]
	0x03CB7B38 ADRP X8, 0xFFFFFFFFFCE33000
	0x03CB7B3C LDR V3, [X8 + 0x200]
	0x03CB7B40 FMOV S4, 0.5
	0x03CB7B44 FSUB S2, S1, S2
	0x03CB7B48 FMUL S2, S2, S4
	0x03CB7B4C FMAXNM S2, S2, S3
	0x03CB7B50 STR S1, [X19 + 0x1598]
	0x03CB7B54 FMOV S3, 20
	0x03CB7B58 FSUB S1, S1, S2
	0x03CB7B5C FMUL S1, S1, S3
	0x03CB7B60 ADRP X8, 0xFFFFFFFFFCE33000
	0x03CB7B64 FADD S1, S1, S4
	0x03CB7B68 LDR V2, [X8 + 0x420]
	0x03CB7B6C FCVTZS W8, S1
	0x03CB7B70 SCVTF S4, W8
	0x03CB7B74 MOVZ W8, 0x7F800000
	0x03CB7B78 FDIV S3, S4, S3
	0x03CB7B7C FMOV S4, W8
	0x03CB7B80 FCMP S1, S4
	0x03CB7B84 FCSEL S1, S2, S3, EQ
	0x03CB7B88 FCMP S1, S0
	0x03CB7B8C FCSEL S0, S1, S0, GT
	0x03CB7B90 LDR X26, [X31 + 0xA0]
	0x03CB7B94 B 0x3CB5090
	0x03CB7B98 ADRP X8, 0xFFFFFFFFFCE33000
	0x03CB7B9C LDR V3, [X8 + 0x2F0]
	0x03CB7BA0 LDR V4, [X31 + 0x16C]
	0x03CB7BA4 FDIV S1, S11, S1
	0x03CB7BA8 FCMP S2, 0x0
	0x03CB7BAC FCSEL S1, S1, S11, GT
	0x03CB7BB0 FADD S3, S4, S3
	0x03CB7BB4 FMUL S3, S13, S3
	0x03CB7BB8 FSUB S3, S11, S3
	0x03CB7BBC FDIV S1, S3, S1
	0x03CB7BC0 FADD S1, S2, S1
	0x03CB7BC4 LDR X26, [X31 + 0xA0]
	0x03CB7BC8 FCMP S1, S0
	0x03CB7BCC FCSEL S0, S1, S0, MI
	0x03CB7BD0 STR S0, [X19 + 0x1594]
	0x03CB7BD4 B 0x3CB0B24
	0x03CB7BD8 FCMP S1, 0x0
	0x03CB7BDC MOV V2.16B, V11.16B
	0x03CB7BE0 B.LE 0x3CB7BF0
	0x03CB7BE4 FMOV S2, 1
	0x03CB7BE8 FSUB S2, S2, S1
	0x03CB7BEC FDIV S2, S11, S2
	0x03CB7BF0 ADRP X8, 0xFFFFFFFFFCE33000
	0x03CB7BF4 LDR V3, [X8 + 0x2F0]
	0x03CB7BF8 LDR V4, [X31 + 0x16C]
	0x03CB7BFC FADD S3, S4, S3
	0x03CB7C00 FMUL S3, S13, S3
	0x03CB7C04 FSUB S3, S11, S3
	0x03CB7C08 FDIV S2, S3, S2
	0x03CB7C0C FADD S1, S1, S2
	0x03CB7C10 B 0x3CB7BC4
	0x03CB7C14 BL 0x1C16F20
	0x03CB7C18 BL 0x1C16F28
	0x03CB7C1C LDR W8, [X19 + 0x340]
	0x03CB7C20 LDR V2, [X31 + 0x24]
	0x03CB7C24 ADD W8, W8, 0x1
	0x03CB7C28 FSUB S2, S2, S10
	0x03CB7C2C SCVTF S3, W8
	0x03CB7C30 FDIV S2, S2, S3
	0x03CB7C34 LDR V3, [X31 + 0x88]
	0x03CB7C38 FDIV S2, S2, S3
	0x03CB7C3C FADD S1, S1, S2
	0x03CB7C40 FCMP S1, S0
	0x03CB7C44 FCSEL S0, S1, S0, GT
	0x03CB7C48 B 0x3CB7AC8
	0x03CB7C4C MOV X0, X22
	0x03CB7C50 BL 0x1C171E0
	0x03CB7C54 BL 0x3EB1B20
	0x03CB7C58 STR X30, [X31 - 0x20]!
	0x03CB7C5C STP X20, X19, [X31 + 0x10]
	0x03CB7C60 ADRP X19, 0x730000
	0x03CB7C64 ADRP X20, 0x4AA000
	0x03CB7C68 LDRB W8, [X19 + 0x339]
	0x03CB7C6C LDR X20, [X20 + 0xB50]
	0x03CB7C70 TBNZ X8, 0x0, 0x3CB7C88
	0x03CB7C74 ADRP X0, 0x4AA000
	0x03CB7C78 LDR X0, [X0 + 0xB50]
	0x03CB7C7C BL 0x1C16CF4
	0x03CB7C80 MOVZ W8, 0x1
	0x03CB7C84 STRB W8, [X19 + 0x339]
	0x03CB7C88 LDR X0, [X20]
	0x03CB7C8C LDR X8, [X0 + 0xB8]
	0x03CB7C90 LDR X8, [X8]
	0x03CB7C94 CBNZ X8, 0x3CB7CB4
	0x03CB7C98 BL 0x1C16F10
	0x03CB7C9C MOV X19, X0
	0x03CB7CA0 BL 0x3CB7CC8
	0x03CB7CA4 LDR X8, [X20]
	0x03CB7CA8 LDR X8, [X8 + 0xB8]
	0x03CB7CAC STR X19, [X8]
	0x03CB7CB0 LDR X0, [X20]
	0x03CB7CB4 LDR X8, [X0 + 0xB8]
	0x03CB7CB8 LDP X20, X19, [X31 + 0x10]
	0x03CB7CBC LDR X0, [X8]
	0x03CB7CC0 LDR X30, [X31], #0x20
	0x03CB7CC4 RET
	0x03CB7CC8 STP X29, X30, [X31 - 0x60]!
	0x03CB7CCC STP X28, X27, [X31 + 0x10]
	0x03CB7CD0 STP X26, X25, [X31 + 0x20]
	0x03CB7CD4 STP X24, X23, [X31 + 0x30]
	0x03CB7CD8 STP X22, X21, [X31 + 0x40]
	0x03CB7CDC STP X20, X19, [X31 + 0x50]
	0x03CB7CE0 SUB X31, X31, 0x620
	0x03CB7CE4 ADRP X22, 0x730000
	0x03CB7CE8 ADRP X20, 0x4AA000
	0x03CB7CEC LDRB W8, [X22 + 0x34A]
	0x03CB7CF0 LDR X20, [X20 + 0xBE8]
	0x03CB7CF4 MOV X19, X0
	0x03CB7CF8 ADD X21, X31, 0x3C0
	0x03CB7CFC TBNZ X8, 0x0, 0x3CB7E28
	0x03CB7D00 ADRP X0, 0x445000
	0x03CB7D04 LDR X0, [X0 + 0x8D8]
	0x03CB7D08 BL 0x1C16CF4
	0x03CB7D0C ADRP X0, 0x468000
	0x03CB7D10 LDR X0, [X0 + 0xAF8]
	0x03CB7D14 BL 0x1C16CF4
	0x03CB7D18 ADRP X0, 0x446000
	0x03CB7D1C LDR X0, [X0 + 0x890]
	0x03CB7D20 BL 0x1C16CF4
	0x03CB7D24 ADRP X0, 0x446000
	0x03CB7D28 LDR X0, [X0 + 0x888]
	0x03CB7D2C BL 0x1C16CF4
	0x03CB7D30 ADRP X0, 0x4AA000
	0x03CB7D34 LDR X0, [X0 + 0xBF0]
	0x03CB7D38 BL 0x1C16CF4
	0x03CB7D3C ADRP X0, 0x43D000
	0x03CB7D40 LDR X0, [X0 + 0xE58]
	0x03CB7D44 BL 0x1C16CF4
	0x03CB7D48 ADRP X0, 0x4AA000
	0x03CB7D4C LDR X0, [X0 + 0xBF8]
	0x03CB7D50 BL 0x1C16CF4
	0x03CB7D54 ADRP X0, 0x4AA000
	0x03CB7D58 LDR X0, [X0 + 0xB38]
	0x03CB7D5C BL 0x1C16CF4
	0x03CB7D60 ADRP X0, 0x4AA000
	0x03CB7D64 LDR X0, [X0 + 0xC00]
	0x03CB7D68 BL 0x1C16CF4
	0x03CB7D6C ADRP X0, 0x43C000
	0x03CB7D70 LDR X0, [X0 + 0x638]
	0x03CB7D74 BL 0x1C16CF4
	0x03CB7D78 ADRP X0, 0x4AA000
	0x03CB7D7C LDR X0, [X0 + 0xC08]
	0x03CB7D80 BL 0x1C16CF4
	0x03CB7D84 ADRP X0, 0x4AA000
	0x03CB7D88 LDR X0, [X0 + 0xBE8]
	0x03CB7D8C BL 0x1C16CF4
	0x03CB7D90 ADRP X0, 0x4AA000
	0x03CB7D94 LDR X0, [X0 + 0xC10]
	0x03CB7D98 BL 0x1C16CF4
	0x03CB7D9C ADRP X0, 0x4AA000
	0x03CB7DA0 LDR X0, [X0 + 0xC18]
	0x03CB7DA4 BL 0x1C16CF4
	0x03CB7DA8 ADRP X0, 0x4AA000
	0x03CB7DAC LDR X0, [X0 + 0xC20]
	0x03CB7DB0 BL 0x1C16CF4
	0x03CB7DB4 ADRP X0, 0x4AA000
	0x03CB7DB8 LDR X0, [X0 + 0xC28]
	0x03CB7DBC BL 0x1C16CF4
	0x03CB7DC0 ADRP X0, 0x4AA000
	0x03CB7DC4 LDR X0, [X0 + 0xC30]
	0x03CB7DC8 BL 0x1C16CF4
	0x03CB7DCC ADRP X0, 0x4AA000
	0x03CB7DD0 LDR X0, [X0 + 0xC38]
	0x03CB7DD4 BL 0x1C16CF4
	0x03CB7DD8 ADRP X0, 0x4AA000
	0x03CB7DDC LDR X0, [X0 + 0xC40]
	0x03CB7DE0 BL 0x1C16CF4
	0x03CB7DE4 ADRP X0, 0x4AA000
	0x03CB7DE8 LDR X0, [X0 + 0xC48]
	0x03CB7DEC BL 0x1C16CF4
	0x03CB7DF0 ADRP X0, 0x4AA000
	0x03CB7DF4 LDR X0, [X0 + 0xC50]
	0x03CB7DF8 BL 0x1C16CF4
	0x03CB7DFC ADRP X0, 0x4AA000
	0x03CB7E00 LDR X0, [X0 + 0xC58]
	0x03CB7E04 BL 0x1C16CF4
	0x03CB7E08 ADRP X0, 0x4AA000
	0x03CB7E0C LDR X0, [X0 + 0xC60]
	0x03CB7E10 BL 0x1C16CF4
	0x03CB7E14 ADRP X0, 0x43E000
	0x03CB7E18 LDR X0, [X0 + 0x9B0]
	0x03CB7E1C BL 0x1C16CF4
	0x03CB7E20 MOVZ W8, 0x1
	0x03CB7E24 STRB W8, [X22 + 0x34A]
	0x03CB7E28 ADRP X28, 0x43E000
	0x03CB7E2C ADRP X23, 0x4AA000
	0x03CB7E30 ADRP X24, 0x4AA000
	0x03CB7E34 ADRP X29, 0x4AA000
	0x03CB7E38 ADRP X27, 0x4AA000
	0x03CB7E3C ADRP X22, 0x4AA000
	0x03CB7E40 ADRP X26, 0x468000
	0x03CB7E44 ADRP X25, 0x4AA000
	0x03CB7E48 LDR X28, [X28 + 0x9B0]
	0x03CB7E4C LDR X23, [X23 + 0xBF8]
	0x03CB7E50 LDR X24, [X24 + 0xC48]
	0x03CB7E54 LDR X29, [X29 + 0xC30]
	0x03CB7E58 LDR X27, [X27 + 0xC10]
	0x03CB7E5C LDR X22, [X22 + 0xC60]
	0x03CB7E60 LDR X26, [X26 + 0xAF8]
	0x03CB7E64 LDR X25, [X25 + 0xC20]
	0x03CB7E68 ADD X0, X31, 0x610
	0x03CB7E6C MOVZ W1, 0x4
	0x03CB7E70 MOV X2, X31
	0x03CB7E74 STR X31, [X31 + 0x618]
	0x03CB7E78 STR X31, [X31 + 0x610]
	0x03CB7E7C BL 0x3CC5488
	0x03CB7E80 LDR V0, [X21 + 0x25]
	0x03CB7E84 MOVZ W1, 0x8
	0x03CB7E88 STR V0, [X19 + 0x1]
	0x03CB7E8C LDR X0, [X20]
	0x03CB7E90 BL 0x1C16D6C
	0x03CB7E94 STR X0, [X19 + 0x20]
	0x03CB7E98 STRB W31, [X19 + 0x2C]
	0x03CB7E9C ADRP X8, 0x445000
	0x03CB7EA0 LDR X8, [X8 + 0x8D8]
	0x03CB7EA4 MOVZ W1, 0x80
	0x03CB7EA8 LDR X0, [X8]
	0x03CB7EAC BL 0x1C16D6C
	0x03CB7EB0 STR X0, [X19 + 0x30]
	0x03CB7EB4 FMOV S0, 1
	0x03CB7EB8 FMOV S1, 1
	0x03CB7EBC FMOV S2, 1
	0x03CB7EC0 FMOV S3, 1
	0x03CB7EC4 MOV X0, X31
	0x03CB7EC8 BL 0x1E43664
	0x03CB7ECC ADRP X8, 0x4AA000
	0x03CB7ED0 LDR X8, [X8 + 0xB38]
	0x03CB7ED4 MOV X20, X0
	0x03CB7ED8 LDR X8, [X8]
	0x03CB7EDC LDR W9, [X8 + 0xE0]
	0x03CB7EE0 CBNZ W9, 0x3CB7EEC
	0x03CB7EE4 MOV X0, X8
	0x03CB7EE8 BL 0x1C16DFC
	0x03CB7EEC MOV X0, X31
	0x03CB7EF0 BL 0x3CC5510
	0x03CB7EF4 AND X1, X20, 0x0
	0x03CB7EF8 ADD X0, X31, 0x5F8
	0x03CB7EFC MOV X2, X31
	0x03CB7F00 STR X31, [X31 + 0x600]
	0x03CB7F04 STR X31, [X31 + 0x5F8]
	0x03CB7F08 STR W31, [X31 + 0x608]
	0x03CB7F0C BL 0x3CC56E0
	0x03CB7F10 ADD X9, X31, 0x4F9
	0x03CB7F14 LDR W8, [X31 + 0x608]
	0x03CB7F18 LDUR V0, [X9 + 0xFF]
	0x03CB7F1C MOVZ W1, 0x4
	0x03CB7F20 STR W8, [X19 + 0x48]
	0x03CB7F24 STUR V0, [X19 + 0x38]
	0x03CB7F28 LDR X0, [X28]
	0x03CB7F2C BL 0x1C16D6C
	0x03CB7F30 STR X0, [X19 + 0x50]
	0x03CB7F34 LDR X0, [X23]
	0x03CB7F38 MOVZ W1, 0x10
	0x03CB7F3C BL 0x1C16D6C
	0x03CB7F40 LDR X2, [X24]
	0x03CB7F44 MOV X1, X0
	0x03CB7F48 MOVI V0.2D, 0x0
	0x03CB7F4C ADD X0, X31, 0x5A0
	0x03CB7F50 STR X31, [X31 + 0x5F0]
	0x03CB7F54 STP V0, V0, [X21 + 0x210]
	0x03CB7F58 STP V0, V0, [X21 + 0x1F0]
	0x03CB7F5C STR V0, [X21 + 0x1E]
	0x03CB7F60 BL 0x26E2338
	0x03CB7F64 ADD X0, X19, 0x80
	0x03CB7F68 ADD X1, X31, 0x5A0
	0x03CB7F6C MOVZ W2, 0x58
	0x03CB7F70 BL 0x3EB1AC0
	0x03CB7F74 LDR X2, [X29]
	0x03CB7F78 MOVI V0.2D, 0x0
	0x03CB7F7C ADD X0, X31, 0x580
	0x03CB7F80 MOVZ W1, 0x10
	0x03CB7F84 STP V0, V0, [X21 + 0x1C0]
	0x03CB7F88 BL 0x26E2FFC
	0x03CB7F8C LDP V1, V0, [X21 + 0x1C0]
	0x03CB7F90 ADD X8, X19, 0xF8
	0x03CB7F94 MOVZ W1, 0x8
	0x03CB7F98 STR V0, [X8 + 0x1]
	0x03CB7F9C STUR V1, [X19 + 0xF8]
	0x03CB7FA0 LDR X0, [X27]
	0x03CB7FA4 BL 0x1C16D6C
	0x03CB7FA8 MOVZ W8, 0x190
	0x03CB7FAC STP X0, X31, [X19 + 0x118]
	0x03CB7FB0 STR W8, [X19 + 0x134]
	0x03CB7FB4 LDR X2, [X22]
	0x03CB7FB8 MOVI V0.2D, 0x0
	0x03CB7FBC ADD X0, X31, 0x560
	0x03CB7FC0 MOVZ W1, 0x8
	0x03CB7FC4 STP V0, V0, [X21 + 0x1A0]
	0x03CB7FC8 BL 0x26E1E50
	0x03CB7FCC LDP V1, V0, [X21 + 0x1A0]
	0x03CB7FD0 ADD X8, X19, 0x138
	0x03CB7FD4 ADD X0, X31, 0x540
	0x03CB7FD8 MOVZ W1, 0x10
	0x03CB7FDC STP V1, V0, [X8]
	0x03CB7FE0 ADRP X8, 0x4AA000
	0x03CB7FE4 LDR X8, [X8 + 0xC18]
	0x03CB7FE8 MOVI V0.2D, 0x0
	0x03CB7FEC STP V0, V0, [X21 + 0x180]
	0x03CB7FF0 LDR X2, [X8]
	0x03CB7FF4 BL 0x26E1E50
	0x03CB7FF8 LDP V1, V0, [X21 + 0x180]
	0x03CB7FFC ADRP X20, 0x43C000
	0x03CB8000 MOVZ W1, 0x10
	0x03CB8004 STP V1, V0, [X19 + 0x160]
	0x03CB8008 LDR X20, [X20 + 0x638]
	0x03CB800C LDR X0, [X20]
	0x03CB8010 BL 0x1C16D6C
	0x03CB8014 ADRP X27, 0x4A9000
	0x03CB8018 LDR X27, [X27 + 0xC38]
	0x03CB801C MOV X1, X0
	0x03CB8020 MOVI V0.2D, 0x0
	0x03CB8024 ADD X0, X31, 0x520
	0x03CB8028 LDR X2, [X27]
	0x03CB802C STP V0, V0, [X21 + 0x160]
	0x03CB8030 BL 0x26E2FD0
	0x03CB8034 LDP V1, V0, [X21 + 0x160]
	0x03CB8038 ADD X8, X19, 0x188
	0x03CB803C MOVZ W1, 0x10
	0x03CB8040 STP V1, V0, [X8]
	0x03CB8044 LDR X0, [X26]
	0x03CB8048 BL 0x1C16D6C
	0x03CB804C LDR X2, [X25]
	0x03CB8050 MOV X1, X0
	0x03CB8054 MOVI V0.2D, 0x0
	0x03CB8058 ADD X0, X31, 0x500
	0x03CB805C STP V0, V0, [X21 + 0x140]
	0x03CB8060 BL 0x26E0D6C
	0x03CB8064 LDP V1, V0, [X21 + 0x140]
	0x03CB8068 ADD X8, X19, 0x1B8
	0x03CB806C MOVZ W1, 0x10
	0x03CB8070 STP V1, V0, [X8]
	0x03CB8074 LDR X0, [X26]
	0x03CB8078 BL 0x1C16D6C
	0x03CB807C LDR X2, [X25]
	0x03CB8080 MOV X1, X0
	0x03CB8084 MOVI V0.2D, 0x0
	0x03CB8088 ADD X0, X31, 0x4E0
	0x03CB808C STP V0, V0, [X21 + 0x120]
	0x03CB8090 BL 0x26E0D6C
	0x03CB8094 LDP V1, V0, [X21 + 0x120]
	0x03CB8098 ADD X8, X19, 0x1D8
	0x03CB809C MOVZ W1, 0x10
	0x03CB80A0 STP V1, V0, [X8]
	0x03CB80A4 LDR X0, [X26]
	0x03CB80A8 BL 0x1C16D6C
	0x03CB80AC LDR X2, [X25]
	0x03CB80B0 MOV X1, X0
	0x03CB80B4 MOVI V0.2D, 0x0
	0x03CB80B8 ADD X0, X31, 0x4C0
	0x03CB80BC STP V0, V0, [X21 + 0x100]
	0x03CB80C0 BL 0x26E0D6C
	0x03CB80C4 LDP V1, V0, [X21 + 0x100]
	0x03CB80C8 ADD X8, X19, 0x1F8
	0x03CB80CC MOVZ W1, 0x10
	0x03CB80D0 STP V1, V0, [X8]
	0x03CB80D4 LDR X0, [X26]
	0x03CB80D8 BL 0x1C16D6C
	0x03CB80DC LDR X2, [X25]
	0x03CB80E0 MOV X1, X0
	0x03CB80E4 MOVI V0.2D, 0x0
	0x03CB80E8 ADD X0, X31, 0x4A0
	0x03CB80EC STP V0, V0, [X21 + 0xE0]
	0x03CB80F0 BL 0x26E0D6C
	0x03CB80F4 LDP V1, V0, [X21 + 0xE0]
	0x03CB80F8 ADD X8, X19, 0x218
	0x03CB80FC MOVZ W1, 0x10
	0x03CB8100 STP V1, V0, [X8]
	0x03CB8104 ADRP X8, 0x4A9000
	0x03CB8108 LDR X8, [X8 + 0xBF0]
	0x03CB810C LDR X0, [X8]
	0x03CB8110 BL 0x1C16D6C
	0x03CB8114 ADRP X8, 0x4A9000
	0x03CB8118 LDR X8, [X8 + 0xC40]
	0x03CB811C MOV X1, X0
	0x03CB8120 MOVI V0.2D, 0x0
	0x03CB8124 ADD X0, X31, 0x470
	0x03CB8128 LDR X2, [X8]
	0x03CB812C STP V0, V0, [X21 + 0xC0]
	0x03CB8130 STR V0, [X21 + 0xB]
	0x03CB8134 BL 0x26E1270
	0x03CB8138 LDP V1, V0, [X21 + 0xC0]
	0x03CB813C LDR V2, [X21 + 0xB]
	0x03CB8140 ADD X8, X19, 0x238
	0x03CB8144 ADRP X24, 0x43C000
	0x03CB8148 STP V1, V0, [X8 + 0x10]
	0x03CB814C STR V2, [X8]
	0x03CB8150 LDR X24, [X24 + 0xE58]
	0x03CB8154 MOVZ W1, 0x10
	0x03CB8158 LDR X0, [X24]
	0x03CB815C BL 0x1C16D6C
	0x03CB8160 ADRP X22, 0x4A9000
	0x03CB8164 LDR X22, [X22 + 0xC28]
	0x03CB8168 MOV X1, X0
	0x03CB816C MOVI V0.2D, 0x0
	0x03CB8170 ADD X0, X31, 0x450
	0x03CB8174 LDR X2, [X22]
	0x03CB8178 STP V0, V0, [X21 + 0x90]
	0x03CB817C BL 0x26E1910
	0x03CB8180 LDP V1, V0, [X21 + 0x90]
	0x03CB8184 ADD X8, X19, 0x268
	0x03CB8188 MOVZ W1, 0x10
	0x03CB818C STP V1, V0, [X8]
	0x03CB8190 ADRP X8, 0x4A9000
	0x03CB8194 LDR X8, [X8 + 0xC08]
	0x03CB8198 LDR X0, [X8]
	0x03CB819C BL 0x1C16D6C
	0x03CB81A0 ADRP X8, 0x4A9000
	0x03CB81A4 LDR X8, [X8 + 0xC50]
	0x03CB81A8 MOV X1, X0
	0x03CB81AC MOVI V0.2D, 0x0
	0x03CB81B0 ADD X0, X31, 0x420
	0x03CB81B4 LDR X2, [X8]
	0x03CB81B8 STR X31, [X31 + 0x440]
	0x03CB81BC STP V0, V0, [X21 + 0x60]
	0x03CB81C0 BL 0x26E2ABC
	0x03CB81C4 LDR X8, [X31 + 0x440]
	0x03CB81C8 LDP V1, V0, [X21 + 0x60]
	0x03CB81CC MOVZ W1, 0x10
	0x03CB81D0 STR X8, [X19 + 0x2B0]
	0x03CB81D4 STP V1, V0, [X19 + 0x290]
	0x03CB81D8 LDR X0, [X24]
	0x03CB81DC BL 0x1C16D6C
	0x03CB81E0 LDR X2, [X22]
	0x03CB81E4 MOV X1, X0
	0x03CB81E8 MOVI V0.2D, 0x0
	0x03CB81EC ADD X0, X31, 0x400
	0x03CB81F0 STP V0, V0, [X21 + 0x40]
	0x03CB81F4 BL 0x26E1910
	0x03CB81F8 LDP V1, V0, [X21 + 0x40]
	0x03CB81FC MOVZ W1, 0x10
	0x03CB8200 STP V1, V0, [X19 + 0x2C0]
	0x03CB8204 LDR X0, [X20]
	0x03CB8208 BL 0x1C16D6C
	0x03CB820C LDR X2, [X27]
	0x03CB8210 MOV X1, X0
	0x03CB8214 MOVI V0.2D, 0x0
	0x03CB8218 ADD X0, X31, 0x3E0
	0x03CB821C STP V0, V0, [X21 + 0x20]
	0x03CB8220 BL 0x26E2FD0
	0x03CB8224 LDP V1, V0, [X21 + 0x20]
	0x03CB8228 ADD X0, X19, 0xAB0
	0x03CB822C MOVZ W2, 0xAC8
	0x03CB8230 MOV W1, W31
	0x03CB8234 STP V1, V0, [X19 + 0x300]
	0x03CB8238 BL 0x3EB1B10
	0x03CB823C MOVZ W8, 0x64
	0x03CB8240 STR W8, [X19 + 0x15A4]
	0x03CB8244 LDR X0, [X23]
	0x03CB8248 MOVZ W1, 0x8
	0x03CB824C BL 0x1C16D6C
	0x03CB8250 STR X0, [X19 + 0x15B8]
	0x03CB8254 STR W31, [X19 + 0x15C0]
	0x03CB8258 LDR X0, [X24]
	0x03CB825C MOVZ W1, 0x10
	0x03CB8260 BL 0x1C16D6C
	0x03CB8264 LDR X2, [X22]
	0x03CB8268 MOV X1, X0
	0x03CB826C MOVI V0.2D, 0x0
	0x03CB8270 ADD X0, X31, 0x3C0
	0x03CB8274 STP V0, V0, [X21]
	0x03CB8278 BL 0x26E1910
	0x03CB827C LDP V1, V0, [X21]
	0x03CB8280 MOVZ W8, 0x15C8
	0x03CB8284 ADD X8, X19, X8
	0x03CB8288 ADD X0, X31, 0x8
	0x03CB828C MOVZ W2, 0x3B8
	0x03CB8290 MOV W1, W31
	0x03CB8294 STP V1, V0, [X8]
	0x03CB8298 BL 0x3EB1B10
	0x03CB829C ADRP X8, 0x4A9000
	0x03CB82A0 LDR X8, [X8 + 0xC58]
	0x03CB82A4 ADD X0, X31, 0x8
	0x03CB82A8 MOVZ W1, 0x8
	0x03CB82AC MOVZ W2, 0x8
	0x03CB82B0 LDR X3, [X8]
	0x03CB82B4 BL 0x26E359C
	0x03CB82B8 MOVZ W8, 0x15E8
	0x03CB82BC ADD X0, X19, X8
	0x03CB82C0 ADD X1, X31, 0x8
	0x03CB82C4 MOVZ W2, 0x3B8
	0x03CB82C8 BL 0x3EB1AC0
	0x03CB82CC ADRP X8, 0x4A9000
	0x03CB82D0 LDR X8, [X8 + 0xC00]
	0x03CB82D4 MOVZ W1, 0x8
	0x03CB82D8 LDR X0, [X8]
	0x03CB82DC BL 0x1C16D6C
	0x03CB82E0 STR X0, [X19 + 0x19D0]
	0x03CB82E4 LDR X0, [X20]
	0x03CB82E8 MOVZ W1, 0x10
	0x03CB82EC BL 0x1C16D6C
	0x03CB82F0 STR X0, [X19 + 0x19D8]
	0x03CB82F4 ADRP X8, 0x445000
	0x03CB82F8 LDR X8, [X8 + 0x888]
	0x03CB82FC LDR X0, [X8]
	0x03CB8300 BL 0x1C16F10
	0x03CB8304 ADRP X8, 0x445000
	0x03CB8308 LDR X8, [X8 + 0x890]
	0x03CB830C MOV X20, X0
	0x03CB8310 LDR X1, [X8]
	0x03CB8314 BL 0x2A09A9C
	0x03CB8318 MOV X0, X19
	0x03CB831C MOV X1, X31
	0x03CB8320 STR X20, [X19 + 0x19E0]
	0x03CB8324 BL 0x33BDD8C
	0x03CB8328 ADD X31, X31, 0x620
	0x03CB832C LDP X20, X19, [X31 + 0x50]
	0x03CB8330 LDP X22, X21, [X31 + 0x40]
	0x03CB8334 LDP X24, X23, [X31 + 0x30]
	0x03CB8338 LDP X26, X25, [X31 + 0x20]
	0x03CB833C LDP X28, X27, [X31 + 0x10]
	0x03CB8340 LDP X29, X30, [X31], #0x60
	0x03CB8344 RET
	0x03CB8348 STR X30, [X31 - 0x30]!
	0x03CB834C STP X22, X21, [X31 + 0x10]
	0x03CB8350 STP X20, X19, [X31 + 0x20]
	0x03CB8354 ADRP X21, 0x72F000
	0x03CB8358 LDRB W8, [X21 + 0x33A]
	0x03CB835C MOV X19, X1
	0x03CB8360 MOV X20, X0
	0x03CB8364 TBNZ X8, 0x0, 0x3CB83AC
	0x03CB8368 ADRP X0, 0x43B000
	0x03CB836C LDR X0, [X0 + 0xA28]
	0x03CB8370 BL 0x1C16CF4
	0x03CB8374 ADRP X0, 0x4A9000
	0x03CB8378 LDR X0, [X0 + 0x258]
	0x03CB837C BL 0x1C16CF4
	0x03CB8380 ADRP X0, 0x43B000
	0x03CB8384 LDR X0, [X0 + 0x598]
	0x03CB8388 BL 0x1C16CF4
	0x03CB838C ADRP X0, 0x4A9000
	0x03CB8390 LDR X0, [X0 + 0xC68]
	0x03CB8394 BL 0x1C16CF4
	0x03CB8398 ADRP X0, 0x4A9000
	0x03CB839C LDR X0, [X0 + 0xC70]
	0x03CB83A0 BL 0x1C16CF4
	0x03CB83A4 MOVZ W8, 0x1
	0x03CB83A8 STRB W8, [X21 + 0x33A]
	0x03CB83AC CBZ X20, 0x3CB84B8
	0x03CB83B0 ADRP X8, 0x43B000
	0x03CB83B4 LDR X8, [X8 + 0x598]
	0x03CB83B8 LDR X21, [X20 + 0x40]
	0x03CB83BC LDR X0, [X8]
	0x03CB83C0 LDR W8, [X0 + 0xE0]
	0x03CB83C4 CBNZ W8, 0x3CB83CC
	0x03CB83C8 BL 0x1C16DFC
	0x03CB83CC ADRP X22, 0x43B000
	0x03CB83D0 LDR X22, [X22 + 0xA28]
	0x03CB83D4 MOV X0, X21
	0x03CB83D8 MOV X1, X31
	0x03CB83DC MOV X2, X31
	0x03CB83E0 BL 0x3C3883C
	0x03CB83E4 TBNZ X0, 0x0, 0x3CB8458
	0x03CB83E8 LDR X0, [X20 + 0x40]
	0x03CB83EC CBZ X0, 0x3CB84B8
	0x03CB83F0 MOV X1, X31
	0x03CB83F4 BL 0x3C9EF9C
	0x03CB83F8 CBZ X0, 0x3CB8458
	0x03CB83FC CBZ X19, 0x3CB8488
	0x03CB8400 BL 0x3CB7C58
	0x03CB8404 CBZ X0, 0x3CB84B8
	0x03CB8408 MOV X1, X20
	0x03CB840C MOV X2, X19
	0x03CB8410 MOV X21, X0
	0x03CB8414 BL 0x3CB84BC
	0x03CB8418 ADRP X8, 0x4A9000
	0x03CB841C LDR X8, [X8 + 0x258]
	0x03CB8420 LDR X0, [X8]
	0x03CB8424 LDR W8, [X0 + 0xE0]
	0x03CB8428 CBNZ W8, 0x3CB8430
	0x03CB842C BL 0x1C16DFC
	0x03CB8430 MOV X0, X31
	0x03CB8434 BL 0x3CA37C4
	0x03CB8438 MOV X0, X21
	0x03CB843C MOV X1, X20
	0x03CB8440 MOV X2, X19
	0x03CB8444 LDP X20, X19, [X31 + 0x20]
	0x03CB8448 LDP X22, X21, [X31 + 0x10]
	0x03CB844C MOV X3, X31
	0x03CB8450 LDR X30, [X31], #0x30
	0x03CB8454 B 0x3CB0604
	0x03CB8458 LDR X0, [X22]
	0x03CB845C ADRP X19, 0x4A9000
	0x03CB8460 LDR W8, [X0 + 0xE0]
	0x03CB8464 LDR X19, [X19 + 0xC70]
	0x03CB8468 CBNZ W8, 0x3CB8470
	0x03CB846C BL 0x1C16DFC
	0x03CB8470 LDR X0, [X19]
	0x03CB8474 LDP X20, X19, [X31 + 0x20]
	0x03CB8478 LDP X22, X21, [X31 + 0x10]
	0x03CB847C MOV X1, X31
	0x03CB8480 LDR X30, [X31], #0x30
	0x03CB8484 B 0x3C06A04
	0x03CB8488 LDR X0, [X22]
	0x03CB848C LDR W8, [X0 + 0xE0]
	0x03CB8490 CBNZ W8, 0x3CB8498
	0x03CB8494 BL 0x1C16DFC
	0x03CB8498 ADRP X8, 0x4A9000
	0x03CB849C LDR X8, [X8 + 0xC68]
	0x03CB84A0 LDP X20, X19, [X31 + 0x20]
	0x03CB84A4 LDP X22, X21, [X31 + 0x10]
	0x03CB84A8 MOV X1, X31
	0x03CB84AC LDR X0, [X8]
	0x03CB84B0 LDR X30, [X31], #0x30
	0x03CB84B4 B 0x3C0649C
	0x03CB84B8 BL 0x1C16F20
	0x03CB84BC STP X30, X21, [X31 - 0x20]!
	0x03CB84C0 STP X20, X19, [X31 + 0x10]
	0x03CB84C4 CBZ X1, 0x3CB85AC
	0x03CB84C8 LDR V0, [X1 + 0xB8]
	0x03CB84CC MOV X21, X2
	0x03CB84D0 MOV X20, X1
	0x03CB84D4 MOV X19, X0
	0x03CB84D8 STR S0, [X0 + 0xD8]
	0x03CB84DC LDR W8, [X1 + 0x60]
	0x03CB84E0 STR W8, [X0 + 0x124]
	0x03CB84E4 TBNZ X8, 0x0, 0x3CB84F0
	0x03CB84E8 LDR W8, [X20 + 0xEC]
	0x03CB84EC B 0x3CB84F4
	0x03CB84F0 MOVZ W8, 0x2BC
	0x03CB84F4 MOV X0, X19
	0x03CB84F8 MOV X1, X20
	0x03CB84FC STR W8, [X19 + 0x134]
	0x03CB8500 BL 0x3CC1CF4
	0x03CB8504 MOV X0, X19
	0x03CB8508 MOV X1, X20
	0x03CB850C BL 0x3CC16D4
	0x03CB8510 LDP S0, S1, [X20 + 0x18]
	0x03CB8514 LDP S2, S3, [X20 + 0x20]
	0x03CB8518 LDP S4, S5, [X20 + 0x28]
	0x03CB851C LDP S6, S7, [X20 + 0x30]
	0x03CB8520 MOV X0, X19
	0x03CB8524 BL 0x3CB888C
	0x03CB8528 LDR X1, [X20 + 0x10]
	0x03CB852C CBZ X1, 0x3CB8538
	0x03CB8530 LDR W3, [X1 + 0x10]
	0x03CB8534 B 0x3CB853C
	0x03CB8538 MOV W3, W31
	0x03CB853C MOV X0, X19
	0x03CB8540 MOV W2, W31
	0x03CB8544 BL 0x3CC4BD4
	0x03CB8548 MOV X0, X19
	0x03CB854C MOV X1, X20
	0x03CB8550 BL 0x3CB890C
	0x03CB8554 LDR X1, [X19 + 0x20]
	0x03CB8558 MOV X0, X19
	0x03CB855C MOV X2, X20
	0x03CB8560 MOV X3, X21
	0x03CB8564 BL 0x3CB966C
	0x03CB8568 LDRB W8, [X20 + 0xA8]
	0x03CB856C LDR V0, [X20 + 0xA4]
	0x03CB8570 CBZ W8, 0x3CB8588
	0x03CB8574 LDP S2, S1, [X20 + 0xAC]
	0x03CB8578 FCMP S0, S1
	0x03CB857C FCSEL S1, S1, S0, GT
	0x03CB8580 FCMP S0, S2
	0x03CB8584 FCSEL S0, S1, S2, PL
	0x03CB8588 STR S0, [X19 + 0xEC]
	0x03CB858C LDUR V0, [X20 + 0xAC]
	0x03CB8590 STR W31, [X19 + 0x15B0]
	0x03CB8594 STR W31, [X19 + 0x1594]
	0x03CB8598 UNIMPLEMENTED
	0x03CB859C STR D0, [X19 + 0x1598]
	0x03CB85A0 LDP X20, X19, [X31 + 0x10]
	0x03CB85A4 LDP X30, X21, [X31], #0x20
	0x03CB85A8 RET
	0x03CB85AC BL 0x1C16F20
	0x03CB85B0 STP X30, X21, [X31 - 0x20]!
	0x03CB85B4 STP X20, X19, [X31 + 0x10]
	0x03CB85B8 ADRP X21, 0x72F000
	0x03CB85BC LDRB W8, [X21 + 0x33B]
	0x03CB85C0 MOV X19, X1
	0x03CB85C4 MOV X20, X0
	0x03CB85C8 TBNZ X8, 0x0, 0x3CB85F8
	0x03CB85CC ADRP X0, 0x43B000
	0x03CB85D0 LDR X0, [X0 + 0xA28]
	0x03CB85D4 BL 0x1C16CF4
	0x03CB85D8 ADRP X0, 0x43B000
	0x03CB85DC LDR X0, [X0 + 0x598]
	0x03CB85E0 BL 0x1C16CF4
	0x03CB85E4 ADRP X0, 0x4A9000
	0x03CB85E8 LDR X0, [X0 + 0xC70]
	0x03CB85EC BL 0x1C16CF4
	0x03CB85F0 MOVZ W8, 0x1
	0x03CB85F4 STRB W8, [X21 + 0x33B]
	0x03CB85F8 CBZ X20, 0x3CB86DC
	0x03CB85FC ADRP X8, 0x43B000
	0x03CB8600 LDR X8, [X8 + 0x598]
	0x03CB8604 LDR X21, [X20 + 0x40]
	0x03CB8608 LDR X0, [X8]
	0x03CB860C LDR W8, [X0 + 0xE0]
	0x03CB8610 CBNZ W8, 0x3CB8618
	0x03CB8614 BL 0x1C16DFC
	0x03CB8618 MOV X0, X21
	0x03CB861C MOV X1, X31
	0x03CB8620 MOV X2, X31
	0x03CB8624 BL 0x3C3883C
	0x03CB8628 TBNZ X0, 0x0, 0x3CB8670
	0x03CB862C LDR X0, [X20 + 0x40]
	0x03CB8630 CBZ X0, 0x3CB86DC
	0x03CB8634 MOV X1, X31
	0x03CB8638 BL 0x3C9EF9C
	0x03CB863C CBZ X0, 0x3CB8670
	0x03CB8640 BL 0x3CB7C58
	0x03CB8644 CBZ X0, 0x3CB86DC
	0x03CB8648 MOV X1, X20
	0x03CB864C MOV X2, X19
	0x03CB8650 MOV X21, X0
	0x03CB8654 BL 0x3CB84BC
	0x03CB8658 MOV X1, X20
	0x03CB865C MOV X2, X19
	0x03CB8660 LDP X20, X19, [X31 + 0x10]
	0x03CB8664 MOV X0, X21
	0x03CB8668 LDP X30, X21, [X31], #0x20
	0x03CB866C B 0x3CB86E0
	0x03CB8670 ADRP X8, 0x43B000
	0x03CB8674 LDR X8, [X8 + 0xA28]
	0x03CB8678 ADRP X19, 0x4A9000
	0x03CB867C LDR X0, [X8]
	0x03CB8680 LDR W8, [X0 + 0xE0]
	0x03CB8684 LDR X19, [X19 + 0xC70]
	0x03CB8688 CBNZ W8, 0x3CB8690
	0x03CB868C BL 0x1C16DFC
	0x03CB8690 LDR X0, [X19]
	0x03CB8694 MOV X1, X31
	0x03CB8698 BL 0x3C06A04
	0x03CB869C ADRP X19, 0x721000
	0x03CB86A0 LDRB W8, [X19 + 0x78F]
	0x03CB86A4 CBNZ W8, 0x3CB86BC
	0x03CB86A8 ADRP X0, 0x443000
	0x03CB86AC LDR X0, [X0 + 0xF08]
	0x03CB86B0 BL 0x1C16CF4
	0x03CB86B4 MOVZ W8, 0x1
	0x03CB86B8 STRB W8, [X19 + 0x78F]
	0x03CB86BC ADRP X8, 0x443000
	0x03CB86C0 LDR X8, [X8 + 0xF08]
	0x03CB86C4 LDP X20, X19, [X31 + 0x10]
	0x03CB86C8 LDR X8, [X8]
	0x03CB86CC LDR X8, [X8 + 0xB8]
	0x03CB86D0 LDP S0, S1, [X8]
	0x03CB86D4 LDP X30, X21, [X31], #0x20
	0x03CB86D8 RET
	0x03CB86DC BL 0x1C16F20
	0x03CB86E0 SUB X31, X31, 0x40
	0x03CB86E4 STR X30, [X31 + 0x10]
	0x03CB86E8 STP X22, X21, [X31 + 0x20]
	0x03CB86EC STP X20, X19, [X31 + 0x30]
	0x03CB86F0 ADRP X22, 0x72F000
	0x03CB86F4 LDRB W8, [X22 + 0x345]
	0x03CB86F8 MOV X19, X2
	0x03CB86FC MOV X20, X1
	0x03CB8700 MOV X21, X0
	0x03CB8704 TBNZ X8, 0x0, 0x3CB871C
	0x03CB8708 ADRP X0, 0x43B000
	0x03CB870C LDR X0, [X0 + 0x598]
	0x03CB8710 BL 0x1C16CF4
	0x03CB8714 MOVZ W8, 0x1
	0x03CB8718 STRB W8, [X22 + 0x345]
	0x03CB871C STR W31, [X31 + 0x1C]
	0x03CB8720 CBZ X20, 0x3CB8818
	0x03CB8724 ADRP X8, 0x43B000
	0x03CB8728 LDR X8, [X8 + 0x598]
	0x03CB872C LDR X22, [X20 + 0x68]
	0x03CB8730 LDR X0, [X8]
	0x03CB8734 LDR W8, [X0 + 0xE0]
	0x03CB8738 CBNZ W8, 0x3CB8740
	0x03CB873C BL 0x1C16DFC
	0x03CB8740 MOV X0, X22
	0x03CB8744 MOV X1, X31
	0x03CB8748 MOV X2, X31
	0x03CB874C BL 0x3C3883C
	0x03CB8750 TBZ X0, 0x0, 0x3CB878C
	0x03CB8754 ADRP X19, 0x721000
	0x03CB8758 LDRB W8, [X19 + 0x78F]
	0x03CB875C CBNZ W8, 0x3CB8774
	0x03CB8760 ADRP X0, 0x443000
	0x03CB8764 LDR X0, [X0 + 0xF08]
	0x03CB8768 BL 0x1C16CF4
	0x03CB876C MOVZ W8, 0x1
	0x03CB8770 STRB W8, [X19 + 0x78F]
	0x03CB8774 ADRP X8, 0x443000
	0x03CB8778 LDR X8, [X8 + 0xF08]
	0x03CB877C LDR X8, [X8]
	0x03CB8780 LDR X8, [X8 + 0xB8]
	0x03CB8784 LDP S0, S1, [X8]
	0x03CB8788 B 0x3CB8804
	0x03CB878C LDRB W2, [X20 + 0xA8]
	0x03CB8790 LDUR V0, [X20 + 0xAC]
	0x03CB8794 ADD X8, X20, 0xB0
	0x03CB8798 ADD X9, X21, 0xEC
	0x03CB879C CMP W2, 0x0
	0x03CB87A0 CSEL X8, X9, X8, EQ
	0x03CB87A4 UNIMPLEMENTED
	0x03CB87A8 LDR V3, [X8]
	0x03CB87AC ADRP X8, 0xFFFFFFFFFCE32000
	0x03CB87B0 STR D0, [X21 + 0x1598]
	0x03CB87B4 LDP S2, S0, [X21 + 0x58]
	0x03CB87B8 LDR V1, [X8 + 0x374]
	0x03CB87BC STR W31, [X21 + 0x1594]
	0x03CB87C0 ADD X1, X31, 0x1C
	0x03CB87C4 FCMP S2, 0x0
	0x03CB87C8 FCSEL S2, S1, S2, EQ
	0x03CB87CC FCMP S0, 0x0
	0x03CB87D0 FCSEL S0, S1, S0, EQ
	0x03CB87D4 STP S2, S3, [X31 + 0x18]
	0x03CB87D8 STR S0, [X31 + 0xC]
	0x03CB87DC LDR X8, [X21]
	0x03CB87E0 LDRB W3, [X20 + 0x78]
	0x03CB87E4 STR W31, [X21 + 0x15A0]
	0x03CB87E8 LDR V0, [X31 + 0x18]
	0x03CB87EC LDR V1, [X31 + 0xC]
	0x03CB87F0 LDP X9, X6, [X8 + 0x178]
	0x03CB87F4 MOV X0, X21
	0x03CB87F8 MOV X4, X20
	0x03CB87FC MOV X5, X19
	0x03CB8800 BLR X9
	0x03CB8804 LDP X20, X19, [X31 + 0x30]
	0x03CB8808 LDP X22, X21, [X31 + 0x20]
	0x03CB880C LDR X30, [X31 + 0x10]
	0x03CB8810 ADD X31, X31, 0x40
	0x03CB8814 RET
	0x03CB8818 BL 0x1C16F20
	0x03CB881C STR X30, [X31 - 0x20]!
	0x03CB8820 STP X20, X19, [X31 + 0x10]
	0x03CB8824 ADRP X19, 0x72F000
	0x03CB8828 ADRP X20, 0x4A9000
	0x03CB882C LDRB W8, [X19 + 0x33C]
	0x03CB8830 LDR X20, [X20 + 0xB50]
	0x03CB8834 TBNZ X8, 0x0, 0x3CB884C
	0x03CB8838 ADRP X0, 0x4A9000
	0x03CB883C LDR X0, [X0 + 0xB50]
	0x03CB8840 BL 0x1C16CF4
	0x03CB8844 MOVZ W8, 0x1
	0x03CB8848 STRB W8, [X19 + 0x33C]
	0x03CB884C LDR X8, [X20]
	0x03CB8850 LDP X20, X19, [X31 + 0x10]
	0x03CB8854 LDR X8, [X8 + 0xB8]
	0x03CB8858 LDRB W0, [X8 + 0x8]
	0x03CB885C LDR X30, [X31], #0x20
	0x03CB8860 RET
	0x03CB8864 STR X30, [X31 - 0x20]!
	0x03CB8868 STP X20, X19, [X31 + 0x10]
	0x03CB886C MOV X19, X1
	0x03CB8870 MOV X20, X0
	0x03CB8874 BL 0x3CC1CF4
	0x03CB8878 MOV X0, X20
	0x03CB887C MOV X1, X19
	0x03CB8880 LDP X20, X19, [X31 + 0x10]
	0x03CB8884 LDR X30, [X31], #0x20
	0x03CB8888 B 0x3CC16D4
	0x03CB888C STR X30, [X31 - 0x10]!
	0x03CB8890 LDR X8, [X0 + 0x50]
	0x03CB8894 FSUB S0, S2, S4
	0x03CB8898 FSUB S1, S3, S5
	0x03CB889C FSUB S0, S0, S6
	0x03CB88A0 FSUB S1, S1, S7
	0x03CB88A4 STP S0, S1, [X0 + 0x58]
	0x03CB88A8 CBZ X8, 0x3CB88F0
	0x03CB88AC LDR W9, [X8 + 0x18]
	0x03CB88B0 CBZ W9, 0x3CB88EC
	0x03CB88B4 CMP W9, 0x1
	0x03CB88B8 STR X31, [X8 + 0x20]
	0x03CB88BC B.EQ 0x3CB88EC
	0x03CB88C0 CMP W9, 0x2
	0x03CB88C4 STR W31, [X8 + 0x2C]
	0x03CB88C8 STR S3, [X8 + 0x30]
	0x03CB88CC B.LS 0x3CB88EC
	0x03CB88D0 CMP W9, 0x3
	0x03CB88D4 STP S2, S3, [X8 + 0x38]
	0x03CB88D8 B.EQ 0x3CB88EC
	0x03CB88DC STR S2, [X8 + 0x44]
	0x03CB88E0 STR W31, [X8 + 0x48]
	0x03CB88E4 LDR X30, [X31], #0x10
	0x03CB88E8 RET
	0x03CB88EC BL 0x1C16F28
	0x03CB88F0 BL 0x1C16F20
	0x03CB88F4 CBZ X1, 0x3CB8900
	0x03CB88F8 LDR W3, [X1 + 0x10]
	0x03CB88FC B 0x3CB8904
	0x03CB8900 MOV W3, W31
	0x03CB8904 MOV W2, W31
	0x03CB8908 B 0x3CC4BD4
	0x03CB890C SUB X31, X31, 0xB0
	0x03CB8910 STP X29, X30, [X31 + 0x50]
	0x03CB8914 STP X28, X27, [X31 + 0x60]
	0x03CB8918 STP X26, X25, [X31 + 0x70]
	0x03CB891C STP X24, X23, [X31 + 0x80]
	0x03CB8920 STP X22, X21, [X31 + 0x90]
	0x03CB8924 STP X20, X19, [X31 + 0xA0]
	0x03CB8928 ADRP X20, 0x72F000
	0x03CB892C LDRB W8, [X20 + 0x347]
	0x03CB8930 MOV X27, X1
	0x03CB8934 MOV X19, X0
	0x03CB8938 STR X1, [X31 + 0x48]
	0x03CB893C TBNZ X8, 0x0, 0x3CB8984
	0x03CB8940 ADRP X0, 0x4A9000
	0x03CB8944 LDR X0, [X0 + 0xC78]
	0x03CB8948 BL 0x1C16CF4
	0x03CB894C ADRP X0, 0x4A9000
	0x03CB8950 LDR X0, [X0 + 0xC80]
	0x03CB8954 BL 0x1C16CF4
	0x03CB8958 ADRP X0, 0x4A9000
	0x03CB895C LDR X0, [X0 + 0xB48]
	0x03CB8960 BL 0x1C16CF4
	0x03CB8964 ADRP X0, 0x4A9000
	0x03CB8968 LDR X0, [X0 + 0xC88]
	0x03CB896C BL 0x1C16CF4
	0x03CB8970 ADRP X0, 0x4A9000
	0x03CB8974 LDR X0, [X0 + 0xC90]
	0x03CB8978 BL 0x1C16CF4
	0x03CB897C MOVZ W8, 0x1
	0x03CB8980 STRB W8, [X20 + 0x347]
	0x03CB8984 ADD X21, X19, 0x10
	0x03CB8988 MOV X0, X21
	0x03CB898C MOV X1, X31
	0x03CB8990 STR W31, [X31 + 0x40]
	0x03CB8994 BL 0x3CC5384
	0x03CB8998 MOV X20, X19
	0x03CB899C LDR X8, [X20 + 0x20]!
	0x03CB89A0 CBZ X8, 0x3CB9664
	0x03CB89A4 LDR W8, [X8 + 0x18]
	0x03CB89A8 ADRP X23, 0x4A9000
	0x03CB89AC ADRP X29, 0x4A9000
	0x03CB89B0 LDR X23, [X23 + 0xC90]
	0x03CB89B4 LDR X29, [X29 + 0xB48]
	0x03CB89B8 MOV W22, W0
	0x03CB89BC CMP W0, W8
	0x03CB89C0 B.LE 0x3CB89EC
	0x03CB89C4 LDR X0, [X29]
	0x03CB89C8 LDR W8, [X0 + 0xE0]
	0x03CB89CC CBNZ W8, 0x3CB89D4
	0x03CB89D0 BL 0x1C16DFC
	0x03CB89D4 ADRP X8, 0x4A9000
	0x03CB89D8 LDR X8, [X8 + 0xC80]
	0x03CB89DC MOV X0, X20
	0x03CB89E0 MOV W1, W22
	0x03CB89E4 LDR X2, [X8]
	0x03CB89E8 BL 0x229C0E8
	0x03CB89EC LDR X0, [X19 + 0x118]
	0x03CB89F0 LDR X2, [X23]
	0x03CB89F4 MOV W1, W31
	0x03CB89F8 BL 0x26E1A5C
	0x03CB89FC STR W31, [X19 + 0x120]
	0x03CB8A00 STR W31, [X31 + 0x44]
	0x03CB8A04 LDR X8, [X19 + 0x118]
	0x03CB8A08 CBZ X8, 0x3CB9664
	0x03CB8A0C LDR W9, [X8 + 0x18]
	0x03CB8A10 CBZ W9, 0x3CB9668
	0x03CB8A14 ADRP X9, 0x4A9000
	0x03CB8A18 LDR X9, [X9 + 0xC88]
	0x03CB8A1C ADD X0, X8, 0x20
	0x03CB8A20 ADD X24, X19, 0x118
	0x03CB8A24 LDR X1, [X9]
	0x03CB8A28 BL 0x26E1CFC
	0x03CB8A2C LDR X8, [X29]
	0x03CB8A30 MOV W23, W0
	0x03CB8A34 LDR W9, [X8 + 0xE0]
	0x03CB8A38 CBNZ W9, 0x3CB8A44
	0x03CB8A3C MOV X0, X8
	0x03CB8A40 BL 0x1C16DFC
	0x03CB8A44 MOVZ W26, 0x50F3
	0x03CB8A48 MOV X0, X27
	0x03CB8A4C MOV W1, W23
	0x03CB8A50 MOV X2, X31
	0x03CB8A54 ADD X25, X19, 0x120
	0x03CB8A58 MOVK W26, 0xB9750000
	0x03CB8A5C BL 0x3CC6D28
	0x03CB8A60 STR X0, [X31 + 0x30]
	0x03CB8A64 CBZ X0, 0x3CB8AAC
	0x03CB8A68 MOV X1, X31
	0x03CB8A6C BL 0x3CC6540
	0x03CB8A70 CMP W0, W26
	0x03CB8A74 B.EQ 0x3CB8AAC
	0x03CB8A78 LDR X0, [X29]
	0x03CB8A7C LDR W8, [X0 + 0xE0]
	0x03CB8A80 CBNZ W8, 0x3CB8A88
	0x03CB8A84 BL 0x1C16DFC
	0x03CB8A88 LDR X0, [X31 + 0x30]
	0x03CB8A8C ADD X2, X31, 0x44
	0x03CB8A90 ADD X5, X31, 0x48
	0x03CB8A94 MOV X1, X20
	0x03CB8A98 MOV X3, X25
	0x03CB8A9C MOV X4, X24
	0x03CB8AA0 MOV X6, X31
	0x03CB8AA4 BL 0x3CC7168
	0x03CB8AA8 LDR X27, [X31 + 0x48]
	0x03CB8AAC STR X24, [X31 + 0x20]
	0x03CB8AB0 CBZ X27, 0x3CB9664
	0x03CB8AB4 ADRP X24, 0x4A9000
	0x03CB8AB8 LDR X24, [X24 + 0xC78]
	0x03CB8ABC SUBS W23, W22, 0x1
	0x03CB8AC0 B.LT 0x3CB9598
	0x03CB8AC4 LDRB W8, [X27 + 0xBE]
	0x03CB8AC8 MOV W26, W31
	0x03CB8ACC STR W23, [X31 + 0x3C]
	0x03CB8AD0 CMP W8, 0x0
	0x03CB8AD4 CSET W8, NE
	0x03CB8AD8 STR W8, [X31 + 0x2C]
	0x03CB8ADC MOV X0, X21
	0x03CB8AE0 MOV W1, W26
	0x03CB8AE4 MOV X2, X31
	0x03CB8AE8 BL 0x3CC5394
	0x03CB8AEC MOV W27, W0
	0x03CB8AF0 CMP W0, 0x5C
	0x03CB8AF4 B.EQ 0x3CB8BE8
	0x03CB8AF8 CBZ W27, 0x3CB9598
	0x03CB8AFC UBFM W8, W27, 0xA, 0x1F
	0x03CB8B00 CMP W8, 0x36
	0x03CB8B04 B.NE 0x3CB8C6C
	0x03CB8B08 ADD W28, W26, 0x1
	0x03CB8B0C CMP W22, W28
	0x03CB8B10 B.LE 0x3CB9488
	0x03CB8B14 MOV X0, X21
	0x03CB8B18 MOV W1, W28
	0x03CB8B1C MOV X2, X31
	0x03CB8B20 BL 0x3CC5394
	0x03CB8B24 UBFM W8, W0, 0xA, 0x1F
	0x03CB8B28 CMP W8, 0x37
	0x03CB8B2C B.CC 0x3CB9488
	0x03CB8B30 MOV X0, X21
	0x03CB8B34 MOV W1, W28
	0x03CB8B38 MOV X2, X31
	0x03CB8B3C BL 0x3CC5394
	0x03CB8B40 UBFM W8, W0, 0xD, 0x1F
	0x03CB8B44 CMP W8, 0x6
	0x03CB8B48 B.HI 0x3CB9488
	0x03CB8B4C LDR X24, [X20]
	0x03CB8B50 MOV X23, X29
	0x03CB8B54 LDRSW X29, [X31 + 0x44]
	0x03CB8B58 MOV X0, X21
	0x03CB8B5C MOV W1, W28
	0x03CB8B60 MOV X2, X31
	0x03CB8B64 STR X19, [X31 + 0x18]
	0x03CB8B68 MOV X19, X25
	0x03CB8B6C BL 0x3CC5394
	0x03CB8B70 LDR X8, [X23]
	0x03CB8B74 MOV X25, X23
	0x03CB8B78 MOV W23, W0
	0x03CB8B7C LDR W9, [X8 + 0xE0]
	0x03CB8B80 CBNZ W9, 0x3CB8B8C
	0x03CB8B84 MOV X0, X8
	0x03CB8B88 BL 0x1C16DFC
	0x03CB8B8C MOV W0, W27
	0x03CB8B90 MOV W1, W23
	0x03CB8B94 MOV X2, X31
	0x03CB8B98 BL 0x3CC8FA0
	0x03CB8B9C CBZ X24, 0x3CB9664
	0x03CB8BA0 LDR W8, [X24 + 0x18]
	0x03CB8BA4 LDR W23, [X31 + 0x3C]
	0x03CB8BA8 CMP W29, W8
	0x03CB8BAC B.CS 0x3CB9668
	0x03CB8BB0 MOV W8, W26
	0x03CB8BB4 MOVZ W9, 0x1
	0x03CB8BB8 ADD X10, X24, X29, 0x4, LSL
	0x03CB8BBC ORR X8, X8, 0x3FFFFFFFF
	0x03CB8BC0 BFM X9, X0, 0x20, 0x1F
	0x03CB8BC4 STP X9, X8, [X10 + 0x20]
	0x03CB8BC8 LDR W8, [X31 + 0x44]
	0x03CB8BCC ADRP X24, 0x4A9000
	0x03CB8BD0 MOV X29, X25
	0x03CB8BD4 MOV X25, X19
	0x03CB8BD8 ADD W8, W8, 0x1
	0x03CB8BDC STR W8, [X31 + 0x44]
	0x03CB8BE0 LDR X19, [X31 + 0x18]
	0x03CB8BE4 B 0x3CB9090
	0x03CB8BE8 CMP W26, W23
	0x03CB8BEC B.GE 0x3CB9488
	0x03CB8BF0 ADD W28, W26, 0x1
	0x03CB8BF4 MOV X0, X21
	0x03CB8BF8 MOV W1, W28
	0x03CB8BFC MOV X2, X31
	0x03CB8C00 BL 0x3CC5394
	0x03CB8C04 SUB W8, W0, 0x6E
	0x03CB8C08 CMP W8, 0x8
	0x03CB8C0C B.HI 0x3CB8D8C
	0x03CB8C10 ADRP X11, 0xFFFFFFFFFCEDF000
	0x03CB8C14 ADD X11, X11, 0xEF6
	0x03CB8C18 ADR X9, 0x10
	0x03CB8C1C LDRH W10, [X11, X8, LSL #1]
	0x03CB8C20 ADD X9, X9, X10, 0x2, LSL
	0x03CB8C24 BR X9
	0x03CB8C28 LDR X8, [X31 + 0x48]
	0x03CB8C2C CBZ X8, 0x3CB9664
	0x03CB8C30 LDRB W8, [X8 + 0xBC]
	0x03CB8C34 CBZ W8, 0x3CB9488
	0x03CB8C38 LDR X8, [X20]
	0x03CB8C3C CBZ X8, 0x3CB9664
	0x03CB8C40 LDRSW X9, [X31 + 0x44]
	0x03CB8C44 LDR W10, [X8 + 0x18]
	0x03CB8C48 CMP W9, W10
	0x03CB8C4C B.CS 0x3CB9668
	0x03CB8C50 MOV W10, W26
	0x03CB8C54 MOVZ X11, 0x1

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 4096
	022 Subtract X31, X31, 1584
	023 NotImplemented "Instruction MRS not yet implemented."
	024 Move X8, [X26+40]
	025 Move X20, 0x737000
	026 Add X22, X31, 4096
	027 Move X21, X2
	028 Move [X31+5672], X8
	029 Move W8, [X20+824]
	030 Move X23, X1
	031 Move X19, X0
	032 Add X22, X22, 384
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {156}
	037 Move X0, 0x445000
	038 Move X0, [X0+368]
	039 Call 0x1C17CF4
	040 Move X0, 0x443000
	041 Move X0, [X0+2600]
	042 Call 0x1C17CF4
	043 Move X0, 0x4B1000
	044 Move X0, [X0+2848]
	045 Call 0x1C17CF4
	046 Move X0, 0x4B1000
	047 Move X0, [X0+2856]
	048 Call 0x1C17CF4
	049 Move X0, 0x4B1000
	050 Move X0, [X0+2864]
	051 Call 0x1C17CF4
	052 Move X0, 0x4B1000
	053 Move X0, [X0+592]
	054 Call 0x1C17CF4
	055 Move X0, 0x4A8000
	056 Move X0, [X0+3584]
	057 Call 0x1C17CF4
	058 Move X0, 0x443000
	059 Move X0, [X0+1448]
	060 Call 0x1C17CF4
	061 Move X0, 0x4B1000
	062 Move X0, [X0+1736]
	063 Call 0x1C17CF4
	064 Move X0, 0x443000
	065 Move X0, [X0+1432]
	066 Call 0x1C17CF4
	067 Move X0, 0x4B1000
	068 Move X0, [X0+2872]
	069 Call 0x1C17CF4
	070 Move X0, 0x4B1000
	071 Move X0, [X0+1864]
	072 Call 0x1C17CF4
	073 Move X0, 0x4B1000
	074 Move X0, [X0+2880]
	075 Call 0x1C17CF4
	076 Move X0, 0x4B1000
	077 Move X0, [X0+2888]
	078 Call 0x1C17CF4
	079 Move X0, 0x4B1000
	080 Move X0, [X0+2896]
	081 Call 0x1C17CF4
	082 Move X0, 0x4B1000
	083 Move X0, [X0+2904]
	084 Call 0x1C17CF4
	085 Move X0, 0x4B1000
	086 Move X0, [X0+2912]
	087 Call 0x1C17CF4
	088 Move X0, 0x4B1000
	089 Move X0, [X0+2920]
	090 Call 0x1C17CF4
	091 Move X0, 0x4B1000
	092 Move X0, [X0+2928]
	093 Call 0x1C17CF4
	094 Move X0, 0x4B1000
	095 Move X0, [X0+2936]
	096 Call 0x1C17CF4
	097 Move X0, 0x4B1000
	098 Move X0, [X0+2944]
	099 Call 0x1C17CF4
	100 Move X0, 0x4B1000
	101 Move X0, [X0+2952]
	102 Call 0x1C17CF4
	103 Move X0, 0x4B1000
	104 Move X0, [X0+2960]
	105 Call 0x1C17CF4
	106 Move X0, 0x4B1000
	107 Move X0, [X0+2968]
	108 Call 0x1C17CF4
	109 Move X0, 0x4B1000
	110 Move X0, [X0+2976]
	111 Call 0x1C17CF4
	112 Move X0, 0x4B1000
	113 Move X0, [X0+2984]
	114 Call 0x1C17CF4
	115 Move X0, 0x4B1000
	116 Move X0, [X0+2992]
	117 Call 0x1C17CF4
	118 Move X0, 0x4B1000
	119 Move X0, [X0+3000]
	120 Call 0x1C17CF4
	121 Move X0, 0x4B1000
	122 Move X0, [X0+3008]
	123 Call 0x1C17CF4
	124 Move X0, 0x4B1000
	125 Move X0, [X0+3016]
	126 Call 0x1C17CF4
	127 Move X0, 0x4B1000
	128 Move X0, [X0+3024]
	129 Call 0x1C17CF4
	130 Move X0, 0x4B1000
	131 Move X0, [X0+3032]
	132 Call 0x1C17CF4
	133 Move X0, 0x4B1000
	134 Move X0, [X0+616]
	135 Call 0x1C17CF4
	136 Move X0, 0x4A8000
	137 Move X0, [X0+1024]
	138 Call 0x1C17CF4
	139 Move X0, 0x4A8000
	140 Move X0, [X0+1032]
	141 Call 0x1C17CF4
	142 Move X0, 0x4B1000
	143 Move X0, [X0+3040]
	144 Call 0x1C17CF4
	145 Move X0, 0x4A8000
	146 Move X0, [X0+1040]
	147 Call 0x1C17CF4
	148 Move X0, 0x4A8000
	149 Move X0, [X0+1048]
	150 Call 0x1C17CF4
	151 Move X0, 0x4A8000
	152 Move X0, [X0+1056]
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X20+824], W8
	156 NotImplemented "Instruction MOVI not yet implemented."
	157 Add X0, X31, 3368
	158 Move W2, 920
	159 Move W1, W31
	160 Move [X31+4744], X31
	161 Move [X22+260], W31
	162 Move [X31+4728], X31
	163 Move [X31+4712], X31
	164 Move [X31+4704], X31
	165 Move [X31+4720], W31
	166 Move [X31+4604], W31
	167 Move [X31+4584], X31
	168 Move [X31+4576], X31
	169 Move [X31+4592], W31
	170 Move [X31+4568], X31
	171 Move [X31+4560], X31
	172 Move [X31+4556], W31
	173 Move [X31+4536], X31
	174 Move [X31+4528], X31
	175 Move [X31+4544], W31
	176 Move [X31+4456], X31
	177 Move [X31+4448], X31
	178 Move [X31+4464], W31
	179 Move [X31+4432], X31
	180 Move [X31+4424], X31
	181 Move [X31+4440], X31
	182 Move [X31+4416], X31
	183 Move [X31+4408], X31
	184 Move [X31+4392], X31
	185 Move [X31+4384], X31
	186 Move [X31+4400], X31
	187 Move [X31+4368], X31
	188 Move [X31+4360], X31
	189 Move [X31+4376], X31
	190 Move [X31+293], V0
	191 Move [X31+292], V0
	192 Move [X31+291], V0
	193 Move [X31+290], V0
	194 Move [X31+289], V0
	195 Move [X31+288], V0
	196 Move [X22+28], V0
	197 Move [X31+281], V0
	198 Move [X31+280], V0
	199 Move [X31+271], V0
	200 Move [X31+270], V0
	201 Move [X31+269], V0
	202 Move [X31+268], V0
	203 Call 0x3EB2B10
	204 Add X0, X31, 2448
	205 Move W2, 920
	206 Move W1, W31
	207 Call 0x3EB2B10
	208 Add X0, X31, 1528
	209 Move W2, 920
	210 Move W1, W31
	211 Call 0x3EB2B10
	212 Move [X31+1512], X31
	213 Move [X31+1504], X31
	214 Move [X31+1520], W31
	215 Move [X31+1480], X31
	216 Move [X31+1472], X31
	217 Move [X31+1488], W31
	218 Compare X23, 0
	219 JumpIfEqual {7654}
	220 Move X8, 0x443000
	221 Move X8, [X8+1432]
	222 Move X22, [X23+64]
	223 Move W9, 0x1578
	224 Add X27, X19, X9
	225 Move X0, [X8]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X28, 0x443000
	231 Move X28, [X28+2600]
	232 Move X0, X22
	233 Move X1, X31
	234 Move X2, X31
	235 Call Object.op_Equality, X0, X1
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfEqual {342}
	240 Move X0, [X23+64]
	241 Compare X0, 0
	242 JumpIfEqual {7654}
	243 Move X1, X31
	244 Call FontAsset.get_characterLookupTable, X0
	245 Compare X0, 0
	246 JumpIfEqual {342}
	247 Compare X21, 0
	248 JumpIfEqual {252}
	249 Move X0, X21
	250 Move X1, X31
	251 Call TextInfo.Clear, X0
	252 Move X8, [X19+32]
	253 Compare X8, 0
	254 JumpIfEqual {354}
	255 Move X9, [X8+24]
	256 Compare X9, 0
	257 JumpIfEqual {354}
	258 Compare W9, 0
	259 JumpIfEqual {7655}
	260 Move W8, [X8+36]
	261 Compare W8, 0
	262 JumpIfEqual {354}
	263 Move X2, [X23+64]
	264 Move X24, X19
	265 NotImplemented "Instruction MOVI not yet implemented."
	266 Add X0, X31, 544
	267 Move [X24+104], X2
	268 Move X4, [X23+72]
	269 Move V0, [X19+216]
	270 Move W1, W31
	271 Move X3, X31
	272 Move X5, X31
	273 Add X22, X19, 128
	274 Move [X19+120], W31
	275 Move [X19+112], X4
	276 Move [X31+592], X31
	277 Move [X31+560], V1
	278 Move [X31+568], V1
	279 Move [X31+34], V1
	280 Call MaterialReference..ctor, X0, X1, X2, X3, X4, V0
	281 Move X8, 0x4B1000
	282 Move X8, [X8+3000]
	283 Move V0, [X31+544]
	284 Move V1, [X31+560]
	285 Move V2, [X31+36]
	286 Move X9, [X31+592]
	287 Move X2, [X8]
	288 Add X1, X31, 4096
	289 Add X1, X1, 656
	290 Move X0, X22
	291 Move [X31+297], V0
	292 Move [X31+298], V1
	293 Move [X31+299], V2
	294 Move [X31+4800], X9
	295 Call TextProcessingStack`1<MaterialReference>.SetDefault, X0, X1
	296 Move X25, X19
	297 Move X8, [X23+80]
	298 Add X25, X25, 236
	299 Move V14, [X25]
	300 Move [X25-12], X8
	301 Move X8, [X23+64]
	302 Compare X8, 0
	303 JumpIfEqual {7654}
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 Add X0, X8, 176
	306 Move X1, X31
	307 Move [X31+440], X21
	308 Call FaceInfo.get_pointSize, X0
	309 Move X8, [X23+64]
	310 Compare X8, 0
	311 JumpIfEqual {7654}
	312 Move W22, W0
	313 Add X0, X8, 176
	314 Move X1, X31
	315 Call FaceInfo.get_scale, X0
	316 Move V9, [X19+236]
	317 Move W10, 0x3F800000
	318 Move W8, [X23+189]
	319 Move [X19+240], W10
	320 Move [X19+244], S9
	321 Move X21, 0x4B1000
	322 Move X21, [X21+2992]
	323 Move X9, -52191232
	324 Move V1, [X9+188]
	325 Move V8, V0
	326 Move X1, [X21]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move S0, 1
	329 NotImplemented "Instruction FCSEL not yet implemented."
	330 Add X0, X19, 248
	331 Move V0, V9
	332 Move [X31+328], S1
	333 Call TextProcessingStack`1<Single>.SetDefault, X0, V0
	334 Move [X31+4748], W31
	335 Move W8, [X23+96]
	336 Move [X19+292], W8
	337 Move TEMP, X8
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfEqual {387}
	341 Move W1, [X23+236]
	342 Move X0, [X28]
	343 Move X19, 0x4B1000
	344 Move W8, [X0+224]
	345 Move X19, [X19+3040]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X0, [X19]
	350 Move X1, X31
	351 Call Debug.LogWarning, X0
	352 Move W8, 1
	353 Move [X27+48], W8
	354 Move W0, 1
	355 Move X1, X21
	356 Move X2, X31
	357 Move W20, 1
	358 Call TextGenerator.ClearMesh, X0, X1
	359 Move [X19+96], X31
	360 Move [X27+48], W20
	361 Move X8, [X26+40]
	362 Move X9, [X31+5672]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Add X31, X31, 4096
	365 Add X31, X31, 1584
	366 Move X20, [X31+144]
	367 Move X19, [X31+152]
	368 Move X22, [X31+128]
	369 Move X21, [X31+136]
	370 Move X24, [X31+112]
	371 Move X23, [X31+120]
	372 Move X26, [X31+96]
	373 Move X25, [X31+104]
	374 Move X28, [X31+80]
	375 Move X27, [X31+88]
	376 Move X29, [X31+64]
	377 Move X30, [X31+72]
	378 Move D9, [X31+48]
	379 Move D8, [X31+56]
	380 Move D11, [X31+32]
	381 Move D10, [X31+40]
	382 Move D13, [X31+16]
	383 Move D12, [X31+24]
	384 Move D15, [X31+160]
	385 Move D14, [X31+168]
	386 Return 
	387 Move W1, 700
	388 Move [X31+200], X25
	389 Move [X31+400], X24
	390 Move [X19+308], W1
	391 Move X8, 0x4B1000
	392 Move X8, [X8+3016]
	393 Add X0, X19, 312
	394 Move X2, [X8]
	395 Call TextProcessingStack`1<Int32Enum>.SetDefault, X0, X1
	396 Add X0, X19, 296
	397 Move X1, X31
	398 Call FontStyleStack.Clear, X0
	399 Move W1, [X23+112]
	400 Move X8, 0x4B1000
	401 Add X0, X19, 352
	402 Move [X19+344], W1
	403 Move X8, [X8+2984]
	404 Move X2, [X8]
	405 Call TextProcessingStack`1<Int32Enum>.SetDefault, X0, X1
	406 Move [X19+384], W31
	407 Move X8, 0x4B1000
	408 Move X8, [X8+2944]
	409 Add X0, X19, 392
	410 Move X1, [X8]
	411 Call TextProcessingStack`1<Single>.Clear, X0
	412 Move X8, 0x728000
	413 Move W8, [X8+1923]
	414 Compare W8, 0
	415 JumpIfNotEqual {422}
	416 Move X0, 0x443000
	417 Move X0, [X0+1440]
	418 Call 0x1C17CF4
	419 Move W8, 1
	420 Move X9, 0x728000
	421 Move [X9+1923], W8
	422 Move X8, 0x443000
	423 Move X8, [X8+1440]
	424 Move S0, [X23+128]
	425 Move S1, [X23+132]
	426 Move X0, X31
	427 Move [X31+464], X23
	428 Move X8, [X8]
	429 Move X8, [X8+184]
	430 Move V2, [X8]
	431 Move [X31+300], S2
	432 Move V2, [X8+4]
	433 Move [X31+324], S2
	434 Move V2, [X8+8]
	435 Move [X31+296], S2
	436 Move S2, [X23+136]
	437 Move S3, [X23+140]
	438 Call 0x1E44664
	439 Move [X19+424], W0
	440 Move [X19+428], W0
	441 Move [X19+432], W0
	442 Move [X19+436], W0
	443 Move X23, 0x4B1000
	444 Move X23, [X23+3024]
	445 Add X8, X19, 440
	446 And X1, X0, 0
	447 Move X0, X8
	448 Move X2, [X23]
	449 Call 0x26E1F48, X0, X1
	450 Move W1, [X19+428]
	451 Move X2, [X23]
	452 Add X0, X19, 472
	453 Call 0x26E1F48, X0, X1
	454 Move W1, [X19+428]
	455 Move X2, [X23]
	456 Add X0, X19, 504
	457 Call 0x26E1F48, X0, X1
	458 Move X8, 0x4B1000
	459 Move X8, [X8+2872]
	460 Move W25, [X19+428]
	461 Add X24, X19, 568
	462 Move X0, [X8]
	463 Move W8, [X0+224]
	464 Compare W8, 0
	465 JumpIfNotEqual {467}
	466 Call 0x1C17DFC
	467 Move X0, X31
	468 Call Offset.get_zero
	469 Add X0, X31, 544
	470 Move X1, X25
	471 Move X2, X31
	472 Move [X31+552], X31
	473 Move [X31+544], X31
	474 Move [X31+560], W31
	475 Call HighlightState..ctor, X0, X1, X2
	476 Move X8, 0x4B1000
	477 Move X8, [X8+2968]
	478 Move V0, [X31+34]
	479 Move W9, [X31+560]
	480 Add X1, X31, 4096
	481 Move X2, [X8]
	482 Add X1, X1, 656
	483 Move X0, X24
	484 Move [X31+297], V0
	485 Move [X31+4768], W9
	486 Call TextProcessingStack`1<HighlightState>.SetDefault, X0, X1
	487 Move [X19+648], X31
	488 Move X8, 0x4B1000
	489 Move X8, [X8+3008]
	490 Add X0, X19, 656
	491 Move X1, X31
	492 Move X2, [X8]
	493 Call TextProcessingStack`1<Object>.SetDefault, X0, X1
	494 Move X0, [X19+104]
	495 Compare X0, 0
	496 JumpIfEqual {7654}
	497 Move X1, X31
	498 Call FontAsset.get_italicStyleSlant, X0
	499 And W1, W0, 255
	500 Move [X19+6564], W1
	501 Move X8, 0x4B1000
	502 Move X8, [X8+2976]
	503 Add X0, X19, 616
	504 Move X2, [X8]
	505 Call TextProcessingStack`1<Int32>.SetDefault, X0, X1
	506 Move X8, 0x4B1000
	507 Move X8, [X8+2928]
	508 Add X0, X19, 704
	509 Move X1, [X8]
	510 Call TextProcessingStack`1<Int32>.Clear, X0
	511 Move X23, 0x728000
	512 Move W8, [X23+2139]
	513 Move X25, [X31+464]
	514 Move X24, [X31+400]
	515 Compare W8, 0
	516 JumpIfNotEqual {522}
	517 Move X0, 0x443000
	518 Move X0, [X0+1440]
	519 Call 0x1C17CF4
	520 Move W8, 1
	521 Move [X23+2139], W8
	522 Move X8, 0x443000
	523 Move X8, [X8+1440]
	524 Move X8, [X8]
	525 Move X8, [X8+184]
	526 NotImplemented "Instruction LDUR not yet implemented."
	527 Move V1, [X8+20]
	528 Move X8, 0x728000
	529 Move [X19+6568], D0
	530 Move [X19+6576], S1
	531 Move W8, [X8+1939]
	532 Compare W8, 0
	533 JumpIfNotEqual {540}
	534 Move X0, 0x444000
	535 Move X0, [X0+1448]
	536 Call 0x1C17CF4
	537 Move W8, 1
	538 Move X9, 0x728000
	539 Move [X9+1939], W8
	540 Move X8, 0x444000
	541 Move X8, [X8+1448]
	542 Add X9, X27, 1084
	543 Move [X31+256], X9
	544 Move X8, [X8]
	545 Move X8, [X8+184]
	546 Move V0, [X8]
	547 Move X8, -52178944
	548 Move [X9], V0
	549 Move V0, [X8+1872]
	550 Move X0, [X19+104]
	551 Move [X19+736], D0
	552 Compare X0, 0
	553 JumpIfEqual {7654}
	554 Add X8, X31, 4096
	555 Add X8, X8, 656
	556 Move X1, X31
	557 Call FontAsset.get_faceInfo, X0
	558 Add X0, X31, 4096
	559 Add X1, X31, 4096
	560 Add X0, X0, 512
	561 Add X1, X1, 656
	562 Move W2, 96
	563 Call 0x3EB2AC0
	564 Add X0, X31, 4096
	565 Add X0, X0, 512
	566 Move X1, X31
	567 Call FaceInfo.get_lineHeight, X0
	568 Move X8, [X24]
	569 Compare X8, 0
	570 JumpIfEqual {7654}
	571 Add X0, X8, 176
	572 Move X1, X31
	573 Move V10, V0
	574 Call FaceInfo.get_ascentLine, X0
	575 Move X8, [X24]
	576 Compare X8, 0
	577 JumpIfEqual {7654}
	578 Add X0, X8, 176
	579 Move X1, X31
	580 Move V11, V0
	581 Add X23, X19, 804
	582 Call FaceInfo.get_descentLine, X0
	583 Move V12, V0
	584 Add X8, X19, 748
	585 NotImplemented "Instruction MOVI not yet implemented."
	586 Move [X8], V0
	587 Move [X8+16], W31
	588 Move X1, [X21]
	589 Add X0, X19, 768
	590 Move S0, W31
	591 Call TextProcessingStack`1<Single>.SetDefault, X0, V0
	592 Move X8, -52178944
	593 Move X9, -52178944
	594 Move V1, [X8+2856]
	595 Move V0, [X9+55]
	596 Move X21, [X31+440]
	597 Move W8, 0x80000000
	598 Move [X19+800], W31
	599 Move [X23], X31
	600 Move [X23+8], X31
	601 Move [X23+16], W31
	602 Move [X19+5548], W31
	603 Move [X19+744], W31
	604 Move [X19+6596], W8
	605 Move [X31+144], D1
	606 Move [X19+824], D1
	607 Move [X19+52], V0
	608 Move [X19+848], W31
	609 Compare X21, 0
	610 JumpIfEqual {7654}
	611 Move [X31+472], S9
	612 Move X10, X21
	613 Move W8, [X25+240]
	614 Add X10, X10, 80
	615 Move X9, [X10]
	616 Move [X31+80], X10
	617 Compare X9, 0
	618 JumpIfEqual {7654}
	619 Move W9, [X9+24]
	620 Subtract W8, W8, 1
	621 Move X0, X21
	622 Move X1, X31
	623 Subtract W9, W9, 1
	624 NotImplemented "Instruction CMP not yet implemented."
	625 NotImplemented "Instruction CSEL not yet implemented."
	626 NotImplemented "Instruction CMP not yet implemented."
	627 NotImplemented "Instruction CSEL not yet implemented."
	628 Move V9, V13
	629 Move V13, V8
	630 Move [X31+128], W8
	631 Call TextInfo.ClearPageInfo, X0
	632 Move V0, [X25+40]
	633 Move V1, [X25+44]
	634 Move X9, X23
	635 Move S15, [X19+88]
	636 Move S8, [X19+92]
	637 Move [X31+92], S0
	638 Move V0, [X25+52]
	639 Move W8, 0xBF800000
	640 Move [X9+48], W31
	641 Move [X31+312], X9
	642 Move [X31+56], S0
	643 Move [X31+64], S1
	644 Move [X9+4], W31
	645 Move [X19+860], W8
	646 Move X24, 0x4B1000
	647 Move X24, [X24+2888]
	648 Move [X31+160], X26
	649 Move X0, [X24]
	650 Move W8, [X0+224]
	651 Compare W8, 0
	652 JumpIfNotEqual {655}
	653 Call 0x1C17DFC
	654 Move X0, [X24]
	655 Move X8, [X0+184]
	656 Move X1, X31
	657 Move X8, [X8]
	658 Move [X19+864], X8
	659 Move X8, [X0+184]
	660 Move X0, X21
	661 Move X8, [X8+8]
	662 Move [X19+872], X8
	663 Call TextInfo.ClearLineInfo, X0
	664 Add X8, X31, 4096
	665 Add X0, X31, 4096
	666 NotImplemented "Instruction MOVI not yet implemented."
	667 Add X8, X8, 384
	668 Add X0, X0, 632
	669 Move TEMP, 0
	670 Not TEMP
	671 Move W1, TEMP
	672 Move W2, W31
	673 Move X3, X31
	674 Move [X19+888], W31
	675 Move [X19+6600], W31
	676 Move [X19+880], D0
	677 Move [X31+4744], W31
	678 Move [X8+260], W31
	679 NotImplemented "Instruction STRH not yet implemented."
	680 Call CharacterSubstitution..ctor, X0, X1, X2
	681 Move W8, [X25+120]
	682 Add X1, X19, 896
	683 Move TEMP, 0
	684 Not TEMP
	685 Move W2, TEMP
	686 Move TEMP, 0
	687 Not TEMP
	688 Move W3, TEMP
	689 Move X0, X19
	690 Move X4, X21
	691 Move X5, X31
	692 Move [X31+140], W8
	693 Move [X31+184], X1
	694 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	695 Add X1, X19, 1816
	696 Move TEMP, 0
	697 Not TEMP
	698 Move W2, TEMP
	699 Move TEMP, 0
	700 Not TEMP
	701 Move W3, TEMP
	702 Move X0, X19
	703 Move X4, X21
	704 Move X5, X31
	705 Move [X31+152], X1
	706 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	707 Add X1, X19, 2736
	708 Move TEMP, 0
	709 Not TEMP
	710 Move W2, TEMP
	711 Move TEMP, 0
	712 Not TEMP
	713 Move W3, TEMP
	714 Move X0, X19
	715 Move X4, X21
	716 Move X5, X31
	717 Move [X31+104], X1
	718 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	719 Add X1, X19, 3656
	720 Move TEMP, 0
	721 Not TEMP
	722 Move W2, TEMP
	723 Move TEMP, 0
	724 Not TEMP
	725 Move W3, TEMP
	726 Move X0, X19
	727 Move X4, X21
	728 Move X5, X31
	729 Move [X31+232], X1
	730 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	731 Move W8, 0x11E0
	732 Add X1, X19, X8
	733 Move TEMP, 0
	734 Not TEMP
	735 Move W2, TEMP
	736 Move TEMP, 0
	737 Not TEMP
	738 Move W3, TEMP
	739 Move X0, X19
	740 Move X4, X21
	741 Move X5, X31
	742 Move [X31+48], X1
	743 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	744 Move X8, 0x4B0000
	745 Move X8, [X8+2936]
	746 Move X1, [X8]
	747 Move W8, 0x15E8
	748 Add X0, X19, X8
	749 Move [X31+120], X0
	750 Call TextProcessingStack`1<WordWrapState>.Clear, X0
	751 Move X8, 0x4B0000
	752 Move X8, [X8+2896]
	753 Move X8, [X8]
	754 Move X8, [X8+184]
	755 Move [X8+8], W31
	756 Move X8, [X25+104]
	757 Move [X31+4604], W31
	758 Move [X31+96], X8
	759 Move X8, [X19+32]
	760 Compare X8, 0
	761 JumpIfEqual {7654}
	762 Add X13, X19, 424
	763 Add X10, X19, 428
	764 Move [X31+64], X10
	765 Move [X31+72], X13
	766 Move X13, -52195328
	767 Move V5, [X13+92]
	768 NotImplemented "Instruction SCVTF not yet implemented."
	769 Subtract S2, S11, S12
	770 Move S0, W31
	771 NotImplemented "Instruction FDIV not yet implemented."
	772 Move [X31+44], S5
	773 Subtract S5, S10, S2
	774 Move S2, W31
	775 Add X10, X27, 1092
	776 Move [X31+392], S2
	777 NotImplemented "Instruction FMAXNM not yet implemented."
	778 NotImplemented "Instruction FMAXNM not yet implemented."
	779 Multiply S0, S1, S13
	780 Move X11, -52195328
	781 Move [X31+248], X10
	782 Add X10, X19, 856
	783 Multiply S0, S0, S9
	784 Move X12, -52199424
	785 Move [X31+304], X10
	786 Add X10, X19, 56
	787 Move V4, [X11+816]
	788 Move [X31+132], S5
	789 Move [X31+140], S0
	790 Multiply S1, S0, S5
	791 Move V8, V0
	792 Move V0, [X31+472]
	793 Move [X31+264], X10
	794 Subtract W10, W20, 1
	795 Move V3, [X12+3880]
	796 Move [X31+228], W10
	797 Move W10, 0x15A0
	798 Add X10, X19, X10
	799 Move [X31+112], X10
	800 Multiply S0, S0, S4
	801 Move W10, 1
	802 Add X22, X21, 48
	803 Move [X31+172], S1
	804 Move [X31+180], S4
	805 Add S1, S2, S3
	806 Add S2, S6, S3
	807 Multiply S0, S9, S0
	808 Move [X31+180], W10
	809 Move W10, 1
	810 Move [X31+40], W31
	811 Move [X31+192], W31
	812 Move W24, W31
	813 Move W9, W31
	814 Move W26, 392
	815 Move [X31+36], S6
	816 Move [X31+272], S2
	817 Move [X31+336], S0
	818 Move [X31+292], S1
	819 Move [X31+364], S1
	820 Move [X31+224], W10
	821 Move [X31+456], X23
	822 Move [X31+472], X22
	823 Move W10, [X8+24]
	824 NotImplemented "Instruction CMP not yet implemented."
	825 Add X8, X8, W9
	826 Move W8, [X8+36]
	827 Compare W8, 0
	828 JumpIfEqual {4920}
	829 NotImplemented "Instruction CMP not yet implemented."
	830 Move [X31+4748], W8
	831 Add X0, X31, 4096
	832 Add X0, X0, 652
	833 Move X1, X31
	834 Call UInt32.ToString, X0
	835 Move X22, X0
	836 Add X0, X31, 4096
	837 Add X0, X0, 508
	838 Move X1, X31
	839 Call Int32.ToString, X0
	840 Move X8, 0x4A7000
	841 Move X8, [X8+1024]
	842 Move X9, 0x4A7000
	843 Move X3, X0
	844 Move X1, X22
	845 Move X8, [X8]
	846 Move X9, [X9+1040]
	847 Move X4, X31
	848 Move X0, X8
	849 Move X2, [X9]
	850 Call String.Concat, X0, X1, X2, X3
	851 Move X8, [X28]
	852 Move X22, X0
	853 Move W9, [X8+224]
	854 Compare W9, 0
	855 JumpIfNotEqual {858}
	856 Move X0, X8
	857 Call 0x1C17DFC
	858 Move X0, X22
	859 Move X1, X31
	860 Call Debug.LogError, X0
	861 Move W9, [X23]
	862 Move W8, [X31+4748]
	863 Move X22, [X31+472]
	864 Move [X31+4728], W9
	865 Move W9, 3
	866 Move [X31+4732], W9
	867 NotImplemented "Instruction CMP not yet implemented."
	868 NotImplemented "Instruction CMP not yet implemented."
	869 Move W8, [X25+181]
	870 Compare W8, 0
	871 JumpIfEqual {892}
	872 Move W8, 257
	873 NotImplemented "Instruction STRH not yet implemented."
	874 Move W8, [X31+4604]
	875 Move X1, [X19+32]
	876 Add X3, X31, 4096
	877 Add X3, X3, 460
	878 Add W2, W8, 1
	879 Move X0, X19
	880 Move X4, X25
	881 Move X5, X21
	882 Move X6, X31
	883 Call TextGenerator.ValidateHtmlTag, X0, X1, X2, X3, X4, X5
	884 Move TEMP, X0
	885 And TEMP, TEMP, 1
	886 Compare TEMP, 1
	887 JumpIfNotEqual {905}
	888 Move W8, [X31+4556]
	889 Move [X31+4604], W8
	890 Move W8, [X27]
	891 NotImplemented "Instruction CMP not yet implemented."
	892 Move X8, [X22]
	893 Compare X8, 0
	894 JumpIfEqual {7654}
	895 NotImplemented "Instruction LDRSW not yet implemented."
	896 Move W10, [X8+24]
	897 NotImplemented "Instruction CMP not yet implemented."
	898 NotImplemented "Instruction MADD not yet implemented."
	899 Move W9, [X8+40]
	900 Move [X27], W9
	901 Move W9, [X8+96]
	902 Move [X19+120], W9
	903 Move X8, [X8+64]
	904 Move [X19+104], X8
	905 Move X22, [X22]
	906 Compare X22, 0
	907 JumpIfEqual {7654}
	908 Move W21, [X19+804]
	909 Move W8, [X22+24]
	910 Move W29, 96
	911 Move [X31+424], W24
	912 NotImplemented "Instruction CMP not yet implemented."
	913 Move X24, W21
	914 NotImplemented "Instruction MADD not yet implemented."
	915 Move W23, [X19+120]
	916 Move W20, [X8+100]
	917 Move [X27+1], W31
	918 Move W8, [X31+4728]
	919 Move [X31+452], W31
	920 NotImplemented "Instruction CMP not yet implemented."
	921 Move W8, [X31+4732]
	922 Move W9, 0x2026
	923 Move W10, 1
	924 NotImplemented "Instruction CMP not yet implemented."
	925 Move W9, 1
	926 Move [X31+4748], W8
	927 Move [X31+452], W9
	928 Move [X27], W10
	929 NotImplemented "Instruction CMP not yet implemented."
	930 Move X8, [X31+400]
	931 Move X0, [X8]
	932 Compare X0, 0
	933 JumpIfEqual {7654}
	934 Move X1, X31
	935 Call FontAsset.get_characterLookupTable, X0
	936 Compare X0, 0
	937 JumpIfEqual {7654}
	938 Move X8, 0x4B0000
	939 Move X8, [X8+592]
	940 Move W1, 3
	941 Move X2, [X8]
	942 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	943 Move W8, [X22+24]
	944 NotImplemented "Instruction CMP not yet implemented."
	945 NotImplemented "Instruction MADD not yet implemented."
	946 Move [X8+48], X0
	947 Move X8, 0x4B0000
	948 Move X8, [X8+2896]
	949 Move W10, 1
	950 Move W9, 1
	951 Move [X31+452], W9
	952 Move X8, [X8]
	953 Move X8, [X8+184]
	954 Move [X8+8], W10
	955 Move X8, [X31+456]
	956 Move W21, [X8]
	957 Move X8, [X19+6656]
	958 NotImplemented "Instruction NOP not yet implemented."
	959 NotImplemented "Instruction MADD not yet implemented."
	960 Move W11, 1
	961 Move [X9+40], W11
	962 Move [X9+48], X8
	963 Move X8, [X19+6664]
	964 Move [X9+64], X8
	965 Move X8, [X19+6672]
	966 Move [X9+88], X8
	967 Move W8, [X19+6680]
	968 Move [X9+96], W8
	969 Move X8, 0x4B0000
	970 Move X8, [X8+2896]
	971 Add W9, W21, 1
	972 Move X8, [X8]
	973 Move X8, [X8+184]
	974 Move [X8+8], W11
	975 Move W8, 3
	976 Move [X31+4728], W9
	977 Move [X31+4732], W8
	978 Move W8, [X25+228]
	979 Move W22, [X31+4748]
	980 NotImplemented "Instruction CMP not yet implemented."
	981 NotImplemented "Instruction CMP not yet implemented."
	982 Move X22, [X31+472]
	983 Move W24, [X31+424]
	984 Move X8, [X22]
	985 Compare X8, 0
	986 JumpIfEqual {7654}
	987 Move W9, [X8+24]
	988 Move X28, 0x442000
	989 Move X28, [X28+2600]
	990 Move X23, [X31+456]
	991 NotImplemented "Instruction CMP not yet implemented."
	992 NotImplemented "Instruction SMADDL not yet implemented."
	993 Add W9, W21, 1
	994 Move X21, [X31+440]
	995 Move W10, 0x200B
	996 Move [X8+416], W31
	997 NotImplemented "Instruction STRH not yet implemented."
	998 Move [X8+108], W31
	999 Move [X23], W9
	1000 Move V13, V8
	1001 Move W8, [X31+4604]
	1002 Move V8, V13
	1003 Add W9, W8, 1
	1004 Move [X31+4604], W9
	1005 Move X8, [X19+32]
	1006 Compare X8, 0
	1007 JumpIfNotEqual {823}
	1008 Move W8, [X27]
	1009 NotImplemented "Instruction CMP not yet implemented."
	1010 Move W8, [X19+292]
	1011 Move X21, [X31+440]
	1012 Move TEMP, X8
	1013 And TEMP, TEMP, 16
	1014 Compare TEMP, 16
	1015 JumpIfEqual {1060}
	1016 Move X24, [X31+400]
	1017 Move TEMP, X8
	1018 And TEMP, TEMP, 8
	1019 Compare TEMP, 8
	1020 JumpIfEqual {1088}
	1021 Move S0, 1
	1022 Move [X31+372], S0
	1023 Move TEMP, X8
	1024 And TEMP, TEMP, 32
	1025 Compare TEMP, 32
	1026 JumpIfNotEqual {1117}
	1027 Move X8, 0x444000
	1028 Move X8, [X8+368]
	1029 Move X0, [X8]
	1030 Move W8, [X0+224]
	1031 Compare W8, 0
	1032 JumpIfNotEqual {1034}
	1033 Call 0x1C17DFC
	1034 Move W0, W22
	1035 Move X1, X31
	1036 Call Char.IsLower, X0
	1037 Move TEMP, X0
	1038 And TEMP, TEMP, 1
	1039 Compare TEMP, 1
	1040 JumpIfNotEqual {1117}
	1041 Move X8, 0x444000
	1042 Move X8, [X8+368]
	1043 Move W22, [X31+4748]
	1044 Move X0, [X8]
	1045 Move W8, [X0+224]
	1046 Compare W8, 0
	1047 JumpIfNotEqual {1049}
	1048 Call 0x1C17DFC
	1049 Move W0, W22
	1050 Move X1, X31
	1051 Call Char.ToUpper, X0
	1052 Move V0, [X31+44]
	1053 And W8, W0, 0xFFFF
	1054 Move [X31+4748], W8
	1055 Move [X31+372], S0
	1056 Move X21, [X31+440]
	1057 Move X24, [X31+400]
	1058 Move S0, 1
	1059 Move [X31+372], S0
	1060 Move X8, 0x444000
	1061 Move X8, [X8+368]
	1062 Move X24, [X31+400]
	1063 Move X0, [X8]
	1064 Move W8, [X0+224]
	1065 Compare W8, 0
	1066 JumpIfNotEqual {1068}
	1067 Call 0x1C17DFC
	1068 Move W0, W22
	1069 Move X1, X31
	1070 Call Char.IsLower, X0
	1071 Move S0, 1
	1072 Move [X31+372], S0
	1073 Move TEMP, X0
	1074 And TEMP, TEMP, 1
	1075 Compare TEMP, 1
	1076 JumpIfNotEqual {1117}
	1077 Move X8, 0x444000
	1078 Move X8, [X8+368]
	1079 Move W22, [X31+4748]
	1080 Move X0, [X8]
	1081 Move W8, [X0+224]
	1082 Compare W8, 0
	1083 JumpIfNotEqual {1085}
	1084 Call 0x1C17DFC
	1085 Move W0, W22
	1086 Move X1, X31
	1087 Call Char.ToUpper, X0
	1088 Move X8, 0x444000
	1089 Move X8, [X8+368]
	1090 Move X0, [X8]
	1091 Move W8, [X0+224]
	1092 Compare W8, 0
	1093 JumpIfNotEqual {1095}
	1094 Call 0x1C17DFC
	1095 Move W0, W22
	1096 Move X1, X31
	1097 Call Char.IsUpper, X0
	1098 Move S0, 1
	1099 Move [X31+372], S0
	1100 Move TEMP, X0
	1101 And TEMP, TEMP, 1
	1102 Compare TEMP, 1
	1103 JumpIfNotEqual {1117}
	1104 Move X8, 0x444000
	1105 Move X8, [X8+368]
	1106 Move W22, [X31+4748]
	1107 Move X0, [X8]
	1108 Move W8, [X0+224]
	1109 Compare W8, 0
	1110 JumpIfNotEqual {1112}
	1111 Call 0x1C17DFC
	1112 Move W0, W22
	1113 Move X1, X31
	1114 Call Char.ToLower, X0
	1115 And W8, W0, 0xFFFF
	1116 Move [X31+4748], W8
	1117 Move W8, [X27]
	1118 Move X22, [X31+472]
	1119 NotImplemented "Instruction CMP not yet implemented."
	1120 NotImplemented "Instruction CMP not yet implemented."
	1121 Move X8, [X22]
	1122 Compare X8, 0
	1123 JumpIfEqual {7654}
	1124 Move X9, [X31+456]
	1125 Move W10, [X8+24]
	1126 NotImplemented "Instruction LDRSW not yet implemented."
	1127 NotImplemented "Instruction CMP not yet implemented."
	1128 NotImplemented "Instruction MADD not yet implemented."
	1129 Move X22, [X8+48]
	1130 Compare X22, 0
	1131 JumpIfEqual {7654}
	1132 Move X9, 0x4B0000
	1133 Move X8, [X22]
	1134 Move X9, [X9+2880]
	1135 Move W10, [X8+304]
	1136 Move X1, [X9]
	1137 Move W9, [X1+304]
	1138 NotImplemented "Instruction CMP not yet implemented."
	1139 Move X8, [X8+200]
	1140 Add X8, X8, X9
	1141 NotImplemented "Instruction LDUR not yet implemented."
	1142 NotImplemented "Instruction CMP not yet implemented."
	1143 Move X0, X22
	1144 Move X1, X31
	1145 Call TextElement.get_textAsset, X0
	1146 Compare X0, 0
	1147 JumpIfEqual {1155}
	1148 Move X8, 0x4B0000
	1149 Move X9, [X0]
	1150 Move X8, [X8+1864]
	1151 Move W11, [X9+304]
	1152 Move X8, [X8]
	1153 Move W10, [X8+304]
	1154 NotImplemented "Instruction CMP not yet implemented."
	1155 Move X8, X31
	1156 Move X8, [X22]
	1157 Compare X8, 0
	1158 JumpIfEqual {7654}
	1159 Move X23, [X31+456]
	1160 Move W11, [X8+24]
	1161 NotImplemented "Instruction LDRSW not yet implemented."
	1162 NotImplemented "Instruction CMP not yet implemented."
	1163 NotImplemented "Instruction MADD not yet implemented."
	1164 Move X10, [X10+48]
	1165 Move [X19+5512], X10
	1166 Compare X10, 0
	1167 JumpIfEqual {1306}
	1168 NotImplemented "Instruction MADD not yet implemented."
	1169 Move X10, [X12+64]
	1170 Move [X19+104], X10
	1171 Move X13, [X12+88]
	1172 Move [X19+112], X13
	1173 Move W12, [X12+96]
	1174 Move [X19+120], W12
	1175 Move W12, [X31+452]
	1176 Compare W12, 0
	1177 JumpIfEqual {1189}
	1178 Move X12, [X19+32]
	1179 Compare X12, 0
	1180 JumpIfEqual {7654}
	1181 NotImplemented "Instruction LDRSW not yet implemented."
	1182 Move W14, [X12+24]
	1183 NotImplemented "Instruction CMP not yet implemented."
	1184 Add X12, X12, X13
	1185 Move W12, [X12+36]
	1186 NotImplemented "Instruction CMP not yet implemented."
	1187 Move W12, [X19+808]
	1188 NotImplemented "Instruction CMP not yet implemented."
	1189 Compare X10, 0
	1190 JumpIfEqual {7654}
	1191 Move V11, [X19+244]
	1192 Add X0, X10, 176
	1193 Move X1, X31
	1194 Call FaceInfo.get_pointSize, X0
	1195 Move X8, [X19+104]
	1196 Compare X8, 0
	1197 JumpIfEqual {7654}
	1198 Move W22, W0
	1199 Add X0, X8, 176
	1200 Move X1, X31
	1201 Call FaceInfo.get_scale, X0
	1202 Move W8, [X25+189]
	1203 Move V8, V0
	1204 Move W9, [X31+4748]
	1205 Move V0, [X31+328]
	1206 NotImplemented "Instruction CMP not yet implemented."
	1207 Move S1, 1
	1208 Move W8, 0x2026
	1209 NotImplemented "Instruction FCSEL not yet implemented."
	1210 NotImplemented "Instruction CMP not yet implemented."
	1211 Move W9, [X31+452]
	1212 NotImplemented "Instruction CSET not yet implemented."
	1213 Move S10, W31
	1214 Move S9, W31
	1215 And W8, W9, W8
	1216 Move TEMP, X8
	1217 And TEMP, TEMP, 1
	1218 Compare TEMP, 1
	1219 JumpIfEqual {1234}
	1220 Move X8, [X24]
	1221 Compare X8, 0
	1222 JumpIfEqual {7654}
	1223 Add X0, X8, 176
	1224 Move X1, X31
	1225 Call FaceInfo.get_ascentLine, X0
	1226 Move X8, [X24]
	1227 Compare X8, 0
	1228 JumpIfEqual {7654}
	1229 Add X0, X8, 176
	1230 Move X1, X31
	1231 Move V9, V0
	1232 Call FaceInfo.get_descentLine, X0
	1233 Move V10, V0
	1234 Move X8, [X19+5512]
	1235 Compare X8, 0
	1236 JumpIfEqual {7654}
	1237 Move X0, [X8+32]
	1238 Move [X31+376], S9
	1239 Compare X0, 0
	1240 JumpIfEqual {7654}
	1241 Move V13, [X19+240]
	1242 Move V14, [X8+44]
	1243 Move X1, X31
	1244 Call Glyph.get_scale, X0
	1245 Move X8, [X24]
	1246 Compare X8, 0
	1247 JumpIfEqual {7654}
	1248 Add X0, X8, 176
	1249 Move X1, X31
	1250 Move V9, V0
	1251 Move [X31+360], S10
	1252 Call FaceInfo.get_baseline, X0
	1253 Move X8, [X24]
	1254 Compare X8, 0
	1255 JumpIfEqual {7654}
	1256 Move V15, [X19+240]
	1257 Add X0, X8, 176
	1258 Move X1, X31
	1259 Move V10, V0
	1260 Call FaceInfo.get_scale, X0
	1261 Move X8, [X31+472]
	1262 Move X8, [X8]
	1263 Compare X8, 0
	1264 JumpIfEqual {7654}
	1265 Move W9, [X19+804]
	1266 Move W10, [X8+24]
	1267 NotImplemented "Instruction CMP not yet implemented."
	1268 Move V1, [X31+372]
	1269 NotImplemented "Instruction SCVTF not yet implemented."
	1270 Move X10, W9
	1271 NotImplemented "Instruction MADD not yet implemented."
	1272 Multiply S1, S1, S11
	1273 NotImplemented "Instruction FDIV not yet implemented."
	1274 Multiply S1, S1, S8
	1275 Multiply S1, S1, S12
	1276 Multiply S2, S1, S13
	1277 Multiply S2, S2, S14
	1278 Multiply S8, S2, S9
	1279 Move W11, 1
	1280 Move [X10+40], W11
	1281 Move [X10+364], S8
	1282 Move V2, [X19+216]
	1283 Move X22, [X31+472]
	1284 Multiply S1, S1, S10
	1285 Multiply S1, S1, S15
	1286 Multiply S0, S1, S0
	1287 Move [X31+392], S2
	1288 Move [X31+388], S0
	1289 Move W10, [X31+4748]
	1290 Move X8, [X22]
	1291 Move W9, 173
	1292 Move S1, W31
	1293 NotImplemented "Instruction CMP not yet implemented."
	1294 NotImplemented "Instruction CCMP not yet implemented."
	1295 Move S0, W31
	1296 NotImplemented "Instruction FCSEL not yet implemented."
	1297 Move [X31+388], S0
	1298 Compare X8, 0
	1299 JumpIfEqual {7654}
	1300 Move X23, [X31+456]
	1301 Move S0, W31
	1302 Move [X31+376], S0
	1303 Move S0, W31
	1304 Move W9, [X23]
	1305 Move [X31+360], S0
	1306 Move X28, 0x442000
	1307 Move X28, [X28+2600]
	1308 Move W24, [X31+424]
	1309 Move X9, [X9+200]
	1310 Add X9, X9, X10
	1311 NotImplemented "Instruction LDUR not yet implemented."
	1312 NotImplemented "Instruction CMP not yet implemented."
	1313 NotImplemented "Instruction CSEL not yet implemented."
	1314 Move X0, X22
	1315 Move X1, X31
	1316 Move [X19+224], X8
	1317 Call TextElement.get_glyphIndex, X0
	1318 Move [X19+5500], W0
	1319 Move W8, [X31+4748]
	1320 NotImplemented "Instruction CMP not yet implemented."
	1321 Add W8, W0, 0xE000
	1322 Move [X31+4748], W8
	1323 Move S0, 1
	1324 Move S1, 1
	1325 Move S2, 1
	1326 Move S3, 1
	1327 Move X0, X31
	1328 Call 0x1E44664
	1329 Move [X19+5504], W0
	1330 Move X0, [X19+104]
	1331 Compare X0, 0
	1332 JumpIfEqual {7654}
	1333 Move V8, [X19+244]
	1334 Add X8, X31, 4096
	1335 Add X8, X8, 656
	1336 Move X1, X31
	1337 Call FontAsset.get_faceInfo, X0
	1338 Add X0, X31, 4096
	1339 Add X1, X31, 4096
	1340 Add X0, X0, 512
	1341 Add X1, X1, 656
	1342 Move W2, 96
	1343 Call 0x3EB2AC0
	1344 Add X0, X31, 4096
	1345 Add X0, X0, 512
	1346 Move X1, X31
	1347 Call FaceInfo.get_pointSize, X0
	1348 Move X9, [X24]
	1349 Compare X9, 0
	1350 JumpIfEqual {7654}
	1351 Add X8, X31, 4096
	1352 Move W28, W0
	1353 Add X8, X8, 656
	1354 Move X0, X9
	1355 Move X1, X31
	1356 Call FontAsset.get_faceInfo, X0
	1357 Add X0, X31, 4096
	1358 Add X1, X31, 4096
	1359 Add X0, X0, 512
	1360 Add X1, X1, 656
	1361 Move W2, 96
	1362 Call 0x3EB2AC0
	1363 Add X0, X31, 4096
	1364 Add X0, X0, 512
	1365 Move X1, X31
	1366 Call FaceInfo.get_scale, X0
	1367 Move W9, [X25+189]
	1368 Move V1, [X31+328]
	1369 Move X8, [X19+224]
	1370 Move S2, 1
	1371 NotImplemented "Instruction CMP not yet implemented."
	1372 NotImplemented "Instruction FCSEL not yet implemented."
	1373 Compare X8, 0
	1374 JumpIfEqual {7654}
	1375 NotImplemented "Instruction SCVTF not yet implemented."
	1376 NotImplemented "Instruction FDIV not yet implemented."
	1377 Multiply S0, S2, S0
	1378 Add X0, X8, 72
	1379 Move X1, X31
	1380 Multiply S10, S0, S1
	1381 Call FaceInfo.get_pointSize, X0
	1382 Move V13, [X19+244]
	1383 NotImplemented "Instruction CMP not yet implemented."
	1384 Move X8, [X19+224]
	1385 Compare X8, 0
	1386 JumpIfEqual {7654}
	1387 Add X0, X8, 72
	1388 Move X1, X31
	1389 Call FaceInfo.get_pointSize, X0
	1390 Move X8, [X19+224]
	1391 Compare X8, 0
	1392 JumpIfEqual {7654}
	1393 Move W28, W0
	1394 Add X0, X8, 72
	1395 Move X1, X31
	1396 Call FaceInfo.get_scale, X0
	1397 Move X0, [X22+32]
	1398 Compare X0, 0
	1399 JumpIfEqual {7654}
	1400 Move W8, [X25+189]
	1401 Move V11, V0
	1402 Move V0, [X31+328]
	1403 Move V14, [X22+44]
	1404 NotImplemented "Instruction CMP not yet implemented."
	1405 Move S1, 1
	1406 Move X1, X31
	1407 NotImplemented "Instruction FCSEL not yet implemented."
	1408 Call Glyph.get_scale, X0
	1409 Move X8, [X19+224]
	1410 Compare X8, 0
	1411 JumpIfEqual {7654}
	1412 Add X0, X8, 72
	1413 Move X1, X31
	1414 Move V9, V0
	1415 Move V8, V10
	1416 Call FaceInfo.get_ascentLine, X0
	1417 Move X8, [X19+224]
	1418 Move [X31+376], S0
	1419 Compare X8, 0
	1420 JumpIfEqual {7654}
	1421 Add X0, X8, 72
	1422 Move X1, X31
	1423 Move V15, V13
	1424 Call FaceInfo.get_baseline, X0
	1425 Move X8, [X19+224]
	1426 Compare X8, 0
	1427 JumpIfEqual {7654}
	1428 Move V13, [X19+240]
	1429 Add X0, X8, 72
	1430 Move X1, X31
	1431 Move V10, V0
	1432 Call FaceInfo.get_scale, X0
	1433 Move X8, [X19+224]
	1434 Compare X8, 0
	1435 JumpIfEqual {7654}
	1436 NotImplemented "Instruction SCVTF not yet implemented."
	1437 Multiply S3, S8, S10
	1438 NotImplemented "Instruction FDIV not yet implemented."
	1439 Multiply S3, S3, S13
	1440 Multiply S1, S1, S11
	1441 Multiply S2, S14, S9
	1442 Multiply S10, S3, S0
	1443 Multiply S0, S1, S12
	1444 Add X0, X8, 72
	1445 Move X1, X31
	1446 Multiply S8, S0, S2
	1447 Call FaceInfo.get_descentLine, X0
	1448 Move V11, [X31+376]
	1449 Move X8, [X24]
	1450 Compare X8, 0
	1451 JumpIfEqual {7654}
	1452 Add X0, X8, 176
	1453 Move X1, X31
	1454 Call FaceInfo.get_pointSize, X0
	1455 Move X8, [X24]
	1456 Compare X8, 0
	1457 JumpIfEqual {7654}
	1458 Move W28, W0
	1459 Add X0, X8, 176
	1460 Move X1, X31
	1461 Call FaceInfo.get_scale, X0
	1462 Move W9, [X25+189]
	1463 Move V8, V0
	1464 Move V0, [X31+328]
	1465 Move X8, [X24]
	1466 NotImplemented "Instruction CMP not yet implemented."
	1467 Move S1, 1
	1468 NotImplemented "Instruction FCSEL not yet implemented."
	1469 Compare X8, 0
	1470 JumpIfEqual {7654}
	1471 Add X0, X8, 176
	1472 Move X1, X31
	1473 Call FaceInfo.get_ascentLine, X0
	1474 Move X0, [X22+32]
	1475 Compare X0, 0
	1476 JumpIfEqual {7654}
	1477 Add X8, X31, 4096
	1478 Add X8, X8, 656
	1479 Move X1, X31
	1480 Move V9, V0
	1481 Move [X31+436], S10
	1482 Call Glyph.get_metrics, X0
	1483 Move V0, [X31+297]
	1484 Move W8, [X31+4768]
	1485 Add X0, X31, 4096
	1486 Add X0, X0, 432
	1487 Move X1, X31
	1488 Move [X31+283], V0
	1489 Move [X31+4544], W8
	1490 Call GlyphMetrics.get_height, X0
	1491 Move X0, [X22+32]
	1492 Compare X0, 0
	1493 JumpIfEqual {7654}
	1494 Move [X31+392], S0
	1495 Move V0, [X22+44]
	1496 Move X1, X31
	1497 Move [X31+416], S0
	1498 Call Glyph.get_scale, X0
	1499 Move X8, [X24]
	1500 Compare X8, 0
	1501 JumpIfEqual {7654}
	1502 Add X0, X8, 176
	1503 Move X1, X31
	1504 Move V11, V0
	1505 Move V10, V9
	1506 Move V14, V13
	1507 Call FaceInfo.get_ascentLine, X0
	1508 Move X8, [X24]
	1509 Compare X8, 0
	1510 JumpIfEqual {7654}
	1511 Add X0, X8, 176
	1512 Move X1, X31
	1513 Move V12, V0
	1514 Move V9, V8
	1515 Call FaceInfo.get_baseline, X0
	1516 Move X8, [X24]
	1517 Compare X8, 0
	1518 JumpIfEqual {7654}
	1519 Move V8, [X19+240]
	1520 Add X0, X8, 176
	1521 Move X1, X31
	1522 Move V13, V0
	1523 Call FaceInfo.get_scale, X0
	1524 Move X8, [X19+104]
	1525 Compare X8, 0
	1526 JumpIfEqual {7654}
	1527 Move V2, [X31+392]
	1528 Move V3, [X31+436]
	1529 Move V4, [X31+416]
	1530 NotImplemented "Instruction SCVTF not yet implemented."
	1531 NotImplemented "Instruction FDIV not yet implemented."
	1532 Multiply S3, S3, S13
	1533 NotImplemented "Instruction FDIV not yet implemented."
	1534 Multiply S2, S2, S4
	1535 Multiply S3, S3, S8
	1536 Multiply S1, S1, S9
	1537 Multiply S2, S2, S11
	1538 Multiply S10, S3, S0
	1539 Multiply S0, S1, S15
	1540 Multiply S9, S0, S2
	1541 NotImplemented "Instruction FDIV not yet implemented."
	1542 Add X0, X8, 176
	1543 Move X1, X31
	1544 Multiply S11, S8, S12
	1545 Call FaceInfo.get_descentLine, X0
	1546 Multiply S0, S8, S0
	1547 Move V8, V9
	1548 Move [X31+360], S0
	1549 Move [X19+5512], X22
	1550 Move X22, [X31+472]
	1551 Move X8, [X22]
	1552 Compare X8, 0
	1553 JumpIfEqual {7654}
	1554 Move W9, [X19+804]
	1555 Move W10, [X8+24]
	1556 Move [X31+376], S11
	1557 Move [X31+388], S10
	1558 NotImplemented "Instruction CMP not yet implemented."
	1559 Move X10, W9
	1560 NotImplemented "Instruction MADD not yet implemented."
	1561 Move W11, 2
	1562 Move [X10+40], W11
	1563 Move [X10+364], S8
	1564 Move X11, [X19+224]
	1565 Move S0, W31
	1566 Move [X31+392], S0
	1567 Move [X10+72], X11
	1568 Move X11, [X19+104]
	1569 Move [X10+64], X11
	1570 Move W11, [X19+120]
	1571 Move [X10+96], W11
	1572 Move [X19+120], W23
	1573 Move X23, [X31+456]
	1574 Move W10, [X31+4748]
	1575 Move W11, 173
	1576 Move S0, W31
	1577 NotImplemented "Instruction CMP not yet implemented."
	1578 NotImplemented "Instruction CCMP not yet implemented."
	1579 NotImplemented "Instruction FCSEL not yet implemented."
	1580 Move W11, [X8+24]
	1581 NotImplemented "Instruction CMP not yet implemented."
	1582 NotImplemented "Instruction SMADDL not yet implemented."
	1583 NotImplemented "Instruction STRH not yet implemented."
	1584 Move V0, [X19+244]
	1585 Move [X8+104], S0
	1586 Move W9, [X19+428]
	1587 Move [X8+368], W9
	1588 Move X8, [X22]
	1589 Compare X8, 0
	1590 JumpIfEqual {7654}
	1591 NotImplemented "Instruction LDRSW not yet implemented."
	1592 Move W10, [X8+24]
	1593 NotImplemented "Instruction CMP not yet implemented."
	1594 Move W10, [X19+432]
	1595 NotImplemented "Instruction NOP not yet implemented."
	1596 NotImplemented "Instruction MADD not yet implemented."
	1597 Move [X8+372], W10
	1598 Move X8, [X22]
	1599 Compare X8, 0
	1600 JumpIfEqual {7654}
	1601 NotImplemented "Instruction LDRSW not yet implemented."
	1602 Move W10, [X8+24]
	1603 NotImplemented "Instruction CMP not yet implemented."
	1604 Move W10, [X19+436]
	1605 NotImplemented "Instruction NOP not yet implemented."
	1606 NotImplemented "Instruction MADD not yet implemented."
	1607 Move [X8+380], W10
	1608 Move X8, [X22]
	1609 Compare X8, 0
	1610 JumpIfEqual {7654}
	1611 Move X9, [X31+264]
	1612 Move W10, [X9+16]
	1613 Move V0, [X9]
	1614 NotImplemented "Instruction LDRSW not yet implemented."
	1615 Move [X31+4768], W10
	1616 Move [X31+297], V0
	1617 Move W10, [X8+24]
	1618 NotImplemented "Instruction CMP not yet implemented."
	1619 Move W10, [X31+4768]
	1620 Move V0, [X31+297]
	1621 NotImplemented "Instruction NOP not yet implemented."
	1622 NotImplemented "Instruction MADD not yet implemented."
	1623 Add X8, X8, 392
	1624 Move [X8+16], W10
	1625 Move [X8], V0
	1626 Move X8, [X22]
	1627 Compare X8, 0
	1628 JumpIfEqual {7654}
	1629 NotImplemented "Instruction LDRSW not yet implemented."
	1630 Move W10, [X8+24]
	1631 NotImplemented "Instruction CMP not yet implemented."
	1632 NotImplemented "Instruction MADD not yet implemented."
	1633 Move W10, [X19+292]
	1634 Move X0, [X8+56]
	1635 Move [X8+412], W10
	1636 Compare X0, 0
	1637 JumpIfNotEqual {1644}
	1638 Move X8, [X19+5512]
	1639 Compare X8, 0
	1640 JumpIfEqual {7654}
	1641 Move X0, [X8+32]
	1642 Compare X0, 0
	1643 JumpIfEqual {7654}
	1644 Add X8, X31, 4096
	1645 Add X8, X8, 656
	1646 Move X1, X31
	1647 Call Glyph.get_metrics, X0
	1648 Move V0, [X31+297]
	1649 Move W8, [X31+4768]
	1650 Move W22, [X31+4748]
	1651 Move [X31+92], V0
	1652 Move V0, [X31+92]
	1653 Move [X31+1488], W8
	1654 Move W8, W8
	1655 Move W9, W22
	1656 ShiftRight W9, 16
	1657 And W9, W9, 0x7FFFFFFF
	1658 Move [X31+286], V0
	1659 Move [X31+4592], W8
	1660 Compare W9, 0
	1661 JumpIfNotEqual {1674}
	1662 Move X8, 0x444000
	1663 Move X8, [X8+368]
	1664 Move X0, [X8]
	1665 Move W8, [X0+224]
	1666 Compare W8, 0
	1667 JumpIfNotEqual {1669}
	1668 Call 0x1C17DFC
	1669 Move W0, W22
	1670 Move X1, X31
	1671 Call Char.IsWhiteSpace, X0
	1672 And W8, W0, 1
	1673 Move [X31+416], W8
	1674 Move [X31+416], W31
	1675 Move [X31+4568], X31
	1676 Move [X31+4560], X31
	1677 Move W8, [X25+180]
	1678 Move V0, [X25+192]
	1679 Move X22, [X31+472]
	1680 Move [X31+384], S0
	1681 Compare W8, 0
	1682 JumpIfEqual {1823}
	1683 Move X9, [X19+5512]
	1684 Compare X9, 0
	1685 JumpIfEqual {7654}
	1686 Move W8, [X23]
	1687 Move W21, [X9+40]
	1688 Move W9, [X31+228]
	1689 NotImplemented "Instruction CMP not yet implemented."
	1690 Move X9, [X22]
	1691 Compare X9, 0
	1692 JumpIfEqual {7654}
	1693 Move W10, [X9+24]
	1694 Add W8, W8, 1
	1695 NotImplemented "Instruction CMP not yet implemented."
	1696 NotImplemented "Instruction SMADDL not yet implemented."
	1697 Move X8, [X8+48]
	1698 Compare X8, 0
	1699 JumpIfEqual {7654}
	1700 Move X9, [X24]
	1701 Compare X9, 0
	1702 JumpIfEqual {7654}
	1703 Move X9, [X9+368]
	1704 Compare X9, 0
	1705 JumpIfEqual {7654}
	1706 Move X0, [X9+64]
	1707 Compare X0, 0
	1708 JumpIfEqual {7654}
	1709 Move X9, 0x4B0000
	1710 Move W8, [X8+40]
	1711 Move X9, [X9+2848]
	1712 Add X2, X31, 4096
	1713 Add X2, X2, 384
	1714 Or W1, W21, W8
	1715 Move X3, [X9]
	1716 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.TryGetValue, X0, X1, X2
	1717 Move TEMP, X0
	1718 And TEMP, TEMP, 1
	1719 Compare TEMP, 1
	1720 JumpIfNotEqual {1748}
	1721 Add X8, X31, 4096
	1722 Add X0, X31, 4096
	1723 Add X8, X8, 656
	1724 Add X0, X0, 384
	1725 Move X1, X31
	1726 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	1727 Move V0, [X31+297]
	1728 Move W8, [X31+4768]
	1729 Add X0, X31, 4096
	1730 Add X0, X0, 352
	1731 Move X1, X31
	1732 Move [X31+278], V0
	1733 Move [X31+4464], W8
	1734 Call GlyphAdjustmentRecord.get_glyphValueRecord, X0
	1735 Add X0, X31, 4096
	1736 Add X0, X0, 384
	1737 Move X1, X31
	1738 Move [X31+4560], S0
	1739 Move [X31+4564], S1
	1740 Move [X31+4568], S2
	1741 Move [X31+4572], S3
	1742 Call GlyphPairAdjustmentRecord.get_featureLookupFlags, X0
	1743 Move V1, [X31+384]
	1744 And W31, W0, 256
	1745 Move S0, W31
	1746 NotImplemented "Instruction FCSEL not yet implemented."
	1747 Move [X31+384], S1
	1748 Move W8, [X23]
	1749 Subtract W8, W8, 1
	1750 Move X9, [X22]
	1751 Compare X9, 0
	1752 JumpIfEqual {7654}
	1753 Move W10, [X9+24]
	1754 NotImplemented "Instruction CMP not yet implemented."
	1755 NotImplemented "Instruction UMADDL not yet implemented."
	1756 Move X8, [X8+48]
	1757 Compare X8, 0
	1758 JumpIfEqual {7654}
	1759 Move X9, [X24]
	1760 Compare X9, 0
	1761 JumpIfEqual {7654}
	1762 Move X9, [X9+368]
	1763 Compare X9, 0
	1764 JumpIfEqual {7654}
	1765 Move X0, [X9+64]
	1766 Compare X0, 0
	1767 JumpIfEqual {7654}
	1768 Move X9, 0x4B0000
	1769 Move W8, [X8+40]
	1770 Move X9, [X9+2848]
	1771 Add X2, X31, 4096
	1772 Add X2, X2, 384
	1773 Or W1, W8, W21
	1774 Move X3, [X9]
	1775 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.TryGetValue, X0, X1, X2
	1776 Move TEMP, X0
	1777 And TEMP, TEMP, 1
	1778 Compare TEMP, 1
	1779 JumpIfNotEqual {1823}
	1780 Move V12, V8
	1781 Move V8, [X31+4560]
	1782 Move V9, [X31+4564]
	1783 Move V10, [X31+4568]
	1784 Move V14, [X31+4572]
	1785 Add X8, X31, 4096
	1786 Add X0, X31, 4096
	1787 Add X8, X8, 656
	1788 Add X0, X0, 384
	1789 Move X1, X31
	1790 Call GlyphPairAdjustmentRecord.get_secondAdjustmentRecord, X0
	1791 Move V0, [X31+297]
	1792 Move W8, [X31+4768]
	1793 Add X0, X31, 4096
	1794 Add X0, X0, 352
	1795 Move X1, X31
	1796 Move [X31+278], V0
	1797 Move [X31+4464], W8
	1798 Call GlyphAdjustmentRecord.get_glyphValueRecord, X0
	1799 Move V4, V0
	1800 Move V5, V1
	1801 Move V6, V2
	1802 Move V7, V3
	1803 Move V0, V8
	1804 Move V1, V9
	1805 Move V2, V10
	1806 Move V3, V14
	1807 Move X0, X31
	1808 Move V8, V12
	1809 Call GlyphValueRecord.op_Addition, X0, X1
	1810 Add X0, X31, 4096
	1811 Add X0, X0, 384
	1812 Move X1, X31
	1813 Move [X31+4560], S0
	1814 Move [X31+4564], S1
	1815 Move [X31+4568], S2
	1816 Move [X31+4572], S3
	1817 Call GlyphPairAdjustmentRecord.get_featureLookupFlags, X0
	1818 Move V1, [X31+384]
	1819 And W31, W0, 256
	1820 Move S0, W31
	1821 NotImplemented "Instruction FCSEL not yet implemented."
	1822 Move [X31+384], S1
	1823 Move X21, [X22]
	1824 Compare X21, 0
	1825 JumpIfEqual {7654}
	1826 NotImplemented "Instruction LDRSW not yet implemented."
	1827 Add X0, X31, 4096
	1828 Add X0, X0, 464
	1829 Move X1, X31
	1830 Call GlyphValueRecord.get_xAdvance, X0
	1831 Move W8, [X21+24]
	1832 NotImplemented "Instruction CMP not yet implemented."
	1833 NotImplemented "Instruction MADD not yet implemented."
	1834 Move [X8+352], S0
	1835 Move X8, 0x4AF000
	1836 Move X8, [X8+2888]
	1837 Move W22, [X31+4748]
	1838 Move X0, [X8]
	1839 Move W8, [X0+224]
	1840 Compare W8, 0
	1841 JumpIfNotEqual {1843}
	1842 Call 0x1C17DFC
	1843 Move W0, W22
	1844 Move X1, X31
	1845 Call TextGeneratorUtilities.IsBaseGlyph, X0
	1846 Move W21, [X23]
	1847 Move W22, W0
	1848 Move [X31+348], S8
	1849 Move TEMP, X0
	1850 And TEMP, TEMP, 1
	1851 Compare TEMP, 1
	1852 JumpIfNotEqual {1854}
	1853 Move [X19+6596], W21
	1854 Subtract W9, W21, 1
	1855 NotImplemented "Instruction CSET not yet implemented."
	1856 Or W8, W22, W8
	1857 Move TEMP, X8
	1858 And TEMP, TEMP, 1
	1859 Compare TEMP, 1
	1860 JumpIfEqual {2203}
	1861 Move W8, [X19+6596]
	1862 Move W10, 0x80000000
	1863 NotImplemented "Instruction CMP not yet implemented."
	1864 NotImplemented "Instruction CMP not yet implemented."
	1865 Move X9, [X31+472]
	1866 Move X9, [X9]
	1867 Compare X9, 0
	1868 JumpIfEqual {7654}
	1869 Move W10, [X9+24]
	1870 Move X8, W8
	1871 NotImplemented "Instruction CMP not yet implemented."
	1872 NotImplemented "Instruction MADD not yet implemented."
	1873 Move X0, [X8+48]
	1874 Compare X0, 0
	1875 JumpIfEqual {7654}
	1876 Move X1, X31
	1877 Call TextElement.get_glyph, X0
	1878 Compare X0, 0
	1879 JumpIfEqual {7654}
	1880 Move X1, X31
	1881 Call Glyph.get_index, X0
	1882 Move X8, [X19+5512]
	1883 Compare X8, 0
	1884 JumpIfEqual {7654}
	1885 Move W28, W0
	1886 Move X0, X8
	1887 Move X1, X31
	1888 Call TextElement.get_glyphIndex, X0
	1889 Move X8, [X24]
	1890 Compare X8, 0
	1891 JumpIfEqual {7654}
	1892 Move W25, W0
	1893 Move X0, X8
	1894 Move X1, X31
	1895 Call FontAsset.get_fontFeatureTable, X0
	1896 Compare X0, 0
	1897 JumpIfEqual {7654}
	1898 Move X0, [X0+72]
	1899 Compare X0, 0
	1900 JumpIfEqual {7654}
	1901 Move X8, 0x4AF000
	1902 Move X8, [X8+2864]
	1903 Add X2, X31, 4096
	1904 Or W1, W28, W25
	1905 Add X2, X2, 328
	1906 Move X3, [X8]
	1907 Call Dictionary`2<UInt32, MarkToBaseAdjustmentRecord>.TryGetValue, X0, X1, X2
	1908 Move X25, [X31+464]
	1909 Move TEMP, X0
	1910 And TEMP, TEMP, 1
	1911 Compare TEMP, 1
	1912 JumpIfNotEqual {2203}
	1913 Move X8, [X31+472]
	1914 Move X8, [X8]
	1915 Compare X8, 0
	1916 JumpIfEqual {7654}
	1917 NotImplemented "Instruction LDRSW not yet implemented."
	1918 Move W10, [X8+24]
	1919 NotImplemented "Instruction CMP not yet implemented."
	1920 NotImplemented "Instruction MADD not yet implemented."
	1921 Move V0, [X8+328]
	1922 Move V1, [X19+756]
	1923 Add X0, X31, 4096
	1924 Add X0, X0, 328
	1925 Move X1, X31
	1926 Subtract S0, S0, S1
	1927 NotImplemented "Instruction FDIV not yet implemented."
	1928 Call MarkToBaseAdjustmentRecord.get_baseGlyphAnchorPoint, X0
	1929 Add X0, X31, 4096
	1930 Add X0, X0, 320
	1931 Move X1, X31
	1932 Move [X31+4416], S0
	1933 Move [X31+4420], S1
	1934 Call GlyphAnchorPoint.get_xCoordinate, X0
	1935 Add X0, X31, 4096
	1936 Add X0, X0, 328
	1937 Move X1, X31
	1938 Move V8, V0
	1939 Call MarkToBaseAdjustmentRecord.get_markPositionAdjustment, X0
	1940 Add X0, X31, 4096
	1941 Add X0, X0, 312
	1942 Move X1, X31
	1943 Move [X31+4408], S0
	1944 Move [X31+4412], S1
	1945 Call MarkPositionAdjustment.get_xPositionAdjustment, X0
	1946 Add S1, S9, S8
	1947 Add X0, X31, 4096
	1948 Subtract S0, S1, S0
	1949 Add X0, X0, 464
	1950 Move X1, X31
	1951 Call GlyphValueRecord.set_xPlacement, X0, V0
	1952 Add X0, X31, 4096
	1953 Add X0, X0, 328
	1954 Move X1, X31
	1955 Call MarkToBaseAdjustmentRecord.get_baseGlyphAnchorPoint, X0
	1956 Add X0, X31, 4096
	1957 Add X0, X0, 320
	1958 Move X1, X31
	1959 Move [X31+4416], S0
	1960 Move [X31+4420], S1
	1961 Call GlyphAnchorPoint.get_yCoordinate, X0
	1962 Add X0, X31, 4096
	1963 Move V8, V0
	1964 Add X0, X0, 328
	1965 Subtract W21, W21, 1
	1966 Move W8, [X19+6596]
	1967 NotImplemented "Instruction CMP not yet implemented."
	1968 Move X8, [X31+472]
	1969 Move X8, [X8]
	1970 Compare X8, 0
	1971 JumpIfEqual {7654}
	1972 Move W9, [X8+24]
	1973 NotImplemented "Instruction CMP not yet implemented."
	1974 NotImplemented "Instruction UMADDL not yet implemented."
	1975 Move X0, [X8+48]
	1976 Compare X0, 0
	1977 JumpIfEqual {7654}
	1978 Move X1, X31
	1979 Call TextElement.get_glyph, X0
	1980 Compare X0, 0
	1981 JumpIfEqual {7654}
	1982 Move X1, X31
	1983 Call Glyph.get_index, X0
	1984 Move X8, [X19+5512]
	1985 Compare X8, 0
	1986 JumpIfEqual {7654}
	1987 Move W28, W0
	1988 Move X0, X8
	1989 Move X1, X31
	1990 Call TextElement.get_glyphIndex, X0
	1991 Move X8, [X24]
	1992 Compare X8, 0
	1993 JumpIfEqual {7654}
	1994 Move W25, W0
	1995 Move X0, X8
	1996 Move X1, X31
	1997 Call FontAsset.get_fontFeatureTable, X0
	1998 Compare X0, 0
	1999 JumpIfEqual {7654}
	2000 Move X0, [X0+80]
	2001 Compare X0, 0
	2002 JumpIfEqual {7654}
	2003 Move X8, 0x4AF000
	2004 Move X8, [X8+2856]
	2005 Add X2, X31, 4096
	2006 Or W1, W28, W25
	2007 Add X2, X2, 288
	2008 Move X3, [X8]
	2009 Call Dictionary`2<UInt32, MarkToMarkAdjustmentRecord>.TryGetValue, X0, X1, X2
	2010 Move X25, [X31+464]
	2011 Move TEMP, X0
	2012 And TEMP, TEMP, 1
	2013 Compare TEMP, 1
	2014 JumpIfNotEqual {1965}
	2015 Move X8, [X31+472]
	2016 Move X8, [X8]
	2017 Compare X8, 0
	2018 JumpIfEqual {7654}
	2019 Move W9, [X8+24]
	2020 NotImplemented "Instruction CMP not yet implemented."
	2021 Move W9, W21
	2022 Move V1, [X19+736]
	2023 Move V5, [X31+388]
	2024 Move V2, [X19+384]
	2025 NotImplemented "Instruction NOP not yet implemented."
	2026 NotImplemented "Instruction MADD not yet implemented."
	2027 Move V0, [X19+756]
	2028 Move V3, [X8+328]
	2029 Move V4, [X8+336]
	2030 Subtract S1, S5, S1
	2031 Add S1, S1, S2
	2032 Add X0, X31, 4096
	2033 Subtract S0, S3, S0
	2034 Subtract S1, S4, S1
	2035 Add X0, X0, 288
	2036 Move X1, X31
	2037 NotImplemented "Instruction FDIV not yet implemented."
	2038 NotImplemented "Instruction FDIV not yet implemented."
	2039 Call MarkToMarkAdjustmentRecord.get_baseMarkGlyphAnchorPoint, X0
	2040 Add X0, X31, 4096
	2041 Add X0, X0, 320
	2042 Move X1, X31
	2043 Move [X31+4416], S0
	2044 Move [X31+4420], S1
	2045 Call GlyphAnchorPoint.get_xCoordinate, X0
	2046 Add X0, X31, 4096
	2047 Add X0, X0, 288
	2048 Move X1, X31
	2049 Move V8, V0
	2050 Call MarkToMarkAdjustmentRecord.get_combiningMarkPositionAdjustment, X0
	2051 Add X0, X31, 4096
	2052 Add X0, X0, 312
	2053 Move X1, X31
	2054 Move [X31+4408], S0
	2055 Move [X31+4412], S1
	2056 Call MarkPositionAdjustment.get_xPositionAdjustment, X0
	2057 Add S1, S10, S8
	2058 Add X0, X31, 4096
	2059 Subtract S0, S1, S0
	2060 Add X0, X0, 464
	2061 Move X1, X31
	2062 Call GlyphValueRecord.set_xPlacement, X0, V0
	2063 Add X0, X31, 4096
	2064 Add X0, X0, 288
	2065 Move X1, X31
	2066 Call MarkToMarkAdjustmentRecord.get_baseMarkGlyphAnchorPoint, X0
	2067 Add X0, X31, 4096
	2068 Add X0, X0, 320
	2069 Move X1, X31
	2070 Move [X31+4416], S0
	2071 Move [X31+4420], S1
	2072 Call GlyphAnchorPoint.get_yCoordinate, X0
	2073 Add X0, X31, 4096
	2074 Add X0, X0, 288
	2075 Move X1, X31
	2076 Move V8, V0
	2077 Call MarkToMarkAdjustmentRecord.get_combiningMarkPositionAdjustment, X0
	2078 Add X0, X31, 4096
	2079 Add X0, X0, 312
	2080 Move X1, X31
	2081 Move [X31+4408], S0
	2082 Move [X31+4412], S1
	2083 Call MarkPositionAdjustment.get_yPositionAdjustment, X0
	2084 Add S1, S9, S8
	2085 Subtract S0, S1, S0
	2086 NotImplemented "Instruction LDRSW not yet implemented."
	2087 Move W9, 0x80000000
	2088 NotImplemented "Instruction CMP not yet implemented."
	2089 Move X9, [X31+472]
	2090 Move X9, [X9]
	2091 Compare X9, 0
	2092 JumpIfEqual {7654}
	2093 Move W10, [X9+24]
	2094 NotImplemented "Instruction CMP not yet implemented."
	2095 NotImplemented "Instruction MADD not yet implemented."
	2096 Move X0, [X8+48]
	2097 Compare X0, 0
	2098 JumpIfEqual {7654}
	2099 Move X1, X31
	2100 Call TextElement.get_glyph, X0
	2101 Compare X0, 0
	2102 JumpIfEqual {7654}
	2103 Move X1, X31
	2104 Call Glyph.get_index, X0
	2105 Move X8, [X19+5512]
	2106 Compare X8, 0
	2107 JumpIfEqual {7654}
	2108 Move W28, W0
	2109 Move X0, X8
	2110 Move X1, X31
	2111 Call TextElement.get_glyphIndex, X0
	2112 Move X8, [X24]
	2113 Compare X8, 0
	2114 JumpIfEqual {7654}
	2115 Move W25, W0
	2116 Move X0, X8
	2117 Move X1, X31
	2118 Call FontAsset.get_fontFeatureTable, X0
	2119 Compare X0, 0
	2120 JumpIfEqual {7654}
	2121 Move X0, [X0+72]
	2122 Compare X0, 0
	2123 JumpIfEqual {7654}
	2124 Move X8, 0x4AF000
	2125 Move X8, [X8+2864]
	2126 Add X2, X31, 4096
	2127 Or W1, W28, W25
	2128 Add X2, X2, 264
	2129 Move X3, [X8]
	2130 Call Dictionary`2<UInt32, MarkToBaseAdjustmentRecord>.TryGetValue, X0, X1, X2
	2131 Move X25, [X31+464]
	2132 Move TEMP, X0
	2133 And TEMP, TEMP, 1
	2134 Compare TEMP, 1
	2135 JumpIfNotEqual {2203}
	2136 Move X8, [X31+472]
	2137 Move X8, [X8]
	2138 Compare X8, 0
	2139 JumpIfEqual {7654}
	2140 NotImplemented "Instruction LDRSW not yet implemented."
	2141 Move W10, [X8+24]
	2142 NotImplemented "Instruction CMP not yet implemented."
	2143 NotImplemented "Instruction MADD not yet implemented."
	2144 Move V0, [X8+328]
	2145 Move V1, [X19+756]
	2146 Add X0, X31, 4096
	2147 Add X0, X0, 264
	2148 Move X1, X31
	2149 Subtract S0, S0, S1
	2150 NotImplemented "Instruction FDIV not yet implemented."
	2151 Call MarkToBaseAdjustmentRecord.get_baseGlyphAnchorPoint, X0
	2152 Add X0, X31, 4096
	2153 Add X0, X0, 320
	2154 Move X1, X31
	2155 Move [X31+4416], S0
	2156 Move [X31+4420], S1
	2157 Call GlyphAnchorPoint.get_xCoordinate, X0
	2158 Add X0, X31, 4096
	2159 Add X0, X0, 264
	2160 Move X1, X31
	2161 Move V8, V0
	2162 Call MarkToBaseAdjustmentRecord.get_markPositionAdjustment, X0
	2163 Add X0, X31, 4096
	2164 Add X0, X0, 312
	2165 Move X1, X31
	2166 Move [X31+4408], S0
	2167 Move [X31+4412], S1
	2168 Call MarkPositionAdjustment.get_xPositionAdjustment, X0
	2169 Add S1, S9, S8
	2170 Add X0, X31, 4096
	2171 Subtract S0, S1, S0
	2172 Add X0, X0, 464
	2173 Move X1, X31
	2174 Call GlyphValueRecord.set_xPlacement, X0, V0
	2175 Add X0, X31, 4096
	2176 Add X0, X0, 264
	2177 Move X1, X31
	2178 Call MarkToBaseAdjustmentRecord.get_baseGlyphAnchorPoint, X0
	2179 Add X0, X31, 4096
	2180 Add X0, X0, 320
	2181 Move X1, X31
	2182 Move [X31+4416], S0
	2183 Move [X31+4420], S1
	2184 Call GlyphAnchorPoint.get_yCoordinate, X0
	2185 Add X0, X31, 4096
	2186 Move V8, V0
	2187 Add X0, X0, 264
	2188 Move X1, X31
	2189 Call MarkToBaseAdjustmentRecord.get_markPositionAdjustment, X0
	2190 Add X0, X31, 4096
	2191 Add X0, X0, 312
	2192 Move X1, X31
	2193 Move [X31+4408], S0
	2194 Move [X31+4412], S1
	2195 Call MarkPositionAdjustment.get_yPositionAdjustment, X0
	2196 Subtract S0, S8, S0
	2197 Add X0, X31, 4096
	2198 Add X0, X0, 464
	2199 Move X1, X31
	2200 Call GlyphValueRecord.set_yPlacement, X0, V0
	2201 Move S0, W31
	2202 Move [X31+384], S0
	2203 Add X0, X31, 4096
	2204 Add X0, X0, 464
	2205 Move X1, X31
	2206 Call GlyphValueRecord.get_yPlacement, X0
	2207 Add X0, X31, 4096
	2208 Add X0, X0, 464
	2209 Move X1, X31
	2210 Move V10, V0
	2211 Call GlyphValueRecord.get_yPlacement, X0
	2212 Move W8, [X25+182]
	2213 Move V12, V0
	2214 Compare W8, 0
	2215 JumpIfEqual {2239}
	2216 Move V8, [X19+756]
	2217 Add X0, X31, 4096
	2218 Add X0, X0, 480
	2219 Move X1, X31
	2220 Call GlyphMetrics.get_horizontalAdvance, X0
	2221 Move V1, [X19+5524]
	2222 Move S2, 1
	2223 Move W8, [X31+416]
	2224 Subtract S1, S2, S1
	2225 Multiply S0, S0, S1
	2226 Multiply S0, S13, S0
	2227 Subtract S0, S8, S0
	2228 Move [X19+756], S0
	2229 Compare W8, 0
	2230 JumpIfNotEqual {2234}
	2231 Move W8, [X31+4748]
	2232 Move W9, 0x200B
	2233 NotImplemented "Instruction CMP not yet implemented."
	2234 Move V1, [X25+196]
	2235 Move V2, [X31+336]
	2236 Multiply S1, S2, S1
	2237 Subtract S0, S0, S1
	2238 Move [X19+756], S0
	2239 Move V9, [X19+752]
	2240 NotImplemented "Instruction FCMP not yet implemented."
	2241 Add X0, X31, 4096
	2242 Add X0, X0, 480
	2243 Move X1, X31
	2244 Call GlyphMetrics.get_width, X0
	2245 Add X0, X31, 4096
	2246 Add X0, X0, 480
	2247 Move X1, X31
	2248 Move V8, V0
	2249 Call GlyphMetrics.get_horizontalBearingX, X0
	2250 Move S3, 0.5
	2251 Move V1, [X19+5524]
	2252 Multiply S2, S9, S3
	2253 Multiply S3, S8, S3
	2254 Add S0, S3, S0
	2255 Multiply S0, S13, S0
	2256 Move V3, [X19+756]
	2257 Subtract S0, S2, S0
	2258 Move S2, 1
	2259 Subtract S1, S2, S1
	2260 Multiply S9, S1, S0
	2261 Add S0, S3, S9
	2262 Move [X19+756], S0
	2263 Move S9, W31
	2264 Move X9, 0x441000
	2265 Move X9, [X9+1432]
	2266 Move W21, W31
	2267 Compare W20, 0
	2268 JumpIfNotEqual {2273}
	2269 Move W8, [X27]
	2270 NotImplemented "Instruction CMP not yet implemented."
	2271 Move W8, [X19+292]
	2272 And W21, W8, 1
	2273 Move X0, [X9]
	2274 Move X25, [X19+112]
	2275 Move W8, [X0+224]
	2276 Compare W8, 0
	2277 JumpIfNotEqual {2279}
	2278 Call 0x1C17DFC
	2279 Move X0, X25
	2280 Move X1, X31
	2281 Move X2, X31
	2282 Call Object.op_Inequality, X0, X1
	2283 Move [X31+244], S9
	2284 Move [X31+356], S10
	2285 Move [X31+352], S12
	2286 Compare W21, 0
	2287 JumpIfEqual {2359}
	2288 Move S12, W31
	2289 Move TEMP, X0
	2290 And TEMP, TEMP, 1
	2291 Compare TEMP, 1
	2292 JumpIfNotEqual {2352}
	2293 Move X21, 0x4AF000
	2294 Move X21, [X21+616]
	2295 Move X25, [X19+112]
	2296 Move X0, [X21]
	2297 Move W8, [X0+224]
	2298 Compare W8, 0
	2299 JumpIfNotEqual {2301}
	2300 Call 0x1C17DFC
	2301 Compare X25, 0
	2302 JumpIfEqual {7654}
	2303 Move X8, [X21]
	2304 Move X0, X25
	2305 Move X2, X31
	2306 Move X8, [X8+184]
	2307 Move W1, [X8+108]
	2308 Call Material.HasProperty, X0, X1
	2309 Move TEMP, X0
	2310 And TEMP, TEMP, 1
	2311 Compare TEMP, 1
	2312 JumpIfNotEqual {2352}
	2313 Move X0, [X21]
	2314 Move X25, [X19+112]
	2315 Move W8, [X0+224]
	2316 Compare W8, 0
	2317 JumpIfNotEqual {2319}
	2318 Call 0x1C17DFC
	2319 Compare X25, 0
	2320 JumpIfEqual {7654}
	2321 Move X8, [X21]
	2322 Move X0, X25
	2323 Move X2, X31
	2324 Move X8, [X8+184]
	2325 Move W1, [X8+108]
	2326 Call Material.GetFloat, X0, X1
	2327 Move X0, [X24]
	2328 Compare X0, 0
	2329 JumpIfEqual {7654}
	2330 Move X1, X31
	2331 Move V8, V0
	2332 Call FontAsset.get_boldStyleWeight, X0
	2333 Move X0, [X19+112]
	2334 Move X25, [X31+464]
	2335 Compare X0, 0
	2336 JumpIfEqual {7654}
	2337 Move X8, [X21]
	2338 Move X2, X31
	2339 Move V10, V0
	2340 Move X8, [X8+184]
	2341 Move W1, [X8+228]
	2342 Call Material.GetFloat, X0, X1
	2343 Move S1, 0.25
	2344 Multiply S1, S10, S1
	2345 Multiply S1, S8, S1
	2346 Multiply S12, S1, S0
	2347 Move V0, [X31+392]
	2348 Add S0, S0, S12
	2349 NotImplemented "Instruction FCMP not yet implemented."
	2350 Subtract S0, S8, S12
	2351 Move [X31+392], S0
	2352 Move X25, [X31+464]
	2353 Move X0, [X24]
	2354 Compare X0, 0
	2355 JumpIfEqual {7654}
	2356 Move X1, X31
	2357 Call FontAsset.get_boldStyleSpacing, X0
	2358 Move [X31+320], S0
	2359 Move S0, W31
	2360 Move [X31+320], S0
	2361 Move TEMP, X0
	2362 And TEMP, TEMP, 1
	2363 Compare TEMP, 1
	2364 JumpIfNotEqual {2440}
	2365 Move X21, 0x4AF000
	2366 Move X21, [X21+616]
	2367 Move X25, [X19+112]
	2368 Move X0, [X21]
	2369 Move W8, [X0+224]
	2370 Compare W8, 0
	2371 JumpIfNotEqual {2373}
	2372 Call 0x1C17DFC
	2373 Compare X25, 0
	2374 JumpIfEqual {7654}
	2375 Move X8, [X21]
	2376 Move X0, X25
	2377 Move X2, X31
	2378 Move X8, [X8+184]
	2379 Move W1, [X8+108]
	2380 Call Material.HasProperty, X0, X1
	2381 Move TEMP, X0
	2382 And TEMP, TEMP, 1
	2383 Compare TEMP, 1
	2384 JumpIfNotEqual {2440}
	2385 Move X0, [X21]
	2386 Move X25, [X19+112]
	2387 Move W8, [X0+224]
	2388 Compare W8, 0
	2389 JumpIfNotEqual {2391}
	2390 Call 0x1C17DFC
	2391 Compare X25, 0
	2392 JumpIfEqual {7654}
	2393 Move X8, [X21]
	2394 Move X0, X25
	2395 Move X2, X31
	2396 Move X8, [X8+184]
	2397 Move W1, [X8+228]
	2398 Call Material.HasProperty, X0, X1
	2399 Move TEMP, X0
	2400 And TEMP, TEMP, 1
	2401 Compare TEMP, 1
	2402 JumpIfNotEqual {2440}
	2403 Move X0, [X21]
	2404 Move X25, [X19+112]
	2405 Move W8, [X0+224]
	2406 Compare W8, 0
	2407 JumpIfNotEqual {2409}
	2408 Call 0x1C17DFC
	2409 Compare X25, 0
	2410 JumpIfEqual {7654}
	2411 Move X8, [X21]
	2412 Move X0, X25
	2413 Move X2, X31
	2414 Move X8, [X8+184]
	2415 Move W1, [X8+108]
	2416 Call Material.GetFloat, X0, X1
	2417 Move X8, [X24]
	2418 Compare X8, 0
	2419 JumpIfEqual {7654}
	2420 Move X0, [X19+112]
	2421 Move X25, [X31+464]
	2422 Compare X0, 0
	2423 JumpIfEqual {7654}
	2424 Move X9, [X21]
	2425 Move V9, [X8+392]
	2426 Move X2, X31
	2427 Move V8, V0
	2428 Move X9, [X9+184]
	2429 Move W1, [X9+228]
	2430 Call Material.GetFloat, X0, X1
	2431 Move S1, 0.25
	2432 Multiply S1, S9, S1
	2433 Multiply S1, S8, S1
	2434 Multiply S12, S0, S1
	2435 Move V0, [X31+392]
	2436 Add S0, S0, S12
	2437 NotImplemented "Instruction FCMP not yet implemented."
	2438 Subtract S0, S8, S12
	2439 Move [X31+392], S0
	2440 Move X25, [X31+464]
	2441 Move S12, W31
	2442 Move V9, [X19+756]
	2443 Add X0, X31, 4096
	2444 Add X0, X0, 480
	2445 Move X1, X31
	2446 Call GlyphMetrics.get_horizontalBearingX, X0
	2447 Move V10, [X19+6568]
	2448 Add X0, X31, 4096
	2449 Add X0, X0, 464
	2450 Move X1, X31
	2451 Move V8, V0
	2452 Call GlyphValueRecord.get_xPlacement, X0
	2453 Move V14, [X31+392]
	2454 Move V1, [X19+5524]
	2455 Multiply S2, S8, S10
	2456 Move S15, 1
	2457 Subtract S2, S2, S14
	2458 Subtract S2, S2, S12
	2459 Add S0, S0, S2
	2460 Multiply S0, S13, S0
	2461 Subtract S1, S15, S1
	2462 Add X0, X31, 4096
	2463 Multiply S0, S1, S0
	2464 Add X0, X0, 480
	2465 Move X1, X31
	2466 Add S9, S9, S0
	2467 Call GlyphMetrics.get_horizontalBearingY, X0
	2468 Add X0, X31, 4096
	2469 Add X0, X0, 464
	2470 Move X1, X31
	2471 Move V8, V0
	2472 Call GlyphValueRecord.get_yPlacement, X0
	2473 Add S3, S14, S8
	2474 Add S0, S3, S0
	2475 Move V3, [X31+388]
	2476 Move V1, [X19+736]
	2477 Move V2, [X19+384]
	2478 Multiply S0, S13, S0
	2479 Add S0, S3, S0
	2480 Add X0, X31, 4096
	2481 Subtract S0, S0, S1
	2482 Add X0, X0, 480
	2483 Move X1, X31
	2484 Add S10, S2, S0
	2485 Call GlyphMetrics.get_height, X0
	2486 Add S8, S14, S14
	2487 Add S0, S8, S0
	2488 Multiply S0, S13, S0
	2489 Add X0, X31, 4096
	2490 Subtract S0, S10, S0
	2491 Add X0, X0, 480
	2492 Move X1, X31
	2493 Move [X31+380], S0
	2494 Call GlyphMetrics.get_width, X0
	2495 Move V1, [X19+6568]
	2496 Move V2, [X19+5524]
	2497 Add S3, S12, S12
	2498 Move [X31+436], S9
	2499 Multiply S0, S0, S1
	2500 Add S0, S8, S0
	2501 Add S0, S3, S0
	2502 Multiply S0, S13, S0
	2503 Subtract S1, S15, S2
	2504 Multiply S0, S1, S0
	2505 Add S4, S9, S0
	2506 Compare W20, 0
	2507 JumpIfNotEqual {2515}
	2508 Move W8, [X27]
	2509 NotImplemented "Instruction CMP not yet implemented."
	2510 Move W8, [X19+292]
	2511 Move TEMP, X8
	2512 And TEMP, TEMP, 2
	2513 Compare TEMP, 2
	2514 JumpIfEqual {2517}
	2515 Move V5, [X31+436]
	2516 Move V15, V4
	2517 Move X8, [X19+104]
	2518 Move [X31+280], S4
	2519 Compare X8, 0
	2520 JumpIfEqual {7654}
	2521 Move V9, [X19+6564]
	2522 Add X0, X8, 176
	2523 Move X1, X31
	2524 Call FaceInfo.get_capLine, X0
	2525 Move X8, [X24]
	2526 Compare X8, 0
	2527 JumpIfEqual {7654}
	2528 Add X0, X8, 176
	2529 Move X1, X31
	2530 Move V8, V0
	2531 Call FaceInfo.get_baseline, X0
	2532 Move X8, [X24]
	2533 Compare X8, 0
	2534 JumpIfEqual {7654}
	2535 Move V1, [X31+176]
	2536 Move V11, [X19+240]
	2537 Move V14, [X19+384]
	2538 Move V15, V0
	2539 NotImplemented "Instruction SCVTF not yet implemented."
	2540 Add X0, X8, 176
	2541 Move X1, X31
	2542 Multiply S9, S0, S1
	2543 Call FaceInfo.get_scale, X0
	2544 Add S1, S15, S14
	2545 Subtract S1, S8, S1
	2546 Move S2, 0.5
	2547 Multiply S1, S1, S2
	2548 Add X0, X31, 4096
	2549 Multiply S1, S11, S1
	2550 Add X0, X0, 480
	2551 Move X1, X31
	2552 Multiply S15, S0, S1
	2553 Call GlyphMetrics.get_horizontalBearingY, X0
	2554 Move V11, [X31+392]
	2555 Add X0, X31, 4096
	2556 Add X0, X0, 480
	2557 Move X1, X31
	2558 Add S0, S11, S0
	2559 Add S0, S12, S0
	2560 Subtract S0, S0, S15
	2561 Multiply S0, S13, S0
	2562 Multiply S14, S9, S0
	2563 Call GlyphMetrics.get_horizontalBearingY, X0
	2564 Add X0, X31, 4096
	2565 Add X0, X0, 480
	2566 Move X1, X31
	2567 Move V8, V0
	2568 Call GlyphMetrics.get_height, X0
	2569 Subtract S0, S8, S0
	2570 Move V3, [X31+380]
	2571 Move V4, [X31+280]
	2572 Subtract S0, S0, S11
	2573 Move V2, [X31+436]
	2574 Subtract S0, S0, S12
	2575 Subtract S0, S0, S15
	2576 Move S1, W31
	2577 Multiply S0, S13, S0
	2578 Add S10, S10, S1
	2579 Add S3, S3, S1
	2580 Add S1, S4, S14
	2581 Multiply S0, S9, S0
	2582 Add S5, S2, S14
	2583 Move V15, V1
	2584 Add S2, S2, S0
	2585 Add S4, S4, S0
	2586 Move [X31+380], S3
	2587 Move [X31+436], S2
	2588 Move X9, [X31+248]
	2589 Move X8, [X31+256]
	2590 Move V8, [X8]
	2591 Move X8, 0x726000
	2592 Move W8, [X8+1939]
	2593 Move V9, [X9]
	2594 Compare W8, 0
	2595 JumpIfNotEqual {2614}
	2596 Move X0, 0x442000
	2597 Move X0, [X0+1448]
	2598 Move V14, V12
	2599 Move V12, V10
	2600 Move V10, V13
	2601 Move V11, V15
	2602 Move V15, V4
	2603 Move V13, V5
	2604 Call 0x1C17CF4
	2605 Move V5, V13
	2606 Move V4, V15
	2607 Move V15, V11
	2608 Move V13, V10
	2609 Move V10, V12
	2610 Move V12, V14
	2611 Move X8, 0x726000
	2612 Move W9, 1
	2613 Move [X8+1939], W9
	2614 Move [X31+368], S12
	2615 Move X8, 0x442000
	2616 Move X8, [X8+1448]
	2617 Move X8, [X8]
	2618 Move X8, [X8+184]
	2619 Move D0, [X8]
	2620 Move D1, [X8+8]
	2621 Move X8, -52199424
	2622 Move V2, [X8+436]
	2623 NotImplemented "Instruction INVALID not yet implemented."
	2624 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2625 NotImplemented "Instruction INVALID not yet implemented."
	2626 Add V0, V0, V3
	2627 Add V0, V1, V0
	2628 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2629 Add V0, V1, V0
	2630 NotImplemented "Instruction FCMP not yet implemented."
	2631 Move S0, W31
	2632 Move V0, [X19+6580]
	2633 Move V1, [X19+6584]
	2634 Move V2, [X19+6588]
	2635 Move V3, [X19+6592]
	2636 Add X8, X31, 4096
	2637 Add X8, X8, 656
	2638 Move X0, X31
	2639 Move [X31+280], S4
	2640 Move V8, V5
	2641 Call Matrix4x4.Rotate, X0
	2642 Move V9, [X31+436]
	2643 Move V12, [X31+380]
	2644 Move V1, [X31+297]
	2645 Move V2, [X31+298]
	2646 Move V3, [X31+299]
	2647 Move V4, [X31+300]
	2648 Add S0, S15, S9
	2649 Add S5, S12, S10
	2650 Move S6, 0.5
	2651 Multiply S11, S0, S6
	2652 Multiply S14, S5, S6
	2653 Subtract S0, S8, S11
	2654 Subtract S8, S10, S14
	2655 Add X0, X31, 4096
	2656 Move [X31+268], V1
	2657 Move [X31+269], V2
	2658 Add X0, X0, 192
	2659 Move S2, W31
	2660 Move V1, V8
	2661 Move X1, X31
	2662 Move [X31+270], V3
	2663 Move [X31+271], V4
	2664 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2665 Add S3, S11, S0
	2666 Add S0, S14, S1
	2667 Move [X31+220], S13
	2668 Move S13, W31
	2669 Move [X31+212], S3
	2670 Move [X31+220], S0
	2671 Add S0, S2, S13
	2672 Move V10, V15
	2673 Subtract S15, S12, S14
	2674 Add X0, X31, 4096
	2675 Move [X31+208], S0
	2676 Subtract S0, S9, S11
	2677 Add X0, X0, 192
	2678 Move S2, W31
	2679 Move V1, V15
	2680 Move X1, X31
	2681 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2682 Add S0, S11, S0
	2683 Add X0, X31, 4096
	2684 Move [X31+436], S0
	2685 Add S12, S14, S1
	2686 Add S9, S2, S13
	2687 Subtract S0, S10, S11
	2688 Add X0, X0, 192
	2689 Move S2, W31
	2690 Move V1, V8
	2691 Move X1, X31
	2692 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2693 Add S3, S11, S0
	2694 Move V0, [X31+280]
	2695 Add X0, X31, 4096
	2696 Add S10, S14, S1
	2697 Add S8, S2, S13
	2698 Subtract S0, S0, S11
	2699 Add X0, X0, 192
	2700 Move S2, W31
	2701 Move V1, V15
	2702 Move X1, X31
	2703 Move V15, V3
	2704 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2705 Move S3, [X31+208]
	2706 Move S5, [X31+212]
	2707 Add S4, S11, S0
	2708 Add S1, S14, S1
	2709 Add S0, S2, S13
	2710 Move S14, [X31+216]
	2711 Move S13, [X31+220]
	2712 Move V1, [X31+380]
	2713 Move S8, W31
	2714 Move S9, W31
	2715 Move S3, W31
	2716 Move V12, V1
	2717 Move V14, V10
	2718 Move X8, [X31+472]
	2719 Move X8, [X8]
	2720 Compare X8, 0
	2721 JumpIfEqual {7654}
	2722 NotImplemented "Instruction LDRSW not yet implemented."
	2723 Move W10, [X8+24]
	2724 NotImplemented "Instruction CMP not yet implemented."
	2725 Move V2, [X31+436]
	2726 NotImplemented "Instruction NOP not yet implemented."
	2727 NotImplemented "Instruction MADD not yet implemented."
	2728 Move [X8+296], S12
	2729 Move [X8+300], S9
	2730 Move [X8+292], S2
	2731 Move X8, [X31+472]
	2732 Move X8, [X8]
	2733 Compare X8, 0
	2734 JumpIfEqual {7654}
	2735 NotImplemented "Instruction LDRSW not yet implemented."
	2736 Move W10, [X8+24]
	2737 NotImplemented "Instruction CMP not yet implemented."
	2738 NotImplemented "Instruction MADD not yet implemented."
	2739 Move [X8+280], S5
	2740 Move [X8+284], S14
	2741 Move [X8+288], S3
	2742 Move X8, [X31+472]
	2743 Move X8, [X8]
	2744 Compare X8, 0
	2745 JumpIfEqual {7654}
	2746 NotImplemented "Instruction LDRSW not yet implemented."
	2747 Move W10, [X8+24]
	2748 Move V11, V12
	2749 Move V12, [X31+368]
	2750 NotImplemented "Instruction CMP not yet implemented."
	2751 NotImplemented "Instruction MADD not yet implemented."
	2752 Move [X8+304], S15
	2753 Move [X8+308], S10
	2754 Move [X8+312], S8
	2755 Move X8, [X31+472]
	2756 Move X8, [X8]
	2757 Compare X8, 0
	2758 JumpIfEqual {7654}
	2759 NotImplemented "Instruction LDRSW not yet implemented."
	2760 Move W10, [X8+24]
	2761 NotImplemented "Instruction CMP not yet implemented."
	2762 NotImplemented "Instruction MADD not yet implemented."
	2763 Move [X8+316], S4
	2764 Move [X8+320], S1
	2765 Move [X8+324], S0
	2766 Move X8, [X31+472]
	2767 Move X20, [X8]
	2768 Compare X20, 0
	2769 JumpIfEqual {7654}
	2770 NotImplemented "Instruction LDRSW not yet implemented."
	2771 Move V8, [X19+756]
	2772 Add X0, X31, 4096
	2773 Add X0, X0, 464
	2774 Move X1, X31
	2775 Call GlyphValueRecord.get_xPlacement, X0
	2776 Move W8, [X20+24]
	2777 NotImplemented "Instruction CMP not yet implemented."
	2778 Multiply S0, S13, S0
	2779 Add S0, S8, S0
	2780 NotImplemented "Instruction MADD not yet implemented."
	2781 Move [X8+328], S0
	2782 Move X8, [X31+472]
	2783 Move X20, [X8]
	2784 Compare X20, 0
	2785 JumpIfEqual {7654}
	2786 NotImplemented "Instruction LDRSW not yet implemented."
	2787 Move V9, [X19+736]
	2788 Move V8, [X19+384]
	2789 Add X0, X31, 4096
	2790 Add X0, X0, 464
	2791 Move X1, X31
	2792 Call GlyphValueRecord.get_yPlacement, X0
	2793 Move W8, [X20+24]
	2794 NotImplemented "Instruction CMP not yet implemented."
	2795 Move V1, [X31+388]
	2796 Multiply S0, S13, S0
	2797 NotImplemented "Instruction MADD not yet implemented."
	2798 Subtract S1, S1, S9
	2799 Add S1, S1, S8
	2800 Add S0, S1, S0
	2801 Move [X8+336], S0
	2802 Move X8, [X31+472]
	2803 Move X8, [X8]
	2804 Compare X8, 0
	2805 JumpIfEqual {7654}
	2806 NotImplemented "Instruction LDRSW not yet implemented."
	2807 Move W9, [X8+24]
	2808 NotImplemented "Instruction CMP not yet implemented."
	2809 Move V0, [X31+436]
	2810 Subtract S1, S14, S11
	2811 NotImplemented "Instruction MADD not yet implemented."
	2812 Move V2, [X31+352]
	2813 Subtract S0, S15, S0
	2814 NotImplemented "Instruction FDIV not yet implemented."
	2815 Move [X9+360], S0
	2816 Move V0, [X31+376]
	2817 Move V1, [X31+356]
	2818 Move W9, [X27]
	2819 Add S0, S0, S1
	2820 Move V1, [X31+360]
	2821 NotImplemented "Instruction CMP not yet implemented."
	2822 Multiply S0, S13, S0
	2823 Add S1, S1, S2
	2824 Move V2, [X31+372]
	2825 Multiply S1, S13, S1
	2826 NotImplemented "Instruction FDIV not yet implemented."
	2827 NotImplemented "Instruction FDIV not yet implemented."
	2828 Multiply S1, S13, S1
	2829 Move W24, [X19+808]
	2830 Move W10, [X31+416]
	2831 Move V4, [X19+384]
	2832 NotImplemented "Instruction CMP not yet implemented."
	2833 NotImplemented "Instruction CSET not yet implemented."
	2834 NotImplemented "Instruction CMP not yet implemented."
	2835 NotImplemented "Instruction CSET not yet implemented."
	2836 And W9, W10, W9
	2837 Add S8, S4, S0
	2838 Move TEMP, X9
	2839 And TEMP, TEMP, 1
	2840 Compare TEMP, 1
	2841 JumpIfNotEqual {2850}
	2842 Move V0, [X19+824]
	2843 NotImplemented "Instruction NOP not yet implemented."
	2844 NotImplemented "Instruction MADD not yet implemented."
	2845 Move [X10+344], S0
	2846 Move V2, [X19+828]
	2847 Move [X10+348], S2
	2848 Move V1, [X19+736]
	2849 Subtract S3, S0, S1
	2850 Add S2, S4, S1
	2851 NotImplemented "Instruction FCMP not yet implemented."
	2852 Move V1, V2
	2853 Move V3, V8
	2854 Move V0, [X19+240]
	2855 Subtract S1, S8, S4
	2856 Subtract S3, S2, S4
	2857 NotImplemented "Instruction FDIV not yet implemented."
	2858 NotImplemented "Instruction FDIV not yet implemented."
	2859 NotImplemented "Instruction FCMP not yet implemented."
	2860 NotImplemented "Instruction FCSEL not yet implemented."
	2861 NotImplemented "Instruction FCMP not yet implemented."
	2862 NotImplemented "Instruction FCSEL not yet implemented."
	2863 Move V0, [X19+824]
	2864 Move V4, [X19+828]
	2865 NotImplemented "Instruction NOP not yet implemented."
	2866 NotImplemented "Instruction MADD not yet implemented."
	2867 NotImplemented "Instruction FCMP not yet implemented."
	2868 NotImplemented "Instruction FCSEL not yet implemented."
	2869 NotImplemented "Instruction FCMP not yet implemented."
	2870 NotImplemented "Instruction FCSEL not yet implemented."
	2871 Move [X19+824], S0
	2872 Move [X19+828], S4
	2873 Move [X10+344], S3
	2874 Move [X10+348], S1
	2875 Move V1, [X19+736]
	2876 Subtract S3, S8, S1
	2877 Subtract S2, S2, S1
	2878 NotImplemented "Instruction MADD not yet implemented."
	2879 Move [X10+332], S3
	2880 Move [X8+340], S2
	2881 Move W8, [X19+832]
	2882 Move [X19+888], S2
	2883 Compare W8, 0
	2884 JumpIfEqual {2888}
	2885 Move W8, [X19+892]
	2886 Compare W8, 0
	2887 JumpIfEqual {2970}
	2888 Move TEMP, X9
	2889 And TEMP, TEMP, 1
	2890 Compare TEMP, 1
	2891 JumpIfEqual {2912}
	2892 Move X8, [X19+104]
	2893 Move [X19+884], S0
	2894 Compare X8, 0
	2895 JumpIfEqual {7654}
	2896 Move V9, [X19+880]
	2897 Add X0, X8, 176
	2898 Move X1, X31
	2899 Call FaceInfo.get_capLine, X0
	2900 Move V2, [X31+372]
	2901 Move V1, [X19+736]
	2902 Multiply S0, S13, S0
	2903 NotImplemented "Instruction FDIV not yet implemented."
	2904 NotImplemented "Instruction FCMP not yet implemented."
	2905 NotImplemented "Instruction FCSEL not yet implemented."
	2906 NotImplemented "Instruction FCMP not yet implemented."
	2907 Move [X19+880], S0
	2908 Move V0, [X19+6600]
	2909 NotImplemented "Instruction FCMP not yet implemented."
	2910 NotImplemented "Instruction FCSEL not yet implemented."
	2911 Move [X19+6600], S0
	2912 Move X8, [X31+472]
	2913 Move X8, [X8]
	2914 Compare X8, 0
	2915 JumpIfEqual {7654}
	2916 Move W21, [X23]
	2917 Move W9, [X8+24]
	2918 NotImplemented "Instruction CMP not yet implemented."
	2919 Move X9, W21
	2920 NotImplemented "Instruction MADD not yet implemented."
	2921 Move [X8+416], W31
	2922 Move W28, [X31+4748]
	2923 Move W9, [X19+344]
	2924 NotImplemented "Instruction CMP not yet implemented."
	2925 And W23, W9, 24
	2926 Move W9, [X31+416]
	2927 Compare W9, 0
	2928 JumpIfEqual {2977}
	2929 Move W10, [X31+192]
	2930 NotImplemented "Instruction CMP not yet implemented."
	2931 NotImplemented "Instruction CSET not yet implemented."
	2932 NotImplemented "Instruction BIC not yet implemented."
	2933 Move TEMP, X9
	2934 And TEMP, TEMP, 1
	2935 Compare TEMP, 1
	2936 JumpIfEqual {2981}
	2937 Move W9, [X27]
	2938 NotImplemented "Instruction CMP not yet implemented."
	2939 Move X22, [X31+472]
	2940 And W8, W28, 0xFFFFFFFE
	2941 NotImplemented "Instruction CMP not yet implemented."
	2942 Move W8, [X25+116]
	2943 NotImplemented "Instruction CMP not yet implemented."
	2944 NotImplemented "Instruction FCMP not yet implemented."
	2945 Move S0, W31
	2946 Move W8, [X19+744]
	2947 Compare W8, 0
	2948 JumpIfNotEqual {2952}
	2949 Move V0, [X19+824]
	2950 Move V2, [X19+5548]
	2951 Subtract S0, S0, S2
	2952 Move V2, [X19+828]
	2953 Move V3, [X19+884]
	2954 Subtract S1, S2, S1
	2955 Subtract S1, S3, S1
	2956 Add S0, S1, S0
	2957 Move V1, [X31+272]
	2958 NotImplemented "Instruction FCMP not yet implemented."
	2959 Move W8, [X19+844]
	2960 Add W31, W8, 1
	2961 Move [X19+844], W21
	2962 Move X20, [X31+440]
	2963 Move X1, [X31+232]
	2964 Move X0, X19
	2965 Move X3, X31
	2966 Move X2, X20
	2967 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	2968 Move [X31+4604], W0
	2969 Move [X31+4728], W21
	2970 NotImplemented "Instruction FCMP not yet implemented."
	2971 NotImplemented "Instruction CSET not yet implemented."
	2972 Or W8, W9, W8
	2973 Move TEMP, X8
	2974 And TEMP, TEMP, 1
	2975 Compare TEMP, 1
	2976 JumpIfNotEqual {2908}
	2977 NotImplemented "Instruction CMP not yet implemented."
	2978 Move W9, 0x200B
	2979 NotImplemented "Instruction CMP not yet implemented."
	2980 NotImplemented "Instruction CMP not yet implemented."
	2981 Add X8, X8, 416
	2982 Move W9, 1
	2983 Move [X8], W9
	2984 Move X8, [X31+304]
	2985 Move X9, [X31+312]
	2986 Move X10, [X31+440]
	2987 Move W11, [X31+452]
	2988 Compare W11, 0
	2989 JumpIfEqual {2999}
	2990 Move X8, [X10+72]
	2991 Compare X8, 0
	2992 JumpIfEqual {7654}
	2993 NotImplemented "Instruction LDRSW not yet implemented."
	2994 Move W10, [X8+24]
	2995 NotImplemented "Instruction CMP not yet implemented."
	2996 NotImplemented "Instruction MADD not yet implemented."
	2997 Add X9, X8, 100
	2998 Add X8, X8, 104
	2999 Move V9, [X9]
	3000 Move V2, [X31+292]
	3001 Move V8, [X8]
	3002 Move V0, [X19+860]
	3003 Move V10, [X19+756]
	3004 Subtract S2, S2, S9
	3005 Subtract S2, S2, S8
	3006 Move W8, [X25+182]
	3007 NotImplemented "Instruction FCMP not yet implemented."
	3008 Move S3, -1
	3009 NotImplemented "Instruction FCCMP not yet implemented."
	3010 NotImplemented "Instruction FCSEL not yet implemented."
	3011 Move S11, W31
	3012 Move [X31+364], S0
	3013 Move S0, W31
	3014 Compare W8, 0
	3015 JumpIfNotEqual {3022}
	3016 Add X0, X31, 4096
	3017 Add X0, X0, 480
	3018 Move X1, X31
	3019 Call GlyphMetrics.get_horizontalAdvance, X0
	3020 Move W28, [X31+4748]
	3021 Move V1, [X19+736]
	3022 Move V3, [X31+348]
	3023 Move V2, [X19+5524]
	3024 Move V5, [X19+884]
	3025 Move V4, [X19+828]
	3026 NotImplemented "Instruction CMP not yet implemented."
	3027 NotImplemented "Instruction FCSEL not yet implemented."
	3028 NotImplemented "Instruction FCMP not yet implemented."
	3029 Move W8, [X19+744]
	3030 Compare W8, 0
	3031 JumpIfNotEqual {3035}
	3032 Move V6, [X19+824]
	3033 Move V7, [X19+5548]
	3034 Subtract S11, S6, S7
	3035 Move X8, [X31+456]
	3036 Subtract S6, S4, S1
	3037 Subtract S5, S5, S6
	3038 Move V6, [X31+272]
	3039 Move W21, [X8]
	3040 Add S5, S5, S11
	3041 NotImplemented "Instruction FCMP not yet implemented."
	3042 Move W8, [X19+844]
	3043 Add W31, W8, 1
	3044 Move [X19+844], W21
	3045 Move W8, [X25+168]
	3046 Compare W8, 0
	3047 JumpIfEqual {3062}
	3048 Move V7, [X19+5552]
	3049 Move V6, [X25+208]
	3050 NotImplemented "Instruction FCMP not yet implemented."
	3051 NotImplemented "Instruction FCMP not yet implemented."
	3052 Move W8, [X19+5536]
	3053 Move W9, [X19+5540]
	3054 NotImplemented "Instruction CMP not yet implemented."
	3055 Move X8, [X31+200]
	3056 Move V1, [X25+172]
	3057 Move V5, [X8]
	3058 NotImplemented "Instruction FCMP not yet implemented."
	3059 Move W8, [X19+5536]
	3060 Move W9, [X19+5540]
	3061 NotImplemented "Instruction CMP not yet implemented."
	3062 Move W8, [X25+116]
	3063 Subtract W8, W8, 1
	3064 NotImplemented "Instruction CMP not yet implemented."
	3065 Move X11, -51494912
	3066 Add X11, X11, 3773
	3067 NotImplemented "Instruction ADR not yet implemented."
	3068 Move W10, [X11]
	3069 Add X9, X9, X10
	3070 CallNoReturn X9
	3071 Move W8, [X19+832]
	3072 NotImplemented "Instruction CMP not yet implemented."
	3073 Move X8, 0x4AE000
	3074 Move X8, [X8+3032]
	3075 Move X20, [X31+120]
	3076 Move X1, [X8]
	3077 Move X0, X20
	3078 Call TextProcessingStack`1<WordWrapState>.get_Count, X0
	3079 Compare W0, 0
	3080 JumpIfEqual {4554}
	3081 Move X8, 0x4AE000
	3082 Move X8, [X8+2952]
	3083 Move X0, X20
	3084 Move X1, [X8]
	3085 Add X8, X31, 4096
	3086 Add X8, X8, 656
	3087 Call TextProcessingStack`1<WordWrapState>.Pop, X0
	3088 Add X1, X31, 4096
	3089 Add X0, X31, 3368
	3090 Add X1, X1, 656
	3091 Move W2, 920
	3092 Call 0x3EB2AC0
	3093 Move X21, [X31+440]
	3094 Add X1, X31, 3368
	3095 Move X0, X19
	3096 Move X3, X31
	3097 Move X2, X21
	3098 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	3099 Subtract W8, W0, 1
	3100 Move [X31+4604], W8
	3101 Move W8, [X19+804]
	3102 Move W24, [X31+424]
	3103 Move X28, 0x440000
	3104 Subtract W8, W8, 1
	3105 Move [X19+804], W8
	3106 Move [X31+4728], W8
	3107 Move W8, 0x2026
	3108 Move [X31+4732], W8
	3109 Move X28, [X28+2600]
	3110 Move X23, [X31+456]
	3111 Move X22, [X31+472]
	3112 Move TEMP, X22
	3113 And TEMP, TEMP, 1
	3114 Compare TEMP, 1
	3115 JumpIfNotEqual {3134}
	3116 Move S6, 1
	3117 Subtract S1, S6, S2
	3118 Move X8, -52203520
	3119 Multiply S0, S0, S1
	3120 NotImplemented "Instruction FABS not yet implemented."
	3121 Move V5, [X8+400]
	3122 Multiply S0, S0, S3
	3123 Add S11, S4, S0
	3124 Move V0, [X31+364]
	3125 NotImplemented "Instruction CMP not yet implemented."
	3126 Move V12, V13
	3127 NotImplemented "Instruction FCSEL not yet implemented."
	3128 Multiply S0, S13, S0
	3129 NotImplemented "Instruction FCMP not yet implemented."
	3130 Move X22, [X31+472]
	3131 Move W8, W21
	3132 Move V13, V12
	3133 Move V12, [X31+368]
	3134 Move X22, [X31+472]
	3135 Move W8, W21
	3136 Move X21, [X31+440]
	3137 Move W9, [X31+416]
	3138 Compare W9, 0
	3139 JumpIfEqual {3169}
	3140 Move X9, [X22]
	3141 Compare X9, 0
	3142 JumpIfEqual {7654}
	3143 Move W10, [X9+24]
	3144 NotImplemented "Instruction CMP not yet implemented."
	3145 NotImplemented "Instruction SMADDL not yet implemented."
	3146 Move [X9+416], W31
	3147 Move [X19+820], W8
	3148 Move X8, [X21+72]
	3149 Compare X8, 0
	3150 JumpIfEqual {7654}
	3151 NotImplemented "Instruction LDRSW not yet implemented."
	3152 Move W9, [X8+24]
	3153 NotImplemented "Instruction CMP not yet implemented."
	3154 Move W12, 96
	3155 NotImplemented "Instruction MADD not yet implemented."
	3156 Move W11, [X10+44]
	3157 Add W11, W11, 1
	3158 Move [X10+44], W11
	3159 NotImplemented "Instruction LDRSW not yet implemented."
	3160 Move [X19+840], W11
	3161 NotImplemented "Instruction CMP not yet implemented."
	3162 NotImplemented "Instruction MADD not yet implemented."
	3163 Move [X8+100], S9
	3164 Move [X8+108], S8
	3165 Move W8, [X21+24]
	3166 Move W29, 96
	3167 Add W8, W8, 1
	3168 Move [X21+24], W8
	3169 Move W9, [X31+4748]
	3170 NotImplemented "Instruction CMP not yet implemented."
	3171 Move X9, [X22]
	3172 Compare X9, 0
	3173 JumpIfEqual {7654}
	3174 Move W10, [X9+24]
	3175 NotImplemented "Instruction CMP not yet implemented."
	3176 NotImplemented "Instruction SMADDL not yet implemented."
	3177 Move [X8+416], W31
	3178 Move X22, [X31+472]
	3179 Move W8, [X31+140]
	3180 Compare W8, 0
	3181 JumpIfEqual {3184}
	3182 Move W8, [X19+808]
	3183 NotImplemented "Instruction CMP not yet implemented."
	3184 Move W8, [X25+168]
	3185 Compare W8, 0
	3186 JumpIfEqual {3199}
	3187 Move W8, [X19+5536]
	3188 Move W9, [X19+5540]
	3189 NotImplemented "Instruction CMP not yet implemented."
	3190 Move V0, [X25+264]
	3191 Move W8, 0x42C80000
	3192 Move S3, W8
	3193 NotImplemented "Instruction FDIV not yet implemented."
	3194 NotImplemented "Instruction FCMP not yet implemented."
	3195 Move X8, [X31+200]
	3196 Move V0, [X25+172]
	3197 Move V1, [X8]
	3198 NotImplemented "Instruction FCMP not yet implemented."
	3199 Move W8, [X25+116]
	3200 NotImplemented "Instruction CMP not yet implemented."
	3201 NotImplemented "Instruction CMP not yet implemented."
	3202 Move V13, V12
	3203 NotImplemented "Instruction CMP not yet implemented."
	3204 Move X20, [X31+440]
	3205 Move X1, [X31+184]
	3206 Move X0, X19
	3207 Move X3, X31
	3208 Move X2, X20
	3209 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	3210 Move [X31+4604], W0
	3211 Move [X31+4728], W21
	3212 Move W8, 3
	3213 Move X21, X20
	3214 Move [X31+4732], W8
	3215 Move X20, [X31+440]
	3216 Move X1, [X31+232]
	3217 Move X0, X19
	3218 Move X3, X31
	3219 Move X2, X20
	3220 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	3221 Move [X31+4728], W21
	3222 Move X21, X20
	3223 Move [X31+4604], W0
	3224 Move W8, [X31+4604]
	3225 NotImplemented "Instruction CMP not yet implemented."
	3226 NotImplemented "Instruction CSET not yet implemented."
	3227 Or W8, W9, W8
	3228 Compare W8, 0
	3229 JumpIfEqual {3372}
	3230 Move X8, -52191232
	3231 Move V0, [X8+2912]
	3232 Move X23, [X31+456]
	3233 Move TEMP, 0
	3234 Not TEMP
	3235 Move W8, TEMP
	3236 Move [X31+4604], W8
	3237 Move [X23], W31
	3238 Move [X31+4728], D0
	3239 Move X20, [X31+440]
	3240 Move X1, [X31+232]
	3241 Move X0, X19
	3242 Move X3, X31
	3243 Move X2, X20
	3244 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	3245 Move W8, 3
	3246 Move [X31+4604], W0
	3247 Move [X31+4728], W21
	3248 Move X21, X20
	3249 Move [X31+4732], W8
	3250 Move X28, 0x440000
	3251 Move X28, [X28+2600]
	3252 Move X23, [X31+456]
	3253 Move TEMP, 0x2006
	3254 Not TEMP
	3255 Move W8, TEMP
	3256 Add W8, W28, W8
	3257 NotImplemented "Instruction CMP not yet implemented."
	3258 Move X21, [X31+440]
	3259 Subtract W8, W28, 10
	3260 NotImplemented "Instruction CMP not yet implemented."
	3261 NotImplemented "Instruction CMP not yet implemented."
	3262 Move X8, 0x442000
	3263 Move X8, [X8+368]
	3264 Move X0, [X8]
	3265 Move W8, [X0+224]
	3266 Compare W8, 0
	3267 JumpIfNotEqual {3269}
	3268 Call 0x1C17DFC
	3269 Move W0, W28
	3270 Move X1, X31
	3271 Call Char.IsSeparator, X0
	3272 Move TEMP, X0
	3273 And TEMP, TEMP, 1
	3274 Compare TEMP, 1
	3275 JumpIfNotEqual {3360}
	3276 Move W28, [X31+4748]
	3277 Move W8, [X25+161]
	3278 Move X10, [X31+64]
	3279 Move X9, [X31+72]
	3280 NotImplemented "Instruction CMP not yet implemented."
	3281 Move W8, [X27]
	3282 NotImplemented "Instruction CSEL not yet implemented."
	3283 Move W1, [X9]
	3284 NotImplemented "Instruction CMP not yet implemented."
	3285 NotImplemented "Instruction CMP not yet implemented."
	3286 Move V0, [X31+392]
	3287 Move X0, X19
	3288 Move V1, V12
	3289 Move X2, X25
	3290 Move X3, X21
	3291 Move X4, X31
	3292 Call TextGenerator.SaveGlyphVertexInfo, X0, V0, V1, X1, X2, X3
	3293 Move X1, [X31+184]
	3294 Move X2, [X31+440]
	3295 Move X0, X19
	3296 Move X3, X31
	3297 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	3298 Move [X31+4604], W0
	3299 Move X8, -52203520
	3300 Move V1, [X19+740]
	3301 Move V0, [X8+532]
	3302 Move W1, W0
	3303 NotImplemented "Instruction FCMP not yet implemented."
	3304 Move X9, [X22]
	3305 Compare X9, 0
	3306 JumpIfEqual {7654}
	3307 Move X8, [X31+456]
	3308 Move W10, [X9+24]
	3309 Move W8, [X8]
	3310 NotImplemented "Instruction CMP not yet implemented."
	3311 Move V0, [X19+736]
	3312 Move S1, W31
	3313 NotImplemented "Instruction FCMP not yet implemented."
	3314 Move W10, [X19+744]
	3315 Compare W10, 0
	3316 JumpIfNotEqual {3320}
	3317 Move V1, [X19+824]
	3318 Move V2, [X19+5548]
	3319 Subtract S1, S1, S2
	3320 Move V2, [X19+828]
	3321 Move V3, [X19+5552]
	3322 Move X10, W8
	3323 NotImplemented "Instruction MADD not yet implemented."
	3324 Subtract S1, S1, S2
	3325 Move V2, [X31+132]
	3326 Move V5, [X10+344]
	3327 Move V4, [X25+200]
	3328 Add S2, S2, S3
	3329 Move V3, [X31+136]
	3330 Add S1, S5, S1
	3331 Multiply S2, S3, S2
	3332 Add S1, S1, S2
	3333 Move V2, [X31+336]
	3334 Multiply S2, S2, S4
	3335 Add S1, S2, S1
	3336 Move W9, 1
	3337 NotImplemented "Instruction LSLV not yet implemented."
	3338 Move X9, 1
	3339 NotImplemented "Instruction MOVK not yet implemented."
	3340 And X31, X8, X9
	3341 Move X21, [X31+440]
	3342 NotImplemented "Instruction CMP not yet implemented."
	3343 Move W8, 0x200B
	3344 NotImplemented "Instruction CMP not yet implemented."
	3345 Move W8, 0x2060
	3346 NotImplemented "Instruction CMP not yet implemented."
	3347 Move X8, [X21+72]
	3348 Compare X8, 0
	3349 JumpIfEqual {7654}
	3350 NotImplemented "Instruction LDRSW not yet implemented."
	3351 Move W10, [X8+24]
	3352 NotImplemented "Instruction CMP not yet implemented."
	3353 NotImplemented "Instruction MADD not yet implemented."
	3354 Move W9, [X8+44]
	3355 Add W9, W9, 1
	3356 Move [X8+44], W9
	3357 Move W8, [X21+24]
	3358 Add W8, W8, 1
	3359 Move [X21+24], W8
	3360 Move W8, [X31+4748]
	3361 NotImplemented "Instruction CMP not yet implemented."
	3362 Move X8, [X21+72]
	3363 Compare X8, 0
	3364 JumpIfEqual {7654}
	3365 NotImplemented "Instruction LDRSW not yet implemented."
	3366 Move W10, [X8+24]
	3367 NotImplemented "Instruction CMP not yet implemented."
	3368 NotImplemented "Instruction MADD not yet implemented."
	3369 Move W9, [X8+32]
	3370 Add W9, W9, 1
	3371 Move [X8+32], W9
	3372 Move V0, [X19+824]
	3373 Move X1, [X31+152]
	3374 Move X2, [X31+440]
	3375 Move X0, X19
	3376 Move X3, X31
	3377 Subtract S8, S0, S4
	3378 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	3379 Move V0, [X31+272]
	3380 Move [X31+4604], W0
	3381 Move X28, 0x440000
	3382 Move X28, [X28+2600]
	3383 Move X23, [X31+456]
	3384 Move X22, [X31+472]
	3385 Move W24, [X31+424]
	3386 NotImplemented "Instruction FCMP not yet implemented."
	3387 Move [X31+4728], W21
	3388 Move X21, [X31+440]
	3389 Move W8, 3
	3390 Move [X31+4732], W8
	3391 Subtract W9, W9, 1
	3392 NotImplemented "Instruction CMP not yet implemented."
	3393 Compare X10, 0
	3394 JumpIfEqual {7654}
	3395 NotImplemented "Instruction SMADDL not yet implemented."
	3396 Move V11, [X8+104]
	3397 Add X0, X10, 176
	3398 Move X1, X31
	3399 Call FaceInfo.get_pointSize, X0
	3400 Move X8, [X24]
	3401 Compare X8, 0
	3402 JumpIfNotEqual {1198}
	3403 Move X0, X19
	3404 Move X2, X25
	3405 Move X3, X21
	3406 Move X4, X31
	3407 Call TextGenerator.SaveSpriteVertexInfo, X0, X1, X2, X3
	3408 Move X8, [X31+456]
	3409 Move W9, [X31+180]
	3410 Move W8, [X8]
	3411 Move TEMP, X9
	3412 And TEMP, TEMP, 1
	3413 Compare TEMP, 1
	3414 JumpIfNotEqual {3416}
	3415 Move [X19+816], W8
	3416 Move W9, [X19+836]
	3417 Move [X19+820], W8
	3418 Add W9, W9, 1
	3419 Move [X19+836], W9
	3420 Move X8, [X21+72]
	3421 Compare X8, 0
	3422 JumpIfEqual {7654}
	3423 NotImplemented "Instruction LDRSW not yet implemented."
	3424 Move W10, [X8+24]
	3425 NotImplemented "Instruction CMP not yet implemented."
	3426 NotImplemented "Instruction MADD not yet implemented."
	3427 Move [X31+180], W31
	3428 Move [X8+100], S9
	3429 Move [X8+108], S8
	3430 Move W8, [X25+116]
	3431 Move W9, [X31+452]
	3432 Move W10, [X31+4748]
	3433 NotImplemented "Instruction CMP not yet implemented."
	3434 Xor W9, W9, 1
	3435 NotImplemented "Instruction CSET not yet implemented."
	3436 NotImplemented "Instruction CSET not yet implemented."
	3437 NotImplemented "Instruction CMP not yet implemented."
	3438 Or W9, W11, W9
	3439 NotImplemented "Instruction CSET not yet implemented."
	3440 NotImplemented "Instruction CMP not yet implemented."
	3441 NotImplemented "Instruction CSEL not yet implemented."
	3442 NotImplemented "Instruction CMP not yet implemented."
	3443 Move X8, [X19+6664]
	3444 Compare X8, 0
	3445 JumpIfEqual {7654}
	3446 Move V8, [X19+244]
	3447 Add X0, X8, 176
	3448 Move X1, X31
	3449 Call FaceInfo.get_pointSize, X0
	3450 Move X8, [X19+6664]
	3451 Compare X8, 0
	3452 JumpIfEqual {7654}
	3453 Move W22, W0
	3454 Add X0, X8, 176
	3455 Move X1, X31
	3456 Call FaceInfo.get_scale, X0
	3457 Move W9, [X25+189]
	3458 Move V1, [X31+328]
	3459 Move X8, [X19+6656]
	3460 Move S2, 1
	3461 NotImplemented "Instruction CMP not yet implemented."
	3462 NotImplemented "Instruction FCSEL not yet implemented."
	3463 Compare X8, 0
	3464 JumpIfEqual {7654}
	3465 Move X0, [X8+32]
	3466 Compare X0, 0
	3467 JumpIfEqual {7654}
	3468 NotImplemented "Instruction SCVTF not yet implemented."
	3469 Move V9, [X19+240]
	3470 Move V11, [X8+44]
	3471 NotImplemented "Instruction FDIV not yet implemented."
	3472 Multiply S0, S2, S0
	3473 Move X1, X31
	3474 Multiply S8, S0, S1
	3475 Call Glyph.get_scale, X0
	3476 Move X9, [X31+312]
	3477 Move W8, [X31+4748]
	3478 Multiply S1, S9, S8
	3479 Multiply S1, S1, S11
	3480 Move V10, [X9]
	3481 Move X9, [X31+304]
	3482 NotImplemented "Instruction CMP not yet implemented."
	3483 Multiply S8, S1, S0
	3484 Move V9, [X9]
	3485 Move W8, [X19+804]
	3486 Move W9, [X19+808]
	3487 Move X22, [X31+472]
	3488 NotImplemented "Instruction CMP not yet implemented."
	3489 Move X9, [X22]
	3490 Compare X9, 0
	3491 JumpIfEqual {7654}
	3492 Move W10, [X9+24]
	3493 Subtract W8, W8, 1
	3494 NotImplemented "Instruction CMP not yet implemented."
	3495 Move X10, [X19+6664]
	3496 Compare X10, 0
	3497 JumpIfEqual {7654}
	3498 NotImplemented "Instruction SMADDL not yet implemented."
	3499 Move V8, [X8+104]
	3500 Add X0, X10, 176
	3501 Move X1, X31
	3502 Call FaceInfo.get_pointSize, X0
	3503 Move X8, [X19+6664]
	3504 Compare X8, 0
	3505 JumpIfEqual {7654}
	3506 Move W22, W0
	3507 Add X0, X8, 176
	3508 Move X1, X31
	3509 Call FaceInfo.get_scale, X0
	3510 Move W9, [X25+189]
	3511 Move V9, V0
	3512 Move V0, [X31+328]
	3513 Move X8, [X19+6656]
	3514 NotImplemented "Instruction CMP not yet implemented."
	3515 Move S1, 1
	3516 NotImplemented "Instruction FCSEL not yet implemented."
	3517 Compare X8, 0
	3518 JumpIfEqual {7654}
	3519 Move X0, [X8+32]
	3520 Compare X0, 0
	3521 JumpIfEqual {7654}
	3522 Move V11, [X19+240]
	3523 Move V12, [X8+44]
	3524 Move X1, X31
	3525 Call Glyph.get_scale, X0
	3526 Move X8, [X21+72]
	3527 Compare X8, 0
	3528 JumpIfEqual {7654}
	3529 NotImplemented "Instruction LDRSW not yet implemented."
	3530 Move W10, [X8+24]
	3531 NotImplemented "Instruction CMP not yet implemented."
	3532 NotImplemented "Instruction SCVTF not yet implemented."
	3533 NotImplemented "Instruction FDIV not yet implemented."
	3534 NotImplemented "Instruction MADD not yet implemented."
	3535 Multiply S1, S1, S9
	3536 Multiply S1, S1, S10
	3537 Move S10, [X8+100]
	3538 Move S9, [X8+104]
	3539 Multiply S1, S11, S1
	3540 Multiply S1, S1, S12
	3541 Multiply S8, S1, S0
	3542 Move X22, [X31+472]
	3543 Move W8, [X25+182]
	3544 Move V11, [X19+756]
	3545 Move S0, W31
	3546 Compare W8, 0
	3547 JumpIfNotEqual {3566}
	3548 Move X8, [X19+6656]
	3549 Compare X8, 0
	3550 JumpIfEqual {7654}
	3551 Move X0, [X8+32]
	3552 Compare X0, 0
	3553 JumpIfEqual {7654}
	3554 Add X8, X31, 4096
	3555 Add X8, X8, 656
	3556 Move X1, X31
	3557 Call Glyph.get_metrics, X0
	3558 Move V0, [X31+297]
	3559 Move W8, [X31+4768]
	3560 Add X0, X31, 4096
	3561 Add X0, X0, 432
	3562 Move X1, X31
	3563 Move [X31+283], V0
	3564 Move [X31+4544], W8
	3565 Call GlyphMetrics.get_horizontalAdvance, X0
	3566 Move V2, [X19+5524]
	3567 Move V3, [X31+292]
	3568 Move V4, [X19+860]
	3569 Move S6, 1
	3570 Subtract S2, S6, S2
	3571 Subtract S3, S3, S10
	3572 Move X8, -52203520
	3573 Subtract S3, S3, S9
	3574 Multiply S0, S0, S2
	3575 Move V2, [X8+400]
	3576 NotImplemented "Instruction FCMP not yet implemented."
	3577 Move S5, -1
	3578 NotImplemented "Instruction FCCMP not yet implemented."
	3579 NotImplemented "Instruction FABS not yet implemented."
	3580 Multiply S0, S8, S0
	3581 NotImplemented "Instruction FCSEL not yet implemented."
	3582 NotImplemented "Instruction CMP not yet implemented."
	3583 Add S0, S1, S0
	3584 NotImplemented "Instruction FCSEL not yet implemented."
	3585 Multiply S1, S1, S3
	3586 NotImplemented "Instruction FCMP not yet implemented."
	3587 Move X23, [X31+104]
	3588 Move W2, [X31+4604]
	3589 Move W3, [X19+804]
	3590 Move X0, X19
	3591 Move X1, X23
	3592 Move X4, X21
	3593 Move X5, X31
	3594 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	3595 Move X8, 0x4AE000
	3596 Move X8, [X8+2960]
	3597 Add X0, X31, 4096
	3598 Add X0, X0, 656
	3599 Move W2, 920
	3600 Move X22, [X8]
	3601 Move X1, X23
	3602 Call 0x3EB2AC0
	3603 Move X0, [X31+120]
	3604 Move X2, X22
	3605 Move X22, [X31+472]
	3606 Add X1, X31, 4096
	3607 Add X1, X1, 656
	3608 Call TextProcessingStack`1<WordWrapState>.Push, X0, X1
	3609 Move X9, [X22]
	3610 Compare X9, 0
	3611 JumpIfEqual {7654}
	3612 Move X23, [X31+456]
	3613 Move W8, [X9+24]
	3614 NotImplemented "Instruction LDRSW not yet implemented."
	3615 NotImplemented "Instruction CMP not yet implemented."
	3616 NotImplemented "Instruction LDRSW not yet implemented."
	3617 NotImplemented "Instruction NOP not yet implemented."
	3618 NotImplemented "Instruction MADD not yet implemented."
	3619 Move [X9+108], W8
	3620 Move W10, [X19+848]
	3621 Move [X9+112], W10
	3622 Move W9, [X31+452]
	3623 Move TEMP, X9
	3624 And TEMP, TEMP, 1
	3625 Compare TEMP, 1
	3626 JumpIfEqual {3633}
	3627 Move W9, [X31+4748]
	3628 NotImplemented "Instruction CMP not yet implemented."
	3629 Move W10, 1
	3630 NotImplemented "Instruction LSLV not yet implemented."
	3631 Move W10, 0x2C00
	3632 And W31, W9, W10
	3633 Move X9, [X21+72]
	3634 Compare X9, 0
	3635 JumpIfEqual {7654}
	3636 Move W10, [X9+24]
	3637 NotImplemented "Instruction CMP not yet implemented."
	3638 NotImplemented "Instruction MADD not yet implemented."
	3639 Move W10, [X10+36]
	3640 NotImplemented "Instruction CMP not yet implemented."
	3641 Move X9, [X21+72]
	3642 Compare X9, 0
	3643 JumpIfEqual {7654}
	3644 Move W10, [X9+24]
	3645 NotImplemented "Instruction CMP not yet implemented."
	3646 Move W10, [X19+344]
	3647 NotImplemented "Instruction NOP not yet implemented."
	3648 NotImplemented "Instruction MADD not yet implemented."
	3649 Move [X8+108], W10
	3650 Move W8, [X31+4748]
	3651 Move W9, 0x200B
	3652 NotImplemented "Instruction CMP not yet implemented."
	3653 NotImplemented "Instruction CMP not yet implemented."
	3654 Move X28, [X31+400]
	3655 Move X8, [X28]
	3656 Compare X8, 0
	3657 JumpIfEqual {7654}
	3658 Add X0, X8, 176
	3659 Move X1, X31
	3660 Call FaceInfo.get_tabWidth, X0
	3661 Move X0, [X28]
	3662 Compare X0, 0
	3663 JumpIfEqual {7654}
	3664 Move X1, X31
	3665 Move V8, V0
	3666 Call FontAsset.get_tabMultiple, X0
	3667 And W8, W0, 255
	3668 Move V0, [X19+756]
	3669 NotImplemented "Instruction UCVTF not yet implemented."
	3670 Multiply S1, S8, S1
	3671 Multiply S1, S13, S1
	3672 NotImplemented "Instruction FDIV not yet implemented."
	3673 NotImplemented "Instruction FRINTP not yet implemented."
	3674 Multiply S2, S1, S2
	3675 Add S1, S0, S1
	3676 NotImplemented "Instruction FCMP not yet implemented."
	3677 NotImplemented "Instruction FCSEL not yet implemented."
	3678 Move V8, [X19+752]
	3679 NotImplemented "Instruction FCMP not yet implemented."
	3680 Move X8, [X31+400]
	3681 Move X0, [X8]
	3682 Compare X0, 0
	3683 JumpIfEqual {7654}
	3684 Move V9, [X19+756]
	3685 Move X1, X31
	3686 Call FontAsset.get_regularStyleSpacing, X0
	3687 Move V4, [X31+384]
	3688 Move V3, [X31+244]
	3689 Move V1, [X19+748]
	3690 Move V2, [X19+5524]
	3691 Add S0, S4, S0
	3692 Move V4, [X31+336]
	3693 Subtract S3, S8, S3
	3694 Multiply S0, S4, S0
	3695 Add S0, S3, S0
	3696 Add S0, S1, S0
	3697 Move S1, 1
	3698 Subtract S1, S1, S2
	3699 Multiply S0, S1, S0
	3700 Add S0, S9, S0
	3701 Move W8, [X31+416]
	3702 Move [X19+756], S0
	3703 Compare W8, 0
	3704 JumpIfNotEqual {3708}
	3705 Move W8, [X31+4748]
	3706 Move W9, 0x200B
	3707 NotImplemented "Instruction CMP not yet implemented."
	3708 Move V1, [X25+196]
	3709 Move V2, [X31+336]
	3710 Multiply S1, S2, S1
	3711 Add S0, S0, S1
	3712 Move W8, [X25+182]
	3713 Move V10, [X19+756]
	3714 Add X0, X31, 4096
	3715 Compare W8, 0
	3716 JumpIfEqual {4450}
	3717 Add X0, X0, 464
	3718 Move X1, X31
	3719 Call GlyphValueRecord.get_xAdvance, X0
	3720 Move X8, [X31+400]
	3721 Move X0, [X8]
	3722 Compare X0, 0
	3723 JumpIfEqual {7654}
	3724 Move X1, X31
	3725 Move V8, V0
	3726 Call FontAsset.get_regularStyleSpacing, X0
	3727 Move V4, [X31+384]
	3728 Move V1, [X19+748]
	3729 Move V2, [X19+5524]
	3730 Multiply S3, S13, S8
	3731 Add S0, S4, S0
	3732 Move V4, [X31+320]
	3733 Move W8, [X31+416]
	3734 Add S0, S4, S0
	3735 Move V4, [X31+336]
	3736 Multiply S0, S4, S0
	3737 Add S0, S3, S0
	3738 Add S0, S1, S0
	3739 Move S1, 1
	3740 Subtract S1, S1, S2
	3741 Multiply S0, S1, S0
	3742 Subtract S0, S10, S0
	3743 Move [X19+756], S0
	3744 Compare W8, 0
	3745 JumpIfNotEqual {3749}
	3746 Move W8, [X31+4748]
	3747 Move W9, 0x200B
	3748 NotImplemented "Instruction CMP not yet implemented."
	3749 Move V1, [X25+196]
	3750 Move V2, [X31+336]
	3751 Multiply S1, S2, S1
	3752 Subtract S0, S0, S1
	3753 Move [X19+756], S0
	3754 Move X9, [X22]
	3755 Compare X9, 0
	3756 JumpIfEqual {7654}
	3757 Move W8, [X23]
	3758 Move W10, [X9+24]
	3759 NotImplemented "Instruction CMP not yet implemented."
	3760 Move V0, [X19+756]
	3761 Move X10, W8
	3762 NotImplemented "Instruction MADD not yet implemented."
	3763 Move [X9+356], S0
	3764 Move W22, [X31+4748]
	3765 NotImplemented "Instruction CMP not yet implemented."
	3766 Move V0, [X19+764]
	3767 Move S1, W31
	3768 Add S0, S0, S1
	3769 Move [X19+756], S0
	3770 Move W9, [X25+116]
	3771 NotImplemented "Instruction CMP not yet implemented."
	3772 NotImplemented "Instruction CMP not yet implemented."
	3773 Move W9, 1
	3774 NotImplemented "Instruction LSLV not yet implemented."
	3775 Move W10, 0x2C00
	3776 And W31, W9, W10
	3777 Move TEMP, 0x2027
	3778 Not TEMP
	3779 Move W9, TEMP
	3780 Add W9, W22, W9
	3781 NotImplemented "Instruction CMP not yet implemented."
	3782 Move X8, [X31+80]
	3783 Move X9, [X8]
	3784 Compare X9, 0
	3785 JumpIfEqual {7654}
	3786 Move W8, [X19+848]
	3787 Move W10, [X9+24]
	3788 Add W22, W8, 1
	3789 NotImplemented "Instruction CMP not yet implemented."
	3790 Move X8, 0x4AE000
	3791 Move X8, [X8+2920]
	3792 Move X0, [X8]
	3793 Move W8, [X0+224]
	3794 Compare W8, 0
	3795 JumpIfNotEqual {3797}
	3796 Call 0x1C17DFC
	3797 Move X8, 0x4AE000
	3798 Move X8, [X8+2904]
	3799 Move X28, [X31+80]
	3800 Move W2, 1
	3801 Move W1, W22
	3802 Move X3, [X8]
	3803 Move X0, X28
	3804 Call TextInfo.Resize, X0, X1, X2
	3805 Move X9, [X28]
	3806 Compare X9, 0
	3807 JumpIfEqual {7654}
	3808 Move W8, [X19+848]
	3809 Move W10, [X9+24]
	3810 NotImplemented "Instruction CMP not yet implemented."
	3811 Move V0, [X19+6600]
	3812 Move W12, 20
	3813 NotImplemented "Instruction SMADDL not yet implemented."
	3814 Move V1, [X10+48]
	3815 Move [X10+40], S0
	3816 Move V0, [X19+888]
	3817 NotImplemented "Instruction FCMP not yet implemented."
	3818 NotImplemented "Instruction FCSEL not yet implemented."
	3819 Move [X10+48], S0
	3820 Move W11, [X19+892]
	3821 Move X10, W8
	3822 Compare W11, 0
	3823 JumpIfEqual {3829}
	3824 Move W8, [X19+804]
	3825 NotImplemented "Instruction NOP not yet implemented."
	3826 NotImplemented "Instruction MADD not yet implemented."
	3827 Move [X19+892], W31
	3828 Move [X11+32], W8
	3829 Move W8, [X23]
	3830 NotImplemented "Instruction NOP not yet implemented."
	3831 NotImplemented "Instruction MADD not yet implemented."
	3832 Move [X9+36], W8
	3833 Move W22, [X31+4748]
	3834 NotImplemented "Instruction CMP not yet implemented."
	3835 Move W9, 1
	3836 NotImplemented "Instruction LSLV not yet implemented."
	3837 Move W10, 3080
	3838 And W31, W9, W10
	3839 Move TEMP, 0x2027
	3840 Not TEMP
	3841 Move W9, TEMP
	3842 Add W9, W22, W9
	3843 NotImplemented "Instruction CMP not yet implemented."
	3844 Move V0, [X19+736]
	3845 Move X22, [X31+472]
	3846 NotImplemented "Instruction FCMP not yet implemented."
	3847 Move X8, 0x440000
	3848 Move X8, [X8+1448]
	3849 Move V8, [X19+824]
	3850 Move V9, [X19+5548]
	3851 Move X0, [X8]
	3852 Move W8, [X0+224]
	3853 Compare W8, 0
	3854 JumpIfNotEqual {3856}
	3855 Call 0x1C17DFC
	3856 Move V1, [X31+176]
	3857 Subtract S9, S8, S9
	3858 NotImplemented "Instruction FABS not yet implemented."
	3859 NotImplemented "Instruction FCMP not yet implemented."
	3860 Move W8, [X19+744]
	3861 Compare W8, 0
	3862 JumpIfNotEqual {3929}
	3863 Move W8, [X19+892]
	3864 NotImplemented "Instruction CMP not yet implemented."
	3865 Move X8, 0x4AE000
	3866 Move X8, [X8+2888]
	3867 Move W22, [X19+808]
	3868 Move W25, [X19+804]
	3869 Move X0, [X8]
	3870 Move W8, [X0+224]
	3871 Compare W8, 0
	3872 JumpIfNotEqual {3874}
	3873 Call 0x1C17DFC
	3874 Move W0, W22
	3875 Move W1, W25
	3876 Move V0, V9
	3877 Move X2, X21
	3878 Move X3, X31
	3879 Call TextGeneratorUtilities.AdjustLineOffset, X0, X1, V0, X2
	3880 Move V0, [X19+888]
	3881 Move V1, [X19+736]
	3882 Move W8, [X19+2776]
	3883 Move W9, [X19+832]
	3884 Move X25, [X31+464]
	3885 Move X22, [X31+472]
	3886 Subtract S0, S0, S9
	3887 Add S1, S9, S1
	3888 NotImplemented "Instruction CMP not yet implemented."
	3889 Move [X19+888], S0
	3890 Move [X19+736], S1
	3891 Move X8, 0x4AE000
	3892 Move X8, [X8+2952]
	3893 Move X29, [X31+120]
	3894 Move X1, [X8]
	3895 Add X8, X31, 4096
	3896 Add X8, X8, 656
	3897 Move X0, X29
	3898 Call TextProcessingStack`1<WordWrapState>.Pop, X0
	3899 Add X1, X31, 4096
	3900 Add X0, X31, 544
	3901 Add X1, X1, 656
	3902 Move W2, 920
	3903 Call 0x3EB2AC0
	3904 Move X28, [X31+104]
	3905 Add X1, X31, 544
	3906 Move W2, 920
	3907 Move X0, X28
	3908 Call 0x3EB2AC0
	3909 Move V0, [X19+2800]
	3910 Move V1, [X19+2852]
	3911 Move X8, 0x4AD000
	3912 Add X0, X31, 4096
	3913 Add S0, S9, S0
	3914 Add S1, S9, S1
	3915 Move [X19+2800], S0
	3916 Move [X19+2852], S1
	3917 Move X8, [X8+2960]
	3918 Add X0, X0, 656
	3919 Move W2, 920
	3920 Move X1, X28
	3921 Move X22, [X8]
	3922 Call 0x3EB2AC0
	3923 Move X2, X22
	3924 Move X22, [X31+472]
	3925 Add X1, X31, 4096
	3926 Add X1, X1, 656
	3927 Move X0, X29
	3928 Call TextProcessingStack`1<WordWrapState>.Push, X0, X1
	3929 Move V0, [X19+736]
	3930 Move V1, [X19+828]
	3931 Move V2, [X19+888]
	3932 Add X8, X31, 4096
	3933 Move [X19+892], W31
	3934 Subtract S8, S1, S0
	3935 NotImplemented "Instruction FCMP not yet implemented."
	3936 NotImplemented "Instruction FCSEL not yet implemented."
	3937 Move [X19+888], S2
	3938 Add X8, X8, 384
	3939 Move W8, [X8+260]
	3940 Move V1, [X19+824]
	3941 Compare W8, 0
	3942 JumpIfNotEqual {3944}
	3943 Move [X31+4744], S2
	3944 Move W8, [X25+232]
	3945 Move W29, 96
	3946 Compare W8, 0
	3947 JumpIfEqual {3958}
	3948 Move W8, [X23]
	3949 Move W9, [X25+216]
	3950 NotImplemented "Instruction CMP not yet implemented."
	3951 Move W8, [X19+832]
	3952 Move W9, [X25+224]
	3953 NotImplemented "Instruction CMP not yet implemented."
	3954 Add X8, X31, 4096
	3955 Add X8, X8, 384
	3956 Move W9, 1
	3957 Move [X8+260], W9
	3958 Move X28, 0x43F000
	3959 Move X8, [X21+72]
	3960 Move X28, [X28+2600]
	3961 Compare X8, 0
	3962 JumpIfEqual {7654}
	3963 NotImplemented "Instruction LDRSW not yet implemented."
	3964 Move W10, [X8+24]
	3965 NotImplemented "Instruction CMP not yet implemented."
	3966 Move W11, [X19+808]
	3967 NotImplemented "Instruction NOP not yet implemented."
	3968 NotImplemented "Instruction MADD not yet implemented."
	3969 Move [X12+56], W11
	3970 Move W10, [X19+816]
	3971 Move W13, [X19+808]
	3972 NotImplemented "Instruction CMP not yet implemented."
	3973 NotImplemented "Instruction CSEL not yet implemented."
	3974 Move [X19+816], W10
	3975 Move [X12+60], W10
	3976 Move W13, [X19+804]
	3977 Move [X19+812], W13
	3978 Move [X12+64], W13
	3979 Move W14, [X19+820]
	3980 Move W15, [X19+816]
	3981 Subtract W11, W13, W11
	3982 Add W11, W11, 1
	3983 NotImplemented "Instruction CMP not yet implemented."
	3984 NotImplemented "Instruction CSEL not yet implemented."
	3985 Move [X19+820], W13
	3986 Move [X12+68], W13
	3987 Move [X12+36], W11
	3988 Move W11, [X19+836]
	3989 Move [X12+40], W11
	3990 Move W11, [X19+840]
	3991 Move [X12+48], W11
	3992 Move X11, [X22]
	3993 Compare X11, 0
	3994 JumpIfEqual {7654}
	3995 Move W12, [X11+24]
	3996 NotImplemented "Instruction CMP not yet implemented."
	3997 NotImplemented "Instruction SMADDL not yet implemented."
	3998 Move W10, [X10+292]
	3999 NotImplemented "Instruction NOP not yet implemented."
	4000 NotImplemented "Instruction MADD not yet implemented."
	4001 Move [X8+116], S8
	4002 Move [X8+112], W10
	4003 Move X8, [X21+72]
	4004 Compare X8, 0
	4005 JumpIfEqual {7654}
	4006 NotImplemented "Instruction LDRSW not yet implemented."
	4007 Move W10, [X8+24]
	4008 NotImplemented "Instruction CMP not yet implemented."
	4009 Move X10, [X22]
	4010 Compare X10, 0
	4011 JumpIfEqual {7654}
	4012 NotImplemented "Instruction LDRSW not yet implemented."
	4013 Move W12, [X10+24]
	4014 NotImplemented "Instruction CMP not yet implemented."
	4015 NotImplemented "Instruction MADD not yet implemented."
	4016 Move W10, [X10+304]
	4017 Subtract S9, S1, S0
	4018 NotImplemented "Instruction MADD not yet implemented."
	4019 Move [X8+124], S9
	4020 Move [X8+120], W10
	4021 Move X8, [X21+72]
	4022 Compare X8, 0
	4023 JumpIfEqual {7654}
	4024 NotImplemented "Instruction LDRSW not yet implemented."
	4025 Move W10, [X8+24]
	4026 NotImplemented "Instruction CMP not yet implemented."
	4027 NotImplemented "Instruction MADD not yet implemented."
	4028 Move V1, [X31+392]
	4029 Move V0, [X10+120]
	4030 Move W11, [X10+36]
	4031 Multiply S1, S13, S1
	4032 Subtract S0, S0, S1
	4033 Move [X10+72], S0
	4034 Move V0, [X31+364]
	4035 NotImplemented "Instruction CMP not yet implemented."
	4036 Move [X10+96], S0
	4037 Move W10, [X19+344]
	4038 NotImplemented "Instruction NOP not yet implemented."
	4039 NotImplemented "Instruction MADD not yet implemented."
	4040 Move [X8+108], W10
	4041 Move X8, [X31+400]
	4042 Move X0, [X8]
	4043 Compare X0, 0
	4044 JumpIfEqual {7654}
	4045 Move X1, X31
	4046 Call FontAsset.get_regularStyleSpacing, X0
	4047 Move X8, [X22]
	4048 Compare X8, 0
	4049 JumpIfEqual {7654}
	4050 NotImplemented "Instruction LDRSW not yet implemented."
	4051 Move W12, [X8+24]
	4052 NotImplemented "Instruction CMP not yet implemented."
	4053 Move X9, [X21+72]
	4054 Compare X9, 0
	4055 JumpIfEqual {7654}
	4056 NotImplemented "Instruction MADD not yet implemented."
	4057 Move V1, [X19+748]
	4058 Move V2, [X19+5524]
	4059 Move W13, [X11+416]
	4060 NotImplemented "Instruction LDRSW not yet implemented."
	4061 Compare W13, 0
	4062 JumpIfNotEqual {4065}
	4063 NotImplemented "Instruction LDRSW not yet implemented."
	4064 NotImplemented "Instruction CMP not yet implemented."
	4065 Move X12, [X9+24]
	4066 NotImplemented "Instruction CMP not yet implemented."
	4067 Move V3, [X31+384]
	4068 Move V4, [X31+320]
	4069 Move W13, [X25+182]
	4070 NotImplemented "Instruction NOP not yet implemented."
	4071 NotImplemented "Instruction MADD not yet implemented."
	4072 Add S0, S3, S0
	4073 Add S0, S4, S0
	4074 Move V4, [X31+336]
	4075 Move S3, 1
	4076 Subtract S2, S3, S2
	4077 Move V3, [X10+356]
	4078 Multiply S0, S4, S0
	4079 Add S0, S1, S0
	4080 Multiply S0, S2, S0
	4081 NotImplemented "Instruction CMP not yet implemented."
	4082 NotImplemented "Instruction FNEG not yet implemented."
	4083 NotImplemented "Instruction FCSEL not yet implemented."
	4084 NotImplemented "Instruction MADD not yet implemented."
	4085 Add S0, S3, S0
	4086 NotImplemented "Instruction CMP not yet implemented."
	4087 Move [X10+92], S0
	4088 Move V2, [X31+172]
	4089 Move V0, [X19+736]
	4090 Subtract S1, S9, S8
	4091 NotImplemented "Instruction MADD not yet implemented."
	4092 Add S1, S2, S1
	4093 Move S2, W31
	4094 Subtract S0, S2, S0
	4095 Move [X9+84], S0
	4096 Move [X9+92], S8
	4097 Move [X9+76], S1
	4098 Move [X9+84], S9
	4099 Move W22, [X31+4748]
	4100 NotImplemented "Instruction CMP not yet implemented."
	4101 Subtract W9, W22, 10
	4102 NotImplemented "Instruction CMP not yet implemented."
	4103 NotImplemented "Instruction CMP not yet implemented."
	4104 Move X9, [X19+32]
	4105 Compare X9, 0
	4106 JumpIfEqual {7654}
	4107 Move X9, [X9+24]
	4108 Move [X31+4604], W9
	4109 Move TEMP, 0x2027
	4110 Not TEMP
	4111 Move W9, TEMP
	4112 Add W9, W22, W9
	4113 NotImplemented "Instruction CMP not yet implemented."
	4114 NotImplemented "Instruction CMP not yet implemented."
	4115 Move W2, [X31+4604]
	4116 Move W3, [X19+804]
	4117 Move X1, [X31+152]
	4118 Move X0, X19
	4119 Move X4, X21
	4120 Move X5, X31
	4121 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	4122 Move W8, [X19+832]
	4123 Move W3, [X19+804]
	4124 Add W22, W8, 1
	4125 Add W8, W3, 1
	4126 Move [X19+832], W22
	4127 Move [X19+808], W8
	4128 Move [X23+32], X31
	4129 Move X8, [X21+72]
	4130 Compare X8, 0
	4131 JumpIfEqual {7654}
	4132 Move W8, [X8+24]
	4133 Move W24, [X31+424]
	4134 NotImplemented "Instruction CMP not yet implemented."
	4135 Move X8, 0x4AD000
	4136 Move X8, [X8+2888]
	4137 Move X0, [X8]
	4138 Move W8, [X0+224]
	4139 Compare W8, 0
	4140 JumpIfNotEqual {4142}
	4141 Call 0x1C17DFC
	4142 Move W0, W22
	4143 Move X1, X21
	4144 Move X2, X31
	4145 Call TextGeneratorUtilities.ResizeLineExtents, X0, X1
	4146 Move W3, [X23]
	4147 Move X22, [X31+472]
	4148 Move X8, [X22]
	4149 Compare X8, 0
	4150 JumpIfEqual {7654}
	4151 Move W9, [X8+24]
	4152 NotImplemented "Instruction CMP not yet implemented."
	4153 Move X9, -52207616
	4154 Move V1, [X19+740]
	4155 Move V2, [X9+532]
	4156 NotImplemented "Instruction NOP not yet implemented."
	4157 NotImplemented "Instruction SMADDL not yet implemented."
	4158 Move V0, [X8+344]
	4159 NotImplemented "Instruction FCMP not yet implemented."
	4160 Move W8, [X31+4748]
	4161 Move W9, 0x2029
	4162 Move S1, W31
	4163 NotImplemented "Instruction CMP not yet implemented."
	4164 NotImplemented "Instruction CMP not yet implemented."
	4165 Move S2, W31
	4166 Move V2, [X25+204]
	4167 Move V3, [X19+828]
	4168 Move V4, [X19+5552]
	4169 Move V5, [X25+200]
	4170 Move V6, [X19+736]
	4171 Subtract S1, S1, S3
	4172 Move V3, [X31+132]
	4173 Add S1, S0, S1
	4174 Add S2, S5, S2
	4175 Move W8, W31
	4176 Add S3, S3, S4
	4177 Move V4, [X31+136]
	4178 Multiply S3, S4, S3
	4179 Add S1, S1, S3
	4180 Move V3, [X31+336]
	4181 Multiply S2, S3, S2
	4182 Add S1, S1, S2
	4183 Add S1, S1, S6
	4184 Move W8, [X31+4748]
	4185 Move W9, 0x2029
	4186 NotImplemented "Instruction CMP not yet implemented."
	4187 NotImplemented "Instruction CMP not yet implemented."
	4188 Move S2, W31
	4189 Move V2, [X25+204]
	4190 Move V3, [X25+200]
	4191 Move V4, [X19+736]
	4192 Move W8, 1
	4193 Add S2, S3, S2
	4194 Move V3, [X31+336]
	4195 Multiply S2, S3, S2
	4196 Add S1, S1, S2
	4197 Add S1, S4, S1
	4198 Move [X19+736], S1
	4199 Move V1, [X19+760]
	4200 Move V2, [X19+764]
	4201 Move V3, [X31+144]
	4202 Move [X19+5548], S0
	4203 Move S0, W31
	4204 Add S0, S1, S0
	4205 Add S0, S0, S2
	4206 Move [X19+744], W8
	4207 Move [X19+824], D3
	4208 Move [X19+756], S0
	4209 Move W2, [X31+4604]
	4210 Move X1, [X31+184]
	4211 Move X0, X19
	4212 Move X4, X21
	4213 Move X5, X31
	4214 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	4215 Move W2, [X31+4604]
	4216 Move W3, [X19+804]
	4217 Move X1, [X31+232]
	4218 Move X0, X19
	4219 Move X4, X21
	4220 Move X5, X31
	4221 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	4222 Move W8, [X19+804]
	4223 Move W9, 1
	4224 Move [X31+224], W9
	4225 Add W8, W8, 1
	4226 Move [X19+804], W8
	4227 Move W8, 1
	4228 Move [X31+180], W8
	4229 Move W10, [X31+452]
	4230 NotImplemented "Instruction CMP not yet implemented."
	4231 NotImplemented "Instruction CSET not yet implemented."
	4232 And W9, W10, W9
	4233 Move TEMP, X9
	4234 And TEMP, TEMP, 1
	4235 Compare TEMP, 1
	4236 JumpIfEqual {3844}
	4237 Move W9, [X31+228]
	4238 NotImplemented "Instruction CMP not yet implemented."
	4239 Move X8, [X31+472]
	4240 Move X28, 0x43F000
	4241 Move X8, [X8]
	4242 Move X28, [X28+2600]
	4243 Compare X8, 0
	4244 JumpIfEqual {7654}
	4245 NotImplemented "Instruction LDRSW not yet implemented."
	4246 Move W9, [X8+24]
	4247 NotImplemented "Instruction CMP not yet implemented."
	4248 NotImplemented "Instruction MADD not yet implemented."
	4249 Move W9, [X9+416]
	4250 Compare W9, 0
	4251 JumpIfEqual {4264}
	4252 NotImplemented "Instruction MADD not yet implemented."
	4253 Add X9, X8, 292
	4254 Move V0, [X19+864]
	4255 Move V1, [X9]
	4256 NotImplemented "Instruction INVALID not yet implemented."
	4257 NotImplemented "Instruction INVALID not yet implemented."
	4258 Move [X19+864], D0
	4259 Move V0, [X19+872]
	4260 Move V1, [X8+304]
	4261 NotImplemented "Instruction INVALID not yet implemented."
	4262 NotImplemented "Instruction INVALID not yet implemented."
	4263 Move [X19+872], D0
	4264 Move W8, [X31+140]
	4265 Compare W8, 0
	4266 JumpIfNotEqual {4273}
	4267 Move W8, [X25+116]
	4268 NotImplemented "Instruction CMP not yet implemented."
	4269 Move W9, 1
	4270 NotImplemented "Instruction LSLV not yet implemented."
	4271 Move W9, 74
	4272 And W31, W8, W9
	4273 Move W8, [X31+416]
	4274 Compare W8, 0
	4275 JumpIfEqual {4302}
	4276 Move W8, [X19+893]
	4277 NotImplemented "Instruction CMP not yet implemented."
	4278 Move TEMP, 0x2006
	4279 Not TEMP
	4280 Move W8, TEMP
	4281 Add W8, W22, W8
	4282 NotImplemented "Instruction CMP not yet implemented."
	4283 Move W9, 1
	4284 NotImplemented "Instruction LSLV not yet implemented."
	4285 Move X9, 1025
	4286 NotImplemented "Instruction MOVK not yet implemented."
	4287 And X31, X8, X9
	4288 NotImplemented "Instruction CMP not yet implemented."
	4289 Move W8, 0x2060
	4290 NotImplemented "Instruction CMP not yet implemented."
	4291 Move W2, [X31+4604]
	4292 Move X1, [X31+184]
	4293 Move X0, X19
	4294 Move X4, X21
	4295 Move X5, X31
	4296 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	4297 Move TEMP, 0
	4298 Not TEMP
	4299 Move W8, TEMP
	4300 Move [X31+224], W31
	4301 Move [X19+4576], W8
	4302 NotImplemented "Instruction CMP not yet implemented."
	4303 Move W8, 0x200B
	4304 NotImplemented "Instruction CMP not yet implemented."
	4305 NotImplemented "Instruction CMP not yet implemented."
	4306 Move W8, [X19+893]
	4307 Compare W8, 0
	4308 JumpIfNotEqual {4408}
	4309 Move X8, 0x4AD000
	4310 Move X8, [X8+2888]
	4311 Move X0, [X8]
	4312 Move W8, [X0+224]
	4313 Compare W8, 0
	4314 JumpIfNotEqual {4316}
	4315 Call 0x1C17DFC
	4316 Move W0, W22
	4317 Move X1, X31
	4318 Call TextGeneratorUtilities.IsHangul, X0
	4319 Move X22, [X31+96]
	4320 Move TEMP, X0
	4321 And TEMP, TEMP, 1
	4322 Compare TEMP, 1
	4323 JumpIfNotEqual {4334}
	4324 Compare X22, 0
	4325 JumpIfEqual {7654}
	4326 Move X0, X22
	4327 Move X1, X31
	4328 Call TextSettings.get_lineBreakingRules, X0
	4329 Compare X0, 0
	4330 JumpIfEqual {7654}
	4331 Move W8, [X0+40]
	4332 Compare W8, 0
	4333 JumpIfEqual {4352}
	4334 Move X8, 0x4AD000
	4335 Move X8, [X8+2888]
	4336 Move W22, [X31+4748]
	4337 Move X0, [X8]
	4338 Move W8, [X0+224]
	4339 Compare W8, 0
	4340 JumpIfNotEqual {4342}
	4341 Call 0x1C17DFC
	4342 Move W0, W22
	4343 Move X1, X31
	4344 Call TextGeneratorUtilities.IsCJK, X0
	4345 Move TEMP, X0
	4346 And TEMP, TEMP, 1
	4347 Compare TEMP, 1
	4348 JumpIfNotEqual {4408}
	4349 Move X22, [X31+96]
	4350 Compare X22, 0
	4351 JumpIfEqual {7654}
	4352 Move X0, X22
	4353 Move X1, X31
	4354 Call TextSettings.get_lineBreakingRules, X0
	4355 Compare X0, 0
	4356 JumpIfEqual {7654}
	4357 Move X1, X31
	4358 Call UnicodeLineBreakingRules.get_leadingCharactersLookup, X0
	4359 Compare X0, 0
	4360 JumpIfEqual {7654}
	4361 Move X8, 0x4A4000
	4362 Move W1, [X31+4748]
	4363 Move X8, [X8+3584]
	4364 Move X2, [X8]
	4365 Call HashSet`1<UInt32>.Contains, X0, X1
	4366 Move W3, [X23]
	4367 Move W8, [X31+228]
	4368 Move W22, W0
	4369 NotImplemented "Instruction CMP not yet implemented."
	4370 Move X0, [X31+96]
	4371 Move X1, X31
	4372 Call TextSettings.get_lineBreakingRules, X0
	4373 Compare X0, 0
	4374 JumpIfEqual {7654}
	4375 Move X1, X31
	4376 Call UnicodeLineBreakingRules.get_followingCharactersLookup, X0
	4377 Move X8, [X31+472]
	4378 Move X8, [X8]
	4379 Compare X8, 0
	4380 JumpIfEqual {7654}
	4381 Move W9, [X23]
	4382 Move W10, [X8+24]
	4383 Add W9, W9, 1
	4384 NotImplemented "Instruction CMP not yet implemented."
	4385 Compare X0, 0
	4386 JumpIfEqual {7654}
	4387 NotImplemented "Instruction SMADDL not yet implemented."
	4388 NotImplemented "Instruction LDRH not yet implemented."
	4389 Move X8, 0x4A4000
	4390 Move X8, [X8+3584]
	4391 Move X2, [X8]
	4392 Call HashSet`1<UInt32>.Contains, X0, X1
	4393 Move TEMP, X22
	4394 And TEMP, TEMP, 1
	4395 Compare TEMP, 1
	4396 JumpIfEqual {4541}
	4397 Move TEMP, X0
	4398 And TEMP, TEMP, 1
	4399 Compare TEMP, 1
	4400 JumpIfNotEqual {4727}
	4401 Move W8, [X31+224]
	4402 Move TEMP, X8
	4403 And TEMP, TEMP, 1
	4404 Compare TEMP, 1
	4405 JumpIfNotEqual {4734}
	4406 Move X22, [X31+472]
	4407 Move W24, [X31+424]
	4408 Move W8, [X31+224]
	4409 Move TEMP, X8
	4410 And TEMP, TEMP, 1
	4411 Compare TEMP, 1
	4412 JumpIfNotEqual {4734}
	4413 Move W9, [X31+416]
	4414 Move W8, [X31+4748]
	4415 Move X22, [X31+472]
	4416 Move W24, [X31+424]
	4417 NotImplemented "Instruction CMP not yet implemented."
	4418 NotImplemented "Instruction CSET not yet implemented."
	4419 NotImplemented "Instruction CMP not yet implemented."
	4420 NotImplemented "Instruction CSET not yet implemented."
	4421 NotImplemented "Instruction CMP not yet implemented."
	4422 And W9, W9, W10
	4423 NotImplemented "Instruction CSET not yet implemented."
	4424 Move TEMP, X9
	4425 And TEMP, TEMP, 1
	4426 Compare TEMP, 1
	4427 JumpIfEqual {4434}
	4428 Move W9, [X31+192]
	4429 Or W8, W9, W8
	4430 Move TEMP, X8
	4431 And TEMP, TEMP, 1
	4432 Compare TEMP, 1
	4433 JumpIfEqual {4441}
	4434 Move W2, [X31+4604]
	4435 Move W3, [X19+804]
	4436 Move X1, [X31+48]
	4437 Move X0, X19
	4438 Move X4, X21
	4439 Move X5, X31
	4440 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	4441 Move W2, [X31+4604]
	4442 Move W3, [X19+804]
	4443 Move X1, [X31+184]
	4444 Move X0, X19
	4445 Move X4, X21
	4446 Move X5, X31
	4447 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	4448 Move W8, 1
	4449 Move [X31+224], W8
	4450 Add X0, X0, 480
	4451 Move X1, X31
	4452 Call GlyphMetrics.get_horizontalAdvance, X0
	4453 Move V11, [X19+6568]
	4454 Add X0, X31, 4096
	4455 Add X0, X0, 464
	4456 Move X1, X31
	4457 Move V8, V0
	4458 Call GlyphValueRecord.get_xAdvance, X0
	4459 Move X0, [X19+104]
	4460 Compare X0, 0
	4461 JumpIfEqual {7654}
	4462 Move X1, X31
	4463 Move V9, V0
	4464 Call FontAsset.get_regularStyleSpacing, X0
	4465 Move V4, [X31+384]
	4466 Move V1, [X19+748]
	4467 Multiply S3, S8, S11
	4468 Move V2, [X19+5524]
	4469 Add S0, S4, S0
	4470 Move V4, [X31+320]
	4471 Add S3, S3, S9
	4472 Multiply S3, S13, S3
	4473 Add S0, S4, S0
	4474 Move V4, [X31+336]
	4475 Multiply S0, S4, S0
	4476 Add S0, S3, S0
	4477 Add S0, S1, S0
	4478 Move S1, 1
	4479 Subtract S1, S1, S2
	4480 Multiply S0, S1, S0
	4481 Add S0, S10, S0
	4482 Move X8, 0x4AD000
	4483 Move X8, [X8+3032]
	4484 Move X20, [X31+120]
	4485 Move X1, [X8]
	4486 Move X0, X20
	4487 Call TextProcessingStack`1<WordWrapState>.get_Count, X0
	4488 Move X28, 0x43F000
	4489 Move X28, [X28+2600]
	4490 Move V13, V12
	4491 Compare W0, 0
	4492 JumpIfEqual {4716}
	4493 Move X8, 0x4AD000
	4494 Move X8, [X8+2952]
	4495 Move X0, X20
	4496 Move X1, [X8]
	4497 Add X8, X31, 4096
	4498 Add X8, X8, 656
	4499 Call TextProcessingStack`1<WordWrapState>.Pop, X0
	4500 Add X1, X31, 4096
	4501 Add X0, X31, 1528
	4502 Add X1, X1, 656
	4503 Move W2, 920
	4504 Call 0x3EB2AC0
	4505 Move X21, [X31+440]
	4506 Add X1, X31, 1528
	4507 Move X0, X19
	4508 Move X3, X31
	4509 Move X2, X21
	4510 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	4511 Subtract W8, W0, 1
	4512 Move [X31+4604], W8
	4513 Move W8, [X19+804]
	4514 Move W24, [X31+424]
	4515 Move X23, [X31+456]
	4516 Subtract W8, W8, 1
	4517 Move [X19+804], W8
	4518 Move [X31+4728], W8
	4519 Move W8, 0x2026
	4520 Move [X31+4732], W8
	4521 Add W24, W24, 1
	4522 Move X21, [X31+440]
	4523 Move X1, [X31+184]
	4524 Move X0, X19
	4525 Move X3, X31
	4526 Move X2, X21
	4527 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	4528 Move [X31+4604], W0
	4529 Move W8, [X19+804]
	4530 Move W9, 3
	4531 Move [X31+4732], W9
	4532 Move [X31+4728], W8
	4533 Move X28, 0x43F000
	4534 Move X28, [X28+2600]
	4535 Move X23, [X31+456]
	4536 Move V12, [X31+368]
	4537 Move TEMP, X22
	4538 And TEMP, TEMP, 1
	4539 Compare TEMP, 1
	4540 JumpIfNotEqual {4728}
	4541 Move W9, [X31+224]
	4542 NotImplemented "Instruction CMP not yet implemented."
	4543 Move X22, [X31+472]
	4544 Move W24, [X31+424]
	4545 NotImplemented "Instruction CSET not yet implemented."
	4546 NotImplemented "Instruction ORN not yet implemented."
	4547 Move TEMP, X8
	4548 And TEMP, TEMP, 1
	4549 Compare TEMP, 1
	4550 JumpIfEqual {4737}
	4551 Move W8, [X31+416]
	4552 Compare W8, 0
	4553 JumpIfNotEqual {4434}
	4554 Move X8, -52195328
	4555 Move V0, [X8+2912]
	4556 Move X23, [X31+456]
	4557 Move TEMP, 0
	4558 Not TEMP
	4559 Move W8, TEMP
	4560 Move [X31+4604], W8
	4561 Move [X31+4728], D0
	4562 Move [X23], X31
	4563 Move X28, 0x43F000
	4564 Move X21, [X31+440]
	4565 Move X28, [X28+2600]
	4566 Move X22, [X31+472]
	4567 Move W24, [X31+424]
	4568 Move W8, 1
	4569 Move V2, [X25+200]
	4570 Move [X19+744], W8
	4571 Move X9, [X22]
	4572 Compare X9, 0
	4573 JumpIfEqual {7654}
	4574 Move V3, [X31+336]
	4575 Move V0, [X19+736]
	4576 Move W8, [X19+804]
	4577 Multiply S2, S3, S2
	4578 Add S1, S1, S2
	4579 Move W11, [X9+24]
	4580 NotImplemented "Instruction CMP not yet implemented."
	4581 Subtract W10, W8, 1
	4582 NotImplemented "Instruction CMP not yet implemented."
	4583 NotImplemented "Instruction SMADDL not yet implemented."
	4584 NotImplemented "Instruction LDRH not yet implemented."
	4585 Move V2, [X19+884]
	4586 NotImplemented "Instruction NOP not yet implemented."
	4587 NotImplemented "Instruction SMADDL not yet implemented."
	4588 Move V3, [X11+348]
	4589 NotImplemented "Instruction CMP not yet implemented."
	4590 Move W12, [X31+192]
	4591 Add S1, S1, S2
	4592 Add S0, S1, S0
	4593 NotImplemented "Instruction CSET not yet implemented."
	4594 Or W11, W12, W11
	4595 Subtract S10, S0, S3
	4596 Move TEMP, X11
	4597 And TEMP, TEMP, 1
	4598 Compare TEMP, 1
	4599 JumpIfEqual {4605}
	4600 Move V0, [X31+272]
	4601 NotImplemented "Instruction FCMP not yet implemented."
	4602 Move W11, [X25+116]
	4603 Compare W11, 0
	4604 JumpIfEqual {4703}
	4605 Move W10, W8
	4606 Move X10, W10
	4607 NotImplemented "Instruction MADD not yet implemented."
	4608 NotImplemented "Instruction LDRH not yet implemented."
	4609 NotImplemented "Instruction CMP not yet implemented."
	4610 Move W8, 1
	4611 Move [X31+192], W8
	4612 Move X28, 0x43F000
	4613 Move X21, [X31+440]
	4614 Move X28, [X28+2600]
	4615 Move X23, [X31+456]
	4616 Move W9, [X25+168]
	4617 Move W10, [X31+224]
	4618 And W9, W10, W9
	4619 Move TEMP, X9
	4620 And TEMP, TEMP, 1
	4621 Compare TEMP, 1
	4622 JumpIfNotEqual {4639}
	4623 Move V0, [X25+264]
	4624 Move V1, [X19+5524]
	4625 Move W9, 0x42C80000
	4626 Move S2, W9
	4627 NotImplemented "Instruction FDIV not yet implemented."
	4628 NotImplemented "Instruction FCMP not yet implemented."
	4629 Move W9, [X19+5536]
	4630 Move W10, [X19+5540]
	4631 NotImplemented "Instruction CMP not yet implemented."
	4632 Move X9, [X31+200]
	4633 Move V0, [X25+172]
	4634 Move V1, [X9]
	4635 NotImplemented "Instruction FCMP not yet implemented."
	4636 Move W9, [X19+5536]
	4637 Move W10, [X19+5540]
	4638 NotImplemented "Instruction CMP not yet implemented."
	4639 Move X9, [X31+48]
	4640 Move W10, [X31+40]
	4641 Move W22, [X9]
	4642 Add W31, W22, 1
	4643 NotImplemented "Instruction CSET not yet implemented."
	4644 NotImplemented "Instruction CMP not yet implemented."
	4645 Move W10, [X31+224]
	4646 And W9, W10, W9
	4647 Compare W9, 0
	4648 JumpIfEqual {4748}
	4649 Move X25, [X31+440]
	4650 Move X1, [X31+48]
	4651 Move X0, X19
	4652 Move X3, X31
	4653 Move X2, X25
	4654 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	4655 Move [X31+4604], W0
	4656 Move X10, [X25+48]
	4657 Compare X10, 0
	4658 JumpIfEqual {7654}
	4659 Move X8, [X31+456]
	4660 Move W11, [X10+24]
	4661 Move W8, [X8]
	4662 Subtract W9, W8, 1
	4663 NotImplemented "Instruction CMP not yet implemented."
	4664 NotImplemented "Instruction SMADDL not yet implemented."
	4665 NotImplemented "Instruction LDRH not yet implemented."
	4666 Move X25, [X31+464]
	4667 Move W1, W0
	4668 NotImplemented "Instruction CMP not yet implemented."
	4669 Move X23, [X31+456]
	4670 Move W8, 45
	4671 Move [X31+4732], W8
	4672 Subtract W8, W1, 1
	4673 Move [X31+192], W31
	4674 Move [X31+4728], W9
	4675 Move [X31+4604], W8
	4676 Move [X23], W9
	4677 Move [X31+40], W22
	4678 Move X28, 0x43F000
	4679 Move X21, [X31+440]
	4680 Move X28, [X28+2600]
	4681 Move X22, [X31+472]
	4682 Move W8, [X19+804]
	4683 Move V0, [X31+144]
	4684 Move X21, [X31+440]
	4685 Move S1, W31
	4686 Move [X19+808], W8
	4687 Move W8, [X19+832]
	4688 Move [X19+824], D0
	4689 Move V0, [X19+764]
	4690 Move W9, 1
	4691 Add W8, W8, 1
	4692 Move [X19+832], W8
	4693 Move W8, [X19+848]
	4694 Add S0, S0, S1
	4695 Move [X19+892], W9
	4696 Move [X19+5548], W31
	4697 Add W8, W8, 1
	4698 Move [X19+736], W31
	4699 Move [X19+884], W31
	4700 Move [X19+6600], W31
	4701 Move [X19+756], S0
	4702 Move [X19+848], W8
	4703 Move X23, [X31+456]
	4704 Move W8, 45
	4705 Move [X31+4732], W8
	4706 Subtract W8, W1, 1
	4707 Move [X31+192], W31
	4708 Move [X31+4728], W10
	4709 Move [X31+4604], W8
	4710 Move [X23], W10
	4711 Move X28, 0x43F000
	4712 Move X21, [X31+440]
	4713 Move X28, [X28+2600]
	4714 Move W24, [X31+424]
	4715 Move V13, V12
	4716 Move X8, -52195328
	4717 Move V0, [X8+2912]
	4718 Move X23, [X31+456]
	4719 Move X21, [X31+440]
	4720 Move W24, [X31+424]
	4721 Move TEMP, 0
	4722 Not TEMP
	4723 Move W8, TEMP
	4724 Move [X31+4604], W8
	4725 Move [X31+4728], D0
	4726 Move [X23], X31
	4727 Move W3, [X23]
	4728 Move W2, [X31+4604]
	4729 Move X1, [X31+184]
	4730 Move X0, X19
	4731 Move X4, X21
	4732 Move X5, X31
	4733 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	4734 Move [X31+224], W31
	4735 Move X22, [X31+472]
	4736 Move W24, [X31+424]
	4737 Move W2, [X31+4604]
	4738 Move W3, [X19+804]
	4739 Move X1, [X31+232]
	4740 Move X0, X19
	4741 Move X4, X21
	4742 Move X5, X31
	4743 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	4744 Move W8, [X19+804]
	4745 Add W8, W8, 1
	4746 Move [X19+804], W8
	4747 Move [X31+40], W22
	4748 Move V0, [X31+272]
	4749 NotImplemented "Instruction FCMP not yet implemented."
	4750 Move W9, [X19+844]
	4751 Move X22, [X31+472]
	4752 Add W31, W9, 1
	4753 Move [X19+844], W8
	4754 Move W9, [X25+168]
	4755 Compare W9, 0
	4756 JumpIfEqual {4779}
	4757 Move V1, [X19+5552]
	4758 Move V0, [X25+208]
	4759 NotImplemented "Instruction FCMP not yet implemented."
	4760 Move W9, [X19+5536]
	4761 Move W10, [X19+5540]
	4762 NotImplemented "Instruction CMP not yet implemented."
	4763 Move V0, [X25+264]
	4764 Move V1, [X19+5524]
	4765 Move W9, 0x42C80000
	4766 Move S2, W9
	4767 NotImplemented "Instruction FDIV not yet implemented."
	4768 NotImplemented "Instruction FCMP not yet implemented."
	4769 Move W9, [X19+5536]
	4770 Move W10, [X19+5540]
	4771 NotImplemented "Instruction CMP not yet implemented."
	4772 Move X9, [X31+200]
	4773 Move V0, [X25+172]
	4774 Move V1, [X9]
	4775 NotImplemented "Instruction FCMP not yet implemented."
	4776 Move W9, [X19+5536]
	4777 Move W10, [X19+5540]
	4778 NotImplemented "Instruction CMP not yet implemented."
	4779 Move W9, [X25+116]
	4780 NotImplemented "Instruction CMP not yet implemented."
	4781 Move X12, -51499008
	4782 Add X12, X12, 3779
	4783 NotImplemented "Instruction ADR not yet implemented."
	4784 Move W11, [X12]
	4785 Add X10, X10, X11
	4786 Move V13, V12
	4787 CallNoReturn X10
	4788 Move X21, [X31+440]
	4789 Move S6, [X31+132]
	4790 Move S0, [X31+136]
	4791 Move V2, [X31+336]
	4792 Move V3, [X31+320]
	4793 Move V4, [X31+384]
	4794 Move V5, [X31+364]
	4795 Add X2, X31, 4096
	4796 Add X3, X31, 4096
	4797 Add X2, X2, 644
	4798 Add X3, X3, 648
	4799 Move X0, X19
	4800 Move V1, V13
	4801 Move X4, X25
	4802 Move X5, X21
	4803 Move X6, X31
	4804 Call TextGenerator.InsertNewLine, X0, X1, V0, V1, V2, V3, V4, V5, V6, X2, X3, X4, X5
	4805 Move W8, 1
	4806 Move [X31+192], W31
	4807 Move [X31+224], W8
	4808 Move X21, [X31+440]
	4809 Move S6, [X31+132]
	4810 Move S0, [X31+136]
	4811 Move V2, [X31+336]
	4812 Move V3, [X31+320]
	4813 Move V4, [X31+384]
	4814 Move V5, [X31+364]
	4815 Add X2, X31, 4096
	4816 Add X3, X31, 4096
	4817 Add X2, X2, 644
	4818 Add X3, X3, 648
	4819 Move X0, X19
	4820 Move V1, V12
	4821 Move X4, X25
	4822 Move X5, X21
	4823 Move X6, X31
	4824 Move V13, V12
	4825 Call TextGenerator.InsertNewLine, X0, X1, V0, V1, V2, V3, V4, V5, V6, X2, X3, X4, X5
	4826 Move W8, 1
	4827 Move [X31+224], W8
	4828 Move W8, 1
	4829 Move [X31+192], W31
	4830 Move [X31+180], W8
	4831 Move [X31+192], W31
	4832 Move X8, 0x4AD000
	4833 Move X8, [X8+3032]
	4834 Move X20, [X31+120]
	4835 Move X1, [X8]
	4836 Move X0, X20
	4837 Call TextProcessingStack`1<WordWrapState>.get_Count, X0
	4838 Move X28, 0x43F000
	4839 Move X28, [X28+2600]
	4840 Move X23, [X31+456]
	4841 Move W24, [X31+424]
	4842 Compare W0, 0
	4843 JumpIfEqual {4913}
	4844 Move X8, 0x4AD000
	4845 Move X8, [X8+2952]
	4846 Move X0, X20
	4847 Move X1, [X8]
	4848 Add X8, X31, 4096
	4849 Add X8, X8, 656
	4850 Call TextProcessingStack`1<WordWrapState>.Pop, X0
	4851 Add X1, X31, 4096
	4852 Add X0, X31, 2448
	4853 Add X1, X1, 656
	4854 Move W2, 920
	4855 Call 0x3EB2AC0
	4856 Move X21, [X31+440]
	4857 Add X1, X31, 2448
	4858 Move X0, X19
	4859 Move X3, X31
	4860 Move X2, X21
	4861 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	4862 Subtract W8, W0, 1
	4863 Move [X31+4604], W8
	4864 Move W8, [X19+804]
	4865 Move [X31+192], W31
	4866 Add W24, W24, 1
	4867 Subtract W8, W8, 1
	4868 Move [X19+804], W8
	4869 Move [X31+4728], W8
	4870 Move W8, 0x2026
	4871 Move X20, [X31+440]
	4872 Move X1, [X31+232]
	4873 Move X0, X19
	4874 Move X3, X31
	4875 Move X2, X20
	4876 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	4877 Move [X31+192], W31
	4878 Move X21, [X31+440]
	4879 Move S6, [X31+132]
	4880 Move S0, [X31+136]
	4881 Move V2, [X31+336]
	4882 Move V3, [X31+320]
	4883 Move V4, [X31+384]
	4884 Move V5, [X31+364]
	4885 Add X2, X31, 4096
	4886 Add X3, X31, 4096
	4887 Move W9, 1
	4888 Move W8, 1
	4889 Add X2, X2, 644
	4890 Add X3, X3, 648
	4891 Move X0, X19
	4892 Move V1, V13
	4893 Move X4, X25
	4894 Move X5, X21
	4895 Move X6, X31
	4896 Move [X31+224], W8
	4897 Move [X19+892], W9
	4898 Call TextGenerator.InsertNewLine, X0, X1, V0, V1, V2, V3, V4, V5, V6, X2, X3, X4, X5
	4899 Move W8, [X19+848]
	4900 Move [X31+192], W31
	4901 Move [X19+5548], W31
	4902 Move [X19+736], W31
	4903 Add W8, W8, 1
	4904 Move [X19+884], W31
	4905 Move [X19+6600], W31
	4906 Move [X19+848], W8
	4907 Move W8, 1
	4908 Move [X31+180], W8
	4909 Move X21, [X31+440]
	4910 Move [X31+4728], W8
	4911 Move W8, 3
	4912 Move [X31+192], W31
	4913 Move X8, -52195328
	4914 Move V0, [X8+2912]
	4915 Move X21, [X31+440]
	4916 Move TEMP, 0
	4917 Not TEMP
	4918 Move W8, TEMP
	4919 Move [X31+192], W31
	4920 Move W8, [X25+168]
	4921 Compare W8, 0
	4922 JumpIfEqual {4967}
	4923 Move V1, [X19+5528]
	4924 Move V0, [X19+5532]
	4925 Move X8, -52207616
	4926 Move V2, [X8+208]
	4927 Subtract S0, S1, S0
	4928 NotImplemented "Instruction FCMP not yet implemented."
	4929 Move X8, [X31+200]
	4930 Move V2, [X25+176]
	4931 Move V0, [X8]
	4932 NotImplemented "Instruction FCMP not yet implemented."
	4933 Move W8, [X19+5536]
	4934 Move W9, [X19+5540]
	4935 NotImplemented "Instruction CMP not yet implemented."
	4936 Move V2, [X25+264]
	4937 Move V3, [X19+5524]
	4938 Move W8, 0x42C80000
	4939 Move X26, [X31+160]
	4940 Move S4, W8
	4941 NotImplemented "Instruction FDIV not yet implemented."
	4942 NotImplemented "Instruction FCMP not yet implemented."
	4943 Move [X19+5524], W31
	4944 Move X8, -52211712
	4945 Move V3, [X8+512]
	4946 Subtract S1, S1, S0
	4947 Move S4, 0.5
	4948 Multiply S1, S1, S4
	4949 NotImplemented "Instruction FMAXNM not yet implemented."
	4950 Move [X19+5532], S0
	4951 Move S3, 20
	4952 Add S0, S0, S1
	4953 Multiply S0, S0, S3
	4954 Move X8, -52211712
	4955 Add S0, S0, S4
	4956 Move V1, [X8+1056]
	4957 NotImplemented "Instruction FCVTZS not yet implemented."
	4958 NotImplemented "Instruction SCVTF not yet implemented."
	4959 Move W8, 0x7F800000
	4960 NotImplemented "Instruction FDIV not yet implemented."
	4961 Move S4, W8
	4962 NotImplemented "Instruction FCMP not yet implemented."
	4963 NotImplemented "Instruction FCSEL not yet implemented."
	4964 NotImplemented "Instruction FCMP not yet implemented."
	4965 NotImplemented "Instruction FCSEL not yet implemented."
	4966 Move [X19+236], S0
	4967 Move W8, 1
	4968 Move [X27+48], W8
	4969 Move W8, [X19+5536]
	4970 Move W9, [X19+5540]
	4971 Move X26, [X31+160]
	4972 NotImplemented "Instruction CMP not yet implemented."
	4973 Move X0, [X31+112]
	4974 Move X1, X31
	4975 Call Int32.ToString, X0
	4976 Move X22, X0
	4977 Move X0, [X31+200]
	4978 Move X1, X31
	4979 Call Single.ToString, X0
	4980 Move X8, 0x4A3000
	4981 Move X8, [X8+1056]
	4982 Move X9, 0x4A3000
	4983 Move X9, [X9+1032]
	4984 Move X3, X0
	4985 Move X8, [X8]
	4986 Move X1, X22
	4987 Move X2, [X9]
	4988 Move X4, X31
	4989 Move X0, X8
	4990 Call String.Concat, X0, X1, X2, X3
	4991 Move X8, [X28]
	4992 Move X22, X0
	4993 Move W9, [X8+224]
	4994 Compare W9, 0
	4995 JumpIfNotEqual {4998}
	4996 Move X0, X8
	4997 Call 0x1C17DFC
	4998 Move X0, X22
	4999 Move X1, X31
	5000 Call Debug.Log, X0
	5001 Move X22, [X31+472]
	5002 Move W8, [X23]
	5003 Compare W8, 0
	5004 JumpIfEqual {5008}
	5005 NotImplemented "Instruction CMP not yet implemented."
	5006 Move W8, [X31+4748]
	5007 NotImplemented "Instruction CMP not yet implemented."
	5008 Move W0, 1
	5009 Move X1, X21
	5010 Move X2, X31
	5011 Call TextGenerator.ClearMesh, X0, X1
	5012 Move X20, [X21+88]
	5013 Compare X20, 0
	5014 JumpIfEqual {7654}
	5015 Move X24, 0x4AC000
	5016 Move X24, [X24+1736]
	5017 NotImplemented "Instruction LDRSW not yet implemented."
	5018 Move X0, [X24]
	5019 Move W8, [X0+224]
	5020 Compare W8, 0
	5021 JumpIfNotEqual {5023}
	5022 Call 0x1C17DFC
	5023 Move W8, [X20+24]
	5024 NotImplemented "Instruction CMP not yet implemented."
	5025 Move W8, 80
	5026 NotImplemented "Instruction MADD not yet implemented."
	5027 Add X0, X8, 32
	5028 Move W1, W31
	5029 Move X2, X31
	5030 Call MeshInfo.Clear, X0, X1
	5031 Move X8, 0x723000
	5032 Move W8, [X8+1923]
	5033 Compare W8, 0
	5034 JumpIfNotEqual {5041}
	5035 Move X0, 0x43E000
	5036 Move X0, [X0+1440]
	5037 Call 0x1C17CF4
	5038 Move W8, 1
	5039 Move X9, 0x723000
	5040 Move [X9+1923], W8
	5041 Move X8, 0x43E000
	5042 Move X8, [X8+1440]
	5043 Move W9, [X25+112]
	5044 Move X21, [X31+440]
	5045 Move W11, [X31+128]
	5046 Move X8, [X8]
	5047 NotImplemented "Instruction CMP not yet implemented."
	5048 Move X8, [X8+184]
	5049 Move V0, [X8]
	5050 Move [X31+348], S0
	5051 NotImplemented "Instruction LDUR not yet implemented."
	5052 Move X8, [X19+80]
	5053 Move [X31+328], D0
	5054 Move W10, 0x1004
	5055 NotImplemented "Instruction CMP not yet implemented."
	5056 Move W10, 0x2002
	5057 NotImplemented "Instruction CMP not yet implemented."
	5058 Move W10, 0x2008
	5059 NotImplemented "Instruction CMP not yet implemented."
	5060 Move W10, 0x2010
	5061 NotImplemented "Instruction CMP not yet implemented."
	5062 Move W10, 0x2020
	5063 NotImplemented "Instruction CMP not yet implemented."
	5064 NotImplemented "Instruction CMP not yet implemented."
	5065 NotImplemented "Instruction CMP not yet implemented."
	5066 NotImplemented "Instruction CMP not yet implemented."
	5067 NotImplemented "Instruction CMP not yet implemented."
	5068 NotImplemented "Instruction CMP not yet implemented."
	5069 NotImplemented "Instruction CMP not yet implemented."
	5070 Move V0, [X31+348]
	5071 Move TEMP, 4096
	5072 Not TEMP
	5073 Move W10, TEMP
	5074 Add W9, W9, W10
	5075 NotImplemented "Instruction CMP not yet implemented."
	5076 Move [X31+292], S0
	5077 Move V0, [X31+328]
	5078 Move [X31+280], D0
	5079 Move V0, [X31+348]
	5080 NotImplemented "Instruction CMP not yet implemented."
	5081 Move [X31+292], S0
	5082 Move V0, [X31+328]
	5083 Move [X31+280], D0
	5084 NotImplemented "Instruction CMP not yet implemented."
	5085 NotImplemented "Instruction CMP not yet implemented."
	5086 Move V0, [X31+348]
	5087 Subtract W9, W9, 513
	5088 NotImplemented "Instruction CMP not yet implemented."
	5089 Move [X31+292], S0
	5090 Move V0, [X31+328]
	5091 Move [X31+280], D0
	5092 Move V0, [X31+348]
	5093 NotImplemented "Instruction CMP not yet implemented."
	5094 Move [X31+292], S0
	5095 Move V0, [X31+328]
	5096 Move [X31+280], D0
	5097 Move W10, 0x1010
	5098 NotImplemented "Instruction CMP not yet implemented."
	5099 Move W10, 0x1020
	5100 NotImplemented "Instruction CMP not yet implemented."
	5101 Move V0, [X31+348]
	5102 Move TEMP, 0x2000
	5103 Not TEMP
	5104 Move W10, TEMP
	5105 Add W9, W9, W10
	5106 NotImplemented "Instruction CMP not yet implemented."
	5107 Move [X31+292], S0
	5108 Move V0, [X31+328]
	5109 Move [X31+280], D0
	5110 NotImplemented "Instruction CMP not yet implemented."
	5111 NotImplemented "Instruction CMP not yet implemented."
	5112 Move V0, [X31+348]
	5113 Subtract W9, W9, 1025
	5114 NotImplemented "Instruction CMP not yet implemented."
	5115 Move [X31+292], S0
	5116 Move V0, [X31+328]
	5117 Move [X31+280], D0
	5118 Move V0, [X31+348]
	5119 Subtract W9, W9, 2049
	5120 NotImplemented "Instruction CMP not yet implemented."
	5121 Move [X31+292], S0
	5122 Move V0, [X31+328]
	5123 Move [X31+280], D0
	5124 Move V0, [X31+348]
	5125 Move W10, 1
	5126 NotImplemented "Instruction LSLV not yet implemented."
	5127 Move W10, 139
	5128 Move [X31+292], S0
	5129 Move V0, [X31+328]
	5130 And W31, W9, W10
	5131 Move [X31+280], D0
	5132 Compare X8, 0
	5133 JumpIfEqual {7654}
	5134 Move W9, [X8+24]
	5135 NotImplemented "Instruction CMP not yet implemented."
	5136 Compare W9, 0
	5137 JumpIfEqual {7655}
	5138 Move V1, [X8+32]
	5139 Move V2, [X8+44]
	5140 NotImplemented "Instruction LDUR not yet implemented."
	5141 Move V3, [X8+48]
	5142 Move V16, [X31+92]
	5143 Move S4, 0.5
	5144 Move S6, W31
	5145 Add S1, S1, S2
	5146 NotImplemented "Instruction MOVI not yet implemented."
	5147 Add S6, S16, S6
	5148 Add V0, V0, V3
	5149 Multiply S1, S1, S4
	5150 NotImplemented "Instruction MOVI not yet implemented."
	5151 NotImplemented "Instruction INVALID not yet implemented."
	5152 Add S1, S6, S1
	5153 Move [X31+292], S1
	5154 Add V0, V0, V7
	5155 Move V0, [X31+348]
	5156 Subtract W9, W9, 257
	5157 NotImplemented "Instruction CMP not yet implemented."
	5158 Move [X31+292], S0
	5159 Move V0, [X31+328]
	5160 Move [X31+280], D0
	5161 Move V0, [X31+348]
	5162 Move W10, 1
	5163 NotImplemented "Instruction LSLV not yet implemented."
	5164 Move W10, 139
	5165 Move [X31+292], S0
	5166 Move V0, [X31+328]
	5167 And W31, W9, W10
	5168 Move [X31+280], D0
	5169 Compare X8, 0
	5170 JumpIfEqual {7654}
	5171 Move W9, [X8+24]
	5172 NotImplemented "Instruction CMP not yet implemented."
	5173 Move W9, [X25+116]
	5174 Move V1, [X8+44]
	5175 Move V0, [X8+48]
	5176 NotImplemented "Instruction CMP not yet implemented."
	5177 Move X8, [X31+80]
	5178 Move X8, [X8]
	5179 Compare X8, 0
	5180 JumpIfEqual {7654}
	5181 Move W9, [X8+24]
	5182 NotImplemented "Instruction CMP not yet implemented."
	5183 Move W9, 20
	5184 NotImplemented "Instruction SMADDL not yet implemented."
	5185 Move V2, [X8+40]
	5186 Move V2, [X19+884]
	5187 Move V4, [X31+92]
	5188 Move S3, W31
	5189 Add S4, S4, S3
	5190 Add S1, S4, S1
	5191 Move [X31+292], S1
	5192 Subtract S1, S3, S2
	5193 Move V2, [X31+60]
	5194 Subtract S1, S1, S2
	5195 Move W10, 0x2004
	5196 NotImplemented "Instruction CMP not yet implemented."
	5197 Move W10, 0x2008
	5198 Move V0, [X31+348]
	5199 NotImplemented "Instruction CMP not yet implemented."
	5200 Move [X31+292], S0
	5201 Move V0, [X31+328]
	5202 Move [X31+280], D0
	5203 Compare X8, 0
	5204 JumpIfEqual {7654}
	5205 Move W9, [X8+24]
	5206 NotImplemented "Instruction CMP not yet implemented."
	5207 Compare W9, 0
	5208 JumpIfEqual {7655}
	5209 NotImplemented "Instruction LDUR not yet implemented."
	5210 Move V3, [X8+48]
	5211 Move V0, [X8+32]
	5212 Move V1, [X8+44]
	5213 Move V4, [X19+880]
	5214 Add V2, V2, V3
	5215 NotImplemented "Instruction MOVI not yet implemented."
	5216 Move V5, [X31+60]
	5217 Move V6, [X31+92]
	5218 NotImplemented "Instruction INVALID not yet implemented."
	5219 Move V3, [X31+56]
	5220 Add S0, S0, S1
	5221 Move S1, 0.5
	5222 Subtract S4, S4, S5
	5223 Move S5, W31
	5224 Add S6, S6, S5
	5225 Multiply S0, S0, S1
	5226 Subtract S3, S4, S3
	5227 Multiply S1, S3, S1
	5228 Add S0, S6, S0
	5229 Move [X31+292], S0
	5230 Subtract S0, S5, S1
	5231 NotImplemented "Instruction MOVI not yet implemented."
	5232 Move V1.S[0], V0.S[0]
	5233 Add V0, V2, V1
	5234 NotImplemented "Instruction CMP not yet implemented."
	5235 NotImplemented "Instruction CMP not yet implemented."
	5236 Move V0, [X31+348]
	5237 Move [X31+292], S0
	5238 Move V0, [X31+328]
	5239 Move [X31+280], D0
	5240 Compare X8, 0
	5241 JumpIfEqual {7654}
	5242 Move W9, [X8+24]
	5243 Compare W9, 0
	5244 JumpIfEqual {7655}
	5245 Move W9, [X25+116]
	5246 Move V1, [X8+32]
	5247 NotImplemented "Instruction LDUR not yet implemented."
	5248 NotImplemented "Instruction CMP not yet implemented."
	5249 Move X8, [X31+80]
	5250 Move X8, [X8]
	5251 Compare X8, 0
	5252 JumpIfEqual {7654}
	5253 Move W9, [X8+24]
	5254 NotImplemented "Instruction CMP not yet implemented."
	5255 Move W9, 20
	5256 NotImplemented "Instruction SMADDL not yet implemented."
	5257 Move V2, [X8+48]
	5258 NotImplemented "Instruction CMP not yet implemented."
	5259 Move V0, [X31+348]
	5260 NotImplemented "Instruction CMP not yet implemented."
	5261 Move [X31+292], S0
	5262 Move V0, [X31+328]
	5263 Move [X31+280], D0
	5264 NotImplemented "Instruction CMP not yet implemented."
	5265 Move V0, [X31+348]
	5266 NotImplemented "Instruction CMP not yet implemented."
	5267 Move [X31+292], S0
	5268 Move V0, [X31+328]
	5269 Move [X31+280], D0
	5270 Move W10, 0x1008
	5271 NotImplemented "Instruction CMP not yet implemented."
	5272 Move V0, [X31+348]
	5273 Move W10, 0x1010
	5274 NotImplemented "Instruction CMP not yet implemented."
	5275 Move [X31+292], S0
	5276 Move V0, [X31+328]
	5277 Move [X31+280], D0
	5278 Compare X8, 0
	5279 JumpIfEqual {7654}
	5280 Move W9, [X8+24]
	5281 NotImplemented "Instruction CMP not yet implemented."
	5282 Compare W9, 0
	5283 JumpIfEqual {7655}
	5284 NotImplemented "Instruction LDUR not yet implemented."
	5285 Move V3, [X8+48]
	5286 Move V1, [X8+32]
	5287 Move V2, [X8+44]
	5288 Move V5, [X19+876]
	5289 Move V6, [X31+60]
	5290 Add V0, V0, V3
	5291 Move V3, [X19+868]
	5292 Add S1, S1, S2
	5293 NotImplemented "Instruction MOVI not yet implemented."
	5294 Add S5, S6, S5
	5295 Move V7, [X31+92]
	5296 NotImplemented "Instruction INVALID not yet implemented."
	5297 Add S2, S5, S3
	5298 Move V3, [X31+56]
	5299 Move S4, 0.5
	5300 Move S6, W31
	5301 Add S7, S7, S6
	5302 Multiply S1, S1, S4
	5303 Subtract S2, S2, S3
	5304 Add S1, S7, S1
	5305 Move [X31+292], S1
	5306 Multiply S1, S2, S4
	5307 Subtract S1, S6, S1
	5308 NotImplemented "Instruction CMP not yet implemented."
	5309 Move V0, [X31+348]
	5310 NotImplemented "Instruction CMP not yet implemented."
	5311 Move [X31+292], S0
	5312 Move V0, [X31+328]
	5313 Move [X31+280], D0
	5314 Compare X8, 0
	5315 JumpIfEqual {7654}
	5316 Move W9, [X8+24]
	5317 NotImplemented "Instruction CMP not yet implemented."
	5318 Compare W9, 0
	5319 JumpIfEqual {7655}
	5320 NotImplemented "Instruction LDUR not yet implemented."
	5321 Move V1, [X8+32]
	5322 Move V2, [X8+44]
	5323 Move V3, [X8+48]
	5324 Move W9, [X25+116]
	5325 Move S4, 0.5
	5326 NotImplemented "Instruction MOVI not yet implemented."
	5327 Add S1, S1, S2
	5328 Add V0, V0, V3
	5329 NotImplemented "Instruction CMP not yet implemented."
	5330 Multiply S1, S1, S4
	5331 NotImplemented "Instruction INVALID not yet implemented."
	5332 Move X8, [X31+80]
	5333 Move X8, [X8]
	5334 Compare X8, 0
	5335 JumpIfEqual {7654}
	5336 Move W9, [X8+24]
	5337 NotImplemented "Instruction CMP not yet implemented."
	5338 Move V3, [X31+92]
	5339 Move W9, 20
	5340 Move S2, W31
	5341 NotImplemented "Instruction SMADDL not yet implemented."
	5342 Add S3, S3, S2
	5343 Move V4, [X8+40]
	5344 Add S1, S3, S1
	5345 Move V3, [X31+60]
	5346 Move V5, [X8+48]
	5347 Move [X31+292], S1
	5348 Move S1, -0.5
	5349 Add S3, S3, S4
	5350 Move V4, [X31+56]
	5351 Add S3, S3, S5
	5352 Subtract S3, S3, S4
	5353 Multiply S1, S3, S1
	5354 Add S1, S1, S2
	5355 Move V6, [X31+92]
	5356 Move S4, W31
	5357 Move V2, [X19+884]
	5358 Move V3, [X31+4744]
	5359 Add S6, S6, S4
	5360 Add S1, S6, S1
	5361 Move [X31+292], S1
	5362 Move V1, [X31+60]
	5363 Move S5, -0.5
	5364 Add S1, S1, S2
	5365 Move V2, [X31+56]
	5366 Add S1, S1, S3
	5367 Subtract S1, S1, S2
	5368 Multiply S1, S1, S5
	5369 Add S1, S1, S4
	5370 Move V2, [X31+4744]
	5371 Move V4, [X31+92]
	5372 Move S3, W31
	5373 Add S4, S4, S3
	5374 Add S1, S4, S1
	5375 Move [X31+292], S1
	5376 Subtract S1, S3, S2
	5377 Move V2, [X31+56]
	5378 Add S1, S2, S1
	5379 NotImplemented "Instruction MOVI not yet implemented."
	5380 Move V2.S[0], V1.S[0]
	5381 Add V0, V0, V2
	5382 Move [X31+280], D0
	5383 Move S0, 1
	5384 Move S1, 1
	5385 Move S2, 1
	5386 Move S3, 1
	5387 Move X0, X31
	5388 Call 0x1E44664
	5389 Move [X31+264], X0
	5390 Move S0, 1
	5391 Move S1, 1
	5392 Move S2, 1
	5393 Move S3, 1
	5394 Move X0, X31
	5395 Call 0x1E44664
	5396 Move X8, 0x4AC000
	5397 Move X8, [X8+2872]
	5398 Move [X31+272], X0
	5399 Move X8, [X8]
	5400 Move W9, [X8+224]
	5401 Compare W9, 0
	5402 JumpIfNotEqual {5405}
	5403 Move X0, X8
	5404 Call 0x1C17DFC
	5405 Move X0, X31
	5406 Call Offset.get_zero
	5407 Add X0, X31, 4096
	5408 Add X0, X0, 608
	5409 Move TEMP, 0xBFFF0000
	5410 Not TEMP
	5411 Move W1, TEMP
	5412 Add X20, X31, 4096
	5413 Move X2, X31
	5414 Add X20, X20, 608
	5415 Call HighlightState..ctor, X0, X1, X2
	5416 Move W8, [X23]
	5417 NotImplemented "Instruction CMP not yet implemented."
	5418 Move X25, [X22]
	5419 Compare X25, 0
	5420 JumpIfEqual {7654}
	5421 Move V2, [X31+300]
	5422 Move S1, W31
	5423 Move [X31+372], S1
	5424 Move S1, W31
	5425 Move [X31+224], S1
	5426 Move S1, W31
	5427 Move [X31+176], S1
	5428 Move S1, W31
	5429 Add X8, X21, 56
	5430 Move X10, -52211712
	5431 Move [X31+244], S2
	5432 Move [X31+252], S1
	5433 Move S1, W31
	5434 Move [X31+256], X8
	5435 Add X8, X31, 4096
	5436 Move V0, [X31+324]
	5437 Move V3, [X10+884]
	5438 Move [X31+172], S1
	5439 Move V1, [X31+296]
	5440 Add X8, X8, 656
	5441 Or X9, X20, 7
	5442 Move [X31+192], X9
	5443 Add X9, X31, 1504
	5444 Add X8, X8, 32
	5445 Move W22, W31
	5446 Move W26, W31
	5447 Move W27, 764
	5448 Move W29, 392
	5449 Move W20, 96
	5450 Move S11, W31
	5451 Move S15, W31
	5452 Move [X31+184], X8
	5453 Or X8, X9, 7
	5454 Move W9, 1
	5455 Move [X31+384], X31
	5456 Move [X31+320], W31
	5457 Move [X31+144], W31
	5458 Move [X31+360], X31
	5459 Move [X31+200], W31
	5460 Move [X31+376], W31
	5461 Move [X31+304], S2
	5462 Move [X31+312], S0
	5463 Move [X31+212], S0
	5464 Move [X31+216], S1
	5465 Move [X31+224], S2
	5466 Move [X31+228], S1
	5467 Move [X31+236], S0
	5468 Move [X31+152], X8
	5469 Move [X31+180], S3
	5470 Move [X31+352], S3
	5471 Move W8, [X25+24]
	5472 Subtract W28, W9, 1
	5473 Move [X31+436], W9
	5474 NotImplemented "Instruction CMP not yet implemented."
	5475 Move X8, 0x440000
	5476 Move X8, [X8+368]
	5477 Move X24, W28
	5478 Move X0, [X8]
	5479 NotImplemented "Instruction NOP not yet implemented."
	5480 NotImplemented "Instruction MADD not yet implemented."
	5481 Move X9, [X8+64]
	5482 NotImplemented "Instruction LDRH not yet implemented."
	5483 Move [X31+392], X9
	5484 Move W9, [X0+224]
	5485 Compare W9, 0
	5486 JumpIfNotEqual {5488}
	5487 Call 0x1C17DFC
	5488 Move W0, W23
	5489 Move X1, X31
	5490 Call Char.IsWhiteSpace, X0
	5491 Move W8, [X25+24]
	5492 Move [X31+380], W0
	5493 NotImplemented "Instruction CMP not yet implemented."
	5494 Move X9, [X21+72]
	5495 Move W12, 392
	5496 Move [X31+452], W23
	5497 Compare X9, 0
	5498 JumpIfEqual {7654}
	5499 NotImplemented "Instruction MADD not yet implemented."
	5500 Move W23, [X10+108]
	5501 Move W10, [X9+24]
	5502 Move [X31+356], W22
	5503 NotImplemented "Instruction CMP not yet implemented."
	5504 Move X10, W23
	5505 NotImplemented "Instruction MADD not yet implemented."
	5506 Move [X31+416], X10
	5507 NotImplemented "Instruction LDRSW not yet implemented."
	5508 Move X29, X27
	5509 Move W27, [X9+108]
	5510 Move W21, [X9+32]
	5511 Move W20, [X9+40]
	5512 Move W22, [X9+44]
	5513 Move [X31+336], X10
	5514 NotImplemented "Instruction LDRSW not yet implemented."
	5515 Move V3, [X9+80]
	5516 Move S4, [X9+88]
	5517 Move S13, [X9+92]
	5518 Move S8, [X9+96]
	5519 Move S10, [X9+100]
	5520 Move S9, [X9+112]
	5521 Move S12, [X9+116]
	5522 Move S14, [X9+120]
	5523 Move S6, [X9+124]
	5524 NotImplemented "Instruction CMP not yet implemented."
	5525 Move [X31+424], X10
	5526 Move W9, 0x1008
	5527 NotImplemented "Instruction CMP not yet implemented."
	5528 Move W9, 0x2004
	5529 NotImplemented "Instruction CMP not yet implemented."
	5530 Move W9, 0x2008
	5531 NotImplemented "Instruction CMP not yet implemented."
	5532 Move W9, 0x2010
	5533 NotImplemented "Instruction CMP not yet implemented."
	5534 Move W8, 0x2020
	5535 NotImplemented "Instruction CMP not yet implemented."
	5536 NotImplemented "Instruction CMP not yet implemented."
	5537 NotImplemented "Instruction CMP not yet implemented."
	5538 NotImplemented "Instruction CMP not yet implemented."
	5539 NotImplemented "Instruction CMP not yet implemented."
	5540 NotImplemented "Instruction CMP not yet implemented."
	5541 Move TEMP, 4096
	5542 Not TEMP
	5543 Move W9, TEMP
	5544 Add W9, W27, W9
	5545 NotImplemented "Instruction CMP not yet implemented."
	5546 Move X13, -51503104
	5547 Add X13, X13, 3810
	5548 NotImplemented "Instruction ADR not yet implemented."
	5549 Move W11, [X13]
	5550 Add X10, X10, X11
	5551 CallNoReturn X10
	5552 NotImplemented "Instruction CMP not yet implemented."
	5553 Subtract W9, W27, 513
	5554 NotImplemented "Instruction CMP not yet implemented."
	5555 Move X13, -51503104
	5556 Add X13, X13, 3794
	5557 NotImplemented "Instruction ADR not yet implemented."
	5558 Move W11, [X13]
	5559 Add X10, X10, X11
	5560 CallNoReturn X10
	5561 NotImplemented "Instruction CMP not yet implemented."
	5562 Move W8, 0x2001
	5563 NotImplemented "Instruction CMP not yet implemented."
	5564 Move W8, 0x2002
	5565 NotImplemented "Instruction CMP not yet implemented."
	5566 Move W8, 0x2004
	5567 NotImplemented "Instruction CMP not yet implemented."
	5568 NotImplemented "Instruction CMP not yet implemented."
	5569 NotImplemented "Instruction CMP not yet implemented."
	5570 NotImplemented "Instruction CMP not yet implemented."
	5571 NotImplemented "Instruction CMP not yet implemented."
	5572 Subtract W9, W27, 2049
	5573 NotImplemented "Instruction CMP not yet implemented."
	5574 Move X13, -51503104
	5575 Add X13, X13, 3802
	5576 NotImplemented "Instruction ADR not yet implemented."
	5577 Move W11, [X13]
	5578 Add X10, X10, X11
	5579 CallNoReturn X10
	5580 Subtract W9, W27, 257
	5581 NotImplemented "Instruction CMP not yet implemented."
	5582 Move X13, -51503104
	5583 Add X13, X13, 3786
	5584 NotImplemented "Instruction ADR not yet implemented."
	5585 Move W11, [X13]
	5586 Add X10, X10, X11
	5587 CallNoReturn X10
	5588 Move X8, [X31+464]
	5589 Move W8, [X8+182]
	5590 Compare W8, 0
	5591 JumpIfEqual {5610}
	5592 Move S0, W31
	5593 Subtract S0, S0, S13
	5594 Move S1, 0.5
	5595 Multiply S0, S8, S1
	5596 Multiply S1, S13, S1
	5597 Add S0, S10, S0
	5598 Move X8, [X31+464]
	5599 Add S0, S8, S10
	5600 Subtract S1, S0, S13
	5601 Move W8, [X8+182]
	5602 NotImplemented "Instruction CMP not yet implemented."
	5603 NotImplemented "Instruction FCSEL not yet implemented."
	5604 Move W9, 0x1010
	5605 NotImplemented "Instruction CMP not yet implemented."
	5606 Move W8, 0x1020
	5607 NotImplemented "Instruction CMP not yet implemented."
	5608 NotImplemented "Instruction CMP not yet implemented."
	5609 NotImplemented "Instruction CMP not yet implemented."
	5610 Move S0, W31
	5611 Add S0, S10, S0
	5612 NotImplemented "Instruction CMP not yet implemented."
	5613 NotImplemented "Instruction CMP not yet implemented."
	5614 Move S2, 0.5
	5615 Multiply S0, S8, S2
	5616 Add S1, S9, S14
	5617 Add S0, S10, S0
	5618 Multiply S1, S1, S2
	5619 Subtract S0, S0, S1
	5620 Move [X31+348], S0
	5621 NotImplemented "Instruction MOVI not yet implemented."
	5622 Move [X31+328], D0
	5623 NotImplemented "Instruction CMP not yet implemented."
	5624 NotImplemented "Instruction CMP not yet implemented."
	5625 Move X9, [X31+424]
	5626 NotImplemented "Instruction CMP not yet implemented."
	5627 Move X22, [X25+24]
	5628 NotImplemented "Instruction CMP not yet implemented."
	5629 Move V0, [X31+348]
	5630 Move V1, [X31+292]
	5631 Move W10, 392
	5632 NotImplemented "Instruction MADD not yet implemented."
	5633 Move W8, [X20+416]
	5634 Add S8, S1, S0
	5635 Move V0, [X31+328]
	5636 Move V1, [X31+280]
	5637 Move X9, X25
	5638 Move X27, X29
	5639 Move W11, W28
	5640 Add V5, V1, V0
	5641 Move [X31+368], W28
	5642 Move [X31+25], V5
	5643 Compare W8, 0
	5644 JumpIfEqual {5677}
	5645 NotImplemented "Instruction MADD not yet implemented."
	5646 Move W21, [X8+40]
	5647 NotImplemented "Instruction CMP not yet implemented."
	5648 Move X27, [X31+464]
	5649 NotImplemented "Instruction SCVTF not yet implemented."
	5650 Move [X31+208], S15
	5651 Move V11, V12
	5652 Move V0, [X27+252]
	5653 Move V12, V6
	5654 Move V13, V4
	5655 Move V15, V3
	5656 Multiply S0, S0, S1
	5657 Move S1, 1
	5658 Call 0x3EB2BA0
	5659 Move W8, [X27+244]
	5660 NotImplemented "Instruction CMP not yet implemented."
	5661 Move X11, -51503104
	5662 Add X11, X11, 3818
	5663 NotImplemented "Instruction ADR not yet implemented."
	5664 Move W10, [X11]
	5665 Add X9, X9, X10
	5666 Move V10, V0
	5667 Move X27, X29
	5668 Move V6, V13
	5669 CallNoReturn X9
	5670 Move W29, 392
	5671 NotImplemented "Instruction MADD not yet implemented."
	5672 Move W9, 0x3F800000
	5673 Move [X8+188], W31
	5674 Move [X8+148], W31
	5675 Move [X8+228], W9
	5676 Move S0, 1
	5677 Move X21, [X31+440]
	5678 Move X22, [X31+472]
	5679 Move X25, X9
	5680 Move W29, 392
	5681 Move W29, 392
	5682 Move W10, [X31+452]
	5683 NotImplemented "Instruction CMP not yet implemented."
	5684 NotImplemented "Instruction CMP not yet implemented."
	5685 Move W9, 0x200B
	5686 NotImplemented "Instruction CMP not yet implemented."
	5687 Move W9, 0x2060
	5688 NotImplemented "Instruction CMP not yet implemented."
	5689 Move W29, 392
	5690 NotImplemented "Instruction MADD not yet implemented."
	5691 Move V2, [X8+160]
	5692 Move V3, [X31+348]
	5693 Move V0, [X19+864]
	5694 Move V1, [X19+872]
	5695 Add S2, S3, S2
	5696 Subtract S1, S1, S0
	5697 Subtract S0, S2, S0
	5698 Move X8, [X31+464]
	5699 Move W29, 392
	5700 NotImplemented "Instruction MADD not yet implemented."
	5701 Move V0, [X9+160]
	5702 Move W8, [X8+112]
	5703 NotImplemented "Instruction CMP not yet implemented."
	5704 Move V3, [X31+348]
	5705 Move V1, [X19+864]
	5706 Move V2, [X19+872]
	5707 NotImplemented "Instruction NOP not yet implemented."
	5708 NotImplemented "Instruction MADD not yet implemented."
	5709 Add S0, S3, S0
	5710 Subtract S0, S0, S1
	5711 Subtract S1, S2, S1
	5712 NotImplemented "Instruction FDIV not yet implemented."
	5713 Add S0, S10, S0
	5714 Move V2, [X8+120]
	5715 Move [X8+188], S0
	5716 Move V0, [X19+864]
	5717 Move V1, [X19+872]
	5718 Add S2, S3, S2
	5719 Subtract S2, S2, S0
	5720 Subtract S0, S1, S0
	5721 NotImplemented "Instruction FDIV not yet implemented."
	5722 Add S0, S10, S0
	5723 Move V1, [X8+200]
	5724 Move [X8+148], S0
	5725 Move V0, [X19+864]
	5726 Move V2, [X19+872]
	5727 Add S1, S3, S1
	5728 Subtract S1, S1, S0
	5729 Subtract S0, S2, S0
	5730 NotImplemented "Instruction FDIV not yet implemented."
	5731 Add S0, S10, S0
	5732 Move V2, [X8+240]
	5733 Move [X8+228], S0
	5734 Move V0, [X19+864]
	5735 Move V1, [X19+872]
	5736 Add S2, S3, S2
	5737 Subtract S2, S2, S0
	5738 Subtract S0, S1, S0
	5739 NotImplemented "Instruction FDIV not yet implemented."
	5740 Add S0, S10, S0
	5741 Move X8, [X31+464]
	5742 Move W29, 392
	5743 Move W8, [X8+248]
	5744 NotImplemented "Instruction CMP not yet implemented."
	5745 Move X11, -51503104
	5746 Add X11, X11, 3822
	5747 NotImplemented "Instruction ADR not yet implemented."
	5748 Move W10, [X11]
	5749 Add X9, X9, X10
	5750 CallNoReturn X9
	5751 NotImplemented "Instruction MADD not yet implemented."
	5752 Move W9, 0x3F800000
	5753 Move [X8+192], W31
	5754 Move [X8+152], W9
	5755 Move [X8+232], W31
	5756 Move [X8+272], W9
	5757 Move V5, [X31+25]
	5758 Move X27, X29
	5759 Move W29, 392
	5760 Move V11, V15
	5761 Move V6, V13
	5762 NotImplemented "Instruction CMP not yet implemented."
	5763 NotImplemented "Instruction CMP not yet implemented."
	5764 Move X9, [X31+336]
	5765 Move [X31+208], S6
	5766 Move [X31+368], S4
	5767 Move [X31+400], S3
	5768 NotImplemented "Instruction CMP not yet implemented."
	5769 Move X8, 0x440000
	5770 Move X8, [X8+368]
	5771 Move X0, [X8]
	5772 NotImplemented "Instruction NOP not yet implemented."
	5773 NotImplemented "Instruction MADD not yet implemented."
	5774 NotImplemented "Instruction LDRH not yet implemented."
	5775 Move W9, [X0+224]
	5776 Compare W9, 0
	5777 JumpIfNotEqual {5781}
	5778 Move [X31+140], W8
	5779 Call 0x1C17DFC
	5780 Move W8, [X31+140]
	5781 Move W0, W8
	5782 Move X1, X31
	5783 Call Char.IsControl, X0
	5784 Move TEMP, X0
	5785 And TEMP, TEMP, 1
	5786 Compare TEMP, 1
	5787 JumpIfNotEqual {7363}
	5788 Move W8, W31
	5789 NotImplemented "Instruction MADD not yet implemented."
	5790 Move V2, [X8+120]
	5791 Move V3, [X8+200]
	5792 Subtract S0, S0, S9
	5793 Subtract S1, S14, S9
	5794 Move V4, [X8+240]
	5795 NotImplemented "Instruction FDIV not yet implemented."
	5796 Add S0, S10, S0
	5797 Move [X8+188], S0
	5798 Subtract S0, S2, S9
	5799 Subtract S2, S3, S9
	5800 Subtract S3, S4, S9
	5801 NotImplemented "Instruction FDIV not yet implemented."
	5802 NotImplemented "Instruction FDIV not yet implemented."
	5803 NotImplemented "Instruction FDIV not yet implemented."
	5804 Add S0, S10, S0
	5805 Add S2, S10, S2
	5806 Move [X8+148], S0
	5807 Move [X8+228], S2
	5808 Add S0, S10, S1
	5809 NotImplemented "Instruction MADD not yet implemented."
	5810 Move V0, [X8+164]
	5811 Move V1, [X8+124]
	5812 Subtract S2, S12, S11
	5813 Subtract S0, S0, S11
	5814 Subtract S1, S1, S11
	5815 NotImplemented "Instruction FDIV not yet implemented."
	5816 NotImplemented "Instruction FDIV not yet implemented."
	5817 Add S0, S10, S0
	5818 Add S1, S10, S1
	5819 Move [X8+192], S0
	5820 Move [X8+152], S1
	5821 Move [X8+232], S0
	5822 Move [X8+272], S1
	5823 NotImplemented "Instruction MADD not yet implemented."
	5824 Move V0, [X19+868]
	5825 Move V1, [X19+876]
	5826 Move V2, [X8+164]
	5827 Move V3, [X8+124]
	5828 Subtract S1, S1, S0
	5829 Subtract S0, S2, S0
	5830 NotImplemented "Instruction FDIV not yet implemented."
	5831 Add S0, S10, S0
	5832 Move [X8+192], S0
	5833 Move V1, [X19+868]
	5834 Move V2, [X19+876]
	5835 Move [X8+232], S0
	5836 Subtract S0, S3, S1
	5837 Subtract S1, S2, S1
	5838 NotImplemented "Instruction FDIV not yet implemented."
	5839 Add S0, S10, S0
	5840 Move [X8+152], S0
	5841 Move [X8+272], S0
	5842 Move X8, 0x43E000
	5843 Move X8, [X8+2600]
	5844 Move X0, [X8]
	5845 Move W8, [X0+224]
	5846 Compare W8, 0
	5847 JumpIfNotEqual {5849}
	5848 Call 0x1C17DFC
	5849 Move X8, 0x4A3000
	5850 Move X8, [X8+1048]
	5851 Move X1, X31
	5852 Move X0, [X8]
	5853 Call Debug.Log, X0
	5854 Move X22, [X25+24]
	5855 Move V6, V13
	5856 NotImplemented "Instruction CMP not yet implemented."
	5857 NotImplemented "Instruction MADD not yet implemented."
	5858 Move V0, [X8+192]
	5859 Move V1, [X8+152]
	5860 Move V2, [X8+360]
	5861 Add S3, S0, S1
	5862 Multiply S0, S0, S2
	5863 Multiply S1, S1, S2
	5864 Multiply S2, S3, S2
	5865 Move S3, 1
	5866 Subtract S2, S3, S2
	5867 Move S3, 0.5
	5868 Multiply S2, S2, S3
	5869 Add S0, S0, S2
	5870 Add S1, S1, S2
	5871 Add S2, S10, S0
	5872 Add S0, S10, S1
	5873 Move [X8+188], S2
	5874 Move [X8+148], S2
	5875 Move [X8+228], S0
	5876 Move V5, [X31+25]
	5877 Move V11, V15
	5878 NotImplemented "Instruction MADD not yet implemented."
	5879 Move [X8+268], S0
	5880 Move X8, [X31+464]
	5881 Move V15, [X31+208]
	5882 Move W8, [X8+248]
	5883 NotImplemented "Instruction CMP not yet implemented."
	5884 Move X11, -51507200
	5885 Add X11, X11, 3826
	5886 NotImplemented "Instruction ADR not yet implemented."
	5887 Move W10, [X11]
	5888 Add X9, X9, X10
	5889 CallNoReturn X9
	5890 NotImplemented "Instruction CMP not yet implemented."
	5891 NotImplemented "Instruction MADD not yet implemented."
	5892 Move W9, 0x3F800000
	5893 Move [X8+192], W31
	5894 Move [X8+152], W9
	5895 Move [X8+232], W9
	5896 Move [X8+272], W31
	5897 NotImplemented "Instruction CMP not yet implemented."
	5898 NotImplemented "Instruction MADD not yet implemented."
	5899 Move V0, [X8+164]
	5900 Move V1, [X8+124]
	5901 Subtract S2, S11, S6
	5902 Subtract S0, S0, S6
	5903 Subtract S1, S1, S6
	5904 NotImplemented "Instruction FDIV not yet implemented."
	5905 NotImplemented "Instruction FDIV not yet implemented."
	5906 Move [X8+192], S0
	5907 NotImplemented "Instruction CMP not yet implemented."
	5908 NotImplemented "Instruction MADD not yet implemented."
	5909 Move V0, [X19+868]
	5910 Move V1, [X19+876]
	5911 Move V2, [X8+164]
	5912 Move V3, [X8+124]
	5913 Subtract S1, S1, S0
	5914 Subtract S0, S2, S0
	5915 NotImplemented "Instruction FDIV not yet implemented."
	5916 Move [X8+192], S0
	5917 Move V1, [X19+868]
	5918 Move V2, [X19+876]
	5919 Subtract S3, S3, S1
	5920 Subtract S1, S2, S1
	5921 NotImplemented "Instruction FDIV not yet implemented."
	5922 Move [X8+152], S1
	5923 Move [X8+232], S1
	5924 Move [X8+272], S0
	5925 NotImplemented "Instruction CMP not yet implemented."
	5926 NotImplemented "Instruction MADD not yet implemented."
	5927 Move V0, [X8+188]
	5928 Move V1, [X8+228]
	5929 Move V2, [X8+360]
	5930 Add S3, S0, S1
	5931 NotImplemented "Instruction FDIV not yet implemented."
	5932 NotImplemented "Instruction FDIV not yet implemented."
	5933 NotImplemented "Instruction FDIV not yet implemented."
	5934 Move S3, 1
	5935 Subtract S2, S3, S2
	5936 Move S3, 0.5
	5937 Multiply S2, S2, S3
	5938 Add S0, S0, S2
	5939 Add S1, S1, S2
	5940 Move [X8+192], S0
	5941 Move [X8+152], S1
	5942 Move [X8+272], S0
	5943 Move [X8+232], S1
	5944 NotImplemented "Instruction CMP not yet implemented."
	5945 NotImplemented "Instruction MADD not yet implemented."
	5946 Move V0, [X19+5524]
	5947 Move V1, [X8+364]
	5948 Move W8, [X8+100]
	5949 Move S2, 1
	5950 Subtract S0, S2, S0
	5951 Multiply S11, S1, S0
	5952 Compare W8, 0
	5953 JumpIfNotEqual {5959}
	5954 NotImplemented "Instruction MADD not yet implemented."
	5955 Move W8, [X8+412]
	5956 NotImplemented "Instruction FNEG not yet implemented."
	5957 And W31, W8, 1
	5958 NotImplemented "Instruction FCSEL not yet implemented."
	5959 NotImplemented "Instruction MADD not yet implemented."
	5960 Move W9, 0x3F800000
	5961 Move [X8+184], S11
	5962 Move [X8+144], S11
	5963 Move [X8+224], S11
	5964 Move [X8+264], S11
	5965 Move [X8+188], W9
	5966 Move [X8+192], S11
	5967 Move [X8+148], W9
	5968 Move [X8+152], S11
	5969 Move [X8+228], W9
	5970 Move [X8+232], S11
	5971 Move [X8+268], W9
	5972 Move [X8+272], S11
	5973 Move X9, [X31+464]
	5974 Move W8, [X9+216]
	5975 NotImplemented "Instruction CMP not yet implemented."
	5976 Move W8, [X9+220]
	5977 Move W10, [X31+320]
	5978 NotImplemented "Instruction CMP not yet implemented."
	5979 Move W8, [X9+224]
	5980 NotImplemented "Instruction CMP not yet implemented."
	5981 Move W8, [X9+116]
	5982 NotImplemented "Instruction CMP not yet implemented."
	5983 Move W8, [X9+224]
	5984 NotImplemented "Instruction CMP not yet implemented."
	5985 Move W8, [X9+116]
	5986 NotImplemented "Instruction CMP not yet implemented."
	5987 NotImplemented "Instruction CMP not yet implemented."
	5988 NotImplemented "Instruction MADD not yet implemented."
	5989 Move W8, [X8+112]
	5990 Move W9, [X31+128]
	5991 NotImplemented "Instruction CMP not yet implemented."
	5992 NotImplemented "Instruction CSET not yet implemented."
	5993 Move W8, W31
	5994 NotImplemented "Instruction CMP not yet implemented."
	5995 Compare W8, 0
	5996 JumpIfEqual {6024}
	5997 NotImplemented "Instruction MADD not yet implemented."
	5998 Move V2, [X8+160]
	5999 Move V4, [X8+120]
	6000 Move V6, [X8+200]
	6001 Move V16, [X8+240]
	6002 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	6003 Move S1, V5.S[1]
	6004 Move V3, [X8+168]
	6005 Move V5, [X8+128]
	6006 Move V7, [X8+208]
	6007 Add V2, V0, V2
	6008 Add V4, V0, V4
	6009 Add V6, V0, V6
	6010 Add V0, V0, V16
	6011 Move V16, [X8+248]
	6012 Add S3, S1, S3
	6013 Add S5, S1, S5
	6014 Add S7, S1, S7
	6015 Add S1, S1, S16
	6016 Move [X8+160], D2
	6017 Move [X8+168], S3
	6018 Move [X8+120], D4
	6019 Move [X8+128], S5
	6020 Move [X8+200], D6
	6021 Move [X8+208], S7
	6022 Move [X8+240], D0
	6023 Move [X8+248], S1
	6024 Move X8, 0x722000
	6025 Move W8, [X8+1923]
	6026 Compare W8, 0
	6027 JumpIfNotEqual {6035}
	6028 Move X0, 0x43D000
	6029 Move X0, [X0+1440]
	6030 Call 0x1C17CF4
	6031 Move X8, 0x722000
	6032 Move W9, 1
	6033 Move [X8+1923], W9
	6034 Move W22, [X25+24]
	6035 Move X10, 0x43D000
	6036 Move X10, [X10+1440]
	6037 NotImplemented "Instruction CMP not yet implemented."
	6038 Move X8, [X10]
	6039 Move X8, [X8+184]
	6040 Move V0, [X8]
	6041 Move V1, [X8+8]
	6042 NotImplemented "Instruction NOP not yet implemented."
	6043 NotImplemented "Instruction MADD not yet implemented."
	6044 Move [X8+160], D0
	6045 Move [X8+168], S1
	6046 Move X8, [X10]
	6047 Move X8, [X8+184]
	6048 Move V0, [X8]
	6049 Move V1, [X8+8]
	6050 NotImplemented "Instruction NOP not yet implemented."
	6051 NotImplemented "Instruction MADD not yet implemented."
	6052 Move [X8+120], D0
	6053 Move [X8+128], S1
	6054 Move X9, [X10]
	6055 Move X9, [X9+184]
	6056 Move V0, [X9]
	6057 Move V1, [X9+8]
	6058 Move [X8+200], D0
	6059 Move [X8+208], S1
	6060 Move X9, [X10]
	6061 Move X9, [X9+184]
	6062 Move V0, [X9]
	6063 Move V1, [X9+8]
	6064 Add X9, X20, 416
	6065 Move [X8+240], D0
	6066 Move [X8+248], S1
	6067 Move [X9], W31
	6068 Move X22, [X31+472]
	6069 Move X0, X31
	6070 Call QualitySettings.get_activeColorSpace
	6071 NotImplemented "Instruction CMP not yet implemented."
	6072 Move X8, [X31+464]
	6073 Move W20, [X8+162]
	6074 Move W20, W31
	6075 Move X8, 0x4AB000
	6076 Move X8, [X8+2888]
	6077 Move V5, [X31+25]
	6078 NotImplemented "Instruction CMP not yet implemented."
	6079 Move X0, [X8]
	6080 Move W8, [X0+224]
	6081 Compare W8, 0
	6082 JumpIfNotEqual {6084}
	6083 Call 0x1C17DFC
	6084 Move X21, [X31+440]
	6085 Move W0, [X31+368]
	6086 Move X2, [X31+464]
	6087 NotImplemented "Instruction CMP not yet implemented."
	6088 NotImplemented "Instruction CSET not yet implemented."
	6089 Move X3, X21
	6090 Move X4, X31
	6091 Call TextGeneratorUtilities.FillCharacterVertexBuffers, X0, X1, X2, X3
	6092 NotImplemented "Instruction CMP not yet implemented."
	6093 Move X0, [X8]
	6094 Move X21, [X31+440]
	6095 Move W8, [X0+224]
	6096 Compare W8, 0
	6097 JumpIfNotEqual {6099}
	6098 Call 0x1C17DFC
	6099 Move W0, [X31+368]
	6100 Move X2, [X31+464]
	6101 NotImplemented "Instruction CMP not yet implemented."
	6102 NotImplemented "Instruction CSET not yet implemented."
	6103 Move X3, X21
	6104 Move X4, X31
	6105 Call TextGeneratorUtilities.FillSpriteVertexBuffers, X0, X1, X2, X3
	6106 Move V5, [X31+25]
	6107 Move X21, [X31+440]
	6108 Move X8, [X22]
	6109 Move X15, [X31+416]
	6110 Move W14, 96
	6111 Compare X8, 0
	6112 JumpIfEqual {7654}
	6113 Move W9, [X8+24]
	6114 NotImplemented "Instruction CMP not yet implemented."
	6115 NotImplemented "Instruction MADD not yet implemented."
	6116 Add X8, X8, 292
	6117 Move V2, [X8]
	6118 Move V3, [X8+8]
	6119 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	6120 Move S1, V5.S[1]
	6121 Add V2, V0, V2
	6122 Add S3, S1, S3
	6123 Move [X8], D2
	6124 Move [X8+8], S3
	6125 Move X8, [X22]
	6126 Compare X8, 0
	6127 JumpIfEqual {7654}
	6128 Move W9, [X8+24]
	6129 NotImplemented "Instruction CMP not yet implemented."
	6130 NotImplemented "Instruction MADD not yet implemented."
	6131 Move V2, [X8+280]
	6132 Move V3, [X8+288]
	6133 Add V2, V0, V2
	6134 Add S3, S1, S3
	6135 Move [X8+280], D2
	6136 Move [X8+288], S3
	6137 Move X8, [X22]
	6138 Compare X8, 0
	6139 JumpIfEqual {7654}
	6140 Move W9, [X8+24]
	6141 NotImplemented "Instruction CMP not yet implemented."
	6142 NotImplemented "Instruction MADD not yet implemented."
	6143 Move V2, [X8+304]
	6144 Move V3, [X8+312]
	6145 Add V0, V0, V2
	6146 Add S1, S1, S3
	6147 Move [X8+304], D0
	6148 Move [X8+312], S1
	6149 Move X8, [X22]
	6150 Compare X8, 0
	6151 JumpIfEqual {7654}
	6152 Move W9, [X8+24]
	6153 NotImplemented "Instruction CMP not yet implemented."
	6154 NotImplemented "Instruction MADD not yet implemented."
	6155 Move V0, [X8+316]
	6156 Move V1, [X8+320]
	6157 Add S0, S8, S0
	6158 Add V1, V5, V1
	6159 Move [X8+316], S0
	6160 Move [X8+320], D1
	6161 Move X8, [X22]
	6162 Compare X8, 0
	6163 JumpIfEqual {7654}
	6164 Move W10, [X8+24]
	6165 NotImplemented "Instruction CMP not yet implemented."
	6166 NotImplemented "Instruction MADD not yet implemented."
	6167 Move V0, [X9+328]
	6168 Move V1, [X9+356]
	6169 Move V2, [X9+340]
	6170 Add X11, X9, 332
	6171 Add S0, S8, S0
	6172 Move [X9+328], S0
	6173 Add S0, S8, S1
	6174 Add S1, S5, S2
	6175 Move [X9+356], S0
	6176 Move [X9+340], S1
	6177 Move V1, [X11]
	6178 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	6179 NotImplemented "Instruction CMP not yet implemented."
	6180 Add V1, V0, V1
	6181 Move [X11], D1
	6182 Move X8, [X31+456]
	6183 Move W26, [X31+360]
	6184 Move W8, [X8]
	6185 Subtract W8, W8, 1
	6186 NotImplemented "Instruction CMP not yet implemented."
	6187 Move X11, [X21+72]
	6188 Compare X11, 0
	6189 JumpIfEqual {7654}
	6190 Move W9, [X11+24]
	6191 NotImplemented "Instruction CMP not yet implemented."
	6192 Move X9, W26
	6193 NotImplemented "Instruction MADD not yet implemented."
	6194 Move V1, [X13+80]
	6195 Move S2, [X13+88]
	6196 Move S3, [X13+92]
	6197 NotImplemented "Instruction LDRSW not yet implemented."
	6198 Add V4, V0, V1
	6199 Add S1, S5, S2
	6200 Add S2, S8, S3
	6201 NotImplemented "Instruction CMP not yet implemented."
	6202 Move [X13+80], D4
	6203 Move [X13+88], S1
	6204 Move [X13+96], S2
	6205 NotImplemented "Instruction MADD not yet implemented."
	6206 Move W8, [X8+292]
	6207 NotImplemented "Instruction NOP not yet implemented."
	6208 NotImplemented "Instruction MADD not yet implemented."
	6209 Move [X10+116], S1
	6210 Move [X10+112], W8
	6211 Move X8, [X21+72]
	6212 Compare X8, 0
	6213 JumpIfEqual {7654}
	6214 Move W10, [X8+24]
	6215 NotImplemented "Instruction CMP not yet implemented."
	6216 Move X10, [X22]
	6217 Move W26, [X31+360]
	6218 Compare X10, 0
	6219 JumpIfEqual {7654}
	6220 NotImplemented "Instruction MADD not yet implemented."
	6221 NotImplemented "Instruction LDRSW not yet implemented."
	6222 Move W12, [X10+24]
	6223 NotImplemented "Instruction CMP not yet implemented."
	6224 NotImplemented "Instruction MADD not yet implemented."
	6225 NotImplemented "Instruction MADD not yet implemented."
	6226 Move W9, [X10+304]
	6227 Move W10, [X8+80]
	6228 Move [X8+120], W9
	6229 Move [X8+124], W10
	6230 Move X8, [X31+456]
	6231 Move W8, [X8]
	6232 Subtract W8, W8, 1
	6233 NotImplemented "Instruction CMP not yet implemented."
	6234 Move X8, [X21+72]
	6235 Compare X8, 0
	6236 JumpIfEqual {7654}
	6237 Move W9, [X8+24]
	6238 NotImplemented "Instruction CMP not yet implemented."
	6239 NotImplemented "Instruction MADD not yet implemented."
	6240 Move V1, [X9+80]
	6241 Move S2, [X9+88]
	6242 Move S3, [X9+92]
	6243 Add V1, V0, V1
	6244 Add S0, S5, S2
	6245 Add S2, S8, S3
	6246 Move [X9+80], D1
	6247 Move [X9+88], S0
	6248 Move [X9+96], S2
	6249 Move X10, [X22]
	6250 Compare X10, 0
	6251 JumpIfEqual {7654}
	6252 NotImplemented "Instruction LDRSW not yet implemented."
	6253 Move W11, [X10+24]
	6254 NotImplemented "Instruction CMP not yet implemented."
	6255 NotImplemented "Instruction MADD not yet implemented."
	6256 Move W9, [X9+292]
	6257 NotImplemented "Instruction NOP not yet implemented."
	6258 NotImplemented "Instruction MADD not yet implemented."
	6259 Move [X8+116], S0
	6260 Move [X8+112], W9
	6261 Move X8, [X21+72]
	6262 Compare X8, 0
	6263 JumpIfEqual {7654}
	6264 Move W9, [X8+24]
	6265 NotImplemented "Instruction CMP not yet implemented."
	6266 Move X9, [X22]
	6267 Compare X9, 0
	6268 JumpIfEqual {7654}
	6269 NotImplemented "Instruction MADD not yet implemented."
	6270 NotImplemented "Instruction LDRSW not yet implemented."
	6271 Move W11, [X9+24]
	6272 NotImplemented "Instruction CMP not yet implemented."
	6273 NotImplemented "Instruction MADD not yet implemented."
	6274 NotImplemented "Instruction MADD not yet implemented."
	6275 Move W9, [X9+304]
	6276 Move W10, [X8+80]
	6277 Move [X8+120], W9
	6278 Move [X8+124], W10
	6279 Move X8, 0x43F000
	6280 Move X8, [X8+368]
	6281 Move X0, [X8]
	6282 Move W8, [X0+224]
	6283 Compare W8, 0
	6284 JumpIfNotEqual {6286}
	6285 Call 0x1C17DFC
	6286 Move W20, [X31+452]
	6287 Move X1, X31
	6288 Move W0, W20
	6289 Call Char.IsLetterOrDigit, X0
	6290 Move TEMP, X0
	6291 And TEMP, TEMP, 1
	6292 Compare TEMP, 1
	6293 JumpIfEqual {6301}
	6294 Move TEMP, 0x200F
	6295 Not TEMP
	6296 Move W8, TEMP
	6297 Add W8, W20, W8
	6298 NotImplemented "Instruction CMP not yet implemented."
	6299 NotImplemented "Instruction CMP not yet implemented."
	6300 NotImplemented "Instruction CMP not yet implemented."
	6301 Move X8, [X31+456]
	6302 Move W9, [X31+364]
	6303 Move W8, [X8]
	6304 And W31, W9, 1
	6305 NotImplemented "Instruction CSEL not yet implemented."
	6306 Subtract W8, W8, 1
	6307 NotImplemented "Instruction CMP not yet implemented."
	6308 Move X8, [X31+256]
	6309 Move X8, [X8]
	6310 Compare X8, 0
	6311 JumpIfEqual {7654}
	6312 NotImplemented "Instruction LDRSW not yet implemented."
	6313 Move W21, [X8+24]
	6314 Add W9, W20, 1
	6315 NotImplemented "Instruction CMP not yet implemented."
	6316 Move X8, 0x4AB000
	6317 Move X8, [X8+2920]
	6318 Move X0, [X8]
	6319 Move W8, [X0+224]
	6320 Compare W8, 0
	6321 JumpIfNotEqual {6323}
	6322 Call 0x1C17DFC
	6323 Move X8, 0x4AB000
	6324 Move X8, [X8+2912]
	6325 Add W1, W21, 1
	6326 Move X21, [X31+256]
	6327 Move X2, [X8]
	6328 Move X0, X21
	6329 Call TextInfo.Resize, X0, X1
	6330 Move X8, [X21]
	6331 Compare X8, 0
	6332 JumpIfEqual {7654}
	6333 Move W9, [X8+24]
	6334 NotImplemented "Instruction CMP not yet implemented."
	6335 Move W9, 12
	6336 NotImplemented "Instruction MADD not yet implemented."
	6337 Move W9, [X31+436]
	6338 Move W10, [X31+368]
	6339 Move X21, [X31+440]
	6340 Subtract W9, W9, W26
	6341 Move [X8+32], W26
	6342 Move [X8+36], W10
	6343 Move [X8+40], W9
	6344 Move W9, [X21+28]
	6345 Move X8, [X21+72]
	6346 Add W9, W9, 1
	6347 Move [X21+28], W9
	6348 Compare X8, 0
	6349 JumpIfEqual {7654}
	6350 Move W9, [X8+24]
	6351 Move X10, [X31+416]
	6352 NotImplemented "Instruction CMP not yet implemented."
	6353 Move W9, 96
	6354 NotImplemented "Instruction MADD not yet implemented."
	6355 Move W9, [X8+52]
	6356 Move W10, [X31+320]
	6357 Add W9, W9, 1
	6358 Add W10, W10, 1
	6359 Move [X31+320], W10
	6360 Move [X8+52], W9
	6361 Move W8, 1
	6362 Move [X31+364], W8
	6363 Move X8, [X22]
	6364 Compare X8, 0
	6365 JumpIfEqual {7654}
	6366 Move W9, [X8+24]
	6367 NotImplemented "Instruction CMP not yet implemented."
	6368 NotImplemented "Instruction MADD not yet implemented."
	6369 Move W10, [X10+412]
	6370 Move TEMP, X10
	6371 And TEMP, TEMP, 4
	6372 Compare TEMP, 4
	6373 JumpIfEqual {6387}
	6374 Move W10, [X31+388]
	6375 Move TEMP, X10
	6376 And TEMP, TEMP, 1
	6377 Compare TEMP, 1
	6378 JumpIfNotEqual {6499}
	6379 Move W10, [X31+436]
	6380 Subtract W10, W10, 2
	6381 NotImplemented "Instruction CMP not yet implemented."
	6382 Add X8, X8, X27
	6383 Subtract X9, X8, 852
	6384 Subtract X8, X8, 792
	6385 Move V3, [X9]
	6386 Move V7, [X8]
	6387 Move X9, [X19+5560]
	6388 Compare X9, 0
	6389 JumpIfEqual {7654}
	6390 NotImplemented "Instruction LDRSW not yet implemented."
	6391 Move W11, [X9+24]
	6392 NotImplemented "Instruction CMP not yet implemented."
	6393 Move W11, 56
	6394 NotImplemented "Instruction MADD not yet implemented."
	6395 Move W9, [X9+84]
	6396 NotImplemented "Instruction NOP not yet implemented."
	6397 NotImplemented "Instruction MADD not yet implemented."
	6398 Move W22, [X10+112]
	6399 NotImplemented "Instruction NOP not yet implemented."
	6400 NotImplemented "Instruction MADD not yet implemented."
	6401 Move W9, W9
	6402 ShiftRight W9, 30
	6403 And W9, W9, 0x1FFFFFFF
	6404 Move [X10+376], W9
	6405 Move X10, [X31+464]
	6406 Move W9, [X10+216]
	6407 NotImplemented "Instruction CMP not yet implemented."
	6408 Move W9, [X10+224]
	6409 NotImplemented "Instruction CMP not yet implemented."
	6410 Move W20, 1
	6411 Move W10, [X31+452]
	6412 Move W9, 0x200B
	6413 NotImplemented "Instruction CMP not yet implemented."
	6414 Move W10, [X31+380]
	6415 NotImplemented "Instruction CSET not yet implemented."
	6416 Or W21, W9, W10
	6417 Move TEMP, X21
	6418 And TEMP, TEMP, 1
	6419 Compare TEMP, 1
	6420 JumpIfEqual {6461}
	6421 NotImplemented "Instruction MADD not yet implemented."
	6422 Move V0, [X9+364]
	6423 Move W9, [X31+200]
	6424 Move V1, [X31+352]
	6425 Move X0, [X31+392]
	6426 NotImplemented "Instruction FCMP not yet implemented."
	6427 NotImplemented "Instruction FCSEL not yet implemented."
	6428 Move V0, [X31+180]
	6429 NotImplemented "Instruction CMP not yet implemented."
	6430 NotImplemented "Instruction FCSEL not yet implemented."
	6431 Compare X0, 0
	6432 JumpIfEqual {7654}
	6433 Move V1, [X31+372]
	6434 NotImplemented "Instruction NOP not yet implemented."
	6435 NotImplemented "Instruction MADD not yet implemented."
	6436 Move V9, [X8+336]
	6437 NotImplemented "Instruction FABS not yet implemented."
	6438 NotImplemented "Instruction FCMP not yet implemented."
	6439 Add X8, X31, 4096
	6440 NotImplemented "Instruction FCSEL not yet implemented."
	6441 Add X8, X8, 656
	6442 Move X1, X31
	6443 Move [X31+372], S1
	6444 Call FontAsset.get_faceInfo, X0
	6445 Add X0, X31, 4096
	6446 Add X1, X31, 4096
	6447 Add X0, X0, 512
	6448 Add X1, X1, 656
	6449 Move W2, 96
	6450 Call 0x3EB2AC0
	6451 Add X0, X31, 4096
	6452 Add X0, X0, 512
	6453 Move X1, X31
	6454 Call FaceInfo.get_underlineOffset, X0
	6455 Multiply S0, S15, S0
	6456 Add S0, S9, S0
	6457 NotImplemented "Instruction FCMP not yet implemented."
	6458 NotImplemented "Instruction FCSEL not yet implemented."
	6459 Move [X31+352], S0
	6460 Move [X31+200], W22
	6461 Move W9, [X31+452]
	6462 Move X22, [X31+472]
	6463 NotImplemented "Instruction CMP not yet implemented."
	6464 NotImplemented "Instruction CSET not yet implemented."
	6465 NotImplemented "Instruction CMP not yet implemented."
	6466 Move W9, [X31+452]
	6467 And W9, W9, 0xFFFE
	6468 NotImplemented "Instruction CMP not yet implemented."
	6469 Move X9, [X31+424]
	6470 NotImplemented "Instruction CMP not yet implemented."
	6471 Move W9, [X31+388]
	6472 Or W8, W9, W8
	6473 Move TEMP, X8
	6474 And TEMP, TEMP, 1
	6475 Compare TEMP, 1
	6476 JumpIfEqual {6493}
	6477 Move X8, [X31+424]
	6478 NotImplemented "Instruction CMP not yet implemented."
	6479 Move X8, 0x43F000
	6480 Move X8, [X8+368]
	6481 Move X0, [X8]
	6482 Move W8, [X0+224]
	6483 Compare W8, 0
	6484 JumpIfNotEqual {6486}
	6485 Call 0x1C17DFC
	6486 Move W0, [X31+452]
	6487 Move X1, X31
	6488 Call Char.IsSeparator, X0
	6489 Move TEMP, X0
	6490 And TEMP, TEMP, 1
	6491 Compare TEMP, 1
	6492 JumpIfNotEqual {6500}
	6493 Move W8, [X31+388]
	6494 Move TEMP, X8
	6495 And TEMP, TEMP, 1
	6496 Compare TEMP, 1
	6497 JumpIfEqual {6521}
	6498 Move X21, [X31+440]
	6499 Move [X31+388], W31
	6500 Move X8, [X22]
	6501 Compare X8, 0
	6502 JumpIfEqual {7654}
	6503 Move W9, [X8+24]
	6504 NotImplemented "Instruction CMP not yet implemented."
	6505 NotImplemented "Instruction MADD not yet implemented."
	6506 Move V0, [X8+364]
	6507 Move V1, [X8+292]
	6508 NotImplemented "Instruction FCMP not yet implemented."
	6509 Move W8, [X8+372]
	6510 NotImplemented "Instruction FCSEL not yet implemented."
	6511 Move [X31+220], S1
	6512 Move [X31+228], S0
	6513 Move V1, [X31+372]
	6514 Move S0, W31
	6515 Move [X31+216], S0
	6516 Move V0, [X31+352]
	6517 NotImplemented "Instruction FCSEL not yet implemented."
	6518 Move [X31+264], X8
	6519 Move [X31+372], S1
	6520 Move [X31+212], S0
	6521 Move X8, [X31+456]
	6522 Move W8, [X8]
	6523 Subtract W8, W8, 1
	6524 Move X8, [X22]
	6525 Compare X8, 0
	6526 JumpIfEqual {7654}
	6527 Move W9, [X8+24]
	6528 Move X21, [X31+440]
	6529 NotImplemented "Instruction CMP not yet implemented."
	6530 NotImplemented "Instruction MADD not yet implemented."
	6531 Move V3, [X8+304]
	6532 Move V7, [X8+364]
	6533 Move V0, [X31+372]
	6534 Move X8, [X31+264]
	6535 Move V1, [X31+212]
	6536 Move V4, [X31+352]
	6537 Move [X31+8], S0
	6538 Move S2, [X31+216]
	6539 Move S0, [X31+220]
	6540 Move V6, [X31+224]
	6541 Move X2, [X31+464]
	6542 Move W1, W8
	6543 Move [X31], S15
	6544 Move S5, W31
	6545 Move S15, W31
	6546 Move X0, X19
	6547 Move X3, X21
	6548 Move X4, X31
	6549 Call TextGenerator.DrawUnderlineMesh, X0, X1, X2, V0, V1, V2, V3, X3, X4, X5
	6550 Move X8, -52215808
	6551 Move V0, [X8+884]
	6552 Move [X31+388], W31
	6553 Move [X31+352], S0
	6554 Move S0, W31
	6555 Move [X31+372], S0
	6556 Move X8, [X22]
	6557 Compare X8, 0
	6558 JumpIfEqual {7654}
	6559 Move W9, [X8+24]
	6560 NotImplemented "Instruction CMP not yet implemented."
	6561 Move X0, [X31+392]
	6562 Compare X0, 0
	6563 JumpIfEqual {7654}
	6564 NotImplemented "Instruction MADD not yet implemented."
	6565 Move W20, [X8+412]
	6566 Add X8, X31, 4096
	6567 Add X8, X8, 656
	6568 Move X1, X31
	6569 Call FontAsset.get_faceInfo, X0
	6570 Add X0, X31, 4096
	6571 Add X1, X31, 4096
	6572 Add X0, X0, 512
	6573 Add X1, X1, 656
	6574 Move W2, 96
	6575 Call 0x3EB2AC0
	6576 Add X0, X31, 4096
	6577 Add X0, X0, 512
	6578 Move X1, X31
	6579 Call FaceInfo.get_strikethroughOffset, X0
	6580 Move V10, V0
	6581 Move TEMP, X20
	6582 And TEMP, TEMP, 64
	6583 Compare TEMP, 64
	6584 JumpIfEqual {6605}
	6585 Move W8, [X31+384]
	6586 Move TEMP, X8
	6587 And TEMP, TEMP, 1
	6588 Compare TEMP, 1
	6589 JumpIfNotEqual {6666}
	6590 Move X8, [X22]
	6591 Move W20, 96
	6592 Compare X8, 0
	6593 JumpIfEqual {7654}
	6594 Move W10, [X31+436]
	6595 Move W9, [X8+24]
	6596 Subtract W10, W10, 2
	6597 NotImplemented "Instruction CMP not yet implemented."
	6598 Add X8, X8, X27
	6599 Subtract X9, X8, 820
	6600 Subtract X8, X8, 852
	6601 Move V6, [X31+248]
	6602 Move V0, [X9]
	6603 Move V3, [X8]
	6604 Multiply S1, S6, S10
	6605 Move X8, [X22]
	6606 Compare X8, 0
	6607 JumpIfEqual {7654}
	6608 Move X9, [X19+5560]
	6609 Compare X9, 0
	6610 JumpIfEqual {7654}
	6611 NotImplemented "Instruction LDRSW not yet implemented."
	6612 Move W11, [X9+24]
	6613 NotImplemented "Instruction CMP not yet implemented."
	6614 Move W11, [X8+24]
	6615 NotImplemented "Instruction CMP not yet implemented."
	6616 Move W11, 56
	6617 NotImplemented "Instruction MADD not yet implemented."
	6618 Move W9, [X9+84]
	6619 NotImplemented "Instruction NOP not yet implemented."
	6620 NotImplemented "Instruction MADD not yet implemented."
	6621 Move W9, W9
	6622 ShiftRight W9, 30
	6623 And W9, W9, 0x1FFFFFFF
	6624 Move [X10+384], W9
	6625 Move X10, [X31+464]
	6626 Move W9, [X10+216]
	6627 NotImplemented "Instruction CMP not yet implemented."
	6628 Move W9, [X10+224]
	6629 NotImplemented "Instruction CMP not yet implemented."
	6630 Move W20, 1
	6631 Move W9, [X31+452]
	6632 NotImplemented "Instruction CMP not yet implemented."
	6633 Move W9, [X31+452]
	6634 And W9, W9, 0xFFFE
	6635 NotImplemented "Instruction CMP not yet implemented."
	6636 Move X9, [X31+424]
	6637 NotImplemented "Instruction CMP not yet implemented."
	6638 Move W9, [X31+384]
	6639 NotImplemented "Instruction ORN not yet implemented."
	6640 NotImplemented "Instruction BIC not yet implemented."
	6641 Move TEMP, X9
	6642 And TEMP, TEMP, 1
	6643 Compare TEMP, 1
	6644 JumpIfNotEqual {6661}
	6645 Move X9, [X31+424]
	6646 NotImplemented "Instruction CMP not yet implemented."
	6647 Move X8, 0x43F000
	6648 Move X8, [X8+368]
	6649 Move X0, [X8]
	6650 Move W8, [X0+224]
	6651 Compare W8, 0
	6652 JumpIfNotEqual {6654}
	6653 Call 0x1C17DFC
	6654 Move W0, [X31+452]
	6655 Move X1, X31
	6656 Call Char.IsSeparator, X0
	6657 Move TEMP, X0
	6658 And TEMP, TEMP, 1
	6659 Compare TEMP, 1
	6660 JumpIfNotEqual {6764}
	6661 Move W8, [X31+384]
	6662 Move TEMP, X8
	6663 And TEMP, TEMP, 1
	6664 Compare TEMP, 1
	6665 JumpIfEqual {6785}
	6666 Move [X31+384], W31
	6667 Move W20, 96
	6668 Move X9, [X31+336]
	6669 NotImplemented "Instruction CMP not yet implemented."
	6670 Move X9, [X31+424]
	6671 NotImplemented "Instruction CMP not yet implemented."
	6672 Move X21, [X31+440]
	6673 Compare W20, 0
	6674 JumpIfEqual {7000}
	6675 Move X8, [X22]
	6676 Compare X8, 0
	6677 JumpIfEqual {7654}
	6678 Move W10, [X31+436]
	6679 Move W9, [X8+24]
	6680 Move W9, [X10+116]
	6681 NotImplemented "Instruction CMP not yet implemented."
	6682 Move W9, [X10+240]
	6683 Add W10, W22, 1
	6684 NotImplemented "Instruction CMP not yet implemented."
	6685 NotImplemented "Instruction CSET not yet implemented."
	6686 Move W9, [X10+116]
	6687 NotImplemented "Instruction CMP not yet implemented."
	6688 NotImplemented "Instruction MADD not yet implemented."
	6689 Move W9, [X9+112]
	6690 Move W10, [X10+240]
	6691 Add W9, W9, 1
	6692 NotImplemented "Instruction CMP not yet implemented."
	6693 NotImplemented "Instruction CSET not yet implemented."
	6694 Move W8, [X31+364]
	6695 Move TEMP, X8
	6696 And TEMP, TEMP, 1
	6697 Compare TEMP, 1
	6698 JumpIfNotEqual {6880}
	6699 Move W8, [X31+436]
	6700 NotImplemented "Instruction CMP not yet implemented."
	6701 Move W8, [X25+24]
	6702 Subtract W9, W8, 1
	6703 NotImplemented "Instruction CMP not yet implemented."
	6704 Move X9, [X31+456]
	6705 Move W9, [X9]
	6706 NotImplemented "Instruction CMP not yet implemented."
	6707 Move W10, [X31+452]
	6708 Move W9, 0x2019
	6709 NotImplemented "Instruction CMP not yet implemented."
	6710 Move W9, [X31+452]
	6711 NotImplemented "Instruction CMP not yet implemented."
	6712 Move W9, [X31+436]
	6713 Subtract W9, W9, 2
	6714 NotImplemented "Instruction CMP not yet implemented."
	6715 Move X8, 0x43F000
	6716 Move X8, [X8+368]
	6717 Move X0, [X8]
	6718 Add X8, X25, X27
	6719 Subtract X8, X8, 1124
	6720 NotImplemented "Instruction LDRH not yet implemented."
	6721 Move W9, [X0+224]
	6722 Compare W9, 0
	6723 JumpIfNotEqual {6725}
	6724 Call 0x1C17DFC
	6725 Move W0, W20
	6726 Move X1, X31
	6727 Call Char.IsLetterOrDigit, X0
	6728 Move TEMP, X0
	6729 And TEMP, TEMP, 1
	6730 Compare TEMP, 1
	6731 JumpIfNotEqual {6905}
	6732 Move W8, [X25+24]
	6733 Move W9, [X31+436]
	6734 NotImplemented "Instruction CMP not yet implemented."
	6735 Move X8, 0x43F000
	6736 Move X8, [X8+368]
	6737 Move X0, [X8]
	6738 Add X8, X25, X27
	6739 Subtract X8, X8, 340
	6740 NotImplemented "Instruction LDRH not yet implemented."
	6741 Move W9, [X0+224]
	6742 Compare W9, 0
	6743 JumpIfNotEqual {6745}
	6744 Call 0x1C17DFC
	6745 Move W0, W20
	6746 Move X1, X31
	6747 Call Char.IsLetterOrDigit, X0
	6748 Move TEMP, X0
	6749 And TEMP, TEMP, 1
	6750 Compare TEMP, 1
	6751 JumpIfEqual {6361}
	6752 Move X8, [X22]
	6753 Compare X8, 0
	6754 JumpIfEqual {7654}
	6755 Move W9, [X8+24]
	6756 Move TEMP, X21
	6757 And TEMP, TEMP, 1
	6758 Compare TEMP, 1
	6759 JumpIfNotEqual {6981}
	6760 Move X10, [X31+424]
	6761 NotImplemented "Instruction CMP not yet implemented."
	6762 Move X9, X10
	6763 Move W20, W31
	6764 Move X8, [X22]
	6765 Compare X8, 0
	6766 JumpIfEqual {7654}
	6767 Move W9, [X8+24]
	6768 NotImplemented "Instruction CMP not yet implemented."
	6769 NotImplemented "Instruction MADD not yet implemented."
	6770 Move V0, [X8+364]
	6771 Move V2, [X8+292]
	6772 Move V3, [X8+104]
	6773 Move V1, [X8+336]
	6774 Move W8, [X8+380]
	6775 Move [X31+244], S2
	6776 Move [X31+252], S0
	6777 Multiply S0, S10, S0
	6778 Move [X31+172], S1
	6779 Move [X31+180], S3
	6780 Add S3, S0, S1
	6781 Move S0, W31
	6782 Move [X31+272], X8
	6783 Move [X31+228], S0
	6784 Move [X31+236], S3
	6785 Move X8, [X31+456]
	6786 Move W8, [X8]
	6787 NotImplemented "Instruction CMP not yet implemented."
	6788 Move X8, [X22]
	6789 Compare X8, 0
	6790 JumpIfEqual {7654}
	6791 Move W9, [X8+24]
	6792 Move W20, 96
	6793 NotImplemented "Instruction CMP not yet implemented."
	6794 NotImplemented "Instruction MADD not yet implemented."
	6795 Move X9, [X31+336]
	6796 NotImplemented "Instruction CMP not yet implemented."
	6797 Move X8, [X22]
	6798 Move W20, 96
	6799 Compare X8, 0
	6800 JumpIfEqual {7654}
	6801 Move W10, [X31+452]
	6802 Move W11, [X31+380]
	6803 Move W9, 0x200B
	6804 NotImplemented "Instruction CMP not yet implemented."
	6805 Move W9, [X8+24]
	6806 NotImplemented "Instruction CSET not yet implemented."
	6807 Xor W11, W11, 1
	6808 And W10, W10, W11
	6809 Move TEMP, X10
	6810 And TEMP, TEMP, 1
	6811 Compare TEMP, 1
	6812 JumpIfEqual {6997}
	6813 Move X10, [X31+424]
	6814 NotImplemented "Instruction CMP not yet implemented."
	6815 Move X9, X10
	6816 NotImplemented "Instruction CMP not yet implemented."
	6817 Move X8, [X22]
	6818 Compare X8, 0
	6819 JumpIfEqual {7654}
	6820 Move W9, [X8+24]
	6821 Move W10, [X31+436]
	6822 NotImplemented "Instruction CMP not yet implemented."
	6823 Add X9, X8, X27
	6824 Subtract X10, X9, 268
	6825 Move V0, [X10]
	6826 Move V1, [X31+176]
	6827 NotImplemented "Instruction FCMP not yet implemented."
	6828 Move X8, 0x4AB000
	6829 Move X8, [X8+2888]
	6830 NotImplemented "Instruction LDUR not yet implemented."
	6831 Move X0, [X8]
	6832 Move W8, [X0+224]
	6833 Compare W8, 0
	6834 JumpIfNotEqual {6836}
	6835 Call 0x1C17DFC
	6836 Move V0, [X31+25]
	6837 Move V1, [X31+172]
	6838 Move X0, X31
	6839 Add S0, S0, S8
	6840 Call TextGeneratorUtilities.Approximately, V0, V1
	6841 Move TEMP, X0
	6842 And TEMP, TEMP, 1
	6843 Compare TEMP, 1
	6844 JumpIfNotEqual {7023}
	6845 Move X8, [X31+456]
	6846 Move W8, [X8]
	6847 NotImplemented "Instruction CMP not yet implemented."
	6848 Move X0, [X31+392]
	6849 Move X1, X31
	6850 Call Object.GetInstanceID, X0
	6851 Move W8, [X25+24]
	6852 Move W9, [X31+436]
	6853 NotImplemented "Instruction CMP not yet implemented."
	6854 Add X8, X25, X27
	6855 Subtract X8, X8, 308
	6856 Move W22, W0
	6857 Move X0, [X8]
	6858 Compare X0, 0
	6859 JumpIfEqual {7654}
	6860 Move X1, X31
	6861 Call Object.GetInstanceID, X0
	6862 NotImplemented "Instruction CMP not yet implemented."
	6863 Move X22, [X31+472]
	6864 Compare W20, 0
	6865 JumpIfEqual {7021}
	6866 Move X8, [X22]
	6867 Compare X8, 0
	6868 JumpIfEqual {7654}
	6869 Move W10, [X31+436]
	6870 Move W9, [X8+24]
	6871 Move W20, 96
	6872 Subtract W10, W10, 2
	6873 NotImplemented "Instruction CMP not yet implemented."
	6874 Add X8, X8, X27
	6875 Subtract X9, X8, 820
	6876 Subtract X8, X8, 852
	6877 Move V0, [X9]
	6878 Move V3, [X8]
	6879 Move W20, W31
	6880 Move W8, [X31+436]
	6881 NotImplemented "Instruction CMP not yet implemented."
	6882 Move X8, 0x43F000
	6883 Move X8, [X8+368]
	6884 Move X0, [X8]
	6885 Move W8, [X0+224]
	6886 Compare W8, 0
	6887 JumpIfNotEqual {6889}
	6888 Call 0x1C17DFC
	6889 Move W20, [X31+452]
	6890 Move X1, X31
	6891 Move W0, W20
	6892 Call Char.IsPunctuation, X0
	6893 Move W8, 0x200B
	6894 NotImplemented "Instruction CMP not yet implemented."
	6895 Move W9, [X31+380]
	6896 Xor W8, W0, 1
	6897 Or W8, W9, W8
	6898 Move TEMP, X8
	6899 And TEMP, TEMP, 1
	6900 Compare TEMP, 1
	6901 JumpIfEqual {6905}
	6902 Move X8, [X31+456]
	6903 Move W8, [X8]
	6904 NotImplemented "Instruction CMP not yet implemented."
	6905 Move X8, [X31+456]
	6906 Move W8, [X8]
	6907 Subtract W8, W8, 1
	6908 NotImplemented "Instruction CMP not yet implemented."
	6909 Move X8, 0x43E000
	6910 Move X8, [X8+368]
	6911 Move X0, [X8]
	6912 Move W8, [X0+224]
	6913 Compare W8, 0
	6914 JumpIfNotEqual {6916}
	6915 Call 0x1C17DFC
	6916 Move W0, [X31+452]
	6917 Move X1, X31
	6918 Call Char.IsLetterOrDigit, X0
	6919 Move TEMP, X0
	6920 And TEMP, TEMP, 1
	6921 Compare TEMP, 1
	6922 JumpIfEqual {6926}
	6923 Move W8, [X31+376]
	6924 Subtract W8, W8, 1
	6925 Move [X31+368], W8
	6926 Move X8, [X31+256]
	6927 Move X8, [X8]
	6928 Compare X8, 0
	6929 JumpIfEqual {7654}
	6930 NotImplemented "Instruction LDRSW not yet implemented."
	6931 Move W21, [X8+24]
	6932 Add W9, W20, 1
	6933 NotImplemented "Instruction CMP not yet implemented."
	6934 Move X8, 0x4AA000
	6935 Move X8, [X8+2920]
	6936 Move X0, [X8]
	6937 Move W8, [X0+224]
	6938 Compare W8, 0
	6939 JumpIfNotEqual {6941}
	6940 Call 0x1C17DFC
	6941 Move X8, 0x4AA000
	6942 Move X8, [X8+2912]
	6943 Add W1, W21, 1
	6944 Move X21, [X31+256]
	6945 Move X2, [X8]
	6946 Move X0, X21
	6947 Call TextInfo.Resize, X0, X1
	6948 Move X8, [X21]
	6949 Compare X8, 0
	6950 JumpIfEqual {7654}
	6951 Move W9, [X8+24]
	6952 NotImplemented "Instruction CMP not yet implemented."
	6953 Move W10, [X31+368]
	6954 Move W9, 12
	6955 Move X21, [X31+440]
	6956 NotImplemented "Instruction NOP not yet implemented."
	6957 NotImplemented "Instruction MADD not yet implemented."
	6958 Subtract W9, W10, W26
	6959 Add W9, W9, 1
	6960 Move [X8+32], W26
	6961 Move [X8+36], W10
	6962 Move [X8+40], W9
	6963 Move W9, [X21+28]
	6964 Move X8, [X21+72]
	6965 Add W9, W9, 1
	6966 Move [X21+28], W9
	6967 Compare X8, 0
	6968 JumpIfEqual {7654}
	6969 Move W9, [X8+24]
	6970 Move X10, [X31+416]
	6971 NotImplemented "Instruction CMP not yet implemented."
	6972 Move W9, 96
	6973 NotImplemented "Instruction MADD not yet implemented."
	6974 Move W9, [X8+52]
	6975 Move W10, [X31+320]
	6976 Move [X31+364], W31
	6977 Add W9, W9, 1
	6978 Add W10, W10, 1
	6979 Move [X31+320], W10
	6980 Move [X8+52], W9
	6981 NotImplemented "Instruction CMP not yet implemented."
	6982 Move X9, X24
	6983 Move V0, [X31+372]
	6984 NotImplemented "Instruction NOP not yet implemented."
	6985 NotImplemented "Instruction MADD not yet implemented."
	6986 Move V3, [X8+304]
	6987 Move V7, [X8+364]
	6988 Move X8, [X31+264]
	6989 Move [X31+8], S0
	6990 Move S2, [X31+216]
	6991 Move S0, [X31+220]
	6992 Move V1, [X31+212]
	6993 Move V4, [X31+352]
	6994 Move V6, [X31+224]
	6995 Move X2, [X31+464]
	6996 Move X21, [X31+440]
	6997 NotImplemented "Instruction CMP not yet implemented."
	6998 Move X9, X24
	6999 NotImplemented "Instruction CMP not yet implemented."
	7000 NotImplemented "Instruction CMP not yet implemented."
	7001 Move X8, [X22]
	7002 Compare X8, 0
	7003 JumpIfEqual {7654}
	7004 Move W9, [X8+24]
	7005 Move W10, [X31+436]
	7006 NotImplemented "Instruction CMP not yet implemented."
	7007 Move W1, [X8]
	7008 Move X8, [X31+264]
	7009 Move X2, X31
	7010 Move W22, W8
	7011 Move X0, X22
	7012 Call ColorUtilities.CompareColors, X0, X1
	7013 Move TEMP, X0
	7014 And TEMP, TEMP, 1
	7015 Compare TEMP, 1
	7016 JumpIfNotEqual {7391}
	7017 Move X22, [X31+472]
	7018 Move W8, 1
	7019 Move [X31+388], W8
	7020 Move [X31+364], W31
	7021 Move W8, 1
	7022 Move [X31+384], W8
	7023 Move X8, [X22]
	7024 Compare X8, 0
	7025 JumpIfEqual {7654}
	7026 Move X10, [X31+424]
	7027 Move W9, [X8+24]
	7028 NotImplemented "Instruction CMP not yet implemented."
	7029 NotImplemented "Instruction CMP not yet implemented."
	7030 Move X9, X10
	7031 NotImplemented "Instruction CMP not yet implemented."
	7032 Move X9, X24
	7033 Move W20, 96
	7034 NotImplemented "Instruction MADD not yet implemented."
	7035 Move V0, [X8+336]
	7036 Move V3, [X8+304]
	7037 Move V6, [X31+248]
	7038 Multiply S1, S10, S6
	7039 Move X8, [X31+272]
	7040 Add S4, S1, S0
	7041 Move V0, [X31+244]
	7042 Move S2, [X31+228]
	7043 Move S1, [X31+232]
	7044 Move X2, [X31+464]
	7045 Move W1, W8
	7046 Move S5, W31
	7047 Move X0, X19
	7048 Move V7, V6
	7049 Move X3, X21
	7050 Move X4, X31
	7051 Move [X31+8], S11
	7052 Move [X31], S6
	7053 Call TextGenerator.DrawUnderlineMesh, X0, X1, X2, V0, V1, V2, V3, X3, X4, X5
	7054 Move [X31+384], W31
	7055 Move X8, [X22]
	7056 Compare X8, 0
	7057 JumpIfEqual {7654}
	7058 Move X9, [X8+24]
	7059 Move W12, [X31+356]
	7060 NotImplemented "Instruction CMP not yet implemented."
	7061 NotImplemented "Instruction MADD not yet implemented."
	7062 Move W10, [X10+413]
	7063 Move [X31+360], W26
	7064 Move TEMP, X10
	7065 And TEMP, TEMP, 2
	7066 Compare TEMP, 2
	7067 JumpIfEqual {7085}
	7068 Move TEMP, X12
	7069 And TEMP, TEMP, 1
	7070 Compare TEMP, 1
	7071 JumpIfNotEqual {7084}
	7072 Move V2, [X31+296]
	7073 Move W1, [X31+4704]
	7074 Move V0, [X31+300]
	7075 Move V1, [X31+324]
	7076 Move V3, [X31+304]
	7077 Move V4, [X31+312]
	7078 Move X2, [X31+464]
	7079 Move X0, X19
	7080 Move V5, V2
	7081 Move X3, X21
	7082 Move X4, X31
	7083 Call TextGenerator.DrawTextHighlight, X0, X1, X2, X3, X4, X5
	7084 Move W22, W31
	7085 Move X11, [X31+464]
	7086 Move W10, [X11+216]
	7087 NotImplemented "Instruction CMP not yet implemented."
	7088 Move W10, [X11+224]
	7089 NotImplemented "Instruction CMP not yet implemented."
	7090 Move W20, 1
	7091 Move TEMP, X12
	7092 And TEMP, TEMP, 1
	7093 Compare TEMP, 1
	7094 JumpIfNotEqual {7096}
	7095 Move V10, [X31+300]
	7096 Move W8, [X31+452]
	7097 Move W22, W31
	7098 NotImplemented "Instruction CMP not yet implemented."
	7099 And W8, W8, 0xFFFE
	7100 NotImplemented "Instruction CMP not yet implemented."
	7101 Move X8, [X31+424]
	7102 NotImplemented "Instruction CMP not yet implemented."
	7103 Compare W20, 0
	7104 JumpIfNotEqual {7121}
	7105 NotImplemented "Instruction CMP not yet implemented."
	7106 Move X8, 0x43E000
	7107 Move X8, [X8+368]
	7108 Move X0, [X8]
	7109 Move W8, [X0+224]
	7110 Compare W8, 0
	7111 JumpIfNotEqual {7113}
	7112 Call 0x1C17DFC
	7113 Move W0, [X31+452]
	7114 Move X1, X31
	7115 Call Char.IsSeparator, X0
	7116 Move TEMP, X0
	7117 And TEMP, TEMP, 1
	7118 Compare TEMP, 1
	7119 JumpIfNotEqual {7131}
	7120 Move W22, W31
	7121 Move W20, 96
	7122 Move W24, [X31+436]
	7123 Move W10, [X11+116]
	7124 NotImplemented "Instruction CMP not yet implemented."
	7125 NotImplemented "Instruction MADD not yet implemented."
	7126 Move W10, [X10+112]
	7127 Move W11, [X11+240]
	7128 Add W10, W10, 1
	7129 NotImplemented "Instruction CMP not yet implemented."
	7130 NotImplemented "Instruction CSET not yet implemented."
	7131 Move X22, 0x4AA000
	7132 Move X22, [X22+2888]
	7133 Move X0, [X22]
	7134 Move W8, [X0+224]
	7135 Compare W8, 0
	7136 JumpIfNotEqual {7139}
	7137 Call 0x1C17DFC
	7138 Move X0, [X22]
	7139 Move X8, [X31+472]
	7140 Move X8, [X8]
	7141 Compare X8, 0
	7142 JumpIfEqual {7654}
	7143 Move X9, [X8+24]
	7144 NotImplemented "Instruction CMP not yet implemented."
	7145 Move X10, [X0+184]
	7146 NotImplemented "Instruction NOP not yet implemented."
	7147 NotImplemented "Instruction MADD not yet implemented."
	7148 Add X11, X11, 392
	7149 Move V0, [X11]
	7150 Move S10, [X10]
	7151 Move S1, [X10+4]
	7152 Move W11, [X11+16]
	7153 Move [X31+324], S1
	7154 Move V1, [X10+8]
	7155 Move [X31+304], S1
	7156 Move V1, [X10+12]
	7157 Move [X31+294], V0
	7158 Move S0, W31
	7159 Move [X31+4720], W11
	7160 Move [X31+312], S1
	7161 Move [X31+296], S0
	7162 NotImplemented "Instruction CMP not yet implemented."
	7163 NotImplemented "Instruction MADD not yet implemented."
	7164 Move V1, [X8+304]
	7165 Move W9, [X31+4720]
	7166 Move V12, V11
	7167 Move V13, [X8+292]
	7168 Move V14, [X8+328]
	7169 Move V8, [X8+332]
	7170 Move V9, [X8+340]
	7171 Move V11, [X8+356]
	7172 Add X8, X8, 360
	7173 Move [X31+452], S1
	7174 Move V1, [X8+32]
	7175 Move V2, [X8+48]
	7176 Move V3, [X8]
	7177 Move V4, [X8+16]
	7178 Move V0, [X31+294]
	7179 Move [X31+528], W9
	7180 Move X9, [X31+184]
	7181 Move [X31+300], V2
	7182 Move [X31+299], V1
	7183 Move [X31+298], V4
	7184 Move [X31+297], V3
	7185 Move [X31+32], V0
	7186 Move W8, [X9+16]
	7187 Move V0, [X9]
	7188 Move V1, [X9]
	7189 Move W9, [X9+16]
	7190 Add X0, X31, 512
	7191 Add X1, X31, 480
	7192 Move X2, X31
	7193 Move [X31+1520], W8
	7194 Move [X31+94], V0
	7195 Move [X31+30], V1
	7196 Move [X31+496], W9
	7197 Call HighlightState.op_Inequality, X0, X1
	7198 Move X8, 0x4AA000
	7199 Move X8, [X8+2872]
	7200 Move X8, [X8]
	7201 Move W9, [X8+224]
	7202 Move TEMP, X0
	7203 And TEMP, TEMP, 1
	7204 Compare TEMP, 1
	7205 JumpIfNotEqual {7278}
	7206 Compare W9, 0
	7207 JumpIfNotEqual {7210}
	7208 Move X0, X8
	7209 Call 0x1C17DFC
	7210 Move X0, [X31+192]
	7211 Move X1, X31
	7212 Call Offset.get_right, X0
	7213 Move W8, [X31+380]
	7214 Move V1, [X31+304]
	7215 Move V2, [X31+324]
	7216 Move V4, [X31+312]
	7217 And W31, W8, 1
	7218 Subtract S0, S1, S0
	7219 NotImplemented "Instruction FCSEL not yet implemented."
	7220 NotImplemented "Instruction FCMP not yet implemented."
	7221 Add S0, S1, S0
	7222 NotImplemented "Instruction FCSEL not yet implemented."
	7223 Move S2, 0.5
	7224 Multiply S3, S0, S2
	7225 Move V2, [X31+296]
	7226 Move W1, [X31+4704]
	7227 Move X2, [X31+464]
	7228 NotImplemented "Instruction FCMP not yet implemented."
	7229 NotImplemented "Instruction FCSEL not yet implemented."
	7230 Move X0, X19
	7231 Move V0, V10
	7232 Move V5, V2
	7233 Move X3, X21
	7234 Move X4, X31
	7235 Move [X31+300], S3
	7236 Call TextGenerator.DrawTextHighlight, X0, X1, X2, X3, X4, X5
	7237 Move X22, 0x4AA000
	7238 Move X22, [X22+2872]
	7239 Move X0, [X22]
	7240 Move W8, [X0+224]
	7241 Compare W8, 0
	7242 JumpIfNotEqual {7244}
	7243 Call 0x1C17DFC
	7244 Move X24, [X31+152]
	7245 Move X1, X31
	7246 Move X0, X24
	7247 Call Offset.get_bottom, X0
	7248 Move X0, [X22]
	7249 Move V10, V0
	7250 Move W8, [X0+224]
	7251 Compare W8, 0
	7252 JumpIfNotEqual {7254}
	7253 Call 0x1C17DFC
	7254 Subtract S0, S9, S10
	7255 Move X0, X24
	7256 Move X1, X31
	7257 Move [X31+324], S0
	7258 Call Offset.get_right, X0
	7259 Move X0, X24
	7260 Move X1, X31
	7261 Move V10, V0
	7262 Call Offset.get_top, X0
	7263 Move W8, [X31+380]
	7264 Add S0, S8, S0
	7265 Move V1, [X31+452]
	7266 Move [X31+312], S0
	7267 Move V0, [X31+94]
	7268 And W31, W8, 1
	7269 Move W8, [X31+1520]
	7270 Move W24, [X31+436]
	7271 NotImplemented "Instruction FCSEL not yet implemented."
	7272 Add S1, S1, S10
	7273 Move [X31+294], V0
	7274 Move S0, W31
	7275 Move [X31+304], S1
	7276 Move [X31+4720], W8
	7277 Move [X31+296], S0
	7278 Move W24, [X31+436]
	7279 Compare W9, 0
	7280 JumpIfNotEqual {7283}
	7281 Move X0, X8
	7282 Call 0x1C17DFC
	7283 Move X22, [X31+192]
	7284 Move X1, X31
	7285 Move X0, X22
	7286 Call Offset.get_left, X0
	7287 Move W8, [X31+380]
	7288 Subtract S1, S14, S0
	7289 Subtract S0, S13, S0
	7290 Move X0, X22
	7291 And W31, W8, 1
	7292 NotImplemented "Instruction FCSEL not yet implemented."
	7293 Move V1, [X31+452]
	7294 Move X1, X31
	7295 NotImplemented "Instruction FCSEL not yet implemented."
	7296 NotImplemented "Instruction FCMP not yet implemented."
	7297 NotImplemented "Instruction FCSEL not yet implemented."
	7298 Move [X31+300], S0
	7299 Call Offset.get_right, X0
	7300 Move X8, 0x4AA000
	7301 Move X8, [X8+2872]
	7302 Move V1, [X31+304]
	7303 Add S0, S11, S0
	7304 Move X0, [X8]
	7305 NotImplemented "Instruction FCMP not yet implemented."
	7306 NotImplemented "Instruction FCSEL not yet implemented."
	7307 Move [X31+304], S1
	7308 Move W8, [X0+224]
	7309 Compare W8, 0
	7310 JumpIfNotEqual {7312}
	7311 Call 0x1C17DFC
	7312 Move X0, X22
	7313 Move X1, X31
	7314 Call Offset.get_bottom, X0
	7315 Move V1, [X31+324]
	7316 Subtract S0, S9, S0
	7317 Move X0, X22
	7318 Move X1, X31
	7319 NotImplemented "Instruction FCMP not yet implemented."
	7320 NotImplemented "Instruction FCSEL not yet implemented."
	7321 Move [X31+324], S1
	7322 Call Offset.get_top, X0
	7323 Move V1, [X31+312]
	7324 Add S0, S8, S0
	7325 NotImplemented "Instruction FCMP not yet implemented."
	7326 NotImplemented "Instruction FCSEL not yet implemented."
	7327 Move [X31+312], S1
	7328 Move X8, [X31+456]
	7329 Move X9, [X31+336]
	7330 Move V11, V12
	7331 Move W8, [X8]
	7332 NotImplemented "Instruction CMP not yet implemented."
	7333 NotImplemented "Instruction CMP not yet implemented."
	7334 Move X8, [X31+424]
	7335 NotImplemented "Instruction CMP not yet implemented."
	7336 Compare W20, 0
	7337 JumpIfEqual {7362}
	7338 Move V2, [X31+296]
	7339 Move W1, [X31+4704]
	7340 Move V0, [X31+300]
	7341 Move V1, [X31+324]
	7342 Move V3, [X31+304]
	7343 Move V4, [X31+312]
	7344 Move X2, [X31+464]
	7345 Move X0, X19
	7346 Move V5, V2
	7347 Move X3, X21
	7348 Move X4, X31
	7349 Call TextGenerator.DrawTextHighlight, X0, X1, X2, X3, X4, X5
	7350 Move W22, W31
	7351 Move W20, 96
	7352 Move X8, [X31+456]
	7353 Move W9, [X31+376]
	7354 Add X27, X27, 392
	7355 Move W26, W23
	7356 Move W8, [X8]
	7357 Add W9, W9, 1
	7358 Move [X31+376], W9
	7359 Add W9, W24, 1
	7360 NotImplemented "Instruction CMP not yet implemented."
	7361 Move W20, W31
	7362 Move W22, 1
	7363 Move W8, [X19+832]
	7364 NotImplemented "Instruction CMP not yet implemented."
	7365 NotImplemented "Instruction CSET not yet implemented."
	7366 Move V3, [X31+400]
	7367 Move V4, [X31+368]
	7368 Move V6, [X31+208]
	7369 NotImplemented "Instruction FCMP not yet implemented."
	7370 Move W9, W27
	7371 ShiftRight W9, 4
	7372 And W9, W9, 15
	7373 Or W8, W8, W9
	7374 Compare W8, 0
	7375 JumpIfNotEqual {7381}
	7376 Move X8, [X31+464]
	7377 Add S0, S8, S10
	7378 Move W8, [X8+182]
	7379 NotImplemented "Instruction CMP not yet implemented."
	7380 NotImplemented "Instruction FCSEL not yet implemented."
	7381 Move W8, [X31+436]
	7382 NotImplemented "Instruction CMP not yet implemented."
	7383 NotImplemented "Instruction CMP not yet implemented."
	7384 Move X8, [X31+464]
	7385 Move W9, [X8+228]
	7386 Move W8, [X8+182]
	7387 NotImplemented "Instruction CMP not yet implemented."
	7388 Compare W8, 0
	7389 JumpIfNotEqual {7424}
	7390 Move [X31+348], S10
	7391 Move X8, [X31+472]
	7392 Move X8, [X8]
	7393 Compare X8, 0
	7394 JumpIfEqual {7654}
	7395 Move W9, [X8+24]
	7396 NotImplemented "Instruction CMP not yet implemented."
	7397 Move V0, [X31+372]
	7398 NotImplemented "Instruction NOP not yet implemented."
	7399 NotImplemented "Instruction MADD not yet implemented."
	7400 Move V3, [X8+304]
	7401 Move V7, [X8+364]
	7402 Move [X31+8], S0
	7403 Move S2, [X31+216]
	7404 Move S0, [X31+220]
	7405 Move V1, [X31+212]
	7406 Move V4, [X31+352]
	7407 Move V6, [X31+224]
	7408 Move X2, [X31+464]
	7409 Move S5, W31
	7410 Move X0, X19
	7411 Move X1, X22
	7412 Move X3, X21
	7413 Move X4, X31
	7414 Move [X31], S15
	7415 Move S15, W31
	7416 Call TextGenerator.DrawUnderlineMesh, X0, X1, X2, V0, V1, V2, V3, X3, X4, X5
	7417 Move X8, -52219904
	7418 Move V0, [X8+884]
	7419 Move X22, [X31+472]
	7420 Move X8, [X31+464]
	7421 Move W8, [X8+182]
	7422 Compare W8, 0
	7423 JumpIfEqual {7390}
	7424 Add S0, S8, S10
	7425 Move [X31+348], S0
	7426 Move X8, 0x43E000
	7427 Move X8, [X8+368]
	7428 Move X0, [X8]
	7429 Move W8, [X0+224]
	7430 Compare W8, 0
	7431 JumpIfNotEqual {7433}
	7432 Call 0x1C17DFC
	7433 Move W0, [X31+452]
	7434 Move X1, X31
	7435 Call Char.IsSeparator, X0
	7436 Move V3, [X31+400]
	7437 Move V4, [X31+368]
	7438 Move V6, [X31+208]
	7439 NotImplemented "Instruction MOVI not yet implemented."
	7440 Move [X31+144], W0
	7441 Move W10, [X31+144]
	7442 Subtract W9, W22, W21
	7443 NotImplemented "Instruction FNEG not yet implemented."
	7444 NotImplemented "Instruction CMP not yet implemented."
	7445 And W10, W10, 1
	7446 Subtract W9, W9, W10
	7447 NotImplemented "Instruction FCSEL not yet implemented."
	7448 NotImplemented "Instruction CMP not yet implemented."
	7449 Move X10, [X31+464]
	7450 Move V10, [X10+124]
	7451 Move S10, 1
	7452 Move W10, [X31+452]
	7453 NotImplemented "Instruction CMP not yet implemented."
	7454 NotImplemented "Instruction CSINC not yet implemented."
	7455 Add S8, S8, S0
	7456 NotImplemented "Instruction CMP not yet implemented."
	7457 Move W9, [X31+144]
	7458 NotImplemented "Instruction CMP not yet implemented."
	7459 NotImplemented "Instruction ORN not yet implemented."
	7460 And W9, W9, 1
	7461 Subtract W9, W21, W9
	7462 Add W20, W9, W20
	7463 Move X8, 0x43E000
	7464 Move X8, [X8+368]
	7465 Move X0, [X8]
	7466 Move W8, [X0+224]
	7467 Compare W8, 0
	7468 JumpIfNotEqual {7470}
	7469 Call 0x1C17DFC
	7470 Move W0, [X31+452]
	7471 Move X1, X31
	7472 Call Char.IsSeparator, X0
	7473 Move X8, [X31+464]
	7474 Move W8, [X8+182]
	7475 Move TEMP, X0
	7476 And TEMP, TEMP, 1
	7477 Compare TEMP, 1
	7478 JumpIfNotEqual {7490}
	7479 Move V3, [X31+400]
	7480 Move V4, [X31+368]
	7481 Move V6, [X31+208]
	7482 Move S0, 1
	7483 Subtract S0, S0, S10
	7484 Compare W8, 0
	7485 JumpIfEqual {7488}
	7486 Multiply S0, S8, S0
	7487 NotImplemented "Instruction SCVTF not yet implemented."
	7488 NotImplemented "Instruction SCVTF not yet implemented."
	7489 Multiply S0, S8, S0
	7490 Move V3, [X31+400]
	7491 Move V4, [X31+368]
	7492 Move V6, [X31+208]
	7493 Multiply S0, S8, S10
	7494 NotImplemented "Instruction SCVTF not yet implemented."
	7495 Compare W8, 0
	7496 JumpIfEqual {7501}
	7497 NotImplemented "Instruction FDIV not yet implemented."
	7498 Move V1, [X31+348]
	7499 Subtract S1, S1, S0
	7500 Move [X31+348], S1
	7501 NotImplemented "Instruction FDIV not yet implemented."
	7502 Move V1, [X31+348]
	7503 Add S1, S1, S0
	7504 Move V0, [X31+328]
	7505 Move [X31+348], S1
	7506 NotImplemented "Instruction MOVI not yet implemented."
	7507 Add V0, V0, V1
	7508 Move X24, 0x4AA000
	7509 Move X26, [X31+160]
	7510 Move X25, [X31+464]
	7511 Move X24, [X24+1736]
	7512 Move W10, [X31+320]
	7513 Add W9, W23, 1
	7514 Move W9, W31
	7515 Move W10, W31
	7516 Move [X21+16], W8
	7517 NotImplemented "Instruction CMP not yet implemented."
	7518 Move W8, [X19+5568]
	7519 NotImplemented "Instruction CCMP not yet implemented."
	7520 Move [X21+36], W9
	7521 NotImplemented "Instruction CSINC not yet implemented."
	7522 Move [X21+28], W9
	7523 Move [X21+20], W8
	7524 Move W8, [X19+848]
	7525 Move W9, [X21+44]
	7526 Add W8, W8, 1
	7527 NotImplemented "Instruction CMP not yet implemented."
	7528 Move [X21+40], W8
	7529 Move W19, 1
	7530 Move W20, 112
	7531 Move X21, [X21+88]
	7532 Compare X21, 0
	7533 JumpIfEqual {7654}
	7534 Move X0, [X24]
	7535 Move W8, [X0+224]
	7536 Compare W8, 0
	7537 JumpIfNotEqual {7539}
	7538 Call 0x1C17DFC
	7539 Move W8, [X21+24]
	7540 NotImplemented "Instruction CMP not yet implemented."
	7541 Add X0, X21, X20
	7542 Move X1, X31
	7543 Call MeshInfo.ClearUnusedVertices, X0
	7544 Move W8, [X25+256]
	7545 Compare W8, 0
	7546 JumpIfEqual {7562}
	7547 Move X8, [X31+440]
	7548 Move X21, [X8+88]
	7549 Compare X21, 0
	7550 JumpIfEqual {7654}
	7551 Move X0, [X24]
	7552 Move W8, [X0+224]
	7553 Compare W8, 0
	7554 JumpIfNotEqual {7556}
	7555 Call 0x1C17DFC
	7556 Move W8, [X21+24]
	7557 NotImplemented "Instruction CMP not yet implemented."
	7558 Add X0, X21, X20
	7559 Move W1, 1
	7560 Move X2, X31
	7561 Call MeshInfo.SortGeometry, X0, X1
	7562 Move X21, [X31+440]
	7563 Add X19, X19, 1
	7564 Add X20, X20, 80
	7565 NotImplemented "Instruction LDRSW not yet implemented."
	7566 NotImplemented "Instruction CMP not yet implemented."
	7567 Move V0, [X19+832]
	7568 Move V1, [X31+36]
	7569 NotImplemented "Instruction SCVTF not yet implemented."
	7570 Subtract S1, S1, S5
	7571 NotImplemented "Instruction FDIV not yet implemented."
	7572 Move V1, [X31+136]
	7573 NotImplemented "Instruction FDIV not yet implemented."
	7574 Add S0, S7, S0
	7575 NotImplemented "Instruction FCMP not yet implemented."
	7576 NotImplemented "Instruction FCSEL not yet implemented."
	7577 Move X26, [X31+160]
	7578 Move [X19+5552], S0
	7579 Move V0, [X19+5532]
	7580 Move X8, -52219904
	7581 Move V2, [X8+512]
	7582 Move S3, 0.5
	7583 Subtract S0, S5, S0
	7584 Multiply S0, S0, S3
	7585 NotImplemented "Instruction FMAXNM not yet implemented."
	7586 Move S2, 20
	7587 Subtract S0, S5, S0
	7588 Multiply S0, S0, S2
	7589 Move X8, -52219904
	7590 Add S0, S0, S3
	7591 Move V4, [X8+1056]
	7592 NotImplemented "Instruction FCVTZS not yet implemented."
	7593 NotImplemented "Instruction SCVTF not yet implemented."
	7594 Move W8, 0x7F800000
	7595 NotImplemented "Instruction FDIV not yet implemented."
	7596 Move S3, W8
	7597 NotImplemented "Instruction FCMP not yet implemented."
	7598 NotImplemented "Instruction FCSEL not yet implemented."
	7599 NotImplemented "Instruction FCMP not yet implemented."
	7600 NotImplemented "Instruction FCSEL not yet implemented."
	7601 Move [X19+5528], S5
	7602 Move V2, [X19+5532]
	7603 Move X8, -52219904
	7604 Move V3, [X8+512]
	7605 Move S4, 0.5
	7606 Subtract S2, S1, S2
	7607 Multiply S2, S2, S4
	7608 NotImplemented "Instruction FMAXNM not yet implemented."
	7609 Move [X19+5528], S1
	7610 Move S3, 20
	7611 Subtract S1, S1, S2
	7612 Multiply S1, S1, S3
	7613 Move X8, -52219904
	7614 Add S1, S1, S4
	7615 Move V2, [X8+1056]
	7616 NotImplemented "Instruction FCVTZS not yet implemented."
	7617 NotImplemented "Instruction SCVTF not yet implemented."
	7618 Move W8, 0x7F800000
	7619 NotImplemented "Instruction FDIV not yet implemented."
	7620 Move S4, W8
	7621 NotImplemented "Instruction FCMP not yet implemented."
	7622 NotImplemented "Instruction FCSEL not yet implemented."
	7623 NotImplemented "Instruction FCMP not yet implemented."
	7624 NotImplemented "Instruction FCSEL not yet implemented."
	7625 Move X26, [X31+160]
	7626 Move X8, -52219904
	7627 Move V3, [X8+752]
	7628 Move V4, [X31+364]
	7629 NotImplemented "Instruction FDIV not yet implemented."
	7630 NotImplemented "Instruction FCMP not yet implemented."
	7631 NotImplemented "Instruction FCSEL not yet implemented."
	7632 Add S3, S4, S3
	7633 Multiply S3, S13, S3
	7634 Subtract S3, S11, S3
	7635 NotImplemented "Instruction FDIV not yet implemented."
	7636 Add S1, S2, S1
	7637 Move X26, [X31+160]
	7638 NotImplemented "Instruction FCMP not yet implemented."
	7639 NotImplemented "Instruction FCSEL not yet implemented."
	7640 Move [X19+5524], S0
	7641 NotImplemented "Instruction FCMP not yet implemented."
	7642 Move V2, V11
	7643 Move S2, 1
	7644 Subtract S2, S2, S1
	7645 NotImplemented "Instruction FDIV not yet implemented."
	7646 Move X8, -52219904
	7647 Move V3, [X8+752]
	7648 Move V4, [X31+364]
	7649 Add S3, S4, S3
	7650 Multiply S3, S13, S3
	7651 Subtract S3, S11, S3
	7652 NotImplemented "Instruction FDIV not yet implemented."
	7653 Add S1, S1, S2
	7654 Call 0x1C17F20
	7655 Call 0x1C17F28
	7656 Move W8, [X19+832]
	7657 Move V2, [X31+36]
	7658 Add W8, W8, 1
	7659 Subtract S2, S2, S10
	7660 NotImplemented "Instruction SCVTF not yet implemented."
	7661 NotImplemented "Instruction FDIV not yet implemented."
	7662 Move V3, [X31+136]
	7663 NotImplemented "Instruction FDIV not yet implemented."
	7664 Add S1, S1, S2
	7665 NotImplemented "Instruction FCMP not yet implemented."
	7666 NotImplemented "Instruction FCSEL not yet implemented."
	7667 Move X0, X22
	7668 Call 0x1C181E0
	7669 Call 0x3EB2B20

Method: System.Void SaveWordWrappingState(ref UnityEngine.TextCore.Text.WordWrapState state, System.Int32 index, System.Int32 count, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CBBA64 FCSEL S1, S1, S2, EQ
	0x03CBBA68 FMUL S0, S0, S1
	0x03CBBA6C STR S0, [X8 + 0x180]
	0x03CBBA70 B 0x3CBB978
	0x03CBBA74 MOVZ W11, 0xED1F
	0x03CBBA78 MOVK W11, 0xCDAC0000
	0x03CBBA7C CMP W9, W11
	0x03CBBA80 B.LE 0x3CBBB94
	0x03CBBA84 MOVZ W11, 0x5CE8
	0x03CBBA88 MOVK W11, 0xEFBB0000
	0x03CBBA8C CMP W9, W11
	0x03CBBA90 B.LE 0x3CBBD00
	0x03CBBA94 CMP W9, 0x53
	0x03CBBA98 B.LE 0x3CBBF30
	0x03CBBA9C CMP W9, 0x64D
	0x03CBBAA0 B.LE 0x3CBC45C
	0x03CBBAA4 CMP W9, 0x64E
	0x03CBBAA8 B.EQ 0x3CBD1DC
	0x03CBBAAC CMP W9, 0x65A
	0x03CBBAB0 B.EQ 0x3CBD24C
	0x03CBBAB4 CMP W9, 0x65C
	0x03CBBAB8 B.NE 0x3CBB838
	0x03CBBABC LDR X8, [X31 + 0x30]
	0x03CBBAC0 LDRB W8, [X8 + 0x60]
	0x03CBBAC4 TBNZ X8, 0x6, 0x3CBBAF4
	0x03CBBAC8 LDR X8, [X31 + 0x48]
	0x03CBBACC MOVZ W1, 0x40
	0x03CBBAD0 MOV X2, X31
	0x03CBBAD4 ADD X0, X8, 0x128
	0x03CBBAD8 BL 0x3CCB674
	0x03CBBADC ANDS W31, W0, 0xFF
	0x03CBBAE0 B.NE 0x3CBBAF4
	0x03CBBAE4 LDR X9, [X31 + 0x48]
	0x03CBBAE8 LDR W8, [X9 + 0x124]
	0x03CBBAEC AND W8, W8, 0xFFFFFFBF
	0x03CBBAF0 STR W8, [X9 + 0x124]
	0x03CBBAF4 ADRP X8, 0x4A6000
	0x03CBBAF8 LDR X8, [X8 + 0xD70]
	0x03CBBAFC LDR X19, [X31 + 0x48]
	0x03CBBB00 LDR X1, [X8]
	0x03CBBB04 ADD X0, X19, 0x1F8
	0x03CBBB08 BL 0x26E1014
	0x03CBBB0C STR W0, [X19 + 0x1B4]
	0x03CBBB10 B 0x3CBB978
	0x03CBBB14 MOVZ W11, 0xDB73
	0x03CBBB18 MOVK W11, 0x2A0000
	0x03CBBB1C CMP W9, W11
	0x03CBBB20 B.LE 0x3CBBDDC
	0x03CBBB24 MOVZ W10, 0x7459
	0x03CBBB28 MOVK W10, 0x590000
	0x03CBBB2C CMP W9, W10
	0x03CBBB30 B.LE 0x3CBC010
	0x03CBBB34 MOVZ W8, 0x95DA
	0x03CBBB38 MOVK W8, 0x36F0000
	0x03CBBB3C CMP W9, W8
	0x03CBBB40 B.LE 0x3CBC4D0
	0x03CBBB44 MOVZ W8, 0x38AF
	0x03CBBB48 MOVK W8, 0x3700000
	0x03CBBB4C CMP W9, W8
	0x03CBBB50 B.EQ 0x3CBD2A4
	0x03CBBB54 MOVZ W8, 0x28FC
	0x03CBBB58 MOVK W8, 0x3710000
	0x03CBBB5C CMP W9, W8
	0x03CBBB60 B.EQ 0x3CBD314
	0x03CBBB64 MOVZ W8, 0x920A
	0x03CBBB68 MOVK W8, 0x37B0000
	0x03CBBB6C CMP W9, W8
	0x03CBBB70 B.NE 0x3CBB838
	0x03CBBB74 ADRP X8, 0x4A6000
	0x03CBBB78 LDR X8, [X8 + 0xD50]
	0x03CBBB7C LDR X19, [X31 + 0x48]
	0x03CBBB80 LDR X1, [X8]
	0x03CBBB84 ADD X0, X19, 0xF8
	0x03CBBB88 BL 0x26E3284
	0x03CBBB8C STR S0, [X19 + 0xF4]
	0x03CBBB90 B 0x3CBB978
	0x03CBBB94 MOVZ W11, 0x47D3
	0x03CBBB98 MOVK W11, 0xA6C70000
	0x03CBBB9C CMP W9, W11
	0x03CBBBA0 B.LE 0x3CBBE78
	0x03CBBBA4 MOVZ W11, 0x7EF1
	0x03CBBBA8 MOVK W11, 0xB93C0000
	0x03CBBBAC CMP W9, W11
	0x03CBBBB0 B.LE 0x3CBC0D4
	0x03CBBBB4 MOVZ W10, 0x1799
	0x03CBBBB8 MOVK W10, 0xC4650000
	0x03CBBBBC CMP W9, W10
	0x03CBBBC0 B.LE 0x3CBC574
	0x03CBBBC4 MOVZ W10, 0x7DE9
	0x03CBBBC8 MOVK W10, 0xC4E60000
	0x03CBBBCC CMP W9, W10
	0x03CBBBD0 B.EQ 0x3CBCD9C
	0x03CBBBD4 MOVZ W10, 0xED1F
	0x03CBBBD8 MOVK W10, 0xCDAC0000
	0x03CBBBDC CMP W9, W10
	0x03CBBBE0 B.NE 0x3CBB838
	0x03CBBBE4 ADRP X9, 0x4A6000
	0x03CBBBE8 LDR X9, [X9 + 0xB48]
	0x03CBBBEC LDP W22, W21, [X8 + 0x2C]
	0x03CBBBF0 MOV W19, W15
	0x03CBBBF4 LDR X0, [X9]
	0x03CBBBF8 LDR W9, [X0 + 0xE0]
	0x03CBBBFC CBNZ W9, 0x3CBBC04
	0x03CBBC00 BL 0x1C16DFC
	0x03CBBC04 MOV X0, X25
	0x03CBBC08 MOV W1, W22
	0x03CBBC0C MOV W2, W21
	0x03CBBC10 MOV X3, X31
	0x03CBBC14 BL 0x3CC6208
	0x03CBBC18 MOVZ W8, 0xC7000000
	0x03CBBC1C FMOV S1, W8
	0x03CBBC20 FCMP S0, S1
	0x03CBBC24 B.EQ 0x3CBB838
	0x03CBBC28 CBZ W19, 0x3CBEC50
	0x03CBBC2C CMP W19, 0x1
	0x03CBBC30 B.EQ 0x3CBEC7C
	0x03CBBC34 CMP W19, 0x2
	0x03CBBC38 B.NE 0x3CBECB0
	0x03CBBC3C LDR X9, [X31 + 0x48]
	0x03CBBC40 MOVZ W8, 0x42C80000
	0x03CBBC44 LDR V1, [X9 + 0x58]
	0x03CBBC48 FMUL S0, S0, S1
	0x03CBBC4C FMOV S1, W8
	0x03CBBC50 FDIV S0, S0, S1
	0x03CBBC54 B 0x3CBECA8
	0x03CBBC58 MOVZ W10, 0x9790
	0x03CBBC5C MOVK W10, 0x5980000
	0x03CBBC60 CMP W9, W10
	0x03CBBC64 B.LE 0x3CBC1DC
	0x03CBBC68 MOVZ W10, 0x5278
	0x03CBBC6C MOVK W10, 0x5FE0000
	0x03CBBC70 CMP W9, W10
	0x03CBBC74 B.LE 0x3CBC608
	0x03CBBC78 MOVZ W10, 0x48E6
	0x03CBBC7C MOVK W10, 0x64E0000
	0x03CBBC80 CMP W9, W10
	0x03CBBC84 B.NE 0x3CBB838
	0x03CBBC88 ADRP X9, 0x4A6000
	0x03CBBC8C LDR X9, [X9 + 0xB48]
	0x03CBBC90 LDP W22, W21, [X8 + 0x2C]
	0x03CBBC94 MOV W19, W15
	0x03CBBC98 LDR X0, [X9]
	0x03CBBC9C LDR W9, [X0 + 0xE0]
	0x03CBBCA0 CBNZ W9, 0x3CBBCA8
	0x03CBBCA4 BL 0x1C16DFC
	0x03CBBCA8 MOV X0, X25
	0x03CBBCAC MOV W1, W22
	0x03CBBCB0 MOV W2, W21
	0x03CBBCB4 MOV X3, X31
	0x03CBBCB8 BL 0x3CC6208
	0x03CBBCBC MOVZ W8, 0xC7000000
	0x03CBBCC0 FMOV S1, W8
	0x03CBBCC4 FCMP S0, S1
	0x03CBBCC8 B.EQ 0x3CBB838
	0x03CBBCCC CBZ W19, 0x3CBEA7C
	0x03CBBCD0 CMP W19, 0x1
	0x03CBBCD4 B.EQ 0x3CBB838
	0x03CBBCD8 CMP W19, 0x2
	0x03CBBCDC B.NE 0x3CBB978
	0x03CBBCE0 LDR X9, [X31 + 0x48]
	0x03CBBCE4 MOVZ W8, 0x42C80000
	0x03CBBCE8 FMOV S2, W8
	0x03CBBCEC LDR V1, [X9 + 0x58]
	0x03CBBCF0 FMUL S0, S0, S1
	0x03CBBCF4 FDIV S0, S0, S2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+104]
	006 Move [X1+840], X8
	007 Move X8, [X0+224]
	008 Move [X1+848], X8
	009 Move X8, [X0+112]
	010 Move [X1+856], X8
	011 Move W8, [X0+120]
	012 Move [X1], W2
	013 Move [X1+4], W3
	014 Move [X1+864], W8
	015 Add X8, X0, 836
	016 Move V0, [X8]
	017 Move [X1+8], D0
	018 Compare X4, 0
	019 JumpIfEqual {196}
	020 Move W8, [X4+32]
	021 Move W10, 0x19B4
	022 Move X19, X1
	023 Move X20, X0
	024 Move [X1+20], W8
	025 Move W8, [X0+808]
	026 Move W2, 88
	027 Move X21, X4
	028 Move [X1+24], W8
	029 Move W8, [X0+816]
	030 Move [X1+28], W8
	031 Move W8, [X0+820]
	032 Move [X1+36], W8
	033 Move W8, [X0+292]
	034 Move [X1+92], W8
	035 Move W8, [X0+6564]
	036 Move [X1+104], W8
	037 Move V0, [X0+240]
	038 Add X8, X1, 868
	039 Move [X1+100], S0
	040 Move V0, [X0+244]
	041 Move [X1+108], S0
	042 Move V0, [X0+756]
	043 Move [X1+68], S0
	044 Move V0, [X0+880]
	045 Move [X1+44], D0
	046 Move V0, [X0+888]
	047 Move [X1+52], S0
	048 Move V0, [X0+824]
	049 Move [X1+56], D0
	050 Move V0, [X0+5548]
	051 Move [X1+64], S0
	052 Move V0, [X0+96]
	053 Move [X1+72], D0
	054 Move V0, [X0+54]
	055 Move [X8], V0
	056 Move V0, [X0+6600]
	057 Move [X1+84], S0
	058 Move W8, [X0+832]
	059 Move [X1+40], W8
	060 Move V0, [X0+736]
	061 Move [X1+116], S0
	062 Move V0, [X0+384]
	063 Move [X1+112], S0
	064 Move W8, [X0+744]
	065 Move [X1+886], W8
	066 Move W8, [X0+428]
	067 Move [X1+224], W8
	068 Move W8, [X0+432]
	069 Move [X1+228], W8
	070 Move W8, [X0+436]
	071 Move [X1+232], W8
	072 Move W8, [X0+5520]
	073 Move [X1+236], W8
	074 Move W8, [X0+72]
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Move [X1+256], W8
	077 Move [X1+15], V0
	078 Move W8, [X0+893]
	079 Move [X1+885], W8
	080 Move W8, [X0+800]
	081 Move [X1+884], W8
	082 Move W8, [X0+6576]
	083 Move X9, [X0+6568]
	084 Move [X1+896], W8
	085 Move [X1+888], X9
	086 Move V0, [X0]
	087 Add X8, X1, 900
	088 Add X10, X1, 260
	089 Move [X8], V0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X9, [X0+296]
	092 NotImplemented "Instruction STRH not yet implemented."
	093 Add X8, X0, 616
	094 Move [X10], X9
	095 Move V1, [X8]
	096 Move V0, [X8+16]
	097 Add X8, X0, 440
	098 Add X9, X0, 568
	099 Move [X1+272], V1
	100 Move [X1+280], V0
	101 Move V1, [X8]
	102 Move V0, [X8+16]
	103 Add X8, X0, 472
	104 Move [X1+304], V1
	105 Move [X1+312], V0
	106 Move V1, [X8]
	107 Move V0, [X8+16]
	108 Add X8, X0, 504
	109 Move [X1+336], V1
	110 Move [X1+344], V0
	111 Move V1, [X8]
	112 Move V0, [X8+16]
	113 Add X8, X0, 536
	114 Move [X1+368], V1
	115 Move [X1+376], V0
	116 Move V1, [X8]
	117 Move V0, [X8+16]
	118 Move [X1+400], V1
	119 Move [X1+408], V0
	120 Move X8, [X0+688]
	121 Move V1, [X0+656]
	122 Move V0, [X0+672]
	123 Move [X1+512], X8
	124 Move [X1+480], V1
	125 Move [X1+488], V0
	126 Move V1, [X9+16]
	127 Move V0, [X9+32]
	128 Move V2, [X9]
	129 Add X8, X0, 248
	130 Add X9, X0, 312
	131 Move [X1+448], V1
	132 Move [X1+456], V0
	133 Move [X1+27], V2
	134 Move V0, [X8+1]
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 Add X8, X1, 520
	137 Move [X8], V1
	138 Move [X8+8], V0
	139 Move V1, [X0+768]
	140 Move V0, [X0+784]
	141 Add X8, X1, 552
	142 Move [X8], V1
	143 Move [X8+8], V0
	144 Move V0, [X9]
	145 Move V1, [X9+16]
	146 Add X8, X1, 584
	147 Move W9, 0x15C8
	148 Add X9, X0, X9
	149 Move [X8], V0
	150 Move [X8+8], V1
	151 Move V1, [X9]
	152 Move V0, [X9+16]
	153 Add X8, X1, 616
	154 Add X9, X0, 392
	155 Move [X8], V1
	156 Move [X8+8], V0
	157 Move V1, [X9]
	158 Move V0, [X9+16]
	159 Add X8, X1, 648
	160 Move [X8], V1
	161 Move [X8+8], V0
	162 Move V1, [X0+704]
	163 Move V0, [X0+720]
	164 Add X8, X1, 680
	165 Add X1, X0, 128
	166 Add X0, X19, 712
	167 Move [X8], V1
	168 Move [X8+8], V0
	169 Call 0x3EB2B30
	170 Move V0, [X20+352]
	171 Move V1, [X20+368]
	172 Move [X19+800], V0
	173 Move [X19+808], V1
	174 Move W8, [X20+6596]
	175 Move [X19+832], W8
	176 Move W8, [X20+6560]
	177 Move [X19+836], W8
	178 Move X8, [X21+72]
	179 Compare X8, 0
	180 JumpIfEqual {196}
	181 NotImplemented "Instruction LDRSW not yet implemented."
	182 Move W10, [X8+24]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W10, 96
	186 NotImplemented "Instruction MADD not yet implemented."
	187 Add X1, X8, 32
	188 Add X0, X19, 128
	189 Move W2, 96
	190 Call 0x3EB2B30
	191 Move X20, [X31+16]
	192 Move X19, [X31+24]
	193 Move X30, [X31+32]
	194 Move X21, [X31+40]
	195 Return 
	196 Call 0x1C17F20
	197 Call 0x1C17F28

Method: System.Int32 RestoreWordWrappingState(ref UnityEngine.TextCore.Text.WordWrapState state, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CBBCF8 STR S0, [X9 + 0x35C]
	0x03CBBCFC B 0x3CBB978
	0x03CBBD00 MOVZ W10, 0x3291
	0x03CBBD04 MOVK W10, 0xD2D20000
	0x03CBBD08 CMP W9, W10
	0x03CBBD0C B.LE 0x3CBC218
	0x03CBBD10 MOVZ W10, 0xF6F3
	0x03CBBD14 MOVK W10, 0xE5540000
	0x03CBBD18 CMP W9, W10
	0x03CBBD1C B.LE 0x3CBC684
	0x03CBBD20 MOVZ W10, 0x3CB4
	0x03CBBD24 MOVK W10, 0xE7AE0000
	0x03CBBD28 CMP W9, W10
	0x03CBBD2C B.EQ 0x3CBD348
	0x03CBBD30 MOVZ W10, 0xD276
	0x03CBBD34 MOVK W10, 0xEDCB0000
	0x03CBBD38 CMP W9, W10
	0x03CBBD3C B.EQ 0x3CBBF18
	0x03CBBD40 MOVZ W10, 0x5CE8
	0x03CBBD44 MOVK W10, 0xEFBB0000
	0x03CBBD48 CMP W9, W10
	0x03CBBD4C B.NE 0x3CBB838
	0x03CBBD50 ADRP X9, 0x4A6000
	0x03CBBD54 LDR X9, [X9 + 0xB48]
	0x03CBBD58 LDP W22, W21, [X8 + 0x2C]
	0x03CBBD5C MOV W19, W15
	0x03CBBD60 LDR X0, [X9]
	0x03CBBD64 LDR W9, [X0 + 0xE0]
	0x03CBBD68 CBNZ W9, 0x3CBBD70
	0x03CBBD6C BL 0x1C16DFC
	0x03CBBD70 MOV X0, X25
	0x03CBBD74 MOV W1, W22
	0x03CBBD78 MOV W2, W21
	0x03CBBD7C MOV X3, X31
	0x03CBBD80 BL 0x3CC6208
	0x03CBBD84 MOVZ W8, 0xC7000000
	0x03CBBD88 FMOV S1, W8
	0x03CBBD8C FCMP S0, S1
	0x03CBBD90 B.EQ 0x3CBB838
	0x03CBBD94 CBZ W19, 0x3CBF188
	0x03CBBD98 CMP W19, 0x1
	0x03CBBD9C B.EQ 0x3CBF1AC
	0x03CBBDA0 CMP W19, 0x2
	0x03CBBDA4 B.NE 0x3CBF1DC
	0x03CBBDA8 LDR X8, [X31 + 0x48]
	0x03CBBDAC FMOV S2, -1
	0x03CBBDB0 FMOV S4, W31
	0x03CBBDB4 LDR V1, [X8 + 0x35C]
	0x03CBBDB8 LDR V3, [X8 + 0x58]
	0x03CBBDBC MOVZ W8, 0x42C80000
	0x03CBBDC0 FCMP S1, S2
	0x03CBBDC4 FCSEL S1, S4, S1, EQ
	0x03CBBDC8 FSUB S1, S3, S1
	0x03CBBDCC FMUL S0, S0, S1
	0x03CBBDD0 FMOV S1, W8
	0x03CBBDD4 FDIV S0, S0, S1
	0x03CBBDD8 B 0x3CBF1E4
	0x03CBBDDC MOVZ W11, 0x2F9
	0x03CBBDE0 MOVK W11, 0x1B0000
	0x03CBBDE4 CMP W9, W11
	0x03CBBDE8 B.LE 0x3CBC290
	0x03CBBDEC MOVZ W11, 0x7753
	0x03CBBDF0 MOVK W11, 0x270000
	0x03CBBDF4 CMP W9, W11
	0x03CBBDF8 B.LE 0x3CBC730
	0x03CBBDFC MOVZ W8, 0x8780
	0x03CBBE00 MOVK W8, 0x280000
	0x03CBBE04 MOV X28, X27
	0x03CBBE08 CMP W9, W8
	0x03CBBE0C B.EQ 0x3CBD358
	0x03CBBE10 MOVZ W8, 0x2F75
	0x03CBBE14 MOVK W8, 0x290000
	0x03CBBE18 CMP W9, W8
	0x03CBBE1C B.EQ 0x3CBD438
	0x03CBBE20 MOVZ W8, 0xDB73
	0x03CBBE24 MOVK W8, 0x2A0000
	0x03CBBE28 CMP W9, W8
	0x03CBBE2C B.NE 0x3CBB838
	0x03CBBE30 LDR X8, [X31 + 0x30]
	0x03CBBE34 MOVZ W0, 0x1
	0x03CBBE38 LDR W8, [X8 + 0x74]
	0x03CBBE3C CMP W8, 0x5
	0x03CBBE40 B.NE 0x3CBB83C
	0x03CBBE44 LDR X9, [X31 + 0x48]
	0x03CBBE48 FMOV S2, W31
	0x03CBBE4C LDR V0, [X9 + 0x2F8]
	0x03CBBE50 LDR V1, [X9 + 0x2FC]
	0x03CBBE54 LDR W8, [X9 + 0x350]
	0x03CBBE58 STR W31, [X9 + 0x2E0]
	0x03CBBE5C FADD S0, S0, S2
	0x03CBBE60 FADD S0, S0, S1
	0x03CBBE64 ADD W8, W8, 0x1
	0x03CBBE68 STR W8, [X9 + 0x350]
	0x03CBBE6C STR S0, [X9 + 0x2F4]
	0x03CBBE70 STRB W0, [X9 + 0x37C]
	0x03CBBE74 B 0x3CBB83C
	0x03CBBE78 MOVZ W10, 0x6CF1
	0x03CBBE7C MOVK W10, 0x9DAC0000
	0x03CBBE80 CMP W9, W10
	0x03CBBE84 B.LE 0x3CBC3C0
	0x03CBBE88 MOVZ W10, 0x3FC7
	0x03CBBE8C MOVK W10, 0xA1900000
	0x03CBBE90 CMP W9, W10
	0x03CBBE94 B.LE 0x3CBC7C4
	0x03CBBE98 MOVZ W10, 0x50BC
	0x03CBBE9C MOVK W10, 0xA5C00000
	0x03CBBEA0 CMP W9, W10
	0x03CBBEA4 B.EQ 0x3CBD774
	0x03CBBEA8 MOVZ W8, 0x8917
	0x03CBBEAC MOVK W8, 0xA62E0000
	0x03CBBEB0 CMP W9, W8
	0x03CBBEB4 B.EQ 0x3CBD7E8
	0x03CBBEB8 MOVZ W8, 0x47D3
	0x03CBBEBC MOVK W8, 0xA6C70000
	0x03CBBEC0 CMP W9, W8
	0x03CBBEC4 B.NE 0x3CBB838
	0x03CBBEC8 ADRP X8, 0x4A6000
	0x03CBBECC LDR X8, [X8 + 0xD50]
	0x03CBBED0 LDR X19, [X31 + 0x48]
	0x03CBBED4 LDR X1, [X8]
	0x03CBBED8 ADD X0, X19, 0x300
	0x03CBBEDC BL 0x26E3284
	0x03CBBEE0 STR S0, [X19 + 0x2FC]
	0x03CBBEE4 B 0x3CBB978
	0x03CBBEE8 MOVZ W8, 0x90D1
	0x03CBBEEC MOVK W8, 0xBEA0000
	0x03CBBEF0 CMP W9, W8
	0x03CBBEF4 B.LE 0x3CBC868
	0x03CBBEF8 MOVZ W8, 0xAAD3
	0x03CBBEFC MOVK W8, 0xBF20000
	0x03CBBF00 CMP W9, W8
	0x03CBBF04 B.EQ 0x3CBCDF8
	0x03CBBF08 MOVZ W8, 0x98A0
	0x03CBBF0C MOVK W8, 0xD020000
	0x03CBBF10 CMP W9, W8
	0x03CBBF14 B.NE 0x3CBB838
	0x03CBBF18 LDR X9, [X31 + 0x48]
	0x03CBBF1C MOVZ W1, 0x10
	0x03CBBF20 LDR W8, [X9 + 0x124]
	0x03CBBF24 ADD X0, X9, 0x128
	0x03CBBF28 ORR W8, W8, 0x10
	0x03CBBF2C B 0x3CBDBC0
	0x03CBBF30 CMP W9, 0x41
	0x03CBBF34 B.LE 0x3CBC8A4
	0x03CBBF38 CMP W9, 0x42
	0x03CBBF3C B.EQ 0x3CBD800
	0x03CBBF40 CMP W9, 0x49
	0x03CBBF44 B.EQ 0x3CBD830
	0x03CBBF48 CMP W9, 0x53
	0x03CBBF4C B.NE 0x3CBB838
	0x03CBBF50 LDR X19, [X31 + 0x48]
	0x03CBBF54 MOVZ W1, 0x40
	0x03CBBF58 MOV X2, X31
	0x03CBBF5C LDR W8, [X19 + 0x124]
	0x03CBBF60 ADD X0, X19, 0x128
	0x03CBBF64 ORR W8, W8, 0x40
	0x03CBBF68 STR W8, [X19 + 0x124]
	0x03CBBF6C BL 0x3CCB578
	0x03CBBF70 LDR X8, [X19 + 0x19D0]
	0x03CBBF74 CBZ X8, 0x3CBE9A4
	0x03CBBF78 LDR W9, [X8 + 0x18]
	0x03CBBF7C CMP W9, 0x1
	0x03CBBF80 B.LS 0x3CBF514
	0x03CBBF84 LDR W9, [X8 + 0x38]
	0x03CBBF88 MOVZ W10, 0x381D
	0x03CBBF8C MOVK W10, 0x4E30000
	0x03CBBF90 CMP W9, W10
	0x03CBBF94 B.NE 0x3CBE3FC
	0x03CBBF98 ADRP X9, 0x4A6000
	0x03CBBF9C LDR X9, [X9 + 0xB48]
	0x03CBBFA0 LDP W22, W20, [X8 + 0x44]
	0x03CBBFA4 LDR X0, [X9]
	0x03CBBFA8 LDR X9, [X31 + 0x58]
	0x03CBBFAC LDR X23, [X9]
	0x03CBBFB0 LDR W9, [X0 + 0xE0]
	0x03CBBFB4 CBNZ W9, 0x3CBBFBC

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X8, [X1+840]
	009 Move W19, [X1]
	010 Move [X0+104], X8
	011 Move X8, [X1+848]
	012 Move [X0+224], X8
	013 Move X8, [X1+856]
	014 Move [X0+112], X8
	015 Move W8, [X1+864]
	016 Move [X0+120], W8
	017 Move W8, [X1+4]
	018 Add W8, W8, 1
	019 Move [X0+804], W8
	020 Move V0, [X1+8]
	021 Add X8, X0, 836
	022 Move [X8], D0
	023 Compare X2, 0
	024 JumpIfEqual {208}
	025 Move W8, [X1+20]
	026 Move X21, X2
	027 Move X20, X1
	028 Move X22, X0
	029 Move [X2+32], W8
	030 Move W8, [X1+24]
	031 Move W2, 88
	032 Move [X0+808], W8
	033 Move W8, [X1+28]
	034 Move [X0+816], W8
	035 Move W8, [X1+36]
	036 Move [X0+820], W8
	037 Move W8, [X1+92]
	038 Move [X0+292], W8
	039 Move W8, [X1+104]
	040 Move [X0+6564], W8
	041 Move V0, [X1+100]
	042 Add X8, X1, 868
	043 Move [X0+240], S0
	044 Move V0, [X1+108]
	045 Move [X0+244], S0
	046 Move V0, [X1+68]
	047 Move [X0+756], S0
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move [X0+880], D0
	050 Move V0, [X1+52]
	051 Move [X0+888], S0
	052 Move V0, [X1+56]
	053 Move [X0+824], D0
	054 Move V0, [X1+64]
	055 Move [X0+5548], S0
	056 Move V0, [X1+72]
	057 Move [X0+96], D0
	058 Move V0, [X8]
	059 Move [X0+54], V0
	060 Move V0, [X1+84]
	061 Move [X0+6600], S0
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Move [X0+832], W23
	064 Move V0, [X1+116]
	065 Move [X0+736], S0
	066 Move V0, [X1+112]
	067 Move [X0+384], S0
	068 Move W8, [X1+886]
	069 Move [X0+744], W8
	070 Move W8, [X1+224]
	071 Move [X0+428], W8
	072 Move W8, [X1+228]
	073 Move [X0+432], W8
	074 Move W8, [X1+232]
	075 Move [X0+436], W8
	076 Move W8, [X1+236]
	077 Move [X0+5520], W8
	078 Move W8, [X1+256]
	079 Move V0, [X1+15]
	080 Move [X0+72], W8
	081 Move [X0+56], V0
	082 Move W8, [X1+885]
	083 Move [X0+893], W8
	084 Move W8, [X1+884]
	085 Move [X0+800], W8
	086 Move W8, [X1+896]
	087 Move X9, [X1+888]
	088 Move [X0+6576], W8
	089 Add X8, X1, 900
	090 Move [X0+6568], X9
	091 Move V0, [X8]
	092 Move W8, 0x19B4
	093 Add X9, X1, 260
	094 Move [X0], V0
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move X9, [X9]
	097 NotImplemented "Instruction STRH not yet implemented."
	098 Move [X0+296], X9
	099 Move V1, [X1+272]
	100 Move V0, [X1+288]
	101 Add X8, X0, 616
	102 Add X9, X1, 520
	103 Move [X8], V1
	104 Move [X8+8], V0
	105 Move V1, [X1+304]
	106 Move V0, [X1+320]
	107 Add X8, X0, 440
	108 Move [X8], V1
	109 Move [X8+8], V0
	110 Move V1, [X1+336]
	111 Move V0, [X1+352]
	112 Add X8, X0, 472
	113 Move [X8], V1
	114 Move [X8+8], V0
	115 Move V1, [X1+368]
	116 Move V0, [X1+384]
	117 Add X8, X0, 504
	118 Move [X8], V1
	119 Move [X8+8], V0
	120 Move V1, [X1+400]
	121 Move V0, [X1+416]
	122 Add X8, X0, 536
	123 Move [X8], V1
	124 Move [X8+8], V0
	125 Move X8, [X1+512]
	126 Move V1, [X1+480]
	127 Move V0, [X1+496]
	128 Move [X0+688], X8
	129 Move [X0+656], V1
	130 Move [X0+664], V0
	131 Move V2, [X1+448]
	132 Move V0, [X1+464]
	133 Move V1, [X1+27]
	134 Add X8, X0, 568
	135 Move [X8+16], V2
	136 Move [X8+24], V0
	137 Move [X8], V1
	138 Move V1, [X9]
	139 Move V0, [X9+16]
	140 Add X8, X0, 248
	141 Add X9, X1, 552
	142 Move [X8+1], V0
	143 Move [X0+248], V1
	144 Move V1, [X9]
	145 Move V0, [X9+16]
	146 Add X8, X1, 584
	147 Add X9, X1, 616
	148 Move [X0+768], V1
	149 Move [X0+776], V0
	150 Move V1, [X8]
	151 Move V0, [X8+16]
	152 Add X8, X0, 312
	153 Move [X8], V1
	154 Move [X8+8], V0
	155 Move V0, [X9]
	156 Move V1, [X9+16]
	157 Move W8, 0x15C8
	158 Add X8, X0, X8
	159 Add X9, X1, 648
	160 Move [X8], V0
	161 Move [X8+8], V1
	162 Move V1, [X9]
	163 Move V0, [X9+16]
	164 Add X8, X0, 392
	165 Add X9, X1, 680
	166 Add X1, X1, 712
	167 Move [X8], V1
	168 Move [X8+8], V0
	169 Move V1, [X9]
	170 Move V0, [X9+16]
	171 Move [X0+704], V1
	172 Move [X0+712], V0
	173 Add X0, X0, 128
	174 Call 0x3EB2B30
	175 Move V0, [X20+800]
	176 Move V1, [X20+816]
	177 Move [X22+352], V0
	178 Move [X22+360], V1
	179 Move W8, [X20+832]
	180 Move [X22+6596], W8
	181 Move W8, [X20+836]
	182 Move [X22+6560], W8
	183 Move X21, [X21+72]
	184 Compare X21, 0
	185 JumpIfEqual {208}
	186 Move W22, [X21+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Add X1, X20, 128
	189 Add X0, X31, 0
	190 Move W2, 96
	191 Call 0x3EB2AC0
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move W8, 96
	194 NotImplemented "Instruction MADD not yet implemented."
	195 Add X0, X8, 32
	196 Add X1, X31, 0
	197 Move W2, 96
	198 Call 0x3EB2AC0
	199 Move W0, W19
	200 Move X20, [X31+128]
	201 Move X19, [X31+136]
	202 Move X22, [X31+112]
	203 Move X21, [X31+120]
	204 Move X30, [X31+96]
	205 Move X23, [X31+104]
	206 Add X31, X31, 144
	207 Return X0
	208 Call 0x1C17F20
	209 Call 0x1C17F28

Method: System.Boolean ValidateHtmlTag(UnityEngine.TextCore.Text.TextProcessingElement[] chars, System.Int32 startIndex, out System.Int32 endIndex, UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CBBFB8 BL 0x1C16DFC
	0x03CBBFBC MOV X0, X23
	0x03CBBFC0 MOV W1, W22
	0x03CBBFC4 MOV W2, W20
	0x03CBBFC8 MOV X3, X31
	0x03CBBFCC BL 0x3CC5F7C
	0x03CBBFD0 LDR X10, [X31 + 0x48]
	0x03CBBFD4 LDRB W8, [X10 + 0x1AF]
	0x03CBBFD8 ADD X9, X10, 0x1B4
	0x03CBBFDC STR W0, [X10 + 0x1B4]
	0x03CBBFE0 UBFM X10, X0, 0x18, 0x3F
	0x03CBBFE4 CMP W8, W10, UXTB
	0x03CBBFE8 CSEL W8, W8, W10, CC
	0x03CBBFEC STRB W8, [X9 + 0x3]
	0x03CBBFF0 LDR X8, [X31 + 0x20]
	0x03CBBFF4 CBZ X8, 0x3CBE9A4
	0x03CBBFF8 LDR X9, [X31 + 0x20]
	0x03CBBFFC MOVZ W8, 0x1
	0x03CBC000 STRB W8, [X9 + 0x61]
	0x03CBC004 LDR X8, [X31 + 0x48]
	0x03CBC008 LDR W8, [X8 + 0x1B4]
	0x03CBC00C B 0x3CBE408
	0x03CBC010 MOVZ W10, 0xB625
	0x03CBC014 MOVK W10, 0x2E0000
	0x03CBC018 CMP W9, W10
	0x03CBC01C B.GT 0x3CBB838
	0x03CBC020 MOVZ W10, 0x96D1
	0x03CBC024 MOVK W10, 0x2B0000
	0x03CBC028 CMP W9, W10
	0x03CBC02C B.EQ 0x3CBCE0C
	0x03CBC030 MOVZ W10, 0xB625
	0x03CBC034 MOVK W10, 0x2E0000
	0x03CBC038 CMP W9, W10
	0x03CBC03C B.NE 0x3CBB838
	0x03CBC040 ADRP X9, 0x4A5000
	0x03CBC044 LDR X9, [X9 + 0xB48]
	0x03CBC048 LDP W21, W20, [X8 + 0x2C]
	0x03CBC04C MOV W19, W15
	0x03CBC050 LDR X0, [X9]
	0x03CBC054 LDR W9, [X0 + 0xE0]
	0x03CBC058 CBNZ W9, 0x3CBC060
	0x03CBC05C BL 0x1C16DFC
	0x03CBC060 MOV X0, X25
	0x03CBC064 MOV W1, W21
	0x03CBC068 MOV W2, W20
	0x03CBC06C MOV X3, X31
	0x03CBC070 BL 0x3CC6208
	0x03CBC074 MOVZ W8, 0xC7000000
	0x03CBC078 FMOV S1, W8
	0x03CBC07C FCMP S0, S1
	0x03CBC080 B.EQ 0x3CBB838
	0x03CBC084 CMP W19, 0x2
	0x03CBC088 B.EQ 0x3CBECCC
	0x03CBC08C CMP W19, 0x1
	0x03CBC090 B.EQ 0x3CBECE8
	0x03CBC094 CBNZ W19, 0x3CBB838
	0x03CBC098 LDR X8, [X31 + 0x58]
	0x03CBC09C LDR X8, [X8]
	0x03CBC0A0 CBZ X8, 0x3CBE9A4
	0x03CBC0A4 LDR W9, [X8 + 0x18]
	0x03CBC0A8 CMP W9, 0x5
	0x03CBC0AC B.LS 0x3CBF514
	0x03CBC0B0 LDRH W8, [X8 + 0x2A]
	0x03CBC0B4 CMP W8, 0x2D
	0x03CBC0B8 B.EQ 0x3CBC0C4
	0x03CBC0BC CMP W8, 0x2B
	0x03CBC0C0 B.NE 0x3CBF518
	0x03CBC0C4 LDR X9, [X31 + 0x48]
	0x03CBC0C8 LDR V1, [X9 + 0xEC]
	0x03CBC0CC FADD S0, S0, S1
	0x03CBC0D0 B 0x3CBF51C
	0x03CBC0D4 MOVZ W11, 0xBCA8
	0x03CBC0D8 MOVK W11, 0xACE20000
	0x03CBC0DC CMP W9, W11
	0x03CBC0E0 B.LE 0x3CBC9BC
	0x03CBC0E4 MOVZ W11, 0xF89E
	0x03CBC0E8 MOVK W11, 0xAF320000
	0x03CBC0EC MOV W19, W15
	0x03CBC0F0 CMP W9, W11
	0x03CBC0F4 B.EQ 0x3CBD8E0
	0x03CBC0F8 MOVZ W10, 0xD609
	0x03CBC0FC MOVK W10, 0xB01D0000
	0x03CBC100 CMP W9, W10
	0x03CBC104 B.EQ 0x3CBDB54
	0x03CBC108 MOVZ W8, 0x7EF1
	0x03CBC10C MOVK W8, 0xB93C0000
	0x03CBC110 CMP W9, W8
	0x03CBC114 B.NE 0x3CBB838
	0x03CBC118 LDR X8, [X31 + 0x28]
	0x03CBC11C LDRB W8, [X8 + 0x1]
	0x03CBC120 CBZ W8, 0x3CBC1C0
	0x03CBC124 ADRP X8, 0x4A5000
	0x03CBC128 LDR X8, [X8 + 0xD18]
	0x03CBC12C LDR X19, [X31 + 0x48]
	0x03CBC130 LDR X1, [X8]
	0x03CBC134 ADD X0, X19, 0x2C0
	0x03CBC138 BL 0x26E1DD0
	0x03CBC13C STR W0, [X31 + 0x298]
	0x03CBC140 ADD X0, X31, 0x298
	0x03CBC144 MOV X1, X31
	0x03CBC148 BL 0x337B6E0
	0x03CBC14C LDR W8, [X19 + 0x324]
	0x03CBC150 MOV X20, X0
	0x03CBC154 ADD X0, X31, 0x298
	0x03CBC158 MOV X1, X31
	0x03CBC15C SUB W8, W8, 0x1
	0x03CBC160 STR W8, [X31 + 0x298]
	0x03CBC164 BL 0x337B6E0
	0x03CBC168 ADRP X8, 0x49D000
	0x03CBC16C LDR X8, [X8 + 0x2E8]
	0x03CBC170 ADRP X9, 0x49D000
	0x03CBC174 LDR X9, [X9 + 0x300]
	0x03CBC178 MOV X3, X0
	0x03CBC17C LDR X8, [X8]
	0x03CBC180 MOV X1, X20
	0x03CBC184 LDR X2, [X9]
	0x03CBC188 MOV X4, X31
	0x03CBC18C MOV X0, X8
	0x03CBC190 BL 0x32277C4
	0x03CBC194 ADRP X8, 0x437000
	0x03CBC198 LDR X8, [X8 + 0xA28]
	0x03CBC19C MOV X20, X0
	0x03CBC1A0 LDR X8, [X8]
	0x03CBC1A4 LDR W9, [X8 + 0xE0]
	0x03CBC1A8 CBNZ W9, 0x3CBC1B4
	0x03CBC1AC MOV X0, X8
	0x03CBC1B0 BL 0x1C16DFC
	0x03CBC1B4 MOV X0, X20
	0x03CBC1B8 MOV X1, X31
	0x03CBC1BC BL 0x3C06048
	0x03CBC1C0 ADRP X8, 0x4A5000
	0x03CBC1C4 LDR X8, [X8 + 0xD40]
	0x03CBC1C8 LDR X1, [X8]
	0x03CBC1CC LDR X8, [X31 + 0x48]
	0x03CBC1D0 ADD X0, X8, 0x2C0
	0x03CBC1D4 BL 0x26E1BC0
	0x03CBC1D8 B 0x3CBB978
	0x03CBC1DC MOVZ W10, 0xF054
	0x03CBC1E0 MOVK W10, 0x47A0000
	0x03CBC1E4 CMP W9, W10
	0x03CBC1E8 B.LE 0x3CBCA44
	0x03CBC1EC MOVZ W10, 0x381D
	0x03CBC1F0 MOVK W10, 0x4E30000
	0x03CBC1F4 CMP W9, W10
	0x03CBC1F8 B.EQ 0x3CBCE1C
	0x03CBC1FC MOVZ W8, 0x9790
	0x03CBC200 MOVK W8, 0x5980000
	0x03CBC204 CMP W9, W8
	0x03CBC208 B.NE 0x3CBB838
	0x03CBC20C LDR X8, [X31 + 0x48]
	0x03CBC210 STR W31, [X8 + 0x2F8]
	0x03CBC214 B 0x3CBB978
	0x03CBC218 MOVZ W10, 0x112F
	0x03CBC21C MOVK W10, 0xD0780000
	0x03CBC220 CMP W9, W10
	0x03CBC224 B.LE 0x3CBCAD8
	0x03CBC228 MOVZ W8, 0xD1DE
	0x03CBC22C MOVK W8, 0xD2560000
	0x03CBC230 CMP W9, W8
	0x03CBC234 B.EQ 0x3CBDBAC
	0x03CBC238 MOVZ W8, 0xABF6
	0x03CBC23C MOVK W8, 0xD26B0000
	0x03CBC240 CMP W9, W8
	0x03CBC244 B.EQ 0x3CBDBD0
	0x03CBC248 MOVZ W8, 0x3291
	0x03CBC24C MOVK W8, 0xD2D20000
	0x03CBC250 CMP W9, W8
	0x03CBC254 B.NE 0x3CBB838
	0x03CBC258 ADRP X8, 0x4A5000
	0x03CBC25C LDR X8, [X8 + 0xD78]
	0x03CBC260 LDR X19, [X31 + 0x48]
	0x03CBC264 LDR X1, [X8]
	0x03CBC268 ADD X20, X19, 0x138
	0x03CBC26C MOV X0, X20
	0x03CBC270 BL 0x26E20D4
	0x03CBC274 LDR W8, [X19 + 0x124]
	0x03CBC278 CMP W8, 0x1
	0x03CBC27C B.NE 0x3CBE354
	0x03CBC280 LDR X9, [X31 + 0x48]
	0x03CBC284 MOVZ W8, 0x2BC
	0x03CBC288 STR W8, [X9 + 0x134]
	0x03CBC28C B 0x3CBB978
	0x03CBC290 MOVZ W10, 0x65F3
	0x03CBC294 MOVK W10, 0x10000
	0x03CBC298 ADD W10, W10, 0x1F1
	0x03CBC29C CMP W9, W10
	0x03CBC2A0 B.LE 0x3CBCB30
	0x03CBC2A4 MOVZ W8, 0x67F6
	0x03CBC2A8 MOVK W8, 0x10000
	0x03CBC2AC CMP W9, W8
	0x03CBC2B0 B.EQ 0x3CBDC14
	0x03CBC2B4 MOVZ W8, 0x2EB
	0x03CBC2B8 MOVK W8, 0x1B0000
	0x03CBC2BC CMP W9, W8
	0x03CBC2C0 B.EQ 0x3CBDDC0
	0x03CBC2C4 MOVZ W8, 0x2F9
	0x03CBC2C8 MOVK W8, 0x1B0000
	0x03CBC2CC CMP W9, W8
	0x03CBC2D0 B.NE 0x3CBB838
	0x03CBC2D4 LDR X8, [X31 + 0x48]
	0x03CBC2D8 LDRB W8, [X8 + 0x124]
	0x03CBC2DC TBZ X8, 0x7, 0x3CBB978
	0x03CBC2E0 LDR X8, [X31 + 0x48]
	0x03CBC2E4 FMOV S1, 1
	0x03CBC2E8 LDR V0, [X8 + 0xF0]
	0x03CBC2EC FCMP S0, S1
	0x03CBC2F0 B.PL 0x3CBC394
	0x03CBC2F4 ADRP X8, 0x4A5000
	0x03CBC2F8 LDR X8, [X8 + 0xD28]
	0x03CBC2FC LDR X19, [X31 + 0x48]
	0x03CBC300 LDR X1, [X8]
	0x03CBC304 ADD X0, X19, 0x188
	0x03CBC308 BL 0x26E33C4
	0x03CBC30C LDR X0, [X19 + 0x68]
	0x03CBC310 STR S0, [X19 + 0x180]
	0x03CBC314 CBZ X0, 0x3CBE9A4
	0x03CBC318 LDR X8, [X31 + 0x48]
	0x03CBC31C MOV X1, X31
	0x03CBC320 LDR V8, [X8 + 0xF0]
	0x03CBC324 ADD X8, X31, 0x220
	0x03CBC328 BL 0x3C9EB14
	0x03CBC32C ADD X0, X31, 0x2A0
	0x03CBC330 ADD X1, X31, 0x220
	0x03CBC334 MOVZ W2, 0x60
	0x03CBC338 BL 0x3EB1AC0
	0x03CBC33C ADD X0, X31, 0x2A0
	0x03CBC340 MOV X1, X31
	0x03CBC344 BL 0x3C9C018
	0x03CBC348 FCMP S0, 0x0
	0x03CBC34C FMOV S0, 1
	0x03CBC350 B.LE 0x3CBC388
	0x03CBC354 LDR X8, [X31 + 0x48]
	0x03CBC358 LDR X0, [X8 + 0x68]
	0x03CBC35C CBZ X0, 0x3CBE9A4
	0x03CBC360 ADD X8, X31, 0x220
	0x03CBC364 MOV X1, X31
	0x03CBC368 BL 0x3C9EB14
	0x03CBC36C ADD X0, X31, 0x2A0
	0x03CBC370 ADD X1, X31, 0x220
	0x03CBC374 MOVZ W2, 0x60
	0x03CBC378 BL 0x3EB1AC0
	0x03CBC37C ADD X0, X31, 0x2A0
	0x03CBC380 MOV X1, X31
	0x03CBC384 BL 0x3C9C018
	0x03CBC388 LDR X8, [X31 + 0x48]
	0x03CBC38C FDIV S0, S8, S0
	0x03CBC390 STR S0, [X8 + 0xF0]
	0x03CBC394 LDR X8, [X31 + 0x48]
	0x03CBC398 MOVZ W1, 0x80
	0x03CBC39C MOV X2, X31
	0x03CBC3A0 ADD X0, X8, 0x128
	0x03CBC3A4 BL 0x3CCB674
	0x03CBC3A8 ANDS W31, W0, 0xFF
	0x03CBC3AC B.NE 0x3CBB978
	0x03CBC3B0 LDR X9, [X31 + 0x48]
	0x03CBC3B4 LDR W8, [X9 + 0x124]
	0x03CBC3B8 AND W8, W8, 0xFFFFFF7F
	0x03CBC3BC B 0x3CBE110
	0x03CBC3C0 MOVZ W10, 0x791E
	0x03CBC3C4 MOVK W10, 0x8F5A0000
	0x03CBC3C8 CMP W9, W10
	0x03CBC3CC B.LE 0x3CBCCF8
	0x03CBC3D0 MOVZ W10, 0xB2C9
	0x03CBC3D4 MOVK W10, 0x91760000
	0x03CBC3D8 CMP W9, W10
	0x03CBC3DC B.EQ 0x3CBDEAC
	0x03CBC3E0 MOVZ W10, 0x449E
	0x03CBC3E4 MOVK W10, 0x93120000
	0x03CBC3E8 CMP W9, W10
	0x03CBC3EC B.EQ 0x3CBDECC
	0x03CBC3F0 MOVZ W8, 0x6CF1
	0x03CBC3F4 MOVK W8, 0x9DAC0000
	0x03CBC3F8 CMP W9, W8
	0x03CBC3FC B.NE 0x3CBB838
	0x03CBC400 LDR X8, [X31 + 0x10]
	0x03CBC404 STR X31, [X8]
	0x03CBC408 B 0x3CBB978
	0x03CBC40C MOVZ W10, 0xCB
	0x03CBC410 MOVK W10, 0x31340000
	0x03CBC414 CMP W9, W10
	0x03CBC418 B.EQ 0x3CBDF70
	0x03CBC41C MOVZ W8, 0x6D92
	0x03CBC420 MOVK W8, 0x71C90000
	0x03CBC424 CMP W9, W8
	0x03CBC428 B.EQ 0x3CBDFE4
	0x03CBC42C MOVZ W8, 0x3FA2
	0x03CBC430 MOVK W8, 0x72340000
	0x03CBC434 CMP W9, W8
	0x03CBC438 B.NE 0x3CBB838
	0x03CBC43C ADRP X8, 0x4A5000
	0x03CBC440 LDR X8, [X8 + 0xD58]
	0x03CBC444 LDR X19, [X31 + 0x48]
	0x03CBC448 LDR X1, [X8]
	0x03CBC44C ADD X0, X19, 0x160
	0x03CBC450 BL 0x26E20D4
	0x03CBC454 STR W0, [X19 + 0x158]
	0x03CBC458 B 0x3CBB978
	0x03CBC45C CMP W9, 0x55
	0x03CBC460 B.EQ 0x3CBE004
	0x03CBC464 CMP W9, 0x646
	0x03CBC468 B.EQ 0x3CBE0C4
	0x03CBC46C CMP W9, 0x64D
	0x03CBC470 B.NE 0x3CBB838
	0x03CBC474 LDR X8, [X31 + 0x30]
	0x03CBC478 LDRB W8, [X8 + 0x60]
	0x03CBC47C TBNZ X8, 0x0, 0x3CBB978
	0x03CBC480 LDR X8, [X31 + 0x48]
	0x03CBC484 MOVZ W1, 0x1
	0x03CBC488 MOV X2, X31
	0x03CBC48C ADD X0, X8, 0x128
	0x03CBC490 BL 0x3CCB674
	0x03CBC494 MOV W8, W0
	0x03CBC498 MOVZ W0, 0x1
	0x03CBC49C ANDS W31, W8, 0xFF
	0x03CBC4A0 B.NE 0x3CBB83C
	0x03CBC4A4 LDR X19, [X31 + 0x48]
	0x03CBC4A8 LDR W8, [X19 + 0x124]
	0x03CBC4AC ADD X0, X19, 0x138
	0x03CBC4B0 AND W8, W8, 0xFFFFFFFE
	0x03CBC4B4 STR W8, [X19 + 0x124]
	0x03CBC4B8 ADRP X8, 0x4A5000
	0x03CBC4BC LDR X8, [X8 + 0xD20]
	0x03CBC4C0 LDR X1, [X8]
	0x03CBC4C4 BL 0x26E229C
	0x03CBC4C8 STR W0, [X19 + 0x134]
	0x03CBC4CC B 0x3CBB978
	0x03CBC4D0 MOVZ W8, 0x97E
	0x03CBC4D4 MOVK W8, 0x36D0000
	0x03CBC4D8 CMP W9, W8
	0x03CBC4DC B.EQ 0x3CBCE6C
	0x03CBC4E0 MOVZ W8, 0x95DA
	0x03CBC4E4 MOVK W8, 0x36F0000
	0x03CBC4E8 CMP W9, W8
	0x03CBC4EC B.NE 0x3CBB838
	0x03CBC4F0 LDR X8, [X31 + 0x30]
	0x03CBC4F4 LDRB W8, [X8 + 0x61]
	0x03CBC4F8 TBNZ X8, 0x1, 0x3CBB978
	0x03CBC4FC ADRP X8, 0x4A5000
	0x03CBC500 LDR X8, [X8 + 0xD60]
	0x03CBC504 LDR X19, [X31 + 0x48]
	0x03CBC508 LDR X1, [X8]
	0x03CBC50C ADD X20, X19, 0x238
	0x03CBC510 ADD X8, X31, 0x220
	0x03CBC514 MOV X0, X20
	0x03CBC518 BL 0x26E15DC
	0x03CBC51C ADRP X8, 0x4A5000
	0x03CBC520 LDR X8, [X8 + 0xD80]
	0x03CBC524 MOV X0, X20
	0x03CBC528 LDR X1, [X8]
	0x03CBC52C ADD X8, X31, 0x280
	0x03CBC530 BL 0x26E1370
	0x03CBC534 LDR W8, [X31 + 0x290]
	0x03CBC538 LDR V0, [X31 + 0x28]
	0x03CBC53C ADD X0, X19, 0x128
	0x03CBC540 MOVZ W1, 0x200
	0x03CBC544 MOV X2, X31
	0x03CBC548 STR W8, [X31 + 0x230]
	0x03CBC54C STR V0, [X31 + 0x22]
	0x03CBC550 STR W8, [X19 + 0x48]
	0x03CBC554 STUR V0, [X19 + 0x38]
	0x03CBC558 BL 0x3CCB674
	0x03CBC55C ANDS W31, W0, 0xFF
	0x03CBC560 B.NE 0x3CBB978
	0x03CBC564 LDR X9, [X31 + 0x48]
	0x03CBC568 LDR W8, [X9 + 0x124]
	0x03CBC56C AND W8, W8, 0xFFFFFDFF
	0x03CBC570 B 0x3CBE110
	0x03CBC574 MOVZ W10, 0x8664
	0x03CBC578 MOVK W10, 0xBE640000
	0x03CBC57C CMP W9, W10
	0x03CBC580 B.EQ 0x3CBCE78
	0x03CBC584 MOVZ W10, 0x1799
	0x03CBC588 MOVK W10, 0xC4650000
	0x03CBC58C CMP W9, W10
	0x03CBC590 B.NE 0x3CBB838
	0x03CBC594 ADRP X9, 0x4A5000
	0x03CBC598 LDR X9, [X9 + 0xB48]
	0x03CBC59C LDP W21, W20, [X8 + 0x2C]
	0x03CBC5A0 LDR X0, [X9]
	0x03CBC5A4 LDR W9, [X0 + 0xE0]
	0x03CBC5A8 CBNZ W9, 0x3CBC5B0
	0x03CBC5AC BL 0x1C16DFC
	0x03CBC5B0 MOV X0, X25
	0x03CBC5B4 MOV W1, W21
	0x03CBC5B8 MOV W2, W20
	0x03CBC5BC MOV X3, X31
	0x03CBC5C0 BL 0x3CC6208
	0x03CBC5C4 MOVZ W8, 0xC7000000
	0x03CBC5C8 FMOV S1, W8
	0x03CBC5CC FCMP S0, S1
	0x03CBC5D0 B.EQ 0x3CBB838
	0x03CBC5D4 ADRP X8, 0xFFFFFFFFFCE2E000
	0x03CBC5D8 LDR V1, [X8 + 0x104]
	0x03CBC5DC MOV X0, X31
	0x03CBC5E0 FMUL S2, S0, S1
	0x03CBC5E4 FMOV S0, W31
	0x03CBC5E8 FMOV S1, W31
	0x03CBC5EC BL 0x3C2A574
	0x03CBC5F0 LDR X8, [X31 + 0x48]
	0x03CBC5F4 STR S0, [X8 + 0x19B4]
	0x03CBC5F8 STR S1, [X8 + 0x19B8]
	0x03CBC5FC STR S2, [X8 + 0x19BC]
	0x03CBC600 STR S3, [X8 + 0x19C0]
	0x03CBC604 B 0x3CBB978
	0x03CBC608 MOVZ W10, 0x2764
	0x03CBC60C MOVK W10, 0x5F70000
	0x03CBC610 CMP W9, W10
	0x03CBC614 B.EQ 0x3CBCEA8
	0x03CBC618 MOVZ W10, 0x5278
	0x03CBC61C MOVK W10, 0x5FE0000
	0x03CBC620 CMP W9, W10
	0x03CBC624 B.NE 0x3CBB838
	0x03CBC628 ADRP X9, 0x4A5000
	0x03CBC62C LDR X9, [X9 + 0xB48]
	0x03CBC630 LDP W21, W20, [X8 + 0x2C]
	0x03CBC634 LDR X0, [X9]
	0x03CBC638 LDR W9, [X0 + 0xE0]
	0x03CBC63C CBNZ W9, 0x3CBC644
	0x03CBC640 BL 0x1C16DFC
	0x03CBC644 MOV X0, X25
	0x03CBC648 MOV W1, W21
	0x03CBC64C MOV W2, W20
	0x03CBC650 MOV X3, X31
	0x03CBC654 BL 0x3CC6208
	0x03CBC658 MOVZ W8, 0xC7000000
	0x03CBC65C FMOV S1, W8
	0x03CBC660 FCMP S0, S1
	0x03CBC664 B.EQ 0x3CBB838
	0x03CBC668 LDR X8, [X31 + 0x48]
	0x03CBC66C STR S0, [X8 + 0x19A8]
	0x03CBC670 LDR X8, [X31 + 0x28]
	0x03CBC674 FMOV V0.2S, 0x0
	0x03CBC678 ADD X8, X8, 0x434
	0x03CBC67C STR D0, [X8]
	0x03CBC680 B 0x3CBB978
	0x03CBC684 MOVZ W10, 0xC439
	0x03CBC688 MOVK W10, 0xDD490000
	0x03CBC68C CMP W9, W10
	0x03CBC690 B.EQ 0x3CBCAF8
	0x03CBC694 MOVZ W10, 0xF6F3
	0x03CBC698 MOVK W10, 0xE5540000
	0x03CBC69C CMP W9, W10
	0x03CBC6A0 B.NE 0x3CBB838
	0x03CBC6A4 ADRP X9, 0x4A5000
	0x03CBC6A8 LDR X9, [X9 + 0xB48]
	0x03CBC6AC LDP W22, W21, [X8 + 0x2C]
	0x03CBC6B0 MOV W19, W15
	0x03CBC6B4 LDR X0, [X9]
	0x03CBC6B8 LDR W9, [X0 + 0xE0]
	0x03CBC6BC CBNZ W9, 0x3CBC6C4
	0x03CBC6C0 BL 0x1C16DFC
	0x03CBC6C4 MOV X0, X25
	0x03CBC6C8 MOV W1, W22
	0x03CBC6CC MOV W2, W21
	0x03CBC6D0 MOV X3, X31
	0x03CBC6D4 BL 0x3CC6208
	0x03CBC6D8 MOVZ W8, 0xC7000000
	0x03CBC6DC FMOV S1, W8
	0x03CBC6E0 FCMP S0, S1
	0x03CBC6E4 B.EQ 0x3CBB838
	0x03CBC6E8 CBZ W19, 0x3CBECF8
	0x03CBC6EC CMP W19, 0x1
	0x03CBC6F0 B.EQ 0x3CBED1C
	0x03CBC6F4 CMP W19, 0x2
	0x03CBC6F8 B.NE 0x3CBED4C
	0x03CBC6FC LDR X8, [X31 + 0x48]
	0x03CBC700 FMOV S2, -1
	0x03CBC704 FMOV S4, W31
	0x03CBC708 LDR V1, [X8 + 0x35C]
	0x03CBC70C LDR V3, [X8 + 0x58]
	0x03CBC710 MOVZ W8, 0x42C80000
	0x03CBC714 FCMP S1, S2
	0x03CBC718 FCSEL S1, S4, S1, EQ
	0x03CBC71C FSUB S1, S3, S1
	0x03CBC720 FMUL S0, S0, S1
	0x03CBC724 FMOV S1, W8
	0x03CBC728 FDIV S0, S0, S1
	0x03CBC72C B 0x3CBED54
	0x03CBC730 MOVZ W11, 0x2023
	0x03CBC734 MOVK W11, 0x1B0000
	0x03CBC738 CMP W9, W11
	0x03CBC73C B.EQ 0x3CBCF28
	0x03CBC740 MOVZ W11, 0x7753
	0x03CBC744 MOVK W11, 0x270000
	0x03CBC748 CMP W9, W11
	0x03CBC74C B.NE 0x3CBB838
	0x03CBC750 CMP W10, 0x1
	0x03CBC754 B.LS 0x3CBF514
	0x03CBC758 LDR W0, [X8 + 0x24]
	0x03CBC75C MOVZ W9, 0xB04B
	0x03CBC760 MOVK W9, 0xDAFC0000
	0x03CBC764 CMP W0, W9
	0x03CBC768 B.NE 0x3CBE118
	0x03CBC76C LDR X8, [X31 + 0x48]
	0x03CBC770 LDR X8, [X8 + 0x15B8]
	0x03CBC774 CBZ X8, 0x3CBE9A4
	0x03CBC778 LDR W9, [X8 + 0x18]
	0x03CBC77C CBZ W9, 0x3CBF514
	0x03CBC780 LDR X9, [X8 + 0x28]
	0x03CBC784 LDR X10, [X31 + 0x48]
	0x03CBC788 STR X9, [X10 + 0x68]
	0x03CBC78C LDR X9, [X8 + 0x38]
	0x03CBC790 STR W31, [X10 + 0x78]
	0x03CBC794 ADD X0, X10, 0x80
	0x03CBC798 STR X9, [X10 + 0x70]
	0x03CBC79C LDP V0, V1, [X8 + 0x20]
	0x03CBC7A0 LDR X9, [X8 + 0x50]
	0x03CBC7A4 LDR V2, [X8 + 0x4]
	0x03CBC7A8 ADRP X8, 0x4A5000
	0x03CBC7AC LDR X8, [X8 + 0xCE8]
	0x03CBC7B0 STR X9, [X31 + 0x210]
	0x03CBC7B4 STP V1, V2, [X31 + 0x1F0]
	0x03CBC7B8 STR V0, [X31 + 0x1E]
	0x03CBC7BC LDR X2, [X8]
	0x03CBC7C0 B 0x3CBDFD0
	0x03CBC7C4 MOVZ W10, 0xE566
	0x03CBC7C8 MOVK W10, 0x9E500000
	0x03CBC7CC CMP W9, W10
	0x03CBC7D0 B.EQ 0x3CBCF34
	0x03CBC7D4 MOVZ W10, 0x3FC7
	0x03CBC7D8 MOVK W10, 0xA1900000
	0x03CBC7DC CMP W9, W10
	0x03CBC7E0 B.NE 0x3CBB838
	0x03CBC7E4 ADRP X9, 0x4A5000
	0x03CBC7E8 LDR X9, [X9 + 0xB48]
	0x03CBC7EC LDP W22, W21, [X8 + 0x2C]
	0x03CBC7F0 MOV W19, W15
	0x03CBC7F4 LDR X0, [X9]
	0x03CBC7F8 LDR W9, [X0 + 0xE0]
	0x03CBC7FC CBNZ W9, 0x3CBC804
	0x03CBC800 BL 0x1C16DFC
	0x03CBC804 MOV X0, X25
	0x03CBC808 MOV W1, W22
	0x03CBC80C MOV W2, W21
	0x03CBC810 MOV X3, X31
	0x03CBC814 BL 0x3CC6208
	0x03CBC818 MOVZ W8, 0xC7000000
	0x03CBC81C FMOV S1, W8
	0x03CBC820 FCMP S0, S1
	0x03CBC824 B.EQ 0x3CBB838
	0x03CBC828 CBZ W19, 0x3CBED68
	0x03CBC82C CMP W19, 0x1
	0x03CBC830 B.NE 0x3CBDBA0
	0x03CBC834 LDR X8, [X31 + 0x30]
	0x03CBC838 ADRP X9, 0xFFFFFFFFFCE2E000
	0x03CBC83C LDR V1, [X9 + 0xBC]
	0x03CBC840 LDR X9, [X31 + 0x48]
	0x03CBC844 LDRB W8, [X8 + 0xBD]
	0x03CBC848 FMOV S3, 1
	0x03CBC84C LDR V2, [X9 + 0xF4]
	0x03CBC850 CMP W8, 0x0
	0x03CBC854 FCSEL S1, S1, S3, EQ
	0x03CBC858 FMUL S0, S0, S1
	0x03CBC85C FMUL S0, S2, S0
	0x03CBC860 STR S0, [X9 + 0x2EC]
	0x03CBC864 B 0x3CBB978
	0x03CBC868 B.NE 0x3CBB838
	0x03CBC86C LDR X8, [X31 + 0x30]
	0x03CBC870 LDRB W8, [X8 + 0x60]
	0x03CBC874 TBNZ X8, 0x5, 0x3CBB978
	0x03CBC878 LDR X8, [X31 + 0x48]
	0x03CBC87C MOVZ W1, 0x20
	0x03CBC880 MOV X2, X31
	0x03CBC884 ADD X0, X8, 0x128
	0x03CBC888 BL 0x3CCB674
	0x03CBC88C ANDS W31, W0, 0xFF
	0x03CBC890 B.NE 0x3CBB978
	0x03CBC894 LDR X9, [X31 + 0x48]
	0x03CBC898 LDR W8, [X9 + 0x124]
	0x03CBC89C AND W8, W8, 0xFFFFFFDF
	0x03CBC8A0 B 0x3CBE110
	0x03CBC8A4 MOVZ W11, 0x8194
	0x03CBC8A8 MOVK W11, 0xFF560000
	0x03CBC8AC CMP W9, W11
	0x03CBC8B0 B.EQ 0x3CBCF40
	0x03CBC8B4 CMP W9, 0x41
	0x03CBC8B8 B.NE 0x3CBB838
	0x03CBC8BC LDR X9, [X31 + 0x28]
	0x03CBC8C0 LDRB W9, [X9 + 0x1]
	0x03CBC8C4 CBZ W9, 0x3CBB978
	0x03CBC8C8 LDR X9, [X31 + 0x28]
	0x03CBC8CC LDRB W9, [X9 + 0x470]
	0x03CBC8D0 CBNZ W9, 0x3CBB978
	0x03CBC8D4 CMP W10, 0x1
	0x03CBC8D8 B.LS 0x3CBF514
	0x03CBC8DC LDR W8, [X8 + 0x38]
	0x03CBC8E0 MOVZ W21, 0xAFB9
	0x03CBC8E4 MOVK W21, 0x260000
	0x03CBC8E8 CMP W8, W21
	0x03CBC8EC B.NE 0x3CBF2E8
	0x03CBC8F0 LDR X8, [X31 + 0x20]
	0x03CBC8F4 CBZ X8, 0x3CBE9A4
	0x03CBC8F8 LDR X20, [X31 + 0x20]
	0x03CBC8FC LDR X8, [X20 + 0x40]!
	0x03CBC900 CBZ X8, 0x3CBE9A4
	0x03CBC904 LDURSW X19, [X20 - 0x20]
	0x03CBC908 LDR W9, [X8 + 0x18]
	0x03CBC90C ADD W23, W19, 0x1
	0x03CBC910 CMP W23, W9
	0x03CBC914 B.LE 0x3CBC950
	0x03CBC918 ADRP X8, 0x4A5000
	0x03CBC91C LDR X8, [X8 + 0xB68]
	0x03CBC920 LDR X0, [X8]
	0x03CBC924 LDR W8, [X0 + 0xE0]
	0x03CBC928 CBNZ W8, 0x3CBC930
	0x03CBC92C BL 0x1C16DFC
	0x03CBC930 ADRP X8, 0x4A5000
	0x03CBC934 LDR X8, [X8 + 0xCD8]
	0x03CBC938 MOV X0, X20
	0x03CBC93C MOV W1, W23
	0x03CBC940 LDR X2, [X8]
	0x03CBC944 BL 0x229C184
	0x03CBC948 LDR X8, [X20]
	0x03CBC94C CBZ X8, 0x3CBE9A4
	0x03CBC950 LDR W9, [X8 + 0x18]
	0x03CBC954 CMP W19, W9
	0x03CBC958 B.CS 0x3CBF514
	0x03CBC95C LDR X10, [X31 + 0x48]
	0x03CBC960 MOVZ W9, 0x30
	0x03CBC964 MADD X0, X19, X9, X8
	0x03CBC968 STR W21, [X0 + 0x20]!
	0x03CBC96C LDR W9, [X10 + 0x324]
	0x03CBC970 STR W9, [X0 + 0xC]
	0x03CBC974 LDR X9, [X10 + 0x19D0]
	0x03CBC978 CBZ X9, 0x3CBE9A4
	0x03CBC97C LDR W10, [X9 + 0x18]
	0x03CBC980 CMP W10, 0x1
	0x03CBC984 B.LS 0x3CBF514
	0x03CBC988 MOVZ W10, 0x30
	0x03CBC98C LDR W2, [X9 + 0x44]
	0x03CBC990 NOP
	0x03CBC994 MADD X8, X19, X10, X8
	0x03CBC998 LDR W10, [X31 + 0x44]
	0x03CBC99C MOV X4, X31
	0x03CBC9A0 ADD W10, W2, W10
	0x03CBC9A4 STR W10, [X8 + 0x24]
	0x03CBC9A8 LDR X8, [X31 + 0x58]
	0x03CBC9AC LDR W3, [X9 + 0x48]
	0x03CBC9B0 LDR X1, [X8]
	0x03CBC9B4 BL 0x3CA8DBC
	0x03CBC9B8 B 0x3CBF2F0
	0x03CBC9BC MOVZ W8, 0x2798
	0x03CBC9C0 MOVK W8, 0xA97F0000
	0x03CBC9C4 CMP W9, W8
	0x03CBC9C8 B.EQ 0x3CBCF4C
	0x03CBC9CC MOVZ W8, 0xBCA8
	0x03CBC9D0 MOVK W8, 0xACE20000
	0x03CBC9D4 CMP W9, W8
	0x03CBC9D8 B.NE 0x3CBB838
	0x03CBC9DC LDR X8, [X31 + 0x28]
	0x03CBC9E0 LDRB W8, [X8 + 0x1]
	0x03CBC9E4 CBZ W8, 0x3CBB978
	0x03CBC9E8 LDR X8, [X31 + 0x48]
	0x03CBC9EC LDR W8, [X8 + 0x324]
	0x03CBC9F0 SUBS W8, W8, 0x1
	0x03CBC9F4 B.LT 0x3CBCA38
	0x03CBC9F8 LDR X9, [X31 + 0x48]
	0x03CBC9FC LDR V0, [X9 + 0x2F4]
	0x03CBCA00 LDR V1, [X9 + 0x2EC]
	0x03CBCA04 FSUB S0, S0, S1
	0x03CBCA08 STR S0, [X9 + 0x2F4]
	0x03CBCA0C LDR X9, [X31 + 0x20]
	0x03CBCA10 CBZ X9, 0x3CBE9A4
	0x03CBCA14 LDR X9, [X31 + 0x20]
	0x03CBCA18 LDR X9, [X9 + 0x30]
	0x03CBCA1C CBZ X9, 0x3CBE9A4
	0x03CBCA20 LDR W10, [X9 + 0x18]
	0x03CBCA24 CMP W8, W10
	0x03CBCA28 B.CS 0x3CBF514
	0x03CBCA2C MOVZ W10, 0x188
	0x03CBCA30 UMADDL X8, X8, X10, X9
	0x03CBCA34 STR S0, [X8 + 0x164]
	0x03CBCA38 LDR X8, [X31 + 0x48]
	0x03CBCA3C STR W31, [X8 + 0x2EC]
	0x03CBCA40 B 0x3CBB978
	0x03CBCA44 MOVZ W10, 0x86ED
	0x03CBCA48 MOVK W10, 0x47A0000
	0x03CBCA4C CMP W9, W10
	0x03CBCA50 B.EQ 0x3CBCF84
	0x03CBCA54 MOVZ W10, 0xF054
	0x03CBCA58 MOVK W10, 0x47A0000
	0x03CBCA5C CMP W9, W10
	0x03CBCA60 B.NE 0x3CBB838
	0x03CBCA64 LDR W8, [X8 + 0x30]
	0x03CBCA68 CMP W8, 0x3
	0x03CBCA6C B.NE 0x3CBB838
	0x03CBCA70 CMP W11, 0x7
	0x03CBCA74 B.LS 0x3CBF514
	0x03CBCA78 ADRP X8, 0x4A5000
	0x03CBCA7C LDR X8, [X8 + 0xB48]
	0x03CBCA80 LDRH W20, [X25 + 0x2E]
	0x03CBCA84 LDR X0, [X8]
	0x03CBCA88 LDR W8, [X0 + 0xE0]
	0x03CBCA8C CBNZ W8, 0x3CBCA94
	0x03CBCA90 BL 0x1C16DFC
	0x03CBCA94 MOV W0, W20
	0x03CBCA98 MOV X1, X31
	0x03CBCA9C BL 0x3CC5F50
	0x03CBCAA0 LDR X8, [X31 + 0x58]
	0x03CBCAA4 LDR X8, [X8]
	0x03CBCAA8 CBZ X8, 0x3CBE9A4
	0x03CBCAAC LDR W9, [X8 + 0x18]
	0x03CBCAB0 CMP W9, 0x8
	0x03CBCAB4 B.LS 0x3CBF514
	0x03CBCAB8 MOV W20, W0
	0x03CBCABC LDRH W0, [X8 + 0x30]
	0x03CBCAC0 MOV X1, X31
	0x03CBCAC4 BL 0x3CC5F50
	0x03CBCAC8 LDR X9, [X31 + 0x48]
	0x03CBCACC ADD W8, W0, W20, 0x4, LSL
	0x03CBCAD0 STRB W8, [X9 + 0x1AF]
	0x03CBCAD4 B 0x3CBB978
	0x03CBCAD8 MOVZ W10, 0xFA5C
	0x03CBCADC MOVK W10, 0xD05E0000
	0x03CBCAE0 CMP W9, W10
	0x03CBCAE4 B.EQ 0x3CBCFD8
	0x03CBCAE8 MOVZ W8, 0x112F
	0x03CBCAEC MOVK W8, 0xD0780000
	0x03CBCAF0 CMP W9, W8
	0x03CBCAF4 B.NE 0x3CBB838
	0x03CBCAF8 LDR X8, [X31 + 0x30]
	0x03CBCAFC LDRB W8, [X8 + 0x60]
	0x03CBCB00 TBNZ X8, 0x4, 0x3CBB978
	0x03CBCB04 LDR X8, [X31 + 0x48]
	0x03CBCB08 MOVZ W1, 0x10
	0x03CBCB0C MOV X2, X31
	0x03CBCB10 ADD X0, X8, 0x128
	0x03CBCB14 BL 0x3CCB674
	0x03CBCB18 ANDS W31, W0, 0xFF
	0x03CBCB1C B.NE 0x3CBB978
	0x03CBCB20 LDR X9, [X31 + 0x48]
	0x03CBCB24 LDR W8, [X9 + 0x124]
	0x03CBCB28 AND W8, W8, 0xFFFFFFEF
	0x03CBCB2C B 0x3CBE110
	0x03CBCB30 MOVZ W10, 0x4DAC
	0x03CBCB34 MOVK W10, 0x10000
	0x03CBCB38 CMP W9, W10
	0x03CBCB3C B.EQ 0x3CBD058
	0x03CBCB40 MOVZ W8, 0x67E4
	0x03CBCB44 MOVK W8, 0x10000
	0x03CBCB48 CMP W9, W8
	0x03CBCB4C B.NE 0x3CBB838
	0x03CBCB50 LDR X8, [X31 + 0x48]
	0x03CBCB54 LDR X0, [X8 + 0x68]
	0x03CBCB58 CBZ X0, 0x3CBE9A4
	0x03CBCB5C LDR X8, [X31 + 0x48]
	0x03CBCB60 MOV X1, X31
	0x03CBCB64 LDR V8, [X8 + 0xF0]
	0x03CBCB68 ADD X8, X31, 0x220
	0x03CBCB6C BL 0x3C9EB14
	0x03CBCB70 ADD X0, X31, 0x2A0
	0x03CBCB74 ADD X1, X31, 0x220
	0x03CBCB78 MOVZ W2, 0x60
	0x03CBCB7C BL 0x3EB1AC0
	0x03CBCB80 ADD X0, X31, 0x2A0
	0x03CBCB84 MOV X1, X31
	0x03CBCB88 BL 0x3C9C038
	0x03CBCB8C FCMP S0, 0x0
	0x03CBCB90 FMOV S0, 1
	0x03CBCB94 B.LE 0x3CBCBCC
	0x03CBCB98 LDR X8, [X31 + 0x48]
	0x03CBCB9C LDR X0, [X8 + 0x68]
	0x03CBCBA0 CBZ X0, 0x3CBE9A4
	0x03CBCBA4 ADD X8, X31, 0x220
	0x03CBCBA8 MOV X1, X31
	0x03CBCBAC BL 0x3C9EB14
	0x03CBCBB0 ADD X0, X31, 0x2A0
	0x03CBCBB4 ADD X1, X31, 0x220
	0x03CBCBB8 MOVZ W2, 0x60
	0x03CBCBBC BL 0x3EB1AC0
	0x03CBCBC0 ADD X0, X31, 0x2A0
	0x03CBCBC4 MOV X1, X31
	0x03CBCBC8 BL 0x3C9C038
	0x03CBCBCC LDR X19, [X31 + 0x48]
	0x03CBCBD0 FMUL S1, S8, S0
	0x03CBCBD4 ADRP X8, 0x4A5000
	0x03CBCBD8 STR S1, [X19 + 0xF0]
	0x03CBCBDC LDR V0, [X19 + 0x180]
	0x03CBCBE0 LDR X8, [X8 + 0xD38]
	0x03CBCBE4 ADD X0, X19, 0x188
	0x03CBCBE8 LDR X1, [X8]
	0x03CBCBEC BL 0x26E32F8
	0x03CBCBF0 LDR X0, [X19 + 0x68]
	0x03CBCBF4 CBZ X0, 0x3CBE9A4
	0x03CBCBF8 LDR X19, [X31 + 0x48]
	0x03CBCBFC ADD X8, X31, 0x220
	0x03CBCC00 MOV X1, X31
	0x03CBCC04 LDR V8, [X19 + 0xF4]
	0x03CBCC08 BL 0x3C9EB14
	0x03CBCC0C ADD X0, X31, 0x2A0
	0x03CBCC10 ADD X1, X31, 0x220
	0x03CBCC14 MOVZ W2, 0x60
	0x03CBCC18 BL 0x3EB1AC0
	0x03CBCC1C ADD X0, X31, 0x2A0
	0x03CBCC20 MOV X1, X31
	0x03CBCC24 BL 0x3C9BF88
	0x03CBCC28 LDR X9, [X19 + 0x68]
	0x03CBCC2C CBZ X9, 0x3CBE9A4
	0x03CBCC30 MOV W21, W0
	0x03CBCC34 ADD X8, X31, 0x220
	0x03CBCC38 MOV X0, X9
	0x03CBCC3C MOV X1, X31
	0x03CBCC40 BL 0x3C9EB14
	0x03CBCC44 ADD X0, X31, 0x2A0
	0x03CBCC48 ADD X1, X31, 0x220
	0x03CBCC4C MOVZ W2, 0x60
	0x03CBCC50 BL 0x3EB1AC0
	0x03CBCC54 ADD X0, X31, 0x2A0
	0x03CBCC58 MOV X1, X31
	0x03CBCC5C BL 0x3C9BF98
	0x03CBCC60 LDR X8, [X31 + 0x48]
	0x03CBCC64 LDR X0, [X8 + 0x68]
	0x03CBCC68 CBZ X0, 0x3CBE9A4
	0x03CBCC6C LDR X8, [X31 + 0x30]
	0x03CBCC70 LDR X19, [X31 + 0x48]
	0x03CBCC74 ADRP X9, 0xFFFFFFFFFCE2E000
	0x03CBCC78 LDR V2, [X9 + 0xBC]
	0x03CBCC7C LDRB W8, [X8 + 0xBD]
	0x03CBCC80 SCVTF S1, W21
	0x03CBCC84 LDR V9, [X19 + 0x180]
	0x03CBCC88 FDIV S1, S8, S1
	0x03CBCC8C FMUL S0, S1, S0
	0x03CBCC90 CMP W8, 0x0
	0x03CBCC94 FMOV S1, 1
	0x03CBCC98 FCSEL S1, S2, S1, EQ
	0x03CBCC9C ADD X8, X31, 0x220
	0x03CBCCA0 MOV X1, X31
	0x03CBCCA4 FMUL S8, S0, S1
	0x03CBCCA8 BL 0x3C9EB14
	0x03CBCCAC ADD X0, X31, 0x2A0
	0x03CBCCB0 ADD X1, X31, 0x220
	0x03CBCCB4 MOVZ W2, 0x60
	0x03CBCCB8 BL 0x3EB1AC0
	0x03CBCCBC ADD X0, X31, 0x2A0
	0x03CBCCC0 MOV X1, X31
	0x03CBCCC4 BL 0x3C9C028
	0x03CBCCC8 LDR V1, [X19 + 0xF0]
	0x03CBCCCC FMUL S0, S8, S0
	0x03CBCCD0 ADD X0, X19, 0x128
	0x03CBCCD4 MOVZ W1, 0x100
	0x03CBCCD8 FMUL S0, S0, S1
	0x03CBCCDC FADD S0, S9, S0
	0x03CBCCE0 MOV X2, X31
	0x03CBCCE4 STR S0, [X19 + 0x180]
	0x03CBCCE8 BL 0x3CCB578
	0x03CBCCEC LDR W8, [X19 + 0x124]
	0x03CBCCF0 ORR W8, W8, 0x100
	0x03CBCCF4 B 0x3CBDDB8
	0x03CBCCF8 MOVZ W10, 0x15E6
	0x03CBCCFC MOVK W10, 0x88CE0000
	0x03CBCD00 CMP W9, W10
	0x03CBCD04 B.EQ 0x3CBD0D8
	0x03CBCD08 MOVZ W10, 0x791E
	0x03CBCD0C MOVK W10, 0x8F5A0000
	0x03CBCD10 CMP W9, W10
	0x03CBCD14 B.NE 0x3CBB838
	0x03CBCD18 ADRP X9, 0x4A5000
	0x03CBCD1C LDR X9, [X9 + 0xB48]
	0x03CBCD20 LDP W21, W20, [X8 + 0x2C]
	0x03CBCD24 LDR X0, [X9]
	0x03CBCD28 LDR W9, [X0 + 0xE0]
	0x03CBCD2C CBNZ W9, 0x3CBCD34
	0x03CBCD30 BL 0x1C16DFC
	0x03CBCD34 MOV X0, X25
	0x03CBCD38 MOV W1, W21
	0x03CBCD3C MOV W2, W20
	0x03CBCD40 MOV X3, X31
	0x03CBCD44 BL 0x3CC6208
	0x03CBCD48 MOVZ W8, 0xC7000000
	0x03CBCD4C FMOV S1, W8
	0x03CBCD50 FCMP S0, S1
	0x03CBCD54 B.EQ 0x3CBB838
	0x03CBCD58 MOVZ W8, 0x7F800000
	0x03CBCD5C FMOV S1, W8
	0x03CBCD60 FCVTZS W9, S0
	0x03CBCD64 FCMP S0, S1
	0x03CBCD68 MOVZ W8, 0x80000000
	0x03CBCD6C CSEL W8, W8, W9, EQ
	0x03CBCD70 CMP W8, 0x190
	0x03CBCD74 B.LE 0x3CBE484
	0x03CBCD78 CMP W8, 0x258
	0x03CBCD7C B.LE 0x3CBED94
	0x03CBCD80 CMP W8, 0x2BC
	0x03CBCD84 B.EQ 0x3CBEF34
	0x03CBCD88 CMP W8, 0x320
	0x03CBCD8C B.EQ 0x3CBEF34
	0x03CBCD90 CMP W8, 0x384
	0x03CBCD94 B.EQ 0x3CBEF34
	0x03CBCD98 B 0x3CBEF3C
	0x03CBCD9C LDR X10, [X31 + 0x48]
	0x03CBCDA0 MOVN W9, 0x0
	0x03CBCDA4 LDR W21, [X8 + 0x24]
	0x03CBCDA8 STR W9, [X10 + 0x157C]
	0x03CBCDAC LDR W8, [X8 + 0x28]
	0x03CBCDB0 CMP W8, 0x1
	0x03CBCDB4 B.HI 0x3CBE1E4
	0x03CBCDB8 ADRP X19, 0x437000
	0x03CBCDBC LDR X19, [X19 + 0x598]
	0x03CBCDC0 LDR X9, [X31 + 0x30]
	0x03CBCDC4 LDR X0, [X19]
	0x03CBCDC8 LDR X21, [X9 + 0x50]
	0x03CBCDCC LDR W8, [X0 + 0xE0]
	0x03CBCDD0 CBNZ W8, 0x3CBCDD8
	0x03CBCDD4 BL 0x1C16DFC
	0x03CBCDD8 MOV X0, X21
	0x03CBCDDC MOV X1, X31
	0x03CBCDE0 MOV X2, X31
	0x03CBCDE4 BL 0x3C354F8
	0x03CBCDE8 TBZ X0, 0x0, 0x3CBE4A0
	0x03CBCDEC LDR X8, [X31 + 0x30]
	0x03CBCDF0 LDR X20, [X8 + 0x50]
	0x03CBCDF4 B 0x3CBE4DC
	0x03CBCDF8 LDR X9, [X31 + 0x48]
	0x03CBCDFC MOVZ W8, 0xFE00
	0x03CBCE00 MOVK W8, 0xC6FF0000
	0x03CBCE04 STR W8, [X9 + 0x2E4]
	0x03CBCE08 B 0x3CBB978
	0x03CBCE0C LDR X8, [X31 + 0x48]
	0x03CBCE10 MOVZ W0, 0x1
	0x03CBCE14 STRB W0, [X8 + 0x37D]
	0x03CBCE18 B 0x3CBB83C
	0x03CBCE1C LDR X9, [X31 + 0x20]
	0x03CBCE20 CBZ X9, 0x3CBE9A4
	0x03CBCE24 LDR X10, [X31 + 0x20]
	0x03CBCE28 MOVZ W9, 0x1
	0x03CBCE2C CMP W11, 0x6
	0x03CBCE30 STRB W9, [X10 + 0x61]
	0x03CBCE34 B.LS 0x3CBF514
	0x03CBCE38 LDRH W9, [X25 + 0x2C]
	0x03CBCE3C CMP W21, 0xA
	0x03CBCE40 B.NE 0x3CBE324
	0x03CBCE44 CMP W9, 0x23
	0x03CBCE48 B.NE 0x3CBE324
	0x03CBCE4C ADRP X8, 0x4A5000
	0x03CBCE50 LDR X8, [X8 + 0xB48]
	0x03CBCE54 LDR X0, [X8]
	0x03CBCE58 LDR W8, [X0 + 0xE0]
	0x03CBCE5C CBNZ W8, 0x3CBCE64
	0x03CBCE60 BL 0x1C16DFC
	0x03CBCE64 MOVZ W1, 0xA
	0x03CBCE68 B 0x3CBF160
	0x03CBCE6C LDR X8, [X31 + 0x48]
	0x03CBCE70 STRB W31, [X8 + 0x37D]
	0x03CBCE74 B 0x3CBB978
	0x03CBCE78 ADRP X8, 0x4A5000
	0x03CBCE7C LDR X8, [X8 + 0xD48]
	0x03CBCE80 LDR X19, [X31 + 0x48]
	0x03CBCE84 LDR X1, [X8]
	0x03CBCE88 ADD X0, X19, 0x80
	0x03CBCE8C ADD X8, X31, 0x220
	0x03CBCE90 BL 0x26E271C
	0x03CBCE94 LDR X8, [X31 + 0x238]
	0x03CBCE98 LDR W9, [X31 + 0x220]
	0x03CBCE9C STR X8, [X19 + 0x70]
	0x03CBCEA0 STR W9, [X19 + 0x78]
	0x03CBCEA4 B 0x3CBB978
	0x03CBCEA8 ADRP X9, 0x4A5000
	0x03CBCEAC LDR X9, [X9 + 0xB48]
	0x03CBCEB0 LDP W22, W21, [X8 + 0x2C]
	0x03CBCEB4 MOV W19, W15
	0x03CBCEB8 LDR X0, [X9]
	0x03CBCEBC LDR W9, [X0 + 0xE0]
	0x03CBCEC0 CBNZ W9, 0x3CBCEC8
	0x03CBCEC4 BL 0x1C16DFC
	0x03CBCEC8 MOV X0, X25
	0x03CBCECC MOV W1, W22
	0x03CBCED0 MOV W2, W21
	0x03CBCED4 MOV X3, X31
	0x03CBCED8 BL 0x3CC6208
	0x03CBCEDC MOVZ W8, 0xC7000000
	0x03CBCEE0 FMOV S1, W8
	0x03CBCEE4 FCMP S0, S1
	0x03CBCEE8 B.EQ 0x3CBB838
	0x03CBCEEC CMP W19, 0x1
	0x03CBCEF0 B.EQ 0x3CBEAA8
	0x03CBCEF4 CBNZ W19, 0x3CBB838
	0x03CBCEF8 LDR X8, [X31 + 0x30]
	0x03CBCEFC ADRP X9, 0xFFFFFFFFFCE2E000
	0x03CBCF00 LDR V1, [X9 + 0xBC]
	0x03CBCF04 LDR X9, [X31 + 0x48]
	0x03CBCF08 LDRB W8, [X8 + 0xBD]
	0x03CBCF0C FMOV S2, 1
	0x03CBCF10 LDR V3, [X9 + 0x2F4]
	0x03CBCF14 CMP W8, 0x0
	0x03CBCF18 FCSEL S1, S1, S2, EQ
	0x03CBCF1C FMUL S0, S0, S1
	0x03CBCF20 FADD S0, S3, S0
	0x03CBCF24 B 0x3CBEEE8
	0x03CBCF28 LDR X8, [X31 + 0x48]
	0x03CBCF2C STRB W31, [X8 + 0x4C]
	0x03CBCF30 B 0x3CBB978
	0x03CBCF34 LDR X8, [X31 + 0x48]
	0x03CBCF38 STR W31, [X8 + 0x2F0]
	0x03CBCF3C B 0x3CBB978
	0x03CBCF40 LDR X8, [X31 + 0x48]
	0x03CBCF44 STR W31, [X8 + 0x180]
	0x03CBCF48 B 0x3CBB978
	0x03CBCF4C LDR X8, [X31 + 0x30]
	0x03CBCF50 LDRB W8, [X8 + 0x60]
	0x03CBCF54 TBNZ X8, 0x3, 0x3CBB978
	0x03CBCF58 LDR X8, [X31 + 0x48]
	0x03CBCF5C MOVZ W1, 0x8
	0x03CBCF60 MOV X2, X31
	0x03CBCF64 ADD X0, X8, 0x128
	0x03CBCF68 BL 0x3CCB674
	0x03CBCF6C ANDS W31, W0, 0xFF
	0x03CBCF70 B.NE 0x3CBB978
	0x03CBCF74 LDR X9, [X31 + 0x48]
	0x03CBCF78 LDR W8, [X9 + 0x124]
	0x03CBCF7C AND W8, W8, 0xFFFFFFF7
	0x03CBCF80 B 0x3CBE110
	0x03CBCF84 LDR W8, [X8 + 0x24]
	0x03CBCF88 MOVZ W9, 0x989B
	0x03CBCF8C MOVK W9, 0x280000
	0x03CBCF90 CMP W8, W9
	0x03CBCF94 B.LE 0x3CBE2F4
	0x03CBCF98 MOVZ W9, 0x6C24
	0x03CBCF9C MOVK W9, 0x5190000
	0x03CBCFA0 CMP W8, W9
	0x03CBCFA4 B.EQ 0x3CBEF54
	0x03CBCFA8 MOVZ W9, 0xEC60
	0x03CBCFAC MOVK W9, 0x5F40000
	0x03CBCFB0 CMP W8, W9
	0x03CBCFB4 B.EQ 0x3CBEF64
	0x03CBCFB8 MOVZ W9, 0xD31F
	0x03CBCFBC MOVK W9, 0x30B30000
	0x03CBCFC0 CMP W8, W9
	0x03CBCFC4 B.NE 0x3CBB838
	0x03CBCFC8 LDR X9, [X31 + 0x48]
	0x03CBCFCC MOVZ W8, 0x208
	0x03CBCFD0 MOVZ W1, 0x208
	0x03CBCFD4 B 0x3CBEF70
	0x03CBCFD8 ADRP X9, 0x4A5000
	0x03CBCFDC LDR X9, [X9 + 0xB48]
	0x03CBCFE0 LDP W22, W21, [X8 + 0x2C]
	0x03CBCFE4 MOV W19, W15
	0x03CBCFE8 LDR X0, [X9]
	0x03CBCFEC LDR W9, [X0 + 0xE0]
	0x03CBCFF0 CBNZ W9, 0x3CBCFF8
	0x03CBCFF4 BL 0x1C16DFC
	0x03CBCFF8 MOV X0, X25
	0x03CBCFFC MOV W1, W22
	0x03CBD000 MOV W2, W21
	0x03CBD004 MOV X3, X31
	0x03CBD008 BL 0x3CC6208
	0x03CBD00C MOVZ W8, 0xC7000000
	0x03CBD010 MOV V8.16B, V0.16B
	0x03CBD014 FMOV S0, W8
	0x03CBD018 FCMP S8, S0
	0x03CBD01C B.EQ 0x3CBB838
	0x03CBD020 CMP W19, 0x2
	0x03CBD024 B.EQ 0x3CBEDA8
	0x03CBD028 CMP W19, 0x1
	0x03CBD02C B.EQ 0x3CBEE9C
	0x03CBD030 CBNZ W19, 0x3CBB978
	0x03CBD034 LDR X8, [X31 + 0x30]
	0x03CBD038 ADRP X9, 0xFFFFFFFFFCE2D000
	0x03CBD03C LDR V0, [X9 + 0xBC]
	0x03CBD040 FMOV S1, 1
	0x03CBD044 LDRB W8, [X8 + 0xBD]
	0x03CBD048 CMP W8, 0x0
	0x03CBD04C FCSEL S0, S0, S1, EQ
	0x03CBD050 FMUL S0, S8, S0
	0x03CBD054 B 0x3CBEE90
	0x03CBD058 ADRP X9, 0x4A4000
	0x03CBD05C LDR X9, [X9 + 0xB48]
	0x03CBD060 LDP W22, W21, [X8 + 0x2C]
	0x03CBD064 MOV W19, W15
	0x03CBD068 LDR X0, [X9]
	0x03CBD06C LDR W9, [X0 + 0xE0]
	0x03CBD070 CBNZ W9, 0x3CBD078
	0x03CBD074 BL 0x1C16DFC
	0x03CBD078 MOV X0, X25
	0x03CBD07C MOV W1, W22
	0x03CBD080 MOV W2, W21
	0x03CBD084 MOV X3, X31
	0x03CBD088 BL 0x3CC6208
	0x03CBD08C MOVZ W8, 0xC7000000
	0x03CBD090 FMOV S1, W8
	0x03CBD094 FCMP S0, S1
	0x03CBD098 B.EQ 0x3CBB838
	0x03CBD09C CMP W19, 0x2
	0x03CBD0A0 B.EQ 0x3CBEED0
	0x03CBD0A4 CMP W19, 0x1
	0x03CBD0A8 B.EQ 0x3CBEEF0
	0x03CBD0AC CBNZ W19, 0x3CBB838
	0x03CBD0B0 LDR X8, [X31 + 0x30]
	0x03CBD0B4 ADRP X9, 0xFFFFFFFFFCE2D000
	0x03CBD0B8 LDR V1, [X9 + 0xBC]
	0x03CBD0BC FMOV S2, 1
	0x03CBD0C0 LDRB W8, [X8 + 0xBD]
	0x03CBD0C4 CMP W8, 0x0
	0x03CBD0C8 LDR X8, [X31 + 0x48]
	0x03CBD0CC FCSEL S1, S1, S2, EQ
	0x03CBD0D0 FMUL S0, S0, S1
	0x03CBD0D4 B 0x3CBECC4
	0x03CBD0D8 LDR W20, [X8 + 0x24]
	0x03CBD0DC ADD X1, X31, 0x318
	0x03CBD0E0 MOV X2, X31
	0x03CBD0E4 MOV W0, W20
	0x03CBD0E8 BL 0x3CAA46C
	0x03CBD0EC TBNZ X0, 0x0, 0x3CBE8F4
	0x03CBD0F0 ADRP X19, 0x436000
	0x03CBD0F4 LDR X19, [X19 + 0x598]
	0x03CBD0F8 LDR X21, [X31 + 0x318]
	0x03CBD0FC LDR X0, [X19]
	0x03CBD100 LDR W8, [X0 + 0xE0]
	0x03CBD104 CBNZ W8, 0x3CBD10C
	0x03CBD108 BL 0x1C16DFC
	0x03CBD10C MOV X0, X21
	0x03CBD110 MOV X1, X31
	0x03CBD114 MOV X2, X31
	0x03CBD118 BL 0x3C3883C
	0x03CBD11C TBZ X0, 0x0, 0x3CBE8BC
	0x03CBD120 LDR X8, [X31 + 0x18]
	0x03CBD124 CBZ X8, 0x3CBE9A4
	0x03CBD128 LDR X8, [X27]
	0x03CBD12C CBZ X8, 0x3CBE9A4
	0x03CBD130 LDR W9, [X8 + 0x18]
	0x03CBD134 CBZ W9, 0x3CBF514
	0x03CBD138 LDR X9, [X31 + 0x18]
	0x03CBD13C LDP W2, W3, [X8 + 0x2C]
	0x03CBD140 MOV X0, X31
	0x03CBD144 MOV X4, X31
	0x03CBD148 LDR X21, [X9 + 0x78]
	0x03CBD14C LDR X9, [X31 + 0x58]
	0x03CBD150 LDR X1, [X9]
	0x03CBD154 BL 0x322EAE4
	0x03CBD158 MOV X1, X0
	0x03CBD15C MOV X0, X21
	0x03CBD160 MOV X2, X31
	0x03CBD164 BL 0x321B938
	0x03CBD168 ADRP X8, 0x4A4000
	0x03CBD16C LDR X8, [X8 + 0xCD0]
	0x03CBD170 LDR X1, [X8]
	0x03CBD174 BL 0x2241FB8
	0x03CBD178 MOV X21, X0
	0x03CBD17C STR X0, [X31 + 0x318]
	0x03CBD180 B 0x3CBE8C0
	0x03CBD184 LDR X9, [X31 + 0x48]
	0x03CBD188 MOVZ W8, 0xBF800000
	0x03CBD18C STR W8, [X9 + 0x35C]
	0x03CBD190 B 0x3CBB978
	0x03CBD194 ADRP X19, 0x71B000
	0x03CBD198 LDRB W8, [X19 + 0x85B]
	0x03CBD19C CBNZ W8, 0x3CBD1B4
	0x03CBD1A0 ADRP X0, 0x436000
	0x03CBD1A4 LDR X0, [X0 + 0x5A0]
	0x03CBD1A8 BL 0x1C16CF4
	0x03CBD1AC MOVZ W8, 0x1
	0x03CBD1B0 STRB W8, [X19 + 0x85B]
	0x03CBD1B4 ADRP X8, 0x436000
	0x03CBD1B8 LDR X8, [X8 + 0x5A0]
	0x03CBD1BC LDR X8, [X8]
	0x03CBD1C0 LDR X8, [X8 + 0xB8]
	0x03CBD1C4 LDUR V0, [X8 + 0xC]
	0x03CBD1C8 LDR V1, [X8 + 0x14]
	0x03CBD1CC LDR X8, [X31 + 0x48]
	0x03CBD1D0 STR D0, [X8 + 0x19A8]
	0x03CBD1D4 STR S1, [X8 + 0x19B0]
	0x03CBD1D8 B 0x3CBB978
	0x03CBD1DC LDR X8, [X31 + 0x28]
	0x03CBD1E0 LDRB W8, [X8 + 0x1]
	0x03CBD1E4 CBZ W8, 0x3CBB978
	0x03CBD1E8 LDR X8, [X31 + 0x28]
	0x03CBD1EC LDRB W8, [X8 + 0x470]
	0x03CBD1F0 CBNZ W8, 0x3CBB978
	0x03CBD1F4 LDR X8, [X31 + 0x20]
	0x03CBD1F8 CBZ X8, 0x3CBE9A4
	0x03CBD1FC LDR X8, [X31 + 0x20]
	0x03CBD200 LDR X8, [X8 + 0x40]
	0x03CBD204 CBZ X8, 0x3CBE9A4
	0x03CBD208 LDR X9, [X8 + 0x18]
	0x03CBD20C CBZ X9, 0x3CBF304
	0x03CBD210 LDR X10, [X31 + 0x20]
	0x03CBD214 LDR W10, [X10 + 0x20]
	0x03CBD218 CMP W10, 0x0
	0x03CBD21C B.LE 0x3CBF304
	0x03CBD220 SUB W10, W10, 0x1
	0x03CBD224 CMP W10, W9
	0x03CBD228 B.CS 0x3CBF514
	0x03CBD22C LDR X9, [X31 + 0x48]
	0x03CBD230 MOVZ W11, 0x30
	0x03CBD234 UMADDL X8, X10, X11, X8
	0x03CBD238 LDR W10, [X8 + 0x2C]
	0x03CBD23C LDR W9, [X9 + 0x324]
	0x03CBD240 SUB W9, W9, W10
	0x03CBD244 STR W9, [X8 + 0x30]
	0x03CBD248 B 0x3CBB978
	0x03CBD24C LDR X8, [X31 + 0x30]
	0x03CBD250 LDRB W8, [X8 + 0x60]
	0x03CBD254 TBNZ X8, 0x2, 0x3CBD284
	0x03CBD258 LDR X8, [X31 + 0x48]
	0x03CBD25C MOVZ W1, 0x4
	0x03CBD260 MOV X2, X31
	0x03CBD264 ADD X0, X8, 0x128
	0x03CBD268 BL 0x3CCB674
	0x03CBD26C ANDS W31, W0, 0xFF
	0x03CBD270 B.NE 0x3CBD284
	0x03CBD274 LDR X9, [X31 + 0x48]
	0x03CBD278 LDR W8, [X9 + 0x124]
	0x03CBD27C AND W8, W8, 0xFFFFFFFB
	0x03CBD280 STR W8, [X9 + 0x124]
	0x03CBD284 ADRP X8, 0x4A4000
	0x03CBD288 LDR X8, [X8 + 0xD70]
	0x03CBD28C LDR X19, [X31 + 0x48]
	0x03CBD290 LDR X1, [X8]
	0x03CBD294 ADD X0, X19, 0x1D8
	0x03CBD298 BL 0x26E1014
	0x03CBD29C STR W0, [X19 + 0x1B0]
	0x03CBD2A0 B 0x3CBB978
	0x03CBD2A4 LDR X8, [X31 + 0x28]
	0x03CBD2A8 LDRB W8, [X8 + 0x1]
	0x03CBD2AC CBZ W8, 0x3CBB978
	0x03CBD2B0 LDR X8, [X31 + 0x28]
	0x03CBD2B4 LDRB W8, [X8 + 0x470]
	0x03CBD2B8 CBNZ W8, 0x3CBB978
	0x03CBD2BC LDR X8, [X31 + 0x20]
	0x03CBD2C0 CBZ X8, 0x3CBE9A4
	0x03CBD2C4 LDR X8, [X31 + 0x20]
	0x03CBD2C8 LDR X9, [X8 + 0x40]
	0x03CBD2CC CBZ X9, 0x3CBE9A4
	0x03CBD2D0 LDR X8, [X31 + 0x20]
	0x03CBD2D4 LDR W10, [X9 + 0x18]
	0x03CBD2D8 LDRSW X8, [X8 + 0x20]
	0x03CBD2DC CMP W8, W10
	0x03CBD2E0 B.GE 0x3CBB978
	0x03CBD2E4 CMP W8, W10
	0x03CBD2E8 B.CS 0x3CBF514
	0x03CBD2EC LDR X10, [X31 + 0x48]
	0x03CBD2F0 MOVZ W11, 0x30
	0x03CBD2F4 MADD X9, X8, X11, X9
	0x03CBD2F8 LDR W11, [X9 + 0x2C]
	0x03CBD2FC LDR W10, [X10 + 0x324]
	0x03CBD300 ADD W8, W8, 0x1
	0x03CBD304 SUB W10, W10, W11
	0x03CBD308 STR W10, [X9 + 0x30]
	0x03CBD30C LDR X9, [X31 + 0x20]
	0x03CBD310 B 0x3CBF2FC
	0x03CBD314 ADRP X8, 0x4A4000
	0x03CBD318 LDR X8, [X8 + 0xD48]
	0x03CBD31C LDR X19, [X31 + 0x48]
	0x03CBD320 LDR X1, [X8]
	0x03CBD324 ADD X0, X19, 0x80
	0x03CBD328 ADD X8, X31, 0x220
	0x03CBD32C BL 0x26E271C
	0x03CBD330 LDR X8, [X31 + 0x228]
	0x03CBD334 LDR X9, [X31 + 0x238]
	0x03CBD338 LDR X10, [X31 + 0x220]
	0x03CBD33C STP X8, X9, [X19 + 0x68]
	0x03CBD340 STR W10, [X19 + 0x78]
	0x03CBD344 B 0x3CBB978
	0x03CBD348 LDR X9, [X31 + 0x48]
	0x03CBD34C MOVZ W8, 0x1
	0x03CBD350 STRB W8, [X9 + 0x320]
	0x03CBD354 B 0x3CBB978
	0x03CBD358 LDR X8, [X31 + 0x28]
	0x03CBD35C LDRB W8, [X8 + 0x1]
	0x03CBD360 CBZ W8, 0x3CBB978
	0x03CBD364 LDR X8, [X31 + 0x28]
	0x03CBD368 LDRB W8, [X8 + 0x470]
	0x03CBD36C CBNZ W8, 0x3CBB978
	0x03CBD370 LDR X8, [X31 + 0x20]
	0x03CBD374 CBZ X8, 0x3CBE9A4
	0x03CBD378 LDR X9, [X31 + 0x20]
	0x03CBD37C LDR X8, [X9 + 0x40]!
	0x03CBD380 STR X9, [X31 + 0x20]
	0x03CBD384 CBZ X8, 0x3CBE9A4
	0x03CBD388 LDR X9, [X31 + 0x20]
	0x03CBD38C LDURSW X19, [X9 - 0x20]
	0x03CBD390 LDR W9, [X8 + 0x18]
	0x03CBD394 ADD W20, W19, 0x1
	0x03CBD398 CMP W20, W9
	0x03CBD39C B.LE 0x3CBD3DC
	0x03CBD3A0 ADRP X8, 0x4A4000
	0x03CBD3A4 LDR X8, [X8 + 0xB68]
	0x03CBD3A8 LDR X0, [X8]
	0x03CBD3AC LDR W8, [X0 + 0xE0]
	0x03CBD3B0 CBNZ W8, 0x3CBD3B8
	0x03CBD3B4 BL 0x1C16DFC
	0x03CBD3B8 ADRP X8, 0x4A4000
	0x03CBD3BC LDR X8, [X8 + 0xCD8]
	0x03CBD3C0 LDR X21, [X31 + 0x20]
	0x03CBD3C4 MOV W1, W20
	0x03CBD3C8 LDR X2, [X8]
	0x03CBD3CC MOV X0, X21
	0x03CBD3D0 BL 0x229C184
	0x03CBD3D4 LDR X8, [X21]
	0x03CBD3D8 CBZ X8, 0x3CBE9A4
	0x03CBD3DC LDR X9, [X28]
	0x03CBD3E0 CBZ X9, 0x3CBE9A4
	0x03CBD3E4 LDR W10, [X9 + 0x18]
	0x03CBD3E8 CBZ W10, 0x3CBF514
	0x03CBD3EC LDR W10, [X8 + 0x18]
	0x03CBD3F0 CMP W19, W10
	0x03CBD3F4 B.CS 0x3CBF514
	0x03CBD3F8 LDR W10, [X9 + 0x24]
	0x03CBD3FC MOVZ W11, 0x30
	0x03CBD400 MADD X0, X19, X11, X8
	0x03CBD404 MOV X4, X31
	0x03CBD408 STR W10, [X0 + 0x20]!
	0x03CBD40C LDR X10, [X31 + 0x48]
	0x03CBD410 LDR W8, [X10 + 0x324]
	0x03CBD414 STR W8, [X0 + 0xC]
	0x03CBD418 LDR W2, [X9 + 0x2C]
	0x03CBD41C LDR W8, [X31 + 0x44]
	0x03CBD420 ADD W8, W2, W8
	0x03CBD424 STR W8, [X0 + 0x4]
	0x03CBD428 LDR X1, [X10 + 0x30]
	0x03CBD42C LDR W3, [X9 + 0x30]
	0x03CBD430 BL 0x3CA8DBC
	0x03CBD434 B 0x3CBB978
	0x03CBD438 LDR X9, [X31 + 0x48]
	0x03CBD43C MOVZ W1, 0x200
	0x03CBD440 MOV X2, X31
	0x03CBD444 LDR W8, [X9 + 0x124]
	0x03CBD448 ADD X0, X9, 0x128
	0x03CBD44C ORR W8, W8, 0x200
	0x03CBD450 STR W8, [X9 + 0x124]
	0x03CBD454 BL 0x3CCB578
	0x03CBD458 ADRP X19, 0x4A4000
	0x03CBD45C LDR X19, [X19 + 0xB38]
	0x03CBD460 LDR X0, [X19]
	0x03CBD464 LDR W8, [X0 + 0xE0]
	0x03CBD468 CBNZ W8, 0x3CBD470
	0x03CBD46C BL 0x1C16DFC
	0x03CBD470 MOV X0, X31
	0x03CBD474 BL 0x3CC5510
	0x03CBD478 STR S0, [X31 + 0x330]
	0x03CBD47C STR S1, [X31 + 0x334]
	0x03CBD480 STR S2, [X31 + 0x338]
	0x03CBD484 STR S3, [X31 + 0x33C]
	0x03CBD488 LDR X8, [X28]
	0x03CBD48C CBZ X8, 0x3CBE9A4
	0x03CBD490 ADRP X10, 0xFFFFFFFFFCE2D000
	0x03CBD494 ADRP X11, 0xFFFFFFFFFCE2D000
	0x03CBD498 LDR X12, [X31 + 0x48]
	0x03CBD49C LDR V12, [X10 + 0x330]
	0x03CBD4A0 LDR V13, [X11 + 0xBC]
	0x03CBD4A4 MOVZ W9, 0x19D8
	0x03CBD4A8 MOVZ W27, 0x2F74
	0x03CBD4AC MOVZ W29, 0x2F75
	0x03CBD4B0 MOV X13, X28
	0x03CBD4B4 MOV X20, X31
	0x03CBD4B8 MOV W21, W31
	0x03CBD4BC MOVN W23, 0xBFFF0000
	0x03CBD4C0 MOVK W27, 0x290000
	0x03CBD4C4 ADD X22, X12, X9
	0x03CBD4C8 MOVK W29, 0x290000
	0x03CBD4CC LDR W9, [X8 + 0x18]
	0x03CBD4D0 CMP W21, W9
	0x03CBD4D4 B.GE 0x3CBD6D8
	0x03CBD4D8 CMP W21, W9
	0x03CBD4DC B.CS 0x3CBF514
	0x03CBD4E0 ADD X9, X8, X20
	0x03CBD4E4 LDR W9, [X9 + 0x20]
	0x03CBD4E8 CMP W9, W27
	0x03CBD4EC B.LE 0x3CBD54C
	0x03CBD4F0 CMP W9, W29
	0x03CBD4F4 B.EQ 0x3CBD670
	0x03CBD4F8 MOVZ W10, 0x381D
	0x03CBD4FC MOVK W10, 0x4E30000
	0x03CBD500 CMP W9, W10
	0x03CBD504 B.NE 0x3CBD6C0
	0x03CBD508 ADRP X9, 0x4A4000
	0x03CBD50C LDR X9, [X9 + 0xB48]
	0x03CBD510 ADD X8, X8, X20
	0x03CBD514 LDP W25, W23, [X8 + 0x2C]
	0x03CBD518 LDR X0, [X9]
	0x03CBD51C LDR X9, [X31 + 0x58]
	0x03CBD520 LDR X24, [X9]
	0x03CBD524 LDR W9, [X0 + 0xE0]
	0x03CBD528 CBNZ W9, 0x3CBD530
	0x03CBD52C BL 0x1C16DFC
	0x03CBD530 MOV X0, X24
	0x03CBD534 MOV W1, W25
	0x03CBD538 MOV W2, W23
	0x03CBD53C MOV X3, X31
	0x03CBD540 BL 0x3CC5F7C
	0x03CBD544 MOV W23, W0
	0x03CBD548 B 0x3CBD6BC
	0x03CBD54C MOVZ W10, 0x7B71
	0x03CBD550 MOVK W10, 0x802C0000
	0x03CBD554 CMP W9, W10
	0x03CBD558 B.NE 0x3CBD6D4
	0x03CBD55C ADRP X9, 0x4A4000
	0x03CBD560 LDR X9, [X9 + 0xB48]
	0x03CBD564 ADD X8, X8, X20
	0x03CBD568 LDP W26, W24, [X8 + 0x2C]
	0x03CBD56C LDR X0, [X9]
	0x03CBD570 LDR X9, [X31 + 0x58]
	0x03CBD574 LDR X25, [X9]
	0x03CBD578 LDR W9, [X0 + 0xE0]
	0x03CBD57C CBNZ W9, 0x3CBD584
	0x03CBD580 BL 0x1C16DFC
	0x03CBD584 MOV X0, X25
	0x03CBD588 MOV W1, W26
	0x03CBD58C MOV W2, W24
	0x03CBD590 MOV X3, X22
	0x03CBD594 MOV X4, X31
	0x03CBD598 BL 0x3CC91A0
	0x03CBD59C CMP W0, 0x4
	0x03CBD5A0 B.NE 0x3CBB838
	0x03CBD5A4 LDR X8, [X22]
	0x03CBD5A8 CBZ X8, 0x3CBE9A4
	0x03CBD5AC LDR W9, [X8 + 0x18]
	0x03CBD5B0 CBZ W9, 0x3CBF514
	0x03CBD5B4 CMP W9, 0x1
	0x03CBD5B8 B.EQ 0x3CBF514
	0x03CBD5BC CMP W9, 0x2
	0x03CBD5C0 B.LS 0x3CBF514
	0x03CBD5C4 CMP W9, 0x3
	0x03CBD5C8 B.EQ 0x3CBF514
	0x03CBD5CC LDR X0, [X19]
	0x03CBD5D0 LDP S11, S10, [X8 + 0x20]
	0x03CBD5D4 LDP S9, S8, [X8 + 0x28]
	0x03CBD5D8 LDR W9, [X0 + 0xE0]
	0x03CBD5DC CBNZ W9, 0x3CBD5E4
	0x03CBD5E0 BL 0x1C16DFC
	0x03CBD5E4 ADD X0, X31, 0x330
	0x03CBD5E8 MOV V0.16B, V11.16B
	0x03CBD5EC MOV V1.16B, V10.16B
	0x03CBD5F0 MOV V2.16B, V9.16B
	0x03CBD5F4 MOV V3.16B, V8.16B
	0x03CBD5F8 MOV X1, X31
	0x03CBD5FC BL 0x3CC556C
	0x03CBD600 LDR X8, [X31 + 0x30]
	0x03CBD604 LDR X0, [X19]
	0x03CBD608 LDR X10, [X31 + 0x48]
	0x03CBD60C LDR V8, [X31 + 0x330]
	0x03CBD610 LDRB W8, [X8 + 0xBD]
	0x03CBD614 LDR V9, [X31 + 0x334]
	0x03CBD618 LDR V11, [X31 + 0x338]
	0x03CBD61C LDR V10, [X31 + 0x33C]
	0x03CBD620 LDR W9, [X0 + 0xE0]
	0x03CBD624 LDR V14, [X10 + 0xEC]
	0x03CBD628 CMP W8, 0x0
	0x03CBD62C FMOV S0, 1
	0x03CBD630 FCSEL S15, S13, S0, EQ
	0x03CBD634 CBNZ W9, 0x3CBD63C
	0x03CBD638 BL 0x1C16DFC
	0x03CBD63C FMUL S0, S14, S12
	0x03CBD640 FMUL S4, S0, S15
	0x03CBD644 MOV V0.16B, V8.16B
	0x03CBD648 MOV V1.16B, V9.16B
	0x03CBD64C MOV V2.16B, V11.16B
	0x03CBD650 MOV V3.16B, V10.16B
	0x03CBD654 MOV X0, X31
	0x03CBD658 BL 0x3CC55A8
	0x03CBD65C STR S0, [X31 + 0x330]
	0x03CBD660 STR S1, [X31 + 0x334]
	0x03CBD664 STR S2, [X31 + 0x338]
	0x03CBD668 STR S3, [X31 + 0x33C]
	0x03CBD66C B 0x3CBD6BC
	0x03CBD670 ADD X9, X8, X20
	0x03CBD674 LDR W9, [X9 + 0x28]
	0x03CBD678 CMP W9, 0x4
	0x03CBD67C B.NE 0x3CBD6C0
	0x03CBD680 ADRP X9, 0x4A4000
	0x03CBD684 LDR X9, [X9 + 0xB48]
	0x03CBD688 LDP W24, W23, [X8 + 0x2C]
	0x03CBD68C LDR X0, [X9]
	0x03CBD690 LDR X9, [X31 + 0x58]
	0x03CBD694 LDR X25, [X9]
	0x03CBD698 LDR W9, [X0 + 0xE0]
	0x03CBD69C CBNZ W9, 0x3CBD6A4
	0x03CBD6A0 BL 0x1C16DFC
	0x03CBD6A4 MOV X0, X25
	0x03CBD6A8 MOV W1, W24
	0x03CBD6AC MOV W2, W23
	0x03CBD6B0 MOV X3, X31
	0x03CBD6B4 BL 0x3CC5F7C
	0x03CBD6B8 MOV X23, X0
	0x03CBD6BC MOV X13, X28
	0x03CBD6C0 LDR X8, [X13]
	0x03CBD6C4 ADD W21, W21, 0x1
	0x03CBD6C8 ADD X20, X20, 0x18
	0x03CBD6CC CBNZ X8, 0x3CBD4CC
	0x03CBD6D0 B 0x3CBE9A4
	0x03CBD6D4 CBNZ W9, 0x3CBD6C0
	0x03CBD6D8 LDR X19, [X31 + 0x48]
	0x03CBD6DC UBFM W8, W23, 0x18, 0x1F
	0x03CBD6E0 AND W1, W23, 0xFF0000
	0x03CBD6E4 LDR V0, [X31 + 0x330]
	0x03CBD6E8 LDRB W9, [X19 + 0x1AF]
	0x03CBD6EC LDR V1, [X31 + 0x334]
	0x03CBD6F0 LDR V2, [X31 + 0x338]
	0x03CBD6F4 LDR V3, [X31 + 0x33C]
	0x03CBD6F8 CMP W9, W23, LSR
	0x03CBD6FC CSEL W8, W9, W8, CC
	0x03CBD700 BFM W1, W8, 0x8, 0x7
	0x03CBD704 BFM W1, W23, 0x0, 0xF
	0x03CBD708 BFM W1, W23, 0x0, 0x7
	0x03CBD70C ADD X0, X31, 0x280
	0x03CBD710 MOV X2, X31
	0x03CBD714 STR X31, [X31 + 0x288]
	0x03CBD718 STR X31, [X31 + 0x280]
	0x03CBD71C STR W31, [X31 + 0x290]
	0x03CBD720 BL 0x3CC56E0
	0x03CBD724 LDR W8, [X31 + 0x290]
	0x03CBD728 LDR V0, [X31 + 0x28]
	0x03CBD72C ADRP X9, 0x4A4000
	0x03CBD730 LDR X9, [X9 + 0xD30]
	0x03CBD734 STR W8, [X19 + 0x48]
	0x03CBD738 STUR V0, [X19 + 0x38]
	0x03CBD73C LDR V0, [X31 + 0x28]
	0x03CBD740 LDR W8, [X31 + 0x290]
	0x03CBD744 LDR X2, [X9]
	0x03CBD748 ADD X0, X19, 0x238
	0x03CBD74C ADD X1, X31, 0x220
	0x03CBD750 STR V0, [X31 + 0x22]
	0x03CBD754 STR W8, [X31 + 0x230]
	0x03CBD758 BL 0x26E1670
	0x03CBD75C LDR X8, [X31 + 0x20]
	0x03CBD760 CBZ X8, 0x3CBE9A4
	0x03CBD764 LDR X8, [X31 + 0x20]
	0x03CBD768 MOVZ W0, 0x1
	0x03CBD76C STRB W0, [X8 + 0x61]
	0x03CBD770 B 0x3CBB83C
	0x03CBD774 ADRP X9, 0x4A4000
	0x03CBD778 LDR X9, [X9 + 0xB48]
	0x03CBD77C LDP W22, W21, [X8 + 0x2C]
	0x03CBD780 MOV W19, W15
	0x03CBD784 LDR X0, [X9]
	0x03CBD788 LDR W9, [X0 + 0xE0]
	0x03CBD78C CBNZ W9, 0x3CBD794
	0x03CBD790 BL 0x1C16DFC
	0x03CBD794 MOV X0, X25
	0x03CBD798 MOV W1, W22
	0x03CBD79C MOV W2, W21
	0x03CBD7A0 MOV X3, X31
	0x03CBD7A4 BL 0x3CC6208
	0x03CBD7A8 MOVZ W8, 0xC7000000
	0x03CBD7AC FMOV S1, W8
	0x03CBD7B0 FCMP S0, S1
	0x03CBD7B4 B.EQ 0x3CBB838
	0x03CBD7B8 CBZ W19, 0x3CBF1FC
	0x03CBD7BC CMP W19, 0x1
	0x03CBD7C0 B.EQ 0x3CBF228
	0x03CBD7C4 CMP W19, 0x2
	0x03CBD7C8 B.NE 0x3CBF25C
	0x03CBD7CC LDR X9, [X31 + 0x48]
	0x03CBD7D0 MOVZ W8, 0x42C80000
	0x03CBD7D4 LDR V1, [X9 + 0x58]
	0x03CBD7D8 FMUL S0, S0, S1
	0x03CBD7DC FMOV S1, W8
	0x03CBD7E0 FDIV S0, S0, S1
	0x03CBD7E4 B 0x3CBF254
	0x03CBD7E8 LDR X9, [X31 + 0x48]
	0x03CBD7EC MOVZ W1, 0x8
	0x03CBD7F0 LDR W8, [X9 + 0x124]
	0x03CBD7F4 ADD X0, X9, 0x128
	0x03CBD7F8 ORR W8, W8, 0x8
	0x03CBD7FC B 0x3CBDBC0
	0x03CBD800 LDR X19, [X31 + 0x48]
	0x03CBD804 MOVZ W1, 0x1
	0x03CBD808 MOV X2, X31
	0x03CBD80C LDR W8, [X19 + 0x124]
	0x03CBD810 ADD X0, X19, 0x128
	0x03CBD814 ORR W8, W8, 0x1
	0x03CBD818 STR W8, [X19 + 0x124]
	0x03CBD81C BL 0x3CCB578
	0x03CBD820 MOVZ W8, 0x2BC
	0x03CBD824 MOVZ W0, 0x1
	0x03CBD828 STR W8, [X19 + 0x134]
	0x03CBD82C B 0x3CBB83C
	0x03CBD830 LDR X19, [X31 + 0x48]
	0x03CBD834 MOVZ W1, 0x2
	0x03CBD838 MOV X2, X31
	0x03CBD83C LDR W8, [X19 + 0x124]
	0x03CBD840 ADD X0, X19, 0x128
	0x03CBD844 ORR W8, W8, 0x2
	0x03CBD848 STR W8, [X19 + 0x124]
	0x03CBD84C BL 0x3CCB578
	0x03CBD850 LDR X8, [X19 + 0x19D0]
	0x03CBD854 CBZ X8, 0x3CBE9A4
	0x03CBD858 LDR W9, [X8 + 0x18]
	0x03CBD85C CMP W9, 0x1
	0x03CBD860 B.LS 0x3CBF514
	0x03CBD864 LDR W9, [X8 + 0x38]
	0x03CBD868 MOVZ W10, 0xB7C1
	0x03CBD86C MOVK W10, 0x47D0000
	0x03CBD870 CMP W9, W10
	0x03CBD874 B.NE 0x3CBE420
	0x03CBD878 ADRP X9, 0x4A4000
	0x03CBD87C LDR X9, [X9 + 0xB48]
	0x03CBD880 LDP W21, W20, [X8 + 0x44]
	0x03CBD884 LDR X0, [X9]
	0x03CBD888 LDR X9, [X31 + 0x58]
	0x03CBD88C LDR X22, [X9]
	0x03CBD890 LDR W9, [X0 + 0xE0]
	0x03CBD894 CBNZ W9, 0x3CBD89C
	0x03CBD898 BL 0x1C16DFC
	0x03CBD89C MOV X0, X22
	0x03CBD8A0 MOV W1, W21
	0x03CBD8A4 MOV W2, W20
	0x03CBD8A8 MOV X3, X31
	0x03CBD8AC BL 0x3CC6208
	0x03CBD8B0 MOVZ W8, 0x7F800000
	0x03CBD8B4 FMOV S1, W8
	0x03CBD8B8 FCVTZS W9, S0
	0x03CBD8BC FCMP S0, S1
	0x03CBD8C0 MOVZ W8, 0x80000000
	0x03CBD8C4 CSEL W1, W8, W9, EQ
	0x03CBD8C8 ADD W8, W1, 0xB4
	0x03CBD8CC CMP W8, 0x169
	0x03CBD8D0 LDR X8, [X31 + 0x48]
	0x03CBD8D4 STR W1, [X8 + 0x19A4]
	0x03CBD8D8 B.CS 0x3CBB838
	0x03CBD8DC B 0x3CBE440
	0x03CBD8E0 LDR W9, [X8 + 0x28]
	0x03CBD8E4 CMP W9, 0x1
	0x03CBD8E8 B.EQ 0x3CBE9C4
	0x03CBD8EC CBNZ W9, 0x3CBB838
	0x03CBD8F0 CMP W10, 0x2
	0x03CBD8F4 B.LT 0x3CBB978
	0x03CBD8F8 ADRP X9, 0xFFFFFFFFFCE2D000
	0x03CBD8FC LDR V9, [X9 + 0xBC]
	0x03CBD900 MOV X28, X27
	0x03CBD904 MOVZ W24, 0x989B
	0x03CBD908 MOVZ W27, 0xEC60
	0x03CBD90C MOV X19, X31
	0x03CBD910 MOVZ W20, 0x1
	0x03CBD914 MOVK W24, 0x280000
	0x03CBD918 MOVZ W25, 0xC7000000
	0x03CBD91C FMOV S8, 1
	0x03CBD920 FMOV S10, W31
	0x03CBD924 FMOV S11, -1
	0x03CBD928 MOVZ W26, 0x42C80000
	0x03CBD92C MOVK W27, 0x5F40000
	0x03CBD930 CMP W20, W10
	0x03CBD934 B.CS 0x3CBF514
	0x03CBD938 ADD X10, X8, X19
	0x03CBD93C LDR W9, [X10 + 0x38]
	0x03CBD940 CMP W9, W24
	0x03CBD944 B.EQ 0x3CBD958
	0x03CBD948 CMP W9, W27
	0x03CBD94C B.EQ 0x3CBD9F4
	0x03CBD950 CBNZ W9, 0x3CBDB38
	0x03CBD954 B 0x3CBB978
	0x03CBD958 ADRP X8, 0x4A4000
	0x03CBD95C LDR X8, [X8 + 0xB48]
	0x03CBD960 LDP W22, W21, [X10 + 0x44]
	0x03CBD964 LDR X0, [X8]
	0x03CBD968 LDR X8, [X31 + 0x58]
	0x03CBD96C LDR X23, [X8]
	0x03CBD970 LDR W8, [X0 + 0xE0]
	0x03CBD974 CBNZ W8, 0x3CBD97C
	0x03CBD978 BL 0x1C16DFC
	0x03CBD97C MOV X0, X23
	0x03CBD980 MOV W1, W22
	0x03CBD984 MOV W2, W21
	0x03CBD988 MOV X3, X31
	0x03CBD98C BL 0x3CC6208
	0x03CBD990 FMOV S1, W25
	0x03CBD994 FCMP S0, S1
	0x03CBD998 B.EQ 0x3CBB838
	0x03CBD99C LDR X8, [X28]
	0x03CBD9A0 CBZ X8, 0x3CBE9A4
	0x03CBD9A4 LDR W9, [X8 + 0x18]
	0x03CBD9A8 CMP W20, W9
	0x03CBD9AC B.CS 0x3CBF514
	0x03CBD9B0 ADD X9, X8, X19
	0x03CBD9B4 LDR W9, [X9 + 0x4C]
	0x03CBD9B8 CBZ W9, 0x3CBDA94
	0x03CBD9BC CMP W9, 0x1
	0x03CBD9C0 B.EQ 0x3CBDAA8
	0x03CBD9C4 CMP W9, 0x2
	0x03CBD9C8 B.NE 0x3CBDACC
	0x03CBD9CC LDR X9, [X31 + 0x48]
	0x03CBD9D0 LDR V1, [X9 + 0x35C]
	0x03CBD9D4 LDR V2, [X9 + 0x58]
	0x03CBD9D8 FCMP S1, S11
	0x03CBD9DC FCSEL S1, S10, S1, EQ
	0x03CBD9E0 FSUB S1, S2, S1
	0x03CBD9E4 FMUL S0, S0, S1
	0x03CBD9E8 FMOV S1, W26
	0x03CBD9EC FDIV S0, S0, S1
	0x03CBD9F0 B 0x3CBDAD4
	0x03CBD9F4 ADRP X9, 0x4A4000
	0x03CBD9F8 LDR X9, [X9 + 0xB48]
	0x03CBD9FC ADD X8, X8, X19
	0x03CBDA00 LDP W23, W21, [X8 + 0x44]
	0x03CBDA04 LDR X0, [X9]
	0x03CBDA08 LDR X9, [X31 + 0x58]
	0x03CBDA0C LDR X22, [X9]
	0x03CBDA10 LDR W9, [X0 + 0xE0]
	0x03CBDA14 CBNZ W9, 0x3CBDA1C
	0x03CBDA18 BL 0x1C16DFC
	0x03CBDA1C MOV X0, X22
	0x03CBDA20 MOV W1, W23
	0x03CBDA24 MOV W2, W21
	0x03CBDA28 MOV X3, X31
	0x03CBDA2C BL 0x3CC6208
	0x03CBDA30 FMOV S1, W25
	0x03CBDA34 FCMP S0, S1
	0x03CBDA38 B.EQ 0x3CBB838
	0x03CBDA3C LDR X8, [X28]
	0x03CBDA40 CBZ X8, 0x3CBE9A4
	0x03CBDA44 LDR W9, [X8 + 0x18]
	0x03CBDA48 CMP W20, W9
	0x03CBDA4C B.CS 0x3CBF514
	0x03CBDA50 ADD X9, X8, X19
	0x03CBDA54 LDR W9, [X9 + 0x4C]
	0x03CBDA58 CBZ W9, 0x3CBDAE8
	0x03CBDA5C CMP W9, 0x1
	0x03CBDA60 B.EQ 0x3CBDAFC
	0x03CBDA64 CMP W9, 0x2
	0x03CBDA68 B.NE 0x3CBDB20
	0x03CBDA6C LDR X9, [X31 + 0x48]
	0x03CBDA70 LDR V1, [X9 + 0x35C]
	0x03CBDA74 LDR V2, [X9 + 0x58]
	0x03CBDA78 FCMP S1, S11
	0x03CBDA7C FCSEL S1, S10, S1, EQ
	0x03CBDA80 FSUB S1, S2, S1
	0x03CBDA84 FMUL S0, S0, S1
	0x03CBDA88 FMOV S1, W26
	0x03CBDA8C FDIV S0, S0, S1
	0x03CBDA90 B 0x3CBDB28
	0x03CBDA94 LDR X9, [X31 + 0x30]
	0x03CBDA98 LDRB W9, [X9 + 0xBD]
	0x03CBDA9C CMP W9, 0x0
	0x03CBDAA0 FCSEL S1, S9, S8, EQ
	0x03CBDAA4 B 0x3CBDAC4
	0x03CBDAA8 LDR X9, [X31 + 0x30]
	0x03CBDAAC LDR X10, [X31 + 0x48]
	0x03CBDAB0 LDRB W9, [X9 + 0xBD]
	0x03CBDAB4 LDR V1, [X10 + 0xF4]
	0x03CBDAB8 CMP W9, 0x0
	0x03CBDABC FCSEL S2, S9, S8, EQ
	0x03CBDAC0 FMUL S0, S0, S2
	0x03CBDAC4 FMUL S0, S0, S1
	0x03CBDAC8 B 0x3CBDAD4
	0x03CBDACC LDR X9, [X31 + 0x48]
	0x03CBDAD0 LDR V0, [X9 + 0x354]
	0x03CBDAD4 LDR X9, [X31 + 0x48]
	0x03CBDAD8 FCMP S0, 0x0
	0x03CBDADC FCSEL S0, S0, S10, GE
	0x03CBDAE0 STR S0, [X9 + 0x354]
	0x03CBDAE4 B 0x3CBDB38
	0x03CBDAE8 LDR X9, [X31 + 0x30]
	0x03CBDAEC LDRB W9, [X9 + 0xBD]
	0x03CBDAF0 CMP W9, 0x0
	0x03CBDAF4 FCSEL S1, S9, S8, EQ
	0x03CBDAF8 B 0x3CBDB18
	0x03CBDAFC LDR X9, [X31 + 0x30]
	0x03CBDB00 LDR X10, [X31 + 0x48]
	0x03CBDB04 LDRB W9, [X9 + 0xBD]
	0x03CBDB08 LDR V1, [X10 + 0xF4]
	0x03CBDB0C CMP W9, 0x0
	0x03CBDB10 FCSEL S2, S9, S8, EQ
	0x03CBDB14 FMUL S0, S0, S2
	0x03CBDB18 FMUL S0, S0, S1
	0x03CBDB1C B 0x3CBDB28
	0x03CBDB20 LDR X9, [X31 + 0x48]
	0x03CBDB24 LDR V0, [X9 + 0x358]
	0x03CBDB28 LDR X9, [X31 + 0x48]
	0x03CBDB2C FCMP S0, 0x0
	0x03CBDB30 FCSEL S0, S0, S10, GE
	0x03CBDB34 STR S0, [X9 + 0x358]
	0x03CBDB38 LDR W10, [X8 + 0x18]
	0x03CBDB3C ADD W20, W20, 0x1
	0x03CBDB40 ADD X19, X19, 0x18
	0x03CBDB44 MOVZ W0, 0x1
	0x03CBDB48 CMP W20, W10
	0x03CBDB4C B.LT 0x3CBD930
	0x03CBDB50 B 0x3CBB83C
	0x03CBDB54 ADRP X9, 0x4A4000
	0x03CBDB58 LDR X9, [X9 + 0xB48]
	0x03CBDB5C LDP W22, W21, [X8 + 0x2C]
	0x03CBDB60 LDR X0, [X9]
	0x03CBDB64 LDR W9, [X0 + 0xE0]
	0x03CBDB68 CBNZ W9, 0x3CBDB70
	0x03CBDB6C BL 0x1C16DFC
	0x03CBDB70 MOV X0, X25
	0x03CBDB74 MOV W1, W22
	0x03CBDB78 MOV W2, W21
	0x03CBDB7C MOV X3, X31
	0x03CBDB80 BL 0x3CC6208
	0x03CBDB84 MOVZ W8, 0xC7000000
	0x03CBDB88 FMOV S1, W8
	0x03CBDB8C FCMP S0, S1
	0x03CBDB90 B.EQ 0x3CBB838
	0x03CBDB94 CBZ W19, 0x3CBF288
	0x03CBDB98 CMP W19, 0x1
	0x03CBDB9C B.EQ 0x3CBF2B4
	0x03CBDBA0 CMP W19, 0x2
	0x03CBDBA4 B.EQ 0x3CBB838
	0x03CBDBA8 B 0x3CBB978
	0x03CBDBAC LDR X9, [X31 + 0x48]
	0x03CBDBB0 MOVZ W1, 0x20
	0x03CBDBB4 LDR W8, [X9 + 0x124]
	0x03CBDBB8 ADD X0, X9, 0x128
	0x03CBDBBC ORR W8, W8, 0x20
	0x03CBDBC0 STR W8, [X9 + 0x124]
	0x03CBDBC4 MOV X2, X31
	0x03CBDBC8 BL 0x3CCB578
	0x03CBDBCC B 0x3CBB978
	0x03CBDBD0 ADRP X19, 0x71B000
	0x03CBDBD4 LDRB W8, [X19 + 0x793]
	0x03CBDBD8 CBNZ W8, 0x3CBDBF0
	0x03CBDBDC ADRP X0, 0x437000
	0x03CBDBE0 LDR X0, [X0 + 0x5A8]
	0x03CBDBE4 BL 0x1C16CF4
	0x03CBDBE8 MOVZ W8, 0x1
	0x03CBDBEC STRB W8, [X19 + 0x793]
	0x03CBDBF0 ADRP X8, 0x437000
	0x03CBDBF4 LDR X8, [X8 + 0x5A8]
	0x03CBDBF8 LDR X8, [X8]
	0x03CBDBFC LDR X8, [X8 + 0xB8]
	0x03CBDC00 LDR V0, [X8]
	0x03CBDC04 LDR X8, [X31 + 0x28]
	0x03CBDC08 ADD X8, X8, 0x43C
	0x03CBDC0C STR V0, [X8]
	0x03CBDC10 B 0x3CBB978
	0x03CBDC14 LDR X8, [X31 + 0x48]
	0x03CBDC18 LDR X0, [X8 + 0x68]
	0x03CBDC1C CBZ X0, 0x3CBE9A4
	0x03CBDC20 LDR X8, [X31 + 0x48]
	0x03CBDC24 MOV X1, X31
	0x03CBDC28 LDR V8, [X8 + 0xF0]
	0x03CBDC2C ADD X8, X31, 0x220
	0x03CBDC30 BL 0x3C9EB14
	0x03CBDC34 ADD X0, X31, 0x2A0
	0x03CBDC38 ADD X1, X31, 0x220
	0x03CBDC3C MOVZ W2, 0x60
	0x03CBDC40 BL 0x3EB1AC0
	0x03CBDC44 ADD X0, X31, 0x2A0
	0x03CBDC48 MOV X1, X31
	0x03CBDC4C BL 0x3C9C018
	0x03CBDC50 FCMP S0, 0x0
	0x03CBDC54 FMOV S0, 1
	0x03CBDC58 B.LE 0x3CBDC90
	0x03CBDC5C LDR X8, [X31 + 0x48]
	0x03CBDC60 LDR X0, [X8 + 0x68]
	0x03CBDC64 CBZ X0, 0x3CBE9A4
	0x03CBDC68 ADD X8, X31, 0x220
	0x03CBDC6C MOV X1, X31
	0x03CBDC70 BL 0x3C9EB14
	0x03CBDC74 ADD X0, X31, 0x2A0
	0x03CBDC78 ADD X1, X31, 0x220
	0x03CBDC7C MOVZ W2, 0x60
	0x03CBDC80 BL 0x3EB1AC0
	0x03CBDC84 ADD X0, X31, 0x2A0
	0x03CBDC88 MOV X1, X31
	0x03CBDC8C BL 0x3C9C018
	0x03CBDC90 LDR X19, [X31 + 0x48]
	0x03CBDC94 FMUL S1, S8, S0
	0x03CBDC98 ADRP X8, 0x4A4000
	0x03CBDC9C STR S1, [X19 + 0xF0]
	0x03CBDCA0 LDR V0, [X19 + 0x180]
	0x03CBDCA4 LDR X8, [X8 + 0xD38]
	0x03CBDCA8 ADD X0, X19, 0x188
	0x03CBDCAC LDR X1, [X8]
	0x03CBDCB0 BL 0x26E32F8
	0x03CBDCB4 LDR X0, [X19 + 0x68]
	0x03CBDCB8 CBZ X0, 0x3CBE9A4
	0x03CBDCBC LDR X19, [X31 + 0x48]
	0x03CBDCC0 ADD X8, X31, 0x220
	0x03CBDCC4 MOV X1, X31
	0x03CBDCC8 LDR V8, [X19 + 0xF4]
	0x03CBDCCC BL 0x3C9EB14
	0x03CBDCD0 ADD X0, X31, 0x2A0
	0x03CBDCD4 ADD X1, X31, 0x220
	0x03CBDCD8 MOVZ W2, 0x60
	0x03CBDCDC BL 0x3EB1AC0
	0x03CBDCE0 ADD X0, X31, 0x2A0
	0x03CBDCE4 MOV X1, X31
	0x03CBDCE8 BL 0x3C9BF88
	0x03CBDCEC LDR X9, [X19 + 0x68]
	0x03CBDCF0 CBZ X9, 0x3CBE9A4
	0x03CBDCF4 MOV W21, W0
	0x03CBDCF8 ADD X8, X31, 0x220
	0x03CBDCFC MOV X0, X9
	0x03CBDD00 MOV X1, X31
	0x03CBDD04 BL 0x3C9EB14
	0x03CBDD08 ADD X0, X31, 0x2A0
	0x03CBDD0C ADD X1, X31, 0x220
	0x03CBDD10 MOVZ W2, 0x60
	0x03CBDD14 BL 0x3EB1AC0
	0x03CBDD18 ADD X0, X31, 0x2A0
	0x03CBDD1C MOV X1, X31
	0x03CBDD20 BL 0x3C9BF98
	0x03CBDD24 LDR X8, [X31 + 0x48]
	0x03CBDD28 LDR X0, [X8 + 0x68]
	0x03CBDD2C CBZ X0, 0x3CBE9A4
	0x03CBDD30 LDR X8, [X31 + 0x30]
	0x03CBDD34 LDR X19, [X31 + 0x48]
	0x03CBDD38 ADRP X9, 0xFFFFFFFFFCE2D000
	0x03CBDD3C LDR V2, [X9 + 0xBC]
	0x03CBDD40 LDRB W8, [X8 + 0xBD]
	0x03CBDD44 SCVTF S1, W21
	0x03CBDD48 LDR V9, [X19 + 0x180]
	0x03CBDD4C FDIV S1, S8, S1
	0x03CBDD50 FMUL S0, S1, S0
	0x03CBDD54 CMP W8, 0x0
	0x03CBDD58 FMOV S1, 1
	0x03CBDD5C FCSEL S1, S2, S1, EQ
	0x03CBDD60 ADD X8, X31, 0x220
	0x03CBDD64 MOV X1, X31
	0x03CBDD68 FMUL S8, S0, S1
	0x03CBDD6C BL 0x3C9EB14
	0x03CBDD70 ADD X0, X31, 0x2A0
	0x03CBDD74 ADD X1, X31, 0x220
	0x03CBDD78 MOVZ W2, 0x60
	0x03CBDD7C BL 0x3EB1AC0
	0x03CBDD80 ADD X0, X31, 0x2A0
	0x03CBDD84 MOV X1, X31
	0x03CBDD88 BL 0x3C9C008
	0x03CBDD8C LDR V1, [X19 + 0xF0]
	0x03CBDD90 FMUL S0, S8, S0
	0x03CBDD94 ADD X0, X19, 0x128
	0x03CBDD98 MOVZ W1, 0x80
	0x03CBDD9C FMUL S0, S0, S1
	0x03CBDDA0 FADD S0, S9, S0
	0x03CBDDA4 MOV X2, X31
	0x03CBDDA8 STR S0, [X19 + 0x180]
	0x03CBDDAC BL 0x3CCB578
	0x03CBDDB0 LDR W8, [X19 + 0x124]
	0x03CBDDB4 ORR W8, W8, 0x80
	0x03CBDDB8 STR W8, [X19 + 0x124]
	0x03CBDDBC B 0x3CBB978
	0x03CBDDC0 LDR X8, [X31 + 0x48]
	0x03CBDDC4 LDRB W8, [X8 + 0x125]
	0x03CBDDC8 TBZ X8, 0x0, 0x3CBB978
	0x03CBDDCC LDR X8, [X31 + 0x48]
	0x03CBDDD0 FMOV S1, 1
	0x03CBDDD4 LDR V0, [X8 + 0xF0]
	0x03CBDDD8 FCMP S0, S1
	0x03CBDDDC B.PL 0x3CBDE80
	0x03CBDDE0 ADRP X8, 0x4A4000
	0x03CBDDE4 LDR X8, [X8 + 0xD28]
	0x03CBDDE8 LDR X19, [X31 + 0x48]
	0x03CBDDEC LDR X1, [X8]
	0x03CBDDF0 ADD X0, X19, 0x188
	0x03CBDDF4 BL 0x26E33C4
	0x03CBDDF8 LDR X0, [X19 + 0x68]
	0x03CBDDFC STR S0, [X19 + 0x180]
	0x03CBDE00 CBZ X0, 0x3CBE9A4
	0x03CBDE04 LDR X8, [X31 + 0x48]
	0x03CBDE08 MOV X1, X31
	0x03CBDE0C LDR V8, [X8 + 0xF0]
	0x03CBDE10 ADD X8, X31, 0x220
	0x03CBDE14 BL 0x3C9EB14
	0x03CBDE18 ADD X0, X31, 0x2A0
	0x03CBDE1C ADD X1, X31, 0x220
	0x03CBDE20 MOVZ W2, 0x60
	0x03CBDE24 BL 0x3EB1AC0
	0x03CBDE28 ADD X0, X31, 0x2A0
	0x03CBDE2C MOV X1, X31
	0x03CBDE30 BL 0x3C9C038
	0x03CBDE34 FCMP S0, 0x0
	0x03CBDE38 FMOV S0, 1
	0x03CBDE3C B.LE 0x3CBDE74
	0x03CBDE40 LDR X8, [X31 + 0x48]
	0x03CBDE44 LDR X0, [X8 + 0x68]
	0x03CBDE48 CBZ X0, 0x3CBE9A4
	0x03CBDE4C ADD X8, X31, 0x220
	0x03CBDE50 MOV X1, X31
	0x03CBDE54 BL 0x3C9EB14
	0x03CBDE58 ADD X0, X31, 0x2A0
	0x03CBDE5C ADD X1, X31, 0x220
	0x03CBDE60 MOVZ W2, 0x60
	0x03CBDE64 BL 0x3EB1AC0
	0x03CBDE68 ADD X0, X31, 0x2A0
	0x03CBDE6C MOV X1, X31
	0x03CBDE70 BL 0x3C9C038
	0x03CBDE74 LDR X8, [X31 + 0x48]
	0x03CBDE78 FDIV S0, S8, S0
	0x03CBDE7C STR S0, [X8 + 0xF0]
	0x03CBDE80 LDR X8, [X31 + 0x48]
	0x03CBDE84 MOVZ W1, 0x100
	0x03CBDE88 MOV X2, X31
	0x03CBDE8C ADD X0, X8, 0x128
	0x03CBDE90 BL 0x3CCB674
	0x03CBDE94 ANDS W31, W0, 0xFF
	0x03CBDE98 B.NE 0x3CBB978
	0x03CBDE9C LDR X9, [X31 + 0x48]
	0x03CBDEA0 LDR W8, [X9 + 0x124]
	0x03CBDEA4 AND W8, W8, 0xFFFFFEFF
	0x03CBDEA8 B 0x3CBE110
	0x03CBDEAC ADRP X8, 0x4A4000
	0x03CBDEB0 LDR X8, [X8 + 0xD68]
	0x03CBDEB4 LDR X19, [X31 + 0x48]
	0x03CBDEB8 LDR X1, [X8]
	0x03CBDEBC ADD X0, X19, 0x290
	0x03CBDEC0 BL 0x26E2D70
	0x03CBDEC4 STR X0, [X19 + 0x288]
	0x03CBDEC8 B 0x3CBB978
	0x03CBDECC LDR W1, [X8 + 0x24]
	0x03CBDED0 LDR X8, [X31 + 0x28]
	0x03CBDED4 STR W1, [X31 + 0x30C]
	0x03CBDED8 LDRB W8, [X8 + 0x1]
	0x03CBDEDC CBZ W8, 0x3CBB978
	0x03CBDEE0 ADRP X8, 0x4A4000
	0x03CBDEE4 LDR X8, [X8 + 0xCE0]
	0x03CBDEE8 LDR X19, [X31 + 0x48]
	0x03CBDEEC LDR X2, [X8]
	0x03CBDEF0 ADD X0, X19, 0x2C0
	0x03CBDEF4 BL 0x26E1B78
	0x03CBDEF8 ADD X0, X31, 0x30C
	0x03CBDEFC MOV X1, X31
	0x03CBDF00 BL 0x337B6E0
	0x03CBDF04 MOV X20, X0
	0x03CBDF08 ADD X0, X19, 0x324
	0x03CBDF0C MOV X1, X31
	0x03CBDF10 BL 0x337B6E0
	0x03CBDF14 ADRP X8, 0x49C000
	0x03CBDF18 LDR X8, [X8 + 0x2E8]
	0x03CBDF1C ADRP X9, 0x49C000
	0x03CBDF20 LDR X9, [X9 + 0x2F0]
	0x03CBDF24 MOV X3, X0
	0x03CBDF28 LDR X8, [X8]
	0x03CBDF2C MOV X1, X20
	0x03CBDF30 LDR X2, [X9]
	0x03CBDF34 MOV X4, X31
	0x03CBDF38 MOV X0, X8
	0x03CBDF3C BL 0x32277C4
	0x03CBDF40 ADRP X8, 0x436000
	0x03CBDF44 LDR X8, [X8 + 0xA28]
	0x03CBDF48 MOV X19, X0
	0x03CBDF4C LDR X8, [X8]
	0x03CBDF50 LDR W9, [X8 + 0xE0]
	0x03CBDF54 CBNZ W9, 0x3CBDF60
	0x03CBDF58 MOV X0, X8
	0x03CBDF5C BL 0x1C16DFC
	0x03CBDF60 MOV X0, X19
	0x03CBDF64 MOV X1, X31
	0x03CBDF68 BL 0x3C06048
	0x03CBDF6C B 0x3CBB978
	0x03CBDF70 LDR W20, [X8 + 0x24]
	0x03CBDF74 MOVZ W8, 0xB04B
	0x03CBDF78 MOVK W8, 0xDAFC0000
	0x03CBDF7C CMP W20, W8
	0x03CBDF80 B.NE 0x3CBE374
	0x03CBDF84 LDR X8, [X31 + 0x48]
	0x03CBDF88 LDR X8, [X8 + 0x15B8]
	0x03CBDF8C CBZ X8, 0x3CBE9A4
	0x03CBDF90 LDR W9, [X8 + 0x18]
	0x03CBDF94 CBZ W9, 0x3CBF514
	0x03CBDF98 LDR X9, [X8 + 0x38]
	0x03CBDF9C LDR X10, [X31 + 0x48]
	0x03CBDFA0 STR W31, [X10 + 0x78]
	0x03CBDFA4 STR X9, [X10 + 0x70]
	0x03CBDFA8 LDP V0, V1, [X8 + 0x20]
	0x03CBDFAC LDR X9, [X8 + 0x50]
	0x03CBDFB0 LDR V2, [X8 + 0x4]
	0x03CBDFB4 ADRP X8, 0x4A4000
	0x03CBDFB8 LDR X8, [X8 + 0xCE8]
	0x03CBDFBC ADD X0, X10, 0x80
	0x03CBDFC0 STR X9, [X31 + 0x110]
	0x03CBDFC4 STP V1, V2, [X31 + 0xF0]
	0x03CBDFC8 LDR X2, [X8]
	0x03CBDFCC STR V0, [X31 + 0xE]
	0x03CBDFD0 ADD X1, X31, 0x220
	0x03CBDFD4 STP V0, V1, [X31 + 0x220]
	0x03CBDFD8 STR V2, [X31 + 0x24]
	0x03CBDFDC STR X9, [X31 + 0x250]
	0x03CBDFE0 B 0x3CBEC04
	0x03CBDFE4 ADRP X8, 0x4A4000
	0x03CBDFE8 LDR X8, [X8 + 0xD70]
	0x03CBDFEC LDR X19, [X31 + 0x48]
	0x03CBDFF0 LDR X1, [X8]
	0x03CBDFF4 ADD X0, X19, 0x1B8
	0x03CBDFF8 BL 0x26E1014
	0x03CBDFFC STR W0, [X19 + 0x1AC]
	0x03CBE000 B 0x3CBB978
	0x03CBE004 LDR X19, [X31 + 0x48]
	0x03CBE008 MOVZ W1, 0x4
	0x03CBE00C MOV X2, X31
	0x03CBE010 LDR W8, [X19 + 0x124]
	0x03CBE014 ADD X0, X19, 0x128
	0x03CBE018 ORR W8, W8, 0x4
	0x03CBE01C STR W8, [X19 + 0x124]
	0x03CBE020 BL 0x3CCB578
	0x03CBE024 LDR X8, [X19 + 0x19D0]
	0x03CBE028 CBZ X8, 0x3CBE9A4
	0x03CBE02C LDR W9, [X8 + 0x18]
	0x03CBE030 CMP W9, 0x1
	0x03CBE034 B.LS 0x3CBF514
	0x03CBE038 LDR W9, [X8 + 0x38]
	0x03CBE03C MOVZ W10, 0x381D
	0x03CBE040 MOVK W10, 0x4E30000
	0x03CBE044 CMP W9, W10
	0x03CBE048 B.NE 0x3CBE45C
	0x03CBE04C ADRP X9, 0x4A3000
	0x03CBE050 LDR X9, [X9 + 0xB48]
	0x03CBE054 LDP W22, W20, [X8 + 0x44]
	0x03CBE058 LDR X0, [X9]
	0x03CBE05C LDR X9, [X31 + 0x58]
	0x03CBE060 LDR X23, [X9]
	0x03CBE064 LDR W9, [X0 + 0xE0]
	0x03CBE068 CBNZ W9, 0x3CBE070
	0x03CBE06C BL 0x1C16DFC
	0x03CBE070 MOV X0, X23
	0x03CBE074 MOV W1, W22
	0x03CBE078 MOV W2, W20
	0x03CBE07C MOV X3, X31
	0x03CBE080 BL 0x3CC5F7C
	0x03CBE084 LDR X10, [X31 + 0x48]
	0x03CBE088 LDRB W8, [X10 + 0x1AF]
	0x03CBE08C ADD X9, X10, 0x1B0
	0x03CBE090 STR W0, [X10 + 0x1B0]
	0x03CBE094 UBFM X10, X0, 0x18, 0x3F
	0x03CBE098 CMP W8, W10, UXTB
	0x03CBE09C CSEL W8, W8, W10, CC
	0x03CBE0A0 STRB W8, [X9 + 0x3]
	0x03CBE0A4 LDR X8, [X31 + 0x20]
	0x03CBE0A8 CBZ X8, 0x3CBE9A4
	0x03CBE0AC LDR X9, [X31 + 0x20]
	0x03CBE0B0 MOVZ W8, 0x1
	0x03CBE0B4 STRB W8, [X9 + 0x61]
	0x03CBE0B8 LDR X8, [X31 + 0x48]
	0x03CBE0BC LDR W8, [X8 + 0x1B0]
	0x03CBE0C0 B 0x3CBE468
	0x03CBE0C4 LDR X8, [X31 + 0x30]
	0x03CBE0C8 LDRB W8, [X8 + 0x60]
	0x03CBE0CC TBNZ X8, 0x1, 0x3CBB978
	0x03CBE0D0 ADRP X8, 0x4A3000
	0x03CBE0D4 LDR X8, [X8 + 0xD40]
	0x03CBE0D8 LDR X19, [X31 + 0x48]
	0x03CBE0DC LDR X1, [X8]
	0x03CBE0E0 ADD X0, X19, 0x268
	0x03CBE0E4 BL 0x26E1BC0
	0x03CBE0E8 STR W0, [X19 + 0x19A4]
	0x03CBE0EC ADD X0, X19, 0x128
	0x03CBE0F0 MOVZ W1, 0x2
	0x03CBE0F4 MOV X2, X31
	0x03CBE0F8 BL 0x3CCB674
	0x03CBE0FC ANDS W31, W0, 0xFF
	0x03CBE100 B.NE 0x3CBB978
	0x03CBE104 LDR X9, [X31 + 0x48]
	0x03CBE108 LDR W8, [X9 + 0x124]
	0x03CBE10C AND W8, W8, 0xFFFFFFFD
	0x03CBE110 STR W8, [X9 + 0x124]
	0x03CBE114 B 0x3CBB978
	0x03CBE118 LDP W22, W20, [X8 + 0x38]
	0x03CBE11C ADD X1, X31, 0x328
	0x03CBE120 MOV X2, X31
	0x03CBE124 BL 0x3CAA334
	0x03CBE128 ADRP X19, 0x435000
	0x03CBE12C LDR X19, [X19 + 0x598]
	0x03CBE130 LDR X21, [X31 + 0x328]
	0x03CBE134 LDR X0, [X19]
	0x03CBE138 LDR W8, [X0 + 0xE0]
	0x03CBE13C CBNZ W8, 0x3CBE144
	0x03CBE140 BL 0x1C16DFC
	0x03CBE144 MOV X0, X21
	0x03CBE148 MOV X1, X31
	0x03CBE14C MOV X2, X31
	0x03CBE150 BL 0x3C3883C
	0x03CBE154 TBZ X0, 0x0, 0x3CBEFC0
	0x03CBE158 LDR X0, [X19]
	0x03CBE15C LDR X21, [X31 + 0x328]
	0x03CBE160 LDR W8, [X0 + 0xE0]
	0x03CBE164 CBNZ W8, 0x3CBE16C
	0x03CBE168 BL 0x1C16DFC
	0x03CBE16C MOV X0, X21
	0x03CBE170 MOV X1, X31
	0x03CBE174 MOV X2, X31
	0x03CBE178 BL 0x3C3883C
	0x03CBE17C TBZ X0, 0x0, 0x3CBEF8C
	0x03CBE180 LDR X8, [X31 + 0x18]
	0x03CBE184 CBZ X8, 0x3CBE9A4
	0x03CBE188 LDR X8, [X27]
	0x03CBE18C CBZ X8, 0x3CBE9A4
	0x03CBE190 LDR W9, [X8 + 0x18]
	0x03CBE194 CBZ W9, 0x3CBF514
	0x03CBE198 LDR X9, [X31 + 0x18]
	0x03CBE19C LDP W2, W3, [X8 + 0x2C]
	0x03CBE1A0 MOV X0, X31
	0x03CBE1A4 MOV X4, X31
	0x03CBE1A8 LDR X21, [X9 + 0x28]
	0x03CBE1AC LDR X9, [X31 + 0x58]
	0x03CBE1B0 LDR X1, [X9]
	0x03CBE1B4 BL 0x322EAE4
	0x03CBE1B8 MOV X1, X0
	0x03CBE1BC MOV X0, X21
	0x03CBE1C0 MOV X2, X31
	0x03CBE1C4 BL 0x321B938
	0x03CBE1C8 ADRP X8, 0x4A3000
	0x03CBE1CC LDR X8, [X8 + 0xCC0]
	0x03CBE1D0 LDR X1, [X8]
	0x03CBE1D4 BL 0x2241FB8
	0x03CBE1D8 MOV X21, X0
	0x03CBE1DC STR X0, [X31 + 0x328]
	0x03CBE1E0 B 0x3CBEF90
	0x03CBE1E4 ADD X1, X31, 0x310
	0x03CBE1E8 MOV W0, W21
	0x03CBE1EC MOV X2, X31
	0x03CBE1F0 BL 0x3CAA3D0
	0x03CBE1F4 TBNZ X0, 0x0, 0x3CBE2E4
	0x03CBE1F8 ADRP X19, 0x435000
	0x03CBE1FC LDR X19, [X19 + 0x598]
	0x03CBE200 LDR X20, [X31 + 0x310]
	0x03CBE204 LDR X0, [X19]
	0x03CBE208 LDR W8, [X0 + 0xE0]
	0x03CBE20C CBNZ W8, 0x3CBE214
	0x03CBE210 BL 0x1C16DFC
	0x03CBE214 MOV X0, X20
	0x03CBE218 MOV X1, X31
	0x03CBE21C MOV X2, X31
	0x03CBE220 BL 0x3C3883C
	0x03CBE224 TBZ X0, 0x0, 0x3CBE2AC
	0x03CBE228 LDR X0, [X19]
	0x03CBE22C LDR X20, [X31 + 0x310]
	0x03CBE230 LDR W8, [X0 + 0xE0]
	0x03CBE234 CBNZ W8, 0x3CBE23C
	0x03CBE238 BL 0x1C16DFC
	0x03CBE23C MOV X0, X20
	0x03CBE240 MOV X1, X31
	0x03CBE244 MOV X2, X31
	0x03CBE248 BL 0x3C3883C
	0x03CBE24C TBZ X0, 0x0, 0x3CBE2AC
	0x03CBE250 LDR X8, [X31 + 0x18]
	0x03CBE254 CBZ X8, 0x3CBE9A4
	0x03CBE258 LDR X8, [X27]
	0x03CBE25C CBZ X8, 0x3CBE9A4
	0x03CBE260 LDR W9, [X8 + 0x18]
	0x03CBE264 CBZ W9, 0x3CBF514
	0x03CBE268 LDR X9, [X31 + 0x18]
	0x03CBE26C LDP W2, W3, [X8 + 0x2C]
	0x03CBE270 MOV X0, X31
	0x03CBE274 MOV X4, X31
	0x03CBE278 LDR X20, [X9 + 0x50]
	0x03CBE27C LDR X9, [X31 + 0x58]
	0x03CBE280 LDR X1, [X9]
	0x03CBE284 BL 0x322EAE4
	0x03CBE288 MOV X1, X0
	0x03CBE28C MOV X0, X20
	0x03CBE290 MOV X2, X31
	0x03CBE294 BL 0x321B938
	0x03CBE298 ADRP X8, 0x4A3000
	0x03CBE29C LDR X8, [X8 + 0xCC8]
	0x03CBE2A0 LDR X1, [X8]
	0x03CBE2A4 BL 0x2241FB8
	0x03CBE2A8 STR X0, [X31 + 0x310]
	0x03CBE2AC LDR X0, [X19]
	0x03CBE2B0 LDR X20, [X31 + 0x310]
	0x03CBE2B4 LDR W8, [X0 + 0xE0]
	0x03CBE2B8 CBNZ W8, 0x3CBE2C0
	0x03CBE2BC BL 0x1C16DFC
	0x03CBE2C0 MOV X0, X20
	0x03CBE2C4 MOV X1, X31
	0x03CBE2C8 MOV X2, X31
	0x03CBE2CC BL 0x3C3883C
	0x03CBE2D0 TBNZ X0, 0x0, 0x3CBB838
	0x03CBE2D4 LDR X1, [X31 + 0x310]
	0x03CBE2D8 MOV W0, W21
	0x03CBE2DC MOV X2, X31
	0x03CBE2E0 BL 0x3CAA0C4
	0x03CBE2E4 LDR X8, [X31 + 0x310]
	0x03CBE2E8 LDR X9, [X31 + 0x48]
	0x03CBE2EC STR X8, [X9 + 0xE0]
	0x03CBE2F0 B 0x3CBE508
	0x03CBE2F4 MOVZ W9, 0x89CB
	0x03CBE2F8 MOVK W9, 0xA1290000
	0x03CBE2FC CMP W8, W9
	0x03CBE300 B.EQ 0x3CBEC0C
	0x03CBE304 MOVZ W9, 0x989B
	0x03CBE308 MOVK W9, 0x280000
	0x03CBE30C CMP W8, W9
	0x03CBE310 B.NE 0x3CBB838
	0x03CBE314 LDR X9, [X31 + 0x48]
	0x03CBE318 MOVZ W8, 0x201
	0x03CBE31C MOVZ W1, 0x201
	0x03CBE320 B 0x3CBEF70
	0x03CBE324 CMP W21, 0xB
	0x03CBE328 B.NE 0x3CBEA4C
	0x03CBE32C CMP W9, 0x23
	0x03CBE330 B.NE 0x3CBEA4C
	0x03CBE334 ADRP X8, 0x4A3000
	0x03CBE338 LDR X8, [X8 + 0xB48]
	0x03CBE33C LDR X0, [X8]
	0x03CBE340 LDR W8, [X0 + 0xE0]
	0x03CBE344 CBNZ W8, 0x3CBE34C
	0x03CBE348 BL 0x1C16DFC
	0x03CBE34C MOVZ W1, 0xB
	0x03CBE350 B 0x3CBF160
	0x03CBE354 ADRP X8, 0x4A3000
	0x03CBE358 LDR X8, [X8 + 0xD20]
	0x03CBE35C MOV X0, X20
	0x03CBE360 LDR X1, [X8]
	0x03CBE364 BL 0x26E229C
	0x03CBE368 LDR X8, [X31 + 0x48]
	0x03CBE36C STR W0, [X8 + 0x134]
	0x03CBE370 B 0x3CBB978
	0x03CBE374 ADD X1, X31, 0x320
	0x03CBE378 MOV W0, W20
	0x03CBE37C MOV X2, X31
	0x03CBE380 BL 0x3CAA508
	0x03CBE384 TBZ X0, 0x0, 0x3CBEAE0
	0x03CBE388 LDR X19, [X31 + 0x48]
	0x03CBE38C LDR X0, [X31 + 0x320]
	0x03CBE390 MOVZ W8, 0x15B8
	0x03CBE394 MOV X4, X31
	0x03CBE398 LDR X1, [X19 + 0x68]
	0x03CBE39C LDR X3, [X19 + 0x19E0]
	0x03CBE3A0 ADD X2, X19, X8
	0x03CBE3A4 STR X0, [X19 + 0x70]
	0x03CBE3A8 BL 0x3CA994C
	0x03CBE3AC LDR X9, [X19 + 0x15B8]
	0x03CBE3B0 STR W0, [X19 + 0x78]
	0x03CBE3B4 CBZ X9, 0x3CBE9A4
	0x03CBE3B8 LDR W8, [X9 + 0x18]
	0x03CBE3BC CMP W0, W8
	0x03CBE3C0 B.CS 0x3CBF514
	0x03CBE3C4 MOVZ W10, 0x38
	0x03CBE3C8 SMADDL X9, X0, X10, X9
	0x03CBE3CC ADRP X10, 0x4A3000
	0x03CBE3D0 LDR X8, [X31 + 0x48]
	0x03CBE3D4 LDR X10, [X10 + 0xCE8]
	0x03CBE3D8 LDP V2, V0, [X9 + 0x30]
	0x03CBE3DC LDR X11, [X9 + 0x50]
	0x03CBE3E0 LDR V1, [X9 + 0x2]
	0x03CBE3E4 LDR X2, [X10]
	0x03CBE3E8 ADD X8, X8, 0x80
	0x03CBE3EC STR X11, [X31 + 0xD0]
	0x03CBE3F0 STP V2, V0, [X31 + 0xB0]
	0x03CBE3F4 STR V1, [X31 + 0xA]
	0x03CBE3F8 B 0x3CBEBF0
	0x03CBE3FC LDR X9, [X31 + 0x48]
	0x03CBE400 LDR W8, [X9 + 0x1AC]
	0x03CBE404 STR W8, [X9 + 0x1B4]
	0x03CBE408 ADRP X9, 0x4A3000
	0x03CBE40C LDR X9, [X9 + 0xCF0]
	0x03CBE410 LDR X2, [X9]
	0x03CBE414 LDR X9, [X31 + 0x48]
	0x03CBE418 ADD X0, X9, 0x1F8
	0x03CBE41C B 0x3CBE47C
	0x03CBE420 LDR X8, [X31 + 0x48]
	0x03CBE424 LDR X0, [X8 + 0x68]
	0x03CBE428 CBZ X0, 0x3CBE9A4
	0x03CBE42C MOV X1, X31
	0x03CBE430 BL 0x3C9F164
	0x03CBE434 LDR X8, [X31 + 0x48]
	0x03CBE438 AND W1, W0, 0xFF
	0x03CBE43C STR W1, [X8 + 0x19A4]
	0x03CBE440 ADRP X8, 0x4A3000
	0x03CBE444 LDR X8, [X8 + 0xCE0]
	0x03CBE448 LDR X2, [X8]
	0x03CBE44C LDR X8, [X31 + 0x48]
	0x03CBE450 ADD X0, X8, 0x268
	0x03CBE454 BL 0x26E1B78
	0x03CBE458 B 0x3CBB978
	0x03CBE45C LDR X9, [X31 + 0x48]
	0x03CBE460 LDR W8, [X9 + 0x1AC]
	0x03CBE464 STR W8, [X9 + 0x1B0]
	0x03CBE468 ADRP X9, 0x4A3000
	0x03CBE46C LDR X9, [X9 + 0xCF0]
	0x03CBE470 LDR X2, [X9]
	0x03CBE474 LDR X9, [X31 + 0x48]
	0x03CBE478 ADD X0, X9, 0x1D8
	0x03CBE47C MOV W1, W8
	0x03CBE480 B 0x3CBB974
	0x03CBE484 CMP W8, 0xC8
	0x03CBE488 B.LE 0x3CBEF24
	0x03CBE48C CMP W8, 0x12C
	0x03CBE490 B.EQ 0x3CBEF34
	0x03CBE494 CMP W8, 0x190
	0x03CBE498 B.EQ 0x3CBEF34
	0x03CBE49C B 0x3CBEF3C
	0x03CBE4A0 LDR X8, [X31 + 0x18]
	0x03CBE4A4 CBZ X8, 0x3CBE9A4
	0x03CBE4A8 LDR X0, [X19]
	0x03CBE4AC LDR X9, [X31 + 0x18]
	0x03CBE4B0 LDR W8, [X0 + 0xE0]
	0x03CBE4B4 LDR X20, [X9 + 0x48]
	0x03CBE4B8 CBNZ W8, 0x3CBE4C0
	0x03CBE4BC BL 0x1C16DFC
	0x03CBE4C0 MOV X0, X20
	0x03CBE4C4 MOV X1, X31
	0x03CBE4C8 MOV X2, X31
	0x03CBE4CC BL 0x3C354F8
	0x03CBE4D0 TBZ X0, 0x0, 0x3CBF0FC
	0x03CBE4D4 LDR X8, [X31 + 0x18]
	0x03CBE4D8 LDR X20, [X8 + 0x48]
	0x03CBE4DC LDR X8, [X31 + 0x48]
	0x03CBE4E0 STR X20, [X8 + 0xE0]
	0x03CBE4E4 LDR X0, [X19]
	0x03CBE4E8 LDR W8, [X0 + 0xE0]
	0x03CBE4EC CBNZ W8, 0x3CBE4F4
	0x03CBE4F0 BL 0x1C16DFC
	0x03CBE4F4 MOV X0, X20
	0x03CBE4F8 MOV X1, X31
	0x03CBE4FC MOV X2, X31
	0x03CBE500 BL 0x3C3883C
	0x03CBE504 TBNZ X0, 0x0, 0x3CBB838
	0x03CBE508 LDR X8, [X27]
	0x03CBE50C CBZ X8, 0x3CBE9A4
	0x03CBE510 LDR W9, [X8 + 0x18]
	0x03CBE514 CBZ W9, 0x3CBF514
	0x03CBE518 LDR W9, [X8 + 0x28]
	0x03CBE51C CMP W9, 0x1
	0x03CBE520 B.NE 0x3CBE5AC
	0x03CBE524 ADRP X9, 0x4A3000
	0x03CBE528 LDR X9, [X9 + 0xB48]
	0x03CBE52C LDP W21, W20, [X8 + 0x2C]
	0x03CBE530 LDR X0, [X9]
	0x03CBE534 LDR X9, [X31 + 0x58]
	0x03CBE538 LDR X22, [X9]
	0x03CBE53C LDR W9, [X0 + 0xE0]
	0x03CBE540 CBNZ W9, 0x3CBE548
	0x03CBE544 BL 0x1C16DFC
	0x03CBE548 MOV X0, X22
	0x03CBE54C MOV W1, W21
	0x03CBE550 MOV W2, W20
	0x03CBE554 MOV X3, X31
	0x03CBE558 BL 0x3CC6208
	0x03CBE55C MOVZ W8, 0x7F800000
	0x03CBE560 FMOV S1, W8
	0x03CBE564 FCVTZS W9, S0
	0x03CBE568 FCMP S0, S1
	0x03CBE56C MOVZ W8, 0x80000000
	0x03CBE570 CSEL W19, W8, W9, EQ
	0x03CBE574 ADDS W31, W19, 0x8000
	0x03CBE578 B.EQ 0x3CBB838
	0x03CBE57C LDR X8, [X31 + 0x48]
	0x03CBE580 LDR X0, [X8 + 0xE0]
	0x03CBE584 CBZ X0, 0x3CBE9A4
	0x03CBE588 MOV X1, X31
	0x03CBE58C BL 0x3CAB318
	0x03CBE590 CBZ X0, 0x3CBE9A4
	0x03CBE594 LDR W8, [X0 + 0x18]
	0x03CBE598 SUB W8, W8, 0x1
	0x03CBE59C CMP W19, W8
	0x03CBE5A0 B.GT 0x3CBB838
	0x03CBE5A4 LDR X8, [X31 + 0x48]
	0x03CBE5A8 STR W19, [X8 + 0x157C]
	0x03CBE5AC FMOV S0, 1
	0x03CBE5B0 FMOV S1, 1
	0x03CBE5B4 FMOV S2, 1
	0x03CBE5B8 FMOV S3, 1
	0x03CBE5BC MOV X0, X31
	0x03CBE5C0 BL 0x1E43664
	0x03CBE5C4 LDR X8, [X31 + 0x48]
	0x03CBE5C8 LDR X9, [X31 + 0x28]
	0x03CBE5CC STR W0, [X8 + 0x1580]
	0x03CBE5D0 STRB W31, [X9 + 0x480]
	0x03CBE5D4 LDR X8, [X8 + 0x19D0]
	0x03CBE5D8 CBZ X8, 0x3CBE9A4
	0x03CBE5DC LDR X10, [X31 + 0x48]
	0x03CBE5E0 MOVZ W9, 0x19D8
	0x03CBE5E4 MOVZ W25, 0xE0E7
	0x03CBE5E8 MOVZ W26, 0x2C87
	0x03CBE5EC MOVZ W28, 0x7DE9
	0x03CBE5F0 MOVZ W29, 0xD74B
	0x03CBE5F4 MOV X19, X31
	0x03CBE5F8 MOV W24, W31
	0x03CBE5FC MOVK W25, 0x2B0000
	0x03CBE600 MOVK W26, 0x2D0000
	0x03CBE604 MOVK W28, 0xC4E60000
	0x03CBE608 ADD X20, X10, X9
	0x03CBE60C MOVK W29, 0x220000
	0x03CBE610 LDR W9, [X8 + 0x18]
	0x03CBE614 CMP W24, W9
	0x03CBE618 B.GE 0x3CBE870
	0x03CBE61C CMP W24, W9
	0x03CBE620 B.CS 0x3CBF514
	0x03CBE624 ADD X10, X8, X19
	0x03CBE628 LDR W10, [X10 + 0x20]
	0x03CBE62C CBZ W10, 0x3CBE870
	0x03CBE630 CMP W10, W25
	0x03CBE634 STR W31, [X31 + 0x29C]
	0x03CBE638 B.LE 0x3CBE6F8
	0x03CBE63C CMP W10, W26
	0x03CBE640 B.EQ 0x3CBE748
	0x03CBE644 MOVZ W11, 0x381D
	0x03CBE648 MOVK W11, 0x4E30000
	0x03CBE64C CMP W10, W11
	0x03CBE650 B.EQ 0x3CBE798
	0x03CBE654 MOVZ W11, 0xD3FE
	0x03CBE658 MOVK W11, 0x5050000
	0x03CBE65C CMP W10, W11
	0x03CBE660 B.NE 0x3CBB838
	0x03CBE664 CMP W9, 0x1
	0x03CBE668 B.LS 0x3CBF514
	0x03CBE66C ADRP X9, 0x4A3000
	0x03CBE670 LDR X9, [X9 + 0xB48]
	0x03CBE674 LDP W22, W21, [X8 + 0x44]
	0x03CBE678 LDR X0, [X9]
	0x03CBE67C LDR X9, [X31 + 0x58]
	0x03CBE680 LDR X23, [X9]
	0x03CBE684 LDR W9, [X0 + 0xE0]
	0x03CBE688 CBNZ W9, 0x3CBE690
	0x03CBE68C BL 0x1C16DFC
	0x03CBE690 MOV X0, X23
	0x03CBE694 MOV W1, W22
	0x03CBE698 MOV W2, W21
	0x03CBE69C MOV X3, X31
	0x03CBE6A0 BL 0x3CC6208
	0x03CBE6A4 MOVZ W9, 0x7F800000
	0x03CBE6A8 FMOV S1, W9
	0x03CBE6AC FCVTZS W8, S0
	0x03CBE6B0 FCMP S0, S1
	0x03CBE6B4 MOVZ W9, 0x80000000
	0x03CBE6B8 CSEL W21, W9, W8, EQ
	0x03CBE6BC ADDS W31, W21, 0x8000
	0x03CBE6C0 STR W21, [X31 + 0x29C]
	0x03CBE6C4 B.EQ 0x3CBB838
	0x03CBE6C8 LDR X8, [X31 + 0x48]
	0x03CBE6CC LDR X0, [X8 + 0xE0]
	0x03CBE6D0 CBZ X0, 0x3CBE9A4
	0x03CBE6D4 MOV X1, X31
	0x03CBE6D8 BL 0x3CAB318
	0x03CBE6DC CBZ X0, 0x3CBE9A4
	0x03CBE6E0 LDR W8, [X0 + 0x18]
	0x03CBE6E4 SUB W8, W8, 0x1
	0x03CBE6E8 CMP W21, W8
	0x03CBE6EC B.GT 0x3CBB838
	0x03CBE6F0 LDR W8, [X31 + 0x29C]
	0x03CBE6F4 B 0x3CBE854
	0x03CBE6F8 CMP W10, W28
	0x03CBE6FC B.EQ 0x3CBE85C
	0x03CBE700 CMP W10, W29
	0x03CBE704 B.EQ 0x3CBE7E0
	0x03CBE708 CMP W10, W25
	0x03CBE70C B.NE 0x3CBB838
	0x03CBE710 LDR X21, [X31 + 0x48]
	0x03CBE714 ADD X8, X8, X19
	0x03CBE718 LDR W1, [X8 + 0x24]
	0x03CBE71C ADD X3, X31, 0x29C
	0x03CBE720 LDR X0, [X21 + 0xE0]
	0x03CBE724 MOVZ W2, 0x1
	0x03CBE728 MOV X4, X31
	0x03CBE72C MOV X5, X31
	0x03CBE730 BL 0x3CABD8C
	0x03CBE734 STR X0, [X21 + 0xE0]
	0x03CBE738 LDR W8, [X31 + 0x29C]
	0x03CBE73C ADDS W31, W8, 0x1
	0x03CBE740 B.NE 0x3CBE854
	0x03CBE744 B 0x3CBB838
	0x03CBE748 ADRP X9, 0x4A3000
	0x03CBE74C LDR X9, [X9 + 0xB48]
	0x03CBE750 ADD X8, X8, X19
	0x03CBE754 LDP W23, W21, [X8 + 0x2C]
	0x03CBE758 LDR X0, [X9]
	0x03CBE75C LDR X9, [X31 + 0x58]
	0x03CBE760 LDR X22, [X9]
	0x03CBE764 LDR W9, [X0 + 0xE0]
	0x03CBE768 CBNZ W9, 0x3CBE770
	0x03CBE76C BL 0x1C16DFC
	0x03CBE770 MOV X0, X22
	0x03CBE774 MOV W1, W23
	0x03CBE778 MOV W2, W21
	0x03CBE77C MOV X3, X31
	0x03CBE780 BL 0x3CC6208
	0x03CBE784 LDR X9, [X31 + 0x28]
	0x03CBE788 FCMP S0, 0x0
	0x03CBE78C CSET W8, NE
	0x03CBE790 STRB W8, [X9 + 0x480]
	0x03CBE794 B 0x3CBE85C
	0x03CBE798 ADRP X9, 0x4A3000
	0x03CBE79C LDR X9, [X9 + 0xB48]
	0x03CBE7A0 ADD X8, X8, X19
	0x03CBE7A4 LDP W23, W21, [X8 + 0x2C]
	0x03CBE7A8 LDR X0, [X9]
	0x03CBE7AC LDR X9, [X31 + 0x58]
	0x03CBE7B0 LDR X22, [X9]
	0x03CBE7B4 LDR W9, [X0 + 0xE0]
	0x03CBE7B8 CBNZ W9, 0x3CBE7C0
	0x03CBE7BC BL 0x1C16DFC
	0x03CBE7C0 MOV X0, X22
	0x03CBE7C4 MOV W1, W23
	0x03CBE7C8 MOV W2, W21
	0x03CBE7CC MOV X3, X31
	0x03CBE7D0 BL 0x3CC5F7C
	0x03CBE7D4 LDR X8, [X31 + 0x48]
	0x03CBE7D8 STR W0, [X8 + 0x1580]
	0x03CBE7DC B 0x3CBE85C
	0x03CBE7E0 ADRP X9, 0x4A3000
	0x03CBE7E4 LDR X9, [X9 + 0xB48]
	0x03CBE7E8 ADD X8, X8, X19
	0x03CBE7EC LDP W23, W21, [X8 + 0x2C]
	0x03CBE7F0 LDR X0, [X9]
	0x03CBE7F4 LDR X9, [X31 + 0x58]
	0x03CBE7F8 LDR X22, [X9]
	0x03CBE7FC LDR W9, [X0 + 0xE0]
	0x03CBE800 CBNZ W9, 0x3CBE808
	0x03CBE804 BL 0x1C16DFC
	0x03CBE808 MOV X0, X22
	0x03CBE80C MOV W1, W23
	0x03CBE810 MOV W2, W21
	0x03CBE814 MOV X3, X20
	0x03CBE818 MOV X4, X31
	0x03CBE81C BL 0x3CC91A0
	0x03CBE820 CMP W0, 0x3
	0x03CBE824 B.NE 0x3CBB838
	0x03CBE828 LDR X8, [X20]
	0x03CBE82C CBZ X8, 0x3CBE9A4
	0x03CBE830 LDR W9, [X8 + 0x18]
	0x03CBE834 CBZ W9, 0x3CBF514
	0x03CBE838 LDR V0, [X8 + 0x20]
	0x03CBE83C MOVZ W8, 0x7F800000
	0x03CBE840 FMOV S1, W8
	0x03CBE844 MOVZ W9, 0x80000000
	0x03CBE848 FCVTZS W8, S0
	0x03CBE84C FCMP S0, S1
	0x03CBE850 CSEL W8, W9, W8, EQ
	0x03CBE854 LDR X9, [X31 + 0x48]
	0x03CBE858 STR W8, [X9 + 0x157C]
	0x03CBE85C LDR X8, [X27]
	0x03CBE860 ADD W24, W24, 0x1
	0x03CBE864 ADD X19, X19, 0x18
	0x03CBE868 CBNZ X8, 0x3CBE610
	0x03CBE86C B 0x3CBE9A4
	0x03CBE870 LDR X8, [X31 + 0x48]
	0x03CBE874 LDR W8, [X8 + 0x157C]
	0x03CBE878 ADDS W31, W8, 0x1
	0x03CBE87C B.EQ 0x3CBB838
	0x03CBE880 LDR X8, [X31 + 0x48]
	0x03CBE884 LDR X1, [X8 + 0xE0]
	0x03CBE888 CBZ X1, 0x3CBE9A4
	0x03CBE88C LDR X19, [X31 + 0x48]
	0x03CBE890 LDR X0, [X1 + 0x28]
	0x03CBE894 MOVZ W8, 0x15B8
	0x03CBE898 MOV X4, X31
	0x03CBE89C LDR X3, [X19 + 0x19E0]
	0x03CBE8A0 ADD X2, X19, X8
	0x03CBE8A4 BL 0x3CA9B58
	0x03CBE8A8 LDR X9, [X31 + 0x28]
	0x03CBE8AC MOVZ W8, 0x2
	0x03CBE8B0 STR W0, [X19 + 0x78]
	0x03CBE8B4 STRB W8, [X9]
	0x03CBE8B8 B 0x3CBB978
	0x03CBE8BC LDR X21, [X31 + 0x318]
	0x03CBE8C0 LDR X0, [X19]
	0x03CBE8C4 LDR W8, [X0 + 0xE0]
	0x03CBE8C8 CBNZ W8, 0x3CBE8D0
	0x03CBE8CC BL 0x1C16DFC
	0x03CBE8D0 MOV X0, X21
	0x03CBE8D4 MOV X1, X31
	0x03CBE8D8 MOV X2, X31
	0x03CBE8DC BL 0x3C3883C
	0x03CBE8E0 TBNZ X0, 0x0, 0x3CBB838
	0x03CBE8E4 LDR X1, [X31 + 0x318]
	0x03CBE8E8 MOV W0, W20
	0x03CBE8EC MOV X2, X31
	0x03CBE8F0 BL 0x3CAA260
	0x03CBE8F4 LDR X11, [X31 + 0x48]
	0x03CBE8F8 LDR X9, [X31 + 0x318]
	0x03CBE8FC LDR X12, [X31 + 0x58]
	0x03CBE900 LDR X8, [X11 + 0x19D0]
	0x03CBE904 STR X9, [X11 + 0x288]
	0x03CBE908 STRB W31, [X11 + 0x2B8]
	0x03CBE90C CBZ X8, 0x3CBE9A4
	0x03CBE910 MOVZ W24, 0x2C87
	0x03CBE914 MOV X19, X31
	0x03CBE918 MOVZ W23, 0x1
	0x03CBE91C MOVK W24, 0x2D0000
	0x03CBE920 LDR W9, [X8 + 0x18]
	0x03CBE924 CMP W23, W9
	0x03CBE928 B.GE 0x3CBE9A8
	0x03CBE92C CMP W23, W9
	0x03CBE930 B.CS 0x3CBF514
	0x03CBE934 ADD X9, X8, X19
	0x03CBE938 LDR W10, [X9 + 0x38]
	0x03CBE93C CMP W10, W24
	0x03CBE940 B.EQ 0x3CBE94C
	0x03CBE944 CBNZ W10, 0x3CBE998
	0x03CBE948 B 0x3CBE9A8
	0x03CBE94C ADRP X8, 0x4A3000
	0x03CBE950 LDR X8, [X8 + 0xB48]
	0x03CBE954 LDR X22, [X12]
	0x03CBE958 LDP W21, W20, [X9 + 0x44]
	0x03CBE95C LDR X0, [X8]
	0x03CBE960 LDR W8, [X0 + 0xE0]
	0x03CBE964 CBNZ W8, 0x3CBE96C
	0x03CBE968 BL 0x1C16DFC
	0x03CBE96C MOV X0, X22
	0x03CBE970 MOV W1, W21
	0x03CBE974 MOV W2, W20
	0x03CBE978 MOV X3, X31
	0x03CBE97C BL 0x3CC6208
	0x03CBE980 LDR X11, [X31 + 0x48]
	0x03CBE984 LDR X12, [X31 + 0x58]
	0x03CBE988 FCMP S0, 0x0
	0x03CBE98C CSET W9, NE
	0x03CBE990 LDR X8, [X11 + 0x19D0]
	0x03CBE994 STRB W9, [X11 + 0x2B8]
	0x03CBE998 ADD W23, W23, 0x1
	0x03CBE99C ADD X19, X19, 0x18
	0x03CBE9A0 CBNZ X8, 0x3CBE920
	0x03CBE9A4 BL 0x1C16F20
	0x03CBE9A8 ADRP X8, 0x4A3000
	0x03CBE9AC LDR X1, [X11 + 0x288]
	0x03CBE9B0 LDR X8, [X8 + 0xD10]
	0x03CBE9B4 ADD X0, X11, 0x290
	0x03CBE9B8 LDR X2, [X8]
	0x03CBE9BC BL 0x26E2D2C
	0x03CBE9C0 B 0x3CBB978
	0x03CBE9C4 ADRP X9, 0x4A3000
	0x03CBE9C8 LDR X9, [X9 + 0xB48]
	0x03CBE9CC LDP W22, W21, [X8 + 0x2C]
	0x03CBE9D0 LDR X0, [X9]
	0x03CBE9D4 LDR W9, [X0 + 0xE0]
	0x03CBE9D8 CBNZ W9, 0x3CBE9E0
	0x03CBE9DC BL 0x1C16DFC
	0x03CBE9E0 MOV X0, X25
	0x03CBE9E4 MOV W1, W22
	0x03CBE9E8 MOV W2, W21
	0x03CBE9EC MOV X3, X31
	0x03CBE9F0 BL 0x3CC6208
	0x03CBE9F4 MOVZ W8, 0xC7000000
	0x03CBE9F8 FMOV S1, W8
	0x03CBE9FC FCMP S0, S1
	0x03CBEA00 B.EQ 0x3CBB838
	0x03CBEA04 CBZ W19, 0x3CBF538
	0x03CBEA08 CMP W19, 0x1
	0x03CBEA0C B.EQ 0x3CBF55C
	0x03CBEA10 CMP W19, 0x2
	0x03CBEA14 B.NE 0x3CBF58C
	0x03CBEA18 LDR X8, [X31 + 0x48]
	0x03CBEA1C FMOV S2, -1
	0x03CBEA20 FMOV S4, W31
	0x03CBEA24 LDR V1, [X8 + 0x35C]
	0x03CBEA28 LDR V3, [X8 + 0x58]
	0x03CBEA2C MOVZ W8, 0x42C80000
	0x03CBEA30 FCMP S1, S2
	0x03CBEA34 FCSEL S1, S4, S1, EQ
	0x03CBEA38 FSUB S1, S3, S1
	0x03CBEA3C FMUL S0, S0, S1
	0x03CBEA40 FMOV S1, W8
	0x03CBEA44 FDIV S0, S0, S1
	0x03CBEA48 B 0x3CBF594
	0x03CBEA4C CMP W21, 0xD
	0x03CBEA50 B.NE 0x3CBF134
	0x03CBEA54 CMP W9, 0x23
	0x03CBEA58 B.NE 0x3CBF134
	0x03CBEA5C ADRP X8, 0x4A3000
	0x03CBEA60 LDR X8, [X8 + 0xB48]
	0x03CBEA64 LDR X0, [X8]
	0x03CBEA68 LDR W8, [X0 + 0xE0]
	0x03CBEA6C CBNZ W8, 0x3CBEA74
	0x03CBEA70 BL 0x1C16DFC
	0x03CBEA74 MOVZ W1, 0xD
	0x03CBEA78 B 0x3CBF160
	0x03CBEA7C LDR X8, [X31 + 0x30]
	0x03CBEA80 ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBEA84 LDR V1, [X9 + 0xBC]
	0x03CBEA88 FMOV S2, 1
	0x03CBEA8C LDRB W8, [X8 + 0xBD]
	0x03CBEA90 CMP W8, 0x0
	0x03CBEA94 LDR X8, [X31 + 0x48]
	0x03CBEA98 FCSEL S1, S1, S2, EQ
	0x03CBEA9C FMUL S0, S0, S1
	0x03CBEAA0 STR S0, [X8 + 0x35C]
	0x03CBEAA4 B 0x3CBB978
	0x03CBEAA8 LDR X8, [X31 + 0x30]
	0x03CBEAAC LDR X10, [X31 + 0x48]
	0x03CBEAB0 ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBEAB4 LDR V2, [X9 + 0xBC]
	0x03CBEAB8 LDRB W8, [X8 + 0xBD]
	0x03CBEABC LDR V1, [X10 + 0xF4]
	0x03CBEAC0 FMOV S3, 1
	0x03CBEAC4 LDR V4, [X10 + 0x2F4]
	0x03CBEAC8 CMP W8, 0x0
	0x03CBEACC FCSEL S2, S2, S3, EQ
	0x03CBEAD0 FMUL S0, S0, S2
	0x03CBEAD4 FMUL S0, S1, S0
	0x03CBEAD8 FADD S0, S4, S0
	0x03CBEADC B 0x3CBEF1C
	0x03CBEAE0 LDR X8, [X31 + 0x18]
	0x03CBEAE4 CBZ X8, 0x3CBE9A4
	0x03CBEAE8 LDR X8, [X27]
	0x03CBEAEC CBZ X8, 0x3CBE9A4
	0x03CBEAF0 LDR W9, [X8 + 0x18]
	0x03CBEAF4 CBZ W9, 0x3CBF514
	0x03CBEAF8 LDR X9, [X31 + 0x18]
	0x03CBEAFC LDP W2, W3, [X8 + 0x2C]
	0x03CBEB00 MOV X0, X31
	0x03CBEB04 MOV X4, X31
	0x03CBEB08 LDR X21, [X9 + 0x28]
	0x03CBEB0C LDR X9, [X31 + 0x58]
	0x03CBEB10 LDR X1, [X9]
	0x03CBEB14 BL 0x322EAE4
	0x03CBEB18 MOV X1, X0
	0x03CBEB1C MOV X0, X21
	0x03CBEB20 MOV X2, X31
	0x03CBEB24 BL 0x321B938
	0x03CBEB28 ADRP X8, 0x48F000
	0x03CBEB2C LDR X8, [X8 + 0xAD8]
	0x03CBEB30 LDR X1, [X8]
	0x03CBEB34 BL 0x2241FB8
	0x03CBEB38 ADRP X8, 0x435000
	0x03CBEB3C LDR X8, [X8 + 0x598]
	0x03CBEB40 STR X0, [X31 + 0x320]
	0x03CBEB44 MOV X21, X0
	0x03CBEB48 LDR X8, [X8]
	0x03CBEB4C LDR W9, [X8 + 0xE0]
	0x03CBEB50 CBNZ W9, 0x3CBEB5C
	0x03CBEB54 MOV X0, X8
	0x03CBEB58 BL 0x1C16DFC
	0x03CBEB5C MOV X0, X21
	0x03CBEB60 MOV X1, X31
	0x03CBEB64 MOV X2, X31
	0x03CBEB68 BL 0x3C3883C
	0x03CBEB6C TBNZ X0, 0x0, 0x3CBB838
	0x03CBEB70 LDR X1, [X31 + 0x320]
	0x03CBEB74 MOV W0, W20
	0x03CBEB78 MOV X2, X31
	0x03CBEB7C BL 0x3CAA1C8
	0x03CBEB80 LDR X19, [X31 + 0x48]
	0x03CBEB84 LDR X0, [X31 + 0x320]
	0x03CBEB88 MOVZ W8, 0x15B8
	0x03CBEB8C MOV X4, X31
	0x03CBEB90 LDR X1, [X19 + 0x68]
	0x03CBEB94 LDR X3, [X19 + 0x19E0]
	0x03CBEB98 ADD X2, X19, X8
	0x03CBEB9C STR X0, [X19 + 0x70]
	0x03CBEBA0 BL 0x3CA994C
	0x03CBEBA4 LDR X9, [X19 + 0x15B8]
	0x03CBEBA8 STR W0, [X19 + 0x78]
	0x03CBEBAC CBZ X9, 0x3CBE9A4
	0x03CBEBB0 LDR W8, [X9 + 0x18]
	0x03CBEBB4 CMP W0, W8
	0x03CBEBB8 B.CS 0x3CBF514
	0x03CBEBBC MOVZ W10, 0x38
	0x03CBEBC0 SMADDL X9, X0, X10, X9
	0x03CBEBC4 ADRP X10, 0x4A3000
	0x03CBEBC8 LDR X8, [X31 + 0x48]
	0x03CBEBCC LDR X10, [X10 + 0xCE8]
	0x03CBEBD0 LDP V2, V0, [X9 + 0x30]
	0x03CBEBD4 LDR X11, [X9 + 0x50]
	0x03CBEBD8 LDR V1, [X9 + 0x2]
	0x03CBEBDC LDR X2, [X10]
	0x03CBEBE0 ADD X8, X8, 0x80
	0x03CBEBE4 STR X11, [X31 + 0x90]
	0x03CBEBE8 STP V2, V0, [X31 + 0x70]
	0x03CBEBEC STR V1, [X31 + 0x6]
	0x03CBEBF0 STP V1, V2, [X31 + 0x220]
	0x03CBEBF4 STR V0, [X31 + 0x24]
	0x03CBEBF8 STR X11, [X31 + 0x250]
	0x03CBEBFC ADD X1, X31, 0x220
	0x03CBEC00 MOV X0, X8
	0x03CBEC04 BL 0x26E269C
	0x03CBEC08 B 0x3CBB978
	0x03CBEC0C LDR X9, [X31 + 0x48]
	0x03CBEC10 MOVZ W8, 0x202
	0x03CBEC14 MOVZ W1, 0x202
	0x03CBEC18 B 0x3CBEF70
	0x03CBEC1C LDR X8, [X31 + 0x30]
	0x03CBEC20 ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBEC24 LDR V1, [X9 + 0xBC]
	0x03CBEC28 LDR X9, [X31 + 0x48]
	0x03CBEC2C LDRB W8, [X8 + 0xBD]
	0x03CBEC30 FMOV S3, 1
	0x03CBEC34 LDR V2, [X9 + 0xF4]
	0x03CBEC38 CMP W8, 0x0
	0x03CBEC3C FCSEL S1, S1, S3, EQ
	0x03CBEC40 FMUL S0, S0, S1
	0x03CBEC44 FMUL S0, S2, S0
	0x03CBEC48 STR S0, [X9 + 0x180]
	0x03CBEC4C B 0x3CBB978
	0x03CBEC50 LDR X8, [X31 + 0x30]
	0x03CBEC54 ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBEC58 LDR V1, [X9 + 0xBC]
	0x03CBEC5C FMOV S2, 1
	0x03CBEC60 LDRB W8, [X8 + 0xBD]
	0x03CBEC64 CMP W8, 0x0
	0x03CBEC68 LDR X8, [X31 + 0x48]
	0x03CBEC6C FCSEL S1, S1, S2, EQ
	0x03CBEC70 FMUL S0, S0, S1
	0x03CBEC74 STR S0, [X8 + 0x2F8]
	0x03CBEC78 B 0x3CBECB8
	0x03CBEC7C LDR X8, [X31 + 0x30]
	0x03CBEC80 ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBEC84 LDR V1, [X9 + 0xBC]
	0x03CBEC88 LDR X9, [X31 + 0x48]
	0x03CBEC8C LDRB W8, [X8 + 0xBD]
	0x03CBEC90 FMOV S3, 1
	0x03CBEC94 LDR V2, [X9 + 0xF4]
	0x03CBEC98 CMP W8, 0x0
	0x03CBEC9C FCSEL S1, S1, S3, EQ
	0x03CBECA0 FMUL S0, S0, S1
	0x03CBECA4 FMUL S0, S2, S0
	0x03CBECA8 STR S0, [X9 + 0x2F8]
	0x03CBECAC B 0x3CBECB8
	0x03CBECB0 LDR X8, [X31 + 0x48]
	0x03CBECB4 LDR V0, [X8 + 0x2F8]
	0x03CBECB8 LDR X8, [X31 + 0x48]
	0x03CBECBC LDR V1, [X8 + 0x2F4]
	0x03CBECC0 FADD S0, S1, S0
	0x03CBECC4 STR S0, [X8 + 0x2F4]
	0x03CBECC8 B 0x3CBB978
	0x03CBECCC LDR X9, [X31 + 0x48]
	0x03CBECD0 MOVZ W8, 0x42C80000
	0x03CBECD4 FMOV S2, W8
	0x03CBECD8 LDR V1, [X9 + 0xEC]
	0x03CBECDC FMUL S0, S0, S1
	0x03CBECE0 FDIV S0, S0, S2
	0x03CBECE4 B 0x3CBF51C
	0x03CBECE8 LDR X9, [X31 + 0x48]
	0x03CBECEC LDR V1, [X9 + 0xEC]
	0x03CBECF0 FMUL S0, S0, S1
	0x03CBECF4 B 0x3CBF51C
	0x03CBECF8 LDR X8, [X31 + 0x30]
	0x03CBECFC ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBED00 LDR V1, [X9 + 0xBC]
	0x03CBED04 FMOV S2, 1
	0x03CBED08 LDRB W8, [X8 + 0xBD]
	0x03CBED0C CMP W8, 0x0
	0x03CBED10 FCSEL S1, S1, S2, EQ
	0x03CBED14 FMUL S0, S0, S1
	0x03CBED18 B 0x3CBED54
	0x03CBED1C LDR X8, [X31 + 0x30]
	0x03CBED20 ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBED24 LDR V1, [X9 + 0xBC]
	0x03CBED28 LDR X9, [X31 + 0x48]
	0x03CBED2C LDRB W8, [X8 + 0xBD]
	0x03CBED30 FMOV S3, 1
	0x03CBED34 LDR V2, [X9 + 0xF4]
	0x03CBED38 CMP W8, 0x0
	0x03CBED3C FCSEL S1, S1, S3, EQ
	0x03CBED40 FMUL S0, S0, S1
	0x03CBED44 FMUL S0, S2, S0
	0x03CBED48 B 0x3CBED54
	0x03CBED4C LDR X8, [X31 + 0x48]
	0x03CBED50 LDR V0, [X8 + 0x358]
	0x03CBED54 LDR X8, [X31 + 0x48]
	0x03CBED58 FCMP S0, 0x0
	0x03CBED5C FMOV S1, W31
	0x03CBED60 FCSEL S0, S0, S1, GE
	0x03CBED64 B 0x3CBF5A8
	0x03CBED68 LDR X8, [X31 + 0x30]
	0x03CBED6C ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBED70 LDR V1, [X9 + 0xBC]
	0x03CBED74 FMOV S2, 1
	0x03CBED78 LDRB W8, [X8 + 0xBD]
	0x03CBED7C CMP W8, 0x0
	0x03CBED80 LDR X8, [X31 + 0x48]
	0x03CBED84 FCSEL S1, S1, S2, EQ
	0x03CBED88 FMUL S0, S0, S1
	0x03CBED8C STR S0, [X8 + 0x2EC]
	0x03CBED90 B 0x3CBB978
	0x03CBED94 CMP W8, 0x1F4
	0x03CBED98 B.EQ 0x3CBEF34
	0x03CBED9C CMP W8, 0x258
	0x03CBEDA0 B.EQ 0x3CBEF34
	0x03CBEDA4 B 0x3CBEF3C
	0x03CBEDA8 LDR X8, [X31 + 0x48]
	0x03CBEDAC LDR X0, [X8 + 0x68]
	0x03CBEDB0 CBZ X0, 0x3CBE9A4
	0x03CBEDB4 LDR X19, [X31 + 0x48]
	0x03CBEDB8 ADD X8, X31, 0x220
	0x03CBEDBC MOV X1, X31
	0x03CBEDC0 LDR V9, [X19 + 0xF4]
	0x03CBEDC4 BL 0x3C9EB14
	0x03CBEDC8 ADD X0, X31, 0x2A0
	0x03CBEDCC ADD X1, X31, 0x220
	0x03CBEDD0 MOVZ W2, 0x60
	0x03CBEDD4 BL 0x3EB1AC0
	0x03CBEDD8 ADD X0, X31, 0x2A0
	0x03CBEDDC MOV X1, X31
	0x03CBEDE0 BL 0x3C9BF88
	0x03CBEDE4 LDR X9, [X19 + 0x68]
	0x03CBEDE8 CBZ X9, 0x3CBE9A4
	0x03CBEDEC MOV W21, W0
	0x03CBEDF0 ADD X8, X31, 0x220
	0x03CBEDF4 MOV X0, X9
	0x03CBEDF8 MOV X1, X31
	0x03CBEDFC BL 0x3C9EB14
	0x03CBEE00 ADD X0, X31, 0x2A0
	0x03CBEE04 ADD X1, X31, 0x220
	0x03CBEE08 MOVZ W2, 0x60
	0x03CBEE0C BL 0x3EB1AC0
	0x03CBEE10 ADD X0, X31, 0x2A0
	0x03CBEE14 MOV X1, X31
	0x03CBEE18 BL 0x3C9BF98
	0x03CBEE1C LDR X8, [X31 + 0x30]
	0x03CBEE20 LDR X0, [X8 + 0x40]
	0x03CBEE24 CBZ X0, 0x3CBE9A4
	0x03CBEE28 LDR X8, [X31 + 0x30]
	0x03CBEE2C ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBEE30 LDR V2, [X9 + 0xBC]
	0x03CBEE34 SCVTF S1, W21
	0x03CBEE38 LDRB W8, [X8 + 0xBD]
	0x03CBEE3C FDIV S1, S9, S1
	0x03CBEE40 FMUL S0, S1, S0
	0x03CBEE44 FMOV S1, 1
	0x03CBEE48 CMP W8, 0x0
	0x03CBEE4C FCSEL S1, S2, S1, EQ
	0x03CBEE50 ADD X8, X31, 0x220
	0x03CBEE54 MOV X1, X31
	0x03CBEE58 FMUL S9, S0, S1
	0x03CBEE5C BL 0x3C9EB14
	0x03CBEE60 ADD X0, X31, 0x2A0
	0x03CBEE64 ADD X1, X31, 0x220
	0x03CBEE68 MOVZ W2, 0x60
	0x03CBEE6C BL 0x3EB1AC0
	0x03CBEE70 ADD X0, X31, 0x2A0
	0x03CBEE74 MOV X1, X31
	0x03CBEE78 BL 0x3C9BFA8
	0x03CBEE7C MOVZ W8, 0x42C80000
	0x03CBEE80 FMUL S0, S8, S0
	0x03CBEE84 FMOV S1, W8
	0x03CBEE88 FDIV S0, S0, S1
	0x03CBEE8C FMUL S0, S9, S0
	0x03CBEE90 LDR X8, [X31 + 0x48]
	0x03CBEE94 STR S0, [X8 + 0x2E4]
	0x03CBEE98 B 0x3CBB978
	0x03CBEE9C LDR X8, [X31 + 0x30]
	0x03CBEEA0 ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBEEA4 LDR V0, [X9 + 0xBC]
	0x03CBEEA8 LDR X9, [X31 + 0x48]
	0x03CBEEAC LDRB W8, [X8 + 0xBD]
	0x03CBEEB0 FMOV S2, 1
	0x03CBEEB4 LDR V1, [X9 + 0xF4]
	0x03CBEEB8 CMP W8, 0x0
	0x03CBEEBC FCSEL S0, S0, S2, EQ
	0x03CBEEC0 FMUL S0, S8, S0
	0x03CBEEC4 FMUL S0, S1, S0
	0x03CBEEC8 STR S0, [X9 + 0x2E4]
	0x03CBEECC B 0x3CBB978
	0x03CBEED0 LDR X9, [X31 + 0x48]
	0x03CBEED4 MOVZ W8, 0x42C80000
	0x03CBEED8 FMOV S2, W8
	0x03CBEEDC LDR V1, [X9 + 0x58]
	0x03CBEEE0 FMUL S0, S0, S1
	0x03CBEEE4 FDIV S0, S0, S2
	0x03CBEEE8 STR S0, [X9 + 0x2F4]
	0x03CBEEEC B 0x3CBB978
	0x03CBEEF0 LDR X8, [X31 + 0x30]
	0x03CBEEF4 LDR X10, [X31 + 0x48]
	0x03CBEEF8 ADRP X9, 0xFFFFFFFFFCE2C000
	0x03CBEEFC LDR V2, [X9 + 0xBC]
	0x03CBEF00 LDRB W8, [X8 + 0xBD]
	0x03CBEF04 LDR V1, [X10 + 0xF4]
	0x03CBEF08 FMOV S3, 1
	0x03CBEF0C CMP W8, 0x0
	0x03CBEF10 FMUL S0, S0, S1
	0x03CBEF14 FCSEL S1, S2, S3, EQ
	0x03CBEF18 FMUL S0, S0, S1
	0x03CBEF1C STR S0, [X10 + 0x2F4]
	0x03CBEF20 B 0x3CBB978
	0x03CBEF24 CMP W8, 0x64
	0x03CBEF28 B.EQ 0x3CBEF34
	0x03CBEF2C CMP W8, 0xC8
	0x03CBEF30 B.NE 0x3CBEF3C
	0x03CBEF34 LDR X9, [X31 + 0x48]
	0x03CBEF38 STR W8, [X9 + 0x134]
	0x03CBEF3C LDR X9, [X31 + 0x48]
	0x03CBEF40 ADRP X8, 0x4A3000
	0x03CBEF44 LDR W1, [X9 + 0x134]
	0x03CBEF48 LDR X8, [X8 + 0xCF8]
	0x03CBEF4C ADD X0, X9, 0x138
	0x03CBEF50 B 0x3CBEF80
	0x03CBEF54 LDR X9, [X31 + 0x48]
	0x03CBEF58 MOVZ W8, 0x210
	0x03CBEF5C MOVZ W1, 0x210
	0x03CBEF60 B 0x3CBEF70
	0x03CBEF64 LDR X9, [X31 + 0x48]
	0x03CBEF68 MOVZ W8, 0x204
	0x03CBEF6C MOVZ W1, 0x204
	0x03CBEF70 STR W8, [X9 + 0x158]
	0x03CBEF74 ADRP X8, 0x4A3000
	0x03CBEF78 LDR X8, [X8 + 0xD00]
	0x03CBEF7C ADD X0, X9, 0x160
	0x03CBEF80 LDR X2, [X8]
	0x03CBEF84 BL 0x26E208C
	0x03CBEF88 B 0x3CBB978
	0x03CBEF8C LDR X21, [X31 + 0x328]
	0x03CBEF90 LDR X0, [X19]
	0x03CBEF94 LDR W8, [X0 + 0xE0]
	0x03CBEF98 CBNZ W8, 0x3CBEFA0
	0x03CBEF9C BL 0x1C16DFC
	0x03CBEFA0 MOV X0, X21
	0x03CBEFA4 MOV X1, X31
	0x03CBEFA8 MOV X2, X31
	0x03CBEFAC BL 0x3C3883C
	0x03CBEFB0 TBNZ X0, 0x0, 0x3CBB838
	0x03CBEFB4 LDR X0, [X31 + 0x328]
	0x03CBEFB8 MOV X1, X31
	0x03CBEFBC BL 0x3CA9EF4
	0x03CBEFC0 ORR W8, W20, W22, 0x0
	0x03CBEFC4 CBZ W8, 0x3CBF060
	0x03CBEFC8 MOVZ W8, 0xCB
	0x03CBEFCC MOVK W8, 0x31340000
	0x03CBEFD0 CMP W22, W8
	0x03CBEFD4 B.NE 0x3CBB838
	0x03CBEFD8 ADD X1, X31, 0x320
	0x03CBEFDC MOV W0, W20
	0x03CBEFE0 MOV X2, X31
	0x03CBEFE4 BL 0x3CAA508
	0x03CBEFE8 TBZ X0, 0x0, 0x3CBF404
	0x03CBEFEC LDR X0, [X31 + 0x320]
	0x03CBEFF0 LDR X19, [X31 + 0x48]
	0x03CBEFF4 MOVZ W8, 0x15B8
	0x03CBEFF8 MOV X4, X31
	0x03CBEFFC STR X0, [X19 + 0x70]
	0x03CBF000 LDR X1, [X31 + 0x328]
	0x03CBF004 LDR X3, [X19 + 0x19E0]
	0x03CBF008 ADD X2, X19, X8
	0x03CBF00C BL 0x3CA994C
	0x03CBF010 LDR X9, [X19 + 0x15B8]
	0x03CBF014 STR W0, [X19 + 0x78]
	0x03CBF018 CBZ X9, 0x3CBE9A4
	0x03CBF01C LDR W8, [X9 + 0x18]
	0x03CBF020 CMP W0, W8
	0x03CBF024 B.CS 0x3CBF514
	0x03CBF028 MOVZ W10, 0x38
	0x03CBF02C SMADDL X9, X0, X10, X9
	0x03CBF030 ADRP X10, 0x4A2000
	0x03CBF034 LDR X8, [X31 + 0x48]
	0x03CBF038 LDR X10, [X10 + 0xCE8]
	0x03CBF03C LDP V2, V0, [X9 + 0x30]
	0x03CBF040 LDR X11, [X9 + 0x50]
	0x03CBF044 LDR V1, [X9 + 0x2]
	0x03CBF048 LDR X2, [X10]
	0x03CBF04C ADD X8, X8, 0x80
	0x03CBF050 STR X11, [X31 + 0x190]
	0x03CBF054 STP V2, V0, [X31 + 0x170]
	0x03CBF058 STR V1, [X31 + 0x16]
	0x03CBF05C B 0x3CBF0D4
	0x03CBF060 LDR X1, [X31 + 0x328]
	0x03CBF064 CBZ X1, 0x3CBE9A4
	0x03CBF068 LDR X19, [X31 + 0x48]
	0x03CBF06C LDR X0, [X1 + 0x28]
	0x03CBF070 MOVZ W8, 0x15B8
	0x03CBF074 MOV X4, X31
	0x03CBF078 LDR X3, [X19 + 0x19E0]
	0x03CBF07C ADD X2, X19, X8
	0x03CBF080 STR X0, [X19 + 0x70]
	0x03CBF084 BL 0x3CA994C
	0x03CBF088 LDR X9, [X19 + 0x15B8]
	0x03CBF08C STR W0, [X19 + 0x78]
	0x03CBF090 CBZ X9, 0x3CBE9A4
	0x03CBF094 LDR W8, [X9 + 0x18]
	0x03CBF098 CMP W0, W8
	0x03CBF09C B.CS 0x3CBF514
	0x03CBF0A0 MOVZ W10, 0x38
	0x03CBF0A4 SMADDL X9, X0, X10, X9
	0x03CBF0A8 ADRP X10, 0x4A2000
	0x03CBF0AC LDR X8, [X31 + 0x48]
	0x03CBF0B0 LDR X10, [X10 + 0xCE8]
	0x03CBF0B4 LDP V2, V0, [X9 + 0x30]
	0x03CBF0B8 LDR X11, [X9 + 0x50]
	0x03CBF0BC LDR V1, [X9 + 0x2]
	0x03CBF0C0 LDR X2, [X10]
	0x03CBF0C4 ADD X8, X8, 0x80
	0x03CBF0C8 STR X11, [X31 + 0x1D0]
	0x03CBF0CC STP V2, V0, [X31 + 0x1B0]
	0x03CBF0D0 STR V1, [X31 + 0x1A]
	0x03CBF0D4 ADD X1, X31, 0x220
	0x03CBF0D8 MOV X0, X8
	0x03CBF0DC STP V1, V2, [X31 + 0x220]
	0x03CBF0E0 STR V0, [X31 + 0x24]
	0x03CBF0E4 STR X11, [X31 + 0x250]
	0x03CBF0E8 BL 0x26E269C
	0x03CBF0EC LDR X8, [X31 + 0x328]
	0x03CBF0F0 LDR X9, [X31 + 0x48]
	0x03CBF0F4 STR X8, [X9 + 0x68]
	0x03CBF0F8 B 0x3CBB978
	0x03CBF0FC LDR X0, [X19]
	0x03CBF100 LDR X9, [X31 + 0x48]
	0x03CBF104 LDR W8, [X0 + 0xE0]
	0x03CBF108 LDR X20, [X9 + 0x19F0]
	0x03CBF10C CBNZ W8, 0x3CBF114
	0x03CBF110 BL 0x1C16DFC
	0x03CBF114 MOV X0, X20
	0x03CBF118 MOV X1, X31
	0x03CBF11C MOV X2, X31
	0x03CBF120 BL 0x3C354F8
	0x03CBF124 TBZ X0, 0x0, 0x3CBF348
	0x03CBF128 LDR X8, [X31 + 0x48]
	0x03CBF12C LDR X20, [X8 + 0x19F0]
	0x03CBF130 B 0x3CBE4E0
	0x03CBF134 CMP W21, 0xF
	0x03CBF138 B.NE 0x3CBF3A4
	0x03CBF13C CMP W9, 0x23
	0x03CBF140 B.NE 0x3CBF3A4
	0x03CBF144 ADRP X8, 0x4A2000
	0x03CBF148 LDR X8, [X8 + 0xB48]
	0x03CBF14C LDR X0, [X8]
	0x03CBF150 LDR W8, [X0 + 0xE0]
	0x03CBF154 CBNZ W8, 0x3CBF15C
	0x03CBF158 BL 0x1C16DFC
	0x03CBF15C MOVZ W1, 0xF
	0x03CBF160 MOV X0, X25
	0x03CBF164 MOV X2, X31
	0x03CBF168 BL 0x3CC5948
	0x03CBF16C LDR X9, [X31 + 0x48]
	0x03CBF170 ADRP X8, 0x4A2000
	0x03CBF174 STR W0, [X9 + 0x1AC]
	0x03CBF178 LDR X8, [X8 + 0xCF0]
	0x03CBF17C LDR X2, [X8]
	0x03CBF180 ADD X8, X9, 0x1B8
	0x03CBF184 B 0x3CBB96C
	0x03CBF188 LDR X8, [X31 + 0x30]
	0x03CBF18C ADRP X9, 0xFFFFFFFFFCE2B000
	0x03CBF190 LDR V1, [X9 + 0xBC]
	0x03CBF194 FMOV S2, 1
	0x03CBF198 LDRB W8, [X8 + 0xBD]
	0x03CBF19C CMP W8, 0x0
	0x03CBF1A0 FCSEL S1, S1, S2, EQ
	0x03CBF1A4 FMUL S0, S0, S1
	0x03CBF1A8 B 0x3CBF1E4
	0x03CBF1AC LDR X8, [X31 + 0x30]
	0x03CBF1B0 ADRP X9, 0xFFFFFFFFFCE2B000
	0x03CBF1B4 LDR V1, [X9 + 0xBC]
	0x03CBF1B8 LDR X9, [X31 + 0x48]
	0x03CBF1BC LDRB W8, [X8 + 0xBD]
	0x03CBF1C0 FMOV S3, 1
	0x03CBF1C4 LDR V2, [X9 + 0xF4]
	0x03CBF1C8 CMP W8, 0x0
	0x03CBF1CC FCSEL S1, S1, S3, EQ
	0x03CBF1D0 FMUL S0, S0, S1
	0x03CBF1D4 FMUL S0, S2, S0
	0x03CBF1D8 B 0x3CBF1E4
	0x03CBF1DC LDR X8, [X31 + 0x48]
	0x03CBF1E0 LDR V0, [X8 + 0x354]
	0x03CBF1E4 LDR X8, [X31 + 0x48]
	0x03CBF1E8 FCMP S0, 0x0
	0x03CBF1EC FMOV S1, W31
	0x03CBF1F0 FCSEL S0, S0, S1, GE
	0x03CBF1F4 STR S0, [X8 + 0x354]
	0x03CBF1F8 B 0x3CBB978
	0x03CBF1FC LDR X8, [X31 + 0x30]
	0x03CBF200 ADRP X9, 0xFFFFFFFFFCE2B000
	0x03CBF204 LDR V1, [X9 + 0xBC]
	0x03CBF208 FMOV S2, 1
	0x03CBF20C LDRB W8, [X8 + 0xBD]
	0x03CBF210 CMP W8, 0x0
	0x03CBF214 LDR X8, [X31 + 0x48]
	0x03CBF218 FCSEL S1, S1, S2, EQ
	0x03CBF21C FMUL S0, S0, S1
	0x03CBF220 STR S0, [X8 + 0x2FC]
	0x03CBF224 B 0x3CBF264
	0x03CBF228 LDR X8, [X31 + 0x30]
	0x03CBF22C ADRP X9, 0xFFFFFFFFFCE2B000
	0x03CBF230 LDR V1, [X9 + 0xBC]
	0x03CBF234 LDR X9, [X31 + 0x48]
	0x03CBF238 LDRB W8, [X8 + 0xBD]
	0x03CBF23C FMOV S3, 1
	0x03CBF240 LDR V2, [X9 + 0xF4]
	0x03CBF244 CMP W8, 0x0
	0x03CBF248 FCSEL S1, S1, S3, EQ
	0x03CBF24C FMUL S0, S0, S1
	0x03CBF250 FMUL S0, S2, S0
	0x03CBF254 STR S0, [X9 + 0x2FC]
	0x03CBF258 B 0x3CBF264
	0x03CBF25C LDR X8, [X31 + 0x48]
	0x03CBF260 LDR V0, [X8 + 0x2FC]
	0x03CBF264 ADRP X8, 0x4A2000
	0x03CBF268 LDR X8, [X8 + 0xD08]
	0x03CBF26C LDR X19, [X31 + 0x48]
	0x03CBF270 LDR X1, [X8]
	0x03CBF274 ADD X0, X19, 0x300
	0x03CBF278 BL 0x26E3240
	0x03CBF27C LDR V0, [X19 + 0x2FC]
	0x03CBF280 STR S0, [X19 + 0x2F4]
	0x03CBF284 B 0x3CBB978
	0x03CBF288 LDR X8, [X31 + 0x30]
	0x03CBF28C ADRP X9, 0xFFFFFFFFFCE2B000
	0x03CBF290 LDR V1, [X9 + 0xBC]
	0x03CBF294 FMOV S2, 1
	0x03CBF298 LDRB W8, [X8 + 0xBD]
	0x03CBF29C CMP W8, 0x0
	0x03CBF2A0 LDR X8, [X31 + 0x48]
	0x03CBF2A4 FCSEL S1, S1, S2, EQ
	0x03CBF2A8 FMUL S0, S0, S1
	0x03CBF2AC STR S0, [X8 + 0x2F0]
	0x03CBF2B0 B 0x3CBB978
	0x03CBF2B4 LDR X8, [X31 + 0x30]
	0x03CBF2B8 ADRP X9, 0xFFFFFFFFFCE2B000
	0x03CBF2BC LDR V1, [X9 + 0xBC]
	0x03CBF2C0 LDR X9, [X31 + 0x48]
	0x03CBF2C4 LDRB W8, [X8 + 0xBD]
	0x03CBF2C8 FMOV S3, 1
	0x03CBF2CC LDR V2, [X9 + 0xF4]
	0x03CBF2D0 CMP W8, 0x0
	0x03CBF2D4 FCSEL S1, S1, S3, EQ
	0x03CBF2D8 FMUL S0, S0, S1
	0x03CBF2DC FMUL S0, S2, S0
	0x03CBF2E0 STR S0, [X9 + 0x2F0]
	0x03CBF2E4 B 0x3CBB978
	0x03CBF2E8 LDR X8, [X31 + 0x20]
	0x03CBF2EC CBZ X8, 0x3CBE9A4
	0x03CBF2F0 LDR X9, [X31 + 0x20]
	0x03CBF2F4 LDR W8, [X9 + 0x20]
	0x03CBF2F8 ADD W8, W8, 0x1
	0x03CBF2FC STR W8, [X9 + 0x20]
	0x03CBF300 B 0x3CBB978
	0x03CBF304 LDR X8, [X31 + 0x30]
	0x03CBF308 LDR X8, [X8 + 0x68]
	0x03CBF30C CBZ X8, 0x3CBE9A4
	0x03CBF310 LDRB W8, [X8 + 0x89]
	0x03CBF314 CBZ W8, 0x3CBB978
	0x03CBF318 ADRP X8, 0x434000
	0x03CBF31C LDR X8, [X8 + 0xA28]
	0x03CBF320 LDR X0, [X8]
	0x03CBF324 LDR W8, [X0 + 0xE0]
	0x03CBF328 CBNZ W8, 0x3CBF330
	0x03CBF32C BL 0x1C16DFC
	0x03CBF330 ADRP X8, 0x4A2000
	0x03CBF334 LDR X8, [X8 + 0xD88]
	0x03CBF338 MOV X1, X31
	0x03CBF33C LDR X0, [X8]
	0x03CBF340 BL 0x3C06A04
	0x03CBF344 B 0x3CBB978
	0x03CBF348 LDR X0, [X19]
	0x03CBF34C LDR X9, [X31 + 0x48]
	0x03CBF350 LDR W8, [X0 + 0xE0]
	0x03CBF354 LDR X20, [X9 + 0x19F0]
	0x03CBF358 CBNZ W8, 0x3CBF360
	0x03CBF35C BL 0x1C16DFC
	0x03CBF360 MOV X0, X20
	0x03CBF364 MOV X1, X31
	0x03CBF368 MOV X2, X31
	0x03CBF36C BL 0x3C3883C
	0x03CBF370 TBZ X0, 0x0, 0x3CBF5B0
	0x03CBF374 ADRP X8, 0x49A000
	0x03CBF378 ADRP X9, 0x4A2000
	0x03CBF37C LDR X8, [X8 + 0x2F8]
	0x03CBF380 LDR X9, [X9 + 0xCC8]
	0x03CBF384 LDR X0, [X8]
	0x03CBF388 LDR X1, [X9]
	0x03CBF38C BL 0x2241FB8
	0x03CBF390 LDR X8, [X31 + 0x48]
	0x03CBF394 MOV X20, X0
	0x03CBF398 STR X0, [X8 + 0x19F0]
	0x03CBF39C STR X0, [X8 + 0xE0]
	0x03CBF3A0 B 0x3CBE4E4
	0x03CBF3A4 LDR W8, [X8 + 0x24]
	0x03CBF3A8 MOVZ W9, 0x65F3
	0x03CBF3AC MOVK W9, 0x10000
	0x03CBF3B0 CMP W8, W9
	0x03CBF3B4 B.LE 0x3CBF5BC
	0x03CBF3B8 MOVZ W9, 0x29C9
	0x03CBF3BC MOVK W9, 0x380000
	0x03CBF3C0 CMP W8, W9
	0x03CBF3C4 B.LE 0x3CBF604
	0x03CBF3C8 MOVZ W9, 0x1A27
	0x03CBF3CC MOVK W9, 0x4D50000
	0x03CBF3D0 CMP W8, W9
	0x03CBF3D4 B.EQ 0x3CBF6CC
	0x03CBF3D8 MOVZ W9, 0x84FB
	0x03CBF3DC MOVK W9, 0x5300000
	0x03CBF3E0 CMP W8, W9
	0x03CBF3E4 B.EQ 0x3CBF6D8
	0x03CBF3E8 MOVZ W9, 0x8D87
	0x03CBF3EC MOVK W9, 0x64C0000
	0x03CBF3F0 CMP W8, W9
	0x03CBF3F4 B.NE 0x3CBB838
	0x03CBF3F8 FMOV S0, 1
	0x03CBF3FC FMOV S1, 1
	0x03CBF400 B 0x3CBF69C
	0x03CBF404 LDR X8, [X31 + 0x18]
	0x03CBF408 CBZ X8, 0x3CBE9A4
	0x03CBF40C LDR X8, [X27]
	0x03CBF410 CBZ X8, 0x3CBE9A4
	0x03CBF414 LDR W9, [X8 + 0x18]
	0x03CBF418 CMP W9, 0x1
	0x03CBF41C B.LS 0x3CBF514
	0x03CBF420 LDR X9, [X31 + 0x18]
	0x03CBF424 LDP W2, W3, [X8 + 0x44]
	0x03CBF428 MOV X0, X31
	0x03CBF42C MOV X4, X31
	0x03CBF430 LDR X21, [X9 + 0x28]
	0x03CBF434 LDR X9, [X31 + 0x58]
	0x03CBF438 LDR X1, [X9]
	0x03CBF43C BL 0x322EAE4
	0x03CBF440 MOV X1, X0
	0x03CBF444 MOV X0, X21
	0x03CBF448 MOV X2, X31
	0x03CBF44C BL 0x321B938
	0x03CBF450 ADRP X8, 0x48E000
	0x03CBF454 LDR X8, [X8 + 0xAD8]
	0x03CBF458 LDR X1, [X8]
	0x03CBF45C BL 0x2241FB8
	0x03CBF460 LDR X8, [X19]
	0x03CBF464 STR X0, [X31 + 0x320]
	0x03CBF468 MOV X21, X0
	0x03CBF46C LDR W9, [X8 + 0xE0]
	0x03CBF470 CBNZ W9, 0x3CBF47C
	0x03CBF474 MOV X0, X8
	0x03CBF478 BL 0x1C16DFC
	0x03CBF47C MOV X0, X21
	0x03CBF480 MOV X1, X31
	0x03CBF484 MOV X2, X31
	0x03CBF488 BL 0x3C3883C
	0x03CBF48C TBNZ X0, 0x0, 0x3CBB838
	0x03CBF490 LDR X1, [X31 + 0x320]
	0x03CBF494 MOV W0, W20
	0x03CBF498 MOV X2, X31
	0x03CBF49C BL 0x3CAA1C8
	0x03CBF4A0 LDR X0, [X31 + 0x320]
	0x03CBF4A4 LDR X19, [X31 + 0x48]
	0x03CBF4A8 MOVZ W8, 0x15B8
	0x03CBF4AC MOV X4, X31
	0x03CBF4B0 STR X0, [X19 + 0x70]
	0x03CBF4B4 LDR X1, [X31 + 0x328]
	0x03CBF4B8 LDR X3, [X19 + 0x19E0]
	0x03CBF4BC ADD X2, X19, X8
	0x03CBF4C0 BL 0x3CA994C
	0x03CBF4C4 LDR X9, [X19 + 0x15B8]
	0x03CBF4C8 STR W0, [X19 + 0x78]
	0x03CBF4CC CBZ X9, 0x3CBE9A4
	0x03CBF4D0 LDR W8, [X9 + 0x18]
	0x03CBF4D4 CMP W0, W8
	0x03CBF4D8 B.CS 0x3CBF514
	0x03CBF4DC MOVZ W10, 0x38
	0x03CBF4E0 SMADDL X9, X0, X10, X9
	0x03CBF4E4 ADRP X10, 0x4A2000
	0x03CBF4E8 LDR X8, [X31 + 0x48]
	0x03CBF4EC LDR X10, [X10 + 0xCE8]
	0x03CBF4F0 LDP V2, V0, [X9 + 0x30]
	0x03CBF4F4 LDR X11, [X9 + 0x50]
	0x03CBF4F8 LDR V1, [X9 + 0x2]
	0x03CBF4FC LDR X2, [X10]
	0x03CBF500 ADD X8, X8, 0x80
	0x03CBF504 STR X11, [X31 + 0x150]
	0x03CBF508 STP V2, V0, [X31 + 0x130]
	0x03CBF50C STR V1, [X31 + 0x12]
	0x03CBF510 B 0x3CBF0D4
	0x03CBF514 BL 0x1C16F28
	0x03CBF518 LDR X9, [X31 + 0x48]
	0x03CBF51C STR S0, [X9 + 0xF4]
	0x03CBF520 ADRP X8, 0x4A2000
	0x03CBF524 LDR X8, [X8 + 0xD08]
	0x03CBF528 ADD X0, X9, 0xF8
	0x03CBF52C LDR X1, [X8]
	0x03CBF530 BL 0x26E3240
	0x03CBF534 B 0x3CBB978
	0x03CBF538 LDR X8, [X31 + 0x30]
	0x03CBF53C ADRP X9, 0xFFFFFFFFFCE2B000
	0x03CBF540 LDR V1, [X9 + 0xBC]
	0x03CBF544 FMOV S2, 1
	0x03CBF548 LDRB W8, [X8 + 0xBD]
	0x03CBF54C CMP W8, 0x0
	0x03CBF550 FCSEL S1, S1, S2, EQ
	0x03CBF554 FMUL S0, S0, S1
	0x03CBF558 B 0x3CBF594
	0x03CBF55C LDR X8, [X31 + 0x30]
	0x03CBF560 ADRP X9, 0xFFFFFFFFFCE2B000
	0x03CBF564 LDR V1, [X9 + 0xBC]
	0x03CBF568 LDR X9, [X31 + 0x48]
	0x03CBF56C LDRB W8, [X8 + 0xBD]
	0x03CBF570 FMOV S3, 1
	0x03CBF574 LDR V2, [X9 + 0xF4]
	0x03CBF578 CMP W8, 0x0
	0x03CBF57C FCSEL S1, S1, S3, EQ
	0x03CBF580 FMUL S0, S0, S1
	0x03CBF584 FMUL S0, S2, S0
	0x03CBF588 B 0x3CBF594
	0x03CBF58C LDR X8, [X31 + 0x48]
	0x03CBF590 LDR V0, [X8 + 0x354]
	0x03CBF594 LDR X8, [X31 + 0x48]
	0x03CBF598 FCMP S0, 0x0
	0x03CBF59C FMOV S1, W31
	0x03CBF5A0 FCSEL S0, S0, S1, GE
	0x03CBF5A4 STR S0, [X8 + 0x354]
	0x03CBF5A8 STR S0, [X8 + 0x358]
	0x03CBF5AC B 0x3CBB978
	0x03CBF5B0 LDR X8, [X31 + 0x48]
	0x03CBF5B4 LDR X20, [X8 + 0xE0]
	0x03CBF5B8 B 0x3CBE4E4
	0x03CBF5BC MOVZ W9, 0x4A70
	0x03CBF5C0 MOVK W9, 0xBDEC0000
	0x03CBF5C4 CMP W8, W9
	0x03CBF5C8 B.LE 0x3CBF64C
	0x03CBF5CC MOVZ W9, 0x2EE0
	0x03CBF5D0 MOVK W9, 0xC4D30000
	0x03CBF5D4 CMP W8, W9
	0x03CBF5D8 B.EQ 0x3CBF6E8
	0x03CBF5DC MOVZ W9, 0xF684
	0x03CBF5E0 MOVK W9, 0xCB660000
	0x03CBF5E4 CMP W8, W9
	0x03CBF5E8 B.EQ 0x3CBF714
	0x03CBF5EC MOVZ W9, 0x65F3
	0x03CBF5F0 MOVK W9, 0x10000
	0x03CBF5F4 CMP W8, W9
	0x03CBF5F8 B.NE 0x3CBB838
	0x03CBF5FC FMOV S0, 1
	0x03CBF600 B 0x3CBF6D0
	0x03CBF604 MOVZ W9, 0x7E7E
	0x03CBF608 MOVK W9, 0x250000
	0x03CBF60C CMP W8, W9
	0x03CBF610 B.EQ 0x3CBF694
	0x03CBF614 MOVZ W9, 0x29C9
	0x03CBF618 MOVK W9, 0x380000
	0x03CBF61C CMP W8, W9
	0x03CBF620 B.NE 0x3CBB838
	0x03CBF624 LDR X9, [X31 + 0x48]
	0x03CBF628 MOVZ W8, 0x8080
	0x03CBF62C MOVK W8, 0xFF800000
	0x03CBF630 MOVZ W1, 0x8080
	0x03CBF634 STR W8, [X9 + 0x1AC]
	0x03CBF638 ADRP X8, 0x4A2000
	0x03CBF63C LDR X8, [X8 + 0xCF0]
	0x03CBF640 ADD X0, X9, 0x1B8
	0x03CBF644 MOVK W1, 0xFF800000
	0x03CBF648 B 0x3CBF70C
	0x03CBF64C MOVZ W9, 0x1FCE
	0x03CBF650 MOVK W9, 0xB57B0000
	0x03CBF654 CMP W8, W9
	0x03CBF658 B.EQ 0x3CBF6A4
	0x03CBF65C MOVZ W9, 0x4A70
	0x03CBF660 MOVK W9, 0xBDEC0000
	0x03CBF664 CMP W8, W9
	0x03CBF668 B.NE 0x3CBB838
	0x03CBF66C LDR X9, [X31 + 0x48]
	0x03CBF670 MOVZ W8, 0x80FF
	0x03CBF674 MOVK W8, 0xFF000000
	0x03CBF678 MOVZ W1, 0x80FF
	0x03CBF67C STR W8, [X9 + 0x1AC]
	0x03CBF680 ADRP X8, 0x4A2000
	0x03CBF684 LDR X8, [X8 + 0xCF0]
	0x03CBF688 ADD X0, X9, 0x1B8
	0x03CBF68C MOVK W1, 0xFF000000
	0x03CBF690 B 0x3CBF70C
	0x03CBF694 FMOV S0, W31
	0x03CBF698 FMOV S1, W31
	0x03CBF69C FMOV S2, 1
	0x03CBF6A0 B 0x3CBF728
	0x03CBF6A4 LDR X9, [X31 + 0x48]
	0x03CBF6A8 MOVZ W8, 0x20A0
	0x03CBF6AC MOVK W8, 0xFFF00000
	0x03CBF6B0 MOVZ W1, 0x20A0
	0x03CBF6B4 STR W8, [X9 + 0x1AC]
	0x03CBF6B8 ADRP X8, 0x4A2000
	0x03CBF6BC LDR X8, [X8 + 0xCF0]
	0x03CBF6C0 ADD X0, X9, 0x1B8
	0x03CBF6C4 MOVK W1, 0xFFF00000
	0x03CBF6C8 B 0x3CBF70C
	0x03CBF6CC FMOV S0, W31
	0x03CBF6D0 FMOV S1, W31
	0x03CBF6D4 B 0x3CBF6E0
	0x03CBF6D8 FMOV S0, W31
	0x03CBF6DC FMOV S1, 1
	0x03CBF6E0 FMOV S2, W31
	0x03CBF6E4 B 0x3CBF728
	0x03CBF6E8 LDR X9, [X31 + 0x48]
	0x03CBF6EC MOVZ W8, 0xD8AD
	0x03CBF6F0 MOVK W8, 0xFFE60000
	0x03CBF6F4 MOVZ W1, 0xD8AD
	0x03CBF6F8 STR W8, [X9 + 0x1AC]
	0x03CBF6FC ADRP X8, 0x4A2000
	0x03CBF700 LDR X8, [X8 + 0xCF0]
	0x03CBF704 ADD X0, X9, 0x1B8
	0x03CBF708 MOVK W1, 0xFFE60000
	0x03CBF70C LDR X2, [X8]
	0x03CBF710 B 0x3CBB974
	0x03CBF714 ADRP X8, 0xFFFFFFFFFCE2A000
	0x03CBF718 ADRP X9, 0xFFFFFFFFFCE2B000
	0x03CBF71C LDR V1, [X8 + 0xF90]
	0x03CBF720 LDR V2, [X9 + 0x30]
	0x03CBF724 FMOV S0, 1
	0x03CBF728 FMOV S3, 1
	0x03CBF72C MOV X0, X31
	0x03CBF730 BL 0x1E43664
	0x03CBF734 B 0x3CBF16C
	0x03CBF738 STR X30, [X31 - 0x10]!
	0x03CBF73C LDR X10, [X0 + 0x19D0]
	0x03CBF740 CBZ X10, 0x3CBF78C
	0x03CBF744 LDR X9, [X10 + 0x18]
	0x03CBF748 CMP W9, 0x1
	0x03CBF74C B.LT 0x3CBF790
	0x03CBF750 MOV X8, X31
	0x03CBF754 AND X9, X9, 0x0
	0x03CBF758 MOVZ W11, 0x20
	0x03CBF75C LDR W12, [X10 + 0x18]
	0x03CBF760 CMP X8, X12
	0x03CBF764 B.CS 0x3CBF798
	0x03CBF768 ADD X8, X8, 0x1
	0x03CBF76C ADD X10, X10, X11
	0x03CBF770 CMP X9, X8
	0x03CBF774 STP X31, X31, [X10]
	0x03CBF778 STR X31, [X10 + 0x10]
	0x03CBF77C B.EQ 0x3CBF790
	0x03CBF780 LDR X10, [X0 + 0x19D0]
	0x03CBF784 ADD X11, X11, 0x18
	0x03CBF788 CBNZ X10, 0x3CBF75C
	0x03CBF78C BL 0x1C16F20
	0x03CBF790 LDR X30, [X31], #0x10
	0x03CBF794 RET
	0x03CBF798 BL 0x1C16F28
	0x03CBF79C SUB X31, X31, 0xC0
	0x03CBF7A0 STP D15, D14, [X31 + 0x20]
	0x03CBF7A4 STP D13, D12, [X31 + 0x30]
	0x03CBF7A8 STP D11, D10, [X31 + 0x40]
	0x03CBF7AC STP D9, D8, [X31 + 0x50]
	0x03CBF7B0 STP X29, X30, [X31 + 0x60]
	0x03CBF7B4 STP X28, X27, [X31 + 0x70]
	0x03CBF7B8 STP X26, X25, [X31 + 0x80]
	0x03CBF7BC STP X24, X23, [X31 + 0x90]
	0x03CBF7C0 STP X22, X21, [X31 + 0xA0]
	0x03CBF7C4 STP X20, X19, [X31 + 0xB0]
	0x03CBF7C8 ADRP X23, 0x728000
	0x03CBF7CC LDRB W8, [X23 + 0x33E]
	0x03CBF7D0 MOV X19, X3
	0x03CBF7D4 MOV X22, X2
	0x03CBF7D8 MOV X21, X1
	0x03CBF7DC MOV V12.16B, V0.16B
	0x03CBF7E0 MOV X20, X0
	0x03CBF7E4 UBFM X9, X1, 0x18, 0x3F
	0x03CBF7E8 STRB W9, [X31 + 0x1C]
	0x03CBF7EC TBNZ X8, 0x0, 0x3CBF81C
	0x03CBF7F0 ADRP X0, 0x45C000
	0x03CBF7F4 LDR X0, [X0 + 0x608]
	0x03CBF7F8 BL 0x1C16CF4
	0x03CBF7FC ADRP X0, 0x434000
	0x03CBF800 LDR X0, [X0 + 0x598]
	0x03CBF804 BL 0x1C16CF4
	0x03CBF808 ADRP X0, 0x4A2000
	0x03CBF80C LDR X0, [X0 + 0xB48]
	0x03CBF810 BL 0x1C16CF4
	0x03CBF814 MOVZ W8, 0x1
	0x03CBF818 STRB W8, [X23 + 0x33E]
	0x03CBF81C STP X31, X31, [X31 + 0x8]
	0x03CBF820 CBZ X19, 0x3CC0300
	0x03CBF824 LDR X8, [X19 + 0x30]!
	0x03CBF828 CBZ X8, 0x3CC0300
	0x03CBF82C LDRSW X9, [X20 + 0x324]
	0x03CBF830 LDR W10, [X8 + 0x18]
	0x03CBF834 CMP W9, W10
	0x03CBF838 B.CS 0x3CC0304
	0x03CBF83C MOVZ W10, 0x188
	0x03CBF840 MADD X8, X9, X10, X8
	0x03CBF844 ADD X9, X8, 0x124
	0x03CBF848 LDR X10, [X9]
	0x03CBF84C STR X10, [X8 + 0xA0]
	0x03CBF850 LDR W9, [X9 + 0x8]
	0x03CBF854 STR W9, [X8 + 0xA8]
	0x03CBF858 LDR X8, [X19]
	0x03CBF85C CBZ X8, 0x3CC0300
	0x03CBF860 ADD X29, X20, 0x324
	0x03CBF864 LDRSW X9, [X29]
	0x03CBF868 LDR W10, [X8 + 0x18]
	0x03CBF86C CMP W9, W10
	0x03CBF870 B.CS 0x3CC0304
	0x03CBF874 MOVZ W10, 0x188
	0x03CBF878 MADD X8, X9, X10, X8
	0x03CBF87C LDR X9, [X8 + 0x118]
	0x03CBF880 LDR W10, [X8 + 0x120]
	0x03CBF884 STR X9, [X8 + 0x78]
	0x03CBF888 STR W10, [X8 + 0x80]
	0x03CBF88C LDR X8, [X19]
	0x03CBF890 CBZ X8, 0x3CC0300
	0x03CBF894 LDRSW X9, [X29]
	0x03CBF898 LDR W10, [X8 + 0x18]
	0x03CBF89C CMP W9, W10
	0x03CBF8A0 B.CS 0x3CC0304
	0x03CBF8A4 MOVZ W10, 0x188
	0x03CBF8A8 MADD X8, X9, X10, X8
	0x03CBF8AC LDR X9, [X8 + 0x130]
	0x03CBF8B0 LDR W10, [X8 + 0x138]
	0x03CBF8B4 STR X9, [X8 + 0xC8]
	0x03CBF8B8 STR W10, [X8 + 0xD0]
	0x03CBF8BC LDR X8, [X19]
	0x03CBF8C0 CBZ X8, 0x3CC0300
	0x03CBF8C4 LDRSW X9, [X29]
	0x03CBF8C8 LDR W10, [X8 + 0x18]
	0x03CBF8CC CMP W9, W10
	0x03CBF8D0 B.CS 0x3CC0304
	0x03CBF8D4 MOVZ W10, 0x188
	0x03CBF8D8 MADD X8, X9, X10, X8
	0x03CBF8DC ADD X9, X8, 0x13C
	0x03CBF8E0 LDR X10, [X9]
	0x03CBF8E4 STR X10, [X8 + 0xF0]
	0x03CBF8E8 LDR W9, [X9 + 0x8]
	0x03CBF8EC STR W9, [X8 + 0xF8]
	0x03CBF8F0 LDRB W8, [X20 + 0x1AB]
	0x03CBF8F4 LDRB W9, [X31 + 0x1C]
	0x03CBF8F8 CMP W8, W21, LSR
	0x03CBF8FC CSEL W24, W8, W9, CC
	0x03CBF900 STRB W24, [X31 + 0x1C]
	0x03CBF904 CBZ X22, 0x3CC0300
	0x03CBF908 ADRP X25, 0x434000
	0x03CBF90C LDR X25, [X25 + 0x598]
	0x03CBF910 LDR X23, [X22 + 0x90]
	0x03CBF914 LDR X0, [X25]
	0x03CBF918 LDR W8, [X0 + 0xE0]
	0x03CBF91C CBNZ W8, 0x3CBF924
	0x03CBF920 BL 0x1C16DFC
	0x03CBF924 MOV X0, X23
	0x03CBF928 MOV X1, X31
	0x03CBF92C MOV X2, X31
	0x03CBF930 BL 0x3C3883C
	0x03CBF934 TBZ X0, 0x0, 0x3CBF9F0
	0x03CBF938 LDR X9, [X19]
	0x03CBF93C CBZ X9, 0x3CC0300
	0x03CBF940 LDRSW X10, [X29]
	0x03CBF944 LDR W8, [X9 + 0x18]
	0x03CBF948 CMP W10, W8
	0x03CBF94C B.CS 0x3CC0304
	0x03CBF950 MOVZ W11, 0x188
	0x03CBF954 UBFM W8, W21, 0x10, 0x1F
	0x03CBF958 MADD X9, X10, X11, X9
	0x03CBF95C STRB W8, [X9 + 0xC6]
	0x03CBF960 STRH W21, [X9 + 0xC4]
	0x03CBF964 STRB W24, [X9 + 0xC7]
	0x03CBF968 LDR X9, [X19]
	0x03CBF96C CBZ X9, 0x3CC0300
	0x03CBF970 LDRSW X10, [X29]
	0x03CBF974 LDR W11, [X9 + 0x18]
	0x03CBF978 CMP W10, W11
	0x03CBF97C B.CS 0x3CC0304
	0x03CBF980 MOVZ W11, 0x188
	0x03CBF984 MADD X9, X10, X11, X9
	0x03CBF988 STRB W8, [X9 + 0x9E]
	0x03CBF98C STRH W21, [X9 + 0x9C]
	0x03CBF990 STRB W24, [X9 + 0x9F]
	0x03CBF994 LDR X9, [X19]
	0x03CBF998 CBZ X9, 0x3CC0300
	0x03CBF99C LDRSW X10, [X29]
	0x03CBF9A0 LDR W11, [X9 + 0x18]
	0x03CBF9A4 CMP W10, W11
	0x03CBF9A8 B.CS 0x3CC0304
	0x03CBF9AC MOVZ W11, 0x188
	0x03CBF9B0 MADD X9, X10, X11, X9
	0x03CBF9B4 STRB W8, [X9 + 0xEE]
	0x03CBF9B8 STRH W21, [X9 + 0xEC]
	0x03CBF9BC STRB W24, [X9 + 0xEF]
	0x03CBF9C0 LDR X9, [X19]
	0x03CBF9C4 CBZ X9, 0x3CC0300
	0x03CBF9C8 LDRSW X10, [X29]
	0x03CBF9CC LDR W11, [X9 + 0x18]
	0x03CBF9D0 CMP W10, W11
	0x03CBF9D4 B.CS 0x3CC0304
	0x03CBF9D8 MOVZ W11, 0x188
	0x03CBF9DC MADD X9, X10, X11, X9
	0x03CBF9E0 STRB W8, [X9 + 0x116]
	0x03CBF9E4 STRH W21, [X9 + 0x114]
	0x03CBF9E8 STRB W24, [X9 + 0x117]
	0x03CBF9EC B 0x3CBFCBC
	0x03CBF9F0 LDRB W8, [X22 + 0xA1]
	0x03CBF9F4 CBNZ W8, 0x3CBFA04
	0x03CBF9F8 LDR W8, [X20 + 0x1C0]
	0x03CBF9FC CMP W8, 0x2
	0x03CBFA00 B.GE 0x3CBF938
	0x03CBFA04 LDR X0, [X25]
	0x03CBFA08 LDR X23, [X22 + 0x98]
	0x03CBFA0C LDR W8, [X0 + 0xE0]
	0x03CBFA10 CBNZ W8, 0x3CBFA18
	0x03CBFA14 BL 0x1C16DFC
	0x03CBFA18 MOV X0, X23
	0x03CBFA1C MOV X1, X31
	0x03CBFA20 MOV X2, X31
	0x03CBFA24 BL 0x3C354F8
	0x03CBFA28 LDR X23, [X19]
	0x03CBFA2C CBZ X23, 0x3CC0300
	0x03CBFA30 LDRSW X26, [X29]
	0x03CBFA34 LDR W8, [X23 + 0x18]
	0x03CBFA38 CMP W26, W8
	0x03CBFA3C B.CS 0x3CC0304
	0x03CBFA40 TBZ X0, 0x0, 0x3CBFB6C
	0x03CBFA44 LDR X8, [X22 + 0x98]
	0x03CBFA48 CBZ X8, 0x3CC0300
	0x03CBFA4C LDP S0, S1, [X8 + 0x3C]
	0x03CBFA50 LDP S2, S3, [X8 + 0x44]
	0x03CBFA54 AND W8, W21, 0xFF
	0x03CBFA58 MOVZ W10, 0x437F0000
	0x03CBFA5C UBFM W9, W21, 0x8, 0xF
	0x03CBFA60 UCVTF S4, W8
	0x03CBFA64 UBFM W8, W21, 0x10, 0x17
	0x03CBFA68 FMOV S5, W10
	0x03CBFA6C AND W10, W24, 0xFF
	0x03CBFA70 UCVTF S6, W9
	0x03CBFA74 UCVTF S7, W8
	0x03CBFA78 UCVTF S16, W10
	0x03CBFA7C FDIV S11, S4, S5
	0x03CBFA80 FDIV S10, S6, S5
	0x03CBFA84 FDIV S9, S7, S5
	0x03CBFA88 FDIV S8, S16, S5
	0x03CBFA8C FMUL S0, S0, S11
	0x03CBFA90 FMUL S1, S1, S10
	0x03CBFA94 FMUL S2, S2, S9
	0x03CBFA98 FMUL S3, S3, S8
	0x03CBFA9C MOV X0, X31
	0x03CBFAA0 BL 0x1E43664
	0x03CBFAA4 MOVZ W8, 0x188
	0x03CBFAA8 MADD X8, X26, X8, X23
	0x03CBFAAC STR W0, [X8 + 0xC4]
	0x03CBFAB0 LDR X23, [X19]
	0x03CBFAB4 CBZ X23, 0x3CC0300
	0x03CBFAB8 LDRSW X26, [X29]
	0x03CBFABC LDR W8, [X23 + 0x18]
	0x03CBFAC0 CMP W26, W8
	0x03CBFAC4 B.CS 0x3CC0304
	0x03CBFAC8 LDR X8, [X22 + 0x98]
	0x03CBFACC CBZ X8, 0x3CC0300
	0x03CBFAD0 LDP S0, S1, [X8 + 0x1C]
	0x03CBFAD4 LDP S2, S3, [X8 + 0x24]
	0x03CBFAD8 MOV X0, X31
	0x03CBFADC FMUL S0, S11, S0
	0x03CBFAE0 FMUL S1, S10, S1
	0x03CBFAE4 FMUL S2, S9, S2
	0x03CBFAE8 FMUL S3, S8, S3
	0x03CBFAEC BL 0x1E43664
	0x03CBFAF0 MOVZ W8, 0x188
	0x03CBFAF4 MADD X8, X26, X8, X23
	0x03CBFAF8 STR W0, [X8 + 0x9C]
	0x03CBFAFC LDR X23, [X19]
	0x03CBFB00 CBZ X23, 0x3CC0300
	0x03CBFB04 LDRSW X26, [X29]
	0x03CBFB08 LDR W8, [X23 + 0x18]
	0x03CBFB0C CMP W26, W8
	0x03CBFB10 B.CS 0x3CC0304
	0x03CBFB14 LDR X8, [X22 + 0x98]
	0x03CBFB18 CBZ X8, 0x3CC0300
	0x03CBFB1C LDP S0, S1, [X8 + 0x2C]
	0x03CBFB20 LDP S2, S3, [X8 + 0x34]
	0x03CBFB24 MOV X0, X31
	0x03CBFB28 FMUL S0, S11, S0
	0x03CBFB2C FMUL S1, S10, S1
	0x03CBFB30 FMUL S2, S9, S2
	0x03CBFB34 FMUL S3, S8, S3
	0x03CBFB38 BL 0x1E43664
	0x03CBFB3C MOVZ W8, 0x188
	0x03CBFB40 MADD X8, X26, X8, X23
	0x03CBFB44 STR W0, [X8 + 0xEC]
	0x03CBFB48 LDR X23, [X19]
	0x03CBFB4C CBZ X23, 0x3CC0300
	0x03CBFB50 LDRSW X26, [X29]
	0x03CBFB54 LDR W8, [X23 + 0x18]
	0x03CBFB58 CMP W26, W8
	0x03CBFB5C B.CS 0x3CC0304
	0x03CBFB60 LDR X8, [X22 + 0x98]
	0x03CBFB64 CBNZ X8, 0x3CBFC90
	0x03CBFB68 B 0x3CC0300
	0x03CBFB6C LDR X8, [X22 + 0x90]
	0x03CBFB70 CBZ X8, 0x3CC0300
	0x03CBFB74 LDP S0, S1, [X8 + 0x3C]
	0x03CBFB78 LDP S2, S3, [X8 + 0x44]
	0x03CBFB7C AND W8, W21, 0xFF
	0x03CBFB80 MOVZ W10, 0x437F0000
	0x03CBFB84 UBFM W9, W21, 0x8, 0xF
	0x03CBFB88 UCVTF S4, W8
	0x03CBFB8C UBFM W8, W21, 0x10, 0x17
	0x03CBFB90 FMOV S5, W10
	0x03CBFB94 AND W10, W24, 0xFF
	0x03CBFB98 UCVTF S6, W9
	0x03CBFB9C UCVTF S7, W8
	0x03CBFBA0 UCVTF S16, W10
	0x03CBFBA4 FDIV S11, S4, S5
	0x03CBFBA8 FDIV S10, S6, S5
	0x03CBFBAC FDIV S9, S7, S5
	0x03CBFBB0 FDIV S8, S16, S5
	0x03CBFBB4 FMUL S0, S0, S11
	0x03CBFBB8 FMUL S1, S1, S10
	0x03CBFBBC FMUL S2, S2, S9
	0x03CBFBC0 FMUL S3, S3, S8
	0x03CBFBC4 MOV X0, X31
	0x03CBFBC8 BL 0x1E43664
	0x03CBFBCC MOVZ W8, 0x188
	0x03CBFBD0 MADD X8, X26, X8, X23
	0x03CBFBD4 STR W0, [X8 + 0xC4]
	0x03CBFBD8 LDR X23, [X19]
	0x03CBFBDC CBZ X23, 0x3CC0300
	0x03CBFBE0 LDRSW X26, [X29]
	0x03CBFBE4 LDR W8, [X23 + 0x18]
	0x03CBFBE8 CMP W26, W8
	0x03CBFBEC B.CS 0x3CC0304
	0x03CBFBF0 LDR X8, [X22 + 0x90]
	0x03CBFBF4 CBZ X8, 0x3CC0300
	0x03CBFBF8 LDP S0, S1, [X8 + 0x1C]
	0x03CBFBFC LDP S2, S3, [X8 + 0x24]
	0x03CBFC00 MOV X0, X31
	0x03CBFC04 FMUL S0, S11, S0
	0x03CBFC08 FMUL S1, S10, S1
	0x03CBFC0C FMUL S2, S9, S2
	0x03CBFC10 FMUL S3, S8, S3
	0x03CBFC14 BL 0x1E43664
	0x03CBFC18 MOVZ W8, 0x188
	0x03CBFC1C MADD X8, X26, X8, X23
	0x03CBFC20 STR W0, [X8 + 0x9C]
	0x03CBFC24 LDR X23, [X19]
	0x03CBFC28 CBZ X23, 0x3CC0300
	0x03CBFC2C LDRSW X26, [X29]
	0x03CBFC30 LDR W8, [X23 + 0x18]
	0x03CBFC34 CMP W26, W8
	0x03CBFC38 B.CS 0x3CC0304
	0x03CBFC3C LDR X8, [X22 + 0x90]
	0x03CBFC40 CBZ X8, 0x3CC0300
	0x03CBFC44 LDP S0, S1, [X8 + 0x2C]
	0x03CBFC48 LDP S2, S3, [X8 + 0x34]
	0x03CBFC4C MOV X0, X31
	0x03CBFC50 FMUL S0, S11, S0
	0x03CBFC54 FMUL S1, S10, S1
	0x03CBFC58 FMUL S2, S9, S2
	0x03CBFC5C FMUL S3, S8, S3
	0x03CBFC60 BL 0x1E43664
	0x03CBFC64 MOVZ W8, 0x188
	0x03CBFC68 MADD X8, X26, X8, X23
	0x03CBFC6C STR W0, [X8 + 0xEC]
	0x03CBFC70 LDR X23, [X19]
	0x03CBFC74 CBZ X23, 0x3CC0300
	0x03CBFC78 LDRSW X26, [X29]
	0x03CBFC7C LDR W8, [X23 + 0x18]
	0x03CBFC80 CMP W26, W8
	0x03CBFC84 B.CS 0x3CC0304
	0x03CBFC88 LDR X8, [X22 + 0x90]
	0x03CBFC8C CBZ X8, 0x3CC0300
	0x03CBFC90 LDP S0, S1, [X8 + 0x4C]
	0x03CBFC94 LDP S2, S3, [X8 + 0x54]
	0x03CBFC98 MOV X0, X31
	0x03CBFC9C FMUL S0, S11, S0
	0x03CBFCA0 FMUL S1, S10, S1
	0x03CBFCA4 FMUL S2, S9, S2
	0x03CBFCA8 FMUL S3, S8, S3
	0x03CBFCAC BL 0x1E43664
	0x03CBFCB0 MOVZ W8, 0x188
	0x03CBFCB4 MADD X8, X26, X8, X23
	0x03CBFCB8 STR W0, [X8 + 0x114]
	0x03CBFCBC LDR X0, [X25]
	0x03CBFCC0 LDR X22, [X20 + 0x288]
	0x03CBFCC4 LDR W8, [X0 + 0xE0]
	0x03CBFCC8 CBNZ W8, 0x3CBFCD0
	0x03CBFCCC BL 0x1C16DFC
	0x03CBFCD0 MOV X0, X22
	0x03CBFCD4 MOV X1, X31
	0x03CBFCD8 MOV X2, X31
	0x03CBFCDC BL 0x3C354F8
	0x03CBFCE0 TBZ X0, 0x0, 0x3CC00B4
	0x03CBFCE4 LDR X22, [X19]
	0x03CBFCE8 CBZ X22, 0x3CC0300
	0x03CBFCEC LDRSW X23, [X20 + 0x324]
	0x03CBFCF0 LDR W8, [X22 + 0x18]
	0x03CBFCF4 CMP W23, W8
	0x03CBFCF8 B.CS 0x3CC0304
	0x03CBFCFC LDRB W8, [X20 + 0x2B8]
	0x03CBFD00 CBZ W8, 0x3CBFF14
	0x03CBFD04 MOVZ W8, 0x188
	0x03CBFD08 MADD X21, X23, X8, X22
	0x03CBFD0C LDR W9, [X21 + 0xC4]!
	0x03CBFD10 LDR X8, [X20 + 0x288]
	0x03CBFD14 CBZ X8, 0x3CC0300
	0x03CBFD18 UBFM X10, X9, 0x18, 0x3F
	0x03CBFD1C UCVTF S0, W10
	0x03CBFD20 UBFM W10, W9, 0x10, 0x17
	0x03CBFD24 MOVZ W11, 0x437F0000
	0x03CBFD28 UCVTF S2, W10
	0x03CBFD2C UBFM W10, W9, 0x8, 0xF
	0x03CBFD30 AND W9, W9, 0xFF
	0x03CBFD34 FMOV S1, W11
	0x03CBFD38 UCVTF S6, W9
	0x03CBFD3C LDP S3, S4, [X8 + 0x3C]
	0x03CBFD40 FDIV S7, S0, S1
	0x03CBFD44 FDIV S0, S6, S1
	0x03CBFD48 LDP S6, S16, [X8 + 0x44]
	0x03CBFD4C UCVTF S5, W10
	0x03CBFD50 FDIV S2, S2, S1
	0x03CBFD54 FDIV S5, S5, S1
	0x03CBFD58 FMUL S0, S0, S3
	0x03CBFD5C FMUL S1, S5, S4
	0x03CBFD60 FMUL S2, S2, S6
	0x03CBFD64 FMUL S3, S7, S16
	0x03CBFD68 MOV X0, X31
	0x03CBFD6C BL 0x1E43664
	0x03CBFD70 STR W0, [X21]
	0x03CBFD74 LDR X8, [X19]
	0x03CBFD78 CBZ X8, 0x3CC0300
	0x03CBFD7C LDRSW X9, [X29]
	0x03CBFD80 LDR W10, [X8 + 0x18]
	0x03CBFD84 CMP W9, W10
	0x03CBFD88 B.CS 0x3CC0304
	0x03CBFD8C MOVZ W10, 0x188
	0x03CBFD90 MADD X21, X9, X10, X8
	0x03CBFD94 LDR W9, [X21 + 0x9C]!
	0x03CBFD98 LDR X8, [X20 + 0x288]
	0x03CBFD9C CBZ X8, 0x3CC0300
	0x03CBFDA0 UBFM X10, X9, 0x18, 0x3F
	0x03CBFDA4 UCVTF S0, W10
	0x03CBFDA8 UBFM W10, W9, 0x10, 0x17
	0x03CBFDAC MOVZ W11, 0x437F0000
	0x03CBFDB0 UCVTF S2, W10
	0x03CBFDB4 UBFM W10, W9, 0x8, 0xF
	0x03CBFDB8 AND W9, W9, 0xFF
	0x03CBFDBC FMOV S1, W11
	0x03CBFDC0 UCVTF S6, W9
	0x03CBFDC4 LDP S3, S4, [X8 + 0x1C]
	0x03CBFDC8 FDIV S7, S0, S1
	0x03CBFDCC FDIV S0, S6, S1
	0x03CBFDD0 LDP S6, S16, [X8 + 0x24]
	0x03CBFDD4 UCVTF S5, W10
	0x03CBFDD8 FDIV S2, S2, S1
	0x03CBFDDC FDIV S5, S5, S1
	0x03CBFDE0 FMUL S0, S0, S3
	0x03CBFDE4 FMUL S1, S5, S4
	0x03CBFDE8 FMUL S2, S2, S6
	0x03CBFDEC FMUL S3, S7, S16
	0x03CBFDF0 MOV X0, X31
	0x03CBFDF4 BL 0x1E43664
	0x03CBFDF8 STR W0, [X21]
	0x03CBFDFC LDR X8, [X19]
	0x03CBFE00 CBZ X8, 0x3CC0300
	0x03CBFE04 LDRSW X9, [X29]
	0x03CBFE08 LDR W10, [X8 + 0x18]
	0x03CBFE0C CMP W9, W10
	0x03CBFE10 B.CS 0x3CC0304
	0x03CBFE14 MOVZ W10, 0x188
	0x03CBFE18 MADD X21, X9, X10, X8
	0x03CBFE1C LDR W9, [X21 + 0xEC]!
	0x03CBFE20 LDR X8, [X20 + 0x288]
	0x03CBFE24 CBZ X8, 0x3CC0300
	0x03CBFE28 UBFM X10, X9, 0x18, 0x3F
	0x03CBFE2C UCVTF S0, W10
	0x03CBFE30 UBFM W10, W9, 0x10, 0x17
	0x03CBFE34 MOVZ W11, 0x437F0000
	0x03CBFE38 UCVTF S2, W10
	0x03CBFE3C UBFM W10, W9, 0x8, 0xF
	0x03CBFE40 AND W9, W9, 0xFF
	0x03CBFE44 FMOV S1, W11
	0x03CBFE48 UCVTF S6, W9
	0x03CBFE4C LDP S3, S4, [X8 + 0x2C]
	0x03CBFE50 FDIV S7, S0, S1
	0x03CBFE54 FDIV S0, S6, S1
	0x03CBFE58 LDP S6, S16, [X8 + 0x34]
	0x03CBFE5C UCVTF S5, W10
	0x03CBFE60 FDIV S2, S2, S1
	0x03CBFE64 FDIV S5, S5, S1
	0x03CBFE68 FMUL S0, S0, S3
	0x03CBFE6C FMUL S1, S5, S4
	0x03CBFE70 FMUL S2, S2, S6
	0x03CBFE74 FMUL S3, S7, S16
	0x03CBFE78 MOV X0, X31
	0x03CBFE7C BL 0x1E43664
	0x03CBFE80 STR W0, [X21]
	0x03CBFE84 LDR X9, [X19]
	0x03CBFE88 CBZ X9, 0x3CC0300
	0x03CBFE8C LDRSW X10, [X29]
	0x03CBFE90 LDR W8, [X9 + 0x18]
	0x03CBFE94 CMP W10, W8
	0x03CBFE98 B.CS 0x3CC0304
	0x03CBFE9C LDR X8, [X20 + 0x288]
	0x03CBFEA0 CBZ X8, 0x3CC0300
	0x03CBFEA4 MOVZ W11, 0x188
	0x03CBFEA8 MADD X9, X10, X11, X9
	0x03CBFEAC LDR W10, [X9 + 0x114]
	0x03CBFEB0 MOVZ W11, 0x437F0000
	0x03CBFEB4 FMOV S2, W11
	0x03CBFEB8 LDP S0, S1, [X8 + 0x4C]
	0x03CBFEBC UBFM X11, X10, 0x18, 0x3F
	0x03CBFEC0 UCVTF S3, W11
	0x03CBFEC4 UBFM W11, W10, 0x10, 0x17
	0x03CBFEC8 UCVTF S4, W11
	0x03CBFECC UBFM W11, W10, 0x8, 0xF
	0x03CBFED0 AND W10, W10, 0xFF
	0x03CBFED4 UCVTF S5, W11
	0x03CBFED8 UCVTF S6, W10
	0x03CBFEDC FDIV S3, S3, S2
	0x03CBFEE0 FDIV S4, S4, S2
	0x03CBFEE4 FDIV S5, S5, S2
	0x03CBFEE8 FDIV S2, S6, S2
	0x03CBFEEC LDP S6, S7, [X8 + 0x54]
	0x03CBFEF0 FMUL S0, S2, S0
	0x03CBFEF4 FMUL S1, S5, S1
	0x03CBFEF8 MOV X0, X31
	0x03CBFEFC FMUL S2, S4, S6
	0x03CBFF00 FMUL S3, S3, S7
	0x03CBFF04 ADD X21, X9, 0x114
	0x03CBFF08 BL 0x1E43664
	0x03CBFF0C STR W0, [X21]
	0x03CBFF10 B 0x3CC00B4
	0x03CBFF14 LDR X8, [X20 + 0x288]
	0x03CBFF18 STR S12, [X31 + 0x4]
	0x03CBFF1C CBZ X8, 0x3CC0300
	0x03CBFF20 LDP S13, S14, [X8 + 0x3C]
	0x03CBFF24 LDP S15, S8, [X8 + 0x44]
	0x03CBFF28 AND W8, W21, 0xFF
	0x03CBFF2C UCVTF S0, W8
	0x03CBFF30 MOVZ W8, 0x437F0000
	0x03CBFF34 FMOV S1, W8
	0x03CBFF38 ADRP X8, 0x4A2000
	0x03CBFF3C LDR X8, [X8 + 0xB48]
	0x03CBFF40 UBFM W9, W21, 0x8, 0xF
	0x03CBFF44 UBFM W10, W21, 0x10, 0x17
	0x03CBFF48 FDIV S10, S0, S1
	0x03CBFF4C LDR X0, [X8]
	0x03CBFF50 UCVTF S0, W9
	0x03CBFF54 FDIV S9, S0, S1
	0x03CBFF58 UCVTF S0, W10
	0x03CBFF5C LDR W8, [X0 + 0xE0]
	0x03CBFF60 AND W9, W24, 0xFF
	0x03CBFF64 FDIV S11, S0, S1
	0x03CBFF68 UCVTF S0, W9
	0x03CBFF6C FDIV S12, S0, S1
	0x03CBFF70 CBNZ W8, 0x3CBFF78
	0x03CBFF74 BL 0x1C16DFC
	0x03CBFF78 MOV V0.16B, V13.16B
	0x03CBFF7C MOV V1.16B, V14.16B
	0x03CBFF80 MOV V2.16B, V15.16B
	0x03CBFF84 MOV V3.16B, V8.16B
	0x03CBFF88 MOV V4.16B, V10.16B
	0x03CBFF8C MOV V5.16B, V9.16B
	0x03CBFF90 MOV V6.16B, V11.16B
	0x03CBFF94 MOV V7.16B, V12.16B
	0x03CBFF98 MOV X0, X31
	0x03CBFF9C BL 0x3CC93EC
	0x03CBFFA0 MOV X0, X31
	0x03CBFFA4 BL 0x1E43664
	0x03CBFFA8 MOVZ W8, 0x188
	0x03CBFFAC MADD X8, X23, X8, X22
	0x03CBFFB0 STR W0, [X8 + 0xC4]
	0x03CBFFB4 LDR X21, [X19]
	0x03CBFFB8 CBZ X21, 0x3CC0300
	0x03CBFFBC LDRSW X22, [X29]
	0x03CBFFC0 LDR W8, [X21 + 0x18]
	0x03CBFFC4 CMP W22, W8
	0x03CBFFC8 B.CS 0x3CC0304
	0x03CBFFCC LDR X8, [X20 + 0x288]
	0x03CBFFD0 CBZ X8, 0x3CC0300
	0x03CBFFD4 LDP S0, S1, [X8 + 0x1C]
	0x03CBFFD8 LDP S2, S3, [X8 + 0x24]
	0x03CBFFDC MOV V4.16B, V10.16B
	0x03CBFFE0 MOV V5.16B, V9.16B
	0x03CBFFE4 MOV V6.16B, V11.16B
	0x03CBFFE8 MOV V7.16B, V12.16B
	0x03CBFFEC MOV X0, X31
	0x03CBFFF0 BL 0x3CC93EC
	0x03CBFFF4 MOV X0, X31
	0x03CBFFF8 BL 0x1E43664
	0x03CBFFFC MOVZ W8, 0x188
	0x03CC0000 MADD X8, X22, X8, X21
	0x03CC0004 STR W0, [X8 + 0x9C]
	0x03CC0008 LDR X21, [X19]
	0x03CC000C CBZ X21, 0x3CC0300
	0x03CC0010 LDRSW X22, [X29]
	0x03CC0014 LDR W8, [X21 + 0x18]
	0x03CC0018 CMP W22, W8
	0x03CC001C B.CS 0x3CC0304
	0x03CC0020 LDR X8, [X20 + 0x288]
	0x03CC0024 CBZ X8, 0x3CC0300
	0x03CC0028 LDP S0, S1, [X8 + 0x2C]
	0x03CC002C LDP S2, S3, [X8 + 0x34]
	0x03CC0030 MOV V4.16B, V10.16B
	0x03CC0034 MOV V5.16B, V9.16B
	0x03CC0038 MOV V6.16B, V11.16B
	0x03CC003C MOV V7.16B, V12.16B
	0x03CC0040 MOV X0, X31
	0x03CC0044 BL 0x3CC93EC
	0x03CC0048 MOV X0, X31
	0x03CC004C BL 0x1E43664
	0x03CC0050 MOVZ W8, 0x188
	0x03CC0054 MADD X8, X22, X8, X21
	0x03CC0058 STR W0, [X8 + 0xEC]
	0x03CC005C LDR X21, [X19]
	0x03CC0060 CBZ X21, 0x3CC0300
	0x03CC0064 LDRSW X22, [X29]
	0x03CC0068 LDR W8, [X21 + 0x18]
	0x03CC006C CMP W22, W8
	0x03CC0070 B.CS 0x3CC0304
	0x03CC0074 LDR X8, [X20 + 0x288]
	0x03CC0078 CBZ X8, 0x3CC0300
	0x03CC007C LDP S0, S1, [X8 + 0x4C]
	0x03CC0080 LDP S2, S3, [X8 + 0x54]
	0x03CC0084 MOV V4.16B, V10.16B
	0x03CC0088 MOV V5.16B, V9.16B
	0x03CC008C MOV V6.16B, V11.16B
	0x03CC0090 MOV V7.16B, V12.16B
	0x03CC0094 MOV X0, X31
	0x03CC0098 BL 0x3CC93EC
	0x03CC009C MOV X0, X31
	0x03CC00A0 BL 0x1E43664
	0x03CC00A4 LDR V12, [X31 + 0x4]
	0x03CC00A8 MOVZ W8, 0x188
	0x03CC00AC MADD X8, X22, X8, X21
	0x03CC00B0 STR W0, [X8 + 0x114]
	0x03CC00B4 LDR X8, [X19]
	0x03CC00B8 CBZ X8, 0x3CC0300
	0x03CC00BC LDRSW X9, [X29]
	0x03CC00C0 LDR W10, [X8 + 0x18]
	0x03CC00C4 CMP W9, W10
	0x03CC00C8 B.CS 0x3CC0304
	0x03CC00CC MOVZ W10, 0x188
	0x03CC00D0 MADD X8, X9, X10, X8
	0x03CC00D4 LDR X0, [X8 + 0x38]
	0x03CC00D8 CBNZ X0, 0x3CC00EC
	0x03CC00DC LDR X8, [X20 + 0x1588]
	0x03CC00E0 CBZ X8, 0x3CC0300
	0x03CC00E4 LDR X0, [X8 + 0x20]
	0x03CC00E8 CBZ X0, 0x3CC0300
	0x03CC00EC ADRP X21, 0x45B000
	0x03CC00F0 LDR X21, [X21 + 0x608]
	0x03CC00F4 MOV X1, X31
	0x03CC00F8 BL 0x3C9C4CC
	0x03CC00FC MOV X8, X0
	0x03CC0100 LDR X0, [X21]
	0x03CC0104 STP X8, X1, [X31 + 0x8]
	0x03CC0108 LDR W8, [X0 + 0xE0]
	0x03CC010C CBNZ W8, 0x3CC0114
	0x03CC0110 BL 0x1C16DFC
	0x03CC0114 ADD X0, X31, 0x8
	0x03CC0118 MOV X1, X31
	0x03CC011C BL 0x3C9C090
	0x03CC0120 LDR X8, [X20 + 0x68]
	0x03CC0124 CBZ X8, 0x3CC0300
	0x03CC0128 MOV W21, W0
	0x03CC012C MOV X0, X8
	0x03CC0130 MOV X1, X31
	0x03CC0134 BL 0x3C9F094
	0x03CC0138 MOV W24, W0
	0x03CC013C ADD X0, X31, 0x8
	0x03CC0140 MOV X1, X31
	0x03CC0144 BL 0x3C9C098
	0x03CC0148 LDR X8, [X20 + 0x68]
	0x03CC014C CBZ X8, 0x3CC0300
	0x03CC0150 MOV W26, W0
	0x03CC0154 MOV X0, X8
	0x03CC0158 MOV X1, X31
	0x03CC015C BL 0x3C9F0A4
	0x03CC0160 MOV W28, W0
	0x03CC0164 ADD X0, X31, 0x8
	0x03CC0168 MOV X1, X31
	0x03CC016C BL 0x3C9C098
	0x03CC0170 MOV W23, W0
	0x03CC0174 ADD X0, X31, 0x8
	0x03CC0178 MOV X1, X31
	0x03CC017C BL 0x3C9C0A8
	0x03CC0180 LDR X8, [X20 + 0x68]
	0x03CC0184 CBZ X8, 0x3CC0300
	0x03CC0188 MOV W25, W0
	0x03CC018C MOV X0, X8
	0x03CC0190 MOV X1, X31
	0x03CC0194 BL 0x3C9F0A4
	0x03CC0198 MOV W27, W0
	0x03CC019C ADD X0, X31, 0x8
	0x03CC01A0 MOV X1, X31
	0x03CC01A4 BL 0x3C9C090
	0x03CC01A8 MOV W22, W0
	0x03CC01AC ADD X0, X31, 0x8
	0x03CC01B0 MOV X1, X31
	0x03CC01B4 BL 0x3C9C0A0
	0x03CC01B8 LDR X8, [X20 + 0x68]
	0x03CC01BC CBZ X8, 0x3CC0300
	0x03CC01C0 MOV W20, W0
	0x03CC01C4 MOV X0, X8
	0x03CC01C8 MOV X1, X31
	0x03CC01CC BL 0x3C9F094
	0x03CC01D0 LDR X8, [X19]
	0x03CC01D4 CBZ X8, 0x3CC0300
	0x03CC01D8 LDRSW X9, [X29]
	0x03CC01DC LDR W10, [X8 + 0x18]
	0x03CC01E0 CMP W9, W10
	0x03CC01E4 B.CS 0x3CC0304
	0x03CC01E8 SCVTF S0, W21
	0x03CC01EC SCVTF S2, W26
	0x03CC01F0 SCVTF S1, W24
	0x03CC01F4 SCVTF S3, W28
	0x03CC01F8 MOVZ W10, 0x188
	0x03CC01FC FSUB S0, S0, S12
	0x03CC0200 FSUB S4, S2, S12
	0x03CC0204 MADD X8, X9, X10, X8
	0x03CC0208 FDIV S2, S0, S1
	0x03CC020C FDIV S0, S4, S3
	0x03CC0210 STP S2, S0, [X8 + 0xAC]
	0x03CC0214 STP W31, W31, [X8 + 0xB4]
	0x03CC0218 LDR X8, [X19]
	0x03CC021C CBZ X8, 0x3CC0300
	0x03CC0220 LDRSW X9, [X29]
	0x03CC0224 LDR W10, [X8 + 0x18]
	0x03CC0228 CMP W9, W10
	0x03CC022C B.CS 0x3CC0304
	0x03CC0230 SCVTF S3, W23
	0x03CC0234 FMOV S1, W31
	0x03CC0238 FADD S3, S3, S12
	0x03CC023C SCVTF S4, W25
	0x03CC0240 FADD S3, S3, S1
	0x03CC0244 SCVTF S5, W27
	0x03CC0248 MOVZ W10, 0x188
	0x03CC024C FADD S3, S3, S4
	0x03CC0250 MADD X8, X9, X10, X8
	0x03CC0254 FDIV S3, S3, S5
	0x03CC0258 STP S2, S3, [X8 + 0x84]
	0x03CC025C STP W31, W31, [X8 + 0x8C]
	0x03CC0260 LDR X8, [X19]
	0x03CC0264 CBZ X8, 0x3CC0300
	0x03CC0268 LDRSW X9, [X29]
	0x03CC026C LDR W10, [X8 + 0x18]
	0x03CC0270 CMP W9, W10
	0x03CC0274 B.CS 0x3CC0304
	0x03CC0278 SCVTF S2, W22
	0x03CC027C FADD S2, S2, S12
	0x03CC0280 SCVTF S4, W20
	0x03CC0284 FADD S1, S2, S1
	0x03CC0288 SCVTF S5, W0
	0x03CC028C MOVZ W10, 0x188
	0x03CC0290 FADD S1, S1, S4
	0x03CC0294 MADD X8, X9, X10, X8
	0x03CC0298 FDIV S1, S1, S5
	0x03CC029C STP S1, S3, [X8 + 0xD4]
	0x03CC02A0 STP W31, W31, [X8 + 0xDC]
	0x03CC02A4 LDR X8, [X19]
	0x03CC02A8 CBZ X8, 0x3CC0300
	0x03CC02AC LDRSW X9, [X29]
	0x03CC02B0 LDR W10, [X8 + 0x18]
	0x03CC02B4 CMP W9, W10
	0x03CC02B8 B.CS 0x3CC0304
	0x03CC02BC LDP X20, X19, [X31 + 0xB0]
	0x03CC02C0 LDP X22, X21, [X31 + 0xA0]
	0x03CC02C4 LDP X24, X23, [X31 + 0x90]
	0x03CC02C8 LDP X26, X25, [X31 + 0x80]
	0x03CC02CC LDP X28, X27, [X31 + 0x70]
	0x03CC02D0 LDP X29, X30, [X31 + 0x60]
	0x03CC02D4 LDP D9, D8, [X31 + 0x50]
	0x03CC02D8 LDP D11, D10, [X31 + 0x40]
	0x03CC02DC LDP D13, D12, [X31 + 0x30]
	0x03CC02E0 LDP D15, D14, [X31 + 0x20]
	0x03CC02E4 MOVZ W10, 0x188
	0x03CC02E8 MADD X8, X9, X10, X8
	0x03CC02EC STP S1, S0, [X8 + 0xFC]
	0x03CC02F0 STR W31, [X8 + 0x108]
	0x03CC02F4 STR W31, [X8 + 0x104]
	0x03CC02F8 ADD X31, X31, 0xC0
	0x03CC02FC RET
	0x03CC0300 BL 0x1C16F20
	0x03CC0304 BL 0x1C16F28
	0x03CC0308 SUB X31, X31, 0x70
	0x03CC030C STP X29, X30, [X31 + 0x10]
	0x03CC0310 STP X28, X27, [X31 + 0x20]
	0x03CC0314 STP X26, X25, [X31 + 0x30]
	0x03CC0318 STP X24, X23, [X31 + 0x40]
	0x03CC031C STP X22, X21, [X31 + 0x50]
	0x03CC0320 STP X20, X19, [X31 + 0x60]
	0x03CC0324 ADRP X21, 0x727000
	0x03CC0328 LDRB W8, [X21 + 0x33F]
	0x03CC032C MOV X19, X3
	0x03CC0330 MOV X23, X2
	0x03CC0334 MOV X22, X1
	0x03CC0338 MOV X20, X0
	0x03CC033C TBNZ X8, 0x0, 0x3CC0360
	0x03CC0340 ADRP X0, 0x45B000
	0x03CC0344 LDR X0, [X0 + 0x608]
	0x03CC0348 BL 0x1C16CF4
	0x03CC034C ADRP X0, 0x433000
	0x03CC0350 LDR X0, [X0 + 0x598]
	0x03CC0354 BL 0x1C16CF4
	0x03CC0358 MOVZ W8, 0x1
	0x03CC035C STRB W8, [X21 + 0x33F]
	0x03CC0360 STP X31, X31, [X31]
	0x03CC0364 CBZ X19, 0x3CC0B24
	0x03CC0368 LDR X8, [X19 + 0x30]
	0x03CC036C CBZ X8, 0x3CC0B24
	0x03CC0370 LDRSW X9, [X20 + 0x324]
	0x03CC0374 LDR W10, [X8 + 0x18]
	0x03CC0378 CMP W9, W10
	0x03CC037C B.CS 0x3CC0B28
	0x03CC0380 MOVZ W10, 0x188
	0x03CC0384 MADD X8, X9, X10, X8
	0x03CC0388 ADD X9, X8, 0x124
	0x03CC038C LDR X10, [X9]
	0x03CC0390 STR X10, [X8 + 0xA0]
	0x03CC0394 LDR W9, [X9 + 0x8]
	0x03CC0398 STR W9, [X8 + 0xA8]
	0x03CC039C LDR X8, [X19 + 0x30]
	0x03CC03A0 CBZ X8, 0x3CC0B24
	0x03CC03A4 LDRSW X9, [X20 + 0x324]
	0x03CC03A8 LDR W10, [X8 + 0x18]
	0x03CC03AC CMP W9, W10
	0x03CC03B0 B.CS 0x3CC0B28
	0x03CC03B4 MOVZ W10, 0x188
	0x03CC03B8 MADD X8, X9, X10, X8
	0x03CC03BC LDR X9, [X8 + 0x118]
	0x03CC03C0 LDR W10, [X8 + 0x120]
	0x03CC03C4 STR X9, [X8 + 0x78]
	0x03CC03C8 STR W10, [X8 + 0x80]
	0x03CC03CC LDR X8, [X19 + 0x30]
	0x03CC03D0 CBZ X8, 0x3CC0B24
	0x03CC03D4 LDRSW X9, [X20 + 0x324]
	0x03CC03D8 LDR W10, [X8 + 0x18]
	0x03CC03DC CMP W9, W10
	0x03CC03E0 B.CS 0x3CC0B28
	0x03CC03E4 MOVZ W10, 0x188
	0x03CC03E8 MADD X8, X9, X10, X8
	0x03CC03EC LDR X9, [X8 + 0x130]
	0x03CC03F0 LDR W10, [X8 + 0x138]
	0x03CC03F4 STR X9, [X8 + 0xC8]
	0x03CC03F8 STR W10, [X8 + 0xD0]
	0x03CC03FC LDR X8, [X19 + 0x30]
	0x03CC0400 CBZ X8, 0x3CC0B24
	0x03CC0404 LDRSW X9, [X20 + 0x324]
	0x03CC0408 LDR W10, [X8 + 0x18]
	0x03CC040C CMP W9, W10
	0x03CC0410 B.CS 0x3CC0B28
	0x03CC0414 MOVZ W10, 0x188
	0x03CC0418 MADD X8, X9, X10, X8
	0x03CC041C ADD X9, X8, 0x13C
	0x03CC0420 LDR X10, [X9]
	0x03CC0424 STR X10, [X8 + 0xF0]
	0x03CC0428 LDR W9, [X9 + 0x8]
	0x03CC042C STR W9, [X8 + 0xF8]
	0x03CC0430 CBZ X23, 0x3CC0B24
	0x03CC0434 ADRP X28, 0x433000
	0x03CC0438 LDRB W9, [X23 + 0xA0]
	0x03CC043C LDR X28, [X28 + 0x598]
	0x03CC0440 MOVZ W8, 0x19F8
	0x03CC0444 ADD X8, X20, X8
	0x03CC0448 CBZ W9, 0x3CC0464
	0x03CC044C MOVZ W9, 0x1
	0x03CC0450 STRB W9, [X8]
	0x03CC0454 LDR W21, [X20 + 0x1580]
	0x03CC0458 MOVZ W8, 0x19F8
	0x03CC045C ADD X27, X20, X8
	0x03CC0460 B 0x3CC0478
	0x03CC0464 LDRB W8, [X8]
	0x03CC0468 LDR W21, [X20 + 0x1580]
	0x03CC046C MOVZ W9, 0x19F8
	0x03CC0470 ADD X27, X20, X9
	0x03CC0474 CBZ W8, 0x3CC048C
	0x03CC0478 AND X1, X22, 0x0
	0x03CC047C MOV W0, W21
	0x03CC0480 MOV X2, X31
	0x03CC0484 BL 0x3C9EA08
	0x03CC0488 MOV X21, X0
	0x03CC048C LDR X0, [X28]
	0x03CC0490 LDRB W10, [X20 + 0x1AB]
	0x03CC0494 UBFM X8, X22, 0x18, 0x3F
	0x03CC0498 UBFM W9, W21, 0x18, 0x1F
	0x03CC049C CMP W9, W8, UXTB
	0x03CC04A0 CSEL W8, W9, W8, CC
	0x03CC04A4 LDR W9, [X0 + 0xE0]
	0x03CC04A8 LDR X22, [X23 + 0x90]
	0x03CC04AC CMP W10, W21, LSR
	0x03CC04B0 CSEL W8, W8, W10, HI
	0x03CC04B4 BFM W21, W8, 0x8, 0x7
	0x03CC04B8 CBNZ W9, 0x3CC04C0
	0x03CC04BC BL 0x1C16DFC
	0x03CC04C0 MOV X0, X22
	0x03CC04C4 MOV X1, X31
	0x03CC04C8 MOV X2, X31
	0x03CC04CC BL 0x3C354F8
	0x03CC04D0 TBZ X0, 0x0, 0x3CC0684
	0x03CC04D4 LDR X0, [X28]
	0x03CC04D8 LDR X22, [X23 + 0x98]
	0x03CC04DC LDR W8, [X0 + 0xE0]
	0x03CC04E0 CBNZ W8, 0x3CC04E8
	0x03CC04E4 BL 0x1C16DFC
	0x03CC04E8 MOV X0, X22
	0x03CC04EC MOV X1, X31
	0x03CC04F0 MOV X2, X31
	0x03CC04F4 BL 0x3C354F8
	0x03CC04F8 LDRB W8, [X27]
	0x03CC04FC TBZ X0, 0x0, 0x3CC05B0
	0x03CC0500 CBZ W8, 0x3CC0684
	0x03CC0504 LDR X8, [X23 + 0x98]
	0x03CC0508 CBZ X8, 0x3CC0B24
	0x03CC050C LDP S0, S1, [X8 + 0x3C]
	0x03CC0510 LDP S2, S3, [X8 + 0x44]
	0x03CC0514 MOV X0, X31
	0x03CC0518 BL 0x1E43664
	0x03CC051C MOV W26, W21
	0x03CC0520 AND X1, X0, 0x0
	0x03CC0524 MOV X0, X26
	0x03CC0528 MOV X2, X31
	0x03CC052C BL 0x3C9EA08
	0x03CC0530 LDRB W8, [X27]
	0x03CC0534 MOV X22, X0
	0x03CC0538 CBZ W8, 0x3CC0B10
	0x03CC053C LDR X8, [X23 + 0x98]
	0x03CC0540 CBZ X8, 0x3CC0B24
	0x03CC0544 LDP S0, S1, [X8 + 0x1C]
	0x03CC0548 LDP S2, S3, [X8 + 0x24]
	0x03CC054C MOV X0, X31
	0x03CC0550 BL 0x1E43664
	0x03CC0554 AND X1, X0, 0x0
	0x03CC0558 MOV X0, X26
	0x03CC055C MOV X2, X31
	0x03CC0560 BL 0x3C9EA08
	0x03CC0564 LDRB W8, [X27]
	0x03CC0568 MOV X24, X0
	0x03CC056C CBZ W8, 0x3CC0B1C
	0x03CC0570 LDR X8, [X23 + 0x98]
	0x03CC0574 CBZ X8, 0x3CC0B24
	0x03CC0578 LDP S0, S1, [X8 + 0x2C]
	0x03CC057C LDP S2, S3, [X8 + 0x34]
	0x03CC0580 MOV X0, X31
	0x03CC0584 BL 0x1E43664
	0x03CC0588 AND X1, X0, 0x0
	0x03CC058C MOV X0, X26
	0x03CC0590 MOV X2, X31
	0x03CC0594 BL 0x3C9EA08
	0x03CC0598 LDRB W8, [X27]
	0x03CC059C MOV X25, X0
	0x03CC05A0 CBZ W8, 0x3CC0690
	0x03CC05A4 LDR X8, [X23 + 0x98]
	0x03CC05A8 CBNZ X8, 0x3CC065C
	0x03CC05AC B 0x3CC0B24
	0x03CC05B0 CBZ W8, 0x3CC0684
	0x03CC05B4 LDR X8, [X23 + 0x90]
	0x03CC05B8 CBZ X8, 0x3CC0B24
	0x03CC05BC LDP S0, S1, [X8 + 0x3C]
	0x03CC05C0 LDP S2, S3, [X8 + 0x44]
	0x03CC05C4 MOV X0, X31
	0x03CC05C8 BL 0x1E43664
	0x03CC05CC MOV W26, W21
	0x03CC05D0 AND X1, X0, 0x0
	0x03CC05D4 MOV X0, X26
	0x03CC05D8 MOV X2, X31
	0x03CC05DC BL 0x3C9EA08
	0x03CC05E0 LDRB W8, [X27]
	0x03CC05E4 MOV W22, W0
	0x03CC05E8 CBZ W8, 0x3CC0B10
	0x03CC05EC LDR X8, [X23 + 0x90]
	0x03CC05F0 CBZ X8, 0x3CC0B24
	0x03CC05F4 LDP S0, S1, [X8 + 0x1C]
	0x03CC05F8 LDP S2, S3, [X8 + 0x24]
	0x03CC05FC MOV X0, X31
	0x03CC0600 BL 0x1E43664
	0x03CC0604 AND X1, X0, 0x0
	0x03CC0608 MOV X0, X26
	0x03CC060C MOV X2, X31
	0x03CC0610 BL 0x3C9EA08
	0x03CC0614 LDRB W8, [X27]
	0x03CC0618 MOV W24, W0
	0x03CC061C CBZ W8, 0x3CC0B1C
	0x03CC0620 LDR X8, [X23 + 0x90]
	0x03CC0624 CBZ X8, 0x3CC0B24
	0x03CC0628 LDP S0, S1, [X8 + 0x2C]
	0x03CC062C LDP S2, S3, [X8 + 0x34]
	0x03CC0630 MOV X0, X31
	0x03CC0634 BL 0x1E43664
	0x03CC0638 AND X1, X0, 0x0
	0x03CC063C MOV X0, X26
	0x03CC0640 MOV X2, X31
	0x03CC0644 BL 0x3C9EA08
	0x03CC0648 LDRB W8, [X27]
	0x03CC064C MOV W25, W0
	0x03CC0650 CBZ W8, 0x3CC0690
	0x03CC0654 LDR X8, [X23 + 0x90]
	0x03CC0658 CBZ X8, 0x3CC0B24
	0x03CC065C LDP S0, S1, [X8 + 0x4C]
	0x03CC0660 LDP S2, S3, [X8 + 0x54]
	0x03CC0664 MOV X0, X31
	0x03CC0668 BL 0x1E43664
	0x03CC066C AND X1, X0, 0x0
	0x03CC0670 MOV X0, X26
	0x03CC0674 MOV X2, X31
	0x03CC0678 BL 0x3C9EA08
	0x03CC067C MOV W21, W0
	0x03CC0680 B 0x3CC0690
	0x03CC0684 MOV W25, W21
	0x03CC0688 MOV W24, W21
	0x03CC068C MOV W22, W21
	0x03CC0690 LDR X0, [X28]
	0x03CC0694 LDR X23, [X20 + 0x288]
	0x03CC0698 LDR W8, [X0 + 0xE0]
	0x03CC069C CBNZ W8, 0x3CC06A4
	0x03CC06A0 BL 0x1C16DFC
	0x03CC06A4 MOV X0, X23
	0x03CC06A8 MOV X1, X31
	0x03CC06AC MOV X2, X31
	0x03CC06B0 BL 0x3C354F8
	0x03CC06B4 TBZ X0, 0x0, 0x3CC0798
	0x03CC06B8 LDRB W8, [X27]
	0x03CC06BC CBZ W8, 0x3CC0798
	0x03CC06C0 LDR X8, [X20 + 0x288]
	0x03CC06C4 CBZ X8, 0x3CC0B24
	0x03CC06C8 LDP S0, S1, [X8 + 0x3C]
	0x03CC06CC LDP S2, S3, [X8 + 0x44]
	0x03CC06D0 MOV X0, X31
	0x03CC06D4 BL 0x1E43664
	0x03CC06D8 MOV W8, W22
	0x03CC06DC AND X1, X0, 0x0
	0x03CC06E0 MOV X0, X8
	0x03CC06E4 MOV X2, X31
	0x03CC06E8 BL 0x3C9EA08
	0x03CC06EC LDRB W8, [X27]
	0x03CC06F0 MOV W22, W0
	0x03CC06F4 CBZ W8, 0x3CC0798
	0x03CC06F8 LDR X8, [X20 + 0x288]
	0x03CC06FC CBZ X8, 0x3CC0B24
	0x03CC0700 LDP S0, S1, [X8 + 0x1C]
	0x03CC0704 LDP S2, S3, [X8 + 0x24]
	0x03CC0708 MOV X0, X31
	0x03CC070C BL 0x1E43664
	0x03CC0710 MOV W8, W24
	0x03CC0714 AND X1, X0, 0x0
	0x03CC0718 MOV X0, X8
	0x03CC071C MOV X2, X31
	0x03CC0720 BL 0x3C9EA08
	0x03CC0724 LDRB W8, [X27]
	0x03CC0728 MOV W24, W0
	0x03CC072C CBZ W8, 0x3CC0798
	0x03CC0730 LDR X8, [X20 + 0x288]
	0x03CC0734 CBZ X8, 0x3CC0B24

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 832
	022 Move X19, 0x72D000
	023 Move W8, [X19+829]
	024 Move X22, X5
	025 Move X21, X4
	026 Move X25, X3
	027 Move W23, W2
	028 Move X24, X1
	029 Move X20, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {147}
	034 Move X0, 0x438000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move X0, 0x4A6000
	038 Move X0, [X0+1840]
	039 Call 0x1C17CF4
	040 Move X0, 0x438000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move X0, 0x4A6000
	044 Move X0, [X0+2872]
	045 Call 0x1C17CF4
	046 Move X0, 0x4A6000
	047 Move X0, [X0+3264]
	048 Call 0x1C17CF4
	049 Move X0, 0x492000
	050 Move X0, [X0+2776]
	051 Call 0x1C17CF4
	052 Move X0, 0x4A6000
	053 Move X0, [X0+3272]
	054 Call 0x1C17CF4
	055 Move X0, 0x4A6000
	056 Move X0, [X0+3280]
	057 Call 0x1C17CF4
	058 Move X0, 0x4A6000
	059 Move X0, [X0+2888]
	060 Call 0x1C17CF4
	061 Move X0, 0x4A6000
	062 Move X0, [X0+3288]
	063 Call 0x1C17CF4
	064 Move X0, 0x4A6000
	065 Move X0, [X0+2920]
	066 Call 0x1C17CF4
	067 Move X0, 0x4A6000
	068 Move X0, [X0+3296]
	069 Call 0x1C17CF4
	070 Move X0, 0x4A6000
	071 Move X0, [X0+3304]
	072 Call 0x1C17CF4
	073 Move X0, 0x4A6000
	074 Move X0, [X0+3312]
	075 Call 0x1C17CF4
	076 Move X0, 0x4A6000
	077 Move X0, [X0+3320]
	078 Call 0x1C17CF4
	079 Move X0, 0x4A6000
	080 Move X0, [X0+3328]
	081 Call 0x1C17CF4
	082 Move X0, 0x4A6000
	083 Move X0, [X0+3336]
	084 Call 0x1C17CF4
	085 Move X0, 0x4A6000
	086 Move X0, [X0+3344]
	087 Call 0x1C17CF4
	088 Move X0, 0x4A6000
	089 Move X0, [X0+3352]
	090 Call 0x1C17CF4
	091 Move X0, 0x4A6000
	092 Move X0, [X0+3360]
	093 Call 0x1C17CF4
	094 Move X0, 0x4A6000
	095 Move X0, [X0+3368]
	096 Call 0x1C17CF4
	097 Move X0, 0x4A6000
	098 Move X0, [X0+3376]
	099 Call 0x1C17CF4
	100 Move X0, 0x4A6000
	101 Move X0, [X0+3384]
	102 Call 0x1C17CF4
	103 Move X0, 0x4A6000
	104 Move X0, [X0+3392]
	105 Call 0x1C17CF4
	106 Move X0, 0x4A6000
	107 Move X0, [X0+3400]
	108 Call 0x1C17CF4
	109 Move X0, 0x4A6000
	110 Move X0, [X0+3408]
	111 Call 0x1C17CF4
	112 Move X0, 0x4A6000
	113 Move X0, [X0+3416]
	114 Call 0x1C17CF4
	115 Move X0, 0x4A6000
	116 Move X0, [X0+3424]
	117 Call 0x1C17CF4
	118 Move X0, 0x4A6000
	119 Move X0, [X0+3432]
	120 Call 0x1C17CF4
	121 Move X0, 0x4A6000
	122 Move X0, [X0+3440]
	123 Call 0x1C17CF4
	124 Move X0, 0x4A6000
	125 Move X0, [X0+3448]
	126 Call 0x1C17CF4
	127 Move X0, 0x4A6000
	128 Move X0, [X0+3456]
	129 Call 0x1C17CF4
	130 Move X0, 0x49E000
	131 Move X0, [X0+744]
	132 Call 0x1C17CF4
	133 Move X0, 0x49E000
	134 Move X0, [X0+752]
	135 Call 0x1C17CF4
	136 Move X0, 0x49E000
	137 Move X0, [X0+760]
	138 Call 0x1C17CF4
	139 Move X0, 0x4A6000
	140 Move X0, [X0+3464]
	141 Call 0x1C17CF4
	142 Move X0, 0x49E000
	143 Move X0, [X0+768]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X19+829], W8
	147 NotImplemented "Instruction MOVI not yet implemented."
	148 Move [X31+824], X31
	149 Move [X31+816], X31
	150 Move [X31+808], X31
	151 Move [X31+800], X31
	152 Move [X31+792], X31
	153 Move [X31+784], X31
	154 Move [X31+780], W31
	155 Move [X31+664], X31
	156 Move [X31+736], V0
	157 Move [X31+744], V0
	158 Move [X31+704], V0
	159 Move [X31+712], V0
	160 Move [X31+672], V0
	161 Move [X31+680], V0
	162 Compare X21, 0
	163 JumpIfEqual {3637}
	164 Move X19, [X21+104]
	165 Move X0, X20
	166 Call TextGenerator.ClearMarkupTagAttributes, X0
	167 Move [X25], W23
	168 Compare X24, 0
	169 JumpIfEqual {3637}
	170 Move W9, [X24+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add X11, X20, 852
	173 Move W10, 0x1578
	174 Move [X31+16], X11
	175 Move W11, 0x19D0
	176 Move X29, -51527680
	177 Move [X31+48], X21
	178 Move [X31+56], X25
	179 Move W17, W31
	180 Move W15, W31
	181 Move W2, W31
	182 Move W28, W31
	183 Move W8, W31
	184 Move X21, X31
	185 Add X13, X20, 48
	186 Move W1, W23
	187 Add X29, X29, 3848
	188 Move W16, 24
	189 Add X10, X20, X10
	190 Add X27, X20, X11
	191 Move [X31+24], X19
	192 Move [X31+32], X22
	193 Move [X31+68], W23
	194 Move [X31+40], X10
	195 Move [X31+72], X20
	196 Move [X31+88], X13
	197 Add X10, X1, X21
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add X9, X24, W10
	200 Move W26, [X9+36]
	201 Compare W26, 0
	202 JumpIfEqual {546}
	203 Move X25, [X13]
	204 Compare X25, 0
	205 JumpIfEqual {3637}
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move W0, W31
	208 Move W11, [X25+24]
	209 Move X9, W11
	210 NotImplemented "Instruction CMP not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 And W10, W8, 255
	214 Add X9, X25, X21
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction STRH not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move W8, 1
	219 Move W9, W2
	220 NotImplemented "Instruction ADR not yet implemented."
	221 Move W11, [X29]
	222 Add X10, X10, X11
	223 CallNoReturn X10
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move W8, W26
	226 Move W9, 1
	227 NotImplemented "Instruction LSLV not yet implemented."
	228 Move X9, 0x6800
	229 And X31, X8, X9
	230 Move X8, [X27]
	231 Compare X8, 0
	232 JumpIfEqual {3637}
	233 Move W9, [X8+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 NotImplemented "Instruction SMADDL not yet implemented."
	236 Move W11, [X10+48]
	237 Move W8, 1
	238 Move W9, W31
	239 Move W15, W31
	240 Add W11, W11, 1
	241 Move [X10+40], W8
	242 Move [X10+44], W21
	243 Move [X10+48], W11
	244 Move W2, 1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X8, [X27]
	247 Compare X8, 0
	248 JumpIfEqual {3637}
	249 Move W9, [X8+24]
	250 Add W28, W28, 1
	251 NotImplemented "Instruction CMP not yet implemented."
	252 NotImplemented "Instruction SMADDL not yet implemented."
	253 Move W9, W31
	254 Move W2, W31
	255 Move W15, W31
	256 Move [X8+32], X31
	257 Move [X8+40], X31
	258 Move [X8+48], X31
	259 Move W8, 2
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X8, [X27]
	264 Compare X8, 0
	265 JumpIfEqual {3637}
	266 Move X9, [X8+24]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move W15, 2
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X8, [X27]
	271 Compare X8, 0
	272 JumpIfEqual {3637}
	273 Move W9, [X8+24]
	274 Add W28, W28, 1
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move W15, W31
	277 Move X25, [X27]
	278 Compare X25, 0
	279 JumpIfEqual {3637}
	280 Move W8, [X25+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move W8, W28
	283 Move X19, W8
	284 Move [X31+80], X1
	285 NotImplemented "Instruction NOP not yet implemented."
	286 NotImplemented "Instruction MADD not yet implemented."
	287 Move X8, 0x4A6000
	288 Move X23, X27
	289 Add X22, X22, 36
	290 Move W27, [X22]
	291 Move X8, [X8+2888]
	292 Move W20, W17
	293 Move W29, W15
	294 Move X0, [X8]
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move W0, W26
	300 Move X1, X31
	301 Call TextGeneratorUtilities.ToUpperFast, X0
	302 Move W8, [X25+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Add W8, W27, W27
	305 And W9, W0, 0xFFFF
	306 Xor W8, W8, W9
	307 Move [X22], W8
	308 Move X8, [X23]
	309 Move X1, [X31+80]
	310 Compare X8, 0
	311 JumpIfEqual {3637}
	312 Move W9, [X8+24]
	313 Move X13, [X31+88]
	314 Move W15, W29
	315 Move X29, -51527680
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Add X29, X29, 3848
	318 Move W16, 24
	319 Move X27, X23
	320 Move W17, W20
	321 NotImplemented "Instruction MADD not yet implemented."
	322 Move W10, [X9+48]
	323 Move W8, 1
	324 Move W2, 2
	325 NotImplemented "Instruction CMP not yet implemented."
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X8, [X27]
	328 Compare X8, 0
	329 JumpIfEqual {3637}
	330 Move X9, [X8+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move W15, 1
	333 Move X8, [X27]
	334 Compare X8, 0
	335 JumpIfEqual {3637}
	336 Move W9, [X8+24]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 NotImplemented "Instruction SMADDL not yet implemented."
	339 Move W10, [X9+48]
	340 Move W8, 1
	341 Move W2, 4
	342 Add W10, W10, 1
	343 Move [X9+48], W10
	344 Move X8, [X27]
	345 Compare X8, 0
	346 JumpIfEqual {3637}
	347 Move X9, [X8+24]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move W15, W31
	350 NotImplemented "Instruction SMADDL not yet implemented."
	351 Add W28, W28, 1
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move [X10+52], W15
	354 NotImplemented "Instruction SMADDL not yet implemented."
	355 Move W2, W31
	356 Move [X8+32], X31
	357 Move [X8+40], X31
	358 Move [X8+48], X31
	359 Move W8, 2
	360 NotImplemented "Instruction CMP not yet implemented."
	361 NotImplemented "Instruction CSINC not yet implemented."
	362 NotImplemented "Instruction CMP not yet implemented."
	363 And W10, W8, 255
	364 NotImplemented "Instruction CSET not yet implemented."
	365 Compare W10, 0
	366 JumpIfNotEqual {430}
	367 Move TEMP, X17
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfEqual {546}
	371 Move X8, [X27]
	372 Compare X8, 0
	373 JumpIfEqual {3637}
	374 Move W9, [X8+24]
	375 Add W28, W28, 1
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move W15, W31
	378 NotImplemented "Instruction SMADDL not yet implemented."
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move W17, 1
	381 Move [X8+32], X31
	382 Move [X8+40], X31
	383 Move [X8+48], X31
	384 Move W2, W15
	385 Move W8, W15
	386 Move W8, 2
	387 Move W2, W15
	388 Subtract W8, W26, 48
	389 NotImplemented "Instruction CMP not yet implemented."
	390 NotImplemented "Instruction CMP not yet implemented."
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X8, [X27]
	393 Compare X8, 0
	394 JumpIfEqual {3637}
	395 Move W9, [X8+24]
	396 NotImplemented "Instruction CMP not yet implemented."
	397 NotImplemented "Instruction SMADDL not yet implemented."
	398 Move W10, [X8+48]
	399 Move W2, 4
	400 Move W9, W31
	401 Move W15, W31
	402 Add W10, W10, 1
	403 Move [X8+40], W2
	404 Move [X8+44], W21
	405 Move [X8+48], W10
	406 Move X8, [X27]
	407 Compare X8, 0
	408 JumpIfEqual {3637}
	409 Move W9, [X8+24]
	410 NotImplemented "Instruction CMP not yet implemented."
	411 NotImplemented "Instruction SMADDL not yet implemented."
	412 Move W9, [X8+48]
	413 Move W2, 1
	414 Add W9, W9, 1
	415 Move [X8+48], W9
	416 Move W8, 1
	417 Move X8, [X27]
	418 Compare X8, 0
	419 JumpIfEqual {3637}
	420 Move W9, [X8+24]
	421 NotImplemented "Instruction CMP not yet implemented."
	422 NotImplemented "Instruction SMADDL not yet implemented."
	423 Move W2, 2
	424 Add W10, W21, 1
	425 Move W9, W31
	426 Move W15, W31
	427 Move [X8+40], W2
	428 Move [X8+44], W10
	429 Move W8, 1
	430 And W10, W8, 255
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Compare W10, 0
	433 JumpIfNotEqual {480}
	434 Move X25, [X27]
	435 Compare X25, 0
	436 JumpIfEqual {3637}
	437 Move W8, [X25+24]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Move [X31+80], W2
	440 NotImplemented "Instruction NOP not yet implemented."
	441 NotImplemented "Instruction SMADDL not yet implemented."
	442 Move X8, 0x4A6000
	443 Move X23, X27
	444 Add X22, X22, 32
	445 Move W27, [X22]
	446 Move X8, [X8+2888]
	447 Move X19, X1
	448 Move W20, W17
	449 Move W29, W15
	450 Move X0, [X8]
	451 Move W8, [X0+224]
	452 Compare W8, 0
	453 JumpIfNotEqual {455}
	454 Call 0x1C17DFC
	455 Move W0, W26
	456 Move X1, X31
	457 Call TextGeneratorUtilities.ToUpperFast, X0
	458 Move W8, [X25+24]
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Move X13, [X31+88]
	461 Move W2, [X31+80]
	462 Add W9, W27, W27
	463 And W10, W0, 0xFFFF
	464 Xor W9, W9, W10
	465 Move W15, W29
	466 Move X29, -51527680
	467 Move W8, W31
	468 Move [X22], W9
	469 Move X27, X23
	470 Add X29, X29, 3848
	471 Move W16, 24
	472 Move W17, W20
	473 Move X1, X19
	474 Move TEMP, X9
	475 And TEMP, TEMP, 1
	476 Compare TEMP, 1
	477 JumpIfNotEqual {479}
	478 Move W8, W31
	479 Move W8, 2
	480 Move W9, [X24+24]
	481 Add X21, X21, 1
	482 Add W10, W1, W21
	483 NotImplemented "Instruction CMP not yet implemented."
	484 Move X23, [X27]
	485 Compare X23, 0
	486 JumpIfEqual {3637}
	487 Move W8, [X23+24]
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Move X19, W28
	490 Move [X31+80], X1
	491 NotImplemented "Instruction NOP not yet implemented."
	492 NotImplemented "Instruction MADD not yet implemented."
	493 Add X25, X25, 36
	494 Move W22, [X25]
	495 Move W8, 2
	496 Move W20, W17
	497 Move [X25+4], W8
	498 Move [X25+8], W21
	499 Move X8, 0x4A6000
	500 Move X8, [X8+2888]
	501 Move X0, [X8]
	502 Move W8, [X0+224]
	503 Compare W8, 0
	504 JumpIfNotEqual {506}
	505 Call 0x1C17DFC
	506 Move W0, W26
	507 Move X1, X31
	508 Call TextGeneratorUtilities.ToUpperFast, X0
	509 Move W8, [X23+24]
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Add W8, W22, W22
	512 And W9, W0, 0xFFFF
	513 Xor W8, W8, W9
	514 Move [X25], W8
	515 Move X8, [X27]
	516 Move X1, [X31+80]
	517 Compare X8, 0
	518 JumpIfEqual {3637}
	519 Move W9, [X8+24]
	520 Move X13, [X31+88]
	521 Move W16, 24
	522 NotImplemented "Instruction CMP not yet implemented."
	523 Move W17, W20
	524 Move W15, W31
	525 Move W8, [X31+68]
	526 Move X9, [X31+56]
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Add W8, W8, W21
	529 Move [X9], W8
	530 Move X19, [X31+72]
	531 Add X8, X25, X21
	532 NotImplemented "Instruction STRH not yet implemented."
	533 Move W12, 0x743B
	534 Move W9, [X19+800]
	535 Move X8, [X19+6608]
	536 NotImplemented "Instruction MOVK not yet implemented."
	537 Compare W9, 0
	538 JumpIfEqual {569}
	539 Compare X8, 0
	540 JumpIfEqual {3637}
	541 Move W9, [X8+24]
	542 Compare W9, 0
	543 JumpIfEqual {4363}
	544 Move W9, [X8+32]
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Move W0, W31
	547 Add X31, X31, 832
	548 Move X20, [X31+144]
	549 Move X19, [X31+152]
	550 Move X22, [X31+128]
	551 Move X21, [X31+136]
	552 Move X24, [X31+112]
	553 Move X23, [X31+120]
	554 Move X26, [X31+96]
	555 Move X25, [X31+104]
	556 Move X28, [X31+80]
	557 Move X27, [X31+88]
	558 Move X29, [X31+64]
	559 Move X30, [X31+72]
	560 Move D9, [X31+48]
	561 Move D8, [X31+56]
	562 Move D11, [X31+32]
	563 Move D10, [X31+40]
	564 Move D13, [X31+16]
	565 Move D12, [X31+24]
	566 Move D15, [X31+160]
	567 Move D14, [X31+168]
	568 Return X0
	569 Compare X8, 0
	570 JumpIfEqual {3637}
	571 Move X10, [X8+24]
	572 Compare W10, 0
	573 JumpIfEqual {4363}
	574 Move W9, [X8+32]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move [X19+800], W31
	577 NotImplemented "Instruction LDRH not yet implemented."
	578 NotImplemented "Instruction CMP not yet implemented."
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Move X8, 0x4A6000
	581 Move X8, [X8+2888]
	582 Move X0, [X8]
	583 Move W8, [X0+224]
	584 Compare W8, 0
	585 JumpIfNotEqual {587}
	586 Call 0x1C17DFC
	587 Move W1, 4
	588 NotImplemented "Instruction CMP not yet implemented."
	589 NotImplemented "Instruction CMP not yet implemented."
	590 Move X8, 0x4A6000
	591 Move X8, [X8+2888]
	592 Move X0, [X8]
	593 Move W8, [X0+224]
	594 Compare W8, 0
	595 JumpIfNotEqual {597}
	596 Call 0x1C17DFC
	597 Move W1, 5
	598 NotImplemented "Instruction CMP not yet implemented."
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Move X8, 0x4A6000
	601 Move X8, [X8+2888]
	602 Move X0, [X8]
	603 Move W8, [X0+224]
	604 Compare W8, 0
	605 JumpIfNotEqual {607}
	606 Call 0x1C17DFC
	607 Move W1, 7
	608 NotImplemented "Instruction CMP not yet implemented."
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Move X8, 0x4A6000
	611 Move X8, [X8+2888]
	612 Move X0, [X8]
	613 Move W8, [X0+224]
	614 Compare W8, 0
	615 JumpIfNotEqual {617}
	616 Call 0x1C17DFC
	617 Move W1, 9
	618 Move X0, X25
	619 Move X2, X31
	620 Call TextGeneratorUtilities.HexCharsToColor, X0, X1
	621 Move [X19+428], W0
	622 Move X8, 0x4A6000
	623 Move X8, [X8+3312]
	624 Move X2, [X8]
	625 Add X8, X19, 440
	626 And X1, X0, 0
	627 Move X0, X8
	628 Call 0x26E1FCC, X0, X1
	629 Move W0, 1
	630 NotImplemented "Instruction CMP not yet implemented."
	631 Move W12, 0x920A
	632 NotImplemented "Instruction MOVK not yet implemented."
	633 NotImplemented "Instruction CMP not yet implemented."
	634 Move W10, 0x3A16
	635 NotImplemented "Instruction MOVK not yet implemented."
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Move W10, 0xC39B
	638 NotImplemented "Instruction MOVK not yet implemented."
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Move W10, 0x3FA2
	641 NotImplemented "Instruction MOVK not yet implemented."
	642 NotImplemented "Instruction CMP not yet implemented."
	643 Move W10, 0xAA29
	644 NotImplemented "Instruction MOVK not yet implemented."
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Move W10, 0x42B7
	647 NotImplemented "Instruction MOVK not yet implemented."
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Move W10, 0xF45B
	650 NotImplemented "Instruction MOVK not yet implemented."
	651 NotImplemented "Instruction CMP not yet implemented."
	652 Move X9, 0x4A6000
	653 Move X9, [X9+2888]
	654 Move W22, [X8+44]
	655 Move W21, [X8+48]
	656 Move W19, W15
	657 Move X0, [X9]
	658 Move W9, [X0+224]
	659 Compare W9, 0
	660 JumpIfNotEqual {662}
	661 Call 0x1C17DFC
	662 Move X0, X25
	663 Move W1, W22
	664 Move W2, W21
	665 Move X3, X31
	666 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	667 Move W8, 0xC7000000
	668 Move S1, W8
	669 NotImplemented "Instruction FCMP not yet implemented."
	670 NotImplemented "Instruction CMP not yet implemented."
	671 Compare W19, 0
	672 JumpIfNotEqual {546}
	673 Move X8, [X31+48]
	674 Move X9, -52236288
	675 Move V1, [X9+188]
	676 Move S2, 1
	677 Move W8, [X8+189]
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Move X8, [X31+72]
	680 NotImplemented "Instruction FCSEL not yet implemented."
	681 Multiply S0, S0, S1
	682 Move [X8+384], S0
	683 Move W11, 0xED1F
	684 NotImplemented "Instruction MOVK not yet implemented."
	685 NotImplemented "Instruction CMP not yet implemented."
	686 Move W11, 0x5CE8
	687 NotImplemented "Instruction MOVK not yet implemented."
	688 NotImplemented "Instruction CMP not yet implemented."
	689 NotImplemented "Instruction CMP not yet implemented."
	690 NotImplemented "Instruction CMP not yet implemented."
	691 NotImplemented "Instruction CMP not yet implemented."
	692 NotImplemented "Instruction CMP not yet implemented."
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Move X8, [X31+48]
	695 Move W8, [X8+96]
	696 Move TEMP, X8
	697 And TEMP, TEMP, 64
	698 Compare TEMP, 64
	699 JumpIfEqual {710}
	700 Move X8, [X31+72]
	701 Move W1, 64
	702 Move X2, X31
	703 Add X0, X8, 296
	704 Call FontStyleStack.Remove, X0, X1
	705 And W31, W0, 255
	706 Move X9, [X31+72]
	707 Move W8, [X9+292]
	708 And W8, W8, 0xFFFFFFBF
	709 Move [X9+292], W8
	710 Move X8, 0x4A6000
	711 Move X8, [X8+3440]
	712 Move X19, [X31+72]
	713 Move X1, [X8]
	714 Add X0, X19, 504
	715 Call 0x26E2014, X0
	716 Move [X19+436], W0
	717 Move W11, 0xDB73
	718 NotImplemented "Instruction MOVK not yet implemented."
	719 NotImplemented "Instruction CMP not yet implemented."
	720 Move W10, 0x7459
	721 NotImplemented "Instruction MOVK not yet implemented."
	722 NotImplemented "Instruction CMP not yet implemented."
	723 Move W8, 0x95DA
	724 NotImplemented "Instruction MOVK not yet implemented."
	725 NotImplemented "Instruction CMP not yet implemented."
	726 Move W8, 0x38AF
	727 NotImplemented "Instruction MOVK not yet implemented."
	728 NotImplemented "Instruction CMP not yet implemented."
	729 Move W8, 0x28FC
	730 NotImplemented "Instruction MOVK not yet implemented."
	731 NotImplemented "Instruction CMP not yet implemented."
	732 Move W8, 0x920A
	733 NotImplemented "Instruction MOVK not yet implemented."
	734 NotImplemented "Instruction CMP not yet implemented."
	735 Move X8, 0x4A6000
	736 Move X8, [X8+3408]
	737 Move X19, [X31+72]
	738 Move X1, [X8]
	739 Add X0, X19, 248
	740 Call TextProcessingStack`1<Single>.Remove, X0
	741 Move [X19+244], S0
	742 Move W11, 0x47D3
	743 NotImplemented "Instruction MOVK not yet implemented."
	744 NotImplemented "Instruction CMP not yet implemented."
	745 Move W11, 0x7EF1
	746 NotImplemented "Instruction MOVK not yet implemented."
	747 NotImplemented "Instruction CMP not yet implemented."
	748 Move W10, 0x1799
	749 NotImplemented "Instruction MOVK not yet implemented."
	750 NotImplemented "Instruction CMP not yet implemented."
	751 Move W10, 0x7DE9
	752 NotImplemented "Instruction MOVK not yet implemented."
	753 NotImplemented "Instruction CMP not yet implemented."
	754 Move W10, 0xED1F
	755 NotImplemented "Instruction MOVK not yet implemented."
	756 NotImplemented "Instruction CMP not yet implemented."
	757 Move X9, 0x4A6000
	758 Move X9, [X9+2888]
	759 Move W22, [X8+44]
	760 Move W21, [X8+48]
	761 Move W19, W15
	762 Move X0, [X9]
	763 Move W9, [X0+224]
	764 Compare W9, 0
	765 JumpIfNotEqual {767}
	766 Call 0x1C17DFC
	767 Move X0, X25
	768 Move W1, W22
	769 Move W2, W21
	770 Move X3, X31
	771 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	772 Move W8, 0xC7000000
	773 Move S1, W8
	774 NotImplemented "Instruction FCMP not yet implemented."
	775 Compare W19, 0
	776 JumpIfEqual {3810}
	777 NotImplemented "Instruction CMP not yet implemented."
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Move X9, [X31+72]
	780 Move W8, 0x42C80000
	781 Move V1, [X9+88]
	782 Multiply S0, S0, S1
	783 Move S1, W8
	784 NotImplemented "Instruction FDIV not yet implemented."
	785 Move W10, 0x9790
	786 NotImplemented "Instruction MOVK not yet implemented."
	787 NotImplemented "Instruction CMP not yet implemented."
	788 Move W10, 0x5278
	789 NotImplemented "Instruction MOVK not yet implemented."
	790 NotImplemented "Instruction CMP not yet implemented."
	791 Move W10, 0x48E6
	792 NotImplemented "Instruction MOVK not yet implemented."
	793 NotImplemented "Instruction CMP not yet implemented."
	794 Move X9, 0x4A6000
	795 Move X9, [X9+2888]
	796 Move W22, [X8+44]
	797 Move W21, [X8+48]
	798 Move W19, W15
	799 Move X0, [X9]
	800 Move W9, [X0+224]
	801 Compare W9, 0
	802 JumpIfNotEqual {804}
	803 Call 0x1C17DFC
	804 Move X0, X25
	805 Move W1, W22
	806 Move W2, W21
	807 Move X3, X31
	808 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	809 Move W8, 0xC7000000
	810 Move S1, W8
	811 NotImplemented "Instruction FCMP not yet implemented."
	812 Compare W19, 0
	813 JumpIfEqual {3687}
	814 NotImplemented "Instruction CMP not yet implemented."
	815 NotImplemented "Instruction CMP not yet implemented."
	816 Move X9, [X31+72]
	817 Move W8, 0x42C80000
	818 Move S2, W8
	819 Move V1, [X9+88]
	820 Multiply S0, S0, S1
	821 NotImplemented "Instruction FDIV not yet implemented."
	822 Move [X9+860], S0
	823 Move W10, 0x3291
	824 NotImplemented "Instruction MOVK not yet implemented."
	825 NotImplemented "Instruction CMP not yet implemented."
	826 Move W10, 0xF6F3
	827 NotImplemented "Instruction MOVK not yet implemented."
	828 NotImplemented "Instruction CMP not yet implemented."
	829 Move W10, 0x3CB4
	830 NotImplemented "Instruction MOVK not yet implemented."
	831 NotImplemented "Instruction CMP not yet implemented."
	832 Move W10, 0xD276
	833 NotImplemented "Instruction MOVK not yet implemented."
	834 NotImplemented "Instruction CMP not yet implemented."
	835 Move W10, 0x5CE8
	836 NotImplemented "Instruction MOVK not yet implemented."
	837 NotImplemented "Instruction CMP not yet implemented."
	838 Move X9, 0x4A6000
	839 Move X9, [X9+2888]
	840 Move W22, [X8+44]
	841 Move W21, [X8+48]
	842 Move W19, W15
	843 Move X0, [X9]
	844 Move W9, [X0+224]
	845 Compare W9, 0
	846 JumpIfNotEqual {848}
	847 Call 0x1C17DFC
	848 Move X0, X25
	849 Move W1, W22
	850 Move W2, W21
	851 Move X3, X31
	852 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	853 Move W8, 0xC7000000
	854 Move S1, W8
	855 NotImplemented "Instruction FCMP not yet implemented."
	856 Compare W19, 0
	857 JumpIfEqual {4138}
	858 NotImplemented "Instruction CMP not yet implemented."
	859 NotImplemented "Instruction CMP not yet implemented."
	860 Move X8, [X31+72]
	861 Move S2, -1
	862 Move S4, W31
	863 Move V1, [X8+860]
	864 Move V3, [X8+88]
	865 Move W8, 0x42C80000
	866 NotImplemented "Instruction FCMP not yet implemented."
	867 NotImplemented "Instruction FCSEL not yet implemented."
	868 Subtract S1, S3, S1
	869 Multiply S0, S0, S1
	870 Move S1, W8
	871 NotImplemented "Instruction FDIV not yet implemented."
	872 Move W11, 761
	873 NotImplemented "Instruction MOVK not yet implemented."
	874 NotImplemented "Instruction CMP not yet implemented."
	875 Move W11, 0x7753
	876 NotImplemented "Instruction MOVK not yet implemented."
	877 NotImplemented "Instruction CMP not yet implemented."
	878 Move W8, 0x8780
	879 NotImplemented "Instruction MOVK not yet implemented."
	880 Move X28, X27
	881 NotImplemented "Instruction CMP not yet implemented."
	882 Move W8, 0x2F75
	883 NotImplemented "Instruction MOVK not yet implemented."
	884 NotImplemented "Instruction CMP not yet implemented."
	885 Move W8, 0xDB73
	886 NotImplemented "Instruction MOVK not yet implemented."
	887 NotImplemented "Instruction CMP not yet implemented."
	888 Move X8, [X31+48]
	889 Move W0, 1
	890 Move W8, [X8+116]
	891 NotImplemented "Instruction CMP not yet implemented."
	892 Move X9, [X31+72]
	893 Move S2, W31
	894 Move V0, [X9+760]
	895 Move V1, [X9+764]
	896 Move W8, [X9+848]
	897 Move [X9+736], W31
	898 Add S0, S0, S2
	899 Add S0, S0, S1
	900 Add W8, W8, 1
	901 Move [X9+848], W8
	902 Move [X9+756], S0
	903 Move [X9+892], W0
	904 Move W10, 0x6CF1
	905 NotImplemented "Instruction MOVK not yet implemented."
	906 NotImplemented "Instruction CMP not yet implemented."
	907 Move W10, 0x3FC7
	908 NotImplemented "Instruction MOVK not yet implemented."
	909 NotImplemented "Instruction CMP not yet implemented."
	910 Move W10, 0x50BC
	911 NotImplemented "Instruction MOVK not yet implemented."
	912 NotImplemented "Instruction CMP not yet implemented."
	913 Move W8, 0x8917
	914 NotImplemented "Instruction MOVK not yet implemented."
	915 NotImplemented "Instruction CMP not yet implemented."
	916 Move W8, 0x47D3
	917 NotImplemented "Instruction MOVK not yet implemented."
	918 NotImplemented "Instruction CMP not yet implemented."
	919 Move X8, 0x4A6000
	920 Move X8, [X8+3408]
	921 Move X19, [X31+72]
	922 Move X1, [X8]
	923 Add X0, X19, 768
	924 Call TextProcessingStack`1<Single>.Remove, X0
	925 Move [X19+764], S0
	926 Move W8, 0x90D1
	927 NotImplemented "Instruction MOVK not yet implemented."
	928 NotImplemented "Instruction CMP not yet implemented."
	929 Move W8, 0xAAD3
	930 NotImplemented "Instruction MOVK not yet implemented."
	931 NotImplemented "Instruction CMP not yet implemented."
	932 Move W8, 0x98A0
	933 NotImplemented "Instruction MOVK not yet implemented."
	934 NotImplemented "Instruction CMP not yet implemented."
	935 Move X9, [X31+72]
	936 Move W1, 16
	937 Move W8, [X9+292]
	938 Add X0, X9, 296
	939 Or W8, W8, 16
	940 NotImplemented "Instruction CMP not yet implemented."
	941 NotImplemented "Instruction CMP not yet implemented."
	942 NotImplemented "Instruction CMP not yet implemented."
	943 NotImplemented "Instruction CMP not yet implemented."
	944 Move X19, [X31+72]
	945 Move W1, 64
	946 Move X2, X31
	947 Move W8, [X19+292]
	948 Add X0, X19, 296
	949 Or W8, W8, 64
	950 Move [X19+292], W8
	951 Call FontStyleStack.Add, X0, X1
	952 Move X8, [X19+6608]
	953 Compare X8, 0
	954 JumpIfEqual {3637}
	955 Move W9, [X8+24]
	956 NotImplemented "Instruction CMP not yet implemented."
	957 Move W9, [X8+56]
	958 Move W10, 0x381D
	959 NotImplemented "Instruction MOVK not yet implemented."
	960 NotImplemented "Instruction CMP not yet implemented."
	961 Move X9, 0x4A6000
	962 Move X9, [X9+2888]
	963 Move W22, [X8+68]
	964 Move W20, [X8+72]
	965 Move X0, [X9]
	966 Move X9, [X31+88]
	967 Move X23, [X9]
	968 Move W9, [X0+224]
	969 Compare W9, 0
	970 JumpIfNotEqual {972}
	971 Call 0x1C17DFC
	972 Move X0, X23
	973 Move W1, W22
	974 Move W2, W20
	975 Move X3, X31
	976 Call TextGeneratorUtilities.HexCharsToColor, X0, X1, X2
	977 Move X10, [X31+72]
	978 Move W8, [X10+431]
	979 Add X9, X10, 436
	980 Move [X10+436], W0
	981 Move X10, X0
	982 ShiftRight X10, 24
	983 And X10, X10, 0x7FFFFFFF
	984 NotImplemented "Instruction CMP not yet implemented."
	985 NotImplemented "Instruction CSEL not yet implemented."
	986 Move [X9+3], W8
	987 Move X8, [X31+32]
	988 Compare X8, 0
	989 JumpIfEqual {3637}
	990 Move X9, [X31+32]
	991 Move W8, 1
	992 Move [X9+97], W8
	993 Move X8, [X31+72]
	994 Move W8, [X8+436]
	995 Move W10, 0xB625
	996 NotImplemented "Instruction MOVK not yet implemented."
	997 NotImplemented "Instruction CMP not yet implemented."
	998 Move W10, 0x96D1
	999 NotImplemented "Instruction MOVK not yet implemented."
	1000 NotImplemented "Instruction CMP not yet implemented."
	1001 Move W10, 0xB625
	1002 NotImplemented "Instruction MOVK not yet implemented."
	1003 NotImplemented "Instruction CMP not yet implemented."
	1004 Move X9, 0x4A5000
	1005 Move X9, [X9+2888]
	1006 Move W21, [X8+44]
	1007 Move W20, [X8+48]
	1008 Move W19, W15
	1009 Move X0, [X9]
	1010 Move W9, [X0+224]
	1011 Compare W9, 0
	1012 JumpIfNotEqual {1014}
	1013 Call 0x1C17DFC
	1014 Move X0, X25
	1015 Move W1, W21
	1016 Move W2, W20
	1017 Move X3, X31
	1018 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	1019 Move W8, 0xC7000000
	1020 Move S1, W8
	1021 NotImplemented "Instruction FCMP not yet implemented."
	1022 NotImplemented "Instruction CMP not yet implemented."
	1023 NotImplemented "Instruction CMP not yet implemented."
	1024 Compare W19, 0
	1025 JumpIfNotEqual {546}
	1026 Move X8, [X31+88]
	1027 Move X8, [X8]
	1028 Compare X8, 0
	1029 JumpIfEqual {3637}
	1030 Move W9, [X8+24]
	1031 NotImplemented "Instruction CMP not yet implemented."
	1032 NotImplemented "Instruction LDRH not yet implemented."
	1033 NotImplemented "Instruction CMP not yet implemented."
	1034 NotImplemented "Instruction CMP not yet implemented."
	1035 Move X9, [X31+72]
	1036 Move V1, [X9+236]
	1037 Add S0, S0, S1
	1038 Move W11, 0xBCA8
	1039 NotImplemented "Instruction MOVK not yet implemented."
	1040 NotImplemented "Instruction CMP not yet implemented."
	1041 Move W11, 0xF89E
	1042 NotImplemented "Instruction MOVK not yet implemented."
	1043 Move W19, W15
	1044 NotImplemented "Instruction CMP not yet implemented."
	1045 Move W10, 0xD609
	1046 NotImplemented "Instruction MOVK not yet implemented."
	1047 NotImplemented "Instruction CMP not yet implemented."
	1048 Move W8, 0x7EF1
	1049 NotImplemented "Instruction MOVK not yet implemented."
	1050 NotImplemented "Instruction CMP not yet implemented."
	1051 Move X8, [X31+40]
	1052 Move W8, [X8+1]
	1053 Compare W8, 0
	1054 JumpIfEqual {1095}
	1055 Move X8, 0x4A5000
	1056 Move X8, [X8+3352]
	1057 Move X19, [X31+72]
	1058 Move X1, [X8]
	1059 Add X0, X19, 704
	1060 Call TextProcessingStack`1<Int32>.CurrentItem, X0
	1061 Move [X31+664], W0
	1062 Add X0, X31, 664
	1063 Move X1, X31
	1064 Call Int32.ToString, X0
	1065 Move W8, [X19+804]
	1066 Move X20, X0
	1067 Add X0, X31, 664
	1068 Move X1, X31
	1069 Subtract W8, W8, 1
	1070 Move [X31+664], W8
	1071 Call Int32.ToString, X0
	1072 Move X8, 0x49D000
	1073 Move X8, [X8+744]
	1074 Move X9, 0x49D000
	1075 Move X9, [X9+768]
	1076 Move X3, X0
	1077 Move X8, [X8]
	1078 Move X1, X20
	1079 Move X2, [X9]
	1080 Move X4, X31
	1081 Move X0, X8
	1082 Call String.Concat, X0, X1, X2, X3
	1083 Move X8, 0x437000
	1084 Move X8, [X8+2600]
	1085 Move X20, X0
	1086 Move X8, [X8]
	1087 Move W9, [X8+224]
	1088 Compare W9, 0
	1089 JumpIfNotEqual {1092}
	1090 Move X0, X8
	1091 Call 0x1C17DFC
	1092 Move X0, X20
	1093 Move X1, X31
	1094 Call Debug.Log, X0
	1095 Move X8, 0x4A5000
	1096 Move X8, [X8+3392]
	1097 Move X1, [X8]
	1098 Move X8, [X31+72]
	1099 Add X0, X8, 704
	1100 Call TextProcessingStack`1<Int32>.Remove, X0
	1101 Move W10, 0xF054
	1102 NotImplemented "Instruction MOVK not yet implemented."
	1103 NotImplemented "Instruction CMP not yet implemented."
	1104 Move W10, 0x381D
	1105 NotImplemented "Instruction MOVK not yet implemented."
	1106 NotImplemented "Instruction CMP not yet implemented."
	1107 Move W8, 0x9790
	1108 NotImplemented "Instruction MOVK not yet implemented."
	1109 NotImplemented "Instruction CMP not yet implemented."
	1110 Move X8, [X31+72]
	1111 Move [X8+760], W31
	1112 Move W10, 0x112F
	1113 NotImplemented "Instruction MOVK not yet implemented."
	1114 NotImplemented "Instruction CMP not yet implemented."
	1115 Move W8, 0xD1DE
	1116 NotImplemented "Instruction MOVK not yet implemented."
	1117 NotImplemented "Instruction CMP not yet implemented."
	1118 Move W8, 0xABF6
	1119 NotImplemented "Instruction MOVK not yet implemented."
	1120 NotImplemented "Instruction CMP not yet implemented."
	1121 Move W8, 0x3291
	1122 NotImplemented "Instruction MOVK not yet implemented."
	1123 NotImplemented "Instruction CMP not yet implemented."
	1124 Move X8, 0x4A5000
	1125 Move X8, [X8+3448]
	1126 Move X19, [X31+72]
	1127 Move X1, [X8]
	1128 Add X20, X19, 312
	1129 Move X0, X20
	1130 Call TextProcessingStack`1<Int32Enum>.Remove, X0
	1131 Move W8, [X19+292]
	1132 NotImplemented "Instruction CMP not yet implemented."
	1133 Move X9, [X31+72]
	1134 Move W8, 700
	1135 Move [X9+308], W8
	1136 Move W10, 0x65F3
	1137 NotImplemented "Instruction MOVK not yet implemented."
	1138 Add W10, W10, 497
	1139 NotImplemented "Instruction CMP not yet implemented."
	1140 Move W8, 0x67F6
	1141 NotImplemented "Instruction MOVK not yet implemented."
	1142 NotImplemented "Instruction CMP not yet implemented."
	1143 Move W8, 747
	1144 NotImplemented "Instruction MOVK not yet implemented."
	1145 NotImplemented "Instruction CMP not yet implemented."
	1146 Move W8, 761
	1147 NotImplemented "Instruction MOVK not yet implemented."
	1148 NotImplemented "Instruction CMP not yet implemented."
	1149 Move X8, [X31+72]
	1150 Move W8, [X8+292]
	1151 Move TEMP, X8
	1152 And TEMP, TEMP, 128
	1153 Compare TEMP, 128
	1154 JumpIfNotEqual {629}
	1155 Move X8, [X31+72]
	1156 Move S1, 1
	1157 Move V0, [X8+240]
	1158 NotImplemented "Instruction FCMP not yet implemented."
	1159 Move X8, 0x4A5000
	1160 Move X8, [X8+3368]
	1161 Move X19, [X31+72]
	1162 Move X1, [X8]
	1163 Add X0, X19, 392
	1164 Call TextProcessingStack`1<Single>.Pop, X0
	1165 Move X0, [X19+104]
	1166 Move [X19+384], S0
	1167 Compare X0, 0
	1168 JumpIfEqual {3637}
	1169 Move X8, [X31+72]
	1170 Move X1, X31
	1171 Move V8, [X8+240]
	1172 Add X8, X31, 544
	1173 Call FontAsset.get_faceInfo, X0
	1174 Add X0, X31, 672
	1175 Add X1, X31, 544
	1176 Move W2, 96
	1177 Call 0x3EB2AC0
	1178 Add X0, X31, 672
	1179 Move X1, X31
	1180 Call FaceInfo.get_superscriptSize, X0
	1181 NotImplemented "Instruction FCMP not yet implemented."
	1182 Move S0, 1
	1183 Move X8, [X31+72]
	1184 Move X0, [X8+104]
	1185 Compare X0, 0
	1186 JumpIfEqual {3637}
	1187 Add X8, X31, 544
	1188 Move X1, X31
	1189 Call FontAsset.get_faceInfo, X0
	1190 Add X0, X31, 672
	1191 Add X1, X31, 544
	1192 Move W2, 96
	1193 Call 0x3EB2AC0
	1194 Add X0, X31, 672
	1195 Move X1, X31
	1196 Call FaceInfo.get_superscriptSize, X0
	1197 Move X8, [X31+72]
	1198 NotImplemented "Instruction FDIV not yet implemented."
	1199 Move [X8+240], S0
	1200 Move X8, [X31+72]
	1201 Move W1, 128
	1202 Move X2, X31
	1203 Add X0, X8, 296
	1204 Call FontStyleStack.Remove, X0, X1
	1205 And W31, W0, 255
	1206 Move X9, [X31+72]
	1207 Move W8, [X9+292]
	1208 And W8, W8, 0xFFFFFF7F
	1209 Move W10, 0x791E
	1210 NotImplemented "Instruction MOVK not yet implemented."
	1211 NotImplemented "Instruction CMP not yet implemented."
	1212 Move W10, 0xB2C9
	1213 NotImplemented "Instruction MOVK not yet implemented."
	1214 NotImplemented "Instruction CMP not yet implemented."
	1215 Move W10, 0x449E
	1216 NotImplemented "Instruction MOVK not yet implemented."
	1217 NotImplemented "Instruction CMP not yet implemented."
	1218 Move W8, 0x6CF1
	1219 NotImplemented "Instruction MOVK not yet implemented."
	1220 NotImplemented "Instruction CMP not yet implemented."
	1221 Move X8, [X31+16]
	1222 Move [X8], X31
	1223 Move W10, 203
	1224 NotImplemented "Instruction MOVK not yet implemented."
	1225 NotImplemented "Instruction CMP not yet implemented."
	1226 Move W8, 0x6D92
	1227 NotImplemented "Instruction MOVK not yet implemented."
	1228 NotImplemented "Instruction CMP not yet implemented."
	1229 Move W8, 0x3FA2
	1230 NotImplemented "Instruction MOVK not yet implemented."
	1231 NotImplemented "Instruction CMP not yet implemented."
	1232 Move X8, 0x4A5000
	1233 Move X8, [X8+3416]
	1234 Move X19, [X31+72]
	1235 Move X1, [X8]
	1236 Add X0, X19, 352
	1237 Call TextProcessingStack`1<Int32Enum>.Remove, X0
	1238 Move [X19+344], W0
	1239 NotImplemented "Instruction CMP not yet implemented."
	1240 NotImplemented "Instruction CMP not yet implemented."
	1241 NotImplemented "Instruction CMP not yet implemented."
	1242 Move X8, [X31+48]
	1243 Move W8, [X8+96]
	1244 Move TEMP, X8
	1245 And TEMP, TEMP, 1
	1246 Compare TEMP, 1
	1247 JumpIfEqual {629}
	1248 Move X8, [X31+72]
	1249 Move W1, 1
	1250 Move X2, X31
	1251 Add X0, X8, 296
	1252 Call FontStyleStack.Remove, X0, X1
	1253 Move W8, W0
	1254 Move W0, 1
	1255 And W31, W8, 255
	1256 Move X19, [X31+72]
	1257 Move W8, [X19+292]
	1258 Add X0, X19, 312
	1259 And W8, W8, 0xFFFFFFFE
	1260 Move [X19+292], W8
	1261 Move X8, 0x4A5000
	1262 Move X8, [X8+3360]
	1263 Move X1, [X8]
	1264 Call TextProcessingStack`1<Int32Enum>.Peek, X0
	1265 Move [X19+308], W0
	1266 Move W8, 2430
	1267 NotImplemented "Instruction MOVK not yet implemented."
	1268 NotImplemented "Instruction CMP not yet implemented."
	1269 Move W8, 0x95DA
	1270 NotImplemented "Instruction MOVK not yet implemented."
	1271 NotImplemented "Instruction CMP not yet implemented."
	1272 Move X8, [X31+48]
	1273 Move W8, [X8+97]
	1274 Move TEMP, X8
	1275 And TEMP, TEMP, 2
	1276 Compare TEMP, 2
	1277 JumpIfEqual {629}
	1278 Move X8, 0x4A5000
	1279 Move X8, [X8+3424]
	1280 Move X19, [X31+72]
	1281 Move X1, [X8]
	1282 Add X20, X19, 568
	1283 Add X8, X31, 544
	1284 Move X0, X20
	1285 Call TextProcessingStack`1<HighlightState>.Remove, X0
	1286 Move X8, 0x4A5000
	1287 Move X8, [X8+3456]
	1288 Move X0, X20
	1289 Move X1, [X8]
	1290 Add X8, X31, 640
	1291 Call TextProcessingStack`1<HighlightState>.get_current, X0
	1292 Move W8, [X31+656]
	1293 Move V0, [X31+40]
	1294 Add X0, X19, 296
	1295 Move W1, 512
	1296 Move X2, X31
	1297 Move [X31+560], W8
	1298 Move [X31+34], V0
	1299 Move [X19+72], W8
	1300 Move [X19+56], V0
	1301 Call FontStyleStack.Remove, X0, X1
	1302 And W31, W0, 255
	1303 Move X9, [X31+72]
	1304 Move W8, [X9+292]
	1305 And W8, W8, 0xFFFFFDFF
	1306 Move W10, 0x8664
	1307 NotImplemented "Instruction MOVK not yet implemented."
	1308 NotImplemented "Instruction CMP not yet implemented."
	1309 Move W10, 0x1799
	1310 NotImplemented "Instruction MOVK not yet implemented."
	1311 NotImplemented "Instruction CMP not yet implemented."
	1312 Move X9, 0x4A5000
	1313 Move X9, [X9+2888]
	1314 Move W21, [X8+44]
	1315 Move W20, [X8+48]
	1316 Move X0, [X9]
	1317 Move W9, [X0+224]
	1318 Compare W9, 0
	1319 JumpIfNotEqual {1321}
	1320 Call 0x1C17DFC
	1321 Move X0, X25
	1322 Move W1, W21
	1323 Move W2, W20
	1324 Move X3, X31
	1325 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	1326 Move W8, 0xC7000000
	1327 Move S1, W8
	1328 NotImplemented "Instruction FCMP not yet implemented."
	1329 Move X8, -52240384
	1330 Move V1, [X8+260]
	1331 Move X0, X31
	1332 Multiply S2, S0, S1
	1333 Move S0, W31
	1334 Move S1, W31
	1335 Call Quaternion.Internal_FromEulerRad, X0
	1336 Move X8, [X31+72]
	1337 Move [X8+6580], S0
	1338 Move [X8+6584], S1
	1339 Move [X8+6588], S2
	1340 Move [X8+6592], S3
	1341 Move W10, 0x2764
	1342 NotImplemented "Instruction MOVK not yet implemented."
	1343 NotImplemented "Instruction CMP not yet implemented."
	1344 Move W10, 0x5278
	1345 NotImplemented "Instruction MOVK not yet implemented."
	1346 NotImplemented "Instruction CMP not yet implemented."
	1347 Move X9, 0x4A5000
	1348 Move X9, [X9+2888]
	1349 Move W21, [X8+44]
	1350 Move W20, [X8+48]
	1351 Move X0, [X9]
	1352 Move W9, [X0+224]
	1353 Compare W9, 0
	1354 JumpIfNotEqual {1356}
	1355 Call 0x1C17DFC
	1356 Move X0, X25
	1357 Move W1, W21
	1358 Move W2, W20
	1359 Move X3, X31
	1360 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	1361 Move W8, 0xC7000000
	1362 Move S1, W8
	1363 NotImplemented "Instruction FCMP not yet implemented."
	1364 Move X8, [X31+72]
	1365 Move [X8+6568], S0
	1366 Move X8, [X31+40]
	1367 Move V0, 0
	1368 Add X8, X8, 1076
	1369 Move [X8], D0
	1370 Move W10, 0xC439
	1371 NotImplemented "Instruction MOVK not yet implemented."
	1372 NotImplemented "Instruction CMP not yet implemented."
	1373 Move W10, 0xF6F3
	1374 NotImplemented "Instruction MOVK not yet implemented."
	1375 NotImplemented "Instruction CMP not yet implemented."
	1376 Move X9, 0x4A5000
	1377 Move X9, [X9+2888]
	1378 Move W22, [X8+44]
	1379 Move W21, [X8+48]
	1380 Move W19, W15
	1381 Move X0, [X9]
	1382 Move W9, [X0+224]
	1383 Compare W9, 0
	1384 JumpIfNotEqual {1386}
	1385 Call 0x1C17DFC
	1386 Move X0, X25
	1387 Move W1, W22
	1388 Move W2, W21
	1389 Move X3, X31
	1390 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	1391 Move W8, 0xC7000000
	1392 Move S1, W8
	1393 NotImplemented "Instruction FCMP not yet implemented."
	1394 Compare W19, 0
	1395 JumpIfEqual {3847}
	1396 NotImplemented "Instruction CMP not yet implemented."
	1397 NotImplemented "Instruction CMP not yet implemented."
	1398 Move X8, [X31+72]
	1399 Move S2, -1
	1400 Move S4, W31
	1401 Move V1, [X8+860]
	1402 Move V3, [X8+88]
	1403 Move W8, 0x42C80000
	1404 NotImplemented "Instruction FCMP not yet implemented."
	1405 NotImplemented "Instruction FCSEL not yet implemented."
	1406 Subtract S1, S3, S1
	1407 Multiply S0, S0, S1
	1408 Move S1, W8
	1409 NotImplemented "Instruction FDIV not yet implemented."
	1410 Move W11, 0x2023
	1411 NotImplemented "Instruction MOVK not yet implemented."
	1412 NotImplemented "Instruction CMP not yet implemented."
	1413 Move W11, 0x7753
	1414 NotImplemented "Instruction MOVK not yet implemented."
	1415 NotImplemented "Instruction CMP not yet implemented."
	1416 NotImplemented "Instruction CMP not yet implemented."
	1417 Move W0, [X8+36]
	1418 Move W9, 0xB04B
	1419 NotImplemented "Instruction MOVK not yet implemented."
	1420 NotImplemented "Instruction CMP not yet implemented."
	1421 Move X8, [X31+72]
	1422 Move X8, [X8+5560]
	1423 Compare X8, 0
	1424 JumpIfEqual {3637}
	1425 Move W9, [X8+24]
	1426 Compare W9, 0
	1427 JumpIfEqual {4363}
	1428 Move X9, [X8+40]
	1429 Move X10, [X31+72]
	1430 Move [X10+104], X9
	1431 Move X9, [X8+56]
	1432 Move [X10+120], W31
	1433 Add X0, X10, 128
	1434 Move [X10+112], X9
	1435 Move V0, [X8+32]
	1436 Move V1, [X8+48]
	1437 Move X9, [X8+80]
	1438 Move V2, [X8+4]
	1439 Move X8, 0x4A5000
	1440 Move X8, [X8+3304]
	1441 Move [X31+528], X9
	1442 Move [X31+496], V1
	1443 Move [X31+504], V2
	1444 Move [X31+30], V0
	1445 Move X2, [X8]
	1446 Move W10, 0xE566
	1447 NotImplemented "Instruction MOVK not yet implemented."
	1448 NotImplemented "Instruction CMP not yet implemented."
	1449 Move W10, 0x3FC7
	1450 NotImplemented "Instruction MOVK not yet implemented."
	1451 NotImplemented "Instruction CMP not yet implemented."
	1452 Move X9, 0x4A5000
	1453 Move X9, [X9+2888]
	1454 Move W22, [X8+44]
	1455 Move W21, [X8+48]
	1456 Move W19, W15
	1457 Move X0, [X9]
	1458 Move W9, [X0+224]
	1459 Compare W9, 0
	1460 JumpIfNotEqual {1462}
	1461 Call 0x1C17DFC
	1462 Move X0, X25
	1463 Move W1, W22
	1464 Move W2, W21
	1465 Move X3, X31
	1466 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	1467 Move W8, 0xC7000000
	1468 Move S1, W8
	1469 NotImplemented "Instruction FCMP not yet implemented."
	1470 Compare W19, 0
	1471 JumpIfEqual {3872}
	1472 NotImplemented "Instruction CMP not yet implemented."
	1473 Move X8, [X31+48]
	1474 Move X9, -52240384
	1475 Move V1, [X9+188]
	1476 Move X9, [X31+72]
	1477 Move W8, [X8+189]
	1478 Move S3, 1
	1479 Move V2, [X9+244]
	1480 NotImplemented "Instruction CMP not yet implemented."
	1481 NotImplemented "Instruction FCSEL not yet implemented."
	1482 Multiply S0, S0, S1
	1483 Multiply S0, S2, S0
	1484 Move [X9+748], S0
	1485 Move X8, [X31+48]
	1486 Move W8, [X8+96]
	1487 Move TEMP, X8
	1488 And TEMP, TEMP, 32
	1489 Compare TEMP, 32
	1490 JumpIfEqual {629}
	1491 Move X8, [X31+72]
	1492 Move W1, 32
	1493 Move X2, X31
	1494 Add X0, X8, 296
	1495 Call FontStyleStack.Remove, X0, X1
	1496 And W31, W0, 255
	1497 Move X9, [X31+72]
	1498 Move W8, [X9+292]
	1499 And W8, W8, 0xFFFFFFDF
	1500 Move W11, 0x8194
	1501 NotImplemented "Instruction MOVK not yet implemented."
	1502 NotImplemented "Instruction CMP not yet implemented."
	1503 NotImplemented "Instruction CMP not yet implemented."
	1504 Move X9, [X31+40]
	1505 Move W9, [X9+1]
	1506 Compare W9, 0
	1507 JumpIfEqual {629}
	1508 Move X9, [X31+40]
	1509 Move W9, [X9+1136]
	1510 Compare W9, 0
	1511 JumpIfNotEqual {629}
	1512 NotImplemented "Instruction CMP not yet implemented."
	1513 Move W8, [X8+56]
	1514 Move W21, 0xAFB9
	1515 NotImplemented "Instruction MOVK not yet implemented."
	1516 NotImplemented "Instruction CMP not yet implemented."
	1517 Move X8, [X31+32]
	1518 Compare X8, 0
	1519 JumpIfEqual {3637}
	1520 Move X20, [X31+32]
	1521 Add X20, X20, 64
	1522 Move X8, [X20]
	1523 Compare X8, 0
	1524 JumpIfEqual {3637}
	1525 NotImplemented "Instruction LDURSW not yet implemented."
	1526 Move W9, [X8+24]
	1527 Add W23, W19, 1
	1528 NotImplemented "Instruction CMP not yet implemented."
	1529 Move X8, 0x4A5000
	1530 Move X8, [X8+2920]
	1531 Move X0, [X8]
	1532 Move W8, [X0+224]
	1533 Compare W8, 0
	1534 JumpIfNotEqual {1536}
	1535 Call 0x1C17DFC
	1536 Move X8, 0x4A5000
	1537 Move X8, [X8+3288]
	1538 Move X0, X20
	1539 Move W1, W23
	1540 Move X2, [X8]
	1541 Call 0x229D184, X0, X1
	1542 Move X8, [X20]
	1543 Compare X8, 0
	1544 JumpIfEqual {3637}
	1545 Move W9, [X8+24]
	1546 NotImplemented "Instruction CMP not yet implemented."
	1547 Move X10, [X31+72]
	1548 Move W9, 48
	1549 NotImplemented "Instruction MADD not yet implemented."
	1550 Move [X0+32], W21
	1551 Move W9, [X10+804]
	1552 Move [X0+12], W9
	1553 Move X9, [X10+6608]
	1554 Compare X9, 0
	1555 JumpIfEqual {3637}
	1556 Move W10, [X9+24]
	1557 NotImplemented "Instruction CMP not yet implemented."
	1558 Move W10, 48
	1559 Move W2, [X9+68]
	1560 NotImplemented "Instruction NOP not yet implemented."
	1561 NotImplemented "Instruction MADD not yet implemented."
	1562 Move W10, [X31+68]
	1563 Move X4, X31
	1564 Add W10, W2, W10
	1565 Move [X8+36], W10
	1566 Move X8, [X31+88]
	1567 Move W3, [X9+72]
	1568 Move X1, [X8]
	1569 Call LinkInfo.SetLinkId, X0, X1, X2, X3
	1570 Move W8, 0x2798
	1571 NotImplemented "Instruction MOVK not yet implemented."
	1572 NotImplemented "Instruction CMP not yet implemented."
	1573 Move W8, 0xBCA8
	1574 NotImplemented "Instruction MOVK not yet implemented."
	1575 NotImplemented "Instruction CMP not yet implemented."
	1576 Move X8, [X31+40]
	1577 Move W8, [X8+1]
	1578 Compare W8, 0
	1579 JumpIfEqual {629}
	1580 Move X8, [X31+72]
	1581 Move W8, [X8+804]
	1582 Subtract W8, W8, 1
	1583 Move X9, [X31+72]
	1584 Move V0, [X9+756]
	1585 Move V1, [X9+748]
	1586 Subtract S0, S0, S1
	1587 Move [X9+756], S0
	1588 Move X9, [X31+32]
	1589 Compare X9, 0
	1590 JumpIfEqual {3637}
	1591 Move X9, [X31+32]
	1592 Move X9, [X9+48]
	1593 Compare X9, 0
	1594 JumpIfEqual {3637}
	1595 Move W10, [X9+24]
	1596 NotImplemented "Instruction CMP not yet implemented."
	1597 Move W10, 392
	1598 NotImplemented "Instruction UMADDL not yet implemented."
	1599 Move [X8+356], S0
	1600 Move X8, [X31+72]
	1601 Move [X8+748], W31
	1602 Move W10, 0x86ED
	1603 NotImplemented "Instruction MOVK not yet implemented."
	1604 NotImplemented "Instruction CMP not yet implemented."
	1605 Move W10, 0xF054
	1606 NotImplemented "Instruction MOVK not yet implemented."
	1607 NotImplemented "Instruction CMP not yet implemented."
	1608 Move W8, [X8+48]
	1609 NotImplemented "Instruction CMP not yet implemented."
	1610 NotImplemented "Instruction CMP not yet implemented."
	1611 Move X8, 0x4A5000
	1612 Move X8, [X8+2888]
	1613 NotImplemented "Instruction LDRH not yet implemented."
	1614 Move X0, [X8]
	1615 Move W8, [X0+224]
	1616 Compare W8, 0
	1617 JumpIfNotEqual {1619}
	1618 Call 0x1C17DFC
	1619 Move W0, W20
	1620 Move X1, X31
	1621 Call TextGeneratorUtilities.HexToInt, X0
	1622 Move X8, [X31+88]
	1623 Move X8, [X8]
	1624 Compare X8, 0
	1625 JumpIfEqual {3637}
	1626 Move W9, [X8+24]
	1627 NotImplemented "Instruction CMP not yet implemented."
	1628 Move W20, W0
	1629 NotImplemented "Instruction LDRH not yet implemented."
	1630 Move X1, X31
	1631 Call TextGeneratorUtilities.HexToInt, X0
	1632 Move X9, [X31+72]
	1633 Add W8, W0, W20
	1634 Move [X9+431], W8
	1635 Move W10, 0xFA5C
	1636 NotImplemented "Instruction MOVK not yet implemented."
	1637 NotImplemented "Instruction CMP not yet implemented."
	1638 Move W8, 0x112F
	1639 NotImplemented "Instruction MOVK not yet implemented."
	1640 NotImplemented "Instruction CMP not yet implemented."
	1641 Move X8, [X31+48]
	1642 Move W8, [X8+96]
	1643 Move TEMP, X8
	1644 And TEMP, TEMP, 16
	1645 Compare TEMP, 16
	1646 JumpIfEqual {629}
	1647 Move X8, [X31+72]
	1648 Move W1, 16
	1649 Move X2, X31
	1650 Add X0, X8, 296
	1651 Call FontStyleStack.Remove, X0, X1
	1652 And W31, W0, 255
	1653 Move X9, [X31+72]
	1654 Move W8, [X9+292]
	1655 And W8, W8, 0xFFFFFFEF
	1656 Move W10, 0x4DAC
	1657 NotImplemented "Instruction MOVK not yet implemented."
	1658 NotImplemented "Instruction CMP not yet implemented."
	1659 Move W8, 0x67E4
	1660 NotImplemented "Instruction MOVK not yet implemented."
	1661 NotImplemented "Instruction CMP not yet implemented."
	1662 Move X8, [X31+72]
	1663 Move X0, [X8+104]
	1664 Compare X0, 0
	1665 JumpIfEqual {3637}
	1666 Move X8, [X31+72]
	1667 Move X1, X31
	1668 Move V8, [X8+240]
	1669 Add X8, X31, 544
	1670 Call FontAsset.get_faceInfo, X0
	1671 Add X0, X31, 672
	1672 Add X1, X31, 544
	1673 Move W2, 96
	1674 Call 0x3EB2AC0
	1675 Add X0, X31, 672
	1676 Move X1, X31
	1677 Call FaceInfo.get_subscriptSize, X0
	1678 NotImplemented "Instruction FCMP not yet implemented."
	1679 Move S0, 1
	1680 Move X8, [X31+72]
	1681 Move X0, [X8+104]
	1682 Compare X0, 0
	1683 JumpIfEqual {3637}
	1684 Add X8, X31, 544
	1685 Move X1, X31
	1686 Call FontAsset.get_faceInfo, X0
	1687 Add X0, X31, 672
	1688 Add X1, X31, 544
	1689 Move W2, 96
	1690 Call 0x3EB2AC0
	1691 Add X0, X31, 672
	1692 Move X1, X31
	1693 Call FaceInfo.get_subscriptSize, X0
	1694 Move X19, [X31+72]
	1695 Multiply S1, S8, S0
	1696 Move X8, 0x4A5000
	1697 Move [X19+240], S1
	1698 Move V0, [X19+384]
	1699 Move X8, [X8+3384]
	1700 Add X0, X19, 392
	1701 Move X1, [X8]
	1702 Call TextProcessingStack`1<Single>.Push, X0, V0
	1703 Move X0, [X19+104]
	1704 Compare X0, 0
	1705 JumpIfEqual {3637}
	1706 Move X19, [X31+72]
	1707 Add X8, X31, 544
	1708 Move X1, X31
	1709 Move V8, [X19+244]
	1710 Call FontAsset.get_faceInfo, X0
	1711 Add X0, X31, 672
	1712 Add X1, X31, 544
	1713 Move W2, 96
	1714 Call 0x3EB2AC0
	1715 Add X0, X31, 672
	1716 Move X1, X31
	1717 Call FaceInfo.get_pointSize, X0
	1718 Move X9, [X19+104]
	1719 Compare X9, 0
	1720 JumpIfEqual {3637}
	1721 Move W21, W0
	1722 Add X8, X31, 544
	1723 Move X0, X9
	1724 Move X1, X31
	1725 Call FontAsset.get_faceInfo, X0
	1726 Add X0, X31, 672
	1727 Add X1, X31, 544
	1728 Move W2, 96
	1729 Call 0x3EB2AC0
	1730 Add X0, X31, 672
	1731 Move X1, X31
	1732 Call FaceInfo.get_scale, X0
	1733 Move X8, [X31+72]
	1734 Move X0, [X8+104]
	1735 Compare X0, 0
	1736 JumpIfEqual {3637}
	1737 Move X8, [X31+48]
	1738 Move X19, [X31+72]
	1739 Move X9, -52240384
	1740 Move V2, [X9+188]
	1741 Move W8, [X8+189]
	1742 NotImplemented "Instruction SCVTF not yet implemented."
	1743 Move V9, [X19+384]
	1744 NotImplemented "Instruction FDIV not yet implemented."
	1745 Multiply S0, S1, S0
	1746 NotImplemented "Instruction CMP not yet implemented."
	1747 Move S1, 1
	1748 NotImplemented "Instruction FCSEL not yet implemented."
	1749 Add X8, X31, 544
	1750 Move X1, X31
	1751 Multiply S8, S0, S1
	1752 Call FontAsset.get_faceInfo, X0
	1753 Add X0, X31, 672
	1754 Add X1, X31, 544
	1755 Move W2, 96
	1756 Call 0x3EB2AC0
	1757 Add X0, X31, 672
	1758 Move X1, X31
	1759 Call FaceInfo.get_subscriptOffset, X0
	1760 Move V1, [X19+240]
	1761 Multiply S0, S8, S0
	1762 Add X0, X19, 296
	1763 Move W1, 256
	1764 Multiply S0, S0, S1
	1765 Add S0, S9, S0
	1766 Move X2, X31
	1767 Move [X19+384], S0
	1768 Call FontStyleStack.Add, X0, X1
	1769 Move W8, [X19+292]
	1770 Or W8, W8, 256
	1771 Move W10, 0x15E6
	1772 NotImplemented "Instruction MOVK not yet implemented."
	1773 NotImplemented "Instruction CMP not yet implemented."
	1774 Move W10, 0x791E
	1775 NotImplemented "Instruction MOVK not yet implemented."
	1776 NotImplemented "Instruction CMP not yet implemented."
	1777 Move X9, 0x4A5000
	1778 Move X9, [X9+2888]
	1779 Move W21, [X8+44]
	1780 Move W20, [X8+48]
	1781 Move X0, [X9]
	1782 Move W9, [X0+224]
	1783 Compare W9, 0
	1784 JumpIfNotEqual {1786}
	1785 Call 0x1C17DFC
	1786 Move X0, X25
	1787 Move W1, W21
	1788 Move W2, W20
	1789 Move X3, X31
	1790 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	1791 Move W8, 0xC7000000
	1792 Move S1, W8
	1793 NotImplemented "Instruction FCMP not yet implemented."
	1794 Move W8, 0x7F800000
	1795 Move S1, W8
	1796 NotImplemented "Instruction FCVTZS not yet implemented."
	1797 NotImplemented "Instruction FCMP not yet implemented."
	1798 Move W8, 0x80000000
	1799 NotImplemented "Instruction CSEL not yet implemented."
	1800 NotImplemented "Instruction CMP not yet implemented."
	1801 NotImplemented "Instruction CMP not yet implemented."
	1802 NotImplemented "Instruction CMP not yet implemented."
	1803 NotImplemented "Instruction CMP not yet implemented."
	1804 NotImplemented "Instruction CMP not yet implemented."
	1805 Move X10, [X31+72]
	1806 Move TEMP, 0
	1807 Not TEMP
	1808 Move W9, TEMP
	1809 Move W21, [X8+36]
	1810 Move [X10+5500], W9
	1811 Move W8, [X8+40]
	1812 NotImplemented "Instruction CMP not yet implemented."
	1813 Move X19, 0x437000
	1814 Move X19, [X19+1432]
	1815 Move X9, [X31+48]
	1816 Move X0, [X19]
	1817 Move X21, [X9+80]
	1818 Move W8, [X0+224]
	1819 Compare W8, 0
	1820 JumpIfNotEqual {1822}
	1821 Call 0x1C17DFC
	1822 Move X0, X21
	1823 Move X1, X31
	1824 Move X2, X31
	1825 Call Object.op_Inequality, X0, X1
	1826 Move TEMP, X0
	1827 And TEMP, TEMP, 1
	1828 Compare TEMP, 1
	1829 JumpIfNotEqual {3304}
	1830 Move X8, [X31+48]
	1831 Move X20, [X8+80]
	1832 Move X9, [X31+72]
	1833 Move W8, 0xFE00
	1834 NotImplemented "Instruction MOVK not yet implemented."
	1835 Move [X9+740], W8
	1836 Move X8, [X31+72]
	1837 Move W0, 1
	1838 Move [X8+893], W0
	1839 Move X9, [X31+32]
	1840 Compare X9, 0
	1841 JumpIfEqual {3637}
	1842 Move X10, [X31+32]
	1843 Move W9, 1
	1844 NotImplemented "Instruction CMP not yet implemented."
	1845 Move [X10+97], W9
	1846 NotImplemented "Instruction LDRH not yet implemented."
	1847 NotImplemented "Instruction CMP not yet implemented."
	1848 NotImplemented "Instruction CMP not yet implemented."
	1849 Move X8, 0x4A5000
	1850 Move X8, [X8+2888]
	1851 Move X0, [X8]
	1852 Move W8, [X0+224]
	1853 Compare W8, 0
	1854 JumpIfNotEqual {1856}
	1855 Call 0x1C17DFC
	1856 Move W1, 10
	1857 Move X8, [X31+72]
	1858 Move [X8+893], W31
	1859 Move X8, 0x4A5000
	1860 Move X8, [X8+3400]
	1861 Move X19, [X31+72]
	1862 Move X1, [X8]
	1863 Add X0, X19, 128
	1864 Add X8, X31, 544
	1865 Call TextProcessingStack`1<MaterialReference>.Remove, X0
	1866 Move X8, [X31+568]
	1867 Move W9, [X31+544]
	1868 Move [X19+112], X8
	1869 Move [X19+120], W9
	1870 Move X9, 0x4A5000
	1871 Move X9, [X9+2888]
	1872 Move W22, [X8+44]
	1873 Move W21, [X8+48]
	1874 Move W19, W15
	1875 Move X0, [X9]
	1876 Move W9, [X0+224]
	1877 Compare W9, 0
	1878 JumpIfNotEqual {1880}
	1879 Call 0x1C17DFC
	1880 Move X0, X25
	1881 Move W1, W22
	1882 Move W2, W21
	1883 Move X3, X31
	1884 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	1885 Move W8, 0xC7000000
	1886 Move S1, W8
	1887 NotImplemented "Instruction FCMP not yet implemented."
	1888 NotImplemented "Instruction CMP not yet implemented."
	1889 Compare W19, 0
	1890 JumpIfNotEqual {546}
	1891 Move X8, [X31+48]
	1892 Move X9, -52240384
	1893 Move V1, [X9+188]
	1894 Move X9, [X31+72]
	1895 Move W8, [X8+189]
	1896 Move S2, 1
	1897 Move V3, [X9+756]
	1898 NotImplemented "Instruction CMP not yet implemented."
	1899 NotImplemented "Instruction FCSEL not yet implemented."
	1900 Multiply S0, S0, S1
	1901 Add S0, S3, S0
	1902 Move X8, [X31+72]
	1903 Move [X8+76], W31
	1904 Move X8, [X31+72]
	1905 Move [X8+752], W31
	1906 Move X8, [X31+72]
	1907 Move [X8+384], W31
	1908 Move X8, [X31+48]
	1909 Move W8, [X8+96]
	1910 Move TEMP, X8
	1911 And TEMP, TEMP, 8
	1912 Compare TEMP, 8
	1913 JumpIfEqual {629}
	1914 Move X8, [X31+72]
	1915 Move W1, 8
	1916 Move X2, X31
	1917 Add X0, X8, 296
	1918 Call FontStyleStack.Remove, X0, X1
	1919 And W31, W0, 255
	1920 Move X9, [X31+72]
	1921 Move W8, [X9+292]
	1922 And W8, W8, 0xFFFFFFF7
	1923 Move W8, [X8+36]
	1924 Move W9, 0x989B
	1925 NotImplemented "Instruction MOVK not yet implemented."
	1926 NotImplemented "Instruction CMP not yet implemented."
	1927 Move W9, 0x6C24
	1928 NotImplemented "Instruction MOVK not yet implemented."
	1929 NotImplemented "Instruction CMP not yet implemented."
	1930 Move W9, 0xEC60
	1931 NotImplemented "Instruction MOVK not yet implemented."
	1932 NotImplemented "Instruction CMP not yet implemented."
	1933 Move W9, 0xD31F
	1934 NotImplemented "Instruction MOVK not yet implemented."
	1935 NotImplemented "Instruction CMP not yet implemented."
	1936 Move X9, [X31+72]
	1937 Move W8, 520
	1938 Move W1, 520
	1939 Move X9, 0x4A5000
	1940 Move X9, [X9+2888]
	1941 Move W22, [X8+44]
	1942 Move W21, [X8+48]
	1943 Move W19, W15
	1944 Move X0, [X9]
	1945 Move W9, [X0+224]
	1946 Compare W9, 0
	1947 JumpIfNotEqual {1949}
	1948 Call 0x1C17DFC
	1949 Move X0, X25
	1950 Move W1, W22
	1951 Move W2, W21
	1952 Move X3, X31
	1953 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	1954 Move W8, 0xC7000000
	1955 Move V8, V0
	1956 Move S0, W8
	1957 NotImplemented "Instruction FCMP not yet implemented."
	1958 NotImplemented "Instruction CMP not yet implemented."
	1959 NotImplemented "Instruction CMP not yet implemented."
	1960 Compare W19, 0
	1961 JumpIfNotEqual {629}
	1962 Move X8, [X31+48]
	1963 Move X9, -52244480
	1964 Move V0, [X9+188]
	1965 Move S1, 1
	1966 Move W8, [X8+189]
	1967 NotImplemented "Instruction CMP not yet implemented."
	1968 NotImplemented "Instruction FCSEL not yet implemented."
	1969 Multiply S0, S8, S0
	1970 Move X9, 0x4A4000
	1971 Move X9, [X9+2888]
	1972 Move W22, [X8+44]
	1973 Move W21, [X8+48]
	1974 Move W19, W15
	1975 Move X0, [X9]
	1976 Move W9, [X0+224]
	1977 Compare W9, 0
	1978 JumpIfNotEqual {1980}
	1979 Call 0x1C17DFC
	1980 Move X0, X25
	1981 Move W1, W22
	1982 Move W2, W21
	1983 Move X3, X31
	1984 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	1985 Move W8, 0xC7000000
	1986 Move S1, W8
	1987 NotImplemented "Instruction FCMP not yet implemented."
	1988 NotImplemented "Instruction CMP not yet implemented."
	1989 NotImplemented "Instruction CMP not yet implemented."
	1990 Compare W19, 0
	1991 JumpIfNotEqual {546}
	1992 Move X8, [X31+48]
	1993 Move X9, -52244480
	1994 Move V1, [X9+188]
	1995 Move S2, 1
	1996 Move W8, [X8+189]
	1997 NotImplemented "Instruction CMP not yet implemented."
	1998 Move X8, [X31+72]
	1999 NotImplemented "Instruction FCSEL not yet implemented."
	2000 Multiply S0, S0, S1
	2001 Move W20, [X8+36]
	2002 Add X1, X31, 792
	2003 Move X2, X31
	2004 Move W0, W20
	2005 Call MaterialReferenceManager.TryGetColorGradientPreset, X0, X1
	2006 Move TEMP, X0
	2007 And TEMP, TEMP, 1
	2008 Compare TEMP, 1
	2009 JumpIfEqual {3592}
	2010 Move X19, 0x436000
	2011 Move X19, [X19+1432]
	2012 Move X21, [X31+792]
	2013 Move X0, [X19]
	2014 Move W8, [X0+224]
	2015 Compare W8, 0
	2016 JumpIfNotEqual {2018}
	2017 Call 0x1C17DFC
	2018 Move X0, X21
	2019 Move X1, X31
	2020 Move X2, X31
	2021 Call Object.op_Equality, X0, X1
	2022 Move TEMP, X0
	2023 And TEMP, TEMP, 1
	2024 Compare TEMP, 1
	2025 JumpIfNotEqual {3574}
	2026 Move X8, [X31+24]
	2027 Compare X8, 0
	2028 JumpIfEqual {3637}
	2029 Move X8, [X27]
	2030 Compare X8, 0
	2031 JumpIfEqual {3637}
	2032 Move W9, [X8+24]
	2033 Compare W9, 0
	2034 JumpIfEqual {4363}
	2035 Move X9, [X31+24]
	2036 Move W2, [X8+44]
	2037 Move W3, [X8+48]
	2038 Move X0, X31
	2039 Move X4, X31
	2040 Move X21, [X9+120]
	2041 Move X9, [X31+88]
	2042 Move X1, [X9]
	2043 Call String.CreateString, X0, X1, X2, X3
	2044 Move X1, X0
	2045 Move X0, X21
	2046 Move X2, X31
	2047 Call String.Concat, X0, X1
	2048 Move X8, 0x4A4000
	2049 Move X8, [X8+3280]
	2050 Move X1, [X8]
	2051 Call 0x2242FB8, X0
	2052 Move X21, X0
	2053 Move [X31+792], X0
	2054 Move X9, [X31+72]
	2055 Move W8, 0xBF800000
	2056 Move [X9+860], W8
	2057 Move X19, 0x71B000
	2058 Move W8, [X19+2139]
	2059 Compare W8, 0
	2060 JumpIfNotEqual {2066}
	2061 Move X0, 0x436000
	2062 Move X0, [X0+1440]
	2063 Call 0x1C17CF4
	2064 Move W8, 1
	2065 Move [X19+2139], W8
	2066 Move X8, 0x436000
	2067 Move X8, [X8+1440]
	2068 Move X8, [X8]
	2069 Move X8, [X8+184]
	2070 NotImplemented "Instruction LDUR not yet implemented."
	2071 Move V1, [X8+20]
	2072 Move X8, [X31+72]
	2073 Move [X8+6568], D0
	2074 Move [X8+6576], S1
	2075 Move X8, [X31+40]
	2076 Move W8, [X8+1]
	2077 Compare W8, 0
	2078 JumpIfEqual {629}
	2079 Move X8, [X31+40]
	2080 Move W8, [X8+1136]
	2081 Compare W8, 0
	2082 JumpIfNotEqual {629}
	2083 Move X8, [X31+32]
	2084 Compare X8, 0
	2085 JumpIfEqual {3637}
	2086 Move X8, [X31+32]
	2087 Move X8, [X8+64]
	2088 Compare X8, 0
	2089 JumpIfEqual {3637}
	2090 Move X9, [X8+24]
	2091 Compare X9, 0
	2092 JumpIfEqual {4225}
	2093 Move X10, [X31+32]
	2094 Move W10, [X10+32]
	2095 NotImplemented "Instruction CMP not yet implemented."
	2096 Subtract W10, W10, 1
	2097 NotImplemented "Instruction CMP not yet implemented."
	2098 Move X9, [X31+72]
	2099 Move W11, 48
	2100 NotImplemented "Instruction UMADDL not yet implemented."
	2101 Move W10, [X8+44]
	2102 Move W9, [X9+804]
	2103 Subtract W9, W9, W10
	2104 Move [X8+48], W9
	2105 Move X8, [X31+48]
	2106 Move W8, [X8+96]
	2107 Move TEMP, X8
	2108 And TEMP, TEMP, 4
	2109 Compare TEMP, 4
	2110 JumpIfEqual {2121}
	2111 Move X8, [X31+72]
	2112 Move W1, 4
	2113 Move X2, X31
	2114 Add X0, X8, 296
	2115 Call FontStyleStack.Remove, X0, X1
	2116 And W31, W0, 255
	2117 Move X9, [X31+72]
	2118 Move W8, [X9+292]
	2119 And W8, W8, 0xFFFFFFFB
	2120 Move [X9+292], W8
	2121 Move X8, 0x4A4000
	2122 Move X8, [X8+3440]
	2123 Move X19, [X31+72]
	2124 Move X1, [X8]
	2125 Add X0, X19, 472
	2126 Call 0x26E2014, X0
	2127 Move [X19+432], W0
	2128 Move X8, [X31+40]
	2129 Move W8, [X8+1]
	2130 Compare W8, 0
	2131 JumpIfEqual {629}
	2132 Move X8, [X31+40]
	2133 Move W8, [X8+1136]
	2134 Compare W8, 0
	2135 JumpIfNotEqual {629}
	2136 Move X8, [X31+32]
	2137 Compare X8, 0
	2138 JumpIfEqual {3637}
	2139 Move X8, [X31+32]
	2140 Move X9, [X8+64]
	2141 Compare X9, 0
	2142 JumpIfEqual {3637}
	2143 Move X8, [X31+32]
	2144 Move W10, [X9+24]
	2145 NotImplemented "Instruction LDRSW not yet implemented."
	2146 NotImplemented "Instruction CMP not yet implemented."
	2147 NotImplemented "Instruction CMP not yet implemented."
	2148 Move X10, [X31+72]
	2149 Move W11, 48
	2150 NotImplemented "Instruction MADD not yet implemented."
	2151 Move W11, [X9+44]
	2152 Move W10, [X10+804]
	2153 Add W8, W8, 1
	2154 Subtract W10, W10, W11
	2155 Move [X9+48], W10
	2156 Move X9, [X31+32]
	2157 Move X8, 0x4A4000
	2158 Move X8, [X8+3400]
	2159 Move X19, [X31+72]
	2160 Move X1, [X8]
	2161 Add X0, X19, 128
	2162 Add X8, X31, 544
	2163 Call TextProcessingStack`1<MaterialReference>.Remove, X0
	2164 Move X8, [X31+552]
	2165 Move X9, [X31+568]
	2166 Move X10, [X31+544]
	2167 Move [X19+104], X8
	2168 Move [X19+112], X9
	2169 Move [X19+120], W10
	2170 Move X9, [X31+72]
	2171 Move W8, 1
	2172 Move [X9+800], W8
	2173 Move X8, [X31+40]
	2174 Move W8, [X8+1]
	2175 Compare W8, 0
	2176 JumpIfEqual {629}
	2177 Move X8, [X31+40]
	2178 Move W8, [X8+1136]
	2179 Compare W8, 0
	2180 JumpIfNotEqual {629}
	2181 Move X8, [X31+32]
	2182 Compare X8, 0
	2183 JumpIfEqual {3637}
	2184 Move X9, [X31+32]
	2185 Add X9, X9, 64
	2186 Move X8, [X9]
	2187 Move [X31+32], X9
	2188 Compare X8, 0
	2189 JumpIfEqual {3637}
	2190 Move X9, [X31+32]
	2191 NotImplemented "Instruction LDURSW not yet implemented."
	2192 Move W9, [X8+24]
	2193 Add W20, W19, 1
	2194 NotImplemented "Instruction CMP not yet implemented."
	2195 Move X8, 0x4A4000
	2196 Move X8, [X8+2920]
	2197 Move X0, [X8]
	2198 Move W8, [X0+224]
	2199 Compare W8, 0
	2200 JumpIfNotEqual {2202}
	2201 Call 0x1C17DFC
	2202 Move X8, 0x4A4000
	2203 Move X8, [X8+3288]
	2204 Move X21, [X31+32]
	2205 Move W1, W20
	2206 Move X2, [X8]
	2207 Move X0, X21
	2208 Call 0x229D184, X0, X1
	2209 Move X8, [X21]
	2210 Compare X8, 0
	2211 JumpIfEqual {3637}
	2212 Move X9, [X28]
	2213 Compare X9, 0
	2214 JumpIfEqual {3637}
	2215 Move W10, [X9+24]
	2216 Compare W10, 0
	2217 JumpIfEqual {4363}
	2218 Move W10, [X8+24]
	2219 NotImplemented "Instruction CMP not yet implemented."
	2220 Move W10, [X9+36]
	2221 Move W11, 48
	2222 NotImplemented "Instruction MADD not yet implemented."
	2223 Move X4, X31
	2224 Move [X0+32], W10
	2225 Move X10, [X31+72]
	2226 Move W8, [X10+804]
	2227 Move [X0+12], W8
	2228 Move W2, [X9+44]
	2229 Move W8, [X31+68]
	2230 Add W8, W2, W8
	2231 Move [X0+4], W8
	2232 Move X1, [X10+48]
	2233 Move W3, [X9+48]
	2234 Call LinkInfo.SetLinkId, X0, X1, X2, X3
	2235 Move X9, [X31+72]
	2236 Move W1, 512
	2237 Move X2, X31
	2238 Move W8, [X9+292]
	2239 Add X0, X9, 296
	2240 Or W8, W8, 512
	2241 Move [X9+292], W8
	2242 Call FontStyleStack.Add, X0, X1
	2243 Move X19, 0x4A4000
	2244 Move X19, [X19+2872]
	2245 Move X0, [X19]
	2246 Move W8, [X0+224]
	2247 Compare W8, 0
	2248 JumpIfNotEqual {2250}
	2249 Call 0x1C17DFC
	2250 Move X0, X31
	2251 Call Offset.get_zero
	2252 Move [X31+816], S0
	2253 Move [X31+820], S1
	2254 Move [X31+824], S2
	2255 Move [X31+828], S3
	2256 Move X8, [X28]
	2257 Compare X8, 0
	2258 JumpIfEqual {3637}
	2259 Move X10, -52244480
	2260 Move X11, -52244480
	2261 Move X12, [X31+72]
	2262 Move V12, [X10+816]
	2263 Move V13, [X11+188]
	2264 Move W9, 0x19D8
	2265 Move W27, 0x2F74
	2266 Move W29, 0x2F75
	2267 Move X13, X28
	2268 Move X20, X31
	2269 Move W21, W31
	2270 Move TEMP, 0xBFFF0000
	2271 Not TEMP
	2272 Move W23, TEMP
	2273 NotImplemented "Instruction MOVK not yet implemented."
	2274 Add X22, X12, X9
	2275 NotImplemented "Instruction MOVK not yet implemented."
	2276 Move W9, [X8+24]
	2277 NotImplemented "Instruction CMP not yet implemented."
	2278 NotImplemented "Instruction CMP not yet implemented."
	2279 Add X9, X8, X20
	2280 Move W9, [X9+32]
	2281 NotImplemented "Instruction CMP not yet implemented."
	2282 NotImplemented "Instruction CMP not yet implemented."
	2283 Move W10, 0x381D
	2284 NotImplemented "Instruction MOVK not yet implemented."
	2285 NotImplemented "Instruction CMP not yet implemented."
	2286 Move X9, 0x4A4000
	2287 Move X9, [X9+2888]
	2288 Add X8, X8, X20
	2289 Move W25, [X8+44]
	2290 Move W23, [X8+48]
	2291 Move X0, [X9]
	2292 Move X9, [X31+88]
	2293 Move X24, [X9]
	2294 Move W9, [X0+224]
	2295 Compare W9, 0
	2296 JumpIfNotEqual {2298}
	2297 Call 0x1C17DFC
	2298 Move X0, X24
	2299 Move W1, W25
	2300 Move W2, W23
	2301 Move X3, X31
	2302 Call TextGeneratorUtilities.HexCharsToColor, X0, X1, X2
	2303 Move W23, W0
	2304 Move W10, 0x7B71
	2305 NotImplemented "Instruction MOVK not yet implemented."
	2306 NotImplemented "Instruction CMP not yet implemented."
	2307 Move X9, 0x4A4000
	2308 Move X9, [X9+2888]
	2309 Add X8, X8, X20
	2310 Move W26, [X8+44]
	2311 Move W24, [X8+48]
	2312 Move X0, [X9]
	2313 Move X9, [X31+88]
	2314 Move X25, [X9]
	2315 Move W9, [X0+224]
	2316 Compare W9, 0
	2317 JumpIfNotEqual {2319}
	2318 Call 0x1C17DFC
	2319 Move X0, X25
	2320 Move W1, W26
	2321 Move W2, W24
	2322 Move X3, X22
	2323 Move X4, X31
	2324 Call TextGeneratorUtilities.GetAttributeParameters, X0, X1, X2, X3
	2325 NotImplemented "Instruction CMP not yet implemented."
	2326 Move X8, [X22]
	2327 Compare X8, 0
	2328 JumpIfEqual {3637}
	2329 Move W9, [X8+24]
	2330 Compare W9, 0
	2331 JumpIfEqual {4363}
	2332 NotImplemented "Instruction CMP not yet implemented."
	2333 NotImplemented "Instruction CMP not yet implemented."
	2334 NotImplemented "Instruction CMP not yet implemented."
	2335 Move X0, [X19]
	2336 Move S11, [X8+32]
	2337 Move S10, [X8+36]
	2338 Move S9, [X8+40]
	2339 Move S8, [X8+44]
	2340 Move W9, [X0+224]
	2341 Compare W9, 0
	2342 JumpIfNotEqual {2344}
	2343 Call 0x1C17DFC
	2344 Add X0, X31, 816
	2345 Move V0, V11
	2346 Move V1, V10
	2347 Move V2, V9
	2348 Move V3, V8
	2349 Move X1, X31
	2350 Call Offset..ctor, X0, V0, V1, V2, V3
	2351 Move X8, [X31+48]
	2352 Move X0, [X19]
	2353 Move X10, [X31+72]
	2354 Move V8, [X31+816]
	2355 Move W8, [X8+189]
	2356 Move V9, [X31+820]
	2357 Move V11, [X31+824]
	2358 Move V10, [X31+828]
	2359 Move W9, [X0+224]
	2360 Move V14, [X10+236]
	2361 NotImplemented "Instruction CMP not yet implemented."
	2362 Move S0, 1
	2363 NotImplemented "Instruction FCSEL not yet implemented."
	2364 Compare W9, 0
	2365 JumpIfNotEqual {2367}
	2366 Call 0x1C17DFC
	2367 Multiply S0, S14, S12
	2368 Multiply S4, S0, S15
	2369 Move V0, V8
	2370 Move V1, V9
	2371 Move V2, V11
	2372 Move V3, V10
	2373 Move X0, X31
	2374 Call Offset.op_Multiply, X0, V0
	2375 Move [X31+816], S0
	2376 Move [X31+820], S1
	2377 Move [X31+824], S2
	2378 Move [X31+828], S3
	2379 Add X9, X8, X20
	2380 Move W9, [X9+40]
	2381 NotImplemented "Instruction CMP not yet implemented."
	2382 Move X9, 0x4A4000
	2383 Move X9, [X9+2888]
	2384 Move W24, [X8+44]
	2385 Move W23, [X8+48]
	2386 Move X0, [X9]
	2387 Move X9, [X31+88]
	2388 Move X25, [X9]
	2389 Move W9, [X0+224]
	2390 Compare W9, 0
	2391 JumpIfNotEqual {2393}
	2392 Call 0x1C17DFC
	2393 Move X0, X25
	2394 Move W1, W24
	2395 Move W2, W23
	2396 Move X3, X31
	2397 Call TextGeneratorUtilities.HexCharsToColor, X0, X1, X2
	2398 Move X23, X0
	2399 Move X13, X28
	2400 Move X8, [X13]
	2401 Add W21, W21, 1
	2402 Add X20, X20, 24
	2403 Compare X8, 0
	2404 JumpIfNotEqual {2276}
	2405 Compare W9, 0
	2406 JumpIfNotEqual {2400}
	2407 Move X19, [X31+72]
	2408 Move W8, W23
	2409 ShiftRight W8, 24
	2410 And W8, W8, 0x7FFFFFFF
	2411 And W1, W23, 0xFF0000
	2412 Move V0, [X31+816]
	2413 Move W9, [X19+431]
	2414 Move V1, [X31+820]
	2415 Move V2, [X31+824]
	2416 Move V3, [X31+828]
	2417 NotImplemented "Instruction CMP not yet implemented."
	2418 NotImplemented "Instruction CSEL not yet implemented."
	2419 NotImplemented "Instruction BFM not yet implemented."
	2420 NotImplemented "Instruction BFM not yet implemented."
	2421 NotImplemented "Instruction BFM not yet implemented."
	2422 Add X0, X31, 640
	2423 Move X2, X31
	2424 Move [X31+648], X31
	2425 Move [X31+640], X31
	2426 Move [X31+656], W31
	2427 Call HighlightState..ctor, X0, X1, X2
	2428 Move W8, [X31+656]
	2429 Move V0, [X31+40]
	2430 Move X9, 0x4A4000
	2431 Move X9, [X9+3376]
	2432 Move [X19+72], W8
	2433 Move [X19+56], V0
	2434 Move V0, [X31+40]
	2435 Move W8, [X31+656]
	2436 Move X2, [X9]
	2437 Add X0, X19, 568
	2438 Add X1, X31, 544
	2439 Move [X31+34], V0
	2440 Move [X31+560], W8
	2441 Call TextProcessingStack`1<HighlightState>.Push, X0, X1
	2442 Move X8, [X31+32]
	2443 Compare X8, 0
	2444 JumpIfEqual {3637}
	2445 Move X8, [X31+32]
	2446 Move W0, 1
	2447 Move [X8+97], W0
	2448 Move X9, 0x4A4000
	2449 Move X9, [X9+2888]
	2450 Move W22, [X8+44]
	2451 Move W21, [X8+48]
	2452 Move W19, W15
	2453 Move X0, [X9]
	2454 Move W9, [X0+224]
	2455 Compare W9, 0
	2456 JumpIfNotEqual {2458}
	2457 Call 0x1C17DFC
	2458 Move X0, X25
	2459 Move W1, W22
	2460 Move W2, W21
	2461 Move X3, X31
	2462 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	2463 Move W8, 0xC7000000
	2464 Move S1, W8
	2465 NotImplemented "Instruction FCMP not yet implemented."
	2466 Compare W19, 0
	2467 JumpIfEqual {4164}
	2468 NotImplemented "Instruction CMP not yet implemented."
	2469 NotImplemented "Instruction CMP not yet implemented."
	2470 Move X9, [X31+72]
	2471 Move W8, 0x42C80000
	2472 Move V1, [X9+88]
	2473 Multiply S0, S0, S1
	2474 Move S1, W8
	2475 NotImplemented "Instruction FDIV not yet implemented."
	2476 Move X9, [X31+72]
	2477 Move W1, 8
	2478 Move W8, [X9+292]
	2479 Add X0, X9, 296
	2480 Or W8, W8, 8
	2481 Move X19, [X31+72]
	2482 Move W1, 1
	2483 Move X2, X31
	2484 Move W8, [X19+292]
	2485 Add X0, X19, 296
	2486 Or W8, W8, 1
	2487 Move [X19+292], W8
	2488 Call FontStyleStack.Add, X0, X1
	2489 Move W8, 700
	2490 Move W0, 1
	2491 Move [X19+308], W8
	2492 Move X19, [X31+72]
	2493 Move W1, 2
	2494 Move X2, X31
	2495 Move W8, [X19+292]
	2496 Add X0, X19, 296
	2497 Or W8, W8, 2
	2498 Move [X19+292], W8
	2499 Call FontStyleStack.Add, X0, X1
	2500 Move X8, [X19+6608]
	2501 Compare X8, 0
	2502 JumpIfEqual {3637}
	2503 Move W9, [X8+24]
	2504 NotImplemented "Instruction CMP not yet implemented."
	2505 Move W9, [X8+56]
	2506 Move W10, 0xB7C1
	2507 NotImplemented "Instruction MOVK not yet implemented."
	2508 NotImplemented "Instruction CMP not yet implemented."
	2509 Move X9, 0x4A4000
	2510 Move X9, [X9+2888]
	2511 Move W21, [X8+68]
	2512 Move W20, [X8+72]
	2513 Move X0, [X9]
	2514 Move X9, [X31+88]
	2515 Move X22, [X9]
	2516 Move W9, [X0+224]
	2517 Compare W9, 0
	2518 JumpIfNotEqual {2520}
	2519 Call 0x1C17DFC
	2520 Move X0, X22
	2521 Move W1, W21
	2522 Move W2, W20
	2523 Move X3, X31
	2524 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	2525 Move W8, 0x7F800000
	2526 Move S1, W8
	2527 NotImplemented "Instruction FCVTZS not yet implemented."
	2528 NotImplemented "Instruction FCMP not yet implemented."
	2529 Move W8, 0x80000000
	2530 NotImplemented "Instruction CSEL not yet implemented."
	2531 Add W8, W1, 180
	2532 NotImplemented "Instruction CMP not yet implemented."
	2533 Move X8, [X31+72]
	2534 Move [X8+6564], W1
	2535 Move W9, [X8+40]
	2536 NotImplemented "Instruction CMP not yet implemented."
	2537 Compare W9, 0
	2538 JumpIfNotEqual {546}
	2539 NotImplemented "Instruction CMP not yet implemented."
	2540 Move X9, -52244480
	2541 Move V9, [X9+188]
	2542 Move X28, X27
	2543 Move W24, 0x989B
	2544 Move W27, 0xEC60
	2545 Move X19, X31
	2546 Move W20, 1
	2547 NotImplemented "Instruction MOVK not yet implemented."
	2548 Move W25, 0xC7000000
	2549 Move S8, 1
	2550 Move S10, W31
	2551 Move S11, -1
	2552 Move W26, 0x42C80000
	2553 NotImplemented "Instruction MOVK not yet implemented."
	2554 NotImplemented "Instruction CMP not yet implemented."
	2555 Add X10, X8, X19
	2556 Move W9, [X10+56]
	2557 NotImplemented "Instruction CMP not yet implemented."
	2558 NotImplemented "Instruction CMP not yet implemented."
	2559 Compare W9, 0
	2560 JumpIfNotEqual {2674}
	2561 Move X8, 0x4A4000
	2562 Move X8, [X8+2888]
	2563 Move W22, [X10+68]
	2564 Move W21, [X10+72]
	2565 Move X0, [X8]
	2566 Move X8, [X31+88]
	2567 Move X23, [X8]
	2568 Move W8, [X0+224]
	2569 Compare W8, 0
	2570 JumpIfNotEqual {2572}
	2571 Call 0x1C17DFC
	2572 Move X0, X23
	2573 Move W1, W22
	2574 Move W2, W21
	2575 Move X3, X31
	2576 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	2577 Move S1, W25
	2578 NotImplemented "Instruction FCMP not yet implemented."
	2579 Move X8, [X28]
	2580 Compare X8, 0
	2581 JumpIfEqual {3637}
	2582 Move W9, [X8+24]
	2583 NotImplemented "Instruction CMP not yet implemented."
	2584 Add X9, X8, X19
	2585 Move W9, [X9+76]
	2586 Compare W9, 0
	2587 JumpIfEqual {2638}
	2588 NotImplemented "Instruction CMP not yet implemented."
	2589 NotImplemented "Instruction CMP not yet implemented."
	2590 Move X9, [X31+72]
	2591 Move V1, [X9+860]
	2592 Move V2, [X9+88]
	2593 NotImplemented "Instruction FCMP not yet implemented."
	2594 NotImplemented "Instruction FCSEL not yet implemented."
	2595 Subtract S1, S2, S1
	2596 Multiply S0, S0, S1
	2597 Move S1, W26
	2598 NotImplemented "Instruction FDIV not yet implemented."
	2599 Move X9, 0x4A4000
	2600 Move X9, [X9+2888]
	2601 Add X8, X8, X19
	2602 Move W23, [X8+68]
	2603 Move W21, [X8+72]
	2604 Move X0, [X9]
	2605 Move X9, [X31+88]
	2606 Move X22, [X9]
	2607 Move W9, [X0+224]
	2608 Compare W9, 0
	2609 JumpIfNotEqual {2611}
	2610 Call 0x1C17DFC
	2611 Move X0, X22
	2612 Move W1, W23
	2613 Move W2, W21
	2614 Move X3, X31
	2615 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	2616 Move S1, W25
	2617 NotImplemented "Instruction FCMP not yet implemented."
	2618 Move X8, [X28]
	2619 Compare X8, 0
	2620 JumpIfEqual {3637}
	2621 Move W9, [X8+24]
	2622 NotImplemented "Instruction CMP not yet implemented."
	2623 Add X9, X8, X19
	2624 Move W9, [X9+76]
	2625 Compare W9, 0
	2626 JumpIfEqual {2656}
	2627 NotImplemented "Instruction CMP not yet implemented."
	2628 NotImplemented "Instruction CMP not yet implemented."
	2629 Move X9, [X31+72]
	2630 Move V1, [X9+860]
	2631 Move V2, [X9+88]
	2632 NotImplemented "Instruction FCMP not yet implemented."
	2633 NotImplemented "Instruction FCSEL not yet implemented."
	2634 Subtract S1, S2, S1
	2635 Multiply S0, S0, S1
	2636 Move S1, W26
	2637 NotImplemented "Instruction FDIV not yet implemented."
	2638 Move X9, [X31+48]
	2639 Move W9, [X9+189]
	2640 NotImplemented "Instruction CMP not yet implemented."
	2641 NotImplemented "Instruction FCSEL not yet implemented."
	2642 Move X9, [X31+48]
	2643 Move X10, [X31+72]
	2644 Move W9, [X9+189]
	2645 Move V1, [X10+244]
	2646 NotImplemented "Instruction CMP not yet implemented."
	2647 NotImplemented "Instruction FCSEL not yet implemented."
	2648 Multiply S0, S0, S2
	2649 Multiply S0, S0, S1
	2650 Move X9, [X31+72]
	2651 Move V0, [X9+852]
	2652 Move X9, [X31+72]
	2653 NotImplemented "Instruction FCMP not yet implemented."
	2654 NotImplemented "Instruction FCSEL not yet implemented."
	2655 Move [X9+852], S0
	2656 Move X9, [X31+48]
	2657 Move W9, [X9+189]
	2658 NotImplemented "Instruction CMP not yet implemented."
	2659 NotImplemented "Instruction FCSEL not yet implemented."
	2660 Move X9, [X31+48]
	2661 Move X10, [X31+72]
	2662 Move W9, [X9+189]
	2663 Move V1, [X10+244]
	2664 NotImplemented "Instruction CMP not yet implemented."
	2665 NotImplemented "Instruction FCSEL not yet implemented."
	2666 Multiply S0, S0, S2
	2667 Multiply S0, S0, S1
	2668 Move X9, [X31+72]
	2669 Move V0, [X9+856]
	2670 Move X9, [X31+72]
	2671 NotImplemented "Instruction FCMP not yet implemented."
	2672 NotImplemented "Instruction FCSEL not yet implemented."
	2673 Move [X9+856], S0
	2674 Move W10, [X8+24]
	2675 Add W20, W20, 1
	2676 Add X19, X19, 24
	2677 Move W0, 1
	2678 NotImplemented "Instruction CMP not yet implemented."
	2679 Move X9, 0x4A4000
	2680 Move X9, [X9+2888]
	2681 Move W22, [X8+44]
	2682 Move W21, [X8+48]
	2683 Move X0, [X9]
	2684 Move W9, [X0+224]
	2685 Compare W9, 0
	2686 JumpIfNotEqual {2688}
	2687 Call 0x1C17DFC
	2688 Move X0, X25
	2689 Move W1, W22
	2690 Move W2, W21
	2691 Move X3, X31
	2692 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	2693 Move W8, 0xC7000000
	2694 Move S1, W8
	2695 NotImplemented "Instruction FCMP not yet implemented."
	2696 Compare W19, 0
	2697 JumpIfEqual {4196}
	2698 NotImplemented "Instruction CMP not yet implemented."
	2699 NotImplemented "Instruction CMP not yet implemented."
	2700 Move X9, [X31+72]
	2701 Move W1, 32
	2702 Move W8, [X9+292]
	2703 Add X0, X9, 296
	2704 Or W8, W8, 32
	2705 Move [X9+292], W8
	2706 Move X2, X31
	2707 Call FontStyleStack.Add, X0, X1
	2708 Move X19, 0x71B000
	2709 Move W8, [X19+1939]
	2710 Compare W8, 0
	2711 JumpIfNotEqual {2717}
	2712 Move X0, 0x437000
	2713 Move X0, [X0+1448]
	2714 Call 0x1C17CF4
	2715 Move W8, 1
	2716 Move [X19+1939], W8
	2717 Move X8, 0x437000
	2718 Move X8, [X8+1448]
	2719 Move X8, [X8]
	2720 Move X8, [X8+184]
	2721 Move V0, [X8]
	2722 Move X8, [X31+40]
	2723 Add X8, X8, 1084
	2724 Move [X8], V0
	2725 Move X8, [X31+72]
	2726 Move X0, [X8+104]
	2727 Compare X0, 0
	2728 JumpIfEqual {3637}
	2729 Move X8, [X31+72]
	2730 Move X1, X31
	2731 Move V8, [X8+240]
	2732 Add X8, X31, 544
	2733 Call FontAsset.get_faceInfo, X0
	2734 Add X0, X31, 672
	2735 Add X1, X31, 544
	2736 Move W2, 96
	2737 Call 0x3EB2AC0
	2738 Add X0, X31, 672
	2739 Move X1, X31
	2740 Call FaceInfo.get_superscriptSize, X0
	2741 NotImplemented "Instruction FCMP not yet implemented."
	2742 Move S0, 1
	2743 Move X8, [X31+72]
	2744 Move X0, [X8+104]
	2745 Compare X0, 0
	2746 JumpIfEqual {3637}
	2747 Add X8, X31, 544
	2748 Move X1, X31
	2749 Call FontAsset.get_faceInfo, X0
	2750 Add X0, X31, 672
	2751 Add X1, X31, 544
	2752 Move W2, 96
	2753 Call 0x3EB2AC0
	2754 Add X0, X31, 672
	2755 Move X1, X31
	2756 Call FaceInfo.get_superscriptSize, X0
	2757 Move X19, [X31+72]
	2758 Multiply S1, S8, S0
	2759 Move X8, 0x4A4000
	2760 Move [X19+240], S1
	2761 Move V0, [X19+384]
	2762 Move X8, [X8+3384]
	2763 Add X0, X19, 392
	2764 Move X1, [X8]
	2765 Call TextProcessingStack`1<Single>.Push, X0, V0
	2766 Move X0, [X19+104]
	2767 Compare X0, 0
	2768 JumpIfEqual {3637}
	2769 Move X19, [X31+72]
	2770 Add X8, X31, 544
	2771 Move X1, X31
	2772 Move V8, [X19+244]
	2773 Call FontAsset.get_faceInfo, X0
	2774 Add X0, X31, 672
	2775 Add X1, X31, 544
	2776 Move W2, 96
	2777 Call 0x3EB2AC0
	2778 Add X0, X31, 672
	2779 Move X1, X31
	2780 Call FaceInfo.get_pointSize, X0
	2781 Move X9, [X19+104]
	2782 Compare X9, 0
	2783 JumpIfEqual {3637}
	2784 Move W21, W0
	2785 Add X8, X31, 544
	2786 Move X0, X9
	2787 Move X1, X31
	2788 Call FontAsset.get_faceInfo, X0
	2789 Add X0, X31, 672
	2790 Add X1, X31, 544
	2791 Move W2, 96
	2792 Call 0x3EB2AC0
	2793 Add X0, X31, 672
	2794 Move X1, X31
	2795 Call FaceInfo.get_scale, X0
	2796 Move X8, [X31+72]
	2797 Move X0, [X8+104]
	2798 Compare X0, 0
	2799 JumpIfEqual {3637}
	2800 Move X8, [X31+48]
	2801 Move X19, [X31+72]
	2802 Move X9, -52244480
	2803 Move V2, [X9+188]
	2804 Move W8, [X8+189]
	2805 NotImplemented "Instruction SCVTF not yet implemented."
	2806 Move V9, [X19+384]
	2807 NotImplemented "Instruction FDIV not yet implemented."
	2808 Multiply S0, S1, S0
	2809 NotImplemented "Instruction CMP not yet implemented."
	2810 Move S1, 1
	2811 NotImplemented "Instruction FCSEL not yet implemented."
	2812 Add X8, X31, 544
	2813 Move X1, X31
	2814 Multiply S8, S0, S1
	2815 Call FontAsset.get_faceInfo, X0
	2816 Add X0, X31, 672
	2817 Add X1, X31, 544
	2818 Move W2, 96
	2819 Call 0x3EB2AC0
	2820 Add X0, X31, 672
	2821 Move X1, X31
	2822 Call FaceInfo.get_superscriptOffset, X0
	2823 Move V1, [X19+240]
	2824 Multiply S0, S8, S0
	2825 Add X0, X19, 296
	2826 Move W1, 128
	2827 Multiply S0, S0, S1
	2828 Add S0, S9, S0
	2829 Move X2, X31
	2830 Move [X19+384], S0
	2831 Call FontStyleStack.Add, X0, X1
	2832 Move W8, [X19+292]
	2833 Or W8, W8, 128
	2834 Move [X19+292], W8
	2835 Move X8, [X31+72]
	2836 Move W8, [X8+293]
	2837 Move TEMP, X8
	2838 And TEMP, TEMP, 1
	2839 Compare TEMP, 1
	2840 JumpIfNotEqual {629}
	2841 Move X8, [X31+72]
	2842 Move S1, 1
	2843 Move V0, [X8+240]
	2844 NotImplemented "Instruction FCMP not yet implemented."
	2845 Move X8, 0x4A4000
	2846 Move X8, [X8+3368]
	2847 Move X19, [X31+72]
	2848 Move X1, [X8]
	2849 Add X0, X19, 392
	2850 Call TextProcessingStack`1<Single>.Pop, X0
	2851 Move X0, [X19+104]
	2852 Move [X19+384], S0
	2853 Compare X0, 0
	2854 JumpIfEqual {3637}
	2855 Move X8, [X31+72]
	2856 Move X1, X31
	2857 Move V8, [X8+240]
	2858 Add X8, X31, 544
	2859 Call FontAsset.get_faceInfo, X0
	2860 Add X0, X31, 672
	2861 Add X1, X31, 544
	2862 Move W2, 96
	2863 Call 0x3EB2AC0
	2864 Add X0, X31, 672
	2865 Move X1, X31
	2866 Call FaceInfo.get_subscriptSize, X0
	2867 NotImplemented "Instruction FCMP not yet implemented."
	2868 Move S0, 1
	2869 Move X8, [X31+72]
	2870 Move X0, [X8+104]
	2871 Compare X0, 0
	2872 JumpIfEqual {3637}
	2873 Add X8, X31, 544
	2874 Move X1, X31
	2875 Call FontAsset.get_faceInfo, X0
	2876 Add X0, X31, 672
	2877 Add X1, X31, 544
	2878 Move W2, 96
	2879 Call 0x3EB2AC0
	2880 Add X0, X31, 672
	2881 Move X1, X31
	2882 Call FaceInfo.get_subscriptSize, X0
	2883 Move X8, [X31+72]
	2884 NotImplemented "Instruction FDIV not yet implemented."
	2885 Move [X8+240], S0
	2886 Move X8, [X31+72]
	2887 Move W1, 256
	2888 Move X2, X31
	2889 Add X0, X8, 296
	2890 Call FontStyleStack.Remove, X0, X1
	2891 And W31, W0, 255
	2892 Move X9, [X31+72]
	2893 Move W8, [X9+292]
	2894 And W8, W8, 0xFFFFFEFF
	2895 Move X8, 0x4A4000
	2896 Move X8, [X8+3432]
	2897 Move X19, [X31+72]
	2898 Move X1, [X8]
	2899 Add X0, X19, 656
	2900 Call TextProcessingStack`1<Object>.Remove, X0
	2901 Move [X19+648], X0
	2902 Move W1, [X8+36]
	2903 Move X8, [X31+40]
	2904 Move [X31+780], W1
	2905 Move W8, [X8+1]
	2906 Compare W8, 0
	2907 JumpIfEqual {629}
	2908 Move X8, 0x4A4000
	2909 Move X8, [X8+3296]
	2910 Move X19, [X31+72]
	2911 Move X2, [X8]
	2912 Add X0, X19, 704
	2913 Call TextProcessingStack`1<Int32>.Add, X0, X1
	2914 Add X0, X31, 780
	2915 Move X1, X31
	2916 Call Int32.ToString, X0
	2917 Move X20, X0
	2918 Add X0, X19, 804
	2919 Move X1, X31
	2920 Call Int32.ToString, X0
	2921 Move X8, 0x49C000
	2922 Move X8, [X8+744]
	2923 Move X9, 0x49C000
	2924 Move X9, [X9+752]
	2925 Move X3, X0
	2926 Move X8, [X8]
	2927 Move X1, X20
	2928 Move X2, [X9]
	2929 Move X4, X31
	2930 Move X0, X8
	2931 Call String.Concat, X0, X1, X2, X3
	2932 Move X8, 0x436000
	2933 Move X8, [X8+2600]
	2934 Move X19, X0
	2935 Move X8, [X8]
	2936 Move W9, [X8+224]
	2937 Compare W9, 0
	2938 JumpIfNotEqual {2941}
	2939 Move X0, X8
	2940 Call 0x1C17DFC
	2941 Move X0, X19
	2942 Move X1, X31
	2943 Call Debug.Log, X0
	2944 Move W20, [X8+36]
	2945 Move W8, 0xB04B
	2946 NotImplemented "Instruction MOVK not yet implemented."
	2947 NotImplemented "Instruction CMP not yet implemented."
	2948 Move X8, [X31+72]
	2949 Move X8, [X8+5560]
	2950 Compare X8, 0
	2951 JumpIfEqual {3637}
	2952 Move W9, [X8+24]
	2953 Compare W9, 0
	2954 JumpIfEqual {4363}
	2955 Move X9, [X8+56]
	2956 Move X10, [X31+72]
	2957 Move [X10+120], W31
	2958 Move [X10+112], X9
	2959 Move V0, [X8+32]
	2960 Move V1, [X8+48]
	2961 Move X9, [X8+80]
	2962 Move V2, [X8+4]
	2963 Move X8, 0x4A4000
	2964 Move X8, [X8+3304]
	2965 Add X0, X10, 128
	2966 Move [X31+272], X9
	2967 Move [X31+240], V1
	2968 Move [X31+248], V2
	2969 Move X2, [X8]
	2970 Move [X31+14], V0
	2971 Add X1, X31, 544
	2972 Move [X31+544], V0
	2973 Move [X31+552], V1
	2974 Move [X31+36], V2
	2975 Move [X31+592], X9
	2976 Move X8, 0x4A4000
	2977 Move X8, [X8+3440]
	2978 Move X19, [X31+72]
	2979 Move X1, [X8]
	2980 Add X0, X19, 440
	2981 Call 0x26E2014, X0
	2982 Move [X19+428], W0
	2983 Move X19, [X31+72]
	2984 Move W1, 4
	2985 Move X2, X31
	2986 Move W8, [X19+292]
	2987 Add X0, X19, 296
	2988 Or W8, W8, 4
	2989 Move [X19+292], W8
	2990 Call FontStyleStack.Add, X0, X1
	2991 Move X8, [X19+6608]
	2992 Compare X8, 0
	2993 JumpIfEqual {3637}
	2994 Move W9, [X8+24]
	2995 NotImplemented "Instruction CMP not yet implemented."
	2996 Move W9, [X8+56]
	2997 Move W10, 0x381D
	2998 NotImplemented "Instruction MOVK not yet implemented."
	2999 NotImplemented "Instruction CMP not yet implemented."
	3000 Move X9, 0x4A3000
	3001 Move X9, [X9+2888]
	3002 Move W22, [X8+68]
	3003 Move W20, [X8+72]
	3004 Move X0, [X9]
	3005 Move X9, [X31+88]
	3006 Move X23, [X9]
	3007 Move W9, [X0+224]
	3008 Compare W9, 0
	3009 JumpIfNotEqual {3011}
	3010 Call 0x1C17DFC
	3011 Move X0, X23
	3012 Move W1, W22
	3013 Move W2, W20
	3014 Move X3, X31
	3015 Call TextGeneratorUtilities.HexCharsToColor, X0, X1, X2
	3016 Move X10, [X31+72]
	3017 Move W8, [X10+431]
	3018 Add X9, X10, 432
	3019 Move [X10+432], W0
	3020 Move X10, X0
	3021 ShiftRight X10, 24
	3022 And X10, X10, 0x7FFFFFFF
	3023 NotImplemented "Instruction CMP not yet implemented."
	3024 NotImplemented "Instruction CSEL not yet implemented."
	3025 Move [X9+3], W8
	3026 Move X8, [X31+32]
	3027 Compare X8, 0
	3028 JumpIfEqual {3637}
	3029 Move X9, [X31+32]
	3030 Move W8, 1
	3031 Move [X9+97], W8
	3032 Move X8, [X31+72]
	3033 Move W8, [X8+432]
	3034 Move X8, [X31+48]
	3035 Move W8, [X8+96]
	3036 Move TEMP, X8
	3037 And TEMP, TEMP, 2
	3038 Compare TEMP, 2
	3039 JumpIfEqual {629}
	3040 Move X8, 0x4A3000
	3041 Move X8, [X8+3392]
	3042 Move X19, [X31+72]
	3043 Move X1, [X8]
	3044 Add X0, X19, 616
	3045 Call TextProcessingStack`1<Int32>.Remove, X0
	3046 Move [X19+6564], W0
	3047 Add X0, X19, 296
	3048 Move W1, 2
	3049 Move X2, X31
	3050 Call FontStyleStack.Remove, X0, X1
	3051 And W31, W0, 255
	3052 Move X9, [X31+72]
	3053 Move W8, [X9+292]
	3054 And W8, W8, 0xFFFFFFFD
	3055 Move [X9+292], W8
	3056 Move W22, [X8+56]
	3057 Move W20, [X8+60]
	3058 Add X1, X31, 808
	3059 Move X2, X31
	3060 Call MaterialReferenceManager.TryGetFontAsset, X0, X1
	3061 Move X19, 0x435000
	3062 Move X19, [X19+1432]
	3063 Move X21, [X31+808]
	3064 Move X0, [X19]
	3065 Move W8, [X0+224]
	3066 Compare W8, 0
	3067 JumpIfNotEqual {3069}
	3068 Call 0x1C17DFC
	3069 Move X0, X21
	3070 Move X1, X31
	3071 Move X2, X31
	3072 Call Object.op_Equality, X0, X1
	3073 Move TEMP, X0
	3074 And TEMP, TEMP, 1
	3075 Compare TEMP, 1
	3076 JumpIfNotEqual {4016}
	3077 Move X0, [X19]
	3078 Move X21, [X31+808]
	3079 Move W8, [X0+224]
	3080 Compare W8, 0
	3081 JumpIfNotEqual {3083}
	3082 Call 0x1C17DFC
	3083 Move X0, X21
	3084 Move X1, X31
	3085 Move X2, X31
	3086 Call Object.op_Equality, X0, X1
	3087 Move TEMP, X0
	3088 And TEMP, TEMP, 1
	3089 Compare TEMP, 1
	3090 JumpIfNotEqual {3999}
	3091 Move X8, [X31+24]
	3092 Compare X8, 0
	3093 JumpIfEqual {3637}
	3094 Move X8, [X27]
	3095 Compare X8, 0
	3096 JumpIfEqual {3637}
	3097 Move W9, [X8+24]
	3098 Compare W9, 0
	3099 JumpIfEqual {4363}
	3100 Move X9, [X31+24]
	3101 Move W2, [X8+44]
	3102 Move W3, [X8+48]
	3103 Move X0, X31
	3104 Move X4, X31
	3105 Move X21, [X9+40]
	3106 Move X9, [X31+88]
	3107 Move X1, [X9]
	3108 Call String.CreateString, X0, X1, X2, X3
	3109 Move X1, X0
	3110 Move X0, X21
	3111 Move X2, X31
	3112 Call String.Concat, X0, X1
	3113 Move X8, 0x4A3000
	3114 Move X8, [X8+3264]
	3115 Move X1, [X8]
	3116 Call 0x2242FB8, X0
	3117 Move X21, X0
	3118 Move [X31+808], X0
	3119 Add X1, X31, 784
	3120 Move W0, W21
	3121 Move X2, X31
	3122 Call MaterialReferenceManager.TryGetSpriteAsset, X0, X1
	3123 Move TEMP, X0
	3124 And TEMP, TEMP, 1
	3125 Compare TEMP, 1
	3126 JumpIfEqual {3202}
	3127 Move X19, 0x435000
	3128 Move X19, [X19+1432]
	3129 Move X20, [X31+784]
	3130 Move X0, [X19]
	3131 Move W8, [X0+224]
	3132 Compare W8, 0
	3133 JumpIfNotEqual {3135}
	3134 Call 0x1C17DFC
	3135 Move X0, X20
	3136 Move X1, X31
	3137 Move X2, X31
	3138 Call Object.op_Equality, X0, X1
	3139 Move TEMP, X0
	3140 And TEMP, TEMP, 1
	3141 Compare TEMP, 1
	3142 JumpIfNotEqual {3184}
	3143 Move X0, [X19]
	3144 Move X20, [X31+784]
	3145 Move W8, [X0+224]
	3146 Compare W8, 0
	3147 JumpIfNotEqual {3149}
	3148 Call 0x1C17DFC
	3149 Move X0, X20
	3150 Move X1, X31
	3151 Move X2, X31
	3152 Call Object.op_Equality, X0, X1
	3153 Move TEMP, X0
	3154 And TEMP, TEMP, 1
	3155 Compare TEMP, 1
	3156 JumpIfNotEqual {3184}
	3157 Move X8, [X31+24]
	3158 Compare X8, 0
	3159 JumpIfEqual {3637}
	3160 Move X8, [X27]
	3161 Compare X8, 0
	3162 JumpIfEqual {3637}
	3163 Move W9, [X8+24]
	3164 Compare W9, 0
	3165 JumpIfEqual {4363}
	3166 Move X9, [X31+24]
	3167 Move W2, [X8+44]
	3168 Move W3, [X8+48]
	3169 Move X0, X31
	3170 Move X4, X31
	3171 Move X20, [X9+80]
	3172 Move X9, [X31+88]
	3173 Move X1, [X9]
	3174 Call String.CreateString, X0, X1, X2, X3
	3175 Move X1, X0
	3176 Move X0, X20
	3177 Move X2, X31
	3178 Call String.Concat, X0, X1
	3179 Move X8, 0x4A3000
	3180 Move X8, [X8+3272]
	3181 Move X1, [X8]
	3182 Call 0x2242FB8, X0
	3183 Move [X31+784], X0
	3184 Move X0, [X19]
	3185 Move X20, [X31+784]
	3186 Move W8, [X0+224]
	3187 Compare W8, 0
	3188 JumpIfNotEqual {3190}
	3189 Call 0x1C17DFC
	3190 Move X0, X20
	3191 Move X1, X31
	3192 Move X2, X31
	3193 Call Object.op_Equality, X0, X1
	3194 Move TEMP, X0
	3195 And TEMP, TEMP, 1
	3196 Compare TEMP, 1
	3197 JumpIfEqual {546}
	3198 Move X1, [X31+784]
	3199 Move W0, W21
	3200 Move X2, X31
	3201 Call MaterialReferenceManager.AddSpriteAsset, X0, X1
	3202 Move X8, [X31+784]
	3203 Move X9, [X31+72]
	3204 Move [X9+224], X8
	3205 Move W9, 0x89CB
	3206 NotImplemented "Instruction MOVK not yet implemented."
	3207 NotImplemented "Instruction CMP not yet implemented."
	3208 Move W9, 0x989B
	3209 NotImplemented "Instruction MOVK not yet implemented."
	3210 NotImplemented "Instruction CMP not yet implemented."
	3211 Move X9, [X31+72]
	3212 Move W8, 513
	3213 Move W1, 513
	3214 NotImplemented "Instruction CMP not yet implemented."
	3215 NotImplemented "Instruction CMP not yet implemented."
	3216 Move X8, 0x4A3000
	3217 Move X8, [X8+2888]
	3218 Move X0, [X8]
	3219 Move W8, [X0+224]
	3220 Compare W8, 0
	3221 JumpIfNotEqual {3223}
	3222 Call 0x1C17DFC
	3223 Move W1, 11
	3224 Move X8, 0x4A3000
	3225 Move X8, [X8+3360]
	3226 Move X0, X20
	3227 Move X1, [X8]
	3228 Call TextProcessingStack`1<Int32Enum>.Peek, X0
	3229 Move X8, [X31+72]
	3230 Move [X8+308], W0
	3231 Add X1, X31, 800
	3232 Move W0, W20
	3233 Move X2, X31
	3234 Call MaterialReferenceManager.TryGetMaterial, X0, X1
	3235 Move TEMP, X0
	3236 And TEMP, TEMP, 1
	3237 Compare TEMP, 1
	3238 JumpIfNotEqual {3710}
	3239 Move X19, [X31+72]
	3240 Move X0, [X31+800]
	3241 Move W8, 0x15B8
	3242 Move X4, X31
	3243 Move X1, [X19+104]
	3244 Move X3, [X19+6624]
	3245 Add X2, X19, X8
	3246 Move [X19+112], X0
	3247 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	3248 Move X9, [X19+5560]
	3249 Move [X19+120], W0
	3250 Compare X9, 0
	3251 JumpIfEqual {3637}
	3252 Move W8, [X9+24]
	3253 NotImplemented "Instruction CMP not yet implemented."
	3254 Move W10, 56
	3255 NotImplemented "Instruction SMADDL not yet implemented."
	3256 Move X10, 0x4A3000
	3257 Move X8, [X31+72]
	3258 Move X10, [X10+3304]
	3259 Move V2, [X9+48]
	3260 Move V0, [X9+64]
	3261 Move X11, [X9+80]
	3262 Move V1, [X9+2]
	3263 Move X2, [X10]
	3264 Add X8, X8, 128
	3265 Move [X31+208], X11
	3266 Move [X31+176], V2
	3267 Move [X31+184], V0
	3268 Move [X31+10], V1
	3269 Move X9, [X31+72]
	3270 Move W8, [X9+428]
	3271 Move [X9+436], W8
	3272 Move X9, 0x4A3000
	3273 Move X9, [X9+3312]
	3274 Move X2, [X9]
	3275 Move X9, [X31+72]
	3276 Add X0, X9, 504
	3277 Move X8, [X31+72]
	3278 Move X0, [X8+104]
	3279 Compare X0, 0
	3280 JumpIfEqual {3637}
	3281 Move X1, X31
	3282 Call FontAsset.get_italicStyleSlant, X0
	3283 Move X8, [X31+72]
	3284 And W1, W0, 255
	3285 Move [X8+6564], W1
	3286 Move X8, 0x4A3000
	3287 Move X8, [X8+3296]
	3288 Move X2, [X8]
	3289 Move X8, [X31+72]
	3290 Add X0, X8, 616
	3291 Call TextProcessingStack`1<Int32>.Add, X0, X1
	3292 Move X9, [X31+72]
	3293 Move W8, [X9+428]
	3294 Move [X9+432], W8
	3295 Move X9, 0x4A3000
	3296 Move X9, [X9+3312]
	3297 Move X2, [X9]
	3298 Move X9, [X31+72]
	3299 Add X0, X9, 472
	3300 Move W1, W8
	3301 NotImplemented "Instruction CMP not yet implemented."
	3302 NotImplemented "Instruction CMP not yet implemented."
	3303 NotImplemented "Instruction CMP not yet implemented."
	3304 Move X8, [X31+24]
	3305 Compare X8, 0
	3306 JumpIfEqual {3637}
	3307 Move X0, [X19]
	3308 Move X9, [X31+24]
	3309 Move W8, [X0+224]
	3310 Move X20, [X9+72]
	3311 Compare W8, 0
	3312 JumpIfNotEqual {3314}
	3313 Call 0x1C17DFC
	3314 Move X0, X20
	3315 Move X1, X31
	3316 Move X2, X31
	3317 Call Object.op_Inequality, X0, X1
	3318 Move TEMP, X0
	3319 And TEMP, TEMP, 1
	3320 Compare TEMP, 1
	3321 JumpIfNotEqual {4102}
	3322 Move X8, [X31+24]
	3323 Move X20, [X8+72]
	3324 Move X8, [X31+72]
	3325 Move [X8+224], X20
	3326 Move X0, [X19]
	3327 Move W8, [X0+224]
	3328 Compare W8, 0
	3329 JumpIfNotEqual {3331}
	3330 Call 0x1C17DFC
	3331 Move X0, X20
	3332 Move X1, X31
	3333 Move X2, X31
	3334 Call Object.op_Equality, X0, X1
	3335 Move TEMP, X0
	3336 And TEMP, TEMP, 1
	3337 Compare TEMP, 1
	3338 JumpIfEqual {546}
	3339 Move X8, [X27]
	3340 Compare X8, 0
	3341 JumpIfEqual {3637}
	3342 Move W9, [X8+24]
	3343 Compare W9, 0
	3344 JumpIfEqual {4363}
	3345 Move W9, [X8+40]
	3346 NotImplemented "Instruction CMP not yet implemented."
	3347 Move X9, 0x4A3000
	3348 Move X9, [X9+2888]
	3349 Move W21, [X8+44]
	3350 Move W20, [X8+48]
	3351 Move X0, [X9]
	3352 Move X9, [X31+88]
	3353 Move X22, [X9]
	3354 Move W9, [X0+224]
	3355 Compare W9, 0
	3356 JumpIfNotEqual {3358}
	3357 Call 0x1C17DFC
	3358 Move X0, X22
	3359 Move W1, W21
	3360 Move W2, W20
	3361 Move X3, X31
	3362 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	3363 Move W8, 0x7F800000
	3364 Move S1, W8
	3365 NotImplemented "Instruction FCVTZS not yet implemented."
	3366 NotImplemented "Instruction FCMP not yet implemented."
	3367 Move W8, 0x80000000
	3368 NotImplemented "Instruction CSEL not yet implemented."
	3369 Add W31, W19, 0x8000
	3370 Move X8, [X31+72]
	3371 Move X0, [X8+224]
	3372 Compare X0, 0
	3373 JumpIfEqual {3637}
	3374 Move X1, X31
	3375 Call SpriteAsset.get_spriteCharacterTable, X0
	3376 Compare X0, 0
	3377 JumpIfEqual {3637}
	3378 Move W8, [X0+24]
	3379 Subtract W8, W8, 1
	3380 NotImplemented "Instruction CMP not yet implemented."
	3381 Move X8, [X31+72]
	3382 Move [X8+5500], W19
	3383 Move S0, 1
	3384 Move S1, 1
	3385 Move S2, 1
	3386 Move S3, 1
	3387 Move X0, X31
	3388 Call 0x1E44664
	3389 Move X8, [X31+72]
	3390 Move X9, [X31+40]
	3391 Move [X8+5504], W0
	3392 Move [X9+1152], W31
	3393 Move X8, [X8+6608]
	3394 Compare X8, 0
	3395 JumpIfEqual {3637}
	3396 Move X10, [X31+72]
	3397 Move W9, 0x19D8
	3398 Move W25, 0xE0E7
	3399 Move W26, 0x2C87
	3400 Move W28, 0x7DE9
	3401 Move W29, 0xD74B
	3402 Move X19, X31
	3403 Move W24, W31
	3404 NotImplemented "Instruction MOVK not yet implemented."
	3405 NotImplemented "Instruction MOVK not yet implemented."
	3406 NotImplemented "Instruction MOVK not yet implemented."
	3407 Add X20, X10, X9
	3408 NotImplemented "Instruction MOVK not yet implemented."
	3409 Move W9, [X8+24]
	3410 NotImplemented "Instruction CMP not yet implemented."
	3411 NotImplemented "Instruction CMP not yet implemented."
	3412 Add X10, X8, X19
	3413 Move W10, [X10+32]
	3414 Compare W10, 0
	3415 JumpIfEqual {3556}
	3416 NotImplemented "Instruction CMP not yet implemented."
	3417 Move [X31+668], W31
	3418 NotImplemented "Instruction CMP not yet implemented."
	3419 Move W11, 0x381D
	3420 NotImplemented "Instruction MOVK not yet implemented."
	3421 NotImplemented "Instruction CMP not yet implemented."
	3422 Move W11, 0xD3FE
	3423 NotImplemented "Instruction MOVK not yet implemented."
	3424 NotImplemented "Instruction CMP not yet implemented."
	3425 NotImplemented "Instruction CMP not yet implemented."
	3426 Move X9, 0x4A3000
	3427 Move X9, [X9+2888]
	3428 Move W22, [X8+68]
	3429 Move W21, [X8+72]
	3430 Move X0, [X9]
	3431 Move X9, [X31+88]
	3432 Move X23, [X9]
	3433 Move W9, [X0+224]
	3434 Compare W9, 0
	3435 JumpIfNotEqual {3437}
	3436 Call 0x1C17DFC
	3437 Move X0, X23
	3438 Move W1, W22
	3439 Move W2, W21
	3440 Move X3, X31
	3441 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	3442 Move W9, 0x7F800000
	3443 Move S1, W9
	3444 NotImplemented "Instruction FCVTZS not yet implemented."
	3445 NotImplemented "Instruction FCMP not yet implemented."
	3446 Move W9, 0x80000000
	3447 NotImplemented "Instruction CSEL not yet implemented."
	3448 Add W31, W21, 0x8000
	3449 Move [X31+668], W21
	3450 Move X8, [X31+72]
	3451 Move X0, [X8+224]
	3452 Compare X0, 0
	3453 JumpIfEqual {3637}
	3454 Move X1, X31
	3455 Call SpriteAsset.get_spriteCharacterTable, X0
	3456 Compare X0, 0
	3457 JumpIfEqual {3637}
	3458 Move W8, [X0+24]
	3459 Subtract W8, W8, 1
	3460 NotImplemented "Instruction CMP not yet implemented."
	3461 Move W8, [X31+668]
	3462 NotImplemented "Instruction CMP not yet implemented."
	3463 NotImplemented "Instruction CMP not yet implemented."
	3464 NotImplemented "Instruction CMP not yet implemented."
	3465 Move X21, [X31+72]
	3466 Add X8, X8, X19
	3467 Move W1, [X8+36]
	3468 Add X3, X31, 668
	3469 Move X0, [X21+224]
	3470 Move W2, 1
	3471 Move X4, X31
	3472 Move X5, X31
	3473 Call SpriteAsset.SearchForSpriteByHashCode, X0, X1, X2, X3, X4
	3474 Move [X21+224], X0
	3475 Move W8, [X31+668]
	3476 Add W31, W8, 1
	3477 Move X9, 0x4A3000
	3478 Move X9, [X9+2888]
	3479 Add X8, X8, X19
	3480 Move W23, [X8+44]
	3481 Move W21, [X8+48]
	3482 Move X0, [X9]
	3483 Move X9, [X31+88]
	3484 Move X22, [X9]
	3485 Move W9, [X0+224]
	3486 Compare W9, 0
	3487 JumpIfNotEqual {3489}
	3488 Call 0x1C17DFC
	3489 Move X0, X22
	3490 Move W1, W23
	3491 Move W2, W21
	3492 Move X3, X31
	3493 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	3494 Move X9, [X31+40]
	3495 NotImplemented "Instruction FCMP not yet implemented."
	3496 NotImplemented "Instruction CSET not yet implemented."
	3497 Move [X9+1152], W8
	3498 Move X9, 0x4A3000
	3499 Move X9, [X9+2888]
	3500 Add X8, X8, X19
	3501 Move W23, [X8+44]
	3502 Move W21, [X8+48]
	3503 Move X0, [X9]
	3504 Move X9, [X31+88]
	3505 Move X22, [X9]
	3506 Move W9, [X0+224]
	3507 Compare W9, 0
	3508 JumpIfNotEqual {3510}
	3509 Call 0x1C17DFC
	3510 Move X0, X22
	3511 Move W1, W23
	3512 Move W2, W21
	3513 Move X3, X31
	3514 Call TextGeneratorUtilities.HexCharsToColor, X0, X1, X2
	3515 Move X8, [X31+72]
	3516 Move [X8+5504], W0
	3517 Move X9, 0x4A3000
	3518 Move X9, [X9+2888]
	3519 Add X8, X8, X19
	3520 Move W23, [X8+44]
	3521 Move W21, [X8+48]
	3522 Move X0, [X9]
	3523 Move X9, [X31+88]
	3524 Move X22, [X9]
	3525 Move W9, [X0+224]
	3526 Compare W9, 0
	3527 JumpIfNotEqual {3529}
	3528 Call 0x1C17DFC
	3529 Move X0, X22
	3530 Move W1, W23
	3531 Move W2, W21
	3532 Move X3, X20
	3533 Move X4, X31
	3534 Call TextGeneratorUtilities.GetAttributeParameters, X0, X1, X2, X3
	3535 NotImplemented "Instruction CMP not yet implemented."
	3536 Move X8, [X20]
	3537 Compare X8, 0
	3538 JumpIfEqual {3637}
	3539 Move W9, [X8+24]
	3540 Compare W9, 0
	3541 JumpIfEqual {4363}
	3542 Move V0, [X8+32]
	3543 Move W8, 0x7F800000
	3544 Move S1, W8
	3545 Move W9, 0x80000000
	3546 NotImplemented "Instruction FCVTZS not yet implemented."
	3547 NotImplemented "Instruction FCMP not yet implemented."
	3548 NotImplemented "Instruction CSEL not yet implemented."
	3549 Move X9, [X31+72]
	3550 Move [X9+5500], W8
	3551 Move X8, [X27]
	3552 Add W24, W24, 1
	3553 Add X19, X19, 24
	3554 Compare X8, 0
	3555 JumpIfNotEqual {3409}
	3556 Move X8, [X31+72]
	3557 Move W8, [X8+5500]
	3558 Add W31, W8, 1
	3559 Move X8, [X31+72]
	3560 Move X1, [X8+224]
	3561 Compare X1, 0
	3562 JumpIfEqual {3637}
	3563 Move X19, [X31+72]
	3564 Move X0, [X1+40]
	3565 Move W8, 0x15B8
	3566 Move X4, X31
	3567 Move X3, [X19+6624]
	3568 Add X2, X19, X8
	3569 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	3570 Move X9, [X31+40]
	3571 Move W8, 2
	3572 Move [X19+120], W0
	3573 Move [X9], W8
	3574 Move X21, [X31+792]
	3575 Move X0, [X19]
	3576 Move W8, [X0+224]
	3577 Compare W8, 0
	3578 JumpIfNotEqual {3580}
	3579 Call 0x1C17DFC
	3580 Move X0, X21
	3581 Move X1, X31
	3582 Move X2, X31
	3583 Call Object.op_Equality, X0, X1
	3584 Move TEMP, X0
	3585 And TEMP, TEMP, 1
	3586 Compare TEMP, 1
	3587 JumpIfEqual {546}
	3588 Move X1, [X31+792]
	3589 Move W0, W20
	3590 Move X2, X31
	3591 Call MaterialReferenceManager.AddColorGradientPreset, X0, X1
	3592 Move X11, [X31+72]
	3593 Move X9, [X31+792]
	3594 Move X12, [X31+88]
	3595 Move X8, [X11+6608]
	3596 Move [X11+648], X9
	3597 Move [X11+696], W31
	3598 Compare X8, 0
	3599 JumpIfEqual {3637}
	3600 Move W24, 0x2C87
	3601 Move X19, X31
	3602 Move W23, 1
	3603 NotImplemented "Instruction MOVK not yet implemented."
	3604 Move W9, [X8+24]
	3605 NotImplemented "Instruction CMP not yet implemented."
	3606 NotImplemented "Instruction CMP not yet implemented."
	3607 Add X9, X8, X19
	3608 Move W10, [X9+56]
	3609 NotImplemented "Instruction CMP not yet implemented."
	3610 Compare W10, 0
	3611 JumpIfNotEqual {3633}
	3612 Move X8, 0x4A3000
	3613 Move X8, [X8+2888]
	3614 Move X22, [X12]
	3615 Move W21, [X9+68]
	3616 Move W20, [X9+72]
	3617 Move X0, [X8]
	3618 Move W8, [X0+224]
	3619 Compare W8, 0
	3620 JumpIfNotEqual {3622}
	3621 Call 0x1C17DFC
	3622 Move X0, X22
	3623 Move W1, W21
	3624 Move W2, W20
	3625 Move X3, X31
	3626 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	3627 Move X11, [X31+72]
	3628 Move X12, [X31+88]
	3629 NotImplemented "Instruction FCMP not yet implemented."
	3630 NotImplemented "Instruction CSET not yet implemented."
	3631 Move X8, [X11+6608]
	3632 Move [X11+696], W9
	3633 Add W23, W23, 1
	3634 Add X19, X19, 24
	3635 Compare X8, 0
	3636 JumpIfNotEqual {3604}
	3637 Call 0x1C17F20
	3638 Move X8, 0x4A3000
	3639 Move X1, [X11+648]
	3640 Move X8, [X8+3344]
	3641 Add X0, X11, 656
	3642 Move X2, [X8]
	3643 Call TextProcessingStack`1<Object>.Add, X0, X1
	3644 Move X9, 0x4A3000
	3645 Move X9, [X9+2888]
	3646 Move W22, [X8+44]
	3647 Move W21, [X8+48]
	3648 Move X0, [X9]
	3649 Move W9, [X0+224]
	3650 Compare W9, 0
	3651 JumpIfNotEqual {3653}
	3652 Call 0x1C17DFC
	3653 Move X0, X25
	3654 Move W1, W22
	3655 Move W2, W21
	3656 Move X3, X31
	3657 Call TextGeneratorUtilities.ConvertToFloat, X0, X1, X2
	3658 Move W8, 0xC7000000
	3659 Move S1, W8
	3660 NotImplemented "Instruction FCMP not yet implemented."
	3661 Compare W19, 0
	3662 JumpIfEqual {4371}
	3663 NotImplemented "Instruction CMP not yet implemented."
	3664 NotImplemented "Instruction CMP not yet implemented."
	3665 Move X8, [X31+72]
	3666 Move S2, -1
	3667 Move S4, W31
	3668 Move V1, [X8+860]
	3669 Move V3, [X8+88]
	3670 Move W8, 0x42C80000
	3671 NotImplemented "Instruction FCMP not yet implemented."
	3672 NotImplemented "Instruction FCSEL not yet implemented."
	3673 Subtract S1, S3, S1
	3674 Multiply S0, S0, S1
	3675 Move S1, W8
	3676 NotImplemented "Instruction FDIV not yet implemented."
	3677 NotImplemented "Instruction CMP not yet implemented."
	3678 NotImplemented "Instruction CMP not yet implemented."
	3679 Move X8, 0x4A3000
	3680 Move X8, [X8+2888]
	3681 Move X0, [X8]
	3682 Move W8, [X0+224]
	3683 Compare W8, 0
	3684 JumpIfNotEqual {3686}
	3685 Call 0x1C17DFC
	3686 Move W1, 13
	3687 Move X8, [X31+48]
	3688 Move X9, -52248576
	3689 Move V1, [X9+188]
	3690 Move S2, 1
	3691 Move W8, [X8+189]
	3692 NotImplemented "Instruction CMP not yet implemented."
	3693 Move X8, [X31+72]
	3694 NotImplemented "Instruction FCSEL not yet implemented."
	3695 Multiply S0, S0, S1
	3696 Move [X8+860], S0
	3697 Move X8, [X31+48]
	3698 Move X10, [X31+72]
	3699 Move X9, -52248576
	3700 Move V2, [X9+188]
	3701 Move W8, [X8+189]
	3702 Move V1, [X10+244]
	3703 Move S3, 1
	3704 Move V4, [X10+756]
	3705 NotImplemented "Instruction CMP not yet implemented."
	3706 NotImplemented "Instruction FCSEL not yet implemented."
	3707 Multiply S0, S0, S2
	3708 Multiply S0, S1, S0
	3709 Add S0, S4, S0
	3710 Move X8, [X31+24]
	3711 Compare X8, 0
	3712 JumpIfEqual {3637}
	3713 Move X8, [X27]
	3714 Compare X8, 0
	3715 JumpIfEqual {3637}
	3716 Move W9, [X8+24]
	3717 Compare W9, 0
	3718 JumpIfEqual {4363}
	3719 Move X9, [X31+24]
	3720 Move W2, [X8+44]
	3721 Move W3, [X8+48]
	3722 Move X0, X31
	3723 Move X4, X31
	3724 Move X21, [X9+40]
	3725 Move X9, [X31+88]
	3726 Move X1, [X9]
	3727 Call String.CreateString, X0, X1, X2, X3
	3728 Move X1, X0
	3729 Move X0, X21
	3730 Move X2, X31
	3731 Call String.Concat, X0, X1
	3732 Move X8, 0x48F000
	3733 Move X8, [X8+2776]
	3734 Move X1, [X8]
	3735 Call 0x2242FB8, X0
	3736 Move X8, 0x435000
	3737 Move X8, [X8+1432]
	3738 Move [X31+800], X0
	3739 Move X21, X0
	3740 Move X8, [X8]
	3741 Move W9, [X8+224]
	3742 Compare W9, 0
	3743 JumpIfNotEqual {3746}
	3744 Move X0, X8
	3745 Call 0x1C17DFC
	3746 Move X0, X21
	3747 Move X1, X31
	3748 Move X2, X31
	3749 Call Object.op_Equality, X0, X1
	3750 Move TEMP, X0
	3751 And TEMP, TEMP, 1
	3752 Compare TEMP, 1
	3753 JumpIfEqual {546}
	3754 Move X1, [X31+800]
	3755 Move W0, W20
	3756 Move X2, X31
	3757 Call MaterialReferenceManager.AddFontMaterial, X0, X1
	3758 Move X19, [X31+72]
	3759 Move X0, [X31+800]
	3760 Move W8, 0x15B8
	3761 Move X4, X31
	3762 Move X1, [X19+104]
	3763 Move X3, [X19+6624]
	3764 Add X2, X19, X8
	3765 Move [X19+112], X0
	3766 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	3767 Move X9, [X19+5560]
	3768 Move [X19+120], W0
	3769 Compare X9, 0
	3770 JumpIfEqual {3637}
	3771 Move W8, [X9+24]
	3772 NotImplemented "Instruction CMP not yet implemented."
	3773 Move W10, 56
	3774 NotImplemented "Instruction SMADDL not yet implemented."
	3775 Move X10, 0x4A3000
	3776 Move X8, [X31+72]
	3777 Move X10, [X10+3304]
	3778 Move V2, [X9+48]
	3779 Move V0, [X9+64]
	3780 Move X11, [X9+80]
	3781 Move V1, [X9+2]
	3782 Move X2, [X10]
	3783 Add X8, X8, 128
	3784 Move [X31+144], X11
	3785 Move [X31+112], V2
	3786 Move [X31+120], V0
	3787 Move [X31+6], V1
	3788 Move [X31+544], V1
	3789 Move [X31+552], V2
	3790 Move [X31+36], V0
	3791 Move [X31+592], X11
	3792 Add X1, X31, 544
	3793 Move X0, X8
	3794 Call TextProcessingStack`1<MaterialReference>.Add, X0, X1
	3795 Move X9, [X31+72]
	3796 Move W8, 514
	3797 Move W1, 514
	3798 Move X8, [X31+48]
	3799 Move X9, -52248576
	3800 Move V1, [X9+188]
	3801 Move X9, [X31+72]
	3802 Move W8, [X8+189]
	3803 Move S3, 1
	3804 Move V2, [X9+244]
	3805 NotImplemented "Instruction CMP not yet implemented."
	3806 NotImplemented "Instruction FCSEL not yet implemented."
	3807 Multiply S0, S0, S1
	3808 Multiply S0, S2, S0
	3809 Move [X9+384], S0
	3810 Move X8, [X31+48]
	3811 Move X9, -52248576
	3812 Move V1, [X9+188]
	3813 Move S2, 1
	3814 Move W8, [X8+189]
	3815 NotImplemented "Instruction CMP not yet implemented."
	3816 Move X8, [X31+72]
	3817 NotImplemented "Instruction FCSEL not yet implemented."
	3818 Multiply S0, S0, S1
	3819 Move [X8+760], S0
	3820 Move X8, [X31+48]
	3821 Move X9, -52248576
	3822 Move V1, [X9+188]
	3823 Move X9, [X31+72]
	3824 Move W8, [X8+189]
	3825 Move S3, 1
	3826 Move V2, [X9+244]
	3827 NotImplemented "Instruction CMP not yet implemented."
	3828 NotImplemented "Instruction FCSEL not yet implemented."
	3829 Multiply S0, S0, S1
	3830 Multiply S0, S2, S0
	3831 Move [X9+760], S0
	3832 Move X8, [X31+72]
	3833 Move V0, [X8+760]
	3834 Move X8, [X31+72]
	3835 Move V1, [X8+756]
	3836 Add S0, S1, S0
	3837 Move [X8+756], S0
	3838 Move X9, [X31+72]
	3839 Move W8, 0x42C80000
	3840 Move S2, W8
	3841 Move V1, [X9+236]
	3842 Multiply S0, S0, S1
	3843 NotImplemented "Instruction FDIV not yet implemented."
	3844 Move X9, [X31+72]
	3845 Move V1, [X9+236]
	3846 Multiply S0, S0, S1
	3847 Move X8, [X31+48]
	3848 Move X9, -52248576
	3849 Move V1, [X9+188]
	3850 Move S2, 1
	3851 Move W8, [X8+189]
	3852 NotImplemented "Instruction CMP not yet implemented."
	3853 NotImplemented "Instruction FCSEL not yet implemented."
	3854 Multiply S0, S0, S1
	3855 Move X8, [X31+48]
	3856 Move X9, -52248576
	3857 Move V1, [X9+188]
	3858 Move X9, [X31+72]
	3859 Move W8, [X8+189]
	3860 Move S3, 1
	3861 Move V2, [X9+244]
	3862 NotImplemented "Instruction CMP not yet implemented."
	3863 NotImplemented "Instruction FCSEL not yet implemented."
	3864 Multiply S0, S0, S1
	3865 Multiply S0, S2, S0
	3866 Move X8, [X31+72]
	3867 Move V0, [X8+856]
	3868 Move X8, [X31+72]
	3869 NotImplemented "Instruction FCMP not yet implemented."
	3870 Move S1, W31
	3871 NotImplemented "Instruction FCSEL not yet implemented."
	3872 Move X8, [X31+48]
	3873 Move X9, -52248576
	3874 Move V1, [X9+188]
	3875 Move S2, 1
	3876 Move W8, [X8+189]
	3877 NotImplemented "Instruction CMP not yet implemented."
	3878 Move X8, [X31+72]
	3879 NotImplemented "Instruction FCSEL not yet implemented."
	3880 Multiply S0, S0, S1
	3881 Move [X8+748], S0
	3882 NotImplemented "Instruction CMP not yet implemented."
	3883 NotImplemented "Instruction CMP not yet implemented."
	3884 Move X8, [X31+72]
	3885 Move X0, [X8+104]
	3886 Compare X0, 0
	3887 JumpIfEqual {3637}
	3888 Move X19, [X31+72]
	3889 Add X8, X31, 544
	3890 Move X1, X31
	3891 Move V9, [X19+244]
	3892 Call FontAsset.get_faceInfo, X0
	3893 Add X0, X31, 672
	3894 Add X1, X31, 544
	3895 Move W2, 96
	3896 Call 0x3EB2AC0
	3897 Add X0, X31, 672
	3898 Move X1, X31
	3899 Call FaceInfo.get_pointSize, X0
	3900 Move X9, [X19+104]
	3901 Compare X9, 0
	3902 JumpIfEqual {3637}
	3903 Move W21, W0
	3904 Add X8, X31, 544
	3905 Move X0, X9
	3906 Move X1, X31
	3907 Call FontAsset.get_faceInfo, X0
	3908 Add X0, X31, 672
	3909 Add X1, X31, 544
	3910 Move W2, 96
	3911 Call 0x3EB2AC0
	3912 Add X0, X31, 672
	3913 Move X1, X31
	3914 Call FaceInfo.get_scale, X0
	3915 Move X8, [X31+48]
	3916 Move X0, [X8+64]
	3917 Compare X0, 0
	3918 JumpIfEqual {3637}
	3919 Move X8, [X31+48]
	3920 Move X9, -52248576
	3921 Move V2, [X9+188]
	3922 NotImplemented "Instruction SCVTF not yet implemented."
	3923 Move W8, [X8+189]
	3924 NotImplemented "Instruction FDIV not yet implemented."
	3925 Multiply S0, S1, S0
	3926 Move S1, 1
	3927 NotImplemented "Instruction CMP not yet implemented."
	3928 NotImplemented "Instruction FCSEL not yet implemented."
	3929 Add X8, X31, 544
	3930 Move X1, X31
	3931 Multiply S9, S0, S1
	3932 Call FontAsset.get_faceInfo, X0
	3933 Add X0, X31, 672
	3934 Add X1, X31, 544
	3935 Move W2, 96
	3936 Call 0x3EB2AC0
	3937 Add X0, X31, 672
	3938 Move X1, X31
	3939 Call FaceInfo.get_lineHeight, X0
	3940 Move W8, 0x42C80000
	3941 Multiply S0, S8, S0
	3942 Move S1, W8
	3943 NotImplemented "Instruction FDIV not yet implemented."
	3944 Multiply S0, S9, S0
	3945 Move X8, [X31+72]
	3946 Move [X8+740], S0
	3947 Move X8, [X31+48]
	3948 Move X9, -52248576
	3949 Move V0, [X9+188]
	3950 Move X9, [X31+72]
	3951 Move W8, [X8+189]
	3952 Move S2, 1
	3953 Move V1, [X9+244]
	3954 NotImplemented "Instruction CMP not yet implemented."
	3955 NotImplemented "Instruction FCSEL not yet implemented."
	3956 Multiply S0, S8, S0
	3957 Multiply S0, S1, S0
	3958 Move [X9+740], S0
	3959 Move X9, [X31+72]
	3960 Move W8, 0x42C80000
	3961 Move S2, W8
	3962 Move V1, [X9+88]
	3963 Multiply S0, S0, S1
	3964 NotImplemented "Instruction FDIV not yet implemented."
	3965 Move [X9+756], S0
	3966 Move X8, [X31+48]
	3967 Move X10, [X31+72]
	3968 Move X9, -52248576
	3969 Move V2, [X9+188]
	3970 Move W8, [X8+189]
	3971 Move V1, [X10+244]
	3972 Move S3, 1
	3973 NotImplemented "Instruction CMP not yet implemented."
	3974 Multiply S0, S0, S1
	3975 NotImplemented "Instruction FCSEL not yet implemented."
	3976 Multiply S0, S0, S1
	3977 Move [X10+756], S0
	3978 NotImplemented "Instruction CMP not yet implemented."
	3979 NotImplemented "Instruction CMP not yet implemented."
	3980 Move X9, [X31+72]
	3981 Move [X9+308], W8
	3982 Move X9, [X31+72]
	3983 Move X8, 0x4A3000
	3984 Move W1, [X9+308]
	3985 Move X8, [X8+3320]
	3986 Add X0, X9, 312
	3987 Move X9, [X31+72]
	3988 Move W8, 528
	3989 Move W1, 528
	3990 Move X9, [X31+72]
	3991 Move W8, 516
	3992 Move W1, 516
	3993 Move [X9+344], W8
	3994 Move X8, 0x4A3000
	3995 Move X8, [X8+3328]
	3996 Add X0, X9, 352
	3997 Move X2, [X8]
	3998 Call TextProcessingStack`1<Int32Enum>.Add, X0, X1
	3999 Move X21, [X31+808]
	4000 Move X0, [X19]
	4001 Move W8, [X0+224]
	4002 Compare W8, 0
	4003 JumpIfNotEqual {4005}
	4004 Call 0x1C17DFC
	4005 Move X0, X21
	4006 Move X1, X31
	4007 Move X2, X31
	4008 Call Object.op_Equality, X0, X1
	4009 Move TEMP, X0
	4010 And TEMP, TEMP, 1
	4011 Compare TEMP, 1
	4012 JumpIfEqual {546}
	4013 Move X0, [X31+808]
	4014 Move X1, X31
	4015 Call MaterialReferenceManager.AddFontAsset, X0
	4016 Or W8, W20, W22
	4017 Compare W8, 0
	4018 JumpIfEqual {4060}
	4019 Move W8, 203
	4020 NotImplemented "Instruction MOVK not yet implemented."
	4021 NotImplemented "Instruction CMP not yet implemented."
	4022 Add X1, X31, 800
	4023 Move W0, W20
	4024 Move X2, X31
	4025 Call MaterialReferenceManager.TryGetMaterial, X0, X1
	4026 Move TEMP, X0
	4027 And TEMP, TEMP, 1
	4028 Compare TEMP, 1
	4029 JumpIfNotEqual {4288}
	4030 Move X0, [X31+800]
	4031 Move X19, [X31+72]
	4032 Move W8, 0x15B8
	4033 Move X4, X31
	4034 Move [X19+112], X0
	4035 Move X1, [X31+808]
	4036 Move X3, [X19+6624]
	4037 Add X2, X19, X8
	4038 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	4039 Move X9, [X19+5560]
	4040 Move [X19+120], W0
	4041 Compare X9, 0
	4042 JumpIfEqual {3637}
	4043 Move W8, [X9+24]
	4044 NotImplemented "Instruction CMP not yet implemented."
	4045 Move W10, 56
	4046 NotImplemented "Instruction SMADDL not yet implemented."
	4047 Move X10, 0x4A2000
	4048 Move X8, [X31+72]
	4049 Move X10, [X10+3304]
	4050 Move V2, [X9+48]
	4051 Move V0, [X9+64]
	4052 Move X11, [X9+80]
	4053 Move V1, [X9+2]
	4054 Move X2, [X10]
	4055 Add X8, X8, 128
	4056 Move [X31+400], X11
	4057 Move [X31+368], V2
	4058 Move [X31+376], V0
	4059 Move [X31+22], V1
	4060 Move X1, [X31+808]
	4061 Compare X1, 0
	4062 JumpIfEqual {3637}
	4063 Move X19, [X31+72]
	4064 Move X0, [X1+40]
	4065 Move W8, 0x15B8
	4066 Move X4, X31
	4067 Move X3, [X19+6624]
	4068 Add X2, X19, X8
	4069 Move [X19+112], X0
	4070 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	4071 Move X9, [X19+5560]
	4072 Move [X19+120], W0
	4073 Compare X9, 0
	4074 JumpIfEqual {3637}
	4075 Move W8, [X9+24]
	4076 NotImplemented "Instruction CMP not yet implemented."
	4077 Move W10, 56
	4078 NotImplemented "Instruction SMADDL not yet implemented."
	4079 Move X10, 0x4A2000
	4080 Move X8, [X31+72]
	4081 Move X10, [X10+3304]
	4082 Move V2, [X9+48]
	4083 Move V0, [X9+64]
	4084 Move X11, [X9+80]
	4085 Move V1, [X9+2]
	4086 Move X2, [X10]
	4087 Add X8, X8, 128
	4088 Move [X31+464], X11
	4089 Move [X31+432], V2
	4090 Move [X31+440], V0
	4091 Move [X31+26], V1
	4092 Add X1, X31, 544
	4093 Move X0, X8
	4094 Move [X31+544], V1
	4095 Move [X31+552], V2
	4096 Move [X31+36], V0
	4097 Move [X31+592], X11
	4098 Call TextProcessingStack`1<MaterialReference>.Add, X0, X1
	4099 Move X8, [X31+808]
	4100 Move X9, [X31+72]
	4101 Move [X9+104], X8
	4102 Move X0, [X19]
	4103 Move X9, [X31+72]
	4104 Move W8, [X0+224]
	4105 Move X20, [X9+6640]
	4106 Compare W8, 0
	4107 JumpIfNotEqual {4109}
	4108 Call 0x1C17DFC
	4109 Move X0, X20
	4110 Move X1, X31
	4111 Move X2, X31
	4112 Call Object.op_Inequality, X0, X1
	4113 Move TEMP, X0
	4114 And TEMP, TEMP, 1
	4115 Compare TEMP, 1
	4116 JumpIfNotEqual {4244}
	4117 Move X8, [X31+72]
	4118 Move X20, [X8+6640]
	4119 NotImplemented "Instruction CMP not yet implemented."
	4120 NotImplemented "Instruction CMP not yet implemented."
	4121 Move X8, 0x4A2000
	4122 Move X8, [X8+2888]
	4123 Move X0, [X8]
	4124 Move W8, [X0+224]
	4125 Compare W8, 0
	4126 JumpIfNotEqual {4128}
	4127 Call 0x1C17DFC
	4128 Move W1, 15
	4129 Move X0, X25
	4130 Move X2, X31
	4131 Call TextGeneratorUtilities.HexCharsToColor, X0, X1
	4132 Move X9, [X31+72]
	4133 Move X8, 0x4A2000
	4134 Move [X9+428], W0
	4135 Move X8, [X8+3312]
	4136 Move X2, [X8]
	4137 Add X8, X9, 440
	4138 Move X8, [X31+48]
	4139 Move X9, -52252672
	4140 Move V1, [X9+188]
	4141 Move S2, 1
	4142 Move W8, [X8+189]
	4143 NotImplemented "Instruction CMP not yet implemented."
	4144 NotImplemented "Instruction FCSEL not yet implemented."
	4145 Multiply S0, S0, S1
	4146 Move X8, [X31+48]
	4147 Move X9, -52252672
	4148 Move V1, [X9+188]
	4149 Move X9, [X31+72]
	4150 Move W8, [X8+189]
	4151 Move S3, 1
	4152 Move V2, [X9+244]
	4153 NotImplemented "Instruction CMP not yet implemented."
	4154 NotImplemented "Instruction FCSEL not yet implemented."
	4155 Multiply S0, S0, S1
	4156 Multiply S0, S2, S0
	4157 Move X8, [X31+72]
	4158 Move V0, [X8+852]
	4159 Move X8, [X31+72]
	4160 NotImplemented "Instruction FCMP not yet implemented."
	4161 Move S1, W31
	4162 NotImplemented "Instruction FCSEL not yet implemented."
	4163 Move [X8+852], S0
	4164 Move X8, [X31+48]
	4165 Move X9, -52252672
	4166 Move V1, [X9+188]
	4167 Move S2, 1
	4168 Move W8, [X8+189]
	4169 NotImplemented "Instruction CMP not yet implemented."
	4170 Move X8, [X31+72]
	4171 NotImplemented "Instruction FCSEL not yet implemented."
	4172 Multiply S0, S0, S1
	4173 Move [X8+764], S0
	4174 Move X8, [X31+48]
	4175 Move X9, -52252672
	4176 Move V1, [X9+188]
	4177 Move X9, [X31+72]
	4178 Move W8, [X8+189]
	4179 Move S3, 1
	4180 Move V2, [X9+244]
	4181 NotImplemented "Instruction CMP not yet implemented."
	4182 NotImplemented "Instruction FCSEL not yet implemented."
	4183 Multiply S0, S0, S1
	4184 Multiply S0, S2, S0
	4185 Move [X9+764], S0
	4186 Move X8, [X31+72]
	4187 Move V0, [X8+764]
	4188 Move X8, 0x4A2000
	4189 Move X8, [X8+3336]
	4190 Move X19, [X31+72]
	4191 Move X1, [X8]
	4192 Add X0, X19, 768
	4193 Call TextProcessingStack`1<Single>.Add, X0, V0
	4194 Move V0, [X19+764]
	4195 Move [X19+756], S0
	4196 Move X8, [X31+48]
	4197 Move X9, -52252672
	4198 Move V1, [X9+188]
	4199 Move S2, 1
	4200 Move W8, [X8+189]
	4201 NotImplemented "Instruction CMP not yet implemented."
	4202 Move X8, [X31+72]
	4203 NotImplemented "Instruction FCSEL not yet implemented."
	4204 Multiply S0, S0, S1
	4205 Move [X8+752], S0
	4206 Move X8, [X31+48]
	4207 Move X9, -52252672
	4208 Move V1, [X9+188]
	4209 Move X9, [X31+72]
	4210 Move W8, [X8+189]
	4211 Move S3, 1
	4212 Move V2, [X9+244]
	4213 NotImplemented "Instruction CMP not yet implemented."
	4214 NotImplemented "Instruction FCSEL not yet implemented."
	4215 Multiply S0, S0, S1
	4216 Multiply S0, S2, S0
	4217 Move [X9+752], S0
	4218 Move X8, [X31+32]
	4219 Compare X8, 0
	4220 JumpIfEqual {3637}
	4221 Move X9, [X31+32]
	4222 Move W8, [X9+32]
	4223 Add W8, W8, 1
	4224 Move [X9+32], W8
	4225 Move X8, [X31+48]
	4226 Move X8, [X8+104]
	4227 Compare X8, 0
	4228 JumpIfEqual {3637}
	4229 Move W8, [X8+137]
	4230 Compare W8, 0
	4231 JumpIfEqual {629}
	4232 Move X8, 0x434000
	4233 Move X8, [X8+2600]
	4234 Move X0, [X8]
	4235 Move W8, [X0+224]
	4236 Compare W8, 0
	4237 JumpIfNotEqual {4239}
	4238 Call 0x1C17DFC
	4239 Move X8, 0x4A2000
	4240 Move X8, [X8+3464]
	4241 Move X1, X31
	4242 Move X0, [X8]
	4243 Call Debug.LogWarning, X0
	4244 Move X0, [X19]
	4245 Move X9, [X31+72]
	4246 Move W8, [X0+224]
	4247 Move X20, [X9+6640]
	4248 Compare W8, 0
	4249 JumpIfNotEqual {4251}
	4250 Call 0x1C17DFC
	4251 Move X0, X20
	4252 Move X1, X31
	4253 Move X2, X31
	4254 Call Object.op_Equality, X0, X1
	4255 Move TEMP, X0
	4256 And TEMP, TEMP, 1
	4257 Compare TEMP, 1
	4258 JumpIfNotEqual {4398}
	4259 Move X8, 0x49A000
	4260 Move X9, 0x4A2000
	4261 Move X8, [X8+760]
	4262 Move X9, [X9+3272]
	4263 Move X0, [X8]
	4264 Move X1, [X9]
	4265 Call 0x2242FB8, X0
	4266 Move X8, [X31+72]
	4267 Move X20, X0
	4268 Move [X8+6640], X0
	4269 Move [X8+224], X0
	4270 Move W8, [X8+36]
	4271 Move W9, 0x65F3
	4272 NotImplemented "Instruction MOVK not yet implemented."
	4273 NotImplemented "Instruction CMP not yet implemented."
	4274 Move W9, 0x29C9
	4275 NotImplemented "Instruction MOVK not yet implemented."
	4276 NotImplemented "Instruction CMP not yet implemented."
	4277 Move W9, 0x1A27
	4278 NotImplemented "Instruction MOVK not yet implemented."
	4279 NotImplemented "Instruction CMP not yet implemented."
	4280 Move W9, 0x84FB
	4281 NotImplemented "Instruction MOVK not yet implemented."
	4282 NotImplemented "Instruction CMP not yet implemented."
	4283 Move W9, 0x8D87
	4284 NotImplemented "Instruction MOVK not yet implemented."
	4285 NotImplemented "Instruction CMP not yet implemented."
	4286 Move S0, 1
	4287 Move S1, 1
	4288 Move X8, [X31+24]
	4289 Compare X8, 0
	4290 JumpIfEqual {3637}
	4291 Move X8, [X27]
	4292 Compare X8, 0
	4293 JumpIfEqual {3637}
	4294 Move W9, [X8+24]
	4295 NotImplemented "Instruction CMP not yet implemented."
	4296 Move X9, [X31+24]
	4297 Move W2, [X8+68]
	4298 Move W3, [X8+72]
	4299 Move X0, X31
	4300 Move X4, X31
	4301 Move X21, [X9+40]
	4302 Move X9, [X31+88]
	4303 Move X1, [X9]
	4304 Call String.CreateString, X0, X1, X2, X3
	4305 Move X1, X0
	4306 Move X0, X21
	4307 Move X2, X31
	4308 Call String.Concat, X0, X1
	4309 Move X8, 0x48E000
	4310 Move X8, [X8+2776]
	4311 Move X1, [X8]
	4312 Call 0x2242FB8, X0
	4313 Move X8, [X19]
	4314 Move [X31+800], X0
	4315 Move X21, X0
	4316 Move W9, [X8+224]
	4317 Compare W9, 0
	4318 JumpIfNotEqual {4321}
	4319 Move X0, X8
	4320 Call 0x1C17DFC
	4321 Move X0, X21
	4322 Move X1, X31
	4323 Move X2, X31
	4324 Call Object.op_Equality, X0, X1
	4325 Move TEMP, X0
	4326 And TEMP, TEMP, 1
	4327 Compare TEMP, 1
	4328 JumpIfEqual {546}
	4329 Move X1, [X31+800]
	4330 Move W0, W20
	4331 Move X2, X31
	4332 Call MaterialReferenceManager.AddFontMaterial, X0, X1
	4333 Move X0, [X31+800]
	4334 Move X19, [X31+72]
	4335 Move W8, 0x15B8
	4336 Move X4, X31
	4337 Move [X19+112], X0
	4338 Move X1, [X31+808]
	4339 Move X3, [X19+6624]
	4340 Add X2, X19, X8
	4341 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	4342 Move X9, [X19+5560]
	4343 Move [X19+120], W0
	4344 Compare X9, 0
	4345 JumpIfEqual {3637}
	4346 Move W8, [X9+24]
	4347 NotImplemented "Instruction CMP not yet implemented."
	4348 Move W10, 56
	4349 NotImplemented "Instruction SMADDL not yet implemented."
	4350 Move X10, 0x4A2000
	4351 Move X8, [X31+72]
	4352 Move X10, [X10+3304]
	4353 Move V2, [X9+48]
	4354 Move V0, [X9+64]
	4355 Move X11, [X9+80]
	4356 Move V1, [X9+2]
	4357 Move X2, [X10]
	4358 Add X8, X8, 128
	4359 Move [X31+336], X11
	4360 Move [X31+304], V2
	4361 Move [X31+312], V0
	4362 Move [X31+18], V1
	4363 Call 0x1C17F28
	4364 Move X9, [X31+72]
	4365 Move [X9+244], S0
	4366 Move X8, 0x4A2000
	4367 Move X8, [X8+3336]
	4368 Add X0, X9, 248
	4369 Move X1, [X8]
	4370 Call TextProcessingStack`1<Single>.Add, X0, V0
	4371 Move X8, [X31+48]
	4372 Move X9, -52252672
	4373 Move V1, [X9+188]
	4374 Move S2, 1
	4375 Move W8, [X8+189]
	4376 NotImplemented "Instruction CMP not yet implemented."
	4377 NotImplemented "Instruction FCSEL not yet implemented."
	4378 Multiply S0, S0, S1
	4379 Move X8, [X31+48]
	4380 Move X9, -52252672
	4381 Move V1, [X9+188]
	4382 Move X9, [X31+72]
	4383 Move W8, [X8+189]
	4384 Move S3, 1
	4385 Move V2, [X9+244]
	4386 NotImplemented "Instruction CMP not yet implemented."
	4387 NotImplemented "Instruction FCSEL not yet implemented."
	4388 Multiply S0, S0, S1
	4389 Multiply S0, S2, S0
	4390 Move X8, [X31+72]
	4391 Move V0, [X8+852]
	4392 Move X8, [X31+72]
	4393 NotImplemented "Instruction FCMP not yet implemented."
	4394 Move S1, W31
	4395 NotImplemented "Instruction FCSEL not yet implemented."
	4396 Move [X8+852], S0
	4397 Move [X8+856], S0
	4398 Move X8, [X31+72]
	4399 Move X20, [X8+224]
	4400 Move W9, 0x4A70
	4401 NotImplemented "Instruction MOVK not yet implemented."
	4402 NotImplemented "Instruction CMP not yet implemented."
	4403 Move W9, 0x2EE0
	4404 NotImplemented "Instruction MOVK not yet implemented."
	4405 NotImplemented "Instruction CMP not yet implemented."
	4406 Move W9, 0xF684
	4407 NotImplemented "Instruction MOVK not yet implemented."
	4408 NotImplemented "Instruction CMP not yet implemented."
	4409 Move W9, 0x65F3
	4410 NotImplemented "Instruction MOVK not yet implemented."
	4411 NotImplemented "Instruction CMP not yet implemented."
	4412 Move S0, 1
	4413 Move W9, 0x7E7E
	4414 NotImplemented "Instruction MOVK not yet implemented."
	4415 NotImplemented "Instruction CMP not yet implemented."
	4416 Move W9, 0x29C9
	4417 NotImplemented "Instruction MOVK not yet implemented."
	4418 NotImplemented "Instruction CMP not yet implemented."
	4419 Move X9, [X31+72]
	4420 Move W8, 0x8080
	4421 NotImplemented "Instruction MOVK not yet implemented."
	4422 Move W1, 0x8080
	4423 Move [X9+428], W8
	4424 Move X8, 0x4A2000
	4425 Move X8, [X8+3312]
	4426 Add X0, X9, 440
	4427 NotImplemented "Instruction MOVK not yet implemented."
	4428 Move W9, 0x1FCE
	4429 NotImplemented "Instruction MOVK not yet implemented."
	4430 NotImplemented "Instruction CMP not yet implemented."
	4431 Move W9, 0x4A70
	4432 NotImplemented "Instruction MOVK not yet implemented."
	4433 NotImplemented "Instruction CMP not yet implemented."
	4434 Move X9, [X31+72]
	4435 Move W8, 0x80FF
	4436 NotImplemented "Instruction MOVK not yet implemented."
	4437 Move W1, 0x80FF
	4438 Move [X9+428], W8
	4439 Move X8, 0x4A2000
	4440 Move X8, [X8+3312]
	4441 Add X0, X9, 440
	4442 NotImplemented "Instruction MOVK not yet implemented."
	4443 Move S0, W31
	4444 Move S1, W31
	4445 Move S2, 1
	4446 Move X9, [X31+72]
	4447 Move W8, 0x20A0
	4448 NotImplemented "Instruction MOVK not yet implemented."
	4449 Move W1, 0x20A0
	4450 Move [X9+428], W8
	4451 Move X8, 0x4A2000
	4452 Move X8, [X8+3312]
	4453 Add X0, X9, 440
	4454 NotImplemented "Instruction MOVK not yet implemented."
	4455 Move S0, W31
	4456 Move S1, W31
	4457 Move S0, W31
	4458 Move S1, 1
	4459 Move S2, W31
	4460 Move X9, [X31+72]
	4461 Move W8, 0xD8AD
	4462 NotImplemented "Instruction MOVK not yet implemented."
	4463 Move W1, 0xD8AD
	4464 Move [X9+428], W8
	4465 Move X8, 0x4A2000
	4466 Move X8, [X8+3312]
	4467 Add X0, X9, 440
	4468 NotImplemented "Instruction MOVK not yet implemented."
	4469 Move X2, [X8]
	4470 Move X8, -52256768
	4471 Move X9, -52252672
	4472 Move V1, [X8+3984]
	4473 Move V2, [X9+48]
	4474 Move S0, 1
	4475 Move S3, 1
	4476 Move X0, X31
	4477 Call 0x1E44664

Method: System.Void SaveGlyphVertexInfo(System.Single padding, System.Single stylePadding, UnityEngine.Color32 vertexColor, UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC079C CBZ X8, 0x3CC0B24
	0x03CC07A0 LDRSW X9, [X20 + 0x324]
	0x03CC07A4 LDR W10, [X8 + 0x18]
	0x03CC07A8 CMP W9, W10
	0x03CC07AC B.CS 0x3CC0B28
	0x03CC07B0 MOVZ W10, 0x188
	0x03CC07B4 MADD X8, X9, X10, X8
	0x03CC07B8 STR W22, [X8 + 0xC4]
	0x03CC07BC LDR X8, [X19 + 0x30]
	0x03CC07C0 CBZ X8, 0x3CC0B24
	0x03CC07C4 LDRSW X9, [X20 + 0x324]
	0x03CC07C8 LDR W10, [X8 + 0x18]
	0x03CC07CC CMP W9, W10
	0x03CC07D0 B.CS 0x3CC0B28
	0x03CC07D4 MOVZ W10, 0x188
	0x03CC07D8 MADD X8, X9, X10, X8
	0x03CC07DC STR W24, [X8 + 0x9C]
	0x03CC07E0 LDR X8, [X19 + 0x30]
	0x03CC07E4 CBZ X8, 0x3CC0B24
	0x03CC07E8 LDRSW X9, [X20 + 0x324]
	0x03CC07EC LDR W10, [X8 + 0x18]
	0x03CC07F0 CMP W9, W10
	0x03CC07F4 B.CS 0x3CC0B28
	0x03CC07F8 MOVZ W10, 0x188
	0x03CC07FC MADD X8, X9, X10, X8
	0x03CC0800 STR W25, [X8 + 0xEC]
	0x03CC0804 LDR X8, [X19 + 0x30]
	0x03CC0808 CBZ X8, 0x3CC0B24
	0x03CC080C LDRSW X9, [X20 + 0x324]
	0x03CC0810 LDR W10, [X8 + 0x18]
	0x03CC0814 CMP W9, W10
	0x03CC0818 B.CS 0x3CC0B28
	0x03CC081C MOVZ W10, 0x188
	0x03CC0820 MADD X8, X9, X10, X8
	0x03CC0824 STR W21, [X8 + 0x114]
	0x03CC0828 LDR X0, [X20 + 0x1588]
	0x03CC082C CBZ X0, 0x3CC0B24
	0x03CC0830 MOV X1, X31
	0x03CC0834 BL 0x3CAC94C
	0x03CC0838 CBZ X0, 0x3CC0B24
	0x03CC083C ADRP X21, 0x45B000
	0x03CC0840 LDR X21, [X21 + 0x608]
	0x03CC0844 MOV X1, X31
	0x03CC0848 BL 0x3C9C4CC
	0x03CC084C MOV X8, X0
	0x03CC0850 LDR X0, [X21]
	0x03CC0854 STP X8, X1, [X31]
	0x03CC0858 LDR W8, [X0 + 0xE0]
	0x03CC085C CBNZ W8, 0x3CC0864
	0x03CC0860 BL 0x1C16DFC
	0x03CC0864 ADD X0, X31, 0x0
	0x03CC0868 MOV X1, X31
	0x03CC086C BL 0x3C9C090
	0x03CC0870 LDR X8, [X20 + 0xE0]
	0x03CC0874 CBZ X8, 0x3CC0B24
	0x03CC0878 MOV W21, W0
	0x03CC087C MOV X0, X8
	0x03CC0880 MOV X1, X31
	0x03CC0884 BL 0x3CAB308
	0x03CC0888 CBZ X0, 0x3CC0B24
	0x03CC088C LDR X8, [X0]
	0x03CC0890 LDP X9, X1, [X8 + 0x188]
	0x03CC0894 BLR X9
	0x03CC0898 LDR X8, [X20 + 0x1588]
	0x03CC089C CBZ X8, 0x3CC0B24
	0x03CC08A0 MOV W22, W0
	0x03CC08A4 MOV X0, X8
	0x03CC08A8 MOV X1, X31
	0x03CC08AC BL 0x3CAC94C
	0x03CC08B0 CBZ X0, 0x3CC0B24
	0x03CC08B4 MOV X1, X31
	0x03CC08B8 BL 0x3C9C4CC
	0x03CC08BC STP X0, X1, [X31]
	0x03CC08C0 ADD X0, X31, 0x0
	0x03CC08C4 MOV X1, X31
	0x03CC08C8 BL 0x3C9C098
	0x03CC08CC LDR X8, [X20 + 0xE0]
	0x03CC08D0 CBZ X8, 0x3CC0B24
	0x03CC08D4 MOV W23, W0
	0x03CC08D8 MOV X0, X8
	0x03CC08DC MOV X1, X31
	0x03CC08E0 BL 0x3CAB308
	0x03CC08E4 CBZ X0, 0x3CC0B24
	0x03CC08E8 LDR X8, [X0]
	0x03CC08EC LDP X9, X1, [X8 + 0x1A8]
	0x03CC08F0 BLR X9
	0x03CC08F4 LDR X8, [X20 + 0x1588]
	0x03CC08F8 CBZ X8, 0x3CC0B24
	0x03CC08FC MOV W24, W0
	0x03CC0900 MOV X0, X8
	0x03CC0904 MOV X1, X31
	0x03CC0908 BL 0x3CAC94C
	0x03CC090C CBZ X0, 0x3CC0B24
	0x03CC0910 MOV X1, X31
	0x03CC0914 BL 0x3C9C4CC
	0x03CC0918 STP X0, X1, [X31]
	0x03CC091C ADD X0, X31, 0x0
	0x03CC0920 MOV X1, X31
	0x03CC0924 BL 0x3C9C098
	0x03CC0928 LDR X8, [X20 + 0x1588]
	0x03CC092C CBZ X8, 0x3CC0B24
	0x03CC0930 MOV W25, W0
	0x03CC0934 MOV X0, X8
	0x03CC0938 MOV X1, X31
	0x03CC093C BL 0x3CAC94C
	0x03CC0940 CBZ X0, 0x3CC0B24
	0x03CC0944 MOV X1, X31
	0x03CC0948 BL 0x3C9C4CC
	0x03CC094C STP X0, X1, [X31]
	0x03CC0950 ADD X0, X31, 0x0
	0x03CC0954 MOV X1, X31
	0x03CC0958 BL 0x3C9C0A8
	0x03CC095C LDR X8, [X20 + 0xE0]
	0x03CC0960 CBZ X8, 0x3CC0B24
	0x03CC0964 MOV W26, W0
	0x03CC0968 MOV X0, X8
	0x03CC096C MOV X1, X31
	0x03CC0970 BL 0x3CAB308
	0x03CC0974 CBZ X0, 0x3CC0B24
	0x03CC0978 LDR X8, [X0]
	0x03CC097C LDP X9, X1, [X8 + 0x1A8]
	0x03CC0980 BLR X9
	0x03CC0984 LDR X8, [X20 + 0x1588]
	0x03CC0988 CBZ X8, 0x3CC0B24
	0x03CC098C MOV W27, W0
	0x03CC0990 MOV X0, X8
	0x03CC0994 MOV X1, X31
	0x03CC0998 BL 0x3CAC94C
	0x03CC099C CBZ X0, 0x3CC0B24
	0x03CC09A0 MOV X1, X31
	0x03CC09A4 BL 0x3C9C4CC
	0x03CC09A8 STP X0, X1, [X31]
	0x03CC09AC ADD X0, X31, 0x0
	0x03CC09B0 MOV X1, X31
	0x03CC09B4 BL 0x3C9C090
	0x03CC09B8 LDR X8, [X20 + 0x1588]
	0x03CC09BC CBZ X8, 0x3CC0B24
	0x03CC09C0 MOV W28, W0
	0x03CC09C4 MOV X0, X8
	0x03CC09C8 MOV X1, X31
	0x03CC09CC BL 0x3CAC94C
	0x03CC09D0 CBZ X0, 0x3CC0B24
	0x03CC09D4 MOV X1, X31
	0x03CC09D8 BL 0x3C9C4CC
	0x03CC09DC STP X0, X1, [X31]
	0x03CC09E0 ADD X0, X31, 0x0
	0x03CC09E4 MOV X1, X31
	0x03CC09E8 BL 0x3C9C0A0
	0x03CC09EC LDR X8, [X20 + 0xE0]
	0x03CC09F0 CBZ X8, 0x3CC0B24
	0x03CC09F4 MOV W29, W0
	0x03CC09F8 MOV X0, X8
	0x03CC09FC MOV X1, X31
	0x03CC0A00 BL 0x3CAB308
	0x03CC0A04 CBZ X0, 0x3CC0B24
	0x03CC0A08 LDR X8, [X0]
	0x03CC0A0C LDP X9, X1, [X8 + 0x188]
	0x03CC0A10 BLR X9
	0x03CC0A14 LDR X8, [X19 + 0x30]
	0x03CC0A18 CBZ X8, 0x3CC0B24
	0x03CC0A1C LDRSW X9, [X20 + 0x324]
	0x03CC0A20 LDR W10, [X8 + 0x18]
	0x03CC0A24 CMP W9, W10
	0x03CC0A28 B.CS 0x3CC0B28
	0x03CC0A2C SCVTF S0, W21
	0x03CC0A30 SCVTF S1, W22
	0x03CC0A34 SCVTF S2, W23
	0x03CC0A38 SCVTF S3, W24
	0x03CC0A3C MOVZ W10, 0x188
	0x03CC0A40 FDIV S1, S0, S1
	0x03CC0A44 FDIV S0, S2, S3
	0x03CC0A48 MADD X8, X9, X10, X8
	0x03CC0A4C STP S1, S0, [X8 + 0xAC]
	0x03CC0A50 STP W31, W31, [X8 + 0xB4]
	0x03CC0A54 LDR X8, [X19 + 0x30]
	0x03CC0A58 CBZ X8, 0x3CC0B24
	0x03CC0A5C LDRSW X9, [X20 + 0x324]
	0x03CC0A60 LDR W10, [X8 + 0x18]
	0x03CC0A64 CMP W9, W10
	0x03CC0A68 B.CS 0x3CC0B28
	0x03CC0A6C ADD W10, W26, W25
	0x03CC0A70 SCVTF S2, W27
	0x03CC0A74 MOVZ W11, 0x188
	0x03CC0A78 SCVTF S3, W10
	0x03CC0A7C MADD X8, X9, X11, X8
	0x03CC0A80 FDIV S2, S3, S2
	0x03CC0A84 STP S1, S2, [X8 + 0x84]
	0x03CC0A88 STP W31, W31, [X8 + 0x8C]
	0x03CC0A8C LDR X8, [X19 + 0x30]
	0x03CC0A90 CBZ X8, 0x3CC0B24
	0x03CC0A94 LDRSW X9, [X20 + 0x324]
	0x03CC0A98 LDR W10, [X8 + 0x18]
	0x03CC0A9C CMP W9, W10
	0x03CC0AA0 B.CS 0x3CC0B28
	0x03CC0AA4 ADD W10, W29, W28
	0x03CC0AA8 SCVTF S1, W0
	0x03CC0AAC MOVZ W11, 0x188
	0x03CC0AB0 SCVTF S3, W10
	0x03CC0AB4 MADD X8, X9, X11, X8
	0x03CC0AB8 FDIV S1, S3, S1
	0x03CC0ABC STP S1, S2, [X8 + 0xD4]
	0x03CC0AC0 STP W31, W31, [X8 + 0xDC]
	0x03CC0AC4 LDR X8, [X19 + 0x30]
	0x03CC0AC8 CBZ X8, 0x3CC0B24
	0x03CC0ACC LDRSW X9, [X20 + 0x324]
	0x03CC0AD0 LDR W10, [X8 + 0x18]
	0x03CC0AD4 CMP W9, W10
	0x03CC0AD8 B.CS 0x3CC0B28
	0x03CC0ADC LDP X20, X19, [X31 + 0x60]
	0x03CC0AE0 LDP X22, X21, [X31 + 0x50]
	0x03CC0AE4 LDP X24, X23, [X31 + 0x40]
	0x03CC0AE8 LDP X26, X25, [X31 + 0x30]
	0x03CC0AEC LDP X28, X27, [X31 + 0x20]
	0x03CC0AF0 LDP X29, X30, [X31 + 0x10]
	0x03CC0AF4 MOVZ W10, 0x188
	0x03CC0AF8 MADD X8, X9, X10, X8
	0x03CC0AFC STP S1, S0, [X8 + 0xFC]
	0x03CC0B00 STR W31, [X8 + 0x108]
	0x03CC0B04 STR W31, [X8 + 0x104]
	0x03CC0B08 ADD X31, X31, 0x70
	0x03CC0B0C RET
	0x03CC0B10 MOV W25, W21
	0x03CC0B14 MOV W24, W21
	0x03CC0B18 B 0x3CC0690
	0x03CC0B1C MOV W25, W21
	0x03CC0B20 B 0x3CC0690
	0x03CC0B24 BL 0x1C16F20
	0x03CC0B28 BL 0x1C16F28
	0x03CC0B2C STR D14, [X31 - 0xA0]!
	0x03CC0B30 STP D13, D12, [X31 + 0x10]
	0x03CC0B34 STP D11, D10, [X31 + 0x20]
	0x03CC0B38 STP D9, D8, [X31 + 0x30]
	0x03CC0B3C STP X29, X30, [X31 + 0x40]
	0x03CC0B40 STP X28, X27, [X31 + 0x50]
	0x03CC0B44 STP X26, X25, [X31 + 0x60]
	0x03CC0B48 STP X24, X23, [X31 + 0x70]
	0x03CC0B4C STP X22, X21, [X31 + 0x80]
	0x03CC0B50 STP X20, X19, [X31 + 0x90]
	0x03CC0B54 SUB X31, X31, 0x180
	0x03CC0B58 ADRP X19, 0x727000
	0x03CC0B5C LDRB W8, [X19 + 0x340]
	0x03CC0B60 MOV X28, X3
	0x03CC0B64 MOV X22, X2
	0x03CC0B68 MOV X20, X1
	0x03CC0B6C MOV V8.16B, V7.16B
	0x03CC0B70 MOV V11.16B, V6.16B
	0x03CC0B74 MOV V12.16B, V4.16B
	0x03CC0B78 MOV V9.16B, V3.16B
	0x03CC0B7C MOV V13.16B, V1.16B
	0x03CC0B80 MOV V10.16B, V0.16B
	0x03CC0B84 MOV X21, X0
	0x03CC0B88 TBNZ X8, 0x0, 0x3CC0BD0
	0x03CC0B8C ADRP X0, 0x433000
	0x03CC0B90 LDR X0, [X0 + 0xA28]
	0x03CC0B94 BL 0x1C16CF4
	0x03CC0B98 ADRP X0, 0x45B000
	0x03CC0B9C LDR X0, [X0 + 0x608]
	0x03CC0BA0 BL 0x1C16CF4
	0x03CC0BA4 ADRP X0, 0x4A1000
	0x03CC0BA8 LDR X0, [X0 + 0x6C8]
	0x03CC0BAC BL 0x1C16CF4
	0x03CC0BB0 ADRP X0, 0x4A1000
	0x03CC0BB4 LDR X0, [X0 + 0xB48]
	0x03CC0BB8 BL 0x1C16CF4
	0x03CC0BBC ADRP X0, 0x4A1000
	0x03CC0BC0 LDR X0, [X0 + 0xD90]
	0x03CC0BC4 BL 0x1C16CF4
	0x03CC0BC8 MOVZ W8, 0x1
	0x03CC0BCC STRB W8, [X19 + 0x340]
	0x03CC0BD0 MOVI V0.2D, 0x0
	0x03CC0BD4 MOV X0, X21
	0x03CC0BD8 MOV X1, X22
	0x03CC0BDC STP X31, X31, [X31 + 0x160]
	0x03CC0BE0 STR W31, [X31 + 0x170]
	0x03CC0BE4 STP X31, X31, [X31 + 0x150]
	0x03CC0BE8 STP V0, V0, [X31 + 0x130]
	0x03CC0BEC STP V0, V0, [X31 + 0x110]
	0x03CC0BF0 STP V0, V0, [X31 + 0xF0]
	0x03CC0BF4 BL 0x3CC16D4
	0x03CC0BF8 LDR X0, [X21 + 0x1A20]
	0x03CC0BFC CBZ X0, 0x3CC165C
	0x03CC0C00 CBZ X28, 0x3CC16D0
	0x03CC0C04 LDR X25, [X28 + 0x58]
	0x03CC0C08 CBZ X25, 0x3CC16D0
	0x03CC0C0C LDRSW X23, [X21 + 0x78]
	0x03CC0C10 LDR W8, [X25 + 0x18]
	0x03CC0C14 CMP W23, W8
	0x03CC0C18 B.CS 0x3CC16CC
	0x03CC0C1C MOVZ W9, 0x50
	0x03CC0C20 MADD X19, X23, X9, X25
	0x03CC0C24 LDRSW X24, [X19 + 0x20]!
	0x03CC0C28 LDR X9, [X19 + 0x8]
	0x03CC0C2C CBZ X9, 0x3CC16D0
	0x03CC0C30 LDR W9, [X9 + 0x18]
	0x03CC0C34 ADD W26, W24, 0xC
	0x03CC0C38 CMP W26, W9
	0x03CC0C3C B.LE 0x3CC0C84
	0x03CC0C40 ADRP X9, 0x4A1000
	0x03CC0C44 LDR X9, [X9 + 0x6C8]
	0x03CC0C48 LDR X0, [X9]
	0x03CC0C4C LDR W9, [X0 + 0xE0]
	0x03CC0C50 CBNZ W9, 0x3CC0C5C
	0x03CC0C54 BL 0x1C16DFC
	0x03CC0C58 LDR W8, [X25 + 0x18]
	0x03CC0C5C CMP W23, W8
	0x03CC0C60 B.CS 0x3CC16CC
	0x03CC0C64 ADD W8, W26, 0x3
	0x03CC0C68 CMP W26, 0x0
	0x03CC0C6C CSEL W8, W8, W26, LT
	0x03CC0C70 SBFM W1, W8, 0x2, 0x1F
	0x03CC0C74 MOV X0, X19
	0x03CC0C78 MOV X2, X31
	0x03CC0C7C BL 0x3CAA9C0
	0x03CC0C80 LDR X0, [X21 + 0x1A20]
	0x03CC0C84 FCMP S13, S12
	0x03CC0C88 FCSEL S13, S13, S12, MI
	0x03CC0C8C CBZ X0, 0x3CC16D0
	0x03CC0C90 MOV X1, X31
	0x03CC0C94 BL 0x3CAC94C
	0x03CC0C98 CBZ X0, 0x3CC16D0
	0x03CC0C9C ADD X8, X31, 0x90
	0x03CC0CA0 MOV X1, X31
	0x03CC0CA4 BL 0x3C9C4A4
	0x03CC0CA8 LDR V0, [X31 + 0x9]
	0x03CC0CAC LDR W8, [X31 + 0xA0]
	0x03CC0CB0 STR V0, [X31 + 0x16]
	0x03CC0CB4 STR W8, [X31 + 0x170]
	0x03CC0CB8 LDR X0, [X21 + 0x1A20]
	0x03CC0CBC CBZ X0, 0x3CC16D0
	0x03CC0CC0 MOV X1, X31
	0x03CC0CC4 BL 0x3CAC94C
	0x03CC0CC8 CBZ X0, 0x3CC16D0
	0x03CC0CCC LDR V14, [X31 + 0x220]
	0x03CC0CD0 MOV X1, X31
	0x03CC0CD4 BL 0x3C9C4CC
	0x03CC0CD8 STP X0, X1, [X31 + 0x150]
	0x03CC0CDC LDR V0, [X21 + 0xD8]
	0x03CC0CE0 FSUB S1, S11, S14
	0x03CC0CE4 FSUB S2, S14, S8
	0x03CC0CE8 ADD X0, X31, 0x160
	0x03CC0CEC FMUL S1, S1, S0
	0x03CC0CF0 FMUL S0, S2, S0
	0x03CC0CF4 MOV X1, X31
	0x03CC0CF8 FADD S10, S10, S1
	0x03CC0CFC FADD S8, S9, S0
	0x03CC0D00 BL 0x3C9C2CC
	0x03CC0D04 LDR V1, [X21 + 0xD8]
	0x03CC0D08 FMOV S2, 0.5
	0x03CC0D0C FMUL S0, S0, S2
	0x03CC0D10 FSUB S9, S8, S10
	0x03CC0D14 FADD S0, S0, S1
	0x03CC0D18 FMUL S12, S0, S14
	0x03CC0D1C FADD S0, S12, S12
	0x03CC0D20 FCMP S9, S0
	0x03CC0D24 FMOV S11, 1
	0x03CC0D28 B.PL 0x3CC0D34
	0x03CC0D2C FDIV S11, S9, S0
	0x03CC0D30 FMUL S12, S12, S11
	0x03CC0D34 LDR X0, [X21 + 0x1A28]
	0x03CC0D38 CBZ X0, 0x3CC16D0
	0x03CC0D3C ADD X8, X31, 0x90
	0x03CC0D40 MOV X1, X31
	0x03CC0D44 BL 0x3C9EB14
	0x03CC0D48 ADD X0, X31, 0xF0
	0x03CC0D4C ADD X1, X31, 0x90
	0x03CC0D50 MOVZ W2, 0x60
	0x03CC0D54 BL 0x3EB1AC0
	0x03CC0D58 ADD X0, X31, 0xF0
	0x03CC0D5C MOV X1, X31
	0x03CC0D60 BL 0x3C9C058
	0x03CC0D64 LDR X8, [X28 + 0x58]
	0x03CC0D68 CBZ X8, 0x3CC16D0
	0x03CC0D6C LDRSW X9, [X21 + 0x78]
	0x03CC0D70 LDR W10, [X8 + 0x18]
	0x03CC0D74 CMP W9, W10
	0x03CC0D78 B.CS 0x3CC16CC
	0x03CC0D7C MOVZ W10, 0x50
	0x03CC0D80 MADD X8, X9, X10, X8
	0x03CC0D84 LDR X25, [X8 + 0x28]
	0x03CC0D88 CBZ X25, 0x3CC16D0
	0x03CC0D8C LDR W8, [X25 + 0x18]
	0x03CC0D90 CMP W24, W8
	0x03CC0D94 B.CS 0x3CC16CC
	0x03CC0D98 LDR V1, [X21 + 0xD8]
	0x03CC0D9C MOVZ W8, 0xC
	0x03CC0DA0 MADD X8, X24, X8, X25
	0x03CC0DA4 STR W31, [X8 + 0x28]
	0x03CC0DA8 FADD S0, S0, S1
	0x03CC0DAC FMUL S0, S0, S14
	0x03CC0DB0 FSUB S0, S13, S0
	0x03CC0DB4 STP S10, S0, [X8 + 0x20]
	0x03CC0DB8 LDR W9, [X25 + 0x18]
	0x03CC0DBC AND X23, X24, 0x0
	0x03CC0DC0 ADD W8, W23, 0x1
	0x03CC0DC4 CMP W8, W9
	0x03CC0DC8 B.CS 0x3CC16CC
	0x03CC0DCC FMUL S1, S1, S14
	0x03CC0DD0 SXTW X3, W8
	0x03CC0DD4 MOVZ W8, 0xC
	0x03CC0DD8 FADD S1, S13, S1
	0x03CC0DDC MADD X8, X3, X8, X25
	0x03CC0DE0 STP S10, S1, [X8 + 0x20]
	0x03CC0DE4 STR W31, [X8 + 0x28]
	0x03CC0DE8 LDR W9, [X25 + 0x18]
	0x03CC0DEC ADD W8, W24, 0x2
	0x03CC0DF0 CMP W8, W9
	0x03CC0DF4 B.CS 0x3CC16CC
	0x03CC0DF8 SXTW X1, W8
	0x03CC0DFC MOVZ W8, 0xC
	0x03CC0E00 FADD S2, S10, S12
	0x03CC0E04 MADD X5, X1, X8, X25
	0x03CC0E08 STR S2, [X5 + 0x20]!
	0x03CC0E0C STR S1, [X5 + 0x4]
	0x03CC0E10 STR W31, [X5 + 0x8]
	0x03CC0E14 LDR W9, [X25 + 0x18]
	0x03CC0E18 ADD W8, W23, 0x3
	0x03CC0E1C CMP W8, W9
	0x03CC0E20 B.CS 0x3CC16CC
	0x03CC0E24 SXTW X0, W8
	0x03CC0E28 MOVZ W8, 0xC
	0x03CC0E2C MADD X8, X0, X8, X25
	0x03CC0E30 STP S2, S0, [X8 + 0x20]
	0x03CC0E34 STR W31, [X8 + 0x28]
	0x03CC0E38 LDR W9, [X25 + 0x18]
	0x03CC0E3C ADD W8, W24, 0x4
	0x03CC0E40 CMP W8, W9
	0x03CC0E44 B.CS 0x3CC16CC
	0x03CC0E48 SXTW X17, W8
	0x03CC0E4C MOVZ W8, 0xC
	0x03CC0E50 MADD X2, X17, X8, X25
	0x03CC0E54 STR S2, [X2 + 0x20]!
	0x03CC0E58 STR S0, [X2 + 0x4]
	0x03CC0E5C STR W31, [X2 + 0x8]
	0x03CC0E60 LDR W9, [X25 + 0x18]
	0x03CC0E64 ADD W8, W23, 0x5
	0x03CC0E68 CMP W8, W9
	0x03CC0E6C B.CS 0x3CC16CC
	0x03CC0E70 SXTW X15, W8
	0x03CC0E74 MOVZ W8, 0xC
	0x03CC0E78 MADD X8, X15, X8, X25
	0x03CC0E7C STP S2, S1, [X8 + 0x20]
	0x03CC0E80 STR W31, [X8 + 0x28]
	0x03CC0E84 LDR W9, [X25 + 0x18]
	0x03CC0E88 ADD W8, W24, 0x6
	0x03CC0E8C CMP W8, W9
	0x03CC0E90 B.CS 0x3CC16CC
	0x03CC0E94 SXTW X14, W8
	0x03CC0E98 MOVZ W8, 0xC
	0x03CC0E9C FSUB S2, S8, S12
	0x03CC0EA0 MADD X4, X14, X8, X25
	0x03CC0EA4 STR S2, [X4 + 0x20]!
	0x03CC0EA8 STR S1, [X4 + 0x4]
	0x03CC0EAC STR W31, [X4 + 0x8]
	0x03CC0EB0 LDR W9, [X25 + 0x18]
	0x03CC0EB4 ADD W8, W24, 0x7
	0x03CC0EB8 CMP W8, W9
	0x03CC0EBC B.CS 0x3CC16CC
	0x03CC0EC0 SXTW X13, W8
	0x03CC0EC4 MOVZ W8, 0xC
	0x03CC0EC8 MADD X8, X13, X8, X25
	0x03CC0ECC STP S2, S0, [X8 + 0x20]
	0x03CC0ED0 STR W31, [X8 + 0x28]
	0x03CC0ED4 LDR W9, [X25 + 0x18]
	0x03CC0ED8 ADD W8, W23, 0x8
	0x03CC0EDC CMP W8, W9
	0x03CC0EE0 B.CS 0x3CC16CC
	0x03CC0EE4 SXTW X9, W8
	0x03CC0EE8 MOVZ W8, 0xC
	0x03CC0EEC MADD X16, X9, X8, X25
	0x03CC0EF0 STR S2, [X16 + 0x20]!
	0x03CC0EF4 STR S0, [X16 + 0x4]
	0x03CC0EF8 STR W31, [X16 + 0x8]
	0x03CC0EFC STR X9, [X31 + 0x58]
	0x03CC0F00 LDR W9, [X25 + 0x18]
	0x03CC0F04 ADD W8, W24, 0x9
	0x03CC0F08 CMP W8, W9
	0x03CC0F0C B.CS 0x3CC16CC
	0x03CC0F10 SXTW X29, W8
	0x03CC0F14 MOVZ W8, 0xC
	0x03CC0F18 MADD X8, X29, X8, X25
	0x03CC0F1C STP S2, S1, [X8 + 0x20]
	0x03CC0F20 STR W31, [X8 + 0x28]
	0x03CC0F24 LDR W9, [X25 + 0x18]
	0x03CC0F28 ADD W8, W23, 0xA
	0x03CC0F2C CMP W8, W9
	0x03CC0F30 B.CS 0x3CC16CC
	0x03CC0F34 SXTW X26, W8
	0x03CC0F38 MOVZ W8, 0xC
	0x03CC0F3C MADD X8, X26, X8, X25
	0x03CC0F40 STP S8, S1, [X8 + 0x20]
	0x03CC0F44 STR W31, [X8 + 0x28]
	0x03CC0F48 LDR W9, [X25 + 0x18]
	0x03CC0F4C ADD W8, W24, 0xB
	0x03CC0F50 CMP W8, W9
	0x03CC0F54 B.CS 0x3CC16CC
	0x03CC0F58 SXTW X19, W8
	0x03CC0F5C MOVZ W8, 0xC
	0x03CC0F60 MADD X8, X19, X8, X25
	0x03CC0F64 STP S8, S0, [X8 + 0x20]
	0x03CC0F68 STR W31, [X8 + 0x28]
	0x03CC0F6C CBZ X22, 0x3CC16D0
	0x03CC0F70 LDRB W8, [X22 + 0x104]
	0x03CC0F74 CBZ W8, 0x3CC0FC4
	0x03CC0F78 LDR W10, [X25 + 0x18]
	0x03CC0F7C LDR V0, [X22 + 0x1C]
	0x03CC0F80 LDR V1, [X22 + 0x24]
	0x03CC0F84 MOV X8, X31
	0x03CC0F88 SUBS W10, W10, W23
	0x03CC0F8C AND X9, X24, 0x0
	0x03CC0F90 FADD S0, S0, S1
	0x03CC0F94 CSEL W10, W31, W10, CC
	0x03CC0F98 MOVZ W11, 0xC
	0x03CC0F9C CMP X10, X8
	0x03CC0FA0 B.EQ 0x3CC16CC
	0x03CC0FA4 ADD W12, W9, W8
	0x03CC0FA8 SMADDL X12, X12, X11, X25
	0x03CC0FAC LDR V1, [X12 + 0x24]
	0x03CC0FB0 ADD X8, X8, 0x1
	0x03CC0FB4 CMP X8, 0xC
	0x03CC0FB8 FSUB S1, S0, S1
	0x03CC0FBC STR S1, [X12 + 0x24]
	0x03CC0FC0 B.NE 0x3CC0F9C
	0x03CC0FC4 STP X15, X0, [X31 + 0x68]
	0x03CC0FC8 LDR X0, [X21 + 0x1A28]
	0x03CC0FCC STP X2, X5, [X31 + 0x18]
	0x03CC0FD0 STP X16, X4, [X31 + 0x8]
	0x03CC0FD4 STP X1, X3, [X31 + 0x78]
	0x03CC0FD8 STR X17, [X31 + 0x188]
	0x03CC0FDC STR X14, [X31 + 0x88]
	0x03CC0FE0 STR X13, [X31 + 0x60]
	0x03CC0FE4 CBZ X0, 0x3CC16D0
	0x03CC0FE8 MOV X1, X31
	0x03CC0FEC BL 0x3C9F094
	0x03CC0FF0 LDR X8, [X21 + 0x1A28]
	0x03CC0FF4 CBZ X8, 0x3CC16D0
	0x03CC0FF8 STP X29, X26, [X31 + 0x40]
	0x03CC0FFC STR X19, [X31 + 0x50]
	0x03CC1000 ADRP X19, 0x45A000
	0x03CC1004 LDR X19, [X19 + 0x608]
	0x03CC1008 MOV W27, W0
	0x03CC100C MOV X0, X8
	0x03CC1010 MOV X1, X31
	0x03CC1014 BL 0x3C9F0A4
	0x03CC1018 LDR X8, [X19]
	0x03CC101C MOV W26, W0
	0x03CC1020 LDR W9, [X8 + 0xE0]
	0x03CC1024 CBNZ W9, 0x3CC1030
	0x03CC1028 MOV X0, X8
	0x03CC102C BL 0x1C16DFC
	0x03CC1030 ADD X0, X31, 0x150
	0x03CC1034 MOV X1, X31
	0x03CC1038 BL 0x3C9C0A0
	0x03CC103C LDR V13, [X21 + 0xD8]
	0x03CC1040 STR W0, [X31 + 0x3C]
	0x03CC1044 ADD X0, X31, 0x150
	0x03CC1048 MOV X1, X31
	0x03CC104C BL 0x3C9C090
	0x03CC1050 LDR V8, [X21 + 0xD8]
	0x03CC1054 MOV W29, W0
	0x03CC1058 ADD X0, X31, 0x150
	0x03CC105C MOV X1, X31
	0x03CC1060 BL 0x3C9C090
	0x03CC1064 STR W0, [X31 + 0x38]
	0x03CC1068 ADD X0, X31, 0x150
	0x03CC106C MOV X1, X31
	0x03CC1070 BL 0x3C9C0A0
	0x03CC1074 STR W0, [X31 + 0x34]
	0x03CC1078 ADD X0, X31, 0x150
	0x03CC107C MOV X1, X31
	0x03CC1080 BL 0x3C9C090
	0x03CC1084 STR W0, [X31 + 0x30]
	0x03CC1088 ADD X0, X31, 0x150
	0x03CC108C MOV X1, X31
	0x03CC1090 BL 0x3C9C0A0
	0x03CC1094 LDR V12, [X21 + 0xD8]
	0x03CC1098 STR W0, [X31 + 0x2C]
	0x03CC109C ADD X0, X31, 0x150
	0x03CC10A0 MOV X1, X31
	0x03CC10A4 BL 0x3C9C098
	0x03CC10A8 LDR V14, [X21 + 0xD8]
	0x03CC10AC MOV W22, W0
	0x03CC10B0 ADD X0, X31, 0x150
	0x03CC10B4 MOV X1, X31
	0x03CC10B8 BL 0x3C9C098
	0x03CC10BC MOV W19, W0
	0x03CC10C0 ADD X0, X31, 0x150
	0x03CC10C4 MOV X1, X31
	0x03CC10C8 BL 0x3C9C0A8
	0x03CC10CC LDR X8, [X28 + 0x58]
	0x03CC10D0 CBZ X8, 0x3CC16D0
	0x03CC10D4 LDRSW X9, [X21 + 0x78]
	0x03CC10D8 LDR W10, [X8 + 0x18]
	0x03CC10DC LDP X15, X11, [X31 + 0x78]
	0x03CC10E0 CMP W9, W10
	0x03CC10E4 B.CS 0x3CC16CC
	0x03CC10E8 MOVZ W10, 0x50
	0x03CC10EC MADD X8, X9, X10, X8
	0x03CC10F0 LDR X8, [X8 + 0x40]
	0x03CC10F4 CBZ X8, 0x3CC16D0
	0x03CC10F8 LDR W9, [X8 + 0x18]
	0x03CC10FC CMP W23, W9
	0x03CC1100 B.CS 0x3CC16CC
	0x03CC1104 LDR V5, [X31 + 0x228]
	0x03CC1108 SCVTF S0, W27
	0x03CC110C FMOV S2, 1
	0x03CC1110 SCVTF S3, W26
	0x03CC1114 FDIV S1, S2, S0
	0x03CC1118 FDIV S2, S2, S3
	0x03CC111C SCVTF S0, W29
	0x03CC1120 SCVTF S3, W22
	0x03CC1124 FSUB S0, S0, S8
	0x03CC1128 FSUB S6, S3, S14
	0x03CC112C ADD X9, X8, X24, 0x4, LSL
	0x03CC1130 FMUL S4, S1, S0
	0x03CC1134 FMUL S0, S2, S6
	0x03CC1138 FABS S8, S5
	0x03CC113C LDR V3, [X21 + 0xD8]
	0x03CC1140 STP S4, S0, [X9 + 0x20]
	0x03CC1144 STR W31, [X9 + 0x28]
	0x03CC1148 STR S8, [X9 + 0x2C]
	0x03CC114C LDR W9, [X8 + 0x18]
	0x03CC1150 CMP W11, W9
	0x03CC1154 B.CS 0x3CC16CC
	0x03CC1158 ADD W9, W0, W19
	0x03CC115C SCVTF S5, W9
	0x03CC1160 FADD S3, S3, S5
	0x03CC1164 ADD X10, X8, X11, 0x4, LSL
	0x03CC1168 FMUL S2, S2, S3
	0x03CC116C STR W31, [X10 + 0x28]
	0x03CC1170 STP S4, S2, [X10 + 0x20]
	0x03CC1174 STR S8, [X10 + 0x2C]
	0x03CC1178 LDR W9, [X8 + 0x18]
	0x03CC117C MOV X22, X28
	0x03CC1180 LDP X27, X26, [X31 + 0x48]
	0x03CC1184 LDR X28, [X31 + 0x40]
	0x03CC1188 LDR X29, [X31 + 0x58]
	0x03CC118C CMP W15, W9
	0x03CC1190 B.CS 0x3CC16CC
	0x03CC1194 LDR W9, [X31 + 0x3C]
	0x03CC1198 FMOV S5, 0.5
	0x03CC119C LDP X12, X14, [X31 + 0x68]
	0x03CC11A0 LDR X10, [X31 + 0x60]
	0x03CC11A4 SCVTF S3, W9
	0x03CC11A8 FMUL S3, S3, S5
	0x03CC11AC FADD S3, S13, S3
	0x03CC11B0 FMUL S3, S11, S3
	0x03CC11B4 FMUL S3, S1, S3
	0x03CC11B8 ADD X9, X8, X15, 0x4, LSL
	0x03CC11BC FADD S4, S4, S3
	0x03CC11C0 STR W31, [X9 + 0x28]
	0x03CC11C4 STP S4, S2, [X9 + 0x20]
	0x03CC11C8 STR S8, [X9 + 0x2C]
	0x03CC11CC LDR W9, [X8 + 0x18]
	0x03CC11D0 LDR X11, [X31 + 0x88]
	0x03CC11D4 LDR X13, [X31 + 0x188]
	0x03CC11D8 CMP W14, W9
	0x03CC11DC B.CS 0x3CC16CC
	0x03CC11E0 ADD X9, X8, X14, 0x4, LSL
	0x03CC11E4 STP S4, S0, [X9 + 0x20]
	0x03CC11E8 STR W31, [X9 + 0x28]
	0x03CC11EC STR S8, [X9 + 0x2C]
	0x03CC11F0 LDR W9, [X8 + 0x18]
	0x03CC11F4 CMP W13, W9
	0x03CC11F8 B.CS 0x3CC16CC
	0x03CC11FC LDR W9, [X31 + 0x38]
	0x03CC1200 SCVTF S4, W9
	0x03CC1204 LDR W9, [X31 + 0x34]
	0x03CC1208 SCVTF S6, W9
	0x03CC120C FMUL S5, S6, S5
	0x03CC1210 FADD S4, S5, S4
	0x03CC1214 ADD X9, X8, X13, 0x4, LSL
	0x03CC1218 FMUL S4, S1, S4
	0x03CC121C STR W31, [X9 + 0x28]
	0x03CC1220 STP S4, S0, [X9 + 0x20]
	0x03CC1224 STR S8, [X9 + 0x2C]
	0x03CC1228 LDR W9, [X8 + 0x18]
	0x03CC122C CMP W12, W9
	0x03CC1230 B.CS 0x3CC16CC
	0x03CC1234 ADD X9, X8, X12, 0x4, LSL
	0x03CC1238 STP S4, S2, [X9 + 0x20]
	0x03CC123C STR W31, [X9 + 0x28]
	0x03CC1240 STR S8, [X9 + 0x2C]
	0x03CC1244 LDR W9, [X8 + 0x18]
	0x03CC1248 CMP W11, W9
	0x03CC124C B.CS 0x3CC16CC
	0x03CC1250 ADD X9, X8, X11, 0x4, LSL
	0x03CC1254 STP S4, S2, [X9 + 0x20]
	0x03CC1258 STR W31, [X9 + 0x28]
	0x03CC125C STR S8, [X9 + 0x2C]
	0x03CC1260 LDR W9, [X8 + 0x18]
	0x03CC1264 CMP W10, W9
	0x03CC1268 B.CS 0x3CC16CC
	0x03CC126C ADD X9, X8, X10, 0x4, LSL
	0x03CC1270 STP S4, S0, [X9 + 0x20]
	0x03CC1274 STR W31, [X9 + 0x28]
	0x03CC1278 STR S8, [X9 + 0x2C]
	0x03CC127C LDR W9, [X8 + 0x18]
	0x03CC1280 CMP W29, W9
	0x03CC1284 B.CS 0x3CC16CC
	0x03CC1288 LDP W10, W9, [X31 + 0x2C]
	0x03CC128C ADD W9, W10, W9
	0x03CC1290 SCVTF S4, W9
	0x03CC1294 FADD S4, S12, S4
	0x03CC1298 FMUL S1, S1, S4
	0x03CC129C ADD X10, X8, X29, 0x4, LSL
	0x03CC12A0 FSUB S3, S1, S3
	0x03CC12A4 STR W31, [X10 + 0x28]
	0x03CC12A8 STP S3, S0, [X10 + 0x20]
	0x03CC12AC STR S8, [X10 + 0x2C]
	0x03CC12B0 LDR W9, [X8 + 0x18]
	0x03CC12B4 CMP W28, W9
	0x03CC12B8 B.CS 0x3CC16CC
	0x03CC12BC ADD X9, X8, X28, 0x4, LSL
	0x03CC12C0 STP S3, S2, [X9 + 0x20]
	0x03CC12C4 STR W31, [X9 + 0x28]
	0x03CC12C8 STR S8, [X9 + 0x2C]
	0x03CC12CC LDR W9, [X8 + 0x18]
	0x03CC12D0 CMP W27, W9
	0x03CC12D4 B.CS 0x3CC16CC
	0x03CC12D8 ADD X9, X8, X27, 0x4, LSL
	0x03CC12DC STP S1, S2, [X9 + 0x20]
	0x03CC12E0 STR W31, [X9 + 0x28]
	0x03CC12E4 STR S8, [X9 + 0x2C]
	0x03CC12E8 LDR W9, [X8 + 0x18]
	0x03CC12EC CMP W26, W9
	0x03CC12F0 B.CS 0x3CC16CC
	0x03CC12F4 ADD X8, X8, X26, 0x4, LSL
	0x03CC12F8 STP S1, S0, [X8 + 0x20]
	0x03CC12FC STR W31, [X8 + 0x28]
	0x03CC1300 STR S8, [X8 + 0x2C]
	0x03CC1304 LDR W8, [X25 + 0x18]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X29
	011 Move [X31+104], X30
	012 Move [X31+112], X28
	013 Move [X31+120], X27
	014 Move [X31+128], X26
	015 Move [X31+136], X25
	016 Move [X31+144], X24
	017 Move [X31+152], X23
	018 Move [X31+160], X22
	019 Move [X31+168], X21
	020 Move [X31+176], X20
	021 Move [X31+184], X19
	022 Move X23, 0x728000
	023 Move W8, [X23+830]
	024 Move X19, X3
	025 Move X22, X2
	026 Move X21, X1
	027 Move V12, V0
	028 Move X20, X0
	029 Move X9, X1
	030 ShiftRight X9, 24
	031 And X9, X9, 0x7FFFFFFF
	032 Move [X31+28], W9
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {48}
	037 Move X0, 0x45C000
	038 Move X0, [X0+1544]
	039 Call 0x1C17CF4
	040 Move X0, 0x434000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move X0, 0x4A2000
	044 Move X0, [X0+2888]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+830], W8
	048 Move [X31+8], X31
	049 Move [X31+16], X31
	050 Compare X19, 0
	051 JumpIfEqual {873}
	052 Add X19, X19, 48
	053 Move X8, [X19]
	054 Compare X8, 0
	055 JumpIfEqual {873}
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Move W10, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W10, 392
	060 NotImplemented "Instruction MADD not yet implemented."
	061 Add X9, X8, 292
	062 Move X10, [X9]
	063 Move [X8+160], X10
	064 Move W9, [X9+8]
	065 Move [X8+168], W9
	066 Move X8, [X19]
	067 Compare X8, 0
	068 JumpIfEqual {873}
	069 Add X29, X20, 804
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move W10, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W10, 392
	074 NotImplemented "Instruction MADD not yet implemented."
	075 Move X9, [X8+280]
	076 Move W10, [X8+288]
	077 Move [X8+120], X9
	078 Move [X8+128], W10
	079 Move X8, [X19]
	080 Compare X8, 0
	081 JumpIfEqual {873}
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Move W10, [X8+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W10, 392
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Move X9, [X8+304]
	088 Move W10, [X8+312]
	089 Move [X8+200], X9
	090 Move [X8+208], W10
	091 Move X8, [X19]
	092 Compare X8, 0
	093 JumpIfEqual {873}
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Move W10, [X8+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W10, 392
	098 NotImplemented "Instruction MADD not yet implemented."
	099 Add X9, X8, 316
	100 Move X10, [X9]
	101 Move [X8+240], X10
	102 Move W9, [X9+8]
	103 Move [X8+248], W9
	104 Move W8, [X20+427]
	105 Move W9, [X31+28]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSEL not yet implemented."
	108 Move [X31+28], W24
	109 Compare X22, 0
	110 JumpIfEqual {873}
	111 Move X25, 0x434000
	112 Move X25, [X25+1432]
	113 Move X23, [X22+144]
	114 Move X0, [X25]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X23
	120 Move X1, X31
	121 Move X2, X31
	122 Call Object.op_Equality, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {174}
	127 Move X9, [X19]
	128 Compare X9, 0
	129 JumpIfEqual {873}
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Move W8, [X9+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W11, 392
	134 Move W8, W21
	135 ShiftRight W8, 16
	136 And W8, W8, 0x7FFFFFFF
	137 NotImplemented "Instruction MADD not yet implemented."
	138 Move [X9+198], W8
	139 NotImplemented "Instruction STRH not yet implemented."
	140 Move [X9+199], W24
	141 Move X9, [X19]
	142 Compare X9, 0
	143 JumpIfEqual {873}
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Move W11, [X9+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W11, 392
	148 NotImplemented "Instruction MADD not yet implemented."
	149 Move [X9+158], W8
	150 NotImplemented "Instruction STRH not yet implemented."
	151 Move [X9+159], W24
	152 Move X9, [X19]
	153 Compare X9, 0
	154 JumpIfEqual {873}
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Move W11, [X9+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move W11, 392
	159 NotImplemented "Instruction MADD not yet implemented."
	160 Move [X9+238], W8
	161 NotImplemented "Instruction STRH not yet implemented."
	162 Move [X9+239], W24
	163 Move X9, [X19]
	164 Compare X9, 0
	165 JumpIfEqual {873}
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Move W11, [X9+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W11, 392
	170 NotImplemented "Instruction MADD not yet implemented."
	171 Move [X9+278], W8
	172 NotImplemented "Instruction STRH not yet implemented."
	173 Move [X9+279], W24
	174 Move W8, [X22+161]
	175 Compare W8, 0
	176 JumpIfNotEqual {179}
	177 Move W8, [X20+448]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, [X25]
	180 Move X23, [X22+152]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X23
	186 Move X1, X31
	187 Move X2, X31
	188 Call Object.op_Inequality, X0, X1
	189 Move X23, [X19]
	190 Compare X23, 0
	191 JumpIfEqual {873}
	192 NotImplemented "Instruction LDRSW not yet implemented."
	193 Move W8, [X23+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfNotEqual {286}
	199 Move X8, [X22+152]
	200 Compare X8, 0
	201 JumpIfEqual {873}
	202 Move S0, [X8+60]
	203 Move S1, [X8+64]
	204 Move S2, [X8+68]
	205 Move S3, [X8+72]
	206 And W8, W21, 255
	207 Move W10, 0x437F0000
	208 Move W9, W21
	209 ShiftRight W9, 8
	210 And W9, W9, 0x7FFF
	211 NotImplemented "Instruction UCVTF not yet implemented."
	212 Move W8, W21
	213 ShiftRight W8, 16
	214 And W8, W8, 0x7FFFFF
	215 Move S5, W10
	216 And W10, W24, 255
	217 NotImplemented "Instruction UCVTF not yet implemented."
	218 NotImplemented "Instruction UCVTF not yet implemented."
	219 NotImplemented "Instruction UCVTF not yet implemented."
	220 NotImplemented "Instruction FDIV not yet implemented."
	221 NotImplemented "Instruction FDIV not yet implemented."
	222 NotImplemented "Instruction FDIV not yet implemented."
	223 NotImplemented "Instruction FDIV not yet implemented."
	224 Multiply S0, S0, S11
	225 Multiply S1, S1, S10
	226 Multiply S2, S2, S9
	227 Multiply S3, S3, S8
	228 Move X0, X31
	229 Call 0x1E44664
	230 Move W8, 392
	231 NotImplemented "Instruction MADD not yet implemented."
	232 Move [X8+196], W0
	233 Move X23, [X19]
	234 Compare X23, 0
	235 JumpIfEqual {873}
	236 NotImplemented "Instruction LDRSW not yet implemented."
	237 Move W8, [X23+24]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X8, [X22+152]
	240 Compare X8, 0
	241 JumpIfEqual {873}
	242 Move S0, [X8+28]
	243 Move S1, [X8+32]
	244 Move S2, [X8+36]
	245 Move S3, [X8+40]
	246 Move X0, X31
	247 Multiply S0, S11, S0
	248 Multiply S1, S10, S1
	249 Multiply S2, S9, S2
	250 Multiply S3, S8, S3
	251 Call 0x1E44664
	252 Move W8, 392
	253 NotImplemented "Instruction MADD not yet implemented."
	254 Move [X8+156], W0
	255 Move X23, [X19]
	256 Compare X23, 0
	257 JumpIfEqual {873}
	258 NotImplemented "Instruction LDRSW not yet implemented."
	259 Move W8, [X23+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X8, [X22+152]
	262 Compare X8, 0
	263 JumpIfEqual {873}
	264 Move S0, [X8+44]
	265 Move S1, [X8+48]
	266 Move S2, [X8+52]
	267 Move S3, [X8+56]
	268 Move X0, X31
	269 Multiply S0, S11, S0
	270 Multiply S1, S10, S1
	271 Multiply S2, S9, S2
	272 Multiply S3, S8, S3
	273 Call 0x1E44664
	274 Move W8, 392
	275 NotImplemented "Instruction MADD not yet implemented."
	276 Move [X8+236], W0
	277 Move X23, [X19]
	278 Compare X23, 0
	279 JumpIfEqual {873}
	280 NotImplemented "Instruction LDRSW not yet implemented."
	281 Move W8, [X23+24]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X8, [X22+152]
	284 Compare X8, 0
	285 JumpIfNotEqual {373}
	286 Move X8, [X22+144]
	287 Compare X8, 0
	288 JumpIfEqual {873}
	289 Move S0, [X8+60]
	290 Move S1, [X8+64]
	291 Move S2, [X8+68]
	292 Move S3, [X8+72]
	293 And W8, W21, 255
	294 Move W10, 0x437F0000
	295 Move W9, W21
	296 ShiftRight W9, 8
	297 And W9, W9, 0x7FFF
	298 NotImplemented "Instruction UCVTF not yet implemented."
	299 Move W8, W21
	300 ShiftRight W8, 16
	301 And W8, W8, 0x7FFFFF
	302 Move S5, W10
	303 And W10, W24, 255
	304 NotImplemented "Instruction UCVTF not yet implemented."
	305 NotImplemented "Instruction UCVTF not yet implemented."
	306 NotImplemented "Instruction UCVTF not yet implemented."
	307 NotImplemented "Instruction FDIV not yet implemented."
	308 NotImplemented "Instruction FDIV not yet implemented."
	309 NotImplemented "Instruction FDIV not yet implemented."
	310 NotImplemented "Instruction FDIV not yet implemented."
	311 Multiply S0, S0, S11
	312 Multiply S1, S1, S10
	313 Multiply S2, S2, S9
	314 Multiply S3, S3, S8
	315 Move X0, X31
	316 Call 0x1E44664
	317 Move W8, 392
	318 NotImplemented "Instruction MADD not yet implemented."
	319 Move [X8+196], W0
	320 Move X23, [X19]
	321 Compare X23, 0
	322 JumpIfEqual {873}
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Move W8, [X23+24]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X8, [X22+144]
	327 Compare X8, 0
	328 JumpIfEqual {873}
	329 Move S0, [X8+28]
	330 Move S1, [X8+32]
	331 Move S2, [X8+36]
	332 Move S3, [X8+40]
	333 Move X0, X31
	334 Multiply S0, S11, S0
	335 Multiply S1, S10, S1
	336 Multiply S2, S9, S2
	337 Multiply S3, S8, S3
	338 Call 0x1E44664
	339 Move W8, 392
	340 NotImplemented "Instruction MADD not yet implemented."
	341 Move [X8+156], W0
	342 Move X23, [X19]
	343 Compare X23, 0
	344 JumpIfEqual {873}
	345 NotImplemented "Instruction LDRSW not yet implemented."
	346 Move W8, [X23+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X8, [X22+144]
	349 Compare X8, 0
	350 JumpIfEqual {873}
	351 Move S0, [X8+44]
	352 Move S1, [X8+48]
	353 Move S2, [X8+52]
	354 Move S3, [X8+56]
	355 Move X0, X31
	356 Multiply S0, S11, S0
	357 Multiply S1, S10, S1
	358 Multiply S2, S9, S2
	359 Multiply S3, S8, S3
	360 Call 0x1E44664
	361 Move W8, 392
	362 NotImplemented "Instruction MADD not yet implemented."
	363 Move [X8+236], W0
	364 Move X23, [X19]
	365 Compare X23, 0
	366 JumpIfEqual {873}
	367 NotImplemented "Instruction LDRSW not yet implemented."
	368 Move W8, [X23+24]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X8, [X22+144]
	371 Compare X8, 0
	372 JumpIfEqual {873}
	373 Move S0, [X8+76]
	374 Move S1, [X8+80]
	375 Move S2, [X8+84]
	376 Move S3, [X8+88]
	377 Move X0, X31
	378 Multiply S0, S11, S0
	379 Multiply S1, S10, S1
	380 Multiply S2, S9, S2
	381 Multiply S3, S8, S3
	382 Call 0x1E44664
	383 Move W8, 392
	384 NotImplemented "Instruction MADD not yet implemented."
	385 Move [X8+276], W0
	386 Move X0, [X25]
	387 Move X22, [X20+648]
	388 Move W8, [X0+224]
	389 Compare W8, 0
	390 JumpIfNotEqual {392}
	391 Call 0x1C17DFC
	392 Move X0, X22
	393 Move X1, X31
	394 Move X2, X31
	395 Call Object.op_Inequality, X0, X1
	396 Move TEMP, X0
	397 And TEMP, TEMP, 1
	398 Compare TEMP, 1
	399 JumpIfNotEqual {700}
	400 Move X22, [X19]
	401 Compare X22, 0
	402 JumpIfEqual {873}
	403 NotImplemented "Instruction LDRSW not yet implemented."
	404 Move W8, [X22+24]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move W8, [X20+696]
	407 Compare W8, 0
	408 JumpIfEqual {579}
	409 Move W8, 392
	410 NotImplemented "Instruction MADD not yet implemented."
	411 Add X21, X21, 196
	412 Move W9, [X21]
	413 Move X8, [X20+648]
	414 Compare X8, 0
	415 JumpIfEqual {873}
	416 Move X10, X9
	417 ShiftRight X10, 24
	418 And X10, X10, 0x7FFFFFFF
	419 NotImplemented "Instruction UCVTF not yet implemented."
	420 Move W10, W9
	421 ShiftRight W10, 16
	422 And W10, W10, 0x7FFFFF
	423 Move W11, 0x437F0000
	424 NotImplemented "Instruction UCVTF not yet implemented."
	425 Move W10, W9
	426 ShiftRight W10, 8
	427 And W10, W10, 0x7FFF
	428 And W9, W9, 255
	429 Move S1, W11
	430 NotImplemented "Instruction UCVTF not yet implemented."
	431 Move S3, [X8+60]
	432 Move S4, [X8+64]
	433 NotImplemented "Instruction FDIV not yet implemented."
	434 NotImplemented "Instruction FDIV not yet implemented."
	435 Move S6, [X8+68]
	436 Move S16, [X8+72]
	437 NotImplemented "Instruction UCVTF not yet implemented."
	438 NotImplemented "Instruction FDIV not yet implemented."
	439 NotImplemented "Instruction FDIV not yet implemented."
	440 Multiply S0, S0, S3
	441 Multiply S1, S5, S4
	442 Multiply S2, S2, S6
	443 Multiply S3, S7, S16
	444 Move X0, X31
	445 Call 0x1E44664
	446 Move [X21], W0
	447 Move X8, [X19]
	448 Compare X8, 0
	449 JumpIfEqual {873}
	450 NotImplemented "Instruction LDRSW not yet implemented."
	451 Move W10, [X8+24]
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Move W10, 392
	454 NotImplemented "Instruction MADD not yet implemented."
	455 Add X21, X21, 156
	456 Move W9, [X21]
	457 Move X8, [X20+648]
	458 Compare X8, 0
	459 JumpIfEqual {873}
	460 Move X10, X9
	461 ShiftRight X10, 24
	462 And X10, X10, 0x7FFFFFFF
	463 NotImplemented "Instruction UCVTF not yet implemented."
	464 Move W10, W9
	465 ShiftRight W10, 16
	466 And W10, W10, 0x7FFFFF
	467 Move W11, 0x437F0000
	468 NotImplemented "Instruction UCVTF not yet implemented."
	469 Move W10, W9
	470 ShiftRight W10, 8
	471 And W10, W10, 0x7FFF
	472 And W9, W9, 255
	473 Move S1, W11
	474 NotImplemented "Instruction UCVTF not yet implemented."
	475 Move S3, [X8+28]
	476 Move S4, [X8+32]
	477 NotImplemented "Instruction FDIV not yet implemented."
	478 NotImplemented "Instruction FDIV not yet implemented."
	479 Move S6, [X8+36]
	480 Move S16, [X8+40]
	481 NotImplemented "Instruction UCVTF not yet implemented."
	482 NotImplemented "Instruction FDIV not yet implemented."
	483 NotImplemented "Instruction FDIV not yet implemented."
	484 Multiply S0, S0, S3
	485 Multiply S1, S5, S4
	486 Multiply S2, S2, S6
	487 Multiply S3, S7, S16
	488 Move X0, X31
	489 Call 0x1E44664
	490 Move [X21], W0
	491 Move X8, [X19]
	492 Compare X8, 0
	493 JumpIfEqual {873}
	494 NotImplemented "Instruction LDRSW not yet implemented."
	495 Move W10, [X8+24]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Move W10, 392
	498 NotImplemented "Instruction MADD not yet implemented."
	499 Add X21, X21, 236
	500 Move W9, [X21]
	501 Move X8, [X20+648]
	502 Compare X8, 0
	503 JumpIfEqual {873}
	504 Move X10, X9
	505 ShiftRight X10, 24
	506 And X10, X10, 0x7FFFFFFF
	507 NotImplemented "Instruction UCVTF not yet implemented."
	508 Move W10, W9
	509 ShiftRight W10, 16
	510 And W10, W10, 0x7FFFFF
	511 Move W11, 0x437F0000
	512 NotImplemented "Instruction UCVTF not yet implemented."
	513 Move W10, W9
	514 ShiftRight W10, 8
	515 And W10, W10, 0x7FFF
	516 And W9, W9, 255
	517 Move S1, W11
	518 NotImplemented "Instruction UCVTF not yet implemented."
	519 Move S3, [X8+44]
	520 Move S4, [X8+48]
	521 NotImplemented "Instruction FDIV not yet implemented."
	522 NotImplemented "Instruction FDIV not yet implemented."
	523 Move S6, [X8+52]
	524 Move S16, [X8+56]
	525 NotImplemented "Instruction UCVTF not yet implemented."
	526 NotImplemented "Instruction FDIV not yet implemented."
	527 NotImplemented "Instruction FDIV not yet implemented."
	528 Multiply S0, S0, S3
	529 Multiply S1, S5, S4
	530 Multiply S2, S2, S6
	531 Multiply S3, S7, S16
	532 Move X0, X31
	533 Call 0x1E44664
	534 Move [X21], W0
	535 Move X9, [X19]
	536 Compare X9, 0
	537 JumpIfEqual {873}
	538 NotImplemented "Instruction LDRSW not yet implemented."
	539 Move W8, [X9+24]
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Move X8, [X20+648]
	542 Compare X8, 0
	543 JumpIfEqual {873}
	544 Move W11, 392
	545 NotImplemented "Instruction MADD not yet implemented."
	546 Move W10, [X9+276]
	547 Move W11, 0x437F0000
	548 Move S2, W11
	549 Move S0, [X8+76]
	550 Move S1, [X8+80]
	551 Move X11, X10
	552 ShiftRight X11, 24
	553 And X11, X11, 0x7FFFFFFF
	554 NotImplemented "Instruction UCVTF not yet implemented."
	555 Move W11, W10
	556 ShiftRight W11, 16
	557 And W11, W11, 0x7FFFFF
	558 NotImplemented "Instruction UCVTF not yet implemented."
	559 Move W11, W10
	560 ShiftRight W11, 8
	561 And W11, W11, 0x7FFF
	562 And W10, W10, 255
	563 NotImplemented "Instruction UCVTF not yet implemented."
	564 NotImplemented "Instruction UCVTF not yet implemented."
	565 NotImplemented "Instruction FDIV not yet implemented."
	566 NotImplemented "Instruction FDIV not yet implemented."
	567 NotImplemented "Instruction FDIV not yet implemented."
	568 NotImplemented "Instruction FDIV not yet implemented."
	569 Move S6, [X8+84]
	570 Move S7, [X8+88]
	571 Multiply S0, S2, S0
	572 Multiply S1, S5, S1
	573 Move X0, X31
	574 Multiply S2, S4, S6
	575 Multiply S3, S3, S7
	576 Add X21, X9, 276
	577 Call 0x1E44664
	578 Move [X21], W0
	579 Move X8, [X20+648]
	580 Move [X31+4], S12
	581 Compare X8, 0
	582 JumpIfEqual {873}
	583 Move S13, [X8+60]
	584 Move S14, [X8+64]
	585 Move S15, [X8+68]
	586 Move S8, [X8+72]
	587 And W8, W21, 255
	588 NotImplemented "Instruction UCVTF not yet implemented."
	589 Move W8, 0x437F0000
	590 Move S1, W8
	591 Move X8, 0x4A2000
	592 Move X8, [X8+2888]
	593 Move W9, W21
	594 ShiftRight W9, 8
	595 And W9, W9, 0x7FFF
	596 Move W10, W21
	597 ShiftRight W10, 16
	598 And W10, W10, 0x7FFFFF
	599 NotImplemented "Instruction FDIV not yet implemented."
	600 Move X0, [X8]
	601 NotImplemented "Instruction UCVTF not yet implemented."
	602 NotImplemented "Instruction FDIV not yet implemented."
	603 NotImplemented "Instruction UCVTF not yet implemented."
	604 Move W8, [X0+224]
	605 And W9, W24, 255
	606 NotImplemented "Instruction FDIV not yet implemented."
	607 NotImplemented "Instruction UCVTF not yet implemented."
	608 NotImplemented "Instruction FDIV not yet implemented."
	609 Compare W8, 0
	610 JumpIfNotEqual {612}
	611 Call 0x1C17DFC
	612 Move V0, V13
	613 Move V1, V14
	614 Move V2, V15
	615 Move V3, V8
	616 Move V4, V10
	617 Move V5, V9
	618 Move V6, V11
	619 Move V7, V12
	620 Move X0, X31
	621 Call TextGeneratorUtilities.MinAlpha, X0, X1
	622 Move X0, X31
	623 Call 0x1E44664
	624 Move W8, 392
	625 NotImplemented "Instruction MADD not yet implemented."
	626 Move [X8+196], W0
	627 Move X21, [X19]
	628 Compare X21, 0
	629 JumpIfEqual {873}
	630 NotImplemented "Instruction LDRSW not yet implemented."
	631 Move W8, [X21+24]
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Move X8, [X20+648]
	634 Compare X8, 0
	635 JumpIfEqual {873}
	636 Move S0, [X8+28]
	637 Move S1, [X8+32]
	638 Move S2, [X8+36]
	639 Move S3, [X8+40]
	640 Move V4, V10
	641 Move V5, V9
	642 Move V6, V11
	643 Move V7, V12
	644 Move X0, X31
	645 Call TextGeneratorUtilities.MinAlpha, X0, X1
	646 Move X0, X31
	647 Call 0x1E44664
	648 Move W8, 392
	649 NotImplemented "Instruction MADD not yet implemented."
	650 Move [X8+156], W0
	651 Move X21, [X19]
	652 Compare X21, 0
	653 JumpIfEqual {873}
	654 NotImplemented "Instruction LDRSW not yet implemented."
	655 Move W8, [X21+24]
	656 NotImplemented "Instruction CMP not yet implemented."
	657 Move X8, [X20+648]
	658 Compare X8, 0
	659 JumpIfEqual {873}
	660 Move S0, [X8+44]
	661 Move S1, [X8+48]
	662 Move S2, [X8+52]
	663 Move S3, [X8+56]
	664 Move V4, V10
	665 Move V5, V9
	666 Move V6, V11
	667 Move V7, V12
	668 Move X0, X31
	669 Call TextGeneratorUtilities.MinAlpha, X0, X1
	670 Move X0, X31
	671 Call 0x1E44664
	672 Move W8, 392
	673 NotImplemented "Instruction MADD not yet implemented."
	674 Move [X8+236], W0
	675 Move X21, [X19]
	676 Compare X21, 0
	677 JumpIfEqual {873}
	678 NotImplemented "Instruction LDRSW not yet implemented."
	679 Move W8, [X21+24]
	680 NotImplemented "Instruction CMP not yet implemented."
	681 Move X8, [X20+648]
	682 Compare X8, 0
	683 JumpIfEqual {873}
	684 Move S0, [X8+76]
	685 Move S1, [X8+80]
	686 Move S2, [X8+84]
	687 Move S3, [X8+88]
	688 Move V4, V10
	689 Move V5, V9
	690 Move V6, V11
	691 Move V7, V12
	692 Move X0, X31
	693 Call TextGeneratorUtilities.MinAlpha, X0, X1
	694 Move X0, X31
	695 Call 0x1E44664
	696 Move V12, [X31+4]
	697 Move W8, 392
	698 NotImplemented "Instruction MADD not yet implemented."
	699 Move [X8+276], W0
	700 Move X8, [X19]
	701 Compare X8, 0
	702 JumpIfEqual {873}
	703 NotImplemented "Instruction LDRSW not yet implemented."
	704 Move W10, [X8+24]
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Move W10, 392
	707 NotImplemented "Instruction MADD not yet implemented."
	708 Move X0, [X8+56]
	709 Compare X0, 0
	710 JumpIfNotEqual {717}
	711 Move X8, [X20+5512]
	712 Compare X8, 0
	713 JumpIfEqual {873}
	714 Move X0, [X8+32]
	715 Compare X0, 0
	716 JumpIfEqual {873}
	717 Move X21, 0x45B000
	718 Move X21, [X21+1544]
	719 Move X1, X31
	720 Call Glyph.get_glyphRect, X0
	721 Move X8, X0
	722 Move X0, [X21]
	723 Move [X31+8], X8
	724 Move [X31+16], X1
	725 Move W8, [X0+224]
	726 Compare W8, 0
	727 JumpIfNotEqual {729}
	728 Call 0x1C17DFC
	729 Add X0, X31, 8
	730 Move X1, X31
	731 Call GlyphRect.get_x, X0
	732 Move X8, [X20+104]
	733 Compare X8, 0
	734 JumpIfEqual {873}
	735 Move W21, W0
	736 Move X0, X8
	737 Move X1, X31
	738 Call FontAsset.get_atlasWidth, X0
	739 Move W24, W0
	740 Add X0, X31, 8
	741 Move X1, X31
	742 Call GlyphRect.get_y, X0
	743 Move X8, [X20+104]
	744 Compare X8, 0
	745 JumpIfEqual {873}
	746 Move W26, W0
	747 Move X0, X8
	748 Move X1, X31
	749 Call FontAsset.get_atlasHeight, X0
	750 Move W28, W0
	751 Add X0, X31, 8
	752 Move X1, X31
	753 Call GlyphRect.get_y, X0
	754 Move W23, W0
	755 Add X0, X31, 8
	756 Move X1, X31
	757 Call GlyphRect.get_height, X0
	758 Move X8, [X20+104]
	759 Compare X8, 0
	760 JumpIfEqual {873}
	761 Move W25, W0
	762 Move X0, X8
	763 Move X1, X31
	764 Call FontAsset.get_atlasHeight, X0
	765 Move W27, W0
	766 Add X0, X31, 8
	767 Move X1, X31
	768 Call GlyphRect.get_x, X0
	769 Move W22, W0
	770 Add X0, X31, 8
	771 Move X1, X31
	772 Call GlyphRect.get_width, X0
	773 Move X8, [X20+104]
	774 Compare X8, 0
	775 JumpIfEqual {873}
	776 Move W20, W0
	777 Move X0, X8
	778 Move X1, X31
	779 Call FontAsset.get_atlasWidth, X0
	780 Move X8, [X19]
	781 Compare X8, 0
	782 JumpIfEqual {873}
	783 NotImplemented "Instruction LDRSW not yet implemented."
	784 Move W10, [X8+24]
	785 NotImplemented "Instruction CMP not yet implemented."
	786 NotImplemented "Instruction SCVTF not yet implemented."
	787 NotImplemented "Instruction SCVTF not yet implemented."
	788 NotImplemented "Instruction SCVTF not yet implemented."
	789 NotImplemented "Instruction SCVTF not yet implemented."
	790 Move W10, 392
	791 Subtract S0, S0, S12
	792 Subtract S4, S2, S12
	793 NotImplemented "Instruction MADD not yet implemented."
	794 NotImplemented "Instruction FDIV not yet implemented."
	795 NotImplemented "Instruction FDIV not yet implemented."
	796 Move [X8+172], S2
	797 Move [X8+180], S0
	798 Move [X8+180], W31
	799 Move [X8+184], W31
	800 Move X8, [X19]
	801 Compare X8, 0
	802 JumpIfEqual {873}
	803 NotImplemented "Instruction LDRSW not yet implemented."
	804 Move W10, [X8+24]
	805 NotImplemented "Instruction CMP not yet implemented."
	806 NotImplemented "Instruction SCVTF not yet implemented."
	807 Move S1, W31
	808 Add S3, S3, S12
	809 NotImplemented "Instruction SCVTF not yet implemented."
	810 Add S3, S3, S1
	811 NotImplemented "Instruction SCVTF not yet implemented."
	812 Move W10, 392
	813 Add S3, S3, S4
	814 NotImplemented "Instruction MADD not yet implemented."
	815 NotImplemented "Instruction FDIV not yet implemented."
	816 Move [X8+132], S2
	817 Move [X8+140], S3
	818 Move [X8+140], W31
	819 Move [X8+144], W31
	820 Move X8, [X19]
	821 Compare X8, 0
	822 JumpIfEqual {873}
	823 NotImplemented "Instruction LDRSW not yet implemented."
	824 Move W10, [X8+24]
	825 NotImplemented "Instruction CMP not yet implemented."
	826 NotImplemented "Instruction SCVTF not yet implemented."
	827 Add S2, S2, S12
	828 NotImplemented "Instruction SCVTF not yet implemented."
	829 Add S1, S2, S1
	830 NotImplemented "Instruction SCVTF not yet implemented."
	831 Move W10, 392
	832 Add S1, S1, S4
	833 NotImplemented "Instruction MADD not yet implemented."
	834 NotImplemented "Instruction FDIV not yet implemented."
	835 Move [X8+212], S1
	836 Move [X8+220], S3
	837 Move [X8+220], W31
	838 Move [X8+224], W31
	839 Move X8, [X19]
	840 Compare X8, 0
	841 JumpIfEqual {873}
	842 NotImplemented "Instruction LDRSW not yet implemented."
	843 Move W10, [X8+24]
	844 NotImplemented "Instruction CMP not yet implemented."
	845 Move X20, [X31+176]
	846 Move X19, [X31+184]
	847 Move X22, [X31+160]
	848 Move X21, [X31+168]
	849 Move X24, [X31+144]
	850 Move X23, [X31+152]
	851 Move X26, [X31+128]
	852 Move X25, [X31+136]
	853 Move X28, [X31+112]
	854 Move X27, [X31+120]
	855 Move X29, [X31+96]
	856 Move X30, [X31+104]
	857 Move D9, [X31+80]
	858 Move D8, [X31+88]
	859 Move D11, [X31+64]
	860 Move D10, [X31+72]
	861 Move D13, [X31+48]
	862 Move D12, [X31+56]
	863 Move D15, [X31+32]
	864 Move D14, [X31+40]
	865 Move W10, 392
	866 NotImplemented "Instruction MADD not yet implemented."
	867 Move [X8+252], S1
	868 Move [X8+260], S0
	869 Move [X8+264], W31
	870 Move [X8+260], W31
	871 Add X31, X31, 192
	872 Return 
	873 Call 0x1C17F20
	874 Call 0x1C17F28

Method: System.Void SaveSpriteVertexInfo(UnityEngine.Color32 vertexColor, UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC1308 CMP W15, W8
	0x03CC130C B.CS 0x3CC16CC
	0x03CC1310 LDR X8, [X22 + 0x58]
	0x03CC1314 CBZ X8, 0x3CC16D0
	0x03CC1318 LDRSW X9, [X21 + 0x78]
	0x03CC131C LDR W10, [X8 + 0x18]
	0x03CC1320 CMP W9, W10
	0x03CC1324 B.CS 0x3CC16CC
	0x03CC1328 ADRP X10, 0x4A0000
	0x03CC132C LDR X10, [X10 + 0xB48]
	0x03CC1330 LDR X0, [X10]
	0x03CC1334 LDR X10, [X31 + 0x20]
	0x03CC1338 LDR V11, [X10]
	0x03CC133C MOVZ W10, 0x50
	0x03CC1340 MADD X8, X9, X10, X8
	0x03CC1344 LDR W9, [X0 + 0xE0]
	0x03CC1348 LDR X19, [X8 + 0x48]
	0x03CC134C CBNZ W9, 0x3CC1354
	0x03CC1350 BL 0x1C16DFC
	0x03CC1354 FMOV S0, W31
	0x03CC1358 FMOV S1, W31
	0x03CC135C MOV V2.16B, V8.16B
	0x03CC1360 MOV X0, X31
	0x03CC1364 BL 0x3CC63E8
	0x03CC1368 CBZ X19, 0x3CC16D0
	0x03CC136C LDR W8, [X19 + 0x18]
	0x03CC1370 CMP W23, W8
	0x03CC1374 B.CS 0x3CC16CC
	0x03CC1378 ADD X8, X19, X24, 0x3, LSL
	0x03CC137C STP S0, S1, [X8 + 0x20]
	0x03CC1380 FMOV S0, W31
	0x03CC1384 FMOV S1, 1
	0x03CC1388 MOV V2.16B, V8.16B
	0x03CC138C MOV X0, X31
	0x03CC1390 BL 0x3CC63E8
	0x03CC1394 LDR W8, [X19 + 0x18]
	0x03CC1398 LDR X9, [X31 + 0x80]
	0x03CC139C CMP W9, W8
	0x03CC13A0 B.CS 0x3CC16CC
	0x03CC13A4 FMOV S2, 1
	0x03CC13A8 FSUB S3, S11, S10
	0x03CC13AC FDIV S11, S2, S9
	0x03CC13B0 ADD X8, X19, X9, 0x3, LSL
	0x03CC13B4 FMUL S9, S11, S3
	0x03CC13B8 STP S0, S1, [X8 + 0x20]
	0x03CC13BC FMOV S1, 1
	0x03CC13C0 MOV V0.16B, V9.16B
	0x03CC13C4 MOV V2.16B, V8.16B
	0x03CC13C8 MOV X0, X31
	0x03CC13CC BL 0x3CC63E8
	0x03CC13D0 LDR W8, [X19 + 0x18]
	0x03CC13D4 LDR X9, [X31 + 0x78]
	0x03CC13D8 CMP W9, W8
	0x03CC13DC B.CS 0x3CC16CC
	0x03CC13E0 ADD X8, X19, X9, 0x3, LSL
	0x03CC13E4 STP S0, S1, [X8 + 0x20]
	0x03CC13E8 FMOV S1, W31
	0x03CC13EC MOV V0.16B, V9.16B
	0x03CC13F0 MOV V2.16B, V8.16B
	0x03CC13F4 MOV X0, X31
	0x03CC13F8 BL 0x3CC63E8
	0x03CC13FC LDR W8, [X19 + 0x18]
	0x03CC1400 LDR X9, [X31 + 0x70]
	0x03CC1404 CMP W9, W8
	0x03CC1408 B.CS 0x3CC16CC
	0x03CC140C ADD X8, X19, X9, 0x3, LSL
	0x03CC1410 STP S0, S1, [X8 + 0x20]
	0x03CC1414 LDR W8, [X25 + 0x18]
	0x03CC1418 LDR X9, [X31 + 0x188]
	0x03CC141C CMP W9, W8
	0x03CC1420 LDR X9, [X31 + 0x88]
	0x03CC1424 B.CS 0x3CC16CC
	0x03CC1428 CMP W9, W8
	0x03CC142C B.CS 0x3CC16CC
	0x03CC1430 LDR X8, [X31 + 0x18]
	0x03CC1434 FMOV S1, W31
	0x03CC1438 MOV V2.16B, V8.16B
	0x03CC143C MOV X0, X31
	0x03CC1440 LDR V0, [X8]
	0x03CC1444 LDR X8, [X31 + 0x10]
	0x03CC1448 FSUB S0, S0, S10
	0x03CC144C LDR V12, [X8]
	0x03CC1450 FMUL S9, S11, S0
	0x03CC1454 MOV V0.16B, V9.16B
	0x03CC1458 BL 0x3CC63E8
	0x03CC145C LDR W8, [X19 + 0x18]
	0x03CC1460 LDR X9, [X31 + 0x188]
	0x03CC1464 CMP W9, W8
	0x03CC1468 B.CS 0x3CC16CC
	0x03CC146C ADD X8, X19, X9, 0x3, LSL
	0x03CC1470 STP S0, S1, [X8 + 0x20]
	0x03CC1474 FMOV S1, 1
	0x03CC1478 MOV V0.16B, V9.16B
	0x03CC147C MOV V2.16B, V8.16B
	0x03CC1480 MOV X0, X31
	0x03CC1484 BL 0x3CC63E8
	0x03CC1488 LDR W8, [X19 + 0x18]
	0x03CC148C LDR X9, [X31 + 0x68]
	0x03CC1490 CMP W9, W8
	0x03CC1494 B.CS 0x3CC16CC
	0x03CC1498 FSUB S2, S12, S10
	0x03CC149C ADD X8, X19, X9, 0x3, LSL
	0x03CC14A0 FMUL S9, S11, S2
	0x03CC14A4 STP S0, S1, [X8 + 0x20]
	0x03CC14A8 FMOV S1, 1
	0x03CC14AC MOV V0.16B, V9.16B
	0x03CC14B0 MOV V2.16B, V8.16B
	0x03CC14B4 MOV X0, X31
	0x03CC14B8 BL 0x3CC63E8
	0x03CC14BC LDR W8, [X19 + 0x18]
	0x03CC14C0 LDR X9, [X31 + 0x88]
	0x03CC14C4 CMP W9, W8
	0x03CC14C8 B.CS 0x3CC16CC
	0x03CC14CC ADD X8, X19, X9, 0x3, LSL
	0x03CC14D0 STP S0, S1, [X8 + 0x20]
	0x03CC14D4 FMOV S1, W31
	0x03CC14D8 MOV V0.16B, V9.16B
	0x03CC14DC MOV V2.16B, V8.16B
	0x03CC14E0 MOV X0, X31
	0x03CC14E4 BL 0x3CC63E8
	0x03CC14E8 LDR W8, [X19 + 0x18]
	0x03CC14EC LDR X9, [X31 + 0x60]
	0x03CC14F0 CMP W9, W8
	0x03CC14F4 B.CS 0x3CC16CC
	0x03CC14F8 ADD X8, X19, X9, 0x3, LSL
	0x03CC14FC STP S0, S1, [X8 + 0x20]
	0x03CC1500 LDR W8, [X25 + 0x18]
	0x03CC1504 CMP W29, W8
	0x03CC1508 B.CS 0x3CC16CC
	0x03CC150C LDR X8, [X31 + 0x8]
	0x03CC1510 FMOV S1, W31
	0x03CC1514 MOV V2.16B, V8.16B
	0x03CC1518 MOV X0, X31
	0x03CC151C LDR V0, [X8]
	0x03CC1520 FSUB S0, S0, S10
	0x03CC1524 FMUL S9, S11, S0
	0x03CC1528 MOV V0.16B, V9.16B
	0x03CC152C BL 0x3CC63E8
	0x03CC1530 LDR W8, [X19 + 0x18]
	0x03CC1534 CMP W29, W8
	0x03CC1538 B.CS 0x3CC16CC
	0x03CC153C ADD X8, X19, X29, 0x3, LSL
	0x03CC1540 STP S0, S1, [X8 + 0x20]
	0x03CC1544 FMOV S1, 1
	0x03CC1548 MOV V0.16B, V9.16B
	0x03CC154C MOV V2.16B, V8.16B
	0x03CC1550 MOV X0, X31
	0x03CC1554 BL 0x3CC63E8
	0x03CC1558 LDR W8, [X19 + 0x18]
	0x03CC155C CMP W28, W8
	0x03CC1560 B.CS 0x3CC16CC
	0x03CC1564 ADD X8, X19, X28, 0x3, LSL
	0x03CC1568 STP S0, S1, [X8 + 0x20]
	0x03CC156C FMOV S0, 1
	0x03CC1570 FMOV S1, 1
	0x03CC1574 MOV V2.16B, V8.16B
	0x03CC1578 MOV X0, X31
	0x03CC157C BL 0x3CC63E8
	0x03CC1580 LDR W8, [X19 + 0x18]
	0x03CC1584 CMP W27, W8
	0x03CC1588 B.CS 0x3CC16CC
	0x03CC158C ADD X8, X19, X27, 0x3, LSL
	0x03CC1590 STP S0, S1, [X8 + 0x20]
	0x03CC1594 FMOV S0, 1
	0x03CC1598 FMOV S1, W31
	0x03CC159C MOV V2.16B, V8.16B
	0x03CC15A0 MOV X0, X31
	0x03CC15A4 BL 0x3CC63E8
	0x03CC15A8 LDR W8, [X19 + 0x18]
	0x03CC15AC CMP W26, W8
	0x03CC15B0 B.CS 0x3CC16CC
	0x03CC15B4 ADD X8, X19, X26, 0x3, LSL
	0x03CC15B8 STP S0, S1, [X8 + 0x20]
	0x03CC15BC LDRB W9, [X21 + 0x1AB]
	0x03CC15C0 LDR X8, [X22 + 0x58]
	0x03CC15C4 UBFM X10, X20, 0x18, 0x3F
	0x03CC15C8 CMP W9, W10, UXTB
	0x03CC15CC CSEL W10, W9, W10, CC
	0x03CC15D0 CBZ X8, 0x3CC16D0
	0x03CC15D4 LDRSW X9, [X21 + 0x78]
	0x03CC15D8 LDR W11, [X8 + 0x18]
	0x03CC15DC CMP W9, W11
	0x03CC15E0 B.CS 0x3CC16CC
	0x03CC15E4 MOVZ W11, 0x50
	0x03CC15E8 MADD X8, X9, X11, X8
	0x03CC15EC LDR X8, [X8 + 0x50]
	0x03CC15F0 CBZ X8, 0x3CC16D0
	0x03CC15F4 MOV X9, X31
	0x03CC15F8 BFM W20, W10, 0x8, 0x7
	0x03CC15FC UBFM X10, X23, 0x20, 0x1F
	0x03CC1600 MOVZ X11, 0x1
	0x03CC1604 LDR W12, [X8 + 0x18]
	0x03CC1608 ADD X13, X23, X9
	0x03CC160C CMP X13, X12
	0x03CC1610 B.CS 0x3CC16CC
	0x03CC1614 ADD X9, X9, 0x1
	0x03CC1618 ADD X12, X8, X10, 0x1E, ASR
	0x03CC161C CMP X9, 0xC
	0x03CC1620 ADD X10, X10, X11
	0x03CC1624 STR W20, [X12 + 0x20]
	0x03CC1628 B.NE 0x3CC1604
	0x03CC162C LDR X8, [X22 + 0x58]
	0x03CC1630 CBZ X8, 0x3CC16D0
	0x03CC1634 LDRSW X9, [X21 + 0x78]
	0x03CC1638 LDR W10, [X8 + 0x18]
	0x03CC163C CMP W9, W10
	0x03CC1640 B.CS 0x3CC16CC
	0x03CC1644 MOVZ W10, 0x50
	0x03CC1648 MADD X8, X9, X10, X8
	0x03CC164C LDR W9, [X8 + 0x20]
	0x03CC1650 ADD W9, W9, 0xC
	0x03CC1654 STR W9, [X8 + 0x20]
	0x03CC1658 B 0x3CC169C
	0x03CC165C CBZ X22, 0x3CC16D0
	0x03CC1660 LDR X8, [X22 + 0x68]
	0x03CC1664 CBZ X8, 0x3CC16D0
	0x03CC1668 LDRB W8, [X8 + 0x89]
	0x03CC166C CBZ W8, 0x3CC169C
	0x03CC1670 ADRP X8, 0x432000
	0x03CC1674 LDR X8, [X8 + 0xA28]
	0x03CC1678 LDR X0, [X8]
	0x03CC167C LDR W8, [X0 + 0xE0]
	0x03CC1680 CBNZ W8, 0x3CC1688
	0x03CC1684 BL 0x1C16DFC
	0x03CC1688 ADRP X8, 0x4A0000
	0x03CC168C LDR X8, [X8 + 0xD90]
	0x03CC1690 MOV X1, X31
	0x03CC1694 LDR X0, [X8]
	0x03CC1698 BL 0x3C06A04
	0x03CC169C ADD X31, X31, 0x180
	0x03CC16A0 LDP X20, X19, [X31 + 0x90]
	0x03CC16A4 LDP X22, X21, [X31 + 0x80]
	0x03CC16A8 LDP X24, X23, [X31 + 0x70]
	0x03CC16AC LDP X26, X25, [X31 + 0x60]
	0x03CC16B0 LDP X28, X27, [X31 + 0x50]
	0x03CC16B4 LDP X29, X30, [X31 + 0x40]
	0x03CC16B8 LDP D9, D8, [X31 + 0x30]
	0x03CC16BC LDP D11, D10, [X31 + 0x20]
	0x03CC16C0 LDP D13, D12, [X31 + 0x10]
	0x03CC16C4 LDR V14, [X31], #0xA0
	0x03CC16C8 RET
	0x03CC16CC BL 0x1C16F28
	0x03CC16D0 BL 0x1C16F20
	0x03CC16D4 SUB X31, X31, 0x40
	0x03CC16D8 STP X30, X19, [X31 + 0x30]
	0x03CC16DC STRB W31, [X31 + 0x2C]
	0x03CC16E0 LDR X8, [X0 + 0x68]
	0x03CC16E4 MOV X19, X0
	0x03CC16E8 CBZ X8, 0x3CC16F4
	0x03CC16EC CBNZ X1, 0x3CC16FC
	0x03CC16F0 B 0x3CC1754
	0x03CC16F4 CBZ X1, 0x3CC1754
	0x03CC16F8 LDR X8, [X1 + 0x40]
	0x03CC16FC LDR W3, [X19 + 0x124]
	0x03CC1700 LDR W4, [X19 + 0x134]
	0x03CC1704 ADD X5, X31, 0x2C
	0x03CC1708 MOVZ W0, 0x5F
	0x03CC170C MOV X1, X8
	0x03CC1710 MOV W2, W31
	0x03CC1714 MOV X6, X31
	0x03CC1718 BL 0x3CA7F78
	0x03CC171C CBZ X0, 0x3CC1748
	0x03CC1720 LDR W2, [X19 + 0x78]
	0x03CC1724 MOV X1, X0
	0x03CC1728 MOVI V0.2D, 0x0
	0x03CC172C ADD X0, X31, 0x0
	0x03CC1730 MOV X3, X31
	0x03CC1734 STP V0, V0, [X31]
	0x03CC1738 BL 0x3CC5274
	0x03CC173C LDP V1, V0, [X31]
	0x03CC1740 STR V0, [X19 + 0x1A3]
	0x03CC1744 STR V1, [X19 + 0x1A2]
	0x03CC1748 LDP X30, X19, [X31 + 0x30]
	0x03CC174C ADD X31, X31, 0x40
	0x03CC1750 RET
	0x03CC1754 BL 0x1C16F20
	0x03CC1758 SUB X31, X31, 0xB0
	0x03CC175C STP D13, D12, [X31 + 0x20]
	0x03CC1760 STP D11, D10, [X31 + 0x30]
	0x03CC1764 STP D9, D8, [X31 + 0x40]
	0x03CC1768 STP X29, X30, [X31 + 0x50]
	0x03CC176C STP X28, X27, [X31 + 0x60]
	0x03CC1770 STP X26, X25, [X31 + 0x70]
	0x03CC1774 STP X24, X23, [X31 + 0x80]
	0x03CC1778 STP X22, X21, [X31 + 0x90]
	0x03CC177C STP X20, X19, [X31 + 0xA0]
	0x03CC1780 ADRP X19, 0x726000
	0x03CC1784 LDRB W8, [X19 + 0x341]
	0x03CC1788 MOV X25, X3
	0x03CC178C MOV X22, X2
	0x03CC1790 MOV X26, X1
	0x03CC1794 MOV V11.16B, V5.16B
	0x03CC1798 MOV V8.16B, V4.16B
	0x03CC179C MOV V10.16B, V3.16B
	0x03CC17A0 MOV V13.16B, V2.16B
	0x03CC17A4 MOV V9.16B, V1.16B
	0x03CC17A8 MOV V12.16B, V0.16B
	0x03CC17AC MOV X21, X0
	0x03CC17B0 TBNZ X8, 0x0, 0x3CC17EC
	0x03CC17B4 ADRP X0, 0x432000
	0x03CC17B8 LDR X0, [X0 + 0xA28]
	0x03CC17BC BL 0x1C16CF4
	0x03CC17C0 ADRP X0, 0x45A000
	0x03CC17C4 LDR X0, [X0 + 0x608]
	0x03CC17C8 BL 0x1C16CF4
	0x03CC17CC ADRP X0, 0x4A0000
	0x03CC17D0 LDR X0, [X0 + 0x6C8]
	0x03CC17D4 BL 0x1C16CF4
	0x03CC17D8 ADRP X0, 0x498000
	0x03CC17DC LDR X0, [X0 + 0x320]
	0x03CC17E0 BL 0x1C16CF4
	0x03CC17E4 MOVZ W8, 0x1
	0x03CC17E8 STRB W8, [X19 + 0x341]
	0x03CC17EC MOV X0, X21
	0x03CC17F0 MOV X1, X22
	0x03CC17F4 STP X31, X31, [X31 + 0x10]
	0x03CC17F8 BL 0x3CC16D4
	0x03CC17FC LDR X8, [X21 + 0x1A20]
	0x03CC1800 CBZ X8, 0x3CC1C60
	0x03CC1804 CBZ X25, 0x3CC1CD0
	0x03CC1808 LDR X19, [X25 + 0x58]
	0x03CC180C CBZ X19, 0x3CC1CD0
	0x03CC1810 LDR W20, [X21 + 0x78]
	0x03CC1814 LDR W8, [X19 + 0x18]
	0x03CC1818 CMP W20, W8
	0x03CC181C B.CS 0x3CC1CCC
	0x03CC1820 SXTW X9, W20
	0x03CC1824 MOVZ W10, 0x50
	0x03CC1828 MADD X23, X9, X10, X19
	0x03CC182C LDRSW X27, [X23 + 0x20]!
	0x03CC1830 LDR X9, [X23 + 0x8]
	0x03CC1834 CBZ X9, 0x3CC1CD0
	0x03CC1838 LDR W9, [X9 + 0x18]
	0x03CC183C ADD W24, W27, 0x4
	0x03CC1840 CMP W24, W9
	0x03CC1844 B.LE 0x3CC1894
	0x03CC1848 ADRP X9, 0x4A0000
	0x03CC184C LDR X9, [X9 + 0x6C8]
	0x03CC1850 LDR X0, [X9]
	0x03CC1854 LDR W9, [X0 + 0xE0]
	0x03CC1858 CBNZ W9, 0x3CC1864
	0x03CC185C BL 0x1C16DFC
	0x03CC1860 LDR W8, [X19 + 0x18]
	0x03CC1864 CMP W20, W8
	0x03CC1868 B.CS 0x3CC1CCC
	0x03CC186C ADD W8, W24, 0x3
	0x03CC1870 CMP W24, 0x0
	0x03CC1874 CSEL W8, W8, W24, LT
	0x03CC1878 SBFM W1, W8, 0x2, 0x1F
	0x03CC187C MOV X0, X23
	0x03CC1880 MOV X2, X31
	0x03CC1884 BL 0x3CAA9C0
	0x03CC1888 LDR X19, [X25 + 0x58]
	0x03CC188C CBZ X19, 0x3CC1CD0
	0x03CC1890 LDR W20, [X21 + 0x78]
	0x03CC1894 LDR W8, [X19 + 0x18]
	0x03CC1898 CMP W20, W8
	0x03CC189C B.CS 0x3CC1CCC
	0x03CC18A0 MOVZ W8, 0x50
	0x03CC18A4 SMADDL X8, X20, X8, X19
	0x03CC18A8 LDR X8, [X8 + 0x28]
	0x03CC18AC CBZ X8, 0x3CC1CD0
	0x03CC18B0 LDR W9, [X8 + 0x18]
	0x03CC18B4 CMP W27, W9
	0x03CC18B8 B.CS 0x3CC1CCC
	0x03CC18BC MOVZ W9, 0xC
	0x03CC18C0 MADD X9, X27, X9, X8
	0x03CC18C4 STR S9, [X9 + 0x24]!
	0x03CC18C8 STUR S12, [X9 - 0x4]
	0x03CC18CC STR S13, [X9 + 0x4]
	0x03CC18D0 LDR W11, [X8 + 0x18]
	0x03CC18D4 ADD W10, W27, 0x1
	0x03CC18D8 CMP W10, W11
	0x03CC18DC B.CS 0x3CC1CCC
	0x03CC18E0 SXTW X28, W10
	0x03CC18E4 MOVZ W10, 0xC
	0x03CC18E8 MADD X10, X28, X10, X8
	0x03CC18EC STR S8, [X10 + 0x24]!
	0x03CC18F0 STUR S12, [X10 - 0x4]
	0x03CC18F4 STR W31, [X10 + 0x4]
	0x03CC18F8 LDR W12, [X8 + 0x18]
	0x03CC18FC ADD W11, W27, 0x2
	0x03CC1900 CMP W11, W12
	0x03CC1904 B.CS 0x3CC1CCC
	0x03CC1908 SXTW X29, W11
	0x03CC190C MOVZ W11, 0xC
	0x03CC1910 MADD X11, X29, X11, X8
	0x03CC1914 STR S8, [X11 + 0x24]!
	0x03CC1918 STUR S10, [X11 - 0x4]
	0x03CC191C STR S11, [X11 + 0x4]
	0x03CC1920 LDR W13, [X8 + 0x18]
	0x03CC1924 ADD W12, W27, 0x3
	0x03CC1928 CMP W12, W13
	0x03CC192C B.CS 0x3CC1CCC
	0x03CC1930 SXTW X19, W12
	0x03CC1934 MOVZ W12, 0xC
	0x03CC1938 MADD X12, X19, X12, X8
	0x03CC193C STR S9, [X12 + 0x24]!
	0x03CC1940 STUR S10, [X12 - 0x4]
	0x03CC1944 STR W31, [X12 + 0x4]
	0x03CC1948 CBZ X22, 0x3CC1CD0
	0x03CC194C LDRB W13, [X22 + 0x104]
	0x03CC1950 CBZ W13, 0x3CC199C
	0x03CC1954 LDR W8, [X8 + 0x18]
	0x03CC1958 CMP W27, W8
	0x03CC195C B.CS 0x3CC1CCC
	0x03CC1960 LDR V0, [X22 + 0x1C]
	0x03CC1964 LDR V1, [X22 + 0x24]
	0x03CC1968 CMP W28, W8
	0x03CC196C FADD S1, S0, S1
	0x03CC1970 FSUB S0, S1, S9
	0x03CC1974 STR S0, [X9]
	0x03CC1978 B.CS 0x3CC1CCC
	0x03CC197C FSUB S1, S1, S8
	0x03CC1980 CMP W29, W8
	0x03CC1984 STR S1, [X10]
	0x03CC1988 B.CS 0x3CC1CCC
	0x03CC198C CMP W19, W8
	0x03CC1990 STR S1, [X11]
	0x03CC1994 B.CS 0x3CC1CCC
	0x03CC1998 STR S0, [X12]
	0x03CC199C LDR X8, [X25 + 0x58]
	0x03CC19A0 CBZ X8, 0x3CC1CD0
	0x03CC19A4 LDRSW X9, [X21 + 0x78]
	0x03CC19A8 LDR W10, [X8 + 0x18]
	0x03CC19AC CMP W9, W10
	0x03CC19B0 B.CS 0x3CC1CCC
	0x03CC19B4 LDR X0, [X21 + 0x1A28]
	0x03CC19B8 CBZ X0, 0x3CC1CD0
	0x03CC19BC MOVZ W10, 0x50
	0x03CC19C0 MADD X8, X9, X10, X8
	0x03CC19C4 LDR X20, [X8 + 0x40]
	0x03CC19C8 MOV X1, X31
	0x03CC19CC BL 0x3C9F094
	0x03CC19D0 LDR X8, [X21 + 0x1A28]
	0x03CC19D4 CBZ X8, 0x3CC1CD0
	0x03CC19D8 MOV W22, W0
	0x03CC19DC MOV X0, X8
	0x03CC19E0 MOV X1, X31
	0x03CC19E4 BL 0x3C9F0A4
	0x03CC19E8 LDR X8, [X21 + 0x1A20]
	0x03CC19EC CBZ X8, 0x3CC1CD0
	0x03CC19F0 MOV W23, W0
	0x03CC19F4 MOV X0, X8
	0x03CC19F8 MOV X1, X31
	0x03CC19FC BL 0x3CAC94C
	0x03CC1A00 CBZ X0, 0x3CC1CD0
	0x03CC1A04 STP X26, X25, [X31]
	0x03CC1A08 ADRP X24, 0x45A000
	0x03CC1A0C LDR X24, [X24 + 0x608]
	0x03CC1A10 MOV X1, X31
	0x03CC1A14 BL 0x3C9C4CC
	0x03CC1A18 MOV X8, X0
	0x03CC1A1C LDR X0, [X24]
	0x03CC1A20 STP X8, X1, [X31 + 0x10]
	0x03CC1A24 LDR W8, [X0 + 0xE0]
	0x03CC1A28 CBNZ W8, 0x3CC1A30
	0x03CC1A2C BL 0x1C16DFC
	0x03CC1A30 ADD X0, X31, 0x10
	0x03CC1A34 MOV X1, X31
	0x03CC1A38 BL 0x3C9C090
	0x03CC1A3C MOV W24, W0
	0x03CC1A40 ADD X0, X31, 0x10
	0x03CC1A44 MOV X1, X31
	0x03CC1A48 BL 0x3C9C0A0
	0x03CC1A4C MOV W25, W0
	0x03CC1A50 ADD X0, X31, 0x10
	0x03CC1A54 MOV X1, X31
	0x03CC1A58 BL 0x3C9C098
	0x03CC1A5C MOV W26, W0
	0x03CC1A60 ADD X0, X31, 0x10
	0x03CC1A64 MOV X1, X31
	0x03CC1A68 BL 0x3C9C0A8
	0x03CC1A6C CBZ X20, 0x3CC1CD0
	0x03CC1A70 LDR W8, [X20 + 0x18]
	0x03CC1A74 CMP W27, W8
	0x03CC1A78 B.CS 0x3CC1CCC
	0x03CC1A7C SCVTF S1, W25
	0x03CC1A80 FMOV S2, 0.5
	0x03CC1A84 SCVTF S5, W0
	0x03CC1A88 SCVTF S0, W24
	0x03CC1A8C SCVTF S3, W26
	0x03CC1A90 FMUL S1, S1, S2
	0x03CC1A94 FMUL S2, S5, S2
	0x03CC1A98 SCVTF S4, W22
	0x03CC1A9C SCVTF S5, W23
	0x03CC1AA0 FADD S0, S1, S0
	0x03CC1AA4 FMOV S6, 1
	0x03CC1AA8 FADD S7, S2, S3
	0x03CC1AAC FDIV S1, S6, S4
	0x03CC1AB0 FDIV S3, S6, S5
	0x03CC1AB4 FDIV S2, S0, S4
	0x03CC1AB8 FDIV S5, S7, S5
	0x03CC1ABC ADD X8, X20, X27, 0x4, LSL
	0x03CC1AC0 FSUB S4, S2, S1
	0x03CC1AC4 FSUB S0, S5, S3
	0x03CC1AC8 STP S4, S0, [X8 + 0x20]
	0x03CC1ACC STR X31, [X8 + 0x28]
	0x03CC1AD0 LDR W8, [X20 + 0x18]
	0x03CC1AD4 CMP W28, W8
	0x03CC1AD8 B.CS 0x3CC1CCC
	0x03CC1ADC FADD S3, S3, S5
	0x03CC1AE0 ADD X8, X20, X28, 0x4, LSL
	0x03CC1AE4 STP S4, S3, [X8 + 0x20]
	0x03CC1AE8 STR X31, [X8 + 0x28]
	0x03CC1AEC LDR W8, [X20 + 0x18]
	0x03CC1AF0 LDP X13, X12, [X31]
	0x03CC1AF4 CMP W29, W8
	0x03CC1AF8 B.CS 0x3CC1CCC
	0x03CC1AFC FADD S1, S1, S2
	0x03CC1B00 ADD X8, X20, X29, 0x4, LSL
	0x03CC1B04 STP S1, S3, [X8 + 0x20]
	0x03CC1B08 STR X31, [X8 + 0x28]
	0x03CC1B0C LDR W8, [X20 + 0x18]
	0x03CC1B10 CMP W19, W8
	0x03CC1B14 B.CS 0x3CC1CCC
	0x03CC1B18 ADD X8, X20, X19, 0x4, LSL
	0x03CC1B1C STP S1, S0, [X8 + 0x20]
	0x03CC1B20 STR X31, [X8 + 0x28]
	0x03CC1B24 LDR X8, [X12 + 0x58]
	0x03CC1B28 CBZ X8, 0x3CC1CD0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x727000
	015 Move W8, [X21+831]
	016 Move X19, X3
	017 Move X23, X2
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x45B000
	025 Move X0, [X0+1544]
	026 Call 0x1C17CF4
	027 Move X0, 0x433000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+831], W8
	032 Move [X31], X31
	033 Move [X31+8], X31
	034 Compare X19, 0
	035 JumpIfEqual {635}
	036 Move X8, [X19+48]
	037 Compare X8, 0
	038 JumpIfEqual {635}
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Move W10, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W10, 392
	043 NotImplemented "Instruction MADD not yet implemented."
	044 Add X9, X8, 292
	045 Move X10, [X9]
	046 Move [X8+160], X10
	047 Move W9, [X9+8]
	048 Move [X8+168], W9
	049 Move X8, [X19+48]
	050 Compare X8, 0
	051 JumpIfEqual {635}
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Move W10, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W10, 392
	056 NotImplemented "Instruction MADD not yet implemented."
	057 Move X9, [X8+280]
	058 Move W10, [X8+288]
	059 Move [X8+120], X9
	060 Move [X8+128], W10
	061 Move X8, [X19+48]
	062 Compare X8, 0
	063 JumpIfEqual {635}
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Move W10, [X8+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W10, 392
	068 NotImplemented "Instruction MADD not yet implemented."
	069 Move X9, [X8+304]
	070 Move W10, [X8+312]
	071 Move [X8+200], X9
	072 Move [X8+208], W10
	073 Move X8, [X19+48]
	074 Compare X8, 0
	075 JumpIfEqual {635}
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Move W10, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W10, 392
	080 NotImplemented "Instruction MADD not yet implemented."
	081 Add X9, X8, 316
	082 Move X10, [X9]
	083 Move [X8+240], X10
	084 Move W9, [X9+8]
	085 Move [X8+248], W9
	086 Compare X23, 0
	087 JumpIfEqual {635}
	088 Move X28, 0x433000
	089 Move W9, [X23+160]
	090 Move X28, [X28+1432]
	091 Move W8, 0x19F8
	092 Add X8, X20, X8
	093 Compare W9, 0
	094 JumpIfEqual {100}
	095 Move W9, 1
	096 Move [X8], W9
	097 Move W21, [X20+5504]
	098 Move W8, 0x19F8
	099 Add X27, X20, X8
	100 Move W8, [X8]
	101 Move W21, [X20+5504]
	102 Move W9, 0x19F8
	103 Add X27, X20, X9
	104 Compare W8, 0
	105 JumpIfEqual {111}
	106 And X1, X22, 0
	107 Move W0, W21
	108 Move X2, X31
	109 Call ColorUtilities.MultiplyColors, X0, X1
	110 Move X21, X0
	111 Move X0, [X28]
	112 Move W10, [X20+427]
	113 Move X8, X22
	114 ShiftRight X8, 24
	115 And X8, X8, 0x7FFFFFFF
	116 Move W9, W21
	117 ShiftRight W9, 24
	118 And W9, W9, 0x7FFFFFFF
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 Move W9, [X0+224]
	122 Move X22, [X23+144]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CSEL not yet implemented."
	125 NotImplemented "Instruction BFM not yet implemented."
	126 Compare W9, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X22
	130 Move X1, X31
	131 Move X2, X31
	132 Call Object.op_Inequality, X0, X1
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {277}
	137 Move X0, [X28]
	138 Move X22, [X23+152]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X22
	144 Move X1, X31
	145 Move X2, X31
	146 Call Object.op_Inequality, X0, X1
	147 Move W8, [X27]
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {209}
	152 Compare W8, 0
	153 JumpIfEqual {277}
	154 Move X8, [X23+152]
	155 Compare X8, 0
	156 JumpIfEqual {635}
	157 Move S0, [X8+60]
	158 Move S1, [X8+64]
	159 Move S2, [X8+68]
	160 Move S3, [X8+72]
	161 Move X0, X31
	162 Call 0x1E44664
	163 Move W26, W21
	164 And X1, X0, 0
	165 Move X0, X26
	166 Move X2, X31
	167 Call ColorUtilities.MultiplyColors, X0, X1
	168 Move W8, [X27]
	169 Move X22, X0
	170 Compare W8, 0
	171 JumpIfEqual {632}
	172 Move X8, [X23+152]
	173 Compare X8, 0
	174 JumpIfEqual {635}
	175 Move S0, [X8+28]
	176 Move S1, [X8+32]
	177 Move S2, [X8+36]
	178 Move S3, [X8+40]
	179 Move X0, X31
	180 Call 0x1E44664
	181 And X1, X0, 0
	182 Move X0, X26
	183 Move X2, X31
	184 Call ColorUtilities.MultiplyColors, X0, X1
	185 Move W8, [X27]
	186 Move X24, X0
	187 Compare W8, 0
	188 JumpIfEqual {634}
	189 Move X8, [X23+152]
	190 Compare X8, 0
	191 JumpIfEqual {635}
	192 Move S0, [X8+44]
	193 Move S1, [X8+48]
	194 Move S2, [X8+52]
	195 Move S3, [X8+56]
	196 Move X0, X31
	197 Call 0x1E44664
	198 And X1, X0, 0
	199 Move X0, X26
	200 Move X2, X31
	201 Call ColorUtilities.MultiplyColors, X0, X1
	202 Move W8, [X27]
	203 Move X25, X0
	204 Compare W8, 0
	205 JumpIfEqual {280}
	206 Move X8, [X23+152]
	207 Compare X8, 0
	208 JumpIfNotEqual {266}
	209 Compare W8, 0
	210 JumpIfEqual {277}
	211 Move X8, [X23+144]
	212 Compare X8, 0
	213 JumpIfEqual {635}
	214 Move S0, [X8+60]
	215 Move S1, [X8+64]
	216 Move S2, [X8+68]
	217 Move S3, [X8+72]
	218 Move X0, X31
	219 Call 0x1E44664
	220 Move W26, W21
	221 And X1, X0, 0
	222 Move X0, X26
	223 Move X2, X31
	224 Call ColorUtilities.MultiplyColors, X0, X1
	225 Move W8, [X27]
	226 Move W22, W0
	227 Compare W8, 0
	228 JumpIfEqual {632}
	229 Move X8, [X23+144]
	230 Compare X8, 0
	231 JumpIfEqual {635}
	232 Move S0, [X8+28]
	233 Move S1, [X8+32]
	234 Move S2, [X8+36]
	235 Move S3, [X8+40]
	236 Move X0, X31
	237 Call 0x1E44664
	238 And X1, X0, 0
	239 Move X0, X26
	240 Move X2, X31
	241 Call ColorUtilities.MultiplyColors, X0, X1
	242 Move W8, [X27]
	243 Move W24, W0
	244 Compare W8, 0
	245 JumpIfEqual {634}
	246 Move X8, [X23+144]
	247 Compare X8, 0
	248 JumpIfEqual {635}
	249 Move S0, [X8+44]
	250 Move S1, [X8+48]
	251 Move S2, [X8+52]
	252 Move S3, [X8+56]
	253 Move X0, X31
	254 Call 0x1E44664
	255 And X1, X0, 0
	256 Move X0, X26
	257 Move X2, X31
	258 Call ColorUtilities.MultiplyColors, X0, X1
	259 Move W8, [X27]
	260 Move W25, W0
	261 Compare W8, 0
	262 JumpIfEqual {280}
	263 Move X8, [X23+144]
	264 Compare X8, 0
	265 JumpIfEqual {635}
	266 Move S0, [X8+76]
	267 Move S1, [X8+80]
	268 Move S2, [X8+84]
	269 Move S3, [X8+88]
	270 Move X0, X31
	271 Call 0x1E44664
	272 And X1, X0, 0
	273 Move X0, X26
	274 Move X2, X31
	275 Call ColorUtilities.MultiplyColors, X0, X1
	276 Move W21, W0
	277 Move W25, W21
	278 Move W24, W21
	279 Move W22, W21
	280 Move X0, [X28]
	281 Move X23, [X20+648]
	282 Move W8, [X0+224]
	283 Compare W8, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move X0, X23
	287 Move X1, X31
	288 Move X2, X31
	289 Call Object.op_Inequality, X0, X1
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {366}
	294 Move W8, [X27]
	295 Compare W8, 0
	296 JumpIfEqual {366}
	297 Move X8, [X20+648]
	298 Compare X8, 0
	299 JumpIfEqual {635}
	300 Move S0, [X8+60]
	301 Move S1, [X8+64]
	302 Move S2, [X8+68]
	303 Move S3, [X8+72]
	304 Move X0, X31
	305 Call 0x1E44664
	306 Move W8, W22
	307 And X1, X0, 0
	308 Move X0, X8
	309 Move X2, X31
	310 Call ColorUtilities.MultiplyColors, X0, X1
	311 Move W8, [X27]
	312 Move W22, W0
	313 Compare W8, 0
	314 JumpIfEqual {366}
	315 Move X8, [X20+648]
	316 Compare X8, 0
	317 JumpIfEqual {635}
	318 Move S0, [X8+28]
	319 Move S1, [X8+32]
	320 Move S2, [X8+36]
	321 Move S3, [X8+40]
	322 Move X0, X31
	323 Call 0x1E44664
	324 Move W8, W24
	325 And X1, X0, 0
	326 Move X0, X8
	327 Move X2, X31
	328 Call ColorUtilities.MultiplyColors, X0, X1
	329 Move W8, [X27]
	330 Move W24, W0
	331 Compare W8, 0
	332 JumpIfEqual {366}
	333 Move X8, [X20+648]
	334 Compare X8, 0
	335 JumpIfEqual {635}
	336 Move S0, [X8+44]
	337 Move S1, [X8+48]
	338 Move S2, [X8+52]
	339 Move S3, [X8+56]
	340 Move X0, X31
	341 Call 0x1E44664
	342 Move W8, W25
	343 And X1, X0, 0
	344 Move X0, X8
	345 Move X2, X31
	346 Call ColorUtilities.MultiplyColors, X0, X1
	347 Move W8, [X27]
	348 Move W25, W0
	349 Compare W8, 0
	350 JumpIfEqual {366}
	351 Move X8, [X20+648]
	352 Compare X8, 0
	353 JumpIfEqual {635}
	354 Move S0, [X8+76]
	355 Move S1, [X8+80]
	356 Move S2, [X8+84]
	357 Move S3, [X8+88]
	358 Move X0, X31
	359 Call 0x1E44664
	360 Move W8, W21
	361 And X1, X0, 0
	362 Move X0, X8
	363 Move X2, X31
	364 Call ColorUtilities.MultiplyColors, X0, X1
	365 Move W21, W0
	366 Move X8, [X19+48]
	367 Compare X8, 0
	368 JumpIfEqual {635}
	369 NotImplemented "Instruction LDRSW not yet implemented."
	370 Move W10, [X8+24]
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move W10, 392
	373 NotImplemented "Instruction MADD not yet implemented."
	374 Move [X8+196], W22
	375 Move X8, [X19+48]
	376 Compare X8, 0
	377 JumpIfEqual {635}
	378 NotImplemented "Instruction LDRSW not yet implemented."
	379 Move W10, [X8+24]
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move W10, 392
	382 NotImplemented "Instruction MADD not yet implemented."
	383 Move [X8+156], W24
	384 Move X8, [X19+48]
	385 Compare X8, 0
	386 JumpIfEqual {635}
	387 NotImplemented "Instruction LDRSW not yet implemented."
	388 Move W10, [X8+24]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move W10, 392
	391 NotImplemented "Instruction MADD not yet implemented."
	392 Move [X8+236], W25
	393 Move X8, [X19+48]
	394 Compare X8, 0
	395 JumpIfEqual {635}
	396 NotImplemented "Instruction LDRSW not yet implemented."
	397 Move W10, [X8+24]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move W10, 392
	400 NotImplemented "Instruction MADD not yet implemented."
	401 Move [X8+276], W21
	402 Move X0, [X20+5512]
	403 Compare X0, 0
	404 JumpIfEqual {635}
	405 Move X1, X31
	406 Call TextElement.get_glyph, X0
	407 Compare X0, 0
	408 JumpIfEqual {635}
	409 Move X21, 0x45B000
	410 Move X21, [X21+1544]
	411 Move X1, X31
	412 Call Glyph.get_glyphRect, X0
	413 Move X8, X0
	414 Move X0, [X21]
	415 Move [X31], X8
	416 Move [X31+8], X1
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Add X0, X31, 0
	422 Move X1, X31
	423 Call GlyphRect.get_x, X0
	424 Move X8, [X20+224]
	425 Compare X8, 0
	426 JumpIfEqual {635}
	427 Move W21, W0
	428 Move X0, X8
	429 Move X1, X31
	430 Call SpriteAsset.get_spriteSheet, X0
	431 Compare X0, 0
	432 JumpIfEqual {635}
	433 Move X8, [X0]
	434 Move X9, [X8+392]
	435 Move X1, [X8+400]
	436 NotImplemented "Instruction BLR not yet implemented."
	437 Move X8, [X20+5512]
	438 Compare X8, 0
	439 JumpIfEqual {635}
	440 Move W22, W0
	441 Move X0, X8
	442 Move X1, X31
	443 Call TextElement.get_glyph, X0
	444 Compare X0, 0
	445 JumpIfEqual {635}
	446 Move X1, X31
	447 Call Glyph.get_glyphRect, X0
	448 Move [X31], X0
	449 Move [X31+8], X1
	450 Add X0, X31, 0
	451 Move X1, X31
	452 Call GlyphRect.get_y, X0
	453 Move X8, [X20+224]
	454 Compare X8, 0
	455 JumpIfEqual {635}
	456 Move W23, W0
	457 Move X0, X8
	458 Move X1, X31
	459 Call SpriteAsset.get_spriteSheet, X0
	460 Compare X0, 0
	461 JumpIfEqual {635}
	462 Move X8, [X0]
	463 Move X9, [X8+424]
	464 Move X1, [X8+432]
	465 NotImplemented "Instruction BLR not yet implemented."
	466 Move X8, [X20+5512]
	467 Compare X8, 0
	468 JumpIfEqual {635}
	469 Move W24, W0
	470 Move X0, X8
	471 Move X1, X31
	472 Call TextElement.get_glyph, X0
	473 Compare X0, 0
	474 JumpIfEqual {635}
	475 Move X1, X31
	476 Call Glyph.get_glyphRect, X0
	477 Move [X31], X0
	478 Move [X31+8], X1
	479 Add X0, X31, 0
	480 Move X1, X31
	481 Call GlyphRect.get_y, X0
	482 Move X8, [X20+5512]
	483 Compare X8, 0
	484 JumpIfEqual {635}
	485 Move W25, W0
	486 Move X0, X8
	487 Move X1, X31
	488 Call TextElement.get_glyph, X0
	489 Compare X0, 0
	490 JumpIfEqual {635}
	491 Move X1, X31
	492 Call Glyph.get_glyphRect, X0
	493 Move [X31], X0
	494 Move [X31+8], X1
	495 Add X0, X31, 0
	496 Move X1, X31
	497 Call GlyphRect.get_height, X0
	498 Move X8, [X20+224]
	499 Compare X8, 0
	500 JumpIfEqual {635}
	501 Move W26, W0
	502 Move X0, X8
	503 Move X1, X31
	504 Call SpriteAsset.get_spriteSheet, X0
	505 Compare X0, 0
	506 JumpIfEqual {635}
	507 Move X8, [X0]
	508 Move X9, [X8+424]
	509 Move X1, [X8+432]
	510 NotImplemented "Instruction BLR not yet implemented."
	511 Move X8, [X20+5512]
	512 Compare X8, 0
	513 JumpIfEqual {635}
	514 Move W27, W0
	515 Move X0, X8
	516 Move X1, X31
	517 Call TextElement.get_glyph, X0
	518 Compare X0, 0
	519 JumpIfEqual {635}
	520 Move X1, X31
	521 Call Glyph.get_glyphRect, X0
	522 Move [X31], X0
	523 Move [X31+8], X1
	524 Add X0, X31, 0
	525 Move X1, X31
	526 Call GlyphRect.get_x, X0
	527 Move X8, [X20+5512]
	528 Compare X8, 0
	529 JumpIfEqual {635}
	530 Move W28, W0
	531 Move X0, X8
	532 Move X1, X31
	533 Call TextElement.get_glyph, X0
	534 Compare X0, 0
	535 JumpIfEqual {635}
	536 Move X1, X31
	537 Call Glyph.get_glyphRect, X0
	538 Move [X31], X0
	539 Move [X31+8], X1
	540 Add X0, X31, 0
	541 Move X1, X31
	542 Call GlyphRect.get_width, X0
	543 Move X8, [X20+224]
	544 Compare X8, 0
	545 JumpIfEqual {635}
	546 Move W29, W0
	547 Move X0, X8
	548 Move X1, X31
	549 Call SpriteAsset.get_spriteSheet, X0
	550 Compare X0, 0
	551 JumpIfEqual {635}
	552 Move X8, [X0]
	553 Move X9, [X8+392]
	554 Move X1, [X8+400]
	555 NotImplemented "Instruction BLR not yet implemented."
	556 Move X8, [X19+48]
	557 Compare X8, 0
	558 JumpIfEqual {635}
	559 NotImplemented "Instruction LDRSW not yet implemented."
	560 Move W10, [X8+24]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 NotImplemented "Instruction SCVTF not yet implemented."
	563 NotImplemented "Instruction SCVTF not yet implemented."
	564 NotImplemented "Instruction SCVTF not yet implemented."
	565 NotImplemented "Instruction SCVTF not yet implemented."
	566 Move W10, 392
	567 NotImplemented "Instruction FDIV not yet implemented."
	568 NotImplemented "Instruction FDIV not yet implemented."
	569 NotImplemented "Instruction MADD not yet implemented."
	570 Move [X8+172], S1
	571 Move [X8+180], S0
	572 Move [X8+180], W31
	573 Move [X8+184], W31
	574 Move X8, [X19+48]
	575 Compare X8, 0
	576 JumpIfEqual {635}
	577 NotImplemented "Instruction LDRSW not yet implemented."
	578 Move W10, [X8+24]
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Add W10, W26, W25
	581 NotImplemented "Instruction SCVTF not yet implemented."
	582 Move W11, 392
	583 NotImplemented "Instruction SCVTF not yet implemented."
	584 NotImplemented "Instruction MADD not yet implemented."
	585 NotImplemented "Instruction FDIV not yet implemented."
	586 Move [X8+132], S1
	587 Move [X8+140], S2
	588 Move [X8+140], W31
	589 Move [X8+144], W31
	590 Move X8, [X19+48]
	591 Compare X8, 0
	592 JumpIfEqual {635}
	593 NotImplemented "Instruction LDRSW not yet implemented."
	594 Move W10, [X8+24]
	595 NotImplemented "Instruction CMP not yet implemented."
	596 Add W10, W29, W28
	597 NotImplemented "Instruction SCVTF not yet implemented."
	598 Move W11, 392
	599 NotImplemented "Instruction SCVTF not yet implemented."
	600 NotImplemented "Instruction MADD not yet implemented."
	601 NotImplemented "Instruction FDIV not yet implemented."
	602 Move [X8+212], S1
	603 Move [X8+220], S2
	604 Move [X8+220], W31
	605 Move [X8+224], W31
	606 Move X8, [X19+48]
	607 Compare X8, 0
	608 JumpIfEqual {635}
	609 NotImplemented "Instruction LDRSW not yet implemented."
	610 Move W10, [X8+24]
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Move X20, [X31+96]
	613 Move X19, [X31+104]
	614 Move X22, [X31+80]
	615 Move X21, [X31+88]
	616 Move X24, [X31+64]
	617 Move X23, [X31+72]
	618 Move X26, [X31+48]
	619 Move X25, [X31+56]
	620 Move X28, [X31+32]
	621 Move X27, [X31+40]
	622 Move X29, [X31+16]
	623 Move X30, [X31+24]
	624 Move W10, 392
	625 NotImplemented "Instruction MADD not yet implemented."
	626 Move [X8+252], S1
	627 Move [X8+260], S0
	628 Move [X8+264], W31
	629 Move [X8+260], W31
	630 Add X31, X31, 112
	631 Return 
	632 Move W25, W21
	633 Move W24, W21
	634 Move W25, W21
	635 Call 0x1C17F20
	636 Call 0x1C17F28

Method: System.Void DrawUnderlineMesh(UnityEngine.Vector3 start, UnityEngine.Vector3 end, System.Single startScale, System.Single endScale, System.Single maxScale, System.Single sdfScale, UnityEngine.Color32 underlineColor, UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC1B2C LDRSW X9, [X21 + 0x78]
	0x03CC1B30 LDR W10, [X8 + 0x18]
	0x03CC1B34 CMP W9, W10
	0x03CC1B38 B.CS 0x3CC1CCC
	0x03CC1B3C MOVZ W10, 0x50
	0x03CC1B40 MADD X8, X9, X10, X8
	0x03CC1B44 LDR X8, [X8 + 0x48]
	0x03CC1B48 CBZ X8, 0x3CC1CD0
	0x03CC1B4C LDR W9, [X8 + 0x18]
	0x03CC1B50 CMP W27, W9
	0x03CC1B54 B.CS 0x3CC1CCC
	0x03CC1B58 ADRP X9, 0xFFFFFFFFFCE2D000
	0x03CC1B5C LDR V0, [X9]
	0x03CC1B60 ADD X9, X8, X27, 0x3, LSL
	0x03CC1B64 STR D0, [X9 + 0x20]
	0x03CC1B68 LDR W9, [X8 + 0x18]
	0x03CC1B6C CMP W28, W9
	0x03CC1B70 B.CS 0x3CC1CCC
	0x03CC1B74 ADD X9, X8, X28, 0x3, LSL
	0x03CC1B78 STR D0, [X9 + 0x20]
	0x03CC1B7C LDR W9, [X8 + 0x18]
	0x03CC1B80 CMP W29, W9
	0x03CC1B84 B.CS 0x3CC1CCC
	0x03CC1B88 ADD X9, X8, X29, 0x3, LSL
	0x03CC1B8C STR D0, [X9 + 0x20]
	0x03CC1B90 LDR W9, [X8 + 0x18]
	0x03CC1B94 CMP W19, W9
	0x03CC1B98 B.CS 0x3CC1CCC
	0x03CC1B9C ADD X8, X8, X19, 0x3, LSL
	0x03CC1BA0 STR D0, [X8 + 0x20]
	0x03CC1BA4 LDRB W9, [X21 + 0x1AB]
	0x03CC1BA8 LDR X8, [X12 + 0x58]
	0x03CC1BAC UBFM X10, X13, 0x18, 0x3F
	0x03CC1BB0 CMP W9, W10, UXTB
	0x03CC1BB4 CSEL W9, W9, W10, CC
	0x03CC1BB8 CBZ X8, 0x3CC1CD0
	0x03CC1BBC LDRSW X10, [X21 + 0x78]
	0x03CC1BC0 LDR W11, [X8 + 0x18]
	0x03CC1BC4 CMP W10, W11
	0x03CC1BC8 B.CS 0x3CC1CCC
	0x03CC1BCC MOVZ W11, 0x50
	0x03CC1BD0 MADD X8, X10, X11, X8
	0x03CC1BD4 LDR X8, [X8 + 0x50]
	0x03CC1BD8 CBZ X8, 0x3CC1CD0
	0x03CC1BDC LDR W10, [X8 + 0x18]
	0x03CC1BE0 CMP W27, W10
	0x03CC1BE4 B.CS 0x3CC1CCC
	0x03CC1BE8 BFM W13, W9, 0x8, 0x7
	0x03CC1BEC ADD X9, X8, X27, 0x2, LSL
	0x03CC1BF0 STR W13, [X9 + 0x20]
	0x03CC1BF4 LDR W9, [X8 + 0x18]
	0x03CC1BF8 CMP W28, W9
	0x03CC1BFC B.CS 0x3CC1CCC
	0x03CC1C00 ADD X9, X8, X28, 0x2, LSL
	0x03CC1C04 STR W13, [X9 + 0x20]
	0x03CC1C08 LDR W9, [X8 + 0x18]
	0x03CC1C0C CMP W29, W9
	0x03CC1C10 B.CS 0x3CC1CCC
	0x03CC1C14 ADD X9, X8, X29, 0x2, LSL
	0x03CC1C18 STR W13, [X9 + 0x20]
	0x03CC1C1C LDR W9, [X8 + 0x18]
	0x03CC1C20 CMP W19, W9
	0x03CC1C24 B.CS 0x3CC1CCC
	0x03CC1C28 ADD X8, X8, X19, 0x2, LSL
	0x03CC1C2C STR W13, [X8 + 0x20]
	0x03CC1C30 LDR X8, [X12 + 0x58]
	0x03CC1C34 CBZ X8, 0x3CC1CD0
	0x03CC1C38 LDRSW X9, [X21 + 0x78]
	0x03CC1C3C LDR W10, [X8 + 0x18]
	0x03CC1C40 CMP W9, W10
	0x03CC1C44 B.CS 0x3CC1CCC
	0x03CC1C48 MOVZ W10, 0x50
	0x03CC1C4C MADD X8, X9, X10, X8
	0x03CC1C50 LDR W9, [X8 + 0x20]
	0x03CC1C54 ADD W9, W9, 0x4
	0x03CC1C58 STR W9, [X8 + 0x20]
	0x03CC1C5C B 0x3CC1CA0
	0x03CC1C60 CBZ X22, 0x3CC1CD0
	0x03CC1C64 LDR X8, [X22 + 0x68]
	0x03CC1C68 CBZ X8, 0x3CC1CD0
	0x03CC1C6C LDRB W8, [X8 + 0x89]
	0x03CC1C70 CBZ W8, 0x3CC1CA0
	0x03CC1C74 ADRP X8, 0x432000
	0x03CC1C78 LDR X8, [X8 + 0xA28]
	0x03CC1C7C LDR X0, [X8]
	0x03CC1C80 LDR W8, [X0 + 0xE0]
	0x03CC1C84 CBNZ W8, 0x3CC1C8C
	0x03CC1C88 BL 0x1C16DFC
	0x03CC1C8C ADRP X8, 0x498000
	0x03CC1C90 LDR X8, [X8 + 0x320]
	0x03CC1C94 MOV X1, X31
	0x03CC1C98 LDR X0, [X8]
	0x03CC1C9C BL 0x3C06A04
	0x03CC1CA0 LDP X20, X19, [X31 + 0xA0]
	0x03CC1CA4 LDP X22, X21, [X31 + 0x90]
	0x03CC1CA8 LDP X24, X23, [X31 + 0x80]
	0x03CC1CAC LDP X26, X25, [X31 + 0x70]
	0x03CC1CB0 LDP X28, X27, [X31 + 0x60]
	0x03CC1CB4 LDP X29, X30, [X31 + 0x50]
	0x03CC1CB8 LDP D9, D8, [X31 + 0x40]
	0x03CC1CBC LDP D11, D10, [X31 + 0x30]
	0x03CC1CC0 LDP D13, D12, [X31 + 0x20]
	0x03CC1CC4 ADD X31, X31, 0xB0
	0x03CC1CC8 RET
	0x03CC1CCC BL 0x1C16F28
	0x03CC1CD0 BL 0x1C16F20
	0x03CC1CD4 CBZ X1, 0x3CC1CEC
	0x03CC1CD8 AND W8, W0, 0x1
	0x03CC1CDC MOV X0, X1
	0x03CC1CE0 MOV W1, W8
	0x03CC1CE4 MOV X2, X31
	0x03CC1CE8 B 0x3CCB23C
	0x03CC1CEC STR X30, [X31 - 0x10]!
	0x03CC1CF0 BL 0x1C16F20
	0x03CC1CF4 SUB X31, X31, 0x50
	0x03CC1CF8 STP X30, X21, [X31 + 0x30]
	0x03CC1CFC STP X20, X19, [X31 + 0x40]
	0x03CC1D00 ADRP X20, 0x726000
	0x03CC1D04 LDRB W8, [X20 + 0x344]
	0x03CC1D08 MOV X21, X1
	0x03CC1D0C MOV X19, X0
	0x03CC1D10 TBNZ X8, 0x0, 0x3CC1D34
	0x03CC1D14 ADRP X0, 0x4A0000
	0x03CC1D18 LDR X0, [X0 + 0x4B0]
	0x03CC1D1C BL 0x1C16CF4
	0x03CC1D20 ADRP X0, 0x432000
	0x03CC1D24 LDR X0, [X0 + 0x598]
	0x03CC1D28 BL 0x1C16CF4
	0x03CC1D2C MOVZ W8, 0x1
	0x03CC1D30 STRB W8, [X20 + 0x344]
	0x03CC1D34 STRB W31, [X31 + 0x2C]
	0x03CC1D38 LDR X20, [X19 + 0x68]
	0x03CC1D3C CBZ X20, 0x3CC1D48
	0x03CC1D40 CBNZ X21, 0x3CC1D50
	0x03CC1D44 B 0x3CC1E8C
	0x03CC1D48 CBZ X21, 0x3CC1E8C
	0x03CC1D4C LDR X20, [X21 + 0x40]
	0x03CC1D50 LDR W3, [X19 + 0x124]
	0x03CC1D54 LDR W4, [X19 + 0x134]
	0x03CC1D58 LDR X21, [X21 + 0x68]
	0x03CC1D5C ADD X5, X31, 0x2C
	0x03CC1D60 MOVZ W0, 0x2026
	0x03CC1D64 MOV X1, X20
	0x03CC1D68 MOV W2, W31
	0x03CC1D6C MOV X6, X31
	0x03CC1D70 BL 0x3CA7F78
	0x03CC1D74 MOV X1, X0
	0x03CC1D78 CBZ X0, 0x3CC1DB0
	0x03CC1D7C MOVI V0.2D, 0x0
	0x03CC1D80 ADD X0, X31, 0x0
	0x03CC1D84 MOV W2, W31
	0x03CC1D88 MOV X3, X31
	0x03CC1D8C STP V0, V0, [X31]
	0x03CC1D90 BL 0x3CC5274
	0x03CC1D94 LDP V1, V0, [X31]
	0x03CC1D98 STR V0, [X19 + 0x1A1]
	0x03CC1D9C STR V1, [X19 + 0x1A0]
	0x03CC1DA0 LDP X20, X19, [X31 + 0x40]
	0x03CC1DA4 LDP X30, X21, [X31 + 0x30]
	0x03CC1DA8 ADD X31, X31, 0x50
	0x03CC1DAC RET
	0x03CC1DB0 CBZ X20, 0x3CC1E8C
	0x03CC1DB4 LDR X2, [X20 + 0x178]
	0x03CC1DB8 CBZ X2, 0x3CC1DF0
	0x03CC1DBC LDR W8, [X2 + 0x18]
	0x03CC1DC0 CMP W8, 0x1
	0x03CC1DC4 B.LT 0x3CC1DF0
	0x03CC1DC8 LDR W4, [X19 + 0x124]
	0x03CC1DCC LDR W5, [X19 + 0x134]
	0x03CC1DD0 ADD X6, X31, 0x2C
	0x03CC1DD4 MOVZ W0, 0x2026
	0x03CC1DD8 MOVZ W3, 0x1
	0x03CC1DDC MOV X1, X20
	0x03CC1DE0 MOV X7, X31
	0x03CC1DE4 BL 0x3CA84C8
	0x03CC1DE8 MOV X1, X0
	0x03CC1DEC CBNZ X0, 0x3CC1D7C
	0x03CC1DF0 CBZ X21, 0x3CC1E8C
	0x03CC1DF4 LDR X2, [X21 + 0x30]
	0x03CC1DF8 CBZ X2, 0x3CC1E30
	0x03CC1DFC LDR W8, [X2 + 0x18]
	0x03CC1E00 CMP W8, 0x1
	0x03CC1E04 B.LT 0x3CC1E30
	0x03CC1E08 LDR W4, [X19 + 0x124]
	0x03CC1E0C LDR W5, [X19 + 0x134]
	0x03CC1E10 ADD X6, X31, 0x2C
	0x03CC1E14 MOVZ W0, 0x2026
	0x03CC1E18 MOVZ W3, 0x1
	0x03CC1E1C MOV X1, X20
	0x03CC1E20 MOV X7, X31
	0x03CC1E24 BL 0x3CA84C8
	0x03CC1E28 MOV X1, X0
	0x03CC1E2C CBNZ X0, 0x3CC1D7C
	0x03CC1E30 ADRP X8, 0x432000
	0x03CC1E34 LDR X8, [X8 + 0x598]
	0x03CC1E38 LDR X20, [X21 + 0x20]
	0x03CC1E3C LDR X0, [X8]
	0x03CC1E40 LDR W8, [X0 + 0xE0]
	0x03CC1E44 CBNZ W8, 0x3CC1E4C
	0x03CC1E48 BL 0x1C16DFC
	0x03CC1E4C MOV X0, X20
	0x03CC1E50 MOV X1, X31
	0x03CC1E54 MOV X2, X31
	0x03CC1E58 BL 0x3C354F8
	0x03CC1E5C TBZ X0, 0x0, 0x3CC1DA0
	0x03CC1E60 LDR X1, [X21 + 0x20]
	0x03CC1E64 LDR W3, [X19 + 0x124]
	0x03CC1E68 LDR W4, [X19 + 0x134]
	0x03CC1E6C ADD X5, X31, 0x2C
	0x03CC1E70 MOVZ W0, 0x2026
	0x03CC1E74 MOVZ W2, 0x1
	0x03CC1E78 MOV X6, X31
	0x03CC1E7C BL 0x3CA7F78
	0x03CC1E80 MOV X1, X0
	0x03CC1E84 CBNZ X0, 0x3CC1D7C
	0x03CC1E88 B 0x3CC1DA0
	0x03CC1E8C BL 0x1C16F20
	0x03CC1E90 STR X30, [X31 - 0x60]!
	0x03CC1E94 STP X28, X27, [X31 + 0x10]
	0x03CC1E98 STP X26, X25, [X31 + 0x20]
	0x03CC1E9C STP X24, X23, [X31 + 0x30]
	0x03CC1EA0 STP X22, X21, [X31 + 0x40]
	0x03CC1EA4 STP X20, X19, [X31 + 0x50]
	0x03CC1EA8 ADRP X26, 0x726000
	0x03CC1EAC LDRB W8, [X26 + 0x343]
	0x03CC1EB0 MOV X21, X6
	0x03CC1EB4 MOV W22, W5
	0x03CC1EB8 MOV W23, W4
	0x03CC1EBC MOV X20, X3
	0x03CC1EC0 MOV W19, W2
	0x03CC1EC4 MOV X24, X1
	0x03CC1EC8 MOV X25, X0
	0x03CC1ECC TBNZ X8, 0x0, 0x3CC1EF0
	0x03CC1ED0 ADRP X0, 0x4A0000
	0x03CC1ED4 LDR X0, [X0 + 0x4B0]
	0x03CC1ED8 BL 0x1C16CF4
	0x03CC1EDC ADRP X0, 0x432000
	0x03CC1EE0 LDR X0, [X0 + 0x598]
	0x03CC1EE4 BL 0x1C16CF4
	0x03CC1EE8 MOVZ W8, 0x1
	0x03CC1EEC STRB W8, [X26 + 0x343]
	0x03CC1EF0 CBZ X24, 0x3CC2174
	0x03CC1EF4 LDR X27, [X24 + 0x68]
	0x03CC1EF8 MOV W0, W19
	0x03CC1EFC MOV X1, X20
	0x03CC1F00 MOV W2, W31
	0x03CC1F04 MOV W3, W23
	0x03CC1F08 MOV W4, W22
	0x03CC1F0C MOV X5, X21
	0x03CC1F10 MOV X6, X31
	0x03CC1F14 BL 0x3CA7F78
	0x03CC1F18 CBZ X0, 0x3CC1F24
	0x03CC1F1C MOV X26, X0
	0x03CC1F20 B 0x3CC2154
	0x03CC1F24 CBZ X20, 0x3CC2174
	0x03CC1F28 LDR X2, [X20 + 0x178]
	0x03CC1F2C CBZ X2, 0x3CC1F60
	0x03CC1F30 LDR W8, [X2 + 0x18]
	0x03CC1F34 CMP W8, 0x1
	0x03CC1F38 B.LT 0x3CC1F60
	0x03CC1F3C MOVZ W3, 0x1
	0x03CC1F40 MOV W0, W19
	0x03CC1F44 MOV X1, X20
	0x03CC1F48 MOV W4, W23
	0x03CC1F4C MOV W5, W22
	0x03CC1F50 MOV X6, X21
	0x03CC1F54 MOV X7, X31
	0x03CC1F58 BL 0x3CA84C8
	0x03CC1F5C CBNZ X0, 0x3CC213C
	0x03CC1F60 MOV X0, X20
	0x03CC1F64 MOV X1, X31
	0x03CC1F68 BL 0x3CA3338
	0x03CC1F6C LDR X8, [X24 + 0x40]
	0x03CC1F70 CBZ X8, 0x3CC2174
	0x03CC1F74 MOV W26, W0
	0x03CC1F78 MOV X0, X8
	0x03CC1F7C MOV X1, X31
	0x03CC1F80 BL 0x3CA3338
	0x03CC1F84 CMP W26, W0
	0x03CC1F88 B.NE 0x3CC20B4
	0x03CC1F8C ADRP X28, 0x432000
	0x03CC1F90 LDR X28, [X28 + 0x598]
	0x03CC1F94 LDR X25, [X24 + 0x50]
	0x03CC1F98 LDR X0, [X28]
	0x03CC1F9C LDR W8, [X0 + 0xE0]
	0x03CC1FA0 CBNZ W8, 0x3CC1FA8
	0x03CC1FA4 BL 0x1C16DFC
	0x03CC1FA8 MOV X0, X25
	0x03CC1FAC MOV X1, X31
	0x03CC1FB0 MOV X2, X31
	0x03CC1FB4 BL 0x3C354F8
	0x03CC1FB8 TBZ X0, 0x0, 0x3CC1FD4
	0x03CC1FBC LDR X1, [X24 + 0x50]
	0x03CC1FC0 MOVZ W2, 0x1
	0x03CC1FC4 MOV W0, W19
	0x03CC1FC8 MOV X3, X31
	0x03CC1FCC BL 0x3CA8678
	0x03CC1FD0 CBNZ X0, 0x3CC1F1C
	0x03CC1FD4 CBZ X27, 0x3CC2174
	0x03CC1FD8 LDR X2, [X27 + 0x30]
	0x03CC1FDC CBZ X2, 0x3CC2010
	0x03CC1FE0 LDR W8, [X2 + 0x18]
	0x03CC1FE4 CMP W8, 0x1
	0x03CC1FE8 B.LT 0x3CC2010
	0x03CC1FEC MOVZ W3, 0x1
	0x03CC1FF0 MOV W0, W19
	0x03CC1FF4 MOV X1, X20
	0x03CC1FF8 MOV W4, W23
	0x03CC1FFC MOV W5, W22
	0x03CC2000 MOV X6, X21
	0x03CC2004 MOV X7, X31
	0x03CC2008 BL 0x3CA84C8
	0x03CC200C CBNZ X0, 0x3CC213C
	0x03CC2010 LDR X0, [X28]
	0x03CC2014 LDR X24, [X27 + 0x20]
	0x03CC2018 LDR W8, [X0 + 0xE0]
	0x03CC201C CBNZ W8, 0x3CC2024
	0x03CC2020 BL 0x1C16DFC
	0x03CC2024 MOV X0, X24
	0x03CC2028 MOV X1, X31
	0x03CC202C MOV X2, X31
	0x03CC2030 BL 0x3C354F8
	0x03CC2034 TBZ X0, 0x0, 0x3CC205C
	0x03CC2038 LDR X1, [X27 + 0x20]
	0x03CC203C MOVZ W2, 0x1
	0x03CC2040 MOV W0, W19
	0x03CC2044 MOV W3, W23
	0x03CC2048 MOV W4, W22
	0x03CC204C MOV X5, X21
	0x03CC2050 MOV X6, X31
	0x03CC2054 BL 0x3CA7F78
	0x03CC2058 CBNZ X0, 0x3CC213C
	0x03CC205C LDR X0, [X28]
	0x03CC2060 LDR X20, [X27 + 0x48]
	0x03CC2064 LDR W8, [X0 + 0xE0]
	0x03CC2068 CBNZ W8, 0x3CC2070
	0x03CC206C BL 0x1C16DFC
	0x03CC2070 MOV X0, X20
	0x03CC2074 MOV X1, X31
	0x03CC2078 MOV X2, X31
	0x03CC207C BL 0x3C354F8
	0x03CC2080 MOV X26, X31
	0x03CC2084 TBZ X0, 0x0, 0x3CC2154
	0x03CC2088 LDR X1, [X27 + 0x48]
	0x03CC208C MOV W0, W19
	0x03CC2090 LDP X20, X19, [X31 + 0x50]
	0x03CC2094 LDP X22, X21, [X31 + 0x40]
	0x03CC2098 LDP X24, X23, [X31 + 0x30]
	0x03CC209C LDP X26, X25, [X31 + 0x20]
	0x03CC20A0 LDP X28, X27, [X31 + 0x10]
	0x03CC20A4 MOVZ W2, 0x1
	0x03CC20A8 MOV X3, X31
	0x03CC20AC LDR X30, [X31], #0x60
	0x03CC20B0 B 0x3CA8678
	0x03CC20B4 LDR X1, [X24 + 0x40]
	0x03CC20B8 MOV W0, W19
	0x03CC20BC MOV W2, W31
	0x03CC20C0 MOV W3, W23
	0x03CC20C4 MOV W4, W22
	0x03CC20C8 MOV X5, X21
	0x03CC20CC MOV X6, X31
	0x03CC20D0 BL 0x3CA7F78
	0x03CC20D4 CBZ X0, 0x3CC20FC
	0x03CC20D8 LDR X8, [X25 + 0x15B8]
	0x03CC20DC STR W31, [X25 + 0x78]
	0x03CC20E0 CBZ X8, 0x3CC2174
	0x03CC20E4 LDR W9, [X8 + 0x18]
	0x03CC20E8 CBZ W9, 0x3CC2178
	0x03CC20EC LDR X8, [X8 + 0x38]
	0x03CC20F0 MOV X26, X0
	0x03CC20F4 STR X8, [X25 + 0x70]
	0x03CC20F8 B 0x3CC2140
	0x03CC20FC LDR X8, [X24 + 0x40]
	0x03CC2100 CBZ X8, 0x3CC2174
	0x03CC2104 LDR X2, [X8 + 0x178]
	0x03CC2108 CBZ X2, 0x3CC1F8C
	0x03CC210C LDR W8, [X2 + 0x18]
	0x03CC2110 CMP W8, 0x1
	0x03CC2114 B.LT 0x3CC1F8C
	0x03CC2118 MOVZ W3, 0x1
	0x03CC211C MOV W0, W19
	0x03CC2120 MOV X1, X20
	0x03CC2124 MOV W4, W23
	0x03CC2128 MOV W5, W22
	0x03CC212C MOV X6, X21
	0x03CC2130 MOV X7, X31
	0x03CC2134 BL 0x3CA84C8
	0x03CC2138 CBZ X0, 0x3CC1F8C
	0x03CC213C MOV X26, X0
	0x03CC2140 MOV X0, X20
	0x03CC2144 MOV W1, W19
	0x03CC2148 MOV X2, X26
	0x03CC214C MOV X3, X31
	0x03CC2150 BL 0x3CA1174
	0x03CC2154 MOV X0, X26
	0x03CC2158 LDP X20, X19, [X31 + 0x50]
	0x03CC215C LDP X22, X21, [X31 + 0x40]
	0x03CC2160 LDP X24, X23, [X31 + 0x30]
	0x03CC2164 LDP X26, X25, [X31 + 0x20]
	0x03CC2168 LDP X28, X27, [X31 + 0x10]
	0x03CC216C LDR X30, [X31], #0x60
	0x03CC2170 RET
	0x03CC2174 BL 0x1C16F20
	0x03CC2178 BL 0x1C16F28
	0x03CC217C STR X30, [X31 - 0x40]!
	0x03CC2180 STP X24, X23, [X31 + 0x10]
	0x03CC2184 STP X22, X21, [X31 + 0x20]
	0x03CC2188 STP X20, X19, [X31 + 0x30]
	0x03CC218C ADRP X23, 0x725000
	0x03CC2190 ADRP X24, 0x49F000
	0x03CC2194 LDRB W8, [X23 + 0x349]
	0x03CC2198 LDR X24, [X24 + 0xB50]
	0x03CC219C MOV X20, X4
	0x03CC21A0 MOV X19, X3
	0x03CC21A4 MOV W21, W2
	0x03CC21A8 MOV W22, W1
	0x03CC21AC TBNZ X8, 0x0, 0x3CC21C4
	0x03CC21B0 ADRP X0, 0x49F000
	0x03CC21B4 LDR X0, [X0 + 0xB50]
	0x03CC21B8 BL 0x1C16CF4
	0x03CC21BC MOVZ W8, 0x1
	0x03CC21C0 STRB W8, [X23 + 0x349]
	0x03CC21C4 LDR X8, [X24]
	0x03CC21C8 LDR X8, [X8 + 0xB8]
	0x03CC21CC LDR X8, [X8 + 0x10]
	0x03CC21D0 CBZ X8, 0x3CC2204
	0x03CC21D4 LDR X6, [X8 + 0x18]
	0x03CC21D8 LDR X0, [X8 + 0x40]
	0x03CC21DC LDR X5, [X8 + 0x28]
	0x03CC21E0 MOV W1, W22
	0x03CC21E4 MOV W2, W21
	0x03CC21E8 MOV X3, X20
	0x03CC21EC MOV X4, X19
	0x03CC21F0 LDP X20, X19, [X31 + 0x30]
	0x03CC21F4 LDP X22, X21, [X31 + 0x20]
	0x03CC21F8 LDP X24, X23, [X31 + 0x10]
	0x03CC21FC LDR X30, [X31], #0x40
	0x03CC2200 BR X6
	0x03CC2204 LDP X20, X19, [X31 + 0x30]
	0x03CC2208 LDP X22, X21, [X31 + 0x20]
	0x03CC220C LDP X24, X23, [X31 + 0x10]
	0x03CC2210 LDR X30, [X31], #0x40
	0x03CC2214 RET
	0x03CC2218 STP D15, D14, [X31 - 0xA0]!
	0x03CC221C STP D13, D12, [X31 + 0x10]
	0x03CC2220 STP D11, D10, [X31 + 0x20]
	0x03CC2224 STP D9, D8, [X31 + 0x30]
	0x03CC2228 STP X29, X30, [X31 + 0x40]
	0x03CC222C STP X28, X27, [X31 + 0x50]
	0x03CC2230 STP X26, X25, [X31 + 0x60]
	0x03CC2234 STP X24, X23, [X31 + 0x70]
	0x03CC2238 STP X22, X21, [X31 + 0x80]
	0x03CC223C STP X20, X19, [X31 + 0x90]
	0x03CC2240 SUB X31, X31, 0xD80
	0x03CC2244 ADRP X20, 0x725000
	0x03CC2248 LDRB W8, [X20 + 0x346]
	0x03CC224C MOV X23, X5
	0x03CC2250 MOV X19, X4
	0x03CC2254 MOV W28, W3
	0x03CC2258 MOV W24, W2
	0x03CC225C MOV V8.16B, V0.16B
	0x03CC2260 MOV X26, X1
	0x03CC2264 MOV X21, X0
	0x03CC2268 TBNZ X8, 0x0, 0x3CC2358
	0x03CC226C ADRP X0, 0x433000
	0x03CC2270 LDR X0, [X0 + 0x170]
	0x03CC2274 BL 0x1C16CF4
	0x03CC2278 ADRP X0, 0x431000
	0x03CC227C LDR X0, [X0 + 0xA28]
	0x03CC2280 BL 0x1C16CF4
	0x03CC2284 ADRP X0, 0x49F000
	0x03CC2288 LDR X0, [X0 + 0xB20]
	0x03CC228C BL 0x1C16CF4
	0x03CC2290 ADRP X0, 0x49F000
	0x03CC2294 LDR X0, [X0 + 0xB28]
	0x03CC2298 BL 0x1C16CF4
	0x03CC229C ADRP X0, 0x49F000
	0x03CC22A0 LDR X0, [X0 + 0xB30]
	0x03CC22A4 BL 0x1C16CF4
	0x03CC22A8 ADRP X0, 0x49F000
	0x03CC22AC LDR X0, [X0 + 0x250]
	0x03CC22B0 BL 0x1C16CF4
	0x03CC22B4 ADRP X0, 0x496000
	0x03CC22B8 LDR X0, [X0 + 0xE00]
	0x03CC22BC BL 0x1C16CF4
	0x03CC22C0 ADRP X0, 0x431000
	0x03CC22C4 LDR X0, [X0 + 0x5A8]
	0x03CC22C8 BL 0x1C16CF4
	0x03CC22CC ADRP X0, 0x431000
	0x03CC22D0 LDR X0, [X0 + 0x598]
	0x03CC22D4 BL 0x1C16CF4
	0x03CC22D8 ADRP X0, 0x49F000
	0x03CC22DC LDR X0, [X0 + 0x748]
	0x03CC22E0 BL 0x1C16CF4
	0x03CC22E4 ADRP X0, 0x49F000
	0x03CC22E8 LDR X0, [X0 + 0xB40]
	0x03CC22EC BL 0x1C16CF4
	0x03CC22F0 ADRP X0, 0x49F000
	0x03CC22F4 LDR X0, [X0 + 0xD98]
	0x03CC22F8 BL 0x1C16CF4
	0x03CC22FC ADRP X0, 0x49F000
	0x03CC2300 LDR X0, [X0 + 0xB48]
	0x03CC2304 BL 0x1C16CF4
	0x03CC2308 ADRP X0, 0x49F000
	0x03CC230C LDR X0, [X0 + 0xB50]
	0x03CC2310 BL 0x1C16CF4
	0x03CC2314 ADRP X0, 0x49F000
	0x03CC2318 LDR X0, [X0 + 0xB80]
	0x03CC231C BL 0x1C16CF4
	0x03CC2320 ADRP X0, 0x49F000
	0x03CC2324 LDR X0, [X0 + 0xBA8]
	0x03CC2328 BL 0x1C16CF4
	0x03CC232C ADRP X0, 0x49F000
	0x03CC2330 LDR X0, [X0 + 0xBB0]
	0x03CC2334 BL 0x1C16CF4
	0x03CC2338 ADRP X0, 0x49F000
	0x03CC233C LDR X0, [X0 + 0xBB8]
	0x03CC2340 BL 0x1C16CF4
	0x03CC2344 ADRP X0, 0x49F000
	0x03CC2348 LDR X0, [X0 + 0xBE0]
	0x03CC234C BL 0x1C16CF4
	0x03CC2350 MOVZ W8, 0x1
	0x03CC2354 STRB W8, [X20 + 0x346]
	0x03CC2358 ADD X0, X31, 0x9E0
	0x03CC235C MOVZ W2, 0x398
	0x03CC2360 MOV W1, W31
	0x03CC2364 STR X31, [X31 + 0xD78]
	0x03CC2368 BL 0x3EB1B10
	0x03CC236C ADD X0, X31, 0x648
	0x03CC2370 MOVZ W2, 0x398
	0x03CC2374 MOV W1, W31
	0x03CC2378 BL 0x3EB1B10
	0x03CC237C ADD X0, X31, 0x2B0
	0x03CC2380 MOVZ W2, 0x398
	0x03CC2384 MOV W1, W31
	0x03CC2388 BL 0x3EB1B10
	0x03CC238C MOVI V0.2D, 0x0
	0x03CC2390 ADD X8, X31, 0xED
	0x03CC2394 STR X31, [X31 + 0x238]
	0x03CC2398 STR X31, [X31 + 0x230]
	0x03CC239C STR W31, [X31 + 0x240]
	0x03CC23A0 STR X31, [X31 + 0x228]
	0x03CC23A4 STR X31, [X31 + 0x220]
	0x03CC23A8 STR W31, [X31 + 0x21C]
	0x03CC23AC STR X31, [X31 + 0x208]
	0x03CC23B0 STR X31, [X31 + 0x200]
	0x03CC23B4 STR W31, [X31 + 0x210]
	0x03CC23B8 STP X31, X31, [X31 + 0x1B0]
	0x03CC23BC STR W31, [X31 + 0x1C0]
	0x03CC23C0 STP X31, X31, [X31 + 0x198]
	0x03CC23C4 STR X31, [X31 + 0x1A8]
	0x03CC23C8 STP X31, X31, [X31 + 0x188]
	0x03CC23CC STP X31, X31, [X31 + 0x170]
	0x03CC23D0 STR X31, [X31 + 0x180]
	0x03CC23D4 STP X31, X31, [X31 + 0x158]
	0x03CC23D8 STR X31, [X31 + 0x168]
	0x03CC23DC STP X31, X31, [X31 + 0x140]
	0x03CC23E0 STP V0, V0, [X31 + 0x290]
	0x03CC23E4 STP V0, V0, [X31 + 0x270]
	0x03CC23E8 STP V0, V0, [X31 + 0x250]
	0x03CC23EC STUR V0, [X8 + 0xFF]
	0x03CC23F0 STP V0, V0, [X31 + 0x1D0]
	0x03CC23F4 STR W31, [X31 + 0x150]
	0x03CC23F8 CBZ X19, 0x3CC4BC4
	0x03CC23FC ADRP X8, 0x431000
	0x03CC2400 LDR X8, [X8 + 0x598]
	0x03CC2404 LDR X25, [X19 + 0x40]
	0x03CC2408 MOVZ W9, 0x1578
	0x03CC240C ADD X22, X21, X9
	0x03CC2410 LDR X0, [X8]
	0x03CC2414 LDR W8, [X0 + 0xE0]
	0x03CC2418 CBNZ W8, 0x3CC2420
	0x03CC241C BL 0x1C16DFC
	0x03CC2420 MOV X0, X25
	0x03CC2424 MOV X1, X31
	0x03CC2428 MOV X2, X31
	0x03CC242C BL 0x3C3883C
	0x03CC2430 TBNZ X0, 0x0, 0x3CC2508
	0x03CC2434 LDR X0, [X19 + 0x40]
	0x03CC2438 CBZ X0, 0x3CC4BC4
	0x03CC243C MOV X1, X31
	0x03CC2440 BL 0x3C9EF9C
	0x03CC2444 CBZ X0, 0x3CC2508
	0x03CC2448 LDR X8, [X21 + 0x20]
	0x03CC244C CBZ X8, 0x3CC2534
	0x03CC2450 LDR X9, [X8 + 0x18]
	0x03CC2454 CBZ X9, 0x3CC2534
	0x03CC2458 CBZ W9, 0x3CC4BC8
	0x03CC245C LDR W8, [X8 + 0x24]
	0x03CC2460 CBZ W8, 0x3CC2534
	0x03CC2464 LDR X2, [X19 + 0x40]
	0x03CC2468 MOV X20, X21
	0x03CC246C MOVI V1.2D, 0x0
	0x03CC2470 ADD X0, X31, 0x100
	0x03CC2474 STR X2, [X20 + 0x68]!
	0x03CC2478 LDR X4, [X19 + 0x48]
	0x03CC247C LDR V0, [X20 + 0x70]
	0x03CC2480 MOV W1, W31
	0x03CC2484 MOV X3, X31
	0x03CC2488 MOV X5, X31
	0x03CC248C STR W24, [X31 + 0x1C]
	0x03CC2490 STR W31, [X20 + 0x10]
	0x03CC2494 ADD X25, X20, 0x18
	0x03CC2498 STR X4, [X20 + 0x8]
	0x03CC249C STR X31, [X31 + 0x130]
	0x03CC24A0 STP V1, V1, [X31 + 0x110]
	0x03CC24A4 STR V1, [X31 + 0x10]
	0x03CC24A8 BL 0x3CA98D0
	0x03CC24AC ADRP X8, 0x49F000
	0x03CC24B0 LDR X8, [X8 + 0xBB8]
	0x03CC24B4 LDP V0, V1, [X31 + 0x100]
	0x03CC24B8 LDR V2, [X31 + 0x12]
	0x03CC24BC LDR X9, [X31 + 0x130]
	0x03CC24C0 LDR X2, [X8]
	0x03CC24C4 ADD X1, X31, 0xA0
	0x03CC24C8 MOV X0, X25
	0x03CC24CC STP V0, V1, [X31 + 0xA0]
	0x03CC24D0 STR V2, [X31 + 0xC]
	0x03CC24D4 STR X9, [X31 + 0xD0]
	0x03CC24D8 BL 0x26E25C0
	0x03CC24DC LDR X8, [X20 + 0x19D8]
	0x03CC24E0 LDR W27, [X20 + 0x80]
	0x03CC24E4 STR X20, [X31 + 0x90]
	0x03CC24E8 CBZ X8, 0x3CC24F8
	0x03CC24EC LDR W8, [X8 + 0x18]
	0x03CC24F0 CMP W27, W8
	0x03CC24F4 B.LE 0x3CC25C4
	0x03CC24F8 CMP W27, 0x400
	0x03CC24FC B.LE 0x3CC25A0
	0x03CC2500 ADD W1, W27, 0x100
	0x03CC2504 B 0x3CC25B0
	0x03CC2508 ADRP X8, 0x431000
	0x03CC250C LDR X8, [X8 + 0xA28]
	0x03CC2510 ADRP X19, 0x49F000
	0x03CC2514 LDR X0, [X8]
	0x03CC2518 LDR W8, [X0 + 0xE0]
	0x03CC251C LDR X19, [X19 + 0xBE0]
	0x03CC2520 CBNZ W8, 0x3CC2528
	0x03CC2524 BL 0x1C16DFC
	0x03CC2528 LDR X0, [X19]
	0x03CC252C MOV X1, X31
	0x03CC2530 BL 0x3C06A04
	0x03CC2534 MOVZ W19, 0x1
	0x03CC2538 STRB W19, [X22 + 0x30]
	0x03CC253C ADRP X20, 0x717000
	0x03CC2540 LDRB W8, [X20 + 0x78F]
	0x03CC2544 CBNZ W8, 0x3CC2558
	0x03CC2548 ADRP X0, 0x439000
	0x03CC254C LDR X0, [X0 + 0xF08]
	0x03CC2550 BL 0x1C16CF4
	0x03CC2554 STRB W19, [X20 + 0x78F]
	0x03CC2558 ADRP X8, 0x439000
	0x03CC255C LDR X8, [X8 + 0xF08]
	0x03CC2560 LDR X8, [X8]
	0x03CC2564 LDR X8, [X8 + 0xB8]
	0x03CC2568 LDR V0, [X8]
	0x03CC256C MOV S1, V0.S[1]
	0x03CC2570 ADD X31, X31, 0xD80
	0x03CC2574 LDP X20, X19, [X31 + 0x90]
	0x03CC2578 LDP X22, X21, [X31 + 0x80]
	0x03CC257C LDP X24, X23, [X31 + 0x70]
	0x03CC2580 LDP X26, X25, [X31 + 0x60]
	0x03CC2584 LDP X28, X27, [X31 + 0x50]
	0x03CC2588 LDP X29, X30, [X31 + 0x40]
	0x03CC258C LDP D9, D8, [X31 + 0x30]
	0x03CC2590 LDP D11, D10, [X31 + 0x20]
	0x03CC2594 LDP D13, D12, [X31 + 0x10]
	0x03CC2598 LDP D15, D14, [X31], #0xA0
	0x03CC259C RET
	0x03CC25A0 MOV W0, W27
	0x03CC25A4 MOV X1, X31
	0x03CC25A8 BL 0x3C2B340
	0x03CC25AC MOV W1, W0
	0x03CC25B0 ADRP X8, 0x49F000
	0x03CC25B4 LDR X8, [X8 + 0xD98]
	0x03CC25B8 LDR X0, [X8]
	0x03CC25BC BL 0x1C16D6C
	0x03CC25C0 STR X0, [X21 + 0x1A40]
	0x03CC25C4 LDR X0, [X19 + 0x40]
	0x03CC25C8 STR W28, [X31 + 0x64]
	0x03CC25CC CBZ X0, 0x3CC4BC4
	0x03CC25D0 LDR V13, [X26]
	0x03CC25D4 ADD X8, X31, 0xA0
	0x03CC25D8 MOV X1, X31
	0x03CC25DC BL 0x3C9EB14
	0x03CC25E0 ADD X0, X31, 0x250
	0x03CC25E4 ADD X1, X31, 0xA0
	0x03CC25E8 MOVZ W2, 0x60
	0x03CC25EC BL 0x3EB1AC0
	0x03CC25F0 ADD X0, X31, 0x250
	0x03CC25F4 MOV X1, X31
	0x03CC25F8 BL 0x3C9BF88
	0x03CC25FC LDR X9, [X19 + 0x40]
	0x03CC2600 CBZ X9, 0x3CC4BC4
	0x03CC2604 MOV W28, W0
	0x03CC2608 ADD X8, X31, 0xA0
	0x03CC260C MOV X0, X9
	0x03CC2610 MOV X1, X31
	0x03CC2614 BL 0x3C9EB14
	0x03CC2618 ADD X0, X31, 0x250
	0x03CC261C ADD X1, X31, 0xA0
	0x03CC2620 MOVZ W2, 0x60
	0x03CC2624 BL 0x3EB1AC0
	0x03CC2628 ADD X0, X31, 0x250
	0x03CC262C MOV X1, X31
	0x03CC2630 BL 0x3C9BF98
	0x03CC2634 MOVZ W9, 0x3F800000
	0x03CC2638 LDRB W8, [X19 + 0xBD]
	0x03CC263C LDR V14, [X26]
	0x03CC2640 STR W9, [X21 + 0xF0]
	0x03CC2644 MOV V9.16B, V0.16B
	0x03CC2648 LDR V0, [X26]
	0x03CC264C ADRP X20, 0x49F000
	0x03CC2650 ADRP X9, 0xFFFFFFFFFCE28000
	0x03CC2654 LDR V2, [X9 + 0xBC]
	0x03CC2658 STR S0, [X21 + 0xF4]
	0x03CC265C LDR X20, [X20 + 0xBB0]
	0x03CC2660 CMP W8, 0x0
	0x03CC2664 FMOV S1, 1
	0x03CC2668 ADD X0, X21, 0xF8
	0x03CC266C LDR X1, [X20]
	0x03CC2670 STR S2, [X31 + 0x54]
	0x03CC2674 FCSEL S15, S2, S1, EQ
	0x03CC2678 BL 0x26E31BC
	0x03CC267C LDR W8, [X19 + 0x60]
	0x03CC2680 ADD X0, X21, 0x160
	0x03CC2684 STR W8, [X21 + 0x124]
	0x03CC2688 LDR W1, [X19 + 0x70]
	0x03CC268C ADRP X8, 0x49F000
	0x03CC2690 STR W1, [X21 + 0x158]
	0x03CC2694 LDR X8, [X8 + 0xBA8]
	0x03CC2698 LDR X2, [X8]
	0x03CC269C BL 0x26E2008
	0x03CC26A0 STR W31, [X21 + 0x180]
	0x03CC26A4 ADRP X8, 0x49F000
	0x03CC26A8 LDR X8, [X8 + 0xB80]
	0x03CC26AC ADD X0, X21, 0x188
	0x03CC26B0 LDR X1, [X8]
	0x03CC26B4 BL 0x26E31B0
	0x03CC26B8 ADRP X24, 0x716000
	0x03CC26BC LDRB W8, [X24 + 0x85B]
	0x03CC26C0 CBNZ W8, 0x3CC26D8
	0x03CC26C4 ADRP X0, 0x431000
	0x03CC26C8 LDR X0, [X0 + 0x5A0]
	0x03CC26CC BL 0x1C16CF4
	0x03CC26D0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-160], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X29
	009 Move [X31+72], X30
	010 Move [X31+80], X28
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Subtract X31, X31, 384
	021 Move X19, 0x727000
	022 Move W8, [X19+832]
	023 Move X28, X3
	024 Move X22, X2
	025 Move X20, X1
	026 Move V8, V7
	027 Move V11, V6
	028 Move V12, V4
	029 Move V9, V3
	030 Move V13, V1
	031 Move V10, V0
	032 Move X21, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {54}
	037 Move X0, 0x433000
	038 Move X0, [X0+2600]
	039 Call 0x1C17CF4
	040 Move X0, 0x45B000
	041 Move X0, [X0+1544]
	042 Call 0x1C17CF4
	043 Move X0, 0x4A1000
	044 Move X0, [X0+1736]
	045 Call 0x1C17CF4
	046 Move X0, 0x4A1000
	047 Move X0, [X0+2888]
	048 Call 0x1C17CF4
	049 Move X0, 0x4A1000
	050 Move X0, [X0+3472]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X19+832], W8
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move X0, X21
	056 Move X1, X22
	057 Move [X31+352], X31
	058 Move [X31+360], X31
	059 Move [X31+368], W31
	060 Move [X31+336], X31
	061 Move [X31+344], X31
	062 Move [X31+304], V0
	063 Move [X31+312], V0
	064 Move [X31+272], V0
	065 Move [X31+280], V0
	066 Move [X31+240], V0
	067 Move [X31+248], V0
	068 Call TextGenerator.GetUnderlineSpecialCharacter, X0, X1
	069 Move X0, [X21+6688]
	070 Compare X0, 0
	071 JumpIfEqual {751}
	072 Compare X28, 0
	073 JumpIfEqual {793}
	074 Move X25, [X28+88]
	075 Compare X25, 0
	076 JumpIfEqual {793}
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Move W8, [X25+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W9, 80
	081 NotImplemented "Instruction MADD not yet implemented."
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Move X9, [X19+8]
	084 Compare X9, 0
	085 JumpIfEqual {793}
	086 Move W9, [X9+24]
	087 Add W26, W24, 12
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X9, 0x4A1000
	090 Move X9, [X9+1736]
	091 Move X0, [X9]
	092 Move W9, [X0+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move W8, [X25+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W8, W26, 3
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 NotImplemented "Instruction SBFM not yet implemented."
	102 Move X0, X19
	103 Move X2, X31
	104 Call MeshInfo.ResizeMeshInfo, X0, X1
	105 Move X0, [X21+6688]
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction FCSEL not yet implemented."
	108 Compare X0, 0
	109 JumpIfEqual {793}
	110 Move X1, X31
	111 Call TextElement.get_glyph, X0
	112 Compare X0, 0
	113 JumpIfEqual {793}
	114 Add X8, X31, 144
	115 Move X1, X31
	116 Call Glyph.get_metrics, X0
	117 Move V0, [X31+9]
	118 Move W8, [X31+160]
	119 Move [X31+22], V0
	120 Move [X31+368], W8
	121 Move X0, [X21+6688]
	122 Compare X0, 0
	123 JumpIfEqual {793}
	124 Move X1, X31
	125 Call TextElement.get_glyph, X0
	126 Compare X0, 0
	127 JumpIfEqual {793}
	128 Move V14, [X31+544]
	129 Move X1, X31
	130 Call Glyph.get_glyphRect, X0
	131 Move [X31+336], X0
	132 Move [X31+344], X1
	133 Move V0, [X21+216]
	134 Subtract S1, S11, S14
	135 Subtract S2, S14, S8
	136 Add X0, X31, 352
	137 Multiply S1, S1, S0
	138 Multiply S0, S2, S0
	139 Move X1, X31
	140 Add S10, S10, S1
	141 Add S8, S9, S0
	142 Call GlyphMetrics.get_width, X0
	143 Move V1, [X21+216]
	144 Move S2, 0.5
	145 Multiply S0, S0, S2
	146 Subtract S9, S8, S10
	147 Add S0, S0, S1
	148 Multiply S12, S0, S14
	149 Add S0, S12, S12
	150 NotImplemented "Instruction FCMP not yet implemented."
	151 Move S11, 1
	152 NotImplemented "Instruction FDIV not yet implemented."
	153 Multiply S12, S12, S11
	154 Move X0, [X21+6696]
	155 Compare X0, 0
	156 JumpIfEqual {793}
	157 Add X8, X31, 144
	158 Move X1, X31
	159 Call FontAsset.get_faceInfo, X0
	160 Add X0, X31, 240
	161 Add X1, X31, 144
	162 Move W2, 96
	163 Call 0x3EB2AC0
	164 Add X0, X31, 240
	165 Move X1, X31
	166 Call FaceInfo.get_underlineThickness, X0
	167 Move X8, [X28+88]
	168 Compare X8, 0
	169 JumpIfEqual {793}
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Move W10, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move W10, 80
	174 NotImplemented "Instruction MADD not yet implemented."
	175 Move X25, [X8+40]
	176 Compare X25, 0
	177 JumpIfEqual {793}
	178 Move W8, [X25+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move V1, [X21+216]
	181 Move W8, 12
	182 NotImplemented "Instruction MADD not yet implemented."
	183 Move [X8+40], W31
	184 Add S0, S0, S1
	185 Multiply S0, S0, S14
	186 Subtract S0, S13, S0
	187 Move [X8+32], S10
	188 Move [X8+40], S0
	189 Move W9, [X25+24]
	190 And X23, X24, 0
	191 Add W8, W23, 1
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Multiply S1, S1, S14
	194 Move X3, W8
	195 Move W8, 12
	196 Add S1, S13, S1
	197 NotImplemented "Instruction MADD not yet implemented."
	198 Move [X8+32], S10
	199 Move [X8+40], S1
	200 Move [X8+40], W31
	201 Move W9, [X25+24]
	202 Add W8, W24, 2
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X1, W8
	205 Move W8, 12
	206 Add S2, S10, S12
	207 NotImplemented "Instruction MADD not yet implemented."
	208 Move [X5+32], S2
	209 Move [X5+4], S1
	210 Move [X5+8], W31
	211 Move W9, [X25+24]
	212 Add W8, W23, 3
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X0, W8
	215 Move W8, 12
	216 NotImplemented "Instruction MADD not yet implemented."
	217 Move [X8+32], S2
	218 Move [X8+40], S0
	219 Move [X8+40], W31
	220 Move W9, [X25+24]
	221 Add W8, W24, 4
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X17, W8
	224 Move W8, 12
	225 NotImplemented "Instruction MADD not yet implemented."
	226 Move [X2+32], S2
	227 Move [X2+4], S0
	228 Move [X2+8], W31
	229 Move W9, [X25+24]
	230 Add W8, W23, 5
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X15, W8
	233 Move W8, 12
	234 NotImplemented "Instruction MADD not yet implemented."
	235 Move [X8+32], S2
	236 Move [X8+40], S1
	237 Move [X8+40], W31
	238 Move W9, [X25+24]
	239 Add W8, W24, 6
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X14, W8
	242 Move W8, 12
	243 Subtract S2, S8, S12
	244 NotImplemented "Instruction MADD not yet implemented."
	245 Move [X4+32], S2
	246 Move [X4+4], S1
	247 Move [X4+8], W31
	248 Move W9, [X25+24]
	249 Add W8, W24, 7
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X13, W8
	252 Move W8, 12
	253 NotImplemented "Instruction MADD not yet implemented."
	254 Move [X8+32], S2
	255 Move [X8+40], S0
	256 Move [X8+40], W31
	257 Move W9, [X25+24]
	258 Add W8, W23, 8
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X9, W8
	261 Move W8, 12
	262 NotImplemented "Instruction MADD not yet implemented."
	263 Move [X16+32], S2
	264 Move [X16+4], S0
	265 Move [X16+8], W31
	266 Move [X31+88], X9
	267 Move W9, [X25+24]
	268 Add W8, W24, 9
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X29, W8
	271 Move W8, 12
	272 NotImplemented "Instruction MADD not yet implemented."
	273 Move [X8+32], S2
	274 Move [X8+40], S1
	275 Move [X8+40], W31
	276 Move W9, [X25+24]
	277 Add W8, W23, 10
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move X26, W8
	280 Move W8, 12
	281 NotImplemented "Instruction MADD not yet implemented."
	282 Move [X8+32], S8
	283 Move [X8+40], S1
	284 Move [X8+40], W31
	285 Move W9, [X25+24]
	286 Add W8, W24, 11
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X19, W8
	289 Move W8, 12
	290 NotImplemented "Instruction MADD not yet implemented."
	291 Move [X8+32], S8
	292 Move [X8+40], S0
	293 Move [X8+40], W31
	294 Compare X22, 0
	295 JumpIfEqual {793}
	296 Move W8, [X22+260]
	297 Compare W8, 0
	298 JumpIfEqual {316}
	299 Move W10, [X25+24]
	300 Move V0, [X22+28]
	301 Move V1, [X22+36]
	302 Move X8, X31
	303 Subtract W10, W10, W23
	304 And X9, X24, 0
	305 Add S0, S0, S1
	306 NotImplemented "Instruction CSEL not yet implemented."
	307 Move W11, 12
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Add W12, W9, W8
	310 NotImplemented "Instruction SMADDL not yet implemented."
	311 Move V1, [X12+36]
	312 Add X8, X8, 1
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Subtract S1, S0, S1
	315 Move [X12+36], S1
	316 Move [X31+104], X15
	317 Move [X31+112], X0
	318 Move X0, [X21+6696]
	319 Move [X31+24], X2
	320 Move [X31+32], X5
	321 Move [X31+8], X16
	322 Move [X31+16], X4
	323 Move [X31+120], X1
	324 Move [X31+128], X3
	325 Move [X31+392], X17
	326 Move [X31+136], X14
	327 Move [X31+96], X13
	328 Compare X0, 0
	329 JumpIfEqual {793}
	330 Move X1, X31
	331 Call FontAsset.get_atlasWidth, X0
	332 Move X8, [X21+6696]
	333 Compare X8, 0
	334 JumpIfEqual {793}
	335 Move [X31+64], X29
	336 Move [X31+72], X26
	337 Move [X31+80], X19
	338 Move X19, 0x45A000
	339 Move X19, [X19+1544]
	340 Move W27, W0
	341 Move X0, X8
	342 Move X1, X31
	343 Call FontAsset.get_atlasHeight, X0
	344 Move X8, [X19]
	345 Move W26, W0
	346 Move W9, [X8+224]
	347 Compare W9, 0
	348 JumpIfNotEqual {351}
	349 Move X0, X8
	350 Call 0x1C17DFC
	351 Add X0, X31, 336
	352 Move X1, X31
	353 Call GlyphRect.get_width, X0
	354 Move V13, [X21+216]
	355 Move [X31+60], W0
	356 Add X0, X31, 336
	357 Move X1, X31
	358 Call GlyphRect.get_x, X0
	359 Move V8, [X21+216]
	360 Move W29, W0
	361 Add X0, X31, 336
	362 Move X1, X31
	363 Call GlyphRect.get_x, X0
	364 Move [X31+56], W0
	365 Add X0, X31, 336
	366 Move X1, X31
	367 Call GlyphRect.get_width, X0
	368 Move [X31+52], W0
	369 Add X0, X31, 336
	370 Move X1, X31
	371 Call GlyphRect.get_x, X0
	372 Move [X31+48], W0
	373 Add X0, X31, 336
	374 Move X1, X31
	375 Call GlyphRect.get_width, X0
	376 Move V12, [X21+216]
	377 Move [X31+44], W0
	378 Add X0, X31, 336
	379 Move X1, X31
	380 Call GlyphRect.get_y, X0
	381 Move V14, [X21+216]
	382 Move W22, W0
	383 Add X0, X31, 336
	384 Move X1, X31
	385 Call GlyphRect.get_y, X0
	386 Move W19, W0
	387 Add X0, X31, 336
	388 Move X1, X31
	389 Call GlyphRect.get_height, X0
	390 Move X8, [X28+88]
	391 Compare X8, 0
	392 JumpIfEqual {793}
	393 NotImplemented "Instruction LDRSW not yet implemented."
	394 Move W10, [X8+24]
	395 Move X15, [X31+120]
	396 Move X11, [X31+128]
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Move W10, 80
	399 NotImplemented "Instruction MADD not yet implemented."
	400 Move X8, [X8+64]
	401 Compare X8, 0
	402 JumpIfEqual {793}
	403 Move W9, [X8+24]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move V5, [X31+552]
	406 NotImplemented "Instruction SCVTF not yet implemented."
	407 Move S2, 1
	408 NotImplemented "Instruction SCVTF not yet implemented."
	409 NotImplemented "Instruction FDIV not yet implemented."
	410 NotImplemented "Instruction FDIV not yet implemented."
	411 NotImplemented "Instruction SCVTF not yet implemented."
	412 NotImplemented "Instruction SCVTF not yet implemented."
	413 Subtract S0, S0, S8
	414 Subtract S6, S3, S14
	415 Add X9, X8, X24
	416 Multiply S4, S1, S0
	417 Multiply S0, S2, S6
	418 NotImplemented "Instruction FABS not yet implemented."
	419 Move V3, [X21+216]
	420 Move [X9+32], S4
	421 Move [X9+40], S0
	422 Move [X9+40], W31
	423 Move [X9+44], S8
	424 Move W9, [X8+24]
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Add W9, W0, W19
	427 NotImplemented "Instruction SCVTF not yet implemented."
	428 Add S3, S3, S5
	429 Add X10, X8, X11
	430 Multiply S2, S2, S3
	431 Move [X10+40], W31
	432 Move [X10+32], S4
	433 Move [X10+40], S2
	434 Move [X10+44], S8
	435 Move W9, [X8+24]
	436 Move X22, X28
	437 Move X27, [X31+72]
	438 Move X26, [X31+80]
	439 Move X28, [X31+64]
	440 Move X29, [X31+88]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move W9, [X31+60]
	443 Move S5, 0.5
	444 Move X12, [X31+104]
	445 Move X14, [X31+112]
	446 Move X10, [X31+96]
	447 NotImplemented "Instruction SCVTF not yet implemented."
	448 Multiply S3, S3, S5
	449 Add S3, S13, S3
	450 Multiply S3, S11, S3
	451 Multiply S3, S1, S3
	452 Add X9, X8, X15
	453 Add S4, S4, S3
	454 Move [X9+40], W31
	455 Move [X9+32], S4
	456 Move [X9+40], S2
	457 Move [X9+44], S8
	458 Move W9, [X8+24]
	459 Move X11, [X31+136]
	460 Move X13, [X31+392]
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Add X9, X8, X14
	463 Move [X9+32], S4
	464 Move [X9+40], S0
	465 Move [X9+40], W31
	466 Move [X9+44], S8
	467 Move W9, [X8+24]
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move W9, [X31+56]
	470 NotImplemented "Instruction SCVTF not yet implemented."
	471 Move W9, [X31+52]
	472 NotImplemented "Instruction SCVTF not yet implemented."
	473 Multiply S5, S6, S5
	474 Add S4, S5, S4
	475 Add X9, X8, X13
	476 Multiply S4, S1, S4
	477 Move [X9+40], W31
	478 Move [X9+32], S4
	479 Move [X9+40], S0
	480 Move [X9+44], S8
	481 Move W9, [X8+24]
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Add X9, X8, X12
	484 Move [X9+32], S4
	485 Move [X9+40], S2
	486 Move [X9+40], W31
	487 Move [X9+44], S8
	488 Move W9, [X8+24]
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Add X9, X8, X11
	491 Move [X9+32], S4
	492 Move [X9+40], S2
	493 Move [X9+40], W31
	494 Move [X9+44], S8
	495 Move W9, [X8+24]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Add X9, X8, X10
	498 Move [X9+32], S4
	499 Move [X9+40], S0
	500 Move [X9+40], W31
	501 Move [X9+44], S8
	502 Move W9, [X8+24]
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move W10, [X31+44]
	505 Move W9, [X31+48]
	506 Add W9, W10, W9
	507 NotImplemented "Instruction SCVTF not yet implemented."
	508 Add S4, S12, S4
	509 Multiply S1, S1, S4
	510 Add X10, X8, X29
	511 Subtract S3, S1, S3
	512 Move [X10+40], W31
	513 Move [X10+32], S3
	514 Move [X10+40], S0
	515 Move [X10+44], S8
	516 Move W9, [X8+24]
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Add X9, X8, X28
	519 Move [X9+32], S3
	520 Move [X9+40], S2
	521 Move [X9+40], W31
	522 Move [X9+44], S8
	523 Move W9, [X8+24]
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Add X9, X8, X27
	526 Move [X9+32], S1
	527 Move [X9+40], S2
	528 Move [X9+40], W31
	529 Move [X9+44], S8
	530 Move W9, [X8+24]
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Add X8, X8, X26
	533 Move [X8+32], S1
	534 Move [X8+40], S0
	535 Move [X8+40], W31
	536 Move [X8+44], S8
	537 Move W8, [X25+24]
	538 NotImplemented "Instruction CMP not yet implemented."
	539 Move X8, [X22+88]
	540 Compare X8, 0
	541 JumpIfEqual {793}
	542 NotImplemented "Instruction LDRSW not yet implemented."
	543 Move W10, [X8+24]
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move X10, 0x4A0000
	546 Move X10, [X10+2888]
	547 Move X0, [X10]
	548 Move X10, [X31+32]
	549 Move V11, [X10]
	550 Move W10, 80
	551 NotImplemented "Instruction MADD not yet implemented."
	552 Move W9, [X0+224]
	553 Move X19, [X8+72]
	554 Compare W9, 0
	555 JumpIfNotEqual {557}
	556 Call 0x1C17DFC
	557 Move S0, W31
	558 Move S1, W31
	559 Move V2, V8
	560 Move X0, X31
	561 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	562 Compare X19, 0
	563 JumpIfEqual {793}
	564 Move W8, [X19+24]
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Add X8, X19, X24
	567 Move [X8+32], S0
	568 Move [X8+40], S1
	569 Move S0, W31
	570 Move S1, 1
	571 Move V2, V8
	572 Move X0, X31
	573 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	574 Move W8, [X19+24]
	575 Move X9, [X31+128]
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Move S2, 1
	578 Subtract S3, S11, S10
	579 NotImplemented "Instruction FDIV not yet implemented."
	580 Add X8, X19, X9
	581 Multiply S9, S11, S3
	582 Move [X8+32], S0
	583 Move [X8+40], S1
	584 Move S1, 1
	585 Move V0, V9
	586 Move V2, V8
	587 Move X0, X31
	588 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	589 Move W8, [X19+24]
	590 Move X9, [X31+120]
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Add X8, X19, X9
	593 Move [X8+32], S0
	594 Move [X8+40], S1
	595 Move S1, W31
	596 Move V0, V9
	597 Move V2, V8
	598 Move X0, X31
	599 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	600 Move W8, [X19+24]
	601 Move X9, [X31+112]
	602 NotImplemented "Instruction CMP not yet implemented."
	603 Add X8, X19, X9
	604 Move [X8+32], S0
	605 Move [X8+40], S1
	606 Move W8, [X25+24]
	607 Move X9, [X31+392]
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Move X9, [X31+136]
	610 NotImplemented "Instruction CMP not yet implemented."
	611 Move X8, [X31+24]
	612 Move S1, W31
	613 Move V2, V8
	614 Move X0, X31
	615 Move V0, [X8]
	616 Move X8, [X31+16]
	617 Subtract S0, S0, S10
	618 Move V12, [X8]
	619 Multiply S9, S11, S0
	620 Move V0, V9
	621 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	622 Move W8, [X19+24]
	623 Move X9, [X31+392]
	624 NotImplemented "Instruction CMP not yet implemented."
	625 Add X8, X19, X9
	626 Move [X8+32], S0
	627 Move [X8+40], S1
	628 Move S1, 1
	629 Move V0, V9
	630 Move V2, V8
	631 Move X0, X31
	632 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	633 Move W8, [X19+24]
	634 Move X9, [X31+104]
	635 NotImplemented "Instruction CMP not yet implemented."
	636 Subtract S2, S12, S10
	637 Add X8, X19, X9
	638 Multiply S9, S11, S2
	639 Move [X8+32], S0
	640 Move [X8+40], S1
	641 Move S1, 1
	642 Move V0, V9
	643 Move V2, V8
	644 Move X0, X31
	645 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	646 Move W8, [X19+24]
	647 Move X9, [X31+136]
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Add X8, X19, X9
	650 Move [X8+32], S0
	651 Move [X8+40], S1
	652 Move S1, W31
	653 Move V0, V9
	654 Move V2, V8
	655 Move X0, X31
	656 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	657 Move W8, [X19+24]
	658 Move X9, [X31+96]
	659 NotImplemented "Instruction CMP not yet implemented."
	660 Add X8, X19, X9
	661 Move [X8+32], S0
	662 Move [X8+40], S1
	663 Move W8, [X25+24]
	664 NotImplemented "Instruction CMP not yet implemented."
	665 Move X8, [X31+8]
	666 Move S1, W31
	667 Move V2, V8
	668 Move X0, X31
	669 Move V0, [X8]
	670 Subtract S0, S0, S10
	671 Multiply S9, S11, S0
	672 Move V0, V9
	673 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	674 Move W8, [X19+24]
	675 NotImplemented "Instruction CMP not yet implemented."
	676 Add X8, X19, X29
	677 Move [X8+32], S0
	678 Move [X8+40], S1
	679 Move S1, 1
	680 Move V0, V9
	681 Move V2, V8
	682 Move X0, X31
	683 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	684 Move W8, [X19+24]
	685 NotImplemented "Instruction CMP not yet implemented."
	686 Add X8, X19, X28
	687 Move [X8+32], S0
	688 Move [X8+40], S1
	689 Move S0, 1
	690 Move S1, 1
	691 Move V2, V8
	692 Move X0, X31
	693 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	694 Move W8, [X19+24]
	695 NotImplemented "Instruction CMP not yet implemented."
	696 Add X8, X19, X27
	697 Move [X8+32], S0
	698 Move [X8+40], S1
	699 Move S0, 1
	700 Move S1, W31
	701 Move V2, V8
	702 Move X0, X31
	703 Call TextGeneratorUtilities.PackUV, V0, V1, V2
	704 Move W8, [X19+24]
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Add X8, X19, X26
	707 Move [X8+32], S0
	708 Move [X8+40], S1
	709 Move W9, [X21+427]
	710 Move X8, [X22+88]
	711 Move X10, X20
	712 ShiftRight X10, 24
	713 And X10, X10, 0x7FFFFFFF
	714 NotImplemented "Instruction CMP not yet implemented."
	715 NotImplemented "Instruction CSEL not yet implemented."
	716 Compare X8, 0
	717 JumpIfEqual {793}
	718 NotImplemented "Instruction LDRSW not yet implemented."
	719 Move W11, [X8+24]
	720 NotImplemented "Instruction CMP not yet implemented."
	721 Move W11, 80
	722 NotImplemented "Instruction MADD not yet implemented."
	723 Move X8, [X8+80]
	724 Compare X8, 0
	725 JumpIfEqual {793}
	726 Move X9, X31
	727 NotImplemented "Instruction BFM not yet implemented."
	728 Move X10, X23
	729 ShiftRight X10, 32
	730 And X10, X10, 0x7FFFFFFF
	731 Move X11, 1
	732 Move W12, [X8+24]
	733 Add X13, X23, X9
	734 NotImplemented "Instruction CMP not yet implemented."
	735 Add X9, X9, 1
	736 Add X12, X8, X10
	737 NotImplemented "Instruction CMP not yet implemented."
	738 Add X10, X10, X11
	739 Move [X12+32], W20
	740 Move X8, [X22+88]
	741 Compare X8, 0
	742 JumpIfEqual {793}
	743 NotImplemented "Instruction LDRSW not yet implemented."
	744 Move W10, [X8+24]
	745 NotImplemented "Instruction CMP not yet implemented."
	746 Move W10, 80
	747 NotImplemented "Instruction MADD not yet implemented."
	748 Move W9, [X8+32]
	749 Add W9, W9, 12
	750 Move [X8+32], W9
	751 Compare X22, 0
	752 JumpIfEqual {793}
	753 Move X8, [X22+104]
	754 Compare X8, 0
	755 JumpIfEqual {793}
	756 Move W8, [X8+137]
	757 Compare W8, 0
	758 JumpIfEqual {771}
	759 Move X8, 0x432000
	760 Move X8, [X8+2600]
	761 Move X0, [X8]
	762 Move W8, [X0+224]
	763 Compare W8, 0
	764 JumpIfNotEqual {766}
	765 Call 0x1C17DFC
	766 Move X8, 0x4A0000
	767 Move X8, [X8+3472]
	768 Move X1, X31
	769 Move X0, [X8]
	770 Call Debug.LogWarning, X0
	771 Add X31, X31, 384
	772 Move X20, [X31+144]
	773 Move X19, [X31+152]
	774 Move X22, [X31+128]
	775 Move X21, [X31+136]
	776 Move X24, [X31+112]
	777 Move X23, [X31+120]
	778 Move X26, [X31+96]
	779 Move X25, [X31+104]
	780 Move X28, [X31+80]
	781 Move X27, [X31+88]
	782 Move X29, [X31+64]
	783 Move X30, [X31+72]
	784 Move D9, [X31+48]
	785 Move D8, [X31+56]
	786 Move D11, [X31+32]
	787 Move D10, [X31+40]
	788 Move D13, [X31+16]
	789 Move D12, [X31+24]
	790 Move V14, [X31+160]
	791 Return 
	792 Call 0x1C17F28
	793 Call 0x1C17F20

Method: System.Void DrawTextHighlight(UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color32 highlightColor, UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC2758 ADD X1, X31, 0xA0
	0x03CC275C MOVZ W2, 0x60
	0x03CC2760 BL 0x3EB1AC0
	0x03CC2764 ADD X0, X31, 0x250
	0x03CC2768 MOV X1, X31
	0x03CC276C BL 0x3C9BFB8
	0x03CC2770 LDR X0, [X24]
	0x03CC2774 CBZ X0, 0x3CC4BC4
	0x03CC2778 ADD X8, X31, 0xA0
	0x03CC277C MOV X1, X31
	0x03CC2780 MOV V11.16B, V0.16B
	0x03CC2784 ADD X24, X21, 0x324
	0x03CC2788 BL 0x3C9EB14
	0x03CC278C ADD X0, X31, 0x250
	0x03CC2790 ADD X1, X31, 0xA0
	0x03CC2794 MOVZ W2, 0x60
	0x03CC2798 BL 0x3EB1AC0
	0x03CC279C ADD X0, X31, 0x250
	0x03CC27A0 MOV X1, X31
	0x03CC27A4 BL 0x3C9BFF8
	0x03CC27A8 MOV V12.16B, V0.16B
	0x03CC27AC ADD X8, X21, 0x2EC
	0x03CC27B0 MOVI V0.2D, 0x0
	0x03CC27B4 STR V0, [X8]
	0x03CC27B8 STR W31, [X8 + 0x10]
	0x03CC27BC LDR X1, [X20]
	0x03CC27C0 ADD X0, X21, 0x300
	0x03CC27C4 FMOV S0, W31
	0x03CC27C8 BL 0x26E31BC
	0x03CC27CC ADRP X8, 0xFFFFFFFFFCE2B000
	0x03CC27D0 LDR V0, [X8 + 0xB28]
	0x03CC27D4 MOVZ W9, 0x80000000
	0x03CC27D8 STRB W31, [X21 + 0x320]
	0x03CC27DC STR X31, [X24]
	0x03CC27E0 STR W31, [X21 + 0x340]
	0x03CC27E4 STR W31, [X21 + 0x15AC]
	0x03CC27E8 STRB W31, [X21 + 0x2E8]
	0x03CC27EC STR W9, [X21 + 0x19C4]
	0x03CC27F0 STR D0, [X21 + 0x338]
	0x03CC27F4 LDR X9, [X19 + 0x68]
	0x03CC27F8 MOVI D1, 0x0
	0x03CC27FC MOVZ W8, 0xBF800000
	0x03CC2800 STR D0, [X31 + 0x40]
	0x03CC2804 STR D1, [X24 + 0x30]
	0x03CC2808 STR W8, [X21 + 0x35C]
	0x03CC280C MOVZ W8, 0x1
	0x03CC2810 MOVI D0, 0x0
	0x03CC2814 ADD X0, X31, 0xD78
	0x03CC2818 MOVN W1, 0x0
	0x03CC281C MOV W2, W31
	0x03CC2820 MOV X3, X31
	0x03CC2824 STR X9, [X31 + 0x10]
	0x03CC2828 STR X24, [X31 + 0x98]
	0x03CC282C STRB W8, [X22 + 0x470]
	0x03CC2830 STR D0, [X31 + 0x78]
	0x03CC2834 STR D1, [X21 + 0x370]
	0x03CC2838 STR W31, [X21 + 0x378]
	0x03CC283C STRB W31, [X21 + 0x37D]
	0x03CC2840 BL 0x3CC54E8
	0x03CC2844 ADD X0, X31, 0x9E0
	0x03CC2848 MOVZ W2, 0x398
	0x03CC284C MOV W1, W31
	0x03CC2850 BL 0x3EB1B10
	0x03CC2854 ADD X0, X31, 0x648
	0x03CC2858 MOVZ W2, 0x398
	0x03CC285C MOV W1, W31
	0x03CC2860 BL 0x3EB1B10
	0x03CC2864 ADD X0, X31, 0x2B0
	0x03CC2868 MOVZ W2, 0x398
	0x03CC286C MOV W1, W31
	0x03CC2870 BL 0x3EB1B10
	0x03CC2874 ADRP X8, 0x49F000
	0x03CC2878 LDR X8, [X8 + 0xB50]
	0x03CC287C LDR X8, [X8]
	0x03CC2880 LDR X8, [X8 + 0xB8]
	0x03CC2884 STRB W31, [X8 + 0x8]
	0x03CC2888 LDR W8, [X21 + 0x15A0]
	0x03CC288C LDR X1, [X21 + 0x20]
	0x03CC2890 ADD W8, W8, 0x1
	0x03CC2894 STR W8, [X21 + 0x15A0]
	0x03CC2898 CBZ X1, 0x3CC4BC4
	0x03CC289C SUB W9, W27, 0x1
	0x03CC28A0 STR W9, [X31 + 0x6C]
	0x03CC28A4 LDR W9, [X31 + 0x64]
	0x03CC28A8 FSUB S1, S11, S12
	0x03CC28AC ADRP X10, 0xFFFFFFFFFCE28000
	0x03CC28B0 FSUB S1, S10, S1
	0x03CC28B4 STR S1, [X31 + 0x34]
	0x03CC28B8 LDR V1, [X10 + 0x5C]
	0x03CC28BC ADRP X8, 0xFFFFFFFFFCE28000
	0x03CC28C0 AND W9, W9, 0xFFFFFFFE
	0x03CC28C4 STP W9, W31, [X31 + 0x38]
	0x03CC28C8 ADRP X9, 0xFFFFFFFFFCE27000
	0x03CC28CC LDR V3, [X8 + 0x330]
	0x03CC28D0 SCVTF S0, W28
	0x03CC28D4 LDR V2, [X9 + 0xF28]
	0x03CC28D8 FDIV S0, S13, S0
	0x03CC28DC STR S1, [X31 + 0xC]
	0x03CC28E0 FMOV S1, W31
	0x03CC28E4 FMUL S0, S0, S9
	0x03CC28E8 STR S1, [X31 + 0x50]
	0x03CC28EC FMOV S1, W31
	0x03CC28F0 STR S1, [X31 + 0x4C]
	0x03CC28F4 FMUL S1, S0, S15
	0x03CC28F8 FMUL S0, S14, S3
	0x03CC28FC FADD S4, S8, S2
	0x03CC2900 FMUL S0, S15, S0
	0x03CC2904 MOVZ W8, 0x1
	0x03CC2908 MOV W26, W31
	0x03CC290C MOVZ W29, 0x188
	0x03CC2910 STP S3, S1, [X31 + 0x2C]
	0x03CC2914 STP S4, S0, [X31 + 0x5C]
	0x03CC2918 MOV V14.16B, V1.16B
	0x03CC291C STR W8, [X31 + 0x58]
	0x03CC2920 LDR W8, [X1 + 0x18]
	0x03CC2924 CMP W26, W8
	0x03CC2928 B.GE 0x3CC4A20
	0x03CC292C B.CS 0x3CC4BC8
	0x03CC2930 ADD X8, X1, W26, 0x4, SXTW
	0x03CC2934 LDR W27, [X8 + 0x24]
	0x03CC2938 CMP W27, 0x1A
	0x03CC293C B.EQ 0x3CC2B44
	0x03CC2940 CBZ W27, 0x3CC4A20
	0x03CC2944 CMP W27, 0x3C
	0x03CC2948 B.NE 0x3CC2990
	0x03CC294C LDRB W8, [X19 + 0xB5]
	0x03CC2950 CBZ W8, 0x3CC2990
	0x03CC2954 MOVZ W8, 0x101
	0x03CC2958 ADD W2, W26, 0x1
	0x03CC295C ADD X3, X31, 0x21C
	0x03CC2960 MOV X0, X21
	0x03CC2964 MOV X4, X19
	0x03CC2968 MOV X5, X23
	0x03CC296C STRH W8, [X22]
	0x03CC2970 BL 0x3CBAFB8
	0x03CC2974 TBZ X0, 0x0, 0x3CC2988
	0x03CC2978 LDRB W8, [X22]
	0x03CC297C LDR W26, [X31 + 0x21C]
	0x03CC2980 CMP W8, 0x1
	0x03CC2984 B.EQ 0x3CC2B44
	0x03CC2988 CBNZ X23, 0x3CC29CC
	0x03CC298C B 0x3CC4BC4
	0x03CC2990 CBZ X23, 0x3CC4BC4
	0x03CC2994 LDR X8, [X23 + 0x30]
	0x03CC2998 CBZ X8, 0x3CC4BC4
	0x03CC299C LDR X9, [X31 + 0x98]
	0x03CC29A0 LDR W10, [X8 + 0x18]
	0x03CC29A4 LDRSW X9, [X9]
	0x03CC29A8 CMP W9, W10
	0x03CC29AC B.CS 0x3CC4BC8
	0x03CC29B0 MADD X8, X9, X29, X8
	0x03CC29B4 LDRB W9, [X8 + 0x28]
	0x03CC29B8 STRB W9, [X22]
	0x03CC29BC LDR W9, [X8 + 0x60]
	0x03CC29C0 STR W9, [X21 + 0x78]
	0x03CC29C4 LDR X8, [X8 + 0x40]
	0x03CC29C8 STR X8, [X21 + 0x68]
	0x03CC29CC LDR X8, [X23 + 0x30]
	0x03CC29D0 CBZ X8, 0x3CC4BC4
	0x03CC29D4 LDRSW X25, [X21 + 0x324]
	0x03CC29D8 LDR W9, [X8 + 0x18]
	0x03CC29DC CMP W25, W9
	0x03CC29E0 B.CS 0x3CC4BC8
	0x03CC29E4 MADD X8, X25, X29, X8
	0x03CC29E8 LDRB W8, [X8 + 0x64]
	0x03CC29EC LDR W20, [X21 + 0x78]
	0x03CC29F0 STRB W31, [X22 + 0x1]
	0x03CC29F4 MOV W24, W31
	0x03CC29F8 STR W8, [X31 + 0x84]
	0x03CC29FC LDR W8, [X31 + 0xD78]
	0x03CC2A00 CMP W8, W25
	0x03CC2A04 B.NE 0x3CC2AFC
	0x03CC2A08 LDR W27, [X31 + 0xD7C]
	0x03CC2A0C MOVZ W8, 0x2026
	0x03CC2A10 MOVZ W24, 0x1
	0x03CC2A14 STRB W24, [X22]
	0x03CC2A18 CMP W27, W8
	0x03CC2A1C B.EQ 0x3CC2A90
	0x03CC2A20 CMP W27, 0x3
	0x03CC2A24 B.NE 0x3CC2AFC
	0x03CC2A28 LDR X24, [X21 + 0x1A40]
	0x03CC2A2C CBZ X24, 0x3CC4BC4
	0x03CC2A30 LDR X8, [X31 + 0x90]
	0x03CC2A34 LDR X0, [X8]
	0x03CC2A38 CBZ X0, 0x3CC4BC4
	0x03CC2A3C MOV X1, X31
	0x03CC2A40 BL 0x3C9EF9C
	0x03CC2A44 CBZ X0, 0x3CC4BC4
	0x03CC2A48 ADRP X8, 0x49F000
	0x03CC2A4C LDR X8, [X8 + 0x250]
	0x03CC2A50 MOVZ W1, 0x3
	0x03CC2A54 LDR X2, [X8]
	0x03CC2A58 BL 0x2B0EFBC
	0x03CC2A5C LDR W8, [X24 + 0x18]
	0x03CC2A60 CMP W25, W8
	0x03CC2A64 B.CS 0x3CC4BC8
	0x03CC2A68 MADD X8, X25, X29, X24
	0x03CC2A6C STR X0, [X8 + 0x30]
	0x03CC2A70 ADRP X8, 0x49F000
	0x03CC2A74 LDR X8, [X8 + 0xB50]
	0x03CC2A78 MOVZ W24, 0x1
	0x03CC2A7C MOVZ W27, 0x3
	0x03CC2A80 LDR X8, [X8]
	0x03CC2A84 LDR X8, [X8 + 0xB8]
	0x03CC2A88 STRB W24, [X8 + 0x8]
	0x03CC2A8C B 0x3CC2B5C
	0x03CC2A90 LDR X8, [X21 + 0x1A40]
	0x03CC2A94 CBZ X8, 0x3CC4BC4
	0x03CC2A98 LDR W9, [X8 + 0x18]
	0x03CC2A9C CMP W25, W9
	0x03CC2AA0 B.CS 0x3CC4BC8
	0x03CC2AA4 LDR X9, [X21 + 0x1A00]
	0x03CC2AA8 NOP
	0x03CC2AAC MADD X8, X25, X29, X8
	0x03CC2AB0 MOVZ W24, 0x1
	0x03CC2AB4 STRB W24, [X8 + 0x28]
	0x03CC2AB8 STR X9, [X8 + 0x30]
	0x03CC2ABC LDR X9, [X21 + 0x1A08]
	0x03CC2AC0 MOVZ W27, 0x2026
	0x03CC2AC4 STR X9, [X8 + 0x40]
	0x03CC2AC8 LDR X9, [X21 + 0x1A10]
	0x03CC2ACC STR X9, [X8 + 0x58]
	0x03CC2AD0 LDR W9, [X21 + 0x1A18]
	0x03CC2AD4 STR W9, [X8 + 0x60]
	0x03CC2AD8 ADRP X8, 0x49F000
	0x03CC2ADC LDR X8, [X8 + 0xB50]
	0x03CC2AE0 ADD W9, W25, 0x1
	0x03CC2AE4 LDR X8, [X8]
	0x03CC2AE8 LDR X8, [X8 + 0xB8]
	0x03CC2AEC STRB W24, [X8 + 0x8]
	0x03CC2AF0 MOVZ W8, 0x3
	0x03CC2AF4 STR W9, [X31 + 0xD78]
	0x03CC2AF8 STR W8, [X31 + 0xD7C]
	0x03CC2AFC CMP W27, 0x3
	0x03CC2B00 B.EQ 0x3CC2B5C
	0x03CC2B04 LDR W8, [X19 + 0xE4]
	0x03CC2B08 CMP W25, W8
	0x03CC2B0C B.GE 0x3CC2B5C
	0x03CC2B10 LDR X8, [X21 + 0x1A40]
	0x03CC2B14 CBZ X8, 0x3CC4BC4
	0x03CC2B18 LDR W9, [X8 + 0x18]
	0x03CC2B1C CMP W25, W9
	0x03CC2B20 B.CS 0x3CC4BC8
	0x03CC2B24 MADD X8, X25, X29, X8
	0x03CC2B28 MOVZ W10, 0x200B
	0x03CC2B2C STRB W31, [X8 + 0x1A0]
	0x03CC2B30 STRH W10, [X8 + 0x20]
	0x03CC2B34 STR W31, [X8 + 0x6C]
	0x03CC2B38 LDR X8, [X31 + 0x98]
	0x03CC2B3C ADD W9, W25, 0x1
	0x03CC2B40 STR W9, [X8]
	0x03CC2B44 MOV V12.16B, V14.16B
	0x03CC2B48 LDR X1, [X21 + 0x20]
	0x03CC2B4C ADD W26, W26, 0x1
	0x03CC2B50 MOV V14.16B, V12.16B
	0x03CC2B54 CBNZ X1, 0x3CC2920
	0x03CC2B58 B 0x3CC4BC4
	0x03CC2B5C LDRB W8, [X22]
	0x03CC2B60 CMP W8, 0x1
	0x03CC2B64 B.NE 0x3CC2BDC
	0x03CC2B68 LDR W8, [X21 + 0x124]
	0x03CC2B6C TBNZ X8, 0x4, 0x3CC2BE8
	0x03CC2B70 TBNZ X8, 0x3, 0x3CC2C40
	0x03CC2B74 FMOV S0, 1
	0x03CC2B78 STR S0, [X31 + 0x80]
	0x03CC2B7C TBZ X8, 0x5, 0x3CC2C98
	0x03CC2B80 ADRP X8, 0x433000
	0x03CC2B84 LDR X8, [X8 + 0x170]
	0x03CC2B88 LDR X0, [X8]
	0x03CC2B8C LDR W8, [X0 + 0xE0]
	0x03CC2B90 CBNZ W8, 0x3CC2B98
	0x03CC2B94 BL 0x1C16DFC
	0x03CC2B98 MOV W0, W27
	0x03CC2B9C MOV X1, X31
	0x03CC2BA0 BL 0x331AA58
	0x03CC2BA4 TBZ X0, 0x0, 0x3CC2C98
	0x03CC2BA8 ADRP X8, 0x433000
	0x03CC2BAC LDR X8, [X8 + 0x170]
	0x03CC2BB0 LDR X0, [X8]
	0x03CC2BB4 LDR W8, [X0 + 0xE0]
	0x03CC2BB8 CBNZ W8, 0x3CC2BC0
	0x03CC2BBC BL 0x1C16DFC
	0x03CC2BC0 MOV W0, W27
	0x03CC2BC4 MOV X1, X31
	0x03CC2BC8 BL 0x331ACB8
	0x03CC2BCC LDR V0, [X31 + 0xC]
	0x03CC2BD0 AND W27, W0, 0xFFFF
	0x03CC2BD4 STR S0, [X31 + 0x80]
	0x03CC2BD8 B 0x3CC2C98
	0x03CC2BDC FMOV S0, 1
	0x03CC2BE0 STR S0, [X31 + 0x80]
	0x03CC2BE4 B 0x3CC2C9C
	0x03CC2BE8 ADRP X8, 0x433000
	0x03CC2BEC LDR X8, [X8 + 0x170]
	0x03CC2BF0 LDR X0, [X8]
	0x03CC2BF4 LDR W8, [X0 + 0xE0]
	0x03CC2BF8 CBNZ W8, 0x3CC2C00
	0x03CC2BFC BL 0x1C16DFC
	0x03CC2C00 MOV W0, W27
	0x03CC2C04 MOV X1, X31
	0x03CC2C08 BL 0x331AA58
	0x03CC2C0C FMOV S0, 1
	0x03CC2C10 STR S0, [X31 + 0x80]
	0x03CC2C14 TBZ X0, 0x0, 0x3CC2C98
	0x03CC2C18 ADRP X8, 0x433000
	0x03CC2C1C LDR X8, [X8 + 0x170]
	0x03CC2C20 LDR X0, [X8]
	0x03CC2C24 LDR W8, [X0 + 0xE0]
	0x03CC2C28 CBNZ W8, 0x3CC2C30
	0x03CC2C2C BL 0x1C16DFC
	0x03CC2C30 MOV W0, W27
	0x03CC2C34 MOV X1, X31
	0x03CC2C38 BL 0x331ACB8
	0x03CC2C3C B 0x3CC2C94
	0x03CC2C40 ADRP X8, 0x433000
	0x03CC2C44 LDR X8, [X8 + 0x170]
	0x03CC2C48 LDR X0, [X8]
	0x03CC2C4C LDR W8, [X0 + 0xE0]
	0x03CC2C50 CBNZ W8, 0x3CC2C58
	0x03CC2C54 BL 0x1C16DFC
	0x03CC2C58 MOV W0, W27
	0x03CC2C5C MOV X1, X31
	0x03CC2C60 BL 0x331A99C
	0x03CC2C64 FMOV S0, 1
	0x03CC2C68 STR S0, [X31 + 0x80]
	0x03CC2C6C TBZ X0, 0x0, 0x3CC2C98
	0x03CC2C70 ADRP X8, 0x433000
	0x03CC2C74 LDR X8, [X8 + 0x170]
	0x03CC2C78 LDR X0, [X8]
	0x03CC2C7C LDR W8, [X0 + 0xE0]
	0x03CC2C80 CBNZ W8, 0x3CC2C88
	0x03CC2C84 BL 0x1C16DFC
	0x03CC2C88 MOV W0, W27
	0x03CC2C8C MOV X1, X31
	0x03CC2C90 BL 0x331AE30
	0x03CC2C94 AND W27, W0, 0xFFFF
	0x03CC2C98 LDRB W8, [X22]
	0x03CC2C9C CMP W8, 0x1
	0x03CC2CA0 B.EQ 0x3CC2D40
	0x03CC2CA4 CMP W8, 0x2
	0x03CC2CA8 B.NE 0x3CC2EB4
	0x03CC2CAC LDR X8, [X23 + 0x30]
	0x03CC2CB0 CBZ X8, 0x3CC4BC4
	0x03CC2CB4 LDR X9, [X31 + 0x98]
	0x03CC2CB8 LDR W10, [X8 + 0x18]
	0x03CC2CBC LDRSW X9, [X9]
	0x03CC2CC0 CMP W9, W10
	0x03CC2CC4 B.CS 0x3CC4BC8
	0x03CC2CC8 MADD X8, X9, X29, X8
	0x03CC2CCC LDR X28, [X8 + 0x30]
	0x03CC2CD0 CBZ X28, 0x3CC4BC4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+32], D13
	003 Move [X31+40], D12
	004 Move [X31+48], D11
	005 Move [X31+56], D10
	006 Move [X31+64], D9
	007 Move [X31+72], D8
	008 Move [X31+80], X29
	009 Move [X31+88], X30
	010 Move [X31+96], X28
	011 Move [X31+104], X27
	012 Move [X31+112], X26
	013 Move [X31+120], X25
	014 Move [X31+128], X24
	015 Move [X31+136], X23
	016 Move [X31+144], X22
	017 Move [X31+152], X21
	018 Move [X31+160], X20
	019 Move [X31+168], X19
	020 Move X19, 0x726000
	021 Move W8, [X19+833]
	022 Move X25, X3
	023 Move X22, X2
	024 Move X26, X1
	025 Move V11, V5
	026 Move V8, V4
	027 Move V10, V3
	028 Move V13, V2
	029 Move V9, V1
	030 Move V12, V0
	031 Move X21, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {50}
	036 Move X0, 0x432000
	037 Move X0, [X0+2600]
	038 Call 0x1C17CF4
	039 Move X0, 0x45A000
	040 Move X0, [X0+1544]
	041 Call 0x1C17CF4
	042 Move X0, 0x4A0000
	043 Move X0, [X0+1736]
	044 Call 0x1C17CF4
	045 Move X0, 0x498000
	046 Move X0, [X0+800]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X19+833], W8
	050 Move X0, X21
	051 Move X1, X22
	052 Move [X31+16], X31
	053 Move [X31+24], X31
	054 Call TextGenerator.GetUnderlineSpecialCharacter, X0, X1
	055 Move X8, [X21+6688]
	056 Compare X8, 0
	057 JumpIfEqual {337}
	058 Compare X25, 0
	059 JumpIfEqual {378}
	060 Move X19, [X25+88]
	061 Compare X19, 0
	062 JumpIfEqual {378}
	063 Move W20, [X21+120]
	064 Move W8, [X19+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X9, W20
	067 Move W10, 80
	068 NotImplemented "Instruction MADD not yet implemented."
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Move X9, [X23+8]
	071 Compare X9, 0
	072 JumpIfEqual {378}
	073 Move W9, [X9+24]
	074 Add W24, W27, 4
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X9, 0x4A0000
	077 Move X9, [X9+1736]
	078 Move X0, [X9]
	079 Move W9, [X0+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move W8, [X19+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add W8, W24, 3
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 NotImplemented "Instruction SBFM not yet implemented."
	089 Move X0, X23
	090 Move X2, X31
	091 Call MeshInfo.ResizeMeshInfo, X0, X1
	092 Move X19, [X25+88]
	093 Compare X19, 0
	094 JumpIfEqual {378}
	095 Move W20, [X21+120]
	096 Move W8, [X19+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W8, 80
	099 NotImplemented "Instruction SMADDL not yet implemented."
	100 Move X8, [X8+40]
	101 Compare X8, 0
	102 JumpIfEqual {378}
	103 Move W9, [X8+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W9, 12
	106 NotImplemented "Instruction MADD not yet implemented."
	107 Move [X9+36], S9
	108 Move [X9-4], S12
	109 Move [X9+4], S13
	110 Move W11, [X8+24]
	111 Add W10, W27, 1
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X28, W10
	114 Move W10, 12
	115 NotImplemented "Instruction MADD not yet implemented."
	116 Move [X10+36], S8
	117 Move [X10-4], S12
	118 Move [X10+4], W31
	119 Move W12, [X8+24]
	120 Add W11, W27, 2
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X29, W11
	123 Move W11, 12
	124 NotImplemented "Instruction MADD not yet implemented."
	125 Move [X11+36], S8
	126 Move [X11-4], S10
	127 Move [X11+4], S11
	128 Move W13, [X8+24]
	129 Add W12, W27, 3
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X19, W12
	132 Move W12, 12
	133 NotImplemented "Instruction MADD not yet implemented."
	134 Move [X12+36], S9
	135 Move [X12-4], S10
	136 Move [X12+4], W31
	137 Compare X22, 0
	138 JumpIfEqual {378}
	139 Move W13, [X22+260]
	140 Compare W13, 0
	141 JumpIfEqual {156}
	142 Move W8, [X8+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move V0, [X22+28]
	145 Move V1, [X22+36]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add S1, S0, S1
	148 Subtract S0, S1, S9
	149 Move [X9], S0
	150 Subtract S1, S1, S8
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move [X10], S1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X11], S1
	155 Move [X12], S0
	156 Move X8, [X25+88]
	157 Compare X8, 0
	158 JumpIfEqual {378}
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Move W10, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, [X21+6696]
	163 Compare X0, 0
	164 JumpIfEqual {378}
	165 Move W10, 80
	166 NotImplemented "Instruction MADD not yet implemented."
	167 Move X20, [X8+64]
	168 Move X1, X31
	169 Call FontAsset.get_atlasWidth, X0
	170 Move X8, [X21+6696]
	171 Compare X8, 0
	172 JumpIfEqual {378}
	173 Move W22, W0
	174 Move X0, X8
	175 Move X1, X31
	176 Call FontAsset.get_atlasHeight, X0
	177 Move X8, [X21+6688]
	178 Compare X8, 0
	179 JumpIfEqual {378}
	180 Move W23, W0
	181 Move X0, X8
	182 Move X1, X31
	183 Call TextElement.get_glyph, X0
	184 Compare X0, 0
	185 JumpIfEqual {378}
	186 Move [X31], X26
	187 Move [X31+8], X25
	188 Move X24, 0x45A000
	189 Move X24, [X24+1544]
	190 Move X1, X31
	191 Call Glyph.get_glyphRect, X0
	192 Move X8, X0
	193 Move X0, [X24]
	194 Move [X31+16], X8
	195 Move [X31+24], X1
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Add X0, X31, 16
	201 Move X1, X31
	202 Call GlyphRect.get_x, X0
	203 Move W24, W0
	204 Add X0, X31, 16
	205 Move X1, X31
	206 Call GlyphRect.get_width, X0
	207 Move W25, W0
	208 Add X0, X31, 16
	209 Move X1, X31
	210 Call GlyphRect.get_y, X0
	211 Move W26, W0
	212 Add X0, X31, 16
	213 Move X1, X31
	214 Call GlyphRect.get_height, X0
	215 Compare X20, 0
	216 JumpIfEqual {378}
	217 Move W8, [X20+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction SCVTF not yet implemented."
	220 Move S2, 0.5
	221 NotImplemented "Instruction SCVTF not yet implemented."
	222 NotImplemented "Instruction SCVTF not yet implemented."
	223 NotImplemented "Instruction SCVTF not yet implemented."
	224 Multiply S1, S1, S2
	225 Multiply S2, S5, S2
	226 NotImplemented "Instruction SCVTF not yet implemented."
	227 NotImplemented "Instruction SCVTF not yet implemented."
	228 Add S0, S1, S0
	229 Move S6, 1
	230 Add S7, S2, S3
	231 NotImplemented "Instruction FDIV not yet implemented."
	232 NotImplemented "Instruction FDIV not yet implemented."
	233 NotImplemented "Instruction FDIV not yet implemented."
	234 NotImplemented "Instruction FDIV not yet implemented."
	235 Add X8, X20, X27
	236 Subtract S4, S2, S1
	237 Subtract S0, S5, S3
	238 Move [X8+32], S4
	239 Move [X8+40], S0
	240 Move [X8+40], X31
	241 Move W8, [X20+24]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Add S3, S3, S5
	244 Add X8, X20, X28
	245 Move [X8+32], S4
	246 Move [X8+40], S3
	247 Move [X8+40], X31
	248 Move W8, [X20+24]
	249 Move X13, [X31]
	250 Move X12, [X31+8]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Add S1, S1, S2
	253 Add X8, X20, X29
	254 Move [X8+32], S1
	255 Move [X8+40], S3
	256 Move [X8+40], X31
	257 Move W8, [X20+24]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Add X8, X20, X19
	260 Move [X8+32], S1
	261 Move [X8+40], S0
	262 Move [X8+40], X31
	263 Move X8, [X12+88]
	264 Compare X8, 0
	265 JumpIfEqual {378}
	266 NotImplemented "Instruction LDRSW not yet implemented."
	267 Move W10, [X8+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move W10, 80
	270 NotImplemented "Instruction MADD not yet implemented."
	271 Move X8, [X8+72]
	272 Compare X8, 0
	273 JumpIfEqual {378}
	274 Move W9, [X8+24]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X9, -52244480
	277 Move V0, [X9]
	278 Add X9, X8, X27
	279 Move [X9+32], D0
	280 Move W9, [X8+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Add X9, X8, X28
	283 Move [X9+32], D0
	284 Move W9, [X8+24]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Add X9, X8, X29
	287 Move [X9+32], D0
	288 Move W9, [X8+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Add X8, X8, X19
	291 Move [X8+32], D0
	292 Move W9, [X21+427]
	293 Move X8, [X12+88]
	294 Move X10, X13
	295 ShiftRight X10, 24
	296 And X10, X10, 0x7FFFFFFF
	297 NotImplemented "Instruction CMP not yet implemented."
	298 NotImplemented "Instruction CSEL not yet implemented."
	299 Compare X8, 0
	300 JumpIfEqual {378}
	301 NotImplemented "Instruction LDRSW not yet implemented."
	302 Move W11, [X8+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move W11, 80
	305 NotImplemented "Instruction MADD not yet implemented."
	306 Move X8, [X8+80]
	307 Compare X8, 0
	308 JumpIfEqual {378}
	309 Move W10, [X8+24]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 NotImplemented "Instruction BFM not yet implemented."
	312 Add X9, X8, X27
	313 Move [X9+32], W13
	314 Move W9, [X8+24]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Add X9, X8, X28
	317 Move [X9+32], W13
	318 Move W9, [X8+24]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Add X9, X8, X29
	321 Move [X9+32], W13
	322 Move W9, [X8+24]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Add X8, X8, X19
	325 Move [X8+32], W13
	326 Move X8, [X12+88]
	327 Compare X8, 0
	328 JumpIfEqual {378}
	329 NotImplemented "Instruction LDRSW not yet implemented."
	330 Move W10, [X8+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move W10, 80
	333 NotImplemented "Instruction MADD not yet implemented."
	334 Move W9, [X8+32]
	335 Add W9, W9, 4
	336 Move [X8+32], W9
	337 Compare X22, 0
	338 JumpIfEqual {378}
	339 Move X8, [X22+104]
	340 Compare X8, 0
	341 JumpIfEqual {378}
	342 Move W8, [X8+137]
	343 Compare W8, 0
	344 JumpIfEqual {357}
	345 Move X8, 0x432000
	346 Move X8, [X8+2600]
	347 Move X0, [X8]
	348 Move W8, [X0+224]
	349 Compare W8, 0
	350 JumpIfNotEqual {352}
	351 Call 0x1C17DFC
	352 Move X8, 0x498000
	353 Move X8, [X8+800]
	354 Move X1, X31
	355 Move X0, [X8]
	356 Call Debug.LogWarning, X0
	357 Move X20, [X31+160]
	358 Move X19, [X31+168]
	359 Move X22, [X31+144]
	360 Move X21, [X31+152]
	361 Move X24, [X31+128]
	362 Move X23, [X31+136]
	363 Move X26, [X31+112]
	364 Move X25, [X31+120]
	365 Move X28, [X31+96]
	366 Move X27, [X31+104]
	367 Move X29, [X31+80]
	368 Move X30, [X31+88]
	369 Move D9, [X31+64]
	370 Move D8, [X31+72]
	371 Move D11, [X31+48]
	372 Move D10, [X31+56]
	373 Move D13, [X31+32]
	374 Move D12, [X31+40]
	375 Add X31, X31, 176
	376 Return 
	377 Call 0x1C17F28
	378 Call 0x1C17F20

Method: System.Void ClearMesh(System.Boolean updateMesh, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC2CD4 ADRP X9, 0x49F000
	0x03CC2CD8 LDR X8, [X28]
	0x03CC2CDC LDR X9, [X9 + 0xB40]
	0x03CC2CE0 LDRB W10, [X8 + 0x130]
	0x03CC2CE4 LDR X1, [X9]
	0x03CC2CE8 LDRB W9, [X1 + 0x130]
	0x03CC2CEC CMP W10, W9
	0x03CC2CF0 B.CC 0x3CC4BCC

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {9}
	003 And W8, W0, 1
	004 Move X0, X1
	005 Move W1, W8
	006 Move X2, X31
	007 Call TextInfo.ClearMeshInfo, X0, X1
	008 Return 
	009 Move [X31-16], X30
	010 Call 0x1C17F20

Method: System.Int32 SetArraySizes(UnityEngine.TextCore.Text.TextProcessingElement[] textProcessingArray, UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CBA66C MOVZ W12, 0x38
	0x03CBA670 B.EQ 0x3CBA70C
	0x03CBA674 TBNZ X0, 0x0, 0x3CBA70C
	0x03CBA678 LDR X8, [X19 + 0x15B8]
	0x03CBA67C CBZ X8, 0x3CBAA60
	0x03CBA680 LDRSW X9, [X19 + 0x78]
	0x03CBA684 LDR W10, [X8 + 0x18]
	0x03CBA688 CMP W9, W10
	0x03CBA68C B.CS 0x3CBAA58
	0x03CBA690 MADD X8, X9, X12, X8
	0x03CBA694 LDR W9, [X8 + 0x54]!
	0x03CBA698 MOVZ W10, 0x3FFF
	0x03CBA69C CMP W9, W10
	0x03CBA6A0 B.LT 0x3CBA704
	0x03CBA6A4 ADRP X8, 0x43D000
	0x03CBA6A8 LDR X25, [X19 + 0x70]
	0x03CBA6AC LDR X8, [X8 + 0xCA0]
	0x03CBA6B0 LDR X0, [X8]
	0x03CBA6B4 BL 0x1C16F10
	0x03CBA6B8 MOV X1, X25
	0x03CBA6BC MOV X2, X31
	0x03CBA6C0 MOV X26, X0
	0x03CBA6C4 BL 0x3C145DC
	0x03CBA6C8 LDR X1, [X19 + 0x68]
	0x03CBA6CC LDR X3, [X19 + 0x19E0]
	0x03CBA6D0 LDR X2, [X31 + 0x40]
	0x03CBA6D4 MOV X0, X26
	0x03CBA6D8 MOV X4, X31
	0x03CBA6DC BL 0x3CA994C
	0x03CBA6E0 LDR X8, [X19 + 0x15B8]
	0x03CBA6E4 STR W0, [X19 + 0x78]
	0x03CBA6E8 CBZ X8, 0x3CBAA60
	0x03CBA6EC LDR W9, [X8 + 0x18]
	0x03CBA6F0 MOVZ W12, 0x38
	0x03CBA6F4 CMP W0, W9
	0x03CBA6F8 B.CS 0x3CBAA58
	0x03CBA6FC SMADDL X8, X0, X12, X8
	0x03CBA700 LDR W9, [X8 + 0x54]!
	0x03CBA704 ADD W9, W9, 0x1
	0x03CBA708 STR W9, [X8]
	0x03CBA70C LDR X9, [X24]
	0x03CBA710 CBZ X9, 0x3CBAA60
	0x03CBA714 LDR W8, [X19 + 0xE8]
	0x03CBA718 LDR W10, [X9 + 0x18]
	0x03CBA71C CMP W8, W10
	0x03CBA720 B.CS 0x3CBAA58
	0x03CBA724 LDR X10, [X19 + 0x70]
	0x03CBA728 SXTW X11, W8
	0x03CBA72C MADD X11, X11, X27, X9
	0x03CBA730 STR X10, [X11 + 0x58]
	0x03CBA734 LDRSW X9, [X19 + 0x78]
	0x03CBA738 STR W9, [X11 + 0x60]
	0x03CBA73C LDR X10, [X19 + 0x15B8]
	0x03CBA740 CBZ X10, 0x3CBAA60
	0x03CBA744 LDR W11, [X10 + 0x18]
	0x03CBA748 CMP W9, W11
	0x03CBA74C B.CS 0x3CBAA58
	0x03CBA750 MADD X11, X9, X12, X10
	0x03CBA754 STRB W22, [X11 + 0x41]
	0x03CBA758 CBZ W22, 0x3CBA778
	0x03CBA75C MADD X9, X9, X12, X10
	0x03CBA760 LDR X10, [X31 + 0x20]
	0x03CBA764 STR X10, [X9 + 0x48]
	0x03CBA768 LDR X9, [X31 + 0x18]
	0x03CBA76C STP X9, X10, [X19 + 0x68]
	0x03CBA770 LDR W9, [X31 + 0x2C]
	0x03CBA774 STR W9, [X19 + 0x78]
	0x03CBA778 ADD W8, W8, 0x1
	0x03CBA77C STR W8, [X19 + 0xE8]
	0x03CBA780 LDR W8, [X23 + 0x18]
	0x03CBA784 ADD W21, W21, 0x1
	0x03CBA788 CMP W21, W8
	0x03CBA78C B.LT 0x3CB9B34
	0x03CBA790 B 0x3CBA798
	0x03CBA794 STR W31, [X31 + 0x28]
	0x03CBA798 LDR X9, [X31 + 0x30]
	0x03CBA79C LDRB W8, [X9 + 0x470]
	0x03CBA7A0 CBZ W8, 0x3CBA7B0
	0x03CBA7A4 ADD X8, X9, 0x470
	0x03CBA7A8 STRB W31, [X8]
	0x03CBA7AC B 0x3CBAA24
	0x03CBA7B0 LDR X23, [X31 + 0x38]
	0x03CBA7B4 CBZ X23, 0x3CBAA60
	0x03CBA7B8 LDR W8, [X31 + 0x28]
	0x03CBA7BC STR W8, [X23 + 0x14]
	0x03CBA7C0 LDR X0, [X19 + 0x19E0]
	0x03CBA7C4 CBZ X0, 0x3CBAA60
	0x03CBA7C8 ADRP X8, 0x494000
	0x03CBA7CC LDR X8, [X8 + 0xD78]
	0x03CBA7D0 LDR X1, [X8]
	0x03CBA7D4 BL 0x2A0A118
	0x03CBA7D8 LDR X8, [X23 + 0x58]!
	0x03CBA7DC ADRP X21, 0x4A7000
	0x03CBA7E0 STUR W0, [X23 - 0x2C]
	0x03CBA7E4 LDR X21, [X21 + 0xB68]
	0x03CBA7E8 CBZ X8, 0x3CBAA60
	0x03CBA7EC LDR W8, [X8 + 0x18]
	0x03CBA7F0 MOV W22, W0
	0x03CBA7F4 CMP W0, W8
	0x03CBA7F8 B.LE 0x3CBA828
	0x03CBA7FC LDR X0, [X21]
	0x03CBA800 LDR W8, [X0 + 0xE0]
	0x03CBA804 CBNZ W8, 0x3CBA80C
	0x03CBA808 BL 0x1C16DFC
	0x03CBA80C ADRP X8, 0x4A7000
	0x03CBA810 LDR X8, [X8 + 0xCA0]
	0x03CBA814 MOV X0, X23
	0x03CBA818 MOV W1, W22
	0x03CBA81C MOV W2, W31
	0x03CBA820 LDR X3, [X8]
	0x03CBA824 BL 0x229C29C
	0x03CBA828 LDRB W8, [X19 + 0x2C]
	0x03CBA82C CBZ W8, 0x3CBA890
	0x03CBA830 LDR X9, [X24]
	0x03CBA834 CBZ X9, 0x3CBAA60
	0x03CBA838 LDR W8, [X19 + 0xE8]
	0x03CBA83C LDR W9, [X9 + 0x18]
	0x03CBA840 SUB W9, W9, W8
	0x03CBA844 CMP W9, 0x101
	0x03CBA848 B.LT 0x3CBA890
	0x03CBA84C LDR X0, [X21]
	0x03CBA850 ADD W10, W8, 0x1
	0x03CBA854 CMP W10, 0x100
	0x03CBA858 MOVZ W10, 0x100
	0x03CBA85C LDR W9, [X0 + 0xE0]
	0x03CBA860 MOV X20, X23
	0x03CBA864 CSINC W23, W10, W8, LE
	0x03CBA868 CBNZ W9, 0x3CBA870
	0x03CBA86C BL 0x1C16DFC
	0x03CBA870 ADRP X8, 0x4A7000
	0x03CBA874 LDR X8, [X8 + 0xCA8]
	0x03CBA878 MOVZ W2, 0x1
	0x03CBA87C MOV X0, X24
	0x03CBA880 MOV W1, W23
	0x03CBA884 LDR X3, [X8]
	0x03CBA888 BL 0x229C3DC
	0x03CBA88C MOV X23, X20
	0x03CBA890 CMP W22, 0x1
	0x03CBA894 B.LT 0x3CBAA24
	0x03CBA898 ADRP X27, 0x4A7000
	0x03CBA89C LDR X27, [X27 + 0x6C8]
	0x03CBA8A0 MOV W21, W31
	0x03CBA8A4 MOVZ W25, 0x38
	0x03CBA8A8 MOVZ W26, 0x50
	0x03CBA8AC LDR X8, [X31 + 0x40]
	0x03CBA8B0 LDR X8, [X8]
	0x03CBA8B4 CBZ X8, 0x3CBAA60
	0x03CBA8B8 LDR W9, [X8 + 0x18]
	0x03CBA8BC CMP W21, W9
	0x03CBA8C0 B.CS 0x3CBAA58
	0x03CBA8C4 LDR X20, [X23]
	0x03CBA8C8 CBZ X20, 0x3CBAA60
	0x03CBA8CC LDR W9, [X20 + 0x18]
	0x03CBA8D0 CMP W21, W9
	0x03CBA8D4 B.CS 0x3CBAA58
	0x03CBA8D8 SXTW X29, W21
	0x03CBA8DC MADD X9, X29, X25, X8
	0x03CBA8E0 MADD X10, X29, X26, X20
	0x03CBA8E4 LDR X8, [X10 + 0x28]
	0x03CBA8E8 LDR W0, [X9 + 0x54]
	0x03CBA8EC ADD X28, X10, 0x20
	0x03CBA8F0 CBZ X8, 0x3CBA918
	0x03CBA8F4 LDR W8, [X8 + 0x18]
	0x03CBA8F8 SUBS W8, W8, W0, 0x2, LSL
	0x03CBA8FC B.GE 0x3CBA968
	0x03CBA900 CMP W0, 0x400
	0x03CBA904 B.GT 0x3CBA978
	0x03CBA908 MOV X1, X31
	0x03CBA90C BL 0x3C2B340
	0x03CBA910 MOV W24, W0
	0x03CBA914 B 0x3CBA994
	0x03CBA918 MOVI V0.2D, 0x0
	0x03CBA91C ADD W1, W0, 0x1
	0x03CBA920 ADD X0, X31, 0xA0
	0x03CBA924 MOV X2, X31
	0x03CBA928 STP V0, V0, [X31 + 0xD0]
	0x03CBA92C STP V0, V0, [X31 + 0xB0]
	0x03CBA930 STR V0, [X31 + 0xA]
	0x03CBA934 BL 0x3CAA5A4
	0x03CBA938 ADD X0, X31, 0x50
	0x03CBA93C ADD X1, X31, 0xA0
	0x03CBA940 MOVZ W2, 0x50
	0x03CBA944 BL 0x3EB1AC0
	0x03CBA948 LDR W8, [X20 + 0x18]
	0x03CBA94C CMP W21, W8
	0x03CBA950 B.CS 0x3CBAA58
	0x03CBA954 ADD X1, X31, 0x50
	0x03CBA958 MOVZ W2, 0x50
	0x03CBA95C MOV X0, X28
	0x03CBA960 BL 0x3EB1AC0
	0x03CBA964 B 0x3CBA9B4
	0x03CBA968 CMP W8, 0x401
	0x03CBA96C B.LT 0x3CBA9B4
	0x03CBA970 CMP W0, 0x400
	0x03CBA974 B.LE 0x3CBA980
	0x03CBA978 ADD W24, W0, 0x100
	0x03CBA97C B 0x3CBA994
	0x03CBA980 MOV X1, X31
	0x03CBA984 BL 0x3C2B340
	0x03CBA988 CMP W0, 0x100
	0x03CBA98C MOVZ W8, 0x100
	0x03CBA990 CSEL W24, W0, W8, GT
	0x03CBA994 LDR X0, [X27]
	0x03CBA998 LDR W8, [X0 + 0xE0]
	0x03CBA99C CBNZ W8, 0x3CBA9A4
	0x03CBA9A0 BL 0x1C16DFC
	0x03CBA9A4 MOV X0, X28
	0x03CBA9A8 MOV W1, W24
	0x03CBA9AC MOV X2, X31
	0x03CBA9B0 BL 0x3CAA9C0
	0x03CBA9B4 LDR X20, [X23]
	0x03CBA9B8 CBZ X20, 0x3CBAA60
	0x03CBA9BC LDR X8, [X31 + 0x40]
	0x03CBA9C0 LDR X8, [X8]
	0x03CBA9C4 CBZ X8, 0x3CBAA60
	0x03CBA9C8 LDR W9, [X8 + 0x18]
	0x03CBA9CC CMP W21, W9
	0x03CBA9D0 B.CS 0x3CBAA58
	0x03CBA9D4 LDR W9, [X20 + 0x18]
	0x03CBA9D8 CMP W21, W9
	0x03CBA9DC B.CS 0x3CBAA58
	0x03CBA9E0 MADD X8, X29, X25, X8
	0x03CBA9E4 LDR X9, [X8 + 0x38]
	0x03CBA9E8 NOP
	0x03CBA9EC MADD X10, X29, X26, X20
	0x03CBA9F0 STR X9, [X10 + 0x60]
	0x03CBA9F4 LDR X0, [X8 + 0x28]
	0x03CBA9F8 CBZ X0, 0x3CBAA60
	0x03CBA9FC MOV X1, X31
	0x03CBAA00 BL 0x3C9F0C4
	0x03CBAA04 LDR W8, [X20 + 0x18]
	0x03CBAA08 CMP W21, W8
	0x03CBAA0C B.CS 0x3CBAA58
	0x03CBAA10 ADD W21, W21, 0x1
	0x03CBAA14 MADD X8, X29, X26, X20
	0x03CBAA18 CMP W22, W21
	0x03CBAA1C STR W0, [X8 + 0x68]
	0x03CBAA20 B.NE 0x3CBA8AC
	0x03CBAA24 LDR W0, [X19 + 0xE8]
	0x03CBAA28 LDP X20, X19, [X31 + 0x1A0]
	0x03CBAA2C LDP X22, X21, [X31 + 0x190]
	0x03CBAA30 LDP X24, X23, [X31 + 0x180]
	0x03CBAA34 LDP X26, X25, [X31 + 0x170]
	0x03CBAA38 LDP X28, X27, [X31 + 0x160]
	0x03CBAA3C LDP X29, X30, [X31 + 0x150]
	0x03CBAA40 ADD X31, X31, 0x1B0
	0x03CBAA44 RET
	0x03CBAA48 LDP X9, X23, [X31 + 0x30]
	0x03CBAA4C LDRB W8, [X9 + 0x470]
	0x03CBAA50 CBNZ W8, 0x3CBA7A4
	0x03CBAA54 B 0x3CBA7B8
	0x03CBAA58 BL 0x1C16F28
	0x03CBAA5C STR X31, [X19 + 0x68]
	0x03CBAA60 BL 0x1C16F20
	0x03CBAA64 STP X30, X21, [X31 - 0x20]!
	0x03CBAA68 STP X20, X19, [X31 + 0x10]
	0x03CBAA6C LDR X8, [X0 + 0x68]
	0x03CBAA70 STR X8, [X1 + 0x348]
	0x03CBAA74 LDR X8, [X0 + 0xE0]
	0x03CBAA78 STR X8, [X1 + 0x350]
	0x03CBAA7C LDR X8, [X0 + 0x70]
	0x03CBAA80 STR X8, [X1 + 0x358]
	0x03CBAA84 LDR W8, [X0 + 0x78]
	0x03CBAA88 STP W2, W3, [X1]
	0x03CBAA8C STR W8, [X1 + 0x360]
	0x03CBAA90 ADD X8, X0, 0x344
	0x03CBAA94 LDR V0, [X8]
	0x03CBAA98 STR D0, [X1 + 0x8]
	0x03CBAA9C CBZ X4, 0x3CBACF0
	0x03CBAAA0 LDR W8, [X4 + 0x20]
	0x03CBAAA4 MOVZ W10, 0x19B4
	0x03CBAAA8 MOV X19, X1
	0x03CBAAAC MOV X20, X0
	0x03CBAAB0 STR W8, [X1 + 0x14]
	0x03CBAAB4 LDR W8, [X0 + 0x328]
	0x03CBAAB8 MOVZ W2, 0x58
	0x03CBAABC MOV X21, X4
	0x03CBAAC0 STR W8, [X1 + 0x18]
	0x03CBAAC4 LDR W8, [X0 + 0x330]
	0x03CBAAC8 STR W8, [X1 + 0x1C]
	0x03CBAACC LDR W8, [X0 + 0x334]
	0x03CBAAD0 STR W8, [X1 + 0x24]
	0x03CBAAD4 LDR W8, [X0 + 0x124]
	0x03CBAAD8 STR W8, [X1 + 0x5C]
	0x03CBAADC LDR W8, [X0 + 0x19A4]
	0x03CBAAE0 STR W8, [X1 + 0x68]
	0x03CBAAE4 LDR V0, [X0 + 0xF0]
	0x03CBAAE8 ADD X8, X1, 0x364
	0x03CBAAEC STR S0, [X1 + 0x64]
	0x03CBAAF0 LDR V0, [X0 + 0xF4]
	0x03CBAAF4 STR S0, [X1 + 0x6C]
	0x03CBAAF8 LDR V0, [X0 + 0x2F4]
	0x03CBAAFC STR S0, [X1 + 0x44]
	0x03CBAB00 LDR V0, [X0 + 0x370]
	0x03CBAB04 STUR D0, [X1 + 0x2C]
	0x03CBAB08 LDR V0, [X0 + 0x378]
	0x03CBAB0C STR S0, [X1 + 0x34]
	0x03CBAB10 LDR V0, [X0 + 0x338]
	0x03CBAB14 STR D0, [X1 + 0x38]
	0x03CBAB18 LDR V0, [X0 + 0x15AC]
	0x03CBAB1C STR S0, [X1 + 0x40]
	0x03CBAB20 LDR V0, [X0 + 0x60]
	0x03CBAB24 STR D0, [X1 + 0x48]
	0x03CBAB28 LDR V0, [X0 + 0x36]
	0x03CBAB2C STR V0, [X8]
	0x03CBAB30 LDR V0, [X0 + 0x19C8]
	0x03CBAB34 STR S0, [X1 + 0x54]
	0x03CBAB38 LDR W8, [X0 + 0x340]
	0x03CBAB3C STR W8, [X1 + 0x28]
	0x03CBAB40 LDR V0, [X0 + 0x2E0]
	0x03CBAB44 STR S0, [X1 + 0x74]
	0x03CBAB48 LDR V0, [X0 + 0x180]
	0x03CBAB4C STR S0, [X1 + 0x70]
	0x03CBAB50 LDRB W8, [X0 + 0x2E8]
	0x03CBAB54 STRB W8, [X1 + 0x376]
	0x03CBAB58 LDR W8, [X0 + 0x1AC]
	0x03CBAB5C STR W8, [X1 + 0xE0]
	0x03CBAB60 LDR W8, [X0 + 0x1B0]
	0x03CBAB64 STR W8, [X1 + 0xE4]
	0x03CBAB68 LDR W8, [X0 + 0x1B4]
	0x03CBAB6C STR W8, [X1 + 0xE8]
	0x03CBAB70 LDR W8, [X0 + 0x1590]
	0x03CBAB74 STR W8, [X1 + 0xEC]
	0x03CBAB78 LDR W8, [X0 + 0x48]
	0x03CBAB7C LDUR V0, [X0 + 0x38]
	0x03CBAB80 STR W8, [X1 + 0x100]
	0x03CBAB84 STR V0, [X1 + 0xF]
	0x03CBAB88 LDRB W8, [X0 + 0x37D]
	0x03CBAB8C STRB W8, [X1 + 0x375]
	0x03CBAB90 LDRB W8, [X0 + 0x320]
	0x03CBAB94 STRB W8, [X1 + 0x374]
	0x03CBAB98 LDR W8, [X0 + 0x19B0]
	0x03CBAB9C LDR X9, [X0 + 0x19A8]
	0x03CBABA0 STR W8, [X1 + 0x380]
	0x03CBABA4 STR X9, [X1 + 0x378]
	0x03CBABA8 LDR V0, [X0, X10, LSL]
	0x03CBABAC ADD X8, X1, 0x384
	0x03CBABB0 ADD X10, X1, 0x104
	0x03CBABB4 STR V0, [X8]
	0x03CBABB8 LDRH W8, [X0 + 0x130]
	0x03CBABBC LDR X9, [X0 + 0x128]
	0x03CBABC0 STRH W8, [X10 + 0x8]
	0x03CBABC4 ADD X8, X0, 0x268
	0x03CBABC8 STR X9, [X10]
	0x03CBABCC LDP V1, V0, [X8]
	0x03CBABD0 ADD X8, X0, 0x1B8
	0x03CBABD4 ADD X9, X0, 0x238
	0x03CBABD8 STP V1, V0, [X1 + 0x110]
	0x03CBABDC LDP V1, V0, [X8]
	0x03CBABE0 ADD X8, X0, 0x1D8
	0x03CBABE4 STP V1, V0, [X1 + 0x130]
	0x03CBABE8 LDP V1, V0, [X8]
	0x03CBABEC ADD X8, X0, 0x1F8
	0x03CBABF0 STP V1, V0, [X1 + 0x150]
	0x03CBABF4 LDP V1, V0, [X8]
	0x03CBABF8 ADD X8, X0, 0x218
	0x03CBABFC STP V1, V0, [X1 + 0x170]
	0x03CBAC00 LDP V1, V0, [X8]
	0x03CBAC04 STP V1, V0, [X1 + 0x190]
	0x03CBAC08 LDR X8, [X0 + 0x2B0]
	0x03CBAC0C LDP V1, V0, [X0 + 0x290]
	0x03CBAC10 STR X8, [X1 + 0x200]
	0x03CBAC14 STP V1, V0, [X1 + 0x1E0]
	0x03CBAC18 LDP V1, V0, [X9 + 0x10]
	0x03CBAC1C LDR V2, [X9]
	0x03CBAC20 ADD X8, X0, 0xF8
	0x03CBAC24 ADD X9, X0, 0x138
	0x03CBAC28 STP V1, V0, [X1 + 0x1C0]
	0x03CBAC2C STR V2, [X1 + 0x1B]
	0x03CBAC30 LDR V0, [X8 + 0x1]
	0x03CBAC34 LDUR V1, [X0 + 0xF8]
	0x03CBAC38 ADD X8, X1, 0x208
	0x03CBAC3C STP V1, V0, [X8]
	0x03CBAC40 LDP V1, V0, [X0 + 0x300]
	0x03CBAC44 ADD X8, X1, 0x228
	0x03CBAC48 STP V1, V0, [X8]
	0x03CBAC4C LDP V0, V1, [X9]
	0x03CBAC50 ADD X8, X1, 0x248
	0x03CBAC54 MOVZ W9, 0x15C8
	0x03CBAC58 ADD X9, X0, X9
	0x03CBAC5C STP V0, V1, [X8]
	0x03CBAC60 LDP V1, V0, [X9]
	0x03CBAC64 ADD X8, X1, 0x268
	0x03CBAC68 ADD X9, X0, 0x188
	0x03CBAC6C STP V1, V0, [X8]
	0x03CBAC70 LDP V1, V0, [X9]
	0x03CBAC74 ADD X8, X1, 0x288
	0x03CBAC78 STP V1, V0, [X8]
	0x03CBAC7C LDP V1, V0, [X0 + 0x2C0]
	0x03CBAC80 ADD X8, X1, 0x2A8
	0x03CBAC84 ADD X1, X0, 0x80
	0x03CBAC88 ADD X0, X19, 0x2C8
	0x03CBAC8C STP V1, V0, [X8]
	0x03CBAC90 BL 0x3EB1B30
	0x03CBAC94 LDP V0, V1, [X20 + 0x160]
	0x03CBAC98 STP V0, V1, [X19 + 0x320]
	0x03CBAC9C LDR W8, [X20 + 0x19C4]
	0x03CBACA0 STR W8, [X19 + 0x340]
	0x03CBACA4 LDR W8, [X20 + 0x19A0]
	0x03CBACA8 STR W8, [X19 + 0x344]
	0x03CBACAC LDR X8, [X21 + 0x48]
	0x03CBACB0 CBZ X8, 0x3CBACF0
	0x03CBACB4 LDRSW X9, [X20 + 0x340]
	0x03CBACB8 LDR W10, [X8 + 0x18]
	0x03CBACBC CMP W9, W10
	0x03CBACC0 B.GE 0x3CBACE4
	0x03CBACC4 CMP W9, W10
	0x03CBACC8 B.CS 0x3CBACF4
	0x03CBACCC MOVZ W10, 0x60
	0x03CBACD0 MADD X8, X9, X10, X8
	0x03CBACD4 ADD X1, X8, 0x20
	0x03CBACD8 ADD X0, X19, 0x80
	0x03CBACDC MOVZ W2, 0x60
	0x03CBACE0 BL 0x3EB1B30
	0x03CBACE4 LDP X20, X19, [X31 + 0x10]
	0x03CBACE8 LDP X30, X21, [X31], #0x20
	0x03CBACEC RET
	0x03CBACF0 BL 0x1C16F20
	0x03CBACF4 BL 0x1C16F28
	0x03CBACF8 SUB X31, X31, 0x90
	0x03CBACFC STP X30, X23, [X31 + 0x60]
	0x03CBAD00 STP X22, X21, [X31 + 0x70]
	0x03CBAD04 STP X20, X19, [X31 + 0x80]
	0x03CBAD08 LDR X8, [X1 + 0x348]
	0x03CBAD0C LDR W19, [X1]
	0x03CBAD10 STR X8, [X0 + 0x68]
	0x03CBAD14 LDR X8, [X1 + 0x350]
	0x03CBAD18 STR X8, [X0 + 0xE0]
	0x03CBAD1C LDR X8, [X1 + 0x358]
	0x03CBAD20 STR X8, [X0 + 0x70]
	0x03CBAD24 LDR W8, [X1 + 0x360]
	0x03CBAD28 STR W8, [X0 + 0x78]
	0x03CBAD2C LDR W8, [X1 + 0x4]
	0x03CBAD30 ADD W8, W8, 0x1
	0x03CBAD34 STR W8, [X0 + 0x324]
	0x03CBAD38 LDR V0, [X1 + 0x8]
	0x03CBAD3C ADD X8, X0, 0x344
	0x03CBAD40 STR D0, [X8]
	0x03CBAD44 CBZ X2, 0x3CBAFB0
	0x03CBAD48 LDR W8, [X1 + 0x14]
	0x03CBAD4C MOV X21, X2
	0x03CBAD50 MOV X20, X1
	0x03CBAD54 MOV X22, X0
	0x03CBAD58 STR W8, [X2 + 0x20]
	0x03CBAD5C LDR W8, [X1 + 0x18]
	0x03CBAD60 MOVZ W2, 0x58
	0x03CBAD64 STR W8, [X0 + 0x328]
	0x03CBAD68 LDR W8, [X1 + 0x1C]
	0x03CBAD6C STR W8, [X0 + 0x330]
	0x03CBAD70 LDR W8, [X1 + 0x24]
	0x03CBAD74 STR W8, [X0 + 0x334]
	0x03CBAD78 LDR W8, [X1 + 0x5C]
	0x03CBAD7C STR W8, [X0 + 0x124]
	0x03CBAD80 LDR W8, [X1 + 0x68]
	0x03CBAD84 STR W8, [X0 + 0x19A4]
	0x03CBAD88 LDR V0, [X1 + 0x64]
	0x03CBAD8C ADD X8, X1, 0x364
	0x03CBAD90 STR S0, [X0 + 0xF0]
	0x03CBAD94 LDR V0, [X1 + 0x6C]
	0x03CBAD98 STR S0, [X0 + 0xF4]
	0x03CBAD9C LDR V0, [X1 + 0x44]
	0x03CBADA0 STR S0, [X0 + 0x2F4]
	0x03CBADA4 LDUR V0, [X1 + 0x2C]
	0x03CBADA8 STR D0, [X0 + 0x370]
	0x03CBADAC LDR V0, [X1 + 0x34]
	0x03CBADB0 STR S0, [X0 + 0x378]
	0x03CBADB4 LDR V0, [X1 + 0x38]
	0x03CBADB8 STR D0, [X0 + 0x338]
	0x03CBADBC LDR V0, [X1 + 0x40]
	0x03CBADC0 STR S0, [X0 + 0x15AC]
	0x03CBADC4 LDR V0, [X1 + 0x48]
	0x03CBADC8 STR D0, [X0 + 0x60]
	0x03CBADCC LDR V0, [X8]
	0x03CBADD0 STR V0, [X0 + 0x36]
	0x03CBADD4 LDR V0, [X1 + 0x54]
	0x03CBADD8 STR S0, [X0 + 0x19C8]
	0x03CBADDC LDRSW X23, [X1 + 0x28]
	0x03CBADE0 STR W23, [X0 + 0x340]
	0x03CBADE4 LDR V0, [X1 + 0x74]
	0x03CBADE8 STR S0, [X0 + 0x2E0]
	0x03CBADEC LDR V0, [X1 + 0x70]
	0x03CBADF0 STR S0, [X0 + 0x180]
	0x03CBADF4 LDRB W8, [X1 + 0x376]
	0x03CBADF8 STRB W8, [X0 + 0x2E8]
	0x03CBADFC LDR W8, [X1 + 0xE0]
	0x03CBAE00 STR W8, [X0 + 0x1AC]
	0x03CBAE04 LDR W8, [X1 + 0xE4]
	0x03CBAE08 STR W8, [X0 + 0x1B0]
	0x03CBAE0C LDR W8, [X1 + 0xE8]
	0x03CBAE10 STR W8, [X0 + 0x1B4]
	0x03CBAE14 LDR W8, [X1 + 0xEC]
	0x03CBAE18 STR W8, [X0 + 0x1590]
	0x03CBAE1C LDR W8, [X1 + 0x100]
	0x03CBAE20 LDR V0, [X1 + 0xF]
	0x03CBAE24 STR W8, [X0 + 0x48]
	0x03CBAE28 STUR V0, [X0 + 0x38]
	0x03CBAE2C LDRB W8, [X1 + 0x375]
	0x03CBAE30 STRB W8, [X0 + 0x37D]
	0x03CBAE34 LDRB W8, [X1 + 0x374]
	0x03CBAE38 STRB W8, [X0 + 0x320]
	0x03CBAE3C LDR W8, [X1 + 0x380]
	0x03CBAE40 LDR X9, [X1 + 0x378]
	0x03CBAE44 STR W8, [X0 + 0x19B0]
	0x03CBAE48 ADD X8, X1, 0x384
	0x03CBAE4C STR X9, [X0 + 0x19A8]
	0x03CBAE50 LDR V0, [X8]
	0x03CBAE54 MOVZ W8, 0x19B4
	0x03CBAE58 ADD X9, X1, 0x104
	0x03CBAE5C STR V0, [X0, X8, LSL]
	0x03CBAE60 LDRH W8, [X9 + 0x8]
	0x03CBAE64 LDR X9, [X9]
	0x03CBAE68 STRH W8, [X0 + 0x130]
	0x03CBAE6C STR X9, [X0 + 0x128]
	0x03CBAE70 LDP V1, V0, [X1 + 0x110]
	0x03CBAE74 ADD X8, X0, 0x268
	0x03CBAE78 ADD X9, X1, 0x208
	0x03CBAE7C STP V1, V0, [X8]
	0x03CBAE80 LDP V1, V0, [X1 + 0x130]
	0x03CBAE84 ADD X8, X0, 0x1B8
	0x03CBAE88 STP V1, V0, [X8]
	0x03CBAE8C LDP V1, V0, [X1 + 0x150]
	0x03CBAE90 ADD X8, X0, 0x1D8
	0x03CBAE94 STP V1, V0, [X8]
	0x03CBAE98 LDP V1, V0, [X1 + 0x170]
	0x03CBAE9C ADD X8, X0, 0x1F8
	0x03CBAEA0 STP V1, V0, [X8]
	0x03CBAEA4 LDP V1, V0, [X1 + 0x190]
	0x03CBAEA8 ADD X8, X0, 0x218
	0x03CBAEAC STP V1, V0, [X8]
	0x03CBAEB0 LDR X8, [X1 + 0x200]
	0x03CBAEB4 LDP V1, V0, [X1 + 0x1E0]
	0x03CBAEB8 STR X8, [X0 + 0x2B0]
	0x03CBAEBC STP V1, V0, [X0 + 0x290]
	0x03CBAEC0 LDP V2, V0, [X1 + 0x1C0]
	0x03CBAEC4 LDR V1, [X1 + 0x1B]
	0x03CBAEC8 ADD X8, X0, 0x238
	0x03CBAECC STP V2, V0, [X8 + 0x10]
	0x03CBAED0 STR V1, [X8]
	0x03CBAED4 LDP V1, V0, [X9]
	0x03CBAED8 ADD X8, X0, 0xF8
	0x03CBAEDC ADD X9, X1, 0x228
	0x03CBAEE0 STR V0, [X8 + 0x1]
	0x03CBAEE4 STUR V1, [X0 + 0xF8]
	0x03CBAEE8 LDP V1, V0, [X9]
	0x03CBAEEC ADD X8, X1, 0x248
	0x03CBAEF0 ADD X9, X1, 0x268
	0x03CBAEF4 STP V1, V0, [X0 + 0x300]
	0x03CBAEF8 LDP V1, V0, [X8]
	0x03CBAEFC ADD X8, X0, 0x138
	0x03CBAF00 STP V1, V0, [X8]
	0x03CBAF04 LDP V0, V1, [X9]
	0x03CBAF08 MOVZ W8, 0x15C8
	0x03CBAF0C ADD X8, X0, X8
	0x03CBAF10 ADD X9, X1, 0x288
	0x03CBAF14 STP V0, V1, [X8]
	0x03CBAF18 LDP V1, V0, [X9]
	0x03CBAF1C ADD X8, X0, 0x188
	0x03CBAF20 ADD X9, X1, 0x2A8
	0x03CBAF24 ADD X1, X1, 0x2C8
	0x03CBAF28 STP V1, V0, [X8]
	0x03CBAF2C LDP V1, V0, [X9]
	0x03CBAF30 STP V1, V0, [X0 + 0x2C0]
	0x03CBAF34 ADD X0, X0, 0x80
	0x03CBAF38 BL 0x3EB1B30
	0x03CBAF3C LDP V0, V1, [X20 + 0x320]
	0x03CBAF40 STP V0, V1, [X22 + 0x160]
	0x03CBAF44 LDR W8, [X20 + 0x340]
	0x03CBAF48 STR W8, [X22 + 0x19C4]
	0x03CBAF4C LDR W8, [X20 + 0x344]
	0x03CBAF50 STR W8, [X22 + 0x19A0]
	0x03CBAF54 LDR X21, [X21 + 0x48]
	0x03CBAF58 CBZ X21, 0x3CBAFB0
	0x03CBAF5C LDR W22, [X21 + 0x18]
	0x03CBAF60 CMP W23, W22
	0x03CBAF64 B.GE 0x3CBAF98
	0x03CBAF68 ADD X1, X20, 0x80
	0x03CBAF6C ADD X0, X31, 0x0
	0x03CBAF70 MOVZ W2, 0x60
	0x03CBAF74 BL 0x3EB1AC0
	0x03CBAF78 CMP W23, W22
	0x03CBAF7C B.CS 0x3CBAFB4
	0x03CBAF80 MOVZ W8, 0x60
	0x03CBAF84 MADD X8, X23, X8, X21
	0x03CBAF88 ADD X0, X8, 0x20
	0x03CBAF8C ADD X1, X31, 0x0
	0x03CBAF90 MOVZ W2, 0x60
	0x03CBAF94 BL 0x3EB1AC0
	0x03CBAF98 MOV W0, W19
	0x03CBAF9C LDP X20, X19, [X31 + 0x80]
	0x03CBAFA0 LDP X22, X21, [X31 + 0x70]
	0x03CBAFA4 LDP X30, X23, [X31 + 0x60]
	0x03CBAFA8 ADD X31, X31, 0x90
	0x03CBAFAC RET
	0x03CBAFB0 BL 0x1C16F20
	0x03CBAFB4 BL 0x1C16F28
	0x03CBAFB8 STP D15, D14, [X31 - 0xA0]!
	0x03CBAFBC STP D13, D12, [X31 + 0x10]
	0x03CBAFC0 STP D11, D10, [X31 + 0x20]
	0x03CBAFC4 STP D9, D8, [X31 + 0x30]
	0x03CBAFC8 STP X29, X30, [X31 + 0x40]
	0x03CBAFCC STP X28, X27, [X31 + 0x50]
	0x03CBAFD0 STP X26, X25, [X31 + 0x60]
	0x03CBAFD4 STP X24, X23, [X31 + 0x70]
	0x03CBAFD8 STP X22, X21, [X31 + 0x80]
	0x03CBAFDC STP X20, X19, [X31 + 0x90]
	0x03CBAFE0 SUB X31, X31, 0x340
	0x03CBAFE4 ADRP X19, 0x72D000
	0x03CBAFE8 LDRB W8, [X19 + 0x33D]
	0x03CBAFEC MOV X22, X5
	0x03CBAFF0 MOV X21, X4
	0x03CBAFF4 MOV X25, X3
	0x03CBAFF8 MOV W23, W2
	0x03CBAFFC MOV X24, X1
	0x03CBB000 MOV X20, X0
	0x03CBB004 TBNZ X8, 0x0, 0x3CBB1CC
	0x03CBB008 ADRP X0, 0x438000
	0x03CBB00C LDR X0, [X0 + 0xA28]
	0x03CBB010 BL 0x1C16CF4
	0x03CBB014 ADRP X0, 0x4A6000
	0x03CBB018 LDR X0, [X0 + 0x730]
	0x03CBB01C BL 0x1C16CF4
	0x03CBB020 ADRP X0, 0x438000
	0x03CBB024 LDR X0, [X0 + 0x598]
	0x03CBB028 BL 0x1C16CF4
	0x03CBB02C ADRP X0, 0x4A6000
	0x03CBB030 LDR X0, [X0 + 0xB38]
	0x03CBB034 BL 0x1C16CF4
	0x03CBB038 ADRP X0, 0x4A6000
	0x03CBB03C LDR X0, [X0 + 0xCC0]
	0x03CBB040 BL 0x1C16CF4
	0x03CBB044 ADRP X0, 0x492000
	0x03CBB048 LDR X0, [X0 + 0xAD8]
	0x03CBB04C BL 0x1C16CF4
	0x03CBB050 ADRP X0, 0x4A6000
	0x03CBB054 LDR X0, [X0 + 0xCC8]
	0x03CBB058 BL 0x1C16CF4
	0x03CBB05C ADRP X0, 0x4A6000
	0x03CBB060 LDR X0, [X0 + 0xCD0]
	0x03CBB064 BL 0x1C16CF4
	0x03CBB068 ADRP X0, 0x4A6000
	0x03CBB06C LDR X0, [X0 + 0xB48]
	0x03CBB070 BL 0x1C16CF4
	0x03CBB074 ADRP X0, 0x4A6000
	0x03CBB078 LDR X0, [X0 + 0xCD8]
	0x03CBB07C BL 0x1C16CF4
	0x03CBB080 ADRP X0, 0x4A6000
	0x03CBB084 LDR X0, [X0 + 0xB68]
	0x03CBB088 BL 0x1C16CF4
	0x03CBB08C ADRP X0, 0x4A6000
	0x03CBB090 LDR X0, [X0 + 0xCE0]
	0x03CBB094 BL 0x1C16CF4
	0x03CBB098 ADRP X0, 0x4A6000
	0x03CBB09C LDR X0, [X0 + 0xCE8]
	0x03CBB0A0 BL 0x1C16CF4
	0x03CBB0A4 ADRP X0, 0x4A6000
	0x03CBB0A8 LDR X0, [X0 + 0xCF0]
	0x03CBB0AC BL 0x1C16CF4
	0x03CBB0B0 ADRP X0, 0x4A6000
	0x03CBB0B4 LDR X0, [X0 + 0xCF8]
	0x03CBB0B8 BL 0x1C16CF4
	0x03CBB0BC ADRP X0, 0x4A6000
	0x03CBB0C0 LDR X0, [X0 + 0xD00]
	0x03CBB0C4 BL 0x1C16CF4
	0x03CBB0C8 ADRP X0, 0x4A6000
	0x03CBB0CC LDR X0, [X0 + 0xD08]
	0x03CBB0D0 BL 0x1C16CF4
	0x03CBB0D4 ADRP X0, 0x4A6000
	0x03CBB0D8 LDR X0, [X0 + 0xD10]
	0x03CBB0DC BL 0x1C16CF4
	0x03CBB0E0 ADRP X0, 0x4A6000
	0x03CBB0E4 LDR X0, [X0 + 0xD18]
	0x03CBB0E8 BL 0x1C16CF4
	0x03CBB0EC ADRP X0, 0x4A6000
	0x03CBB0F0 LDR X0, [X0 + 0xD20]
	0x03CBB0F4 BL 0x1C16CF4
	0x03CBB0F8 ADRP X0, 0x4A6000
	0x03CBB0FC LDR X0, [X0 + 0xD28]
	0x03CBB100 BL 0x1C16CF4
	0x03CBB104 ADRP X0, 0x4A6000
	0x03CBB108 LDR X0, [X0 + 0xD30]
	0x03CBB10C BL 0x1C16CF4
	0x03CBB110 ADRP X0, 0x4A6000
	0x03CBB114 LDR X0, [X0 + 0xD38]
	0x03CBB118 BL 0x1C16CF4
	0x03CBB11C ADRP X0, 0x4A6000
	0x03CBB120 LDR X0, [X0 + 0xD40]
	0x03CBB124 BL 0x1C16CF4
	0x03CBB128 ADRP X0, 0x4A6000
	0x03CBB12C LDR X0, [X0 + 0xD48]
	0x03CBB130 BL 0x1C16CF4
	0x03CBB134 ADRP X0, 0x4A6000
	0x03CBB138 LDR X0, [X0 + 0xD50]
	0x03CBB13C BL 0x1C16CF4
	0x03CBB140 ADRP X0, 0x4A6000
	0x03CBB144 LDR X0, [X0 + 0xD58]
	0x03CBB148 BL 0x1C16CF4
	0x03CBB14C ADRP X0, 0x4A6000
	0x03CBB150 LDR X0, [X0 + 0xD60]
	0x03CBB154 BL 0x1C16CF4
	0x03CBB158 ADRP X0, 0x4A6000
	0x03CBB15C LDR X0, [X0 + 0xD68]
	0x03CBB160 BL 0x1C16CF4
	0x03CBB164 ADRP X0, 0x4A6000
	0x03CBB168 LDR X0, [X0 + 0xD70]
	0x03CBB16C BL 0x1C16CF4
	0x03CBB170 ADRP X0, 0x4A6000
	0x03CBB174 LDR X0, [X0 + 0xD78]
	0x03CBB178 BL 0x1C16CF4
	0x03CBB17C ADRP X0, 0x4A6000
	0x03CBB180 LDR X0, [X0 + 0xD80]
	0x03CBB184 BL 0x1C16CF4
	0x03CBB188 ADRP X0, 0x49E000
	0x03CBB18C LDR X0, [X0 + 0x2E8]
	0x03CBB190 BL 0x1C16CF4
	0x03CBB194 ADRP X0, 0x49E000
	0x03CBB198 LDR X0, [X0 + 0x2F0]
	0x03CBB19C BL 0x1C16CF4
	0x03CBB1A0 ADRP X0, 0x49E000
	0x03CBB1A4 LDR X0, [X0 + 0x2F8]
	0x03CBB1A8 BL 0x1C16CF4
	0x03CBB1AC ADRP X0, 0x4A6000
	0x03CBB1B0 LDR X0, [X0 + 0xD88]
	0x03CBB1B4 BL 0x1C16CF4
	0x03CBB1B8 ADRP X0, 0x49E000
	0x03CBB1BC LDR X0, [X0 + 0x300]
	0x03CBB1C0 BL 0x1C16CF4
	0x03CBB1C4 MOVZ W8, 0x1
	0x03CBB1C8 STRB W8, [X19 + 0x33D]
	0x03CBB1CC MOVI V0.2D, 0x0
	0x03CBB1D0 STR X31, [X31 + 0x338]
	0x03CBB1D4 STR X31, [X31 + 0x330]
	0x03CBB1D8 STR X31, [X31 + 0x328]
	0x03CBB1DC STR X31, [X31 + 0x320]
	0x03CBB1E0 STR X31, [X31 + 0x318]
	0x03CBB1E4 STR X31, [X31 + 0x310]
	0x03CBB1E8 STR W31, [X31 + 0x30C]
	0x03CBB1EC STR X31, [X31 + 0x298]
	0x03CBB1F0 STP V0, V0, [X31 + 0x2E0]
	0x03CBB1F4 STP V0, V0, [X31 + 0x2C0]
	0x03CBB1F8 STP V0, V0, [X31 + 0x2A0]
	0x03CBB1FC CBZ X21, 0x3CBE9A4
	0x03CBB200 LDR X19, [X21 + 0x68]
	0x03CBB204 MOV X0, X20
	0x03CBB208 BL 0x3CBF738
	0x03CBB20C STR W23, [X25]
	0x03CBB210 CBZ X24, 0x3CBE9A4
	0x03CBB214 LDR W9, [X24 + 0x18]
	0x03CBB218 CMP W9, W23
	0x03CBB21C B.LE 0x3CBB838
	0x03CBB220 ADD X11, X20, 0x354
	0x03CBB224 MOVZ W10, 0x1578
	0x03CBB228 STR X11, [X31 + 0x10]
	0x03CBB22C MOVZ W11, 0x19D0
	0x03CBB230 ADRP X29, 0xFFFFFFFFFCEDC000
	0x03CBB234 STP X21, X25, [X31 + 0x30]
	0x03CBB238 MOV W17, W31
	0x03CBB23C MOV W15, W31
	0x03CBB240 MOV W2, W31
	0x03CBB244 MOV W28, W31
	0x03CBB248 MOV W8, W31
	0x03CBB24C MOV X21, X31
	0x03CBB250 ADD X13, X20, 0x30
	0x03CBB254 MOV W1, W23
	0x03CBB258 ADD X29, X29, 0xF08
	0x03CBB25C MOVZ W16, 0x18
	0x03CBB260 ADD X10, X20, X10
	0x03CBB264 ADD X27, X20, X11
	0x03CBB268 STP X19, X22, [X31 + 0x18]
	0x03CBB26C STR W23, [X31 + 0x44]
	0x03CBB270 STR X10, [X31 + 0x28]
	0x03CBB274 STR X20, [X31 + 0x48]
	0x03CBB278 STR X13, [X31 + 0x58]
	0x03CBB27C ADD X10, X1, X21
	0x03CBB280 CMP W10, W9
	0x03CBB284 B.CS 0x3CBF514
	0x03CBB288 ADD X9, X24, W10, 0x4, SXTW
	0x03CBB28C LDR W26, [X9 + 0x24]
	0x03CBB290 CBZ W26, 0x3CBB838
	0x03CBB294 LDR X25, [X13]
	0x03CBB298 CBZ X25, 0x3CBE9A4
	0x03CBB29C CMP W26, 0x3C
	0x03CBB2A0 MOV W0, W31
	0x03CBB2A4 B.EQ 0x3CBB83C
	0x03CBB2A8 LDR W11, [X25 + 0x18]
	0x03CBB2AC SXTW X9, W11
	0x03CBB2B0 CMP X21, X9
	0x03CBB2B4 B.GE 0x3CBB83C
	0x03CBB2B8 CMP W26, 0x3E
	0x03CBB2BC B.EQ 0x3CBB7E8
	0x03CBB2C0 CMP X21, X11
	0x03CBB2C4 B.CS 0x3CBF514
	0x03CBB2C8 AND W10, W8, 0xFF
	0x03CBB2CC ADD X9, X25, X21, 0x1, LSL
	0x03CBB2D0 CMP W10, 0x1
	0x03CBB2D4 STRH W26, [X9 + 0x20]
	0x03CBB2D8 B.NE 0x3CBB550
	0x03CBB2DC CMP W2, 0x4
	0x03CBB2E0 MOVZ W8, 0x1
	0x03CBB2E4 B.HI 0x3CBB550
	0x03CBB2E8 MOV W9, W2
	0x03CBB2EC ADR X10, 0x10
	0x03CBB2F0 LDRB W11, [X29, X9, LSL]
	0x03CBB2F4 ADD X10, X10, X11, 0x2, LSL
	0x03CBB2F8 BR X10
	0x03CBB2FC CMP W26, 0x2E
	0x03CBB300 B.HI 0x3CBB5BC
	0x03CBB304 MOV W8, W26
	0x03CBB308 MOVZ W9, 0x1
	0x03CBB30C LSLV X8, X9, X8
	0x03CBB310 MOVZ X9, 0x6800
	0x03CBB314 ANDS X31, X8, X9, 0x0
	0x03CBB318 B.EQ 0x3CBB5BC
	0x03CBB31C LDR X8, [X27]
	0x03CBB320 CBZ X8, 0x3CBE9A4
	0x03CBB324 LDR W9, [X8 + 0x18]
	0x03CBB328 CMP W28, W9
	0x03CBB32C B.CS 0x3CBF514
	0x03CBB330 SMADDL X10, X28, X16, X8
	0x03CBB334 LDR W11, [X10 + 0x30]
	0x03CBB338 MOVZ W8, 0x1
	0x03CBB33C MOV W9, W31
	0x03CBB340 MOV W15, W31
	0x03CBB344 ADD W11, W11, 0x1
	0x03CBB348 STP W8, W21, [X10 + 0x28]
	0x03CBB34C STR W11, [X10 + 0x30]
	0x03CBB350 MOVZ W2, 0x1
	0x03CBB354 B 0x3CBB670
	0x03CBB358 CMP W26, 0x22
	0x03CBB35C B.NE 0x3CBB3F4
	0x03CBB360 LDR X8, [X27]
	0x03CBB364 CBZ X8, 0x3CBE9A4
	0x03CBB368 LDR W9, [X8 + 0x18]
	0x03CBB36C ADD W28, W28, 0x1
	0x03CBB370 CMP W28, W9
	0x03CBB374 B.CS 0x3CBF514
	0x03CBB378 SMADDL X8, X28, X16, X8
	0x03CBB37C MOV W9, W31
	0x03CBB380 MOV W2, W31
	0x03CBB384 MOV W15, W31
	0x03CBB388 STP X31, X31, [X8 + 0x20]
	0x03CBB38C STR X31, [X8 + 0x30]
	0x03CBB390 MOVZ W8, 0x2
	0x03CBB394 B 0x3CBB670
	0x03CBB398 CMP W26, 0x64
	0x03CBB39C B.GT 0x3CBB4B4
	0x03CBB3A0 CMP W26, 0x20
	0x03CBB3A4 B.EQ 0x3CBB510
	0x03CBB3A8 CMP W26, 0x25
	0x03CBB3AC B.NE 0x3CBB610
	0x03CBB3B0 LDR X8, [X27]
	0x03CBB3B4 CBZ X8, 0x3CBE9A4
	0x03CBB3B8 LDR X9, [X8 + 0x18]
	0x03CBB3BC CMP W28, W9
	0x03CBB3C0 B.CS 0x3CBF514
	0x03CBB3C4 MOVZ W15, 0x2
	0x03CBB3C8 B 0x3CBB528
	0x03CBB3CC CMP W26, 0x20
	0x03CBB3D0 B.NE 0x3CBB4E0
	0x03CBB3D4 LDR X8, [X27]
	0x03CBB3D8 CBZ X8, 0x3CBE9A4
	0x03CBB3DC LDR W9, [X8 + 0x18]
	0x03CBB3E0 ADD W28, W28, 0x1
	0x03CBB3E4 CMP W28, W9
	0x03CBB3E8 B.CS 0x3CBF514
	0x03CBB3EC MOV W15, W31
	0x03CBB3F0 B 0x3CBB53C
	0x03CBB3F4 LDR X25, [X27]
	0x03CBB3F8 CBZ X25, 0x3CBE9A4
	0x03CBB3FC LDR W8, [X25 + 0x18]
	0x03CBB400 CMP W28, W8
	0x03CBB404 B.CS 0x3CBF514
	0x03CBB408 MOV W8, W28
	0x03CBB40C SXTW X19, W8
	0x03CBB410 STR X1, [X31 + 0x50]
	0x03CBB414 NOP
	0x03CBB418 MADD X22, X19, X16, X25
	0x03CBB41C ADRP X8, 0x4A6000
	0x03CBB420 MOV X23, X27
	0x03CBB424 LDR W27, [X22 + 0x24]!
	0x03CBB428 LDR X8, [X8 + 0xB48]
	0x03CBB42C MOV W20, W17
	0x03CBB430 MOV W29, W15
	0x03CBB434 LDR X0, [X8]
	0x03CBB438 LDR W8, [X0 + 0xE0]
	0x03CBB43C CBNZ W8, 0x3CBB444
	0x03CBB440 BL 0x1C16DFC
	0x03CBB444 MOV W0, W26
	0x03CBB448 MOV X1, X31
	0x03CBB44C BL 0x3CC912C
	0x03CBB450 LDR W8, [X25 + 0x18]
	0x03CBB454 CMP W28, W8
	0x03CBB458 B.CS 0x3CBF514
	0x03CBB45C ADD W8, W27, W27, 0x5, LSL
	0x03CBB460 AND W9, W0, 0xFFFF
	0x03CBB464 EOR W8, W8, W9, 0x0
	0x03CBB468 STR W8, [X22]
	0x03CBB46C LDR X8, [X23]
	0x03CBB470 LDR X1, [X31 + 0x50]
	0x03CBB474 CBZ X8, 0x3CBE9A4
	0x03CBB478 LDR W9, [X8 + 0x18]
	0x03CBB47C LDR X13, [X31 + 0x58]
	0x03CBB480 MOV W15, W29
	0x03CBB484 ADRP X29, 0xFFFFFFFFFCEDC000
	0x03CBB488 CMP W28, W9
	0x03CBB48C ADD X29, X29, 0xF08
	0x03CBB490 MOVZ W16, 0x18
	0x03CBB494 B.CS 0x3CBF514
	0x03CBB498 MOV X27, X23
	0x03CBB49C MOV W17, W20
	0x03CBB4A0 MADD X9, X19, X16, X8
	0x03CBB4A4 LDR W10, [X9 + 0x30]
	0x03CBB4A8 MOVZ W8, 0x1
	0x03CBB4AC MOVZ W2, 0x2
	0x03CBB4B0 B 0x3CBB504
	0x03CBB4B4 CMP W26, 0x70
	0x03CBB4B8 B.EQ 0x3CBB510
	0x03CBB4BC CMP W26, 0x65
	0x03CBB4C0 B.NE 0x3CBB610
	0x03CBB4C4 LDR X8, [X27]
	0x03CBB4C8 CBZ X8, 0x3CBE9A4
	0x03CBB4CC LDR X9, [X8 + 0x18]
	0x03CBB4D0 CMP W28, W9
	0x03CBB4D4 B.CS 0x3CBF514
	0x03CBB4D8 MOVZ W15, 0x1
	0x03CBB4DC B 0x3CBB528
	0x03CBB4E0 LDR X8, [X27]
	0x03CBB4E4 CBZ X8, 0x3CBE9A4
	0x03CBB4E8 LDR W9, [X8 + 0x18]
	0x03CBB4EC CMP W28, W9
	0x03CBB4F0 B.CS 0x3CBF514
	0x03CBB4F4 SMADDL X9, X28, X16, X8
	0x03CBB4F8 LDR W10, [X9 + 0x30]
	0x03CBB4FC MOVZ W8, 0x1
	0x03CBB500 MOVZ W2, 0x4
	0x03CBB504 ADD W10, W10, 0x1
	0x03CBB508 STR W10, [X9 + 0x30]
	0x03CBB50C B 0x3CBB550
	0x03CBB510 LDR X8, [X27]
	0x03CBB514 CBZ X8, 0x3CBE9A4
	0x03CBB518 LDR X9, [X8 + 0x18]
	0x03CBB51C CMP W28, W9
	0x03CBB520 B.CS 0x3CBF514
	0x03CBB524 MOV W15, W31
	0x03CBB528 SMADDL X10, X28, X16, X8
	0x03CBB52C ADD W28, W28, 0x1
	0x03CBB530 CMP W28, W9
	0x03CBB534 STR W15, [X10 + 0x34]
	0x03CBB538 B.CS 0x3CBF514
	0x03CBB53C SMADDL X8, X28, X16, X8
	0x03CBB540 MOV W2, W31
	0x03CBB544 STP X31, X31, [X8 + 0x20]
	0x03CBB548 STR X31, [X8 + 0x30]
	0x03CBB54C MOVZ W8, 0x2
	0x03CBB550 CMP W26, 0x3D
	0x03CBB554 CSINC W8, W8, W31, NE
	0x03CBB558 CMP W26, 0x20
	0x03CBB55C AND W10, W8, 0xFF
	0x03CBB560 CSET W9, EQ
	0x03CBB564 CBNZ W10, 0x3CBB670
	0x03CBB568 B.NE 0x3CBB670
	0x03CBB56C TBNZ X17, 0x0, 0x3CBB838
	0x03CBB570 LDR X8, [X27]
	0x03CBB574 CBZ X8, 0x3CBE9A4
	0x03CBB578 LDR W9, [X8 + 0x18]
	0x03CBB57C ADD W28, W28, 0x1
	0x03CBB580 CMP W28, W9
	0x03CBB584 B.CS 0x3CBF514
	0x03CBB588 MOV W15, W31
	0x03CBB58C SMADDL X8, X28, X16, X8
	0x03CBB590 CMP W26, 0x20
	0x03CBB594 MOVZ W17, 0x1
	0x03CBB598 STP X31, X31, [X8 + 0x20]
	0x03CBB59C STR X31, [X8 + 0x30]
	0x03CBB5A0 B.NE 0x3CBB5B0
	0x03CBB5A4 MOV W2, W15
	0x03CBB5A8 MOV W8, W15
	0x03CBB5AC B 0x3CBB730
	0x03CBB5B0 MOVZ W8, 0x2
	0x03CBB5B4 MOV W2, W15
	0x03CBB5B8 B 0x3CBB730
	0x03CBB5BC SUB W8, W26, 0x30
	0x03CBB5C0 CMP W8, 0x9
	0x03CBB5C4 B.LS 0x3CBB31C
	0x03CBB5C8 CMP W26, 0x22
	0x03CBB5CC B.EQ 0x3CBB640
	0x03CBB5D0 CMP W26, 0x23
	0x03CBB5D4 B.NE 0x3CBB748
	0x03CBB5D8 LDR X8, [X27]
	0x03CBB5DC CBZ X8, 0x3CBE9A4
	0x03CBB5E0 LDR W9, [X8 + 0x18]
	0x03CBB5E4 CMP W28, W9
	0x03CBB5E8 B.CS 0x3CBF514
	0x03CBB5EC SMADDL X8, X28, X16, X8
	0x03CBB5F0 LDR W10, [X8 + 0x30]
	0x03CBB5F4 MOVZ W2, 0x4
	0x03CBB5F8 MOV W9, W31
	0x03CBB5FC MOV W15, W31
	0x03CBB600 ADD W10, W10, 0x1
	0x03CBB604 STP W2, W21, [X8 + 0x28]
	0x03CBB608 STR W10, [X8 + 0x30]
	0x03CBB60C B 0x3CBB66C
	0x03CBB610 LDR X8, [X27]
	0x03CBB614 CBZ X8, 0x3CBE9A4
	0x03CBB618 LDR W9, [X8 + 0x18]
	0x03CBB61C CMP W28, W9
	0x03CBB620 B.CS 0x3CBF514
	0x03CBB624 SMADDL X8, X28, X16, X8
	0x03CBB628 LDR W9, [X8 + 0x30]
	0x03CBB62C MOVZ W2, 0x1
	0x03CBB630 ADD W9, W9, 0x1
	0x03CBB634 STR W9, [X8 + 0x30]
	0x03CBB638 MOVZ W8, 0x1
	0x03CBB63C B 0x3CBB550
	0x03CBB640 LDR X8, [X27]
	0x03CBB644 CBZ X8, 0x3CBE9A4
	0x03CBB648 LDR W9, [X8 + 0x18]
	0x03CBB64C CMP W28, W9
	0x03CBB650 B.CS 0x3CBF514
	0x03CBB654 SMADDL X8, X28, X16, X8
	0x03CBB658 MOVZ W2, 0x2
	0x03CBB65C ADD W10, W21, 0x1
	0x03CBB660 MOV W9, W31
	0x03CBB664 MOV W15, W31
	0x03CBB668 STP W2, W10, [X8 + 0x28]
	0x03CBB66C MOVZ W8, 0x1
	0x03CBB670 AND W10, W8, 0xFF
	0x03CBB674 CMP W10, 0x2
	0x03CBB678 B.EQ 0x3CBB720
	0x03CBB67C CBNZ W10, 0x3CBB730
	0x03CBB680 LDR X25, [X27]
	0x03CBB684 CBZ X25, 0x3CBE9A4
	0x03CBB688 LDR W8, [X25 + 0x18]
	0x03CBB68C CMP W28, W8
	0x03CBB690 B.CS 0x3CBF514
	0x03CBB694 STR W2, [X31 + 0x50]
	0x03CBB698 NOP
	0x03CBB69C SMADDL X22, X28, X16, X25
	0x03CBB6A0 ADRP X8, 0x4A6000
	0x03CBB6A4 MOV X23, X27
	0x03CBB6A8 LDR W27, [X22 + 0x20]!
	0x03CBB6AC LDR X8, [X8 + 0xB48]
	0x03CBB6B0 MOV X19, X1
	0x03CBB6B4 MOV W20, W17
	0x03CBB6B8 MOV W29, W15
	0x03CBB6BC LDR X0, [X8]
	0x03CBB6C0 LDR W8, [X0 + 0xE0]
	0x03CBB6C4 CBNZ W8, 0x3CBB6CC
	0x03CBB6C8 BL 0x1C16DFC
	0x03CBB6CC MOV W0, W26
	0x03CBB6D0 MOV X1, X31
	0x03CBB6D4 BL 0x3CC912C
	0x03CBB6D8 LDR W8, [X25 + 0x18]
	0x03CBB6DC CMP W28, W8
	0x03CBB6E0 B.CS 0x3CBF514
	0x03CBB6E4 LDR X13, [X31 + 0x58]
	0x03CBB6E8 LDR W2, [X31 + 0x50]
	0x03CBB6EC ADD W9, W27, W27, 0x5, LSL
	0x03CBB6F0 AND W10, W0, 0xFFFF
	0x03CBB6F4 EOR W9, W9, W10, 0x0
	0x03CBB6F8 MOV W15, W29
	0x03CBB6FC ADRP X29, 0xFFFFFFFFFCEDC000
	0x03CBB700 MOV W8, W31
	0x03CBB704 STR W9, [X22]
	0x03CBB708 MOV X27, X23
	0x03CBB70C ADD X29, X29, 0xF08
	0x03CBB710 MOVZ W16, 0x18
	0x03CBB714 MOV W17, W20
	0x03CBB718 MOV X1, X19
	0x03CBB71C B 0x3CBB730
	0x03CBB720 TBZ X9, 0x0, 0x3CBB72C
	0x03CBB724 MOV W8, W31
	0x03CBB728 B 0x3CBB730
	0x03CBB72C MOVZ W8, 0x2
	0x03CBB730 LDR W9, [X24 + 0x18]
	0x03CBB734 ADD X21, X21, 0x1
	0x03CBB738 ADD W10, W1, W21
	0x03CBB73C CMP W10, W9
	0x03CBB740 B.LT 0x3CBB27C
	0x03CBB744 B 0x3CBB838
	0x03CBB748 LDR X23, [X27]
	0x03CBB74C CBZ X23, 0x3CBE9A4
	0x03CBB750 LDR W8, [X23 + 0x18]
	0x03CBB754 CMP W28, W8
	0x03CBB758 B.CS 0x3CBF514
	0x03CBB75C SXTW X19, W28
	0x03CBB760 STR X1, [X31 + 0x50]
	0x03CBB764 NOP
	0x03CBB768 MADD X25, X19, X16, X23
	0x03CBB76C LDR W22, [X25 + 0x24]!
	0x03CBB770 MOVZ W8, 0x2
	0x03CBB774 MOV W20, W17
	0x03CBB778 STP W8, W21, [X25 + 0x4]
	0x03CBB77C ADRP X8, 0x4A6000
	0x03CBB780 LDR X8, [X8 + 0xB48]
	0x03CBB784 LDR X0, [X8]
	0x03CBB788 LDR W8, [X0 + 0xE0]
	0x03CBB78C CBNZ W8, 0x3CBB794
	0x03CBB790 BL 0x1C16DFC
	0x03CBB794 MOV W0, W26
	0x03CBB798 MOV X1, X31
	0x03CBB79C BL 0x3CC912C
	0x03CBB7A0 LDR W8, [X23 + 0x18]
	0x03CBB7A4 CMP W28, W8
	0x03CBB7A8 B.CS 0x3CBF514
	0x03CBB7AC ADD W8, W22, W22, 0x5, LSL
	0x03CBB7B0 AND W9, W0, 0xFFFF
	0x03CBB7B4 EOR W8, W8, W9, 0x0
	0x03CBB7B8 STR W8, [X25]
	0x03CBB7BC LDR X8, [X27]
	0x03CBB7C0 LDR X1, [X31 + 0x50]
	0x03CBB7C4 CBZ X8, 0x3CBE9A4
	0x03CBB7C8 LDR W9, [X8 + 0x18]
	0x03CBB7CC LDR X13, [X31 + 0x58]
	0x03CBB7D0 MOVZ W16, 0x18
	0x03CBB7D4 CMP W28, W9
	0x03CBB7D8 B.CS 0x3CBF514
	0x03CBB7DC MOV W17, W20
	0x03CBB7E0 MOV W15, W31
	0x03CBB7E4 B 0x3CBB4A0
	0x03CBB7E8 LDR W8, [X31 + 0x44]
	0x03CBB7EC LDR X9, [X31 + 0x38]
	0x03CBB7F0 CMP W21, W11
	0x03CBB7F4 ADD W8, W8, W21
	0x03CBB7F8 STR W8, [X9]
	0x03CBB7FC B.CS 0x3CBF514
	0x03CBB800 LDR X19, [X31 + 0x48]
	0x03CBB804 ADD X8, X25, X21, 0x1, LSL
	0x03CBB808 STRH W31, [X8 + 0x20]
	0x03CBB80C MOVZ W12, 0x743B
	0x03CBB810 LDRB W9, [X19 + 0x320]
	0x03CBB814 LDR X8, [X19 + 0x19D0]
	0x03CBB818 MOVK W12, 0xEE780000
	0x03CBB81C CBZ W9, 0x3CBB86C
	0x03CBB820 CBZ X8, 0x3CBE9A4
	0x03CBB824 LDR W9, [X8 + 0x18]
	0x03CBB828 CBZ W9, 0x3CBF514
	0x03CBB82C LDR W9, [X8 + 0x20]
	0x03CBB830 CMP W9, W12
	0x03CBB834 B.EQ 0x3CBB870
	0x03CBB838 MOV W0, W31
	0x03CBB83C ADD X31, X31, 0x340
	0x03CBB840 LDP X20, X19, [X31 + 0x90]
	0x03CBB844 LDP X22, X21, [X31 + 0x80]
	0x03CBB848 LDP X24, X23, [X31 + 0x70]
	0x03CBB84C LDP X26, X25, [X31 + 0x60]
	0x03CBB850 LDP X28, X27, [X31 + 0x50]
	0x03CBB854 LDP X29, X30, [X31 + 0x40]
	0x03CBB858 LDP D9, D8, [X31 + 0x30]
	0x03CBB85C LDP D11, D10, [X31 + 0x20]
	0x03CBB860 LDP D13, D12, [X31 + 0x10]
	0x03CBB864 LDP D15, D14, [X31], #0xA0
	0x03CBB868 RET
	0x03CBB86C CBZ X8, 0x3CBE9A4
	0x03CBB870 LDR X10, [X8 + 0x18]
	0x03CBB874 CBZ W10, 0x3CBF514
	0x03CBB878 LDR W9, [X8 + 0x20]
	0x03CBB87C CMP W9, W12
	0x03CBB880 B.NE 0x3CBB88C
	0x03CBB884 STRB W31, [X19 + 0x320]
	0x03CBB888 B 0x3CBB978
	0x03CBB88C LDRH W12, [X25 + 0x20]
	0x03CBB890 CMP W21, 0x4
	0x03CBB894 B.NE 0x3CBB8C0
	0x03CBB898 CMP W12, 0x23
	0x03CBB89C B.NE 0x3CBB8C0
	0x03CBB8A0 ADRP X8, 0x4A6000
	0x03CBB8A4 LDR X8, [X8 + 0xB48]
	0x03CBB8A8 LDR X0, [X8]
	0x03CBB8AC LDR W8, [X0 + 0xE0]
	0x03CBB8B0 CBNZ W8, 0x3CBB8B8
	0x03CBB8B4 BL 0x1C16DFC
	0x03CBB8B8 MOVZ W1, 0x4
	0x03CBB8BC B 0x3CBB94C
	0x03CBB8C0 CMP W21, 0x5
	0x03CBB8C4 B.NE 0x3CBB8F0
	0x03CBB8C8 CMP W12, 0x23
	0x03CBB8CC B.NE 0x3CBB8F0
	0x03CBB8D0 ADRP X8, 0x4A6000
	0x03CBB8D4 LDR X8, [X8 + 0xB48]
	0x03CBB8D8 LDR X0, [X8]
	0x03CBB8DC LDR W8, [X0 + 0xE0]
	0x03CBB8E0 CBNZ W8, 0x3CBB8E8
	0x03CBB8E4 BL 0x1C16DFC
	0x03CBB8E8 MOVZ W1, 0x5
	0x03CBB8EC B 0x3CBB94C
	0x03CBB8F0 CMP W21, 0x7
	0x03CBB8F4 B.NE 0x3CBB920
	0x03CBB8F8 CMP W12, 0x23
	0x03CBB8FC B.NE 0x3CBB920
	0x03CBB900 ADRP X8, 0x4A6000
	0x03CBB904 LDR X8, [X8 + 0xB48]
	0x03CBB908 LDR X0, [X8]
	0x03CBB90C LDR W8, [X0 + 0xE0]
	0x03CBB910 CBNZ W8, 0x3CBB918
	0x03CBB914 BL 0x1C16DFC
	0x03CBB918 MOVZ W1, 0x7
	0x03CBB91C B 0x3CBB94C
	0x03CBB920 CMP W21, 0x9
	0x03CBB924 B.NE 0x3CBB980
	0x03CBB928 CMP W12, 0x23
	0x03CBB92C B.NE 0x3CBB980
	0x03CBB930 ADRP X8, 0x4A6000
	0x03CBB934 LDR X8, [X8 + 0xB48]
	0x03CBB938 LDR X0, [X8]
	0x03CBB93C LDR W8, [X0 + 0xE0]
	0x03CBB940 CBNZ W8, 0x3CBB948
	0x03CBB944 BL 0x1C16DFC
	0x03CBB948 MOVZ W1, 0x9
	0x03CBB94C MOV X0, X25
	0x03CBB950 MOV X2, X31
	0x03CBB954 BL 0x3CC5948
	0x03CBB958 STR W0, [X19 + 0x1AC]
	0x03CBB95C ADRP X8, 0x4A6000
	0x03CBB960 LDR X8, [X8 + 0xCF0]
	0x03CBB964 LDR X2, [X8]
	0x03CBB968 ADD X8, X19, 0x1B8
	0x03CBB96C AND X1, X0, 0x0
	0x03CBB970 MOV X0, X8
	0x03CBB974 BL 0x26E0FCC
	0x03CBB978 MOVZ W0, 0x1
	0x03CBB97C B 0x3CBB83C
	0x03CBB980 CMP W9, 0x65C
	0x03CBB984 B.LE 0x3CBBA74
	0x03CBB988 MOVZ W12, 0x920A
	0x03CBB98C MOVK W12, 0x37B0000
	0x03CBB990 CMP W9, W12
	0x03CBB994 B.LE 0x3CBBB14
	0x03CBB998 MOVZ W10, 0x3A16
	0x03CBB99C MOVK W10, 0xB860000
	0x03CBB9A0 CMP W9, W10
	0x03CBB9A4 B.LE 0x3CBBC58
	0x03CBB9A8 MOVZ W10, 0xC39B
	0x03CBB9AC MOVK W10, 0xD7F0000
	0x03CBB9B0 CMP W9, W10
	0x03CBB9B4 B.LE 0x3CBBEE8
	0x03CBB9B8 MOVZ W10, 0x3FA2
	0x03CBB9BC MOVK W10, 0x72340000
	0x03CBB9C0 CMP W9, W10
	0x03CBB9C4 B.LE 0x3CBC40C
	0x03CBB9C8 MOVZ W10, 0xAA29
	0x03CBB9CC MOVK W10, 0x72A50000
	0x03CBB9D0 CMP W9, W10
	0x03CBB9D4 B.EQ 0x3CBD184
	0x03CBB9D8 MOVZ W10, 0x42B7
	0x03CBB9DC MOVK W10, 0x72F10000
	0x03CBB9E0 CMP W9, W10
	0x03CBB9E4 B.EQ 0x3CBD194
	0x03CBB9E8 MOVZ W10, 0xF45B
	0x03CBB9EC MOVK W10, 0x745E0000
	0x03CBB9F0 CMP W9, W10
	0x03CBB9F4 B.NE 0x3CBB838
	0x03CBB9F8 ADRP X9, 0x4A6000
	0x03CBB9FC LDR X9, [X9 + 0xB48]
	0x03CBBA00 LDP W22, W21, [X8 + 0x2C]
	0x03CBBA04 MOV W19, W15
	0x03CBBA08 LDR X0, [X9]
	0x03CBBA0C LDR W9, [X0 + 0xE0]
	0x03CBBA10 CBNZ W9, 0x3CBBA18
	0x03CBBA14 BL 0x1C16DFC
	0x03CBBA18 MOV X0, X25
	0x03CBBA1C MOV W1, W22
	0x03CBBA20 MOV W2, W21
	0x03CBBA24 MOV X3, X31
	0x03CBBA28 BL 0x3CC6208
	0x03CBBA2C MOVZ W8, 0xC7000000
	0x03CBBA30 FMOV S1, W8
	0x03CBBA34 FCMP S0, S1
	0x03CBBA38 B.EQ 0x3CBB838
	0x03CBBA3C CMP W19, 0x1
	0x03CBBA40 B.EQ 0x3CBEC1C
	0x03CBBA44 CBNZ W19, 0x3CBB838
	0x03CBBA48 LDR X8, [X31 + 0x30]
	0x03CBBA4C ADRP X9, 0xFFFFFFFFFCE2F000
	0x03CBBA50 LDR V1, [X9 + 0xBC]
	0x03CBBA54 FMOV S2, 1
	0x03CBBA58 LDRB W8, [X8 + 0xBD]
	0x03CBBA5C CMP W8, 0x0
	0x03CBBA60 LDR X8, [X31 + 0x48]

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+336], X29
	003 Move [X31+344], X30
	004 Move [X31+352], X28
	005 Move [X31+360], X27
	006 Move [X31+368], X26
	007 Move [X31+376], X25
	008 Move [X31+384], X24
	009 Move [X31+392], X23
	010 Move [X31+400], X22
	011 Move [X31+408], X21
	012 Move [X31+416], X20
	013 Move [X31+424], X19
	014 Move X21, 0x72E000
	015 Move W8, [X21+834]
	016 Move X23, X1
	017 Move X19, X0
	018 Move [X31+56], X3
	019 Move [X31+72], X2
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {101}
	024 Move X0, 0x43C000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0x43A000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x464000
	031 Move X0, [X0+2256]
	032 Call 0x1C17CF4
	033 Move X0, 0x4A8000
	034 Move X0, [X0+3224]
	035 Call 0x1C17CF4
	036 Move X0, 0x495000
	037 Move X0, [X0+3448]
	038 Call 0x1C17CF4
	039 Move X0, 0x4A8000
	040 Move X0, [X0+600]
	041 Call 0x1C17CF4
	042 Move X0, 0x4A8000
	043 Move X0, [X0+800]
	044 Call 0x1C17CF4
	045 Move X0, 0x4A8000
	046 Move X0, [X0+1200]
	047 Call 0x1C17CF4
	048 Move X0, 0x4A8000
	049 Move X0, [X0+1848]
	050 Call 0x1C17CF4
	051 Move X0, 0x4A8000
	052 Move X0, [X0+808]
	053 Call 0x1C17CF4
	054 Move X0, 0x4A8000
	055 Move X0, [X0+1576]
	056 Call 0x1C17CF4
	057 Move X0, 0x43E000
	058 Move X0, [X0+3232]
	059 Call 0x1C17CF4
	060 Move X0, 0x4A8000
	061 Move X0, [X0+1736]
	062 Call 0x1C17CF4
	063 Move X0, 0x43A000
	064 Move X0, [X0+1432]
	065 Call 0x1C17CF4
	066 Move X0, 0x4A8000
	067 Move X0, [X0+1864]
	068 Call 0x1C17CF4
	069 Move X0, 0x4A8000
	070 Move X0, [X0+3232]
	071 Call 0x1C17CF4
	072 Move X0, 0x4A8000
	073 Move X0, [X0+3240]
	074 Call 0x1C17CF4
	075 Move X0, 0x4A8000
	076 Move X0, [X0+2920]
	077 Call 0x1C17CF4
	078 Move X0, 0x4A8000
	079 Move X0, [X0+3000]
	080 Call 0x1C17CF4
	081 Move X0, 0x4A8000
	082 Move X0, [X0+3016]
	083 Call 0x1C17CF4
	084 Move X0, 0x442000
	085 Move X0, [X0+1824]
	086 Call 0x1C17CF4
	087 Move X0, 0x4A8000
	088 Move X0, [X0+3248]
	089 Call 0x1C17CF4
	090 Move X0, 0x49F000
	091 Move X0, [X0+1624]
	092 Call 0x1C17CF4
	093 Move X0, 0x4A8000
	094 Move X0, [X0+3256]
	095 Call 0x1C17CF4
	096 Move X0, 0x49F000
	097 Move X0, [X0+1632]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X21+834], W8
	101 Move X22, [X31+72]
	102 Move [X31+332], W31
	103 Move [X31+328], W31
	104 Move [X31+312], X31
	105 Move [X31+320], X31
	106 Move [X31+296], X31
	107 Move [X31+304], X31
	108 Compare X22, 0
	109 JumpIfEqual {1363}
	110 Move X9, [X22+104]
	111 Move W8, 0x1578
	112 Add X8, X19, X8
	113 Move [X19+232], W31
	114 Move [X8+1], W31
	115 Move [X19+800], W31
	116 Move [X31+16], X9
	117 Move [X31+48], X8
	118 Move W8, [X22+96]
	119 Move X21, 0x4A8000
	120 Move X20, 0x4A8000
	121 Move X21, [X21+3016]
	122 Move X20, [X20+3000]
	123 Add X0, X19, 296
	124 Move X1, X31
	125 Move [X19+292], W8
	126 Call FontStyleStack.Clear, X0
	127 Move W8, [X19+292]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {133}
	132 Move W1, [X22+236]
	133 Move W1, 700
	134 Move [X19+308], W1
	135 Move X2, [X21]
	136 Add X0, X19, 312
	137 Call TextProcessingStack`1<Int32Enum>.SetDefault, X0, X1
	138 Move X2, [X22+64]
	139 Move V0, [X19+216]
	140 NotImplemented "Instruction MOVI not yet implemented."
	141 Add X0, X31, 240
	142 Move [X19+104], X2
	143 Move X4, [X22+72]
	144 Move W1, W31
	145 Move X3, X31
	146 Move X5, X31
	147 Add X21, X19, 128
	148 Move [X19+120], W31
	149 Move [X19+112], X4
	150 Move [X31+288], X31
	151 Move [X31+256], V1
	152 Move [X31+264], V1
	153 Move [X31+15], V1
	154 Call MaterialReference..ctor, X0, X1, X2, X3, X4, V0
	155 Move X2, [X20]
	156 Move V0, [X31+240]
	157 Move V1, [X31+256]
	158 Move V2, [X31+17]
	159 Move X8, [X31+288]
	160 Add X1, X31, 160
	161 Move X0, X21
	162 Move [X31+160], V0
	163 Move [X31+168], V1
	164 Move [X31+12], V2
	165 Move [X31+208], X8
	166 Call TextProcessingStack`1<MaterialReference>.SetDefault, X0, X1
	167 Move X0, [X19+6624]
	168 Compare X0, 0
	169 JumpIfEqual {1363}
	170 Move X8, 0x464000
	171 Move X8, [X8+2256]
	172 Move X20, 0x4A8000
	173 Move X1, [X8]
	174 Move X20, [X20+2920]
	175 Call Dictionary`2<Int32, Int32>.Clear, X0
	176 Move X1, [X19+104]
	177 Move X0, [X19+112]
	178 Move X3, [X19+6624]
	179 Move W8, 0x15B8
	180 Add X2, X19, X8
	181 Move X4, X31
	182 Move [X31+64], X2
	183 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	184 Move X21, [X31+48]
	185 Move X24, [X31+56]
	186 Compare X24, 0
	187 JumpIfEqual {210}
	188 Add X24, X24, 48
	189 Move X8, [X24]
	190 Compare X8, 0
	191 JumpIfEqual {1363}
	192 Move W25, [X19+40]
	193 Move W8, [X8+24]
	194 Move X20, [X31+72]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X8, 0x4A8000
	197 Move X8, [X8+2920]
	198 Move X0, [X8]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X8, 0x4A8000
	204 Move X8, [X8+3240]
	205 Move X0, X24
	206 Move W1, W25
	207 Move W2, W31
	208 Move X3, [X8]
	209 Call TextInfo.Resize, X0, X1, X2
	210 Move X0, [X20]
	211 Call 0x1C17F10
	212 Move X1, X31
	213 Move [X31+56], X0
	214 Call TextInfo..ctor, X0
	215 Move X20, [X31+72]
	216 Move W8, 1
	217 Move [X21], W8
	218 Move W8, [X20+116]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, X19
	221 Move X1, X20
	222 Call TextGenerator.GetEllipsisSpecialCharacter, X0, X1
	223 Move X8, [X19+6656]
	224 Compare X8, 0
	225 JumpIfEqual {264}
	226 Move X0, [X19+6664]
	227 Compare X0, 0
	228 JumpIfEqual {1363}
	229 Move X1, X31
	230 Call Object.GetInstanceID, X0
	231 Move X8, [X19+104]
	232 Compare X8, 0
	233 JumpIfEqual {1363}
	234 Move W24, W0
	235 Move X0, X8
	236 Move X1, X31
	237 Call Object.GetInstanceID, X0
	238 Move X8, [X31+16]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Compare X8, 0
	241 JumpIfEqual {1363}
	242 Move W8, [X8+56]
	243 Compare W8, 0
	244 JumpIfEqual {260}
	245 Move X0, [X19+112]
	246 Compare X0, 0
	247 JumpIfEqual {1363}
	248 Move X1, X31
	249 Call Object.GetInstanceID, X0
	250 Move X8, [X19+6664]
	251 Compare X8, 0
	252 JumpIfEqual {1363}
	253 Move W24, W0
	254 Move X0, [X8+40]
	255 Compare X0, 0
	256 JumpIfEqual {1363}
	257 Move X1, X31
	258 Call Object.GetInstanceID, X0
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X1, [X19+6664]
	261 Compare X1, 0
	262 JumpIfEqual {1363}
	263 Move X0, [X1+40]
	264 Move W8, 3
	265 Move [X20+116], W8
	266 Move X8, [X31+16]
	267 Compare X8, 0
	268 JumpIfEqual {1363}
	269 Move W8, [X8+137]
	270 Compare W8, 0
	271 JumpIfEqual {330}
	272 Move X0, [X19+104]
	273 Compare X0, 0
	274 JumpIfEqual {1363}
	275 Move X1, X31
	276 Call Object.get_name, X0
	277 Move X8, 0x49F000
	278 Move X8, [X8+1624]
	279 Move X9, 0x49F000
	280 Move X9, [X9+1632]
	281 Move X1, X0
	282 Move X8, [X8]
	283 Move X3, X31
	284 Move X2, [X9]
	285 Move X0, X8
	286 Call String.Concat, X0, X1, X2
	287 Move X8, 0x43A000
	288 Move X8, [X8+2600]
	289 Move X24, X0
	290 Move X8, [X8]
	291 Move W9, [X8+224]
	292 Compare W9, 0
	293 JumpIfNotEqual {296}
	294 Move X0, X8
	295 Call 0x1C17DFC
	296 Move X0, X24
	297 Move X1, X31
	298 Call Debug.LogWarning, X0
	299 Move X8, [X19+6664]
	300 Compare X8, 0
	301 JumpIfEqual {1363}
	302 Move X9, 0x4A8000
	303 Move X9, [X9+1576]
	304 Move X24, [X19+112]
	305 Move X25, [X8+40]
	306 Move X0, [X9]
	307 Move W9, [X0+224]
	308 Compare W9, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move X0, X24
	312 Move X1, X25
	313 Move X2, X31
	314 Call MaterialManager.GetFallbackMaterial, X0, X1
	315 Move X1, [X19+6664]
	316 Move X3, [X19+6624]
	317 Move X2, [X31+64]
	318 Move X4, X31
	319 Move [X19+6672], X0
	320 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	321 Move X8, [X19+5560]
	322 Move [X19+6680], W0
	323 Compare X8, 0
	324 JumpIfEqual {1363}
	325 Move W9, [X8+24]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move W9, 56
	328 NotImplemented "Instruction SMADDL not yet implemented."
	329 Move [X8+84], W31
	330 Compare X23, 0
	331 JumpIfEqual {1363}
	332 Move W8, [X23+24]
	333 Move X9, [X31+56]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Add X24, X9, 48
	336 Move W21, W31
	337 Move [X31+40], W31
	338 Move [X31+8], X24
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Add X22, X23, W21
	341 Add X22, X22, 36
	342 Move W9, [X22]
	343 Compare W9, 0
	344 JumpIfEqual {1178}
	345 Move X9, [X31+56]
	346 Compare X9, 0
	347 JumpIfEqual {1363}
	348 Move X9, [X24]
	349 Move W20, [X19+232]
	350 Compare X9, 0
	351 JumpIfEqual {354}
	352 Move W9, [X9+24]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X8, 0x4A8000
	355 Move X8, [X8+2920]
	356 Move X0, [X8]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X8, 0x4A8000
	362 Move X8, [X8+3240]
	363 Add W1, W20, 1
	364 Move W2, 1
	365 Move X0, X24
	366 Move X3, [X8]
	367 Call TextInfo.Resize, X0, X1, X2
	368 Move W8, [X23+24]
	369 Move W20, 56
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move W27, [X22]
	372 Move X25, W21
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X8, [X31+72]
	375 Move W8, [X8+181]
	376 Compare W8, 0
	377 JumpIfEqual {467}
	378 Move X4, [X31+72]
	379 Move X5, [X31+56]
	380 Move W26, [X19+120]
	381 Add W2, W21, 1
	382 Add X3, X31, 328
	383 Move X0, X19
	384 Move X1, X23
	385 Call TextGenerator.ValidateHtmlTag, X0, X1, X2, X3, X4, X5
	386 Move TEMP, X0
	387 And TEMP, TEMP, 1
	388 Compare TEMP, 1
	389 JumpIfNotEqual {467}
	390 Move W8, [X23+24]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X8, [X31+48]
	393 Move W21, [X31+328]
	394 Move W27, 392
	395 Move W8, [X8]
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X8, [X19+5560]
	398 Compare X8, 0
	399 JumpIfEqual {1363}
	400 NotImplemented "Instruction LDRSW not yet implemented."
	401 Move W10, [X8+24]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 NotImplemented "Instruction MADD not yet implemented."
	404 Move W9, [X8+84]
	405 Add X10, X23, X25
	406 Move W20, [X10+40]
	407 Add W9, W9, 1
	408 Move [X8+84], W9
	409 Move X22, [X24]
	410 Compare X22, 0
	411 JumpIfEqual {1363}
	412 NotImplemented "Instruction LDRSW not yet implemented."
	413 Move W8, [X22+24]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 NotImplemented "Instruction LDRH not yet implemented."
	416 NotImplemented "Instruction NOP not yet implemented."
	417 NotImplemented "Instruction MADD not yet implemented."
	418 Subtract W8, W8, 0x2000
	419 NotImplemented "Instruction STRH not yet implemented."
	420 Move X8, [X19+104]
	421 Move [X9+64], X8
	422 Move W8, [X19+120]
	423 Move [X9+96], W8
	424 Move X0, [X19+224]
	425 Compare X0, 0
	426 JumpIfEqual {1363}
	427 Move X1, X31
	428 Call SpriteAsset.get_spriteCharacterTable, X0
	429 Compare X0, 0
	430 JumpIfEqual {1363}
	431 Move X8, 0x4A8000
	432 Move W1, [X19+5500]
	433 Move X8, [X8+1848]
	434 Move X2, [X8]
	435 Call List`1<Object>.get_Item, X0, X1
	436 Move W8, [X22+24]
	437 NotImplemented "Instruction CMP not yet implemented."
	438 NotImplemented "Instruction MADD not yet implemented."
	439 Move X24, [X31+8]
	440 Move [X8+48], X0
	441 Move X9, [X24]
	442 Compare X9, 0
	443 JumpIfEqual {1363}
	444 Move W8, [X19+232]
	445 Move W10, [X9+24]
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Move X13, [X31+48]
	448 Move X10, W8
	449 NotImplemented "Instruction MADD not yet implemented."
	450 Move W11, [X13]
	451 Move [X12+36], W20
	452 Move [X12+40], W11
	453 Move W11, [X23+24]
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move W11, W21
	456 Move X11, W11
	457 Add X11, X23, X11
	458 Move W11, [X11+40]
	459 NotImplemented "Instruction NOP not yet implemented."
	460 NotImplemented "Instruction MADD not yet implemented."
	461 Subtract W10, W11, W20
	462 Add W10, W10, 1
	463 Move [X9+44], W10
	464 Move W9, 1
	465 Move [X13], W9
	466 Move [X19+120], W26
	467 Move X8, [X31+48]
	468 Move X11, [X19+104]
	469 Move X10, [X19+112]
	470 Move W9, [X19+120]
	471 Move W8, [X8]
	472 Move [X31+24], X11
	473 Move [X31+32], X10
	474 Move [X31+44], W9
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Move W8, [X19+292]
	477 Move TEMP, X8
	478 And TEMP, TEMP, 16
	479 Compare TEMP, 16
	480 JumpIfEqual {489}
	481 Move TEMP, X8
	482 And TEMP, TEMP, 8
	483 Compare TEMP, 8
	484 JumpIfEqual {513}
	485 Move TEMP, X8
	486 And TEMP, TEMP, 32
	487 Compare TEMP, 32
	488 JumpIfNotEqual {538}
	489 Move X8, 0x43C000
	490 Move X8, [X8+368]
	491 Move X0, [X8]
	492 Move W8, [X0+224]
	493 Compare W8, 0
	494 JumpIfNotEqual {496}
	495 Call 0x1C17DFC
	496 Move W0, W27
	497 Move X1, X31
	498 Call Char.IsLower, X0
	499 Move TEMP, X0
	500 And TEMP, TEMP, 1
	501 Compare TEMP, 1
	502 JumpIfNotEqual {538}
	503 Move X8, 0x43C000
	504 Move X8, [X8+368]
	505 Move X0, [X8]
	506 Move W8, [X0+224]
	507 Compare W8, 0
	508 JumpIfNotEqual {510}
	509 Call 0x1C17DFC
	510 Move W0, W27
	511 Move X1, X31
	512 Call Char.ToUpper, X0
	513 Move X8, 0x43C000
	514 Move X8, [X8+368]
	515 Move X0, [X8]
	516 Move W8, [X0+224]
	517 Compare W8, 0
	518 JumpIfNotEqual {520}
	519 Call 0x1C17DFC
	520 Move W0, W27
	521 Move X1, X31
	522 Call Char.IsUpper, X0
	523 Move TEMP, X0
	524 And TEMP, TEMP, 1
	525 Compare TEMP, 1
	526 JumpIfNotEqual {538}
	527 Move X8, 0x43C000
	528 Move X8, [X8+368]
	529 Move X0, [X8]
	530 Move W8, [X0+224]
	531 Compare W8, 0
	532 JumpIfNotEqual {534}
	533 Call 0x1C17DFC
	534 Move W0, W27
	535 Move X1, X31
	536 Call Char.ToLower, X0
	537 And W27, W0, 0xFFFF
	538 Move X3, [X19+104]
	539 Move W4, [X19+292]
	540 Move W5, [X19+308]
	541 Move X1, [X31+72]
	542 Add X6, X31, 332
	543 Move X0, X19
	544 Move W2, W27
	545 Call TextGenerator.GetTextElement, X0, X1, X2, X3, X4, X5, X6
	546 Compare X0, 0
	547 JumpIfEqual {550}
	548 Move X26, X0
	549 Move W25, W27
	550 Move W8, [X23+24]
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Add X8, X23, X25
	553 Move W2, [X8+40]
	554 Move X3, [X19+104]
	555 Move X4, [X31+56]
	556 Move W1, W27
	557 Call TextGenerator.DoMissingGlyphCallback, X0, X1, X2, X3, X4
	558 Move X9, [X31+16]
	559 Compare X9, 0
	560 JumpIfEqual {1363}
	561 Move W8, [X23+24]
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move W8, [X9+60]
	564 Move W10, 0x25A1
	565 Add X5, X31, 332
	566 Move W2, 1
	567 NotImplemented "Instruction CMP not yet implemented."
	568 NotImplemented "Instruction CSEL not yet implemented."
	569 Move [X22], W25
	570 Move X1, [X19+104]
	571 Move W3, [X19+292]
	572 Move W4, [X19+308]
	573 Move W0, W25
	574 Move X6, X31
	575 Move X20, X9
	576 Call FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	577 Compare X0, 0
	578 JumpIfEqual {581}
	579 Move X26, X0
	580 Move X9, X20
	581 Move X2, [X20+48]
	582 Move X9, X20
	583 Compare X2, 0
	584 JumpIfEqual {598}
	585 Move W8, [X2+24]
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Move X1, [X19+104]
	588 Move W4, [X19+292]
	589 Move W5, [X19+308]
	590 Add X6, X31, 332
	591 Move W3, 1
	592 Move W0, W25
	593 Move X7, X31
	594 Call FontAssetUtilities.GetCharacterFromFontAssets, X0, X1, X2, X3, X4, X5, X6
	595 Move X9, [X31+16]
	596 Compare X0, 0
	597 JumpIfNotEqual {654}
	598 Move X8, 0x43A000
	599 Move X8, [X8+1432]
	600 Move X26, [X9+32]
	601 Move X0, [X8]
	602 Move W8, [X0+224]
	603 Compare W8, 0
	604 JumpIfNotEqual {606}
	605 Call 0x1C17DFC
	606 Move X0, X26
	607 Move X1, X31
	608 Move X2, X31
	609 Call Object.op_Inequality, X0, X1
	610 Move X8, [X31+16]
	611 Move TEMP, X0
	612 And TEMP, TEMP, 1
	613 Compare TEMP, 1
	614 JumpIfNotEqual {627}
	615 Move X1, [X8+32]
	616 Move W3, [X19+292]
	617 Move W4, [X19+308]
	618 Add X5, X31, 332
	619 Move W2, 1
	620 Move W0, W25
	621 Move X6, X31
	622 Call FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	623 Move X9, [X31+16]
	624 Move X26, X0
	625 Compare X0, 0
	626 JumpIfNotEqual {655}
	627 Move W8, [X23+24]
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Move W25, 32
	630 Move [X22], W25
	631 Move X1, [X19+104]
	632 Move W3, [X19+292]
	633 Move W4, [X19+308]
	634 Add X5, X31, 332
	635 Move W0, 32
	636 Move W2, 1
	637 Move X6, X31
	638 Call FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	639 Compare X0, 0
	640 JumpIfNotEqual {653}
	641 Move W8, [X23+24]
	642 NotImplemented "Instruction CMP not yet implemented."
	643 Move W25, 3
	644 Move [X22], W25
	645 Move X1, [X19+104]
	646 Move W3, [X19+292]
	647 Move W4, [X19+308]
	648 Add X5, X31, 332
	649 Move W0, 3
	650 Move W2, 1
	651 Move X6, X31
	652 Call FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	653 Move X9, [X31+16]
	654 Move X26, X0
	655 Move W8, [X9+137]
	656 Compare W8, 0
	657 JumpIfEqual {739}
	658 Move W8, W27
	659 ShiftRight W8, 16
	660 And W8, W8, 0x7FFFFFFF
	661 Compare W8, 0
	662 JumpIfNotEqual {692}
	663 Move X8, 0x442000
	664 Move X8, [X8+1824]
	665 Add X1, X31, 160
	666 Move [X31+160], W27
	667 Move X0, [X8]
	668 Call 0x1C17E04
	669 Move X8, [X31+72]
	670 Move X8, [X8+64]
	671 Compare X8, 0
	672 JumpIfEqual {1363}
	673 Move X27, X0
	674 Move X0, X8
	675 Move X1, X31
	676 Call Object.get_name, X0
	677 Compare X26, 0
	678 JumpIfEqual {1363}
	679 Move X28, X0
	680 Move X0, X26
	681 Move X1, X31
	682 Call TextElement.get_unicode, X0
	683 Move X8, 0x441000
	684 Move X8, [X8+1824]
	685 Move [X31+240], W0
	686 Add X1, X31, 240
	687 Move X8, [X8]
	688 Move X0, X8
	689 Call 0x1C17E04
	690 Move X8, 0x4A7000
	691 Move X8, [X8+3256]
	692 Move X8, 0x441000
	693 Move X8, [X8+1824]
	694 Add X1, X31, 160
	695 Move [X31+160], W27
	696 Move X0, [X8]
	697 Call 0x1C17E04
	698 Move X8, [X31+72]
	699 Move X8, [X8+64]
	700 Compare X8, 0
	701 JumpIfEqual {1363}
	702 Move X27, X0
	703 Move X0, X8
	704 Move X1, X31
	705 Call Object.get_name, X0
	706 Compare X26, 0
	707 JumpIfEqual {1363}
	708 Move X28, X0
	709 Move X0, X26
	710 Move X1, X31
	711 Call TextElement.get_unicode, X0
	712 Move X8, 0x441000
	713 Move X8, [X8+1824]
	714 Move [X31+240], W0
	715 Add X1, X31, 240
	716 Move X8, [X8]
	717 Move X0, X8
	718 Call 0x1C17E04
	719 Move X8, 0x4A7000
	720 Move X8, [X8+3248]
	721 Move X8, [X8]
	722 Move X3, X0
	723 Move X1, X27
	724 Move X2, X28
	725 Move X0, X8
	726 Move X4, X31
	727 Call String.Format, X0, X1, X2, X3
	728 Move X8, 0x439000
	729 Move X8, [X8+2600]
	730 Move X27, X0
	731 Move X0, [X8]
	732 Move W8, [X0+224]
	733 Compare W8, 0
	734 JumpIfNotEqual {736}
	735 Call 0x1C17DFC
	736 Move X0, X27
	737 Move X1, X31
	738 Call Debug.LogWarning, X0
	739 Move X8, [X24]
	740 Move W27, 392
	741 Compare X8, 0
	742 JumpIfEqual {1363}
	743 NotImplemented "Instruction LDRSW not yet implemented."
	744 Move W10, [X8+24]
	745 NotImplemented "Instruction CMP not yet implemented."
	746 NotImplemented "Instruction MADD not yet implemented."
	747 Move [X8+56], X31
	748 Compare X26, 0
	749 JumpIfEqual {1363}
	750 Move X0, X26
	751 Move X1, X31
	752 Call TextElement.get_elementType, X0
	753 And W8, W0, 255
	754 NotImplemented "Instruction CMP not yet implemented."
	755 Move X0, X26
	756 Move X1, X31
	757 Call TextElement.get_textAsset, X0
	758 Compare X0, 0
	759 JumpIfEqual {1363}
	760 Move X1, X31
	761 Call TextAsset.get_instanceID, X0
	762 Move X8, [X19+104]
	763 Compare X8, 0
	764 JumpIfEqual {1363}
	765 Move W27, W0
	766 Move X0, X8
	767 Move X1, X31
	768 Call TextAsset.get_instanceID, X0
	769 Move W28, W0
	770 NotImplemented "Instruction CMP not yet implemented."
	771 Move X0, [X19+104]
	772 Move W22, W31
	773 Move X0, X26
	774 Move X1, X31
	775 Call TextElement.get_textAsset, X0
	776 Compare X0, 0
	777 JumpIfEqual {1362}
	778 Move X8, 0x4A7000
	779 Move X9, [X0]
	780 Move X8, [X8+600]
	781 Move W11, [X9+304]
	782 Move X8, [X8]
	783 Move W10, [X8+304]
	784 NotImplemented "Instruction CMP not yet implemented."
	785 Move X0, X31
	786 Move X9, [X9+200]
	787 Add X9, X9, X10
	788 NotImplemented "Instruction LDUR not yet implemented."
	789 NotImplemented "Instruction CMP not yet implemented."
	790 NotImplemented "Instruction CSEL not yet implemented."
	791 Move [X19+104], X0
	792 NotImplemented "Instruction CMP not yet implemented."
	793 NotImplemented "Instruction CSET not yet implemented."
	794 Compare X0, 0
	795 JumpIfEqual {1363}
	796 Move X1, X31
	797 Call FontAsset.get_fontFeatureTable, X0
	798 Compare X0, 0
	799 JumpIfEqual {1363}
	800 Move X27, [X0+56]
	801 Move X0, X26
	802 Move X1, X31
	803 Call TextElement.get_glyphIndex, X0
	804 Compare X27, 0
	805 JumpIfEqual {1363}
	806 Move X8, 0x4A7000
	807 Move X8, [X8+3224]
	808 Move W1, W0
	809 Add X2, X31, 320
	810 Move X0, X27
	811 Move X3, [X8]
	812 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	813 Move TEMP, X0
	814 And TEMP, TEMP, 1
	815 Compare TEMP, 1
	816 JumpIfNotEqual {883}
	817 Move X0, [X31+320]
	818 Compare X0, 0
	819 JumpIfEqual {1356}
	820 Move W27, W31
	821 Move W8, [X0+24]
	822 NotImplemented "Instruction CMP not yet implemented."
	823 Move X8, 0x4A7000
	824 Move X8, [X8+808]
	825 Move W1, W27
	826 Move X2, [X8]
	827 Call List`1<LigatureSubstitutionRecord>.get_Item, X0, X1
	828 Move [X31+304], X0
	829 Move [X31+312], X1
	830 Add X0, X31, 304
	831 Move X1, X31
	832 Call LigatureSubstitutionRecord.get_componentGlyphIDs, X0
	833 Compare X0, 0
	834 JumpIfEqual {1363}
	835 Move X20, [X0+24]
	836 Add X0, X31, 304
	837 Move X1, X31
	838 Call LigatureSubstitutionRecord.get_ligatureGlyphID, X0
	839 NotImplemented "Instruction CMP not yet implemented."
	840 Move W28, W0
	841 Move W24, 1
	842 Move W9, [X23+24]
	843 Add W8, W21, W24
	844 NotImplemented "Instruction CMP not yet implemented."
	845 Move X0, [X19+104]
	846 Compare X0, 0
	847 JumpIfEqual {1363}
	848 Add X8, X23, W8
	849 Move W1, [X8+36]
	850 Move X2, X31
	851 Call FontAsset.GetGlyphIndex, X0, X1
	852 Move W29, W0
	853 Add X0, X31, 304
	854 Move X1, X31
	855 Call LigatureSubstitutionRecord.get_componentGlyphIDs, X0
	856 Compare X0, 0
	857 JumpIfEqual {1363}
	858 Move W8, [X0+24]
	859 NotImplemented "Instruction CMP not yet implemented."
	860 Add X8, X0, W24
	861 Move W8, [X8+32]
	862 NotImplemented "Instruction CMP not yet implemented."
	863 Add W24, W24, 1
	864 NotImplemented "Instruction CMP not yet implemented."
	865 Compare W28, 0
	866 JumpIfEqual {878}
	867 Move X0, [X19+104]
	868 Compare X0, 0
	869 JumpIfEqual {1363}
	870 Add X2, X31, 296
	871 Move W1, W28
	872 Move X3, X31
	873 Call FontAsset.TryAddGlyphInternal, X0, X1, X2
	874 Move TEMP, X0
	875 And TEMP, TEMP, 1
	876 Compare TEMP, 1
	877 JumpIfEqual {1007}
	878 Move X0, [X31+320]
	879 Add W27, W27, 1
	880 Compare X0, 0
	881 JumpIfNotEqual {821}
	882 Move X24, [X31+8]
	883 Move W27, 392
	884 Move X8, [X24]
	885 Compare X8, 0
	886 JumpIfEqual {1363}
	887 NotImplemented "Instruction LDRSW not yet implemented."
	888 Move W10, [X8+24]
	889 NotImplemented "Instruction CMP not yet implemented."
	890 NotImplemented "Instruction MADD not yet implemented."
	891 Move W11, 1
	892 Move [X10+40], W11
	893 Move [X10+48], X26
	894 Move W11, [X31+332]
	895 NotImplemented "Instruction STRH not yet implemented."
	896 Move [X10+100], W11
	897 Move W10, [X23+24]
	898 NotImplemented "Instruction CMP not yet implemented."
	899 Add X10, X23, W21
	900 Move W11, [X10+40]
	901 NotImplemented "Instruction NOP not yet implemented."
	902 NotImplemented "Instruction MADD not yet implemented."
	903 Move X0, X26
	904 Move X1, X31
	905 Move [X8+36], W11
	906 Move W9, [X10+44]
	907 Move [X8+44], W9
	908 Move X9, [X19+104]
	909 Move [X8+64], X9
	910 Call TextElement.get_elementType, X0
	911 And W8, W0, 255
	912 NotImplemented "Instruction CMP not yet implemented."
	913 Move X0, X26
	914 Move X1, X31
	915 Call TextElement.get_textAsset, X0
	916 Compare X0, 0
	917 JumpIfEqual {1363}
	918 Move X8, 0x4A7000
	919 Move X9, [X0]
	920 Move X8, [X8+1864]
	921 Move X1, X0
	922 Move W11, [X9+304]
	923 Move X8, [X8]
	924 Move W10, [X8+304]
	925 NotImplemented "Instruction CMP not yet implemented."
	926 Move X9, [X9+200]
	927 Add X9, X9, X10
	928 NotImplemented "Instruction LDUR not yet implemented."
	929 NotImplemented "Instruction CMP not yet implemented."
	930 Move X0, [X1+40]
	931 Move X3, [X19+6624]
	932 Move X2, [X31+64]
	933 Move X4, X31
	934 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	935 Move X8, [X19+5560]
	936 Move W10, 56
	937 Move [X19+120], W0
	938 Compare X8, 0
	939 JumpIfEqual {1363}
	940 Move W9, [X8+24]
	941 NotImplemented "Instruction CMP not yet implemented."
	942 NotImplemented "Instruction SMADDL not yet implemented."
	943 Move W9, [X8+84]
	944 Add W9, W9, 1
	945 Move [X8+84], W9
	946 Move X9, [X24]
	947 Compare X9, 0
	948 JumpIfEqual {1363}
	949 Move W8, [X19+232]
	950 Move W10, [X9+24]
	951 NotImplemented "Instruction CMP not yet implemented."
	952 Move X10, W8
	953 NotImplemented "Instruction MADD not yet implemented."
	954 Move W10, 2
	955 Move [X9+40], W10
	956 Move W10, [X19+120]
	957 Move [X9+96], W10
	958 Move X9, [X31+48]
	959 Move W10, 1
	960 Move [X9], W10
	961 Move W9, [X31+44]
	962 Move [X19+120], W9
	963 Move W9, [X31+40]
	964 Add W9, W9, 1
	965 Move [X31+40], W9
	966 Compare W22, 0
	967 JumpIfEqual {1048}
	968 Move X0, [X19+104]
	969 Compare X0, 0
	970 JumpIfEqual {1363}
	971 Move X1, X31
	972 Call TextAsset.get_instanceID, X0
	973 Move X8, [X31+72]
	974 Move X8, [X8+64]
	975 Compare X8, 0
	976 JumpIfEqual {1363}
	977 Move W27, W0
	978 Move X0, X8
	979 Move X1, X31
	980 Call TextAsset.get_instanceID, X0
	981 NotImplemented "Instruction CMP not yet implemented."
	982 Move W27, 392
	983 Move X8, [X31+16]
	984 Compare X8, 0
	985 JumpIfEqual {1363}
	986 Move W8, [X8+56]
	987 Compare W8, 0
	988 JumpIfEqual {1038}
	989 Move X8, [X19+104]
	990 Compare X8, 0
	991 JumpIfEqual {1363}
	992 Move X9, 0x4A7000
	993 Move X9, [X9+1576]
	994 Move X27, [X19+112]
	995 Move X28, [X8+40]
	996 Move X0, [X9]
	997 Move W9, [X0+224]
	998 Compare W9, 0
	999 JumpIfNotEqual {1001}
	1000 Call 0x1C17DFC
	1001 Move X0, X27
	1002 Move X1, X28
	1003 Move X2, X31
	1004 Call MaterialManager.GetFallbackMaterial, X0, X1
	1005 Move X1, [X19+104]
	1006 Move W27, 392
	1007 Move X24, [X31+8]
	1008 Move X9, [X24]
	1009 Compare X9, 0
	1010 JumpIfEqual {1363}
	1011 NotImplemented "Instruction LDRSW not yet implemented."
	1012 Move W8, [X9+24]
	1013 Move W27, 392
	1014 NotImplemented "Instruction CMP not yet implemented."
	1015 Move X11, [X31+296]
	1016 And X8, X20, 0
	1017 NotImplemented "Instruction MADD not yet implemented."
	1018 NotImplemented "Instruction CMP not yet implemented."
	1019 Move [X9+56], X11
	1020 Move W10, [X23+24]
	1021 Move X9, X31
	1022 Move W11, W21
	1023 Subtract W10, W10, W21
	1024 NotImplemented "Instruction CSEL not yet implemented."
	1025 NotImplemented "Instruction CMP not yet implemented."
	1026 Add W12, W11, W9
	1027 Move X12, W12
	1028 Add X12, X23, X12
	1029 Compare X9, 0
	1030 JumpIfEqual {1033}
	1031 Move W13, 26
	1032 Move [X12+36], W13
	1033 Move [X12+44], W8
	1034 Add X9, X9, 1
	1035 NotImplemented "Instruction CMP not yet implemented."
	1036 Add W8, W21, W8
	1037 Subtract W21, W8, 1
	1038 Move X1, [X19+104]
	1039 Compare X1, 0
	1040 JumpIfEqual {1363}
	1041 Move X0, [X1+40]
	1042 Move X3, [X19+6624]
	1043 Move X2, [X31+64]
	1044 Move X4, X31
	1045 Move [X19+112], X0
	1046 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1047 Move [X19+120], W0
	1048 Move X0, X26
	1049 Move X1, X31
	1050 Call TextElement.get_glyph, X0
	1051 Compare X0, 0
	1052 JumpIfEqual {1363}
	1053 Move X1, X31
	1054 Call Glyph.get_atlasIndex, X0
	1055 NotImplemented "Instruction CMP not yet implemented."
	1056 Move X27, [X19+104]
	1057 Move X28, [X19+112]
	1058 Move X0, X26
	1059 Move X1, X31
	1060 Call TextElement.get_glyph, X0
	1061 Compare X0, 0
	1062 JumpIfEqual {1363}
	1063 Move X1, X31
	1064 Call Glyph.get_atlasIndex, X0
	1065 Move X8, 0x4A7000
	1066 Move X8, [X8+1576]
	1067 Move W26, W0
	1068 Move X8, [X8]
	1069 Move W9, [X8+224]
	1070 Compare W9, 0
	1071 JumpIfNotEqual {1074}
	1072 Move X0, X8
	1073 Call 0x1C17DFC
	1074 Move X0, X27
	1075 Move X1, X28
	1076 Move W2, W26
	1077 Move X3, X31
	1078 Call MaterialManager.GetFallbackMaterial, X0, X1, X2
	1079 Move X1, [X19+104]
	1080 Move X3, [X19+6624]
	1081 Move X2, [X31+64]
	1082 Move X4, X31
	1083 Move [X19+112], X0
	1084 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1085 Move W22, 1
	1086 Move W27, 392
	1087 Move [X19+120], W0
	1088 Move X8, 0x43B000
	1089 Move X8, [X8+368]
	1090 Move X0, [X8]
	1091 Move W8, [X0+224]
	1092 Compare W8, 0
	1093 JumpIfNotEqual {1095}
	1094 Call 0x1C17DFC
	1095 Move W0, W25
	1096 Move X1, X31
	1097 Call Char.IsWhiteSpace, X0
	1098 Move W8, 0x200B
	1099 NotImplemented "Instruction CMP not yet implemented."
	1100 Move W12, 56
	1101 Move TEMP, X0
	1102 And TEMP, TEMP, 1
	1103 Compare TEMP, 1
	1104 JumpIfEqual {1143}
	1105 Move X8, [X19+5560]
	1106 Compare X8, 0
	1107 JumpIfEqual {1363}
	1108 NotImplemented "Instruction LDRSW not yet implemented."
	1109 Move W10, [X8+24]
	1110 NotImplemented "Instruction CMP not yet implemented."
	1111 NotImplemented "Instruction MADD not yet implemented."
	1112 Add X8, X8, 84
	1113 Move W9, [X8]
	1114 Move W10, 0x3FFF
	1115 NotImplemented "Instruction CMP not yet implemented."
	1116 Move X8, 0x43D000
	1117 Move X25, [X19+112]
	1118 Move X8, [X8+3232]
	1119 Move X0, [X8]
	1120 Call 0x1C17F10
	1121 Move X1, X25
	1122 Move X2, X31
	1123 Move X26, X0
	1124 Call Material..ctor, X0, X1
	1125 Move X1, [X19+104]
	1126 Move X3, [X19+6624]
	1127 Move X2, [X31+64]
	1128 Move X0, X26
	1129 Move X4, X31
	1130 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1131 Move X8, [X19+5560]
	1132 Move [X19+120], W0
	1133 Compare X8, 0
	1134 JumpIfEqual {1363}
	1135 Move W9, [X8+24]
	1136 Move W12, 56
	1137 NotImplemented "Instruction CMP not yet implemented."
	1138 NotImplemented "Instruction SMADDL not yet implemented."
	1139 Add X8, X8, 84
	1140 Move W9, [X8]
	1141 Add W9, W9, 1
	1142 Move [X8], W9
	1143 Move X9, [X24]
	1144 Compare X9, 0
	1145 JumpIfEqual {1363}
	1146 Move W8, [X19+232]
	1147 Move W10, [X9+24]
	1148 NotImplemented "Instruction CMP not yet implemented."
	1149 Move X10, [X19+112]
	1150 Move X11, W8
	1151 NotImplemented "Instruction MADD not yet implemented."
	1152 Move [X11+88], X10
	1153 NotImplemented "Instruction LDRSW not yet implemented."
	1154 Move [X11+96], W9
	1155 Move X10, [X19+5560]
	1156 Compare X10, 0
	1157 JumpIfEqual {1363}
	1158 Move W11, [X10+24]
	1159 NotImplemented "Instruction CMP not yet implemented."
	1160 NotImplemented "Instruction MADD not yet implemented."
	1161 Move [X11+65], W22
	1162 Compare W22, 0
	1163 JumpIfEqual {1172}
	1164 NotImplemented "Instruction MADD not yet implemented."
	1165 Move X10, [X31+32]
	1166 Move [X9+72], X10
	1167 Move X9, [X31+24]
	1168 Move [X19+104], X9
	1169 Move [X19+112], X10
	1170 Move W9, [X31+44]
	1171 Move [X19+120], W9
	1172 Add W8, W8, 1
	1173 Move [X19+232], W8
	1174 Move W8, [X23+24]
	1175 Add W21, W21, 1
	1176 NotImplemented "Instruction CMP not yet implemented."
	1177 Move [X31+40], W31
	1178 Move X9, [X31+48]
	1179 Move W8, [X9+1136]
	1180 Compare W8, 0
	1181 JumpIfEqual {1184}
	1182 Add X8, X9, 1136
	1183 Move [X8], W31
	1184 Move X23, [X31+56]
	1185 Compare X23, 0
	1186 JumpIfEqual {1363}
	1187 Move W8, [X31+40]
	1188 Move [X23+20], W8
	1189 Move X0, [X19+6624]
	1190 Compare X0, 0
	1191 JumpIfEqual {1363}
	1192 Move X8, 0x494000
	1193 Move X8, [X8+3448]
	1194 Move X1, [X8]
	1195 Call Dictionary`2<Int32, Int32>.get_Count, X0
	1196 Add X23, X23, 88
	1197 Move X8, [X23]
	1198 Move X21, 0x4A7000
	1199 Move [X23-44], W0
	1200 Move X21, [X21+2920]
	1201 Compare X8, 0
	1202 JumpIfEqual {1363}
	1203 Move W8, [X8+24]
	1204 Move W22, W0
	1205 NotImplemented "Instruction CMP not yet implemented."
	1206 Move X0, [X21]
	1207 Move W8, [X0+224]
	1208 Compare W8, 0
	1209 JumpIfNotEqual {1211}
	1210 Call 0x1C17DFC
	1211 Move X8, 0x4A7000
	1212 Move X8, [X8+3232]
	1213 Move X0, X23
	1214 Move W1, W22
	1215 Move W2, W31
	1216 Move X3, [X8]
	1217 Call 0x229D29C, X0, X1, X2
	1218 Move W8, [X19+44]
	1219 Compare W8, 0
	1220 JumpIfEqual {1246}
	1221 Move X9, [X24]
	1222 Compare X9, 0
	1223 JumpIfEqual {1363}
	1224 Move W8, [X19+232]
	1225 Move W9, [X9+24]
	1226 Subtract W9, W9, W8
	1227 NotImplemented "Instruction CMP not yet implemented."
	1228 Move X0, [X21]
	1229 Add W10, W8, 1
	1230 NotImplemented "Instruction CMP not yet implemented."
	1231 Move W10, 256
	1232 Move W9, [X0+224]
	1233 Move X20, X23
	1234 NotImplemented "Instruction CSINC not yet implemented."
	1235 Compare W9, 0
	1236 JumpIfNotEqual {1238}
	1237 Call 0x1C17DFC
	1238 Move X8, 0x4A7000
	1239 Move X8, [X8+3240]
	1240 Move W2, 1
	1241 Move X0, X24
	1242 Move W1, W23
	1243 Move X3, [X8]
	1244 Call TextInfo.Resize, X0, X1, X2
	1245 Move X23, X20
	1246 NotImplemented "Instruction CMP not yet implemented."
	1247 Move X27, 0x4A7000
	1248 Move X27, [X27+1736]
	1249 Move W21, W31
	1250 Move W25, 56
	1251 Move W26, 80
	1252 Move X8, [X31+64]
	1253 Move X8, [X8]
	1254 Compare X8, 0
	1255 JumpIfEqual {1363}
	1256 Move W9, [X8+24]
	1257 NotImplemented "Instruction CMP not yet implemented."
	1258 Move X20, [X23]
	1259 Compare X20, 0
	1260 JumpIfEqual {1363}
	1261 Move W9, [X20+24]
	1262 NotImplemented "Instruction CMP not yet implemented."
	1263 Move X29, W21
	1264 NotImplemented "Instruction MADD not yet implemented."
	1265 NotImplemented "Instruction MADD not yet implemented."
	1266 Move X8, [X10+40]
	1267 Move W0, [X9+84]
	1268 Add X28, X10, 32
	1269 Compare X8, 0
	1270 JumpIfEqual {1277}
	1271 Move W8, [X8+24]
	1272 Subtract W8, W8, W0
	1273 NotImplemented "Instruction CMP not yet implemented."
	1274 Move X1, X31
	1275 Call Mathf.NextPowerOfTwo, X0
	1276 Move W24, W0
	1277 NotImplemented "Instruction MOVI not yet implemented."
	1278 Add W1, W0, 1
	1279 Add X0, X31, 160
	1280 Move X2, X31
	1281 Move [X31+208], V0
	1282 Move [X31+216], V0
	1283 Move [X31+176], V0
	1284 Move [X31+184], V0
	1285 Move [X31+10], V0
	1286 Call MeshInfo..ctor, X0, X1
	1287 Add X0, X31, 80
	1288 Add X1, X31, 160
	1289 Move W2, 80
	1290 Call 0x3EB2AC0
	1291 Move W8, [X20+24]
	1292 NotImplemented "Instruction CMP not yet implemented."
	1293 Add X1, X31, 80
	1294 Move W2, 80
	1295 Move X0, X28
	1296 Call 0x3EB2AC0
	1297 NotImplemented "Instruction CMP not yet implemented."
	1298 NotImplemented "Instruction CMP not yet implemented."
	1299 Add W24, W0, 256
	1300 Move X1, X31
	1301 Call Mathf.NextPowerOfTwo, X0
	1302 NotImplemented "Instruction CMP not yet implemented."
	1303 Move W8, 256
	1304 NotImplemented "Instruction CSEL not yet implemented."
	1305 Move X0, [X27]
	1306 Move W8, [X0+224]
	1307 Compare W8, 0
	1308 JumpIfNotEqual {1310}
	1309 Call 0x1C17DFC
	1310 Move X0, X28
	1311 Move W1, W24
	1312 Move X2, X31
	1313 Call MeshInfo.ResizeMeshInfo, X0, X1
	1314 Move X20, [X23]
	1315 Compare X20, 0
	1316 JumpIfEqual {1363}
	1317 Move X8, [X31+64]
	1318 Move X8, [X8]
	1319 Compare X8, 0
	1320 JumpIfEqual {1363}
	1321 Move W9, [X8+24]
	1322 NotImplemented "Instruction CMP not yet implemented."
	1323 Move W9, [X20+24]
	1324 NotImplemented "Instruction CMP not yet implemented."
	1325 NotImplemented "Instruction MADD not yet implemented."
	1326 Move X9, [X8+56]
	1327 NotImplemented "Instruction NOP not yet implemented."
	1328 NotImplemented "Instruction MADD not yet implemented."
	1329 Move [X10+96], X9
	1330 Move X0, [X8+40]
	1331 Compare X0, 0
	1332 JumpIfEqual {1363}
	1333 Move X1, X31
	1334 Call FontAsset.get_atlasRenderMode, X0
	1335 Move W8, [X20+24]
	1336 NotImplemented "Instruction CMP not yet implemented."
	1337 Add W21, W21, 1
	1338 NotImplemented "Instruction MADD not yet implemented."
	1339 NotImplemented "Instruction CMP not yet implemented."
	1340 Move [X8+104], W0
	1341 Move W0, [X19+232]
	1342 Move X20, [X31+416]
	1343 Move X19, [X31+424]
	1344 Move X22, [X31+400]
	1345 Move X21, [X31+408]
	1346 Move X24, [X31+384]
	1347 Move X23, [X31+392]
	1348 Move X26, [X31+368]
	1349 Move X25, [X31+376]
	1350 Move X28, [X31+352]
	1351 Move X27, [X31+360]
	1352 Move X29, [X31+336]
	1353 Move X30, [X31+344]
	1354 Add X31, X31, 432
	1355 Return X0
	1356 Move X9, [X31+48]
	1357 Move X23, [X31+56]
	1358 Move W8, [X9+1136]
	1359 Compare W8, 0
	1360 JumpIfNotEqual {1182}
	1361 Call 0x1C17F28
	1362 Move [X19+104], X31
	1363 Call 0x1C17F20

Method: UnityEngine.TextCore.Text.TextElement GetTextElement(UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, System.UInt32 unicode, UnityEngine.TextCore.Text.FontAsset fontAsset, UnityEngine.TextCore.Text.FontStyles fontStyle, UnityEngine.TextCore.Text.TextFontWeight fontWeight, out System.Boolean isUsingAlternativeTypeface)

Disassembly:
	0x03CC2E90 FDIV S1, S1, S2
	0x03CC2E94 FMUL S1, S1, S10
	0x03CC2E98 FMUL S1, S1, S12
	0x03CC2E9C FMUL S1, S1, S9
	0x03CC2EA0 FMUL S14, S1, S0
	0x03CC2EA4 MOVZ W11, 0x1
	0x03CC2EA8 STR S13, [X31 + 0x70]
	0x03CC2EAC STRB W11, [X10 + 0x28]
	0x03CC2EB0 B 0x3CC327C
	0x03CC2EB4 CMP W27, 0xAD
	0x03CC2EB8 CSET W9, EQ
	0x03CC2EBC CMP W27, 0x3
	0x03CC2EC0 LDR X8, [X21 + 0x1A40]
	0x03CC2EC4 CSET W20, EQ
	0x03CC2EC8 STR W9, [X31 + 0x74]
	0x03CC2ECC ORR W9, W9, W20, 0x0
	0x03CC2ED0 CMP W9, 0x0
	0x03CC2ED4 FMOV S8, W31
	0x03CC2ED8 FCSEL S12, S8, S14, NE
	0x03CC2EDC CBZ X8, 0x3CC4BC4
	0x03CC2EE0 LDR W9, [X21 + 0x324]
	0x03CC2EE4 FMOV S0, W31
	0x03CC2EE8 STR S0, [X31 + 0x70]
	0x03CC2EEC B 0x3CC32A0
	0x03CC2EF0 LDR X9, [X9 + 0xC8]
	0x03CC2EF4 ADD X9, X9, X10, 0x3, LSL
	0x03CC2EF8 LDUR X9, [X9 - 0x8]
	0x03CC2EFC CMP X9, X8
	0x03CC2F00 CSEL X8, X0, X31, EQ
	0x03CC2F04 MOV X0, X28
	0x03CC2F08 MOV X1, X31
	0x03CC2F0C STR X8, [X21 + 0xE0]
	0x03CC2F10 BL 0x3CA0098
	0x03CC2F14 MOV W8, W0
	0x03CC2F18 LDR X0, [X21 + 0xE0]
	0x03CC2F1C STR W8, [X21 + 0x157C]
	0x03CC2F20 ADD W8, W8, 0xE000
	0x03CC2F24 CMP W27, 0x3C
	0x03CC2F28 CSEL W27, W8, W27, EQ
	0x03CC2F2C CBZ X0, 0x3CC4BC4
	0x03CC2F30 ADD X8, X31, 0xA0
	0x03CC2F34 MOV X1, X31
	0x03CC2F38 BL 0x3CAB2D4
	0x03CC2F3C ADD X0, X31, 0x250
	0x03CC2F40 ADD X1, X31, 0xA0
	0x03CC2F44 MOVZ W2, 0x60
	0x03CC2F48 BL 0x3EB1AC0
	0x03CC2F4C ADD X0, X31, 0x250
	0x03CC2F50 MOV X1, X31
	0x03CC2F54 BL 0x3C9BF88
	0x03CC2F58 LDR V13, [X21 + 0xF4]
	0x03CC2F5C CMP W0, 0x1
	0x03CC2F60 B.LT 0x3CC3090
	0x03CC2F64 LDR X0, [X21 + 0xE0]
	0x03CC2F68 CBZ X0, 0x3CC4BC4
	0x03CC2F6C ADD X8, X31, 0xA0
	0x03CC2F70 MOV X1, X31
	0x03CC2F74 BL 0x3CAB2D4
	0x03CC2F78 ADD X0, X31, 0x250
	0x03CC2F7C ADD X1, X31, 0xA0
	0x03CC2F80 MOVZ W2, 0x60
	0x03CC2F84 BL 0x3EB1AC0
	0x03CC2F88 ADD X0, X31, 0x250
	0x03CC2F8C MOV X1, X31
	0x03CC2F90 BL 0x3C9BF88
	0x03CC2F94 LDR X9, [X21 + 0xE0]
	0x03CC2F98 CBZ X9, 0x3CC4BC4
	0x03CC2F9C MOV W29, W0
	0x03CC2FA0 ADD X8, X31, 0xA0
	0x03CC2FA4 MOV X0, X9
	0x03CC2FA8 MOV X1, X31
	0x03CC2FAC BL 0x3CAB2D4
	0x03CC2FB0 ADD X0, X31, 0x250
	0x03CC2FB4 ADD X1, X31, 0xA0
	0x03CC2FB8 MOVZ W2, 0x60
	0x03CC2FBC BL 0x3EB1AC0
	0x03CC2FC0 ADD X0, X31, 0x250
	0x03CC2FC4 MOV X1, X31
	0x03CC2FC8 BL 0x3C9BF98
	0x03CC2FCC LDRB W24, [X19 + 0xBD]
	0x03CC2FD0 MOV X0, X28
	0x03CC2FD4 MOV X1, X31
	0x03CC2FD8 MOV V9.16B, V0.16B
	0x03CC2FDC BL 0x3CAC954
	0x03CC2FE0 MOV X0, X28
	0x03CC2FE4 MOV X1, X31
	0x03CC2FE8 MOV V10.16B, V0.16B
	0x03CC2FEC BL 0x3CAC94C
	0x03CC2FF0 CBZ X0, 0x3CC4BC4
	0x03CC2FF4 LDR V0, [X31 + 0x54]
	0x03CC2FF8 CMP W24, 0x0
	0x03CC2FFC FMOV S1, 1
	0x03CC3000 MOV X1, X31
	0x03CC3004 FCSEL S12, S0, S1, EQ
	0x03CC3008 BL 0x3C9C4E0
	0x03CC300C LDR X0, [X21 + 0xE0]
	0x03CC3010 CBZ X0, 0x3CC4BC4
	0x03CC3014 ADD X8, X31, 0xA0
	0x03CC3018 MOV X1, X31
	0x03CC301C MOV V11.16B, V0.16B
	0x03CC3020 BL 0x3CAB2D4
	0x03CC3024 ADD X0, X31, 0x250
	0x03CC3028 ADD X1, X31, 0xA0
	0x03CC302C MOVZ W2, 0x60
	0x03CC3030 BL 0x3EB1AC0
	0x03CC3034 ADD X0, X31, 0x250
	0x03CC3038 MOV X1, X31
	0x03CC303C BL 0x3C9BFB8
	0x03CC3040 LDR X0, [X21 + 0xE0]
	0x03CC3044 CBZ X0, 0x3CC4BC4
	0x03CC3048 MOV V8.16B, V0.16B
	0x03CC304C SCVTF S0, W29
	0x03CC3050 FDIV S0, S13, S0
	0x03CC3054 FMUL S0, S0, S9
	0x03CC3058 FMUL S0, S0, S12
	0x03CC305C FMUL S1, S10, S11
	0x03CC3060 ADD X8, X31, 0xA0
	0x03CC3064 MOV X1, X31
	0x03CC3068 FMUL S14, S0, S1
	0x03CC306C BL 0x3CAB2D4
	0x03CC3070 ADD X0, X31, 0x250
	0x03CC3074 ADD X1, X31, 0xA0
	0x03CC3078 MOVZ W2, 0x60
	0x03CC307C BL 0x3EB1AC0
	0x03CC3080 ADD X0, X31, 0x250
	0x03CC3084 MOV X1, X31
	0x03CC3088 BL 0x3C9BFF8
	0x03CC308C B 0x3CC3240
	0x03CC3090 LDR X24, [X31 + 0x90]
	0x03CC3094 LDR X0, [X24]
	0x03CC3098 CBZ X0, 0x3CC4BC4
	0x03CC309C ADD X8, X31, 0xA0
	0x03CC30A0 MOV X1, X31
	0x03CC30A4 BL 0x3C9EB14
	0x03CC30A8 ADD X0, X31, 0x250
	0x03CC30AC ADD X1, X31, 0xA0
	0x03CC30B0 MOVZ W2, 0x60
	0x03CC30B4 BL 0x3EB1AC0
	0x03CC30B8 ADD X0, X31, 0x250
	0x03CC30BC MOV X1, X31
	0x03CC30C0 BL 0x3C9BF88
	0x03CC30C4 LDR X9, [X24]
	0x03CC30C8 CBZ X9, 0x3CC4BC4
	0x03CC30CC MOV W29, W0
	0x03CC30D0 ADD X8, X31, 0xA0
	0x03CC30D4 MOV X0, X9
	0x03CC30D8 MOV X1, X31
	0x03CC30DC BL 0x3C9EB14
	0x03CC30E0 ADD X0, X31, 0x250
	0x03CC30E4 ADD X1, X31, 0xA0
	0x03CC30E8 MOVZ W2, 0x60
	0x03CC30EC BL 0x3EB1AC0
	0x03CC30F0 ADD X0, X31, 0x250
	0x03CC30F4 MOV X1, X31
	0x03CC30F8 BL 0x3C9BF98
	0x03CC30FC LDRB W8, [X19 + 0xBD]
	0x03CC3100 MOV V8.16B, V0.16B
	0x03CC3104 LDR V0, [X31 + 0x54]
	0x03CC3108 LDR X0, [X24]
	0x03CC310C CMP W8, 0x0
	0x03CC3110 FMOV S1, 1
	0x03CC3114 FCSEL S14, S0, S1, EQ
	0x03CC3118 CBZ X0, 0x3CC4BC4
	0x03CC311C ADD X8, X31, 0xA0
	0x03CC3120 MOV X1, X31
	0x03CC3124 BL 0x3C9EB14
	0x03CC3128 ADD X0, X31, 0x250
	0x03CC312C ADD X1, X31, 0xA0
	0x03CC3130 MOVZ W2, 0x60
	0x03CC3134 BL 0x3EB1AC0
	0x03CC3138 ADD X0, X31, 0x250
	0x03CC313C MOV X1, X31
	0x03CC3140 BL 0x3C9BFB8
	0x03CC3144 MOV X0, X28
	0x03CC3148 MOV X1, X31
	0x03CC314C MOV V9.16B, V0.16B
	0x03CC3150 BL 0x3CAC94C
	0x03CC3154 CBZ X0, 0x3CC4BC4
	0x03CC3158 ADD X8, X31, 0xA0
	0x03CC315C MOV X1, X31
	0x03CC3160 BL 0x3C9C4A4
	0x03CC3164 LDR V0, [X31 + 0xA]
	0x03CC3168 LDR W8, [X31 + 0xB0]
	0x03CC316C ADD X0, X31, 0x200
	0x03CC3170 MOV X1, X31
	0x03CC3174 STR V0, [X31 + 0x20]
	0x03CC3178 STR W8, [X31 + 0x210]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0x726000
	013 Move W8, [X26+835]
	014 Move X21, X6
	015 Move W22, W5
	016 Move W23, W4
	017 Move X20, X3
	018 Move W19, W2
	019 Move X24, X1
	020 Move X25, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x4A0000
	026 Move X0, [X0+1200]
	027 Call 0x1C17CF4
	028 Move X0, 0x432000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+835], W8
	033 Compare X24, 0
	034 JumpIfEqual {228}
	035 Move X27, [X24+104]
	036 Move W0, W19
	037 Move X1, X20
	038 Move W2, W31
	039 Move W3, W23
	040 Move W4, W22
	041 Move X5, X21
	042 Move X6, X31
	043 Call FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	044 Compare X0, 0
	045 JumpIfEqual {47}
	046 Move X26, X0
	047 Compare X20, 0
	048 JumpIfEqual {228}
	049 Move X2, [X20+376]
	050 Compare X2, 0
	051 JumpIfEqual {64}
	052 Move W8, [X2+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W3, 1
	055 Move W0, W19
	056 Move X1, X20
	057 Move W4, W23
	058 Move W5, W22
	059 Move X6, X21
	060 Move X7, X31
	061 Call FontAssetUtilities.GetCharacterFromFontAssets, X0, X1, X2, X3, X4, X5, X6
	062 Compare X0, 0
	063 JumpIfNotEqual {209}
	064 Move X0, X20
	065 Move X1, X31
	066 Call TextAsset.get_instanceID, X0
	067 Move X8, [X24+64]
	068 Compare X8, 0
	069 JumpIfEqual {228}
	070 Move W26, W0
	071 Move X0, X8
	072 Move X1, X31
	073 Call TextAsset.get_instanceID, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X28, 0x432000
	076 Move X28, [X28+1432]
	077 Move X25, [X24+80]
	078 Move X0, [X28]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X25
	084 Move X1, X31
	085 Move X2, X31
	086 Call Object.op_Inequality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {98}
	091 Move X1, [X24+80]
	092 Move W2, 1
	093 Move W0, W19
	094 Move X3, X31
	095 Call FontAssetUtilities.GetSpriteCharacterFromSpriteAsset, X0, X1, X2
	096 Compare X0, 0
	097 JumpIfNotEqual {46}
	098 Compare X27, 0
	099 JumpIfEqual {228}
	100 Move X2, [X27+48]
	101 Compare X2, 0
	102 JumpIfEqual {115}
	103 Move W8, [X2+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W3, 1
	106 Move W0, W19
	107 Move X1, X20
	108 Move W4, W23
	109 Move W5, W22
	110 Move X6, X21
	111 Move X7, X31
	112 Call FontAssetUtilities.GetCharacterFromFontAssets, X0, X1, X2, X3, X4, X5, X6
	113 Compare X0, 0
	114 JumpIfNotEqual {209}
	115 Move X0, [X28]
	116 Move X24, [X27+32]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X24
	122 Move X1, X31
	123 Move X2, X31
	124 Call Object.op_Inequality, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {139}
	129 Move X1, [X27+32]
	130 Move W2, 1
	131 Move W0, W19
	132 Move W3, W23
	133 Move W4, W22
	134 Move X5, X21
	135 Move X6, X31
	136 Call FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	137 Compare X0, 0
	138 JumpIfNotEqual {209}
	139 Move X0, [X28]
	140 Move X20, [X27+72]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X20
	146 Move X1, X31
	147 Move X2, X31
	148 Call Object.op_Inequality, X0, X1
	149 Move X26, X31
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {215}
	154 Move X1, [X27+72]
	155 Move W0, W19
	156 Move X20, [X31+80]
	157 Move X19, [X31+88]
	158 Move X22, [X31+64]
	159 Move X21, [X31+72]
	160 Move X24, [X31+48]
	161 Move X23, [X31+56]
	162 Move X26, [X31+32]
	163 Move X25, [X31+40]
	164 Move X28, [X31+16]
	165 Move X27, [X31+24]
	166 Move W2, 1
	167 Move X3, X31
	168 Move X30, [X31+96]
	169 Call FontAssetUtilities.GetSpriteCharacterFromSpriteAsset, X0, X1, X2
	170 Return X0
	171 Move X1, [X24+64]
	172 Move W0, W19
	173 Move W2, W31
	174 Move W3, W23
	175 Move W4, W22
	176 Move X5, X21
	177 Move X6, X31
	178 Call FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	179 Compare X0, 0
	180 JumpIfEqual {191}
	181 Move X8, [X25+5560]
	182 Move [X25+120], W31
	183 Compare X8, 0
	184 JumpIfEqual {228}
	185 Move W9, [X8+24]
	186 Compare W9, 0
	187 JumpIfEqual {229}
	188 Move X8, [X8+56]
	189 Move X26, X0
	190 Move [X25+112], X8
	191 Move X8, [X24+64]
	192 Compare X8, 0
	193 JumpIfEqual {228}
	194 Move X2, [X8+376]
	195 Compare X2, 0
	196 JumpIfEqual {75}
	197 Move W8, [X2+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move W3, 1
	200 Move W0, W19
	201 Move X1, X20
	202 Move W4, W23
	203 Move W5, W22
	204 Move X6, X21
	205 Move X7, X31
	206 Call FontAssetUtilities.GetCharacterFromFontAssets, X0, X1, X2, X3, X4, X5, X6
	207 Compare X0, 0
	208 JumpIfEqual {75}
	209 Move X26, X0
	210 Move X0, X20
	211 Move W1, W19
	212 Move X2, X26
	213 Move X3, X31
	214 Call FontAsset.AddCharacterToLookupCache, X0, X1, X2
	215 Move X0, X26
	216 Move X20, [X31+80]
	217 Move X19, [X31+88]
	218 Move X22, [X31+64]
	219 Move X21, [X31+72]
	220 Move X24, [X31+48]
	221 Move X23, [X31+56]
	222 Move X26, [X31+32]
	223 Move X25, [X31+40]
	224 Move X28, [X31+16]
	225 Move X27, [X31+24]
	226 Move X30, [X31+96]
	227 Return X0
	228 Call 0x1C17F20
	229 Call 0x1C17F28

Method: System.Void ComputeMarginSize(UnityEngine.Rect rect, UnityEngine.Vector4 margins)

Disassembly:
	0x03CB988C STP V1, V1, [X31 + 0x100]
	0x03CB9890 STR V1, [X31 + 0xF]
	0x03CB9894 BL 0x3CA98D0
	0x03CB9898 LDR X2, [X20]
	0x03CB989C LDP V0, V1, [X31 + 0xF0]
	0x03CB98A0 LDR V2, [X31 + 0x11]
	0x03CB98A4 LDR X8, [X31 + 0x120]
	0x03CB98A8 ADD X1, X31, 0xA0
	0x03CB98AC MOV X0, X21
	0x03CB98B0 STP V0, V1, [X31 + 0xA0]
	0x03CB98B4 STR V2, [X31 + 0xC]
	0x03CB98B8 STR X8, [X31 + 0xD0]
	0x03CB98BC BL 0x26E25C0
	0x03CB98C0 LDR X0, [X19 + 0x19E0]
	0x03CB98C4 CBZ X0, 0x3CBAA60
	0x03CB98C8 ADRP X8, 0x464000
	0x03CB98CC LDR X8, [X8 + 0x8D0]
	0x03CB98D0 ADRP X20, 0x4A8000
	0x03CB98D4 LDR X1, [X8]
	0x03CB98D8 LDR X20, [X20 + 0xB68]
	0x03CB98DC BL 0x2A0A4C4
	0x03CB98E0 LDP X1, X0, [X19 + 0x68]
	0x03CB98E4 LDR X3, [X19 + 0x19E0]
	0x03CB98E8 MOVZ W8, 0x15B8
	0x03CB98EC ADD X2, X19, X8
	0x03CB98F0 MOV X4, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+80]
	003 Subtract S0, S2, S4
	004 Subtract S1, S3, S5
	005 Subtract S0, S0, S6
	006 Subtract S1, S1, S7
	007 Move [X0+88], S0
	008 Move [X0+96], S1
	009 Compare X8, 0
	010 JumpIfEqual {27}
	011 Move W9, [X8+24]
	012 Compare W9, 0
	013 JumpIfEqual {26}
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X8+32], X31
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X8+44], W31
	018 Move [X8+48], S3
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move [X8+56], S2
	021 Move [X8+64], S3
	022 Move [X8+68], S2
	023 Move [X8+72], W31
	024 Move X30, [X31+16]
	025 Return 
	026 Call 0x1C17F28
	027 Call 0x1C17F20

Method: System.Void GetSpecialCharacters(UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CB9864 ADD X0, X31, 0xF0
	0x03CB9868 STR X2, [X19 + 0x68]
	0x03CB986C LDR X4, [X22 + 0x48]
	0x03CB9870 MOV W1, W31
	0x03CB9874 MOV X3, X31
	0x03CB9878 MOV X5, X31
	0x03CB987C ADD X21, X19, 0x80
	0x03CB9880 STR W31, [X19 + 0x78]
	0x03CB9884 STR X4, [X19 + 0x70]
	0x03CB9888 STR X31, [X31 + 0x120]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call TextGenerator.GetEllipsisSpecialCharacter, X0, X1
	007 Move X0, X20
	008 Move X1, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Call TextGenerator.GetUnderlineSpecialCharacter, X0, X1
	013 Return 

Method: System.Void GetEllipsisSpecialCharacter(UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CC2CF4 LDR X8, [X8 + 0xC8]
	0x03CC2CF8 ADD X8, X8, X9, 0x3, LSL
	0x03CC2CFC LDUR X8, [X8 - 0x8]
	0x03CC2D00 CMP X8, X1
	0x03CC2D04 B.NE 0x3CC4BCC
	0x03CC2D08 MOV X0, X28
	0x03CC2D0C MOV X1, X31
	0x03CC2D10 BL 0x3CA84C0
	0x03CC2D14 CBZ X0, 0x3CC2D38
	0x03CC2D18 ADRP X8, 0x49F000
	0x03CC2D1C LDR X9, [X0]
	0x03CC2D20 LDR X8, [X8 + 0x748]
	0x03CC2D24 LDRB W11, [X9 + 0x130]
	0x03CC2D28 LDR X8, [X8]
	0x03CC2D2C LDRB W10, [X8 + 0x130]
	0x03CC2D30 CMP W11, W10
	0x03CC2D34 B.CS 0x3CC2EF0
	0x03CC2D38 MOV X8, X31
	0x03CC2D3C B 0x3CC2F04
	0x03CC2D40 LDR X8, [X23 + 0x30]
	0x03CC2D44 CBZ X8, 0x3CC4BC4
	0x03CC2D48 LDR X9, [X31 + 0x98]
	0x03CC2D4C LDR W11, [X8 + 0x18]
	0x03CC2D50 LDRSW X9, [X9]
	0x03CC2D54 CMP W9, W11
	0x03CC2D58 B.CS 0x3CC4BC8
	0x03CC2D5C MADD X10, X9, X29, X8
	0x03CC2D60 LDR X10, [X10 + 0x30]
	0x03CC2D64 STR X10, [X21 + 0x1588]
	0x03CC2D68 CBZ X10, 0x3CC2B44
	0x03CC2D6C MADD X12, X9, X29, X8
	0x03CC2D70 LDR X10, [X12 + 0x40]
	0x03CC2D74 STR X10, [X21 + 0x68]
	0x03CC2D78 LDR X13, [X12 + 0x58]
	0x03CC2D7C STR X13, [X21 + 0x70]
	0x03CC2D80 LDR W12, [X12 + 0x60]
	0x03CC2D84 STR W12, [X21 + 0x78]
	0x03CC2D88 CBZ W24, 0x3CC2DBC
	0x03CC2D8C LDR X12, [X21 + 0x20]
	0x03CC2D90 CBZ X12, 0x3CC4BC4
	0x03CC2D94 LDR W13, [X12 + 0x18]
	0x03CC2D98 CMP W26, W13
	0x03CC2D9C B.CS 0x3CC4BC8
	0x03CC2DA0 ADD X12, X12, W26, 0x4, SXTW
	0x03CC2DA4 LDR W12, [X12 + 0x24]
	0x03CC2DA8 CMP W12, 0xA
	0x03CC2DAC B.NE 0x3CC2DBC
	0x03CC2DB0 LDR W12, [X21 + 0x328]
	0x03CC2DB4 CMP W9, W12
	0x03CC2DB8 B.NE 0x3CC46E8
	0x03CC2DBC CBZ X10, 0x3CC4BC4
	0x03CC2DC0 LDR V11, [X21 + 0xF4]
	0x03CC2DC4 ADD X0, X10, 0xB0
	0x03CC2DC8 MOV X1, X31
	0x03CC2DCC BL 0x3C9BF88
	0x03CC2DD0 LDR X8, [X21 + 0x68]
	0x03CC2DD4 CBZ X8, 0x3CC4BC4
	0x03CC2DD8 MOV W28, W0
	0x03CC2DDC ADD X0, X8, 0xB0
	0x03CC2DE0 MOV X1, X31
	0x03CC2DE4 BL 0x3C9BF98
	0x03CC2DE8 LDRB W8, [X19 + 0xBD]
	0x03CC2DEC MOV V10.16B, V0.16B
	0x03CC2DF0 LDR V0, [X31 + 0x54]
	0x03CC2DF4 FMOV S1, 1
	0x03CC2DF8 CMP W8, 0x0
	0x03CC2DFC MOVZ W8, 0x2026
	0x03CC2E00 FCSEL S12, S0, S1, EQ
	0x03CC2E04 CMP W27, W8
	0x03CC2E08 CSET W8, EQ
	0x03CC2E0C AND W8, W24, W8, 0x0
	0x03CC2E10 FMOV S13, W31
	0x03CC2E14 FMOV S8, W31
	0x03CC2E18 TBNZ X8, 0x0, 0x3CC2E50
	0x03CC2E1C LDR X20, [X31 + 0x90]
	0x03CC2E20 LDR X8, [X20]
	0x03CC2E24 CBZ X8, 0x3CC4BC4
	0x03CC2E28 ADD X0, X8, 0xB0
	0x03CC2E2C MOV X1, X31
	0x03CC2E30 BL 0x3C9BFB8
	0x03CC2E34 LDR X8, [X20]
	0x03CC2E38 CBZ X8, 0x3CC4BC4
	0x03CC2E3C ADD X0, X8, 0xB0
	0x03CC2E40 MOV X1, X31
	0x03CC2E44 MOV V8.16B, V0.16B
	0x03CC2E48 BL 0x3C9BFF8
	0x03CC2E4C MOV V13.16B, V0.16B
	0x03CC2E50 LDR X0, [X21 + 0x1588]
	0x03CC2E54 CBZ X0, 0x3CC4BC4
	0x03CC2E58 LDR V9, [X21 + 0xF0]
	0x03CC2E5C MOV X1, X31
	0x03CC2E60 BL 0x3CAC954
	0x03CC2E64 LDR X8, [X21 + 0x1A40]
	0x03CC2E68 CBZ X8, 0x3CC4BC4
	0x03CC2E6C LDR W9, [X21 + 0x324]
	0x03CC2E70 LDR W10, [X8 + 0x18]
	0x03CC2E74 CMP W9, W10
	0x03CC2E78 B.CS 0x3CC4BC8
	0x03CC2E7C LDR V1, [X31 + 0x80]
	0x03CC2E80 SCVTF S2, W28
	0x03CC2E84 SXTW X10, W9
	0x03CC2E88 MADD X10, X10, X29, X8
	0x03CC2E8C FMUL S1, S1, S11

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0x726000
	007 Move W8, [X20+836]
	008 Move X21, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4A0000
	015 Move X0, [X0+1200]
	016 Call 0x1C17CF4
	017 Move X0, 0x432000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+836], W8
	022 Move [X31+44], W31
	023 Move X20, [X19+104]
	024 Compare X20, 0
	025 JumpIfEqual {28}
	026 Compare X21, 0
	027 JumpIfNotEqual {31}
	028 Compare X21, 0
	029 JumpIfEqual {123}
	030 Move X20, [X21+64]
	031 Move W3, [X19+292]
	032 Move W4, [X19+308]
	033 Move X21, [X21+104]
	034 Add X5, X31, 44
	035 Move W0, 0x2026
	036 Move X1, X20
	037 Move W2, W31
	038 Move X6, X31
	039 Call FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	040 Move X1, X0
	041 Compare X0, 0
	042 JumpIfEqual {60}
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Add X0, X31, 0
	045 Move W2, W31
	046 Move X3, X31
	047 Move [X31], V0
	048 Move [X31+8], V0
	049 Call SpecialCharacter..ctor, X0, X1, X2
	050 Move V1, [X31]
	051 Move V0, [X31+16]
	052 Move [X19+417], V0
	053 Move [X19+416], V1
	054 Move X20, [X31+64]
	055 Move X19, [X31+72]
	056 Move X30, [X31+48]
	057 Move X21, [X31+56]
	058 Add X31, X31, 80
	059 Return 
	060 Compare X20, 0
	061 JumpIfEqual {123}
	062 Move X2, [X20+376]
	063 Compare X2, 0
	064 JumpIfEqual {78}
	065 Move W8, [X2+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W4, [X19+292]
	068 Move W5, [X19+308]
	069 Add X6, X31, 44
	070 Move W0, 0x2026
	071 Move W3, 1
	072 Move X1, X20
	073 Move X7, X31
	074 Call FontAssetUtilities.GetCharacterFromFontAssets, X0, X1, X2, X3, X4, X5, X6
	075 Move X1, X0
	076 Compare X0, 0
	077 JumpIfNotEqual {43}
	078 Compare X21, 0
	079 JumpIfEqual {123}
	080 Move X2, [X21+48]
	081 Compare X2, 0
	082 JumpIfEqual {96}
	083 Move W8, [X2+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W4, [X19+292]
	086 Move W5, [X19+308]
	087 Add X6, X31, 44
	088 Move W0, 0x2026
	089 Move W3, 1
	090 Move X1, X20
	091 Move X7, X31
	092 Call FontAssetUtilities.GetCharacterFromFontAssets, X0, X1, X2, X3, X4, X5, X6
	093 Move X1, X0
	094 Compare X0, 0
	095 JumpIfNotEqual {43}
	096 Move X8, 0x432000
	097 Move X8, [X8+1432]
	098 Move X20, [X21+32]
	099 Move X0, [X8]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X20
	105 Move X1, X31
	106 Move X2, X31
	107 Call Object.op_Inequality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {54}
	112 Move X1, [X21+32]
	113 Move W3, [X19+292]
	114 Move W4, [X19+308]
	115 Add X5, X31, 44
	116 Move W0, 0x2026
	117 Move W2, 1
	118 Move X6, X31
	119 Call FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	120 Move X1, X0
	121 Compare X0, 0
	122 JumpIfNotEqual {43}
	123 Call 0x1C17F20

Method: System.Void GetUnderlineSpecialCharacter(UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CC26D4 STRB W8, [X24 + 0x85B]
	0x03CC26D8 ADRP X8, 0x431000
	0x03CC26DC LDR X8, [X8 + 0x5A0]
	0x03CC26E0 ADRP X9, 0xFFFFFFFFFCE2B000
	0x03CC26E4 LDR X0, [X21 + 0x68]
	0x03CC26E8 LDR V2, [X9 + 0x750]
	0x03CC26EC LDR X8, [X8]
	0x03CC26F0 LDR X8, [X8 + 0xB8]
	0x03CC26F4 LDUR V0, [X8 + 0xC]
	0x03CC26F8 LDR V1, [X8 + 0x14]
	0x03CC26FC STR D2, [X21 + 0x2E0]
	0x03CC2700 STR D0, [X21 + 0x19A8]
	0x03CC2704 STR S1, [X21 + 0x19B0]
	0x03CC2708 CBZ X0, 0x3CC4BC4
	0x03CC270C ADD X8, X31, 0xA0
	0x03CC2710 MOV X1, X31
	0x03CC2714 BL 0x3C9EB14
	0x03CC2718 ADD X0, X31, 0x250
	0x03CC271C ADD X1, X31, 0xA0
	0x03CC2720 MOVZ W2, 0x60
	0x03CC2724 BL 0x3EB1AC0
	0x03CC2728 ADD X0, X31, 0x250
	0x03CC272C MOV X1, X31
	0x03CC2730 BL 0x3C9BFA8
	0x03CC2734 LDR X24, [X31 + 0x90]
	0x03CC2738 LDR X0, [X24]
	0x03CC273C CBZ X0, 0x3CC4BC4
	0x03CC2740 ADD X8, X31, 0xA0
	0x03CC2744 MOV X1, X31
	0x03CC2748 MOV V10.16B, V0.16B
	0x03CC274C STR X26, [X31 + 0x20]
	0x03CC2750 BL 0x3C9EB14
	0x03CC2754 ADD X0, X31, 0x250

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move [X31+44], W31
	005 Move X8, [X0+104]
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfEqual {11}
	009 Compare X1, 0
	010 JumpIfNotEqual {14}
	011 Compare X1, 0
	012 JumpIfEqual {40}
	013 Move X8, [X1+64]
	014 Move W3, [X19+292]
	015 Move W4, [X19+308]
	016 Add X5, X31, 44
	017 Move W0, 95
	018 Move X1, X8
	019 Move W2, W31
	020 Move X6, X31
	021 Call FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	022 Compare X0, 0
	023 JumpIfEqual {36}
	024 Move W2, [X19+120]
	025 Move X1, X0
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Add X0, X31, 0
	028 Move X3, X31
	029 Move [X31], V0
	030 Move [X31+8], V0
	031 Call SpecialCharacter..ctor, X0, X1, X2
	032 Move V1, [X31]
	033 Move V0, [X31+16]
	034 Move [X19+419], V0
	035 Move [X19+418], V1
	036 Move X30, [X31+48]
	037 Move X19, [X31+56]
	038 Add X31, X31, 64
	039 Return 
	040 Call 0x1C17F20

Method: UnityEngine.Vector2 GetPreferredValuesInternal(UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CB96E0 ADRP X0, 0x4A8000
	0x03CB96E4 LDR X0, [X0 + 0x258]
	0x03CB96E8 BL 0x1C16CF4
	0x03CB96EC ADRP X0, 0x4A8000
	0x03CB96F0 LDR X0, [X0 + 0x320]
	0x03CB96F4 BL 0x1C16CF4
	0x03CB96F8 ADRP X0, 0x4A8000
	0x03CB96FC LDR X0, [X0 + 0x4B0]
	0x03CB9700 BL 0x1C16CF4
	0x03CB9704 ADRP X0, 0x4A8000
	0x03CB9708 LDR X0, [X0 + 0x738]
	0x03CB970C BL 0x1C16CF4
	0x03CB9710 ADRP X0, 0x4A8000
	0x03CB9714 LDR X0, [X0 + 0x328]
	0x03CB9718 BL 0x1C16CF4
	0x03CB971C ADRP X0, 0x4A8000
	0x03CB9720 LDR X0, [X0 + 0x628]
	0x03CB9724 BL 0x1C16CF4
	0x03CB9728 ADRP X0, 0x43E000
	0x03CB972C LDR X0, [X0 + 0xCA0]
	0x03CB9730 BL 0x1C16CF4
	0x03CB9734 ADRP X0, 0x4A8000
	0x03CB9738 LDR X0, [X0 + 0x6C8]
	0x03CB973C BL 0x1C16CF4
	0x03CB9740 ADRP X0, 0x43A000
	0x03CB9744 LDR X0, [X0 + 0x598]
	0x03CB9748 BL 0x1C16CF4
	0x03CB974C ADRP X0, 0x4A8000
	0x03CB9750 LDR X0, [X0 + 0x748]
	0x03CB9754 BL 0x1C16CF4
	0x03CB9758 ADRP X0, 0x4A8000
	0x03CB975C LDR X0, [X0 + 0xCA0]
	0x03CB9760 BL 0x1C16CF4
	0x03CB9764 ADRP X0, 0x4A8000
	0x03CB9768 LDR X0, [X0 + 0xCA8]
	0x03CB976C BL 0x1C16CF4
	0x03CB9770 ADRP X0, 0x4A8000
	0x03CB9774 LDR X0, [X0 + 0xB68]
	0x03CB9778 BL 0x1C16CF4
	0x03CB977C ADRP X0, 0x4A8000
	0x03CB9780 LDR X0, [X0 + 0xBB8]
	0x03CB9784 BL 0x1C16CF4
	0x03CB9788 ADRP X0, 0x4A8000
	0x03CB978C LDR X0, [X0 + 0xBC8]
	0x03CB9790 BL 0x1C16CF4
	0x03CB9794 ADRP X0, 0x442000
	0x03CB9798 LDR X0, [X0 + 0x720]
	0x03CB979C BL 0x1C16CF4
	0x03CB97A0 ADRP X0, 0x4A8000
	0x03CB97A4 LDR X0, [X0 + 0xCB0]
	0x03CB97A8 BL 0x1C16CF4
	0x03CB97AC ADRP X0, 0x49F000
	0x03CB97B0 LDR X0, [X0 + 0x658]
	0x03CB97B4 BL 0x1C16CF4
	0x03CB97B8 ADRP X0, 0x4A8000
	0x03CB97BC LDR X0, [X0 + 0xCB8]
	0x03CB97C0 BL 0x1C16CF4
	0x03CB97C4 ADRP X0, 0x49F000
	0x03CB97C8 LDR X0, [X0 + 0x660]
	0x03CB97CC BL 0x1C16CF4
	0x03CB97D0 MOVZ W8, 0x1
	0x03CB97D4 STRB W8, [X21 + 0x342]
	0x03CB97D8 LDR X22, [X31 + 0x48]
	0x03CB97DC STRB W31, [X31 + 0x14C]
	0x03CB97E0 STR W31, [X31 + 0x148]
	0x03CB97E4 STP X31, X31, [X31 + 0x138]
	0x03CB97E8 STP X31, X31, [X31 + 0x128]
	0x03CB97EC CBZ X22, 0x3CBAA60
	0x03CB97F0 LDR X9, [X22 + 0x68]
	0x03CB97F4 MOVZ W8, 0x1578
	0x03CB97F8 ADD X8, X19, X8
	0x03CB97FC STR W31, [X19 + 0xE8]
	0x03CB9800 STRB W31, [X8 + 0x1]
	0x03CB9804 STRB W31, [X19 + 0x320]
	0x03CB9808 STR X9, [X31 + 0x10]
	0x03CB980C STR X8, [X31 + 0x30]
	0x03CB9810 LDR W8, [X22 + 0x60]
	0x03CB9814 ADRP X21, 0x4A8000
	0x03CB9818 ADRP X20, 0x4A8000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x72F000
	008 Move W8, [X22+837]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x43B000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+837], W8
	021 Move [X31+28], W31
	022 Compare X20, 0
	023 JumpIfEqual {95}
	024 Move X8, 0x43B000
	025 Move X8, [X8+1432]
	026 Move X22, [X20+104]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X22
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {55}
	040 Move X19, 0x721000
	041 Move W8, [X19+1935]
	042 Compare W8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, 0x443000
	045 Move X0, [X0+3848]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+1935], W8
	049 Move X8, 0x443000
	050 Move X8, [X8+3848]
	051 Move X8, [X8]
	052 Move X8, [X8+184]
	053 Move S0, [X8]
	054 Move S1, [X8+4]
	055 Move W2, [X20+168]
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Add X8, X20, 176
	058 Add X9, X21, 236
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	062 Move V3, [X8]
	063 Move X8, -52224000
	064 Move [X21+5528], D0
	065 Move S2, [X21+88]
	066 Move S0, [X21+92]
	067 Move V1, [X8+884]
	068 Move [X21+5524], W31
	069 Add X1, X31, 28
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 NotImplemented "Instruction FCSEL not yet implemented."
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 NotImplemented "Instruction FCSEL not yet implemented."
	074 Move [X31+24], S2
	075 Move [X31+32], S3
	076 Move [X31+12], S0
	077 Move X8, [X21]
	078 Move W3, [X20+120]
	079 Move [X21+5536], W31
	080 Move V0, [X31+24]
	081 Move V1, [X31+12]
	082 Move X9, [X8+376]
	083 Move X6, [X8+384]
	084 Move X0, X21
	085 Move X4, X20
	086 Move X5, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X30, [X31+16]
	093 Add X31, X31, 64
	094 Return X0
	095 Call 0x1C17F20

Method: UnityEngine.Vector2 CalculatePreferredValues(ref System.Single fontSize, UnityEngine.Vector2 marginSize, System.Boolean isTextAutoSizingEnabled, UnityEngine.TextCore.Text.TextWrappingMode textWrapMode, UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC3218 FMUL S8, S9, S0
	0x03CC321C BL 0x3C9EB14
	0x03CC3220 ADD X0, X31, 0x250
	0x03CC3224 ADD X1, X31, 0xA0
	0x03CC3228 MOVZ W2, 0x60
	0x03CC322C BL 0x3EB1AC0
	0x03CC3230 ADD X0, X31, 0x250
	0x03CC3234 MOV X1, X31
	0x03CC3238 BL 0x3C9BFF8
	0x03CC323C FMUL S0, S9, S0
	0x03CC3240 LDR X8, [X21 + 0x1A40]
	0x03CC3244 MOVZ W29, 0x188
	0x03CC3248 STR X28, [X21 + 0x1588]
	0x03CC324C CBZ X8, 0x3CC4BC4
	0x03CC3250 LDR W9, [X21 + 0x324]
	0x03CC3254 LDR W10, [X8 + 0x18]
	0x03CC3258 CMP W9, W10
	0x03CC325C B.CS 0x3CC4BC8
	0x03CC3260 SXTW X10, W9
	0x03CC3264 MADD X10, X10, X29, X8
	0x03CC3268 MOVZ W11, 0x2
	0x03CC326C STR S0, [X31 + 0x70]
	0x03CC3270 STRB W11, [X10 + 0x28]
	0x03CC3274 STR S14, [X10 + 0x16C]
	0x03CC3278 STR W20, [X21 + 0x78]
	0x03CC327C CMP W27, 0xAD
	0x03CC3280 CSET W10, EQ
	0x03CC3284 CMP W27, 0x3
	0x03CC3288 CSET W20, EQ
	0x03CC328C STR W10, [X31 + 0x74]
	0x03CC3290 ORR W10, W10, W20, 0x0
	0x03CC3294 CMP W10, 0x0
	0x03CC3298 FMOV S0, W31
	0x03CC329C FCSEL S12, S0, S14, NE
	0x03CC32A0 LDR W10, [X8 + 0x18]
	0x03CC32A4 CMP W9, W10
	0x03CC32A8 B.CS 0x3CC4BC8
	0x03CC32AC SXTW X9, W9
	0x03CC32B0 MADD X8, X9, X29, X8
	0x03CC32B4 STRH W27, [X8 + 0x20]
	0x03CC32B8 LDR X8, [X23 + 0x30]
	0x03CC32BC CBZ X8, 0x3CC4BC4
	0x03CC32C0 LDR W10, [X8 + 0x18]
	0x03CC32C4 CMP W9, W10
	0x03CC32C8 B.CS 0x3CC4BC8
	0x03CC32CC MADD X8, X9, X29, X8
	0x03CC32D0 LDR X0, [X8 + 0x38]
	0x03CC32D4 CBNZ X0, 0x3CC32E8
	0x03CC32D8 LDR X8, [X21 + 0x1588]
	0x03CC32DC CBZ X8, 0x3CC4BC4
	0x03CC32E0 LDR X0, [X8 + 0x20]
	0x03CC32E4 CBZ X0, 0x3CC4BC4
	0x03CC32E8 ADD X8, X31, 0xA0
	0x03CC32EC MOV X1, X31
	0x03CC32F0 BL 0x3C9C4A4
	0x03CC32F4 LDR V0, [X31 + 0xA]
	0x03CC32F8 LDR W8, [X31 + 0xB0]
	0x03CC32FC UBFM W9, W27, 0x10, 0x1F
	0x03CC3300 STR V0, [X31 + 0x14]
	0x03CC3304 LDR V0, [X31 + 0x14]
	0x03CC3308 STR W8, [X31 + 0x150]
	0x03CC330C MOV W8, W8
	0x03CC3310 STR W8, [X31 + 0x240]
	0x03CC3314 STR V0, [X31 + 0x23]
	0x03CC3318 CBNZ W9, 0x3CC334C
	0x03CC331C ADRP X8, 0x432000
	0x03CC3320 LDR X8, [X8 + 0x170]
	0x03CC3324 LDR X0, [X8]
	0x03CC3328 LDR W8, [X0 + 0xE0]
	0x03CC332C CBNZ W8, 0x3CC3334
	0x03CC3330 BL 0x1C16DFC
	0x03CC3334 MOV W0, W27
	0x03CC3338 MOV X1, X31
	0x03CC333C BL 0x3317FCC
	0x03CC3340 AND W8, W0, 0x1
	0x03CC3344 STR W8, [X31 + 0x8C]
	0x03CC3348 B 0x3CC3350
	0x03CC334C STR W31, [X31 + 0x8C]
	0x03CC3350 STR X31, [X31 + 0x228]
	0x03CC3354 STR X31, [X31 + 0x220]
	0x03CC3358 LDRB W8, [X19 + 0xB4]
	0x03CC335C LDR V10, [X19 + 0xC0]
	0x03CC3360 CBZ W8, 0x3CC356C
	0x03CC3364 LDR X9, [X21 + 0x1588]
	0x03CC3368 CBZ X9, 0x3CC4BC4
	0x03CC336C LDR X8, [X31 + 0x98]
	0x03CC3370 LDR W25, [X9 + 0x28]
	0x03CC3374 LDR W9, [X31 + 0x6C]
	0x03CC3378 LDR W8, [X8]
	0x03CC337C CMP W8, W9
	0x03CC3380 B.GE 0x3CC3440
	0x03CC3384 LDR X9, [X23 + 0x30]
	0x03CC3388 CBZ X9, 0x3CC4BC4
	0x03CC338C LDR W10, [X9 + 0x18]
	0x03CC3390 ADD W8, W8, 0x1
	0x03CC3394 CMP W8, W10
	0x03CC3398 B.CS 0x3CC4BC8
	0x03CC339C SMADDL X8, X8, X29, X9
	0x03CC33A0 LDR X8, [X8 + 0x30]
	0x03CC33A4 CBZ X8, 0x3CC4BC4
	0x03CC33A8 LDR X9, [X31 + 0x90]
	0x03CC33AC LDR X9, [X9]
	0x03CC33B0 CBZ X9, 0x3CC4BC4
	0x03CC33B4 LDR X9, [X9 + 0x170]
	0x03CC33B8 CBZ X9, 0x3CC4BC4
	0x03CC33BC LDR X0, [X9 + 0x40]
	0x03CC33C0 CBZ X0, 0x3CC4BC4
	0x03CC33C4 ADRP X9, 0x49E000
	0x03CC33C8 LDR W8, [X8 + 0x28]
	0x03CC33CC LDR X9, [X9 + 0xB20]
	0x03CC33D0 ADD X2, X31, 0x1D0
	0x03CC33D4 ORR W1, W25, W8, 0x10
	0x03CC33D8 LDR X3, [X9]
	0x03CC33DC BL 0x2B042E8
	0x03CC33E0 TBZ X0, 0x0, 0x3CC3438
	0x03CC33E4 ADD X8, X31, 0xA0
	0x03CC33E8 ADD X0, X31, 0x1D0
	0x03CC33EC MOV X1, X31
	0x03CC33F0 BL 0x3C9E6D0
	0x03CC33F4 LDR V0, [X31 + 0xA]
	0x03CC33F8 LDR W8, [X31 + 0xB0]
	0x03CC33FC ADD X0, X31, 0x1B0
	0x03CC3400 MOV X1, X31
	0x03CC3404 STR V0, [X31 + 0x1B]
	0x03CC3408 STR W8, [X31 + 0x1C0]
	0x03CC340C BL 0x3C9E534
	0x03CC3410 ADD X0, X31, 0x1D0
	0x03CC3414 MOV X1, X31
	0x03CC3418 STR S0, [X31 + 0x220]
	0x03CC341C STR S1, [X31 + 0x224]
	0x03CC3420 STR S2, [X31 + 0x228]
	0x03CC3424 STR S3, [X31 + 0x22C]
	0x03CC3428 BL 0x3C9E6F8
	0x03CC342C ANDS W31, W0, 0x100
	0x03CC3430 FMOV S0, W31
	0x03CC3434 FCSEL S10, S10, S0, EQ
	0x03CC3438 LDR X8, [X31 + 0x98]
	0x03CC343C LDR W8, [X8]
	0x03CC3440 SUBS W8, W8, 0x1
	0x03CC3444 B.LT 0x3CC3540
	0x03CC3448 LDR X9, [X23 + 0x30]
	0x03CC344C CBZ X9, 0x3CC4BC4
	0x03CC3450 LDR W10, [X9 + 0x18]
	0x03CC3454 CMP W8, W10
	0x03CC3458 B.CS 0x3CC4BC8
	0x03CC345C UMADDL X8, X8, X29, X9
	0x03CC3460 LDR X8, [X8 + 0x30]
	0x03CC3464 CBZ X8, 0x3CC4BC4
	0x03CC3468 LDR X9, [X31 + 0x90]
	0x03CC346C LDR X9, [X9]
	0x03CC3470 CBZ X9, 0x3CC4BC4
	0x03CC3474 LDR X9, [X9 + 0x170]
	0x03CC3478 CBZ X9, 0x3CC4BC4
	0x03CC347C LDR X0, [X9 + 0x40]
	0x03CC3480 CBZ X0, 0x3CC4BC4
	0x03CC3484 ADRP X9, 0x49E000
	0x03CC3488 LDR W8, [X8 + 0x28]
	0x03CC348C LDR X9, [X9 + 0xB20]
	0x03CC3490 ADD X2, X31, 0x1D0
	0x03CC3494 ORR W1, W8, W25, 0x10
	0x03CC3498 LDR X3, [X9]
	0x03CC349C BL 0x2B042E8
	0x03CC34A0 TBZ X0, 0x0, 0x3CC3540
	0x03CC34A4 MOV V9.16B, V10.16B
	0x03CC34A8 LDR V10, [X31 + 0x220]
	0x03CC34AC LDR V11, [X31 + 0x224]
	0x03CC34B0 MOV V15.16B, V12.16B
	0x03CC34B4 LDR V12, [X31 + 0x228]
	0x03CC34B8 LDR V13, [X31 + 0x22C]
	0x03CC34BC ADD X8, X31, 0xA0
	0x03CC34C0 ADD X0, X31, 0x1D0
	0x03CC34C4 MOV X1, X31
	0x03CC34C8 BL 0x3C9E6E4
	0x03CC34CC LDR V0, [X31 + 0xA]
	0x03CC34D0 LDR W8, [X31 + 0xB0]
	0x03CC34D4 ADD X0, X31, 0x1B0
	0x03CC34D8 MOV X1, X31
	0x03CC34DC STR V0, [X31 + 0x1B]
	0x03CC34E0 STR W8, [X31 + 0x1C0]
	0x03CC34E4 BL 0x3C9E534
	0x03CC34E8 MOV V4.16B, V0.16B
	0x03CC34EC MOV V5.16B, V1.16B
	0x03CC34F0 MOV V6.16B, V2.16B
	0x03CC34F4 MOV V7.16B, V3.16B
	0x03CC34F8 MOV V0.16B, V10.16B
	0x03CC34FC MOV V1.16B, V11.16B
	0x03CC3500 MOV V2.16B, V12.16B
	0x03CC3504 MOV V3.16B, V13.16B
	0x03CC3508 MOV X0, X31
	0x03CC350C MOV V10.16B, V9.16B
	0x03CC3510 MOV V12.16B, V15.16B
	0x03CC3514 BL 0x3C9E394
	0x03CC3518 ADD X0, X31, 0x1D0
	0x03CC351C MOV X1, X31
	0x03CC3520 STR S0, [X31 + 0x220]
	0x03CC3524 STR S1, [X31 + 0x224]
	0x03CC3528 STR S2, [X31 + 0x228]
	0x03CC352C STR S3, [X31 + 0x22C]
	0x03CC3530 BL 0x3C9E6F8
	0x03CC3534 ANDS W31, W0, 0x100
	0x03CC3538 FMOV S0, W31
	0x03CC353C FCSEL S10, S9, S0, EQ
	0x03CC3540 LDR X24, [X21 + 0x1A40]
	0x03CC3544 CBZ X24, 0x3CC4BC4
	0x03CC3548 LDRSW X25, [X21 + 0x324]
	0x03CC354C ADD X0, X31, 0x220
	0x03CC3550 MOV X1, X31
	0x03CC3554 BL 0x3C9E384
	0x03CC3558 LDR W8, [X24 + 0x18]
	0x03CC355C CMP W25, W8
	0x03CC3560 B.CS 0x3CC4BC8
	0x03CC3564 MADD X8, X25, X29, X24
	0x03CC3568 STR S0, [X8 + 0x160]
	0x03CC356C ADRP X8, 0x49E000
	0x03CC3570 LDR X8, [X8 + 0xB48]
	0x03CC3574 LDR X0, [X8]
	0x03CC3578 LDR W8, [X0 + 0xE0]
	0x03CC357C CBNZ W8, 0x3CC3584
	0x03CC3580 BL 0x1C16DFC
	0x03CC3584 MOV W0, W27
	0x03CC3588 MOV X1, X31
	0x03CC358C BL 0x3CC92C4
	0x03CC3590 LDR X8, [X31 + 0x98]
	0x03CC3594 MOV W28, W0
	0x03CC3598 LDR W24, [X8]
	0x03CC359C TBZ X0, 0x0, 0x3CC35A8
	0x03CC35A0 STR W24, [X21 + 0x19C4]
	0x03CC35A4 B 0x3CC3A50
	0x03CC35A8 SUBS W9, W24, 0x1
	0x03CC35AC CSET W8, LT
	0x03CC35B0 ORR W8, W28, W8, 0x0
	0x03CC35B4 TBNZ X8, 0x0, 0x3CC3A50
	0x03CC35B8 LDR W8, [X21 + 0x19C4]
	0x03CC35BC MOVZ W10, 0x80000000
	0x03CC35C0 CMP W8, W10
	0x03CC35C4 B.EQ 0x3CC3718
	0x03CC35C8 CMP W8, W9
	0x03CC35CC B.NE 0x3CC3718
	0x03CC35D0 LDR X9, [X23 + 0x30]
	0x03CC35D4 CBZ X9, 0x3CC4BC4
	0x03CC35D8 LDR W10, [X9 + 0x18]
	0x03CC35DC SXTW X8, W8
	0x03CC35E0 CMP W8, W10
	0x03CC35E4 B.CS 0x3CC4BC8
	0x03CC35E8 MADD X8, X8, X29, X9
	0x03CC35EC LDR X0, [X8 + 0x30]
	0x03CC35F0 CBZ X0, 0x3CC4BC4
	0x03CC35F4 MOV X1, X31
	0x03CC35F8 BL 0x3CAC94C
	0x03CC35FC CBZ X0, 0x3CC4BC4
	0x03CC3600 MOV X1, X31
	0x03CC3604 BL 0x3C9C494
	0x03CC3608 LDR X8, [X21 + 0x1588]
	0x03CC360C CBZ X8, 0x3CC4BC4
	0x03CC3610 MOV W29, W0
	0x03CC3614 MOV X0, X8
	0x03CC3618 MOV X1, X31
	0x03CC361C BL 0x3CA0098
	0x03CC3620 LDR X8, [X31 + 0x90]
	0x03CC3624 LDR X8, [X8]
	0x03CC3628 CBZ X8, 0x3CC4BC4
	0x03CC362C MOV W25, W0
	0x03CC3630 MOV X0, X8
	0x03CC3634 MOV X1, X31
	0x03CC3638 BL 0x3C9F0F4
	0x03CC363C CBZ X0, 0x3CC4BC4
	0x03CC3640 LDR X0, [X0 + 0x48]
	0x03CC3644 CBZ X0, 0x3CC4BC4
	0x03CC3648 ADRP X8, 0x49E000
	0x03CC364C LDR X8, [X8 + 0xB30]
	0x03CC3650 ORR W1, W29, W25, 0x10
	0x03CC3654 ADD X2, X31, 0x198
	0x03CC3658 LDR X3, [X8]
	0x03CC365C BL 0x2B0A5E0
	0x03CC3660 MOVZ W29, 0x188
	0x03CC3664 TBZ X0, 0x0, 0x3CC3A50
	0x03CC3668 LDR X8, [X21 + 0x1A40]
	0x03CC366C CBZ X8, 0x3CC4BC4
	0x03CC3670 LDRSW X9, [X21 + 0x19C4]
	0x03CC3674 LDR W10, [X8 + 0x18]
	0x03CC3678 CMP W9, W10
	0x03CC367C B.CS 0x3CC4BC8
	0x03CC3680 MADD X8, X9, X29, X8
	0x03CC3684 LDR V0, [X8 + 0x148]
	0x03CC3688 LDR V1, [X21 + 0x2F4]
	0x03CC368C ADD X0, X31, 0x198
	0x03CC3690 MOV X1, X31
	0x03CC3694 FSUB S0, S0, S1
	0x03CC3698 FDIV S9, S0, S12
	0x03CC369C BL 0x3C9E8B8
	0x03CC36A0 ADD X0, X31, 0x190
	0x03CC36A4 MOV X1, X31
	0x03CC36A8 STR S0, [X31 + 0x190]
	0x03CC36AC STR S1, [X31 + 0x194]
	0x03CC36B0 BL 0x3C9E890
	0x03CC36B4 ADD X0, X31, 0x198
	0x03CC36B8 MOV X1, X31
	0x03CC36BC MOV V10.16B, V0.16B
	0x03CC36C0 BL 0x3C9E8C8
	0x03CC36C4 ADD X0, X31, 0x188
	0x03CC36C8 MOV X1, X31
	0x03CC36CC STR S0, [X31 + 0x188]
	0x03CC36D0 STR S1, [X31 + 0x18C]
	0x03CC36D4 BL 0x3C9E8A0
	0x03CC36D8 FADD S1, S9, S10
	0x03CC36DC FSUB S0, S1, S0
	0x03CC36E0 ADD X0, X31, 0x220
	0x03CC36E4 MOV X1, X31
	0x03CC36E8 BL 0x3C9E36C
	0x03CC36EC ADD X0, X31, 0x198
	0x03CC36F0 MOV X1, X31
	0x03CC36F4 BL 0x3C9E8B8
	0x03CC36F8 ADD X0, X31, 0x190
	0x03CC36FC MOV X1, X31
	0x03CC3700 STR S0, [X31 + 0x190]
	0x03CC3704 STR S1, [X31 + 0x194]
	0x03CC3708 BL 0x3C9E898
	0x03CC370C MOV V10.16B, V0.16B
	0x03CC3710 ADD X0, X31, 0x198
	0x03CC3714 B 0x3CC3A20
	0x03CC3718 SUBS W24, W24, 0x1
	0x03CC371C B.LT 0x3CC38D0
	0x03CC3720 LDR W8, [X21 + 0x19C4]
	0x03CC3724 CMP W24, W8
	0x03CC3728 B.EQ 0x3CC38D0
	0x03CC372C LDR X8, [X23 + 0x30]
	0x03CC3730 CBZ X8, 0x3CC4BC4
	0x03CC3734 LDR W9, [X8 + 0x18]
	0x03CC3738 CMP W24, W9
	0x03CC373C B.CS 0x3CC4BC8
	0x03CC3740 UMADDL X8, X24, X29, X8
	0x03CC3744 LDR X0, [X8 + 0x30]
	0x03CC3748 CBZ X0, 0x3CC4BC4
	0x03CC374C MOV X1, X31
	0x03CC3750 BL 0x3CAC94C
	0x03CC3754 CBZ X0, 0x3CC4BC4
	0x03CC3758 MOV X1, X31
	0x03CC375C BL 0x3C9C494
	0x03CC3760 LDR X8, [X21 + 0x1588]
	0x03CC3764 CBZ X8, 0x3CC4BC4
	0x03CC3768 MOV W29, W0
	0x03CC376C MOV X0, X8
	0x03CC3770 MOV X1, X31
	0x03CC3774 BL 0x3CA0098
	0x03CC3778 LDR X8, [X31 + 0x90]
	0x03CC377C LDR X8, [X8]
	0x03CC3780 CBZ X8, 0x3CC4BC4
	0x03CC3784 MOV W25, W0
	0x03CC3788 MOV X0, X8
	0x03CC378C MOV X1, X31
	0x03CC3790 BL 0x3C9F0F4
	0x03CC3794 CBZ X0, 0x3CC4BC4
	0x03CC3798 LDR X0, [X0 + 0x50]
	0x03CC379C CBZ X0, 0x3CC4BC4
	0x03CC37A0 ADRP X8, 0x49E000
	0x03CC37A4 LDR X8, [X8 + 0xB28]
	0x03CC37A8 ORR W1, W29, W25, 0x10
	0x03CC37AC ADD X2, X31, 0x170
	0x03CC37B0 LDR X3, [X8]
	0x03CC37B4 BL 0x2B0D944
	0x03CC37B8 MOVZ W29, 0x188
	0x03CC37BC TBZ X0, 0x0, 0x3CC3718
	0x03CC37C0 LDR X8, [X23 + 0x30]
	0x03CC37C4 CBZ X8, 0x3CC4BC4
	0x03CC37C8 LDR W9, [X8 + 0x18]
	0x03CC37CC CMP W24, W9
	0x03CC37D0 B.CS 0x3CC4BC8
	0x03CC37D4 LDR X9, [X21 + 0x1A40]
	0x03CC37D8 CBZ X9, 0x3CC4BC4
	0x03CC37DC LDR W10, [X9 + 0x18]
	0x03CC37E0 CMP W24, W10
	0x03CC37E4 B.CS 0x3CC4BC8
	0x03CC37E8 MOV W10, W24
	0x03CC37EC LDR V1, [X21 + 0x2E0]
	0x03CC37F0 LDR V2, [X21 + 0x180]
	0x03CC37F4 NOP
	0x03CC37F8 MADD X8, X10, X29, X8
	0x03CC37FC MADD X9, X10, X29, X9
	0x03CC3800 LDR V0, [X21 + 0x2F4]
	0x03CC3804 LDR V3, [X8 + 0x148]
	0x03CC3808 LDR V4, [X9 + 0x150]
	0x03CC380C FMOV S5, W31
	0x03CC3810 FSUB S1, S5, S1
	0x03CC3814 FADD S1, S1, S2
	0x03CC3818 FSUB S0, S3, S0
	0x03CC381C FSUB S1, S4, S1
	0x03CC3820 ADD X0, X31, 0x170
	0x03CC3824 MOV X1, X31
	0x03CC3828 FDIV S11, S0, S12
	0x03CC382C FDIV S9, S1, S12
	0x03CC3830 BL 0x3C9E8D8
	0x03CC3834 ADD X0, X31, 0x190
	0x03CC3838 MOV X1, X31
	0x03CC383C STR S0, [X31 + 0x190]
	0x03CC3840 STR S1, [X31 + 0x194]
	0x03CC3844 BL 0x3C9E890
	0x03CC3848 ADD X0, X31, 0x170
	0x03CC384C MOV X1, X31
	0x03CC3850 MOV V10.16B, V0.16B
	0x03CC3854 BL 0x3C9E8E8
	0x03CC3858 ADD X0, X31, 0x188
	0x03CC385C MOV X1, X31
	0x03CC3860 STR S0, [X31 + 0x188]
	0x03CC3864 STR S1, [X31 + 0x18C]
	0x03CC3868 BL 0x3C9E8A0
	0x03CC386C FADD S1, S11, S10
	0x03CC3870 FSUB S0, S1, S0
	0x03CC3874 ADD X0, X31, 0x220
	0x03CC3878 MOV X1, X31
	0x03CC387C BL 0x3C9E36C
	0x03CC3880 ADD X0, X31, 0x170
	0x03CC3884 MOV X1, X31
	0x03CC3888 BL 0x3C9E8D8
	0x03CC388C ADD X0, X31, 0x190
	0x03CC3890 MOV X1, X31
	0x03CC3894 STR S0, [X31 + 0x190]
	0x03CC3898 STR S1, [X31 + 0x194]
	0x03CC389C BL 0x3C9E898
	0x03CC38A0 ADD X0, X31, 0x170
	0x03CC38A4 MOV X1, X31
	0x03CC38A8 MOV V10.16B, V0.16B
	0x03CC38AC BL 0x3C9E8E8
	0x03CC38B0 ADD X0, X31, 0x188
	0x03CC38B4 MOV X1, X31
	0x03CC38B8 STR S0, [X31 + 0x188]
	0x03CC38BC STR S1, [X31 + 0x18C]
	0x03CC38C0 BL 0x3C9E8A8
	0x03CC38C4 FADD S1, S9, S10
	0x03CC38C8 FSUB S0, S1, S0
	0x03CC38CC B 0x3CC3A40
	0x03CC38D0 LDRSW X8, [X21 + 0x19C4]
	0x03CC38D4 MOVZ W9, 0x80000000
	0x03CC38D8 CMP W8, W9
	0x03CC38DC B.EQ 0x3CC3A50
	0x03CC38E0 LDR X9, [X23 + 0x30]
	0x03CC38E4 CBZ X9, 0x3CC4BC4
	0x03CC38E8 LDR W10, [X9 + 0x18]
	0x03CC38EC CMP W8, W10
	0x03CC38F0 B.CS 0x3CC4BC8
	0x03CC38F4 MADD X8, X8, X29, X9
	0x03CC38F8 LDR X0, [X8 + 0x30]
	0x03CC38FC CBZ X0, 0x3CC4BC4
	0x03CC3900 MOV X1, X31
	0x03CC3904 BL 0x3CAC94C
	0x03CC3908 CBZ X0, 0x3CC4BC4
	0x03CC390C MOV X1, X31
	0x03CC3910 BL 0x3C9C494
	0x03CC3914 LDR X8, [X21 + 0x1588]
	0x03CC3918 CBZ X8, 0x3CC4BC4
	0x03CC391C MOV W29, W0
	0x03CC3920 MOV X0, X8
	0x03CC3924 MOV X1, X31
	0x03CC3928 BL 0x3CA0098
	0x03CC392C LDR X8, [X31 + 0x90]
	0x03CC3930 LDR X8, [X8]
	0x03CC3934 CBZ X8, 0x3CC4BC4
	0x03CC3938 MOV W25, W0
	0x03CC393C MOV X0, X8
	0x03CC3940 MOV X1, X31
	0x03CC3944 BL 0x3C9F0F4
	0x03CC3948 CBZ X0, 0x3CC4BC4
	0x03CC394C LDR X0, [X0 + 0x48]
	0x03CC3950 CBZ X0, 0x3CC4BC4
	0x03CC3954 ADRP X8, 0x49E000
	0x03CC3958 LDR X8, [X8 + 0xB30]
	0x03CC395C ORR W1, W29, W25, 0x10
	0x03CC3960 ADD X2, X31, 0x158
	0x03CC3964 LDR X3, [X8]
	0x03CC3968 BL 0x2B0A5E0
	0x03CC396C MOVZ W29, 0x188
	0x03CC3970 TBZ X0, 0x0, 0x3CC3A50
	0x03CC3974 LDR X8, [X21 + 0x1A40]
	0x03CC3978 CBZ X8, 0x3CC4BC4
	0x03CC397C LDRSW X9, [X21 + 0x19C4]
	0x03CC3980 LDR W10, [X8 + 0x18]
	0x03CC3984 CMP W9, W10
	0x03CC3988 B.CS 0x3CC4BC8
	0x03CC398C MADD X8, X9, X29, X8
	0x03CC3990 LDR V0, [X8 + 0x148]
	0x03CC3994 LDR V1, [X21 + 0x2F4]
	0x03CC3998 ADD X0, X31, 0x158
	0x03CC399C MOV X1, X31
	0x03CC39A0 FSUB S0, S0, S1
	0x03CC39A4 FDIV S9, S0, S12
	0x03CC39A8 BL 0x3C9E8B8
	0x03CC39AC ADD X0, X31, 0x190
	0x03CC39B0 MOV X1, X31
	0x03CC39B4 STR S0, [X31 + 0x190]
	0x03CC39B8 STR S1, [X31 + 0x194]
	0x03CC39BC BL 0x3C9E890
	0x03CC39C0 ADD X0, X31, 0x158
	0x03CC39C4 MOV X1, X31
	0x03CC39C8 MOV V10.16B, V0.16B
	0x03CC39CC BL 0x3C9E8C8
	0x03CC39D0 ADD X0, X31, 0x188
	0x03CC39D4 MOV X1, X31
	0x03CC39D8 STR S0, [X31 + 0x188]
	0x03CC39DC STR S1, [X31 + 0x18C]
	0x03CC39E0 BL 0x3C9E8A0
	0x03CC39E4 FADD S1, S9, S10
	0x03CC39E8 FSUB S0, S1, S0
	0x03CC39EC ADD X0, X31, 0x220
	0x03CC39F0 MOV X1, X31
	0x03CC39F4 BL 0x3C9E36C
	0x03CC39F8 ADD X0, X31, 0x158
	0x03CC39FC MOV X1, X31
	0x03CC3A00 BL 0x3C9E8B8
	0x03CC3A04 ADD X0, X31, 0x190
	0x03CC3A08 MOV X1, X31
	0x03CC3A0C STR S0, [X31 + 0x190]
	0x03CC3A10 STR S1, [X31 + 0x194]
	0x03CC3A14 BL 0x3C9E898
	0x03CC3A18 MOV V10.16B, V0.16B
	0x03CC3A1C ADD X0, X31, 0x158
	0x03CC3A20 MOV X1, X31
	0x03CC3A24 BL 0x3C9E8C8
	0x03CC3A28 ADD X0, X31, 0x188
	0x03CC3A2C MOV X1, X31
	0x03CC3A30 STR S0, [X31 + 0x188]
	0x03CC3A34 STR S1, [X31 + 0x18C]
	0x03CC3A38 BL 0x3C9E8A8
	0x03CC3A3C FSUB S0, S10, S0
	0x03CC3A40 ADD X0, X31, 0x220
	0x03CC3A44 MOV X1, X31
	0x03CC3A48 BL 0x3C9E37C
	0x03CC3A4C FMOV S10, W31
	0x03CC3A50 ADD X0, X31, 0x220
	0x03CC3A54 MOV X1, X31
	0x03CC3A58 STR S12, [X31 + 0x88]
	0x03CC3A5C BL 0x3C9E374
	0x03CC3A60 ADD X0, X31, 0x220
	0x03CC3A64 MOV X1, X31
	0x03CC3A68 MOV V11.16B, V0.16B
	0x03CC3A6C BL 0x3C9E374
	0x03CC3A70 LDR V9, [X21 + 0x2F0]
	0x03CC3A74 MOV V12.16B, V0.16B
	0x03CC3A78 FMOV S0, W31
	0x03CC3A7C FMOV S15, W31
	0x03CC3A80 FCMP S9, 0x0
	0x03CC3A84 STR S0, [X31 + 0x68]
	0x03CC3A88 B.EQ 0x3CC3B40
	0x03CC3A8C LDR X0, [X21 + 0x1588]
	0x03CC3A90 CBZ X0, 0x3CC4BC4
	0x03CC3A94 MOV X1, X31
	0x03CC3A98 BL 0x3CAC94C
	0x03CC3A9C CBZ X0, 0x3CC4BC4
	0x03CC3AA0 ADD X8, X31, 0xA0
	0x03CC3AA4 MOV X1, X31
	0x03CC3AA8 BL 0x3C9C4A4
	0x03CC3AAC LDR V0, [X31 + 0xA]
	0x03CC3AB0 LDR W8, [X31 + 0xB0]
	0x03CC3AB4 ADD X0, X31, 0x200
	0x03CC3AB8 MOV X1, X31
	0x03CC3ABC STR V0, [X31 + 0x20]
	0x03CC3AC0 STR W8, [X31 + 0x210]
	0x03CC3AC4 BL 0x3C9C2CC
	0x03CC3AC8 LDR X0, [X21 + 0x1588]
	0x03CC3ACC CBZ X0, 0x3CC4BC4
	0x03CC3AD0 MOV X1, X31
	0x03CC3AD4 MOV V13.16B, V0.16B
	0x03CC3AD8 BL 0x3CAC94C
	0x03CC3ADC CBZ X0, 0x3CC4BC4
	0x03CC3AE0 ADD X8, X31, 0xA0
	0x03CC3AE4 MOV X1, X31
	0x03CC3AE8 BL 0x3C9C4A4
	0x03CC3AEC LDR V0, [X31 + 0xA]
	0x03CC3AF0 LDR W8, [X31 + 0xB0]
	0x03CC3AF4 ADD X0, X31, 0x200
	0x03CC3AF8 MOV X1, X31
	0x03CC3AFC STR V0, [X31 + 0x20]
	0x03CC3B00 STR W8, [X31 + 0x210]
	0x03CC3B04 BL 0x3C9C2DC
	0x03CC3B08 FMOV S3, 0.5
	0x03CC3B0C FMUL S2, S9, S3
	0x03CC3B10 FMUL S3, S13, S3
	0x03CC3B14 FADD S0, S3, S0
	0x03CC3B18 LDR V3, [X31 + 0x88]
	0x03CC3B1C LDR V1, [X21 + 0x1594]
	0x03CC3B20 FMUL S0, S3, S0
	0x03CC3B24 LDR V3, [X21 + 0x2F4]
	0x03CC3B28 FSUB S0, S2, S0
	0x03CC3B2C FMOV S2, 1
	0x03CC3B30 FSUB S1, S2, S1
	0x03CC3B34 FMUL S15, S1, S0
	0x03CC3B38 FADD S0, S3, S15
	0x03CC3B3C STR S0, [X21 + 0x2F4]
	0x03CC3B40 LDR W8, [X31 + 0x84]
	0x03CC3B44 CBNZ W8, 0x3CC3B74
	0x03CC3B48 LDRB W8, [X22]
	0x03CC3B4C CMP W8, 0x1
	0x03CC3B50 B.NE 0x3CC3B74
	0x03CC3B54 LDRB W8, [X21 + 0x124]
	0x03CC3B58 TBZ X8, 0x0, 0x3CC3B74
	0x03CC3B5C LDR X8, [X31 + 0x90]
	0x03CC3B60 LDR X0, [X8]
	0x03CC3B64 CBZ X0, 0x3CC4BC4
	0x03CC3B68 MOV X1, X31
	0x03CC3B6C BL 0x3C9F154
	0x03CC3B70 STR S0, [X31 + 0x68]
	0x03CC3B74 LDR X24, [X21 + 0x1A40]
	0x03CC3B78 CBZ X24, 0x3CC4BC4
	0x03CC3B7C LDRSW X25, [X21 + 0x324]
	0x03CC3B80 LDR V9, [X21 + 0x2F4]
	0x03CC3B84 ADD X0, X31, 0x220
	0x03CC3B88 MOV X1, X31
	0x03CC3B8C BL 0x3C9E364
	0x03CC3B90 LDR W8, [X24 + 0x18]
	0x03CC3B94 CMP W25, W8
	0x03CC3B98 B.CS 0x3CC4BC8
	0x03CC3B9C LDR V1, [X31 + 0x88]
	0x03CC3BA0 NOP
	0x03CC3BA4 MADD X8, X25, X29, X24
	0x03CC3BA8 FMUL S0, S1, S0
	0x03CC3BAC FADD S0, S9, S0
	0x03CC3BB0 STR S0, [X8 + 0x148]
	0x03CC3BB4 LDR X24, [X21 + 0x1A40]
	0x03CC3BB8 CBZ X24, 0x3CC4BC4
	0x03CC3BBC MOV V13.16B, V10.16B
	0x03CC3BC0 LDRSW X25, [X21 + 0x324]
	0x03CC3BC4 LDR V10, [X21 + 0x2E0]
	0x03CC3BC8 LDR V9, [X21 + 0x180]
	0x03CC3BCC ADD X0, X31, 0x220
	0x03CC3BD0 MOV X1, X31
	0x03CC3BD4 BL 0x3C9E374
	0x03CC3BD8 LDR W8, [X24 + 0x18]
	0x03CC3BDC CMP W25, W8
	0x03CC3BE0 B.CS 0x3CC4BC8
	0x03CC3BE4 LDR V2, [X31 + 0x88]
	0x03CC3BE8 FMOV S1, W31
	0x03CC3BEC FSUB S1, S1, S10
	0x03CC3BF0 FADD S1, S1, S9
	0x03CC3BF4 FMUL S0, S2, S0
	0x03CC3BF8 FADD S0, S1, S0
	0x03CC3BFC MADD X8, X25, X29, X24
	0x03CC3C00 STR S0, [X8 + 0x150]
	0x03CC3C04 LDRB W8, [X22]
	0x03CC3C08 LDR V1, [X31 + 0x70]
	0x03CC3C0C FADD S0, S8, S11
	0x03CC3C10 STR W20, [X31 + 0x84]
	0x03CC3C14 CMP W8, 0x1
	0x03CC3C18 FADD S1, S1, S12
	0x03CC3C1C MOV V12.16B, V2.16B
	0x03CC3C20 FMUL S0, S2, S0
	0x03CC3C24 MOVZ W20, 0x188
	0x03CC3C28 B.NE 0x3CC3C40
	0x03CC3C2C LDR V2, [X31 + 0x80]
	0x03CC3C30 FMUL S1, S12, S1
	0x03CC3C34 FDIV S0, S0, S2
	0x03CC3C38 FDIV S1, S1, S2
	0x03CC3C3C B 0x3CC3C44
	0x03CC3C40 FMUL S1, S12, S1
	0x03CC3C44 LDRSW X25, [X21 + 0x324]
	0x03CC3C48 LDR W29, [X21 + 0x328]
	0x03CC3C4C LDR W9, [X31 + 0x8C]
	0x03CC3C50 LDR V4, [X21 + 0x180]
	0x03CC3C54 CMP W25, W29
	0x03CC3C58 CSET W8, NE
	0x03CC3C5C CMP W9, 0x0
	0x03CC3C60 CSET W9, NE
	0x03CC3C64 AND W8, W9, W8, 0x0
	0x03CC3C68 FADD S8, S4, S0
	0x03CC3C6C TBZ X8, 0x0, 0x3CC3CC4
	0x03CC3C70 LDR X9, [X21 + 0x1A40]
	0x03CC3C74 CBZ X9, 0x3CC4BC4
	0x03CC3C78 LDR W10, [X9 + 0x18]
	0x03CC3C7C CMP W25, W10
	0x03CC3C80 B.CS 0x3CC4BC8
	0x03CC3C84 LDR V1, [X21 + 0x338]
	0x03CC3C88 NOP
	0x03CC3C8C MADD X9, X25, X20, X9
	0x03CC3C90 STR S1, [X9 + 0x158]
	0x03CC3C94 LDR V2, [X21 + 0x33C]
	0x03CC3C98 STR S2, [X9 + 0x15C]
	0x03CC3C9C LDR V0, [X21 + 0x2E0]
	0x03CC3CA0 FSUB S3, S1, S0
	0x03CC3CA4 FSUB S2, S2, S0
	0x03CC3CA8 STR S3, [X9 + 0x14C]
	0x03CC3CAC STR S2, [X9 + 0x154]
	0x03CC3CB0 LDR W9, [X21 + 0x340]
	0x03CC3CB4 STR S2, [X21 + 0x378]
	0x03CC3CB8 CBNZ W9, 0x3CC3D5C
	0x03CC3CBC TBZ X8, 0x0, 0x3CC3D70
	0x03CC3CC0 B 0x3CC3DA8
	0x03CC3CC4 FADD S2, S4, S1
	0x03CC3CC8 FCMP S4, 0x0
	0x03CC3CCC MOV V0.16B, V2.16B
	0x03CC3CD0 MOV V3.16B, V8.16B
	0x03CC3CD4 B.EQ 0x3CC3CFC
	0x03CC3CD8 LDR V0, [X21 + 0xF0]
	0x03CC3CDC FSUB S1, S8, S4
	0x03CC3CE0 FSUB S3, S2, S4
	0x03CC3CE4 FDIV S1, S1, S0
	0x03CC3CE8 FDIV S0, S3, S0
	0x03CC3CEC FCMP S1, S8
	0x03CC3CF0 FCSEL S3, S1, S8, GT
	0x03CC3CF4 FCMP S0, S2
	0x03CC3CF8 FCSEL S0, S0, S2, MI
	0x03CC3CFC LDR V1, [X21 + 0x338]
	0x03CC3D00 LDR V4, [X21 + 0x33C]
	0x03CC3D04 LDR X9, [X21 + 0x1A40]
	0x03CC3D08 FCMP S3, S1
	0x03CC3D0C FCSEL S1, S3, S1, GT
	0x03CC3D10 FCMP S0, S4
	0x03CC3D14 FCSEL S4, S0, S4, MI
	0x03CC3D18 STR S1, [X21 + 0x338]
	0x03CC3D1C STR S4, [X21 + 0x33C]
	0x03CC3D20 CBZ X9, 0x3CC4BC4
	0x03CC3D24 LDR W10, [X9 + 0x18]
	0x03CC3D28 CMP W25, W10
	0x03CC3D2C B.CS 0x3CC4BC8
	0x03CC3D30 MADD X9, X25, X20, X9
	0x03CC3D34 STR S3, [X9 + 0x158]
	0x03CC3D38 STR S0, [X9 + 0x15C]
	0x03CC3D3C LDR V0, [X21 + 0x2E0]
	0x03CC3D40 FSUB S3, S8, S0
	0x03CC3D44 FSUB S2, S2, S0
	0x03CC3D48 STR S3, [X9 + 0x14C]
	0x03CC3D4C STR S2, [X9 + 0x154]
	0x03CC3D50 LDR W9, [X21 + 0x340]
	0x03CC3D54 STR S2, [X21 + 0x378]
	0x03CC3D58 CBZ W9, 0x3CC3D70
	0x03CC3D5C LDRB W9, [X21 + 0x37C]
	0x03CC3D60 CMP W9, 0x0
	0x03CC3D64 CSET W9, EQ
	0x03CC3D68 ORR W8, W8, W9, 0x0
	0x03CC3D6C TBNZ X8, 0x0, 0x3CC3DA8
	0x03CC3D70 LDR X8, [X21 + 0x68]
	0x03CC3D74 STR S1, [X21 + 0x374]
	0x03CC3D78 CBZ X8, 0x3CC4BC4
	0x03CC3D7C LDR V9, [X21 + 0x370]
	0x03CC3D80 ADD X0, X8, 0xB0
	0x03CC3D84 MOV X1, X31
	0x03CC3D88 BL 0x3C9BFC8
	0x03CC3D8C LDR V1, [X31 + 0x80]
	0x03CC3D90 FMUL S0, S12, S0
	0x03CC3D94 FDIV S1, S0, S1
	0x03CC3D98 LDR V0, [X21 + 0x2E0]
	0x03CC3D9C FCMP S9, S1
	0x03CC3DA0 FCSEL S1, S9, S1, GT
	0x03CC3DA4 STR S1, [X21 + 0x370]
	0x03CC3DA8 FCMP S0, 0x0
	0x03CC3DAC B.NE 0x3CC3DD8
	0x03CC3DB0 LDR W8, [X31 + 0x8C]
	0x03CC3DB4 CBZ W8, 0x3CC3DC8
	0x03CC3DB8 LDR W8, [X21 + 0x324]
	0x03CC3DBC LDR W9, [X21 + 0x328]
	0x03CC3DC0 CMP W8, W9
	0x03CC3DC4 B.NE 0x3CC3DD8
	0x03CC3DC8 LDR V1, [X21 + 0x19C8]
	0x03CC3DCC FCMP S1, S8
	0x03CC3DD0 FCSEL S1, S1, S8, GT
	0x03CC3DD4 STR S1, [X21 + 0x19C8]
	0x03CC3DD8 LDR W24, [X21 + 0x158]
	0x03CC3DDC CMP W27, 0x9
	0x03CC3DE0 B.EQ 0x3CC3E48
	0x03CC3DE4 MOVZ W8, 0x200B
	0x03CC3DE8 CMP W27, W8
	0x03CC3DEC B.EQ 0x3CC3E48
	0x03CC3DF0 LDR W8, [X31 + 0x38]
	0x03CC3DF4 CMP W8, 0x2
	0x03CC3DF8 B.NE 0x3CC3E04
	0x03CC3DFC LDR W8, [X31 + 0x8C]
	0x03CC3E00 CBNZ W8, 0x3CC3E48
	0x03CC3E04 LDR W8, [X31 + 0x8C]
	0x03CC3E08 CBZ W8, 0x3CC3E2C
	0x03CC3E0C LDR W8, [X31 + 0x3C]
	0x03CC3E10 LDR W9, [X31 + 0x74]
	0x03CC3E14 ORN W8, W8, W9, 0x0
	0x03CC3E18 TBZ X8, 0x0, 0x3CC3E48
	0x03CC3E1C LDRB W8, [X22]
	0x03CC3E20 CMP W8, 0x2
	0x03CC3E24 B.EQ 0x3CC3E48
	0x03CC3E28 B 0x3CC3F24
	0x03CC3E2C CMP W27, 0x3
	0x03CC3E30 B.EQ 0x3CC3E0C
	0x03CC3E34 MOVZ W8, 0x200B
	0x03CC3E38 CMP W27, W8
	0x03CC3E3C B.EQ 0x3CC3E0C
	0x03CC3E40 CMP W27, 0xAD
	0x03CC3E44 B.EQ 0x3CC3E0C
	0x03CC3E48 LDR V0, [X21 + 0x354]
	0x03CC3E4C LDR V4, [X31 + 0x5C]
	0x03CC3E50 LDR V1, [X21 + 0x358]
	0x03CC3E54 LDR V2, [X21 + 0x35C]
	0x03CC3E58 LDR V3, [X21 + 0x2F4]
	0x03CC3E5C FSUB S0, S4, S0
	0x03CC3E60 FSUB S0, S0, S1
	0x03CC3E64 FCMP S0, S2
	0x03CC3E68 FMOV S1, -1
	0x03CC3E6C FCCMP S2, S1, 0x4, PL
	0x03CC3E70 ADD X0, X31, 0x230
	0x03CC3E74 MOV X1, X31
	0x03CC3E78 FCSEL S8, S0, S2, EQ
	0x03CC3E7C FABS S9, S3
	0x03CC3E80 BL 0x3C9C2EC
	0x03CC3E84 LDR V1, [X21 + 0x1594]
	0x03CC3E88 LDR W8, [X31 + 0x74]
	0x03CC3E8C FMOV S2, 1
	0x03CC3E90 FSUB S1, S2, S1
	0x03CC3E94 CMP W8, 0x0
	0x03CC3E98 FMUL S0, S0, S1
	0x03CC3E9C FCSEL S1, S14, S12, NE
	0x03CC3EA0 FMUL S0, S1, S0
	0x03CC3EA4 FADD S9, S9, S0
	0x03CC3EA8 TBZ X28, 0x0, 0x3CC3EF0
	0x03CC3EAC ADRP X8, 0xFFFFFFFFFCE27000
	0x03CC3EB0 LDR V0, [X8 + 0x190]
	0x03CC3EB4 ANDS W31, W24, 0x18
	0x03CC3EB8 FMOV S1, 1
	0x03CC3EBC FCSEL S11, S1, S0, EQ
	0x03CC3EC0 FMUL S0, S11, S8
	0x03CC3EC4 FCMP S9, S0
	0x03CC3EC8 B.LE 0x3CC3EF0
	0x03CC3ECC LDR W8, [X31 + 0x64]
	0x03CC3ED0 CBZ W8, 0x3CC3EF0
	0x03CC3ED4 LDR W8, [X31 + 0x64]
	0x03CC3ED8 CMP W8, 0x3
	0x03CC3EDC B.EQ 0x3CC3EF0
	0x03CC3EE0 LDR W8, [X21 + 0x324]
	0x03CC3EE4 LDR W9, [X21 + 0x328]
	0x03CC3EE8 CMP W8, W9
	0x03CC3EEC B.NE 0x3CC45E8
	0x03CC3EF0 LDR V0, [X21 + 0x354]
	0x03CC3EF4 LDR V1, [X21 + 0x374]
	0x03CC3EF8 LDR V2, [X21 + 0x378]
	0x03CC3EFC LDR V3, [X21 + 0x358]
	0x03CC3F00 FADD S0, S9, S0
	0x03CC3F04 FSUB S1, S1, S2
	0x03CC3F08 FADD S2, S0, S3
	0x03CC3F0C LDR V3, [X31 + 0x78]
	0x03CC3F10 LDR V0, [X21 + 0x2E0]
	0x03CC3F14 MOV V2.S[1], V1.S[0]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03CC3F20 STR D3, [X31 + 0x78]
	0x03CC3F24 LDR V14, [X31 + 0x60]
	0x03CC3F28 FMOV S10, W31
	0x03CC3F2C FCMP S0, 0x0
	0x03CC3F30 B.LE 0x3CC3FB0
	0x03CC3F34 ADRP X8, 0x49E000
	0x03CC3F38 LDR X8, [X8 + 0xB48]
	0x03CC3F3C LDR V8, [X21 + 0x338]
	0x03CC3F40 LDR V9, [X21 + 0x15AC]
	0x03CC3F44 LDR X0, [X8]
	0x03CC3F48 LDR W8, [X0 + 0xE0]
	0x03CC3F4C CBNZ W8, 0x3CC3F54
	0x03CC3F50 BL 0x1C16DFC
	0x03CC3F54 MOV V0.16B, V8.16B
	0x03CC3F58 MOV V1.16B, V9.16B
	0x03CC3F5C MOV X0, X31
	0x03CC3F60 BL 0x3CC5918
	0x03CC3F64 TBNZ X0, 0x0, 0x3CC3FB0
	0x03CC3F68 LDRB W8, [X21 + 0x2E8]
	0x03CC3F6C CBNZ W8, 0x3CC3FB0
	0x03CC3F70 LDRB W8, [X21 + 0x37C]
	0x03CC3F74 CMP W8, 0x1
	0x03CC3F78 B.EQ 0x3CC3FB0
	0x03CC3F7C LDR V0, [X21 + 0x338]
	0x03CC3F80 LDR V1, [X21 + 0x15AC]
	0x03CC3F84 LDR V2, [X21 + 0x378]
	0x03CC3F88 LDR V3, [X21 + 0x2E0]
	0x03CC3F8C FSUB S0, S0, S1
	0x03CC3F90 FSUB S2, S2, S0
	0x03CC3F94 FADD S3, S0, S3
	0x03CC3F98 FADD S0, S1, S0
	0x03CC3F9C STR S2, [X21 + 0x378]
	0x03CC3FA0 STR S3, [X21 + 0x2E0]
	0x03CC3FA4 STR S0, [X21 + 0x15AC]
	0x03CC3FA8 STR S3, [X31 + 0xA54]
	0x03CC3FAC STR S0, [X31 + 0xA20]
	0x03CC3FB0 MOVZ W8, 0x200B
	0x03CC3FB4 CMP W27, W8
	0x03CC3FB8 B.EQ 0x3CC4044
	0x03CC3FBC CMP W27, 0x9
	0x03CC3FC0 B.NE 0x3CC404C
	0x03CC3FC4 LDR X24, [X31 + 0x90]
	0x03CC3FC8 LDR X0, [X24]
	0x03CC3FCC CBZ X0, 0x3CC4BC4
	0x03CC3FD0 ADD X8, X31, 0xA0
	0x03CC3FD4 MOV X1, X31
	0x03CC3FD8 BL 0x3C9EB14
	0x03CC3FDC ADD X0, X31, 0x250
	0x03CC3FE0 ADD X1, X31, 0xA0
	0x03CC3FE4 MOVZ W2, 0x60
	0x03CC3FE8 BL 0x3EB1AC0
	0x03CC3FEC ADD X0, X31, 0x250
	0x03CC3FF0 MOV X1, X31
	0x03CC3FF4 BL 0x3C9C080
	0x03CC3FF8 LDR X0, [X24]
	0x03CC3FFC CBZ X0, 0x3CC4BC4
	0x03CC4000 MOV X1, X31
	0x03CC4004 MOV V8.16B, V0.16B
	0x03CC4008 BL 0x3C9F174
	0x03CC400C AND W8, W0, 0xFF
	0x03CC4010 LDR V0, [X21 + 0x2F4]
	0x03CC4014 UCVTF S1, W8
	0x03CC4018 FMUL S1, S8, S1
	0x03CC401C FMUL S1, S12, S1
	0x03CC4020 FDIV S2, S0, S1
	0x03CC4024 FRINTP S2, S2
	0x03CC4028 FADD S3, S0, S1
	0x03CC402C FMUL S1, S1, S2
	0x03CC4030 FCMP S1, S0
	0x03CC4034 MOV W28, W31
	0x03CC4038 FCSEL S0, S1, S3, GT
	0x03CC403C MOVZ W27, 0x9
	0x03CC4040 B 0x3CC4128
	0x03CC4044 MOV W28, W31
	0x03CC4048 B 0x3CC412C
	0x03CC404C LDR V8, [X21 + 0x2F0]
	0x03CC4050 LDR V11, [X21 + 0x2F4]
	0x03CC4054 FCMP S8, 0x0
	0x03CC4058 B.EQ 0x3CC4084
	0x03CC405C LDR X8, [X31 + 0x90]
	0x03CC4060 LDR X0, [X8]
	0x03CC4064 CBZ X0, 0x3CC4BC4
	0x03CC4068 MOV X1, X31
	0x03CC406C BL 0x3C9F134
	0x03CC4070 LDR V1, [X21 + 0x2EC]
	0x03CC4074 LDR V2, [X21 + 0x1594]
	0x03CC4078 FSUB S3, S8, S15
	0x03CC407C FADD S0, S13, S0
	0x03CC4080 B 0x3CC40DC
	0x03CC4084 ADD X0, X31, 0x230
	0x03CC4088 MOV X1, X31
	0x03CC408C BL 0x3C9C2EC
	0x03CC4090 LDR V12, [X21 + 0x19A8]
	0x03CC4094 ADD X0, X31, 0x220
	0x03CC4098 MOV X1, X31
	0x03CC409C MOV V8.16B, V0.16B
	0x03CC40A0 BL 0x3C9E384
	0x03CC40A4 LDR X0, [X21 + 0x68]
	0x03CC40A8 CBZ X0, 0x3CC4BC4
	0x03CC40AC MOV X1, X31
	0x03CC40B0 MOV V9.16B, V0.16B
	0x03CC40B4 BL 0x3C9F134
	0x03CC40B8 FMUL S3, S8, S12
	0x03CC40BC LDR V4, [X31 + 0x68]
	0x03CC40C0 LDR V12, [X31 + 0x88]
	0x03CC40C4 LDR V1, [X21 + 0x2EC]
	0x03CC40C8 LDR V2, [X21 + 0x1594]
	0x03CC40CC FADD S0, S13, S0
	0x03CC40D0 FADD S3, S3, S9
	0x03CC40D4 FADD S0, S4, S0
	0x03CC40D8 FMUL S3, S12, S3
	0x03CC40DC FMUL S0, S14, S0
	0x03CC40E0 FADD S0, S3, S0
	0x03CC40E4 FADD S0, S1, S0
	0x03CC40E8 FMOV S1, 1
	0x03CC40EC LDR W8, [X31 + 0x8C]
	0x03CC40F0 FSUB S1, S1, S2
	0x03CC40F4 FMUL S0, S1, S0
	0x03CC40F8 FADD S0, S11, S0
	0x03CC40FC STR S0, [X21 + 0x2F4]
	0x03CC4100 CBZ W8, 0x3CC4114
	0x03CC4104 LDR V1, [X19 + 0xC4]
	0x03CC4108 FMUL S1, S14, S1
	0x03CC410C FADD S0, S0, S1
	0x03CC4110 STR S0, [X21 + 0x2F4]
	0x03CC4114 CMP W27, 0xD
	0x03CC4118 B.NE 0x3CC435C
	0x03CC411C LDR V0, [X21 + 0x2FC]
	0x03CC4120 MOV W28, W31
	0x03CC4124 FADD S0, S0, S10
	0x03CC4128 STR S0, [X21 + 0x2F4]
	0x03CC412C LDR X8, [X31 + 0x98]
	0x03CC4130 LDR W9, [X31 + 0x6C]
	0x03CC4134 LDR W8, [X8]
	0x03CC4138 CMP W8, W9
	0x03CC413C B.NE 0x3CC43B0
	0x03CC4140 LDR V0, [X21 + 0x2E0]
	0x03CC4144 FCMP S0, 0x0
	0x03CC4148 B.LE 0x3CC41AC
	0x03CC414C ADRP X8, 0x42F000
	0x03CC4150 LDR X8, [X8 + 0x5A8]
	0x03CC4154 LDR V8, [X21 + 0x338]
	0x03CC4158 LDR V9, [X21 + 0x15AC]
	0x03CC415C LDR X0, [X8]
	0x03CC4160 LDR W8, [X0 + 0xE0]
	0x03CC4164 CBNZ W8, 0x3CC416C
	0x03CC4168 BL 0x1C16DFC
	0x03CC416C LDR V2, [X31 + 0x2C]
	0x03CC4170 FSUB S0, S8, S9
	0x03CC4174 FABS S1, S0
	0x03CC4178 FCMP S1, S2
	0x03CC417C B.LE 0x3CC41AC
	0x03CC4180 LDRB W8, [X21 + 0x2E8]
	0x03CC4184 CBNZ W8, 0x3CC41AC
	0x03CC4188 LDRB W8, [X21 + 0x37C]
	0x03CC418C CMP W8, 0x1
	0x03CC4190 B.EQ 0x3CC41AC
	0x03CC4194 LDR V1, [X21 + 0x378]
	0x03CC4198 LDR V2, [X21 + 0x2E0]
	0x03CC419C FSUB S1, S1, S0
	0x03CC41A0 FADD S0, S0, S2
	0x03CC41A4 STR S1, [X21 + 0x378]
	0x03CC41A8 STR S0, [X21 + 0x2E0]
	0x03CC41AC LDR V0, [X21 + 0x33C]
	0x03CC41B0 LDR V1, [X21 + 0x2E0]
	0x03CC41B4 LDR V2, [X21 + 0x378]
	0x03CC41B8 STRB W31, [X21 + 0x37C]
	0x03CC41BC FSUB S0, S0, S1
	0x03CC41C0 FCMP S2, S0
	0x03CC41C4 FCSEL S0, S2, S0, MI
	0x03CC41C8 STR S0, [X21 + 0x378]
	0x03CC41CC TBNZ X28, 0x0, 0x3CC41F0
	0x03CC41D0 MOVN W8, 0x2027
	0x03CC41D4 ADD W8, W27, W8
	0x03CC41D8 CMP W8, 0x2
	0x03CC41DC B.CC 0x3CC41F0
	0x03CC41E0 CMP W27, 0x2D
	0x03CC41E4 B.EQ 0x3CC41F0
	0x03CC41E8 CMP W27, 0xB
	0x03CC41EC B.NE 0x3CC4394
	0x03CC41F0 LDR W3, [X21 + 0x324]
	0x03CC41F4 ADD X1, X31, 0x648
	0x03CC41F8 MOV X0, X21
	0x03CC41FC MOV W2, W26
	0x03CC4200 MOV X4, X23
	0x03CC4204 BL 0x3CBAA64
	0x03CC4208 LDR W3, [X21 + 0x324]
	0x03CC420C ADD X1, X31, 0x9E0
	0x03CC4210 MOV X0, X21
	0x03CC4214 MOV W2, W26
	0x03CC4218 MOV X4, X23
	0x03CC421C BL 0x3CBAA64
	0x03CC4220 LDR W8, [X21 + 0x340]
	0x03CC4224 LDRSW X9, [X21 + 0x324]
	0x03CC4228 LDR X10, [X21 + 0x1A40]
	0x03CC422C ADD W11, W8, 0x1
	0x03CC4230 ADD W8, W9, 0x1
	0x03CC4234 STR W11, [X21 + 0x340]
	0x03CC4238 STR W8, [X21 + 0x328]
	0x03CC423C CBZ X10, 0x3CC4BC4
	0x03CC4240 LDR W11, [X10 + 0x18]
	0x03CC4244 MOVZ W29, 0x188
	0x03CC4248 CMP W9, W11
	0x03CC424C B.CS 0x3CC4BC8
	0x03CC4250 ADRP X11, 0xFFFFFFFFFCE26000
	0x03CC4254 LDR V1, [X21 + 0x2E4]
	0x03CC4258 LDR V2, [X11 + 0x214]
	0x03CC425C NOP
	0x03CC4260 MADD X9, X9, X29, X10
	0x03CC4264 LDR V0, [X9 + 0x158]
	0x03CC4268 MOVZ W9, 0x2029
	0x03CC426C FCMP S1, S2
	0x03CC4270 B.NE 0x3CC42F8
	0x03CC4274 LDR V4, [X21 + 0x15B0]
	0x03CC4278 LDR V5, [X31 + 0x34]
	0x03CC427C LDR V3, [X21 + 0x33C]
	0x03CC4280 FMOV S1, W31
	0x03CC4284 LDR V2, [X19 + 0xC8]
	0x03CC4288 FADD S4, S5, S4
	0x03CC428C LDR V5, [X31 + 0x30]
	0x03CC4290 FSUB S3, S1, S3
	0x03CC4294 LDR V6, [X31 + 0x50]
	0x03CC4298 FADD S3, S0, S3
	0x03CC429C FMUL S4, S5, S4
	0x03CC42A0 FADD S5, S3, S4
	0x03CC42A4 LDR V3, [X31 + 0x4C]
	0x03CC42A8 CMP W27, W9
	0x03CC42AC CSET W9, NE
	0x03CC42B0 CMP W28, 0x0
	0x03CC42B4 EOR W10, W28, 0x1
	0x03CC42B8 FCSEL S6, S6, S2, NE
	0x03CC42BC FCSEL S3, S3, S5, NE
	0x03CC42C0 AND W9, W9, W10, 0x0
	0x03CC42C4 MOV V4.16B, V6.16B
	0x03CC42C8 STP S3, S6, [X31 + 0x4C]
	0x03CC42CC TBNZ X9, 0x0, 0x3CC42DC
	0x03CC42D0 LDR V1, [X19 + 0xCC]
	0x03CC42D4 MOV V3.16B, V5.16B
	0x03CC42D8 MOV V4.16B, V2.16B
	0x03CC42DC LDR V2, [X21 + 0x2E0]
	0x03CC42E0 FADD S1, S4, S1
	0x03CC42E4 FMUL S1, S14, S1
	0x03CC42E8 FADD S1, S3, S1
	0x03CC42EC MOV W9, W31
	0x03CC42F0 FADD S1, S1, S2
	0x03CC42F4 B 0x3CC432C
	0x03CC42F8 CMP W27, W9
	0x03CC42FC CSET W9, NE
	0x03CC4300 BIC W9, W9, W28, 0x0
	0x03CC4304 FMOV S2, W31
	0x03CC4308 TBNZ X9, 0x0, 0x3CC4310
	0x03CC430C LDR V2, [X19 + 0xCC]
	0x03CC4310 LDR V3, [X19 + 0xC8]
	0x03CC4314 LDR V4, [X21 + 0x2E0]
	0x03CC4318 MOVZ W9, 0x1
	0x03CC431C FADD S2, S3, S2
	0x03CC4320 FMUL S2, S14, S2
	0x03CC4324 FADD S1, S1, S2
	0x03CC4328 FADD S1, S4, S1
	0x03CC432C STR S1, [X21 + 0x2E0]
	0x03CC4330 LDR V1, [X21 + 0x2F8]
	0x03CC4334 LDR V2, [X21 + 0x2FC]
	0x03CC4338 LDR V3, [X31 + 0x40]
	0x03CC433C STR S0, [X21 + 0x15AC]
	0x03CC4340 FADD S0, S1, S10
	0x03CC4344 FADD S0, S0, S2
	0x03CC4348 STRB W9, [X21 + 0x2E8]
	0x03CC434C STR D3, [X21 + 0x338]
	0x03CC4350 STR S0, [X21 + 0x2F4]
	0x03CC4354 STR W8, [X21 + 0x324]
	0x03CC4358 B 0x3CC2B48
	0x03CC435C CMP W27, 0xA
	0x03CC4360 CSET W28, EQ
	0x03CC4364 CMP W27, 0xB
	0x03CC4368 B.HI 0x3CC4380
	0x03CC436C MOVZ W8, 0x1
	0x03CC4370 LSLV W8, W8, W27
	0x03CC4374 MOVZ W9, 0xC08
	0x03CC4378 ANDS W31, W8, W9, 0x0
	0x03CC437C B.NE 0x3CC4140
	0x03CC4380 MOVN W8, 0x2027
	0x03CC4384 ADD W8, W27, W8
	0x03CC4388 CMP W8, 0x2
	0x03CC438C B.CC 0x3CC4140
	0x03CC4390 B 0x3CC412C
	0x03CC4394 LDR W8, [X31 + 0x84]
	0x03CC4398 CBZ W8, 0x3CC43B0
	0x03CC439C LDR X8, [X21 + 0x20]
	0x03CC43A0 LDR W9, [X31 + 0x64]
	0x03CC43A4 CBZ X8, 0x3CC4BC4
	0x03CC43A8 LDR W26, [X8 + 0x18]
	0x03CC43AC B 0x3CC43B4
	0x03CC43B0 LDR W9, [X31 + 0x64]
	0x03CC43B4 CMP W9, 0x3
	0x03CC43B8 B.EQ 0x3CC43C0
	0x03CC43BC CBNZ W9, 0x3CC43D0
	0x03CC43C0 LDR W8, [X19 + 0x74]
	0x03CC43C4 ORR W8, W8, 0x2
	0x03CC43C8 CMP W8, 0x3
	0x03CC43CC B.NE 0x3CC479C
	0x03CC43D0 LDR W8, [X31 + 0x8C]
	0x03CC43D4 CBZ W8, 0x3CC4458
	0x03CC43D8 LDRB W8, [X21 + 0x37D]
	0x03CC43DC CBZ W8, 0x3CC4480
	0x03CC43E0 LDR W8, [X31 + 0x58]
	0x03CC43E4 TBZ X8, 0x0, 0x3CC4798
	0x03CC43E8 LDR W8, [X31 + 0x8C]
	0x03CC43EC LDR W10, [X31 + 0x74]
	0x03CC43F0 LDR W3, [X21 + 0x324]
	0x03CC43F4 ADD X1, X31, 0x9E0
	0x03CC43F8 CMP W8, 0x0
	0x03CC43FC CSET W8, EQ
	0x03CC4400 CMP W27, 0xA0
	0x03CC4404 CSET W9, EQ
	0x03CC4408 ORR W9, W9, W8, 0x0
	0x03CC440C ANDS W31, W10, W8, 0x0
	0x03CC4410 LDR W8, [X31 + 0x3C]
	0x03CC4414 MOV X0, X21
	0x03CC4418 MOV W2, W26
	0x03CC441C MOV X4, X23
	0x03CC4420 CSEL W24, W8, W9, NE
	0x03CC4424 BL 0x3CBAA64
	0x03CC4428 MOVZ W20, 0x1
	0x03CC442C MOVZ W8, 0x1
	0x03CC4430 STR W8, [X31 + 0x58]
	0x03CC4434 TBNZ X24, 0x0, 0x3CC479C
	0x03CC4438 LDR W3, [X21 + 0x324]
	0x03CC443C ADD X1, X31, 0x2B0
	0x03CC4440 MOV X0, X21
	0x03CC4444 MOV W2, W26
	0x03CC4448 MOV X4, X23
	0x03CC444C BL 0x3CBAA64
	0x03CC4450 STR W20, [X31 + 0x58]
	0x03CC4454 B 0x3CC479C
	0x03CC4458 CMP W27, 0x2D
	0x03CC445C B.EQ 0x3CC43D8
	0x03CC4460 MOVZ W8, 0x200B
	0x03CC4464 CMP W27, W8
	0x03CC4468 B.EQ 0x3CC43D8
	0x03CC446C CMP W27, 0xAD
	0x03CC4470 B.EQ 0x3CC43D8
	0x03CC4474 LDRB W8, [X21 + 0x37D]
	0x03CC4478 CBNZ W8, 0x3CC43E0
	0x03CC447C B 0x3CC44D4
	0x03CC4480 MOVZ W8, 0x2006
	0x03CC4484 CMP W27, W8
	0x03CC4488 B.LE 0x3CC44C4
	0x03CC448C MOVN W8, 0x2006
	0x03CC4490 ADD W8, W27, W8
	0x03CC4494 CMP W8, 0x28
	0x03CC4498 B.HI 0x3CC44B4
	0x03CC449C MOVZ W9, 0x1
	0x03CC44A0 LSLV X8, X9, X8
	0x03CC44A4 MOVZ X9, 0x401
	0x03CC44A8 MOVK X9, 0x100
	0x03CC44AC ANDS X31, X8, X9, 0x0
	0x03CC44B0 B.NE 0x3CC44D4
	0x03CC44B4 MOVZ W8, 0x2060
	0x03CC44B8 CMP W27, W8
	0x03CC44BC B.EQ 0x3CC44D4
	0x03CC44C0 B 0x3CC4778
	0x03CC44C4 CMP W27, 0x2D
	0x03CC44C8 B.EQ 0x3CC471C
	0x03CC44CC CMP W27, 0xA0
	0x03CC44D0 B.NE 0x3CC4778
	0x03CC44D4 ADRP X8, 0x49D000
	0x03CC44D8 LDR X8, [X8 + 0xB48]
	0x03CC44DC LDR X0, [X8]
	0x03CC44E0 LDR W8, [X0 + 0xE0]
	0x03CC44E4 CBNZ W8, 0x3CC44EC
	0x03CC44E8 BL 0x1C16DFC
	0x03CC44EC MOV W0, W27
	0x03CC44F0 MOV X1, X31
	0x03CC44F4 BL 0x3CC95E0
	0x03CC44F8 LDR X24, [X31 + 0x10]
	0x03CC44FC TBZ X0, 0x0, 0x3CC4514
	0x03CC4500 CBZ X24, 0x3CC4BC4
	0x03CC4504 MOV X0, X24
	0x03CC4508 MOV X1, X31
	0x03CC450C BL 0x3CCC250
	0x03CC4510 TBZ X0, 0x0, 0x3CC4544
	0x03CC4514 ADRP X8, 0x49D000
	0x03CC4518 LDR X8, [X8 + 0xB48]
	0x03CC451C LDR X0, [X8]
	0x03CC4520 LDR W8, [X0 + 0xE0]
	0x03CC4524 CBNZ W8, 0x3CC452C
	0x03CC4528 BL 0x1C16DFC
	0x03CC452C MOV W0, W27
	0x03CC4530 MOV X1, X31
	0x03CC4534 BL 0x3CC9650
	0x03CC4538 TBZ X0, 0x0, 0x3CC43E0
	0x03CC453C LDR X24, [X31 + 0x10]
	0x03CC4540 CBZ X24, 0x3CC4BC4
	0x03CC4544 MOV X0, X24
	0x03CC4548 MOV X1, X31
	0x03CC454C BL 0x3CCBFE8
	0x03CC4550 CBZ X0, 0x3CC4BC4
	0x03CC4554 MOV X1, X31
	0x03CC4558 BL 0x3CCE05C
	0x03CC455C CBZ X0, 0x3CC4BC4
	0x03CC4560 ADRP X8, 0x494000
	0x03CC4564 LDR X8, [X8 + 0xE00]
	0x03CC4568 MOV W1, W27
	0x03CC456C LDR X2, [X8]
	0x03CC4570 BL 0x2DCD240
	0x03CC4574 LDR X8, [X31 + 0x98]
	0x03CC4578 LDR W9, [X31 + 0x6C]
	0x03CC457C MOV W27, W0
	0x03CC4580 LDR W8, [X8]
	0x03CC4584 CMP W8, W9
	0x03CC4588 B.GE 0x3CC4668
	0x03CC458C MOV X0, X24
	0x03CC4590 MOV X1, X31
	0x03CC4594 BL 0x3CCBFE8
	0x03CC4598 CBZ X0, 0x3CC4BC4
	0x03CC459C MOV X1, X31
	0x03CC45A0 BL 0x3CCE05C
	0x03CC45A4 LDR X8, [X21 + 0x1A40]
	0x03CC45A8 CBZ X8, 0x3CC4BC4
	0x03CC45AC LDR X9, [X31 + 0x98]
	0x03CC45B0 LDR W10, [X8 + 0x18]
	0x03CC45B4 LDR W9, [X9]
	0x03CC45B8 ADD W9, W9, 0x1
	0x03CC45BC CMP W9, W10
	0x03CC45C0 B.CS 0x3CC4BC8
	0x03CC45C4 CBZ X0, 0x3CC4BC4
	0x03CC45C8 SMADDL X8, X9, X20, X8
	0x03CC45CC LDRH W1, [X8 + 0x20]
	0x03CC45D0 ADRP X8, 0x494000
	0x03CC45D4 LDR X8, [X8 + 0xE00]
	0x03CC45D8 LDR X2, [X8]
	0x03CC45DC BL 0x2DCD240
	0x03CC45E0 AND W8, W0, 0x1
	0x03CC45E4 B 0x3CC466C
	0x03CC45E8 ADD X1, X31, 0x9E0
	0x03CC45EC MOV X0, X21
	0x03CC45F0 MOV X2, X23
	0x03CC45F4 BL 0x3CBACF8
	0x03CC45F8 LDR X8, [X21 + 0x1A40]
	0x03CC45FC CBZ X8, 0x3CC4BC4
	0x03CC4600 LDRSW X9, [X21 + 0x324]
	0x03CC4604 LDR W11, [X8 + 0x18]
	0x03CC4608 LDR W13, [X31 + 0x1C]
	0x03CC460C MOVZ W29, 0x188
	0x03CC4610 SUB W10, W9, 0x1
	0x03CC4614 CMP W10, W11
	0x03CC4618 B.CS 0x3CC4BC8
	0x03CC461C SMADDL X12, X10, X29, X8
	0x03CC4620 LDRH W12, [X12 + 0x20]
	0x03CC4624 LDR W14, [X31 + 0x3C]
	0x03CC4628 MOV W26, W0
	0x03CC462C CMP W12, 0xAD
	0x03CC4630 CSET W12, NE
	0x03CC4634 ORR W12, W14, W12, 0x0
	0x03CC4638 TBNZ X12, 0x0, 0x3CC4644
	0x03CC463C LDR W12, [X19 + 0x74]
	0x03CC4640 CBZ W12, 0x3CC49B8
	0x03CC4644 CMP W9, W11
	0x03CC4648 B.CS 0x3CC4BC8
	0x03CC464C MADD X8, X9, X29, X8
	0x03CC4650 LDRH W8, [X8 + 0x20]
	0x03CC4654 CMP W8, 0xAD
	0x03CC4658 B.NE 0x3CC47B4
	0x03CC465C MOVZ W8, 0x1
	0x03CC4660 STR W8, [X31 + 0x3C]
	0x03CC4664 B 0x3CC2B48
	0x03CC4668 MOV W8, W31
	0x03CC466C TBZ X27, 0x0, 0x3CC4698
	0x03CC4670 LDR W9, [X31 + 0x8C]
	0x03CC4674 CMP W25, W29
	0x03CC4678 CSET W8, NE
	0x03CC467C CMP W9, 0x0
	0x03CC4680 LDR W9, [X31 + 0x58]
	0x03CC4684 CSET W24, NE
	0x03CC4688 ORN W8, W8, W9, 0x0
	0x03CC468C TBNZ X8, 0x0, 0x3CC479C
	0x03CC4690 MOVZ W20, 0x1
	0x03CC4694 B 0x3CC46C4
	0x03CC4698 LDR W9, [X31 + 0x8C]
	0x03CC469C LDR W11, [X31 + 0x58]
	0x03CC46A0 CMP W9, 0x0
	0x03CC46A4 CSET W9, NE
	0x03CC46A8 CMP W8, 0x0
	0x03CC46AC CSET W10, NE
	0x03CC46B0 CSET W8, EQ
	0x03CC46B4 AND W20, W11, W10, 0x0
	0x03CC46B8 ORR W8, W11, W8, 0x0
	0x03CC46BC AND W24, W20, W9, 0x0
	0x03CC46C0 TBZ X8, 0x0, 0x3CC49AC
	0x03CC46C4 LDR W3, [X21 + 0x324]
	0x03CC46C8 ADD X1, X31, 0x9E0
	0x03CC46CC MOV X0, X21
	0x03CC46D0 MOV W2, W26
	0x03CC46D4 MOV X4, X23
	0x03CC46D8 BL 0x3CBAA64
	0x03CC46DC STR W20, [X31 + 0x58]
	0x03CC46E0 TBNZ X24, 0x0, 0x3CC4438
	0x03CC46E4 B 0x3CC479C
	0x03CC46E8 SUB W9, W9, 0x1
	0x03CC46EC CMP W9, W11
	0x03CC46F0 B.CS 0x3CC4BC8
	0x03CC46F4 CBZ X10, 0x3CC4BC4
	0x03CC46F8 SMADDL X8, X9, X29, X8
	0x03CC46FC LDR V11, [X8 + 0x68]
	0x03CC4700 ADD X0, X10, 0xB0
	0x03CC4704 MOV X1, X31
	0x03CC4708 BL 0x3C9BF88
	0x03CC470C LDR X8, [X31 + 0x90]
	0x03CC4710 LDR X8, [X8]
	0x03CC4714 CBNZ X8, 0x3CC2DD8
	0x03CC4718 B 0x3CC4BC4
	0x03CC471C LDR X8, [X31 + 0x98]
	0x03CC4720 LDR W8, [X8]
	0x03CC4724 SUBS W8, W8, 0x1
	0x03CC4728 B.LT 0x3CC4778
	0x03CC472C LDR X9, [X23 + 0x30]
	0x03CC4730 CBZ X9, 0x3CC4BC4
	0x03CC4734 LDR W10, [X9 + 0x18]
	0x03CC4738 CMP W8, W10
	0x03CC473C MOVZ W10, 0x188
	0x03CC4740 B.CS 0x3CC4BC8
	0x03CC4744 ADRP X11, 0x431000
	0x03CC4748 LDR X11, [X11 + 0x170]
	0x03CC474C NOP
	0x03CC4750 UMADDL X8, X8, X10, X9
	0x03CC4754 LDRH W25, [X8 + 0x20]
	0x03CC4758 LDR X0, [X11]
	0x03CC475C LDR W9, [X0 + 0xE0]
	0x03CC4760 CBNZ W9, 0x3CC4768
	0x03CC4764 BL 0x1C16DFC
	0x03CC4768 MOV W0, W25
	0x03CC476C MOV X1, X31
	0x03CC4770 BL 0x3317FCC
	0x03CC4774 TBNZ X0, 0x0, 0x3CC479C
	0x03CC4778 MOVN W8, 0x0
	0x03CC477C STR W8, [X31 + 0x2B0]
	0x03CC4780 LDR W3, [X21 + 0x324]
	0x03CC4784 ADD X1, X31, 0x9E0
	0x03CC4788 MOV X0, X21
	0x03CC478C MOV W2, W26
	0x03CC4790 MOV X4, X23
	0x03CC4794 BL 0x3CBAA64
	0x03CC4798 STR W31, [X31 + 0x58]
	0x03CC479C LDR X9, [X31 + 0x98]
	0x03CC47A0 MOVZ W29, 0x188
	0x03CC47A4 LDR W8, [X9]
	0x03CC47A8 ADD W8, W8, 0x1
	0x03CC47AC STR W8, [X9]
	0x03CC47B0 B 0x3CC2B48
	0x03CC47B4 LDR W8, [X31 + 0x58]
	0x03CC47B8 AND W8, W8, W13, 0x0
	0x03CC47BC TBZ X8, 0x0, 0x3CC4880
	0x03CC47C0 LDR V0, [X19 + 0x108]
	0x03CC47C4 LDR V1, [X21 + 0x1594]
	0x03CC47C8 MOVZ W8, 0x42C80000
	0x03CC47CC FMOV S2, W8
	0x03CC47D0 FDIV S0, S0, S2
	0x03CC47D4 FCMP S1, S0
	0x03CC47D8 B.PL 0x3CC47EC
	0x03CC47DC LDR W8, [X21 + 0x15A0]
	0x03CC47E0 LDR W9, [X21 + 0x15A4]
	0x03CC47E4 CMP W8, W9
	0x03CC47E8 B.LT 0x3CC4B80
	0x03CC47EC LDR X8, [X31 + 0x20]
	0x03CC47F0 LDR V1, [X19 + 0xAC]
	0x03CC47F4 LDR V0, [X8]
	0x03CC47F8 FCMP S0, S1
	0x03CC47FC B.LE 0x3CC4880
	0x03CC4800 LDR W8, [X21 + 0x15A0]
	0x03CC4804 LDR W9, [X21 + 0x15A4]
	0x03CC4808 CMP W8, W9
	0x03CC480C B.GE 0x3CC4880
	0x03CC4810 LDR X9, [X31 + 0x20]
	0x03CC4814 STR S0, [X21 + 0x1598]
	0x03CC4818 LDR V0, [X21 + 0x159C]
	0x03CC481C ADRP X8, 0xFFFFFFFFFCE26000
	0x03CC4820 LDR V1, [X9]
	0x03CC4824 LDR V2, [X8 + 0x200]
	0x03CC4828 FMOV S4, 0.5
	0x03CC482C MOVZ W8, 0x7F800000
	0x03CC4830 FSUB S0, S1, S0
	0x03CC4834 FMUL S0, S0, S4
	0x03CC4838 FMAXNM S0, S0, S2
	0x03CC483C FSUB S0, S1, S0
	0x03CC4840 FMOV S5, 20
	0x03CC4844 FMOV S3, W8
	0x03CC4848 ADRP X8, 0xFFFFFFFFFCE26000
	0x03CC484C STR S0, [X9]
	0x03CC4850 FMUL S0, S0, S5
	0x03CC4854 LDR V2, [X8 + 0x420]
	0x03CC4858 FADD S0, S0, S4
	0x03CC485C LDR V1, [X19 + 0xAC]
	0x03CC4860 FCVTZS W8, S0
	0x03CC4864 FCMP S0, S3
	0x03CC4868 SCVTF S0, W8
	0x03CC486C FDIV S0, S0, S5
	0x03CC4870 FCSEL S0, S2, S0, EQ
	0x03CC4874 FCMP S0, S1
	0x03CC4878 FCSEL S0, S0, S1, GT
	0x03CC487C STR S0, [X9]
	0x03CC4880 LDR V0, [X21 + 0x2E0]
	0x03CC4884 LDR V11, [X31 + 0x60]
	0x03CC4888 FMOV S10, W31
	0x03CC488C FCMP S0, 0x0
	0x03CC4890 B.LE 0x3CC48F4
	0x03CC4894 ADRP X8, 0x42F000
	0x03CC4898 LDR X8, [X8 + 0x5A8]
	0x03CC489C LDR V8, [X21 + 0x338]
	0x03CC48A0 LDR V9, [X21 + 0x15AC]
	0x03CC48A4 LDR X0, [X8]
	0x03CC48A8 LDR W8, [X0 + 0xE0]
	0x03CC48AC CBNZ W8, 0x3CC48B4
	0x03CC48B0 BL 0x1C16DFC
	0x03CC48B4 LDR V2, [X31 + 0x2C]
	0x03CC48B8 FSUB S0, S8, S9
	0x03CC48BC FABS S1, S0
	0x03CC48C0 FCMP S1, S2
	0x03CC48C4 B.LE 0x3CC48F4
	0x03CC48C8 LDRB W8, [X21 + 0x2E8]
	0x03CC48CC CBNZ W8, 0x3CC48F4
	0x03CC48D0 LDRB W8, [X21 + 0x37C]
	0x03CC48D4 CMP W8, 0x1
	0x03CC48D8 B.EQ 0x3CC48F4
	0x03CC48DC LDR V1, [X21 + 0x378]
	0x03CC48E0 LDR V2, [X21 + 0x2E0]
	0x03CC48E4 FSUB S1, S1, S0
	0x03CC48E8 FADD S0, S0, S2
	0x03CC48EC STR S1, [X21 + 0x378]
	0x03CC48F0 STR S0, [X21 + 0x2E0]
	0x03CC48F4 LDR V0, [X21 + 0x2E0]
	0x03CC48F8 LDR V1, [X21 + 0x33C]
	0x03CC48FC LDR V2, [X21 + 0x378]
	0x03CC4900 LDR W8, [X21 + 0x324]
	0x03CC4904 ADD X1, X31, 0x648
	0x03CC4908 FSUB S0, S1, S0
	0x03CC490C FCMP S2, S0
	0x03CC4910 FCSEL S0, S2, S0, MI
	0x03CC4914 SUB W3, W8, 0x1
	0x03CC4918 MOV X0, X21
	0x03CC491C MOV W2, W26
	0x03CC4920 MOV X4, X23
	0x03CC4924 STR W31, [X21 + 0x344]
	0x03CC4928 STR W8, [X21 + 0x328]
	0x03CC492C STR S0, [X21 + 0x378]
	0x03CC4930 BL 0x3CBAA64
	0x03CC4934 LDR W9, [X21 + 0x340]
	0x03CC4938 LDR X8, [X21 + 0x1A40]
	0x03CC493C ADD W9, W9, 0x1
	0x03CC4940 STR W9, [X21 + 0x340]
	0x03CC4944 CBZ X8, 0x3CC4BC4
	0x03CC4948 LDRSW X9, [X21 + 0x324]
	0x03CC494C LDR W10, [X8 + 0x18]
	0x03CC4950 CMP W9, W10
	0x03CC4954 B.CS 0x3CC4BC8
	0x03CC4958 ADRP X10, 0xFFFFFFFFFCE26000
	0x03CC495C LDR V1, [X21 + 0x2E4]
	0x03CC4960 LDR V2, [X10 + 0x214]
	0x03CC4964 NOP
	0x03CC4968 MADD X8, X9, X29, X8
	0x03CC496C LDR V0, [X8 + 0x158]
	0x03CC4970 FCMP S1, S2
	0x03CC4974 B.NE 0x3CC49D8
	0x03CC4978 LDR V2, [X21 + 0x15B0]
	0x03CC497C LDR V4, [X31 + 0x34]
	0x03CC4980 LDR V1, [X21 + 0x33C]
	0x03CC4984 LDR V3, [X19 + 0xC8]
	0x03CC4988 MOV W8, W31
	0x03CC498C FADD S2, S4, S2
	0x03CC4990 LDR V4, [X31 + 0x30]
	0x03CC4994 FSUB S1, S10, S1
	0x03CC4998 FADD S1, S0, S1
	0x03CC499C FMUL S2, S4, S2
	0x03CC49A0 FADD S2, S1, S2
	0x03CC49A4 FMUL S1, S11, S3
	0x03CC49A8 B 0x3CC49E4
	0x03CC49AC STR W20, [X31 + 0x58]
	0x03CC49B0 CBNZ W24, 0x3CC4438
	0x03CC49B4 B 0x3CC479C
	0x03CC49B8 MOVZ W8, 0x2D
	0x03CC49BC STR W8, [X31 + 0xD7C]
	0x03CC49C0 LDR X8, [X31 + 0x98]
	0x03CC49C4 STR W31, [X31 + 0x3C]
	0x03CC49C8 STR W10, [X31 + 0xD78]
	0x03CC49CC SUB W26, W26, 0x1
	0x03CC49D0 STR W10, [X8]
	0x03CC49D4 B 0x3CC2B48
	0x03CC49D8 LDR V2, [X19 + 0xC8]
	0x03CC49DC MOVZ W8, 0x1
	0x03CC49E0 FMUL S2, S11, S2
	0x03CC49E4 LDR V3, [X21 + 0x2E0]
	0x03CC49E8 FADD S1, S1, S2
	0x03CC49EC LDR V2, [X21 + 0x2FC]
	0x03CC49F0 LDR V4, [X31 + 0x40]
	0x03CC49F4 STRB W8, [X21 + 0x2E8]
	0x03CC49F8 STR S0, [X21 + 0x15AC]
	0x03CC49FC FADD S0, S3, S1
	0x03CC4A00 FADD S1, S2, S10
	0x03CC4A04 MOVZ W8, 0x1
	0x03CC4A08 STR W31, [X31 + 0x3C]
	0x03CC4A0C STR D4, [X21 + 0x338]
	0x03CC4A10 STR S0, [X21 + 0x2E0]
	0x03CC4A14 STR S1, [X21 + 0x2F4]
	0x03CC4A18 STR W8, [X31 + 0x58]
	0x03CC4A1C B 0x3CC2B48
	0x03CC4A20 LDR V0, [X21 + 0x1598]
	0x03CC4A24 LDR V1, [X21 + 0x159C]
	0x03CC4A28 ADRP X8, 0xFFFFFFFFFCE26000
	0x03CC4A2C LDR V2, [X8 + 0xD0]
	0x03CC4A30 LDR X10, [X31 + 0x20]
	0x03CC4A34 FSUB S1, S0, S1
	0x03CC4A38 FCMP S1, S2
	0x03CC4A3C B.LE 0x3CC4B18
	0x03CC4A40 LDR W8, [X31 + 0x1C]
	0x03CC4A44 TBZ X8, 0x0, 0x3CC4B18
	0x03CC4A48 LDR V1, [X10]
	0x03CC4A4C LDR V2, [X19 + 0xB0]
	0x03CC4A50 FCMP S1, S2
	0x03CC4A54 B.PL 0x3CC4B18
	0x03CC4A58 LDR W8, [X21 + 0x15A0]
	0x03CC4A5C LDR W9, [X21 + 0x15A4]
	0x03CC4A60 CMP W8, W9
	0x03CC4A64 B.GE 0x3CC4B18
	0x03CC4A68 LDR V2, [X19 + 0x108]
	0x03CC4A6C LDR V3, [X21 + 0x1594]
	0x03CC4A70 MOVZ W8, 0x42C80000
	0x03CC4A74 FMOV S4, W8
	0x03CC4A78 FDIV S2, S2, S4
	0x03CC4A7C FCMP S3, S2
	0x03CC4A80 B.PL 0x3CC4A8C
	0x03CC4A84 STR W31, [X21 + 0x1594]
	0x03CC4A88 LDR V1, [X10]
	0x03CC4A8C STR S1, [X21 + 0x159C]
	0x03CC4A90 LDR V1, [X10]
	0x03CC4A94 ADRP X8, 0xFFFFFFFFFCE26000
	0x03CC4A98 LDR V2, [X8 + 0x200]
	0x03CC4A9C FMOV S3, 0.5
	0x03CC4AA0 FSUB S0, S0, S1
	0x03CC4AA4 FMUL S0, S0, S3
	0x03CC4AA8 FMAXNM S0, S0, S2
	0x03CC4AAC FMOV S2, 20
	0x03CC4AB0 FADD S0, S1, S0
	0x03CC4AB4 MOVZ W8, 0x7F800000
	0x03CC4AB8 ADRP X9, 0xFFFFFFFFFCE26000
	0x03CC4ABC STR S0, [X10]
	0x03CC4AC0 FMUL S0, S0, S2
	0x03CC4AC4 LDR V1, [X9 + 0x420]
	0x03CC4AC8 FADD S0, S0, S3
	0x03CC4ACC FMOV S3, W8
	0x03CC4AD0 FCMP S0, S3
	0x03CC4AD4 LDR V3, [X19 + 0xB0]
	0x03CC4AD8 FCVTZS W8, S0
	0x03CC4ADC SCVTF S0, W8
	0x03CC4AE0 FDIV S0, S0, S2
	0x03CC4AE4 FCSEL S0, S1, S0, EQ
	0x03CC4AE8 FCMP S0, S3
	0x03CC4AEC FCSEL S0, S0, S3, MI
	0x03CC4AF0 STR S0, [X10]
	0x03CC4AF4 ADRP X19, 0x715000
	0x03CC4AF8 LDRB W8, [X19 + 0x78F]
	0x03CC4AFC CBNZ W8, 0x3CC2558
	0x03CC4B00 ADRP X0, 0x437000
	0x03CC4B04 LDR X0, [X0 + 0xF08]
	0x03CC4B08 BL 0x1C16CF4
	0x03CC4B0C MOVZ W8, 0x1
	0x03CC4B10 STRB W8, [X19 + 0x78F]
	0x03CC4B14 B 0x3CC2558
	0x03CC4B18 MOVZ W8, 0x1
	0x03CC4B1C STRB W31, [X22 + 0x470]
	0x03CC4B20 STRB W8, [X22 + 0x30]
	0x03CC4B24 LDP D0, D1, [X19 + 0x28]
	0x03CC4B28 MOVI D2, 0x0
	0x03CC4B2C MOVZ W8, 0x42C80000
	0x03CC4B30 MOVZ W9, 0x7F800000
	0x03CC4B34 FMAXNM V0.2S, V0.2S, V2.2S
	0x03CC4B38 FMAXNM V1.2S, V1.2S, V2.2S
	0x03CC4B3C LDR V2, [X31 + 0x78]
	0x03CC4B40 MOVZ W10, 0xD70A
	0x03CC4B44 MOVK W10, 0xCBA30000
	0x03CC4B48 FADD V0.2S, V2.2S, V0.2S
	0x03CC4B4C FADD V0.2S, V0.2S, V1.2S
	0x03CC4B50 UNIMPLEMENTED
	0x03CC4B54 FMOV V2.2S, 0x0
	0x00000000 INVALID
	0x03CC4B5C FADD V0.2S, V0.2S, V2.2S
	0x03CC4B60 UNIMPLEMENTED
	0x03CC4B64 FCMEQ V2.2S, V0.2S, V2.2S
	0x03CC4B68 UNIMPLEMENTED
	0x03CC4B6C UNIMPLEMENTED
	0x00000000 INVALID
	0x03CC4B74 UNIMPLEMENTED
	0x00000000 INVALID
	0x03CC4B7C B 0x3CC256C
	0x03CC4B80 FCMP S1, 0x0
	0x03CC4B84 MOV V2.16B, V9.16B
	0x03CC4B88 B.LE 0x3CC4B98
	0x03CC4B8C FMOV S2, 1
	0x03CC4B90 FSUB S2, S2, S1
	0x03CC4B94 FDIV S2, S9, S2
	0x03CC4B98 ADRP X8, 0xFFFFFFFFFCE26000
	0x03CC4B9C LDR V3, [X8 + 0x2F0]
	0x03CC4BA0 FADD S3, S8, S3
	0x03CC4BA4 FMUL S3, S11, S3
	0x03CC4BA8 FSUB S3, S9, S3
	0x03CC4BAC FDIV S2, S3, S2
	0x03CC4BB0 FADD S1, S1, S2
	0x03CC4BB4 FCMP S1, S0
	0x03CC4BB8 FCSEL S0, S1, S0, MI
	0x03CC4BBC STR S0, [X21 + 0x1594]
	0x03CC4BC0 B 0x3CC4AF4
	0x03CC4BC4 BL 0x1C16F20
	0x03CC4BC8 BL 0x1C16F28
	0x03CC4BCC MOV X0, X28
	0x03CC4BD0 BL 0x1C171E0
	0x03CC4BD4 STP X30, X23, [X31 - 0x30]!
	0x03CC4BD8 STP X22, X21, [X31 + 0x10]
	0x03CC4BDC STP X20, X19, [X31 + 0x20]
	0x03CC4BE0 MOV X19, X1
	0x03CC4BE4 CBZ X1, 0x3CC4C18
	0x03CC4BE8 LDR W8, [X19 + 0x10]
	0x03CC4BEC ADD W9, W3, W2
	0x03CC4BF0 SUBS W10, W8, W2
	0x03CC4BF4 CSEL W11, W8, W2, LT
	0x03CC4BF8 CMP W2, 0x0
	0x03CC4BFC CSEL W23, W31, W11, LT
	0x03CC4C00 CMP W9, W8
	0x03CC4C04 CSEL W8, W3, W10, LT
	0x03CC4C08 TBNZ X3, 0x1F, 0x3CC4C1C
	0x03CC4C0C CMP W8, W3
	0x03CC4C10 CSEL W20, W8, W3, LT
	0x03CC4C14 B 0x3CC4C20
	0x03CC4C18 MOV W23, W31
	0x03CC4C1C MOV W20, W31
	0x03CC4C20 ADD X21, X0, 0x10
	0x03CC4C24 MOV X0, X21
	0x03CC4C28 MOV X1, X31
	0x03CC4C2C BL 0x3CC5368
	0x03CC4C30 CMP W20, W0
	0x03CC4C34 B.LT 0x3CC4C48
	0x03CC4C38 MOV X0, X21
	0x03CC4C3C MOV W1, W20
	0x03CC4C40 MOV X2, X31
	0x03CC4C44 BL 0x3CC5424
	0x03CC4C48 ADD W8, W20, W23
	0x03CC4C4C CMP W23, W8
	0x03CC4C50 B.GE 0x3CC4C90
	0x03CC4C54 CBZ X19, 0x3CC4CC4
	0x03CC4C58 MOV W22, W31
	0x03CC4C5C ADD W1, W23, W22
	0x03CC4C60 MOV X0, X19
	0x03CC4C64 MOV X2, X31
	0x03CC4C68 BL 0x3222A1C
	0x03CC4C6C AND W2, W0, 0xFFFF
	0x03CC4C70 MOV X0, X21
	0x03CC4C74 MOV W1, W22
	0x03CC4C78 MOV X3, X31
	0x03CC4C7C BL 0x3CC53C4
	0x03CC4C80 ADD W22, W22, 0x1
	0x03CC4C84 CMP W20, W22
	0x03CC4C88 B.NE 0x3CC4C5C
	0x03CC4C8C B 0x3CC4C94
	0x03CC4C90 MOV W20, W31
	0x03CC4C94 MOV X0, X21
	0x03CC4C98 MOV W1, W20
	0x03CC4C9C MOV W2, W31
	0x03CC4CA0 MOV X3, X31
	0x03CC4CA4 BL 0x3CC53C4
	0x03CC4CA8 MOV X0, X21
	0x03CC4CAC MOV W1, W20
	0x03CC4CB0 LDP X20, X19, [X31 + 0x20]
	0x03CC4CB4 LDP X22, X21, [X31 + 0x10]
	0x03CC4CB8 MOV X2, X31
	0x03CC4CBC LDP X30, X23, [X31], #0x30
	0x03CC4CC0 B 0x3CC538C
	0x03CC4CC4 BL 0x1C16F20
	0x03CC4CC8 STP D15, D14, [X31 - 0x90]!
	0x03CC4CCC STP D13, D12, [X31 + 0x10]
	0x03CC4CD0 STP D11, D10, [X31 + 0x20]
	0x03CC4CD4 STP D9, D8, [X31 + 0x30]
	0x03CC4CD8 STR X30, [X31 + 0x40]
	0x03CC4CDC STP X26, X25, [X31 + 0x50]
	0x03CC4CE0 STP X24, X23, [X31 + 0x60]
	0x03CC4CE4 STP X22, X21, [X31 + 0x70]
	0x03CC4CE8 STP X20, X19, [X31 + 0x80]
	0x03CC4CEC ADRP X25, 0x723000
	0x03CC4CF0 LDRB W8, [X25 + 0x348]
	0x03CC4CF4 MOV X21, X5
	0x03CC4CF8 MOV X20, X4
	0x03CC4CFC MOV X24, X3
	0x03CC4D00 MOV X23, X2
	0x03CC4D04 MOV V10.16B, V6.16B
	0x03CC4D08 MOV V14.16B, V5.16B
	0x03CC4D0C MOV V12.16B, V4.16B
	0x03CC4D10 MOV V11.16B, V3.16B
	0x03CC4D14 MOV V9.16B, V2.16B
	0x03CC4D18 MOV V13.16B, V1.16B
	0x03CC4D1C MOV W22, W1
	0x03CC4D20 MOV X19, X0
	0x03CC4D24 STR S0, [X31 + 0x4C]
	0x03CC4D28 TBNZ X8, 0x0, 0x3CC4D4C
	0x03CC4D2C ADRP X0, 0x42F000
	0x03CC4D30 LDR X0, [X0 + 0x5A8]
	0x03CC4D34 BL 0x1C16CF4
	0x03CC4D38 ADRP X0, 0x49D000
	0x03CC4D3C LDR X0, [X0 + 0xB48]
	0x03CC4D40 BL 0x1C16CF4
	0x03CC4D44 MOVZ W8, 0x1
	0x03CC4D48 STRB W8, [X25 + 0x348]
	0x03CC4D4C LDR V0, [X19 + 0x2E0]
	0x03CC4D50 FCMP S0, 0x0
	0x03CC4D54 B.LE 0x3CC4DF4
	0x03CC4D58 ADRP X8, 0x42F000
	0x03CC4D5C LDR X8, [X8 + 0x5A8]
	0x03CC4D60 LDR V0, [X19 + 0x338]
	0x03CC4D64 LDR V1, [X19 + 0x15AC]
	0x03CC4D68 LDR X0, [X8]
	0x03CC4D6C FSUB S15, S0, S1
	0x03CC4D70 LDR W8, [X0 + 0xE0]
	0x03CC4D74 CBNZ W8, 0x3CC4D7C
	0x03CC4D78 BL 0x1C16DFC
	0x03CC4D7C ADRP X8, 0xFFFFFFFFFCE26000
	0x03CC4D80 LDR V0, [X8 + 0x330]
	0x03CC4D84 FABS S1, S15
	0x03CC4D88 FCMP S1, S0
	0x03CC4D8C B.LE 0x3CC4DF4
	0x03CC4D90 LDRB W8, [X19 + 0x2E8]
	0x03CC4D94 CBNZ W8, 0x3CC4DF4
	0x03CC4D98 LDRB W8, [X19 + 0x37C]
	0x03CC4D9C CMP W8, 0x1
	0x03CC4DA0 B.EQ 0x3CC4DF4
	0x03CC4DA4 ADRP X8, 0x49D000
	0x03CC4DA8 LDR X8, [X8 + 0xB48]
	0x03CC4DAC LDR W25, [X19 + 0x328]
	0x03CC4DB0 LDR W26, [X19 + 0x324]
	0x03CC4DB4 LDR X0, [X8]
	0x03CC4DB8 LDR W8, [X0 + 0xE0]
	0x03CC4DBC CBNZ W8, 0x3CC4DC4
	0x03CC4DC0 BL 0x1C16DFC
	0x03CC4DC4 MOV W0, W25
	0x03CC4DC8 MOV W1, W26
	0x03CC4DCC MOV V0.16B, V15.16B
	0x03CC4DD0 MOV X2, X21
	0x03CC4DD4 MOV X3, X31
	0x03CC4DD8 BL 0x3CC8C40
	0x03CC4DDC LDR V0, [X19 + 0x378]
	0x03CC4DE0 LDR V1, [X19 + 0x2E0]
	0x03CC4DE4 FSUB S0, S0, S15
	0x03CC4DE8 FADD S1, S15, S1
	0x03CC4DEC STR S0, [X19 + 0x378]
	0x03CC4DF0 STR S1, [X19 + 0x2E0]
	0x03CC4DF4 LDR V0, [X19 + 0x2E0]
	0x03CC4DF8 LDR V1, [X19 + 0x33C]
	0x03CC4DFC LDR V2, [X19 + 0x378]
	0x03CC4E00 FSUB S15, S1, S0
	0x03CC4E04 FCMP S2, S15
	0x03CC4E08 FCSEL S2, S2, S15, MI
	0x03CC4E0C STR S2, [X19 + 0x378]
	0x03CC4E10 LDRB W8, [X23]
	0x03CC4E14 LDR V1, [X19 + 0x338]
	0x03CC4E18 CBNZ W8, 0x3CC4E20
	0x03CC4E1C STR S2, [X24]
	0x03CC4E20 CBZ X20, 0x3CC51CC
	0x03CC4E24 LDRB W8, [X20 + 0xE8]
	0x03CC4E28 CBZ W8, 0x3CC4E54
	0x03CC4E2C LDR W8, [X19 + 0x324]
	0x03CC4E30 LDR W9, [X20 + 0xD8]
	0x03CC4E34 CMP W8, W9
	0x03CC4E38 B.GE 0x3CC4E4C
	0x03CC4E3C LDR W8, [X19 + 0x340]
	0x03CC4E40 LDR W9, [X20 + 0xE0]
	0x03CC4E44 CMP W8, W9
	0x03CC4E48 B.LT 0x3CC4E54
	0x03CC4E4C MOVZ W8, 0x1
	0x03CC4E50 STRB W8, [X23]
	0x03CC4E54 CBZ X21, 0x3CC51CC
	0x03CC4E58 LDR X8, [X21 + 0x48]
	0x03CC4E5C CBZ X8, 0x3CC51CC
	0x03CC4E60 LDRSW X9, [X19 + 0x340]
	0x03CC4E64 LDR W10, [X8 + 0x18]
	0x03CC4E68 CMP W9, W10
	0x03CC4E6C B.CS 0x3CC51D0
	0x03CC4E70 LDR W11, [X19 + 0x328]
	0x03CC4E74 MOVZ W10, 0x60
	0x03CC4E78 MADD X12, X9, X10, X8
	0x03CC4E7C MOVZ W13, 0x330
	0x03CC4E80 STR W11, [X12 + 0x38]
	0x03CC4E84 LDR W10, [X19 + 0x330]
	0x03CC4E88 MOVZ W14, 0x328
	0x03CC4E8C CMP W11, W10
	0x03CC4E90 CSEL X10, X14, X13, GT
	0x03CC4E94 LDR W10, [X19, X10, LSL]
	0x03CC4E98 STR W10, [X19 + 0x330]
	0x03CC4E9C STR W10, [X12 + 0x3C]
	0x03CC4EA0 LDR W10, [X19 + 0x324]
	0x03CC4EA4 SUB W10, W10, 0x1
	0x03CC4EA8 BIC W13, W10, W10, 0x1F
	0x03CC4EAC STR W13, [X19 + 0x32C]
	0x03CC4EB0 STR W13, [X12 + 0x40]
	0x03CC4EB4 LDR W14, [X19 + 0x334]
	0x03CC4EB8 LDRSW X10, [X19 + 0x330]
	0x03CC4EBC SUB W11, W13, W11
	0x03CC4EC0 ADD W11, W11, 0x1
	0x03CC4EC4 CMP W14, W10
	0x03CC4EC8 CSEL W13, W10, W14, LT
	0x03CC4ECC STR W13, [X19 + 0x334]
	0x03CC4ED0 STR W13, [X12 + 0x44]
	0x03CC4ED4 STR W11, [X12 + 0x24]
	0x03CC4ED8 LDR W11, [X19 + 0x344]
	0x03CC4EDC STR W11, [X12 + 0x28]
	0x03CC4EE0 LDR W11, [X19 + 0x348]
	0x03CC4EE4 STR W11, [X12 + 0x30]
	0x03CC4EE8 LDR X11, [X21 + 0x30]
	0x03CC4EEC CBZ X11, 0x3CC51CC
	0x03CC4EF0 LDR W12, [X11 + 0x18]
	0x03CC4EF4 CMP W10, W12
	0x03CC4EF8 B.CS 0x3CC51D0
	0x03CC4EFC MOVZ W12, 0x188
	0x03CC4F00 MADD X10, X10, X12, X11
	0x03CC4F04 LDR W10, [X10 + 0x124]
	0x03CC4F08 MOVZ W11, 0x60
	0x03CC4F0C MADD X8, X9, X11, X8
	0x03CC4F10 STR S15, [X8 + 0x74]
	0x03CC4F14 STR W10, [X8 + 0x70]
	0x03CC4F18 LDR X8, [X21 + 0x48]
	0x03CC4F1C CBZ X8, 0x3CC51CC
	0x03CC4F20 LDRSW X9, [X19 + 0x340]
	0x03CC4F24 LDR W10, [X8 + 0x18]
	0x03CC4F28 CMP W9, W10
	0x03CC4F2C B.CS 0x3CC51D0
	0x03CC4F30 LDR X10, [X21 + 0x30]
	0x03CC4F34 CBZ X10, 0x3CC51CC
	0x03CC4F38 LDRSW X11, [X19 + 0x334]
	0x03CC4F3C LDR W12, [X10 + 0x18]
	0x03CC4F40 CMP W11, W12
	0x03CC4F44 B.CS 0x3CC51D0
	0x03CC4F48 MOVZ W12, 0x188
	0x03CC4F4C MADD X10, X11, X12, X10
	0x03CC4F50 LDR W10, [X10 + 0x130]
	0x03CC4F54 MOVZ W11, 0x60
	0x03CC4F58 MOV V8.16B, V11.16B
	0x03CC4F5C FSUB S11, S1, S0
	0x03CC4F60 MADD X8, X9, X11, X8
	0x03CC4F64 STR W10, [X8 + 0x78]
	0x03CC4F68 STR S11, [X8 + 0x7C]
	0x03CC4F6C LDR X8, [X21 + 0x48]
	0x03CC4F70 CBZ X8, 0x3CC51CC
	0x03CC4F74 LDRSW X9, [X19 + 0x340]
	0x03CC4F78 LDR W10, [X8 + 0x18]
	0x03CC4F7C CMP W9, W10
	0x03CC4F80 B.CS 0x3CC51D0
	0x03CC4F84 MOVZ W10, 0x60
	0x03CC4F88 MADD X8, X9, X10, X8
	0x03CC4F8C LDR V0, [X8 + 0x78]
	0x03CC4F90 STR S14, [X8 + 0x60]
	0x03CC4F94 STR S0, [X8 + 0x48]
	0x03CC4F98 LDR X8, [X21 + 0x30]
	0x03CC4F9C CBZ X8, 0x3CC51CC
	0x03CC4FA0 LDRSW X9, [X19 + 0x334]
	0x03CC4FA4 LDR W10, [X8 + 0x18]
	0x03CC4FA8 CMP W9, W10
	0x03CC4FAC B.CS 0x3CC51D0
	0x03CC4FB0 LDR X0, [X19 + 0x68]
	0x03CC4FB4 CBZ X0, 0x3CC51CC
	0x03CC4FB8 MOVZ W10, 0x188
	0x03CC4FBC MADD X8, X9, X10, X8
	0x03CC4FC0 LDR V14, [X8 + 0x160]
	0x03CC4FC4 MOV X1, X31
	0x03CC4FC8 BL 0x3C9F134
	0x03CC4FCC LDR X8, [X21 + 0x48]
	0x03CC4FD0 CBZ X8, 0x3CC51CC
	0x03CC4FD4 LDR X10, [X21 + 0x30]
	0x03CC4FD8 CBZ X10, 0x3CC51CC
	0x03CC4FDC LDRSW X11, [X19 + 0x334]
	0x03CC4FE0 LDR W9, [X10 + 0x18]
	0x03CC4FE4 CMP W11, W9
	0x03CC4FE8 B.CS 0x3CC51D0
	0x03CC4FEC LDRSW X9, [X19 + 0x340]
	0x03CC4FF0 LDR W12, [X8 + 0x18]
	0x03CC4FF4 CMP W9, W12
	0x03CC4FF8 B.CS 0x3CC51D0
	0x03CC4FFC LDR V1, [X19 + 0x2EC]
	0x03CC5000 LDR V2, [X20 + 0x108]
	0x03CC5004 FADD S0, S0, S12
	0x03CC5008 MOVZ W12, 0x188
	0x03CC500C FADD S0, S0, S8
	0x03CC5010 FMUL S3, S14, S13
	0x03CC5014 LDRB W13, [X20 + 0xB6]
	0x03CC5018 NOP
	0x03CC501C MADD X10, X11, X12, X10
	0x03CC5020 MOVZ W11, 0x60
	0x03CC5024 FMUL S0, S0, S9
	0x03CC5028 FMOV S4, 1
	0x03CC502C FADD S0, S3, S0
	0x03CC5030 MADD X8, X9, X11, X8
	0x03CC5034 ADD X9, X10, 0x164
	0x03CC5038 FADD S0, S1, S0
	0x03CC503C LDR V1, [X9]
	0x03CC5040 FSUB S2, S4, S2
	0x03CC5044 FMUL S0, S2, S0
	0x03CC5048 CMP W13, 0x0
	0x03CC504C FNEG S2, S0
	0x03CC5050 FCSEL S0, S2, S0, EQ
	0x03CC5054 FADD S0, S1, S0
	0x03CC5058 LDR V8, [X31 + 0x4C]
	0x03CC505C STR S0, [X8 + 0x5C]
	0x03CC5060 STR S0, [X9]
	0x03CC5064 LDR V0, [X19 + 0x2E0]
	0x03CC5068 FMOV S5, W31
	0x03CC506C FSUB S6, S11, S15
	0x03CC5070 FMUL S3, S8, S10
	0x03CC5074 FADD S1, S3, S6
	0x03CC5078 FSUB S0, S5, S0
	0x03CC507C STP S1, S11, [X8 + 0x4C]
	0x03CC5080 STP S0, S15, [X8 + 0x54]
	0x03CC5084 LDR W8, [X19 + 0x324]
	0x03CC5088 ADD X9, X19, 0x344
	0x03CC508C ADD X1, X19, 0x718
	0x03CC5090 MOV X0, X19
	0x03CC5094 SUB W3, W8, 0x1
	0x03CC5098 MOV W2, W22
	0x03CC509C MOV X4, X21
	0x03CC50A0 STR W8, [X19 + 0x328]
	0x03CC50A4 STR X31, [X9]
	0x03CC50A8 BL 0x3CBAA64
	0x03CC50AC LDR W8, [X19 + 0x340]
	0x03CC50B0 ADD W22, W8, 0x1
	0x03CC50B4 STR W22, [X19 + 0x340]
	0x03CC50B8 LDR X8, [X21 + 0x48]
	0x03CC50BC CBZ X8, 0x3CC51CC
	0x03CC50C0 LDR W8, [X8 + 0x18]
	0x03CC50C4 CMP W22, W8
	0x03CC50C8 B.LT 0x3CC50F4
	0x03CC50CC ADRP X8, 0x49C000
	0x03CC50D0 LDR X8, [X8 + 0xB48]
	0x03CC50D4 LDR X0, [X8]
	0x03CC50D8 LDR W8, [X0 + 0xE0]
	0x03CC50DC CBNZ W8, 0x3CC50E4
	0x03CC50E0 BL 0x1C16DFC
	0x03CC50E4 MOV W0, W22
	0x03CC50E8 MOV X1, X21
	0x03CC50EC MOV X2, X31
	0x03CC50F0 BL 0x3CC8DC0
	0x03CC50F4 ADRP X8, 0xFFFFFFFFFCE25000
	0x03CC50F8 LDR V0, [X19 + 0x2E4]
	0x03CC50FC LDR V1, [X8 + 0x214]
	0x03CC5100 FCMP S0, S1
	0x03CC5104 B.NE 0x3CC5170
	0x03CC5108 LDR X8, [X21 + 0x30]
	0x03CC510C CBZ X8, 0x3CC51CC
	0x03CC5110 LDRSW X9, [X19 + 0x324]
	0x03CC5114 LDR W10, [X8 + 0x18]
	0x03CC5118 CMP W9, W10
	0x03CC511C B.CS 0x3CC51D0
	0x03CC5120 LDR V0, [X19 + 0x33C]
	0x03CC5124 MOVZ W10, 0x188
	0x03CC5128 LDR V1, [X19 + 0x15B0]
	0x03CC512C FMOV S3, W31
	0x03CC5130 NOP
	0x03CC5134 MADD X8, X9, X10, X8
	0x03CC5138 FSUB S0, S3, S0
	0x03CC513C LDR V3, [X8 + 0x158]
	0x03CC5140 LDR V2, [X20 + 0xC8]
	0x03CC5144 LDR V4, [X19 + 0x2E0]
	0x03CC5148 FADD S1, S1, S10
	0x03CC514C FMUL S1, S1, S8
	0x03CC5150 FADD S0, S3, S0
	0x03CC5154 FMUL S2, S2, S9
	0x03CC5158 FADD S0, S0, S1
	0x03CC515C FADD S0, S2, S0
	0x03CC5160 FADD S0, S4, S0
	0x03CC5164 STR S0, [X19 + 0x2E0]
	0x03CC5168 STR S3, [X19 + 0x15AC]
	0x03CC516C B 0x3CC5188
	0x03CC5170 LDR V1, [X20 + 0xC8]
	0x03CC5174 LDR V2, [X19 + 0x2E0]
	0x03CC5178 FMUL S1, S1, S9
	0x03CC517C FADD S0, S0, S1
	0x03CC5180 FADD S0, S2, S0
	0x03CC5184 STR S0, [X19 + 0x2E0]
	0x03CC5188 ADRP X8, 0xFFFFFFFFFCE28000
	0x03CC518C LDR V0, [X19 + 0x2FC]
	0x03CC5190 LDR V1, [X8 + 0xB28]
	0x03CC5194 FMOV S2, W31
	0x03CC5198 LDP X22, X21, [X31 + 0x70]
	0x03CC519C FADD S0, S0, S2
	0x03CC51A0 STR D1, [X19 + 0x338]
	0x03CC51A4 STR S0, [X19 + 0x2F4]
	0x03CC51A8 LDP X20, X19, [X31 + 0x80]
	0x03CC51AC LDP X24, X23, [X31 + 0x60]
	0x03CC51B0 LDP X26, X25, [X31 + 0x50]
	0x03CC51B4 LDR X30, [X31 + 0x40]
	0x03CC51B8 LDP D9, D8, [X31 + 0x30]
	0x03CC51BC LDP D11, D10, [X31 + 0x20]
	0x03CC51C0 LDP D13, D12, [X31 + 0x10]
	0x03CC51C4 LDP D15, D14, [X31], #0x90
	0x03CC51C8 RET
	0x03CC51CC BL 0x1C16F20
	0x03CC51D0 BL 0x1C16F28
	0x03CC51D4 STP X30, X21, [X31 - 0x20]!
	0x03CC51D8 STP X20, X19, [X31 + 0x10]
	0x03CC51DC LDR X8, [X2 + 0x8]
	0x03CC51E0 STP X1, X2, [X0 + 0x20]
	0x03CC51E4 MOV X19, X0
	0x03CC51E8 MOV X20, X1
	0x03CC51EC STR X8, [X0 + 0x10]
	0x03CC51F0 LDRB W21, [X2 + 0x52]
	0x03CC51F4 STR X0, [X0 + 0x40]
	0x03CC51F8 MOV X0, X2
	0x03CC51FC BL 0x1C16D84
	0x03CC5200 TBZ X0, 0x0, 0x3CC521C
	0x03CC5204 CMP W21, 0x4
	0x03CC5208 B.NE 0x3CC5220
	0x03CC520C ADRP X8, 0xFFFFFFFFFDF49000
	0x03CC5210 ADD X8, X8, 0x5A8
	0x03CC5214 STR X8, [X19 + 0x18]
	0x03CC5218 B 0x3CC5230
	0x03CC521C CBZ X20, 0x3CC5248
	0x03CC5220 LDR X8, [X19 + 0x10]
	0x03CC5224 LDR X9, [X19 + 0x20]
	0x03CC5228 STR X8, [X19 + 0x18]
	0x03CC522C STR X9, [X19 + 0x40]
	0x03CC5230 ADRP X8, 0xFFFFFFFFFDF49000
	0x03CC5234 ADD X8, X8, 0x538
	0x03CC5238 STR X8, [X19 + 0x38]
	0x03CC523C LDP X20, X19, [X31 + 0x10]
	0x03CC5240 LDP X30, X21, [X31], #0x20
	0x03CC5244 RET
	0x03CC5248 ADRP X1, 0xFFFFFFFFFCE56000
	0x03CC524C ADD X1, X1, 0xEE3
	0x03CC5250 MOV X0, X31
	0x03CC5254 BL 0x1C16F3C
	0x03CC5258 MOV X1, X31
	0x03CC525C BL 0x1C16DEC
	0x03CC5260 LDR X8, [X0 + 0x40]
	0x03CC5264 LDR X6, [X0 + 0x18]
	0x03CC5268 LDR X5, [X0 + 0x28]
	0x03CC526C MOV X0, X8
	0x03CC5270 BR X6
	0x03CC5274 STR X30, [X31 - 0x30]!
	0x03CC5278 STP X22, X21, [X31 + 0x10]
	0x03CC527C STP X20, X19, [X31 + 0x20]
	0x03CC5280 ADRP X22, 0x722000
	0x03CC5284 LDRB W8, [X22 + 0x34B]
	0x03CC5288 MOV W19, W2
	0x03CC528C MOV X21, X1
	0x03CC5290 MOV X20, X0
	0x03CC5294 TBNZ X8, 0x0, 0x3CC52B8
	0x03CC5298 ADRP X0, 0x49C000
	0x03CC529C LDR X0, [X0 + 0x258]
	0x03CC52A0 BL 0x1C16CF4
	0x03CC52A4 ADRP X0, 0x42E000
	0x03CC52A8 LDR X0, [X0 + 0x598]
	0x03CC52AC BL 0x1C16CF4
	0x03CC52B0 MOVZ W8, 0x1
	0x03CC52B4 STRB W8, [X22 + 0x34B]
	0x03CC52B8 STR X21, [X20]
	0x03CC52BC CBZ X21, 0x3CC5364
	0x03CC52C0 ADRP X22, 0x42E000
	0x03CC52C4 LDR X22, [X22 + 0x598]
	0x03CC52C8 MOV X0, X21
	0x03CC52CC MOV X1, X31
	0x03CC52D0 BL 0x3CA84C0
	0x03CC52D4 CBZ X0, 0x3CC52F8
	0x03CC52D8 ADRP X8, 0x49C000
	0x03CC52DC LDR X8, [X8 + 0x258]
	0x03CC52E0 LDR X9, [X0]
	0x03CC52E4 LDR X8, [X8]
	0x03CC52E8 LDRB W11, [X9 + 0x130]
	0x03CC52EC LDRB W10, [X8 + 0x130]
	0x03CC52F0 CMP W11, W10
	0x03CC52F4 B.CS 0x3CC5300
	0x03CC52F8 MOV X21, X31
	0x03CC52FC B 0x3CC5314
	0x03CC5300 LDR X9, [X9 + 0xC8]
	0x03CC5304 ADD X9, X9, X10, 0x3, LSL
	0x03CC5308 LDUR X9, [X9 - 0x8]
	0x03CC530C CMP X9, X8
	0x03CC5310 CSEL X21, X0, X31, EQ
	0x03CC5314 STR X21, [X20 + 0x8]
	0x03CC5318 LDR X0, [X22]
	0x03CC531C LDR W8, [X0 + 0xE0]
	0x03CC5320 CBNZ W8, 0x3CC5328
	0x03CC5324 BL 0x1C16DFC
	0x03CC5328 MOV X0, X21
	0x03CC532C MOV X1, X31
	0x03CC5330 MOV X2, X31
	0x03CC5334 BL 0x3C354F8
	0x03CC5338 MOV X8, X31
	0x03CC533C TBZ X0, 0x0, 0x3CC534C
	0x03CC5340 LDR X8, [X20 + 0x8]
	0x03CC5344 CBZ X8, 0x3CC5364
	0x03CC5348 LDR X8, [X8 + 0x28]
	0x03CC534C STR X8, [X20 + 0x10]
	0x03CC5350 STR W19, [X20 + 0x18]
	0x03CC5354 LDP X20, X19, [X31 + 0x20]
	0x03CC5358 LDP X22, X21, [X31 + 0x10]
	0x03CC535C LDR X30, [X31], #0x30
	0x03CC5360 RET
	0x03CC5364 BL 0x1C16F20
	0x03CC5368 STR X30, [X31 - 0x10]!
	0x03CC536C LDR X8, [X0]
	0x03CC5370 CBZ X8, 0x3CC5380
	0x03CC5374 LDR W0, [X8 + 0x18]
	0x03CC5378 LDR X30, [X31], #0x10
	0x03CC537C RET
	0x03CC5380 BL 0x1C16F20
	0x03CC5384 LDR W0, [X0 + 0x8]
	0x03CC5388 RET
	0x03CC538C STR W1, [X0 + 0x8]
	0x03CC5390 RET
	0x03CC5394 STR X30, [X31 - 0x10]!
	0x03CC5398 LDR X8, [X0]
	0x03CC539C CBZ X8, 0x3CC53BC
	0x03CC53A0 LDR W9, [X8 + 0x18]
	0x03CC53A4 CMP W9, W1
	0x03CC53A8 B.LS 0x3CC53C0
	0x03CC53AC ADD X8, X8, W1, 0x2, SXTW
	0x03CC53B0 LDR W0, [X8 + 0x20]
	0x03CC53B4 LDR X30, [X31], #0x10
	0x03CC53B8 RET
	0x03CC53BC BL 0x1C16F20
	0x03CC53C0 BL 0x1C16F28
	0x03CC53C4 STP X30, X21, [X31 - 0x20]!
	0x03CC53C8 STP X20, X19, [X31 + 0x10]
	0x03CC53CC LDR X8, [X0]
	0x03CC53D0 CBZ X8, 0x3CC541C
	0x03CC53D4 LDR W9, [X8 + 0x18]
	0x03CC53D8 MOV W19, W2
	0x03CC53DC MOV W20, W1
	0x03CC53E0 CMP W9, W1
	0x03CC53E4 B.GT 0x3CC53FC
	0x03CC53E8 MOV W1, W20
	0x03CC53EC MOV X21, X0
	0x03CC53F0 BL 0x3CC5424
	0x03CC53F4 LDR X8, [X21]
	0x03CC53F8 CBZ X8, 0x3CC541C
	0x03CC53FC LDR W9, [X8 + 0x18]
	0x03CC5400 CMP W9, W20
	0x03CC5404 B.LS 0x3CC5420
	0x03CC5408 ADD X8, X8, W20, 0x2, SXTW
	0x03CC540C STR W19, [X8 + 0x20]
	0x03CC5410 LDP X20, X19, [X31 + 0x10]
	0x03CC5414 LDP X30, X21, [X31], #0x20
	0x03CC5418 RET
	0x03CC541C BL 0x1C16F20
	0x03CC5420 BL 0x1C16F28
	0x03CC5424 STR X30, [X31 - 0x30]!
	0x03CC5428 STP X22, X21, [X31 + 0x10]
	0x03CC542C STP X20, X19, [X31 + 0x20]
	0x03CC5430 ADRP X22, 0x722000
	0x03CC5434 ADRP X21, 0x494000
	0x03CC5438 LDRB W8, [X22 + 0x34E]
	0x03CC543C LDR X21, [X21 + 0xA58]
	0x03CC5440 MOV W20, W1
	0x03CC5444 MOV X19, X0
	0x03CC5448 TBNZ X8, 0x0, 0x3CC5460
	0x03CC544C ADRP X0, 0x494000
	0x03CC5450 LDR X0, [X0 + 0xA58]
	0x03CC5454 BL 0x1C16CF4
	0x03CC5458 MOVZ W8, 0x1
	0x03CC545C STRB W8, [X22 + 0x34E]
	0x03CC5460 ADD W0, W20, 0x1
	0x03CC5464 MOV X1, X31
	0x03CC5468 BL 0x3C2B340
	0x03CC546C LDR X2, [X21]
	0x03CC5470 MOV W1, W0
	0x03CC5474 MOV X0, X19
	0x03CC5478 LDP X20, X19, [X31 + 0x20]
	0x03CC547C LDP X22, X21, [X31 + 0x10]
	0x03CC5480 LDR X30, [X31], #0x30
	0x03CC5484 B 0x2144574
	0x03CC5488 STR X30, [X31 - 0x30]!
	0x03CC548C STP X22, X21, [X31 + 0x10]
	0x03CC5490 STP X20, X19, [X31 + 0x20]
	0x03CC5494 ADRP X21, 0x722000
	0x03CC5498 ADRP X22, 0x457000
	0x03CC549C LDRB W8, [X21 + 0x34D]
	0x03CC54A0 LDR X22, [X22 + 0xD08]
	0x03CC54A4 MOV W20, W1
	0x03CC54A8 MOV X19, X0
	0x03CC54AC TBNZ X8, 0x0, 0x3CC54C4
	0x03CC54B0 ADRP X0, 0x457000
	0x03CC54B4 LDR X0, [X0 + 0xD08]
	0x03CC54B8 BL 0x1C16CF4
	0x03CC54BC MOVZ W8, 0x1
	0x03CC54C0 STRB W8, [X21 + 0x34D]
	0x03CC54C4 LDR X0, [X22]
	0x03CC54C8 MOV W1, W20
	0x03CC54CC BL 0x1C16D6C
	0x03CC54D0 STR X0, [X19]
	0x03CC54D4 STR W31, [X19 + 0x8]
	0x03CC54D8 LDP X20, X19, [X31 + 0x20]
	0x03CC54DC LDP X22, X21, [X31 + 0x10]
	0x03CC54E0 LDR X30, [X31], #0x30
	0x03CC54E4 RET
	0x03CC54E8 STP W1, W2, [X0]
	0x03CC54EC RET
	0x03CC54F0 LDR V0, [X0]
	0x03CC54F4 RET
	0x03CC54F8 LDR V0, [X0 + 0x4]
	0x03CC54FC RET
	0x03CC5500 LDR V0, [X0 + 0x8]
	0x03CC5504 RET
	0x03CC5508 LDR V0, [X0 + 0xC]
	0x03CC550C RET
	0x03CC5510 STR X30, [X31 - 0x20]!
	0x03CC5514 STP X20, X19, [X31 + 0x10]
	0x03CC5518 ADRP X20, 0x722000
	0x03CC551C ADRP X19, 0x49C000
	0x03CC5520 LDRB W8, [X20 + 0x34F]
	0x03CC5524 LDR X19, [X19 + 0xB38]
	0x03CC5528 TBNZ X8, 0x0, 0x3CC5540
	0x03CC552C ADRP X0, 0x49C000
	0x03CC5530 LDR X0, [X0 + 0xB38]
	0x03CC5534 BL 0x1C16CF4
	0x03CC5538 MOVZ W8, 0x1
	0x03CC553C STRB W8, [X20 + 0x34F]
	0x03CC5540 LDR X0, [X19]
	0x03CC5544 LDR W8, [X0 + 0xE0]
	0x03CC5548 CBNZ W8, 0x3CC5554
	0x03CC554C BL 0x1C16DFC
	0x03CC5550 LDR X0, [X19]
	0x03CC5554 LDR X8, [X0 + 0xB8]
	0x03CC5558 LDP X20, X19, [X31 + 0x10]
	0x03CC555C LDP S0, S1, [X8]
	0x03CC5560 LDP S2, S3, [X8 + 0x8]
	0x03CC5564 LDR X30, [X31], #0x20
	0x03CC5568 RET
	0x03CC556C STP S0, S1, [X0]
	0x03CC5570 STP S2, S3, [X0 + 0x8]
	0x03CC5574 RET
	0x03CC5578 FCMP S0, S4
	0x03CC557C B.NE 0x3CC55A0
	0x03CC5580 FCMP S1, S5
	0x03CC5584 B.NE 0x3CC55A0
	0x03CC5588 FCMP S2, S6
	0x03CC558C CSET W8, EQ
	0x03CC5590 FCMP S3, S7
	0x03CC5594 CSET W9, EQ
	0x03CC5598 AND W0, W8, W9, 0x0
	0x03CC559C RET
	0x03CC55A0 MOV W0, W31
	0x03CC55A4 RET
	0x03CC55A8 FMUL S0, S0, S4
	0x03CC55AC FMUL S1, S1, S4
	0x03CC55B0 FMUL S2, S2, S4
	0x03CC55B4 FMUL S3, S3, S4
	0x03CC55B8 RET
	0x03CC55BC SUB X31, X31, 0x30
	0x03CC55C0 STP X30, X21, [X31 + 0x10]
	0x03CC55C4 STP X20, X19, [X31 + 0x20]
	0x03CC55C8 ADRP X21, 0x722000
	0x03CC55CC ADRP X20, 0x49C000
	0x03CC55D0 LDRB W8, [X21 + 0x350]
	0x03CC55D4 LDR X20, [X20 + 0xB38]
	0x03CC55D8 MOV X19, X0
	0x03CC55DC TBNZ X8, 0x0, 0x3CC55F4
	0x03CC55E0 ADRP X0, 0x49C000
	0x03CC55E4 LDR X0, [X0 + 0xB38]
	0x03CC55E8 BL 0x1C16CF4
	0x03CC55EC MOVZ W8, 0x1
	0x03CC55F0 STRB W8, [X21 + 0x350]
	0x03CC55F4 LDR V0, [X19]
	0x03CC55F8 LDR X0, [X20]
	0x03CC55FC ADD X1, X31, 0x0
	0x03CC5600 STR V0, [X31]
	0x03CC5604 BL 0x1C16E04
	0x03CC5608 MOV X1, X31
	0x03CC560C BL 0x33D55D8
	0x03CC5610 LDP X20, X19, [X31 + 0x20]
	0x03CC5614 LDP X30, X21, [X31 + 0x10]
	0x03CC5618 ADD X31, X31, 0x30
	0x03CC561C RET
	0x03CC5620 SUB X31, X31, 0x40
	0x03CC5624 STR X30, [X31 + 0x10]
	0x03CC5628 STP X22, X21, [X31 + 0x20]
	0x03CC562C STP X20, X19, [X31 + 0x30]
	0x03CC5630 ADRP X22, 0x722000
	0x03CC5634 ADRP X21, 0x49C000
	0x03CC5638 LDRB W8, [X22 + 0x351]
	0x03CC563C LDR X21, [X21 + 0xB38]
	0x03CC5640 MOV X19, X1
	0x03CC5644 MOV X20, X0
	0x03CC5648 TBNZ X8, 0x0, 0x3CC5660
	0x03CC564C ADRP X0, 0x49C000
	0x03CC5650 LDR X0, [X0 + 0xB38]
	0x03CC5654 BL 0x1C16CF4
	0x03CC5658 MOVZ W8, 0x1
	0x03CC565C STRB W8, [X22 + 0x351]
	0x03CC5660 LDR V0, [X20]
	0x03CC5664 LDR X0, [X21]
	0x03CC5668 ADD X1, X31, 0x0
	0x03CC566C STR V0, [X31]
	0x03CC5670 BL 0x1C16E04
	0x03CC5674 MOV X1, X19
	0x03CC5678 MOV X2, X31
	0x03CC567C BL 0x33D55D0
	0x03CC5680 LDP X20, X19, [X31 + 0x30]
	0x03CC5684 LDP X22, X21, [X31 + 0x20]
	0x03CC5688 LDR X30, [X31 + 0x10]
	0x03CC568C AND W0, W0, 0x1
	0x03CC5690 ADD X31, X31, 0x40
	0x03CC5694 RET
	0x03CC5698 STR X30, [X31 - 0x20]!
	0x03CC569C STP X20, X19, [X31 + 0x10]
	0x03CC56A0 ADRP X19, 0x722000
	0x03CC56A4 ADRP X20, 0x49C000
	0x03CC56A8 LDRB W8, [X19 + 0x352]
	0x03CC56AC LDR X20, [X20 + 0xB38]
	0x03CC56B0 TBNZ X8, 0x0, 0x3CC56C8
	0x03CC56B4 ADRP X0, 0x49C000
	0x03CC56B8 LDR X0, [X0 + 0xB38]
	0x03CC56BC BL 0x1C16CF4
	0x03CC56C0 MOVZ W8, 0x1
	0x03CC56C4 STRB W8, [X19 + 0x352]
	0x03CC56C8 LDR X8, [X20]
	0x03CC56CC LDP X20, X19, [X31 + 0x10]
	0x03CC56D0 LDR X8, [X8 + 0xB8]
	0x03CC56D4 STP X31, X31, [X8]
	0x03CC56D8 LDR X30, [X31], #0x20
	0x03CC56DC RET
	0x03CC56E0 STR W1, [X0]
	0x03CC56E4 STP S0, S1, [X0 + 0x4]
	0x03CC56E8 STP S2, S3, [X0 + 0xC]
	0x03CC56EC RET
	0x03CC56F0 STP D15, D14, [X31 - 0x60]!
	0x03CC56F4 STP D13, D12, [X31 + 0x10]
	0x03CC56F8 STP D11, D10, [X31 + 0x20]
	0x03CC56FC STP D9, D8, [X31 + 0x30]
	0x03CC5700 STP X30, X21, [X31 + 0x40]
	0x03CC5704 STP X20, X19, [X31 + 0x50]
	0x03CC5708 ADRP X21, 0x722000
	0x03CC570C LDRB W8, [X21 + 0x353]
	0x03CC5710 MOV X19, X1
	0x03CC5714 MOV X20, X0
	0x03CC5718 TBNZ X8, 0x0, 0x3CC5730
	0x03CC571C ADRP X0, 0x49C000
	0x03CC5720 LDR X0, [X0 + 0xB38]
	0x03CC5724 BL 0x1C16CF4
	0x03CC5728 MOVZ W8, 0x1
	0x03CC572C STRB W8, [X21 + 0x353]
	0x03CC5730 LDRB W8, [X20]
	0x03CC5734 LDRB W9, [X19]
	0x03CC5738 CMP W8, W9
	0x03CC573C B.NE 0x3CC57C4
	0x03CC5740 LDRB W8, [X20 + 0x1]
	0x03CC5744 LDRB W9, [X19 + 0x1]
	0x03CC5748 CMP W8, W9
	0x03CC574C B.NE 0x3CC57C4
	0x03CC5750 LDRB W8, [X20 + 0x2]
	0x03CC5754 LDRB W9, [X19 + 0x2]
	0x03CC5758 CMP W8, W9
	0x03CC575C B.NE 0x3CC57C4
	0x03CC5760 LDRB W8, [X20 + 0x3]
	0x03CC5764 LDRB W9, [X19 + 0x3]
	0x03CC5768 CMP W8, W9
	0x03CC576C B.NE 0x3CC57C4
	0x03CC5770 ADRP X8, 0x49C000
	0x03CC5774 LDP S10, S8, [X20 + 0x4]
	0x03CC5778 LDR X8, [X8 + 0xB38]
	0x03CC577C LDP S11, S9, [X20 + 0xC]
	0x03CC5780 LDP S15, S14, [X19 + 0x4]
	0x03CC5784 LDP S13, S12, [X19 + 0xC]
	0x03CC5788 LDR X0, [X8]
	0x03CC578C LDR W8, [X0 + 0xE0]
	0x03CC5790 CBNZ W8, 0x3CC5798
	0x03CC5794 BL 0x1C16DFC
	0x03CC5798 FCMP S10, S15
	0x03CC579C MOV W0, W31
	0x03CC57A0 B.NE 0x3CC57C8
	0x03CC57A4 FCMP S8, S14
	0x03CC57A8 B.NE 0x3CC57C8
	0x03CC57AC FCMP S11, S13
	0x03CC57B0 CSET W8, EQ
	0x03CC57B4 FCMP S9, S12
	0x03CC57B8 CSET W9, EQ
	0x03CC57BC AND W0, W8, W9, 0x0
	0x03CC57C0 B 0x3CC57C8
	0x03CC57C4 MOV W0, W31
	0x03CC57C8 LDP X20, X19, [X31 + 0x50]
	0x03CC57CC LDP X30, X21, [X31 + 0x40]
	0x03CC57D0 LDP D9, D8, [X31 + 0x30]
	0x03CC57D4 LDP D11, D10, [X31 + 0x20]
	0x03CC57D8 LDP D13, D12, [X31 + 0x10]
	0x03CC57DC LDP D15, D14, [X31], #0x60
	0x03CC57E0 RET
	0x03CC57E4 SUB X31, X31, 0x50
	0x03CC57E8 STR X30, [X31 + 0x40]
	0x03CC57EC LDR W8, [X0 + 0x10]
	0x03CC57F0 LDR V0, [X0]
	0x03CC57F4 ADD X0, X31, 0x20
	0x03CC57F8 STR W8, [X31 + 0x30]
	0x03CC57FC STR V0, [X31 + 0x2]
	0x03CC5800 LDR W8, [X1 + 0x10]
	0x03CC5804 LDR V0, [X1]
	0x03CC5808 ADD X1, X31, 0x0
	0x03CC580C STR W8, [X31 + 0x10]
	0x03CC5810 STR V0, [X31]
	0x03CC5814 BL 0x3CC56F0
	0x03CC5818 LDR X30, [X31 + 0x40]
	0x03CC581C ORN W8, W31, W0, 0x0
	0x03CC5820 AND W0, W8, 0x1
	0x03CC5824 ADD X31, X31, 0x50
	0x03CC5828 RET
	0x03CC582C SUB X31, X31, 0x40
	0x03CC5830 STP X30, X21, [X31 + 0x20]
	0x03CC5834 STP X20, X19, [X31 + 0x30]
	0x03CC5838 ADRP X21, 0x722000
	0x03CC583C ADRP X20, 0x49C000
	0x03CC5840 LDRB W8, [X21 + 0x354]
	0x03CC5844 LDR X20, [X20 + 0x7C8]
	0x03CC5848 MOV X19, X0
	0x03CC584C TBNZ X8, 0x0, 0x3CC5864
	0x03CC5850 ADRP X0, 0x49C000
	0x03CC5854 LDR X0, [X0 + 0x7C8]
	0x03CC5858 BL 0x1C16CF4
	0x03CC585C MOVZ W8, 0x1
	0x03CC5860 STRB W8, [X21 + 0x354]
	0x03CC5864 LDR W8, [X19 + 0x10]
	0x03CC5868 LDR V0, [X19]
	0x03CC586C LDR X0, [X20]
	0x03CC5870 ADD X1, X31, 0x0
	0x03CC5874 STR W8, [X31 + 0x10]
	0x03CC5878 STR V0, [X31]
	0x03CC587C BL 0x1C16E04
	0x03CC5880 MOV X1, X31
	0x03CC5884 BL 0x33D55D8
	0x03CC5888 LDP X20, X19, [X31 + 0x30]
	0x03CC588C LDP X30, X21, [X31 + 0x20]
	0x03CC5890 ADD X31, X31, 0x40
	0x03CC5894 RET
	0x03CC5898 SUB X31, X31, 0x50
	0x03CC589C STR X30, [X31 + 0x20]
	0x03CC58A0 STP X22, X21, [X31 + 0x30]
	0x03CC58A4 STP X20, X19, [X31 + 0x40]
	0x03CC58A8 ADRP X22, 0x722000
	0x03CC58AC ADRP X21, 0x49C000
	0x03CC58B0 LDRB W8, [X22 + 0x355]
	0x03CC58B4 LDR X21, [X21 + 0x7C8]
	0x03CC58B8 MOV X19, X1
	0x03CC58BC MOV X20, X0
	0x03CC58C0 TBNZ X8, 0x0, 0x3CC58D8
	0x03CC58C4 ADRP X0, 0x49C000
	0x03CC58C8 LDR X0, [X0 + 0x7C8]
	0x03CC58CC BL 0x1C16CF4
	0x03CC58D0 MOVZ W8, 0x1
	0x03CC58D4 STRB W8, [X22 + 0x355]
	0x03CC58D8 LDR W8, [X20 + 0x10]
	0x03CC58DC LDR V0, [X20]
	0x03CC58E0 LDR X0, [X21]
	0x03CC58E4 ADD X1, X31, 0x0
	0x03CC58E8 STR W8, [X31 + 0x10]
	0x03CC58EC STR V0, [X31]
	0x03CC58F0 BL 0x1C16E04
	0x03CC58F4 MOV X1, X19
	0x03CC58F8 MOV X2, X31
	0x03CC58FC BL 0x33D55D0
	0x03CC5900 LDP X20, X19, [X31 + 0x40]
	0x03CC5904 LDP X22, X21, [X31 + 0x30]
	0x03CC5908 LDR X30, [X31 + 0x20]
	0x03CC590C AND W0, W0, 0x1
	0x03CC5910 ADD X31, X31, 0x50
	0x03CC5914 RET
	0x03CC5918 ADRP X8, 0xFFFFFFFFFCE25000
	0x03CC591C ADRP X9, 0xFFFFFFFFFCE24000
	0x03CC5920 LDR V2, [X8 + 0x2F0]
	0x03CC5924 LDR V3, [X9 + 0xF28]
	0x03CC5928 FADD S2, S1, S2
	0x03CC592C FADD S1, S1, S3
	0x03CC5930 FCMP S2, S0
	0x03CC5934 CSET W8, MI
	0x03CC5938 FCMP S1, S0
	0x03CC593C CSET W9, GT
	0x03CC5940 AND W0, W8, W9, 0x0
	0x03CC5944 RET
	0x03CC5948 STP X30, X25, [X31 - 0x40]!
	0x03CC594C STP X24, X23, [X31 + 0x10]
	0x03CC5950 STP X22, X21, [X31 + 0x20]
	0x03CC5954 STP X20, X19, [X31 + 0x30]
	0x03CC5958 ADRP X21, 0x722000
	0x03CC595C LDRB W8, [X21 + 0x356]
	0x03CC5960 MOV W20, W1
	0x03CC5964 MOV X19, X0
	0x03CC5968 TBNZ X8, 0x0, 0x3CC5980
	0x03CC596C ADRP X0, 0x49C000
	0x03CC5970 LDR X0, [X0 + 0xB48]
	0x03CC5974 BL 0x1C16CF4
	0x03CC5978 MOVZ W8, 0x1
	0x03CC597C STRB W8, [X21 + 0x356]
	0x03CC5980 SUB W8, W20, 0x4
	0x03CC5984 CMP W8, 0xB
	0x03CC5988 MOVN W21, 0x0
	0x03CC598C B.HI 0x3CC5F30
	0x03CC5990 ADRP X9, 0xFFFFFFFFFCED2000
	0x03CC5994 ADD X9, X9, 0xF0E
	0x03CC5998 ADR X10, 0x10
	0x03CC599C LDRH W11, [X9, X8, LSL #1]
	0x03CC59A0 ADD X10, X10, X11, 0x2, LSL
	0x03CC59A4 BR X10
	0x03CC59A8 CBZ X19, 0x3CC5F4C
	0x03CC59AC LDR X21, [X19 + 0x18]
	0x03CC59B0 CMP W21, 0x1
	0x03CC59B4 B.LS 0x3CC5F48
	0x03CC59B8 ADRP X8, 0x49C000
	0x03CC59BC LDR X8, [X8 + 0xB48]
	0x03CC59C0 LDRH W20, [X19 + 0x22]
	0x03CC59C4 LDR X0, [X8]
	0x03CC59C8 LDR W8, [X0 + 0xE0]
	0x03CC59CC CBNZ W8, 0x3CC59D8
	0x03CC59D0 BL 0x1C16DFC
	0x03CC59D4 LDR X21, [X19 + 0x18]
	0x03CC59D8 CMP W21, 0x1
	0x03CC59DC B.LS 0x3CC5F48
	0x03CC59E0 MOV W0, W20
	0x03CC59E4 BL 0x3CC5F50
	0x03CC59E8 LDRH W8, [X19 + 0x22]
	0x03CC59EC MOV W20, W0
	0x03CC59F0 MOV W0, W8
	0x03CC59F4 BL 0x3CC5F50
	0x03CC59F8 CMP W21, 0x2
	0x03CC59FC B.EQ 0x3CC5F48
	0x03CC5A00 CMP W21, 0x3
	0x03CC5A04 B.LS 0x3CC5F48
	0x03CC5A08 LDRH W8, [X19 + 0x24]
	0x03CC5A0C ADD W20, W0, W20, 0x4, LSL
	0x03CC5A10 MOV W0, W8
	0x03CC5A14 BL 0x3CC5F50
	0x03CC5A18 LDRH W8, [X19 + 0x26]
	0x03CC5A1C B 0x3CC5F0C
	0x03CC5A20 CBZ X19, 0x3CC5F4C
	0x03CC5A24 LDR X23, [X19 + 0x18]
	0x03CC5A28 CMP W23, 0x1
	0x03CC5A2C B.LS 0x3CC5F48
	0x03CC5A30 ADRP X8, 0x49C000
	0x03CC5A34 LDR X8, [X8 + 0xB48]
	0x03CC5A38 LDRH W20, [X19 + 0x22]
	0x03CC5A3C LDR X0, [X8]
	0x03CC5A40 LDR W8, [X0 + 0xE0]
	0x03CC5A44 CBNZ W8, 0x3CC5A50
	0x03CC5A48 BL 0x1C16DFC
	0x03CC5A4C LDR X23, [X19 + 0x18]
	0x03CC5A50 CMP W23, 0x1
	0x03CC5A54 B.LS 0x3CC5F48
	0x03CC5A58 MOV W0, W20
	0x03CC5A5C BL 0x3CC5F50
	0x03CC5A60 LDRH W8, [X19 + 0x22]
	0x03CC5A64 MOV W21, W0
	0x03CC5A68 MOV W0, W8
	0x03CC5A6C BL 0x3CC5F50
	0x03CC5A70 CMP W23, 0x2
	0x03CC5A74 B.EQ 0x3CC5F48
	0x03CC5A78 MOV W22, W0
	0x03CC5A7C LDRH W0, [X19 + 0x24]
	0x03CC5A80 BL 0x3CC5F50
	0x03CC5A84 CMP W23, 0x3
	0x03CC5A88 B.LS 0x3CC5F48
	0x03CC5A8C CMP W23, 0x4
	0x03CC5A90 B.EQ 0x3CC5F48
	0x03CC5A94 MOV W20, W0
	0x03CC5A98 LDRH W0, [X19 + 0x26]
	0x03CC5A9C ADD W22, W22, W21, 0x4, LSL
	0x03CC5AA0 BL 0x3CC5F50
	0x03CC5AA4 LDRH W8, [X19 + 0x28]
	0x03CC5AA8 B 0x3CC5B34
	0x03CC5AAC CBZ X19, 0x3CC5F4C
	0x03CC5AB0 LDR X23, [X19 + 0x18]
	0x03CC5AB4 CMP W23, 0x7
	0x03CC5AB8 B.LS 0x3CC5F48
	0x03CC5ABC ADRP X8, 0x49C000
	0x03CC5AC0 LDR X8, [X8 + 0xB48]
	0x03CC5AC4 LDRH W20, [X19 + 0x2E]
	0x03CC5AC8 LDR X0, [X8]
	0x03CC5ACC LDR W8, [X0 + 0xE0]
	0x03CC5AD0 CBNZ W8, 0x3CC5ADC
	0x03CC5AD4 BL 0x1C16DFC
	0x03CC5AD8 LDR X23, [X19 + 0x18]
	0x03CC5ADC CMP W23, 0x7
	0x03CC5AE0 B.LS 0x3CC5F48
	0x03CC5AE4 MOV W0, W20
	0x03CC5AE8 BL 0x3CC5F50
	0x03CC5AEC LDRH W8, [X19 + 0x2E]
	0x03CC5AF0 MOV W21, W0
	0x03CC5AF4 MOV W0, W8
	0x03CC5AF8 BL 0x3CC5F50
	0x03CC5AFC CMP W23, 0x8
	0x03CC5B00 B.EQ 0x3CC5F48
	0x03CC5B04 MOV W22, W0
	0x03CC5B08 LDRH W0, [X19 + 0x30]
	0x03CC5B0C BL 0x3CC5F50
	0x03CC5B10 CMP W23, 0x9
	0x03CC5B14 B.LS 0x3CC5F48
	0x03CC5B18 CMP W23, 0xA
	0x03CC5B1C B.EQ 0x3CC5F48
	0x03CC5B20 MOV W20, W0
	0x03CC5B24 LDRH W0, [X19 + 0x32]
	0x03CC5B28 ADD W22, W22, W21, 0x4, LSL
	0x03CC5B2C BL 0x3CC5F50
	0x03CC5B30 LDRH W8, [X19 + 0x34]
	0x03CC5B34 MOV W19, W0
	0x03CC5B38 MOV W0, W8
	0x03CC5B3C BL 0x3CC5F50
	0x03CC5B40 ADD W9, W19, W19, 0x4, LSL
	0x03CC5B44 ADD W8, W0, W0, 0x4, LSL
	0x03CC5B48 UBFM W21, W9, 0x10, 0x7
	0x03CC5B4C BFM W21, W8, 0x8, 0x7
	0x03CC5B50 ADD W8, W20, W20, 0x4, LSL
	0x03CC5B54 BFM W21, W8, 0x18, 0x7
	0x03CC5B58 BFM W21, W22, 0x0, 0x7
	0x03CC5B5C B 0x3CC5F30
	0x03CC5B60 CBZ X19, 0x3CC5F4C
	0x03CC5B64 LDR X23, [X19 + 0x18]
	0x03CC5B68 CMP W23, 0x7
	0x03CC5B6C B.LS 0x3CC5F48
	0x03CC5B70 ADRP X8, 0x49C000
	0x03CC5B74 LDR X8, [X8 + 0xB48]
	0x03CC5B78 LDRH W20, [X19 + 0x2E]
	0x03CC5B7C LDR X0, [X8]
	0x03CC5B80 LDR W8, [X0 + 0xE0]
	0x03CC5B84 CBNZ W8, 0x3CC5B90
	0x03CC5B88 BL 0x1C16DFC
	0x03CC5B8C LDR X23, [X19 + 0x18]
	0x03CC5B90 CMP W23, 0x8
	0x03CC5B94 B.LS 0x3CC5F48
	0x03CC5B98 MOV W0, W20
	0x03CC5B9C BL 0x3CC5F50
	0x03CC5BA0 LDRH W8, [X19 + 0x30]
	0x03CC5BA4 MOV W20, W0
	0x03CC5BA8 MOV W0, W8
	0x03CC5BAC BL 0x3CC5F50
	0x03CC5BB0 CMP W23, 0x9
	0x03CC5BB4 B.EQ 0x3CC5F48
	0x03CC5BB8 CMP W23, 0xA
	0x03CC5BBC B.LS 0x3CC5F48
	0x03CC5BC0 MOV W21, W0
	0x03CC5BC4 LDRH W0, [X19 + 0x32]
	0x03CC5BC8 BL 0x3CC5F50
	0x03CC5BCC LDRH W8, [X19 + 0x34]
	0x03CC5BD0 MOV W22, W0

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 3456
	022 Move X20, 0x725000
	023 Move W8, [X20+838]
	024 Move X23, X5
	025 Move X19, X4
	026 Move W28, W3
	027 Move W24, W2
	028 Move V8, V0
	029 Move X26, X1
	030 Move X21, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {94}
	035 Move X0, 0x433000
	036 Move X0, [X0+368]
	037 Call 0x1C17CF4
	038 Move X0, 0x431000
	039 Move X0, [X0+2600]
	040 Call 0x1C17CF4
	041 Move X0, 0x49F000
	042 Move X0, [X0+2848]
	043 Call 0x1C17CF4
	044 Move X0, 0x49F000
	045 Move X0, [X0+2856]
	046 Call 0x1C17CF4
	047 Move X0, 0x49F000
	048 Move X0, [X0+2864]
	049 Call 0x1C17CF4
	050 Move X0, 0x49F000
	051 Move X0, [X0+592]
	052 Call 0x1C17CF4
	053 Move X0, 0x496000
	054 Move X0, [X0+3584]
	055 Call 0x1C17CF4
	056 Move X0, 0x431000
	057 Move X0, [X0+1448]
	058 Call 0x1C17CF4
	059 Move X0, 0x431000
	060 Move X0, [X0+1432]
	061 Call 0x1C17CF4
	062 Move X0, 0x49F000
	063 Move X0, [X0+1864]
	064 Call 0x1C17CF4
	065 Move X0, 0x49F000
	066 Move X0, [X0+2880]
	067 Call 0x1C17CF4
	068 Move X0, 0x49F000
	069 Move X0, [X0+3480]
	070 Call 0x1C17CF4
	071 Move X0, 0x49F000
	072 Move X0, [X0+2888]
	073 Call 0x1C17CF4
	074 Move X0, 0x49F000
	075 Move X0, [X0+2896]
	076 Call 0x1C17CF4
	077 Move X0, 0x49F000
	078 Move X0, [X0+2944]
	079 Call 0x1C17CF4
	080 Move X0, 0x49F000
	081 Move X0, [X0+2984]
	082 Call 0x1C17CF4
	083 Move X0, 0x49F000
	084 Move X0, [X0+2992]
	085 Call 0x1C17CF4
	086 Move X0, 0x49F000
	087 Move X0, [X0+3000]
	088 Call 0x1C17CF4
	089 Move X0, 0x49F000
	090 Move X0, [X0+3040]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X20+838], W8
	094 Add X0, X31, 2528
	095 Move W2, 920
	096 Move W1, W31
	097 Move [X31+3448], X31
	098 Call 0x3EB2B10
	099 Add X0, X31, 1608
	100 Move W2, 920
	101 Move W1, W31
	102 Call 0x3EB2B10
	103 Add X0, X31, 688
	104 Move W2, 920
	105 Move W1, W31
	106 Call 0x3EB2B10
	107 NotImplemented "Instruction MOVI not yet implemented."
	108 Add X8, X31, 237
	109 Move [X31+568], X31
	110 Move [X31+560], X31
	111 Move [X31+576], W31
	112 Move [X31+552], X31
	113 Move [X31+544], X31
	114 Move [X31+540], W31
	115 Move [X31+520], X31
	116 Move [X31+512], X31
	117 Move [X31+528], W31
	118 Move [X31+432], X31
	119 Move [X31+440], X31
	120 Move [X31+448], W31
	121 Move [X31+408], X31
	122 Move [X31+416], X31
	123 Move [X31+424], X31
	124 Move [X31+392], X31
	125 Move [X31+400], X31
	126 Move [X31+368], X31
	127 Move [X31+376], X31
	128 Move [X31+384], X31
	129 Move [X31+344], X31
	130 Move [X31+352], X31
	131 Move [X31+360], X31
	132 Move [X31+320], X31
	133 Move [X31+328], X31
	134 Move [X31+656], V0
	135 Move [X31+664], V0
	136 Move [X31+624], V0
	137 Move [X31+632], V0
	138 Move [X31+592], V0
	139 Move [X31+600], V0
	140 Move [X8+255], V0
	141 Move [X31+464], V0
	142 Move [X31+472], V0
	143 Move [X31+336], W31
	144 Compare X19, 0
	145 JumpIfEqual {2838}
	146 Move X8, 0x431000
	147 Move X8, [X8+1432]
	148 Move X25, [X19+64]
	149 Move W9, 0x1578
	150 Add X22, X21, X9
	151 Move X0, [X8]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X25
	157 Move X1, X31
	158 Move X2, X31
	159 Call Object.op_Equality, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {224}
	164 Move X0, [X19+64]
	165 Compare X0, 0
	166 JumpIfEqual {2838}
	167 Move X1, X31
	168 Call FontAsset.get_characterLookupTable, X0
	169 Compare X0, 0
	170 JumpIfEqual {224}
	171 Move X8, [X21+32]
	172 Compare X8, 0
	173 JumpIfEqual {236}
	174 Move X9, [X8+24]
	175 Compare X9, 0
	176 JumpIfEqual {236}
	177 Compare W9, 0
	178 JumpIfEqual {2839}
	179 Move W8, [X8+36]
	180 Compare W8, 0
	181 JumpIfEqual {236}
	182 Move X2, [X19+64]
	183 Move X20, X21
	184 NotImplemented "Instruction MOVI not yet implemented."
	185 Add X0, X31, 256
	186 Move [X20+104], X2
	187 Move X4, [X19+72]
	188 Move V0, [X20+112]
	189 Move W1, W31
	190 Move X3, X31
	191 Move X5, X31
	192 Move [X31+28], W24
	193 Move [X20+16], W31
	194 Add X25, X20, 24
	195 Move [X20+8], X4
	196 Move [X31+304], X31
	197 Move [X31+272], V1
	198 Move [X31+280], V1
	199 Move [X31+16], V1
	200 Call MaterialReference..ctor, X0, X1, X2, X3, X4, V0
	201 Move X8, 0x49F000
	202 Move X8, [X8+3000]
	203 Move V0, [X31+256]
	204 Move V1, [X31+272]
	205 Move V2, [X31+18]
	206 Move X9, [X31+304]
	207 Move X2, [X8]
	208 Add X1, X31, 160
	209 Move X0, X25
	210 Move [X31+160], V0
	211 Move [X31+168], V1
	212 Move [X31+12], V2
	213 Move [X31+208], X9
	214 Call TextProcessingStack`1<MaterialReference>.SetDefault, X0, X1
	215 Move X8, [X20+6616]
	216 Move W27, [X20+128]
	217 Move [X31+144], X20
	218 Compare X8, 0
	219 JumpIfEqual {222}
	220 Move W8, [X8+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Add W1, W27, 256
	224 Move X8, 0x431000
	225 Move X8, [X8+2600]
	226 Move X19, 0x49F000
	227 Move X0, [X8]
	228 Move W8, [X0+224]
	229 Move X19, [X19+3040]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, [X19]
	234 Move X1, X31
	235 Call Debug.LogWarning, X0
	236 Move W19, 1
	237 Move [X22+48], W19
	238 Move X20, 0x717000
	239 Move W8, [X20+1935]
	240 Compare W8, 0
	241 JumpIfNotEqual {246}
	242 Move X0, 0x439000
	243 Move X0, [X0+3848]
	244 Call 0x1C17CF4
	245 Move [X20+1935], W19
	246 Move X8, 0x439000
	247 Move X8, [X8+3848]
	248 Move X8, [X8]
	249 Move X8, [X8+184]
	250 Move V0, [X8]
	251 Move S1, V0.S[1]
	252 Add X31, X31, 3456
	253 Move X20, [X31+144]
	254 Move X19, [X31+152]
	255 Move X22, [X31+128]
	256 Move X21, [X31+136]
	257 Move X24, [X31+112]
	258 Move X23, [X31+120]
	259 Move X26, [X31+96]
	260 Move X25, [X31+104]
	261 Move X28, [X31+80]
	262 Move X27, [X31+88]
	263 Move X29, [X31+64]
	264 Move X30, [X31+72]
	265 Move D9, [X31+48]
	266 Move D8, [X31+56]
	267 Move D11, [X31+32]
	268 Move D10, [X31+40]
	269 Move D13, [X31+16]
	270 Move D12, [X31+24]
	271 Move D15, [X31+160]
	272 Move D14, [X31+168]
	273 Return X0
	274 Move W0, W27
	275 Move X1, X31
	276 Call Mathf.NextPowerOfTwo, X0
	277 Move W1, W0
	278 Move X8, 0x49F000
	279 Move X8, [X8+3480]
	280 Move X0, [X8]
	281 Call 0x1C17D6C
	282 Move [X21+6720], X0
	283 Move X0, [X19+64]
	284 Move [X31+100], W28
	285 Compare X0, 0
	286 JumpIfEqual {2838}
	287 Move V13, [X26]
	288 Add X8, X31, 160
	289 Move X1, X31
	290 Call FontAsset.get_faceInfo, X0
	291 Add X0, X31, 592
	292 Add X1, X31, 160
	293 Move W2, 96
	294 Call 0x3EB2AC0
	295 Add X0, X31, 592
	296 Move X1, X31
	297 Call FaceInfo.get_pointSize, X0
	298 Move X9, [X19+64]
	299 Compare X9, 0
	300 JumpIfEqual {2838}
	301 Move W28, W0
	302 Add X8, X31, 160
	303 Move X0, X9
	304 Move X1, X31
	305 Call FontAsset.get_faceInfo, X0
	306 Add X0, X31, 592
	307 Add X1, X31, 160
	308 Move W2, 96
	309 Call 0x3EB2AC0
	310 Add X0, X31, 592
	311 Move X1, X31
	312 Call FaceInfo.get_scale, X0
	313 Move W9, 0x3F800000
	314 Move W8, [X19+189]
	315 Move V14, [X26]
	316 Move [X21+240], W9
	317 Move V9, V0
	318 Move V0, [X26]
	319 Move X20, 0x49F000
	320 Move X9, -52264960
	321 Move V2, [X9+188]
	322 Move [X21+244], S0
	323 Move X20, [X20+2992]
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move S1, 1
	326 Add X0, X21, 248
	327 Move X1, [X20]
	328 Move [X31+84], S2
	329 NotImplemented "Instruction FCSEL not yet implemented."
	330 Call TextProcessingStack`1<Single>.SetDefault, X0, V0
	331 Move W8, [X19+96]
	332 Add X0, X21, 352
	333 Move [X21+292], W8
	334 Move W1, [X19+112]
	335 Move X8, 0x49F000
	336 Move [X21+344], W1
	337 Move X8, [X8+2984]
	338 Move X2, [X8]
	339 Call TextProcessingStack`1<Int32Enum>.SetDefault, X0, X1
	340 Move [X21+384], W31
	341 Move X8, 0x49F000
	342 Move X8, [X8+2944]
	343 Add X0, X21, 392
	344 Move X1, [X8]
	345 Call TextProcessingStack`1<Single>.Clear, X0
	346 Move X24, 0x716000
	347 Move W8, [X24+2139]
	348 Compare W8, 0
	349 JumpIfNotEqual {355}
	350 Move X0, 0x431000
	351 Move X0, [X0+1440]
	352 Call 0x1C17CF4
	353 Move W8, 1
	354 Move [X24+2139], W8
	355 Move X8, 0x431000
	356 Move X8, [X8+1440]
	357 Move X9, -52252672
	358 Move X0, [X21+104]
	359 Move V2, [X9+1872]
	360 Move X8, [X8]
	361 Move X8, [X8+184]
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 Move V1, [X8+20]
	364 Move [X21+736], D2
	365 Move [X21+6568], D0
	366 Move [X21+6576], S1
	367 Compare X0, 0
	368 JumpIfEqual {2838}
	369 Add X8, X31, 160
	370 Move X1, X31
	371 Call FontAsset.get_faceInfo, X0
	372 Add X0, X31, 592
	373 Add X1, X31, 160
	374 Move W2, 96
	375 Call 0x3EB2AC0
	376 Add X0, X31, 592
	377 Move X1, X31
	378 Call FaceInfo.get_lineHeight, X0
	379 Move X24, [X31+144]
	380 Move X0, [X24]
	381 Compare X0, 0
	382 JumpIfEqual {2838}
	383 Add X8, X31, 160
	384 Move X1, X31
	385 Move V10, V0
	386 Move [X31+32], X26
	387 Call FontAsset.get_faceInfo, X0
	388 Add X0, X31, 592
	389 Add X1, X31, 160
	390 Move W2, 96
	391 Call 0x3EB2AC0
	392 Add X0, X31, 592
	393 Move X1, X31
	394 Call FaceInfo.get_ascentLine, X0
	395 Move X0, [X24]
	396 Compare X0, 0
	397 JumpIfEqual {2838}
	398 Add X8, X31, 160
	399 Move X1, X31
	400 Move V11, V0
	401 Add X24, X21, 804
	402 Call FontAsset.get_faceInfo, X0
	403 Add X0, X31, 592
	404 Add X1, X31, 160
	405 Move W2, 96
	406 Call 0x3EB2AC0
	407 Add X0, X31, 592
	408 Move X1, X31
	409 Call FaceInfo.get_descentLine, X0
	410 Move V12, V0
	411 Add X8, X21, 748
	412 NotImplemented "Instruction MOVI not yet implemented."
	413 Move [X8], V0
	414 Move [X8+16], W31
	415 Move X1, [X20]
	416 Add X0, X21, 768
	417 Move S0, W31
	418 Call TextProcessingStack`1<Single>.SetDefault, X0, V0
	419 Move X8, -52252672
	420 Move V0, [X8+2856]
	421 Move W9, 0x80000000
	422 Move [X21+800], W31
	423 Move [X24], X31
	424 Move [X21+832], W31
	425 Move [X21+5548], W31
	426 Move [X21+744], W31
	427 Move [X21+6596], W9
	428 Move [X21+824], D0
	429 Move X9, [X19+104]
	430 NotImplemented "Instruction MOVI not yet implemented."
	431 Move W8, 0xBF800000
	432 Move [X31+64], D0
	433 Move [X24+48], D1
	434 Move [X21+860], W8
	435 Move W8, 1
	436 NotImplemented "Instruction MOVI not yet implemented."
	437 Add X0, X31, 3448
	438 Move TEMP, 0
	439 Not TEMP
	440 Move W1, TEMP
	441 Move W2, W31
	442 Move X3, X31
	443 Move [X31+16], X9
	444 Move [X31+152], X24
	445 Move [X22+1136], W8
	446 Move [X31+120], D0
	447 Move [X21+880], D1
	448 Move [X21+888], W31
	449 Move [X21+893], W31
	450 Call CharacterSubstitution..ctor, X0, X1, X2
	451 Add X0, X31, 2528
	452 Move W2, 920
	453 Move W1, W31
	454 Call 0x3EB2B10
	455 Add X0, X31, 1608
	456 Move W2, 920
	457 Move W1, W31
	458 Call 0x3EB2B10
	459 Add X0, X31, 688
	460 Move W2, 920
	461 Move W1, W31
	462 Call 0x3EB2B10
	463 Move X8, 0x49F000
	464 Move X8, [X8+2896]
	465 Move X8, [X8]
	466 Move X8, [X8+184]
	467 Move [X8+8], W31
	468 Move W8, [X21+5536]
	469 Move X1, [X21+32]
	470 Add W8, W8, 1
	471 Move [X21+5536], W8
	472 Compare X1, 0
	473 JumpIfEqual {2838}
	474 Subtract W9, W27, 1
	475 Move [X31+108], W9
	476 Move W9, [X31+100]
	477 Subtract S1, S11, S12
	478 Move X10, -52264960
	479 Subtract S1, S10, S1
	480 Move [X31+52], S1
	481 Move V1, [X10+92]
	482 Move X8, -52264960
	483 And W9, W9, 0xFFFFFFFE
	484 Move [X31+56], W9
	485 Move [X31+60], W31
	486 Move X9, -52269056
	487 Move V3, [X8+816]
	488 NotImplemented "Instruction SCVTF not yet implemented."
	489 Move V2, [X9+3880]
	490 NotImplemented "Instruction FDIV not yet implemented."
	491 Move [X31+12], S1
	492 Move S1, W31
	493 Multiply S0, S0, S9
	494 Move [X31+80], S1
	495 Move S1, W31
	496 Move [X31+76], S1
	497 Multiply S1, S0, S15
	498 Multiply S0, S14, S3
	499 Add S4, S8, S2
	500 Multiply S0, S15, S0
	501 Move W8, 1
	502 Move W26, W31
	503 Move W29, 392
	504 Move [X31+44], S3
	505 Move [X31+52], S1
	506 Move [X31+92], S4
	507 Move [X31+100], S0
	508 Move V14, V1
	509 Move [X31+88], W8
	510 Move W8, [X1+24]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Add X8, X1, W26
	513 Move W27, [X8+36]
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Compare W27, 0
	516 JumpIfEqual {2736}
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move W8, [X19+181]
	519 Compare W8, 0
	520 JumpIfEqual {538}
	521 Move W8, 257
	522 Add W2, W26, 1
	523 Add X3, X31, 540
	524 Move X0, X21
	525 Move X4, X19
	526 Move X5, X23
	527 NotImplemented "Instruction STRH not yet implemented."
	528 Call TextGenerator.ValidateHtmlTag, X0, X1, X2, X3, X4, X5
	529 Move TEMP, X0
	530 And TEMP, TEMP, 1
	531 Compare TEMP, 1
	532 JumpIfNotEqual {536}
	533 Move W8, [X22]
	534 Move W26, [X31+540]
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Compare X23, 0
	537 JumpIfNotEqual {554}
	538 Compare X23, 0
	539 JumpIfEqual {2838}
	540 Move X8, [X23+48]
	541 Compare X8, 0
	542 JumpIfEqual {2838}
	543 Move X9, [X31+152]
	544 Move W10, [X8+24]
	545 NotImplemented "Instruction LDRSW not yet implemented."
	546 NotImplemented "Instruction CMP not yet implemented."
	547 NotImplemented "Instruction MADD not yet implemented."
	548 Move W9, [X8+40]
	549 Move [X22], W9
	550 Move W9, [X8+96]
	551 Move [X21+120], W9
	552 Move X8, [X8+64]
	553 Move [X21+104], X8
	554 Move X8, [X23+48]
	555 Compare X8, 0
	556 JumpIfEqual {2838}
	557 NotImplemented "Instruction LDRSW not yet implemented."
	558 Move W9, [X8+24]
	559 NotImplemented "Instruction CMP not yet implemented."
	560 NotImplemented "Instruction MADD not yet implemented."
	561 Move W8, [X8+100]
	562 Move W20, [X21+120]
	563 Move [X22+1], W31
	564 Move W24, W31
	565 Move [X31+132], W8
	566 Move W8, [X31+3448]
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Move W27, [X31+3452]
	569 Move W8, 0x2026
	570 Move W24, 1
	571 Move [X22], W24
	572 NotImplemented "Instruction CMP not yet implemented."
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X24, [X21+6720]
	575 Compare X24, 0
	576 JumpIfEqual {2838}
	577 Move X8, [X31+144]
	578 Move X0, [X8]
	579 Compare X0, 0
	580 JumpIfEqual {2838}
	581 Move X1, X31
	582 Call FontAsset.get_characterLookupTable, X0
	583 Compare X0, 0
	584 JumpIfEqual {2838}
	585 Move X8, 0x49F000
	586 Move X8, [X8+592]
	587 Move W1, 3
	588 Move X2, [X8]
	589 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	590 Move W8, [X24+24]
	591 NotImplemented "Instruction CMP not yet implemented."
	592 NotImplemented "Instruction MADD not yet implemented."
	593 Move [X8+48], X0
	594 Move X8, 0x49F000
	595 Move X8, [X8+2896]
	596 Move W24, 1
	597 Move W27, 3
	598 Move X8, [X8]
	599 Move X8, [X8+184]
	600 Move [X8+8], W24
	601 Move X8, [X21+6720]
	602 Compare X8, 0
	603 JumpIfEqual {2838}
	604 Move W9, [X8+24]
	605 NotImplemented "Instruction CMP not yet implemented."
	606 Move X9, [X21+6656]
	607 NotImplemented "Instruction NOP not yet implemented."
	608 NotImplemented "Instruction MADD not yet implemented."
	609 Move W24, 1
	610 Move [X8+40], W24
	611 Move [X8+48], X9
	612 Move X9, [X21+6664]
	613 Move W27, 0x2026
	614 Move [X8+64], X9
	615 Move X9, [X21+6672]
	616 Move [X8+88], X9
	617 Move W9, [X21+6680]
	618 Move [X8+96], W9
	619 Move X8, 0x49F000
	620 Move X8, [X8+2896]
	621 Add W9, W25, 1
	622 Move X8, [X8]
	623 Move X8, [X8+184]
	624 Move [X8+8], W24
	625 Move W8, 3
	626 Move [X31+3448], W9
	627 Move [X31+3452], W8
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Move W8, [X19+228]
	630 NotImplemented "Instruction CMP not yet implemented."
	631 Move X8, [X21+6720]
	632 Compare X8, 0
	633 JumpIfEqual {2838}
	634 Move W9, [X8+24]
	635 NotImplemented "Instruction CMP not yet implemented."
	636 NotImplemented "Instruction MADD not yet implemented."
	637 Move W10, 0x200B
	638 Move [X8+416], W31
	639 NotImplemented "Instruction STRH not yet implemented."
	640 Move [X8+108], W31
	641 Move X8, [X31+152]
	642 Add W9, W25, 1
	643 Move [X8], W9
	644 Move V12, V14
	645 Move X1, [X21+32]
	646 Add W26, W26, 1
	647 Move V14, V12
	648 Compare X1, 0
	649 JumpIfNotEqual {510}
	650 Move W8, [X22]
	651 NotImplemented "Instruction CMP not yet implemented."
	652 Move W8, [X21+292]
	653 Move TEMP, X8
	654 And TEMP, TEMP, 16
	655 Compare TEMP, 16
	656 JumpIfEqual {696}
	657 Move TEMP, X8
	658 And TEMP, TEMP, 8
	659 Compare TEMP, 8
	660 JumpIfEqual {722}
	661 Move S0, 1
	662 Move [X31+128], S0
	663 Move TEMP, X8
	664 And TEMP, TEMP, 32
	665 Compare TEMP, 32
	666 JumpIfNotEqual {749}
	667 Move X8, 0x433000
	668 Move X8, [X8+368]
	669 Move X0, [X8]
	670 Move W8, [X0+224]
	671 Compare W8, 0
	672 JumpIfNotEqual {674}
	673 Call 0x1C17DFC
	674 Move W0, W27
	675 Move X1, X31
	676 Call Char.IsLower, X0
	677 Move TEMP, X0
	678 And TEMP, TEMP, 1
	679 Compare TEMP, 1
	680 JumpIfNotEqual {749}
	681 Move X8, 0x433000
	682 Move X8, [X8+368]
	683 Move X0, [X8]
	684 Move W8, [X0+224]
	685 Compare W8, 0
	686 JumpIfNotEqual {688}
	687 Call 0x1C17DFC
	688 Move W0, W27
	689 Move X1, X31
	690 Call Char.ToUpper, X0
	691 Move V0, [X31+12]
	692 And W27, W0, 0xFFFF
	693 Move [X31+128], S0
	694 Move S0, 1
	695 Move [X31+128], S0
	696 Move X8, 0x433000
	697 Move X8, [X8+368]
	698 Move X0, [X8]
	699 Move W8, [X0+224]
	700 Compare W8, 0
	701 JumpIfNotEqual {703}
	702 Call 0x1C17DFC
	703 Move W0, W27
	704 Move X1, X31
	705 Call Char.IsLower, X0
	706 Move S0, 1
	707 Move [X31+128], S0
	708 Move TEMP, X0
	709 And TEMP, TEMP, 1
	710 Compare TEMP, 1
	711 JumpIfNotEqual {749}
	712 Move X8, 0x433000
	713 Move X8, [X8+368]
	714 Move X0, [X8]
	715 Move W8, [X0+224]
	716 Compare W8, 0
	717 JumpIfNotEqual {719}
	718 Call 0x1C17DFC
	719 Move W0, W27
	720 Move X1, X31
	721 Call Char.ToUpper, X0
	722 Move X8, 0x433000
	723 Move X8, [X8+368]
	724 Move X0, [X8]
	725 Move W8, [X0+224]
	726 Compare W8, 0
	727 JumpIfNotEqual {729}
	728 Call 0x1C17DFC
	729 Move W0, W27
	730 Move X1, X31
	731 Call Char.IsUpper, X0
	732 Move S0, 1
	733 Move [X31+128], S0
	734 Move TEMP, X0
	735 And TEMP, TEMP, 1
	736 Compare TEMP, 1
	737 JumpIfNotEqual {749}
	738 Move X8, 0x433000
	739 Move X8, [X8+368]
	740 Move X0, [X8]
	741 Move W8, [X0+224]
	742 Compare W8, 0
	743 JumpIfNotEqual {745}
	744 Call 0x1C17DFC
	745 Move W0, W27
	746 Move X1, X31
	747 Call Char.ToLower, X0
	748 And W27, W0, 0xFFFF
	749 Move W8, [X22]
	750 NotImplemented "Instruction CMP not yet implemented."
	751 NotImplemented "Instruction CMP not yet implemented."
	752 Move X8, [X23+48]
	753 Compare X8, 0
	754 JumpIfEqual {2838}
	755 Move X9, [X31+152]
	756 Move W10, [X8+24]
	757 NotImplemented "Instruction LDRSW not yet implemented."
	758 NotImplemented "Instruction CMP not yet implemented."
	759 NotImplemented "Instruction MADD not yet implemented."
	760 Move X28, [X8+48]
	761 Compare X28, 0
	762 JumpIfEqual {2838}
	763 Move X9, 0x49F000
	764 Move X8, [X28]
	765 Move X9, [X9+2880]
	766 Move W10, [X8+304]
	767 Move X1, [X9]
	768 Move W9, [X1+304]
	769 NotImplemented "Instruction CMP not yet implemented."
	770 Move X8, [X8+200]
	771 Add X8, X8, X9
	772 NotImplemented "Instruction LDUR not yet implemented."
	773 NotImplemented "Instruction CMP not yet implemented."
	774 Move X0, X28
	775 Move X1, X31
	776 Call TextElement.get_textAsset, X0
	777 Compare X0, 0
	778 JumpIfEqual {786}
	779 Move X8, 0x49F000
	780 Move X9, [X0]
	781 Move X8, [X8+1864]
	782 Move W11, [X9+304]
	783 Move X8, [X8]
	784 Move W10, [X8+304]
	785 NotImplemented "Instruction CMP not yet implemented."
	786 Move X8, X31
	787 Move X8, [X23+48]
	788 Compare X8, 0
	789 JumpIfEqual {2838}
	790 Move X9, [X31+152]
	791 Move W11, [X8+24]
	792 NotImplemented "Instruction LDRSW not yet implemented."
	793 NotImplemented "Instruction CMP not yet implemented."
	794 NotImplemented "Instruction MADD not yet implemented."
	795 Move X10, [X10+48]
	796 Move [X21+5512], X10
	797 Compare X10, 0
	798 JumpIfEqual {644}
	799 NotImplemented "Instruction MADD not yet implemented."
	800 Move X10, [X12+64]
	801 Move [X21+104], X10
	802 Move X13, [X12+88]
	803 Move [X21+112], X13
	804 Move W12, [X12+96]
	805 Move [X21+120], W12
	806 Compare W24, 0
	807 JumpIfEqual {818}
	808 Move X12, [X21+32]
	809 Compare X12, 0
	810 JumpIfEqual {2838}
	811 Move W13, [X12+24]
	812 NotImplemented "Instruction CMP not yet implemented."
	813 Add X12, X12, W26
	814 Move W12, [X12+36]
	815 NotImplemented "Instruction CMP not yet implemented."
	816 Move W12, [X21+808]
	817 NotImplemented "Instruction CMP not yet implemented."
	818 Compare X10, 0
	819 JumpIfEqual {2838}
	820 Move V11, [X21+244]
	821 Add X0, X10, 176
	822 Move X1, X31
	823 Call FaceInfo.get_pointSize, X0
	824 Move X8, [X21+104]
	825 Compare X8, 0
	826 JumpIfEqual {2838}
	827 Move W28, W0
	828 Add X0, X8, 176
	829 Move X1, X31
	830 Call FaceInfo.get_scale, X0
	831 Move W8, [X19+189]
	832 Move V10, V0
	833 Move V0, [X31+84]
	834 Move S1, 1
	835 NotImplemented "Instruction CMP not yet implemented."
	836 Move W8, 0x2026
	837 NotImplemented "Instruction FCSEL not yet implemented."
	838 NotImplemented "Instruction CMP not yet implemented."
	839 NotImplemented "Instruction CSET not yet implemented."
	840 And W8, W24, W8
	841 Move S13, W31
	842 Move S8, W31
	843 Move TEMP, X8
	844 And TEMP, TEMP, 1
	845 Compare TEMP, 1
	846 JumpIfEqual {862}
	847 Move X20, [X31+144]
	848 Move X8, [X20]
	849 Compare X8, 0
	850 JumpIfEqual {2838}
	851 Add X0, X8, 176
	852 Move X1, X31
	853 Call FaceInfo.get_ascentLine, X0
	854 Move X8, [X20]
	855 Compare X8, 0
	856 JumpIfEqual {2838}
	857 Add X0, X8, 176
	858 Move X1, X31
	859 Move V8, V0
	860 Call FaceInfo.get_descentLine, X0
	861 Move V13, V0
	862 Move X0, [X21+5512]
	863 Compare X0, 0
	864 JumpIfEqual {2838}
	865 Move V9, [X21+240]
	866 Move X1, X31
	867 Call TextElement.get_scale, X0
	868 Move X8, [X21+6720]
	869 Compare X8, 0
	870 JumpIfEqual {2838}
	871 Move W9, [X21+804]
	872 Move W10, [X8+24]
	873 NotImplemented "Instruction CMP not yet implemented."
	874 Move V1, [X31+128]
	875 NotImplemented "Instruction SCVTF not yet implemented."
	876 Move X10, W9
	877 NotImplemented "Instruction MADD not yet implemented."
	878 Multiply S1, S1, S11
	879 NotImplemented "Instruction FDIV not yet implemented."
	880 Multiply S1, S1, S10
	881 Multiply S1, S1, S12
	882 Multiply S1, S1, S9
	883 Multiply S14, S1, S0
	884 Move W11, 1
	885 Move [X31+112], S13
	886 Move [X10+40], W11
	887 NotImplemented "Instruction CMP not yet implemented."
	888 NotImplemented "Instruction CSET not yet implemented."
	889 NotImplemented "Instruction CMP not yet implemented."
	890 Move X8, [X21+6720]
	891 NotImplemented "Instruction CSET not yet implemented."
	892 Move [X31+116], W9
	893 Or W9, W9, W20
	894 NotImplemented "Instruction CMP not yet implemented."
	895 Move S8, W31
	896 NotImplemented "Instruction FCSEL not yet implemented."
	897 Compare X8, 0
	898 JumpIfEqual {2838}
	899 Move W9, [X21+804]
	900 Move S0, W31
	901 Move [X31+112], S0
	902 Move X9, [X9+200]
	903 Add X9, X9, X10
	904 NotImplemented "Instruction LDUR not yet implemented."
	905 NotImplemented "Instruction CMP not yet implemented."
	906 NotImplemented "Instruction CSEL not yet implemented."
	907 Move X0, X28
	908 Move X1, X31
	909 Move [X21+224], X8
	910 Call TextElement.get_glyphIndex, X0
	911 Move W8, W0
	912 Move X0, [X21+224]
	913 Move [X21+5500], W8
	914 Add W8, W8, 0xE000
	915 NotImplemented "Instruction CMP not yet implemented."
	916 NotImplemented "Instruction CSEL not yet implemented."
	917 Compare X0, 0
	918 JumpIfEqual {2838}
	919 Add X8, X31, 160
	920 Move X1, X31
	921 Call SpriteAsset.get_faceInfo, X0
	922 Add X0, X31, 592
	923 Add X1, X31, 160
	924 Move W2, 96
	925 Call 0x3EB2AC0
	926 Add X0, X31, 592
	927 Move X1, X31
	928 Call FaceInfo.get_pointSize, X0
	929 Move V13, [X21+244]
	930 NotImplemented "Instruction CMP not yet implemented."
	931 Move X0, [X21+224]
	932 Compare X0, 0
	933 JumpIfEqual {2838}
	934 Add X8, X31, 160
	935 Move X1, X31
	936 Call SpriteAsset.get_faceInfo, X0
	937 Add X0, X31, 592
	938 Add X1, X31, 160
	939 Move W2, 96
	940 Call 0x3EB2AC0
	941 Add X0, X31, 592
	942 Move X1, X31
	943 Call FaceInfo.get_pointSize, X0
	944 Move X9, [X21+224]
	945 Compare X9, 0
	946 JumpIfEqual {2838}
	947 Move W29, W0
	948 Add X8, X31, 160
	949 Move X0, X9
	950 Move X1, X31
	951 Call SpriteAsset.get_faceInfo, X0
	952 Add X0, X31, 592
	953 Add X1, X31, 160
	954 Move W2, 96
	955 Call 0x3EB2AC0
	956 Add X0, X31, 592
	957 Move X1, X31
	958 Call FaceInfo.get_scale, X0
	959 Move W24, [X19+189]
	960 Move X0, X28
	961 Move X1, X31
	962 Move V9, V0
	963 Call TextElement.get_scale, X0
	964 Move X0, X28
	965 Move X1, X31
	966 Move V10, V0
	967 Call TextElement.get_glyph, X0
	968 Compare X0, 0
	969 JumpIfEqual {2838}
	970 Move V0, [X31+84]
	971 NotImplemented "Instruction CMP not yet implemented."
	972 Move S1, 1
	973 Move X1, X31
	974 NotImplemented "Instruction FCSEL not yet implemented."
	975 Call Glyph.get_scale, X0
	976 Move X0, [X21+224]
	977 Compare X0, 0
	978 JumpIfEqual {2838}
	979 Add X8, X31, 160
	980 Move X1, X31
	981 Move V11, V0
	982 Call SpriteAsset.get_faceInfo, X0
	983 Add X0, X31, 592
	984 Add X1, X31, 160
	985 Move W2, 96
	986 Call 0x3EB2AC0
	987 Add X0, X31, 592
	988 Move X1, X31
	989 Call FaceInfo.get_ascentLine, X0
	990 Move X0, [X21+224]
	991 Compare X0, 0
	992 JumpIfEqual {2838}
	993 Move V8, V0
	994 NotImplemented "Instruction SCVTF not yet implemented."
	995 NotImplemented "Instruction FDIV not yet implemented."
	996 Multiply S0, S0, S9
	997 Multiply S0, S0, S12
	998 Multiply S1, S10, S11
	999 Add X8, X31, 160
	1000 Move X1, X31
	1001 Multiply S14, S0, S1
	1002 Call SpriteAsset.get_faceInfo, X0
	1003 Add X0, X31, 592
	1004 Add X1, X31, 160
	1005 Move W2, 96
	1006 Call 0x3EB2AC0
	1007 Add X0, X31, 592
	1008 Move X1, X31
	1009 Call FaceInfo.get_descentLine, X0
	1010 Move X24, [X31+144]
	1011 Move X0, [X24]
	1012 Compare X0, 0
	1013 JumpIfEqual {2838}
	1014 Add X8, X31, 160
	1015 Move X1, X31
	1016 Call FontAsset.get_faceInfo, X0
	1017 Add X0, X31, 592
	1018 Add X1, X31, 160
	1019 Move W2, 96
	1020 Call 0x3EB2AC0
	1021 Add X0, X31, 592
	1022 Move X1, X31
	1023 Call FaceInfo.get_pointSize, X0
	1024 Move X9, [X24]
	1025 Compare X9, 0
	1026 JumpIfEqual {2838}
	1027 Move W29, W0
	1028 Add X8, X31, 160
	1029 Move X0, X9
	1030 Move X1, X31
	1031 Call FontAsset.get_faceInfo, X0
	1032 Add X0, X31, 592
	1033 Add X1, X31, 160
	1034 Move W2, 96
	1035 Call 0x3EB2AC0
	1036 Add X0, X31, 592
	1037 Move X1, X31
	1038 Call FaceInfo.get_scale, X0
	1039 Move W8, [X19+189]
	1040 Move V8, V0
	1041 Move V0, [X31+84]
	1042 Move X0, [X24]
	1043 NotImplemented "Instruction CMP not yet implemented."
	1044 Move S1, 1
	1045 NotImplemented "Instruction FCSEL not yet implemented."
	1046 Compare X0, 0
	1047 JumpIfEqual {2838}
	1048 Add X8, X31, 160
	1049 Move X1, X31
	1050 Call FontAsset.get_faceInfo, X0
	1051 Add X0, X31, 592
	1052 Add X1, X31, 160
	1053 Move W2, 96
	1054 Call 0x3EB2AC0
	1055 Add X0, X31, 592
	1056 Move X1, X31
	1057 Call FaceInfo.get_ascentLine, X0
	1058 Move X0, X28
	1059 Move X1, X31
	1060 Move V9, V0
	1061 Call TextElement.get_glyph, X0
	1062 Compare X0, 0
	1063 JumpIfEqual {2838}
	1064 Add X8, X31, 160
	1065 Move X1, X31
	1066 Call Glyph.get_metrics, X0
	1067 Move V0, [X31+10]
	1068 Move W8, [X31+176]
	1069 Add X0, X31, 512
	1070 Move X1, X31
	1071 Move [X31+32], V0
	1072 Move [X31+528], W8
	1073 Call GlyphMetrics.get_height, X0
	1074 Move X0, X28
	1075 Move X1, X31
	1076 Move V10, V0
	1077 Call TextElement.get_scale, X0
	1078 Move X0, X28
	1079 Move X1, X31
	1080 Move V11, V0
	1081 Call TextElement.get_glyph, X0
	1082 Compare X0, 0
	1083 JumpIfEqual {2838}
	1084 Move X1, X31
	1085 Call Glyph.get_scale, X0
	1086 Move X24, [X31+144]
	1087 Move X0, [X24]
	1088 Compare X0, 0
	1089 JumpIfEqual {2838}
	1090 Add X8, X31, 160
	1091 Move X1, X31
	1092 Move V12, V0
	1093 Call FontAsset.get_faceInfo, X0
	1094 Add X0, X31, 592
	1095 Add X1, X31, 160
	1096 Move W2, 96
	1097 Call 0x3EB2AC0
	1098 Add X0, X31, 592
	1099 Move X1, X31
	1100 Call FaceInfo.get_ascentLine, X0
	1101 Move X0, [X24]
	1102 Compare X0, 0
	1103 JumpIfEqual {2838}
	1104 NotImplemented "Instruction SCVTF not yet implemented."
	1105 NotImplemented "Instruction FDIV not yet implemented."
	1106 NotImplemented "Instruction FDIV not yet implemented."
	1107 Multiply S2, S2, S11
	1108 Multiply S1, S1, S8
	1109 Multiply S1, S1, S14
	1110 Multiply S2, S2, S12
	1111 Multiply S14, S1, S2
	1112 NotImplemented "Instruction FDIV not yet implemented."
	1113 Add X8, X31, 160
	1114 Move X1, X31
	1115 Multiply S8, S9, S0
	1116 Call FontAsset.get_faceInfo, X0
	1117 Add X0, X31, 592
	1118 Add X1, X31, 160
	1119 Move W2, 96
	1120 Call 0x3EB2AC0
	1121 Add X0, X31, 592
	1122 Move X1, X31
	1123 Call FaceInfo.get_descentLine, X0
	1124 Multiply S0, S9, S0
	1125 Move X8, [X21+6720]
	1126 Move W29, 392
	1127 Move [X21+5512], X28
	1128 Compare X8, 0
	1129 JumpIfEqual {2838}
	1130 Move W9, [X21+804]
	1131 Move W10, [X8+24]
	1132 NotImplemented "Instruction CMP not yet implemented."
	1133 Move X10, W9
	1134 NotImplemented "Instruction MADD not yet implemented."
	1135 Move W11, 2
	1136 Move [X31+112], S0
	1137 Move [X10+40], W11
	1138 Move [X10+364], S14
	1139 Move [X21+120], W20
	1140 NotImplemented "Instruction CMP not yet implemented."
	1141 NotImplemented "Instruction CSET not yet implemented."
	1142 NotImplemented "Instruction CMP not yet implemented."
	1143 NotImplemented "Instruction CSET not yet implemented."
	1144 Move [X31+116], W10
	1145 Or W10, W10, W20
	1146 NotImplemented "Instruction CMP not yet implemented."
	1147 Move S0, W31
	1148 NotImplemented "Instruction FCSEL not yet implemented."
	1149 Move W10, [X8+24]
	1150 NotImplemented "Instruction CMP not yet implemented."
	1151 Move X9, W9
	1152 NotImplemented "Instruction MADD not yet implemented."
	1153 NotImplemented "Instruction STRH not yet implemented."
	1154 Move X8, [X23+48]
	1155 Compare X8, 0
	1156 JumpIfEqual {2838}
	1157 Move W10, [X8+24]
	1158 NotImplemented "Instruction CMP not yet implemented."
	1159 NotImplemented "Instruction MADD not yet implemented."
	1160 Move X0, [X8+56]
	1161 Compare X0, 0
	1162 JumpIfNotEqual {1169}
	1163 Move X8, [X21+5512]
	1164 Compare X8, 0
	1165 JumpIfEqual {2838}
	1166 Move X0, [X8+32]
	1167 Compare X0, 0
	1168 JumpIfEqual {2838}
	1169 Add X8, X31, 160
	1170 Move X1, X31
	1171 Call Glyph.get_metrics, X0
	1172 Move V0, [X31+10]
	1173 Move W8, [X31+176]
	1174 Move W9, W27
	1175 ShiftRight W9, 16
	1176 And W9, W9, 0x7FFFFFFF
	1177 Move [X31+20], V0
	1178 Move V0, [X31+20]
	1179 Move [X31+336], W8
	1180 Move W8, W8
	1181 Move [X31+576], W8
	1182 Move [X31+35], V0
	1183 Compare W9, 0
	1184 JumpIfNotEqual {1197}
	1185 Move X8, 0x432000
	1186 Move X8, [X8+368]
	1187 Move X0, [X8]
	1188 Move W8, [X0+224]
	1189 Compare W8, 0
	1190 JumpIfNotEqual {1192}
	1191 Call 0x1C17DFC
	1192 Move W0, W27
	1193 Move X1, X31
	1194 Call Char.IsWhiteSpace, X0
	1195 And W8, W0, 1
	1196 Move [X31+140], W8
	1197 Move [X31+140], W31
	1198 Move [X31+552], X31
	1199 Move [X31+544], X31
	1200 Move W8, [X19+180]
	1201 Move V10, [X19+192]
	1202 Compare W8, 0
	1203 JumpIfEqual {1347}
	1204 Move X9, [X21+5512]
	1205 Compare X9, 0
	1206 JumpIfEqual {2838}
	1207 Move X8, [X31+152]
	1208 Move W25, [X9+40]
	1209 Move W9, [X31+108]
	1210 Move W8, [X8]
	1211 NotImplemented "Instruction CMP not yet implemented."
	1212 Move X9, [X23+48]
	1213 Compare X9, 0
	1214 JumpIfEqual {2838}
	1215 Move W10, [X9+24]
	1216 Add W8, W8, 1
	1217 NotImplemented "Instruction CMP not yet implemented."
	1218 NotImplemented "Instruction SMADDL not yet implemented."
	1219 Move X8, [X8+48]
	1220 Compare X8, 0
	1221 JumpIfEqual {2838}
	1222 Move X9, [X31+144]
	1223 Move X9, [X9]
	1224 Compare X9, 0
	1225 JumpIfEqual {2838}
	1226 Move X9, [X9+368]
	1227 Compare X9, 0
	1228 JumpIfEqual {2838}
	1229 Move X0, [X9+64]
	1230 Compare X0, 0
	1231 JumpIfEqual {2838}
	1232 Move X9, 0x49E000
	1233 Move W8, [X8+40]
	1234 Move X9, [X9+2848]
	1235 Add X2, X31, 464
	1236 Or W1, W25, W8
	1237 Move X3, [X9]
	1238 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.TryGetValue, X0, X1, X2
	1239 Move TEMP, X0
	1240 And TEMP, TEMP, 1
	1241 Compare TEMP, 1
	1242 JumpIfNotEqual {1264}
	1243 Add X8, X31, 160
	1244 Add X0, X31, 464
	1245 Move X1, X31
	1246 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	1247 Move V0, [X31+10]
	1248 Move W8, [X31+176]
	1249 Add X0, X31, 432
	1250 Move X1, X31
	1251 Move [X31+27], V0
	1252 Move [X31+448], W8
	1253 Call GlyphAdjustmentRecord.get_glyphValueRecord, X0
	1254 Add X0, X31, 464
	1255 Move X1, X31
	1256 Move [X31+544], S0
	1257 Move [X31+548], S1
	1258 Move [X31+552], S2
	1259 Move [X31+556], S3
	1260 Call GlyphPairAdjustmentRecord.get_featureLookupFlags, X0
	1261 And W31, W0, 256
	1262 Move S0, W31
	1263 NotImplemented "Instruction FCSEL not yet implemented."
	1264 Move X8, [X31+152]
	1265 Move W8, [X8]
	1266 Subtract W8, W8, 1
	1267 Move X9, [X23+48]
	1268 Compare X9, 0
	1269 JumpIfEqual {2838}
	1270 Move W10, [X9+24]
	1271 NotImplemented "Instruction CMP not yet implemented."
	1272 NotImplemented "Instruction UMADDL not yet implemented."
	1273 Move X8, [X8+48]
	1274 Compare X8, 0
	1275 JumpIfEqual {2838}
	1276 Move X9, [X31+144]
	1277 Move X9, [X9]
	1278 Compare X9, 0
	1279 JumpIfEqual {2838}
	1280 Move X9, [X9+368]
	1281 Compare X9, 0
	1282 JumpIfEqual {2838}
	1283 Move X0, [X9+64]
	1284 Compare X0, 0
	1285 JumpIfEqual {2838}
	1286 Move X9, 0x49E000
	1287 Move W8, [X8+40]
	1288 Move X9, [X9+2848]
	1289 Add X2, X31, 464
	1290 Or W1, W8, W25
	1291 Move X3, [X9]
	1292 Call Dictionary`2<UInt32, GlyphPairAdjustmentRecord>.TryGetValue, X0, X1, X2
	1293 Move TEMP, X0
	1294 And TEMP, TEMP, 1
	1295 Compare TEMP, 1
	1296 JumpIfNotEqual {1336}
	1297 Move V9, V10
	1298 Move V10, [X31+544]
	1299 Move V11, [X31+548]
	1300 Move V15, V12
	1301 Move V12, [X31+552]
	1302 Move V13, [X31+556]
	1303 Add X8, X31, 160
	1304 Add X0, X31, 464
	1305 Move X1, X31
	1306 Call GlyphPairAdjustmentRecord.get_secondAdjustmentRecord, X0
	1307 Move V0, [X31+10]
	1308 Move W8, [X31+176]
	1309 Add X0, X31, 432
	1310 Move X1, X31
	1311 Move [X31+27], V0
	1312 Move [X31+448], W8
	1313 Call GlyphAdjustmentRecord.get_glyphValueRecord, X0
	1314 Move V4, V0
	1315 Move V5, V1
	1316 Move V6, V2
	1317 Move V7, V3
	1318 Move V0, V10
	1319 Move V1, V11
	1320 Move V2, V12
	1321 Move V3, V13
	1322 Move X0, X31
	1323 Move V10, V9
	1324 Move V12, V15
	1325 Call GlyphValueRecord.op_Addition, X0, X1
	1326 Add X0, X31, 464
	1327 Move X1, X31
	1328 Move [X31+544], S0
	1329 Move [X31+548], S1
	1330 Move [X31+552], S2
	1331 Move [X31+556], S3
	1332 Call GlyphPairAdjustmentRecord.get_featureLookupFlags, X0
	1333 And W31, W0, 256
	1334 Move S0, W31
	1335 NotImplemented "Instruction FCSEL not yet implemented."
	1336 Move X24, [X21+6720]
	1337 Compare X24, 0
	1338 JumpIfEqual {2838}
	1339 NotImplemented "Instruction LDRSW not yet implemented."
	1340 Add X0, X31, 544
	1341 Move X1, X31
	1342 Call GlyphValueRecord.get_xAdvance, X0
	1343 Move W8, [X24+24]
	1344 NotImplemented "Instruction CMP not yet implemented."
	1345 NotImplemented "Instruction MADD not yet implemented."
	1346 Move [X8+352], S0
	1347 Move X8, 0x49E000
	1348 Move X8, [X8+2888]
	1349 Move X0, [X8]
	1350 Move W8, [X0+224]
	1351 Compare W8, 0
	1352 JumpIfNotEqual {1354}
	1353 Call 0x1C17DFC
	1354 Move W0, W27
	1355 Move X1, X31
	1356 Call TextGeneratorUtilities.IsBaseGlyph, X0
	1357 Move X8, [X31+152]
	1358 Move W28, W0
	1359 Move W24, [X8]
	1360 Move TEMP, X0
	1361 And TEMP, TEMP, 1
	1362 Compare TEMP, 1
	1363 JumpIfNotEqual {1365}
	1364 Move [X21+6596], W24
	1365 Subtract W9, W24, 1
	1366 NotImplemented "Instruction CSET not yet implemented."
	1367 Or W8, W28, W8
	1368 Move TEMP, X8
	1369 And TEMP, TEMP, 1
	1370 Compare TEMP, 1
	1371 JumpIfEqual {1686}
	1372 Move W8, [X21+6596]
	1373 Move W10, 0x80000000
	1374 NotImplemented "Instruction CMP not yet implemented."
	1375 NotImplemented "Instruction CMP not yet implemented."
	1376 Move X9, [X23+48]
	1377 Compare X9, 0
	1378 JumpIfEqual {2838}
	1379 Move W10, [X9+24]
	1380 Move X8, W8
	1381 NotImplemented "Instruction CMP not yet implemented."
	1382 NotImplemented "Instruction MADD not yet implemented."
	1383 Move X0, [X8+48]
	1384 Compare X0, 0
	1385 JumpIfEqual {2838}
	1386 Move X1, X31
	1387 Call TextElement.get_glyph, X0
	1388 Compare X0, 0
	1389 JumpIfEqual {2838}
	1390 Move X1, X31
	1391 Call Glyph.get_index, X0
	1392 Move X8, [X21+5512]
	1393 Compare X8, 0
	1394 JumpIfEqual {2838}
	1395 Move W29, W0
	1396 Move X0, X8
	1397 Move X1, X31
	1398 Call TextElement.get_glyphIndex, X0
	1399 Move X8, [X31+144]
	1400 Move X8, [X8]
	1401 Compare X8, 0
	1402 JumpIfEqual {2838}
	1403 Move W25, W0
	1404 Move X0, X8
	1405 Move X1, X31
	1406 Call FontAsset.get_fontFeatureTable, X0
	1407 Compare X0, 0
	1408 JumpIfEqual {2838}
	1409 Move X0, [X0+72]
	1410 Compare X0, 0
	1411 JumpIfEqual {2838}
	1412 Move X8, 0x49E000
	1413 Move X8, [X8+2864]
	1414 Or W1, W29, W25
	1415 Add X2, X31, 408
	1416 Move X3, [X8]
	1417 Call Dictionary`2<UInt32, MarkToBaseAdjustmentRecord>.TryGetValue, X0, X1, X2
	1418 Move W29, 392
	1419 Move TEMP, X0
	1420 And TEMP, TEMP, 1
	1421 Compare TEMP, 1
	1422 JumpIfNotEqual {1686}
	1423 Move X8, [X21+6720]
	1424 Compare X8, 0
	1425 JumpIfEqual {2838}
	1426 NotImplemented "Instruction LDRSW not yet implemented."
	1427 Move W10, [X8+24]
	1428 NotImplemented "Instruction CMP not yet implemented."
	1429 NotImplemented "Instruction MADD not yet implemented."
	1430 Move V0, [X8+328]
	1431 Move V1, [X21+756]
	1432 Add X0, X31, 408
	1433 Move X1, X31
	1434 Subtract S0, S0, S1
	1435 NotImplemented "Instruction FDIV not yet implemented."
	1436 Call MarkToBaseAdjustmentRecord.get_baseGlyphAnchorPoint, X0
	1437 Add X0, X31, 400
	1438 Move X1, X31
	1439 Move [X31+400], S0
	1440 Move [X31+404], S1
	1441 Call GlyphAnchorPoint.get_xCoordinate, X0
	1442 Add X0, X31, 408
	1443 Move X1, X31
	1444 Move V10, V0
	1445 Call MarkToBaseAdjustmentRecord.get_markPositionAdjustment, X0
	1446 Add X0, X31, 392
	1447 Move X1, X31
	1448 Move [X31+392], S0
	1449 Move [X31+396], S1
	1450 Call MarkPositionAdjustment.get_xPositionAdjustment, X0
	1451 Add S1, S9, S10
	1452 Subtract S0, S1, S0
	1453 Add X0, X31, 544
	1454 Move X1, X31
	1455 Call GlyphValueRecord.set_xPlacement, X0, V0
	1456 Add X0, X31, 408
	1457 Move X1, X31
	1458 Call MarkToBaseAdjustmentRecord.get_baseGlyphAnchorPoint, X0
	1459 Add X0, X31, 400
	1460 Move X1, X31
	1461 Move [X31+400], S0
	1462 Move [X31+404], S1
	1463 Call GlyphAnchorPoint.get_yCoordinate, X0
	1464 Move V10, V0
	1465 Add X0, X31, 408
	1466 Subtract W24, W24, 1
	1467 Move W8, [X21+6596]
	1468 NotImplemented "Instruction CMP not yet implemented."
	1469 Move X8, [X23+48]
	1470 Compare X8, 0
	1471 JumpIfEqual {2838}
	1472 Move W9, [X8+24]
	1473 NotImplemented "Instruction CMP not yet implemented."
	1474 NotImplemented "Instruction UMADDL not yet implemented."
	1475 Move X0, [X8+48]
	1476 Compare X0, 0
	1477 JumpIfEqual {2838}
	1478 Move X1, X31
	1479 Call TextElement.get_glyph, X0
	1480 Compare X0, 0
	1481 JumpIfEqual {2838}
	1482 Move X1, X31
	1483 Call Glyph.get_index, X0
	1484 Move X8, [X21+5512]
	1485 Compare X8, 0
	1486 JumpIfEqual {2838}
	1487 Move W29, W0
	1488 Move X0, X8
	1489 Move X1, X31
	1490 Call TextElement.get_glyphIndex, X0
	1491 Move X8, [X31+144]
	1492 Move X8, [X8]
	1493 Compare X8, 0
	1494 JumpIfEqual {2838}
	1495 Move W25, W0
	1496 Move X0, X8
	1497 Move X1, X31
	1498 Call FontAsset.get_fontFeatureTable, X0
	1499 Compare X0, 0
	1500 JumpIfEqual {2838}
	1501 Move X0, [X0+80]
	1502 Compare X0, 0
	1503 JumpIfEqual {2838}
	1504 Move X8, 0x49E000
	1505 Move X8, [X8+2856]
	1506 Or W1, W29, W25
	1507 Add X2, X31, 368
	1508 Move X3, [X8]
	1509 Call Dictionary`2<UInt32, MarkToMarkAdjustmentRecord>.TryGetValue, X0, X1, X2
	1510 Move W29, 392
	1511 Move TEMP, X0
	1512 And TEMP, TEMP, 1
	1513 Compare TEMP, 1
	1514 JumpIfNotEqual {1466}
	1515 Move X8, [X23+48]
	1516 Compare X8, 0
	1517 JumpIfEqual {2838}
	1518 Move W9, [X8+24]
	1519 NotImplemented "Instruction CMP not yet implemented."
	1520 Move X9, [X21+6720]
	1521 Compare X9, 0
	1522 JumpIfEqual {2838}
	1523 Move W10, [X9+24]
	1524 NotImplemented "Instruction CMP not yet implemented."
	1525 Move W10, W24
	1526 Move V1, [X21+736]
	1527 Move V2, [X21+384]
	1528 NotImplemented "Instruction NOP not yet implemented."
	1529 NotImplemented "Instruction MADD not yet implemented."
	1530 NotImplemented "Instruction MADD not yet implemented."
	1531 Move V0, [X21+756]
	1532 Move V3, [X8+328]
	1533 Move V4, [X9+336]
	1534 Move S5, W31
	1535 Subtract S1, S5, S1
	1536 Add S1, S1, S2
	1537 Subtract S0, S3, S0
	1538 Subtract S1, S4, S1
	1539 Add X0, X31, 368
	1540 Move X1, X31
	1541 NotImplemented "Instruction FDIV not yet implemented."
	1542 NotImplemented "Instruction FDIV not yet implemented."
	1543 Call MarkToMarkAdjustmentRecord.get_baseMarkGlyphAnchorPoint, X0
	1544 Add X0, X31, 400
	1545 Move X1, X31
	1546 Move [X31+400], S0
	1547 Move [X31+404], S1
	1548 Call GlyphAnchorPoint.get_xCoordinate, X0
	1549 Add X0, X31, 368
	1550 Move X1, X31
	1551 Move V10, V0
	1552 Call MarkToMarkAdjustmentRecord.get_combiningMarkPositionAdjustment, X0
	1553 Add X0, X31, 392
	1554 Move X1, X31
	1555 Move [X31+392], S0
	1556 Move [X31+396], S1
	1557 Call MarkPositionAdjustment.get_xPositionAdjustment, X0
	1558 Add S1, S11, S10
	1559 Subtract S0, S1, S0
	1560 Add X0, X31, 544
	1561 Move X1, X31
	1562 Call GlyphValueRecord.set_xPlacement, X0, V0
	1563 Add X0, X31, 368
	1564 Move X1, X31
	1565 Call MarkToMarkAdjustmentRecord.get_baseMarkGlyphAnchorPoint, X0
	1566 Add X0, X31, 400
	1567 Move X1, X31
	1568 Move [X31+400], S0
	1569 Move [X31+404], S1
	1570 Call GlyphAnchorPoint.get_yCoordinate, X0
	1571 Add X0, X31, 368
	1572 Move X1, X31
	1573 Move V10, V0
	1574 Call MarkToMarkAdjustmentRecord.get_combiningMarkPositionAdjustment, X0
	1575 Add X0, X31, 392
	1576 Move X1, X31
	1577 Move [X31+392], S0
	1578 Move [X31+396], S1
	1579 Call MarkPositionAdjustment.get_yPositionAdjustment, X0
	1580 Add S1, S9, S10
	1581 Subtract S0, S1, S0
	1582 NotImplemented "Instruction LDRSW not yet implemented."
	1583 Move W9, 0x80000000
	1584 NotImplemented "Instruction CMP not yet implemented."
	1585 Move X9, [X23+48]
	1586 Compare X9, 0
	1587 JumpIfEqual {2838}
	1588 Move W10, [X9+24]
	1589 NotImplemented "Instruction CMP not yet implemented."
	1590 NotImplemented "Instruction MADD not yet implemented."
	1591 Move X0, [X8+48]
	1592 Compare X0, 0
	1593 JumpIfEqual {2838}
	1594 Move X1, X31
	1595 Call TextElement.get_glyph, X0
	1596 Compare X0, 0
	1597 JumpIfEqual {2838}
	1598 Move X1, X31
	1599 Call Glyph.get_index, X0
	1600 Move X8, [X21+5512]
	1601 Compare X8, 0
	1602 JumpIfEqual {2838}
	1603 Move W29, W0
	1604 Move X0, X8
	1605 Move X1, X31
	1606 Call TextElement.get_glyphIndex, X0
	1607 Move X8, [X31+144]
	1608 Move X8, [X8]
	1609 Compare X8, 0
	1610 JumpIfEqual {2838}
	1611 Move W25, W0
	1612 Move X0, X8
	1613 Move X1, X31
	1614 Call FontAsset.get_fontFeatureTable, X0
	1615 Compare X0, 0
	1616 JumpIfEqual {2838}
	1617 Move X0, [X0+72]
	1618 Compare X0, 0
	1619 JumpIfEqual {2838}
	1620 Move X8, 0x49E000
	1621 Move X8, [X8+2864]
	1622 Or W1, W29, W25
	1623 Add X2, X31, 344
	1624 Move X3, [X8]
	1625 Call Dictionary`2<UInt32, MarkToBaseAdjustmentRecord>.TryGetValue, X0, X1, X2
	1626 Move W29, 392
	1627 Move TEMP, X0
	1628 And TEMP, TEMP, 1
	1629 Compare TEMP, 1
	1630 JumpIfNotEqual {1686}
	1631 Move X8, [X21+6720]
	1632 Compare X8, 0
	1633 JumpIfEqual {2838}
	1634 NotImplemented "Instruction LDRSW not yet implemented."
	1635 Move W10, [X8+24]
	1636 NotImplemented "Instruction CMP not yet implemented."
	1637 NotImplemented "Instruction MADD not yet implemented."
	1638 Move V0, [X8+328]
	1639 Move V1, [X21+756]
	1640 Add X0, X31, 344
	1641 Move X1, X31
	1642 Subtract S0, S0, S1
	1643 NotImplemented "Instruction FDIV not yet implemented."
	1644 Call MarkToBaseAdjustmentRecord.get_baseGlyphAnchorPoint, X0
	1645 Add X0, X31, 400
	1646 Move X1, X31
	1647 Move [X31+400], S0
	1648 Move [X31+404], S1
	1649 Call GlyphAnchorPoint.get_xCoordinate, X0
	1650 Add X0, X31, 344
	1651 Move X1, X31
	1652 Move V10, V0
	1653 Call MarkToBaseAdjustmentRecord.get_markPositionAdjustment, X0
	1654 Add X0, X31, 392
	1655 Move X1, X31
	1656 Move [X31+392], S0
	1657 Move [X31+396], S1
	1658 Call MarkPositionAdjustment.get_xPositionAdjustment, X0
	1659 Add S1, S9, S10
	1660 Subtract S0, S1, S0
	1661 Add X0, X31, 544
	1662 Move X1, X31
	1663 Call GlyphValueRecord.set_xPlacement, X0, V0
	1664 Add X0, X31, 344
	1665 Move X1, X31
	1666 Call MarkToBaseAdjustmentRecord.get_baseGlyphAnchorPoint, X0
	1667 Add X0, X31, 400
	1668 Move X1, X31
	1669 Move [X31+400], S0
	1670 Move [X31+404], S1
	1671 Call GlyphAnchorPoint.get_yCoordinate, X0
	1672 Move V10, V0
	1673 Add X0, X31, 344
	1674 Move X1, X31
	1675 Call MarkToBaseAdjustmentRecord.get_markPositionAdjustment, X0
	1676 Add X0, X31, 392
	1677 Move X1, X31
	1678 Move [X31+392], S0
	1679 Move [X31+396], S1
	1680 Call MarkPositionAdjustment.get_yPositionAdjustment, X0
	1681 Subtract S0, S10, S0
	1682 Add X0, X31, 544
	1683 Move X1, X31
	1684 Call GlyphValueRecord.set_yPlacement, X0, V0
	1685 Move S10, W31
	1686 Add X0, X31, 544
	1687 Move X1, X31
	1688 Move [X31+136], S12
	1689 Call GlyphValueRecord.get_yPlacement, X0
	1690 Add X0, X31, 544
	1691 Move X1, X31
	1692 Move V11, V0
	1693 Call GlyphValueRecord.get_yPlacement, X0
	1694 Move V9, [X21+752]
	1695 Move V12, V0
	1696 Move S0, W31
	1697 Move S15, W31
	1698 NotImplemented "Instruction FCMP not yet implemented."
	1699 Move [X31+104], S0
	1700 Move X0, [X21+5512]
	1701 Compare X0, 0
	1702 JumpIfEqual {2838}
	1703 Move X1, X31
	1704 Call TextElement.get_glyph, X0
	1705 Compare X0, 0
	1706 JumpIfEqual {2838}
	1707 Add X8, X31, 160
	1708 Move X1, X31
	1709 Call Glyph.get_metrics, X0
	1710 Move V0, [X31+10]
	1711 Move W8, [X31+176]
	1712 Add X0, X31, 512
	1713 Move X1, X31
	1714 Move [X31+32], V0
	1715 Move [X31+528], W8
	1716 Call GlyphMetrics.get_width, X0
	1717 Move X0, [X21+5512]
	1718 Compare X0, 0
	1719 JumpIfEqual {2838}
	1720 Move X1, X31
	1721 Move V13, V0
	1722 Call TextElement.get_glyph, X0
	1723 Compare X0, 0
	1724 JumpIfEqual {2838}
	1725 Add X8, X31, 160
	1726 Move X1, X31
	1727 Call Glyph.get_metrics, X0
	1728 Move V0, [X31+10]
	1729 Move W8, [X31+176]
	1730 Add X0, X31, 512
	1731 Move X1, X31
	1732 Move [X31+32], V0
	1733 Move [X31+528], W8
	1734 Call GlyphMetrics.get_horizontalBearingX, X0
	1735 Move S3, 0.5
	1736 Multiply S2, S9, S3
	1737 Multiply S3, S13, S3
	1738 Add S0, S3, S0
	1739 Move V3, [X31+136]
	1740 Move V1, [X21+5524]
	1741 Multiply S0, S3, S0
	1742 Move V3, [X21+756]
	1743 Subtract S0, S2, S0
	1744 Move S2, 1
	1745 Subtract S1, S2, S1
	1746 Multiply S15, S1, S0
	1747 Add S0, S3, S15
	1748 Move [X21+756], S0
	1749 Move W8, [X31+132]
	1750 Compare W8, 0
	1751 JumpIfNotEqual {1766}
	1752 Move W8, [X22]
	1753 NotImplemented "Instruction CMP not yet implemented."
	1754 Move W8, [X21+292]
	1755 Move TEMP, X8
	1756 And TEMP, TEMP, 1
	1757 Compare TEMP, 1
	1758 JumpIfNotEqual {1766}
	1759 Move X8, [X31+144]
	1760 Move X0, [X8]
	1761 Compare X0, 0
	1762 JumpIfEqual {2838}
	1763 Move X1, X31
	1764 Call FontAsset.get_boldStyleSpacing, X0
	1765 Move [X31+104], S0
	1766 Move X24, [X21+6720]
	1767 Compare X24, 0
	1768 JumpIfEqual {2838}
	1769 NotImplemented "Instruction LDRSW not yet implemented."
	1770 Move V9, [X21+756]
	1771 Add X0, X31, 544
	1772 Move X1, X31
	1773 Call GlyphValueRecord.get_xPlacement, X0
	1774 Move W8, [X24+24]
	1775 NotImplemented "Instruction CMP not yet implemented."
	1776 Move V1, [X31+136]
	1777 NotImplemented "Instruction NOP not yet implemented."
	1778 NotImplemented "Instruction MADD not yet implemented."
	1779 Multiply S0, S1, S0
	1780 Add S0, S9, S0
	1781 Move [X8+328], S0
	1782 Move X24, [X21+6720]
	1783 Compare X24, 0
	1784 JumpIfEqual {2838}
	1785 Move V13, V10
	1786 NotImplemented "Instruction LDRSW not yet implemented."
	1787 Move V10, [X21+736]
	1788 Move V9, [X21+384]
	1789 Add X0, X31, 544
	1790 Move X1, X31
	1791 Call GlyphValueRecord.get_yPlacement, X0
	1792 Move W8, [X24+24]
	1793 NotImplemented "Instruction CMP not yet implemented."
	1794 Move V2, [X31+136]
	1795 Move S1, W31
	1796 Subtract S1, S1, S10
	1797 Add S1, S1, S9
	1798 Multiply S0, S2, S0
	1799 Add S0, S1, S0
	1800 NotImplemented "Instruction MADD not yet implemented."
	1801 Move [X8+336], S0
	1802 Move W8, [X22]
	1803 Move V1, [X31+112]
	1804 Add S0, S8, S11
	1805 Move [X31+132], W20
	1806 NotImplemented "Instruction CMP not yet implemented."
	1807 Add S1, S1, S12
	1808 Move V12, V2
	1809 Multiply S0, S2, S0
	1810 Move W20, 392
	1811 Move V2, [X31+128]
	1812 Multiply S1, S12, S1
	1813 NotImplemented "Instruction FDIV not yet implemented."
	1814 NotImplemented "Instruction FDIV not yet implemented."
	1815 Multiply S1, S12, S1
	1816 NotImplemented "Instruction LDRSW not yet implemented."
	1817 Move W29, [X21+808]
	1818 Move W9, [X31+140]
	1819 Move V4, [X21+384]
	1820 NotImplemented "Instruction CMP not yet implemented."
	1821 NotImplemented "Instruction CSET not yet implemented."
	1822 NotImplemented "Instruction CMP not yet implemented."
	1823 NotImplemented "Instruction CSET not yet implemented."
	1824 And W8, W9, W8
	1825 Add S8, S4, S0
	1826 Move TEMP, X8
	1827 And TEMP, TEMP, 1
	1828 Compare TEMP, 1
	1829 JumpIfNotEqual {1854}
	1830 Move X9, [X21+6720]
	1831 Compare X9, 0
	1832 JumpIfEqual {2838}
	1833 Move W10, [X9+24]
	1834 NotImplemented "Instruction CMP not yet implemented."
	1835 Move V1, [X21+824]
	1836 NotImplemented "Instruction NOP not yet implemented."
	1837 NotImplemented "Instruction MADD not yet implemented."
	1838 Move [X9+344], S1
	1839 Move V2, [X21+828]
	1840 Move [X9+348], S2
	1841 Move V0, [X21+736]
	1842 Subtract S3, S1, S0
	1843 Subtract S2, S2, S0
	1844 Move [X9+332], S3
	1845 Move [X9+340], S2
	1846 Move W9, [X21+832]
	1847 Move [X21+888], S2
	1848 Compare W9, 0
	1849 JumpIfNotEqual {1892}
	1850 Move TEMP, X8
	1851 And TEMP, TEMP, 1
	1852 Compare TEMP, 1
	1853 JumpIfNotEqual {1900}
	1854 Add S2, S4, S1
	1855 NotImplemented "Instruction FCMP not yet implemented."
	1856 Move V0, V2
	1857 Move V3, V8
	1858 Move V0, [X21+240]
	1859 Subtract S1, S8, S4
	1860 Subtract S3, S2, S4
	1861 NotImplemented "Instruction FDIV not yet implemented."
	1862 NotImplemented "Instruction FDIV not yet implemented."
	1863 NotImplemented "Instruction FCMP not yet implemented."
	1864 NotImplemented "Instruction FCSEL not yet implemented."
	1865 NotImplemented "Instruction FCMP not yet implemented."
	1866 NotImplemented "Instruction FCSEL not yet implemented."
	1867 Move V1, [X21+824]
	1868 Move V4, [X21+828]
	1869 Move X9, [X21+6720]
	1870 NotImplemented "Instruction FCMP not yet implemented."
	1871 NotImplemented "Instruction FCSEL not yet implemented."
	1872 NotImplemented "Instruction FCMP not yet implemented."
	1873 NotImplemented "Instruction FCSEL not yet implemented."
	1874 Move [X21+824], S1
	1875 Move [X21+828], S4
	1876 Compare X9, 0
	1877 JumpIfEqual {2838}
	1878 Move W10, [X9+24]
	1879 NotImplemented "Instruction CMP not yet implemented."
	1880 NotImplemented "Instruction MADD not yet implemented."
	1881 Move [X9+344], S3
	1882 Move [X9+348], S0
	1883 Move V0, [X21+736]
	1884 Subtract S3, S8, S0
	1885 Subtract S2, S2, S0
	1886 Move [X9+332], S3
	1887 Move [X9+340], S2
	1888 Move W9, [X21+832]
	1889 Move [X21+888], S2
	1890 Compare W9, 0
	1891 JumpIfEqual {1900}
	1892 Move W9, [X21+892]
	1893 NotImplemented "Instruction CMP not yet implemented."
	1894 NotImplemented "Instruction CSET not yet implemented."
	1895 Or W8, W8, W9
	1896 Move TEMP, X8
	1897 And TEMP, TEMP, 1
	1898 Compare TEMP, 1
	1899 JumpIfEqual {1915}
	1900 Move X8, [X21+104]
	1901 Move [X21+884], S1
	1902 Compare X8, 0
	1903 JumpIfEqual {2838}
	1904 Move V9, [X21+880]
	1905 Add X0, X8, 176
	1906 Move X1, X31
	1907 Call FaceInfo.get_capLine, X0
	1908 Move V1, [X31+128]
	1909 Multiply S0, S12, S0
	1910 NotImplemented "Instruction FDIV not yet implemented."
	1911 Move V0, [X21+736]
	1912 NotImplemented "Instruction FCMP not yet implemented."
	1913 NotImplemented "Instruction FCSEL not yet implemented."
	1914 Move [X21+880], S1
	1915 NotImplemented "Instruction FCMP not yet implemented."
	1916 Move W8, [X31+140]
	1917 Compare W8, 0
	1918 JumpIfEqual {1922}
	1919 Move W8, [X21+804]
	1920 Move W9, [X21+808]
	1921 NotImplemented "Instruction CMP not yet implemented."
	1922 Move V1, [X21+6600]
	1923 NotImplemented "Instruction FCMP not yet implemented."
	1924 NotImplemented "Instruction FCSEL not yet implemented."
	1925 Move [X21+6600], S1
	1926 Move W24, [X21+344]
	1927 NotImplemented "Instruction CMP not yet implemented."
	1928 Move W8, 0x200B
	1929 NotImplemented "Instruction CMP not yet implemented."
	1930 Move W8, [X31+56]
	1931 NotImplemented "Instruction CMP not yet implemented."
	1932 Move W8, [X31+140]
	1933 Compare W8, 0
	1934 JumpIfNotEqual {1951}
	1935 Move W8, [X31+140]
	1936 Compare W8, 0
	1937 JumpIfEqual {1947}
	1938 Move W8, [X31+60]
	1939 Move W9, [X31+116]
	1940 NotImplemented "Instruction ORN not yet implemented."
	1941 Move TEMP, X8
	1942 And TEMP, TEMP, 1
	1943 Compare TEMP, 1
	1944 JumpIfNotEqual {1951}
	1945 Move W8, [X22]
	1946 NotImplemented "Instruction CMP not yet implemented."
	1947 NotImplemented "Instruction CMP not yet implemented."
	1948 Move W8, 0x200B
	1949 NotImplemented "Instruction CMP not yet implemented."
	1950 NotImplemented "Instruction CMP not yet implemented."
	1951 Move V0, [X21+852]
	1952 Move V4, [X31+92]
	1953 Move V1, [X21+856]
	1954 Move V2, [X21+860]
	1955 Move V3, [X21+756]
	1956 Subtract S0, S4, S0
	1957 Subtract S0, S0, S1
	1958 NotImplemented "Instruction FCMP not yet implemented."
	1959 Move S1, -1
	1960 NotImplemented "Instruction FCCMP not yet implemented."
	1961 Add X0, X31, 560
	1962 Move X1, X31
	1963 NotImplemented "Instruction FCSEL not yet implemented."
	1964 NotImplemented "Instruction FABS not yet implemented."
	1965 Call GlyphMetrics.get_horizontalAdvance, X0
	1966 Move V1, [X21+5524]
	1967 Move W8, [X31+116]
	1968 Move S2, 1
	1969 Subtract S1, S2, S1
	1970 NotImplemented "Instruction CMP not yet implemented."
	1971 Multiply S0, S0, S1
	1972 NotImplemented "Instruction FCSEL not yet implemented."
	1973 Multiply S0, S1, S0
	1974 Add S9, S9, S0
	1975 Move TEMP, X28
	1976 And TEMP, TEMP, 1
	1977 Compare TEMP, 1
	1978 JumpIfNotEqual {1994}
	1979 Move X8, -52269056
	1980 Move V0, [X8+400]
	1981 And W31, W24, 24
	1982 Move S1, 1
	1983 NotImplemented "Instruction FCSEL not yet implemented."
	1984 Multiply S0, S11, S8
	1985 NotImplemented "Instruction FCMP not yet implemented."
	1986 Move W8, [X31+100]
	1987 Compare W8, 0
	1988 JumpIfEqual {1994}
	1989 Move W8, [X31+100]
	1990 NotImplemented "Instruction CMP not yet implemented."
	1991 Move W8, [X21+804]
	1992 Move W9, [X21+808]
	1993 NotImplemented "Instruction CMP not yet implemented."
	1994 Move V0, [X21+852]
	1995 Move V1, [X21+884]
	1996 Move V2, [X21+888]
	1997 Move V3, [X21+856]
	1998 Add S0, S9, S0
	1999 Subtract S1, S1, S2
	2000 Add S2, S0, S3
	2001 Move V3, [X31+120]
	2002 Move V0, [X21+736]
	2003 Move V2.S[1], V1.S[0]
	2004 NotImplemented "Instruction INVALID not yet implemented."
	2005 NotImplemented "Instruction INVALID not yet implemented."
	2006 Move [X31+120], D3
	2007 Move V14, [X31+96]
	2008 Move S10, W31
	2009 NotImplemented "Instruction FCMP not yet implemented."
	2010 Move X8, 0x49E000
	2011 Move X8, [X8+2888]
	2012 Move V8, [X21+824]
	2013 Move V9, [X21+5548]
	2014 Move X0, [X8]
	2015 Move W8, [X0+224]
	2016 Compare W8, 0
	2017 JumpIfNotEqual {2019}
	2018 Call 0x1C17DFC
	2019 Move V0, V8
	2020 Move V1, V9
	2021 Move X0, X31
	2022 Call TextGeneratorUtilities.Approximately, V0, V1
	2023 Move TEMP, X0
	2024 And TEMP, TEMP, 1
	2025 Compare TEMP, 1
	2026 JumpIfEqual {2045}
	2027 Move W8, [X21+744]
	2028 Compare W8, 0
	2029 JumpIfNotEqual {2045}
	2030 Move W8, [X21+892]
	2031 NotImplemented "Instruction CMP not yet implemented."
	2032 Move V0, [X21+824]
	2033 Move V1, [X21+5548]
	2034 Move V2, [X21+888]
	2035 Move V3, [X21+736]
	2036 Subtract S0, S0, S1
	2037 Subtract S2, S2, S0
	2038 Add S3, S0, S3
	2039 Add S0, S1, S0
	2040 Move [X21+888], S2
	2041 Move [X21+736], S3
	2042 Move [X21+5548], S0
	2043 Move [X31+2644], S3
	2044 Move [X31+2592], S0
	2045 Move W8, 0x200B
	2046 NotImplemented "Instruction CMP not yet implemented."
	2047 NotImplemented "Instruction CMP not yet implemented."
	2048 Move X24, [X31+144]
	2049 Move X0, [X24]
	2050 Compare X0, 0
	2051 JumpIfEqual {2838}
	2052 Add X8, X31, 160
	2053 Move X1, X31
	2054 Call FontAsset.get_faceInfo, X0
	2055 Add X0, X31, 592
	2056 Add X1, X31, 160
	2057 Move W2, 96
	2058 Call 0x3EB2AC0
	2059 Add X0, X31, 592
	2060 Move X1, X31
	2061 Call FaceInfo.get_tabWidth, X0
	2062 Move X0, [X24]
	2063 Compare X0, 0
	2064 JumpIfEqual {2838}
	2065 Move X1, X31
	2066 Move V8, V0
	2067 Call FontAsset.get_tabMultiple, X0
	2068 And W8, W0, 255
	2069 Move V0, [X21+756]
	2070 NotImplemented "Instruction UCVTF not yet implemented."
	2071 Multiply S1, S8, S1
	2072 Multiply S1, S12, S1
	2073 NotImplemented "Instruction FDIV not yet implemented."
	2074 NotImplemented "Instruction FRINTP not yet implemented."
	2075 Add S3, S0, S1
	2076 Multiply S1, S1, S2
	2077 NotImplemented "Instruction FCMP not yet implemented."
	2078 Move W28, W31
	2079 NotImplemented "Instruction FCSEL not yet implemented."
	2080 Move W27, 9
	2081 Move W28, W31
	2082 Move V8, [X21+752]
	2083 Move V11, [X21+756]
	2084 NotImplemented "Instruction FCMP not yet implemented."
	2085 Move X8, [X31+144]
	2086 Move X0, [X8]
	2087 Compare X0, 0
	2088 JumpIfEqual {2838}
	2089 Move X1, X31
	2090 Call FontAsset.get_regularStyleSpacing, X0
	2091 Move V1, [X21+748]
	2092 Move V2, [X21+5524]
	2093 Subtract S3, S8, S15
	2094 Add S0, S13, S0
	2095 Add X0, X31, 560
	2096 Move X1, X31
	2097 Call GlyphMetrics.get_horizontalAdvance, X0
	2098 Move V12, [X21+6568]
	2099 Add X0, X31, 544
	2100 Move X1, X31
	2101 Move V8, V0
	2102 Call GlyphValueRecord.get_xAdvance, X0
	2103 Move X0, [X21+104]
	2104 Compare X0, 0
	2105 JumpIfEqual {2838}
	2106 Move X1, X31
	2107 Move V9, V0
	2108 Call FontAsset.get_regularStyleSpacing, X0
	2109 Multiply S3, S8, S12
	2110 Move V4, [X31+104]
	2111 Move V12, [X31+136]
	2112 Move V1, [X21+748]
	2113 Move V2, [X21+5524]
	2114 Add S0, S13, S0
	2115 Add S3, S3, S9
	2116 Add S0, S4, S0
	2117 Multiply S3, S12, S3
	2118 Multiply S0, S14, S0
	2119 Add S0, S3, S0
	2120 Add S0, S1, S0
	2121 Move S1, 1
	2122 Move W8, [X31+140]
	2123 Subtract S1, S1, S2
	2124 Multiply S0, S1, S0
	2125 Add S0, S11, S0
	2126 Move [X21+756], S0
	2127 Compare W8, 0
	2128 JumpIfEqual {2133}
	2129 Move V1, [X19+196]
	2130 Multiply S1, S14, S1
	2131 Add S0, S0, S1
	2132 Move [X21+756], S0
	2133 NotImplemented "Instruction CMP not yet implemented."
	2134 Move V0, [X21+764]
	2135 Move W28, W31
	2136 Add S0, S0, S10
	2137 Move [X21+756], S0
	2138 Move X8, [X31+152]
	2139 Move W9, [X31+108]
	2140 Move W8, [X8]
	2141 NotImplemented "Instruction CMP not yet implemented."
	2142 Move V0, [X21+736]
	2143 NotImplemented "Instruction FCMP not yet implemented."
	2144 Move X8, 0x42F000
	2145 Move X8, [X8+1448]
	2146 Move V8, [X21+824]
	2147 Move V9, [X21+5548]
	2148 Move X0, [X8]
	2149 Move W8, [X0+224]
	2150 Compare W8, 0
	2151 JumpIfNotEqual {2153}
	2152 Call 0x1C17DFC
	2153 Move V2, [X31+44]
	2154 Subtract S0, S8, S9
	2155 NotImplemented "Instruction FABS not yet implemented."
	2156 NotImplemented "Instruction FCMP not yet implemented."
	2157 Move W8, [X21+744]
	2158 Compare W8, 0
	2159 JumpIfNotEqual {2168}
	2160 Move W8, [X21+892]
	2161 NotImplemented "Instruction CMP not yet implemented."
	2162 Move V1, [X21+888]
	2163 Move V2, [X21+736]
	2164 Subtract S1, S1, S0
	2165 Add S0, S0, S2
	2166 Move [X21+888], S1
	2167 Move [X21+736], S0
	2168 Move V0, [X21+828]
	2169 Move V1, [X21+736]
	2170 Move V2, [X21+888]
	2171 Move [X21+892], W31
	2172 Subtract S0, S0, S1
	2173 NotImplemented "Instruction FCMP not yet implemented."
	2174 NotImplemented "Instruction FCSEL not yet implemented."
	2175 Move [X21+888], S0
	2176 Move TEMP, X28
	2177 And TEMP, TEMP, 1
	2178 Compare TEMP, 1
	2179 JumpIfEqual {2187}
	2180 Move TEMP, 0x2027
	2181 Not TEMP
	2182 Move W8, TEMP
	2183 Add W8, W27, W8
	2184 NotImplemented "Instruction CMP not yet implemented."
	2185 NotImplemented "Instruction CMP not yet implemented."
	2186 NotImplemented "Instruction CMP not yet implemented."
	2187 Move W3, [X21+804]
	2188 Add X1, X31, 1608
	2189 Move X0, X21
	2190 Move W2, W26
	2191 Move X4, X23
	2192 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	2193 Move W3, [X21+804]
	2194 Add X1, X31, 2528
	2195 Move X0, X21
	2196 Move W2, W26
	2197 Move X4, X23
	2198 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	2199 Move W8, [X21+832]
	2200 NotImplemented "Instruction LDRSW not yet implemented."
	2201 Move X10, [X21+6720]
	2202 Add W11, W8, 1
	2203 Add W8, W9, 1
	2204 Move [X21+832], W11
	2205 Move [X21+808], W8
	2206 Compare X10, 0
	2207 JumpIfEqual {2838}
	2208 Move W11, [X10+24]
	2209 Move W29, 392
	2210 NotImplemented "Instruction CMP not yet implemented."
	2211 Move X11, -52273152
	2212 Move V1, [X21+740]
	2213 Move V2, [X11+532]
	2214 NotImplemented "Instruction NOP not yet implemented."
	2215 NotImplemented "Instruction MADD not yet implemented."
	2216 Move V0, [X9+344]
	2217 Move W9, 0x2029
	2218 NotImplemented "Instruction FCMP not yet implemented."
	2219 Move V4, [X21+5552]
	2220 Move V5, [X31+52]
	2221 Move V3, [X21+828]
	2222 Move S1, W31
	2223 Move V2, [X19+200]
	2224 Add S4, S5, S4
	2225 Move V5, [X31+48]
	2226 Subtract S3, S1, S3
	2227 Move V6, [X31+80]
	2228 Add S3, S0, S3
	2229 Multiply S4, S5, S4
	2230 Add S5, S3, S4
	2231 Move V3, [X31+76]
	2232 NotImplemented "Instruction CMP not yet implemented."
	2233 NotImplemented "Instruction CSET not yet implemented."
	2234 NotImplemented "Instruction CMP not yet implemented."
	2235 Xor W10, W28, 1
	2236 NotImplemented "Instruction FCSEL not yet implemented."
	2237 NotImplemented "Instruction FCSEL not yet implemented."
	2238 And W9, W9, W10
	2239 Move V4, V6
	2240 Move [X31+76], S3
	2241 Move [X31+84], S6
	2242 Move TEMP, X9
	2243 And TEMP, TEMP, 1
	2244 Compare TEMP, 1
	2245 JumpIfEqual {2249}
	2246 Move V1, [X19+204]
	2247 Move V3, V5
	2248 Move V4, V2
	2249 Move V2, [X21+736]
	2250 Add S1, S4, S1
	2251 Multiply S1, S14, S1
	2252 Add S1, S3, S1
	2253 Move W9, W31
	2254 Add S1, S1, S2
	2255 NotImplemented "Instruction CMP not yet implemented."
	2256 NotImplemented "Instruction CSET not yet implemented."
	2257 NotImplemented "Instruction BIC not yet implemented."
	2258 Move S2, W31
	2259 Move TEMP, X9
	2260 And TEMP, TEMP, 1
	2261 Compare TEMP, 1
	2262 JumpIfEqual {2264}
	2263 Move V2, [X19+204]
	2264 Move V3, [X19+200]
	2265 Move V4, [X21+736]
	2266 Move W9, 1
	2267 Add S2, S3, S2
	2268 Multiply S2, S14, S2
	2269 Add S1, S1, S2
	2270 Add S1, S4, S1
	2271 Move [X21+736], S1
	2272 Move V1, [X21+760]
	2273 Move V2, [X21+764]
	2274 Move V3, [X31+64]
	2275 Move [X21+5548], S0
	2276 Add S0, S1, S10
	2277 Add S0, S0, S2
	2278 Move [X21+744], W9
	2279 Move [X21+824], D3
	2280 Move [X21+756], S0
	2281 Move [X21+804], W8
	2282 NotImplemented "Instruction CMP not yet implemented."
	2283 NotImplemented "Instruction CSET not yet implemented."
	2284 NotImplemented "Instruction CMP not yet implemented."
	2285 Move W8, 1
	2286 NotImplemented "Instruction LSLV not yet implemented."
	2287 Move W9, 3080
	2288 And W31, W8, W9
	2289 Move TEMP, 0x2027
	2290 Not TEMP
	2291 Move W8, TEMP
	2292 Add W8, W27, W8
	2293 NotImplemented "Instruction CMP not yet implemented."
	2294 Move W8, [X31+132]
	2295 Compare W8, 0
	2296 JumpIfEqual {2302}
	2297 Move X8, [X21+32]
	2298 Move W9, [X31+100]
	2299 Compare X8, 0
	2300 JumpIfEqual {2838}
	2301 Move W26, [X8+24]
	2302 Move W9, [X31+100]
	2303 NotImplemented "Instruction CMP not yet implemented."
	2304 Compare W9, 0
	2305 JumpIfNotEqual {2309}
	2306 Move W8, [X19+116]
	2307 Or W8, W8, 2
	2308 NotImplemented "Instruction CMP not yet implemented."
	2309 Move W8, [X31+140]
	2310 Compare W8, 0
	2311 JumpIfEqual {2350}
	2312 Move W8, [X21+893]
	2313 Compare W8, 0
	2314 JumpIfEqual {2357}
	2315 Move W8, [X31+88]
	2316 Move TEMP, X8
	2317 And TEMP, TEMP, 1
	2318 Compare TEMP, 1
	2319 JumpIfNotEqual {2581}
	2320 Move W8, [X31+140]
	2321 Move W10, [X31+116]
	2322 Move W3, [X21+804]
	2323 Add X1, X31, 2528
	2324 NotImplemented "Instruction CMP not yet implemented."
	2325 NotImplemented "Instruction CSET not yet implemented."
	2326 NotImplemented "Instruction CMP not yet implemented."
	2327 NotImplemented "Instruction CSET not yet implemented."
	2328 Or W9, W9, W8
	2329 And W31, W10, W8
	2330 Move W8, [X31+60]
	2331 Move X0, X21
	2332 Move W2, W26
	2333 Move X4, X23
	2334 NotImplemented "Instruction CSEL not yet implemented."
	2335 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	2336 Move W20, 1
	2337 Move W8, 1
	2338 Move [X31+88], W8
	2339 Move TEMP, X24
	2340 And TEMP, TEMP, 1
	2341 Compare TEMP, 1
	2342 JumpIfEqual {2582}
	2343 Move W3, [X21+804]
	2344 Add X1, X31, 688
	2345 Move X0, X21
	2346 Move W2, W26
	2347 Move X4, X23
	2348 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	2349 Move [X31+88], W20
	2350 NotImplemented "Instruction CMP not yet implemented."
	2351 Move W8, 0x200B
	2352 NotImplemented "Instruction CMP not yet implemented."
	2353 NotImplemented "Instruction CMP not yet implemented."
	2354 Move W8, [X21+893]
	2355 Compare W8, 0
	2356 JumpIfNotEqual {2315}
	2357 Move W8, 0x2006
	2358 NotImplemented "Instruction CMP not yet implemented."
	2359 Move TEMP, 0x2006
	2360 Not TEMP
	2361 Move W8, TEMP
	2362 Add W8, W27, W8
	2363 NotImplemented "Instruction CMP not yet implemented."
	2364 Move W9, 1
	2365 NotImplemented "Instruction LSLV not yet implemented."
	2366 Move X9, 1025
	2367 NotImplemented "Instruction MOVK not yet implemented."
	2368 And X31, X8, X9
	2369 Move W8, 0x2060
	2370 NotImplemented "Instruction CMP not yet implemented."
	2371 NotImplemented "Instruction CMP not yet implemented."
	2372 NotImplemented "Instruction CMP not yet implemented."
	2373 Move X8, 0x49D000
	2374 Move X8, [X8+2888]
	2375 Move X0, [X8]
	2376 Move W8, [X0+224]
	2377 Compare W8, 0
	2378 JumpIfNotEqual {2380}
	2379 Call 0x1C17DFC
	2380 Move W0, W27
	2381 Move X1, X31
	2382 Call TextGeneratorUtilities.IsHangul, X0
	2383 Move X24, [X31+16]
	2384 Move TEMP, X0
	2385 And TEMP, TEMP, 1
	2386 Compare TEMP, 1
	2387 JumpIfNotEqual {2397}
	2388 Compare X24, 0
	2389 JumpIfEqual {2838}
	2390 Move X0, X24
	2391 Move X1, X31
	2392 Call TextSettings.get_useModernHangulLineBreakingRules, X0
	2393 Move TEMP, X0
	2394 And TEMP, TEMP, 1
	2395 Compare TEMP, 1
	2396 JumpIfNotEqual {2414}
	2397 Move X8, 0x49D000
	2398 Move X8, [X8+2888]
	2399 Move X0, [X8]
	2400 Move W8, [X0+224]
	2401 Compare W8, 0
	2402 JumpIfNotEqual {2404}
	2403 Call 0x1C17DFC
	2404 Move W0, W27
	2405 Move X1, X31
	2406 Call TextGeneratorUtilities.IsCJK, X0
	2407 Move TEMP, X0
	2408 And TEMP, TEMP, 1
	2409 Compare TEMP, 1
	2410 JumpIfNotEqual {2315}
	2411 Move X24, [X31+16]
	2412 Compare X24, 0
	2413 JumpIfEqual {2838}
	2414 Move X0, X24
	2415 Move X1, X31
	2416 Call TextSettings.get_lineBreakingRules, X0
	2417 Compare X0, 0
	2418 JumpIfEqual {2838}
	2419 Move X1, X31
	2420 Call UnicodeLineBreakingRules.get_leadingCharactersLookup, X0
	2421 Compare X0, 0
	2422 JumpIfEqual {2838}
	2423 Move X8, 0x494000
	2424 Move X8, [X8+3584]
	2425 Move W1, W27
	2426 Move X2, [X8]
	2427 Call HashSet`1<UInt32>.Contains, X0, X1
	2428 Move X8, [X31+152]
	2429 Move W9, [X31+108]
	2430 Move W27, W0
	2431 Move W8, [X8]
	2432 NotImplemented "Instruction CMP not yet implemented."
	2433 Move X0, X24
	2434 Move X1, X31
	2435 Call TextSettings.get_lineBreakingRules, X0
	2436 Compare X0, 0
	2437 JumpIfEqual {2838}
	2438 Move X1, X31
	2439 Call UnicodeLineBreakingRules.get_leadingCharactersLookup, X0
	2440 Move X8, [X21+6720]
	2441 Compare X8, 0
	2442 JumpIfEqual {2838}
	2443 Move X9, [X31+152]
	2444 Move W10, [X8+24]
	2445 Move W9, [X9]
	2446 Add W9, W9, 1
	2447 NotImplemented "Instruction CMP not yet implemented."
	2448 Compare X0, 0
	2449 JumpIfEqual {2838}
	2450 NotImplemented "Instruction SMADDL not yet implemented."
	2451 NotImplemented "Instruction LDRH not yet implemented."
	2452 Move X8, 0x494000
	2453 Move X8, [X8+3584]
	2454 Move X2, [X8]
	2455 Call HashSet`1<UInt32>.Contains, X0, X1
	2456 And W8, W0, 1
	2457 Add X1, X31, 2528
	2458 Move X0, X21
	2459 Move X2, X23
	2460 Call TextGenerator.RestoreWordWrappingState, X0, X1, X2
	2461 Move X8, [X21+6720]
	2462 Compare X8, 0
	2463 JumpIfEqual {2838}
	2464 NotImplemented "Instruction LDRSW not yet implemented."
	2465 Move W11, [X8+24]
	2466 Move W13, [X31+28]
	2467 Move W29, 392
	2468 Subtract W10, W9, 1
	2469 NotImplemented "Instruction CMP not yet implemented."
	2470 NotImplemented "Instruction SMADDL not yet implemented."
	2471 NotImplemented "Instruction LDRH not yet implemented."
	2472 Move W14, [X31+60]
	2473 Move W26, W0
	2474 NotImplemented "Instruction CMP not yet implemented."
	2475 NotImplemented "Instruction CSET not yet implemented."
	2476 Or W12, W14, W12
	2477 Move TEMP, X12
	2478 And TEMP, TEMP, 1
	2479 Compare TEMP, 1
	2480 JumpIfEqual {2484}
	2481 Move W12, [X19+116]
	2482 Compare W12, 0
	2483 JumpIfEqual {2712}
	2484 NotImplemented "Instruction CMP not yet implemented."
	2485 NotImplemented "Instruction MADD not yet implemented."
	2486 NotImplemented "Instruction LDRH not yet implemented."
	2487 NotImplemented "Instruction CMP not yet implemented."
	2488 Move W8, 1
	2489 Move [X31+60], W8
	2490 Move W8, W31
	2491 Move TEMP, X27
	2492 And TEMP, TEMP, 1
	2493 Compare TEMP, 1
	2494 JumpIfNotEqual {2507}
	2495 Move W9, [X31+140]
	2496 NotImplemented "Instruction CMP not yet implemented."
	2497 NotImplemented "Instruction CSET not yet implemented."
	2498 NotImplemented "Instruction CMP not yet implemented."
	2499 Move W9, [X31+88]
	2500 NotImplemented "Instruction CSET not yet implemented."
	2501 NotImplemented "Instruction ORN not yet implemented."
	2502 Move TEMP, X8
	2503 And TEMP, TEMP, 1
	2504 Compare TEMP, 1
	2505 JumpIfEqual {2582}
	2506 Move W20, 1
	2507 Move W9, [X31+140]
	2508 Move W11, [X31+88]
	2509 NotImplemented "Instruction CMP not yet implemented."
	2510 NotImplemented "Instruction CSET not yet implemented."
	2511 NotImplemented "Instruction CMP not yet implemented."
	2512 NotImplemented "Instruction CSET not yet implemented."
	2513 NotImplemented "Instruction CSET not yet implemented."
	2514 And W20, W11, W10
	2515 Or W8, W11, W8
	2516 And W24, W20, W9
	2517 Move TEMP, X8
	2518 And TEMP, TEMP, 1
	2519 Compare TEMP, 1
	2520 JumpIfNotEqual {2709}
	2521 Move W3, [X21+804]
	2522 Add X1, X31, 2528
	2523 Move X0, X21
	2524 Move W2, W26
	2525 Move X4, X23
	2526 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	2527 Move [X31+88], W20
	2528 Move TEMP, X24
	2529 And TEMP, TEMP, 1
	2530 Compare TEMP, 1
	2531 JumpIfEqual {2343}
	2532 Subtract W9, W9, 1
	2533 NotImplemented "Instruction CMP not yet implemented."
	2534 Compare X10, 0
	2535 JumpIfEqual {2838}
	2536 NotImplemented "Instruction SMADDL not yet implemented."
	2537 Move V11, [X8+104]
	2538 Add X0, X10, 176
	2539 Move X1, X31
	2540 Call FaceInfo.get_pointSize, X0
	2541 Move X8, [X31+144]
	2542 Move X8, [X8]
	2543 Compare X8, 0
	2544 JumpIfNotEqual {827}
	2545 Move X8, [X31+152]
	2546 Move W8, [X8]
	2547 Subtract W8, W8, 1
	2548 Move X9, [X23+48]
	2549 Compare X9, 0
	2550 JumpIfEqual {2838}
	2551 Move W10, [X9+24]
	2552 NotImplemented "Instruction CMP not yet implemented."
	2553 Move W10, 392
	2554 Move X11, 0x431000
	2555 Move X11, [X11+368]
	2556 NotImplemented "Instruction NOP not yet implemented."
	2557 NotImplemented "Instruction UMADDL not yet implemented."
	2558 NotImplemented "Instruction LDRH not yet implemented."
	2559 Move X0, [X11]
	2560 Move W9, [X0+224]
	2561 Compare W9, 0
	2562 JumpIfNotEqual {2564}
	2563 Call 0x1C17DFC
	2564 Move W0, W25
	2565 Move X1, X31
	2566 Call Char.IsWhiteSpace, X0
	2567 Move TEMP, X0
	2568 And TEMP, TEMP, 1
	2569 Compare TEMP, 1
	2570 JumpIfEqual {2582}
	2571 Move TEMP, 0
	2572 Not TEMP
	2573 Move W8, TEMP
	2574 Move [X31+688], W8
	2575 Move W3, [X21+804]
	2576 Add X1, X31, 2528
	2577 Move X0, X21
	2578 Move W2, W26
	2579 Move X4, X23
	2580 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	2581 Move [X31+88], W31
	2582 Move X9, [X31+152]
	2583 Move W29, 392
	2584 Move W8, [X9]
	2585 Add W8, W8, 1
	2586 Move [X9], W8
	2587 Move W8, [X31+88]
	2588 And W8, W8, W13
	2589 Move TEMP, X8
	2590 And TEMP, TEMP, 1
	2591 Compare TEMP, 1
	2592 JumpIfNotEqual {2637}
	2593 Move V0, [X19+264]
	2594 Move V1, [X21+5524]
	2595 Move W8, 0x42C80000
	2596 Move S2, W8
	2597 NotImplemented "Instruction FDIV not yet implemented."
	2598 NotImplemented "Instruction FCMP not yet implemented."
	2599 Move W8, [X21+5536]
	2600 Move W9, [X21+5540]
	2601 NotImplemented "Instruction CMP not yet implemented."
	2602 Move X8, [X31+32]
	2603 Move V1, [X19+172]
	2604 Move V0, [X8]
	2605 NotImplemented "Instruction FCMP not yet implemented."
	2606 Move W8, [X21+5536]
	2607 Move W9, [X21+5540]
	2608 NotImplemented "Instruction CMP not yet implemented."
	2609 Move X9, [X31+32]
	2610 Move [X21+5528], S0
	2611 Move V0, [X21+5532]
	2612 Move X8, -52273152
	2613 Move V1, [X9]
	2614 Move V2, [X8+512]
	2615 Move S4, 0.5
	2616 Move W8, 0x7F800000
	2617 Subtract S0, S1, S0
	2618 Multiply S0, S0, S4
	2619 NotImplemented "Instruction FMAXNM not yet implemented."
	2620 Subtract S0, S1, S0
	2621 Move S5, 20
	2622 Move S3, W8
	2623 Move X8, -52273152
	2624 Move [X9], S0
	2625 Multiply S0, S0, S5
	2626 Move V2, [X8+1056]
	2627 Add S0, S0, S4
	2628 Move V1, [X19+172]
	2629 NotImplemented "Instruction FCVTZS not yet implemented."
	2630 NotImplemented "Instruction FCMP not yet implemented."
	2631 NotImplemented "Instruction SCVTF not yet implemented."
	2632 NotImplemented "Instruction FDIV not yet implemented."
	2633 NotImplemented "Instruction FCSEL not yet implemented."
	2634 NotImplemented "Instruction FCMP not yet implemented."
	2635 NotImplemented "Instruction FCSEL not yet implemented."
	2636 Move [X9], S0
	2637 Move V0, [X21+736]
	2638 Move V11, [X31+96]
	2639 Move S10, W31
	2640 NotImplemented "Instruction FCMP not yet implemented."
	2641 Move X8, 0x42F000
	2642 Move X8, [X8+1448]
	2643 Move V8, [X21+824]
	2644 Move V9, [X21+5548]
	2645 Move X0, [X8]
	2646 Move W8, [X0+224]
	2647 Compare W8, 0
	2648 JumpIfNotEqual {2650}
	2649 Call 0x1C17DFC
	2650 Move V2, [X31+44]
	2651 Subtract S0, S8, S9
	2652 NotImplemented "Instruction FABS not yet implemented."
	2653 NotImplemented "Instruction FCMP not yet implemented."
	2654 Move W8, [X21+744]
	2655 Compare W8, 0
	2656 JumpIfNotEqual {2665}
	2657 Move W8, [X21+892]
	2658 NotImplemented "Instruction CMP not yet implemented."
	2659 Move V1, [X21+888]
	2660 Move V2, [X21+736]
	2661 Subtract S1, S1, S0
	2662 Add S0, S0, S2
	2663 Move [X21+888], S1
	2664 Move [X21+736], S0
	2665 Move V0, [X21+736]
	2666 Move V1, [X21+828]
	2667 Move V2, [X21+888]
	2668 Move W8, [X21+804]
	2669 Add X1, X31, 1608
	2670 Subtract S0, S1, S0
	2671 NotImplemented "Instruction FCMP not yet implemented."
	2672 NotImplemented "Instruction FCSEL not yet implemented."
	2673 Subtract W3, W8, 1
	2674 Move X0, X21
	2675 Move W2, W26
	2676 Move X4, X23
	2677 Move [X21+836], W31
	2678 Move [X21+808], W8
	2679 Move [X21+888], S0
	2680 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	2681 Move W9, [X21+832]
	2682 Move X8, [X21+6720]
	2683 Add W9, W9, 1
	2684 Move [X21+832], W9
	2685 Compare X8, 0
	2686 JumpIfEqual {2838}
	2687 NotImplemented "Instruction LDRSW not yet implemented."
	2688 Move W10, [X8+24]
	2689 NotImplemented "Instruction CMP not yet implemented."
	2690 Move X10, -52273152
	2691 Move V1, [X21+740]
	2692 Move V2, [X10+532]
	2693 NotImplemented "Instruction NOP not yet implemented."
	2694 NotImplemented "Instruction MADD not yet implemented."
	2695 Move V0, [X8+344]
	2696 NotImplemented "Instruction FCMP not yet implemented."
	2697 Move V2, [X21+5552]
	2698 Move V4, [X31+52]
	2699 Move V1, [X21+828]
	2700 Move V3, [X19+200]
	2701 Move W8, W31
	2702 Add S2, S4, S2
	2703 Move V4, [X31+48]
	2704 Subtract S1, S10, S1
	2705 Add S1, S0, S1
	2706 Multiply S2, S4, S2
	2707 Add S2, S1, S2
	2708 Multiply S1, S11, S3
	2709 Move [X31+88], W20
	2710 Compare W24, 0
	2711 JumpIfNotEqual {2343}
	2712 Move W8, 45
	2713 Move [X31+3452], W8
	2714 Move X8, [X31+152]
	2715 Move [X31+60], W31
	2716 Move [X31+3448], W10
	2717 Subtract W26, W26, 1
	2718 Move [X8], W10
	2719 Move V2, [X19+200]
	2720 Move W8, 1
	2721 Multiply S2, S11, S2
	2722 Move V3, [X21+736]
	2723 Add S1, S1, S2
	2724 Move V2, [X21+764]
	2725 Move V4, [X31+64]
	2726 Move [X21+744], W8
	2727 Move [X21+5548], S0
	2728 Add S0, S3, S1
	2729 Add S1, S2, S10
	2730 Move W8, 1
	2731 Move [X31+60], W31
	2732 Move [X21+824], D4
	2733 Move [X21+736], S0
	2734 Move [X21+756], S1
	2735 Move [X31+88], W8
	2736 Move V0, [X21+5528]
	2737 Move V1, [X21+5532]
	2738 Move X8, -52273152
	2739 Move V2, [X8+208]
	2740 Move X10, [X31+32]
	2741 Subtract S1, S0, S1
	2742 NotImplemented "Instruction FCMP not yet implemented."
	2743 Move W8, [X31+28]
	2744 Move TEMP, X8
	2745 And TEMP, TEMP, 1
	2746 Compare TEMP, 1
	2747 JumpIfNotEqual {2797}
	2748 Move V1, [X10]
	2749 Move V2, [X19+176]
	2750 NotImplemented "Instruction FCMP not yet implemented."
	2751 Move W8, [X21+5536]
	2752 Move W9, [X21+5540]
	2753 NotImplemented "Instruction CMP not yet implemented."
	2754 Move V2, [X19+264]
	2755 Move V3, [X21+5524]
	2756 Move W8, 0x42C80000
	2757 Move S4, W8
	2758 NotImplemented "Instruction FDIV not yet implemented."
	2759 NotImplemented "Instruction FCMP not yet implemented."
	2760 Move [X21+5524], W31
	2761 Move V1, [X10]
	2762 Move [X21+5532], S1
	2763 Move V1, [X10]
	2764 Move X8, -52273152
	2765 Move V2, [X8+512]
	2766 Move S3, 0.5
	2767 Subtract S0, S0, S1
	2768 Multiply S0, S0, S3
	2769 NotImplemented "Instruction FMAXNM not yet implemented."
	2770 Move S2, 20
	2771 Add S0, S1, S0
	2772 Move W8, 0x7F800000
	2773 Move X9, -52273152
	2774 Move [X10], S0
	2775 Multiply S0, S0, S2
	2776 Move V1, [X9+1056]
	2777 Add S0, S0, S3
	2778 Move S3, W8
	2779 NotImplemented "Instruction FCMP not yet implemented."
	2780 Move V3, [X19+176]
	2781 NotImplemented "Instruction FCVTZS not yet implemented."
	2782 NotImplemented "Instruction SCVTF not yet implemented."
	2783 NotImplemented "Instruction FDIV not yet implemented."
	2784 NotImplemented "Instruction FCSEL not yet implemented."
	2785 NotImplemented "Instruction FCMP not yet implemented."
	2786 NotImplemented "Instruction FCSEL not yet implemented."
	2787 Move [X10], S0
	2788 Move X19, 0x715000
	2789 Move W8, [X19+1935]
	2790 Compare W8, 0
	2791 JumpIfNotEqual {246}
	2792 Move X0, 0x437000
	2793 Move X0, [X0+3848]
	2794 Call 0x1C17CF4
	2795 Move W8, 1
	2796 Move [X19+1935], W8
	2797 Move W8, 1
	2798 Move [X22+1136], W31
	2799 Move [X22+48], W8
	2800 Move D0, [X19+40]
	2801 Move D1, [X19+48]
	2802 NotImplemented "Instruction MOVI not yet implemented."
	2803 Move W8, 0x42C80000
	2804 Move W9, 0x7F800000
	2805 NotImplemented "Instruction FMAXNM not yet implemented."
	2806 NotImplemented "Instruction FMAXNM not yet implemented."
	2807 Move V2, [X31+120]
	2808 Move W10, 0xD70A
	2809 NotImplemented "Instruction MOVK not yet implemented."
	2810 Add V0, V2, V0
	2811 Add V0, V0, V1
	2812 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2813 Move V2, 0
	2814 NotImplemented "Instruction INVALID not yet implemented."
	2815 Add V0, V0, V2
	2816 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2817 NotImplemented "Instruction FCMEQ not yet implemented."
	2818 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2819 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2820 NotImplemented "Instruction INVALID not yet implemented."
	2821 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2822 NotImplemented "Instruction INVALID not yet implemented."
	2823 NotImplemented "Instruction FCMP not yet implemented."
	2824 Move V2, V9
	2825 Move S2, 1
	2826 Subtract S2, S2, S1
	2827 NotImplemented "Instruction FDIV not yet implemented."
	2828 Move X8, -52273152
	2829 Move V3, [X8+752]
	2830 Add S3, S8, S3
	2831 Multiply S3, S11, S3
	2832 Subtract S3, S9, S3
	2833 NotImplemented "Instruction FDIV not yet implemented."
	2834 Add S1, S1, S2
	2835 NotImplemented "Instruction FCMP not yet implemented."
	2836 NotImplemented "Instruction FCSEL not yet implemented."
	2837 Move [X21+5524], S0
	2838 Call 0x1C17F20
	2839 Call 0x1C17F28
	2840 Move X0, X28
	2841 Call 0x1C181E0

Method: System.Void PopulateTextBackingArray(System.String sourceText)

Disassembly:
	0x03CB98F4 STR X2, [X31 + 0x40]
	0x03CB98F8 BL 0x3CA994C
	0x03CB98FC LDP X21, X24, [X31 + 0x30]
	0x03CB9900 CBZ X24, 0x3CB9958
	0x03CB9904 LDR X8, [X24 + 0x30]!
	0x03CB9908 CBZ X8, 0x3CBAA60

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {4}
	003 Move W3, [X1+16]
	004 Move W3, W31
	005 Move W2, W31
	006 Call TextGenerator.PopulateTextBackingArray, X0, X1, X2, X3
	007 Return 

Method: System.Void PopulateTextBackingArray(System.String sourceText, System.Int32 start, System.Int32 length)

Disassembly:
	0x03CC5BD4 MOV W0, W8
	0x03CC5BD8 BL 0x3CC5F50
	0x03CC5BDC CMP W23, 0xB
	0x03CC5BE0 B.EQ 0x3CC5F48
	0x03CC5BE4 CMP W23, 0xC
	0x03CC5BE8 B.LS 0x3CC5F48
	0x03CC5BEC LDRH W8, [X19 + 0x36]
	0x03CC5BF0 ADD W20, W21, W20, 0x4, LSL
	0x03CC5BF4 ADD W21, W0, W22, 0x4, LSL
	0x03CC5BF8 MOV W0, W8
	0x03CC5BFC BL 0x3CC5F50
	0x03CC5C00 LDRH W8, [X19 + 0x38]
	0x03CC5C04 B 0x3CC5D84
	0x03CC5C08 CBZ X19, 0x3CC5F4C
	0x03CC5C0C LDR X25, [X19 + 0x18]
	0x03CC5C10 CMP W25, 0x7
	0x03CC5C14 B.LS 0x3CC5F48
	0x03CC5C18 ADRP X8, 0x49C000
	0x03CC5C1C LDR X8, [X8 + 0xB48]
	0x03CC5C20 LDRH W20, [X19 + 0x2E]
	0x03CC5C24 LDR X0, [X8]
	0x03CC5C28 LDR W8, [X0 + 0xE0]
	0x03CC5C2C CBNZ W8, 0x3CC5C38
	0x03CC5C30 BL 0x1C16DFC
	0x03CC5C34 LDR X25, [X19 + 0x18]
	0x03CC5C38 CMP W25, 0x8
	0x03CC5C3C B.LS 0x3CC5F48
	0x03CC5C40 MOV W0, W20
	0x03CC5C44 BL 0x3CC5F50
	0x03CC5C48 LDRH W8, [X19 + 0x30]
	0x03CC5C4C MOV W20, W0
	0x03CC5C50 MOV W0, W8
	0x03CC5C54 BL 0x3CC5F50
	0x03CC5C58 CMP W25, 0x9
	0x03CC5C5C B.EQ 0x3CC5F48
	0x03CC5C60 CMP W25, 0xA
	0x03CC5C64 B.LS 0x3CC5F48
	0x03CC5C68 MOV W21, W0
	0x03CC5C6C LDRH W0, [X19 + 0x32]
	0x03CC5C70 BL 0x3CC5F50
	0x03CC5C74 LDRH W8, [X19 + 0x34]
	0x03CC5C78 MOV W22, W0
	0x03CC5C7C MOV W0, W8
	0x03CC5C80 BL 0x3CC5F50
	0x03CC5C84 CMP W25, 0xB
	0x03CC5C88 B.EQ 0x3CC5F48
	0x03CC5C8C CMP W25, 0xC
	0x03CC5C90 B.LS 0x3CC5F48
	0x03CC5C94 MOV W23, W0
	0x03CC5C98 LDRH W0, [X19 + 0x36]
	0x03CC5C9C BL 0x3CC5F50
	0x03CC5CA0 LDRH W8, [X19 + 0x38]
	0x03CC5CA4 MOV W24, W0
	0x03CC5CA8 MOV W0, W8
	0x03CC5CAC BL 0x3CC5F50
	0x03CC5CB0 CMP W25, 0xD
	0x03CC5CB4 B.EQ 0x3CC5F48
	0x03CC5CB8 CMP W25, 0xE
	0x03CC5CBC B.LS 0x3CC5F48
	0x03CC5CC0 LDRH W8, [X19 + 0x3A]
	0x03CC5CC4 ADD W21, W21, W20, 0x4, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X1
	008 Compare X1, 0
	009 JumpIfEqual {24}
	010 Move W8, [X19+16]
	011 Add W9, W3, W2
	012 Subtract W10, W8, W2
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSEL not yet implemented."
	018 Move TEMP, X3
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {25}
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Move W23, W31
	025 Move W20, W31
	026 Add X21, X0, 16
	027 Move X0, X21
	028 Move X1, X31
	029 Call TextBackingContainer.get_Capacity, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X21
	032 Move W1, W20
	033 Move X2, X31
	034 Call TextBackingContainer.Resize, X0, X1
	035 Add W8, W20, W23
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Compare X19, 0
	038 JumpIfEqual {68}
	039 Move W22, W31
	040 Add W1, W23, W22
	041 Move X0, X19
	042 Move X2, X31
	043 Call String.get_Chars, X0, X1
	044 And W2, W0, 0xFFFF
	045 Move X0, X21
	046 Move W1, W22
	047 Move X3, X31
	048 Call TextBackingContainer.set_Item, X0, X1, X2
	049 Add W22, W22, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W20, W31
	052 Move X0, X21
	053 Move W1, W20
	054 Move W2, W31
	055 Move X3, X31
	056 Call TextBackingContainer.set_Item, X0, X1, X2
	057 Move X0, X21
	058 Move W1, W20
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X2, X31
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Call TextBackingContainer.set_Count, X0, X1
	067 Return 
	068 Call 0x1C17F20

Method: System.Void PopulateTextProcessingArray(UnityEngine.TextCore.Text.TextGenerationSettings generationSettings)

Disassembly:
	0x03CB990C LDR W25, [X19 + 0x28]
	0x03CB9910 LDR W8, [X8 + 0x18]
	0x03CB9914 LDR X20, [X31 + 0x48]
	0x03CB9918 CMP W25, W8
	0x03CB991C B.LE 0x3CB9970
	0x03CB9920 ADRP X8, 0x4A8000
	0x03CB9924 LDR X8, [X8 + 0xB68]
	0x03CB9928 LDR X0, [X8]
	0x03CB992C LDR W8, [X0 + 0xE0]
	0x03CB9930 CBNZ W8, 0x3CB9938
	0x03CB9934 BL 0x1C16DFC
	0x03CB9938 ADRP X8, 0x4A8000
	0x03CB993C LDR X8, [X8 + 0xCA8]
	0x03CB9940 MOV X0, X24
	0x03CB9944 MOV W1, W25
	0x03CB9948 MOV W2, W31
	0x03CB994C LDR X3, [X8]
	0x03CB9950 BL 0x229C3DC
	0x03CB9954 B 0x3CB9970
	0x03CB9958 LDR X0, [X20]
	0x03CB995C BL 0x1C16F10
	0x03CB9960 MOV X1, X31
	0x03CB9964 STR X0, [X31 + 0x38]
	0x03CB9968 BL 0x3CC9930
	0x03CB996C LDR X20, [X31 + 0x48]
	0x03CB9970 MOVZ W8, 0x1
	0x03CB9974 STRB W8, [X21]
	0x03CB9978 LDR W8, [X20 + 0x74]
	0x03CB997C CMP W8, 0x1
	0x03CB9980 B.NE 0x3CB9B10
	0x03CB9984 MOV X0, X19
	0x03CB9988 MOV X1, X20
	0x03CB998C BL 0x3CC1CF4
	0x03CB9990 LDR X8, [X19 + 0x1A00]
	0x03CB9994 CBZ X8, 0x3CB9A1C
	0x03CB9998 LDR X0, [X19 + 0x1A08]
	0x03CB999C CBZ X0, 0x3CBAA60
	0x03CB99A0 MOV X1, X31
	0x03CB99A4 BL 0x3C385F8
	0x03CB99A8 LDR X8, [X19 + 0x68]
	0x03CB99AC CBZ X8, 0x3CBAA60
	0x03CB99B0 MOV W24, W0
	0x03CB99B4 MOV X0, X8
	0x03CB99B8 MOV X1, X31
	0x03CB99BC BL 0x3C385F8
	0x03CB99C0 LDR X8, [X31 + 0x10]
	0x03CB99C4 CMP W24, W0
	0x03CB99C8 B.EQ 0x3CB9B10
	0x03CB99CC CBZ X8, 0x3CBAA60
	0x03CB99D0 LDRB W8, [X8 + 0x38]
	0x03CB99D4 CBZ W8, 0x3CB9A0C
	0x03CB99D8 LDR X0, [X19 + 0x70]
	0x03CB99DC CBZ X0, 0x3CBAA60
	0x03CB99E0 MOV X1, X31
	0x03CB99E4 BL 0x3C385F8
	0x03CB99E8 LDR X8, [X19 + 0x1A08]
	0x03CB99EC CBZ X8, 0x3CBAA60
	0x03CB99F0 MOV W24, W0
	0x03CB99F4 LDR X0, [X8 + 0x28]
	0x03CB99F8 CBZ X0, 0x3CBAA60
	0x03CB99FC MOV X1, X31
	0x03CB9A00 BL 0x3C385F8
	0x03CB9A04 CMP W24, W0
	0x03CB9A08 B.NE 0x3CB9A9C
	0x03CB9A0C LDR X1, [X19 + 0x1A08]
	0x03CB9A10 CBZ X1, 0x3CBAA60
	0x03CB9A14 LDR X0, [X1 + 0x28]
	0x03CB9A18 B 0x3CB9AD8
	0x03CB9A1C MOVZ W8, 0x3
	0x03CB9A20 STR W8, [X20 + 0x74]
	0x03CB9A24 LDR X8, [X31 + 0x10]
	0x03CB9A28 CBZ X8, 0x3CBAA60
	0x03CB9A2C LDRB W8, [X8 + 0x89]
	0x03CB9A30 CBZ W8, 0x3CB9B10
	0x03CB9A34 LDR X0, [X19 + 0x68]
	0x03CB9A38 CBZ X0, 0x3CBAA60
	0x03CB9A3C MOV X1, X31
	0x03CB9A40 BL 0x3C389D4
	0x03CB9A44 ADRP X8, 0x49F000
	0x03CB9A48 LDR X8, [X8 + 0x658]
	0x03CB9A4C ADRP X9, 0x49F000
	0x03CB9A50 LDR X9, [X9 + 0x660]
	0x03CB9A54 MOV X1, X0
	0x03CB9A58 LDR X8, [X8]
	0x03CB9A5C MOV X3, X31
	0x03CB9A60 LDR X2, [X9]
	0x03CB9A64 MOV X0, X8
	0x03CB9A68 BL 0x32274B8
	0x03CB9A6C ADRP X8, 0x43A000
	0x03CB9A70 LDR X8, [X8 + 0xA28]
	0x03CB9A74 MOV X24, X0
	0x03CB9A78 LDR X8, [X8]
	0x03CB9A7C LDR W9, [X8 + 0xE0]
	0x03CB9A80 CBNZ W9, 0x3CB9A8C
	0x03CB9A84 MOV X0, X8
	0x03CB9A88 BL 0x1C16DFC
	0x03CB9A8C MOV X0, X24
	0x03CB9A90 MOV X1, X31
	0x03CB9A94 BL 0x3C06A04
	0x03CB9A98 B 0x3CB9B10
	0x03CB9A9C LDR X8, [X19 + 0x1A08]
	0x03CB9AA0 CBZ X8, 0x3CBAA60
	0x03CB9AA4 ADRP X9, 0x4A8000
	0x03CB9AA8 LDR X9, [X9 + 0x628]
	0x03CB9AAC LDR X24, [X19 + 0x70]
	0x03CB9AB0 LDR X25, [X8 + 0x28]
	0x03CB9AB4 LDR X0, [X9]
	0x03CB9AB8 LDR W9, [X0 + 0xE0]
	0x03CB9ABC CBNZ W9, 0x3CB9AC4
	0x03CB9AC0 BL 0x1C16DFC
	0x03CB9AC4 MOV X0, X24
	0x03CB9AC8 MOV X1, X25
	0x03CB9ACC MOV X2, X31
	0x03CB9AD0 BL 0x3CA8FD4
	0x03CB9AD4 LDR X1, [X19 + 0x1A08]
	0x03CB9AD8 LDR X3, [X19 + 0x19E0]
	0x03CB9ADC LDR X2, [X31 + 0x40]
	0x03CB9AE0 MOV X4, X31
	0x03CB9AE4 STR X0, [X19 + 0x1A10]
	0x03CB9AE8 BL 0x3CA994C
	0x03CB9AEC LDR X8, [X19 + 0x15B8]
	0x03CB9AF0 STR W0, [X19 + 0x1A18]
	0x03CB9AF4 CBZ X8, 0x3CBAA60
	0x03CB9AF8 LDR W9, [X8 + 0x18]
	0x03CB9AFC CMP W0, W9
	0x03CB9B00 B.CS 0x3CBAA58
	0x03CB9B04 MOVZ W9, 0x38
	0x03CB9B08 SMADDL X8, X0, X9, X8
	0x03CB9B0C STR W31, [X8 + 0x54]
	0x03CB9B10 CBZ X23, 0x3CBAA60
	0x03CB9B14 LDR W8, [X23 + 0x18]
	0x03CB9B18 LDR X9, [X31 + 0x38]
	0x03CB9B1C CMP W8, 0x1
	0x03CB9B20 ADD X24, X9, 0x30
	0x03CB9B24 B.LT 0x3CBA794
	0x03CB9B28 MOV W21, W31
	0x03CB9B2C STR W31, [X31 + 0x28]
	0x03CB9B30 STR X24, [X31 + 0x8]
	0x03CB9B34 CMP W21, W8
	0x03CB9B38 B.CS 0x3CBAA58
	0x03CB9B3C ADD X22, X23, W21, 0x4, SXTW
	0x03CB9B40 LDR W9, [X22 + 0x24]!
	0x03CB9B44 CBZ W9, 0x3CBA798
	0x03CB9B48 LDR X9, [X31 + 0x38]
	0x03CB9B4C CBZ X9, 0x3CBAA60
	0x03CB9B50 LDR X9, [X24]
	0x03CB9B54 LDR W20, [X19 + 0xE8]
	0x03CB9B58 CBZ X9, 0x3CB9B68
	0x03CB9B5C LDR W9, [X9 + 0x18]
	0x03CB9B60 CMP W20, W9
	0x03CB9B64 B.LT 0x3CB9BA0
	0x03CB9B68 ADRP X8, 0x4A8000
	0x03CB9B6C LDR X8, [X8 + 0xB68]
	0x03CB9B70 LDR X0, [X8]
	0x03CB9B74 LDR W8, [X0 + 0xE0]
	0x03CB9B78 CBNZ W8, 0x3CB9B80
	0x03CB9B7C BL 0x1C16DFC
	0x03CB9B80 ADRP X8, 0x4A8000
	0x03CB9B84 LDR X8, [X8 + 0xCA8]
	0x03CB9B88 ADD W1, W20, 0x1
	0x03CB9B8C MOVZ W2, 0x1
	0x03CB9B90 MOV X0, X24
	0x03CB9B94 LDR X3, [X8]
	0x03CB9B98 BL 0x229C3DC
	0x03CB9B9C LDR W8, [X23 + 0x18]
	0x03CB9BA0 MOVZ W20, 0x38
	0x03CB9BA4 CMP W21, W8
	0x03CB9BA8 B.CS 0x3CBAA58
	0x03CB9BAC LDR W27, [X22]
	0x03CB9BB0 SXTW X25, W21
	0x03CB9BB4 CMP W27, 0x3C
	0x03CB9BB8 B.NE 0x3CB9D2C
	0x03CB9BBC LDR X8, [X31 + 0x48]
	0x03CB9BC0 LDRB W8, [X8 + 0xB5]
	0x03CB9BC4 CBZ W8, 0x3CB9D2C
	0x03CB9BC8 LDR X4, [X31 + 0x48]
	0x03CB9BCC LDR X5, [X31 + 0x38]
	0x03CB9BD0 LDR W26, [X19 + 0x78]
	0x03CB9BD4 ADD W2, W21, 0x1
	0x03CB9BD8 ADD X3, X31, 0x148
	0x03CB9BDC MOV X0, X19
	0x03CB9BE0 MOV X1, X23
	0x03CB9BE4 BL 0x3CBAFB8
	0x03CB9BE8 TBZ X0, 0x0, 0x3CB9D2C
	0x03CB9BEC LDR W8, [X23 + 0x18]
	0x03CB9BF0 CMP W21, W8
	0x03CB9BF4 B.CS 0x3CBAA58
	0x03CB9BF8 LDR X8, [X31 + 0x30]
	0x03CB9BFC LDR W21, [X31 + 0x148]
	0x03CB9C00 MOVZ W27, 0x188
	0x03CB9C04 LDRB W8, [X8]
	0x03CB9C08 CMP W8, 0x2
	0x03CB9C0C B.NE 0x3CBA780
	0x03CB9C10 LDR X8, [X19 + 0x15B8]
	0x03CB9C14 CBZ X8, 0x3CBAA60
	0x03CB9C18 LDRSW X9, [X19 + 0x78]
	0x03CB9C1C LDR W10, [X8 + 0x18]
	0x03CB9C20 CMP W9, W10
	0x03CB9C24 B.CS 0x3CBAA58
	0x03CB9C28 MADD X8, X9, X20, X8
	0x03CB9C2C LDR W9, [X8 + 0x54]
	0x03CB9C30 ADD X10, X23, X25, 0x4, LSL
	0x03CB9C34 LDR W20, [X10 + 0x28]
	0x03CB9C38 ADD W9, W9, 0x1
	0x03CB9C3C STR W9, [X8 + 0x54]
	0x03CB9C40 LDR X22, [X24]
	0x03CB9C44 CBZ X22, 0x3CBAA60
	0x03CB9C48 LDRSW X24, [X19 + 0xE8]
	0x03CB9C4C LDR W8, [X22 + 0x18]
	0x03CB9C50 CMP W24, W8
	0x03CB9C54 B.CS 0x3CBAA58
	0x03CB9C58 LDRH W8, [X19 + 0x157C]
	0x03CB9C5C NOP
	0x03CB9C60 MADD X9, X24, X27, X22
	0x03CB9C64 SUB W8, W8, 0x2000
	0x03CB9C68 STRH W8, [X9 + 0x20]
	0x03CB9C6C LDR X8, [X19 + 0x68]
	0x03CB9C70 STR X8, [X9 + 0x40]
	0x03CB9C74 LDR W8, [X19 + 0x78]
	0x03CB9C78 STR W8, [X9 + 0x60]
	0x03CB9C7C LDR X0, [X19 + 0xE0]
	0x03CB9C80 CBZ X0, 0x3CBAA60
	0x03CB9C84 MOV X1, X31
	0x03CB9C88 BL 0x3CAB318
	0x03CB9C8C CBZ X0, 0x3CBAA60
	0x03CB9C90 ADRP X8, 0x4A8000
	0x03CB9C94 LDR W1, [X19 + 0x157C]
	0x03CB9C98 LDR X8, [X8 + 0x738]
	0x03CB9C9C LDR X2, [X8]
	0x03CB9CA0 BL 0x301BCCC
	0x03CB9CA4 LDR W8, [X22 + 0x18]
	0x03CB9CA8 CMP W24, W8
	0x03CB9CAC B.CS 0x3CBAA58
	0x03CB9CB0 MADD X8, X24, X27, X22
	0x03CB9CB4 LDR X24, [X31 + 0x8]
	0x03CB9CB8 STR X0, [X8 + 0x30]
	0x03CB9CBC LDR X9, [X24]
	0x03CB9CC0 CBZ X9, 0x3CBAA60
	0x03CB9CC4 LDR W8, [X19 + 0xE8]
	0x03CB9CC8 LDR W10, [X9 + 0x18]
	0x03CB9CCC CMP W8, W10
	0x03CB9CD0 B.CS 0x3CBAA58
	0x03CB9CD4 LDR X13, [X31 + 0x30]
	0x03CB9CD8 SXTW X10, W8
	0x03CB9CDC MADD X12, X10, X27, X9
	0x03CB9CE0 LDRB W11, [X13]
	0x03CB9CE4 STR W20, [X12 + 0x24]
	0x03CB9CE8 STRB W11, [X12 + 0x28]
	0x03CB9CEC LDR W11, [X23 + 0x18]
	0x03CB9CF0 CMP W21, W11
	0x03CB9CF4 B.CS 0x3CBAA58
	0x03CB9CF8 MOV W11, W21
	0x03CB9CFC SXTW X11, W11
	0x03CB9D00 ADD X11, X23, X11, 0x4, LSL
	0x03CB9D04 LDR W11, [X11 + 0x28]
	0x03CB9D08 NOP
	0x03CB9D0C MADD X9, X10, X27, X9
	0x03CB9D10 SUB W10, W11, W20
	0x03CB9D14 ADD W10, W10, 0x1
	0x03CB9D18 STR W10, [X9 + 0x2C]
	0x03CB9D1C MOVZ W9, 0x1
	0x03CB9D20 STRB W9, [X13]
	0x03CB9D24 STR W26, [X19 + 0x78]
	0x03CB9D28 B 0x3CBA45C
	0x03CB9D2C LDR X8, [X31 + 0x30]
	0x03CB9D30 LDP X11, X10, [X19 + 0x68]
	0x03CB9D34 LDR W9, [X19 + 0x78]
	0x03CB9D38 LDRB W8, [X8]
	0x03CB9D3C STP X11, X10, [X31 + 0x18]
	0x03CB9D40 STR W9, [X31 + 0x2C]
	0x03CB9D44 CMP W8, 0x1
	0x03CB9D48 B.NE 0x3CB9DFC
	0x03CB9D4C LDR W8, [X19 + 0x124]
	0x03CB9D50 TBNZ X8, 0x4, 0x3CB9D5C
	0x03CB9D54 TBNZ X8, 0x3, 0x3CB9DAC
	0x03CB9D58 TBZ X8, 0x5, 0x3CB9DFC
	0x03CB9D5C ADRP X8, 0x43C000
	0x03CB9D60 LDR X8, [X8 + 0x170]
	0x03CB9D64 LDR X0, [X8]
	0x03CB9D68 LDR W8, [X0 + 0xE0]
	0x03CB9D6C CBNZ W8, 0x3CB9D74
	0x03CB9D70 BL 0x1C16DFC
	0x03CB9D74 MOV W0, W27
	0x03CB9D78 MOV X1, X31
	0x03CB9D7C BL 0x331AA58
	0x03CB9D80 TBZ X0, 0x0, 0x3CB9DFC
	0x03CB9D84 ADRP X8, 0x43C000
	0x03CB9D88 LDR X8, [X8 + 0x170]
	0x03CB9D8C LDR X0, [X8]
	0x03CB9D90 LDR W8, [X0 + 0xE0]
	0x03CB9D94 CBNZ W8, 0x3CB9D9C
	0x03CB9D98 BL 0x1C16DFC
	0x03CB9D9C MOV W0, W27
	0x03CB9DA0 MOV X1, X31
	0x03CB9DA4 BL 0x331ACB8
	0x03CB9DA8 B 0x3CB9DF8
	0x03CB9DAC ADRP X8, 0x43C000
	0x03CB9DB0 LDR X8, [X8 + 0x170]
	0x03CB9DB4 LDR X0, [X8]
	0x03CB9DB8 LDR W8, [X0 + 0xE0]
	0x03CB9DBC CBNZ W8, 0x3CB9DC4
	0x03CB9DC0 BL 0x1C16DFC
	0x03CB9DC4 MOV W0, W27
	0x03CB9DC8 MOV X1, X31
	0x03CB9DCC BL 0x331A99C
	0x03CB9DD0 TBZ X0, 0x0, 0x3CB9DFC
	0x03CB9DD4 ADRP X8, 0x43C000
	0x03CB9DD8 LDR X8, [X8 + 0x170]
	0x03CB9DDC LDR X0, [X8]
	0x03CB9DE0 LDR W8, [X0 + 0xE0]
	0x03CB9DE4 CBNZ W8, 0x3CB9DEC
	0x03CB9DE8 BL 0x1C16DFC
	0x03CB9DEC MOV W0, W27
	0x03CB9DF0 MOV X1, X31
	0x03CB9DF4 BL 0x331AE30
	0x03CB9DF8 AND W27, W0, 0xFFFF
	0x03CB9DFC LDR X3, [X19 + 0x68]
	0x03CB9E00 LDR W4, [X19 + 0x124]
	0x03CB9E04 LDR W5, [X19 + 0x134]
	0x03CB9E08 LDR X1, [X31 + 0x48]
	0x03CB9E0C ADD X6, X31, 0x14C
	0x03CB9E10 MOV X0, X19
	0x03CB9E14 MOV W2, W27
	0x03CB9E18 BL 0x3CC1E90
	0x03CB9E1C CBZ X0, 0x3CB9E2C
	0x03CB9E20 MOV X26, X0
	0x03CB9E24 MOV W25, W27
	0x03CB9E28 B 0x3CBA0F0
	0x03CB9E2C LDR W8, [X23 + 0x18]
	0x03CB9E30 CMP W21, W8
	0x03CB9E34 B.CS 0x3CBAA58
	0x03CB9E38 ADD X8, X23, X25, 0x4, LSL
	0x03CB9E3C LDR W2, [X8 + 0x28]
	0x03CB9E40 LDR X3, [X19 + 0x68]
	0x03CB9E44 LDR X4, [X31 + 0x38]
	0x03CB9E48 MOV W1, W27
	0x03CB9E4C BL 0x3CC217C
	0x03CB9E50 LDR X9, [X31 + 0x10]
	0x03CB9E54 CBZ X9, 0x3CBAA60
	0x03CB9E58 LDR W8, [X23 + 0x18]
	0x03CB9E5C CMP W21, W8
	0x03CB9E60 B.CS 0x3CBAA58
	0x03CB9E64 LDR W8, [X9 + 0x3C]
	0x03CB9E68 MOVZ W10, 0x25A1
	0x03CB9E6C ADD X5, X31, 0x14C
	0x03CB9E70 MOVZ W2, 0x1
	0x03CB9E74 CMP W8, 0x0
	0x03CB9E78 CSEL W25, W10, W8, EQ
	0x03CB9E7C STR W25, [X22]
	0x03CB9E80 LDR X1, [X19 + 0x68]
	0x03CB9E84 LDR W3, [X19 + 0x124]
	0x03CB9E88 LDR W4, [X19 + 0x134]
	0x03CB9E8C MOV W0, W25
	0x03CB9E90 MOV X6, X31
	0x03CB9E94 MOV X20, X9
	0x03CB9E98 BL 0x3CA7F78
	0x03CB9E9C CBZ X0, 0x3CB9EAC
	0x03CB9EA0 MOV X26, X0
	0x03CB9EA4 MOV X9, X20
	0x03CB9EA8 B 0x3CB9FC0
	0x03CB9EAC LDR X2, [X20 + 0x30]
	0x03CB9EB0 MOV X9, X20
	0x03CB9EB4 CBZ X2, 0x3CB9EEC
	0x03CB9EB8 LDR W8, [X2 + 0x18]
	0x03CB9EBC CMP W8, 0x1
	0x03CB9EC0 B.LT 0x3CB9EEC
	0x03CB9EC4 LDR X1, [X19 + 0x68]
	0x03CB9EC8 LDR W4, [X19 + 0x124]
	0x03CB9ECC LDR W5, [X19 + 0x134]
	0x03CB9ED0 ADD X6, X31, 0x14C
	0x03CB9ED4 MOVZ W3, 0x1
	0x03CB9ED8 MOV W0, W25
	0x03CB9EDC MOV X7, X31
	0x03CB9EE0 BL 0x3CA84C8
	0x03CB9EE4 LDR X9, [X31 + 0x10]
	0x03CB9EE8 CBNZ X0, 0x3CB9FBC
	0x03CB9EEC ADRP X8, 0x43A000
	0x03CB9EF0 LDR X8, [X8 + 0x598]
	0x03CB9EF4 LDR X26, [X9 + 0x20]
	0x03CB9EF8 LDR X0, [X8]
	0x03CB9EFC LDR W8, [X0 + 0xE0]
	0x03CB9F00 CBNZ W8, 0x3CB9F08
	0x03CB9F04 BL 0x1C16DFC
	0x03CB9F08 MOV X0, X26
	0x03CB9F0C MOV X1, X31
	0x03CB9F10 MOV X2, X31
	0x03CB9F14 BL 0x3C354F8
	0x03CB9F18 LDR X8, [X31 + 0x10]
	0x03CB9F1C TBZ X0, 0x0, 0x3CB9F4C
	0x03CB9F20 LDR X1, [X8 + 0x20]
	0x03CB9F24 LDR W3, [X19 + 0x124]
	0x03CB9F28 LDR W4, [X19 + 0x134]
	0x03CB9F2C ADD X5, X31, 0x14C
	0x03CB9F30 MOVZ W2, 0x1
	0x03CB9F34 MOV W0, W25
	0x03CB9F38 MOV X6, X31
	0x03CB9F3C BL 0x3CA7F78
	0x03CB9F40 LDR X9, [X31 + 0x10]
	0x03CB9F44 MOV X26, X0
	0x03CB9F48 CBNZ X0, 0x3CB9FC0
	0x03CB9F4C LDR W8, [X23 + 0x18]
	0x03CB9F50 CMP W21, W8
	0x03CB9F54 B.CS 0x3CBAA58
	0x03CB9F58 MOVZ W25, 0x20
	0x03CB9F5C STR W25, [X22]
	0x03CB9F60 LDR X1, [X19 + 0x68]
	0x03CB9F64 LDR W3, [X19 + 0x124]
	0x03CB9F68 LDR W4, [X19 + 0x134]
	0x03CB9F6C ADD X5, X31, 0x14C
	0x03CB9F70 MOVZ W0, 0x20
	0x03CB9F74 MOVZ W2, 0x1
	0x03CB9F78 MOV X6, X31
	0x03CB9F7C BL 0x3CA7F78
	0x03CB9F80 CBNZ X0, 0x3CB9FB8
	0x03CB9F84 LDR W8, [X23 + 0x18]
	0x03CB9F88 CMP W21, W8
	0x03CB9F8C B.CS 0x3CBAA58
	0x03CB9F90 MOVZ W25, 0x3
	0x03CB9F94 STR W25, [X22]
	0x03CB9F98 LDR X1, [X19 + 0x68]
	0x03CB9F9C LDR W3, [X19 + 0x124]
	0x03CB9FA0 LDR W4, [X19 + 0x134]
	0x03CB9FA4 ADD X5, X31, 0x14C
	0x03CB9FA8 MOVZ W0, 0x3
	0x03CB9FAC MOVZ W2, 0x1
	0x03CB9FB0 MOV X6, X31
	0x03CB9FB4 BL 0x3CA7F78
	0x03CB9FB8 LDR X9, [X31 + 0x10]
	0x03CB9FBC MOV X26, X0
	0x03CB9FC0 LDRB W8, [X9 + 0x89]
	0x03CB9FC4 CBZ W8, 0x3CBA0F0
	0x03CB9FC8 UBFM W8, W27, 0x10, 0x1F
	0x03CB9FCC CBNZ W8, 0x3CBA040
	0x03CB9FD0 ADRP X8, 0x442000
	0x03CB9FD4 LDR X8, [X8 + 0x720]
	0x03CB9FD8 ADD X1, X31, 0xA0
	0x03CB9FDC STR W27, [X31 + 0xA0]
	0x03CB9FE0 LDR X0, [X8]
	0x03CB9FE4 BL 0x1C16E04
	0x03CB9FE8 LDR X8, [X31 + 0x48]
	0x03CB9FEC LDR X8, [X8 + 0x40]
	0x03CB9FF0 CBZ X8, 0x3CBAA60
	0x03CB9FF4 MOV X27, X0
	0x03CB9FF8 MOV X0, X8
	0x03CB9FFC MOV X1, X31
	0x03CBA000 BL 0x3C389D4
	0x03CBA004 CBZ X26, 0x3CBAA60
	0x03CBA008 MOV X28, X0
	0x03CBA00C MOV X0, X26
	0x03CBA010 MOV X1, X31
	0x03CBA014 BL 0x3CA0DC8
	0x03CBA018 ADRP X8, 0x441000
	0x03CBA01C LDR X8, [X8 + 0x720]
	0x03CBA020 STR W0, [X31 + 0xF0]
	0x03CBA024 ADD X1, X31, 0xF0
	0x03CBA028 LDR X8, [X8]
	0x03CBA02C MOV X0, X8
	0x03CBA030 BL 0x1C16E04
	0x03CBA034 ADRP X8, 0x4A7000
	0x03CBA038 LDR X8, [X8 + 0xCB8]
	0x03CBA03C B 0x3CBA0AC
	0x03CBA040 ADRP X8, 0x441000
	0x03CBA044 LDR X8, [X8 + 0x720]
	0x03CBA048 ADD X1, X31, 0xA0
	0x03CBA04C STR W27, [X31 + 0xA0]
	0x03CBA050 LDR X0, [X8]
	0x03CBA054 BL 0x1C16E04
	0x03CBA058 LDR X8, [X31 + 0x48]
	0x03CBA05C LDR X8, [X8 + 0x40]
	0x03CBA060 CBZ X8, 0x3CBAA60
	0x03CBA064 MOV X27, X0
	0x03CBA068 MOV X0, X8
	0x03CBA06C MOV X1, X31
	0x03CBA070 BL 0x3C389D4
	0x03CBA074 CBZ X26, 0x3CBAA60
	0x03CBA078 MOV X28, X0
	0x03CBA07C MOV X0, X26
	0x03CBA080 MOV X1, X31
	0x03CBA084 BL 0x3CA0DC8
	0x03CBA088 ADRP X8, 0x441000
	0x03CBA08C LDR X8, [X8 + 0x720]
	0x03CBA090 STR W0, [X31 + 0xF0]
	0x03CBA094 ADD X1, X31, 0xF0
	0x03CBA098 LDR X8, [X8]
	0x03CBA09C MOV X0, X8
	0x03CBA0A0 BL 0x1C16E04
	0x03CBA0A4 ADRP X8, 0x4A7000
	0x03CBA0A8 LDR X8, [X8 + 0xCB0]
	0x03CBA0AC LDR X8, [X8]
	0x03CBA0B0 MOV X3, X0
	0x03CBA0B4 MOV X1, X27
	0x03CBA0B8 MOV X2, X28
	0x03CBA0BC MOV X0, X8
	0x03CBA0C0 MOV X4, X31
	0x03CBA0C4 BL 0x3227C18
	0x03CBA0C8 ADRP X8, 0x439000
	0x03CBA0CC LDR X8, [X8 + 0xA28]
	0x03CBA0D0 MOV X27, X0
	0x03CBA0D4 LDR X0, [X8]
	0x03CBA0D8 LDR W8, [X0 + 0xE0]
	0x03CBA0DC CBNZ W8, 0x3CBA0E4
	0x03CBA0E0 BL 0x1C16DFC
	0x03CBA0E4 MOV X0, X27
	0x03CBA0E8 MOV X1, X31
	0x03CBA0EC BL 0x3C06A04
	0x03CBA0F0 LDR X8, [X24]
	0x03CBA0F4 MOVZ W27, 0x188
	0x03CBA0F8 CBZ X8, 0x3CBAA60
	0x03CBA0FC LDRSW X9, [X19 + 0xE8]
	0x03CBA100 LDR W10, [X8 + 0x18]
	0x03CBA104 CMP W9, W10
	0x03CBA108 B.CS 0x3CBAA58
	0x03CBA10C MADD X8, X9, X27, X8
	0x03CBA110 STR X31, [X8 + 0x38]
	0x03CBA114 CBZ X26, 0x3CBAA60
	0x03CBA118 MOV X0, X26
	0x03CBA11C MOV X1, X31
	0x03CBA120 BL 0x3CAC944
	0x03CBA124 AND W8, W0, 0xFF
	0x03CBA128 CMP W8, 0x1
	0x03CBA12C B.NE 0x3CBA174
	0x03CBA130 MOV X0, X26
	0x03CBA134 MOV X1, X31
	0x03CBA138 BL 0x3CA84C0
	0x03CBA13C CBZ X0, 0x3CBAA60
	0x03CBA140 MOV X1, X31
	0x03CBA144 BL 0x3CA3338
	0x03CBA148 LDR X8, [X19 + 0x68]
	0x03CBA14C CBZ X8, 0x3CBAA60
	0x03CBA150 MOV W27, W0
	0x03CBA154 MOV X0, X8
	0x03CBA158 MOV X1, X31
	0x03CBA15C BL 0x3CA3338
	0x03CBA160 MOV W28, W0
	0x03CBA164 CMP W27, W0
	0x03CBA168 B.NE 0x3CBA17C
	0x03CBA16C LDR X0, [X19 + 0x68]
	0x03CBA170 B 0x3CBA1CC
	0x03CBA174 MOV W22, W31
	0x03CBA178 B 0x3CBA314
	0x03CBA17C MOV X0, X26
	0x03CBA180 MOV X1, X31
	0x03CBA184 BL 0x3CA84C0
	0x03CBA188 CBZ X0, 0x3CBAA5C
	0x03CBA18C ADRP X8, 0x4A7000
	0x03CBA190 LDR X9, [X0]
	0x03CBA194 LDR X8, [X8 + 0x258]
	0x03CBA198 LDRB W11, [X9 + 0x130]
	0x03CBA19C LDR X8, [X8]
	0x03CBA1A0 LDRB W10, [X8 + 0x130]
	0x03CBA1A4 CMP W11, W10
	0x03CBA1A8 B.CS 0x3CBA1B4
	0x03CBA1AC MOV X0, X31
	0x03CBA1B0 B 0x3CBA1C8
	0x03CBA1B4 LDR X9, [X9 + 0xC8]
	0x03CBA1B8 ADD X9, X9, X10, 0x3, LSL
	0x03CBA1BC LDUR X9, [X9 - 0x8]
	0x03CBA1C0 CMP X9, X8
	0x03CBA1C4 CSEL X0, X0, X31, EQ
	0x03CBA1C8 STR X0, [X19 + 0x68]
	0x03CBA1CC CMP W27, W28
	0x03CBA1D0 CSET W22, NE
	0x03CBA1D4 CBZ X0, 0x3CBAA60
	0x03CBA1D8 MOV X1, X31
	0x03CBA1DC BL 0x3C9F0F4
	0x03CBA1E0 CBZ X0, 0x3CBAA60
	0x03CBA1E4 LDR X27, [X0 + 0x38]
	0x03CBA1E8 MOV X0, X26
	0x03CBA1EC MOV X1, X31
	0x03CBA1F0 BL 0x3CA0098
	0x03CBA1F4 CBZ X27, 0x3CBAA60
	0x03CBA1F8 ADRP X8, 0x4A7000
	0x03CBA1FC LDR X8, [X8 + 0xC98]
	0x03CBA200 MOV W1, W0
	0x03CBA204 ADD X2, X31, 0x140
	0x03CBA208 MOV X0, X27
	0x03CBA20C LDR X3, [X8]
	0x03CBA210 BL 0x2B10A7C
	0x03CBA214 TBZ X0, 0x0, 0x3CBA310
	0x03CBA218 LDR X0, [X31 + 0x140]
	0x03CBA21C CBZ X0, 0x3CBAA48
	0x03CBA220 MOV W27, W31
	0x03CBA224 LDR W8, [X0 + 0x18]
	0x03CBA228 CMP W27, W8
	0x03CBA22C B.GE 0x3CBA30C
	0x03CBA230 ADRP X8, 0x4A7000
	0x03CBA234 LDR X8, [X8 + 0x328]
	0x03CBA238 MOV W1, W27
	0x03CBA23C LDR X2, [X8]
	0x03CBA240 BL 0x2FF2904
	0x03CBA244 STP X0, X1, [X31 + 0x130]
	0x03CBA248 ADD X0, X31, 0x130
	0x03CBA24C MOV X1, X31
	0x03CBA250 BL 0x3C9E8F0
	0x03CBA254 CBZ X0, 0x3CBAA60
	0x03CBA258 LDR X20, [X0 + 0x18]
	0x03CBA25C ADD X0, X31, 0x130
	0x03CBA260 MOV X1, X31
	0x03CBA264 BL 0x3C9E8F8
	0x03CBA268 CMP W20, 0x2
	0x03CBA26C MOV W28, W0
	0x03CBA270 B.LT 0x3CBA2DC
	0x03CBA274 MOVZ W24, 0x1
	0x03CBA278 LDR W9, [X23 + 0x18]
	0x03CBA27C ADD W8, W21, W24
	0x03CBA280 CMP W8, W9
	0x03CBA284 B.CS 0x3CBAA58
	0x03CBA288 LDR X0, [X19 + 0x68]
	0x03CBA28C CBZ X0, 0x3CBAA60
	0x03CBA290 ADD X8, X23, W8, 0x4, SXTW
	0x03CBA294 LDR W1, [X8 + 0x24]
	0x03CBA298 MOV X2, X31
	0x03CBA29C BL 0x3CA312C
	0x03CBA2A0 MOV W29, W0
	0x03CBA2A4 ADD X0, X31, 0x130
	0x03CBA2A8 MOV X1, X31
	0x03CBA2AC BL 0x3C9E8F0
	0x03CBA2B0 CBZ X0, 0x3CBAA60
	0x03CBA2B4 LDR W8, [X0 + 0x18]
	0x03CBA2B8 CMP W24, W8
	0x03CBA2BC B.CS 0x3CBAA58
	0x03CBA2C0 ADD X8, X0, W24, 0x2, SXTW
	0x03CBA2C4 LDR W8, [X8 + 0x20]
	0x03CBA2C8 CMP W29, W8
	0x03CBA2CC B.NE 0x3CBA2FC
	0x03CBA2D0 ADD W24, W24, 0x1
	0x03CBA2D4 CMP W20, W24
	0x03CBA2D8 B.NE 0x3CBA278
	0x03CBA2DC CBZ W28, 0x3CBA2FC
	0x03CBA2E0 LDR X0, [X19 + 0x68]
	0x03CBA2E4 CBZ X0, 0x3CBAA60
	0x03CBA2E8 ADD X2, X31, 0x128
	0x03CBA2EC MOV W1, W28
	0x03CBA2F0 MOV X3, X31
	0x03CBA2F4 BL 0x3CA547C
	0x03CBA2F8 TBNZ X0, 0x0, 0x3CBA4FC
	0x03CBA2FC LDR X0, [X31 + 0x140]
	0x03CBA300 ADD W27, W27, 0x1
	0x03CBA304 CBNZ X0, 0x3CBA224
	0x03CBA308 B 0x3CBAA60
	0x03CBA30C LDR X24, [X31 + 0x8]
	0x03CBA310 MOVZ W27, 0x188
	0x03CBA314 LDR X8, [X24]
	0x03CBA318 CBZ X8, 0x3CBAA60
	0x03CBA31C LDRSW X9, [X19 + 0xE8]
	0x03CBA320 LDR W10, [X8 + 0x18]
	0x03CBA324 CMP W9, W10
	0x03CBA328 B.CS 0x3CBAA58
	0x03CBA32C MADD X10, X9, X27, X8
	0x03CBA330 MOVZ W11, 0x1
	0x03CBA334 STRB W11, [X10 + 0x28]
	0x03CBA338 STR X26, [X10 + 0x30]
	0x03CBA33C LDRB W11, [X31 + 0x14C]
	0x03CBA340 STRH W25, [X10 + 0x20]
	0x03CBA344 STRB W11, [X10 + 0x64]
	0x03CBA348 LDR W10, [X23 + 0x18]
	0x03CBA34C CMP W21, W10
	0x03CBA350 B.CS 0x3CBAA58
	0x03CBA354 ADD X10, X23, W21, 0x4, SXTW
	0x03CBA358 LDR W11, [X10 + 0x28]
	0x03CBA35C NOP
	0x03CBA360 MADD X8, X9, X27, X8
	0x03CBA364 MOV X0, X26
	0x03CBA368 MOV X1, X31
	0x03CBA36C STR W11, [X8 + 0x24]
	0x03CBA370 LDR W9, [X10 + 0x2C]
	0x03CBA374 STR W9, [X8 + 0x2C]
	0x03CBA378 LDR X9, [X19 + 0x68]
	0x03CBA37C STR X9, [X8 + 0x40]
	0x03CBA380 BL 0x3CAC944
	0x03CBA384 AND W8, W0, 0xFF
	0x03CBA388 CMP W8, 0x2
	0x03CBA38C B.NE 0x3CBA46C
	0x03CBA390 MOV X0, X26
	0x03CBA394 MOV X1, X31
	0x03CBA398 BL 0x3CA84C0
	0x03CBA39C CBZ X0, 0x3CBAA60
	0x03CBA3A0 ADRP X8, 0x4A7000
	0x03CBA3A4 LDR X9, [X0]
	0x03CBA3A8 LDR X8, [X8 + 0x748]
	0x03CBA3AC MOV X1, X0
	0x03CBA3B0 LDRB W11, [X9 + 0x130]
	0x03CBA3B4 LDR X8, [X8]
	0x03CBA3B8 LDRB W10, [X8 + 0x130]
	0x03CBA3BC CMP W11, W10
	0x03CBA3C0 B.CC 0x3CBAA60
	0x03CBA3C4 LDR X9, [X9 + 0xC8]
	0x03CBA3C8 ADD X9, X9, X10, 0x3, LSL
	0x03CBA3CC LDUR X9, [X9 - 0x8]
	0x03CBA3D0 CMP X9, X8
	0x03CBA3D4 B.NE 0x3CBAA60
	0x03CBA3D8 LDR X0, [X1 + 0x28]
	0x03CBA3DC LDR X3, [X19 + 0x19E0]
	0x03CBA3E0 LDR X2, [X31 + 0x40]
	0x03CBA3E4 MOV X4, X31
	0x03CBA3E8 BL 0x3CA9B58
	0x03CBA3EC LDR X8, [X19 + 0x15B8]
	0x03CBA3F0 MOVZ W10, 0x38
	0x03CBA3F4 STR W0, [X19 + 0x78]
	0x03CBA3F8 CBZ X8, 0x3CBAA60
	0x03CBA3FC LDR W9, [X8 + 0x18]
	0x03CBA400 CMP W0, W9
	0x03CBA404 B.CS 0x3CBAA58
	0x03CBA408 SMADDL X8, X0, X10, X8
	0x03CBA40C LDR W9, [X8 + 0x54]
	0x03CBA410 ADD W9, W9, 0x1
	0x03CBA414 STR W9, [X8 + 0x54]
	0x03CBA418 LDR X9, [X24]
	0x03CBA41C CBZ X9, 0x3CBAA60
	0x03CBA420 LDR W8, [X19 + 0xE8]
	0x03CBA424 LDR W10, [X9 + 0x18]
	0x03CBA428 CMP W8, W10
	0x03CBA42C B.CS 0x3CBAA58
	0x03CBA430 SXTW X10, W8
	0x03CBA434 MADD X9, X10, X27, X9
	0x03CBA438 MOVZ W10, 0x2
	0x03CBA43C STRB W10, [X9 + 0x28]
	0x03CBA440 LDR W10, [X19 + 0x78]
	0x03CBA444 STR W10, [X9 + 0x60]
	0x03CBA448 LDR X9, [X31 + 0x30]
	0x03CBA44C MOVZ W10, 0x1
	0x03CBA450 STRB W10, [X9]
	0x03CBA454 LDR W9, [X31 + 0x2C]
	0x03CBA458 STR W9, [X19 + 0x78]
	0x03CBA45C LDR W9, [X31 + 0x28]
	0x03CBA460 ADD W9, W9, 0x1
	0x03CBA464 STR W9, [X31 + 0x28]
	0x03CBA468 B 0x3CBA778
	0x03CBA46C CBZ W22, 0x3CBA5AC
	0x03CBA470 LDR X0, [X19 + 0x68]
	0x03CBA474 CBZ X0, 0x3CBAA60
	0x03CBA478 MOV X1, X31
	0x03CBA47C BL 0x3CA3338
	0x03CBA480 LDR X8, [X31 + 0x48]
	0x03CBA484 LDR X8, [X8 + 0x40]
	0x03CBA488 CBZ X8, 0x3CBAA60
	0x03CBA48C MOV W27, W0
	0x03CBA490 MOV X0, X8
	0x03CBA494 MOV X1, X31
	0x03CBA498 BL 0x3CA3338
	0x03CBA49C CMP W27, W0
	0x03CBA4A0 MOVZ W27, 0x188
	0x03CBA4A4 B.EQ 0x3CBA5AC
	0x03CBA4A8 LDR X8, [X31 + 0x10]
	0x03CBA4AC CBZ X8, 0x3CBAA60
	0x03CBA4B0 LDRB W8, [X8 + 0x38]
	0x03CBA4B4 CBZ W8, 0x3CBA588
	0x03CBA4B8 LDR X8, [X19 + 0x68]
	0x03CBA4BC CBZ X8, 0x3CBAA60
	0x03CBA4C0 ADRP X9, 0x4A7000
	0x03CBA4C4 LDR X9, [X9 + 0x628]
	0x03CBA4C8 LDR X27, [X19 + 0x70]
	0x03CBA4CC LDR X28, [X8 + 0x28]
	0x03CBA4D0 LDR X0, [X9]
	0x03CBA4D4 LDR W9, [X0 + 0xE0]
	0x03CBA4D8 CBNZ W9, 0x3CBA4E0
	0x03CBA4DC BL 0x1C16DFC
	0x03CBA4E0 MOV X0, X27
	0x03CBA4E4 MOV X1, X28
	0x03CBA4E8 MOV X2, X31
	0x03CBA4EC BL 0x3CA8FD4
	0x03CBA4F0 LDR X1, [X19 + 0x68]
	0x03CBA4F4 MOVZ W27, 0x188
	0x03CBA4F8 B 0x3CBA594
	0x03CBA4FC LDR X24, [X31 + 0x8]
	0x03CBA500 LDR X9, [X24]
	0x03CBA504 CBZ X9, 0x3CBAA60
	0x03CBA508 LDRSW X10, [X19 + 0xE8]
	0x03CBA50C LDR W8, [X9 + 0x18]
	0x03CBA510 MOVZ W27, 0x188
	0x03CBA514 CMP W10, W8
	0x03CBA518 B.CS 0x3CBAA58
	0x03CBA51C LDR X11, [X31 + 0x128]
	0x03CBA520 AND X8, X20, 0x0
	0x03CBA524 MADD X9, X10, X27, X9
	0x03CBA528 CMP W8, 0x1
	0x03CBA52C STR X11, [X9 + 0x38]
	0x03CBA530 B.LT 0x3CBA57C
	0x03CBA534 LDR W10, [X23 + 0x18]
	0x03CBA538 MOV X9, X31
	0x03CBA53C MOV W11, W21
	0x03CBA540 SUBS W10, W10, W21
	0x03CBA544 CSEL W10, W31, W10, CC
	0x03CBA548 CMP X10, X9
	0x03CBA54C B.EQ 0x3CBAA58
	0x03CBA550 ADD W12, W11, W9
	0x03CBA554 SXTW X12, W12
	0x03CBA558 ADD X12, X23, X12, 0x4, LSL
	0x03CBA55C CBZ X9, 0x3CBA56C
	0x03CBA560 MOVZ W13, 0x1A
	0x03CBA564 STR W13, [X12 + 0x24]
	0x03CBA568 B 0x3CBA570
	0x03CBA56C STR W8, [X12 + 0x2C]
	0x03CBA570 ADD X9, X9, 0x1
	0x03CBA574 CMP X8, X9
	0x03CBA578 B.NE 0x3CBA548
	0x03CBA57C ADD W8, W21, W8
	0x03CBA580 SUB W21, W8, 0x1
	0x03CBA584 B 0x3CBA314
	0x03CBA588 LDR X1, [X19 + 0x68]
	0x03CBA58C CBZ X1, 0x3CBAA60
	0x03CBA590 LDR X0, [X1 + 0x28]
	0x03CBA594 LDR X3, [X19 + 0x19E0]
	0x03CBA598 LDR X2, [X31 + 0x40]
	0x03CBA59C MOV X4, X31
	0x03CBA5A0 STR X0, [X19 + 0x70]
	0x03CBA5A4 BL 0x3CA994C
	0x03CBA5A8 STR W0, [X19 + 0x78]
	0x03CBA5AC MOV X0, X26
	0x03CBA5B0 MOV X1, X31
	0x03CBA5B4 BL 0x3CAC94C
	0x03CBA5B8 CBZ X0, 0x3CBAA60
	0x03CBA5BC MOV X1, X31
	0x03CBA5C0 BL 0x3C9C4F0
	0x03CBA5C4 CMP W0, 0x1
	0x03CBA5C8 B.LT 0x3CBA640
	0x03CBA5CC LDP X27, X28, [X19 + 0x68]
	0x03CBA5D0 MOV X0, X26
	0x03CBA5D4 MOV X1, X31
	0x03CBA5D8 BL 0x3CAC94C
	0x03CBA5DC CBZ X0, 0x3CBAA60
	0x03CBA5E0 MOV X1, X31
	0x03CBA5E4 BL 0x3C9C4F0
	0x03CBA5E8 ADRP X8, 0x4A7000
	0x03CBA5EC LDR X8, [X8 + 0x628]
	0x03CBA5F0 MOV W26, W0
	0x03CBA5F4 LDR X8, [X8]
	0x03CBA5F8 LDR W9, [X8 + 0xE0]
	0x03CBA5FC CBNZ W9, 0x3CBA608
	0x03CBA600 MOV X0, X8
	0x03CBA604 BL 0x1C16DFC
	0x03CBA608 MOV X0, X27
	0x03CBA60C MOV X1, X28
	0x03CBA610 MOV W2, W26
	0x03CBA614 MOV X3, X31
	0x03CBA618 BL 0x3CA9624
	0x03CBA61C LDR X1, [X19 + 0x68]
	0x03CBA620 LDR X3, [X19 + 0x19E0]
	0x03CBA624 LDR X2, [X31 + 0x40]
	0x03CBA628 MOV X4, X31
	0x03CBA62C STR X0, [X19 + 0x70]
	0x03CBA630 BL 0x3CA994C
	0x03CBA634 MOVZ W22, 0x1
	0x03CBA638 MOVZ W27, 0x188
	0x03CBA63C STR W0, [X19 + 0x78]
	0x03CBA640 ADRP X8, 0x43B000
	0x03CBA644 LDR X8, [X8 + 0x170]
	0x03CBA648 LDR X0, [X8]
	0x03CBA64C LDR W8, [X0 + 0xE0]
	0x03CBA650 CBNZ W8, 0x3CBA658
	0x03CBA654 BL 0x1C16DFC
	0x03CBA658 MOV W0, W25
	0x03CBA65C MOV X1, X31
	0x03CBA660 BL 0x3317FCC
	0x03CBA664 MOVZ W8, 0x200B
	0x03CBA668 CMP W25, W8

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0x72F000
	015 Move W8, [X20+839]
	016 Move X27, X1
	017 Move X19, X0
	018 Move [X31+72], X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0x4A9000
	024 Move X0, [X0+3192]
	025 Call 0x1C17CF4
	026 Move X0, 0x4A9000
	027 Move X0, [X0+3200]
	028 Call 0x1C17CF4
	029 Move X0, 0x4A9000
	030 Move X0, [X0+2888]
	031 Call 0x1C17CF4
	032 Move X0, 0x4A9000
	033 Move X0, [X0+3208]
	034 Call 0x1C17CF4
	035 Move X0, 0x4A9000
	036 Move X0, [X0+3216]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+839], W8
	040 Add X21, X19, 16
	041 Move X0, X21
	042 Move X1, X31
	043 Move [X31+64], W31
	044 Call TextBackingContainer.get_Count, X0
	045 Move X20, X19
	046 Add X20, X20, 32
	047 Move X8, [X20]
	048 Compare X8, 0
	049 JumpIfEqual {903}
	050 Move W8, [X8+24]
	051 Move X23, 0x4A9000
	052 Move X29, 0x4A9000
	053 Move X23, [X23+3216]
	054 Move X29, [X29+2888]
	055 Move W22, W0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X29]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X8, 0x4A9000
	063 Move X8, [X8+3200]
	064 Move X0, X20
	065 Move W1, W22
	066 Move X2, [X8]
	067 Call 0x229D0E8, X0, X1
	068 Move X0, [X19+280]
	069 Move X2, [X23]
	070 Move W1, W31
	071 Call TextProcessingStack`1<Int32>.SetDefault, X0, X1
	072 Move [X19+288], W31
	073 Move [X31+68], W31
	074 Move X8, [X19+280]
	075 Compare X8, 0
	076 JumpIfEqual {903}
	077 Move W9, [X8+24]
	078 Compare W9, 0
	079 JumpIfEqual {904}
	080 Move X9, 0x4A9000
	081 Move X9, [X9+3208]
	082 Add X0, X8, 32
	083 Add X24, X19, 280
	084 Move X1, [X9]
	085 Call TextProcessingStack`1<Int32>.Pop, X0
	086 Move X8, [X29]
	087 Move W23, W0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move W26, 0x50F3
	094 Move X0, X27
	095 Move W1, W23
	096 Move X2, X31
	097 Add X25, X19, 288
	098 NotImplemented "Instruction MOVK not yet implemented."
	099 Call TextGeneratorUtilities.GetStyle, X0, X1
	100 Move [X31+48], X0
	101 Compare X0, 0
	102 JumpIfEqual {120}
	103 Move X1, X31
	104 Call TextStyle.get_hashCode, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, [X29]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, [X31+48]
	112 Add X2, X31, 68
	113 Add X5, X31, 72
	114 Move X1, X20
	115 Move X3, X25
	116 Move X4, X24
	117 Move X6, X31
	118 Call TextGeneratorUtilities.InsertOpeningStyleTag, X0, X1, X2, X3, X4, X5
	119 Move X27, [X31+72]
	120 Move [X31+32], X24
	121 Compare X27, 0
	122 JumpIfEqual {903}
	123 Move X24, 0x4A9000
	124 Move X24, [X24+3192]
	125 Subtract W23, W22, 1
	126 Move W8, [X27+190]
	127 Move W26, W31
	128 Move [X31+60], W23
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSET not yet implemented."
	131 Move [X31+44], W8
	132 Move X0, X21
	133 Move W1, W26
	134 Move X2, X31
	135 Call TextBackingContainer.get_Item, X0, X1
	136 Move W27, W0
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Compare W27, 0
	139 JumpIfEqual {844}
	140 Move W8, W27
	141 ShiftRight W8, 10
	142 And W8, W8, 0x7FFFFFFF
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add W28, W26, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, X21
	147 Move W1, W28
	148 Move X2, X31
	149 Call TextBackingContainer.get_Item, X0, X1
	150 Move W8, W0
	151 ShiftRight W8, 10
	152 And W8, W8, 0x7FFFFFFF
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, X21
	155 Move W1, W28
	156 Move X2, X31
	157 Call TextBackingContainer.get_Item, X0, X1
	158 Move W8, W0
	159 ShiftRight W8, 13
	160 And W8, W8, 0x7FFFFFFF
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X24, [X20]
	163 Move X23, X29
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Move X0, X21
	166 Move W1, W28
	167 Move X2, X31
	168 Move [X31+24], X19
	169 Move X19, X25
	170 Call TextBackingContainer.get_Item, X0, X1
	171 Move X8, [X23]
	172 Move X25, X23
	173 Move W23, W0
	174 Move W9, [X8+224]
	175 Compare W9, 0
	176 JumpIfNotEqual {179}
	177 Move X0, X8
	178 Call 0x1C17DFC
	179 Move W0, W27
	180 Move W1, W23
	181 Move X2, X31
	182 Call TextGeneratorUtilities.ConvertToUTF32, X0, X1
	183 Compare X24, 0
	184 JumpIfEqual {903}
	185 Move W8, [X24+24]
	186 Move W23, [X31+60]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move W8, W26
	189 Move W9, 1
	190 Add X10, X24, X29
	191 Or X8, X8, 0x3FFFFFFFF
	192 NotImplemented "Instruction BFM not yet implemented."
	193 Move [X10+32], X9
	194 Move [X10+40], X8
	195 Move W8, [X31+68]
	196 Move X24, 0x4A9000
	197 Move X29, X25
	198 Move X25, X19
	199 Add W8, W8, 1
	200 Move [X31+68], W8
	201 Move X19, [X31+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add W28, W26, 1
	204 Move X0, X21
	205 Move W1, W28
	206 Move X2, X31
	207 Call TextBackingContainer.get_Item, X0, X1
	208 Subtract W8, W0, 110
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X11, -51515392
	211 Add X11, X11, 3830
	212 NotImplemented "Instruction ADR not yet implemented."
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Add X9, X9, X10
	215 CallNoReturn X9
	216 Move X8, [X31+72]
	217 Compare X8, 0
	218 JumpIfEqual {903}
	219 Move W8, [X8+188]
	220 Compare W8, 0
	221 JumpIfEqual {776}
	222 Move X8, [X20]
	223 Compare X8, 0
	224 JumpIfEqual {903}
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Move W10, [X8+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W10, W26
	229 Move X11, 1
	230 Add X8, X8, X9
	231 Add W9, W9, 1
	232 Or X10, X10, 0x1FFFFFFFF
	233 NotImplemented "Instruction MOVK not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X8, [X31+72]
	236 Compare X8, 0
	237 JumpIfEqual {903}
	238 Move W8, [X8+181]
	239 Compare W8, 0
	240 JumpIfEqual {776}
	241 Move X0, [X29]
	242 Move X24, [X19+16]
	243 Move X23, [X19+24]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Add W2, W26, 1
	249 Move X0, X24
	250 Move X1, X23
	251 Move X3, X31
	252 Call TextGeneratorUtilities.GetMarkupTagHashCode, X0, X1
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X24, 0x4A9000
	255 Move X24, [X24+3192]
	256 Move W23, [X31+60]
	257 Move W8, 0xC72F
	258 NotImplemented "Instruction MOVK not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move W8, 0x2CAE
	261 NotImplemented "Instruction MOVK not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move W8, 0xBD17
	264 NotImplemented "Instruction MOVK not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move W8, 0xF418
	267 NotImplemented "Instruction MOVK not yet implemented."
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move W8, [X31+44]
	270 Move TEMP, X8
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {774}
	274 Move X0, [X29]
	275 NotImplemented "Instruction LDRSW not yet implemented."
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Move X3, [X31+32]
	281 Add X1, X31, 68
	282 Add X4, X31, 72
	283 Move X0, X20
	284 Move X2, X25
	285 Move X5, X31
	286 Call TextGeneratorUtilities.ReplaceClosingStyleTag, X0, X1, X2, X3, X4
	287 Move W8, [X31+68]
	288 Move W11, 8
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X9, [X20]
	291 Compare X9, 0
	292 JumpIfEqual {903}
	293 Move W8, [X9+24]
	294 Add X9, X9, X23
	295 Add X9, X9, 44
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move [X9-4], W26
	298 Move [X9], W11
	299 NotImplemented "Instruction LDRSW not yet implemented."
	300 Add X23, X23, 1
	301 Add X9, X9, 16
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move W23, [X31+60]
	304 Move [X31+44], W31
	305 Add W28, W26, 7
	306 NotImplemented "Instruction CMP not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X8, [X31+72]
	309 Compare X8, 0
	310 JumpIfEqual {903}
	311 Move W8, [X8+188]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 NotImplemented "Instruction CSEL not yet implemented."
	314 Move X24, 0x4A9000
	315 Move X24, [X24+3192]
	316 Move W23, [X31+60]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 NotImplemented "Instruction CMP not yet implemented."
	319 NotImplemented "Instruction CMP not yet implemented."
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move W8, [X31+44]
	322 Move TEMP, X8
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfEqual {774}
	326 Move X8, [X20]
	327 Compare X8, 0
	328 JumpIfEqual {903}
	329 Move W9, [X31+68]
	330 Move W10, [X8+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, [X29]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X1, [X24]
	338 Move X0, X20
	339 Call 0x229D034, X0
	340 Move X8, [X20]
	341 Compare X8, 0
	342 JumpIfEqual {903}
	343 Move W9, [X31+68]
	344 Move W10, [X8+24]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X9, W9
	347 Move W10, W26
	348 Move X11, 1
	349 Move [X31+44], W31
	350 Or X10, X10, 0x7FFFFFFFF
	351 Add X8, X8, X9
	352 Add W9, W9, 1
	353 NotImplemented "Instruction MOVK not yet implemented."
	354 Move X8, [X31+72]
	355 Compare X8, 0
	356 JumpIfEqual {903}
	357 Move W8, [X8+188]
	358 Compare W8, 0
	359 JumpIfEqual {776}
	360 Move X8, [X20]
	361 Compare X8, 0
	362 JumpIfEqual {903}
	363 NotImplemented "Instruction LDRSW not yet implemented."
	364 Move W10, [X8+24]
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move W10, W26
	367 Move X11, 1
	368 Add X8, X8, X9
	369 Add W9, W9, 1
	370 Or X10, X10, 0x1FFFFFFFF
	371 NotImplemented "Instruction MOVK not yet implemented."
	372 Move X8, [X31+72]
	373 Compare X8, 0
	374 JumpIfEqual {903}
	375 Move W8, [X8+188]
	376 Compare W8, 0
	377 JumpIfEqual {776}
	378 Move X8, [X20]
	379 Compare X8, 0
	380 JumpIfEqual {903}
	381 NotImplemented "Instruction LDRSW not yet implemented."
	382 Move W10, [X8+24]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move W10, W26
	385 Move X11, 1
	386 Add X8, X8, X9
	387 Add W9, W9, 1
	388 Or X10, X10, 0x1FFFFFFFF
	389 NotImplemented "Instruction MOVK not yet implemented."
	390 Add W28, W26, 5
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X0, [X29]
	393 Move X24, [X19+16]
	394 Move X23, [X19+24]
	395 Move [X31+24], X25
	396 Move X25, X29
	397 Move W8, [X0+224]
	398 Compare W8, 0
	399 JumpIfNotEqual {401}
	400 Call 0x1C17DFC
	401 Add W29, W26, 2
	402 Move X0, X24
	403 Move X1, X23
	404 Move W2, W29
	405 Move X3, X31
	406 Call TextGeneratorUtilities.IsValidUTF16, X0, X1
	407 Move TEMP, X0
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfNotEqual {593}
	411 Move X0, [X25]
	412 NotImplemented "Instruction LDRSW not yet implemented."
	413 Move X27, [X19+24]
	414 Move X24, [X19+32]
	415 Move X23, [X19+16]
	416 Move [X31+16], X8
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Move X0, X23
	422 Move X1, X27
	423 Move W2, W29
	424 Move X3, X31
	425 Call TextGeneratorUtilities.GetUTF16, X0, X1
	426 Compare X24, 0
	427 JumpIfEqual {903}
	428 Move W8, [X24+24]
	429 Move X10, [X31+16]
	430 Move W23, [X31+60]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move W8, W26
	433 Move X29, X25
	434 Move W9, 1
	435 Add X10, X24, X10
	436 Or X8, X8, 0x7FFFFFFFF
	437 Move X8, [X31+72]
	438 Compare X8, 0
	439 JumpIfEqual {903}
	440 Move W8, [X8+188]
	441 Compare W8, 0
	442 JumpIfEqual {776}
	443 Move X8, [X20]
	444 Compare X8, 0
	445 JumpIfEqual {903}
	446 NotImplemented "Instruction LDRSW not yet implemented."
	447 Move W10, [X8+24]
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move W10, W26
	450 Move X11, 1
	451 Add X8, X8, X9
	452 Add W9, W9, 1
	453 Or X10, X10, 0x1FFFFFFFF
	454 NotImplemented "Instruction MOVK not yet implemented."
	455 Add W28, W26, 9
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Move X0, [X29]
	458 Move X24, [X19+16]
	459 Move X23, [X19+24]
	460 Move [X31+24], X25
	461 Move X25, X29
	462 Move W8, [X0+224]
	463 Compare W8, 0
	464 JumpIfNotEqual {466}
	465 Call 0x1C17DFC
	466 Add W29, W26, 2
	467 Move X0, X24
	468 Move X1, X23
	469 Move W2, W29
	470 Move X3, X31
	471 Call TextGeneratorUtilities.IsValidUTF32, X0, X1
	472 Move TEMP, X0
	473 And TEMP, TEMP, 1
	474 Compare TEMP, 1
	475 JumpIfNotEqual {593}
	476 Move X0, [X25]
	477 NotImplemented "Instruction LDRSW not yet implemented."
	478 Move X27, [X19+24]
	479 Move X24, [X19+32]
	480 Move X23, [X19+16]
	481 Move [X31+16], X8
	482 Move W8, [X0+224]
	483 Compare W8, 0
	484 JumpIfNotEqual {486}
	485 Call 0x1C17DFC
	486 Move X0, X23
	487 Move X1, X27
	488 Move W2, W29
	489 Move X3, X31
	490 Call TextGeneratorUtilities.GetUTF32, X0, X1
	491 Compare X24, 0
	492 JumpIfEqual {903}
	493 Move W8, [X24+24]
	494 Move X10, [X31+16]
	495 Move W23, [X31+60]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Move W8, W26
	498 Move X11, 10
	499 Move X29, X25
	500 Move W9, 1
	501 Add X10, X24, X10
	502 Or X8, X8, X11
	503 NotImplemented "Instruction BFM not yet implemented."
	504 Move [X10+32], X9
	505 Move [X10+40], X8
	506 Move W8, [X31+68]
	507 Move X24, 0x4A8000
	508 Move X25, [X31+24]
	509 Add W8, W8, 1
	510 Move [X31+68], W8
	511 Move X24, [X24+3192]
	512 Move W8, 0x6A02
	513 NotImplemented "Instruction MOVK not yet implemented."
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Move W8, 0x8527
	516 NotImplemented "Instruction MOVK not yet implemented."
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move W8, 0xC72F
	519 NotImplemented "Instruction MOVK not yet implemented."
	520 NotImplemented "Instruction CMP not yet implemented."
	521 Move W8, [X31+44]
	522 Move TEMP, X8
	523 And TEMP, TEMP, 1
	524 Compare TEMP, 1
	525 JumpIfEqual {774}
	526 Move X8, [X20]
	527 Compare X8, 0
	528 JumpIfEqual {903}
	529 Move W9, [X31+68]
	530 Move W10, [X8+24]
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Move X0, [X29]
	533 Move W8, [X0+224]
	534 Compare W8, 0
	535 JumpIfNotEqual {537}
	536 Call 0x1C17DFC
	537 Move X1, [X24]
	538 Move X0, X20
	539 Call 0x229D034, X0
	540 Move X8, [X20]
	541 Compare X8, 0
	542 JumpIfEqual {903}
	543 Move W9, [X31+68]
	544 Move W10, [X8+24]
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Move X9, W9
	547 Move W10, W26
	548 Move X11, 1
	549 Or X10, X10, 0x7FFFFFFFF
	550 Add X8, X8, X9
	551 Add W9, W9, 1
	552 NotImplemented "Instruction MOVK not yet implemented."
	553 Move [X31+44], W31
	554 Move W8, 0x3CB4
	555 NotImplemented "Instruction MOVK not yet implemented."
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Move W8, 0x743B
	558 NotImplemented "Instruction MOVK not yet implemented."
	559 NotImplemented "Instruction CMP not yet implemented."
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Move X0, X21
	562 Move X1, X31
	563 Call TextBackingContainer.get_Count, X0
	564 Add W28, W26, 4
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Add W1, W26, 3
	567 Move X0, X21
	568 Move X2, X31
	569 Call TextBackingContainer.get_Item, X0, X1
	570 NotImplemented "Instruction CMP not yet implemented."
	571 Move X0, X21
	572 Move W1, W28
	573 Move X2, X31
	574 Call TextBackingContainer.get_Item, X0, X1
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move X0, [X29]
	577 Move X23, [X31+72]
	578 Move W8, [X0+224]
	579 Compare W8, 0
	580 JumpIfNotEqual {582}
	581 Call 0x1C17DFC
	582 Move W1, 65
	583 Move X0, X23
	584 Move X2, X31
	585 Call TextGeneratorUtilities.GetStyle, X0, X1
	586 Move X4, [X31+32]
	587 Add X2, X31, 68
	588 Add X5, X31, 72
	589 Move X1, X20
	590 Move X3, X25
	591 Move X6, X31
	592 Call TextGeneratorUtilities.InsertOpeningTextStyle, X0, X1, X2, X3, X4, X5
	593 Move X24, 0x4A8000
	594 Move X29, X25
	595 Move X25, [X31+24]
	596 Move X24, [X24+3192]
	597 Move W8, [X31+44]
	598 Move TEMP, X8
	599 And TEMP, TEMP, 1
	600 Compare TEMP, 1
	601 JumpIfEqual {774}
	602 Move X8, [X20]
	603 Compare X8, 0
	604 JumpIfEqual {903}
	605 Move W9, [X31+68]
	606 Move W10, [X8+24]
	607 NotImplemented "Instruction CMP not yet implemented."
	608 Move X0, [X29]
	609 Move W8, [X0+224]
	610 Compare W8, 0
	611 JumpIfNotEqual {613}
	612 Call 0x1C17DFC
	613 Move X1, [X24]
	614 Move X0, X20
	615 Call 0x229D034, X0
	616 Move X8, [X20]
	617 Compare X8, 0
	618 JumpIfEqual {903}
	619 Move W9, [X31+68]
	620 Move W10, [X8+24]
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Move X9, W9
	623 Move W10, W26
	624 Move X11, 1
	625 Move [X31+44], W31
	626 Or X10, X10, 0x7FFFFFFFF
	627 Add X8, X8, X9
	628 Add W9, W9, 1
	629 NotImplemented "Instruction MOVK not yet implemented."
	630 Move [X8+32], X11
	631 Move [X8+40], X10
	632 Move [X31+68], W9
	633 Add W28, W26, 5
	634 Move W8, [X31+44]
	635 Move TEMP, X8
	636 And TEMP, TEMP, 1
	637 Compare TEMP, 1
	638 JumpIfEqual {774}
	639 Move X0, [X29]
	640 NotImplemented "Instruction LDRSW not yet implemented."
	641 Move W8, [X0+224]
	642 Compare W8, 0
	643 JumpIfNotEqual {645}
	644 Call 0x1C17DFC
	645 Move X6, [X31+32]
	646 Add X2, X31, 64
	647 Add X4, X31, 68
	648 Add X7, X31, 72
	649 Move X0, X21
	650 Move W1, W26
	651 Move X3, X20
	652 Move X5, X25
	653 Move [X31], X31
	654 Call TextGeneratorUtilities.ReplaceOpeningStyleTag, X0, X1, X2, X3, X4, X5, X6, X7
	655 Move TEMP, X0
	656 And TEMP, TEMP, 1
	657 Compare TEMP, 1
	658 JumpIfNotEqual {842}
	659 Move W8, [X31+68]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 Move X10, [X20]
	662 Compare X10, 0
	663 JumpIfEqual {903}
	664 Move W8, [X10+24]
	665 Move W9, 1
	666 Add X10, X10, X23
	667 Subtract W9, W9, W26
	668 Add X10, X10, 44
	669 NotImplemented "Instruction CMP not yet implemented."
	670 Move [X10-4], W26
	671 Move W11, [X31+64]
	672 Add X23, X23, 1
	673 Add W11, W9, W11
	674 Move [X10+16], W11
	675 NotImplemented "Instruction LDRSW not yet implemented."
	676 NotImplemented "Instruction CMP not yet implemented."
	677 Move W23, [X31+60]
	678 Move W28, [X31+64]
	679 Move [X31+44], W31
	680 Move X0, [X29]
	681 Move X23, [X31+72]
	682 Move W8, [X0+224]
	683 Compare W8, 0
	684 JumpIfNotEqual {686}
	685 Call 0x1C17DFC
	686 Move W1, 65
	687 Move X0, X23
	688 Move X2, X31
	689 Call TextGeneratorUtilities.GetStyle, X0, X1
	690 Move X4, [X31+32]
	691 Add X2, X31, 68
	692 Add X5, X31, 72
	693 Move X1, X20
	694 Move X3, X25
	695 Move X6, X31
	696 Call TextGeneratorUtilities.InsertClosingTextStyle, X0, X1, X2, X3, X4, X5
	697 Move W23, [X31+60]
	698 Move W8, [X31+44]
	699 Move TEMP, X8
	700 And TEMP, TEMP, 1
	701 Compare TEMP, 1
	702 JumpIfEqual {774}
	703 Move X8, [X20]
	704 Compare X8, 0
	705 JumpIfEqual {903}
	706 Move W9, [X31+68]
	707 Move W10, [X8+24]
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Move X0, [X29]
	710 Move W8, [X0+224]
	711 Compare W8, 0
	712 JumpIfNotEqual {714}
	713 Call 0x1C17DFC
	714 Move X1, [X24]
	715 Move X0, X20
	716 Call 0x229D034, X0
	717 Move X8, [X20]
	718 Compare X8, 0
	719 JumpIfEqual {903}
	720 Move W9, [X31+68]
	721 Move W10, [X8+24]
	722 NotImplemented "Instruction CMP not yet implemented."
	723 Move X9, W9
	724 Move W10, W26
	725 Move X11, 1
	726 Or X10, X10, 0x7FFFFFFFF
	727 Add X8, X8, X9
	728 Add W9, W9, 1
	729 NotImplemented "Instruction MOVK not yet implemented."
	730 Move [X31+44], W31
	731 Move [X8+32], X11
	732 Move [X8+40], X10
	733 Move [X31+68], W9
	734 Add W28, W26, 3
	735 Move W8, [X31+44]
	736 Move TEMP, X8
	737 And TEMP, TEMP, 1
	738 Compare TEMP, 1
	739 JumpIfEqual {774}
	740 Move X8, [X20]
	741 Compare X8, 0
	742 JumpIfEqual {903}
	743 Move W9, [X31+68]
	744 Move W10, [X8+24]
	745 NotImplemented "Instruction CMP not yet implemented."
	746 Move X0, [X29]
	747 Move W8, [X0+224]
	748 Compare W8, 0
	749 JumpIfNotEqual {751}
	750 Call 0x1C17DFC
	751 Move X1, [X24]
	752 Move X0, X20
	753 Call 0x229D034, X0
	754 Move X8, [X20]
	755 Compare X8, 0
	756 JumpIfEqual {903}
	757 Move W9, [X31+68]
	758 Move W10, [X8+24]
	759 NotImplemented "Instruction CMP not yet implemented."
	760 Move W10, W26
	761 Move X11, 5
	762 Move X9, W9
	763 Or X10, X10, X11
	764 Move X11, 1
	765 Move [X31+44], W31
	766 Add X8, X8, X9
	767 Add W9, W9, 1
	768 NotImplemented "Instruction MOVK not yet implemented."
	769 Move W8, [X31+44]
	770 Move TEMP, X8
	771 And TEMP, TEMP, 1
	772 Compare TEMP, 1
	773 JumpIfNotEqual {809}
	774 Move W8, 1
	775 Move [X31+44], W8
	776 Move X8, [X20]
	777 Compare X8, 0
	778 JumpIfEqual {903}
	779 Move W9, [X31+68]
	780 Move W10, [X8+24]
	781 NotImplemented "Instruction CMP not yet implemented."
	782 Move X0, [X29]
	783 Move W8, [X0+224]
	784 Compare W8, 0
	785 JumpIfNotEqual {787}
	786 Call 0x1C17DFC
	787 Move X1, [X24]
	788 Move X0, X20
	789 Call 0x229D034, X0
	790 Move X8, [X20]
	791 Compare X8, 0
	792 JumpIfEqual {903}
	793 Move W9, [X31+68]
	794 Move W10, [X8+24]
	795 NotImplemented "Instruction CMP not yet implemented."
	796 Move X9, W9
	797 Move W10, W26
	798 Move W11, 1
	799 Or X10, X10, 0x1FFFFFFFF
	800 NotImplemented "Instruction BFM not yet implemented."
	801 Add X8, X8, X9
	802 Add W9, W9, 1
	803 Move W28, W26
	804 Move [X8+32], X11
	805 Move [X8+40], X10
	806 Move [X31+68], W9
	807 Add W26, W28, 1
	808 NotImplemented "Instruction CMP not yet implemented."
	809 Move X8, [X20]
	810 Compare X8, 0
	811 JumpIfEqual {903}
	812 Move W9, [X31+68]
	813 Move W10, [X8+24]
	814 NotImplemented "Instruction CMP not yet implemented."
	815 Move X0, [X29]
	816 Move W8, [X0+224]
	817 Compare W8, 0
	818 JumpIfNotEqual {820}
	819 Call 0x1C17DFC
	820 Move X1, [X24]
	821 Move X0, X20
	822 Call 0x229D034, X0
	823 Move X8, [X20]
	824 Compare X8, 0
	825 JumpIfEqual {903}
	826 Move W9, [X31+68]
	827 Move W10, [X8+24]
	828 NotImplemented "Instruction CMP not yet implemented."
	829 Move W10, W26
	830 Move X11, 5
	831 Move X9, W9
	832 Or X10, X10, X11
	833 Move X11, 1
	834 Add X8, X8, X9
	835 Add W9, W9, 1
	836 NotImplemented "Instruction MOVK not yet implemented."
	837 Move [X31+44], W31
	838 Move [X8+32], X11
	839 Move [X8+40], X10
	840 Move [X31+68], W9
	841 Add W28, W26, 4
	842 Move W23, [X31+60]
	843 Move [X31+44], W31
	844 Move X0, [X31+48]
	845 Move [X25], W31
	846 Compare X0, 0
	847 JumpIfEqual {865}
	848 Move X1, X31
	849 Call TextStyle.get_hashCode, X0
	850 Move W8, 0x50F3
	851 NotImplemented "Instruction MOVK not yet implemented."
	852 NotImplemented "Instruction CMP not yet implemented."
	853 Move X0, [X29]
	854 Move W8, [X0+224]
	855 Compare W8, 0
	856 JumpIfNotEqual {858}
	857 Call 0x1C17DFC
	858 Move X3, [X31+32]
	859 Add X1, X31, 68
	860 Add X4, X31, 72
	861 Move X0, X20
	862 Move X2, X25
	863 Move X5, X31
	864 Call TextGeneratorUtilities.InsertClosingStyleTag, X0, X1, X2, X3, X4
	865 Move X8, [X20]
	866 Compare X8, 0
	867 JumpIfEqual {903}
	868 Move W9, [X31+68]
	869 Move W10, [X8+24]
	870 NotImplemented "Instruction CMP not yet implemented."
	871 Move X0, [X29]
	872 Move W8, [X0+224]
	873 Compare W8, 0
	874 JumpIfNotEqual {876}
	875 Call 0x1C17DFC
	876 Move X1, [X24]
	877 Move X0, X20
	878 Call 0x229D034, X0
	879 Move X8, [X20]
	880 Compare X8, 0
	881 JumpIfEqual {903}
	882 Move W9, [X31+68]
	883 Move W10, [X8+24]
	884 NotImplemented "Instruction CMP not yet implemented."
	885 Add X8, X8, W9
	886 Move [X8+36], W31
	887 Move W8, [X31+68]
	888 Move X22, [X31+144]
	889 Move X21, [X31+152]
	890 Move X24, [X31+128]
	891 Move X23, [X31+136]
	892 Move X26, [X31+112]
	893 Move X25, [X31+120]
	894 Move [X19+40], W8
	895 Move X20, [X31+160]
	896 Move X19, [X31+168]
	897 Move X28, [X31+96]
	898 Move X27, [X31+104]
	899 Move X29, [X31+80]
	900 Move X30, [X31+88]
	901 Add X31, X31, 176
	902 Return 
	903 Call 0x1C17F20
	904 Call 0x1C17F28

Method: System.Void InsertNewLine(System.Int32 i, System.Single baseScale, System.Single currentElementScale, System.Single currentEmScale, System.Single boldSpacingAdjustment, System.Single characterSpacingAdjustment, System.Single width, System.Single lineGap, ref System.Boolean isMaxVisibleDescenderSet, ref System.Single maxVisibleDescender, UnityEngine.TextCore.Text.TextGenerationSettings generationSettings, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC5CC8 ADD W20, W23, W22, 0x4, LSL
	0x03CC5CCC ADD W22, W0, W24, 0x4, LSL
	0x03CC5CD0 MOV W0, W8
	0x03CC5CD4 BL 0x3CC5F50
	0x03CC5CD8 LDRH W8, [X19 + 0x3C]
	0x03CC5CDC B 0x3CC5E78
	0x03CC5CE0 CBZ X19, 0x3CC5F4C
	0x03CC5CE4 LDR X23, [X19 + 0x18]
	0x03CC5CE8 CMP W23, 0x1
	0x03CC5CEC B.LS 0x3CC5F48
	0x03CC5CF0 ADRP X8, 0x49C000
	0x03CC5CF4 LDR X8, [X8 + 0xB48]
	0x03CC5CF8 LDRH W20, [X19 + 0x22]
	0x03CC5CFC LDR X0, [X8]
	0x03CC5D00 LDR W8, [X0 + 0xE0]
	0x03CC5D04 CBNZ W8, 0x3CC5D10
	0x03CC5D08 BL 0x1C16DFC
	0x03CC5D0C LDR X23, [X19 + 0x18]
	0x03CC5D10 CMP W23, 0x2
	0x03CC5D14 B.LS 0x3CC5F48
	0x03CC5D18 MOV W0, W20
	0x03CC5D1C BL 0x3CC5F50
	0x03CC5D20 LDRH W8, [X19 + 0x24]
	0x03CC5D24 MOV W20, W0
	0x03CC5D28 MOV W0, W8
	0x03CC5D2C BL 0x3CC5F50
	0x03CC5D30 CMP W23, 0x3
	0x03CC5D34 B.EQ 0x3CC5F48
	0x03CC5D38 CMP W23, 0x4
	0x03CC5D3C B.LS 0x3CC5F48
	0x03CC5D40 MOV W21, W0
	0x03CC5D44 LDRH W0, [X19 + 0x26]
	0x03CC5D48 BL 0x3CC5F50
	0x03CC5D4C LDRH W8, [X19 + 0x28]
	0x03CC5D50 MOV W22, W0
	0x03CC5D54 MOV W0, W8
	0x03CC5D58 BL 0x3CC5F50
	0x03CC5D5C CMP W23, 0x5
	0x03CC5D60 B.EQ 0x3CC5F48
	0x03CC5D64 CMP W23, 0x6
	0x03CC5D68 B.LS 0x3CC5F48
	0x03CC5D6C LDRH W8, [X19 + 0x2A]
	0x03CC5D70 ADD W20, W21, W20, 0x4, LSL
	0x03CC5D74 ADD W21, W0, W22, 0x4, LSL
	0x03CC5D78 MOV W0, W8
	0x03CC5D7C BL 0x3CC5F50
	0x03CC5D80 LDRH W8, [X19 + 0x2C]
	0x03CC5D84 MOV W19, W0
	0x03CC5D88 MOV W0, W8
	0x03CC5D8C BL 0x3CC5F50
	0x03CC5D90 ADD W8, W0, W19, 0x4, LSL
	0x03CC5D94 BFM W20, W21, 0x18, 0x7
	0x03CC5D98 BFM W20, W8, 0x10, 0xF
	0x03CC5D9C ORR W21, W20, 0xFF000000
	0x03CC5DA0 B 0x3CC5F30
	0x03CC5DA4 CBZ X19, 0x3CC5F4C
	0x03CC5DA8 LDR X25, [X19 + 0x18]
	0x03CC5DAC CMP W25, 0x1
	0x03CC5DB0 B.LS 0x3CC5F48
	0x03CC5DB4 ADRP X8, 0x49C000
	0x03CC5DB8 LDR X8, [X8 + 0xB48]
	0x03CC5DBC LDRH W20, [X19 + 0x22]
	0x03CC5DC0 LDR X0, [X8]
	0x03CC5DC4 LDR W8, [X0 + 0xE0]
	0x03CC5DC8 CBNZ W8, 0x3CC5DD4
	0x03CC5DCC BL 0x1C16DFC
	0x03CC5DD0 LDR X25, [X19 + 0x18]
	0x03CC5DD4 CMP W25, 0x2
	0x03CC5DD8 B.LS 0x3CC5F48
	0x03CC5DDC MOV W0, W20
	0x03CC5DE0 BL 0x3CC5F50
	0x03CC5DE4 LDRH W8, [X19 + 0x24]
	0x03CC5DE8 MOV W20, W0
	0x03CC5DEC MOV W0, W8
	0x03CC5DF0 BL 0x3CC5F50
	0x03CC5DF4 CMP W25, 0x3
	0x03CC5DF8 B.EQ 0x3CC5F48
	0x03CC5DFC CMP W25, 0x4
	0x03CC5E00 B.LS 0x3CC5F48
	0x03CC5E04 MOV W21, W0
	0x03CC5E08 LDRH W0, [X19 + 0x26]
	0x03CC5E0C BL 0x3CC5F50
	0x03CC5E10 LDRH W8, [X19 + 0x28]
	0x03CC5E14 MOV W22, W0
	0x03CC5E18 MOV W0, W8
	0x03CC5E1C BL 0x3CC5F50
	0x03CC5E20 CMP W25, 0x5
	0x03CC5E24 B.EQ 0x3CC5F48
	0x03CC5E28 CMP W25, 0x6
	0x03CC5E2C B.LS 0x3CC5F48
	0x03CC5E30 MOV W23, W0
	0x03CC5E34 LDRH W0, [X19 + 0x2A]
	0x03CC5E38 BL 0x3CC5F50
	0x03CC5E3C LDRH W8, [X19 + 0x2C]
	0x03CC5E40 MOV W24, W0
	0x03CC5E44 MOV W0, W8
	0x03CC5E48 BL 0x3CC5F50
	0x03CC5E4C CMP W25, 0x7
	0x03CC5E50 B.EQ 0x3CC5F48
	0x03CC5E54 CMP W25, 0x8
	0x03CC5E58 B.LS 0x3CC5F48
	0x03CC5E5C LDRH W8, [X19 + 0x2E]
	0x03CC5E60 ADD W21, W21, W20, 0x4, LSL
	0x03CC5E64 ADD W20, W23, W22, 0x4, LSL
	0x03CC5E68 ADD W22, W0, W24, 0x4, LSL
	0x03CC5E6C MOV W0, W8
	0x03CC5E70 BL 0x3CC5F50
	0x03CC5E74 LDRH W8, [X19 + 0x30]
	0x03CC5E78 MOV W19, W0
	0x03CC5E7C MOV W0, W8
	0x03CC5E80 BL 0x3CC5F50
	0x03CC5E84 BFM W21, W20, 0x18, 0x7
	0x03CC5E88 ADD W8, W0, W19, 0x4, LSL
	0x03CC5E8C BFM W21, W22, 0x10, 0x7
	0x03CC5E90 BFM W21, W8, 0x8, 0x7
	0x03CC5E94 B 0x3CC5F30
	0x03CC5E98 CBZ X19, 0x3CC5F4C
	0x03CC5E9C LDR X21, [X19 + 0x18]
	0x03CC5EA0 CMP W21, 0x7
	0x03CC5EA4 B.LS 0x3CC5F48
	0x03CC5EA8 ADRP X8, 0x49C000
	0x03CC5EAC LDR X8, [X8 + 0xB48]
	0x03CC5EB0 LDRH W20, [X19 + 0x2E]
	0x03CC5EB4 LDR X0, [X8]
	0x03CC5EB8 LDR W8, [X0 + 0xE0]
	0x03CC5EBC CBNZ W8, 0x3CC5EC8
	0x03CC5EC0 BL 0x1C16DFC
	0x03CC5EC4 LDR X21, [X19 + 0x18]
	0x03CC5EC8 CMP W21, 0x7
	0x03CC5ECC B.LS 0x3CC5F48
	0x03CC5ED0 MOV W0, W20
	0x03CC5ED4 BL 0x3CC5F50
	0x03CC5ED8 LDRH W8, [X19 + 0x2E]
	0x03CC5EDC MOV W20, W0
	0x03CC5EE0 MOV W0, W8
	0x03CC5EE4 BL 0x3CC5F50
	0x03CC5EE8 CMP W21, 0x8
	0x03CC5EEC B.EQ 0x3CC5F48
	0x03CC5EF0 CMP W21, 0x9
	0x03CC5EF4 B.LS 0x3CC5F48
	0x03CC5EF8 LDRH W8, [X19 + 0x30]
	0x03CC5EFC ADD W20, W0, W20, 0x4, LSL
	0x03CC5F00 MOV W0, W8
	0x03CC5F04 BL 0x3CC5F50
	0x03CC5F08 LDRH W8, [X19 + 0x32]
	0x03CC5F0C MOV W19, W0
	0x03CC5F10 MOV W0, W8
	0x03CC5F14 BL 0x3CC5F50
	0x03CC5F18 ADD W9, W19, W19, 0x4, LSL
	0x03CC5F1C ADD W8, W0, W0, 0x4, LSL
	0x03CC5F20 UBFM W9, W9, 0x18, 0x7
	0x03CC5F24 BFM W9, W8, 0x10, 0xF
	0x03CC5F28 BFM W9, W20, 0x0, 0x7
	0x03CC5F2C ORR W21, W9, 0xFF000000
	0x03CC5F30 MOV W0, W21
	0x03CC5F34 LDP X20, X19, [X31 + 0x30]
	0x03CC5F38 LDP X22, X21, [X31 + 0x20]
	0x03CC5F3C LDP X24, X23, [X31 + 0x10]
	0x03CC5F40 LDP X30, X25, [X31], #0x40
	0x03CC5F44 RET
	0x03CC5F48 BL 0x1C16F28
	0x03CC5F4C BL 0x1C16F20
	0x03CC5F50 SUB W8, W0, 0x30
	0x03CC5F54 AND W9, W8, 0xFFFF
	0x03CC5F58 CMP W9, 0x36
	0x03CC5F5C B.HI 0x3CC5F74
	0x03CC5F60 ADRP X9, 0xFFFFFFFFFCED2000
	0x03CC5F64 SXTH X8, W8
	0x03CC5F68 ADD X9, X9, 0xCA0
	0x03CC5F6C LDR W0, [X9, X8, LSL #2]
	0x03CC5F70 RET
	0x03CC5F74 MOVZ W0, 0xF
	0x03CC5F78 RET
	0x03CC5F7C STP X30, X27, [X31 - 0x50]!
	0x03CC5F80 STP X26, X25, [X31 + 0x10]
	0x03CC5F84 STP X24, X23, [X31 + 0x20]
	0x03CC5F88 STP X22, X21, [X31 + 0x30]
	0x03CC5F8C STP X20, X19, [X31 + 0x40]
	0x03CC5F90 ADRP X22, 0x722000
	0x03CC5F94 LDRB W8, [X22 + 0x357]
	0x03CC5F98 MOV W21, W2
	0x03CC5F9C MOV W20, W1
	0x03CC5FA0 MOV X19, X0
	0x03CC5FA4 TBNZ X8, 0x0, 0x3CC5FBC
	0x03CC5FA8 ADRP X0, 0x49C000
	0x03CC5FAC LDR X0, [X0 + 0xB48]
	0x03CC5FB0 BL 0x1C16CF4
	0x03CC5FB4 MOVZ W8, 0x1
	0x03CC5FB8 STRB W8, [X22 + 0x357]
	0x03CC5FBC CMP W21, 0x9
	0x03CC5FC0 B.EQ 0x3CC60B8
	0x03CC5FC4 CMP W21, 0x7
	0x03CC5FC8 B.NE 0x3CC61E0
	0x03CC5FCC CBZ X19, 0x3CC6204
	0x03CC5FD0 LDR W24, [X19 + 0x18]
	0x03CC5FD4 ADD W8, W20, 0x1
	0x03CC5FD8 CMP W8, W24
	0x03CC5FDC B.CS 0x3CC6200
	0x03CC5FE0 ADRP X9, 0x49C000
	0x03CC5FE4 LDR X9, [X9 + 0xB48]
	0x03CC5FE8 ADD X8, X19, W8, 0x1, SXTW
	0x03CC5FEC LDRH W21, [X8 + 0x20]
	0x03CC5FF0 LDR X0, [X9]
	0x03CC5FF4 LDR W9, [X0 + 0xE0]
	0x03CC5FF8 CBNZ W9, 0x3CC6004
	0x03CC5FFC BL 0x1C16DFC
	0x03CC6000 LDR W24, [X19 + 0x18]
	0x03CC6004 ADD W22, W20, 0x2
	0x03CC6008 CMP W22, W24
	0x03CC600C B.CS 0x3CC6200
	0x03CC6010 MOV W0, W21
	0x03CC6014 BL 0x3CC5F50
	0x03CC6018 ADD X8, X19, W22, 0x1, SXTW
	0x03CC601C LDRH W8, [X8 + 0x20]
	0x03CC6020 MOV W21, W0
	0x03CC6024 MOV W0, W8
	0x03CC6028 BL 0x3CC5F50
	0x03CC602C ADD W8, W20, 0x3
	0x03CC6030 CMP W8, W24
	0x03CC6034 B.CS 0x3CC6200
	0x03CC6038 ADD W23, W20, 0x4
	0x03CC603C CMP W23, W24
	0x03CC6040 B.CS 0x3CC6200
	0x03CC6044 ADD X25, X19, 0x20
	0x03CC6048 MOV W22, W0
	0x03CC604C LDRH W0, [X25, W8, SXTW]
	0x03CC6050 BL 0x3CC5F50
	0x03CC6054 LDRH W8, [X25, W23, SXTW]
	0x03CC6058 MOV W23, W0
	0x03CC605C MOV W0, W8
	0x03CC6060 BL 0x3CC5F50
	0x03CC6064 ADD W8, W20, 0x5
	0x03CC6068 CMP W8, W24
	0x03CC606C B.CS 0x3CC6200
	0x03CC6070 ADD W20, W20, 0x6
	0x03CC6074 CMP W20, W24
	0x03CC6078 B.CS 0x3CC6200
	0x03CC607C ADD X19, X19, 0x20
	0x03CC6080 LDRH W8, [X19, W8, SXTW]
	0x03CC6084 ADD W21, W22, W21, 0x4, LSL
	0x03CC6088 ADD W22, W0, W23, 0x4, LSL
	0x03CC608C MOV W0, W8
	0x03CC6090 BL 0x3CC5F50
	0x03CC6094 LDRH W8, [X19, W20, SXTW]
	0x03CC6098 MOV W19, W0
	0x03CC609C MOV W0, W8
	0x03CC60A0 BL 0x3CC5F50
	0x03CC60A4 ADD W8, W0, W19, 0x4, LSL
	0x03CC60A8 BFM W21, W22, 0x18, 0x7
	0x03CC60AC BFM W21, W8, 0x10, 0xF
	0x03CC60B0 ORR W20, W21, 0xFF000000
	0x03CC60B4 B 0x3CC61E4
	0x03CC60B8 CBZ X19, 0x3CC6204
	0x03CC60BC LDR W26, [X19 + 0x18]
	0x03CC60C0 ADD W8, W20, 0x1
	0x03CC60C4 CMP W8, W26
	0x03CC60C8 B.CS 0x3CC6200
	0x03CC60CC ADRP X9, 0x49B000
	0x03CC60D0 LDR X9, [X9 + 0xB48]
	0x03CC60D4 ADD X8, X19, W8, 0x1, SXTW
	0x03CC60D8 LDRH W21, [X8 + 0x20]
	0x03CC60DC LDR X0, [X9]
	0x03CC60E0 LDR W9, [X0 + 0xE0]
	0x03CC60E4 CBNZ W9, 0x3CC60F0
	0x03CC60E8 BL 0x1C16DFC
	0x03CC60EC LDR W26, [X19 + 0x18]
	0x03CC60F0 ADD W22, W20, 0x2
	0x03CC60F4 CMP W22, W26
	0x03CC60F8 B.CS 0x3CC6200
	0x03CC60FC MOV W0, W21
	0x03CC6100 BL 0x3CC5F50
	0x03CC6104 ADD X8, X19, W22, 0x1, SXTW
	0x03CC6108 LDRH W8, [X8 + 0x20]
	0x03CC610C MOV W21, W0
	0x03CC6110 MOV W0, W8
	0x03CC6114 BL 0x3CC5F50
	0x03CC6118 ADD W8, W20, 0x3
	0x03CC611C CMP W8, W26
	0x03CC6120 B.CS 0x3CC6200
	0x03CC6124 ADD W23, W20, 0x4
	0x03CC6128 CMP W23, W26
	0x03CC612C B.CS 0x3CC6200
	0x03CC6130 ADD X24, X19, 0x20
	0x03CC6134 MOV W22, W0
	0x03CC6138 LDRH W0, [X24, W8, SXTW]
	0x03CC613C BL 0x3CC5F50
	0x03CC6140 LDRH W8, [X24, W23, SXTW]
	0x03CC6144 MOV W23, W0
	0x03CC6148 MOV W0, W8
	0x03CC614C BL 0x3CC5F50
	0x03CC6150 ADD W8, W20, 0x5
	0x03CC6154 CMP W8, W26
	0x03CC6158 B.CS 0x3CC6200
	0x03CC615C ADD W25, W20, 0x6
	0x03CC6160 CMP W25, W26
	0x03CC6164 B.CS 0x3CC6200
	0x03CC6168 ADD X27, X19, 0x20
	0x03CC616C MOV W24, W0
	0x03CC6170 LDRH W0, [X27, W8, SXTW]
	0x03CC6174 BL 0x3CC5F50
	0x03CC6178 LDRH W8, [X27, W25, SXTW]
	0x03CC617C MOV W25, W0
	0x03CC6180 MOV W0, W8
	0x03CC6184 BL 0x3CC5F50
	0x03CC6188 ADD W8, W20, 0x7
	0x03CC618C CMP W8, W26
	0x03CC6190 B.CS 0x3CC6200
	0x03CC6194 ADD W27, W20, 0x8
	0x03CC6198 CMP W27, W26
	0x03CC619C B.CS 0x3CC6200
	0x03CC61A0 ADD X19, X19, 0x20
	0x03CC61A4 LDRH W8, [X19, W8, SXTW]
	0x03CC61A8 ADD W20, W22, W21, 0x4, LSL
	0x03CC61AC ADD W22, W0, W25, 0x4, LSL
	0x03CC61B0 ADD W21, W24, W23, 0x4, LSL
	0x03CC61B4 MOV W0, W8
	0x03CC61B8 BL 0x3CC5F50
	0x03CC61BC LDRH W8, [X19, W27, SXTW]
	0x03CC61C0 MOV W19, W0
	0x03CC61C4 MOV W0, W8
	0x03CC61C8 BL 0x3CC5F50
	0x03CC61CC BFM W20, W21, 0x18, 0x7
	0x03CC61D0 ADD W8, W0, W19, 0x4, LSL

ISIL:
	001 Move [X31-144], D15
	002 Move [X31-136], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X25, 0x723000
	019 Move W8, [X25+840]
	020 Move X21, X5
	021 Move X20, X4
	022 Move X24, X3
	023 Move X23, X2
	024 Move V10, V6
	025 Move V14, V5
	026 Move V12, V4
	027 Move V11, V3
	028 Move V9, V2
	029 Move V13, V1
	030 Move W22, W1
	031 Move X19, X0
	032 Move [X31+76], S0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {45}
	037 Move X0, 0x42F000
	038 Move X0, [X0+1448]
	039 Call 0x1C17CF4
	040 Move X0, 0x49D000
	041 Move X0, [X0+2888]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X25+840], W8
	045 Move V0, [X19+736]
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move X8, 0x42F000
	048 Move X8, [X8+1448]
	049 Move V0, [X19+824]
	050 Move V1, [X19+5548]
	051 Move X0, [X8]
	052 Subtract S15, S0, S1
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X8, -52273152
	058 Move V0, [X8+816]
	059 NotImplemented "Instruction FABS not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Move W8, [X19+744]
	062 Compare W8, 0
	063 JumpIfNotEqual {87}
	064 Move W8, [X19+892]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, 0x49D000
	067 Move X8, [X8+2888]
	068 Move W25, [X19+808]
	069 Move W26, [X19+804]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move W0, W25
	076 Move W1, W26
	077 Move V0, V15
	078 Move X2, X21
	079 Move X3, X31
	080 Call TextGeneratorUtilities.AdjustLineOffset, X0, X1, V0, X2
	081 Move V0, [X19+888]
	082 Move V1, [X19+736]
	083 Subtract S0, S0, S15
	084 Add S1, S15, S1
	085 Move [X19+888], S0
	086 Move [X19+736], S1
	087 Move V0, [X19+736]
	088 Move V1, [X19+828]
	089 Move V2, [X19+888]
	090 Subtract S15, S1, S0
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 NotImplemented "Instruction FCSEL not yet implemented."
	093 Move [X19+888], S2
	094 Move W8, [X23]
	095 Move V1, [X19+824]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Move [X24], S2
	099 Compare X20, 0
	100 JumpIfEqual {345}
	101 Move W8, [X20+232]
	102 Compare W8, 0
	103 JumpIfEqual {112}
	104 Move W8, [X19+804]
	105 Move W9, [X20+216]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W8, [X19+832]
	108 Move W9, [X20+224]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W8, 1
	111 Move [X23], W8
	112 Compare X21, 0
	113 JumpIfEqual {345}
	114 Move X8, [X21+72]
	115 Compare X8, 0
	116 JumpIfEqual {345}
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Move W10, [X8+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W11, [X19+808]
	121 Move W10, 96
	122 NotImplemented "Instruction MADD not yet implemented."
	123 Move W13, 816
	124 Move [X12+56], W11
	125 Move W10, [X19+816]
	126 Move W14, 808
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CSEL not yet implemented."
	129 Move W10, [X19]
	130 Move [X19+816], W10
	131 Move [X12+60], W10
	132 Move W10, [X19+804]
	133 Subtract W10, W10, 1
	134 NotImplemented "Instruction BIC not yet implemented."
	135 Move [X19+812], W13
	136 Move [X12+64], W13
	137 Move W14, [X19+820]
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Subtract W11, W13, W11
	140 Add W11, W11, 1
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CSEL not yet implemented."
	143 Move [X19+820], W13
	144 Move [X12+68], W13
	145 Move [X12+36], W11
	146 Move W11, [X19+836]
	147 Move [X12+40], W11
	148 Move W11, [X19+840]
	149 Move [X12+48], W11
	150 Move X11, [X21+48]
	151 Compare X11, 0
	152 JumpIfEqual {345}
	153 Move W12, [X11+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move W12, 392
	156 NotImplemented "Instruction MADD not yet implemented."
	157 Move W10, [X10+292]
	158 Move W11, 96
	159 NotImplemented "Instruction MADD not yet implemented."
	160 Move [X8+116], S15
	161 Move [X8+112], W10
	162 Move X8, [X21+72]
	163 Compare X8, 0
	164 JumpIfEqual {345}
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Move W10, [X8+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X10, [X21+48]
	169 Compare X10, 0
	170 JumpIfEqual {345}
	171 NotImplemented "Instruction LDRSW not yet implemented."
	172 Move W12, [X10+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W12, 392
	175 NotImplemented "Instruction MADD not yet implemented."
	176 Move W10, [X10+304]
	177 Move W11, 96
	178 Move V8, V11
	179 Subtract S11, S1, S0
	180 NotImplemented "Instruction MADD not yet implemented."
	181 Move [X8+120], W10
	182 Move [X8+124], S11
	183 Move X8, [X21+72]
	184 Compare X8, 0
	185 JumpIfEqual {345}
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Move W10, [X8+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move W10, 96
	190 NotImplemented "Instruction MADD not yet implemented."
	191 Move V0, [X8+120]
	192 Move [X8+96], S14
	193 Move [X8+72], S0
	194 Move X8, [X21+48]
	195 Compare X8, 0
	196 JumpIfEqual {345}
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Move W10, [X8+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X0, [X19+104]
	201 Compare X0, 0
	202 JumpIfEqual {345}
	203 Move W10, 392
	204 NotImplemented "Instruction MADD not yet implemented."
	205 Move V14, [X8+352]
	206 Move X1, X31
	207 Call FontAsset.get_regularStyleSpacing, X0
	208 Move X8, [X21+72]
	209 Compare X8, 0
	210 JumpIfEqual {345}
	211 Move X10, [X21+48]
	212 Compare X10, 0
	213 JumpIfEqual {345}
	214 NotImplemented "Instruction LDRSW not yet implemented."
	215 Move W9, [X10+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Move W12, [X8+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move V1, [X19+748]
	221 Move V2, [X20+264]
	222 Add S0, S0, S12
	223 Move W12, 392
	224 Add S0, S0, S8
	225 Multiply S3, S14, S13
	226 Move W13, [X20+182]
	227 NotImplemented "Instruction NOP not yet implemented."
	228 NotImplemented "Instruction MADD not yet implemented."
	229 Move W11, 96
	230 Multiply S0, S0, S9
	231 Move S4, 1
	232 Add S0, S3, S0
	233 NotImplemented "Instruction MADD not yet implemented."
	234 Add X9, X10, 356
	235 Add S0, S1, S0
	236 Move V1, [X9]
	237 Subtract S2, S4, S2
	238 Multiply S0, S2, S0
	239 NotImplemented "Instruction CMP not yet implemented."
	240 NotImplemented "Instruction FNEG not yet implemented."
	241 NotImplemented "Instruction FCSEL not yet implemented."
	242 Add S0, S1, S0
	243 Move V8, [X31+76]
	244 Move [X8+92], S0
	245 Move [X9], S0
	246 Move V0, [X19+736]
	247 Move S5, W31
	248 Subtract S6, S11, S15
	249 Multiply S3, S8, S10
	250 Add S1, S3, S6
	251 Subtract S0, S5, S0
	252 Move [X8+76], S1
	253 Move [X8+84], S11
	254 Move [X8+84], S0
	255 Move [X8+92], S15
	256 Move W8, [X19+804]
	257 Add X9, X19, 836
	258 Add X1, X19, 1816
	259 Move X0, X19
	260 Subtract W3, W8, 1
	261 Move W2, W22
	262 Move X4, X21
	263 Move [X19+808], W8
	264 Move [X9], X31
	265 Call TextGenerator.SaveWordWrappingState, X0, X1, X2, X3, X4
	266 Move W8, [X19+832]
	267 Add W22, W8, 1
	268 Move [X19+832], W22
	269 Move X8, [X21+72]
	270 Compare X8, 0
	271 JumpIfEqual {345}
	272 Move W8, [X8+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X8, 0x49C000
	275 Move X8, [X8+2888]
	276 Move X0, [X8]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move W0, W22
	282 Move X1, X21
	283 Move X2, X31
	284 Call TextGeneratorUtilities.ResizeLineExtents, X0, X1
	285 Move X8, -52277248
	286 Move V0, [X19+740]
	287 Move V1, [X8+532]
	288 NotImplemented "Instruction FCMP not yet implemented."
	289 Move X8, [X21+48]
	290 Compare X8, 0
	291 JumpIfEqual {345}
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Move W10, [X8+24]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move V0, [X19+828]
	296 Move W10, 392
	297 Move V1, [X19+5552]
	298 Move S3, W31
	299 NotImplemented "Instruction NOP not yet implemented."
	300 NotImplemented "Instruction MADD not yet implemented."
	301 Subtract S0, S3, S0
	302 Move V3, [X8+344]
	303 Move V2, [X20+200]
	304 Move V4, [X19+736]
	305 Add S1, S1, S10
	306 Multiply S1, S1, S8
	307 Add S0, S3, S0
	308 Multiply S2, S2, S9
	309 Add S0, S0, S1
	310 Add S0, S2, S0
	311 Add S0, S4, S0
	312 Move [X19+736], S0
	313 Move [X19+5548], S3
	314 Move V1, [X20+200]
	315 Move V2, [X19+736]
	316 Multiply S1, S1, S9
	317 Add S0, S0, S1
	318 Add S0, S2, S0
	319 Move [X19+736], S0
	320 Move X8, -52264960
	321 Move V0, [X19+764]
	322 Move V1, [X8+2856]
	323 Move S2, W31
	324 Move X22, [X31+112]
	325 Move X21, [X31+120]
	326 Add S0, S0, S2
	327 Move [X19+824], D1
	328 Move [X19+756], S0
	329 Move X20, [X31+128]
	330 Move X19, [X31+136]
	331 Move X24, [X31+96]
	332 Move X23, [X31+104]
	333 Move X26, [X31+80]
	334 Move X25, [X31+88]
	335 Move X30, [X31+64]
	336 Move D9, [X31+48]
	337 Move D8, [X31+56]
	338 Move D11, [X31+32]
	339 Move D10, [X31+40]
	340 Move D13, [X31+16]
	341 Move D12, [X31+24]
	342 Move D15, [X31+144]
	343 Move D14, [X31+152]
	344 Return 
	345 Call 0x1C17F20
	346 Call 0x1C17F28

Method: System.Void DoMissingGlyphCallback(System.UInt32 unicode, System.Int32 stringIndex, UnityEngine.TextCore.Text.FontAsset fontAsset, UnityEngine.TextCore.Text.TextInfo textInfo)

Disassembly:
	0x03CC317C BL 0x3C9C2D4
	0x03CC3180 MOV X0, X28
	0x03CC3184 MOV X1, X31
	0x03CC3188 MOV V10.16B, V0.16B
	0x03CC318C BL 0x3CAC954
	0x03CC3190 MOV X0, X28
	0x03CC3194 MOV X1, X31
	0x03CC3198 MOV V11.16B, V0.16B
	0x03CC319C BL 0x3CAC94C
	0x03CC31A0 CBZ X0, 0x3CC4BC4
	0x03CC31A4 MOV X1, X31
	0x03CC31A8 BL 0x3C9C4E0
	0x03CC31AC LDR X24, [X31 + 0x90]
	0x03CC31B0 LDR X0, [X24]
	0x03CC31B4 CBZ X0, 0x3CC4BC4
	0x03CC31B8 ADD X8, X31, 0xA0
	0x03CC31BC MOV X1, X31
	0x03CC31C0 MOV V12.16B, V0.16B
	0x03CC31C4 BL 0x3C9EB14
	0x03CC31C8 ADD X0, X31, 0x250
	0x03CC31CC ADD X1, X31, 0xA0
	0x03CC31D0 MOVZ W2, 0x60
	0x03CC31D4 BL 0x3EB1AC0
	0x03CC31D8 ADD X0, X31, 0x250
	0x03CC31DC MOV X1, X31
	0x03CC31E0 BL 0x3C9BFB8
	0x03CC31E4 LDR X0, [X24]
	0x03CC31E8 CBZ X0, 0x3CC4BC4
	0x03CC31EC SCVTF S1, W29
	0x03CC31F0 FDIV S2, S9, S10
	0x03CC31F4 FDIV S1, S13, S1
	0x03CC31F8 FMUL S2, S2, S11
	0x03CC31FC FMUL S1, S1, S8
	0x03CC3200 FMUL S1, S1, S14
	0x03CC3204 FMUL S2, S2, S12
	0x03CC3208 FMUL S14, S1, S2
	0x03CC320C FDIV S9, S1, S14
	0x03CC3210 ADD X8, X31, 0xA0
	0x03CC3214 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x725000
	009 Move X24, 0x49F000
	010 Move W8, [X23+841]
	011 Move X24, [X24+2896]
	012 Move X20, X4
	013 Move X19, X3
	014 Move W21, W2
	015 Move W22, W1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x49F000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+841], W8
	025 Move X8, [X24]
	026 Move X8, [X8+184]
	027 Move X8, [X8+16]
	028 Compare X8, 0
	029 JumpIfEqual {45}
	030 Move X6, [X8+24]
	031 Move X0, [X8+64]
	032 Move X5, [X8+40]
	033 Move W1, W22
	034 Move W2, W21
	035 Move X3, X20
	036 Move X4, X19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]
	044 CallNoReturn X6
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X24, [X31+16]
	050 Move X23, [X31+24]
	051 Move X30, [X31+64]
	052 Return 

Method: System.Void ClearMarkupTagAttributes()

Disassembly:
	0x03CC0738 LDP S0, S1, [X8 + 0x2C]
	0x03CC073C LDP S2, S3, [X8 + 0x34]
	0x03CC0740 MOV X0, X31
	0x03CC0744 BL 0x1E43664
	0x03CC0748 MOV W8, W25
	0x03CC074C AND X1, X0, 0x0
	0x03CC0750 MOV X0, X8
	0x03CC0754 MOV X2, X31
	0x03CC0758 BL 0x3C9EA08
	0x03CC075C LDRB W8, [X27]
	0x03CC0760 MOV W25, W0
	0x03CC0764 CBZ W8, 0x3CC0798
	0x03CC0768 LDR X8, [X20 + 0x288]
	0x03CC076C CBZ X8, 0x3CC0B24
	0x03CC0770 LDP S0, S1, [X8 + 0x4C]
	0x03CC0774 LDP S2, S3, [X8 + 0x54]
	0x03CC0778 MOV X0, X31
	0x03CC077C BL 0x1E43664
	0x03CC0780 MOV W8, W21
	0x03CC0784 AND X1, X0, 0x0
	0x03CC0788 MOV X0, X8
	0x03CC078C MOV X2, X31
	0x03CC0790 BL 0x3C9EA08
	0x03CC0794 MOV W21, W0
	0x03CC0798 LDR X8, [X19 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move X10, [X0+6608]
	003 Compare X10, 0
	004 JumpIfEqual {22}
	005 Move X9, [X10+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, X31
	008 And X9, X9, 0
	009 Move W11, 32
	010 Move W12, [X10+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add X8, X8, 1
	013 Add X10, X10, X11
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move [X10], X31
	016 Move [X10+8], X31
	017 Move [X10+16], X31
	018 Move X10, [X0+6608]
	019 Add X11, X11, 24
	020 Compare X10, 0
	021 JumpIfNotEqual {10}
	022 Call 0x1C17F20
	023 Move X30, [X31+16]
	024 Return 
	025 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03CB8CC8 CMP W0, W8
	0x03CB8CCC B.LE 0x3CB9098
	0x03CB8CD0 MOVZ W8, 0x2CAE
	0x03CB8CD4 MOVK W8, 0x320000
	0x03CB8CD8 CMP W0, W8
	0x03CB8CDC B.EQ 0x3CB9208
	0x03CB8CE0 MOVZ W8, 0xBD17
	0x03CB8CE4 MOVK W8, 0x5F90000
	0x03CB8CE8 CMP W0, W8
	0x03CB8CEC B.EQ 0x3CB928C
	0x03CB8CF0 MOVZ W8, 0xF418
	0x03CB8CF4 MOVK W8, 0x72E60000
	0x03CB8CF8 CMP W0, W8
	0x03CB8CFC B.NE 0x3CB9488
	0x03CB8D00 LDR W8, [X31 + 0x2C]
	0x03CB8D04 TBNZ X8, 0x0, 0x3CB9480
	0x03CB8D08 LDR X0, [X29]
	0x03CB8D0C LDRSW X23, [X31 + 0x44]
	0x03CB8D10 LDR W8, [X0 + 0xE0]
	0x03CB8D14 CBNZ W8, 0x3CB8D1C
	0x03CB8D18 BL 0x1C16DFC
	0x03CB8D1C LDR X3, [X31 + 0x20]
	0x03CB8D20 ADD X1, X31, 0x44
	0x03CB8D24 ADD X4, X31, 0x48
	0x03CB8D28 MOV X0, X20
	0x03CB8D2C MOV X2, X25
	0x03CB8D30 MOV X5, X31
	0x03CB8D34 BL 0x3CC703C
	0x03CB8D38 LDR W8, [X31 + 0x44]
	0x03CB8D3C MOVZ W11, 0x8
	0x03CB8D40 CMP W23, W8
	0x03CB8D44 B.GE 0x3CB8D7C
	0x03CB8D48 LDR X9, [X20]
	0x03CB8D4C CBZ X9, 0x3CB9664
	0x03CB8D50 LDR W8, [X9 + 0x18]
	0x03CB8D54 ADD X9, X9, X23, 0x4, LSL
	0x03CB8D58 ADD X9, X9, 0x2C
	0x03CB8D5C CMP W23, W8
	0x03CB8D60 B.CS 0x3CB9668
	0x03CB8D64 STP W26, W11, [X9 - 0x4]
	0x03CB8D68 LDRSW X10, [X31 + 0x44]
	0x03CB8D6C ADD X23, X23, 0x1
	0x03CB8D70 ADD X9, X9, 0x10
	0x03CB8D74 CMP X23, X10
	0x03CB8D78 B.LT 0x3CB8D5C
	0x03CB8D7C LDR W23, [X31 + 0x3C]
	0x03CB8D80 STR W31, [X31 + 0x2C]
	0x03CB8D84 ADD W28, W26, 0x7
	0x03CB8D88 B 0x3CB94FC
	0x03CB8D8C CMP W0, 0x55
	0x03CB8D90 B.EQ 0x3CB8FCC
	0x03CB8D94 CMP W0, 0x5C
	0x03CB8D98 B.NE 0x3CB9488
	0x03CB8D9C LDR X8, [X31 + 0x48]
	0x03CB8DA0 CBZ X8, 0x3CB9664
	0x03CB8DA4 LDRB W8, [X8 + 0xBC]
	0x03CB8DA8 CMP W8, 0x0
	0x03CB8DAC CSEL W26, W26, W28, EQ
	0x03CB8DB0 B 0x3CB9488
	0x03CB8DB4 ADRP X24, 0x4A9000
	0x03CB8DB8 LDR X24, [X24 + 0xC78]
	0x03CB8DBC LDR W23, [X31 + 0x3C]
	0x03CB8DC0 CMP W0, 0x41
	0x03CB8DC4 B.LE 0x3CB9140
	0x03CB8DC8 CMP W0, 0x64E
	0x03CB8DCC B.EQ 0x3CB9330
	0x03CB8DD0 CMP W0, 0x8D0
	0x03CB8DD4 B.EQ 0x3CB9378
	0x03CB8DD8 CMP W0, 0x8F1
	0x03CB8DDC B.NE 0x3CB9488
	0x03CB8DE0 LDR W8, [X31 + 0x2C]
	0x03CB8DE4 TBNZ X8, 0x0, 0x3CB9480
	0x03CB8DE8 LDR X8, [X20]
	0x03CB8DEC CBZ X8, 0x3CB9664
	0x03CB8DF0 LDR W9, [X31 + 0x44]
	0x03CB8DF4 LDR W10, [X8 + 0x18]
	0x03CB8DF8 CMP W9, W10
	0x03CB8DFC B.NE 0x3CB8E28
	0x03CB8E00 LDR X0, [X29]
	0x03CB8E04 LDR W8, [X0 + 0xE0]
	0x03CB8E08 CBNZ W8, 0x3CB8E10
	0x03CB8E0C BL 0x1C16DFC
	0x03CB8E10 LDR X1, [X24]
	0x03CB8E14 MOV X0, X20
	0x03CB8E18 BL 0x229C034
	0x03CB8E1C LDR X8, [X20]
	0x03CB8E20 CBZ X8, 0x3CB9664
	0x03CB8E24 LDR W9, [X31 + 0x44]
	0x03CB8E28 LDR W10, [X8 + 0x18]
	0x03CB8E2C CMP W9, W10
	0x03CB8E30 B.CS 0x3CB9668
	0x03CB8E34 SXTW X9, W9
	0x03CB8E38 MOV W10, W26
	0x03CB8E3C MOVZ X11, 0x1
	0x03CB8E40 STR W31, [X31 + 0x2C]
	0x03CB8E44 ORR X10, X10, 0x7FFFFFFFF
	0x03CB8E48 ADD X8, X8, X9, 0x4, LSL
	0x03CB8E4C ADD W9, W9, 0x1
	0x03CB8E50 MOVK X11, 0xD
	0x03CB8E54 B 0x3CB93EC
	0x03CB8E58 LDR X8, [X31 + 0x48]
	0x03CB8E5C CBZ X8, 0x3CB9664
	0x03CB8E60 LDRB W8, [X8 + 0xBC]
	0x03CB8E64 CBZ W8, 0x3CB9488
	0x03CB8E68 LDR X8, [X20]
	0x03CB8E6C CBZ X8, 0x3CB9664
	0x03CB8E70 LDRSW X9, [X31 + 0x44]
	0x03CB8E74 LDR W10, [X8 + 0x18]
	0x03CB8E78 CMP W9, W10
	0x03CB8E7C B.CS 0x3CB9668
	0x03CB8E80 MOV W10, W26
	0x03CB8E84 MOVZ X11, 0x1
	0x03CB8E88 ADD X8, X8, X9, 0x4, LSL
	0x03CB8E8C ADD W9, W9, 0x1
	0x03CB8E90 ORR X10, X10, 0x1FFFFFFFF
	0x03CB8E94 MOVK X11, 0xD
	0x03CB8E98 B 0x3CB94F4
	0x03CB8E9C LDR X8, [X31 + 0x48]
	0x03CB8EA0 CBZ X8, 0x3CB9664
	0x03CB8EA4 LDRB W8, [X8 + 0xBC]
	0x03CB8EA8 CBZ W8, 0x3CB9488
	0x03CB8EAC LDR X8, [X20]
	0x03CB8EB0 CBZ X8, 0x3CB9664
	0x03CB8EB4 LDRSW X9, [X31 + 0x44]
	0x03CB8EB8 LDR W10, [X8 + 0x18]
	0x03CB8EBC CMP W9, W10
	0x03CB8EC0 B.CS 0x3CB9668
	0x03CB8EC4 MOV W10, W26
	0x03CB8EC8 MOVZ X11, 0x1
	0x03CB8ECC ADD X8, X8, X9, 0x4, LSL
	0x03CB8ED0 ADD W9, W9, 0x1
	0x03CB8ED4 ORR X10, X10, 0x1FFFFFFFF
	0x03CB8ED8 MOVK X11, 0x9
	0x03CB8EDC B 0x3CB94F4
	0x03CB8EE0 ADD W28, W26, 0x5
	0x03CB8EE4 CMP W22, W28
	0x03CB8EE8 B.LE 0x3CB9488
	0x03CB8EEC LDR X0, [X29]
	0x03CB8EF0 LDP X24, X23, [X19 + 0x10]
	0x03CB8EF4 STR X25, [X31 + 0x18]
	0x03CB8EF8 MOV X25, X29
	0x03CB8EFC LDR W8, [X0 + 0xE0]
	0x03CB8F00 CBNZ W8, 0x3CB8F08
	0x03CB8F04 BL 0x1C16DFC
	0x03CB8F08 ADD W29, W26, 0x2
	0x03CB8F0C MOV X0, X24
	0x03CB8F10 MOV X1, X23
	0x03CB8F14 MOV W2, W29
	0x03CB8F18 MOV X3, X31
	0x03CB8F1C BL 0x3CC94A8
	0x03CB8F20 TBZ X0, 0x0, 0x3CB91F4
	0x03CB8F24 LDR X0, [X25]
	0x03CB8F28 LDRSW X8, [X31 + 0x44]
	0x03CB8F2C LDP X27, X24, [X19 + 0x18]
	0x03CB8F30 LDR X23, [X19 + 0x10]
	0x03CB8F34 STR X8, [X31 + 0x10]
	0x03CB8F38 LDR W8, [X0 + 0xE0]
	0x03CB8F3C CBNZ W8, 0x3CB8F44
	0x03CB8F40 BL 0x1C16DFC
	0x03CB8F44 MOV X0, X23
	0x03CB8F48 MOV X1, X27
	0x03CB8F4C MOV W2, W29
	0x03CB8F50 MOV X3, X31
	0x03CB8F54 BL 0x3CC77A0
	0x03CB8F58 CBZ X24, 0x3CB9664
	0x03CB8F5C LDR W8, [X24 + 0x18]
	0x03CB8F60 LDR X10, [X31 + 0x10]
	0x03CB8F64 LDR W23, [X31 + 0x3C]
	0x03CB8F68 CMP W10, W8
	0x03CB8F6C B.CS 0x3CB9668
	0x03CB8F70 MOV W8, W26
	0x03CB8F74 MOV X29, X25
	0x03CB8F78 MOVZ W9, 0x1
	0x03CB8F7C ADD X10, X24, X10, 0x4, LSL
	0x03CB8F80 ORR X8, X8, 0x7FFFFFFFF
	0x03CB8F84 B 0x3CB9074
	0x03CB8F88 LDR X8, [X31 + 0x48]
	0x03CB8F8C CBZ X8, 0x3CB9664
	0x03CB8F90 LDRB W8, [X8 + 0xBC]
	0x03CB8F94 CBZ W8, 0x3CB9488
	0x03CB8F98 LDR X8, [X20]
	0x03CB8F9C CBZ X8, 0x3CB9664
	0x03CB8FA0 LDRSW X9, [X31 + 0x44]
	0x03CB8FA4 LDR W10, [X8 + 0x18]
	0x03CB8FA8 CMP W9, W10
	0x03CB8FAC B.CS 0x3CB9668
	0x03CB8FB0 MOV W10, W26
	0x03CB8FB4 MOVZ X11, 0x1
	0x03CB8FB8 ADD X8, X8, X9, 0x4, LSL
	0x03CB8FBC ADD W9, W9, 0x1
	0x03CB8FC0 ORR X10, X10, 0x1FFFFFFFF
	0x03CB8FC4 MOVK X11, 0xB
	0x03CB8FC8 B 0x3CB94F4
	0x03CB8FCC ADD W28, W26, 0x9
	0x03CB8FD0 CMP W22, W28
	0x03CB8FD4 B.LE 0x3CB9488
	0x03CB8FD8 LDR X0, [X29]
	0x03CB8FDC LDP X24, X23, [X19 + 0x10]
	0x03CB8FE0 STR X25, [X31 + 0x18]
	0x03CB8FE4 MOV X25, X29
	0x03CB8FE8 LDR W8, [X0 + 0xE0]
	0x03CB8FEC CBNZ W8, 0x3CB8FF4
	0x03CB8FF0 BL 0x1C16DFC
	0x03CB8FF4 ADD W29, W26, 0x2
	0x03CB8FF8 MOV X0, X24
	0x03CB8FFC MOV X1, X23
	0x03CB9000 MOV W2, W29
	0x03CB9004 MOV X3, X31
	0x03CB9008 BL 0x3CC9544
	0x03CB900C TBZ X0, 0x0, 0x3CB91F4
	0x03CB9010 LDR X0, [X25]
	0x03CB9014 LDRSW X8, [X31 + 0x44]
	0x03CB9018 LDP X27, X24, [X19 + 0x18]
	0x03CB901C LDR X23, [X19 + 0x10]
	0x03CB9020 STR X8, [X31 + 0x10]
	0x03CB9024 LDR W8, [X0 + 0xE0]
	0x03CB9028 CBNZ W8, 0x3CB9030
	0x03CB902C BL 0x1C16DFC
	0x03CB9030 MOV X0, X23
	0x03CB9034 MOV X1, X27
	0x03CB9038 MOV W2, W29
	0x03CB903C MOV X3, X31
	0x03CB9040 BL 0x3CC785C
	0x03CB9044 CBZ X24, 0x3CB9664
	0x03CB9048 LDR W8, [X24 + 0x18]
	0x03CB904C LDR X10, [X31 + 0x10]
	0x03CB9050 LDR W23, [X31 + 0x3C]
	0x03CB9054 CMP W10, W8
	0x03CB9058 B.CS 0x3CB9668
	0x03CB905C MOV W8, W26
	0x03CB9060 MOVZ X11, 0xA
	0x03CB9064 MOV X29, X25
	0x03CB9068 MOVZ W9, 0x1
	0x03CB906C ADD X10, X24, X10, 0x4, LSL
	0x03CB9070 ORR X8, X8, X11, 0x0
	0x03CB9074 BFM X9, X0, 0x20, 0x1F
	0x03CB9078 STP X9, X8, [X10 + 0x20]
	0x03CB907C LDR W8, [X31 + 0x44]
	0x03CB9080 ADRP X24, 0x4A8000
	0x03CB9084 LDR X25, [X31 + 0x18]
	0x03CB9088 ADD W8, W8, 0x1
	0x03CB908C STR W8, [X31 + 0x44]
	0x03CB9090 LDR X24, [X24 + 0xC78]
	0x03CB9094 B 0x3CB94FC
	0x03CB9098 MOVZ W8, 0x6A02
	0x03CB909C MOVK W8, 0x10000
	0x03CB90A0 CMP W0, W8
	0x03CB90A4 B.EQ 0x3CB93FC
	0x03CB90A8 MOVZ W8, 0x8527
	0x03CB90AC MOVK W8, 0x10000
	0x03CB90B0 CMP W0, W8
	0x03CB90B4 B.EQ 0x3CB9478
	0x03CB90B8 MOVZ W8, 0xC72F
	0x03CB90BC MOVK W8, 0x2B0000
	0x03CB90C0 CMP W0, W8
	0x03CB90C4 B.NE 0x3CB9488
	0x03CB90C8 LDR W8, [X31 + 0x2C]
	0x03CB90CC TBNZ X8, 0x0, 0x3CB9480
	0x03CB90D0 LDR X8, [X20]
	0x03CB90D4 CBZ X8, 0x3CB9664
	0x03CB90D8 LDR W9, [X31 + 0x44]
	0x03CB90DC LDR W10, [X8 + 0x18]
	0x03CB90E0 CMP W9, W10
	0x03CB90E4 B.NE 0x3CB9110
	0x03CB90E8 LDR X0, [X29]
	0x03CB90EC LDR W8, [X0 + 0xE0]
	0x03CB90F0 CBNZ W8, 0x3CB90F8
	0x03CB90F4 BL 0x1C16DFC
	0x03CB90F8 LDR X1, [X24]
	0x03CB90FC MOV X0, X20
	0x03CB9100 BL 0x229C034
	0x03CB9104 LDR X8, [X20]
	0x03CB9108 CBZ X8, 0x3CB9664
	0x03CB910C LDR W9, [X31 + 0x44]
	0x03CB9110 LDR W10, [X8 + 0x18]
	0x03CB9114 CMP W9, W10
	0x03CB9118 B.CS 0x3CB9668
	0x03CB911C SXTW X9, W9
	0x03CB9120 MOV W10, W26
	0x03CB9124 MOVZ X11, 0x1
	0x03CB9128 ORR X10, X10, 0x7FFFFFFFF
	0x03CB912C ADD X8, X8, X9, 0x4, LSL
	0x03CB9130 ADD W9, W9, 0x1
	0x03CB9134 MOVK X11, 0xA0
	0x03CB9138 STR W31, [X31 + 0x2C]
	0x03CB913C B 0x3CB927C
	0x03CB9140 MOVZ W8, 0x3CB4
	0x03CB9144 MOVK W8, 0xE7AE0000
	0x03CB9148 CMP W0, W8
	0x03CB914C B.EQ 0x3CB9480
	0x03CB9150 MOVZ W8, 0x743B
	0x03CB9154 MOVK W8, 0xEE780000
	0x03CB9158 CMP W0, W8
	0x03CB915C B.EQ 0x3CB9590
	0x03CB9160 CMP W0, 0x41
	0x03CB9164 B.NE 0x3CB9488
	0x03CB9168 MOV X0, X21
	0x03CB916C MOV X1, X31
	0x03CB9170 BL 0x3CC5384
	0x03CB9174 ADD W28, W26, 0x4
	0x03CB9178 CMP W0, W28
	0x03CB917C B.LE 0x3CB9488
	0x03CB9180 ADD W1, W26, 0x3
	0x03CB9184 MOV X0, X21
	0x03CB9188 MOV X2, X31
	0x03CB918C BL 0x3CC5394
	0x03CB9190 CMP W0, 0x68
	0x03CB9194 B.NE 0x3CB9488
	0x03CB9198 MOV X0, X21
	0x03CB919C MOV W1, W28
	0x03CB91A0 MOV X2, X31
	0x03CB91A4 BL 0x3CC5394
	0x03CB91A8 CMP W0, 0x72
	0x03CB91AC B.NE 0x3CB9488
	0x03CB91B0 LDR X0, [X29]
	0x03CB91B4 LDR X23, [X31 + 0x48]
	0x03CB91B8 LDR W8, [X0 + 0xE0]
	0x03CB91BC CBNZ W8, 0x3CB91C4
	0x03CB91C0 BL 0x1C16DFC
	0x03CB91C4 MOVZ W1, 0x41
	0x03CB91C8 MOV X0, X23
	0x03CB91CC MOV X2, X31
	0x03CB91D0 BL 0x3CC6D28
	0x03CB91D4 LDR X4, [X31 + 0x20]
	0x03CB91D8 ADD X2, X31, 0x44
	0x03CB91DC ADD X5, X31, 0x48
	0x03CB91E0 MOV X1, X20
	0x03CB91E4 MOV X3, X25
	0x03CB91E8 MOV X6, X31
	0x03CB91EC BL 0x3CC6448
	0x03CB91F0 B 0x3CB9370
	0x03CB91F4 ADRP X24, 0x4A8000
	0x03CB91F8 MOV X29, X25
	0x03CB91FC LDR X25, [X31 + 0x18]
	0x03CB9200 LDR X24, [X24 + 0xC78]
	0x03CB9204 B 0x3CB9370
	0x03CB9208 LDR W8, [X31 + 0x2C]
	0x03CB920C TBNZ X8, 0x0, 0x3CB9480
	0x03CB9210 LDR X8, [X20]
	0x03CB9214 CBZ X8, 0x3CB9664
	0x03CB9218 LDR W9, [X31 + 0x44]
	0x03CB921C LDR W10, [X8 + 0x18]
	0x03CB9220 CMP W9, W10
	0x03CB9224 B.NE 0x3CB9250
	0x03CB9228 LDR X0, [X29]
	0x03CB922C LDR W8, [X0 + 0xE0]
	0x03CB9230 CBNZ W8, 0x3CB9238
	0x03CB9234 BL 0x1C16DFC
	0x03CB9238 LDR X1, [X24]
	0x03CB923C MOV X0, X20
	0x03CB9240 BL 0x229C034
	0x03CB9244 LDR X8, [X20]
	0x03CB9248 CBZ X8, 0x3CB9664
	0x03CB924C LDR W9, [X31 + 0x44]
	0x03CB9250 LDR W10, [X8 + 0x18]
	0x03CB9254 CMP W9, W10
	0x03CB9258 B.CS 0x3CB9668
	0x03CB925C SXTW X9, W9
	0x03CB9260 MOV W10, W26
	0x03CB9264 MOVZ X11, 0x1
	0x03CB9268 STR W31, [X31 + 0x2C]
	0x03CB926C ORR X10, X10, 0x7FFFFFFFF
	0x03CB9270 ADD X8, X8, X9, 0x4, LSL
	0x03CB9274 ADD W9, W9, 0x1
	0x03CB9278 MOVK X11, 0x200B
	0x03CB927C STP X11, X10, [X8 + 0x20]
	0x03CB9280 STR W9, [X31 + 0x44]
	0x03CB9284 ADD W28, W26, 0x5
	0x03CB9288 B 0x3CB94FC
	0x03CB928C LDR W8, [X31 + 0x2C]
	0x03CB9290 TBNZ X8, 0x0, 0x3CB9480
	0x03CB9294 LDR X0, [X29]
	0x03CB9298 LDRSW X23, [X31 + 0x44]
	0x03CB929C LDR W8, [X0 + 0xE0]
	0x03CB92A0 CBNZ W8, 0x3CB92A8
	0x03CB92A4 BL 0x1C16DFC
	0x03CB92A8 LDR X6, [X31 + 0x20]
	0x03CB92AC ADD X2, X31, 0x40
	0x03CB92B0 ADD X4, X31, 0x44
	0x03CB92B4 ADD X7, X31, 0x48
	0x03CB92B8 MOV X0, X21
	0x03CB92BC MOV W1, W26
	0x03CB92C0 MOV X3, X20
	0x03CB92C4 MOV X5, X25
	0x03CB92C8 STR X31, [X31]
	0x03CB92CC BL 0x3CC6AE4
	0x03CB92D0 TBZ X0, 0x0, 0x3CB958C
	0x03CB92D4 LDR W8, [X31 + 0x44]
	0x03CB92D8 CMP W23, W8
	0x03CB92DC B.GE 0x3CB9324
	0x03CB92E0 LDR X10, [X20]
	0x03CB92E4 CBZ X10, 0x3CB9664
	0x03CB92E8 LDR W8, [X10 + 0x18]
	0x03CB92EC MOVZ W9, 0x1
	0x03CB92F0 ADD X10, X10, X23, 0x4, LSL
	0x03CB92F4 SUB W9, W9, W26
	0x03CB92F8 ADD X10, X10, 0x2C
	0x03CB92FC CMP W23, W8
	0x03CB9300 B.CS 0x3CB9668
	0x03CB9304 STUR W26, [X10 - 0x4]
	0x03CB9308 LDR W11, [X31 + 0x40]
	0x03CB930C ADD X23, X23, 0x1
	0x03CB9310 ADD W11, W9, W11
	0x03CB9314 STR W11, [X10], #0x10
	0x03CB9318 LDRSW X11, [X31 + 0x44]
	0x03CB931C CMP X23, X11
	0x03CB9320 B.LT 0x3CB92FC
	0x03CB9324 LDP W23, W28, [X31 + 0x3C]
	0x03CB9328 STR W31, [X31 + 0x2C]
	0x03CB932C B 0x3CB94FC
	0x03CB9330 LDR X0, [X29]
	0x03CB9334 LDR X23, [X31 + 0x48]
	0x03CB9338 LDR W8, [X0 + 0xE0]
	0x03CB933C CBNZ W8, 0x3CB9344
	0x03CB9340 BL 0x1C16DFC
	0x03CB9344 MOVZ W1, 0x41

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1568
	014 Move X22, 0x730000
	015 Move X20, 0x4AA000
	016 Move W8, [X22+842]
	017 Move X20, [X20+3048]
	018 Move X19, X0
	019 Add X21, X31, 960
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {98}
	024 Move X0, 0x445000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move X0, 0x468000
	028 Move X0, [X0+2808]
	029 Call 0x1C17CF4
	030 Move X0, 0x446000
	031 Move X0, [X0+2192]
	032 Call 0x1C17CF4
	033 Move X0, 0x446000
	034 Move X0, [X0+2184]
	035 Call 0x1C17CF4
	036 Move X0, 0x4AA000
	037 Move X0, [X0+3056]
	038 Call 0x1C17CF4
	039 Move X0, 0x43D000
	040 Move X0, [X0+3672]
	041 Call 0x1C17CF4
	042 Move X0, 0x4AA000
	043 Move X0, [X0+3064]
	044 Call 0x1C17CF4
	045 Move X0, 0x4AA000
	046 Move X0, [X0+2872]
	047 Call 0x1C17CF4
	048 Move X0, 0x4AA000
	049 Move X0, [X0+3072]
	050 Call 0x1C17CF4
	051 Move X0, 0x43C000
	052 Move X0, [X0+1592]
	053 Call 0x1C17CF4
	054 Move X0, 0x4AA000
	055 Move X0, [X0+3080]
	056 Call 0x1C17CF4
	057 Move X0, 0x4AA000
	058 Move X0, [X0+3048]
	059 Call 0x1C17CF4
	060 Move X0, 0x4AA000
	061 Move X0, [X0+3088]
	062 Call 0x1C17CF4
	063 Move X0, 0x4AA000
	064 Move X0, [X0+3096]
	065 Call 0x1C17CF4
	066 Move X0, 0x4AA000
	067 Move X0, [X0+3104]
	068 Call 0x1C17CF4
	069 Move X0, 0x4AA000
	070 Move X0, [X0+3112]
	071 Call 0x1C17CF4
	072 Move X0, 0x4AA000
	073 Move X0, [X0+3120]
	074 Call 0x1C17CF4
	075 Move X0, 0x4AA000
	076 Move X0, [X0+3128]
	077 Call 0x1C17CF4
	078 Move X0, 0x4AA000
	079 Move X0, [X0+3136]
	080 Call 0x1C17CF4
	081 Move X0, 0x4AA000
	082 Move X0, [X0+3144]
	083 Call 0x1C17CF4
	084 Move X0, 0x4AA000
	085 Move X0, [X0+3152]
	086 Call 0x1C17CF4
	087 Move X0, 0x4AA000
	088 Move X0, [X0+3160]
	089 Call 0x1C17CF4
	090 Move X0, 0x4AA000
	091 Move X0, [X0+3168]
	092 Call 0x1C17CF4
	093 Move X0, 0x43E000
	094 Move X0, [X0+2480]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X22+842], W8
	098 Move X28, 0x43E000
	099 Move X23, 0x4AA000
	100 Move X24, 0x4AA000
	101 Move X29, 0x4AA000
	102 Move X27, 0x4AA000
	103 Move X22, 0x4AA000
	104 Move X26, 0x468000
	105 Move X25, 0x4AA000
	106 Move X28, [X28+2480]
	107 Move X23, [X23+3064]
	108 Move X24, [X24+3144]
	109 Move X29, [X29+3120]
	110 Move X27, [X27+3088]
	111 Move X22, [X22+3168]
	112 Move X26, [X26+2808]
	113 Move X25, [X25+3104]
	114 Add X0, X31, 1552
	115 Move W1, 4
	116 Move X2, X31
	117 Move [X31+1560], X31
	118 Move [X31+1552], X31
	119 Call TextBackingContainer..ctor, X0, X1
	120 Move V0, [X21+37]
	121 Move W1, 8
	122 Move [X19+1], V0
	123 Move X0, [X20]
	124 Call 0x1C17D6C
	125 Move [X19+32], X0
	126 Move [X19+44], W31
	127 Move X8, 0x445000
	128 Move X8, [X8+2264]
	129 Move W1, 128
	130 Move X0, [X8]
	131 Call 0x1C17D6C
	132 Move [X19+48], X0
	133 Move S0, 1
	134 Move S1, 1
	135 Move S2, 1
	136 Move S3, 1
	137 Move X0, X31
	138 Call 0x1E44664
	139 Move X8, 0x4AA000
	140 Move X8, [X8+2872]
	141 Move X20, X0
	142 Move X8, [X8]
	143 Move W9, [X8+224]
	144 Compare W9, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X8
	147 Call 0x1C17DFC
	148 Move X0, X31
	149 Call Offset.get_zero
	150 And X1, X20, 0
	151 Add X0, X31, 1528
	152 Move X2, X31
	153 Move [X31+1536], X31
	154 Move [X31+1528], X31
	155 Move [X31+1544], W31
	156 Call HighlightState..ctor, X0, X1, X2
	157 Add X9, X31, 1273
	158 Move W8, [X31+1544]
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 Move W1, 4
	161 Move [X19+72], W8
	162 Move [X19+56], V0
	163 Move X0, [X28]
	164 Call 0x1C17D6C
	165 Move [X19+80], X0
	166 Move X0, [X23]
	167 Move W1, 16
	168 Call 0x1C17D6C
	169 Move X2, [X24]
	170 Move X1, X0
	171 NotImplemented "Instruction MOVI not yet implemented."
	172 Add X0, X31, 1440
	173 Move [X31+1520], X31
	174 Move [X21+528], V0
	175 Move [X21+536], V0
	176 Move [X21+496], V0
	177 Move [X21+504], V0
	178 Move [X21+30], V0
	179 Call TextProcessingStack`1<MaterialReference>..ctor, X0, X1
	180 Add X0, X19, 128
	181 Add X1, X31, 1440
	182 Move W2, 88
	183 Call 0x3EB2AC0
	184 Move X2, [X29]
	185 NotImplemented "Instruction MOVI not yet implemented."
	186 Add X0, X31, 1408
	187 Move W1, 16
	188 Move [X21+448], V0
	189 Move [X21+456], V0
	190 Call TextProcessingStack`1<Single>..ctor, X0, X1
	191 Move V1, [X21+448]
	192 Move V0, [X21+464]
	193 Add X8, X19, 248
	194 Move W1, 8
	195 Move [X8+1], V0
	196 Move [X19+248], V1
	197 Move X0, [X27]
	198 Call 0x1C17D6C
	199 Move W8, 400
	200 Move [X19+280], X0
	201 Move [X19+288], X31
	202 Move [X19+308], W8
	203 Move X2, [X22]
	204 NotImplemented "Instruction MOVI not yet implemented."
	205 Add X0, X31, 1376
	206 Move W1, 8
	207 Move [X21+416], V0
	208 Move [X21+424], V0
	209 Call TextProcessingStack`1<Int32Enum>..ctor, X0, X1
	210 Move V1, [X21+416]
	211 Move V0, [X21+432]
	212 Add X8, X19, 312
	213 Add X0, X31, 1344
	214 Move W1, 16
	215 Move [X8], V1
	216 Move [X8+8], V0
	217 Move X8, 0x4AA000
	218 Move X8, [X8+3096]
	219 NotImplemented "Instruction MOVI not yet implemented."
	220 Move [X21+384], V0
	221 Move [X21+392], V0
	222 Move X2, [X8]
	223 Call TextProcessingStack`1<Int32Enum>..ctor, X0, X1
	224 Move V1, [X21+384]
	225 Move V0, [X21+400]
	226 Move X20, 0x43C000
	227 Move W1, 16
	228 Move [X19+352], V1
	229 Move [X19+360], V0
	230 Move X20, [X20+1592]
	231 Move X0, [X20]
	232 Call 0x1C17D6C
	233 Move X27, 0x4A9000
	234 Move X27, [X27+3128]
	235 Move X1, X0
	236 NotImplemented "Instruction MOVI not yet implemented."
	237 Add X0, X31, 1312
	238 Move X2, [X27]
	239 Move [X21+352], V0
	240 Move [X21+360], V0
	241 Call TextProcessingStack`1<Single>..ctor, X0, X1
	242 Move V1, [X21+352]
	243 Move V0, [X21+368]
	244 Add X8, X19, 392
	245 Move W1, 16
	246 Move [X8], V1
	247 Move [X8+8], V0
	248 Move X0, [X26]
	249 Call 0x1C17D6C
	250 Move X2, [X25]
	251 Move X1, X0
	252 NotImplemented "Instruction MOVI not yet implemented."
	253 Add X0, X31, 1280
	254 Move [X21+320], V0
	255 Move [X21+328], V0
	256 Call 0x26E1D6C, X0, X1
	257 Move V1, [X21+320]
	258 Move V0, [X21+336]
	259 Add X8, X19, 440
	260 Move W1, 16
	261 Move [X8], V1
	262 Move [X8+8], V0
	263 Move X0, [X26]
	264 Call 0x1C17D6C
	265 Move X2, [X25]
	266 Move X1, X0
	267 NotImplemented "Instruction MOVI not yet implemented."
	268 Add X0, X31, 1248
	269 Move [X21+288], V0
	270 Move [X21+296], V0
	271 Call 0x26E1D6C, X0, X1
	272 Move V1, [X21+288]
	273 Move V0, [X21+304]
	274 Add X8, X19, 472
	275 Move W1, 16
	276 Move [X8], V1
	277 Move [X8+8], V0
	278 Move X0, [X26]
	279 Call 0x1C17D6C
	280 Move X2, [X25]
	281 Move X1, X0
	282 NotImplemented "Instruction MOVI not yet implemented."
	283 Add X0, X31, 1216
	284 Move [X21+256], V0
	285 Move [X21+264], V0
	286 Call 0x26E1D6C, X0, X1
	287 Move V1, [X21+256]
	288 Move V0, [X21+272]
	289 Add X8, X19, 504
	290 Move W1, 16
	291 Move [X8], V1
	292 Move [X8+8], V0
	293 Move X0, [X26]
	294 Call 0x1C17D6C
	295 Move X2, [X25]
	296 Move X1, X0
	297 NotImplemented "Instruction MOVI not yet implemented."
	298 Add X0, X31, 1184
	299 Move [X21+224], V0
	300 Move [X21+232], V0
	301 Call 0x26E1D6C, X0, X1
	302 Move V1, [X21+224]
	303 Move V0, [X21+240]
	304 Add X8, X19, 536
	305 Move W1, 16
	306 Move [X8], V1
	307 Move [X8+8], V0
	308 Move X8, 0x4A9000
	309 Move X8, [X8+3056]
	310 Move X0, [X8]
	311 Call 0x1C17D6C
	312 Move X8, 0x4A9000
	313 Move X8, [X8+3136]
	314 Move X1, X0
	315 NotImplemented "Instruction MOVI not yet implemented."
	316 Add X0, X31, 1136
	317 Move X2, [X8]
	318 Move [X21+192], V0
	319 Move [X21+200], V0
	320 Move [X21+11], V0
	321 Call TextProcessingStack`1<HighlightState>..ctor, X0, X1
	322 Move V1, [X21+192]
	323 Move V0, [X21+208]
	324 Move V2, [X21+11]
	325 Add X8, X19, 568
	326 Move X24, 0x43C000
	327 Move [X8+16], V1
	328 Move [X8+24], V0
	329 Move [X8], V2
	330 Move X24, [X24+3672]
	331 Move W1, 16
	332 Move X0, [X24]
	333 Call 0x1C17D6C
	334 Move X22, 0x4A9000
	335 Move X22, [X22+3112]
	336 Move X1, X0
	337 NotImplemented "Instruction MOVI not yet implemented."
	338 Add X0, X31, 1104
	339 Move X2, [X22]
	340 Move [X21+144], V0
	341 Move [X21+152], V0
	342 Call TextProcessingStack`1<Int32>..ctor, X0, X1
	343 Move V1, [X21+144]
	344 Move V0, [X21+160]
	345 Add X8, X19, 616
	346 Move W1, 16
	347 Move [X8], V1
	348 Move [X8+8], V0
	349 Move X8, 0x4A9000
	350 Move X8, [X8+3080]
	351 Move X0, [X8]
	352 Call 0x1C17D6C
	353 Move X8, 0x4A9000
	354 Move X8, [X8+3152]
	355 Move X1, X0
	356 NotImplemented "Instruction MOVI not yet implemented."
	357 Add X0, X31, 1056
	358 Move X2, [X8]
	359 Move [X31+1088], X31
	360 Move [X21+96], V0
	361 Move [X21+104], V0
	362 Call TextProcessingStack`1<Object>..ctor, X0, X1
	363 Move X8, [X31+1088]
	364 Move V1, [X21+96]
	365 Move V0, [X21+112]
	366 Move W1, 16
	367 Move [X19+688], X8
	368 Move [X19+656], V1
	369 Move [X19+664], V0
	370 Move X0, [X24]
	371 Call 0x1C17D6C
	372 Move X2, [X22]
	373 Move X1, X0
	374 NotImplemented "Instruction MOVI not yet implemented."
	375 Add X0, X31, 1024
	376 Move [X21+64], V0
	377 Move [X21+72], V0
	378 Call TextProcessingStack`1<Int32>..ctor, X0, X1
	379 Move V1, [X21+64]
	380 Move V0, [X21+80]
	381 Move W1, 16
	382 Move [X19+704], V1
	383 Move [X19+712], V0
	384 Move X0, [X20]
	385 Call 0x1C17D6C
	386 Move X2, [X27]
	387 Move X1, X0
	388 NotImplemented "Instruction MOVI not yet implemented."
	389 Add X0, X31, 992
	390 Move [X21+32], V0
	391 Move [X21+40], V0
	392 Call TextProcessingStack`1<Single>..ctor, X0, X1
	393 Move V1, [X21+32]
	394 Move V0, [X21+48]
	395 Add X0, X19, 2736
	396 Move W2, 2760
	397 Move W1, W31
	398 Move [X19+768], V1
	399 Move [X19+776], V0
	400 Call 0x3EB2B10
	401 Move W8, 100
	402 Move [X19+5540], W8
	403 Move X0, [X23]
	404 Move W1, 8
	405 Call 0x1C17D6C
	406 Move [X19+5560], X0
	407 Move [X19+5568], W31
	408 Move X0, [X24]
	409 Move W1, 16
	410 Call 0x1C17D6C
	411 Move X2, [X22]
	412 Move X1, X0
	413 NotImplemented "Instruction MOVI not yet implemented."
	414 Add X0, X31, 960
	415 Move [X21], V0
	416 Move [X21+8], V0
	417 Call TextProcessingStack`1<Int32>..ctor, X0, X1
	418 Move V1, [X21]
	419 Move V0, [X21+16]
	420 Move W8, 0x15C8
	421 Add X8, X19, X8
	422 Add X0, X31, 8
	423 Move W2, 952
	424 Move W1, W31
	425 Move [X8], V1
	426 Move [X8+8], V0
	427 Call 0x3EB2B10
	428 Move X8, 0x4A9000
	429 Move X8, [X8+3160]
	430 Add X0, X31, 8
	431 Move W1, 8
	432 Move W2, 8
	433 Move X3, [X8]
	434 Call TextProcessingStack`1<WordWrapState>..ctor, X0, X1, X2
	435 Move W8, 0x15E8
	436 Add X0, X19, X8
	437 Add X1, X31, 8
	438 Move W2, 952
	439 Call 0x3EB2AC0
	440 Move X8, 0x4A9000
	441 Move X8, [X8+3072]
	442 Move W1, 8
	443 Move X0, [X8]
	444 Call 0x1C17D6C
	445 Move [X19+6608], X0
	446 Move X0, [X20]
	447 Move W1, 16
	448 Call 0x1C17D6C
	449 Move [X19+6616], X0
	450 Move X8, 0x445000
	451 Move X8, [X8+2184]
	452 Move X0, [X8]
	453 Call 0x1C17F10
	454 Move X8, 0x445000
	455 Move X8, [X8+2192]
	456 Move X20, X0
	457 Move X1, [X8]
	458 Call Dictionary`2<Int32, Int32>..ctor, X0
	459 Move X0, X19
	460 Move X1, X31
	461 Move [X19+6624], X20
	462 Call Object..ctor, X0
	463 Add X31, X31, 1568
	464 Move X20, [X31+80]
	465 Move X19, [X31+88]
	466 Move X22, [X31+64]
	467 Move X21, [X31+72]
	468 Move X24, [X31+48]
	469 Move X23, [X31+56]
	470 Move X26, [X31+32]
	471 Move X25, [X31+40]
	472 Move X28, [X31+16]
	473 Move X27, [X31+24]
	474 Move X29, [X31+96]
	475 Move X30, [X31+104]
	476 Return 

