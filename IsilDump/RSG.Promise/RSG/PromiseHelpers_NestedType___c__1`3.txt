Type: RSG.PromiseHelpers/<>c__1`3

Method: System.Void .cctor()

Disassembly:
	0x0237129C LDR X24, [X26]
	0x023712A0 MOV X0, X23
	0x023712A4 MOV X1, X24
	0x023712A8 BL 0x1C16E00
	0x023712AC LDR X8, [X0]
	0x023712B0 MOV X23, X0
	0x023712B4 LDRH W9, [X8 + 0x12E]
	0x023712B8 CBZ X9, 0x23712DC
	0x023712BC LDR X10, [X8 + 0xB0]
	0x023712C0 ADD X10, X10, 0x8
	0x023712C4 LDUR X11, [X10 - 0x8]
	0x023712C8 CMP X11, X24
	0x023712CC B.EQ 0x23712F0
	0x023712D0 SUBS X9, X9, 0x1
	0x023712D4 ADD X10, X10, 0x10
	0x023712D8 B.NE 0x23712C4
	0x023712DC MOVZ W2, 0x4
	0x023712E0 MOV X0, X23
	0x023712E4 MOV X1, X24
	0x023712E8 BL 0x1C5C788
	0x023712EC B 0x2371300
	0x023712F0 LDR W9, [X10]
	0x023712F4 ADD W9, W9, 0x4
	0x023712F8 ADD X8, X8, W9, 0x4, SXTW
	0x023712FC ADD X0, X8, 0x138
	0x02371300 LDP X8, X1, [X0]
	0x02371304 MOV X0, X23
	0x02371308 BLR X8
	0x0237130C LDR X8, [X21 + 0x20]
	0x02371310 MOV X21, X0
	0x02371314 LDR X8, [X8 + 0xC0]
	0x02371318 LDR X1, [X8 + 0x20]
	0x0237131C LDRB W8, [X1 + 0x135]
	0x02371320 TBNZ X8, 0x0, 0x2371330
	0x02371324 MOV X0, X1
	0x02371328 BL 0x1C5C684
	0x0237132C MOV X1, X0
	0x02371330 MOV X0, X21
	0x02371334 MOV X2, X22
	0x02371338 BL 0x1C16E10
	0x0237133C MOV X1, X0
	0x02371340 MOV X0, X19
	0x02371344 MOV X2, X20
	0x02371348 BL 0x3EB1AC0
	0x0237134C LDR X8, [X25 + 0x28]
	0x02371350 LDUR X9, [X29 - 0x8]
	0x02371354 CMP X8, X9
	0x02371358 B.NE 0x2371380
	0x0237135C ADD X31, X29, 0x0
	0x02371360 LDP X20, X19, [X31 + 0x50]
	0x02371364 LDP X22, X21, [X31 + 0x40]
	0x02371368 LDP X24, X23, [X31 + 0x30]
	0x0237136C LDP X26, X25, [X31 + 0x20]
	0x02371370 LDR X27, [X31 + 0x10]
	0x02371374 LDP X29, X30, [X31], #0x60
	0x02371378 RET
	0x0237137C BL 0x1C16F20
	0x02371380 BL 0x3EB1B20
	0x02371384 STR X30, [X31 - 0x20]!
	0x02371388 STP X20, X19, [X31 + 0x10]
	0x0237138C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Add X9, X8, 309
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, [X19+32]
	033 Add X9, X8, 309
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X8
	036 Move X10, [X0+192]
	037 Move X10, [X10+8]
	038 Move X21, [X10]
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move X8, [X8+192]
	047 Move X0, X20
	048 Move X1, [X8+8]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+184]
	066 Move [X8], X20
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+192]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {87}
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call 0x1C5D684
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 

Method: System.Void .ctor()

Disassembly:
	0x02371390 LDR X0, [X0 + 0x20]
	0x02371394 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: RSG.Tuple`3<T1, T2, T3> <All>b__1_0(RSG.Tuple`2<RSG.Tuple`2<T1, T2>, T3> vals)

Disassembly:
	0x02371398 TBNZ X8, 0x0, 0x23713A0
	0x0237139C BL 0x1C5C684
	0x023713A0 LDR X8, [X0 + 0xC0]
	0x023713A4 LDR X0, [X8]
	0x023713A8 LDRB W8, [X0 + 0x135]
	0x023713AC TBNZ X8, 0x0, 0x23713B4
	0x023713B0 BL 0x1C5C684
	0x023713B4 BL 0x1C16F10
	0x023713B8 LDR X8, [X19 + 0x20]
	0x023713BC MOV X20, X0
	0x023713C0 LDRB W9, [X8 + 0x135]
	0x023713C4 TBNZ X9, 0x0, 0x23713D0
	0x023713C8 MOV X0, X8
	0x023713CC BL 0x1C5C684
	0x023713D0 MOV X0, X20
	0x023713D4 MOV X1, X31
	0x023713D8 BL 0x33BDD8C
	0x023713DC LDR X0, [X19 + 0x20]
	0x023713E0 LDRB W8, [X0 + 0x135]
	0x023713E4 TBNZ X8, 0x0, 0x23713EC
	0x023713E8 BL 0x1C5C684
	0x023713EC LDR X8, [X0 + 0xC0]
	0x023713F0 LDR X0, [X8 + 0x10]
	0x023713F4 LDRB W8, [X0 + 0x135]
	0x023713F8 TBNZ X8, 0x0, 0x2371400
	0x023713FC BL 0x1C5C684
	0x02371400 LDR X8, [X0 + 0xB8]
	0x02371404 STR X20, [X8]
	0x02371408 LDR X0, [X19 + 0x20]
	0x0237140C LDRB W8, [X0 + 0x135]
	0x02371410 TBNZ X8, 0x0, 0x2371418
	0x02371414 BL 0x1C5C684
	0x02371418 LDR X8, [X0 + 0xC0]
	0x0237141C LDR X0, [X8 + 0x10]
	0x02371420 LDRB W8, [X0 + 0x135]
	0x02371424 TBNZ X8, 0x0, 0x2371434
	0x02371428 LDP X20, X19, [X31 + 0x10]
	0x0237142C LDR X30, [X31], #0x20
	0x02371430 B 0x1C5C684
	0x02371434 LDP X20, X19, [X31 + 0x10]
	0x02371438 LDR X30, [X31], #0x20
	0x0237143C RET
	0x02371440 MOV X1, X31
	0x02371444 B 0x33BDD8C
	0x02371448 LDR X8, [X1 + 0x20]
	0x0237144C LDR X8, [X8 + 0xC0]
	0x02371450 LDR X0, [X8 + 0x18]
	0x02371454 B 0x2278924
	0x02371458 STP X30, X21, [X31 - 0x20]!
	0x0237145C STP X20, X19, [X31 + 0x10]
	0x02371460 MOV X19, X0
	0x02371464 LDR X0, [X0 + 0x20]
	0x02371468 LDRB W8, [X0 + 0x135]
	0x0237146C TBNZ X8, 0x0, 0x2371474
	0x02371470 BL 0x1C5C684
	0x02371474 LDR X8, [X0 + 0xC0]
	0x02371478 LDR X0, [X8]
	0x0237147C LDRB W8, [X0 + 0x135]
	0x02371480 TBNZ X8, 0x0, 0x2371488
	0x02371484 BL 0x1C5C684
	0x02371488 BL 0x1C16F10
	0x0237148C LDR X8, [X19 + 0x20]
	0x02371490 MOV X20, X0
	0x02371494 ADD X9, X8, 0x135
	0x02371498 LDRH W9, [X9]
	0x0237149C TBNZ X9, 0x0, 0x23714B8
	0x023714A0 MOV X0, X8
	0x023714A4 BL 0x1C5C684
	0x023714A8 LDR X8, [X19 + 0x20]
	0x023714AC ADD X9, X8, 0x135
	0x023714B0 LDRH W9, [X9]
	0x023714B4 B 0x23714BC
	0x023714B8 MOV X0, X8
	0x023714BC LDR X10, [X0 + 0xC0]
	0x023714C0 LDR X10, [X10 + 0x8]
	0x023714C4 LDR X21, [X10]
	0x023714C8 TBNZ X9, 0x0, 0x23714D8
	0x023714CC MOV X0, X8
	0x023714D0 BL 0x1C5C684
	0x023714D4 MOV X8, X0
	0x023714D8 LDR X8, [X8 + 0xC0]
	0x023714DC MOV X0, X20
	0x023714E0 LDR X1, [X8 + 0x8]
	0x023714E4 BLR X21
	0x023714E8 LDR X0, [X19 + 0x20]
	0x023714EC LDRB W8, [X0 + 0x135]
	0x023714F0 TBNZ X8, 0x0, 0x23714F8
	0x023714F4 BL 0x1C5C684
	0x023714F8 LDR X8, [X0 + 0xC0]
	0x023714FC LDR X0, [X8 + 0x10]
	0x02371500 LDRB W8, [X0 + 0x135]
	0x02371504 TBNZ X8, 0x0, 0x237150C
	0x02371508 BL 0x1C5C684
	0x0237150C LDR X8, [X0 + 0xB8]
	0x02371510 STR X20, [X8]
	0x02371514 LDR X0, [X19 + 0x20]
	0x02371518 LDRB W8, [X0 + 0x135]
	0x0237151C TBNZ X8, 0x0, 0x2371524
	0x02371520 BL 0x1C5C684
	0x02371524 LDR X8, [X0 + 0xC0]
	0x02371528 LDR X0, [X8 + 0x10]
	0x0237152C LDRB W8, [X0 + 0x135]
	0x02371530 TBNZ X8, 0x0, 0x2371540
	0x02371534 LDP X20, X19, [X31 + 0x10]
	0x02371538 LDP X30, X21, [X31], #0x20
	0x0237153C B 0x1C5C684
	0x02371540 LDP X20, X19, [X31 + 0x10]
	0x02371544 LDP X30, X21, [X31], #0x20
	0x02371548 RET
	0x0237154C MOV X1, X31
	0x02371550 B 0x33BDD8C
	0x02371554 STR X30, [X31 - 0x20]!
	0x02371558 STP X20, X19, [X31 + 0x10]
	0x0237155C ADRP X20, 0x2068000
	0x02371560 LDRB W8, [X20 + 0x8D4]
	0x02371564 MOV X19, X1
	0x02371568 TBNZ X8, 0x0, 0x2371580
	0x0237156C ADRP X0, 0x1DAB000
	0x02371570 LDR X0, [X0 + 0xB60]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 48
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Add X10, X31, 0
	014 Move [X29-8], X8
	015 Move X8, [X2+32]
	016 Move X8, [X8+192]
	017 Move X9, [X8+56]
	018 Move W9, [X9+252]
	019 Add X9, X9, 15
	020 And X9, X9, 0x1FFFFFFFF
	021 Subtract X19, X10, X9
	022 Add X31, X19, 0
	023 Move X9, [X8+72]
	024 Add X10, X31, 0
	025 Move W9, [X9+252]
	026 Add X9, X9, 15
	027 And X9, X9, 0x1FFFFFFFF
	028 Subtract X20, X10, X9
	029 Add X31, X20, 0
	030 Move X9, [X8+88]
	031 Add X10, X31, 0
	032 Move W9, [X9+252]
	033 Add X9, X9, 15
	034 And X9, X9, 0x1FFFFFFFF
	035 Subtract X21, X10, X9
	036 Add X31, X21, 0
	037 Compare X1, 0
	038 JumpIfEqual {138}
	039 Move X23, X1
	040 Move X1, [X8+32]
	041 Move X22, X2
	042 Subtract X4, X29, 40
	043 Move X2, X23
	044 Move X0, [X1]
	045 Move X8, [X1+16]
	046 Move X3, X31
	047 NotImplemented "Instruction BLR not yet implemented."
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Compare X2, 0
	050 JumpIfEqual {138}
	051 Move X8, [X22+32]
	052 Subtract X3, X29, 40
	053 Move X4, X19
	054 Move X8, [X8+192]
	055 Move X1, [X8+48]
	056 Move X0, [X1]
	057 Move [X29-40], X19
	058 Move X8, [X1+16]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X22+32]
	061 Subtract X4, X29, 40
	062 Move X2, X23
	063 Move X3, X31
	064 Move X8, [X8+192]
	065 Move X1, [X8+32]
	066 Move X0, [X1]
	067 Move X8, [X1+16]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Compare X2, 0
	071 JumpIfEqual {138}
	072 Move X8, [X22+32]
	073 Subtract X3, X29, 40
	074 Move X4, X20
	075 Move X8, [X8+192]
	076 Move X1, [X8+64]
	077 Move X0, [X1]
	078 Move [X29-40], X20
	079 Move X8, [X1+16]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X8, [X22+32]
	082 Subtract X3, X29, 40
	083 Move X2, X23
	084 Move X4, X21
	085 Move X8, [X8+192]
	086 Move X1, [X8+80]
	087 Move X0, [X1]
	088 Move [X29-40], X21
	089 Move X8, [X1+16]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X22+32]
	092 Move X8, [X8+192]
	093 Move X9, [X8+56]
	094 Move X1, [X8+96]
	095 Move W9, [X9+40]
	096 Move TEMP, X9
	097 And TEMP, TEMP, -2147483648
	098 Compare TEMP, -2147483648
	099 JumpIfEqual {101}
	100 Move X19, [X19]
	101 Move X9, [X8+72]
	102 Move X0, [X1]
	103 Move W9, [X9+40]
	104 Move TEMP, X9
	105 And TEMP, TEMP, -2147483648
	106 Compare TEMP, -2147483648
	107 JumpIfEqual {109}
	108 Move X20, [X20]
	109 Move X8, [X8+88]
	110 Move W8, [X8+40]
	111 Move TEMP, X8
	112 And TEMP, TEMP, -2147483648
	113 Compare TEMP, -2147483648
	114 JumpIfEqual {116}
	115 Move X21, [X21]
	116 Move [X29-40], X19
	117 Move [X29-32], X20
	118 Move [X29-24], X21
	119 Move X8, [X1+16]
	120 Subtract X3, X29, 40
	121 Subtract X4, X29, 16
	122 Move X2, X31
	123 NotImplemented "Instruction BLR not yet implemented."
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move X8, [X24+40]
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X31, X29, 0
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X24, [X31+16]
	134 Move X23, [X31+24]
	135 Move X29, [X31+64]
	136 Move X30, [X31+72]
	137 Return X0
	138 Call 0x1C17F20
	139 Call 0x3EB2B20

