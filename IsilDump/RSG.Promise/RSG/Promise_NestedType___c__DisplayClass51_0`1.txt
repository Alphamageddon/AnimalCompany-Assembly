Type: RSG.Promise/<>c__DisplayClass51_0`1

Method: System.Void .ctor()

Disassembly:
	0x0237AB5C LDR X8, [X8 + 0x28]
	0x0237AB60 MOV X1, X2

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Then>b__0()

Disassembly:
	0x0237AB64 MOV X2, X8
	0x0237AB68 LDR X30, [X31], #0x10
	0x0237AB6C BR X3
	0x0237AB70 BL 0x1C16F20
	0x0237AB74 MOV X1, X31
	0x0237AB78 B 0x33BDD8C
	0x0237AB7C STR X30, [X31 - 0x10]!
	0x0237AB80 LDR X8, [X0 + 0x10]
	0x0237AB84 CBZ X8, 0x237ABA4
	0x0237AB88 LDR X3, [X8 + 0x18]
	0x0237AB8C LDR X0, [X8 + 0x40]
	0x0237AB90 LDR X8, [X8 + 0x28]
	0x0237AB94 MOV X1, X2
	0x0237AB98 MOV X2, X8
	0x0237AB9C LDR X30, [X31], #0x10
	0x0237ABA0 BR X3
	0x0237ABA4 BL 0x1C16F20
	0x0237ABA8 MOV X1, X31
	0x0237ABAC B 0x33BDD8C
	0x0237ABB0 STP X29, X30, [X31 - 0x30]!
	0x0237ABB4 STP X22, X21, [X31 + 0x10]
	0x0237ABB8 STP X20, X19, [X31 + 0x20]
	0x0237ABBC ADD X29, X31, 0x0
	0x0237ABC0 SUB X31, X31, 0x10
	0x0237ABC4 MRS X21, 0xC000
	0x0237ABC8 LDR X8, [X21 + 0x28]
	0x0237ABCC MOV X19, X2
	0x0237ABD0 ADD X10, X31, 0x0
	0x0237ABD4 MOV X2, X1
	0x0237ABD8 STUR X8, [X29 - 0x8]
	0x0237ABDC LDR X8, [X19 + 0x20]
	0x0237ABE0 LDR X8, [X8 + 0xC0]
	0x0237ABE4 LDR X9, [X8 + 0x20]
	0x0237ABE8 LDR W9, [X9 + 0xFC]
	0x0237ABEC ADD X9, X9, 0xF
	0x0237ABF0 AND X9, X9, 0x1FFFFFFFF
	0x0237ABF4 SUB X20, X10, X9
	0x0237ABF8 ADD X31, X20, 0x0
	0x0237ABFC LDR X1, [X8 + 0x10]
	0x0237AC00 LDR X22, [X0 + 0x10]
	0x0237AC04 SUB X3, X29, 0x10
	0x0237AC08 MOV X4, X20
	0x0237AC0C LDR X0, [X1]
	0x0237AC10 STUR X20, [X29 - 0x10]
	0x0237AC14 LDR X8, [X1 + 0x10]
	0x0237AC18 BLR X8
	0x0237AC1C LDR X8, [X19 + 0x20]
	0x0237AC20 MOV X1, X20
	0x0237AC24 LDR X8, [X8 + 0xC0]
	0x0237AC28 LDR X0, [X8 + 0x20]
	0x0237AC2C BL 0x1C16E04
	0x0237AC30 CBZ X22, 0x237AC70
	0x0237AC34 MOV X1, X0
	0x0237AC38 LDR X8, [X22 + 0x18]
	0x0237AC3C LDR X0, [X22 + 0x40]
	0x0237AC40 LDR X2, [X22 + 0x28]
	0x0237AC44 BLR X8
	0x0237AC48 LDR X8, [X21 + 0x28]
	0x0237AC4C LDUR X9, [X29 - 0x8]
	0x0237AC50 CMP X8, X9
	0x0237AC54 B.NE 0x237AC74
	0x0237AC58 AND W0, W0, 0x1
	0x0237AC5C ADD X31, X29, 0x0
	0x0237AC60 LDP X20, X19, [X31 + 0x20]
	0x0237AC64 LDP X22, X21, [X31 + 0x10]
	0x0237AC68 LDP X29, X30, [X31], #0x30
	0x0237AC6C RET
	0x0237AC70 BL 0x1C16F20
	0x0237AC74 BL 0x3EB1B20
	0x0237AC78 MOV X1, X31
	0x0237AC7C B 0x33BDD8C
	0x0237AC80 STR X30, [X31 - 0x10]!
	0x0237AC84 LDR X0, [X0 + 0x10]
	0x0237AC88 CBZ X0, 0x237ACAC
	0x0237AC8C LDR X8, [X2 + 0x20]
	0x0237AC90 LDR X8, [X8 + 0xC0]
	0x0237AC94 LDR X2, [X8 + 0x18]
	0x0237AC98 BL 0x2DAA59C
	0x0237AC9C ORN W8, W31, W0, 0x0
	0x0237ACA0 AND W0, W8, 0x1
	0x0237ACA4 LDR X30, [X31], #0x10
	0x0237ACA8 RET
	0x0237ACAC BL 0x1C16F20
	0x0237ACB0 MOV X1, X31
	0x0237ACB4 B 0x33BDD8C
	0x0237ACB8 STR X30, [X31 - 0x10]!
	0x0237ACBC LDR X0, [X0 + 0x10]
	0x0237ACC0 CBZ X0, 0x237ACE4
	0x0237ACC4 LDR X8, [X2 + 0x20]
	0x0237ACC8 LDR X8, [X8 + 0xC0]
	0x0237ACCC LDR X2, [X8 + 0x18]
	0x0237ACD0 BL 0x2DBE4B0
	0x0237ACD4 ORN W8, W31, W0, 0x0
	0x0237ACD8 AND W0, W8, 0x1
	0x0237ACDC LDR X30, [X31], #0x10
	0x0237ACE0 RET
	0x0237ACE4 BL 0x1C16F20
	0x0237ACE8 MOV X1, X31
	0x0237ACEC B 0x33BDD8C
	0x0237ACF0 STP X29, X30, [X31 - 0x30]!
	0x0237ACF4 STP X22, X21, [X31 + 0x10]
	0x0237ACF8 STP X20, X19, [X31 + 0x20]
	0x0237ACFC ADD X29, X31, 0x0
	0x0237AD00 SUB X31, X31, 0x20
	0x0237AD04 MRS X21, 0xC000
	0x0237AD08 LDR X8, [X21 + 0x28]
	0x0237AD0C ADD X9, X31, 0x0
	0x0237AD10 STUR X8, [X29 - 0x8]
	0x0237AD14 STUR X1, [X29 - 0x20]
	0x0237AD18 LDR X22, [X2 + 0x20]
	0x0237AD1C LDR X8, [X22 + 0xC0]
	0x0237AD20 LDR X8, [X8 + 0x10]
	0x0237AD24 LDR W2, [X8 + 0xFC]
	0x0237AD28 ADD X10, X2, 0xF
	0x0237AD2C AND X10, X10, 0x1FFFFFFFF
	0x0237AD30 SUB X20, X9, X10
	0x0237AD34 ADD X31, X20, 0x0
	0x0237AD38 LDR W8, [X8 + 0x28]
	0x0237AD3C LDR X19, [X0 + 0x10]
	0x0237AD40 MOV X0, X20
	0x0237AD44 CMP W8, 0x0
	0x0237AD48 SUB X8, X29, 0x20
	0x0237AD4C CSEL X1, X1, X8, LT
	0x0237AD50 BL 0x3EB1AC0
	0x0237AD54 CBZ X19, 0x237ADB8
	0x0237AD58 LDR X8, [X22 + 0xC0]
	0x0237AD5C LDP X9, X1, [X8 + 0x10]
	0x0237AD60 LDR W8, [X9 + 0x28]
	0x0237AD64 LDR X0, [X1]
	0x0237AD68 TBNZ X8, 0x1F, 0x237AD70
	0x0237AD6C LDR X20, [X20]
	0x0237AD70 STUR X20, [X29 - 0x18]
	0x0237AD74 LDR X8, [X1 + 0x10]
	0x0237AD78 SUB X3, X29, 0x18
	0x0237AD7C SUB X4, X29, 0xC
	0x0237AD80 MOV X2, X19
	0x0237AD84 BLR X8
	0x0237AD88 LDURB W8, [X29 - 0xC]
	0x0237AD8C LDR X9, [X21 + 0x28]
	0x0237AD90 LDUR X10, [X29 - 0x8]
	0x0237AD94 CMP W8, 0x0
	0x0237AD98 CSET W0, EQ
	0x0237AD9C CMP X9, X10
	0x0237ADA0 B.NE 0x237ADBC
	0x0237ADA4 ADD X31, X29, 0x0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x2060000
	009 Move W8, [X21+2315]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1D7C000
	017 Move X0, [X0+1456]
	018 Call 0x1C17CF4
	019 Move X0, 0x1D7D000
	020 Move X0, [X0+712]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2315], W8
	024 Move X2, [X20+16]
	025 Compare X2, 0
	026 JumpIfEqual {168}
	027 Move X8, [X19+32]
	028 Add X4, X31, 8
	029 Move X3, X31
	030 Move X8, [X8+192]
	031 Move X1, [X8+16]
	032 Move X0, [X1]
	033 Move X8, [X1+16]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X22, [X20+40]
	036 Move X21, [X31+8]
	037 Compare X22, 0
	038 JumpIfNotEqual {51}
	039 Move X8, 0x1D7C000
	040 Move X8, [X8+1456]
	041 Move X0, [X8]
	042 Call 0x1C17F10
	043 Move X8, [X19+32]
	044 Move X1, X20
	045 Move X3, X31
	046 Move X22, X0
	047 Move X8, [X8+192]
	048 Move X2, [X8+32]
	049 Call Action`1<Single>..ctor, X0, X1, X2
	050 Move [X20+40], X22
	051 Compare X21, 0
	052 JumpIfEqual {168}
	053 Move X8, [X19+32]
	054 Move X8, [X8+192]
	055 Move X1, [X8+24]
	056 Move W8, [X1+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X1
	062 Call 0x1C5D684
	063 Move X1, X0
	064 Move X8, [X21]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move W2, 24
	075 Move X0, X21
	076 Call 0x1C5D788
	077 Move W9, [X10]
	078 Add W9, W9, 24
	079 Add X8, X8, W9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X2, [X0+8]
	083 Move X0, X21
	084 Move X1, X22
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X22, [X20+48]
	087 Move X21, X0
	088 Compare X22, 0
	089 JumpIfNotEqual {109}
	090 Move X8, [X19+32]
	091 Move X8, [X8+192]
	092 Move X0, [X8+48]
	093 Move W8, [X0+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {99}
	098 Call 0x1C5D684
	099 Call 0x1C17F10
	100 Move X8, [X19+32]
	101 Move X1, X20
	102 Move X22, X0
	103 Move X8, [X8+192]
	104 Move X2, [X8+56]
	105 Move X3, [X8+64]
	106 Move X8, [X3]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move [X20+48], X22
	109 Move X23, [X20+56]
	110 Compare X23, 0
	111 JumpIfNotEqual {124}
	112 Move X8, 0x1D7D000
	113 Move X8, [X8+712]
	114 Move X0, [X8]
	115 Call 0x1C17F10
	116 Move X8, [X19+32]
	117 Move X1, X20
	118 Move X3, X31
	119 Move X23, X0
	120 Move X8, [X8+192]
	121 Move X2, [X8+72]
	122 Call Action`1<Object>..ctor, X0, X1, X2
	123 Move [X20+56], X23
	124 Compare X21, 0
	125 JumpIfEqual {168}
	126 Move X8, [X19+32]
	127 Move X8, [X8+192]
	128 Move X1, [X8+24]
	129 Move W8, [X1+309]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {137}
	134 Move X0, X1
	135 Call 0x1C5D684
	136 Move X1, X0
	137 Move X8, [X21]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 12
	148 Move X0, X21
	149 Call 0x1C5D788
	150 Move W9, [X10]
	151 Add W9, W9, 12
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X3, [X0+8]
	156 Move X0, X21
	157 Move X1, X22
	158 Move X2, X23
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X22, [X31+32]
	163 Move X21, [X31+40]
	164 Move X30, [X31+16]
	165 Move X23, [X31+24]
	166 Add X31, X31, 64
	167 Return 
	168 Call 0x1C17F20

Method: System.Void <Then>b__2(System.Single progress)

Disassembly:
	0x0237ADA8 LDP X20, X19, [X31 + 0x20]
	0x0237ADAC LDP X22, X21, [X31 + 0x10]
	0x0237ADB0 LDP X29, X30, [X31], #0x30
	0x0237ADB4 RET
	0x0237ADB8 BL 0x1C16F20
	0x0237ADBC BL 0x3EB1B20
	0x0237ADC0 MOV X1, X31
	0x0237ADC4 B 0x33BDD8C
	0x0237ADC8 STP X30, X23, [X31 - 0x30]!
	0x0237ADCC STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+96]
	008 Move X2, [X1]
	009 Move X30, [X31+16]
	010 CallNoReturn X2
	011 Call 0x1C17F20

Method: System.Void <Then>b__3(ConvertedT chainedValue)

Disassembly:
	0x0237ADD0 STP X20, X19, [X31 + 0x20]
	0x0237ADD4 ADRP X23, 0x205F000
	0x0237ADD8 LDRB W8, [X23 + 0x90F]
	0x0237ADDC MOV X20, X3
	0x0237ADE0 MOV W22, W2
	0x0237ADE4 MOV X21, X1
	0x0237ADE8 MOV X19, X0
	0x0237ADEC TBNZ X8, 0x0, 0x237AE1C
	0x0237ADF0 ADRP X0, 0x1D7B000
	0x0237ADF4 LDR X0, [X0 + 0x5B0]
	0x0237ADF8 BL 0x1C16CF4
	0x0237ADFC ADRP X0, 0x1D7C000
	0x0237AE00 LDR X0, [X0 + 0x2C8]
	0x0237AE04 BL 0x1C16CF4
	0x0237AE08 ADRP X0, 0x1DA2000
	0x0237AE0C LDR X0, [X0 + 0x2C0]
	0x0237AE10 BL 0x1C16CF4
	0x0237AE14 MOVZ W8, 0x1
	0x0237AE18 STRB W8, [X23 + 0x90F]
	0x0237AE1C LDR X8, [X20 + 0x20]
	0x0237AE20 LDR X8, [X8 + 0xC0]
	0x0237AE24 LDR X0, [X8]
	0x0237AE28 LDRB W8, [X0 + 0x135]
	0x0237AE2C TBNZ X8, 0x0, 0x237AE34
	0x0237AE30 BL 0x1C5C684
	0x0237AE34 BL 0x1C16F10
	0x0237AE38 MOV X1, X31
	0x0237AE3C MOV X23, X0
	0x0237AE40 BL 0x33BDD8C
	0x0237AE44 CBZ X23, 0x237B0D8
	0x0237AE48 ADRP X8, 0x1D7B000
	0x0237AE4C LDR X8, [X8 + 0x5B0]
	0x0237AE50 STR X19, [X23 + 0x18]
	0x0237AE54 STR W22, [X23 + 0x10]
	0x0237AE58 LDR X0, [X8]
	0x0237AE5C BL 0x1C16F10
	0x0237AE60 LDR X8, [X20 + 0x20]
	0x0237AE64 MOV X1, X23
	0x0237AE68 MOV X3, X31
	0x0237AE6C MOV X22, X0
	0x0237AE70 LDR X8, [X8 + 0xC0]
	0x0237AE74 LDR X2, [X8 + 0x20]
	0x0237AE78 BL 0x2A6DA40
	0x0237AE7C CBZ X21, 0x237B0D8
	0x0237AE80 LDR X8, [X20 + 0x20]
	0x0237AE84 LDR X8, [X8 + 0xC0]
	0x0237AE88 LDR X1, [X8 + 0x18]
	0x0237AE8C LDRB W8, [X1 + 0x135]
	0x0237AE90 TBNZ X8, 0x0, 0x237AEA0

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 32
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X21+40]
	011 Add X9, X31, 0
	012 Move [X29-8], X8
	013 Move [X29-24], X1
	014 Move X22, [X2+32]
	015 Move X8, [X22+192]
	016 Move X8, [X8+104]
	017 Move W2, [X8+252]
	018 Add X10, X2, 15
	019 And X10, X10, 0x1FFFFFFFF
	020 Subtract X19, X9, X10
	021 Add X31, X19, 0
	022 Move W8, [X8+40]
	023 Move X20, [X0+24]
	024 Move X0, X19
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Subtract X8, X29, 24
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Call 0x3EB2AC0
	029 Compare X20, 0
	030 JumpIfEqual {58}
	031 Move X8, [X22+192]
	032 Move X9, [X8+104]
	033 Move X1, [X8+112]
	034 Move W8, [X9+40]
	035 Move X0, [X1]
	036 Move TEMP, X8
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfEqual {41}
	040 Move X19, [X19]
	041 Move [X29-16], X19
	042 Move X8, [X1+16]
	043 Subtract X3, X29, 16
	044 Move X2, X20
	045 Move X4, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X21+40]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X31, X29, 0
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X29, [X31+48]
	056 Move X30, [X31+56]
	057 Return 
	058 Call 0x1C17F20
	059 Call 0x3EB2B20

Method: System.Void <Then>b__4(System.Exception ex)

Disassembly:
	0x0237AE94 MOV X0, X1
	0x0237AE98 BL 0x1C5C684
	0x0237AE9C MOV X1, X0
	0x0237AEA0 LDR X8, [X21]
	0x0237AEA4 LDRH W9, [X8 + 0x12E]
	0x0237AEA8 CBZ X9, 0x237AECC
	0x0237AEAC LDR X10, [X8 + 0xB0]
	0x0237AEB0 ADD X10, X10, 0x8
	0x0237AEB4 LDUR X11, [X10 - 0x8]
	0x0237AEB8 CMP X11, X1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+120]
	008 Move X3, [X2]
	009 Move X30, [X31+16]
	010 CallNoReturn X3
	011 Call 0x1C17F20

Method: System.Void <Then>b__1(System.Exception ex)

Disassembly:
	0x0237AEBC B.EQ 0x237AEDC
	0x0237AEC0 SUBS X9, X9, 0x1
	0x0237AEC4 ADD X10, X10, 0x10
	0x0237AEC8 B.NE 0x237AEB4
	0x0237AECC MOVZ W2, 0x18
	0x0237AED0 MOV X0, X21
	0x0237AED4 BL 0x1C5C788
	0x0237AED8 B 0x237AEEC
	0x0237AEDC LDR W9, [X10]
	0x0237AEE0 ADD W9, W9, 0x18
	0x0237AEE4 ADD X8, X8, W9, 0x4, SXTW
	0x0237AEE8 ADD X0, X8, 0x138
	0x0237AEEC LDP X8, X2, [X0]
	0x0237AEF0 MOV X0, X21
	0x0237AEF4 MOV X1, X22
	0x0237AEF8 BLR X8
	0x0237AEFC LDR X22, [X19 + 0x20]
	0x0237AF00 MOV X21, X0
	0x0237AF04 CBNZ X22, 0x237AF40
	0x0237AF08 LDR X8, [X20 + 0x20]
	0x0237AF0C LDR X8, [X8 + 0xC0]
	0x0237AF10 LDR X0, [X8 + 0x30]
	0x0237AF14 LDRB W8, [X0 + 0x135]
	0x0237AF18 TBNZ X8, 0x0, 0x237AF20
	0x0237AF1C BL 0x1C5C684
	0x0237AF20 BL 0x1C16F10
	0x0237AF24 LDR X8, [X20 + 0x20]
	0x0237AF28 MOV X1, X19
	0x0237AF2C MOV X22, X0
	0x0237AF30 LDR X8, [X8 + 0xC0]
	0x0237AF34 LDP X2, X3, [X8 + 0x38]
	0x0237AF38 BL 0x2A6B948
	0x0237AF3C STR X22, [X19 + 0x20]
	0x0237AF40 CBZ X21, 0x237B0D8
	0x0237AF44 LDR X8, [X20 + 0x20]
	0x0237AF48 LDR X8, [X8 + 0xC0]
	0x0237AF4C LDR X1, [X8 + 0x18]
	0x0237AF50 LDRB W8, [X1 + 0x135]
	0x0237AF54 TBNZ X8, 0x0, 0x237AF64
	0x0237AF58 MOV X0, X1
	0x0237AF5C BL 0x1C5C684
	0x0237AF60 MOV X1, X0
	0x0237AF64 LDR X8, [X21]
	0x0237AF68 LDRH W9, [X8 + 0x12E]
	0x0237AF6C CBZ X9, 0x237AF90
	0x0237AF70 LDR X10, [X8 + 0xB0]
	0x0237AF74 ADD X10, X10, 0x8
	0x0237AF78 LDUR X11, [X10 - 0x8]
	0x0237AF7C CMP X11, X1
	0x0237AF80 B.EQ 0x237AFA0
	0x0237AF84 SUBS X9, X9, 0x1
	0x0237AF88 ADD X10, X10, 0x10
	0x0237AF8C B.NE 0x237AF78
	0x0237AF90 MOVZ W2, 0x9
	0x0237AF94 MOV X0, X21
	0x0237AF98 BL 0x1C5C788
	0x0237AF9C B 0x237AFB0
	0x0237AFA0 LDR W9, [X10]
	0x0237AFA4 ADD W9, W9, 0x9
	0x0237AFA8 ADD X8, X8, W9, 0x4, SXTW
	0x0237AFAC ADD X0, X8, 0x138
	0x0237AFB0 LDP X8, X2, [X0]
	0x0237AFB4 MOV X0, X21
	0x0237AFB8 MOV X1, X22
	0x0237AFBC BLR X8
	0x0237AFC0 LDR X22, [X19 + 0x28]
	0x0237AFC4 MOV X21, X0
	0x0237AFC8 CBNZ X22, 0x237AFFC
	0x0237AFCC ADRP X8, 0x1D7C000
	0x0237AFD0 LDR X8, [X8 + 0x2C8]
	0x0237AFD4 LDR X0, [X8]
	0x0237AFD8 BL 0x1C16F10
	0x0237AFDC LDR X8, [X20 + 0x20]
	0x0237AFE0 MOV X1, X19
	0x0237AFE4 MOV X3, X31
	0x0237AFE8 MOV X22, X0
	0x0237AFEC LDR X8, [X8 + 0xC0]
	0x0237AFF0 LDR X2, [X8 + 0x50]
	0x0237AFF4 BL 0x2A6B948
	0x0237AFF8 STR X22, [X19 + 0x28]
	0x0237AFFC CBZ X21, 0x237B0D8
	0x0237B000 ADRP X20, 0x1DA1000
	0x0237B004 LDR X8, [X21]
	0x0237B008 B 0x3EB1534
	0x0237B00C LDRH W9, [X8 + 0x12E]
	0x0237B010 LDR X1, [X20]
	0x0237B014 CBZ X9, 0x237B038
	0x0237B018 LDR X10, [X8 + 0xB0]
	0x0237B01C ADD X10, X10, 0x8
	0x0237B020 LDUR X11, [X10 - 0x8]
	0x0237B024 CMP X11, X1
	0x0237B028 B.EQ 0x237B048
	0x0237B02C SUBS X9, X9, 0x1
	0x0237B030 ADD X10, X10, 0x10
	0x0237B034 B.NE 0x237B020
	0x0237B038 MOVZ W2, 0x5
	0x0237B03C MOV X0, X21
	0x0237B040 BL 0x1C5C788
	0x0237B044 B 0x237B058
	0x0237B048 LDR W9, [X10]
	0x0237B04C ADD W9, W9, 0x5
	0x0237B050 ADD X8, X8, W9, 0x4, SXTW
	0x0237B054 ADD X0, X8, 0x138
	0x0237B058 LDP X8, X2, [X0]
	0x0237B05C MOV X0, X21
	0x0237B060 MOV X1, X22
	0x0237B064 BLR X8
	0x0237B068 CBZ X0, 0x237B0D8
	0x0237B06C LDR X8, [X0]
	0x0237B070 LDR X1, [X20]
	0x0237B074 MOV X19, X0
	0x0237B078 LDRH W9, [X8 + 0x12E]
	0x0237B07C CBZ X9, 0x237B0A0
	0x0237B080 LDR X10, [X8 + 0xB0]
	0x0237B084 ADD X10, X10, 0x8
	0x0237B088 LDUR X11, [X10 - 0x8]
	0x0237B08C CMP X11, X1
	0x0237B090 B.EQ 0x237B0B0
	0x0237B094 SUBS X9, X9, 0x1
	0x0237B098 ADD X10, X10, 0x10
	0x0237B09C B.NE 0x237B088
	0x0237B0A0 MOVZ W2, 0x4
	0x0237B0A4 MOV X0, X19
	0x0237B0A8 BL 0x1C5C788
	0x0237B0AC B 0x237B0C0
	0x0237B0B0 LDR W9, [X10]
	0x0237B0B4 ADD W9, W9, 0x4
	0x0237B0B8 ADD X8, X8, W9, 0x4, SXTW
	0x0237B0BC ADD X0, X8, 0x138
	0x0237B0C0 LDP X2, X1, [X0]
	0x0237B0C4 MOV X0, X19
	0x0237B0C8 LDP X20, X19, [X31 + 0x20]
	0x0237B0CC LDP X22, X21, [X31 + 0x10]
	0x0237B0D0 LDP X30, X23, [X31], #0x30
	0x0237B0D4 BR X2
	0x0237B0D8 BL 0x1C16F20
	0x0237B0DC STR X30, [X31 - 0x10]!
	0x0237B0E0 LDR X0, [X0 + 0x10]
	0x0237B0E4 CBZ X0, 0x237B10C
	0x0237B0E8 LDR W8, [X0 + 0x50]
	0x0237B0EC CBZ W8, 0x237B0F8
	0x0237B0F0 LDR X30, [X31], #0x10
	0x0237B0F4 RET
	0x0237B0F8 LDR X8, [X2 + 0x20]
	0x0237B0FC LDR X8, [X8 + 0xC0]
	0x0237B100 LDR X2, [X8 + 0x70]
	0x0237B104 LDR X30, [X31], #0x10
	0x0237B108 B 0x24E0940
	0x0237B10C BL 0x1C16F20
	0x0237B110 STR X30, [X31 - 0x10]!
	0x0237B114 LDR X0, [X0 + 0x10]
	0x0237B118 CBZ X0, 0x237B140

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2060000
	009 Move W8, [X22+2316]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1D7D000
	018 Move X0, [X0+712]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2316], W8
	022 Move X2, [X20+32]
	023 Compare X2, 0
	024 JumpIfEqual {98}
	025 Move X8, [X19+32]
	026 Move X8, [X8+192]
	027 Move X1, [X8+136]
	028 Move X0, [X1]
	029 Move [X31], X21
	030 Move X8, [X1+16]
	031 Add X3, X31, 0
	032 Add X4, X31, 8
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X22, [X20+64]
	035 Move X21, [X31+8]
	036 Compare X22, 0
	037 JumpIfNotEqual {57}
	038 Move X8, [X19+32]
	039 Move X8, [X8+192]
	040 Move X0, [X8+48]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Call 0x1C17F10
	048 Move X8, [X19+32]
	049 Move X22, X0
	050 Move X8, [X8+192]
	051 Move X3, [X8+64]
	052 Move X2, [X8+144]
	053 Move X9, [X3]
	054 Move X1, X20
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move [X20+64], X22
	057 Move X23, [X20+72]
	058 Compare X23, 0
	059 JumpIfNotEqual {72}
	060 Move X8, 0x1D7D000
	061 Move X8, [X8+712]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X8, [X19+32]
	065 Move X23, X0
	066 Move X8, [X8+192]
	067 Move X2, [X8+152]
	068 Move X1, X20
	069 Move X3, X31
	070 Call Action`1<Object>..ctor, X0, X1, X2
	071 Move [X20+72], X23
	072 Compare X21, 0
	073 JumpIfEqual {132}
	074 Move X8, [X19+32]
	075 Move X8, [X8+192]
	076 Move X1, [X8+24]
	077 Move W8, [X1+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {85}
	082 Move X0, X1
	083 Call 0x1C5D684
	084 Move X1, X0
	085 Move X8, [X21]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 12
	096 Move X0, X21
	097 Call 0x1C5D788
	098 Move X0, [X20+24]
	099 Compare X0, 0
	100 JumpIfEqual {159}
	101 Move X8, [X19+32]
	102 Move X1, X21
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X8, [X8+192]
	108 Move X30, [X31+16]
	109 Move X23, [X31+24]
	110 Move X2, [X8+120]
	111 Move X3, [X2]
	112 Add X31, X31, 64
	113 CallNoReturn X3
	114 Move W9, [X10]
	115 Add W9, W9, 12
	116 Add X8, X8, W9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X3, [X0+8]
	120 Move X0, X21
	121 Move X1, X22
	122 Move X2, X23
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X30, [X31+16]
	129 Move X23, [X31+24]
	130 Add X31, X31, 64
	131 Return 
	132 Call 0x1C17F20
	133 Move X21, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X21
	136 Call 0x3EB2AD0
	137 Move X21, X0
	138 Move X0, 0x1D79000
	139 Move X0, [X0+2000]
	140 Call 0x1C17D08
	141 Move X8, [X21]
	142 Move X1, [X8]
	143 Call 0x1C18270
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {160}
	148 Move X21, [X21]
	149 Call 0x3EB2AE0
	150 Move X0, [X20+24]
	151 Compare X0, 0
	152 JumpIfEqual {159}
	153 Move X8, [X19+32]
	154 Move X1, X21
	155 Move X8, [X8+192]
	156 Move X2, [X8+120]
	157 Move X8, [X2]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Call 0x1C17F20
	160 Move W0, 8
	161 Call 0x3EB2AF0
	162 Move X8, [X21]
	163 Move [X0], X8
	164 Move X1, 0x1B3A000
	165 Add X1, X1, 3672
	166 Move X2, X31
	167 Call 0x3EB2B00
	168 Move X21, X0
	169 Call 0x3EB2AE0
	170 Move X0, X21
	171 Call 0x1D2D690
	172 Call 0x1991590

Method: System.Void <Then>b__5(ConvertedT chainedValue)

Disassembly:
	0x0237B11C LDR W8, [X0 + 0x50]
	0x0237B120 CBZ W8, 0x237B12C
	0x0237B124 LDR X30, [X31], #0x10
	0x0237B128 RET
	0x0237B12C LDR X8, [X2 + 0x20]
	0x0237B130 LDR X8, [X8 + 0xC0]
	0x0237B134 LDR X2, [X8 + 0x78]
	0x0237B138 LDR X30, [X31], #0x10
	0x0237B13C B 0x24E07B0
	0x0237B140 BL 0x1C16F20
	0x0237B144 MOV X1, X31
	0x0237B148 B 0x33BDD8C
	0x0237B14C STP X30, X23, [X31 - 0x30]!
	0x0237B150 STP X22, X21, [X31 + 0x10]
	0x0237B154 STP X20, X19, [X31 + 0x20]
	0x0237B158 ADRP X23, 0x205E000
	0x0237B15C LDRB W8, [X23 + 0x910]
	0x0237B160 MOV X20, X3
	0x0237B164 MOV W22, W2
	0x0237B168 MOV X21, X1
	0x0237B16C MOV X19, X0
	0x0237B170 TBNZ X8, 0x0, 0x237B1A0
	0x0237B174 ADRP X0, 0x1D7A000
	0x0237B178 LDR X0, [X0 + 0x5B0]
	0x0237B17C BL 0x1C16CF4
	0x0237B180 ADRP X0, 0x1D7B000
	0x0237B184 LDR X0, [X0 + 0x2C8]
	0x0237B188 BL 0x1C16CF4
	0x0237B18C ADRP X0, 0x1DA1000
	0x0237B190 LDR X0, [X0 + 0x2C0]
	0x0237B194 BL 0x1C16CF4
	0x0237B198 MOVZ W8, 0x1
	0x0237B19C STRB W8, [X23 + 0x910]
	0x0237B1A0 LDR X8, [X20 + 0x20]
	0x0237B1A4 LDR X8, [X8 + 0xC0]
	0x0237B1A8 LDR X0, [X8]
	0x0237B1AC LDRB W8, [X0 + 0x135]
	0x0237B1B0 TBNZ X8, 0x0, 0x237B1B8
	0x0237B1B4 BL 0x1C5C684
	0x0237B1B8 BL 0x1C16F10
	0x0237B1BC LDR X8, [X20 + 0x20]
	0x0237B1C0 MOV X23, X0
	0x0237B1C4 LDR X8, [X8 + 0xC0]
	0x0237B1C8 LDR X1, [X8 + 0x8]
	0x0237B1CC LDR X8, [X1]
	0x0237B1D0 BLR X8
	0x0237B1D4 CBZ X23, 0x237B46C
	0x0237B1D8 ADRP X8, 0x1D7A000
	0x0237B1DC LDR X8, [X8 + 0x5B0]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 32
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X21+40]
	011 Add X9, X31, 0
	012 Move [X29-8], X8
	013 Move [X29-24], X1
	014 Move X22, [X2+32]
	015 Move X8, [X22+192]
	016 Move X8, [X8+104]
	017 Move W2, [X8+252]
	018 Add X10, X2, 15
	019 And X10, X10, 0x1FFFFFFFF
	020 Subtract X19, X9, X10
	021 Add X31, X19, 0
	022 Move W8, [X8+40]
	023 Move X20, [X0+24]
	024 Move X0, X19
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Subtract X8, X29, 24
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Call 0x3EB2AC0
	029 Compare X20, 0
	030 JumpIfEqual {58}
	031 Move X8, [X22+192]
	032 Move X9, [X8+104]
	033 Move X1, [X8+112]
	034 Move W8, [X9+40]
	035 Move X0, [X1]
	036 Move TEMP, X8
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfEqual {41}
	040 Move X19, [X19]
	041 Move [X29-16], X19
	042 Move X8, [X1+16]
	043 Subtract X3, X29, 16
	044 Move X2, X20
	045 Move X4, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X21+40]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X31, X29, 0
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X29, [X31+48]
	056 Move X30, [X31+56]
	057 Return 
	058 Call 0x1C17F20
	059 Call 0x3EB2B20

Method: System.Void <Then>b__6(System.Exception callbackEx)

Disassembly:
	0x0237B1E0 STR X19, [X23 + 0x18]
	0x0237B1E4 STR W22, [X23 + 0x10]
	0x0237B1E8 LDR X0, [X8]
	0x0237B1EC BL 0x1C16F10
	0x0237B1F0 LDR X8, [X20 + 0x20]
	0x0237B1F4 MOV X1, X23
	0x0237B1F8 MOV X3, X31
	0x0237B1FC MOV X22, X0
	0x0237B200 LDR X8, [X8 + 0xC0]
	0x0237B204 LDR X2, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+120]
	008 Move X3, [X2]
	009 Move X30, [X31+16]
	010 CallNoReturn X3
	011 Call 0x1C17F20

