Type: RSG.Promise

Method: System.Void add_UnhandledException(System.EventHandler`1<RSG.ExceptionEventArgs> value)

Disassembly:
	0x0358ED90 MOV X0, X21
	0x0358ED94 MOV X1, X20
	0x0358ED98 MOV X3, X19
	0x0358ED9C MOV X4, X31
	0x0358EDA0 BL 0x32277C4
	0x0358EDA4 MOV X19, X0
	0x0358EDA8 ADRP X0, 0xB8E000
	0x0358EDAC LDR X0, [X0 + 0xFD0]
	0x0358EDB0 BL 0x1C16D08
	0x0358EDB4 BL 0x1C16F10
	0x0358EDB8 MOV X1, X19
	0x0358EDBC MOV X20, X0
	0x0358EDC0 BL 0x358EC68
	0x0358EDC4 ADRP X0, 0xBA8000
	0x0358EDC8 LDR X0, [X0 + 0xC40]
	0x0358EDCC BL 0x1C16D08
	0x0358EDD0 MOV X1, X0
	0x0358EDD4 MOV X0, X20
	0x0358EDD8 BL 0x1C16DEC
	0x0358EDDC BL 0x1C16F20
	0x0358EDE0 SUB X31, X31, 0x50
	0x0358EDE4 STP X30, X21, [X31 + 0x30]
	0x0358EDE8 STP X20, X19, [X31 + 0x40]
	0x0358EDEC LDR W20, [X0 + 0x40]
	0x0358EDF0 CBNZ W20, 0x358EE04
	0x0358EDF4 LDP X20, X19, [X31 + 0x40]
	0x0358EDF8 LDP X30, X21, [X31 + 0x30]
	0x0358EDFC ADD X31, X31, 0x50
	0x0358EE00 B 0x358EB68
	0x0358EE04 ADRP X19, 0xB8E000
	0x0358EE08 LDR X19, [X19 + 0xFB8]
	0x0358EE0C MOV X0, X19
	0x0358EE10 BL 0x1C16D08
	0x0358EE14 MOVN X21, 0x0
	0x0358EE18 STP X0, X21, [X31 + 0x18]
	0x0358EE1C ADD X0, X31, 0x18
	0x0358EE20 MOV X1, X31
	0x0358EE24 STR W20, [X31 + 0x28]
	0x0358EE28 BL 0x33B162C
	0x0358EE2C MOV X20, X0
	0x0358EE30 MOV X0, X19
	0x0358EE34 BL 0x1C16D08
	0x0358EE38 STP X0, X21, [X31]
	0x0358EE3C ADD X0, X31, 0x0
	0x0358EE40 MOV X1, X31
	0x0358EE44 STR W31, [X31 + 0x10]
	0x0358EE48 BL 0x33B162C
	0x0358EE4C MOV X19, X0
	0x0358EE50 ADRP X0, 0xB8E000
	0x0358EE54 LDR X0, [X0 + 0xFE8]
	0x0358EE58 BL 0x1C16D08
	0x0358EE5C MOV X21, X0
	0x0358EE60 ADRP X0, 0xB8E000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE52000
	007 Move X21, 0xB8E000
	008 Move W8, [X20+3931]
	009 Move X21, [X21+1736]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xBA9000
	016 Move X0, [X0+3040]
	017 Call 0x1C17CF4
	018 Move X0, 0xB8E000
	019 Move X0, [X0+1736]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3931], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X1, X19
	031 Move X2, X31
	032 Move X0, [X8+8]
	033 Call Delegate.Combine, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {56}
	036 Move X22, 0xBA9000
	037 Move X22, [X22+3040]
	038 Move X19, X0
	039 Move X20, [X22]
	040 Move X1, X20
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfEqual {53}
	044 Move X8, [X21]
	045 Move X8, [X8+184]
	046 Move [X8+8], X0
	047 Move X20, [X22]
	048 Move X0, X19
	049 Move X1, X20
	050 Call 0x1C17E00
	051 Compare X0, 0
	052 JumpIfNotEqual {59}
	053 Move X0, X19
	054 Move X1, X20
	055 Call 0x1C181E0
	056 Move X8, [X21]
	057 Move X8, [X8+184]
	058 Move [X8+8], X31
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return 

Method: System.Void remove_UnhandledException(System.EventHandler`1<RSG.ExceptionEventArgs> value)

Disassembly:
	0x0358EE64 LDR X0, [X0 + 0xFF0]
	0x0358EE68 BL 0x1C16D08
	0x0358EE6C MOV X2, X0
	0x0358EE70 MOV X0, X21
	0x0358EE74 MOV X1, X20
	0x0358EE78 MOV X3, X19
	0x0358EE7C MOV X4, X31
	0x0358EE80 BL 0x32277C4
	0x0358EE84 MOV X19, X0
	0x0358EE88 ADRP X0, 0xB8E000
	0x0358EE8C LDR X0, [X0 + 0xFD0]
	0x0358EE90 BL 0x1C16D08
	0x0358EE94 BL 0x1C16F10
	0x0358EE98 MOV X1, X19
	0x0358EE9C MOV X20, X0
	0x0358EEA0 BL 0x358EC68
	0x0358EEA4 ADRP X0, 0xBA8000
	0x0358EEA8 LDR X0, [X0 + 0xC48]
	0x0358EEAC BL 0x1C16D08
	0x0358EEB0 MOV X1, X0
	0x0358EEB4 MOV X0, X20
	0x0358EEB8 BL 0x1C16DEC
	0x0358EEBC STR X30, [X31 - 0x40]!
	0x0358EEC0 STP X24, X23, [X31 + 0x10]
	0x0358EEC4 STP X22, X21, [X31 + 0x20]
	0x0358EEC8 STP X20, X19, [X31 + 0x30]
	0x0358EECC ADRP X24, 0xE51000
	0x0358EED0 ADRP X23, 0xB68000
	0x0358EED4 ADRP X22, 0xBA8000
	0x0358EED8 LDRB W8, [X24 + 0xF69]
	0x0358EEDC LDR X23, [X23 + 0x2C8]
	0x0358EEE0 LDR X22, [X22 + 0xC50]
	0x0358EEE4 MOV X19, X2
	0x0358EEE8 MOV X20, X1
	0x0358EEEC MOV X21, X0
	0x0358EEF0 TBNZ X8, 0x0, 0x358EF20
	0x0358EEF4 ADRP X0, 0xB68000
	0x0358EEF8 LDR X0, [X0 + 0x2C8]
	0x0358EEFC BL 0x1C16CF4
	0x0358EF00 ADRP X0, 0xB8E000
	0x0358EF04 LDR X0, [X0 + 0x2C0]
	0x0358EF08 BL 0x1C16CF4
	0x0358EF0C ADRP X0, 0xBA8000
	0x0358EF10 LDR X0, [X0 + 0xC50]
	0x0358EF14 BL 0x1C16CF4
	0x0358EF18 MOVZ W8, 0x1
	0x0358EF1C STRB W8, [X24 + 0xF69]
	0x0358EF20 MOV X0, X21
	0x0358EF24 MOV X1, X20
	0x0358EF28 MOV X2, X19
	0x0358EF2C MOV X3, X31
	0x0358EF30 BL 0x358F550
	0x0358EF34 LDR X8, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE52000
	007 Move X21, 0xB8E000
	008 Move W8, [X20+3932]
	009 Move X21, [X21+1736]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xBA9000
	016 Move X0, [X0+3040]
	017 Call 0x1C17CF4
	018 Move X0, 0xB8E000
	019 Move X0, [X0+1736]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3932], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X1, X19
	031 Move X2, X31
	032 Move X0, [X8+8]
	033 Call Delegate.Remove, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {56}
	036 Move X22, 0xBA9000
	037 Move X22, [X22+3040]
	038 Move X19, X0
	039 Move X20, [X22]
	040 Move X1, X20
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfEqual {53}
	044 Move X8, [X21]
	045 Move X8, [X8+184]
	046 Move [X8+8], X0
	047 Move X20, [X22]
	048 Move X0, X19
	049 Move X1, X20
	050 Call 0x1C17E00
	051 Compare X0, 0
	052 JumpIfNotEqual {59}
	053 Move X0, X19
	054 Move X1, X20
	055 Call 0x1C181E0
	056 Move X8, [X21]
	057 Move X8, [X8+184]
	058 Move [X8+8], X31
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return 

Method: System.Collections.Generic.IEnumerable`1<RSG.IPromiseInfo> GetPendingPromises()

Disassembly:
	0x0358EF38 MOV X19, X0
	0x0358EF3C MOV X0, X8
	0x0358EF40 BL 0x1C16F10
	0x0358EF44 LDR X2, [X22]
	0x0358EF48 MOV X1, X21
	0x0358EF4C MOV X3, X31
	0x0358EF50 MOV X20, X0
	0x0358EF54 BL 0x2A6B948
	0x0358EF58 CBZ X19, 0x358EFD4
	0x0358EF5C ADRP X10, 0xB8E000
	0x0358EF60 LDR X8, [X19]
	0x0358EF64 LDR X10, [X10 + 0x2C0]
	0x0358EF68 LDRH W9, [X8 + 0x12E]
	0x0358EF6C LDR X1, [X10]
	0x0358EF70 CBZ X9, 0x358EF94
	0x0358EF74 LDR X10, [X8 + 0xB0]
	0x0358EF78 ADD X10, X10, 0x8
	0x0358EF7C LDUR X11, [X10 - 0x8]
	0x0358EF80 CMP X11, X1
	0x0358EF84 B.EQ 0x358EFA4
	0x0358EF88 SUBS X9, X9, 0x1
	0x0358EF8C ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE52000
	005 Move X19, 0xB8E000
	006 Move W8, [X20+3933]
	007 Move X19, [X19+1736]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB8E000
	013 Move X0, [X0+1736]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3933], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Int32 get_Id()

Disassembly:
	0x0358EF90 B.NE 0x358EF7C
	0x0358EF94 MOVZ W2, 0x5

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x0358EF98 MOV X0, X19
	0x0358EF9C BL 0x1C5C788

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x0358EFA0 B 0x358EFB4
	0x0358EFA4 LDR W9, [X10]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: RSG.PromiseState get_CurState()

Disassembly:
	0x0358EFA8 ADD W9, W9, 0x5
	0x0358EFAC ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_CurState(RSG.PromiseState value)

Disassembly:
	0x0358EFB0 ADD X0, X8, 0x138
	0x0358EFB4 LDP X3, X2, [X0]

ISIL:
	001 Move [X0+64], W1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x0358E56C LDR X30, [X31], #0x30
	0x0358E570 B 0x3131C1C
	0x0358E574 BL 0x1C16F20
	0x0358E578 STR X30, [X31 - 0x30]!
	0x0358E57C STP X22, X21, [X31 + 0x10]
	0x0358E580 STP X20, X19, [X31 + 0x20]
	0x0358E584 ADRP X21, 0xE51000
	0x0358E588 LDRB W8, [X21 + 0xF63]
	0x0358E58C MOV X19, X2
	0x0358E590 MOV X20, X1
	0x0358E594 MOV X22, X0
	0x0358E598 TBNZ X8, 0x0, 0x358E5C8
	0x0358E59C ADRP X0, 0xB8E000
	0x0358E5A0 LDR X0, [X0 + 0xF70]
	0x0358E5A4 BL 0x1C16CF4
	0x0358E5A8 ADRP X0, 0xB8E000
	0x0358E5AC LDR X0, [X0 + 0xF78]
	0x0358E5B0 BL 0x1C16CF4
	0x0358E5B4 ADRP X0, 0xB8E000
	0x0358E5B8 LDR X0, [X0 + 0xF80]
	0x0358E5BC BL 0x1C16CF4
	0x0358E5C0 MOVZ W8, 0x1
	0x0358E5C4 STRB W8, [X21 + 0xF63]
	0x0358E5C8 LDR X21, [X22 + 0x28]
	0x0358E5CC CBNZ X21, 0x358E5FC
	0x0358E5D0 ADRP X8, 0xB8E000
	0x0358E5D4 LDR X8, [X8 + 0xF80]
	0x0358E5D8 LDR X0, [X8]
	0x0358E5DC BL 0x1C16F10
	0x0358E5E0 ADRP X8, 0xB8E000
	0x0358E5E4 LDR X8, [X8 + 0xF78]
	0x0358E5E8 MOV X21, X0
	0x0358E5EC LDR X1, [X8]
	0x0358E5F0 BL 0x3026FDC
	0x0358E5F4 STR X21, [X22 + 0x28]
	0x0358E5F8 CBZ X21, 0x358E674
	0x0358E5FC ADRP X9, 0xB8E000
	0x0358E600 LDR X9, [X9 + 0xF70]
	0x0358E604 LDR W10, [X21 + 0x1C]
	0x0358E608 LDR X8, [X21 + 0x10]
	0x0358E60C LDR X9, [X9]
	0x0358E610 ADD W10, W10, 0x1
	0x0358E614 STR W10, [X21 + 0x1C]
	0x0358E618 CBZ X8, 0x358E674
	0x0358E61C LDRSW X10, [X21 + 0x18]
	0x0358E620 LDR W11, [X8 + 0x18]
	0x0358E624 CMP W10, W11
	0x0358E628 B.CS 0x358E64C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE52000
	006 Move X20, 0xB8E000
	007 Move W8, [X21+3934]
	008 Move X20, [X20+1736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xB8F000
	015 Move X0, [X0+3896]
	016 Call 0x1C17CF4
	017 Move X0, 0xB8E000
	018 Move X0, [X0+1736]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3934], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call Object..ctor, X0
	025 Move [X19+64], W31
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call Promise.NextId
	032 Move [X19+48], W0
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move W9, [X8]
	036 Compare W9, 0
	037 JumpIfEqual {57}
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {44}
	041 Call 0x1C17DFC
	042 Move X8, [X20]
	043 Move X8, [X8+184]
	044 Move X0, [X8+24]
	045 Compare X0, 0
	046 JumpIfEqual {62}
	047 Move X8, 0xB8F000
	048 Move X8, [X8+3896]
	049 Move X1, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X2, [X8]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call HashSet`1<Object>.Add, X0, X1
	056 Return 
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return 
	062 Call 0x1C17F20

Method: System.Void .ctor(System.Action`2<System.Action, System.Action`1<System.Exception>> resolver)

Disassembly:
	0x0358F018 BL 0x1C16CF4
	0x0358F01C ADRP X0, 0xB8D000
	0x0358F020 LDR X0, [X0 + 0x2C0]
	0x0358F024 BL 0x1C16CF4
	0x0358F028 ADRP X0, 0xBA7000
	0x0358F02C LDR X0, [X0 + 0xC58]
	0x0358F030 BL 0x1C16CF4
	0x0358F034 MOVZ W8, 0x1
	0x0358F038 STRB W8, [X23 + 0xF6A]
	0x0358F03C MOV X0, X21
	0x0358F040 MOV X1, X19
	0x0358F044 MOV X2, X31
	0x0358F048 MOV X3, X31
	0x0358F04C BL 0x358F550
	0x0358F050 LDR X8, [X22]
	0x0358F054 MOV X19, X0
	0x0358F058 MOV X0, X8
	0x0358F05C BL 0x1C16F10
	0x0358F060 LDR X2, [X20]
	0x0358F064 MOV X1, X21
	0x0358F068 MOV X3, X31
	0x0358F06C MOV X20, X0
	0x0358F070 BL 0x2A6B948
	0x0358F074 CBZ X19, 0x358F0EC
	0x0358F078 ADRP X10, 0xB8D000
	0x0358F07C LDR X8, [X19]
	0x0358F080 LDR X10, [X10 + 0x2C0]
	0x0358F084 LDRH W9, [X8 + 0x12E]
	0x0358F088 LDR X1, [X10]
	0x0358F08C CBZ X9, 0x358F0B0
	0x0358F090 LDR X10, [X8 + 0xB0]
	0x0358F094 ADD X10, X10, 0x8
	0x0358F098 LDUR X11, [X10 - 0x8]
	0x0358F09C CMP X11, X1
	0x0358F0A0 B.EQ 0x358F0C0
	0x0358F0A4 SUBS X9, X9, 0x1
	0x0358F0A8 ADD X10, X10, 0x10
	0x0358F0AC B.NE 0x358F098
	0x0358F0B0 MOVZ W2, 0x5
	0x0358F0B4 MOV X0, X19
	0x0358F0B8 BL 0x1C5C788
	0x0358F0BC B 0x358F0D0
	0x0358F0C0 LDR W9, [X10]
	0x0358F0C4 ADD W9, W9, 0x5
	0x0358F0C8 ADD X8, X8, W9, 0x4, SXTW
	0x0358F0CC ADD X0, X8, 0x138
	0x0358F0D0 LDP X3, X2, [X0]
	0x0358F0D4 MOV X0, X19
	0x0358F0D8 MOV X1, X20
	0x0358F0DC LDP X20, X19, [X31 + 0x20]
	0x0358F0E0 LDP X22, X21, [X31 + 0x10]
	0x0358F0E4 LDP X30, X23, [X31], #0x30
	0x0358F0E8 BR X3
	0x0358F0EC BL 0x1C16F20
	0x0358F0F0 MOV X2, X31
	0x0358F0F4 MOV X3, X31
	0x0358F0F8 B 0x358F550
	0x0358F0FC STR X30, [X31 - 0x30]!
	0x0358F100 STP X22, X21, [X31 + 0x10]
	0x0358F104 STP X20, X19, [X31 + 0x20]
	0x0358F108 ADRP X21, 0xE50000
	0x0358F10C ADRP X22, 0xB67000
	0x0358F110 ADRP X20, 0xBA7000
	0x0358F114 LDRB W8, [X21 + 0xF6B]
	0x0358F118 LDR X22, [X22 + 0x2C8]
	0x0358F11C LDR X20, [X20 + 0xC60]
	0x0358F120 MOV X19, X0
	0x0358F124 TBNZ X8, 0x0, 0x358F148
	0x0358F128 ADRP X0, 0xB67000
	0x0358F12C LDR X0, [X0 + 0x2C8]
	0x0358F130 BL 0x1C16CF4
	0x0358F134 ADRP X0, 0xBA7000
	0x0358F138 LDR X0, [X0 + 0xC60]
	0x0358F13C BL 0x1C16CF4
	0x0358F140 MOVZ W8, 0x1
	0x0358F144 STRB W8, [X21 + 0xF6B]
	0x0358F148 LDR X0, [X22]
	0x0358F14C BL 0x1C16F10
	0x0358F150 LDR X2, [X20]
	0x0358F154 MOV X1, X19
	0x0358F158 MOV X3, X31
	0x0358F15C MOV X20, X0
	0x0358F160 BL 0x2A6B948
	0x0358F164 MOV X0, X19
	0x0358F168 MOV X1, X20
	0x0358F16C LDP X20, X19, [X31 + 0x20]
	0x0358F170 LDP X22, X21, [X31 + 0x10]
	0x0358F174 LDR X30, [X31], #0x30
	0x0358F178 B 0x358F17C
	0x0358F17C STR X30, [X31 - 0x50]!
	0x0358F180 STP X26, X25, [X31 + 0x10]
	0x0358F184 STP X24, X23, [X31 + 0x20]
	0x0358F188 STP X22, X21, [X31 + 0x30]
	0x0358F18C STP X20, X19, [X31 + 0x40]
	0x0358F190 ADRP X20, 0xE50000
	0x0358F194 ADRP X22, 0xBA7000
	0x0358F198 LDRB W8, [X20 + 0xF6C]
	0x0358F19C LDR X22, [X22 + 0xC68]
	0x0358F1A0 MOV X21, X1
	0x0358F1A4 MOV X19, X0
	0x0358F1A8 TBNZ X8, 0x0, 0x358F214
	0x0358F1AC ADRP X0, 0xB66000
	0x0358F1B0 LDR X0, [X0 + 0x5B0]
	0x0358F1B4 BL 0x1C16CF4
	0x0358F1B8 ADRP X0, 0xB67000
	0x0358F1BC LDR X0, [X0 + 0x2C8]
	0x0358F1C0 BL 0x1C16CF4
	0x0358F1C4 ADRP X0, 0xB65000
	0x0358F1C8 LDR X0, [X0 + 0xE70]
	0x0358F1CC BL 0x1C16CF4
	0x0358F1D0 ADRP X0, 0xB8C000
	0x0358F1D4 LDR X0, [X0 + 0x6C8]
	0x0358F1D8 BL 0x1C16CF4
	0x0358F1DC ADRP X0, 0xBA7000
	0x0358F1E0 LDR X0, [X0 + 0xC70]
	0x0358F1E4 BL 0x1C16CF4
	0x0358F1E8 ADRP X0, 0xBA7000
	0x0358F1EC LDR X0, [X0 + 0xC78]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE51000
	007 Move X21, 0xB8D000
	008 Move W8, [X22+3935]
	009 Move X21, [X21+1736]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xB68000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move X0, 0xB66000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0xB8E000
	023 Move X0, [X0+3896]
	024 Call 0x1C17CF4
	025 Move X0, 0xB8D000
	026 Move X0, [X0+1736]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3935], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move [X19+64], W31
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Call Promise.NextId
	040 Move [X19+48], W0
	041 Move X0, [X21]
	042 Move X8, [X0+184]
	043 Move W9, [X8]
	044 Compare W9, 0
	045 JumpIfEqual {60}
	046 Move W9, [X0+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {52}
	049 Call 0x1C17DFC
	050 Move X8, [X21]
	051 Move X8, [X8+184]
	052 Move X0, [X8+24]
	053 Compare X0, 0
	054 JumpIfEqual {95}
	055 Move X8, 0xB8E000
	056 Move X8, [X8+3896]
	057 Move X1, X19
	058 Move X2, [X8]
	059 Call HashSet`1<Object>.Add, X0, X1
	060 Move X8, 0xB66000
	061 Move X8, [X8+3696]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X8, [X19]
	065 Move X21, X0
	066 Move X2, [X8+784]
	067 Move X1, X19
	068 Move X3, X31
	069 Call Action..ctor, X0, X1, X2
	070 Move X8, 0xB68000
	071 Move X8, [X8+712]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X8, [X19]
	075 Move X22, X0
	076 Move X2, [X8+816]
	077 Move X1, X19
	078 Move X3, X31
	079 Call Action`1<Object>..ctor, X0, X1, X2
	080 Compare X20, 0
	081 JumpIfEqual {94}
	082 Move X0, [X20+64]
	083 Move X8, [X20+24]
	084 Move X3, [X20+40]
	085 Move X1, X21
	086 Move X2, X22
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return 
	094 Call 0x1C17F20
	095 Call 0x1C17F20
	096 Move X20, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X20
	099 Call 0x3EB2AD0
	100 Move X20, X0
	101 Move X0, 0xB65000
	102 Move X0, [X0+2000]
	103 Call 0x1C17D08
	104 Move X8, [X20]
	105 Move X1, [X8]
	106 Call 0x1C18270
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {120}
	111 Move X20, [X20]
	112 Call 0x3EB2AE0
	113 Move X0, X19
	114 Move X1, X20
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Move W0, 8
	121 Call 0x3EB2AF0
	122 Move X8, [X20]
	123 Move [X0], X8
	124 Move X1, 0x926000
	125 Add X1, X1, 3672
	126 Move X2, X31
	127 Call 0x3EB2B00
	128 Move X20, X0
	129 Call 0x3EB2AE0
	130 Move X0, X20
	131 Call 0x1D2D690
	132 Call 0x1991590

Method: System.Int32 NextId()

Disassembly:
	0x0358EFB8 MOV X0, X19
	0x0358EFBC MOV X1, X20
	0x0358EFC0 LDP X20, X19, [X31 + 0x30]
	0x0358EFC4 LDP X22, X21, [X31 + 0x20]
	0x0358EFC8 LDP X24, X23, [X31 + 0x10]
	0x0358EFCC LDR X30, [X31], #0x40
	0x0358EFD0 BR X3
	0x0358EFD4 BL 0x1C16F20
	0x0358EFD8 MOV X3, X31
	0x0358EFDC B 0x358F550
	0x0358EFE0 STP X30, X23, [X31 - 0x30]!
	0x0358EFE4 STP X22, X21, [X31 + 0x10]
	0x0358EFE8 STP X20, X19, [X31 + 0x20]
	0x0358EFEC ADRP X23, 0xE51000
	0x0358EFF0 ADRP X22, 0xB68000
	0x0358EFF4 ADRP X20, 0xBA8000
	0x0358EFF8 LDRB W8, [X23 + 0xF6A]
	0x0358EFFC LDR X22, [X22 + 0x2C8]
	0x0358F000 LDR X20, [X20 + 0xC58]
	0x0358F004 MOV X19, X1
	0x0358F008 MOV X21, X0
	0x0358F00C TBNZ X8, 0x0, 0x358F03C
	0x0358F010 ADRP X0, 0xB67000
	0x0358F014 LDR X0, [X0 + 0x2C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE52000
	005 Move X19, 0xB8E000
	006 Move W8, [X20+3936]
	007 Move X19, [X19+1736]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB8E000
	013 Move X0, [X0+1736]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3936], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, [X8+16]
	027 Add W0, W9, 1
	028 Move [X8+16], W0
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void AddRejectHandler(System.Action`1<System.Exception> onRejected, RSG.IRejectable rejectable)

Disassembly:
	0x0358F378 LDR X3, [X21 + 0x10]
	0x0358F37C MOV X1, X19
	0x0358F380 MOV X2, X20
	0x0358F384 LDP X20, X19, [X31 + 0x10]
	0x0358F388 LDP X30, X21, [X31], #0x20
	0x0358F38C B 0x358E678
	0x0358F390 MOV X0, X21
	0x0358F394 MOV X1, X2
	0x0358F398 MOV X2, X20
	0x0358F39C BL 0x358E478
	0x0358F3A0 MOV X1, X19
	0x0358F3A4 MOV X2, X20
	0x0358F3A8 LDP X20, X19, [X31 + 0x10]
	0x0358F3AC MOV X0, X21
	0x0358F3B0 LDP X30, X21, [X31], #0x20
	0x0358F3B4 B 0x358E378
	0x0358F3B8 LDR W9, [X0 + 0x40]
	0x0358F3BC CBZ W9, 0x358F3C4
	0x0358F3C0 RET
	0x0358F3C4 MOV X8, X1
	0x0358F3C8 MOV X1, X2
	0x0358F3CC MOV X2, X8
	0x0358F3D0 B 0x358E578
	0x0358F3D4 MOV X2, X31
	0x0358F3D8 MOV X3, X31
	0x0358F3DC B 0x358F3E0
	0x0358F3E0 STR X30, [X31 - 0x40]!
	0x0358F3E4 STP X24, X23, [X31 + 0x10]
	0x0358F3E8 STP X22, X21, [X31 + 0x20]
	0x0358F3EC STP X20, X19, [X31 + 0x30]
	0x0358F3F0 ADRP X21, 0xE50000
	0x0358F3F4 ADRP X24, 0xBA7000
	0x0358F3F8 LDRB W8, [X21 + 0xF6D]
	0x0358F3FC LDR X24, [X24 + 0xC88]
	0x0358F400 MOV X19, X3
	0x0358F404 MOV X22, X2
	0x0358F408 MOV X23, X1
	0x0358F40C MOV X20, X0
	0x0358F410 TBNZ X8, 0x0, 0x358F464
	0x0358F414 ADRP X0, 0xB67000
	0x0358F418 LDR X0, [X0 + 0x2C8]
	0x0358F41C BL 0x1C16CF4
	0x0358F420 ADRP X0, 0xB65000
	0x0358F424 LDR X0, [X0 + 0xE70]
	0x0358F428 BL 0x1C16CF4
	0x0358F42C ADRP X0, 0xB8C000
	0x0358F430 LDR X0, [X0 + 0x6C8]
	0x0358F434 BL 0x1C16CF4
	0x0358F438 ADRP X0, 0xBA7000
	0x0358F43C LDR X0, [X0 + 0xC90]
	0x0358F440 BL 0x1C16CF4
	0x0358F444 ADRP X0, 0xBA7000
	0x0358F448 LDR X0, [X0 + 0xC98]
	0x0358F44C BL 0x1C16CF4
	0x0358F450 ADRP X0, 0xBA7000
	0x0358F454 LDR X0, [X0 + 0xC88]
	0x0358F458 BL 0x1C16CF4
	0x0358F45C MOVZ W8, 0x1
	0x0358F460 STRB W8, [X21 + 0xF6D]
	0x0358F464 LDR X0, [X24]
	0x0358F468 BL 0x1C16F10
	0x0358F46C MOV X1, X31
	0x0358F470 MOV X21, X0
	0x0358F474 BL 0x33BDD8C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE51000
	007 Move W8, [X21+3937]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xB8E000
	016 Move X0, [X0+3904]
	017 Call 0x1C17CF4
	018 Move X0, 0xB8E000
	019 Move X0, [X0+3912]
	020 Call 0x1C17CF4
	021 Move X0, 0xB8E000
	022 Move X0, [X0+3920]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3937], W8
	026 Move X21, [X22+24]
	027 Compare X21, 0
	028 JumpIfNotEqual {41}
	029 Move X8, 0xB8E000
	030 Move X8, [X8+3920]
	031 Move X0, [X8]
	032 Call 0x1C17F10
	033 Move X8, 0xB8E000
	034 Move X8, [X8+3912]
	035 Move X21, X0
	036 Move X1, [X8]
	037 Call List`1<RejectHandler>..ctor, X0
	038 Move [X22+24], X21
	039 Compare X21, 0
	040 JumpIfEqual {77}
	041 Move X9, 0xB8E000
	042 Move X9, [X9+3904]
	043 Move W10, [X21+28]
	044 Move X8, [X21+16]
	045 Move X9, [X9]
	046 Add W10, W10, 1
	047 Move [X21+28], W10
	048 Compare X8, 0
	049 JumpIfEqual {77}
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Move W11, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W9, W10, 1
	054 Add X8, X8, X10
	055 Move [X21+24], W9
	056 Move [X8+32], X20
	057 Move [X8+40], X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return 
	064 Move X8, [X9+32]
	065 Move X0, X21
	066 Move X1, X20
	067 Move X2, X19
	068 Move X8, [X8+192]
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X3, [X8+112]
	074 Move X30, [X31+48]
	075 Call List`1<RejectHandler>.AddWithResize, X0, X1
	076 Return 
	077 Call 0x1C17F20

Method: System.Void AddResolveHandler(System.Action onResolved, RSG.IRejectable rejectable)

Disassembly:
	0x0358F478 CBZ X21, 0x358F54C
	0x0358F47C ADRP X8, 0xB8C000
	0x0358F480 LDR X8, [X8 + 0x6C8]
	0x0358F484 STR X23, [X21 + 0x10]
	0x0358F488 STR X22, [X21 + 0x20]
	0x0358F48C LDR X0, [X8]
	0x0358F490 BL 0x1C16F10
	0x0358F494 MOV X22, X0
	0x0358F498 BL 0x358D56C
	0x0358F49C STR X22, [X21 + 0x18]
	0x0358F4A0 CBZ X22, 0x358F54C
	0x0358F4A4 LDR X8, [X20 + 0x38]
	0x0358F4A8 ADRP X9, 0xB65000
	0x0358F4AC LDR X9, [X9 + 0xE70]
	0x0358F4B0 ADRP X23, 0xB67000
	0x0358F4B4 STR X8, [X22 + 0x38]
	0x0358F4B8 ADRP X22, 0xBA7000
	0x0358F4BC LDR X0, [X9]
	0x0358F4C0 ADRP X24, 0xBA7000
	0x0358F4C4 LDR X22, [X22 + 0xC90]
	0x0358F4C8 LDR X23, [X23 + 0x2C8]
	0x0358F4CC LDR X24, [X24 + 0xC98]
	0x0358F4D0 BL 0x1C16F10
	0x0358F4D4 LDR X2, [X22]
	0x0358F4D8 MOV X1, X21
	0x0358F4DC MOV X3, X31
	0x0358F4E0 MOV X22, X0
	0x0358F4E4 BL 0x3314368
	0x0358F4E8 LDR X0, [X23]
	0x0358F4EC BL 0x1C16F10
	0x0358F4F0 LDR X2, [X24]
	0x0358F4F4 MOV X1, X21
	0x0358F4F8 MOV X3, X31
	0x0358F4FC MOV X23, X0
	0x0358F500 BL 0x2A6B948
	0x0358F504 LDR X1, [X21 + 0x18]
	0x0358F508 MOV X0, X20
	0x0358F50C MOV X2, X22
	0x0358F510 MOV X3, X23
	0x0358F514 BL 0x358F33C
	0x0358F518 CBZ X19, 0x358F534
	0x0358F51C LDR W8, [X20 + 0x40]
	0x0358F520 CBNZ W8, 0x358F534
	0x0358F524 MOV X0, X20
	0x0358F528 MOV X1, X19
	0x0358F52C MOV X2, X20
	0x0358F530 BL 0x358E578
	0x0358F534 LDR X0, [X21 + 0x18]
	0x0358F538 LDP X20, X19, [X31 + 0x30]
	0x0358F53C LDP X22, X21, [X31 + 0x20]
	0x0358F540 LDP X24, X23, [X31 + 0x10]
	0x0358F544 LDR X30, [X31], #0x40
	0x0358F548 RET
	0x0358F54C BL 0x1C16F20
	0x0358F550 STR X30, [X31 - 0x40]!
	0x0358F554 STP X24, X23, [X31 + 0x10]
	0x0358F558 STP X22, X21, [X31 + 0x20]
	0x0358F55C STP X20, X19, [X31 + 0x30]
	0x0358F560 ADRP X21, 0xE50000
	0x0358F564 ADRP X24, 0xBA7000
	0x0358F568 LDRB W8, [X21 + 0xF6E]
	0x0358F56C LDR X24, [X24 + 0xCA0]
	0x0358F570 MOV X19, X3
	0x0358F574 MOV X22, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE51000
	007 Move W8, [X21+3938]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xBA8000
	016 Move X0, [X0+3056]
	017 Call 0x1C17CF4
	018 Move X0, 0xBA8000
	019 Move X0, [X0+3064]
	020 Call 0x1C17CF4
	021 Move X0, 0xBA8000
	022 Move X0, [X0+3072]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3938], W8
	026 Move X21, [X22+32]
	027 Compare X21, 0
	028 JumpIfNotEqual {41}
	029 Move X8, 0xBA8000
	030 Move X8, [X8+3072]
	031 Move X0, [X8]
	032 Call 0x1C17F10
	033 Move X8, 0xBA8000
	034 Move X8, [X8+3064]
	035 Move X21, X0
	036 Move X1, [X8]
	037 Call List`1<ResolveHandler>..ctor, X0
	038 Move [X22+32], X21
	039 Compare X21, 0
	040 JumpIfEqual {77}
	041 Move X9, 0xBA8000
	042 Move X9, [X9+3056]
	043 Move W10, [X21+28]
	044 Move X8, [X21+16]
	045 Move X9, [X9]
	046 Add W10, W10, 1
	047 Move [X21+28], W10
	048 Compare X8, 0
	049 JumpIfEqual {77}
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Move W11, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W9, W10, 1
	054 Add X8, X8, X10
	055 Move [X21+24], W9
	056 Move [X8+32], X20
	057 Move [X8+40], X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return 
	064 Move X8, [X9+32]
	065 Move X0, X21
	066 Move X1, X20
	067 Move X2, X19
	068 Move X8, [X8+192]
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X3, [X8+112]
	074 Move X30, [X31+48]
	075 Call List`1<ResolveHandler>.AddWithResize, X0, X1
	076 Return 
	077 Call 0x1C17F20

Method: System.Void AddProgressHandler(System.Action`1<System.Single> onProgress, RSG.IRejectable rejectable)

Disassembly:
	0x0358F578 MOV X23, X1
	0x0358F57C MOV X20, X0
	0x0358F580 TBNZ X8, 0x0, 0x358F5D4
	0x0358F584 ADRP X0, 0xB67000
	0x0358F588 LDR X0, [X0 + 0x2C8]
	0x0358F58C BL 0x1C16CF4
	0x0358F590 ADRP X0, 0xB65000
	0x0358F594 LDR X0, [X0 + 0xE70]
	0x0358F598 BL 0x1C16CF4
	0x0358F59C ADRP X0, 0xB8C000
	0x0358F5A0 LDR X0, [X0 + 0x6C8]
	0x0358F5A4 BL 0x1C16CF4
	0x0358F5A8 ADRP X0, 0xBA7000
	0x0358F5AC LDR X0, [X0 + 0xCA8]
	0x0358F5B0 BL 0x1C16CF4
	0x0358F5B4 ADRP X0, 0xBA7000
	0x0358F5B8 LDR X0, [X0 + 0xCB0]
	0x0358F5BC BL 0x1C16CF4
	0x0358F5C0 ADRP X0, 0xBA7000
	0x0358F5C4 LDR X0, [X0 + 0xCA0]
	0x0358F5C8 BL 0x1C16CF4
	0x0358F5CC MOVZ W8, 0x1
	0x0358F5D0 STRB W8, [X21 + 0xF6E]
	0x0358F5D4 LDR X0, [X24]
	0x0358F5D8 BL 0x1C16F10
	0x0358F5DC MOV X1, X31
	0x0358F5E0 MOV X21, X0
	0x0358F5E4 BL 0x33BDD8C
	0x0358F5E8 CBZ X21, 0x358F6BC
	0x0358F5EC ADRP X8, 0xB8C000
	0x0358F5F0 LDR X8, [X8 + 0x6C8]
	0x0358F5F4 STR X23, [X21 + 0x10]
	0x0358F5F8 STR X22, [X21 + 0x20]
	0x0358F5FC LDR X0, [X8]
	0x0358F600 BL 0x1C16F10
	0x0358F604 MOV X22, X0
	0x0358F608 BL 0x358D56C
	0x0358F60C STR X22, [X21 + 0x18]
	0x0358F610 CBZ X22, 0x358F6BC
	0x0358F614 LDR X8, [X20 + 0x38]
	0x0358F618 ADRP X9, 0xB65000
	0x0358F61C LDR X9, [X9 + 0xE70]
	0x0358F620 ADRP X23, 0xB67000
	0x0358F624 STR X8, [X22 + 0x38]
	0x0358F628 ADRP X22, 0xBA7000
	0x0358F62C LDR X0, [X9]
	0x0358F630 ADRP X24, 0xBA7000
	0x0358F634 LDR X22, [X22 + 0xCA8]
	0x0358F638 LDR X23, [X23 + 0x2C8]
	0x0358F63C LDR X24, [X24 + 0xCB0]
	0x0358F640 BL 0x1C16F10
	0x0358F644 LDR X2, [X22]
	0x0358F648 MOV X1, X21
	0x0358F64C MOV X3, X31
	0x0358F650 MOV X22, X0
	0x0358F654 BL 0x3314368
	0x0358F658 LDR X0, [X23]
	0x0358F65C BL 0x1C16F10
	0x0358F660 LDR X2, [X24]
	0x0358F664 MOV X1, X21
	0x0358F668 MOV X3, X31
	0x0358F66C MOV X23, X0
	0x0358F670 BL 0x2A6B948
	0x0358F674 LDR X1, [X21 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE51000
	007 Move W8, [X21+3939]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xB8E000
	016 Move X0, [X0+3952]
	017 Call 0x1C17CF4
	018 Move X0, 0xB8E000
	019 Move X0, [X0+3960]
	020 Call 0x1C17CF4
	021 Move X0, 0xB8E000
	022 Move X0, [X0+3968]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3939], W8
	026 Move X21, [X22+40]
	027 Compare X21, 0
	028 JumpIfNotEqual {41}
	029 Move X8, 0xB8E000
	030 Move X8, [X8+3968]
	031 Move X0, [X8]
	032 Call 0x1C17F10
	033 Move X8, 0xB8E000
	034 Move X8, [X8+3960]
	035 Move X21, X0
	036 Move X1, [X8]
	037 Call List`1<ProgressHandler>..ctor, X0
	038 Move [X22+40], X21
	039 Compare X21, 0
	040 JumpIfEqual {77}
	041 Move X9, 0xB8E000
	042 Move X9, [X9+3952]
	043 Move W10, [X21+28]
	044 Move X8, [X21+16]
	045 Move X9, [X9]
	046 Add W10, W10, 1
	047 Move [X21+28], W10
	048 Compare X8, 0
	049 JumpIfEqual {77}
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Move W11, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W9, W10, 1
	054 Add X8, X8, X10
	055 Move [X21+24], W9
	056 Move [X8+32], X20
	057 Move [X8+40], X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return 
	064 Move X8, [X9+32]
	065 Move X0, X21
	066 Move X1, X20
	067 Move X2, X19
	068 Move X8, [X8+192]
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X3, [X8+112]
	074 Move X30, [X31+48]
	075 Call List`1<ProgressHandler>.AddWithResize, X0, X1
	076 Return 
	077 Call 0x1C17F20

Method: System.Void InvokeRejectHandler(System.Action`1<System.Exception> callback, RSG.IRejectable rejectable, System.Exception value)

Disassembly:
	0x0358F678 MOV X0, X20
	0x0358F67C MOV X2, X22
	0x0358F680 MOV X3, X23
	0x0358F684 BL 0x358F33C
	0x0358F688 CBZ X19, 0x358F6A4
	0x0358F68C LDR W8, [X20 + 0x40]
	0x0358F690 CBNZ W8, 0x358F6A4
	0x0358F694 MOV X0, X20
	0x0358F698 MOV X1, X19
	0x0358F69C MOV X2, X20
	0x0358F6A0 BL 0x358E578
	0x0358F6A4 LDR X0, [X21 + 0x18]
	0x0358F6A8 LDP X20, X19, [X31 + 0x30]
	0x0358F6AC LDP X22, X21, [X31 + 0x20]
	0x0358F6B0 LDP X24, X23, [X31 + 0x10]
	0x0358F6B4 LDR X30, [X31], #0x40
	0x0358F6B8 RET
	0x0358F6BC BL 0x1C16F20
	0x0358F6C0 MOV X3, X31
	0x0358F6C4 B 0x358F3E0
	0x0358F6C8 MOV X1, X31
	0x0358F6CC B 0x33BDD8C
	0x0358F6D0 MOV X1, X31
	0x0358F6D4 B 0x33BDD8C
	0x0358F6D8 STR X30, [X31 - 0x30]!
	0x0358F6DC STP X22, X21, [X31 + 0x10]
	0x0358F6E0 STP X20, X19, [X31 + 0x20]
	0x0358F6E4 ADRP X21, 0xE50000
	0x0358F6E8 ADRP X22, 0xBA7000
	0x0358F6EC LDRB W8, [X21 + 0xF6F]
	0x0358F6F0 LDR X22, [X22 + 0xCB8]
	0x0358F6F4 MOV X20, X1
	0x0358F6F8 MOV X19, X0
	0x0358F6FC TBNZ X8, 0x0, 0x358F72C
	0x0358F700 ADRP X0, 0xBA7000
	0x0358F704 LDR X0, [X0 + 0xCC0]
	0x0358F708 BL 0x1C16CF4
	0x0358F70C ADRP X0, 0xBA7000
	0x0358F710 LDR X0, [X0 + 0xCC8]
	0x0358F714 BL 0x1C16CF4
	0x0358F718 ADRP X0, 0xBA7000
	0x0358F71C LDR X0, [X0 + 0xCB8]
	0x0358F720 BL 0x1C16CF4
	0x0358F724 MOVZ W8, 0x1
	0x0358F728 STRB W8, [X21 + 0xF6F]
	0x0358F72C LDR X0, [X22]
	0x0358F730 BL 0x1C16F10
	0x0358F734 MOV X1, X31
	0x0358F738 MOV X21, X0
	0x0358F73C BL 0x33BDD8C
	0x0358F740 CBZ X21, 0x358F794
	0x0358F744 ADRP X8, 0xBA7000
	0x0358F748 LDR X8, [X8 + 0xCC0]
	0x0358F74C STR X20, [X21 + 0x10]
	0x0358F750 ADRP X20, 0xBA7000
	0x0358F754 LDR X0, [X8]
	0x0358F758 LDR X20, [X20 + 0xCC8]
	0x0358F75C BL 0x1C16F10
	0x0358F760 LDR X2, [X20]
	0x0358F764 MOV X1, X21
	0x0358F768 MOV X3, X31
	0x0358F76C MOV X20, X0
	0x0358F770 BL 0x2D27AA8
	0x0358F774 MOV X0, X19
	0x0358F778 MOV X1, X20
	0x0358F77C LDP X20, X19, [X31 + 0x20]
	0x0358F780 LDP X22, X21, [X31 + 0x10]
	0x0358F784 MOV X2, X31
	0x0358F788 MOV X3, X31
	0x0358F78C LDR X30, [X31], #0x30
	0x0358F790 B 0x358F3E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Compare X1, 0
	006 JumpIfEqual {16}
	007 Move X0, [X1+64]
	008 Move X8, [X1+24]
	009 Move X2, [X1+40]
	010 Move X1, X3
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 
	016 Call 0x1C17F20
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X20, X0
	019 Move X0, X20
	020 Call 0x3EB2AD0
	021 Move X20, X0
	022 Move X0, 0xB65000
	023 Move X0, [X0+2000]
	024 Call 0x1C17D08
	025 Move X8, [X20]
	026 Move X1, [X8]
	027 Call 0x1C18270
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {64}
	032 Move X20, [X20]
	033 Call 0x3EB2AE0
	034 Compare X19, 0
	035 JumpIfEqual {72}
	036 Move X0, 0xB8D000
	037 Move X0, [X0+1728]
	038 Call 0x1C17D08
	039 Move X8, [X19]
	040 Move X1, X0
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X19
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X3, [X0]
	057 Move X2, [X0+8]
	058 Move X0, X19
	059 Move X1, X20
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 CallNoReturn X3
	064 Move W0, 8
	065 Call 0x3EB2AF0
	066 Move X8, [X20]
	067 Move [X0], X8
	068 Move X1, 0x926000
	069 Add X1, X1, 3672
	070 Move X2, X31
	071 Call 0x3EB2B00
	072 Call 0x1C17F20
	073 Move X20, X0
	074 Call 0x3EB2AE0
	075 Move X0, X20
	076 Call 0x1D2D690
	077 Call 0x1991590

Method: System.Void InvokeResolveHandler(System.Action callback, RSG.IRejectable rejectable)

Disassembly:
	0x0358F794 BL 0x1C16F20
	0x0358F798 MOV X1, X31
	0x0358F79C B 0x33BDD8C
	0x0358F7A0 STP X30, X21, [X31 - 0x20]!
	0x0358F7A4 STP X20, X19, [X31 + 0x10]
	0x0358F7A8 ADRP X20, 0xE50000
	0x0358F7AC ADRP X21, 0xB8C000
	0x0358F7B0 LDRB W8, [X20 + 0xF70]
	0x0358F7B4 LDR X21, [X21 + 0x6C8]
	0x0358F7B8 MOV X19, X0
	0x0358F7BC TBNZ X8, 0x0, 0x358F7D4
	0x0358F7C0 ADRP X0, 0xB8C000
	0x0358F7C4 LDR X0, [X0 + 0x6C8]
	0x0358F7C8 BL 0x1C16CF4
	0x0358F7CC MOVZ W8, 0x1
	0x0358F7D0 STRB W8, [X20 + 0xF70]
	0x0358F7D4 LDR X0, [X21]
	0x0358F7D8 LDR W8, [X0 + 0xE0]
	0x0358F7DC CBNZ W8, 0x358F7E4
	0x0358F7E0 BL 0x1C16DFC
	0x0358F7E4 MOV X0, X19
	0x0358F7E8 LDP X20, X19, [X31 + 0x10]
	0x0358F7EC LDP X30, X21, [X31], #0x20
	0x0358F7F0 B 0x358F7F4
	0x0358F7F4 STP X30, X23, [X31 - 0x30]!
	0x0358F7F8 STP X22, X21, [X31 + 0x10]
	0x0358F7FC STP X20, X19, [X31 + 0x20]
	0x0358F800 ADRP X19, 0xE50000
	0x0358F804 ADRP X22, 0xBA7000
	0x0358F808 ADRP X21, 0xBA7000
	0x0358F80C LDRB W8, [X19 + 0xF71]
	0x0358F810 LDR X22, [X22 + 0xCD0]
	0x0358F814 LDR X21, [X21 + 0xCD8]
	0x0358F818 MOV X20, X0
	0x0358F81C TBNZ X8, 0x0, 0x358F888
	0x0358F820 ADRP X0, 0xBA7000
	0x0358F824 LDR X0, [X0 + 0xCE0]
	0x0358F828 BL 0x1C16CF4
	0x0358F82C ADRP X0, 0xBA7000
	0x0358F830 LDR X0, [X0 + 0xCE8]
	0x0358F834 BL 0x1C16CF4
	0x0358F838 ADRP X0, 0xBA7000
	0x0358F83C LDR X0, [X0 + 0xCD8]
	0x0358F840 BL 0x1C16CF4
	0x0358F844 ADRP X0, 0xB8C000
	0x0358F848 LDR X0, [X0 + 0x6C8]
	0x0358F84C BL 0x1C16CF4
	0x0358F850 ADRP X0, 0xB64000
	0x0358F854 LDR X0, [X0 + 0x638]
	0x0358F858 BL 0x1C16CF4
	0x0358F85C ADRP X0, 0xBA7000
	0x0358F860 LDR X0, [X0 + 0xCF0]
	0x0358F864 BL 0x1C16CF4
	0x0358F868 ADRP X0, 0xBA7000
	0x0358F86C LDR X0, [X0 + 0xCD0]
	0x0358F870 BL 0x1C16CF4
	0x0358F874 ADRP X0, 0xB8D000
	0x0358F878 LDR X0, [X0 + 0xFF8]
	0x0358F87C BL 0x1C16CF4
	0x0358F880 MOVZ W8, 0x1
	0x0358F884 STRB W8, [X19 + 0xF71]
	0x0358F888 LDR X0, [X22]
	0x0358F88C BL 0x1C16F10
	0x0358F890 MOV X1, X31
	0x0358F894 MOV X19, X0
	0x0358F898 BL 0x33BDD8C
	0x0358F89C LDR X1, [X21]
	0x0358F8A0 MOV X0, X20
	0x0358F8A4 BL 0x21D577C
	0x0358F8A8 CBZ X0, 0x358F980

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Compare X1, 0
	006 JumpIfEqual {15}
	007 Move X8, [X1+24]
	008 Move X0, [X1+64]
	009 Move X1, [X1+40]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Call 0x1C17F20
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X20, X0
	018 Move X0, X20
	019 Call 0x3EB2AD0
	020 Move X20, X0
	021 Move X0, 0xB65000
	022 Move X0, [X0+2000]
	023 Call 0x1C17D08
	024 Move X8, [X20]
	025 Move X1, [X8]
	026 Call 0x1C18270
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {63}
	031 Move X20, [X20]
	032 Call 0x3EB2AE0
	033 Compare X19, 0
	034 JumpIfEqual {71}
	035 Move X0, 0xB8D000
	036 Move X0, [X0+1728]
	037 Call 0x1C17D08
	038 Move X8, [X19]
	039 Move X1, X0
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X3, [X0]
	056 Move X2, [X0+8]
	057 Move X0, X19
	058 Move X1, X20
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 CallNoReturn X3
	063 Move W0, 8
	064 Call 0x3EB2AF0
	065 Move X8, [X20]
	066 Move [X0], X8
	067 Move X1, 0x926000
	068 Add X1, X1, 3672
	069 Move X2, X31
	070 Call 0x3EB2B00
	071 Call 0x1C17F20
	072 Move X20, X0
	073 Call 0x3EB2AE0
	074 Move X0, X20
	075 Call 0x1D2D690
	076 Call 0x1991590

Method: System.Void InvokeProgressHandler(System.Action`1<System.Single> callback, RSG.IRejectable rejectable, System.Single progress)

Disassembly:
	0x0358F8AC ADRP X8, 0xB8C000
	0x0358F8B0 LDR X9, [X0 + 0x18]
	0x0358F8B4 LDR X8, [X8 + 0x6C8]
	0x0358F8B8 MOV X20, X0
	0x0358F8BC CBZ X9, 0x358F960
	0x0358F8C0 CBZ X19, 0x358F980
	0x0358F8C4 STR W9, [X19 + 0x20]
	0x0358F8C8 LDR X0, [X8]
	0x0358F8CC BL 0x1C16F10
	0x0358F8D0 MOV X21, X0
	0x0358F8D4 BL 0x358D56C
	0x0358F8D8 STR X21, [X19 + 0x18]
	0x0358F8DC CBZ X21, 0x358F980
	0x0358F8E0 ADRP X8, 0xB8D000
	0x0358F8E4 LDR X8, [X8 + 0xFF8]
	0x0358F8E8 ADRP X9, 0xB64000
	0x0358F8EC ADRP X22, 0xBA7000
	0x0358F8F0 ADRP X23, 0xBA7000
	0x0358F8F4 LDR X8, [X8]
	0x0358F8F8 LDR X9, [X9 + 0x638]
	0x0358F8FC STR X8, [X21 + 0x38]
	0x0358F900 LDR W1, [X19 + 0x20]
	0x0358F904 LDR X0, [X9]
	0x0358F908 ADRP X21, 0xBA7000
	0x0358F90C LDR X21, [X21 + 0xCE0]
	0x0358F910 LDR X22, [X22 + 0xCF0]
	0x0358F914 LDR X23, [X23 + 0xCE8]
	0x0358F918 BL 0x1C16D6C
	0x0358F91C STR X0, [X19 + 0x10]
	0x0358F920 LDR X0, [X21]
	0x0358F924 BL 0x1C16F10
	0x0358F928 LDR X2, [X22]
	0x0358F92C MOV X1, X19
	0x0358F930 MOV X3, X31
	0x0358F934 MOV X21, X0
	0x0358F938 BL 0x2A7689C
	0x0358F93C LDR X2, [X23]
	0x0358F940 MOV X0, X20
	0x0358F944 MOV X1, X21
	0x0358F948 BL 0x21DB000
	0x0358F94C LDR X0, [X19 + 0x18]
	0x0358F950 LDP X20, X19, [X31 + 0x20]
	0x0358F954 LDP X22, X21, [X31 + 0x10]
	0x0358F958 LDP X30, X23, [X31], #0x30
	0x0358F95C RET
	0x0358F960 LDR X0, [X8]
	0x0358F964 LDR W8, [X0 + 0xE0]
	0x0358F968 CBNZ W8, 0x358F970
	0x0358F96C BL 0x1C16DFC
	0x0358F970 LDP X20, X19, [X31 + 0x20]
	0x0358F974 LDP X22, X21, [X31 + 0x10]
	0x0358F978 LDP X30, X23, [X31], #0x30
	0x0358F97C B 0x358F98C
	0x0358F980 BL 0x1C16F20
	0x0358F984 MOV X1, X31
	0x0358F988 B 0x33BDD8C
	0x0358F98C STR X30, [X31 - 0x20]!
	0x0358F990 STP X20, X19, [X31 + 0x10]
	0x0358F994 ADRP X19, 0xE50000
	0x0358F998 ADRP X20, 0xB8C000
	0x0358F99C LDRB W8, [X19 + 0xF78]
	0x0358F9A0 LDR X20, [X20 + 0x6C8]
	0x0358F9A4 TBNZ X8, 0x0, 0x358F9BC
	0x0358F9A8 ADRP X0, 0xB8C000
	0x0358F9AC LDR X0, [X0 + 0x6C8]
	0x0358F9B0 BL 0x1C16CF4
	0x0358F9B4 MOVZ W8, 0x1
	0x0358F9B8 STRB W8, [X19 + 0xF78]
	0x0358F9BC LDR X0, [X20]
	0x0358F9C0 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Compare X1, 0
	006 JumpIfEqual {15}
	007 Move X8, [X1+24]
	008 Move X0, [X1+64]
	009 Move X1, [X1+40]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Call 0x1C17F20
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X20, X0
	018 Move X0, X20
	019 Call 0x3EB2AD0
	020 Move X20, X0
	021 Move X0, 0xB65000
	022 Move X0, [X0+2000]
	023 Call 0x1C17D08
	024 Move X8, [X20]
	025 Move X1, [X8]
	026 Call 0x1C18270
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {63}
	031 Move X20, [X20]
	032 Call 0x3EB2AE0
	033 Compare X19, 0
	034 JumpIfEqual {71}
	035 Move X0, 0xB8D000
	036 Move X0, [X0+1728]
	037 Call 0x1C17D08
	038 Move X8, [X19]
	039 Move X1, X0
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X3, [X0]
	056 Move X2, [X0+8]
	057 Move X0, X19
	058 Move X1, X20
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 CallNoReturn X3
	063 Move W0, 8
	064 Call 0x3EB2AF0
	065 Move X8, [X20]
	066 Move [X0], X8
	067 Move X1, 0x926000
	068 Add X1, X1, 3672
	069 Move X2, X31
	070 Call 0x3EB2B00
	071 Call 0x1C17F20
	072 Move X20, X0
	073 Call 0x3EB2AE0
	074 Move X0, X20
	075 Call 0x1D2D690
	076 Call 0x1991590

Method: System.Void ClearHandlers()

Disassembly:
	0x0358F9C4 MOV X19, X0
	0x0358F9C8 BL 0x358D56C
	0x0358F9CC CBZ X19, 0x358F9E8

ISIL:
	001 Move [X0+24], X31
	002 Move [X0+32], X31
	003 Move [X0+40], X31
	004 Return 

Method: System.Void InvokeRejectHandlers(System.Exception ex)

Disassembly:
	0x0358F9D0 MOV X0, X19
	0x0358F9D4 BL 0x358EC6C
	0x0358F9D8 MOV X0, X19
	0x0358F9DC LDP X20, X19, [X31 + 0x10]
	0x0358F9E0 LDR X30, [X31], #0x20
	0x0358F9E4 RET
	0x0358F9E8 BL 0x1C16F20
	0x0358F9EC STR X30, [X31 - 0x30]!
	0x0358F9F0 STP X22, X21, [X31 + 0x10]
	0x0358F9F4 STP X20, X19, [X31 + 0x20]
	0x0358F9F8 ADRP X21, 0xE50000
	0x0358F9FC ADRP X22, 0xBA7000
	0x0358FA00 LDRB W8, [X21 + 0xF72]
	0x0358FA04 LDR X22, [X22 + 0xCF8]
	0x0358FA08 MOV X20, X1
	0x0358FA0C MOV X19, X0
	0x0358FA10 TBNZ X8, 0x0, 0x358FA40
	0x0358FA14 ADRP X0, 0xBA7000
	0x0358FA18 LDR X0, [X0 + 0xCC0]
	0x0358FA1C BL 0x1C16CF4
	0x0358FA20 ADRP X0, 0xBA7000
	0x0358FA24 LDR X0, [X0 + 0xD00]
	0x0358FA28 BL 0x1C16CF4
	0x0358FA2C ADRP X0, 0xBA7000
	0x0358FA30 LDR X0, [X0 + 0xCF8]
	0x0358FA34 BL 0x1C16CF4
	0x0358FA38 MOVZ W8, 0x1
	0x0358FA3C STRB W8, [X21 + 0xF72]
	0x0358FA40 LDR X0, [X22]
	0x0358FA44 BL 0x1C16F10
	0x0358FA48 MOV X1, X31
	0x0358FA4C MOV X21, X0
	0x0358FA50 BL 0x33BDD8C
	0x0358FA54 CBZ X21, 0x358FAA8
	0x0358FA58 ADRP X8, 0xBA7000
	0x0358FA5C LDR X8, [X8 + 0xCC0]
	0x0358FA60 STR X20, [X21 + 0x10]
	0x0358FA64 ADRP X20, 0xBA7000
	0x0358FA68 LDR X0, [X8]
	0x0358FA6C LDR X20, [X20 + 0xD00]
	0x0358FA70 BL 0x1C16F10
	0x0358FA74 LDR X2, [X20]
	0x0358FA78 MOV X1, X21
	0x0358FA7C MOV X3, X31
	0x0358FA80 MOV X20, X0
	0x0358FA84 BL 0x2D27AA8
	0x0358FA88 MOV X0, X19
	0x0358FA8C MOV X1, X20
	0x0358FA90 LDP X20, X19, [X31 + 0x20]
	0x0358FA94 LDP X22, X21, [X31 + 0x10]
	0x0358FA98 MOV X2, X31
	0x0358FA9C MOV X3, X31
	0x0358FAA0 LDR X30, [X31], #0x30
	0x0358FAA4 B 0x358F3E0
	0x0358FAA8 BL 0x1C16F20
	0x0358FAAC MOV X1, X31
	0x0358FAB0 B 0x33BDD8C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE51000
	008 Move X22, 0xBA8000
	009 Move W8, [X21+3940]
	010 Move X22, [X22+3080]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xB8E000
	018 Move X0, [X0+3976]
	019 Call 0x1C17CF4
	020 Move X0, 0xB8E000
	021 Move X0, [X0+3984]
	022 Call 0x1C17CF4
	023 Move X0, 0xBA8000
	024 Move X0, [X0+3088]
	025 Call 0x1C17CF4
	026 Move X0, 0xBA8000
	027 Move X0, [X0+3080]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3940], W8
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X21, X0
	035 Call Object..ctor, X0
	036 Compare X21, 0
	037 JumpIfEqual {71}
	038 Move [X21+16], X19
	039 Move [X21+24], X20
	040 Add X19, X19, 24
	041 Move X20, [X19]
	042 Compare X20, 0
	043 JumpIfEqual {61}
	044 Move X8, 0xB8E000
	045 Move X8, [X8+3976]
	046 Move X22, 0xBA8000
	047 Move X23, 0xB8E000
	048 Move X0, [X8]
	049 Move X22, [X22+3088]
	050 Move X23, [X23+3984]
	051 Call 0x1C17F10
	052 Move X2, [X22]
	053 Move X1, X21
	054 Move X3, X31
	055 Move X22, X0
	056 Call Action`1<RejectHandler>..ctor, X0, X1, X2
	057 Move X2, [X23]
	058 Move X0, X20
	059 Move X1, X22
	060 Call EnumerableExt.Each, X0, X1
	061 Move [X19], X31
	062 Move [X19+8], X31
	063 Move [X19+16], X31
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return 
	071 Call 0x1C17F20

Method: System.Void InvokeResolveHandlers()

Disassembly:
	0x0358FABC ADRP X20, 0xE50000
	0x0358FAC0 ADRP X21, 0xB8C000
	0x0358FAC4 LDRB W8, [X20 + 0xF73]
	0x0358FAC8 LDR X21, [X21 + 0x6C8]
	0x0358FACC MOV X19, X0
	0x0358FAD0 TBNZ X8, 0x0, 0x358FAE8
	0x0358FAD4 ADRP X0, 0xB8C000
	0x0358FAD8 LDR X0, [X0 + 0x6C8]
	0x0358FADC BL 0x1C16CF4
	0x0358FAE0 MOVZ W8, 0x1
	0x0358FAE4 STRB W8, [X20 + 0xF73]
	0x0358FAE8 LDR X0, [X21]
	0x0358FAEC LDR W8, [X0 + 0xE0]
	0x0358FAF0 CBNZ W8, 0x358FAF8
	0x0358FAF4 BL 0x1C16DFC
	0x0358FAF8 MOV X0, X19
	0x0358FAFC LDP X20, X19, [X31 + 0x10]
	0x0358FB00 LDP X30, X21, [X31], #0x20
	0x0358FB04 B 0x358FB08
	0x0358FB08 STP X30, X25, [X31 - 0x40]!
	0x0358FB0C STP X24, X23, [X31 + 0x10]
	0x0358FB10 STP X22, X21, [X31 + 0x20]
	0x0358FB14 STP X20, X19, [X31 + 0x30]
	0x0358FB18 ADRP X19, 0xE50000
	0x0358FB1C ADRP X21, 0xBA7000
	0x0358FB20 ADRP X22, 0xB8C000
	0x0358FB24 LDRB W8, [X19 + 0xF74]
	0x0358FB28 LDR X21, [X21 + 0xD08]
	0x0358FB2C LDR X22, [X22 + 0x6C8]
	0x0358FB30 MOV X20, X0
	0x0358FB34 TBNZ X8, 0x0, 0x358FBAC
	0x0358FB38 ADRP X0, 0xB67000
	0x0358FB3C LDR X0, [X0 + 0x2C8]
	0x0358FB40 BL 0x1C16CF4
	0x0358FB44 ADRP X0, 0xB65000
	0x0358FB48 LDR X0, [X0 + 0xE70]
	0x0358FB4C BL 0x1C16CF4
	0x0358FB50 ADRP X0, 0xBA7000
	0x0358FB54 LDR X0, [X0 + 0xD10]
	0x0358FB58 BL 0x1C16CF4
	0x0358FB5C ADRP X0, 0xBA7000
	0x0358FB60 LDR X0, [X0 + 0xD18]
	0x0358FB64 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE51000
	007 Move W8, [X20+3941]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xBA8000
	014 Move X0, [X0+3096]
	015 Call 0x1C17CF4
	016 Move X0, 0xBA8000
	017 Move X0, [X0+3104]
	018 Call 0x1C17CF4
	019 Move X0, 0xBA8000
	020 Move X0, [X0+3112]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3941], W8
	024 Move X20, [X19+32]
	025 Compare X20, 0
	026 JumpIfEqual {44}
	027 Move X8, 0xBA8000
	028 Move X8, [X8+3096]
	029 Move X21, 0xBA8000
	030 Move X22, 0xBA8000
	031 Move X0, [X8]
	032 Move X21, [X21+3112]
	033 Move X22, [X22+3104]
	034 Call 0x1C17F10
	035 Move X2, [X21]
	036 Move X1, X19
	037 Move X3, X31
	038 Move X21, X0
	039 Call Action`1<ResolveHandler>..ctor, X0, X1, X2
	040 Move X2, [X22]
	041 Move X0, X20
	042 Move X1, X21
	043 Call EnumerableExt.Each, X0, X1
	044 Move [X19+24], X31
	045 Move [X19+32], X31
	046 Move [X19+40], X31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return 

Method: System.Void InvokeProgressHandlers(System.Single progress)

Disassembly:
	0x0358FB68 ADRP X0, 0xB8D000
	0x0358FB6C LDR X0, [X0 + 0x2C0]
	0x0358FB70 BL 0x1C16CF4
	0x0358FB74 ADRP X0, 0xB8C000
	0x0358FB78 LDR X0, [X0 + 0x6C8]
	0x0358FB7C BL 0x1C16CF4
	0x0358FB80 ADRP X0, 0xBA7000
	0x0358FB84 LDR X0, [X0 + 0xD20]
	0x0358FB88 BL 0x1C16CF4
	0x0358FB8C ADRP X0, 0xBA7000
	0x0358FB90 LDR X0, [X0 + 0xD28]
	0x0358FB94 BL 0x1C16CF4
	0x0358FB98 ADRP X0, 0xBA7000
	0x0358FB9C LDR X0, [X0 + 0xD08]
	0x0358FBA0 BL 0x1C16CF4
	0x0358FBA4 MOVZ W8, 0x1
	0x0358FBA8 STRB W8, [X19 + 0xF74]
	0x0358FBAC LDR X0, [X21]
	0x0358FBB0 BL 0x1C16F10
	0x0358FBB4 MOV X1, X31
	0x0358FBB8 MOV X19, X0
	0x0358FBBC BL 0x33BDD8C
	0x0358FBC0 LDR X0, [X22]
	0x0358FBC4 BL 0x1C16F10
	0x0358FBC8 MOV X21, X0
	0x0358FBCC BL 0x358D56C
	0x0358FBD0 CBZ X19, 0x358FD94
	0x0358FBD4 STR X21, [X19 + 0x18]
	0x0358FBD8 STR W31, [X19 + 0x10]
	0x0358FBDC LDR X0, [X22]
	0x0358FBE0 ADRP X21, 0xBA7000
	0x0358FBE4 ADRP X22, 0xBA7000
	0x0358FBE8 ADRP X25, 0xBA7000
	0x0358FBEC ADRP X24, 0xB65000
	0x0358FBF0 ADRP X23, 0xBA7000
	0x0358FBF4 LDR X21, [X21 + 0xD18]
	0x0358FBF8 LDR W8, [X0 + 0xE0]
	0x0358FBFC LDR X22, [X22 + 0xD20]
	0x0358FC00 LDR X25, [X25 + 0xD10]
	0x0358FC04 LDR X24, [X24 + 0xE70]
	0x0358FC08 LDR X23, [X23 + 0xD28]
	0x0358FC0C CBNZ W8, 0x358FC14
	0x0358FC10 BL 0x1C16DFC
	0x0358FC14 BL 0x358F98C
	0x0358FC18 LDR X8, [X21]
	0x0358FC1C MOV X21, X0
	0x0358FC20 MOV X0, X8
	0x0358FC24 BL 0x1C16F10
	0x0358FC28 LDR X2, [X22]
	0x0358FC2C MOV X1, X19
	0x0358FC30 MOV X3, X31
	0x0358FC34 MOV X22, X0
	0x0358FC38 BL 0x2D3B298
	0x0358FC3C LDR X3, [X25]
	0x0358FC40 MOV X0, X20
	0x0358FC44 MOV X1, X21
	0x0358FC48 MOV X2, X22
	0x0358FC4C BL 0x21B0EB8
	0x0358FC50 LDR X8, [X24]
	0x0358FC54 MOV X20, X0
	0x0358FC58 MOV X0, X8
	0x0358FC5C BL 0x1C16F10

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE51000
	008 Move X21, 0xBA8000
	009 Move W8, [X20+3942]
	010 Move X21, [X21+3120]
	011 Move V8, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xB8E000
	018 Move X0, [X0+4000]
	019 Call 0x1C17CF4
	020 Move X0, 0xB8E000
	021 Move X0, [X0+4008]
	022 Call 0x1C17CF4
	023 Move X0, 0xBA8000
	024 Move X0, [X0+3128]
	025 Call 0x1C17CF4
	026 Move X0, 0xBA8000
	027 Move X0, [X0+3120]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3942], W8
	031 Move X0, [X21]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call Object..ctor, X0
	036 Compare X20, 0
	037 JumpIfEqual {74}
	038 Move [X20+16], X19
	039 Move [X20+24], S8
	040 Move X19, [X19+40]
	041 Compare X19, 0
	042 JumpIfEqual {67}
	043 Move X8, 0xB8E000
	044 Move X8, [X8+4000]
	045 Move X21, 0xBA8000
	046 Move X22, 0xB8E000
	047 Move X0, [X8]
	048 Move X21, [X21+3128]
	049 Move X22, [X22+4008]
	050 Call 0x1C17F10
	051 Move X2, [X21]
	052 Move X1, X20
	053 Move X3, X31
	054 Move X21, X0
	055 Call Action`1<ProgressHandler>..ctor, X0, X1, X2
	056 Move X2, [X22]
	057 Move X0, X19
	058 Move X1, X21
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+8]
	064 Move V8, [X31+48]
	065 Call 0x21DC308, X0, X1
	066 Return 
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+8]
	072 Move V8, [X31+48]
	073 Return 
	074 Call 0x1C17F20

Method: System.Void Reject(System.Exception ex)

Disassembly:
	0x0358F1F0 BL 0x1C16CF4
	0x0358F1F4 ADRP X0, 0xBA7000
	0x0358F1F8 LDR X0, [X0 + 0xC80]
	0x0358F1FC BL 0x1C16CF4
	0x0358F200 ADRP X0, 0xBA7000
	0x0358F204 LDR X0, [X0 + 0xC68]
	0x0358F208 BL 0x1C16CF4
	0x0358F20C MOVZ W8, 0x1
	0x0358F210 STRB W8, [X20 + 0xF6C]
	0x0358F214 LDR X0, [X22]
	0x0358F218 BL 0x1C16F10
	0x0358F21C MOV X1, X31
	0x0358F220 MOV X20, X0
	0x0358F224 BL 0x33BDD8C
	0x0358F228 CBZ X20, 0x358F328
	0x0358F22C ADRP X8, 0xB8C000
	0x0358F230 LDR X8, [X8 + 0x6C8]
	0x0358F234 STR X21, [X20 + 0x18]
	0x0358F238 LDR X0, [X8]
	0x0358F23C BL 0x1C16F10
	0x0358F240 MOV X21, X0
	0x0358F244 BL 0x358D56C
	0x0358F248 STR X21, [X20 + 0x10]
	0x0358F24C CBZ X21, 0x358F328
	0x0358F250 LDR X8, [X19 + 0x38]
	0x0358F254 ADRP X9, 0xB65000
	0x0358F258 LDR X9, [X9 + 0xE70]
	0x0358F25C ADRP X22, 0xBA7000
	0x0358F260 ADRP X23, 0xB67000
	0x0358F264 LDR X22, [X22 + 0xC70]
	0x0358F268 LDR X23, [X23 + 0x2C8]
	0x0358F26C STR X8, [X21 + 0x38]
	0x0358F270 LDR X0, [X9]
	0x0358F274 ADRP X24, 0xBA7000
	0x0358F278 ADRP X25, 0xB66000
	0x0358F27C ADRP X26, 0xBA7000
	0x0358F280 LDR X24, [X24 + 0xC78]
	0x0358F284 LDR X25, [X25 + 0x5B0]
	0x0358F288 LDR X26, [X26 + 0xC80]
	0x0358F28C BL 0x1C16F10
	0x0358F290 LDR X2, [X22]
	0x0358F294 MOV X1, X20
	0x0358F298 MOV X3, X31
	0x0358F29C MOV X21, X0
	0x0358F2A0 BL 0x3314368
	0x0358F2A4 LDR X0, [X23]
	0x0358F2A8 BL 0x1C16F10
	0x0358F2AC LDR X2, [X24]
	0x0358F2B0 MOV X1, X20
	0x0358F2B4 MOV X3, X31
	0x0358F2B8 MOV X22, X0
	0x0358F2BC BL 0x2A6B948
	0x0358F2C0 LDR X1, [X20 + 0x10]
	0x0358F2C4 MOV X0, X19
	0x0358F2C8 MOV X2, X21
	0x0358F2CC MOV X3, X22
	0x0358F2D0 BL 0x358F33C
	0x0358F2D4 LDR X0, [X25]
	0x0358F2D8 LDR X21, [X20 + 0x10]
	0x0358F2DC BL 0x1C16F10
	0x0358F2E0 LDR X2, [X26]
	0x0358F2E4 MOV X1, X20
	0x0358F2E8 MOV X3, X31
	0x0358F2EC MOV X22, X0
	0x0358F2F0 BL 0x2A6DA40
	0x0358F2F4 LDR W8, [X19 + 0x40]
	0x0358F2F8 CBNZ W8, 0x358F30C
	0x0358F2FC MOV X0, X19
	0x0358F300 MOV X1, X22
	0x0358F304 MOV X2, X21
	0x0358F308 BL 0x358E578
	0x0358F30C LDR X0, [X20 + 0x10]
	0x0358F310 LDP X20, X19, [X31 + 0x40]
	0x0358F314 LDP X22, X21, [X31 + 0x30]
	0x0358F318 LDP X24, X23, [X31 + 0x20]
	0x0358F31C LDP X26, X25, [X31 + 0x10]
	0x0358F320 LDR X30, [X31], #0x50
	0x0358F324 RET
	0x0358F328 BL 0x1C16F20
	0x0358F32C STR X1, [X0 + 0x38]
	0x0358F330 RET
	0x0358F334 MOV X1, X31
	0x0358F338 B 0x33BDD8C
	0x0358F33C STP X30, X21, [X31 - 0x20]!
	0x0358F340 STP X20, X19, [X31 + 0x10]
	0x0358F344 LDR W8, [X0 + 0x40]
	0x0358F348 MOV X19, X3
	0x0358F34C MOV X21, X0
	0x0358F350 MOV X20, X1
	0x0358F354 CMP W8, 0x1
	0x0358F358 B.EQ 0x358F378
	0x0358F35C CMP W8, 0x2
	0x0358F360 B.NE 0x358F390
	0x0358F364 MOV X1, X2
	0x0358F368 MOV X2, X20
	0x0358F36C LDP X20, X19, [X31 + 0x10]
	0x0358F370 LDP X30, X21, [X31], #0x20
	0x0358F374 B 0x358E794

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X21, 0xE51000
	008 Move W8, [X21+3943]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB8E000
	016 Move X0, [X0+4016]
	017 Call 0x1C17CF4
	018 Move X0, 0xB8D000
	019 Move X0, [X0+1736]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3943], W8
	023 Move W21, [X20+64]
	024 Compare W21, 0
	025 JumpIfNotEqual {65}
	026 Move X21, 0xB8D000
	027 Move X21, [X21+1736]
	028 Move W8, 1
	029 Move [X20+16], X19
	030 Move [X20+64], W8
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Move W9, [X8]
	039 Compare W9, 0
	040 JumpIfEqual {55}
	041 Move W9, [X0+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {47}
	044 Call 0x1C17DFC
	045 Move X8, [X21]
	046 Move X8, [X8+184]
	047 Move X0, [X8+24]
	048 Compare X0, 0
	049 JumpIfEqual {115}
	050 Move X8, 0xB8E000
	051 Move X8, [X8+4016]
	052 Move X1, X20
	053 Move X2, [X8]
	054 Call HashSet`1<Object>.Remove, X0, X1
	055 Move X0, X20
	056 Move X1, X19
	057 Move X20, [X31+80]
	058 Move X19, [X31+88]
	059 Move X22, [X31+64]
	060 Move X21, [X31+72]
	061 Move X30, [X31+48]
	062 Add X31, X31, 96
	063 Call Promise.InvokeRejectHandlers, X0, X1
	064 Return 
	065 Move X19, 0xB8E000
	066 Move X19, [X19+4024]
	067 Move X0, X19
	068 Call 0x1C17D08
	069 Move TEMP, 0
	070 Not TEMP
	071 Move X22, TEMP
	072 Move [X31+24], X0
	073 Move [X31+32], X22
	074 Add X0, X31, 24
	075 Move X1, X31
	076 Move [X31+40], W21
	077 Call Enum.ToString, X0
	078 Move X20, X0
	079 Move X0, X19
	080 Call 0x1C17D08
	081 Move [X31], X0
	082 Move [X31+8], X22
	083 Add X0, X31, 0
	084 Move X1, X31
	085 Move [X31+16], W31
	086 Call Enum.ToString, X0
	087 Move X19, X0
	088 Move X0, 0xB8E000
	089 Move X0, [X0+4032]
	090 Call 0x1C17D08
	091 Move X21, X0
	092 Move X0, 0xB8E000
	093 Move X0, [X0+4040]
	094 Call 0x1C17D08
	095 Move X2, X0
	096 Move X0, X21
	097 Move X1, X20
	098 Move X3, X19
	099 Move X4, X31
	100 Call String.Concat, X0, X1, X2, X3
	101 Move X19, X0
	102 Move X0, 0xB8E000
	103 Move X0, [X0+4048]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X1, X19
	107 Move X20, X0
	108 Call PromiseStateException..ctor, X0, X1
	109 Move X0, 0xBA8000
	110 Move X0, [X0+3048]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X20
	114 Call 0x1C17DEC
	115 Call 0x1C17F20

Method: System.Void Resolve()

Disassembly:
	0x0358FC6C MOV X21, X0
	0x0358FC70 BL 0x3314368
	0x0358FC74 CBZ X20, 0x358FD94
	0x0358FC78 ADRP X23, 0xB8D000
	0x0358FC7C LDR X8, [X20]
	0x0358FC80 LDR X23, [X23 + 0x2C0]
	0x0358FC84 ADRP X24, 0xB67000
	0x0358FC88 LDRH W9, [X8 + 0x12E]
	0x0358FC8C LDR X1, [X23]
	0x0358FC90 LDR X24, [X24 + 0x2C8]
	0x0358FC94 CBZ X9, 0x358FCB8
	0x0358FC98 LDR X10, [X8 + 0xB0]
	0x0358FC9C ADD X10, X10, 0x8
	0x0358FCA0 LDUR X11, [X10 - 0x8]
	0x0358FCA4 CMP X11, X1
	0x0358FCA8 B.EQ 0x358FCC8
	0x0358FCAC SUBS X9, X9, 0x1
	0x0358FCB0 ADD X10, X10, 0x10
	0x0358FCB4 B.NE 0x358FCA0
	0x0358FCB8 MOVZ W2, 0x8
	0x0358FCBC MOV X0, X20
	0x0358FCC0 BL 0x1C5C788
	0x0358FCC4 B 0x358FCD8
	0x0358FCC8 LDR W9, [X10]
	0x0358FCCC ADD W9, W9, 0x8
	0x0358FCD0 ADD X8, X8, W9, 0x4, SXTW
	0x0358FCD4 ADD X0, X8, 0x138
	0x0358FCD8 LDP X8, X2, [X0]
	0x0358FCDC MOV X0, X20
	0x0358FCE0 MOV X1, X21
	0x0358FCE4 BLR X8
	0x0358FCE8 LDR X8, [X24]
	0x0358FCEC LDR X22, [X19 + 0x18]
	0x0358FCF0 MOV X20, X0
	0x0358FCF4 MOV X0, X8
	0x0358FCF8 BL 0x1C16F10
	0x0358FCFC CBZ X22, 0x358FD94
	0x0358FD00 LDR X8, [X22]
	0x0358FD04 MOV X1, X22
	0x0358FD08 MOV X3, X31
	0x0358FD0C MOV X21, X0
	0x0358FD10 LDR X2, [X8 + 0x330]
	0x0358FD14 BL 0x2A6B948
	0x0358FD18 CBZ X20, 0x358FD94
	0x0358FD1C LDR X8, [X20]
	0x0358FD20 LDR X1, [X23]
	0x0358FD24 LDRH W9, [X8 + 0x12E]
	0x0358FD28 CBZ X9, 0x358FD4C
	0x0358FD2C LDR X10, [X8 + 0xB0]
	0x0358FD30 ADD X10, X10, 0x8
	0x0358FD34 LDUR X11, [X10 - 0x8]
	0x0358FD38 CMP X11, X1
	0x0358FD3C B.EQ 0x358FD5C
	0x0358FD40 SUBS X9, X9, 0x1
	0x0358FD44 ADD X10, X10, 0x10
	0x0358FD48 B.NE 0x358FD34
	0x0358FD4C MOVZ W2, 0x5
	0x0358FD50 MOV X0, X20
	0x0358FD54 BL 0x1C5C788
	0x0358FD58 B 0x358FD6C
	0x0358FD5C LDR W9, [X10]
	0x0358FD60 ADD W9, W9, 0x5
	0x0358FD64 ADD X8, X8, W9, 0x4, SXTW
	0x0358FD68 ADD X0, X8, 0x138
	0x0358FD6C LDP X8, X2, [X0]
	0x0358FD70 MOV X0, X20
	0x0358FD74 MOV X1, X21
	0x0358FD78 BLR X8
	0x0358FD7C LDR X0, [X19 + 0x18]
	0x0358FD80 LDP X20, X19, [X31 + 0x30]
	0x0358FD84 LDP X22, X21, [X31 + 0x20]
	0x0358FD88 LDP X24, X23, [X31 + 0x10]
	0x0358FD8C LDP X30, X25, [X31], #0x40
	0x0358FD90 RET
	0x0358FD94 BL 0x1C16F20
	0x0358FD98 MOV X1, X31
	0x0358FD9C B 0x33BDD8C
	0x0358FDA0 STR X30, [X31 - 0x30]!
	0x0358FDA4 STP X22, X21, [X31 + 0x10]
	0x0358FDA8 STP X20, X19, [X31 + 0x20]
	0x0358FDAC ADRP X21, 0xE50000
	0x0358FDB0 ADRP X22, 0xBA7000
	0x0358FDB4 LDRB W8, [X21 + 0xF75]
	0x0358FDB8 LDR X22, [X22 + 0xD30]
	0x0358FDBC MOV X20, X1
	0x0358FDC0 MOV X19, X0
	0x0358FDC4 TBNZ X8, 0x0, 0x358FDF4
	0x0358FDC8 ADRP X0, 0xBA7000
	0x0358FDCC LDR X0, [X0 + 0xCC0]
	0x0358FDD0 BL 0x1C16CF4
	0x0358FDD4 ADRP X0, 0xBA7000
	0x0358FDD8 LDR X0, [X0 + 0xD38]
	0x0358FDDC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X20, 0xE51000
	007 Move W8, [X20+3944]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB8E000
	014 Move X0, [X0+4016]
	015 Call 0x1C17CF4
	016 Move X0, 0xB8D000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3944], W8
	021 Move W20, [X19+64]
	022 Compare W20, 0
	023 JumpIfNotEqual {60}
	024 Move X20, 0xB8D000
	025 Move X20, [X20+1736]
	026 Move W8, 2
	027 Move [X19+64], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move W9, [X8]
	036 Compare W9, 0
	037 JumpIfEqual {52}
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {44}
	041 Call 0x1C17DFC
	042 Move X8, [X20]
	043 Move X8, [X8+184]
	044 Move X0, [X8+24]
	045 Compare X0, 0
	046 JumpIfEqual {110}
	047 Move X8, 0xB8E000
	048 Move X8, [X8+4016]
	049 Move X1, X19
	050 Move X2, [X8]
	051 Call HashSet`1<Object>.Remove, X0, X1
	052 Move X0, X19
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Move X30, [X31+48]
	056 Move X21, [X31+56]
	057 Add X31, X31, 80
	058 Call Promise.InvokeResolveHandlers, X0
	059 Return 
	060 Move X19, 0xB8E000
	061 Move X19, [X19+4024]
	062 Move X0, X19
	063 Call 0x1C17D08
	064 Move TEMP, 0
	065 Not TEMP
	066 Move X21, TEMP
	067 Move [X31+24], X0
	068 Move [X31+32], X21
	069 Add X0, X31, 24
	070 Move X1, X31
	071 Move [X31+40], W20
	072 Call Enum.ToString, X0
	073 Move X20, X0
	074 Move X0, X19
	075 Call 0x1C17D08
	076 Move [X31], X0
	077 Move [X31+8], X21
	078 Add X0, X31, 0
	079 Move X1, X31
	080 Move [X31+16], W31
	081 Call Enum.ToString, X0
	082 Move X19, X0
	083 Move X0, 0xB8E000
	084 Move X0, [X0+4056]
	085 Call 0x1C17D08
	086 Move X21, X0
	087 Move X0, 0xB8E000
	088 Move X0, [X0+4064]
	089 Call 0x1C17D08
	090 Move X2, X0
	091 Move X0, X21
	092 Move X1, X20
	093 Move X3, X19
	094 Move X4, X31
	095 Call String.Concat, X0, X1, X2, X3
	096 Move X19, X0
	097 Move X0, 0xB8E000
	098 Move X0, [X0+4048]
	099 Call 0x1C17D08
	100 Call 0x1C17F10
	101 Move X1, X19
	102 Move X20, X0
	103 Call PromiseStateException..ctor, X0, X1
	104 Move X0, 0xBA8000
	105 Move X0, [X0+3136]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X20
	109 Call 0x1C17DEC
	110 Call 0x1C17F20

Method: System.Void ReportProgress(System.Single progress)

Disassembly:
	0x0358FDE0 ADRP X0, 0xBA7000
	0x0358FDE4 LDR X0, [X0 + 0xD30]
	0x0358FDE8 BL 0x1C16CF4
	0x0358FDEC MOVZ W8, 0x1
	0x0358FDF0 STRB W8, [X21 + 0xF75]
	0x0358FDF4 LDR X0, [X22]
	0x0358FDF8 BL 0x1C16F10
	0x0358FDFC MOV X1, X31
	0x0358FE00 MOV X21, X0
	0x0358FE04 BL 0x33BDD8C
	0x0358FE08 CBZ X21, 0x358FE5C
	0x0358FE0C ADRP X8, 0xBA7000
	0x0358FE10 LDR X8, [X8 + 0xCC0]
	0x0358FE14 STR X20, [X21 + 0x10]
	0x0358FE18 ADRP X20, 0xBA7000
	0x0358FE1C LDR X0, [X8]
	0x0358FE20 LDR X20, [X20 + 0xD38]
	0x0358FE24 BL 0x1C16F10
	0x0358FE28 LDR X2, [X20]
	0x0358FE2C MOV X1, X21
	0x0358FE30 MOV X3, X31
	0x0358FE34 MOV X20, X0
	0x0358FE38 BL 0x2D27AA8
	0x0358FE3C MOV X0, X19
	0x0358FE40 MOV X1, X20
	0x0358FE44 LDP X20, X19, [X31 + 0x20]
	0x0358FE48 LDP X22, X21, [X31 + 0x10]
	0x0358FE4C MOV X2, X31
	0x0358FE50 MOV X3, X31
	0x0358FE54 LDR X30, [X31], #0x30
	0x0358FE58 B 0x358F3E0
	0x0358FE5C BL 0x1C16F20
	0x0358FE60 MOV X1, X31
	0x0358FE64 B 0x33BDD8C
	0x0358FE68 STP X30, X21, [X31 - 0x20]!
	0x0358FE6C STP X20, X19, [X31 + 0x10]
	0x0358FE70 ADRP X20, 0xE50000
	0x0358FE74 ADRP X21, 0xB8C000
	0x0358FE78 LDRB W8, [X20 + 0xF76]
	0x0358FE7C LDR X21, [X21 + 0x6C8]
	0x0358FE80 MOV X19, X0
	0x0358FE84 TBNZ X8, 0x0, 0x358FE9C
	0x0358FE88 ADRP X0, 0xB8C000
	0x0358FE8C LDR X0, [X0 + 0x6C8]
	0x0358FE90 BL 0x1C16CF4
	0x0358FE94 MOVZ W8, 0x1
	0x0358FE98 STRB W8, [X20 + 0xF76]
	0x0358FE9C LDR X0, [X21]
	0x0358FEA0 LDR W8, [X0 + 0xE0]
	0x0358FEA4 CBNZ W8, 0x358FEAC
	0x0358FEA8 BL 0x1C16DFC
	0x0358FEAC MOV X0, X19
	0x0358FEB0 LDP X20, X19, [X31 + 0x10]
	0x0358FEB4 LDP X30, X21, [X31], #0x20
	0x0358FEB8 B 0x358FEBC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move W20, [X0+64]
	007 Compare W20, 0
	008 JumpIfNotEqual {16}
	009 Move X20, [X31+64]
	010 Move X19, [X31+72]
	011 Move X30, [X31+48]
	012 Move X21, [X31+56]
	013 Add X31, X31, 80
	014 Call Promise.InvokeProgressHandlers, X0, V0
	015 Return 
	016 Move X19, 0xB8E000
	017 Move X19, [X19+4024]
	018 Move X0, X19
	019 Call 0x1C17D08
	020 Move TEMP, 0
	021 Not TEMP
	022 Move X21, TEMP
	023 Move [X31+24], X0
	024 Move [X31+32], X21
	025 Add X0, X31, 24
	026 Move X1, X31
	027 Move [X31+40], W20
	028 Call Enum.ToString, X0
	029 Move X20, X0
	030 Move X0, X19
	031 Call 0x1C17D08
	032 Move [X31], X0
	033 Move [X31+8], X21
	034 Add X0, X31, 0
	035 Move X1, X31
	036 Move [X31+16], W31
	037 Call Enum.ToString, X0
	038 Move X19, X0
	039 Move X0, 0xB8E000
	040 Move X0, [X0+4072]
	041 Call 0x1C17D08
	042 Move X21, X0
	043 Move X0, 0xB8E000
	044 Move X0, [X0+4080]
	045 Call 0x1C17D08
	046 Move X2, X0
	047 Move X0, X21
	048 Move X1, X20
	049 Move X3, X19
	050 Move X4, X31
	051 Call String.Concat, X0, X1, X2, X3
	052 Move X19, X0
	053 Move X0, 0xB8E000
	054 Move X0, [X0+4048]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X1, X19
	058 Move X20, X0
	059 Call PromiseStateException..ctor, X0, X1
	060 Move X0, 0xBA8000
	061 Move X0, [X0+3144]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X20
	065 Call 0x1C17DEC

Method: System.Void Done(System.Action onResolved, System.Action`1<System.Exception> onRejected)

Disassembly:
	0x0358FEBC STP X30, X23, [X31 - 0x30]!
	0x0358FEC0 STP X22, X21, [X31 + 0x10]
	0x0358FEC4 STP X20, X19, [X31 + 0x20]
	0x0358FEC8 ADRP X19, 0xE50000
	0x0358FECC ADRP X22, 0xBA7000
	0x0358FED0 ADRP X21, 0xBA7000
	0x0358FED4 LDRB W8, [X19 + 0xF77]
	0x0358FED8 LDR X22, [X22 + 0xD40]
	0x0358FEDC LDR X21, [X21 + 0xCD8]
	0x0358FEE0 MOV X20, X0
	0x0358FEE4 TBNZ X8, 0x0, 0x358FF50
	0x0358FEE8 ADRP X0, 0xBA7000
	0x0358FEEC LDR X0, [X0 + 0xCE0]
	0x0358FEF0 BL 0x1C16CF4
	0x0358FEF4 ADRP X0, 0xBA7000
	0x0358FEF8 LDR X0, [X0 + 0xCE8]
	0x0358FEFC BL 0x1C16CF4
	0x0358FF00 ADRP X0, 0xBA7000
	0x0358FF04 LDR X0, [X0 + 0xCD8]
	0x0358FF08 BL 0x1C16CF4
	0x0358FF0C ADRP X0, 0xB8C000
	0x0358FF10 LDR X0, [X0 + 0x6C8]
	0x0358FF14 BL 0x1C16CF4
	0x0358FF18 ADRP X0, 0xB64000
	0x0358FF1C LDR X0, [X0 + 0x638]
	0x0358FF20 BL 0x1C16CF4
	0x0358FF24 ADRP X0, 0xBA7000
	0x0358FF28 LDR X0, [X0 + 0xD48]
	0x0358FF2C BL 0x1C16CF4
	0x0358FF30 ADRP X0, 0xBA7000
	0x0358FF34 LDR X0, [X0 + 0xD40]
	0x0358FF38 BL 0x1C16CF4
	0x0358FF3C ADRP X0, 0xB8E000
	0x0358FF40 LDR X0, [X0]
	0x0358FF44 BL 0x1C16CF4
	0x0358FF48 MOVZ W8, 0x1
	0x0358FF4C STRB W8, [X19 + 0xF77]
	0x0358FF50 LDR X0, [X22]
	0x0358FF54 BL 0x1C16F10
	0x0358FF58 MOV X1, X31
	0x0358FF5C MOV X19, X0
	0x0358FF60 BL 0x33BDD8C
	0x0358FF64 LDR X1, [X21]
	0x0358FF68 MOV X0, X20
	0x0358FF6C BL 0x21D577C
	0x0358FF70 CBZ X0, 0x3590024
	0x0358FF74 LDR X8, [X0 + 0x18]
	0x0358FF78 MOV X20, X0
	0x0358FF7C CBZ X8, 0x3590028
	0x0358FF80 ADRP X8, 0xB8C000
	0x0358FF84 LDR X8, [X8 + 0x6C8]
	0x0358FF88 LDR X0, [X8]
	0x0358FF8C BL 0x1C16F10
	0x0358FF90 MOV X21, X0
	0x0358FF94 BL 0x358D56C
	0x0358FF98 CBZ X19, 0x3590024
	0x0358FF9C STR X21, [X19 + 0x18]
	0x0358FFA0 CBZ X21, 0x3590024
	0x0358FFA4 ADRP X8, 0xB8E000
	0x0358FFA8 LDR X8, [X8]
	0x0358FFAC ADRP X9, 0xB64000
	0x0358FFB0 ADRP X22, 0xBA7000
	0x0358FFB4 ADRP X23, 0xBA7000
	0x0358FFB8 LDR X8, [X8]
	0x0358FFBC LDR X9, [X9 + 0x638]
	0x0358FFC0 STR X8, [X21 + 0x38]
	0x0358FFC4 LDR X0, [X9]
	0x0358FFC8 LDR W1, [X20 + 0x18]
	0x0358FFCC ADRP X21, 0xBA7000
	0x0358FFD0 LDR X21, [X21 + 0xCE0]
	0x0358FFD4 LDR X22, [X22 + 0xD48]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xE51000
	009 Move X23, 0xB68000
	010 Move X22, 0xBA8000
	011 Move W8, [X24+3945]
	012 Move X23, [X23+712]
	013 Move X22, [X22+3152]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xB68000
	022 Move X0, [X0+712]
	023 Call 0x1C17CF4
	024 Move X0, 0xB8E000
	025 Move X0, [X0+704]
	026 Call 0x1C17CF4
	027 Move X0, 0xBA8000
	028 Move X0, [X0+3152]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X24+3945], W8
	032 Move X0, X21
	033 Move X1, X20
	034 Move X2, X19
	035 Move X3, X31
	036 Call Promise.Then, X0, X1, X2, X3
	037 Move X8, [X23]
	038 Move X19, X0
	039 Move X0, X8
	040 Call 0x1C17F10
	041 Move X2, [X22]
	042 Move X1, X21
	043 Move X3, X31
	044 Move X20, X0
	045 Call Action`1<Object>..ctor, X0, X1, X2
	046 Compare X19, 0
	047 JumpIfEqual {80}
	048 Move X10, 0xB8E000
	049 Move X8, [X19]
	050 Move X10, [X10+704]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 5
	062 Move X0, X19
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 5
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X3, [X0]
	069 Move X2, [X0+8]
	070 Move X0, X19
	071 Move X1, X20
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 CallNoReturn X3
	080 Call 0x1C17F20

Method: System.Void Done(System.Action onResolved)

Disassembly:
	0x0358FFE0 STR X0, [X19 + 0x10]
	0x0358FFE4 LDR X0, [X21]
	0x0358FFE8 BL 0x1C16F10
	0x0358FFEC LDR X2, [X22]
	0x0358FFF0 MOV X1, X19
	0x0358FFF4 MOV X3, X31
	0x0358FFF8 MOV X21, X0
	0x0358FFFC BL 0x2A7689C
	0x03590000 LDR X2, [X23]
	0x03590004 MOV X0, X20
	0x03590008 MOV X1, X21
	0x0359000C BL 0x21DB000
	0x03590010 LDR X0, [X19 + 0x18]
	0x03590014 LDP X20, X19, [X31 + 0x20]
	0x03590018 LDP X22, X21, [X31 + 0x10]
	0x0359001C LDP X30, X23, [X31], #0x30
	0x03590020 RET
	0x03590024 BL 0x1C16F20
	0x03590028 ADRP X0, 0xB63000
	0x0359002C LDR X0, [X0 + 0x5B0]
	0x03590030 BL 0x1C16D08
	0x03590034 BL 0x1C16F10
	0x03590038 MOV X19, X0
	0x0359003C ADRP X0, 0xB8D000
	0x03590040 LDR X0, [X0 + 0x8]
	0x03590044 BL 0x1C16D08
	0x03590048 MOV X1, X0
	0x0359004C MOV X0, X19
	0x03590050 MOV X2, X31
	0x03590054 BL 0x337DF1C
	0x03590058 ADRP X0, 0xBA6000
	0x0359005C LDR X0, [X0 + 0xD50]
	0x03590060 BL 0x1C16D08
	0x03590064 MOV X1, X0
	0x03590068 MOV X0, X19
	0x0359006C BL 0x1C16DEC
	0x03590070 MOV X1, X31
	0x03590074 B 0x33BDD8C
	0x03590078 STP X30, X21, [X31 - 0x20]!
	0x0359007C STP X20, X19, [X31 + 0x10]
	0x03590080 ADRP X20, 0xE4F000
	0x03590084 ADRP X21, 0xB8B000
	0x03590088 LDRB W8, [X20 + 0xF79]
	0x0359008C LDR X21, [X21 + 0x6C8]
	0x03590090 MOV X19, X0
	0x03590094 TBNZ X8, 0x0, 0x35900AC
	0x03590098 ADRP X0, 0xB8B000
	0x0359009C LDR X0, [X0 + 0x6C8]
	0x035900A0 BL 0x1C16CF4
	0x035900A4 MOVZ W8, 0x1
	0x035900A8 STRB W8, [X20 + 0xF79]
	0x035900AC LDR X0, [X21]
	0x035900B0 BL 0x1C16F10
	0x035900B4 MOV X20, X0
	0x035900B8 BL 0x358D56C
	0x035900BC CBZ X20, 0x35900DC
	0x035900C0 MOV X0, X20
	0x035900C4 MOV X1, X19
	0x035900C8 BL 0x358E1F0
	0x035900CC MOV X0, X20
	0x035900D0 LDP X20, X19, [X31 + 0x10]
	0x035900D4 LDP X30, X21, [X31], #0x20
	0x035900D8 RET
	0x035900DC BL 0x1C16F20
	0x035900E0 STP X30, X23, [X31 - 0x30]!
	0x035900E4 STP X22, X21, [X31 + 0x10]
	0x035900E8 STP X20, X19, [X31 + 0x20]
	0x035900EC ADRP X20, 0xE4F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xE51000
	008 Move X22, 0xB68000
	009 Move X20, 0xBA8000
	010 Move W8, [X23+3946]
	011 Move X22, [X22+712]
	012 Move X20, [X20+3160]
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xB67000
	020 Move X0, [X0+712]
	021 Call 0x1C17CF4
	022 Move X0, 0xB8D000
	023 Move X0, [X0+704]
	024 Call 0x1C17CF4
	025 Move X0, 0xBA7000
	026 Move X0, [X0+3160]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+3946], W8
	030 Move X0, X21
	031 Move X1, X19
	032 Move X2, X31
	033 Move X3, X31
	034 Call Promise.Then, X0, X1, X2, X3
	035 Move X8, [X22]
	036 Move X19, X0
	037 Move X0, X8
	038 Call 0x1C17F10
	039 Move X2, [X20]
	040 Move X1, X21
	041 Move X3, X31
	042 Move X20, X0
	043 Call Action`1<Object>..ctor, X0, X1, X2
	044 Compare X19, 0
	045 JumpIfEqual {77}
	046 Move X10, 0xB8D000
	047 Move X8, [X19]
	048 Move X10, [X10+704]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 5
	060 Move X0, X19
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 5
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X3, [X0]
	067 Move X2, [X0+8]
	068 Move X0, X19
	069 Move X1, X20
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 CallNoReturn X3
	077 Call 0x1C17F20

Method: System.Void Done()

Disassembly:
	0x035900FC MOV X21, X1
	0x03590100 MOV X19, X0
	0x03590104 TBNZ X8, 0x0, 0x3590158
	0x03590108 ADRP X0, 0xB66000
	0x0359010C LDR X0, [X0 + 0x2C8]
	0x03590110 BL 0x1C16CF4
	0x03590114 ADRP X0, 0xB64000
	0x03590118 LDR X0, [X0 + 0xE70]
	0x0359011C BL 0x1C16CF4
	0x03590120 ADRP X0, 0xB8B000
	0x03590124 LDR X0, [X0 + 0x6C8]
	0x03590128 BL 0x1C16CF4
	0x0359012C ADRP X0, 0xBA6000
	0x03590130 LDR X0, [X0 + 0xD60]
	0x03590134 BL 0x1C16CF4
	0x03590138 ADRP X0, 0xBA6000
	0x0359013C LDR X0, [X0 + 0xD68]
	0x03590140 BL 0x1C16CF4
	0x03590144 ADRP X0, 0xBA6000
	0x03590148 LDR X0, [X0 + 0xD58]
	0x0359014C BL 0x1C16CF4
	0x03590150 MOVZ W8, 0x1
	0x03590154 STRB W8, [X20 + 0xF7A]
	0x03590158 LDR X0, [X22]
	0x0359015C BL 0x1C16F10
	0x03590160 MOV X1, X31
	0x03590164 MOV X20, X0
	0x03590168 BL 0x33BDD8C
	0x0359016C CBZ X20, 0x3590238
	0x03590170 ADRP X8, 0xB8B000
	0x03590174 LDR X8, [X8 + 0x6C8]
	0x03590178 STR X21, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE50000
	007 Move X22, 0xB67000
	008 Move X20, 0xBA7000
	009 Move W8, [X21+3947]
	010 Move X22, [X22+712]
	011 Move X20, [X20+3168]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB67000
	018 Move X0, [X0+712]
	019 Call 0x1C17CF4
	020 Move X0, 0xBA7000
	021 Move X0, [X0+3168]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3947], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X2, [X20]
	028 Move X1, X19
	029 Move X3, X31
	030 Move X20, X0
	031 Call Action`1<Object>..ctor, X0, X1, X2
	032 Move X0, X19
	033 Move X1, X20
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]

Method: RSG.IPromise WithName(System.String name)

Disassembly:
	0x0359032C MOV X1, X21
	0x03590330 MOV X3, X31

ISIL:
	001 Move [X0+56], X1
	002 Return X0

Method: RSG.IPromise Catch(System.Action`1<System.Exception> onRejected)

Disassembly:
	0x0359017C LDR X0, [X8]
	0x03590180 BL 0x1C16F10
	0x03590184 MOV X21, X0
	0x03590188 BL 0x358D56C
	0x0359018C STR X21, [X20 + 0x10]
	0x03590190 CBZ X21, 0x3590238
	0x03590194 LDR X8, [X19 + 0x38]
	0x03590198 ADRP X9, 0xB64000
	0x0359019C LDR X9, [X9 + 0xE70]
	0x035901A0 ADRP X22, 0xB66000
	0x035901A4 STR X8, [X21 + 0x38]
	0x035901A8 ADRP X21, 0xBA6000
	0x035901AC LDR X0, [X9]
	0x035901B0 ADRP X23, 0xBA6000
	0x035901B4 LDR X21, [X21 + 0xD60]
	0x035901B8 LDR X22, [X22 + 0x2C8]
	0x035901BC LDR X23, [X23 + 0xD68]
	0x035901C0 BL 0x1C16F10
	0x035901C4 LDR X2, [X21]
	0x035901C8 MOV X1, X20
	0x035901CC MOV X3, X31
	0x035901D0 MOV X21, X0
	0x035901D4 BL 0x3314368
	0x035901D8 MOV X0, X19
	0x035901DC MOV X1, X21
	0x035901E0 MOV X2, X31
	0x035901E4 MOV X3, X31
	0x035901E8 BL 0x358F550
	0x035901EC LDR X0, [X22]
	0x035901F0 BL 0x1C16F10
	0x035901F4 LDR X2, [X23]
	0x035901F8 MOV X1, X20
	0x035901FC MOV X3, X31
	0x03590200 MOV X21, X0
	0x03590204 BL 0x2A6B948
	0x03590208 MOV X0, X19
	0x0359020C MOV X1, X21
	0x03590210 BL 0x358F17C
	0x03590214 LDR X0, [X20 + 0x10]
	0x03590218 CBZ X0, 0x3590238
	0x0359021C LDR X1, [X20 + 0x18]
	0x03590220 LDP X20, X19, [X31 + 0x20]
	0x03590224 LDP X22, X21, [X31 + 0x10]
	0x03590228 MOV X2, X31
	0x0359022C MOV X3, X31
	0x03590230 LDP X30, X23, [X31], #0x30
	0x03590234 B 0x358F550
	0x03590238 BL 0x1C16F20
	0x0359023C MOV X1, X31
	0x03590240 B 0x33BDD8C
	0x03590244 STR X30, [X31 - 0x40]!
	0x03590248 STP X24, X23, [X31 + 0x10]
	0x0359024C STP X22, X21, [X31 + 0x20]
	0x03590250 STP X20, X19, [X31 + 0x30]
	0x03590254 ADRP X21, 0xE4F000
	0x03590258 ADRP X23, 0xBA6000
	0x0359025C ADRP X22, 0xB8B000
	0x03590260 LDRB W8, [X21 + 0xF7B]
	0x03590264 LDR X23, [X23 + 0xD70]
	0x03590268 LDR X22, [X22 + 0x6C8]
	0x0359026C MOV X19, X1
	0x03590270 MOV X20, X0
	0x03590274 TBNZ X8, 0x0, 0x35902C8
	0x03590278 ADRP X0, 0xB66000
	0x0359027C LDR X0, [X0 + 0x2C8]
	0x03590280 BL 0x1C16CF4
	0x03590284 ADRP X0, 0xB64000
	0x03590288 LDR X0, [X0 + 0xE70]
	0x0359028C BL 0x1C16CF4
	0x03590290 ADRP X0, 0xB8B000
	0x03590294 LDR X0, [X0 + 0x6C8]
	0x03590298 BL 0x1C16CF4
	0x0359029C ADRP X0, 0xBA6000
	0x035902A0 LDR X0, [X0 + 0xD78]
	0x035902A4 BL 0x1C16CF4
	0x035902A8 ADRP X0, 0xBA6000
	0x035902AC LDR X0, [X0 + 0xD80]
	0x035902B0 BL 0x1C16CF4
	0x035902B4 ADRP X0, 0xBA6000
	0x035902B8 LDR X0, [X0 + 0xD70]
	0x035902BC BL 0x1C16CF4
	0x035902C0 MOVZ W8, 0x1
	0x035902C4 STRB W8, [X21 + 0xF7B]
	0x035902C8 LDR X0, [X23]
	0x035902CC BL 0x1C16F10
	0x035902D0 MOV X1, X31
	0x035902D4 MOV X21, X0
	0x035902D8 BL 0x33BDD8C
	0x035902DC LDR X0, [X22]
	0x035902E0 BL 0x1C16F10
	0x035902E4 MOV X22, X0
	0x035902E8 BL 0x358D56C
	0x035902EC CBZ X21, 0x35903A0
	0x035902F0 STR X22, [X21 + 0x10]
	0x035902F4 CBZ X22, 0x35903A0
	0x035902F8 LDR X8, [X20 + 0x38]
	0x035902FC ADRP X9, 0xB64000
	0x03590300 LDR X9, [X9 + 0xE70]
	0x03590304 ADRP X23, 0xB66000
	0x03590308 STR X8, [X22 + 0x38]
	0x0359030C ADRP X22, 0xBA6000
	0x03590310 LDR X0, [X9]
	0x03590314 ADRP X24, 0xBA6000
	0x03590318 LDR X22, [X22 + 0xD78]
	0x0359031C LDR X23, [X23 + 0x2C8]
	0x03590320 LDR X24, [X24 + 0xD80]
	0x03590324 BL 0x1C16F10
	0x03590328 LDR X2, [X22]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xE50000
	011 Move X22, 0xBA7000
	012 Move W8, [X20+3948]
	013 Move X22, [X22+3176]
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0xB66000
	021 Move X0, [X0+1456]
	022 Call 0x1C17CF4
	023 Move X0, 0xB67000
	024 Move X0, [X0+712]
	025 Call 0x1C17CF4
	026 Move X0, 0xB65000
	027 Move X0, [X0+3696]
	028 Call 0x1C17CF4
	029 Move X0, 0xB8C000
	030 Move X0, [X0+1736]
	031 Call 0x1C17CF4
	032 Move X0, 0xBA7000
	033 Move X0, [X0+3184]
	034 Call 0x1C17CF4
	035 Move X0, 0xBA7000
	036 Move X0, [X0+3192]
	037 Call 0x1C17CF4
	038 Move X0, 0xBA7000
	039 Move X0, [X0+3200]
	040 Call 0x1C17CF4
	041 Move X0, 0xBA7000
	042 Move X0, [X0+3176]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+3948], W8
	046 Move X0, [X22]
	047 Call 0x1C17F10
	048 Move X1, X31
	049 Move X20, X0
	050 Call Object..ctor, X0
	051 Compare X20, 0
	052 JumpIfEqual {122}
	053 Move X8, 0xB8C000
	054 Move X8, [X8+1736]
	055 Move [X20+24], X21
	056 Move X0, [X8]
	057 Call 0x1C17F10
	058 Move X21, X0
	059 Call Promise..ctor, X0
	060 Move [X20+16], X21
	061 Compare X21, 0
	062 JumpIfEqual {122}
	063 Move X8, [X19+56]
	064 Move X9, 0xB65000
	065 Move X9, [X9+3696]
	066 Move X22, 0xBA7000
	067 Move X23, 0xB67000
	068 Move X22, [X22+3184]
	069 Move X23, [X23+712]
	070 Move [X21+56], X8
	071 Move X0, [X9]
	072 Move X24, 0xBA7000
	073 Move X25, 0xB66000
	074 Move X26, 0xBA7000
	075 Move X24, [X24+3192]
	076 Move X25, [X25+1456]
	077 Move X26, [X26+3200]
	078 Call 0x1C17F10
	079 Move X2, [X22]
	080 Move X1, X20
	081 Move X3, X31
	082 Move X21, X0
	083 Call Action..ctor, X0, X1, X2
	084 Move X0, [X23]
	085 Call 0x1C17F10
	086 Move X2, [X24]
	087 Move X1, X20
	088 Move X3, X31
	089 Move X22, X0
	090 Call Action`1<Object>..ctor, X0, X1, X2
	091 Move X1, [X20+16]
	092 Move X0, X19
	093 Move X2, X21
	094 Move X3, X22
	095 Call Promise.ActionHandlers, X0, X1, X2, X3
	096 Move X0, [X25]
	097 Move X21, [X20+16]
	098 Call 0x1C17F10
	099 Move X2, [X26]
	100 Move X1, X20
	101 Move X3, X31
	102 Move X22, X0
	103 Call Action`1<Single>..ctor, X0, X1, X2
	104 Move W8, [X19+64]
	105 Compare W8, 0
	106 JumpIfNotEqual {111}
	107 Move X0, X19
	108 Move X1, X22
	109 Move X2, X21
	110 Call Promise.AddProgressHandler, X0, X1, X2
	111 Move X0, [X20+16]
	112 Move X20, [X31+64]
	113 Move X19, [X31+72]
	114 Move X22, [X31+48]
	115 Move X21, [X31+56]
	116 Move X24, [X31+32]
	117 Move X23, [X31+40]
	118 Move X26, [X31+16]
	119 Move X25, [X31+24]
	120 Move X30, [X31+80]
	121 Return X0
	122 Call 0x1C17F20

Method: RSG.IPromise`1<ConvertedT> Then(System.Func`1<RSG.IPromise`1<ConvertedT>> onResolved)

Disassembly:
	0x02236EA8 CBNZ X8, 0x2236EC8
	0x02236EAC ADRP X0, 0x1EE6000
	0x02236EB0 LDR X0, [X0 + 0x2C8]
	0x02236EB4 BL 0x1C16CF4
	0x02236EB8 LDR X8, [X19 + 0x38]
	0x02236EBC CBNZ X8, 0x2236EC8
	0x02236EC0 MOV X0, X19
	0x02236EC4 BL 0x1C5C6E0
	0x02236EC8 ADRP X8, 0x1EE6000
	0x02236ECC LDR X8, [X8 + 0x2C8]
	0x02236ED0 LDR X0, [X8]
	0x02236ED4 LDR W8, [X0 + 0xE0]
	0x02236ED8 CBNZ W8, 0x2236EE0
	0x02236EDC BL 0x1C16DFC
	0x02236EE0 LDR X8, [X19 + 0x38]
	0x02236EE4 MOV X0, X20
	0x02236EE8 LDP X20, X19, [X31 + 0x10]
	0x02236EEC LDR X1, [X8 + 0x8]
	0x02236EF0 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X4, [X8+8]
	015 Move X0, X20
	016 Move X1, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X5, [X4]
	020 Move X2, X31
	021 Move X3, X31
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 CallNoReturn X5

Method: RSG.IPromise Then(System.Func`1<RSG.IPromise> onResolved)

Disassembly:
	0x035903D4 RET
	0x035903D8 STP X30, X23, [X31 - 0x30]!
	0x035903DC STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X2, X31
	002 Move X3, X31

Method: RSG.IPromise Then(System.Action onResolved)

Disassembly:
	0x035900F0 ADRP X22, 0xBA6000
	0x035900F4 LDRB W8, [X20 + 0xF7A]
	0x035900F8 LDR X22, [X22 + 0xD58]

ISIL:
	001 Move X2, X31
	002 Move X3, X31
	003 Call Promise.Then, X0, X1, X2, X3
	004 Return X0

Method: RSG.IPromise`1<ConvertedT> Then(System.Func`1<RSG.IPromise`1<ConvertedT>> onResolved, System.Func`2<System.Exception, RSG.IPromise`1<ConvertedT>> onRejected)

Disassembly:
	0x02236EF4 B 0x223A2AC
	0x02236EF8 STR X30, [X31 - 0x20]!
	0x02236EFC STP X20, X19, [X31 + 0x10]
	0x02236F00 LDR X8, [X1 + 0x38]
	0x02236F04 MOV X19, X1
	0x02236F08 MOV X20, X0
	0x02236F0C CBNZ X8, 0x2236F2C
	0x02236F10 ADRP X0, 0x1EE6000
	0x02236F14 LDR X0, [X0 + 0x2C8]
	0x02236F18 BL 0x1C16CF4
	0x02236F1C LDR X8, [X19 + 0x38]
	0x02236F20 CBNZ X8, 0x2236F2C
	0x02236F24 MOV X0, X19
	0x02236F28 BL 0x1C5C6E0
	0x02236F2C ADRP X8, 0x1EE6000
	0x02236F30 LDR X8, [X8 + 0x2C8]
	0x02236F34 LDR X0, [X8]
	0x02236F38 LDR W8, [X0 + 0xE0]
	0x02236F3C CBNZ W8, 0x2236F44
	0x02236F40 BL 0x1C16DFC
	0x02236F44 LDR X8, [X19 + 0x38]
	0x02236F48 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {16}
	012 Move X0, X3
	013 Move X22, X3
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X4, [X8+16]
	017 Move X0, X21
	018 Move X1, X20
	019 Move X2, X19
	020 Move X5, [X4]
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X3, X31
	026 Move X30, [X31+48]
	027 CallNoReturn X5

Method: RSG.IPromise Then(System.Func`1<RSG.IPromise> onResolved, System.Action`1<System.Exception> onRejected)

Disassembly:
	0x035906C0 B 0x358EC6C
	0x035906C4 BL 0x1C16F20

ISIL:
	001 Move X3, X31
	002 Call Promise.Then, X0, X1, X2, X3
	003 Return X0

Method: RSG.IPromise Then(System.Action onResolved, System.Action`1<System.Exception> onRejected)

Disassembly:
	0x0358FFD8 LDR X23, [X23 + 0xCE8]
	0x0358FFDC BL 0x1C16D6C

ISIL:
	001 Move X3, X31
	002 Call Promise.Then, X0, X1, X2, X3
	003 Return X0

Method: RSG.IPromise`1<ConvertedT> Then(System.Func`1<RSG.IPromise`1<ConvertedT>> onResolved, System.Func`2<System.Exception, RSG.IPromise`1<ConvertedT>> onRejected, System.Action`1<System.Single> onProgress)

Disassembly:
	0x02236F4C LDP X20, X19, [X31 + 0x10]
	0x02236F50 LDR X1, [X8 + 0x8]
	0x02236F54 LDR X30, [X31], #0x20
	0x02236F58 B 0x223A854
	0x02236F5C STR X30, [X31 - 0x20]!
	0x02236F60 STP X20, X19, [X31 + 0x10]
	0x02236F64 LDR X8, [X1 + 0x38]
	0x02236F68 MOV X20, X1
	0x02236F6C MOV X19, X0
	0x02236F70 CBNZ X8, 0x2236F90
	0x02236F74 ADRP X0, 0x1EE6000
	0x02236F78 LDR X0, [X0 + 0x2C8]
	0x02236F7C BL 0x1C16CF4
	0x02236F80 LDR X8, [X20 + 0x38]
	0x02236F84 CBNZ X8, 0x2236F90
	0x02236F88 MOV X0, X20
	0x02236F8C BL 0x1C5C6E0
	0x02236F90 ADRP X8, 0x1EE6000
	0x02236F94 LDR X8, [X8 + 0x2C8]
	0x02236F98 LDR X0, [X8]
	0x02236F9C LDR W8, [X0 + 0xE0]
	0x02236FA0 CBNZ W8, 0x2236FA8
	0x02236FA4 BL 0x1C16DFC
	0x02236FA8 LDR X8, [X20 + 0x38]
	0x02236FAC MOV X0, X19
	0x02236FB0 LDP X20, X19, [X31 + 0x10]
	0x02236FB4 LDR X1, [X8 + 0x8]
	0x02236FB8 LDR X2, [X1]
	0x02236FBC LDR X30, [X31], #0x20
	0x02236FC0 BR X2
	0x02236FC4 STR X30, [X31 - 0x40]!
	0x02236FC8 STP X24, X23, [X31 + 0x10]
	0x02236FCC STP X22, X21, [X31 + 0x20]
	0x02236FD0 STP X20, X19, [X31 + 0x30]
	0x02236FD4 LDR X8, [X1 + 0x38]
	0x02236FD8 MOV X19, X1
	0x02236FDC MOV X20, X0
	0x02236FE0 CBNZ X8, 0x223704C
	0x02236FE4 ADRP X0, 0x1EE6000
	0x02236FE8 LDR X0, [X0 + 0x2D0]
	0x02236FEC BL 0x1C16CF4
	0x02236FF0 ADRP X0, 0x1EE6000
	0x02236FF4 LDR X0, [X0 + 0x2D8]
	0x02236FF8 BL 0x1C16CF4
	0x02236FFC ADRP X0, 0x1EE6000
	0x02237000 LDR X0, [X0 + 0x2E0]
	0x02237004 BL 0x1C16CF4
	0x02237008 ADRP X0, 0x1EE5000
	0x0223700C LDR X0, [X0 + 0x2E8]
	0x02237010 BL 0x1C16CF4
	0x02237014 ADRP X0, 0x1EC6000
	0x02237018 LDR X0, [X0 + 0x938]
	0x0223701C BL 0x1C16CF4
	0x02237020 ADRP X0, 0x1EE5000
	0x02237024 LDR X0, [X0 + 0x2C8]
	0x02237028 BL 0x1C16CF4
	0x0223702C ADRP X0, 0x1EBC000
	0x02237030 LDR X0, [X0 + 0x6C0]
	0x02237034 BL 0x1C16CF4
	0x02237038 LDR X8, [X19 + 0x38]
	0x0223703C CBNZ X8, 0x223704C
	0x02237040 MOV X0, X19
	0x02237044 BL 0x1C5C6E0
	0x02237048 LDR X8, [X19 + 0x38]
	0x0223704C LDR X0, [X8 + 0x8]
	0x02237050 LDRB W8, [X0 + 0x135]
	0x02237054 TBNZ X8, 0x0, 0x223705C
	0x02237058 BL 0x1C5C684
	0x0223705C LDR W8, [X0 + 0xE0]
	0x02237060 CBNZ W8, 0x2237068
	0x02237064 BL 0x1C16DFC
	0x02237068 LDR X8, [X19 + 0x38]
	0x0223706C LDR X21, [X8]
	0x02237070 LDR X0, [X21 + 0x20]
	0x02237074 LDRB W8, [X0 + 0x135]
	0x02237078 TBNZ X8, 0x0, 0x2237080
	0x0223707C BL 0x1C5C684
	0x02237080 LDR X8, [X0 + 0xC0]
	0x02237084 LDR X0, [X8 + 0x8]
	0x02237088 LDRB W8, [X0 + 0x135]
	0x0223708C TBNZ X8, 0x0, 0x2237094
	0x02237090 BL 0x1C5C684
	0x02237094 LDR W8, [X0 + 0xE0]
	0x02237098 CBNZ W8, 0x22370A0
	0x0223709C BL 0x1C16DFC
	0x022370A0 LDR X0, [X21 + 0x20]
	0x022370A4 LDRB W8, [X0 + 0x135]
	0x022370A8 TBNZ X8, 0x0, 0x22370B0
	0x022370AC BL 0x1C5C684
	0x022370B0 LDR X8, [X0 + 0xC0]
	0x022370B4 LDR X0, [X8 + 0x8]
	0x022370B8 LDRB W8, [X0 + 0x135]
	0x022370BC TBNZ X8, 0x0, 0x22370C4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X21, X4
	010 Move X19, X3
	011 Move X23, X2
	012 Move X24, X1
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {28}
	016 Move X0, 0x1EC1000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move X0, 0x1EBF000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X8, [X21+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {28}
	025 Move X0, X21
	026 Call 0x1C5D6E0
	027 Move X8, [X21+56]
	028 Move X0, [X8]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Call 0x1C17F10
	036 Move X8, [X21+56]
	037 Move X22, X0
	038 Move X1, [X8+8]
	039 Move X8, [X1]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X22, 0
	042 JumpIfEqual {110}
	043 Move [X22+16], X24
	044 Move [X22+32], X23
	045 Move X8, [X21+56]
	046 Move X0, [X8+32]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Call 0x1C17F10
	054 Move X8, [X21+56]
	055 Move X23, X0
	056 Move X1, [X8+40]
	057 Move X8, [X1]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move [X22+24], X23
	060 Compare X23, 0
	061 JumpIfEqual {110}
	062 Move X8, [X21+56]
	063 Move X1, [X20+56]
	064 Move X0, X23
	065 Move X2, [X8+48]
	066 Move X8, [X2]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, 0x1EBE000
	069 Move X8, [X8+3696]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X8, [X21+56]
	073 Move X1, X22
	074 Move X3, X31
	075 Move X23, X0
	076 Move X2, [X8+64]
	077 Call Action..ctor, X0, X1, X2
	078 Move X8, 0x1EC0000
	079 Move X8, [X8+712]
	080 Move X0, [X8]
	081 Call 0x1C17F10
	082 Move X8, [X21+56]
	083 Move X1, X22
	084 Move X3, X31
	085 Move X21, X0
	086 Move X2, [X8+72]
	087 Call Action`1<Object>..ctor, X0, X1, X2
	088 Move X1, [X22+24]
	089 Move X0, X20
	090 Move X2, X23
	091 Move X3, X21
	092 Move X4, X31
	093 Call Promise.ActionHandlers, X0, X1, X2, X3
	094 Compare X19, 0
	095 JumpIfEqual {101}
	096 Move X0, X20
	097 Move X1, X20
	098 Move X2, X19
	099 Move X3, X31
	100 Call Promise.ProgressHandlers, X0, X1, X2
	101 Move X0, [X22+24]
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move X30, [X31+64]
	109 Return X0
	110 Call 0x1C17F20

Method: RSG.IPromise Then(System.Func`1<RSG.IPromise> onResolved, System.Action`1<System.Exception> onRejected, System.Action`1<System.Single> onProgress)

Disassembly:
	0x035903E0 STP X20, X19, [X31 + 0x20]
	0x035903E4 ADRP X22, 0xE4F000
	0x035903E8 ADRP X21, 0xB8B000
	0x035903EC LDRB W8, [X22 + 0xF7C]
	0x035903F0 LDR X21, [X21 + 0x6C8]
	0x035903F4 MOV X20, X1
	0x035903F8 MOV X19, X0
	0x035903FC TBNZ X8, 0x0, 0x3590420
	0x03590400 ADRP X0, 0xBA6000
	0x03590404 LDR X0, [X0 + 0xD88]
	0x03590408 BL 0x1C16CF4
	0x0359040C ADRP X0, 0xB8B000
	0x03590410 LDR X0, [X0 + 0x6C8]
	0x03590414 BL 0x1C16CF4
	0x03590418 MOVZ W8, 0x1
	0x0359041C STRB W8, [X22 + 0xF7C]
	0x03590420 LDR X0, [X21]
	0x03590424 LDR W8, [X0 + 0xE0]
	0x03590428 CBNZ W8, 0x3590434
	0x0359042C BL 0x1C16DFC
	0x03590430 LDR X0, [X21]
	0x03590434 LDR X8, [X0 + 0xB8]
	0x03590438 LDR X22, [X8 + 0x8]
	0x0359043C CBZ X22, 0x359049C
	0x03590440 ADRP X23, 0xBA6000
	0x03590444 LDR W8, [X0 + 0xE0]
	0x03590448 LDR X23, [X23 + 0xD88]
	0x0359044C CBNZ W8, 0x3590460
	0x03590450 BL 0x1C16DFC
	0x03590454 LDR X8, [X21]
	0x03590458 LDR X8, [X8 + 0xB8]
	0x0359045C LDR X22, [X8 + 0x8]
	0x03590460 LDR X0, [X23]
	0x03590464 BL 0x1C16F10
	0x03590468 MOV X1, X20
	0x0359046C MOV X21, X0
	0x03590470 BL 0x358DD14
	0x03590474 CBZ X22, 0x35904AC
	0x03590478 LDR X4, [X22 + 0x18]
	0x0359047C LDR X0, [X22 + 0x40]
	0x03590480 LDR X3, [X22 + 0x28]
	0x03590484 MOV X1, X19
	0x03590488 MOV X2, X21
	0x0359048C LDP X20, X19, [X31 + 0x20]
	0x03590490 LDP X22, X21, [X31 + 0x10]
	0x03590494 LDP X30, X23, [X31], #0x30
	0x03590498 BR X4
	0x0359049C LDP X20, X19, [X31 + 0x20]
	0x035904A0 LDP X22, X21, [X31 + 0x10]
	0x035904A4 LDP X30, X23, [X31], #0x30
	0x035904A8 RET
	0x035904AC BL 0x1C16F20
	0x035904B0 STR X30, [X31 - 0x30]!
	0x035904B4 STP X22, X21, [X31 + 0x10]
	0x035904B8 STP X20, X19, [X31 + 0x20]
	0x035904BC ADRP X22, 0xE4F000
	0x035904C0 ADRP X20, 0xB8B000
	0x035904C4 ADRP X21, 0xBA6000
	0x035904C8 ADRP X19, 0xBA6000
	0x035904CC LDRB W8, [X22 + 0xF7D]
	0x035904D0 LDR X20, [X20 + 0x6C8]
	0x035904D4 LDR X21, [X21 + 0xD90]
	0x035904D8 LDR X19, [X19 + 0xD98]
	0x035904DC TBNZ X8, 0x0, 0x359050C
	0x035904E0 ADRP X0, 0xBA6000
	0x035904E4 LDR X0, [X0 + 0xD98]
	0x035904E8 BL 0x1C16CF4
	0x035904EC ADRP X0, 0xBA6000
	0x035904F0 LDR X0, [X0 + 0xD90]
	0x035904F4 BL 0x1C16CF4
	0x035904F8 ADRP X0, 0xB8B000
	0x035904FC LDR X0, [X0 + 0x6C8]
	0x03590500 BL 0x1C16CF4
	0x03590504 MOVZ W8, 0x1
	0x03590508 STRB W8, [X22 + 0xF7D]
	0x0359050C LDR X8, [X20]
	0x03590510 LDR X8, [X8 + 0xB8]
	0x03590514 STRB W31, [X8]
	0x03590518 LDR X0, [X21]
	0x0359051C BL 0x1C16F10
	0x03590520 LDR X1, [X19]
	0x03590524 MOV X19, X0
	0x03590528 BL 0x2DBDE08
	0x0359052C LDR X8, [X20]
	0x03590530 LDP X22, X21, [X31 + 0x10]
	0x03590534 LDR X8, [X8 + 0xB8]
	0x03590538 STR X19, [X8 + 0x18]
	0x0359053C LDP X20, X19, [X31 + 0x20]
	0x03590540 LDR X30, [X31], #0x30
	0x03590544 RET
	0x03590548 B 0x358E794
	0x0359054C STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE50000
	009 Move X24, 0xBA7000
	010 Move W8, [X21+3949]
	011 Move X24, [X24+3208]
	012 Move X19, X3
	013 Move X22, X2
	014 Move X23, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xB67000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0xB65000
	024 Move X0, [X0+3696]
	025 Call 0x1C17CF4
	026 Move X0, 0xB8C000
	027 Move X0, [X0+1736]
	028 Call 0x1C17CF4
	029 Move X0, 0xBA7000
	030 Move X0, [X0+3216]
	031 Call 0x1C17CF4
	032 Move X0, 0xBA7000
	033 Move X0, [X0+3224]
	034 Call 0x1C17CF4
	035 Move X0, 0xBA7000
	036 Move X0, [X0+3208]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3949], W8
	040 Move X0, [X24]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X21, X0
	044 Call Object..ctor, X0
	045 Compare X21, 0
	046 JumpIfEqual {105}
	047 Move X8, 0xB8C000
	048 Move X8, [X8+1736]
	049 Move [X21+16], X23
	050 Move [X21+32], X22
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X22, X0
	054 Call Promise..ctor, X0
	055 Move [X21+24], X22
	056 Compare X22, 0
	057 JumpIfEqual {105}
	058 Move X8, [X20+56]
	059 Move X9, 0xB65000
	060 Move X9, [X9+3696]
	061 Move X23, 0xB67000
	062 Move [X22+56], X8
	063 Move X22, 0xBA7000
	064 Move X0, [X9]
	065 Move X24, 0xBA7000
	066 Move X22, [X22+3216]
	067 Move X23, [X23+712]
	068 Move X24, [X24+3224]
	069 Call 0x1C17F10
	070 Move X2, [X22]
	071 Move X1, X21
	072 Move X3, X31
	073 Move X22, X0
	074 Call Action..ctor, X0, X1, X2
	075 Move X0, [X23]
	076 Call 0x1C17F10
	077 Move X2, [X24]
	078 Move X1, X21
	079 Move X3, X31
	080 Move X23, X0
	081 Call Action`1<Object>..ctor, X0, X1, X2
	082 Move X1, [X21+24]
	083 Move X0, X20
	084 Move X2, X22
	085 Move X3, X23
	086 Call Promise.ActionHandlers, X0, X1, X2, X3
	087 Compare X19, 0
	088 JumpIfEqual {96}
	089 Move W8, [X20+64]
	090 Compare W8, 0
	091 JumpIfNotEqual {96}
	092 Move X0, X20
	093 Move X1, X19
	094 Move X2, X20
	095 Call Promise.AddProgressHandler, X0, X1, X2
	096 Move X0, [X21+24]
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Move X30, [X31+64]
	104 Return X0
	105 Call 0x1C17F20

Method: RSG.IPromise Then(System.Action onResolved, System.Action`1<System.Exception> onRejected, System.Action`1<System.Single> onProgress)

Disassembly:
	0x03590550 STP X22, X21, [X31 + 0x10]
	0x03590554 STP X20, X19, [X31 + 0x20]
	0x03590558 ADRP X21, 0xE4F000
	0x0359055C ADRP X22, 0xB8B000
	0x03590560 LDRB W8, [X21 + 0xF7E]
	0x03590564 LDR X22, [X22 + 0x6C8]
	0x03590568 MOV X19, X1
	0x0359056C MOV X20, X0
	0x03590570 TBNZ X8, 0x0, 0x3590588
	0x03590574 ADRP X0, 0xB8B000
	0x03590578 LDR X0, [X0 + 0x6C8]
	0x0359057C BL 0x1C16CF4
	0x03590580 MOVZ W8, 0x1
	0x03590584 STRB W8, [X21 + 0xF7E]
	0x03590588 LDR X0, [X22]
	0x0359058C LDR W8, [X0 + 0xE0]
	0x03590590 CBNZ W8, 0x3590598
	0x03590594 BL 0x1C16DFC
	0x03590598 MOV X0, X20
	0x0359059C MOV X1, X19
	0x035905A0 LDP X20, X19, [X31 + 0x20]
	0x035905A4 LDP X22, X21, [X31 + 0x10]
	0x035905A8 LDR X30, [X31], #0x30
	0x035905AC B 0x35903D8
	0x035905B0 STR X30, [X31 - 0x30]!
	0x035905B4 STP X22, X21, [X31 + 0x10]
	0x035905B8 STP X20, X19, [X31 + 0x20]
	0x035905BC ADRP X21, 0xE4F000
	0x035905C0 ADRP X22, 0xB8B000
	0x035905C4 LDRB W8, [X21 + 0xF7F]
	0x035905C8 LDR X22, [X22 + 0x6C8]
	0x035905CC MOV X19, X1
	0x035905D0 MOV X20, X0
	0x035905D4 TBNZ X8, 0x0, 0x35905EC
	0x035905D8 ADRP X0, 0xB8B000
	0x035905DC LDR X0, [X0 + 0x6C8]
	0x035905E0 BL 0x1C16CF4
	0x035905E4 MOVZ W8, 0x1
	0x035905E8 STRB W8, [X21 + 0xF7F]
	0x035905EC LDR X0, [X22]
	0x035905F0 LDR W8, [X0 + 0xE0]
	0x035905F4 CBNZ W8, 0x35905FC
	0x035905F8 BL 0x1C16DFC
	0x035905FC MOV X0, X20
	0x03590600 MOV X1, X19
	0x03590604 LDP X20, X19, [X31 + 0x20]
	0x03590608 LDP X22, X21, [X31 + 0x10]
	0x0359060C LDR X30, [X31], #0x30
	0x03590610 B 0x35903D8
	0x03590614 STR X30, [X31 - 0x30]!
	0x03590618 STP X22, X21, [X31 + 0x10]
	0x0359061C STP X20, X19, [X31 + 0x20]
	0x03590620 ADRP X21, 0xE4F000
	0x03590624 ADRP X22, 0xB8B000
	0x03590628 LDRB W8, [X21 + 0xF80]
	0x0359062C LDR X22, [X22 + 0x6C8]
	0x03590630 MOV X19, X1
	0x03590634 MOV X20, X0
	0x03590638 TBNZ X8, 0x0, 0x3590650
	0x0359063C ADRP X0, 0xB8B000
	0x03590640 LDR X0, [X0 + 0x6C8]
	0x03590644 BL 0x1C16CF4
	0x03590648 MOVZ W8, 0x1
	0x0359064C STRB W8, [X21 + 0xF80]
	0x03590650 LDR X0, [X22]
	0x03590654 LDR W8, [X0 + 0xE0]
	0x03590658 CBNZ W8, 0x3590660
	0x0359065C BL 0x1C16DFC
	0x03590660 MOV X0, X20
	0x03590664 MOV X1, X19
	0x03590668 LDP X20, X19, [X31 + 0x20]
	0x0359066C LDP X22, X21, [X31 + 0x10]
	0x03590670 LDR X30, [X31], #0x30
	0x03590674 B 0x35903D8
	0x03590678 STR X30, [X31 - 0x10]!
	0x0359067C LDR X8, [X0 + 0x10]
	0x03590680 CBZ X8, 0x3590690
	0x03590684 LDR X3, [X0 + 0x18]
	0x03590688 LDR X30, [X31], #0x10
	0x0359068C B 0x358E678
	0x03590690 BL 0x1C16F20
	0x03590694 STR X30, [X31 - 0x10]!
	0x03590698 LDR X8, [X0 + 0x10]
	0x0359069C CBZ X8, 0x35906AC
	0x035906A0 LDR V0, [X0 + 0x18]
	0x035906A4 LDR X30, [X31], #0x10
	0x035906A8 B 0x358E8AC
	0x035906AC BL 0x1C16F20
	0x035906B0 STR X30, [X31 - 0x10]!
	0x035906B4 LDR X0, [X0 + 0x10]
	0x035906B8 CBZ X0, 0x35906C4
	0x035906BC LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE50000
	009 Move X24, 0xBA7000
	010 Move W8, [X21+3950]
	011 Move X24, [X24+3232]
	012 Move X19, X3
	013 Move X22, X2
	014 Move X23, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xB67000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0xB65000
	024 Move X0, [X0+3696]
	025 Call 0x1C17CF4
	026 Move X0, 0xB8C000
	027 Move X0, [X0+1736]
	028 Call 0x1C17CF4
	029 Move X0, 0xBA7000
	030 Move X0, [X0+3240]
	031 Call 0x1C17CF4
	032 Move X0, 0xBA7000
	033 Move X0, [X0+3248]
	034 Call 0x1C17CF4
	035 Move X0, 0xBA7000
	036 Move X0, [X0+3232]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3950], W8
	040 Move X0, [X24]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X21, X0
	044 Call Object..ctor, X0
	045 Compare X21, 0
	046 JumpIfEqual {105}
	047 Move X8, 0xB8C000
	048 Move X8, [X8+1736]
	049 Move [X21+16], X23
	050 Move [X21+32], X22
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X22, X0
	054 Call Promise..ctor, X0
	055 Move [X21+24], X22
	056 Compare X22, 0
	057 JumpIfEqual {105}
	058 Move X8, [X20+56]
	059 Move X9, 0xB65000
	060 Move X9, [X9+3696]
	061 Move X23, 0xB67000
	062 Move [X22+56], X8
	063 Move X22, 0xBA7000
	064 Move X0, [X9]
	065 Move X24, 0xBA7000
	066 Move X22, [X22+3240]
	067 Move X23, [X23+712]
	068 Move X24, [X24+3248]
	069 Call 0x1C17F10
	070 Move X2, [X22]
	071 Move X1, X21
	072 Move X3, X31
	073 Move X22, X0
	074 Call Action..ctor, X0, X1, X2
	075 Move X0, [X23]
	076 Call 0x1C17F10
	077 Move X2, [X24]
	078 Move X1, X21
	079 Move X3, X31
	080 Move X23, X0
	081 Call Action`1<Object>..ctor, X0, X1, X2
	082 Move X1, [X21+24]
	083 Move X0, X20
	084 Move X2, X22
	085 Move X3, X23
	086 Call Promise.ActionHandlers, X0, X1, X2, X3
	087 Compare X19, 0
	088 JumpIfEqual {96}
	089 Move W8, [X20+64]
	090 Compare W8, 0
	091 JumpIfNotEqual {96}
	092 Move X0, X20
	093 Move X1, X19
	094 Move X2, X20
	095 Call Promise.AddProgressHandler, X0, X1, X2
	096 Move X0, [X21+24]
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Move X30, [X31+64]
	104 Return X0
	105 Call 0x1C17F20

Method: System.Void ActionHandlers(RSG.IRejectable resultPromise, System.Action resolveHandler, System.Action`1<System.Exception> rejectHandler)

Disassembly:
	0x0359033C MOV X0, X20
	0x03590340 MOV X1, X22
	0x03590344 MOV X2, X31
	0x03590348 MOV X3, X31
	0x0359034C BL 0x358F550
	0x03590350 LDR X0, [X23]
	0x03590354 BL 0x1C16F10
	0x03590358 LDR X2, [X24]
	0x0359035C MOV X1, X21
	0x03590360 MOV X3, X31
	0x03590364 MOV X22, X0
	0x03590368 BL 0x2A6B948
	0x0359036C MOV X0, X20
	0x03590370 MOV X1, X22
	0x03590374 BL 0x358F17C
	0x03590378 LDR X0, [X21 + 0x10]
	0x0359037C CBZ X0, 0x35903A0
	0x03590380 MOV X1, X19
	0x03590384 LDP X20, X19, [X31 + 0x30]
	0x03590388 LDP X22, X21, [X31 + 0x20]
	0x0359038C LDP X24, X23, [X31 + 0x10]
	0x03590390 MOV X2, X31
	0x03590394 MOV X3, X31
	0x03590398 LDR X30, [X31], #0x40
	0x0359039C B 0x358F3E0
	0x035903A0 BL 0x1C16F20
	0x035903A4 MOV X1, X31
	0x035903A8 B 0x33BDD8C
	0x035903AC STP X30, X19, [X31 - 0x10]!
	0x035903B0 MOV X19, X0
	0x035903B4 CBZ X1, 0x35903CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+64]
	006 Move X19, X3
	007 Move X21, X0
	008 Move X20, X1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X1, X2
	012 Move X2, X20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Promise.InvokeResolveHandler, X0, X1, X2
	018 Return 
	019 Move X3, [X21+16]
	020 Move X1, X19
	021 Move X2, X20
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call Promise.InvokeRejectHandler, X0, X1, X2, X3
	027 Return 
	028 Move X0, X21
	029 Move X1, X2
	030 Move X2, X20
	031 Call Promise.AddResolveHandler, X0, X1, X2
	032 Move X1, X19
	033 Move X2, X20
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X0, X21
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call Promise.AddRejectHandler, X0, X1, X2
	040 Return 

Method: System.Void ProgressHandlers(RSG.IRejectable resultPromise, System.Action`1<System.Single> progressHandler)

Disassembly:
	0x035903B8 LDR W8, [X19 + 0x40]
	0x035903BC CBNZ W8, 0x35903CC
	0x035903C0 MOV X0, X19
	0x035903C4 MOV X2, X19
	0x035903C8 BL 0x358E578
	0x035903CC MOV X0, X19
	0x035903D0 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move W9, [X0+64]
	002 Compare W9, 0
	003 JumpIfEqual {5}
	004 Return 
	005 Move X8, X1
	006 Move X1, X2
	007 Move X2, X8
	008 Call Promise.AddProgressHandler, X0, X1, X2
	009 Return 

Method: RSG.IPromise ThenAll(System.Func`1<System.Collections.Generic.IEnumerable`1<RSG.IPromise>> chain)

Disassembly:
	0x035906D8 CBZ X8, 0x3590704
	0x035906DC LDR X0, [X8 + 0x40]
	0x035906E0 LDR X9, [X8 + 0x18]
	0x035906E4 LDR X2, [X8 + 0x28]
	0x035906E8 BLR X9
	0x035906EC LDR X0, [X19 + 0x10]
	0x035906F0 CBZ X0, 0x3590708
	0x035906F4 BL 0x358EC6C
	0x035906F8 LDP X20, X19, [X31 + 0x10]
	0x035906FC LDR X30, [X31], #0x20
	0x03590700 RET
	0x03590704 BL 0x1C16F20
	0x03590708 BL 0x1C16F20
	0x0359070C B 0x3590710
	0x03590710 MOV X20, X0
	0x03590714 CMP W1, 0x1
	0x03590718 B.NE 0x3590790
	0x0359071C MOV X0, X20
	0x03590720 BL 0x3EB1AD0
	0x03590724 MOV X20, X0
	0x03590728 ADRP X0, 0xB63000
	0x0359072C LDR X0, [X0 + 0x7D0]
	0x03590730 BL 0x1C16D08
	0x03590734 LDR X8, [X20]
	0x03590738 LDR X1, [X8]
	0x0359073C BL 0x1C17270
	0x03590740 TBZ X0, 0x0, 0x3590764
	0x03590744 LDR X20, [X20]
	0x03590748 BL 0x3EB1AE0
	0x0359074C LDR X0, [X19 + 0x10]
	0x03590750 CBZ X0, 0x3590784
	0x03590754 MOV X1, X20
	0x03590758 LDP X20, X19, [X31 + 0x10]
	0x0359075C LDR X30, [X31], #0x20
	0x03590760 B 0x358E1F0
	0x03590764 MOVZ W0, 0x8
	0x03590768 BL 0x3EB1AF0
	0x0359076C LDR X8, [X20]
	0x03590770 STR X8, [X0]
	0x03590774 ADRP X1, 0x924000
	0x03590778 ADD X1, X1, 0xE58
	0x0359077C MOV X2, X31
	0x03590780 BL 0x3EB1B00
	0x03590784 BL 0x1C16F20
	0x03590788 MOV X20, X0
	0x0359078C BL 0x3EB1AE0
	0x03590790 MOV X0, X20
	0x03590794 BL 0x1D2C690

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE50000
	007 Move X22, 0xBA7000
	008 Move W8, [X21+3951]
	009 Move X22, [X22+3256]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBA7000
	017 Move X0, [X0+3264]
	018 Call 0x1C17CF4
	019 Move X0, 0xBA7000
	020 Move X0, [X0+3272]
	021 Call 0x1C17CF4
	022 Move X0, 0xBA7000
	023 Move X0, [X0+3256]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3951], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call Object..ctor, X0
	032 Compare X21, 0
	033 JumpIfEqual {57}
	034 Move X8, 0xBA7000
	035 Move X8, [X8+3264]
	036 Move [X21+16], X20
	037 Move X20, 0xBA7000
	038 Move X0, [X8]
	039 Move X20, [X20+3272]
	040 Call 0x1C17F10
	041 Move X2, [X20]
	042 Move X1, X21
	043 Move X3, X31
	044 Move X20, X0
	045 Call Func`1<Object>..ctor, X0, X1, X2
	046 Move X0, X19
	047 Move X1, X20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X2, X31
	053 Move X3, X31
	054 Move X30, [X31+48]
	055 Call Promise.Then, X0, X1, X2, X3
	056 Return X0
	057 Call 0x1C17F20

Method: RSG.IPromise`1<System.Collections.Generic.IEnumerable`1<ConvertedT>> ThenAll(System.Func`1<System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<ConvertedT>>> chain)

Disassembly:
	0x022370C0 BL 0x1C5C684
	0x022370C4 LDR X8, [X0 + 0xB8]
	0x022370C8 LDRB W9, [X8 + 0xB]
	0x022370CC LDR X8, [X19 + 0x38]
	0x022370D0 CBZ W9, 0x22374D0
	0x022370D4 LDR X0, [X8 + 0x8]
	0x022370D8 LDRB W8, [X0 + 0x135]
	0x022370DC TBNZ X8, 0x0, 0x22370E4
	0x022370E0 BL 0x1C5C684
	0x022370E4 LDR W8, [X0 + 0xE0]
	0x022370E8 CBNZ W8, 0x22370F0
	0x022370EC BL 0x1C16DFC
	0x022370F0 LDR X8, [X19 + 0x38]
	0x022370F4 LDR X21, [X8 + 0x18]
	0x022370F8 LDR X0, [X21 + 0x20]
	0x022370FC LDRB W8, [X0 + 0x135]
	0x02237100 TBNZ X8, 0x0, 0x2237108
	0x02237104 BL 0x1C5C684
	0x02237108 LDR X8, [X0 + 0xC0]
	0x0223710C LDR X0, [X8 + 0x8]
	0x02237110 LDRB W8, [X0 + 0x135]
	0x02237114 TBNZ X8, 0x0, 0x223711C
	0x02237118 BL 0x1C5C684
	0x0223711C LDR W8, [X0 + 0xE0]
	0x02237120 CBNZ W8, 0x2237128
	0x02237124 BL 0x1C16DFC
	0x02237128 LDR X0, [X21 + 0x20]
	0x0223712C LDRB W8, [X0 + 0x135]
	0x02237130 TBNZ X8, 0x0, 0x2237138
	0x02237134 BL 0x1C5C684
	0x02237138 LDR X8, [X0 + 0xC0]
	0x0223713C LDR X0, [X8 + 0x8]
	0x02237140 LDRB W8, [X0 + 0x135]
	0x02237144 TBNZ X8, 0x0, 0x223714C
	0x02237148 BL 0x1C5C684
	0x0223714C LDR X8, [X0 + 0xB8]
	0x02237150 LDRB W9, [X8 + 0xE]
	0x02237154 LDR X8, [X19 + 0x38]
	0x02237158 CBNZ W9, 0x2237500
	0x0223715C LDR X0, [X8 + 0x30]
	0x02237160 LDRB W8, [X0 + 0x135]
	0x02237164 TBNZ X8, 0x0, 0x223716C
	0x02237168 BL 0x1C5C684
	0x0223716C LDR X8, [X0 + 0xB8]
	0x02237170 LDR X8, [X8]
	0x02237174 CBZ X8, 0x22372B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X21, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move X8, [X19+56]
	015 Move X0, [X8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Call 0x1C17F10
	023 Move X8, [X19+56]
	024 Move X22, X0
	025 Move X1, [X8+8]
	026 Move X8, [X1]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X22, 0
	029 JumpIfEqual {58}
	030 Move [X22+16], X21
	031 Move X8, [X19+56]
	032 Move X0, [X8+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+56]
	041 Move X1, X22
	042 Move X21, X0
	043 Move X3, [X8+40]
	044 Move X2, [X8+24]
	045 Move X9, [X3]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X19+56]
	048 Move X0, X20
	049 Move X1, X21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X2, [X8+48]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X3, [X2]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: RSG.IPromise All(RSG.IPromise[] promises)

Disassembly:
	0x035907A0 LDR X0, [X0 + 0x10]
	0x035907A4 CBZ X0, 0x35907B0
	0x035907A8 LDR X30, [X31], #0x10
	0x035907AC B 0x358EDE0
	0x035907B0 BL 0x1C16F20
	0x035907B4 STP X30, X23, [X31 - 0x30]!
	0x035907B8 STP X22, X21, [X31 + 0x10]
	0x035907BC STP X20, X19, [X31 + 0x20]
	0x035907C0 ADRP X20, 0xE4F000
	0x035907C4 LDRB W8, [X20 + 0xF81]
	0x035907C8 MOV X19, X0
	0x035907CC TBNZ X8, 0x0, 0x359082C
	0x035907D0 ADRP X0, 0xB65000
	0x035907D4 LDR X0, [X0 + 0x5B0]
	0x035907D8 BL 0x1C16CF4
	0x035907DC ADRP X0, 0xB66000
	0x035907E0 LDR X0, [X0 + 0x2C8]
	0x035907E4 BL 0x1C16CF4
	0x035907E8 ADRP X0, 0xB64000
	0x035907EC LDR X0, [X0 + 0xE70]
	0x035907F0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE50000
	006 Move X21, 0xB8C000
	007 Move W8, [X20+3952]
	008 Move X21, [X21+1736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB8C000
	015 Move X0, [X0+1736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3952], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: RSG.IPromise All(System.Collections.Generic.IEnumerable`1<RSG.IPromise> promises)

Disassembly:
	0x035907F4 ADRP X0, 0xB8C000
	0x035907F8 LDR X0, [X0 + 0x2C0]
	0x035907FC BL 0x1C16CF4
	0x03590800 ADRP X0, 0xBA6000
	0x03590804 LDR X0, [X0 + 0xDA0]
	0x03590808 BL 0x1C16CF4
	0x0359080C ADRP X0, 0xBA6000
	0x03590810 LDR X0, [X0 + 0xDA8]
	0x03590814 BL 0x1C16CF4
	0x03590818 ADRP X0, 0xBA6000
	0x0359081C LDR X0, [X0 + 0xDB0]
	0x03590820 BL 0x1C16CF4
	0x03590824 MOVZ W8, 0x1
	0x03590828 STRB W8, [X20 + 0xF81]
	0x0359082C LDR X8, [X19 + 0x10]
	0x03590830 CBZ X8, 0x35908CC
	0x03590834 LDR X9, [X8 + 0x18]
	0x03590838 LDR X0, [X8 + 0x40]
	0x0359083C LDR X1, [X8 + 0x28]
	0x03590840 BLR X9
	0x03590844 LDR X21, [X19 + 0x28]
	0x03590848 MOV X20, X0
	0x0359084C CBNZ X21, 0x3590880
	0x03590850 ADRP X8, 0xB65000
	0x03590854 LDR X8, [X8 + 0x5B0]
	0x03590858 LDR X0, [X8]
	0x0359085C BL 0x1C16F10
	0x03590860 ADRP X8, 0xBA6000
	0x03590864 LDR X8, [X8 + 0xDA0]
	0x03590868 MOV X1, X19
	0x0359086C MOV X3, X31
	0x03590870 MOV X21, X0
	0x03590874 LDR X2, [X8]
	0x03590878 BL 0x2A6DA40
	0x0359087C STR X21, [X19 + 0x28]
	0x03590880 CBZ X20, 0x35909EC
	0x03590884 ADRP X23, 0xB8C000
	0x03590888 LDR X8, [X20]
	0x0359088C LDR X23, [X23 + 0x2C0]
	0x03590890 LDRH W9, [X8 + 0x12E]
	0x03590894 LDR X1, [X23]
	0x03590898 CBZ X9, 0x35908BC
	0x0359089C LDR X10, [X8 + 0xB0]
	0x035908A0 ADD X10, X10, 0x8
	0x035908A4 LDUR X11, [X10 - 0x8]
	0x035908A8 CMP X11, X1
	0x035908AC B.EQ 0x35908E4
	0x035908B0 SUBS X9, X9, 0x1
	0x035908B4 ADD X10, X10, 0x10
	0x035908B8 B.NE 0x35908A4
	0x035908BC MOVZ W2, 0x17
	0x035908C0 MOV X0, X20
	0x035908C4 BL 0x1C5C788
	0x035908C8 B 0x35908F4
	0x035908CC LDR X0, [X19 + 0x18]
	0x035908D0 CBZ X0, 0x35909EC
	0x035908D4 LDP X20, X19, [X31 + 0x20]
	0x035908D8 LDP X22, X21, [X31 + 0x10]
	0x035908DC LDP X30, X23, [X31], #0x30
	0x035908E0 B 0x358EC6C
	0x035908E4 LDR W9, [X10]
	0x035908E8 ADD W9, W9, 0x17
	0x035908EC ADD X8, X8, W9, 0x4, SXTW
	0x035908F0 ADD X0, X8, 0x138
	0x035908F4 LDP X8, X2, [X0]
	0x035908F8 MOV X0, X20
	0x035908FC MOV X1, X21
	0x03590900 BLR X8
	0x03590904 LDR X21, [X19 + 0x30]
	0x03590908 MOV X20, X0
	0x0359090C CBNZ X21, 0x3590940
	0x03590910 ADRP X8, 0xB64000
	0x03590914 LDR X8, [X8 + 0xE70]
	0x03590918 LDR X0, [X8]
	0x0359091C BL 0x1C16F10
	0x03590920 ADRP X8, 0xBA6000
	0x03590924 LDR X8, [X8 + 0xDA8]
	0x03590928 MOV X1, X19
	0x0359092C MOV X3, X31
	0x03590930 MOV X21, X0
	0x03590934 LDR X2, [X8]
	0x03590938 BL 0x3314368
	0x0359093C STR X21, [X19 + 0x30]
	0x03590940 LDR X22, [X19 + 0x38]
	0x03590944 CBNZ X22, 0x3590978
	0x03590948 ADRP X8, 0xB66000
	0x0359094C LDR X8, [X8 + 0x2C8]
	0x03590950 LDR X0, [X8]
	0x03590954 BL 0x1C16F10
	0x03590958 ADRP X8, 0xBA6000
	0x0359095C LDR X8, [X8 + 0xDB0]
	0x03590960 MOV X1, X19
	0x03590964 MOV X3, X31
	0x03590968 MOV X22, X0
	0x0359096C LDR X2, [X8]
	0x03590970 BL 0x2A6B948
	0x03590974 STR X22, [X19 + 0x38]
	0x03590978 CBZ X20, 0x35909EC
	0x0359097C LDR X8, [X20]
	0x03590980 LDR X1, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xE50000
	008 Move X22, 0xBA7000
	009 Move X21, 0xBA7000
	010 Move W8, [X19+3953]
	011 Move X22, [X22+3280]
	012 Move X21, [X21+3288]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0xBA7000
	019 Move X0, [X0+3296]
	020 Call 0x1C17CF4
	021 Move X0, 0xBA7000
	022 Move X0, [X0+3304]
	023 Call 0x1C17CF4
	024 Move X0, 0xBA7000
	025 Move X0, [X0+3288]
	026 Call 0x1C17CF4
	027 Move X0, 0xB8C000
	028 Move X0, [X0+1736]
	029 Call 0x1C17CF4
	030 Move X0, 0xB64000
	031 Move X0, [X0+1592]
	032 Call 0x1C17CF4
	033 Move X0, 0xBA7000
	034 Move X0, [X0+3312]
	035 Call 0x1C17CF4
	036 Move X0, 0xBA7000
	037 Move X0, [X0+3280]
	038 Call 0x1C17CF4
	039 Move X0, 0xB8D000
	040 Move X0, [X0+4088]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+3953], W8
	044 Move X0, [X22]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X19, X0
	048 Call Object..ctor, X0
	049 Move X1, [X21]
	050 Move X0, X20
	051 Call Enumerable.ToArray, X0
	052 Compare X0, 0
	053 JumpIfEqual {118}
	054 Move X8, 0xB8C000
	055 Move X9, [X0+24]
	056 Move X8, [X8+1736]
	057 Move X20, X0
	058 Compare X9, 0
	059 JumpIfEqual {105}
	060 Compare X19, 0
	061 JumpIfEqual {118}
	062 Move [X19+32], W9
	063 Move X0, [X8]
	064 Call 0x1C17F10
	065 Move X21, X0
	066 Call Promise..ctor, X0
	067 Move [X19+24], X21
	068 Compare X21, 0
	069 JumpIfEqual {118}
	070 Move X8, 0xB8D000
	071 Move X8, [X8+4088]
	072 Move X9, 0xB64000
	073 Move X22, 0xBA7000
	074 Move X23, 0xBA7000
	075 Move X8, [X8]
	076 Move X9, [X9+1592]
	077 Move [X21+56], X8
	078 Move W1, [X19+32]
	079 Move X0, [X9]
	080 Move X21, 0xBA7000
	081 Move X21, [X21+3296]
	082 Move X22, [X22+3312]
	083 Move X23, [X23+3304]
	084 Call 0x1C17D6C
	085 Move [X19+16], X0
	086 Move X0, [X21]
	087 Call 0x1C17F10
	088 Move X2, [X22]
	089 Move X1, X19
	090 Move X3, X31
	091 Move X21, X0
	092 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	093 Move X2, [X23]
	094 Move X0, X20
	095 Move X1, X21
	096 Call 0x21DC000, X0, X1
	097 Move X0, [X19+24]
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X30, [X31+48]
	103 Move X23, [X31+56]
	104 Return X0
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Move X23, [X31+56]
	116 Call Promise.Resolved
	117 Return X0
	118 Call 0x1C17F20

Method: RSG.IPromise ThenSequence(System.Func`1<System.Collections.Generic.IEnumerable`1<System.Func`1<RSG.IPromise>>> chain)

Disassembly:
	0x035909EC BL 0x1C16F20
	0x035909F0 STR X30, [X31 - 0x10]!
	0x035909F4 LDR X0, [X0 + 0x18]
	0x035909F8 CBZ X0, 0x3590A04
	0x035909FC LDR X30, [X31], #0x10
	0x03590A00 B 0x358EDE0
	0x03590A04 BL 0x1C16F20
	0x03590A08 STR X30, [X31 - 0x10]!
	0x03590A0C LDR X0, [X0 + 0x18]
	0x03590A10 CBZ X0, 0x3590A1C
	0x03590A14 LDR X30, [X31], #0x10
	0x03590A18 B 0x358EC6C
	0x03590A1C BL 0x1C16F20
	0x03590A20 STR X30, [X31 - 0x10]!
	0x03590A24 LDR X0, [X0 + 0x18]
	0x03590A28 CBZ X0, 0x3590A34
	0x03590A2C LDR X30, [X31], #0x10
	0x03590A30 B 0x358E1F0
	0x03590A34 BL 0x1C16F20
	0x03590A38 STR X30, [X31 - 0x20]!
	0x03590A3C STP X20, X19, [X31 + 0x10]
	0x03590A40 LDR X8, [X0 + 0x20]
	0x03590A44 MOV X20, X0
	0x03590A48 MOV X19, X1
	0x03590A4C CBZ X8, 0x3590A64
	0x03590A50 LDR X9, [X8 + 0x18]
	0x03590A54 LDR X0, [X8 + 0x40]
	0x03590A58 LDR X2, [X8 + 0x28]
	0x03590A5C MOV X1, X19
	0x03590A60 BLR X9
	0x03590A64 LDR X0, [X20 + 0x18]
	0x03590A68 CBZ X0, 0x3590A7C
	0x03590A6C MOV X1, X19
	0x03590A70 LDP X20, X19, [X31 + 0x10]
	0x03590A74 LDR X30, [X31], #0x20
	0x03590A78 B 0x358E1F0
	0x03590A7C BL 0x1C16F20
	0x03590A80 STP X30, X19, [X31 - 0x10]!
	0x03590A84 LDR X8, [X0 + 0x10]
	0x03590A88 MOV X19, X0
	0x03590A8C CBZ X8, 0x3590AA0
	0x03590A90 LDR X9, [X8 + 0x18]
	0x03590A94 LDR X0, [X8 + 0x40]
	0x03590A98 LDR X1, [X8 + 0x28]
	0x03590A9C BLR X9
	0x03590AA0 LDR X0, [X19 + 0x18]
	0x03590AA4 CBZ X0, 0x3590AB0
	0x03590AA8 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE50000
	007 Move X22, 0xBA7000
	008 Move W8, [X21+3954]
	009 Move X22, [X22+3320]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBA7000
	017 Move X0, [X0+3264]
	018 Call 0x1C17CF4
	019 Move X0, 0xBA7000
	020 Move X0, [X0+3328]
	021 Call 0x1C17CF4
	022 Move X0, 0xBA7000
	023 Move X0, [X0+3320]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3954], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call Object..ctor, X0
	032 Compare X21, 0
	033 JumpIfEqual {57}
	034 Move X8, 0xBA7000
	035 Move X8, [X8+3264]
	036 Move [X21+16], X20
	037 Move X20, 0xBA7000
	038 Move X0, [X8]
	039 Move X20, [X20+3328]
	040 Call 0x1C17F10
	041 Move X2, [X20]
	042 Move X1, X21
	043 Move X3, X31
	044 Move X20, X0
	045 Call Func`1<Object>..ctor, X0, X1, X2
	046 Move X0, X19
	047 Move X1, X20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X2, X31
	053 Move X3, X31
	054 Move X30, [X31+48]
	055 Call Promise.Then, X0, X1, X2, X3
	056 Return X0
	057 Call 0x1C17F20

Method: RSG.IPromise Sequence(System.Func`1<RSG.IPromise>[] fns)

Disassembly:
	0x03590AB4 STP X30, X19, [X31 - 0x10]!
	0x03590AB8 LDR X8, [X0 + 0x20]
	0x03590ABC MOV X19, X0
	0x03590AC0 CBZ X8, 0x3590AE4
	0x03590AC4 LDR X9, [X8 + 0x18]
	0x03590AC8 LDR X0, [X8 + 0x40]
	0x03590ACC LDR X2, [X8 + 0x28]
	0x03590AD0 BLR X9
	0x03590AD4 LDR X0, [X19 + 0x18]
	0x03590AD8 CBZ X0, 0x3590AF4
	0x03590ADC LDP X30, X19, [X31], #0x10
	0x03590AE0 B 0x358EC6C
	0x03590AE4 LDR X0, [X19 + 0x18]
	0x03590AE8 CBZ X0, 0x3590AF4
	0x03590AEC LDP X30, X19, [X31], #0x10
	0x03590AF0 B 0x358E1F0
	0x03590AF4 BL 0x1C16F20
	0x03590AF8 STR X30, [X31 - 0x20]!
	0x03590AFC STP X20, X19, [X31 + 0x10]
	0x03590B00 ADRP X20, 0xE4F000
	0x03590B04 LDRB W8, [X20 + 0xF82]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE50000
	006 Move X21, 0xB8C000
	007 Move W8, [X20+3955]
	008 Move X21, [X21+1736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB8C000
	015 Move X0, [X0+1736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3955], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: RSG.IPromise Sequence(System.Collections.Generic.IEnumerable`1<System.Func`1<RSG.IPromise>> fns)

Disassembly:
	0x03590B08 MOV X19, X0
	0x03590B0C TBNZ X8, 0x0, 0x3590B24
	0x03590B10 ADRP X0, 0xB8B000
	0x03590B14 LDR X0, [X0 + 0x6C8]
	0x03590B18 BL 0x1C16CF4
	0x03590B1C MOVZ W8, 0x1
	0x03590B20 STRB W8, [X20 + 0xF82]
	0x03590B24 LDR X8, [X19 + 0x10]
	0x03590B28 CBZ X8, 0x3590B6C
	0x03590B2C LDR X9, [X8 + 0x18]
	0x03590B30 LDR X0, [X8 + 0x40]
	0x03590B34 LDR X1, [X8 + 0x28]
	0x03590B38 ADRP X19, 0xB8B000
	0x03590B3C LDR X19, [X19 + 0x6C8]
	0x03590B40 BLR X9
	0x03590B44 LDR X8, [X19]
	0x03590B48 MOV X19, X0
	0x03590B4C LDR W9, [X8 + 0xE0]
	0x03590B50 CBNZ W9, 0x3590B5C
	0x03590B54 MOV X0, X8
	0x03590B58 BL 0x1C16DFC
	0x03590B5C MOV X0, X19
	0x03590B60 LDP X20, X19, [X31 + 0x10]
	0x03590B64 LDR X30, [X31], #0x20
	0x03590B68 B 0x358F7F4
	0x03590B6C BL 0x1C16F20
	0x03590B70 STP X30, X25, [X31 - 0x40]!
	0x03590B74 STP X24, X23, [X31 + 0x10]
	0x03590B78 STP X22, X21, [X31 + 0x20]
	0x03590B7C STP X20, X19, [X31 + 0x30]
	0x03590B80 ADRP X21, 0xE4F000
	0x03590B84 ADRP X23, 0xBA6000
	0x03590B88 LDRB W8, [X21 + 0xF83]
	0x03590B8C LDR X23, [X23 + 0xDB8]
	0x03590B90 MOV W22, W2
	0x03590B94 MOV X20, X1
	0x03590B98 MOV X19, X0
	0x03590B9C TBNZ X8, 0x0, 0x3590C08
	0x03590BA0 ADRP X0, 0xB65000
	0x03590BA4 LDR X0, [X0 + 0x5B0]
	0x03590BA8 BL 0x1C16CF4
	0x03590BAC ADRP X0, 0xB66000
	0x03590BB0 LDR X0, [X0 + 0x2C8]
	0x03590BB4 BL 0x1C16CF4
	0x03590BB8 ADRP X0, 0xB64000
	0x03590BBC LDR X0, [X0 + 0xE70]
	0x03590BC0 BL 0x1C16CF4
	0x03590BC4 ADRP X0, 0xB8C000
	0x03590BC8 LDR X0, [X0 + 0x2C0]
	0x03590BCC BL 0x1C16CF4
	0x03590BD0 ADRP X0, 0xBA6000
	0x03590BD4 LDR X0, [X0 + 0xDC0]
	0x03590BD8 BL 0x1C16CF4
	0x03590BDC ADRP X0, 0xBA6000
	0x03590BE0 LDR X0, [X0 + 0xDC8]
	0x03590BE4 BL 0x1C16CF4
	0x03590BE8 ADRP X0, 0xBA6000
	0x03590BEC LDR X0, [X0 + 0xDD0]
	0x03590BF0 BL 0x1C16CF4
	0x03590BF4 ADRP X0, 0xBA6000
	0x03590BF8 LDR X0, [X0 + 0xDB8]
	0x03590BFC BL 0x1C16CF4
	0x03590C00 MOVZ W8, 0x1
	0x03590C04 STRB W8, [X21 + 0xF83]
	0x03590C08 LDR X0, [X23]
	0x03590C0C BL 0x1C16F10
	0x03590C10 MOV X1, X31
	0x03590C14 MOV X21, X0
	0x03590C18 BL 0x33BDD8C
	0x03590C1C CBZ X21, 0x3590E6C
	0x03590C20 ADRP X8, 0xB65000
	0x03590C24 LDR X8, [X8 + 0x5B0]
	0x03590C28 STR X19, [X21 + 0x18]
	0x03590C2C STR W22, [X21 + 0x10]
	0x03590C30 ADRP X22, 0xBA6000
	0x03590C34 LDR X0, [X8]
	0x03590C38 LDR X22, [X22 + 0xDC8]
	0x03590C3C BL 0x1C16F10
	0x03590C40 LDR X2, [X22]
	0x03590C44 MOV X1, X21
	0x03590C48 MOV X3, X31
	0x03590C4C MOV X22, X0
	0x03590C50 BL 0x2A6DA40
	0x03590C54 CBZ X20, 0x3590E6C
	0x03590C58 ADRP X23, 0xB8C000
	0x03590C5C LDR X8, [X20]
	0x03590C60 LDR X23, [X23 + 0x2C0]
	0x03590C64 ADRP X25, 0xB64000
	0x03590C68 ADRP X24, 0xBA6000
	0x03590C6C LDRH W9, [X8 + 0x12E]
	0x03590C70 LDR X1, [X23]
	0x03590C74 LDR X25, [X25 + 0xE70]
	0x03590C78 LDR X24, [X24 + 0xDD0]
	0x03590C7C CBZ X9, 0x3590CA0
	0x03590C80 LDR X10, [X8 + 0xB0]
	0x03590C84 ADD X10, X10, 0x8
	0x03590C88 LDUR X11, [X10 - 0x8]
	0x03590C8C CMP X11, X1
	0x03590C90 B.EQ 0x3590CB0
	0x03590C94 SUBS X9, X9, 0x1
	0x03590C98 ADD X10, X10, 0x10
	0x03590C9C B.NE 0x3590C88
	0x03590CA0 MOVZ W2, 0x17
	0x03590CA4 MOV X0, X20
	0x03590CA8 BL 0x1C5C788
	0x03590CAC B 0x3590CC0
	0x03590CB0 LDR W9, [X10]
	0x03590CB4 ADD W9, W9, 0x17
	0x03590CB8 ADD X8, X8, W9, 0x4, SXTW
	0x03590CBC ADD X0, X8, 0x138
	0x03590CC0 LDP X8, X2, [X0]
	0x03590CC4 MOV X0, X20
	0x03590CC8 MOV X1, X22
	0x03590CCC BLR X8
	0x03590CD0 LDR X8, [X25]
	0x03590CD4 MOV X20, X0
	0x03590CD8 MOV X0, X8
	0x03590CDC BL 0x1C16F10
	0x03590CE0 LDR X2, [X24]
	0x03590CE4 MOV X1, X21
	0x03590CE8 MOV X3, X31
	0x03590CEC MOV X22, X0
	0x03590CF0 BL 0x3314368
	0x03590CF4 CBZ X20, 0x3590E6C
	0x03590CF8 LDR X8, [X20]
	0x03590CFC LDR X1, [X23]
	0x03590D00 LDRH W9, [X8 + 0x12E]
	0x03590D04 CBZ X9, 0x3590D28
	0x03590D08 LDR X10, [X8 + 0xB0]
	0x03590D0C ADD X10, X10, 0x8
	0x03590D10 LDUR X11, [X10 - 0x8]
	0x03590D14 CMP X11, X1
	0x03590D18 B.EQ 0x3590D38
	0x03590D1C SUBS X9, X9, 0x1
	0x03590D20 ADD X10, X10, 0x10
	0x03590D24 B.NE 0x3590D10
	0x03590D28 MOVZ W2, 0x8
	0x03590D2C MOV X0, X20
	0x03590D30 BL 0x1C5C788
	0x03590D34 B 0x3590D48
	0x03590D38 LDR W9, [X10]
	0x03590D3C ADD W9, W9, 0x8
	0x03590D40 ADD X8, X8, W9, 0x4, SXTW
	0x03590D44 ADD X0, X8, 0x138
	0x03590D48 LDP X8, X2, [X0]
	0x03590D4C MOV X0, X20
	0x03590D50 MOV X1, X22
	0x03590D54 BLR X8
	0x03590D58 LDR X21, [X19 + 0x28]
	0x03590D5C MOV X20, X0
	0x03590D60 CBNZ X21, 0x3590D94
	0x03590D64 ADRP X8, 0xB66000
	0x03590D68 LDR X8, [X8 + 0x2C8]
	0x03590D6C LDR X0, [X8]
	0x03590D70 BL 0x1C16F10
	0x03590D74 ADRP X8, 0xBA6000
	0x03590D78 LDR X8, [X8 + 0xDC0]
	0x03590D7C MOV X1, X19
	0x03590D80 MOV X3, X31
	0x03590D84 MOV X21, X0
	0x03590D88 LDR X2, [X8]
	0x03590D8C BL 0x2A6B948
	0x03590D90 STR X21, [X19 + 0x28]
	0x03590D94 CBZ X20, 0x3590E6C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0xE50000
	010 Move X21, 0xBA7000
	011 Move X22, 0xB8C000
	012 Move W8, [X19+3956]
	013 Move X21, [X21+3336]
	014 Move X22, [X22+1736]
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0xB67000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0xB65000
	024 Move X0, [X0+3696]
	025 Call 0x1C17CF4
	026 Move X0, 0xBA7000
	027 Move X0, [X0+3344]
	028 Call 0x1C17CF4
	029 Move X0, 0xBA7000
	030 Move X0, [X0+3352]
	031 Call 0x1C17CF4
	032 Move X0, 0xB8D000
	033 Move X0, [X0+704]
	034 Call 0x1C17CF4
	035 Move X0, 0xB8C000
	036 Move X0, [X0+1736]
	037 Call 0x1C17CF4
	038 Move X0, 0xBA7000
	039 Move X0, [X0+3360]
	040 Call 0x1C17CF4
	041 Move X0, 0xBA7000
	042 Move X0, [X0+3368]
	043 Call 0x1C17CF4
	044 Move X0, 0xBA7000
	045 Move X0, [X0+3336]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+3956], W8
	049 Move X0, [X21]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X19, X0
	053 Call Object..ctor, X0
	054 Move X0, [X22]
	055 Call 0x1C17F10
	056 Move X21, X0
	057 Call Promise..ctor, X0
	058 Compare X19, 0
	059 JumpIfEqual {178}
	060 Move [X19+24], X21
	061 Move [X19+16], W31
	062 Move X0, [X22]
	063 Move X21, 0xBA7000
	064 Move X22, 0xBA7000
	065 Move X25, 0xBA7000
	066 Move X24, 0xB65000
	067 Move X23, 0xBA7000
	068 Move X21, [X21+3352]
	069 Move W8, [X0+224]
	070 Move X22, [X22+3360]
	071 Move X25, [X25+3344]
	072 Move X24, [X24+3696]
	073 Move X23, [X23+3368]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Call Promise.Resolved
	078 Move X8, [X21]
	079 Move X21, X0
	080 Move X0, X8
	081 Call 0x1C17F10
	082 Move X2, [X22]
	083 Move X1, X19
	084 Move X3, X31
	085 Move X22, X0
	086 Call Func`3<Object, Object, Object>..ctor, X0, X1, X2
	087 Move X3, [X25]
	088 Move X0, X20
	089 Move X1, X21
	090 Move X2, X22
	091 Call 0x21B1EB8, X0, X1, X2
	092 Move X8, [X24]
	093 Move X20, X0
	094 Move X0, X8
	095 Call 0x1C17F10
	096 Move X2, [X23]
	097 Move X1, X19
	098 Move X3, X31
	099 Move X21, X0
	100 Call Action..ctor, X0, X1, X2
	101 Compare X20, 0
	102 JumpIfEqual {178}
	103 Move X23, 0xB8D000
	104 Move X8, [X20]
	105 Move X23, [X23+704]
	106 Move X24, 0xB67000
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X1, [X23]
	109 Move X24, [X24+712]
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 8
	119 Move X0, X20
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 8
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X2, [X0+8]
	127 Move X0, X20
	128 Move X1, X21
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X24]
	131 Move X22, [X19+24]
	132 Move X20, X0
	133 Move X0, X8
	134 Call 0x1C17F10
	135 Compare X22, 0
	136 JumpIfEqual {178}
	137 Move X8, [X22]
	138 Move X1, X22
	139 Move X3, X31
	140 Move X21, X0
	141 Move X2, [X8+816]
	142 Call Action`1<Object>..ctor, X0, X1, X2
	143 Compare X20, 0
	144 JumpIfEqual {178}
	145 Move X8, [X20]
	146 Move X1, [X23]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move W2, 5
	157 Move X0, X20
	158 Call 0x1C5D788
	159 Move W9, [X10]
	160 Add W9, W9, 5
	161 Add X8, X8, W9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X2, [X0+8]
	165 Move X0, X20
	166 Move X1, X21
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move X0, [X19+24]
	169 Move X20, [X31+48]
	170 Move X19, [X31+56]
	171 Move X22, [X31+32]
	172 Move X21, [X31+40]
	173 Move X24, [X31+16]
	174 Move X23, [X31+24]
	175 Move X30, [X31+64]
	176 Move X25, [X31+72]
	177 Return X0
	178 Call 0x1C17F20

Method: RSG.IPromise ThenRace(System.Func`1<System.Collections.Generic.IEnumerable`1<RSG.IPromise>> chain)

Disassembly:
	0x03590DA0 LDRH W9, [X8 + 0x12E]
	0x03590DA4 CBZ X9, 0x3590DC8
	0x03590DA8 LDR X10, [X8 + 0xB0]
	0x03590DAC ADD X10, X10, 0x8
	0x03590DB0 LDUR X11, [X10 - 0x8]
	0x03590DB4 CMP X11, X1
	0x03590DB8 B.EQ 0x3590DD8
	0x03590DBC SUBS X9, X9, 0x1
	0x03590DC0 ADD X10, X10, 0x10
	0x03590DC4 B.NE 0x3590DB0
	0x03590DC8 MOVZ W2, 0x5
	0x03590DCC MOV X0, X20
	0x03590DD0 BL 0x1C5C788
	0x03590DD4 B 0x3590DE8
	0x03590DD8 LDR W9, [X10]
	0x03590DDC ADD W9, W9, 0x5
	0x03590DE0 ADD X8, X8, W9, 0x4, SXTW
	0x03590DE4 ADD X0, X8, 0x138
	0x03590DE8 LDP X8, X2, [X0]
	0x03590DEC MOV X0, X20
	0x03590DF0 MOV X1, X21
	0x03590DF4 BLR X8
	0x03590DF8 CBZ X0, 0x3590E6C
	0x03590DFC LDR X8, [X0]
	0x03590E00 LDR X1, [X23]
	0x03590E04 MOV X19, X0
	0x03590E08 LDRH W9, [X8 + 0x12E]
	0x03590E0C CBZ X9, 0x3590E30
	0x03590E10 LDR X10, [X8 + 0xB0]
	0x03590E14 ADD X10, X10, 0x8
	0x03590E18 LDUR X11, [X10 - 0x8]
	0x03590E1C CMP X11, X1
	0x03590E20 B.EQ 0x3590E40
	0x03590E24 SUBS X9, X9, 0x1
	0x03590E28 ADD X10, X10, 0x10
	0x03590E2C B.NE 0x3590E18
	0x03590E30 MOVZ W2, 0x4
	0x03590E34 MOV X0, X19
	0x03590E38 BL 0x1C5C788
	0x03590E3C B 0x3590E50
	0x03590E40 LDR W9, [X10]
	0x03590E44 ADD W9, W9, 0x4
	0x03590E48 ADD X8, X8, W9, 0x4, SXTW
	0x03590E4C ADD X0, X8, 0x138
	0x03590E50 LDP X2, X1, [X0]
	0x03590E54 MOV X0, X19
	0x03590E58 LDP X20, X19, [X31 + 0x30]
	0x03590E5C LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE50000
	007 Move X22, 0xBA7000
	008 Move W8, [X21+3957]
	009 Move X22, [X22+3376]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBA7000
	017 Move X0, [X0+3264]
	018 Call 0x1C17CF4
	019 Move X0, 0xBA7000
	020 Move X0, [X0+3384]
	021 Call 0x1C17CF4
	022 Move X0, 0xBA7000
	023 Move X0, [X0+3376]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3957], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call Object..ctor, X0
	032 Compare X21, 0
	033 JumpIfEqual {57}
	034 Move X8, 0xBA7000
	035 Move X8, [X8+3264]
	036 Move [X21+16], X20
	037 Move X20, 0xBA7000
	038 Move X0, [X8]
	039 Move X20, [X20+3384]
	040 Call 0x1C17F10
	041 Move X2, [X20]
	042 Move X1, X21
	043 Move X3, X31
	044 Move X20, X0
	045 Call Func`1<Object>..ctor, X0, X1, X2
	046 Move X0, X19
	047 Move X1, X20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X2, X31
	053 Move X3, X31
	054 Move X30, [X31+48]
	055 Call Promise.Then, X0, X1, X2, X3
	056 Return X0
	057 Call 0x1C17F20

Method: RSG.IPromise`1<ConvertedT> ThenRace(System.Func`1<System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<ConvertedT>>> chain)

Disassembly:
	0x02237178 LDR X8, [X19 + 0x38]
	0x0223717C LDR X0, [X8 + 0x30]
	0x02237180 LDRB W8, [X0 + 0x135]
	0x02237184 TBNZ X8, 0x0, 0x223718C
	0x02237188 BL 0x1C5C684
	0x0223718C LDR X8, [X0 + 0xB8]
	0x02237190 LDR X0, [X8]
	0x02237194 CBZ X0, 0x22374CC
	0x02237198 MOV X1, X31
	0x0223719C BL 0x33BE520
	0x022371A0 CBZ X0, 0x22374CC
	0x022371A4 LDR X8, [X0]
	0x022371A8 LDR X9, [X8 + 0x2F8]
	0x022371AC LDR X1, [X8 + 0x300]
	0x022371B0 BLR X9
	0x022371B4 ADRP X23, 0x1EBC000
	0x022371B8 LDR X23, [X23 + 0x6C0]
	0x022371BC LDR X9, [X19 + 0x38]
	0x022371C0 MOV X21, X0
	0x022371C4 LDR X8, [X23]
	0x022371C8 LDR X22, [X9 + 0x10]
	0x022371CC LDR W10, [X8 + 0xE0]
	0x022371D0 CBNZ W10, 0x22371DC
	0x022371D4 MOV X0, X8
	0x022371D8 BL 0x1C16DFC
	0x022371DC MOV X0, X22
	0x022371E0 MOV X1, X31
	0x022371E4 BL 0x338C698
	0x022371E8 CBZ X0, 0x22374CC
	0x022371EC LDR X8, [X0]
	0x022371F0 LDR X9, [X8 + 0x2F8]
	0x022371F4 LDR X1, [X8 + 0x300]
	0x022371F8 BLR X9
	0x022371FC MOV X1, X0
	0x02237200 MOV X0, X21
	0x02237204 MOV X2, X31
	0x02237208 BL 0x32D5BF8
	0x0223720C TBNZ X0, 0x0, 0x22374B8
	0x02237210 CBZ X20, 0x22374CC
	0x02237214 MOV X0, X20
	0x02237218 MOV X1, X31
	0x0223721C BL 0x33BE520
	0x02237220 ADRP X8, 0x1EE5000
	0x02237224 LDR X8, [X8 + 0x2E0]
	0x02237228 LDR X1, [X8]
	0x0223722C BL 0x21A8B6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X21, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move X8, [X19+56]
	015 Move X0, [X8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Call 0x1C17F10
	023 Move X8, [X19+56]
	024 Move X22, X0
	025 Move X1, [X8+8]
	026 Move X8, [X1]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X22, 0
	029 JumpIfEqual {58}
	030 Move [X22+16], X21
	031 Move X8, [X19+56]
	032 Move X0, [X8+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+56]
	041 Move X1, X22
	042 Move X21, X0
	043 Move X3, [X8+40]
	044 Move X2, [X8+24]
	045 Move X9, [X3]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X19+56]
	048 Move X0, X20
	049 Move X1, X21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X2, [X8+48]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X3, [X2]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: RSG.IPromise Race(RSG.IPromise[] promises)

Disassembly:
	0x03590E68 BR X2
	0x03590E6C BL 0x1C16F20
	0x03590E70 MOV X1, X31
	0x03590E74 B 0x33BDD8C
	0x03590E78 STR X30, [X31 - 0x10]!
	0x03590E7C LDR X0, [X0 + 0x18]
	0x03590E80 CBZ X0, 0x3590E9C
	0x03590E84 LDR W8, [X0 + 0x40]
	0x03590E88 CBZ W8, 0x3590E94
	0x03590E8C LDR X30, [X31], #0x10
	0x03590E90 RET
	0x03590E94 LDR X30, [X31], #0x10
	0x03590E98 B 0x358E1F0
	0x03590E9C BL 0x1C16F20
	0x03590EA0 STP X30, X19, [X31 - 0x10]!
	0x03590EA4 LDR X9, [X0 + 0x18]
	0x03590EA8 CBZ X9, 0x3590EFC
	0x03590EAC MOV X8, X0
	0x03590EB0 LDR X0, [X9 + 0x10]
	0x03590EB4 CBZ X0, 0x3590EFC
	0x03590EB8 LDRSW X8, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE50000
	006 Move X21, 0xB8C000
	007 Move W8, [X20+3958]
	008 Move X21, [X21+1736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB8C000
	015 Move X0, [X0+1736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3958], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: RSG.IPromise Race(System.Collections.Generic.IEnumerable`1<RSG.IPromise> promises)

Disassembly:
	0x03590EBC LDR W10, [X0 + 0x18]
	0x03590EC0 CMP W8, W10
	0x03590EC4 B.CS 0x3590F00
	0x03590EC8 ADD X8, X0, X8, 0x2, LSL
	0x03590ECC STR S0, [X8 + 0x20]
	0x03590ED0 LDR X19, [X9 + 0x18]
	0x03590ED4 CBZ X19, 0x3590EFC
	0x03590ED8 LDR W8, [X19 + 0x40]
	0x03590EDC CBZ W8, 0x3590EE8
	0x03590EE0 LDP X30, X19, [X31], #0x10
	0x03590EE4 RET
	0x03590EE8 MOV X1, X31
	0x03590EEC BL 0x35DFEA0
	0x03590EF0 MOV X0, X19
	0x03590EF4 LDP X30, X19, [X31], #0x10
	0x03590EF8 B 0x358EDE0
	0x03590EFC BL 0x1C16F20
	0x03590F00 BL 0x1C16F28
	0x03590F04 STR X30, [X31 - 0x10]!
	0x03590F08 LDR X8, [X0 + 0x18]
	0x03590F0C CBZ X8, 0x3590F68
	0x03590F10 LDR X9, [X8 + 0x10]
	0x03590F14 CBZ X9, 0x3590F68
	0x03590F18 LDRSW X10, [X0 + 0x10]
	0x03590F1C LDR W11, [X9 + 0x18]
	0x03590F20 CMP W10, W11
	0x03590F24 B.CS 0x3590F6C
	0x03590F28 ADD X9, X9, X10, 0x2, LSL
	0x03590F2C MOVZ W10, 0x3F800000
	0x03590F30 STR W10, [X9 + 0x20]
	0x03590F34 LDR W9, [X8 + 0x20]
	0x03590F38 SUB W9, W9, 0x1
	0x03590F3C CMP W9, 0x0
	0x03590F40 STR W9, [X8 + 0x20]
	0x03590F44 B.GT 0x3590F58
	0x03590F48 LDR X0, [X8 + 0x18]
	0x03590F4C CBZ X0, 0x3590F68
	0x03590F50 LDR W8, [X0 + 0x40]
	0x03590F54 CBZ W8, 0x3590F60
	0x03590F58 LDR X30, [X31], #0x10
	0x03590F5C RET
	0x03590F60 LDR X30, [X31], #0x10
	0x03590F64 B 0x358EC6C
	0x03590F68 BL 0x1C16F20
	0x03590F6C BL 0x1C16F28
	0x03590F70 STR X30, [X31 - 0x20]!
	0x03590F74 STP X20, X19, [X31 + 0x10]
	0x03590F78 ADRP X20, 0xE4F000
	0x03590F7C LDRB W8, [X20 + 0xF84]
	0x03590F80 MOV X19, X0
	0x03590F84 TBNZ X8, 0x0, 0x3590F9C
	0x03590F88 ADRP X0, 0xB8B000
	0x03590F8C LDR X0, [X0 + 0x6C8]
	0x03590F90 BL 0x1C16CF4
	0x03590F94 MOVZ W8, 0x1
	0x03590F98 STRB W8, [X20 + 0xF84]
	0x03590F9C LDR X8, [X19 + 0x10]
	0x03590FA0 CBZ X8, 0x3590FE4
	0x03590FA4 LDR X9, [X8 + 0x18]
	0x03590FA8 LDR X0, [X8 + 0x40]
	0x03590FAC LDR X1, [X8 + 0x28]
	0x03590FB0 ADRP X19, 0xB8B000
	0x03590FB4 LDR X19, [X19 + 0x6C8]
	0x03590FB8 BLR X9
	0x03590FBC LDR X8, [X19]
	0x03590FC0 MOV X19, X0
	0x03590FC4 LDR W9, [X8 + 0xE0]
	0x03590FC8 CBNZ W9, 0x3590FD4
	0x03590FCC MOV X0, X8
	0x03590FD0 BL 0x1C16DFC
	0x03590FD4 MOV X0, X19
	0x03590FD8 LDP X20, X19, [X31 + 0x10]
	0x03590FDC LDR X30, [X31], #0x20
	0x03590FE0 B 0x358FB08
	0x03590FE4 BL 0x1C16F20
	0x03590FE8 STR X30, [X31 - 0x40]!
	0x03590FEC STP X24, X23, [X31 + 0x10]
	0x03590FF0 STP X22, X21, [X31 + 0x20]
	0x03590FF4 STP X20, X19, [X31 + 0x30]
	0x03590FF8 ADRP X20, 0xE4F000
	0x03590FFC ADRP X23, 0xBA6000
	0x03591000 LDRB W8, [X20 + 0xF85]
	0x03591004 B 0x3EB18EC
	0x03591008 MOV X22, X2
	0x0359100C MOV X19, X1
	0x03591010 MOV X21, X0
	0x03591014 TBNZ X8, 0x0, 0x3591068
	0x03591018 ADRP X0, 0xB64000
	0x0359101C LDR X0, [X0 + 0x5B0]
	0x03591020 BL 0x1C16CF4
	0x03591024 ADRP X0, 0xBA5000
	0x03591028 LDR X0, [X0 + 0xCC0]
	0x0359102C BL 0x1C16CF4
	0x03591030 ADRP X0, 0xB8B000
	0x03591034 LDR X0, [X0 + 0x2C0]
	0x03591038 BL 0x1C16CF4
	0x0359103C ADRP X0, 0xBA5000
	0x03591040 LDR X0, [X0 + 0xDE0]
	0x03591044 BL 0x1C16CF4
	0x03591048 ADRP X0, 0xBA5000
	0x0359104C LDR X0, [X0 + 0xDE8]
	0x03591050 BL 0x1C16CF4
	0x03591054 ADRP X0, 0xBA5000
	0x03591058 LDR X0, [X0 + 0xDD8]
	0x0359105C BL 0x1C16CF4
	0x03591060 MOVZ W8, 0x1
	0x03591064 STRB W8, [X20 + 0xF85]
	0x03591068 LDR X0, [X23]
	0x0359106C BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xE50000
	008 Move X22, 0xBA7000
	009 Move X21, 0xBA7000
	010 Move W8, [X19+3959]
	011 Move X22, [X22+3392]
	012 Move X21, [X21+3288]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0xBA7000
	019 Move X0, [X0+3296]
	020 Call 0x1C17CF4
	021 Move X0, 0xBA7000
	022 Move X0, [X0+3304]
	023 Call 0x1C17CF4
	024 Move X0, 0xBA7000
	025 Move X0, [X0+3288]
	026 Call 0x1C17CF4
	027 Move X0, 0xB8C000
	028 Move X0, [X0+1736]
	029 Call 0x1C17CF4
	030 Move X0, 0xB64000
	031 Move X0, [X0+1592]
	032 Call 0x1C17CF4
	033 Move X0, 0xBA7000
	034 Move X0, [X0+3400]
	035 Call 0x1C17CF4
	036 Move X0, 0xBA7000
	037 Move X0, [X0+3392]
	038 Call 0x1C17CF4
	039 Move X0, 0xB8E000
	040 Move X0, [X0]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+3959], W8
	044 Move X0, [X22]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X19, X0
	048 Call Object..ctor, X0
	049 Move X1, [X21]
	050 Move X0, X20
	051 Call Enumerable.ToArray, X0
	052 Compare X0, 0
	053 JumpIfEqual {104}
	054 Move X8, [X0+24]
	055 Move X20, X0
	056 Compare X8, 0
	057 JumpIfEqual {105}
	058 Move X8, 0xB8C000
	059 Move X8, [X8+1736]
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X21, X0
	063 Call Promise..ctor, X0
	064 Compare X19, 0
	065 JumpIfEqual {104}
	066 Move [X19+24], X21
	067 Compare X21, 0
	068 JumpIfEqual {104}
	069 Move X8, 0xB8E000
	070 Move X8, [X8]
	071 Move X9, 0xB64000
	072 Move X22, 0xBA7000
	073 Move X23, 0xBA7000
	074 Move X8, [X8]
	075 Move X9, [X9+1592]
	076 Move [X21+56], X8
	077 Move X0, [X9]
	078 Move W1, [X20+24]
	079 Move X21, 0xBA7000
	080 Move X21, [X21+3296]
	081 Move X22, [X22+3400]
	082 Move X23, [X23+3304]
	083 Call 0x1C17D6C
	084 Move [X19+16], X0
	085 Move X0, [X21]
	086 Call 0x1C17F10
	087 Move X2, [X22]
	088 Move X1, X19
	089 Move X3, X31
	090 Move X21, X0
	091 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	092 Move X2, [X23]
	093 Move X0, X20
	094 Move X1, X21
	095 Call 0x21DC000, X0, X1
	096 Move X0, [X19+24]
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Return X0
	104 Call 0x1C17F20
	105 Move X0, 0xB63000
	106 Move X0, [X0+1456]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X19, X0
	110 Move X0, 0xB8D000
	111 Move X0, [X0+8]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X19
	115 Move X2, X31
	116 Call InvalidOperationException..ctor, X0, X1
	117 Move X0, 0xBA6000
	118 Move X0, [X0+3408]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Call 0x1C17DEC

Method: RSG.IPromise Resolved()

Disassembly:
	0x0359098C LDR X10, [X8 + 0xB0]
	0x03590990 ADD X10, X10, 0x8
	0x03590994 LDUR X11, [X10 - 0x8]
	0x03590998 CMP X11, X1
	0x0359099C B.EQ 0x35909BC
	0x035909A0 SUBS X9, X9, 0x1
	0x035909A4 ADD X10, X10, 0x10
	0x035909A8 B.NE 0x3590994
	0x035909AC MOVZ W2, 0xB
	0x035909B0 MOV X0, X20
	0x035909B4 BL 0x1C5C788
	0x035909B8 B 0x35909CC
	0x035909BC LDR W9, [X10]
	0x035909C0 ADD W9, W9, 0xB
	0x035909C4 ADD X8, X8, W9, 0x4, SXTW
	0x035909C8 ADD X0, X8, 0x138
	0x035909CC LDP X4, X3, [X0]
	0x035909D0 MOV X0, X20
	0x035909D4 MOV X1, X21
	0x035909D8 MOV X2, X22
	0x035909DC LDP X20, X19, [X31 + 0x20]
	0x035909E0 LDP X22, X21, [X31 + 0x10]
	0x035909E4 LDP X30, X23, [X31], #0x30
	0x035909E8 BR X4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE50000
	005 Move X20, 0xB8C000
	006 Move W8, [X19+3960]
	007 Move X20, [X20+1736]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB8C000
	013 Move X0, [X0+1736]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3960], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call Promise..ctor, X0
	021 Compare X19, 0
	022 JumpIfEqual {30}
	023 Move X0, X19
	024 Call Promise.Resolve, X0
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: RSG.IPromise Rejected(System.Exception ex)

Disassembly:
	0x03591078 BL 0x33BDD8C
	0x0359107C CBZ X20, 0x35911D4
	0x03591080 STP X22, X21, [X20 + 0x18]
	0x03591084 LDR W8, [X21 + 0x10]
	0x03591088 ADRP X9, 0xBA5000
	0x0359108C LDR X9, [X9 + 0xCC0]
	0x03591090 STR W8, [X20 + 0x10]
	0x03591094 ADD W8, W8, 0x1
	0x03591098 STR W8, [X21 + 0x10]
	0x0359109C LDR X0, [X9]
	0x035910A0 ADRP X21, 0xBA5000
	0x035910A4 LDR X21, [X21 + 0xDE0]
	0x035910A8 BL 0x1C16F10
	0x035910AC LDR X2, [X21]
	0x035910B0 MOV X1, X20
	0x035910B4 MOV X3, X31
	0x035910B8 MOV X21, X0
	0x035910BC BL 0x2D27AA8
	0x035910C0 CBZ X19, 0x35911D4
	0x035910C4 ADRP X22, 0xB8B000
	0x035910C8 LDR X8, [X19]
	0x035910CC LDR X22, [X22 + 0x2C0]
	0x035910D0 ADRP X24, 0xB64000
	0x035910D4 ADRP X23, 0xBA5000
	0x035910D8 LDRH W9, [X8 + 0x12E]
	0x035910DC LDR X1, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE4F000
	006 Move X21, 0xB8B000
	007 Move W8, [X20+3961]
	008 Move X21, [X21+1736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB8B000
	015 Move X0, [X0+1736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3961], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Call Promise..ctor, X0
	023 Compare X20, 0
	024 JumpIfEqual {34}
	025 Move X0, X20
	026 Move X1, X19
	027 Call Promise.Reject, X0, X1
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1C17F20

Method: RSG.IPromise Finally(System.Action onComplete)

Disassembly:
	0x035910E0 LDR X24, [X24 + 0x5B0]
	0x035910E4 LDR X23, [X23 + 0xDE8]
	0x035910E8 CBZ X9, 0x359110C
	0x035910EC LDR X10, [X8 + 0xB0]
	0x035910F0 ADD X10, X10, 0x8
	0x035910F4 LDUR X11, [X10 - 0x8]
	0x035910F8 CMP X11, X1
	0x035910FC B.EQ 0x359111C
	0x03591100 SUBS X9, X9, 0x1
	0x03591104 ADD X10, X10, 0x10
	0x03591108 B.NE 0x35910F4
	0x0359110C MOVZ W2, 0x7
	0x03591110 MOV X0, X19
	0x03591114 BL 0x1C5C788
	0x03591118 B 0x359112C
	0x0359111C LDR W9, [X10]
	0x03591120 ADD W9, W9, 0x7
	0x03591124 ADD X8, X8, W9, 0x4, SXTW
	0x03591128 ADD X0, X8, 0x138
	0x0359112C LDP X8, X2, [X0]
	0x03591130 MOV X0, X19
	0x03591134 MOV X1, X21
	0x03591138 BLR X8
	0x0359113C LDR X8, [X24]
	0x03591140 MOV X19, X0
	0x03591144 MOV X0, X8
	0x03591148 BL 0x1C16F10
	0x0359114C LDR X2, [X23]
	0x03591150 MOV X1, X20
	0x03591154 MOV X3, X31
	0x03591158 MOV X21, X0
	0x0359115C BL 0x2A6DA40
	0x03591160 CBZ X19, 0x35911D4
	0x03591164 LDR X8, [X19]
	0x03591168 LDR X1, [X22]
	0x0359116C LDRH W9, [X8 + 0x12E]
	0x03591170 CBZ X9, 0x3591194
	0x03591174 LDR X10, [X8 + 0xB0]
	0x03591178 ADD X10, X10, 0x8
	0x0359117C LDUR X11, [X10 - 0x8]
	0x03591180 CMP X11, X1
	0x03591184 B.EQ 0x35911A4
	0x03591188 SUBS X9, X9, 0x1
	0x0359118C ADD X10, X10, 0x10
	0x03591190 B.NE 0x359117C
	0x03591194 MOVZ W2, 0x17
	0x03591198 MOV X0, X19
	0x0359119C BL 0x1C5C788
	0x035911A0 B 0x35911B4
	0x035911A4 LDR W9, [X10]
	0x035911A8 ADD W9, W9, 0x17
	0x035911AC ADD X8, X8, W9, 0x4, SXTW
	0x035911B0 ADD X0, X8, 0x138
	0x035911B4 LDP X3, X2, [X0]
	0x035911B8 MOV X0, X19
	0x035911BC MOV X1, X21
	0x035911C0 LDP X20, X19, [X31 + 0x30]
	0x035911C4 LDP X22, X21, [X31 + 0x20]
	0x035911C8 LDP X24, X23, [X31 + 0x10]
	0x035911CC LDR X30, [X31], #0x40
	0x035911D0 BR X3
	0x035911D4 BL 0x1C16F20
	0x035911D8 MOV X1, X31
	0x035911DC B 0x33BDD8C
	0x035911E0 STR X30, [X31 - 0x10]!
	0x035911E4 LDR X0, [X0 + 0x18]
	0x035911E8 CBZ X0, 0x35911F4
	0x035911EC LDR X30, [X31], #0x10
	0x035911F0 B 0x358EC6C
	0x035911F4 BL 0x1C16F20
	0x035911F8 STP X30, X19, [X31 - 0x10]!
	0x035911FC LDR X8, [X0 + 0x20]
	0x03591200 CBZ X8, 0x359124C
	0x03591204 MOV X19, X0
	0x03591208 LDR X0, [X8 + 0x18]
	0x0359120C CBZ X0, 0x359124C
	0x03591210 LDR V0, [X8 + 0x10]
	0x03591214 LDR V1, [X19 + 0x10]
	0x03591218 FMOV S2, 1
	0x0359121C SCVTF S0, S0
	0x03591220 FDIV S0, S2, S0
	0x03591224 SCVTF S1, S1
	0x03591228 FMUL S0, S0, S1
	0x0359122C BL 0x358EDE0
	0x03591230 LDR X8, [X19 + 0x18]
	0x03591234 CBZ X8, 0x359124C
	0x03591238 LDR X2, [X8 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE4F000
	008 Move X22, 0xBA6000
	009 Move W8, [X20+3962]
	010 Move X22, [X22+3416]
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xB66000
	018 Move X0, [X0+712]
	019 Call 0x1C17CF4
	020 Move X0, 0xB64000
	021 Move X0, [X0+3696]
	022 Call 0x1C17CF4
	023 Move X0, 0xB8B000
	024 Move X0, [X0+1736]
	025 Call 0x1C17CF4
	026 Move X0, 0xBA6000
	027 Move X0, [X0+3424]
	028 Call 0x1C17CF4
	029 Move X0, 0xBA6000
	030 Move X0, [X0+3432]
	031 Call 0x1C17CF4
	032 Move X0, 0xBA6000
	033 Move X0, [X0+3416]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3962], W8
	037 Move X0, [X22]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X20, X0
	041 Call Object..ctor, X0
	042 Compare X20, 0
	043 JumpIfEqual {100}
	044 Move X8, 0xB8B000
	045 Move X8, [X8+1736]
	046 Move [X20+24], X21
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X21, X0
	050 Call Promise..ctor, X0
	051 Move [X20+16], X21
	052 Compare X21, 0
	053 JumpIfEqual {100}
	054 Move X8, [X19+56]
	055 Move X9, 0xB64000
	056 Move X9, [X9+3696]
	057 Move X22, 0xB66000
	058 Move [X21+56], X8
	059 Move X21, 0xBA6000
	060 Move X0, [X9]
	061 Move X23, 0xBA6000
	062 Move X21, [X21+3424]
	063 Move X22, [X22+712]
	064 Move X23, [X23+3432]
	065 Call 0x1C17F10
	066 Move X2, [X21]
	067 Move X1, X20
	068 Move X3, X31
	069 Move X21, X0
	070 Call Action..ctor, X0, X1, X2
	071 Move X0, X19
	072 Move X1, X21
	073 Move X2, X31
	074 Move X3, X31
	075 Call Promise.Then, X0, X1, X2, X3
	076 Move X0, [X22]
	077 Call 0x1C17F10
	078 Move X2, [X23]
	079 Move X1, X20
	080 Move X3, X31
	081 Move X21, X0
	082 Call Action`1<Object>..ctor, X0, X1, X2
	083 Move X0, X19
	084 Move X1, X21
	085 Call Promise.Catch, X0, X1
	086 Move X0, [X20+16]
	087 Compare X0, 0
	088 JumpIfEqual {100}
	089 Move X1, [X20+24]
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X2, X31
	095 Move X3, X31
	096 Move X30, [X31+48]
	097 Move X23, [X31+56]
	098 Call Promise.Then, X0, X1, X2, X3
	099 Return X0
	100 Call 0x1C17F20

Method: RSG.IPromise ContinueWith(System.Func`1<RSG.IPromise> onComplete)

Disassembly:
	0x03591244 LDP X30, X19, [X31], #0x10
	0x03591248 BR X2
	0x0359124C BL 0x1C16F20
	0x03591250 STR X30, [X31 - 0x10]!
	0x03591254 LDR X9, [X0 + 0x20]
	0x03591258 CBZ X9, 0x3591290
	0x0359125C LDR X8, [X9 + 0x18]
	0x03591260 CBZ X8, 0x3591290
	0x03591264 LDR V1, [X9 + 0x10]
	0x03591268 LDR V2, [X0 + 0x10]
	0x0359126C FMOV S3, 1
	0x03591270 MOV X0, X8
	0x03591274 SCVTF S1, S1
	0x03591278 SCVTF S2, S2
	0x0359127C FDIV S1, S3, S1
	0x03591280 FADD S0, S2, S0
	0x03591284 FMUL S0, S0, S1
	0x03591288 LDR X30, [X31], #0x10
	0x0359128C B 0x358EDE0
	0x03591290 BL 0x1C16F20
	0x03591294 STR X30, [X31 - 0x20]!
	0x03591298 STP X20, X19, [X31 + 0x10]
	0x0359129C ADRP X20, 0xE4E000
	0x035912A0 LDRB W8, [X20 + 0xF86]
	0x035912A4 MOV X19, X0
	0x035912A8 TBNZ X8, 0x0, 0x35912C0
	0x035912AC ADRP X0, 0xB8A000
	0x035912B0 LDR X0, [X0 + 0x6C8]
	0x035912B4 BL 0x1C16CF4
	0x035912B8 MOVZ W8, 0x1
	0x035912BC STRB W8, [X20 + 0xF86]
	0x035912C0 LDR X8, [X19 + 0x10]
	0x035912C4 CBZ X8, 0x3591308
	0x035912C8 LDR X9, [X8 + 0x18]
	0x035912CC LDR X0, [X8 + 0x40]
	0x035912D0 LDR X1, [X8 + 0x28]
	0x035912D4 ADRP X19, 0xB8A000
	0x035912D8 LDR X19, [X19 + 0x6C8]
	0x035912DC BLR X9
	0x035912E0 LDR X8, [X19]
	0x035912E4 MOV X19, X0
	0x035912E8 LDR W9, [X8 + 0xE0]
	0x035912EC CBNZ W9, 0x35912F8
	0x035912F0 MOV X0, X8
	0x035912F4 BL 0x1C16DFC
	0x035912F8 MOV X0, X19
	0x035912FC LDP X20, X19, [X31 + 0x10]
	0x03591300 LDR X30, [X31], #0x20
	0x03591304 B 0x358FEBC
	0x03591308 BL 0x1C16F20
	0x0359130C STP X30, X23, [X31 - 0x30]!
	0x03591310 STP X22, X21, [X31 + 0x10]
	0x03591314 STP X20, X19, [X31 + 0x20]
	0x03591318 ADRP X22, 0xE4E000
	0x0359131C ADRP X23, 0xBA5000
	0x03591320 LDRB W8, [X22 + 0xF87]
	0x03591324 LDR X23, [X23 + 0xDF0]
	0x03591328 MOV W21, W2
	0x0359132C MOV X20, X1
	0x03591330 MOV X19, X0
	0x03591334 TBNZ X8, 0x0, 0x35913A0
	0x03591338 ADRP X0, 0xB64000
	0x0359133C LDR X0, [X0 + 0x5B0]
	0x03591340 BL 0x1C16CF4
	0x03591344 ADRP X0, 0xB65000
	0x03591348 LDR X0, [X0 + 0x2C8]
	0x0359134C BL 0x1C16CF4
	0x03591350 ADRP X0, 0xB63000
	0x03591354 LDR X0, [X0 + 0xE70]
	0x03591358 BL 0x1C16CF4
	0x0359135C ADRP X0, 0xB8B000
	0x03591360 LDR X0, [X0 + 0x2C0]
	0x03591364 BL 0x1C16CF4
	0x03591368 ADRP X0, 0xBA5000
	0x0359136C LDR X0, [X0 + 0xDF8]
	0x03591370 BL 0x1C16CF4
	0x03591374 ADRP X0, 0xBA5000
	0x03591378 LDR X0, [X0 + 0xE00]
	0x0359137C BL 0x1C16CF4
	0x03591380 ADRP X0, 0xBA5000
	0x03591384 LDR X0, [X0 + 0xE08]
	0x03591388 BL 0x1C16CF4
	0x0359138C ADRP X0, 0xBA5000
	0x03591390 LDR X0, [X0 + 0xDF0]
	0x03591394 BL 0x1C16CF4
	0x03591398 MOVZ W8, 0x1
	0x0359139C STRB W8, [X22 + 0xF87]
	0x035913A0 LDR X0, [X23]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE4F000
	009 Move X23, 0xBA6000
	010 Move X22, 0xB8B000
	011 Move W8, [X21+3963]
	012 Move X23, [X23+3440]
	013 Move X22, [X22+1736]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xB66000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0xB64000
	024 Move X0, [X0+3696]
	025 Call 0x1C17CF4
	026 Move X0, 0xB8B000
	027 Move X0, [X0+1736]
	028 Call 0x1C17CF4
	029 Move X0, 0xBA6000
	030 Move X0, [X0+3448]
	031 Call 0x1C17CF4
	032 Move X0, 0xBA6000
	033 Move X0, [X0+3456]
	034 Call 0x1C17CF4
	035 Move X0, 0xBA6000
	036 Move X0, [X0+3440]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3963], W8
	040 Move X0, [X23]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X21, X0
	044 Call Object..ctor, X0
	045 Move X0, [X22]
	046 Call 0x1C17F10
	047 Move X22, X0
	048 Call Promise..ctor, X0
	049 Compare X21, 0
	050 JumpIfEqual {101}
	051 Move [X21+16], X22
	052 Compare X22, 0
	053 JumpIfEqual {101}
	054 Move X8, [X20+56]
	055 Move X9, 0xB64000
	056 Move X9, [X9+3696]
	057 Move X23, 0xB66000
	058 Move [X22+56], X8
	059 Move X22, 0xBA6000
	060 Move X0, [X9]
	061 Move X24, 0xBA6000
	062 Move X22, [X22+3448]
	063 Move X23, [X23+712]
	064 Move X24, [X24+3456]
	065 Call 0x1C17F10
	066 Move X2, [X22]
	067 Move X1, X21
	068 Move X3, X31
	069 Move X22, X0
	070 Call Action..ctor, X0, X1, X2
	071 Move X0, X20
	072 Move X1, X22
	073 Move X2, X31
	074 Move X3, X31
	075 Call Promise.Then, X0, X1, X2, X3
	076 Move X0, [X23]
	077 Call 0x1C17F10
	078 Move X2, [X24]
	079 Move X1, X21
	080 Move X3, X31
	081 Move X22, X0
	082 Call Action`1<Object>..ctor, X0, X1, X2
	083 Move X0, X20
	084 Move X1, X22
	085 Call Promise.Catch, X0, X1
	086 Move X0, [X21+16]
	087 Compare X0, 0
	088 JumpIfEqual {101}
	089 Move X1, X19
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X2, X31
	097 Move X3, X31
	098 Move X30, [X31+64]
	099 Call Promise.Then, X0, X1, X2, X3
	100 Return X0
	101 Call 0x1C17F20

Method: RSG.IPromise`1<ConvertedT> ContinueWith(System.Func`1<RSG.IPromise`1<ConvertedT>> onComplete)

Disassembly:
	0x02236D54 MOV X0, X20
	0x02236D58 LDP X20, X19, [X31 + 0x10]
	0x02236D5C LDR X1, [X8 + 0x8]
	0x02236D60 LDR X30, [X31], #0x20
	0x02236D64 B 0x2238C0C
	0x02236D68 STR X30, [X31 - 0x20]!
	0x02236D6C STP X20, X19, [X31 + 0x10]
	0x02236D70 LDR X8, [X1 + 0x38]
	0x02236D74 MOV X19, X1
	0x02236D78 MOV X20, X0
	0x02236D7C CBNZ X8, 0x2236D9C
	0x02236D80 ADRP X0, 0x1EE6000
	0x02236D84 LDR X0, [X0 + 0x2C8]
	0x02236D88 BL 0x1C16CF4
	0x02236D8C LDR X8, [X19 + 0x38]
	0x02236D90 CBNZ X8, 0x2236D9C
	0x02236D94 MOV X0, X19
	0x02236D98 BL 0x1C5C6E0
	0x02236D9C ADRP X8, 0x1EE6000
	0x02236DA0 LDR X8, [X8 + 0x2C8]
	0x02236DA4 LDR X0, [X8]
	0x02236DA8 LDR W8, [X0 + 0xE0]
	0x02236DAC CBNZ W8, 0x2236DB4
	0x02236DB0 BL 0x1C16DFC
	0x02236DB4 LDR X8, [X19 + 0x38]
	0x02236DB8 MOV X0, X20
	0x02236DBC LDP X20, X19, [X31 + 0x10]
	0x02236DC0 LDR X1, [X8 + 0x8]
	0x02236DC4 LDR X30, [X31], #0x20
	0x02236DC8 B 0x22391B4
	0x02236DCC STR X30, [X31 - 0x20]!
	0x02236DD0 STP X20, X19, [X31 + 0x10]
	0x02236DD4 LDR X8, [X1 + 0x38]
	0x02236DD8 MOV X19, X1
	0x02236DDC MOV X20, X0
	0x02236DE0 CBNZ X8, 0x2236E00
	0x02236DE4 ADRP X0, 0x1EE6000
	0x02236DE8 LDR X0, [X0 + 0x2C8]
	0x02236DEC BL 0x1C16CF4
	0x02236DF0 LDR X8, [X19 + 0x38]
	0x02236DF4 CBNZ X8, 0x2236E00
	0x02236DF8 MOV X0, X19
	0x02236DFC BL 0x1C5C6E0
	0x02236E00 ADRP X8, 0x1EE6000
	0x02236E04 LDR X8, [X8 + 0x2C8]
	0x02236E08 LDR X0, [X8]
	0x02236E0C LDR W8, [X0 + 0xE0]
	0x02236E10 CBNZ W8, 0x2236E18
	0x02236E14 BL 0x1C16DFC
	0x02236E18 LDR X8, [X19 + 0x38]
	0x02236E1C MOV X0, X20
	0x02236E20 LDP X20, X19, [X31 + 0x10]
	0x02236E24 LDR X1, [X8 + 0x8]
	0x02236E28 LDR X30, [X31], #0x20
	0x02236E2C B 0x223975C
	0x02236E30 STR X30, [X31 - 0x20]!
	0x02236E34 STP X20, X19, [X31 + 0x10]
	0x02236E38 LDR X8, [X1 + 0x38]
	0x02236E3C MOV X19, X1
	0x02236E40 MOV X20, X0
	0x02236E44 CBNZ X8, 0x2236E64
	0x02236E48 ADRP X0, 0x1EE6000
	0x02236E4C LDR X0, [X0 + 0x2C8]
	0x02236E50 BL 0x1C16CF4
	0x02236E54 LDR X8, [X19 + 0x38]
	0x02236E58 CBNZ X8, 0x2236E64
	0x02236E5C MOV X0, X19
	0x02236E60 BL 0x1C5C6E0
	0x02236E64 ADRP X8, 0x1EE6000
	0x02236E68 LDR X8, [X8 + 0x2C8]
	0x02236E6C LDR X0, [X8]
	0x02236E70 LDR W8, [X0 + 0xE0]
	0x02236E74 CBNZ W8, 0x2236E7C
	0x02236E78 BL 0x1C16DFC
	0x02236E7C LDR X8, [X19 + 0x38]
	0x02236E80 MOV X0, X20
	0x02236E84 LDP X20, X19, [X31 + 0x10]
	0x02236E88 LDR X1, [X8 + 0x8]
	0x02236E8C LDR X30, [X31], #0x20
	0x02236E90 B 0x2239D04
	0x02236E94 STR X30, [X31 - 0x20]!
	0x02236E98 STP X20, X19, [X31 + 0x10]
	0x02236E9C LDR X8, [X1 + 0x38]
	0x02236EA0 MOV X19, X1
	0x02236EA4 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {28}
	013 Move X0, 0x1EC1000
	014 Move X0, [X0+712]
	015 Call 0x1C17CF4
	016 Move X0, 0x1EBF000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x1EE6000
	020 Move X0, [X0+1736]
	021 Call 0x1C17CF4
	022 Move X8, [X20+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {28}
	025 Move X0, X20
	026 Call 0x1C5D6E0
	027 Move X8, [X20+56]
	028 Move X0, [X8]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Call 0x1C17F10
	036 Move X8, [X20+56]
	037 Move X22, X0
	038 Move X1, [X8+8]
	039 Move X8, [X1]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, 0x1EE6000
	042 Move X8, [X8+1736]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X23, X0
	047 Call Promise..ctor, X0
	048 Compare X22, 0
	049 JumpIfEqual {99}
	050 Move [X22+16], X23
	051 Compare X23, 0
	052 JumpIfEqual {99}
	053 Move X1, [X21+56]
	054 Move X0, X23
	055 Move X2, X31
	056 Call Promise.WithName, X0, X1
	057 Move X8, 0x1EBF000
	058 Move X8, [X8+3696]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X8, [X20+56]
	062 Move X1, X22
	063 Move X3, X31
	064 Move X23, X0
	065 Move X2, [X8+16]
	066 Call Action..ctor, X0, X1, X2
	067 Move X0, X21
	068 Move X1, X23
	069 Move X2, X31
	070 Call Promise.Then, X0, X1
	071 Move X8, 0x1EC1000
	072 Move X8, [X8+712]
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 Move X8, [X20+56]
	076 Move X1, X22
	077 Move X3, X31
	078 Move X23, X0
	079 Move X2, [X8+24]
	080 Call Action`1<Object>..ctor, X0, X1, X2
	081 Move X0, X21
	082 Move X1, X23
	083 Move X2, X31
	084 Call Promise.Catch, X0, X1
	085 Move X0, [X22+16]
	086 Compare X0, 0
	087 JumpIfEqual {99}
	088 Move X8, [X20+56]
	089 Move X1, X19
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X2, [X8+40]
	095 Move X3, [X2]
	096 Move X30, [X31+48]
	097 Move X23, [X31+56]
	098 CallNoReturn X3
	099 Call 0x1C17F20

Method: RSG.IPromise Progress(System.Action`1<System.Single> onProgress)

Disassembly:
	0x035913AC MOV X22, X0
	0x035913B0 BL 0x33BDD8C
	0x035913B4 CBZ X22, 0x3591608
	0x035913B8 ADRP X8, 0xB64000
	0x035913BC LDR X8, [X8 + 0x5B0]
	0x035913C0 STR X19, [X22 + 0x18]
	0x035913C4 STR W21, [X22 + 0x10]
	0x035913C8 ADRP X21, 0xBA5000
	0x035913CC LDR X0, [X8]
	0x035913D0 LDR X21, [X21 + 0xE08]
	0x035913D4 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Compare X1, 0
	005 JumpIfEqual {12}
	006 Move W8, [X19+64]
	007 Compare W8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X19
	010 Move X2, X19
	011 Call Promise.AddProgressHandler, X0, X1, X2
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Void PropagateUnhandledException(System.Object sender, System.Exception ex)

Disassembly:
	0x035913D8 LDR X2, [X21]
	0x035913DC MOV X1, X22
	0x035913E0 MOV X3, X31
	0x035913E4 MOV X21, X0
	0x035913E8 BL 0x2A6DA40
	0x035913EC CBZ X20, 0x3591608
	0x035913F0 ADRP X22, 0xB8B000
	0x035913F4 LDR X8, [X20]
	0x035913F8 LDR X22, [X22 + 0x2C0]
	0x035913FC LDRH W9, [X8 + 0x12E]
	0x03591400 LDR X1, [X22]
	0x03591404 CBZ X9, 0x3591428
	0x03591408 LDR X10, [X8 + 0xB0]
	0x0359140C ADD X10, X10, 0x8
	0x03591410 LDUR X11, [X10 - 0x8]
	0x03591414 CMP X11, X1
	0x03591418 B.EQ 0x3591438
	0x0359141C SUBS X9, X9, 0x1
	0x03591420 ADD X10, X10, 0x10
	0x03591424 B.NE 0x3591410
	0x03591428 MOVZ W2, 0x17
	0x0359142C MOV X0, X20
	0x03591430 BL 0x1C5C788
	0x03591434 B 0x3591448
	0x03591438 LDR W9, [X10]
	0x0359143C ADD W9, W9, 0x17
	0x03591440 ADD X8, X8, W9, 0x4, SXTW
	0x03591444 ADD X0, X8, 0x138
	0x03591448 LDP X8, X2, [X0]
	0x0359144C MOV X0, X20
	0x03591450 MOV X1, X21
	0x03591454 BLR X8
	0x03591458 LDR X21, [X19 + 0x20]
	0x0359145C MOV X20, X0
	0x03591460 CBNZ X21, 0x3591494
	0x03591464 ADRP X8, 0xB65000
	0x03591468 LDR X8, [X8 + 0x2C8]
	0x0359146C LDR X0, [X8]
	0x03591470 BL 0x1C16F10
	0x03591474 ADRP X8, 0xBA5000
	0x03591478 LDR X8, [X8 + 0xDF8]
	0x0359147C MOV X1, X19
	0x03591480 MOV X3, X31
	0x03591484 MOV X21, X0
	0x03591488 LDR X2, [X8]
	0x0359148C BL 0x2A6B948
	0x03591490 STR X21, [X19 + 0x20]
	0x03591494 CBZ X20, 0x3591608
	0x03591498 LDR X8, [X20]
	0x0359149C LDR X1, [X22]
	0x035914A0 LDRH W9, [X8 + 0x12E]
	0x035914A4 CBZ X9, 0x35914C8
	0x035914A8 LDR X10, [X8 + 0xB0]
	0x035914AC ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE4F000
	008 Move X21, 0xB8B000
	009 Move W8, [X22+3964]
	010 Move X21, [X21+1736]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xBA6000
	018 Move X0, [X0+3464]
	019 Call 0x1C17CF4
	020 Move X0, 0xB8B000
	021 Move X0, [X0+1736]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3964], W8
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X22, [X8+8]
	033 Compare X22, 0
	034 JumpIfEqual {63}
	035 Move X23, 0xBA6000
	036 Move W8, [X0+224]
	037 Move X23, [X23+3464]
	038 Compare W8, 0
	039 JumpIfNotEqual {44}
	040 Call 0x1C17DFC
	041 Move X8, [X21]
	042 Move X8, [X8+184]
	043 Move X22, [X8+8]
	044 Move X0, [X23]
	045 Call 0x1C17F10
	046 Move X1, X20
	047 Move X21, X0
	048 Call ExceptionEventArgs..ctor, X0, X1
	049 Compare X22, 0
	050 JumpIfEqual {70}
	051 Move X4, [X22+24]
	052 Move X0, [X22+64]
	053 Move X3, [X22+40]
	054 Move X1, X19
	055 Move X2, X21
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Move X23, [X31+56]
	062 CallNoReturn X4
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return 
	070 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x035914B0 LDUR X11, [X10 - 0x8]
	0x035914B4 CMP X11, X1
	0x035914B8 B.EQ 0x35914D8
	0x035914BC SUBS X9, X9, 0x1
	0x035914C0 ADD X10, X10, 0x10
	0x035914C4 B.NE 0x35914B0
	0x035914C8 MOVZ W2, 0x5
	0x035914CC MOV X0, X20
	0x035914D0 BL 0x1C5C788
	0x035914D4 B 0x35914E8
	0x035914D8 LDR W9, [X10]
	0x035914DC ADD W9, W9, 0x5
	0x035914E0 ADD X8, X8, W9, 0x4, SXTW
	0x035914E4 ADD X0, X8, 0x138
	0x035914E8 LDP X8, X2, [X0]
	0x035914EC MOV X0, X20
	0x035914F0 MOV X1, X21
	0x035914F4 BLR X8
	0x035914F8 LDR X21, [X19 + 0x28]
	0x035914FC MOV X20, X0
	0x03591500 CBNZ X21, 0x3591534
	0x03591504 ADRP X8, 0xB63000
	0x03591508 LDR X8, [X8 + 0xE70]
	0x0359150C LDR X0, [X8]
	0x03591510 BL 0x1C16F10
	0x03591514 ADRP X8, 0xBA5000
	0x03591518 LDR X8, [X8 + 0xE00]
	0x0359151C MOV X1, X19
	0x03591520 MOV X3, X31
	0x03591524 MOV X21, X0
	0x03591528 LDR X2, [X8]
	0x0359152C BL 0x3314368
	0x03591530 STR X21, [X19 + 0x28]
	0x03591534 CBZ X20, 0x3591608
	0x03591538 LDR X8, [X20]
	0x0359153C LDR X1, [X22]
	0x03591540 LDRH W9, [X8 + 0x12E]
	0x03591544 CBZ X9, 0x3591568

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE4F000
	007 Move X20, 0xB8B000
	008 Move X21, 0xBA6000
	009 Move X19, 0xBA6000
	010 Move W8, [X22+3965]
	011 Move X20, [X20+1736]
	012 Move X21, [X21+3472]
	013 Move X19, [X19+3480]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xBA6000
	019 Move X0, [X0+3480]
	020 Call 0x1C17CF4
	021 Move X0, 0xBA6000
	022 Move X0, [X0+3472]
	023 Call 0x1C17CF4
	024 Move X0, 0xB8B000
	025 Move X0, [X0+1736]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3965], W8
	029 Move X8, [X20]
	030 Move X8, [X8+184]
	031 Move [X8], W31
	032 Move X0, [X21]
	033 Call 0x1C17F10
	034 Move X1, [X19]
	035 Move X19, X0
	036 Call HashSet`1<Object>..ctor, X0
	037 Move X8, [X20]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X8, [X8+184]
	041 Move [X8+24], X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+48]
	045 Return 

Method: System.Void <InvokeResolveHandlers>b__35_0(RSG.Promise/ResolveHandler handler)

Disassembly:
	0x03591548 LDR X10, [X8 + 0xB0]

ISIL:
	001 Call Promise.InvokeResolveHandler, X0, X1, X2
	002 Return 

Method: System.Void <Done>b__40_0(System.Exception ex)

Disassembly:
	0x0359154C ADD X10, X10, 0x8
	0x03591550 LDUR X11, [X10 - 0x8]
	0x03591554 CMP X11, X1
	0x03591558 B.EQ 0x3591578
	0x0359155C SUBS X9, X9, 0x1
	0x03591560 ADD X10, X10, 0x10
	0x03591564 B.NE 0x3591550
	0x03591568 MOVZ W2, 0x8
	0x0359156C MOV X0, X20
	0x03591570 BL 0x1C5C788
	0x03591574 B 0x3591588
	0x03591578 LDR W9, [X10]
	0x0359157C ADD W9, W9, 0x8
	0x03591580 ADD X8, X8, W9, 0x4, SXTW
	0x03591584 ADD X0, X8, 0x138
	0x03591588 LDP X8, X2, [X0]
	0x0359158C MOV X0, X20
	0x03591590 MOV X1, X21
	0x03591594 BLR X8
	0x03591598 CBZ X0, 0x3591608
	0x0359159C LDR X8, [X0]
	0x035915A0 LDR X1, [X22]
	0x035915A4 MOV X19, X0
	0x035915A8 LDRH W9, [X8 + 0x12E]
	0x035915AC CBZ X9, 0x35915D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE4F000
	007 Move X22, 0xB8B000
	008 Move W8, [X21+3966]
	009 Move X22, [X22+1736]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB8B000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3966], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Promise.PropagateUnhandledException, X0, X1
	034 Return 

Method: System.Void <Done>b__41_0(System.Exception ex)

Disassembly:
	0x035915B0 LDR X10, [X8 + 0xB0]
	0x035915B4 ADD X10, X10, 0x8
	0x035915B8 LDUR X11, [X10 - 0x8]
	0x035915BC CMP X11, X1
	0x035915C0 B.EQ 0x35915E0
	0x035915C4 SUBS X9, X9, 0x1
	0x035915C8 ADD X10, X10, 0x10
	0x035915CC B.NE 0x35915B8
	0x035915D0 MOVZ W2, 0x4
	0x035915D4 MOV X0, X19
	0x035915D8 BL 0x1C5C788
	0x035915DC B 0x35915F0
	0x035915E0 LDR W9, [X10]
	0x035915E4 ADD W9, W9, 0x4
	0x035915E8 ADD X8, X8, W9, 0x4, SXTW
	0x035915EC ADD X0, X8, 0x138
	0x035915F0 LDP X2, X1, [X0]
	0x035915F4 MOV X0, X19
	0x035915F8 LDP X20, X19, [X31 + 0x20]
	0x035915FC LDP X22, X21, [X31 + 0x10]
	0x03591600 LDP X30, X23, [X31], #0x30
	0x03591604 BR X2
	0x03591608 BL 0x1C16F20
	0x0359160C MOV X1, X31
	0x03591610 B 0x33BDD8C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE4F000
	007 Move X22, 0xB8B000
	008 Move W8, [X21+3967]
	009 Move X22, [X22+1736]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB8B000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3967], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Promise.PropagateUnhandledException, X0, X1
	034 Return 

Method: System.Void <Done>b__42_0(System.Exception ex)

Disassembly:
	0x03591614 STR X30, [X31 - 0x10]!
	0x03591618 LDR X0, [X0 + 0x18]
	0x0359161C CBZ X0, 0x3591638
	0x03591620 LDR W8, [X0 + 0x40]
	0x03591624 CBZ W8, 0x3591630
	0x03591628 LDR X30, [X31], #0x10
	0x0359162C RET
	0x03591630 LDR X30, [X31], #0x10
	0x03591634 B 0x358E1F0
	0x03591638 BL 0x1C16F20
	0x0359163C STR X30, [X31 - 0x10]!
	0x03591640 LDR X0, [X0 + 0x18]
	0x03591644 CBZ X0, 0x3591660
	0x03591648 LDR W8, [X0 + 0x40]
	0x0359164C CBZ W8, 0x3591658
	0x03591650 LDR X30, [X31], #0x10
	0x03591654 RET
	0x03591658 LDR X30, [X31], #0x10
	0x0359165C B 0x358EC6C
	0x03591660 BL 0x1C16F20
	0x03591664 STP X30, X19, [X31 - 0x10]!
	0x03591668 LDR X9, [X0 + 0x18]
	0x0359166C CBZ X9, 0x35916B0
	0x03591670 MOV X8, X0
	0x03591674 LDR X0, [X9 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE4F000
	007 Move X22, 0xB8B000
	008 Move W8, [X21+3968]
	009 Move X22, [X22+1736]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB8B000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3968], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Promise.PropagateUnhandledException, X0, X1
	034 Return 

