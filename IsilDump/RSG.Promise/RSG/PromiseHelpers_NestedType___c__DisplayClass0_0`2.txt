Type: RSG.PromiseHelpers/<>c__DisplayClass0_0`2

Method: System.Void .ctor()

Disassembly:
	0x02372B4C CBZ X0, 0x2372B88
	0x02372B50 LDR X8, [X1 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <All>b__0(T1 val)

Disassembly:
	0x02372B54 MOV X19, X1
	0x02372B58 LDR X1, [X20 + 0x18]
	0x02372B5C LDR X8, [X8 + 0xC0]
	0x02372B60 LDR X2, [X8 + 0x28]
	0x02372B64 BL 0x28D15E4
	0x02372B68 LDR X0, [X20 + 0x10]
	0x02372B6C CBZ X0, 0x2372B88
	0x02372B70 LDR X8, [X19 + 0x20]
	0x02372B74 LDP X20, X19, [X31 + 0x10]
	0x02372B78 LDR X8, [X8 + 0xC0]
	0x02372B7C LDR X1, [X8 + 0x30]
	0x02372B80 LDR X30, [X31], #0x20
	0x02372B84 B 0x28D196C
	0x02372B88 BL 0x1C16F20
	0x02372B8C MOV X1, X31
	0x02372B90 B 0x33BDD8C
	0x02372B94 STR X30, [X31 - 0x10]!
	0x02372B98 MOV X8, X0
	0x02372B9C LDR X0, [X0 + 0x18]
	0x02372BA0 MOVZ W9, 0x1
	0x02372BA4 STRB W9, [X8 + 0x10]
	0x02372BA8 CBZ X0, 0x2372BC0
	0x02372BAC LDR X8, [X0]
	0x02372BB0 LDR X2, [X8 + 0x278]
	0x02372BB4 LDR X1, [X8 + 0x280]
	0x02372BB8 LDR X30, [X31], #0x10
	0x02372BBC BR X2
	0x02372BC0 BL 0x1C16F20
	0x02372BC4 MOV X1, X31
	0x02372BC8 B 0x33BDD8C
	0x02372BCC STP X30, X21, [X31 - 0x20]!
	0x02372BD0 STP X20, X19, [X31 + 0x10]
	0x02372BD4 ADRP X21, 0x2067000
	0x02372BD8 ADRP X20, 0x1D81000
	0x02372BDC LDRB W8, [X21 + 0x8D8]
	0x02372BE0 LDR X20, [X20 + 0x598]
	0x02372BE4 MOV X19, X0
	0x02372BE8 TBNZ X8, 0x0, 0x2372C18
	0x02372BEC ADRP X0, 0x1DAA000
	0x02372BF0 LDR X0, [X0 + 0xB68]
	0x02372BF4 BL 0x1C16CF4
	0x02372BF8 ADRP X0, 0x1DAA000
	0x02372BFC LDR X0, [X0 + 0x130]
	0x02372C00 BL 0x1C16CF4
	0x02372C04 ADRP X0, 0x1D81000
	0x02372C08 LDR X0, [X0 + 0x598]
	0x02372C0C BL 0x1C16CF4
	0x02372C10 MOVZ W8, 0x1
	0x02372C14 STRB W8, [X21 + 0x8D8]
	0x02372C18 LDR X0, [X20]
	0x02372C1C LDR X20, [X19 + 0x10]
	0x02372C20 LDR W8, [X0 + 0xE0]
	0x02372C24 CBNZ W8, 0x2372C2C
	0x02372C28 BL 0x1C16DFC
	0x02372C2C MOV X0, X20
	0x02372C30 MOV X1, X31
	0x02372C34 MOV X2, X31
	0x02372C38 BL 0x3C354F8
	0x02372C3C TBZ X0, 0x0, 0x2372C58
	0x02372C40 LDR X0, [X19 + 0x10]
	0x02372C44 CBZ X0, 0x2372CAC
	0x02372C48 LDP X20, X19, [X31 + 0x10]
	0x02372C4C MOV X1, X31
	0x02372C50 LDP X30, X21, [X31], #0x20
	0x02372C54 B 0x3E209C8
	0x02372C58 ADRP X19, 0x1DAA000
	0x02372C5C LDR X19, [X19 + 0xB68]
	0x02372C60 LDR X0, [X19]
	0x02372C64 LDR W8, [X0 + 0xE0]
	0x02372C68 CBNZ W8, 0x2372C74
	0x02372C6C BL 0x1C16DFC
	0x02372C70 LDR X0, [X19]
	0x02372C74 ADRP X9, 0x1DAA000
	0x02372C78 LDR X8, [X0 + 0xB8]
	0x02372C7C LDR X9, [X9 + 0x130]
	0x02372C80 LDR X19, [X8]
	0x02372C84 LDR X0, [X9]
	0x02372C88 BL 0x1C16F10
	0x02372C8C MOV X1, X19
	0x02372C90 MOV X2, X31
	0x02372C94 MOV X20, X0
	0x02372C98 BL 0x3D6B65C
	0x02372C9C MOV X0, X20
	0x02372CA0 LDP X20, X19, [X31 + 0x10]
	0x02372CA4 LDP X30, X21, [X31], #0x20
	0x02372CA8 RET
	0x02372CAC BL 0x1C16F20
	0x02372CB0 MOV X1, X31
	0x02372CB4 B 0x33BDD8C
	0x02372CB8 STR X30, [X31 - 0x30]!
	0x02372CBC STP X22, X21, [X31 + 0x10]
	0x02372CC0 STP X20, X19, [X31 + 0x20]
	0x02372CC4 LDR X22, [X0 + 0x10]
	0x02372CC8 CBZ X22, 0x2372D3C
	0x02372CCC LDR X8, [X3 + 0x20]
	0x02372CD0 MOV X20, X2
	0x02372CD4 MOV W19, W1
	0x02372CD8 LDR X8, [X8 + 0xC0]
	0x02372CDC LDR X21, [X8 + 0x10]
	0x02372CE0 LDRB W8, [X21 + 0x135]
	0x02372CE4 TBNZ X8, 0x0, 0x2372CF4
	0x02372CE8 MOV X0, X21
	0x02372CEC BL 0x1C5C684
	0x02372CF0 MOV X21, X0
	0x02372CF4 CBZ X20, 0x2372D18
	0x02372CF8 MOV X0, X20
	0x02372CFC MOV X1, X21
	0x02372D00 BL 0x1C16E00
	0x02372D04 MOV X2, X0
	0x02372D08 CBNZ X0, 0x2372D1C
	0x02372D0C MOV X0, X20
	0x02372D10 MOV X1, X21
	0x02372D14 BL 0x1C171E0
	0x02372D18 MOV X2, X31
	0x02372D1C LDR X4, [X22 + 0x18]
	0x02372D20 LDR X0, [X22 + 0x40]
	0x02372D24 LDR X3, [X22 + 0x28]
	0x02372D28 MOV W1, W19
	0x02372D2C LDP X20, X19, [X31 + 0x20]
	0x02372D30 LDP X22, X21, [X31 + 0x10]
	0x02372D34 LDR X30, [X31], #0x30
	0x02372D38 BR X4
	0x02372D3C BL 0x1C16F20
	0x02372D40 MOV X1, X31
	0x02372D44 B 0x33BDD8C
	0x02372D48 STP X29, X30, [X31 - 0x40]!
	0x02372D4C STP X24, X23, [X31 + 0x10]
	0x02372D50 STP X22, X21, [X31 + 0x20]
	0x02372D54 STP X20, X19, [X31 + 0x30]
	0x02372D58 ADD X29, X31, 0x0
	0x02372D5C SUB X31, X31, 0x20
	0x02372D60 MRS X24, 0xC000
	0x02372D64 LDR X8, [X24 + 0x28]
	0x02372D68 MOV W19, W1
	0x02372D6C ADD X9, X31, 0x0
	0x02372D70 MOV X21, X3
	0x02372D74 STUR X8, [X29 - 0x8]
	0x02372D78 LDR X8, [X3 + 0x20]
	0x02372D7C MOV X22, X2
	0x02372D80 LDR X8, [X8 + 0xC0]
	0x02372D84 LDR X1, [X8 + 0x10]
	0x02372D88 LDR W8, [X1 + 0xFC]
	0x02372D8C ADD X8, X8, 0xF
	0x02372D90 AND X8, X8, 0x1FFFFFFFF
	0x02372D94 SUB X23, X9, X8
	0x02372D98 ADD X31, X23, 0x0
	0x02372D9C LDRB W8, [X1 + 0x135]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 48
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X19, X2
	017 Move X23, X0
	018 Move [X29-8], X8
	019 Move [X29-40], X1
	020 Move X25, [X2+32]
	021 Move X8, [X25+192]
	022 Move X9, [X8]
	023 Move X8, [X8+24]
	024 Move W24, [X9+252]
	025 Move W22, [X8+252]
	026 Add X8, X31, 0
	027 Add X10, X24, 15
	028 And X10, X10, 0x1FFFFFFFF
	029 Subtract X20, X8, X10
	030 Add X31, X20, 0
	031 Add X10, X22, 15
	032 Add X8, X31, 0
	033 And X10, X10, 0x1FFFFFFFF
	034 Subtract X21, X8, X10
	035 Add X31, X21, 0
	036 Move W8, [X9+40]
	037 Move X0, X20
	038 Move X2, X24
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X8, X29, 40
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Call 0x3EB2AC0
	043 Move X8, [X25+192]
	044 Move X0, X23
	045 Move X2, X20
	046 Move W3, W24
	047 Move X8, [X8+8]
	048 Move X1, [X8+128]
	049 Call 0x1C17D1C
	050 Move X8, [X19+32]
	051 Move X0, X23
	052 Move X8, [X8+192]
	053 Move X8, [X8+8]
	054 Move X8, [X8+128]
	055 Add X1, X8, 32
	056 Call 0x1C17D18
	057 Move X8, [X19+32]
	058 Move W9, [X0]
	059 Move W1, 4
	060 Move X8, [X8+192]
	061 Subtract W27, W9, 1
	062 Move X8, [X8+8]
	063 Move X8, [X8+128]
	064 Add X25, X8, 32
	065 Move X0, X25
	066 Call 0x1C17D14
	067 Move X0, X23
	068 Move X1, X25
	069 Call 0x1C17D18
	070 Move [X0], W27
	071 Move X8, [X19+32]
	072 Move X0, X23
	073 Move X8, [X8+192]
	074 Move X8, [X8+8]
	075 Move X8, [X8+128]
	076 Add X1, X8, 32
	077 Call 0x1C17D18
	078 Move W8, [X0]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, [X19+32]
	081 Move X0, X23
	082 Move X8, [X8+192]
	083 Move X8, [X8+8]
	084 Move X8, [X8+128]
	085 Add X1, X8, 64
	086 Call 0x1C17D18
	087 Move X8, [X19+32]
	088 Move X25, [X0]
	089 Move X0, X23
	090 Move X8, [X8+192]
	091 Move X8, [X8+8]
	092 Move X1, [X8+128]
	093 Call 0x1C17D18
	094 Move X1, X0
	095 Move X0, X20
	096 Move X2, X24
	097 Call 0x3EB2AC0
	098 Move X8, [X19+32]
	099 Move X0, X23
	100 Move X8, [X8+192]
	101 Move X8, [X8+8]
	102 Move X8, [X8+128]
	103 Add X1, X8, 96
	104 Call 0x1C17D18
	105 Move X1, X0
	106 Move X0, X21
	107 Move X2, X22
	108 Call 0x3EB2AC0
	109 Move X8, [X19+32]
	110 Move X8, [X8+192]
	111 Move X9, [X8]
	112 Move X1, [X8+32]
	113 Move W9, [X9+40]
	114 Move X0, [X1]
	115 Move TEMP, X9
	116 And TEMP, TEMP, -2147483648
	117 Compare TEMP, -2147483648
	118 JumpIfEqual {120}
	119 Move X20, [X20]
	120 Move X8, [X8+24]
	121 Move W8, [X8+40]
	122 Move TEMP, X8
	123 And TEMP, TEMP, -2147483648
	124 Compare TEMP, -2147483648
	125 JumpIfEqual {127}
	126 Move X21, [X21]
	127 Move [X29-32], X20
	128 Move [X29-24], X21
	129 Move X8, [X1+16]
	130 Subtract X3, X29, 32
	131 Subtract X4, X29, 16
	132 Move X2, X31
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Compare X25, 0
	135 JumpIfEqual {162}
	136 Move X8, [X19+32]
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 Subtract X3, X29, 32
	139 Move X2, X25
	140 Move X8, [X8+192]
	141 Move X1, [X8+48]
	142 Move X0, [X1]
	143 Move [X29-32], X4
	144 Move X8, [X1+16]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X8, [X26+40]
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X31, X29, 0
	150 Move X20, [X31+80]
	151 Move X19, [X31+88]
	152 Move X22, [X31+64]
	153 Move X21, [X31+72]
	154 Move X24, [X31+48]
	155 Move X23, [X31+56]
	156 Move X26, [X31+32]
	157 Move X25, [X31+40]
	158 Move X27, [X31+16]
	159 Move X29, [X31+96]
	160 Move X30, [X31+104]
	161 Return 
	162 Call 0x1C17F20
	163 Call 0x3EB2B20

Method: System.Void <All>b__1(System.Exception e)

Disassembly:
	0x02372DA0 LDR X20, [X0 + 0x10]
	0x02372DA4 TBNZ X8, 0x0, 0x2372DB4
	0x02372DA8 MOV X0, X1
	0x02372DAC BL 0x1C5C684
	0x02372DB0 MOV X1, X0
	0x02372DB4 MOV X0, X22
	0x02372DB8 MOV X2, X23
	0x02372DBC BL 0x1C16E10
	0x02372DC0 CBZ X20, 0x2372E28
	0x02372DC4 LDR X8, [X21 + 0x20]
	0x02372DC8 MOV X4, X0
	0x02372DCC LDR X8, [X8 + 0xC0]
	0x02372DD0 LDP X9, X1, [X8 + 0x10]
	0x02372DD4 LDR W8, [X9 + 0x28]
	0x02372DD8 LDR X0, [X1]
	0x02372DDC TBNZ X8, 0x1F, 0x2372DE4
	0x02372DE0 LDR X4, [X4]
	0x02372DE4 SUB X8, X29, 0xC
	0x02372DE8 STUR W19, [X29 - 0xC]
	0x02372DEC STP X8, X4, [X29 - 0x20]
	0x02372DF0 LDR X8, [X1 + 0x10]
	0x02372DF4 SUB X3, X29, 0x20
	0x02372DF8 MOV X2, X20
	0x02372DFC BLR X8
	0x02372E00 LDR X8, [X24 + 0x28]
	0x02372E04 LDUR X9, [X29 - 0x8]
	0x02372E08 CMP X8, X9
	0x02372E0C B.NE 0x2372E2C
	0x02372E10 ADD X31, X29, 0x0
	0x02372E14 LDP X20, X19, [X31 + 0x30]
	0x02372E18 LDP X22, X21, [X31 + 0x20]
	0x02372E1C LDP X24, X23, [X31 + 0x10]
	0x02372E20 LDP X29, X30, [X31], #0x40
	0x02372E24 RET
	0x02372E28 BL 0x1C16F20
	0x02372E2C BL 0x3EB1B20
	0x02372E30 MOV X1, X31
	0x02372E34 B 0x33BDD8C
	0x02372E38 STP X30, X21, [X31 - 0x20]!
	0x02372E3C STP X20, X19, [X31 + 0x10]
	0x02372E40 ADRP X21, 0x2067000
	0x02372E44 ADRP X20, 0x1D81000
	0x02372E48 LDRB W8, [X21 + 0x8D9]
	0x02372E4C LDR X20, [X20 + 0x598]
	0x02372E50 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X1
	007 Move X20, X2
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+8]
	011 Move X8, [X8+128]
	012 Add X1, X8, 128
	013 Call 0x1C17D18
	014 Move W8, [X0]
	015 Compare W8, 0
	016 JumpIfNotEqual {33}
	017 Move X8, [X20+32]
	018 Move X0, X19
	019 Move X8, [X8+192]
	020 Move X8, [X8+8]
	021 Move X8, [X8+128]
	022 Add X1, X8, 64
	023 Call 0x1C17D18
	024 Move X0, [X0]
	025 Compare X0, 0
	026 JumpIfEqual {51}
	027 Move X8, [X20+32]
	028 Move X1, X21
	029 Move X8, [X8+192]
	030 Move X2, [X8+56]
	031 Move X8, [X2]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, [X20+32]
	034 Move W1, 1
	035 Move W21, 1
	036 Move X8, [X8+192]
	037 Move X8, [X8+8]
	038 Move X8, [X8+128]
	039 Add X20, X8, 128
	040 Move X0, X20
	041 Call 0x1C17D14
	042 Move X0, X19
	043 Move X1, X20
	044 Call 0x1C17D18
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move [X0], W21
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void <All>b__2(T2 val)

Disassembly:
	0x02372E54 TBNZ X8, 0x0, 0x2372E84
	0x02372E58 ADRP X0, 0x1DAA000
	0x02372E5C LDR X0, [X0 + 0xB68]
	0x02372E60 BL 0x1C16CF4
	0x02372E64 ADRP X0, 0x1DAA000
	0x02372E68 LDR X0, [X0 + 0x130]
	0x02372E6C BL 0x1C16CF4
	0x02372E70 ADRP X0, 0x1D81000
	0x02372E74 LDR X0, [X0 + 0x598]
	0x02372E78 BL 0x1C16CF4
	0x02372E7C MOVZ W8, 0x1
	0x02372E80 STRB W8, [X21 + 0x8D9]
	0x02372E84 LDR X0, [X20]
	0x02372E88 LDR X20, [X19 + 0x10]
	0x02372E8C LDR W8, [X0 + 0xE0]
	0x02372E90 CBNZ W8, 0x2372E98
	0x02372E94 BL 0x1C16DFC
	0x02372E98 MOV X0, X20
	0x02372E9C MOV X1, X31
	0x02372EA0 MOV X2, X31
	0x02372EA4 BL 0x3C354F8
	0x02372EA8 TBZ X0, 0x0, 0x2372EC4
	0x02372EAC LDR X0, [X19 + 0x10]
	0x02372EB0 CBZ X0, 0x2372F18
	0x02372EB4 LDP X20, X19, [X31 + 0x10]
	0x02372EB8 MOV X1, X31
	0x02372EBC LDP X30, X21, [X31], #0x20
	0x02372EC0 B 0x3E209C8
	0x02372EC4 ADRP X19, 0x1DAA000
	0x02372EC8 LDR X19, [X19 + 0xB68]
	0x02372ECC LDR X0, [X19]
	0x02372ED0 LDR W8, [X0 + 0xE0]
	0x02372ED4 CBNZ W8, 0x2372EE0
	0x02372ED8 BL 0x1C16DFC
	0x02372EDC LDR X0, [X19]
	0x02372EE0 ADRP X9, 0x1DAA000
	0x02372EE4 LDR X8, [X0 + 0xB8]
	0x02372EE8 LDR X9, [X9 + 0x130]
	0x02372EEC LDR X19, [X8]
	0x02372EF0 LDR X0, [X9]
	0x02372EF4 BL 0x1C16F10
	0x02372EF8 MOV X1, X19
	0x02372EFC MOV X2, X31
	0x02372F00 MOV X20, X0
	0x02372F04 BL 0x3D6B65C
	0x02372F08 MOV X0, X20
	0x02372F0C LDP X20, X19, [X31 + 0x10]
	0x02372F10 LDP X30, X21, [X31], #0x20
	0x02372F14 RET
	0x02372F18 BL 0x1C16F20
	0x02372F1C MOV X1, X31
	0x02372F20 B 0x33BDD8C
	0x02372F24 STP X30, X21, [X31 - 0x20]!
	0x02372F28 STP X20, X19, [X31 + 0x10]
	0x02372F2C LDR X21, [X0 + 0x10]
	0x02372F30 CBZ X21, 0x2372F98
	0x02372F34 LDR X8, [X2 + 0x20]
	0x02372F38 MOV X19, X1
	0x02372F3C LDR X8, [X8 + 0xC0]
	0x02372F40 LDR X20, [X8 + 0x10]
	0x02372F44 LDRB W8, [X20 + 0x135]
	0x02372F48 TBNZ X8, 0x0, 0x2372F58
	0x02372F4C MOV X0, X20
	0x02372F50 BL 0x1C5C684
	0x02372F54 MOV X20, X0
	0x02372F58 CBZ X19, 0x2372F7C
	0x02372F5C MOV X0, X19
	0x02372F60 MOV X1, X20
	0x02372F64 BL 0x1C16E00
	0x02372F68 MOV X1, X0
	0x02372F6C CBNZ X0, 0x2372F80
	0x02372F70 MOV X0, X19
	0x02372F74 MOV X1, X20
	0x02372F78 BL 0x1C171E0
	0x02372F7C MOV X1, X31
	0x02372F80 LDR X3, [X21 + 0x18]
	0x02372F84 LDR X0, [X21 + 0x40]
	0x02372F88 LDR X2, [X21 + 0x28]
	0x02372F8C LDP X20, X19, [X31 + 0x10]
	0x02372F90 LDP X30, X21, [X31], #0x20
	0x02372F94 BR X3
	0x02372F98 BL 0x1C16F20
	0x02372F9C MOV X1, X31
	0x02372FA0 B 0x33BDD8C
	0x02372FA4 STP X29, X30, [X31 - 0x40]!
	0x02372FA8 STR X23, [X31 + 0x10]
	0x02372FAC STP X22, X21, [X31 + 0x20]
	0x02372FB0 STP X20, X19, [X31 + 0x30]
	0x02372FB4 ADD X29, X31, 0x0
	0x02372FB8 SUB X31, X31, 0x10
	0x02372FBC MRS X23, 0xC000
	0x02372FC0 LDR X8, [X23 + 0x28]
	0x02372FC4 MOV X21, X1
	0x02372FC8 ADD X9, X31, 0x0
	0x02372FCC MOV X20, X2
	0x02372FD0 STUR X8, [X29 - 0x8]
	0x02372FD4 LDR X8, [X2 + 0x20]
	0x02372FD8 LDR X8, [X8 + 0xC0]
	0x02372FDC LDR X1, [X8 + 0x10]
	0x02372FE0 LDR W8, [X1 + 0xFC]
	0x02372FE4 ADD X8, X8, 0xF
	0x02372FE8 AND X8, X8, 0x1FFFFFFFF
	0x02372FEC SUB X22, X9, X8
	0x02372FF0 ADD X31, X22, 0x0
	0x02372FF4 LDRB W8, [X1 + 0x135]
	0x02372FF8 LDR X19, [X0 + 0x10]
	0x02372FFC TBNZ X8, 0x0, 0x237300C
	0x02373000 MOV X0, X1
	0x02373004 BL 0x1C5C684
	0x02373008 MOV X1, X0
	0x0237300C MOV X0, X21
	0x02373010 MOV X2, X22
	0x02373014 BL 0x1C16E10
	0x02373018 CBZ X19, 0x2373078
	0x0237301C LDR X8, [X20 + 0x20]
	0x02373020 MOV X4, X0
	0x02373024 LDR X8, [X8 + 0xC0]
	0x02373028 LDP X9, X1, [X8 + 0x10]
	0x0237302C LDR W8, [X9 + 0x28]
	0x02373030 LDR X0, [X1]
	0x02373034 TBNZ X8, 0x1F, 0x237303C
	0x02373038 LDR X4, [X4]
	0x0237303C STUR X4, [X29 - 0x10]
	0x02373040 LDR X8, [X1 + 0x10]
	0x02373044 SUB X3, X29, 0x10
	0x02373048 MOV X2, X19
	0x0237304C BLR X8
	0x02373050 LDR X8, [X23 + 0x28]
	0x02373054 LDUR X9, [X29 - 0x8]
	0x02373058 CMP X8, X9
	0x0237305C B.NE 0x237307C
	0x02373060 ADD X31, X29, 0x0
	0x02373064 LDP X20, X19, [X31 + 0x30]
	0x02373068 LDP X22, X21, [X31 + 0x20]
	0x0237306C LDR X23, [X31 + 0x10]
	0x02373070 LDP X29, X30, [X31], #0x40
	0x02373074 RET
	0x02373078 BL 0x1C16F20
	0x0237307C BL 0x3EB1B20
	0x02373080 MOV X1, X31
	0x02373084 B 0x33BDD8C
	0x02373088 STR X30, [X31 - 0x20]!
	0x0237308C STP X20, X19, [X31 + 0x10]
	0x02373090 LDR X8, [X0 + 0x18]
	0x02373094 CBZ X8, 0x23730D4
	0x02373098 MOV X19, X2
	0x0237309C LDR X20, [X0 + 0x10]
	0x023730A0 LDR X9, [X8 + 0x18]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 48
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X26+40]
	016 Move X19, X2
	017 Move X23, X0
	018 Move [X29-8], X8
	019 Move [X29-40], X1
	020 Move X25, [X2+32]
	021 Move X8, [X25+192]
	022 Move X9, [X8+24]
	023 Move X8, [X8]
	024 Move W22, [X9+252]
	025 Move W24, [X8+252]
	026 Add X8, X31, 0
	027 Add X10, X24, 15
	028 And X10, X10, 0x1FFFFFFFF
	029 Subtract X20, X8, X10
	030 Add X31, X20, 0
	031 Add X10, X22, 15
	032 Add X8, X31, 0
	033 And X10, X10, 0x1FFFFFFFF
	034 Subtract X21, X8, X10
	035 Add X31, X21, 0
	036 Move W8, [X9+40]
	037 Move X0, X21
	038 Move X2, X22
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X8, X29, 40
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Call 0x3EB2AC0
	043 Move X8, [X25+192]
	044 Move X0, X23
	045 Move X2, X21
	046 Move W3, W22
	047 Move X8, [X8+8]
	048 Move X8, [X8+128]
	049 Add X1, X8, 96
	050 Call 0x1C17D1C
	051 Move X8, [X19+32]
	052 Move X0, X23
	053 Move X8, [X8+192]
	054 Move X8, [X8+8]
	055 Move X8, [X8+128]
	056 Add X1, X8, 32
	057 Call 0x1C17D18
	058 Move X8, [X19+32]
	059 Move W9, [X0]
	060 Move W1, 4
	061 Move X8, [X8+192]
	062 Subtract W27, W9, 1
	063 Move X8, [X8+8]
	064 Move X8, [X8+128]
	065 Add X25, X8, 32
	066 Move X0, X25
	067 Call 0x1C17D14
	068 Move X0, X23
	069 Move X1, X25
	070 Call 0x1C17D18
	071 Move [X0], W27
	072 Move X8, [X19+32]
	073 Move X0, X23
	074 Move X8, [X8+192]
	075 Move X8, [X8+8]
	076 Move X8, [X8+128]
	077 Add X1, X8, 32
	078 Call 0x1C17D18
	079 Move W8, [X0]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, [X19+32]
	082 Move X0, X23
	083 Move X8, [X8+192]
	084 Move X8, [X8+8]
	085 Move X8, [X8+128]
	086 Add X1, X8, 64
	087 Call 0x1C17D18
	088 Move X8, [X19+32]
	089 Move X25, [X0]
	090 Move X0, X23
	091 Move X8, [X8+192]
	092 Move X8, [X8+8]
	093 Move X1, [X8+128]
	094 Call 0x1C17D18
	095 Move X1, X0
	096 Move X0, X20
	097 Move X2, X24
	098 Call 0x3EB2AC0
	099 Move X8, [X19+32]
	100 Move X0, X23
	101 Move X8, [X8+192]
	102 Move X8, [X8+8]
	103 Move X8, [X8+128]
	104 Add X1, X8, 96
	105 Call 0x1C17D18
	106 Move X1, X0
	107 Move X0, X21
	108 Move X2, X22
	109 Call 0x3EB2AC0
	110 Move X8, [X19+32]
	111 Move X8, [X8+192]
	112 Move X9, [X8]
	113 Move X1, [X8+32]
	114 Move W9, [X9+40]
	115 Move X0, [X1]
	116 Move TEMP, X9
	117 And TEMP, TEMP, -2147483648
	118 Compare TEMP, -2147483648
	119 JumpIfEqual {121}
	120 Move X20, [X20]
	121 Move X8, [X8+24]
	122 Move W8, [X8+40]
	123 Move TEMP, X8
	124 And TEMP, TEMP, -2147483648
	125 Compare TEMP, -2147483648
	126 JumpIfEqual {128}
	127 Move X21, [X21]
	128 Move [X29-32], X20
	129 Move [X29-24], X21
	130 Move X8, [X1+16]
	131 Subtract X3, X29, 32
	132 Subtract X4, X29, 16
	133 Move X2, X31
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Compare X25, 0
	136 JumpIfEqual {163}
	137 Move X8, [X19+32]
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 Subtract X3, X29, 32
	140 Move X2, X25
	141 Move X8, [X8+192]
	142 Move X1, [X8+48]
	143 Move X0, [X1]
	144 Move [X29-32], X4
	145 Move X8, [X1+16]
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X8, [X26+40]
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add X31, X29, 0
	151 Move X20, [X31+80]
	152 Move X19, [X31+88]
	153 Move X22, [X31+64]
	154 Move X21, [X31+72]
	155 Move X24, [X31+48]
	156 Move X23, [X31+56]
	157 Move X26, [X31+32]
	158 Move X25, [X31+40]
	159 Move X27, [X31+16]
	160 Move X29, [X31+96]
	161 Move X30, [X31+104]
	162 Return 
	163 Call 0x1C17F20
	164 Call 0x3EB2B20

Method: System.Void <All>b__3(System.Exception e)

Disassembly:
	0x023730A4 LDR X0, [X8 + 0x40]
	0x023730A8 LDR X2, [X8 + 0x28]
	0x023730AC BLR X9
	0x023730B0 CBZ X20, 0x23730D4
	0x023730B4 LDR X8, [X19 + 0x20]
	0x023730B8 MOV X1, X0
	0x023730BC MOV X0, X20
	0x023730C0 LDP X20, X19, [X31 + 0x10]
	0x023730C4 LDR X8, [X8 + 0xC0]
	0x023730C8 LDR X2, [X8 + 0x30]
	0x023730CC LDR X30, [X31], #0x20
	0x023730D0 B 0x2D9C138
	0x023730D4 BL 0x1C16F20
	0x023730D8 MOV X1, X31
	0x023730DC B 0x33BDD8C
	0x023730E0 STP X29, X30, [X31 - 0x50]!
	0x023730E4 STR X25, [X31 + 0x10]
	0x023730E8 STP X24, X23, [X31 + 0x20]
	0x023730EC STP X22, X21, [X31 + 0x30]
	0x023730F0 STP X20, X19, [X31 + 0x40]
	0x023730F4 ADD X29, X31, 0x0
	0x023730F8 SUB X31, X31, 0x30
	0x023730FC MRS X24, 0xC000
	0x02373100 LDR X8, [X24 + 0x28]
	0x02373104 MOV X19, X2
	0x02373108 ADD X10, X31, 0x0
	0x0237310C STUR X8, [X29 - 0x8]
	0x02373110 STUR X1, [X29 - 0x28]
	0x02373114 LDR X25, [X2 + 0x20]
	0x02373118 LDR X8, [X25 + 0xC0]
	0x0237311C LDR X9, [X8 + 0x18]
	0x02373120 LDR W2, [X9 + 0xFC]
	0x02373124 ADD X11, X2, 0xF
	0x02373128 AND X11, X11, 0x1FFFFFFFF
	0x0237312C SUB X22, X10, X11
	0x02373130 ADD X31, X22, 0x0
	0x02373134 LDR X8, [X8 + 0x28]
	0x02373138 ADD X10, X31, 0x0
	0x0237313C LDR W8, [X8 + 0xFC]
	0x02373140 ADD X8, X8, 0xF
	0x02373144 AND X8, X8, 0x1FFFFFFFF
	0x02373148 SUB X21, X10, X8
	0x0237314C ADD X31, X21, 0x0
	0x02373150 LDR W8, [X9 + 0x28]
	0x02373154 LDP X20, X23, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X1
	007 Move X20, X2
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+8]
	011 Move X8, [X8+128]
	012 Add X1, X8, 128
	013 Call 0x1C17D18
	014 Move W8, [X0]
	015 Compare W8, 0
	016 JumpIfNotEqual {33}
	017 Move X8, [X20+32]
	018 Move X0, X19
	019 Move X8, [X8+192]
	020 Move X8, [X8+8]
	021 Move X8, [X8+128]
	022 Add X1, X8, 64
	023 Call 0x1C17D18
	024 Move X0, [X0]
	025 Compare X0, 0
	026 JumpIfEqual {51}
	027 Move X8, [X20+32]
	028 Move X1, X21
	029 Move X8, [X8+192]
	030 Move X2, [X8+56]
	031 Move X8, [X2]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, [X20+32]
	034 Move W1, 1
	035 Move W21, 1
	036 Move X8, [X8+192]
	037 Move X8, [X8+8]
	038 Move X8, [X8+128]
	039 Add X20, X8, 128
	040 Move X0, X20
	041 Call 0x1C17D14
	042 Move X0, X19
	043 Move X1, X20
	044 Call 0x1C17D18
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move [X0], W21
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

