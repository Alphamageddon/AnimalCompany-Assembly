Type: RSG.PromiseHelpers/<>c__2`4

Method: System.Void .cctor()

Disassembly:
	0x02371D44 LDUR X4, [X29 - 0x10]
	0x02371D48 SUB X3, X29, 0x20
	0x02371D4C MOV X2, X25
	0x02371D50 LDR X8, [X8 + 0xC0]
	0x02371D54 LDR X1, [X8 + 0x30]
	0x02371D58 LDR X0, [X1]
	0x02371D5C STUR X4, [X29 - 0x20]
	0x02371D60 LDR X8, [X1 + 0x10]
	0x02371D64 BLR X8
	0x02371D68 LDR X8, [X26 + 0x28]
	0x02371D6C LDUR X9, [X29 - 0x8]
	0x02371D70 CMP X8, X9
	0x02371D74 B.NE 0x2371D9C
	0x02371D78 ADD X31, X29, 0x0
	0x02371D7C LDP X20, X19, [X31 + 0x50]
	0x02371D80 LDP X22, X21, [X31 + 0x40]
	0x02371D84 LDP X24, X23, [X31 + 0x30]
	0x02371D88 LDP X26, X25, [X31 + 0x20]
	0x02371D8C LDR X27, [X31 + 0x10]
	0x02371D90 LDP X29, X30, [X31], #0x60
	0x02371D94 RET
	0x02371D98 BL 0x1C16F20
	0x02371D9C BL 0x3EB1B20
	0x02371DA0 STP X30, X21, [X31 - 0x20]!
	0x02371DA4 STP X20, X19, [X31 + 0x10]
	0x02371DA8 LDR X8, [X2 + 0x20]
	0x02371DAC MOV X21, X1
	0x02371DB0 MOV X20, X2
	0x02371DB4 MOV X19, X0
	0x02371DB8 LDR X8, [X8 + 0xC0]
	0x02371DBC LDR X8, [X8 + 0x8]
	0x02371DC0 LDR X8, [X8 + 0x80]
	0x02371DC4 ADD X1, X8, 0x80
	0x02371DC8 BL 0x1C16D18
	0x02371DCC LDRB W8, [X0]
	0x02371DD0 CBNZ W8, 0x2371E10
	0x02371DD4 LDR X8, [X20 + 0x20]
	0x02371DD8 MOV X0, X19
	0x02371DDC LDR X8, [X8 + 0xC0]
	0x02371DE0 LDR X8, [X8 + 0x8]
	0x02371DE4 LDR X8, [X8 + 0x80]
	0x02371DE8 ADD X1, X8, 0x40
	0x02371DEC BL 0x1C16D18
	0x02371DF0 LDR X0, [X0]
	0x02371DF4 CBZ X0, 0x2371E50
	0x02371DF8 LDR X8, [X20 + 0x20]
	0x02371DFC MOV X1, X21
	0x02371E00 LDR X8, [X8 + 0xC0]
	0x02371E04 LDR X2, [X8 + 0x38]
	0x02371E08 LDR X8, [X2]
	0x02371E0C BLR X8
	0x02371E10 LDR X8, [X20 + 0x20]
	0x02371E14 MOVZ W1, 0x1
	0x02371E18 MOVZ W21, 0x1
	0x02371E1C LDR X8, [X8 + 0xC0]
	0x02371E20 LDR X8, [X8 + 0x8]
	0x02371E24 LDR X8, [X8 + 0x80]
	0x02371E28 ADD X20, X8, 0x80
	0x02371E2C MOV X0, X20
	0x02371E30 BL 0x1C16D14
	0x02371E34 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Add X9, X8, 309
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, [X19+32]
	033 Add X9, X8, 309
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X8
	036 Move X10, [X0+192]
	037 Move X10, [X10+8]
	038 Move X21, [X10]
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move X8, [X8+192]
	047 Move X0, X20
	048 Move X1, [X8+8]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+184]
	066 Move [X8], X20
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+192]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {87}
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call 0x1C5D684
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 

Method: System.Void .ctor()

Disassembly:
	0x02371E38 MOV X1, X20
	0x02371E3C BL 0x1C16D18

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: RSG.Tuple`4<T1, T2, T3, T4> <All>b__2_0(RSG.Tuple`2<RSG.Tuple`2<T1, T2>, RSG.Tuple`2<T3, T4>> vals)

Disassembly:
	0x02371E40 LDP X20, X19, [X31 + 0x10]
	0x02371E44 STRB W21, [X0]
	0x02371E48 LDP X30, X21, [X31], #0x20
	0x02371E4C RET
	0x02371E50 BL 0x1C16F20
	0x02371E54 STP X29, X30, [X31 - 0x60]!
	0x02371E58 STR X27, [X31 + 0x10]
	0x02371E5C STP X26, X25, [X31 + 0x20]
	0x02371E60 STP X24, X23, [X31 + 0x30]
	0x02371E64 STP X22, X21, [X31 + 0x40]
	0x02371E68 STP X20, X19, [X31 + 0x50]
	0x02371E6C ADD X29, X31, 0x0
	0x02371E70 SUB X31, X31, 0x30
	0x02371E74 MRS X26, 0xC000
	0x02371E78 LDR X8, [X26 + 0x28]
	0x02371E7C MOV X19, X2
	0x02371E80 MOV X23, X0
	0x02371E84 STUR X8, [X29 - 0x8]
	0x02371E88 STUR X1, [X29 - 0x28]
	0x02371E8C LDR X25, [X2 + 0x20]
	0x02371E90 LDR X8, [X25 + 0xC0]
	0x02371E94 LDR X9, [X8 + 0x18]
	0x02371E98 LDR X8, [X8]
	0x02371E9C LDR W22, [X9 + 0xFC]
	0x02371EA0 LDR W24, [X8 + 0xFC]
	0x02371EA4 ADD X8, X31, 0x0
	0x02371EA8 ADD X10, X24, 0xF
	0x02371EAC AND X10, X10, 0x1FFFFFFFF
	0x02371EB0 SUB X20, X8, X10
	0x02371EB4 ADD X31, X20, 0x0
	0x02371EB8 ADD X10, X22, 0xF
	0x02371EBC ADD X8, X31, 0x0
	0x02371EC0 AND X10, X10, 0x1FFFFFFFF
	0x02371EC4 SUB X21, X8, X10
	0x02371EC8 ADD X31, X21, 0x0
	0x02371ECC LDR W8, [X9 + 0x28]
	0x02371ED0 MOV X0, X21
	0x02371ED4 MOV X2, X22
	0x02371ED8 CMP W8, 0x0
	0x02371EDC SUB X8, X29, 0x28
	0x02371EE0 CSEL X1, X1, X8, LT
	0x02371EE4 BL 0x3EB1AC0
	0x02371EE8 LDR X8, [X25 + 0xC0]
	0x02371EEC MOV X0, X23
	0x02371EF0 MOV X2, X21
	0x02371EF4 MOV W3, W22
	0x02371EF8 LDR X8, [X8 + 0x8]
	0x02371EFC LDR X8, [X8 + 0x80]
	0x02371F00 ADD X1, X8, 0x60
	0x02371F04 BL 0x1C16D1C
	0x02371F08 LDR X8, [X19 + 0x20]
	0x02371F0C MOV X0, X23
	0x02371F10 LDR X8, [X8 + 0xC0]
	0x02371F14 LDR X8, [X8 + 0x8]
	0x02371F18 LDR X8, [X8 + 0x80]
	0x02371F1C ADD X1, X8, 0x20
	0x02371F20 BL 0x1C16D18
	0x02371F24 LDR X8, [X19 + 0x20]
	0x02371F28 LDR W9, [X0]
	0x02371F2C MOVZ W1, 0x4
	0x02371F30 LDR X8, [X8 + 0xC0]
	0x02371F34 SUB W27, W9, 0x1
	0x02371F38 LDR X8, [X8 + 0x8]
	0x02371F3C LDR X8, [X8 + 0x80]
	0x02371F40 ADD X25, X8, 0x20
	0x02371F44 MOV X0, X25
	0x02371F48 BL 0x1C16D14
	0x02371F4C MOV X0, X23
	0x02371F50 MOV X1, X25
	0x02371F54 BL 0x1C16D18
	0x02371F58 STR W27, [X0]
	0x02371F5C LDR X8, [X19 + 0x20]
	0x02371F60 MOV X0, X23
	0x02371F64 LDR X8, [X8 + 0xC0]
	0x02371F68 LDR X8, [X8 + 0x8]
	0x02371F6C LDR X8, [X8 + 0x80]
	0x02371F70 ADD X1, X8, 0x20
	0x02371F74 BL 0x1C16D18
	0x02371F78 LDR W8, [X0]
	0x02371F7C CMP W8, 0x0
	0x02371F80 B.GT 0x237206C
	0x02371F84 LDR X8, [X19 + 0x20]
	0x02371F88 MOV X0, X23
	0x02371F8C LDR X8, [X8 + 0xC0]
	0x02371F90 LDR X8, [X8 + 0x8]
	0x02371F94 LDR X8, [X8 + 0x80]
	0x02371F98 ADD X1, X8, 0x40
	0x02371F9C BL 0x1C16D18
	0x02371FA0 LDR X8, [X19 + 0x20]
	0x02371FA4 LDR X25, [X0]
	0x02371FA8 MOV X0, X23
	0x02371FAC LDR X8, [X8 + 0xC0]
	0x02371FB0 LDR X8, [X8 + 0x8]
	0x02371FB4 LDR X1, [X8 + 0x80]
	0x02371FB8 BL 0x1C16D18
	0x02371FBC MOV X1, X0
	0x02371FC0 MOV X0, X20
	0x02371FC4 MOV X2, X24
	0x02371FC8 BL 0x3EB1AC0
	0x02371FCC LDR X8, [X19 + 0x20]
	0x02371FD0 MOV X0, X23
	0x02371FD4 LDR X8, [X8 + 0xC0]
	0x02371FD8 LDR X8, [X8 + 0x8]
	0x02371FDC LDR X8, [X8 + 0x80]
	0x02371FE0 ADD X1, X8, 0x60
	0x02371FE4 BL 0x1C16D18
	0x02371FE8 MOV X1, X0
	0x02371FEC MOV X0, X21
	0x02371FF0 MOV X2, X22
	0x02371FF4 BL 0x3EB1AC0
	0x02371FF8 LDR X8, [X19 + 0x20]
	0x02371FFC LDR X8, [X8 + 0xC0]
	0x02372000 LDR X9, [X8]
	0x02372004 LDR X1, [X8 + 0x20]
	0x02372008 LDR W9, [X9 + 0x28]
	0x0237200C LDR X0, [X1]
	0x02372010 TBNZ X9, 0x1F, 0x2372018
	0x02372014 LDR X20, [X20]
	0x02372018 LDR X8, [X8 + 0x18]
	0x0237201C LDR W8, [X8 + 0x28]
	0x02372020 TBNZ X8, 0x1F, 0x2372028
	0x02372024 LDR X21, [X21]
	0x02372028 STP X20, X21, [X29 - 0x20]
	0x0237202C LDR X8, [X1 + 0x10]
	0x02372030 SUB X3, X29, 0x20
	0x02372034 SUB X4, X29, 0x10
	0x02372038 MOV X2, X31
	0x0237203C BLR X8
	0x02372040 CBZ X25, 0x237209C
	0x02372044 LDR X8, [X19 + 0x20]
	0x02372048 LDUR X4, [X29 - 0x10]
	0x0237204C SUB X3, X29, 0x20
	0x02372050 MOV X2, X25
	0x02372054 LDR X8, [X8 + 0xC0]
	0x02372058 LDR X1, [X8 + 0x30]
	0x0237205C LDR X0, [X1]
	0x02372060 STUR X4, [X29 - 0x20]
	0x02372064 LDR X8, [X1 + 0x10]
	0x02372068 BLR X8
	0x0237206C LDR X8, [X26 + 0x28]
	0x02372070 LDUR X9, [X29 - 0x8]
	0x02372074 CMP X8, X9
	0x02372078 B.NE 0x23720A0
	0x0237207C ADD X31, X29, 0x0
	0x02372080 LDP X20, X19, [X31 + 0x50]
	0x02372084 LDP X22, X21, [X31 + 0x40]
	0x02372088 LDP X24, X23, [X31 + 0x30]
	0x0237208C LDP X26, X25, [X31 + 0x20]
	0x02372090 LDR X27, [X31 + 0x10]
	0x02372094 LDP X29, X30, [X31], #0x60
	0x02372098 RET
	0x0237209C BL 0x1C16F20
	0x023720A0 BL 0x3EB1B20
	0x023720A4 STP X30, X21, [X31 - 0x20]!
	0x023720A8 STP X20, X19, [X31 + 0x10]
	0x023720AC LDR X8, [X2 + 0x20]
	0x023720B0 MOV X21, X1
	0x023720B4 MOV X20, X2
	0x023720B8 MOV X19, X0
	0x023720BC LDR X8, [X8 + 0xC0]
	0x023720C0 LDR X8, [X8 + 0x8]
	0x023720C4 LDR X8, [X8 + 0x80]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 48
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Add X10, X31, 0
	015 Move [X29-8], X8
	016 Move X8, [X2+32]
	017 Move X8, [X8+192]
	018 Move X9, [X8+56]
	019 Move W9, [X9+252]
	020 Add X9, X9, 15
	021 And X9, X9, 0x1FFFFFFFF
	022 Subtract X19, X10, X9
	023 Add X31, X19, 0
	024 Move X9, [X8+72]
	025 Add X10, X31, 0
	026 Move W9, [X9+252]
	027 Add X9, X9, 15
	028 And X9, X9, 0x1FFFFFFFF
	029 Subtract X20, X10, X9
	030 Add X31, X20, 0
	031 Move X9, [X8+104]
	032 Add X10, X31, 0
	033 Move W9, [X9+252]
	034 Add X9, X9, 15
	035 And X9, X9, 0x1FFFFFFFF
	036 Subtract X21, X10, X9
	037 Add X31, X21, 0
	038 Move X9, [X8+120]
	039 Add X10, X31, 0
	040 Move W9, [X9+252]
	041 Add X9, X9, 15
	042 And X9, X9, 0x1FFFFFFFF
	043 Subtract X22, X10, X9
	044 Add X31, X22, 0
	045 Compare X1, 0
	046 JumpIfEqual {187}
	047 Move X24, X1
	048 Move X1, [X8+32]
	049 Move X23, X2
	050 Subtract X4, X29, 48
	051 Move X2, X24
	052 Move X0, [X1]
	053 Move X8, [X1+16]
	054 Move X3, X31
	055 NotImplemented "Instruction BLR not yet implemented."
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Compare X2, 0
	058 JumpIfEqual {187}
	059 Move X8, [X23+32]
	060 Subtract X3, X29, 48
	061 Move X4, X19
	062 Move X8, [X8+192]
	063 Move X1, [X8+48]
	064 Move X0, [X1]
	065 Move [X29-48], X19
	066 Move X8, [X1+16]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, [X23+32]
	069 Subtract X4, X29, 48
	070 Move X2, X24
	071 Move X3, X31
	072 Move X8, [X8+192]
	073 Move X1, [X8+32]
	074 Move X0, [X1]
	075 Move X8, [X1+16]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 Compare X2, 0
	079 JumpIfEqual {187}
	080 Move X8, [X23+32]
	081 Subtract X3, X29, 48
	082 Move X4, X20
	083 Move X8, [X8+192]
	084 Move X1, [X8+64]
	085 Move X0, [X1]
	086 Move [X29-48], X20
	087 Move X8, [X1+16]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X8, [X23+32]
	090 Subtract X4, X29, 48
	091 Move X2, X24
	092 Move X3, X31
	093 Move X8, [X8+192]
	094 Move X1, [X8+80]
	095 Move X0, [X1]
	096 Move X8, [X1+16]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 Compare X2, 0
	100 JumpIfEqual {187}
	101 Move X8, [X23+32]
	102 Subtract X3, X29, 48
	103 Move X4, X21
	104 Move X8, [X8+192]
	105 Move X1, [X8+96]
	106 Move X0, [X1]
	107 Move [X29-48], X21
	108 Move X8, [X1+16]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X23+32]
	111 Subtract X4, X29, 48
	112 Move X2, X24
	113 Move X3, X31
	114 Move X8, [X8+192]
	115 Move X1, [X8+80]
	116 Move X0, [X1]
	117 Move X8, [X1+16]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Compare X2, 0
	121 JumpIfEqual {187}
	122 Move X8, [X23+32]
	123 Subtract X3, X29, 48
	124 Move X4, X22
	125 Move X8, [X8+192]
	126 Move X1, [X8+112]
	127 Move X0, [X1]
	128 Move [X29-48], X22
	129 Move X8, [X1+16]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X8, [X23+32]
	132 Move X8, [X8+192]
	133 Move X9, [X8+56]
	134 Move W9, [X9+40]
	135 Move TEMP, X9
	136 And TEMP, TEMP, -2147483648
	137 Compare TEMP, -2147483648
	138 JumpIfEqual {140}
	139 Move X19, [X19]
	140 Move X9, [X8+72]
	141 Move X1, [X8+128]
	142 Move W9, [X9+40]
	143 Move TEMP, X9
	144 And TEMP, TEMP, -2147483648
	145 Compare TEMP, -2147483648
	146 JumpIfEqual {148}
	147 Move X20, [X20]
	148 Move X9, [X8+104]
	149 Move X0, [X1]
	150 Move W9, [X9+40]
	151 Move TEMP, X9
	152 And TEMP, TEMP, -2147483648
	153 Compare TEMP, -2147483648
	154 JumpIfEqual {156}
	155 Move X21, [X21]
	156 Move X8, [X8+120]
	157 Move W8, [X8+40]
	158 Move TEMP, X8
	159 And TEMP, TEMP, -2147483648
	160 Compare TEMP, -2147483648
	161 JumpIfEqual {163}
	162 Move X22, [X22]
	163 Move [X29-48], X19
	164 Move [X29-40], X20
	165 Move [X29-32], X21
	166 Move [X29-24], X22
	167 Move X8, [X1+16]
	168 Subtract X3, X29, 48
	169 Subtract X4, X29, 16
	170 Move X2, X31
	171 NotImplemented "Instruction BLR not yet implemented."
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 Move X8, [X25+40]
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Add X31, X29, 0
	177 Move X20, [X31+64]
	178 Move X19, [X31+72]
	179 Move X22, [X31+48]
	180 Move X21, [X31+56]
	181 Move X24, [X31+32]
	182 Move X23, [X31+40]
	183 Move X25, [X31+16]
	184 Move X29, [X31+80]
	185 Move X30, [X31+88]
	186 Return X0
	187 Call 0x1C17F20
	188 Call 0x3EB2B20

