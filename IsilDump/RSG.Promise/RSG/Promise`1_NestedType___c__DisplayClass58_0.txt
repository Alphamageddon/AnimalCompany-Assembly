Type: RSG.Promise`1/<>c__DisplayClass58_0

Method: System.Void .ctor()

Disassembly:
	0x0237C87C MOV W0, W31
	0x0237C880 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Finally>b__0(PromisedT x)

Disassembly:
	0x0237C884 RET
	0x0237C888 BL 0x1C16F20
	0x0237C88C MOV X1, X31
	0x0237C890 B 0x33BDD8C
	0x0237C894 STP X30, X21, [X31 - 0x20]!
	0x0237C898 STP X20, X19, [X31 + 0x10]
	0x0237C89C LDR X8, [X0 + 0x10]
	0x0237C8A0 CBZ X8, 0x237C8FC
	0x0237C8A4 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+24]
	008 Move X30, [X31+16]
	009 Call 0x24E1940, X0, X1
	010 Return 
	011 Call 0x1C17F20

Method: System.Void <Finally>b__1(System.Exception e)

Disassembly:
	0x0237C8A8 LDR X9, [X8 + 0x18]
	0x0237C8AC LDR X0, [X8 + 0x40]
	0x0237C8B0 LDR X3, [X8 + 0x28]
	0x0237C8B4 MOV X19, X2
	0x0237C8B8 MOV X20, X1
	0x0237C8BC BLR X9
	0x0237C8C0 TBZ X0, 0x0, 0x237C8EC
	0x0237C8C4 LDR X8, [X21 + 0x18]
	0x0237C8C8 CBZ X8, 0x237C8FC
	0x0237C8CC LDR X4, [X8 + 0x18]
	0x0237C8D0 LDR X0, [X8 + 0x40]
	0x0237C8D4 LDR X3, [X8 + 0x28]
	0x0237C8D8 MOV X1, X20
	0x0237C8DC MOV X2, X19
	0x0237C8E0 LDP X20, X19, [X31 + 0x10]
	0x0237C8E4 LDP X30, X21, [X31], #0x20
	0x0237C8E8 BR X4
	0x0237C8EC LDP X20, X19, [X31 + 0x10]
	0x0237C8F0 MOV W0, W31
	0x0237C8F4 LDP X30, X21, [X31], #0x20
	0x0237C8F8 RET
	0x0237C8FC BL 0x1C16F20
	0x0237C900 MOV X1, X31
	0x0237C904 B 0x33BDD8C
	0x0237C908 STR X30, [X31 - 0x20]!
	0x0237C90C STP X20, X19, [X31 + 0x10]
	0x0237C910 LDR X8, [X0 + 0x10]
	0x0237C914 CBZ X8, 0x237C96C
	0x0237C918 MOV X20, X0
	0x0237C91C LDR X9, [X8 + 0x18]
	0x0237C920 LDR X0, [X8 + 0x40]
	0x0237C924 LDR X2, [X8 + 0x28]
	0x0237C928 MOV W19, W1
	0x0237C92C AND W1, W1, 0x1
	0x0237C930 BLR X9
	0x0237C934 TBZ X0, 0x0, 0x237C95C
	0x0237C938 LDR X8, [X20 + 0x18]
	0x0237C93C CBZ X8, 0x237C96C
	0x0237C940 LDR X3, [X8 + 0x18]
	0x0237C944 LDR X0, [X8 + 0x40]
	0x0237C948 LDR X2, [X8 + 0x28]
	0x0237C94C AND W1, W19, 0x1
	0x0237C950 LDP X20, X19, [X31 + 0x10]
	0x0237C954 LDR X30, [X31], #0x20
	0x0237C958 BR X3
	0x0237C95C LDP X20, X19, [X31 + 0x10]
	0x0237C960 MOV W0, W31
	0x0237C964 LDR X30, [X31], #0x20
	0x0237C968 RET
	0x0237C96C BL 0x1C16F20
	0x0237C970 MOV X1, X31
	0x0237C974 B 0x33BDD8C
	0x0237C978 STR X30, [X31 - 0x20]!
	0x0237C97C STP X20, X19, [X31 + 0x10]
	0x0237C980 LDR X8, [X0 + 0x10]
	0x0237C984 CBZ X8, 0x237C9D8
	0x0237C988 MOV X20, X0
	0x0237C98C LDR X9, [X8 + 0x18]
	0x0237C990 LDR X0, [X8 + 0x40]
	0x0237C994 LDR X2, [X8 + 0x28]
	0x0237C998 MOV W19, W1
	0x0237C99C BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+24]
	006 Move X19, X2
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfEqual {28}
	010 Move X21, X1
	011 Move X0, [X8+64]
	012 Move X1, [X8+40]
	013 Move X9, [X8+24]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X0, [X20+16]
	016 Compare X0, 0
	017 JumpIfEqual {29}
	018 Move X8, [X19+32]
	019 Move X8, [X8+192]
	020 Move X2, [X8+32]
	021 Move X1, X21
	022 Call 0x24E17B0, X0, X1
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 
	028 Call 0x1C17F20
	029 Call 0x1C17F20
	030 Move X21, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, X21
	033 Call 0x3EB2AD0
	034 Move X21, X0
	035 Move X0, 0x1D78000
	036 Move X0, [X0+2000]
	037 Call 0x1C17D08
	038 Move X8, [X21]
	039 Move X1, [X8]
	040 Call 0x1C18270
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {60}
	045 Move X21, [X21]
	046 Call 0x3EB2AE0
	047 Move X0, [X20+16]
	048 Compare X0, 0
	049 JumpIfEqual {68}
	050 Move X8, [X19+32]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X1, X21
	054 Move X8, [X8+192]
	055 Move X2, [X8+32]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call 0x24E17B0, X0, X1
	059 Return 
	060 Move W0, 8
	061 Call 0x3EB2AF0
	062 Move X8, [X21]
	063 Move [X0], X8
	064 Move X1, 0x1B39000
	065 Add X1, X1, 3672
	066 Move X2, X31
	067 Call 0x3EB2B00
	068 Call 0x1C17F20
	069 Move X21, X0
	070 Call 0x3EB2AE0
	071 Move X0, X21
	072 Call 0x1D2D690
	073 Call 0x1991590

Method: PromisedT <Finally>b__2(PromisedT v)

Disassembly:
	0x0237C9A0 TBZ X0, 0x0, 0x237C9C8
	0x0237C9A4 LDR X8, [X20 + 0x18]
	0x0237C9A8 CBZ X8, 0x237C9D8
	0x0237C9AC LDR X3, [X8 + 0x18]
	0x0237C9B0 LDR X0, [X8 + 0x40]
	0x0237C9B4 LDR X2, [X8 + 0x28]
	0x0237C9B8 MOV W1, W19
	0x0237C9BC LDP X20, X19, [X31 + 0x10]
	0x0237C9C0 LDR X30, [X31], #0x20
	0x0237C9C4 BR X3
	0x0237C9C8 LDP X20, X19, [X31 + 0x10]
	0x0237C9CC MOV W0, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Compare X8, 0
	005 JumpIfEqual {15}
	006 Move X19, X1
	007 Move X9, [X8+24]
	008 Move X0, [X8+64]
	009 Move X1, [X8+40]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0
	015 Call 0x1C17F20

