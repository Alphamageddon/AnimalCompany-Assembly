Type: RSG.Exceptions.PromiseException

Method: System.Void .ctor()

Disassembly:
	0x035927E4 LDR X0, [X0 + 0x198]
	0x035927E8 BL 0x1C16CF4
	0x035927EC ADRP X0, 0xB61000
	0x035927F0 LDR X0, [X0 + 0xE18]
	0x035927F4 BL 0x1C16CF4
	0x035927F8 ADRP X0, 0xB64000
	0x035927FC LDR X0, [X0 + 0x1B0]
	0x03592800 BL 0x1C16CF4
	0x03592804 ADRP X0, 0xB64000
	0x03592808 LDR X0, [X0 + 0x1B8]
	0x0359280C BL 0x1C16CF4
	0x03592810 ADRP X0, 0xB61000
	0x03592814 LDR X0, [X0 + 0xAC8]
	0x03592818 BL 0x1C16CF4
	0x0359281C ADRP X0, 0xB8E000
	0x03592820 LDR X0, [X0 + 0x360]
	0x03592824 BL 0x1C16CF4
	0x03592828 ADRP X0, 0xB8E000
	0x0359282C LDR X0, [X0 + 0xBB8]
	0x03592830 BL 0x1C16CF4
	0x03592834 ADRP X0, 0xB8E000
	0x03592838 LDR X0, [X0 + 0xFB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE4E000
	006 Move X21, 0xB62000
	007 Move W8, [X20+3976]
	008 Move X21, [X21+2000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB62000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3976], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Exception..ctor, X0
	031 Return 

Method: System.Void .ctor(System.String message)

Disassembly:
	0x0359283C BL 0x1C16CF4
	0x03592840 ADRP X0, 0xB9B000
	0x03592844 LDR X0, [X0 + 0xD88]
	0x03592848 BL 0x1C16CF4
	0x0359284C ADRP X0, 0xB6C000
	0x03592850 LDR X0, [X0 + 0x6D8]
	0x03592854 BL 0x1C16CF4
	0x03592858 ADRP X0, 0xB62000
	0x0359285C LDR X0, [X0 + 0xEE0]
	0x03592860 BL 0x1C16CF4
	0x03592864 ADRP X0, 0xB61000
	0x03592868 LDR X0, [X0 + 0x838]
	0x0359286C BL 0x1C16CF4
	0x03592870 ADRP X0, 0xB9B000
	0x03592874 LDR X0, [X0 + 0xEC0]
	0x03592878 BL 0x1C16CF4
	0x0359287C ADRP X0, 0xBA4000
	0x03592880 LDR X0, [X0 + 0xE30]
	0x03592884 BL 0x1C16CF4
	0x03592888 ADRP X0, 0xB61000
	0x0359288C LDR X0, [X0 + 0x988]
	0x03592890 BL 0x1C16CF4
	0x03592894 ADRP X0, 0xB61000
	0x03592898 LDR X0, [X0 + 0x848]
	0x0359289C BL 0x1C16CF4
	0x035928A0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE4E000
	007 Move X22, 0xB62000
	008 Move W8, [X21+3977]
	009 Move X22, [X22+2000]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB62000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3977], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call Exception..ctor, X0, X1
	035 Return 

Method: System.Void .ctor(System.String message, System.Exception inner)

Disassembly:
	0x035928A4 STRB W8, [X22 + 0xF95]
	0x035928A8 LDR X0, [X20]
	0x035928AC LDR X2, [X19 + 0x10]
	0x035928B0 LDR X1, [X21]
	0x035928B4 LDR X3, [X23]
	0x035928B8 MOV X4, X31
	0x035928BC BL 0x32277C4
	0x035928C0 LDR X8, [X20]
	0x035928C4 MOV X20, X0
	0x035928C8 MOV X0, X19
	0x035928CC STR X8, [X31 + 0x8]
	0x035928D0 BL 0x35926D0
	0x035928D4 CBZ X0, 0x3592BE4
	0x035928D8 ADRP X10, 0xB64000
	0x035928DC LDR X8, [X0]
	0x035928E0 LDR X10, [X10 + 0x190]
	0x035928E4 MOV X21, X0
	0x035928E8 STR X20, [X31]
	0x035928EC LDRH W9, [X8 + 0x12E]
	0x035928F0 LDR X1, [X10]
	0x035928F4 CBZ X9, 0x3592918
	0x035928F8 LDR X10, [X8 + 0xB0]
	0x035928FC ADD X10, X10, 0x8
	0x03592900 LDUR X11, [X10 - 0x8]
	0x03592904 CMP X11, X1
	0x03592908 B.EQ 0x3592928
	0x0359290C SUBS X9, X9, 0x1
	0x03592910 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE4E000
	008 Move X23, 0xB62000
	009 Move W8, [X22+3978]
	010 Move X23, [X23+2000]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB62000
	019 Move X0, [X0+2000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3978], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Move X2, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call Exception..ctor, X0, X1, X2
	039 Return 

