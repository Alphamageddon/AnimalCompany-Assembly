Type: RSG.Promise/<>c__DisplayClass62_0

Method: System.Void .ctor()

Disassembly:
	0x03590D98 LDR X8, [X20]
	0x03590D9C LDR X1, [X23]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: RSG.IPromise <Sequence>b__0(RSG.IPromise prevPromise, System.Func`1<RSG.IPromise> fn)

Disassembly:
	0x03591FE8 ADRP X25, 0xB62000
	0x03591FEC ADRP X26, 0xB65000
	0x03591FF0 ADRP X28, 0xB62000
	0x03591FF4 ADRP X29, 0xB8F000
	0x03591FF8 ADRP X27, 0xB8F000
	0x03591FFC ADRP X19, 0xB6D000
	0x03592000 LDR X25, [X25 + 0xE18]
	0x03592004 LDR X26, [X26 + 0x198]
	0x03592008 LDR X28, [X28 + 0xAC8]
	0x0359200C LDR X29, [X29 + 0x360]
	0x03592010 LDR X27, [X27 + 0xFB8]
	0x03592014 LDR X19, [X19 + 0x6D8]
	0x03592018 LDP X8, X1, [X0]
	0x0359201C MOV X0, X21
	0x03592020 BLR X8
	0x03592024 MOV X21, X0
	0x03592028 MOV X0, X20
	0x0359202C CBZ X21, 0x35924D8
	0x03592030 LDR X8, [X21]
	0x03592034 LDR X1, [X25]
	0x03592038 MOV X22, X0
	0x0359203C LDRH W9, [X8 + 0x12E]
	0x03592040 CBZ X9, 0x3592064
	0x03592044 LDR X10, [X8 + 0xB0]
	0x03592048 ADD X10, X10, 0x8
	0x0359204C LDUR X11, [X10 - 0x8]
	0x03592050 CMP X11, X1
	0x03592054 B.EQ 0x3592074
	0x03592058 SUBS X9, X9, 0x1
	0x0359205C ADD X10, X10, 0x10
	0x03592060 B.NE 0x359204C
	0x03592064 MOV X0, X21
	0x03592068 MOV W2, W31
	0x0359206C BL 0x1C5C788
	0x03592070 B 0x3592080
	0x03592074 LDRSW X9, [X10]
	0x03592078 ADD X8, X8, X9, 0x4, LSL
	0x0359207C ADD X0, X8, 0x138
	0x03592080 LDP X8, X1, [X0]
	0x03592084 MOV X0, X21
	0x03592088 BLR X8
	0x0359208C TBZ X0, 0x0, 0x3592164
	0x03592090 LDR X8, [X21]
	0x03592094 LDR X1, [X26]
	0x03592098 LDRH W9, [X8 + 0x12E]
	0x0359209C CBZ X9, 0x35920C0
	0x035920A0 LDR X10, [X8 + 0xB0]
	0x035920A4 ADD X10, X10, 0x8
	0x035920A8 LDUR X11, [X10 - 0x8]
	0x035920AC CMP X11, X1
	0x035920B0 B.EQ 0x35920D0
	0x035920B4 SUBS X9, X9, 0x1
	0x035920B8 ADD X10, X10, 0x10
	0x035920BC B.NE 0x35920A8
	0x035920C0 MOV X0, X21
	0x035920C4 MOV W2, W31
	0x035920C8 BL 0x1C5C788
	0x035920CC B 0x35920DC
	0x035920D0 LDRSW X9, [X10]
	0x035920D4 ADD X8, X8, X9, 0x4, LSL
	0x035920D8 ADD X0, X8, 0x138
	0x035920DC LDP X8, X1, [X0]
	0x035920E0 MOV X0, X21
	0x035920E4 BLR X8
	0x035920E8 MOV X24, X0
	0x035920EC LDR X0, [X28]
	0x035920F0 MOV X23, X1
	0x035920F4 MOVZ W1, 0x5
	0x035920F8 BL 0x1C16D6C
	0x035920FC CBZ X0, 0x35924E4
	0x03592100 LDR W8, [X0 + 0x18]
	0x03592104 CBZ W8, 0x35924EC
	0x03592108 LDR X9, [X29]
	0x0359210C CMP W8, 0x1
	0x03592110 STR X9, [X0 + 0x20]
	0x03592114 B.EQ 0x35924E0
	0x03592118 CMP W8, 0x2
	0x0359211C STR X24, [X0 + 0x28]
	0x03592120 B.LS 0x35924F0
	0x03592124 LDR X9, [X27]
	0x03592128 CMP W8, 0x3
	0x0359212C STR X9, [X0 + 0x30]
	0x03592130 B.EQ 0x35924F4
	0x03592134 CMP W8, 0x4
	0x03592138 STR X23, [X0 + 0x38]
	0x0359213C B.LS 0x35924E8
	0x03592140 LDR X8, [X19]
	0x03592144 STR X8, [X0 + 0x40]
	0x03592148 MOV X1, X31
	0x0359214C BL 0x32278CC
	0x03592150 MOV X1, X0
	0x03592154 MOV X0, X22
	0x03592158 MOV X2, X31
	0x0359215C BL 0x321B938
	0x03592160 B 0x359202C
	0x03592164 MOV X23, X31
	0x03592168 CBZ X21, 0x35921CC
	0x0359216C LDR X8, [X21]
	0x03592170 ADRP X10, 0xB61000
	0x03592174 LDRH W9, [X8 + 0x12E]
	0x03592178 LDR X10, [X10 + 0xE00]
	0x0359217C LDR X1, [X10]
	0x03592180 CBZ X9, 0x35921A4
	0x03592184 LDR X10, [X8 + 0xB0]
	0x03592188 ADD X10, X10, 0x8
	0x0359218C LDUR X11, [X10 - 0x8]
	0x03592190 CMP X11, X1
	0x03592194 B.EQ 0x35921B4
	0x03592198 SUBS X9, X9, 0x1
	0x0359219C ADD X10, X10, 0x10
	0x035921A0 B.NE 0x359218C
	0x035921A4 MOV X0, X21
	0x035921A8 MOV W2, W31
	0x035921AC BL 0x1C5C788
	0x035921B0 B 0x35921C0
	0x035921B4 LDRSW X9, [X10]
	0x035921B8 ADD X8, X8, X9, 0x4, LSL
	0x035921BC ADD X0, X8, 0x138
	0x035921C0 LDP X8, X1, [X0]
	0x035921C4 MOV X0, X21
	0x035921C8 BLR X8
	0x035921CC CBNZ X23, 0x3592514
	0x035921D0 ADRP X8, 0xBA4000
	0x035921D4 LDR X8, [X8 + 0xE20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE4F000
	009 Move X23, 0xBA6000
	010 Move W8, [X20+3973]
	011 Call 0x3EB28EC
	012 Return X0
	013 Move X22, X2
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xB64000
	021 Move X0, [X0+1456]
	022 Call 0x1C17CF4
	023 Move X0, 0xBA5000
	024 Move X0, [X0+3264]
	025 Call 0x1C17CF4
	026 Move X0, 0xB8B000
	027 Move X0, [X0+704]
	028 Call 0x1C17CF4
	029 Move X0, 0xBA5000
	030 Move X0, [X0+3552]
	031 Call 0x1C17CF4
	032 Move X0, 0xBA5000
	033 Move X0, [X0+3560]
	034 Call 0x1C17CF4
	035 Move X0, 0xBA5000
	036 Move X0, [X0+3544]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+3973], W8
	040 Move X0, [X23]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X20, X0
	044 Call Object..ctor, X0
	045 Compare X20, 0
	046 JumpIfEqual {136}
	047 Move [X20+24], X22
	048 Move [X20+32], X21
	049 Move W8, [X21+16]
	050 Move X9, 0xBA5000
	051 Move X9, [X9+3264]
	052 Move [X20+16], W8
	053 Add W8, W8, 1
	054 Move [X21+16], W8
	055 Move X0, [X9]
	056 Move X21, 0xBA5000
	057 Move X21, [X21+3552]
	058 Call 0x1C17F10
	059 Move X2, [X21]
	060 Move X1, X20
	061 Move X3, X31
	062 Move X21, X0
	063 Call Func`1<Object>..ctor, X0, X1, X2
	064 Compare X19, 0
	065 JumpIfEqual {136}
	066 Move X22, 0xB8B000
	067 Move X8, [X19]
	068 Move X22, [X22+704]
	069 Move X24, 0xB64000
	070 Move X23, 0xBA5000
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X22]
	073 Move X24, [X24+1456]
	074 Move X23, [X23+3560]
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move W2, 7
	084 Move X0, X19
	085 Call 0x1C5D788
	086 Move W9, [X10]
	087 Add W9, W9, 7
	088 Add X8, X8, W9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X2, [X0+8]
	092 Move X0, X19
	093 Move X1, X21
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, [X24]
	096 Move X19, X0
	097 Move X0, X8
	098 Call 0x1C17F10
	099 Move X2, [X23]
	100 Move X1, X20
	101 Move X3, X31
	102 Move X21, X0
	103 Call Action`1<Single>..ctor, X0, X1, X2
	104 Compare X19, 0
	105 JumpIfEqual {136}
	106 Move X8, [X19]
	107 Move X1, [X22]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move W2, 23
	118 Move X0, X19
	119 Call 0x1C5D788
	120 Move W9, [X10]
	121 Add W9, W9, 23
	122 Add X8, X8, W9
	123 Add X0, X8, 312
	124 Move X3, [X0]
	125 Move X2, [X0+8]
	126 Move X0, X19
	127 Move X1, X21
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X24, [X31+16]
	133 Move X23, [X31+24]
	134 Move X30, [X31+64]
	135 CallNoReturn X3
	136 Call 0x1C17F20

Method: System.Void <Sequence>b__1()

Disassembly:
	0x035921E0 LDR X0, [X8]
	0x035921E4 ADRP X8, 0xB61000
	0x035921E8 LDR X8, [X8 + 0x848]
	0x035921EC LDR X2, [X8]
	0x035921F0 BL 0x32274B8
	0x035921F4 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call Promise.Resolve, X0
	007 Return 
	008 Call 0x1C17F20

