Type: RSG.PromiseTimer

Method: RSG.IPromise WaitFor(System.Single seconds)

Disassembly:
	0x0358E318 ADRP X0, 0xB8E000
	0x0358E31C LDR X0, [X0 + 0xFC8]
	0x0358E320 BL 0x1C16D08
	0x0358E324 MOV X2, X0
	0x0358E328 MOV X0, X21
	0x0358E32C MOV X1, X20
	0x0358E330 MOV X3, X19
	0x0358E334 MOV X4, X31
	0x0358E338 BL 0x32277C4
	0x0358E33C MOV X19, X0
	0x0358E340 ADRP X0, 0xB8E000
	0x0358E344 LDR X0, [X0 + 0xFD0]
	0x0358E348 BL 0x1C16D08
	0x0358E34C BL 0x1C16F10
	0x0358E350 MOV X1, X19
	0x0358E354 MOV X20, X0
	0x0358E358 BL 0x358EC68
	0x0358E35C ADRP X0, 0xBA8000
	0x0358E360 LDR X0, [X0 + 0xBE8]
	0x0358E364 BL 0x1C16D08
	0x0358E368 MOV X1, X0
	0x0358E36C MOV X0, X20
	0x0358E370 BL 0x1C16DEC
	0x0358E374 BL 0x1C16F20
	0x0358E378 STR X30, [X31 - 0x30]!
	0x0358E37C STP X22, X21, [X31 + 0x10]
	0x0358E380 STP X20, X19, [X31 + 0x20]
	0x0358E384 ADRP X21, 0xE51000
	0x0358E388 LDRB W8, [X21 + 0xF61]
	0x0358E38C MOV X19, X2
	0x0358E390 MOV X20, X1
	0x0358E394 MOV X22, X0
	0x0358E398 TBNZ X8, 0x0, 0x358E3C8
	0x0358E39C ADRP X0, 0xB8E000
	0x0358E3A0 LDR X0, [X0 + 0xF40]
	0x0358E3A4 BL 0x1C16CF4
	0x0358E3A8 ADRP X0, 0xB8E000
	0x0358E3AC LDR X0, [X0 + 0xF48]
	0x0358E3B0 BL 0x1C16CF4
	0x0358E3B4 ADRP X0, 0xB8E000
	0x0358E3B8 LDR X0, [X0 + 0xF50]
	0x0358E3BC BL 0x1C16CF4
	0x0358E3C0 MOVZ W8, 0x1
	0x0358E3C4 STRB W8, [X21 + 0xF61]
	0x0358E3C8 LDR X21, [X22 + 0x18]
	0x0358E3CC CBNZ X21, 0x358E3FC

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE52000
	007 Move X21, 0xBA9000
	008 Move W8, [X20+3922]
	009 Move X21, [X21+2912]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBA9000
	017 Move X0, [X0+2920]
	018 Call 0x1C17CF4
	019 Move X0, 0xBA9000
	020 Move X0, [X0+2928]
	021 Call 0x1C17CF4
	022 Move X0, 0xBA9000
	023 Move X0, [X0+2912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3922], W8
	027 Move X0, [X21]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X20, X0
	031 Call Object..ctor, X0
	032 Compare X20, 0
	033 JumpIfEqual {55}
	034 Move X8, 0xBA9000
	035 Move X8, [X8+2920]
	036 Move [X20+16], S8
	037 Move X21, 0xBA9000
	038 Move X0, [X8]
	039 Move X21, [X21+2928]
	040 Call 0x1C17F10
	041 Move X2, [X21]
	042 Move X1, X20
	043 Move X3, X31
	044 Move X21, X0
	045 Call Func`2<TimeData, Boolean>..ctor, X0, X1, X2
	046 Move X0, X19
	047 Move X1, X21
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Move V8, [X31+48]
	053 Call PromiseTimer.WaitUntil, X0, X1
	054 Return X0
	055 Call 0x1C17F20

Method: RSG.IPromise WaitWhile(System.Func`2<RSG.TimeData, System.Boolean> predicate)

Disassembly:
	0x0358E4AC LDR X0, [X0 + 0xBF8]
	0x0358E4B0 BL 0x1C16CF4
	0x0358E4B4 ADRP X0, 0xBA8000
	0x0358E4B8 LDR X0, [X0 + 0xC00]
	0x0358E4BC BL 0x1C16CF4
	0x0358E4C0 MOVZ W8, 0x1
	0x0358E4C4 STRB W8, [X21 + 0xF62]
	0x0358E4C8 LDR X21, [X22 + 0x20]
	0x0358E4CC CBNZ X21, 0x358E4FC
	0x0358E4D0 ADRP X8, 0xBA8000
	0x0358E4D4 LDR X8, [X8 + 0xC00]
	0x0358E4D8 LDR X0, [X8]
	0x0358E4DC BL 0x1C16F10
	0x0358E4E0 ADRP X8, 0xBA8000
	0x0358E4E4 LDR X8, [X8 + 0xBF8]
	0x0358E4E8 MOV X21, X0
	0x0358E4EC LDR X1, [X8]
	0x0358E4F0 BL 0x3131410
	0x0358E4F4 STR X21, [X22 + 0x20]
	0x0358E4F8 CBZ X21, 0x358E574
	0x0358E4FC ADRP X9, 0xBA8000
	0x0358E500 LDR X9, [X9 + 0xBF0]
	0x0358E504 LDR W10, [X21 + 0x1C]
	0x0358E508 LDR X8, [X21 + 0x10]
	0x0358E50C LDR X9, [X9]
	0x0358E510 ADD W10, W10, 0x1
	0x0358E514 STR W10, [X21 + 0x1C]
	0x0358E518 CBZ X8, 0x358E574
	0x0358E51C LDRSW X10, [X21 + 0x18]
	0x0358E520 LDR W11, [X8 + 0x18]
	0x0358E524 CMP W10, W11
	0x0358E528 B.CS 0x358E54C
	0x0358E52C ADD W9, W10, 0x1
	0x0358E530 ADD X8, X8, X10, 0x4, LSL
	0x0358E534 STR W9, [X21 + 0x18]
	0x0358E538 STP X20, X19, [X8 + 0x20]
	0x0358E53C LDP X20, X19, [X31 + 0x20]
	0x0358E540 LDP X22, X21, [X31 + 0x10]
	0x0358E544 LDR X30, [X31], #0x30
	0x0358E548 RET
	0x0358E54C LDR X8, [X9 + 0x20]
	0x0358E550 MOV X0, X21
	0x0358E554 MOV X1, X20
	0x0358E558 MOV X2, X19
	0x0358E55C LDR X8, [X8 + 0xC0]
	0x0358E560 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE52000
	007 Move X22, 0xBA9000
	008 Move W8, [X21+3923]
	009 Move X22, [X22+2952]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBA9000
	017 Move X0, [X0+2920]
	018 Call 0x1C17CF4
	019 Move X0, 0xBA9000
	020 Move X0, [X0+2960]
	021 Call 0x1C17CF4
	022 Move X0, 0xBA9000
	023 Move X0, [X0+2952]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3923], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call Object..ctor, X0
	032 Compare X21, 0
	033 JumpIfEqual {55}
	034 Move X8, 0xBA9000
	035 Move X8, [X8+2920]
	036 Move [X21+16], X20
	037 Move X20, 0xBA9000
	038 Move X0, [X8]
	039 Move X20, [X20+2960]
	040 Call 0x1C17F10
	041 Move X2, [X20]
	042 Move X1, X21
	043 Move X3, X31
	044 Move X20, X0
	045 Call Func`2<TimeData, Boolean>..ctor, X0, X1, X2
	046 Move X0, X19
	047 Move X1, X20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call PromiseTimer.WaitUntil, X0, X1
	054 Return X0
	055 Call 0x1C17F20

Method: RSG.IPromise WaitUntil(System.Func`2<RSG.TimeData, System.Boolean> predicate)

Disassembly:
	0x0358E3D8 LDR X0, [X8]
	0x0358E3DC BL 0x1C16F10
	0x0358E3E0 ADRP X8, 0xB8E000
	0x0358E3E4 LDR X8, [X8 + 0xF48]
	0x0358E3E8 MOV X21, X0
	0x0358E3EC LDR X1, [X8]
	0x0358E3F0 BL 0x3040B5C
	0x0358E3F4 STR X21, [X22 + 0x18]
	0x0358E3F8 CBZ X21, 0x358E474
	0x0358E3FC ADRP X9, 0xB8E000
	0x0358E400 LDR X9, [X9 + 0xF40]
	0x0358E404 LDR W10, [X21 + 0x1C]
	0x0358E408 LDR X8, [X21 + 0x10]
	0x0358E40C LDR X9, [X9]
	0x0358E410 ADD W10, W10, 0x1
	0x0358E414 STR W10, [X21 + 0x1C]
	0x0358E418 CBZ X8, 0x358E474
	0x0358E41C LDRSW X10, [X21 + 0x18]
	0x0358E420 LDR W11, [X8 + 0x18]
	0x0358E424 CMP W10, W11
	0x0358E428 B.CS 0x358E44C
	0x0358E42C ADD W9, W10, 0x1
	0x0358E430 ADD X8, X8, X10, 0x4, LSL
	0x0358E434 STR W9, [X21 + 0x18]
	0x0358E438 STP X20, X19, [X8 + 0x20]
	0x0358E43C LDP X20, X19, [X31 + 0x20]
	0x0358E440 LDP X22, X21, [X31 + 0x10]
	0x0358E444 LDR X30, [X31], #0x30
	0x0358E448 RET
	0x0358E44C LDR X8, [X9 + 0x20]
	0x0358E450 MOV X0, X21
	0x0358E454 MOV X1, X20
	0x0358E458 MOV X2, X19
	0x0358E45C LDR X8, [X8 + 0xC0]
	0x0358E460 LDP X20, X19, [X31 + 0x20]
	0x0358E464 LDP X22, X21, [X31 + 0x10]
	0x0358E468 LDR X3, [X8 + 0x70]
	0x0358E46C LDR X30, [X31], #0x30
	0x0358E470 B 0x3041368
	0x0358E474 BL 0x1C16F20
	0x0358E478 STR X30, [X31 - 0x30]!
	0x0358E47C STP X22, X21, [X31 + 0x10]
	0x0358E480 STP X20, X19, [X31 + 0x20]
	0x0358E484 ADRP X21, 0xE51000
	0x0358E488 LDRB W8, [X21 + 0xF62]
	0x0358E48C MOV X19, X2
	0x0358E490 MOV X20, X1
	0x0358E494 MOV X22, X0
	0x0358E498 TBNZ X8, 0x0, 0x358E4C8
	0x0358E49C ADRP X0, 0xBA8000
	0x0358E4A0 LDR X0, [X0 + 0xBF0]
	0x0358E4A4 BL 0x1C16CF4
	0x0358E4A8 ADRP X0, 0xBA8000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE52000
	008 Move X23, 0xB8E000
	009 Move X22, 0xBA9000
	010 Move W8, [X21+3924]
	011 Move X23, [X23+1736]
	012 Move X22, [X22+2936]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xBA9000
	020 Move X0, [X0+2944]
	021 Call 0x1C17CF4
	022 Move X0, 0xBA9000
	023 Move X0, [X0+2936]
	024 Call 0x1C17CF4
	025 Move X0, 0xB8E000
	026 Move X0, [X0+1736]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3924], W8
	030 Move X0, [X23]
	031 Call 0x1C17F10
	032 Move X21, X0
	033 Call Promise..ctor, X0
	034 Move X0, [X22]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X22, X0
	038 Call Object..ctor, X0
	039 Compare X22, 0
	040 JumpIfEqual {65}
	041 Move V0, [X19+16]
	042 Move [X22+32], X21
	043 Move [X22+40], X31
	044 Move [X22+48], W31
	045 Move [X22+16], X20
	046 Move [X22+24], S0
	047 Move W8, [X19+20]
	048 Move [X22+52], W8
	049 Move X0, [X19+24]
	050 Compare X0, 0
	051 JumpIfEqual {65}
	052 Move X8, 0xBA9000
	053 Move X8, [X8+2944]
	054 Move X1, X22
	055 Move X2, [X8]
	056 Call LinkedList`1<Object>.AddLast, X0, X1
	057 Move X0, X21
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Boolean Cancel(RSG.IPromise promise)

Disassembly:
	0x0358E62C ADD W9, W10, 0x1
	0x0358E630 ADD X8, X8, X10, 0x4, LSL
	0x0358E634 STR W9, [X21 + 0x18]
	0x0358E638 STP X20, X19, [X8 + 0x20]
	0x0358E63C LDP X20, X19, [X31 + 0x20]
	0x0358E640 LDP X22, X21, [X31 + 0x10]
	0x0358E644 LDR X30, [X31], #0x30
	0x0358E648 RET
	0x0358E64C LDR X8, [X9 + 0x20]
	0x0358E650 MOV X0, X21
	0x0358E654 MOV X1, X20
	0x0358E658 MOV X2, X19
	0x0358E65C LDR X8, [X8 + 0xC0]
	0x0358E660 LDP X20, X19, [X31 + 0x20]
	0x0358E664 LDP X22, X21, [X31 + 0x10]
	0x0358E668 LDR X3, [X8 + 0x70]
	0x0358E66C LDR X30, [X31], #0x30
	0x0358E670 B 0x30277E8
	0x0358E674 BL 0x1C16F20
	0x0358E678 STR X30, [X31 - 0x20]!
	0x0358E67C STP X20, X19, [X31 + 0x10]
	0x0358E680 MOV X19, X2
	0x0358E684 CBZ X1, 0x358E6A8
	0x0358E688 LDR X0, [X1 + 0x40]
	0x0358E68C LDR X8, [X1 + 0x18]
	0x0358E690 LDR X2, [X1 + 0x28]
	0x0358E694 MOV X1, X3
	0x0358E698 BLR X8
	0x0358E69C LDP X20, X19, [X31 + 0x10]
	0x0358E6A0 LDR X30, [X31], #0x20
	0x0358E6A4 RET
	0x0358E6A8 BL 0x1C16F20
	0x0358E6AC CMP W1, 0x1
	0x0358E6B0 MOV X20, X0
	0x0358E6B4 B.NE 0x358E788
	0x0358E6B8 MOV X0, X20
	0x0358E6BC BL 0x3EB1AD0
	0x0358E6C0 MOV X20, X0
	0x0358E6C4 ADRP X0, 0xB65000
	0x0358E6C8 LDR X0, [X0 + 0x7D0]
	0x0358E6CC BL 0x1C16D08
	0x0358E6D0 LDR X8, [X20]
	0x0358E6D4 LDR X1, [X8]
	0x0358E6D8 BL 0x1C17270
	0x0358E6DC TBZ X0, 0x0, 0x358E75C
	0x0358E6E0 LDR X20, [X20]
	0x0358E6E4 BL 0x3EB1AE0
	0x0358E6E8 CBZ X19, 0x358E77C
	0x0358E6EC ADRP X0, 0xB8D000
	0x0358E6F0 LDR X0, [X0 + 0x6C0]
	0x0358E6F4 BL 0x1C16D08
	0x0358E6F8 LDR X8, [X19]
	0x0358E6FC MOV X1, X0
	0x0358E700 LDRH W9, [X8 + 0x12E]
	0x0358E704 CBZ X9, 0x358E728
	0x0358E708 LDR X10, [X8 + 0xB0]
	0x0358E70C ADD X10, X10, 0x8
	0x0358E710 LDUR X11, [X10 - 0x8]
	0x0358E714 CMP X11, X1
	0x0358E718 B.EQ 0x358E738
	0x0358E71C SUBS X9, X9, 0x1
	0x0358E720 ADD X10, X10, 0x10
	0x0358E724 B.NE 0x358E710
	0x0358E728 MOV X0, X19
	0x0358E72C MOV W2, W31
	0x0358E730 BL 0x1C5C788
	0x0358E734 B 0x358E744
	0x0358E738 LDRSW X9, [X10]
	0x0358E73C ADD X8, X8, X9, 0x4, LSL
	0x0358E740 ADD X0, X8, 0x138
	0x0358E744 LDP X3, X2, [X0]
	0x0358E748 MOV X0, X19
	0x0358E74C MOV X1, X20
	0x0358E750 LDP X20, X19, [X31 + 0x10]
	0x0358E754 LDR X30, [X31], #0x20
	0x0358E758 BR X3
	0x0358E75C MOVZ W0, 0x8
	0x0358E760 BL 0x3EB1AF0
	0x0358E764 LDR X8, [X20]
	0x0358E768 STR X8, [X0]
	0x0358E76C ADRP X1, 0x926000
	0x0358E770 ADD X1, X1, 0xE58

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE52000
	007 Move W8, [X21+3925]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xB8E000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move X0, 0xBA9000
	018 Move X0, [X0+2968]
	019 Call 0x1C17CF4
	020 Move X0, 0xBA9000
	021 Move X0, [X0+2976]
	022 Call 0x1C17CF4
	023 Move X0, 0xBA9000
	024 Move X0, [X0+2984]
	025 Call 0x1C17CF4
	026 Move X0, 0xBA9000
	027 Move X0, [X0+2992]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3925], W8
	031 Move X0, X19
	032 Move X1, X20
	033 Call PromiseTimer.FindInWaiting, X0, X1
	034 Move X20, X0
	035 Compare X0, 0
	036 JumpIfEqual {84}
	037 Move X8, [X20+40]
	038 Compare X8, 0
	039 JumpIfEqual {92}
	040 Move X9, 0xBA9000
	041 Move X9, [X9+2984]
	042 Move X22, 0xBA9000
	043 Move X21, [X8+32]
	044 Move X0, [X9]
	045 Move X22, [X22+2992]
	046 Call 0x1C17F10
	047 Move X1, [X22]
	048 Move X22, X0
	049 Call PromiseCancelledException..ctor, X0, X1
	050 Compare X21, 0
	051 JumpIfEqual {92}
	052 Move X10, 0xB8E000
	053 Move X8, [X21]
	054 Move X10, [X10+1728]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X21
	066 Move W2, W31
	067 Call 0x1C5D788
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X2, [X0+8]
	073 Move X0, X21
	074 Move X1, X22
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X0, [X19+24]
	077 Compare X0, 0
	078 JumpIfEqual {92}
	079 Move X8, 0xBA9000
	080 Move X8, [X8+2976]
	081 Move X1, X20
	082 Move X2, [X8]
	083 Call LinkedList`1<Object>.Remove, X0, X1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 NotImplemented "Instruction CSET not yet implemented."
	090 Move X30, [X31+48]
	091 Return X0
	092 Call 0x1C17F20

Method: System.Collections.Generic.LinkedListNode`1<RSG.PredicateWait> FindInWaiting(RSG.IPromise promise)

Disassembly:
	0x0358E774 MOV X2, X31
	0x0358E778 BL 0x3EB1B00
	0x0358E77C BL 0x1C16F20
	0x0358E780 MOV X20, X0
	0x0358E784 BL 0x3EB1AE0
	0x0358E788 MOV X0, X20
	0x0358E78C BL 0x1D2C690
	0x0358E790 BL 0x1990590
	0x0358E794 STR X30, [X31 - 0x20]!
	0x0358E798 STP X20, X19, [X31 + 0x10]
	0x0358E79C MOV X19, X2
	0x0358E7A0 CBZ X1, 0x358E7C0
	0x0358E7A4 LDR X8, [X1 + 0x18]
	0x0358E7A8 LDR X0, [X1 + 0x40]
	0x0358E7AC LDR X1, [X1 + 0x28]
	0x0358E7B0 BLR X8
	0x0358E7B4 LDP X20, X19, [X31 + 0x10]
	0x0358E7B8 LDR X30, [X31], #0x20
	0x0358E7BC RET
	0x0358E7C0 BL 0x1C16F20
	0x0358E7C4 CMP W1, 0x1
	0x0358E7C8 MOV X20, X0
	0x0358E7CC B.NE 0x358E8A0
	0x0358E7D0 MOV X0, X20
	0x0358E7D4 BL 0x3EB1AD0
	0x0358E7D8 MOV X20, X0
	0x0358E7DC ADRP X0, 0xB65000
	0x0358E7E0 LDR X0, [X0 + 0x7D0]
	0x0358E7E4 BL 0x1C16D08
	0x0358E7E8 LDR X8, [X20]
	0x0358E7EC LDR X1, [X8]
	0x0358E7F0 BL 0x1C17270
	0x0358E7F4 TBZ X0, 0x0, 0x358E874
	0x0358E7F8 LDR X20, [X20]
	0x0358E7FC BL 0x3EB1AE0
	0x0358E800 CBZ X19, 0x358E894
	0x0358E804 ADRP X0, 0xB8D000
	0x0358E808 LDR X0, [X0 + 0x6C0]
	0x0358E80C BL 0x1C16D08
	0x0358E810 LDR X8, [X19]
	0x0358E814 MOV X1, X0
	0x0358E818 LDRH W9, [X8 + 0x12E]
	0x0358E81C CBZ X9, 0x358E840
	0x0358E820 LDR X10, [X8 + 0xB0]
	0x0358E824 ADD X10, X10, 0x8
	0x0358E828 LDUR X11, [X10 - 0x8]
	0x0358E82C CMP X11, X1
	0x0358E830 B.EQ 0x358E850
	0x0358E834 SUBS X9, X9, 0x1
	0x0358E838 ADD X10, X10, 0x10
	0x0358E83C B.NE 0x358E828
	0x0358E840 MOV X0, X19
	0x0358E844 MOV W2, W31
	0x0358E848 BL 0x1C5C788
	0x0358E84C B 0x358E85C
	0x0358E850 LDRSW X9, [X10]
	0x0358E854 ADD X8, X8, X9, 0x4, LSL
	0x0358E858 ADD X0, X8, 0x138
	0x0358E85C LDP X3, X2, [X0]
	0x0358E860 MOV X0, X19
	0x0358E864 MOV X1, X20
	0x0358E868 LDP X20, X19, [X31 + 0x10]
	0x0358E86C LDR X30, [X31], #0x20
	0x0358E870 BR X3
	0x0358E874 MOVZ W0, 0x8
	0x0358E878 BL 0x3EB1AF0
	0x0358E87C LDR X8, [X20]
	0x0358E880 STR X8, [X0]
	0x0358E884 ADRP X1, 0x926000
	0x0358E888 ADD X1, X1, 0xE58
	0x0358E88C MOV X2, X31
	0x0358E890 BL 0x3EB1B00
	0x0358E894 BL 0x1C16F20
	0x0358E898 MOV X20, X0
	0x0358E89C BL 0x3EB1AE0
	0x0358E8A0 MOV X0, X20
	0x0358E8A4 BL 0x1D2C690
	0x0358E8A8 BL 0x1990590
	0x0358E8AC STR X30, [X31 - 0x20]!
	0x0358E8B0 STP X20, X19, [X31 + 0x10]
	0x0358E8B4 MOV X19, X2
	0x0358E8B8 CBZ X1, 0x358E8D8
	0x0358E8BC LDR X8, [X1 + 0x18]
	0x0358E8C0 LDR X0, [X1 + 0x40]
	0x0358E8C4 LDR X1, [X1 + 0x28]
	0x0358E8C8 BLR X8
	0x0358E8CC LDP X20, X19, [X31 + 0x10]
	0x0358E8D0 LDR X30, [X31], #0x20
	0x0358E8D4 RET
	0x0358E8D8 BL 0x1C16F20
	0x0358E8DC CMP W1, 0x1
	0x0358E8E0 MOV X20, X0
	0x0358E8E4 B.NE 0x358E9B8
	0x0358E8E8 MOV X0, X20
	0x0358E8EC BL 0x3EB1AD0
	0x0358E8F0 MOV X20, X0
	0x0358E8F4 ADRP X0, 0xB65000
	0x0358E8F8 LDR X0, [X0 + 0x7D0]
	0x0358E8FC BL 0x1C16D08
	0x0358E900 LDR X8, [X20]
	0x0358E904 LDR X1, [X8]
	0x0358E908 BL 0x1C17270
	0x0358E90C TBZ X0, 0x0, 0x358E98C
	0x0358E910 LDR X20, [X20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE52000
	009 Move W8, [X21+3926]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBA9000
	017 Move X0, [X0+3000]
	018 Call 0x1C17CF4
	019 Move X0, 0xB8F000
	020 Move X0, [X0+704]
	021 Call 0x1C17CF4
	022 Move X0, 0xBA9000
	023 Move X0, [X0+3008]
	024 Call 0x1C17CF4
	025 Move X0, 0xBA9000
	026 Move X0, [X0+2968]
	027 Call 0x1C17CF4
	028 Move X0, 0xBA9000
	029 Move X0, [X0+3016]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3926], W8
	033 Move [X31+12], W31
	034 Move X8, [X20+24]
	035 Compare X8, 0
	036 JumpIfEqual {120}
	037 Move X20, [X8+16]
	038 Compare X20, 0
	039 JumpIfEqual {111}
	040 Move X22, 0xBA9000
	041 Move X23, 0xB8F000
	042 Move X24, 0xBA9000
	043 Move X22, [X22+3000]
	044 Move X23, [X23+704]
	045 Move X24, [X24+3008]
	046 Move X8, [X20+40]
	047 Compare X8, 0
	048 JumpIfEqual {120}
	049 Move X21, [X8+32]
	050 Compare X21, 0
	051 JumpIfEqual {120}
	052 Move X8, [X21]
	053 Move X1, [X22]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X21
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X21
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move [X31+12], W0
	074 Compare X19, 0
	075 JumpIfEqual {120}
	076 Move X8, [X19]
	077 Move X1, [X23]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X19
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X19
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move W1, W0
	098 Add X0, X31, 12
	099 Move X2, X31
	100 Call Int32.Equals, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {111}
	105 Move X1, [X24]
	106 Move X0, X20
	107 Call LinkedListNode`1<Object>.get_Next, X0
	108 Move X20, X0
	109 Compare X0, 0
	110 JumpIfNotEqual {46}
	111 Move X0, X20
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X30, [X31+64]
	119 Return X0
	120 Call 0x1C17F20

Method: System.Void Update(System.Single deltaTime)

Disassembly:
	0x0358E914 BL 0x3EB1AE0
	0x0358E918 CBZ X19, 0x358E9AC
	0x0358E91C ADRP X0, 0xB8D000
	0x0358E920 LDR X0, [X0 + 0x6C0]
	0x0358E924 BL 0x1C16D08
	0x0358E928 LDR X8, [X19]
	0x0358E92C MOV X1, X0
	0x0358E930 LDRH W9, [X8 + 0x12E]
	0x0358E934 CBZ X9, 0x358E958
	0x0358E938 LDR X10, [X8 + 0xB0]
	0x0358E93C ADD X10, X10, 0x8
	0x0358E940 LDUR X11, [X10 - 0x8]
	0x0358E944 CMP X11, X1
	0x0358E948 B.EQ 0x358E968
	0x0358E94C SUBS X9, X9, 0x1
	0x0358E950 ADD X10, X10, 0x10
	0x0358E954 B.NE 0x358E940
	0x0358E958 MOV X0, X19
	0x0358E95C MOV W2, W31
	0x0358E960 BL 0x1C5C788
	0x0358E964 B 0x358E974
	0x0358E968 LDRSW X9, [X10]
	0x0358E96C ADD X8, X8, X9, 0x4, LSL
	0x0358E970 ADD X0, X8, 0x138
	0x0358E974 LDP X3, X2, [X0]
	0x0358E978 MOV X0, X19
	0x0358E97C MOV X1, X20
	0x0358E980 LDP X20, X19, [X31 + 0x10]
	0x0358E984 LDR X30, [X31], #0x20
	0x0358E988 BR X3
	0x0358E98C MOVZ W0, 0x8
	0x0358E990 BL 0x3EB1AF0
	0x0358E994 LDR X8, [X20]
	0x0358E998 STR X8, [X0]
	0x0358E99C ADRP X1, 0x926000
	0x0358E9A0 ADD X1, X1, 0xE58
	0x0358E9A4 MOV X2, X31
	0x0358E9A8 BL 0x3EB1B00
	0x0358E9AC BL 0x1C16F20
	0x0358E9B0 MOV X20, X0
	0x0358E9B4 BL 0x3EB1AE0
	0x0358E9B8 MOV X0, X20
	0x0358E9BC BL 0x1D2C690
	0x0358E9C0 BL 0x1990590
	0x0358E9C4 STP X31, X31, [X0 + 0x18]
	0x0358E9C8 STR X31, [X0 + 0x28]
	0x0358E9CC RET
	0x0358E9D0 STP X30, X23, [X31 - 0x30]!
	0x0358E9D4 STP X22, X21, [X31 + 0x10]
	0x0358E9D8 STP X20, X19, [X31 + 0x20]
	0x0358E9DC ADRP X21, 0xE51000
	0x0358E9E0 ADRP X22, 0xBA8000
	0x0358E9E4 LDRB W8, [X21 + 0xF64]
	0x0358E9E8 LDR X22, [X22 + 0xC08]
	0x0358E9EC MOV X20, X1
	0x0358E9F0 MOV X19, X0
	0x0358E9F4 TBNZ X8, 0x0, 0x358EA30
	0x0358E9F8 ADRP X0, 0xB8E000
	0x0358E9FC LDR X0, [X0 + 0xF88]
	0x0358EA00 BL 0x1C16CF4
	0x0358EA04 ADRP X0, 0xB8E000
	0x0358EA08 LDR X0, [X0 + 0xF90]
	0x0358EA0C BL 0x1C16CF4
	0x0358EA10 ADRP X0, 0xBA8000
	0x0358EA14 LDR X0, [X0 + 0xC10]
	0x0358EA18 BL 0x1C16CF4
	0x0358EA1C ADRP X0, 0xBA8000
	0x0358EA20 LDR X0, [X0 + 0xC08]
	0x0358EA24 BL 0x1C16CF4
	0x0358EA28 MOVZ W8, 0x1
	0x0358EA2C STRB W8, [X21 + 0xF64]
	0x0358EA30 LDR X0, [X22]
	0x0358EA34 BL 0x1C16F10
	0x0358EA38 MOV X1, X31
	0x0358EA3C MOV X21, X0
	0x0358EA40 BL 0x33BDD8C
	0x0358EA44 CBZ X21, 0x358EAB0
	0x0358EA48 STP X19, X20, [X21 + 0x10]
	0x0358EA4C LDR X20, [X19 + 0x18]!
	0x0358EA50 CBZ X20, 0x358EA98
	0x0358EA54 ADRP X8, 0xB8E000
	0x0358EA58 LDR X8, [X8 + 0xF88]
	0x0358EA5C ADRP X22, 0xBA8000
	0x0358EA60 ADRP X23, 0xB8E000
	0x0358EA64 LDR X0, [X8]
	0x0358EA68 LDR X22, [X22 + 0xC10]
	0x0358EA6C LDR X23, [X23 + 0xF90]
	0x0358EA70 BL 0x1C16F10
	0x0358EA74 LDR X2, [X22]
	0x0358EA78 MOV X1, X21
	0x0358EA7C MOV X3, X31
	0x0358EA80 MOV X22, X0
	0x0358EA84 BL 0x2A6CC94
	0x0358EA88 LDR X2, [X23]
	0x0358EA8C MOV X0, X20
	0x0358EA90 MOV X1, X22
	0x0358EA94 BL 0x21DB610
	0x0358EA98 STP X31, X31, [X19]
	0x0358EA9C STR X31, [X19 + 0x10]
	0x0358EAA0 LDP X20, X19, [X31 + 0x20]
	0x0358EAA4 LDP X22, X21, [X31 + 0x10]
	0x0358EAA8 LDP X30, X23, [X31], #0x30
	0x0358EAAC RET
	0x0358EAB0 BL 0x1C16F20
	0x0358EAB4 MOV X1, X31
	0x0358EAB8 B 0x33BDD8C
	0x0358EABC STR X30, [X31 - 0x30]!
	0x0358EAC0 STP X22, X21, [X31 + 0x10]
	0x0358EAC4 STP X20, X19, [X31 + 0x20]
	0x0358EAC8 ADRP X20, 0xE51000
	0x0358EACC LDRB W8, [X20 + 0xF65]
	0x0358EAD0 MOV X19, X0
	0x0358EAD4 TBNZ X8, 0x0, 0x358EB04
	0x0358EAD8 ADRP X0, 0xBA8000
	0x0358EADC LDR X0, [X0 + 0xC18]
	0x0358EAE0 BL 0x1C16CF4
	0x0358EAE4 ADRP X0, 0xBA8000
	0x0358EAE8 LDR X0, [X0 + 0xC20]
	0x0358EAEC BL 0x1C16CF4
	0x0358EAF0 ADRP X0, 0xBA8000
	0x0358EAF4 LDR X0, [X0 + 0xC28]
	0x0358EAF8 BL 0x1C16CF4
	0x0358EAFC MOVZ W8, 0x1
	0x0358EB00 STRB W8, [X20 + 0xF65]
	0x0358EB04 LDR X20, [X19 + 0x20]
	0x0358EB08 CBZ X20, 0x358EB50
	0x0358EB0C ADRP X8, 0xBA8000
	0x0358EB10 LDR X8, [X8 + 0xC18]
	0x0358EB14 ADRP X21, 0xBA8000
	0x0358EB18 ADRP X22, 0xBA8000
	0x0358EB1C LDR X0, [X8]
	0x0358EB20 LDR X21, [X21 + 0xC28]
	0x0358EB24 LDR X22, [X22 + 0xC20]
	0x0358EB28 BL 0x1C16F10
	0x0358EB2C LDR X2, [X21]
	0x0358EB30 MOV X1, X19
	0x0358EB34 MOV X3, X31
	0x0358EB38 MOV X21, X0
	0x0358EB3C BL 0x2A7315C
	0x0358EB40 LDR X2, [X22]
	0x0358EB44 MOV X0, X20
	0x0358EB48 MOV X1, X21
	0x0358EB4C BL 0x21DC0DC
	0x0358EB50 STP X31, X31, [X19 + 0x18]
	0x0358EB54 STR X31, [X19 + 0x28]
	0x0358EB58 LDP X20, X19, [X31 + 0x20]
	0x0358EB5C LDP X22, X21, [X31 + 0x10]
	0x0358EB60 LDR X30, [X31], #0x30
	0x0358EB64 RET
	0x0358EB68 STR D8, [X31 - 0x30]!
	0x0358EB6C STR X30, [X31 + 0x8]
	0x0358EB70 STP X22, X21, [X31 + 0x10]
	0x0358EB74 STP X20, X19, [X31 + 0x20]
	0x0358EB78 ADRP X20, 0xE51000
	0x0358EB7C ADRP X21, 0xBA8000
	0x0358EB80 LDRB W8, [X20 + 0xF66]
	0x0358EB84 LDR X21, [X21 + 0xC30]
	0x0358EB88 MOV V8.16B, V0.16B
	0x0358EB8C MOV X19, X0
	0x0358EB90 TBNZ X8, 0x0, 0x358EBCC
	0x0358EB94 ADRP X0, 0xB8E000
	0x0358EB98 LDR X0, [X0 + 0xFA0]
	0x0358EB9C BL 0x1C16CF4
	0x0358EBA0 ADRP X0, 0xB8E000
	0x0358EBA4 LDR X0, [X0 + 0xFA8]
	0x0358EBA8 BL 0x1C16CF4
	0x0358EBAC ADRP X0, 0xBA8000
	0x0358EBB0 LDR X0, [X0 + 0xC38]
	0x0358EBB4 BL 0x1C16CF4
	0x0358EBB8 ADRP X0, 0xBA8000
	0x0358EBBC LDR X0, [X0 + 0xC30]
	0x0358EBC0 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xE52000
	012 Move W8, [X20+3927]
	013 Move V8, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xBA9000
	020 Move X0, [X0+3000]
	021 Call 0x1C17CF4
	022 Move X0, 0xBA9000
	023 Move X0, [X0+3008]
	024 Call 0x1C17CF4
	025 Move X0, 0xBA9000
	026 Move X0, [X0+2968]
	027 Call 0x1C17CF4
	028 Move X0, 0xBA9000
	029 Move X0, [X0+3016]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3927], W8
	033 Move V0, [X19+16]
	034 Move W9, [X19+20]
	035 Move X8, [X19+24]
	036 Add S0, S0, S8
	037 Add W9, W9, 1
	038 Move [X19+16], S0
	039 Move [X19+20], W9
	040 Compare X8, 0
	041 JumpIfEqual {177}
	042 Move X22, [X8+16]
	043 Compare X22, 0
	044 JumpIfEqual {166}
	045 Move X24, 0xBA9000
	046 Move X25, 0xBA9000
	047 Move X20, 0xB66000
	048 Move X21, 0xB8E000
	049 Move X24, [X24+3000]
	050 Move X25, [X25+3008]
	051 Move X20, [X20+2000]
	052 Move X21, [X21+1728]
	053 Move X26, [X22+40]
	054 Compare X26, 0
	055 JumpIfEqual {177}
	056 Move V0, [X19+16]
	057 Move V1, [X26+24]
	058 Move V2, [X26+40]
	059 Move W10, [X26+52]
	060 Move X9, [X26+16]
	061 Subtract S0, S0, S1
	062 Subtract S1, S0, S2
	063 Move [X26+40], S0
	064 Move [X26+48], S1
	065 Move W8, [X19+20]
	066 Subtract W8, W8, W10
	067 Move [X26+48], W8
	068 Compare X9, 0
	069 JumpIfEqual {114}
	070 Move X1, [X26+40]
	071 Move X0, [X9+64]
	072 Move X10, [X9+24]
	073 Move X3, [X9+40]
	074 Move W2, W8
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {97}
	080 Move X23, [X26+32]
	081 Compare X23, 0
	082 JumpIfEqual {177}
	083 Move X8, [X23]
	084 Move X1, [X24]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move W2, 1
	095 Move X0, X23
	096 Call 0x1C5D788
	097 Move X1, [X25]
	098 Move X0, X22
	099 Call LinkedListNode`1<Object>.get_Next, X0
	100 Move W9, [X10]
	101 Add W9, W9, 1
	102 Add X8, X8, W9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X23
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X0, X19
	109 Move X1, X22
	110 Call PromiseTimer.RemoveNode, X0, X1
	111 Move X22, X0
	112 Compare X22, 0
	113 JumpIfNotEqual {53}
	114 Call 0x1C17F20
	115 Move X23, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X23
	118 Call 0x3EB2AD0
	119 Move X23, X0
	120 Move X0, X20
	121 Call 0x1C17D08
	122 Move X8, [X23]
	123 Move X1, [X8]
	124 Call 0x1C18270
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {178}
	129 Move X23, [X23]
	130 Call 0x3EB2AE0
	131 Move X24, [X26+32]
	132 Compare X24, 0
	133 JumpIfEqual {177}
	134 Move X0, X21
	135 Call 0x1C17D08
	136 Move X8, [X24]
	137 Move X1, X0
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move X0, X24
	148 Move W2, W31
	149 Call 0x1C5D788
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Add X8, X8, X9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X2, [X0+8]
	155 Move X0, X24
	156 Move X1, X23
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X0, X19
	159 Move X1, X22
	160 Call PromiseTimer.RemoveNode, X0, X1
	161 Move X24, 0xBA9000
	162 Move X24, [X24+3000]
	163 Move X22, X0
	164 Compare X22, 0
	165 JumpIfNotEqual {53}
	166 Move X20, [X31+64]
	167 Move X19, [X31+72]
	168 Move X22, [X31+48]
	169 Move X21, [X31+56]
	170 Move X24, [X31+32]
	171 Move X23, [X31+40]
	172 Move X26, [X31+16]
	173 Move X25, [X31+24]
	174 Move X30, [X31+8]
	175 Move V8, [X31+80]
	176 Return 
	177 Call 0x1C17F20
	178 Move W0, 8
	179 Call 0x3EB2AF0
	180 Move X8, [X23]
	181 Move [X0], X8
	182 Move X1, 0x927000
	183 Add X1, X1, 3672
	184 Move X2, X31
	185 Call 0x3EB2B00
	186 Move X23, X0
	187 Call 0x3EB2AE0
	188 Move X0, X23
	189 Call 0x1D2D690
	190 Call 0x1991590

Method: System.Collections.Generic.LinkedListNode`1<RSG.PredicateWait> RemoveNode(System.Collections.Generic.LinkedListNode`1<RSG.PredicateWait> node)

Disassembly:
	0x0358EBC4 MOVZ W8, 0x1
	0x0358EBC8 STRB W8, [X20 + 0xF66]
	0x0358EBCC LDR X0, [X21]
	0x0358EBD0 BL 0x1C16F10
	0x0358EBD4 MOV X1, X31
	0x0358EBD8 MOV X20, X0
	0x0358EBDC BL 0x33BDD8C
	0x0358EBE0 CBZ X20, 0x358EC5C
	0x0358EBE4 STR X19, [X20 + 0x10]
	0x0358EBE8 STR S8, [X20 + 0x18]
	0x0358EBEC LDR X19, [X19 + 0x28]
	0x0358EBF0 CBZ X19, 0x358EC48
	0x0358EBF4 ADRP X8, 0xB8E000
	0x0358EBF8 LDR X8, [X8 + 0xFA0]
	0x0358EBFC ADRP X21, 0xBA8000
	0x0358EC00 ADRP X22, 0xB8E000
	0x0358EC04 LDR X0, [X8]
	0x0358EC08 LDR X21, [X21 + 0xC38]
	0x0358EC0C LDR X22, [X22 + 0xFA8]
	0x0358EC10 BL 0x1C16F10
	0x0358EC14 LDR X2, [X21]
	0x0358EC18 MOV X1, X20
	0x0358EC1C MOV X3, X31
	0x0358EC20 MOV X21, X0
	0x0358EC24 BL 0x2A6C144
	0x0358EC28 LDR X2, [X22]
	0x0358EC2C MOV X0, X19
	0x0358EC30 MOV X1, X21
	0x0358EC34 LDP X20, X19, [X31 + 0x20]
	0x0358EC38 LDP X22, X21, [X31 + 0x10]
	0x0358EC3C LDR X30, [X31 + 0x8]
	0x0358EC40 LDR V8, [X31], #0x30
	0x0358EC44 B 0x21DB308
	0x0358EC48 LDP X20, X19, [X31 + 0x20]
	0x0358EC4C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE52000
	006 Move W8, [X21+3928]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xBA9000
	014 Move X0, [X0+3008]
	015 Call 0x1C17CF4
	016 Move X0, 0xBA9000
	017 Move X0, [X0+2976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3928], W8
	021 Compare X19, 0
	022 JumpIfEqual {44}
	023 Move X8, 0xBA9000
	024 Move X8, [X8+3008]
	025 Move X0, X19
	026 Move X1, [X8]
	027 Call LinkedListNode`1<Object>.get_Next, X0
	028 Move X8, [X20+24]
	029 Compare X8, 0
	030 JumpIfEqual {44}
	031 Move X9, 0xBA9000
	032 Move X9, [X9+2976]
	033 Move X20, X0
	034 Move X0, X8
	035 Move X1, X19
	036 Move X2, [X9]
	037 Call LinkedList`1<Object>.Remove, X0, X1
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0358EC50 LDR X30, [X31 + 0x8]
	0x0358EC54 LDR V8, [X31], #0x30
	0x0358EC58 RET
	0x0358EC5C BL 0x1C16F20
	0x0358EC60 MOV X1, X31
	0x0358EC64 B 0x33BDD8C
	0x0358EC68 B 0x359183C
	0x0358EC6C SUB X31, X31, 0x50
	0x0358EC70 STP X30, X21, [X31 + 0x30]
	0x0358EC74 STP X20, X19, [X31 + 0x40]
	0x0358EC78 ADRP X20, 0xE51000
	0x0358EC7C LDRB W8, [X20 + 0xF68]
	0x0358EC80 MOV X19, X0
	0x0358EC84 TBNZ X8, 0x0, 0x358ECA8
	0x0358EC88 ADRP X0, 0xB8E000
	0x0358EC8C LDR X0, [X0 + 0xFB0]
	0x0358EC90 BL 0x1C16CF4
	0x0358EC94 ADRP X0, 0xB8D000
	0x0358EC98 LDR X0, [X0 + 0x6C8]
	0x0358EC9C BL 0x1C16CF4
	0x0358ECA0 MOVZ W8, 0x1
	0x0358ECA4 STRB W8, [X20 + 0xF68]
	0x0358ECA8 LDR W20, [X19 + 0x40]
	0x0358ECAC CBNZ W20, 0x358ED24
	0x0358ECB0 ADRP X20, 0xB8D000
	0x0358ECB4 LDR X20, [X20 + 0x6C8]
	0x0358ECB8 MOVZ W8, 0x2
	0x0358ECBC STR W8, [X19 + 0x40]
	0x0358ECC0 LDR X0, [X20]
	0x0358ECC4 LDR W8, [X0 + 0xE0]
	0x0358ECC8 CBNZ W8, 0x358ECD4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE52000
	007 Move X22, 0xBA9000
	008 Move X20, 0xBA9000
	009 Move W8, [X21+3929]
	010 Move X22, [X22+3024]
	011 Move X20, [X20+3032]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xBA9000
	018 Move X0, [X0+3032]
	019 Call 0x1C17CF4
	020 Move X0, 0xBA9000
	021 Move X0, [X0+3024]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3929], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call LinkedList`1<Object>..ctor, X0
	030 Move [X19+24], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

