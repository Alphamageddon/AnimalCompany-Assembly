Type: RSG.Promise`1/<>c__DisplayClass48_0`1

Method: System.Void .ctor()

Disassembly:
	0x0237A174 SUB X8, X29, 0x18
	0x0237A178 CSEL X1, X1, X8, LT

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: RSG.IPromise`1<System.Collections.Generic.IEnumerable`1<ConvertedT>> <ThenAll>b__0(PromisedT value)

Disassembly:
	0x0237A17C BL 0x3EB1AC0
	0x0237A180 CBZ X20, 0x237A1D8
	0x0237A184 LDR X8, [X22 + 0xC0]
	0x0237A188 LDP X9, X1, [X8 + 0x68]
	0x0237A18C LDR W8, [X9 + 0x28]
	0x0237A190 LDR X0, [X1]
	0x0237A194 TBNZ X8, 0x1F, 0x237A19C
	0x0237A198 LDR X19, [X19]
	0x0237A19C STUR X19, [X29 - 0x10]
	0x0237A1A0 LDR X8, [X1 + 0x10]
	0x0237A1A4 SUB X3, X29, 0x10
	0x0237A1A8 MOV X2, X20
	0x0237A1AC MOV X4, X19
	0x0237A1B0 BLR X8
	0x0237A1B4 LDR X8, [X21 + 0x28]
	0x0237A1B8 LDUR X9, [X29 - 0x8]
	0x0237A1BC CMP X8, X9
	0x0237A1C0 B.NE 0x237A1DC
	0x0237A1C4 ADD X31, X29, 0x0
	0x0237A1C8 LDP X20, X19, [X31 + 0x20]
	0x0237A1CC LDP X22, X21, [X31 + 0x10]
	0x0237A1D0 LDP X29, X30, [X31], #0x30
	0x0237A1D4 RET
	0x0237A1D8 BL 0x1C16F20
	0x0237A1DC BL 0x3EB1B20
	0x0237A1E0 STR X30, [X31 - 0x10]!
	0x0237A1E4 LDR X0, [X0 + 0x18]
	0x0237A1E8 CBZ X0, 0x237A204
	0x0237A1EC LDR X8, [X2 + 0x20]
	0x0237A1F0 LDR X8, [X8 + 0xC0]
	0x0237A1F4 LDR X2, [X8 + 0x78]
	0x0237A1F8 LDR X3, [X2]
	0x0237A1FC LDR X30, [X31], #0x10
	0x0237A200 BR X3
	0x0237A204 BL 0x1C16F20
	0x0237A208 MOV X1, X31
	0x0237A20C B 0x33BDD8C
	0x0237A210 STR X30, [X31 - 0x20]!
	0x0237A214 STP X20, X19, [X31 + 0x10]
	0x0237A218 LDR X9, [X0 + 0x18]
	0x0237A21C CBZ X9, 0x237A288
	0x0237A220 MOV X8, X0
	0x0237A224 LDR X0, [X9 + 0x10]
	0x0237A228 CBZ X0, 0x237A288
	0x0237A22C LDRSW X8, [X8 + 0x10]
	0x0237A230 LDR W10, [X0 + 0x18]
	0x0237A234 CMP W8, W10
	0x0237A238 B.CS 0x237A28C
	0x0237A23C ADD X8, X0, X8, 0x2, LSL
	0x0237A240 STR S0, [X8 + 0x20]
	0x0237A244 LDR X20, [X9 + 0x18]
	0x0237A248 CBZ X20, 0x237A288
	0x0237A24C LDR W8, [X20 + 0x50]
	0x0237A250 CBZ W8, 0x237A260
	0x0237A254 LDP X20, X19, [X31 + 0x10]
	0x0237A258 LDR X30, [X31], #0x20
	0x0237A25C RET
	0x0237A260 MOV X19, X1

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 32
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X22+40]
	012 Move X19, X2
	013 Add X9, X31, 0
	014 Move [X29-8], X8
	015 Move [X29-32], X1
	016 Move X23, [X2+32]
	017 Move X8, [X23+192]
	018 Move X8, [X8+16]
	019 Move W2, [X8+252]
	020 Add X10, X2, 15
	021 And X10, X10, 0x1FFFFFFFF
	022 Subtract X21, X9, X10
	023 Add X31, X21, 0
	024 Move W8, [X8+40]
	025 Move X20, [X0+16]
	026 Move X0, X21
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract X8, X29, 32
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Call 0x3EB2AC0
	031 Compare X20, 0
	032 JumpIfEqual {67}
	033 Move X8, [X23+192]
	034 Move X9, [X8+16]
	035 Move X1, [X8+24]
	036 Move W8, [X9+40]
	037 Move X0, [X1]
	038 Move TEMP, X8
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfEqual {43}
	042 Move X21, [X21]
	043 Move [X29-24], X21
	044 Move X8, [X1+16]
	045 Subtract X3, X29, 24
	046 Subtract X4, X29, 16
	047 Move X2, X20
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, [X19+32]
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X8, [X8+192]
	052 Move X1, [X8+40]
	053 Move X8, [X1]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X22+40]
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X31, X29, 0
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X23, [X31+16]
	064 Move X29, [X31+64]
	065 Move X30, [X31+72]
	066 Return X0
	067 Call 0x1C17F20
	068 Call 0x3EB2B20

