Type: RSG.Promise/<>c__DisplayClass66_0

Method: System.Void .ctor()

Disassembly:
	0x03591070 MOV X1, X31
	0x03591074 MOV X20, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Race>b__0(RSG.IPromise promise, System.Int32 index)

Disassembly:
	0x0359230C CMP X11, X1
	0x03592310 B.EQ 0x3592330
	0x03592314 SUBS X9, X9, 0x1
	0x03592318 ADD X10, X10, 0x10
	0x0359231C B.NE 0x3592308
	0x03592320 MOV X0, X21
	0x03592324 MOV W2, W31
	0x03592328 BL 0x1C5C788
	0x0359232C B 0x359233C
	0x03592330 LDRSW X9, [X10]
	0x03592334 ADD X8, X8, X9, 0x4, LSL
	0x03592338 ADD X0, X8, 0x138
	0x0359233C LDP X8, X1, [X0]
	0x03592340 MOV X0, X21
	0x03592344 BLR X8
	0x03592348 MOV X24, X0
	0x0359234C LDR X0, [X28]
	0x03592350 MOV X23, X1
	0x03592354 MOVZ W1, 0x5
	0x03592358 BL 0x1C16D6C
	0x0359235C CBZ X0, 0x35924FC
	0x03592360 LDR W8, [X0 + 0x18]
	0x03592364 CBZ W8, 0x3592504
	0x03592368 LDR X9, [X29]
	0x0359236C CMP W8, 0x1
	0x03592370 STR X9, [X0 + 0x20]
	0x03592374 B.EQ 0x35924F8
	0x03592378 CMP W8, 0x2
	0x0359237C STR X24, [X0 + 0x28]
	0x03592380 B.LS 0x3592508
	0x03592384 LDR X9, [X27]
	0x03592388 CMP W8, 0x3
	0x0359238C STR X9, [X0 + 0x30]
	0x03592390 B.EQ 0x359250C
	0x03592394 CMP W8, 0x4
	0x03592398 STR X23, [X0 + 0x38]
	0x0359239C B.LS 0x3592500
	0x035923A0 LDR X8, [X19]
	0x035923A4 STR X8, [X0 + 0x40]
	0x035923A8 MOV X1, X31
	0x035923AC BL 0x32278CC
	0x035923B0 MOV X1, X0
	0x035923B4 MOV X0, X22
	0x035923B8 MOV X2, X31
	0x035923BC BL 0x321B938
	0x035923C0 B 0x359228C
	0x035923C4 MOV X23, X31
	0x035923C8 MOVZ W19, 0x7
	0x035923CC CBZ X21, 0x3592430
	0x035923D0 LDR X8, [X21]
	0x035923D4 ADRP X10, 0xB61000
	0x035923D8 LDRH W9, [X8 + 0x12E]
	0x035923DC LDR X10, [X10 + 0xE00]
	0x035923E0 LDR X1, [X10]
	0x035923E4 CBZ X9, 0x3592408
	0x035923E8 LDR X10, [X8 + 0xB0]
	0x035923EC ADD X10, X10, 0x8
	0x035923F0 LDUR X11, [X10 - 0x8]
	0x035923F4 CMP X11, X1
	0x035923F8 B.EQ 0x3592418
	0x035923FC SUBS X9, X9, 0x1
	0x03592400 ADD X10, X10, 0x10
	0x03592404 B.NE 0x35923F0
	0x03592408 MOV X0, X21
	0x0359240C MOV W2, W31
	0x03592410 BL 0x1C5C788
	0x03592414 B 0x3592424
	0x03592418 LDRSW X9, [X10]
	0x0359241C ADD X8, X8, X9, 0x4, LSL
	0x03592420 ADD X0, X8, 0x138
	0x03592424 LDP X8, X1, [X0]
	0x03592428 MOV X0, X21
	0x0359242C BLR X8
	0x03592430 CBNZ X23, 0x3592514
	0x03592434 CMP W19, 0x7
	0x03592438 B.EQ 0x3592440
	0x0359243C CBNZ W19, 0x35924B8
	0x03592440 ADRP X8, 0xBA4000
	0x03592444 LDR X8, [X8 + 0xE28]
	0x03592448 MOV X1, X22
	0x0359244C MOV X3, X31
	0x03592450 LDR X0, [X8]
	0x03592454 ADRP X8, 0xB61000
	0x03592458 LDR X8, [X8 + 0x848]
	0x0359245C LDR X2, [X8]
	0x03592460 BL 0x32274B8
	0x03592464 MOV X1, X0
	0x03592468 LDR X0, [X31]
	0x0359246C MOV X2, X31
	0x03592470 BL 0x321B938
	0x03592474 LDR X8, [X31 + 0x8]
	0x03592478 MOV X4, X31
	0x0359247C LDR X2, [X8 + 0x20]
	0x03592480 ADRP X8, 0xB9B000
	0x03592484 LDR X8, [X8 + 0xD88]
	0x03592488 LDR X1, [X8]
	0x0359248C ADRP X8, 0xB61000
	0x03592490 LDR X8, [X8 + 0x838]
	0x03592494 LDP X20, X19, [X31 + 0x60]
	0x03592498 LDP X22, X21, [X31 + 0x50]
	0x0359249C LDP X24, X23, [X31 + 0x40]
	0x035924A0 LDR X3, [X8]
	0x035924A4 LDP X26, X25, [X31 + 0x30]
	0x035924A8 LDP X28, X27, [X31 + 0x20]
	0x035924AC LDP X29, X30, [X31 + 0x10]
	0x035924B0 ADD X31, X31, 0x70
	0x035924B4 B 0x32277C4
	0x035924B8 LDP X20, X19, [X31 + 0x60]
	0x035924BC LDP X22, X21, [X31 + 0x50]
	0x035924C0 LDP X24, X23, [X31 + 0x40]
	0x035924C4 LDP X26, X25, [X31 + 0x30]
	0x035924C8 LDP X28, X27, [X31 + 0x20]
	0x035924CC LDP X29, X30, [X31 + 0x10]
	0x035924D0 ADD X31, X31, 0x70
	0x035924D4 RET
	0x035924D8 BL 0x1C16F20
	0x035924DC BL 0x1C16F20
	0x035924E0 BL 0x1C16F28
	0x035924E4 BL 0x1C16F20
	0x035924E8 BL 0x1C16F28
	0x035924EC BL 0x1C16F28
	0x035924F0 BL 0x1C16F28
	0x035924F4 BL 0x1C16F28
	0x035924F8 BL 0x1C16F28
	0x035924FC BL 0x1C16F20
	0x03592500 BL 0x1C16F28
	0x03592504 BL 0x1C16F28
	0x03592508 BL 0x1C16F28
	0x0359250C BL 0x1C16F28
	0x03592510 BL 0x1C16F20
	0x03592514 MOV X0, X23
	0x03592518 BL 0x1C16F18
	0x0359251C B 0x3592574
	0x03592520 B 0x3592574
	0x03592524 B 0x3592574
	0x03592528 B 0x3592574
	0x0359252C B 0x3592574
	0x03592530 B 0x3592574
	0x03592534 B 0x3592574
	0x03592538 B 0x3592614
	0x0359253C B 0x3592614
	0x03592540 B 0x3592614
	0x03592544 B 0x3592614
	0x03592548 B 0x3592614
	0x0359254C B 0x3592614
	0x03592550 B 0x3592614
	0x03592554 MOV X22, X20
	0x03592558 B 0x3592574
	0x0359255C MOV X22, X20
	0x03592560 B 0x3592614
	0x03592564 B 0x3592574
	0x03592568 B 0x3592614
	0x0359256C B 0x3592574
	0x03592570 B 0x3592614
	0x03592574 CMP W1, 0x1
	0x03592578 B.NE 0x3592594
	0x0359257C BL 0x3EB1AD0
	0x03592580 LDR X23, [X0]
	0x03592584 BL 0x3EB1AE0
	0x03592588 MOV W19, W31
	0x0359258C CBNZ X21, 0x35923D0
	0x03592590 B 0x3592430
	0x03592594 MOV X19, X0
	0x03592598 MOV X23, X31
	0x0359259C B 0x35925A4
	0x035925A0 MOV X19, X0
	0x035925A4 CBZ X21, 0x3592608
	0x035925A8 LDR X8, [X21]
	0x035925AC ADRP X10, 0xB61000
	0x035925B0 LDRH W9, [X8 + 0x12E]
	0x035925B4 LDR X10, [X10 + 0xE00]
	0x035925B8 LDR X1, [X10]
	0x035925BC CBZ X9, 0x35925E0
	0x035925C0 LDR X10, [X8 + 0xB0]
	0x035925C4 ADD X10, X10, 0x8
	0x035925C8 LDUR X11, [X10 - 0x8]
	0x035925CC CMP X11, X1
	0x035925D0 B.EQ 0x35925F0
	0x035925D4 SUBS X9, X9, 0x1
	0x035925D8 ADD X10, X10, 0x10
	0x035925DC B.NE 0x35925C8
	0x035925E0 MOV X0, X21
	0x035925E4 MOV W2, W31
	0x035925E8 BL 0x1C5C788
	0x035925EC B 0x35925FC
	0x035925F0 LDRSW X9, [X10]
	0x035925F4 ADD X8, X8, X9, 0x4, LSL
	0x035925F8 ADD X0, X8, 0x138
	0x035925FC LDP X8, X1, [X0]
	0x03592600 MOV X0, X21
	0x03592604 BLR X8
	0x03592608 CBZ X23, 0x35926A4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE4E000
	008 Move X23, 0xBA5000
	009 Move W8, [X22+3975]
	010 Move X23, [X23+3568]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0xB64000
	019 Move X0, [X0+1456]
	020 Call 0x1C17CF4
	021 Move X0, 0xB65000
	022 Move X0, [X0+712]
	023 Call 0x1C17CF4
	024 Move X0, 0xB63000
	025 Move X0, [X0+3696]
	026 Call 0x1C17CF4
	027 Move X0, 0xB8B000
	028 Move X0, [X0+704]
	029 Call 0x1C17CF4
	030 Move X0, 0xBA5000
	031 Move X0, [X0+3576]
	032 Call 0x1C17CF4
	033 Move X0, 0xBA5000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0xBA5000
	037 Move X0, [X0+3592]
	038 Call 0x1C17CF4
	039 Move X0, 0xBA5000
	040 Move X0, [X0+3568]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+3975], W8
	044 Move X0, [X23]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X22, X0
	048 Call Object..ctor, X0
	049 Compare X22, 0
	050 JumpIfEqual {204}
	051 Move X8, 0xB64000
	052 Move X8, [X8+1456]
	053 Move [X22+24], X19
	054 Move [X22+16], W21
	055 Move X21, 0xBA5000
	056 Move X0, [X8]
	057 Move X21, [X21+3592]
	058 Call 0x1C17F10
	059 Move X2, [X21]
	060 Move X1, X22
	061 Move X3, X31
	062 Move X21, X0
	063 Call Action`1<Single>..ctor, X0, X1, X2
	064 Compare X20, 0
	065 JumpIfEqual {204}
	066 Move X22, 0xB8B000
	067 Move X8, [X20]
	068 Move X22, [X22+704]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X1, [X22]
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move W2, 23
	080 Move X0, X20
	081 Call 0x1C5D788
	082 Move W9, [X10]
	083 Add W9, W9, 23
	084 Add X8, X8, W9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X2, [X0+8]
	088 Move X0, X20
	089 Move X1, X21
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X21, [X19+32]
	092 Move X20, X0
	093 Compare X21, 0
	094 JumpIfNotEqual {107}
	095 Move X8, 0xB65000
	096 Move X8, [X8+712]
	097 Move X0, [X8]
	098 Call 0x1C17F10
	099 Move X8, 0xBA5000
	100 Move X8, [X8+3576]
	101 Move X1, X19
	102 Move X3, X31
	103 Move X21, X0
	104 Move X2, [X8]
	105 Call Action`1<Object>..ctor, X0, X1, X2
	106 Move [X19+32], X21
	107 Compare X20, 0
	108 JumpIfEqual {204}
	109 Move X8, [X20]
	110 Move X1, [X22]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move W2, 5
	121 Move X0, X20
	122 Call 0x1C5D788
	123 Move W9, [X10]
	124 Add W9, W9, 5
	125 Add X8, X8, W9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X2, [X0+8]
	129 Move X0, X20
	130 Move X1, X21
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X21, [X19+40]
	133 Move X20, X0
	134 Compare X21, 0
	135 JumpIfNotEqual {148}
	136 Move X8, 0xB63000
	137 Move X8, [X8+3696]
	138 Move X0, [X8]
	139 Call 0x1C17F10
	140 Move X8, 0xBA5000
	141 Move X8, [X8+3584]
	142 Move X1, X19
	143 Move X3, X31
	144 Move X21, X0
	145 Move X2, [X8]
	146 Call Action..ctor, X0, X1, X2
	147 Move [X19+40], X21
	148 Compare X20, 0
	149 JumpIfEqual {204}
	150 Move X8, [X20]
	151 Move X1, [X22]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move W2, 8
	162 Move X0, X20
	163 Call 0x1C5D788
	164 Move W9, [X10]
	165 Add W9, W9, 8
	166 Add X8, X8, W9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X2, [X0+8]
	170 Move X0, X20
	171 Move X1, X21
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Compare X0, 0
	174 JumpIfEqual {204}
	175 Move X8, [X0]
	176 Move X1, [X22]
	177 Move X19, X0
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move W2, 4
	188 Move X0, X19
	189 Call 0x1C5D788
	190 Move W9, [X10]
	191 Add W9, W9, 4
	192 Add X8, X8, W9
	193 Add X0, X8, 312
	194 Move X2, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X19
	197 Move X20, [X31+32]
	198 Move X19, [X31+40]
	199 Move X22, [X31+16]
	200 Move X21, [X31+24]
	201 Move X30, [X31+48]
	202 Move X23, [X31+56]
	203 CallNoReturn X2
	204 Call 0x1C17F20

Method: System.Void <Race>b__2(System.Exception ex)

Disassembly:
	0x03592614 CMP W1, 0x1
	0x03592618 B.NE 0x359262C
	0x0359261C BL 0x3EB1AD0
	0x03592620 LDR X23, [X0]
	0x03592624 BL 0x3EB1AE0
	0x03592628 B 0x3592168
	0x0359262C MOV X19, X0
	0x03592630 MOV X23, X31
	0x03592634 B 0x359263C
	0x03592638 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move W8, [X0+64]
	006 Compare W8, 0
	007 JumpIfEqual {10}
	008 Move X30, [X31+16]
	009 Return 
	010 Move X30, [X31+16]
	011 Call Promise.Reject, X0, X1
	012 Return 
	013 Call 0x1C17F20

Method: System.Void <Race>b__3()

Disassembly:
	0x0359263C CBZ X21, 0x35926A0
	0x03592640 LDR X8, [X21]
	0x03592644 ADRP X10, 0xB61000
	0x03592648 LDRH W9, [X8 + 0x12E]
	0x0359264C LDR X10, [X10 + 0xE00]
	0x03592650 LDR X1, [X10]
	0x03592654 CBZ X9, 0x3592678
	0x03592658 LDR X10, [X8 + 0xB0]
	0x0359265C ADD X10, X10, 0x8
	0x03592660 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move W8, [X0+64]
	006 Compare W8, 0
	007 JumpIfEqual {10}
	008 Move X30, [X31+16]
	009 Return 
	010 Move X30, [X31+16]
	011 Call Promise.Resolve, X0
	012 Return 
	013 Call 0x1C17F20

