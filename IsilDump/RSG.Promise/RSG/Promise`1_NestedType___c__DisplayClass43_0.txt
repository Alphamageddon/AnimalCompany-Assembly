Type: RSG.Promise`1/<>c__DisplayClass43_0

Method: System.Void .ctor()

Disassembly:
	0x02379808 ADRP X0, 0x1DA3000
	0x0237980C LDR X0, [X0 + 0x2C0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Then>b__0(PromisedT v)

Disassembly:
	0x02379810 BL 0x1C16CF4
	0x02379814 MOVZ W8, 0x1
	0x02379818 STRB W8, [X22 + 0x90A]
	0x0237981C LDR X8, [X20 + 0x20]
	0x02379820 LDR X8, [X8 + 0xC0]
	0x02379824 LDR X0, [X8]
	0x02379828 LDRB W8, [X0 + 0x135]
	0x0237982C TBNZ X8, 0x0, 0x2379834
	0x02379830 BL 0x1C5C684
	0x02379834 BL 0x1C16F10
	0x02379838 LDR X8, [X20 + 0x20]
	0x0237983C MOV X22, X0
	0x02379840 LDR X8, [X8 + 0xC0]
	0x02379844 LDR X1, [X8 + 0x8]
	0x02379848 LDR X8, [X1]
	0x0237984C BLR X8
	0x02379850 CBZ X22, 0x2379AEC
	0x02379854 ADRP X8, 0x1D7C000
	0x02379858 LDR X8, [X8 + 0x5B0]
	0x0237985C STR X19, [X22 + 0x18]
	0x02379860 STR W23, [X22 + 0x10]
	0x02379864 LDR X0, [X8]
	0x02379868 BL 0x1C16F10
	0x0237986C LDR X8, [X20 + 0x20]
	0x02379870 MOV X1, X22
	0x02379874 MOV X3, X31
	0x02379878 MOV X23, X0
	0x0237987C LDR X8, [X8 + 0xC0]
	0x02379880 LDR X2, [X8 + 0x20]
	0x02379884 BL 0x2A6DA40
	0x02379888 CBZ X21, 0x2379AEC
	0x0237988C LDR X8, [X20 + 0x20]
	0x02379890 LDR X8, [X8 + 0xC0]
	0x02379894 LDR X1, [X8 + 0x18]
	0x02379898 LDRB W8, [X1 + 0x135]
	0x0237989C TBNZ X8, 0x0, 0x23798AC
	0x023798A0 MOV X0, X1
	0x023798A4 BL 0x1C5C684
	0x023798A8 MOV X1, X0
	0x023798AC LDR X8, [X21]
	0x023798B0 LDRH W9, [X8 + 0x12E]
	0x023798B4 CBZ X9, 0x23798D8
	0x023798B8 LDR X10, [X8 + 0xB0]
	0x023798BC ADD X10, X10, 0x8
	0x023798C0 LDUR X11, [X10 - 0x8]
	0x023798C4 CMP X11, X1
	0x023798C8 B.EQ 0x23798E8
	0x023798CC SUBS X9, X9, 0x1
	0x023798D0 ADD X10, X10, 0x10
	0x023798D4 B.NE 0x23798C0
	0x023798D8 MOVZ W2, 0x18
	0x023798DC MOV X0, X21
	0x023798E0 BL 0x1C5C788
	0x023798E4 B 0x23798F8
	0x023798E8 LDR W9, [X10]
	0x023798EC ADD W9, W9, 0x18
	0x023798F0 ADD X8, X8, W9, 0x4, SXTW
	0x023798F4 ADD X0, X8, 0x138
	0x023798F8 LDP X8, X2, [X0]
	0x023798FC MOV X0, X21
	0x02379900 MOV X1, X23
	0x02379904 BLR X8
	0x02379908 LDR X8, [X20 + 0x20]
	0x0237990C MOV X21, X0
	0x02379910 LDR X8, [X8 + 0xC0]
	0x02379914 LDR X8, [X8 + 0x38]
	0x02379918 LDRB W9, [X8 + 0x135]
	0x0237991C TBNZ X9, 0x0, 0x237992C
	0x02379920 MOV X0, X8
	0x02379924 BL 0x1C5C684
	0x02379928 MOV X8, X0
	0x0237992C MOV X0, X8
	0x02379930 BL 0x1C16F10
	0x02379934 LDR X8, [X20 + 0x20]
	0x02379938 MOV X1, X22
	0x0237993C MOV X23, X0
	0x02379940 LDR X8, [X8 + 0xC0]
	0x02379944 LDR X3, [X8 + 0x40]
	0x02379948 LDR X2, [X8 + 0x30]
	0x0237994C LDR X9, [X3]
	0x02379950 BLR X9
	0x02379954 CBZ X21, 0x2379AEC
	0x02379958 LDR X8, [X20 + 0x20]
	0x0237995C LDR X8, [X8 + 0xC0]
	0x02379960 LDR X1, [X8 + 0x18]
	0x02379964 LDRB W8, [X1 + 0x135]
	0x02379968 TBNZ X8, 0x0, 0x2379978
	0x0237996C MOV X0, X1
	0x02379970 BL 0x1C5C684
	0x02379974 MOV X1, X0
	0x02379978 LDR X8, [X21]
	0x0237997C LDRH W9, [X8 + 0x12E]
	0x02379980 CBZ X9, 0x23799A4
	0x02379984 LDR X10, [X8 + 0xB0]
	0x02379988 ADD X10, X10, 0x8
	0x0237998C LDUR X11, [X10 - 0x8]
	0x02379990 CMP X11, X1
	0x02379994 B.EQ 0x23799B4
	0x02379998 SUBS X9, X9, 0x1
	0x0237999C ADD X10, X10, 0x10
	0x023799A0 B.NE 0x237998C
	0x023799A4 MOVZ W2, 0x9
	0x023799A8 MOV X0, X21
	0x023799AC BL 0x1C5C788
	0x023799B0 B 0x23799C4
	0x023799B4 LDR W9, [X10]
	0x023799B8 ADD W9, W9, 0x9
	0x023799BC ADD X8, X8, W9, 0x4, SXTW
	0x023799C0 ADD X0, X8, 0x138
	0x023799C4 LDP X8, X2, [X0]
	0x023799C8 MOV X0, X21
	0x023799CC MOV X1, X23
	0x023799D0 BLR X8
	0x023799D4 LDR X22, [X19 + 0x30]
	0x023799D8 MOV X21, X0
	0x023799DC CBNZ X22, 0x2379A10
	0x023799E0 ADRP X8, 0x1D7D000
	0x023799E4 LDR X8, [X8 + 0x2C8]
	0x023799E8 LDR X0, [X8]
	0x023799EC BL 0x1C16F10
	0x023799F0 LDR X8, [X20 + 0x20]
	0x023799F4 MOV X1, X19
	0x023799F8 MOV X3, X31
	0x023799FC MOV X22, X0
	0x02379A00 LDR X8, [X8 + 0xC0]
	0x02379A04 LDR X2, [X8 + 0x50]
	0x02379A08 BL 0x2A6B948
	0x02379A0C STR X22, [X19 + 0x30]
	0x02379A10 CBZ X21, 0x2379AEC
	0x02379A14 ADRP X20, 0x1DA3000
	0x02379A18 LDR X8, [X21]
	0x02379A1C LDR X20, [X20 + 0x2C0]
	0x02379A20 LDRH W9, [X8 + 0x12E]
	0x02379A24 LDR X1, [X20]
	0x02379A28 CBZ X9, 0x2379A4C
	0x02379A2C LDR X10, [X8 + 0xB0]
	0x02379A30 ADD X10, X10, 0x8
	0x02379A34 LDUR X11, [X10 - 0x8]
	0x02379A38 CMP X11, X1
	0x02379A3C B.EQ 0x2379A5C
	0x02379A40 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x2061000
	009 Move W8, [X22+2309]
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x1D7D000
	018 Move X0, [X0+1456]
	019 Call 0x1C17CF4
	020 Move X0, 0x1D7E000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0x1D7C000
	024 Move X0, [X0+3696]
	025 Call 0x1C17CF4
	026 Move X0, 0x1DA4000
	027 Move X0, [X0+704]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2309], W8
	031 Move X8, [X19+16]
	032 Compare X8, 0
	033 JumpIfEqual {73}
	034 Move X9, [X8+24]
	035 Move X0, [X8+64]
	036 Move X2, [X8+40]
	037 Move X1, X21
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X22, [X19+40]
	040 Move X21, X0
	041 Compare X22, 0
	042 JumpIfNotEqual {55}
	043 Move X8, 0x1D7D000
	044 Move X8, [X8+1456]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X8, [X20+32]
	048 Move X1, X19
	049 Move X3, X31
	050 Move X22, X0
	051 Move X8, [X8+192]
	052 Move X2, [X8+32]
	053 Call Action`1<Single>..ctor, X0, X1, X2
	054 Move [X19+40], X22
	055 Compare X21, 0
	056 JumpIfEqual {159}
	057 Move X24, 0x1DA4000
	058 Move X8, [X21]
	059 Move X24, [X24+704]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X24]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 23
	071 Move X0, X21
	072 Call 0x1C5D788
	073 Move X0, [X19+24]
	074 Compare X0, 0
	075 JumpIfEqual {159}
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move X1, X31
	083 Move X30, [X31+64]
	084 Call Promise.Resolve, X0
	085 Return 
	086 Move W9, [X10]
	087 Add W9, W9, 23
	088 Add X8, X8, W9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X2, [X0+8]
	092 Move X0, X21
	093 Move X1, X22
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X22, [X19+48]
	096 Move X21, X0
	097 Compare X22, 0
	098 JumpIfNotEqual {111}
	099 Move X8, 0x1D7C000
	100 Move X8, [X8+3696]
	101 Move X0, [X8]
	102 Call 0x1C17F10
	103 Move X8, [X20+32]
	104 Move X1, X19
	105 Move X3, X31
	106 Move X22, X0
	107 Move X8, [X8+192]
	108 Move X2, [X8+40]
	109 Call Action..ctor, X0, X1, X2
	110 Move [X19+48], X22
	111 Move X23, [X19+56]
	112 Compare X23, 0
	113 JumpIfNotEqual {126}
	114 Move X8, 0x1D7E000
	115 Move X8, [X8+712]
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X8, [X20+32]
	119 Move X1, X19
	120 Move X3, X31
	121 Move X23, X0
	122 Move X8, [X8+192]
	123 Move X2, [X8+48]
	124 Call Action`1<Object>..ctor, X0, X1, X2
	125 Move [X19+56], X23
	126 Compare X21, 0
	127 JumpIfEqual {159}
	128 Move X8, [X21]
	129 Move X1, [X24]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move W2, 11
	140 Move X0, X21
	141 Call 0x1C5D788
	142 Move W9, [X10]
	143 Add W9, W9, 11
	144 Add X8, X8, W9
	145 Add X0, X8, 312
	146 Move X4, [X0]
	147 Move X3, [X0+8]
	148 Move X0, X21
	149 Move X1, X22
	150 Move X2, X23
	151 Move X20, [X31+48]
	152 Move X19, [X31+56]
	153 Move X22, [X31+32]
	154 Move X21, [X31+40]
	155 Move X24, [X31+16]
	156 Move X23, [X31+24]
	157 Move X30, [X31+64]
	158 CallNoReturn X4
	159 Call 0x1C17F20

Method: System.Void <Then>b__2(System.Single progress)

Disassembly:
	0x02379A44 ADD X10, X10, 0x10
	0x02379A48 B.NE 0x2379A34
	0x02379A4C MOVZ W2, 0x5
	0x02379A50 MOV X0, X21
	0x02379A54 BL 0x1C5C788
	0x02379A58 B 0x2379A6C
	0x02379A5C LDR W9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call Promise.ReportProgress, X0, V0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void <Then>b__3()

Disassembly:
	0x02379A60 ADD W9, W9, 0x5
	0x02379A64 ADD X8, X8, W9, 0x4, SXTW
	0x02379A68 ADD X0, X8, 0x138
	0x02379A6C LDP X8, X2, [X0]
	0x02379A70 MOV X0, X21
	0x02379A74 MOV X1, X22
	0x02379A78 BLR X8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call Promise.Resolve, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void <Then>b__4(System.Exception ex)

Disassembly:
	0x02379A7C CBZ X0, 0x2379AEC
	0x02379A80 LDR X8, [X0]
	0x02379A84 LDR X1, [X20]
	0x02379A88 MOV X19, X0
	0x02379A8C LDRH W9, [X8 + 0x12E]
	0x02379A90 CBZ X9, 0x2379AB4
	0x02379A94 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call Promise.Reject, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void <Then>b__1(System.Exception ex)

Disassembly:
	0x02379A98 ADD X10, X10, 0x8
	0x02379A9C LDUR X11, [X10 - 0x8]
	0x02379AA0 CMP X11, X1
	0x02379AA4 B.EQ 0x2379AC4
	0x02379AA8 SUBS X9, X9, 0x1
	0x02379AAC ADD X10, X10, 0x10
	0x02379AB0 B.NE 0x2379A9C
	0x02379AB4 MOVZ W2, 0x4
	0x02379AB8 MOV X0, X19
	0x02379ABC BL 0x1C5C788
	0x02379AC0 B 0x2379AD4
	0x02379AC4 LDR W9, [X10]
	0x02379AC8 ADD W9, W9, 0x4
	0x02379ACC ADD X8, X8, W9, 0x4, SXTW
	0x02379AD0 ADD X0, X8, 0x138
	0x02379AD4 LDP X2, X1, [X0]
	0x02379AD8 MOV X0, X19
	0x02379ADC LDP X20, X19, [X31 + 0x20]
	0x02379AE0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Move X20, X0
	006 Move X19, X1
	007 Compare X8, 0
	008 JumpIfEqual {14}
	009 Move X9, [X8+24]
	010 Move X0, [X8+64]
	011 Move X2, [X8+40]
	012 Move X1, X19
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move X0, [X20+24]
	015 Compare X0, 0
	016 JumpIfEqual {24}
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, X31
	021 Move X30, [X31+32]
	022 Call Promise.Reject, X0, X1
	023 Return 
	024 Call 0x1C17F20

