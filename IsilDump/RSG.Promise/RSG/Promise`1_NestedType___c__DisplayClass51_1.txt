Type: RSG.Promise`1/<>c__DisplayClass51_1

Method: System.Void .ctor()

Disassembly:
	0x0237B208 BL 0x2A6DA40
	0x0237B20C CBZ X21, 0x237B46C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <All>b__1(System.Single v)

Disassembly:
	0x0237B210 LDR X8, [X20 + 0x20]
	0x0237B214 LDR X8, [X8 + 0xC0]
	0x0237B218 LDR X1, [X8 + 0x18]
	0x0237B21C LDRB W8, [X1 + 0x135]
	0x0237B220 TBNZ X8, 0x0, 0x237B230
	0x0237B224 MOV X0, X1
	0x0237B228 BL 0x1C5C684
	0x0237B22C MOV X1, X0
	0x0237B230 LDR X8, [X21]
	0x0237B234 LDRH W9, [X8 + 0x12E]
	0x0237B238 CBZ X9, 0x237B25C
	0x0237B23C LDR X10, [X8 + 0xB0]
	0x0237B240 ADD X10, X10, 0x8
	0x0237B244 LDUR X11, [X10 - 0x8]
	0x0237B248 CMP X11, X1
	0x0237B24C B.EQ 0x237B26C
	0x0237B250 SUBS X9, X9, 0x1
	0x0237B254 ADD X10, X10, 0x10
	0x0237B258 B.NE 0x237B244
	0x0237B25C MOVZ W2, 0x18
	0x0237B260 MOV X0, X21
	0x0237B264 BL 0x1C5C788
	0x0237B268 B 0x237B27C
	0x0237B26C LDR W9, [X10]
	0x0237B270 ADD W9, W9, 0x18
	0x0237B274 ADD X8, X8, W9, 0x4, SXTW
	0x0237B278 ADD X0, X8, 0x138
	0x0237B27C LDP X8, X2, [X0]
	0x0237B280 MOV X0, X21
	0x0237B284 MOV X1, X22
	0x0237B288 BLR X8
	0x0237B28C LDR X22, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X9, [X0+24]
	005 Compare X9, 0
	006 JumpIfEqual {38}
	007 Move X8, X0
	008 Move X0, [X9+16]
	009 Compare X0, 0
	010 JumpIfEqual {38}
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 Move W10, [X0+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add X8, X0, X8
	015 Move [X8+32], S0
	016 Move X20, [X9+24]
	017 Compare X20, 0
	018 JumpIfEqual {38}
	019 Move W8, [X20+80]
	020 Compare W8, 0
	021 JumpIfEqual {26}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 
	026 Move X19, X1
	027 Move X1, X31
	028 Call Enumerable.Average, X0
	029 Move X8, [X19+32]
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X8, [X8+192]
	034 Move X1, [X8+32]
	035 Move X30, [X31+32]
	036 Call 0x24E1AD0, X0, V0
	037 Return 
	038 Call 0x1C17F20
	039 Call 0x1C17F28

Method: System.Void <All>b__2(PromisedT result)

Disassembly:
	0x0237B290 MOV X21, X0
	0x0237B294 CBNZ X22, 0x237B2D4
	0x0237B298 LDR X8, [X20 + 0x20]
	0x0237B29C LDR X8, [X8 + 0xC0]
	0x0237B2A0 LDR X0, [X8 + 0x30]
	0x0237B2A4 LDRB W8, [X0 + 0x135]
	0x0237B2A8 TBNZ X8, 0x0, 0x237B2B0
	0x0237B2AC BL 0x1C5C684
	0x0237B2B0 BL 0x1C16F10
	0x0237B2B4 LDR X8, [X20 + 0x20]
	0x0237B2B8 MOV X1, X19
	0x0237B2BC MOV X22, X0
	0x0237B2C0 LDR X8, [X8 + 0xC0]
	0x0237B2C4 LDP X2, X3, [X8 + 0x38]
	0x0237B2C8 LDR X8, [X3]
	0x0237B2CC BLR X8
	0x0237B2D0 STR X22, [X19 + 0x20]
	0x0237B2D4 CBZ X21, 0x237B46C
	0x0237B2D8 LDR X8, [X20 + 0x20]
	0x0237B2DC LDR X8, [X8 + 0xC0]
	0x0237B2E0 LDR X1, [X8 + 0x18]
	0x0237B2E4 LDRB W8, [X1 + 0x135]
	0x0237B2E8 TBNZ X8, 0x0, 0x237B2F8
	0x0237B2EC MOV X0, X1
	0x0237B2F0 BL 0x1C5C684
	0x0237B2F4 MOV X1, X0
	0x0237B2F8 LDR X8, [X21]
	0x0237B2FC LDRH W9, [X8 + 0x12E]
	0x0237B300 CBZ X9, 0x237B324
	0x0237B304 LDR X10, [X8 + 0xB0]
	0x0237B308 ADD X10, X10, 0x8
	0x0237B30C LDUR X11, [X10 - 0x8]
	0x0237B310 CMP X11, X1
	0x0237B314 B.EQ 0x237B334
	0x0237B318 SUBS X9, X9, 0x1
	0x0237B31C ADD X10, X10, 0x10
	0x0237B320 B.NE 0x237B30C
	0x0237B324 MOVZ W2, 0x9
	0x0237B328 MOV X0, X21
	0x0237B32C BL 0x1C5C788

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+24]
	003 Compare X9, 0
	004 JumpIfEqual {43}
	005 Move X10, [X9+16]
	006 Compare X10, 0
	007 JumpIfEqual {43}
	008 NotImplemented "Instruction LDRSW not yet implemented."
	009 Move W11, [X10+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X10, X10, X8
	012 Move W11, 0x3F800000
	013 Move [X10+32], W11
	014 Move X9, [X9+32]
	015 Compare X9, 0
	016 JumpIfEqual {43}
	017 Move W10, [X9+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X8, X9, X8
	020 Move [X8+32], X1
	021 Move X8, [X0+24]
	022 Compare X8, 0
	023 JumpIfEqual {43}
	024 Move W9, [X8+40]
	025 Subtract W9, W9, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X8+40], W9
	028 Move X0, [X8+24]
	029 Compare X0, 0
	030 JumpIfEqual {43}
	031 Move W9, [X0+80]
	032 Compare W9, 0
	033 JumpIfEqual {36}
	034 Move X30, [X31+16]
	035 Return 
	036 Move X9, [X2+32]
	037 Move X1, [X8+32]
	038 Move X9, [X9+192]
	039 Move X2, [X9+56]
	040 Move X30, [X31+16]
	041 Call 0x24E1940, X0, X1
	042 Return 
	043 Call 0x1C17F20
	044 Call 0x1C17F28

