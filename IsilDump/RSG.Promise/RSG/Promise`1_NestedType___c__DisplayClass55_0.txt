Type: RSG.Promise`1/<>c__DisplayClass55_0

Method: System.Void .ctor()

Disassembly:
	0x0237BDC0 LDR X8, [X23 + 0xC0]
	0x0237BDC4 LDP X9, X1, [X8 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Race>b__0(RSG.IPromise`1<PromisedT> promise, System.Int32 index)

Disassembly:
	0x0237BDC8 LDR W8, [X9 + 0x28]
	0x0237BDCC LDR X0, [X1]
	0x0237BDD0 TBNZ X8, 0x1F, 0x237BDD8
	0x0237BDD4 LDR X20, [X20]
	0x0237BDD8 STUR X20, [X29 - 0x18]
	0x0237BDDC LDR X8, [X1 + 0x10]
	0x0237BDE0 SUB X3, X29, 0x18
	0x0237BDE4 SUB X4, X29, 0x10
	0x0237BDE8 MOV X2, X22
	0x0237BDEC BLR X8
	0x0237BDF0 CBZ X19, 0x237BE4C
	0x0237BDF4 LDUR X20, [X29 - 0x10]
	0x0237BDF8 CBZ X20, 0x237BE10
	0x0237BDFC LDR X8, [X19]
	0x0237BE00 MOV X0, X20
	0x0237BE04 LDR X1, [X8 + 0x40]
	0x0237BE08 BL 0x1C16E00
	0x0237BE0C CBZ X0, 0x237BE54
	0x0237BE10 LDR W8, [X19 + 0x18]
	0x0237BE14 CBZ W8, 0x237BE50
	0x0237BE18 STR X20, [X19 + 0x20]
	0x0237BE1C LDR X8, [X25 + 0x28]
	0x0237BE20 LDUR X9, [X29 - 0x8]
	0x0237BE24 CMP X8, X9
	0x0237BE28 B.NE 0x237BE60
	0x0237BE2C MOV X0, X19
	0x0237BE30 ADD X31, X29, 0x0
	0x0237BE34 LDP X20, X19, [X31 + 0x40]
	0x0237BE38 LDP X22, X21, [X31 + 0x30]
	0x0237BE3C LDP X24, X23, [X31 + 0x20]
	0x0237BE40 LDR X25, [X31 + 0x10]
	0x0237BE44 LDP X29, X30, [X31], #0x50
	0x0237BE48 RET
	0x0237BE4C BL 0x1C16F20
	0x0237BE50 BL 0x1C16F28
	0x0237BE54 BL 0x1C16F44
	0x0237BE58 MOV X1, X31
	0x0237BE5C BL 0x1C16DEC
	0x0237BE60 BL 0x3EB1B20
	0x0237BE64 MOV X1, X31
	0x0237BE68 B 0x33BDD8C
	0x0237BE6C STP X29, X30, [X31 - 0x60]!
	0x0237BE70 STP X28, X27, [X31 + 0x10]
	0x0237BE74 STP X26, X25, [X31 + 0x20]
	0x0237BE78 STP X24, X23, [X31 + 0x30]
	0x0237BE7C STP X22, X21, [X31 + 0x40]
	0x0237BE80 STP X20, X19, [X31 + 0x50]
	0x0237BE84 ADD X29, X31, 0x0
	0x0237BE88 SUB X31, X31, 0x40
	0x0237BE8C MRS X27, 0xC000
	0x0237BE90 LDR X8, [X27 + 0x28]
	0x0237BE94 MOV X21, X3
	0x0237BE98 MOV X19, X2
	0x0237BE9C MOV X25, X1
	0x0237BEA0 STUR X8, [X29 - 0x8]
	0x0237BEA4 LDR X8, [X3 + 0x20]
	0x0237BEA8 MOV X23, X0
	0x0237BEAC LDR X8, [X8 + 0xC0]
	0x0237BEB0 LDR X8, [X8]
	0x0237BEB4 LDR W22, [X8 + 0xFC]
	0x0237BEB8 ADD X8, X31, 0x0
	0x0237BEBC ADD X9, X22, 0xF
	0x0237BEC0 AND X9, X9, 0x1FFFFFFFF
	0x0237BEC4 SUB X20, X8, X9
	0x0237BEC8 ADD X31, X20, 0x0
	0x0237BECC ADD X8, X31, 0x0
	0x0237BED0 SUB X24, X8, X9
	0x0237BED4 ADD X31, X24, 0x0
	0x0237BED8 MOV X0, X24
	0x0237BEDC MOV W1, W31
	0x0237BEE0 MOV X2, X22
	0x0237BEE4 BL 0x3EB1B10
	0x0237BEE8 MOV X0, X24
	0x0237BEEC MOV W1, W31
	0x0237BEF0 MOV X2, X22
	0x0237BEF4 BL 0x3EB1B10
	0x0237BEF8 CBNZ X25, 0x237BF68
	0x0237BEFC CBZ X19, 0x237C0D4
	0x0237BF00 MOV X0, X19
	0x0237BF04 MOV X1, X31
	0x0237BF08 BL 0x358B6D4
	0x0237BF0C MOV X1, X31
	0x0237BF10 BL 0x32277A8
	0x0237BF14 MOV X25, X31
	0x0237BF18 TBNZ X0, 0x0, 0x237BF68
	0x0237BF1C MOV X0, X19
	0x0237BF20 MOV X1, X31
	0x0237BF24 BL 0x358B6D4
	0x0237BF28 LDR X8, [X21 + 0x20]
	0x0237BF2C LDR X8, [X8 + 0xC0]
	0x0237BF30 LDR X1, [X8 + 0x8]
	0x0237BF34 LDR X8, [X1]
	0x0237BF38 STP X0, X20, [X29 - 0x18]
	0x0237BF3C LDR X9, [X1 + 0x10]
	0x0237BF40 SUB X3, X29, 0x18
	0x0237BF44 MOV X0, X8
	0x0237BF48 MOV X2, X31
	0x0237BF4C MOV X4, X20
	0x0237BF50 BLR X9
	0x0237BF54 MOV X0, X24
	0x0237BF58 MOV X1, X20
	0x0237BF5C MOV X2, X22
	0x0237BF60 BL 0x3EB1AC0
	0x0237BF64 MOV X25, X31
	0x0237BF68 LDR X23, [X23 + 0x18]
	0x0237BF6C MOV X0, X20
	0x0237BF70 MOV X1, X24
	0x0237BF74 MOV X2, X22
	0x0237BF78 BL 0x3EB1AC0
	0x0237BF7C CBZ X23, 0x237C0D4
	0x0237BF80 LDR X8, [X21 + 0x20]
	0x0237BF84 LDR X8, [X8 + 0xC0]
	0x0237BF88 LDR X9, [X8]
	0x0237BF8C LDR X1, [X8 + 0x20]
	0x0237BF90 LDR W8, [X9 + 0x28]
	0x0237BF94 LDR X0, [X1]
	0x0237BF98 TBNZ X8, 0x1F, 0x237BFA0
	0x0237BF9C LDR X20, [X20]
	0x0237BFA0 STP X25, X19, [X29 - 0x30]
	0x0237BFA4 STUR X20, [X29 - 0x20]
	0x0237BFA8 LDR X8, [X1 + 0x10]
	0x0237BFAC SUB X3, X29, 0x30
	0x0237BFB0 MOV X2, X23
	0x0237BFB4 MOV X4, X20
	0x0237BFB8 BLR X8
	0x0237BFBC LDR X8, [X27 + 0x28]
	0x0237BFC0 LDUR X9, [X29 - 0x8]
	0x0237BFC4 CMP X8, X9
	0x0237BFC8 B.NE 0x237BFEC
	0x0237BFCC ADD X31, X29, 0x0
	0x0237BFD0 LDP X20, X19, [X31 + 0x50]
	0x0237BFD4 LDP X22, X21, [X31 + 0x40]
	0x0237BFD8 LDP X24, X23, [X31 + 0x30]
	0x0237BFDC LDP X26, X25, [X31 + 0x20]
	0x0237BFE0 LDP X28, X27, [X31 + 0x10]
	0x0237BFE4 LDP X29, X30, [X31], #0x60
	0x0237BFE8 RET
	0x0237BFEC BL 0x3EB1B20
	0x0237BFF0 CMP W1, 0x1
	0x0237BFF4 MOV X25, X0
	0x0237BFF8 B.NE 0x237C100
	0x0237BFFC MOV X0, X25
	0x0237C000 BL 0x3EB1AD0
	0x0237C004 MOV X25, X0
	0x0237C008 ADRP X0, 0x1D77000
	0x0237C00C LDR X0, [X0 + 0x7D0]
	0x0237C010 BL 0x1C16D08
	0x0237C014 LDR X8, [X25]
	0x0237C018 LDR X1, [X8]
	0x0237C01C BL 0x1C17270
	0x0237C020 TBZ X0, 0x0, 0x237C0D8
	0x0237C024 LDR X25, [X25]
	0x0237C028 BL 0x3EB1AE0
	0x0237C02C LDR X8, [X23 + 0x10]
	0x0237C030 CBZ X8, 0x237C0D4
	0x0237C034 CBZ X25, 0x237C0D4
	0x0237C038 LDR X9, [X25]
	0x0237C03C LDR X26, [X8 + 0x10]
	0x0237C040 LDRB W8, [X8 + 0x58]
	0x0237C044 MOV X0, X25
	0x0237C048 STUR W8, [X29 - 0x34]
	0x0237C04C LDP X8, X1, [X9 + 0x188]
	0x0237C050 BLR X8
	0x0237C054 MOV X25, X0
	0x0237C058 ADRP X0, 0x1DA0000
	0x0237C05C LDR X0, [X0 + 0xB70]
	0x0237C060 BL 0x1C16D08
	0x0237C064 MOV X28, X0
	0x0237C068 ADRP X0, 0x1DA0000
	0x0237C06C LDR X0, [X0 + 0xB78]
	0x0237C070 BL 0x1C16D08
	0x0237C074 MOV X2, X0
	0x0237C078 MOV X0, X28
	0x0237C07C MOV X1, X26
	0x0237C080 MOV X3, X25
	0x0237C084 MOV X4, X31
	0x0237C088 BL 0x32277C4
	0x0237C08C MOV X1, X0
	0x0237C090 LDUR W0, [X29 - 0x34]
	0x0237C094 MOV W2, W31
	0x0237C098 MOV X3, X31
	0x0237C09C BL 0x358A8CC
	0x0237C0A0 ADRP X0, 0x1DA0000
	0x0237C0A4 LDR X0, [X0 + 0xB80]
	0x0237C0A8 BL 0x1C16D08
	0x0237C0AC BL 0x1C16F10
	0x0237C0B0 MOV X25, X0
	0x0237C0B4 ADRP X0, 0x1DA0000
	0x0237C0B8 LDR X0, [X0 + 0xB88]
	0x0237C0BC BL 0x1C16D08
	0x0237C0C0 MOV X1, X0
	0x0237C0C4 MOV X0, X25
	0x0237C0C8 MOV X2, X31
	0x0237C0CC BL 0x358B0FC
	0x0237C0D0 B 0x237BF68
	0x0237C0D4 BL 0x1C16F20
	0x0237C0D8 MOVZ W0, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x205F000
	008 Move W8, [X23+2319]
	009 Move X20, X3
	010 Move W22, W2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x1D7B000
	018 Move X0, [X0+1456]
	019 Call 0x1C17CF4
	020 Move X0, 0x1D7C000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0x1DA2000
	024 Move X0, [X0+704]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2319], W8
	028 Move X8, [X20+32]
	029 Move X8, [X8+192]
	030 Move X0, [X8]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X23, X0
	040 Call Object..ctor, X0
	041 Compare X23, 0
	042 JumpIfEqual {223}
	043 Move X8, 0x1D7B000
	044 Move X8, [X8+1456]
	045 Move [X23+24], X19
	046 Move [X23+16], W22
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X8, [X20+32]
	050 Move X1, X23
	051 Move X3, X31
	052 Move X22, X0
	053 Move X8, [X8+192]
	054 Move X2, [X8+32]
	055 Call Action`1<Single>..ctor, X0, X1, X2
	056 Compare X21, 0
	057 JumpIfEqual {223}
	058 Move X8, [X20+32]
	059 Move X8, [X8+192]
	060 Move X1, [X8+24]
	061 Move W8, [X1+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X1
	067 Call 0x1C5D684
	068 Move X1, X0
	069 Move X8, [X21]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move W2, 24
	080 Move X0, X21
	081 Call 0x1C5D788
	082 Move W9, [X10]
	083 Add W9, W9, 24
	084 Add X8, X8, W9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X2, [X0+8]
	088 Move X0, X21
	089 Move X1, X22
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X22, [X19+32]
	092 Move X21, X0
	093 Compare X22, 0
	094 JumpIfNotEqual {113}
	095 Move X8, [X20+32]
	096 Move X8, [X8+192]
	097 Move X0, [X8+48]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Call 0x1C17F10
	105 Move X8, [X20+32]
	106 Move X1, X19
	107 Move X22, X0
	108 Move X8, [X8+192]
	109 Move X2, [X8+56]
	110 Move X3, [X8+64]
	111 Call Action`1<Object>..ctor, X0, X1, X2
	112 Move [X19+32], X22
	113 Compare X21, 0
	114 JumpIfEqual {223}
	115 Move X8, [X20+32]
	116 Move X8, [X8+192]
	117 Move X1, [X8+24]
	118 Move W8, [X1+309]
	119 Move TEMP, X8
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfEqual {126}
	123 Move X0, X1
	124 Call 0x1C5D684
	125 Move X1, X0
	126 Move X8, [X21]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move W2, 9
	137 Move X0, X21
	138 Call 0x1C5D788
	139 Move W9, [X10]
	140 Add W9, W9, 9
	141 Add X8, X8, W9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X2, [X0+8]
	145 Move X0, X21
	146 Move X1, X22
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X22, [X19+40]
	149 Move X21, X0
	150 Compare X22, 0
	151 JumpIfNotEqual {164}
	152 Move X8, 0x1D7C000
	153 Move X8, [X8+712]
	154 Move X0, [X8]
	155 Call 0x1C17F10
	156 Move X8, [X20+32]
	157 Move X1, X19
	158 Move X3, X31
	159 Move X22, X0
	160 Move X8, [X8+192]
	161 Move X2, [X8+80]
	162 Call Action`1<Object>..ctor, X0, X1, X2
	163 Move [X19+40], X22
	164 Compare X21, 0
	165 JumpIfEqual {223}
	166 Move X20, 0x1DA1000
	167 Move X8, [X21]
	168 Call 0x3EB2534
	169 Return 
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X1, [X20]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move W2, 5
	181 Move X0, X21
	182 Call 0x1C5D788
	183 Move W9, [X10]
	184 Add W9, W9, 5
	185 Add X8, X8, W9
	186 Add X0, X8, 312
	187 Move X8, [X0]
	188 Move X2, [X0+8]
	189 Move X0, X21
	190 Move X1, X22
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Compare X0, 0
	193 JumpIfEqual {223}
	194 Move X8, [X0]
	195 Move X1, [X20]
	196 Move X19, X0
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move W2, 4
	207 Move X0, X19
	208 Call 0x1C5D788
	209 Move W9, [X10]
	210 Add W9, W9, 4
	211 Add X8, X8, W9
	212 Add X0, X8, 312
	213 Move X2, [X0]
	214 Move X1, [X0+8]
	215 Move X0, X19
	216 Move X20, [X31+32]
	217 Move X19, [X31+40]
	218 Move X22, [X31+16]
	219 Move X21, [X31+24]
	220 Move X30, [X31+48]
	221 Move X23, [X31+56]
	222 CallNoReturn X2
	223 Call 0x1C17F20

Method: System.Void <Race>b__2(PromisedT result)

Disassembly:
	0x0237C0DC BL 0x3EB1AF0
	0x0237C0E0 LDR X8, [X25]
	0x0237C0E4 STR X8, [X0]
	0x0237C0E8 ADRP X1, 0x1B38000
	0x0237C0EC ADD X1, X1, 0xE58
	0x0237C0F0 MOV X2, X31
	0x0237C0F4 BL 0x3EB1B00
	0x0237C0F8 MOV X25, X0
	0x0237C0FC BL 0x3EB1AE0
	0x0237C100 MOV X0, X25
	0x0237C104 BL 0x1D2C690
	0x0237C108 BL 0x1990590
	0x0237C10C MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {16}
	005 Move W8, [X0+80]
	006 Compare W8, 0
	007 JumpIfEqual {10}
	008 Move X30, [X31+16]
	009 Return 
	010 Move X8, [X2+32]
	011 Move X8, [X8+192]
	012 Move X2, [X8+112]
	013 Move X30, [X31+16]
	014 Call 0x24E1940, X0, X1
	015 Return 
	016 Call 0x1C17F20

Method: System.Void <Race>b__3(System.Exception ex)

Disassembly:
	0x0237C110 B 0x33BDD8C
	0x0237C114 STR X30, [X31 - 0x10]!
	0x0237C118 LDR X0, [X0 + 0x10]
	0x0237C11C CBZ X0, 0x237C12C
	0x0237C120 MOV X1, X31
	0x0237C124 LDR X30, [X31], #0x10
	0x0237C128 B 0x358EC6C
	0x0237C12C BL 0x1C16F20
	0x0237C130 STR X30, [X31 - 0x10]!
	0x0237C134 LDR X0, [X0 + 0x10]
	0x0237C138 CBZ X0, 0x237C148
	0x0237C13C MOV X1, X31
	0x0237C140 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {16}
	005 Move W8, [X0+80]
	006 Compare W8, 0
	007 JumpIfEqual {10}
	008 Move X30, [X31+16]
	009 Return 
	010 Move X8, [X2+32]
	011 Move X8, [X8+192]
	012 Move X2, [X8+120]
	013 Move X30, [X31+16]
	014 Call 0x24E17B0, X0, X1
	015 Return 
	016 Call 0x1C17F20

