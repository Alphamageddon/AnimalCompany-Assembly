Type: RSG.Promise`1

Method: System.Int32 get_Id()

Disassembly:
	0x024E0E5C LDR X8, [X8 + 0xC0]
	0x024E0E60 LDR X2, [X8 + 0xF0]

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.String get_Name()

Disassembly:
	0x024E0E64 BL 0x2A6B948
	0x024E0E68 LDR X8, [X20 + 0x20]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x024E0E6C MOV X0, X19
	0x024E0E70 MOV X1, X21

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: RSG.PromiseState get_CurState()

Disassembly:
	0x024E0E74 LDP X20, X19, [X31 + 0x20]
	0x024E0E78 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_CurState(RSG.PromiseState value)

Disassembly:
	0x024E0E7C LDP X22, X21, [X31 + 0x10]
	0x024E0E80 LDR X2, [X8 + 0xF8]

ISIL:
	001 Move [X0+80], W1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x024E0E84 LDR X30, [X31], #0x30
	0x024E0E88 B 0x24E0E94
	0x024E0E8C STR X1, [X0 + 0x48]
	0x024E0E90 RET
	0x024E0E94 STR X30, [X31 - 0x40]!
	0x024E0E98 STP X24, X23, [X31 + 0x10]
	0x024E0E9C STP X22, X21, [X31 + 0x20]
	0x024E0EA0 STP X20, X19, [X31 + 0x30]
	0x024E0EA4 ADRP X21, 0x1EF9000
	0x024E0EA8 LDRB W8, [X21 + 0xC1F]
	0x024E0EAC MOV X20, X2
	0x024E0EB0 MOV X22, X1
	0x024E0EB4 MOV X19, X0
	0x024E0EB8 TBNZ X8, 0x0, 0x24E0EE8
	0x024E0EBC ADRP X0, 0x1C15000
	0x024E0EC0 LDR X0, [X0 + 0x5B0]
	0x024E0EC4 BL 0x1C16CF4
	0x024E0EC8 ADRP X0, 0x1C16000
	0x024E0ECC LDR X0, [X0 + 0x2C8]
	0x024E0ED0 BL 0x1C16CF4
	0x024E0ED4 ADRP X0, 0x1C3B000
	0x024E0ED8 LDR X0, [X0 + 0x6C8]
	0x024E0EDC BL 0x1C16CF4
	0x024E0EE0 MOVZ W8, 0x1
	0x024E0EE4 STRB W8, [X21 + 0xC1F]
	0x024E0EE8 LDR X8, [X20 + 0x20]
	0x024E0EEC LDR X8, [X8 + 0xC0]
	0x024E0EF0 LDR X0, [X8 + 0x110]
	0x024E0EF4 LDRB W8, [X0 + 0x135]
	0x024E0EF8 TBNZ X8, 0x0, 0x24E0F00
	0x024E0EFC BL 0x1C5C684
	0x024E0F00 BL 0x1C16F10
	0x024E0F04 LDR X8, [X20 + 0x20]
	0x024E0F08 MOV X21, X0
	0x024E0F0C LDR X8, [X8 + 0xC0]
	0x024E0F10 LDR X1, [X8 + 0x118]
	0x024E0F14 BL 0x2374F8C
	0x024E0F18 CBZ X21, 0x24E1038
	0x024E0F1C ADRP X8, 0x1C3B000
	0x024E0F20 LDR X8, [X8 + 0x6C8]
	0x024E0F24 STR X22, [X21 + 0x18]
	0x024E0F28 LDR X0, [X8]
	0x024E0F2C BL 0x1C16F10
	0x024E0F30 MOV X1, X31
	0x024E0F34 MOV X22, X0
	0x024E0F38 BL 0x358D56C
	0x024E0F3C STR X22, [X21 + 0x10]
	0x024E0F40 CBZ X22, 0x24E1038
	0x024E0F44 LDR X1, [X19 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1EFA000
	006 Move X20, 0x1C3C000
	007 Move W8, [X21+3090]
	008 Move X20, [X20+1736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1C3D000
	015 Move X0, [X0+3896]
	016 Call 0x1C17CF4
	017 Move X0, 0x1C3C000
	018 Move X0, [X0+1736]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3090], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call Object..ctor, X0
	025 Move [X19+80], W31
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call Promise.NextId
	033 Move [X19+64], W0
	034 Move X0, [X20]
	035 Move X8, [X0+184]
	036 Move W9, [X8]
	037 Compare W9, 0
	038 JumpIfEqual {58}
	039 Move W9, [X0+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Call 0x1C17DFC
	043 Move X8, [X20]
	044 Move X8, [X8+184]
	045 Move X0, [X8+24]
	046 Compare X0, 0
	047 JumpIfEqual {63}
	048 Move X8, 0x1C3D000
	049 Move X8, [X8+3896]
	050 Move X1, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X2, [X8]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call HashSet`1<Object>.Add, X0, X1
	057 Return 
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 
	063 Call 0x1C17F20

Method: System.Void .ctor(System.Action`2<System.Action`1<PromisedT>, System.Action`1<System.Exception>> resolver)

Disassembly:
	0x024E0F48 ADRP X23, 0x1C16000
	0x024E0F4C ADRP X24, 0x1C15000
	0x024E0F50 LDR X23, [X23 + 0x2C8]
	0x024E0F54 LDR X24, [X24 + 0x5B0]
	0x024E0F58 MOV X0, X22
	0x024E0F5C MOV X2, X31
	0x024E0F60 BL 0x358F32C
	0x024E0F64 LDR X8, [X20 + 0x20]
	0x024E0F68 LDR X8, [X8 + 0xC0]
	0x024E0F6C LDR X0, [X8 + 0x20]
	0x024E0F70 LDRB W8, [X0 + 0x135]
	0x024E0F74 TBNZ X8, 0x0, 0x24E0F7C
	0x024E0F78 BL 0x1C5C684
	0x024E0F7C BL 0x1C16F10
	0x024E0F80 LDR X8, [X20 + 0x20]
	0x024E0F84 MOV X1, X21
	0x024E0F88 MOV X22, X0
	0x024E0F8C LDR X8, [X8 + 0xC0]
	0x024E0F90 LDR X2, [X8 + 0x128]
	0x024E0F94 LDR X3, [X8 + 0x28]
	0x024E0F98 BL 0x2A6B948
	0x024E0F9C LDR X0, [X23]
	0x024E0FA0 BL 0x1C16F10
	0x024E0FA4 LDR X8, [X20 + 0x20]
	0x024E0FA8 MOV X1, X21
	0x024E0FAC MOV X3, X31
	0x024E0FB0 MOV X23, X0
	0x024E0FB4 LDR X8, [X8 + 0xC0]
	0x024E0FB8 LDR X2, [X8 + 0x130]
	0x024E0FBC BL 0x2A6B948
	0x024E0FC0 LDR X8, [X20 + 0x20]
	0x024E0FC4 LDR X1, [X21 + 0x10]
	0x024E0FC8 MOV X0, X19
	0x024E0FCC MOV X2, X22
	0x024E0FD0 LDR X8, [X8 + 0xC0]
	0x024E0FD4 MOV X3, X23
	0x024E0FD8 LDR X4, [X8 + 0x138]
	0x024E0FDC BL 0x24E1534
	0x024E0FE0 LDR X0, [X24]
	0x024E0FE4 LDR X22, [X21 + 0x10]
	0x024E0FE8 BL 0x1C16F10
	0x024E0FEC LDR X8, [X20 + 0x20]
	0x024E0FF0 MOV X1, X21
	0x024E0FF4 MOV X3, X31
	0x024E0FF8 MOV X20, X0
	0x024E0FFC LDR X8, [X8 + 0xC0]
	0x024E1000 LDR X2, [X8 + 0x140]
	0x024E1004 BL 0x2A6DA40
	0x024E1008 LDR W8, [X19 + 0x50]
	0x024E100C CBNZ W8, 0x24E1020
	0x024E1010 MOV X0, X19
	0x024E1014 MOV X1, X20
	0x024E1018 MOV X2, X22
	0x024E101C BL 0x24E03E8
	0x024E1020 LDR X0, [X21 + 0x10]
	0x024E1024 LDP X20, X19, [X31 + 0x30]
	0x024E1028 LDP X22, X21, [X31 + 0x20]
	0x024E102C LDP X24, X23, [X31 + 0x10]
	0x024E1030 LDR X30, [X31], #0x40
	0x024E1034 RET
	0x024E1038 BL 0x1C16F20
	0x024E103C STR X30, [X31 - 0x40]!
	0x024E1040 STP X24, X23, [X31 + 0x10]
	0x024E1044 STP X22, X21, [X31 + 0x20]
	0x024E1048 STP X20, X19, [X31 + 0x30]
	0x024E104C ADRP X21, 0x1EF8000
	0x024E1050 LDRB W8, [X21 + 0xC20]
	0x024E1054 MOV X20, X2
	0x024E1058 MOV X22, X1
	0x024E105C MOV X19, X0
	0x024E1060 TBNZ X8, 0x0, 0x24E1084
	0x024E1064 ADRP X0, 0x1C14000
	0x024E1068 LDR X0, [X0 + 0x5B0]
	0x024E106C BL 0x1C16CF4
	0x024E1070 ADRP X0, 0x1C15000
	0x024E1074 LDR X0, [X0 + 0x2C8]
	0x024E1078 BL 0x1C16CF4
	0x024E107C MOVZ W8, 0x1
	0x024E1080 STRB W8, [X21 + 0xC20]
	0x024E1084 LDR X8, [X20 + 0x20]
	0x024E1088 LDR X8, [X8 + 0xC0]
	0x024E108C LDR X0, [X8 + 0x150]
	0x024E1090 LDRB W8, [X0 + 0x135]
	0x024E1094 TBNZ X8, 0x0, 0x24E109C
	0x024E1098 BL 0x1C5C684
	0x024E109C BL 0x1C16F10
	0x024E10A0 LDR X8, [X20 + 0x20]
	0x024E10A4 MOV X21, X0
	0x024E10A8 LDR X8, [X8 + 0xC0]
	0x024E10AC LDR X1, [X8 + 0x158]
	0x024E10B0 BL 0x2375DD8
	0x024E10B4 CBZ X21, 0x24E11E0
	0x024E10B8 STR X22, [X21 + 0x18]
	0x024E10BC LDR X8, [X20 + 0x20]
	0x024E10C0 LDR X8, [X8 + 0xC0]
	0x024E10C4 LDR X0, [X8]
	0x024E10C8 LDRB W8, [X0 + 0x135]
	0x024E10CC TBNZ X8, 0x0, 0x24E10D4
	0x024E10D0 BL 0x1C5C684
	0x024E10D4 BL 0x1C16F10
	0x024E10D8 LDR X8, [X20 + 0x20]
	0x024E10DC MOV X22, X0
	0x024E10E0 LDR X8, [X8 + 0xC0]
	0x024E10E4 LDR X1, [X8 + 0x168]
	0x024E10E8 BL 0x24DFE84
	0x024E10EC STR X22, [X21 + 0x10]
	0x024E10F0 CBZ X22, 0x24E11E0
	0x024E10F4 LDR X8, [X20 + 0x20]
	0x024E10F8 LDR X9, [X19 + 0x48]
	0x024E10FC ADRP X23, 0x1C15000
	0x024E1100 ADRP X24, 0x1C14000
	0x024E1104 LDR X8, [X8 + 0xC0]
	0x024E1108 STR X9, [X22 + 0x48]
	0x024E110C LDR X0, [X8 + 0x20]
	0x024E1110 LDRB W8, [X0 + 0x135]
	0x024E1114 LDR X23, [X23 + 0x2C8]
	0x024E1118 LDR X24, [X24 + 0x5B0]
	0x024E111C TBNZ X8, 0x0, 0x24E1124
	0x024E1120 BL 0x1C5C684
	0x024E1124 BL 0x1C16F10
	0x024E1128 LDR X8, [X20 + 0x20]
	0x024E112C MOV X1, X21
	0x024E1130 MOV X22, X0
	0x024E1134 LDR X8, [X8 + 0xC0]
	0x024E1138 LDR X2, [X8 + 0x178]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1EFA000
	008 Move X22, 0x1C3C000
	009 Move W8, [X23+3091]
	010 Move X22, [X22+1736]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x1C17000
	019 Move X0, [X0+712]
	020 Call 0x1C17CF4
	021 Move X0, 0x1C3D000
	022 Move X0, [X0+3896]
	023 Call 0x1C17CF4
	024 Move X0, 0x1C3C000
	025 Move X0, [X0+1736]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+3091], W8
	029 Move X0, X19
	030 Move X1, X31
	031 Call Object..ctor, X0
	032 Move [X19+80], W31
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X31
	039 Call Promise.NextId
	040 Move [X19+64], W0
	041 Move X0, [X22]
	042 Move X8, [X0+184]
	043 Move W9, [X8]
	044 Compare W9, 0
	045 JumpIfEqual {60}
	046 Move W9, [X0+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {52}
	049 Call 0x1C17DFC
	050 Move X8, [X22]
	051 Move X8, [X8+184]
	052 Move X0, [X8+24]
	053 Compare X0, 0
	054 JumpIfEqual {104}
	055 Move X8, 0x1C3D000
	056 Move X8, [X8+3896]
	057 Move X1, X19
	058 Move X2, [X8]
	059 Call HashSet`1<Object>.Add, X0, X1
	060 Move X8, [X20+32]
	061 Move X8, [X8+192]
	062 Move X0, [X8+32]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Call 0x1C17F10
	070 Move X8, [X20+32]
	071 Move X9, [X19]
	072 Move X22, X0
	073 Move X8, [X8+192]
	074 Move X2, [X9+800]
	075 Move X3, [X8+40]
	076 Move X1, X19
	077 Call Action`1<Object>..ctor, X0, X1, X2
	078 Move X8, 0x1C16000
	079 Move X8, [X8+712]
	080 Move X0, [X8]
	081 Call 0x1C17F10
	082 Move X8, [X19]
	083 Move X23, X0
	084 Move X2, [X8+832]
	085 Move X1, X19
	086 Move X3, X31
	087 Call Action`1<Object>..ctor, X0, X1, X2
	088 Compare X21, 0
	089 JumpIfEqual {103}
	090 Move X0, [X21+64]
	091 Move X8, [X21+24]
	092 Move X3, [X21+40]
	093 Move X1, X22
	094 Move X2, X23
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Move X23, [X31+56]
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x1C17F20
	105 Move X21, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, X21
	108 Call 0x3EB2AD0
	109 Move X21, X0
	110 Move X0, 0x1C13000
	111 Move X0, [X0+2000]
	112 Call 0x1C17D08
	113 Move X8, [X21]
	114 Move X1, [X8]
	115 Call 0x1C18270
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {135}
	120 Move X21, [X21]
	121 Call 0x3EB2AE0
	122 Move X8, [X20+32]
	123 Move X0, X19
	124 Move X1, X21
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X8, [X8+192]
	128 Move X22, [X31+16]
	129 Move X21, [X31+24]
	130 Move X2, [X8+48]
	131 Move X30, [X31+48]
	132 Move X23, [X31+56]
	133 Call 0x24E17B0, X0, X1
	134 Return 
	135 Move W0, 8
	136 Call 0x3EB2AF0
	137 Move X8, [X21]
	138 Move [X0], X8
	139 Move X1, 0x19D4000
	140 Add X1, X1, 3672
	141 Move X2, X31
	142 Call 0x3EB2B00
	143 Move X21, X0
	144 Call 0x3EB2AE0
	145 Move X0, X21
	146 Call 0x1D2D690
	147 Call 0x1991590

Method: System.Void AddRejectHandler(System.Action`1<System.Exception> onRejected, RSG.IRejectable rejectable)

Disassembly:
	0x024E113C LDR X3, [X8 + 0x28]
	0x024E1140 BL 0x2A6B948
	0x024E1144 LDR X0, [X23]
	0x024E1148 BL 0x1C16F10
	0x024E114C LDR X8, [X20 + 0x20]
	0x024E1150 MOV X1, X21
	0x024E1154 MOV X3, X31
	0x024E1158 MOV X23, X0
	0x024E115C LDR X8, [X8 + 0xC0]
	0x024E1160 LDR X2, [X8 + 0x180]
	0x024E1164 BL 0x2A6B948
	0x024E1168 LDR X8, [X20 + 0x20]
	0x024E116C LDR X1, [X21 + 0x10]
	0x024E1170 MOV X0, X19
	0x024E1174 MOV X2, X22
	0x024E1178 LDR X8, [X8 + 0xC0]
	0x024E117C MOV X3, X23
	0x024E1180 LDR X4, [X8 + 0x138]
	0x024E1184 BL 0x24E1534
	0x024E1188 LDR X0, [X24]
	0x024E118C LDR X22, [X21 + 0x10]
	0x024E1190 BL 0x1C16F10
	0x024E1194 LDR X8, [X20 + 0x20]
	0x024E1198 MOV X1, X21
	0x024E119C MOV X3, X31
	0x024E11A0 MOV X20, X0
	0x024E11A4 LDR X8, [X8 + 0xC0]
	0x024E11A8 LDR X2, [X8 + 0x188]
	0x024E11AC BL 0x2A6DA40
	0x024E11B0 LDR W8, [X19 + 0x50]
	0x024E11B4 CBNZ W8, 0x24E11C8
	0x024E11B8 MOV X0, X19
	0x024E11BC MOV X1, X20
	0x024E11C0 MOV X2, X22
	0x024E11C4 BL 0x24E03E8
	0x024E11C8 LDR X0, [X21 + 0x10]
	0x024E11CC LDP X20, X19, [X31 + 0x30]
	0x024E11D0 LDP X22, X21, [X31 + 0x20]
	0x024E11D4 LDP X24, X23, [X31 + 0x10]
	0x024E11D8 LDR X30, [X31], #0x40
	0x024E11DC RET
	0x024E11E0 BL 0x1C16F20
	0x024E11E4 LDR X8, [X2 + 0x20]
	0x024E11E8 MOV X2, X31
	0x024E11EC MOV X3, X31
	0x024E11F0 LDR X8, [X8 + 0xC0]
	0x024E11F4 LDR X4, [X8 + 0x198]
	0x024E11F8 B 0x24E123C
	0x024E11FC LDR X8, [X2 + 0x20]
	0x024E1200 MOV X2, X31
	0x024E1204 MOV X3, X31
	0x024E1208 LDR X8, [X8 + 0xC0]
	0x024E120C LDR X4, [X8 + 0x1A0]
	0x024E1210 B 0x24E13B8
	0x024E1214 LDR X8, [X3 + 0x20]
	0x024E1218 MOV X3, X31
	0x024E121C LDR X8, [X8 + 0xC0]
	0x024E1220 LDR X4, [X8 + 0x198]
	0x024E1224 B 0x24E123C
	0x024E1228 LDR X8, [X3 + 0x20]
	0x024E122C MOV X3, X31
	0x024E1230 LDR X8, [X8 + 0xC0]
	0x024E1234 LDR X4, [X8 + 0x1A0]
	0x024E1238 B 0x24E13B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1EF9000
	007 Move W8, [X21+3092]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1C3C000
	016 Move X0, [X0+3904]
	017 Call 0x1C17CF4
	018 Move X0, 0x1C3C000
	019 Move X0, [X0+3912]
	020 Call 0x1C17CF4
	021 Move X0, 0x1C3C000
	022 Move X0, [X0+3920]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3092], W8
	026 Move X21, [X22+32]
	027 Compare X21, 0
	028 JumpIfNotEqual {41}
	029 Move X8, 0x1C3C000
	030 Move X8, [X8+3920]
	031 Move X0, [X8]
	032 Call 0x1C17F10
	033 Move X8, 0x1C3C000
	034 Move X8, [X8+3912]
	035 Move X21, X0
	036 Move X1, [X8]
	037 Call List`1<RejectHandler>..ctor, X0
	038 Move [X22+32], X21
	039 Compare X21, 0
	040 JumpIfEqual {77}
	041 Move X9, 0x1C3C000
	042 Move X9, [X9+3904]
	043 Move W10, [X21+28]
	044 Move X8, [X21+16]
	045 Move X9, [X9]
	046 Add W10, W10, 1
	047 Move [X21+28], W10
	048 Compare X8, 0
	049 JumpIfEqual {77}
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Move W11, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W9, W10, 1
	054 Add X8, X8, X10
	055 Move [X21+24], W9
	056 Move [X8+32], X20
	057 Move [X8+40], X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return 
	064 Move X8, [X9+32]
	065 Move X0, X21
	066 Move X1, X20
	067 Move X2, X19
	068 Move X8, [X8+192]
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X3, [X8+112]
	074 Move X30, [X31+48]
	075 Call List`1<RejectHandler>.AddWithResize, X0, X1
	076 Return 
	077 Call 0x1C17F20

Method: System.Void AddResolveHandler(System.Action`1<PromisedT> onResolved, RSG.IRejectable rejectable)

Disassembly:
	0x024E123C STR X30, [X31 - 0x40]!
	0x024E1240 STP X24, X23, [X31 + 0x10]
	0x024E1244 STP X22, X21, [X31 + 0x20]
	0x024E1248 STP X20, X19, [X31 + 0x30]
	0x024E124C ADRP X22, 0x1EF8000
	0x024E1250 LDRB W8, [X22 + 0xC21]
	0x024E1254 MOV X21, X4
	0x024E1258 MOV X19, X3
	0x024E125C MOV X23, X2
	0x024E1260 MOV X24, X1
	0x024E1264 MOV X20, X0
	0x024E1268 TBNZ X8, 0x0, 0x24E128C
	0x024E126C ADRP X0, 0x1C15000
	0x024E1270 LDR X0, [X0 + 0x2C8]
	0x024E1274 BL 0x1C16CF4
	0x024E1278 ADRP X0, 0x1C3A000
	0x024E127C LDR X0, [X0 + 0x6C8]
	0x024E1280 BL 0x1C16CF4
	0x024E1284 MOVZ W8, 0x1
	0x024E1288 STRB W8, [X22 + 0xC21]
	0x024E128C LDR X8, [X21 + 0x20]
	0x024E1290 LDR X8, [X8 + 0xC0]
	0x024E1294 LDR X0, [X8 + 0x1A8]
	0x024E1298 LDRB W8, [X0 + 0x135]
	0x024E129C TBNZ X8, 0x0, 0x24E12A4
	0x024E12A0 BL 0x1C5C684
	0x024E12A4 BL 0x1C16F10
	0x024E12A8 LDR X8, [X21 + 0x20]
	0x024E12AC MOV X22, X0
	0x024E12B0 LDR X8, [X8 + 0xC0]
	0x024E12B4 LDR X1, [X8 + 0x1B0]
	0x024E12B8 BL 0x2378808
	0x024E12BC CBZ X22, 0x24E13B4
	0x024E12C0 ADRP X8, 0x1C3A000
	0x024E12C4 LDR X8, [X8 + 0x6C8]
	0x024E12C8 STR X24, [X22 + 0x10]
	0x024E12CC STR X23, [X22 + 0x20]
	0x024E12D0 LDR X0, [X8]
	0x024E12D4 BL 0x1C16F10
	0x024E12D8 MOV X1, X31
	0x024E12DC MOV X23, X0
	0x024E12E0 BL 0x358D56C
	0x024E12E4 STR X23, [X22 + 0x18]
	0x024E12E8 CBZ X23, 0x24E13B4
	0x024E12EC LDR X1, [X20 + 0x48]
	0x024E12F0 ADRP X24, 0x1C15000
	0x024E12F4 LDR X24, [X24 + 0x2C8]
	0x024E12F8 MOV X0, X23
	0x024E12FC MOV X2, X31
	0x024E1300 BL 0x358F32C
	0x024E1304 LDR X8, [X21 + 0x20]
	0x024E1308 LDR X8, [X8 + 0xC0]
	0x024E130C LDR X0, [X8 + 0x20]
	0x024E1310 LDRB W8, [X0 + 0x135]
	0x024E1314 TBNZ X8, 0x0, 0x24E131C
	0x024E1318 BL 0x1C5C684
	0x024E131C BL 0x1C16F10
	0x024E1320 LDR X8, [X21 + 0x20]
	0x024E1324 MOV X1, X22
	0x024E1328 MOV X23, X0
	0x024E132C LDR X8, [X8 + 0xC0]
	0x024E1330 LDR X2, [X8 + 0x1B8]
	0x024E1334 LDR X3, [X8 + 0x28]
	0x024E1338 BL 0x2A6B948
	0x024E133C LDR X0, [X24]
	0x024E1340 BL 0x1C16F10
	0x024E1344 LDR X8, [X21 + 0x20]
	0x024E1348 MOV X1, X22
	0x024E134C MOV X3, X31
	0x024E1350 MOV X24, X0
	0x024E1354 LDR X8, [X8 + 0xC0]
	0x024E1358 LDR X2, [X8 + 0x1C0]
	0x024E135C BL 0x2A6B948
	0x024E1360 LDR X8, [X21 + 0x20]
	0x024E1364 LDR X1, [X22 + 0x18]
	0x024E1368 MOV X0, X20
	0x024E136C MOV X2, X23
	0x024E1370 LDR X8, [X8 + 0xC0]
	0x024E1374 MOV X3, X24
	0x024E1378 LDR X4, [X8 + 0x138]
	0x024E137C BL 0x24E1534
	0x024E1380 CBZ X19, 0x24E139C
	0x024E1384 LDR W8, [X20 + 0x50]
	0x024E1388 CBNZ W8, 0x24E139C
	0x024E138C MOV X0, X20
	0x024E1390 MOV X1, X19
	0x024E1394 MOV X2, X20
	0x024E1398 BL 0x24E03E8
	0x024E139C LDR X0, [X22 + 0x18]
	0x024E13A0 LDP X20, X19, [X31 + 0x30]
	0x024E13A4 LDP X22, X21, [X31 + 0x20]
	0x024E13A8 LDP X24, X23, [X31 + 0x10]
	0x024E13AC LDR X30, [X31], #0x40
	0x024E13B0 RET
	0x024E13B4 BL 0x1C16F20
	0x024E13B8 STR X30, [X31 - 0x40]!
	0x024E13BC STP X24, X23, [X31 + 0x10]
	0x024E13C0 STP X22, X21, [X31 + 0x20]
	0x024E13C4 STP X20, X19, [X31 + 0x30]
	0x024E13C8 ADRP X22, 0x1EF8000
	0x024E13CC LDRB W8, [X22 + 0xC22]
	0x024E13D0 MOV X21, X4
	0x024E13D4 MOV X19, X3
	0x024E13D8 MOV X23, X2
	0x024E13DC MOV X24, X1
	0x024E13E0 MOV X20, X0
	0x024E13E4 TBNZ X8, 0x0, 0x24E1408

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1EF9000
	009 Move W8, [X23+3093]
	010 Move X22, X3
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x1C3C000
	019 Move X0, [X0+3928]
	020 Call 0x1C17CF4
	021 Move X0, 0x1C3C000
	022 Move X0, [X0+3936]
	023 Call 0x1C17CF4
	024 Move X0, 0x1C3C000
	025 Move X0, [X0+3944]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+3093], W8
	029 Move X23, [X20+48]
	030 Compare X23, 0
	031 JumpIfNotEqual {48}
	032 Move X8, [X22+32]
	033 Move X8, [X8+192]
	034 Move X0, [X8+64]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Call 0x1C17F10
	042 Move X8, [X22+32]
	043 Move X23, X0
	044 Move X8, [X8+192]
	045 Move X1, [X8+72]
	046 Call List`1<Object>..ctor, X0
	047 Move [X20+48], X23
	048 Move X8, [X20+56]
	049 Compare X8, 0
	050 JumpIfNotEqual {62}
	051 Move X8, 0x1C3C000
	052 Move X8, [X8+3944]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X8, 0x1C3C000
	056 Move X8, [X8+3936]
	057 Move X24, X0
	058 Move X1, [X8]
	059 Call List`1<Object>..ctor, X0
	060 Move X23, [X20+48]
	061 Move [X20+56], X24
	062 Compare X23, 0
	063 JumpIfEqual {126}
	064 Move X8, [X22+32]
	065 Move W10, [X23+28]
	066 Move X9, [X8+192]
	067 Move X8, [X23+16]
	068 Add W10, W10, 1
	069 Move X9, [X9+80]
	070 Move [X23+28], W10
	071 Compare X8, 0
	072 JumpIfEqual {126}
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Move W11, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add W9, W10, 1
	077 Add X8, X8, X10
	078 Move [X23+24], W9
	079 Move [X8+32], X21
	080 Move X8, [X9+32]
	081 Move X0, X23
	082 Move X1, X21
	083 Move X8, [X8+192]
	084 Move X2, [X8+112]
	085 Call List`1<Object>.AddWithResize, X0, X1
	086 Move X0, [X20+56]
	087 Compare X0, 0
	088 JumpIfEqual {126}
	089 Move X9, 0x1C3C000
	090 Move X9, [X9+3928]
	091 Move W10, [X0+28]
	092 Move X8, [X0+16]
	093 Move X9, [X9]
	094 Add W10, W10, 1
	095 Move [X0+28], W10
	096 Compare X8, 0
	097 JumpIfEqual {126}
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Move W11, [X8+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add W9, W10, 1
	102 Add X8, X8, X10
	103 Move [X0+24], W9
	104 Move [X8+32], X19
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move X30, [X31+64]
	112 Return 
	113 Move X8, [X9+32]
	114 Move X1, X19
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X22, [X31+32]
	118 Move X21, [X31+40]
	119 Move X8, [X8+192]
	120 Move X24, [X31+16]
	121 Move X23, [X31+24]
	122 Move X2, [X8+112]
	123 Move X30, [X31+64]
	124 Call List`1<Object>.AddWithResize, X0, X1
	125 Return 
	126 Call 0x1C17F20

Method: System.Void AddProgressHandler(System.Action`1<System.Single> onProgress, RSG.IRejectable rejectable)

Disassembly:
	0x024E13E8 ADRP X0, 0x1C15000
	0x024E13EC LDR X0, [X0 + 0x2C8]
	0x024E13F0 BL 0x1C16CF4
	0x024E13F4 ADRP X0, 0x1C3A000
	0x024E13F8 LDR X0, [X0 + 0x6C8]
	0x024E13FC BL 0x1C16CF4
	0x024E1400 MOVZ W8, 0x1
	0x024E1404 STRB W8, [X22 + 0xC22]
	0x024E1408 LDR X8, [X21 + 0x20]
	0x024E140C LDR X8, [X8 + 0xC0]
	0x024E1410 LDR X0, [X8 + 0x1C8]
	0x024E1414 LDRB W8, [X0 + 0x135]
	0x024E1418 TBNZ X8, 0x0, 0x24E1420
	0x024E141C BL 0x1C5C684
	0x024E1420 BL 0x1C16F10
	0x024E1424 LDR X8, [X21 + 0x20]
	0x024E1428 MOV X22, X0
	0x024E142C LDR X8, [X8 + 0xC0]
	0x024E1430 LDR X1, [X8 + 0x1D0]
	0x024E1434 BL 0x2378E48
	0x024E1438 CBZ X22, 0x24E1530
	0x024E143C ADRP X8, 0x1C3A000
	0x024E1440 LDR X8, [X8 + 0x6C8]
	0x024E1444 STR X24, [X22 + 0x10]
	0x024E1448 STR X23, [X22 + 0x20]
	0x024E144C LDR X0, [X8]
	0x024E1450 BL 0x1C16F10
	0x024E1454 MOV X1, X31
	0x024E1458 MOV X23, X0
	0x024E145C BL 0x358D56C
	0x024E1460 STR X23, [X22 + 0x18]
	0x024E1464 CBZ X23, 0x24E1530
	0x024E1468 LDR X1, [X20 + 0x48]
	0x024E146C ADRP X24, 0x1C15000
	0x024E1470 LDR X24, [X24 + 0x2C8]
	0x024E1474 MOV X0, X23
	0x024E1478 MOV X2, X31
	0x024E147C BL 0x358F32C
	0x024E1480 LDR X8, [X21 + 0x20]
	0x024E1484 LDR X8, [X8 + 0xC0]
	0x024E1488 LDR X0, [X8 + 0x20]
	0x024E148C LDRB W8, [X0 + 0x135]
	0x024E1490 TBNZ X8, 0x0, 0x24E1498
	0x024E1494 BL 0x1C5C684
	0x024E1498 BL 0x1C16F10
	0x024E149C LDR X8, [X21 + 0x20]
	0x024E14A0 MOV X1, X22
	0x024E14A4 MOV X23, X0
	0x024E14A8 LDR X8, [X8 + 0xC0]
	0x024E14AC LDR X2, [X8 + 0x1D8]
	0x024E14B0 LDR X3, [X8 + 0x28]
	0x024E14B4 BL 0x2A6B948
	0x024E14B8 LDR X0, [X24]
	0x024E14BC BL 0x1C16F10
	0x024E14C0 LDR X8, [X21 + 0x20]
	0x024E14C4 MOV X1, X22
	0x024E14C8 MOV X3, X31
	0x024E14CC MOV X24, X0
	0x024E14D0 LDR X8, [X8 + 0xC0]
	0x024E14D4 LDR X2, [X8 + 0x1E0]
	0x024E14D8 BL 0x2A6B948
	0x024E14DC LDR X8, [X21 + 0x20]
	0x024E14E0 LDR X1, [X22 + 0x18]
	0x024E14E4 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1EF9000
	007 Move W8, [X21+3094]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1C3C000
	016 Move X0, [X0+3952]
	017 Call 0x1C17CF4
	018 Move X0, 0x1C3C000
	019 Move X0, [X0+3960]
	020 Call 0x1C17CF4
	021 Move X0, 0x1C3C000
	022 Move X0, [X0+3968]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3094], W8
	026 Move X21, [X22+40]
	027 Compare X21, 0
	028 JumpIfNotEqual {41}
	029 Move X8, 0x1C3C000
	030 Move X8, [X8+3968]
	031 Move X0, [X8]
	032 Call 0x1C17F10
	033 Move X8, 0x1C3C000
	034 Move X8, [X8+3960]
	035 Move X21, X0
	036 Move X1, [X8]
	037 Call List`1<ProgressHandler>..ctor, X0
	038 Move [X22+40], X21
	039 Compare X21, 0
	040 JumpIfEqual {77}
	041 Move X9, 0x1C3C000
	042 Move X9, [X9+3952]
	043 Move W10, [X21+28]
	044 Move X8, [X21+16]
	045 Move X9, [X9]
	046 Add W10, W10, 1
	047 Move [X21+28], W10
	048 Compare X8, 0
	049 JumpIfEqual {77}
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Move W11, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W9, W10, 1
	054 Add X8, X8, X10
	055 Move [X21+24], W9
	056 Move [X8+32], X20
	057 Move [X8+40], X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return 
	064 Move X8, [X9+32]
	065 Move X0, X21
	066 Move X1, X20
	067 Move X2, X19
	068 Move X8, [X8+192]
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X3, [X8+112]
	074 Move X30, [X31+48]
	075 Call List`1<ProgressHandler>.AddWithResize, X0, X1
	076 Return 
	077 Call 0x1C17F20

Method: System.Void InvokeHandler(System.Action`1<T> callback, RSG.IRejectable rejectable, T value)

Disassembly:
	0x02135454 BL 0x3395194
	0x02135458 TBNZ X0, 0x0, 0x2135650
	0x0213545C ADRP X8, 0x1FBE000
	0x02135460 LDR X8, [X8 + 0xAC8]
	0x02135464 MOVZ W1, 0x9
	0x02135468 LDR X0, [X8]
	0x0213546C BL 0x1C16D6C
	0x02135470 CBZ X0, 0x213567C
	0x02135474 LDR W8, [X0 + 0x18]
	0x02135478 MOV X21, X0
	0x0213547C CBZ W8, 0x2135680
	0x02135480 ADRP X8, 0x1FE6000
	0x02135484 LDR X8, [X8 + 0x710]
	0x02135488 LDR X8, [X8]
	0x0213548C STR X8, [X21 + 0x20]
	0x02135490 LDR X8, [X20 + 0x20]
	0x02135494 LDR X0, [X25]
	0x02135498 LDR X8, [X8 + 0xC0]
	0x0213549C LDR W9, [X0 + 0xE0]
	0x021354A0 LDR X22, [X8 + 0x20]
	0x021354A4 CBNZ W9, 0x21354AC
	0x021354A8 BL 0x1C16DFC
	0x021354AC MOV X0, X22
	0x021354B0 MOV X1, X31
	0x021354B4 BL 0x338C698
	0x021354B8 ADRP X8, 0x1FE6000
	0x021354BC LDR X8, [X8 + 0x6E8]
	0x021354C0 MOV X22, X0
	0x021354C4 LDR X8, [X8]
	0x021354C8 LDR W9, [X8 + 0xE0]
	0x021354CC CBNZ W9, 0x21354D8
	0x021354D0 MOV X0, X8
	0x021354D4 BL 0x1C16DFC
	0x021354D8 MOV X0, X22
	0x021354DC MOV X1, X31
	0x021354E0 BL 0x3C917DC
	0x021354E4 LDR W8, [X21 + 0x18]
	0x021354E8 CMP W8, 0x1
	0x021354EC B.LS 0x2135680
	0x021354F0 CMP W8, 0x2
	0x021354F4 STR X0, [X21 + 0x28]
	0x021354F8 B.EQ 0x2135680
	0x021354FC ADRP X8, 0x1FE6000
	0x02135500 LDR X8, [X8 + 0x708]
	0x02135504 MOV X0, X19
	0x02135508 LDR X8, [X8]
	0x0213550C STR X8, [X21 + 0x30]
	0x02135510 LDR X8, [X19]
	0x02135514 LDP X9, X1, [X8 + 0x1A8]
	0x02135518 BLR X9
	0x0213551C LDR W8, [X21 + 0x18]
	0x02135520 CMP W8, 0x3
	0x02135524 B.LS 0x2135680
	0x02135528 CMP W8, 0x4
	0x0213552C STR X0, [X21 + 0x38]
	0x02135530 B.EQ 0x2135680
	0x02135534 ADRP X8, 0x1FE6000
	0x02135538 LDR X8, [X8 + 0x6F0]
	0x0213553C LDR X8, [X8]
	0x02135540 STR X8, [X21 + 0x40]
	0x02135544 LDUR X22, [X29 - 0x10]
	0x02135548 CBZ X22, 0x213567C
	0x0213554C LDR X8, [X22]
	0x02135550 LDR X1, [X23]
	0x02135554 LDRH W9, [X8 + 0x12E]
	0x02135558 CBZ X9, 0x213557C
	0x0213555C LDR X10, [X8 + 0xB0]
	0x02135560 ADD X10, X10, 0x8
	0x02135564 LDUR X11, [X10 - 0x8]
	0x02135568 CMP X11, X1
	0x0213556C B.EQ 0x213558C
	0x02135570 SUBS X9, X9, 0x1
	0x02135574 ADD X10, X10, 0x10
	0x02135578 B.NE 0x2135564
	0x0213557C MOV X0, X22
	0x02135580 MOV W2, W31
	0x02135584 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X4+56]
	006 Move X20, X3
	007 Move X19, X2
	008 Move X21, X1
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X4
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {25}
	015 Move X0, [X21+64]
	016 Move X8, [X21+24]
	017 Move X2, [X21+40]
	018 Move X1, X20
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return 
	025 Call 0x1C17F20
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X20, X0
	028 Move X0, X20
	029 Call 0x3EB2AD0
	030 Move X20, X0
	031 Move X0, 0x1FBF000
	032 Move X0, [X0+2000]
	033 Call 0x1C17D08
	034 Move X8, [X20]
	035 Move X1, [X8]
	036 Call 0x1C18270
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {74}
	041 Move X20, [X20]
	042 Call 0x3EB2AE0
	043 Compare X19, 0
	044 JumpIfEqual {82}
	045 Move X0, 0x1FE7000
	046 Move X0, [X0+1728]
	047 Call 0x1C17D08
	048 Move X8, [X19]
	049 Move X1, X0
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X19
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X3, [X0]
	066 Move X2, [X0+8]
	067 Move X0, X19
	068 Move X1, X20
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 CallNoReturn X3
	074 Move W0, 8
	075 Call 0x3EB2AF0
	076 Move X8, [X20]
	077 Move [X0], X8
	078 Move X1, 0x1D80000
	079 Add X1, X1, 3672
	080 Move X2, X31
	081 Call 0x3EB2B00
	082 Call 0x1C17F20
	083 Move X20, X0
	084 Call 0x3EB2AE0
	085 Move X0, X20
	086 Call 0x1D2D690
	087 Call 0x1991590

Method: System.Void ClearHandlers()

Disassembly:
	0x024E14E8 MOV X2, X23
	0x024E14EC LDR X8, [X8 + 0xC0]
	0x024E14F0 MOV X3, X24

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X0+32], V0
	003 Move [X0+40], V0
	004 Return 

Method: System.Void InvokeRejectHandlers(System.Exception ex)

Disassembly:
	0x024E14F4 LDR X4, [X8 + 0x138]
	0x024E14F8 BL 0x24E1534
	0x024E14FC CBZ X19, 0x24E1518
	0x024E1500 LDR W8, [X20 + 0x50]
	0x024E1504 CBNZ W8, 0x24E1518
	0x024E1508 MOV X0, X20
	0x024E150C MOV X1, X19
	0x024E1510 MOV X2, X20
	0x024E1514 BL 0x24E03E8
	0x024E1518 LDR X0, [X22 + 0x18]
	0x024E151C LDP X20, X19, [X31 + 0x30]
	0x024E1520 LDP X22, X21, [X31 + 0x20]
	0x024E1524 LDP X24, X23, [X31 + 0x10]
	0x024E1528 LDR X30, [X31], #0x40
	0x024E152C RET
	0x024E1530 BL 0x1C16F20
	0x024E1534 STP X30, X21, [X31 - 0x20]!
	0x024E1538 STP X20, X19, [X31 + 0x10]
	0x024E153C LDR X8, [X4 + 0x20]
	0x024E1540 LDR W9, [X0 + 0x50]
	0x024E1544 MOV X19, X3
	0x024E1548 MOV X21, X0
	0x024E154C LDR X8, [X8 + 0xC0]
	0x024E1550 CMP W9, 0x1
	0x024E1554 MOV X20, X1
	0x024E1558 B.EQ 0x24E1578
	0x024E155C CMP W9, 0x2
	0x024E1560 B.NE 0x24E1598
	0x024E1564 LDR X3, [X21 + 0x18]
	0x024E1568 LDR X4, [X8 + 0x90]
	0x024E156C MOV X0, X21
	0x024E1570 MOV X1, X2
	0x024E1574 B 0x24E1588
	0x024E1578 LDR X3, [X21 + 0x10]
	0x024E157C LDR X4, [X8 + 0x1E8]
	0x024E1580 MOV X0, X21
	0x024E1584 MOV X1, X19
	0x024E1588 MOV X2, X20
	0x024E158C LDP X20, X19, [X31 + 0x10]
	0x024E1590 LDP X30, X21, [X31], #0x20
	0x024E1594 B 0x2134454
	0x024E1598 LDR X3, [X8 + 0x1F0]
	0x024E159C MOV X0, X21
	0x024E15A0 MOV X1, X2
	0x024E15A4 MOV X2, X20
	0x024E15A8 BL 0x24E023C
	0x024E15AC MOV X1, X19
	0x024E15B0 MOV X2, X20
	0x024E15B4 LDP X20, X19, [X31 + 0x10]
	0x024E15B8 MOV X0, X21
	0x024E15BC LDP X30, X21, [X31], #0x20
	0x024E15C0 B 0x24E013C
	0x024E15C4 LDR W9, [X0 + 0x50]
	0x024E15C8 CBZ W9, 0x24E15D0
	0x024E15CC RET
	0x024E15D0 MOV X8, X1
	0x024E15D4 MOV X1, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1EF9000
	008 Move W8, [X22+3095]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1C3C000
	017 Move X0, [X0+3976]
	018 Call 0x1C17CF4
	019 Move X0, 0x1C3C000
	020 Move X0, [X0+3984]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3095], W8
	024 Move X8, [X20+32]
	025 Move X8, [X8+192]
	026 Move X0, [X8+88]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Call 0x1C17F10
	034 Move X8, [X20+32]
	035 Move X22, X0
	036 Move X8, [X8+192]
	037 Move X1, [X8+96]
	038 Call 0x237428C, X0
	039 Compare X22, 0
	040 JumpIfEqual {74}
	041 Move [X22+16], X19
	042 Move [X22+24], X21
	043 Add X19, X19, 32
	044 Move X21, [X19]
	045 Compare X21, 0
	046 JumpIfEqual {64}
	047 Move X8, 0x1C3C000
	048 Move X8, [X8+3976]
	049 Move X23, 0x1C3C000
	050 Move X0, [X8]
	051 Move X23, [X23+3984]
	052 Call 0x1C17F10
	053 Move X8, [X20+32]
	054 Move X1, X22
	055 Move X3, X31
	056 Move X20, X0
	057 Move X8, [X8+192]
	058 Move X2, [X8+104]
	059 Call Action`1<RejectHandler>..ctor, X0, X1, X2
	060 Move X2, [X23]
	061 Move X0, X21
	062 Move X1, X20
	063 Call EnumerableExt.Each, X0, X1
	064 NotImplemented "Instruction MOVI not yet implemented."
	065 Move [X19], V0
	066 Move [X19+8], V0
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Return 
	074 Call 0x1C17F20

Method: System.Void InvokeResolveHandlers(PromisedT value)

Disassembly:
	0x024E15D8 MOV X2, X8
	0x024E15DC B 0x24E03E8
	0x024E15E0 STR X30, [X31 - 0x30]!
	0x024E15E4 STP X22, X21, [X31 + 0x10]
	0x024E15E8 STP X20, X19, [X31 + 0x20]
	0x024E15EC LDR X8, [X2 + 0x20]
	0x024E15F0 MOV X19, X2
	0x024E15F4 MOV X22, X1
	0x024E15F8 MOV X20, X0
	0x024E15FC LDR X8, [X8 + 0xC0]
	0x024E1600 LDR X8, [X8 + 0x208]
	0x024E1604 LDRB W9, [X8 + 0x135]
	0x024E1608 TBNZ X9, 0x0, 0x24E1618
	0x024E160C MOV X0, X8
	0x024E1610 BL 0x1C5C684
	0x024E1614 MOV X8, X0
	0x024E1618 MOV X0, X8
	0x024E161C BL 0x1C16F10
	0x024E1620 LDR X8, [X19 + 0x20]
	0x024E1624 MOV X21, X0
	0x024E1628 LDR X8, [X8 + 0xC0]
	0x024E162C LDR X1, [X8 + 0x210]
	0x024E1630 BL 0x2379264
	0x024E1634 CBZ X21, 0x24E16AC
	0x024E1638 STR X22, [X21 + 0x10]
	0x024E163C LDR X8, [X19 + 0x20]
	0x024E1640 LDR X8, [X8 + 0xC0]
	0x024E1644 LDR X0, [X8 + 0x190]
	0x024E1648 LDRB W8, [X0 + 0x135]
	0x024E164C TBNZ X8, 0x0, 0x24E1654
	0x024E1650 BL 0x1C5C684
	0x024E1654 BL 0x1C16F10
	0x024E1658 LDR X8, [X19 + 0x20]
	0x024E165C MOV X1, X21
	0x024E1660 MOV X22, X0
	0x024E1664 LDR X8, [X8 + 0xC0]
	0x024E1668 LDR X2, [X8 + 0x220]
	0x024E166C LDR X3, [X8 + 0x228]
	0x024E1670 BL 0x2D30578
	0x024E1674 LDR X8, [X19 + 0x20]
	0x024E1678 MOV X0, X20
	0x024E167C MOV X1, X22
	0x024E1680 LDP X20, X19, [X31 + 0x20]
	0x024E1684 LDR X8, [X8 + 0xC0]
	0x024E1688 LDP X22, X21, [X31 + 0x10]
	0x024E168C MOV X2, X31
	0x024E1690 MOV X3, X31
	0x024E1694 LDR X8, [X8 + 0x230]
	0x024E1698 LDR X8, [X8 + 0x20]
	0x024E169C LDR X8, [X8 + 0xC0]
	0x024E16A0 LDR X4, [X8 + 0x198]
	0x024E16A4 LDR X30, [X31], #0x30
	0x024E16A8 B 0x24E123C
	0x024E16AC BL 0x1C16F20
	0x024E16B0 STP X30, X19, [X31 - 0x10]!
	0x024E16B4 LDR X8, [X1 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x1EF9000
	010 Move W8, [X22+3096]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1C3C000
	019 Move X0, [X0+3992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3096], W8
	023 Move X0, [X21+48]
	024 Compare X0, 0
	025 JumpIfEqual {58}
	026 Move W8, [X0+24]
	027 Subtract W24, W8, 1
	028 Move X25, 0x1C3C000
	029 Move X25, [X25+3992]
	030 Move W22, W31
	031 Move X8, [X19+32]
	032 Move W1, W22
	033 Move X8, [X8+192]
	034 Move X2, [X8+128]
	035 Call List`1<Object>.get_Item, X0, X1
	036 Move X8, [X21+56]
	037 Compare X8, 0
	038 JumpIfEqual {57}
	039 Move X2, [X25]
	040 Move X23, X0
	041 Move X0, X8
	042 Move W1, W22
	043 Call List`1<Object>.get_Item, X0, X1
	044 Move X8, [X19+32]
	045 Move X2, X0
	046 Move X0, X21
	047 Move X1, X23
	048 Move X8, [X8+192]
	049 Move X3, X20
	050 Move X4, [X8+144]
	051 Call 0x2135454, X0, X1, X2, X3
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X21+48]
	054 Add W22, W22, 1
	055 Compare X0, 0
	056 JumpIfNotEqual {31}
	057 Call 0x1C17F20
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 Move [X21+32], V0
	060 Move [X21+40], V0
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Move X25, [X31+72]
	069 Return 

Method: System.Void InvokeProgressHandlers(System.Single progress)

Disassembly:
	0x024E16B8 MOV X19, X0
	0x024E16BC LDRB W9, [X8 + 0x135]
	0x024E16C0 TBNZ X9, 0x0, 0x24E16D0
	0x024E16C4 MOV X0, X8
	0x024E16C8 BL 0x1C5C684
	0x024E16CC MOV X8, X0
	0x024E16D0 LDR X8, [X8 + 0xC0]
	0x024E16D4 MOV X0, X19
	0x024E16D8 LDR X1, [X8 + 0x240]
	0x024E16DC LDP X30, X19, [X31], #0x10
	0x024E16E0 B 0x24E16E4
	0x024E16E4 STP X30, X23, [X31 - 0x30]!
	0x024E16E8 STP X22, X21, [X31 + 0x10]
	0x024E16EC STP X20, X19, [X31 + 0x20]
	0x024E16F0 ADRP X20, 0x1EF8000
	0x024E16F4 LDRB W8, [X20 + 0xC23]
	0x024E16F8 MOV X19, X1
	0x024E16FC MOV X21, X0
	0x024E1700 TBNZ X8, 0x0, 0x24E1724
	0x024E1704 ADRP X0, 0x1C12000
	0x024E1708 LDR X0, [X0 + 0x638]
	0x024E170C BL 0x1C16CF4
	0x024E1710 ADRP X0, 0x1C3B000
	0x024E1714 LDR X0, [X0 + 0xFF8]
	0x024E1718 BL 0x1C16CF4
	0x024E171C MOVZ W8, 0x1
	0x024E1720 STRB W8, [X20 + 0xC23]
	0x024E1724 LDR X0, [X19 + 0x20]
	0x024E1728 LDRB W8, [X0 + 0x135]
	0x024E172C TBNZ X8, 0x0, 0x24E1734
	0x024E1730 BL 0x1C5C684
	0x024E1734 LDR X8, [X0 + 0xC0]
	0x024E1738 LDR X0, [X8 + 0x260]
	0x024E173C LDRB W8, [X0 + 0x135]
	0x024E1740 TBNZ X8, 0x0, 0x24E1748
	0x024E1744 BL 0x1C5C684
	0x024E1748 BL 0x1C16F10
	0x024E174C LDR X8, [X19 + 0x20]
	0x024E1750 MOV X20, X0
	0x024E1754 LDRB W9, [X8 + 0x135]
	0x024E1758 TBNZ X9, 0x0, 0x24E1768
	0x024E175C MOV X0, X8
	0x024E1760 BL 0x1C5C684
	0x024E1764 MOV X8, X0
	0x024E1768 LDR X8, [X8 + 0xC0]
	0x024E176C MOV X0, X20
	0x024E1770 LDR X1, [X8 + 0x268]
	0x024E1774 BL 0x237946C
	0x024E1778 LDR X0, [X19 + 0x20]
	0x024E177C LDRB W8, [X0 + 0x135]
	0x024E1780 TBNZ X8, 0x0, 0x24E1788
	0x024E1784 BL 0x1C5C684
	0x024E1788 LDR X8, [X0 + 0xC0]
	0x024E178C MOV X0, X21
	0x024E1790 LDR X1, [X8 + 0x270]
	0x024E1794 BL 0x21D577C
	0x024E1798 CBZ X0, 0x24E19CC
	0x024E179C LDR X22, [X0 + 0x18]
	0x024E17A0 MOV X21, X0
	0x024E17A4 CBZ X22, 0x24E18C8
	0x024E17A8 CBZ X20, 0x24E19CC
	0x024E17AC STR W22, [X20 + 0x28]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1EF9000
	008 Move W8, [X21+3097]
	009 Move X19, X1
	010 Move V8, V0
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1C3C000
	017 Move X0, [X0+4000]
	018 Call 0x1C17CF4
	019 Move X0, 0x1C3C000
	020 Move X0, [X0+4008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3097], W8
	024 Move X8, [X19+32]
	025 Move X8, [X8+192]
	026 Move X0, [X8+152]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Call 0x1C17F10
	034 Move X8, [X19+32]
	035 Move X21, X0
	036 Move X8, [X8+192]
	037 Move X1, [X8+160]
	038 Call 0x2375AB4, X0
	039 Compare X21, 0
	040 JumpIfEqual {77}
	041 Move [X21+16], X20
	042 Move [X21+24], S8
	043 Move X20, [X20+40]
	044 Compare X20, 0
	045 JumpIfEqual {70}
	046 Move X8, 0x1C3C000
	047 Move X8, [X8+4000]
	048 Move X22, 0x1C3C000
	049 Move X0, [X8]
	050 Move X22, [X22+4008]
	051 Call 0x1C17F10
	052 Move X8, [X19+32]
	053 Move X1, X21
	054 Move X3, X31
	055 Move X19, X0
	056 Move X8, [X8+192]
	057 Move X2, [X8+168]
	058 Call Action`1<ProgressHandler>..ctor, X0, X1, X2
	059 Move X2, [X22]
	060 Move X0, X20
	061 Move X1, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+8]
	067 Move V8, [X31+48]
	068 Call 0x21DC308, X0, X1
	069 Return 
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+8]
	075 Move V8, [X31+48]
	076 Return 
	077 Call 0x1C17F20

Method: System.Void Reject(System.Exception ex)

Disassembly:
	0x024E17B0 LDR X0, [X19 + 0x20]
	0x024E17B4 LDRB W8, [X0 + 0x135]
	0x024E17B8 TBNZ X8, 0x0, 0x24E17C0
	0x024E17BC BL 0x1C5C684
	0x024E17C0 LDR X8, [X0 + 0xC0]
	0x024E17C4 ADRP X23, 0x1C12000
	0x024E17C8 LDR X0, [X8 + 0x298]
	0x024E17CC LDRB W8, [X0 + 0x135]
	0x024E17D0 LDR X23, [X23 + 0x638]
	0x024E17D4 TBNZ X8, 0x0, 0x24E17DC
	0x024E17D8 BL 0x1C5C684
	0x024E17DC MOV W1, W22
	0x024E17E0 BL 0x1C16D6C
	0x024E17E4 STR X0, [X20 + 0x20]
	0x024E17E8 LDR W1, [X20 + 0x28]
	0x024E17EC LDR X0, [X23]
	0x024E17F0 BL 0x1C16D6C
	0x024E17F4 STR X0, [X20 + 0x10]
	0x024E17F8 LDR X0, [X19 + 0x20]
	0x024E17FC LDRB W8, [X0 + 0x135]
	0x024E1800 TBNZ X8, 0x0, 0x24E1808
	0x024E1804 BL 0x1C5C684
	0x024E1808 LDR X8, [X0 + 0xC0]
	0x024E180C LDR X0, [X8 + 0x2A8]
	0x024E1810 LDRB W8, [X0 + 0x135]
	0x024E1814 TBNZ X8, 0x0, 0x24E181C
	0x024E1818 BL 0x1C5C684
	0x024E181C BL 0x1C16F10
	0x024E1820 LDR X8, [X19 + 0x20]
	0x024E1824 MOV X22, X0
	0x024E1828 LDRB W9, [X8 + 0x135]
	0x024E182C TBNZ X9, 0x0, 0x24E183C
	0x024E1830 MOV X0, X8
	0x024E1834 BL 0x1C5C684
	0x024E1838 MOV X8, X0
	0x024E183C LDR X8, [X8 + 0xC0]
	0x024E1840 MOV X0, X22
	0x024E1844 LDR X1, [X8 + 0x2B0]
	0x024E1848 BL 0x24DFE84
	0x024E184C STR X22, [X20 + 0x18]
	0x024E1850 CBZ X22, 0x24E19CC
	0x024E1854 ADRP X8, 0x1C3B000
	0x024E1858 LDR X0, [X19 + 0x20]
	0x024E185C LDR X8, [X8 + 0xFF8]
	0x024E1860 LDRB W9, [X0 + 0x135]
	0x024E1864 LDR X23, [X8]
	0x024E1868 TBNZ X9, 0x0, 0x24E1874
	0x024E186C BL 0x1C5C684
	0x024E1870 LDR X0, [X19 + 0x20]
	0x024E1874 STR X23, [X22 + 0x48]
	0x024E1878 LDRB W8, [X0 + 0x135]
	0x024E187C TBNZ X8, 0x0, 0x24E1884
	0x024E1880 BL 0x1C5C684
	0x024E1884 LDR X8, [X0 + 0xC0]
	0x024E1888 LDR X0, [X8 + 0x2C8]
	0x024E188C LDRB W8, [X0 + 0x135]
	0x024E1890 TBNZ X8, 0x0, 0x24E1898
	0x024E1894 BL 0x1C5C684
	0x024E1898 BL 0x1C16F10
	0x024E189C LDR X8, [X19 + 0x20]
	0x024E18A0 MOV X22, X0
	0x024E18A4 ADD X9, X8, 0x135
	0x024E18A8 LDRH W9, [X9]
	0x024E18AC TBNZ X9, 0x0, 0x24E1960
	0x024E18B0 MOV X0, X8
	0x024E18B4 BL 0x1C5C684
	0x024E18B8 LDR X8, [X19 + 0x20]
	0x024E18BC ADD X9, X8, 0x135
	0x024E18C0 LDRH W9, [X9]
	0x024E18C4 B 0x24E1964
	0x024E18C8 LDR X0, [X19 + 0x20]
	0x024E18CC LDRB W8, [X0 + 0x135]
	0x024E18D0 TBNZ X8, 0x0, 0x24E18D8
	0x024E18D4 BL 0x1C5C684
	0x024E18D8 LDR X8, [X0 + 0xC0]
	0x024E18DC LDR X20, [X8 + 0x278]
	0x024E18E0 LDR X8, [X20 + 0x38]
	0x024E18E4 CBNZ X8, 0x24E18F4
	0x024E18E8 MOV X0, X20
	0x024E18EC BL 0x1C5C6E0
	0x024E18F0 LDR X8, [X20 + 0x38]
	0x024E18F4 LDR X0, [X8 + 0x10]
	0x024E18F8 LDRB W8, [X0 + 0x135]
	0x024E18FC TBNZ X8, 0x0, 0x24E1904
	0x024E1900 BL 0x1C5C684
	0x024E1904 LDR W8, [X0 + 0xE0]
	0x024E1908 CBNZ W8, 0x24E1910
	0x024E190C BL 0x1C16DFC
	0x024E1910 LDR X8, [X20 + 0x38]
	0x024E1914 LDR X0, [X8 + 0x10]
	0x024E1918 LDRB W8, [X0 + 0x135]
	0x024E191C TBNZ X8, 0x0, 0x24E1924
	0x024E1920 BL 0x1C5C684
	0x024E1924 LDR X8, [X19 + 0x20]
	0x024E1928 LDR X9, [X0 + 0xB8]
	0x024E192C LDRB W10, [X8 + 0x135]
	0x024E1930 LDR X19, [X9]
	0x024E1934 TBNZ X10, 0x0, 0x24E1944
	0x024E1938 MOV X0, X8
	0x024E193C BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X22, 0x1EF9000
	009 Move W8, [X22+3098]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1C3C000
	018 Move X0, [X0+4016]
	019 Call 0x1C17CF4
	020 Move X0, 0x1C3B000
	021 Move X0, [X0+1736]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3098], W8
	025 Move W22, [X21+80]
	026 Compare W22, 0
	027 JumpIfNotEqual {71}
	028 Move X22, 0x1C3B000
	029 Move X22, [X22+1736]
	030 Move W8, 1
	031 Move [X21+16], X20
	032 Move [X21+80], W8
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move W9, [X8]
	041 Compare W9, 0
	042 JumpIfEqual {57}
	043 Move W9, [X0+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {49}
	046 Call 0x1C17DFC
	047 Move X8, [X22]
	048 Move X8, [X8+184]
	049 Move X0, [X8+24]
	050 Compare X0, 0
	051 JumpIfEqual {119}
	052 Move X8, 0x1C3C000
	053 Move X8, [X8+4016]
	054 Move X1, X21
	055 Move X2, [X8]
	056 Call HashSet`1<Object>.Remove, X0, X1
	057 Move X8, [X19+32]
	058 Move X0, X21
	059 Move X1, X20
	060 Move X20, [X31+80]
	061 Move X19, [X31+88]
	062 Move X8, [X8+192]
	063 Move X22, [X31+64]
	064 Move X21, [X31+72]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Move X2, [X8+184]
	068 Add X31, X31, 96
	069 Call 0x24E14F4, X0, X1
	070 Return 
	071 Move X20, 0x1C3C000
	072 Move X20, [X20+4024]
	073 Move X0, X20
	074 Call 0x1C17D08
	075 Move TEMP, 0
	076 Not TEMP
	077 Move X23, TEMP
	078 Move [X31+24], X0
	079 Move [X31+32], X23
	080 Add X0, X31, 24
	081 Move X1, X31
	082 Move [X31+40], W22
	083 Call Enum.ToString, X0
	084 Move X21, X0
	085 Move X0, X20
	086 Call 0x1C17D08
	087 Move [X31], X0
	088 Move [X31+8], X23
	089 Add X0, X31, 0
	090 Move X1, X31
	091 Move [X31+16], W31
	092 Call Enum.ToString, X0
	093 Move X20, X0
	094 Move X0, 0x1C3C000
	095 Move X0, [X0+4032]
	096 Call 0x1C17D08
	097 Move X22, X0
	098 Move X0, 0x1C3C000
	099 Move X0, [X0+4040]
	100 Call 0x1C17D08
	101 Move X2, X0
	102 Move X0, X22
	103 Move X1, X21
	104 Move X3, X20
	105 Move X4, X31
	106 Call String.Concat, X0, X1, X2, X3
	107 Move X20, X0
	108 Move X0, 0x1C3C000
	109 Move X0, [X0+4048]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X1, X20
	113 Move X2, X31
	114 Move X21, X0
	115 Call PromiseStateException..ctor, X0, X1
	116 Move X0, X21
	117 Move X1, X19
	118 Call 0x1C17DEC
	119 Call 0x1C17F20

Method: System.Void Resolve(PromisedT value)

Disassembly:
	0x024E1940 MOV X8, X0
	0x024E1944 LDR X8, [X8 + 0xC0]
	0x024E1948 MOV X0, X19
	0x024E194C LDP X20, X19, [X31 + 0x20]
	0x024E1950 LDP X22, X21, [X31 + 0x10]
	0x024E1954 LDR X1, [X8 + 0x288]
	0x024E1958 LDP X30, X23, [X31], #0x30
	0x024E195C B 0x24E1D38
	0x024E1960 MOV X0, X8
	0x024E1964 LDR X10, [X0 + 0xC0]
	0x024E1968 LDR X23, [X10 + 0x2C0]
	0x024E196C TBNZ X9, 0x0, 0x24E197C
	0x024E1970 MOV X0, X8
	0x024E1974 BL 0x1C5C684
	0x024E1978 MOV X8, X0
	0x024E197C LDR X8, [X8 + 0xC0]
	0x024E1980 MOV X0, X22
	0x024E1984 MOV X1, X20
	0x024E1988 MOV X2, X23
	0x024E198C LDR X3, [X8 + 0x2D0]
	0x024E1990 BL 0x2A7689C
	0x024E1994 LDR X0, [X19 + 0x20]
	0x024E1998 LDRB W8, [X0 + 0x135]
	0x024E199C TBNZ X8, 0x0, 0x24E19A4
	0x024E19A0 BL 0x1C5C684
	0x024E19A4 LDR X8, [X0 + 0xC0]
	0x024E19A8 MOV X0, X21
	0x024E19AC MOV X1, X22
	0x024E19B0 LDR X2, [X8 + 0x2D8]
	0x024E19B4 BL 0x21DB000
	0x024E19B8 LDR X0, [X20 + 0x18]
	0x024E19BC LDP X20, X19, [X31 + 0x20]
	0x024E19C0 LDP X22, X21, [X31 + 0x10]
	0x024E19C4 LDP X30, X23, [X31], #0x30
	0x024E19C8 RET
	0x024E19CC BL 0x1C16F20
	0x024E19D0 STR X30, [X31 - 0x30]!
	0x024E19D4 STP X22, X21, [X31 + 0x10]
	0x024E19D8 STP X20, X19, [X31 + 0x20]
	0x024E19DC LDR X8, [X2 + 0x20]
	0x024E19E0 MOV X19, X2
	0x024E19E4 MOV X22, X1
	0x024E19E8 MOV X20, X0
	0x024E19EC LDR X8, [X8 + 0xC0]
	0x024E19F0 LDR X8, [X8 + 0x2E0]
	0x024E19F4 LDRB W9, [X8 + 0x135]
	0x024E19F8 TBNZ X9, 0x0, 0x24E1A08
	0x024E19FC MOV X0, X8
	0x024E1A00 BL 0x1C5C684
	0x024E1A04 MOV X8, X0
	0x024E1A08 MOV X0, X8
	0x024E1A0C BL 0x1C16F10
	0x024E1A10 LDR X8, [X19 + 0x20]
	0x024E1A14 MOV X21, X0
	0x024E1A18 LDR X8, [X8 + 0xC0]
	0x024E1A1C LDR X1, [X8 + 0x2E8]
	0x024E1A20 BL 0x237A7FC
	0x024E1A24 CBZ X21, 0x24E1A9C
	0x024E1A28 STR X22, [X21 + 0x10]
	0x024E1A2C LDR X8, [X19 + 0x20]
	0x024E1A30 LDR X8, [X8 + 0xC0]
	0x024E1A34 LDR X0, [X8 + 0x190]
	0x024E1A38 LDRB W8, [X0 + 0x135]
	0x024E1A3C TBNZ X8, 0x0, 0x24E1A44
	0x024E1A40 BL 0x1C5C684
	0x024E1A44 BL 0x1C16F10
	0x024E1A48 LDR X8, [X19 + 0x20]
	0x024E1A4C MOV X1, X21
	0x024E1A50 MOV X22, X0
	0x024E1A54 LDR X8, [X8 + 0xC0]
	0x024E1A58 LDR X2, [X8 + 0x2F0]
	0x024E1A5C LDR X3, [X8 + 0x228]
	0x024E1A60 BL 0x2D30578
	0x024E1A64 LDR X8, [X19 + 0x20]
	0x024E1A68 MOV X0, X20
	0x024E1A6C MOV X1, X22
	0x024E1A70 LDP X20, X19, [X31 + 0x20]
	0x024E1A74 LDR X8, [X8 + 0xC0]
	0x024E1A78 LDP X22, X21, [X31 + 0x10]
	0x024E1A7C MOV X2, X31
	0x024E1A80 MOV X3, X31
	0x024E1A84 LDR X8, [X8 + 0x230]
	0x024E1A88 LDR X8, [X8 + 0x20]
	0x024E1A8C LDR X8, [X8 + 0xC0]
	0x024E1A90 LDR X4, [X8 + 0x198]
	0x024E1A94 LDR X30, [X31], #0x30
	0x024E1A98 B 0x24E123C
	0x024E1A9C BL 0x1C16F20
	0x024E1AA0 STP X30, X19, [X31 - 0x10]!
	0x024E1AA4 LDR X8, [X1 + 0x20]
	0x024E1AA8 MOV X19, X0
	0x024E1AAC LDRB W9, [X8 + 0x135]
	0x024E1AB0 TBNZ X9, 0x0, 0x24E1AC0
	0x024E1AB4 MOV X0, X8
	0x024E1AB8 BL 0x1C5C684
	0x024E1ABC MOV X8, X0
	0x024E1AC0 LDR X8, [X8 + 0xC0]
	0x024E1AC4 MOV X0, X19
	0x024E1AC8 LDR X1, [X8 + 0x2F8]
	0x024E1ACC LDP X30, X19, [X31], #0x10

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X22, 0x1EF9000
	009 Move W8, [X22+3099]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1C3C000
	018 Move X0, [X0+4016]
	019 Call 0x1C17CF4
	020 Move X0, 0x1C3B000
	021 Move X0, [X0+1736]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3099], W8
	025 Move W22, [X21+80]
	026 Compare W22, 0
	027 JumpIfNotEqual {71}
	028 Move X22, 0x1C3B000
	029 Move X22, [X22+1736]
	030 Move W8, 2
	031 Move [X21+24], X20
	032 Move [X21+80], W8
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move W9, [X8]
	041 Compare W9, 0
	042 JumpIfEqual {57}
	043 Move W9, [X0+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {49}
	046 Call 0x1C17DFC
	047 Move X8, [X22]
	048 Move X8, [X8+184]
	049 Move X0, [X8+24]
	050 Compare X0, 0
	051 JumpIfEqual {119}
	052 Move X8, 0x1C3C000
	053 Move X8, [X8+4016]
	054 Move X1, X21
	055 Move X2, [X8]
	056 Call HashSet`1<Object>.Remove, X0, X1
	057 Move X8, [X19+32]
	058 Move X0, X21
	059 Move X1, X20
	060 Move X20, [X31+80]
	061 Move X19, [X31+88]
	062 Move X8, [X8+192]
	063 Move X22, [X31+64]
	064 Move X21, [X31+72]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Move X2, [X8+192]
	068 Add X31, X31, 96
	069 Call 0x24E15D8, X0, X1
	070 Return 
	071 Move X20, 0x1C3C000
	072 Move X20, [X20+4024]
	073 Move X0, X20
	074 Call 0x1C17D08
	075 Move TEMP, 0
	076 Not TEMP
	077 Move X23, TEMP
	078 Move [X31+24], X0
	079 Move [X31+32], X23
	080 Add X0, X31, 24
	081 Move X1, X31
	082 Move [X31+40], W22
	083 Call Enum.ToString, X0
	084 Move X21, X0
	085 Move X0, X20
	086 Call 0x1C17D08
	087 Move [X31], X0
	088 Move [X31+8], X23
	089 Add X0, X31, 0
	090 Move X1, X31
	091 Move [X31+16], W31
	092 Call Enum.ToString, X0
	093 Move X20, X0
	094 Move X0, 0x1C3C000
	095 Move X0, [X0+4056]
	096 Call 0x1C17D08
	097 Move X22, X0
	098 Move X0, 0x1C3C000
	099 Move X0, [X0+4064]
	100 Call 0x1C17D08
	101 Move X2, X0
	102 Move X0, X22
	103 Move X1, X21
	104 Move X3, X20
	105 Move X4, X31
	106 Call String.Concat, X0, X1, X2, X3
	107 Move X20, X0
	108 Move X0, 0x1C3C000
	109 Move X0, [X0+4048]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X1, X20
	113 Move X2, X31
	114 Move X21, X0
	115 Call PromiseStateException..ctor, X0, X1
	116 Move X0, X21
	117 Move X1, X19
	118 Call 0x1C17DEC
	119 Call 0x1C17F20

Method: System.Void ReportProgress(System.Single progress)

Disassembly:
	0x024E1AD0 B 0x24E1AD4
	0x024E1AD4 STR X30, [X31 - 0x40]!
	0x024E1AD8 STP X24, X23, [X31 + 0x10]
	0x024E1ADC STP X22, X21, [X31 + 0x20]
	0x024E1AE0 STP X20, X19, [X31 + 0x30]
	0x024E1AE4 ADRP X20, 0x1EF8000
	0x024E1AE8 LDRB W8, [X20 + 0xC24]
	0x024E1AEC MOV X19, X1
	0x024E1AF0 MOV X21, X0
	0x024E1AF4 TBNZ X8, 0x0, 0x24E1B18
	0x024E1AF8 ADRP X0, 0x1C12000
	0x024E1AFC LDR X0, [X0 + 0x638]
	0x024E1B00 BL 0x1C16CF4
	0x024E1B04 ADRP X0, 0x1C3C000
	0x024E1B08 LDR X0, [X0]
	0x024E1B0C BL 0x1C16CF4
	0x024E1B10 MOVZ W8, 0x1
	0x024E1B14 STRB W8, [X20 + 0xC24]
	0x024E1B18 LDR X0, [X19 + 0x20]
	0x024E1B1C LDRB W8, [X0 + 0x135]
	0x024E1B20 TBNZ X8, 0x0, 0x24E1B28
	0x024E1B24 BL 0x1C5C684
	0x024E1B28 LDR X8, [X0 + 0xC0]
	0x024E1B2C LDR X0, [X8 + 0x300]
	0x024E1B30 LDRB W8, [X0 + 0x135]
	0x024E1B34 TBNZ X8, 0x0, 0x24E1B3C
	0x024E1B38 BL 0x1C5C684
	0x024E1B3C BL 0x1C16F10
	0x024E1B40 LDR X8, [X19 + 0x20]
	0x024E1B44 MOV X20, X0
	0x024E1B48 LDRB W9, [X8 + 0x135]
	0x024E1B4C TBNZ X9, 0x0, 0x24E1B5C
	0x024E1B50 MOV X0, X8
	0x024E1B54 BL 0x1C5C684
	0x024E1B58 MOV X8, X0
	0x024E1B5C LDR X8, [X8 + 0xC0]
	0x024E1B60 MOV X0, X20
	0x024E1B64 LDR X1, [X8 + 0x308]
	0x024E1B68 BL 0x237ADC0
	0x024E1B6C LDR X0, [X19 + 0x20]
	0x024E1B70 LDRB W8, [X0 + 0x135]
	0x024E1B74 TBNZ X8, 0x0, 0x24E1B7C
	0x024E1B78 BL 0x1C5C684
	0x024E1B7C LDR X8, [X0 + 0xC0]
	0x024E1B80 MOV X0, X21
	0x024E1B84 LDR X1, [X8 + 0x270]
	0x024E1B88 BL 0x21D577C
	0x024E1B8C CBZ X0, 0x24E1CF8
	0x024E1B90 LDR X8, [X0 + 0x18]
	0x024E1B94 MOV X21, X0
	0x024E1B98 CBZ X8, 0x24E1CFC
	0x024E1B9C LDR X0, [X19 + 0x20]
	0x024E1BA0 LDRB W8, [X0 + 0x135]
	0x024E1BA4 TBNZ X8, 0x0, 0x24E1BAC
	0x024E1BA8 BL 0x1C5C684
	0x024E1BAC LDR X8, [X0 + 0xC0]
	0x024E1BB0 LDR X0, [X8]
	0x024E1BB4 LDRB W8, [X0 + 0x135]
	0x024E1BB8 TBNZ X8, 0x0, 0x24E1BC0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move W21, [X0+80]
	008 Compare W21, 0
	009 JumpIfNotEqual {21}
	010 Move X8, [X1+32]
	011 Move X20, [X31+80]
	012 Move X19, [X31+88]
	013 Move X22, [X31+64]
	014 Move X21, [X31+72]
	015 Move X30, [X31+48]
	016 Move X8, [X8+192]
	017 Move X1, [X8+200]
	018 Add X31, X31, 96
	019 Call 0x24E16B8, X0, V0
	020 Return 
	021 Move X20, 0x1C3C000
	022 Move X20, [X20+4024]
	023 Move X19, X1
	024 Move X0, X20
	025 Call 0x1C17D08
	026 Move TEMP, 0
	027 Not TEMP
	028 Move X22, TEMP
	029 Move [X31+24], X0
	030 Move [X31+32], X22
	031 Add X0, X31, 24
	032 Move X1, X31
	033 Move [X31+40], W21
	034 Call Enum.ToString, X0
	035 Move X21, X0
	036 Move X0, X20
	037 Call 0x1C17D08
	038 Move [X31], X0
	039 Move [X31+8], X22
	040 Add X0, X31, 0
	041 Move X1, X31
	042 Move [X31+16], W31
	043 Call Enum.ToString, X0
	044 Move X20, X0
	045 Move X0, 0x1C3C000
	046 Move X0, [X0+4072]
	047 Call 0x1C17D08
	048 Move X22, X0
	049 Move X0, 0x1C3C000
	050 Move X0, [X0+4080]
	051 Call 0x1C17D08
	052 Move X2, X0
	053 Move X0, X22
	054 Move X1, X21
	055 Move X3, X20
	056 Move X4, X31
	057 Call String.Concat, X0, X1, X2, X3
	058 Move X20, X0
	059 Move X0, 0x1C3C000
	060 Move X0, [X0+4048]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X1, X20
	064 Move X2, X31
	065 Move X21, X0
	066 Call PromiseStateException..ctor, X0, X1
	067 Move X0, X21
	068 Move X1, X19
	069 Call 0x1C17DEC

Method: System.Void Done(System.Action`1<PromisedT> onResolved, System.Action`1<System.Exception> onRejected)

Disassembly:
	0x024E1BBC BL 0x1C5C684
	0x024E1BC0 BL 0x1C16F10
	0x024E1BC4 LDR X8, [X19 + 0x20]
	0x024E1BC8 MOV X22, X0
	0x024E1BCC LDRB W9, [X8 + 0x135]
	0x024E1BD0 TBNZ X9, 0x0, 0x24E1BE0
	0x024E1BD4 MOV X0, X8
	0x024E1BD8 BL 0x1C5C684
	0x024E1BDC MOV X8, X0
	0x024E1BE0 LDR X8, [X8 + 0xC0]
	0x024E1BE4 MOV X0, X22
	0x024E1BE8 LDR X1, [X8 + 0x168]
	0x024E1BEC BL 0x24DFE84
	0x024E1BF0 CBZ X20, 0x24E1CF8
	0x024E1BF4 STR X22, [X20 + 0x10]
	0x024E1BF8 CBZ X22, 0x24E1CF8
	0x024E1BFC ADRP X8, 0x1C3C000
	0x024E1C00 LDR X0, [X19 + 0x20]
	0x024E1C04 LDR X8, [X8]
	0x024E1C08 ADRP X23, 0x1C12000
	0x024E1C0C LDRB W9, [X0 + 0x135]
	0x024E1C10 LDR X24, [X8]
	0x024E1C14 LDR X23, [X23 + 0x638]
	0x024E1C18 TBNZ X9, 0x0, 0x24E1C20
	0x024E1C1C BL 0x1C5C684
	0x024E1C20 STR X24, [X22 + 0x48]
	0x024E1C24 LDR X0, [X23]
	0x024E1C28 LDR W1, [X21 + 0x18]
	0x024E1C2C BL 0x1C16D6C
	0x024E1C30 STR X0, [X20 + 0x18]
	0x024E1C34 LDR X0, [X19 + 0x20]
	0x024E1C38 LDRB W8, [X0 + 0x135]
	0x024E1C3C TBNZ X8, 0x0, 0x24E1C44
	0x024E1C40 BL 0x1C5C684
	0x024E1C44 LDR X8, [X0 + 0xC0]
	0x024E1C48 LDR X0, [X8 + 0x2C8]
	0x024E1C4C LDRB W8, [X0 + 0x135]
	0x024E1C50 TBNZ X8, 0x0, 0x24E1C58
	0x024E1C54 BL 0x1C5C684
	0x024E1C58 BL 0x1C16F10
	0x024E1C5C LDR X8, [X19 + 0x20]
	0x024E1C60 MOV X22, X0
	0x024E1C64 ADD X9, X8, 0x135
	0x024E1C68 LDRH W9, [X9]
	0x024E1C6C TBNZ X9, 0x0, 0x24E1C88
	0x024E1C70 MOV X0, X8
	0x024E1C74 BL 0x1C5C684
	0x024E1C78 LDR X8, [X19 + 0x20]
	0x024E1C7C ADD X9, X8, 0x135
	0x024E1C80 LDRH W9, [X9]
	0x024E1C84 B 0x24E1C8C
	0x024E1C88 MOV X0, X8
	0x024E1C8C LDR X10, [X0 + 0xC0]
	0x024E1C90 LDR X23, [X10 + 0x310]
	0x024E1C94 TBNZ X9, 0x0, 0x24E1CA4
	0x024E1C98 MOV X0, X8
	0x024E1C9C BL 0x1C5C684
	0x024E1CA0 MOV X8, X0
	0x024E1CA4 LDR X8, [X8 + 0xC0]
	0x024E1CA8 MOV X0, X22
	0x024E1CAC MOV X1, X20
	0x024E1CB0 MOV X2, X23
	0x024E1CB4 LDR X3, [X8 + 0x2D0]
	0x024E1CB8 BL 0x2A7689C
	0x024E1CBC LDR X0, [X19 + 0x20]
	0x024E1CC0 LDRB W8, [X0 + 0x135]
	0x024E1CC4 TBNZ X8, 0x0, 0x24E1CCC
	0x024E1CC8 BL 0x1C5C684
	0x024E1CCC LDR X8, [X0 + 0xC0]
	0x024E1CD0 MOV X0, X21
	0x024E1CD4 MOV X1, X22
	0x024E1CD8 LDR X2, [X8 + 0x2D8]
	0x024E1CDC BL 0x21DB000
	0x024E1CE0 LDR X0, [X20 + 0x10]
	0x024E1CE4 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1EF9000
	009 Move X23, 0x1C16000
	010 Move W8, [X24+3100]
	011 Move X23, [X23+712]
	012 Move X20, X3
	013 Move X19, X2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x1C16000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0x1C3C000
	024 Move X0, [X0+704]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+3100], W8
	028 Move X8, [X20+32]
	029 Move X0, X21
	030 Move X1, X22
	031 Move X2, X19
	032 Move X8, [X8+192]
	033 Move X3, X31
	034 Move X8, [X8+208]
	035 Move X8, [X8+32]
	036 Move X8, [X8+192]
	037 Move X4, [X8+416]
	038 Call 0x24E23B8, X0, X1, X2, X3
	039 Move X8, [X23]
	040 Move X19, X0
	041 Move X0, X8
	042 Call 0x1C17F10
	043 Move X8, [X20+32]
	044 Move X1, X21
	045 Move X3, X31
	046 Move X20, X0
	047 Move X8, [X8+192]
	048 Move X2, [X8+216]
	049 Call Action`1<Object>..ctor, X0, X1, X2
	050 Compare X19, 0
	051 JumpIfEqual {84}
	052 Move X10, 0x1C3C000
	053 Move X8, [X19]
	054 Move X10, [X10+704]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move W2, 5
	066 Move X0, X19
	067 Call 0x1C5D788
	068 Move W9, [X10]
	069 Add W9, W9, 5
	070 Add X8, X8, W9
	071 Add X0, X8, 312
	072 Move X3, [X0]
	073 Move X2, [X0+8]
	074 Move X0, X19
	075 Move X1, X20
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move X30, [X31+64]
	083 CallNoReturn X3
	084 Call 0x1C17F20

Method: System.Void Done(System.Action`1<PromisedT> onResolved)

Disassembly:
	0x024E1CE8 LDP X22, X21, [X31 + 0x20]
	0x024E1CEC LDP X24, X23, [X31 + 0x10]
	0x024E1CF0 LDR X30, [X31], #0x40
	0x024E1CF4 RET
	0x024E1CF8 BL 0x1C16F20
	0x024E1CFC ADRP X0, 0x1C12000
	0x024E1D00 LDR X0, [X0 + 0x5B0]
	0x024E1D04 BL 0x1C16D08
	0x024E1D08 BL 0x1C16F10
	0x024E1D0C MOV X20, X0
	0x024E1D10 ADRP X0, 0x1C3C000
	0x024E1D14 LDR X0, [X0 + 0x8]
	0x024E1D18 BL 0x1C16D08
	0x024E1D1C MOV X1, X0
	0x024E1D20 MOV X0, X20
	0x024E1D24 MOV X2, X31
	0x024E1D28 BL 0x337DF1C
	0x024E1D2C MOV X0, X20
	0x024E1D30 MOV X1, X19
	0x024E1D34 BL 0x1C16DEC
	0x024E1D38 STP X30, X21, [X31 - 0x20]!
	0x024E1D3C STP X20, X19, [X31 + 0x10]
	0x024E1D40 LDR X8, [X1 + 0x20]
	0x024E1D44 MOV X20, X1
	0x024E1D48 MOV X19, X0
	0x024E1D4C LDRB W9, [X8 + 0x135]
	0x024E1D50 TBNZ X9, 0x0, 0x24E1D60
	0x024E1D54 MOV X0, X8
	0x024E1D58 BL 0x1C5C684
	0x024E1D5C MOV X8, X0
	0x024E1D60 LDR X8, [X8 + 0xC0]
	0x024E1D64 LDR X0, [X8]
	0x024E1D68 LDRB W8, [X0 + 0x135]
	0x024E1D6C TBNZ X8, 0x0, 0x24E1D74
	0x024E1D70 BL 0x1C5C684
	0x024E1D74 BL 0x1C16F10
	0x024E1D78 LDR X8, [X20 + 0x20]
	0x024E1D7C MOV X21, X0
	0x024E1D80 LDRB W9, [X8 + 0x135]
	0x024E1D84 TBNZ X9, 0x0, 0x24E1D94
	0x024E1D88 MOV X0, X8
	0x024E1D8C BL 0x1C5C684
	0x024E1D90 MOV X8, X0
	0x024E1D94 LDR X8, [X8 + 0xC0]
	0x024E1D98 MOV X0, X21
	0x024E1D9C LDR X1, [X8 + 0x168]
	0x024E1DA0 BL 0x24DFE84
	0x024E1DA4 CBZ X21, 0x24E1DDC
	0x024E1DA8 LDR X0, [X20 + 0x20]
	0x024E1DAC LDRB W8, [X0 + 0x135]
	0x024E1DB0 TBNZ X8, 0x0, 0x24E1DB8
	0x024E1DB4 BL 0x1C5C684
	0x024E1DB8 LDR X8, [X0 + 0xC0]
	0x024E1DBC MOV X0, X21
	0x024E1DC0 MOV X1, X19
	0x024E1DC4 LDR X2, [X8 + 0x18]
	0x024E1DC8 BL 0x24E0940
	0x024E1DCC LDP X20, X19, [X31 + 0x10]
	0x024E1DD0 MOV X0, X21
	0x024E1DD4 LDP X30, X21, [X31], #0x20
	0x024E1DD8 RET
	0x024E1DDC BL 0x1C16F20
	0x024E1DE0 STP X30, X21, [X31 - 0x20]!
	0x024E1DE4 STP X20, X19, [X31 + 0x10]
	0x024E1DE8 LDR X8, [X1 + 0x20]
	0x024E1DEC MOV X20, X1
	0x024E1DF0 MOV X19, X0
	0x024E1DF4 LDRB W9, [X8 + 0x135]
	0x024E1DF8 TBNZ X9, 0x0, 0x24E1E08
	0x024E1DFC MOV X0, X8
	0x024E1E00 BL 0x1C5C684
	0x024E1E04 MOV X8, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1EF9000
	008 Move X22, 0x1C16000
	009 Move W8, [X23+3101]
	010 Move X22, [X22+712]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x1C16000
	019 Move X0, [X0+712]
	020 Call 0x1C17CF4
	021 Move X0, 0x1C3C000
	022 Move X0, [X0+704]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3101], W8
	026 Move X8, [X20+32]
	027 Move X0, X21
	028 Move X1, X19
	029 Move X2, X31
	030 Move X8, [X8+192]
	031 Move X3, X31
	032 Move X8, [X8+224]
	033 Move X8, [X8+32]
	034 Move X8, [X8+192]
	035 Move X4, [X8+416]
	036 Call 0x24E23B8, X0, X1, X2, X3
	037 Move X8, [X22]
	038 Move X19, X0
	039 Move X0, X8
	040 Call 0x1C17F10
	041 Move X8, [X20+32]
	042 Move X1, X21
	043 Move X3, X31
	044 Move X20, X0
	045 Move X8, [X8+192]
	046 Move X2, [X8+232]
	047 Call Action`1<Object>..ctor, X0, X1, X2
	048 Compare X19, 0
	049 JumpIfEqual {81}
	050 Move X10, 0x1C3C000
	051 Move X8, [X19]
	052 Move X10, [X10+704]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 5
	064 Move X0, X19
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 5
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X3, [X0]
	071 Move X2, [X0+8]
	072 Move X0, X19
	073 Move X1, X20
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 CallNoReturn X3
	081 Call 0x1C17F20

Method: System.Void Done()

Disassembly:
	0x024E1E08 LDR X8, [X8 + 0xC0]
	0x024E1E0C LDR X0, [X8]
	0x024E1E10 LDRB W8, [X0 + 0x135]
	0x024E1E14 TBNZ X8, 0x0, 0x24E1E1C
	0x024E1E18 BL 0x1C5C684
	0x024E1E1C BL 0x1C16F10
	0x024E1E20 LDR X8, [X20 + 0x20]
	0x024E1E24 MOV X21, X0
	0x024E1E28 LDRB W9, [X8 + 0x135]
	0x024E1E2C TBNZ X9, 0x0, 0x24E1E3C
	0x024E1E30 MOV X0, X8
	0x024E1E34 BL 0x1C5C684
	0x024E1E38 MOV X8, X0
	0x024E1E3C LDR X8, [X8 + 0xC0]
	0x024E1E40 MOV X0, X21
	0x024E1E44 LDR X1, [X8 + 0x168]
	0x024E1E48 BL 0x24DFE84
	0x024E1E4C CBZ X21, 0x24E1E84
	0x024E1E50 LDR X0, [X20 + 0x20]
	0x024E1E54 LDRB W8, [X0 + 0x135]
	0x024E1E58 TBNZ X8, 0x0, 0x24E1E60
	0x024E1E5C BL 0x1C5C684
	0x024E1E60 LDR X8, [X0 + 0xC0]
	0x024E1E64 MOV X0, X21
	0x024E1E68 MOV X1, X19
	0x024E1E6C LDR X2, [X8 + 0x30]
	0x024E1E70 BL 0x24E07B0
	0x024E1E74 LDP X20, X19, [X31 + 0x10]
	0x024E1E78 MOV X0, X21
	0x024E1E7C LDP X30, X21, [X31], #0x20
	0x024E1E80 RET
	0x024E1E84 BL 0x1C16F20
	0x024E1E88 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1EF9000
	007 Move X22, 0x1C16000
	008 Move W8, [X21+3102]
	009 Move X22, [X22+712]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1C16000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3102], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X8, [X20+32]
	024 Move X1, X19
	025 Move X3, X31
	026 Move X21, X0
	027 Move X8, [X8+192]
	028 Move X2, [X8+240]
	029 Call Action`1<Object>..ctor, X0, X1, X2
	030 Move X8, [X20+32]
	031 Move X0, X19
	032 Move X1, X21
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X8, [X8+192]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X2, [X8+248]
	039 Move X30, [X31+48]
	040 Call 0x24E1E94, X0, X1
	041 Return 

Method: RSG.IPromise`1<PromisedT> WithName(System.String name)

Disassembly:
	0x024E1E8C STP X22, X21, [X31 + 0x10]
	0x024E1E90 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X0+72], X1
	002 Return X0

Method: RSG.IPromise Catch(System.Action`1<System.Exception> onRejected)

Disassembly:
	0x024E1E94 ADRP X21, 0x1EF8000
	0x024E1E98 LDRB W8, [X21 + 0xC25]
	0x024E1E9C MOV X19, X2
	0x024E1EA0 MOV X22, X1
	0x024E1EA4 MOV X20, X0
	0x024E1EA8 TBNZ X8, 0x0, 0x24E1EC0
	0x024E1EAC ADRP X0, 0x1C15000
	0x024E1EB0 LDR X0, [X0 + 0x2C8]
	0x024E1EB4 BL 0x1C16CF4
	0x024E1EB8 MOVZ W8, 0x1
	0x024E1EBC STRB W8, [X21 + 0xC25]
	0x024E1EC0 LDR X8, [X19 + 0x20]
	0x024E1EC4 LDR X8, [X8 + 0xC0]
	0x024E1EC8 LDR X0, [X8 + 0x318]
	0x024E1ECC LDRB W8, [X0 + 0x135]
	0x024E1ED0 TBNZ X8, 0x0, 0x24E1ED8
	0x024E1ED4 BL 0x1C5C684
	0x024E1ED8 BL 0x1C16F10
	0x024E1EDC LDR X8, [X19 + 0x20]
	0x024E1EE0 MOV X21, X0
	0x024E1EE4 LDR X8, [X8 + 0xC0]
	0x024E1EE8 LDR X1, [X8 + 0x320]
	0x024E1EEC BL 0x237B87C
	0x024E1EF0 CBZ X21, 0x24E2044
	0x024E1EF4 STR X22, [X21 + 0x18]
	0x024E1EF8 LDR X8, [X19 + 0x20]
	0x024E1EFC LDR X8, [X8 + 0xC0]
	0x024E1F00 LDR X0, [X8]
	0x024E1F04 LDRB W8, [X0 + 0x135]
	0x024E1F08 TBNZ X8, 0x0, 0x24E1F10
	0x024E1F0C BL 0x1C5C684
	0x024E1F10 BL 0x1C16F10
	0x024E1F14 LDR X8, [X19 + 0x20]
	0x024E1F18 MOV X22, X0
	0x024E1F1C LDR X8, [X8 + 0xC0]
	0x024E1F20 LDR X1, [X8 + 0x168]
	0x024E1F24 BL 0x24DFE84
	0x024E1F28 STR X22, [X21 + 0x10]
	0x024E1F2C CBZ X22, 0x24E2044
	0x024E1F30 LDR X8, [X19 + 0x20]
	0x024E1F34 LDR X9, [X20 + 0x48]
	0x024E1F38 ADRP X23, 0x1C15000
	0x024E1F3C LDR X8, [X8 + 0xC0]
	0x024E1F40 STR X9, [X22 + 0x48]
	0x024E1F44 LDR X0, [X8 + 0x20]
	0x024E1F48 LDRB W8, [X0 + 0x135]
	0x024E1F4C LDR X23, [X23 + 0x2C8]
	0x024E1F50 TBNZ X8, 0x0, 0x24E1F58
	0x024E1F54 BL 0x1C5C684
	0x024E1F58 BL 0x1C16F10
	0x024E1F5C LDR X8, [X19 + 0x20]
	0x024E1F60 MOV X1, X21
	0x024E1F64 MOV X22, X0
	0x024E1F68 LDR X8, [X8 + 0xC0]
	0x024E1F6C LDR X2, [X8 + 0x328]
	0x024E1F70 LDR X3, [X8 + 0x28]
	0x024E1F74 BL 0x2A6B948
	0x024E1F78 LDR X8, [X19 + 0x20]
	0x024E1F7C MOV X0, X20
	0x024E1F80 MOV X1, X22
	0x024E1F84 MOV X2, X31
	0x024E1F88 LDR X8, [X8 + 0xC0]
	0x024E1F8C MOV X3, X31
	0x024E1F90 LDR X8, [X8 + 0xE0]
	0x024E1F94 LDR X8, [X8 + 0x20]
	0x024E1F98 LDR X8, [X8 + 0xC0]
	0x024E1F9C LDR X4, [X8 + 0x1A0]
	0x024E1FA0 BL 0x24E13B8
	0x024E1FA4 LDR X0, [X23]
	0x024E1FA8 BL 0x1C16F10
	0x024E1FAC LDR X8, [X19 + 0x20]
	0x024E1FB0 MOV X1, X21
	0x024E1FB4 MOV X3, X31
	0x024E1FB8 MOV X22, X0
	0x024E1FBC LDR X8, [X8 + 0xC0]
	0x024E1FC0 LDR X2, [X8 + 0x330]
	0x024E1FC4 BL 0x2A6B948
	0x024E1FC8 LDR X8, [X19 + 0x20]
	0x024E1FCC MOV X0, X20
	0x024E1FD0 MOV X1, X22
	0x024E1FD4 LDR X8, [X8 + 0xC0]
	0x024E1FD8 LDR X2, [X8 + 0xF8]
	0x024E1FDC BL 0x24E0E94
	0x024E1FE0 LDR X8, [X19 + 0x20]
	0x024E1FE4 LDR X20, [X21 + 0x10]
	0x024E1FE8 LDR X8, [X8 + 0xC0]
	0x024E1FEC LDR X0, [X8 + 0x340]
	0x024E1FF0 LDRB W8, [X0 + 0x135]
	0x024E1FF4 TBNZ X8, 0x0, 0x24E1FFC
	0x024E1FF8 BL 0x1C5C684
	0x024E1FFC BL 0x1C16F10
	0x024E2000 LDR X8, [X19 + 0x20]
	0x024E2004 MOV X1, X21
	0x024E2008 MOV X22, X0
	0x024E200C LDR X8, [X8 + 0xC0]
	0x024E2010 LDR X2, [X8 + 0x338]
	0x024E2014 LDR X3, [X8 + 0x348]
	0x024E2018 BL 0x2D30578
	0x024E201C CBZ X20, 0x24E2044
	0x024E2020 LDR X8, [X19 + 0x20]
	0x024E2024 MOV X0, X20
	0x024E2028 MOV X1, X22
	0x024E202C LDP X20, X19, [X31 + 0x20]
	0x024E2030 LDR X8, [X8 + 0xC0]
	0x024E2034 LDP X22, X21, [X31 + 0x10]
	0x024E2038 LDR X2, [X8 + 0x350]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1EF9000
	009 Move W8, [X21+3103]
	010 Move X20, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x1C15000
	018 Move X0, [X0+1456]
	019 Call 0x1C17CF4
	020 Move X0, 0x1C16000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0x1C3B000
	024 Move X0, [X0+1736]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3103], W8
	028 Move X8, [X20+32]
	029 Move X8, [X8+192]
	030 Move X0, [X8+272]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Call 0x1C17F10
	038 Move X8, [X20+32]
	039 Move X21, X0
	040 Move X8, [X8+192]
	041 Move X1, [X8+280]
	042 Call 0x2375F8C, X0
	043 Compare X21, 0
	044 JumpIfEqual {124}
	045 Move X8, 0x1C3B000
	046 Move X8, [X8+1736]
	047 Move [X21+24], X22
	048 Move X0, [X8]
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X22, X0
	052 Call Promise..ctor, X0
	053 Move [X21+16], X22
	054 Compare X22, 0
	055 JumpIfEqual {124}
	056 Move X1, [X19+72]
	057 Move X23, 0x1C16000
	058 Move X24, 0x1C15000
	059 Move X23, [X23+712]
	060 Move X24, [X24+1456]
	061 Move X0, X22
	062 Move X2, X31
	063 Call Promise.WithName, X0, X1
	064 Move X8, [X20+32]
	065 Move X8, [X8+192]
	066 Move X0, [X8+32]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Call 0x1C17F10
	074 Move X8, [X20+32]
	075 Move X1, X21
	076 Move X22, X0
	077 Move X8, [X8+192]
	078 Move X2, [X8+296]
	079 Move X3, [X8+40]
	080 Call Action`1<Object>..ctor, X0, X1, X2
	081 Move X0, [X23]
	082 Call 0x1C17F10
	083 Move X8, [X20+32]
	084 Move X1, X21
	085 Move X3, X31
	086 Move X23, X0
	087 Move X8, [X8+192]
	088 Move X2, [X8+304]
	089 Call Action`1<Object>..ctor, X0, X1, X2
	090 Move X8, [X20+32]
	091 Move X1, [X21+16]
	092 Move X0, X19
	093 Move X2, X22
	094 Move X8, [X8+192]
	095 Move X3, X23
	096 Move X4, [X8+312]
	097 Call 0x24E2534, X0, X1, X2, X3
	098 Move X0, [X24]
	099 Move X22, [X21+16]
	100 Call 0x1C17F10
	101 Move X8, [X20+32]
	102 Move X1, X21
	103 Move X3, X31
	104 Move X20, X0
	105 Move X8, [X8+192]
	106 Move X2, [X8+320]
	107 Call Action`1<Single>..ctor, X0, X1, X2
	108 Move W8, [X19+80]
	109 Compare W8, 0
	110 JumpIfNotEqual {115}
	111 Move X0, X19
	112 Move X1, X20
	113 Move X2, X22
	114 Call 0x24E13E8, X0, X1, X2
	115 Move X0, [X21+16]
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X24, [X31+16]
	121 Move X23, [X31+24]
	122 Move X30, [X31+64]
	123 Return X0
	124 Call 0x1C17F20

Method: RSG.IPromise`1<PromisedT> Catch(System.Func`2<System.Exception, PromisedT> onRejected)

Disassembly:
	0x024E203C LDP X30, X23, [X31], #0x30
	0x024E2040 B 0x21346C8
	0x024E2044 BL 0x1C16F20
	0x024E2048 STR X30, [X31 - 0x40]!
	0x024E204C STP X24, X23, [X31 + 0x10]
	0x024E2050 STP X22, X21, [X31 + 0x20]
	0x024E2054 STP X20, X19, [X31 + 0x30]
	0x024E2058 ADRP X22, 0x1EF7000
	0x024E205C LDRB W8, [X22 + 0xC26]
	0x024E2060 MOV X20, X2
	0x024E2064 MOV X19, X1
	0x024E2068 MOV X21, X0
	0x024E206C TBNZ X8, 0x0, 0x24E2090
	0x024E2070 ADRP X0, 0x1C14000
	0x024E2074 LDR X0, [X0 + 0x2C8]
	0x024E2078 BL 0x1C16CF4
	0x024E207C ADRP X0, 0x1C39000
	0x024E2080 LDR X0, [X0 + 0x6C8]
	0x024E2084 BL 0x1C16CF4
	0x024E2088 MOVZ W8, 0x1
	0x024E208C STRB W8, [X22 + 0xC26]
	0x024E2090 LDR X8, [X20 + 0x20]
	0x024E2094 ADRP X23, 0x1C39000
	0x024E2098 LDR X8, [X8 + 0xC0]
	0x024E209C LDR X0, [X8 + 0x358]
	0x024E20A0 LDRB W8, [X0 + 0x135]
	0x024E20A4 LDR X23, [X23 + 0x6C8]
	0x024E20A8 TBNZ X8, 0x0, 0x24E20B0
	0x024E20AC BL 0x1C5C684
	0x024E20B0 BL 0x1C16F10
	0x024E20B4 LDR X8, [X20 + 0x20]
	0x024E20B8 MOV X22, X0
	0x024E20BC LDR X8, [X8 + 0xC0]
	0x024E20C0 LDR X1, [X8 + 0x360]
	0x024E20C4 BL 0x237BC74
	0x024E20C8 LDR X0, [X23]
	0x024E20CC BL 0x1C16F10
	0x024E20D0 MOV X1, X31
	0x024E20D4 MOV X23, X0
	0x024E20D8 BL 0x358D56C
	0x024E20DC CBZ X22, 0x24E21C4
	0x024E20E0 STR X23, [X22 + 0x10]
	0x024E20E4 CBZ X23, 0x24E21C4
	0x024E20E8 LDR X1, [X21 + 0x48]
	0x024E20EC ADRP X24, 0x1C14000
	0x024E20F0 LDR X24, [X24 + 0x2C8]
	0x024E20F4 MOV X0, X23
	0x024E20F8 MOV X2, X31
	0x024E20FC BL 0x358F32C
	0x024E2100 LDR X8, [X20 + 0x20]
	0x024E2104 LDR X8, [X8 + 0xC0]
	0x024E2108 LDR X0, [X8 + 0x20]
	0x024E210C LDRB W8, [X0 + 0x135]
	0x024E2110 TBNZ X8, 0x0, 0x24E2118
	0x024E2114 BL 0x1C5C684
	0x024E2118 BL 0x1C16F10
	0x024E211C LDR X8, [X20 + 0x20]
	0x024E2120 MOV X1, X22
	0x024E2124 MOV X23, X0
	0x024E2128 LDR X8, [X8 + 0xC0]
	0x024E212C LDR X2, [X8 + 0x368]
	0x024E2130 LDR X3, [X8 + 0x28]
	0x024E2134 BL 0x2A6B948
	0x024E2138 LDR X8, [X20 + 0x20]
	0x024E213C MOV X0, X21
	0x024E2140 MOV X1, X23
	0x024E2144 MOV X2, X31
	0x024E2148 LDR X8, [X8 + 0xC0]
	0x024E214C MOV X3, X31
	0x024E2150 LDR X8, [X8 + 0xE0]
	0x024E2154 LDR X8, [X8 + 0x20]
	0x024E2158 LDR X8, [X8 + 0xC0]
	0x024E215C LDR X4, [X8 + 0x1A0]
	0x024E2160 BL 0x24E13B8
	0x024E2164 LDR X0, [X24]
	0x024E2168 BL 0x1C16F10
	0x024E216C LDR X8, [X20 + 0x20]
	0x024E2170 MOV X1, X22
	0x024E2174 MOV X3, X31
	0x024E2178 MOV X23, X0
	0x024E217C LDR X8, [X8 + 0xC0]
	0x024E2180 LDR X2, [X8 + 0x370]
	0x024E2184 BL 0x2A6B948
	0x024E2188 LDR X8, [X20 + 0x20]
	0x024E218C MOV X0, X21
	0x024E2190 MOV X1, X23
	0x024E2194 LDR X8, [X8 + 0xC0]
	0x024E2198 LDR X2, [X8 + 0xF8]
	0x024E219C BL 0x24E0E94
	0x024E21A0 LDR X0, [X22 + 0x10]
	0x024E21A4 CBZ X0, 0x24E21C4
	0x024E21A8 MOV X1, X19
	0x024E21AC LDP X20, X19, [X31 + 0x30]
	0x024E21B0 LDP X22, X21, [X31 + 0x20]
	0x024E21B4 LDP X24, X23, [X31 + 0x10]
	0x024E21B8 MOV X2, X31
	0x024E21BC LDR X30, [X31], #0x40
	0x024E21C0 B 0x358F3D4
	0x024E21C4 BL 0x1C16F20
	0x024E21C8 STP X30, X19, [X31 - 0x10]!
	0x024E21CC MOV X19, X0
	0x024E21D0 CBZ X1, 0x24E21E8
	0x024E21D4 LDR W8, [X19 + 0x50]
	0x024E21D8 CBNZ W8, 0x24E21E8
	0x024E21DC MOV X0, X19
	0x024E21E0 MOV X2, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1EF8000
	009 Move W8, [X21+3104]
	010 Move X20, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1C14000
	018 Move X0, [X0+1456]
	019 Call 0x1C17CF4
	020 Move X0, 0x1C15000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3104], W8
	025 Move X8, [X20+32]
	026 Move X8, [X8+192]
	027 Move X0, [X8+336]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Call 0x1C17F10
	035 Move X8, [X20+32]
	036 Move X21, X0
	037 Move X8, [X8+192]
	038 Move X1, [X8+344]
	039 Call 0x2376DD8, X0
	040 Compare X21, 0
	041 JumpIfEqual {127}
	042 Move [X21+24], X22
	043 Move X8, [X20+32]
	044 Move X8, [X8+192]
	045 Move X0, [X8]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Call 0x1C17F10
	053 Move X8, [X20+32]
	054 Move X22, X0
	055 Move X8, [X8+192]
	056 Move X1, [X8+360]
	057 Call 0x24E0E84, X0
	058 Move [X21+16], X22
	059 Compare X22, 0
	060 JumpIfEqual {127}
	061 Move X8, [X20+32]
	062 Move X9, [X19+72]
	063 Move X23, 0x1C15000
	064 Move X24, 0x1C14000
	065 Move X8, [X8+192]
	066 Move [X22+72], X9
	067 Move X0, [X8+32]
	068 Move W8, [X0+309]
	069 Move X23, [X23+712]
	070 Move X24, [X24+1456]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Call 0x1C17F10
	077 Move X8, [X20+32]
	078 Move X1, X21
	079 Move X22, X0
	080 Move X8, [X8+192]
	081 Move X2, [X8+376]
	082 Move X3, [X8+40]
	083 Call Action`1<Object>..ctor, X0, X1, X2
	084 Move X0, [X23]
	085 Call 0x1C17F10
	086 Move X8, [X20+32]
	087 Move X1, X21
	088 Move X3, X31
	089 Move X23, X0
	090 Move X8, [X8+192]
	091 Move X2, [X8+384]
	092 Call Action`1<Object>..ctor, X0, X1, X2
	093 Move X8, [X20+32]
	094 Move X1, [X21+16]
	095 Move X0, X19
	096 Move X2, X22
	097 Move X8, [X8+192]
	098 Move X3, X23
	099 Move X4, [X8+312]
	100 Call 0x24E2534, X0, X1, X2, X3
	101 Move X0, [X24]
	102 Move X22, [X21+16]
	103 Call 0x1C17F10
	104 Move X8, [X20+32]
	105 Move X1, X21
	106 Move X3, X31
	107 Move X20, X0
	108 Move X8, [X8+192]
	109 Move X2, [X8+392]
	110 Call Action`1<Single>..ctor, X0, X1, X2
	111 Move W8, [X19+80]
	112 Compare W8, 0
	113 JumpIfNotEqual {118}
	114 Move X0, X19
	115 Move X1, X20
	116 Move X2, X22
	117 Call 0x24E13E8, X0, X1, X2
	118 Move X0, [X21+16]
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X22, [X31+32]
	122 Move X21, [X31+40]
	123 Move X24, [X31+16]
	124 Move X23, [X31+24]
	125 Move X30, [X31+64]
	126 Return X0
	127 Call 0x1C17F20

Method: RSG.IPromise`1<ConvertedT> Then(System.Func`2<PromisedT, RSG.IPromise`1<ConvertedT>> onResolved)

Disassembly:
	0x02135774 TBNZ X9, 0x0, 0x2135780
	0x02135778 MOV X0, X8
	0x0213577C BL 0x1C5C684
	0x02135780 MOV X0, X19
	0x02135784 LDP X20, X19, [X31 + 0x10]
	0x02135788 LDP X30, X21, [X31], #0x20
	0x0213578C RET
	0x02135790 STP X30, X21, [X31 - 0x20]!
	0x02135794 STP X20, X19, [X31 + 0x10]
	0x02135798 LDR X8, [X1 + 0x38]
	0x0213579C MOV X19, X1
	0x021357A0 MOV W20, W0
	0x021357A4 CBNZ X8, 0x21357B4
	0x021357A8 MOV X0, X19
	0x021357AC BL 0x1C5C6E0
	0x021357B0 LDR X8, [X19 + 0x38]
	0x021357B4 LDR X0, [X8]
	0x021357B8 BL 0x21A0D0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X4, [X8+8]
	015 Move X0, X20
	016 Move X1, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X2, X31
	020 Move X3, X31
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]

Method: RSG.IPromise Then(System.Func`2<PromisedT, RSG.IPromise> onResolved)

Disassembly:
	0x024E21E4 BL 0x24E03E8
	0x024E21E8 MOV X0, X19
	0x024E21EC LDP X30, X19, [X31], #0x10
	0x024E21F0 RET
	0x024E21F4 STR X30, [X31 - 0x30]!
	0x024E21F8 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X8, [X2+32]
	002 Move X2, X31
	003 Move X3, X31
	004 Move X8, [X8+192]
	005 Move X4, [X8+408]
	006 Call 0x24E223C, X0, X1, X2, X3
	007 Return X0

Method: RSG.IPromise Then(System.Action`1<PromisedT> onResolved)

Disassembly:
	0x024E21FC STP X20, X19, [X31 + 0x20]
	0x024E2200 ADRP X21, 0x1EF7000
	0x024E2204 ADRP X22, 0x1C39000
	0x024E2208 LDRB W8, [X21 + 0xC27]
	0x024E220C LDR X22, [X22 + 0x6C8]
	0x024E2210 MOV X19, X1

ISIL:
	001 Move X8, [X2+32]
	002 Move X2, X31
	003 Move X3, X31
	004 Move X8, [X8+192]
	005 Move X4, [X8+416]
	006 Call 0x24E23B8, X0, X1, X2, X3
	007 Return X0

Method: RSG.IPromise`1<ConvertedT> Then(System.Func`2<PromisedT, RSG.IPromise`1<ConvertedT>> onResolved, System.Func`2<System.Exception, RSG.IPromise`1<ConvertedT>> onRejected)

Disassembly:
	0x02135D94 BL 0x3BFFC4C
	0x02135D98 LDR X8, [X19 + 0x20]
	0x02135D9C MOV X19, X0
	0x02135DA0 LDRB W9, [X8 + 0x135]
	0x02135DA4 TBNZ X9, 0x0, 0x2135DB0
	0x02135DA8 MOV X0, X8
	0x02135DAC BL 0x1C5C684
	0x02135DB0 MOV X0, X19
	0x02135DB4 LDP X20, X19, [X31 + 0x10]
	0x02135DB8 LDP X30, X21, [X31], #0x20
	0x02135DBC RET
	0x02135DC0 STR X30, [X31 - 0x30]!
	0x02135DC4 STP X22, X21, [X31 + 0x10]
	0x02135DC8 STP X20, X19, [X31 + 0x20]
	0x02135DCC LDR X8, [X1 + 0x38]
	0x02135DD0 MOV X19, X1
	0x02135DD4 MOV W20, W0
	0x02135DD8 CBNZ X8, 0x2135DE8
	0x02135DDC MOV X0, X19
	0x02135DE0 BL 0x1C5C6E0
	0x02135DE4 LDR X8, [X19 + 0x38]
	0x02135DE8 LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {16}
	012 Move X0, X3
	013 Move X22, X3
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X4, [X8+16]
	017 Move X0, X21
	018 Move X1, X20
	019 Move X2, X19
	020 Move X5, [X4]
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X3, X31
	026 Move X30, [X31+48]
	027 CallNoReturn X5

Method: RSG.IPromise Then(System.Func`2<PromisedT, RSG.IPromise> onResolved, System.Action`1<System.Exception> onRejected)

Disassembly:
	0x024E2214 MOV X20, X0
	0x024E2218 TBNZ X8, 0x0, 0x24E2230
	0x024E221C ADRP X0, 0x1C39000
	0x024E2220 LDR X0, [X0 + 0x6C8]
	0x024E2224 BL 0x1C16CF4

ISIL:
	001 Move X8, [X3+32]
	002 Move X3, X31
	003 Move X8, [X8+192]
	004 Move X4, [X8+408]
	005 Call 0x24E223C, X0, X1, X2, X3
	006 Return X0

Method: RSG.IPromise Then(System.Action`1<PromisedT> onResolved, System.Action`1<System.Exception> onRejected)

Disassembly:
	0x024E2228 MOVZ W8, 0x1
	0x024E222C STRB W8, [X21 + 0xC27]
	0x024E2230 LDR X0, [X22]
	0x024E2234 LDR W8, [X0 + 0xE0]
	0x024E2238 CBNZ W8, 0x24E2240

ISIL:
	001 Move X8, [X3+32]
	002 Move X3, X31
	003 Move X8, [X8+192]
	004 Move X4, [X8+416]
	005 Call 0x24E23B8, X0, X1, X2, X3
	006 Return X0

Method: RSG.IPromise`1<ConvertedT> Then(System.Func`2<PromisedT, RSG.IPromise`1<ConvertedT>> onResolved, System.Func`2<System.Exception, RSG.IPromise`1<ConvertedT>> onRejected, System.Action`1<System.Single> onProgress)

Disassembly:
	0x021357BC LDR X8, [X19 + 0x20]
	0x021357C0 MOV X21, X0
	0x021357C4 LDRB W9, [X8 + 0x135]
	0x021357C8 TBNZ X9, 0x0, 0x21357D4
	0x021357CC MOV X0, X8
	0x021357D0 BL 0x1C5C684
	0x021357D4 MOVZ W2, 0x8
	0x021357D8 MOV X0, X21
	0x021357DC MOV X1, X31
	0x021357E0 MOV W3, W20
	0x021357E4 MOV X4, X31
	0x021357E8 BL 0x3BFFC4C
	0x021357EC LDR X8, [X19 + 0x20]
	0x021357F0 MOV X19, X0
	0x021357F4 LDRB W9, [X8 + 0x135]
	0x021357F8 TBNZ X9, 0x0, 0x2135804
	0x021357FC MOV X0, X8
	0x02135800 BL 0x1C5C684
	0x02135804 MOV X0, X19
	0x02135808 LDP X20, X19, [X31 + 0x10]
	0x0213580C LDP X30, X21, [X31], #0x20
	0x02135810 RET
	0x02135814 STP X30, X21, [X31 - 0x20]!
	0x02135818 STP X20, X19, [X31 + 0x10]
	0x0213581C LDR X8, [X1 + 0x38]
	0x02135820 MOV X19, X1
	0x02135824 MOV W20, W0
	0x02135828 CBNZ X8, 0x2135838
	0x0213582C MOV X0, X19
	0x02135830 BL 0x1C5C6E0
	0x02135834 LDR X8, [X19 + 0x38]
	0x02135838 LDR X0, [X8]
	0x0213583C BL 0x21A0D68
	0x02135840 LDR X8, [X19 + 0x20]
	0x02135844 MOV X21, X0
	0x02135848 LDRB W9, [X8 + 0x135]
	0x0213584C TBNZ X9, 0x0, 0x2135858
	0x02135850 MOV X0, X8
	0x02135854 BL 0x1C5C684
	0x02135858 MOVZ W2, 0x8
	0x0213585C MOV X0, X21
	0x02135860 MOV X1, X31
	0x02135864 MOV W3, W20
	0x02135868 MOV X4, X31
	0x0213586C BL 0x3BFFC4C
	0x02135870 LDR X8, [X19 + 0x20]
	0x02135874 MOV X19, X0
	0x02135878 LDRB W9, [X8 + 0x135]
	0x0213587C TBNZ X9, 0x0, 0x2135888
	0x02135880 MOV X0, X8
	0x02135884 BL 0x1C5C684
	0x02135888 MOV X0, X19
	0x0213588C LDP X20, X19, [X31 + 0x10]
	0x02135890 LDP X30, X21, [X31], #0x20
	0x02135894 RET
	0x02135898 STP X30, X21, [X31 - 0x20]!
	0x0213589C STP X20, X19, [X31 + 0x10]
	0x021358A0 LDR X8, [X1 + 0x38]
	0x021358A4 MOV X19, X1
	0x021358A8 MOV W20, W0
	0x021358AC CBNZ X8, 0x21358BC
	0x021358B0 MOV X0, X19
	0x021358B4 BL 0x1C5C6E0
	0x021358B8 LDR X8, [X19 + 0x38]
	0x021358BC LDR X0, [X8]
	0x021358C0 BL 0x21A0DC4
	0x021358C4 LDR X8, [X19 + 0x20]
	0x021358C8 MOV X21, X0
	0x021358CC LDRB W9, [X8 + 0x135]
	0x021358D0 TBNZ X9, 0x0, 0x21358DC
	0x021358D4 MOV X0, X8
	0x021358D8 BL 0x1C5C684
	0x021358DC MOVZ W2, 0x8
	0x021358E0 MOV X0, X21
	0x021358E4 MOV X1, X31
	0x021358E8 MOV W3, W20
	0x021358EC MOV X4, X31
	0x021358F0 BL 0x3BFFC4C
	0x021358F4 LDR X8, [X19 + 0x20]
	0x021358F8 MOV X19, X0
	0x021358FC LDRB W9, [X8 + 0x135]
	0x02135900 TBNZ X9, 0x0, 0x213590C
	0x02135904 MOV X0, X8
	0x02135908 BL 0x1C5C684
	0x0213590C MOV X0, X19
	0x02135910 LDP X20, X19, [X31 + 0x10]
	0x02135914 LDP X30, X21, [X31], #0x20
	0x02135918 RET
	0x0213591C STP X30, X21, [X31 - 0x20]!
	0x02135920 STP X20, X19, [X31 + 0x10]
	0x02135924 LDR X8, [X1 + 0x38]
	0x02135928 MOV X19, X1
	0x0213592C MOV W20, W0
	0x02135930 CBNZ X8, 0x2135940
	0x02135934 MOV X0, X19
	0x02135938 BL 0x1C5C6E0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X20, X4
	010 Move X19, X3
	011 Move X23, X2
	012 Move X24, X1
	013 Move X21, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {25}
	016 Move X0, 0x1FC2000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {25}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Move X8, [X20+56]
	025 Move X0, [X8]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Call 0x1C17F10
	033 Move X8, [X20+56]
	034 Move X22, X0
	035 Move X1, [X8+8]
	036 Call 0x2378BD4, X0
	037 Compare X22, 0
	038 JumpIfEqual {116}
	039 Move [X22+16], X24
	040 Move [X22+32], X23
	041 Move X8, [X20+56]
	042 Move X0, [X8+32]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Call 0x1C17F10
	050 Move X8, [X20+56]
	051 Move X23, X0
	052 Move X1, [X8+40]
	053 Call 0x24E0E84, X0
	054 Move [X22+24], X23
	055 Compare X23, 0
	056 JumpIfEqual {116}
	057 Move X8, [X20+56]
	058 Move X1, [X21+72]
	059 Move X0, X23
	060 Move X2, [X8+48]
	061 Call 0x24E1E8C, X0, X1
	062 Move X8, [X20+32]
	063 Move X8, [X8+192]
	064 Move X0, [X8+32]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Call 0x1C17F10
	072 Move X8, [X20+32]
	073 Move X9, [X20+56]
	074 Move X1, X22
	075 Move X23, X0
	076 Move X8, [X8+192]
	077 Move X2, [X9+64]
	078 Move X3, [X8+40]
	079 Call Action`1<Object>..ctor, X0, X1, X2
	080 Move X8, 0x1FC2000
	081 Move X8, [X8+712]
	082 Move X0, [X8]
	083 Call 0x1C17F10
	084 Move X8, [X20+56]
	085 Move X1, X22
	086 Move X3, X31
	087 Move X24, X0
	088 Move X2, [X8+72]
	089 Call Action`1<Object>..ctor, X0, X1, X2
	090 Move X8, [X20+32]
	091 Move X1, [X22+24]
	092 Move X0, X21
	093 Move X2, X23
	094 Move X8, [X8+192]
	095 Move X3, X24
	096 Move X4, [X8+312]
	097 Call 0x24E2534, X0, X1, X2, X3
	098 Compare X19, 0
	099 JumpIfEqual {107}
	100 Move X8, [X20+32]
	101 Move X0, X21
	102 Move X1, X21
	103 Move X2, X19
	104 Move X8, [X8+192]
	105 Move X3, [X8+328]
	106 Call 0x24E25C4, X0, X1, X2
	107 Move X0, [X22+24]
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X24, [X31+16]
	113 Move X23, [X31+24]
	114 Move X30, [X31+64]
	115 Return X0
	116 Call 0x1C17F20

Method: RSG.IPromise Then(System.Func`2<PromisedT, RSG.IPromise> onResolved, System.Action`1<System.Exception> onRejected, System.Action`1<System.Single> onProgress)

Disassembly:
	0x024E223C BL 0x1C16DFC
	0x024E2240 MOV X0, X20
	0x024E2244 MOV X1, X19
	0x024E2248 LDP X20, X19, [X31 + 0x20]
	0x024E224C LDP X22, X21, [X31 + 0x10]
	0x024E2250 MOV X2, X31
	0x024E2254 LDR X30, [X31], #0x30
	0x024E2258 B 0x35903D8
	0x024E225C STR X30, [X31 - 0x30]!
	0x024E2260 STP X22, X21, [X31 + 0x10]
	0x024E2264 STP X20, X19, [X31 + 0x20]
	0x024E2268 ADRP X21, 0x1EF7000
	0x024E226C ADRP X22, 0x1C39000
	0x024E2270 LDRB W8, [X21 + 0xC28]
	0x024E2274 LDR X22, [X22 + 0x6C8]
	0x024E2278 MOV X19, X1
	0x024E227C MOV X20, X0
	0x024E2280 TBNZ X8, 0x0, 0x24E2298
	0x024E2284 ADRP X0, 0x1C39000
	0x024E2288 LDR X0, [X0 + 0x6C8]
	0x024E228C BL 0x1C16CF4
	0x024E2290 MOVZ W8, 0x1
	0x024E2294 STRB W8, [X21 + 0xC28]
	0x024E2298 LDR X0, [X22]
	0x024E229C LDR W8, [X0 + 0xE0]
	0x024E22A0 CBNZ W8, 0x24E22A8
	0x024E22A4 BL 0x1C16DFC
	0x024E22A8 MOV X0, X20
	0x024E22AC MOV X1, X19
	0x024E22B0 LDP X20, X19, [X31 + 0x20]
	0x024E22B4 LDP X22, X21, [X31 + 0x10]
	0x024E22B8 MOV X2, X31
	0x024E22BC LDR X30, [X31], #0x30
	0x024E22C0 B 0x35903D8
	0x024E22C4 STR X30, [X31 - 0x30]!
	0x024E22C8 STP X22, X21, [X31 + 0x10]
	0x024E22CC STP X20, X19, [X31 + 0x20]
	0x024E22D0 ADRP X21, 0x1EF7000
	0x024E22D4 ADRP X22, 0x1C39000
	0x024E22D8 LDRB W8, [X21 + 0xC29]
	0x024E22DC LDR X22, [X22 + 0x6C8]
	0x024E22E0 MOV X19, X1
	0x024E22E4 MOV X20, X0
	0x024E22E8 TBNZ X8, 0x0, 0x24E2300
	0x024E22EC ADRP X0, 0x1C39000
	0x024E22F0 LDR X0, [X0 + 0x6C8]
	0x024E22F4 BL 0x1C16CF4
	0x024E22F8 MOVZ W8, 0x1
	0x024E22FC STRB W8, [X21 + 0xC29]
	0x024E2300 LDR X0, [X22]
	0x024E2304 LDR W8, [X0 + 0xE0]
	0x024E2308 CBNZ W8, 0x24E2310
	0x024E230C BL 0x1C16DFC
	0x024E2310 MOV X0, X20
	0x024E2314 MOV X1, X19
	0x024E2318 LDP X20, X19, [X31 + 0x20]
	0x024E231C LDP X22, X21, [X31 + 0x10]
	0x024E2320 MOV X2, X31
	0x024E2324 LDR X30, [X31], #0x30
	0x024E2328 B 0x35903D8
	0x024E232C STR X30, [X31 - 0x10]!
	0x024E2330 LDR X8, [X1 + 0x20]
	0x024E2334 LDR X8, [X8 + 0xC0]
	0x024E2338 LDR X8, [X8]
	0x024E233C LDR X8, [X8 + 0x80]
	0x024E2340 ADD X1, X8, 0xC0
	0x024E2344 BL 0x1C16D18
	0x024E2348 LDR W0, [X0]
	0x024E234C LDR X30, [X31], #0x10
	0x024E2350 RET
	0x024E2354 STR X30, [X31 - 0x10]!
	0x024E2358 LDR X8, [X1 + 0x20]
	0x024E235C LDR X8, [X8 + 0xC0]
	0x024E2360 LDR X8, [X8]
	0x024E2364 LDR X8, [X8 + 0x80]
	0x024E2368 ADD X1, X8, 0xE0
	0x024E236C BL 0x1C16D18
	0x024E2370 LDR X0, [X0]
	0x024E2374 LDR X30, [X31], #0x10
	0x024E2378 RET
	0x024E237C STP X30, X21, [X31 - 0x20]!
	0x024E2380 STP X20, X19, [X31 + 0x10]
	0x024E2384 LDR X8, [X2 + 0x20]
	0x024E2388 MOV X19, X1
	0x024E238C MOV X20, X0
	0x024E2390 MOVZ W1, 0x8
	0x024E2394 LDR X8, [X8 + 0xC0]
	0x024E2398 LDR X8, [X8]
	0x024E239C LDR X8, [X8 + 0x80]
	0x024E23A0 ADD X21, X8, 0xE0
	0x024E23A4 MOV X0, X21
	0x024E23A8 BL 0x1C16D14
	0x024E23AC MOV X0, X20
	0x024E23B0 MOV X1, X21
	0x024E23B4 BL 0x1C16D18

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1EF8000
	009 Move W8, [X22+3105]
	010 Move X21, X4
	011 Move X19, X3
	012 Move X23, X2
	013 Move X24, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x1C15000
	020 Move X0, [X0+712]
	021 Call 0x1C17CF4
	022 Move X0, 0x1C3A000
	023 Move X0, [X0+1736]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3105], W8
	027 Move X8, [X21+32]
	028 Move X8, [X8+192]
	029 Move X0, [X8+424]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Call 0x1C17F10
	037 Move X8, [X21+32]
	038 Move X22, X0
	039 Move X8, [X8+192]
	040 Move X1, [X8+432]
	041 Call 0x2379808, X0
	042 Compare X22, 0
	043 JumpIfEqual {114}
	044 Move X8, 0x1C3A000
	045 Move X8, [X8+1736]
	046 Move [X22+16], X24
	047 Move [X22+32], X23
	048 Move X0, [X8]
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X23, X0
	052 Call Promise..ctor, X0
	053 Move [X22+24], X23
	054 Compare X23, 0
	055 JumpIfEqual {114}
	056 Move X1, [X20+72]
	057 Move X24, 0x1C15000
	058 Move X24, [X24+712]
	059 Move X0, X23
	060 Move X2, X31
	061 Call Promise.WithName, X0, X1
	062 Move X8, [X21+32]
	063 Move X8, [X8+192]
	064 Move X0, [X8+32]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Call 0x1C17F10
	072 Move X8, [X21+32]
	073 Move X1, X22
	074 Move X23, X0
	075 Move X8, [X8+192]
	076 Move X2, [X8+440]
	077 Move X3, [X8+40]
	078 Call Action`1<Object>..ctor, X0, X1, X2
	079 Move X0, [X24]
	080 Call 0x1C17F10
	081 Move X8, [X21+32]
	082 Move X1, X22
	083 Move X3, X31
	084 Move X24, X0
	085 Move X8, [X8+192]
	086 Move X2, [X8+448]
	087 Call Action`1<Object>..ctor, X0, X1, X2
	088 Move X8, [X21+32]
	089 Move X1, [X22+24]
	090 Move X0, X20
	091 Move X2, X23
	092 Move X8, [X8+192]
	093 Move X3, X24
	094 Move X4, [X8+312]
	095 Call 0x24E2534, X0, X1, X2, X3
	096 Compare X19, 0
	097 JumpIfEqual {105}
	098 Move W8, [X20+80]
	099 Compare W8, 0
	100 JumpIfNotEqual {105}
	101 Move X0, X20
	102 Move X1, X19
	103 Move X2, X20
	104 Call 0x24E13E8, X0, X1, X2
	105 Move X0, [X22+24]
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X30, [X31+64]
	113 Return X0
	114 Call 0x1C17F20

Method: RSG.IPromise Then(System.Action`1<PromisedT> onResolved, System.Action`1<System.Exception> onRejected, System.Action`1<System.Single> onProgress)

Disassembly:
	0x024E23B8 STR X19, [X0]
	0x024E23BC LDP X20, X19, [X31 + 0x10]
	0x024E23C0 LDP X30, X21, [X31], #0x20
	0x024E23C4 RET
	0x024E23C8 STR X30, [X31 - 0x10]!
	0x024E23CC LDR X8, [X1 + 0x20]
	0x024E23D0 LDR X8, [X8 + 0xC0]
	0x024E23D4 LDR X8, [X8]
	0x024E23D8 LDR X8, [X8 + 0x80]
	0x024E23DC ADD X1, X8, 0x100
	0x024E23E0 BL 0x1C16D18
	0x024E23E4 LDR W0, [X0]
	0x024E23E8 LDR X30, [X31], #0x10
	0x024E23EC RET
	0x024E23F0 STP X30, X21, [X31 - 0x20]!
	0x024E23F4 STP X20, X19, [X31 + 0x10]
	0x024E23F8 LDR X8, [X2 + 0x20]
	0x024E23FC MOV W19, W1
	0x024E2400 MOV X20, X0
	0x024E2404 MOVZ W1, 0x4
	0x024E2408 LDR X8, [X8 + 0xC0]
	0x024E240C LDR X8, [X8]
	0x024E2410 LDR X8, [X8 + 0x80]
	0x024E2414 ADD X21, X8, 0x100
	0x024E2418 MOV X0, X21
	0x024E241C BL 0x1C16D14
	0x024E2420 MOV X0, X20
	0x024E2424 MOV X1, X21
	0x024E2428 BL 0x1C16D18
	0x024E242C STR W19, [X0]
	0x024E2430 LDP X20, X19, [X31 + 0x10]
	0x024E2434 LDP X30, X21, [X31], #0x20
	0x024E2438 RET
	0x024E243C STR X30, [X31 - 0x30]!
	0x024E2440 STP X22, X21, [X31 + 0x10]
	0x024E2444 STP X20, X19, [X31 + 0x20]
	0x024E2448 ADRP X21, 0x1EF7000
	0x024E244C ADRP X22, 0x1C39000
	0x024E2450 LDRB W8, [X21 + 0xC2A]
	0x024E2454 LDR X22, [X22 + 0x6C8]
	0x024E2458 MOV X20, X1
	0x024E245C MOV X19, X0
	0x024E2460 TBNZ X8, 0x0, 0x24E2484
	0x024E2464 ADRP X0, 0x1C3A000
	0x024E2468 LDR X0, [X0 + 0xF38]
	0x024E246C BL 0x1C16CF4
	0x024E2470 ADRP X0, 0x1C39000
	0x024E2474 LDR X0, [X0 + 0x6C8]
	0x024E2478 BL 0x1C16CF4
	0x024E247C MOVZ W8, 0x1
	0x024E2480 STRB W8, [X21 + 0xC2A]
	0x024E2484 MOV X0, X19
	0x024E2488 MOV X1, X31
	0x024E248C BL 0x33BDD8C
	0x024E2490 LDR X8, [X20 + 0x20]
	0x024E2494 MOV X0, X19
	0x024E2498 MOV W1, W31
	0x024E249C LDR X8, [X8 + 0xC0]
	0x024E24A0 LDR X2, [X8 + 0x8]
	0x024E24A4 LDR X8, [X2]
	0x024E24A8 BLR X8
	0x024E24AC LDR X0, [X22]
	0x024E24B0 LDR W8, [X0 + 0xE0]
	0x024E24B4 CBNZ W8, 0x24E24BC
	0x024E24B8 BL 0x1C16DFC
	0x024E24BC MOV X0, X31
	0x024E24C0 BL 0x358DFB8
	0x024E24C4 LDR X8, [X20 + 0x20]
	0x024E24C8 MOV W21, W0
	0x024E24CC MOVZ W1, 0x4
	0x024E24D0 LDR X8, [X8 + 0xC0]
	0x024E24D4 LDR X8, [X8]
	0x024E24D8 LDR X8, [X8 + 0x80]
	0x024E24DC ADD X20, X8, 0xC0
	0x024E24E0 MOV X0, X20
	0x024E24E4 BL 0x1C16D14
	0x024E24E8 MOV X0, X19
	0x024E24EC MOV X1, X20
	0x024E24F0 BL 0x1C16D18
	0x024E24F4 STR W21, [X0]
	0x024E24F8 LDR X0, [X22]
	0x024E24FC LDR X8, [X0 + 0xB8]
	0x024E2500 LDRB W9, [X8]
	0x024E2504 CBZ W9, 0x24E2544
	0x024E2508 LDR W9, [X0 + 0xE0]
	0x024E250C CBNZ W9, 0x24E251C
	0x024E2510 BL 0x1C16DFC
	0x024E2514 LDR X8, [X22]
	0x024E2518 LDR X8, [X8 + 0xB8]
	0x024E251C LDR X0, [X8 + 0x18]
	0x024E2520 CBZ X0, 0x24E2554
	0x024E2524 ADRP X8, 0x1C3A000
	0x024E2528 LDR X8, [X8 + 0xF38]
	0x024E252C MOV X1, X19
	0x024E2530 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1EF8000
	009 Move W8, [X22+3106]
	010 Move X21, X4
	011 Move X19, X3
	012 Move X23, X2
	013 Move X24, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x1C15000
	020 Move X0, [X0+712]
	021 Call 0x1C17CF4
	022 Move X0, 0x1C3A000
	023 Move X0, [X0+1736]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3106], W8
	027 Move X8, [X21+32]
	028 Move X8, [X8+192]
	029 Move X0, [X8+456]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Call 0x1C17F10
	037 Move X8, [X21+32]
	038 Move X22, X0
	039 Move X8, [X8+192]
	040 Move X1, [X8+464]
	041 Call 0x2379E48, X0
	042 Compare X22, 0
	043 JumpIfEqual {114}
	044 Move X8, 0x1C3A000
	045 Move X8, [X8+1736]
	046 Move [X22+16], X24
	047 Move [X22+32], X23
	048 Move X0, [X8]
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X23, X0
	052 Call Promise..ctor, X0
	053 Move [X22+24], X23
	054 Compare X23, 0
	055 JumpIfEqual {114}
	056 Move X1, [X20+72]
	057 Move X24, 0x1C15000
	058 Move X24, [X24+712]
	059 Move X0, X23
	060 Move X2, X31
	061 Call Promise.WithName, X0, X1
	062 Move X8, [X21+32]
	063 Move X8, [X8+192]
	064 Move X0, [X8+32]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Call 0x1C17F10
	072 Move X8, [X21+32]
	073 Move X1, X22
	074 Move X23, X0
	075 Move X8, [X8+192]
	076 Move X2, [X8+472]
	077 Move X3, [X8+40]
	078 Call Action`1<Object>..ctor, X0, X1, X2
	079 Move X0, [X24]
	080 Call 0x1C17F10
	081 Move X8, [X21+32]
	082 Move X1, X22
	083 Move X3, X31
	084 Move X24, X0
	085 Move X8, [X8+192]
	086 Move X2, [X8+480]
	087 Call Action`1<Object>..ctor, X0, X1, X2
	088 Move X8, [X21+32]
	089 Move X1, [X22+24]
	090 Move X0, X20
	091 Move X2, X23
	092 Move X8, [X8+192]
	093 Move X3, X24
	094 Move X4, [X8+312]
	095 Call 0x24E2534, X0, X1, X2, X3
	096 Compare X19, 0
	097 JumpIfEqual {105}
	098 Move W8, [X20+80]
	099 Compare W8, 0
	100 JumpIfNotEqual {105}
	101 Move X0, X20
	102 Move X1, X19
	103 Move X2, X20
	104 Call 0x24E13E8, X0, X1, X2
	105 Move X0, [X22+24]
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X30, [X31+64]
	113 Return X0
	114 Call 0x1C17F20

Method: RSG.IPromise`1<ConvertedT> Then(System.Func`2<PromisedT, ConvertedT> transform)

Disassembly:
	0x021356C8 BL 0x1C5C684
	0x021356CC MOVZ W2, 0x8
	0x021356D0 MOV X0, X21
	0x021356D4 MOV X1, X31
	0x021356D8 MOV W3, W20
	0x021356DC MOV X4, X31
	0x021356E0 BL 0x3BFFC4C
	0x021356E4 LDR X8, [X19 + 0x20]
	0x021356E8 MOV X19, X0
	0x021356EC LDRB W9, [X8 + 0x135]
	0x021356F0 TBNZ X9, 0x0, 0x21356FC
	0x021356F4 MOV X0, X8
	0x021356F8 BL 0x1C5C684
	0x021356FC MOV X0, X19
	0x02135700 LDP X20, X19, [X31 + 0x10]
	0x02135704 LDP X30, X21, [X31], #0x20
	0x02135708 RET
	0x0213570C STP X30, X21, [X31 - 0x20]!
	0x02135710 STP X20, X19, [X31 + 0x10]
	0x02135714 LDR X8, [X1 + 0x38]
	0x02135718 MOV X19, X1
	0x0213571C MOV W20, W0
	0x02135720 CBNZ X8, 0x2135730
	0x02135724 MOV X0, X19
	0x02135728 BL 0x1C5C6E0
	0x0213572C LDR X8, [X19 + 0x38]
	0x02135730 LDR X0, [X8]
	0x02135734 BL 0x21A0CB0
	0x02135738 LDR X8, [X19 + 0x20]
	0x0213573C MOV X21, X0
	0x02135740 LDRB W9, [X8 + 0x135]
	0x02135744 TBNZ X9, 0x0, 0x2135750
	0x02135748 MOV X0, X8
	0x0213574C BL 0x1C5C684
	0x02135750 MOVZ W2, 0x8
	0x02135754 MOV X0, X21
	0x02135758 MOV X1, X31
	0x0213575C MOV W3, W20
	0x02135760 MOV X4, X31
	0x02135764 BL 0x3BFFC4C
	0x02135768 LDR X8, [X19 + 0x20]
	0x0213576C MOV X19, X0
	0x02135770 LDRB W9, [X8 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X21, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move X8, [X19+56]
	015 Move X0, [X8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Call 0x1C17F10
	023 Move X8, [X19+56]
	024 Move X22, X0
	025 Move X1, [X8+8]
	026 Call 0x237A008, X0
	027 Compare X22, 0
	028 JumpIfEqual {54}
	029 Move [X22+16], X21
	030 Move X8, [X19+56]
	031 Move X0, [X8+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Call 0x1C17F10
	039 Move X8, [X19+56]
	040 Move X1, X22
	041 Move X21, X0
	042 Move X2, [X8+24]
	043 Move X3, [X8+40]
	044 Call Func`2<Object, Object>..ctor, X0, X1, X2
	045 Move X8, [X19+56]
	046 Move X0, X20
	047 Move X1, X21
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X2, [X8+48]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Call 0x1C17F20

Method: System.Void ActionHandlers(RSG.IRejectable resultPromise, System.Action`1<PromisedT> resolveHandler, System.Action`1<System.Exception> rejectHandler)

Disassembly:
	0x024E2534 LDP X22, X21, [X31 + 0x10]
	0x024E2538 LDR X2, [X8]
	0x024E253C LDR X30, [X31], #0x30
	0x024E2540 B 0x2DBEF30
	0x024E2544 LDP X20, X19, [X31 + 0x20]
	0x024E2548 LDP X22, X21, [X31 + 0x10]
	0x024E254C LDR X30, [X31], #0x30
	0x024E2550 RET
	0x024E2554 BL 0x1C16F20
	0x024E2558 SUB X31, X31, 0x50
	0x024E255C STR X30, [X31 + 0x10]
	0x024E2560 STP X24, X23, [X31 + 0x20]
	0x024E2564 STP X22, X21, [X31 + 0x30]
	0x024E2568 STP X20, X19, [X31 + 0x40]
	0x024E256C ADRP X22, 0x1EF7000
	0x024E2570 ADRP X24, 0x1C39000
	0x024E2574 LDRB W8, [X22 + 0xC2B]
	0x024E2578 LDR X24, [X24 + 0x6C8]
	0x024E257C MOV X20, X2
	0x024E2580 MOV X21, X1
	0x024E2584 MOV X19, X0
	0x024E2588 TBNZ X8, 0x0, 0x24E25B8
	0x024E258C ADRP X0, 0x1C14000
	0x024E2590 LDR X0, [X0 + 0x2C8]
	0x024E2594 BL 0x1C16CF4
	0x024E2598 ADRP X0, 0x1C3A000
	0x024E259C LDR X0, [X0 + 0xF38]
	0x024E25A0 BL 0x1C16CF4
	0x024E25A4 ADRP X0, 0x1C39000
	0x024E25A8 LDR X0, [X0 + 0x6C8]
	0x024E25AC BL 0x1C16CF4
	0x024E25B0 MOVZ W8, 0x1
	0x024E25B4 STRB W8, [X22 + 0xC2B]
	0x024E25B8 MOV X0, X19
	0x024E25BC MOV X1, X31
	0x024E25C0 BL 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X4+32]
	006 Move W9, [X0+80]
	007 Move X19, X3
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X20, X1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X3, [X21+24]
	014 Move X4, [X8+144]
	015 Move X0, X21
	016 Move X1, X2
	017 Move X3, [X21+16]
	018 Move X4, [X8+488]
	019 Move X0, X21
	020 Move X1, X19
	021 Move X2, X20
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call 0x2135454, X0, X1, X2, X3
	027 Return 
	028 Move X3, [X8+496]
	029 Move X0, X21
	030 Move X1, X2
	031 Move X2, X20
	032 Call 0x24E123C, X0, X1, X2
	033 Move X1, X19
	034 Move X2, X20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X0, X21
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call 0x24E113C, X0, X1, X2
	041 Return 

Method: System.Void ProgressHandlers(RSG.IRejectable resultPromise, System.Action`1<System.Single> progressHandler)

Disassembly:
	0x024E25C4 LDR X8, [X20 + 0x20]
	0x024E25C8 MOV X0, X19
	0x024E25CC MOV W1, W31
	0x024E25D0 LDR X8, [X8 + 0xC0]
	0x024E25D4 LDR X2, [X8 + 0x8]
	0x024E25D8 LDR X8, [X2]
	0x024E25DC BLR X8

ISIL:
	001 Move W9, [X0+80]
	002 Compare W9, 0
	003 JumpIfEqual {5}
	004 Return 
	005 Move X8, X1
	006 Move X1, X2
	007 Move X2, X8
	008 Call 0x24E13E8, X0, X1, X2
	009 Return 

Method: RSG.IPromise`1<System.Collections.Generic.IEnumerable`1<ConvertedT>> ThenAll(System.Func`2<PromisedT, System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<ConvertedT>>> chain)

Disassembly:
	0x02135F9C MOV X0, X8
	0x02135FA0 BL 0x1C5C684
	0x02135FA4 LDR X8, [X22 + 0x20]
	0x02135FA8 ADD X9, X8, 0x135
	0x02135FAC LDRH W9, [X9]
	0x02135FB0 B 0x2135FB8
	0x02135FB4 MOV X0, X8
	0x02135FB8 LDR X10, [X0 + 0xC0]
	0x02135FBC LDR X10, [X10 + 0x18]
	0x02135FC0 LDR X4, [X10]
	0x02135FC4 TBNZ X9, 0x0, 0x2135FDC
	0x02135FC8 MOV X0, X8
	0x02135FCC STR X4, [X31 + 0x8]
	0x02135FD0 BL 0x1C5C684
	0x02135FD4 LDR X4, [X31 + 0x8]
	0x02135FD8 MOV X8, X0
	0x02135FDC LDR X8, [X8 + 0xC0]
	0x02135FE0 MOV W0, W19
	0x02135FE4 MOV X1, X20
	0x02135FE8 MOV X2, X21
	0x02135FEC LDR X3, [X8 + 0x18]
	0x02135FF0 LDP X20, X19, [X31 + 0x20]
	0x02135FF4 LDP X22, X21, [X31 + 0x10]
	0x02135FF8 LDR X30, [X31], #0x30
	0x02135FFC BR X4
	0x02136000 STP X30, X23, [X31 - 0x30]!
	0x02136004 STP X22, X21, [X31 + 0x10]
	0x02136008 STP X20, X19, [X31 + 0x20]
	0x0213600C LDR X8, [X2 + 0x38]
	0x02136010 MOV X19, X2
	0x02136014 MOV X20, X1
	0x02136018 MOV W21, W0
	0x0213601C CBNZ X8, 0x213602C
	0x02136020 MOV X0, X19
	0x02136024 BL 0x1C5C6E0
	0x02136028 LDR X8, [X19 + 0x38]
	0x0213602C LDR X0, [X8]
	0x02136030 LDR X8, [X0]
	0x02136034 BLR X8
	0x02136038 LDR X8, [X19 + 0x20]
	0x0213603C MOV X22, X0
	0x02136040 ADD X9, X8, 0x135
	0x02136044 LDRH W9, [X9]
	0x02136048 TBNZ X9, 0x0, 0x2136064
	0x0213604C MOV X0, X8
	0x02136050 BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X21, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move X8, [X19+56]
	015 Move X0, [X8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Call 0x1C17F10
	023 Move X8, [X19+56]
	024 Move X22, X0
	025 Move X1, [X8+8]
	026 Move X8, [X1]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X22, 0
	029 JumpIfEqual {58}
	030 Move [X22+16], X21
	031 Move X8, [X19+56]
	032 Move X0, [X8+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+56]
	041 Move X1, X22
	042 Move X21, X0
	043 Move X3, [X8+40]
	044 Move X2, [X8+24]
	045 Move X9, [X3]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X19+56]
	048 Move X0, X20
	049 Move X1, X21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X2, [X8+48]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X3, [X2]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: RSG.IPromise ThenAll(System.Func`2<PromisedT, System.Collections.Generic.IEnumerable`1<RSG.IPromise>> chain)

Disassembly:
	0x024E25E0 LDR X0, [X24]
	0x024E25E4 LDR W8, [X0 + 0xE0]
	0x024E25E8 CBNZ W8, 0x24E25F0
	0x024E25EC BL 0x1C16DFC
	0x024E25F0 MOV X0, X31
	0x024E25F4 BL 0x358DFB8
	0x024E25F8 LDR X8, [X20 + 0x20]
	0x024E25FC MOV W22, W0
	0x024E2600 MOVZ W1, 0x4
	0x024E2604 LDR X8, [X8 + 0xC0]
	0x024E2608 LDR X8, [X8]
	0x024E260C LDR X8, [X8 + 0x80]
	0x024E2610 ADD X23, X8, 0xC0
	0x024E2614 MOV X0, X23
	0x024E2618 BL 0x1C16D14
	0x024E261C MOV X0, X19
	0x024E2620 MOV X1, X23
	0x024E2624 BL 0x1C16D18
	0x024E2628 STR W22, [X0]
	0x024E262C LDR X0, [X24]
	0x024E2630 LDR X8, [X0 + 0xB8]
	0x024E2634 LDRB W9, [X8]
	0x024E2638 CBZ W9, 0x24E266C
	0x024E263C LDR W9, [X0 + 0xE0]
	0x024E2640 CBNZ W9, 0x24E2650
	0x024E2644 BL 0x1C16DFC
	0x024E2648 LDR X8, [X24]
	0x024E264C LDR X8, [X8 + 0xB8]
	0x024E2650 LDR X0, [X8 + 0x18]
	0x024E2654 CBZ X0, 0x24E2724
	0x024E2658 ADRP X8, 0x1C3A000
	0x024E265C LDR X8, [X8 + 0xF38]
	0x024E2660 MOV X1, X19
	0x024E2664 LDR X2, [X8]
	0x024E2668 BL 0x2DBEF30
	0x024E266C LDR X8, [X20 + 0x20]
	0x024E2670 LDR X8, [X8 + 0xC0]
	0x024E2674 LDR X0, [X8 + 0x20]
	0x024E2678 LDRB W8, [X0 + 0x135]
	0x024E267C TBNZ X8, 0x0, 0x24E2684
	0x024E2680 BL 0x1C5C684
	0x024E2684 BL 0x1C16F10
	0x024E2688 CBZ X19, 0x24E271C
	0x024E268C LDR X8, [X20 + 0x20]
	0x024E2690 MOV X22, X0
	0x024E2694 LDR X8, [X8 + 0xC0]
	0x024E2698 LDR X3, [X8 + 0x28]
	0x024E269C LDR X8, [X19]
	0x024E26A0 LDR X9, [X3]
	0x024E26A4 LDR X2, [X8 + 0x320]
	0x024E26A8 MOV X1, X19
	0x024E26AC BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X2
	008 Move X22, X1
	009 Move X20, X0
	010 Move X8, [X8+192]
	011 Move X8, [X8+520]
	012 Move W9, [X8+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X0, X8
	021 Call 0x1C17F10
	022 Move X8, [X19+32]
	023 Move X21, X0
	024 Move X8, [X8+192]
	025 Move X1, [X8+528]
	026 Call 0x237A264, X0
	027 Compare X21, 0
	028 JumpIfEqual {64}
	029 Move [X21+16], X22
	030 Move X8, [X19+32]
	031 Move X8, [X8+192]
	032 Move X0, [X8+400]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+32]
	041 Move X1, X21
	042 Move X22, X0
	043 Move X8, [X8+192]
	044 Move X2, [X8+544]
	045 Move X3, [X8+552]
	046 Call Func`2<Object, Object>..ctor, X0, X1, X2
	047 Move X8, [X19+32]
	048 Move X0, X20
	049 Move X1, X22
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X8, [X8+192]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X2, X31
	056 Move X3, X31
	057 Move X8, [X8+560]
	058 Move X8, [X8+32]
	059 Move X8, [X8+192]
	060 Move X4, [X8+408]
	061 Move X30, [X31+48]
	062 Call 0x24E223C, X0, X1, X2, X3
	063 Return X0
	064 Call 0x1C17F20

Method: RSG.IPromise`1<System.Collections.Generic.IEnumerable`1<PromisedT>> All(RSG.IPromise`1<PromisedT>[] promises)

Disassembly:
	0x024E26B0 ADRP X8, 0x1C14000
	0x024E26B4 LDR X8, [X8 + 0x2C8]
	0x024E26B8 LDR X0, [X8]
	0x024E26BC BL 0x1C16F10
	0x024E26C0 LDR X8, [X19]
	0x024E26C4 MOV X23, X0
	0x024E26C8 LDR X2, [X8 + 0x340]
	0x024E26CC MOV X1, X19
	0x024E26D0 MOV X3, X31
	0x024E26D4 BL 0x2A6B948
	0x024E26D8 CBZ X21, 0x24E2720
	0x024E26DC LDR X8, [X20 + 0x20]
	0x024E26E0 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, X19
	015 Move X1, [X8+576]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]

Method: RSG.IPromise`1<System.Collections.Generic.IEnumerable`1<PromisedT>> All(System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<PromisedT>> promises)

Disassembly:
	0x024E26E4 LDR X1, [X8 + 0x38]
	0x024E26E8 LDR X0, [X1]
	0x024E26EC STP X22, X23, [X31]
	0x024E26F0 LDR X8, [X1 + 0x10]
	0x024E26F4 ADD X3, X31, 0x0
	0x024E26F8 MOV X2, X21
	0x024E26FC MOV X4, X23
	0x024E2700 BLR X8
	0x024E2704 LDP X20, X19, [X31 + 0x40]
	0x024E2708 LDP X22, X21, [X31 + 0x30]
	0x024E270C LDP X24, X23, [X31 + 0x20]
	0x024E2710 LDR X30, [X31 + 0x10]
	0x024E2714 ADD X31, X31, 0x50
	0x024E2718 RET
	0x024E271C BL 0x1C16F20
	0x024E2720 BL 0x1C16F20
	0x024E2724 BL 0x1C16F20
	0x024E2728 B 0x24E272C
	0x024E272C MOV X21, X0
	0x024E2730 CMP W1, 0x1
	0x024E2734 B.NE 0x24E27B0
	0x024E2738 MOV X0, X21
	0x024E273C BL 0x3EB1AD0
	0x024E2740 MOV X21, X0
	0x024E2744 ADRP X0, 0x1C11000
	0x024E2748 LDR X0, [X0 + 0x7D0]
	0x024E274C BL 0x1C16D08
	0x024E2750 LDR X8, [X21]
	0x024E2754 LDR X1, [X8]
	0x024E2758 BL 0x1C17270
	0x024E275C TBZ X0, 0x0, 0x24E2788
	0x024E2760 LDR X21, [X21]
	0x024E2764 BL 0x3EB1AE0
	0x024E2768 LDR X8, [X20 + 0x20]
	0x024E276C MOV X0, X19
	0x024E2770 MOV X1, X21
	0x024E2774 LDR X8, [X8 + 0xC0]
	0x024E2778 LDR X2, [X8 + 0x30]
	0x024E277C LDR X8, [X2]
	0x024E2780 BLR X8
	0x024E2784 B 0x24E2704
	0x024E2788 MOVZ W0, 0x8
	0x024E278C BL 0x3EB1AF0
	0x024E2790 LDR X8, [X21]
	0x024E2794 STR X8, [X0]
	0x024E2798 ADRP X1, 0x19D2000
	0x024E279C ADD X1, X1, 0xE58
	0x024E27A0 MOV X2, X31
	0x024E27A4 BL 0x3EB1B00
	0x024E27A8 MOV X21, X0
	0x024E27AC BL 0x3EB1AE0
	0x024E27B0 MOV X0, X21
	0x024E27B4 BL 0x1D2C690
	0x024E27B8 BL 0x1990590
	0x024E27BC STR X30, [X31 - 0x40]!
	0x024E27C0 STP X24, X23, [X31 + 0x10]
	0x024E27C4 STP X22, X21, [X31 + 0x20]
	0x024E27C8 STP X20, X19, [X31 + 0x30]
	0x024E27CC ADRP X23, 0x1EF7000
	0x024E27D0 LDRB W8, [X23 + 0xC2C]
	0x024E27D4 MOV X22, X3
	0x024E27D8 MOV X19, X2
	0x024E27DC MOV X20, X1
	0x024E27E0 MOV X21, X0
	0x024E27E4 TBNZ X8, 0x0, 0x24E2814
	0x024E27E8 ADRP X0, 0x1C3A000
	0x024E27EC LDR X0, [X0 + 0xF40]
	0x024E27F0 BL 0x1C16CF4
	0x024E27F4 ADRP X0, 0x1C3A000
	0x024E27F8 LDR X0, [X0 + 0xF48]
	0x024E27FC BL 0x1C16CF4
	0x024E2800 ADRP X0, 0x1C3A000
	0x024E2804 LDR X0, [X0 + 0xF50]
	0x024E2808 BL 0x1C16CF4
	0x024E280C MOVZ W8, 0x1
	0x024E2810 STRB W8, [X23 + 0xC2C]
	0x024E2814 LDR X8, [X22 + 0x20]
	0x024E2818 MOV X0, X21
	0x024E281C LDR X8, [X8 + 0xC0]
	0x024E2820 LDR X8, [X8]
	0x024E2824 LDR X8, [X8 + 0x80]
	0x024E2828 ADD X1, X8, 0x40
	0x024E282C BL 0x1C16D18
	0x024E2830 LDR X8, [X0]
	0x024E2834 CBNZ X8, 0x24E288C
	0x024E2838 ADRP X8, 0x1C3A000
	0x024E283C LDR X8, [X8 + 0xF50]
	0x024E2840 LDR X0, [X8]
	0x024E2844 BL 0x1C16F10
	0x024E2848 ADRP X8, 0x1C3A000
	0x024E284C LDR X8, [X8 + 0xF48]
	0x024E2850 MOV X23, X0
	0x024E2854 LDR X1, [X8]
	0x024E2858 BL 0x3040B5C
	0x024E285C LDR X8, [X22 + 0x20]
	0x024E2860 MOVZ W1, 0x8
	0x024E2864 LDR X8, [X8 + 0xC0]
	0x024E2868 LDR X8, [X8]
	0x024E286C LDR X8, [X8 + 0x80]
	0x024E2870 ADD X24, X8, 0x40
	0x024E2874 MOV X0, X24
	0x024E2878 BL 0x1C16D14
	0x024E287C MOV X0, X21
	0x024E2880 MOV X1, X24
	0x024E2884 BL 0x1C16D18
	0x024E2888 STR X23, [X0]
	0x024E288C LDR X8, [X22 + 0x20]
	0x024E2890 MOV X0, X21
	0x024E2894 LDR X8, [X8 + 0xC0]
	0x024E2898 LDR X8, [X8]
	0x024E289C LDR X8, [X8 + 0x80]
	0x024E28A0 ADD X1, X8, 0x40
	0x024E28A4 BL 0x1C16D18
	0x024E28A8 LDR X0, [X0]
	0x024E28AC CBZ X0, 0x24E292C
	0x024E28B0 ADRP X9, 0x1C3A000
	0x024E28B4 LDR X9, [X9 + 0xF40]
	0x024E28B8 LDR W10, [X0 + 0x1C]
	0x024E28BC LDR X8, [X0 + 0x10]
	0x024E28C0 LDR X9, [X9]
	0x024E28C4 ADD W10, W10, 0x1
	0x024E28C8 STR W10, [X0 + 0x1C]
	0x024E28CC CBZ X8, 0x24E292C
	0x024E28D0 LDRSW X10, [X0 + 0x18]
	0x024E28D4 LDR W11, [X8 + 0x18]
	0x024E28D8 CMP W10, W11
	0x024E28DC B.CS 0x24E2904
	0x024E28E0 ADD W9, W10, 0x1
	0x024E28E4 ADD X8, X8, X10, 0x4, LSL
	0x024E28E8 STR W9, [X0 + 0x18]
	0x024E28EC STP X20, X19, [X8 + 0x20]
	0x024E28F0 LDP X20, X19, [X31 + 0x30]
	0x024E28F4 LDP X22, X21, [X31 + 0x20]
	0x024E28F8 LDP X24, X23, [X31 + 0x10]
	0x024E28FC LDR X30, [X31], #0x40
	0x024E2900 RET
	0x024E2904 LDR X8, [X9 + 0x20]
	0x024E2908 MOV X1, X20
	0x024E290C MOV X2, X19
	0x024E2910 LDP X20, X19, [X31 + 0x30]
	0x024E2914 LDR X8, [X8 + 0xC0]
	0x024E2918 LDP X22, X21, [X31 + 0x20]
	0x024E291C LDP X24, X23, [X31 + 0x10]
	0x024E2920 LDR X3, [X8 + 0x70]
	0x024E2924 LDR X30, [X31], #0x40
	0x024E2928 B 0x3041368
	0x024E292C BL 0x1C16F20
	0x024E2930 STR X30, [X31 - 0x40]!
	0x024E2934 STP X24, X23, [X31 + 0x10]
	0x024E2938 STP X22, X21, [X31 + 0x20]
	0x024E293C STP X20, X19, [X31 + 0x30]
	0x024E2940 ADRP X23, 0x1EF7000
	0x024E2944 LDRB W8, [X23 + 0xC2D]
	0x024E2948 MOV X21, X3
	0x024E294C MOV X19, X2
	0x024E2950 MOV X22, X1
	0x024E2954 MOV X20, X0
	0x024E2958 TBNZ X8, 0x0, 0x24E2988
	0x024E295C ADRP X0, 0x1C3A000
	0x024E2960 LDR X0, [X0 + 0xF58]
	0x024E2964 BL 0x1C16CF4
	0x024E2968 ADRP X0, 0x1C3A000
	0x024E296C LDR X0, [X0 + 0xF60]
	0x024E2970 BL 0x1C16CF4
	0x024E2974 ADRP X0, 0x1C3A000
	0x024E2978 LDR X0, [X0 + 0xF68]
	0x024E297C BL 0x1C16CF4
	0x024E2980 MOVZ W8, 0x1
	0x024E2984 STRB W8, [X23 + 0xC2D]
	0x024E2988 LDR X8, [X21 + 0x20]
	0x024E298C MOV X0, X20
	0x024E2990 LDR X8, [X8 + 0xC0]
	0x024E2994 LDR X8, [X8]
	0x024E2998 LDR X8, [X8 + 0x80]
	0x024E299C ADD X1, X8, 0x80
	0x024E29A0 BL 0x1C16D18
	0x024E29A4 LDR X8, [X0]
	0x024E29A8 CBNZ X8, 0x24E2A10
	0x024E29AC LDR X8, [X21 + 0x20]
	0x024E29B0 LDR X8, [X8 + 0xC0]
	0x024E29B4 LDR X0, [X8 + 0x40]
	0x024E29B8 LDRB W8, [X0 + 0x135]
	0x024E29BC TBNZ X8, 0x0, 0x24E29C4
	0x024E29C0 BL 0x1C5C684
	0x024E29C4 BL 0x1C16F10
	0x024E29C8 LDR X8, [X21 + 0x20]
	0x024E29CC MOV X23, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1EF8000
	008 Move W8, [X20+3107]
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x1C12000
	016 Move X0, [X0+1592]
	017 Call 0x1C17CF4
	018 Move X0, 0x1C3B000
	019 Move X0, [X0+4088]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3107], W8
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+608]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Call 0x1C17F10
	039 Move X8, [X19+32]
	040 Move X20, X0
	041 Move W9, [X8+309]
	042 Move TEMP, X9
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X8
	047 Call 0x1C5D684
	048 Move X8, X0
	049 Move X8, [X8+192]
	050 Move X0, X20
	051 Move X1, [X8+616]
	052 Call 0x237A46C, X0
	053 Move X0, [X19+32]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move X8, [X0+192]
	061 Move X0, X21
	062 Move X1, [X8+624]
	063 Call Enumerable.ToArray, X0
	064 Compare X0, 0
	065 JumpIfEqual {262}
	066 Move X22, [X0+24]
	067 Move X21, X0
	068 Compare X22, 0
	069 JumpIfEqual {170}
	070 Compare X20, 0
	071 JumpIfEqual {262}
	072 Move [X20+40], W22
	073 Move X0, [X19+32]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+192]
	081 Move X23, 0x1C12000
	082 Move X0, [X8+664]
	083 Move W8, [X0+309]
	084 Move X23, [X23+1592]
	085 Move TEMP, X8
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {90}
	089 Call 0x1C5D684
	090 Move W1, W22
	091 Call 0x1C17D6C
	092 Move [X20+32], X0
	093 Move W1, [X20+40]
	094 Move X0, [X23]
	095 Call 0x1C17D6C
	096 Move [X20+16], X0
	097 Move X0, [X19+32]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move X8, [X0+192]
	105 Move X0, [X8+680]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Call 0x1C17F10
	113 Move X8, [X19+32]
	114 Move X22, X0
	115 Move W9, [X8+309]
	116 Move TEMP, X9
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {123}
	120 Move X0, X8
	121 Call 0x1C5D684
	122 Move X8, X0
	123 Move X8, [X8+192]
	124 Move X0, X22
	125 Move X1, [X8+688]
	126 Call 0x24E0E84, X0
	127 Move [X20+24], X22
	128 Compare X22, 0
	129 JumpIfEqual {262}
	130 Move X8, 0x1C3B000
	131 Move X0, [X19+32]
	132 Move X8, [X8+4088]
	133 Move W9, [X0+309]
	134 Move X23, [X8]
	135 Move TEMP, X9
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {141}
	139 Call 0x1C5D684
	140 Move X0, [X19+32]
	141 Move [X22+72], X23
	142 Move W8, [X0+309]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {148}
	147 Call 0x1C5D684
	148 Move X8, [X0+192]
	149 Move X0, [X8+712]
	150 Move W8, [X0+309]
	151 Move TEMP, X8
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {156}
	155 Call 0x1C5D684
	156 Call 0x1C17F10
	157 Move X8, [X19+32]
	158 Move X22, X0
	159 Add X9, X8, 309
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Move TEMP, X9
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {226}
	165 Move X0, X8
	166 Call 0x1C5D684
	167 Move X8, [X19+32]
	168 Add X9, X8, 309
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Move X0, [X19+32]
	171 Move W8, [X0+309]
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {177}
	176 Call 0x1C5D684
	177 Move X8, [X0+192]
	178 Move X20, [X8+632]
	179 Move X8, [X20+56]
	180 Compare X8, 0
	181 JumpIfNotEqual {185}
	182 Move X0, X20
	183 Call 0x1C5D6E0
	184 Move X8, [X20+56]
	185 Move X0, [X8+16]
	186 Move W8, [X0+309]
	187 Move TEMP, X8
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {192}
	191 Call 0x1C5D684
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X8, [X20+56]
	197 Move X0, [X8+16]
	198 Move W8, [X0+309]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {204}
	203 Call 0x1C5D684
	204 Move X8, [X19+32]
	205 Move X9, [X0+184]
	206 Move W10, [X8+309]
	207 Move X19, [X9]
	208 Move TEMP, X10
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfEqual {215}
	212 Move X0, X8
	213 Call 0x1C5D684
	214 Move X8, X0
	215 Move X8, [X8+192]
	216 Move X0, X19
	217 Move X20, [X31+32]
	218 Move X19, [X31+40]
	219 Move X22, [X31+16]
	220 Move X21, [X31+24]
	221 Move X1, [X8+648]
	222 Move X30, [X31+48]
	223 Move X23, [X31+56]
	224 Call 0x24E2D38, X0
	225 Return X0
	226 Move X0, X8
	227 Move X10, [X0+192]
	228 Move X23, [X10+704]
	229 Move TEMP, X9
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {236}
	233 Move X0, X8
	234 Call 0x1C5D684
	235 Move X8, X0
	236 Move X8, [X8+192]
	237 Move X0, X22
	238 Move X1, X20
	239 Move X2, X23
	240 Move X3, [X8+720]
	241 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	242 Move X0, [X19+32]
	243 Move W8, [X0+309]
	244 Move TEMP, X8
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {249}
	248 Call 0x1C5D684
	249 Move X8, [X0+192]
	250 Move X0, X21
	251 Move X1, X22
	252 Move X2, [X8+728]
	253 Call 0x21DC000, X0, X1
	254 Move X0, [X20+24]
	255 Move X20, [X31+32]
	256 Move X19, [X31+40]
	257 Move X22, [X31+16]
	258 Move X21, [X31+24]
	259 Move X30, [X31+48]
	260 Move X23, [X31+56]
	261 Return X0
	262 Call 0x1C17F20

Method: RSG.IPromise`1<ConvertedT> ThenRace(System.Func`2<PromisedT, System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<ConvertedT>>> chain)

Disassembly:
	0x02136054 LDR X8, [X19 + 0x20]
	0x02136058 ADD X9, X8, 0x135
	0x0213605C LDRH W9, [X9]
	0x02136060 B 0x2136068
	0x02136064 MOV X0, X8
	0x02136068 LDR X10, [X0 + 0xC0]
	0x0213606C LDR X10, [X10 + 0x28]
	0x02136070 LDR X23, [X10]
	0x02136074 TBNZ X9, 0x0, 0x2136084
	0x02136078 MOV X0, X8
	0x0213607C BL 0x1C5C684
	0x02136080 MOV X8, X0
	0x02136084 LDR X8, [X8 + 0xC0]
	0x02136088 LDR X0, [X8 + 0x28]
	0x0213608C BLR X23
	0x02136090 CMP W21, 0x0
	0x02136094 MOVZ W8, 0x10
	0x02136098 MOV W2, W0
	0x0213609C CSEL W3, W8, W21, EQ
	0x021360A0 MOV X0, X20
	0x021360A4 MOV X1, X22
	0x021360A8 MOV X4, X31
	0x021360AC BL 0x37025C8
	0x021360B0 LDR X8, [X19 + 0x20]
	0x021360B4 MOV X19, X0
	0x021360B8 LDRB W9, [X8 + 0x135]
	0x021360BC TBNZ X9, 0x0, 0x21360C8
	0x021360C0 MOV X0, X8
	0x021360C4 BL 0x1C5C684
	0x021360C8 MOV X0, X19
	0x021360CC LDP X20, X19, [X31 + 0x20]
	0x021360D0 LDP X22, X21, [X31 + 0x10]
	0x021360D4 LDP X30, X23, [X31], #0x30
	0x021360D8 RET
	0x021360DC STP X30, X23, [X31 - 0x30]!
	0x021360E0 STP X22, X21, [X31 + 0x10]
	0x021360E4 STP X20, X19, [X31 + 0x20]
	0x021360E8 LDR X8, [X2 + 0x38]
	0x021360EC MOV X19, X2
	0x021360F0 MOV X20, X1
	0x021360F4 MOV W21, W0
	0x021360F8 CBNZ X8, 0x2136108
	0x021360FC MOV X0, X19
	0x02136100 BL 0x1C5C6E0
	0x02136104 LDR X8, [X19 + 0x38]
	0x02136108 LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X21, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move X8, [X19+56]
	015 Move X0, [X8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Call 0x1C17F10
	023 Move X8, [X19+56]
	024 Move X22, X0
	025 Move X1, [X8+8]
	026 Move X8, [X1]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X22, 0
	029 JumpIfEqual {58}
	030 Move [X22+16], X21
	031 Move X8, [X19+56]
	032 Move X0, [X8+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+56]
	041 Move X1, X22
	042 Move X21, X0
	043 Move X3, [X8+40]
	044 Move X2, [X8+24]
	045 Move X9, [X3]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X19+56]
	048 Move X0, X20
	049 Move X1, X21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X2, [X8+48]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X3, [X2]
	056 Move X30, [X31+48]
	057 CallNoReturn X3
	058 Call 0x1C17F20

Method: RSG.IPromise ThenRace(System.Func`2<PromisedT, System.Collections.Generic.IEnumerable`1<RSG.IPromise>> chain)

Disassembly:
	0x024E29D0 LDR X8, [X8 + 0xC0]
	0x024E29D4 LDR X1, [X8 + 0x48]
	0x024E29D8 LDR X8, [X1]
	0x024E29DC BLR X8
	0x024E29E0 LDR X8, [X21 + 0x20]
	0x024E29E4 MOVZ W1, 0x8
	0x024E29E8 LDR X8, [X8 + 0xC0]
	0x024E29EC LDR X8, [X8]
	0x024E29F0 LDR X8, [X8 + 0x80]
	0x024E29F4 ADD X24, X8, 0x80
	0x024E29F8 MOV X0, X24
	0x024E29FC BL 0x1C16D14
	0x024E2A00 MOV X0, X20
	0x024E2A04 MOV X1, X24
	0x024E2A08 BL 0x1C16D18
	0x024E2A0C STR X23, [X0]
	0x024E2A10 LDR X8, [X21 + 0x20]
	0x024E2A14 MOV X0, X20
	0x024E2A18 LDR X8, [X8 + 0xC0]
	0x024E2A1C LDR X8, [X8]
	0x024E2A20 LDR X8, [X8 + 0x80]
	0x024E2A24 ADD X1, X8, 0xA0
	0x024E2A28 BL 0x1C16D18
	0x024E2A2C LDR X8, [X0]
	0x024E2A30 CBNZ X8, 0x24E2A88
	0x024E2A34 ADRP X8, 0x1C3A000
	0x024E2A38 LDR X8, [X8 + 0xF68]
	0x024E2A3C LDR X0, [X8]
	0x024E2A40 BL 0x1C16F10
	0x024E2A44 ADRP X8, 0x1C3A000
	0x024E2A48 LDR X8, [X8 + 0xF60]
	0x024E2A4C MOV X23, X0
	0x024E2A50 LDR X1, [X8]
	0x024E2A54 BL 0x301B7C4
	0x024E2A58 LDR X8, [X21 + 0x20]
	0x024E2A5C MOVZ W1, 0x8
	0x024E2A60 LDR X8, [X8 + 0xC0]
	0x024E2A64 LDR X8, [X8]
	0x024E2A68 LDR X8, [X8 + 0x80]
	0x024E2A6C ADD X24, X8, 0xA0
	0x024E2A70 MOV X0, X24
	0x024E2A74 BL 0x1C16D14
	0x024E2A78 MOV X0, X20
	0x024E2A7C MOV X1, X24
	0x024E2A80 BL 0x1C16D18
	0x024E2A84 STR X23, [X0]
	0x024E2A88 LDR X8, [X21 + 0x20]
	0x024E2A8C MOV X0, X20
	0x024E2A90 LDR X8, [X8 + 0xC0]
	0x024E2A94 LDR X8, [X8]
	0x024E2A98 LDR X8, [X8 + 0x80]
	0x024E2A9C ADD X1, X8, 0x80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X2
	008 Move X22, X1
	009 Move X20, X0
	010 Move X8, [X8+192]
	011 Move X8, [X8+736]
	012 Move W9, [X8+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X0, X8
	021 Call 0x1C17F10
	022 Move X8, [X19+32]
	023 Move X21, X0
	024 Move X8, [X8+192]
	025 Move X1, [X8+744]
	026 Call 0x237B7FC, X0
	027 Compare X21, 0
	028 JumpIfEqual {64}
	029 Move [X21+16], X22
	030 Move X8, [X19+32]
	031 Move X8, [X8+192]
	032 Move X0, [X8+400]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+32]
	041 Move X1, X21
	042 Move X22, X0
	043 Move X8, [X8+192]
	044 Move X2, [X8+752]
	045 Move X3, [X8+552]
	046 Call Func`2<Object, Object>..ctor, X0, X1, X2
	047 Move X8, [X19+32]
	048 Move X0, X20
	049 Move X1, X22
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X8, [X8+192]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X2, X31
	056 Move X3, X31
	057 Move X8, [X8+560]
	058 Move X8, [X8+32]
	059 Move X8, [X8+192]
	060 Move X4, [X8+408]
	061 Move X30, [X31+48]
	062 Call 0x24E223C, X0, X1, X2, X3
	063 Return X0
	064 Call 0x1C17F20

Method: RSG.IPromise`1<PromisedT> Race(RSG.IPromise`1<PromisedT>[] promises)

Disassembly:
	0x024E2AA0 BL 0x1C16D18
	0x024E2AA4 LDR X2, [X0]
	0x024E2AA8 CBZ X2, 0x24E2B60
	0x024E2AAC LDR X8, [X21 + 0x20]
	0x024E2AB0 ADD X3, X31, 0x8
	0x024E2AB4 MOV X4, X22
	0x024E2AB8 LDR X8, [X8 + 0xC0]
	0x024E2ABC LDR X1, [X8 + 0x50]
	0x024E2AC0 LDR X0, [X1]
	0x024E2AC4 STR X22, [X31 + 0x8]
	0x024E2AC8 LDR X8, [X1 + 0x10]
	0x024E2ACC BLR X8
	0x024E2AD0 LDR X8, [X21 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, X19
	015 Move X1, [X8+760]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]

Method: RSG.IPromise`1<PromisedT> Race(System.Collections.Generic.IEnumerable`1<RSG.IPromise`1<PromisedT>> promises)

Disassembly:
	0x024E2AD4 MOV X0, X20
	0x024E2AD8 LDR X8, [X8 + 0xC0]
	0x024E2ADC LDR X8, [X8]
	0x024E2AE0 LDR X8, [X8 + 0x80]
	0x024E2AE4 ADD X1, X8, 0xA0
	0x024E2AE8 BL 0x1C16D18
	0x024E2AEC LDR X0, [X0]
	0x024E2AF0 CBZ X0, 0x24E2B60
	0x024E2AF4 ADRP X9, 0x1C3A000
	0x024E2AF8 LDR X9, [X9 + 0xF58]
	0x024E2AFC LDR W10, [X0 + 0x1C]
	0x024E2B00 LDR X8, [X0 + 0x10]
	0x024E2B04 LDR X9, [X9]
	0x024E2B08 ADD W10, W10, 0x1
	0x024E2B0C STR W10, [X0 + 0x1C]
	0x024E2B10 CBZ X8, 0x24E2B60
	0x024E2B14 LDRSW X10, [X0 + 0x18]
	0x024E2B18 LDR W11, [X8 + 0x18]
	0x024E2B1C CMP W10, W11
	0x024E2B20 B.CS 0x24E2B38
	0x024E2B24 ADD W9, W10, 0x1
	0x024E2B28 ADD X8, X8, X10, 0x3, LSL
	0x024E2B2C STR W9, [X0 + 0x18]
	0x024E2B30 STR X19, [X8 + 0x20]
	0x024E2B34 B 0x24E2B4C
	0x024E2B38 LDR X8, [X9 + 0x20]
	0x024E2B3C MOV X1, X19
	0x024E2B40 LDR X8, [X8 + 0xC0]
	0x024E2B44 LDR X2, [X8 + 0x70]
	0x024E2B48 BL 0x301BF90
	0x024E2B4C LDP X20, X19, [X31 + 0x30]
	0x024E2B50 LDP X22, X21, [X31 + 0x20]
	0x024E2B54 LDP X24, X23, [X31 + 0x10]
	0x024E2B58 LDR X30, [X31], #0x40
	0x024E2B5C RET
	0x024E2B60 BL 0x1C16F20
	0x024E2B64 STR X30, [X31 - 0x40]!
	0x024E2B68 STP X24, X23, [X31 + 0x10]
	0x024E2B6C STP X22, X21, [X31 + 0x20]
	0x024E2B70 STP X20, X19, [X31 + 0x30]
	0x024E2B74 ADRP X23, 0x1EF7000
	0x024E2B78 LDRB W8, [X23 + 0xC2E]
	0x024E2B7C MOV X22, X3
	0x024E2B80 MOV X19, X2
	0x024E2B84 MOV X20, X1
	0x024E2B88 MOV X21, X0
	0x024E2B8C TBNZ X8, 0x0, 0x24E2BBC
	0x024E2B90 ADRP X0, 0x1C3A000
	0x024E2B94 LDR X0, [X0 + 0xF70]
	0x024E2B98 BL 0x1C16CF4
	0x024E2B9C ADRP X0, 0x1C3A000
	0x024E2BA0 LDR X0, [X0 + 0xF78]
	0x024E2BA4 BL 0x1C16CF4
	0x024E2BA8 ADRP X0, 0x1C3A000
	0x024E2BAC LDR X0, [X0 + 0xF80]
	0x024E2BB0 BL 0x1C16CF4
	0x024E2BB4 MOVZ W8, 0x1
	0x024E2BB8 STRB W8, [X23 + 0xC2E]
	0x024E2BBC LDR X8, [X22 + 0x20]
	0x024E2BC0 MOV X0, X21
	0x024E2BC4 LDR X8, [X8 + 0xC0]
	0x024E2BC8 LDR X8, [X8]
	0x024E2BCC LDR X8, [X8 + 0x80]
	0x024E2BD0 ADD X1, X8, 0x60
	0x024E2BD4 BL 0x1C16D18
	0x024E2BD8 LDR X8, [X0]
	0x024E2BDC CBNZ X8, 0x24E2C34
	0x024E2BE0 ADRP X8, 0x1C3A000
	0x024E2BE4 LDR X8, [X8 + 0xF80]
	0x024E2BE8 LDR X0, [X8]
	0x024E2BEC BL 0x1C16F10
	0x024E2BF0 ADRP X8, 0x1C3A000
	0x024E2BF4 LDR X8, [X8 + 0xF78]
	0x024E2BF8 MOV X23, X0
	0x024E2BFC LDR X1, [X8]
	0x024E2C00 BL 0x3026FDC
	0x024E2C04 LDR X8, [X22 + 0x20]
	0x024E2C08 MOVZ W1, 0x8
	0x024E2C0C LDR X8, [X8 + 0xC0]
	0x024E2C10 LDR X8, [X8]
	0x024E2C14 LDR X8, [X8 + 0x80]
	0x024E2C18 ADD X24, X8, 0x60
	0x024E2C1C MOV X0, X24
	0x024E2C20 BL 0x1C16D14
	0x024E2C24 MOV X0, X21
	0x024E2C28 MOV X1, X24
	0x024E2C2C BL 0x1C16D18
	0x024E2C30 STR X23, [X0]
	0x024E2C34 LDR X8, [X22 + 0x20]
	0x024E2C38 MOV X0, X21
	0x024E2C3C LDR X8, [X8 + 0xC0]
	0x024E2C40 LDR X8, [X8]
	0x024E2C44 LDR X8, [X8 + 0x80]
	0x024E2C48 ADD X1, X8, 0x60
	0x024E2C4C BL 0x1C16D18
	0x024E2C50 LDR X0, [X0]
	0x024E2C54 CBZ X0, 0x24E2CD4
	0x024E2C58 ADRP X9, 0x1C3A000
	0x024E2C5C LDR X9, [X9 + 0xF70]
	0x024E2C60 LDR W10, [X0 + 0x1C]
	0x024E2C64 LDR X8, [X0 + 0x10]
	0x024E2C68 LDR X9, [X9]
	0x024E2C6C ADD W10, W10, 0x1
	0x024E2C70 STR W10, [X0 + 0x1C]
	0x024E2C74 CBZ X8, 0x24E2CD4
	0x024E2C78 LDRSW X10, [X0 + 0x18]
	0x024E2C7C LDR W11, [X8 + 0x18]
	0x024E2C80 CMP W10, W11
	0x024E2C84 B.CS 0x24E2CAC
	0x024E2C88 ADD W9, W10, 0x1
	0x024E2C8C ADD X8, X8, X10, 0x4, LSL
	0x024E2C90 STR W9, [X0 + 0x18]
	0x024E2C94 STP X20, X19, [X8 + 0x20]
	0x024E2C98 LDP X20, X19, [X31 + 0x30]
	0x024E2C9C LDP X22, X21, [X31 + 0x20]
	0x024E2CA0 LDP X24, X23, [X31 + 0x10]
	0x024E2CA4 LDR X30, [X31], #0x40
	0x024E2CA8 RET
	0x024E2CAC LDR X8, [X9 + 0x20]
	0x024E2CB0 MOV X1, X20
	0x024E2CB4 MOV X2, X19
	0x024E2CB8 LDP X20, X19, [X31 + 0x30]
	0x024E2CBC LDR X8, [X8 + 0xC0]
	0x024E2CC0 LDP X22, X21, [X31 + 0x20]
	0x024E2CC4 LDP X24, X23, [X31 + 0x10]
	0x024E2CC8 LDR X3, [X8 + 0x70]
	0x024E2CCC LDR X30, [X31], #0x40
	0x024E2CD0 B 0x30277E8
	0x024E2CD4 BL 0x1C16F20
	0x024E2CD8 STP X30, X21, [X31 - 0x20]!
	0x024E2CDC STP X20, X19, [X31 + 0x10]
	0x024E2CE0 LDR X8, [X1 + 0x20]
	0x024E2CE4 MOV X20, X1
	0x024E2CE8 MOV X19, X0
	0x024E2CEC MOVZ W1, 0x8
	0x024E2CF0 LDR X8, [X8 + 0xC0]
	0x024E2CF4 LDR X8, [X8]
	0x024E2CF8 LDR X8, [X8 + 0x80]
	0x024E2CFC ADD X21, X8, 0x40
	0x024E2D00 MOV X0, X21
	0x024E2D04 BL 0x1C16D14
	0x024E2D08 MOV X0, X19
	0x024E2D0C MOV X1, X21
	0x024E2D10 BL 0x1C16D18
	0x024E2D14 STR X31, [X0]
	0x024E2D18 LDR X8, [X20 + 0x20]
	0x024E2D1C MOVZ W1, 0x8
	0x024E2D20 LDR X8, [X8 + 0xC0]
	0x024E2D24 LDR X8, [X8]
	0x024E2D28 LDR X8, [X8 + 0x80]
	0x024E2D2C ADD X21, X8, 0x80
	0x024E2D30 MOV X0, X21
	0x024E2D34 BL 0x1C16D14

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1EF8000
	009 Move W8, [X20+3108]
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1C12000
	017 Move X0, [X0+1592]
	018 Call 0x1C17CF4
	019 Move X0, 0x1C3C000
	020 Move X0, [X0]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3108], W8
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+768]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+32]
	041 Move X20, X0
	042 Move W9, [X8+309]
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, X0
	050 Move X8, [X8+192]
	051 Move X0, X20
	052 Move X1, [X8+776]
	053 Call 0x237BDC0, X0
	054 Move X0, [X19+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, X21
	063 Move X1, [X8+624]
	064 Call Enumerable.ToArray, X0
	065 Compare X0, 0
	066 JumpIfEqual {189}
	067 Move X8, [X0+24]
	068 Move X21, X0
	069 Compare X8, 0
	070 JumpIfEqual {190}
	071 Move X0, [X19+32]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Move X8, [X0+192]
	079 Move X0, [X8]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Call 0x1C17F10
	087 Move X8, [X19+32]
	088 Move X22, X0
	089 Move W9, [X8+309]
	090 Move TEMP, X9
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Move X0, X8
	095 Call 0x1C5D684
	096 Move X8, X0
	097 Move X8, [X8+192]
	098 Move X0, X22
	099 Move X1, [X8+360]
	100 Call 0x24E0E84, X0
	101 Compare X20, 0
	102 JumpIfEqual {189}
	103 Move [X20+16], X22
	104 Compare X22, 0
	105 JumpIfEqual {189}
	106 Move X8, 0x1C3C000
	107 Move X0, [X19+32]
	108 Move X8, [X8]
	109 Move X23, 0x1C12000
	110 Move W9, [X0+309]
	111 Move X24, [X8]
	112 Move X23, [X23+1592]
	113 Move TEMP, X9
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {118}
	117 Call 0x1C5D684
	118 Move [X22+72], X24
	119 Move X0, [X23]
	120 Move W1, [X21+24]
	121 Call 0x1C17D6C
	122 Move [X20+24], X0
	123 Move X0, [X19+32]
	124 Move W8, [X0+309]
	125 Move TEMP, X8
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {130}
	129 Call 0x1C5D684
	130 Move X8, [X0+192]
	131 Move X0, [X8+712]
	132 Move W8, [X0+309]
	133 Move TEMP, X8
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {138}
	137 Call 0x1C5D684
	138 Call 0x1C17F10
	139 Move X8, [X19+32]
	140 Move X22, X0
	141 Add X9, X8, 309
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Move TEMP, X9
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {152}
	147 Move X0, X8
	148 Call 0x1C5D684
	149 Move X8, [X19+32]
	150 Add X9, X8, 309
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Move X0, X8
	153 Move X10, [X0+192]
	154 Move X23, [X10+784]
	155 Move TEMP, X9
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {162}
	159 Move X0, X8
	160 Call 0x1C5D684
	161 Move X8, X0
	162 Move X8, [X8+192]
	163 Move X0, X22
	164 Move X1, X20
	165 Move X2, X23
	166 Move X3, [X8+720]
	167 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move W8, [X0+309]
	170 Move TEMP, X8
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {175}
	174 Call 0x1C5D684
	175 Move X8, [X0+192]
	176 Move X0, X21
	177 Move X1, X22
	178 Move X2, [X8+728]
	179 Call 0x21DC000, X0, X1
	180 Move X0, [X20+16]
	181 Move X20, [X31+48]
	182 Move X19, [X31+56]
	183 Move X22, [X31+32]
	184 Move X21, [X31+40]
	185 Move X24, [X31+16]
	186 Move X23, [X31+24]
	187 Move X30, [X31+64]
	188 Return X0
	189 Call 0x1C17F20
	190 Move X0, 0x1C12000
	191 Move X0, [X0+1456]
	192 Call 0x1C17D08
	193 Call 0x1C17F10
	194 Move X20, X0
	195 Move X0, 0x1C3C000
	196 Move X0, [X0+8]
	197 Call 0x1C17D08
	198 Move X1, X0
	199 Move X0, X20
	200 Move X2, X31
	201 Call InvalidOperationException..ctor, X0, X1
	202 Move X0, X20
	203 Move X1, X19
	204 Call 0x1C17DEC

Method: RSG.IPromise`1<PromisedT> Resolved(PromisedT promisedValue)

Disassembly:
	0x024E2D38 MOV X0, X19
	0x024E2D3C MOV X1, X21
	0x024E2D40 BL 0x1C16D18
	0x024E2D44 STR X31, [X0]
	0x024E2D48 LDR X8, [X20 + 0x20]
	0x024E2D4C MOVZ W1, 0x8
	0x024E2D50 LDR X8, [X8 + 0xC0]
	0x024E2D54 LDR X8, [X8]
	0x024E2D58 LDR X8, [X8 + 0x80]
	0x024E2D5C ADD X21, X8, 0xA0
	0x024E2D60 MOV X0, X21
	0x024E2D64 BL 0x1C16D14
	0x024E2D68 MOV X0, X19
	0x024E2D6C MOV X1, X21
	0x024E2D70 BL 0x1C16D18
	0x024E2D74 STR X31, [X0]
	0x024E2D78 LDR X8, [X20 + 0x20]
	0x024E2D7C MOVZ W1, 0x8
	0x024E2D80 LDR X8, [X8 + 0xC0]
	0x024E2D84 LDR X8, [X8]
	0x024E2D88 LDR X8, [X8 + 0x80]
	0x024E2D8C ADD X20, X8, 0x60
	0x024E2D90 MOV X0, X20
	0x024E2D94 BL 0x1C16D14
	0x024E2D98 MOV X0, X19
	0x024E2D9C MOV X1, X20
	0x024E2DA0 BL 0x1C16D18
	0x024E2DA4 LDP X20, X19, [X31 + 0x10]
	0x024E2DA8 STR X31, [X0]
	0x024E2DAC LDP X30, X21, [X31], #0x20
	0x024E2DB0 RET
	0x024E2DB4 STR X30, [X31 - 0x40]!
	0x024E2DB8 STP X24, X23, [X31 + 0x10]
	0x024E2DBC STP X22, X21, [X31 + 0x20]
	0x024E2DC0 STP X20, X19, [X31 + 0x30]
	0x024E2DC4 ADRP X22, 0x1EF7000
	0x024E2DC8 LDRB W8, [X22 + 0xC2F]
	0x024E2DCC MOV X19, X2
	0x024E2DD0 MOV X21, X1
	0x024E2DD4 MOV X20, X0
	0x024E2DD8 TBNZ X8, 0x0, 0x24E2DFC
	0x024E2DDC ADRP X0, 0x1C3A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X20+32]
	026 Move X21, X0
	027 Move W9, [X8+309]
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, X0
	035 Move X8, [X8+192]
	036 Move X0, X21
	037 Move X1, [X8+360]
	038 Call 0x24E0E84, X0
	039 Compare X21, 0
	040 JumpIfEqual {59}
	041 Move X0, [X20+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+192]
	049 Move X0, X21
	050 Move X1, X19
	051 Move X2, [X8+24]
	052 Call 0x24E1940, X0, X1
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X0, X21
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20

Method: RSG.IPromise`1<PromisedT> Rejected(System.Exception ex)

Disassembly:
	0x024E2DE0 LDR X0, [X0 + 0xF88]
	0x024E2DE4 BL 0x1C16CF4
	0x024E2DE8 ADRP X0, 0x1C3A000
	0x024E2DEC LDR X0, [X0 + 0xF90]
	0x024E2DF0 BL 0x1C16CF4
	0x024E2DF4 MOVZ W8, 0x1
	0x024E2DF8 STRB W8, [X22 + 0xC2F]
	0x024E2DFC LDR X8, [X19 + 0x20]
	0x024E2E00 LDR X8, [X8 + 0xC0]
	0x024E2E04 LDR X0, [X8 + 0x58]
	0x024E2E08 LDRB W8, [X0 + 0x135]
	0x024E2E0C TBNZ X8, 0x0, 0x24E2E14
	0x024E2E10 BL 0x1C5C684
	0x024E2E14 BL 0x1C16F10
	0x024E2E18 LDR X8, [X19 + 0x20]
	0x024E2E1C MOV X22, X0
	0x024E2E20 LDR X8, [X8 + 0xC0]
	0x024E2E24 LDR X1, [X8 + 0x60]
	0x024E2E28 LDR X8, [X1]
	0x024E2E2C BLR X8
	0x024E2E30 CBZ X22, 0x24E2EE8
	0x024E2E34 STP X20, X21, [X22 + 0x10]
	0x024E2E38 LDR X8, [X19 + 0x20]
	0x024E2E3C MOV X0, X20
	0x024E2E40 LDR X8, [X8 + 0xC0]
	0x024E2E44 LDR X8, [X8]
	0x024E2E48 LDR X8, [X8 + 0x80]
	0x024E2E4C ADD X1, X8, 0x40
	0x024E2E50 BL 0x1C16D18
	0x024E2E54 LDR X8, [X0]
	0x024E2E58 CBZ X8, 0x24E2EC0
	0x024E2E5C LDR X8, [X19 + 0x20]
	0x024E2E60 ADRP X23, 0x1C3A000
	0x024E2E64 ADRP X24, 0x1C3A000
	0x024E2E68 MOV X0, X20
	0x024E2E6C LDR X8, [X8 + 0xC0]
	0x024E2E70 LDR X8, [X8]
	0x024E2E74 LDR X8, [X8 + 0x80]
	0x024E2E78 LDR X23, [X23 + 0xF88]
	0x024E2E7C LDR X24, [X24 + 0xF90]
	0x024E2E80 ADD X1, X8, 0x40
	0x024E2E84 BL 0x1C16D18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X20+32]
	026 Move X21, X0
	027 Move W9, [X8+309]
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, X0
	035 Move X8, [X8+192]
	036 Move X0, X21
	037 Move X1, [X8+360]
	038 Call 0x24E0E84, X0
	039 Compare X21, 0
	040 JumpIfEqual {59}
	041 Move X0, [X20+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+192]
	049 Move X0, X21
	050 Move X1, X19
	051 Move X2, [X8+48]
	052 Call 0x24E17B0, X0, X1
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X0, X21
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20

Method: RSG.IPromise`1<PromisedT> Finally(System.Action onComplete)

Disassembly:
	0x024E2E88 LDR X21, [X0]
	0x024E2E8C LDR X0, [X23]
	0x024E2E90 BL 0x1C16F10
	0x024E2E94 LDR X8, [X19 + 0x20]
	0x024E2E98 MOV X1, X22
	0x024E2E9C MOV X3, X31
	0x024E2EA0 MOV X23, X0
	0x024E2EA4 LDR X8, [X8 + 0xC0]
	0x024E2EA8 LDR X2, [X8 + 0x68]
	0x024E2EAC BL 0x2A6CC94
	0x024E2EB0 LDR X2, [X24]
	0x024E2EB4 MOV X0, X21
	0x024E2EB8 MOV X1, X23
	0x024E2EBC BL 0x21DB610
	0x024E2EC0 LDR X8, [X19 + 0x20]
	0x024E2EC4 MOV X0, X20
	0x024E2EC8 LDP X20, X19, [X31 + 0x30]
	0x024E2ECC LDP X22, X21, [X31 + 0x20]
	0x024E2ED0 LDR X8, [X8 + 0xC0]
	0x024E2ED4 LDP X24, X23, [X31 + 0x10]
	0x024E2ED8 LDR X1, [X8 + 0x70]
	0x024E2EDC LDR X2, [X1]
	0x024E2EE0 LDR X30, [X31], #0x40
	0x024E2EE4 BR X2
	0x024E2EE8 BL 0x1C16F20
	0x024E2EEC STP X29, X30, [X31 - 0x60]!
	0x024E2EF0 STP X28, X27, [X31 + 0x10]
	0x024E2EF4 STP X26, X25, [X31 + 0x20]
	0x024E2EF8 STP X24, X23, [X31 + 0x30]
	0x024E2EFC STP X22, X21, [X31 + 0x40]
	0x024E2F00 STP X20, X19, [X31 + 0x50]
	0x024E2F04 ADD X29, X31, 0x0
	0x024E2F08 SUB X31, X31, 0x40
	0x024E2F0C MRS X8, 0xC000
	0x024E2F10 STUR X8, [X29 - 0x40]
	0x024E2F14 LDR X8, [X8 + 0x28]
	0x024E2F18 ADRP X22, 0x1EF7000
	0x024E2F1C MOV X20, X2
	0x024E2F20 MOV X21, X1
	0x024E2F24 STUR X8, [X29 - 0x8]
	0x024E2F28 LDRB W8, [X22 + 0xC30]
	0x024E2F2C MOV X19, X0
	0x024E2F30 STUR X1, [X29 - 0x38]
	0x024E2F34 TBNZ X8, 0x0, 0x24E2F4C
	0x024E2F38 ADRP X0, 0x1C3A000
	0x024E2F3C LDR X0, [X0 + 0xF98]
	0x024E2F40 BL 0x1C16CF4
	0x024E2F44 MOVZ W8, 0x1
	0x024E2F48 STRB W8, [X22 + 0xC30]
	0x024E2F4C LDR X8, [X20 + 0x20]
	0x024E2F50 LDR X8, [X8 + 0xC0]
	0x024E2F54 LDR X9, [X8 + 0x88]
	0x024E2F58 LDR W22, [X9 + 0xFC]
	0x024E2F5C ADD X9, X31, 0x0
	0x024E2F60 ADD X10, X22, 0xF
	0x024E2F64 AND X10, X10, 0x1FFFFFFFF
	0x024E2F68 SUB X23, X9, X10
	0x024E2F6C ADD X31, X23, 0x0
	0x024E2F70 LDR X8, [X8]
	0x024E2F74 MOV X0, X19
	0x024E2F78 LDR X8, [X8 + 0x80]
	0x024E2F7C ADD X1, X8, 0x80
	0x024E2F80 BL 0x1C16D18
	0x024E2F84 LDR X8, [X0]
	0x024E2F88 CBZ X8, 0x24E30D0
	0x024E2F8C LDR X8, [X20 + 0x20]
	0x024E2F90 MOV X0, X19
	0x024E2F94 LDR X8, [X8 + 0xC0]
	0x024E2F98 LDR X8, [X8]
	0x024E2F9C LDR X8, [X8 + 0x80]
	0x024E2FA0 ADD X1, X8, 0x80
	0x024E2FA4 BL 0x1C16D18
	0x024E2FA8 LDR X0, [X0]
	0x024E2FAC CBZ X0, 0x24E311C
	0x024E2FB0 LDR X8, [X20 + 0x20]
	0x024E2FB4 LDR X8, [X8 + 0xC0]
	0x024E2FB8 LDR X1, [X8 + 0x78]
	0x024E2FBC LDR X8, [X1]
	0x024E2FC0 BLR X8
	0x024E2FC4 CMP W0, 0x1
	0x024E2FC8 B.LT 0x24E30D0
	0x024E2FCC MOV W24, W0
	0x024E2FD0 MOV W25, W31
	0x024E2FD4 LDR X8, [X20 + 0x20]
	0x024E2FD8 MOV X0, X19
	0x024E2FDC LDR X8, [X8 + 0xC0]
	0x024E2FE0 LDR X8, [X8]
	0x024E2FE4 LDR X8, [X8 + 0x80]
	0x024E2FE8 ADD X1, X8, 0x80
	0x024E2FEC BL 0x1C16D18
	0x024E2FF0 LDR X2, [X0]
	0x024E2FF4 CBZ X2, 0x24E311C
	0x024E2FF8 LDR X8, [X20 + 0x20]
	0x024E2FFC SUB X3, X29, 0x18
	0x024E3000 SUB X4, X29, 0x30
	0x024E3004 LDR X8, [X8 + 0xC0]
	0x024E3008 LDR X1, [X8 + 0x80]
	0x024E300C SUB X8, X29, 0xC
	0x024E3010 LDR X0, [X1]
	0x024E3014 STUR W25, [X29 - 0xC]
	0x024E3018 STUR X8, [X29 - 0x18]
	0x024E301C LDR X8, [X1 + 0x10]
	0x024E3020 BLR X8
	0x024E3024 LDR X8, [X20 + 0x20]
	0x024E3028 LDUR X27, [X29 - 0x30]
	0x024E302C MOV X0, X19
	0x024E3030 LDR X8, [X8 + 0xC0]
	0x024E3034 LDR X8, [X8]
	0x024E3038 LDR X8, [X8 + 0x80]
	0x024E303C ADD X1, X8, 0xA0
	0x024E3040 BL 0x1C16D18
	0x024E3044 LDR X0, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1EF8000
	008 Move W8, [X21+3109]
	009 Move X19, X2
	010 Move X22, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1C15000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3109], W8
	021 Move X8, [X19+32]
	022 Move X8, [X8+192]
	023 Move X0, [X8+792]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Call 0x1C17F10
	031 Move X8, [X19+32]
	032 Move X21, X0
	033 Move X8, [X8+192]
	034 Move X1, [X8+800]
	035 Call 0x237C87C, X0
	036 Compare X21, 0
	037 JumpIfEqual {137}
	038 Move [X21+24], X22
	039 Move X8, [X19+32]
	040 Move X8, [X8+192]
	041 Move X0, [X8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Call 0x1C17F10
	049 Move X8, [X19+32]
	050 Move X22, X0
	051 Move X8, [X8+192]
	052 Move X1, [X8+360]
	053 Call 0x24E0E84, X0
	054 Move [X21+16], X22
	055 Compare X22, 0
	056 JumpIfEqual {137}
	057 Move X8, [X19+32]
	058 Move X9, [X20+72]
	059 Move X23, 0x1C15000
	060 Move X8, [X8+192]
	061 Move [X22+72], X9
	062 Move X0, [X8+32]
	063 Move W8, [X0+309]
	064 Move X23, [X23+712]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Call 0x1C17F10
	071 Move X8, [X19+32]
	072 Move X1, X21
	073 Move X22, X0
	074 Move X8, [X8+192]
	075 Move X2, [X8+808]
	076 Move X3, [X8+40]
	077 Call Action`1<Object>..ctor, X0, X1, X2
	078 Move X8, [X19+32]
	079 Move X0, X20
	080 Move X1, X22
	081 Move X2, X31
	082 Move X8, [X8+192]
	083 Move X3, X31
	084 Move X8, [X8+224]
	085 Move X8, [X8+32]
	086 Move X8, [X8+192]
	087 Move X4, [X8+416]
	088 Call 0x24E23B8, X0, X1, X2, X3
	089 Move X0, [X23]
	090 Call 0x1C17F10
	091 Move X8, [X19+32]
	092 Move X1, X21
	093 Move X3, X31
	094 Move X22, X0
	095 Move X8, [X8+192]
	096 Move X2, [X8+816]
	097 Call Action`1<Object>..ctor, X0, X1, X2
	098 Move X8, [X19+32]
	099 Move X0, X20
	100 Move X1, X22
	101 Move X8, [X8+192]
	102 Move X2, [X8+248]
	103 Call 0x24E1E94, X0, X1
	104 Move X8, [X19+32]
	105 Move X20, [X21+16]
	106 Move X8, [X8+192]
	107 Move X0, [X8+832]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Call 0x1C17F10
	115 Move X8, [X19+32]
	116 Move X1, X21
	117 Move X22, X0
	118 Move X8, [X8+192]
	119 Move X2, [X8+824]
	120 Move X3, [X8+840]
	121 Call Func`2<Object, Object>..ctor, X0, X1, X2
	122 Compare X20, 0
	123 JumpIfEqual {137}
	124 Move X8, [X19+32]
	125 Move X0, X20
	126 Move X1, X22
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X8, [X8+192]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 Move X2, [X8+848]
	133 Move X30, [X31+48]
	134 Move X23, [X31+56]
	135 Call 0x21356C8, X0, X1
	136 Return X0
	137 Call 0x1C17F20

Method: RSG.IPromise ContinueWith(System.Func`1<RSG.IPromise> onComplete)

Disassembly:
	0x024E3048 CBZ X0, 0x24E311C
	0x024E304C ADRP X8, 0x1C39000
	0x024E3050 LDR X8, [X8 + 0xF98]
	0x024E3054 MOV W1, W25
	0x024E3058 LDR X2, [X8]
	0x024E305C BL 0x301BCCC
	0x024E3060 LDR X28, [X20 + 0x20]
	0x024E3064 MOV X26, X0
	0x024E3068 MOV X0, X23
	0x024E306C MOV X2, X22
	0x024E3070 LDR X8, [X28 + 0xC0]
	0x024E3074 LDR X8, [X8 + 0x88]
	0x024E3078 LDR W8, [X8 + 0x28]
	0x024E307C CMP W8, 0x0
	0x024E3080 SUB X8, X29, 0x38
	0x024E3084 CSEL X1, X21, X8, LT
	0x024E3088 BL 0x3EB1AC0
	0x024E308C LDR X8, [X28 + 0xC0]
	0x024E3090 MOV X4, X23
	0x024E3094 LDR X9, [X8 + 0x88]
	0x024E3098 LDR W9, [X9 + 0x28]
	0x024E309C TBNZ X9, 0x1F, 0x24E30A4
	0x024E30A0 LDR X4, [X23]
	0x024E30A4 LDR X1, [X8 + 0x90]
	0x024E30A8 SUB X3, X29, 0x30
	0x024E30AC MOV X2, X19
	0x024E30B0 LDR X0, [X1]
	0x024E30B4 STP X27, X26, [X29 - 0x30]
	0x024E30B8 STUR X4, [X29 - 0x20]
	0x024E30BC LDR X8, [X1 + 0x10]
	0x024E30C0 BLR X8
	0x024E30C4 ADD W25, W25, 0x1
	0x024E30C8 CMP W24, W25
	0x024E30CC B.NE 0x24E2FD4
	0x024E30D0 LDR X8, [X20 + 0x20]
	0x024E30D4 MOV X0, X19
	0x024E30D8 LDR X8, [X8 + 0xC0]
	0x024E30DC LDR X1, [X8 + 0x70]
	0x024E30E0 LDR X8, [X1]
	0x024E30E4 BLR X8
	0x024E30E8 LDUR X8, [X29 - 0x40]
	0x024E30EC LDR X8, [X8 + 0x28]
	0x024E30F0 LDUR X9, [X29 - 0x8]
	0x024E30F4 CMP X8, X9
	0x024E30F8 B.NE 0x24E3120
	0x024E30FC ADD X31, X29, 0x0
	0x024E3100 LDP X20, X19, [X31 + 0x50]
	0x024E3104 LDP X22, X21, [X31 + 0x40]
	0x024E3108 LDP X24, X23, [X31 + 0x30]
	0x024E310C LDP X26, X25, [X31 + 0x20]
	0x024E3110 LDP X28, X27, [X31 + 0x10]
	0x024E3114 LDP X29, X30, [X31], #0x60
	0x024E3118 RET
	0x024E311C BL 0x1C16F20
	0x024E3120 BL 0x3EB1B20
	0x024E3124 STR D8, [X31 - 0x40]!
	0x024E3128 STP X30, X23, [X31 + 0x10]
	0x024E312C STP X22, X21, [X31 + 0x20]
	0x024E3130 STP X20, X19, [X31 + 0x30]
	0x024E3134 ADRP X21, 0x1EF6000
	0x024E3138 LDRB W8, [X21 + 0xC31]
	0x024E313C MOV X19, X1
	0x024E3140 MOV V8.16B, V0.16B
	0x024E3144 MOV X20, X0
	0x024E3148 TBNZ X8, 0x0, 0x24E316C
	0x024E314C ADRP X0, 0x1C39000
	0x024E3150 LDR X0, [X0 + 0xFA0]
	0x024E3154 BL 0x1C16CF4
	0x024E3158 ADRP X0, 0x1C39000
	0x024E315C LDR X0, [X0 + 0xFA8]
	0x024E3160 BL 0x1C16CF4
	0x024E3164 MOVZ W8, 0x1
	0x024E3168 STRB W8, [X21 + 0xC31]
	0x024E316C LDR X8, [X19 + 0x20]
	0x024E3170 LDR X8, [X8 + 0xC0]
	0x024E3174 LDR X0, [X8 + 0x98]
	0x024E3178 LDRB W8, [X0 + 0x135]
	0x024E317C TBNZ X8, 0x0, 0x24E3184
	0x024E3180 BL 0x1C5C684
	0x024E3184 BL 0x1C16F10
	0x024E3188 LDR X8, [X19 + 0x20]
	0x024E318C MOV X21, X0
	0x024E3190 LDR X8, [X8 + 0xC0]
	0x024E3194 LDR X1, [X8 + 0xA0]
	0x024E3198 LDR X8, [X1]
	0x024E319C BLR X8
	0x024E31A0 CBZ X21, 0x24E3258
	0x024E31A4 STR X20, [X21 + 0x10]
	0x024E31A8 STR S8, [X21 + 0x18]
	0x024E31AC LDR X8, [X19 + 0x20]
	0x024E31B0 MOV X0, X20
	0x024E31B4 LDR X8, [X8 + 0xC0]
	0x024E31B8 LDR X8, [X8]
	0x024E31BC LDR X8, [X8 + 0x80]
	0x024E31C0 ADD X1, X8, 0x60
	0x024E31C4 BL 0x1C16D18

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1EF7000
	009 Move W8, [X22+3110]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1C14000
	018 Move X0, [X0+712]
	019 Call 0x1C17CF4
	020 Move X0, 0x1C39000
	021 Move X0, [X0+1736]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3110], W8
	025 Move X8, [X20+32]
	026 Move X23, 0x1C39000
	027 Move X8, [X8+192]
	028 Move X0, [X8+856]
	029 Move W8, [X0+309]
	030 Move X23, [X23+1736]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Call 0x1C17F10
	037 Move X8, [X20+32]
	038 Move X22, X0
	039 Move X8, [X8+192]
	040 Move X1, [X8+864]
	041 Call 0x237CC74, X0
	042 Move X0, [X23]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X23, X0
	046 Call Promise..ctor, X0
	047 Compare X22, 0
	048 JumpIfEqual {115}
	049 Move [X22+16], X23
	050 Compare X23, 0
	051 JumpIfEqual {115}
	052 Move X1, [X21+72]
	053 Move X24, 0x1C14000
	054 Move X24, [X24+712]
	055 Move X0, X23
	056 Move X2, X31
	057 Call Promise.WithName, X0, X1
	058 Move X8, [X20+32]
	059 Move X8, [X8+192]
	060 Move X0, [X8+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Call 0x1C17F10
	068 Move X8, [X20+32]
	069 Move X1, X22
	070 Move X23, X0
	071 Move X8, [X8+192]
	072 Move X2, [X8+872]
	073 Move X3, [X8+40]
	074 Call Action`1<Object>..ctor, X0, X1, X2
	075 Move X8, [X20+32]
	076 Move X0, X21
	077 Move X1, X23
	078 Move X2, X31
	079 Move X8, [X8+192]
	080 Move X3, X31
	081 Move X8, [X8+224]
	082 Move X8, [X8+32]
	083 Move X8, [X8+192]
	084 Move X4, [X8+416]
	085 Call 0x24E23B8, X0, X1, X2, X3
	086 Move X0, [X24]
	087 Call 0x1C17F10
	088 Move X8, [X20+32]
	089 Move X1, X22
	090 Move X3, X31
	091 Move X23, X0
	092 Move X8, [X8+192]
	093 Move X2, [X8+880]
	094 Call Action`1<Object>..ctor, X0, X1, X2
	095 Move X8, [X20+32]
	096 Move X0, X21
	097 Move X1, X23
	098 Move X8, [X8+192]
	099 Move X2, [X8+248]
	100 Call 0x24E1E94, X0, X1
	101 Move X0, [X22+16]
	102 Compare X0, 0
	103 JumpIfEqual {115}
	104 Move X1, X19
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move X2, X31
	112 Move X30, [X31+64]
	113 Call Promise.Then, X0, X1
	114 Return X0
	115 Call 0x1C17F20

Method: RSG.IPromise`1<ConvertedT> ContinueWith(System.Func`1<RSG.IPromise`1<ConvertedT>> onComplete)

Disassembly:
	0x0213593C LDR X8, [X19 + 0x38]
	0x02135940 LDR X0, [X8]
	0x02135944 BL 0x21A0E20
	0x02135948 LDR X8, [X19 + 0x20]
	0x0213594C MOV X21, X0
	0x02135950 LDRB W9, [X8 + 0x135]
	0x02135954 TBNZ X9, 0x0, 0x2135960
	0x02135958 MOV X0, X8
	0x0213595C BL 0x1C5C684
	0x02135960 MOVZ W2, 0x8
	0x02135964 MOV X0, X21
	0x02135968 MOV X1, X31
	0x0213596C MOV W3, W20
	0x02135970 MOV X4, X31
	0x02135974 BL 0x3BFFC4C
	0x02135978 LDR X8, [X19 + 0x20]
	0x0213597C MOV X19, X0
	0x02135980 LDRB W9, [X8 + 0x135]
	0x02135984 TBNZ X9, 0x0, 0x2135990
	0x02135988 MOV X0, X8
	0x0213598C BL 0x1C5C684
	0x02135990 MOV X0, X19
	0x02135994 LDP X20, X19, [X31 + 0x10]
	0x02135998 LDP X30, X21, [X31], #0x20
	0x0213599C RET
	0x021359A0 STP X30, X21, [X31 - 0x20]!
	0x021359A4 STP X20, X19, [X31 + 0x10]
	0x021359A8 LDR X8, [X1 + 0x38]
	0x021359AC MOV X19, X1
	0x021359B0 MOV W20, W0
	0x021359B4 CBNZ X8, 0x21359C4
	0x021359B8 MOV X0, X19
	0x021359BC BL 0x1C5C6E0
	0x021359C0 LDR X8, [X19 + 0x38]
	0x021359C4 LDR X0, [X8]
	0x021359C8 BL 0x21A0E7C
	0x021359CC LDR X8, [X19 + 0x20]
	0x021359D0 MOV X21, X0
	0x021359D4 LDRB W9, [X8 + 0x135]
	0x021359D8 TBNZ X9, 0x0, 0x21359E4
	0x021359DC MOV X0, X8
	0x021359E0 BL 0x1C5C684
	0x021359E4 MOVZ W2, 0x8
	0x021359E8 MOV X0, X21
	0x021359EC MOV X1, X31
	0x021359F0 MOV W3, W20
	0x021359F4 MOV X4, X31
	0x021359F8 BL 0x3BFFC4C
	0x021359FC LDR X8, [X19 + 0x20]
	0x02135A00 MOV X19, X0
	0x02135A04 LDRB W9, [X8 + 0x135]
	0x02135A08 TBNZ X9, 0x0, 0x2135A14
	0x02135A0C MOV X0, X8
	0x02135A10 BL 0x1C5C684
	0x02135A14 MOV X0, X19
	0x02135A18 LDP X20, X19, [X31 + 0x10]
	0x02135A1C LDP X30, X21, [X31], #0x20
	0x02135A20 RET
	0x02135A24 STP X30, X21, [X31 - 0x20]!
	0x02135A28 STP X20, X19, [X31 + 0x10]
	0x02135A2C LDR X8, [X1 + 0x38]
	0x02135A30 MOV X19, X1
	0x02135A34 MOV W20, W0
	0x02135A38 CBNZ X8, 0x2135A48
	0x02135A3C MOV X0, X19
	0x02135A40 BL 0x1C5C6E0
	0x02135A44 LDR X8, [X19 + 0x38]
	0x02135A48 LDR X0, [X8]
	0x02135A4C BL 0x21A0ED8
	0x02135A50 LDR X8, [X19 + 0x20]
	0x02135A54 MOV X21, X0
	0x02135A58 LDRB W9, [X8 + 0x135]
	0x02135A5C TBNZ X9, 0x0, 0x2135A68
	0x02135A60 MOV X0, X8
	0x02135A64 BL 0x1C5C684
	0x02135A68 MOVZ W2, 0x8
	0x02135A6C MOV X0, X21
	0x02135A70 MOV X1, X31
	0x02135A74 MOV W3, W20
	0x02135A78 MOV X4, X31
	0x02135A7C BL 0x3BFFC4C
	0x02135A80 LDR X8, [X19 + 0x20]
	0x02135A84 MOV X19, X0
	0x02135A88 LDRB W9, [X8 + 0x135]
	0x02135A8C TBNZ X9, 0x0, 0x2135A98
	0x02135A90 MOV X0, X8
	0x02135A94 BL 0x1C5C684
	0x02135A98 MOV X0, X19
	0x02135A9C LDP X20, X19, [X31 + 0x10]
	0x02135AA0 LDP X30, X21, [X31], #0x20
	0x02135AA4 RET
	0x02135AA8 STP X30, X21, [X31 - 0x20]!
	0x02135AAC STP X20, X19, [X31 + 0x10]
	0x02135AB0 LDR X8, [X1 + 0x38]
	0x02135AB4 MOV X19, X1
	0x02135AB8 MOV W20, W0
	0x02135ABC CBNZ X8, 0x2135ACC
	0x02135AC0 MOV X0, X19
	0x02135AC4 BL 0x1C5C6E0
	0x02135AC8 LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {25}
	013 Move X0, 0x1FC2000
	014 Move X0, [X0+712]
	015 Call 0x1C17CF4
	016 Move X0, 0x1FE7000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {25}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Move X8, [X20+56]
	025 Move X0, [X8]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Call 0x1C17F10
	033 Move X8, [X20+56]
	034 Move X22, X0
	035 Move X1, [X8+8]
	036 Move X8, [X1]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, 0x1FE7000
	039 Move X8, [X8+1736]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X23, X0
	044 Call Promise..ctor, X0
	045 Compare X22, 0
	046 JumpIfEqual {117}
	047 Move [X22+16], X23
	048 Move X8, [X20+32]
	049 Move X0, X21
	050 Move X8, [X8+192]
	051 Move X1, [X8+288]
	052 Move X8, [X1]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X23, 0
	055 JumpIfEqual {117}
	056 Move X1, X0
	057 Move X0, X23
	058 Move X2, X31
	059 Call Promise.WithName, X0, X1
	060 Move X8, [X20+32]
	061 Move X8, [X8+192]
	062 Move X0, [X8+32]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Call 0x1C17F10
	070 Move X8, [X20+32]
	071 Move X1, X22
	072 Move X23, X0
	073 Move X8, [X8+192]
	074 Move X3, [X8+40]
	075 Move X8, [X20+56]
	076 Move X9, [X3]
	077 Move X2, [X8+16]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X8, [X20+32]
	080 Move X0, X21
	081 Move X1, X23
	082 Move X8, [X8+192]
	083 Move X2, [X8+224]
	084 Move X8, [X2]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, 0x1FC2000
	087 Move X8, [X8+712]
	088 Move X0, [X8]
	089 Call 0x1C17F10
	090 Move X8, [X20+56]
	091 Move X1, X22
	092 Move X3, X31
	093 Move X23, X0
	094 Move X2, [X8+24]
	095 Call Action`1<Object>..ctor, X0, X1, X2
	096 Move X8, [X20+32]
	097 Move X0, X21
	098 Move X1, X23
	099 Move X8, [X8+192]
	100 Move X2, [X8+248]
	101 Move X8, [X2]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X0, [X22+16]
	104 Compare X0, 0
	105 JumpIfEqual {117}
	106 Move X8, [X20+56]
	107 Move X1, X19
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X2, [X8+40]
	113 Move X3, [X2]
	114 Move X30, [X31+48]
	115 Move X23, [X31+56]
	116 CallNoReturn X3
	117 Call 0x1C17F20

Method: RSG.IPromise`1<PromisedT> Progress(System.Action`1<System.Single> onProgress)

Disassembly:
	0x024E31C8 LDR X8, [X0]
	0x024E31CC CBZ X8, 0x24E3244
	0x024E31D0 LDR X8, [X19 + 0x20]
	0x024E31D4 ADRP X22, 0x1C39000
	0x024E31D8 ADRP X23, 0x1C39000
	0x024E31DC MOV X0, X20
	0x024E31E0 LDR X8, [X8 + 0xC0]
	0x024E31E4 LDR X8, [X8]
	0x024E31E8 LDR X8, [X8 + 0x80]
	0x024E31EC LDR X22, [X22 + 0xFA0]
	0x024E31F0 LDR X23, [X23 + 0xFA8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Compare X1, 0
	005 JumpIfEqual {12}
	006 Move W8, [X19+80]
	007 Compare W8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X19
	010 Move X2, X19
	011 Call 0x24E13E8, X0, X1, X2
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Void <Done>b__30_0(System.Exception ex)

Disassembly:
	0x024E31F4 ADD X1, X8, 0x60
	0x024E31F8 BL 0x1C16D18
	0x024E31FC LDR X20, [X0]
	0x024E3200 LDR X0, [X22]
	0x024E3204 BL 0x1C16F10
	0x024E3208 LDR X8, [X19 + 0x20]
	0x024E320C MOV X1, X21
	0x024E3210 MOV X3, X31
	0x024E3214 MOV X19, X0
	0x024E3218 LDR X8, [X8 + 0xC0]
	0x024E321C LDR X2, [X8 + 0xA8]
	0x024E3220 BL 0x2A6C144
	0x024E3224 LDR X2, [X23]
	0x024E3228 MOV X0, X20
	0x024E322C MOV X1, X19
	0x024E3230 LDP X20, X19, [X31 + 0x30]
	0x024E3234 LDP X22, X21, [X31 + 0x20]
	0x024E3238 LDP X30, X23, [X31 + 0x10]
	0x024E323C LDR V8, [X31], #0x40
	0x024E3240 B 0x21DB308
	0x024E3244 LDP X20, X19, [X31 + 0x30]
	0x024E3248 LDP X22, X21, [X31 + 0x20]
	0x024E324C LDP X30, X23, [X31 + 0x10]
	0x024E3250 LDR V8, [X31], #0x40
	0x024E3254 RET
	0x024E3258 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1EF7000
	007 Move X22, 0x1C39000
	008 Move W8, [X21+3111]
	009 Move X22, [X22+1736]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1C39000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3111], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call Promise.PropagateUnhandledException, X0, X1
	035 Return 

Method: System.Void <Done>b__31_0(System.Exception ex)

Disassembly:
	0x024E325C SUB X31, X31, 0x60
	0x024E3260 STP X30, X23, [X31 + 0x30]
	0x024E3264 STP X22, X21, [X31 + 0x40]
	0x024E3268 STP X20, X19, [X31 + 0x50]
	0x024E326C ADRP X22, 0x1EF6000
	0x024E3270 LDRB W8, [X22 + 0xC32]
	0x024E3274 MOV X19, X2
	0x024E3278 MOV X21, X1
	0x024E327C MOV X20, X0
	0x024E3280 TBNZ X8, 0x0, 0x24E32A4
	0x024E3284 ADRP X0, 0x1C39000
	0x024E3288 LDR X0, [X0 + 0xFB0]
	0x024E328C BL 0x1C16CF4
	0x024E3290 ADRP X0, 0x1C38000
	0x024E3294 LDR X0, [X0 + 0x6C8]
	0x024E3298 BL 0x1C16CF4
	0x024E329C MOVZ W8, 0x1
	0x024E32A0 STRB W8, [X22 + 0xC32]
	0x024E32A4 LDR X8, [X19 + 0x20]
	0x024E32A8 MOV X0, X20
	0x024E32AC LDR X8, [X8 + 0xC0]
	0x024E32B0 LDR X1, [X8 + 0xB0]
	0x024E32B4 LDR X8, [X1]
	0x024E32B8 BLR X8
	0x024E32BC CBNZ W0, 0x24E338C
	0x024E32C0 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1EF7000
	007 Move X22, 0x1C39000
	008 Move W8, [X21+3112]
	009 Move X22, [X22+1736]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1C39000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3112], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call Promise.PropagateUnhandledException, X0, X1
	035 Return 

Method: System.Void <Done>b__32_0(System.Exception ex)

Disassembly:
	0x024E32C4 ADRP X23, 0x1C38000
	0x024E32C8 MOVZ W1, 0x8
	0x024E32CC LDR X8, [X8 + 0xC0]
	0x024E32D0 LDR X8, [X8]
	0x024E32D4 LDR X22, [X8 + 0x80]
	0x024E32D8 LDR X23, [X23 + 0x6C8]
	0x024E32DC MOV X0, X22
	0x024E32E0 BL 0x1C16D14
	0x024E32E4 MOV X0, X20
	0x024E32E8 MOV X1, X22
	0x024E32EC BL 0x1C16D18
	0x024E32F0 STR X21, [X0]
	0x024E32F4 LDR X8, [X19 + 0x20]
	0x024E32F8 MOVZ W1, 0x1
	0x024E32FC MOV X0, X20
	0x024E3300 LDR X8, [X8 + 0xC0]
	0x024E3304 LDR X2, [X8 + 0x8]
	0x024E3308 LDR X8, [X2]
	0x024E330C BLR X8
	0x024E3310 LDR X0, [X23]
	0x024E3314 LDR W8, [X0 + 0xE0]
	0x024E3318 CBNZ W8, 0x24E3324
	0x024E331C BL 0x1C16DFC
	0x024E3320 LDR X0, [X23]
	0x024E3324 LDR X8, [X0 + 0xB8]
	0x024E3328 LDRB W9, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1EF7000
	007 Move X22, 0x1C39000
	008 Move W8, [X21+3113]
	009 Move X22, [X22+1736]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1C39000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3113], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call Promise.PropagateUnhandledException, X0, X1
	035 Return 

