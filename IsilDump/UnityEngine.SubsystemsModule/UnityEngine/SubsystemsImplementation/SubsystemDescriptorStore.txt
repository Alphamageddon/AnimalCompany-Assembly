Type: UnityEngine.SubsystemsImplementation.SubsystemDescriptorStore

Method: System.Void InitializeManagedDescriptor(System.IntPtr ptr, UnityEngine.IntegratedSubsystemDescriptor desc)

Disassembly:
	0x03C9A58C RET
	0x03C9A590 ADRP X23, 0x74D000
	0x03C9A594 LDR X8, [X23 + 0x178]
	0x03C9A598 CBNZ X8, 0x3C9A5B0
	0x03C9A59C ADRP X0, 0xFFFFFFFFFCE7F000
	0x03C9A5A0 ADD X0, X0, 0x48E
	0x03C9A5A4 BL 0x1C16CB8
	0x03C9A5A8 MOV X8, X0
	0x03C9A5AC STR X0, [X23 + 0x178]
	0x03C9A5B0 MOV X0, X21
	0x03C9A5B4 BLR X8
	0x03C9A5B8 CBZ X22, 0x3C9A6BC
	0x03C9A5BC STR W0, [X22 + 0x10]
	0x03C9A5C0 MOV X0, X21
	0x03C9A5C4 MOV X1, X31
	0x03C9A5C8 BL 0x3C32E90
	0x03C9A5CC CBZ X0, 0x3C9A6BC
	0x03C9A5D0 MOV X1, X31
	0x03C9A5D4 BL 0x3C3F58C
	0x03C9A5D8 MOV X0, X21
	0x03C9A5DC MOV X1, X31
	0x03C9A5E0 MOV V8.16B, V0.16B
	0x03C9A5E4 BL 0x3C32E90
	0x03C9A5E8 CBZ X0, 0x3C9A6BC
	0x03C9A5EC MOV X1, X31
	0x03C9A5F0 BL 0x3C3F58C
	0x03C9A5F4 LDR X8, [X24 + 0x168]
	0x03C9A5F8 MOV V9.16B, V2.16B
	0x03C9A5FC CBNZ X8, 0x3C9A614
	0x03C9A600 ADRP X0, 0xFFFFFFFFFCE61000
	0x03C9A604 ADD X0, X0, 0xA9D
	0x03C9A608 BL 0x1C16CB8
	0x03C9A60C MOV X8, X0
	0x03C9A610 STR X0, [X24 + 0x168]
	0x03C9A614 MOV X0, X21
	0x03C9A618 BLR X8
	0x03C9A61C CBZ X0, 0x3C9A6BC
	0x03C9A620 BL 0x3C9A0F8
	0x03C9A624 LDR X8, [X24 + 0x168]
	0x03C9A628 MOV V10.16B, V0.16B
	0x03C9A62C CBNZ X8, 0x3C9A644
	0x03C9A630 ADRP X0, 0xFFFFFFFFFCE61000
	0x03C9A634 ADD X0, X0, 0xA9D
	0x03C9A638 BL 0x1C16CB8
	0x03C9A63C MOV X8, X0
	0x03C9A640 STR X0, [X24 + 0x168]
	0x03C9A644 MOV X0, X21
	0x03C9A648 BLR X8
	0x03C9A64C CBZ X0, 0x3C9A6BC
	0x03C9A650 BL 0x3C9A0F8
	0x03C9A654 MOV V11.16B, V2.16B
	0x03C9A658 CBNZ X20, 0x3C9A688
	0x03C9A65C ADRP X8, 0x4C7000
	0x03C9A660 LDR X8, [X8 + 0x108]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74E000
	006 Move W8, [X21+341]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x4C8000
	014 Move X0, [X0+144]
	015 Call 0x1C17CF4
	016 Move X0, 0x483000
	017 Move X0, [X0+1856]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+341], W8
	021 Compare X19, 0
	022 JumpIfEqual {67}
	023 Move X21, 0x483000
	024 Move X21, [X21+1856]
	025 Move [X19+16], X20
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X8, [X0+184]
	033 Move X0, [X8]
	034 Compare X0, 0
	035 JumpIfEqual {67}
	036 Move X9, 0x4C8000
	037 Move X9, [X9+144]
	038 Move W10, [X0+28]
	039 Move X8, [X0+16]
	040 Move X9, [X9]
	041 Add W10, W10, 1
	042 Move [X0+28], W10
	043 Compare X8, 0
	044 JumpIfEqual {67}
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Move W11, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W9, W10, 1
	049 Add X8, X8, X10
	050 Move [X0+24], W9
	051 Move [X8+32], X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Move X8, [X9+32]
	058 Move X1, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X8, [X8+192]
	062 Move X2, [X8+112]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Call List`1<Object>.AddWithResize, X0, X1
	066 Return 
	067 Call 0x1C17F20

Method: System.Void ClearManagedDescriptors()

Disassembly:
	0x03C9A664 LDR X0, [X8]
	0x03C9A668 BL 0x1C16F10
	0x03C9A66C ADRP X8, 0x4C7000
	0x03C9A670 LDR X8, [X8 + 0x110]
	0x03C9A674 MOV X1, X22
	0x03C9A678 MOV X3, X31
	0x03C9A67C MOV X20, X0
	0x03C9A680 LDR X2, [X8]
	0x03C9A684 BL 0x24AD1FC
	0x03C9A688 AND W1, W19, 0x1
	0x03C9A68C MOV V0.16B, V8.16B
	0x03C9A690 MOV V1.16B, V9.16B
	0x03C9A694 MOV X0, X20
	0x03C9A698 LDP X20, X19, [X31 + 0x50]
	0x03C9A69C LDP X22, X21, [X31 + 0x40]
	0x03C9A6A0 LDP X24, X23, [X31 + 0x30]
	0x03C9A6A4 LDR X30, [X31 + 0x20]
	0x03C9A6A8 LDP D9, D8, [X31 + 0x10]
	0x03C9A6AC MOV V2.16B, V10.16B
	0x03C9A6B0 MOV V3.16B, V11.16B
	0x03C9A6B4 LDP D11, D10, [X31], #0x60
	0x03C9A6B8 B 0x3C9A6C8
	0x03C9A6BC BL 0x1C16F20
	0x03C9A6C0 MOV X1, X31
	0x03C9A6C4 B 0x33BDD8C
	0x03C9A6C8 SUB X31, X31, 0xB0
	0x03C9A6CC STP D15, D14, [X31 + 0x10]
	0x03C9A6D0 STP D13, D12, [X31 + 0x20]
	0x03C9A6D4 STP D11, D10, [X31 + 0x30]
	0x03C9A6D8 STP D9, D8, [X31 + 0x40]
	0x03C9A6DC STP X29, X30, [X31 + 0x50]
	0x03C9A6E0 STP X28, X27, [X31 + 0x60]
	0x03C9A6E4 STP X26, X25, [X31 + 0x70]
	0x03C9A6E8 STP X24, X23, [X31 + 0x80]
	0x03C9A6EC STP X22, X21, [X31 + 0x90]
	0x03C9A6F0 STP X20, X19, [X31 + 0xA0]
	0x03C9A6F4 ADRP X19, 0x74D000
	0x03C9A6F8 LDRB W8, [X19 + 0x1D2]
	0x03C9A6FC MOV W21, W1
	0x03C9A700 MOV X20, X0
	0x03C9A704 MOV V10.16B, V3.16B
	0x03C9A708 MOV V11.16B, V2.16B
	0x03C9A70C MOV V8.16B, V1.16B
	0x03C9A710 MOV V9.16B, V0.16B
	0x03C9A714 TBNZ X8, 0x0, 0x3C9A744
	0x03C9A718 ADRP X0, 0x4C7000
	0x03C9A71C LDR X0, [X0 + 0x118]
	0x03C9A720 BL 0x1C16CF4
	0x03C9A724 ADRP X0, 0x459000
	0x03C9A728 LDR X0, [X0 + 0x598]
	0x03C9A72C BL 0x1C16CF4
	0x03C9A730 ADRP X0, 0x4C7000
	0x03C9A734 LDR X0, [X0 + 0x120]
	0x03C9A738 BL 0x1C16CF4
	0x03C9A73C MOVZ W8, 0x1
	0x03C9A740 STRB W8, [X19 + 0x1D2]
	0x03C9A744 ADRP X19, 0x74D000
	0x03C9A748 LDR X8, [X19 + 0x188]
	0x03C9A74C CBNZ X8, 0x3C9A764
	0x03C9A750 ADRP X0, 0xFFFFFFFFFCE75000
	0x03C9A754 ADD X0, X0, 0xC59
	0x03C9A758 BL 0x1C16CB8
	0x03C9A75C MOV X8, X0
	0x03C9A760 STR X0, [X19 + 0x188]
	0x03C9A764 BLR X8
	0x03C9A768 CBZ X0, 0x3C9AA4C
	0x03C9A76C LDR X8, [X19 + 0x188]
	0x03C9A770 CBNZ X8, 0x3C9A788
	0x03C9A774 ADRP X0, 0xFFFFFFFFFCE75000
	0x03C9A778 ADD X0, X0, 0xC59
	0x03C9A77C BL 0x1C16CB8
	0x03C9A780 MOV X8, X0
	0x03C9A784 STR X0, [X19 + 0x188]
	0x03C9A788 BLR X8
	0x03C9A78C CBZ X0, 0x3C9AAA8
	0x03C9A790 LDR W8, [X0 + 0x18]
	0x03C9A794 CBZ W8, 0x3C9AA4C
	0x03C9A798 STR W21, [X31 + 0x4]
	0x03C9A79C ADRP X8, 0x4C7000
	0x03C9A7A0 LDR X8, [X8 + 0x120]
	0x03C9A7A4 LDR X0, [X8]
	0x03C9A7A8 BL 0x1C16F10
	0x03C9A7AC MOV X21, X0
	0x03C9A7B0 BL 0x3C9AAB0
	0x03C9A7B4 LDR X8, [X19 + 0x188]
	0x03C9A7B8 CBNZ X8, 0x3C9A7D0
	0x03C9A7BC ADRP X0, 0xFFFFFFFFFCE75000
	0x03C9A7C0 ADD X0, X0, 0xC59
	0x03C9A7C4 BL 0x1C16CB8
	0x03C9A7C8 MOV X8, X0
	0x03C9A7CC STR X0, [X19 + 0x188]
	0x03C9A7D0 BLR X8
	0x03C9A7D4 CBZ X0, 0x3C9AAA8
	0x03C9A7D8 LDR W8, [X0 + 0x18]
	0x03C9A7DC MOV X22, X0
	0x03C9A7E0 CMP W8, 0x1
	0x03C9A7E4 B.LT 0x3C9AA34
	0x03C9A7E8 ADRP X29, 0x459000
	0x03C9A7EC ADRP X24, 0x459000
	0x03C9A7F0 LDR X29, [X29 + 0x598]
	0x03C9A7F4 LDR X24, [X24 + 0x5A8]
	0x03C9A7F8 FMOV S0, 1
	0x03C9A7FC MOV W27, W31
	0x03C9A800 ADRP X28, 0x74D000
	0x03C9A804 ADRP X19, 0x73F000
	0x03C9A808 MOVZ X23, 0x7FF00000
	0x03C9A80C FMOV D14, 0.5
	0x03C9A810 FDIV S15, S0, S11
	0x03C9A814 FDIV S13, S0, S10
	0x03C9A818 CMP W27, W8
	0x03C9A81C B.CS 0x3C9AAAC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X19, 0x74E000
	007 Move X21, 0x483000
	008 Move W8, [X19+342]
	009 Move X21, [X21+1856]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x4C8000
	015 Move X0, [X0+152]
	016 Call 0x1C17CF4
	017 Move X0, 0x4C8000
	018 Move X0, [X0+160]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C8000
	021 Move X0, [X0+168]
	022 Call 0x1C17CF4
	023 Move X0, 0x4C8000
	024 Move X0, [X0+176]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C8000
	027 Move X0, [X0+184]
	028 Call 0x1C17CF4
	029 Move X0, 0x483000
	030 Move X0, [X0+1856]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+342], W8
	034 Move X0, [X21]
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X0, [X8]
	045 Compare X0, 0
	046 JumpIfEqual {97}
	047 Move X8, 0x4C8000
	048 Move X8, [X8+184]
	049 Move X20, 0x4C8000
	050 Move X19, 0x4C8000
	051 Move X1, [X8]
	052 Move X20, [X20+160]
	053 Move X19, [X19+152]
	054 Add X8, X31, 8
	055 Call List`1<Object>.GetEnumerator, X0
	056 Move X1, [X20]
	057 Add X0, X31, 8
	058 Call Enumerator<Object>.MoveNext, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {67}
	063 Move X8, [X31+24]
	064 Compare X8, 0
	065 JumpIfEqual {96}
	066 Move [X8+16], X31
	067 Move X1, [X19]
	068 Add X0, X31, 8
	069 Call Enumerator<Object>.Dispose, X0
	070 Move X0, [X21]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X21]
	076 Move X8, [X0+184]
	077 Move X8, [X8]
	078 Compare X8, 0
	079 JumpIfEqual {97}
	080 Move W2, [X8+24]
	081 Move W9, [X8+28]
	082 Add W9, W9, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X8+24], W31
	085 Move [X8+28], W9
	086 Move X0, [X8+16]
	087 Move W1, W31
	088 Move X3, X31
	089 Call Array.Clear, X0, X1, X2
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X30, [X31+32]
	093 Move X21, [X31+40]
	094 Add X31, X31, 64
	095 Return 
	096 Call 0x1C17F20
	097 Call 0x1C17F20
	098 Move X20, X0
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, X20
	101 Call 0x3EB2AD0
	102 Move X19, [X0]
	103 Call 0x3EB2AE0
	104 Move X8, 0x4C8000
	105 Move X8, [X8+152]
	106 Add X0, X31, 8
	107 Move X1, [X8]
	108 Call Enumerator<Object>.Dispose, X0
	109 Compare X19, 0
	110 JumpIfEqual {70}
	111 Move X0, X19
	112 Call 0x1C17F18
	113 Move X19, X31
	114 Move X20, X0
	115 Move X8, 0x4C8000
	116 Move X8, [X8+152]
	117 Move X1, [X8]
	118 Add X0, X31, 8
	119 Call Enumerator<Object>.Dispose, X0
	120 Compare X19, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X20
	123 Call 0x1D2D690
	124 Move X0, X19
	125 Call 0x1C17F18
	126 Call 0x1991590

Method: System.Void ReportSingleSubsystemAnalytics(System.String id)

Disassembly:
	0x03C9A820 ADD X8, X22, W27, 0x3, SXTW
	0x03C9A824 LDR X25, [X8 + 0x20]
	0x03C9A828 CBZ X25, 0x3C9AAA8
	0x03C9A82C LDR X8, [X28 + 0x168]
	0x03C9A830 CBNZ X8, 0x3C9A848
	0x03C9A834 ADRP X0, 0xFFFFFFFFFCE61000
	0x03C9A838 ADD X0, X0, 0xA9D
	0x03C9A83C BL 0x1C16CB8
	0x03C9A840 MOV X8, X0
	0x03C9A844 STR X0, [X28 + 0x168]
	0x03C9A848 MOV X0, X25
	0x03C9A84C BLR X8
	0x03C9A850 LDR X8, [X29]
	0x03C9A854 MOV X26, X0
	0x03C9A858 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74E000
	005 Move X1, [X20+344]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51847168
	010 Add X0, X0, 908
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+344], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void GetSubsystemDescriptors(System.Collections.Generic.List`1<T> descriptors)

Disassembly:
	0x022982B8 MOV X4, X31
	0x022982BC MOV X5, X31
	0x022982C0 BL 0x1C17728
	0x022982C4 CBNZ X20, 0x2298304
	0x022982C8 LDUR X8, [X29 - 0x40]
	0x022982CC LDR X8, [X8 + 0x28]
	0x022982D0 LDUR X9, [X29 - 0x8]
	0x022982D4 CMP X8, X9
	0x022982D8 B.NE 0x229830C
	0x022982DC ADD X31, X29, 0x0
	0x022982E0 LDP X20, X19, [X31 + 0x50]
	0x022982E4 LDP X22, X21, [X31 + 0x40]
	0x022982E8 LDP X24, X23, [X31 + 0x30]
	0x022982EC LDP X26, X25, [X31 + 0x20]
	0x022982F0 LDP X28, X27, [X31 + 0x10]
	0x022982F4 LDP X29, X30, [X31], #0x60
	0x022982F8 RET
	0x022982FC BL 0x1C16F20
	0x02298300 BL 0x1C16F20
	0x02298304 MOV X0, X20
	0x02298308 BL 0x1C16F18
	0x0229830C BL 0x3EB1B20
	0x02298310 B 0x2298328
	0x02298314 B 0x2298328
	0x02298318 B 0x2298328
	0x0229831C B 0x2298328
	0x02298320 B 0x2298328
	0x02298324 B 0x2298328
	0x02298328 MOV X22, X0
	0x0229832C CMP W1, 0x1
	0x02298330 B.NE 0x2298348
	0x02298334 MOV X0, X22
	0x02298338 BL 0x3EB1AD0
	0x0229833C LDR X20, [X0]
	0x02298340 BL 0x3EB1AE0
	0x02298344 B 0x2298294
	0x02298348 MOV X20, X31
	0x0229834C B 0x2298354
	0x02298350 MOV X22, X0
	0x02298354 LDR X8, [X19 + 0x38]
	0x02298358 LDR X0, [X8 + 0x10]
	0x0229835C LDRB W9, [X0 + 0x135]
	0x02298360 TBNZ X9, 0x0, 0x229836C
	0x02298364 BL 0x1C5C684
	0x02298368 LDR X8, [X19 + 0x38]
	0x0229836C LDR X1, [X8 + 0x50]
	0x02298370 LDUR X2, [X29 - 0x28]
	0x02298374 MOV X3, X21
	0x02298378 MOV X4, X31
	0x0229837C MOV X5, X31
	0x02298380 BL 0x1C17728
	0x02298384 CBNZ X20, 0x2298390
	0x02298388 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X20, X1
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {18}
	010 Move X0, 0x1E85000
	011 Move X0, [X0+1856]
	012 Call 0x1C17CF4
	013 Move X8, [X20+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X20
	017 Call 0x1C5D6E0
	018 Compare X19, 0
	019 JumpIfEqual {63}
	020 Move W2, [X19+24]
	021 Move W8, [X19+28]
	022 Add W8, W8, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move [X19+24], W31
	025 Move [X19+28], W8
	026 Move X0, [X19+16]
	027 Move W1, W31
	028 Move X3, X31
	029 Call Array.Clear, X0, X1, X2
	030 Move X21, 0x1E85000
	031 Move X21, [X21+1856]
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X0+184]
	039 Move X9, [X20+56]
	040 Move X1, X19
	041 Move X0, [X8]
	042 Move X2, [X9+16]
	043 Call 0x2297CB8, X0, X1
	044 Move X8, [X21]
	045 Move X9, [X20+56]
	046 Move X1, X19
	047 Move X8, [X8+184]
	048 Move X2, [X9+24]
	049 Move X0, [X8+8]
	050 Call 0x2297CB8, X0, X1
	051 Move X8, [X21]
	052 Move X9, [X20+56]
	053 Move X1, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X8, [X8+184]
	057 Move X2, [X9+32]
	058 Move X0, [X8+16]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call 0x2297CB8, X0, X1
	062 Return 
	063 Call 0x1C17F20

Method: System.Void AddDescriptorSubset(System.Collections.Generic.List`1<TBaseTypeInList> copyFrom, System.Collections.Generic.List`1<TQueryType> copyTo)

Disassembly:
	0x02297CB8 MOV X0, X23
	0x02297CBC MOV X1, X31
	0x02297CC0 BL 0x3C06A04
	0x02297CC4 LDR X23, [X20]
	0x02297CC8 LDUR X9, [X29 - 0x28]
	0x02297CCC LDUR X2, [X29 - 0x40]
	0x02297CD0 MOV X0, X24
	0x02297CD4 LDR X8, [X23 + 0x20]
	0x02297CD8 LDR W8, [X8 + 0x28]
	0x02297CDC CMP W8, 0x0
	0x02297CE0 CSEL X1, X9, X21, LT
	0x02297CE4 BL 0x3EB1AC0
	0x02297CE8 LDR X0, [X23 + 0x20]
	0x02297CEC MOV X1, X24
	0x02297CF0 BL 0x1C16E04
	0x02297CF4 LDR X8, [X20]
	0x02297CF8 MOV X21, X0
	0x02297CFC LDR X1, [X8 + 0x10]
	0x02297D00 LDRB W8, [X1 + 0x135]
	0x02297D04 TBNZ X8, 0x0, 0x2297D14
	0x02297D08 MOV X0, X1
	0x02297D0C BL 0x1C5C684
	0x02297D10 MOV X1, X0
	0x02297D14 MOV X0, X21
	0x02297D18 MOV X2, X27
	0x02297D1C BL 0x1C16E10
	0x02297D20 LDR X8, [X20]
	0x02297D24 MOV X4, X0
	0x02297D28 LDR X9, [X8 + 0x10]
	0x02297D2C LDR X1, [X8 + 0x30]
	0x02297D30 LDR W9, [X9 + 0x28]
	0x02297D34 LDR X8, [X1]
	0x02297D38 TBNZ X9, 0x1F, 0x2297D40
	0x02297D3C LDR X4, [X4]
	0x02297D40 SUB X9, X29, 0xC
	0x02297D44 STUR W22, [X29 - 0xC]
	0x02297D48 STP X9, X4, [X29 - 0x20]
	0x02297D4C LDR X9, [X1 + 0x10]
	0x02297D50 SUB X3, X29, 0x20
	0x02297D54 MOV X0, X8
	0x02297D58 MOV X2, X19
	0x02297D5C BLR X9
	0x02297D60 LDUR X22, [X29 - 0x38]
	0x02297D64 LDR X8, [X22 + 0x28]
	0x02297D68 LDUR X9, [X29 - 0x8]
	0x02297D6C CMP X8, X9
	0x02297D70 B.NE 0x2297D98
	0x02297D74 ADD X31, X29, 0x0
	0x02297D78 LDP X20, X19, [X31 + 0x50]
	0x02297D7C LDP X22, X21, [X31 + 0x40]
	0x02297D80 LDP X24, X23, [X31 + 0x30]
	0x02297D84 LDP X26, X25, [X31 + 0x20]
	0x02297D88 LDP X28, X27, [X31 + 0x10]
	0x02297D8C LDP X29, X30, [X31], #0x60
	0x02297D90 RET
	0x02297D94 BL 0x1C16F20
	0x02297D98 BL 0x3EB1B20
	0x02297D9C SUB X31, X31, 0x70
	0x02297DA0 STR X30, [X31 + 0x40]
	0x02297DA4 STP X22, X21, [X31 + 0x50]
	0x02297DA8 STP X20, X19, [X31 + 0x60]
	0x02297DAC LDR X8, [X2 + 0x38]
	0x02297DB0 MOV X19, X2
	0x02297DB4 MOV X20, X1
	0x02297DB8 MOV X21, X0
	0x02297DBC CBNZ X8, 0x2297DC8
	0x02297DC0 MOV X0, X19
	0x02297DC4 BL 0x1C5C6E0
	0x02297DC8 STP X31, X31, [X31 + 0x20]
	0x02297DCC STR X31, [X31 + 0x30]
	0x02297DD0 CBZ X21, 0x2297F3C
	0x02297DD4 LDR X8, [X19 + 0x38]
	0x02297DD8 MOV X0, X21
	0x02297DDC LDR X1, [X8 + 0x8]
	0x02297DE0 ADD X8, X31, 0x8
	0x02297DE4 BL 0x301CB58
	0x02297DE8 LDUR V0, [X31 + 0x8]
	0x02297DEC LDR X8, [X31 + 0x18]
	0x02297DF0 STR V0, [X31 + 0x2]
	0x02297DF4 STR X8, [X31 + 0x30]
	0x02297DF8 LDR X8, [X19 + 0x38]
	0x02297DFC LDR X1, [X8 + 0x48]
	0x02297E00 ADD X0, X31, 0x20
	0x02297E04 BL 0x2BC4350
	0x02297E08 TBZ X0, 0x0, 0x2297EFC
	0x02297E0C LDR X8, [X19 + 0x38]
	0x02297E10 LDR X21, [X31 + 0x30]
	0x02297E14 LDR X1, [X8 + 0x30]
	0x02297E18 LDRB W8, [X1 + 0x135]
	0x02297E1C TBNZ X8, 0x0, 0x2297E2C
	0x02297E20 MOV X0, X1
	0x02297E24 BL 0x1C5C684
	0x02297E28 MOV X1, X0
	0x02297E2C MOV X0, X21
	0x02297E30 BL 0x1C16E00
	0x02297E34 CBZ X0, 0x2297DF8
	0x02297E38 LDR X8, [X19 + 0x38]
	0x02297E3C LDR X1, [X8 + 0x30]
	0x02297E40 LDRB W8, [X1 + 0x135]
	0x02297E44 TBNZ X8, 0x0, 0x2297E54
	0x02297E48 MOV X0, X1
	0x02297E4C BL 0x1C5C684
	0x02297E50 MOV X1, X0
	0x02297E54 MOV X0, X21
	0x02297E58 BL 0x1C16E00
	0x02297E5C LDR X8, [X19 + 0x38]
	0x02297E60 MOV X21, X0
	0x02297E64 LDR X22, [X8 + 0x30]
	0x02297E68 LDRB W8, [X22 + 0x135]
	0x02297E6C TBNZ X8, 0x0, 0x2297E7C
	0x02297E70 MOV X0, X22
	0x02297E74 BL 0x1C5C684
	0x02297E78 MOV X22, X0
	0x02297E7C CBZ X21, 0x2297E9C
	0x02297E80 MOV X0, X21
	0x02297E84 MOV X1, X22
	0x02297E88 BL 0x1C16E00
	0x02297E8C MOV X1, X0
	0x02297E90 CBZ X1, 0x2297F30
	0x02297E94 CBNZ X20, 0x2297EA4
	0x02297E98 B 0x2297F28
	0x02297E9C MOV X1, X31
	0x02297EA0 CBZ X20, 0x2297F28
	0x02297EA4 LDR X9, [X19 + 0x38]
	0x02297EA8 LDR W10, [X20 + 0x1C]
	0x02297EAC LDR X8, [X20 + 0x10]
	0x02297EB0 LDR X9, [X9 + 0x40]
	0x02297EB4 ADD W10, W10, 0x1
	0x02297EB8 STR W10, [X20 + 0x1C]
	0x02297EBC CBZ X8, 0x2297F2C
	0x02297EC0 LDRSW X10, [X20 + 0x18]
	0x02297EC4 LDR W11, [X8 + 0x18]
	0x02297EC8 CMP W10, W11

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Move [X31+48], X31
	018 Compare X21, 0
	019 JumpIfEqual {127}
	020 Move X8, [X19+56]
	021 Move X0, X21
	022 Move X1, [X8+8]
	023 Add X8, X31, 8
	024 Call List`1<Object>.GetEnumerator, X0
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move X8, [X31+24]
	027 Move [X31+2], V0
	028 Move [X31+48], X8
	029 Move X8, [X19+56]
	030 Move X1, [X8+72]
	031 Add X0, X31, 32
	032 Call Enumerator<Object>.MoveNext, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {108}
	037 Move X8, [X19+56]
	038 Move X21, [X31+48]
	039 Move X1, [X8+48]
	040 Move W8, [X1+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X0, X21
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfEqual {29}
	052 Move X8, [X19+56]
	053 Move X1, [X8+48]
	054 Move W8, [X1+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X1
	060 Call 0x1C5D684
	061 Move X1, X0
	062 Move X0, X21
	063 Call 0x1C17E00
	064 Move X8, [X19+56]
	065 Move X21, X0
	066 Move X22, [X8+48]
	067 Move W8, [X22+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X22
	073 Call 0x1C5D684
	074 Move X22, X0
	075 Compare X21, 0
	076 JumpIfEqual {85}
	077 Move X0, X21
	078 Move X1, X22
	079 Call 0x1C17E00
	080 Move X1, X0
	081 Compare X1, 0
	082 JumpIfEqual {124}
	083 Compare X20, 0
	084 JumpIfNotEqual {88}
	085 Move X1, X31
	086 Compare X20, 0
	087 JumpIfEqual {122}
	088 Move X9, [X19+56]
	089 Move W10, [X20+28]
	090 Move X8, [X20+16]
	091 Move X9, [X9+64]
	092 Add W10, W10, 1
	093 Move [X20+28], W10
	094 Compare X8, 0
	095 JumpIfEqual {123}
	096 NotImplemented "Instruction LDRSW not yet implemented."
	097 Move W11, [X8+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add W9, W10, 1
	100 Add X8, X8, X10
	101 Move [X20+24], W9
	102 Move [X8+32], X1
	103 Move X8, [X9+32]
	104 Move X8, [X8+192]
	105 Move X2, [X8+112]
	106 Move X0, X20
	107 Call List`1<Object>.AddWithResize, X0, X1
	108 Move X21, X31
	109 Move X8, [X19+56]
	110 Add X0, X31, 32
	111 Move X1, [X8+80]
	112 Call Enumerator<Object>.Dispose, X0
	113 Compare X21, 0
	114 JumpIfNotEqual {128}
	115 Move X20, [X31+96]
	116 Move X19, [X31+104]
	117 Move X22, [X31+80]
	118 Move X21, [X31+88]
	119 Move X30, [X31+64]
	120 Add X31, X31, 112
	121 Return 
	122 Call 0x1C17F20
	123 Call 0x1C17F20
	124 Move X0, X21
	125 Move X1, X22
	126 Call 0x1C181E0
	127 Call 0x1C17F20
	128 Move X0, X21
	129 Call 0x1C17F18
	130 Move X20, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X20
	133 Call 0x3EB2AD0
	134 Move X21, [X0]
	135 Call 0x3EB2AE0
	136 Move X21, X31
	137 Move X20, X0
	138 Move X8, [X19+56]
	139 Move X1, [X8+80]
	140 Add X0, X31, 32
	141 Call Enumerator<Object>.Dispose, X0
	142 Compare X21, 0
	143 JumpIfNotEqual {146}
	144 Move X0, X20
	145 Call 0x1D2D690
	146 Move X0, X21
	147 Call 0x1C17F18
	148 Call 0x1991590

Method: System.Void RegisterDescriptor(TDescriptor descriptor, System.Collections.Generic.List`1<TBaseTypeInList> storeInList)

Disassembly:
	0x0229845C LDR X2, [X1]
	0x02298460 LDR X30, [X31], #0x20
	0x02298464 BR X2
	0x02298468 STR X30, [X31 - 0x20]!
	0x0229846C STP X20, X19, [X31 + 0x10]
	0x02298470 LDR X8, [X1 + 0x38]
	0x02298474 MOV X19, X1
	0x02298478 MOV X20, X0
	0x0229847C CBNZ X8, 0x229849C
	0x02298480 ADRP X0, 0x1E84000
	0x02298484 LDR X0, [X0 + 0x740]
	0x02298488 BL 0x1C16CF4
	0x0229848C LDR X8, [X19 + 0x38]
	0x02298490 CBNZ X8, 0x229849C
	0x02298494 MOV X0, X19
	0x02298498 BL 0x1C5C6E0
	0x0229849C ADRP X8, 0x1E84000
	0x022984A0 LDR X8, [X8 + 0x740]
	0x022984A4 LDR X0, [X8]
	0x022984A8 LDR W8, [X0 + 0xE0]
	0x022984AC CBNZ W8, 0x22984B4
	0x022984B0 BL 0x1C16DFC
	0x022984B4 LDR X8, [X19 + 0x38]
	0x022984B8 MOV X0, X20
	0x022984BC LDP X20, X19, [X31 + 0x10]
	0x022984C0 LDR X1, [X8 + 0x8]
	0x022984C4 LDR X30, [X31], #0x20
	0x022984C8 B 0x22972B8
	0x022984CC STR X30, [X31 - 0x20]!
	0x022984D0 STP X20, X19, [X31 + 0x10]
	0x022984D4 LDR X8, [X1 + 0x38]
	0x022984D8 MOV X20, X1
	0x022984DC MOV X19, X0
	0x022984E0 CBNZ X8, 0x2298500
	0x022984E4 ADRP X0, 0x1E84000
	0x022984E8 LDR X0, [X0 + 0x740]
	0x022984EC BL 0x1C16CF4
	0x022984F0 LDR X8, [X20 + 0x38]
	0x022984F4 CBNZ X8, 0x2298500
	0x022984F8 MOV X0, X20
	0x022984FC BL 0x1C5C6E0
	0x02298500 ADRP X8, 0x1E84000
	0x02298504 LDR X8, [X8 + 0x740]
	0x02298508 LDR X0, [X8]
	0x0229850C LDR W8, [X0 + 0xE0]
	0x02298510 CBNZ W8, 0x2298518
	0x02298514 BL 0x1C16DFC
	0x02298518 LDR X8, [X20 + 0x38]
	0x0229851C MOV X0, X19
	0x02298520 LDP X20, X19, [X31 + 0x10]
	0x02298524 LDR X1, [X8 + 0x8]
	0x02298528 LDR X2, [X1]
	0x0229852C LDR X30, [X31], #0x20
	0x02298530 BR X2
	0x02298534 STP X30, X21, [X31 - 0x20]!
	0x02298538 STP X20, X19, [X31 + 0x10]
	0x0229853C LDR X8, [X1 + 0x38]
	0x02298540 MOV X20, X1
	0x02298544 MOV X19, X0
	0x02298548 CBNZ X8, 0x2298568
	0x0229854C ADRP X0, 0x1E83000
	0x02298550 LDR X0, [X0 + 0xC0]
	0x02298554 BL 0x1C16CF4
	0x02298558 LDR X8, [X20 + 0x38]
	0x0229855C CBNZ X8, 0x2298568
	0x02298560 MOV X0, X20
	0x02298564 BL 0x1C5C6E0
	0x02298568 CBZ X19, 0x2298604
	0x0229856C LDP W2, W8, [X19 + 0x18]
	0x02298570 ADD W8, W8, 0x1
	0x02298574 CMP W2, 0x1
	0x02298578 STP W31, W8, [X19 + 0x18]
	0x0229857C B.LT 0x2298590
	0x02298580 LDR X0, [X19 + 0x10]
	0x02298584 MOV W1, W31
	0x02298588 MOV X3, X31
	0x0229858C BL 0x339FA34
	0x02298590 ADRP X21, 0x1E83000
	0x02298594 LDR X21, [X21 + 0xC0]
	0x02298598 LDR X0, [X21]
	0x0229859C LDR W8, [X0 + 0xE0]
	0x022985A0 CBNZ W8, 0x22985AC
	0x022985A4 BL 0x1C16DFC
	0x022985A8 LDR X0, [X21]
	0x022985AC LDR X8, [X0 + 0xB8]
	0x022985B0 LDR X9, [X20 + 0x38]
	0x022985B4 MOV X1, X19
	0x022985B8 LDR X0, [X8 + 0x10]
	0x022985BC LDR X2, [X9 + 0x10]
	0x022985C0 BL 0x2297D9C
	0x022985C4 LDR X8, [X21]
	0x022985C8 LDR X9, [X20 + 0x38]
	0x022985CC MOV X1, X19
	0x022985D0 LDR X8, [X8 + 0xB8]
	0x022985D4 LDR X2, [X9 + 0x18]
	0x022985D8 LDR X0, [X8 + 0x18]
	0x022985DC BL 0x2297D9C
	0x022985E0 LDR X8, [X21]
	0x022985E4 LDR X9, [X20 + 0x38]
	0x022985E8 MOV X1, X19
	0x022985EC LDP X20, X19, [X31 + 0x10]
	0x022985F0 LDR X8, [X8 + 0xB8]
	0x022985F4 LDR X2, [X9 + 0x20]
	0x022985F8 LDR X0, [X8 + 0x20]
	0x022985FC LDP X30, X21, [X31], #0x20
	0x02298600 B 0x2297D9C
	0x02298604 BL 0x1C16F20
	0x02298608 STP X30, X21, [X31 - 0x20]!
	0x0229860C STP X20, X19, [X31 + 0x10]
	0x02298610 LDR X8, [X1 + 0x38]
	0x02298614 MOV X20, X1
	0x02298618 MOV X19, X0
	0x0229861C CBNZ X8, 0x229863C
	0x02298620 ADRP X0, 0x1E83000
	0x02298624 LDR X0, [X0 + 0xC0]
	0x02298628 BL 0x1C16CF4
	0x0229862C LDR X8, [X20 + 0x38]
	0x02298630 CBNZ X8, 0x229863C
	0x02298634 MOV X0, X20
	0x02298638 BL 0x1C5C6E0
	0x0229863C CBZ X19, 0x22986D4
	0x02298640 LDR X8, [X20 + 0x38]
	0x02298644 MOV X0, X19
	0x02298648 LDR X1, [X8 + 0x8]
	0x0229864C LDR X8, [X1]
	0x02298650 BLR X8
	0x02298654 ADRP X21, 0x1E83000
	0x02298658 LDR X21, [X21 + 0xC0]
	0x0229865C LDR X0, [X21]
	0x02298660 LDR W8, [X0 + 0xE0]
	0x02298664 CBNZ W8, 0x2298670
	0x02298668 BL 0x1C16DFC
	0x0229866C LDR X0, [X21]
	0x02298670 LDR X8, [X20 + 0x38]
	0x02298674 LDR X9, [X0 + 0xB8]
	0x02298678 MOV X1, X19
	0x0229867C LDR X2, [X8 + 0x10]
	0x02298680 LDR X0, [X9 + 0x10]
	0x02298684 LDR X8, [X2]
	0x02298688 BLR X8
	0x0229868C LDR X8, [X21]
	0x02298690 LDR X9, [X20 + 0x38]
	0x02298694 MOV X1, X19
	0x02298698 LDR X8, [X8 + 0xB8]
	0x0229869C LDR X2, [X9 + 0x18]
	0x022986A0 LDR X0, [X8 + 0x18]
	0x022986A4 LDR X8, [X2]
	0x022986A8 BLR X8
	0x022986AC LDR X8, [X21]
	0x022986B0 LDR X9, [X20 + 0x38]
	0x022986B4 MOV X1, X19
	0x022986B8 LDP X20, X19, [X31 + 0x10]
	0x022986BC LDR X8, [X8 + 0xB8]
	0x022986C0 LDR X2, [X9 + 0x20]
	0x022986C4 LDR X0, [X8 + 0x20]
	0x022986C8 LDR X3, [X2]
	0x022986CC LDP X30, X21, [X31], #0x20
	0x022986D0 BR X3
	0x022986D4 BL 0x1C16F20
	0x022986D8 STP X29, X30, [X31 - 0x60]!
	0x022986DC STP X28, X27, [X31 + 0x10]
	0x022986E0 STP X26, X25, [X31 + 0x20]
	0x022986E4 STP X24, X23, [X31 + 0x30]
	0x022986E8 STP X22, X21, [X31 + 0x40]
	0x022986EC STP X20, X19, [X31 + 0x50]
	0x022986F0 ADD X29, X31, 0x0
	0x022986F4 SUB X31, X31, 0x50
	0x022986F8 STUR W2, [X29 - 0x24]
	0x022986FC MRS X8, 0xC000
	0x02298700 STUR X8, [X29 - 0x30]
	0x02298704 LDR X8, [X8 + 0x28]
	0x02298708 MOV X22, X4
	0x0229870C MOV X21, X3
	0x02298710 MOV W28, W1
	0x02298714 STUR X8, [X29 - 0x8]
	0x02298718 LDR X8, [X4 + 0x38]
	0x0229871C MOV X19, X0
	0x02298720 CBNZ X8, 0x2298774
	0x02298724 ADRP X0, 0x1E60000
	0x02298728 LDR X0, [X0 + 0x528]
	0x0229872C BL 0x1C16CF4
	0x02298730 ADRP X0, 0x1E63000
	0x02298734 LDR X0, [X0 + 0x760]
	0x02298738 BL 0x1C16CF4
	0x0229873C ADRP X0, 0x1E84000
	0x02298740 LDR X0, [X0 + 0x760]
	0x02298744 BL 0x1C16CF4
	0x02298748 ADRP X0, 0x1E84000
	0x0229874C LDR X0, [X0 + 0x1C0]
	0x02298750 BL 0x1C16CF4
	0x02298754 ADRP X0, 0x1E84000
	0x02298758 LDR X0, [X0 + 0x768]
	0x0229875C BL 0x1C16CF4
	0x02298760 LDR X8, [X22 + 0x38]
	0x02298764 CBNZ X8, 0x2298774
	0x02298768 MOV X0, X22
	0x0229876C BL 0x1C5C6E0
	0x02298770 LDR X8, [X22 + 0x38]
	0x02298774 LDR X8, [X8 + 0x20]
	0x02298778 LDR W23, [X8 + 0xFC]
	0x0229877C ADD X8, X31, 0x0
	0x02298780 ADD X9, X23, 0xF
	0x02298784 AND X27, X9, 0x1FFFFFFFF
	0x02298788 SUB X25, X8, X27
	0x0229878C ADD X31, X25, 0x0
	0x02298790 ADD X8, X31, 0x0
	0x02298794 SUB X20, X8, X27
	0x02298798 ADD X31, X20, 0x0
	0x0229879C ADD X8, X31, 0x0
	0x022987A0 SUB X8, X8, X27
	0x022987A4 STUR X8, [X29 - 0x48]
	0x022987A8 ADD X31, X8, 0x0
	0x022987AC ADD X8, X31, 0x0
	0x022987B0 SUB X26, X8, X27
	0x022987B4 ADD X31, X26, 0x0
	0x022987B8 ADD X8, X31, 0x0
	0x022987BC SUB X8, X8, X27
	0x022987C0 STUR X8, [X29 - 0x40]
	0x022987C4 ADD X31, X8, 0x0
	0x022987C8 ADD X8, X31, 0x0
	0x022987CC SUB X8, X8, X27
	0x022987D0 STUR X8, [X29 - 0x38]
	0x022987D4 ADD X31, X8, 0x0
	0x022987D8 ADD X8, X31, 0x0
	0x022987DC SUB X24, X8, X27
	0x022987E0 ADD X31, X24, 0x0
	0x022987E4 MOV X0, X24
	0x022987E8 MOV W1, W31
	0x022987EC MOV X2, X23
	0x022987F0 BL 0x3EB1B10
	0x022987F4 ADD X8, X31, 0x0
	0x022987F8 SUB X27, X8, X27
	0x022987FC ADD X31, X27, 0x0
	0x02298800 MOV X0, X27
	0x02298804 MOV W1, W31
	0x02298808 MOV X2, X23
	0x0229880C BL 0x3EB1B10
	0x02298810 STR X31, [X21]
	0x02298814 CBZ X19, 0x2298878
	0x02298818 STUR W28, [X29 - 0x4C]
	0x0229881C TBNZ X28, 0x1F, 0x22988CC
	0x02298820 LDR X8, [X22 + 0x38]
	0x02298824 LDR X1, [X8 + 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X0, 0x1E5C000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x1E85000
	018 Move X0, [X0+1864]
	019 Call 0x1C17CF4
	020 Move X0, 0x1E85000
	021 Move X0, [X0+1856]
	022 Call 0x1C17CF4
	023 Move X0, 0x1E85000
	024 Move X0, [X0+1872]
	025 Call 0x1C17CF4
	026 Move X0, 0x1E85000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X8, [X20+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X20
	033 Call 0x1C5D6E0
	034 Compare X19, 0
	035 JumpIfEqual {264}
	036 Move W8, [X19+24]
	037 Move X24, 0x1E85000
	038 Move X24, [X24+1864]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W22, W31
	041 Move X8, [X20+56]
	042 Move X0, X19
	043 Move W1, W22
	044 Move X2, [X8+8]
	045 Call List`1<Object>.get_Item, X0, X1
	046 Compare X0, 0
	047 JumpIfEqual {264}
	048 Move X8, [X0]
	049 Move X1, [X24]
	050 Move X23, X0
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X23
	061 Move W2, W31
	062 Call 0x1C5D788
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X0, X23
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X21, 0
	071 JumpIfEqual {264}
	072 Move X8, [X21]
	073 Move X1, [X24]
	074 Move X23, X0
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X21
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X1, X0
	095 Move X0, X23
	096 Move X2, X31
	097 Call String.op_Inequality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {121}
	102 Move W8, [X19+24]
	103 Add W22, W22, 1
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Compare X21, 0
	106 JumpIfEqual {264}
	107 Move X8, [X21]
	108 Move X1, [X24]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move X0, X21
	119 Move W2, W31
	120 Call 0x1C5D788
	121 Move X8, [X21]
	122 Move X1, [X24]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X21
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X21
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X8, 0x1E85000
	143 Move X8, [X8+1856]
	144 Move X22, X0
	145 Move X8, [X8]
	146 Move W9, [X8+224]
	147 Compare W9, 0
	148 JumpIfNotEqual {151}
	149 Move X0, X8
	150 Call 0x1C17DFC
	151 Move X0, X22
	152 Move X1, X31
	153 Call SubsystemDescriptorStore.ReportSingleSubsystemAnalytics, X0
	154 Move X8, [X20+56]
	155 Move X22, [X8+16]
	156 Move W8, [X22+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {164}
	161 Move X0, X22
	162 Call 0x1C5D684
	163 Move X22, X0
	164 Move X0, X21
	165 Move X1, X22
	166 Call 0x1C17E00
	167 Compare X0, 0
	168 JumpIfEqual {265}
	169 Move X9, [X20+56]
	170 Move W10, [X19+28]
	171 Move X8, [X19+16]
	172 Move X9, [X9+64]
	173 Add W10, W10, 1
	174 Move [X19+28], W10
	175 Compare X8, 0
	176 JumpIfEqual {264}
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Move W11, [X8+24]
	179 Move X1, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Add W9, W10, 1
	182 Move [X19+24], W9
	183 Move X20, [X31+48]
	184 Move X19, [X31+56]
	185 Move X22, [X31+32]
	186 Move X21, [X31+40]
	187 Move X24, [X31+16]
	188 Move X23, [X31+24]
	189 Add X8, X8, X10
	190 Move [X8+32], X1
	191 Move X30, [X31+64]
	192 Return 
	193 Move X8, [X9+32]
	194 Move X0, X19
	195 Move X20, [X31+48]
	196 Move X19, [X31+56]
	197 Move X22, [X31+32]
	198 Move X21, [X31+40]
	199 Move X8, [X8+192]
	200 Move X24, [X31+16]
	201 Move X23, [X31+24]
	202 Move X2, [X8+112]
	203 Move X30, [X31+64]
	204 Call List`1<Object>.AddWithResize, X0, X1
	205 Return 
	206 NotImplemented "Instruction LDRSW not yet implemented."
	207 Add X8, X8, X9
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X1, [X0+8]
	211 Move X0, X21
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move X8, 0x1E85000
	214 Move X8, [X8+1872]
	215 Move X9, 0x1E85000
	216 Move X9, [X9+1880]
	217 Move X1, X0
	218 Move X8, [X8]
	219 Move X3, X31
	220 Move X2, [X9]
	221 Move X0, X8
	222 Call String.Concat, X0, X1, X2
	223 Move X8, 0x1E5C000
	224 Move X8, [X8+2600]
	225 Move X23, X0
	226 Move X8, [X8]
	227 Move W9, [X8+224]
	228 Compare W9, 0
	229 JumpIfNotEqual {232}
	230 Move X0, X8
	231 Call 0x1C17DFC
	232 Move X0, X23
	233 Move X1, X31
	234 Call Debug.LogWarning, X0
	235 Move X8, [X20+56]
	236 Move X23, [X8+16]
	237 Move W8, [X23+309]
	238 Move TEMP, X8
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfEqual {245}
	242 Move X0, X23
	243 Call 0x1C5D684
	244 Move X23, X0
	245 Move X0, X21
	246 Move X1, X23
	247 Call 0x1C17E00
	248 Compare X0, 0
	249 JumpIfEqual {268}
	250 Move X8, [X20+56]
	251 Move X2, X0
	252 Move X0, X19
	253 Move W1, W22
	254 Move X3, [X8+48]
	255 Move X20, [X31+48]
	256 Move X19, [X31+56]
	257 Move X22, [X31+32]
	258 Move X21, [X31+40]
	259 Move X24, [X31+16]
	260 Move X23, [X31+24]
	261 Move X30, [X31+64]
	262 Call List`1<Object>.set_Item, X0, X1, X2
	263 Return 
	264 Call 0x1C17F20
	265 Move X0, X21
	266 Move X1, X22
	267 Call 0x1C181E0
	268 Move X0, X21
	269 Move X1, X23
	270 Call 0x1C181E0

Method: System.Void RegisterDeprecatedDescriptor(UnityEngine.SubsystemDescriptor descriptor)

Disassembly:
	0x03C99C90 LDR X8, [X0 + 0x18]
	0x03C99C94 MOV X22, X0
	0x03C99C98 CMP W8, 0x1
	0x03C99C9C B.LT 0x3C99CF8
	0x03C99CA0 MOV X24, X31
	0x03C99CA4 AND X8, X8, 0x0
	0x03C99CA8 ADD X25, X22, 0x20
	0x03C99CAC AND W21, W21, 0x1
	0x03C99CB0 CMP X24, W8, UXTW
	0x03C99CB4 B.CS 0x3C99D0C
	0x03C99CB8 LDR X8, [X23]
	0x03C99CBC LDR X8, [X8 + 0xB8]
	0x03C99CC0 LDR X8, [X8]
	0x03C99CC4 CBZ X8, 0x3C99D10
	0x03C99CC8 LDR X1, [X25, X24, LSL #3]
	0x03C99CCC LDR X9, [X8 + 0x18]
	0x03C99CD0 LDR X0, [X8 + 0x40]
	0x03C99CD4 LDR X5, [X8 + 0x28]
	0x03C99CD8 MOV X2, X20
	0x03C99CDC MOV X3, X19
	0x03C99CE0 MOV W4, W21
	0x03C99CE4 BLR X9
	0x03C99CE8 LDR W8, [X22 + 0x18]
	0x03C99CEC ADD X24, X24, 0x1
	0x03C99CF0 CMP X24, W8, SXTW
	0x03C99CF4 B.LT 0x3C99CB0
	0x03C99CF8 LDP X20, X19, [X31 + 0x30]
	0x03C99CFC LDP X22, X21, [X31 + 0x20]
	0x03C99D00 LDP X24, X23, [X31 + 0x10]
	0x03C99D04 LDP X30, X25, [X31], #0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74F000
	006 Move X20, 0x484000
	007 Move W8, [X21+352]
	008 Move X20, [X20+1856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4C9000
	015 Move X0, [X0+16]
	016 Call 0x1C17CF4
	017 Move X0, 0x484000
	018 Move X0, [X0+1856]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+352], W8
	022 Move X0, [X20]
	023 Move X21, 0x4C9000
	024 Move W8, [X0+224]
	025 Move X21, [X21+16]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X2, [X21]
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, [X8+16]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call 0x229845C, X0, X1
	039 Return 

Method: System.Void .cctor()

Disassembly:
	0x03C9A85C CBNZ W9, 0x3C9A868
	0x03C9A860 MOV X0, X8
	0x03C9A864 BL 0x1C16DFC
	0x03C9A868 MOV X0, X26
	0x03C9A86C MOV X1, X31
	0x03C9A870 MOV X2, X31
	0x03C9A874 BL 0x3C3883C
	0x03C9A878 TBNZ X0, 0x0, 0x3C9AA24
	0x03C9A87C CBZ X20, 0x3C9A898
	0x03C9A880 LDR X8, [X20 + 0x18]
	0x03C9A884 LDR X0, [X20 + 0x40]
	0x03C9A888 LDR X2, [X20 + 0x28]
	0x03C9A88C MOV X1, X25
	0x03C9A890 BLR X8
	0x03C9A894 TBZ X0, 0x0, 0x3C9AA24
	0x03C9A898 MOV X0, X25
	0x03C9A89C MOV X1, X31
	0x03C9A8A0 BL 0x3C32E90
	0x03C9A8A4 CBZ X0, 0x3C9AAA8
	0x03C9A8A8 MOV X1, X31
	0x03C9A8AC BL 0x3C3F58C
	0x03C9A8B0 LDRB W8, [X19 + 0x5D7]
	0x03C9A8B4 MOV V11.16B, V0.16B
	0x03C9A8B8 MOV V10.16B, V2.16B
	0x03C9A8BC CBNZ W8, 0x3C9A8D0
	0x03C9A8C0 MOV X0, X24
	0x03C9A8C4 BL 0x1C16CF4
	0x03C9A8C8 MOVZ W8, 0x1
	0x03C9A8CC STRB W8, [X19 + 0x5D7]
	0x03C9A8D0 LDR X0, [X24]
	0x03C9A8D4 LDR W8, [X0 + 0xE0]
	0x03C9A8D8 CBNZ W8, 0x3C9A8E0
	0x03C9A8DC BL 0x1C16DFC
	0x03C9A8E0 FSUB S0, S11, S9
	0x03C9A8E4 FMUL S12, S15, S0
	0x03C9A8E8 FCVT S11, S12
	0x03C9A8EC ADD X0, X31, 0x8
	0x03C9A8F0 MOV V0.16B, V11.16B
	0x03C9A8F4 BL 0x3EB1C00
	0x03C9A8F8 FCMP S12, 0x0
	0x03C9A8FC B.GE 0x3C9A918
	0x03C9A900 FMOV D12, -0.5
	0x03C9A904 FCMP D0, D12
	0x03C9A908 B.NE 0x3C9A940
	0x03C9A90C LDR V0, [X31 + 0x8]
	0x03C9A910 FMOV D1, -1
	0x03C9A914 B 0x3C9A92C
	0x03C9A918 FCMP D0, D14
	0x03C9A91C FMOV D12, -0.5
	0x03C9A920 B.NE 0x3C9A94C
	0x03C9A924 LDR V0, [X31 + 0x8]
	0x03C9A928 FMOV D1, 1
	0x03C9A92C FCVTZS X8, D0
	0x03C9A930 FADD D1, D0, D1
	0x03C9A934 ANDS X31, X8, 0x1
	0x03C9A938 FCSEL D0, D0, D1, EQ
	0x03C9A93C B 0x3C9A954
	0x03C9A940 FADD D0, D11, D12
	0x03C9A944 FRINTP D0, D0
	0x03C9A948 B 0x3C9A954
	0x03C9A94C FADD D0, D11, D14
	0x03C9A950 FRINTM D0, D0
	0x03C9A954 LDRB W8, [X19 + 0x5D7]
	0x03C9A958 FMOV D1, X23
	0x03C9A95C FCVTZS W9, D0
	0x03C9A960 FCMP D0, D1
	0x03C9A964 MOVZ W10, 0x80000000
	0x03C9A968 CSEL W26, W10, W9, EQ
	0x03C9A96C CBNZ W8, 0x3C9A980
	0x03C9A970 MOV X0, X24
	0x03C9A974 BL 0x1C16CF4
	0x03C9A978 MOVZ W8, 0x1
	0x03C9A97C STRB W8, [X19 + 0x5D7]
	0x03C9A980 LDR X0, [X24]
	0x03C9A984 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x74E000
	011 Move X26, 0x4C8000
	012 Move X19, 0x4C8000
	013 Move X20, 0x483000
	014 Move X24, 0x4C8000
	015 Move X23, 0x4C8000
	016 Move X22, 0x4C8000
	017 Move X21, 0x4C8000
	018 Move X26, [X26+192]
	019 Move X19, [X19+200]
	020 Move W8, [X25+353]
	021 Move X20, [X20+1856]
	022 Move X24, [X24+208]
	023 Move X23, [X23+216]
	024 Move X22, [X22+224]
	025 Move X21, [X21+232]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x4C8000
	031 Move X0, [X0+200]
	032 Call 0x1C17CF4
	033 Move X0, 0x4C8000
	034 Move X0, [X0+216]
	035 Call 0x1C17CF4
	036 Move X0, 0x4C8000
	037 Move X0, [X0+232]
	038 Call 0x1C17CF4
	039 Move X0, 0x4C8000
	040 Move X0, [X0+224]
	041 Call 0x1C17CF4
	042 Move X0, 0x4C8000
	043 Move X0, [X0+208]
	044 Call 0x1C17CF4
	045 Move X0, 0x4C8000
	046 Move X0, [X0+192]
	047 Call 0x1C17CF4
	048 Move X0, 0x483000
	049 Move X0, [X0+1856]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X25+353], W8
	053 Move X0, [X26]
	054 Call 0x1C17F10
	055 Move X1, [X19]
	056 Move X19, X0
	057 Call List`1<Object>..ctor, X0
	058 Move X8, [X20]
	059 Move X8, [X8+184]
	060 Move [X8], X19
	061 Move X0, [X24]
	062 Call 0x1C17F10
	063 Move X1, [X23]
	064 Move X19, X0
	065 Call List`1<Object>..ctor, X0
	066 Move X8, [X20]
	067 Move X8, [X8+184]
	068 Move [X8+8], X19
	069 Move X0, [X22]
	070 Call 0x1C17F10
	071 Move X1, [X21]
	072 Move X19, X0
	073 Call List`1<Object>..ctor, X0
	074 Move X8, [X20]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X8, [X8+184]
	082 Move [X8+16], X19
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X30, [X31+80]
	086 Return 

