Type: UnityEngine.SubsystemManager

Method: System.Void ReloadSubsystemsStarted()

Disassembly:
	0x03C99D08 RET
	0x03C99D0C BL 0x1C16F28
	0x03C99D10 BL 0x1C16F20
	0x03C99D14 STR X30, [X31 - 0x20]!
	0x03C99D18 STP X20, X19, [X31 + 0x10]
	0x03C99D1C ADRP X20, 0x74E000
	0x03C99D20 LDR X1, [X20 + 0x1B8]
	0x03C99D24 MOV X19, X0
	0x03C99D28 CBNZ X1, 0x3C99D40
	0x03C99D2C ADRP X0, 0xFFFFFFFFFCE86000
	0x03C99D30 ADD X0, X0, 0x71F
	0x03C99D34 BL 0x1C16CB8
	0x03C99D38 MOV X1, X0
	0x03C99D3C STR X0, [X20 + 0x1B8]
	0x03C99D40 MOV X0, X19
	0x03C99D44 LDP X20, X19, [X31 + 0x10]
	0x03C99D48 LDR X30, [X31], #0x20
	0x03C99D4C BR X1
	0x03C99D50 STR X30, [X31 - 0x50]!
	0x03C99D54 STP X26, X25, [X31 + 0x10]
	0x03C99D58 STP X24, X23, [X31 + 0x20]
	0x03C99D5C STP X22, X21, [X31 + 0x30]
	0x03C99D60 STP X20, X19, [X31 + 0x40]
	0x03C99D64 ADRP X25, 0x74E000
	0x03C99D68 ADRP X24, 0x4C8000
	0x03C99D6C LDRB W8, [X25 + 0x191]
	0x03C99D70 LDR X24, [X24 + 0xF0]
	0x03C99D74 MOV W22, W4
	0x03C99D78 MOV X19, X3
	0x03C99D7C MOV X20, X2
	0x03C99D80 MOV X21, X1
	0x03C99D84 MOV X23, X0
	0x03C99D88 TBNZ X8, 0x0, 0x3C99DA0
	0x03C99D8C ADRP X0, 0x4C8000
	0x03C99D90 LDR X0, [X0 + 0xF0]
	0x03C99D94 BL 0x1C16CF4
	0x03C99D98 MOVZ W8, 0x1
	0x03C99D9C STRB W8, [X25 + 0x191]
	0x03C99DA0 LDR X8, [X24]
	0x03C99DA4 LDR X8, [X8 + 0xB8]
	0x03C99DA8 LDR X8, [X8 + 0x8]
	0x03C99DAC CBZ X8, 0x3C99E4C
	0x03C99DB0 CBZ X23, 0x3C99E68
	0x03C99DB4 ADRP X25, 0x74E000
	0x03C99DB8 LDR X8, [X25 + 0x1B8]
	0x03C99DBC CBNZ X8, 0x3C99DD4
	0x03C99DC0 ADRP X0, 0xFFFFFFFFFCE86000
	0x03C99DC4 ADD X0, X0, 0x71F
	0x03C99DC8 BL 0x1C16CB8
	0x03C99DCC MOV X8, X0
	0x03C99DD0 STR X0, [X25 + 0x1B8]
	0x03C99DD4 MOV X0, X23
	0x03C99DD8 BLR X8
	0x03C99DDC CBZ X0, 0x3C99E68
	0x03C99DE0 LDR X8, [X0 + 0x18]
	0x03C99DE4 MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74F000
	005 Move X19, 0x483000
	006 Move W8, [X20+322]
	007 Move X19, [X19+192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x483000
	013 Move X0, [X0+192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+322], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X9, [X8+40]
	025 Compare X9, 0
	026 JumpIfEqual {41}
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {33}
	030 Call 0x1C17DFC
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X8, [X8+40]
	034 Compare X8, 0
	035 JumpIfEqual {70}
	036 Move X9, [X8+24]
	037 Move X0, [X8+64]
	038 Move X1, [X8+40]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X0, [X19]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X19]
	046 Move X8, [X0+184]
	047 Move X8, [X8]
	048 Compare X8, 0
	049 JumpIfEqual {66}
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X19]
	055 Move X8, [X0+184]
	056 Move X8, [X8]
	057 Compare X8, 0
	058 JumpIfEqual {70}
	059 Move X2, [X8+24]
	060 Move X0, [X8+64]
	061 Move X1, [X8+40]
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 CallNoReturn X2
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return 
	070 Call 0x1C17F20

Method: System.Void ReloadSubsystemsCompleted()

Disassembly:
	0x03C99DE8 CMP W8, 0x1
	0x03C99DEC B.LT 0x3C99E4C
	0x03C99DF0 MOV X25, X31
	0x03C99DF4 AND X8, X8, 0x0
	0x03C99DF8 ADD X26, X23, 0x20
	0x03C99DFC AND W22, W22, 0x1
	0x03C99E00 CMP X25, W8, UXTW
	0x03C99E04 B.CS 0x3C99E64
	0x03C99E08 LDR X8, [X24]
	0x03C99E0C LDR X8, [X8 + 0xB8]
	0x03C99E10 LDR X8, [X8 + 0x8]
	0x03C99E14 CBZ X8, 0x3C99E68
	0x03C99E18 LDR X1, [X26, X25, LSL #3]
	0x03C99E1C LDR X9, [X8 + 0x18]
	0x03C99E20 LDR X0, [X8 + 0x40]
	0x03C99E24 LDR X6, [X8 + 0x28]
	0x03C99E28 MOV X2, X21
	0x03C99E2C MOV X3, X20
	0x03C99E30 MOV X4, X19
	0x03C99E34 MOV W5, W22
	0x03C99E38 BLR X9
	0x03C99E3C LDR W8, [X23 + 0x18]
	0x03C99E40 ADD X25, X25, 0x1
	0x03C99E44 CMP X25, W8, SXTW
	0x03C99E48 B.LT 0x3C99E00
	0x03C99E4C LDP X20, X19, [X31 + 0x40]
	0x03C99E50 LDP X22, X21, [X31 + 0x30]
	0x03C99E54 LDP X24, X23, [X31 + 0x20]
	0x03C99E58 LDP X26, X25, [X31 + 0x10]
	0x03C99E5C LDR X30, [X31], #0x50
	0x03C99E60 RET
	0x03C99E64 BL 0x1C16F28
	0x03C99E68 BL 0x1C16F20
	0x03C99E6C STP X30, X21, [X31 - 0x20]!
	0x03C99E70 STP X20, X19, [X31 + 0x10]
	0x03C99E74 LDR X8, [X2 + 0x8]
	0x03C99E78 STP X1, X2, [X0 + 0x20]
	0x03C99E7C MOV X19, X0
	0x03C99E80 MOV X20, X1
	0x03C99E84 STR X8, [X0 + 0x10]
	0x03C99E88 LDRB W21, [X2 + 0x52]
	0x03C99E8C STR X0, [X0 + 0x40]
	0x03C99E90 MOV X0, X2
	0x03C99E94 BL 0x1C16D84
	0x03C99E98 TBZ X0, 0x0, 0x3C99EB0
	0x03C99E9C CMP W21, 0x3
	0x03C99EA0 B.NE 0x3C99ECC
	0x03C99EA4 ADRP X8, 0xFFFFFFFFFDF74000
	0x03C99EA8 ADD X8, X8, 0x85C
	0x03C99EAC B 0x3C99EC0
	0x03C99EB0 CMP W21, 0x2
	0x03C99EB4 B.NE 0x3C99EC8
	0x03C99EB8 ADRP X8, 0xFFFFFFFFFDF74000
	0x03C99EBC ADD X8, X8, 0x82C
	0x03C99EC0 STR X8, [X19 + 0x18]
	0x03C99EC4 B 0x3C99EDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74F000
	005 Move X19, 0x483000
	006 Move W8, [X20+323]
	007 Move X19, [X19+192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x483000
	013 Move X0, [X0+192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+323], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X9, [X8+48]
	025 Compare X9, 0
	026 JumpIfEqual {41}
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {33}
	030 Call 0x1C17DFC
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X8, [X8+48]
	034 Compare X8, 0
	035 JumpIfEqual {70}
	036 Move X9, [X8+24]
	037 Move X0, [X8+64]
	038 Move X1, [X8+40]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X0, [X19]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X19]
	046 Move X8, [X0+184]
	047 Move X9, [X8+8]
	048 Compare X9, 0
	049 JumpIfEqual {66}
	050 Move W9, [X0+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {56}
	053 Call 0x1C17DFC
	054 Move X8, [X19]
	055 Move X8, [X8+184]
	056 Move X8, [X8+8]
	057 Compare X8, 0
	058 JumpIfEqual {70}
	059 Move X2, [X8+24]
	060 Move X0, [X8+64]
	061 Move X1, [X8+40]
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 CallNoReturn X2
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return 
	070 Call 0x1C17F20

Method: System.Void InitializeIntegratedSubsystem(System.IntPtr ptr, UnityEngine.IntegratedSubsystem subsystem)

Disassembly:
	0x03C99EC8 CBZ X20, 0x3C99EF4
	0x03C99ECC LDR X8, [X19 + 0x10]
	0x03C99ED0 LDR X9, [X19 + 0x20]
	0x03C99ED4 STR X8, [X19 + 0x18]
	0x03C99ED8 STR X9, [X19 + 0x40]
	0x03C99EDC ADRP X8, 0xFFFFFFFFFDF74000
	0x03C99EE0 ADD X8, X8, 0x7BC
	0x03C99EE4 STR X8, [X19 + 0x38]
	0x03C99EE8 LDP X20, X19, [X31 + 0x10]
	0x03C99EEC LDP X30, X21, [X31], #0x20
	0x03C99EF0 RET
	0x03C99EF4 ADRP X1, 0xFFFFFFFFFCE82000
	0x03C99EF8 ADD X1, X1, 0xEE3
	0x03C99EFC MOV X0, X31
	0x03C99F00 BL 0x1C16F3C
	0x03C99F04 MOV X1, X31
	0x03C99F08 BL 0x1C16DEC
	0x03C99F0C LDR X8, [X0 + 0x40]
	0x03C99F10 LDR X6, [X0 + 0x18]
	0x03C99F14 LDR X5, [X0 + 0x28]
	0x03C99F18 AND W4, W4, 0x1
	0x03C99F1C MOV X0, X8
	0x03C99F20 BR X6
	0x03C99F24 STP X30, X21, [X31 - 0x20]!
	0x03C99F28 STP X20, X19, [X31 + 0x10]
	0x03C99F2C LDR X8, [X2 + 0x8]
	0x03C99F30 STP X1, X2, [X0 + 0x20]
	0x03C99F34 MOV X19, X0
	0x03C99F38 MOV X20, X1
	0x03C99F3C STR X8, [X0 + 0x10]
	0x03C99F40 LDRB W21, [X2 + 0x52]
	0x03C99F44 STR X0, [X0 + 0x40]
	0x03C99F48 MOV X0, X2
	0x03C99F4C BL 0x1C16D84
	0x03C99F50 TBZ X0, 0x0, 0x3C99F68
	0x03C99F54 CMP W21, 0x4
	0x03C99F58 B.NE 0x3C99F84
	0x03C99F5C ADRP X8, 0xFFFFFFFFFDF74000
	0x03C99F60 ADD X8, X8, 0x928
	0x03C99F64 B 0x3C99F78
	0x03C99F68 CMP W21, 0x3
	0x03C99F6C B.NE 0x3C99F80
	0x03C99F70 ADRP X8, 0xFFFFFFFFFDF74000
	0x03C99F74 ADD X8, X8, 0x8F4
	0x03C99F78 STR X8, [X19 + 0x18]
	0x03C99F7C B 0x3C99F94
	0x03C99F80 CBZ X20, 0x3C99FAC
	0x03C99F84 LDR X8, [X19 + 0x10]
	0x03C99F88 LDR X9, [X19 + 0x20]
	0x03C99F8C STR X8, [X19 + 0x18]
	0x03C99F90 STR X9, [X19 + 0x40]
	0x03C99F94 ADRP X8, 0xFFFFFFFFFDF74000
	0x03C99F98 ADD X8, X8, 0x87C
	0x03C99F9C STR X8, [X19 + 0x38]
	0x03C99FA0 LDP X20, X19, [X31 + 0x10]
	0x03C99FA4 LDP X30, X21, [X31], #0x20
	0x03C99FA8 RET
	0x03C99FAC ADRP X1, 0xFFFFFFFFFCE82000
	0x03C99FB0 ADD X1, X1, 0xEE3
	0x03C99FB4 MOV X0, X31
	0x03C99FB8 BL 0x1C16F3C
	0x03C99FBC MOV X1, X31
	0x03C99FC0 BL 0x1C16DEC
	0x03C99FC4 LDR X8, [X0 + 0x40]
	0x03C99FC8 LDR X7, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74F000
	006 Move W8, [X21+324]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x4C9000
	014 Move X0, [X0+24]
	015 Call 0x1C17CF4
	016 Move X0, 0x483000
	017 Move X0, [X0+192]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+324], W8
	021 Compare X19, 0
	022 JumpIfEqual {79}
	023 Move [X19+16], X20
	024 Move X21, 0x74F000
	025 Move X20, 0x483000
	026 Move X8, [X21+256]
	027 Move X20, [X20+192]
	028 Compare X8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51859456
	031 Add X0, X0, 2513
	032 Call 0x1C17CB8
	033 Move X8, X0
	034 Move [X21+256], X0
	035 Move X0, X19
	036 Move X1, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X0, [X8+16]
	046 Compare X0, 0
	047 JumpIfEqual {79}
	048 Move X9, 0x4C9000
	049 Move X9, [X9+24]
	050 Move W10, [X0+28]
	051 Move X8, [X0+16]
	052 Move X9, [X9]
	053 Add W10, W10, 1
	054 Move [X0+28], W10
	055 Compare X8, 0
	056 JumpIfEqual {79}
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Move W11, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add W9, W10, 1
	061 Add X8, X8, X10
	062 Move [X0+24], W9
	063 Move [X8+32], X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return 
	069 Move X8, [X9+32]
	070 Move X1, X19
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X8, [X8+192]
	074 Move X2, [X8+112]
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Call List`1<Object>.AddWithResize, X0, X1
	078 Return 
	079 Call 0x1C17F20

Method: System.Void ClearSubsystems()

Disassembly:
	0x03C99FCC LDR X6, [X0 + 0x28]
	0x03C99FD0 AND W5, W5, 0x1
	0x03C99FD4 MOV X0, X8
	0x03C99FD8 BR X7
	0x03C99FDC STR X30, [X31 - 0x20]!
	0x03C99FE0 STP X20, X19, [X31 + 0x10]
	0x03C99FE4 ADRP X20, 0x74E000
	0x03C99FE8 LDR X1, [X20 + 0x198]
	0x03C99FEC MOV W19, W0
	0x03C99FF0 CBNZ X1, 0x3C9A008
	0x03C99FF4 ADRP X0, 0xFFFFFFFFFCE86000
	0x03C99FF8 ADD X0, X0, 0x6CA
	0x03C99FFC BL 0x1C16CB8
	0x03C9A000 MOV X1, X0
	0x03C9A004 STR X0, [X20 + 0x198]
	0x03C9A008 MOV W0, W19
	0x03C9A00C LDP X20, X19, [X31 + 0x10]
	0x03C9A010 LDR X30, [X31], #0x20
	0x03C9A014 BR X1
	0x03C9A018 STP X30, X21, [X31 - 0x20]!
	0x03C9A01C STP X20, X19, [X31 + 0x10]
	0x03C9A020 ADRP X21, 0x74D000
	0x03C9A024 ADRP X20, 0x459000
	0x03C9A028 LDRB W8, [X21 + 0x1A0]
	0x03C9A02C LDR X20, [X20 + 0x598]
	0x03C9A030 MOV X19, X0
	0x03C9A034 TBNZ X8, 0x0, 0x3C9A058
	0x03C9A038 ADRP X0, 0x459000
	0x03C9A03C LDR X0, [X0 + 0x598]
	0x03C9A040 BL 0x1C16CF4
	0x03C9A044 ADRP X0, 0x4A6000
	0x03C9A048 LDR X0, [X0 + 0x680]
	0x03C9A04C BL 0x1C16CF4
	0x03C9A050 MOVZ W8, 0x1
	0x03C9A054 STRB W8, [X21 + 0x1A0]
	0x03C9A058 LDR X0, [X20]
	0x03C9A05C ADRP X20, 0x4A6000
	0x03C9A060 LDR W8, [X0 + 0xE0]
	0x03C9A064 LDR X20, [X20 + 0x680]
	0x03C9A068 CBNZ W8, 0x3C9A070
	0x03C9A06C BL 0x1C16DFC
	0x03C9A070 MOV X0, X19
	0x03C9A074 MOV X1, X31
	0x03C9A078 BL 0x3C33594
	0x03C9A07C LDR X0, [X20]
	0x03C9A080 LDR W8, [X0 + 0xE0]
	0x03C9A084 CBNZ W8, 0x3C9A08C
	0x03C9A088 BL 0x1C16DFC
	0x03C9A08C ADRP X20, 0x74D000
	0x03C9A090 LDR X1, [X20 + 0x1A8]
	0x03C9A094 CBNZ X1, 0x3C9A0AC
	0x03C9A098 ADRP X0, 0xFFFFFFFFFCE83000
	0x03C9A09C ADD X0, X0, 0x742
	0x03C9A0A0 BL 0x1C16CB8
	0x03C9A0A4 MOV X1, X0
	0x03C9A0A8 STR X0, [X20 + 0x1A8]
	0x03C9A0AC MOV X0, X19
	0x03C9A0B0 LDP X20, X19, [X31 + 0x10]
	0x03C9A0B4 LDP X30, X21, [X31], #0x20
	0x03C9A0B8 BR X1
	0x03C9A0BC STR X30, [X31 - 0x20]!
	0x03C9A0C0 STP X20, X19, [X31 + 0x10]
	0x03C9A0C4 ADRP X20, 0x74D000
	0x03C9A0C8 LDR X1, [X20 + 0x1A8]
	0x03C9A0CC MOV X19, X0
	0x03C9A0D0 CBNZ X1, 0x3C9A0E8
	0x03C9A0D4 ADRP X0, 0xFFFFFFFFFCE83000
	0x03C9A0D8 ADD X0, X0, 0x742
	0x03C9A0DC BL 0x1C16CB8
	0x03C9A0E0 MOV X1, X0
	0x03C9A0E4 STR X0, [X20 + 0x1A8]
	0x03C9A0E8 MOV X0, X19
	0x03C9A0EC LDP X20, X19, [X31 + 0x10]
	0x03C9A0F0 LDR X30, [X31], #0x20
	0x03C9A0F4 BR X1
	0x03C9A0F8 SUB X31, X31, 0x30
	0x03C9A0FC STR X30, [X31 + 0x10]
	0x03C9A100 STP X20, X19, [X31 + 0x20]
	0x03C9A104 ADRP X20, 0x74D000
	0x03C9A108 LDR X8, [X20 + 0x1C8]
	0x03C9A10C MOV X19, X0
	0x03C9A110 STR W31, [X31 + 0x8]
	0x03C9A114 STR X31, [X31]
	0x03C9A118 CBNZ X8, 0x3C9A130
	0x03C9A11C ADRP X0, 0xFFFFFFFFFCE57000
	0x03C9A120 ADD X0, X0, 0x949
	0x03C9A124 BL 0x1C16CB8
	0x03C9A128 MOV X8, X0
	0x03C9A12C STR X0, [X20 + 0x1C8]
	0x03C9A130 ADD X1, X31, 0x0
	0x03C9A134 MOV X0, X19
	0x03C9A138 BLR X8
	0x03C9A13C LDP S0, S1, [X31]
	0x03C9A140 LDR V2, [X31 + 0x8]
	0x03C9A144 LDP X20, X19, [X31 + 0x20]
	0x03C9A148 LDR X30, [X31 + 0x10]
	0x03C9A14C ADD X31, X31, 0x30
	0x03C9A150 RET
	0x03C9A154 STP X30, X21, [X31 - 0x20]!
	0x03C9A158 STP X20, X19, [X31 + 0x10]
	0x03C9A15C ADRP X21, 0x74D000
	0x03C9A160 LDR X2, [X21 + 0x1C8]
	0x03C9A164 MOV X19, X1
	0x03C9A168 MOV X20, X0
	0x03C9A16C CBNZ X2, 0x3C9A184
	0x03C9A170 ADRP X0, 0xFFFFFFFFFCE57000
	0x03C9A174 ADD X0, X0, 0x949
	0x03C9A178 BL 0x1C16CB8
	0x03C9A17C MOV X2, X0
	0x03C9A180 STR X0, [X21 + 0x1C8]
	0x03C9A184 MOV X0, X20
	0x03C9A188 MOV X1, X19
	0x03C9A18C LDP X20, X19, [X31 + 0x10]
	0x03C9A190 LDP X30, X21, [X31], #0x20
	0x03C9A194 BR X2
	0x03C9A198 STR X30, [X31 - 0x20]!
	0x03C9A19C STP X20, X19, [X31 + 0x10]
	0x03C9A1A0 ADRP X20, 0x74D000
	0x03C9A1A4 LDR X1, [X20 + 0x1B0]
	0x03C9A1A8 MOV X19, X0
	0x03C9A1AC CBNZ X1, 0x3C9A1C4
	0x03C9A1B0 ADRP X0, 0xFFFFFFFFFCE57000
	0x03C9A1B4 ADD X0, X0, 0x910
	0x03C9A1B8 BL 0x1C16CB8
	0x03C9A1BC MOV X1, X0
	0x03C9A1C0 STR X0, [X20 + 0x1B0]
	0x03C9A1C4 MOV X0, X19
	0x03C9A1C8 LDP X20, X19, [X31 + 0x10]
	0x03C9A1CC LDR X30, [X31], #0x20
	0x03C9A1D0 BR X1
	0x03C9A1D4 STR X30, [X31 - 0x20]!
	0x03C9A1D8 STP X20, X19, [X31 + 0x10]
	0x03C9A1DC ADRP X19, 0x74D000
	0x03C9A1E0 LDRB W8, [X19 + 0x1C0]
	0x03C9A1E4 TBNZ X8, 0x0, 0x3C9A1FC
	0x03C9A1E8 ADRP X0, 0x4A6000
	0x03C9A1EC LDR X0, [X0 + 0x680]
	0x03C9A1F0 BL 0x1C16CF4
	0x03C9A1F4 MOVZ W8, 0x1
	0x03C9A1F8 STRB W8, [X19 + 0x1C0]
	0x03C9A1FC ADRP X20, 0x74D000
	0x03C9A200 ADRP X19, 0x4A6000
	0x03C9A204 LDR X8, [X20 + 0x198]
	0x03C9A208 LDR X19, [X19 + 0x680]
	0x03C9A20C CBNZ X8, 0x3C9A224
	0x03C9A210 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C9A214 ADD X0, X0, 0x6CA

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X19, 0x74F000
	007 Move X21, 0x483000
	008 Move W8, [X19+325]
	009 Move X21, [X21+192]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0x4C9000
	015 Move X0, [X0+32]
	016 Call 0x1C17CF4
	017 Move X0, 0x4C9000
	018 Move X0, [X0+40]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C8000
	021 Move X0, [X0+48]
	022 Call 0x1C17CF4
	023 Move X0, 0x4C8000
	024 Move X0, [X0+56]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C8000
	027 Move X0, [X0+64]
	028 Call 0x1C17CF4
	029 Move X0, 0x4C8000
	030 Move X0, [X0+72]
	031 Call 0x1C17CF4
	032 Move X0, 0x4C8000
	033 Move X0, [X0+80]
	034 Call 0x1C17CF4
	035 Move X0, 0x482000
	036 Move X0, [X0+192]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+325], W8
	040 Move X0, [X21]
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+48], X31
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Move X8, [X0+184]
	050 Move X0, [X8+16]
	051 Compare X0, 0
	052 JumpIfEqual {137}
	053 Move X8, 0x4C8000
	054 Move X8, [X8+80]
	055 Move X20, 0x4C8000
	056 Move X19, 0x4C8000
	057 Move X1, [X8]
	058 Move X20, [X20+40]
	059 Move X19, [X19+32]
	060 Add X8, X31, 8
	061 Call List`1<Object>.GetEnumerator, X0
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 Move X8, [X31+24]
	064 Move [X31+2], V0
	065 Move [X31+48], X8
	066 Move X1, [X20]
	067 Add X0, X31, 32
	068 Call Enumerator<Object>.MoveNext, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {77}
	073 Move X8, [X31+48]
	074 Compare X8, 0
	075 JumpIfEqual {136}
	076 Move [X8+16], X31
	077 Move X1, [X19]
	078 Add X0, X31, 32
	079 Call Enumerator<Object>.Dispose, X0
	080 Move X0, [X21]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X21]
	086 Move X8, [X0+184]
	087 Move X9, [X8+16]
	088 Compare X9, 0
	089 JumpIfEqual {137}
	090 Move W2, [X9+24]
	091 Move W10, [X9+28]
	092 Add W10, W10, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X9+24], W31
	095 Move [X9+28], W10
	096 Move X0, [X9+16]
	097 Move W1, W31
	098 Move X3, X31
	099 Call Array.Clear, X0, X1, X2
	100 Move X8, [X21]
	101 Move X8, [X8+184]
	102 Move X9, [X8+24]
	103 Compare X9, 0
	104 JumpIfEqual {137}
	105 Move W2, [X9+24]
	106 Move W10, [X9+28]
	107 Add W10, W10, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X9+24], W31
	110 Move [X9+28], W10
	111 Move X0, [X9+16]
	112 Move W1, W31
	113 Move X3, X31
	114 Call Array.Clear, X0, X1, X2
	115 Move X8, [X21]
	116 Move X8, [X8+184]
	117 Move X8, [X8+32]
	118 Compare X8, 0
	119 JumpIfEqual {137}
	120 Move W2, [X8+24]
	121 Move W9, [X8+28]
	122 Add W9, W9, 1
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move [X8+24], W31
	125 Move [X8+28], W9
	126 Move X0, [X8+16]
	127 Move W1, W31
	128 Move X3, X31
	129 Call Array.Clear, X0, X1, X2
	130 Move X20, [X31+80]
	131 Move X19, [X31+88]
	132 Move X30, [X31+64]
	133 Move X21, [X31+72]
	134 Add X31, X31, 96
	135 Return 
	136 Call 0x1C17F20
	137 Call 0x1C17F20
	138 Move X20, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, X20
	141 Call 0x3EB2AD0
	142 Move X19, [X0]
	143 Call 0x3EB2AE0
	144 Move X8, 0x4C8000
	145 Move X8, [X8+32]
	146 Add X0, X31, 32
	147 Move X1, [X8]
	148 Call Enumerator<Object>.Dispose, X0
	149 Compare X19, 0
	150 JumpIfEqual {80}
	151 Move X0, X19
	152 Call 0x1C17F18
	153 Move X19, X31
	154 Move X20, X0
	155 Move X8, 0x4C8000
	156 Move X8, [X8+32]
	157 Move X1, [X8]
	158 Add X0, X31, 32
	159 Call Enumerator<Object>.Dispose, X0
	160 Compare X19, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X20
	163 Call 0x1D2D690
	164 Move X0, X19
	165 Call 0x1C17F18
	166 Call 0x1991590

Method: System.Void StaticConstructScriptingClassMap()

Disassembly:
	0x03C9A218 BL 0x1C16CB8
	0x03C9A21C MOV X8, X0
	0x03C9A220 STR X0, [X20 + 0x198]
	0x03C9A224 MOV W0, W31
	0x03C9A228 BLR X8
	0x03C9A22C LDR X8, [X19]
	0x03C9A230 LDR X8, [X8 + 0xB8]
	0x03C9A234 STR W0, [X8]
	0x03C9A238 LDR X8, [X20 + 0x198]
	0x03C9A23C CBNZ X8, 0x3C9A254

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x74E000
	004 Move X0, [X19+328]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -52060160
	008 Add X0, X0, 2913
	009 Call 0x1C17CB8
	010 Move [X19+328], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void .cctor()

Disassembly:
	0x03C9A240 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C9A244 ADD X0, X0, 0x6CA
	0x03C9A248 BL 0x1C16CB8
	0x03C9A24C MOV X8, X0
	0x03C9A250 STR X0, [X20 + 0x198]
	0x03C9A254 MOVZ W0, 0x1
	0x03C9A258 BLR X8
	0x03C9A25C LDR X8, [X19]
	0x03C9A260 LDR X8, [X8 + 0xB8]
	0x03C9A264 STR W0, [X8 + 0x4]
	0x03C9A268 LDR X8, [X20 + 0x198]
	0x03C9A26C CBNZ X8, 0x3C9A284
	0x03C9A270 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C9A274 ADD X0, X0, 0x6CA
	0x03C9A278 BL 0x1C16CB8
	0x03C9A27C MOV X8, X0
	0x03C9A280 STR X0, [X20 + 0x198]
	0x03C9A284 MOVZ W0, 0x2
	0x03C9A288 BLR X8
	0x03C9A28C LDR X8, [X19]
	0x03C9A290 LDR X8, [X8 + 0xB8]
	0x03C9A294 STR W0, [X8 + 0x8]
	0x03C9A298 LDR X8, [X20 + 0x198]
	0x03C9A29C CBNZ X8, 0x3C9A2B4
	0x03C9A2A0 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C9A2A4 ADD X0, X0, 0x6CA
	0x03C9A2A8 BL 0x1C16CB8
	0x03C9A2AC MOV X8, X0
	0x03C9A2B0 STR X0, [X20 + 0x198]
	0x03C9A2B4 MOVZ W0, 0x3
	0x03C9A2B8 BLR X8
	0x03C9A2BC LDR X8, [X19]
	0x03C9A2C0 LDR X8, [X8 + 0xB8]
	0x03C9A2C4 STR W0, [X8 + 0xC]
	0x03C9A2C8 LDR X8, [X20 + 0x198]
	0x03C9A2CC CBNZ X8, 0x3C9A2E4
	0x03C9A2D0 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C9A2D4 ADD X0, X0, 0x6CA
	0x03C9A2D8 BL 0x1C16CB8
	0x03C9A2DC MOV X8, X0
	0x03C9A2E0 STR X0, [X20 + 0x198]
	0x03C9A2E4 MOVZ W0, 0x5
	0x03C9A2E8 BLR X8
	0x03C9A2EC LDR X8, [X19]
	0x03C9A2F0 LDR X8, [X8 + 0xB8]
	0x03C9A2F4 STR W0, [X8 + 0x10]
	0x03C9A2F8 LDR X8, [X20 + 0x198]
	0x03C9A2FC CBNZ X8, 0x3C9A314
	0x03C9A300 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C9A304 ADD X0, X0, 0x6CA
	0x03C9A308 BL 0x1C16CB8
	0x03C9A30C MOV X8, X0
	0x03C9A310 STR X0, [X20 + 0x198]
	0x03C9A314 MOVZ W0, 0x6
	0x03C9A318 BLR X8
	0x03C9A31C LDR X8, [X19]
	0x03C9A320 LDR X8, [X8 + 0xB8]
	0x03C9A324 STR W0, [X8 + 0x14]
	0x03C9A328 LDR X8, [X20 + 0x198]
	0x03C9A32C CBNZ X8, 0x3C9A344
	0x03C9A330 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C9A334 ADD X0, X0, 0x6CA
	0x03C9A338 BL 0x1C16CB8
	0x03C9A33C MOV X8, X0
	0x03C9A340 STR X0, [X20 + 0x198]
	0x03C9A344 MOVZ W0, 0x7
	0x03C9A348 BLR X8
	0x03C9A34C LDR X8, [X19]
	0x03C9A350 LDR X8, [X8 + 0xB8]
	0x03C9A354 STR W0, [X8 + 0x18]
	0x03C9A358 LDR X8, [X20 + 0x198]
	0x03C9A35C CBNZ X8, 0x3C9A374
	0x03C9A360 ADRP X0, 0xFFFFFFFFFCE85000
	0x03C9A364 ADD X0, X0, 0x6CA
	0x03C9A368 BL 0x1C16CB8
	0x03C9A36C MOV X8, X0
	0x03C9A370 STR X0, [X20 + 0x198]
	0x03C9A374 MOVZ W0, 0x8
	0x03C9A378 BLR X8
	0x03C9A37C LDR X8, [X19]
	0x03C9A380 LDP X20, X19, [X31 + 0x10]
	0x03C9A384 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x74E000
	011 Move X26, 0x4C8000
	012 Move X19, 0x4C8000
	013 Move X20, 0x482000
	014 Move X24, 0x4C8000
	015 Move X23, 0x4C8000
	016 Move X22, 0x4C8000
	017 Move X21, 0x4C8000
	018 Move X26, [X26+88]
	019 Move X19, [X19+96]
	020 Move W8, [X25+336]
	021 Move X20, [X20+192]
	022 Move X24, [X24+104]
	023 Move X23, [X23+112]
	024 Move X22, [X22+120]
	025 Move X21, [X21+128]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x4C8000
	031 Move X0, [X0+96]
	032 Call 0x1C17CF4
	033 Move X0, 0x4C8000
	034 Move X0, [X0+112]
	035 Call 0x1C17CF4
	036 Move X0, 0x4C8000
	037 Move X0, [X0+128]
	038 Call 0x1C17CF4
	039 Move X0, 0x4C8000
	040 Move X0, [X0+88]
	041 Call 0x1C17CF4
	042 Move X0, 0x4C8000
	043 Move X0, [X0+120]
	044 Call 0x1C17CF4
	045 Move X0, 0x4C8000
	046 Move X0, [X0+104]
	047 Call 0x1C17CF4
	048 Move X0, 0x482000
	049 Move X0, [X0+192]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X25+336], W8
	053 Move X0, [X26]
	054 Call 0x1C17F10
	055 Move X1, [X19]
	056 Move X19, X0
	057 Call List`1<Object>..ctor, X0
	058 Move X8, [X20]
	059 Move X8, [X8+184]
	060 Move [X8+16], X19
	061 Move X0, [X24]
	062 Call 0x1C17F10
	063 Move X1, [X23]
	064 Move X19, X0
	065 Call List`1<Object>..ctor, X0
	066 Move X8, [X20]
	067 Move X8, [X8+184]
	068 Move [X8+24], X19
	069 Move X0, [X22]
	070 Call 0x1C17F10
	071 Move X1, [X21]
	072 Move X19, X0
	073 Call List`1<Object>..ctor, X0
	074 Move X8, [X20]
	075 Move X8, [X8+184]
	076 Move [X8+32], X19
	077 Move X19, 0x74E000
	078 Move X0, [X19+328]
	079 Compare X0, 0
	080 JumpIfNotEqual {85}
	081 Move X0, -52060160
	082 Add X0, X0, 2913
	083 Call 0x1C17CB8
	084 Move [X19+328], X0
	085 Move X20, [X31+64]
	086 Move X19, [X31+72]
	087 Move X22, [X31+48]
	088 Move X21, [X31+56]
	089 Move X24, [X31+32]
	090 Move X23, [X31+40]
	091 Move X26, [X31+16]
	092 Move X25, [X31+24]
	093 Move X30, [X31+80]
	094 CallNoReturn X0

Method: System.Void GetSubsystemDescriptors(System.Collections.Generic.List`1<T> descriptors)

Disassembly:
	0x02299468 MOV W20, W1
	0x0229946C MOV X21, X0
	0x02299470 CBZ X8, 0x229947C
	0x02299474 TBNZ X22, 0x0, 0x2299488
	0x02299478 B 0x22994A8
	0x0229947C MOV X0, X19
	0x02299480 BL 0x1C5C6E0
	0x02299484 TBZ X22, 0x0, 0x22994A8
	0x02299488 CMP W20, 0x400
	0x0229948C B.LE 0x2299498
	0x02299490 ADD W20, W20, 0x100
	0x02299494 B 0x22994A8
	0x02299498 MOV W0, W20
	0x0229949C MOV X1, X31
	0x022994A0 BL 0x3C2B340
	0x022994A4 MOV W20, W0
	0x022994A8 LDR X8, [X21]
	0x022994AC CBZ X8, 0x22994F0
	0x022994B0 LDR W8, [X8 + 0x18]
	0x022994B4 CMP W20, W8
	0x022994B8 B.NE 0x22994CC
	0x022994BC LDP X20, X19, [X31 + 0x20]
	0x022994C0 LDP X22, X21, [X31 + 0x10]
	0x022994C4 LDR X30, [X31], #0x30
	0x022994C8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {17}
	009 Move X0, 0x1E84000
	010 Move X0, [X0+1856]
	011 Call 0x1C17CF4
	012 Move X8, [X19+56]
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X19
	016 Call 0x1C5D6E0
	017 Move X8, 0x1E84000
	018 Move X8, [X8+1856]
	019 Move X0, [X8]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19+56]
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, [X8+8]
	029 Move X30, [X31+32]
	030 Call 0x22982B8, X0
	031 Return 

Method: System.Void GetSubsystems(System.Collections.Generic.List`1<T> subsystems)

Disassembly:
	0x02299534 CMP W8, 0x1
	0x02299538 B.LT 0x229957C
	0x0229953C MOV W22, W0
	0x02299540 MOV W21, W31
	0x02299544 LDR X8, [X19 + 0x38]
	0x02299548 MOV X0, X20
	0x0229954C MOV W1, W21
	0x02299550 LDR X2, [X8 + 0x10]
	0x02299554 BL 0x301BCCC
	0x02299558 CBZ X0, 0x2299594
	0x0229955C MOV X1, X31
	0x02299560 BL 0x3C385F8
	0x02299564 CMP W0, W22
	0x02299568 B.EQ 0x2299580
	0x0229956C LDR W8, [X20 + 0x18]
	0x02299570 ADD W21, W21, 0x1
	0x02299574 CMP W21, W8
	0x02299578 B.LT 0x2299544
	0x0229957C MOVN W21, 0x0
	0x02299580 MOV W0, W21
	0x02299584 LDP X20, X19, [X31 + 0x20]
	0x02299588 LDP X22, X21, [X31 + 0x10]
	0x0229958C LDR X30, [X31], #0x30
	0x02299590 RET
	0x02299594 BL 0x1C16F20
	0x02299598 STR X30, [X31 - 0x20]!
	0x0229959C STP X20, X19, [X31 + 0x10]
	0x022995A0 LDR X8, [X1 + 0x38]
	0x022995A4 MOV X19, X1
	0x022995A8 MOV X20, X0
	0x022995AC CBNZ X8, 0x22995CC
	0x022995B0 ADRP X0, 0x1E5B000
	0x022995B4 LDR X0, [X0 + 0x7B8]
	0x022995B8 BL 0x1C16CF4
	0x022995BC LDR X8, [X19 + 0x38]
	0x022995C0 CBNZ X8, 0x22995CC
	0x022995C4 MOV X0, X19
	0x022995C8 BL 0x1C5C6E0
	0x022995CC ADRP X8, 0x1E5B000
	0x022995D0 LDR X8, [X8 + 0x7B8]
	0x022995D4 LDR X0, [X8]
	0x022995D8 LDR W8, [X0 + 0xE0]
	0x022995DC CBNZ W8, 0x22995E4
	0x022995E0 BL 0x1C16DFC
	0x022995E4 LDR X8, [X19 + 0x38]
	0x022995E8 MOV X0, X20
	0x022995EC LDP X20, X19, [X31 + 0x10]
	0x022995F0 LDR X1, [X8]
	0x022995F4 LDR X30, [X31], #0x20
	0x022995F8 B 0x22997AC
	0x022995FC STR X30, [X31 - 0x20]!
	0x02299600 STP X20, X19, [X31 + 0x10]
	0x02299604 LDR X8, [X1 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X20, X1
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {18}
	010 Move X0, 0x1E83000
	011 Move X0, [X0+192]
	012 Call 0x1C17CF4
	013 Move X8, [X20+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X20
	017 Call 0x1C5D6E0
	018 Compare X19, 0
	019 JumpIfEqual {63}
	020 Move W2, [X19+24]
	021 Move W8, [X19+28]
	022 Add W8, W8, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move [X19+24], W31
	025 Move [X19+28], W8
	026 Move X0, [X19+16]
	027 Move W1, W31
	028 Move X3, X31
	029 Call Array.Clear, X0, X1, X2
	030 Move X21, 0x1E83000
	031 Move X21, [X21+192]
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X0+184]
	039 Move X9, [X20+56]
	040 Move X1, X19
	041 Move X0, [X8+16]
	042 Move X2, [X9+16]
	043 Call 0x2298D9C, X0, X1
	044 Move X8, [X21]
	045 Move X9, [X20+56]
	046 Move X1, X19
	047 Move X8, [X8+184]
	048 Move X2, [X9+24]
	049 Move X0, [X8+24]
	050 Call 0x2298D9C, X0, X1
	051 Move X8, [X21]
	052 Move X9, [X20+56]
	053 Move X1, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X8, [X8+184]
	057 Move X2, [X9+32]
	058 Move X0, [X8+32]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call 0x2298D9C, X0, X1
	062 Return 
	063 Call 0x1C17F20

Method: System.Void AddSubsystemSubset(System.Collections.Generic.List`1<TBaseTypeInList> copyFrom, System.Collections.Generic.List`1<TQueryType> copyTo)

Disassembly:
	0x02298D9C MOV X21, X1
	0x02298DA0 STUR X8, [X29 - 0x8]
	0x02298DA4 LDR X8, [X3 + 0x38]
	0x02298DA8 CBNZ X8, 0x2298DB8
	0x02298DAC MOV X0, X19
	0x02298DB0 BL 0x1C5C6E0
	0x02298DB4 LDR X8, [X19 + 0x38]
	0x02298DB8 LDR X9, [X8 + 0x30]
	0x02298DBC LDR W22, [X9 + 0xFC]
	0x02298DC0 ADD X9, X31, 0x0
	0x02298DC4 ADD X10, X22, 0xF
	0x02298DC8 AND X10, X10, 0x1FFFFFFFF
	0x02298DCC SUB X23, X9, X10
	0x02298DD0 ADD X31, X23, 0x0
	0x02298DD4 CBZ X21, 0x2298F04
	0x02298DD8 LDR X1, [X8 + 0x8]
	0x02298DDC MOV X0, X21
	0x02298DE0 LDR X8, [X1]
	0x02298DE4 BLR X8
	0x02298DE8 LDR X9, [X20]
	0x02298DEC LDR X8, [X19 + 0x38]
	0x02298DF0 MOV W24, W0
	0x02298DF4 STUR X25, [X29 - 0x28]
	0x02298DF8 CBZ X9, 0x2298E14
	0x02298DFC LDR X2, [X8 + 0x20]
	0x02298E00 MOV X0, X20
	0x02298E04 MOV W1, W24
	0x02298E08 LDR X8, [X2]
	0x02298E0C BLR X8
	0x02298E10 B 0x2298E30
	0x02298E14 LDR X0, [X8 + 0x18]
	0x02298E18 LDRB W8, [X0 + 0x135]
	0x02298E1C TBNZ X8, 0x0, 0x2298E24
	0x02298E20 BL 0x1C5C684
	0x02298E24 MOV W1, W24
	0x02298E28 BL 0x1C16D6C
	0x02298E2C STR X0, [X20]
	0x02298E30 CMP W24, 0x1
	0x02298E34 B.LT 0x2298ECC
	0x02298E38 MOV X26, X31
	0x02298E3C MOV W24, W24
	0x02298E40 SUB X27, X29, 0xC
	0x02298E44 LDR X8, [X19 + 0x38]
	0x02298E48 LDR X28, [X20]
	0x02298E4C SUB X3, X29, 0x20
	0x02298E50 MOV X2, X21
	0x02298E54 LDR X1, [X8 + 0x28]
	0x02298E58 MOV X4, X23
	0x02298E5C LDR X0, [X1]
	0x02298E60 STUR W26, [X29 - 0xC]
	0x02298E64 STP X27, X23, [X29 - 0x20]
	0x02298E68 LDR X8, [X1 + 0x10]
	0x02298E6C BLR X8
	0x02298E70 CBZ X28, 0x2298F04
	0x02298E74 LDR W25, [X28 + 0x18]
	0x02298E78 CMP X26, X25
	0x02298E7C B.CS 0x2298F00
	0x02298E80 LDR X8, [X28]
	0x02298E84 MOV X1, X23
	0x02298E88 MOV X2, X22
	0x02298E8C LDR W8, [X8 + 0x104]
	0x02298E90 NOP
	0x02298E94 MADD X8, X26, X8, X28
	0x02298E98 ADD X0, X8, 0x20
	0x02298E9C BL 0x3EB1AC0
	0x02298EA0 LDR X8, [X19 + 0x38]
	0x02298EA4 LDR X0, [X8 + 0x30]
	0x02298EA8 LDRB W8, [X0 + 0x135]
	0x02298EAC TBNZ X8, 0x0, 0x2298EB8
	0x02298EB0 BL 0x1C5C684
	0x02298EB4 LDR W25, [X28 + 0x18]
	0x02298EB8 CMP X26, X25
	0x02298EBC B.CS 0x2298F00
	0x02298EC0 ADD X26, X26, 0x1
	0x02298EC4 CMP X24, X26
	0x02298EC8 B.NE 0x2298E44
	0x02298ECC LDUR X8, [X29 - 0x28]
	0x02298ED0 LDR X8, [X8 + 0x28]
	0x02298ED4 LDUR X9, [X29 - 0x8]
	0x02298ED8 CMP X8, X9
	0x02298EDC B.NE 0x2298F08
	0x02298EE0 ADD X31, X29, 0x0
	0x02298EE4 LDP X20, X19, [X31 + 0x50]
	0x02298EE8 LDP X22, X21, [X31 + 0x40]
	0x02298EEC LDP X24, X23, [X31 + 0x30]
	0x02298EF0 LDP X26, X25, [X31 + 0x20]
	0x02298EF4 LDP X28, X27, [X31 + 0x10]
	0x02298EF8 LDP X29, X30, [X31], #0x60
	0x02298EFC RET
	0x02298F00 BL 0x1C16F28
	0x02298F04 BL 0x1C16F20
	0x02298F08 BL 0x3EB1B20
	0x02298F0C STR X30, [X31 - 0x20]!
	0x02298F10 STP X20, X19, [X31 + 0x10]
	0x02298F14 LDR X8, [X2 + 0x38]
	0x02298F18 MOV X20, X2
	0x02298F1C MOV X19, X1
	0x02298F20 CBNZ X8, 0x2298F2C
	0x02298F24 MOV X0, X20
	0x02298F28 BL 0x1C5C6E0
	0x02298F2C LDR X8, [X19]
	0x02298F30 CBZ X8, 0x2298F64
	0x02298F34 LDR W8, [X8 + 0x18]
	0x02298F38 MOV X1, X31
	0x02298F3C ADD W0, W8, 0x1
	0x02298F40 BL 0x3C2B340
	0x02298F44 LDR X8, [X20 + 0x38]
	0x02298F48 MOV W1, W0
	0x02298F4C MOV X0, X19
	0x02298F50 LDP X20, X19, [X31 + 0x10]
	0x02298F54 LDR X2, [X8 + 0x8]
	0x02298F58 LDR X3, [X2]
	0x02298F5C LDR X30, [X31], #0x20
	0x02298F60 BR X3
	0x02298F64 BL 0x1C16F20
	0x02298F68 STR X30, [X31 - 0x20]!
	0x02298F6C STP X20, X19, [X31 + 0x10]
	0x02298F70 LDR X8, [X2 + 0x38]
	0x02298F74 MOV X19, X2
	0x02298F78 MOV X20, X1
	0x02298F7C CBNZ X8, 0x2298F88
	0x02298F80 MOV X0, X19
	0x02298F84 BL 0x1C5C6E0
	0x02298F88 LDR X8, [X20]
	0x02298F8C CBZ X8, 0x2298FBC
	0x02298F90 LDR W8, [X8 + 0x18]
	0x02298F94 MOV X1, X31
	0x02298F98 ADD W0, W8, 0x1
	0x02298F9C BL 0x3C2B340
	0x02298FA0 LDR X8, [X19 + 0x38]
	0x02298FA4 MOV W1, W0
	0x02298FA8 MOV X0, X20
	0x02298FAC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Move [X31+48], X31
	018 Compare X21, 0
	019 JumpIfEqual {127}
	020 Move X8, [X19+56]
	021 Move X0, X21
	022 Move X1, [X8+8]
	023 Add X8, X31, 8
	024 Call List`1<Object>.GetEnumerator, X0
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move X8, [X31+24]
	027 Move [X31+2], V0
	028 Move [X31+48], X8
	029 Move X8, [X19+56]
	030 Move X1, [X8+72]
	031 Add X0, X31, 32
	032 Call Enumerator<Object>.MoveNext, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {108}
	037 Move X8, [X19+56]
	038 Move X21, [X31+48]
	039 Move X1, [X8+48]
	040 Move W8, [X1+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X0, X21
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfEqual {29}
	052 Move X8, [X19+56]
	053 Move X1, [X8+48]
	054 Move W8, [X1+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X1
	060 Call 0x1C5D684
	061 Move X1, X0
	062 Move X0, X21
	063 Call 0x1C17E00
	064 Move X8, [X19+56]
	065 Move X21, X0
	066 Move X22, [X8+48]
	067 Move W8, [X22+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X22
	073 Call 0x1C5D684
	074 Move X22, X0
	075 Compare X21, 0
	076 JumpIfEqual {85}
	077 Move X0, X21
	078 Move X1, X22
	079 Call 0x1C17E00
	080 Move X1, X0
	081 Compare X1, 0
	082 JumpIfEqual {124}
	083 Compare X20, 0
	084 JumpIfNotEqual {88}
	085 Move X1, X31
	086 Compare X20, 0
	087 JumpIfEqual {122}
	088 Move X9, [X19+56]
	089 Move W10, [X20+28]
	090 Move X8, [X20+16]
	091 Move X9, [X9+64]
	092 Add W10, W10, 1
	093 Move [X20+28], W10
	094 Compare X8, 0
	095 JumpIfEqual {123}
	096 NotImplemented "Instruction LDRSW not yet implemented."
	097 Move W11, [X8+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add W9, W10, 1
	100 Add X8, X8, X10
	101 Move [X20+24], W9
	102 Move [X8+32], X1
	103 Move X8, [X9+32]
	104 Move X8, [X8+192]
	105 Move X2, [X8+112]
	106 Move X0, X20
	107 Call List`1<Object>.AddWithResize, X0, X1
	108 Move X21, X31
	109 Move X8, [X19+56]
	110 Add X0, X31, 32
	111 Move X1, [X8+80]
	112 Call Enumerator<Object>.Dispose, X0
	113 Compare X21, 0
	114 JumpIfNotEqual {128}
	115 Move X20, [X31+96]
	116 Move X19, [X31+104]
	117 Move X22, [X31+80]
	118 Move X21, [X31+88]
	119 Move X30, [X31+64]
	120 Add X31, X31, 112
	121 Return 
	122 Call 0x1C17F20
	123 Call 0x1C17F20
	124 Move X0, X21
	125 Move X1, X22
	126 Call 0x1C181E0
	127 Call 0x1C17F20
	128 Move X0, X21
	129 Call 0x1C17F18
	130 Move X20, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X20
	133 Call 0x3EB2AD0
	134 Move X21, [X0]
	135 Call 0x3EB2AE0
	136 Move X21, X31
	137 Move X20, X0
	138 Move X8, [X19+56]
	139 Move X1, [X8+80]
	140 Add X0, X31, 32
	141 Call Enumerator<Object>.Dispose, X0
	142 Compare X21, 0
	143 JumpIfNotEqual {146}
	144 Move X0, X20
	145 Call 0x1D2D690
	146 Move X0, X21
	147 Call 0x1C17F18
	148 Call 0x1991590

Method: UnityEngine.IntegratedSubsystem GetIntegratedSubsystemByPtr(System.IntPtr ptr)

Disassembly:
	0x03C9A388 STR W0, [X8 + 0x1C]
	0x03C9A38C LDR X30, [X31], #0x20
	0x03C9A390 RET
	0x03C9A394 STP W1, W2, [X0]
	0x03C9A398 RET
	0x03C9A39C STR X30, [X31 - 0x30]!
	0x03C9A3A0 STP X22, X21, [X31 + 0x10]
	0x03C9A3A4 STP X20, X19, [X31 + 0x20]
	0x03C9A3A8 ADRP X22, 0x74D000
	0x03C9A3AC LDRB W8, [X22 + 0x1D0]
	0x03C9A3B0 MOV W19, W2
	0x03C9A3B4 MOV W20, W1
	0x03C9A3B8 MOV X21, X0
	0x03C9A3BC TBNZ X8, 0x0, 0x3C9A3D4
	0x03C9A3C0 ADRP X0, 0x4C7000
	0x03C9A3C4 LDR X0, [X0 + 0xF8]
	0x03C9A3C8 BL 0x1C16CF4
	0x03C9A3CC MOVZ W8, 0x1
	0x03C9A3D0 STRB W8, [X22 + 0x1D0]
	0x03C9A3D4 STR X31, [X31 + 0x8]
	0x03C9A3D8 LDR X0, [X21 + 0x20]
	0x03C9A3DC CBZ X0, 0x3C9A410
	0x03C9A3E0 ADRP X8, 0x4C7000
	0x03C9A3E4 LDR X8, [X8 + 0xF8]
	0x03C9A3E8 MOV W1, W20
	0x03C9A3EC BFM X1, X19, 0x20, 0x1F
	0x03C9A3F0 ADD X2, X31, 0x8
	0x03C9A3F4 LDR X3, [X8]
	0x03C9A3F8 BL 0x2AEED24
	0x03C9A3FC LDR X0, [X31 + 0x8]
	0x03C9A400 LDP X20, X19, [X31 + 0x20]
	0x03C9A404 LDP X22, X21, [X31 + 0x10]
	0x03C9A408 LDR X30, [X31], #0x30
	0x03C9A40C RET
	0x03C9A410 BL 0x1C16F20
	0x03C9A414 STP D11, D10, [X31 - 0x60]!
	0x03C9A418 STP D9, D8, [X31 + 0x10]
	0x03C9A41C STR X30, [X31 + 0x20]
	0x03C9A420 STP X24, X23, [X31 + 0x30]
	0x03C9A424 STP X22, X21, [X31 + 0x40]
	0x03C9A428 STP X20, X19, [X31 + 0x50]
	0x03C9A42C ADRP X22, 0x74D000
	0x03C9A430 ADRP X23, 0x4C7000
	0x03C9A434 LDRB W8, [X22 + 0x1D1]
	0x03C9A438 LDR X23, [X23 + 0x100]
	0x03C9A43C MOV W19, W2
	0x03C9A440 MOV X20, X1
	0x03C9A444 MOV X21, X0
	0x03C9A448 TBNZ X8, 0x0, 0x3C9A484
	0x03C9A44C ADRP X0, 0x459000
	0x03C9A450 LDR X0, [X0 + 0x598]
	0x03C9A454 BL 0x1C16CF4
	0x03C9A458 ADRP X0, 0x4C7000
	0x03C9A45C LDR X0, [X0 + 0x108]
	0x03C9A460 BL 0x1C16CF4
	0x03C9A464 ADRP X0, 0x4C7000
	0x03C9A468 LDR X0, [X0 + 0x110]
	0x03C9A46C BL 0x1C16CF4
	0x03C9A470 ADRP X0, 0x4C7000
	0x03C9A474 LDR X0, [X0 + 0x100]
	0x03C9A478 BL 0x1C16CF4
	0x03C9A47C MOVZ W8, 0x1
	0x03C9A480 STRB W8, [X22 + 0x1D1]
	0x03C9A484 LDR X0, [X23]
	0x03C9A488 BL 0x1C16F10
	0x03C9A48C MOV X1, X31
	0x03C9A490 MOV X22, X0
	0x03C9A494 BL 0x33BDD8C
	0x03C9A498 ADRP X23, 0x74D000
	0x03C9A49C LDR X8, [X23 + 0x188]
	0x03C9A4A0 CBNZ X8, 0x3C9A4B8
	0x03C9A4A4 ADRP X0, 0xFFFFFFFFFCE75000
	0x03C9A4A8 ADD X0, X0, 0xC59
	0x03C9A4AC BL 0x1C16CB8
	0x03C9A4B0 MOV X8, X0
	0x03C9A4B4 STR X0, [X23 + 0x188]
	0x03C9A4B8 BLR X8
	0x03C9A4BC CBZ X0, 0x3C9A570
	0x03C9A4C0 LDR X8, [X23 + 0x188]
	0x03C9A4C4 CBNZ X8, 0x3C9A4DC
	0x03C9A4C8 ADRP X0, 0xFFFFFFFFFCE75000
	0x03C9A4CC ADD X0, X0, 0xC59
	0x03C9A4D0 BL 0x1C16CB8
	0x03C9A4D4 MOV X8, X0
	0x03C9A4D8 STR X0, [X23 + 0x188]
	0x03C9A4DC BLR X8
	0x03C9A4E0 CBZ X0, 0x3C9A6BC
	0x03C9A4E4 LDR X8, [X0 + 0x18]
	0x03C9A4E8 CBZ X8, 0x3C9A570
	0x03C9A4EC ADRP X23, 0x459000
	0x03C9A4F0 LDR X23, [X23 + 0x598]
	0x03C9A4F4 LDR X0, [X23]
	0x03C9A4F8 LDR W8, [X0 + 0xE0]
	0x03C9A4FC CBNZ W8, 0x3C9A504
	0x03C9A500 BL 0x1C16DFC
	0x03C9A504 MOV X0, X21
	0x03C9A508 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X21, 0x74E000
	008 Move X20, 0x482000
	009 Move W8, [X21+337]
	010 Move X20, [X20+192]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x4C8000
	017 Move X0, [X0+32]
	018 Call 0x1C17CF4
	019 Move X0, 0x4C8000
	020 Move X0, [X0+40]
	021 Call 0x1C17CF4
	022 Move X0, 0x4C8000
	023 Move X0, [X0+48]
	024 Call 0x1C17CF4
	025 Move X0, 0x4C8000
	026 Move X0, [X0+80]
	027 Call 0x1C17CF4
	028 Move X0, 0x482000
	029 Move X0, [X0+192]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+337], W8
	033 Move X0, [X20]
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X0, [X8+16]
	044 Compare X0, 0
	045 JumpIfEqual {86}
	046 Move X8, 0x4C8000
	047 Move X8, [X8+80]
	048 Move X22, 0x4C8000
	049 Move X21, 0x4C8000
	050 Move X1, [X8]
	051 Move X22, [X22+40]
	052 Move X21, [X21+32]
	053 Add X8, X31, 8
	054 Call List`1<Object>.GetEnumerator, X0
	055 Move X1, [X22]
	056 Add X0, X31, 8
	057 Call Enumerator<Object>.MoveNext, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {73}
	062 Move X20, [X31+24]
	063 Compare X20, 0
	064 JumpIfEqual {85}
	065 Move X0, [X20+16]
	066 Move X1, X19
	067 Move X2, X31
	068 Call IntPtr.op_Equality, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {55}
	073 Move X20, X31
	074 Move X1, [X21]
	075 Add X0, X31, 8
	076 Call Enumerator<Object>.Dispose, X0
	077 Move X0, X20
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X30, [X31+32]
	083 Add X31, X31, 80
	084 Return X0
	085 Call 0x1C17F20
	086 Call 0x1C17F20
	087 Move X19, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X19
	090 Call 0x3EB2AD0
	091 Move X20, [X0]
	092 Call 0x3EB2AE0
	093 Move X1, [X21]
	094 Add X0, X31, 8
	095 Call Enumerator<Object>.Dispose, X0
	096 Compare X20, 0
	097 JumpIfEqual {77}
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Move X20, X31
	101 Move X19, X0
	102 Move X1, [X21]
	103 Add X0, X31, 8
	104 Call Enumerator<Object>.Dispose, X0
	105 Compare X20, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X19
	108 Call 0x1D2D690
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: System.Void RemoveIntegratedSubsystemByPtr(System.IntPtr ptr)

Disassembly:
	0x03C99814 MOV X0, X19
	0x03C99818 BL 0x1C16F18
	0x03C9981C BL 0x1990590
	0x03C99820 STR X30, [X31 - 0x20]!
	0x03C99824 STP X20, X19, [X31 + 0x10]
	0x03C99828 ADRP X20, 0x74E000
	0x03C9982C LDR X1, [X20 + 0x158]
	0x03C99830 MOV X19, X0
	0x03C99834 CBNZ X1, 0x3C9984C
	0x03C99838 ADRP X0, 0xFFFFFFFFFCE8E000
	0x03C9983C ADD X0, X0, 0x38C
	0x03C99840 BL 0x1C16CB8
	0x03C99844 MOV X1, X0
	0x03C99848 STR X0, [X20 + 0x158]
	0x03C9984C MOV X0, X19
	0x03C99850 LDP X20, X19, [X31 + 0x10]
	0x03C99854 LDR X30, [X31], #0x20
	0x03C99858 BR X1
	0x03C9985C STR X30, [X31 - 0x50]!
	0x03C99860 STP X26, X25, [X31 + 0x10]
	0x03C99864 STP X24, X23, [X31 + 0x20]
	0x03C99868 STP X22, X21, [X31 + 0x30]
	0x03C9986C STP X20, X19, [X31 + 0x40]
	0x03C99870 ADRP X25, 0x74E000
	0x03C99874 ADRP X26, 0x4C8000
	0x03C99878 ADRP X19, 0x4C8000
	0x03C9987C ADRP X20, 0x483000
	0x03C99880 ADRP X24, 0x4C8000
	0x03C99884 ADRP X23, 0x4C8000
	0x03C99888 ADRP X22, 0x4C8000
	0x03C9988C ADRP X21, 0x4C8000
	0x03C99890 LDR X26, [X26 + 0xC0]
	0x03C99894 LDR X19, [X19 + 0xC8]
	0x03C99898 LDRB W8, [X25 + 0x161]
	0x03C9989C LDR X20, [X20 + 0x740]
	0x03C998A0 LDR X24, [X24 + 0xD0]
	0x03C998A4 LDR X23, [X23 + 0xD8]
	0x03C998A8 LDR X22, [X22 + 0xE0]
	0x03C998AC LDR X21, [X21 + 0xE8]
	0x03C998B0 TBNZ X8, 0x0, 0x3C99910
	0x03C998B4 ADRP X0, 0x4C8000
	0x03C998B8 LDR X0, [X0 + 0xC8]
	0x03C998BC BL 0x1C16CF4
	0x03C998C0 ADRP X0, 0x4C8000
	0x03C998C4 LDR X0, [X0 + 0xD8]
	0x03C998C8 BL 0x1C16CF4
	0x03C998CC ADRP X0, 0x4C8000
	0x03C998D0 LDR X0, [X0 + 0xE8]
	0x03C998D4 BL 0x1C16CF4
	0x03C998D8 ADRP X0, 0x4C8000
	0x03C998DC LDR X0, [X0 + 0xE0]
	0x03C998E0 BL 0x1C16CF4
	0x03C998E4 ADRP X0, 0x4C8000
	0x03C998E8 LDR X0, [X0 + 0xD0]
	0x03C998EC BL 0x1C16CF4
	0x03C998F0 ADRP X0, 0x4C8000
	0x03C998F4 LDR X0, [X0 + 0xC0]
	0x03C998F8 BL 0x1C16CF4
	0x03C998FC ADRP X0, 0x483000
	0x03C99900 LDR X0, [X0 + 0x740]
	0x03C99904 BL 0x1C16CF4
	0x03C99908 MOVZ W8, 0x1
	0x03C9990C STRB W8, [X25 + 0x161]
	0x03C99910 LDR X0, [X26]
	0x03C99914 BL 0x1C16F10
	0x03C99918 LDR X1, [X19]
	0x03C9991C MOV X19, X0
	0x03C99920 BL 0x301B7C4
	0x03C99924 LDR X8, [X20]
	0x03C99928 LDR X8, [X8 + 0xB8]
	0x03C9992C STR X19, [X8]
	0x03C99930 LDR X0, [X24]
	0x03C99934 BL 0x1C16F10
	0x03C99938 LDR X1, [X23]
	0x03C9993C MOV X19, X0
	0x03C99940 BL 0x301B7C4
	0x03C99944 LDR X8, [X20]
	0x03C99948 LDR X8, [X8 + 0xB8]
	0x03C9994C STR X19, [X8 + 0x8]
	0x03C99950 LDR X0, [X22]
	0x03C99954 BL 0x1C16F10
	0x03C99958 LDR X1, [X21]
	0x03C9995C MOV X19, X0
	0x03C99960 BL 0x301B7C4
	0x03C99964 LDR X8, [X20]
	0x03C99968 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x74F000
	007 Move W8, [X19+338]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x4C8000
	014 Move X0, [X0+4080]
	015 Call 0x1C17CF4
	016 Move X0, 0x4C8000
	017 Move X0, [X0+4088]
	018 Call 0x1C17CF4
	019 Move X0, 0x4C9000
	020 Move X0, [X0]
	021 Call 0x1C17CF4
	022 Move X0, 0x483000
	023 Move X0, [X0+192]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+338], W8
	027 Move X21, 0x483000
	028 Move X22, 0x4C9000
	029 Move X21, [X21+192]
	030 Move X22, [X22]
	031 Move W19, W31
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X0+184]
	039 Move X8, [X8+16]
	040 Compare X8, 0
	041 JumpIfEqual {106}
	042 Move W9, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W9, [X0+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {53}
	047 Call 0x1C17DFC
	048 Move X8, [X21]
	049 Move X8, [X8+184]
	050 Move X8, [X8+16]
	051 Compare X8, 0
	052 JumpIfEqual {106}
	053 Move X2, [X22]
	054 Move X0, X8
	055 Move W1, W19
	056 Call List`1<Object>.get_Item, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {106}
	059 Move X0, [X0+16]
	060 Move X1, X20
	061 Move X2, X31
	062 Call IntPtr.op_Inequality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {74}
	067 Add W19, W19, 1
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return 
	074 Move X0, [X21]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X21]
	080 Move X8, [X0+184]
	081 Move X0, [X8+16]
	082 Compare X0, 0
	083 JumpIfEqual {106}
	084 Move X2, [X22]
	085 Move W1, W19
	086 Call List`1<Object>.get_Item, X0, X1
	087 Compare X0, 0
	088 JumpIfEqual {106}
	089 Move [X0+16], X31
	090 Move X8, [X21]
	091 Move X8, [X8+184]
	092 Move X0, [X8+16]
	093 Compare X0, 0
	094 JumpIfEqual {106}
	095 Move X8, 0x4C8000
	096 Move X8, [X8+4080]
	097 Move W1, W19
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X2, [X8]
	103 Move X30, [X31+48]
	104 Call List`1<Object>.RemoveAt, X0, X1
	105 Return 
	106 Call 0x1C17F20

Method: System.Boolean RemoveStandaloneSubsystem(UnityEngine.SubsystemsImplementation.SubsystemWithProvider subsystem)

Disassembly:
	0x03C9A50C MOV X2, X31
	0x03C9A510 BL 0x3C3883C
	0x03C9A514 TBNZ X0, 0x0, 0x3C9A570
	0x03C9A518 CBZ X21, 0x3C9A6BC
	0x03C9A51C ADRP X24, 0x74D000
	0x03C9A520 LDR X8, [X24 + 0x168]
	0x03C9A524 CBNZ X8, 0x3C9A53C
	0x03C9A528 ADRP X0, 0xFFFFFFFFFCE61000
	0x03C9A52C ADD X0, X0, 0xA9D
	0x03C9A530 BL 0x1C16CB8
	0x03C9A534 MOV X8, X0
	0x03C9A538 STR X0, [X24 + 0x168]
	0x03C9A53C MOV X0, X21
	0x03C9A540 BLR X8
	0x03C9A544 LDR X8, [X23]
	0x03C9A548 MOV X23, X0
	0x03C9A54C LDR W9, [X8 + 0xE0]
	0x03C9A550 CBNZ W9, 0x3C9A55C
	0x03C9A554 MOV X0, X8
	0x03C9A558 BL 0x1C16DFC
	0x03C9A55C MOV X0, X23
	0x03C9A560 MOV X1, X31
	0x03C9A564 MOV X2, X31
	0x03C9A568 BL 0x3C3883C
	0x03C9A56C TBZ X0, 0x0, 0x3C9A590
	0x03C9A570 LDP X20, X19, [X31 + 0x50]
	0x03C9A574 LDP X22, X21, [X31 + 0x40]
	0x03C9A578 LDP X24, X23, [X31 + 0x30]
	0x03C9A57C LDR X30, [X31 + 0x20]
	0x03C9A580 LDP D9, D8, [X31 + 0x10]
	0x03C9A584 MOV X0, X31
	0x03C9A588 LDP D11, D10, [X31], #0x60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74E000
	006 Move X20, 0x482000
	007 Move W8, [X21+339]
	008 Move X20, [X20+192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4C8000
	015 Move X0, [X0+136]
	016 Call 0x1C17CF4
	017 Move X0, 0x482000
	018 Move X0, [X0+192]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+339], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8+24]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x4C8000
	033 Move X8, [X8+136]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call List`1<Object>.Remove, X0, X1
	041 Return X0
	042 Call 0x1C17F20

Method: System.Void GetInstances(System.Collections.Generic.List`1<T> subsystems)

Disassembly:
	0x0229939C LDR X2, [X8 + 0x8]
	0x022993A0 LDP X22, X21, [X31 + 0x10]
	0x022993A4 LDR X30, [X31], #0x30
	0x022993A8 B 0x2143AFC
	0x022993AC BL 0x1C16F20
	0x022993B0 STR X30, [X31 - 0x30]!
	0x022993B4 STP X22, X21, [X31 + 0x10]
	0x022993B8 STP X20, X19, [X31 + 0x20]
	0x022993BC LDR X8, [X3 + 0x38]
	0x022993C0 MOV X19, X3
	0x022993C4 MOV W22, W2
	0x022993C8 MOV W20, W1
	0x022993CC MOV X21, X0
	0x022993D0 CBZ X8, 0x22993DC
	0x022993D4 TBNZ X22, 0x0, 0x22993E8
	0x022993D8 B 0x2299408
	0x022993DC MOV X0, X19
	0x022993E0 BL 0x1C5C6E0
	0x022993E4 TBZ X22, 0x0, 0x2299408
	0x022993E8 CMP W20, 0x400
	0x022993EC B.LE 0x22993F8
	0x022993F0 ADD W20, W20, 0x100
	0x022993F4 B 0x2299408
	0x022993F8 MOV W0, W20
	0x022993FC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {17}
	009 Move X0, 0x1E83000
	010 Move X0, [X0+192]
	011 Call 0x1C17CF4
	012 Move X8, [X19+56]
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X19
	016 Call 0x1C5D6E0
	017 Move X8, 0x1E83000
	018 Move X8, [X8+192]
	019 Move X0, [X8]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X19+56]
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, [X8+8]
	029 Move X30, [X31+32]
	030 Call 0x2299534, X0
	031 Return 

Method: System.Boolean RemoveDeprecatedSubsystem(UnityEngine.Subsystem subsystem)

Disassembly:
	0x03C99B98 CBNZ X5, 0x3C99BB0
	0x03C99B9C ADRP X0, 0xFFFFFFFFFCE7E000
	0x03C99BA0 ADD X0, X0, 0x2C7
	0x03C99BA4 BL 0x1C16CB8
	0x03C99BA8 MOV X5, X0
	0x03C99BAC STR X0, [X24 + 0x180]
	0x03C99BB0 MOV X0, X23
	0x03C99BB4 MOV X1, X22
	0x03C99BB8 MOV X2, X21
	0x03C99BBC MOV X3, X20
	0x03C99BC0 MOV X4, X19
	0x03C99BC4 LDP X20, X19, [X31 + 0x30]
	0x03C99BC8 LDP X22, X21, [X31 + 0x20]
	0x03C99BCC LDP X24, X23, [X31 + 0x10]
	0x03C99BD0 LDR X30, [X31], #0x40
	0x03C99BD4 BR X5
	0x03C99BD8 STP X30, X19, [X31 - 0x10]!
	0x03C99BDC ADRP X19, 0x74E000
	0x03C99BE0 LDR X0, [X19 + 0x188]
	0x03C99BE4 CBNZ X0, 0x3C99BF8
	0x03C99BE8 ADRP X0, 0xFFFFFFFFFCE76000
	0x03C99BEC ADD X0, X0, 0xC59
	0x03C99BF0 BL 0x1C16CB8
	0x03C99BF4 STR X0, [X19 + 0x188]
	0x03C99BF8 LDP X30, X19, [X31], #0x10
	0x03C99BFC BR X0
	0x03C99C00 MOV X1, X31
	0x03C99C04 B 0x3C32490
	0x03C99C08 STP X30, X25, [X31 - 0x40]!
	0x03C99C0C STP X24, X23, [X31 + 0x10]
	0x03C99C10 STP X22, X21, [X31 + 0x20]
	0x03C99C14 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74F000
	006 Move X20, 0x483000
	007 Move W8, [X21+340]
	008 Move X20, [X20+192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4C9000
	015 Move X0, [X0+8]
	016 Call 0x1C17CF4
	017 Move X0, 0x483000
	018 Move X0, [X0+192]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+340], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8+32]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x4C9000
	033 Move X8, [X8+8]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call List`1<Object>.Remove, X0, X1
	041 Return X0
	042 Call 0x1C17F20

