Type: UnityEngine.IntegratedSubsystem`1

Method: TSubsystemDescriptor get_subsystemDescriptor()

Disassembly:
	0x02E140A0 MOV X1, X31
	0x02E140A4 BL 0x3395B7C
	0x02E140A8 LDR X8, [X19 + 0x20]
	0x02E140AC LDR W21, [X21 + 0x8]
	0x02E140B0 MOV W19, W0
	0x02E140B4 LDRB W9, [X8 + 0x135]
	0x02E140B8 TBNZ X9, 0x0, 0x2E140C8
	0x02E140BC MOV X0, X8
	0x02E140C0 BL 0x1C5C684
	0x02E140C4 MOV X8, X0
	0x02E140C8 LDR X8, [X8 + 0xC0]
	0x02E140CC MOV X0, X20
	0x02E140D0 LDR X2, [X8 + 0x8]
	0x02E140D4 ORN W8, W31, W21, 0x0
	0x02E140D8 ADD W1, W19, W8
	0x02E140DC BL 0x2098768
	0x02E140E0 LDP X20, X19, [X31 + 0x10]
	0x02E140E4 AND X0, X0, 0xFF
	0x02E140E8 LDP X30, X21, [X31], #0x20
	0x02E140EC RET
	0x02E140F0 ADRP X0, 0x12DF000
	0x02E140F4 LDR X0, [X0 + 0x5B0]
	0x02E140F8 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, [X0+24]
	006 Move X8, [X8+192]
	007 Move X19, [X8]
	008 Move W8, [X19+309]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X19
	014 Call 0x1C5D684
	015 Move X19, X0
	016 Compare X20, 0
	017 JumpIfEqual {26}
	018 Move X0, X20
	019 Move X1, X19
	020 Call 0x1C17E00
	021 Compare X0, 0
	022 JumpIfNotEqual {27}
	023 Move X0, X20
	024 Move X1, X19
	025 Call 0x1C181E0
	026 Move X0, X31
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: TSubsystemDescriptor get_SubsystemDescriptor()

Disassembly:
	0x02E140FC BL 0x1C16F10
	0x02E14100 MOV X20, X0
	0x02E14104 ADRP X0, 0x130B000
	0x02E14108 LDR X0, [X0 + 0x78]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+8]
	004 Call 0x2E140A0, X0
	005 Return X0

Method: System.Void .ctor()

Disassembly:
	0x02E1410C B 0x2E1412C
	0x02E14110 ADRP X0, 0x12DF000

ISIL:
	001 Move X1, X31
	002 Call IntegratedSubsystem..ctor, X0
	003 Return 

