Type: UnityEngine.IntegratedSubsystem

Method: System.Void SetHandle(UnityEngine.IntegratedSubsystem subsystem)

Disassembly:
	0x03C996D0 STRB W8, [X19 + 0x156]
	0x03C996D4 LDR X0, [X21]
	0x03C996D8 STP X31, X31, [X31 + 0x8]
	0x03C996DC STR X31, [X31 + 0x18]
	0x03C996E0 LDR W8, [X0 + 0xE0]
	0x03C996E4 CBNZ W8, 0x3C996F0
	0x03C996E8 BL 0x1C16DFC
	0x03C996EC LDR X0, [X21]
	0x03C996F0 LDR X8, [X0 + 0xB8]
	0x03C996F4 LDR X0, [X8]
	0x03C996F8 CBZ X0, 0x3C997A4
	0x03C996FC ADRP X8, 0x4C8000
	0x03C99700 LDR X8, [X8 + 0xB8]
	0x03C99704 ADRP X20, 0x4C8000
	0x03C99708 ADRP X19, 0x4C8000
	0x03C9970C LDR X1, [X8]
	0x03C99710 LDR X20, [X20 + 0xA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74F000
	006 Move X2, [X21+256]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51859456
	012 Add X0, X0, 2513
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+256], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Start()

Disassembly:
	0x03C99714 LDR X19, [X19 + 0x98]
	0x03C99718 ADD X8, X31, 0x8
	0x03C9971C BL 0x301CB58
	0x03C99720 LDR X1, [X20]
	0x03C99724 ADD X0, X31, 0x8
	0x03C99728 BL 0x2BC4350
	0x03C9972C TBZ X0, 0x0, 0x3C99740
	0x03C99730 LDR X8, [X31 + 0x18]
	0x03C99734 CBZ X8, 0x3C997A0
	0x03C99738 STR X31, [X8 + 0x10]
	0x03C9973C B 0x3C99720
	0x03C99740 LDR X1, [X19]
	0x03C99744 ADD X0, X31, 0x8
	0x03C99748 BL 0x2BC434C
	0x03C9974C LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74F000
	005 Move X1, [X20+264]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51859456
	010 Add X0, X0, 2589
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+264], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Stop()

Disassembly:
	0x03C99750 LDR W8, [X0 + 0xE0]
	0x03C99754 CBNZ W8, 0x3C99760
	0x03C99758 BL 0x1C16DFC
	0x03C9975C LDR X0, [X21]
	0x03C99760 LDR X8, [X0 + 0xB8]
	0x03C99764 LDR X8, [X8]
	0x03C99768 CBZ X8, 0x3C997A4
	0x03C9976C LDP W2, W9, [X8 + 0x18]
	0x03C99770 ADD W9, W9, 0x1
	0x03C99774 CMP W2, 0x1
	0x03C99778 STP W31, W9, [X8 + 0x18]
	0x03C9977C B.LT 0x3C99790
	0x03C99780 LDR X0, [X8 + 0x10]
	0x03C99784 MOV W1, W31
	0x03C99788 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74F000
	005 Move X1, [X20+272]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51867648
	010 Add X0, X0, 1211
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+272], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Destroy()

Disassembly:
	0x03C9978C BL 0x339FA34
	0x03C99790 LDP X20, X19, [X31 + 0x30]
	0x03C99794 LDP X30, X21, [X31 + 0x20]
	0x03C99798 ADD X31, X31, 0x40
	0x03C9979C RET
	0x03C997A0 BL 0x1C16F20
	0x03C997A4 BL 0x1C16F20
	0x03C997A8 B 0x3C997AC
	0x03C997AC MOV X20, X0
	0x03C997B0 CMP W1, 0x1
	0x03C997B4 B.NE 0x3C997E8
	0x03C997B8 MOV X0, X20
	0x03C997BC BL 0x3EB1AD0
	0x03C997C0 LDR X19, [X0]
	0x03C997C4 BL 0x3EB1AE0
	0x03C997C8 ADRP X8, 0x4C8000
	0x03C997CC LDR X8, [X8 + 0x98]
	0x03C997D0 ADD X0, X31, 0x8
	0x03C997D4 LDR X1, [X8]
	0x03C997D8 BL 0x2BC434C
	0x03C997DC CBZ X19, 0x3C9974C
	0x03C997E0 MOV X0, X19
	0x03C997E4 BL 0x1C16F18
	0x03C997E8 MOV X19, X31
	0x03C997EC B 0x3C997F4
	0x03C997F0 MOV X20, X0
	0x03C997F4 ADRP X8, 0x4C8000
	0x03C997F8 LDR X8, [X8 + 0x98]
	0x03C997FC LDR X1, [X8]
	0x03C99800 ADD X0, X31, 0x8
	0x03C99804 BL 0x2BC434C
	0x03C99808 CBNZ X19, 0x3C99814
	0x03C9980C MOV X0, X20
	0x03C99810 BL 0x1D2C690

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x74F000
	006 Move X20, 0x483000
	007 Move W8, [X21+280]
	008 Move X20, [X20+192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x483000
	015 Move X0, [X0+192]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+280], W8
	019 Move X0, [X20]
	020 Move X20, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Call SubsystemManager.RemoveIntegratedSubsystemByPtr, X0
	027 Move X21, 0x74F000
	028 Move X8, [X21+296]
	029 Compare X8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51941376
	032 Add X0, X0, 3098
	033 Call 0x1C17CB8
	034 Move X8, X0
	035 Move [X21+296], X0
	036 Move X0, X20
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move [X19+16], X31
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 

Method: System.Boolean get_running()

Disassembly:
	0x03C999A8 LDRB W8, [X0 + 0x10]
	0x03C999AC CBNZ W8, 0x3C999D4
	0x03C999B0 LDR X8, [X0]
	0x03C999B4 MOV X19, X0
	0x03C999B8 LDP X9, X1, [X8 + 0x1A8]
	0x03C999BC BLR X9
	0x03C999C0 LDR X8, [X19 + 0x18]
	0x03C999C4 CBZ X8, 0x3C999DC
	0x03C999C8 MOVZ W9, 0x1
	0x03C999CC STRB W9, [X8 + 0x10]
	0x03C999D0 STRB W9, [X19 + 0x10]
	0x03C999D4 LDP X30, X19, [X31], #0x10
	0x03C999D8 RET
	0x03C999DC BL 0x1C16F20
	0x03C999E0 STP X30, X19, [X31 - 0x10]!
	0x03C999E4 LDRB W8, [X0 + 0x10]
	0x03C999E8 CBZ W8, 0x3C99A0C
	0x03C999EC LDR X8, [X0]
	0x03C999F0 MOV X19, X0
	0x03C999F4 LDP X9, X1, [X8 + 0x1B8]
	0x03C999F8 BLR X9
	0x03C999FC LDR X8, [X19 + 0x18]
	0x03C99A00 CBZ X8, 0x3C99A14
	0x03C99A04 STRB W31, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+16]
	006 Move X1, X31
	007 Move X2, X31
	008 Call IntPtr.op_Inequality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {27}
	013 Move X20, 0x74F000
	014 Move X1, [X20+288]
	015 Compare X1, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51834880
	018 Add X0, X0, 523
	019 Call 0x1C17CB8
	020 Move X1, X0
	021 Move [X20+288], X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 CallNoReturn X1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move W0, W31
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Boolean get_valid()

Disassembly:
	0x03C99A08 STRB W31, [X19 + 0x10]
	0x03C99A0C LDP X30, X19, [X31], #0x10
	0x03C99A10 RET
	0x03C99A14 BL 0x1C16F20

ISIL:
	001 Move X0, [X0+16]
	002 Move X1, X31
	003 Move X2, X31
	004 Call IntPtr.op_Inequality, X0, X1
	005 Return X0

Method: System.Boolean IsRunning()

Disassembly:
	0x03C99A18 STP X30, X21, [X31 - 0x20]!
	0x03C99A1C STP X20, X19, [X31 + 0x10]
	0x03C99A20 ADRP X21, 0x74E000
	0x03C99A24 ADRP X20, 0x482000
	0x03C99A28 LDRB W8, [X21 + 0x162]
	0x03C99A2C LDR X20, [X20 + 0xC0]
	0x03C99A30 MOV X19, X0
	0x03C99A34 TBNZ X8, 0x0, 0x3C99A4C
	0x03C99A38 ADRP X0, 0x482000
	0x03C99A3C LDR X0, [X0 + 0xC0]
	0x03C99A40 BL 0x1C16CF4
	0x03C99A44 MOVZ W8, 0x1
	0x03C99A48 STRB W8, [X21 + 0x162]
	0x03C99A4C MOV X0, X19
	0x03C99A50 BL 0x3C999E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x74F000
	005 Move X1, [X20+288]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51834880
	010 Add X0, X0, 523
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+288], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03C99A54 LDR X0, [X20]
	0x03C99A58 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

