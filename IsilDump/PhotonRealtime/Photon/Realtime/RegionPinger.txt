Type: Photon.Realtime.RegionPinger

Method: System.Boolean get_Done()

Disassembly:
	0x0354B9C8 STR W20, [X8 + 0x20]
	0x0354B9CC B 0x354B9E4

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_Done(System.Boolean value)

Disassembly:
	0x0354B9D0 LDR X8, [X9 + 0x20]
	0x0354B9D4 MOV W1, W20
	0x0354B9D8 LDR X8, [X8 + 0xC0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+20], W8
	003 Return 

Method: System.Boolean get_Aborted()

Disassembly:
	0x0354B9DC LDR X2, [X8 + 0x70]
	0x0354B9E0 BL 0x2FDC70C

ISIL:
	001 Move W0, [X0+21]
	002 Return X0

Method: System.Void set_Aborted(System.Boolean value)

Disassembly:
	0x0354B9E4 LDP W8, W9, [X19 + 0x28]
	0x0354B9E8 ADD W8, W8, W20
	0x0354B9EC ADD W10, W9, 0x1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+21], W8
	003 Return 

Method: System.Void .ctor(Photon.Realtime.Region region, System.Action`1<Photon.Realtime.Region> onDoneCallback)

Disassembly:
	0x0354B9F0 STP W8, W10, [X19 + 0x28]
	0x0354B9F4 LDR X9, [X21 + 0x30]
	0x0354B9F8 CBZ X9, 0x354BCB4
	0x0354B9FC SDIV W8, W8, W10
	0x0354BA00 MOVZ W10, 0x4
	0x0354BA04 STR W8, [X9 + 0x28]
	0x0354BA08 STR W10, [X19 + 0x38]
	0x0354BA0C LDR X0, [X21 + 0x20]
	0x0354BA10 CBZ X0, 0x354BCB4
	0x0354BA14 LDR X8, [X0]
	0x0354BA18 LDP X9, X1, [X8 + 0x198]
	0x0354BA1C BLR X9
	0x0354BA20 TBNZ X0, 0x0, 0x354BA64
	0x0354BA24 LDR W8, [X19 + 0x38]
	0x0354BA28 CMP W8, 0x0
	0x0354BA2C B.LE 0x354BA64
	0x0354BA30 SUB W8, W8, 0x1
	0x0354BA34 STR W8, [X19 + 0x38]
	0x0354BA38 ADRP X8, 0xBAB000
	0x0354BA3C LDR X8, [X8 + 0xC30]
	0x0354BA40 LDR X0, [X8]
	0x0354BA44 BL 0x1C16F10
	0x0354BA48 ADRP X8, 0xFFFFFFFFFD59F000
	0x0354BA4C LDR V0, [X8 + 0xBC]
	0x0354BA50 MOV X1, X31
	0x0354BA54 MOV X20, X0
	0x0354BA58 BL 0x3C3A634
	0x0354BA5C MOVZ W8, 0x3
	0x0354BA60 B 0x354BC98
	0x0354BA64 ADRP X8, 0xBAB000
	0x0354BA68 LDR X8, [X8 + 0xC30]
	0x0354BA6C LDR X0, [X8]
	0x0354BA70 BL 0x1C16F10
	0x0354BA74 ADRP X8, 0xFFFFFFFFFD59F000
	0x0354BA78 LDR V0, [X8 + 0xBC]
	0x0354BA7C MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xE95000
	008 Move X22, 0xBEA000
	009 Move W8, [X23+3195]
	010 Move X22, [X22+3640]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBEA000
	019 Move X0, [X0+3640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3195], W8
	023 Move X0, X20
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move [X20+48], X21
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Compare X21, 0
	033 JumpIfEqual {47}
	034 Move X8, [X22]
	035 Move X8, [X8+184]
	036 Move W8, [X8+8]
	037 Move [X21+40], W8
	038 Move [X20+20], W31
	039 Move [X20+24], X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Return 
	047 Call 0x1C17F20

Method: Photon.Realtime.PhotonPing GetPingImplementation()

Disassembly:
	0x0354BA80 MOV X20, X0
	0x0354BA84 BL 0x3C3A634
	0x0354BA88 MOVZ W8, 0x4
	0x0354BA8C B 0x354BC98
	0x0354BA90 STR X21, [X31 + 0x8]
	0x0354BA94 BL 0x1C16F20
	0x0354BA98 STR X21, [X31 + 0x8]
	0x0354BA9C BL 0x1C16F20
	0x0354BAA0 STR X21, [X31 + 0x8]
	0x0354BAA4 B 0x354BAAC
	0x0354BAA8 B 0x354BAAC
	0x0354BAAC MOV X20, X0
	0x0354BAB0 CMP W1, 0x1
	0x0354BAB4 B.NE 0x354BCE4
	0x0354BAB8 MOV X0, X20
	0x0354BABC BL 0x3EB1AD0
	0x0354BAC0 MOV X20, X0
	0x0354BAC4 ADRP X0, 0xBA8000
	0x0354BAC8 LDR X0, [X0 + 0x7D0]
	0x0354BACC BL 0x1C16D08
	0x0354BAD0 LDR X8, [X20]
	0x0354BAD4 LDR X1, [X8]
	0x0354BAD8 BL 0x1C17270
	0x0354BADC TBZ X0, 0x0, 0x354BCBC
	0x0354BAE0 LDR X20, [X20]
	0x0354BAE4 BL 0x3EB1AE0
	0x0354BAE8 ADRP X0, 0xBA8000
	0x0354BAEC LDR X0, [X0 + 0xAC8]
	0x0354BAF0 BL 0x1C16D08
	0x0354BAF4 MOVZ W1, 0x6
	0x0354BAF8 BL 0x1C16D6C
	0x0354BAFC CBZ X0, 0x354BCB4
	0x0354BB00 MOV X21, X0
	0x0354BB04 ADRP X0, 0xBB1000
	0x0354BB08 LDR X0, [X0 + 0x9A8]
	0x0354BB0C BL 0x1C16D08
	0x0354BB10 LDR W8, [X21 + 0x18]
	0x0354BB14 CBZ W8, 0x354BCB8
	0x0354BB18 STR X0, [X21 + 0x20]
	0x0354BB1C CBZ X20, 0x354BB38
	0x0354BB20 LDR X8, [X20]
	0x0354BB24 MOV X0, X20
	0x0354BB28 LDP X9, X1, [X8 + 0x168]
	0x0354BB2C BLR X9
	0x0354BB30 LDR W8, [X21 + 0x18]
	0x0354BB34 B 0x354BB3C
	0x0354BB38 MOV X0, X31
	0x0354BB3C CMP W8, 0x1
	0x0354BB40 B.LS 0x354BCB8
	0x0354BB44 STR X0, [X21 + 0x28]
	0x0354BB48 ADRP X0, 0xBB1000
	0x0354BB4C LDR X0, [X0 + 0x9B0]
	0x0354BB50 BL 0x1C16D08
	0x0354BB54 LDR W8, [X21 + 0x18]
	0x0354BB58 CMP W8, 0x2
	0x0354BB5C B.LS 0x354BCB8
	0x0354BB60 STR X0, [X21 + 0x30]
	0x0354BB64 CBZ X20, 0x354BCB4
	0x0354BB68 LDR X8, [X20]
	0x0354BB6C MOV X0, X20
	0x0354BB70 LDP X9, X1, [X8 + 0x1C8]
	0x0354BB74 BLR X9
	0x0354BB78 LDR W8, [X21 + 0x18]
	0x0354BB7C CMP W8, 0x3
	0x0354BB80 B.LS 0x354BCB8
	0x0354BB84 STR X0, [X21 + 0x38]
	0x0354BB88 ADRP X0, 0xBB1000
	0x0354BB8C LDR X0, [X0 + 0x9B8]
	0x0354BB90 BL 0x1C16D08
	0x0354BB94 LDR W8, [X21 + 0x18]
	0x0354BB98 CMP W8, 0x4
	0x0354BB9C B.LS 0x354BCB8
	0x0354BBA0 STR X0, [X21 + 0x40]
	0x0354BBA4 LDR X8, [X20]
	0x0354BBA8 MOV X0, X20
	0x0354BBAC LDP X9, X1, [X8 + 0x188]
	0x0354BBB0 BLR X9
	0x0354BBB4 LDR W8, [X21 + 0x18]
	0x0354BBB8 CMP W8, 0x5
	0x0354BBBC B.LS 0x354BCB8
	0x0354BBC0 STR X0, [X21 + 0x48]
	0x0354BBC4 MOV X0, X21
	0x0354BBC8 MOV X1, X31
	0x0354BBCC BL 0x32278CC
	0x0354BBD0 MOV X20, X0
	0x0354BBD4 ADRP X0, 0xBA8000
	0x0354BBD8 LDR X0, [X0 + 0xA28]
	0x0354BBDC BL 0x1C16D08
	0x0354BBE0 LDR W8, [X0 + 0xE0]
	0x0354BBE4 CBNZ W8, 0x354BBEC
	0x0354BBE8 BL 0x1C16DFC
	0x0354BBEC MOV X0, X20
	0x0354BBF0 MOV X1, X31
	0x0354BBF4 BL 0x3C06048
	0x0354BBF8 LDR X21, [X31 + 0x8]
	0x0354BBFC CBZ X21, 0x354BCB4
	0x0354BC00 LDR X0, [X21 + 0x20]
	0x0354BC04 MOVZ W8, 0x1
	0x0354BC08 STRB W8, [X21 + 0x14]
	0x0354BC0C CBZ X0, 0x354BCB4
	0x0354BC10 LDR X8, [X0]
	0x0354BC14 LDP X9, X1, [X8 + 0x1A8]
	0x0354BC18 BLR X9
	0x0354BC1C LDR X0, [X21 + 0x28]
	0x0354BC20 CBZ X0, 0x354BCB4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xE95000
	007 Move X21, 0xBEA000
	008 Move X22, 0xBA9000
	009 Move W8, [X19+3196]
	010 Move X21, [X21+3456]
	011 Move X22, [X22+1728]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBEA000
	017 Move X0, [X0+4088]
	018 Call 0x1C17CF4
	019 Move X0, 0xBEB000
	020 Move X0, [X0+104]
	021 Call 0x1C17CF4
	022 Move X0, 0xBEB000
	023 Move X0, [X0+112]
	024 Call 0x1C17CF4
	025 Move X0, 0xBEA000
	026 Move X0, [X0+3456]
	027 Call 0x1C17CF4
	028 Move X0, 0xBA9000
	029 Move X0, [X0+1728]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+3196], W8
	033 Move X8, [X21]
	034 Move X0, [X22]
	035 Move X8, [X8+184]
	036 Move W9, [X0+224]
	037 Move X19, [X8]
	038 Compare W9, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Move X2, X31
	044 Call Type.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {71}
	049 Move X8, [X21]
	050 Move X9, 0xBEB000
	051 Move X0, [X22]
	052 Move X8, [X8+184]
	053 Move X9, [X9+104]
	054 Move W10, [X0+224]
	055 Move X19, [X8]
	056 Move X20, [X9]
	057 Compare W10, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Call Type.GetTypeFromHandle, X0
	063 Move X1, X0
	064 Move X0, X19
	065 Move X2, X31
	066 Call Type.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {80}
	071 Move X8, 0xBEB000
	072 Move X8, [X8+112]
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 Move X1, X31
	076 Move X19, X0
	077 Call PingMono..ctor, X0
	078 Compare X19, 0
	079 JumpIfNotEqual {116}
	080 Move X8, [X21]
	081 Move X0, [X22]
	082 Move X8, [X8+184]
	083 Move W9, [X0+224]
	084 Move X19, [X8]
	085 Compare W9, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X19
	089 Move X1, X31
	090 Move X2, X31
	091 Call Type.op_Inequality, X0, X1
	092 Move X19, X31
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {116}
	097 Move X8, [X21]
	098 Move X1, X31
	099 Move X8, [X8+184]
	100 Move X0, [X8]
	101 Call Activator.CreateInstance, X0
	102 Move X19, X0
	103 Compare X0, 0
	104 JumpIfEqual {116}
	105 Move X9, 0xBEA000
	106 Move X9, [X9+4088]
	107 Move X8, [X19]
	108 Move X1, [X9]
	109 Move W10, [X8+304]
	110 Move W9, [X1+304]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X8+200]
	113 Add X8, X8, X9
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X19
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X22, [X31+16]
	120 Move X21, [X31+24]
	121 Move X30, [X31+48]
	122 Return X0
	123 Move X0, X19
	124 Call 0x1C181E0

Method: System.Boolean Start()

Disassembly:
	0x0354BC24 LDR W8, [X0 + 0x18]
	0x0354BC28 CMP W8, 0x2
	0x0354BC2C B.LT 0x354BC74
	0x0354BC30 LDR W8, [X19 + 0x2C]
	0x0354BC34 CMP W8, 0x1
	0x0354BC38 B.LT 0x354BC74
	0x0354BC3C MOV X1, X31
	0x0354BC40 BL 0x35DF194
	0x0354BC44 LDR X8, [X21 + 0x28]
	0x0354BC48 MOV W20, W0
	0x0354BC4C MOV X1, X31
	0x0354BC50 MOV X0, X8
	0x0354BC54 BL 0x35DF820
	0x0354BC58 LDR X8, [X21 + 0x30]
	0x0354BC5C CBZ X8, 0x354BCB4
	0x0354BC60 LDP W9, W10, [X19 + 0x28]
	0x0354BC64 SUB W11, W20, W0
	0x0354BC68 ADD W9, W11, W9
	0x0354BC6C SDIV W9, W9, W10
	0x0354BC70 STR W9, [X8 + 0x28]
	0x0354BC74 LDR X8, [X21 + 0x18]
	0x0354BC78 CBZ X8, 0x354BCB4
	0x0354BC7C LDR X1, [X21 + 0x30]
	0x0354BC80 LDR X9, [X8 + 0x18]
	0x0354BC84 LDR X0, [X8 + 0x40]
	0x0354BC88 LDR X2, [X8 + 0x28]
	0x0354BC8C BLR X9
	0x0354BC90 MOV X20, X31
	0x0354BC94 MOVZ W8, 0x5
	0x0354BC98 MOVZ W0, 0x1
	0x0354BC9C STR X20, [X19 + 0x18]
	0x0354BCA0 STR W8, [X19 + 0x10]
	0x0354BCA4 LDP X20, X19, [X31 + 0x20]
	0x0354BCA8 LDP X22, X21, [X31 + 0x10]
	0x0354BCAC LDR X30, [X31], #0x30
	0x0354BCB0 RET
	0x0354BCB4 BL 0x1C16F20
	0x0354BCB8 BL 0x1C16F28
	0x0354BCBC MOVZ W0, 0x8
	0x0354BCC0 BL 0x3EB1AF0
	0x0354BCC4 LDR X8, [X20]
	0x0354BCC8 STR X8, [X0]
	0x0354BCCC ADRP X1, 0x969000
	0x0354BCD0 ADD X1, X1, 0xE58
	0x0354BCD4 MOV X2, X31
	0x0354BCD8 BL 0x3EB1B00
	0x0354BCDC MOV X20, X0
	0x0354BCE0 BL 0x3EB1AE0
	0x0354BCE4 MOV X0, X20
	0x0354BCE8 BL 0x1D2C690
	0x0354BCEC BL 0x1990590
	0x0354BCF0 LDR X0, [X0 + 0x18]
	0x0354BCF4 RET
	0x0354BCF8 STP X30, X19, [X31 - 0x10]!
	0x0354BCFC ADRP X0, 0xBA8000
	0x0354BD00 LDR X0, [X0 + 0xB40]
	0x0354BD04 BL 0x1C16D08
	0x0354BD08 BL 0x1C16F10
	0x0354BD0C MOV X1, X31
	0x0354BD10 MOV X19, X0
	0x0354BD14 BL 0x3380310
	0x0354BD18 ADRP X0, 0xBEA000
	0x0354BD1C LDR X0, [X0 + 0x98]
	0x0354BD20 BL 0x1C16D08
	0x0354BD24 MOV X1, X0
	0x0354BD28 MOV X0, X19
	0x0354BD2C BL 0x1C16DEC
	0x0354BD30 LDR X0, [X0 + 0x18]
	0x0354BD34 RET
	0x0354BD38 STP X30, X23, [X31 - 0x30]!
	0x0354BD3C STP X22, X21, [X31 + 0x10]
	0x0354BD40 STP X20, X19, [X31 + 0x20]
	0x0354BD44 ADRP X22, 0xE94000
	0x0354BD48 ADRP X23, 0xBB1000
	0x0354BD4C ADRP X20, 0xBA8000
	0x0354BD50 ADRP X21, 0xBA8000
	0x0354BD54 LDRB W8, [X22 + 0xC84]
	0x0354BD58 LDR X23, [X23 + 0x928]
	0x0354BD5C LDR X20, [X20 + 0xA58]
	0x0354BD60 LDR X21, [X21 + 0x598]
	0x0354BD64 MOV X19, X0
	0x0354BD68 TBNZ X8, 0x0, 0x354BDA4
	0x0354BD6C ADRP X0, 0xBEA000
	0x0354BD70 LDR X0, [X0 + 0xA0]
	0x0354BD74 BL 0x1C16CF4
	0x0354BD78 ADRP X0, 0xBA8000
	0x0354BD7C LDR X0, [X0 + 0xA58]
	0x0354BD80 BL 0x1C16CF4
	0x0354BD84 ADRP X0, 0xBA8000
	0x0354BD88 LDR X0, [X0 + 0x598]
	0x0354BD8C BL 0x1C16CF4
	0x0354BD90 ADRP X0, 0xBB1000
	0x0354BD94 LDR X0, [X0 + 0x928]
	0x0354BD98 BL 0x1C16CF4
	0x0354BD9C MOVZ W8, 0x1
	0x0354BDA0 STRB W8, [X22 + 0xC84]
	0x0354BDA4 LDR X8, [X23]
	0x0354BDA8 LDR X0, [X20]
	0x0354BDAC CMP X19, 0x0
	0x0354BDB0 CSEL X20, X8, X19, EQ
	0x0354BDB4 BL 0x1C16F10
	0x0354BDB8 MOV X1, X20
	0x0354BDBC MOV X2, X31
	0x0354BDC0 MOV X19, X0
	0x0354BDC4 BL 0x3C35934
	0x0354BDC8 LDR X0, [X21]
	0x0354BDCC LDR W8, [X0 + 0xE0]
	0x0354BDD0 CBNZ W8, 0x354BDD8
	0x0354BDD4 BL 0x1C16DFC
	0x0354BDD8 MOV X0, X19
	0x0354BDDC MOV X1, X31
	0x0354BDE0 BL 0x3C39674
	0x0354BDE4 CBZ X19, 0x354BE08
	0x0354BDE8 ADRP X8, 0xBEA000
	0x0354BDEC LDR X8, [X8 + 0xA0]
	0x0354BDF0 MOV X0, X19
	0x0354BDF4 LDP X20, X19, [X31 + 0x20]
	0x0354BDF8 LDP X22, X21, [X31 + 0x10]
	0x0354BDFC LDR X1, [X8]
	0x0354BE00 LDP X30, X23, [X31], #0x30
	0x0354BE04 B 0x21E51FC
	0x0354BE08 BL 0x1C16F20
	0x0354BE0C STP X30, X21, [X31 - 0x20]!
	0x0354BE10 STP X20, X19, [X31 + 0x10]
	0x0354BE14 ADRP X21, 0xE94000
	0x0354BE18 ADRP X20, 0xBA8000
	0x0354BE1C LDRB W8, [X21 + 0xC85]
	0x0354BE20 LDR X20, [X20 + 0x598]
	0x0354BE24 MOV X19, X0
	0x0354BE28 TBNZ X8, 0x0, 0x354BE40
	0x0354BE2C ADRP X0, 0xBA8000
	0x0354BE30 LDR X0, [X0 + 0x598]
	0x0354BE34 BL 0x1C16CF4
	0x0354BE38 MOVZ W8, 0x1
	0x0354BE3C STRB W8, [X21 + 0xC85]
	0x0354BE40 MOV X0, X19
	0x0354BE44 MOV X1, X31
	0x0354BE48 BL 0x3C32ECC
	0x0354BE4C LDR X8, [X20]
	0x0354BE50 MOV X19, X0
	0x0354BE54 LDR W9, [X8 + 0xE0]
	0x0354BE58 CBNZ W9, 0x354BE64
	0x0354BE5C MOV X0, X8
	0x0354BE60 BL 0x1C16DFC
	0x0354BE64 MOV X0, X19
	0x0354BE68 LDP X20, X19, [X31 + 0x10]
	0x0354BE6C MOV X1, X31
	0x0354BE70 LDP X30, X21, [X31], #0x20
	0x0354BE74 B 0x3C394A8
	0x0354BE78 STR X30, [X31 - 0x20]!
	0x0354BE7C STP X20, X19, [X31 + 0x10]
	0x0354BE80 LDR X1, [X0 + 0x28]
	0x0354BE84 CBZ X1, 0x354BEBC
	0x0354BE88 MOV X20, X0
	0x0354BE8C LDR X8, [X20 + 0x20]!
	0x0354BE90 MOV X19, X0
	0x0354BE94 CBZ X8, 0x354BEC8
	0x0354BE98 LDR X9, [X8 + 0x18]
	0x0354BE9C LDR X0, [X8 + 0x40]
	0x0354BEA0 LDR X2, [X8 + 0x28]
	0x0354BEA4 BLR X9
	0x0354BEA8 STP X31, X31, [X20]
	0x0354BEAC MOV X0, X19
	0x0354BEB0 LDP X20, X19, [X31 + 0x10]
	0x0354BEB4 LDR X30, [X31], #0x20
	0x0354BEB8 B 0x354BE0C
	0x0354BEBC LDP X20, X19, [X31 + 0x10]
	0x0354BEC0 LDR X30, [X31], #0x20
	0x0354BEC4 RET
	0x0354BEC8 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE95000
	008 Move W8, [X20+3197]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {46}
	014 Move X0, 0xBB2000
	015 Move X0, [X0+2368]
	016 Call 0x1C17CF4
	017 Move X0, 0xBAA000
	018 Move X0, [X0+3616]
	019 Call 0x1C17CF4
	020 Move X0, 0xBAA000
	021 Move X0, [X0+3632]
	022 Call 0x1C17CF4
	023 Move X0, 0xBEB000
	024 Move X0, [X0+120]
	025 Call 0x1C17CF4
	026 Move X0, 0xBEB000
	027 Move X0, [X0+128]
	028 Call 0x1C17CF4
	029 Move X0, 0xBEA000
	030 Move X0, [X0+3640]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB1000
	033 Move X0, [X0+3680]
	034 Call 0x1C17CF4
	035 Move X0, 0xBB2000
	036 Move X0, [X0+2392]
	037 Call 0x1C17CF4
	038 Move X0, 0xBB2000
	039 Move X0, [X0+2400]
	040 Call 0x1C17CF4
	041 Move X0, 0xBA9000
	042 Move X0, [X0+3552]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+3197], W8
	046 Move X8, [X19+48]
	047 Compare X8, 0
	048 JumpIfEqual {159}
	049 Move X20, [X8+32]
	050 Compare X20, 0
	051 JumpIfEqual {159}
	052 Move X21, 0xBEA000
	053 Move X21, [X21+3640]
	054 Move W1, 58
	055 Move X0, X20
	056 Move X2, X31
	057 Call String.LastIndexOf, X0, X1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W2, W0
	060 Move X0, X20
	061 Move W1, W31
	062 Move X3, X31
	063 Call String.Substring, X0, X1, X2
	064 Move X20, X0
	065 Move X0, [X21]
	066 Move X23, 0xBAA000
	067 Move X22, 0xBAA000
	068 Move W8, [X0+224]
	069 Move X23, [X23+3632]
	070 Move X22, [X22+3616]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Call RegionPinger.ResolveHost, X0
	076 Move [X19+56], X0
	077 Call RegionPinger.GetPingImplementation, X0
	078 Move [X19+32], X0
	079 Move [X19+20], W31
	080 Move [X19+16], W31
	081 Move X8, [X21]
	082 Move X0, [X23]
	083 Move X8, [X8+184]
	084 Move W20, [X8]
	085 Call 0x1C17F10
	086 Move X2, [X22]
	087 Move W1, W20
	088 Move X21, X0
	089 Call List`1<Int32>..ctor, X0, X1
	090 Move W8, [X19+21]
	091 Move W0, W31
	092 Move [X19+40], X21
	093 Compare W8, 0
	094 JumpIfNotEqual {152}
	095 Move X8, 0xBB2000
	096 Move X8, [X8+2392]
	097 Move X0, [X8]
	098 Call 0x1C17F10
	099 Move X8, 0xBEB000
	100 Move X8, [X8+128]
	101 Move X20, X0
	102 Move X2, [X8]
	103 Move X1, X19
	104 Move X3, X31
	105 Call WaitCallback..ctor, X0, X1, X2
	106 Move X0, X20
	107 Move X1, X31
	108 Call ThreadPool.QueueUserWorkItem, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {151}
	113 Move X8, 0xBB2000
	114 Move X8, [X8+2368]
	115 Move X0, [X8]
	116 Call 0x1C17F10
	117 Move X8, 0xBEB000
	118 Move X8, [X8+120]
	119 Move X1, X19
	120 Move X3, X31
	121 Move X20, X0
	122 Move X2, [X8]
	123 Call Func`1<Boolean>..ctor, X0, X1, X2
	124 Move X8, [X19+48]
	125 Compare X8, 0
	126 JumpIfEqual {159}
	127 Move X1, [X8+16]
	128 Move X3, [X8+24]
	129 Move X8, 0xBB2000
	130 Move X9, 0xBA9000
	131 Move X8, [X8+2400]
	132 Move X9, [X9+3552]
	133 Move X4, X31
	134 Move X0, [X8]
	135 Move X2, [X9]
	136 Call String.Concat, X0, X1, X2, X3
	137 Move X8, 0xBB1000
	138 Move X8, [X8+3680]
	139 Move X19, X0
	140 Move X8, [X8]
	141 Move W9, [X8+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {146}
	144 Move X0, X8
	145 Call 0x1C17DFC
	146 Move X0, X20
	147 Move W1, W31
	148 Move X2, X19
	149 Move X3, X31
	150 Call SupportClass.StartBackgroundCalls, X0, X1, X2
	151 Move W0, 1
	152 Move X20, [X31+32]
	153 Move X19, [X31+40]
	154 Move X22, [X31+16]
	155 Move X21, [X31+24]
	156 Move X30, [X31+48]
	157 Move X23, [X31+56]
	158 Return X0
	159 Call 0x1C17F20
	160 Move X20, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, X20
	163 Call 0x3EB2AD0
	164 Move X20, X0
	165 Move X0, 0xBAF000
	166 Move X0, [X0+3264]
	167 Call 0x1C17D08
	168 Move X8, [X20]
	169 Move X1, [X8]
	170 Call 0x1C18270
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {176}
	175 Call 0x3EB2AE0
	176 Move W0, 8
	177 Call 0x3EB2AF0
	178 Move X8, [X20]
	179 Move [X0], X8
	180 Move X1, 0x96A000
	181 Add X1, X1, 3672
	182 Move X2, X31
	183 Call 0x3EB2B00
	184 Move X20, X0
	185 Call 0x3EB2AE0
	186 Move X0, X20
	187 Call 0x1D2D690
	188 Call 0x1991590

Method: System.Void Abort()

Disassembly:
	0x0354C134 LDR X8, [X8 + 0xDA0]
	0x0354C138 LDR X0, [X8]
	0x0354C13C BL 0x1C16F10
	0x0354C140 MOV X1, X31
	0x0354C144 MOV X21, X0
	0x0354C148 BL 0x34ED7D8
	0x0354C14C ADRP X8, 0xBA7000
	0x0354C150 LDR X8, [X8 + 0xB58]
	0x0354C154 ADD X1, X31, 0xC

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+32]
	003 Move W9, 1
	004 Move [X8+21], W9
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move X8, [X0]
	008 Move X2, [X8+424]
	009 Move X1, [X8+432]
	010 CallNoReturn X2
	011 Return 

Method: System.Boolean RegionPingThreaded()

Disassembly:
	0x0354C158 STRB W22, [X31 + 0xC]
	0x0354C15C LDR X0, [X8]
	0x0354C160 BL 0x1C16E04
	0x0354C164 CBZ X21, 0x354C1AC
	0x0354C168 MOV X2, X0
	0x0354C16C MOVZ W1, 0xFD
	0x0354C170 MOV X0, X21
	0x0354C174 MOV X3, X31
	0x0354C178 BL 0x34EDAA0
	0x0354C17C CBZ X20, 0x354C1AC
	0x0354C180 MOV X0, X20
	0x0354C184 MOV X1, X21
	0x0354C188 MOV X2, X31
	0x0354C18C MOV X3, X31
	0x0354C190 MOV X4, X31
	0x0354C194 BL 0x353CB08
	0x0354C198 STRB W22, [X19 + 0x38]
	0x0354C19C LDP X20, X19, [X31 + 0x20]
	0x0354C1A0 LDP X22, X21, [X31 + 0x10]
	0x0354C1A4 LDR X30, [X31], #0x30
	0x0354C1A8 RET
	0x0354C1AC BL 0x1C16F20
	0x0354C1B0 LDRB W0, [X0 + 0x39]
	0x0354C1B4 RET
	0x0354C1B8 STR X30, [X31 - 0x30]!
	0x0354C1BC STP X22, X21, [X31 + 0x10]
	0x0354C1C0 STP X20, X19, [X31 + 0x20]
	0x0354C1C4 ADRP X20, 0xE93000
	0x0354C1C8 LDRB W8, [X20 + 0xC89]
	0x0354C1CC MOV X19, X0
	0x0354C1D0 AND W22, W1, 0x1
	0x0354C1D4 TBNZ X8, 0x0, 0x354C1F8
	0x0354C1D8 ADRP X0, 0xBA7000
	0x0354C1DC LDR X0, [X0 + 0xB58]
	0x0354C1E0 BL 0x1C16CF4
	0x0354C1E4 ADRP X0, 0xBAF000
	0x0354C1E8 LDR X0, [X0 + 0xDA0]
	0x0354C1EC BL 0x1C16CF4
	0x0354C1F0 MOVZ W8, 0x1
	0x0354C1F4 STRB W8, [X20 + 0xC89]
	0x0354C1F8 LDRB W8, [X19 + 0x39]
	0x0354C1FC CMP W8, W22
	0x0354C200 B.EQ 0x354C278
	0x0354C204 LDRB W8, [X19 + 0x68]
	0x0354C208 CBNZ W8, 0x354C278
	0x0354C20C ADRP X8, 0xBAF000
	0x0354C210 LDR X20, [X19 + 0x60]
	0x0354C214 LDR X8, [X8 + 0xDA0]
	0x0354C218 LDR X0, [X8]
	0x0354C21C BL 0x1C16F10
	0x0354C220 MOV X1, X31
	0x0354C224 MOV X21, X0
	0x0354C228 BL 0x34ED7D8
	0x0354C22C ADRP X8, 0xBA7000
	0x0354C230 LDR X8, [X8 + 0xB58]
	0x0354C234 ADD X1, X31, 0xC
	0x0354C238 STRB W22, [X31 + 0xC]
	0x0354C23C LDR X0, [X8]
	0x0354C240 BL 0x1C16E04
	0x0354C244 CBZ X21, 0x354C28C
	0x0354C248 MOV X2, X0
	0x0354C24C MOVZ W1, 0xFE
	0x0354C250 MOV X0, X21
	0x0354C254 MOV X3, X31
	0x0354C258 BL 0x34EDAA0
	0x0354C25C CBZ X20, 0x354C28C
	0x0354C260 MOV X0, X20
	0x0354C264 MOV X1, X21
	0x0354C268 MOV X2, X31
	0x0354C26C MOV X3, X31
	0x0354C270 MOV X4, X31
	0x0354C274 BL 0x353CB08
	0x0354C278 STRB W22, [X19 + 0x39]
	0x0354C27C LDP X20, X19, [X31 + 0x20]
	0x0354C280 LDP X22, X21, [X31 + 0x10]
	0x0354C284 LDR X30, [X31], #0x30
	0x0354C288 RET
	0x0354C28C BL 0x1C16F20
	0x0354C290 LDR W0, [X0 + 0x20]
	0x0354C294 RET
	0x0354C298 STR X30, [X31 - 0x30]!
	0x0354C29C STP X22, X21, [X31 + 0x10]
	0x0354C2A0 STP X20, X19, [X31 + 0x20]
	0x0354C2A4 ADRP X20, 0xE93000
	0x0354C2A8 LDRB W8, [X20 + 0xC8A]
	0x0354C2AC MOV W21, W1
	0x0354C2B0 MOV X19, X0
	0x0354C2B4 TBNZ X8, 0x0, 0x354C2E4
	0x0354C2B8 ADRP X0, 0xBA8000
	0x0354C2BC LDR X0, [X0 + 0x9D8]
	0x0354C2C0 BL 0x1C16CF4
	0x0354C2C4 ADRP X0, 0xBAF000
	0x0354C2C8 LDR X0, [X0 + 0xDA0]
	0x0354C2CC BL 0x1C16CF4
	0x0354C2D0 ADRP X0, 0xBA7000
	0x0354C2D4 LDR X0, [X0 + 0x758]
	0x0354C2D8 BL 0x1C16CF4
	0x0354C2DC MOVZ W8, 0x1
	0x0354C2E0 STRB W8, [X20 + 0xC8A]
	0x0354C2E4 TBNZ X21, 0x1F, 0x354C3A8
	0x0354C2E8 LDR W8, [X19 + 0x20]
	0x0354C2EC CMP W8, W21
	0x0354C2F0 B.EQ 0x354C3A8
	0x0354C2F4 LDRB W8, [X19 + 0x68]
	0x0354C2F8 STR W21, [X19 + 0x20]
	0x0354C2FC CBNZ W8, 0x354C3A8
	0x0354C300 ADRP X8, 0xBAF000
	0x0354C304 LDR X20, [X19 + 0x60]
	0x0354C308 LDR X8, [X8 + 0xDA0]
	0x0354C30C CMP W21, 0x100
	0x0354C310 LDR X0, [X8]
	0x0354C314 MOVZ W8, 0x100
	0x0354C318 CSEL W22, W21, W8, LT
	0x0354C31C BL 0x1C16F10
	0x0354C320 MOV X1, X31
	0x0354C324 MOV X21, X0
	0x0354C328 BL 0x34ED7D8
	0x0354C32C ADRP X8, 0xBA8000
	0x0354C330 LDR X8, [X8 + 0x9D8]
	0x0354C334 ADD X1, X31, 0xC
	0x0354C338 STRB W22, [X31 + 0xC]
	0x0354C33C LDR X0, [X8]
	0x0354C340 BL 0x1C16E04
	0x0354C344 CBZ X21, 0x354C3B8
	0x0354C348 MOV X2, X0
	0x0354C34C MOVZ W1, 0xFF
	0x0354C350 MOV X0, X21
	0x0354C354 MOV X3, X31
	0x0354C358 BL 0x34EDAA0
	0x0354C35C ADRP X9, 0xBA7000
	0x0354C360 LDR W8, [X19 + 0x20]
	0x0354C364 LDR X9, [X9 + 0x758]
	0x0354C368 ADD X1, X31, 0x8
	0x0354C36C STR W8, [X31 + 0x8]
	0x0354C370 LDR X0, [X9]
	0x0354C374 BL 0x1C16E04
	0x0354C378 MOV X2, X0
	0x0354C37C MOVZ W1, 0xF3
	0x0354C380 MOV X0, X21
	0x0354C384 MOV X3, X31
	0x0354C388 BL 0x34EDAA0
	0x0354C38C CBZ X20, 0x354C3B8
	0x0354C390 MOV X0, X20
	0x0354C394 MOV X1, X21
	0x0354C398 MOV X2, X31
	0x0354C39C MOV X3, X31
	0x0354C3A0 MOV X4, X31
	0x0354C3A4 BL 0x353CB08
	0x0354C3A8 LDP X20, X19, [X31 + 0x20]
	0x0354C3AC LDP X22, X21, [X31 + 0x10]
	0x0354C3B0 LDR X30, [X31], #0x30
	0x0354C3B4 RET
	0x0354C3B8 BL 0x1C16F20
	0x0354C3BC STR X30, [X31 - 0x20]!
	0x0354C3C0 STP X20, X19, [X31 + 0x10]
	0x0354C3C4 ADRP X20, 0xE93000
	0x0354C3C8 LDRB W8, [X20 + 0xC8B]
	0x0354C3CC MOV X19, X0
	0x0354C3D0 TBNZ X8, 0x0, 0x354C3E8
	0x0354C3D4 ADRP X0, 0xBE9000
	0x0354C3D8 LDR X0, [X0 + 0x8]
	0x0354C3DC BL 0x1C16CF4
	0x0354C3E0 MOVZ W8, 0x1
	0x0354C3E4 STRB W8, [X20 + 0xC8B]
	0x0354C3E8 LDR X0, [X19 + 0x70]
	0x0354C3EC CBZ X0, 0x354C404
	0x0354C3F0 ADRP X8, 0xBE9000
	0x0354C3F4 LDR X8, [X8 + 0x8]
	0x0354C3F8 LDR X1, [X8]
	0x0354C3FC BL 0x2A1345C
	0x0354C400 AND W0, W0, 0xFF
	0x0354C404 LDP X20, X19, [X31 + 0x10]
	0x0354C408 LDR X30, [X31], #0x20
	0x0354C40C RET
	0x0354C410 LDR X0, [X0 + 0x70]
	0x0354C414 RET
	0x0354C418 STR X1, [X0 + 0x70]
	0x0354C41C RET
	0x0354C420 LDR X0, [X0 + 0x30]
	0x0354C424 RET
	0x0354C428 LDR W0, [X0 + 0x28]
	0x0354C42C RET
	0x0354C430 SUB X31, X31, 0x30
	0x0354C434 STP X30, X21, [X31 + 0x10]
	0x0354C438 STP X20, X19, [X31 + 0x20]
	0x0354C43C ADRP X21, 0xE93000
	0x0354C440 LDRB W8, [X21 + 0xC8C]
	0x0354C444 MOV W19, W1
	0x0354C448 MOV X20, X0
	0x0354C44C TBNZ X8, 0x0, 0x354C464
	0x0354C450 ADRP X0, 0xBA7000
	0x0354C454 LDR X0, [X0 + 0x758]
	0x0354C458 BL 0x1C16CF4
	0x0354C45C MOVZ W8, 0x1
	0x0354C460 STRB W8, [X21 + 0xC8C]
	0x0354C464 LDR W8, [X20 + 0x28]
	0x0354C468 CMP W8, W19
	0x0354C46C B.EQ 0x354C4AC
	0x0354C470 LDRB W8, [X20 + 0x68]
	0x0354C474 CBNZ W8, 0x354C4AC
	0x0354C478 ADRP X8, 0xBA7000
	0x0354C47C LDR X21, [X20 + 0x60]
	0x0354C480 LDR X8, [X8 + 0x758]
	0x0354C484 ADD X1, X31, 0xC
	0x0354C488 STR W19, [X31 + 0xC]
	0x0354C48C LDR X0, [X8]
	0x0354C490 BL 0x1C16E04
	0x0354C494 CBZ X21, 0x354C4C0
	0x0354C498 MOV X2, X0
	0x0354C49C MOVZ W1, 0xF6
	0x0354C4A0 MOV X0, X21
	0x0354C4A4 MOV X3, X31
	0x0354C4A8 BL 0x353CC70
	0x0354C4AC STR W19, [X20 + 0x28]
	0x0354C4B0 LDP X20, X19, [X31 + 0x20]
	0x0354C4B4 LDP X30, X21, [X31 + 0x10]
	0x0354C4B8 ADD X31, X31, 0x30
	0x0354C4BC RET
	0x0354C4C0 BL 0x1C16F20
	0x0354C4C4 LDR W0, [X0 + 0x24]
	0x0354C4C8 RET
	0x0354C4CC SUB X31, X31, 0x30
	0x0354C4D0 STP X30, X21, [X31 + 0x10]
	0x0354C4D4 STP X20, X19, [X31 + 0x20]
	0x0354C4D8 ADRP X21, 0xE93000
	0x0354C4DC LDRB W8, [X21 + 0xC8D]
	0x0354C4E0 MOV W19, W1
	0x0354C4E4 MOV X20, X0
	0x0354C4E8 TBNZ X8, 0x0, 0x354C500
	0x0354C4EC ADRP X0, 0xBA7000
	0x0354C4F0 LDR X0, [X0 + 0x758]
	0x0354C4F4 BL 0x1C16CF4
	0x0354C4F8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xE94000
	010 Move X24, 0xBE9000
	011 Move W8, [X20+3198]
	012 Move X24, [X24+3640]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xBA9000
	019 Move X0, [X0+3600]
	020 Call 0x1C17CF4
	021 Move X0, 0xBA9000
	022 Move X0, [X0+3624]
	023 Call 0x1C17CF4
	024 Move X0, 0xBE9000
	025 Move X0, [X0+3640]
	026 Call 0x1C17CF4
	027 Move X0, 0xBB0000
	028 Move X0, [X0+1800]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3198], W8
	032 Move X0, [X24]
	033 Move X20, [X19+48]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Compare X20, 0
	039 JumpIfEqual {255}
	040 Move X8, [X24]
	041 Move X9, 0xBB0000
	042 Move X25, 0xBA9000
	043 Move X8, [X8+184]
	044 Move W8, [X8+8]
	045 Move X9, [X9+1800]
	046 Move [X20+40], W8
	047 Move X0, [X9]
	048 Move X25, [X25+3600]
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X20, X0
	052 Call Stopwatch..ctor, X0
	053 Move W21, W31
	054 Move W22, W31
	055 Move W23, W31
	056 Move [X19+16], W21
	057 Move X0, [X24]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X24]
	063 Move X8, [X0+184]
	064 Move W8, [X8]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W8, [X19+21]
	067 Compare W8, 0
	068 JumpIfNotEqual {208}
	069 Compare X20, 0
	070 JumpIfEqual {255}
	071 Move X0, X20
	072 Move X1, X31
	073 Call Stopwatch.Reset, X0
	074 Move X0, X20
	075 Move X1, X31
	076 Call Stopwatch.Start, X0
	077 Move X0, [X19+32]
	078 Compare X0, 0
	079 JumpIfEqual {191}
	080 Move X8, [X0]
	081 Move X1, [X19+56]
	082 Move X9, [X8+392]
	083 Move X2, [X8+400]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X0, [X19+32]
	086 Compare X0, 0
	087 JumpIfEqual {255}
	088 Move X8, [X0]
	089 Move X9, [X8+408]
	090 Move X1, [X8+416]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {113}
	096 Move X0, X20
	097 Move X1, X31
	098 Call Stopwatch.get_ElapsedMilliseconds, X0
	099 Move X8, [X24]
	100 Move X21, X0
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {107}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X8, [X24]
	107 Move X8, [X8+184]
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W0, 1
	111 Move X1, X31
	112 Call Thread.Sleep, X0
	113 Move X0, X20
	114 Move X1, X31
	115 Call Stopwatch.Stop, X0
	116 Move X8, [X19+32]
	117 Compare X8, 0
	118 JumpIfEqual {255}
	119 Move W8, [X8+24]
	120 Compare W8, 0
	121 JumpIfEqual {126}
	122 Move X0, X20
	123 Move X1, X31
	124 Call Stopwatch.get_ElapsedMilliseconds, X0
	125 Move X21, X0
	126 Move X0, [X24]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X24]
	132 Move X8, [X0+184]
	133 Move W21, [X8+4]
	134 Move X0, [X19+40]
	135 Compare X0, 0
	136 JumpIfEqual {255}
	137 Move W10, [X0+28]
	138 Move X8, [X0+16]
	139 Move X9, [X25]
	140 Add W10, W10, 1
	141 Move [X0+28], W10
	142 Compare X8, 0
	143 JumpIfEqual {255}
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Move W11, [X8+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add W9, W10, 1
	148 Add X8, X8, X10
	149 Move [X0+24], W9
	150 Move [X8+32], W21
	151 Move X8, [X9+32]
	152 Move W1, W21
	153 Move X8, [X8+192]
	154 Move X2, [X8+112]
	155 Call List`1<Int32>.AddWithResize, X0, X1
	156 Move X8, [X19+48]
	157 Compare X8, 0
	158 JumpIfEqual {255}
	159 Add W23, W21, W23
	160 Add W22, W22, 1
	161 NotImplemented "Instruction SDIV not yet implemented."
	162 Move [X8+40], W9
	163 Move X0, [X19+32]
	164 Compare X0, 0
	165 JumpIfEqual {255}
	166 Move TEMP, 3
	167 Not TEMP
	168 Move W21, TEMP
	169 Move X8, [X0]
	170 Move X9, [X8+408]
	171 Move X1, [X8+416]
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Compare W21, 0
	174 JumpIfEqual {186}
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {186}
	179 Move W0, 100
	180 Move X1, X31
	181 Call Thread.Sleep, X0
	182 Move X0, [X19+32]
	183 Add W21, W21, 1
	184 Compare X0, 0
	185 JumpIfNotEqual {169}
	186 Move W0, 10
	187 Move X1, X31
	188 Call Thread.Sleep, X0
	189 Move W8, [X19+16]
	190 Add W21, W8, 1
	191 Call 0x1C17F20
	192 Move X20, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X0, X20
	195 Call 0x3EB2AD0
	196 Move X20, X0
	197 Move X0, 0xBA8000
	198 Move X0, [X0+2000]
	199 Call 0x1C17D08
	200 Move X8, [X20]
	201 Move X1, [X8]
	202 Call 0x1C18270
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {256}
	207 Call 0x3EB2AE0
	208 Move X0, [X19+32]
	209 Move W8, 1
	210 Move [X19+20], W8
	211 Compare X0, 0
	212 JumpIfEqual {255}
	213 Move X8, [X0]
	214 Move X9, [X8+424]
	215 Move X1, [X8+432]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X0, [X19+40]
	218 Compare X0, 0
	219 JumpIfEqual {255}
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move W8, [X0+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X1, X31
	224 Call Enumerable.Min, X0
	225 Move X8, [X19+40]
	226 Move W20, W0
	227 Move X1, X31
	228 Move X0, X8
	229 Call Enumerable.Max, X0
	230 Move X8, [X19+48]
	231 Compare X8, 0
	232 JumpIfEqual {255}
	233 Add W9, W20, W23
	234 Subtract W9, W9, W0
	235 NotImplemented "Instruction SDIV not yet implemented."
	236 Move [X8+40], W9
	237 Move X8, [X19+24]
	238 Compare X8, 0
	239 JumpIfEqual {255}
	240 Move X1, [X19+48]
	241 Move X9, [X8+24]
	242 Move X0, [X8+64]
	243 Move X2, [X8+40]
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move X20, [X31+48]
	246 Move X19, [X31+56]
	247 Move X22, [X31+32]
	248 Move X21, [X31+40]
	249 Move X24, [X31+16]
	250 Move X23, [X31+24]
	251 Move W0, W31
	252 Move X30, [X31+64]
	253 Move X25, [X31+72]
	254 Return X0
	255 Call 0x1C17F20
	256 Move W0, 8
	257 Call 0x3EB2AF0
	258 Move X8, [X20]
	259 Move [X0], X8
	260 Move X1, 0x969000
	261 Add X1, X1, 3672
	262 Move X2, X31
	263 Call 0x3EB2B00
	264 Move X20, X0
	265 Call 0x3EB2AE0
	266 Move X0, X20
	267 Call 0x1D2D690
	268 Call 0x1991590

Method: System.Collections.IEnumerator RegionPingCoroutine()

Disassembly:
	0x0354C4FC STRB W8, [X21 + 0xC8D]
	0x0354C500 LDR W8, [X20 + 0x24]
	0x0354C504 CMP W8, W19
	0x0354C508 B.EQ 0x354C548
	0x0354C50C LDRB W8, [X20 + 0x68]
	0x0354C510 CBNZ W8, 0x354C548
	0x0354C514 ADRP X8, 0xBA7000
	0x0354C518 LDR X21, [X20 + 0x60]
	0x0354C51C LDR X8, [X8 + 0x758]
	0x0354C520 ADD X1, X31, 0xC
	0x0354C524 STR W19, [X31 + 0xC]
	0x0354C528 LDR X0, [X8]
	0x0354C52C BL 0x1C16E04
	0x0354C530 CBZ X21, 0x354C55C
	0x0354C534 MOV X2, X0
	0x0354C538 MOVZ W1, 0xF5
	0x0354C53C MOV X0, X21
	0x0354C540 MOV X3, X31
	0x0354C544 BL 0x353CC70
	0x0354C548 STR W19, [X20 + 0x24]
	0x0354C54C LDP X20, X19, [X31 + 0x20]
	0x0354C550 LDP X30, X21, [X31 + 0x10]
	0x0354C554 ADD X31, X31, 0x30
	0x0354C558 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE94000
	006 Move X21, 0xBEA000
	007 Move W8, [X20+3199]
	008 Move X21, [X21+136]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBEA000
	015 Move X0, [X0+136]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3199], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.String GetResults()

Disassembly:
	0x0354C584 RET
	0x0354C588 AND W8, W1, 0x1
	0x0354C58C STRB W8, [X0 + 0x78]
	0x0354C590 RET
	0x0354C594 LDRB W0, [X0 + 0x79]
	0x0354C598 RET
	0x0354C59C AND W8, W1, 0x1
	0x0354C5A0 STRB W8, [X0 + 0x79]
	0x0354C5A4 RET
	0x0354C5A8 LDRB W0, [X0 + 0x7A]
	0x0354C5AC RET
	0x0354C5B0 AND W8, W1, 0x1
	0x0354C5B4 STRB W8, [X0 + 0x7A]
	0x0354C5B8 RET
	0x0354C5BC LDRB W0, [X0 + 0x7B]
	0x0354C5C0 RET
	0x0354C5C4 AND W8, W1, 0x1
	0x0354C5C8 STRB W8, [X0 + 0x7B]
	0x0354C5CC RET
	0x0354C5D0 LDRB W0, [X0 + 0x7C]
	0x0354C5D4 RET
	0x0354C5D8 AND W8, W1, 0x1
	0x0354C5DC STRB W8, [X0 + 0x7C]
	0x0354C5E0 RET
	0x0354C5E4 STP X30, X25, [X31 - 0x40]!
	0x0354C5E8 STP X24, X23, [X31 + 0x10]
	0x0354C5EC STP X22, X21, [X31 + 0x20]
	0x0354C5F0 STP X20, X19, [X31 + 0x30]
	0x0354C5F4 ADRP X24, 0xE93000
	0x0354C5F8 ADRP X25, 0xBE9000
	0x0354C5FC ADRP X23, 0xBE9000
	0x0354C600 LDRB W8, [X24 + 0xC8E]
	0x0354C604 LDR X25, [X25 + 0xC0]
	0x0354C608 LDR X23, [X23 + 0xC8]
	0x0354C60C MOV W19, W3
	0x0354C610 MOV X21, X2
	0x0354C614 MOV X22, X1
	0x0354C618 MOV X20, X0
	0x0354C61C TBNZ X8, 0x0, 0x354C640
	0x0354C620 ADRP X0, 0xBE9000
	0x0354C624 LDR X0, [X0 + 0xC8]
	0x0354C628 BL 0x1C16CF4
	0x0354C62C ADRP X0, 0xBE9000
	0x0354C630 LDR X0, [X0 + 0xC0]
	0x0354C634 BL 0x1C16CF4
	0x0354C638 MOVZ W8, 0x1
	0x0354C63C STRB W8, [X24 + 0xC8E]
	0x0354C640 LDR X0, [X25]
	0x0354C644 BL 0x1C16F10
	0x0354C648 LDR X1, [X23]
	0x0354C64C MOV X23, X0
	0x0354C650 BL 0x2A12DD4
	0x0354C654 STR X23, [X20 + 0x70]
	0x0354C658 CBZ X21, 0x354C690
	0x0354C65C LDR X2, [X21 + 0x28]
	0x0354C660 MOV X0, X20
	0x0354C664 MOV X1, X22
	0x0354C668 BL 0x354C6BC
	0x0354C66C LDRB W8, [X21 + 0x10]
	0x0354C670 STRB W8, [X20 + 0x39]
	0x0354C674 LDRB W8, [X21 + 0x11]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE94000
	009 Move W8, [X20+3200]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xBEA000
	016 Move X0, [X0+144]
	017 Call 0x1C17CF4
	018 Move X0, 0xBE9000
	019 Move X0, [X0+2984]
	020 Call 0x1C17CF4
	021 Move X0, 0xBA8000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB1000
	025 Move X0, [X0+2184]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3200], W8
	029 Move X8, [X19+48]
	030 Compare X8, 0
	031 JumpIfEqual {72}
	032 Move X9, 0xBA8000
	033 Move X9, [X9+1880]
	034 Move X21, 0xBE9000
	035 Move X21, [X21+2984]
	036 Move X20, [X8+16]
	037 Move W8, [X8+40]
	038 Move X0, [X9]
	039 Move X23, 0xBEA000
	040 Move X22, 0xBB1000
	041 Move X23, [X23+144]
	042 Move X22, [X22+2184]
	043 Add X1, X31, 12
	044 Move [X31+12], W8
	045 Call 0x1C17E04
	046 Move X8, [X21]
	047 Move X21, [X19+40]
	048 Move X19, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X1, [X23]
	055 Move X0, X21
	056 Call 0x21E4358, X0
	057 Move X8, [X22]
	058 Move X3, X0
	059 Move X1, X20
	060 Move X2, X19
	061 Move X0, X8
	062 Move X4, X31
	063 Call String.Format, X0, X1, X2, X3
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X30, [X31+16]
	069 Move X23, [X31+24]
	070 Add X31, X31, 64
	071 Return X0
	072 Call 0x1C17F20

Method: System.String ResolveHost(System.String hostName)

Disassembly:
	0x0354BECC STR X1, [X0 + 0x28]
	0x0354BED0 RET
	0x0354BED4 STR X30, [X31 - 0x30]!
	0x0354BED8 STP X22, X21, [X31 + 0x10]
	0x0354BEDC STP X20, X19, [X31 + 0x20]
	0x0354BEE0 ADRP X21, 0xE94000
	0x0354BEE4 ADRP X22, 0xBEA000
	0x0354BEE8 LDRB W8, [X21 + 0xC86]
	0x0354BEEC LDR X22, [X22 + 0xA8]
	0x0354BEF0 MOV X20, X1
	0x0354BEF4 MOV X19, X0
	0x0354BEF8 TBNZ X8, 0x0, 0x354BF10
	0x0354BEFC ADRP X0, 0xBEA000
	0x0354BF00 LDR X0, [X0 + 0xA8]
	0x0354BF04 BL 0x1C16CF4
	0x0354BF08 MOVZ W8, 0x1
	0x0354BF0C STRB W8, [X21 + 0xC86]
	0x0354BF10 LDR X0, [X22]
	0x0354BF14 BL 0x1C16F10
	0x0354BF18 MOV X1, X31
	0x0354BF1C MOV X21, X0
	0x0354BF20 BL 0x33BDD8C
	0x0354BF24 CBZ X21, 0x354BF50
	0x0354BF28 MOV X0, X21
	0x0354BF2C STP X20, X19, [X21 + 0x10]
	0x0354BF30 BL 0x354BF5C
	0x0354BF34 MOV X1, X0
	0x0354BF38 MOV X0, X19
	0x0354BF3C LDP X20, X19, [X31 + 0x20]
	0x0354BF40 LDP X22, X21, [X31 + 0x10]
	0x0354BF44 MOV X2, X31
	0x0354BF48 LDR X30, [X31], #0x30
	0x0354BF4C B 0x3C366FC
	0x0354BF50 BL 0x1C16F20
	0x0354BF54 MOV X1, X31
	0x0354BF58 B 0x33BDD8C
	0x0354BF5C STP X30, X21, [X31 - 0x20]!
	0x0354BF60 STP X20, X19, [X31 + 0x10]
	0x0354BF64 ADRP X20, 0xE94000
	0x0354BF68 ADRP X21, 0xBEA000
	0x0354BF6C LDRB W8, [X20 + 0xC87]
	0x0354BF70 LDR X21, [X21 + 0xB0]
	0x0354BF74 MOV X19, X0
	0x0354BF78 TBNZ X8, 0x0, 0x354BF90
	0x0354BF7C ADRP X0, 0xBEA000
	0x0354BF80 LDR X0, [X0 + 0xB0]
	0x0354BF84 BL 0x1C16CF4
	0x0354BF88 MOVZ W8, 0x1
	0x0354BF8C STRB W8, [X20 + 0xC87]
	0x0354BF90 LDR X0, [X21]
	0x0354BF94 BL 0x1C16F10
	0x0354BF98 MOV X1, X31
	0x0354BF9C MOV X20, X0
	0x0354BFA0 BL 0x33BDD8C
	0x0354BFA4 STR W31, [X20 + 0x10]
	0x0354BFA8 STR X19, [X20 + 0x20]
	0x0354BFAC MOV X0, X20
	0x0354BFB0 LDP X20, X19, [X31 + 0x10]
	0x0354BFB4 LDP X30, X21, [X31], #0x20
	0x0354BFB8 RET
	0x0354BFBC MOV X1, X31
	0x0354BFC0 B 0x3C36C30
	0x0354BFC4 STR X30, [X31 - 0x20]!
	0x0354BFC8 STP X20, X19, [X31 + 0x10]
	0x0354BFCC MOV W19, W1
	0x0354BFD0 MOV X1, X31
	0x0354BFD4 MOV X20, X0
	0x0354BFD8 BL 0x33BDD8C
	0x0354BFDC STR W19, [X20 + 0x10]
	0x0354BFE0 LDP X20, X19, [X31 + 0x10]
	0x0354BFE4 LDR X30, [X31], #0x20
	0x0354BFE8 RET
	0x0354BFEC RET
	0x0354BFF0 STR X30, [X31 - 0x10]!
	0x0354BFF4 LDR W9, [X0 + 0x10]
	0x0354BFF8 LDR X8, [X0 + 0x20]
	0x0354BFFC CMP W9, 0x1
	0x0354C000 B.EQ 0x354C028
	0x0354C004 CBNZ W9, 0x354C040
	0x0354C008 MOVN W9, 0x0
	0x0354C00C STR W9, [X0 + 0x10]
	0x0354C010 CBZ X8, 0x354C050
	0x0354C014 LDR X9, [X8 + 0x10]
	0x0354C018 MOVZ W8, 0x1
	0x0354C01C STR W8, [X0 + 0x10]
	0x0354C020 STR X9, [X0 + 0x18]
	0x0354C024 B 0x354C044
	0x0354C028 MOVN W9, 0x0
	0x0354C02C STR W9, [X0 + 0x10]
	0x0354C030 CBZ X8, 0x354C050
	0x0354C034 LDR X0, [X8 + 0x18]
	0x0354C038 CBZ X0, 0x354C050
	0x0354C03C BL 0x354BE0C
	0x0354C040 MOV W8, W31
	0x0354C044 MOV W0, W8
	0x0354C048 LDR X30, [X31], #0x10
	0x0354C04C RET
	0x0354C050 BL 0x1C16F20
	0x0354C054 LDR X0, [X0 + 0x18]
	0x0354C058 RET
	0x0354C05C STP X30, X19, [X31 - 0x10]!
	0x0354C060 ADRP X0, 0xBA7000
	0x0354C064 LDR X0, [X0 + 0xB40]
	0x0354C068 BL 0x1C16D08
	0x0354C06C BL 0x1C16F10
	0x0354C070 MOV X1, X31
	0x0354C074 MOV X19, X0
	0x0354C078 BL 0x3380310
	0x0354C07C ADRP X0, 0xBE9000
	0x0354C080 LDR X0, [X0 + 0xB8]
	0x0354C084 BL 0x1C16D08
	0x0354C088 MOV X1, X0
	0x0354C08C MOV X0, X19
	0x0354C090 BL 0x1C16DEC
	0x0354C094 LDR X0, [X0 + 0x18]
	0x0354C098 RET
	0x0354C09C LDR X0, [X0 + 0x60]
	0x0354C0A0 RET
	0x0354C0A4 STR X1, [X0 + 0x60]
	0x0354C0A8 RET
	0x0354C0AC LDR X0, [X0 + 0x40]
	0x0354C0B0 RET
	0x0354C0B4 STR X1, [X0 + 0x40]
	0x0354C0B8 RET
	0x0354C0BC LDRB W0, [X0 + 0x68]
	0x0354C0C0 RET
	0x0354C0C4 AND W8, W1, 0x1
	0x0354C0C8 STRB W8, [X0 + 0x68]
	0x0354C0CC RET
	0x0354C0D0 LDRB W0, [X0 + 0x38]
	0x0354C0D4 RET
	0x0354C0D8 STR X30, [X31 - 0x30]!
	0x0354C0DC STP X22, X21, [X31 + 0x10]
	0x0354C0E0 STP X20, X19, [X31 + 0x20]
	0x0354C0E4 ADRP X20, 0xE93000
	0x0354C0E8 LDRB W8, [X20 + 0xC88]
	0x0354C0EC MOV X19, X0
	0x0354C0F0 AND W22, W1, 0x1
	0x0354C0F4 TBNZ X8, 0x0, 0x354C118
	0x0354C0F8 ADRP X0, 0xBA7000
	0x0354C0FC LDR X0, [X0 + 0xB58]
	0x0354C100 BL 0x1C16CF4
	0x0354C104 ADRP X0, 0xBAF000
	0x0354C108 LDR X0, [X0 + 0xDA0]
	0x0354C10C BL 0x1C16CF4
	0x0354C110 MOVZ W8, 0x1
	0x0354C114 STRB W8, [X20 + 0xC88]
	0x0354C118 LDRB W8, [X19 + 0x38]
	0x0354C11C CMP W8, W22
	0x0354C120 B.EQ 0x354C198
	0x0354C124 LDRB W8, [X19 + 0x68]
	0x0354C128 CBNZ W8, 0x354C198
	0x0354C12C ADRP X8, 0xBAF000
	0x0354C130 LDR X20, [X19 + 0x60]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xE95000
	009 Move W8, [X19+3201]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xBAB000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move X0, 0xBB1000
	019 Move X0, [X0+4056]
	020 Call 0x1C17CF4
	021 Move X0, 0xBB1000
	022 Move X0, [X0+4064]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB2000
	025 Move X0, [X0+2440]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3201], W8
	029 Compare X20, 0
	030 JumpIfEqual {139}
	031 Move X8, 0xBB1000
	032 Move X8, [X8+4056]
	033 Move X0, X20
	034 Move X2, X31
	035 Move X1, [X8]
	036 Call String.StartsWith, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {48}
	041 Move W1, 6
	042 Move X0, X20
	043 Move X2, X31
	044 Call String.Substring, X0, X1
	045 Move X20, X0
	046 Compare X0, 0
	047 JumpIfEqual {139}
	048 Move X8, 0xBB1000
	049 Move X8, [X8+4064]
	050 Move X19, 0xBAB000
	051 Move X0, X20
	052 Move X2, X31
	053 Move X1, [X8]
	054 Move X19, [X19+632]
	055 Call String.StartsWith, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {65}
	060 Move W1, 5
	061 Move X0, X20
	062 Move X2, X31
	063 Call String.Substring, X0, X1
	064 Move X20, X0
	065 Move X8, [X19]
	066 Move X8, [X8+184]
	067 Move X19, [X8]
	068 Move X0, X20
	069 Move X1, X31
	070 Call Dns.GetHostAddresses, X0
	071 Move X20, X0
	072 Compare X0, 0
	073 JumpIfEqual {140}
	074 Move X8, [X20+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X20+32]
	077 Compare X0, 0
	078 JumpIfEqual {141}
	079 Move X8, [X0]
	080 Move X9, [X8+360]
	081 Move X1, [X8+368]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X19, X0
	084 Move X24, 0xBB2000
	085 Move X24, [X24+2440]
	086 Move X22, X31
	087 And X8, X8, 0
	088 Add X23, X20, 32
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X21, [X23]
	091 Compare X21, 0
	092 JumpIfEqual {120}
	093 Move X8, [X21]
	094 Move X9, [X8+360]
	095 Move X1, [X8+368]
	096 Move X0, X21
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X0, 0
	099 JumpIfEqual {138}
	100 Move X1, [X24]
	101 Move X2, X31
	102 Call String.Contains, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {132}
	107 Move X0, X19
	108 Move X1, X31
	109 Call String.IsNullOrEmpty, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {120}
	114 Move X8, [X20]
	115 Move X9, [X8+360]
	116 Move X1, [X8+368]
	117 Move X0, X20
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X19, X0
	120 Move W8, [X20+24]
	121 Add X22, X22, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X19
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X24, [X31+16]
	129 Move X23, [X31+24]
	130 Move X30, [X31+64]
	131 Return X0
	132 Move X8, [X21]
	133 Move X9, [X8+360]
	134 Move X1, [X8+368]
	135 Move X0, X21
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Call 0x1C17F28
	138 Call 0x1C17F20
	139 Call 0x1C17F20
	140 Call 0x1C17F20
	141 Call 0x1C17F20
	142 Move X20, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X20
	145 Call 0x3EB2AD0
	146 Move X20, X0
	147 Move X0, 0xBA8000
	148 Move X0, [X0+2000]
	149 Call 0x1C17D08
	150 Move X8, [X20]
	151 Move X1, [X8]
	152 Call 0x1C18270
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {158}
	157 Call 0x3EB2AE0
	158 Move W0, 8
	159 Call 0x3EB2AF0
	160 Move X8, [X20]
	161 Move [X0], X8
	162 Move X1, 0x969000
	163 Add X1, X1, 3672
	164 Move X2, X31
	165 Call 0x3EB2B00
	166 Move X20, X0
	167 Call 0x3EB2AE0
	168 Move X0, X20
	169 Call 0x1D2D690
	170 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x0354C678 STRB W8, [X20 + 0x38]
	0x0354C67C LDR W8, [X21 + 0x14]
	0x0354C680 STR W8, [X20 + 0x20]
	0x0354C684 LDR X8, [X21 + 0x30]
	0x0354C688 STR X8, [X20 + 0x50]
	0x0354C68C B 0x354C6A0
	0x0354C690 MOV X0, X20
	0x0354C694 MOV X1, X22
	0x0354C698 MOV X2, X31
	0x0354C69C BL 0x354C6BC
	0x0354C6A0 AND W8, W19, 0x1
	0x0354C6A4 STRB W8, [X20 + 0x68]
	0x0354C6A8 LDP X20, X19, [X31 + 0x30]
	0x0354C6AC LDP X22, X21, [X31 + 0x20]
	0x0354C6B0 LDP X24, X23, [X31 + 0x10]
	0x0354C6B4 LDP X30, X25, [X31], #0x40
	0x0354C6B8 RET
	0x0354C6BC STP X30, X23, [X31 - 0x30]!
	0x0354C6C0 STP X22, X21, [X31 + 0x10]
	0x0354C6C4 STP X20, X19, [X31 + 0x20]
	0x0354C6C8 ADRP X22, 0xE93000
	0x0354C6CC ADRP X23, 0xBAF000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE94000
	005 Move X20, 0xBE9000
	006 Move W8, [X19+3202]
	007 Move X20, [X20+3640]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBE9000
	013 Move X0, [X0+3640]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3202], W8
	017 Move X8, [X20]
	018 Move X9, -44425216
	019 Move V0, [X9+3656]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move W9, 4000
	024 Move [X8], D0
	025 Move [X8+8], W9
	026 Move X30, [X31+32]
	027 Return 

Method: System.Void <Start>b__19_0(System.Object o)

Disassembly:
	0x0354C6D0 LDRB W8, [X22 + 0xC9B]

ISIL:
	001 Call RegionPinger.RegionPingThreaded, X0
	002 Return 

