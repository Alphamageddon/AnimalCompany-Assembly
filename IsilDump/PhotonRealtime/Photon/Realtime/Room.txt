Type: Photon.Realtime.Room

Method: Photon.Realtime.LoadBalancingClient get_LoadBalancingClient()

Disassembly:
	0x0354D09C CBZ X19, 0x354D0EC
	0x0354D0A0 LDR X0, [X20 + 0x70]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_LoadBalancingClient(Photon.Realtime.LoadBalancingClient value)

Disassembly:
	0x0354D0A4 CBZ X0, 0x354D0EC
	0x0354D0A8 ADRP X8, 0xBE8000

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String get_Name()

Disassembly:
	0x0354D0AC LDR X8, [X8 + 0xD8]
	0x0354D0B0 LDR W1, [X19 + 0x18]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x0354D0B4 LDR X2, [X8]
	0x0354D0B8 BL 0x2A13880

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Boolean get_IsOffline()

Disassembly:
	0x0354D0BC MOV W21, W0
	0x0354D0C0 TBNZ X0, 0x0, 0x354D0D8

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_IsOffline(System.Boolean value)

Disassembly:
	0x0354D0C4 LDR X8, [X20]
	0x0354D0C8 MOV X0, X20
	0x0354D0CC MOV X1, X19

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: System.Boolean get_IsOpen()

Disassembly:
	0x0354D0D0 LDP X9, X2, [X8 + 0x1C8]
	0x0354D0D4 BLR X9

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_IsOpen(System.Boolean value)

Disassembly:
	0x0354D0D8 LDP X20, X19, [X31 + 0x10]
	0x0354D0DC ORN W8, W31, W21, 0x0
	0x0354D0E0 AND W0, W8, 0x1
	0x0354D0E4 LDP X30, X21, [X31], #0x20
	0x0354D0E8 RET
	0x0354D0EC BL 0x1C16F20
	0x0354D0F0 STP X30, X21, [X31 - 0x20]!
	0x0354D0F4 STP X20, X19, [X31 + 0x10]
	0x0354D0F8 ADRP X21, 0xE92000
	0x0354D0FC LDRB W8, [X21 + 0xC94]
	0x0354D100 MOV X19, X1
	0x0354D104 MOV X20, X0
	0x0354D108 TBNZ X8, 0x0, 0x354D120
	0x0354D10C ADRP X0, 0xBE8000
	0x0354D110 LDR X0, [X0 + 0xE0]
	0x0354D114 BL 0x1C16CF4
	0x0354D118 MOVZ W8, 0x1
	0x0354D11C STRB W8, [X21 + 0xC94]
	0x0354D120 CBZ X19, 0x354D158
	0x0354D124 LDR X0, [X20 + 0x70]
	0x0354D128 CBZ X0, 0x354D158
	0x0354D12C ADRP X8, 0xBE8000
	0x0354D130 LDR X8, [X8 + 0xE0]
	0x0354D134 LDR W1, [X19 + 0x18]
	0x0354D138 MOV X2, X19
	0x0354D13C LDR X3, [X8]
	0x0354D140 BL 0x2A13678
	0x0354D144 STR X20, [X19 + 0x10]
	0x0354D148 MOV X0, X19
	0x0354D14C LDP X20, X19, [X31 + 0x10]
	0x0354D150 LDP X30, X21, [X31], #0x20
	0x0354D154 RET
	0x0354D158 BL 0x1C16F20
	0x0354D15C STR X30, [X31 - 0x30]!
	0x0354D160 STP X22, X21, [X31 + 0x10]
	0x0354D164 STP X20, X19, [X31 + 0x20]
	0x0354D168 ADRP X22, 0xE92000
	0x0354D16C LDRB W8, [X22 + 0xC95]
	0x0354D170 MOV W21, W2
	0x0354D174 MOV W19, W1
	0x0354D178 MOV X20, X0
	0x0354D17C TBNZ X8, 0x0, 0x354D194
	0x0354D180 ADRP X0, 0xBE8000
	0x0354D184 LDR X0, [X0 + 0xE8]
	0x0354D188 BL 0x1C16CF4
	0x0354D18C MOVZ W8, 0x1
	0x0354D190 STRB W8, [X22 + 0xC95]
	0x0354D194 CBNZ W19, 0x354D1A0
	0x0354D198 TBZ X21, 0x0, 0x354D1A0
	0x0354D19C LDR W19, [X20 + 0x48]
	0x0354D1A0 STR X31, [X31 + 0x8]
	0x0354D1A4 LDR X0, [X20 + 0x70]
	0x0354D1A8 CBZ X0, 0x354D1D8
	0x0354D1AC ADRP X8, 0xBE8000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE93000
	007 Move W8, [X20+3208]
	008 Move X19, X0
	009 And W22, W1, 1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xBA7000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0xBAF000
	018 Move X0, [X0+3488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3208], W8
	022 Move W8, [X19+56]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19+104]
	025 Compare W8, 0
	026 JumpIfNotEqual {56}
	027 Move X8, 0xBAF000
	028 Move X20, [X19+96]
	029 Move X8, [X8+3488]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X21, X0
	034 Call Hashtable..ctor, X0
	035 Move X8, 0xBA7000
	036 Move X8, [X8+2904]
	037 Add X1, X31, 12
	038 Move [X31+12], W22
	039 Move X0, [X8]
	040 Call 0x1C17E04
	041 Compare X21, 0
	042 JumpIfEqual {63}
	043 Move X2, X0
	044 Move W1, 253
	045 Move X0, X21
	046 Move X3, X31
	047 Call Hashtable.Add, X0, X1, X2
	048 Compare X20, 0
	049 JumpIfEqual {63}
	050 Move X0, X20
	051 Move X1, X21
	052 Move X2, X31
	053 Move X3, X31
	054 Move X4, X31
	055 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	056 Move [X19+56], W22
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 
	063 Call 0x1C17F20

Method: System.Boolean get_IsVisible()

Disassembly:
	0x0354D1B0 LDR X8, [X8 + 0xE8]
	0x0354D1B4 ADD X2, X31, 0x8

ISIL:
	001 Move W0, [X0+57]
	002 Return X0

Method: System.Void set_IsVisible(System.Boolean value)

Disassembly:
	0x0354D1B8 MOV W1, W19
	0x0354D1BC LDR X3, [X8]
	0x0354D1C0 BL 0x2A150AC
	0x0354D1C4 LDR X0, [X31 + 0x8]
	0x0354D1C8 LDP X20, X19, [X31 + 0x20]
	0x0354D1CC LDP X22, X21, [X31 + 0x10]
	0x0354D1D0 LDR X30, [X31], #0x30
	0x0354D1D4 RET
	0x0354D1D8 BL 0x1C16F20
	0x0354D1DC STR X30, [X31 - 0x20]!
	0x0354D1E0 STP X20, X19, [X31 + 0x10]
	0x0354D1E4 ADRP X20, 0xE92000
	0x0354D1E8 LDRB W8, [X20 + 0xC96]
	0x0354D1EC MOV X19, X0
	0x0354D1F0 TBNZ X8, 0x0, 0x354D208
	0x0354D1F4 ADRP X0, 0xBA6000
	0x0354D1F8 LDR X0, [X0 + 0xAC8]
	0x0354D1FC BL 0x1C16CF4
	0x0354D200 MOVZ W8, 0x1
	0x0354D204 STRB W8, [X20 + 0xC96]
	0x0354D208 LDR X8, [X19 + 0x30]
	0x0354D20C CBZ X8, 0x354D244
	0x0354D210 LDR X8, [X8 + 0x18]
	0x0354D214 CBZ X8, 0x354D244
	0x0354D218 ADRP X8, 0xBA6000
	0x0354D21C LDR X8, [X8 + 0xAC8]
	0x0354D220 MOV W1, W31
	0x0354D224 LDR X0, [X8]
	0x0354D228 BL 0x1C16D6C
	0x0354D22C LDR X2, [X19 + 0x30]
	0x0354D230 MOV X1, X0
	0x0354D234 MOV X0, X19
	0x0354D238 LDP X20, X19, [X31 + 0x10]
	0x0354D23C LDR X30, [X31], #0x20
	0x0354D240 B 0x354D254
	0x0354D244 LDP X20, X19, [X31 + 0x10]
	0x0354D248 MOV W0, W31
	0x0354D24C LDR X30, [X31], #0x20
	0x0354D250 RET
	0x0354D254 STP X30, X23, [X31 - 0x30]!
	0x0354D258 STP X22, X21, [X31 + 0x10]
	0x0354D25C STP X20, X19, [X31 + 0x20]
	0x0354D260 ADRP X21, 0xE92000
	0x0354D264 LDRB W8, [X21 + 0xC98]
	0x0354D268 MOV X20, X2
	0x0354D26C MOV X22, X1
	0x0354D270 MOV X19, X0
	0x0354D274 TBNZ X8, 0x0, 0x354D28C
	0x0354D278 ADRP X0, 0xBAE000
	0x0354D27C LDR X0, [X0 + 0xDA0]
	0x0354D280 BL 0x1C16CF4
	0x0354D284 MOVZ W8, 0x1
	0x0354D288 STRB W8, [X21 + 0xC98]
	0x0354D28C LDRB W8, [X19 + 0x68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE93000
	007 Move W8, [X20+3209]
	008 Move X19, X0
	009 And W22, W1, 1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xBA7000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0xBAF000
	018 Move X0, [X0+3488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3209], W8
	022 Move W8, [X19+57]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19+104]
	025 Compare W8, 0
	026 JumpIfNotEqual {56}
	027 Move X8, 0xBAF000
	028 Move X20, [X19+96]
	029 Move X8, [X8+3488]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X21, X0
	034 Call Hashtable..ctor, X0
	035 Move X8, 0xBA7000
	036 Move X8, [X8+2904]
	037 Add X1, X31, 12
	038 Move [X31+12], W22
	039 Move X0, [X8]
	040 Call 0x1C17E04
	041 Compare X21, 0
	042 JumpIfEqual {63}
	043 Move X2, X0
	044 Move W1, 254
	045 Move X0, X21
	046 Move X3, X31
	047 Call Hashtable.Add, X0, X1, X2
	048 Compare X20, 0
	049 JumpIfEqual {63}
	050 Move X0, X20
	051 Move X1, X21
	052 Move X2, X31
	053 Move X3, X31
	054 Move X4, X31
	055 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	056 Move [X19+57], W22
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 
	063 Call 0x1C17F20

Method: System.Int32 get_MaxPlayers()

Disassembly:
	0x0354D290 CBZ W8, 0x354D2A8
	0x0354D294 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_MaxPlayers(System.Int32 value)

Disassembly:
	0x0354D298 LDP X22, X21, [X31 + 0x10]
	0x0354D29C MOV W0, W31
	0x0354D2A0 LDP X30, X23, [X31], #0x30
	0x0354D2A4 RET
	0x0354D2A8 ADRP X23, 0xBAE000
	0x0354D2AC LDR X23, [X23 + 0xDA0]
	0x0354D2B0 LDR X0, [X23]
	0x0354D2B4 BL 0x1C16F10
	0x0354D2B8 MOVZ W1, 0x1
	0x0354D2BC MOV X2, X31
	0x0354D2C0 MOV X21, X0
	0x0354D2C4 BL 0x34ED820
	0x0354D2C8 CBZ X21, 0x354D344
	0x0354D2CC MOVZ W1, 0xF7
	0x0354D2D0 MOV X0, X21
	0x0354D2D4 MOV X2, X22
	0x0354D2D8 MOV X3, X31
	0x0354D2DC BL 0x34EDAA0
	0x0354D2E0 CBZ X20, 0x354D318
	0x0354D2E4 LDR X0, [X23]
	0x0354D2E8 BL 0x1C16F10
	0x0354D2EC MOVZ W1, 0x1
	0x0354D2F0 MOV X2, X31
	0x0354D2F4 MOV X22, X0
	0x0354D2F8 BL 0x34ED820
	0x0354D2FC CBZ X22, 0x354D344
	0x0354D300 MOVZ W1, 0xF7
	0x0354D304 MOV X0, X22
	0x0354D308 MOV X2, X20
	0x0354D30C MOV X3, X31
	0x0354D310 BL 0x34EDAA0
	0x0354D314 B 0x354D31C
	0x0354D318 MOV X22, X31
	0x0354D31C LDR X0, [X19 + 0x60]
	0x0354D320 CBZ X0, 0x354D344
	0x0354D324 MOV X1, X21
	0x0354D328 MOV X2, X22
	0x0354D32C LDP X20, X19, [X31 + 0x20]
	0x0354D330 LDP X22, X21, [X31 + 0x10]
	0x0354D334 MOV X3, X31
	0x0354D338 MOV X4, X31
	0x0354D33C LDP X30, X23, [X31], #0x30
	0x0354D340 B 0x353CB08
	0x0354D344 BL 0x1C16F20
	0x0354D348 STP X30, X21, [X31 - 0x20]!
	0x0354D34C STP X20, X19, [X31 + 0x10]
	0x0354D350 ADRP X21, 0xE92000
	0x0354D354 LDRB W8, [X21 + 0xC97]
	0x0354D358 MOV X19, X1
	0x0354D35C MOV X20, X0
	0x0354D360 TBNZ X8, 0x0, 0x354D378
	0x0354D364 ADRP X0, 0xBAF000
	0x0354D368 LDR X0, [X0 + 0xA10]
	0x0354D36C BL 0x1C16CF4
	0x0354D370 MOVZ W8, 0x1
	0x0354D374 STRB W8, [X21 + 0xC97]
	0x0354D378 CBZ X19, 0x354D39C
	0x0354D37C LDR X8, [X19 + 0x18]
	0x0354D380 CBZ X8, 0x354D39C
	0x0354D384 LDR X2, [X20 + 0x30]
	0x0354D388 MOV X0, X20
	0x0354D38C MOV X1, X19
	0x0354D390 LDP X20, X19, [X31 + 0x10]
	0x0354D394 LDP X30, X21, [X31], #0x20
	0x0354D398 B 0x354D254
	0x0354D39C LDR X0, [X20 + 0x60]
	0x0354D3A0 CBZ X0, 0x354D3D4
	0x0354D3A4 ADRP X9, 0xBAF000
	0x0354D3A8 LDR X8, [X0]
	0x0354D3AC LDR X9, [X9 + 0xA10]
	0x0354D3B0 MOVZ W1, 0x1
	0x0354D3B4 LDR X3, [X8 + 0x220]
	0x0354D3B8 LDR X2, [X9]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE93000
	007 Move W8, [X20+3210]
	008 Move W21, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xBA8000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0xBAF000
	018 Move X0, [X0+3488]
	019 Call 0x1C17CF4
	020 Move X0, 0xBA7000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3210], W8
	025 Move TEMP, X21
	026 And TEMP, TEMP, -2147483648
	027 Compare TEMP, -2147483648
	028 JumpIfEqual {79}
	029 Move W8, [X19+32]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X19+104]
	032 Move [X19+32], W21
	033 Compare W8, 0
	034 JumpIfNotEqual {79}
	035 Move X8, 0xBAF000
	036 Move X20, [X19+96]
	037 Move X8, [X8+3488]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X8]
	040 Move W8, 256
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call Hashtable..ctor, X0
	046 Move X8, 0xBA8000
	047 Move X8, [X8+2520]
	048 Add X1, X31, 12
	049 Move [X31+12], W22
	050 Move X0, [X8]
	051 Call 0x1C17E04
	052 Compare X21, 0
	053 JumpIfEqual {85}
	054 Move X2, X0
	055 Move W1, 255
	056 Move X0, X21
	057 Move X3, X31
	058 Call Hashtable.Add, X0, X1, X2
	059 Move X9, 0xBA7000
	060 Move W8, [X19+32]
	061 Move X9, [X9+1880]
	062 Add X1, X31, 8
	063 Move [X31+8], W8
	064 Move X0, [X9]
	065 Call 0x1C17E04
	066 Move X2, X0
	067 Move W1, 243
	068 Move X0, X21
	069 Move X3, X31
	070 Call Hashtable.Add, X0, X1, X2
	071 Compare X20, 0
	072 JumpIfEqual {85}
	073 Move X0, X20
	074 Move X1, X21
	075 Move X2, X31
	076 Move X3, X31
	077 Move X4, X31
	078 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Return 
	085 Call 0x1C17F20

Method: System.Int32 get_PlayerCount()

Disassembly:
	0x0354D3BC LDR X9, [X8 + 0x218]
	0x0354D3C0 BLR X9
	0x0354D3C4 LDP X20, X19, [X31 + 0x10]
	0x0354D3C8 MOV W0, W31
	0x0354D3CC LDP X30, X21, [X31], #0x20
	0x0354D3D0 RET
	0x0354D3D4 BL 0x1C16F20
	0x0354D3D8 SUB X31, X31, 0x40
	0x0354D3DC STP X30, X23, [X31 + 0x10]
	0x0354D3E0 STP X22, X21, [X31 + 0x20]
	0x0354D3E4 STP X20, X19, [X31 + 0x30]
	0x0354D3E8 ADRP X20, 0xE92000
	0x0354D3EC ADRP X21, 0xBA6000
	0x0354D3F0 LDRB W8, [X20 + 0xC99]
	0x0354D3F4 LDR X21, [X21 + 0x9D0]
	0x0354D3F8 MOV X19, X0
	0x0354D3FC TBNZ X8, 0x0, 0x354D45C
	0x0354D400 ADRP X0, 0xBA6000
	0x0354D404 LDR X0, [X0 + 0x758]
	0x0354D408 BL 0x1C16CF4
	0x0354D40C ADRP X0, 0xBA6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE93000
	005 Move W8, [X20+3211]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBE9000
	012 Move X0, [X0+8]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3211], W8
	016 Move X0, [X19+112]
	017 Compare X0, 0
	018 JumpIfEqual {24}
	019 Move X8, 0xBE9000
	020 Move X8, [X8+8]
	021 Move X1, [X8]
	022 Call Dictionary`2<Int32, Object>.get_Count, X0
	023 And W0, W0, 255
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Collections.Generic.Dictionary`2<System.Int32, Photon.Realtime.Player> get_Players()

Disassembly:
	0x0354D410 LDR X0, [X0 + 0x9D0]
	0x0354D414 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_Players(System.Collections.Generic.Dictionary`2<System.Int32, Photon.Realtime.Player> value)

Disassembly:
	0x0354D418 ADRP X0, 0xBAF000
	0x0354D41C LDR X0, [X0 + 0xA18]

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.String[] get_ExpectedUsers()

Disassembly:
	0x0354D420 BL 0x1C16CF4
	0x0354D424 ADRP X0, 0xBAF000

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Int32 get_PlayerTtl()

Disassembly:
	0x0354D428 LDR X0, [X0 + 0xA20]
	0x0354D42C BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_PlayerTtl(System.Int32 value)

Disassembly:
	0x0354D430 ADRP X0, 0xBAF000
	0x0354D434 LDR X0, [X0 + 0xA28]
	0x0354D438 BL 0x1C16CF4
	0x0354D43C ADRP X0, 0xBAF000
	0x0354D440 LDR X0, [X0 + 0xA30]
	0x0354D444 BL 0x1C16CF4
	0x0354D448 ADRP X0, 0xBAF000
	0x0354D44C LDR X0, [X0 + 0xA38]
	0x0354D450 BL 0x1C16CF4
	0x0354D454 MOVZ W8, 0x1
	0x0354D458 STRB W8, [X20 + 0xC99]
	0x0354D45C LDR X0, [X21]
	0x0354D460 MOVZ W1, 0x5
	0x0354D464 BL 0x1C16D6C
	0x0354D468 CBZ X0, 0x354D5F8
	0x0354D46C LDR X21, [X19 + 0x40]
	0x0354D470 MOV X20, X0
	0x0354D474 CBZ X21, 0x354D48C
	0x0354D478 LDR X8, [X20]
	0x0354D47C MOV X0, X21
	0x0354D480 LDR X1, [X8 + 0x40]
	0x0354D484 BL 0x1C16E00
	0x0354D488 CBZ X0, 0x354D5EC
	0x0354D48C LDR W8, [X20 + 0x18]
	0x0354D490 CBZ W8, 0x354D5E8
	0x0354D494 STR X21, [X20 + 0x20]
	0x0354D498 LDRB W9, [X19 + 0x39]
	0x0354D49C ADRP X10, 0xBAF000
	0x0354D4A0 ADRP X11, 0xBAF000
	0x0354D4A4 ADRP X12, 0xBAF000
	0x0354D4A8 LDR X10, [X10 + 0xA38]
	0x0354D4AC LDR X11, [X11 + 0xA18]
	0x0354D4B0 LDR X12, [X12 + 0xA30]
	0x0354D4B4 CMP W9, 0x0
	0x0354D4B8 LDR X21, [X10]
	0x0354D4BC CSEL X9, X11, X12, EQ
	0x0354D4C0 LDR X22, [X9]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE93000
	007 Move W8, [X21+3212]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBA7000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3212], W8
	019 Move W8, [X20+40]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X20+104]
	022 Compare W8, 0
	023 JumpIfNotEqual {38}
	024 Move X8, 0xBA7000
	025 Move X21, [X20+96]
	026 Move X8, [X8+1880]
	027 Add X1, X31, 12
	028 Move [X31+12], W19
	029 Move X0, [X8]
	030 Call 0x1C17E04
	031 Compare X21, 0
	032 JumpIfEqual {45}
	033 Move X2, X0
	034 Move W1, 246
	035 Move X0, X21
	036 Move X3, X31
	037 Call LoadBalancingClient.OpSetPropertyOfRoom, X0, X1, X2
	038 Move [X20+40], W19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Move X21, [X31+24]
	043 Add X31, X31, 48
	044 Return 
	045 Call 0x1C17F20

Method: System.Int32 get_EmptyRoomTtl()

Disassembly:
	0x0354D4C4 CBZ X22, 0x354D4E0
	0x0354D4C8 LDR X8, [X20]

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_EmptyRoomTtl(System.Int32 value)

Disassembly:
	0x0354D4CC MOV X0, X22
	0x0354D4D0 LDR X1, [X8 + 0x40]
	0x0354D4D4 BL 0x1C16E00
	0x0354D4D8 CBZ X0, 0x354D5EC
	0x0354D4DC LDR W8, [X20 + 0x18]
	0x0354D4E0 CMP W8, 0x1
	0x0354D4E4 B.LS 0x354D5E8
	0x0354D4E8 STR X22, [X20 + 0x28]
	0x0354D4EC LDRB W9, [X19 + 0x38]
	0x0354D4F0 ADRP X10, 0xBAF000
	0x0354D4F4 ADRP X11, 0xBAF000
	0x0354D4F8 LDR X10, [X10 + 0xA28]
	0x0354D4FC LDR X11, [X11 + 0xA20]
	0x0354D500 CMP W9, 0x0
	0x0354D504 CSEL X9, X10, X11, EQ
	0x0354D508 LDR X22, [X9]
	0x0354D50C CBZ X22, 0x354D528
	0x0354D510 LDR X8, [X20]
	0x0354D514 MOV X0, X22
	0x0354D518 LDR X1, [X8 + 0x40]
	0x0354D51C BL 0x1C16E00
	0x0354D520 CBZ X0, 0x354D5EC
	0x0354D524 LDR W8, [X20 + 0x18]
	0x0354D528 CMP W8, 0x2
	0x0354D52C B.LS 0x354D5E8
	0x0354D530 ADRP X23, 0xBA6000
	0x0354D534 LDR X23, [X23 + 0x758]
	0x0354D538 STR X22, [X20 + 0x30]
	0x0354D53C LDR W8, [X19 + 0x20]
	0x0354D540 ADD X1, X31, 0xC
	0x0354D544 LDR X0, [X23]
	0x0354D548 STR W8, [X31 + 0xC]
	0x0354D54C BL 0x1C16E04
	0x0354D550 MOV X22, X0
	0x0354D554 CBZ X0, 0x354D56C
	0x0354D558 LDR X8, [X20]
	0x0354D55C MOV X0, X22

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE93000
	007 Move W8, [X21+3213]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBA7000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3213], W8
	019 Move W8, [X20+36]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X20+104]
	022 Compare W8, 0
	023 JumpIfNotEqual {38}
	024 Move X8, 0xBA7000
	025 Move X21, [X20+96]
	026 Move X8, [X8+1880]
	027 Add X1, X31, 12
	028 Move [X31+12], W19
	029 Move X0, [X8]
	030 Call 0x1C17E04
	031 Compare X21, 0
	032 JumpIfEqual {45}
	033 Move X2, X0
	034 Move W1, 245
	035 Move X0, X21
	036 Move X3, X31
	037 Call LoadBalancingClient.OpSetPropertyOfRoom, X0, X1, X2
	038 Move [X20+36], W19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Move X21, [X31+24]
	043 Add X31, X31, 48
	044 Return 
	045 Call 0x1C17F20

Method: System.Int32 get_MasterClientId()

Disassembly:
	0x0354D560 LDR X1, [X8 + 0x40]
	0x0354D564 BL 0x1C16E00

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.String[] get_PropertiesListedInLobby()

Disassembly:
	0x0354D568 CBZ X0, 0x354D5EC
	0x0354D56C LDR W8, [X20 + 0x18]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_PropertiesListedInLobby(System.String[] value)

Disassembly:
	0x0354D570 CMP W8, 0x3
	0x0354D574 B.LS 0x354D5E8

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Boolean get_AutoCleanUp()

Disassembly:
	0x0354D578 MOV X0, X19
	0x0354D57C STR X22, [X20 + 0x38]

ISIL:
	001 Move W0, [X0+58]
	002 Return X0

Method: System.Boolean get_BroadcastPropertiesChangeToAll()

Disassembly:
	0x0354D580 BL 0x354C3BC
	0x0354D584 LDR X8, [X23]

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Void set_BroadcastPropertiesChangeToAll(System.Boolean value)

Disassembly:
	0x0354D588 STR W0, [X31 + 0x8]
	0x0354D58C ADD X1, X31, 0x8
	0x0354D590 MOV X0, X8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+120], W8
	003 Return 

Method: System.Boolean get_SuppressRoomEvents()

Disassembly:
	0x0354D594 BL 0x1C16E04
	0x0354D598 MOV X19, X0

ISIL:
	001 Move W0, [X0+121]
	002 Return X0

Method: System.Void set_SuppressRoomEvents(System.Boolean value)

Disassembly:
	0x0354D59C CBZ X0, 0x354D5B4
	0x0354D5A0 LDR X8, [X20]
	0x0354D5A4 MOV X0, X19

ISIL:
	001 And W8, W1, 1
	002 Move [X0+121], W8
	003 Return 

Method: System.Boolean get_SuppressPlayerInfo()

Disassembly:
	0x0354D5A8 LDR X1, [X8 + 0x40]
	0x0354D5AC BL 0x1C16E00

ISIL:
	001 Move W0, [X0+122]
	002 Return X0

Method: System.Void set_SuppressPlayerInfo(System.Boolean value)

Disassembly:
	0x0354D5B0 CBZ X0, 0x354D5EC
	0x0354D5B4 LDR W8, [X20 + 0x18]
	0x0354D5B8 CMP W8, 0x4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+122], W8
	003 Return 

Method: System.Boolean get_PublishUserId()

Disassembly:
	0x0354D5BC B.LS 0x354D5E8
	0x0354D5C0 MOV X0, X21

ISIL:
	001 Move W0, [X0+123]
	002 Return X0

Method: System.Void set_PublishUserId(System.Boolean value)

Disassembly:
	0x0354D5C4 MOV X1, X20
	0x0354D5C8 MOV X2, X31
	0x0354D5CC STR X19, [X20 + 0x40]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+123], W8
	003 Return 

Method: System.Boolean get_DeleteNullProperties()

Disassembly:
	0x0354D5D0 BL 0x3227C5C
	0x0354D5D4 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+124]
	002 Return X0

Method: System.Void set_DeleteNullProperties(System.Boolean value)

Disassembly:
	0x0354D5D8 LDP X22, X21, [X31 + 0x20]
	0x0354D5DC LDP X30, X23, [X31 + 0x10]
	0x0354D5E0 ADD X31, X31, 0x40

ISIL:
	001 And W8, W1, 1
	002 Move [X0+124], W8
	003 Return 

Method: System.Void .ctor(System.String roomName, Photon.Realtime.RoomOptions options, System.Boolean isOffline = False)

Disassembly:
	0x0354D5E4 RET
	0x0354D5E8 BL 0x1C16F28
	0x0354D5EC BL 0x1C16F44
	0x0354D5F0 MOV X1, X31
	0x0354D5F4 BL 0x1C16DEC
	0x0354D5F8 BL 0x1C16F20
	0x0354D5FC SUB X31, X31, 0x40
	0x0354D600 STP X30, X23, [X31 + 0x10]
	0x0354D604 STP X22, X21, [X31 + 0x20]
	0x0354D608 STP X20, X19, [X31 + 0x30]
	0x0354D60C ADRP X20, 0xE92000
	0x0354D610 ADRP X21, 0xBA6000
	0x0354D614 LDRB W8, [X20 + 0xC9A]
	0x0354D618 LDR X21, [X21 + 0x9D0]
	0x0354D61C MOV X19, X0
	0x0354D620 TBNZ X8, 0x0, 0x354D68C
	0x0354D624 ADRP X0, 0xBE7000
	0x0354D628 LDR X0, [X0 + 0xBA8]
	0x0354D62C BL 0x1C16CF4
	0x0354D630 ADRP X0, 0xBA6000
	0x0354D634 LDR X0, [X0 + 0x758]
	0x0354D638 BL 0x1C16CF4
	0x0354D63C ADRP X0, 0xBA6000
	0x0354D640 LDR X0, [X0 + 0x9D0]
	0x0354D644 BL 0x1C16CF4
	0x0354D648 ADRP X0, 0xBAF000
	0x0354D64C LDR X0, [X0 + 0xA18]
	0x0354D650 BL 0x1C16CF4
	0x0354D654 ADRP X0, 0xBAF000
	0x0354D658 LDR X0, [X0 + 0xA40]
	0x0354D65C BL 0x1C16CF4
	0x0354D660 ADRP X0, 0xBAF000
	0x0354D664 LDR X0, [X0 + 0xA20]
	0x0354D668 BL 0x1C16CF4
	0x0354D66C ADRP X0, 0xBAF000
	0x0354D670 LDR X0, [X0 + 0xA28]
	0x0354D674 BL 0x1C16CF4
	0x0354D678 ADRP X0, 0xBAF000
	0x0354D67C LDR X0, [X0 + 0xA30]
	0x0354D680 BL 0x1C16CF4
	0x0354D684 MOVZ W8, 0x1
	0x0354D688 STRB W8, [X20 + 0xC9A]
	0x0354D68C LDR X0, [X21]
	0x0354D690 MOVZ W1, 0x6
	0x0354D694 BL 0x1C16D6C
	0x0354D698 CBZ X0, 0x354D87C
	0x0354D69C LDR X21, [X19 + 0x40]
	0x0354D6A0 MOV X20, X0
	0x0354D6A4 CBZ X21, 0x354D6BC
	0x0354D6A8 LDR X8, [X20]
	0x0354D6AC MOV X0, X21
	0x0354D6B0 LDR X1, [X8 + 0x40]
	0x0354D6B4 BL 0x1C16E00
	0x0354D6B8 CBZ X0, 0x354D870

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xE93000
	010 Move X25, 0xBE9000
	011 Move X23, 0xBE9000
	012 Move W8, [X24+3214]
	013 Move X25, [X25+192]
	014 Move X23, [X23+200]
	015 Move W19, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xBE9000
	024 Move X0, [X0+200]
	025 Call 0x1C17CF4
	026 Move X0, 0xBE9000
	027 Move X0, [X0+192]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+3214], W8
	031 Move X0, [X25]
	032 Call 0x1C17F10
	033 Move X1, [X23]
	034 Move X23, X0
	035 Call Dictionary`2<Int32, Object>..ctor, X0
	036 Move [X20+112], X23
	037 Compare X21, 0
	038 JumpIfEqual {51}
	039 Move X2, [X21+40]
	040 Move X0, X20
	041 Move X1, X22
	042 Call RoomInfo..ctor, X0, X1, X2
	043 Move W8, [X21+16]
	044 Move [X20+57], W8
	045 Move W8, [X21+17]
	046 Move [X20+56], W8
	047 Move W8, [X21+20]
	048 Move [X20+32], W8
	049 Move X8, [X21+48]
	050 Move [X20+80], X8
	051 Move X0, X20
	052 Move X1, X22
	053 Move X2, X31
	054 Call RoomInfo..ctor, X0, X1, X2
	055 And W8, W19, 1
	056 Move [X20+104], W8
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Move X25, [X31+72]
	065 Return 

Method: System.Void InternalCacheRoomFlags(System.Int32 roomFlags)

Disassembly:
	0x0354D758 CMP W8, 0x2
	0x0354D75C B.LS 0x354D86C
	0x0354D760 ADRP X23, 0xBA6000
	0x0354D764 LDR X23, [X23 + 0x758]
	0x0354D768 STR X22, [X20 + 0x30]
	0x0354D76C LDR W8, [X19 + 0x20]
	0x0354D770 ADD X1, X31, 0xC
	0x0354D774 LDR X0, [X23]
	0x0354D778 STR W8, [X31 + 0xC]
	0x0354D77C BL 0x1C16E04
	0x0354D780 MOV X22, X0
	0x0354D784 CBZ X0, 0x354D79C
	0x0354D788 LDR X8, [X20]
	0x0354D78C MOV X0, X22

ISIL:
	001 And W8, W1, 255
	002 Move W9, W8
	003 ShiftRight W9, 5
	004 And W9, W9, 31
	005 Move W10, W8
	006 ShiftRight W10, 2
	007 And W10, W10, 3
	008 Move W11, W8
	009 ShiftRight W11, 6
	010 And W11, W11, 63
	011 Move W12, W8
	012 ShiftRight W12, 3
	013 And W12, W12, 7
	014 Move W13, W8
	015 ShiftRight W13, 4
	016 And W13, W13, 15
	017 Move W8, W8
	018 ShiftRight W8, 1
	019 And W8, W8, 1
	020 Move [X0+120], W9
	021 Move [X0+121], W10
	022 Move [X0+122], W11
	023 Move [X0+123], W12
	024 Move [X0+124], W13
	025 Move [X0+58], W8
	026 Return 

Method: System.Void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)

Disassembly:
	0x0354D790 LDR X1, [X8 + 0x40]
	0x0354D794 BL 0x1C16E00
	0x0354D798 CBZ X0, 0x354D870
	0x0354D79C LDR W8, [X20 + 0x18]
	0x0354D7A0 CMP W8, 0x3
	0x0354D7A4 B.LS 0x354D86C
	0x0354D7A8 MOV X0, X19
	0x0354D7AC STR X22, [X20 + 0x38]
	0x0354D7B0 BL 0x354C3BC
	0x0354D7B4 LDR X8, [X23]
	0x0354D7B8 STR W0, [X31 + 0x8]
	0x0354D7BC ADD X1, X31, 0x8
	0x0354D7C0 MOV X0, X8
	0x0354D7C4 BL 0x1C16E04
	0x0354D7C8 MOV X22, X0
	0x0354D7CC CBZ X0, 0x354D7E4
	0x0354D7D0 LDR X8, [X20]
	0x0354D7D4 MOV X0, X22
	0x0354D7D8 LDR X1, [X8 + 0x40]
	0x0354D7DC BL 0x1C16E00
	0x0354D7E0 CBZ X0, 0x354D870
	0x0354D7E4 LDR W8, [X20 + 0x18]
	0x0354D7E8 CMP W8, 0x4
	0x0354D7EC B.LS 0x354D86C
	0x0354D7F0 ADRP X8, 0xBE7000
	0x0354D7F4 LDR X8, [X8 + 0xBA8]
	0x0354D7F8 STR X22, [X20 + 0x40]
	0x0354D7FC LDR X19, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, [X0+72]
	005 Move X19, X0
	006 Call RoomInfo.InternalCacheProperties, X0, X1
	007 Compare W20, 0
	008 JumpIfEqual {11}
	009 Move W1, [X19+72]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Move X8, [X19+96]
	016 Compare X8, 0
	017 JumpIfEqual {35}
	018 Move X9, [X19]
	019 Move X20, [X8+192]
	020 Move X0, X19
	021 Move W2, W31
	022 Move X8, [X9+472]
	023 Move X3, [X9+480]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Compare X20, 0
	026 JumpIfEqual {35}
	027 Move X1, X0
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X2, X31
	032 Move X30, [X31+32]
	033 Call InRoomCallbacksContainer.OnMasterClientSwitched, X0, X1
	034 Return 
	035 Call 0x1C17F20

Method: System.Boolean SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, ExitGames.Client.Photon.Hashtable expectedProperties = null, Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x0354DCCC CSEL X9, X10, X11, EQ
	0x0354DCD0 LDR X22, [X9]
	0x0354DCD4 CBZ X22, 0x354DCF0
	0x0354DCD8 LDR X8, [X20]
	0x0354DCDC MOV X0, X22
	0x0354DCE0 LDR X1, [X8 + 0x40]
	0x0354DCE4 BL 0x1C16E00
	0x0354DCE8 CBZ X0, 0x354DE00
	0x0354DCEC LDR W8, [X20 + 0x18]
	0x0354DCF0 CMP W8, 0x2
	0x0354DCF4 B.LS 0x354DDFC
	0x0354DCF8 ADRP X23, 0xBA6000
	0x0354DCFC LDR X23, [X23 + 0x758]
	0x0354DD00 STR X22, [X20 + 0x30]
	0x0354DD04 LDR W8, [X19 + 0x20]
	0x0354DD08 ADD X1, X31, 0xC
	0x0354DD0C LDR X0, [X23]
	0x0354DD10 STR W8, [X31 + 0xC]
	0x0354DD14 BL 0x1C16E04
	0x0354DD18 MOV X22, X0
	0x0354DD1C CBZ X0, 0x354DD34
	0x0354DD20 LDR X8, [X20]
	0x0354DD24 MOV X0, X22
	0x0354DD28 LDR X1, [X8 + 0x40]
	0x0354DD2C BL 0x1C16E00
	0x0354DD30 CBZ X0, 0x354DE00
	0x0354DD34 LDR W8, [X20 + 0x18]
	0x0354DD38 CMP W8, 0x3
	0x0354DD3C B.LS 0x354DDFC
	0x0354DD40 STR X22, [X20 + 0x38]
	0x0354DD44 LDR W8, [X19 + 0x58]
	0x0354DD48 LDR X0, [X23]
	0x0354DD4C ADD X1, X31, 0x8
	0x0354DD50 STR W8, [X31 + 0x8]
	0x0354DD54 BL 0x1C16E04
	0x0354DD58 MOV X22, X0
	0x0354DD5C CBZ X0, 0x354DD74
	0x0354DD60 LDR X8, [X20]
	0x0354DD64 MOV X0, X22
	0x0354DD68 LDR X1, [X8 + 0x40]
	0x0354DD6C BL 0x1C16E00
	0x0354DD70 CBZ X0, 0x354DE00
	0x0354DD74 LDR W8, [X20 + 0x18]
	0x0354DD78 CMP W8, 0x4
	0x0354DD7C B.LS 0x354DDFC
	0x0354DD80 ADRP X8, 0xBE7000
	0x0354DD84 LDR X8, [X8 + 0xBA8]
	0x0354DD88 STR X22, [X20 + 0x40]
	0x0354DD8C LDR X19, [X19 + 0x18]
	0x0354DD90 LDR X0, [X8]
	0x0354DD94 LDR W8, [X0 + 0xE0]
	0x0354DD98 CBNZ W8, 0x354DDA0
	0x0354DD9C BL 0x1C16DFC
	0x0354DDA0 MOV X0, X19
	0x0354DDA4 MOV X1, X31
	0x0354DDA8 BL 0x3537368
	0x0354DDAC MOV X19, X0
	0x0354DDB0 CBZ X0, 0x354DDC8
	0x0354DDB4 LDR X8, [X20]
	0x0354DDB8 MOV X0, X19
	0x0354DDBC LDR X1, [X8 + 0x40]
	0x0354DDC0 BL 0x1C16E00
	0x0354DDC4 CBZ X0, 0x354DE00
	0x0354DDC8 LDR W8, [X20 + 0x18]
	0x0354DDCC CMP W8, 0x5
	0x0354DDD0 B.LS 0x354DDFC
	0x0354DDD4 MOV X0, X21
	0x0354DDD8 MOV X1, X20
	0x0354DDDC MOV X2, X31
	0x0354DDE0 STR X19, [X20 + 0x48]
	0x0354DDE4 BL 0x3227C5C
	0x0354DDE8 LDP X20, X19, [X31 + 0x30]
	0x0354DDEC LDP X22, X21, [X31 + 0x20]
	0x0354DDF0 LDP X30, X23, [X31 + 0x10]
	0x0354DDF4 ADD X31, X31, 0x40
	0x0354DDF8 RET
	0x0354DDFC BL 0x1C16F28
	0x0354DE00 BL 0x1C16F44
	0x0354DE04 MOV X1, X31
	0x0354DE08 BL 0x1C16DEC
	0x0354DE0C BL 0x1C16F20
	0x0354DE10 LDR X0, [X0 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xE93000
	010 Move W8, [X23+3215]
	011 Move X21, X3
	012 Move X22, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xBAF000
	020 Move X0, [X0+3424]
	021 Call 0x1C17CF4
	022 Move X0, 0xBE8000
	023 Move X0, [X0+2984]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3215], W8
	027 Compare X19, 0
	028 JumpIfEqual {80}
	029 Move X25, 0xBAF000
	030 Move X25, [X25+3424]
	031 Move X0, X19
	032 Move X1, [X25]
	033 Call Dictionary`2<Object, Object>.get_Count, X0
	034 Compare W0, 0
	035 JumpIfEqual {81}
	036 Move X24, 0xBE8000
	037 Move X24, [X24+2984]
	038 Move X0, [X24]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X31
	045 Call Extensions.StripToStringKeys, X0
	046 Move W8, [X20+104]
	047 Move X23, X0
	048 Compare W8, 0
	049 JumpIfEqual {90}
	050 Compare X23, 0
	051 JumpIfEqual {107}
	052 Move X1, [X25]
	053 Move X0, X23
	054 Call Dictionary`2<Object, Object>.get_Count, X0
	055 Compare W0, 0
	056 JumpIfEqual {81}
	057 Move X0, [X24]
	058 Move X21, [X20+24]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X23
	065 Move X2, X31
	066 Call Extensions.Merge, X0, X1
	067 Move X0, [X20+24]
	068 Move X1, X31
	069 Call Extensions.StripKeysWithNullValues, X0
	070 Move X8, [X20+96]
	071 Compare X8, 0
	072 JumpIfEqual {107}
	073 Move X0, [X8+192]
	074 Compare X0, 0
	075 JumpIfEqual {107}
	076 Move X1, X19
	077 Move X2, X31
	078 Call InRoomCallbacksContainer.OnRoomPropertiesUpdate, X0, X1
	079 Move W0, 1
	080 Move W0, W31
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return X0
	090 Move X0, [X20+96]
	091 Compare X0, 0
	092 JumpIfEqual {107}
	093 Move X1, X23
	094 Move X2, X22
	095 Move X3, X21
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X4, X31
	103 Move X30, [X31+64]
	104 Move X25, [X31+72]
	105 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	106 Return X0
	107 Call 0x1C17F20

Method: System.Boolean SetPropertiesListedInLobby(System.String[] lobbyProps)

Disassembly:
	0x0354DE14 RET
	0x0354DE18 STR X30, [X31 - 0x20]!
	0x0354DE1C STP X20, X19, [X31 + 0x10]
	0x0354DE20 MOV X19, X0
	0x0354DE24 LDR X0, [X0 + 0x28]
	0x0354DE28 CMP X0, X1
	0x0354DE2C B.EQ 0x354DE64
	0x0354DE30 MOV X20, X1
	0x0354DE34 CBZ X0, 0x354DE44
	0x0354DE38 MOV X1, X19
	0x0354DE3C MOV X2, X31
	0x0354DE40 BL 0x3544C44
	0x0354DE44 STR X20, [X19 + 0x28]
	0x0354DE48 CBZ X20, 0x354DE64
	0x0354DE4C MOV X0, X20
	0x0354DE50 MOV X1, X19
	0x0354DE54 LDP X20, X19, [X31 + 0x10]
	0x0354DE58 MOV X2, X31
	0x0354DE5C LDR X30, [X31], #0x20
	0x0354DE60 B 0x3544B7C
	0x0354DE64 LDP X20, X19, [X31 + 0x10]
	0x0354DE68 LDR X30, [X31], #0x20
	0x0354DE6C RET
	0x0354DE70 STR X30, [X31 - 0x20]!
	0x0354DE74 STP X20, X19, [X31 + 0x10]
	0x0354DE78 ADRP X20, 0xE92000
	0x0354DE7C LDRB W8, [X20 + 0xCA0]
	0x0354DE80 MOV X19, X0
	0x0354DE84 TBNZ X8, 0x0, 0x354DE9C
	0x0354DE88 ADRP X0, 0xBAE000
	0x0354DE8C LDR X0, [X0 + 0x708]
	0x0354DE90 BL 0x1C16CF4
	0x0354DE94 MOVZ W8, 0x1
	0x0354DE98 STRB W8, [X20 + 0xCA0]
	0x0354DE9C MOV X0, X19
	0x0354DEA0 BL 0x354DEF4
	0x0354DEA4 LDR X8, [X19 + 0x30]
	0x0354DEA8 CBZ X8, 0x354DEB8
	0x0354DEAC LDP X20, X19, [X31 + 0x10]
	0x0354DEB0 LDR X30, [X31], #0x20
	0x0354DEB4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE93000
	006 Move W8, [X21+3216]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBAF000
	014 Move X0, [X0+3488]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3216], W8
	018 Move W8, [X19+104]
	019 Compare W8, 0
	020 JumpIfEqual {27}
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W0, W31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return X0
	027 Move X8, 0xBAF000
	028 Move X8, [X8+3488]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X21, X0
	033 Call Hashtable..ctor, X0
	034 Compare X21, 0
	035 JumpIfEqual {54}
	036 Move W1, 250
	037 Move X0, X21
	038 Move X2, X20
	039 Move X3, X31
	040 Call Hashtable.set_Item, X0, X1, X2
	041 Move X0, [X19+96]
	042 Compare X0, 0
	043 JumpIfEqual {54}
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X1, X21
	047 Move X2, X31
	048 Move X3, X31
	049 Move X4, X31
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	053 Return X0
	054 Call 0x1C17F20

Method: System.Void RemovePlayer(Photon.Realtime.Player player)

Disassembly:
	0x0354DEB8 ADRP X8, 0xBAE000
	0x0354DEBC LDR X8, [X8 + 0x708]
	0x0354DEC0 LDR X0, [X8]
	0x0354DEC4 BL 0x1C16F10
	0x0354DEC8 MOV X1, X31
	0x0354DECC MOV X20, X0
	0x0354DED0 BL 0x364BFC4
	0x0354DED4 STR X20, [X19 + 0x30]
	0x0354DED8 CBZ X20, 0x354DEF0
	0x0354DEDC MOV X0, X20
	0x0354DEE0 LDP X20, X19, [X31 + 0x10]
	0x0354DEE4 MOV X1, X31
	0x0354DEE8 LDR X30, [X31], #0x20
	0x0354DEEC B 0x364BFCC
	0x0354DEF0 BL 0x1C16F20
	0x0354DEF4 SUB X31, X31, 0x60
	0x0354DEF8 STR X30, [X31 + 0x20]
	0x0354DEFC STP X24, X23, [X31 + 0x30]
	0x0354DF00 STP X22, X21, [X31 + 0x40]
	0x0354DF04 STP X20, X19, [X31 + 0x50]
	0x0354DF08 ADRP X20, 0xE92000
	0x0354DF0C LDRB W8, [X20 + 0xCA8]
	0x0354DF10 MOV X19, X0
	0x0354DF14 TBNZ X8, 0x0, 0x354E070
	0x0354DF18 ADRP X0, 0xBA6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE93000
	006 Move W8, [X21+3217]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBE9000
	014 Move X0, [X0+208]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3217], W8
	018 Compare X19, 0
	019 JumpIfEqual {34}
	020 Move X0, [X20+112]
	021 Compare X0, 0
	022 JumpIfEqual {34}
	023 Move X8, 0xBE9000
	024 Move X8, [X8+208]
	025 Move W1, [X19+24]
	026 Move X2, [X8]
	027 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	028 Move [X19+16], X31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Call 0x1C17F20

Method: System.Void RemovePlayer(System.Int32 id)

Disassembly:
	0x0354DF1C LDR X0, [X0 + 0x970]
	0x0354DF20 BL 0x1C16CF4
	0x0354DF24 ADRP X0, 0xBE7000
	0x0354DF28 LDR X0, [X0 + 0xB40]
	0x0354DF2C BL 0x1C16CF4
	0x0354DF30 ADRP X0, 0xBE7000
	0x0354DF34 LDR X0, [X0 + 0xB50]
	0x0354DF38 BL 0x1C16CF4
	0x0354DF3C ADRP X0, 0xBE7000
	0x0354DF40 LDR X0, [X0 + 0xFD8]
	0x0354DF44 BL 0x1C16CF4
	0x0354DF48 ADRP X0, 0xBA6000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W2, W31
	005 Move X19, X0
	006 Move X9, [X8+472]
	007 Move X3, [X8+480]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19]
	010 Move X1, X0
	011 Move X0, X19
	012 Move X3, [X8+408]
	013 Move X2, [X8+416]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X3

Method: System.Boolean SetMasterClient(Photon.Realtime.Player masterClientPlayer)

Disassembly:
	0x0354DF4C LDR X0, [X0 + 0xA28]
	0x0354DF50 BL 0x1C16CF4
	0x0354DF54 ADRP X0, 0xBE7000
	0x0354DF58 LDR X0, [X0 + 0xFB0]
	0x0354DF5C BL 0x1C16CF4
	0x0354DF60 ADRP X0, 0xBA7000
	0x0354DF64 LDR X0, [X0 + 0x1B8]
	0x0354DF68 BL 0x1C16CF4
	0x0354DF6C ADRP X0, 0xBA8000
	0x0354DF70 LDR X0, [X0 + 0xE78]
	0x0354DF74 BL 0x1C16CF4
	0x0354DF78 ADRP X0, 0xBAF000
	0x0354DF7C LDR X0, [X0 + 0x118]
	0x0354DF80 BL 0x1C16CF4
	0x0354DF84 ADRP X0, 0xBA7000
	0x0354DF88 LDR X0, [X0 + 0x1D0]
	0x0354DF8C BL 0x1C16CF4
	0x0354DF90 ADRP X0, 0xBA6000
	0x0354DF94 LDR X0, [X0 + 0x9D0]
	0x0354DF98 BL 0x1C16CF4
	0x0354DF9C ADRP X0, 0xBAE000
	0x0354DFA0 LDR X0, [X0 + 0xEE0]
	0x0354DFA4 BL 0x1C16CF4
	0x0354DFA8 ADRP X0, 0xBAF000
	0x0354DFAC LDR X0, [X0 + 0xA48]
	0x0354DFB0 BL 0x1C16CF4
	0x0354DFB4 ADRP X0, 0xBA6000
	0x0354DFB8 LDR X0, [X0 + 0x8F0]
	0x0354DFBC BL 0x1C16CF4
	0x0354DFC0 ADRP X0, 0xBAF000
	0x0354DFC4 LDR X0, [X0 + 0xA50]
	0x0354DFC8 BL 0x1C16CF4
	0x0354DFCC ADRP X0, 0xBA6000
	0x0354DFD0 LDR X0, [X0 + 0x6C0]
	0x0354DFD4 BL 0x1C16CF4
	0x0354DFD8 ADRP X0, 0xBAF000
	0x0354DFDC LDR X0, [X0 + 0xA58]
	0x0354DFE0 BL 0x1C16CF4
	0x0354DFE4 ADRP X0, 0xBAF000
	0x0354DFE8 LDR X0, [X0 + 0xA60]
	0x0354DFEC BL 0x1C16CF4
	0x0354DFF0 ADRP X0, 0xBAF000
	0x0354DFF4 LDR X0, [X0 + 0xA70]
	0x0354DFF8 BL 0x1C16CF4
	0x0354DFFC ADRP X0, 0xBAF000
	0x0354E000 LDR X0, [X0 + 0xA78]
	0x0354E004 BL 0x1C16CF4
	0x0354E008 ADRP X0, 0xBAE000
	0x0354E00C LDR X0, [X0 + 0xA80]
	0x0354E010 BL 0x1C16CF4
	0x0354E014 ADRP X0, 0xBA5000
	0x0354E018 LDR X0, [X0 + 0x838]
	0x0354E01C BL 0x1C16CF4
	0x0354E020 ADRP X0, 0xBAE000
	0x0354E024 LDR X0, [X0 + 0xA88]
	0x0354E028 BL 0x1C16CF4
	0x0354E02C ADRP X0, 0xBAE000
	0x0354E030 LDR X0, [X0 + 0xA90]
	0x0354E034 BL 0x1C16CF4
	0x0354E038 ADRP X0, 0xBAE000
	0x0354E03C LDR X0, [X0 + 0xA98]
	0x0354E040 BL 0x1C16CF4
	0x0354E044 ADRP X0, 0xBAD000
	0x0354E048 LDR X0, [X0 + 0xE50]
	0x0354E04C BL 0x1C16CF4
	0x0354E050 ADRP X0, 0xBAE000
	0x0354E054 LDR X0, [X0 + 0xAA0]
	0x0354E058 BL 0x1C16CF4
	0x0354E05C ADRP X0, 0xBAE000
	0x0354E060 LDR X0, [X0 + 0xAA8]
	0x0354E064 BL 0x1C16CF4
	0x0354E068 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE93000
	009 Move W8, [X20+3218]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xBAF000
	017 Move X0, [X0+3488]
	018 Call 0x1C17CF4
	019 Move X0, 0xBA7000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3218], W8
	024 Move W8, [X19+104]
	025 Compare W8, 0
	026 JumpIfEqual {28}
	027 Move W0, W31
	028 Move X22, 0xBAF000
	029 Move X22, [X22+3488]
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X20, X0
	034 Call Hashtable..ctor, X0
	035 Compare X21, 0
	036 JumpIfEqual {85}
	037 Move X23, 0xBA7000
	038 Move W8, [X21+24]
	039 Move X23, [X23+1880]
	040 Add X1, X31, 12
	041 Move [X31+12], W8
	042 Move X0, [X23]
	043 Call 0x1C17E04
	044 Compare X20, 0
	045 JumpIfEqual {85}
	046 Move X2, X0
	047 Move W1, 248
	048 Move X0, X20
	049 Move X3, X31
	050 Call Hashtable.Add, X0, X1, X2
	051 Move X0, [X22]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X21, X0
	055 Call Hashtable..ctor, X0
	056 Move W8, [X19+72]
	057 Move X0, [X23]
	058 Add X1, X31, 8
	059 Move [X31+8], W8
	060 Call 0x1C17E04
	061 Compare X21, 0
	062 JumpIfEqual {85}
	063 Move X2, X0
	064 Move W1, 248
	065 Move X0, X21
	066 Move X3, X31
	067 Call Hashtable.Add, X0, X1, X2
	068 Move X0, [X19+96]
	069 Compare X0, 0
	070 JumpIfEqual {85}
	071 Move X1, X20
	072 Move X2, X21
	073 Move X3, X31
	074 Move X4, X31
	075 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+16]
	081 Move X23, [X31+24]
	082 And W0, W0, 1
	083 Add X31, X31, 64
	084 Return X0
	085 Call 0x1C17F20

Method: System.Boolean AddPlayer(Photon.Realtime.Player player)

Disassembly:
	0x0354E06C STRB W8, [X20 + 0xCA8]
	0x0354E070 LDR X8, [X19 + 0x28]
	0x0354E074 CBZ X8, 0x354E85C
	0x0354E078 ADRP X8, 0xBA6000
	0x0354E07C LDR X8, [X8 + 0x1D0]
	0x0354E080 ADRP X20, 0xBAE000
	0x0354E084 ADRP X22, 0xBA5000
	0x0354E088 LDR X0, [X8]
	0x0354E08C LDR X20, [X20 + 0x118]
	0x0354E090 LDR X22, [X22 + 0x970]
	0x0354E094 BL 0x1C16F10
	0x0354E098 LDR X2, [X20]
	0x0354E09C MOVZ W1, 0xA
	0x0354E0A0 MOV X21, X0
	0x0354E0A4 BL 0x301B830
	0x0354E0A8 LDR X0, [X22]
	0x0354E0AC LDR W8, [X0 + 0xE0]
	0x0354E0B0 CBNZ W8, 0x354E0B8
	0x0354E0B4 BL 0x1C16DFC
	0x0354E0B8 MOV X0, X31
	0x0354E0BC BL 0x3C019E8
	0x0354E0C0 CBZ X21, 0x354E874
	0x0354E0C4 ADRP X20, 0xBA6000
	0x0354E0C8 LDR X20, [X20 + 0x1B8]
	0x0354E0CC LDR W10, [X21 + 0x1C]
	0x0354E0D0 LDR X8, [X21 + 0x10]
	0x0354E0D4 LDR X9, [X20]
	0x0354E0D8 ADD W10, W10, 0x1
	0x0354E0DC STR W10, [X21 + 0x1C]
	0x0354E0E0 CBZ X8, 0x354E874
	0x0354E0E4 LDRSW X10, [X21 + 0x18]
	0x0354E0E8 LDR W11, [X8 + 0x18]
	0x0354E0EC ADRP X22, 0xBAE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE92000
	006 Move W8, [X21+3219]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBE8000
	014 Move X0, [X0+216]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3219], W8
	018 Compare X19, 0
	019 JumpIfEqual {46}
	020 Move X0, [X20+112]
	021 Compare X0, 0
	022 JumpIfEqual {46}
	023 Move X8, 0xBE8000
	024 Move X8, [X8+216]
	025 Move W1, [X19+24]
	026 Move X2, [X8]
	027 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	028 Move W21, W0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {39}
	033 Move X8, [X20]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X9, [X8+456]
	037 Move X2, [X8+464]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 NotImplemented "Instruction ORN not yet implemented."
	042 And W0, W8, 1
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20

Method: Photon.Realtime.Player StorePlayer(Photon.Realtime.Player player)

Disassembly:
	0x0354E0F0 LDR X22, [X22 + 0xA48]
	0x0354E0F4 MOV X1, X0
	0x0354E0F8 CMP W10, W11
	0x0354E0FC B.CS 0x354E114
	0x0354E100 ADD W9, W10, 0x1
	0x0354E104 ADD X8, X8, X10, 0x3, LSL
	0x0354E108 STR W9, [X21 + 0x18]
	0x0354E10C STR X1, [X8 + 0x20]
	0x0354E110 B 0x354E128
	0x0354E114 LDR X8, [X9 + 0x20]
	0x0354E118 MOV X0, X21
	0x0354E11C LDR X8, [X8 + 0xC0]
	0x0354E120 LDR X2, [X8 + 0x70]
	0x0354E124 BL 0x301BF90
	0x0354E128 MOV X0, X31
	0x0354E12C BL 0x3C01AB0
	0x0354E130 LDR X8, [X22]
	0x0354E134 MOVN X9, 0x0
	0x0354E138 STR W0, [X31 + 0x18]
	0x0354E13C ADD X0, X31, 0x8
	0x0354E140 MOV X1, X31
	0x0354E144 STP X8, X9, [X31 + 0x8]
	0x0354E148 BL 0x33B162C
	0x0354E14C LDR W8, [X21 + 0x1C]
	0x0354E150 LDR X10, [X21 + 0x10]
	0x0354E154 LDR X9, [X20]
	0x0354E158 ADD W8, W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE92000
	006 Move W8, [X21+3220]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBE8000
	014 Move X0, [X0+224]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3220], W8
	018 Compare X19, 0
	019 JumpIfEqual {36}
	020 Move X0, [X20+112]
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X8, 0xBE8000
	024 Move X8, [X8+224]
	025 Move W1, [X19+24]
	026 Move X2, X19
	027 Move X3, [X8]
	028 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	029 Move [X19+16], X20
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: Photon.Realtime.Player GetPlayer(System.Int32 id, System.Boolean findMaster = False)

Disassembly:
	0x0354E15C STR W8, [X21 + 0x1C]
	0x0354E160 CBZ X10, 0x354E874
	0x0354E164 LDRSW X11, [X21 + 0x18]
	0x0354E168 LDR W12, [X10 + 0x18]
	0x0354E16C ADRP X22, 0xBAE000
	0x0354E170 LDR X22, [X22 + 0xA88]
	0x0354E174 MOV X1, X0
	0x0354E178 CMP W11, W12
	0x0354E17C B.CS 0x354E194
	0x0354E180 ADD W9, W11, 0x1
	0x0354E184 ADD X10, X10, X11, 0x3, LSL
	0x0354E188 STR W9, [X21 + 0x18]
	0x0354E18C STR X1, [X10 + 0x20]
	0x0354E190 B 0x354E1AC
	0x0354E194 LDR X8, [X9 + 0x20]
	0x0354E198 MOV X0, X21
	0x0354E19C LDR X8, [X8 + 0xC0]
	0x0354E1A0 LDR X2, [X8 + 0x70]
	0x0354E1A4 BL 0x301BF90
	0x0354E1A8 LDP W9, W8, [X21 + 0x18]
	0x0354E1AC LDR X1, [X22]
	0x0354E1B0 LDR X11, [X21 + 0x10]
	0x0354E1B4 LDR X10, [X20]
	0x0354E1B8 ADD W8, W8, 0x1
	0x0354E1BC STR W8, [X21 + 0x1C]
	0x0354E1C0 CBZ X11, 0x354E874
	0x0354E1C4 LDR W12, [X11 + 0x18]
	0x0354E1C8 ADRP X22, 0xBAE000
	0x0354E1CC LDR X22, [X22 + 0xA90]
	0x0354E1D0 CMP W9, W12
	0x0354E1D4 B.CS 0x354E1EC
	0x0354E1D8 ADD W10, W9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE92000
	007 Move W8, [X22+3221]
	008 Move W21, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xBE8000
	016 Move X0, [X0+232]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3221], W8
	020 Compare W19, 0
	021 JumpIfNotEqual {27}
	022 Move TEMP, X21
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {27}
	026 Move W19, [X20+72]
	027 Move [X31+8], X31
	028 Move X0, [X20+112]
	029 Compare X0, 0
	030 JumpIfEqual {44}
	031 Move X8, 0xBE8000
	032 Move X8, [X8+232]
	033 Add X2, X31, 8
	034 Move W1, W19
	035 Move X3, [X8]
	036 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	037 Move X0, [X31+8]
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Boolean ClearExpectedUsers()

Disassembly:
	0x0354E1DC ADD X9, X11, W9, 0x3, SXTW
	0x0354E1E0 STR W10, [X21 + 0x18]
	0x0354E1E4 STR X1, [X9 + 0x20]
	0x0354E1E8 B 0x354E204
	0x0354E1EC LDR X8, [X10 + 0x20]
	0x0354E1F0 MOV X0, X21
	0x0354E1F4 LDR X8, [X8 + 0xC0]
	0x0354E1F8 LDR X2, [X8 + 0x70]
	0x0354E1FC BL 0x301BF90
	0x0354E200 LDP W10, W8, [X21 + 0x18]
	0x0354E204 LDR X1, [X22]
	0x0354E208 LDR X9, [X21 + 0x10]
	0x0354E20C LDR X11, [X20]
	0x0354E210 ADD W8, W8, 0x1
	0x0354E214 STR W8, [X21 + 0x1C]
	0x0354E218 CBZ X9, 0x354E874
	0x0354E21C LDR W8, [X9 + 0x18]
	0x0354E220 ADRP X20, 0xBA5000
	0x0354E224 LDR X20, [X20 + 0x8F0]
	0x0354E228 CMP W10, W8
	0x0354E22C B.CS 0x354E244
	0x0354E230 ADD W8, W10, 0x1
	0x0354E234 ADD X9, X9, W10, 0x3, SXTW
	0x0354E238 STR W8, [X21 + 0x18]
	0x0354E23C STR X1, [X9 + 0x20]
	0x0354E240 B 0x354E258
	0x0354E244 LDR X8, [X11 + 0x20]
	0x0354E248 MOV X0, X21
	0x0354E24C LDR X8, [X8 + 0xC0]
	0x0354E250 LDR X2, [X8 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE92000
	005 Move W8, [X20+3222]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBA6000
	012 Move X0, [X0+2760]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3222], W8
	016 Move X8, [X19+48]
	017 Compare X8, 0
	018 JumpIfEqual {33}
	019 Move X8, [X8+24]
	020 Compare X8, 0
	021 JumpIfEqual {33}
	022 Move X8, 0xBA6000
	023 Move X8, [X8+2760]
	024 Move W1, W31
	025 Move X0, [X8]
	026 Call 0x1C17D6C
	027 Move X2, [X19+48]
	028 Move X1, X0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move W0, W31
	036 Move X30, [X31+32]
	037 Return X0

Method: System.Boolean SetExpectedUsers(System.String[] newExpectedUsers)

Disassembly:
	0x0354E348 LDR X23, [X9 + 0x18]
	0x0354E34C CBZ X23, 0x354E368
	0x0354E350 LDR X8, [X22]
	0x0354E354 MOV X0, X23
	0x0354E358 LDR X1, [X8 + 0x40]
	0x0354E35C BL 0x1C16E00
	0x0354E360 CBZ X0, 0x354E87C
	0x0354E364 LDR W8, [X22 + 0x18]
	0x0354E368 CMP W8, 0x1
	0x0354E36C B.LS 0x354E878
	0x0354E370 ADRP X8, 0xBAD000
	0x0354E374 LDR X8, [X8 + 0xEE0]
	0x0354E378 STR X23, [X22 + 0x28]
	0x0354E37C LDR X0, [X8]
	0x0354E380 LDR W8, [X0 + 0xE0]
	0x0354E384 CBNZ W8, 0x354E38C
	0x0354E388 BL 0x1C16DFC
	0x0354E38C MOV X0, X31
	0x0354E390 BL 0x350147C
	0x0354E394 MOV X23, X0
	0x0354E398 CBZ X0, 0x354E3B0
	0x0354E39C LDR X8, [X22]
	0x0354E3A0 MOV X0, X23
	0x0354E3A4 LDR X1, [X8 + 0x40]
	0x0354E3A8 BL 0x1C16E00
	0x0354E3AC CBZ X0, 0x354E87C
	0x0354E3B0 LDR W8, [X22 + 0x18]
	0x0354E3B4 CMP W8, 0x2
	0x0354E3B8 B.LS 0x354E878
	0x0354E3BC ADRP X8, 0xBA7000
	0x0354E3C0 LDR X8, [X8 + 0xE78]
	0x0354E3C4 STR X23, [X22 + 0x30]
	0x0354E3C8 ADRP X23, 0xBA5000
	0x0354E3CC MOV X0, X21
	0x0354E3D0 LDR X1, [X8]
	0x0354E3D4 LDR X23, [X23 + 0x838]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE92000
	006 Move W8, [X21+3223]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBAF000
	014 Move X0, [X0+2576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3223], W8
	018 Compare X19, 0
	019 JumpIfEqual {32}
	020 Move X8, [X19+24]
	021 Compare X8, 0
	022 JumpIfEqual {32}
	023 Move X2, [X20+48]
	024 Move X0, X20
	025 Move X1, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Room.SetExpectedUsers, X0, X1, X2
	031 Return X0
	032 Move X0, [X20+96]
	033 Compare X0, 0
	034 JumpIfEqual {49}
	035 Move X9, 0xBAF000
	036 Move X8, [X0]
	037 Move X9, [X9+2576]
	038 Move W1, 1
	039 Move X3, [X8+544]
	040 Move X2, [X9]
	041 Move X9, [X8+536]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W0, W31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Boolean SetExpectedUsers(System.String[] newExpectedUsers, System.String[] oldExpectedUsers)

Disassembly:
	0x0354E254 BL 0x301BF90
	0x0354E258 LDR X0, [X20]
	0x0354E25C BL 0x1C16F10
	0x0354E260 MOV X1, X31
	0x0354E264 MOV X20, X0
	0x0354E268 BL 0x3231AC4
	0x0354E26C LDR X8, [X19 + 0x28]
	0x0354E270 CBZ X8, 0x354E874
	0x0354E274 LDR X0, [X8 + 0x20]
	0x0354E278 MOV X1, X31
	0x0354E27C BL 0x32277A8
	0x0354E280 LDR X8, [X19 + 0x28]
	0x0354E284 TBZ X0, 0x0, 0x354E290
	0x0354E288 CBNZ X8, 0x354E2A8
	0x0354E28C B 0x354E874
	0x0354E290 CBZ X8, 0x354E874
	0x0354E294 LDR X0, [X8 + 0x20]
	0x0354E298 CBZ X0, 0x354E874
	0x0354E29C LDR W9, [X0 + 0x10]
	0x0354E2A0 CMP W9, 0x8
	0x0354E2A4 B.GE 0x354E2B0
	0x0354E2A8 LDR X23, [X8 + 0x20]
	0x0354E2AC B 0x354E2D8
	0x0354E2B0 MOVZ W2, 0x8
	0x0354E2B4 MOV W1, W31
	0x0354E2B8 MOV X3, X31
	0x0354E2BC BL 0x3228DE4
	0x0354E2C0 ADRP X8, 0xBAD000
	0x0354E2C4 LDR X8, [X8 + 0xE50]
	0x0354E2C8 MOV X2, X31
	0x0354E2CC LDR X1, [X8]
	0x0354E2D0 BL 0x321B938
	0x0354E2D4 MOV X23, X0
	0x0354E2D8 MOV X0, X19
	0x0354E2DC BL 0x354EA04
	0x0354E2E0 CBZ X20, 0x354E874
	0x0354E2E4 ADRP X8, 0xBAE000
	0x0354E2E8 LDR X8, [X8 + 0xAA0]
	0x0354E2EC ADRP X24, 0xBA5000
	0x0354E2F0 MOV X2, X0
	0x0354E2F4 MOV X0, X20
	0x0354E2F8 LDR X1, [X8]
	0x0354E2FC LDR X24, [X24 + 0x9D0]
	0x0354E300 MOV X3, X31
	0x0354E304 BL 0x3234224
	0x0354E308 LDR X0, [X24]
	0x0354E30C MOVZ W1, 0x5
	0x0354E310 BL 0x1C16D6C
	0x0354E314 CBZ X0, 0x354E874
	0x0354E318 MOV X22, X0
	0x0354E31C CBZ X23, 0x354E334
	0x0354E320 LDR X8, [X22]
	0x0354E324 MOV X0, X23
	0x0354E328 LDR X1, [X8 + 0x40]
	0x0354E32C BL 0x1C16E00
	0x0354E330 CBZ X0, 0x354E87C
	0x0354E334 LDR W8, [X22 + 0x18]
	0x0354E338 CBZ W8, 0x354E878
	0x0354E33C STR X23, [X22 + 0x20]
	0x0354E340 LDR X9, [X19 + 0x28]
	0x0354E344 CBZ X9, 0x354E874

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE92000
	008 Move W8, [X21+3224]
	009 Move X20, X2
	010 Move X22, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBAE000
	017 Move X0, [X0+3488]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3224], W8
	021 Move W8, [X19+104]
	022 Compare W8, 0
	023 JumpIfEqual {32}
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move W0, W31
	029 Move X30, [X31+48]
	030 Move X23, [X31+56]
	031 Return X0
	032 Move X23, 0xBAE000
	033 Move X23, [X23+3488]
	034 Move X0, [X23]
	035 Call 0x1C17F10
	036 Move W1, 1
	037 Move X2, X31
	038 Move X21, X0
	039 Call Hashtable..ctor, X0, X1
	040 Compare X21, 0
	041 JumpIfEqual {78}
	042 Move W1, 247
	043 Move X0, X21
	044 Move X2, X22
	045 Move X3, X31
	046 Call Hashtable.Add, X0, X1, X2
	047 Compare X20, 0
	048 JumpIfEqual {62}
	049 Move X0, [X23]
	050 Call 0x1C17F10
	051 Move W1, 1
	052 Move X2, X31
	053 Move X22, X0
	054 Call Hashtable..ctor, X0, X1
	055 Compare X22, 0
	056 JumpIfEqual {78}
	057 Move W1, 247
	058 Move X0, X22
	059 Move X2, X20
	060 Move X3, X31
	061 Call Hashtable.Add, X0, X1, X2
	062 Move X22, X31
	063 Move X0, [X19+96]
	064 Compare X0, 0
	065 JumpIfEqual {78}
	066 Move X1, X21
	067 Move X2, X22
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X3, X31
	073 Move X4, X31
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	077 Return X0
	078 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0354E3D8 BL 0x301DDC4
	0x0354E3DC LDR X8, [X23]
	0x0354E3E0 MOV X1, X0
	0x0354E3E4 MOV X2, X31
	0x0354E3E8 MOV X0, X8
	0x0354E3EC BL 0x3227FF8
	0x0354E3F0 MOV X21, X0
	0x0354E3F4 CBZ X0, 0x354E40C
	0x0354E3F8 LDR X8, [X22]
	0x0354E3FC MOV X0, X21
	0x0354E400 LDR X1, [X8 + 0x40]
	0x0354E404 BL 0x1C16E00
	0x0354E408 CBZ X0, 0x354E87C
	0x0354E40C LDR W8, [X22 + 0x18]
	0x0354E410 CMP W8, 0x3
	0x0354E414 B.LS 0x354E878
	0x0354E418 STR X21, [X22 + 0x38]
	0x0354E41C LDR X8, [X19 + 0x28]
	0x0354E420 CBZ X8, 0x354E874
	0x0354E424 LDR X8, [X8 + 0x10]
	0x0354E428 CBZ X8, 0x354E874
	0x0354E42C ADRP X9, 0xBAE000
	0x0354E430 LDR X9, [X9 + 0xA50]
	0x0354E434 LDR W8, [X8 + 0x20]
	0x0354E438 ADD X1, X31, 0x8
	0x0354E43C LDR X0, [X9]
	0x0354E440 STR W8, [X31 + 0x8]
	0x0354E444 BL 0x1C16E04
	0x0354E448 MOV X21, X0
	0x0354E44C CBZ X0, 0x354E464
	0x0354E450 LDR X8, [X22]
	0x0354E454 MOV X0, X21
	0x0354E458 LDR X1, [X8 + 0x40]
	0x0354E45C BL 0x1C16E00
	0x0354E460 CBZ X0, 0x354E87C
	0x0354E464 LDR W8, [X22 + 0x18]
	0x0354E468 CMP W8, 0x4
	0x0354E46C B.LS 0x354E878
	0x0354E470 ADRP X8, 0xBAE000
	0x0354E474 LDR X8, [X8 + 0xA98]
	0x0354E478 STR X21, [X22 + 0x40]
	0x0354E47C MOV X0, X20
	0x0354E480 MOV X2, X22
	0x0354E484 LDR X1, [X8]
	0x0354E488 MOV X3, X31
	0x0354E48C BL 0x3234E54
	0x0354E490 LDR X8, [X19 + 0x28]
	0x0354E494 CBZ X8, 0x354E510
	0x0354E498 LDR X8, [X8 + 0x10]
	0x0354E49C CBZ X8, 0x354E510
	0x0354E4A0 ADRP X9, 0xBA5000
	0x0354E4A4 LDR X9, [X9 + 0x6C0]
	0x0354E4A8 LDR X21, [X8 + 0x38]
	0x0354E4AC LDR X0, [X9]
	0x0354E4B0 LDR W9, [X0 + 0xE0]
	0x0354E4B4 CBNZ W9, 0x354E4BC
	0x0354E4B8 BL 0x1C16DFC
	0x0354E4BC MOV X0, X21
	0x0354E4C0 MOV X1, X31
	0x0354E4C4 MOV X2, X31
	0x0354E4C8 BL 0x3395F0C
	0x0354E4CC TBZ X0, 0x0, 0x354E510
	0x0354E4D0 LDR X8, [X19 + 0x28]
	0x0354E4D4 CBZ X8, 0x354E874
	0x0354E4D8 LDR X8, [X8 + 0x10]
	0x0354E4DC CBZ X8, 0x354E874
	0x0354E4E0 LDR X0, [X8 + 0x38]
	0x0354E4E4 CBZ X0, 0x354E874
	0x0354E4E8 LDR X8, [X0]
	0x0354E4EC LDP X9, X1, [X8 + 0x1A8]
	0x0354E4F0 BLR X9
	0x0354E4F4 ADRP X8, 0xBAE000
	0x0354E4F8 LDR X8, [X8 + 0xA60]
	0x0354E4FC MOV X2, X0
	0x0354E500 MOV X0, X20
	0x0354E504 MOV X3, X31
	0x0354E508 LDR X1, [X8]
	0x0354E50C BL 0x3234224
	0x0354E510 LDR X0, [X24]
	0x0354E514 MOVZ W1, 0x4
	0x0354E518 BL 0x1C16D6C
	0x0354E51C LDR X8, [X19 + 0x28]
	0x0354E520 CBZ X8, 0x354E874
	0x0354E524 MOV X21, X0
	0x0354E528 MOV X0, X8
	0x0354E52C MOV X1, X31
	0x0354E530 BL 0x3538F70
	0x0354E534 CBZ X21, 0x354E874
	0x0354E538 MOV X22, X0
	0x0354E53C CBZ X0, 0x354E554
	0x0354E540 LDR X8, [X21]
	0x0354E544 MOV X0, X22
	0x0354E548 LDR X1, [X8 + 0x40]
	0x0354E54C BL 0x1C16E00
	0x0354E550 CBZ X0, 0x354E87C
	0x0354E554 LDR W8, [X21 + 0x18]
	0x0354E558 CBZ W8, 0x354E878
	0x0354E55C STR X22, [X21 + 0x20]
	0x0354E560 LDR X8, [X19 + 0x28]
	0x0354E564 CBZ X8, 0x354E874
	0x0354E568 ADRP X9, 0xBAE000
	0x0354E56C LDR X9, [X9 + 0xA78]
	0x0354E570 LDR X8, [X8 + 0x30]
	0x0354E574 LDR X22, [X9]
	0x0354E578 CBZ X8, 0x354E5B0
	0x0354E57C ADRP X9, 0xBE6000
	0x0354E580 LDR X9, [X9 + 0xFD8]
	0x0354E584 LDRB W8, [X8 + 0x10]
	0x0354E588 MOVN X10, 0x0
	0x0354E58C ADD X0, X31, 0x8
	0x0354E590 LDR X9, [X9]
	0x0354E594 MOV X1, X31
	0x0354E598 STRB W8, [X31 + 0x18]
	0x0354E59C STP X9, X10, [X31 + 0x8]
	0x0354E5A0 BL 0x33B162C
	0x0354E5A4 MOV X23, X0
	0x0354E5A8 CBNZ X23, 0x354E5C0
	0x0354E5AC B 0x354E5D4
	0x0354E5B0 ADRP X8, 0xBAE000
	0x0354E5B4 LDR X8, [X8 + 0xA58]
	0x0354E5B8 LDR X23, [X8]
	0x0354E5BC CBZ X23, 0x354E5D4
	0x0354E5C0 LDR X8, [X21]
	0x0354E5C4 MOV X0, X23
	0x0354E5C8 LDR X1, [X8 + 0x40]
	0x0354E5CC BL 0x1C16E00
	0x0354E5D0 CBZ X0, 0x354E87C
	0x0354E5D4 LDR W8, [X21 + 0x18]
	0x0354E5D8 CMP W8, 0x1
	0x0354E5DC B.LS 0x354E878
	0x0354E5E0 STR X23, [X21 + 0x28]
	0x0354E5E4 LDR X8, [X19 + 0x28]
	0x0354E5E8 CBZ X8, 0x354E874
	0x0354E5EC ADRP X9, 0xBE6000
	0x0354E5F0 LDR X9, [X9 + 0xB40]
	0x0354E5F4 LDR W8, [X8 + 0x38]
	0x0354E5F8 ADD X1, X31, 0x8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE92000
	009 Move X21, 0xBA6000
	010 Move W8, [X20+3225]
	011 Move X21, [X21+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xBA6000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0xBA6000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xBAF000
	024 Move X0, [X0+2584]
	025 Call 0x1C17CF4
	026 Move X0, 0xBAF000
	027 Move X0, [X0+2592]
	028 Call 0x1C17CF4
	029 Move X0, 0xBAF000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move X0, 0xBAF000
	033 Move X0, [X0+2608]
	034 Call 0x1C17CF4
	035 Move X0, 0xBAF000
	036 Move X0, [X0+2616]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+3225], W8
	040 Move X0, [X21]
	041 Move W1, 5
	042 Call 0x1C17D6C
	043 Compare X0, 0
	044 JumpIfEqual {154}
	045 Move X21, [X19+64]
	046 Move X20, X0
	047 Compare X21, 0
	048 JumpIfEqual {55}
	049 Move X8, [X20]
	050 Move X0, X21
	051 Move X1, [X8+64]
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfEqual {151}
	055 Move W8, [X20+24]
	056 Compare W8, 0
	057 JumpIfEqual {150}
	058 Move [X20+32], X21
	059 Move W9, [X19+57]
	060 Move X10, 0xBAF000
	061 Move X11, 0xBAF000
	062 Move X12, 0xBAF000
	063 Move X10, [X10+2616]
	064 Move X11, [X11+2584]
	065 Move X12, [X12+2608]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X21, [X10]
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move X22, [X9]
	070 Compare X22, 0
	071 JumpIfEqual {79}
	072 Move X8, [X20]
	073 Move X0, X22
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {151}
	078 Move W8, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X20+40], X22
	081 Move W9, [X19+56]
	082 Move X10, 0xBAF000
	083 Move X11, 0xBAF000
	084 Move X10, [X10+2600]
	085 Move X11, [X11+2592]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 Move X22, [X9]
	089 Compare X22, 0
	090 JumpIfEqual {98}
	091 Move X8, [X20]
	092 Move X0, X22
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {151}
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X23, 0xBA6000
	100 Move X23, [X23+1880]
	101 Move [X20+48], X22
	102 Move W8, [X19+32]
	103 Add X1, X31, 12
	104 Move X0, [X23]
	105 Move [X31+12], W8
	106 Call 0x1C17E04
	107 Move X22, X0
	108 Compare X0, 0
	109 JumpIfEqual {116}
	110 Move X8, [X20]
	111 Move X0, X22
	112 Move X1, [X8+64]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {151}
	116 Move W8, [X20+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X19
	119 Move [X20+56], X22
	120 Call Room.get_PlayerCount, X0
	121 Move X8, [X23]
	122 Move [X31+8], W0
	123 Add X1, X31, 8
	124 Move X0, X8
	125 Call 0x1C17E04
	126 Move X19, X0
	127 Compare X0, 0
	128 JumpIfEqual {135}
	129 Move X8, [X20]
	130 Move X0, X19
	131 Move X1, [X8+64]
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {151}
	135 Move W8, [X20+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Move [X20+64], X19
	141 Call String.Format, X0, X1
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X30, [X31+16]
	147 Move X23, [X31+24]
	148 Add X31, X31, 64
	149 Return X0
	150 Call 0x1C17F28
	151 Call 0x1C17F44
	152 Move X1, X31
	153 Call 0x1C17DEC
	154 Call 0x1C17F20

Method: System.String ToStringFull()

Disassembly:
	0x0354E5FC LDR X0, [X9]
	0x0354E600 STR W8, [X31 + 0x8]
	0x0354E604 BL 0x1C16E04
	0x0354E608 MOV X23, X0
	0x0354E60C CBZ X0, 0x354E624
	0x0354E610 LDR X8, [X21]
	0x0354E614 MOV X0, X23
	0x0354E618 LDR X1, [X8 + 0x40]
	0x0354E61C BL 0x1C16E00
	0x0354E620 CBZ X0, 0x354E87C
	0x0354E624 LDR W8, [X21 + 0x18]
	0x0354E628 CMP W8, 0x2
	0x0354E62C B.LS 0x354E878
	0x0354E630 STR X23, [X21 + 0x30]
	0x0354E634 LDR X8, [X19 + 0x28]
	0x0354E638 CBZ X8, 0x354E874
	0x0354E63C ADRP X9, 0xBE6000
	0x0354E640 LDR X9, [X9 + 0xFB0]
	0x0354E644 LDR W8, [X8 + 0x3C]
	0x0354E648 ADD X1, X31, 0x2C
	0x0354E64C LDR X0, [X9]
	0x0354E650 STR W8, [X31 + 0x2C]
	0x0354E654 BL 0x1C16E04
	0x0354E658 MOV X23, X0
	0x0354E65C CBZ X0, 0x354E674
	0x0354E660 LDR X8, [X21]
	0x0354E664 MOV X0, X23
	0x0354E668 LDR X1, [X8 + 0x40]
	0x0354E66C BL 0x1C16E00
	0x0354E670 CBZ X0, 0x354E87C
	0x0354E674 LDR W8, [X21 + 0x18]
	0x0354E678 CMP W8, 0x3
	0x0354E67C B.LS 0x354E878
	0x0354E680 MOV X0, X20
	0x0354E684 MOV X1, X22
	0x0354E688 MOV X2, X21
	0x0354E68C MOV X3, X31
	0x0354E690 STR X23, [X21 + 0x38]
	0x0354E694 BL 0x3234E54
	0x0354E698 LDR X8, [X19 + 0x28]
	0x0354E69C CBZ X8, 0x354E874
	0x0354E6A0 ADRP X9, 0xBE6000
	0x0354E6A4 LDR X9, [X9 + 0xB50]
	0x0354E6A8 LDR W8, [X8 + 0x90]
	0x0354E6AC ADRP X21, 0xBAE000
	0x0354E6B0 ADD X1, X31, 0x28
	0x0354E6B4 LDR X0, [X9]
	0x0354E6B8 LDR X21, [X21 + 0xA80]
	0x0354E6BC STR W8, [X31 + 0x28]
	0x0354E6C0 BL 0x1C16E04
	0x0354E6C4 LDR X1, [X21]
	0x0354E6C8 MOV X2, X0
	0x0354E6CC MOV X0, X20
	0x0354E6D0 MOV X3, X31
	0x0354E6D4 BL 0x3234224
	0x0354E6D8 LDR X8, [X19 + 0x28]
	0x0354E6DC CBZ X8, 0x354E874
	0x0354E6E0 LDR X0, [X8 + 0x10]
	0x0354E6E4 CBZ X0, 0x354E874
	0x0354E6E8 ADRP X21, 0xBAE000
	0x0354E6EC LDR X21, [X21 + 0xA70]
	0x0354E6F0 MOV X1, X31
	0x0354E6F4 BL 0x3501B78
	0x0354E6F8 LDR X1, [X21]
	0x0354E6FC MOV X2, X0
	0x0354E700 MOV X0, X20
	0x0354E704 MOV X3, X31
	0x0354E708 BL 0x3234224
	0x0354E70C LDR X0, [X24]
	0x0354E710 MOVZ W1, 0x4
	0x0354E714 BL 0x1C16D6C
	0x0354E718 LDR X8, [X19 + 0x28]
	0x0354E71C CBZ X8, 0x354E874
	0x0354E720 MOV X21, X0
	0x0354E724 CBZ X0, 0x354E874
	0x0354E728 LDR X22, [X8 + 0x58]
	0x0354E72C CBZ X22, 0x354E744
	0x0354E730 LDR X8, [X21]
	0x0354E734 MOV X0, X22
	0x0354E738 LDR X1, [X8 + 0x40]
	0x0354E73C BL 0x1C16E00
	0x0354E740 CBZ X0, 0x354E87C
	0x0354E744 LDR W8, [X21 + 0x18]
	0x0354E748 CBZ W8, 0x354E878
	0x0354E74C STR X22, [X21 + 0x20]
	0x0354E750 LDR X0, [X19 + 0x28]
	0x0354E754 CBZ X0, 0x354E874
	0x0354E758 MOV X1, X31
	0x0354E75C BL 0x35389C4
	0x0354E760 MOV X22, X0
	0x0354E764 CBZ X0, 0x354E77C
	0x0354E768 LDR X8, [X21]
	0x0354E76C MOV X0, X22
	0x0354E770 LDR X1, [X8 + 0x40]
	0x0354E774 BL 0x1C16E00
	0x0354E778 CBZ X0, 0x354E87C
	0x0354E77C LDR W8, [X21 + 0x18]
	0x0354E780 CMP W8, 0x1
	0x0354E784 B.LS 0x354E878
	0x0354E788 STR X22, [X21 + 0x28]
	0x0354E78C LDR X8, [X19 + 0x28]
	0x0354E790 CBZ X8, 0x354E874
	0x0354E794 LDR X0, [X8 + 0x10]
	0x0354E798 CBZ X0, 0x354E874
	0x0354E79C MOV X1, X31
	0x0354E7A0 BL 0x3502290
	0x0354E7A4 MOV X22, X0
	0x0354E7A8 CBZ X0, 0x354E7C0
	0x0354E7AC LDR X8, [X21]
	0x0354E7B0 MOV X0, X22
	0x0354E7B4 LDR X1, [X8 + 0x40]
	0x0354E7B8 BL 0x1C16E00
	0x0354E7BC CBZ X0, 0x354E87C
	0x0354E7C0 LDR W8, [X21 + 0x18]
	0x0354E7C4 CMP W8, 0x2
	0x0354E7C8 B.LS 0x354E878
	0x0354E7CC STR X22, [X21 + 0x30]
	0x0354E7D0 LDR X9, [X19 + 0x28]
	0x0354E7D4 CBZ X9, 0x354E874
	0x0354E7D8 LDR X19, [X9 + 0x140]
	0x0354E7DC CBZ X19, 0x354E7F8
	0x0354E7E0 LDR X8, [X21]
	0x0354E7E4 MOV X0, X19
	0x0354E7E8 LDR X1, [X8 + 0x40]
	0x0354E7EC BL 0x1C16E00
	0x0354E7F0 CBZ X0, 0x354E87C
	0x0354E7F4 LDR W8, [X21 + 0x18]
	0x0354E7F8 CMP W8, 0x3
	0x0354E7FC B.LS 0x354E878
	0x0354E800 ADRP X8, 0xBAE000
	0x0354E804 LDR X8, [X8 + 0xAA8]
	0x0354E808 STR X19, [X21 + 0x38]
	0x0354E80C ADRP X19, 0xBA5000
	0x0354E810 MOV X0, X20
	0x0354E814 LDR X1, [X8]
	0x0354E818 LDR X19, [X19 + 0xA28]
	0x0354E81C MOV X2, X21
	0x0354E820 MOV X3, X31
	0x0354E824 BL 0x3234E54
	0x0354E828 LDR X8, [X20]
	0x0354E82C MOV X0, X20
	0x0354E830 LDP X9, X1, [X8 + 0x168]
	0x0354E834 BLR X9
	0x0354E838 LDR X8, [X19]
	0x0354E83C MOV X19, X0
	0x0354E840 LDR W9, [X8 + 0xE0]
	0x0354E844 CBNZ W9, 0x354E850
	0x0354E848 MOV X0, X8
	0x0354E84C BL 0x1C16DFC
	0x0354E850 MOV X0, X19
	0x0354E854 MOV X1, X31
	0x0354E858 BL 0x3C06A04
	0x0354E85C LDP X20, X19, [X31 + 0x50]
	0x0354E860 LDP X22, X21, [X31 + 0x40]
	0x0354E864 LDP X24, X23, [X31 + 0x30]
	0x0354E868 LDR X30, [X31 + 0x20]
	0x0354E86C ADD X31, X31, 0x60
	0x0354E870 RET
	0x0354E874 BL 0x1C16F20
	0x0354E878 BL 0x1C16F28
	0x0354E87C BL 0x1C16F44

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE92000
	009 Move X21, 0xBA6000
	010 Move W8, [X20+3226]
	011 Move X21, [X21+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0xBE7000
	018 Move X0, [X0+2984]
	019 Call 0x1C17CF4
	020 Move X0, 0xBA6000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0xBA6000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0xBAF000
	027 Move X0, [X0+2584]
	028 Call 0x1C17CF4
	029 Move X0, 0xBAF000
	030 Move X0, [X0+2624]
	031 Call 0x1C17CF4
	032 Move X0, 0xBAF000
	033 Move X0, [X0+2592]
	034 Call 0x1C17CF4
	035 Move X0, 0xBAF000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move X0, 0xBAF000
	039 Move X0, [X0+2608]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+3226], W8
	043 Move X0, [X21]
	044 Move W1, 6
	045 Call 0x1C17D6C
	046 Compare X0, 0
	047 JumpIfEqual {180}
	048 Move X21, [X19+64]
	049 Move X20, X0
	050 Compare X21, 0
	051 JumpIfEqual {58}
	052 Move X8, [X20]
	053 Move X0, X21
	054 Move X1, [X8+64]
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {177}
	058 Move W8, [X20+24]
	059 Compare W8, 0
	060 JumpIfEqual {176}
	061 Move [X20+32], X21
	062 Move W9, [X19+57]
	063 Move X10, 0xBAF000
	064 Move X11, 0xBAF000
	065 Move X12, 0xBAF000
	066 Move X10, [X10+2624]
	067 Move X11, [X11+2584]
	068 Move X12, [X12+2608]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X21, [X10]
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 Move X22, [X9]
	073 Compare X22, 0
	074 JumpIfEqual {82}
	075 Move X8, [X20]
	076 Move X0, X22
	077 Move X1, [X8+64]
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {177}
	081 Move W8, [X20+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X20+40], X22
	084 Move W9, [X19+56]
	085 Move X10, 0xBAF000
	086 Move X11, 0xBAF000
	087 Move X10, [X10+2600]
	088 Move X11, [X11+2592]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Move X22, [X9]
	092 Compare X22, 0
	093 JumpIfEqual {101}
	094 Move X8, [X20]
	095 Move X0, X22
	096 Move X1, [X8+64]
	097 Call 0x1C17E00
	098 Compare X0, 0
	099 JumpIfEqual {177}
	100 Move W8, [X20+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X23, 0xBA6000
	103 Move X23, [X23+1880]
	104 Move [X20+48], X22
	105 Move W8, [X19+32]
	106 Add X1, X31, 12
	107 Move X0, [X23]
	108 Move [X31+12], W8
	109 Call 0x1C17E04
	110 Move X22, X0
	111 Compare X0, 0
	112 JumpIfEqual {119}
	113 Move X8, [X20]
	114 Move X0, X22
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {177}
	119 Move W8, [X20+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, X19
	122 Move [X20+56], X22
	123 Call Room.get_PlayerCount, X0
	124 Move X8, [X23]
	125 Move [X31+8], W0
	126 Add X1, X31, 8
	127 Move X0, X8
	128 Call 0x1C17E04
	129 Move X22, X0
	130 Compare X0, 0
	131 JumpIfEqual {138}
	132 Move X8, [X20]
	133 Move X0, X22
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {177}
	138 Move W8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, 0xBE7000
	141 Move X8, [X8+2984]
	142 Move [X20+64], X22
	143 Move X19, [X19+24]
	144 Move X0, [X8]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X0, X19
	150 Move X1, X31
	151 Call Extensions.ToStringFull, X0
	152 Move X19, X0
	153 Compare X0, 0
	154 JumpIfEqual {161}
	155 Move X8, [X20]
	156 Move X0, X19
	157 Move X1, [X8+64]
	158 Call 0x1C17E00
	159 Compare X0, 0
	160 JumpIfEqual {177}
	161 Move W8, [X20+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X21
	164 Move X1, X20
	165 Move X2, X31
	166 Move [X20+72], X19
	167 Call String.Format, X0, X1
	168 Move X20, [X31+48]
	169 Move X19, [X31+56]
	170 Move X22, [X31+32]
	171 Move X21, [X31+40]
	172 Move X30, [X31+16]
	173 Move X23, [X31+24]
	174 Add X31, X31, 64
	175 Return X0
	176 Call 0x1C17F28
	177 Call 0x1C17F44
	178 Move X1, X31
	179 Call 0x1C17DEC
	180 Call 0x1C17F20

