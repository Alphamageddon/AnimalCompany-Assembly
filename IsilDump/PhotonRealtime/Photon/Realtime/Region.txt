Type: Photon.Realtime.Region

Method: System.String get_Code()

Disassembly:
	0x0354AB04 BL 0x1C16DFC
	0x0354AB08 MOV X0, X19

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Code(System.String value)

Disassembly:
	0x0354AB0C MOV X1, X31
	0x0354AB10 MOV X2, X31

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Cluster()

Disassembly:
	0x0354AB14 BL 0x3395194
	0x0354AB18 TBNZ X0, 0x0, 0x354AB64

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Cluster(System.String value)

Disassembly:
	0x0354AB1C LDR X8, [X21]
	0x0354AB20 ADRP X9, 0xBEB000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_HostAndPort()

Disassembly:
	0x0354AB24 LDR X0, [X22]
	0x0354AB28 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_HostAndPort(System.String value)

Disassembly:
	0x0354AB2C LDR X9, [X9 + 0x68]
	0x0354AB30 LDR W10, [X0 + 0xE0]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int32 get_Ping()

Disassembly:
	0x0354AB34 LDR X19, [X8]
	0x0354AB38 LDR X20, [X9]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_Ping(System.Int32 value)

Disassembly:
	0x0354AB3C CBNZ W10, 0x354AB44
	0x0354AB40 BL 0x1C16DFC

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Boolean get_WasPinged()

Disassembly:
	0x0354AB44 MOV X0, X20
	0x0354AB48 MOV X1, X31
	0x0354AB4C BL 0x338C698
	0x0354AB50 MOV X1, X0
	0x0354AB54 MOV X0, X19

ISIL:
	001 Move W8, [X0+40]
	002 Move TEMP, 0x80000000
	003 Not TEMP
	004 Move W9, TEMP
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0

Method: System.Void .ctor(System.String code, System.String address)

Disassembly:
	0x0354AB58 MOV X2, X31
	0x0354AB5C BL 0x3395194
	0x0354AB60 TBZ X0, 0x0, 0x354AB84
	0x0354AB64 ADRP X8, 0xBEB000
	0x0354AB68 LDR X8, [X8 + 0x70]
	0x0354AB6C LDR X0, [X8]
	0x0354AB70 BL 0x1C16F10
	0x0354AB74 MOV X1, X31
	0x0354AB78 MOV X19, X0
	0x0354AB7C BL 0x354922C
	0x0354AB80 CBNZ X19, 0x354AC08
	0x0354AB84 LDR X8, [X21]
	0x0354AB88 LDR X0, [X22]
	0x0354AB8C LDR X8, [X8 + 0xB8]
	0x0354AB90 LDR W9, [X0 + 0xE0]
	0x0354AB94 LDR X19, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move X0, X21
	011 Move X1, X20
	012 Call Region.SetCodeAndCluster, X0, X1
	013 Move [X21+32], X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move TEMP, 0x80000000
	017 Not TEMP
	018 Move W8, TEMP
	019 Move [X21+40], W8
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 

Method: System.Void .ctor(System.String code, System.Int32 ping)

Disassembly:
	0x0354AC8C LDR X0, [X0 + 0xE60]
	0x0354AC90 BL 0x1C16CF4
	0x0354AC94 ADRP X0, 0xBB2000
	0x0354AC98 LDR X0, [X0 + 0x958]
	0x0354AC9C BL 0x1C16CF4
	0x0354ACA0 ADRP X0, 0xBB2000
	0x0354ACA4 LDR X0, [X0 + 0x960]
	0x0354ACA8 BL 0x1C16CF4
	0x0354ACAC ADRP X0, 0xBA9000
	0x0354ACB0 LDR X0, [X0 + 0xDE0]
	0x0354ACB4 BL 0x1C16CF4
	0x0354ACB8 MOVZ W8, 0x1
	0x0354ACBC STRB W8, [X20 + 0xC7D]
	0x0354ACC0 LDR X8, [X19 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move X0, X21
	011 Move X1, X20
	012 Call Region.SetCodeAndCluster, X0, X1
	013 Move [X21+40], W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Return 

Method: System.Void SetCodeAndCluster(System.String codeAsString)

Disassembly:
	0x0354AB98 CBNZ W9, 0x354ABA0
	0x0354AB9C BL 0x1C16DFC
	0x0354ABA0 MOV X0, X19
	0x0354ABA4 MOV X1, X31
	0x0354ABA8 MOV X2, X31
	0x0354ABAC BL 0x3395F0C
	0x0354ABB0 MOV X19, X31
	0x0354ABB4 TBZ X0, 0x0, 0x354AC08
	0x0354ABB8 LDR X8, [X21]
	0x0354ABBC MOV X1, X31
	0x0354ABC0 LDR X8, [X8 + 0xB8]
	0x0354ABC4 LDR X0, [X8]
	0x0354ABC8 BL 0x33A703C
	0x0354ABCC MOV X19, X0
	0x0354ABD0 CBZ X0, 0x354AC08
	0x0354ABD4 ADRP X9, 0xBEA000
	0x0354ABD8 LDR X9, [X9 + 0xFF8]
	0x0354ABDC LDR X8, [X19]
	0x0354ABE0 LDR X1, [X9]
	0x0354ABE4 LDRB W10, [X8 + 0x130]
	0x0354ABE8 LDRB W9, [X1 + 0x130]
	0x0354ABEC CMP W10, W9
	0x0354ABF0 B.CC 0x354AC1C
	0x0354ABF4 LDR X8, [X8 + 0xC8]
	0x0354ABF8 ADD X8, X8, X9, 0x3, LSL
	0x0354ABFC LDUR X8, [X8 - 0x8]
	0x0354AC00 CMP X8, X1
	0x0354AC04 B.NE 0x354AC1C
	0x0354AC08 MOV X0, X19
	0x0354AC0C LDP X20, X19, [X31 + 0x20]
	0x0354AC10 LDP X22, X21, [X31 + 0x10]
	0x0354AC14 LDR X30, [X31], #0x30
	0x0354AC18 RET
	0x0354AC1C MOV X0, X19
	0x0354AC20 BL 0x1C171E0
	0x0354AC24 STP X30, X23, [X31 - 0x30]!
	0x0354AC28 STP X22, X21, [X31 + 0x10]
	0x0354AC2C STP X20, X19, [X31 + 0x20]
	0x0354AC30 ADRP X20, 0xE95000
	0x0354AC34 LDRB W8, [X20 + 0xC7D]
	0x0354AC38 MOV X19, X0
	0x0354AC3C TBNZ X8, 0x0, 0x354ACC0
	0x0354AC40 ADRP X0, 0xBB2000
	0x0354AC44 LDR X0, [X0 + 0x940]
	0x0354AC48 BL 0x1C16CF4
	0x0354AC4C ADRP X0, 0xBAA000
	0x0354AC50 LDR X0, [X0 + 0xE20]
	0x0354AC54 BL 0x1C16CF4
	0x0354AC58 ADRP X0, 0xBAA000
	0x0354AC5C LDR X0, [X0 + 0xE30]
	0x0354AC60 BL 0x1C16CF4
	0x0354AC64 ADRP X0, 0xBEB000
	0x0354AC68 LDR X0, [X0 + 0x78]
	0x0354AC6C BL 0x1C16CF4
	0x0354AC70 ADRP X0, 0xBEB000
	0x0354AC74 LDR X0, [X0 + 0x80]
	0x0354AC78 BL 0x1C16CF4
	0x0354AC7C ADRP X0, 0xBEA000
	0x0354AC80 LDR X0, [X0 + 0xE38]
	0x0354AC84 BL 0x1C16CF4
	0x0354AC88 ADRP X0, 0xBB1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE96000
	007 Move W8, [X21+3183]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBAA000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3183], W8
	019 Compare X20, 0
	020 JumpIfEqual {52}
	021 Move X0, X20
	022 Move X1, X31
	023 Call String.ToLower, X0
	024 Compare X0, 0
	025 JumpIfEqual {71}
	026 Move W1, 47
	027 Move X2, X31
	028 Move X20, X0
	029 Call String.IndexOf, X0, X1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W21, W0
	035 Move X0, X20
	036 Move W1, W31
	037 Move W2, W21
	038 Move X3, X31
	039 Call String.Substring, X0, X1, X2
	040 Compare X22, 0
	041 JumpIfEqual {71}
	042 Move [X22+16], X0
	043 Move W8, [X20+16]
	044 NotImplemented "Instruction ORN not yet implemented."
	045 Add W1, W21, 1
	046 Move X0, X20
	047 Add W2, W8, W9
	048 Move X3, X31
	049 Call String.Substring, X0, X1, X2
	050 Compare X19, 0
	051 JumpIfNotEqual {64}
	052 Move X8, 0xBAA000
	053 Move X8, [X8+2440]
	054 Move X0, [X8]
	055 Move [X19+16], X0
	056 Compare X8, 0
	057 JumpIfEqual {71}
	058 Move [X8+16], X20
	059 Move X8, 0xBAA000
	060 Move X8, [X8+2440]
	061 Move X0, [X8]
	062 Compare X19, 0
	063 JumpIfEqual {71}
	064 Move [X19+24], X0
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0354ACC4 CBZ X8, 0x354AE54
	0x0354ACC8 LDR X20, [X8 + 0x20]

ISIL:
	001 Move W1, W31

Method: System.String ToString(System.Boolean compact = False)

Disassembly:
	0x0354ACCC CBZ X20, 0x354AE54
	0x0354ACD0 ADRP X21, 0xBEA000
	0x0354ACD4 LDR X21, [X21 + 0xE38]
	0x0354ACD8 MOVZ W1, 0x3A
	0x0354ACDC MOV X0, X20
	0x0354ACE0 MOV X2, X31
	0x0354ACE4 BL 0x322C668
	0x0354ACE8 CMP W0, 0x2
	0x0354ACEC B.LT 0x354AD08
	0x0354ACF0 MOV W2, W0
	0x0354ACF4 MOV X0, X20
	0x0354ACF8 MOV W1, W31
	0x0354ACFC MOV X3, X31
	0x0354AD00 BL 0x3228DE4
	0x0354AD04 MOV X20, X0
	0x0354AD08 LDR X0, [X21]
	0x0354AD0C ADRP X23, 0xBAA000
	0x0354AD10 ADRP X22, 0xBAA000
	0x0354AD14 LDR W8, [X0 + 0xE0]
	0x0354AD18 LDR X23, [X23 + 0xE30]
	0x0354AD1C LDR X22, [X22 + 0xE20]
	0x0354AD20 CBNZ W8, 0x354AD28
	0x0354AD24 BL 0x1C16DFC
	0x0354AD28 MOV X0, X20
	0x0354AD2C BL 0x354AECC
	0x0354AD30 STR X0, [X19 + 0x38]
	0x0354AD34 BL 0x354AA80
	0x0354AD38 STR X0, [X19 + 0x20]
	0x0354AD3C STRB W31, [X19 + 0x14]
	0x0354AD40 STR W31, [X19 + 0x10]
	0x0354AD44 LDR X8, [X21]
	0x0354AD48 LDR X0, [X23]
	0x0354AD4C LDR X8, [X8 + 0xB8]
	0x0354AD50 LDR W20, [X8]
	0x0354AD54 BL 0x1C16F10
	0x0354AD58 LDR X2, [X22]
	0x0354AD5C MOV W1, W20
	0x0354AD60 MOV X21, X0
	0x0354AD64 BL 0x2FDBF80
	0x0354AD68 LDRB W8, [X19 + 0x15]
	0x0354AD6C MOV W0, W31
	0x0354AD70 STR X21, [X19 + 0x28]
	0x0354AD74 CBNZ W8, 0x354AE44
	0x0354AD78 ADRP X8, 0xBB2000
	0x0354AD7C LDR X8, [X8 + 0x958]
	0x0354AD80 LDR X0, [X8]
	0x0354AD84 BL 0x1C16F10
	0x0354AD88 ADRP X8, 0xBEB000
	0x0354AD8C LDR X8, [X8 + 0x80]
	0x0354AD90 MOV X20, X0
	0x0354AD94 LDR X2, [X8]
	0x0354AD98 MOV X1, X19
	0x0354AD9C MOV X3, X31
	0x0354ADA0 BL 0x33E7508
	0x0354ADA4 MOV X0, X20
	0x0354ADA8 MOV X1, X31
	0x0354ADAC BL 0x33E9DCC
	0x0354ADB0 TBNZ X0, 0x0, 0x354AE40
	0x0354ADB4 ADRP X8, 0xBB2000
	0x0354ADB8 LDR X8, [X8 + 0x940]
	0x0354ADBC LDR X0, [X8]
	0x0354ADC0 BL 0x1C16F10
	0x0354ADC4 ADRP X8, 0xBEB000
	0x0354ADC8 LDR X8, [X8 + 0x78]
	0x0354ADCC MOV X1, X19
	0x0354ADD0 MOV X3, X31
	0x0354ADD4 MOV X20, X0
	0x0354ADD8 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE96000
	007 Move W8, [X21+3184]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xBAA000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move X0, 0xBAB000
	018 Move X0, [X0+3784]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB2000
	021 Move X0, [X0+4080]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB3000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3184], W8
	028 Move X21, [X19+16]
	029 Move X0, [X19+24]
	030 Move X1, X31
	031 Call String.IsNullOrEmpty, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {44}
	036 Move X8, 0xBAB000
	037 Move X8, [X8+3784]
	038 Move X2, [X19+24]
	039 Move X0, X21
	040 Move X3, X31
	041 Move X1, [X8]
	042 Call String.Concat, X0, X1, X2
	043 Move X21, X0
	044 Move X9, 0xBAA000
	045 Move W8, [X19+40]
	046 Move X9, [X9+1880]
	047 Move TEMP, X20
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {63}
	051 Move X0, [X9]
	052 Move X19, 0xBB2000
	053 Move X19, [X19+4080]
	054 Add X1, X31, 12
	055 Move [X31+12], W8
	056 Call 0x1C17E04
	057 Move X8, [X19]
	058 Move X2, X0
	059 Move X1, X21
	060 Move X3, X31
	061 Move X0, X8
	062 Call String.Format, X0, X1, X2
	063 Move X0, [X9]
	064 Move X20, 0xBB3000
	065 Move X20, [X20+2064]
	066 Add X1, X31, 8
	067 Move [X31+8], W8
	068 Call 0x1C17E04
	069 Move X8, [X20]
	070 Move X3, [X19+32]
	071 Move X2, X0
	072 Move X1, X21
	073 Move X0, X8
	074 Move X4, X31
	075 Call String.Format, X0, X1, X2, X3
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+16]
	079 Move X21, [X31+24]
	080 Add X31, X31, 48
	081 Return X0

