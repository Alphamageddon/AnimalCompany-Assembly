Type: Photon.Realtime.PingMono

Method: System.Boolean StartPing(System.String ip)

Disassembly:
	0x03549D58 LDR W8, [X19 + 0x28]
	0x03549D5C LDR X9, [X9 + 0x758]
	0x03549D60 TBZ X20, 0x0, 0x3549D98
	0x03549D64 LDR X0, [X9]
	0x03549D68 ADRP X19, 0xBB2000
	0x03549D6C LDR X19, [X19 + 0xFF0]
	0x03549D70 ADD X1, X31, 0xC
	0x03549D74 STR W8, [X31 + 0xC]
	0x03549D78 BL 0x1C16E04
	0x03549D7C LDR X8, [X19]
	0x03549D80 MOV X2, X0
	0x03549D84 MOV X1, X21
	0x03549D88 MOV X3, X31
	0x03549D8C MOV X0, X8
	0x03549D90 BL 0x3227BD4
	0x03549D94 B 0x3549DCC
	0x03549D98 LDR X0, [X9]
	0x03549D9C ADRP X20, 0xBB3000
	0x03549DA0 LDR X20, [X20 + 0x810]
	0x03549DA4 ADD X1, X31, 0x8
	0x03549DA8 STR W8, [X31 + 0x8]
	0x03549DAC BL 0x1C16E04
	0x03549DB0 LDR X8, [X20]
	0x03549DB4 LDR X3, [X19 + 0x20]
	0x03549DB8 MOV X2, X0
	0x03549DBC MOV X1, X21
	0x03549DC0 MOV X0, X8
	0x03549DC4 MOV X4, X31
	0x03549DC8 BL 0x3227C18
	0x03549DCC LDP X20, X19, [X31 + 0x20]
	0x03549DD0 LDP X30, X21, [X31 + 0x10]
	0x03549DD4 ADD X31, X31, 0x30
	0x03549DD8 RET
	0x03549DDC LDR X0, [X0 + 0x10]
	0x03549DE0 RET
	0x03549DE4 STR X1, [X0 + 0x10]
	0x03549DE8 RET
	0x03549DEC SUB X31, X31, 0x50
	0x03549DF0 STP X30, X23, [X31 + 0x20]
	0x03549DF4 STP X22, X21, [X31 + 0x30]
	0x03549DF8 STP X20, X19, [X31 + 0x40]
	0x03549DFC ADRP X21, 0xE96000
	0x03549E00 ADRP X20, 0xBAA000
	0x03549E04 LDRB W8, [X21 + 0xC73]
	0x03549E08 LDR X20, [X20 + 0x8F0]
	0x03549E0C MOV X19, X0
	0x03549E10 TBNZ X8, 0x0, 0x3549E70
	0x03549E14 ADRP X0, 0xBEC000
	0x03549E18 LDR X0, [X0 + 0x40]
	0x03549E1C BL 0x1C16CF4
	0x03549E20 ADRP X0, 0xBEC000
	0x03549E24 LDR X0, [X0 + 0x48]
	0x03549E28 BL 0x1C16CF4
	0x03549E2C ADRP X0, 0xBEC000
	0x03549E30 LDR X0, [X0 + 0x50]
	0x03549E34 BL 0x1C16CF4
	0x03549E38 ADRP X0, 0xBEC000
	0x03549E3C LDR X0, [X0 + 0x58]
	0x03549E40 BL 0x1C16CF4
	0x03549E44 ADRP X0, 0xBAA000
	0x03549E48 LDR X0, [X0 + 0x8F0]
	0x03549E4C BL 0x1C16CF4
	0x03549E50 ADRP X0, 0xBB3000
	0x03549E54 LDR X0, [X0 + 0x870]
	0x03549E58 BL 0x1C16CF4
	0x03549E5C ADRP X0, 0xBB3000
	0x03549E60 LDR X0, [X0 + 0x878]
	0x03549E64 BL 0x1C16CF4
	0x03549E68 MOVZ W8, 0x1
	0x03549E6C STRB W8, [X21 + 0xC73]
	0x03549E70 LDR X0, [X20]
	0x03549E74 STP X31, X31, [X31 + 0x8]
	0x03549E78 STR X31, [X31 + 0x18]
	0x03549E7C BL 0x1C16F10
	0x03549E80 MOV X1, X31
	0x03549E84 MOV X20, X0
	0x03549E88 BL 0x3231AC4
	0x03549E8C MOV X0, X19
	0x03549E90 BL 0x35446B8
	0x03549E94 CBZ X0, 0x3549F70
	0x03549E98 MOV W1, W31
	0x03549E9C BL 0x3549CCC
	0x03549EA0 CBZ X20, 0x3549F70
	0x03549EA4 ADRP X8, 0xBB3000
	0x03549EA8 LDR X8, [X8 + 0x870]
	0x03549EAC MOV X2, X0
	0x03549EB0 MOV X0, X20
	0x03549EB4 MOV X3, X31
	0x03549EB8 LDR X1, [X8]
	0x03549EBC BL 0x3234224
	0x03549EC0 LDR X0, [X19 + 0x28]
	0x03549EC4 CBZ X0, 0x3549F70
	0x03549EC8 ADRP X8, 0xBEC000
	0x03549ECC LDR X8, [X8 + 0x58]
	0x03549ED0 ADRP X22, 0xBEC000
	0x03549ED4 ADRP X23, 0xBB3000
	0x03549ED8 ADRP X21, 0xBEC000
	0x03549EDC LDR X1, [X8]
	0x03549EE0 LDR X22, [X22 + 0x48]
	0x03549EE4 LDR X23, [X23 + 0x878]
	0x03549EE8 LDR X21, [X21 + 0x40]
	0x03549EEC ADD X8, X31, 0x8
	0x03549EF0 BL 0x301CB58
	0x03549EF4 LDR X1, [X22]
	0x03549EF8 ADD X0, X31, 0x8
	0x03549EFC BL 0x2BC4350
	0x03549F00 TBZ X0, 0x0, 0x3549F28
	0x03549F04 LDR X0, [X31 + 0x18]
	0x03549F08 CBZ X0, 0x3549F6C
	0x03549F0C MOV X1, X31
	0x03549F10 BL 0x354B584
	0x03549F14 MOV X1, X0
	0x03549F18 MOV X0, X20
	0x03549F1C MOV X2, X31
	0x03549F20 BL 0x32338A8
	0x03549F24 B 0x3549EF4
	0x03549F28 LDR X1, [X21]
	0x03549F2C ADD X0, X31, 0x8
	0x03549F30 BL 0x2BC434C
	0x03549F34 LDR X2, [X19 + 0x40]
	0x03549F38 LDR X1, [X23]
	0x03549F3C MOV X0, X20
	0x03549F40 MOV X3, X31
	0x03549F44 BL 0x3234224
	0x03549F48 LDR X8, [X20]
	0x03549F4C MOV X0, X20
	0x03549F50 LDP X9, X1, [X8 + 0x168]
	0x03549F54 BLR X9
	0x03549F58 LDP X20, X19, [X31 + 0x40]
	0x03549F5C LDP X22, X21, [X31 + 0x30]
	0x03549F60 LDP X30, X23, [X31 + 0x20]
	0x03549F64 ADD X31, X31, 0x50
	0x03549F68 RET
	0x03549F6C BL 0x1C16F20
	0x03549F70 BL 0x1C16F20
	0x03549F74 B 0x3549F80
	0x03549F78 B 0x3549F80
	0x03549F7C B 0x3549F80
	0x03549F80 MOV X21, X0
	0x03549F84 CMP W1, 0x1
	0x03549F88 B.NE 0x3549FBC
	0x03549F8C MOV X0, X21
	0x03549F90 BL 0x3EB1AD0
	0x03549F94 LDR X22, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE97000
	006 Move W8, [X21+3172]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xBEC000
	014 Move X0, [X0+3456]
	015 Call 0x1C17CF4
	016 Move X0, 0xBB4000
	017 Move X0, [X0+1928]
	018 Call 0x1C17CF4
	019 Move X0, 0xBB4000
	020 Move X0, [X0+1936]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3172], W8
	024 Move X0, X19
	025 Call PhotonPing.Init, X0
	026 Move X8, [X19+48]
	027 Compare X8, 0
	028 JumpIfNotEqual {80}
	029 Compare X20, 0
	030 JumpIfEqual {118}
	031 Move X8, 0xBB4000
	032 Move X8, [X8+1936]
	033 Move X1, [X8]
	034 Move X0, X20
	035 Move X2, X31
	036 Call String.Contains, X0, X1
	037 Move X9, 0xBB4000
	038 Move X9, [X9+1928]
	039 Move W8, W0
	040 Move X0, [X9]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {52}
	045 Call 0x1C17F10
	046 Move X21, X0
	047 Move W1, 2
	048 Move W2, 2
	049 Move W3, 17
	050 Move X4, X31
	051 Call Socket..ctor, X0, X1, X2, X3
	052 Call 0x1C17F10
	053 Move X21, X0
	054 Move W1, 23
	055 Move W2, 2
	056 Move W3, 17
	057 Move X4, X31
	058 Call Socket..ctor, X0, X1, X2, X3
	059 Move [X19+48], X21
	060 Compare X21, 0
	061 JumpIfEqual {119}
	062 Move W1, 0x1388
	063 Move X0, X21
	064 Move X2, X31
	065 Call Socket.set_ReceiveTimeout, X0, X1
	066 Move X0, [X19+48]
	067 Compare X0, 0
	068 JumpIfEqual {120}
	069 Move X8, 0xBEC000
	070 Move X8, [X8+3456]
	071 Move W9, 0x13BF
	072 Move X8, [X8]
	073 Move X8, [X8+184]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move X1, X20
	078 Move X3, X31
	079 Call Socket.Connect, X0, X1, X2
	080 Move X8, [X19+32]
	081 Compare X8, 0
	082 JumpIfEqual {113}
	083 Move X9, [X8+24]
	084 Compare W9, 0
	085 JumpIfEqual {114}
	086 Move W10, [X19+40]
	087 Subtract W9, W9, 1
	088 Add X8, X8, W9
	089 Move [X8+32], W10
	090 Move X0, [X19+48]
	091 Compare X0, 0
	092 JumpIfEqual {115}
	093 Move X1, [X19+32]
	094 Move X2, X31
	095 Call Socket.Send, X0, X1
	096 Move X8, [X19+32]
	097 Compare X8, 0
	098 JumpIfEqual {116}
	099 Move X9, [X8+24]
	100 Compare W9, 0
	101 JumpIfEqual {117}
	102 Move W10, [X19+40]
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Subtract W9, W9, 1
	106 Add X8, X8, W9
	107 Add W10, W10, 1
	108 Move [X8+32], W10
	109 Move W0, W31
	110 Move X30, [X31+32]
	111 Move X21, [X31+40]
	112 Return X0
	113 Call 0x1C17F20
	114 Call 0x1C17F28
	115 Call 0x1C17F20
	116 Call 0x1C17F20
	117 Call 0x1C17F28
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Call 0x1C17F20
	121 Move X20, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X20
	124 Call 0x3EB2AD0
	125 Move X20, X0
	126 Move X0, 0xBAB000
	127 Move X0, [X0+2000]
	128 Call 0x1C17D08
	129 Move X8, [X20]
	130 Move X1, [X8]
	131 Call 0x1C18270
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {141}
	136 Move X20, [X20]
	137 Call 0x3EB2AE0
	138 Move X0, X20
	139 Move [X19+48], X31
	140 Call 0x1C17F18
	141 Move W0, 8
	142 Call 0x3EB2AF0
	143 Move X8, [X20]
	144 Move [X0], X8
	145 Move X1, 0x96C000
	146 Add X1, X1, 3672
	147 Move X2, X31
	148 Call 0x3EB2B00
	149 Move X20, X0
	150 Call 0x3EB2AE0
	151 Move X0, X20
	152 Call 0x1D2D690
	153 Call 0x1991590

Method: System.Boolean Done()

Disassembly:
	0x03549F98 BL 0x3EB1AE0
	0x03549F9C ADRP X8, 0xBEC000
	0x03549FA0 LDR X8, [X8 + 0x40]
	0x03549FA4 ADD X0, X31, 0x8
	0x03549FA8 LDR X1, [X8]
	0x03549FAC BL 0x2BC434C
	0x03549FB0 CBZ X22, 0x3549F34
	0x03549FB4 MOV X0, X22
	0x03549FB8 BL 0x1C16F18
	0x03549FBC MOV X22, X31
	0x03549FC0 B 0x3549FC8
	0x03549FC4 MOV X21, X0
	0x03549FC8 ADRP X8, 0xBEC000
	0x03549FCC LDR X8, [X8 + 0x40]
	0x03549FD0 LDR X1, [X8]
	0x03549FD4 ADD X0, X31, 0x8
	0x03549FD8 BL 0x2BC434C
	0x03549FDC CBNZ X22, 0x3549FE8
	0x03549FE0 MOV X0, X21
	0x03549FE4 BL 0x1D2C690
	0x03549FE8 MOV X0, X22
	0x03549FEC BL 0x1C16F18
	0x03549FF0 BL 0x1990590
	0x03549FF4 LDRB W0, [X0 + 0x54]
	0x03549FF8 RET
	0x03549FFC AND W8, W1, 0x1
	0x0354A000 STRB W8, [X0 + 0x54]
	0x0354A004 RET
	0x0354A008 LDRB W0, [X0 + 0x55]
	0x0354A00C RET
	0x0354A010 AND W8, W1, 0x1
	0x0354A014 STRB W8, [X0 + 0x55]
	0x0354A018 RET
	0x0354A01C SUB X31, X31, 0xA0
	0x0354A020 STR X30, [X31 + 0x40]
	0x0354A024 STP X28, X27, [X31 + 0x50]
	0x0354A028 STP X26, X25, [X31 + 0x60]
	0x0354A02C STP X24, X23, [X31 + 0x70]
	0x0354A030 STP X22, X21, [X31 + 0x80]
	0x0354A034 STP X20, X19, [X31 + 0x90]
	0x0354A038 ADRP X19, 0xE95000
	0x0354A03C LDRB W8, [X19 + 0xC78]
	0x0354A040 MOV X20, X0
	0x0354A044 TBNZ X8, 0x0, 0x354A0C8
	0x0354A048 ADRP X0, 0xBEA000
	0x0354A04C LDR X0, [X0 + 0xDF8]
	0x0354A050 BL 0x1C16CF4
	0x0354A054 ADRP X0, 0xBEA000
	0x0354A058 LDR X0, [X0 + 0xF38]
	0x0354A05C BL 0x1C16CF4
	0x0354A060 ADRP X0, 0xBEA000
	0x0354A064 LDR X0, [X0 + 0xF40]
	0x0354A068 BL 0x1C16CF4
	0x0354A06C ADRP X0, 0xBEA000
	0x0354A070 LDR X0, [X0 + 0xF48]
	0x0354A074 BL 0x1C16CF4
	0x0354A078 ADRP X0, 0xBEA000
	0x0354A07C LDR X0, [X0 + 0xE00]
	0x0354A080 BL 0x1C16CF4
	0x0354A084 ADRP X0, 0xBEA000
	0x0354A088 LDR X0, [X0 + 0xE08]
	0x0354A08C BL 0x1C16CF4
	0x0354A090 ADRP X0, 0xBEA000
	0x0354A094 LDR X0, [X0 + 0xF50]
	0x0354A098 BL 0x1C16CF4
	0x0354A09C ADRP X0, 0xBEA000
	0x0354A0A0 LDR X0, [X0 + 0xE18]
	0x0354A0A4 BL 0x1C16CF4
	0x0354A0A8 ADRP X0, 0xBEB000
	0x0354A0AC LDR X0, [X0 + 0x60]
	0x0354A0B0 BL 0x1C16CF4
	0x0354A0B4 ADRP X0, 0xBEA000
	0x0354A0B8 LDR X0, [X0 + 0xE38]
	0x0354A0BC BL 0x1C16CF4
	0x0354A0C0 MOVZ W8, 0x1
	0x0354A0C4 STRB W8, [X19 + 0xC78]
	0x0354A0C8 STP X31, X31, [X31 + 0x20]
	0x0354A0CC STR X31, [X31 + 0x30]
	0x0354A0D0 LDR X8, [X20 + 0x10]
	0x0354A0D4 CBZ X8, 0x354A230
	0x0354A0D8 LDR W8, [X8 + 0x18]
	0x0354A0DC CBZ W8, 0x354A230
	0x0354A0E0 LDR X19, [X20 + 0x28]
	0x0354A0E4 STRB W31, [X31 + 0x4C]
	0x0354A0E8 ADD X1, X31, 0x4C
	0x0354A0EC MOV X0, X19
	0x0354A0F0 MOV X2, X31
	0x0354A0F4 BL 0x33DE64C
	0x0354A0F8 LDR X8, [X20 + 0x28]
	0x0354A0FC CBZ X8, 0x354A2A8
	0x0354A100 LDP W2, W9, [X8 + 0x18]
	0x0354A104 ADD W9, W9, 0x1
	0x0354A108 CMP W2, 0x1
	0x0354A10C STP W31, W9, [X8 + 0x18]
	0x0354A110 B.LT 0x354A124
	0x0354A114 LDR X0, [X8 + 0x10]
	0x0354A118 MOV W1, W31
	0x0354A11C MOV X3, X31
	0x0354A120 BL 0x339FA34
	0x0354A124 LDR X0, [X20 + 0x10]
	0x0354A128 CBZ X0, 0x354A2AC
	0x0354A12C ADRP X8, 0xBEA000
	0x0354A130 LDR X8, [X8 + 0xF50]
	0x0354A134 LDR X1, [X8]
	0x0354A138 ADD X8, X31, 0x8
	0x0354A13C BL 0x301CB58
	0x0354A140 LDUR V0, [X31 + 0x8]
	0x0354A144 LDR X8, [X31 + 0x18]
	0x0354A148 ADRP X24, 0xBEA000
	0x0354A14C ADRP X25, 0xBEA000
	0x0354A150 ADRP X26, 0xBEB000
	0x0354A154 ADRP X27, 0xBEA000
	0x0354A158 LDR X24, [X24 + 0xF40]
	0x0354A15C LDR X25, [X25 + 0xDF8]
	0x0354A160 LDR X26, [X26 + 0x60]
	0x0354A164 LDR X27, [X27 + 0xE38]
	0x0354A168 STR V0, [X31 + 0x2]
	0x0354A16C STR X8, [X31 + 0x30]
	0x0354A170 ADRP X28, 0xBEA000
	0x0354A174 LDR X28, [X28 + 0xE00]
	0x0354A178 LDR X1, [X24]
	0x0354A17C ADD X0, X31, 0x20
	0x0354A180 BL 0x2BC4350
	0x0354A184 TBZ X0, 0x0, 0x354A238
	0x0354A188 LDR X22, [X31 + 0x30]
	0x0354A18C LDR X0, [X25]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE97000
	007 Move W8, [X20+3173]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBB4000
	014 Move X0, [X0+1944]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3173], W8
	018 Move W8, [X19+25]
	019 Compare W8, 0
	020 JumpIfEqual {28}
	021 Move W0, 1
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move X30, [X31+48]
	027 Return X0
	028 Move X0, [X19+48]
	029 Compare X0, 0
	030 JumpIfEqual {21}
	031 Move W1, W31
	032 Move W2, W31
	033 Move X3, X31
	034 Call Socket.Poll, X0, X1, X2
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {60}
	039 Move X0, [X19+48]
	040 Compare X0, 0
	041 JumpIfEqual {72}
	042 Move X1, [X19+32]
	043 Move W2, W31
	044 Move X3, X31
	045 Call Socket.Receive, X0, X1, X2
	046 Move X8, [X19+32]
	047 Compare X8, 0
	048 JumpIfEqual {126}
	049 Move X9, [X8+24]
	050 Compare W9, 0
	051 JumpIfEqual {73}
	052 Subtract W9, W9, 1
	053 Add X8, X8, W9
	054 Move W8, [X8+32]
	055 Move W9, [X19+40]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, [X19+28]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, 1
	060 Move W0, W31
	061 Move X8, 0xBB3000
	062 Move X0, [X19+16]
	063 Move X8, [X8+1944]
	064 Move X2, X31
	065 Move X1, [X8]
	066 Call String.Concat, X0, X1
	067 Move W8, W31
	068 Move [X19+16], X0
	069 Move W0, 1
	070 Move [X19+24], W8
	071 Move [X19+25], W0
	072 Call 0x1C17F20
	073 Call 0x1C17F28
	074 Move X20, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, X20
	077 Call 0x3EB2AD0
	078 Move X20, X0
	079 Move X0, 0xBAA000
	080 Move X0, [X0+2000]
	081 Call 0x1C17D08
	082 Move X8, [X20]
	083 Move X1, [X8]
	084 Call 0x1C18270
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {127}
	089 Move X21, [X20]
	090 Call 0x3EB2AE0
	091 Move X0, [X19+48]
	092 Compare X0, 0
	093 JumpIfEqual {97}
	094 Move X1, X31
	095 Call Socket.Close, X0
	096 Move [X19+48], X31
	097 Compare X21, 0
	098 JumpIfEqual {126}
	099 Move X20, [X19+16]
	100 Move X0, X21
	101 Move X1, X31
	102 Call Exception.GetType, X0
	103 Move X22, X0
	104 Move X0, 0xBB3000
	105 Move X0, [X0+1952]
	106 Call 0x1C17D08
	107 Move X21, X0
	108 Compare X22, 0
	109 JumpIfEqual {116}
	110 Move X8, [X22]
	111 Move X0, X22
	112 Move X9, [X8+360]
	113 Move X1, [X8+368]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X22, X0
	116 Move X0, 0xBAA000
	117 Move X0, [X0+3544]
	118 Call 0x1C17D08
	119 Move X3, X0
	120 Move X0, X20
	121 Move X1, X21
	122 Move X2, X22
	123 Move X4, X31
	124 Call String.Concat, X0, X1, X2, X3
	125 Move [X19+16], X0
	126 Call 0x1C17F20
	127 Move W0, 8
	128 Call 0x3EB2AF0
	129 Move X8, [X20]
	130 Move [X0], X8
	131 Move X1, 0x96B000
	132 Add X1, X1, 3672
	133 Move X2, X31
	134 Call 0x3EB2B00
	135 Move X20, X0
	136 Call 0x3EB2AE0
	137 Move X0, X20
	138 Call 0x1D2D690
	139 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x0354A190 BL 0x1C16F10
	0x0354A194 LDR X2, [X26]
	0x0354A198 MOV X23, X0
	0x0354A19C MOV X1, X20
	0x0354A1A0 MOV X3, X31
	0x0354A1A4 BL 0x2A6B948
	0x0354A1A8 LDR X0, [X27]
	0x0354A1AC BL 0x1C16F10
	0x0354A1B0 MOV X21, X0
	0x0354A1B4 MOV X1, X22
	0x0354A1B8 MOV X2, X23
	0x0354A1BC MOV X3, X31
	0x0354A1C0 BL 0x354A9F0
	0x0354A1C4 LDR X0, [X20 + 0x28]
	0x0354A1C8 CBZ X0, 0x354A298
	0x0354A1CC LDR W10, [X0 + 0x1C]
	0x0354A1D0 LDR X8, [X0 + 0x10]
	0x0354A1D4 LDR X9, [X28]
	0x0354A1D8 ADD W10, W10, 0x1
	0x0354A1DC STR W10, [X0 + 0x1C]
	0x0354A1E0 CBZ X8, 0x354A29C
	0x0354A1E4 LDRSW X10, [X0 + 0x18]
	0x0354A1E8 LDR W11, [X8 + 0x18]
	0x0354A1EC CMP W10, W11
	0x0354A1F0 B.CS 0x354A208
	0x0354A1F4 ADD W9, W10, 0x1
	0x0354A1F8 ADD X8, X8, X10, 0x3, LSL
	0x0354A1FC STR W9, [X0 + 0x18]
	0x0354A200 STR X21, [X8 + 0x20]
	0x0354A204 B 0x354A21C
	0x0354A208 LDR X8, [X9 + 0x20]
	0x0354A20C LDR X8, [X8 + 0xC0]
	0x0354A210 LDR X2, [X8 + 0x70]
	0x0354A214 MOV X1, X21
	0x0354A218 BL 0x301BF90
	0x0354A21C CBZ X21, 0x354A294
	0x0354A220 MOV X0, X21
	0x0354A224 MOV X1, X31
	0x0354A228 BL 0x354AC24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+48]
	006 Compare X0, 0
	007 JumpIfEqual {11}
	008 Move X1, X31
	009 Call Socket.Close, X0
	010 Move [X19+48], X31
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X20, X0
	017 Move X0, X20
	018 Call 0x3EB2AD0
	019 Move X20, X0
	020 Move X0, 0xBB0000
	021 Move X0, [X0+3264]
	022 Call 0x1C17D08
	023 Move X8, [X20]
	024 Move X1, [X8]
	025 Call 0x1C18270
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {31}
	030 Call 0x3EB2AE0
	031 Move W0, 8
	032 Call 0x3EB2AF0
	033 Move X8, [X20]
	034 Move [X0], X8
	035 Move X1, 0x96B000
	036 Add X1, X1, 3672
	037 Move X2, X31
	038 Call 0x3EB2B00
	039 Move X20, X0
	040 Call 0x3EB2AE0
	041 Move X0, X20
	042 Call 0x1D2D690
	043 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0354A22C B 0x354A178
	0x0354A230 MOV W0, W31
	0x0354A234 B 0x354A274
	0x0354A238 MOV X21, X31
	0x0354A23C ADRP X8, 0xBEA000
	0x0354A240 LDR X8, [X8 + 0xF38]
	0x0354A244 LDR X1, [X8]
	0x0354A248 ADD X0, X31, 0x20
	0x0354A24C BL 0x2BC434C
	0x0354A250 CBNZ X21, 0x354A2B0
	0x0354A254 MOV X20, X31
	0x0354A258 LDRB W8, [X31 + 0x4C]
	0x0354A25C CBZ W8, 0x354A26C
	0x0354A260 MOV X0, X19
	0x0354A264 MOV X1, X31
	0x0354A268 BL 0x33E14E4
	0x0354A26C CBNZ X20, 0x354A2A0
	0x0354A270 MOVZ W0, 0x1
	0x0354A274 LDP X20, X19, [X31 + 0x90]
	0x0354A278 LDP X22, X21, [X31 + 0x80]
	0x0354A27C LDP X24, X23, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE96000
	006 Move X21, 0xBEB000
	007 Move W8, [X20+3174]
	008 Move X21, [X21+4088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBEB000
	015 Move X0, [X0+4088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3174], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call PhotonPing..ctor, X0
	030 Return 

