Type: Photon.Realtime.RegionPinger/<RegionPingCoroutine>d__22

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0354C55C BL 0x1C16F20
	0x0354C560 LDR W0, [X0 + 0x48]
	0x0354C564 RET
	0x0354C568 LDR X0, [X0 + 0x50]
	0x0354C56C RET
	0x0354C570 STR X1, [X0 + 0x50]
	0x0354C574 RET
	0x0354C578 LDRB W0, [X0 + 0x3A]
	0x0354C57C RET
	0x0354C580 LDRB W0, [X0 + 0x78]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0354C6D4 LDR X23, [X23 + 0xDA0]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0354C6D8 MOV X21, X2
	0x0354C6DC MOV X19, X1
	0x0354C6E0 MOV X20, X0
	0x0354C6E4 TBNZ X8, 0x0, 0x354C6FC
	0x0354C6E8 ADRP X0, 0xBAF000
	0x0354C6EC LDR X0, [X0 + 0xDA0]
	0x0354C6F0 BL 0x1C16CF4
	0x0354C6F4 MOVZ W8, 0x1
	0x0354C6F8 STRB W8, [X22 + 0xC9B]
	0x0354C6FC LDR X0, [X23]
	0x0354C700 BL 0x1C16F10
	0x0354C704 MOV X1, X31
	0x0354C708 MOV X22, X0
	0x0354C70C BL 0x34ED7D8
	0x0354C710 MOVZ W8, 0x101
	0x0354C714 MOVZ W9, 0x1
	0x0354C718 MOV X0, X20
	0x0354C71C MOV X1, X31
	0x0354C720 STR X22, [X20 + 0x18]
	0x0354C724 STRH W8, [X20 + 0x38]
	0x0354C728 STRB W9, [X20 + 0x3A]
	0x0354C72C BL 0x33BDD8C
	0x0354C730 LDR X8, [X20]
	0x0354C734 MOV X0, X20
	0x0354C738 MOV X1, X21
	0x0354C73C LDP X9, X2, [X8 + 0x178]
	0x0354C740 BLR X9
	0x0354C744 STR X19, [X20 + 0x40]
	0x0354C748 LDP X20, X19, [X31 + 0x20]
	0x0354C74C LDP X22, X21, [X31 + 0x10]
	0x0354C750 LDP X30, X23, [X31], #0x30
	0x0354C754 RET
	0x0354C758 AND W8, W1, 0xFF
	0x0354C75C UBFM W9, W8, 0x5, 0x5
	0x0354C760 UBFM W10, W8, 0x2, 0x2
	0x0354C764 UBFM W11, W8, 0x6, 0x6
	0x0354C768 UBFM W12, W8, 0x3, 0x3
	0x0354C76C UBFM W13, W8, 0x4, 0x4
	0x0354C770 UBFM W8, W8, 0x1, 0x1
	0x0354C774 STRB W9, [X0 + 0x78]
	0x0354C778 STRB W10, [X0 + 0x79]
	0x0354C77C STRB W11, [X0 + 0x7A]
	0x0354C780 STRB W12, [X0 + 0x7B]
	0x0354C784 STRB W13, [X0 + 0x7C]
	0x0354C788 STRB W8, [X0 + 0x3A]
	0x0354C78C RET
	0x0354C790 STR X30, [X31 - 0x20]!
	0x0354C794 STP X20, X19, [X31 + 0x10]
	0x0354C798 LDR W20, [X0 + 0x48]
	0x0354C79C MOV X19, X0
	0x0354C7A0 BL 0x354C800
	0x0354C7A4 CBZ W20, 0x354C7B4
	0x0354C7A8 LDR W1, [X19 + 0x48]
	0x0354C7AC CMP W1, W20
	0x0354C7B0 B.NE 0x354C7C0
	0x0354C7B4 LDP X20, X19, [X31 + 0x10]
	0x0354C7B8 LDR X30, [X31], #0x20
	0x0354C7BC RET
	0x0354C7C0 LDR X8, [X19 + 0x60]
	0x0354C7C4 CBZ X8, 0x354C7FC
	0x0354C7C8 LDR X9, [X19]
	0x0354C7CC LDR X20, [X8 + 0xC0]
	0x0354C7D0 MOV X0, X19
	0x0354C7D4 MOV W2, W31
	0x0354C7D8 LDP X8, X3, [X9 + 0x1D8]
	0x0354C7DC BLR X8
	0x0354C7E0 CBZ X20, 0x354C7FC
	0x0354C7E4 MOV X1, X0
	0x0354C7E8 MOV X0, X20
	0x0354C7EC LDP X20, X19, [X31 + 0x10]
	0x0354C7F0 MOV X2, X31
	0x0354C7F4 LDR X30, [X31], #0x20
	0x0354C7F8 B 0x35438D8
	0x0354C7FC BL 0x1C16F20
	0x0354C800 STP X30, X23, [X31 - 0x30]!
	0x0354C804 STP X22, X21, [X31 + 0x10]
	0x0354C808 STP X20, X19, [X31 + 0x20]
	0x0354C80C ADRP X21, 0xE93000
	0x0354C810 LDRB W8, [X21 + 0xC9F]
	0x0354C814 MOV X20, X1
	0x0354C818 MOV X19, X0
	0x0354C81C TBNZ X8, 0x0, 0x354C870
	0x0354C820 ADRP X0, 0xBA7000
	0x0354C824 LDR X0, [X0 + 0xB58]
	0x0354C828 BL 0x1C16CF4
	0x0354C82C ADRP X0, 0xBB0000
	0x0354C830 LDR X0, [X0 + 0x9E8]
	0x0354C834 BL 0x1C16CF4
	0x0354C838 ADRP X0, 0xBAF000
	0x0354C83C LDR X0, [X0 + 0xD60]
	0x0354C840 BL 0x1C16CF4
	0x0354C844 ADRP X0, 0xBE8000
	0x0354C848 LDR X0, [X0 + 0xBA8]
	0x0354C84C BL 0x1C16CF4
	0x0354C850 ADRP X0, 0xBA7000
	0x0354C854 LDR X0, [X0 + 0x758]
	0x0354C858 BL 0x1C16CF4
	0x0354C85C ADRP X0, 0xBA7000
	0x0354C860 LDR X0, [X0 + 0xAC8]
	0x0354C864 BL 0x1C16CF4
	0x0354C868 MOVZ W8, 0x1
	0x0354C86C STRB W8, [X21 + 0xC9F]
	0x0354C870 CBZ X20, 0x354C900
	0x0354C874 ADRP X8, 0xBAF000
	0x0354C878 LDR X8, [X8 + 0xD60]
	0x0354C87C MOV X0, X20
	0x0354C880 LDR X1, [X8]
	0x0354C884 BL 0x2AA4E88
	0x0354C888 CBZ W0, 0x354C900
	0x0354C88C LDR X0, [X19 + 0x18]
	0x0354C890 CBZ X0, 0x354CCC4
	0x0354C894 LDR X8, [X0]
	0x0354C898 MOV X1, X20
	0x0354C89C LDP X9, X2, [X8 + 0x138]
	0x0354C8A0 BLR X9
	0x0354C8A4 TBNZ X0, 0x0, 0x354C900
	0x0354C8A8 MOVZ W1, 0xFB
	0x0354C8AC MOV X0, X20
	0x0354C8B0 MOV X2, X31
	0x0354C8B4 BL 0x34EDBF0
	0x0354C8B8 TBZ X0, 0x0, 0x354C910
	0x0354C8BC MOVZ W1, 0xFB
	0x0354C8C0 MOV X0, X20
	0x0354C8C4 MOV X2, X31
	0x0354C8C8 BL 0x34ED940
	0x0354C8CC CBZ X0, 0x354CCC4
	0x0354C8D0 ADRP X8, 0xBA7000
	0x0354C8D4 LDR X8, [X8 + 0xB58]
	0x0354C8D8 LDR X9, [X0]
	0x0354C8DC LDR X1, [X8]
	0x0354C8E0 LDR X8, [X9 + 0x40]
	0x0354C8E4 LDR X9, [X1 + 0x40]
	0x0354C8E8 CMP X8, X9
	0x0354C8EC B.NE 0x354CCC8
	0x0354C8F0 BL 0x1C16E08
	0x0354C8F4 LDRB W8, [X0]
	0x0354C8F8 STRB W8, [X19 + 0x10]
	0x0354C8FC CBZ W8, 0x354C910
	0x0354C900 LDP X20, X19, [X31 + 0x20]
	0x0354C904 LDP X22, X21, [X31 + 0x10]
	0x0354C908 LDP X30, X23, [X31], #0x30
	0x0354C90C RET
	0x0354C910 MOVZ W1, 0xF3
	0x0354C914 MOV X0, X20
	0x0354C918 MOV X2, X31
	0x0354C91C BL 0x34EDBF0
	0x0354C920 TBZ X0, 0x0, 0x354C92C
	0x0354C924 MOVZ W1, 0xF3
	0x0354C928 B 0x354C944
	0x0354C92C MOVZ W1, 0xFF
	0x0354C930 MOV X0, X20
	0x0354C934 MOV X2, X31
	0x0354C938 BL 0x34EDBF0
	0x0354C93C TBZ X0, 0x0, 0x354C980
	0x0354C940 MOVZ W1, 0xFF
	0x0354C944 MOV X0, X20
	0x0354C948 MOV X2, X31
	0x0354C94C BL 0x34ED940
	0x0354C950 ADRP X8, 0xBB0000
	0x0354C954 LDR X8, [X8 + 0x9E8]
	0x0354C958 MOV X21, X0
	0x0354C95C LDR X8, [X8]
	0x0354C960 LDR W9, [X8 + 0xE0]
	0x0354C964 CBNZ W9, 0x354C970
	0x0354C968 MOV X0, X8
	0x0354C96C BL 0x1C16DFC
	0x0354C970 MOV X0, X21
	0x0354C974 MOV X1, X31
	0x0354C978 BL 0x3320190
	0x0354C97C STR W0, [X19 + 0x20]
	0x0354C980 MOVZ W1, 0xFD
	0x0354C984 MOV X0, X20
	0x0354C988 MOV X2, X31
	0x0354C98C BL 0x34EDBF0
	0x0354C990 TBZ X0, 0x0, 0x354C9D4
	0x0354C994 MOVZ W1, 0xFD
	0x0354C998 MOV X0, X20
	0x0354C99C MOV X2, X31
	0x0354C9A0 BL 0x34ED940
	0x0354C9A4 CBZ X0, 0x354CCC4
	0x0354C9A8 ADRP X8, 0xBA7000
	0x0354C9AC LDR X8, [X8 + 0xB58]
	0x0354C9B0 LDR X9, [X0]
	0x0354C9B4 LDR X1, [X8]
	0x0354C9B8 LDR X8, [X9 + 0x40]
	0x0354C9BC LDR X9, [X1 + 0x40]
	0x0354C9C0 CMP X8, X9
	0x0354C9C4 B.NE 0x354CCC8
	0x0354C9C8 BL 0x1C16E08
	0x0354C9CC LDRB W8, [X0]
	0x0354C9D0 STRB W8, [X19 + 0x38]
	0x0354C9D4 MOVZ W1, 0xFE
	0x0354C9D8 MOV X0, X20
	0x0354C9DC MOV X2, X31
	0x0354C9E0 BL 0x34EDBF0
	0x0354C9E4 TBZ X0, 0x0, 0x354CA28
	0x0354C9E8 MOVZ W1, 0xFE
	0x0354C9EC MOV X0, X20
	0x0354C9F0 MOV X2, X31
	0x0354C9F4 BL 0x34ED940
	0x0354C9F8 CBZ X0, 0x354CCC4
	0x0354C9FC ADRP X8, 0xBA7000
	0x0354CA00 LDR X8, [X8 + 0xB58]
	0x0354CA04 LDR X9, [X0]
	0x0354CA08 LDR X1, [X8]
	0x0354CA0C LDR X8, [X9 + 0x40]
	0x0354CA10 LDR X9, [X1 + 0x40]
	0x0354CA14 CMP X8, X9
	0x0354CA18 B.NE 0x354CCC8
	0x0354CA1C BL 0x1C16E08
	0x0354CA20 LDRB W8, [X0]
	0x0354CA24 STRB W8, [X19 + 0x39]
	0x0354CA28 MOVZ W1, 0xFC
	0x0354CA2C MOV X0, X20
	0x0354CA30 MOV X2, X31
	0x0354CA34 BL 0x34EDBF0
	0x0354CA38 TBZ X0, 0x0, 0x354CA7C
	0x0354CA3C MOVZ W1, 0xFC
	0x0354CA40 MOV X0, X20
	0x0354CA44 MOV X2, X31
	0x0354CA48 BL 0x34ED940
	0x0354CA4C ADRP X8, 0xBB0000
	0x0354CA50 LDR X8, [X8 + 0x9E8]
	0x0354CA54 MOV X21, X0
	0x0354CA58 LDR X8, [X8]
	0x0354CA5C LDR W9, [X8 + 0xE0]
	0x0354CA60 CBNZ W9, 0x354CA6C
	0x0354CA64 MOV X0, X8
	0x0354CA68 BL 0x1C16DFC
	0x0354CA6C MOV X0, X21
	0x0354CA70 MOV X1, X31
	0x0354CA74 BL 0x3320190
	0x0354CA78 STR W0, [X19 + 0x58]
	0x0354CA7C MOVZ W1, 0xF9
	0x0354CA80 MOV X0, X20
	0x0354CA84 MOV X2, X31
	0x0354CA88 BL 0x34EDBF0
	0x0354CA8C TBZ X0, 0x0, 0x354CAD0
	0x0354CA90 MOVZ W1, 0xF9
	0x0354CA94 MOV X0, X20
	0x0354CA98 MOV X2, X31
	0x0354CA9C BL 0x34ED940
	0x0354CAA0 CBZ X0, 0x354CCC4
	0x0354CAA4 ADRP X8, 0xBA7000
	0x0354CAA8 LDR X8, [X8 + 0xB58]
	0x0354CAAC LDR X9, [X0]
	0x0354CAB0 LDR X1, [X8]
	0x0354CAB4 LDR X8, [X9 + 0x40]
	0x0354CAB8 LDR X9, [X1 + 0x40]
	0x0354CABC CMP X8, X9
	0x0354CAC0 B.NE 0x354CCC8
	0x0354CAC4 BL 0x1C16E08
	0x0354CAC8 LDRB W8, [X0]
	0x0354CACC STRB W8, [X19 + 0x3A]
	0x0354CAD0 MOVZ W1, 0xF8
	0x0354CAD4 MOV X0, X20
	0x0354CAD8 MOV X2, X31
	0x0354CADC BL 0x34EDBF0
	0x0354CAE0 TBZ X0, 0x0, 0x354CB24
	0x0354CAE4 MOVZ W1, 0xF8
	0x0354CAE8 MOV X0, X20
	0x0354CAEC MOV X2, X31
	0x0354CAF0 BL 0x34ED940
	0x0354CAF4 CBZ X0, 0x354CCC4
	0x0354CAF8 ADRP X8, 0xBA7000
	0x0354CAFC LDR X8, [X8 + 0x758]
	0x0354CB00 LDR X9, [X0]
	0x0354CB04 LDR X1, [X8]
	0x0354CB08 LDR X8, [X9 + 0x40]
	0x0354CB0C LDR X9, [X1 + 0x40]
	0x0354CB10 CMP X8, X9
	0x0354CB14 B.NE 0x354CCC8
	0x0354CB18 BL 0x1C16E08
	0x0354CB1C LDR W8, [X0]
	0x0354CB20 STR W8, [X19 + 0x48]
	0x0354CB24 MOVZ W1, 0xFA
	0x0354CB28 MOV X0, X20
	0x0354CB2C MOV X2, X31
	0x0354CB30 BL 0x34EDBF0
	0x0354CB34 TBZ X0, 0x0, 0x354CB6C
	0x0354CB38 MOVZ W1, 0xFA
	0x0354CB3C MOV X0, X20
	0x0354CB40 MOV X2, X31
	0x0354CB44 BL 0x34ED940
	0x0354CB48 ADRP X22, 0xBA7000
	0x0354CB4C LDR X22, [X22 + 0xAC8]
	0x0354CB50 MOV X21, X0
	0x0354CB54 LDR X1, [X22]
	0x0354CB58 BL 0x1C16E00
	0x0354CB5C STR X0, [X19 + 0x50]
	0x0354CB60 LDR X1, [X22]
	0x0354CB64 MOV X0, X21
	0x0354CB68 BL 0x1C16E00
	0x0354CB6C MOVZ W1, 0xF7
	0x0354CB70 MOV X0, X20
	0x0354CB74 MOV X2, X31
	0x0354CB78 BL 0x34EDBF0
	0x0354CB7C TBZ X0, 0x0, 0x354CBD8
	0x0354CB80 MOVZ W1, 0xF7
	0x0354CB84 MOV X0, X20
	0x0354CB88 MOV X2, X31
	0x0354CB8C BL 0x34ED940
	0x0354CB90 CBZ X0, 0x354CBD4
	0x0354CB94 ADRP X23, 0xBA7000
	0x0354CB98 LDR X23, [X23 + 0xAC8]
	0x0354CB9C MOV X21, X0
	0x0354CBA0 LDR X22, [X23]
	0x0354CBA4 MOV X1, X22
	0x0354CBA8 BL 0x1C16E00
	0x0354CBAC CBZ X0, 0x354CBC8
	0x0354CBB0 STR X0, [X19 + 0x30]
	0x0354CBB4 LDR X22, [X23]
	0x0354CBB8 MOV X0, X21
	0x0354CBBC MOV X1, X22
	0x0354CBC0 BL 0x1C16E00
	0x0354CBC4 CBNZ X0, 0x354CBD8
	0x0354CBC8 MOV X0, X21
	0x0354CBCC MOV X1, X22
	0x0354CBD0 BL 0x1C171E0
	0x0354CBD4 STR X31, [X19 + 0x30]
	0x0354CBD8 MOVZ W1, 0xF5
	0x0354CBDC MOV X0, X20
	0x0354CBE0 MOV X2, X31
	0x0354CBE4 BL 0x34EDBF0
	0x0354CBE8 TBZ X0, 0x0, 0x354CC2C
	0x0354CBEC MOVZ W1, 0xF5
	0x0354CBF0 MOV X0, X20
	0x0354CBF4 MOV X2, X31
	0x0354CBF8 BL 0x34ED940
	0x0354CBFC CBZ X0, 0x354CCC4
	0x0354CC00 ADRP X8, 0xBA7000
	0x0354CC04 LDR X8, [X8 + 0x758]
	0x0354CC08 LDR X9, [X0]
	0x0354CC0C LDR X1, [X8]
	0x0354CC10 LDR X8, [X9 + 0x40]
	0x0354CC14 LDR X9, [X1 + 0x40]
	0x0354CC18 CMP X8, X9
	0x0354CC1C B.NE 0x354CCC8
	0x0354CC20 BL 0x1C16E08
	0x0354CC24 LDR W8, [X0]
	0x0354CC28 STR W8, [X19 + 0x24]
	0x0354CC2C MOVZ W1, 0xF6
	0x0354CC30 MOV X0, X20
	0x0354CC34 MOV X2, X31
	0x0354CC38 BL 0x34EDBF0
	0x0354CC3C TBZ X0, 0x0, 0x354CC80
	0x0354CC40 MOVZ W1, 0xF6
	0x0354CC44 MOV X0, X20
	0x0354CC48 MOV X2, X31
	0x0354CC4C BL 0x34ED940
	0x0354CC50 CBZ X0, 0x354CCC4
	0x0354CC54 ADRP X8, 0xBA7000
	0x0354CC58 LDR X8, [X8 + 0x758]
	0x0354CC5C LDR X9, [X0]
	0x0354CC60 LDR X1, [X8]
	0x0354CC64 LDR X8, [X9 + 0x40]
	0x0354CC68 LDR X9, [X1 + 0x40]
	0x0354CC6C CMP X8, X9
	0x0354CC70 B.NE 0x354CCC8
	0x0354CC74 BL 0x1C16E08
	0x0354CC78 LDR W8, [X0]
	0x0354CC7C STR W8, [X19 + 0x28]
	0x0354CC80 ADRP X8, 0xBE8000
	0x0354CC84 LDR X8, [X8 + 0xBA8]
	0x0354CC88 LDR X21, [X19 + 0x18]
	0x0354CC8C LDR X0, [X8]
	0x0354CC90 LDR W8, [X0 + 0xE0]
	0x0354CC94 CBNZ W8, 0x354CC9C
	0x0354CC98 BL 0x1C16DFC
	0x0354CC9C MOV X0, X21
	0x0354CCA0 MOV X1, X20
	0x0354CCA4 MOV X2, X31
	0x0354CCA8 BL 0x3536EF8
	0x0354CCAC LDR X0, [X19 + 0x18]
	0x0354CCB0 LDP X20, X19, [X31 + 0x20]
	0x0354CCB4 LDP X22, X21, [X31 + 0x10]
	0x0354CCB8 MOV X1, X31
	0x0354CCBC LDP X30, X23, [X31], #0x30
	0x0354CCC0 B 0x35380A8
	0x0354CCC4 BL 0x1C16F20
	0x0354CCC8 BL 0x1C171E0
	0x0354CCCC STP X30, X25, [X31 - 0x40]!
	0x0354CCD0 STP X24, X23, [X31 + 0x10]
	0x0354CCD4 STP X22, X21, [X31 + 0x20]
	0x0354CCD8 STP X20, X19, [X31 + 0x30]
	0x0354CCDC ADRP X23, 0xE93000
	0x0354CCE0 LDRB W8, [X23 + 0xC8F]
	0x0354CCE4 MOV X21, X3
	0x0354CCE8 MOV X22, X2
	0x0354CCEC MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE94000
	007 Move W8, [X20+3203]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xBA9000
	014 Move X0, [X0+3600]
	015 Call 0x1C17CF4
	016 Move X0, 0xBA9000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move X0, 0xBE9000
	020 Move X0, [X0+3640]
	021 Call 0x1C17CF4
	022 Move X0, 0xBB0000
	023 Move X0, [X0+1800]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB1000
	026 Move X0, [X0+2464]
	027 Call 0x1C17CF4
	028 Move X0, 0xBAB000
	029 Move X0, [X0+3120]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3203], W8
	033 Move W8, [X19+16]
	034 Move W0, W31
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X21, [X19+32]
	037 Move X9, -43732992
	038 Add X9, X9, 3498
	039 NotImplemented "Instruction ADR not yet implemented."
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Add X10, X10, X11
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W8, TEMP
	045 CallNoReturn X10
	046 Move TEMP, 0
	047 Not TEMP
	048 Move W8, TEMP
	049 Move [X19+16], W8
	050 Compare X21, 0
	051 JumpIfEqual {422}
	052 Move X22, 0xBE9000
	053 Move X22, [X22+3640]
	054 Move X20, [X21+48]
	055 Move X0, [X22]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Compare X20, 0
	061 JumpIfEqual {422}
	062 Move X8, [X22]
	063 Move X8, [X8+184]
	064 Move W8, [X8+8]
	065 Move [X20+40], W8
	066 Move [X19+40], X31
	067 Move X8, 0xBB0000
	068 Move X8, [X8+1800]
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Move X1, X31
	072 Move X20, X0
	073 Call Stopwatch..ctor, X0
	074 Move W22, W31
	075 Move [X19+48], X20
	076 Move [X21+16], W31
	077 Move TEMP, 0
	078 Not TEMP
	079 Move W8, TEMP
	080 Move [X19+16], W8
	081 Compare X21, 0
	082 JumpIfNotEqual {241}
	083 Move TEMP, 0
	084 Not TEMP
	085 Move W8, TEMP
	086 Move [X19+16], W8
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W8, TEMP
	090 Move [X19+16], W8
	091 Compare X21, 0
	092 JumpIfNotEqual {138}
	093 Move TEMP, 0
	094 Not TEMP
	095 Move W8, TEMP
	096 Move [X19+16], W8
	097 Compare X21, 0
	098 JumpIfEqual {422}
	099 Move W8, [X21+16]
	100 Add W22, W8, 1
	101 Move [X21+16], W22
	102 Move X20, 0xBE9000
	103 Move X20, [X20+3640]
	104 Move X0, [X20]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X20]
	110 Move X8, [X0+184]
	111 Move W8, [X8]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W8, [X21+21]
	114 Compare W8, 0
	115 JumpIfEqual {118}
	116 Move X20, X31
	117 Move W8, 1
	118 Move X0, [X19+48]
	119 Compare X0, 0
	120 JumpIfEqual {422}
	121 Move X1, X31
	122 Call Stopwatch.Reset, X0
	123 Move X0, [X19+48]
	124 Compare X0, 0
	125 JumpIfEqual {422}
	126 Move X1, X31
	127 Call Stopwatch.Start, X0
	128 Compare X21, 0
	129 JumpIfEqual {276}
	130 Move X0, [X21+32]
	131 Compare X0, 0
	132 JumpIfEqual {278}
	133 Move X8, [X0]
	134 Move X1, [X21+56]
	135 Move X9, [X8+392]
	136 Move X2, [X8+400]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X0, [X21+32]
	139 Compare X0, 0
	140 JumpIfEqual {422}
	141 Move X8, [X0]
	142 Move X9, [X8+408]
	143 Move X1, [X8+416]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {177}
	149 Move X0, [X19+48]
	150 Compare X0, 0
	151 JumpIfEqual {422}
	152 Move X1, X31
	153 Call Stopwatch.get_ElapsedMilliseconds, X0
	154 Move X22, 0xBE9000
	155 Move X22, [X22+3640]
	156 Move X20, X0
	157 Move X8, [X22]
	158 Move W9, [X8+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {164}
	161 Move X0, X8
	162 Call 0x1C17DFC
	163 Move X8, [X22]
	164 Move X8, [X8+184]
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X8, 0xBB1000
	168 Move X8, [X8+2464]
	169 Move X0, [X8]
	170 Call 0x1C17F10
	171 Move X8, -44437504
	172 Move V0, [X8+816]
	173 Move X1, X31
	174 Move X20, X0
	175 Call WaitForSecondsRealtime..ctor, X0, V0
	176 Move W8, 2
	177 Move X0, [X19+48]
	178 Compare X0, 0
	179 JumpIfEqual {422}
	180 Move X1, X31
	181 Call Stopwatch.Stop, X0
	182 Move X8, [X21+32]
	183 Compare X8, 0
	184 JumpIfEqual {422}
	185 Move W8, [X8+24]
	186 Compare W8, 0
	187 JumpIfEqual {194}
	188 Move X0, [X19+48]
	189 Compare X0, 0
	190 JumpIfEqual {422}
	191 Move X1, X31
	192 Call Stopwatch.get_ElapsedMilliseconds, X0
	193 Move X20, X0
	194 Move X20, 0xBE9000
	195 Move X20, [X20+3640]
	196 Move X0, [X20]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {202}
	200 Call 0x1C17DFC
	201 Move X0, [X20]
	202 Move X8, [X0+184]
	203 Move W20, [X8+4]
	204 Move X0, [X21+40]
	205 Compare X0, 0
	206 JumpIfEqual {422}
	207 Move X9, 0xBA9000
	208 Move X9, [X9+3600]
	209 Move W10, [X0+28]
	210 Move X8, [X0+16]
	211 Move X9, [X9]
	212 Add W10, W10, 1
	213 Move [X0+28], W10
	214 Compare X8, 0
	215 JumpIfEqual {422}
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Move W11, [X8+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add W9, W10, 1
	220 Add X8, X8, X10
	221 Move [X0+24], W9
	222 Move [X8+32], W20
	223 Move X8, [X9+32]
	224 Move W1, W20
	225 Move X8, [X8+192]
	226 Move X2, [X8+112]
	227 Call List`1<Int32>.AddWithResize, X0, X1
	228 Move W8, [X19+40]
	229 Move W9, [X19+44]
	230 Add W8, W8, W20
	231 Add W10, W9, 1
	232 Move [X19+40], W8
	233 Move [X19+44], W10
	234 Move X9, [X21+48]
	235 Compare X9, 0
	236 JumpIfEqual {422}
	237 NotImplemented "Instruction SDIV not yet implemented."
	238 Move W10, 4
	239 Move [X9+40], W8
	240 Move [X19+56], W10
	241 Move X0, [X21+32]
	242 Compare X0, 0
	243 JumpIfEqual {422}
	244 Move X8, [X0]
	245 Move X9, [X8+408]
	246 Move X1, [X8+416]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {266}
	252 Move W8, [X19+56]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Subtract W8, W8, 1
	255 Move [X19+56], W8
	256 Move X8, 0xBAB000
	257 Move X8, [X8+3120]
	258 Move X0, [X8]
	259 Call 0x1C17F10
	260 Move X8, -44437504
	261 Move V0, [X8+188]
	262 Move X1, X31
	263 Move X20, X0
	264 Call WaitForSeconds..ctor, X0, V0
	265 Move W8, 3
	266 Move X8, 0xBAB000
	267 Move X8, [X8+3120]
	268 Move X0, [X8]
	269 Call 0x1C17F10
	270 Move X8, -44437504
	271 Move V0, [X8+188]
	272 Move X1, X31
	273 Move X20, X0
	274 Call WaitForSeconds..ctor, X0, V0
	275 Move W8, 4
	276 Move [X31+8], X21
	277 Call 0x1C17F20
	278 Move [X31+8], X21
	279 Call 0x1C17F20
	280 Move [X31+8], X21
	281 Move X20, X0
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X0, X20
	284 Call 0x3EB2AD0
	285 Move X20, X0
	286 Move X0, 0xBA8000
	287 Move X0, [X0+2000]
	288 Call 0x1C17D08
	289 Move X8, [X20]
	290 Move X1, [X8]
	291 Call 0x1C18270
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {424}
	296 Move X20, [X20]
	297 Call 0x3EB2AE0
	298 Move X0, 0xBA8000
	299 Move X0, [X0+2760]
	300 Call 0x1C17D08
	301 Move W1, 6
	302 Call 0x1C17D6C
	303 Compare X0, 0
	304 JumpIfEqual {422}
	305 Move X21, X0
	306 Move X0, 0xBB1000
	307 Move X0, [X0+2472]
	308 Call 0x1C17D08
	309 Move W8, [X21+24]
	310 Compare W8, 0
	311 JumpIfEqual {423}
	312 Move [X21+32], X0
	313 Compare X20, 0
	314 JumpIfEqual {321}
	315 Move X8, [X20]
	316 Move X0, X20
	317 Move X9, [X8+360]
	318 Move X1, [X8+368]
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Move W8, [X21+24]
	321 Move X0, X31
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move [X21+40], X0
	324 Move X0, 0xBB1000
	325 Move X0, [X0+2480]
	326 Call 0x1C17D08
	327 Move W8, [X21+24]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move [X21+48], X0
	330 Compare X20, 0
	331 JumpIfEqual {422}
	332 Move X8, [X20]
	333 Move X0, X20
	334 Move X9, [X8+456]
	335 Move X1, [X8+464]
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move W8, [X21+24]
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move [X21+56], X0
	340 Move X0, 0xBB1000
	341 Move X0, [X0+2488]
	342 Call 0x1C17D08
	343 Move W8, [X21+24]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move [X21+64], X0
	346 Move X8, [X20]
	347 Move X0, X20
	348 Move X9, [X8+392]
	349 Move X1, [X8+400]
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Move W8, [X21+24]
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move [X21+72], X0
	354 Move X0, X21
	355 Move X1, X31
	356 Call String.Concat, X0
	357 Move X20, X0
	358 Move X0, 0xBA8000
	359 Move X0, [X0+2600]
	360 Call 0x1C17D08
	361 Move W8, [X0+224]
	362 Compare W8, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move X0, X20
	366 Move X1, X31
	367 Call Debug.Log, X0
	368 Move X21, [X31+8]
	369 Compare X21, 0
	370 JumpIfEqual {422}
	371 Move X0, [X21+32]
	372 Move W8, 1
	373 Move [X21+20], W8
	374 Compare X0, 0
	375 JumpIfEqual {422}
	376 Move X8, [X0]
	377 Move X9, [X8+424]
	378 Move X1, [X8+432]
	379 NotImplemented "Instruction BLR not yet implemented."
	380 Move X0, [X21+40]
	381 Compare X0, 0
	382 JumpIfEqual {422}
	383 Move W8, [X0+24]
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Move W8, [X19+44]
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X1, X31
	388 Call Enumerable.Min, X0
	389 Move X8, [X21+40]
	390 Move W20, W0
	391 Move X1, X31
	392 Move X0, X8
	393 Call Enumerable.Max, X0
	394 Move X8, [X21+48]
	395 Compare X8, 0
	396 JumpIfEqual {422}
	397 Move W9, [X19+40]
	398 Move W10, [X19+44]
	399 Subtract W11, W20, W0
	400 Add W9, W11, W9
	401 NotImplemented "Instruction SDIV not yet implemented."
	402 Move [X8+40], W9
	403 Move X8, [X21+24]
	404 Compare X8, 0
	405 JumpIfEqual {422}
	406 Move X1, [X21+48]
	407 Move X9, [X8+24]
	408 Move X0, [X8+64]
	409 Move X2, [X8+40]
	410 NotImplemented "Instruction BLR not yet implemented."
	411 Move X20, X31
	412 Move W8, 5
	413 Move W0, 1
	414 Move [X19+24], X20
	415 Move [X19+16], W8
	416 Move X20, [X31+32]
	417 Move X19, [X31+40]
	418 Move X22, [X31+16]
	419 Move X21, [X31+24]
	420 Move X30, [X31+48]
	421 Return X0
	422 Call 0x1C17F20
	423 Call 0x1C17F28
	424 Move W0, 8
	425 Call 0x3EB2AF0
	426 Move X8, [X20]
	427 Move [X0], X8
	428 Move X1, 0x969000
	429 Add X1, X1, 3672
	430 Move X2, X31
	431 Call 0x3EB2B00
	432 Move X20, X0
	433 Call 0x3EB2AE0
	434 Move X0, X20
	435 Call 0x1D2D690
	436 Call 0x1991590

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x0354CCF0 MOV X20, X0
	0x0354CCF4 TBNZ X8, 0x0, 0x354CD18

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0354CCF8 ADRP X0, 0xBAF000
	0x0354CCFC LDR X0, [X0 + 0xD60]
	0x0354CD00 BL 0x1C16CF4
	0x0354CD04 ADRP X0, 0xBE8000
	0x0354CD08 LDR X0, [X0 + 0xBA8]
	0x0354CD0C BL 0x1C16CF4
	0x0354CD10 MOVZ W8, 0x1
	0x0354CD14 STRB W8, [X23 + 0xC8F]
	0x0354CD18 CBZ X19, 0x354CDCC
	0x0354CD1C ADRP X25, 0xBAF000
	0x0354CD20 LDR X25, [X25 + 0xD60]
	0x0354CD24 MOV X0, X19
	0x0354CD28 LDR X1, [X25]
	0x0354CD2C BL 0x2AA4E88

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xBA8000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xBEA000
	011 Move X0, [X0+152]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0354CD30 CBZ W0, 0x354CDD0
	0x0354CD34 ADRP X24, 0xBE8000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

