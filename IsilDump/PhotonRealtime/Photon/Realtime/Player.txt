Type: Photon.Realtime.Player

Method: Photon.Realtime.Room get_RoomReference()

Disassembly:
	0x0354A280 LDP X26, X25, [X31 + 0x60]
	0x0354A284 LDP X28, X27, [X31 + 0x50]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_RoomReference(Photon.Realtime.Room value)

Disassembly:
	0x0354A288 LDR X30, [X31 + 0x40]
	0x0354A28C ADD X31, X31, 0xA0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Int32 get_ActorNumber()

Disassembly:
	0x0354A290 RET
	0x0354A294 BL 0x1C16F20

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Boolean get_HasRejoined()

Disassembly:
	0x0354A298 BL 0x1C16F20
	0x0354A29C BL 0x1C16F20

ISIL:
	001 Move W0, [X0+29]
	002 Return X0

Method: System.Void set_HasRejoined(System.Boolean value)

Disassembly:
	0x0354A2A0 MOV X0, X20
	0x0354A2A4 BL 0x1C16F18
	0x0354A2A8 BL 0x1C16F20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+29], W8
	003 Return 

Method: System.String get_NickName()

Disassembly:
	0x0354A2AC BL 0x1C16F20
	0x0354A2B0 MOV X0, X21

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_NickName(System.String value)

Disassembly:
	0x03539F0C CMP W1, 0x10
	0x03539F10 B.EQ 0x3539F38
	0x03539F14 LDR X8, [X19 + 0x98]
	0x03539F18 MOVZ W9, 0x10
	0x03539F1C STR W9, [X19 + 0x90]
	0x03539F20 CBZ X8, 0x3539F38
	0x03539F24 LDR X9, [X8 + 0x18]
	0x03539F28 LDR X0, [X8 + 0x40]
	0x03539F2C LDR X3, [X8 + 0x28]
	0x03539F30 MOVZ W2, 0x10
	0x03539F34 BLR X9
	0x03539F38 MOVZ W8, 0x2
	0x03539F3C MOVZ W0, 0x1
	0x03539F40 STR W8, [X19 + 0x80]
	0x03539F44 B 0x3539F4C
	0x03539F48 MOV W0, W31
	0x03539F4C LDP X20, X19, [X31 + 0x30]
	0x03539F50 LDP X30, X21, [X31 + 0x20]
	0x03539F54 ADD X31, X31, 0x40
	0x03539F58 RET
	0x03539F5C BL 0x1C16F20
	0x03539F60 SUB X31, X31, 0x30
	0x03539F64 STP X30, X21, [X31 + 0x10]
	0x03539F68 STP X20, X19, [X31 + 0x20]
	0x03539F6C ADRP X21, 0xEA6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move X20, X1
	007 Move X1, X31
	008 Call String.IsNullOrEmpty, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {23}
	013 Move X0, [X19+32]
	014 Compare X0, 0
	015 JumpIfEqual {37}
	016 Move X1, X20
	017 Move X2, X31
	018 Call String.Equals, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {33}
	023 Move W8, [X19+28]
	024 Move [X19+32], X20
	025 Compare W8, 0
	026 JumpIfEqual {33}
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Call Player.SetPlayerNameProperty, X0
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Call 0x1C17F20

Method: System.String get_UserId()

Disassembly:
	0x0354A364 MOV X22, X0
	0x0354A368 LDRB W8, [X31 + 0x4C]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_UserId(System.String value)

Disassembly:
	0x0354A36C CBZ W8, 0x354A37C
	0x0354A370 MOV X0, X19

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Boolean get_IsMasterClient()

Disassembly:
	0x0354A374 MOV X1, X31
	0x0354A378 BL 0x33E14E4
	0x0354A37C CBNZ X20, 0x354A388
	0x0354A380 MOV X0, X22
	0x0354A384 BL 0x1D2C690
	0x0354A388 MOV X0, X20
	0x0354A38C BL 0x1C16F18
	0x0354A390 BL 0x1990590
	0x0354A394 SUB X31, X31, 0x80

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move W9, [X0+24]
	005 Move W8, [X8+72]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Boolean get_IsInactive()

Disassembly:
	0x0354A398 STR X30, [X31 + 0x40]
	0x0354A39C STP X24, X23, [X31 + 0x50]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_IsInactive(System.Boolean value)

Disassembly:
	0x0354A3A0 STP X22, X21, [X31 + 0x60]
	0x0354A3A4 STP X20, X19, [X31 + 0x70]
	0x0354A3A8 ADRP X20, 0xE95000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+48], W8
	003 Return 

Method: ExitGames.Client.Photon.Hashtable get_CustomProperties()

Disassembly:
	0x0354A3AC LDRB W8, [X20 + 0xC77]
	0x0354A3B0 MOV X19, X0

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_CustomProperties(ExitGames.Client.Photon.Hashtable value)

Disassembly:
	0x0354A3B4 TBNZ X8, 0x0, 0x354A3FC
	0x0354A3B8 ADRP X0, 0xBEB000

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Void .ctor(System.String nickName, System.Int32 actorNumber, System.Boolean isLocal)

Disassembly:
	0x0354A3BC LDR X0, [X0 + 0x40]
	0x0354A3C0 BL 0x1C16CF4
	0x0354A3C4 ADRP X0, 0xBEB000

ISIL:
	001 And W3, W3, 1
	002 Move X4, X31
	003 Call Player..ctor, X0, X1, X2, X3, X4
	004 Return 

Method: System.Void .ctor(System.String nickName, System.Int32 actorNumber, System.Boolean isLocal, ExitGames.Client.Photon.Hashtable playerProperties)

Disassembly:
	0x0353F180 BL 0x35413F8
	0x0353F184 B 0x353F7C0
	0x0353F188 LDRH W8, [X21]
	0x0353F18C CBZ W8, 0x353F4D8
	0x0353F190 MOV X0, X19
	0x0353F194 MOV X1, X31
	0x0353F198 BL 0x3505858
	0x0353F19C ADRP X8, 0xBBD000
	0x0353F1A0 LDR X8, [X8 + 0x350]
	0x0353F1A4 MOV X1, X0
	0x0353F1A8 MOV X2, X31
	0x0353F1AC LDR X8, [X8]
	0x0353F1B0 MOV X0, X8
	0x0353F1B4 BL 0x321B938
	0x0353F1B8 LDR X8, [X20]
	0x0353F1BC MOV X2, X0
	0x0353F1C0 MOVZ W1, 0x1
	0x0353F1C4 MOV X0, X20
	0x0353F1C8 LDR X9, [X8 + 0x218]
	0x0353F1CC LDR X3, [X8 + 0x220]
	0x0353F1D0 BLR X9
	0x0353F1D4 B 0x353F7C0
	0x0353F1D8 LDR X0, [X20 + 0xD0]
	0x0353F1DC CBZ X0, 0x353F4D4
	0x0353F1E0 MOV X1, X19
	0x0353F1E4 BL 0x3541774
	0x0353F1E8 B 0x353F7C0
	0x0353F1EC LDR W1, [X20 + 0x90]
	0x0353F1F0 CMP W1, 0x4
	0x0353F1F4 B.EQ 0x353F21C
	0x0353F1F8 LDR X8, [X20 + 0x98]
	0x0353F1FC MOVZ W9, 0x4
	0x0353F200 STR W9, [X20 + 0x90]
	0x0353F204 CBZ X8, 0x353F21C
	0x0353F208 LDR X9, [X8 + 0x18]
	0x0353F20C LDR X0, [X8 + 0x40]
	0x0353F210 LDR X3, [X8 + 0x28]
	0x0353F214 MOVZ W2, 0x4
	0x0353F218 BLR X9
	0x0353F21C LDR X0, [X20 + 0xC8]
	0x0353F220 CBZ X0, 0x353F4D4
	0x0353F224 BL 0x3541240
	0x0353F228 B 0x353F7C0
	0x0353F22C LDR W1, [X20 + 0x90]
	0x0353F230 MOVZ W8, 0xF
	0x0353F234 CMP W1, 0x4
	0x0353F238 CSEL W2, W1, W8, EQ
	0x0353F23C CMP W1, W2
	0x0353F240 B.EQ 0x353F260
	0x0353F244 LDR X8, [X20 + 0x98]
	0x0353F248 STR W2, [X20 + 0x90]
	0x0353F24C CBZ X8, 0x353F260
	0x0353F250 LDR X9, [X8 + 0x18]
	0x0353F254 LDR X0, [X8 + 0x40]
	0x0353F258 LDR X3, [X8 + 0x28]
	0x0353F25C BLR X9

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xEA1000
	011 Move X25, 0xBB7000
	012 Move X24, 0xBBD000
	013 Move W8, [X26+3175]
	014 Move X25, [X25+632]
	015 Move X24, [X24+3488]
	016 Move X19, X4
	017 Move W23, W3
	018 Move W22, W2
	019 Move X21, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xBBD000
	026 Move X0, [X0+3488]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB7000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+3175], W8
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W8, TEMP
	036 Move [X20+24], W8
	037 Move X8, [X25]
	038 Move X0, X20
	039 Move X1, X31
	040 And W23, W23, 1
	041 Move X8, [X8+184]
	042 Move X8, [X8]
	043 Move [X20+32], X8
	044 Call Object..ctor, X0
	045 Move X0, X20
	046 Move X1, X21
	047 Move [X20+28], W23
	048 Move [X20+24], W22
	049 Call Player.set_NickName, X0, X1
	050 Move X0, [X24]
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X21, X0
	054 Call Hashtable..ctor, X0
	055 Move X8, [X20]
	056 Move [X20+56], X21
	057 Move X0, X20
	058 Move X1, X19
	059 Move X3, [X8+376]
	060 Move X2, [X8+384]
	061 Move X20, [X31+64]
	062 Move X19, [X31+72]
	063 Move X22, [X31+48]
	064 Move X21, [X31+56]
	065 Move X24, [X31+32]
	066 Move X23, [X31+40]
	067 Move X26, [X31+16]
	068 Move X25, [X31+24]
	069 Move X30, [X31+80]
	070 CallNoReturn X3

Method: Photon.Realtime.Player Get(System.Int32 id)

Disassembly:
	0x0354A3C8 LDR X0, [X0 + 0x48]
	0x0354A3CC BL 0x1C16CF4
	0x0354A3D0 ADRP X0, 0xBEB000
	0x0354A3D4 LDR X0, [X0 + 0x50]
	0x0354A3D8 BL 0x1C16CF4
	0x0354A3DC ADRP X0, 0xBEB000
	0x0354A3E0 LDR X0, [X0 + 0x58]

ISIL:
	001 Move X0, [X0+16]
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move W2, W31
	006 Move X4, [X8+472]
	007 Move X3, [X8+480]
	008 CallNoReturn X4
	009 Return X0

Method: Photon.Realtime.Player GetNext()

Disassembly:
	0x0354A3E4 BL 0x1C16CF4
	0x0354A3E8 ADRP X0, 0xBA9000

ISIL:
	001 Move W1, [X0+24]

Method: Photon.Realtime.Player GetNextFor(Photon.Realtime.Player currentPlayer)

Disassembly:
	0x0354A5F0 B 0x354A5A4
	0x0354A5F4 MOV X23, X0
	0x0354A5F8 LDRB W8, [X31 + 0x4C]
	0x0354A5FC CBZ W8, 0x354A60C
	0x0354A600 MOV X0, X20

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {6}
	003 Move W1, [X1+24]
	004 Call Player.GetNextFor, X0, X1
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: Photon.Realtime.Player GetNextFor(System.Int32 currentPlayerId)

Disassembly:
	0x0354A3EC LDR X0, [X0 + 0x598]
	0x0354A3F0 BL 0x1C16CF4
	0x0354A3F4 MOVZ W8, 0x1
	0x0354A3F8 STRB W8, [X20 + 0xC77]
	0x0354A3FC STP X31, X31, [X31 + 0x20]
	0x0354A400 STR X31, [X31 + 0x30]
	0x0354A404 LDRB W8, [X19 + 0x55]
	0x0354A408 CBZ W8, 0x354A424
	0x0354A40C LDP X20, X19, [X31 + 0x70]
	0x0354A410 LDP X22, X21, [X31 + 0x60]
	0x0354A414 LDP X24, X23, [X31 + 0x50]
	0x0354A418 LDR X30, [X31 + 0x40]
	0x0354A41C ADD X31, X31, 0x80
	0x0354A420 RET
	0x0354A424 LDR X20, [X19 + 0x28]
	0x0354A428 MOVZ W8, 0x1
	0x0354A42C STRB W8, [X19 + 0x55]
	0x0354A430 STRB W31, [X31 + 0x4C]
	0x0354A434 ADD X1, X31, 0x4C
	0x0354A438 MOV X0, X20
	0x0354A43C MOV X2, X31
	0x0354A440 BL 0x33DE64C
	0x0354A444 LDR X0, [X19 + 0x28]
	0x0354A448 CBZ X0, 0x354A544
	0x0354A44C ADRP X8, 0xBEB000
	0x0354A450 LDR X8, [X8 + 0x58]
	0x0354A454 LDR X1, [X8]
	0x0354A458 ADD X8, X31, 0x8
	0x0354A45C BL 0x301CB58
	0x0354A460 LDUR V0, [X31 + 0x8]
	0x0354A464 LDR X8, [X31 + 0x18]
	0x0354A468 ADRP X21, 0xBEB000
	0x0354A46C STR V0, [X31 + 0x2]
	0x0354A470 STR X8, [X31 + 0x30]
	0x0354A474 LDR X21, [X21 + 0x48]
	0x0354A478 LDR X1, [X21]
	0x0354A47C ADD X0, X31, 0x20
	0x0354A480 BL 0x2BC4350
	0x0354A484 TBZ X0, 0x0, 0x354A49C
	0x0354A488 LDR X0, [X31 + 0x30]
	0x0354A48C CBZ X0, 0x354A538
	0x0354A490 MOV X1, X31
	0x0354A494 BL 0x354B134
	0x0354A498 B 0x354A478
	0x0354A49C MOV X21, X31
	0x0354A4A0 MOV W24, W31
	0x0354A4A4 MOVZ W23, 0x5
	0x0354A4A8 ADRP X8, 0xBEB000
	0x0354A4AC LDR X8, [X8 + 0x40]
	0x0354A4B0 LDR X1, [X8]
	0x0354A4B4 ADD X0, X31, 0x20
	0x0354A4B8 BL 0x2BC434C
	0x0354A4BC CBNZ X21, 0x354A548
	0x0354A4C0 MOV X22, X31
	0x0354A4C4 TBZ X24, 0x0, 0x354A4D0
	0x0354A4C8 MOV W23, W31
	0x0354A4CC MOV X22, X21
	0x0354A4D0 LDRB W8, [X31 + 0x4C]
	0x0354A4D4 CBZ W8, 0x354A4E4
	0x0354A4D8 MOV X0, X20
	0x0354A4DC MOV X1, X31
	0x0354A4E0 BL 0x33E14E4
	0x0354A4E4 CBNZ X22, 0x354A53C
	0x0354A4E8 CMP W23, 0x5
	0x0354A4EC B.EQ 0x354A4F4
	0x0354A4F0 CBNZ W23, 0x354A40C
	0x0354A4F4 ADRP X8, 0xBA9000
	0x0354A4F8 LDR X8, [X8 + 0x598]
	0x0354A4FC LDR X20, [X19 + 0x58]
	0x0354A500 LDR X0, [X8]
	0x0354A504 LDR W8, [X0 + 0xE0]
	0x0354A508 CBNZ W8, 0x354A510
	0x0354A50C BL 0x1C16DFC
	0x0354A510 MOV X0, X20
	0x0354A514 MOV X1, X31
	0x0354A518 MOV X2, X31
	0x0354A51C BL 0x3C354F8
	0x0354A520 TBZ X0, 0x0, 0x354A40C
	0x0354A524 LDR X0, [X19 + 0x58]
	0x0354A528 CBZ X0, 0x354A550
	0x0354A52C MOV X1, X31
	0x0354A530 BL 0x354BE0C
	0x0354A534 B 0x354A40C
	0x0354A538 BL 0x1C16F20
	0x0354A53C MOV X0, X22
	0x0354A540 BL 0x1C16F18
	0x0354A544 BL 0x1C16F20
	0x0354A548 MOV X0, X21
	0x0354A54C BL 0x1C16F18
	0x0354A550 BL 0x1C16F20
	0x0354A554 B 0x354A560
	0x0354A558 B 0x354A560
	0x0354A55C B 0x354A560
	0x0354A560 MOV X22, X1
	0x0354A564 MOV X23, X0
	0x0354A568 B 0x354A5BC
	0x0354A56C B 0x354A574
	0x0354A570 B 0x354A574
	0x0354A574 MOV X22, X1
	0x0354A578 MOV X23, X0
	0x0354A57C CMP W22, 0x1
	0x0354A580 B.NE 0x354A5A0
	0x0354A584 MOV X0, X23
	0x0354A588 BL 0x3EB1AD0
	0x0354A58C LDR X21, [X0]
	0x0354A590 BL 0x3EB1AE0
	0x0354A594 MOV W23, W31
	0x0354A598 MOVZ W24, 0x1
	0x0354A59C B 0x354A4A8
	0x0354A5A0 MOV X21, X31
	0x0354A5A4 ADRP X8, 0xBEB000
	0x0354A5A8 LDR X8, [X8 + 0x40]
	0x0354A5AC LDR X1, [X8]
	0x0354A5B0 ADD X0, X31, 0x20
	0x0354A5B4 BL 0x2BC434C
	0x0354A5B8 CBNZ X21, 0x354A5E0
	0x0354A5BC CMP W22, 0x1
	0x0354A5C0 B.NE 0x354A5D8
	0x0354A5C4 MOV X0, X23
	0x0354A5C8 BL 0x3EB1AD0
	0x0354A5CC LDR X21, [X0]
	0x0354A5D0 BL 0x3EB1AE0
	0x0354A5D4 B 0x354A4C8
	0x0354A5D8 MOV X21, X31
	0x0354A5DC B 0x354A5F8
	0x0354A5E0 MOV X0, X21
	0x0354A5E4 BL 0x1C16F18
	0x0354A5E8 MOV X22, X1
	0x0354A5EC MOV X23, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0xE96000
	009 Move W8, [X21+3176]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xBEC000
	017 Move X0, [X0+8]
	018 Call 0x1C17CF4
	019 Move X0, 0xBEC000
	020 Move X0, [X0+16]
	021 Call 0x1C17CF4
	022 Move X0, 0xBEC000
	023 Move X0, [X0+24]
	024 Call 0x1C17CF4
	025 Move X0, 0xBEC000
	026 Move X0, [X0+32]
	027 Call 0x1C17CF4
	028 Move X0, 0xBEC000
	029 Move X0, [X0+40]
	030 Call 0x1C17CF4
	031 Move X0, 0xBEC000
	032 Move X0, [X0+48]
	033 Call 0x1C17CF4
	034 Move X0, 0xBEC000
	035 Move X0, [X0+56]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+3176], W8
	039 Move [X31+8], X31
	040 Move [X31+16], X31
	041 Move [X31+24], X31
	042 Move X8, [X20+16]
	043 Compare X8, 0
	044 JumpIfEqual {90}
	045 Move X0, [X8+112]
	046 Compare X0, 0
	047 JumpIfEqual {107}
	048 Move X8, 0xBEC000
	049 Move X8, [X8+8]
	050 Move X1, [X8]
	051 Call Dictionary`2<Int32, Object>.get_Count, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X20+16]
	054 Compare X8, 0
	055 JumpIfEqual {115}
	056 Move X20, [X8+112]
	057 Compare X20, 0
	058 JumpIfEqual {115}
	059 Move X8, 0xBEC000
	060 Move X8, [X8+24]
	061 Move X0, X20
	062 Move X1, [X8]
	063 Call Dictionary`2<Int32, Object>.get_Keys, X0
	064 Compare X0, 0
	065 JumpIfEqual {115}
	066 Move X8, 0xBEC000
	067 Move X8, [X8+56]
	068 Move X1, [X8]
	069 Add X8, X31, 8
	070 Call KeyCollection<Int32, Object>.GetEnumerator, X0
	071 Move X23, 0xBEC000
	072 Move X23, [X23+40]
	073 Move TEMP, 0x80000000
	074 Not TEMP
	075 Move W21, TEMP
	076 Move W22, W19
	077 Move X1, [X23]
	078 Add X0, X31, 8
	079 Call Enumerator<Int32, Object>.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {91}
	084 Move W8, [X31+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CCMP not yet implemented."
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Move W22, W8
	090 Move X0, X31
	091 Move X8, 0xBEC000
	092 Move X8, [X8+32]
	093 Add X0, X31, 8
	094 Move X1, [X8]
	095 Call Enumerator<Int32, Object>.Dispose, X0
	096 Move X8, 0xBEC000
	097 Move X8, [X8+16]
	098 Move X0, X20
	099 Move X2, [X8]
	100 Move TEMP, 0x80000000
	101 Not TEMP
	102 Move W8, TEMP
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W1, W22
	105 Move W1, W21
	106 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	107 Move X20, [X31+64]
	108 Move X19, [X31+72]
	109 Move X22, [X31+48]
	110 Move X21, [X31+56]
	111 Move X30, [X31+32]
	112 Move X23, [X31+40]
	113 Add X31, X31, 80
	114 Return X0
	115 Call 0x1C17F20
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X23, X0
	118 Move X0, X23
	119 Call 0x3EB2AD0
	120 Move X19, [X0]
	121 Call 0x3EB2AE0
	122 Move X8, 0xBEC000
	123 Move X8, [X8+32]
	124 Add X0, X31, 8
	125 Move X1, [X8]
	126 Call Enumerator<Int32, Object>.Dispose, X0
	127 Compare X19, 0
	128 JumpIfEqual {96}
	129 Move X0, X19
	130 Call 0x1C17F18
	131 Move X19, X31
	132 Move X23, X0
	133 Move X8, 0xBEC000
	134 Move X8, [X8+32]
	135 Move X1, [X8]
	136 Add X0, X31, 8
	137 Call Enumerator<Int32, Object>.Dispose, X0
	138 Compare X19, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X23
	141 Call 0x1D2D690
	142 Move X0, X19
	143 Call 0x1C17F18
	144 Call 0x1991590

Method: System.Void InternalCacheProperties(ExitGames.Client.Photon.Hashtable properties)

Disassembly:
	0x0354A604 MOV X1, X31
	0x0354A608 BL 0x33E14E4
	0x0354A60C CBNZ X21, 0x354A618
	0x0354A610 MOV X0, X23
	0x0354A614 BL 0x1D2C690
	0x0354A618 MOV X0, X21
	0x0354A61C BL 0x1C16F18
	0x0354A620 BL 0x1990590
	0x0354A624 STR X30, [X31 - 0x10]!
	0x0354A628 CBZ X1, 0x354A68C
	0x0354A62C LDR W9, [X1 + 0x28]
	0x0354A630 LDR W10, [X0 + 0x50]
	0x0354A634 MOV X8, X0
	0x0354A638 CMP W9, W10
	0x0354A63C B.GT 0x354A65C
	0x0354A640 LDR V0, [X8 + 0x38]
	0x0354A644 LDR V1, [X8 + 0x48]
	0x0354A648 SCVTF S2, W9
	0x0354A64C SCVTF S0, S0
	0x0354A650 FMUL S0, S1, S0
	0x0354A654 FCMP S0, S2
	0x0354A658 B.PL 0x354A668
	0x0354A65C MOV X0, X8
	0x0354A660 LDR X30, [X31], #0x10
	0x0354A664 B 0x354A01C
	0x0354A668 LDR X9, [X8 + 0x30]
	0x0354A66C STRB W31, [X8 + 0x54]
	0x0354A670 CBZ X9, 0x354A68C
	0x0354A674 LDR X3, [X9 + 0x18]
	0x0354A678 LDR X0, [X9 + 0x40]
	0x0354A67C LDR X2, [X9 + 0x28]
	0x0354A680 MOV X1, X8
	0x0354A684 LDR X30, [X31], #0x10
	0x0354A688 BR X3
	0x0354A68C BL 0x1C16F20
	0x0354A690 SUB X31, X31, 0x80
	0x0354A694 STR X30, [X31 + 0x40]
	0x0354A698 STP X24, X23, [X31 + 0x50]
	0x0354A69C STP X22, X21, [X31 + 0x60]
	0x0354A6A0 STP X20, X19, [X31 + 0x70]
	0x0354A6A4 ADRP X20, 0xE95000
	0x0354A6A8 LDRB W8, [X20 + 0xC79]
	0x0354A6AC MOV X19, X0
	0x0354A6B0 TBNZ X8, 0x0, 0x354A6EC
	0x0354A6B4 ADRP X0, 0xBEB000
	0x0354A6B8 LDR X0, [X0 + 0x40]
	0x0354A6BC BL 0x1C16CF4
	0x0354A6C0 ADRP X0, 0xBEB000
	0x0354A6C4 LDR X0, [X0 + 0x48]
	0x0354A6C8 BL 0x1C16CF4
	0x0354A6CC ADRP X0, 0xBEB000
	0x0354A6D0 LDR X0, [X0 + 0x50]
	0x0354A6D4 BL 0x1C16CF4
	0x0354A6D8 ADRP X0, 0xBEB000
	0x0354A6DC LDR X0, [X0 + 0x58]
	0x0354A6E0 BL 0x1C16CF4
	0x0354A6E4 MOVZ W8, 0x1
	0x0354A6E8 STRB W8, [X20 + 0xC79]
	0x0354A6EC STP X31, X31, [X31 + 0x20]
	0x0354A6F0 STR X31, [X31 + 0x30]
	0x0354A6F4 LDR X20, [X19 + 0x28]
	0x0354A6F8 STRB W31, [X31 + 0x4C]
	0x0354A6FC ADD X1, X31, 0x4C
	0x0354A700 MOV X0, X20
	0x0354A704 MOV X2, X31
	0x0354A708 BL 0x33DE64C
	0x0354A70C LDRB W8, [X19 + 0x54]
	0x0354A710 CBZ W8, 0x354A780
	0x0354A714 LDR X0, [X19 + 0x28]
	0x0354A718 STR X31, [X19 + 0x20]
	0x0354A71C CBZ X0, 0x354A830
	0x0354A720 ADRP X8, 0xBEB000
	0x0354A724 LDR X8, [X8 + 0x58]
	0x0354A728 LDR X1, [X8]
	0x0354A72C ADD X8, X31, 0x8
	0x0354A730 BL 0x301CB58
	0x0354A734 ADRP X21, 0xBEB000
	0x0354A738 ADRP X24, 0xBEB000
	0x0354A73C LDUR V0, [X31 + 0x8]
	0x0354A740 LDR X8, [X31 + 0x18]
	0x0354A744 LDR X21, [X21 + 0x48]
	0x0354A748 LDR X24, [X24 + 0x40]
	0x0354A74C STR V0, [X31 + 0x2]
	0x0354A750 STR X8, [X31 + 0x30]
	0x0354A754 LDR X1, [X21]
	0x0354A758 ADD X0, X31, 0x20
	0x0354A75C BL 0x2BC4350
	0x0354A760 TBZ X0, 0x0, 0x354A78C
	0x0354A764 LDR X8, [X31 + 0x30]
	0x0354A768 CBZ X8, 0x354A824
	0x0354A76C LDRB W8, [X8 + 0x14]
	0x0354A770 CBNZ W8, 0x354A754
	0x0354A774 MOV X21, X31
	0x0354A778 MOVZ W23, 0x3
	0x0354A77C B 0x354A794
	0x0354A780 MOV X22, X31
	0x0354A784 MOVZ W23, 0x3
	0x0354A788 B 0x354A7C4
	0x0354A78C MOV X21, X31
	0x0354A790 MOVZ W23, 0x6
	0x0354A794 LDR X1, [X24]
	0x0354A798 ADD X0, X31, 0x20
	0x0354A79C BL 0x2BC434C
	0x0354A7A0 CBNZ X21, 0x354A834
	0x0354A7A4 CMP W23, 0x6
	0x0354A7A8 B.EQ 0x354A7B0
	0x0354A7AC CBNZ W23, 0x354A7C0
	0x0354A7B0 MOV X22, X31
	0x0354A7B4 STRB W31, [X19 + 0x54]
	0x0354A7B8 MOVZ W23, 0x7
	0x0354A7BC B 0x354A7C4
	0x0354A7C0 MOV X22, X31
	0x0354A7C4 LDRB W8, [X31 + 0x4C]
	0x0354A7C8 CBZ W8, 0x354A7D8
	0x0354A7CC MOV X0, X20
	0x0354A7D0 MOV X1, X31
	0x0354A7D4 BL 0x33E14E4
	0x0354A7D8 CBNZ X22, 0x354A828
	0x0354A7DC CMP W23, 0x7
	0x0354A7E0 B.EQ 0x354A7E8
	0x0354A7E4 CBNZ W23, 0x354A80C
	0x0354A7E8 LDRB W8, [X19 + 0x55]
	0x0354A7EC CBNZ W8, 0x354A80C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE96000
	006 Move W8, [X21+3177]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xBAA000
	014 Move X0, [X0+2904]
	015 Call 0x1C17CF4
	016 Move X0, 0xBB2000
	017 Move X0, [X0+3424]
	018 Call 0x1C17CF4
	019 Move X0, 0xBEB000
	020 Move X0, [X0+2984]
	021 Call 0x1C17CF4
	022 Move X0, 0xBAC000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3177], W8
	027 Compare X19, 0
	028 JumpIfEqual {48}
	029 Move X8, 0xBB2000
	030 Move X8, [X8+3424]
	031 Move X0, X19
	032 Move X1, [X8]
	033 Call Dictionary`2<Object, Object>.get_Count, X0
	034 Compare W0, 0
	035 JumpIfEqual {48}
	036 Move X0, [X20+56]
	037 Compare X0, 0
	038 JumpIfEqual {151}
	039 Move X8, [X0]
	040 Move X1, X19
	041 Move X9, [X8+312]
	042 Move X2, [X8+320]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {53}
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Move W1, 255
	054 Move X0, X19
	055 Move X2, X31
	056 Call Hashtable.ContainsKey, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {89}
	061 Move W1, 255
	062 Move X0, X19
	063 Move X2, X31
	064 Call Hashtable.get_Item, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {89}
	067 Move X9, 0xBAC000
	068 Move X9, [X9+632]
	069 Move X8, X0
	070 Move X1, [X9]
	071 Move X9, [X0]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W9, [X20+28]
	074 Compare W9, 0
	075 JumpIfEqual {86}
	076 Move X1, [X20+32]
	077 Move X0, X8
	078 Move X2, X31
	079 Call String.Equals, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {89}
	084 Move X0, X20
	085 Call Player.SetPlayerNameProperty, X0
	086 Move X0, X20
	087 Move X1, X8
	088 Call Player.set_NickName, X0, X1
	089 Move W1, 253
	090 Move X0, X19
	091 Move X2, X31
	092 Call Hashtable.ContainsKey, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {109}
	097 Move W1, 253
	098 Move X0, X19
	099 Move X2, X31
	100 Call Hashtable.get_Item, X0, X1
	101 Compare X0, 0
	102 JumpIfEqual {108}
	103 Move X8, 0xBAC000
	104 Move X8, [X8+632]
	105 Move X1, [X8]
	106 Move X8, [X0]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X20+40], X0
	109 Move W1, 254
	110 Move X0, X19
	111 Move X2, X31
	112 Call Hashtable.ContainsKey, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {133}
	117 Move W1, 254
	118 Move X0, X19
	119 Move X2, X31
	120 Call Hashtable.get_Item, X0, X1
	121 Compare X0, 0
	122 JumpIfEqual {151}
	123 Move X8, 0xBAA000
	124 Move X8, [X8+2904]
	125 Move X9, [X0]
	126 Move X1, [X8]
	127 Move X8, [X9+64]
	128 Move X9, [X1+64]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Call 0x1C17E08
	131 Move W8, [X0]
	132 Move [X20+48], W8
	133 Move X8, 0xBEB000
	134 Move X8, [X8+2984]
	135 Move X21, [X20+56]
	136 Move X0, [X8]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X21
	142 Move X1, X19
	143 Call Extensions.MergeStringKeys, X0, X1
	144 Move X0, [X20+56]
	145 Move X20, [X31+16]
	146 Move X19, [X31+24]
	147 Move X30, [X31+32]
	148 Move X21, [X31+40]
	149 Call Extensions.StripKeysWithNullValues, X0
	150 Return 
	151 Call 0x1C17F20
	152 Move X0, X8
	153 Call 0x1C181E0

Method: System.String ToString()

Disassembly:
	0x0354A7F0 LDR X8, [X19 + 0x30]
	0x0354A7F4 CBZ X8, 0x354A83C
	0x0354A7F8 LDR X9, [X8 + 0x18]
	0x0354A7FC LDR X0, [X8 + 0x40]
	0x0354A800 LDR X2, [X8 + 0x28]
	0x0354A804 MOV X1, X19
	0x0354A808 BLR X9
	0x0354A80C LDP X20, X19, [X31 + 0x70]
	0x0354A810 LDP X22, X21, [X31 + 0x60]
	0x0354A814 LDP X24, X23, [X31 + 0x50]
	0x0354A818 LDR X30, [X31 + 0x40]
	0x0354A81C ADD X31, X31, 0x80
	0x0354A820 RET
	0x0354A824 BL 0x1C16F20
	0x0354A828 MOV X0, X22
	0x0354A82C BL 0x1C16F18
	0x0354A830 BL 0x1C16F20
	0x0354A834 MOV X0, X21
	0x0354A838 BL 0x1C16F18
	0x0354A83C BL 0x1C16F20
	0x0354A840 B 0x354A84C
	0x0354A844 B 0x354A84C
	0x0354A848 B 0x354A84C
	0x0354A84C MOV X22, X1
	0x0354A850 MOV X23, X0
	0x0354A854 B 0x354A898
	0x0354A858 B 0x354A85C
	0x0354A85C MOV X22, X1
	0x0354A860 MOV X23, X0
	0x0354A864 CMP W22, 0x1
	0x0354A868 B.NE 0x354A884
	0x0354A86C MOV X0, X23
	0x0354A870 BL 0x3EB1AD0
	0x0354A874 LDR X21, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE96000
	007 Move X21, 0xBAA000
	008 Move X20, 0xBB3000
	009 Move W8, [X22+3178]
	010 Move X21, [X21+1880]
	011 Move X20, [X20+2040]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xBAA000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB3000
	021 Move X0, [X0+2040]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3178], W8
	025 Move W8, [X19+24]
	026 Move X0, [X21]
	027 Add X1, X31, 12
	028 Move [X31+12], W8
	029 Call 0x1C17E04
	030 Move X8, [X20]
	031 Move X2, [X19+32]
	032 Move X1, X0
	033 Move X3, X31
	034 Move X0, X8
	035 Call String.Format, X0, X1, X2
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return X0

Method: System.String ToStringFull()

Disassembly:
	0x0354A878 BL 0x3EB1AE0
	0x0354A87C MOV W23, W31
	0x0354A880 B 0x354A794
	0x0354A884 MOV X21, X31
	0x0354A888 LDR X1, [X24]
	0x0354A88C ADD X0, X31, 0x20
	0x0354A890 BL 0x2BC434C
	0x0354A894 CBNZ X21, 0x354A8C0
	0x0354A898 CMP W22, 0x1
	0x0354A89C B.NE 0x354A8B8
	0x0354A8A0 MOV X0, X23
	0x0354A8A4 BL 0x3EB1AD0
	0x0354A8A8 LDR X22, [X0]
	0x0354A8AC BL 0x3EB1AE0
	0x0354A8B0 MOV W23, W31
	0x0354A8B4 B 0x354A7C4
	0x0354A8B8 MOV X22, X31
	0x0354A8BC B 0x354A8D8
	0x0354A8C0 MOV X0, X21
	0x0354A8C4 BL 0x1C16F18
	0x0354A8C8 MOV X22, X1
	0x0354A8CC MOV X23, X0
	0x0354A8D0 B 0x354A888
	0x0354A8D4 MOV X23, X0
	0x0354A8D8 LDRB W8, [X31 + 0x4C]
	0x0354A8DC CBZ W8, 0x354A8EC
	0x0354A8E0 MOV X0, X20
	0x0354A8E4 MOV X1, X31
	0x0354A8E8 BL 0x33E14E4
	0x0354A8EC CBNZ X22, 0x354A8F8
	0x0354A8F0 MOV X0, X23
	0x0354A8F4 BL 0x1D2C690
	0x0354A8F8 MOV X0, X22
	0x0354A8FC BL 0x1C16F18
	0x0354A900 BL 0x1990590
	0x0354A904 STR X30, [X31 - 0x20]!
	0x0354A908 STP X20, X19, [X31 + 0x10]
	0x0354A90C ADRP X19, 0xE95000
	0x0354A910 ADRP X20, 0xBEA000
	0x0354A914 LDRB W8, [X19 + 0xC7A]
	0x0354A918 LDR X20, [X20 + 0xF70]
	0x0354A91C TBNZ X8, 0x0, 0x354A934
	0x0354A920 ADRP X0, 0xBEA000
	0x0354A924 LDR X0, [X0 + 0xF70]
	0x0354A928 BL 0x1C16CF4
	0x0354A92C MOVZ W8, 0x1
	0x0354A930 STRB W8, [X19 + 0xC7A]
	0x0354A934 LDR X0, [X20]
	0x0354A938 BL 0x1C16F10
	0x0354A93C MOV X1, X31
	0x0354A940 MOV X19, X0
	0x0354A944 BL 0x33BDD8C
	0x0354A948 LDR X8, [X20]
	0x0354A94C LDR X8, [X8 + 0xB8]
	0x0354A950 STR X19, [X8]
	0x0354A954 LDP X20, X19, [X31 + 0x10]
	0x0354A958 LDR X30, [X31], #0x20
	0x0354A95C RET
	0x0354A960 MOV X1, X31
	0x0354A964 B 0x33BDD8C
	0x0354A968 STR X30, [X31 - 0x10]!
	0x0354A96C CBZ X1, 0x354A994
	0x0354A970 LDR W8, [X1 + 0x28]
	0x0354A974 STR W8, [X31 + 0xC]
	0x0354A978 CBZ X2, 0x354A994
	0x0354A97C LDR W1, [X2 + 0x28]
	0x0354A980 ADD X0, X31, 0xC
	0x0354A984 MOV X2, X31
	0x0354A988 BL 0x337B634
	0x0354A98C LDR X30, [X31], #0x10
	0x0354A990 RET
	0x0354A994 BL 0x1C16F20
	0x0354A998 MOV X1, X31
	0x0354A99C B 0x33BDD8C
	0x0354A9A0 STR X30, [X31 - 0x10]!
	0x0354A9A4 CBZ X1, 0x354A9C4
	0x0354A9A8 LDR X8, [X1 + 0x10]
	0x0354A9AC CBZ X8, 0x354A9C4
	0x0354A9B0 LDR X1, [X0 + 0x10]
	0x0354A9B4 MOV X0, X8
	0x0354A9B8 MOV X2, X31
	0x0354A9BC LDR X30, [X31], #0x10
	0x0354A9C0 B 0x322693C
	0x0354A9C4 BL 0x1C16F20
	0x0354A9C8 LDRB W0, [X0 + 0x14]
	0x0354A9CC RET
	0x0354A9D0 AND W8, W1, 0x1
	0x0354A9D4 STRB W8, [X0 + 0x14]
	0x0354A9D8 RET
	0x0354A9DC LDRB W0, [X0 + 0x15]
	0x0354A9E0 RET
	0x0354A9E4 AND W8, W1, 0x1
	0x0354A9E8 STRB W8, [X0 + 0x15]
	0x0354A9EC RET
	0x0354A9F0 STP X30, X23, [X31 - 0x30]!
	0x0354A9F4 STP X22, X21, [X31 + 0x10]
	0x0354A9F8 STP X20, X19, [X31 + 0x20]
	0x0354A9FC ADRP X23, 0xE95000
	0x0354AA00 ADRP X22, 0xBEA000
	0x0354AA04 LDRB W8, [X23 + 0xC7B]
	0x0354AA08 LDR X22, [X22 + 0xE38]
	0x0354AA0C MOV X19, X2
	0x0354AA10 MOV X21, X1
	0x0354AA14 MOV X20, X0
	0x0354AA18 TBNZ X8, 0x0, 0x354AA30
	0x0354AA1C ADRP X0, 0xBEA000
	0x0354AA20 LDR X0, [X0 + 0xE38]
	0x0354AA24 BL 0x1C16CF4
	0x0354AA28 MOVZ W8, 0x1
	0x0354AA2C STRB W8, [X23 + 0xC7B]
	0x0354AA30 MOV X0, X20
	0x0354AA34 MOV X1, X31
	0x0354AA38 BL 0x33BDD8C
	0x0354AA3C STR X21, [X20 + 0x30]
	0x0354AA40 LDR X0, [X22]
	0x0354AA44 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE96000
	007 Move X22, 0xBAA000
	008 Move X21, 0xBAA000
	009 Move W8, [X20+3179]
	010 Move X22, [X22+2512]
	011 Move X21, [X21+1880]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xBEB000
	018 Move X0, [X0+2984]
	019 Call 0x1C17CF4
	020 Move X0, 0xBAA000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0xBAA000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB3000
	027 Move X0, [X0+2048]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB3000
	030 Move X0, [X0+2056]
	031 Call 0x1C17CF4
	032 Move X0, 0xBAA000
	033 Move X0, [X0+2440]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3179], W8
	037 Move X0, [X22]
	038 Move W1, 4
	039 Call 0x1C17D6C
	040 Move X20, X0
	041 Move W8, [X19+24]
	042 Move X0, [X21]
	043 Add X1, X31, 12
	044 Move [X31+12], W8
	045 Call 0x1C17E04
	046 Compare X20, 0
	047 JumpIfEqual {131}
	048 Move X21, X0
	049 Compare X0, 0
	050 JumpIfEqual {57}
	051 Move X8, [X20]
	052 Move X0, X21
	053 Move X1, [X8+64]
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfEqual {128}
	057 Move W8, [X20+24]
	058 Compare W8, 0
	059 JumpIfEqual {127}
	060 Move [X20+32], X21
	061 Move X21, [X19+32]
	062 Compare X21, 0
	063 JumpIfEqual {71}
	064 Move X8, [X20]
	065 Move X0, X21
	066 Move X1, [X8+64]
	067 Call 0x1C17E00
	068 Compare X0, 0
	069 JumpIfEqual {128}
	070 Move W8, [X20+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X20+40], X21
	073 Move W9, [X19+48]
	074 Move X10, 0xBB3000
	075 Move X11, 0xBAA000
	076 Move X12, 0xBB3000
	077 Move X10, [X10+2048]
	078 Move X11, [X11+2440]
	079 Move X12, [X12+2056]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X21, [X10]
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move X22, [X9]
	084 Compare X22, 0
	085 JumpIfEqual {93}
	086 Move X8, [X20]
	087 Move X0, X22
	088 Move X1, [X8+64]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {128}
	092 Move W8, [X20+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, 0xBEB000
	095 Move X8, [X8+2984]
	096 Move [X20+48], X22
	097 Move X19, [X19+56]
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X19
	104 Call Extensions.ToStringFull, X0
	105 Move X19, X0
	106 Compare X0, 0
	107 JumpIfEqual {114}
	108 Move X8, [X20]
	109 Move X0, X19
	110 Move X1, [X8+64]
	111 Call 0x1C17E00
	112 Compare X0, 0
	113 JumpIfEqual {128}
	114 Move W8, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X21
	117 Move X1, X20
	118 Move X2, X31
	119 Move [X20+56], X19
	120 Call String.Format, X0, X1
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Return X0
	127 Call 0x1C17F28
	128 Call 0x1C17F44
	129 Move X1, X31
	130 Call 0x1C17DEC
	131 Call 0x1C17F20

Method: System.Boolean Equals(System.Object p)

Disassembly:
	0x0354AA48 CBNZ W8, 0x354AA50
	0x0354AA4C BL 0x1C16DFC
	0x0354AA50 CBZ X21, 0x354AA7C
	0x0354AA54 LDR X8, [X22]
	0x0354AA58 LDR X8, [X8 + 0xB8]
	0x0354AA5C LDR W8, [X8 + 0x8]
	0x0354AA60 STR W8, [X21 + 0x28]
	0x0354AA64 STRB W31, [X20 + 0x14]
	0x0354AA68 STR X19, [X20 + 0x18]
	0x0354AA6C LDP X20, X19, [X31 + 0x20]
	0x0354AA70 LDP X22, X21, [X31 + 0x10]
	0x0354AA74 LDP X30, X23, [X31], #0x30
	0x0354AA78 RET
	0x0354AA7C BL 0x1C16F20
	0x0354AA80 STR X30, [X31 - 0x30]!
	0x0354AA84 STP X22, X21, [X31 + 0x10]
	0x0354AA88 STP X20, X19, [X31 + 0x20]
	0x0354AA8C ADRP X19, 0xE95000
	0x0354AA90 ADRP X21, 0xBEA000
	0x0354AA94 ADRP X22, 0xBA9000
	0x0354AA98 LDRB W8, [X19 + 0xC7C]
	0x0354AA9C LDR X21, [X21 + 0xD80]
	0x0354AAA0 LDR X22, [X22 + 0x6C0]
	0x0354AAA4 TBNZ X8, 0x0, 0x354AAEC
	0x0354AAA8 ADRP X0, 0xBEA000
	0x0354AAAC LDR X0, [X0 + 0xFF8]
	0x0354AAB0 BL 0x1C16CF4
	0x0354AAB4 ADRP X0, 0xBEB000
	0x0354AAB8 LDR X0, [X0 + 0x68]
	0x0354AABC BL 0x1C16CF4
	0x0354AAC0 ADRP X0, 0xBEB000
	0x0354AAC4 LDR X0, [X0 + 0x70]
	0x0354AAC8 BL 0x1C16CF4
	0x0354AACC ADRP X0, 0xBEA000
	0x0354AAD0 LDR X0, [X0 + 0xD80]
	0x0354AAD4 BL 0x1C16CF4
	0x0354AAD8 ADRP X0, 0xBA9000
	0x0354AADC LDR X0, [X0 + 0x6C0]
	0x0354AAE0 BL 0x1C16CF4
	0x0354AAE4 MOVZ W8, 0x1
	0x0354AAE8 STRB W8, [X19 + 0xC7C]
	0x0354AAEC LDR X8, [X21]
	0x0354AAF0 LDR X0, [X22]
	0x0354AAF4 LDR X8, [X8 + 0xB8]
	0x0354AAF8 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE96000
	006 Move W8, [X21+3180]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBEB000
	014 Move X0, [X0+3360]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3180], W8
	018 Compare X20, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xBEB000
	021 Move X8, [X8+3360]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move W0, W31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Move X8, [X19]
	039 Move X0, X19
	040 Move X9, [X8+344]
	041 Move X1, [X8+352]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X20, 0
	044 JumpIfEqual {53}
	045 Move X8, [X20]
	046 Move W19, W0
	047 Move X0, X20
	048 Move X9, [X8+344]
	049 Move X1, [X8+352]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x0354AAFC LDR X19, [X8]
	0x0354AB00 CBNZ W9, 0x354AB08

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void ChangeLocalID(System.Int32 newID)

Disassembly:
	0x0353E9A8 ADD X0, X31, 0x8
	0x0353E9AC BL 0x2BC434C
	0x0353E9B0 LDP X20, X19, [X31 + 0x50]
	0x0353E9B4 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move W8, [X0+28]
	002 Compare W8, 0
	003 JumpIfEqual {5}
	004 Move [X0+24], W1
	005 Return 

Method: System.Boolean SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, ExitGames.Client.Photon.Hashtable expectedValues = null, Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x0353D0F8 LDR X20, [X31 + 0x18]
	0x0353D0FC CBZ X20, 0x353D188
	0x0353D100 LDR X8, [X20]
	0x0353D104 LDR X1, [X23]
	0x0353D108 LDRH W9, [X8 + 0x12E]
	0x0353D10C CBZ X9, 0x353D130
	0x0353D110 LDR X10, [X8 + 0xB0]
	0x0353D114 ADD X10, X10, 0x8
	0x0353D118 LDUR X11, [X10 - 0x8]
	0x0353D11C CMP X11, X1
	0x0353D120 B.EQ 0x353D140
	0x0353D124 SUBS X9, X9, 0x1
	0x0353D128 ADD X10, X10, 0x10
	0x0353D12C B.NE 0x353D118
	0x0353D130 MOVZ W2, 0x2
	0x0353D134 MOV X0, X20
	0x0353D138 BL 0x1C5C788
	0x0353D13C B 0x353D150
	0x0353D140 LDR W9, [X10]
	0x0353D144 ADD W9, W9, 0x2
	0x0353D148 ADD X8, X8, W9, 0x4, SXTW
	0x0353D14C ADD X0, X8, 0x138
	0x0353D150 LDP X8, X2, [X0]
	0x0353D154 MOV X0, X20
	0x0353D158 MOV X1, X19
	0x0353D15C BLR X8
	0x0353D160 B 0x353D0E8
	0x0353D164 LDR X1, [X21]
	0x0353D168 ADD X0, X31, 0x8
	0x0353D16C BL 0x2BC434C
	0x0353D170 LDP X20, X19, [X31 + 0x50]
	0x0353D174 LDP X22, X21, [X31 + 0x40]
	0x0353D178 LDP X24, X23, [X31 + 0x30]
	0x0353D17C LDR X30, [X31 + 0x20]
	0x0353D180 ADD X31, X31, 0x60
	0x0353D184 RET
	0x0353D188 BL 0x1C16F20
	0x0353D18C BL 0x1C16F20
	0x0353D190 B 0x353D198
	0x0353D194 B 0x353D198
	0x0353D198 MOV X19, X0
	0x0353D19C CMP W1, 0x1
	0x0353D1A0 B.NE 0x353D1CC
	0x0353D1A4 MOV X0, X19
	0x0353D1A8 BL 0x3EB1AD0
	0x0353D1AC LDR X20, [X0]
	0x0353D1B0 BL 0x3EB1AE0
	0x0353D1B4 LDR X1, [X21]
	0x0353D1B8 ADD X0, X31, 0x8
	0x0353D1BC BL 0x2BC434C
	0x0353D1C0 CBZ X20, 0x353D170
	0x0353D1C4 MOV X0, X20
	0x0353D1C8 BL 0x1C16F18
	0x0353D1CC MOV X20, X31
	0x0353D1D0 B 0x353D1D8
	0x0353D1D4 MOV X19, X0
	0x0353D1D8 LDR X1, [X21]
	0x0353D1DC ADD X0, X31, 0x8
	0x0353D1E0 BL 0x2BC434C
	0x0353D1E4 CBNZ X20, 0x353D1F0
	0x0353D1E8 MOV X0, X19
	0x0353D1EC BL 0x1D2C690
	0x0353D1F0 MOV X0, X20
	0x0353D1F4 BL 0x1C16F18
	0x0353D1F8 BL 0x1990590
	0x0353D1FC STP X30, X25, [X31 - 0x40]!
	0x0353D200 STP X24, X23, [X31 + 0x10]
	0x0353D204 STP X22, X21, [X31 + 0x20]
	0x0353D208 STP X20, X19, [X31 + 0x30]
	0x0353D20C ADRP X25, 0xEA2000
	0x0353D210 ADRP X24, 0xBBF000
	0x0353D214 LDRB W8, [X25 + 0xC05]
	0x0353D218 LDR X24, [X24 + 0x228]
	0x0353D21C MOV X19, X4
	0x0353D220 MOV X20, X3
	0x0353D224 MOV X21, X2
	0x0353D228 MOV W22, W1
	0x0353D22C MOV X23, X0
	0x0353D230 TBNZ X8, 0x0, 0x353D248
	0x0353D234 ADRP X0, 0xBBF000
	0x0353D238 LDR X0, [X0 + 0x228]
	0x0353D23C BL 0x1C16CF4
	0x0353D240 MOVZ W8, 0x1
	0x0353D244 STRB W8, [X25 + 0xC05]
	0x0353D248 LDR W2, [X23 + 0x80]
	0x0353D24C LDR X3, [X24]
	0x0353D250 MOVZ W1, 0xFD
	0x0353D254 MOV X0, X23
	0x0353D258 BL 0x353ACB8
	0x0353D25C TBZ X0, 0x0, 0x353D298
	0x0353D260 LDR X0, [X23 + 0x10]
	0x0353D264 CBZ X0, 0x353D2B0
	0x0353D268 LDR X8, [X0]
	0x0353D26C MOV W1, W22
	0x0353D270 MOV X2, X21
	0x0353D274 MOV X3, X20
	0x0353D278 LDR X6, [X8 + 0x318]
	0x0353D27C LDR X5, [X8 + 0x320]
	0x0353D280 MOV X4, X19
	0x0353D284 LDP X20, X19, [X31 + 0x30]
	0x0353D288 LDP X22, X21, [X31 + 0x20]
	0x0353D28C LDP X24, X23, [X31 + 0x10]
	0x0353D290 LDP X30, X25, [X31], #0x40
	0x0353D294 BR X6
	0x0353D298 LDP X20, X19, [X31 + 0x30]
	0x0353D29C LDP X22, X21, [X31 + 0x20]
	0x0353D2A0 LDP X24, X23, [X31 + 0x10]
	0x0353D2A4 MOV W0, W31
	0x0353D2A8 LDP X30, X25, [X31], #0x40
	0x0353D2AC RET
	0x0353D2B0 BL 0x1C16F20
	0x0353D2B4 STP X30, X23, [X31 - 0x30]!
	0x0353D2B8 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xEA3000
	009 Move W8, [X23+3181]
	010 Move X21, X3
	011 Move X22, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xBBF000
	019 Move X0, [X0+3424]
	020 Call 0x1C17CF4
	021 Move X0, 0xBF8000
	022 Move X0, [X0+2984]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3181], W8
	026 Compare X20, 0
	027 JumpIfEqual {109}
	028 Move X24, 0xBBF000
	029 Move X24, [X24+3424]
	030 Move X0, X20
	031 Move X1, [X24]
	032 Call Dictionary`2<Object, Object>.get_Count, X0
	033 Compare W0, 0
	034 JumpIfEqual {110}
	035 Move X23, 0xBF8000
	036 Move X23, [X23+2984]
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Call Extensions.StripToStringKeys, X0
	044 Move X8, [X19+16]
	045 Move X20, X0
	046 Compare X8, 0
	047 JumpIfEqual {81}
	048 Move W8, [X8+104]
	049 Compare W8, 0
	050 JumpIfEqual {118}
	051 Compare X20, 0
	052 JumpIfEqual {142}
	053 Move X1, [X24]
	054 Move X0, X20
	055 Call Dictionary`2<Object, Object>.get_Count, X0
	056 Compare W0, 0
	057 JumpIfEqual {110}
	058 Move X0, [X23]
	059 Move X21, [X19+56]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X20
	066 Call Extensions.Merge, X0, X1
	067 Move X0, [X19+56]
	068 Call Extensions.StripKeysWithNullValues, X0
	069 Move X8, [X19+16]
	070 Compare X8, 0
	071 JumpIfEqual {142}
	072 Move X8, [X8+96]
	073 Compare X8, 0
	074 JumpIfEqual {142}
	075 Move X0, [X8+192]
	076 Compare X0, 0
	077 JumpIfEqual {142}
	078 Move X1, X19
	079 Move X2, X20
	080 Call InRoomCallbacksContainer.OnPlayerPropertiesUpdate, X0, X1, X2
	081 Move W8, [X19+28]
	082 Compare W8, 0
	083 JumpIfEqual {109}
	084 Compare X20, 0
	085 JumpIfEqual {142}
	086 Move X1, [X24]
	087 Move X0, X20
	088 Call Dictionary`2<Object, Object>.get_Count, X0
	089 Move W8, W0
	090 Move W0, W31
	091 Compare X21, 0
	092 JumpIfNotEqual {110}
	093 Compare X22, 0
	094 JumpIfNotEqual {110}
	095 Compare W8, 0
	096 JumpIfEqual {110}
	097 Move X0, [X23]
	098 Move X21, [X19+56]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X21
	104 Move X1, X20
	105 Call Extensions.Merge, X0, X1
	106 Move X0, [X19+56]
	107 Call Extensions.StripKeysWithNullValues, X0
	108 Move W0, 1
	109 Move W0, W31
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Return X0
	118 Move X0, [X23]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X22
	124 Call Extensions.StripToStringKeys, X0
	125 Move X8, [X19+16]
	126 Compare X8, 0
	127 JumpIfEqual {142}
	128 Move X3, X0
	129 Move X0, [X8+96]
	130 Compare X0, 0
	131 JumpIfEqual {142}
	132 Move W1, [X19+24]
	133 Move X2, X20
	134 Move X4, X21
	135 Move X20, [X31+48]
	136 Move X19, [X31+56]
	137 Move X22, [X31+32]
	138 Move X21, [X31+40]
	139 Move X24, [X31+16]
	140 Move X23, [X31+24]
	141 Move X30, [X31+64]
	142 Call 0x1C17F20

Method: System.Boolean SetPlayerNameProperty()

Disassembly:
	0x0354A2B4 BL 0x1C16F18
	0x0354A2B8 B 0x354A2C8
	0x0354A2BC B 0x354A2C8
	0x0354A2C0 B 0x354A2C8
	0x0354A2C4 B 0x354A2C8
	0x0354A2C8 MOV X20, X1
	0x0354A2CC MOV X22, X0
	0x0354A2D0 B 0x354A32C
	0x0354A2D4 B 0x354A2EC
	0x0354A2D8 B 0x354A2EC
	0x0354A2DC B 0x354A2EC
	0x0354A2E0 B 0x354A2EC
	0x0354A2E4 B 0x354A2EC
	0x0354A2E8 B 0x354A2EC
	0x0354A2EC MOV X22, X0
	0x0354A2F0 CMP W1, 0x1
	0x0354A2F4 B.NE 0x354A30C
	0x0354A2F8 MOV X0, X22
	0x0354A2FC BL 0x3EB1AD0
	0x0354A300 LDR X21, [X0]
	0x0354A304 BL 0x3EB1AE0
	0x0354A308 B 0x354A23C
	0x0354A30C MOV X20, X1
	0x0354A310 MOV X21, X31
	0x0354A314 ADRP X8, 0xBEA000
	0x0354A318 LDR X8, [X8 + 0xF38]
	0x0354A31C LDR X1, [X8]
	0x0354A320 ADD X0, X31, 0x20
	0x0354A324 BL 0x2BC434C
	0x0354A328 CBNZ X21, 0x354A350
	0x0354A32C CMP W20, 0x1
	0x0354A330 B.NE 0x354A348
	0x0354A334 MOV X0, X22
	0x0354A338 BL 0x3EB1AD0
	0x0354A33C LDR X20, [X0]
	0x0354A340 BL 0x3EB1AE0
	0x0354A344 B 0x354A258
	0x0354A348 MOV X20, X31
	0x0354A34C B 0x354A368
	0x0354A350 MOV X0, X21
	0x0354A354 BL 0x1C16F18
	0x0354A358 MOV X20, X1
	0x0354A35C MOV X22, X0
	0x0354A360 B 0x354A314

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE96000
	005 Move W8, [X20+3182]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBB2000
	012 Move X0, [X0+3488]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3182], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {22}
	019 Move W8, [X8+104]
	020 Compare W8, 0
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W0, W31
	025 Move X30, [X31+32]
	026 Return X0
	027 Move X8, 0xBB2000
	028 Move X8, [X8+3488]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X20, X0
	033 Call Hashtable..ctor, X0
	034 Compare X20, 0
	035 JumpIfEqual {56}
	036 Move X2, [X19+32]
	037 Move W1, 255
	038 Move X0, X20
	039 Move X3, X31
	040 Call Hashtable.set_Item, X0, X1, X2
	041 Move X8, [X19+16]
	042 Compare X8, 0
	043 JumpIfEqual {56}
	044 Move X0, [X8+96]
	045 Compare X0, 0
	046 JumpIfEqual {56}
	047 Move W1, [X19+24]
	048 Move X2, X20
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X3, X31
	052 Move X4, X31
	053 Move X30, [X31+32]
	054 Call LoadBalancingClient.OpSetPropertiesOfActor, X0, X1, X2, X3, X4
	055 Return X0
	056 Call 0x1C17F20

