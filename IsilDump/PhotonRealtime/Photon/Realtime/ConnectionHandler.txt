Type: Photon.Realtime.ConnectionHandler

Method: Photon.Realtime.LoadBalancingClient get_Client()

Disassembly:
	0x03536134 B 0x353609C
	0x03536138 MOV X20, X31

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Client(Photon.Realtime.LoadBalancingClient value)

Disassembly:
	0x0353613C B 0x3536144
	0x03536140 MOV X21, X0

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int32 get_CountSendAcksOnly()

Disassembly:
	0x03536144 LDRB W8, [X31 + 0x1C]
	0x03536148 CBZ W8, 0x3536158

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_CountSendAcksOnly(System.Int32 value)

Disassembly:
	0x0353614C MOV X0, X19
	0x03536150 MOV X1, X31

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.Boolean get_FallbackThreadRunning()

Disassembly:
	0x03536154 BL 0x33E14E4
	0x03536158 CBNZ X20, 0x3536164
	0x0353615C MOV X0, X21
	0x03536160 BL 0x1D2C690

ISIL:
	001 Move W8, [X0+53]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void StaticReset()

Disassembly:
	0x03536164 MOV X0, X20
	0x03536168 BL 0x1C16F18
	0x0353616C BL 0x1990590
	0x03536170 SUB X31, X31, 0x40
	0x03536174 STP D9, D8, [X31 + 0x10]
	0x03536178 STP X30, X21, [X31 + 0x20]
	0x0353617C STP X20, X19, [X31 + 0x30]
	0x03536180 ADRP X21, 0xEA9000
	0x03536184 LDRB W8, [X21 + 0xBD1]
	0x03536188 MOV X19, X1
	0x0353618C MOV X20, X0
	0x03536190 TBNZ X8, 0x0, 0x35361C0
	0x03536194 ADRP X0, 0xBFE000
	0x03536198 LDR X0, [X0 + 0xBA0]
	0x0353619C BL 0x1C16CF4
	0x035361A0 ADRP X0, 0xBC5000
	0x035361A4 LDR X0, [X0 + 0xF00]
	0x035361A8 BL 0x1C16CF4
	0x035361AC ADRP X0, 0xBC5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xEAA000
	005 Move X20, 0xBFF000
	006 Move W8, [X19+3010]
	007 Move X20, [X20+2888]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBFF000
	013 Move X0, [X0+2888]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3010], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8+4], W31
	022 Move [X8], W31
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void Awake()

Disassembly:
	0x035361B0 LDR X0, [X0 + 0xF08]
	0x035361B4 BL 0x1C16CF4
	0x035361B8 MOVZ W8, 0x1
	0x035361BC STRB W8, [X21 + 0xBD1]
	0x035361C0 STRB W31, [X31 + 0xC]
	0x035361C4 STR W31, [X31 + 0x8]
	0x035361C8 CBZ X19, 0x35362E4
	0x035361CC ADRP X8, 0xBC5000
	0x035361D0 LDR X8, [X8 + 0xF08]
	0x035361D4 LDR X9, [X19]
	0x035361D8 LDR X1, [X8]
	0x035361DC LDR X8, [X9 + 0x40]
	0x035361E0 LDR X9, [X1 + 0x40]
	0x035361E4 CMP X8, X9
	0x035361E8 B.NE 0x35362E8
	0x035361EC ADRP X21, 0xBFE000
	0x035361F0 LDR X21, [X21 + 0xBA0]
	0x035361F4 MOV X0, X19
	0x035361F8 BL 0x1C16E08
	0x035361FC MOV X8, X0
	0x03536200 LDR X0, [X21]
	0x03536204 LDP S9, S8, [X8]
	0x03536208 LDR W9, [X0 + 0xE0]
	0x0353620C CBNZ W9, 0x3536218
	0x03536210 BL 0x1C16DFC
	0x03536214 LDR X0, [X21]
	0x03536218 LDR X8, [X0 + 0xB8]
	0x0353621C LDR X19, [X8 + 0x8]
	0x03536220 STRB W31, [X31 + 0xC]
	0x03536224 ADD X1, X31, 0xC
	0x03536228 MOV X0, X19
	0x0353622C MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEAA000
	005 Move W8, [X20+3011]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBBE000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3011], W8
	016 Move W8, [X19+52]
	017 Compare W8, 0
	018 JumpIfEqual {38}
	019 Move X20, 0xBBE000
	020 Move X20, [X20+1432]
	021 Move X0, X19
	022 Move X1, X31
	023 Call Component.get_gameObject, X0
	024 Move X8, [X20]
	025 Move X19, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X1, X31
	035 Move X30, [X31+32]
	036 Call Object.DontDestroyOnLoad, X0
	037 Return 
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03536230 BL 0x33DE64C
	0x03536234 LDR X0, [X21]
	0x03536238 LDR W8, [X0 + 0xE0]
	0x0353623C CBNZ W8, 0x3536248
	0x03536240 BL 0x1C16DFC
	0x03536244 LDR X0, [X21]
	0x03536248 ADRP X9, 0xBC5000
	0x0353624C LDR X8, [X0 + 0xB8]
	0x03536250 LDR X9, [X9 + 0xF00]
	0x03536254 LDR X21, [X8 + 0x8]
	0x03536258 LDR X0, [X9]
	0x0353625C STR W31, [X31 + 0x8]
	0x03536260 LDR W8, [X0 + 0xE0]
	0x03536264 CBNZ W8, 0x353626C
	0x03536268 BL 0x1C16DFC
	0x0353626C ADD X1, X31, 0x8
	0x03536270 MOV V0.16B, V9.16B
	0x03536274 MOV X0, X21
	0x03536278 MOV X2, X31
	0x0353627C BL 0x3506860
	0x03536280 ADD X1, X31, 0x8
	0x03536284 MOV V0.16B, V8.16B
	0x03536288 MOV X0, X21
	0x0353628C MOV X2, X31
	0x03536290 BL 0x3506860
	0x03536294 CBZ X20, 0x35362F8
	0x03536298 MOVZ W3, 0x8
	0x0353629C MOV X0, X20
	0x035362A0 MOV X1, X21
	0x035362A4 MOV W2, W31
	0x035362A8 MOV X4, X31
	0x035362AC BL 0x3517F60
	0x035362B0 MOV X21, X31
	0x035362B4 LDRB W8, [X31 + 0xC]
	0x035362B8 CBZ W8, 0x35362C8
	0x035362BC MOV X0, X19
	0x035362C0 MOV X1, X31
	0x035362C4 BL 0x33E14E4
	0x035362C8 CBNZ X21, 0x35362F0
	0x035362CC LDP X20, X19, [X31 + 0x30]
	0x035362D0 LDP X30, X21, [X31 + 0x20]
	0x035362D4 LDP D9, D8, [X31 + 0x10]
	0x035362D8 MOVZ W0, 0x8
	0x035362DC ADD X31, X31, 0x40
	0x035362E0 RET
	0x035362E4 BL 0x1C16F20
	0x035362E8 MOV X0, X19
	0x035362EC BL 0x1C171E0
	0x035362F0 MOV X0, X21
	0x035362F4 BL 0x1C16F18
	0x035362F8 BL 0x1C16F20
	0x035362FC B 0x3536308
	0x03536300 B 0x3536308

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEAA000
	006 Move X20, 0xBFF000
	007 Move W8, [X21+3012]
	008 Move X20, [X20+2888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xBFF000
	015 Move X0, [X0+2888]
	016 Call 0x1C17CF4
	017 Move X0, 0xBC6000
	018 Move X0, [X0+3680]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3012], W8
	022 Move X0, X19
	023 Call ConnectionHandler.StopFallbackSendAckThread, X0
	024 Move X8, [X20]
	025 Move X8, [X8+184]
	026 Move W8, [X8]
	027 Compare W8, 0
	028 JumpIfEqual {65}
	029 Move X0, [X19+32]
	030 Compare X0, 0
	031 JumpIfEqual {51}
	032 Move X8, [X0+16]
	033 Compare X8, 0
	034 JumpIfEqual {51}
	035 Move W8, [X0+144]
	036 Compare W8, 0
	037 JumpIfEqual {51}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W1, 20
	040 Call LoadBalancingClient.Disconnect, X0, X1
	041 Move X8, [X19+32]
	042 Compare X8, 0
	043 JumpIfEqual {70}
	044 Move X0, [X8+16]
	045 Compare X0, 0
	046 JumpIfEqual {70}
	047 Move X8, [X0]
	048 Move X9, [X8+456]
	049 Move X1, [X8+464]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, 0xBC6000
	052 Move X8, [X8+3680]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X0, X31
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call SupportClass.StopAllBackgroundCalls
	064 Return 
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 
	070 Call 0x1C17F20

Method: System.Void OnApplicationQuit()

Disassembly:
	0x035365BC BL 0x1C16CF4
	0x035365C0 MOVZ W8, 0x1
	0x035365C4 STRB W8, [X21 + 0xBD3]
	0x035365C8 STRB W31, [X31 + 0xC]
	0x035365CC STR W31, [X31 + 0x8]
	0x035365D0 CBZ X19, 0x353671C
	0x035365D4 ADRP X8, 0xBBE000
	0x035365D8 LDR X8, [X8 + 0x5A8]
	0x035365DC LDR X9, [X19]
	0x035365E0 LDR X1, [X8]
	0x035365E4 LDR X8, [X9 + 0x40]
	0x035365E8 LDR X9, [X1 + 0x40]
	0x035365EC CMP X8, X9
	0x035365F0 B.NE 0x3536720
	0x035365F4 ADRP X21, 0xBFE000
	0x035365F8 LDR X21, [X21 + 0xBA0]
	0x035365FC MOV X0, X19
	0x03536600 BL 0x1C16E08
	0x03536604 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xEAA000
	005 Move X20, 0xBFF000
	006 Move W8, [X19+3013]
	007 Move X20, [X20+2888]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBFF000
	013 Move X0, [X0+2888]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3013], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 1
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void OnApplicationPause(System.Boolean pause)

Disassembly:
	0x03536608 LDR X0, [X21]
	0x0353660C LDP S10, S9, [X8]
	0x03536610 LDP S8, S11, [X8 + 0x8]
	0x03536614 LDR W9, [X0 + 0xE0]
	0x03536618 CBNZ W9, 0x3536624
	0x0353661C BL 0x1C16DFC
	0x03536620 LDR X0, [X21]
	0x03536624 LDR X8, [X0 + 0xB8]
	0x03536628 LDR X19, [X8 + 0x10]
	0x0353662C STRB W31, [X31 + 0xC]
	0x03536630 ADD X1, X31, 0xC
	0x03536634 MOV X0, X19
	0x03536638 MOV X2, X31
	0x0353663C BL 0x33DE64C
	0x03536640 LDR X0, [X21]
	0x03536644 LDR W8, [X0 + 0xE0]
	0x03536648 CBNZ W8, 0x3536654
	0x0353664C BL 0x1C16DFC
	0x03536650 LDR X0, [X21]
	0x03536654 ADRP X9, 0xBC5000
	0x03536658 LDR X8, [X0 + 0xB8]
	0x0353665C LDR X9, [X9 + 0xF00]
	0x03536660 LDR X21, [X8 + 0x10]
	0x03536664 LDR X0, [X9]
	0x03536668 STR W31, [X31 + 0x8]
	0x0353666C LDR W8, [X0 + 0xE0]
	0x03536670 CBNZ W8, 0x3536678
	0x03536674 BL 0x1C16DFC
	0x03536678 ADD X1, X31, 0x8
	0x0353667C MOV V0.16B, V11.16B
	0x03536680 MOV X0, X21
	0x03536684 MOV X2, X31
	0x03536688 BL 0x3506860
	0x0353668C ADD X1, X31, 0x8
	0x03536690 MOV V0.16B, V10.16B
	0x03536694 MOV X0, X21
	0x03536698 MOV X2, X31
	0x0353669C BL 0x3506860
	0x035366A0 ADD X1, X31, 0x8
	0x035366A4 MOV V0.16B, V9.16B
	0x035366A8 MOV X0, X21
	0x035366AC MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xEAA000
	008 Move X22, 0xBFF000
	009 Move W8, [X23+3014]
	010 Move X22, [X22+2888]
	011 Move W20, W1
	012 Move X19, X0
	013 And W21, W1, 1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xBFF000
	019 Move X0, [X0+2888]
	020 Call 0x1C17CF4
	021 Move X0, 0xBC6000
	022 Move X0, [X0+3728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3014], W8
	026 Move X8, [X22]
	027 Move X9, [X8+184]
	028 Move X8, 0xBC6000
	029 Move X8, [X8+3728]
	030 Move [X9+1], W21
	031 Move TEMP, X20
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {48}
	035 Move W10, 1
	036 Move [X9+2], W10
	037 Move X1, [X8]
	038 Move X0, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Call MonoBehaviour.CancelInvoke, X0, X1
	047 Return 
	048 Move X1, [X8]
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move S0, 5
	055 Move X2, X31
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Call MonoBehaviour.Invoke, X0, X1, V0
	059 Return 

Method: System.Void ResetAppPauseRecent()

Disassembly:
	0x035366B0 BL 0x3506860
	0x035366B4 ADD X1, X31, 0x8
	0x035366B8 MOV V0.16B, V8.16B
	0x035366BC MOV X0, X21
	0x035366C0 MOV X2, X31
	0x035366C4 BL 0x3506860
	0x035366C8 CBZ X20, 0x3536730
	0x035366CC MOVZ W3, 0x10
	0x035366D0 MOV X0, X20
	0x035366D4 MOV X1, X21
	0x035366D8 MOV W2, W31
	0x035366DC MOV X4, X31
	0x035366E0 BL 0x3517F60
	0x035366E4 MOV X21, X31
	0x035366E8 LDRB W8, [X31 + 0xC]
	0x035366EC CBZ W8, 0x35366FC
	0x035366F0 MOV X0, X19
	0x035366F4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xEAA000
	005 Move X20, 0xBFF000
	006 Move W8, [X19+3015]
	007 Move X20, [X20+2888]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBFF000
	013 Move X0, [X0+2888]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3015], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8+2], W31
	022 Move X30, [X31+32]
	023 Return 

Method: System.Void OnApplicationFocus(System.Boolean focus)

Disassembly:
	0x035366F8 BL 0x33E14E4
	0x035366FC CBNZ X21, 0x3536728
	0x03536700 LDP X20, X19, [X31 + 0x40]
	0x03536704 LDP X30, X21, [X31 + 0x30]
	0x03536708 LDP D9, D8, [X31 + 0x20]
	0x0353670C LDP D11, D10, [X31 + 0x10]
	0x03536710 MOVZ W0, 0x10
	0x03536714 ADD X31, X31, 0x50
	0x03536718 RET
	0x0353671C BL 0x1C16F20
	0x03536720 MOV X0, X19
	0x03536724 BL 0x1C171E0
	0x03536728 MOV X0, X21
	0x0353672C BL 0x1C16F18
	0x03536730 BL 0x1C16F20
	0x03536734 B 0x3536748
	0x03536738 B 0x3536748
	0x0353673C B 0x3536748
	0x03536740 B 0x3536748
	0x03536744 B 0x3536748
	0x03536748 MOV X20, X0
	0x0353674C CMP W1, 0x1
	0x03536750 B.NE 0x3536768
	0x03536754 MOV X0, X20
	0x03536758 BL 0x3EB1AD0
	0x0353675C LDR X21, [X0]
	0x03536760 BL 0x3EB1AE0
	0x03536764 B 0x35366E8
	0x03536768 MOV X21, X31
	0x0353676C B 0x3536774
	0x03536770 MOV X20, X0
	0x03536774 LDRB W8, [X31 + 0xC]
	0x03536778 CBZ W8, 0x3536788
	0x0353677C MOV X0, X19
	0x03536780 MOV X1, X31
	0x03536784 BL 0x33E14E4
	0x03536788 CBNZ X21, 0x3536794
	0x0353678C MOV X0, X20
	0x03536790 BL 0x1D2C690
	0x03536794 MOV X0, X21
	0x03536798 BL 0x1C16F18
	0x0353679C BL 0x1990590
	0x035367A0 SUB X31, X31, 0x60

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEAA000
	007 Move X21, 0xBFF000
	008 Move W8, [X22+3016]
	009 Move X21, [X21+2888]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xBFF000
	017 Move X0, [X0+2888]
	018 Call 0x1C17CF4
	019 Move X0, 0xBC6000
	020 Move X0, [X0+3736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3016], W8
	024 Move X8, [X21]
	025 NotImplemented "Instruction ORN not yet implemented."
	026 And W10, W10, 1
	027 Move X9, [X8+184]
	028 Move X8, 0xBC6000
	029 Move X8, [X8+3736]
	030 Move [X9+3], W10
	031 Move TEMP, X20
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {46}
	035 Move X1, [X8]
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move S0, 5
	042 Move X2, X31
	043 Move X30, [X31+48]
	044 Call MonoBehaviour.Invoke, X0, X1, V0
	045 Return 
	046 Move W10, 1
	047 Move [X9+4], W10
	048 Move X1, [X8]
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X2, X31
	055 Move X30, [X31+48]
	056 Call MonoBehaviour.CancelInvoke, X0, X1
	057 Return 

Method: System.Void ResetAppOutOfFocusRecent()

Disassembly:
	0x035367A4 STP X30, X23, [X31 + 0x30]
	0x035367A8 STP X22, X21, [X31 + 0x40]
	0x035367AC STP X20, X19, [X31 + 0x50]
	0x035367B0 ADRP X21, 0xEA9000
	0x035367B4 LDRB W8, [X21 + 0xBD4]
	0x035367B8 MOV W19, W1
	0x035367BC MOV X20, X0
	0x035367C0 TBNZ X8, 0x0, 0x35367F0
	0x035367C4 ADRP X0, 0xBFE000
	0x035367C8 LDR X0, [X0 + 0xBA0]
	0x035367CC BL 0x1C16CF4
	0x035367D0 ADRP X0, 0xBC5000
	0x035367D4 LDR X0, [X0 + 0xF00]
	0x035367D8 BL 0x1C16CF4
	0x035367DC ADRP X0, 0xBBE000
	0x035367E0 LDR X0, [X0 + 0x5A8]
	0x035367E4 BL 0x1C16CF4
	0x035367E8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xEAA000
	005 Move X20, 0xBFF000
	006 Move W8, [X19+3017]
	007 Move X20, [X20+2888]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBFF000
	013 Move X0, [X0+2888]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3017], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8+4], W31
	022 Move X30, [X31+32]
	023 Return 

Method: System.Boolean IsNetworkReachableUnity()

Disassembly:
	0x035367EC STRB W8, [X21 + 0xBD4]
	0x035367F0 ADRP X22, 0xBBE000
	0x035367F4 ADRP X21, 0xEA2000
	0x035367F8 LDR X22, [X22 + 0x5A8]
	0x035367FC LDRB W8, [X21 + 0x793]
	0x03536800 STP X31, X31, [X31 + 0x20]
	0x03536804 STRB W31, [X31 + 0x1C]
	0x03536808 STR W31, [X31 + 0x18]
	0x0353680C CBNZ W8, 0x3536824
	0x03536810 ADRP X0, 0xBBE000
	0x03536814 LDR X0, [X0 + 0x5A8]
	0x03536818 BL 0x1C16CF4
	0x0353681C MOVZ W8, 0x1
	0x03536820 STRB W8, [X21 + 0x793]
	0x03536824 LDR X0, [X22]
	0x03536828 LDR X8, [X0 + 0xB8]
	0x0353682C LDR V0, [X8]
	0x03536830 AND W8, W19, 0xFFFF
	0x03536834 CMP W8, 0x10
	0x03536838 STR V0, [X31 + 0x2]
	0x0353683C B.NE 0x3536978
	0x03536840 ADRP X21, 0xBFE000
	0x03536844 LDR X21, [X21 + 0xBA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xEAA000
	005 Move X20, 0xBBE000
	006 Move W8, [X19+3018]
	007 Move X20, [X20+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBBE000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3018], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X0, X31
	023 Call Application.get_internetReachability
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void StartFallbackSendAckThread()

Disassembly:
	0x03536848 LDR X0, [X21]
	0x0353684C LDR W8, [X0 + 0xE0]
	0x03536850 CBNZ W8, 0x353685C
	0x03536854 BL 0x1C16DFC
	0x03536858 LDR X0, [X21]
	0x0353685C LDR X8, [X0 + 0xB8]
	0x03536860 LDR X19, [X8 + 0x10]
	0x03536864 STRB W31, [X31 + 0x1C]
	0x03536868 ADD X1, X31, 0x1C
	0x0353686C MOV X0, X19
	0x03536870 MOV X2, X31
	0x03536874 BL 0x33DE64C
	0x03536878 LDR X0, [X21]
	0x0353687C LDR W8, [X0 + 0xE0]
	0x03536880 CBNZ W8, 0x3536888
	0x03536884 BL 0x1C16DFC
	0x03536888 CBZ X20, 0x35369A4
	0x0353688C LDR X8, [X21]
	0x03536890 LDR X8, [X8 + 0xB8]
	0x03536894 LDR X1, [X8 + 0x10]
	0x03536898 MOVZ W3, 0x10
	0x0353689C MOV X0, X20
	0x035368A0 MOV W2, W31
	0x035368A4 MOV X4, X31
	0x035368A8 BL 0x351EE98
	0x035368AC STR W31, [X31 + 0x18]
	0x035368B0 ADRP X9, 0xBC5000
	0x035368B4 LDR X8, [X21]
	0x035368B8 LDR X9, [X9 + 0xF00]
	0x035368BC LDR X8, [X8 + 0xB8]
	0x035368C0 LDR X0, [X9]
	0x035368C4 LDR X20, [X8 + 0x10]
	0x035368C8 LDR W9, [X0 + 0xE0]
	0x035368CC CBNZ W9, 0x35368D4
	0x035368D0 BL 0x1C16DFC
	0x035368D4 ADD X23, X31, 0x20
	0x035368D8 ORR X0, X23, 0xF
	0x035368DC ADD X2, X31, 0x18
	0x035368E0 MOV X1, X20
	0x035368E4 MOV X3, X31
	0x035368E8 BL 0x3506B64
	0x035368EC LDR X8, [X21]
	0x035368F0 LDR X8, [X8 + 0xB8]
	0x035368F4 LDR X1, [X8 + 0x10]
	0x035368F8 ADD X0, X31, 0x20
	0x035368FC ADD X2, X31, 0x18
	0x03536900 MOV X3, X31
	0x03536904 BL 0x3506B64
	0x03536908 LDR X8, [X21]
	0x0353690C ORR X0, X23, 0x7
	0x03536910 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEAA000
	005 Move W8, [X20+3019]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0xBFF000
	012 Move X0, [X0+2912]
	013 Call 0x1C17CF4
	014 Move X0, 0xBC7000
	015 Move X0, [X0+2368]
	016 Call 0x1C17CF4
	017 Move X0, 0xBC6000
	018 Move X0, [X0+3680]
	019 Call 0x1C17CF4
	020 Move X0, 0xBFF000
	021 Move X0, [X0+2920]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3019], W8
	025 Move W8, [X19+53]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, 0xBC7000
	028 Move X8, [X8+2368]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X8, 0xBFF000
	032 Move X8, [X8+2912]
	033 Move X1, X19
	034 Move X3, X31
	035 Move X20, X0
	036 Move X2, [X8]
	037 Call Func`1<Boolean>..ctor, X0, X1, X2
	038 Move X8, 0xBC6000
	039 Move X8, [X8+3680]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X8, 0xBFF000
	046 Move X8, [X8+2920]
	047 Move W1, 50
	048 Move X0, X20
	049 Move X3, X31
	050 Move X2, [X8]
	051 Call SupportClass.StartBackgroundCalls, X0, X1, X2
	052 Move [X19+53], W0
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Return 

Method: System.Void StopFallbackSendAckThread()

Disassembly:
	0x03536304 B 0x3536308
	0x03536308 MOV X20, X0
	0x0353630C CMP W1, 0x1
	0x03536310 B.NE 0x3536328
	0x03536314 MOV X0, X20
	0x03536318 BL 0x3EB1AD0
	0x0353631C LDR X21, [X0]
	0x03536320 BL 0x3EB1AE0
	0x03536324 B 0x35362B4
	0x03536328 MOV X21, X31
	0x0353632C B 0x3536334
	0x03536330 MOV X20, X0
	0x03536334 LDRB W8, [X31 + 0xC]
	0x03536338 CBZ W8, 0x3536348
	0x0353633C MOV X0, X19
	0x03536340 MOV X1, X31
	0x03536344 BL 0x33E14E4
	0x03536348 CBNZ X21, 0x3536354
	0x0353634C MOV X0, X20
	0x03536350 BL 0x1D2C690
	0x03536354 MOV X0, X21
	0x03536358 BL 0x1C16F18
	0x0353635C BL 0x1990590
	0x03536360 SUB X31, X31, 0x50
	0x03536364 STP X30, X23, [X31 + 0x20]
	0x03536368 STP X22, X21, [X31 + 0x30]
	0x0353636C STP X20, X19, [X31 + 0x40]
	0x03536370 ADRP X21, 0xEA9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEAA000
	005 Move W8, [X20+3020]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBC6000
	012 Move X0, [X0+3680]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3020], W8
	016 Move W20, [X19+53]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X8, 0xBC6000
	019 Move X8, [X8+3680]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W20
	026 Move X1, X31
	027 Call SupportClass.StopBackgroundCalls, X0
	028 Move W8, 255
	029 Move [X19+53], W8
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return 

Method: System.Boolean RealtimeFallbackThread()

Disassembly:
	0x03536914 LDR X1, [X8 + 0x10]
	0x03536918 ADD X2, X31, 0x18
	0x0353691C MOV X3, X31
	0x03536920 BL 0x3506B64
	0x03536924 LDR X8, [X21]
	0x03536928 ORR X0, X23, 0xF
	0x0353692C LDR X8, [X8 + 0xB8]
	0x03536930 LDR X1, [X8 + 0x10]
	0x03536934 ADD X2, X31, 0x18
	0x03536938 MOV X3, X31
	0x0353693C BL 0x3506B64
	0x03536940 MOV X20, X31
	0x03536944 MOVZ W21, 0x3
	0x03536948 LDRB W8, [X31 + 0x1C]
	0x0353694C CBZ W8, 0x353695C
	0x03536950 MOV X0, X19
	0x03536954 MOV X1, X31
	0x03536958 BL 0x33E14E4
	0x0353695C CBNZ X20, 0x353699C
	0x03536960 CMP W21, 0x3
	0x03536964 B.EQ 0x353696C
	0x03536968 CBNZ W21, 0x3536988
	0x0353696C LDR V0, [X31 + 0x2]
	0x03536970 LDR X0, [X22]
	0x03536974 B 0x353697C
	0x03536978 LDR V0, [X31 + 0x2]
	0x0353697C ADD X1, X31, 0x0
	0x03536980 STR V0, [X31]
	0x03536984 BL 0x1C16E04
	0x03536988 LDP X20, X19, [X31 + 0x50]
	0x0353698C LDP X22, X21, [X31 + 0x40]
	0x03536990 LDP X30, X23, [X31 + 0x30]
	0x03536994 ADD X31, X31, 0x60
	0x03536998 RET
	0x0353699C MOV X0, X20
	0x035369A0 BL 0x1C16F18
	0x035369A4 BL 0x1C16F20
	0x035369A8 B 0x35369C4
	0x035369AC B 0x35369C4
	0x035369B0 B 0x35369C4
	0x035369B4 B 0x35369C4
	0x035369B8 B 0x35369C4
	0x035369BC B 0x35369C4
	0x035369C0 B 0x35369C4
	0x035369C4 MOV X21, X0
	0x035369C8 CMP W1, 0x1
	0x035369CC B.NE 0x35369E8
	0x035369D0 MOV X0, X21
	0x035369D4 BL 0x3EB1AD0
	0x035369D8 LDR X20, [X0]
	0x035369DC BL 0x3EB1AE0
	0x035369E0 MOV W21, W31
	0x035369E4 B 0x3536948
	0x035369E8 MOV X20, X31
	0x035369EC B 0x35369F4
	0x035369F0 MOV X21, X0
	0x035369F4 LDRB W8, [X31 + 0x1C]
	0x035369F8 CBZ W8, 0x3536A08
	0x035369FC MOV X0, X19
	0x03536A00 MOV X1, X31
	0x03536A04 BL 0x33E14E4
	0x03536A08 CBNZ X20, 0x3536A14
	0x03536A0C MOV X0, X21
	0x03536A10 BL 0x1D2C690
	0x03536A14 MOV X0, X20
	0x03536A18 BL 0x1C16F18
	0x03536A1C BL 0x1990590

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Compare X8, 0
	006 JumpIfEqual {29}
	007 Move X19, X0
	008 Move X0, [X8+16]
	009 Compare X0, 0
	010 JumpIfEqual {28}
	011 Move W8, [X8+144]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Compare W8, 0
	014 JumpIfEqual {28}
	015 Move X1, X31
	016 Call PhotonPeer.get_ConnectionTime, X0
	017 Move X8, [X19+32]
	018 Compare X8, 0
	019 JumpIfEqual {77}
	020 Move W20, W0
	021 Move X0, [X8+16]
	022 Compare X0, 0
	023 JumpIfEqual {77}
	024 Move X1, X31
	025 Call PhotonPeer.get_LastSendOutgoingTime, X0
	026 Subtract W8, W20, W0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X19+54], W31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move W0, 1
	032 Move X30, [X31+32]
	033 Return X0
	034 Move W8, [X19+54]
	035 Compare W8, 0
	036 JumpIfNotEqual {47}
	037 Move X0, [X19+56]
	038 Compare X0, 0
	039 JumpIfEqual {77}
	040 Move X1, X31
	041 Call Stopwatch.Reset, X0
	042 Move X0, [X19+56]
	043 Compare X0, 0
	044 JumpIfEqual {77}
	045 Move X1, X31
	046 Call Stopwatch.Start, X0
	047 Move X0, [X19+56]
	048 Compare X0, 0
	049 JumpIfEqual {77}
	050 Move X1, X31
	051 Call Stopwatch.get_ElapsedMilliseconds, X0
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, [X19+40]
	055 Compare W8, 0
	056 JumpIfEqual {29}
	057 Move X0, [X19+32]
	058 Compare X0, 0
	059 JumpIfEqual {77}
	060 Move W1, 17
	061 Call LoadBalancingClient.Disconnect, X0, X1
	062 Move W9, [X19+48]
	063 Move X8, [X19+32]
	064 Move W10, 1
	065 Move [X19+54], W10
	066 Add W9, W9, 1
	067 Move [X19+48], W9
	068 Compare X8, 0
	069 JumpIfEqual {77}
	070 Move X0, [X8+16]
	071 Compare X0, 0
	072 JumpIfEqual {77}
	073 Move X8, [X0]
	074 Move X9, [X8+520]
	075 Move X1, [X8+528]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03536A20 STP X30, X21, [X31 - 0x20]!
	0x03536A24 STP X20, X19, [X31 + 0x10]
	0x03536A28 ADRP X21, 0xEA9000
	0x03536A2C ADRP X20, 0xBBD000
	0x03536A30 ADRP X19, 0xBFE000
	0x03536A34 LDRB W8, [X21 + 0xBD5]
	0x03536A38 LDR X20, [X20 + 0x618]
	0x03536A3C LDR X19, [X19 + 0xBA0]
	0x03536A40 TBNZ X8, 0x0, 0x3536A64
	0x03536A44 ADRP X0, 0xBBD000
	0x03536A48 LDR X0, [X0 + 0x618]
	0x03536A4C BL 0x1C16CF4
	0x03536A50 ADRP X0, 0xBFE000
	0x03536A54 LDR X0, [X0 + 0xBA0]
	0x03536A58 BL 0x1C16CF4
	0x03536A5C MOVZ W8, 0x1
	0x03536A60 STRB W8, [X21 + 0xBD5]
	0x03536A64 LDR X0, [X20]
	0x03536A68 MOVZ W1, 0xC
	0x03536A6C BL 0x1C16D6C
	0x03536A70 LDR X8, [X19]
	0x03536A74 MOVZ W1, 0x8
	0x03536A78 LDR X8, [X8 + 0xB8]
	0x03536A7C STR X0, [X8]
	0x03536A80 LDR X0, [X20]
	0x03536A84 BL 0x1C16D6C
	0x03536A88 LDR X8, [X19]
	0x03536A8C MOVZ W1, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEAA000
	006 Move X20, 0xBC6000
	007 Move W8, [X21+3021]
	008 Move X20, [X20+1800]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBC6000
	015 Move X0, [X0+1800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3021], W8
	019 Move W8, 0xEA60
	020 Move W9, 0xFF01
	021 Move [X19+44], W8
	022 NotImplemented "Instruction STRH not yet implemented."
	023 Move X0, [X20]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Stopwatch..ctor, X0
	028 Move [X19+56], X20
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call MonoBehaviour..ctor, X0
	036 Return 

