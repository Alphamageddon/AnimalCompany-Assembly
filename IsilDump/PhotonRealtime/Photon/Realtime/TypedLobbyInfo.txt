Type: Photon.Realtime.TypedLobbyInfo

Method: System.String ToString()

Disassembly:
	0x03549484 ADRP X8, 0xBEC000
	0x03549488 LDR X8, [X8 + 0x8]
	0x0354948C LDR X1, [X8]
	0x03549490 BL 0x2A1345C
	0x03549494 CMP W0, 0x2
	0x03549498 B.LT 0x354951C
	0x0354949C LDR X8, [X20 + 0x10]
	0x035494A0 CBZ X8, 0x3549578
	0x035494A4 LDR X20, [X8 + 0x70]
	0x035494A8 CBZ X20, 0x3549578
	0x035494AC ADRP X8, 0xBEC000
	0x035494B0 LDR X8, [X8 + 0x18]
	0x035494B4 MOV X0, X20
	0x035494B8 LDR X1, [X8]
	0x035494BC BL 0x2A1346C
	0x035494C0 CBZ X0, 0x3549578
	0x035494C4 ADRP X8, 0xBEC000
	0x035494C8 LDR X8, [X8 + 0x38]
	0x035494CC LDR X1, [X8]
	0x035494D0 ADD X8, X31, 0x8
	0x035494D4 BL 0x2EB7E78
	0x035494D8 ADRP X23, 0xBEC000
	0x035494DC LDR X23, [X23 + 0x28]
	0x035494E0 MOVN W21, 0x80000000
	0x035494E4 MOV W22, W19
	0x035494E8 LDR X1, [X23]
	0x035494EC ADD X0, X31, 0x8
	0x035494F0 BL 0x2BF5DBC
	0x035494F4 TBZ X0, 0x0, 0x3549524
	0x035494F8 LDR W8, [X31 + 0x18]
	0x035494FC CMP W8, W22
	0x03549500 B.LT 0x3549514
	0x03549504 CMP W8, W21
	0x03549508 CCMP W8, W19, 0x4, LT
	0x0354950C CSEL W21, W8, W21, GT
	0x03549510 B 0x35494E8
	0x03549514 MOV W22, W8
	0x03549518 B 0x35494E8
	0x0354951C MOV X0, X31
	0x03549520 B 0x3549564
	0x03549524 ADRP X8, 0xBEC000
	0x03549528 LDR X8, [X8 + 0x20]
	0x0354952C ADD X0, X31, 0x8
	0x03549530 LDR X1, [X8]
	0x03549534 BL 0x2BF5DB8
	0x03549538 ADRP X8, 0xBEC000
	0x0354953C LDR X8, [X8 + 0x10]
	0x03549540 MOV X0, X20
	0x03549544 LDR X2, [X8]
	0x03549548 MOVN W8, 0x80000000
	0x0354954C CMP W21, W8
	0x03549550 B.NE 0x354955C
	0x03549554 MOV W1, W22
	0x03549558 B 0x3549560
	0x0354955C MOV W1, W21
	0x03549560 BL 0x2A135EC
	0x03549564 LDP X20, X19, [X31 + 0x40]
	0x03549568 LDP X22, X21, [X31 + 0x30]
	0x0354956C LDP X30, X23, [X31 + 0x20]
	0x03549570 ADD X31, X31, 0x50
	0x03549574 RET
	0x03549578 BL 0x1C16F20
	0x0354957C CMP W1, 0x1
	0x03549580 MOV X23, X0
	0x03549584 B.NE 0x35495B8
	0x03549588 MOV X0, X23
	0x0354958C BL 0x3EB1AD0
	0x03549590 LDR X19, [X0]
	0x03549594 BL 0x3EB1AE0
	0x03549598 ADRP X8, 0xBEC000
	0x0354959C LDR X8, [X8 + 0x20]
	0x035495A0 ADD X0, X31, 0x8
	0x035495A4 LDR X1, [X8]
	0x035495A8 BL 0x2BF5DB8
	0x035495AC CBZ X19, 0x3549538
	0x035495B0 MOV X0, X19
	0x035495B4 BL 0x1C16F18
	0x035495B8 MOV X19, X31
	0x035495BC B 0x35495C4
	0x035495C0 MOV X23, X0
	0x035495C4 ADRP X8, 0xBEC000
	0x035495C8 LDR X8, [X8 + 0x20]
	0x035495CC LDR X1, [X8]
	0x035495D0 ADD X0, X31, 0x8
	0x035495D4 BL 0x2BF5DB8
	0x035495D8 CBNZ X19, 0x35495E4
	0x035495DC MOV X0, X23
	0x035495E0 BL 0x1D2C690
	0x035495E4 MOV X0, X19
	0x035495E8 BL 0x1C16F18
	0x035495EC BL 0x1990590
	0x035495F0 CBZ X1, 0x35495FC
	0x035495F4 LDR W1, [X1 + 0x18]
	0x035495F8 B 0x35493EC
	0x035495FC MOV X0, X31
	0x03549600 RET
	0x03549604 STP X30, X21, [X31 - 0x20]!
	0x03549608 STP X20, X19, [X31 + 0x10]
	0x0354960C ADRP X21, 0xE96000
	0x03549610 LDRB W8, [X21 + 0xC69]
	0x03549614 MOV X19, X1
	0x03549618 MOV X20, X0
	0x0354961C TBNZ X8, 0x0, 0x3549658
	0x03549620 ADRP X0, 0xBAA000
	0x03549624 LDR X0, [X0 + 0xB58]
	0x03549628 BL 0x1C16CF4
	0x0354962C ADRP X0, 0xBB2000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xE97000
	008 Move X21, 0xBAB000
	009 Move W8, [X20+3165]
	010 Move X21, [X21+2512]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xBAB000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move X0, 0xBEC000
	020 Move X0, [X0+4048]
	021 Call 0x1C17CF4
	022 Move X0, 0xBAB000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB4000
	026 Move X0, [X0+1816]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3165], W8
	030 Move X0, [X21]
	031 Move W1, 4
	032 Call 0x1C17D6C
	033 Compare X0, 0
	034 JumpIfEqual {121}
	035 Move X21, [X19+16]
	036 Move X20, X0
	037 Compare X21, 0
	038 JumpIfEqual {45}
	039 Move X8, [X20]
	040 Move X0, X21
	041 Move X1, [X8+64]
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfEqual {118}
	045 Move W8, [X20+24]
	046 Compare W8, 0
	047 JumpIfEqual {117}
	048 Move X8, 0xBEC000
	049 Move X8, [X8+4048]
	050 Move [X20+32], X21
	051 Move W9, [X19+24]
	052 Add X1, X31, 28
	053 Move X0, [X8]
	054 Move [X31+28], W9
	055 Call 0x1C17E04
	056 Move X21, X0
	057 Compare X0, 0
	058 JumpIfEqual {65}
	059 Move X8, [X20]
	060 Move X0, X21
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {118}
	065 Move W8, [X20+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X22, 0xBAB000
	068 Move X22, [X22+1880]
	069 Move [X20+40], X21
	070 Move W8, [X19+32]
	071 Add X1, X31, 24
	072 Move X0, [X22]
	073 Move [X31+24], W8
	074 Call 0x1C17E04
	075 Move X21, X0
	076 Compare X0, 0
	077 JumpIfEqual {84}
	078 Move X8, [X20]
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {118}
	084 Move W8, [X20+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X20+48], X21
	087 Move W8, [X19+28]
	088 Move X0, [X22]
	089 Add X1, X31, 12
	090 Move [X31+12], W8
	091 Call 0x1C17E04
	092 Move X19, X0
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X8, [X20]
	096 Move X0, X19
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {118}
	101 Move W8, [X20+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0xBB4000
	104 Move X8, [X8+1816]
	105 Move [X20+56], X19
	106 Move X1, X20
	107 Move X2, X31
	108 Move X0, [X8]
	109 Call String.Format, X0, X1
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Add X31, X31, 64
	116 Return X0
	117 Call 0x1C17F28
	118 Call 0x1C17F44
	119 Move X1, X31
	120 Call 0x1C17DEC
	121 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03544C60 MOV X19, X1
	0x03544C64 MOV X20, X0
	0x03544C68 TBNZ X8, 0x0, 0x3544C8C
	0x03544C6C ADRP X0, 0xBF0000
	0x03544C70 LDR X0, [X0 + 0xF78]
	0x03544C74 BL 0x1C16CF4
	0x03544C78 ADRP X0, 0xBF0000
	0x03544C7C LDR X0, [X0 + 0xF80]
	0x03544C80 BL 0x1C16CF4
	0x03544C84 MOVZ W8, 0x1
	0x03544C88 STRB W8, [X22 + 0xC19]
	0x03544C8C LDR X0, [X21]
	0x03544C90 LDR X20, [X20 + 0x170]
	0x03544C94 BL 0x1C16F10
	0x03544C98 MOV X1, X31
	0x03544C9C MOV X21, X0
	0x03544CA0 BL 0x33BDD8C
	0x03544CA4 STR X19, [X21 + 0x10]
	0x03544CA8 STRB W31, [X21 + 0x18]
	0x03544CAC CBZ X20, 0x3544CD4
	0x03544CB0 ADRP X8, 0xBF0000
	0x03544CB4 LDR X8, [X8 + 0xF80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE9C000
	006 Move X21, 0xBF1000
	007 Move W8, [X20+3166]
	008 Move X21, [X21+3256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBF1000
	015 Move X0, [X0+3256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3166], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

