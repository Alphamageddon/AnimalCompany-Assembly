Type: Photon.Realtime.PhotonAppSettings

Method: Photon.Realtime.PhotonAppSettings get_Instance()

Disassembly:
	0x03551AFC BL 0x1C16F10
	0x03551B00 MOV X19, X0
	0x03551B04 ADRP X0, 0xBE4000
	0x03551B08 LDR X0, [X0 + 0x210]
	0x03551B0C BL 0x1C16D08
	0x03551B10 MOV X1, X0
	0x03551B14 MOV X0, X19
	0x03551B18 MOV X2, X31
	0x03551B1C BL 0x338C448
	0x03551B20 ADRP X0, 0xBE4000
	0x03551B24 LDR X0, [X0 + 0x230]
	0x03551B28 BL 0x1C16D08
	0x03551B2C MOV X1, X0
	0x03551B30 MOV X0, X19
	0x03551B34 BL 0x1C16DEC
	0x03551B38 BL 0x1C16F20
	0x03551B3C LDR X0, [X0 + 0x10]
	0x03551B40 MOVZ W1, 0xFA5
	0x03551B44 B 0x35517C8
	0x03551B48 LDR X0, [X0 + 0x10]
	0x03551B4C MOV W2, W1
	0x03551B50 MOVZ W1, 0xFA4
	0x03551B54 B 0x3551960
	0x03551B58 LDR X0, [X0 + 0x10]
	0x03551B5C MOVZ W1, 0xFAB
	0x03551B60 B 0x35517C8
	0x03551B64 LDR X0, [X0 + 0x10]
	0x03551B68 MOV W2, W1
	0x03551B6C MOVZ W1, 0xFAA
	0x03551B70 B 0x3551960
	0x03551B74 LDR X0, [X0 + 0x10]
	0x03551B78 MOVZ W1, 0xFAF
	0x03551B7C B 0x35517C8
	0x03551B80 LDR X0, [X0 + 0x10]
	0x03551B84 MOV W2, W1
	0x03551B88 MOVZ W1, 0xFAE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE8F000
	006 Move X20, 0xBE5000
	007 Move X19, 0xBA3000
	008 Move W8, [X21+3269]
	009 Move X20, [X20+456]
	010 Move X19, [X19+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xBA3000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0xBE5000
	019 Move X0, [X0+456]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3269], W8
	023 Move X8, [X20]
	024 Move X0, [X19]
	025 Move X8, [X8+184]
	026 Move W9, [X0+224]
	027 Move X19, [X8]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {40}
	039 Call PhotonAppSettings.LoadOrCreateSettings
	040 Move X8, [X20]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X8, [X8+184]
	044 Move X0, [X8]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Void set_Instance(Photon.Realtime.PhotonAppSettings value)

Disassembly:
	0x03551EC8 BL 0x1C16F20
	0x03551ECC ADRP X0, 0xBCB000
	0x03551ED0 LDR X0, [X0 + 0xDF0]
	0x03551ED4 BL 0x1C16D08
	0x03551ED8 BL 0x1C16F10
	0x03551EDC MOV X19, X0
	0x03551EE0 ADRP X0, 0xBCB000
	0x03551EE4 LDR X0, [X0 + 0xDF8]
	0x03551EE8 BL 0x1C16D08
	0x03551EEC MOV X2, X0
	0x03551EF0 MOVN W1, 0x6
	0x03551EF4 MOV X0, X19
	0x03551EF8 BL 0x35523B8
	0x03551EFC ADRP X0, 0xBE4000
	0x03551F00 LDR X0, [X0 + 0x240]
	0x03551F04 BL 0x1C16D08
	0x03551F08 MOV X1, X0
	0x03551F0C MOV X0, X19
	0x03551F10 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE8F000
	006 Move X21, 0xBE5000
	007 Move W8, [X20+3270]
	008 Move X21, [X21+456]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBE5000
	015 Move X0, [X0+456]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3270], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void LoadOrCreateSettings()

Disassembly:
	0x03551B8C B 0x3551960
	0x03551B90 LDR X0, [X0 + 0x10]
	0x03551B94 MOVZ W1, 0xFB9
	0x03551B98 B 0x35517C8
	0x03551B9C LDR X0, [X0 + 0x10]
	0x03551BA0 MOV W2, W1
	0x03551BA4 MOVZ W1, 0xFB8
	0x03551BA8 B 0x3551960
	0x03551BAC LDR X0, [X0 + 0x10]
	0x03551BB0 MOVZ W1, 0xFB7
	0x03551BB4 B 0x35517C8
	0x03551BB8 LDR X0, [X0 + 0x10]
	0x03551BBC MOV W2, W1
	0x03551BC0 MOVZ W1, 0xFB6
	0x03551BC4 B 0x3551960
	0x03551BC8 STR X30, [X31 - 0x10]!
	0x03551BCC LDR X0, [X0 + 0x10]
	0x03551BD0 MOVZ W1, 0xFAD
	0x03551BD4 BL 0x35517C8
	0x03551BD8 CMP W0, 0x1
	0x03551BDC CSET W0, EQ
	0x03551BE0 LDR X30, [X31], #0x10
	0x03551BE4 RET
	0x03551BE8 LDR X0, [X0 + 0x10]
	0x03551BEC AND W2, W1, 0x1
	0x03551BF0 MOVZ W1, 0xFAC
	0x03551BF4 B 0x3551960
	0x03551BF8 LDR X0, [X0 + 0x10]
	0x03551BFC MOVZ W1, 0xFAF
	0x03551C00 B 0x35517C8
	0x03551C04 LDR X0, [X0 + 0x10]
	0x03551C08 MOV W2, W1
	0x03551C0C MOVZ W1, 0xFAE
	0x03551C10 B 0x3551960
	0x03551C14 STR X30, [X31 - 0x10]!
	0x03551C18 LDR X0, [X0 + 0x10]
	0x03551C1C MOVZ W1, 0xFB5
	0x03551C20 BL 0x35517C8
	0x03551C24 CMP W0, 0x0
	0x03551C28 CSET W0, EQ
	0x03551C2C LDR X30, [X31], #0x10
	0x03551C30 RET
	0x03551C34 LDR X0, [X0 + 0x10]
	0x03551C38 ORN W8, W31, W1, 0x0
	0x03551C3C AND W2, W8, 0x1
	0x03551C40 MOVZ W1, 0xFB4
	0x03551C44 B 0x3551960
	0x03551C48 STR X30, [X31 - 0x10]!
	0x03551C4C LDR X0, [X0 + 0x10]
	0x03551C50 MOVZ W1, 0xFB1
	0x03551C54 BL 0x35517C8
	0x03551C58 CMP W0, 0x1
	0x03551C5C CSET W0, EQ
	0x03551C60 LDR X30, [X31], #0x10
	0x03551C64 RET
	0x03551C68 LDR X0, [X0 + 0x10]
	0x03551C6C AND W2, W1, 0x1
	0x03551C70 MOVZ W1, 0xFB0
	0x03551C74 B 0x3551960
	0x03551C78 SUB X31, X31, 0x70
	0x03551C7C STR X30, [X31 + 0x20]
	0x03551C80 STP X26, X25, [X31 + 0x30]
	0x03551C84 STP X24, X23, [X31 + 0x40]
	0x03551C88 STP X22, X21, [X31 + 0x50]
	0x03551C8C STP X20, X19, [X31 + 0x60]
	0x03551C90 ADRP X26, 0xE8E000
	0x03551C94 ADRP X25, 0xBA2000
	0x03551C98 LDRB W8, [X26 + 0xCCF]
	0x03551C9C LDR X25, [X25 + 0x618]
	0x03551CA0 MOV W20, W5
	0x03551CA4 MOV W22, W4
	0x03551CA8 MOV W21, W3
	0x03551CAC MOV W24, W2
	0x03551CB0 MOV W23, W1
	0x03551CB4 MOV X19, X0
	0x03551CB8 TBNZ X8, 0x0, 0x3551CE8
	0x03551CBC ADRP X0, 0xBA2000
	0x03551CC0 LDR X0, [X0 + 0x618]
	0x03551CC4 BL 0x1C16CF4
	0x03551CC8 ADRP X0, 0xBE4000
	0x03551CCC LDR X0, [X0 + 0x238]
	0x03551CD0 BL 0x1C16CF4
	0x03551CD4 ADRP X0, 0xBCD000
	0x03551CD8 LDR X0, [X0 + 0xB60]
	0x03551CDC BL 0x1C16CF4
	0x03551CE0 MOVZ W8, 0x1
	0x03551CE4 STRB W8, [X26 + 0xCCF]
	0x03551CE8 ADRP X8, 0xFFFFFFFFFD59C000
	0x03551CEC LDR V0, [X8 + 0xCC0]
	0x03551CF0 MOVZ W8, 0x2
	0x03551CF4 STR X31, [X19 + 0x10]
	0x03551CF8 STR W8, [X19 + 0x20]
	0x03551CFC STR D0, [X19 + 0x18]
	0x03551D00 LDR X0, [X25]
	0x03551D04 MOVZ W1, 0xFA0
	0x03551D08 BL 0x1C16D6C
	0x03551D0C STR X0, [X19 + 0x28]
	0x03551D10 MOVZ W8, 0x28
	0x03551D14 MOV X0, X19
	0x03551D18 MOV X1, X31
	0x03551D1C STR W8, [X19 + 0x30]
	0x03551D20 BL 0x33BDD8C
	0x03551D24 MOVZ W8, 0x3E7F
	0x03551D28 CMP W23, W8
	0x03551D2C B.LE 0x3551D50
	0x03551D30 MOVZ W8, 0x3E80
	0x03551D34 CMP W23, W8
	0x03551D38 B.EQ 0x3551D68
	0x03551D3C MOVZ W8, 0x5DC0
	0x03551D40 CMP W23, W8
	0x03551D44 B.EQ 0x3551D68
	0x03551D48 MOVZ W8, 0xBB80
	0x03551D4C B 0x3551D60
	0x03551D50 MOVZ W8, 0x1F40
	0x03551D54 CMP W23, W8
	0x03551D58 B.EQ 0x3551D68
	0x03551D5C MOVZ W8, 0x2EE0
	0x03551D60 CMP W23, W8
	0x03551D64 B.NE 0x3551F90
	0x03551D68 SUB W8, W24, 0x1
	0x03551D6C CMP W8, 0x2
	0x03551D70 B.CS 0x3551E80
	0x03551D74 SUB W8, W22, 0x800
	0x03551D78 CMP W8, 0x2
	0x03551D7C B.CC 0x3551D88
	0x03551D80 CMP W22, 0x803
	0x03551D84 B.NE 0x3551F14
	0x03551D88 CMP W20, 0x28
	0x03551D8C B.HI 0x3551DB0
	0x03551D90 MOV W8, W20
	0x03551D94 MOVZ W9, 0x1
	0x03551D98 LSLV X8, X9, X8
	0x03551D9C MOVZ X9, 0x420
	0x03551DA0 MOVK X9, 0x100000
	0x03551DA4 MOVK X9, 0x100
	0x03551DA8 ANDS X31, X8, X9, 0x0
	0x03551DAC B.NE 0x3551DC0
	0x03551DB0 CMP W20, 0x50
	0x03551DB4 B.EQ 0x3551DC0
	0x03551DB8 CMP W20, 0x78
	0x03551DBC B.NE 0x355200C
	0x03551DC0 ADRP X25, 0xBCD000
	0x03551DC4 LDR X25, [X25 + 0xB60]
	0x03551DC8 MOV W0, W23
	0x03551DCC MOV W1, W24
	0x03551DD0 MOV W2, W22
	0x03551DD4 STP W23, W24, [X19 + 0x1C]
	0x03551DD8 BL 0x35520B4
	0x03551DDC STR X0, [X19 + 0x10]
	0x03551DE0 LDR X0, [X25]
	0x03551DE4 LDR W8, [X0 + 0xE0]
	0x03551DE8 CBNZ W8, 0x3551DF4
	0x03551DEC BL 0x1C16DFC
	0x03551DF0 LDR X0, [X25]
	0x03551DF4 LDR X8, [X0 + 0xB8]
	0x03551DF8 LDR X0, [X8 + 0x10]
	0x03551DFC CBZ X0, 0x3551EC8
	0x03551E00 ADRP X8, 0xBE4000
	0x03551E04 LDR X8, [X8 + 0x238]
	0x03551E08 LDR X1, [X19 + 0x10]
	0x03551E0C MOV X2, X19
	0x03551E10 LDR X3, [X8]
	0x03551E14 BL 0x2A5133C
	0x03551E18 LDR X0, [X19 + 0x10]
	0x03551E1C MOV X1, X31
	0x03551E20 MOV X2, X31
	0x03551E24 BL 0x33BE5B0
	0x03551E28 TBNZ X0, 0x0, 0x3551ECC
	0x03551E2C MOV X0, X19
	0x03551E30 MOV W1, W20
	0x03551E34 BL 0x3551698
	0x03551E38 LDR X0, [X19 + 0x10]
	0x03551E3C MOVZ W1, 0xFA2
	0x03551E40 MOV W2, W21
	0x03551E44 BL 0x3551960
	0x03551E48 LDR X0, [X19 + 0x10]
	0x03551E4C MOVZ W1, 0xFAC
	0x03551E50 MOVZ W2, 0x1
	0x03551E54 BL 0x3551960
	0x03551E58 LDR X0, [X19 + 0x10]
	0x03551E5C LDP X20, X19, [X31 + 0x60]
	0x03551E60 LDP X22, X21, [X31 + 0x50]
	0x03551E64 LDP X24, X23, [X31 + 0x40]
	0x03551E68 LDP X26, X25, [X31 + 0x30]
	0x03551E6C LDR X30, [X31 + 0x20]
	0x03551E70 MOVZ W1, 0xFAE
	0x03551E74 MOVZ W2, 0x1E
	0x03551E78 ADD X31, X31, 0x70
	0x03551E7C B 0x3551960
	0x03551E80 ADRP X0, 0xBAA000
	0x03551E84 LDR X0, [X0 + 0x760]
	0x03551E88 BL 0x1C16D08
	0x03551E8C BL 0x1C16F10
	0x03551E90 MOV X19, X0
	0x03551E94 ADRP X0, 0xBCB000
	0x03551E98 LDR X0, [X0 + 0xDE0]
	0x03551E9C BL 0x1C16D08
	0x03551EA0 MOV X20, X0
	0x03551EA4 ADRP X0, 0xBCB000
	0x03551EA8 LDR X0, [X0 + 0xDE8]
	0x03551EAC BL 0x1C16D08
	0x03551EB0 MOV X2, X0
	0x03551EB4 MOV X0, X19
	0x03551EB8 MOV X1, X20
	0x03551EBC MOV X3, X31
	0x03551EC0 BL 0x3311888
	0x03551EC4 B 0x3551EFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xE8F000
	009 Move X21, 0xBE5000
	010 Move X20, 0xBA3000
	011 Move W8, [X19+3271]
	012 Move X21, [X21+456]
	013 Move X20, [X20+1432]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xBA3000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0xBA3000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0xBE5000
	025 Move X0, [X0+464]
	026 Call 0x1C17CF4
	027 Move X0, 0xBE5000
	028 Move X0, [X0+456]
	029 Call 0x1C17CF4
	030 Move X0, 0xBA3000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0xBE5000
	034 Move X0, [X0+472]
	035 Call 0x1C17CF4
	036 Move X0, 0xBE5000
	037 Move X0, [X0+480]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+3271], W8
	041 Move X8, [X21]
	042 Move X0, [X20]
	043 Move X8, [X8+184]
	044 Move W9, [X0+224]
	045 Move X19, [X8]
	046 Compare W9, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X22, 0xBA3000
	050 Move X22, [X22+2600]
	051 Move X0, X19
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Inequality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {77}
	059 Move X0, [X22]
	060 Move X19, 0xBE5000
	061 Move W8, [X0+224]
	062 Move X19, [X19+480]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, [X19]
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X1, X31
	074 Move X30, [X31+64]
	075 Call Debug.LogWarning, X0
	076 Return 
	077 Move X23, 0xBA3000
	078 Move X23, [X23+1728]
	079 Move X24, 0xBE5000
	080 Move X0, [X23]
	081 Move X24, [X24+464]
	082 Move W8, [X0+224]
	083 Move X19, [X24]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Move X1, X31
	089 Call Type.GetTypeFromHandle, X0
	090 Compare X0, 0
	091 JumpIfEqual {239}
	092 Move X8, [X0]
	093 Move X9, [X8+424]
	094 Move X1, [X8+432]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, [X24]
	097 Move X19, X0
	098 Move X1, X31
	099 Move X0, X8
	100 Call Type.GetTypeFromHandle, X0
	101 Move X1, X0
	102 Move X0, X19
	103 Move X2, X31
	104 Call Resources.Load, X0, X1
	105 Move X1, [X21]
	106 Compare X0, 0
	107 JumpIfEqual {127}
	108 Move X8, [X0]
	109 Move W9, [X1+304]
	110 Move W10, [X8+304]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X8+200]
	113 Add X8, X8, X9
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, [X1+184]
	117 Move [X8], X0
	118 Move X8, [X0]
	119 Move X1, [X21]
	120 Move W10, [X8+304]
	121 Move W9, [X1+304]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X8+200]
	124 Add X8, X8, X9
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X8, [X1+184]
	128 Move [X8], X0
	129 Move X1, [X21]
	130 Move X0, [X20]
	131 Move X8, [X1+184]
	132 Move W9, [X0+224]
	133 Move X19, [X8]
	134 Compare W9, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X19
	138 Move X1, X31
	139 Move X2, X31
	140 Call Object.op_Inequality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {231}
	145 Move X8, [X21]
	146 Move X0, [X20]
	147 Move X8, [X8+184]
	148 Move W9, [X0+224]
	149 Move X19, [X8]
	150 Compare W9, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X0, X19
	154 Move X1, X31
	155 Move X2, X31
	156 Call Object.op_Equality, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {231}
	161 Move X0, [X23]
	162 Move X19, [X24]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move X0, X19
	168 Move X1, X31
	169 Call Type.GetTypeFromHandle, X0
	170 Move X1, X31
	171 Call ScriptableObject.CreateInstance, X0
	172 Move X1, [X21]
	173 Compare X0, 0
	174 JumpIfEqual {195}
	175 Move X8, [X0]
	176 Move W9, [X1+304]
	177 Move W10, [X8+304]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, [X8+200]
	180 Add X8, X8, X9
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X8, [X1+184]
	184 Move [X8], X0
	185 Move X8, [X0]
	186 Move X1, [X21]
	187 Move W10, [X8+304]
	188 Move W9, [X1+304]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X8, [X8+200]
	191 Add X8, X8, X9
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Call 0x1C181E0
	195 Move X8, [X1+184]
	196 Move [X8], X0
	197 Move X1, [X21]
	198 Move X0, [X20]
	199 Move X8, [X1+184]
	200 Move W9, [X0+224]
	201 Move X19, [X8]
	202 Compare W9, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X0, X19
	206 Move X1, X31
	207 Move X2, X31
	208 Call Object.op_Equality, X0, X1
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {231}
	213 Move X0, [X22]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X8, 0xBE5000
	219 Move X8, [X8+472]
	220 Move X20, [X31+48]
	221 Move X19, [X31+56]
	222 Move X22, [X31+32]
	223 Move X21, [X31+40]
	224 Move X24, [X31+16]
	225 Move X23, [X31+24]
	226 Move X0, [X8]
	227 Move X1, X31
	228 Move X30, [X31+64]
	229 Call Debug.LogError, X0
	230 Return 
	231 Move X20, [X31+48]
	232 Move X19, [X31+56]
	233 Move X22, [X31+32]
	234 Move X21, [X31+40]
	235 Move X24, [X31+16]
	236 Move X23, [X31+24]
	237 Move X30, [X31+64]
	238 Return 
	239 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03551F14 ADRP X0, 0xBE4000
	0x03551F18 LDR X0, [X0 + 0x248]

ISIL:
	001 Move X1, X31
	002 Call ScriptableObject..ctor, X0
	003 Return 

