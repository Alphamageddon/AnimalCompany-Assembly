Type: Photon.Realtime.LoadBalancingClient

Method: Photon.Realtime.LoadBalancingPeer get_LoadBalancingPeer()

Disassembly:
	0x035396B0 STP X20, X19, [X31 + 0x20]
	0x035396B4 ADRP X22, 0xEA6000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_LoadBalancingPeer(Photon.Realtime.LoadBalancingPeer value)

Disassembly:
	0x035396B8 ADRP X21, 0xBFB000
	0x035396BC LDRB W8, [X22 + 0xC38]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: ExitGames.Client.Photon.SerializationProtocol get_SerializationProtocol()

Disassembly:
	0x035396C0 LDR X21, [X21 + 0xC98]
	0x035396C4 MOV X19, X1
	0x035396C8 MOV X20, X0
	0x035396CC TBNZ X8, 0x0, 0x35396F0
	0x035396D0 ADRP X0, 0xBFB000
	0x035396D4 LDR X0, [X0 + 0xCA0]
	0x035396D8 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+40]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_SerializationProtocol(ExitGames.Client.Photon.SerializationProtocol value)

Disassembly:
	0x035396DC ADRP X0, 0xBFB000
	0x035396E0 LDR X0, [X0 + 0xC98]
	0x035396E4 BL 0x1C16CF4
	0x035396E8 MOVZ W8, 0x1
	0x035396EC STRB W8, [X22 + 0xC38]
	0x035396F0 LDR X0, [X21]
	0x035396F4 ADRP X21, 0xBFB000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+40], W1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.String get_AppVersion()

Disassembly:
	0x035396F8 LDR W8, [X0 + 0xE0]
	0x035396FC LDR X21, [X21 + 0xCA0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_AppVersion(System.String value)

Disassembly:
	0x03539700 CBNZ W8, 0x3539708
	0x03539704 BL 0x1C16DFC

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_AppId()

Disassembly:
	0x03539708 LDR X1, [X21]
	0x0353970C MOV X0, X20

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_AppId(System.String value)

Disassembly:
	0x03539710 BL 0x301B7C4
	0x03539714 STR X19, [X20 + 0x28]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: Photon.Realtime.ClientAppType get_ClientType()

Disassembly:
	0x03539718 LDP X20, X19, [X31 + 0x20]
	0x0353971C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_ClientType(Photon.Realtime.ClientAppType value)

Disassembly:
	0x03539720 LDR X30, [X31], #0x30
	0x03539724 RET

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: Photon.Realtime.AuthenticationValues get_AuthValues()

Disassembly:
	0x03539728 STP X30, X23, [X31 - 0x30]!
	0x0353972C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_AuthValues(Photon.Realtime.AuthenticationValues value)

Disassembly:
	0x03539730 STP X20, X19, [X31 + 0x20]
	0x03539734 ADRP X23, 0xEA6000

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Nullable`1<ExitGames.Client.Photon.ConnectionProtocol> get_ExpectedProtocol()

Disassembly:
	0x03539738 ADRP X22, 0xBC2000
	0x0353973C LDRB W8, [X23 + 0xC3F]

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Void set_ExpectedProtocol(System.Nullable`1<ExitGames.Client.Photon.ConnectionProtocol> value)

Disassembly:
	0x03539740 LDR X22, [X22 + 0xEE0]
	0x03539744 MOV W21, W2

ISIL:
	001 NotImplemented "Instruction STRH not yet implemented."
	002 Return 

Method: System.Object get_TokenForInit()

Disassembly:
	0x03539748 MOV X19, X1
	0x0353974C MOV X20, X0
	0x03539750 TBNZ X8, 0x0, 0x3539768
	0x03539754 ADRP X0, 0xBC2000
	0x03539758 LDR X0, [X0 + 0xEE0]
	0x0353975C BL 0x1C16CF4
	0x03539760 MOVZ W8, 0x1
	0x03539764 STRB W8, [X23 + 0xC3F]

ISIL:
	001 Move W8, [X0+56]
	002 Compare W8, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0+48]
	005 Compare X8, 0
	006 JumpIfEqual {9}
	007 Move X0, [X8+40]
	008 Return X0
	009 Move X0, X31
	010 Return X0

Method: System.Boolean get_IsUsingNameServer()

Disassembly:
	0x03539768 MOV X0, X20
	0x0353976C MOV W1, W21

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_IsUsingNameServer(System.Boolean value)

Disassembly:
	0x03539770 BL 0x3544EB0
	0x03539774 LDR X0, [X22]
	0x03539778 LDR W8, [X0 + 0xE0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+80], W8
	003 Return 

Method: System.String get_NameServerAddress()

Disassembly:
	0x0353977C CBNZ W8, 0x3539784

ISIL:
No ISIL was generated
Method: System.Boolean get_UseAlternativeUdpPorts()

Disassembly:
	0x0353999C ADD X0, X31, 0x8
	0x035399A0 STRH W31, [X31 + 0x8]

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_UseAlternativeUdpPorts(System.Boolean value)

Disassembly:
	0x035399A4 BL 0x242DF98
	0x035399A8 LDRH W8, [X31 + 0x8]
	0x035399AC STRH W8, [X19 + 0x40]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+96], W8
	003 Return 

Method: System.Boolean get_EnableProtocolFallback()

Disassembly:
	0x035399B0 B 0x35399C0
	0x035399B4 LDRB W9, [X20 + 0x68]

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_EnableProtocolFallback(System.Boolean value)

Disassembly:
	0x035399B8 STRB W9, [X8 + 0x84]
	0x035399BC STRH W31, [X19 + 0x40]
	0x035399C0 LDRB W8, [X20 + 0x69]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: System.String get_CurrentServerAddress()

Disassembly:
	0x035399C4 LDRB W9, [X19 + 0x50]
	0x035399C8 STRB W8, [X19 + 0x68]
	0x035399CC LDR X8, [X20 + 0x48]
	0x035399D0 STR W31, [X19 + 0xE0]
	0x035399D4 STR X31, [X19 + 0xE8]
	0x035399D8 STR X8, [X19 + 0x158]
	0x035399DC CBZ W9, 0x3539A98

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call PhotonPeer.get_ServerAddress, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.String get_MasterServerAddress()

Disassembly:
	0x035399E0 MOVZ W8, 0x2
	0x035399E4 STR W8, [X19 + 0x80]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_MasterServerAddress(System.String value)

Disassembly:
	0x035399E8 LDRB W8, [X20 + 0x38]
	0x035399EC CBZ W8, 0x3539A00

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.String get_GameServerAddress()

Disassembly:
	0x035399F0 LDR X0, [X20 + 0x50]
	0x035399F4 MOV X1, X31

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_GameServerAddress(System.String value)

Disassembly:
	0x035399F8 BL 0x32277A8
	0x035399FC TBNZ X0, 0x0, 0x3539A08

ISIL:
	001 Move [X0+120], X1
	002 Return 

Method: Photon.Realtime.ServerConnection get_Server()

Disassembly:
	0x03539A00 LDR X8, [X20 + 0x50]
	0x03539A04 STR X8, [X19 + 0x58]

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void set_Server(Photon.Realtime.ServerConnection value)

Disassembly:
	0x03539A08 LDR X8, [X20 + 0x60]
	0x03539A0C MOV X0, X19

ISIL:
	001 Move [X0+128], W1
	002 Return 

Method: Photon.Realtime.ClientState get_State()

Disassembly:
	0x03539A10 STR X8, [X19 + 0x88]
	0x03539A14 LDR W8, [X20 + 0x58]

ISIL:
	001 Move W0, [X0+144]
	002 Return X0

Method: System.Void set_State(Photon.Realtime.ClientState value)

Disassembly:
	0x03539A18 LDR X20, [X19 + 0x10]
	0x03539A1C STR W8, [X19 + 0x180]
	0x03539A20 BL 0x3538780
	0x03539A24 LDR W8, [X19 + 0x38]
	0x03539A28 MOV X1, X0
	0x03539A2C CBZ W8, 0x3539A40
	0x03539A30 LDR X8, [X19 + 0x30]
	0x03539A34 CBZ X8, 0x3539A40
	0x03539A38 LDR X4, [X8 + 0x28]
	0x03539A3C B 0x3539A44
	0x03539A40 MOV X4, X31
	0x03539A44 CBZ X20, 0x3539B6C
	0x03539A48 LDR X8, [X20]

ISIL:
	001 Move W8, [X0+144]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, [X0+152]
	004 Move W2, W1
	005 Move [X0+144], W1
	006 Compare X9, 0
	007 JumpIfEqual {13}
	008 Move X4, [X9+24]
	009 Move X0, [X9+64]
	010 Move X3, [X9+40]
	011 Move W1, W8
	012 CallNoReturn X4
	013 Return 

Method: System.Boolean get_IsConnected()

Disassembly:
	0x03536374 LDRB W8, [X21 + 0xBD2]
	0x03536378 MOV W19, W1
	0x0353637C MOV X20, X0
	0x03536380 TBNZ X8, 0x0, 0x35363B0
	0x03536384 ADRP X0, 0xBFE000
	0x03536388 LDR X0, [X0 + 0xBA0]
	0x0353638C BL 0x1C16CF4
	0x03536390 ADRP X0, 0xBC5000
	0x03536394 LDR X0, [X0 + 0xF00]
	0x03536398 BL 0x1C16CF4
	0x0353639C ADRP X0, 0xBC5000

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {11}
	004 Move W8, [X0+144]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 And W0, W9, W8
	010 Return X0
	011 Move W0, W31
	012 Return X0

Method: System.Boolean get_IsConnectedAndReady()

Disassembly:
	0x03539A4C LDR X2, [X19 + 0x88]
	0x03539A50 LDR X3, [X19 + 0x20]
	0x03539A54 MOV X0, X20
	0x03539A58 LDP X9, X6, [X8 + 0x1A8]
	0x03539A5C MOV X5, X31
	0x03539A60 BLR X9
	0x03539A64 TBZ X0, 0x0, 0x35398C8
	0x03539A68 LDR W1, [X19 + 0x90]
	0x03539A6C CMP W1, 0x10
	0x03539A70 B.EQ 0x3539B64
	0x03539A74 LDR X8, [X19 + 0x98]
	0x03539A78 MOVZ W9, 0x10
	0x03539A7C STR W9, [X19 + 0x90]

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {11}
	004 Move W9, [X0+144]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, 0x829C
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction LSRV not yet implemented."
	009 And W0, W8, 1
	010 Return X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Return X0

Method: System.Void add_StateChanged(System.Action`2<Photon.Realtime.ClientState, Photon.Realtime.ClientState> value)

Disassembly:
	0x03539A80 CBZ X8, 0x3539B64
	0x03539A84 LDR X9, [X8 + 0x18]
	0x03539A88 LDR X0, [X8 + 0x40]
	0x03539A8C LDR X3, [X8 + 0x28]
	0x03539A90 MOVZ W2, 0x10
	0x03539A94 B 0x3539B60
	0x03539A98 STR W31, [X19 + 0x80]
	0x03539A9C ADRP X9, 0xBBA000
	0x03539AA0 LDR W8, [X20 + 0x58]
	0x03539AA4 LDR X9, [X9 + 0x758]
	0x03539AA8 LDR X20, [X20 + 0x50]
	0x03539AAC ADD X1, X31, 0x8
	0x03539AB0 CMP W8, 0x1
	0x03539AB4 LDR X0, [X9]
	0x03539AB8 MOVZ W9, 0x13BF
	0x03539ABC CSEL W8, W9, W8, LT
	0x03539AC0 STR W8, [X31 + 0x8]
	0x03539AC4 BL 0x1C16E04
	0x03539AC8 ADRP X8, 0xBC2000
	0x03539ACC LDR X8, [X8 + 0xFF0]
	0x03539AD0 MOV X2, X0
	0x03539AD4 MOV X1, X20
	0x03539AD8 MOV X3, X31
	0x03539ADC LDR X8, [X8]
	0x03539AE0 MOV X0, X8
	0x03539AE4 BL 0x3227BD4
	0x03539AE8 LDR W9, [X19 + 0x38]
	0x03539AEC LDR X8, [X19 + 0x10]
	0x03539AF0 MOV X1, X0
	0x03539AF4 STR X0, [X19 + 0x70]
	0x03539AF8 CBZ W9, 0x3539B0C
	0x03539AFC LDR X9, [X19 + 0x30]
	0x03539B00 CBZ X9, 0x3539B0C
	0x03539B04 LDR X4, [X9 + 0x28]
	0x03539B08 B 0x3539B10
	0x03539B0C MOV X4, X31
	0x03539B10 CBZ X8, 0x3539B6C
	0x03539B14 LDR X9, [X8]
	0x03539B18 LDR X2, [X19 + 0x88]
	0x03539B1C LDR X3, [X19 + 0x20]
	0x03539B20 MOV X0, X8
	0x03539B24 LDP X10, X6, [X9 + 0x1A8]
	0x03539B28 MOV X5, X31
	0x03539B2C BLR X10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEA7000
	009 Move W8, [X21+3041]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBFC000
	017 Move X0, [X0+3032]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3041], W8
	021 Move X24, 0xBFC000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+3032]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_StateChanged(System.Action`2<Photon.Realtime.ClientState, Photon.Realtime.ClientState> value)

Disassembly:
	0x03539B30 TBZ X0, 0x0, 0x35398C8
	0x03539B34 LDR W1, [X19 + 0x90]
	0x03539B38 CMP W1, 0xC
	0x03539B3C B.EQ 0x3539B64
	0x03539B40 LDR X8, [X19 + 0x98]
	0x03539B44 MOVZ W9, 0xC
	0x03539B48 STR W9, [X19 + 0x90]
	0x03539B4C CBZ X8, 0x3539B64
	0x03539B50 LDR X9, [X8 + 0x18]
	0x03539B54 LDR X0, [X8 + 0x40]
	0x03539B58 LDR X3, [X8 + 0x28]
	0x03539B5C MOVZ W2, 0xC
	0x03539B60 BLR X9
	0x03539B64 MOVZ W0, 0x1
	0x03539B68 B 0x35398CC
	0x03539B6C BL 0x1C16F20
	0x03539B70 LDR X8, [X0]
	0x03539B74 LDP X2, X1, [X8 + 0x1C8]
	0x03539B78 BR X2
	0x03539B7C SUB X31, X31, 0x40
	0x03539B80 STP X30, X21, [X31 + 0x20]
	0x03539B84 STP X20, X19, [X31 + 0x30]
	0x03539B88 ADRP X20, 0xEA6000
	0x03539B8C LDRB W8, [X20 + 0xBEB]
	0x03539B90 MOV X19, X0
	0x03539B94 TBNZ X8, 0x0, 0x3539BD0
	0x03539B98 ADRP X0, 0xBFB000
	0x03539B9C LDR X0, [X0 + 0xB40]
	0x03539BA0 BL 0x1C16CF4
	0x03539BA4 ADRP X0, 0xBC2000
	0x03539BA8 LDR X0, [X0 + 0xD40]
	0x03539BAC BL 0x1C16CF4
	0x03539BB0 ADRP X0, 0xBC3000
	0x03539BB4 LDR X0, [X0 + 0x8]
	0x03539BB8 BL 0x1C16CF4
	0x03539BBC ADRP X0, 0xBC3000
	0x03539BC0 LDR X0, [X0 + 0x10]
	0x03539BC4 BL 0x1C16CF4
	0x03539BC8 MOVZ W8, 0x1
	0x03539BCC STRB W8, [X20 + 0xBEB]
	0x03539BD0 LDR X0, [X19 + 0x10]
	0x03539BD4 CBZ X0, 0x3539D58
	0x03539BD8 MOV X1, X31
	0x03539BDC BL 0x3501B48

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEA7000
	009 Move W8, [X21+3042]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBFC000
	017 Move X0, [X0+3032]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3042], W8
	021 Move X24, 0xBFC000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+3032]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_EventReceived(System.Action`1<ExitGames.Client.Photon.EventData> value)

Disassembly:
	0x03539BE0 ANDS W31, W0, 0xFF
	0x03539BE4 B.EQ 0x3539C68
	0x03539BE8 LDR X0, [X19 + 0x10]
	0x03539BEC CBZ X0, 0x3539D58
	0x03539BF0 ADRP X20, 0xBC2000
	0x03539BF4 ADRP X21, 0xBC3000
	0x03539BF8 LDR X20, [X20 + 0xD40]
	0x03539BFC LDR X21, [X21 + 0x10]
	0x03539C00 MOV X1, X31
	0x03539C04 BL 0x3501B48
	0x03539C08 LDR X8, [X20]
	0x03539C0C MOVN X9, 0x0
	0x03539C10 STRB W0, [X31 + 0x18]
	0x03539C14 ADD X0, X31, 0x8
	0x03539C18 MOV X1, X31
	0x03539C1C STP X8, X9, [X31 + 0x8]
	0x03539C20 BL 0x33B162C
	0x03539C24 LDR X8, [X21]
	0x03539C28 MOV X1, X0
	0x03539C2C MOV X2, X31
	0x03539C30 MOV X0, X8
	0x03539C34 BL 0x321B938
	0x03539C38 LDR X8, [X19]
	0x03539C3C MOV X2, X0
	0x03539C40 MOVZ W1, 0x2
	0x03539C44 LDR X9, [X8 + 0x218]
	0x03539C48 LDR X3, [X8 + 0x220]
	0x03539C4C MOV X0, X19
	0x03539C50 BLR X9
	0x03539C54 MOV W0, W31
	0x03539C58 LDP X20, X19, [X31 + 0x30]
	0x03539C5C LDP X30, X21, [X31 + 0x20]
	0x03539C60 ADD X31, X31, 0x40
	0x03539C64 RET
	0x03539C68 LDR W8, [X19 + 0x38]
	0x03539C6C CBZ W8, 0x3539C80
	0x03539C70 LDR X9, [X19 + 0x30]
	0x03539C74 CBZ X9, 0x3539CA0
	0x03539C78 LDR X9, [X9 + 0x28]
	0x03539C7C CBZ X9, 0x3539CA0
	0x03539C80 LDR X0, [X19 + 0x10]
	0x03539C84 STR W31, [X19 + 0xE0]
	0x03539C88 STR X31, [X19 + 0xE8]
	0x03539C8C CBZ W8, 0x3539CF0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEA7000
	009 Move W8, [X21+3043]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBC3000
	017 Move X0, [X0+3248]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3043], W8
	021 Move X24, 0xBC3000
	022 Add X20, X20, 160
	023 Move X21, [X20]
	024 Move X24, [X24+3248]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_EventReceived(System.Action`1<ExitGames.Client.Photon.EventData> value)

Disassembly:
	0x03539C90 LDR X8, [X19 + 0x30]
	0x03539C94 CBZ X8, 0x3539CF0
	0x03539C98 LDR X4, [X8 + 0x28]
	0x03539C9C B 0x3539CF4
	0x03539CA0 ADRP X9, 0xBFB000
	0x03539CA4 LDR X9, [X9 + 0xB40]
	0x03539CA8 MOVN X10, 0x0
	0x03539CAC ADD X0, X31, 0x8
	0x03539CB0 MOV X1, X31
	0x03539CB4 LDR X9, [X9]
	0x03539CB8 STR W8, [X31 + 0x18]
	0x03539CBC STP X9, X10, [X31 + 0x8]
	0x03539CC0 BL 0x33B162C
	0x03539CC4 ADRP X8, 0xBC3000
	0x03539CC8 LDR X8, [X8 + 0x8]
	0x03539CCC MOV X1, X0
	0x03539CD0 MOV X2, X31
	0x03539CD4 LDR X8, [X8]
	0x03539CD8 MOV X0, X8
	0x03539CDC BL 0x321B938
	0x03539CE0 LDR X8, [X19]
	0x03539CE4 MOV X2, X0
	0x03539CE8 MOVZ W1, 0x1
	0x03539CEC B 0x3539C44
	0x03539CF0 MOV X4, X31
	0x03539CF4 CBZ X0, 0x3539D58
	0x03539CF8 LDR X8, [X0]
	0x03539CFC LDR X1, [X19 + 0x70]
	0x03539D00 LDR X2, [X19 + 0x88]
	0x03539D04 LDR X3, [X19 + 0x20]
	0x03539D08 LDP X9, X6, [X8 + 0x1A8]
	0x03539D0C MOV X5, X31
	0x03539D10 BLR X9
	0x03539D14 TBZ X0, 0x0, 0x3539C54
	0x03539D18 LDR W1, [X19 + 0x90]
	0x03539D1C STRB W31, [X19 + 0x168]
	0x03539D20 CMP W1, 0xC
	0x03539D24 B.EQ 0x3539D4C
	0x03539D28 LDR X8, [X19 + 0x98]
	0x03539D2C MOVZ W9, 0xC
	0x03539D30 STR W9, [X19 + 0x90]
	0x03539D34 CBZ X8, 0x3539D4C
	0x03539D38 LDR X9, [X8 + 0x18]
	0x03539D3C LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEA7000
	009 Move W8, [X21+3044]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBC3000
	017 Move X0, [X0+3248]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3044], W8
	021 Move X24, 0xBC3000
	022 Add X20, X20, 160
	023 Move X21, [X20]
	024 Move X24, [X24+3248]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_OpResponseReceived(System.Action`1<ExitGames.Client.Photon.OperationResponse> value)

Disassembly:
	0x03539D40 LDR X3, [X8 + 0x28]
	0x03539D44 MOVZ W2, 0xC
	0x03539D48 BLR X9
	0x03539D4C MOVZ W0, 0x1
	0x03539D50 STR W31, [X19 + 0x80]
	0x03539D54 B 0x3539C58
	0x03539D58 BL 0x1C16F20
	0x03539D5C SUB X31, X31, 0x40
	0x03539D60 STP X30, X21, [X31 + 0x20]
	0x03539D64 STP X20, X19, [X31 + 0x30]
	0x03539D68 ADRP X20, 0xEA6000
	0x03539D6C LDRB W8, [X20 + 0xBEC]
	0x03539D70 MOV X19, X0
	0x03539D74 TBNZ X8, 0x0, 0x3539DBC
	0x03539D78 ADRP X0, 0xBC2000
	0x03539D7C LDR X0, [X0 + 0xD38]
	0x03539D80 BL 0x1C16CF4
	0x03539D84 ADRP X0, 0xBC3000
	0x03539D88 LDR X0, [X0 + 0x18]
	0x03539D8C BL 0x1C16CF4
	0x03539D90 ADRP X0, 0xBC2000
	0x03539D94 LDR X0, [X0 + 0xD40]
	0x03539D98 BL 0x1C16CF4
	0x03539D9C ADRP X0, 0xBC3000
	0x03539DA0 LDR X0, [X0 + 0x20]
	0x03539DA4 BL 0x1C16CF4
	0x03539DA8 ADRP X0, 0xBC3000
	0x03539DAC LDR X0, [X0 + 0x28]
	0x03539DB0 BL 0x1C16CF4
	0x03539DB4 MOVZ W8, 0x1
	0x03539DB8 STRB W8, [X20 + 0xBEC]
	0x03539DBC LDR X0, [X19 + 0x10]
	0x03539DC0 CBZ X0, 0x3539F5C
	0x03539DC4 MOV X1, X31
	0x03539DC8 BL 0x3501B48
	0x03539DCC ANDS W31, W0, 0xFF
	0x03539DD0 B.EQ 0x3539E44
	0x03539DD4 LDR X0, [X19 + 0x10]
	0x03539DD8 CBZ X0, 0x3539F5C
	0x03539DDC ADRP X20, 0xBC2000
	0x03539DE0 ADRP X21, 0xBC3000
	0x03539DE4 LDR X20, [X20 + 0xD40]
	0x03539DE8 LDR X21, [X21 + 0x28]
	0x03539DEC MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEA7000
	009 Move W8, [X21+3045]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBC3000
	017 Move X0, [X0+3952]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3045], W8
	021 Move X24, 0xBC3000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+3952]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_OpResponseReceived(System.Action`1<ExitGames.Client.Photon.OperationResponse> value)

Disassembly:
	0x03539DF0 BL 0x3501B48
	0x03539DF4 LDR X8, [X20]
	0x03539DF8 MOVN X9, 0x0
	0x03539DFC STRB W0, [X31 + 0x18]
	0x03539E00 ADD X0, X31, 0x8
	0x03539E04 MOV X1, X31
	0x03539E08 STP X8, X9, [X31 + 0x8]
	0x03539E0C BL 0x33B162C
	0x03539E10 LDR X8, [X21]
	0x03539E14 MOV X1, X0
	0x03539E18 MOV X2, X31
	0x03539E1C MOV X0, X8
	0x03539E20 BL 0x321B938
	0x03539E24 LDR X8, [X19]
	0x03539E28 MOV X2, X0
	0x03539E2C MOVZ W1, 0x2
	0x03539E30 MOV X0, X19
	0x03539E34 LDR X9, [X8 + 0x218]
	0x03539E38 LDR X3, [X8 + 0x220]
	0x03539E3C BLR X9
	0x03539E40 B 0x3539F48
	0x03539E44 LDR W8, [X19 + 0x38]
	0x03539E48 MOVZ W9, 0x1
	0x03539E4C STRB W9, [X19 + 0x50]
	0x03539E50 STR X31, [X19 + 0x140]
	0x03539E54 CMP W8, 0x2
	0x03539E58 B.NE 0x3539EA4
	0x03539E5C LDRB W8, [X19 + 0x40]
	0x03539E60 CBNZ W8, 0x3539E90
	0x03539E64 LDR X8, [X19 + 0x10]
	0x03539E68 CBZ X8, 0x3539F5C
	0x03539E6C LDRB W1, [X8 + 0x84]
	0x03539E70 ADRP X8, 0xBC2000
	0x03539E74 LDR X8, [X8 + 0xD38]
	0x03539E78 ADD X0, X31, 0x8
	0x03539E7C STRH W31, [X31 + 0x8]
	0x03539E80 LDR X2, [X8]
	0x03539E84 BL 0x242DF98
	0x03539E88 LDRH W8, [X31 + 0x8]
	0x03539E8C STRH W8, [X19 + 0x40]
	0x03539E90 LDR X20, [X19 + 0x10]
	0x03539E94 CBZ X20, 0x3539F5C
	0x03539E98 MOVZ W8, 0x5
	0x03539E9C STRB W8, [X20 + 0x84]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEA7000
	009 Move W8, [X21+3046]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBC3000
	017 Move X0, [X0+3952]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3046], W8
	021 Move X24, 0xBC3000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+3952]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: Photon.Realtime.DisconnectCause get_DisconnectedCause()

Disassembly:
	0x03539EA0 B 0x3539EA8
	0x03539EA4 LDR X20, [X19 + 0x10]

ISIL:
	001 Move W0, [X0+224]
	002 Return X0

Method: System.Void set_DisconnectedCause(Photon.Realtime.DisconnectCause value)

Disassembly:
	0x03539EA8 MOV X0, X19
	0x03539EAC STR W31, [X19 + 0xE0]

ISIL:
	001 Move [X0+224], W1
	002 Return 

Method: System.Boolean get_InLobby()

Disassembly:
	0x03539EB0 STR X31, [X19 + 0xE8]
	0x03539EB4 BL 0x3538780
	0x03539EB8 LDR W8, [X19 + 0x38]
	0x03539EBC MOV X1, X0

ISIL:
	001 Move W8, [X0+144]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: Photon.Realtime.TypedLobby get_CurrentLobby()

Disassembly:
	0x03539EC0 CBZ W8, 0x3539ED4
	0x03539EC4 LDR X8, [X19 + 0x30]

ISIL:
	001 Move X0, [X0+240]
	002 Return X0

Method: System.Void set_CurrentLobby(Photon.Realtime.TypedLobby value)

Disassembly:
	0x03539EC8 CBZ X8, 0x3539ED4
	0x03539ECC LDR X4, [X8 + 0x28]

ISIL:
	001 Move [X0+240], X1
	002 Return 

Method: Photon.Realtime.Player get_LocalPlayer()

Disassembly:
	0x03539ED0 B 0x3539ED8
	0x03539ED4 MOV X4, X31

ISIL:
	001 Move X0, [X0+264]
	002 Return X0

Method: System.Void set_LocalPlayer(Photon.Realtime.Player value)

Disassembly:
	0x03539ED8 CBZ X20, 0x3539F5C
	0x03539EDC ADRP X9, 0xBC3000

ISIL:
	001 Move [X0+264], X1
	002 Return 

Method: System.String get_NickName()

Disassembly:
	0x03539EE0 LDR X8, [X20]
	0x03539EE4 LDR X2, [X19 + 0x88]
	0x03539EE8 LDR X9, [X9 + 0x20]
	0x03539EEC MOV X0, X20
	0x03539EF0 MOV X5, X31
	0x03539EF4 LDR X3, [X9]
	0x03539EF8 LDP X9, X6, [X8 + 0x1A8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+264]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+32]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_NickName(System.String value)

Disassembly:
	0x03539EFC BLR X9
	0x03539F00 TBZ X0, 0x0, 0x3539F48
	0x03539F04 LDR W1, [X19 + 0x90]
	0x03539F08 STRB W31, [X19 + 0x168]

ISIL:
	001 Move X0, [X0+264]
	002 Compare X0, 0
	003 JumpIfEqual {4}
	004 Return 

Method: System.String get_UserId()

Disassembly:
	0x03539F70 LDRB W8, [X21 + 0xBED]
	0x03539F74 MOV X20, X1
	0x03539F78 MOV X19, X0
	0x03539F7C TBNZ X8, 0x0, 0x3539FC4
	0x03539F80 ADRP X0, 0xBC2000
	0x03539F84 LDR X0, [X0 + 0xD38]

ISIL:
	001 Move X8, [X0+48]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, [X8+48]
	005 Return X0
	006 Move X0, X31
	007 Return X0

Method: System.Void set_UserId(System.String value)

Disassembly:
	0x03539F88 BL 0x1C16CF4
	0x03539F8C ADRP X0, 0xBC3000
	0x03539F90 LDR X0, [X0 + 0x18]
	0x03539F94 BL 0x1C16CF4
	0x03539F98 ADRP X0, 0xBC3000
	0x03539F9C LDR X0, [X0 + 0x30]
	0x03539FA0 BL 0x1C16CF4
	0x03539FA4 ADRP X0, 0xBC3000
	0x03539FA8 LDR X0, [X0 + 0x20]
	0x03539FAC BL 0x1C16CF4
	0x03539FB0 ADRP X0, 0xBC3000
	0x03539FB4 LDR X0, [X0 + 0x38]
	0x03539FB8 BL 0x1C16CF4
	0x03539FBC MOVZ W8, 0x1
	0x03539FC0 STRB W8, [X21 + 0xBED]
	0x03539FC4 MOV X0, X20
	0x03539FC8 MOV X1, X31
	0x03539FCC BL 0x32277A8
	0x03539FD0 TBZ X0, 0x0, 0x353A000
	0x03539FD4 ADRP X9, 0xBC3000
	0x03539FD8 LDR X8, [X19]
	0x03539FDC LDR X9, [X9 + 0x30]
	0x03539FE0 MOVZ W1, 0x1
	0x03539FE4 MOV X0, X19
	0x03539FE8 LDR X3, [X8 + 0x220]
	0x03539FEC LDR X2, [X9]
	0x03539FF0 LDR X9, [X8 + 0x218]
	0x03539FF4 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEA7000
	006 Move W8, [X21+3047]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBFC000
	014 Move X0, [X0+3040]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3047], W8
	018 Move X21, [X20+48]
	019 Compare X21, 0
	020 JumpIfNotEqual {31}
	021 Move X8, 0xBFC000
	022 Move X8, [X8+3040]
	023 Move X0, [X8]
	024 Call 0x1C17F10
	025 Move W8, 255
	026 Move X1, X31
	027 Move X21, X0
	028 Move [X0+16], W8
	029 Call Object..ctor, X0
	030 Move [X20+48], X21
	031 Move [X21+48], X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: Photon.Realtime.Room get_CurrentRoom()

Disassembly:
	0x0353A008 STRB W9, [X19 + 0x50]
	0x0353A00C CMP W8, 0x11

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Void set_CurrentRoom(Photon.Realtime.Room value)

Disassembly:
	0x0353A010 B.EQ 0x353A058
	0x0353A014 CMP W8, 0x1

ISIL:
	001 Move [X0+272], X1
	002 Return 

Method: System.Boolean get_InRoom()

Disassembly:
	0x0353A018 B.NE 0x353A0A0
	0x0353A01C LDR X8, [X19 + 0x10]
	0x0353A020 CBZ X8, 0x353A1A8
	0x0353A024 LDRB W8, [X8 + 0x40]
	0x0353A028 CMP W8, 0x3
	0x0353A02C B.CC 0x353A190
	0x0353A030 ADRP X9, 0xBC2000
	0x0353A034 LDR X8, [X19]
	0x0353A038 LDR X9, [X9 + 0x38]

ISIL:
	001 Move W8, [X0+144]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, [X0+272]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: System.Int32 get_PlayersOnMasterCount()

Disassembly:
	0x0353A03C MOVZ W1, 0x3
	0x0353A040 MOV X0, X19

ISIL:
	001 Move W0, [X0+280]
	002 Return X0

Method: System.Void set_PlayersOnMasterCount(System.Int32 value)

Disassembly:
	0x0353A044 LDR X3, [X8 + 0x220]
	0x0353A048 LDR X2, [X9]

ISIL:
	001 Move [X0+280], W1
	002 Return 

Method: System.Int32 get_PlayersInRoomsCount()

Disassembly:
	0x0353A04C LDR X9, [X8 + 0x218]
	0x0353A050 BLR X9

ISIL:
	001 Move W0, [X0+284]
	002 Return X0

Method: System.Void set_PlayersInRoomsCount(System.Int32 value)

Disassembly:
	0x0353A054 B 0x353A190
	0x0353A058 MOV X0, X19

ISIL:
	001 Move [X0+284], W1
	002 Return 

Method: System.Int32 get_RoomsCount()

Disassembly:
	0x0353A05C STR X20, [X19 + 0x140]
	0x0353A060 BL 0x353A1AC

ISIL:
	001 Move W0, [X0+288]
	002 Return X0

Method: System.Void set_RoomsCount(System.Int32 value)

Disassembly:
	0x0353A064 TBZ X0, 0x0, 0x3539FF8
	0x0353A068 LDR W1, [X19 + 0x90]

ISIL:
	001 Move [X0+288], W1
	002 Return 

Method: System.Boolean get_IsFetchingFriendList()

Disassembly:
	0x0353A06C MOVZ W20, 0x1
	0x0353A070 CMP W1, 0x1
	0x0353A074 B.EQ 0x353A194
	0x0353A078 LDR X8, [X19 + 0x98]

ISIL:
	001 Move X8, [X0+312]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.String get_CloudRegion()

Disassembly:
	0x0353A07C STR W20, [X19 + 0x90]
	0x0353A080 CBZ X8, 0x353A194

ISIL:
	001 Move X0, [X0+320]
	002 Return X0

Method: System.Void set_CloudRegion(System.String value)

Disassembly:
	0x0353A084 LDR X9, [X8 + 0x18]
	0x0353A088 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X0+320], X1
	002 Return 

Method: System.String get_CurrentCluster()

Disassembly:
	0x0353A08C LDR X3, [X8 + 0x28]
	0x0353A090 MOVZ W2, 0x1

ISIL:
	001 Move X0, [X0+328]
	002 Return X0

Method: System.Void set_CurrentCluster(System.String value)

Disassembly:
	0x0353A094 MOVZ W20, 0x1
	0x0353A098 BLR X9

ISIL:
	001 Move [X0+328], X1
	002 Return 

Method: System.Void .ctor(ExitGames.Client.Photon.ConnectionProtocol protocol = 0)

Disassembly:
	0x0353A09C B 0x353A194
	0x0353A0A0 LDR X0, [X19 + 0x10]
	0x0353A0A4 CBZ X0, 0x353A1A8
	0x0353A0A8 LDR X8, [X0]
	0x0353A0AC LDP X9, X1, [X8 + 0x1B8]
	0x0353A0B0 BLR X9
	0x0353A0B4 LDR W8, [X19 + 0x38]
	0x0353A0B8 STR X20, [X19 + 0x140]
	0x0353A0BC CMP W8, 0x2
	0x0353A0C0 B.NE 0x353A10C
	0x0353A0C4 LDRB W8, [X19 + 0x40]
	0x0353A0C8 CBNZ W8, 0x353A0F8
	0x0353A0CC LDR X8, [X19 + 0x10]
	0x0353A0D0 CBZ X8, 0x353A1A8
	0x0353A0D4 LDRB W1, [X8 + 0x84]
	0x0353A0D8 ADRP X8, 0xBC1000
	0x0353A0DC LDR X8, [X8 + 0xD38]
	0x0353A0E0 ADD X0, X31, 0xC
	0x0353A0E4 STRH W31, [X31 + 0xC]
	0x0353A0E8 LDR X2, [X8]
	0x0353A0EC BL 0x242DF98
	0x0353A0F0 LDRH W8, [X31 + 0xC]
	0x0353A0F4 STRH W8, [X19 + 0x40]
	0x0353A0F8 LDR X20, [X19 + 0x10]
	0x0353A0FC CBZ X20, 0x353A1A8
	0x0353A100 MOVZ W8, 0x5
	0x0353A104 STRB W8, [X20 + 0x84]
	0x0353A108 B 0x353A110
	0x0353A10C LDR X20, [X19 + 0x10]
	0x0353A110 MOV X0, X19
	0x0353A114 STRB W31, [X19 + 0x168]
	0x0353A118 STR W31, [X19 + 0xE0]
	0x0353A11C STR X31, [X19 + 0xE8]
	0x0353A120 BL 0x3538780
	0x0353A124 CBZ X20, 0x353A1A8
	0x0353A128 ADRP X9, 0xBC2000
	0x0353A12C LDR X8, [X20]
	0x0353A130 LDR X2, [X19 + 0x88]
	0x0353A134 LDR X9, [X9 + 0x20]
	0x0353A138 MOV X1, X0
	0x0353A13C MOV X0, X20
	0x0353A140 MOV X4, X31
	0x0353A144 LDR X3, [X9]
	0x0353A148 LDP X9, X6, [X8 + 0x1A8]
	0x0353A14C MOV X5, X31
	0x0353A150 BLR X9
	0x0353A154 TBZ X0, 0x0, 0x3539FF8
	0x0353A158 LDR W1, [X19 + 0x90]
	0x0353A15C CMP W1, 0x10
	0x0353A160 B.EQ 0x353A188
	0x0353A164 LDR X8, [X19 + 0x98]
	0x0353A168 MOVZ W9, 0x10
	0x0353A16C STR W9, [X19 + 0x90]
	0x0353A170 CBZ X8, 0x353A188
	0x0353A174 LDR X9, [X8 + 0x18]
	0x0353A178 LDR X0, [X8 + 0x40]
	0x0353A17C LDR X3, [X8 + 0x28]
	0x0353A180 MOVZ W2, 0x10
	0x0353A184 BLR X9
	0x0353A188 MOVZ W8, 0x2
	0x0353A18C STR W8, [X19 + 0x80]
	0x0353A190 MOVZ W20, 0x1
	0x0353A194 MOV W0, W20
	0x0353A198 LDP X20, X19, [X31 + 0x20]
	0x0353A19C LDP X30, X21, [X31 + 0x10]
	0x0353A1A0 ADD X31, X31, 0x30
	0x0353A1A4 RET
	0x0353A1A8 BL 0x1C16F20
	0x0353A1AC SUB X31, X31, 0x50
	0x0353A1B0 STR X30, [X31 + 0x30]
	0x0353A1B4 STP X20, X19, [X31 + 0x40]
	0x0353A1B8 ADRP X20, 0xEA5000
	0x0353A1BC LDRB W8, [X20 + 0xBF3]
	0x0353A1C0 MOV X19, X0
	0x0353A1C4 TBNZ X8, 0x0, 0x353A248
	0x0353A1C8 ADRP X0, 0xBFA000
	0x0353A1CC LDR X0, [X0 + 0xB50]
	0x0353A1D0 BL 0x1C16CF4
	0x0353A1D4 ADRP X0, 0xBC2000
	0x0353A1D8 LDR X0, [X0 + 0x18]
	0x0353A1DC BL 0x1C16CF4
	0x0353A1E0 ADRP X0, 0xBC2000
	0x0353A1E4 LDR X0, [X0 + 0x40]
	0x0353A1E8 BL 0x1C16CF4
	0x0353A1EC ADRP X0, 0xBFA000
	0x0353A1F0 LDR X0, [X0 + 0xCA8]
	0x0353A1F4 BL 0x1C16CF4
	0x0353A1F8 ADRP X0, 0xBB9000
	0x0353A1FC LDR X0, [X0 + 0xAC8]
	0x0353A200 BL 0x1C16CF4
	0x0353A204 ADRP X0, 0xBC2000
	0x0353A208 LDR X0, [X0 + 0x50]
	0x0353A20C BL 0x1C16CF4
	0x0353A210 ADRP X0, 0xBC2000
	0x0353A214 LDR X0, [X0 + 0x58]
	0x0353A218 BL 0x1C16CF4
	0x0353A21C ADRP X0, 0xBC2000
	0x0353A220 LDR X0, [X0 + 0x60]
	0x0353A224 BL 0x1C16CF4
	0x0353A228 ADRP X0, 0xBC2000
	0x0353A22C LDR X0, [X0 + 0x68]
	0x0353A230 BL 0x1C16CF4
	0x0353A234 ADRP X0, 0xBC2000
	0x0353A238 LDR X0, [X0 + 0x70]
	0x0353A23C BL 0x1C16CF4
	0x0353A240 MOVZ W8, 0x1
	0x0353A244 STRB W8, [X20 + 0xBF3]
	0x0353A248 STRH W31, [X31 + 0x3C]
	0x0353A24C LDRB W8, [X19 + 0x50]
	0x0353A250 LDR W2, [X19 + 0x80]
	0x0353A254 CBZ W8, 0x353A270
	0x0353A258 CMP W2, 0x2
	0x0353A25C B.EQ 0x353A270
	0x0353A260 LDR X8, [X19 + 0x30]
	0x0353A264 CBZ X8, 0x353A308
	0x0353A268 LDR X8, [X8 + 0x28]
	0x0353A26C CBZ X8, 0x353A308
	0x0353A270 LDR W8, [X19 + 0x38]
	0x0353A274 CBZ W8, 0x353A2CC
	0x0353A278 ADRP X8, 0xBC2000
	0x0353A27C LDR X8, [X8 + 0x50]
	0x0353A280 MOVZ W1, 0xE7
	0x0353A284 MOV X0, X19
	0x0353A288 LDR X3, [X8]
	0x0353A28C BL 0x353ACB8
	0x0353A290 TBZ X0, 0x0, 0x353A424
	0x0353A294 LDRH W8, [X19 + 0x40]
	0x0353A298 ANDS W31, W8, 0xFF
	0x0353A29C STRH W8, [X31 + 0x3C]
	0x0353A2A0 B.EQ 0x353A42C
	0x0353A2A4 ADRP X9, 0xBC2000
	0x0353A2A8 LDR X9, [X9 + 0x40]
	0x0353A2AC ADD X0, X31, 0x3C
	0x0353A2B0 STRH W8, [X31 + 0x3C]
	0x0353A2B4 LDR X1, [X9]
	0x0353A2B8 BL 0x242DFB0
	0x0353A2BC LDR X8, [X19 + 0x10]
	0x0353A2C0 CBZ X8, 0x353A49C
	0x0353A2C4 MOV W6, W0
	0x0353A2C8 B 0x353A438
	0x0353A2CC ADRP X8, 0xBC2000
	0x0353A2D0 LDR X8, [X8 + 0x68]
	0x0353A2D4 MOVZ W1, 0xE6
	0x0353A2D8 MOV X0, X19
	0x0353A2DC LDR X3, [X8]
	0x0353A2E0 BL 0x353ACB8
	0x0353A2E4 TBZ X0, 0x0, 0x353A424
	0x0353A2E8 LDRB W8, [X19 + 0xF8]
	0x0353A2EC LDR X0, [X19 + 0x10]
	0x0353A2F0 CBZ W8, 0x353A460
	0x0353A2F4 LDR W8, [X19 + 0x80]
	0x0353A2F8 CMP W8, 0x0
	0x0353A2FC CSET W5, EQ
	0x0353A300 CBNZ X0, 0x353A468
	0x0353A304 B 0x353A49C
	0x0353A308 ADRP X8, 0xBB9000
	0x0353A30C LDR X8, [X8 + 0xAC8]
	0x0353A310 MOVZ W1, 0x6
	0x0353A314 LDR X0, [X8]
	0x0353A318 BL 0x1C16D6C
	0x0353A31C CBZ X0, 0x353A49C
	0x0353A320 LDR W8, [X0 + 0x18]
	0x0353A324 MOV X20, X0
	0x0353A328 CBZ W8, 0x353A498
	0x0353A32C ADRP X8, 0xBC2000
	0x0353A330 LDR X8, [X8 + 0x60]
	0x0353A334 ADRP X9, 0xBFA000
	0x0353A338 MOVN X10, 0x0
	0x0353A33C ADD X0, X31, 0x18
	0x0353A340 LDR X8, [X8]
	0x0353A344 LDR X9, [X9 + 0xCA8]
	0x0353A348 MOV X1, X31
	0x0353A34C STR X8, [X20 + 0x20]
	0x0353A350 LDR X8, [X9]
	0x0353A354 LDR W9, [X19 + 0x80]
	0x0353A358 STP X8, X10, [X31 + 0x18]
	0x0353A35C STR W9, [X31 + 0x28]
	0x0353A360 BL 0x33B162C
	0x0353A364 LDR W8, [X20 + 0x18]
	0x0353A368 CMP W8, 0x1
	0x0353A36C B.LS 0x353A498
	0x0353A370 CMP W8, 0x2
	0x0353A374 STR X0, [X20 + 0x28]
	0x0353A378 B.EQ 0x353A498
	0x0353A37C ADRP X8, 0xBC2000
	0x0353A380 LDR X8, [X8 + 0x58]
	0x0353A384 LDR X8, [X8]
	0x0353A388 STR X8, [X20 + 0x30]
	0x0353A38C LDR X0, [X19 + 0x10]
	0x0353A390 CBZ X0, 0x353A49C
	0x0353A394 MOV X1, X31
	0x0353A398 BL 0x3502274
	0x0353A39C LDR W8, [X20 + 0x18]
	0x0353A3A0 CMP W8, 0x3
	0x0353A3A4 B.LS 0x353A498
	0x0353A3A8 CMP W8, 0x4
	0x0353A3AC STR X0, [X20 + 0x38]
	0x0353A3B0 B.EQ 0x353A498
	0x0353A3B4 ADRP X8, 0xBC2000
	0x0353A3B8 LDR X8, [X8 + 0x70]
	0x0353A3BC ADRP X9, 0xBFA000
	0x0353A3C0 MOVN X10, 0x0
	0x0353A3C4 ADD X0, X31, 0x0
	0x0353A3C8 LDR X8, [X8]
	0x0353A3CC LDR X9, [X9 + 0xB50]
	0x0353A3D0 MOV X1, X31
	0x0353A3D4 STR X8, [X20 + 0x40]
	0x0353A3D8 LDR X8, [X9]
	0x0353A3DC LDR W9, [X19 + 0x90]
	0x0353A3E0 STP X8, X10, [X31]
	0x0353A3E4 STR W9, [X31 + 0x10]
	0x0353A3E8 BL 0x33B162C
	0x0353A3EC LDR W8, [X20 + 0x18]
	0x0353A3F0 CMP W8, 0x5
	0x0353A3F4 B.LS 0x353A498
	0x0353A3F8 STR X0, [X20 + 0x48]
	0x0353A3FC MOV X0, X20
	0x0353A400 MOV X1, X31
	0x0353A404 BL 0x32278CC
	0x0353A408 LDR X8, [X19]
	0x0353A40C MOV X2, X0
	0x0353A410 MOVZ W1, 0x1
	0x0353A414 MOV X0, X19
	0x0353A418 LDR X9, [X8 + 0x218]
	0x0353A41C LDR X3, [X8 + 0x220]
	0x0353A420 BLR X9
	0x0353A424 MOV W0, W31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0xEA6000
	014 Move X29, 0xBC2000
	015 Move X27, 0xBFB000
	016 Move X21, 0xBFB000
	017 Move X26, 0xBFB000
	018 Move X25, 0xBFB000
	019 Move X24, 0xBC2000
	020 Move X23, 0xBC2000
	021 Move X22, 0xBFB000
	022 Move X29, [X29+2928]
	023 Move X27, [X27+3048]
	024 Move X21, [X21+3056]
	025 Move X26, [X26+3064]
	026 Move X25, [X25+3072]
	027 Move X24, [X24+2968]
	028 Move X23, [X23+2976]
	029 Move X22, [X22+3080]
	030 Move W8, [X28+3048]
	031 Move W20, W1
	032 Move X19, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {93}
	037 Move X0, 0xBC2000
	038 Move X0, [X0+2992]
	039 Call 0x1C17CF4
	040 Move X0, 0xBFB000
	041 Move X0, [X0+3080]
	042 Call 0x1C17CF4
	043 Move X0, 0xBFB000
	044 Move X0, [X0+2976]
	045 Call 0x1C17CF4
	046 Move X0, 0xBFB000
	047 Move X0, [X0+3088]
	048 Call 0x1C17CF4
	049 Move X0, 0xBC2000
	050 Move X0, [X0+2976]
	051 Call 0x1C17CF4
	052 Move X0, 0xBC2000
	053 Move X0, [X0+2968]
	054 Call 0x1C17CF4
	055 Move X0, 0xBFB000
	056 Move X0, [X0+3096]
	057 Call 0x1C17CF4
	058 Move X0, 0xBFB000
	059 Move X0, [X0+3056]
	060 Call 0x1C17CF4
	061 Move X0, 0xBFB000
	062 Move X0, [X0+3048]
	063 Call 0x1C17CF4
	064 Move X0, 0xBFB000
	065 Move X0, [X0+3104]
	066 Call 0x1C17CF4
	067 Move X0, 0xBFB000
	068 Move X0, [X0+3112]
	069 Call 0x1C17CF4
	070 Move X0, 0xBFB000
	071 Move X0, [X0+3120]
	072 Call 0x1C17CF4
	073 Move X0, 0xBFB000
	074 Move X0, [X0+3128]
	075 Call 0x1C17CF4
	076 Move X0, 0xBFB000
	077 Move X0, [X0+3072]
	078 Call 0x1C17CF4
	079 Move X0, 0xBFB000
	080 Move X0, [X0+3064]
	081 Call 0x1C17CF4
	082 Move X0, 0xBBC000
	083 Move X0, [X0+632]
	084 Call 0x1C17CF4
	085 Move X0, 0xBFB000
	086 Move X0, [X0+3136]
	087 Call 0x1C17CF4
	088 Move X0, 0xBC2000
	089 Move X0, [X0+2928]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X28+3048], W8
	093 Move X8, [X29]
	094 Move [X19+88], X8
	095 Move X0, [X27]
	096 Call 0x1C17F10
	097 Move X1, [X21]
	098 Move X21, X0
	099 Call List`1<Object>..ctor, X0
	100 Move W8, 1
	101 Move [X19+256], X21
	102 Move [X19+360], W8
	103 Move X0, [X26]
	104 Call 0x1C17F10
	105 Move X1, [X25]
	106 Move X21, X0
	107 Call Queue`1<Object>..ctor, X0
	108 Move [X19+368], X21
	109 Move X0, [X24]
	110 Call 0x1C17F10
	111 Move X1, [X23]
	112 Move X21, X0
	113 Call HashSet`1<Object>..ctor, X0
	114 Move X0, X19
	115 Move X1, X31
	116 Move [X19+376], X21
	117 Call Object..ctor, X0
	118 Move X0, [X22]
	119 Call 0x1C17F10
	120 Move X1, X19
	121 Move X21, X0
	122 Call ConnectionCallbacksContainer..ctor, X0, X1
	123 Move [X19+176], X21
	124 Move X8, 0xBFB000
	125 Move X8, [X8+3128]
	126 Move X0, [X8]
	127 Call 0x1C17F10
	128 Move X1, X19
	129 Move X21, X0
	130 Call MatchMakingCallbacksContainer..ctor, X0, X1
	131 Move [X19+184], X21
	132 Move X8, 0xBFB000
	133 Move X8, [X8+3096]
	134 Move X0, [X8]
	135 Call 0x1C17F10
	136 Move X1, X19
	137 Move X21, X0
	138 Call InRoomCallbacksContainer..ctor, X0, X1
	139 Move [X19+192], X21
	140 Move X8, 0xBFB000
	141 Move X8, [X8+3120]
	142 Move X0, [X8]
	143 Call 0x1C17F10
	144 Move X1, X19
	145 Move X21, X0
	146 Call LobbyCallbacksContainer..ctor, X0, X1
	147 Move [X19+200], X21
	148 Move X8, 0xBFB000
	149 Move X8, [X8+3136]
	150 Move X0, [X8]
	151 Call 0x1C17F10
	152 Move X1, X19
	153 Move X21, X0
	154 Call WebRpcCallbacksContainer..ctor, X0, X1
	155 Move [X19+208], X21
	156 Move X8, 0xBFB000
	157 Move X8, [X8+3088]
	158 Move X0, [X8]
	159 Call 0x1C17F10
	160 Move X1, X19
	161 Move X21, X0
	162 Call ErrorInfoCallbacksContainer..ctor, X0, X1
	163 Move [X19+216], X21
	164 Move X8, 0xBFB000
	165 Move X8, [X8+3112]
	166 Move X0, [X8]
	167 Call 0x1C17F10
	168 Move X1, X19
	169 Move W2, W20
	170 Move X21, X0
	171 Call LoadBalancingPeer..ctor, X0, X1, X2
	172 Move [X19+16], X21
	173 Move X8, 0xBC2000
	174 Move X8, [X8+2992]
	175 Move X0, [X8]
	176 Call 0x1C17F10
	177 Move X8, 0xBFB000
	178 Move X8, [X8+3104]
	179 Move X1, X19
	180 Move X3, X31
	181 Move X20, X0
	182 Move X2, [X8]
	183 Call Action`1<Object>..ctor, X0, X1, X2
	184 Compare X21, 0
	185 JumpIfEqual {256}
	186 Move X0, X21
	187 Move X1, X20
	188 Move X2, X31
	189 Call PhotonPeer.add_OnDisconnectMessage, X0, X1
	190 Move X8, [X19+16]
	191 Compare X8, 0
	192 JumpIfEqual {256}
	193 Move X9, 0xBBC000
	194 Move X9, [X9+632]
	195 Move W10, 1
	196 Move [X8+40], W10
	197 Move X20, 0xBFB000
	198 Move X8, [X9]
	199 Move X9, [X19]
	200 Move TEMP, 0
	201 Not TEMP
	202 Move W2, TEMP
	203 Move W3, 1
	204 Move X8, [X8+184]
	205 Move X0, X19
	206 Move X4, X31
	207 Move X1, [X8]
	208 Move X8, [X9+504]
	209 Move X5, [X9+512]
	210 Move X20, [X20+2976]
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move [X19+264], X0
	213 Move X0, [X20]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Call CustomTypesUnity.Register
	219 Move W1, [X19+144]
	220 Compare W1, 0
	221 JumpIfEqual {243}
	222 Move X8, [X19+152]
	223 Move [X19+144], W31
	224 Compare X8, 0
	225 JumpIfEqual {243}
	226 Move X4, [X8+24]
	227 Move X0, [X8+64]
	228 Move X3, [X8+40]
	229 Move X20, [X31+80]
	230 Move X19, [X31+88]
	231 Move X22, [X31+64]
	232 Move X21, [X31+72]
	233 Move X24, [X31+48]
	234 Move X23, [X31+56]
	235 Move X26, [X31+32]
	236 Move X25, [X31+40]
	237 Move X28, [X31+16]
	238 Move X27, [X31+24]
	239 Move W2, W31
	240 Move X29, [X31+96]
	241 Move X30, [X31+104]
	242 CallNoReturn X4
	243 Move X20, [X31+80]
	244 Move X19, [X31+88]
	245 Move X22, [X31+64]
	246 Move X21, [X31+72]
	247 Move X24, [X31+48]
	248 Move X23, [X31+56]
	249 Move X26, [X31+32]
	250 Move X25, [X31+40]
	251 Move X28, [X31+16]
	252 Move X27, [X31+24]
	253 Move X29, [X31+96]
	254 Move X30, [X31+104]
	255 Return 
	256 Call 0x1C17F20

Method: System.Void .ctor(System.String masterAddress, System.String appId, System.String gameVersion, ExitGames.Client.Photon.ConnectionProtocol protocol = 0)

Disassembly:
	0x0353A798 LDR X0, [X0 + 0xA8]
	0x0353A79C BL 0x1C16CF4
	0x0353A7A0 MOVZ W8, 0x1
	0x0353A7A4 STRB W8, [X20 + 0xBEF]
	0x0353A7A8 LDR X0, [X19 + 0x10]
	0x0353A7AC CBZ X0, 0x353A8F8
	0x0353A7B0 MOV X1, X31
	0x0353A7B4 BL 0x3501B48
	0x0353A7B8 ANDS W31, W0, 0xFF
	0x0353A7BC B.EQ 0x353A81C
	0x0353A7C0 LDR X0, [X19 + 0x10]
	0x0353A7C4 CBZ X0, 0x353A8F8
	0x0353A7C8 ADRP X20, 0xBC1000
	0x0353A7CC ADRP X21, 0xBC2000
	0x0353A7D0 LDR X20, [X20 + 0xD40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move W1, W4
	008 Move X19, X3
	009 Move X20, X2
	010 Move X22, X0
	011 Call LoadBalancingClient..ctor, X0, X1
	012 Move [X22+112], X21
	013 Move [X22+24], X19
	014 Move [X22+32], X20
	015 Move X20, [X31+32]
	016 Move X19, [X31+40]
	017 Move X22, [X31+16]
	018 Move X21, [X31+24]
	019 Move X30, [X31+48]
	020 Return 

Method: System.String GetNameServerAddress()

Disassembly:
	0x03539780 BL 0x1C16DFC
	0x03539784 STR X19, [X20 + 0x48]
	0x03539788 LDP X20, X19, [X31 + 0x20]
	0x0353978C LDP X22, X21, [X31 + 0x10]
	0x03539790 LDP X30, X23, [X31], #0x30
	0x03539794 RET
	0x03539798 STR X30, [X31 - 0x30]!
	0x0353979C STP X22, X21, [X31 + 0x10]
	0x035397A0 STP X20, X19, [X31 + 0x20]
	0x035397A4 MOV X21, X1
	0x035397A8 MOV W1, W4
	0x035397AC MOV X19, X3
	0x035397B0 MOV X20, X2
	0x035397B4 MOV X22, X0
	0x035397B8 BL 0x353909C
	0x035397BC STR X21, [X22 + 0x70]
	0x035397C0 STP X19, X20, [X22 + 0x18]
	0x035397C4 LDP X20, X19, [X31 + 0x20]
	0x035397C8 LDP X22, X21, [X31 + 0x10]
	0x035397CC LDR X30, [X31], #0x30
	0x035397D0 RET
	0x035397D4 SUB X31, X31, 0x40
	0x035397D8 STP X30, X21, [X31 + 0x20]
	0x035397DC STP X20, X19, [X31 + 0x30]
	0x035397E0 ADRP X21, 0xEA6000
	0x035397E4 LDRB W8, [X21 + 0xBEA]
	0x035397E8 MOV X20, X1
	0x035397EC MOV X19, X0
	0x035397F0 TBNZ X8, 0x0, 0x3539844
	0x035397F4 ADRP X0, 0xBBA000
	0x035397F8 LDR X0, [X0 + 0x758]
	0x035397FC BL 0x1C16CF4
	0x03539800 ADRP X0, 0xBC2000
	0x03539804 LDR X0, [X0 + 0xD38]
	0x03539808 BL 0x1C16CF4
	0x0353980C ADRP X0, 0xBC2000
	0x03539810 LDR X0, [X0 + 0xD40]
	0x03539814 BL 0x1C16CF4
	0x03539818 ADRP X0, 0xBC2000
	0x0353981C LDR X0, [X0 + 0xD48]
	0x03539820 BL 0x1C16CF4
	0x03539824 ADRP X0, 0xBC2000
	0x03539828 LDR X0, [X0 + 0xD50]
	0x0353982C BL 0x1C16CF4
	0x03539830 ADRP X0, 0xBC2000
	0x03539834 LDR X0, [X0 + 0xFF0]
	0x03539838 BL 0x1C16CF4
	0x0353983C MOVZ W8, 0x1
	0x03539840 STRB W8, [X21 + 0xBEA]
	0x03539844 LDR X0, [X19 + 0x10]
	0x03539848 CBZ X0, 0x3539B6C
	0x0353984C MOV X1, X31
	0x03539850 BL 0x3501B48
	0x03539854 ANDS W31, W0, 0xFF
	0x03539858 B.EQ 0x35398DC
	0x0353985C LDR X0, [X19 + 0x10]
	0x03539860 CBZ X0, 0x3539B6C
	0x03539864 ADRP X20, 0xBC2000
	0x03539868 ADRP X21, 0xBC2000
	0x0353986C LDR X20, [X20 + 0xD40]
	0x03539870 LDR X21, [X21 + 0xD48]
	0x03539874 MOV X1, X31
	0x03539878 BL 0x3501B48
	0x0353987C LDR X8, [X20]
	0x03539880 MOVN X9, 0x0
	0x03539884 STRB W0, [X31 + 0x18]
	0x03539888 ADD X0, X31, 0x8
	0x0353988C MOV X1, X31
	0x03539890 STP X8, X9, [X31 + 0x8]
	0x03539894 BL 0x33B162C
	0x03539898 LDR X8, [X21]
	0x0353989C MOV X1, X0
	0x035398A0 MOV X2, X31
	0x035398A4 MOV X0, X8
	0x035398A8 BL 0x321B938
	0x035398AC LDR X8, [X19]
	0x035398B0 MOV X2, X0
	0x035398B4 MOVZ W1, 0x2
	0x035398B8 LDR X9, [X8 + 0x218]
	0x035398BC LDR X3, [X8 + 0x220]
	0x035398C0 MOV X0, X19
	0x035398C4 BLR X9
	0x035398C8 MOV W0, W31
	0x035398CC LDP X20, X19, [X31 + 0x30]
	0x035398D0 LDP X30, X21, [X31 + 0x20]
	0x035398D4 ADD X31, X31, 0x40
	0x035398D8 RET
	0x035398DC CBZ X20, 0x3539900
	0x035398E0 LDR W8, [X19 + 0x28]
	0x035398E4 CMP W8, 0x2
	0x035398E8 B.EQ 0x3539920
	0x035398EC CMP W8, 0x1
	0x035398F0 B.EQ 0x3539928
	0x035398F4 CBNZ W8, 0x3539934
	0x035398F8 ADD X8, X20, 0x10
	0x035398FC B 0x353992C
	0x03539900 ADRP X9, 0xBC2000
	0x03539904 LDR X8, [X19]
	0x03539908 LDR X9, [X9 + 0xD50]
	0x0353990C MOVZ W1, 0x1
	0x03539910 LDR X3, [X8 + 0x220]
	0x03539914 LDR X2, [X9]
	0x03539918 LDR X9, [X8 + 0x218]
	0x0353991C B 0x35398C0
	0x03539920 ADD X8, X20, 0x18
	0x03539924 B 0x353992C
	0x03539928 ADD X8, X20, 0x28
	0x0353992C LDR X8, [X8]
	0x03539930 STR X8, [X19 + 0x20]
	0x03539934 LDR X8, [X20 + 0x30]
	0x03539938 MOV X1, X31
	0x0353993C STR X8, [X19 + 0x18]
	0x03539940 LDRB W8, [X20 + 0x38]
	0x03539944 STRB W8, [X19 + 0x50]
	0x03539948 LDR X0, [X20 + 0x40]
	0x0353994C STR X0, [X19 + 0x140]
	0x03539950 BL 0x32277A8
	0x03539954 AND W8, W0, 0x1
	0x03539958 STRB W8, [X19 + 0x168]
	0x0353995C LDRB W9, [X20 + 0x70]
	0x03539960 LDR X8, [X19 + 0x10]
	0x03539964 STRB W9, [X19 + 0xF8]
	0x03539968 CBZ X8, 0x3539B6C
	0x0353996C LDRB W9, [X20 + 0x71]
	0x03539970 STRB W9, [X8 + 0x40]
	0x03539974 LDR W9, [X20 + 0x6C]
	0x03539978 CMP W9, 0x2
	0x0353997C STR W9, [X19 + 0x38]
	0x03539980 B.NE 0x35399B4
	0x03539984 ADRP X10, 0xBC2000
	0x03539988 LDR X10, [X10 + 0xD38]
	0x0353998C MOVZ W9, 0x5
	0x03539990 STRB W9, [X8 + 0x84]
	0x03539994 LDRB W1, [X20 + 0x68]
	0x03539998 LDR X2, [X10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEA7000
	007 Move X20, 0xBFC000
	008 Move W8, [X21+3049]
	009 Move X20, [X20+3000]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0xBC3000
	016 Move X0, [X0+3928]
	017 Call 0x1C17CF4
	018 Move X0, 0xBBB000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0xBFC000
	022 Move X0, [X0+3000]
	023 Call 0x1C17CF4
	024 Move X0, 0xBFC000
	025 Move X0, [X0+3008]
	026 Call 0x1C17CF4
	027 Move X0, 0xBC3000
	028 Move X0, [X0+3936]
	029 Call 0x1C17CF4
	030 Move X0, 0xBC3000
	031 Move X0, [X0+4080]
	032 Call 0x1C17CF4
	033 Move X0, 0xBFC000
	034 Move X0, [X0+3016]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3049], W8
	038 Move X0, [X20]
	039 Move [X31+12], W31
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X20]
	045 Move X8, [X19+16]
	046 Compare X8, 0
	047 JumpIfEqual {130}
	048 Move X9, [X0+184]
	049 Move X0, [X9]
	050 Compare X0, 0
	051 JumpIfEqual {130}
	052 Move X9, 0xBC3000
	053 Move X9, [X9+3928]
	054 Move W1, [X8+132]
	055 Move X20, 0xBBB000
	056 Add X2, X31, 12
	057 Move X3, [X9]
	058 Move X20, [X20+1880]
	059 Call Dictionary`2<ByteEnum, Int32>.TryGetValue, X0, X1, X2
	060 Move W8, [X19+384]
	061 Compare W8, 0
	062 JumpIfEqual {83}
	063 Move X0, [X20]
	064 Move X21, 0xBC3000
	065 Move X21, [X21+3936]
	066 Add X1, X31, 8
	067 Move [X31+8], W8
	068 Call 0x1C17E04
	069 Move X8, [X21]
	070 Move X1, X0
	071 Move X2, X31
	072 Move X0, X8
	073 Call String.Format, X0, X1
	074 Move X8, [X19]
	075 Move X2, X0
	076 Move W1, 3
	077 Move X0, X19
	078 Move X9, [X8+536]
	079 Move X3, [X8+544]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move W8, [X19+384]
	082 Move [X31+12], W8
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare W8, 0
	085 JumpIfEqual {87}
	086 Move [X31+12], W8
	087 Move X8, [X19+16]
	088 Compare X8, 0
	089 JumpIfEqual {130}
	090 Move W8, [X8+132]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W8, [X31+12]
	095 Move X0, [X20]
	096 Move X19, [X19+88]
	097 Add X1, X31, 8
	098 Move [X31+8], W8
	099 Call 0x1C17E04
	100 Move X8, 0xBFC000
	101 Move X8, [X8+3016]
	102 Move W8, [X31+12]
	103 Move X0, [X20]
	104 Move X19, [X19+88]
	105 Add X1, X31, 8
	106 Move [X31+8], W8
	107 Call 0x1C17E04
	108 Move X8, 0xBC3000
	109 Move X8, [X8+4080]
	110 Move W8, [X31+12]
	111 Move X0, [X20]
	112 Move X19, [X19+88]
	113 Add X1, X31, 8
	114 Move [X31+8], W8
	115 Call 0x1C17E04
	116 Move X8, 0xBFC000
	117 Move X8, [X8+3008]
	118 Move X8, [X8]
	119 Move X2, X0
	120 Move X1, X19
	121 Move X3, X31
	122 Move X0, X8
	123 Call String.Format, X0, X1, X2
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X30, [X31+16]
	127 Move X21, [X31+24]
	128 Add X31, X31, 48
	129 Return X0
	130 Call 0x1C17F20
	131 Move X0, 0xBC3000
	132 Move X0, [X0+1888]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X1, X31
	136 Move X19, X0
	137 Call ArgumentOutOfRangeException..ctor, X0
	138 Move X0, 0xBFC000
	139 Move X0, [X0+3024]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X19
	143 Call 0x1C17DEC

Method: System.Boolean ConnectUsingSettings(Photon.Realtime.AppSettings appSettings)

Disassembly:
	0x0353A7D4 LDR X21, [X21 + 0xA8]
	0x0353A7D8 MOV X1, X31
	0x0353A7DC BL 0x3501B48
	0x0353A7E0 LDR X8, [X20]
	0x0353A7E4 MOVN X9, 0x0
	0x0353A7E8 STRB W0, [X31 + 0x18]
	0x0353A7EC ADD X0, X31, 0x8
	0x0353A7F0 MOV X1, X31
	0x0353A7F4 STP X8, X9, [X31 + 0x8]
	0x0353A7F8 BL 0x33B162C
	0x0353A7FC LDR X8, [X21]
	0x0353A800 MOV X1, X0
	0x0353A804 MOV X2, X31
	0x0353A808 MOV X0, X8
	0x0353A80C BL 0x321B938
	0x0353A810 LDR X8, [X19]
	0x0353A814 MOV X2, X0
	0x0353A818 B 0x353A8D0
	0x0353A81C LDR X0, [X19 + 0x70]
	0x0353A820 MOV X1, X31
	0x0353A824 BL 0x32277A8
	0x0353A828 TBZ X0, 0x0, 0x353A83C
	0x0353A82C ADRP X9, 0xBC2000
	0x0353A830 LDR X8, [X19]
	0x0353A834 LDR X9, [X9 + 0xA0]
	0x0353A838 B 0x353A8CC
	0x0353A83C LDR X8, [X19 + 0x48]
	0x0353A840 CBZ X8, 0x353A8C0
	0x0353A844 LDR X20, [X19 + 0x30]
	0x0353A848 CBNZ X20, 0x353A898
	0x0353A84C ADRP X9, 0xBC2000
	0x0353A850 LDR X8, [X19]
	0x0353A854 LDR X9, [X9 + 0x90]
	0x0353A858 MOVZ W1, 0x2
	0x0353A85C MOV X0, X19
	0x0353A860 LDR X3, [X8 + 0x220]
	0x0353A864 LDR X2, [X9]
	0x0353A868 LDR X9, [X8 + 0x218]
	0x0353A86C BLR X9
	0x0353A870 ADRP X8, 0xBFA000
	0x0353A874 LDR X8, [X8 + 0xBE0]
	0x0353A878 LDR X0, [X8]
	0x0353A87C BL 0x1C16F10
	0x0353A880 MOVZ W8, 0xFF
	0x0353A884 MOV X1, X31
	0x0353A888 MOV X20, X0
	0x0353A88C STRB W8, [X0 + 0x10]
	0x0353A890 BL 0x33BDD8C
	0x0353A894 STR X20, [X19 + 0x30]
	0x0353A898 LDR X8, [X19 + 0x48]
	0x0353A89C MOV X0, X19
	0x0353A8A0 LDP X30, X21, [X31 + 0x20]
	0x0353A8A4 MOV W3, W31
	0x0353A8A8 STR X8, [X20 + 0x28]
	0x0353A8AC LDR X1, [X19 + 0x70]
	0x0353A8B0 LDR X2, [X19 + 0x88]
	0x0353A8B4 LDP X20, X19, [X31 + 0x30]
	0x0353A8B8 ADD X31, X31, 0x40
	0x0353A8BC B 0x353A4A4
	0x0353A8C0 ADRP X9, 0xBC2000
	0x0353A8C4 LDR X8, [X19]
	0x0353A8C8 LDR X9, [X9 + 0x98]
	0x0353A8CC LDR X2, [X9]
	0x0353A8D0 LDR X9, [X8 + 0x218]
	0x0353A8D4 LDR X3, [X8 + 0x220]
	0x0353A8D8 MOVZ W1, 0x2
	0x0353A8DC MOV X0, X19
	0x0353A8E0 BLR X9
	0x0353A8E4 LDP X20, X19, [X31 + 0x30]
	0x0353A8E8 LDP X30, X21, [X31 + 0x20]
	0x0353A8EC MOV W0, W31
	0x0353A8F0 ADD X31, X31, 0x40
	0x0353A8F4 RET
	0x0353A8F8 BL 0x1C16F20
	0x0353A8FC SUB X31, X31, 0x40
	0x0353A900 STP X30, X21, [X31 + 0x20]
	0x0353A904 STP X20, X19, [X31 + 0x30]
	0x0353A908 ADRP X20, 0xEA5000
	0x0353A90C LDRB W8, [X20 + 0xBF0]
	0x0353A910 MOV X19, X0
	0x0353A914 TBNZ X8, 0x0, 0x353A968
	0x0353A918 ADRP X0, 0xBFA000
	0x0353A91C LDR X0, [X0 + 0xBE0]
	0x0353A920 BL 0x1C16CF4
	0x0353A924 ADRP X0, 0xBC1000
	0x0353A928 LDR X0, [X0 + 0xD40]
	0x0353A92C BL 0x1C16CF4
	0x0353A930 ADRP X0, 0xBC2000
	0x0353A934 LDR X0, [X0 + 0xB0]
	0x0353A938 BL 0x1C16CF4
	0x0353A93C ADRP X0, 0xBC2000
	0x0353A940 LDR X0, [X0 + 0xB8]
	0x0353A944 BL 0x1C16CF4
	0x0353A948 ADRP X0, 0xBC2000
	0x0353A94C LDR X0, [X0 + 0xC0]
	0x0353A950 BL 0x1C16CF4
	0x0353A954 ADRP X0, 0xBC2000
	0x0353A958 LDR X0, [X0 + 0xC8]
	0x0353A95C BL 0x1C16CF4
	0x0353A960 MOVZ W8, 0x1
	0x0353A964 STRB W8, [X20 + 0xBF0]
	0x0353A968 LDR X0, [X19 + 0x10]
	0x0353A96C CBZ X0, 0x353AAD4
	0x0353A970 MOV X1, X31
	0x0353A974 BL 0x3501B48
	0x0353A978 ANDS W31, W0, 0xFF
	0x0353A97C B.EQ 0x353A9DC
	0x0353A980 LDR X0, [X19 + 0x10]
	0x0353A984 CBZ X0, 0x353AAD4
	0x0353A988 ADRP X20, 0xBC1000
	0x0353A98C ADRP X21, 0xBC2000
	0x0353A990 LDR X20, [X20 + 0xD40]
	0x0353A994 LDR X21, [X21 + 0xB0]
	0x0353A998 MOV X1, X31
	0x0353A99C BL 0x3501B48
	0x0353A9A0 LDR X8, [X20]
	0x0353A9A4 MOVN X9, 0x0
	0x0353A9A8 STRB W0, [X31 + 0x18]
	0x0353A9AC ADD X0, X31, 0x8
	0x0353A9B0 MOV X1, X31
	0x0353A9B4 STP X8, X9, [X31 + 0x8]
	0x0353A9B8 BL 0x33B162C
	0x0353A9BC LDR X8, [X21]
	0x0353A9C0 MOV X1, X0
	0x0353A9C4 MOV X2, X31
	0x0353A9C8 MOV X0, X8
	0x0353A9CC BL 0x321B938
	0x0353A9D0 LDR X8, [X19]
	0x0353A9D4 MOV X2, X0
	0x0353A9D8 B 0x353AAAC
	0x0353A9DC LDR X0, [X19 + 0x78]
	0x0353A9E0 MOV X1, X31
	0x0353A9E4 BL 0x32277A8
	0x0353A9E8 TBZ X0, 0x0, 0x353A9FC
	0x0353A9EC ADRP X9, 0xBC2000
	0x0353A9F0 LDR X8, [X19]
	0x0353A9F4 LDR X9, [X9 + 0xC0]
	0x0353A9F8 B 0x353AAA8
	0x0353A9FC LDR X8, [X19 + 0x128]
	0x0353AA00 CBZ X8, 0x353AA8C
	0x0353AA04 LDR X8, [X19 + 0x48]
	0x0353AA08 CBZ X8, 0x353AA9C
	0x0353AA0C LDR X20, [X19 + 0x30]
	0x0353AA10 CBNZ X20, 0x353AA3C
	0x0353AA14 ADRP X8, 0xBFA000
	0x0353AA18 LDR X8, [X8 + 0xBE0]
	0x0353AA1C LDR X0, [X8]
	0x0353AA20 BL 0x1C16F10
	0x0353AA24 MOVZ W8, 0xFF
	0x0353AA28 MOV X1, X31
	0x0353AA2C MOV X20, X0
	0x0353AA30 STRB W8, [X0 + 0x10]
	0x0353AA34 BL 0x33BDD8C
	0x0353AA38 STR X20, [X19 + 0x30]
	0x0353AA3C LDR X8, [X19 + 0x48]
	0x0353AA40 MOV X1, X31
	0x0353AA44 STR X8, [X20 + 0x28]
	0x0353AA48 LDR X0, [X19 + 0x78]
	0x0353AA4C BL 0x32277A8
	0x0353AA50 TBNZ X0, 0x0, 0x353AAC0
	0x0353AA54 LDR X8, [X19 + 0x128]
	0x0353AA58 CBZ X8, 0x353AAC0
	0x0353AA5C MOVZ W9, 0x1
	0x0353AA60 MOVZ W10, 0x3
	0x0353AA64 STR W9, [X19 + 0x124]
	0x0353AA68 STRB W10, [X8 + 0x31]
	0x0353AA6C LDR X1, [X19 + 0x78]
	0x0353AA70 LDR X2, [X19 + 0x88]
	0x0353AA74 MOV X0, X19
	0x0353AA78 LDP X20, X19, [X31 + 0x30]
	0x0353AA7C LDP X30, X21, [X31 + 0x20]
	0x0353AA80 MOVZ W3, 0x1
	0x0353AA84 ADD X31, X31, 0x40
	0x0353AA88 B 0x353A4A4
	0x0353AA8C ADRP X9, 0xBC2000
	0x0353AA90 LDR X8, [X19]
	0x0353AA94 LDR X9, [X9 + 0xC8]
	0x0353AA98 B 0x353AAA8
	0x0353AA9C ADRP X9, 0xBC2000
	0x0353AAA0 LDR X8, [X19]
	0x0353AAA4 LDR X9, [X9 + 0xB8]
	0x0353AAA8 LDR X2, [X9]
	0x0353AAAC LDR X9, [X8 + 0x218]
	0x0353AAB0 LDR X3, [X8 + 0x220]
	0x0353AAB4 MOVZ W1, 0x2
	0x0353AAB8 MOV X0, X19
	0x0353AABC BLR X9
	0x0353AAC0 LDP X20, X19, [X31 + 0x30]
	0x0353AAC4 LDP X30, X21, [X31 + 0x20]
	0x0353AAC8 MOV W0, W31
	0x0353AACC ADD X31, X31, 0x40
	0x0353AAD0 RET
	0x0353AAD4 BL 0x1C16F20
	0x0353AAD8 STP X30, X19, [X31 - 0x10]!
	0x0353AADC LDR W8, [X0 + 0x80]
	0x0353AAE0 MOV X19, X0
	0x0353AAE4 CBZ W8, 0x353AB58
	0x0353AAE8 CMP W8, 0x1
	0x0353AAEC B.EQ 0x353AB28
	0x0353AAF0 CMP W8, 0x2
	0x0353AAF4 B.NE 0x353AB88
	0x0353AAF8 LDR W1, [X19 + 0x90]
	0x0353AAFC CMP W1, 0x12
	0x0353AB00 B.EQ 0x353AB88
	0x0353AB04 LDR X8, [X19 + 0x98]
	0x0353AB08 MOVZ W9, 0x12
	0x0353AB0C STR W9, [X19 + 0x90]
	0x0353AB10 CBZ X8, 0x353AB88
	0x0353AB14 LDR X9, [X8 + 0x18]
	0x0353AB18 LDR X0, [X8 + 0x40]
	0x0353AB1C LDR X3, [X8 + 0x28]
	0x0353AB20 MOVZ W2, 0x12
	0x0353AB24 B 0x353AB84
	0x0353AB28 LDR W1, [X19 + 0x90]
	0x0353AB2C CMP W1, 0xB
	0x0353AB30 B.EQ 0x353AB88
	0x0353AB34 LDR X8, [X19 + 0x98]
	0x0353AB38 MOVZ W9, 0xB
	0x0353AB3C STR W9, [X19 + 0x90]
	0x0353AB40 CBZ X8, 0x353AB88
	0x0353AB44 LDR X9, [X8 + 0x18]
	0x0353AB48 LDR X0, [X8 + 0x40]
	0x0353AB4C LDR X3, [X8 + 0x28]
	0x0353AB50 MOVZ W2, 0xB
	0x0353AB54 B 0x353AB84
	0x0353AB58 LDR W1, [X19 + 0x90]
	0x0353AB5C CMP W1, 0x5
	0x0353AB60 B.EQ 0x353AB88
	0x0353AB64 LDR X8, [X19 + 0x98]
	0x0353AB68 MOVZ W9, 0x5
	0x0353AB6C STR W9, [X19 + 0x90]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xEA6000
	007 Move W8, [X21+3050]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xBBA000
	015 Move X0, [X0+1880]
	016 Call 0x1C17CF4
	017 Move X0, 0xBC2000
	018 Move X0, [X0+3384]
	019 Call 0x1C17CF4
	020 Move X0, 0xBC2000
	021 Move X0, [X0+3392]
	022 Call 0x1C17CF4
	023 Move X0, 0xBC2000
	024 Move X0, [X0+3400]
	025 Call 0x1C17CF4
	026 Move X0, 0xBC2000
	027 Move X0, [X0+3408]
	028 Call 0x1C17CF4
	029 Move X0, 0xBC2000
	030 Move X0, [X0+4080]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3050], W8
	034 Move X0, [X19+16]
	035 Compare X0, 0
	036 JumpIfEqual {253}
	037 Move X1, X31
	038 Call PhotonPeer.get_PeerState, X0
	039 And W31, W0, 255
	040 Move X0, [X19+16]
	041 Compare X0, 0
	042 JumpIfEqual {253}
	043 Move X20, 0xBC2000
	044 Move X21, 0xBC2000
	045 Move X20, [X20+3392]
	046 Move X21, [X21+3400]
	047 Move X1, X31
	048 Call PhotonPeer.get_PeerState, X0
	049 Move X8, [X20]
	050 Move TEMP, 0
	051 Not TEMP
	052 Move X9, TEMP
	053 Move [X31+24], W0
	054 Add X0, X31, 8
	055 Move X1, X31
	056 Move [X31+8], X8
	057 Move [X31+16], X9
	058 Call Enum.ToString, X0
	059 Move X8, [X21]
	060 Move X1, X0
	061 Move X2, X31
	062 Move X0, X8
	063 Call String.Concat, X0, X1
	064 Move X8, [X19]
	065 Move X2, X0
	066 Move W1, 2
	067 Move X9, [X8+536]
	068 Move X3, [X8+544]
	069 Move X0, X19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move W0, W31
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Add X31, X31, 64
	077 Return X0
	078 Compare X20, 0
	079 JumpIfEqual {86}
	080 Move W8, [X19+40]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Compare W8, 0
	084 JumpIfNotEqual {97}
	085 Add X8, X20, 16
	086 Move X9, 0xBC2000
	087 Move X8, [X19]
	088 Move X9, [X9+3408]
	089 Move W1, 1
	090 Move X3, [X8+544]
	091 Move X2, [X9]
	092 Move X9, [X8+536]
	093 Add X8, X20, 24
	094 Add X8, X20, 40
	095 Move X8, [X8]
	096 Move [X19+32], X8
	097 Move X8, [X20+48]
	098 Move X1, X31
	099 Move [X19+24], X8
	100 Move W8, [X20+56]
	101 Move [X19+80], W8
	102 Move X0, [X20+64]
	103 Move [X19+320], X0
	104 Call String.IsNullOrEmpty, X0
	105 And W8, W0, 1
	106 Move [X19+360], W8
	107 Move W9, [X20+112]
	108 Move X8, [X19+16]
	109 Move [X19+248], W9
	110 Compare X8, 0
	111 JumpIfEqual {253}
	112 Move W9, [X20+113]
	113 Move [X8+64], W9
	114 Move W9, [X20+108]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X19+56], W9
	117 Move X10, 0xBC2000
	118 Move X10, [X10+3384]
	119 Move W9, 5
	120 Move [X8+132], W9
	121 Move W1, [X20+104]
	122 Move X2, [X10]
	123 Add X0, X31, 8
	124 NotImplemented "Instruction STRH not yet implemented."
	125 Call Nullable`1<ByteEnum>..ctor, X0, X1
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 NotImplemented "Instruction STRH not yet implemented."
	128 Move W9, [X20+104]
	129 Move [X8+132], W9
	130 NotImplemented "Instruction STRH not yet implemented."
	131 Move W8, [X20+105]
	132 Move W9, [X19+80]
	133 Move [X19+104], W8
	134 Move X8, [X20+72]
	135 Move [X19+224], W31
	136 Move [X19+232], X31
	137 Move [X19+344], X8
	138 Compare W9, 0
	139 JumpIfEqual {195}
	140 Move W8, 2
	141 Move [X19+128], W8
	142 Move W8, [X20+56]
	143 Compare W8, 0
	144 JumpIfEqual {152}
	145 Move X0, [X20+80]
	146 Move X1, X31
	147 Call String.IsNullOrEmpty, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {154}
	152 Move X8, [X20+80]
	153 Move [X19+88], X8
	154 Move X8, [X20+96]
	155 Move X0, X19
	156 Move [X19+136], X8
	157 Move W8, [X20+88]
	158 Move X20, [X19+16]
	159 Move [X19+384], W8
	160 Call LoadBalancingClient.GetNameServerAddress, X0
	161 Move W8, [X19+56]
	162 Move X1, X0
	163 Compare W8, 0
	164 JumpIfEqual {169}
	165 Move X8, [X19+48]
	166 Compare X8, 0
	167 JumpIfEqual {169}
	168 Move X4, [X8+40]
	169 Move X4, X31
	170 Compare X20, 0
	171 JumpIfEqual {253}
	172 Move X8, [X20]
	173 Move X2, [X19+136]
	174 Move X3, [X19+32]
	175 Move X0, X20
	176 Move X9, [X8+424]
	177 Move X6, [X8+432]
	178 Move X5, X31
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {71}
	184 Move W1, [X19+144]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, [X19+152]
	187 Move W9, 16
	188 Move [X19+144], W9
	189 Compare X8, 0
	190 JumpIfEqual {252}
	191 Move X9, [X8+24]
	192 Move X0, [X8+64]
	193 Move X3, [X8+40]
	194 Move W2, 16
	195 Move [X19+128], W31
	196 Move X9, 0xBBA000
	197 Move W8, [X20+88]
	198 Move X9, [X9+1880]
	199 Move X20, [X20+80]
	200 Add X1, X31, 8
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X0, [X9]
	203 Move W9, 0x13BF
	204 NotImplemented "Instruction CSEL not yet implemented."
	205 Move [X31+8], W8
	206 Call 0x1C17E04
	207 Move X8, 0xBC2000
	208 Move X8, [X8+4080]
	209 Move X2, X0
	210 Move X1, X20
	211 Move X3, X31
	212 Move X8, [X8]
	213 Move X0, X8
	214 Call String.Format, X0, X1, X2
	215 Move W9, [X19+56]
	216 Move X8, [X19+16]
	217 Move X1, X0
	218 Move [X19+112], X0
	219 Compare W9, 0
	220 JumpIfEqual {225}
	221 Move X9, [X19+48]
	222 Compare X9, 0
	223 JumpIfEqual {225}
	224 Move X4, [X9+40]
	225 Move X4, X31
	226 Compare X8, 0
	227 JumpIfEqual {253}
	228 Move X9, [X8]
	229 Move X2, [X19+136]
	230 Move X3, [X19+32]
	231 Move X0, X8
	232 Move X10, [X9+424]
	233 Move X6, [X9+432]
	234 Move X5, X31
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {71}
	240 Move W1, [X19+144]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X8, [X19+152]
	243 Move W9, 12
	244 Move [X19+144], W9
	245 Compare X8, 0
	246 JumpIfEqual {252}
	247 Move X9, [X8+24]
	248 Move X0, [X8+64]
	249 Move X3, [X8+40]
	250 Move W2, 12
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move W0, 1
	253 Call 0x1C17F20

Method: System.Boolean Connect()

Disassembly:
	0x0353AB70 CBZ X8, 0x353AB88
	0x0353AB74 LDR X9, [X8 + 0x18]
	0x0353AB78 LDR X0, [X8 + 0x40]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+456]
	003 Move X1, [X8+464]
	004 CallNoReturn X2

Method: System.Boolean ConnectToMasterServer()

Disassembly:
	0x0353AB7C LDR X3, [X8 + 0x28]
	0x0353AB80 MOVZ W2, 0x5
	0x0353AB84 BLR X9
	0x0353AB88 LDR X0, [X19 + 0x10]
	0x0353AB8C CBZ X0, 0x353ABA0
	0x0353AB90 LDR X8, [X0]
	0x0353AB94 LDP X2, X1, [X8 + 0x1B8]
	0x0353AB98 LDP X30, X19, [X31], #0x10
	0x0353AB9C BR X2
	0x0353ABA0 BL 0x1C16F20
	0x0353ABA4 SUB X31, X31, 0x30
	0x0353ABA8 STP X30, X21, [X31 + 0x10]
	0x0353ABAC STP X20, X19, [X31 + 0x20]
	0x0353ABB0 AND W9, W1, 0x1
	0x0353ABB4 ADRP X21, 0xEA5000
	0x0353ABB8 STRB W9, [X31 + 0xC]
	0x0353ABBC ADRP X20, 0xBB9000
	0x0353ABC0 LDRB W8, [X21 + 0xBF2]
	0x0353ABC4 LDR X20, [X20 + 0xB58]
	0x0353ABC8 MOV X19, X0
	0x0353ABCC TBNZ X8, 0x0, 0x353ABF0
	0x0353ABD0 ADRP X0, 0xBB9000
	0x0353ABD4 LDR X0, [X0 + 0xB58]
	0x0353ABD8 BL 0x1C16CF4
	0x0353ABDC ADRP X0, 0xBC2000
	0x0353ABE0 LDR X0, [X0 + 0xD0]
	0x0353ABE4 BL 0x1C16CF4
	0x0353ABE8 MOVZ W8, 0x1
	0x0353ABEC STRB W8, [X21 + 0xBF2]
	0x0353ABF0 LDR X0, [X20]
	0x0353ABF4 ADRP X20, 0xBC2000
	0x0353ABF8 LDR W8, [X0 + 0xE0]
	0x0353ABFC LDR X20, [X20 + 0xD0]
	0x0353AC00 CBNZ W8, 0x353AC08
	0x0353AC04 BL 0x1C16DFC
	0x0353AC08 ADD X0, X31, 0xC
	0x0353AC0C MOV X1, X31
	0x0353AC10 BL 0x33176C4
	0x0353AC14 LDR X8, [X20]
	0x0353AC18 MOV X1, X0
	0x0353AC1C MOV X2, X31
	0x0353AC20 MOV X0, X8
	0x0353AC24 BL 0x321B938
	0x0353AC28 LDR X8, [X19]
	0x0353AC2C MOV X2, X0
	0x0353AC30 MOVZ W1, 0x2
	0x0353AC34 MOV X0, X19
	0x0353AC38 LDR X9, [X8 + 0x218]
	0x0353AC3C LDR X3, [X8 + 0x220]
	0x0353AC40 BLR X9
	0x0353AC44 LDRB W8, [X31 + 0xC]
	0x0353AC48 CBZ W8, 0x353AC8C
	0x0353AC4C LDR X0, [X19 + 0x10]
	0x0353AC50 CBZ X0, 0x353ACB4
	0x0353AC54 MOV X1, X31
	0x0353AC58 BL 0x3502308
	0x0353AC5C CBZ X0, 0x353ACB4
	0x0353AC60 MOVZ W1, 0x64
	0x0353AC64 MOV X2, X31
	0x0353AC68 BL 0x34FB37C
	0x0353AC6C LDR X0, [X19 + 0x10]
	0x0353AC70 CBZ X0, 0x353ACB4
	0x0353AC74 MOV X1, X31
	0x0353AC78 BL 0x3502308
	0x0353AC7C CBZ X0, 0x353ACB4
	0x0353AC80 MOVZ W1, 0x64
	0x0353AC84 MOV X2, X31
	0x0353AC88 BL 0x34FB34C
	0x0353AC8C LDR X0, [X19 + 0x10]
	0x0353AC90 CBZ X0, 0x353ACB4
	0x0353AC94 LDR X8, [X0]
	0x0353AC98 LDRB W1, [X31 + 0xC]
	0x0353AC9C LDP X9, X2, [X8 + 0x188]
	0x0353ACA0 BLR X9
	0x0353ACA4 LDP X20, X19, [X31 + 0x20]
	0x0353ACA8 LDP X30, X21, [X31 + 0x10]
	0x0353ACAC ADD X31, X31, 0x30
	0x0353ACB0 RET
	0x0353ACB4 BL 0x1C16F20
	0x0353ACB8 SUB X31, X31, 0x60
	0x0353ACBC STR X30, [X31 + 0x20]
	0x0353ACC0 STP X24, X23, [X31 + 0x30]
	0x0353ACC4 STP X22, X21, [X31 + 0x40]
	0x0353ACC8 STP X20, X19, [X31 + 0x50]
	0x0353ACCC ADRP X23, 0xEA5000
	0x0353ACD0 LDRB W8, [X23 + 0xC0E]
	0x0353ACD4 MOV X20, X3
	0x0353ACD8 MOV W22, W2
	0x0353ACDC MOV W21, W1
	0x0353ACE0 MOV X19, X0
	0x0353ACE4 TBNZ X8, 0x0, 0x353AD74
	0x0353ACE8 ADRP X0, 0xBBA000
	0x0353ACEC LDR X0, [X0 + 0x9D8]
	0x0353ACF0 BL 0x1C16CF4
	0x0353ACF4 ADRP X0, 0xBFA000
	0x0353ACF8 LDR X0, [X0 + 0xCB0]
	0x0353ACFC BL 0x1C16CF4
	0x0353AD00 ADRP X0, 0xBFA000
	0x0353AD04 LDR X0, [X0 + 0xB50]
	0x0353AD08 BL 0x1C16CF4
	0x0353AD0C ADRP X0, 0xBB9000
	0x0353AD10 LDR X0, [X0 + 0xDF8]
	0x0353AD14 BL 0x1C16CF4
	0x0353AD18 ADRP X0, 0xBC1000
	0x0353AD1C LDR X0, [X0 + 0xD40]
	0x0353AD20 BL 0x1C16CF4
	0x0353AD24 ADRP X0, 0xBFA000
	0x0353AD28 LDR X0, [X0 + 0xCA8]
	0x0353AD2C BL 0x1C16CF4
	0x0353AD30 ADRP X0, 0xBB9000
	0x0353AD34 LDR X0, [X0 + 0x6C0]
	0x0353AD38 BL 0x1C16CF4
	0x0353AD3C ADRP X0, 0xBC2000
	0x0353AD40 LDR X0, [X0 + 0xE0]
	0x0353AD44 BL 0x1C16CF4
	0x0353AD48 ADRP X0, 0xBC2000
	0x0353AD4C LDR X0, [X0 + 0xE8]
	0x0353AD50 BL 0x1C16CF4
	0x0353AD54 ADRP X0, 0xBC2000
	0x0353AD58 LDR X0, [X0 + 0xF0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0xEA6000
	007 Move W8, [X20+3051]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xBFB000
	014 Move X0, [X0+2880]
	015 Call 0x1C17CF4
	016 Move X0, 0xBC2000
	017 Move X0, [X0+3392]
	018 Call 0x1C17CF4
	019 Move X0, 0xBC3000
	020 Move X0, [X0+8]
	021 Call 0x1C17CF4
	022 Move X0, 0xBC3000
	023 Move X0, [X0+16]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3051], W8
	027 Move X0, [X19+16]
	028 Compare X0, 0
	029 JumpIfEqual {141}
	030 Move X1, X31
	031 Call PhotonPeer.get_PeerState, X0
	032 And W31, W0, 255
	033 Move X0, [X19+16]
	034 Compare X0, 0
	035 JumpIfEqual {141}
	036 Move X20, 0xBC2000
	037 Move X21, 0xBC3000
	038 Move X20, [X20+3392]
	039 Move X21, [X21+16]
	040 Move X1, X31
	041 Call PhotonPeer.get_PeerState, X0
	042 Move X8, [X20]
	043 Move TEMP, 0
	044 Not TEMP
	045 Move X9, TEMP
	046 Move [X31+24], W0
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Move [X31+8], X8
	050 Move [X31+16], X9
	051 Call Enum.ToString, X0
	052 Move X8, [X21]
	053 Move X1, X0
	054 Move X2, X31
	055 Move X0, X8
	056 Call String.Concat, X0, X1
	057 Move X8, [X19]
	058 Move X2, X0
	059 Move W1, 2
	060 Move X9, [X8+536]
	061 Move X3, [X8+544]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move W0, W31
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Add X31, X31, 64
	070 Return X0
	071 Move W8, [X19+56]
	072 Compare W8, 0
	073 JumpIfEqual {80}
	074 Move X9, [X19+48]
	075 Compare X9, 0
	076 JumpIfEqual {89}
	077 Move X9, [X9+40]
	078 Compare X9, 0
	079 JumpIfEqual {89}
	080 Move X0, [X19+16]
	081 Move [X19+224], W31
	082 Move [X19+232], X31
	083 Compare W8, 0
	084 JumpIfEqual {111}
	085 Move X8, [X19+48]
	086 Compare X8, 0
	087 JumpIfEqual {111}
	088 Move X4, [X8+40]
	089 Move X9, 0xBFB000
	090 Move X9, [X9+2880]
	091 Move TEMP, 0
	092 Not TEMP
	093 Move X10, TEMP
	094 Add X0, X31, 8
	095 Move X1, X31
	096 Move X9, [X9]
	097 Move [X31+24], W8
	098 Move [X31+8], X9
	099 Move [X31+16], X10
	100 Call Enum.ToString, X0
	101 Move X8, 0xBC3000
	102 Move X8, [X8+8]
	103 Move X1, X0
	104 Move X2, X31
	105 Move X8, [X8]
	106 Move X0, X8
	107 Call String.Concat, X0, X1
	108 Move X8, [X19]
	109 Move X2, X0
	110 Move W1, 1
	111 Move X4, X31
	112 Compare X0, 0
	113 JumpIfEqual {141}
	114 Move X8, [X0]
	115 Move X1, [X19+112]
	116 Move X2, [X19+136]
	117 Move X3, [X19+32]
	118 Move X9, [X8+424]
	119 Move X6, [X8+432]
	120 Move X5, X31
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {64}
	126 Move W1, [X19+144]
	127 Move [X19+360], W31
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, [X19+152]
	130 Move W9, 12
	131 Move [X19+144], W9
	132 Compare X8, 0
	133 JumpIfEqual {139}
	134 Move X9, [X8+24]
	135 Move X0, [X8+64]
	136 Move X3, [X8+40]
	137 Move W2, 12
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move W0, 1
	140 Move [X19+128], W31
	141 Call 0x1C17F20

Method: System.Boolean ConnectToNameServer()

Disassembly:
	0x0353AD5C BL 0x1C16CF4
	0x0353AD60 ADRP X0, 0xBC2000
	0x0353AD64 LDR X0, [X0 + 0xF8]
	0x0353AD68 BL 0x1C16CF4
	0x0353AD6C MOVZ W8, 0x1
	0x0353AD70 STRB W8, [X23 + 0xC0E]
	0x0353AD74 LDR X8, [X19 + 0x10]
	0x0353AD78 CBZ X8, 0x353ADC0
	0x0353AD7C MOV W1, W21
	0x0353AD80 MOV W2, W22
	0x0353AD84 BL 0x353E2D0
	0x0353AD88 TBZ X0, 0x0, 0x353ADFC
	0x0353AD8C MOV X0, X19
	0x0353AD90 MOV W1, W21
	0x0353AD94 BL 0x353E3F8
	0x0353AD98 TBZ X0, 0x0, 0x353AE4C
	0x0353AD9C LDR X0, [X19 + 0x10]
	0x0353ADA0 CBZ X0, 0x353B014
	0x0353ADA4 MOV X1, X31
	0x0353ADA8 BL 0x3501B48
	0x0353ADAC AND W8, W0, 0xFF
	0x0353ADB0 CMP W8, 0x3
	0x0353ADB4 B.NE 0x353AF6C
	0x0353ADB8 MOVZ W0, 0x1
	0x0353ADBC B 0x353AFFC
	0x0353ADC0 ADRP X8, 0xBBA000
	0x0353ADC4 LDR X8, [X8 + 0x9D8]
	0x0353ADC8 ADD X1, X31, 0x2C
	0x0353ADCC STRB W21, [X31 + 0x2C]
	0x0353ADD0 LDR X0, [X8]
	0x0353ADD4 BL 0x1C16E04
	0x0353ADD8 ADRP X8, 0xBC2000
	0x0353ADDC LDR X8, [X8 + 0xF8]
	0x0353ADE0 MOV X2, X0
	0x0353ADE4 MOV X1, X20
	0x0353ADE8 MOV X3, X31
	0x0353ADEC LDR X8, [X8]
	0x0353ADF0 MOV X0, X8
	0x0353ADF4 BL 0x3227BD4
	0x0353ADF8 B 0x353AFDC
	0x0353ADFC LDR X8, [X19 + 0x10]
	0x0353AE00 CBZ X8, 0x353B014
	0x0353AE04 LDRB W8, [X8 + 0x40]
	0x0353AE08 CBZ W8, 0x353AFF8
	0x0353AE0C ADRP X8, 0xBBA000
	0x0353AE10 LDR X8, [X8 + 0x9D8]
	0x0353AE14 ADD X1, X31, 0x28
	0x0353AE18 STRB W21, [X31 + 0x28]
	0x0353AE1C LDR X0, [X8]
	0x0353AE20 BL 0x1C16E04
	0x0353AE24 ADRP X8, 0xBFA000
	0x0353AE28 LDR X8, [X8 + 0xCA8]
	0x0353AE2C MOV X21, X0
	0x0353AE30 ADD X1, X31, 0x1C
	0x0353AE34 STR W22, [X31 + 0x1C]
	0x0353AE38 LDR X0, [X8]
	0x0353AE3C BL 0x1C16E04
	0x0353AE40 ADRP X8, 0xBC2000
	0x0353AE44 LDR X8, [X8 + 0xE8]
	0x0353AE48 B 0x353AFC0
	0x0353AE4C AND W8, W21, 0xFF
	0x0353AE50 CMP W8, 0xFD
	0x0353AE54 B.NE 0x353AE7C
	0x0353AE58 LDR W8, [X19 + 0x90]
	0x0353AE5C SUB W8, W8, 0xA
	0x0353AE60 CMP W8, 0x3
	0x0353AE64 B.HI 0x353AE7C
	0x0353AE68 MOVZ W9, 0x303
	0x0353AE6C UBFM W8, W8, 0x1D, 0x1C
	0x0353AE70 MOVK W9, 0x3010000
	0x0353AE74 LSRV W22, W9, W8
	0x0353AE78 B 0x353AE80
	0x0353AE7C MOVZ W22, 0x1
	0x0353AE80 LDR X8, [X19 + 0x10]
	0x0353AE84 CBZ X8, 0x353B014
	0x0353AE88 LDRB W8, [X8 + 0x40]
	0x0353AE8C CMP W8, W22, UXTB
	0x0353AE90 B.CC 0x353AFF8
	0x0353AE94 ADRP X8, 0xBBA000
	0x0353AE98 LDR X8, [X8 + 0x9D8]
	0x0353AE9C ADD X1, X31, 0x18
	0x0353AEA0 STRB W21, [X31 + 0x18]
	0x0353AEA4 LDR X0, [X8]
	0x0353AEA8 BL 0x1C16E04
	0x0353AEAC ADRP X8, 0xBB9000
	0x0353AEB0 LDR X8, [X8 + 0x6C0]
	0x0353AEB4 ADRP X9, 0xBFA000
	0x0353AEB8 MOV X21, X0
	0x0353AEBC LDR X8, [X8]
	0x0353AEC0 LDR X9, [X9 + 0xCB0]
	0x0353AEC4 LDR W10, [X8 + 0xE0]
	0x0353AEC8 LDR X23, [X9]
	0x0353AECC CBNZ W10, 0x353AED8
	0x0353AED0 MOV X0, X8
	0x0353AED4 BL 0x1C16DFC
	0x0353AED8 MOV X0, X23
	0x0353AEDC MOV X1, X31
	0x0353AEE0 BL 0x338C698
	0x0353AEE4 ADRP X9, 0xBFA000
	0x0353AEE8 LDR W8, [X19 + 0x90]
	0x0353AEEC LDR X9, [X9 + 0xB50]
	0x0353AEF0 MOV X23, X0
	0x0353AEF4 ADD X1, X31, 0x14
	0x0353AEF8 STR W8, [X31 + 0x14]
	0x0353AEFC LDR X0, [X9]
	0x0353AF00 BL 0x1C16E04
	0x0353AF04 ADRP X8, 0xBB9000
	0x0353AF08 LDR X8, [X8 + 0xDF8]
	0x0353AF0C MOV X24, X0
	0x0353AF10 LDR X8, [X8]
	0x0353AF14 LDR W9, [X8 + 0xE0]
	0x0353AF18 CBNZ W9, 0x353AF24
	0x0353AF1C MOV X0, X8
	0x0353AF20 BL 0x1C16DFC
	0x0353AF24 MOV X0, X23
	0x0353AF28 MOV X1, X24
	0x0353AF2C MOV X2, X31
	0x0353AF30 BL 0x33AED00
	0x0353AF34 ADRP X8, 0xBC2000
	0x0353AF38 LDR X8, [X8 + 0xF0]
	0x0353AF3C MOV X3, X0
	0x0353AF40 MOV X1, X20
	0x0353AF44 MOV X2, X21
	0x0353AF48 LDR X8, [X8]
	0x0353AF4C MOV X4, X31
	0x0353AF50 MOV X0, X8
	0x0353AF54 BL 0x3227C18
	0x0353AF58 LDR X8, [X19]
	0x0353AF5C MOV X2, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0xEA6000
	007 Move W8, [X20+3052]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0xBC2000
	014 Move X0, [X0+3384]
	015 Call 0x1C17CF4
	016 Move X0, 0xBC3000
	017 Move X0, [X0+24]
	018 Call 0x1C17CF4
	019 Move X0, 0xBC2000
	020 Move X0, [X0+3392]
	021 Call 0x1C17CF4
	022 Move X0, 0xBC3000
	023 Move X0, [X0+32]
	024 Call 0x1C17CF4
	025 Move X0, 0xBC3000
	026 Move X0, [X0+40]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3052], W8
	030 Move X0, [X19+16]
	031 Compare X0, 0
	032 JumpIfEqual {145}
	033 Move X1, X31
	034 Call PhotonPeer.get_PeerState, X0
	035 And W31, W0, 255
	036 Move X0, [X19+16]
	037 Compare X0, 0
	038 JumpIfEqual {145}
	039 Move X20, 0xBC2000
	040 Move X21, 0xBC3000
	041 Move X20, [X20+3392]
	042 Move X21, [X21+40]
	043 Move X1, X31
	044 Call PhotonPeer.get_PeerState, X0
	045 Move X8, [X20]
	046 Move TEMP, 0
	047 Not TEMP
	048 Move X9, TEMP
	049 Move [X31+24], W0
	050 Add X0, X31, 8
	051 Move X1, X31
	052 Move [X31+8], X8
	053 Move [X31+16], X9
	054 Call Enum.ToString, X0
	055 Move X8, [X21]
	056 Move X1, X0
	057 Move X2, X31
	058 Move X0, X8
	059 Call String.Concat, X0, X1
	060 Move X8, [X19]
	061 Move X2, X0
	062 Move W1, 2
	063 Move X0, X19
	064 Move X9, [X8+536]
	065 Move X3, [X8+544]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move W8, [X19+56]
	068 Move W9, 1
	069 Move [X19+80], W9
	070 Move [X19+320], X31
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W8, [X19+64]
	073 Compare W8, 0
	074 JumpIfNotEqual {87}
	075 Move X8, [X19+16]
	076 Compare X8, 0
	077 JumpIfEqual {145}
	078 Move W1, [X8+132]
	079 Move X8, 0xBC2000
	080 Move X8, [X8+3384]
	081 Add X0, X31, 8
	082 NotImplemented "Instruction STRH not yet implemented."
	083 Move X2, [X8]
	084 Call Nullable`1<ByteEnum>..ctor, X0, X1
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 NotImplemented "Instruction STRH not yet implemented."
	087 Move X20, [X19+16]
	088 Compare X20, 0
	089 JumpIfEqual {145}
	090 Move W8, 5
	091 Move [X20+132], W8
	092 Move X20, [X19+16]
	093 Move X0, X19
	094 Move [X19+224], W31
	095 Move [X19+232], X31
	096 Call LoadBalancingClient.GetNameServerAddress, X0
	097 Move W8, [X19+56]
	098 Move X1, X0
	099 Compare W8, 0
	100 JumpIfEqual {105}
	101 Move X8, [X19+48]
	102 Compare X8, 0
	103 JumpIfEqual {105}
	104 Move X4, [X8+40]
	105 Move X4, X31
	106 Compare X20, 0
	107 JumpIfEqual {145}
	108 Move X9, 0xBC3000
	109 Move X8, [X20]
	110 Move X2, [X19+136]
	111 Move X9, [X9+32]
	112 Move X0, X20
	113 Move X5, X31
	114 Move X3, [X9]
	115 Move X9, [X8+424]
	116 Move X6, [X8+432]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {138}
	122 Move W1, [X19+144]
	123 Move [X19+360], W31
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, [X19+152]
	126 Move W9, 16
	127 Move [X19+144], W9
	128 Compare X8, 0
	129 JumpIfEqual {135}
	130 Move X9, [X8+24]
	131 Move X0, [X8+64]
	132 Move X3, [X8+40]
	133 Move W2, 16
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move W8, 2
	136 Move W0, 1
	137 Move [X19+128], W8
	138 Move W0, W31
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X30, [X31+32]
	142 Move X21, [X31+40]
	143 Add X31, X31, 64
	144 Return X0
	145 Call 0x1C17F20

Method: System.Boolean ConnectToRegionMaster(System.String region)

Disassembly:
	0x0353AF60 MOV X0, X19
	0x0353AF64 MOV W1, W22
	0x0353AF68 B 0x353AFEC
	0x0353AF6C ADRP X8, 0xBBA000
	0x0353AF70 LDR X8, [X8 + 0x9D8]
	0x0353AF74 ADD X1, X31, 0x10
	0x0353AF78 STRB W21, [X31 + 0x10]
	0x0353AF7C LDR X0, [X8]
	0x0353AF80 BL 0x1C16E04
	0x0353AF84 LDR X8, [X19 + 0x10]
	0x0353AF88 CBZ X8, 0x353B014
	0x0353AF8C MOV X21, X0
	0x0353AF90 MOV X0, X8
	0x0353AF94 MOV X1, X31
	0x0353AF98 BL 0x3501B48
	0x0353AF9C ADRP X8, 0xBC1000
	0x0353AFA0 LDR X8, [X8 + 0xD40]
	0x0353AFA4 STRB W0, [X31 + 0xC]
	0x0353AFA8 ADD X1, X31, 0xC
	0x0353AFAC LDR X8, [X8]
	0x0353AFB0 MOV X0, X8
	0x0353AFB4 BL 0x1C16E04
	0x0353AFB8 ADRP X8, 0xBC2000
	0x0353AFBC LDR X8, [X8 + 0xE0]
	0x0353AFC0 LDR X8, [X8]
	0x0353AFC4 MOV X3, X0
	0x0353AFC8 MOV X1, X20
	0x0353AFCC MOV X2, X21
	0x0353AFD0 MOV X0, X8
	0x0353AFD4 MOV X4, X31
	0x0353AFD8 BL 0x3227C18
	0x0353AFDC LDR X8, [X19]
	0x0353AFE0 MOV X2, X0
	0x0353AFE4 MOVZ W1, 0x1
	0x0353AFE8 MOV X0, X19
	0x0353AFEC LDR X9, [X8 + 0x218]
	0x0353AFF0 LDR X3, [X8 + 0x220]
	0x0353AFF4 BLR X9
	0x0353AFF8 MOV W0, W31
	0x0353AFFC LDP X20, X19, [X31 + 0x50]
	0x0353B000 LDP X22, X21, [X31 + 0x40]
	0x0353B004 LDP X24, X23, [X31 + 0x30]
	0x0353B008 LDR X30, [X31 + 0x20]
	0x0353B00C ADD X31, X31, 0x60
	0x0353B010 RET
	0x0353B014 BL 0x1C16F20
	0x0353B018 LDR X0, [X0 + 0x10]
	0x0353B01C CBZ X0, 0x353B02C
	0x0353B020 LDR X8, [X0]
	0x0353B024 LDP X2, X1, [X8 + 0x1E8]
	0x0353B028 BR X2
	0x0353B02C RET
	0x0353B030 STP X30, X21, [X31 - 0x20]!
	0x0353B034 STP X20, X19, [X31 + 0x10]
	0x0353B038 ADRP X21, 0xEA4000
	0x0353B03C ADRP X20, 0xBC1000
	0x0353B040 LDRB W8, [X21 + 0xBF4]
	0x0353B044 LDR X20, [X20 + 0x100]
	0x0353B048 MOV X19, X0
	0x0353B04C TBNZ X8, 0x0, 0x353B064
	0x0353B050 ADRP X0, 0xBC1000
	0x0353B054 LDR X0, [X0 + 0x100]
	0x0353B058 BL 0x1C16CF4
	0x0353B05C MOVZ W8, 0x1
	0x0353B060 STRB W8, [X21 + 0xBF4]
	0x0353B064 LDR W2, [X19 + 0x80]
	0x0353B068 LDR X3, [X20]
	0x0353B06C MOVZ W1, 0xDC
	0x0353B070 MOV X0, X19
	0x0353B074 BL 0x353ACB8
	0x0353B078 TBZ X0, 0x0, 0x353B0A0
	0x0353B07C LDR X0, [X19 + 0x10]
	0x0353B080 CBZ X0, 0x353B0B0
	0x0353B084 LDR X8, [X0]
	0x0353B088 LDR X1, [X19 + 0x20]
	0x0353B08C LDP X20, X19, [X31 + 0x10]
	0x0353B090 LDR X3, [X8 + 0x248]
	0x0353B094 LDR X2, [X8 + 0x250]
	0x0353B098 LDP X30, X21, [X31], #0x20
	0x0353B09C BR X3
	0x0353B0A0 LDP X20, X19, [X31 + 0x10]
	0x0353B0A4 MOV W0, W31
	0x0353B0A8 LDP X30, X21, [X31], #0x20
	0x0353B0AC RET
	0x0353B0B0 BL 0x1C16F20
	0x0353B0B4 SUB X31, X31, 0x70
	0x0353B0B8 STP X29, X30, [X31 + 0x10]
	0x0353B0BC STP X28, X27, [X31 + 0x20]
	0x0353B0C0 STP X26, X25, [X31 + 0x30]
	0x0353B0C4 STP X24, X23, [X31 + 0x40]
	0x0353B0C8 STP X22, X21, [X31 + 0x50]
	0x0353B0CC STP X20, X19, [X31 + 0x60]
	0x0353B0D0 ADRP X23, 0xEA4000
	0x0353B0D4 ADRP X22, 0xBC1000
	0x0353B0D8 LDRB W8, [X23 + 0xBF5]
	0x0353B0DC LDR X22, [X22 + 0x108]
	0x0353B0E0 MOV X20, X2
	0x0353B0E4 MOV X21, X1
	0x0353B0E8 MOV X19, X0
	0x0353B0EC TBNZ X8, 0x0, 0x353B1AC
	0x0353B0F0 ADRP X0, 0xBB8000
	0x0353B0F4 LDR X0, [X0 + 0x758]
	0x0353B0F8 BL 0x1C16CF4
	0x0353B0FC ADRP X0, 0xBB9000
	0x0353B100 LDR X0, [X0 + 0x1B8]
	0x0353B104 BL 0x1C16CF4
	0x0353B108 ADRP X0, 0xBC1000
	0x0353B10C LDR X0, [X0 + 0x110]
	0x0353B110 BL 0x1C16CF4
	0x0353B114 ADRP X0, 0xBBA000
	0x0353B118 LDR X0, [X0 + 0xE78]
	0x0353B11C BL 0x1C16CF4
	0x0353B120 ADRP X0, 0xBC1000
	0x0353B124 LDR X0, [X0 + 0x118]
	0x0353B128 BL 0x1C16CF4
	0x0353B12C ADRP X0, 0xBB9000
	0x0353B130 LDR X0, [X0 + 0x1C8]
	0x0353B134 BL 0x1C16CF4
	0x0353B138 ADRP X0, 0xBB9000
	0x0353B13C LDR X0, [X0 + 0x1D0]
	0x0353B140 BL 0x1C16CF4
	0x0353B144 ADRP X0, 0xBC1000
	0x0353B148 LDR X0, [X0 + 0x108]
	0x0353B14C BL 0x1C16CF4
	0x0353B150 ADRP X0, 0xBC1000
	0x0353B154 LDR X0, [X0 + 0x120]
	0x0353B158 BL 0x1C16CF4
	0x0353B15C ADRP X0, 0xBC1000
	0x0353B160 LDR X0, [X0 + 0x128]
	0x0353B164 BL 0x1C16CF4
	0x0353B168 ADRP X0, 0xBC1000
	0x0353B16C LDR X0, [X0 + 0x130]
	0x0353B170 BL 0x1C16CF4
	0x0353B174 ADRP X0, 0xBC1000
	0x0353B178 LDR X0, [X0 + 0x138]
	0x0353B17C BL 0x1C16CF4
	0x0353B180 ADRP X0, 0xBC1000
	0x0353B184 LDR X0, [X0 + 0x140]
	0x0353B188 BL 0x1C16CF4
	0x0353B18C ADRP X0, 0xBC1000
	0x0353B190 LDR X0, [X0 + 0x148]
	0x0353B194 BL 0x1C16CF4
	0x0353B198 ADRP X0, 0xBC1000
	0x0353B19C LDR X0, [X0 + 0x150]
	0x0353B1A0 BL 0x1C16CF4
	0x0353B1A4 MOVZ W8, 0x1
	0x0353B1A8 STRB W8, [X23 + 0xBF5]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEA6000
	007 Move W8, [X21+3053]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xBC2000
	015 Move X0, [X0+3384]
	016 Call 0x1C17CF4
	017 Move X0, 0xBC3000
	018 Move X0, [X0+24]
	019 Call 0x1C17CF4
	020 Move X0, 0xBC3000
	021 Move X0, [X0+48]
	022 Call 0x1C17CF4
	023 Move X0, 0xBC3000
	024 Move X0, [X0+32]
	025 Call 0x1C17CF4
	026 Move X0, 0xBC3000
	027 Move X0, [X0+56]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3053], W8
	031 Move X0, X20
	032 Move X1, X31
	033 Call String.IsNullOrEmpty, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {48}
	038 Move X9, 0xBC3000
	039 Move X8, [X19]
	040 Move X9, [X9+48]
	041 Move W1, 1
	042 Move X0, X19
	043 Move X3, [X8+544]
	044 Move X2, [X9]
	045 Move X9, [X8+536]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move W20, W31
	048 Move W8, [X19+144]
	049 Move W9, 1
	050 Move [X19+80], W9
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X19+16]
	054 Compare X8, 0
	055 JumpIfEqual {163}
	056 Move W8, [X8+64]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, 0xBC2000
	059 Move X8, [X19]
	060 Move X9, [X9+56]
	061 Move W1, 3
	062 Move X0, X19
	063 Move X3, [X8+544]
	064 Move X2, [X9]
	065 Move X9, [X8+536]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, X19
	068 Move [X19+320], X20
	069 Call LoadBalancingClient.CallAuthenticate, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {47}
	074 Move W1, [X19+144]
	075 Move W20, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X19+152]
	078 Move [X19+144], W20
	079 Compare X8, 0
	080 JumpIfEqual {156}
	081 Move X9, [X8+24]
	082 Move X0, [X8+64]
	083 Move X3, [X8+40]
	084 Move W2, 1
	085 Move W20, 1
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X0, [X19+16]
	088 Compare X0, 0
	089 JumpIfEqual {163}
	090 Move X8, [X0]
	091 Move X9, [X8+440]
	092 Move X1, [X8+448]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W8, [X19+56]
	095 Move [X19+320], X20
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W8, [X19+64]
	098 Compare W8, 0
	099 JumpIfNotEqual {112}
	100 Move X8, [X19+16]
	101 Compare X8, 0
	102 JumpIfEqual {163}
	103 Move W1, [X8+132]
	104 Move X8, 0xBC1000
	105 Move X8, [X8+3384]
	106 Add X0, X31, 12
	107 NotImplemented "Instruction STRH not yet implemented."
	108 Move X2, [X8]
	109 Call Nullable`1<ByteEnum>..ctor, X0, X1
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 NotImplemented "Instruction STRH not yet implemented."
	112 Move X20, [X19+16]
	113 Compare X20, 0
	114 JumpIfEqual {163}
	115 Move W8, 5
	116 Move [X20+132], W8
	117 Move X20, [X19+16]
	118 Move X0, X19
	119 Move [X19+360], W31
	120 Move [X19+224], W31
	121 Move [X19+232], X31
	122 Call LoadBalancingClient.GetNameServerAddress, X0
	123 Compare X20, 0
	124 JumpIfEqual {163}
	125 Move X9, 0xBC2000
	126 Move X8, [X20]
	127 Move X2, [X19+136]
	128 Move X9, [X9+32]
	129 Move X1, X0
	130 Move X0, X20
	131 Move X4, X31
	132 Move X3, [X9]
	133 Move X9, [X8+424]
	134 Move X6, [X8+432]
	135 Move X5, X31
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {47}
	141 Move W1, [X19+144]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X8, [X19+152]
	144 Move W9, 16
	145 Move [X19+144], W9
	146 Compare X8, 0
	147 JumpIfEqual {153}
	148 Move X9, [X8+24]
	149 Move X0, [X8+64]
	150 Move X3, [X8+40]
	151 Move W2, 16
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move W8, 2
	154 Move [X19+128], W8
	155 Move W20, 1
	156 Move W0, W20
	157 Move X20, [X31+32]
	158 Move X19, [X31+40]
	159 Move X30, [X31+16]
	160 Move X21, [X31+24]
	161 Add X31, X31, 48
	162 Return X0
	163 Call 0x1C17F20

Method: System.Void CheckConnectSetupWebGl()

Disassembly:
	0x0353B4A0 STR X8, [X19 + 0x138]

ISIL:
	001 Return 

Method: System.Boolean Connect(System.String serverAddress, System.String proxyServerAddress, Photon.Realtime.ServerConnection serverType)

Disassembly:
	0x0353B4A4 B 0x353B42C
	0x0353B4A8 ADRP X9, 0xBC1000
	0x0353B4AC LDR X8, [X19]
	0x0353B4B0 LDR X9, [X9 + 0x130]
	0x0353B4B4 B 0x353B3CC
	0x0353B4B8 BL 0x1C16F28
	0x0353B4BC BL 0x1C16F20
	0x0353B4C0 STR X30, [X31 - 0x30]!
	0x0353B4C4 STP X22, X21, [X31 + 0x10]
	0x0353B4C8 STP X20, X19, [X31 + 0x20]
	0x0353B4CC ADRP X22, 0xEA4000
	0x0353B4D0 ADRP X21, 0xBC1000
	0x0353B4D4 LDRB W8, [X22 + 0xBF6]
	0x0353B4D8 LDR X21, [X21 + 0x158]
	0x0353B4DC MOV X20, X1
	0x0353B4E0 MOV X19, X0
	0x0353B4E4 TBNZ X8, 0x0, 0x353B508
	0x0353B4E8 ADRP X0, 0xBF9000
	0x0353B4EC LDR X0, [X0 + 0xCB8]
	0x0353B4F0 BL 0x1C16CF4
	0x0353B4F4 ADRP X0, 0xBC1000
	0x0353B4F8 LDR X0, [X0 + 0x158]
	0x0353B4FC BL 0x1C16CF4
	0x0353B500 MOVZ W8, 0x1
	0x0353B504 STRB W8, [X22 + 0xBF6]
	0x0353B508 LDR W2, [X19 + 0x80]
	0x0353B50C LDR X3, [X21]
	0x0353B510 MOVZ W1, 0xE5
	0x0353B514 MOV X0, X19
	0x0353B518 BL 0x353ACB8
	0x0353B51C TBZ X0, 0x0, 0x353B5A4
	0x0353B520 CBNZ X20, 0x353B548
	0x0353B524 ADRP X20, 0xBF9000
	0x0353B528 LDR X20, [X20 + 0xCB8]
	0x0353B52C LDR X0, [X20]
	0x0353B530 LDR W8, [X0 + 0xE0]
	0x0353B534 CBNZ W8, 0x353B540
	0x0353B538 BL 0x1C16DFC
	0x0353B53C LDR X0, [X20]
	0x0353B540 LDR X8, [X0 + 0xB8]
	0x0353B544 LDR X20, [X8]
	0x0353B548 LDR X0, [X19 + 0x10]
	0x0353B54C CBZ X0, 0x353B5B8
	0x0353B550 LDR X8, [X0]
	0x0353B554 MOV X1, X20
	0x0353B558 LDR X9, [X8 + 0x258]
	0x0353B55C LDR X2, [X8 + 0x260]
	0x0353B560 BLR X9
	0x0353B564 TBZ X0, 0x0, 0x353B5A4
	0x0353B568 LDR W1, [X19 + 0x90]
	0x0353B56C STR X20, [X19 + 0xF0]
	0x0353B570 CMP W1, 0x3
	0x0353B574 B.EQ 0x353B59C
	0x0353B578 LDR X8, [X19 + 0x98]
	0x0353B57C MOVZ W9, 0x3
	0x0353B580 STR W9, [X19 + 0x90]
	0x0353B584 CBZ X8, 0x353B59C
	0x0353B588 LDR X9, [X8 + 0x18]
	0x0353B58C LDR X0, [X8 + 0x40]
	0x0353B590 LDR X3, [X8 + 0x28]
	0x0353B594 MOVZ W2, 0x3
	0x0353B598 BLR X9
	0x0353B59C MOVZ W0, 0x1
	0x0353B5A0 B 0x353B5A8
	0x0353B5A4 MOV W0, W31
	0x0353B5A8 LDP X20, X19, [X31 + 0x20]
	0x0353B5AC LDP X22, X21, [X31 + 0x10]
	0x0353B5B0 LDR X30, [X31], #0x30
	0x0353B5B4 RET
	0x0353B5B8 BL 0x1C16F20
	0x0353B5BC STP X30, X21, [X31 - 0x20]!
	0x0353B5C0 STP X20, X19, [X31 + 0x10]
	0x0353B5C4 ADRP X21, 0xEA4000
	0x0353B5C8 ADRP X20, 0xBC1000
	0x0353B5CC LDRB W8, [X21 + 0xBF7]
	0x0353B5D0 LDR X20, [X20 + 0x168]
	0x0353B5D4 MOV X19, X0
	0x0353B5D8 TBNZ X8, 0x0, 0x353B5F0
	0x0353B5DC ADRP X0, 0xBC1000
	0x0353B5E0 LDR X0, [X0 + 0x168]
	0x0353B5E4 BL 0x1C16CF4
	0x0353B5E8 MOVZ W8, 0x1
	0x0353B5EC STRB W8, [X21 + 0xBF7]
	0x0353B5F0 LDR W2, [X19 + 0x80]
	0x0353B5F4 LDR X3, [X20]
	0x0353B5F8 MOVZ W1, 0xE4
	0x0353B5FC MOV X0, X19
	0x0353B600 BL 0x353ACB8
	0x0353B604 TBZ X0, 0x0, 0x353B628
	0x0353B608 LDR X0, [X19 + 0x10]
	0x0353B60C CBZ X0, 0x353B638
	0x0353B610 LDR X8, [X0]
	0x0353B614 LDP X20, X19, [X31 + 0x10]
	0x0353B618 LDR X2, [X8 + 0x268]
	0x0353B61C LDR X1, [X8 + 0x270]
	0x0353B620 LDP X30, X21, [X31], #0x20
	0x0353B624 BR X2
	0x0353B628 LDP X20, X19, [X31 + 0x10]
	0x0353B62C MOV W0, W31
	0x0353B630 LDP X30, X21, [X31], #0x20
	0x0353B634 RET
	0x0353B638 BL 0x1C16F20
	0x0353B63C STR X30, [X31 - 0x30]!
	0x0353B640 STP X22, X21, [X31 + 0x10]
	0x0353B644 STP X20, X19, [X31 + 0x20]
	0x0353B648 ADRP X22, 0xEA4000
	0x0353B64C ADRP X21, 0xBC1000
	0x0353B650 LDRB W8, [X22 + 0xBF8]
	0x0353B654 LDR X21, [X21 + 0x170]
	0x0353B658 MOV X20, X1
	0x0353B65C MOV X19, X0
	0x0353B660 TBNZ X8, 0x0, 0x353B690
	0x0353B664 ADRP X0, 0xBF9000
	0x0353B668 LDR X0, [X0 + 0xCC0]
	0x0353B66C BL 0x1C16CF4
	0x0353B670 ADRP X0, 0xBF9000
	0x0353B674 LDR X0, [X0 + 0xCC8]
	0x0353B678 BL 0x1C16CF4
	0x0353B67C ADRP X0, 0xBC1000
	0x0353B680 LDR X0, [X0 + 0x170]
	0x0353B684 BL 0x1C16CF4
	0x0353B688 MOVZ W8, 0x1
	0x0353B68C STRB W8, [X22 + 0xBF8]
	0x0353B690 LDR W2, [X19 + 0x80]
	0x0353B694 LDR X3, [X21]
	0x0353B698 MOVZ W1, 0xE1
	0x0353B69C MOV X0, X19
	0x0353B6A0 BL 0x353ACB8
	0x0353B6A4 TBZ X0, 0x0, 0x353B764
	0x0353B6A8 ADRP X21, 0xBF9000
	0x0353B6AC LDR X21, [X21 + 0xCC0]
	0x0353B6B0 CBNZ X20, 0x353B6D0
	0x0353B6B4 ADRP X8, 0xBF9000
	0x0353B6B8 LDR X8, [X8 + 0xCC8]
	0x0353B6BC LDR X0, [X8]
	0x0353B6C0 BL 0x1C16F10
	0x0353B6C4 MOV X1, X31
	0x0353B6C8 MOV X20, X0
	0x0353B6CC BL 0x33BDD8C
	0x0353B6D0 LDR X0, [X21]
	0x0353B6D4 BL 0x1C16F10
	0x0353B6D8 MOVZ W8, 0x1
	0x0353B6DC MOV X1, X31
	0x0353B6E0 MOV X21, X0
	0x0353B6E4 STRB W8, [X0 + 0x30]
	0x0353B6E8 BL 0x33BDD8C
	0x0353B6EC STR X21, [X19 + 0x128]
	0x0353B6F0 CBZ X20, 0x353B778
	0x0353B6F4 LDR X8, [X20 + 0x20]
	0x0353B6F8 STR X8, [X21 + 0x20]
	0x0353B6FC LDR X8, [X20 + 0x30]
	0x0353B700 STR X8, [X21 + 0x38]
	0x0353B704 LDR X0, [X19 + 0x10]
	0x0353B708 CBZ X0, 0x353B778
	0x0353B70C LDR X8, [X0]
	0x0353B710 MOV X1, X20
	0x0353B714 LDR X9, [X8 + 0x298]
	0x0353B718 LDR X2, [X8 + 0x2A0]
	0x0353B71C BLR X9
	0x0353B720 TBZ X0, 0x0, 0x353B764
	0x0353B724 LDR W1, [X19 + 0x90]
	0x0353B728 MOVZ W8, 0x2
	0x0353B72C STR W8, [X19 + 0x124]
	0x0353B730 CMP W1, 0x8
	0x0353B734 B.EQ 0x353B75C
	0x0353B738 LDR X8, [X19 + 0x98]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xEA5000
	009 Move W8, [X23+3054]
	010 Move W20, W3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0xBFA000
	019 Move X0, [X0+2880]
	020 Call 0x1C17CF4
	021 Move X0, 0xBFA000
	022 Move X0, [X0+2896]
	023 Call 0x1C17CF4
	024 Move X0, 0xBFA000
	025 Move X0, [X0+3240]
	026 Call 0x1C17CF4
	027 Move X0, 0xBC2000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move X0, 0xBC2000
	031 Move X0, [X0+128]
	032 Call 0x1C17CF4
	033 Move X0, 0xBC2000
	034 Move X0, [X0+136]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+3054], W8
	038 Move W8, [X19+144]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, 0xBFA000
	041 Move X8, [X8+2896]
	042 Move TEMP, 0
	043 Not TEMP
	044 Move X9, TEMP
	045 Move W10, 13
	046 Add X0, X31, 24
	047 Move X8, [X8]
	048 Move X1, X31
	049 Move [X31+40], W10
	050 Move [X31+24], X8
	051 Move [X31+32], X9
	052 Call Enum.ToString, X0
	053 Move X8, 0xBC2000
	054 Move X8, [X8+128]
	055 Move X1, X0
	056 Move X2, X31
	057 Move X8, [X8]
	058 Move X0, X8
	059 Call String.Concat, X0, X1
	060 Move W8, [X19+56]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare W8, 0
	063 JumpIfEqual {70}
	064 Move X9, [X19+48]
	065 Compare X9, 0
	066 JumpIfEqual {110}
	067 Move X9, [X9+40]
	068 Compare X9, 0
	069 JumpIfEqual {110}
	070 Move X0, [X19+16]
	071 Move [X19+224], W31
	072 Move [X19+232], X31
	073 Compare W8, 0
	074 JumpIfEqual {79}
	075 Move X8, [X19+48]
	076 Compare X8, 0
	077 JumpIfEqual {79}
	078 Move X4, [X8+40]
	079 Move X4, X31
	080 Compare X0, 0
	081 JumpIfEqual {184}
	082 Move X8, [X0]
	083 Move X3, [X19+32]
	084 Move X1, X22
	085 Move X2, X21
	086 Move X9, [X8+424]
	087 Move X6, [X8+432]
	088 Move X5, X31
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {151}
	094 Move [X19+128], W20
	095 Compare W20, 0
	096 JumpIfEqual {171}
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W1, [X19+144]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X19+152]
	102 Move W9, 16
	103 Move [X19+144], W9
	104 Compare X8, 0
	105 JumpIfEqual {183}
	106 Move X9, [X8+24]
	107 Move X0, [X8+64]
	108 Move X3, [X8+40]
	109 Move W2, 16
	110 Move X8, 0xBFA000
	111 Move X8, [X8+3240]
	112 Move TEMP, 0
	113 Not TEMP
	114 Move X21, TEMP
	115 Add X0, X31, 24
	116 Move X1, X31
	117 Move X8, [X8]
	118 Move [X31+40], W20
	119 Move [X31+24], X8
	120 Move [X31+32], X21
	121 Call Enum.ToString, X0
	122 Move X8, 0xBFA000
	123 Move X8, [X8+2880]
	124 Move X20, X0
	125 Add X0, X31, 0
	126 Move X1, X31
	127 Move X8, [X8]
	128 Move [X31], X8
	129 Move [X31+8], X21
	130 Move W8, [X19+56]
	131 Move [X31+16], W8
	132 Call Enum.ToString, X0
	133 Move X8, 0xBC2000
	134 Move X8, [X8+136]
	135 Move X9, 0xBC2000
	136 Move X9, [X9+120]
	137 Move X3, X0
	138 Move X8, [X8]
	139 Move X1, X20
	140 Move X2, [X9]
	141 Move X4, X31
	142 Move X0, X8
	143 Call String.Concat, X0, X1, X2, X3
	144 Move X8, [X19]
	145 Move X2, X0
	146 Move W1, 1
	147 Move X0, X19
	148 Move X9, [X8+536]
	149 Move X3, [X8+544]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move W0, W31
	152 Move X20, [X31+80]
	153 Move X19, [X31+88]
	154 Move X22, [X31+64]
	155 Move X21, [X31+72]
	156 Move X30, [X31+48]
	157 Move X23, [X31+56]
	158 Add X31, X31, 96
	159 Return X0
	160 Move W1, [X19+144]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X8, [X19+152]
	163 Move W9, 6
	164 Move [X19+144], W9
	165 Compare X8, 0
	166 JumpIfEqual {183}
	167 Move X9, [X8+24]
	168 Move X0, [X8+64]
	169 Move X3, [X8+40]
	170 Move W2, 6
	171 Move W1, [X19+144]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, [X19+152]
	174 Move W9, 12
	175 Move [X19+144], W9
	176 Compare X8, 0
	177 JumpIfEqual {183}
	178 Move X9, [X8+24]
	179 Move X0, [X8+64]
	180 Move X3, [X8+40]
	181 Move W2, 12
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move W0, 1
	184 Call 0x1C17F20

Method: System.Boolean ReconnectToMaster()

Disassembly:
	0x0353B73C MOVZ W9, 0x8
	0x0353B740 STR W9, [X19 + 0x90]
	0x0353B744 CBZ X8, 0x353B75C
	0x0353B748 LDR X9, [X8 + 0x18]
	0x0353B74C LDR X0, [X8 + 0x40]
	0x0353B750 LDR X3, [X8 + 0x28]
	0x0353B754 MOVZ W2, 0x8
	0x0353B758 BLR X9
	0x0353B75C MOVZ W0, 0x1
	0x0353B760 B 0x353B768
	0x0353B764 MOV W0, W31
	0x0353B768 LDP X20, X19, [X31 + 0x20]
	0x0353B76C LDP X22, X21, [X31 + 0x10]
	0x0353B770 LDR X30, [X31], #0x30
	0x0353B774 RET
	0x0353B778 BL 0x1C16F20
	0x0353B77C MOV X1, X31
	0x0353B780 B 0x33BDD8C
	0x0353B784 MOVZ W8, 0x1
	0x0353B788 MOV X1, X31
	0x0353B78C STRB W8, [X0 + 0x30]
	0x0353B790 B 0x33BDD8C
	0x0353B794 STP X30, X23, [X31 - 0x30]!
	0x0353B798 STP X22, X21, [X31 + 0x10]
	0x0353B79C STP X20, X19, [X31 + 0x20]
	0x0353B7A0 ADRP X23, 0xEA4000
	0x0353B7A4 ADRP X22, 0xBC1000
	0x0353B7A8 LDRB W8, [X23 + 0xBF9]
	0x0353B7AC LDR X22, [X22 + 0x178]
	0x0353B7B0 MOV X20, X2
	0x0353B7B4 MOV X21, X1
	0x0353B7B8 MOV X19, X0
	0x0353B7BC TBNZ X8, 0x0, 0x353B7EC
	0x0353B7C0 ADRP X0, 0xBF9000
	0x0353B7C4 LDR X0, [X0 + 0xCC0]
	0x0353B7C8 BL 0x1C16CF4
	0x0353B7CC ADRP X0, 0xBF9000
	0x0353B7D0 LDR X0, [X0 + 0xCC8]
	0x0353B7D4 BL 0x1C16CF4
	0x0353B7D8 ADRP X0, 0xBC1000
	0x0353B7DC LDR X0, [X0 + 0x178]
	0x0353B7E0 BL 0x1C16CF4
	0x0353B7E4 MOVZ W8, 0x1
	0x0353B7E8 STRB W8, [X23 + 0xBF9]
	0x0353B7EC LDR W2, [X19 + 0x80]
	0x0353B7F0 LDR X3, [X22]
	0x0353B7F4 MOVZ W1, 0xE1
	0x0353B7F8 MOV X0, X19
	0x0353B7FC BL 0x353ACB8
	0x0353B800 TBZ X0, 0x0, 0x353B890
	0x0353B804 CBZ X21, 0x353B8A4
	0x0353B808 CBZ X20, 0x353B8C4
	0x0353B80C MOVZ W8, 0x1
	0x0353B810 STRB W8, [X20 + 0x31]
	0x0353B814 STR X20, [X19 + 0x128]
	0x0353B818 CBZ X21, 0x353B8EC
	0x0353B81C LDR X8, [X21 + 0x20]
	0x0353B820 STR X8, [X20 + 0x20]
	0x0353B824 LDR X8, [X21 + 0x30]
	0x0353B828 STR X8, [X20 + 0x38]
	0x0353B82C LDR X0, [X19 + 0x10]
	0x0353B830 CBZ X0, 0x353B8EC
	0x0353B834 LDR X8, [X0]
	0x0353B838 MOV X1, X21
	0x0353B83C MOV X2, X20
	0x0353B840 LDR X9, [X8 + 0x2A8]
	0x0353B844 LDR X3, [X8 + 0x2B0]
	0x0353B848 BLR X9
	0x0353B84C TBZ X0, 0x0, 0x353B890
	0x0353B850 LDR W1, [X19 + 0x90]
	0x0353B854 MOVZ W8, 0x3
	0x0353B858 STR W8, [X19 + 0x124]
	0x0353B85C CMP W1, 0x8
	0x0353B860 B.EQ 0x353B888
	0x0353B864 LDR X8, [X19 + 0x98]
	0x0353B868 MOVZ W9, 0x8
	0x0353B86C STR W9, [X19 + 0x90]
	0x0353B870 CBZ X8, 0x353B888
	0x0353B874 LDR X9, [X8 + 0x18]
	0x0353B878 LDR X0, [X8 + 0x40]
	0x0353B87C LDR X3, [X8 + 0x28]
	0x0353B880 MOVZ W2, 0x8
	0x0353B884 BLR X9
	0x0353B888 MOVZ W0, 0x1
	0x0353B88C B 0x353B894
	0x0353B890 MOV W0, W31
	0x0353B894 LDP X20, X19, [X31 + 0x20]
	0x0353B898 LDP X22, X21, [X31 + 0x10]
	0x0353B89C LDP X30, X23, [X31], #0x30
	0x0353B8A0 RET
	0x0353B8A4 ADRP X8, 0xBF9000
	0x0353B8A8 LDR X8, [X8 + 0xCC8]
	0x0353B8AC LDR X0, [X8]
	0x0353B8B0 BL 0x1C16F10
	0x0353B8B4 MOV X1, X31
	0x0353B8B8 MOV X21, X0
	0x0353B8BC BL 0x33BDD8C
	0x0353B8C0 CBNZ X20, 0x353B80C
	0x0353B8C4 ADRP X8, 0xBF9000
	0x0353B8C8 LDR X8, [X8 + 0xCC0]
	0x0353B8CC LDR X0, [X8]
	0x0353B8D0 BL 0x1C16F10
	0x0353B8D4 MOVZ W8, 0x1
	0x0353B8D8 MOV X1, X31
	0x0353B8DC MOV X20, X0
	0x0353B8E0 STRB W8, [X0 + 0x30]
	0x0353B8E4 BL 0x33BDD8C
	0x0353B8E8 B 0x353B80C
	0x0353B8EC BL 0x1C16F20
	0x0353B8F0 STR X30, [X31 - 0x30]!
	0x0353B8F4 STP X22, X21, [X31 + 0x10]
	0x0353B8F8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0xEA5000
	007 Move W8, [X20+3055]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xBFA000
	014 Move X0, [X0+3040]
	015 Call 0x1C17CF4
	016 Move X0, 0xBC1000
	017 Move X0, [X0+3392]
	018 Call 0x1C17CF4
	019 Move X0, 0xBC2000
	020 Move X0, [X0+144]
	021 Call 0x1C17CF4
	022 Move X0, 0xBC2000
	023 Move X0, [X0+152]
	024 Call 0x1C17CF4
	025 Move X0, 0xBC2000
	026 Move X0, [X0+160]
	027 Call 0x1C17CF4
	028 Move X0, 0xBC2000
	029 Move X0, [X0+168]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3055], W8
	033 Move X0, [X19+16]
	034 Compare X0, 0
	035 JumpIfEqual {129}
	036 Move X1, X31
	037 Call PhotonPeer.get_PeerState, X0
	038 And W31, W0, 255
	039 Move X0, [X19+16]
	040 Compare X0, 0
	041 JumpIfEqual {129}
	042 Move X20, 0xBC1000
	043 Move X21, 0xBC2000
	044 Move X20, [X20+3392]
	045 Move X21, [X21+168]
	046 Move X1, X31
	047 Call PhotonPeer.get_PeerState, X0
	048 Move X8, [X20]
	049 Move TEMP, 0
	050 Not TEMP
	051 Move X9, TEMP
	052 Move [X31+24], W0
	053 Add X0, X31, 8
	054 Move X1, X31
	055 Move [X31+8], X8
	056 Move [X31+16], X9
	057 Call Enum.ToString, X0
	058 Move X8, [X21]
	059 Move X1, X0
	060 Move X2, X31
	061 Move X0, X8
	062 Call String.Concat, X0, X1
	063 Move X8, [X19]
	064 Move X2, X0
	065 Move X0, [X19+112]
	066 Move X1, X31
	067 Call String.IsNullOrEmpty, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {75}
	072 Move X9, 0xBC2000
	073 Move X8, [X19]
	074 Move X9, [X9+160]
	075 Move X8, [X19+72]
	076 Compare X8, 0
	077 JumpIfEqual {113}
	078 Move X20, [X19+48]
	079 Compare X20, 0
	080 JumpIfNotEqual {100}
	081 Move X9, 0xBC2000
	082 Move X8, [X19]
	083 Move X9, [X9+144]
	084 Move W1, 2
	085 Move X0, X19
	086 Move X3, [X8+544]
	087 Move X2, [X9]
	088 Move X9, [X8+536]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X8, 0xBFA000
	091 Move X8, [X8+3040]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move W8, 255
	095 Move X1, X31
	096 Move X20, X0
	097 Move [X0+16], W8
	098 Call Object..ctor, X0
	099 Move [X19+48], X20
	100 Move X8, [X19+72]
	101 Move X0, X19
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Move W3, W31
	105 Move [X20+40], X8
	106 Move X1, [X19+112]
	107 Move X2, [X19+136]
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Add X31, X31, 64
	111 Call LoadBalancingClient.Connect, X0, X1, X2, X3
	112 Return X0
	113 Move X9, 0xBC2000
	114 Move X8, [X19]
	115 Move X9, [X9+152]
	116 Move X2, [X9]
	117 Move X9, [X8+536]
	118 Move X3, [X8+544]
	119 Move W1, 2
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X30, [X31+32]
	125 Move X21, [X31+40]
	126 Move W0, W31
	127 Add X31, X31, 64
	128 Return X0
	129 Call 0x1C17F20

Method: System.Boolean ReconnectAndRejoin()

Disassembly:
	0x0353B8FC ADRP X22, 0xEA4000
	0x0353B900 ADRP X21, 0xBC1000
	0x0353B904 LDRB W8, [X22 + 0xBFA]
	0x0353B908 LDR X21, [X21 + 0x180]
	0x0353B90C MOV X20, X1
	0x0353B910 MOV X19, X0
	0x0353B914 TBNZ X8, 0x0, 0x353B92C
	0x0353B918 ADRP X0, 0xBC1000
	0x0353B91C LDR X0, [X0 + 0x180]
	0x0353B920 BL 0x1C16CF4
	0x0353B924 MOVZ W8, 0x1
	0x0353B928 STRB W8, [X22 + 0xBFA]
	0x0353B92C LDR W2, [X19 + 0x80]
	0x0353B930 LDR X3, [X21]
	0x0353B934 MOVZ W1, 0xE3
	0x0353B938 MOV X0, X19
	0x0353B93C BL 0x353ACB8
	0x0353B940 TBZ X0, 0x0, 0x353B9BC
	0x0353B944 CBZ X20, 0x353B9D0
	0x0353B948 LDR W8, [X19 + 0x80]
	0x0353B94C CMP W8, 0x1
	0x0353B950 CSET W8, EQ
	0x0353B954 STRB W8, [X20 + 0x30]
	0x0353B958 B.EQ 0x353B960
	0x0353B95C STR X20, [X19 + 0x128]
	0x0353B960 LDR X0, [X19 + 0x10]
	0x0353B964 CBZ X0, 0x353B9D0
	0x0353B968 LDR X8, [X0]
	0x0353B96C MOV X1, X20
	0x0353B970 LDR X9, [X8 + 0x278]
	0x0353B974 LDR X2, [X8 + 0x280]
	0x0353B978 BLR X9
	0x0353B97C TBZ X0, 0x0, 0x353B9BC
	0x0353B980 LDR W1, [X19 + 0x90]
	0x0353B984 STR W31, [X19 + 0x124]
	0x0353B988 CMP W1, 0x8
	0x0353B98C B.EQ 0x353B9B4
	0x0353B990 LDR X8, [X19 + 0x98]
	0x0353B994 MOVZ W9, 0x8
	0x0353B998 STR W9, [X19 + 0x90]
	0x0353B99C CBZ X8, 0x353B9B4
	0x0353B9A0 LDR X9, [X8 + 0x18]
	0x0353B9A4 LDR X0, [X8 + 0x40]
	0x0353B9A8 LDR X3, [X8 + 0x28]
	0x0353B9AC MOVZ W2, 0x8
	0x0353B9B0 BLR X9
	0x0353B9B4 MOVZ W0, 0x1
	0x0353B9B8 B 0x353B9C0
	0x0353B9BC MOV W0, W31
	0x0353B9C0 LDP X20, X19, [X31 + 0x20]
	0x0353B9C4 LDP X22, X21, [X31 + 0x10]
	0x0353B9C8 LDR X30, [X31], #0x30
	0x0353B9CC RET
	0x0353B9D0 BL 0x1C16F20
	0x0353B9D4 STR X30, [X31 - 0x30]!
	0x0353B9D8 STP X22, X21, [X31 + 0x10]
	0x0353B9DC STP X20, X19, [X31 + 0x20]
	0x0353B9E0 ADRP X22, 0xEA4000
	0x0353B9E4 ADRP X21, 0xBC1000
	0x0353B9E8 LDRB W8, [X22 + 0xBFB]
	0x0353B9EC LDR X21, [X21 + 0x188]
	0x0353B9F0 MOV X20, X1
	0x0353B9F4 MOV X19, X0
	0x0353B9F8 TBNZ X8, 0x0, 0x353BA10
	0x0353B9FC ADRP X0, 0xBC1000
	0x0353BA00 LDR X0, [X0 + 0x188]
	0x0353BA04 BL 0x1C16CF4
	0x0353BA08 MOVZ W8, 0x1
	0x0353BA0C STRB W8, [X22 + 0xBFB]
	0x0353BA10 LDR W2, [X19 + 0x80]
	0x0353BA14 LDR X3, [X21]
	0x0353BA18 MOVZ W1, 0xE2
	0x0353BA1C MOV X0, X19
	0x0353BA20 BL 0x353ACB8
	0x0353BA24 TBZ X0, 0x0, 0x353BAAC
	0x0353BA28 CBZ X20, 0x353BAC0
	0x0353BA2C LDR W8, [X19 + 0x80]
	0x0353BA30 MOVZ W9, 0x1
	0x0353BA34 STRB W9, [X20 + 0x31]
	0x0353BA38 CMP W8, 0x1
	0x0353BA3C CSET W8, EQ
	0x0353BA40 STRB W8, [X20 + 0x30]
	0x0353BA44 B.EQ 0x353BA4C
	0x0353BA48 STR X20, [X19 + 0x128]
	0x0353BA4C LDR X0, [X19 + 0x10]
	0x0353BA50 CBZ X0, 0x353BAC0
	0x0353BA54 LDR X8, [X0]
	0x0353BA58 MOV X1, X20
	0x0353BA5C LDR X9, [X8 + 0x288]
	0x0353BA60 LDR X2, [X8 + 0x290]
	0x0353BA64 BLR X9
	0x0353BA68 TBZ X0, 0x0, 0x353BAAC
	0x0353BA6C LDR W1, [X19 + 0x90]
	0x0353BA70 MOVZ W8, 0x4
	0x0353BA74 STR W8, [X19 + 0x124]
	0x0353BA78 CMP W1, 0x8
	0x0353BA7C B.EQ 0x353BAA4
	0x0353BA80 LDR X8, [X19 + 0x98]
	0x0353BA84 MOVZ W9, 0x8
	0x0353BA88 STR W9, [X19 + 0x90]
	0x0353BA8C CBZ X8, 0x353BAA4
	0x0353BA90 LDR X9, [X8 + 0x18]
	0x0353BA94 LDR X0, [X8 + 0x40]
	0x0353BA98 LDR X3, [X8 + 0x28]
	0x0353BA9C MOVZ W2, 0x8
	0x0353BAA0 BLR X9
	0x0353BAA4 MOVZ W0, 0x1
	0x0353BAA8 B 0x353BAB0
	0x0353BAAC MOV W0, W31
	0x0353BAB0 LDP X20, X19, [X31 + 0x20]
	0x0353BAB4 LDP X22, X21, [X31 + 0x10]
	0x0353BAB8 LDR X30, [X31], #0x30
	0x0353BABC RET
	0x0353BAC0 BL 0x1C16F20
	0x0353BAC4 STR X30, [X31 - 0x30]!
	0x0353BAC8 STP X22, X21, [X31 + 0x10]
	0x0353BACC STP X20, X19, [X31 + 0x20]
	0x0353BAD0 ADRP X22, 0xEA4000
	0x0353BAD4 ADRP X21, 0xBC1000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0xEA5000
	007 Move W8, [X20+3056]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xBFA000
	014 Move X0, [X0+3040]
	015 Call 0x1C17CF4
	016 Move X0, 0xBC1000
	017 Move X0, [X0+3392]
	018 Call 0x1C17CF4
	019 Move X0, 0xBC2000
	020 Move X0, [X0+176]
	021 Call 0x1C17CF4
	022 Move X0, 0xBC2000
	023 Move X0, [X0+184]
	024 Call 0x1C17CF4
	025 Move X0, 0xBC2000
	026 Move X0, [X0+192]
	027 Call 0x1C17CF4
	028 Move X0, 0xBC2000
	029 Move X0, [X0+200]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3056], W8
	033 Move X0, [X19+16]
	034 Compare X0, 0
	035 JumpIfEqual {140}
	036 Move X1, X31
	037 Call PhotonPeer.get_PeerState, X0
	038 And W31, W0, 255
	039 Move X0, [X19+16]
	040 Compare X0, 0
	041 JumpIfEqual {140}
	042 Move X20, 0xBC1000
	043 Move X21, 0xBC2000
	044 Move X20, [X20+3392]
	045 Move X21, [X21+176]
	046 Move X1, X31
	047 Call PhotonPeer.get_PeerState, X0
	048 Move X8, [X20]
	049 Move TEMP, 0
	050 Not TEMP
	051 Move X9, TEMP
	052 Move [X31+24], W0
	053 Add X0, X31, 8
	054 Move X1, X31
	055 Move [X31+8], X8
	056 Move [X31+16], X9
	057 Call Enum.ToString, X0
	058 Move X8, [X21]
	059 Move X1, X0
	060 Move X2, X31
	061 Move X0, X8
	062 Call String.Concat, X0, X1
	063 Move X8, [X19]
	064 Move X2, X0
	065 Move X0, [X19+120]
	066 Move X1, X31
	067 Call String.IsNullOrEmpty, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {75}
	072 Move X9, 0xBC2000
	073 Move X8, [X19]
	074 Move X9, [X9+192]
	075 Move X8, [X19+296]
	076 Compare X8, 0
	077 JumpIfEqual {121}
	078 Move X8, [X19+72]
	079 Compare X8, 0
	080 JumpIfEqual {124}
	081 Move X20, [X19+48]
	082 Compare X20, 0
	083 JumpIfNotEqual {94}
	084 Move X8, 0xBFA000
	085 Move X8, [X8+3040]
	086 Move X0, [X8]
	087 Call 0x1C17F10
	088 Move W8, 255
	089 Move X1, X31
	090 Move X20, X0
	091 Move [X0+16], W8
	092 Call Object..ctor, X0
	093 Move [X19+48], X20
	094 Move X8, [X19+72]
	095 Move X1, X31
	096 Move [X20+40], X8
	097 Move X0, [X19+120]
	098 Call String.IsNullOrEmpty, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {133}
	103 Move X8, [X19+296]
	104 Compare X8, 0
	105 JumpIfEqual {133}
	106 Move W9, 1
	107 Move W10, 3
	108 Move [X19+292], W9
	109 Move [X8+49], W10
	110 Move X1, [X19+120]
	111 Move X2, [X19+136]
	112 Move X0, X19
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X30, [X31+32]
	116 Move X21, [X31+40]
	117 Move W3, 1
	118 Add X31, X31, 64
	119 Call LoadBalancingClient.Connect, X0, X1, X2, X3
	120 Return X0
	121 Move X9, 0xBC2000
	122 Move X8, [X19]
	123 Move X9, [X9+200]
	124 Move X9, 0xBC2000
	125 Move X8, [X19]
	126 Move X9, [X9+184]
	127 Move X2, [X9]
	128 Move X9, [X8+536]
	129 Move X3, [X8+544]
	130 Move W1, 2
	131 Move X0, X19
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X30, [X31+32]
	136 Move X21, [X31+40]
	137 Move W0, W31
	138 Add X31, X31, 64
	139 Return X0
	140 Call 0x1C17F20

Method: System.Void Disconnect(Photon.Realtime.DisconnectCause cause = 17)

Disassembly:
	0x035363A0 LDR X0, [X0 + 0xF08]
	0x035363A4 BL 0x1C16CF4
	0x035363A8 MOVZ W8, 0x1
	0x035363AC STRB W8, [X21 + 0xBD2]
	0x035363B0 ADRP X22, 0xBC5000
	0x035363B4 LDR X22, [X22 + 0xF08]
	0x035363B8 AND W8, W19, 0xFFFF
	0x035363BC CMP W8, 0x8
	0x035363C0 STRB W31, [X31 + 0x14]
	0x035363C4 STR W31, [X31 + 0x10]
	0x035363C8 STR X31, [X31 + 0x18]
	0x035363CC B.NE 0x35364D4
	0x035363D0 ADRP X21, 0xBFE000
	0x035363D4 LDR X21, [X21 + 0xBA0]
	0x035363D8 LDR X0, [X21]
	0x035363DC LDR W8, [X0 + 0xE0]
	0x035363E0 CBNZ W8, 0x35363EC
	0x035363E4 BL 0x1C16DFC
	0x035363E8 LDR X0, [X21]
	0x035363EC LDR X8, [X0 + 0xB8]
	0x035363F0 LDR X19, [X8 + 0x8]
	0x035363F4 STRB W31, [X31 + 0x14]
	0x035363F8 ADD X1, X31, 0x14
	0x035363FC MOV X0, X19
	0x03536400 MOV X2, X31
	0x03536404 BL 0x33DE64C
	0x03536408 LDR X0, [X21]
	0x0353640C LDR W8, [X0 + 0xE0]
	0x03536410 CBNZ W8, 0x3536418
	0x03536414 BL 0x1C16DFC
	0x03536418 CBZ X20, 0x3536500
	0x0353641C LDR X8, [X21]
	0x03536420 LDR X8, [X8 + 0xB8]
	0x03536424 LDR X1, [X8 + 0x8]
	0x03536428 MOVZ W3, 0x8
	0x0353642C MOV X0, X20
	0x03536430 MOV W2, W31
	0x03536434 MOV X4, X31
	0x03536438 BL 0x351EE98
	0x0353643C STR W31, [X31 + 0x10]
	0x03536440 ADRP X9, 0xBC5000
	0x03536444 LDR X8, [X21]
	0x03536448 LDR X9, [X9 + 0xF00]
	0x0353644C LDR X8, [X8 + 0xB8]
	0x03536450 LDR X0, [X9]
	0x03536454 LDR X20, [X8 + 0x8]
	0x03536458 LDR W9, [X0 + 0xE0]
	0x0353645C CBNZ W9, 0x3536464
	0x03536460 BL 0x1C16DFC
	0x03536464 ADD X0, X31, 0x18
	0x03536468 ADD X2, X31, 0x10
	0x0353646C MOV X1, X20
	0x03536470 MOV X3, X31
	0x03536474 ADD X23, X31, 0x18
	0x03536478 BL 0x3506B64
	0x0353647C LDR X8, [X21]
	0x03536480 ORR X0, X23, 0x7
	0x03536484 LDR X8, [X8 + 0xB8]
	0x03536488 LDR X1, [X8 + 0x8]
	0x0353648C ADD X2, X31, 0x10
	0x03536490 MOV X3, X31
	0x03536494 BL 0x3506B64
	0x03536498 MOV X20, X31
	0x0353649C MOVZ W21, 0x3
	0x035364A0 LDRB W8, [X31 + 0x14]
	0x035364A4 CBZ W8, 0x35364B4
	0x035364A8 MOV X0, X19
	0x035364AC MOV X1, X31
	0x035364B0 BL 0x33E14E4
	0x035364B4 CBNZ X20, 0x35364F8
	0x035364B8 CMP W21, 0x3
	0x035364BC B.EQ 0x35364C4
	0x035364C0 CBNZ W21, 0x35364E4
	0x035364C4 LDR X8, [X31 + 0x18]
	0x035364C8 LDR X0, [X22]
	0x035364CC STR X8, [X31 + 0x8]
	0x035364D0 B 0x35364DC
	0x035364D4 LDR X0, [X22]
	0x035364D8 STR X31, [X31 + 0x8]
	0x035364DC ADD X1, X31, 0x8
	0x035364E0 BL 0x1C16E04
	0x035364E4 LDP X20, X19, [X31 + 0x40]
	0x035364E8 LDP X22, X21, [X31 + 0x30]
	0x035364EC LDP X30, X23, [X31 + 0x20]
	0x035364F0 ADD X31, X31, 0x50
	0x035364F4 RET
	0x035364F8 MOV X0, X20
	0x035364FC BL 0x1C16F18
	0x03536500 BL 0x1C16F20
	0x03536504 B 0x3536518
	0x03536508 B 0x3536518
	0x0353650C B 0x3536518
	0x03536510 B 0x3536518
	0x03536514 B 0x3536518
	0x03536518 MOV X21, X0
	0x0353651C CMP W1, 0x1
	0x03536520 B.NE 0x353653C
	0x03536524 MOV X0, X21
	0x03536528 BL 0x3EB1AD0
	0x0353652C LDR X20, [X0]
	0x03536530 BL 0x3EB1AE0
	0x03536534 MOV W21, W31
	0x03536538 B 0x35364A0
	0x0353653C MOV X20, X31
	0x03536540 B 0x3536548
	0x03536544 MOV X21, X0
	0x03536548 LDRB W8, [X31 + 0x14]
	0x0353654C CBZ W8, 0x353655C
	0x03536550 MOV X0, X19
	0x03536554 MOV X1, X31
	0x03536558 BL 0x33E14E4
	0x0353655C CBNZ X20, 0x3536568
	0x03536560 MOV X0, X21
	0x03536564 BL 0x1D2C690
	0x03536568 MOV X0, X20
	0x0353656C BL 0x1C16F18
	0x03536570 BL 0x1990590
	0x03536574 SUB X31, X31, 0x50
	0x03536578 STP D11, D10, [X31 + 0x10]
	0x0353657C STP D9, D8, [X31 + 0x20]
	0x03536580 STP X30, X21, [X31 + 0x30]
	0x03536584 STP X20, X19, [X31 + 0x40]
	0x03536588 ADRP X21, 0xEA9000
	0x0353658C LDRB W8, [X21 + 0xBD3]
	0x03536590 MOV X19, X1
	0x03536594 MOV X20, X0
	0x03536598 TBNZ X8, 0x0, 0x35365C8
	0x0353659C ADRP X0, 0xBFE000
	0x035365A0 LDR X0, [X0 + 0xBA0]
	0x035365A4 BL 0x1C16CF4
	0x035365A8 ADRP X0, 0xBC5000
	0x035365AC LDR X0, [X0 + 0xF00]
	0x035365B0 BL 0x1C16CF4
	0x035365B4 ADRP X0, 0xBBE000
	0x035365B8 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X21, 0xEAA000
	008 Move W8, [X21+3057]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xBFF000
	016 Move X0, [X0+2896]
	017 Call 0x1C17CF4
	018 Move X0, 0xBFF000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0xBBE000
	022 Move X0, [X0+2760]
	023 Call 0x1C17CF4
	024 Move X0, 0xBC6000
	025 Move X0, [X0+3704]
	026 Call 0x1C17CF4
	027 Move X0, 0xBC6000
	028 Move X0, [X0+3712]
	029 Call 0x1C17CF4
	030 Move X0, 0xBC6000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3057], W8
	035 Move W1, [X19+144]
	036 Compare W1, 0
	037 JumpIfEqual {40}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, 0xBBE000
	041 Move X8, [X8+2760]
	042 Move W1, 6
	043 Move X0, [X8]
	044 Call 0x1C17D6C
	045 Compare X0, 0
	046 JumpIfEqual {152}
	047 Move W8, [X0+24]
	048 Move X21, X0
	049 Compare W8, 0
	050 JumpIfEqual {151}
	051 Move X8, 0xBC6000
	052 Move X8, [X8+3720]
	053 Move X9, 0xBFF000
	054 Move TEMP, 0
	055 Not TEMP
	056 Move X10, TEMP
	057 Add X0, X31, 56
	058 Move X8, [X8]
	059 Move X9, [X9+2896]
	060 Move X1, X31
	061 Move [X21+32], X8
	062 Move X8, [X9]
	063 Move W9, [X19+144]
	064 Move [X31+56], X8
	065 Move [X31+64], X10
	066 Move [X31+72], W9
	067 Call Enum.ToString, X0
	068 Move W8, [X21+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X21+40], X0
	072 Move X8, 0xBC6000
	073 Move X8, [X8+3704]
	074 Move X22, 0xBFF000
	075 Move TEMP, 0
	076 Not TEMP
	077 Move X10, TEMP
	078 Add X0, X31, 32
	079 Move X8, [X8]
	080 Move X22, [X22+2904]
	081 Move X1, X31
	082 Move [X21+48], X8
	083 Move X8, [X22]
	084 Move W9, [X19+224]
	085 Move [X31+32], X8
	086 Move [X31+40], X10
	087 Move [X31+48], W9
	088 Call Enum.ToString, X0
	089 Move W8, [X21+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X21+56], X0
	093 Move X8, 0xBC6000
	094 Move X8, [X8+3712]
	095 Move TEMP, 0
	096 Not TEMP
	097 Move X9, TEMP
	098 Add X0, X31, 8
	099 Move X1, X31
	100 Move X8, [X8]
	101 Move [X21+64], X8
	102 Move X8, [X22]
	103 Move [X31+24], W20
	104 Move [X31+8], X8
	105 Move [X31+16], X9
	106 Call Enum.ToString, X0
	107 Move W8, [X21+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X21+72], X0
	110 Move X0, X21
	111 Move X1, X31
	112 Call String.Concat, X0
	113 Move X8, [X19]
	114 Move X2, X0
	115 Move W1, 3
	116 Move X0, X19
	117 Move X9, [X8+536]
	118 Move X3, [X8+544]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X20, [X31+112]
	121 Move X19, [X31+120]
	122 Move X22, [X31+96]
	123 Move X21, [X31+104]
	124 Move X30, [X31+80]
	125 Add X31, X31, 128
	126 Return 
	127 Move X8, [X19+152]
	128 Move W9, 13
	129 Move [X19+144], W9
	130 Compare X8, 0
	131 JumpIfEqual {137}
	132 Move X9, [X8+24]
	133 Move X0, [X8+64]
	134 Move X3, [X8+40]
	135 Move W2, 13
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X0, [X19+16]
	138 Move [X19+224], W20
	139 Compare X0, 0
	140 JumpIfEqual {152}
	141 Move X8, [X0]
	142 Move X20, [X31+112]
	143 Move X19, [X31+120]
	144 Move X22, [X31+96]
	145 Move X21, [X31+104]
	146 Move X30, [X31+80]
	147 Move X2, [X8+440]
	148 Move X1, [X8+448]
	149 Add X31, X31, 128
	150 CallNoReturn X2
	151 Call 0x1C17F28
	152 Call 0x1C17F20

Method: System.Void DisconnectToReconnect()

Disassembly:
	0x0353BAD8 LDRB W8, [X22 + 0xBFC]
	0x0353BADC LDR X21, [X21 + 0x190]
	0x0353BAE0 MOV X20, X1
	0x0353BAE4 MOV X19, X0
	0x0353BAE8 TBNZ X8, 0x0, 0x353BB00
	0x0353BAEC ADRP X0, 0xBC1000
	0x0353BAF0 LDR X0, [X0 + 0x190]
	0x0353BAF4 BL 0x1C16CF4
	0x0353BAF8 MOVZ W8, 0x1
	0x0353BAFC STRB W8, [X22 + 0xBFC]
	0x0353BB00 LDR W2, [X19 + 0x80]
	0x0353BB04 LDR X3, [X21]
	0x0353BB08 MOVZ W1, 0xE2
	0x0353BB0C MOV X0, X19
	0x0353BB10 BL 0x353ACB8
	0x0353BB14 TBZ X0, 0x0, 0x353BBA0
	0x0353BB18 CBZ X20, 0x353BBB4
	0x0353BB1C LDR W8, [X19 + 0x80]
	0x0353BB20 CMP W8, 0x1
	0x0353BB24 CSET W8, EQ
	0x0353BB28 STRB W8, [X20 + 0x30]
	0x0353BB2C B.EQ 0x353BB34
	0x0353BB30 STR X20, [X19 + 0x128]
	0x0353BB34 LDR X0, [X19 + 0x10]
	0x0353BB38 CBZ X0, 0x353BBB4
	0x0353BB3C LDR X8, [X0]
	0x0353BB40 MOV X1, X20
	0x0353BB44 LDR X9, [X8 + 0x288]
	0x0353BB48 LDR X2, [X8 + 0x290]
	0x0353BB4C BLR X9
	0x0353BB50 TBZ X0, 0x0, 0x353BBA0
	0x0353BB54 LDRB W8, [X20 + 0x31]
	0x0353BB58 LDR W1, [X19 + 0x90]
	0x0353BB5C MOVZ W9, 0x4
	0x0353BB60 CMP W8, 0x1
	0x0353BB64 CSINC W8, W9, W31, EQ
	0x0353BB68 CMP W1, 0x8
	0x0353BB6C STR W8, [X19 + 0x124]
	0x0353BB70 B.EQ 0x353BB98
	0x0353BB74 LDR X8, [X19 + 0x98]
	0x0353BB78 MOVZ W9, 0x8
	0x0353BB7C STR W9, [X19 + 0x90]
	0x0353BB80 CBZ X8, 0x353BB98
	0x0353BB84 LDR X9, [X8 + 0x18]
	0x0353BB88 LDR X0, [X8 + 0x40]
	0x0353BB8C LDR X3, [X8 + 0x28]
	0x0353BB90 MOVZ W2, 0x8
	0x0353BB94 BLR X9
	0x0353BB98 MOVZ W0, 0x1
	0x0353BB9C B 0x353BBA4
	0x0353BBA0 MOV W0, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+128]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {31}
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W1, [X19+144]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X19+152]
	012 Move W9, 18
	013 Move [X19+144], W9
	014 Compare X8, 0
	015 JumpIfEqual {43}
	016 Move X9, [X8+24]
	017 Move X0, [X8+64]
	018 Move X3, [X8+40]
	019 Move W2, 18
	020 Move W1, [X19+144]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, [X19+152]
	023 Move W9, 11
	024 Move [X19+144], W9
	025 Compare X8, 0
	026 JumpIfEqual {43}
	027 Move X9, [X8+24]
	028 Move X0, [X8+64]
	029 Move X3, [X8+40]
	030 Move W2, 11
	031 Move W1, [X19+144]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X19+152]
	034 Move W9, 5
	035 Move [X19+144], W9
	036 Compare X8, 0
	037 JumpIfEqual {43}
	038 Move X9, [X8+24]
	039 Move X0, [X8+64]
	040 Move X3, [X8+40]
	041 Move W2, 5
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X0, [X19+16]
	044 Compare X0, 0
	045 JumpIfEqual {52}
	046 Move X8, [X0]
	047 Move X2, [X8+440]
	048 Move X1, [X8+448]
	049 Move X30, [X31+16]
	050 Move X19, [X31+24]
	051 CallNoReturn X2
	052 Call 0x1C17F20

Method: System.Void SimulateConnectionLoss(System.Boolean simulateTimeout)

Disassembly:
	0x0353BBA4 LDP X20, X19, [X31 + 0x20]
	0x0353BBA8 LDP X22, X21, [X31 + 0x10]
	0x0353BBAC LDR X30, [X31], #0x30
	0x0353BBB0 RET
	0x0353BBB4 BL 0x1C16F20
	0x0353BBB8 STR X30, [X31 - 0x30]!
	0x0353BBBC STP X22, X21, [X31 + 0x10]
	0x0353BBC0 STP X20, X19, [X31 + 0x20]
	0x0353BBC4 ADRP X22, 0xEA4000
	0x0353BBC8 ADRP X21, 0xBC1000
	0x0353BBCC LDRB W8, [X22 + 0xBFD]
	0x0353BBD0 LDR X21, [X21 + 0x198]
	0x0353BBD4 MOV X20, X1
	0x0353BBD8 MOV X19, X0
	0x0353BBDC TBNZ X8, 0x0, 0x353BC00
	0x0353BBE0 ADRP X0, 0xBF9000
	0x0353BBE4 LDR X0, [X0 + 0xCC0]
	0x0353BBE8 BL 0x1C16CF4
	0x0353BBEC ADRP X0, 0xBC1000
	0x0353BBF0 LDR X0, [X0 + 0x198]
	0x0353BBF4 BL 0x1C16CF4
	0x0353BBF8 MOVZ W8, 0x1
	0x0353BBFC STRB W8, [X22 + 0xBFD]
	0x0353BC00 LDR W2, [X19 + 0x80]
	0x0353BC04 LDR X3, [X21]
	0x0353BC08 MOVZ W1, 0xE2
	0x0353BC0C MOV X0, X19
	0x0353BC10 BL 0x353ACB8
	0x0353BC14 TBZ X0, 0x0, 0x353BCBC
	0x0353BC18 ADRP X9, 0xBF9000
	0x0353BC1C LDR W8, [X19 + 0x80]
	0x0353BC20 LDR X9, [X9 + 0xCC0]
	0x0353BC24 CMP W8, 0x1
	0x0353BC28 LDR X0, [X9]
	0x0353BC2C CSET W22, EQ
	0x0353BC30 BL 0x1C16F10
	0x0353BC34 MOVZ W8, 0x1
	0x0353BC38 MOV X1, X31
	0x0353BC3C MOV X21, X0
	0x0353BC40 STRB W8, [X0 + 0x30]
	0x0353BC44 BL 0x33BDD8C
	0x0353BC48 MOVZ W8, 0x3
	0x0353BC4C STR X21, [X19 + 0x128]
	0x0353BC50 STR X20, [X21 + 0x10]
	0x0353BC54 STRB W22, [X21 + 0x30]
	0x0353BC58 STRB W8, [X21 + 0x31]
	0x0353BC5C LDR X0, [X19 + 0x10]
	0x0353BC60 CBZ X0, 0x353BCD0
	0x0353BC64 LDR X8, [X0]
	0x0353BC68 MOV X1, X21
	0x0353BC6C LDR X9, [X8 + 0x288]
	0x0353BC70 LDR X2, [X8 + 0x290]
	0x0353BC74 BLR X9
	0x0353BC78 TBZ X0, 0x0, 0x353BCBC
	0x0353BC7C LDR W1, [X19 + 0x90]
	0x0353BC80 MOVZ W0, 0x1
	0x0353BC84 STR W0, [X19 + 0x124]
	0x0353BC88 CMP W1, 0x8
	0x0353BC8C B.EQ 0x353BCC0
	0x0353BC90 LDR X8, [X19 + 0x98]
	0x0353BC94 MOVZ W9, 0x8
	0x0353BC98 STR W9, [X19 + 0x90]
	0x0353BC9C CBZ X8, 0x353BCB4
	0x0353BCA0 LDR X9, [X8 + 0x18]
	0x0353BCA4 LDR X0, [X8 + 0x40]
	0x0353BCA8 LDR X3, [X8 + 0x28]
	0x0353BCAC MOVZ W2, 0x8
	0x0353BCB0 BLR X9
	0x0353BCB4 MOVZ W0, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 And W9, W1, 1
	007 Move X21, 0xEA5000
	008 Move [X31+12], W9
	009 Move X20, 0xBB9000
	010 Move W8, [X21+3058]
	011 Move X20, [X20+2904]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xBB9000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0xBC2000
	021 Move X0, [X0+208]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3058], W8
	025 Move X0, [X20]
	026 Move X20, 0xBC2000
	027 Move W8, [X0+224]
	028 Move X20, [X20+208]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Add X0, X31, 12
	033 Move X1, X31
	034 Call Boolean.ToString, X0
	035 Move X8, [X20]
	036 Move X1, X0
	037 Move X2, X31
	038 Move X0, X8
	039 Call String.Concat, X0, X1
	040 Move X8, [X19]
	041 Move X2, X0
	042 Move W1, 2
	043 Move X0, X19
	044 Move X9, [X8+536]
	045 Move X3, [X8+544]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move W8, [X31+12]
	048 Compare W8, 0
	049 JumpIfEqual {70}
	050 Move X0, [X19+16]
	051 Compare X0, 0
	052 JumpIfEqual {84}
	053 Move X1, X31
	054 Call PhotonPeer.get_NetworkSimulationSettings, X0
	055 Compare X0, 0
	056 JumpIfEqual {84}
	057 Move W1, 100
	058 Move X2, X31
	059 Call NetworkSimulationSet.set_IncomingLossPercentage, X0, X1
	060 Move X0, [X19+16]
	061 Compare X0, 0
	062 JumpIfEqual {84}
	063 Move X1, X31
	064 Call PhotonPeer.get_NetworkSimulationSettings, X0
	065 Compare X0, 0
	066 JumpIfEqual {84}
	067 Move W1, 100
	068 Move X2, X31
	069 Call NetworkSimulationSet.set_OutgoingLossPercentage, X0, X1
	070 Move X0, [X19+16]
	071 Compare X0, 0
	072 JumpIfEqual {84}
	073 Move X8, [X0]
	074 Move W1, [X31+12]
	075 Move X9, [X8+392]
	076 Move X2, [X8+400]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X30, [X31+16]
	081 Move X21, [X31+24]
	082 Add X31, X31, 48
	083 Return 
	084 Call 0x1C17F20

Method: System.Boolean CallAuthenticate()

Disassembly:
	0x0353B1AC LDR W2, [X19 + 0x80]
	0x0353B1B0 LDR X3, [X22]
	0x0353B1B4 MOVZ W1, 0xDE
	0x0353B1B8 MOV X0, X19
	0x0353B1BC BL 0x353ACB8
	0x0353B1C0 TBZ X0, 0x0, 0x353B428
	0x0353B1C4 LDR X8, [X19 + 0x138]
	0x0353B1C8 CBZ X8, 0x353B1EC
	0x0353B1CC ADRP X9, 0xBC1000
	0x0353B1D0 LDR X8, [X19]
	0x0353B1D4 LDR X9, [X9 + 0x148]
	0x0353B1D8 MOVZ W1, 0x2
	0x0353B1DC LDR X3, [X8 + 0x220]
	0x0353B1E0 LDR X2, [X9]
	0x0353B1E4 LDR X9, [X8 + 0x218]
	0x0353B1E8 B 0x353B420
	0x0353B1EC CBZ X21, 0x353B3C0
	0x0353B1F0 LDR X8, [X21 + 0x18]
	0x0353B1F4 CBZ X8, 0x353B3C0
	0x0353B1F8 CMP W8, 0x201
	0x0353B1FC B.GE 0x353B3D4
	0x0353B200 ADRP X8, 0xBB9000
	0x0353B204 LDR X8, [X8 + 0x1D0]
	0x0353B208 LDR X0, [X8]
	0x0353B20C BL 0x1C16F10
	0x0353B210 ADRP X8, 0xBC1000
	0x0353B214 LDR W1, [X21 + 0x18]
	0x0353B218 LDR X8, [X8 + 0x118]
	0x0353B21C MOV X22, X0
	0x0353B220 LDR X2, [X8]
	0x0353B224 BL 0x301B830
	0x0353B228 LDR X8, [X21 + 0x18]
	0x0353B22C CMP W8, 0x1
	0x0353B230 B.LT 0x353B450
	0x0353B234 ADRP X26, 0xBB8000
	0x0353B238 ADRP X27, 0xBC1000
	0x0353B23C ADRP X28, 0xBC1000
	0x0353B240 ADRP X29, 0xBC1000
	0x0353B244 LDR X26, [X26 + 0x758]
	0x0353B248 LDR X27, [X27 + 0x120]
	0x0353B24C LDR X28, [X28 + 0x150]
	0x0353B250 LDR X29, [X29 + 0x110]
	0x0353B254 MOV X24, X31
	0x0353B258 AND X8, X8, 0x0
	0x0353B25C ADD X25, X21, 0x20
	0x0353B260 CMP X24, W8, UXTW
	0x0353B264 B.CS 0x353B4B8
	0x0353B268 LDR X23, [X25, X24, LSL #3]
	0x0353B26C MOV X1, X31
	0x0353B270 MOV X0, X23
	0x0353B274 BL 0x32277A8
	0x0353B278 TBZ X0, 0x0, 0x353B2A4
	0x0353B27C LDR X0, [X26]
	0x0353B280 ADD X1, X31, 0xC
	0x0353B284 STR W24, [X31 + 0xC]
	0x0353B288 BL 0x1C16E04
	0x0353B28C LDR X8, [X27]
	0x0353B290 MOV X1, X0
	0x0353B294 MOV X2, X31
	0x0353B298 MOV X0, X8
	0x0353B29C BL 0x321EFD0
	0x0353B2A0 B 0x353B330
	0x0353B2A4 LDR X8, [X19 + 0x30]
	0x0353B2A8 CBZ X8, 0x353B2B8
	0x0353B2AC LDR X1, [X8 + 0x30]
	0x0353B2B0 CBNZ X23, 0x353B2C0
	0x0353B2B4 B 0x353B4BC
	0x0353B2B8 MOV X1, X31
	0x0353B2BC CBZ X23, 0x353B4BC
	0x0353B2C0 MOV X0, X23
	0x0353B2C4 MOV X2, X31
	0x0353B2C8 BL 0x322693C
	0x0353B2CC TBZ X0, 0x0, 0x353B2E8
	0x0353B2D0 LDR X0, [X26]
	0x0353B2D4 ADD X1, X31, 0xC
	0x0353B2D8 STR W24, [X31 + 0xC]
	0x0353B2DC BL 0x1C16E04
	0x0353B2E0 LDR X8, [X28]
	0x0353B2E4 B 0x353B31C
	0x0353B2E8 CBZ X22, 0x353B4BC
	0x0353B2EC LDR X2, [X29]
	0x0353B2F0 MOV X0, X22
	0x0353B2F4 MOV X1, X23
	0x0353B2F8 BL 0x301C318
	0x0353B2FC TBZ X0, 0x0, 0x353B360
	0x0353B300 LDR X0, [X26]
	0x0353B304 ADD X1, X31, 0xC
	0x0353B308 STR W24, [X31 + 0xC]
	0x0353B30C BL 0x1C16E04
	0x0353B310 ADRP X8, 0xBC1000
	0x0353B314 LDR X8, [X8 + 0x140]
	0x0353B318 LDR X8, [X8]
	0x0353B31C MOV X2, X0
	0x0353B320 MOV X0, X8
	0x0353B324 MOV X1, X23
	0x0353B328 MOV X3, X31
	0x0353B32C BL 0x3227BD4
	0x0353B330 LDR X8, [X19]
	0x0353B334 MOV X2, X0
	0x0353B338 MOVZ W1, 0x2
	0x0353B33C MOV X0, X19
	0x0353B340 LDR X9, [X8 + 0x218]
	0x0353B344 LDR X3, [X8 + 0x220]
	0x0353B348 BLR X9
	0x0353B34C LDR W8, [X21 + 0x18]
	0x0353B350 ADD X24, X24, 0x1
	0x0353B354 CMP X24, W8, SXTW
	0x0353B358 B.LT 0x353B260
	0x0353B35C B 0x353B450
	0x0353B360 ADRP X9, 0xBB9000
	0x0353B364 LDR W10, [X22 + 0x1C]
	0x0353B368 LDR X8, [X22 + 0x10]
	0x0353B36C LDR X9, [X9 + 0x1B8]
	0x0353B370 ADD W10, W10, 0x1
	0x0353B374 LDR X9, [X9]
	0x0353B378 STR W10, [X22 + 0x1C]
	0x0353B37C CBZ X8, 0x353B4BC
	0x0353B380 LDRSW X10, [X22 + 0x18]
	0x0353B384 LDR W11, [X8 + 0x18]
	0x0353B388 CMP W10, W11
	0x0353B38C B.CS 0x353B3A4
	0x0353B390 ADD W9, W10, 0x1
	0x0353B394 ADD X8, X8, X10, 0x3, LSL
	0x0353B398 STR W9, [X22 + 0x18]
	0x0353B39C STR X23, [X8 + 0x20]
	0x0353B3A0 B 0x353B34C
	0x0353B3A4 LDR X8, [X9 + 0x20]
	0x0353B3A8 MOV X0, X22
	0x0353B3AC MOV X1, X23
	0x0353B3B0 LDR X8, [X8 + 0xC0]
	0x0353B3B4 LDR X2, [X8 + 0x70]
	0x0353B3B8 BL 0x301BF90
	0x0353B3BC B 0x353B34C
	0x0353B3C0 ADRP X9, 0xBC1000
	0x0353B3C4 LDR X8, [X19]
	0x0353B3C8 LDR X9, [X9 + 0x138]
	0x0353B3CC LDR X2, [X9]
	0x0353B3D0 B 0x353B414
	0x0353B3D4 ADRP X8, 0xBB8000
	0x0353B3D8 LDR X8, [X8 + 0x758]
	0x0353B3DC ADD X1, X31, 0xC
	0x0353B3E0 LDR X0, [X8]
	0x0353B3E4 MOVZ W8, 0x200
	0x0353B3E8 STR W8, [X31 + 0xC]
	0x0353B3EC BL 0x1C16E04
	0x0353B3F0 ADRP X8, 0xBC1000
	0x0353B3F4 LDR X8, [X8 + 0x128]
	0x0353B3F8 MOV X1, X0
	0x0353B3FC MOV X2, X31
	0x0353B400 LDR X8, [X8]
	0x0353B404 MOV X0, X8
	0x0353B408 BL 0x321EFD0
	0x0353B40C LDR X8, [X19]
	0x0353B410 MOV X2, X0
	0x0353B414 LDR X9, [X8 + 0x218]
	0x0353B418 LDR X3, [X8 + 0x220]
	0x0353B41C MOVZ W1, 0x1
	0x0353B420 MOV X0, X19
	0x0353B424 BLR X9
	0x0353B428 MOV W0, W31
	0x0353B42C LDP X20, X19, [X31 + 0x60]
	0x0353B430 LDP X22, X21, [X31 + 0x50]
	0x0353B434 LDP X24, X23, [X31 + 0x40]
	0x0353B438 LDP X26, X25, [X31 + 0x30]
	0x0353B43C LDP X28, X27, [X31 + 0x20]
	0x0353B440 LDP X29, X30, [X31 + 0x10]
	0x0353B444 AND W0, W0, 0x1
	0x0353B448 ADD X31, X31, 0x70
	0x0353B44C RET
	0x0353B450 CBZ X22, 0x353B4BC
	0x0353B454 LDR W8, [X22 + 0x18]
	0x0353B458 CBZ W8, 0x353B4A8
	0x0353B45C ADRP X8, 0xBBA000
	0x0353B460 LDR X8, [X8 + 0xE78]
	0x0353B464 MOV X0, X22
	0x0353B468 LDR X1, [X8]
	0x0353B46C BL 0x301DDC4
	0x0353B470 LDR X8, [X19 + 0x10]
	0x0353B474 CBZ X8, 0x353B4BC
	0x0353B478 LDR X9, [X8]
	0x0353B47C MOV X21, X0
	0x0353B480 MOV X0, X8
	0x0353B484 MOV X1, X21
	0x0353B488 LDR X10, [X9 + 0x2D8]
	0x0353B48C LDR X3, [X9 + 0x2E0]
	0x0353B490 MOV X2, X20
	0x0353B494 BLR X10
	0x0353B498 ANDS W31, W0, 0x1
	0x0353B49C CSEL X8, X21, X31, NE

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xEA5000
	006 Move W8, [X20+3059]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {44}
	012 Move X0, 0xBFA000
	013 Move X0, [X0+2896]
	014 Call 0x1C17CF4
	015 Move X0, 0xBC2000
	016 Move X0, [X0+24]
	017 Call 0x1C17CF4
	018 Move X0, 0xBC2000
	019 Move X0, [X0+64]
	020 Call 0x1C17CF4
	021 Move X0, 0xBFA000
	022 Move X0, [X0+3240]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB9000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0xBC2000
	028 Move X0, [X0+80]
	029 Call 0x1C17CF4
	030 Move X0, 0xBC2000
	031 Move X0, [X0+88]
	032 Call 0x1C17CF4
	033 Move X0, 0xBC2000
	034 Move X0, [X0+96]
	035 Call 0x1C17CF4
	036 Move X0, 0xBC2000
	037 Move X0, [X0+104]
	038 Call 0x1C17CF4
	039 Move X0, 0xBC2000
	040 Move X0, [X0+112]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+3059], W8
	044 NotImplemented "Instruction STRH not yet implemented."
	045 Move W8, [X19+80]
	046 Move W2, [X19+128]
	047 Compare W8, 0
	048 JumpIfEqual {56}
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+48]
	051 Compare X8, 0
	052 JumpIfEqual {101}
	053 Move X8, [X8+40]
	054 Compare X8, 0
	055 JumpIfEqual {101}
	056 Move W8, [X19+56]
	057 Compare W8, 0
	058 JumpIfEqual {82}
	059 Move X8, 0xBC2000
	060 Move X8, [X8+80]
	061 Move W1, 231
	062 Move X0, X19
	063 Move X3, [X8]
	064 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {176}
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 And W31, W8, 255
	071 NotImplemented "Instruction STRH not yet implemented."
	072 Move X9, 0xBC2000
	073 Move X9, [X9+64]
	074 Add X0, X31, 60
	075 NotImplemented "Instruction STRH not yet implemented."
	076 Move X1, [X9]
	077 Call Nullable`1<ByteEnum>.get_Value, X0
	078 Move X8, [X19+16]
	079 Compare X8, 0
	080 JumpIfEqual {209}
	081 Move W6, W0
	082 Move X8, 0xBC2000
	083 Move X8, [X8+104]
	084 Move W1, 230
	085 Move X0, X19
	086 Move X3, [X8]
	087 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {176}
	092 Move W8, [X19+248]
	093 Move X0, [X19+16]
	094 Compare W8, 0
	095 JumpIfEqual {191}
	096 Move W8, [X19+128]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSET not yet implemented."
	099 Compare X0, 0
	100 JumpIfNotEqual {194}
	101 Move X8, 0xBB9000
	102 Move X8, [X8+2760]
	103 Move W1, 6
	104 Move X0, [X8]
	105 Call 0x1C17D6C
	106 Compare X0, 0
	107 JumpIfEqual {209}
	108 Move W8, [X0+24]
	109 Move X20, X0
	110 Compare W8, 0
	111 JumpIfEqual {208}
	112 Move X8, 0xBC2000
	113 Move X8, [X8+96]
	114 Move X9, 0xBFA000
	115 Move TEMP, 0
	116 Not TEMP
	117 Move X10, TEMP
	118 Add X0, X31, 24
	119 Move X8, [X8]
	120 Move X9, [X9+3240]
	121 Move X1, X31
	122 Move [X20+32], X8
	123 Move X8, [X9]
	124 Move W9, [X19+128]
	125 Move [X31+24], X8
	126 Move [X31+32], X10
	127 Move [X31+40], W9
	128 Call Enum.ToString, X0
	129 Move W8, [X20+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X20+40], X0
	133 Move X8, 0xBC2000
	134 Move X8, [X8+88]
	135 Move X8, [X8]
	136 Move [X20+48], X8
	137 Move X0, [X19+16]
	138 Compare X0, 0
	139 JumpIfEqual {209}
	140 Move X1, X31
	141 Call PhotonPeer.get_ServerAddress, X0
	142 Move W8, [X20+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move [X20+56], X0
	146 Move X8, 0xBC2000
	147 Move X8, [X8+112]
	148 Move X9, 0xBFA000
	149 Move TEMP, 0
	150 Not TEMP
	151 Move X10, TEMP
	152 Add X0, X31, 0
	153 Move X8, [X8]
	154 Move X9, [X9+2896]
	155 Move X1, X31
	156 Move [X20+64], X8
	157 Move X8, [X9]
	158 Move W9, [X19+144]
	159 Move [X31], X8
	160 Move [X31+8], X10
	161 Move [X31+16], W9
	162 Call Enum.ToString, X0
	163 Move W8, [X20+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X20+72], X0
	166 Move X0, X20
	167 Move X1, X31
	168 Call String.Concat, X0
	169 Move X8, [X19]
	170 Move X2, X0
	171 Move W1, 1
	172 Move X0, X19
	173 Move X9, [X8+536]
	174 Move X3, [X8+544]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move W0, W31
	177 Move X8, [X19+16]
	178 Compare X8, 0
	179 JumpIfEqual {209}
	180 Move W6, [X8+132]
	181 Move X9, [X8]
	182 Move W5, [X19+60]
	183 Move X4, [X19+320]
	184 Move X3, [X19+48]
	185 Move X2, [X19+24]
	186 Move X1, [X19+32]
	187 Move X10, [X9+760]
	188 Move X7, [X9+768]
	189 Move X0, X8
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move W5, W31
	192 Compare X0, 0
	193 JumpIfEqual {209}
	194 Move X8, [X0]
	195 Move X2, [X19+24]
	196 Move X1, [X19+32]
	197 Move X3, [X19+48]
	198 Move X4, [X19+320]
	199 Move X9, [X8+744]
	200 Move X6, [X8+752]
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X20, [X31+64]
	203 Move X19, [X31+72]
	204 Move X30, [X31+48]
	205 And W0, W0, 1
	206 Add X31, X31, 80
	207 Return X0
	208 Call 0x1C17F28
	209 Call 0x1C17F20

Method: System.Void Service()

Disassembly:
	0x0353C018 LDR X3, [X8 + 0x220]
	0x0353C01C MOVZ W1, 0x1
	0x0353C020 MOV X0, X19
	0x0353C024 BLR X9
	0x0353C028 LDP X20, X19, [X31 + 0x50]
	0x0353C02C LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move X0, [X0+16]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+488]
	006 Move X1, [X8+496]
	007 CallNoReturn X2
	008 Return 

Method: System.Boolean OpGetRegions()

Disassembly:
	0x0353C030 LDP X24, X23, [X31 + 0x30]
	0x0353C034 LDP X30, X25, [X31 + 0x20]
	0x0353C038 MOV W0, W31
	0x0353C03C ADD X31, X31, 0x60
	0x0353C040 RET
	0x0353C044 CBNZ X22, 0x353C084
	0x0353C048 CBNZ X21, 0x353C084
	0x0353C04C LDR X0, [X19 + 0x108]
	0x0353C050 CBZ X0, 0x353C084
	0x0353C054 LDR W8, [X0 + 0x18]
	0x0353C058 CMP W8, W20
	0x0353C05C B.NE 0x353C084
	0x0353C060 MOV X1, X23
	0x0353C064 LDP X20, X19, [X31 + 0x50]
	0x0353C068 LDP X22, X21, [X31 + 0x40]
	0x0353C06C LDP X24, X23, [X31 + 0x30]
	0x0353C070 LDP X30, X25, [X31 + 0x20]
	0x0353C074 MOV X2, X31
	0x0353C078 MOV X3, X31
	0x0353C07C ADD X31, X31, 0x60
	0x0353C080 B 0x353C0F8
	0x0353C084 LDR X8, [X19 + 0x10]
	0x0353C088 CBZ X8, 0x353C0F4
	0x0353C08C LDRB W8, [X8 + 0x40]
	0x0353C090 CBZ W8, 0x353C028
	0x0353C094 ADRP X8, 0xBF8000
	0x0353C098 LDR X8, [X8 + 0xB50]
	0x0353C09C LDR W9, [X19 + 0x90]
	0x0353C0A0 MOVN X10, 0x0
	0x0353C0A4 ADD X0, X31, 0x8
	0x0353C0A8 LDR X8, [X8]
	0x0353C0AC MOV X1, X31
	0x0353C0B0 STR W9, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEA4000
	006 Move X20, 0xBC1000
	007 Move W8, [X21+3060]
	008 Move X20, [X20+256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBC1000
	015 Move X0, [X0+256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3060], W8
	019 Move W2, [X19+128]
	020 Move X3, [X20]
	021 Move W1, 220
	022 Move X0, X19
	023 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {40}
	028 Move X0, [X19+16]
	029 Compare X0, 0
	030 JumpIfEqual {46}
	031 Move X8, [X0]
	032 Move X1, [X19+32]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X3, [X8+584]
	036 Move X2, [X8+592]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X3
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move W0, W31
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Boolean OpFindFriends(System.String[] friendsToFind, Photon.Realtime.FindFriendsOptions options = null)

Disassembly:
	0x0353C0B4 STP X8, X10, [X31 + 0x8]
	0x0353C0B8 BL 0x33B162C
	0x0353C0BC ADRP X8, 0xBC0000
	0x0353C0C0 LDR X8, [X8 + 0x1C0]
	0x0353C0C4 MOV X1, X0
	0x0353C0C8 MOV X2, X31
	0x0353C0CC LDR X8, [X8]
	0x0353C0D0 MOV X0, X8
	0x0353C0D4 BL 0x321B938
	0x0353C0D8 LDR X8, [X19]
	0x0353C0DC MOV X2, X0
	0x0353C0E0 B 0x353C014
	0x0353C0E4 ADRP X9, 0xBC0000
	0x0353C0E8 LDR X8, [X19]
	0x0353C0EC LDR X9, [X9 + 0x1C8]
	0x0353C0F0 B 0x353C010
	0x0353C0F4 BL 0x1C16F20
	0x0353C0F8 STR X30, [X31 - 0x40]!
	0x0353C0FC STP X24, X23, [X31 + 0x10]
	0x0353C100 STP X22, X21, [X31 + 0x20]
	0x0353C104 STP X20, X19, [X31 + 0x30]
	0x0353C108 ADRP X23, 0xEA3000
	0x0353C10C LDRB W8, [X23 + 0xC6D]
	0x0353C110 MOV X21, X3
	0x0353C114 MOV X22, X2
	0x0353C118 MOV X20, X1
	0x0353C11C MOV X19, X0
	0x0353C120 TBNZ X8, 0x0, 0x353C144
	0x0353C124 ADRP X0, 0xBBF000
	0x0353C128 LDR X0, [X0 + 0xD60]
	0x0353C12C BL 0x1C16CF4
	0x0353C130 ADRP X0, 0xBF8000
	0x0353C134 LDR X0, [X0 + 0xBA8]
	0x0353C138 BL 0x1C16CF4
	0x0353C13C MOVZ W8, 0x1
	0x0353C140 STRB W8, [X23 + 0xC6D]
	0x0353C144 CBZ X20, 0x353C254
	0x0353C148 ADRP X24, 0xBBF000
	0x0353C14C LDR X24, [X24 + 0xD60]
	0x0353C150 MOV X0, X20
	0x0353C154 LDR X1, [X24]
	0x0353C158 BL 0x2AA4E88
	0x0353C15C CBZ W0, 0x353C258
	0x0353C160 ADRP X23, 0xBF8000
	0x0353C164 LDR X23, [X23 + 0xBA8]
	0x0353C168 LDR X0, [X23]
	0x0353C16C LDR W8, [X0 + 0xE0]
	0x0353C170 CBNZ W8, 0x353C178
	0x0353C174 BL 0x1C16DFC
	0x0353C178 MOV X0, X20
	0x0353C17C BL 0x3537918
	0x0353C180 LDR X8, [X19 + 0x10]
	0x0353C184 MOV X20, X0
	0x0353C188 CBZ X8, 0x353C1F8
	0x0353C18C LDRB W8, [X8 + 0x68]
	0x0353C190 CBZ W8, 0x353C26C
	0x0353C194 CBZ X20, 0x353C2B8
	0x0353C198 LDR X1, [X24]
	0x0353C19C MOV X0, X20
	0x0353C1A0 BL 0x2AA4E88
	0x0353C1A4 CBZ W0, 0x353C258
	0x0353C1A8 LDR X0, [X23]
	0x0353C1AC LDR X21, [X19 + 0x38]
	0x0353C1B0 LDR W8, [X0 + 0xE0]
	0x0353C1B4 CBNZ W8, 0x353C1BC
	0x0353C1B8 BL 0x1C16DFC
	0x0353C1BC MOV X0, X21
	0x0353C1C0 MOV X1, X20
	0x0353C1C4 BL 0x3536AB8
	0x0353C1C8 LDR X0, [X19 + 0x38]
	0x0353C1CC BL 0x35380A8
	0x0353C1D0 LDR X8, [X19 + 0x10]
	0x0353C1D4 CBZ X8, 0x353C2B8
	0x0353C1D8 LDR X8, [X8 + 0x60]
	0x0353C1DC CBZ X8, 0x353C2B8
	0x0353C1E0 LDR X0, [X8 + 0xC0]
	0x0353C1E4 CBZ X0, 0x353C2B8
	0x0353C1E8 MOV X1, X19
	0x0353C1EC MOV X2, X20
	0x0353C1F0 BL 0x353C7E8
	0x0353C1F4 B 0x353C24C
	0x0353C1F8 LDRB W8, [X19 + 0x1C]
	0x0353C1FC CBZ W8, 0x353C254
	0x0353C200 CBZ X20, 0x353C2B8
	0x0353C204 LDR X1, [X24]
	0x0353C208 MOV X0, X20
	0x0353C20C BL 0x2AA4E88
	0x0353C210 MOV W8, W0
	0x0353C214 MOV W0, W31
	0x0353C218 CBNZ X21, 0x353C258
	0x0353C21C CBNZ X22, 0x353C258
	0x0353C220 CBZ W8, 0x353C258
	0x0353C224 LDR X0, [X23]
	0x0353C228 LDR X21, [X19 + 0x38]
	0x0353C22C LDR W8, [X0 + 0xE0]
	0x0353C230 CBNZ W8, 0x353C238
	0x0353C234 BL 0x1C16DFC
	0x0353C238 MOV X0, X21
	0x0353C23C MOV X1, X20
	0x0353C240 BL 0x3536AB8
	0x0353C244 LDR X0, [X19 + 0x38]
	0x0353C248 BL 0x35380A8
	0x0353C24C MOVZ W0, 0x1
	0x0353C250 B 0x353C258
	0x0353C254 MOV W0, W31
	0x0353C258 LDP X20, X19, [X31 + 0x30]
	0x0353C25C LDP X22, X21, [X31 + 0x20]
	0x0353C260 LDP X24, X23, [X31 + 0x10]
	0x0353C264 LDR X30, [X31], #0x40
	0x0353C268 RET
	0x0353C26C LDR X0, [X23]
	0x0353C270 LDR W8, [X0 + 0xE0]
	0x0353C274 CBNZ W8, 0x353C27C
	0x0353C278 BL 0x1C16DFC
	0x0353C27C MOV X0, X22
	0x0353C280 BL 0x3537918
	0x0353C284 LDR X8, [X19 + 0x10]
	0x0353C288 CBZ X8, 0x353C2B8
	0x0353C28C MOV X3, X0
	0x0353C290 LDR X0, [X8 + 0x60]
	0x0353C294 CBZ X0, 0x353C2B8
	0x0353C298 LDR W1, [X19 + 0x18]
	0x0353C29C MOV X2, X20
	0x0353C2A0 MOV X4, X21
	0x0353C2A4 LDP X20, X19, [X31 + 0x30]
	0x0353C2A8 LDP X22, X21, [X31 + 0x20]
	0x0353C2AC LDP X24, X23, [X31 + 0x10]
	0x0353C2B0 LDR X30, [X31], #0x40
	0x0353C2B4 B 0x353C2BC
	0x0353C2B8 BL 0x1C16F20
	0x0353C2BC STP X30, X25, [X31 - 0x40]!
	0x0353C2C0 STP X24, X23, [X31 + 0x10]
	0x0353C2C4 STP X22, X21, [X31 + 0x20]
	0x0353C2C8 STP X20, X19, [X31 + 0x30]
	0x0353C2CC ADRP X25, 0xEA3000
	0x0353C2D0 ADRP X24, 0xBC0000
	0x0353C2D4 LDRB W8, [X25 + 0xC01]
	0x0353C2D8 LDR X24, [X24 + 0x1D8]
	0x0353C2DC MOV X23, X4
	0x0353C2E0 MOV X22, X3
	0x0353C2E4 MOV X19, X2
	0x0353C2E8 MOV W21, W1
	0x0353C2EC MOV X20, X0
	0x0353C2F0 TBNZ X8, 0x0, 0x353C320
	0x0353C2F4 ADRP X0, 0xBBF000
	0x0353C2F8 LDR X0, [X0 + 0xD60]
	0x0353C2FC BL 0x1C16CF4
	0x0353C300 ADRP X0, 0xBC0000
	0x0353C304 LDR X0, [X0 + 0x1E0]
	0x0353C308 BL 0x1C16CF4
	0x0353C30C ADRP X0, 0xBC0000
	0x0353C310 LDR X0, [X0 + 0x1D8]
	0x0353C314 BL 0x1C16CF4
	0x0353C318 MOVZ W8, 0x1
	0x0353C31C STRB W8, [X25 + 0xC01]
	0x0353C320 LDR W2, [X20 + 0x80]
	0x0353C324 LDR X3, [X24]
	0x0353C328 MOVZ W1, 0xFC
	0x0353C32C MOV X0, X20
	0x0353C330 BL 0x353ACB8
	0x0353C334 TBZ X0, 0x0, 0x353C3B0
	0x0353C338 CBZ X19, 0x353C38C
	0x0353C33C ADRP X24, 0xBBF000
	0x0353C340 LDR X24, [X24 + 0xD60]
	0x0353C344 MOV X0, X19
	0x0353C348 LDR X1, [X24]
	0x0353C34C BL 0x2AA4E88
	0x0353C350 CBZ W0, 0x353C38C
	0x0353C354 LDR X0, [X20 + 0x10]
	0x0353C358 CBZ X0, 0x353C460
	0x0353C35C MOV W1, W21
	0x0353C360 MOV X2, X19
	0x0353C364 MOV X3, X22
	0x0353C368 MOV X4, X23
	0x0353C36C BL 0x353C464
	0x0353C370 TBZ X0, 0x0, 0x353C3B0
	0x0353C374 LDR X0, [X20 + 0x110]
	0x0353C378 CBZ X0, 0x353C460
	0x0353C37C LDRB W8, [X0 + 0x78]
	0x0353C380 CBZ W8, 0x353C3CC
	0x0353C384 MOVZ W23, 0x1
	0x0353C388 B 0x353C3B4
	0x0353C38C ADRP X9, 0xBC0000
	0x0353C390 LDR X8, [X20]
	0x0353C394 LDR X9, [X9 + 0x1E0]
	0x0353C398 MOVZ W1, 0x1
	0x0353C39C MOV X0, X20
	0x0353C3A0 LDR X3, [X8 + 0x220]
	0x0353C3A4 LDR X2, [X9]
	0x0353C3A8 LDR X9, [X8 + 0x218]
	0x0353C3AC BLR X9
	0x0353C3B0 MOV W23, W31
	0x0353C3B4 MOV W0, W23
	0x0353C3B8 LDP X20, X19, [X31 + 0x30]
	0x0353C3BC LDP X22, X21, [X31 + 0x20]
	0x0353C3C0 LDP X24, X23, [X31 + 0x10]
	0x0353C3C4 LDP X30, X25, [X31], #0x40
	0x0353C3C8 RET
	0x0353C3CC CMP W8, 0x0
	0x0353C3D0 CSET W8, EQ
	0x0353C3D4 CMP X22, 0x0
	0x0353C3D8 CSET W9, NE
	0x0353C3DC CBZ X22, 0x353C400
	0x0353C3E0 LDR X1, [X24]
	0x0353C3E4 MOV X0, X22
	0x0353C3E8 AND W23, W8, W9, 0x0
	0x0353C3EC BL 0x2AA4E88
	0x0353C3F0 CBNZ W0, 0x353C3B4
	0x0353C3F4 LDR X0, [X20 + 0x110]
	0x0353C3F8 CBNZ X0, 0x353C404
	0x0353C3FC B 0x353C460
	0x0353C400 MOVZ W23, 0x1
	0x0353C404 LDR X8, [X0]
	0x0353C408 MOV W1, W21
	0x0353C40C MOV W2, W31
	0x0353C410 LDP X9, X3, [X8 + 0x1D8]
	0x0353C414 BLR X9
	0x0353C418 CMP X0, 0x0
	0x0353C41C CSET W8, EQ
	0x0353C420 CSET W22, NE
	0x0353C424 CBZ X0, 0x353C458
	0x0353C428 LDR X8, [X0]
	0x0353C42C MOV X1, X19
	0x0353C430 MOV X21, X0
	0x0353C434 LDP X9, X2, [X8 + 0x178]
	0x0353C438 BLR X9
	0x0353C43C LDR X0, [X20 + 0xC0]
	0x0353C440 CBZ X0, 0x353C460
	0x0353C444 MOV X1, X21
	0x0353C448 MOV X2, X19
	0x0353C44C AND W23, W23, W22, 0x0
	0x0353C450 BL 0x353C7E8
	0x0353C454 B 0x353C3B4
	0x0353C458 AND W23, W8, W23, 0x0
	0x0353C45C B 0x353C3B4
	0x0353C460 BL 0x1C16F20
	0x0353C464 SUB X31, X31, 0x60
	0x0353C468 STR X30, [X31 + 0x10]
	0x0353C46C STP X26, X25, [X31 + 0x20]
	0x0353C470 STP X24, X23, [X31 + 0x30]
	0x0353C474 STP X22, X21, [X31 + 0x40]
	0x0353C478 STP X20, X19, [X31 + 0x50]
	0x0353C47C ADRP X24, 0xEA3000
	0x0353C480 LDRB W8, [X24 + 0xC4D]
	0x0353C484 MOV X20, X4
	0x0353C488 MOV X21, X3
	0x0353C48C MOV X23, X2
	0x0353C490 MOV W22, W1
	0x0353C494 MOV X19, X0
	0x0353C498 TBNZ X8, 0x0, 0x353C534
	0x0353C49C ADRP X0, 0xBB7000
	0x0353C4A0 LDR X0, [X0 + 0xB58]
	0x0353C4A4 BL 0x1C16CF4
	0x0353C4A8 ADRP X0, 0xBB8000
	0x0353C4AC LDR X0, [X0 + 0x9D8]
	0x0353C4B0 BL 0x1C16CF4
	0x0353C4B4 ADRP X0, 0xBC0000
	0x0353C4B8 LDR X0, [X0 + 0x538]
	0x0353C4BC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xEA4000
	015 Move X22, 0xBC1000
	016 Move W8, [X23+3061]
	017 Move X22, [X22+264]
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {72}
	025 Move X0, 0xBB8000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB9000
	029 Move X0, [X0+440]
	030 Call 0x1C17CF4
	031 Move X0, 0xBC1000
	032 Move X0, [X0+272]
	033 Call 0x1C17CF4
	034 Move X0, 0xBBA000
	035 Move X0, [X0+3704]
	036 Call 0x1C17CF4
	037 Move X0, 0xBC1000
	038 Move X0, [X0+280]
	039 Call 0x1C17CF4
	040 Move X0, 0xBB9000
	041 Move X0, [X0+456]
	042 Call 0x1C17CF4
	043 Move X0, 0xBB9000
	044 Move X0, [X0+464]
	045 Call 0x1C17CF4
	046 Move X0, 0xBC1000
	047 Move X0, [X0+264]
	048 Call 0x1C17CF4
	049 Move X0, 0xBC1000
	050 Move X0, [X0+288]
	051 Call 0x1C17CF4
	052 Move X0, 0xBC1000
	053 Move X0, [X0+296]
	054 Call 0x1C17CF4
	055 Move X0, 0xBC1000
	056 Move X0, [X0+304]
	057 Call 0x1C17CF4
	058 Move X0, 0xBC1000
	059 Move X0, [X0+312]
	060 Call 0x1C17CF4
	061 Move X0, 0xBC1000
	062 Move X0, [X0+320]
	063 Call 0x1C17CF4
	064 Move X0, 0xBC1000
	065 Move X0, [X0+328]
	066 Call 0x1C17CF4
	067 Move X0, 0xBC1000
	068 Move X0, [X0+336]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X23+3061], W8
	072 Move W2, [X19+128]
	073 Move X3, [X22]
	074 Move W1, 222
	075 Move X0, X19
	076 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {238}
	081 Move X8, [X19+312]
	082 Compare X8, 0
	083 JumpIfEqual {91}
	084 Move X9, 0xBC1000
	085 Move X8, [X19]
	086 Move X9, [X9+328]
	087 Move W1, 2
	088 Move X3, [X8+544]
	089 Move X2, [X9]
	090 Move X9, [X8+536]
	091 Compare X21, 0
	092 JumpIfEqual {213}
	093 Move X8, [X21+24]
	094 Compare X8, 0
	095 JumpIfEqual {213}
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, 0xBB9000
	098 Move X8, [X8+464]
	099 Move X0, [X8]
	100 Call 0x1C17F10
	101 Move X8, 0xBC1000
	102 Move W1, [X21+24]
	103 Move X8, [X8+280]
	104 Move X22, X0
	105 Move X2, [X8]
	106 Call List`1<Object>..ctor, X0, X1
	107 Move X8, [X21+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X26, 0xBB8000
	110 Move X27, 0xBC1000
	111 Move X28, 0xBC1000
	112 Move X29, 0xBC1000
	113 Move X26, [X26+1880]
	114 Move X27, [X27+288]
	115 Move X28, [X28+336]
	116 Move X29, [X29+272]
	117 Move X24, X31
	118 And X8, X8, 0
	119 Add X25, X21, 32
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X23, [X25]
	122 Move X1, X31
	123 Move X0, X23
	124 Call String.IsNullOrEmpty, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {138}
	129 Move X0, [X26]
	130 Add X1, X31, 12
	131 Move [X31+12], W24
	132 Call 0x1C17E04
	133 Move X8, [X27]
	134 Move X1, X0
	135 Move X2, X31
	136 Move X0, X8
	137 Call String.Format, X0, X1
	138 Move X8, [X19+48]
	139 Compare X8, 0
	140 JumpIfEqual {144}
	141 Move X1, [X8+48]
	142 Compare X23, 0
	143 JumpIfNotEqual {147}
	144 Move X1, X31
	145 Compare X23, 0
	146 JumpIfEqual {282}
	147 Move X0, X23
	148 Move X2, X31
	149 Call String.Equals, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {159}
	154 Move X0, [X26]
	155 Add X1, X31, 12
	156 Move [X31+12], W24
	157 Call 0x1C17E04
	158 Move X8, [X28]
	159 Compare X22, 0
	160 JumpIfEqual {282}
	161 Move X2, [X29]
	162 Move X0, X22
	163 Move X1, X23
	164 Call List`1<Object>.Contains, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {191}
	169 Move X0, [X26]
	170 Add X1, X31, 12
	171 Move [X31+12], W24
	172 Call 0x1C17E04
	173 Move X8, 0xBC1000
	174 Move X8, [X8+320]
	175 Move X8, [X8]
	176 Move X2, X0
	177 Move X0, X8
	178 Move X1, X23
	179 Move X3, X31
	180 Call String.Format, X0, X1, X2
	181 Move X8, [X19]
	182 Move X2, X0
	183 Move W1, 2
	184 Move X0, X19
	185 Move X9, [X8+536]
	186 Move X3, [X8+544]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move W8, [X21+24]
	189 Add X24, X24, 1
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X9, 0xBB9000
	192 Move W10, [X22+28]
	193 Move X8, [X22+16]
	194 Move X9, [X9+440]
	195 Add W10, W10, 1
	196 Move X9, [X9]
	197 Move [X22+28], W10
	198 Compare X8, 0
	199 JumpIfEqual {282}
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Move W11, [X8+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add W9, W10, 1
	204 Add X8, X8, X10
	205 Move [X22+24], W9
	206 Move [X8+32], X23
	207 Move X8, [X9+32]
	208 Move X0, X22
	209 Move X1, X23
	210 Move X8, [X8+192]
	211 Move X2, [X8+112]
	212 Call List`1<Object>.AddWithResize, X0, X1
	213 Move X9, 0xBC1000
	214 Move X8, [X19]
	215 Move X9, [X9+312]
	216 Move X2, [X9]
	217 Move X8, 0xBB8000
	218 Move X8, [X8+1880]
	219 Add X1, X31, 12
	220 Move X0, [X8]
	221 Move W8, 512
	222 Move [X31+12], W8
	223 Call 0x1C17E04
	224 Move X8, 0xBC1000
	225 Move X8, [X8+296]
	226 Move X1, X0
	227 Move X2, X31
	228 Move X8, [X8]
	229 Move X0, X8
	230 Call String.Format, X0, X1
	231 Move X8, [X19]
	232 Move X2, X0
	233 Move X9, [X8+536]
	234 Move X3, [X8+544]
	235 Move W1, 1
	236 Move X0, X19
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move W0, W31
	239 Move X20, [X31+96]
	240 Move X19, [X31+104]
	241 Move X22, [X31+80]
	242 Move X21, [X31+88]
	243 Move X24, [X31+64]
	244 Move X23, [X31+72]
	245 Move X26, [X31+48]
	246 Move X25, [X31+56]
	247 Move X28, [X31+32]
	248 Move X27, [X31+40]
	249 Move X29, [X31+16]
	250 Move X30, [X31+24]
	251 And W0, W0, 1
	252 Add X31, X31, 112
	253 Return X0
	254 Compare X22, 0
	255 JumpIfEqual {282}
	256 Move W8, [X22+24]
	257 Compare W8, 0
	258 JumpIfEqual {278}
	259 Move X8, 0xBBA000
	260 Move X8, [X8+3704]
	261 Move X0, X22
	262 Move X1, [X8]
	263 Call List`1<Object>.ToArray, X0
	264 Move X8, [X19+16]
	265 Compare X8, 0
	266 JumpIfEqual {282}
	267 Move X9, [X8]
	268 Move X21, X0
	269 Move X0, X8
	270 Move X1, X21
	271 Move X10, [X9+728]
	272 Move X3, [X9+736]
	273 Move X2, X20
	274 NotImplemented "Instruction BLR not yet implemented."
	275 And W31, W0, 1
	276 NotImplemented "Instruction CSEL not yet implemented."
	277 Move [X19+312], X8
	278 Move X9, 0xBC1000
	279 Move X8, [X19]
	280 Move X9, [X9+304]
	281 Call 0x1C17F28
	282 Call 0x1C17F20

Method: System.Boolean OpJoinLobby(Photon.Realtime.TypedLobby lobby)

Disassembly:
	0x0353C4C0 ADRP X0, 0xBC0000
	0x0353C4C4 LDR X0, [X0 + 0x540]
	0x0353C4C8 BL 0x1C16CF4
	0x0353C4CC ADRP X0, 0xBBF000
	0x0353C4D0 LDR X0, [X0 + 0xD60]
	0x0353C4D4 BL 0x1C16CF4
	0x0353C4D8 ADRP X0, 0xBC0000
	0x0353C4DC LDR X0, [X0 + 0x618]
	0x0353C4E0 BL 0x1C16CF4
	0x0353C4E4 ADRP X0, 0xBC0000
	0x0353C4E8 LDR X0, [X0 + 0x2B8]
	0x0353C4EC BL 0x1C16CF4
	0x0353C4F0 ADRP X0, 0xBBF000
	0x0353C4F4 LDR X0, [X0 + 0xBC8]
	0x0353C4F8 BL 0x1C16CF4
	0x0353C4FC ADRP X0, 0xBB7000
	0x0353C500 LDR X0, [X0 + 0x758]
	0x0353C504 BL 0x1C16CF4
	0x0353C508 ADRP X0, 0xBC0000
	0x0353C50C LDR X0, [X0 + 0x548]
	0x0353C510 BL 0x1C16CF4
	0x0353C514 ADRP X0, 0xBC0000
	0x0353C518 LDR X0, [X0 + 0x678]
	0x0353C51C BL 0x1C16CF4
	0x0353C520 ADRP X0, 0xBC0000
	0x0353C524 LDR X0, [X0 + 0x680]
	0x0353C528 BL 0x1C16CF4
	0x0353C52C MOVZ W8, 0x1
	0x0353C530 STRB W8, [X24 + 0xC4D]
	0x0353C534 LDRB W8, [X19 + 0x40]
	0x0353C538 CMP W8, 0x3
	0x0353C53C B.CC 0x353C5BC
	0x0353C540 LDR X24, [X19 + 0x48]
	0x0353C544 CBZ X24, 0x353C7E4
	0x0353C548 ADRP X9, 0xBBF000
	0x0353C54C LDR X8, [X24]
	0x0353C550 LDR X9, [X9 + 0xBC8]
	0x0353C554 ADRP X10, 0xBC0000
	0x0353C558 LDR X1, [X9]
	0x0353C55C LDR X10, [X10 + 0x680]
	0x0353C560 LDRH W9, [X8 + 0x12E]
	0x0353C564 LDR X25, [X10]
	0x0353C568 CBZ X9, 0x353C58C
	0x0353C56C LDR X10, [X8 + 0xB0]
	0x0353C570 ADD X10, X10, 0x8
	0x0353C574 LDUR X11, [X10 - 0x8]
	0x0353C578 CMP X11, X1
	0x0353C57C B.EQ 0x353C59C
	0x0353C580 SUBS X9, X9, 0x1
	0x0353C584 ADD X10, X10, 0x10
	0x0353C588 B.NE 0x353C574
	0x0353C58C MOV X0, X24
	0x0353C590 MOV W2, W31
	0x0353C594 BL 0x1C5C788
	0x0353C598 B 0x353C5A8
	0x0353C59C LDRSW X9, [X10]
	0x0353C5A0 ADD X8, X8, X9, 0x4, LSL
	0x0353C5A4 ADD X0, X8, 0x138
	0x0353C5A8 LDP X8, X3, [X0]
	0x0353C5AC MOVZ W1, 0x3
	0x0353C5B0 MOV X0, X24
	0x0353C5B4 MOV X2, X25
	0x0353C5B8 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEA4000
	007 Move X21, 0xBC1000
	008 Move W8, [X22+3062]
	009 Move X21, [X21+344]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xBF9000
	017 Move X0, [X0+3256]
	018 Call 0x1C17CF4
	019 Move X0, 0xBC1000
	020 Move X0, [X0+344]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3062], W8
	024 Move W2, [X19+128]
	025 Move X3, [X21]
	026 Move W1, 229
	027 Move X0, X19
	028 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {71}
	033 Compare X20, 0
	034 JumpIfNotEqual {45}
	035 Move X20, 0xBF9000
	036 Move X20, [X20+3256]
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move X20, [X8]
	045 Move X0, [X19+16]
	046 Compare X0, 0
	047 JumpIfEqual {78}
	048 Move X8, [X0]
	049 Move X1, X20
	050 Move X9, [X8+600]
	051 Move X2, [X8+608]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {71}
	057 Move W1, [X19+144]
	058 Move [X19+240], X20
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X19+152]
	061 Move W9, 3
	062 Move [X19+144], W9
	063 Compare X8, 0
	064 JumpIfEqual {70}
	065 Move X9, [X8+24]
	066 Move X0, [X8+64]
	067 Move X3, [X8+40]
	068 Move W2, 3
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move W0, 1
	071 Move W0, W31
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1C17F20

Method: System.Boolean OpLeaveLobby()

Disassembly:
	0x0353C5BC CMP W22, 0x1
	0x0353C5C0 B.LT 0x353C738
	0x0353C5C4 CBZ X23, 0x353C738
	0x0353C5C8 ADRP X25, 0xBBF000
	0x0353C5CC LDR X25, [X25 + 0xD60]
	0x0353C5D0 MOV X0, X23
	0x0353C5D4 LDR X1, [X25]
	0x0353C5D8 BL 0x2AA4E88
	0x0353C5DC CBZ W0, 0x353C738
	0x0353C5E0 ADRP X8, 0xBC0000
	0x0353C5E4 LDR X8, [X8 + 0x2B8]
	0x0353C5E8 LDR X0, [X8]
	0x0353C5EC BL 0x1C16F10
	0x0353C5F0 ADRP X8, 0xBC0000
	0x0353C5F4 LDR X8, [X8 + 0x540]
	0x0353C5F8 MOV X24, X0
	0x0353C5FC LDR X1, [X8]
	0x0353C600 BL 0x29D2C7C
	0x0353C604 CBZ X24, 0x353C7E4
	0x0353C608 ADRP X26, 0xBC0000
	0x0353C60C LDR X26, [X26 + 0x538]
	0x0353C610 MOVZ W1, 0xFB
	0x0353C614 MOV X0, X24
	0x0353C618 MOV X2, X23
	0x0353C61C LDR X3, [X26]
	0x0353C620 BL 0x29D3534
	0x0353C624 ADRP X8, 0xBB7000
	0x0353C628 LDR X8, [X8 + 0x758]
	0x0353C62C ADD X1, X31, 0x1C
	0x0353C630 STR W22, [X31 + 0x1C]
	0x0353C634 LDR X0, [X8]
	0x0353C638 BL 0x1C16E04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEA4000
	006 Move X20, 0xBC1000
	007 Move W8, [X21+3063]
	008 Move X20, [X20+360]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBC1000
	015 Move X0, [X0+360]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3063], W8
	019 Move W2, [X19+128]
	020 Move X3, [X20]
	021 Move W1, 228
	022 Move X0, X19
	023 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {39}
	028 Move X0, [X19+16]
	029 Compare X0, 0
	030 JumpIfEqual {45}
	031 Move X8, [X0]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, [X8+616]
	035 Move X1, [X8+624]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 CallNoReturn X2
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move W0, W31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Call 0x1C17F20

Method: System.Boolean OpJoinRandomRoom(Photon.Realtime.OpJoinRandomRoomParams opJoinRandomRoomParams = null)

Disassembly:
	0x0353C63C LDR X3, [X26]
	0x0353C640 MOV X2, X0
	0x0353C644 MOVZ W1, 0xFE
	0x0353C648 MOV X0, X24
	0x0353C64C BL 0x29D3534
	0x0353C650 ADRP X8, 0xBB7000
	0x0353C654 LDR X8, [X8 + 0xB58]
	0x0353C658 ADD X1, X31, 0x18
	0x0353C65C LDR X0, [X8]
	0x0353C660 MOVZ W8, 0x1
	0x0353C664 STRB W8, [X31 + 0x18]
	0x0353C668 BL 0x1C16E04
	0x0353C66C LDR X3, [X26]
	0x0353C670 MOV X2, X0
	0x0353C674 MOVZ W1, 0xFA
	0x0353C678 MOV X0, X24
	0x0353C67C BL 0x29D3534
	0x0353C680 CBZ X21, 0x353C6A8
	0x0353C684 LDR X1, [X25]
	0x0353C688 MOV X0, X21
	0x0353C68C BL 0x2AA4E88
	0x0353C690 CBZ W0, 0x353C6A8
	0x0353C694 LDR X3, [X26]
	0x0353C698 MOVZ W1, 0xE7
	0x0353C69C MOV X0, X24
	0x0353C6A0 MOV X2, X21
	0x0353C6A4 BL 0x29D3534
	0x0353C6A8 CBZ X20, 0x353C6F4
	0x0353C6AC MOV X0, X20
	0x0353C6B0 MOV X1, X31
	0x0353C6B4 BL 0x35512C0
	0x0353C6B8 TBZ X0, 0x0, 0x353C6F4
	0x0353C6BC ADRP X9, 0xBB8000
	0x0353C6C0 LDRB W8, [X20 + 0x10]
	0x0353C6C4 LDR X9, [X9 + 0x9D8]
	0x0353C6C8 ADD X1, X31, 0xC
	0x0353C6CC STRB W8, [X31 + 0xC]
	0x0353C6D0 LDR X0, [X9]
	0x0353C6D4 BL 0x1C16E04
	0x0353C6D8 ADRP X8, 0xBC0000
	0x0353C6DC LDR X8, [X8 + 0x618]
	0x0353C6E0 MOV X2, X0
	0x0353C6E4 MOVZ W1, 0xEA
	0x0353C6E8 MOV X0, X24
	0x0353C6EC LDR X3, [X8]
	0x0353C6F0 BL 0x29D3520
	0x0353C6F4 ADRP X20, 0xBC0000
	0x0353C6F8 LDR X20, [X20 + 0x548]
	0x0353C6FC LDR X0, [X20]
	0x0353C700 LDR W8, [X0 + 0xE0]
	0x0353C704 CBNZ W8, 0x353C710
	0x0353C708 BL 0x1C16DFC
	0x0353C70C LDR X0, [X20]
	0x0353C710 LDR X8, [X0 + 0xB8]
	0x0353C714 LDR X9, [X19]
	0x0353C718 MOVZ W1, 0xFC
	0x0353C71C MOV X0, X19
	0x0353C720 LDR X3, [X8]
	0x0353C724 LDR X8, [X9 + 0x228]
	0x0353C728 LDR X4, [X9 + 0x230]
	0x0353C72C MOV X2, X24
	0x0353C730 BLR X8
	0x0353C734 B 0x353C7C4
	0x0353C738 LDRB W8, [X19 + 0x40]
	0x0353C73C CMP W8, 0x3
	0x0353C740 B.CC 0x353C7C0
	0x0353C744 LDR X19, [X19 + 0x48]
	0x0353C748 CBZ X19, 0x353C7E4
	0x0353C74C ADRP X9, 0xBBF000
	0x0353C750 LDR X8, [X19]
	0x0353C754 LDR X9, [X9 + 0xBC8]
	0x0353C758 ADRP X10, 0xBC0000
	0x0353C75C LDR X1, [X9]
	0x0353C760 LDR X10, [X10 + 0x678]
	0x0353C764 LDRH W9, [X8 + 0x12E]
	0x0353C768 LDR X20, [X10]
	0x0353C76C CBZ X9, 0x353C790
	0x0353C770 LDR X10, [X8 + 0xB0]
	0x0353C774 ADD X10, X10, 0x8
	0x0353C778 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEA4000
	007 Move X21, 0xBC1000
	008 Move W8, [X22+3064]
	009 Move X21, [X21+368]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBF9000
	017 Move X0, [X0+3264]
	018 Call 0x1C17CF4
	019 Move X0, 0xBF9000
	020 Move X0, [X0+3272]
	021 Call 0x1C17CF4
	022 Move X0, 0xBC1000
	023 Move X0, [X0+368]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3064], W8
	027 Move W2, [X19+128]
	028 Move X3, [X21]
	029 Move W1, 225
	030 Move X0, X19
	031 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {88}
	036 Move X21, 0xBF9000
	037 Move X21, [X21+3264]
	038 Compare X20, 0
	039 JumpIfNotEqual {47}
	040 Move X8, 0xBF9000
	041 Move X8, [X8+3272]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X20, X0
	046 Call Object..ctor, X0
	047 Move X0, [X21]
	048 Call 0x1C17F10
	049 Move W8, 1
	050 Move X1, X31
	051 Move X21, X0
	052 Move [X0+48], W8
	053 Call Object..ctor, X0
	054 Move [X19+296], X21
	055 Compare X20, 0
	056 JumpIfEqual {95}
	057 Move X8, [X20+32]
	058 Move [X21+32], X8
	059 Move X8, [X20+48]
	060 Move [X21+56], X8
	061 Move X0, [X19+16]
	062 Compare X0, 0
	063 JumpIfEqual {95}
	064 Move X8, [X0]
	065 Move X1, X20
	066 Move X9, [X8+664]
	067 Move X2, [X8+672]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {88}
	073 Move W1, [X19+144]
	074 Move W8, 2
	075 Move [X19+292], W8
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X19+152]
	078 Move W9, 8
	079 Move [X19+144], W9
	080 Compare X8, 0
	081 JumpIfEqual {87}
	082 Move X9, [X8+24]
	083 Move X0, [X8+64]
	084 Move X3, [X8+40]
	085 Move W2, 8
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move W0, 1
	088 Move W0, W31
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Return X0
	095 Call 0x1C17F20

Method: System.Boolean OpJoinRandomOrCreateRoom(Photon.Realtime.OpJoinRandomRoomParams opJoinRandomRoomParams, Photon.Realtime.EnterRoomParams createRoomParams)

Disassembly:
	0x0353C794 MOV W2, W31
	0x0353C798 BL 0x1C5C788
	0x0353C79C B 0x353C7AC
	0x0353C7A0 LDRSW X9, [X10]
	0x0353C7A4 ADD X8, X8, X9, 0x4, LSL
	0x0353C7A8 ADD X0, X8, 0x138
	0x0353C7AC LDP X8, X3, [X0]
	0x0353C7B0 MOVZ W1, 0x3
	0x0353C7B4 MOV X0, X19
	0x0353C7B8 MOV X2, X20
	0x0353C7BC BLR X8
	0x0353C7C0 MOV W0, W31
	0x0353C7C4 LDP X20, X19, [X31 + 0x50]
	0x0353C7C8 LDP X22, X21, [X31 + 0x40]
	0x0353C7CC LDP X24, X23, [X31 + 0x30]
	0x0353C7D0 LDP X26, X25, [X31 + 0x20]
	0x0353C7D4 LDR X30, [X31 + 0x10]
	0x0353C7D8 AND W0, W0, 0x1
	0x0353C7DC ADD X31, X31, 0x60
	0x0353C7E0 RET
	0x0353C7E4 BL 0x1C16F20
	0x0353C7E8 SUB X31, X31, 0x60
	0x0353C7EC STP X30, X25, [X31 + 0x20]
	0x0353C7F0 STP X24, X23, [X31 + 0x30]
	0x0353C7F4 STP X22, X21, [X31 + 0x40]
	0x0353C7F8 STP X20, X19, [X31 + 0x50]
	0x0353C7FC ADRP X22, 0xEA3000
	0x0353C800 LDRB W8, [X22 + 0xC2F]
	0x0353C804 MOV X19, X2
	0x0353C808 MOV X20, X1
	0x0353C80C MOV X21, X0
	0x0353C810 TBNZ X8, 0x0, 0x353C858
	0x0353C814 ADRP X0, 0xBF8000
	0x0353C818 LDR X0, [X0 + 0xCD0]
	0x0353C81C BL 0x1C16CF4
	0x0353C820 ADRP X0, 0xBF8000
	0x0353C824 LDR X0, [X0 + 0xCD8]
	0x0353C828 BL 0x1C16CF4
	0x0353C82C ADRP X0, 0xBF8000
	0x0353C830 LDR X0, [X0 + 0xCE0]
	0x0353C834 BL 0x1C16CF4
	0x0353C838 ADRP X0, 0xBF8000
	0x0353C83C LDR X0, [X0 + 0xCE8]
	0x0353C840 BL 0x1C16CF4
	0x0353C844 ADRP X0, 0xBF8000
	0x0353C848 LDR X0, [X0 + 0xCF0]
	0x0353C84C BL 0x1C16CF4
	0x0353C850 MOVZ W8, 0x1
	0x0353C854 STRB W8, [X22 + 0xC2F]
	0x0353C858 STP X31, X31, [X31 + 0x8]
	0x0353C85C STR X31, [X31 + 0x18]
	0x0353C860 LDR X0, [X21 + 0x28]
	0x0353C864 CBZ X0, 0x353C944
	0x0353C868 ADRP X25, 0xBF8000
	0x0353C86C ADRP X23, 0xBF8000
	0x0353C870 ADRP X24, 0xBF8000
	0x0353C874 ADRP X22, 0xBF8000
	0x0353C878 LDR X25, [X25 + 0xCF0]
	0x0353C87C LDR X23, [X23 + 0xCD8]
	0x0353C880 LDR X24, [X24 + 0xCE8]
	0x0353C884 LDR X22, [X22 + 0xCD0]
	0x0353C888 BL 0x35440C4
	0x0353C88C LDR X1, [X25]
	0x0353C890 ADD X8, X31, 0x8
	0x0353C894 MOV X0, X21
	0x0353C898 BL 0x301CB58
	0x0353C89C LDR X1, [X23]
	0x0353C8A0 ADD X0, X31, 0x8
	0x0353C8A4 BL 0x2BC4350
	0x0353C8A8 TBZ X0, 0x0, 0x353C91C
	0x0353C8AC LDR X21, [X31 + 0x18]
	0x0353C8B0 CBZ X21, 0x353C940
	0x0353C8B4 LDR X8, [X21]
	0x0353C8B8 LDR X1, [X24]
	0x0353C8BC LDRH W9, [X8 + 0x12E]
	0x0353C8C0 CBZ X9, 0x353C8E4
	0x0353C8C4 LDR X10, [X8 + 0xB0]
	0x0353C8C8 ADD X10, X10, 0x8
	0x0353C8CC LDUR X11, [X10 - 0x8]
	0x0353C8D0 CMP X11, X1
	0x0353C8D4 B.EQ 0x353C8F4
	0x0353C8D8 SUBS X9, X9, 0x1
	0x0353C8DC ADD X10, X10, 0x10
	0x0353C8E0 B.NE 0x353C8CC
	0x0353C8E4 MOVZ W2, 0x3
	0x0353C8E8 MOV X0, X21
	0x0353C8EC BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xEA4000
	008 Move X22, 0xBC1000
	009 Move W8, [X23+3065]
	010 Move X22, [X22+376]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xBF9000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move X0, 0xBF9000
	022 Move X0, [X0+3272]
	023 Call 0x1C17CF4
	024 Move X0, 0xBC1000
	025 Move X0, [X0+376]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+3065], W8
	029 Move W2, [X19+128]
	030 Move X3, [X22]
	031 Move W1, 225
	032 Move X0, X19
	033 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {79}
	038 Compare X21, 0
	039 JumpIfEqual {87}
	040 Compare X20, 0
	041 JumpIfEqual {96}
	042 Move W8, 1
	043 Move [X20+49], W8
	044 Move [X19+296], X20
	045 Compare X21, 0
	046 JumpIfEqual {105}
	047 Move X8, [X21+32]
	048 Move [X20+32], X8
	049 Move X8, [X21+48]
	050 Move [X20+56], X8
	051 Move X0, [X19+16]
	052 Compare X0, 0
	053 JumpIfEqual {105}
	054 Move X8, [X0]
	055 Move X1, X21
	056 Move X2, X20
	057 Move X9, [X8+680]
	058 Move X3, [X8+688]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {79}
	064 Move W1, [X19+144]
	065 Move W8, 3
	066 Move [X19+292], W8
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X19+152]
	069 Move W9, 8
	070 Move [X19+144], W9
	071 Compare X8, 0
	072 JumpIfEqual {78}
	073 Move X9, [X8+24]
	074 Move X0, [X8+64]
	075 Move X3, [X8+40]
	076 Move W2, 8
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move W0, 1
	079 Move W0, W31
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Move X23, [X31+56]
	086 Return X0
	087 Move X8, 0xBF9000
	088 Move X8, [X8+3272]
	089 Move X0, [X8]
	090 Call 0x1C17F10
	091 Move X1, X31
	092 Move X21, X0
	093 Call Object..ctor, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {42}
	096 Move X8, 0xBF9000
	097 Move X8, [X8+3264]
	098 Move X0, [X8]
	099 Call 0x1C17F10
	100 Move W8, 1
	101 Move X1, X31
	102 Move X20, X0
	103 Move [X0+48], W8
	104 Call Object..ctor, X0
	105 Call 0x1C17F20

Method: System.Boolean OpCreateRoom(Photon.Realtime.EnterRoomParams enterRoomParams)

Disassembly:
	0x0353C8F0 B 0x353C904
	0x0353C8F4 LDR W9, [X10]
	0x0353C8F8 ADD W9, W9, 0x3
	0x0353C8FC ADD X8, X8, W9, 0x4, SXTW
	0x0353C900 ADD X0, X8, 0x138
	0x0353C904 LDP X8, X3, [X0]
	0x0353C908 MOV X0, X21
	0x0353C90C MOV X1, X20
	0x0353C910 MOV X2, X19
	0x0353C914 BLR X8
	0x0353C918 B 0x353C89C
	0x0353C91C LDR X1, [X22]
	0x0353C920 ADD X0, X31, 0x8
	0x0353C924 BL 0x2BC434C
	0x0353C928 LDP X20, X19, [X31 + 0x50]
	0x0353C92C LDP X22, X21, [X31 + 0x40]
	0x0353C930 LDP X24, X23, [X31 + 0x30]
	0x0353C934 LDP X30, X25, [X31 + 0x20]
	0x0353C938 ADD X31, X31, 0x60
	0x0353C93C RET
	0x0353C940 BL 0x1C16F20
	0x0353C944 BL 0x1C16F20
	0x0353C948 B 0x353C950
	0x0353C94C B 0x353C950
	0x0353C950 MOV X19, X0
	0x0353C954 CMP W1, 0x1
	0x0353C958 B.NE 0x353C984
	0x0353C95C MOV X0, X19
	0x0353C960 BL 0x3EB1AD0
	0x0353C964 LDR X20, [X0]
	0x0353C968 BL 0x3EB1AE0
	0x0353C96C LDR X1, [X22]
	0x0353C970 ADD X0, X31, 0x8
	0x0353C974 BL 0x2BC434C
	0x0353C978 CBZ X20, 0x353C928
	0x0353C97C MOV X0, X20
	0x0353C980 BL 0x1C16F18
	0x0353C984 MOV X20, X31
	0x0353C988 B 0x353C990
	0x0353C98C MOV X19, X0
	0x0353C990 LDR X1, [X22]
	0x0353C994 ADD X0, X31, 0x8
	0x0353C998 BL 0x2BC434C
	0x0353C99C CBNZ X20, 0x353C9A8
	0x0353C9A0 MOV X0, X19
	0x0353C9A4 BL 0x1D2C690
	0x0353C9A8 MOV X0, X20
	0x0353C9AC BL 0x1C16F18
	0x0353C9B0 BL 0x1990590
	0x0353C9B4 STR X30, [X31 - 0x40]!
	0x0353C9B8 STP X24, X23, [X31 + 0x10]
	0x0353C9BC STP X22, X21, [X31 + 0x20]
	0x0353C9C0 STP X20, X19, [X31 + 0x30]
	0x0353C9C4 ADRP X23, 0xEA3000
	0x0353C9C8 LDRB W8, [X23 + 0xC02]
	0x0353C9CC MOV X20, X3
	0x0353C9D0 MOV X21, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEA4000
	007 Move X21, 0xBC1000
	008 Move W8, [X22+3066]
	009 Move X21, [X21+384]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBC1000
	017 Move X0, [X0+384]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3066], W8
	021 Move W2, [X19+128]
	022 Move X3, [X21]
	023 Move W1, 227
	024 Move X0, X19
	025 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {63}
	030 Compare X20, 0
	031 JumpIfEqual {70}
	032 Move W8, [X19+128]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move [X20+48], W8
	036 Move [X19+296], X20
	037 Move X0, [X19+16]
	038 Compare X0, 0
	039 JumpIfEqual {70}
	040 Move X8, [X0]
	041 Move X1, X20
	042 Move X9, [X8+632]
	043 Move X2, [X8+640]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {63}
	049 Move W1, [X19+144]
	050 Move [X19+292], W31
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X19+152]
	053 Move W9, 8
	054 Move [X19+144], W9
	055 Compare X8, 0
	056 JumpIfEqual {62}
	057 Move X9, [X8+24]
	058 Move X0, [X8+64]
	059 Move X3, [X8+40]
	060 Move W2, 8
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move W0, 1
	063 Move W0, W31
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0
	070 Call 0x1C17F20

Method: System.Boolean OpJoinOrCreateRoom(Photon.Realtime.EnterRoomParams enterRoomParams)

Disassembly:
	0x0353C9D4 MOV X22, X1
	0x0353C9D8 MOV X19, X0
	0x0353C9DC TBNZ X8, 0x0, 0x353CA24
	0x0353C9E0 ADRP X0, 0xBBF000
	0x0353C9E4 LDR X0, [X0 + 0xD60]
	0x0353C9E8 BL 0x1C16CF4
	0x0353C9EC ADRP X0, 0xBF8000
	0x0353C9F0 LDR X0, [X0 + 0xBA8]
	0x0353C9F4 BL 0x1C16CF4
	0x0353C9F8 ADRP X0, 0xBBF000
	0x0353C9FC LDR X0, [X0 + 0xDA0]
	0x0353CA00 BL 0x1C16CF4
	0x0353CA04 ADRP X0, 0xBC0000
	0x0353CA08 LDR X0, [X0 + 0x210]
	0x0353CA0C BL 0x1C16CF4
	0x0353CA10 ADRP X0, 0xBC0000
	0x0353CA14 LDR X0, [X0 + 0x218]
	0x0353CA18 BL 0x1C16CF4
	0x0353CA1C MOVZ W8, 0x1
	0x0353CA20 STRB W8, [X23 + 0xC02]
	0x0353CA24 CBZ X22, 0x353CAB8
	0x0353CA28 ADRP X24, 0xBBF000
	0x0353CA2C LDR X24, [X24 + 0xD60]
	0x0353CA30 MOV X0, X22
	0x0353CA34 LDR X1, [X24]
	0x0353CA38 BL 0x2AA4E88
	0x0353CA3C CBZ W0, 0x353CAB8
	0x0353CA40 ADRP X8, 0xBBF000
	0x0353CA44 LDR X8, [X8 + 0xDA0]
	0x0353CA48 LDR X0, [X8]
	0x0353CA4C BL 0x1C16F10
	0x0353CA50 MOV X1, X31
	0x0353CA54 MOV X23, X0
	0x0353CA58 BL 0x34ED7D8
	0x0353CA5C ADRP X8, 0xBF8000
	0x0353CA60 LDR X8, [X8 + 0xBA8]
	0x0353CA64 LDR X0, [X8]
	0x0353CA68 LDR W8, [X0 + 0xE0]
	0x0353CA6C CBNZ W8, 0x353CA74
	0x0353CA70 BL 0x1C16DFC
	0x0353CA74 MOV X0, X23
	0x0353CA78 MOV X1, X22
	0x0353CA7C BL 0x3536EF8
	0x0353CA80 CBZ X23, 0x353CB04
	0x0353CA84 LDR X1, [X24]
	0x0353CA88 MOV X0, X23
	0x0353CA8C BL 0x2AA4E88
	0x0353CA90 CBZ W0, 0x353CAF4
	0x0353CA94 MOV X0, X19
	0x0353CA98 MOV X1, X23
	0x0353CA9C MOV X2, X21
	0x0353CAA0 MOV X3, X20
	0x0353CAA4 LDP X20, X19, [X31 + 0x30]
	0x0353CAA8 LDP X22, X21, [X31 + 0x20]
	0x0353CAAC LDP X24, X23, [X31 + 0x10]
	0x0353CAB0 LDR X30, [X31], #0x40
	0x0353CAB4 B 0x353CB08
	0x0353CAB8 ADRP X9, 0xBC0000
	0x0353CABC LDR X8, [X19]
	0x0353CAC0 LDR X9, [X9 + 0x210]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEA4000
	007 Move X21, 0xBC1000
	008 Move W8, [X22+3067]
	009 Move X21, [X21+392]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBC1000
	017 Move X0, [X0+392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3067], W8
	021 Move W2, [X19+128]
	022 Move X3, [X21]
	023 Move W1, 226
	024 Move X0, X19
	025 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {66}
	030 Compare X20, 0
	031 JumpIfEqual {73}
	032 Move W8, [X19+128]
	033 Move W9, 1
	034 Move [X20+49], W9
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move [X20+48], W8
	038 Move [X19+296], X20
	039 Move X0, [X19+16]
	040 Compare X0, 0
	041 JumpIfEqual {73}
	042 Move X8, [X0]
	043 Move X1, X20
	044 Move X9, [X8+648]
	045 Move X2, [X8+656]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {66}
	051 Move W1, [X19+144]
	052 Move W8, 4
	053 Move [X19+292], W8
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X19+152]
	056 Move W9, 8
	057 Move [X19+144], W9
	058 Compare X8, 0
	059 JumpIfEqual {65}
	060 Move X9, [X8+24]
	061 Move X0, [X8+64]
	062 Move X3, [X8+40]
	063 Move W2, 8
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W0, 1
	066 Move W0, W31
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Boolean OpJoinRoom(Photon.Realtime.EnterRoomParams enterRoomParams)

Disassembly:
	0x0353CAC4 LDR X2, [X9]
	0x0353CAC8 LDR X9, [X8 + 0x218]
	0x0353CACC LDR X3, [X8 + 0x220]
	0x0353CAD0 MOVZ W1, 0x1
	0x0353CAD4 MOV X0, X19
	0x0353CAD8 BLR X9
	0x0353CADC LDP X20, X19, [X31 + 0x30]
	0x0353CAE0 LDP X22, X21, [X31 + 0x20]
	0x0353CAE4 LDP X24, X23, [X31 + 0x10]
	0x0353CAE8 MOV W0, W31
	0x0353CAEC LDR X30, [X31], #0x40
	0x0353CAF0 RET
	0x0353CAF4 ADRP X9, 0xBC0000
	0x0353CAF8 LDR X8, [X19]
	0x0353CAFC LDR X9, [X9 + 0x218]
	0x0353CB00 B 0x353CAC4
	0x0353CB04 BL 0x1C16F20
	0x0353CB08 STR X30, [X31 - 0x40]!
	0x0353CB0C STP X24, X23, [X31 + 0x10]
	0x0353CB10 STP X22, X21, [X31 + 0x20]
	0x0353CB14 STP X20, X19, [X31 + 0x30]
	0x0353CB18 ADRP X24, 0xEA3000
	0x0353CB1C ADRP X23, 0xBC0000
	0x0353CB20 LDRB W8, [X24 + 0xC04]
	0x0353CB24 LDR X23, [X23 + 0x1D8]
	0x0353CB28 MOV X22, X3
	0x0353CB2C MOV X21, X2
	0x0353CB30 MOV X20, X1
	0x0353CB34 MOV X19, X0
	0x0353CB38 TBNZ X8, 0x0, 0x353CB68
	0x0353CB3C ADRP X0, 0xBBF000
	0x0353CB40 LDR X0, [X0 + 0xD60]
	0x0353CB44 BL 0x1C16CF4
	0x0353CB48 ADRP X0, 0xBC0000
	0x0353CB4C LDR X0, [X0 + 0x220]
	0x0353CB50 BL 0x1C16CF4
	0x0353CB54 ADRP X0, 0xBC0000
	0x0353CB58 LDR X0, [X0 + 0x1D8]
	0x0353CB5C BL 0x1C16CF4
	0x0353CB60 MOVZ W8, 0x1
	0x0353CB64 STRB W8, [X24 + 0xC04]
	0x0353CB68 LDR W2, [X19 + 0x80]
	0x0353CB6C LDR X3, [X23]
	0x0353CB70 MOVZ W1, 0xFC
	0x0353CB74 MOV X0, X19
	0x0353CB78 BL 0x353ACB8
	0x0353CB7C TBZ X0, 0x0, 0x353CBF4
	0x0353CB80 CBZ X20, 0x353CBD0
	0x0353CB84 ADRP X23, 0xBBF000
	0x0353CB88 LDR X23, [X23 + 0xD60]
	0x0353CB8C MOV X0, X20
	0x0353CB90 LDR X1, [X23]
	0x0353CB94 BL 0x2AA4E88
	0x0353CB98 CBZ W0, 0x353CBD0
	0x0353CB9C LDR X0, [X19 + 0x10]
	0x0353CBA0 CBZ X0, 0x353CC6C
	0x0353CBA4 MOV X1, X20
	0x0353CBA8 MOV X2, X21
	0x0353CBAC MOV X3, X22
	0x0353CBB0 BL 0x353CD00
	0x0353CBB4 TBZ X0, 0x0, 0x353CBF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEA4000
	007 Move X21, 0xBC1000
	008 Move W8, [X22+3068]
	009 Move X21, [X21+400]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBC1000
	017 Move X0, [X0+400]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3068], W8
	021 Move W2, [X19+128]
	022 Move X3, [X21]
	023 Move W1, 226
	024 Move X0, X19
	025 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {67}
	030 Compare X20, 0
	031 JumpIfEqual {74}
	032 Move W8, [X19+128]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move [X20+48], W8
	036 Move [X19+296], X20
	037 Move X0, [X19+16]
	038 Compare X0, 0
	039 JumpIfEqual {74}
	040 Move X8, [X0]
	041 Move X1, X20
	042 Move X9, [X8+648]
	043 Move X2, [X8+656]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {67}
	049 Move W8, [X20+49]
	050 Move W1, [X19+144]
	051 Move W9, 4
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSINC not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X19+292], W8
	056 Move X8, [X19+152]
	057 Move W9, 8
	058 Move [X19+144], W9
	059 Compare X8, 0
	060 JumpIfEqual {66}
	061 Move X9, [X8+24]
	062 Move X0, [X8+64]
	063 Move X3, [X8+40]
	064 Move W2, 8
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W0, 1
	067 Move W0, W31
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Boolean OpRejoinRoom(System.String roomName)

Disassembly:
	0x0353CBB8 LDR X0, [X19 + 0x110]
	0x0353CBBC CBZ X0, 0x353CC6C
	0x0353CBC0 LDRB W8, [X0 + 0x78]
	0x0353CBC4 CBZ W8, 0x353CC10
	0x0353CBC8 MOVZ W22, 0x1
	0x0353CBCC B 0x353CBF8
	0x0353CBD0 ADRP X9, 0xBC0000
	0x0353CBD4 LDR X8, [X19]
	0x0353CBD8 LDR X9, [X9 + 0x220]
	0x0353CBDC MOVZ W1, 0x1
	0x0353CBE0 MOV X0, X19
	0x0353CBE4 LDR X3, [X8 + 0x220]
	0x0353CBE8 LDR X2, [X9]
	0x0353CBEC LDR X9, [X8 + 0x218]
	0x0353CBF0 BLR X9
	0x0353CBF4 MOV W22, W31
	0x0353CBF8 MOV W0, W22
	0x0353CBFC LDP X20, X19, [X31 + 0x30]
	0x0353CC00 LDP X22, X21, [X31 + 0x20]
	0x0353CC04 LDP X24, X23, [X31 + 0x10]
	0x0353CC08 LDR X30, [X31], #0x40
	0x0353CC0C RET
	0x0353CC10 CMP W8, 0x0
	0x0353CC14 CSET W8, EQ
	0x0353CC18 CMP X21, 0x0
	0x0353CC1C CSET W9, NE
	0x0353CC20 CBZ X21, 0x353CC44
	0x0353CC24 LDR X1, [X23]
	0x0353CC28 MOV X0, X21
	0x0353CC2C AND W22, W8, W9, 0x0
	0x0353CC30 BL 0x2AA4E88
	0x0353CC34 CBNZ W0, 0x353CBF8
	0x0353CC38 LDR X0, [X19 + 0x110]
	0x0353CC3C CBNZ X0, 0x353CC48
	0x0353CC40 B 0x353CC6C
	0x0353CC44 MOVZ W22, 0x1
	0x0353CC48 LDR X8, [X0]
	0x0353CC4C MOV X1, X20
	0x0353CC50 LDP X9, X2, [X8 + 0x178]
	0x0353CC54 BLR X9
	0x0353CC58 LDR X0, [X19 + 0xC0]
	0x0353CC5C CBZ X0, 0x353CC6C
	0x0353CC60 MOV X1, X20
	0x0353CC64 BL 0x353D038
	0x0353CC68 B 0x353CBF8
	0x0353CC6C BL 0x1C16F20
	0x0353CC70 STP X30, X23, [X31 - 0x30]!
	0x0353CC74 STP X22, X21, [X31 + 0x10]
	0x0353CC78 STP X20, X19, [X31 + 0x20]
	0x0353CC7C ADRP X22, 0xEA3000
	0x0353CC80 ADRP X23, 0xBBF000
	0x0353CC84 LDRB W8, [X22 + 0xC03]
	0x0353CC88 LDR X23, [X23 + 0xDA0]
	0x0353CC8C MOV X20, X2
	0x0353CC90 MOV W21, W1
	0x0353CC94 MOV X19, X0
	0x0353CC98 TBNZ X8, 0x0, 0x353CCB0
	0x0353CC9C ADRP X0, 0xBBF000
	0x0353CCA0 LDR X0, [X0 + 0xDA0]
	0x0353CCA4 BL 0x1C16CF4
	0x0353CCA8 MOVZ W8, 0x1
	0x0353CCAC STRB W8, [X22 + 0xC03]
	0x0353CCB0 LDR X0, [X23]
	0x0353CCB4 BL 0x1C16F10
	0x0353CCB8 MOV X1, X31
	0x0353CCBC MOV X22, X0
	0x0353CCC0 BL 0x34ED7D8
	0x0353CCC4 CBZ X22, 0x353CCFC
	0x0353CCC8 MOV X0, X22
	0x0353CCCC MOV W1, W21
	0x0353CCD0 MOV X2, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEA4000
	007 Move X21, 0xBC1000
	008 Move W8, [X22+3069]
	009 Move X21, [X21+408]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xBF9000
	017 Move X0, [X0+3264]
	018 Call 0x1C17CF4
	019 Move X0, 0xBC1000
	020 Move X0, [X0+408]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3069], W8
	024 Move W2, [X19+128]
	025 Move X3, [X21]
	026 Move W1, 226
	027 Move X0, X19
	028 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {77}
	033 Move X9, 0xBF9000
	034 Move W8, [X19+128]
	035 Move X9, [X9+3264]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X9]
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Call 0x1C17F10
	040 Move W8, 1
	041 Move X1, X31
	042 Move X21, X0
	043 Move [X0+48], W8
	044 Call Object..ctor, X0
	045 Move W8, 3
	046 Move [X19+296], X21
	047 Move [X21+16], X20
	048 Move [X21+48], W22
	049 Move [X21+49], W8
	050 Move X0, [X19+16]
	051 Compare X0, 0
	052 JumpIfEqual {84}
	053 Move X8, [X0]
	054 Move X1, X21
	055 Move X9, [X8+648]
	056 Move X2, [X8+656]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {77}
	062 Move W1, [X19+144]
	063 Move W0, 1
	064 Move [X19+292], W0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X19+152]
	067 Move W9, 8
	068 Move [X19+144], W9
	069 Compare X8, 0
	070 JumpIfEqual {76}
	071 Move X9, [X8+24]
	072 Move X0, [X8+64]
	073 Move X3, [X8+40]
	074 Move W2, 8
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move W0, 1
	077 Move W0, W31
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return X0
	084 Call 0x1C17F20

Method: System.Boolean OpLeaveRoom(System.Boolean becomeInactive, System.Boolean sendAuthCookie = False)

Disassembly:
	0x0353CCD4 MOV X3, X31
	0x0353CCD8 BL 0x34ED9F4
	0x0353CCDC MOV X0, X19
	0x0353CCE0 MOV X1, X22
	0x0353CCE4 LDP X20, X19, [X31 + 0x20]
	0x0353CCE8 LDP X22, X21, [X31 + 0x10]
	0x0353CCEC MOV X2, X31
	0x0353CCF0 MOV X3, X31
	0x0353CCF4 LDP X30, X23, [X31], #0x30
	0x0353CCF8 B 0x353CB08
	0x0353CCFC BL 0x1C16F20
	0x0353CD00 SUB X31, X31, 0x50
	0x0353CD04 STP X30, X25, [X31 + 0x10]
	0x0353CD08 STP X24, X23, [X31 + 0x20]
	0x0353CD0C STP X22, X21, [X31 + 0x30]
	0x0353CD10 STP X20, X19, [X31 + 0x40]
	0x0353CD14 ADRP X23, 0xEA3000
	0x0353CD18 LDRB W8, [X23 + 0xC50]
	0x0353CD1C MOV X20, X3
	0x0353CD20 MOV X21, X2
	0x0353CD24 MOV X22, X1
	0x0353CD28 MOV X19, X0
	0x0353CD2C TBNZ X8, 0x0, 0x353CDBC
	0x0353CD30 ADRP X0, 0xBB7000
	0x0353CD34 LDR X0, [X0 + 0xB58]
	0x0353CD38 BL 0x1C16CF4
	0x0353CD3C ADRP X0, 0xBB8000
	0x0353CD40 LDR X0, [X0 + 0x9D8]
	0x0353CD44 BL 0x1C16CF4
	0x0353CD48 ADRP X0, 0xBC0000
	0x0353CD4C LDR X0, [X0 + 0x538]
	0x0353CD50 BL 0x1C16CF4
	0x0353CD54 ADRP X0, 0xBC0000
	0x0353CD58 LDR X0, [X0 + 0x540]
	0x0353CD5C BL 0x1C16CF4
	0x0353CD60 ADRP X0, 0xBBF000
	0x0353CD64 LDR X0, [X0 + 0xD60]
	0x0353CD68 BL 0x1C16CF4
	0x0353CD6C ADRP X0, 0xBC0000
	0x0353CD70 LDR X0, [X0 + 0x618]
	0x0353CD74 BL 0x1C16CF4
	0x0353CD78 ADRP X0, 0xBC0000
	0x0353CD7C LDR X0, [X0 + 0x2B8]
	0x0353CD80 BL 0x1C16CF4
	0x0353CD84 ADRP X0, 0xBBF000
	0x0353CD88 LDR X0, [X0 + 0xBC8]
	0x0353CD8C BL 0x1C16CF4
	0x0353CD90 ADRP X0, 0xBC0000
	0x0353CD94 LDR X0, [X0 + 0x548]
	0x0353CD98 BL 0x1C16CF4
	0x0353CD9C ADRP X0, 0xBC0000
	0x0353CDA0 LDR X0, [X0 + 0x688]
	0x0353CDA4 BL 0x1C16CF4
	0x0353CDA8 ADRP X0, 0xBC0000
	0x0353CDAC LDR X0, [X0 + 0x690]
	0x0353CDB0 BL 0x1C16CF4
	0x0353CDB4 MOVZ W8, 0x1
	0x0353CDB8 STRB W8, [X23 + 0xC50]
	0x0353CDBC LDRB W8, [X19 + 0x40]
	0x0353CDC0 CMP W8, 0x3
	0x0353CDC4 B.CC 0x353CE44

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xEA4000
	008 Move X22, 0xBC1000
	009 Move W8, [X23+3070]
	010 Move X22, [X22+416]
	011 Move W19, W2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xBBA000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move X0, 0xBC1000
	022 Move X0, [X0+416]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3070], W8
	026 Move W2, [X21+128]
	027 Move X3, [X22]
	028 Move W1, 254
	029 Move X0, X21
	030 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {69}
	035 Move W1, [X21+144]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X21+152]
	038 Move W9, 10
	039 Move [X21+144], W9
	040 Compare X8, 0
	041 JumpIfEqual {47}
	042 Move X9, [X8+24]
	043 Move X0, [X8+64]
	044 Move X3, [X8+40]
	045 Move W2, 10
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, 0xBBA000
	048 Move X8, [X8+632]
	049 Move X0, [X21+16]
	050 Move X8, [X8]
	051 Move X8, [X8+184]
	052 Move X8, [X8]
	053 Move [X21+296], X31
	054 Move [X21+120], X8
	055 Compare X0, 0
	056 JumpIfEqual {77}
	057 Move X8, [X0]
	058 And W1, W20, 1
	059 And W2, W19, 1
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X4, [X8+696]
	063 Move X3, [X8+704]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 CallNoReturn X4
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move W0, W31
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return X0
	077 Call 0x1C17F20

Method: System.Boolean OpGetGameList(Photon.Realtime.TypedLobby typedLobby, System.String sqlLobbyFilter)

Disassembly:
	0x0353CDC8 LDR X23, [X19 + 0x48]
	0x0353CDCC CBZ X23, 0x353D034
	0x0353CDD0 ADRP X9, 0xBBF000
	0x0353CDD4 LDR X8, [X23]
	0x0353CDD8 LDR X9, [X9 + 0xBC8]
	0x0353CDDC ADRP X10, 0xBC0000
	0x0353CDE0 LDR X1, [X9]
	0x0353CDE4 LDR X10, [X10 + 0x688]
	0x0353CDE8 LDRH W9, [X8 + 0x12E]
	0x0353CDEC LDR X24, [X10]
	0x0353CDF0 CBZ X9, 0x353CE14
	0x0353CDF4 LDR X10, [X8 + 0xB0]
	0x0353CDF8 ADD X10, X10, 0x8
	0x0353CDFC LDUR X11, [X10 - 0x8]
	0x0353CE00 CMP X11, X1
	0x0353CE04 B.EQ 0x353CE24
	0x0353CE08 SUBS X9, X9, 0x1
	0x0353CE0C ADD X10, X10, 0x10
	0x0353CE10 B.NE 0x353CDFC
	0x0353CE14 MOV X0, X23
	0x0353CE18 MOV W2, W31
	0x0353CE1C BL 0x1C5C788
	0x0353CE20 B 0x353CE30
	0x0353CE24 LDRSW X9, [X10]
	0x0353CE28 ADD X8, X8, X9, 0x4, LSL
	0x0353CE2C ADD X0, X8, 0x138
	0x0353CE30 LDP X8, X3, [X0]
	0x0353CE34 MOVZ W1, 0x3
	0x0353CE38 MOV X0, X23
	0x0353CE3C MOV X2, X24
	0x0353CE40 BLR X8
	0x0353CE44 CBZ X22, 0x353CF8C
	0x0353CE48 ADRP X24, 0xBBF000
	0x0353CE4C LDR X24, [X24 + 0xD60]
	0x0353CE50 MOV X0, X22
	0x0353CE54 LDR X1, [X24]
	0x0353CE58 BL 0x2AA4E88
	0x0353CE5C CBZ W0, 0x353CF8C
	0x0353CE60 ADRP X8, 0xBC0000
	0x0353CE64 LDR X8, [X8 + 0x2B8]
	0x0353CE68 LDR X0, [X8]
	0x0353CE6C BL 0x1C16F10
	0x0353CE70 ADRP X8, 0xBC0000
	0x0353CE74 LDR X8, [X8 + 0x540]
	0x0353CE78 MOV X23, X0
	0x0353CE7C LDR X1, [X8]
	0x0353CE80 BL 0x29D2C7C
	0x0353CE84 CBZ X23, 0x353D034
	0x0353CE88 ADRP X25, 0xBC0000
	0x0353CE8C LDR X25, [X25 + 0x538]
	0x0353CE90 MOVZ W1, 0xFB
	0x0353CE94 MOV X0, X23
	0x0353CE98 MOV X2, X22
	0x0353CE9C LDR X3, [X25]
	0x0353CEA0 BL 0x29D3534
	0x0353CEA4 ADRP X8, 0xBB7000
	0x0353CEA8 LDR X8, [X8 + 0xB58]
	0x0353CEAC ADD X1, X31, 0xC
	0x0353CEB0 LDR X0, [X8]
	0x0353CEB4 MOVZ W8, 0x1
	0x0353CEB8 STRB W8, [X31 + 0xC]
	0x0353CEBC BL 0x1C16E04
	0x0353CEC0 LDR X3, [X25]
	0x0353CEC4 MOV X2, X0
	0x0353CEC8 MOVZ W1, 0xFA
	0x0353CECC MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xEA4000
	008 Move X22, 0xBC1000
	009 Move W8, [X23+3071]
	010 Move X22, [X22+424]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xBC1000
	019 Move X0, [X0+432]
	020 Call 0x1C17CF4
	021 Move X0, 0xBC1000
	022 Move X0, [X0+440]
	023 Call 0x1C17CF4
	024 Move X0, 0xBC1000
	025 Move X0, [X0+424]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+3071], W8
	029 Move W2, [X19+128]
	030 Move X3, [X22]
	031 Move W1, 217
	032 Move X0, X19
	033 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {76}
	038 Move X0, X20
	039 Move X1, X31
	040 Call String.IsNullOrEmpty, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {48}
	045 Move X9, 0xBC1000
	046 Move X8, [X19]
	047 Move X9, [X9+432]
	048 Compare X21, 0
	049 JumpIfEqual {84}
	050 Move W8, [X21+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X19+16]
	053 Compare X0, 0
	054 JumpIfEqual {84}
	055 Move X8, [X0]
	056 Move X1, X21
	057 Move X2, X20
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X4, [X8+712]
	061 Move X3, [X8+720]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 CallNoReturn X4
	067 Move X9, 0xBC1000
	068 Move X8, [X19]
	069 Move X9, [X9+440]
	070 Move X2, [X9]
	071 Move X9, [X8+536]
	072 Move X3, [X8+544]
	073 Move W1, 1
	074 Move X0, X19
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move W0, W31
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Return X0
	084 Call 0x1C17F20

Method: System.Boolean OpSetCustomPropertiesOfActor(System.Int32 actorNr, ExitGames.Client.Photon.Hashtable propertiesToSet, ExitGames.Client.Photon.Hashtable expectedProperties = null, Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x0353CED0 BL 0x29D3534
	0x0353CED4 CBZ X21, 0x353CEFC
	0x0353CED8 LDR X1, [X24]
	0x0353CEDC MOV X0, X21
	0x0353CEE0 BL 0x2AA4E88
	0x0353CEE4 CBZ W0, 0x353CEFC
	0x0353CEE8 LDR X3, [X25]
	0x0353CEEC MOVZ W1, 0xE7
	0x0353CEF0 MOV X0, X23
	0x0353CEF4 MOV X2, X21
	0x0353CEF8 BL 0x29D3534
	0x0353CEFC CBZ X20, 0x353CF48
	0x0353CF00 MOV X0, X20
	0x0353CF04 MOV X1, X31
	0x0353CF08 BL 0x35512C0
	0x0353CF0C TBZ X0, 0x0, 0x353CF48
	0x0353CF10 ADRP X9, 0xBB8000
	0x0353CF14 LDRB W8, [X20 + 0x10]
	0x0353CF18 LDR X9, [X9 + 0x9D8]
	0x0353CF1C ADD X1, X31, 0x8
	0x0353CF20 STRB W8, [X31 + 0x8]
	0x0353CF24 LDR X0, [X9]
	0x0353CF28 BL 0x1C16E04
	0x0353CF2C ADRP X8, 0xBC0000
	0x0353CF30 LDR X8, [X8 + 0x618]
	0x0353CF34 MOV X2, X0
	0x0353CF38 MOVZ W1, 0xEA
	0x0353CF3C MOV X0, X23
	0x0353CF40 LDR X3, [X8]
	0x0353CF44 BL 0x29D3520
	0x0353CF48 ADRP X20, 0xBC0000
	0x0353CF4C LDR X20, [X20 + 0x548]
	0x0353CF50 LDR X0, [X20]
	0x0353CF54 LDR W8, [X0 + 0xE0]
	0x0353CF58 CBNZ W8, 0x353CF64
	0x0353CF5C BL 0x1C16DFC
	0x0353CF60 LDR X0, [X20]
	0x0353CF64 LDR X8, [X0 + 0xB8]
	0x0353CF68 LDR X9, [X19]
	0x0353CF6C MOVZ W1, 0xFC
	0x0353CF70 MOV X0, X19
	0x0353CF74 LDR X3, [X8]
	0x0353CF78 LDR X8, [X9 + 0x228]
	0x0353CF7C LDR X4, [X9 + 0x230]
	0x0353CF80 MOV X2, X23
	0x0353CF84 BLR X8
	0x0353CF88 B 0x353D018
	0x0353CF8C LDRB W8, [X19 + 0x40]
	0x0353CF90 CMP W8, 0x3
	0x0353CF94 B.CC 0x353D014
	0x0353CF98 LDR X19, [X19 + 0x48]
	0x0353CF9C CBZ X19, 0x353D034
	0x0353CFA0 ADRP X9, 0xBBF000
	0x0353CFA4 LDR X8, [X19]
	0x0353CFA8 LDR X9, [X9 + 0xBC8]
	0x0353CFAC ADRP X10, 0xBC0000
	0x0353CFB0 LDR X1, [X9]
	0x0353CFB4 LDR X10, [X10 + 0x690]
	0x0353CFB8 LDRH W9, [X8 + 0x12E]
	0x0353CFBC LDR X20, [X10]
	0x0353CFC0 CBZ X9, 0x353CFE4
	0x0353CFC4 LDR X10, [X8 + 0xB0]
	0x0353CFC8 ADD X10, X10, 0x8
	0x0353CFCC LDUR X11, [X10 - 0x8]
	0x0353CFD0 CMP X11, X1
	0x0353CFD4 B.EQ 0x353CFF4
	0x0353CFD8 SUBS X9, X9, 0x1
	0x0353CFDC ADD X10, X10, 0x10
	0x0353CFE0 B.NE 0x353CFCC
	0x0353CFE4 MOV X0, X19
	0x0353CFE8 MOV W2, W31
	0x0353CFEC BL 0x1C5C788
	0x0353CFF0 B 0x353D000
	0x0353CFF4 LDRSW X9, [X10]
	0x0353CFF8 ADD X8, X8, X9, 0x4, LSL
	0x0353CFFC ADD X0, X8, 0x138
	0x0353D000 LDP X8, X3, [X0]
	0x0353D004 MOVZ W1, 0x3
	0x0353D008 MOV X0, X19
	0x0353D00C MOV X2, X20
	0x0353D010 BLR X8
	0x0353D014 MOV W0, W31
	0x0353D018 LDP X20, X19, [X31 + 0x40]
	0x0353D01C LDP X22, X21, [X31 + 0x30]
	0x0353D020 LDP X24, X23, [X31 + 0x20]
	0x0353D024 LDP X30, X25, [X31 + 0x10]
	0x0353D028 AND W0, W0, 0x1
	0x0353D02C ADD X31, X31, 0x50
	0x0353D030 RET
	0x0353D034 BL 0x1C16F20
	0x0353D038 SUB X31, X31, 0x60
	0x0353D03C STR X30, [X31 + 0x20]
	0x0353D040 STP X24, X23, [X31 + 0x30]
	0x0353D044 STP X22, X21, [X31 + 0x40]
	0x0353D048 STP X20, X19, [X31 + 0x50]
	0x0353D04C ADRP X21, 0xEA2000
	0x0353D050 LDRB W8, [X21 + 0xC2E]
	0x0353D054 MOV X19, X1
	0x0353D058 MOV X20, X0
	0x0353D05C TBNZ X8, 0x0, 0x353D0A4
	0x0353D060 ADRP X0, 0xBF7000
	0x0353D064 LDR X0, [X0 + 0xCD0]
	0x0353D068 BL 0x1C16CF4
	0x0353D06C ADRP X0, 0xBF7000
	0x0353D070 LDR X0, [X0 + 0xCD8]
	0x0353D074 BL 0x1C16CF4
	0x0353D078 ADRP X0, 0xBF7000
	0x0353D07C LDR X0, [X0 + 0xCE0]
	0x0353D080 BL 0x1C16CF4
	0x0353D084 ADRP X0, 0xBF7000
	0x0353D088 LDR X0, [X0 + 0xCE8]
	0x0353D08C BL 0x1C16CF4
	0x0353D090 ADRP X0, 0xBF7000
	0x0353D094 LDR X0, [X0 + 0xCF0]
	0x0353D098 BL 0x1C16CF4
	0x0353D09C MOVZ W8, 0x1
	0x0353D0A0 STRB W8, [X21 + 0xC2E]
	0x0353D0A4 STP X31, X31, [X31 + 0x8]
	0x0353D0A8 STR X31, [X31 + 0x18]
	0x0353D0AC LDR X0, [X20 + 0x28]
	0x0353D0B0 CBZ X0, 0x353D18C
	0x0353D0B4 ADRP X24, 0xBF7000
	0x0353D0B8 ADRP X22, 0xBF7000
	0x0353D0BC ADRP X23, 0xBF7000
	0x0353D0C0 ADRP X21, 0xBF7000
	0x0353D0C4 LDR X24, [X24 + 0xCF0]
	0x0353D0C8 LDR X22, [X22 + 0xCD8]
	0x0353D0CC LDR X23, [X23 + 0xCE8]
	0x0353D0D0 LDR X21, [X21 + 0xCD0]
	0x0353D0D4 BL 0x35440C4
	0x0353D0D8 LDR X1, [X24]
	0x0353D0DC ADD X8, X31, 0x8
	0x0353D0E0 MOV X0, X20
	0x0353D0E4 BL 0x301CB58
	0x0353D0E8 LDR X1, [X22]
	0x0353D0EC ADD X0, X31, 0x8
	0x0353D0F0 BL 0x2BC4350
	0x0353D0F4 TBZ X0, 0x0, 0x353D164

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X24, 0xEA4000
	011 Move W8, [X24+3072]
	012 Move X21, X4
	013 Move X22, X3
	014 Move X23, X2
	015 Move W20, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xBF9000
	022 Move X0, [X0+2896]
	023 Call 0x1C17CF4
	024 Move X0, 0xBC0000
	025 Move X0, [X0+3424]
	026 Call 0x1C17CF4
	027 Move X0, 0xBF9000
	028 Move X0, [X0+2984]
	029 Call 0x1C17CF4
	030 Move X0, 0xBC0000
	031 Move X0, [X0+3488]
	032 Call 0x1C17CF4
	033 Move X0, 0xBC1000
	034 Move X0, [X0+448]
	035 Call 0x1C17CF4
	036 Move X0, 0xBC1000
	037 Move X0, [X0+456]
	038 Call 0x1C17CF4
	039 Move X0, 0xBC1000
	040 Move X0, [X0+464]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+3072], W8
	044 Compare X23, 0
	045 JumpIfEqual {96}
	046 Move X25, 0xBC0000
	047 Move X25, [X25+3424]
	048 Move X0, X23
	049 Move X1, [X25]
	050 Call Dictionary`2<Object, Object>.get_Count, X0
	051 Compare W0, 0
	052 JumpIfEqual {96}
	053 Move X8, [X19+272]
	054 Compare X8, 0
	055 JumpIfEqual {117}
	056 Move X8, 0xBC0000
	057 Move X8, [X8+3488]
	058 Move X0, [X8]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X24, X0
	062 Call Hashtable..ctor, X0
	063 Move X8, 0xBF9000
	064 Move X8, [X8+2984]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X24
	071 Move X1, X23
	072 Call Extensions.MergeStringKeys, X0, X1
	073 Compare X24, 0
	074 JumpIfEqual {169}
	075 Move X1, [X25]
	076 Move X0, X24
	077 Call Dictionary`2<Object, Object>.get_Count, X0
	078 Compare W0, 0
	079 JumpIfEqual {166}
	080 Move X0, X19
	081 Move W1, W20
	082 Move X2, X24
	083 Move X3, X22
	084 Move X4, X21
	085 Move X20, [X31+80]
	086 Move X19, [X31+88]
	087 Move X22, [X31+64]
	088 Move X21, [X31+72]
	089 Move X24, [X31+48]
	090 Move X23, [X31+56]
	091 Move X30, [X31+32]
	092 Move X25, [X31+40]
	093 Add X31, X31, 96
	094 Call LoadBalancingClient.OpSetPropertiesOfActor, X0, X1, X2, X3, X4
	095 Return X0
	096 Move X9, 0xBC0000
	097 Move X8, [X19]
	098 Call 0x3EB2684
	099 Return X0
	100 Move X2, [X9]
	101 Move X9, [X8+536]
	102 Move X3, [X8+544]
	103 Move W1, 1
	104 Move X0, X19
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X20, [X31+80]
	107 Move X19, [X31+88]
	108 Move X22, [X31+64]
	109 Move X21, [X31+72]
	110 Move X24, [X31+48]
	111 Move X23, [X31+56]
	112 Move X30, [X31+32]
	113 Move X25, [X31+40]
	114 Move W0, W31
	115 Add X31, X31, 96
	116 Return X0
	117 Compare X22, 0
	118 JumpIfNotEqual {138}
	119 Compare X21, 0
	120 JumpIfNotEqual {138}
	121 Move X0, [X19+264]
	122 Compare X0, 0
	123 JumpIfEqual {138}
	124 Move W8, [X0+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X1, X23
	127 Move X20, [X31+80]
	128 Move X19, [X31+88]
	129 Move X22, [X31+64]
	130 Move X21, [X31+72]
	131 Move X24, [X31+48]
	132 Move X23, [X31+56]
	133 Move X30, [X31+32]
	134 Move X25, [X31+40]
	135 Move X2, X31
	136 Move X3, X31
	137 Add X31, X31, 96
	138 Move X8, [X19+16]
	139 Compare X8, 0
	140 JumpIfEqual {169}
	141 Move W8, [X8+64]
	142 Compare W8, 0
	143 JumpIfEqual {106}
	144 Move X8, 0xBF8000
	145 Move X8, [X8+2896]
	146 Move W9, [X19+144]
	147 Move TEMP, 0
	148 Not TEMP
	149 Move X10, TEMP
	150 Add X0, X31, 8
	151 Move X8, [X8]
	152 Move X1, X31
	153 Move [X31+24], W9
	154 Move [X31+8], X8
	155 Move [X31+16], X10
	156 Call Enum.ToString, X0
	157 Move X8, 0xBC0000
	158 Move X8, [X8+448]
	159 Move X1, X0
	160 Move X2, X31
	161 Move X8, [X8]
	162 Move X0, X8
	163 Call String.Concat, X0, X1
	164 Move X8, [X19]
	165 Move X2, X0
	166 Move X9, 0xBC0000
	167 Move X8, [X19]
	168 Move X9, [X9+456]
	169 Call 0x1C17F20

Method: System.Boolean OpSetPropertiesOfActor(System.Int32 actorNr, ExitGames.Client.Photon.Hashtable actorProperties, ExitGames.Client.Photon.Hashtable expectedProperties = null, Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x0353D2BC STP X20, X19, [X31 + 0x20]
	0x0353D2C0 ADRP X23, 0xEA2000
	0x0353D2C4 ADRP X22, 0xBBF000
	0x0353D2C8 LDRB W8, [X23 + 0xC06]
	0x0353D2CC LDR X22, [X22 + 0x230]
	0x0353D2D0 MOV X19, X2
	0x0353D2D4 MOV X20, X1
	0x0353D2D8 MOV X21, X0
	0x0353D2DC TBNZ X8, 0x0, 0x353D2F4
	0x0353D2E0 ADRP X0, 0xBBF000
	0x0353D2E4 LDR X0, [X0 + 0x230]
	0x0353D2E8 BL 0x1C16CF4
	0x0353D2EC MOVZ W8, 0x1
	0x0353D2F0 STRB W8, [X23 + 0xC06]
	0x0353D2F4 LDR W2, [X21 + 0x80]
	0x0353D2F8 LDR X3, [X22]
	0x0353D2FC MOVZ W1, 0xF8
	0x0353D300 MOV X0, X21
	0x0353D304 BL 0x353ACB8
	0x0353D308 TBZ X0, 0x0, 0x353D338
	0x0353D30C LDR X0, [X21 + 0x10]
	0x0353D310 CBZ X0, 0x353D34C
	0x0353D314 LDR X8, [X0]
	0x0353D318 MOV X1, X20
	0x0353D31C MOV X2, X19
	0x0353D320 LDP X20, X19, [X31 + 0x20]
	0x0353D324 LDR X4, [X8 + 0x308]
	0x0353D328 LDR X3, [X8 + 0x310]
	0x0353D32C LDP X22, X21, [X31 + 0x10]
	0x0353D330 LDP X30, X23, [X31], #0x30
	0x0353D334 BR X4
	0x0353D338 LDP X20, X19, [X31 + 0x20]
	0x0353D33C LDP X22, X21, [X31 + 0x10]
	0x0353D340 MOV W0, W31
	0x0353D344 LDP X30, X23, [X31], #0x30
	0x0353D348 RET
	0x0353D34C BL 0x1C16F20
	0x0353D350 SUB X31, X31, 0xA0
	0x0353D354 STR X30, [X31 + 0x40]
	0x0353D358 STP X28, X27, [X31 + 0x50]
	0x0353D35C STP X26, X25, [X31 + 0x60]
	0x0353D360 STP X24, X23, [X31 + 0x70]
	0x0353D364 STP X22, X21, [X31 + 0x80]
	0x0353D368 STP X20, X19, [X31 + 0x90]
	0x0353D36C ADRP X23, 0xEA2000
	0x0353D370 LDRB W8, [X23 + 0xC07]
	0x0353D374 MOV W21, W3
	0x0353D378 MOV X20, X2
	0x0353D37C MOV X22, X1
	0x0353D380 MOV X19, X0
	0x0353D384 TBNZ X8, 0x0, 0x353D3FC
	0x0353D388 ADRP X0, 0xBBE000
	0x0353D38C LDR X0, [X0 + 0xD60]
	0x0353D390 BL 0x1C16CF4
	0x0353D394 ADRP X0, 0xBBF000
	0x0353D398 LDR X0, [X0 + 0x238]
	0x0353D39C BL 0x1C16CF4
	0x0353D3A0 ADRP X0, 0xBBF000
	0x0353D3A4 LDR X0, [X0 + 0x240]
	0x0353D3A8 BL 0x1C16CF4
	0x0353D3AC ADRP X0, 0xBBF000
	0x0353D3B0 LDR X0, [X0 + 0x248]
	0x0353D3B4 BL 0x1C16CF4
	0x0353D3B8 ADRP X0, 0xBBF000
	0x0353D3BC LDR X0, [X0 + 0x250]
	0x0353D3C0 BL 0x1C16CF4
	0x0353D3C4 ADRP X0, 0xBBE000
	0x0353D3C8 LDR X0, [X0 + 0xDA0]
	0x0353D3CC BL 0x1C16CF4
	0x0353D3D0 ADRP X0, 0xBB6000
	0x0353D3D4 LDR X0, [X0 + 0x758]
	0x0353D3D8 BL 0x1C16CF4
	0x0353D3DC ADRP X0, 0xBBF000
	0x0353D3E0 LDR X0, [X0 + 0x258]
	0x0353D3E4 BL 0x1C16CF4
	0x0353D3E8 ADRP X0, 0xBB8000
	0x0353D3EC LDR X0, [X0 + 0x278]
	0x0353D3F0 BL 0x1C16CF4
	0x0353D3F4 MOVZ W8, 0x1
	0x0353D3F8 STRB W8, [X23 + 0xC07]
	0x0353D3FC STP X31, X31, [X31 + 0x20]
	0x0353D400 STR X31, [X31 + 0x30]
	0x0353D404 CBZ X22, 0x353D444
	0x0353D408 LDR X0, [X19 + 0x110]
	0x0353D40C CBZ X0, 0x353D444
	0x0353D410 LDR X8, [X0]
	0x0353D414 MOV X1, X22
	0x0353D418 LDP X9, X2, [X8 + 0x178]
	0x0353D41C BLR X9
	0x0353D420 LDR W8, [X19 + 0x90]
	0x0353D424 CMP W8, 0x9
	0x0353D428 B.NE 0x353D444
	0x0353D42C LDR X8, [X19 + 0x110]
	0x0353D430 CBZ X8, 0x353D444
	0x0353D434 LDR X0, [X19 + 0xC0]
	0x0353D438 CBZ X0, 0x353D6B0
	0x0353D43C MOV X1, X22
	0x0353D440 BL 0x353D038
	0x0353D444 CBZ X20, 0x353D664
	0x0353D448 ADRP X8, 0xBBE000
	0x0353D44C LDR X8, [X8 + 0xD60]
	0x0353D450 MOV X0, X20
	0x0353D454 LDR X1, [X8]
	0x0353D458 BL 0x2AA4E88
	0x0353D45C CMP W0, 0x1
	0x0353D460 B.LT 0x353D664

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xEA3000
	010 Move X24, 0xBC0000
	011 Move W8, [X25+3073]
	012 Move X24, [X24+472]
	013 Move X23, X4
	014 Move X22, X3
	015 Move X19, X2
	016 Move W21, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xBBF000
	023 Move X0, [X0+3424]
	024 Call 0x1C17CF4
	025 Move X0, 0xBC0000
	026 Move X0, [X0+480]
	027 Call 0x1C17CF4
	028 Move X0, 0xBC0000
	029 Move X0, [X0+472]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+3073], W8
	033 Move W2, [X20+128]
	034 Move X3, [X24]
	035 Move W1, 252
	036 Move X0, X20
	037 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {79}
	042 Compare X19, 0
	043 JumpIfEqual {70}
	044 Move X24, 0xBBF000
	045 Move X24, [X24+3424]
	046 Move X0, X19
	047 Move X1, [X24]
	048 Call Dictionary`2<Object, Object>.get_Count, X0
	049 Compare W0, 0
	050 JumpIfEqual {70}
	051 Move X0, [X20+16]
	052 Compare X0, 0
	053 JumpIfEqual {131}
	054 Move W1, W21
	055 Move X2, X19
	056 Move X3, X22
	057 Move X4, X23
	058 Call LoadBalancingPeer.OpSetPropertiesOfActor, X0, X1, X2, X3, X4
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {79}
	063 Move X0, [X20+272]
	064 Compare X0, 0
	065 JumpIfEqual {131}
	066 Move W8, [X0+120]
	067 Compare W8, 0
	068 JumpIfEqual {90}
	069 Move W23, 1
	070 Move X9, 0xBC0000
	071 Move X8, [X20]
	072 Move X9, [X9+480]
	073 Move W1, 1
	074 Move X0, X20
	075 Move X3, [X8+544]
	076 Move X2, [X9]
	077 Move X9, [X8+536]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move W23, W31
	080 Move W0, W23
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return X0
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CSET not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSET not yet implemented."
	094 Compare X22, 0
	095 JumpIfEqual {105}
	096 Move X1, [X24]
	097 Move X0, X22
	098 And W23, W8, W9
	099 Call Dictionary`2<Object, Object>.get_Count, X0
	100 Compare W0, 0
	101 JumpIfNotEqual {80}
	102 Move X0, [X20+272]
	103 Compare X0, 0
	104 JumpIfNotEqual {106}
	105 Move W23, 1
	106 Move X8, [X0]
	107 Move W1, W21
	108 Move W2, W31
	109 Move X9, [X8+472]
	110 Move X3, [X8+480]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 NotImplemented "Instruction CSET not yet implemented."
	115 Compare X0, 0
	116 JumpIfEqual {130}
	117 Move X8, [X0]
	118 Move X1, X19
	119 Move X21, X0
	120 Move X9, [X8+376]
	121 Move X2, [X8+384]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X0, [X20+192]
	124 Compare X0, 0
	125 JumpIfEqual {131}
	126 Move X1, X21
	127 Move X2, X19
	128 And W23, W23, W22
	129 Call InRoomCallbacksContainer.OnPlayerPropertiesUpdate, X0, X1, X2
	130 And W23, W8, W23
	131 Call 0x1C17F20

Method: System.Boolean OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable propertiesToSet, ExitGames.Client.Photon.Hashtable expectedProperties = null, Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x0353D9B4 RET
	0x0353D9B8 SUB X31, X31, 0x40
	0x0353D9BC STP X30, X23, [X31 + 0x10]
	0x0353D9C0 STP X22, X21, [X31 + 0x20]
	0x0353D9C4 STP X20, X19, [X31 + 0x30]
	0x0353D9C8 ADRP X21, 0xEA2000
	0x0353D9CC LDRB W8, [X21 + 0xC0A]
	0x0353D9D0 MOV X20, X1
	0x0353D9D4 MOV X19, X0
	0x0353D9D8 TBNZ X8, 0x0, 0x353DA08
	0x0353D9DC ADRP X0, 0xBBE000
	0x0353D9E0 LDR X0, [X0 + 0xDA0]
	0x0353D9E4 BL 0x1C16CF4
	0x0353D9E8 ADRP X0, 0xBB7000
	0x0353D9EC LDR X0, [X0 + 0xE58]
	0x0353D9F0 BL 0x1C16CF4
	0x0353D9F4 ADRP X0, 0xBB6000
	0x0353D9F8 LDR X0, [X0 + 0x758]
	0x0353D9FC BL 0x1C16CF4
	0x0353DA00 MOVZ W8, 0x1
	0x0353DA04 STRB W8, [X21 + 0xC0A]
	0x0353DA08 STR X31, [X31 + 0x8]
	0x0353DA0C LDR X8, [X19 + 0x128]
	0x0353DA10 CBZ X8, 0x353DC74
	0x0353DA14 LDR X9, [X19]
	0x0353DA18 LDP X1, X2, [X8 + 0x10]
	0x0353DA1C MOV X0, X19
	0x0353DA20 LDR X8, [X9 + 0x208]
	0x0353DA24 LDR X3, [X9 + 0x210]
	0x0353DA28 BLR X8
	0x0353DA2C STR X0, [X19 + 0x110]
	0x0353DA30 CBZ X0, 0x353DC74
	0x0353DA34 STR X19, [X0 + 0x60]
	0x0353DA38 CBZ X20, 0x353DC74
	0x0353DA3C MOVZ W1, 0xFE
	0x0353DA40 MOV X0, X20
	0x0353DA44 MOV X2, X31
	0x0353DA48 BL 0x3505754
	0x0353DA4C CBZ X0, 0x353DC74
	0x0353DA50 ADRP X23, 0xBB6000
	0x0353DA54 LDR X23, [X23 + 0x758]
	0x0353DA58 LDR X8, [X0]
	0x0353DA5C LDR X1, [X23]
	0x0353DA60 LDR X8, [X8 + 0x40]
	0x0353DA64 LDR X9, [X1 + 0x40]
	0x0353DA68 CMP X8, X9
	0x0353DA6C B.NE 0x353DC78
	0x0353DA70 BL 0x1C16E08
	0x0353DA74 LDR W1, [X0]
	0x0353DA78 MOV X0, X19
	0x0353DA7C BL 0x353D860
	0x0353DA80 LDR X0, [X20 + 0x20]
	0x0353DA84 CBZ X0, 0x353DC74
	0x0353DA88 MOVZ W1, 0xFC
	0x0353DA8C MOV X2, X31
	0x0353DA90 BL 0x34FC4A4
	0x0353DA94 TBZ X0, 0x0, 0x353DAE8
	0x0353DA98 LDR X0, [X20 + 0x20]
	0x0353DA9C CBZ X0, 0x353DC74
	0x0353DAA0 MOVZ W1, 0xFC
	0x0353DAA4 MOV X2, X31
	0x0353DAA8 BL 0x34FB9B8
	0x0353DAAC CBZ X0, 0x353DADC
	0x0353DAB0 ADRP X8, 0xBB7000
	0x0353DAB4 LDR X8, [X8 + 0xE58]
	0x0353DAB8 MOV X21, X0
	0x0353DABC LDR X22, [X8]
	0x0353DAC0 MOV X1, X22
	0x0353DAC4 BL 0x1C16E00
	0x0353DAC8 MOV X1, X0
	0x0353DACC CBNZ X0, 0x353DAE0
	0x0353DAD0 MOV X0, X21
	0x0353DAD4 MOV X1, X22
	0x0353DAD8 BL 0x1C171E0
	0x0353DADC MOV X1, X31
	0x0353DAE0 MOV X0, X19
	0x0353DAE4 BL 0x353DC8C
	0x0353DAE8 ADRP X22, 0xBBE000
	0x0353DAEC LDR X22, [X22 + 0xDA0]
	0x0353DAF0 MOVZ W1, 0xF9
	0x0353DAF4 MOV X0, X20
	0x0353DAF8 MOV X2, X31
	0x0353DAFC BL 0x3505754
	0x0353DB00 MOV X21, X0
	0x0353DB04 CBZ X0, 0x353DB34

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xEA3000
	009 Move W8, [X23+3074]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xBBF000
	019 Move X0, [X0+3424]
	020 Call 0x1C17CF4
	021 Move X0, 0xBF8000
	022 Move X0, [X0+2984]
	023 Call 0x1C17CF4
	024 Move X0, 0xBBF000
	025 Move X0, [X0+3488]
	026 Call 0x1C17CF4
	027 Move X0, 0xBC0000
	028 Move X0, [X0+528]
	029 Call 0x1C17CF4
	030 Move X0, 0xBC0000
	031 Move X0, [X0+536]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+3074], W8
	035 Compare X22, 0
	036 JumpIfEqual {79}
	037 Move X24, 0xBBF000
	038 Move X24, [X24+3424]
	039 Move X0, X22
	040 Move X1, [X24]
	041 Call Dictionary`2<Object, Object>.get_Count, X0
	042 Compare W0, 0
	043 JumpIfEqual {79}
	044 Move X8, 0xBBF000
	045 Move X8, [X8+3488]
	046 Move X0, [X8]
	047 Call 0x1C17F10
	048 Move X1, X31
	049 Move X23, X0
	050 Call Hashtable..ctor, X0
	051 Move X8, 0xBF8000
	052 Move X8, [X8+2984]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X23
	059 Move X1, X22
	060 Call Extensions.MergeStringKeys, X0, X1
	061 Compare X23, 0
	062 JumpIfEqual {100}
	063 Move X1, [X24]
	064 Move X0, X23
	065 Call Dictionary`2<Object, Object>.get_Count, X0
	066 Compare W0, 0
	067 JumpIfEqual {97}
	068 Move X0, X19
	069 Move X1, X23
	070 Move X2, X21
	071 Move X3, X20
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Move X9, 0xBC0000
	080 Move X8, [X19]
	081 Move X9, [X9+528]
	082 Move X2, [X9]
	083 Move X9, [X8+536]
	084 Move X3, [X8+544]
	085 Move W1, 1
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move W0, W31
	095 Move X30, [X31+64]
	096 Return X0
	097 Move X9, 0xBC0000
	098 Move X8, [X19]
	099 Move X9, [X9+536]
	100 Call 0x1C17F20

Method: System.Boolean OpSetPropertyOfRoom(System.Byte propCode, System.Object value)

Disassembly:
	0x0353DC70 RET
	0x0353DC74 BL 0x1C16F20
	0x0353DC78 BL 0x1C171E0
	0x0353DC7C MOV X0, X21
	0x0353DC80 BL 0x1C171E0
	0x0353DC84 MOV X0, X8
	0x0353DC88 BL 0x1C171E0
	0x0353DC8C STP X30, X25, [X31 - 0x40]!
	0x0353DC90 STP X24, X23, [X31 + 0x10]
	0x0353DC94 STP X22, X21, [X31 + 0x20]
	0x0353DC98 STP X20, X19, [X31 + 0x30]
	0x0353DC9C ADRP X21, 0xEA2000
	0x0353DCA0 LDRB W8, [X21 + 0xC0B]
	0x0353DCA4 MOV X19, X1
	0x0353DCA8 MOV X20, X0
	0x0353DCAC TBNZ X8, 0x0, 0x353DCC4
	0x0353DCB0 ADRP X0, 0xBB8000
	0x0353DCB4 LDR X0, [X0 + 0x278]
	0x0353DCB8 BL 0x1C16CF4
	0x0353DCBC MOVZ W8, 0x1
	0x0353DCC0 STRB W8, [X21 + 0xC0B]
	0x0353DCC4 CBZ X19, 0x353DD6C
	0x0353DCC8 LDR X8, [X19 + 0x18]
	0x0353DCCC CMP W8, 0x1
	0x0353DCD0 B.LT 0x353DD6C
	0x0353DCD4 ADRP X25, 0xBB8000
	0x0353DCD8 LDR X25, [X25 + 0x278]
	0x0353DCDC MOV X23, X31
	0x0353DCE0 AND X8, X8, 0x0
	0x0353DCE4 ADD X24, X19, 0x20
	0x0353DCE8 CMP X23, W8, UXTW
	0x0353DCEC B.CS 0x353DD80
	0x0353DCF0 LDR W21, [X24, X23, LSL #2]
	0x0353DCF4 CBZ W21, 0x353DD5C
	0x0353DCF8 LDR X0, [X20 + 0x110]
	0x0353DCFC CBZ X0, 0x353DD84

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xEA3000
	008 Move X23, 0xBBF000
	009 Move W8, [X22+3075]
	010 Move X23, [X23+3488]
	011 Move X20, X2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBBF000
	019 Move X0, [X0+3488]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3075], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X22, X0
	027 Call Hashtable..ctor, X0
	028 Compare X22, 0
	029 JumpIfEqual {47}
	030 Move X0, X22
	031 Move W1, W21
	032 Move X2, X20
	033 Move X3, X31
	034 Call Hashtable.set_Item, X0, X1, X2
	035 Move X0, X19
	036 Move X1, X22
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X2, X31
	042 Move X3, X31
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Call LoadBalancingClient.OpSetPropertiesOfRoom, X0, X1, X2, X3
	046 Return X0
	047 Call 0x1C17F20

Method: System.Boolean OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable expectedProperties = null, Photon.Realtime.WebFlags webFlags = null)

Disassembly:
	0x0353DB08 LDR X8, [X21]
	0x0353DB0C LDR X1, [X22]
	0x0353DB10 LDRB W10, [X8 + 0x130]
	0x0353DB14 LDRB W9, [X1 + 0x130]
	0x0353DB18 CMP W10, W9
	0x0353DB1C B.CC 0x353DC7C
	0x0353DB20 LDR X8, [X8 + 0xC8]
	0x0353DB24 ADD X8, X8, X9, 0x3, LSL
	0x0353DB28 LDUR X8, [X8 - 0x8]
	0x0353DB2C CMP X8, X1
	0x0353DB30 B.NE 0x353DC7C
	0x0353DB34 MOVZ W1, 0xF8
	0x0353DB38 MOV X0, X20
	0x0353DB3C MOV X2, X31
	0x0353DB40 BL 0x3505754
	0x0353DB44 MOV X8, X0
	0x0353DB48 CBZ X0, 0x353DB78
	0x0353DB4C LDR X9, [X8]
	0x0353DB50 LDR X1, [X22]
	0x0353DB54 LDRB W11, [X9 + 0x130]
	0x0353DB58 LDRB W10, [X1 + 0x130]
	0x0353DB5C CMP W11, W10
	0x0353DB60 B.CC 0x353DC84
	0x0353DB64 LDR X9, [X9 + 0xC8]
	0x0353DB68 ADD X9, X9, X10, 0x3, LSL
	0x0353DB6C LDUR X9, [X9 - 0x8]
	0x0353DB70 CMP X9, X1
	0x0353DB74 B.NE 0x353DC84
	0x0353DB78 MOV X0, X19
	0x0353DB7C MOV X1, X8
	0x0353DB80 MOV X2, X21
	0x0353DB84 MOV W3, W31
	0x0353DB88 BL 0x353D350
	0x0353DB8C LDR X0, [X20 + 0x20]
	0x0353DB90 CBZ X0, 0x353DC74
	0x0353DB94 ADD X2, X31, 0x8
	0x0353DB98 MOVZ W1, 0xBF
	0x0353DB9C MOV X3, X31
	0x0353DBA0 BL 0x34FC574
	0x0353DBA4 TBZ X0, 0x0, 0x353DBE4
	0x0353DBA8 LDR X20, [X19 + 0x110]
	0x0353DBAC CBZ X20, 0x353DC74
	0x0353DBB0 LDR X0, [X31 + 0x8]
	0x0353DBB4 CBZ X0, 0x353DC74
	0x0353DBB8 LDR X8, [X0]
	0x0353DBBC LDR X1, [X23]
	0x0353DBC0 LDR X8, [X8 + 0x40]
	0x0353DBC4 LDR X9, [X1 + 0x40]
	0x0353DBC8 CMP X8, X9
	0x0353DBCC B.NE 0x353DC78
	0x0353DBD0 BL 0x1C16E08
	0x0353DBD4 LDR W1, [X0]
	0x0353DBD8 MOV X0, X20
	0x0353DBDC MOV X2, X31
	0x0353DBE0 BL 0x354C758
	0x0353DBE4 LDR X8, [X19 + 0x110]
	0x0353DBE8 CBZ X8, 0x353DC74
	0x0353DBEC LDRB W8, [X8 + 0x79]
	0x0353DBF0 CBZ W8, 0x353DC60
	0x0353DBF4 LDR W1, [X19 + 0x90]
	0x0353DBF8 CMP W1, 0x9
	0x0353DBFC B.EQ 0x353DC24
	0x0353DC00 LDR X8, [X19 + 0x98]
	0x0353DC04 MOVZ W9, 0x9
	0x0353DC08 STR W9, [X19 + 0x90]
	0x0353DC0C CBZ X8, 0x353DC24
	0x0353DC10 LDR X9, [X8 + 0x18]
	0x0353DC14 LDR X0, [X8 + 0x40]
	0x0353DC18 LDR X3, [X8 + 0x28]
	0x0353DC1C MOVZ W2, 0x9
	0x0353DC20 BLR X9
	0x0353DC24 LDR W8, [X19 + 0x124]
	0x0353DC28 CBZ W8, 0x353DC48
	0x0353DC2C CMP W8, 0x4
	0x0353DC30 B.NE 0x353DC54
	0x0353DC34 LDR X8, [X19 + 0x108]
	0x0353DC38 CBZ X8, 0x353DC74
	0x0353DC3C LDR W8, [X8 + 0x18]
	0x0353DC40 CMP W8, 0x1
	0x0353DC44 B.NE 0x353DC54
	0x0353DC48 LDR X0, [X19 + 0xB8]
	0x0353DC4C CBZ X0, 0x353DC74
	0x0353DC50 BL 0x353DD88
	0x0353DC54 LDR X0, [X19 + 0xB8]
	0x0353DC58 CBZ X0, 0x353DC74
	0x0353DC5C BL 0x353DF44
	0x0353DC60 LDP X20, X19, [X31 + 0x30]
	0x0353DC64 LDP X22, X21, [X31 + 0x20]
	0x0353DC68 LDP X30, X23, [X31 + 0x10]
	0x0353DC6C ADD X31, X31, 0x40

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xEA3000
	009 Move X23, 0xBC0000
	010 Move W8, [X24+3076]
	011 Move X23, [X23+472]
	012 Move X22, X3
	013 Move X21, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xBBF000
	021 Move X0, [X0+3424]
	022 Call 0x1C17CF4
	023 Move X0, 0xBC0000
	024 Move X0, [X0+544]
	025 Call 0x1C17CF4
	026 Move X0, 0xBC0000
	027 Move X0, [X0+472]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+3076], W8
	031 Move W2, [X19+128]
	032 Move X3, [X23]
	033 Move W1, 252
	034 Move X0, X19
	035 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {76}
	040 Compare X20, 0
	041 JumpIfEqual {67}
	042 Move X23, 0xBBF000
	043 Move X23, [X23+3424]
	044 Move X0, X20
	045 Move X1, [X23]
	046 Call Dictionary`2<Object, Object>.get_Count, X0
	047 Compare W0, 0
	048 JumpIfEqual {67}
	049 Move X0, [X19+16]
	050 Compare X0, 0
	051 JumpIfEqual {112}
	052 Move X1, X20
	053 Move X2, X21
	054 Move X3, X22
	055 Call LoadBalancingPeer.OpSetPropertiesOfRoom, X0, X1, X2, X3
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {76}
	060 Move X0, [X19+272]
	061 Compare X0, 0
	062 JumpIfEqual {112}
	063 Move W8, [X0+120]
	064 Compare W8, 0
	065 JumpIfEqual {86}
	066 Move W22, 1
	067 Move X9, 0xBC0000
	068 Move X8, [X19]
	069 Move X9, [X9+544]
	070 Move W1, 1
	071 Move X0, X19
	072 Move X3, [X8+544]
	073 Move X2, [X9]
	074 Move X9, [X8+536]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move W22, W31
	077 Move W0, W22
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X30, [X31+64]
	085 Return X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 Compare X21, 0
	091 JumpIfEqual {101}
	092 Move X1, [X23]
	093 Move X0, X21
	094 And W22, W8, W9
	095 Call Dictionary`2<Object, Object>.get_Count, X0
	096 Compare W0, 0
	097 JumpIfNotEqual {77}
	098 Move X0, [X19+272]
	099 Compare X0, 0
	100 JumpIfNotEqual {102}
	101 Move W22, 1
	102 Move X8, [X0]
	103 Move X1, X20
	104 Move X9, [X8+376]
	105 Move X2, [X8+384]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X0, [X19+192]
	108 Compare X0, 0
	109 JumpIfEqual {112}
	110 Move X1, X20
	111 Call InRoomCallbacksContainer.OnRoomPropertiesUpdate, X0, X1
	112 Call 0x1C17F20

Method: System.Boolean OpRaiseEvent(System.Byte eventCode, System.Object customEventContent, Photon.Realtime.RaiseEventOptions raiseEventOptions, ExitGames.Client.Photon.SendOptions sendOptions)

Disassembly:
	0x0353E1FC LDR X8, [X8 + 0xB8]
	0x0353E200 LDR X8, [X8]
	0x0353E204 STR X8, [X20 + 0x20]
	0x0353E208 BL 0x33BDD8C
	0x0353E20C MOV X0, X20
	0x0353E210 MOV X1, X21
	0x0353E214 STRB W23, [X20 + 0x1C]
	0x0353E218 STR W22, [X20 + 0x18]
	0x0353E21C BL 0x3538F0C
	0x0353E220 LDR X0, [X24]
	0x0353E224 BL 0x1C16F10
	0x0353E228 MOV X1, X31
	0x0353E22C MOV X21, X0
	0x0353E230 BL 0x34ED7D8
	0x0353E234 LDR X8, [X20]
	0x0353E238 STR X21, [X20 + 0x38]
	0x0353E23C MOV X0, X20
	0x0353E240 MOV X1, X19
	0x0353E244 LDP X3, X2, [X8 + 0x178]
	0x0353E248 LDP X20, X19, [X31 + 0x40]
	0x0353E24C LDP X22, X21, [X31 + 0x30]
	0x0353E250 LDP X24, X23, [X31 + 0x20]
	0x0353E254 LDP X26, X25, [X31 + 0x10]
	0x0353E258 LDR X30, [X31], #0x50
	0x0353E25C BR X3
	0x0353E260 STR X30, [X31 - 0x30]!
	0x0353E264 STP X22, X21, [X31 + 0x10]
	0x0353E268 STP X20, X19, [X31 + 0x20]
	0x0353E26C ADRP X21, 0xEA1000
	0x0353E270 ADRP X22, 0xBF6000
	0x0353E274 LDRB W8, [X21 + 0xC0D]
	0x0353E278 LDR X22, [X22 + 0xD28]
	0x0353E27C MOV X19, X2
	0x0353E280 MOV X20, X1
	0x0353E284 TBNZ X8, 0x0, 0x353E29C
	0x0353E288 ADRP X0, 0xBF6000
	0x0353E28C LDR X0, [X0 + 0xD28]
	0x0353E290 BL 0x1C16CF4
	0x0353E294 MOVZ W8, 0x1
	0x0353E298 STRB W8, [X21 + 0xC0D]
	0x0353E29C LDR X0, [X22]
	0x0353E2A0 BL 0x1C16F10
	0x0353E2A4 MOV X1, X20
	0x0353E2A8 MOV X2, X19
	0x0353E2AC MOV W3, W31
	0x0353E2B0 MOV X4, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xEA2000
	010 Move X24, 0xBBF000
	011 Move W8, [X25+3077]
	012 Move X24, [X24+552]
	013 Move X19, X4
	014 Move X20, X3
	015 Move X21, X2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xBBF000
	023 Move X0, [X0+552]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3077], W8
	027 Move W2, [X23+128]
	028 Move X3, [X24]
	029 Move W1, 253
	030 Move X0, X23
	031 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {55}
	036 Move X0, [X23+16]
	037 Compare X0, 0
	038 JumpIfEqual {65}
	039 Move X8, [X0]
	040 Move W1, W22
	041 Move X2, X21
	042 Move X3, X20
	043 Move X6, [X8+792]
	044 Move X5, [X8+800]
	045 Move X4, X19
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Move X25, [X31+72]
	054 CallNoReturn X6
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move W0, W31
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Boolean OpChangeGroups(System.Byte[] groupsToRemove, System.Byte[] groupsToAdd)

Disassembly:
	0x0353E2B4 MOV X21, X0
	0x0353E2B8 BL 0x354C5E4
	0x0353E2BC MOV X0, X21
	0x0353E2C0 LDP X20, X19, [X31 + 0x20]
	0x0353E2C4 LDP X22, X21, [X31 + 0x10]
	0x0353E2C8 LDR X30, [X31], #0x30
	0x0353E2CC RET
	0x0353E2D0 CMP W2, 0x2
	0x0353E2D4 B.EQ 0x353E304
	0x0353E2D8 CMP W2, 0x1
	0x0353E2DC B.EQ 0x353E330
	0x0353E2E0 CBNZ W2, 0x353E384
	0x0353E2E4 ADD W8, W1, 0x27
	0x0353E2E8 AND W9, W8, 0xFF
	0x0353E2EC CMP W9, 0xF
	0x0353E2F0 B.CS 0x353E37C
	0x0353E2F4 MOVZ W9, 0x7F37
	0x0353E2F8 LSRV W8, W9, W8
	0x0353E2FC AND W0, W8, 0x1
	0x0353E300 RET
	0x0353E304 AND W8, W1, 0xFF
	0x0353E308 CMP W8, 0xDA
	0x0353E30C MOVZ W0, 0x1
	0x0353E310 B.EQ 0x353E354
	0x0353E314 CMP W8, 0xDC
	0x0353E318 B.EQ 0x353E354
	0x0353E31C AND W8, W1, 0xFE
	0x0353E320 CMP W8, 0xE6
	0x0353E324 B.NE 0x353E37C
	0x0353E328 MOVZ W0, 0x1
	0x0353E32C RET
	0x0353E330 AND W9, W1, 0xFF
	0x0353E334 CMP W9, 0xE3
	0x0353E338 AND W8, W1, 0xFE
	0x0353E33C B.HI 0x353E358
	0x0353E340 CMP W8, 0xDA
	0x0353E344 MOVZ W0, 0x1
	0x0353E348 B.EQ 0x353E354
	0x0353E34C CMP W8, 0xE2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xEA2000
	008 Move X22, 0xBBF000
	009 Move W8, [X23+3078]
	010 Move X22, [X22+560]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBBF000
	019 Move X0, [X0+560]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3078], W8
	023 Move W2, [X21+128]
	024 Move X3, [X22]
	025 Move W1, 248
	026 Move X0, X21
	027 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {47}
	032 Move X0, [X21+16]
	033 Compare X0, 0
	034 JumpIfEqual {55}
	035 Move X8, [X0]
	036 Move X1, X20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X4, [X8+776]
	041 Move X3, [X8+784]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 CallNoReturn X4
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move W0, W31
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Void ReadoutProperties(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable actorProperties, System.Int32 targetActorNr)

Disassembly:
	0x0353E350 B.NE 0x353E37C
	0x0353E354 RET
	0x0353E358 SUB W9, W9, 0xFB
	0x0353E35C CMP W9, 0x4
	0x0353E360 MOVZ W0, 0x1
	0x0353E364 B.CC 0x353E354
	0x0353E368 AND W9, W1, 0xFF
	0x0353E36C CMP W9, 0xF8
	0x0353E370 B.EQ 0x353E354
	0x0353E374 CMP W8, 0xE6
	0x0353E378 B.EQ 0x353E354
	0x0353E37C MOV W0, W31
	0x0353E380 RET
	0x0353E384 STR X30, [X31 - 0x20]!
	0x0353E388 STP X20, X19, [X31 + 0x10]
	0x0353E38C STR W2, [X31 + 0xC]
	0x0353E390 ADRP X0, 0xBF6000
	0x0353E394 LDR X0, [X0 + 0xCA8]
	0x0353E398 BL 0x1C16D08
	0x0353E39C ADD X1, X31, 0xC
	0x0353E3A0 BL 0x1C16E04
	0x0353E3A4 MOV X19, X0
	0x0353E3A8 ADRP X0, 0xBBD000
	0x0353E3AC LDR X0, [X0 + 0x760]
	0x0353E3B0 BL 0x1C16D08
	0x0353E3B4 BL 0x1C16F10
	0x0353E3B8 MOV X20, X0
	0x0353E3BC ADRP X0, 0xBBE000
	0x0353E3C0 LDR X0, [X0 + 0x2A0]
	0x0353E3C4 BL 0x1C16D08
	0x0353E3C8 MOV X1, X0
	0x0353E3CC MOV X0, X20
	0x0353E3D0 MOV X2, X19
	0x0353E3D4 MOV X3, X31
	0x0353E3D8 MOV X4, X31
	0x0353E3DC BL 0x3312C8C
	0x0353E3E0 ADRP X0, 0xBF6000
	0x0353E3E4 LDR X0, [X0 + 0xD30]
	0x0353E3E8 BL 0x1C16D08
	0x0353E3EC MOV X1, X0
	0x0353E3F0 MOV X0, X20
	0x0353E3F4 BL 0x1C16DEC
	0x0353E3F8 STP X30, X19, [X31 - 0x10]!
	0x0353E3FC AND W8, W1, 0xFF
	0x0353E400 SUB W9, W8, 0xD9
	0x0353E404 CMP W9, 0xE
	0x0353E408 MOV X19, X0
	0x0353E40C B.HI 0x353E48C
	0x0353E410 ADRP X8, 0xFFFFFFFFFD658000
	0x0353E414 ADD X8, X8, 0xCF7
	0x0353E418 ADR X10, 0x10
	0x0353E41C LDRB W11, [X8, X9, LSL]
	0x0353E420 ADD X10, X10, X11, 0x2, LSL
	0x0353E424 BR X10
	0x0353E428 LDR W8, [X19 + 0x90]
	0x0353E42C CMP W8, 0xF
	0x0353E430 CSET W9, EQ
	0x0353E434 CMP W8, 0x4
	0x0353E438 CSET W8, EQ
	0x0353E43C ORR W0, W9, W8, 0x0
	0x0353E440 B 0x353E504
	0x0353E444 LDR W8, [X19 + 0x90]
	0x0353E448 SUB W8, W8, 0x4
	0x0353E44C CMP W8, 0xC
	0x0353E450 B.CS 0x353E500
	0x0353E454 MOVZ W9, 0x809
	0x0353E458 B 0x353E4D8
	0x0353E45C MOV X0, X19
	0x0353E460 BL 0x3538A4C
	0x0353E464 TBZ X0, 0x0, 0x353E4C4
	0x0353E468 MOVZ W0, 0x1
	0x0353E46C B 0x353E504
	0x0353E470 LDR W8, [X19 + 0x90]
	0x0353E474 CMP W8, 0x11
	0x0353E478 B 0x353E484
	0x0353E47C LDR W8, [X19 + 0x90]
	0x0353E480 CMP W8, 0x4
	0x0353E484 CSET W0, EQ
	0x0353E488 B 0x353E504
	0x0353E48C CMP W8, 0xF8
	0x0353E490 B.EQ 0x353E4E4
	0x0353E494 SUB W8, W8, 0xFB
	0x0353E498 CMP W8, 0x3
	0x0353E49C B.LS 0x353E4E4
	0x0353E4A0 LDR X8, [X19 + 0x10]
	0x0353E4A4 CBZ X8, 0x353E500
	0x0353E4A8 LDR W8, [X19 + 0x90]
	0x0353E4AC CMP W8, 0x0
	0x0353E4B0 CSET W9, NE
	0x0353E4B4 CMP W8, 0xE
	0x0353E4B8 CSET W8, NE
	0x0353E4BC AND W0, W9, W8, 0x0
	0x0353E4C0 B 0x353E504
	0x0353E4C4 LDR W8, [X19 + 0x90]
	0x0353E4C8 SUB W8, W8, 0x6
	0x0353E4CC CMP W8, 0xB
	0x0353E4D0 B.CS 0x353E500
	0x0353E4D4 MOVZ W9, 0x441
	0x0353E4D8 LSRV W8, W9, W8
	0x0353E4DC AND W0, W8, 0x1
	0x0353E4E0 B 0x353E504
	0x0353E4E4 LDR W8, [X19 + 0x90]
	0x0353E4E8 CMP W8, 0x9
	0x0353E4EC B.NE 0x353E500
	0x0353E4F0 LDR X8, [X19 + 0x110]
	0x0353E4F4 CMP X8, 0x0
	0x0353E4F8 CSET W0, NE
	0x0353E4FC B 0x353E504
	0x0353E500 MOV W0, W31
	0x0353E504 LDP X30, X19, [X31], #0x10
	0x0353E508 RET
	0x0353E50C STR X30, [X31 - 0x30]!
	0x0353E510 STP X22, X21, [X31 + 0x10]
	0x0353E514 STP X20, X19, [X31 + 0x20]
	0x0353E518 ADRP X22, 0xEA1000
	0x0353E51C LDRB W8, [X22 + 0xC0F]
	0x0353E520 MOV X19, X2
	0x0353E524 MOV W20, W1
	0x0353E528 MOV X21, X0
	0x0353E52C TBNZ X8, 0x0, 0x353E544
	0x0353E530 ADRP X0, 0xBB5000
	0x0353E534 LDR X0, [X0 + 0xA28]
	0x0353E538 BL 0x1C16CF4
	0x0353E53C MOVZ W8, 0x1
	0x0353E540 STRB W8, [X22 + 0xC0F]
	0x0353E544 LDR X8, [X21 + 0x10]
	0x0353E548 CBZ X8, 0x353E628
	0x0353E54C LDRB W8, [X8 + 0x40]
	0x0353E550 CMP W8, 0x5
	0x0353E554 B.EQ 0x353E570
	0x0353E558 CMP W8, W20, UXTB
	0x0353E55C B.CS 0x353E570
	0x0353E560 LDP X20, X19, [X31 + 0x20]
	0x0353E564 LDP X22, X21, [X31 + 0x10]
	0x0353E568 LDR X30, [X31], #0x30
	0x0353E56C RET
	0x0353E570 AND W8, W20, 0xFF
	0x0353E574 SUB W8, W8, 0x1
	0x0353E578 CMP W8, 0x4
	0x0353E57C B.HI 0x353E560
	0x0353E580 ADRP X9, 0xFFFFFFFFFD658000
	0x0353E584 ADD X9, X9, 0xD06
	0x0353E588 ADR X10, 0xFFFFFFFFFFFFFFD8
	0x0353E58C LDRB W11, [X9, X8, LSL]
	0x0353E590 ADD X10, X10, X11, 0x2, LSL
	0x0353E594 BR X10
	0x0353E598 ADRP X8, 0xBB5000
	0x0353E59C LDR X8, [X8 + 0xA28]
	0x0353E5A0 LDR X0, [X8]
	0x0353E5A4 LDR W8, [X0 + 0xE0]
	0x0353E5A8 CBNZ W8, 0x353E5B0
	0x0353E5AC BL 0x1C16DFC
	0x0353E5B0 MOV X0, X19
	0x0353E5B4 LDP X20, X19, [X31 + 0x20]
	0x0353E5B8 LDP X22, X21, [X31 + 0x10]
	0x0353E5BC MOV X1, X31
	0x0353E5C0 LDR X30, [X31], #0x30
	0x0353E5C4 B 0x3C06048
	0x0353E5C8 ADRP X8, 0xBB5000
	0x0353E5CC LDR X8, [X8 + 0xA28]
	0x0353E5D0 LDR X0, [X8]
	0x0353E5D4 LDR W8, [X0 + 0xE0]
	0x0353E5D8 CBNZ W8, 0x353E5E0
	0x0353E5DC BL 0x1C16DFC
	0x0353E5E0 MOV X0, X19
	0x0353E5E4 LDP X20, X19, [X31 + 0x20]
	0x0353E5E8 LDP X22, X21, [X31 + 0x10]
	0x0353E5EC MOV X1, X31
	0x0353E5F0 LDR X30, [X31], #0x30
	0x0353E5F4 B 0x3C0649C
	0x0353E5F8 ADRP X8, 0xBB5000
	0x0353E5FC LDR X8, [X8 + 0xA28]
	0x0353E600 LDR X0, [X8]
	0x0353E604 LDR W8, [X0 + 0xE0]
	0x0353E608 CBNZ W8, 0x353E610
	0x0353E60C BL 0x1C16DFC
	0x0353E610 MOV X0, X19
	0x0353E614 LDP X20, X19, [X31 + 0x20]
	0x0353E618 LDP X22, X21, [X31 + 0x10]
	0x0353E61C MOV X1, X31
	0x0353E620 LDR X30, [X31], #0x30
	0x0353E624 B 0x3C06A04
	0x0353E628 BL 0x1C16F20
	0x0353E62C STR X30, [X31 - 0x10]!
	0x0353E630 CBZ X1, 0x353E6A0
	0x0353E634 MOV X8, X1
	0x0353E638 LDRH W1, [X1 + 0x12]
	0x0353E63C CBZ W1, 0x353E670
	0x0353E640 LDRB W9, [X8 + 0x10]
	0x0353E644 CMP W9, 0xE1
	0x0353E648 B.EQ 0x353E678
	0x0353E64C CMP W9, 0xE3
	0x0353E650 B.EQ 0x353E68C
	0x0353E654 CMP W9, 0xE2
	0x0353E658 B.NE 0x353E670
	0x0353E65C LDR X0, [X0 + 0xB8]
	0x0353E660 CBZ X0, 0x353E6A0
	0x0353E664 LDR X2, [X8 + 0x18]
	0x0353E668 LDR X30, [X31], #0x10
	0x0353E66C B 0x353E6A4
	0x0353E670 LDR X30, [X31], #0x10
	0x0353E674 RET
	0x0353E678 LDR X0, [X0 + 0xB8]
	0x0353E67C CBZ X0, 0x353E6A0
	0x0353E680 LDR X2, [X8 + 0x18]
	0x0353E684 LDR X30, [X31], #0x10
	0x0353E688 B 0x353EA3C
	0x0353E68C LDR X0, [X0 + 0xB8]
	0x0353E690 CBZ X0, 0x353E6A0
	0x0353E694 LDR X2, [X8 + 0x18]
	0x0353E698 LDR X30, [X31], #0x10
	0x0353E69C B 0x353E870
	0x0353E6A0 BL 0x1C16F20
	0x0353E6A4 SUB X31, X31, 0x60
	0x0353E6A8 STP X30, X25, [X31 + 0x20]
	0x0353E6AC STP X24, X23, [X31 + 0x30]
	0x0353E6B0 STP X22, X21, [X31 + 0x40]
	0x0353E6B4 STP X20, X19, [X31 + 0x50]
	0x0353E6B8 ADRP X22, 0xEA1000
	0x0353E6BC LDRB W8, [X22 + 0xC28]
	0x0353E6C0 MOV X19, X2
	0x0353E6C4 MOV W20, W1
	0x0353E6C8 MOV X21, X0
	0x0353E6CC TBNZ X8, 0x0, 0x353E714
	0x0353E6D0 ADRP X0, 0xBF6000
	0x0353E6D4 LDR X0, [X0 + 0xCF8]
	0x0353E6D8 BL 0x1C16CF4
	0x0353E6DC ADRP X0, 0xBF6000
	0x0353E6E0 LDR X0, [X0 + 0xD00]
	0x0353E6E4 BL 0x1C16CF4
	0x0353E6E8 ADRP X0, 0xBF6000
	0x0353E6EC LDR X0, [X0 + 0xD08]
	0x0353E6F0 BL 0x1C16CF4
	0x0353E6F4 ADRP X0, 0xBF6000
	0x0353E6F8 LDR X0, [X0 + 0xD10]
	0x0353E6FC BL 0x1C16CF4
	0x0353E700 ADRP X0, 0xBF6000
	0x0353E704 LDR X0, [X0 + 0xD18]
	0x0353E708 BL 0x1C16CF4
	0x0353E70C MOVZ W8, 0x1
	0x0353E710 STRB W8, [X22 + 0xC28]
	0x0353E714 STP X31, X31, [X31 + 0x8]
	0x0353E718 STR X31, [X31 + 0x18]
	0x0353E71C LDR X0, [X21 + 0x28]
	0x0353E720 CBZ X0, 0x353E800
	0x0353E724 ADRP X25, 0xBF6000
	0x0353E728 ADRP X23, 0xBF6000
	0x0353E72C ADRP X24, 0xBF6000
	0x0353E730 ADRP X22, 0xBF6000
	0x0353E734 LDR X25, [X25 + 0xD18]
	0x0353E738 LDR X23, [X23 + 0xD00]
	0x0353E73C LDR X24, [X24 + 0xD10]
	0x0353E740 LDR X22, [X22 + 0xCF8]
	0x0353E744 BL 0x35440C4
	0x0353E748 LDR X1, [X25]
	0x0353E74C ADD X8, X31, 0x8
	0x0353E750 MOV X0, X21
	0x0353E754 BL 0x301CB58
	0x0353E758 LDR X1, [X23]
	0x0353E75C ADD X0, X31, 0x8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X23, 0xEA2000
	014 Move W8, [X23+3079]
	015 Move W21, W3
	016 Move X20, X2
	017 Move X22, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {52}
	023 Move X0, 0xBBE000
	024 Move X0, [X0+3424]
	025 Call 0x1C17CF4
	026 Move X0, 0xBBF000
	027 Move X0, [X0+568]
	028 Call 0x1C17CF4
	029 Move X0, 0xBBF000
	030 Move X0, [X0+576]
	031 Call 0x1C17CF4
	032 Move X0, 0xBBF000
	033 Move X0, [X0+584]
	034 Call 0x1C17CF4
	035 Move X0, 0xBBF000
	036 Move X0, [X0+592]
	037 Call 0x1C17CF4
	038 Move X0, 0xBBE000
	039 Move X0, [X0+3488]
	040 Call 0x1C17CF4
	041 Move X0, 0xBB6000
	042 Move X0, [X0+1880]
	043 Call 0x1C17CF4
	044 Move X0, 0xBBF000
	045 Move X0, [X0+600]
	046 Call 0x1C17CF4
	047 Move X0, 0xBB8000
	048 Move X0, [X0+632]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X23+3079], W8
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Compare X22, 0
	056 JumpIfEqual {75}
	057 Move X0, [X19+272]
	058 Compare X0, 0
	059 JumpIfEqual {75}
	060 Move X8, [X0]
	061 Move X1, X22
	062 Move X9, [X8+376]
	063 Move X2, [X8+384]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W8, [X19+144]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X19+272]
	068 Compare X8, 0
	069 JumpIfEqual {75}
	070 Move X0, [X19+192]
	071 Compare X0, 0
	072 JumpIfEqual {249}
	073 Move X1, X22
	074 Call InRoomCallbacksContainer.OnRoomPropertiesUpdate, X0, X1
	075 Compare X20, 0
	076 JumpIfEqual {225}
	077 Move X8, 0xBBE000
	078 Move X8, [X8+3424]
	079 Move X0, X20
	080 Move X1, [X8]
	081 Call Dictionary`2<Object, Object>.get_Count, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X19+272]
	085 Compare X0, 0
	086 JumpIfEqual {249}
	087 Move X8, [X0]
	088 Move W1, W21
	089 Move W2, W31
	090 Move X9, [X8+472]
	091 Move X3, [X8+480]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Compare X0, 0
	094 JumpIfEqual {225}
	095 Move X1, X20
	096 Move W2, W21
	097 Move X22, X0
	098 Call LoadBalancingClient.ReadoutPropertiesForActorNr, X0, X1, X2
	099 Move X8, [X22]
	100 Move X20, X0
	101 Move X0, X22
	102 Move X1, X20
	103 Move X9, [X8+376]
	104 Move X2, [X8+384]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X0, [X19+192]
	107 Compare X0, 0
	108 JumpIfEqual {249}
	109 Move X1, X22
	110 Move X2, X20
	111 Call InRoomCallbacksContainer.OnPlayerPropertiesUpdate, X0, X1, X2
	112 Move X8, 0xBBF000
	113 Move X8, [X8+568]
	114 Move X0, X20
	115 Move X1, [X8]
	116 Call Dictionary`2<Object, Object>.get_Keys, X0
	117 Compare X0, 0
	118 JumpIfEqual {249}
	119 Move X8, 0xBBF000
	120 Move X8, [X8+600]
	121 Move X1, [X8]
	122 Add X8, X31, 8
	123 Call KeyCollection<Object, Object>.GetEnumerator, X0
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move X8, [X31+24]
	126 Move X25, 0xBBF000
	127 Move X26, 0xBB6000
	128 Move X27, 0xBBE000
	129 Move X25, [X25+584]
	130 Move X26, [X26+1880]
	131 Move X27, [X27+3488]
	132 Move [X31+2], V0
	133 Move [X31+48], X8
	134 Move X28, 0xBB8000
	135 Move X28, [X28+632]
	136 Move X1, [X25]
	137 Add X0, X31, 32
	138 Call Enumerator<Object, Object>.MoveNext, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {220}
	143 Move X21, [X31+48]
	144 Compare X21, 0
	145 JumpIfEqual {240}
	146 Move X8, [X21]
	147 Move X1, [X26]
	148 Move X8, [X8+64]
	149 Move X9, [X1+64]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X21
	152 Call 0x1C17E08
	153 Move W22, [X0]
	154 Compare W22, 0
	155 JumpIfEqual {136}
	156 Move X0, X20
	157 Move X1, X21
	158 Move X2, X31
	159 Call Hashtable.get_Item, X0, X1
	160 Move X21, X0
	161 Compare X0, 0
	162 JumpIfEqual {244}
	163 Move X8, [X21]
	164 Move X1, [X27]
	165 Move W10, [X8+304]
	166 Move W9, [X1+304]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, [X8+200]
	169 Add X8, X8, X9
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W1, 255
	173 Move X0, X21
	174 Move X2, X31
	175 Call Hashtable.get_Item, X0, X1
	176 Move X23, X0
	177 Compare X0, 0
	178 JumpIfEqual {182}
	179 Move X1, [X28]
	180 Move X8, [X23]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, [X19+272]
	183 Compare X0, 0
	184 JumpIfEqual {243}
	185 Move X8, [X0]
	186 Move X9, [X8+472]
	187 Move X3, [X8+480]
	188 Move W1, W22
	189 Move W2, W31
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X24, X0
	192 Compare X0, 0
	193 JumpIfNotEqual {214}
	194 Move X8, [X19]
	195 Move X9, [X8+504]
	196 Move X5, [X8+512]
	197 Move X0, X19
	198 Move X1, X23
	199 Move W2, W22
	200 Move W3, W31
	201 Move X4, X21
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move X24, X0
	204 Move X0, [X19+272]
	205 Compare X0, 0
	206 JumpIfEqual {247}
	207 Move X8, [X0]
	208 Move X9, [X8+456]
	209 Move X2, [X8+464]
	210 Move X1, X24
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Compare X24, 0
	213 JumpIfEqual {248}
	214 Move X8, [X24]
	215 Move X9, [X8+376]
	216 Move X2, [X8+384]
	217 Move X0, X24
	218 Move X1, X21
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X8, 0xBBF000
	221 Move X8, [X8+576]
	222 Add X0, X31, 32
	223 Move X1, [X8]
	224 Call Enumerator<Object, Object>.Dispose, X0
	225 Move X20, [X31+144]
	226 Move X19, [X31+152]
	227 Move X22, [X31+128]
	228 Move X21, [X31+136]
	229 Move X24, [X31+112]
	230 Move X23, [X31+120]
	231 Move X26, [X31+96]
	232 Move X25, [X31+104]
	233 Move X28, [X31+80]
	234 Move X27, [X31+88]
	235 Move X30, [X31+64]
	236 Add X31, X31, 160
	237 Return 
	238 Move X0, X21
	239 Call 0x1C181E0
	240 Call 0x1C17F20
	241 Move X0, X21
	242 Call 0x1C181E0
	243 Call 0x1C17F20
	244 Call 0x1C17F20
	245 Move X0, X23
	246 Call 0x1C181E0
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Move X19, X0
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X0, X19
	253 Call 0x3EB2AD0
	254 Move X20, [X0]
	255 Call 0x3EB2AE0
	256 Move X8, 0xBBF000
	257 Move X8, [X8+576]
	258 Add X0, X31, 32
	259 Move X1, [X8]
	260 Call Enumerator<Object, Object>.Dispose, X0
	261 Compare X20, 0
	262 JumpIfEqual {225}
	263 Move X0, X20
	264 Call 0x1C17F18
	265 Move X20, X31
	266 Move X19, X0
	267 Move X8, 0xBBF000
	268 Move X8, [X8+576]
	269 Move X1, [X8]
	270 Add X0, X31, 32
	271 Call Enumerator<Object, Object>.Dispose, X0
	272 Compare X20, 0
	273 JumpIfNotEqual {276}
	274 Move X0, X19
	275 Call 0x1D2D690
	276 Move X0, X20
	277 Call 0x1C17F18
	278 Call 0x1991590

Method: ExitGames.Client.Photon.Hashtable ReadoutPropertiesForActorNr(ExitGames.Client.Photon.Hashtable actorProperties, System.Int32 actorNr)

Disassembly:
	0x0353E760 BL 0x2BC4350
	0x0353E764 TBZ X0, 0x0, 0x353E7D8
	0x0353E768 LDR X21, [X31 + 0x18]
	0x0353E76C CBZ X21, 0x353E7FC
	0x0353E770 LDR X8, [X21]
	0x0353E774 LDR X1, [X24]
	0x0353E778 LDRH W9, [X8 + 0x12E]
	0x0353E77C CBZ X9, 0x353E7A0
	0x0353E780 LDR X10, [X8 + 0xB0]
	0x0353E784 ADD X10, X10, 0x8
	0x0353E788 LDUR X11, [X10 - 0x8]
	0x0353E78C CMP X11, X1
	0x0353E790 B.EQ 0x353E7B0
	0x0353E794 SUBS X9, X9, 0x1
	0x0353E798 ADD X10, X10, 0x10
	0x0353E79C B.NE 0x353E788
	0x0353E7A0 MOVZ W2, 0x4
	0x0353E7A4 MOV X0, X21
	0x0353E7A8 BL 0x1C5C788
	0x0353E7AC B 0x353E7C0
	0x0353E7B0 LDR W9, [X10]
	0x0353E7B4 ADD W9, W9, 0x4
	0x0353E7B8 ADD X8, X8, W9, 0x4, SXTW
	0x0353E7BC ADD X0, X8, 0x138
	0x0353E7C0 LDP X8, X3, [X0]
	0x0353E7C4 MOV X0, X21
	0x0353E7C8 MOV W1, W20
	0x0353E7CC MOV X2, X19
	0x0353E7D0 BLR X8
	0x0353E7D4 B 0x353E758
	0x0353E7D8 LDR X1, [X22]
	0x0353E7DC ADD X0, X31, 0x8
	0x0353E7E0 BL 0x2BC434C
	0x0353E7E4 LDP X20, X19, [X31 + 0x50]
	0x0353E7E8 LDP X22, X21, [X31 + 0x40]
	0x0353E7EC LDP X24, X23, [X31 + 0x30]
	0x0353E7F0 LDP X30, X25, [X31 + 0x20]
	0x0353E7F4 ADD X31, X31, 0x60
	0x0353E7F8 RET
	0x0353E7FC BL 0x1C16F20
	0x0353E800 BL 0x1C16F20
	0x0353E804 B 0x353E80C
	0x0353E808 B 0x353E80C
	0x0353E80C MOV X19, X0
	0x0353E810 CMP W1, 0x1
	0x0353E814 B.NE 0x353E840
	0x0353E818 MOV X0, X19
	0x0353E81C BL 0x3EB1AD0
	0x0353E820 LDR X20, [X0]
	0x0353E824 BL 0x3EB1AE0
	0x0353E828 LDR X1, [X22]
	0x0353E82C ADD X0, X31, 0x8
	0x0353E830 BL 0x2BC434C
	0x0353E834 CBZ X20, 0x353E7E4
	0x0353E838 MOV X0, X20
	0x0353E83C BL 0x1C16F18
	0x0353E840 MOV X20, X31
	0x0353E844 B 0x353E84C
	0x0353E848 MOV X19, X0
	0x0353E84C LDR X1, [X22]
	0x0353E850 ADD X0, X31, 0x8
	0x0353E854 BL 0x2BC434C
	0x0353E858 CBNZ X20, 0x353E864
	0x0353E85C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEA2000
	007 Move X21, 0xBB6000
	008 Move W8, [X22+3080]
	009 Move X21, [X21+1880]
	010 Move W20, W2
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBBE000
	017 Move X0, [X0+3416]
	018 Call 0x1C17CF4
	019 Move X0, 0xBBE000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move X0, 0xBB6000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3080], W8
	027 Move X0, [X21]
	028 Add X1, X31, 12
	029 Move [X31+12], W20
	030 Call 0x1C17E04
	031 Compare X19, 0
	032 JumpIfEqual {72}
	033 Move X8, 0xBBE000
	034 Move X8, [X8+3416]
	035 Move X1, X0
	036 Move X0, X19
	037 Move X2, [X8]
	038 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {65}
	043 Move X0, [X21]
	044 Add X1, X31, 8
	045 Move [X31+8], W20
	046 Call 0x1C17E04
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call Hashtable.get_Item, X0, X1
	051 Move X19, X0
	052 Compare X0, 0
	053 JumpIfEqual {65}
	054 Move X9, 0xBBE000
	055 Move X9, [X9+3488]
	056 Move X8, [X19]
	057 Move X1, [X9]
	058 Move W10, [X8+304]
	059 Move W9, [X1+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X8+200]
	062 Add X8, X8, X9
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return X0
	072 Call 0x1C17F20
	073 Move X0, X19
	074 Call 0x1C181E0

Method: System.Void ChangeLocalID(System.Int32 newID)

Disassembly:
	0x0353E860 BL 0x1D2C690
	0x0353E864 MOV X0, X20
	0x0353E868 BL 0x1C16F18
	0x0353E86C BL 0x1990590
	0x0353E870 SUB X31, X31, 0x60
	0x0353E874 STP X30, X25, [X31 + 0x20]
	0x0353E878 STP X24, X23, [X31 + 0x30]
	0x0353E87C STP X22, X21, [X31 + 0x40]
	0x0353E880 STP X20, X19, [X31 + 0x50]
	0x0353E884 ADRP X22, 0xEA1000
	0x0353E888 LDRB W8, [X22 + 0xC26]
	0x0353E88C MOV X19, X2
	0x0353E890 MOV W20, W1
	0x0353E894 MOV X21, X0
	0x0353E898 TBNZ X8, 0x0, 0x353E8E0
	0x0353E89C ADRP X0, 0xBF6000
	0x0353E8A0 LDR X0, [X0 + 0xCF8]
	0x0353E8A4 BL 0x1C16CF4
	0x0353E8A8 ADRP X0, 0xBF6000
	0x0353E8AC LDR X0, [X0 + 0xD00]
	0x0353E8B0 BL 0x1C16CF4
	0x0353E8B4 ADRP X0, 0xBF6000
	0x0353E8B8 LDR X0, [X0 + 0xD08]
	0x0353E8BC BL 0x1C16CF4
	0x0353E8C0 ADRP X0, 0xBF6000
	0x0353E8C4 LDR X0, [X0 + 0xD10]
	0x0353E8C8 BL 0x1C16CF4
	0x0353E8CC ADRP X0, 0xBF6000
	0x0353E8D0 LDR X0, [X0 + 0xD18]
	0x0353E8D4 BL 0x1C16CF4
	0x0353E8D8 MOVZ W8, 0x1
	0x0353E8DC STRB W8, [X22 + 0xC26]
	0x0353E8E0 STP X31, X31, [X31 + 0x8]
	0x0353E8E4 STR X31, [X31 + 0x18]
	0x0353E8E8 LDR X0, [X21 + 0x28]
	0x0353E8EC CBZ X0, 0x353E9CC
	0x0353E8F0 ADRP X25, 0xBF6000
	0x0353E8F4 ADRP X23, 0xBF6000
	0x0353E8F8 ADRP X24, 0xBF6000
	0x0353E8FC ADRP X22, 0xBF6000
	0x0353E900 LDR X25, [X25 + 0xD18]
	0x0353E904 LDR X23, [X23 + 0xD00]
	0x0353E908 LDR X24, [X24 + 0xD10]
	0x0353E90C LDR X22, [X22 + 0xCF8]
	0x0353E910 BL 0x35440C4
	0x0353E914 LDR X1, [X25]
	0x0353E918 ADD X8, X31, 0x8
	0x0353E91C MOV X0, X21
	0x0353E920 BL 0x301CB58
	0x0353E924 LDR X1, [X23]
	0x0353E928 ADD X0, X31, 0x8
	0x0353E92C BL 0x2BC4350
	0x0353E930 TBZ X0, 0x0, 0x353E9A4
	0x0353E934 LDR X21, [X31 + 0x18]
	0x0353E938 CBZ X21, 0x353E9C8
	0x0353E93C LDR X8, [X21]
	0x0353E940 LDR X1, [X24]
	0x0353E944 LDRH W9, [X8 + 0x12E]
	0x0353E948 CBZ X9, 0x353E96C
	0x0353E94C LDR X10, [X8 + 0xB0]
	0x0353E950 ADD X10, X10, 0x8
	0x0353E954 LDUR X11, [X10 - 0x8]
	0x0353E958 CMP X11, X1
	0x0353E95C B.EQ 0x353E97C
	0x0353E960 SUBS X9, X9, 0x1
	0x0353E964 ADD X10, X10, 0x10
	0x0353E968 B.NE 0x353E954
	0x0353E96C MOVZ W2, 0x2
	0x0353E970 MOV X0, X21
	0x0353E974 BL 0x1C5C788
	0x0353E978 B 0x353E98C
	0x0353E97C LDR W9, [X10]
	0x0353E980 ADD W9, W9, 0x2
	0x0353E984 ADD X8, X8, W9, 0x4, SXTW
	0x0353E988 ADD X0, X8, 0x138
	0x0353E98C LDP X8, X3, [X0]
	0x0353E990 MOV X0, X21
	0x0353E994 MOV W1, W20
	0x0353E998 MOV X2, X19
	0x0353E99C BLR X8
	0x0353E9A0 B 0x353E924
	0x0353E9A4 LDR X1, [X22]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEA2000
	007 Move W8, [X21+3081]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xBB6000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0xBB6000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0xBBF000
	021 Move X0, [X0+608]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3081], W8
	025 Move X1, [X20+264]
	026 Compare X1, 0
	027 JumpIfNotEqual {64}
	028 Move X8, [X20+272]
	029 Compare X8, 0
	030 JumpIfEqual {98}
	031 Move X9, 0xBB6000
	032 Move X8, [X8+112]
	033 Move X9, [X9+2904]
	034 Add X1, X31, 12
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, [X9]
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move [X31+12], W8
	039 Call 0x1C17E04
	040 Move X8, 0xBB6000
	041 Move X8, [X8+1880]
	042 Move X21, X0
	043 Add X1, X31, 8
	044 Move [X31+8], W19
	045 Move X0, [X8]
	046 Call 0x1C17E04
	047 Move X8, 0xBBF000
	048 Move X8, [X8+608]
	049 Move X3, X0
	050 Move X1, X31
	051 Move X2, X21
	052 Move X8, [X8]
	053 Move X4, X31
	054 Move X0, X8
	055 Call String.Format, X0, X1, X2, X3
	056 Move X8, [X20]
	057 Move X2, X0
	058 Move W1, 2
	059 Move X0, X20
	060 Move X9, [X8+536]
	061 Move X3, [X8+544]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X1, [X20+264]
	064 Move X0, [X20+272]
	065 Compare X0, 0
	066 JumpIfEqual {85}
	067 Move X8, [X0]
	068 Move X9, [X8+408]
	069 Move X2, [X8+416]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X1, [X20+264]
	072 Compare X1, 0
	073 JumpIfEqual {98}
	074 Move W8, [X1+28]
	075 Compare W8, 0
	076 JumpIfEqual {78}
	077 Move [X1+24], W19
	078 Move X0, [X20+272]
	079 Compare X0, 0
	080 JumpIfEqual {98}
	081 Move X8, [X0]
	082 Move X9, [X8+456]
	083 Move X2, [X8+464]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X1, 0
	086 JumpIfEqual {98}
	087 Move W8, [X1+28]
	088 Compare W8, 0
	089 JumpIfEqual {91}
	090 Move [X1+24], W19
	091 Move [X1+16], X31
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X30, [X31+16]
	095 Move X21, [X31+24]
	096 Add X31, X31, 48
	097 Return 
	098 Call 0x1C17F20

Method: System.Void GameEnteredOnGameServer(ExitGames.Client.Photon.OperationResponse operationResponse)

Disassembly:
	0x0353E9B8 LDP X24, X23, [X31 + 0x30]
	0x0353E9BC LDP X30, X25, [X31 + 0x20]
	0x0353E9C0 ADD X31, X31, 0x60
	0x0353E9C4 RET
	0x0353E9C8 BL 0x1C16F20
	0x0353E9CC BL 0x1C16F20
	0x0353E9D0 B 0x353E9D8
	0x0353E9D4 B 0x353E9D8
	0x0353E9D8 MOV X19, X0
	0x0353E9DC CMP W1, 0x1
	0x0353E9E0 B.NE 0x353EA0C
	0x0353E9E4 MOV X0, X19
	0x0353E9E8 BL 0x3EB1AD0
	0x0353E9EC LDR X20, [X0]
	0x0353E9F0 BL 0x3EB1AE0
	0x0353E9F4 LDR X1, [X22]
	0x0353E9F8 ADD X0, X31, 0x8
	0x0353E9FC BL 0x2BC434C
	0x0353EA00 CBZ X20, 0x353E9B0
	0x0353EA04 MOV X0, X20
	0x0353EA08 BL 0x1C16F18
	0x0353EA0C MOV X20, X31
	0x0353EA10 B 0x353EA18
	0x0353EA14 MOV X19, X0
	0x0353EA18 LDR X1, [X22]
	0x0353EA1C ADD X0, X31, 0x8
	0x0353EA20 BL 0x2BC434C
	0x0353EA24 CBNZ X20, 0x353EA30
	0x0353EA28 MOV X0, X19
	0x0353EA2C BL 0x1D2C690
	0x0353EA30 MOV X0, X20
	0x0353EA34 BL 0x1C16F18
	0x0353EA38 BL 0x1990590
	0x0353EA3C SUB X31, X31, 0x60
	0x0353EA40 STP X30, X25, [X31 + 0x20]
	0x0353EA44 STP X24, X23, [X31 + 0x30]
	0x0353EA48 STP X22, X21, [X31 + 0x40]
	0x0353EA4C STP X20, X19, [X31 + 0x50]
	0x0353EA50 ADRP X22, 0xEA1000
	0x0353EA54 LDRB W8, [X22 + 0xC27]
	0x0353EA58 MOV X19, X2
	0x0353EA5C MOV W20, W1
	0x0353EA60 MOV X21, X0
	0x0353EA64 TBNZ X8, 0x0, 0x353EAAC
	0x0353EA68 ADRP X0, 0xBF6000
	0x0353EA6C LDR X0, [X0 + 0xCF8]
	0x0353EA70 BL 0x1C16CF4
	0x0353EA74 ADRP X0, 0xBF6000
	0x0353EA78 LDR X0, [X0 + 0xD00]
	0x0353EA7C BL 0x1C16CF4
	0x0353EA80 ADRP X0, 0xBF6000
	0x0353EA84 LDR X0, [X0 + 0xD08]
	0x0353EA88 BL 0x1C16CF4
	0x0353EA8C ADRP X0, 0xBF6000
	0x0353EA90 LDR X0, [X0 + 0xD10]
	0x0353EA94 BL 0x1C16CF4
	0x0353EA98 ADRP X0, 0xBF6000
	0x0353EA9C LDR X0, [X0 + 0xD18]
	0x0353EAA0 BL 0x1C16CF4
	0x0353EAA4 MOVZ W8, 0x1
	0x0353EAA8 STRB W8, [X22 + 0xC27]
	0x0353EAAC STP X31, X31, [X31 + 0x8]
	0x0353EAB0 STR X31, [X31 + 0x18]
	0x0353EAB4 LDR X0, [X21 + 0x28]
	0x0353EAB8 CBZ X0, 0x353EB98
	0x0353EABC ADRP X25, 0xBF6000
	0x0353EAC0 ADRP X23, 0xBF6000
	0x0353EAC4 ADRP X24, 0xBF6000
	0x0353EAC8 ADRP X22, 0xBF6000
	0x0353EACC LDR X25, [X25 + 0xD18]
	0x0353EAD0 LDR X23, [X23 + 0xD00]
	0x0353EAD4 LDR X24, [X24 + 0xD10]
	0x0353EAD8 LDR X22, [X22 + 0xCF8]
	0x0353EADC BL 0x35440C4
	0x0353EAE0 LDR X1, [X25]
	0x0353EAE4 ADD X8, X31, 0x8
	0x0353EAE8 MOV X0, X21
	0x0353EAEC BL 0x301CB58
	0x0353EAF0 LDR X1, [X23]
	0x0353EAF4 ADD X0, X31, 0x8
	0x0353EAF8 BL 0x2BC4350
	0x0353EAFC TBZ X0, 0x0, 0x353EB70
	0x0353EB00 LDR X21, [X31 + 0x18]
	0x0353EB04 CBZ X21, 0x353EB94
	0x0353EB08 LDR X8, [X21]
	0x0353EB0C LDR X1, [X24]
	0x0353EB10 LDRH W9, [X8 + 0x12E]
	0x0353EB14 CBZ X9, 0x353EB38
	0x0353EB18 LDR X10, [X8 + 0xB0]
	0x0353EB1C ADD X10, X10, 0x8
	0x0353EB20 LDUR X11, [X10 - 0x8]
	0x0353EB24 CMP X11, X1
	0x0353EB28 B.EQ 0x353EB48
	0x0353EB2C SUBS X9, X9, 0x1
	0x0353EB30 ADD X10, X10, 0x10
	0x0353EB34 B.NE 0x353EB20
	0x0353EB38 MOVZ W2, 0x5
	0x0353EB3C MOV X0, X21
	0x0353EB40 BL 0x1C5C788
	0x0353EB44 B 0x353EB58
	0x0353EB48 LDR W9, [X10]
	0x0353EB4C ADD W9, W9, 0x5
	0x0353EB50 ADD X8, X8, W9, 0x4, SXTW
	0x0353EB54 ADD X0, X8, 0x138
	0x0353EB58 LDP X8, X3, [X0]
	0x0353EB5C MOV X0, X21
	0x0353EB60 MOV W1, W20
	0x0353EB64 MOV X2, X19
	0x0353EB68 BLR X8
	0x0353EB6C B 0x353EAF0
	0x0353EB70 LDR X1, [X22]
	0x0353EB74 ADD X0, X31, 0x8
	0x0353EB78 BL 0x2BC434C
	0x0353EB7C LDP X20, X19, [X31 + 0x50]
	0x0353EB80 LDP X22, X21, [X31 + 0x40]
	0x0353EB84 LDP X24, X23, [X31 + 0x30]
	0x0353EB88 LDP X30, X25, [X31 + 0x20]
	0x0353EB8C ADD X31, X31, 0x60
	0x0353EB90 RET
	0x0353EB94 BL 0x1C16F20
	0x0353EB98 BL 0x1C16F20
	0x0353EB9C B 0x353EBA4
	0x0353EBA0 B 0x353EBA4
	0x0353EBA4 MOV X19, X0
	0x0353EBA8 CMP W1, 0x1
	0x0353EBAC B.NE 0x353EBD8
	0x0353EBB0 MOV X0, X19
	0x0353EBB4 BL 0x3EB1AD0
	0x0353EBB8 LDR X20, [X0]
	0x0353EBBC BL 0x3EB1AE0
	0x0353EBC0 LDR X1, [X22]
	0x0353EBC4 ADD X0, X31, 0x8
	0x0353EBC8 BL 0x2BC434C
	0x0353EBCC CBZ X20, 0x353EB7C
	0x0353EBD0 MOV X0, X20
	0x0353EBD4 BL 0x1C16F18
	0x0353EBD8 MOV X20, X31
	0x0353EBDC B 0x353EBE4
	0x0353EBE0 MOV X19, X0
	0x0353EBE4 LDR X1, [X22]
	0x0353EBE8 ADD X0, X31, 0x8
	0x0353EBEC BL 0x2BC434C
	0x0353EBF0 CBNZ X20, 0x353EBFC
	0x0353EBF4 MOV X0, X19
	0x0353EBF8 BL 0x1D2C690
	0x0353EBFC MOV X0, X20
	0x0353EC00 BL 0x1C16F18
	0x0353EC04 BL 0x1990590
	0x0353EC08 SUB X31, X31, 0xA0
	0x0353EC0C STP X29, X30, [X31 + 0x40]
	0x0353EC10 STP X28, X27, [X31 + 0x50]
	0x0353EC14 STP X26, X25, [X31 + 0x60]
	0x0353EC18 STP X24, X23, [X31 + 0x70]
	0x0353EC1C STP X22, X21, [X31 + 0x80]
	0x0353EC20 STP X20, X19, [X31 + 0x90]
	0x0353EC24 ADRP X21, 0xEA1000
	0x0353EC28 LDRB W8, [X21 + 0xC10]
	0x0353EC2C MOV X19, X1
	0x0353EC30 MOV X20, X0
	0x0353EC34 TBNZ X8, 0x0, 0x353EE2C
	0x0353EC38 ADRP X0, 0xBF6000
	0x0353EC3C LDR X0, [X0 + 0xD38]
	0x0353EC40 BL 0x1C16CF4
	0x0353EC44 ADRP X0, 0xBB5000
	0x0353EC48 LDR X0, [X0 + 0x9C8]
	0x0353EC4C BL 0x1C16CF4
	0x0353EC50 ADRP X0, 0xBF6000
	0x0353EC54 LDR X0, [X0 + 0xBE0]
	0x0353EC58 BL 0x1C16CF4
	0x0353EC5C ADRP X0, 0xBB7000
	0x0353EC60 LDR X0, [X0 + 0x9B8]
	0x0353EC64 BL 0x1C16CF4
	0x0353EC68 ADRP X0, 0xBBE000
	0x0353EC6C LDR X0, [X0 + 0x238]
	0x0353EC70 BL 0x1C16CF4
	0x0353EC74 ADRP X0, 0xBBE000
	0x0353EC78 LDR X0, [X0 + 0x2B8]
	0x0353EC7C BL 0x1C16CF4
	0x0353EC80 ADRP X0, 0xBB5000
	0x0353EC84 LDR X0, [X0 + 0x720]
	0x0353EC88 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEA2000
	009 Move W8, [X21+3082]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBBE000
	017 Move X0, [X0+3488]
	018 Call 0x1C17CF4
	019 Move X0, 0xBB7000
	020 Move X0, [X0+3672]
	021 Call 0x1C17CF4
	022 Move X0, 0xBB6000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3082], W8
	027 Move [X31+8], X31
	028 Move X8, [X19+296]
	029 Compare X8, 0
	030 JumpIfEqual {203}
	031 Move X9, [X19]
	032 Move X1, [X8+16]
	033 Move X2, [X8+24]
	034 Move X0, X19
	035 Move X8, [X9+520]
	036 Move X3, [X9+528]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move [X19+272], X0
	039 Compare X0, 0
	040 JumpIfEqual {203}
	041 Move [X0+96], X19
	042 Compare X20, 0
	043 JumpIfEqual {203}
	044 Move W1, 254
	045 Move X0, X20
	046 Move X2, X31
	047 Call OperationResponse.get_Item, X0, X1
	048 Compare X0, 0
	049 JumpIfEqual {203}
	050 Move X23, 0xBB6000
	051 Move X23, [X23+1880]
	052 Move X8, [X0]
	053 Move X1, [X23]
	054 Move X8, [X8+64]
	055 Move X9, [X1+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Call 0x1C17E08
	058 Move W1, [X0]
	059 Move X0, X19
	060 Call LoadBalancingClient.ChangeLocalID, X0, X1
	061 Move X0, [X20+32]
	062 Compare X0, 0
	063 JumpIfEqual {203}
	064 Move W1, 252
	065 Move X2, X31
	066 Call ParameterDictionary.ContainsKey, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {94}
	071 Move X0, [X20+32]
	072 Compare X0, 0
	073 JumpIfEqual {203}
	074 Move W1, 252
	075 Move X2, X31
	076 Call ParameterDictionary.get_Item, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {91}
	079 Move X8, 0xBB7000
	080 Move X8, [X8+3672]
	081 Move X21, X0
	082 Move X22, [X8]
	083 Move X1, X22
	084 Call 0x1C17E00
	085 Move X1, X0
	086 Compare X0, 0
	087 JumpIfNotEqual {92}
	088 Move X0, X21
	089 Move X1, X22
	090 Call 0x1C181E0
	091 Move X1, X31
	092 Move X0, X19
	093 Call LoadBalancingClient.UpdatedActorList, X0, X1
	094 Move X22, 0xBBE000
	095 Move X22, [X22+3488]
	096 Move W1, 249
	097 Move X0, X20
	098 Move X2, X31
	099 Call OperationResponse.get_Item, X0, X1
	100 Move X21, X0
	101 Compare X0, 0
	102 JumpIfEqual {112}
	103 Move X8, [X21]
	104 Move X1, [X22]
	105 Move W10, [X8+304]
	106 Move W9, [X1+304]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, [X8+200]
	109 Add X8, X8, X9
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W1, 248
	113 Move X0, X20
	114 Move X2, X31
	115 Call OperationResponse.get_Item, X0, X1
	116 Move X8, X0
	117 Compare X0, 0
	118 JumpIfEqual {128}
	119 Move X9, [X8]
	120 Move X1, [X22]
	121 Move W11, [X9+304]
	122 Move W10, [X1+304]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X9, [X9+200]
	125 Add X9, X9, X10
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X19
	129 Move X1, X8
	130 Move X2, X21
	131 Move W3, W31
	132 Call LoadBalancingClient.ReadoutProperties, X0, X1, X2, X3
	133 Move X0, [X20+32]
	134 Compare X0, 0
	135 JumpIfEqual {203}
	136 Add X2, X31, 8
	137 Move W1, 191
	138 Move X3, X31
	139 Call ParameterDictionary.TryGetValue, X0, X1, X2
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {160}
	144 Move X20, [X19+272]
	145 Compare X20, 0
	146 JumpIfEqual {203}
	147 Move X0, [X31+8]
	148 Compare X0, 0
	149 JumpIfEqual {203}
	150 Move X8, [X0]
	151 Move X1, [X23]
	152 Move X8, [X8+64]
	153 Move X9, [X1+64]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Call 0x1C17E08
	156 Move W1, [X0]
	157 Move X0, X20
	158 Move X2, X31
	159 Call Room.InternalCacheRoomFlags, X0, X1
	160 Move X8, [X19+272]
	161 Compare X8, 0
	162 JumpIfEqual {203}
	163 Move W8, [X8+121]
	164 Compare W8, 0
	165 JumpIfEqual {195}
	166 Move W1, [X19+144]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X8, [X19+152]
	169 Move W9, 9
	170 Move [X19+144], W9
	171 Compare X8, 0
	172 JumpIfEqual {178}
	173 Move X9, [X8+24]
	174 Move X0, [X8+64]
	175 Move X3, [X8+40]
	176 Move W2, 9
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move W8, [X19+292]
	179 Compare W8, 0
	180 JumpIfEqual {187}
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, [X19+264]
	183 Compare X8, 0
	184 JumpIfEqual {203}
	185 Move W8, [X8+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X0, [X19+184]
	188 Compare X0, 0
	189 JumpIfEqual {203}
	190 Call MatchMakingCallbacksContainer.OnCreatedRoom, X0
	191 Move X0, [X19+184]
	192 Compare X0, 0
	193 JumpIfEqual {203}
	194 Call MatchMakingCallbacksContainer.OnJoinedRoom, X0
	195 Move X20, [X31+48]
	196 Move X19, [X31+56]
	197 Move X22, [X31+32]
	198 Move X21, [X31+40]
	199 Move X30, [X31+16]
	200 Move X23, [X31+24]
	201 Add X31, X31, 64
	202 Return 
	203 Call 0x1C17F20
	204 Call 0x1C181E0
	205 Move X0, X21
	206 Call 0x1C181E0
	207 Move X0, X8
	208 Call 0x1C181E0

Method: System.Void UpdatedActorList(System.Int32[] actorsInGame)

Disassembly:
	0x0353EC8C ADRP X0, 0xBBE000
	0x0353EC90 LDR X0, [X0 + 0x240]
	0x0353EC94 BL 0x1C16CF4
	0x0353EC98 ADRP X0, 0xBBE000
	0x0353EC9C LDR X0, [X0 + 0x248]
	0x0353ECA0 BL 0x1C16CF4
	0x0353ECA4 ADRP X0, 0xBBE000
	0x0353ECA8 LDR X0, [X0 + 0x250]
	0x0353ECAC BL 0x1C16CF4
	0x0353ECB0 ADRP X0, 0xBF6000
	0x0353ECB4 LDR X0, [X0 + 0xBA8]
	0x0353ECB8 BL 0x1C16CF4
	0x0353ECBC ADRP X0, 0xBF6000
	0x0353ECC0 LDR X0, [X0 + 0xD40]
	0x0353ECC4 BL 0x1C16CF4
	0x0353ECC8 ADRP X0, 0xBBD000
	0x0353ECCC LDR X0, [X0 + 0xDA0]
	0x0353ECD0 BL 0x1C16CF4
	0x0353ECD4 ADRP X0, 0xBBE000
	0x0353ECD8 LDR X0, [X0 + 0x258]
	0x0353ECDC BL 0x1C16CF4
	0x0353ECE0 ADRP X0, 0xBF6000
	0x0353ECE4 LDR X0, [X0 + 0xD48]
	0x0353ECE8 BL 0x1C16CF4
	0x0353ECEC ADRP X0, 0xBF6000
	0x0353ECF0 LDR X0, [X0 + 0xD50]
	0x0353ECF4 BL 0x1C16CF4
	0x0353ECF8 ADRP X0, 0xBF6000
	0x0353ECFC LDR X0, [X0 + 0xD58]
	0x0353ED00 BL 0x1C16CF4
	0x0353ED04 ADRP X0, 0xBF6000
	0x0353ED08 LDR X0, [X0 + 0xD60]
	0x0353ED0C BL 0x1C16CF4
	0x0353ED10 ADRP X0, 0xBF6000
	0x0353ED14 LDR X0, [X0 + 0xD68]
	0x0353ED18 BL 0x1C16CF4
	0x0353ED1C ADRP X0, 0xBF6000
	0x0353ED20 LDR X0, [X0 + 0xD70]
	0x0353ED24 BL 0x1C16CF4
	0x0353ED28 ADRP X0, 0xBF6000
	0x0353ED2C LDR X0, [X0 + 0xD78]
	0x0353ED30 BL 0x1C16CF4
	0x0353ED34 ADRP X0, 0xBF6000
	0x0353ED38 LDR X0, [X0 + 0xBB8]
	0x0353ED3C BL 0x1C16CF4
	0x0353ED40 ADRP X0, 0xBBE000
	0x0353ED44 LDR X0, [X0 + 0x18]
	0x0353ED48 BL 0x1C16CF4
	0x0353ED4C ADRP X0, 0xBBE000
	0x0353ED50 LDR X0, [X0 + 0x40]
	0x0353ED54 BL 0x1C16CF4
	0x0353ED58 ADRP X0, 0xBBE000
	0x0353ED5C LDR X0, [X0 + 0x300]
	0x0353ED60 BL 0x1C16CF4
	0x0353ED64 ADRP X0, 0xBF6000
	0x0353ED68 LDR X0, [X0 + 0xD80]
	0x0353ED6C BL 0x1C16CF4
	0x0353ED70 ADRP X0, 0xBF6000
	0x0353ED74 LDR X0, [X0 + 0xD88]
	0x0353ED78 BL 0x1C16CF4
	0x0353ED7C ADRP X0, 0xBF6000
	0x0353ED80 LDR X0, [X0 + 0xCA8]
	0x0353ED84 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xEA2000
	010 Move W8, [X21+3083]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xBB8000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3083], W8
	022 Compare X19, 0
	023 JumpIfEqual {69}
	024 Move X8, [X19+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X25, 0xBB8000
	027 Move X25, [X25+632]
	028 Move X23, X31
	029 And X8, X8, 0
	030 Add X24, X19, 32
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W21, [X24]
	033 Compare W21, 0
	034 JumpIfEqual {66}
	035 Move X0, [X20+272]
	036 Compare X0, 0
	037 JumpIfEqual {79}
	038 Move X8, [X0]
	039 Move W1, W21
	040 Move W2, W31
	041 Move X9, [X8+472]
	042 Move X3, [X8+480]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Compare X0, 0
	045 JumpIfNotEqual {66}
	046 Move X8, [X25]
	047 Move X9, [X20]
	048 Move X22, [X20+272]
	049 Move X0, X20
	050 Move X8, [X8+184]
	051 Move W2, W21
	052 Move W3, W31
	053 Move X4, X31
	054 Move X1, [X8]
	055 Move X8, [X9+504]
	056 Move X5, [X9+512]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Compare X22, 0
	059 JumpIfEqual {79}
	060 Move X8, [X22]
	061 Move X1, X0
	062 Move X0, X22
	063 Move X9, [X8+456]
	064 Move X2, [X8+464]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W8, [X19+24]
	067 Add X23, X23, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X30, [X31+64]
	076 Move X25, [X31+72]
	077 Return 
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: Photon.Realtime.Player CreatePlayer(System.String actorName, System.Int32 actorNumber, System.Boolean isLocal, ExitGames.Client.Photon.Hashtable actorProperties)

Disassembly:
	0x0353F100 LDR X0, [X8 + 0x10]
	0x0353F104 LDRB W8, [X0 + 0x135]
	0x0353F108 TBNZ X8, 0x0, 0x353F110
	0x0353F10C BL 0x1C5C684
	0x0353F110 LDR W8, [X0 + 0xE0]
	0x0353F114 CBNZ W8, 0x353F11C
	0x0353F118 BL 0x1C16DFC
	0x0353F11C LDR X8, [X22 + 0x38]
	0x0353F120 LDR X0, [X8 + 0x10]
	0x0353F124 LDRB W8, [X0 + 0x135]
	0x0353F128 TBNZ X8, 0x0, 0x353F130
	0x0353F12C BL 0x1C5C684
	0x0353F130 LDR X8, [X0 + 0xB8]
	0x0353F134 MOV X0, X21
	0x0353F138 MOV X2, X31
	0x0353F13C LDR X1, [X8]
	0x0353F140 BL 0x3227C5C
	0x0353F144 B 0x353F76C
	0x0353F148 LDR W1, [X20 + 0x90]
	0x0353F14C CMP W1, 0xF
	0x0353F150 B.EQ 0x353F178
	0x0353F154 LDR X8, [X20 + 0x98]
	0x0353F158 MOVZ W9, 0xF
	0x0353F15C STR W9, [X20 + 0x90]
	0x0353F160 CBZ X8, 0x353F178
	0x0353F164 LDR X9, [X8 + 0x18]
	0x0353F168 LDR X0, [X8 + 0x40]
	0x0353F16C LDR X3, [X8 + 0x28]
	0x0353F170 MOVZ W2, 0xF
	0x0353F174 BLR X9
	0x0353F178 LDR X0, [X20 + 0xC8]
	0x0353F17C CBZ X0, 0x353F4D4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xEA1000
	009 Move X24, 0xBF6000
	010 Move W8, [X23+3084]
	011 Move X24, [X24+3360]
	012 Move X19, X4
	013 Move W22, W3
	014 Move W20, W2
	015 Move X21, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xBF6000
	021 Move X0, [X0+3360]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3084], W8
	025 Move X0, [X24]
	026 Call 0x1C17F10
	027 And W3, W22, 1
	028 Move X1, X21
	029 Move W2, W20
	030 Move X4, X19
	031 Move X23, X0
	032 Call Player..ctor, X0, X1, X2, X3, X4
	033 Move X0, X23
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Return X0

Method: Photon.Realtime.Room CreateRoom(System.String roomName, Photon.Realtime.RoomOptions opt)

Disassembly:
	0x0353F260 MOV X0, X20
	0x0353F264 MOV X1, X19
	0x0353F268 BL 0x353E62C
	0x0353F26C B 0x353F7C0
	0x0353F270 LDR W8, [X20 + 0x80]
	0x0353F274 ORR W9, W8, 0x2
	0x0353F278 CMP W9, 0x2
	0x0353F27C B.NE 0x353FA24
	0x0353F280 LDR X0, [X19 + 0x20]
	0x0353F284 CBZ X0, 0x353F4D4
	0x0353F288 MOVZ W1, 0xE1
	0x0353F28C MOV X2, X31
	0x0353F290 BL 0x34FC4A4
	0x0353F294 TBZ X0, 0x0, 0x353F8DC
	0x0353F298 LDR X0, [X19 + 0x20]
	0x0353F29C CBZ X0, 0x353F4D4
	0x0353F2A0 MOVZ W1, 0xE1
	0x0353F2A4 MOV X2, X31
	0x0353F2A8 BL 0x34FB9B8
	0x0353F2AC MOV X21, X0
	0x0353F2B0 CBZ X0, 0x353F2CC
	0x0353F2B4 ADRP X8, 0xBB6000
	0x0353F2B8 LDR X8, [X8 + 0x278]
	0x0353F2BC LDR X1, [X8]
	0x0353F2C0 LDR X8, [X21]
	0x0353F2C4 CMP X8, X1
	0x0353F2C8 B.NE 0x353FD88
	0x0353F2CC MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEA1000
	007 Move X22, 0xBF6000
	008 Move W8, [X21+3085]
	009 Move X22, [X22+3368]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBF6000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3085], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X19
	025 Move W3, W31
	026 Move X4, X31
	027 Move X21, X0
	028 Call Room..ctor, X0, X1, X2, X3
	029 Move X0, X21
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Boolean CheckIfOpAllowedOnServer(System.Byte opCode, Photon.Realtime.ServerConnection serverConnection)

Disassembly:
	0x0353F2D0 MOV X1, X31
	0x0353F2D4 BL 0x32277A8
	0x0353F2D8 TBNZ X0, 0x0, 0x353F8DC
	0x0353F2DC MOV X0, X20
	0x0353F2E0 MOV X1, X21
	0x0353F2E4 BL 0x3538F88
	0x0353F2E8 LDR X8, [X20 + 0x108]
	0x0353F2EC CBZ X8, 0x353F4D4
	0x0353F2F0 STR X21, [X8 + 0x28]
	0x0353F2F4 LDR X8, [X20 + 0x30]
	0x0353F2F8 CBZ X8, 0x353F8A8
	0x0353F2FC LDR X1, [X8 + 0x30]
	0x0353F300 B 0x353F8AC
	0x0353F304 MOVZ W8, 0x10
	0x0353F308 STR W8, [X20 + 0xE0]
	0x0353F30C LDR W1, [X20 + 0xE0]
	0x0353F310 B 0x353F78C
	0x0353F314 MOVZ W1, 0xE6
	0x0353F318 MOV X0, X19
	0x0353F31C MOV X2, X31
	0x0353F320 BL 0x3505754
	0x0353F324 ADRP X23, 0xBB6000
	0x0353F328 LDR X23, [X23 + 0x278]
	0x0353F32C MOV X21, X0
	0x0353F330 CBZ X0, 0x353F344
	0x0353F334 LDR X1, [X23]
	0x0353F338 LDR X8, [X21]
	0x0353F33C CMP X8, X1
	0x0353F340 B.NE 0x353FD88
	0x0353F344 LDRH W22, [X20 + 0x66]
	0x0353F348 STR X21, [X20 + 0x78]
	0x0353F34C CBZ W22, 0x353F378
	0x0353F350 ADRP X8, 0xBF5000
	0x0353F354 LDR X8, [X8 + 0xBB8]
	0x0353F358 LDR X0, [X8]
	0x0353F35C LDR W8, [X0 + 0xE0]
	0x0353F360 CBNZ W8, 0x353F368
	0x0353F364 BL 0x1C16DFC
	0x0353F368 MOV X0, X21
	0x0353F36C MOV W1, W22
	0x0353F370 BL 0x354016C
	0x0353F374 STR X0, [X20 + 0x78]
	0x0353F378 MOVZ W1, 0xFF
	0x0353F37C MOV X0, X19
	0x0353F380 MOV X2, X31
	0x0353F384 BL 0x3505754
	0x0353F388 CBZ X0, 0x353F798
	0x0353F38C LDR X8, [X23]
	0x0353F390 LDR X9, [X0]
	0x0353F394 CMP X9, X8
	0x0353F398 CSEL X21, X0, X31, EQ
	0x0353F39C B 0x353F79C
	0x0353F3A0 MOVZ W1, 0x1
	0x0353F3A4 MOV X0, X19
	0x0353F3A8 MOV X2, X31
	0x0353F3AC BL 0x3505754
	0x0353F3B0 ADRP X8, 0xBB6000
	0x0353F3B4 LDR X8, [X8 + 0x9B8]
	0x0353F3B8 LDR X1, [X8]
	0x0353F3BC BL 0x1C16E00
	0x0353F3C0 MOV X21, X0
	0x0353F3C4 MOVZ W1, 0x2
	0x0353F3C8 MOV X0, X19
	0x0353F3CC MOV X2, X31
	0x0353F3D0 BL 0x3505754
	0x0353F3D4 ADRP X8, 0xBB4000
	0x0353F3D8 LDR X8, [X8 + 0xAC8]
	0x0353F3DC LDR X1, [X8]
	0x0353F3E0 BL 0x1C16E00
	0x0353F3E4 LDR X23, [X20 + 0x138]
	0x0353F3E8 CBZ X23, 0x353F4D4
	0x0353F3EC ADRP X8, 0xBF5000
	0x0353F3F0 LDR X8, [X8 + 0xD70]
	0x0353F3F4 MOV X22, X0

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare W2, 0
	004 JumpIfNotEqual {35}
	005 Add W8, W1, 39
	006 And W9, W8, 255
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W9, 0x7F37
	009 NotImplemented "Instruction LSRV not yet implemented."
	010 And W0, W8, 1
	011 Return X0
	012 And W8, W1, 255
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W0, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 And W8, W1, 254
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W0, 1
	019 Return X0
	020 And W9, W1, 255
	021 NotImplemented "Instruction CMP not yet implemented."
	022 And W8, W1, 254
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W0, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Return X0
	027 Subtract W9, W9, 251
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W0, 1
	030 And W9, W1, 255
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, W31
	034 Return X0
	035 Move [X31-32], X30
	036 Move [X31+16], X20
	037 Move [X31+24], X19
	038 Move [X31+12], W2
	039 Move X0, 0xBF6000
	040 Move X0, [X0+3240]
	041 Call 0x1C17D08
	042 Add X1, X31, 12
	043 Call 0x1C17E04
	044 Move X19, X0
	045 Move X0, 0xBBD000
	046 Move X0, [X0+1888]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X20, X0
	050 Move X0, 0xBBE000
	051 Move X0, [X0+672]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X20
	055 Move X2, X19
	056 Move X3, X31
	057 Move X4, X31
	058 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	059 Move X0, 0xBF6000
	060 Move X0, [X0+3376]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X20
	064 Call 0x1C17DEC

Method: System.Boolean CheckIfOpCanBeSent(System.Byte opCode, Photon.Realtime.ServerConnection serverConnection, System.String opName)

Disassembly:
	0x0353BCB8 B 0x353BCC0
	0x0353BCBC MOV W0, W31
	0x0353BCC0 LDP X20, X19, [X31 + 0x20]
	0x0353BCC4 LDP X22, X21, [X31 + 0x10]
	0x0353BCC8 LDR X30, [X31], #0x30
	0x0353BCCC RET
	0x0353BCD0 BL 0x1C16F20
	0x0353BCD4 STP X30, X23, [X31 - 0x30]!
	0x0353BCD8 STP X22, X21, [X31 + 0x10]
	0x0353BCDC STP X20, X19, [X31 + 0x20]
	0x0353BCE0 ADRP X23, 0xEA4000
	0x0353BCE4 ADRP X22, 0xBC1000
	0x0353BCE8 LDRB W8, [X23 + 0xBFE]
	0x0353BCEC LDR X22, [X22 + 0x1A0]
	0x0353BCF0 MOV W19, W2
	0x0353BCF4 MOV W20, W1
	0x0353BCF8 MOV X21, X0
	0x0353BCFC TBNZ X8, 0x0, 0x353BD20
	0x0353BD00 ADRP X0, 0xBBA000
	0x0353BD04 LDR X0, [X0 + 0x278]
	0x0353BD08 BL 0x1C16CF4
	0x0353BD0C ADRP X0, 0xBC1000
	0x0353BD10 LDR X0, [X0 + 0x1A0]
	0x0353BD14 BL 0x1C16CF4
	0x0353BD18 MOVZ W8, 0x1
	0x0353BD1C STRB W8, [X23 + 0xBFE]
	0x0353BD20 LDR W2, [X21 + 0x80]
	0x0353BD24 LDR X3, [X22]
	0x0353BD28 MOVZ W1, 0xFE
	0x0353BD2C MOV X0, X21
	0x0353BD30 BL 0x353ACB8
	0x0353BD34 TBZ X0, 0x0, 0x353BDB0
	0x0353BD38 LDR W1, [X21 + 0x90]
	0x0353BD3C CMP W1, 0xA
	0x0353BD40 B.EQ 0x353BD68
	0x0353BD44 LDR X8, [X21 + 0x98]
	0x0353BD48 MOVZ W9, 0xA
	0x0353BD4C STR W9, [X21 + 0x90]
	0x0353BD50 CBZ X8, 0x353BD68
	0x0353BD54 LDR X9, [X8 + 0x18]
	0x0353BD58 LDR X0, [X8 + 0x40]
	0x0353BD5C LDR X3, [X8 + 0x28]
	0x0353BD60 MOVZ W2, 0xA
	0x0353BD64 BLR X9
	0x0353BD68 ADRP X8, 0xBBA000
	0x0353BD6C LDR X8, [X8 + 0x278]
	0x0353BD70 LDR X0, [X21 + 0x10]
	0x0353BD74 LDR X8, [X8]
	0x0353BD78 LDR X8, [X8 + 0xB8]
	0x0353BD7C LDR X8, [X8]
	0x0353BD80 STR X31, [X21 + 0x128]
	0x0353BD84 STR X8, [X21 + 0x78]
	0x0353BD88 CBZ X0, 0x353BDC4
	0x0353BD8C LDR X8, [X0]
	0x0353BD90 AND W1, W20, 0x1
	0x0353BD94 AND W2, W19, 0x1
	0x0353BD98 LDP X20, X19, [X31 + 0x20]
	0x0353BD9C LDR X4, [X8 + 0x2B8]
	0x0353BDA0 LDR X3, [X8 + 0x2C0]
	0x0353BDA4 LDP X22, X21, [X31 + 0x10]
	0x0353BDA8 LDP X30, X23, [X31], #0x30
	0x0353BDAC BR X4
	0x0353BDB0 LDP X20, X19, [X31 + 0x20]
	0x0353BDB4 LDP X22, X21, [X31 + 0x10]
	0x0353BDB8 MOV W0, W31
	0x0353BDBC LDP X30, X23, [X31], #0x30
	0x0353BDC0 RET
	0x0353BDC4 BL 0x1C16F20
	0x0353BDC8 STP X30, X23, [X31 - 0x30]!
	0x0353BDCC STP X22, X21, [X31 + 0x10]
	0x0353BDD0 STP X20, X19, [X31 + 0x20]
	0x0353BDD4 ADRP X23, 0xEA4000
	0x0353BDD8 ADRP X22, 0xBC1000
	0x0353BDDC LDRB W8, [X23 + 0xBFF]
	0x0353BDE0 LDR X22, [X22 + 0x1A8]
	0x0353BDE4 MOV X20, X2
	0x0353BDE8 MOV X21, X1
	0x0353BDEC MOV X19, X0
	0x0353BDF0 TBNZ X8, 0x0, 0x353BE20
	0x0353BDF4 ADRP X0, 0xBC1000
	0x0353BDF8 LDR X0, [X0 + 0x1B0]
	0x0353BDFC BL 0x1C16CF4
	0x0353BE00 ADRP X0, 0xBC1000
	0x0353BE04 LDR X0, [X0 + 0x1B8]
	0x0353BE08 BL 0x1C16CF4
	0x0353BE0C ADRP X0, 0xBC1000
	0x0353BE10 LDR X0, [X0 + 0x1A8]
	0x0353BE14 BL 0x1C16CF4
	0x0353BE18 MOVZ W8, 0x1
	0x0353BE1C STRB W8, [X23 + 0xBFF]
	0x0353BE20 LDR W2, [X19 + 0x80]
	0x0353BE24 LDR X3, [X22]
	0x0353BE28 MOVZ W1, 0xD9
	0x0353BE2C MOV X0, X19
	0x0353BE30 BL 0x353ACB8
	0x0353BE34 TBZ X0, 0x0, 0x353BEB8
	0x0353BE38 MOV X0, X20
	0x0353BE3C MOV X1, X31
	0x0353BE40 BL 0x32277A8
	0x0353BE44 TBZ X0, 0x0, 0x353BE58
	0x0353BE48 ADRP X9, 0xBC1000
	0x0353BE4C LDR X8, [X19]
	0x0353BE50 LDR X9, [X9 + 0x1B0]
	0x0353BE54 B 0x353BEA0
	0x0353BE58 CBZ X21, 0x353BECC
	0x0353BE5C LDRB W8, [X21 + 0x18]
	0x0353BE60 CMP W8, 0x2
	0x0353BE64 B.NE 0x353BE94
	0x0353BE68 LDR X0, [X19 + 0x10]
	0x0353BE6C CBZ X0, 0x353BECC
	0x0353BE70 LDR X8, [X0]
	0x0353BE74 MOV X1, X21
	0x0353BE78 MOV X2, X20
	0x0353BE7C LDP X20, X19, [X31 + 0x20]
	0x0353BE80 LDR X4, [X8 + 0x2C8]
	0x0353BE84 LDR X3, [X8 + 0x2D0]
	0x0353BE88 LDP X22, X21, [X31 + 0x10]
	0x0353BE8C LDP X30, X23, [X31], #0x30
	0x0353BE90 BR X4
	0x0353BE94 ADRP X9, 0xBC1000
	0x0353BE98 LDR X8, [X19]
	0x0353BE9C LDR X9, [X9 + 0x1B8]
	0x0353BEA0 LDR X2, [X9]
	0x0353BEA4 LDR X9, [X8 + 0x218]
	0x0353BEA8 LDR X3, [X8 + 0x220]
	0x0353BEAC MOVZ W1, 0x1
	0x0353BEB0 MOV X0, X19
	0x0353BEB4 BLR X9
	0x0353BEB8 LDP X20, X19, [X31 + 0x20]
	0x0353BEBC LDP X22, X21, [X31 + 0x10]
	0x0353BEC0 MOV W0, W31
	0x0353BEC4 LDP X30, X23, [X31], #0x30
	0x0353BEC8 RET
	0x0353BECC BL 0x1C16F20
	0x0353BED0 SUB X31, X31, 0x60
	0x0353BED4 STP X30, X25, [X31 + 0x20]
	0x0353BED8 STP X24, X23, [X31 + 0x30]
	0x0353BEDC STP X22, X21, [X31 + 0x40]
	0x0353BEE0 STP X20, X19, [X31 + 0x50]
	0x0353BEE4 ADRP X24, 0xEA4000
	0x0353BEE8 LDRB W8, [X24 + 0xC00]
	0x0353BEEC MOV X21, X4
	0x0353BEF0 MOV X22, X3
	0x0353BEF4 MOV X23, X2
	0x0353BEF8 MOV W20, W1
	0x0353BEFC MOV X19, X0
	0x0353BF00 TBNZ X8, 0x0, 0x353BF60
	0x0353BF04 ADRP X0, 0xBF9000
	0x0353BF08 LDR X0, [X0 + 0xB50]
	0x0353BF0C BL 0x1C16CF4
	0x0353BF10 ADRP X0, 0xBC0000
	0x0353BF14 LDR X0, [X0 + 0xD60]
	0x0353BF18 BL 0x1C16CF4
	0x0353BF1C ADRP X0, 0xBF9000
	0x0353BF20 LDR X0, [X0 + 0xBA8]
	0x0353BF24 BL 0x1C16CF4
	0x0353BF28 ADRP X0, 0xBC0000
	0x0353BF2C LDR X0, [X0 + 0xDA0]
	0x0353BF30 BL 0x1C16CF4
	0x0353BF34 ADRP X0, 0xBC1000
	0x0353BF38 LDR X0, [X0 + 0x1C0]
	0x0353BF3C BL 0x1C16CF4
	0x0353BF40 ADRP X0, 0xBC1000
	0x0353BF44 LDR X0, [X0 + 0x1C8]
	0x0353BF48 BL 0x1C16CF4
	0x0353BF4C ADRP X0, 0xBC1000
	0x0353BF50 LDR X0, [X0 + 0x1D0]
	0x0353BF54 BL 0x1C16CF4
	0x0353BF58 MOVZ W8, 0x1
	0x0353BF5C STRB W8, [X24 + 0xC00]
	0x0353BF60 CBZ X23, 0x353C004
	0x0353BF64 ADRP X25, 0xBC0000
	0x0353BF68 LDR X25, [X25 + 0xD60]
	0x0353BF6C MOV X0, X23
	0x0353BF70 LDR X1, [X25]
	0x0353BF74 BL 0x2AA4E88
	0x0353BF78 CBZ W0, 0x353C004
	0x0353BF7C LDR X8, [X19 + 0x110]
	0x0353BF80 CBZ X8, 0x353C044
	0x0353BF84 ADRP X8, 0xBC0000
	0x0353BF88 LDR X8, [X8 + 0xDA0]
	0x0353BF8C LDR X0, [X8]
	0x0353BF90 BL 0x1C16F10
	0x0353BF94 MOV X1, X31
	0x0353BF98 MOV X24, X0
	0x0353BF9C BL 0x34ED7D8
	0x0353BFA0 ADRP X8, 0xBF9000
	0x0353BFA4 LDR X8, [X8 + 0xBA8]
	0x0353BFA8 LDR X0, [X8]
	0x0353BFAC LDR W8, [X0 + 0xE0]
	0x0353BFB0 CBNZ W8, 0x353BFB8
	0x0353BFB4 BL 0x1C16DFC
	0x0353BFB8 MOV X0, X24
	0x0353BFBC MOV X1, X23
	0x0353BFC0 BL 0x3536EF8
	0x0353BFC4 CBZ X24, 0x353C0F4
	0x0353BFC8 LDR X1, [X25]
	0x0353BFCC MOV X0, X24
	0x0353BFD0 BL 0x2AA4E88
	0x0353BFD4 CBZ W0, 0x353C0E4
	0x0353BFD8 MOV X0, X19
	0x0353BFDC MOV W1, W20
	0x0353BFE0 MOV X2, X24
	0x0353BFE4 MOV X3, X22
	0x0353BFE8 MOV X4, X21
	0x0353BFEC LDP X20, X19, [X31 + 0x50]
	0x0353BFF0 LDP X22, X21, [X31 + 0x40]
	0x0353BFF4 LDP X24, X23, [X31 + 0x30]
	0x0353BFF8 LDP X30, X25, [X31 + 0x20]
	0x0353BFFC ADD X31, X31, 0x60
	0x0353C000 B 0x353C2BC
	0x0353C004 ADRP X9, 0xBC0000
	0x0353C008 LDR X8, [X19]
	0x0353C00C B 0x3EB1684
	0x0353C010 LDR X2, [X9]
	0x0353C014 LDR X9, [X8 + 0x218]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X23, 0xEA5000
	010 Move W8, [X23+3086]
	011 Move X20, X3
	012 Move W22, W2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0xBBA000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0xBFA000
	023 Move X0, [X0+3248]
	024 Call 0x1C17CF4
	025 Move X0, 0xBFA000
	026 Move X0, [X0+2896]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB9000
	029 Move X0, [X0+3576]
	030 Call 0x1C17CF4
	031 Move X0, 0xBC1000
	032 Move X0, [X0+3392]
	033 Call 0x1C17CF4
	034 Move X0, 0xBFA000
	035 Move X0, [X0+3240]
	036 Call 0x1C17CF4
	037 Move X0, 0xBB9000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move X0, 0xBC2000
	041 Move X0, [X0+224]
	042 Call 0x1C17CF4
	043 Move X0, 0xBC2000
	044 Move X0, [X0+232]
	045 Call 0x1C17CF4
	046 Move X0, 0xBC2000
	047 Move X0, [X0+240]
	048 Call 0x1C17CF4
	049 Move X0, 0xBC2000
	050 Move X0, [X0+248]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X23+3086], W8
	054 Move X8, [X19+16]
	055 Compare X8, 0
	056 JumpIfEqual {79}
	057 Move W1, W21
	058 Move W2, W22
	059 Call LoadBalancingClient.CheckIfOpAllowedOnServer, X0, X1, X2
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {93}
	064 Move X0, X19
	065 Move W1, W21
	066 Call LoadBalancingClient.CheckIfClientIsReadyToCallOperation, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {114}
	071 Move X0, [X19+16]
	072 Compare X0, 0
	073 JumpIfEqual {232}
	074 Move X1, X31
	075 Call PhotonPeer.get_PeerState, X0
	076 And W8, W0, 255
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W0, 1
	079 Move X8, 0xBBA000
	080 Move X8, [X8+2520]
	081 Add X1, X31, 44
	082 Move [X31+44], W21
	083 Move X0, [X8]
	084 Call 0x1C17E04
	085 Move X8, 0xBC2000
	086 Move X8, [X8+248]
	087 Move X2, X0
	088 Move X1, X20
	089 Move X3, X31
	090 Move X8, [X8]
	091 Move X0, X8
	092 Call String.Format, X0, X1, X2
	093 Move X8, [X19+16]
	094 Compare X8, 0
	095 JumpIfEqual {232}
	096 Move W8, [X8+64]
	097 Compare W8, 0
	098 JumpIfEqual {222}
	099 Move X8, 0xBBA000
	100 Move X8, [X8+2520]
	101 Add X1, X31, 40
	102 Move [X31+40], W21
	103 Move X0, [X8]
	104 Call 0x1C17E04
	105 Move X8, 0xBFA000
	106 Move X8, [X8+3240]
	107 Move X21, X0
	108 Add X1, X31, 28
	109 Move [X31+28], W22
	110 Move X0, [X8]
	111 Call 0x1C17E04
	112 Move X8, 0xBC2000
	113 Move X8, [X8+232]
	114 And W8, W21, 255
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, [X19+144]
	117 Subtract W8, W8, 10
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W9, 771
	120 Move W8, W8
	121 ShiftRight W8, 29
	122 And W8, W8, 0xFFFFFFF
	123 NotImplemented "Instruction MOVK not yet implemented."
	124 NotImplemented "Instruction LSRV not yet implemented."
	125 Move W22, 1
	126 Move X8, [X19+16]
	127 Compare X8, 0
	128 JumpIfEqual {232}
	129 Move W8, [X8+64]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X8, 0xBBA000
	132 Move X8, [X8+2520]
	133 Add X1, X31, 24
	134 Move [X31+24], W21
	135 Move X0, [X8]
	136 Call 0x1C17E04
	137 Move X8, 0xBB9000
	138 Move X8, [X8+1728]
	139 Move X9, 0xBFA000
	140 Move X21, X0
	141 Move X8, [X8]
	142 Move X9, [X9+3248]
	143 Move W10, [X8+224]
	144 Move X23, [X9]
	145 Compare W10, 0
	146 JumpIfNotEqual {149}
	147 Move X0, X8
	148 Call 0x1C17DFC
	149 Move X0, X23
	150 Move X1, X31
	151 Call Type.GetTypeFromHandle, X0
	152 Move X9, 0xBFA000
	153 Move W8, [X19+144]
	154 Move X9, [X9+2896]
	155 Move X23, X0
	156 Add X1, X31, 20
	157 Move [X31+20], W8
	158 Move X0, [X9]
	159 Call 0x1C17E04
	160 Move X8, 0xBB9000
	161 Move X8, [X8+3576]
	162 Move X24, X0
	163 Move X8, [X8]
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 Move X0, X23
	170 Move X1, X24
	171 Move X2, X31
	172 Call Enum.GetName, X0, X1
	173 Move X8, 0xBC2000
	174 Move X8, [X8+240]
	175 Move X3, X0
	176 Move X1, X20
	177 Move X2, X21
	178 Move X8, [X8]
	179 Move X4, X31
	180 Move X0, X8
	181 Call String.Format, X0, X1, X2, X3
	182 Move X8, [X19]
	183 Move X2, X0
	184 Move X0, X19
	185 Move W1, W22
	186 Move X8, 0xBBA000
	187 Move X8, [X8+2520]
	188 Add X1, X31, 16
	189 Move [X31+16], W21
	190 Move X0, [X8]
	191 Call 0x1C17E04
	192 Move X8, [X19+16]
	193 Compare X8, 0
	194 JumpIfEqual {232}
	195 Move X21, X0
	196 Move X0, X8
	197 Move X1, X31
	198 Call PhotonPeer.get_PeerState, X0
	199 Move X8, 0xBC1000
	200 Move X8, [X8+3392]
	201 Move [X31+12], W0
	202 Add X1, X31, 12
	203 Move X8, [X8]
	204 Move X0, X8
	205 Call 0x1C17E04
	206 Move X8, 0xBC2000
	207 Move X8, [X8+224]
	208 Move X8, [X8]
	209 Move X3, X0
	210 Move X1, X20
	211 Move X2, X21
	212 Move X0, X8
	213 Move X4, X31
	214 Call String.Format, X0, X1, X2, X3
	215 Move X8, [X19]
	216 Move X2, X0
	217 Move W1, 1
	218 Move X0, X19
	219 Move X9, [X8+536]
	220 Move X3, [X8+544]
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move W0, W31
	223 Move X20, [X31+80]
	224 Move X19, [X31+88]
	225 Move X22, [X31+64]
	226 Move X21, [X31+72]
	227 Move X24, [X31+48]
	228 Move X23, [X31+56]
	229 Move X30, [X31+32]
	230 Add X31, X31, 96
	231 Return X0
	232 Call 0x1C17F20

Method: System.Boolean CheckIfClientIsReadyToCallOperation(System.Byte opCode)

Disassembly:
	0x0353F3F8 LDR X0, [X8]
	0x0353F3FC BL 0x1C16F10
	0x0353F400 ADRP X8, 0xBF5000
	0x0353F404 LDR W1, [X23 + 0x18]
	0x0353F408 LDR X8, [X8 + 0xD60]
	0x0353F40C MOV X23, X0
	0x0353F410 LDR X2, [X8]
	0x0353F414 BL 0x301B830
	0x0353F418 LDR X8, [X20 + 0x138]
	0x0353F41C CBZ X8, 0x353F4D4
	0x0353F420 ADRP X28, 0xBF5000
	0x0353F424 ADRP X29, 0xBF5000
	0x0353F428 LDR X28, [X28 + 0xD40]
	0x0353F42C LDR X29, [X29 + 0xD50]
	0x0353F430 MOV X24, X31
	0x0353F434 ADD X26, X21, 0x20
	0x0353F438 ADD X27, X22, 0x20
	0x0353F43C LDRSW X8, [X8 + 0x18]
	0x0353F440 CMP X24, X8
	0x0353F444 B.GE 0x353F6BC
	0x0353F448 LDR X0, [X28]
	0x0353F44C BL 0x1C16F10
	0x0353F450 MOV X1, X31
	0x0353F454 MOV X25, X0
	0x0353F458 BL 0x33BDD8C
	0x0353F45C LDR X8, [X20 + 0x138]
	0x0353F460 CBZ X8, 0x353F4D4
	0x0353F464 LDR W9, [X8 + 0x18]
	0x0353F468 CMP X24, X9
	0x0353F46C B.CS 0x353FD5C
	0x0353F470 CBZ X25, 0x353F4D4
	0x0353F474 ADD X8, X8, X24, 0x3, LSL
	0x0353F478 LDR X8, [X8 + 0x20]
	0x0353F47C STR X8, [X25 + 0x10]
	0x0353F480 CBZ X22, 0x353F4D4
	0x0353F484 LDR W8, [X22 + 0x18]
	0x0353F488 CMP X24, X8
	0x0353F48C B.CS 0x353FD5C
	0x0353F490 LDR X8, [X27, X24, LSL #3]
	0x0353F494 STR X8, [X25 + 0x20]
	0x0353F498 CBZ X21, 0x353F4D4
	0x0353F49C LDR W8, [X21 + 0x18]
	0x0353F4A0 CMP X24, X8
	0x0353F4A4 B.CS 0x353FD5C
	0x0353F4A8 LDRB W8, [X26, X24, LSL]
	0x0353F4AC STRB W8, [X25 + 0x18]
	0x0353F4B0 CBZ X23, 0x353F4D4
	0x0353F4B4 LDR X3, [X29]
	0x0353F4B8 MOV X0, X23
	0x0353F4BC MOV W1, W24
	0x0353F4C0 MOV X2, X25
	0x0353F4C4 BL 0x301CEEC
	0x0353F4C8 LDR X8, [X20 + 0x138]
	0x0353F4CC ADD X24, X24, 0x1
	0x0353F4D0 CBNZ X8, 0x353F43C
	0x0353F4D4 BL 0x1C16F20
	0x0353F4D8 ADRP X8, 0xBF5000
	0x0353F4DC LDR X8, [X8 + 0xD68]
	0x0353F4E0 LDR X0, [X8]
	0x0353F4E4 BL 0x1C16F10
	0x0353F4E8 ADRP X8, 0xBF5000
	0x0353F4EC LDR X8, [X8 + 0xD58]
	0x0353F4F0 MOV X21, X0
	0x0353F4F4 LDR X1, [X8]
	0x0353F4F8 BL 0x301B7C4
	0x0353F4FC MOVZ W1, 0xDE
	0x0353F500 MOV X0, X19
	0x0353F504 MOV X2, X31
	0x0353F508 BL 0x3505754

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W8, W1, 255
	004 Subtract W9, W8, 217
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X19, X0
	007 Move X8, -43679744
	008 Add X8, X8, 3319
	009 NotImplemented "Instruction ADR not yet implemented."
	010 Move W11, [X8]
	011 Add X10, X10, X11
	012 CallNoReturn X10
	013 Move W8, [X19+144]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Or W0, W9, W8
	019 Move W8, [X19+144]
	020 Subtract W8, W8, 4
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, 2057
	023 Move X0, X19
	024 Call LoadBalancingClient.get_IsConnectedAndReady, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {47}
	029 Move W0, 1
	030 Move W8, [X19+144]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, [X19+144]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract W8, W8, 251
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X19+16]
	039 Compare X8, 0
	040 JumpIfEqual {58}
	041 Move W8, [X19+144]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 And W0, W9, W8
	047 Move W8, [X19+144]
	048 Subtract W8, W8, 6
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W9, 1089
	051 NotImplemented "Instruction LSRV not yet implemented."
	052 And W0, W8, 1
	053 Move W8, [X19+144]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X19+272]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move W0, W31
	059 Move X30, [X31+16]
	060 Move X19, [X31+24]
	061 Return X0

Method: System.Void DebugReturn(ExitGames.Client.Photon.DebugLevel level, System.String message)

Disassembly:
	0x0353F50C CBZ X0, 0x353F4D4
	0x0353F510 ADRP X9, 0xBBC000
	0x0353F514 LDR X9, [X9 + 0xDA0]
	0x0353F518 LDR X8, [X0]
	0x0353F51C MOV X22, X0
	0x0353F520 LDR X1, [X9]
	0x0353F524 LDRB W10, [X8 + 0x130]
	0x0353F528 LDRB W9, [X1 + 0x130]
	0x0353F52C CMP W10, W9
	0x0353F530 B.CC 0x353FD80
	0x0353F534 LDR X8, [X8 + 0xC8]
	0x0353F538 ADD X8, X8, X9, 0x3, LSL
	0x0353F53C LDUR X8, [X8 - 0x8]
	0x0353F540 CMP X8, X1
	0x0353F544 B.NE 0x353FD80
	0x0353F548 ADRP X8, 0xBBD000
	0x0353F54C LDR X8, [X8 + 0x238]
	0x0353F550 MOV X0, X22
	0x0353F554 LDR X1, [X8]
	0x0353F558 BL 0x2AA4E98
	0x0353F55C CBZ X0, 0x353F4D4
	0x0353F560 ADRP X8, 0xBBD000
	0x0353F564 LDR X8, [X8 + 0x258]
	0x0353F568 LDR X1, [X8]
	0x0353F56C ADD X8, X31, 0x8
	0x0353F570 BL 0x2EC7020
	0x0353F574 LDUR V0, [X31 + 0x8]
	0x0353F578 LDR X8, [X31 + 0x18]
	0x0353F57C ADRP X27, 0xBBD000
	0x0353F580 ADRP X28, 0xBB6000
	0x0353F584 ADRP X29, 0xBF5000
	0x0353F588 LDR X27, [X27 + 0x248]
	0x0353F58C LDR X28, [X28 + 0x278]
	0x0353F590 LDR X29, [X29 + 0xD88]
	0x0353F594 STR V0, [X31 + 0x2]
	0x0353F598 STR X8, [X31 + 0x30]
	0x0353F59C ADRP X26, 0xBF5000
	0x0353F5A0 LDR X26, [X26 + 0xD48]
	0x0353F5A4 LDR X1, [X27]
	0x0353F5A8 ADD X0, X31, 0x20
	0x0353F5AC BL 0x2C0B090
	0x0353F5B0 TBZ X0, 0x0, 0x353F694
	0x0353F5B4 LDR X24, [X31 + 0x30]
	0x0353F5B8 CBZ X24, 0x353F5CC
	0x0353F5BC LDR X1, [X28]
	0x0353F5C0 LDR X8, [X24]
	0x0353F5C4 CMP X8, X1
	0x0353F5C8 B.NE 0x353FD70
	0x0353F5CC MOV X0, X22
	0x0353F5D0 MOV X1, X24
	0x0353F5D4 MOV X2, X31
	0x0353F5D8 BL 0x34ED878
	0x0353F5DC MOV X25, X0
	0x0353F5E0 LDR X0, [X29]
	0x0353F5E4 BL 0x1C16F10
	0x0353F5E8 MOV X23, X0
	0x0353F5EC CBZ X25, 0x353F624
	0x0353F5F0 ADRP X9, 0xBBC000
	0x0353F5F4 LDR X8, [X25]
	0x0353F5F8 LDR X9, [X9 + 0xDA0]
	0x0353F5FC LDRB W10, [X8 + 0x130]
	0x0353F600 LDR X1, [X9]
	0x0353F604 LDRB W9, [X1 + 0x130]
	0x0353F608 CMP W10, W9
	0x0353F60C B.CC 0x353FD60
	0x0353F610 LDR X8, [X8 + 0xC8]
	0x0353F614 ADD X8, X8, X9, 0x3, LSL
	0x0353F618 LDUR X8, [X8 - 0x8]
	0x0353F61C CMP X8, X1
	0x0353F620 B.NE 0x353FD60
	0x0353F624 MOV X0, X23
	0x0353F628 MOV X1, X24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEA1000
	007 Move W8, [X22+3087]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xBB5000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3087], W8
	020 Move X8, [X21+16]
	021 Compare X8, 0
	022 JumpIfEqual {89}
	023 Move W8, [X8+64]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return 
	032 And W8, W20, 255
	033 Subtract W8, W8, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, -43679744
	036 Add X9, X9, 3334
	037 NotImplemented "Instruction ADR not yet implemented."
	038 Move W11, [X9]
	039 Add X10, X10, X11
	040 CallNoReturn X10
	041 Move X8, 0xBB5000
	042 Move X8, [X8+2600]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+48]
	055 Call Debug.Log, X0
	056 Return 
	057 Move X8, 0xBB5000
	058 Move X8, [X8+2600]
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X1, X31
	070 Move X30, [X31+48]
	071 Call Debug.LogError, X0
	072 Return 
	073 Move X8, 0xBB5000
	074 Move X8, [X8+2600]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X1, X31
	086 Move X30, [X31+48]
	087 Call Debug.LogWarning, X0
	088 Return 
	089 Call 0x1C17F20

Method: System.Void CallbackRoomEnterFailed(ExitGames.Client.Photon.OperationResponse operationResponse)

Disassembly:
	0x0353F62C MOV X2, X25
	0x0353F630 MOV X3, X31
	0x0353F634 BL 0x354C6BC
	0x0353F638 CBZ X21, 0x353FD68
	0x0353F63C LDR W10, [X21 + 0x1C]
	0x0353F640 LDR X8, [X21 + 0x10]
	0x0353F644 LDR X9, [X26]
	0x0353F648 ADD W10, W10, 0x1
	0x0353F64C STR W10, [X21 + 0x1C]
	0x0353F650 CBZ X8, 0x353FD6C
	0x0353F654 LDRSW X10, [X21 + 0x18]
	0x0353F658 LDR W11, [X8 + 0x18]
	0x0353F65C CMP W10, W11
	0x0353F660 B.CS 0x353F678
	0x0353F664 ADD W9, W10, 0x1
	0x0353F668 ADD X8, X8, X10, 0x3, LSL
	0x0353F66C STR W9, [X21 + 0x18]
	0x0353F670 STR X23, [X8 + 0x20]
	0x0353F674 B 0x353F5A4
	0x0353F678 LDR X8, [X9 + 0x20]
	0x0353F67C LDR X8, [X8 + 0xC0]
	0x0353F680 LDR X2, [X8 + 0x70]
	0x0353F684 MOV X0, X21
	0x0353F688 MOV X1, X23
	0x0353F68C BL 0x301BF90
	0x0353F690 B 0x353F5A4
	0x0353F694 ADRP X8, 0xBBD000
	0x0353F698 LDR X8, [X8 + 0x240]
	0x0353F69C ADD X0, X31, 0x20
	0x0353F6A0 LDR X1, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {33}
	004 Move X8, X1
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 Compare W1, 0
	007 JumpIfEqual {17}
	008 Move W9, [X8+16]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, [X0+184]
	013 Compare X0, 0
	014 JumpIfEqual {33}
	015 Move X2, [X8+24]
	016 Move X30, [X31+16]
	017 Move X30, [X31+16]
	018 Return 
	019 Move X0, [X0+184]
	020 Compare X0, 0
	021 JumpIfEqual {33}
	022 Move X2, [X8+24]
	023 Move X30, [X31+16]
	024 Call MatchMakingCallbacksContainer.OnJoinRandomFailed, X0, X1, X2
	025 Return 
	026 Move X0, [X0+184]
	027 Compare X0, 0
	028 JumpIfEqual {33}
	029 Move X2, [X8+24]
	030 Move X30, [X31+16]
	031 Call MatchMakingCallbacksContainer.OnCreateRoomFailed, X0, X1, X2
	032 Return 
	033 Call 0x1C17F20

Method: System.Void OnOperationResponse(ExitGames.Client.Photon.OperationResponse operationResponse)

Disassembly:
	0x0353FC08 LDR X8, [X20 + 0x108]
	0x0353FC0C CBZ X8, 0x353F4D4
	0x0353FC10 ADRP X9, 0xBF5000
	0x0353FC14 LDR X9, [X9 + 0xBA8]
	0x0353FC18 LDR X22, [X8 + 0x38]
	0x0353FC1C LDR X0, [X9]
	0x0353FC20 LDR W9, [X0 + 0xE0]
	0x0353FC24 CBNZ W9, 0x353FC2C
	0x0353FC28 BL 0x1C16DFC
	0x0353FC2C MOV X0, X21
	0x0353FC30 MOV X1, X22
	0x0353FC34 BL 0x3536AB8
	0x0353FC38 LDR X8, [X20 + 0x108]
	0x0353FC3C CBZ X8, 0x353F4D4
	0x0353FC40 LDR X0, [X8 + 0x20]
	0x0353FC44 MOV X1, X31
	0x0353FC48 BL 0x32277A8
	0x0353FC4C TBNZ X0, 0x0, 0x353FC70
	0x0353FC50 LDR X8, [X20 + 0x108]
	0x0353FC54 CBZ X8, 0x353F4D4
	0x0353FC58 CBZ X21, 0x353F4D4
	0x0353FC5C LDR X2, [X8 + 0x20]
	0x0353FC60 MOVZ W1, 0xFF
	0x0353FC64 MOV X0, X21
	0x0353FC68 MOV X3, X31
	0x0353FC6C BL 0x34ED9F4
	0x0353FC70 LDR X1, [X20 + 0x128]
	0x0353FC74 CBZ X1, 0x353F4D4
	0x0353FC78 STR X21, [X1 + 0x28]
	0x0353FC7C MOVZ W8, 0x1
	0x0353FC80 STRB W8, [X1 + 0x30]
	0x0353FC84 LDR W8, [X20 + 0x124]
	0x0353FC88 SUB W9, W8, 0x1
	0x0353FC8C CMP W9, 0x4
	0x0353FC90 B.CS 0x353FD3C
	0x0353FC94 LDR X0, [X20 + 0x10]
	0x0353FC98 CBZ X0, 0x353F4D4
	0x0353FC9C LDR X8, [X0]
	0x0353FCA0 LDR X9, [X8 + 0x288]
	0x0353FCA4 LDR X2, [X8 + 0x290]
	0x0353FCA8 B 0x353FD54
	0x0353FCAC LDR X0, [X20 + 0xB0]
	0x0353FCB0 CBZ X0, 0x353F4D4
	0x0353FCB4 BL 0x35402D4
	0x0353FCB8 LDR W8, [X20 + 0x38]
	0x0353FCBC CBZ W8, 0x353FCDC
	0x0353FCC0 LDR X0, [X20 + 0x10]
	0x0353FCC4 CBZ X0, 0x353F4D4
	0x0353FCC8 LDR X8, [X0]
	0x0353FCCC LDRB W1, [X20 + 0xF8]
	0x0353FCD0 LDR X9, [X8 + 0x328]
	0x0353FCD4 LDR X2, [X8 + 0x330]
	0x0353FCD8 BLR X9
	0x0353FCDC MOVZ W1, 0xF5
	0x0353FCE0 MOV X0, X19
	0x0353FCE4 MOV X2, X31
	0x0353FCE8 BL 0x3505754
	0x0353FCEC CBZ X0, 0x353F7C0
	0x0353FCF0 ADRP X10, 0xBB4000
	0x0353FCF4 LDR X10, [X10 + 0x720]
	0x0353FCF8 LDR X9, [X0]
	0x0353FCFC MOV X8, X0
	0x0353FD00 LDR X1, [X10]
	0x0353FD04 LDRB W11, [X9 + 0x130]
	0x0353FD08 LDRB W10, [X1 + 0x130]
	0x0353FD0C CMP W11, W10
	0x0353FD10 B.CC 0x353FD78
	0x0353FD14 LDR X9, [X9 + 0xC8]
	0x0353FD18 ADD X9, X9, X10, 0x3, LSL
	0x0353FD1C LDUR X9, [X9 - 0x8]
	0x0353FD20 CMP X9, X1
	0x0353FD24 B.NE 0x353FD78
	0x0353FD28 LDR X0, [X20 + 0xB0]
	0x0353FD2C CBZ X0, 0x353F4D4
	0x0353FD30 MOV X1, X8
	0x0353FD34 BL 0x3540490
	0x0353FD38 B 0x353F7C0
	0x0353FD3C CBNZ W8, 0x353F7C0
	0x0353FD40 LDR X0, [X20 + 0x10]
	0x0353FD44 CBZ X0, 0x353F4D4
	0x0353FD48 LDR X8, [X0]
	0x0353FD4C LDR X9, [X8 + 0x278]
	0x0353FD50 LDR X2, [X8 + 0x280]
	0x0353FD54 BLR X9
	0x0353FD58 B 0x353F7C0
	0x0353FD5C BL 0x1C16F28
	0x0353FD60 MOV X0, X25
	0x0353FD64 BL 0x1C171E0
	0x0353FD68 BL 0x1C16F20
	0x0353FD6C BL 0x1C16F20
	0x0353FD70 MOV X0, X24
	0x0353FD74 BL 0x1C171E0
	0x0353FD78 MOV X0, X8
	0x0353FD7C BL 0x1C171E0
	0x0353FD80 MOV X0, X22
	0x0353FD84 BL 0x1C171E0
	0x0353FD88 MOV X0, X21
	0x0353FD8C BL 0x1C171E0
	0x0353FD90 B 0x353FDA0
	0x0353FD94 B 0x353FDA0
	0x0353FD98 B 0x353FDA0
	0x0353FD9C B 0x353FDA0
	0x0353FDA0 MOV X22, X0
	0x0353FDA4 CMP W1, 0x1
	0x0353FDA8 B.NE 0x353FDDC
	0x0353FDAC MOV X0, X22
	0x0353FDB0 BL 0x3EB1AD0
	0x0353FDB4 LDR X23, [X0]
	0x0353FDB8 BL 0x3EB1AE0
	0x0353FDBC ADRP X8, 0xBBD000
	0x0353FDC0 LDR X8, [X8 + 0x240]
	0x0353FDC4 ADD X0, X31, 0x20
	0x0353FDC8 LDR X1, [X8]
	0x0353FDCC BL 0x2C0B08C
	0x0353FDD0 CBZ X23, 0x353F6A8
	0x0353FDD4 MOV X0, X23
	0x0353FDD8 BL 0x1C16F18
	0x0353FDDC MOV X23, X31
	0x0353FDE0 B 0x353FDE8
	0x0353FDE4 MOV X22, X0
	0x0353FDE8 ADRP X8, 0xBBD000
	0x0353FDEC LDR X8, [X8 + 0x240]
	0x0353FDF0 LDR X1, [X8]
	0x0353FDF4 ADD X0, X31, 0x20
	0x0353FDF8 BL 0x2C0B08C
	0x0353FDFC CBNZ X23, 0x353FE08
	0x0353FE00 MOV X0, X22
	0x0353FE04 BL 0x1D2C690
	0x0353FE08 MOV X0, X23
	0x0353FE0C BL 0x1C16F18
	0x0353FE10 BL 0x1990590
	0x0353FE14 SUB X31, X31, 0x60
	0x0353FE18 STR X30, [X31 + 0x20]
	0x0353FE1C STP X24, X23, [X31 + 0x30]
	0x0353FE20 STP X22, X21, [X31 + 0x40]
	0x0353FE24 STP X20, X19, [X31 + 0x50]
	0x0353FE28 ADRP X21, 0xEA0000
	0x0353FE2C LDRB W8, [X21 + 0xC22]
	0x0353FE30 MOV X19, X1
	0x0353FE34 MOV X20, X0
	0x0353FE38 TBNZ X8, 0x0, 0x353FE80
	0x0353FE3C ADRP X0, 0xBF5000
	0x0353FE40 LDR X0, [X0 + 0xD90]
	0x0353FE44 BL 0x1C16CF4
	0x0353FE48 ADRP X0, 0xBF5000
	0x0353FE4C LDR X0, [X0 + 0xD98]
	0x0353FE50 BL 0x1C16CF4
	0x0353FE54 ADRP X0, 0xBF5000
	0x0353FE58 LDR X0, [X0 + 0xDA0]
	0x0353FE5C BL 0x1C16CF4
	0x0353FE60 ADRP X0, 0xBF5000
	0x0353FE64 LDR X0, [X0 + 0xDA8]
	0x0353FE68 BL 0x1C16CF4
	0x0353FE6C ADRP X0, 0xBF5000
	0x0353FE70 LDR X0, [X0 + 0xDB0]
	0x0353FE74 BL 0x1C16CF4
	0x0353FE78 MOVZ W8, 0x1
	0x0353FE7C STRB W8, [X21 + 0xC22]
	0x0353FE80 STP X31, X31, [X31 + 0x8]
	0x0353FE84 STR X31, [X31 + 0x18]
	0x0353FE88 LDR X0, [X20 + 0x28]
	0x0353FE8C CBZ X0, 0x353FF68
	0x0353FE90 ADRP X24, 0xBF5000
	0x0353FE94 ADRP X22, 0xBF5000
	0x0353FE98 ADRP X23, 0xBF5000
	0x0353FE9C ADRP X21, 0xBF5000
	0x0353FEA0 LDR X24, [X24 + 0xDB0]
	0x0353FEA4 LDR X22, [X22 + 0xD98]
	0x0353FEA8 LDR X23, [X23 + 0xDA8]
	0x0353FEAC LDR X21, [X21 + 0xD90]
	0x0353FEB0 BL 0x35440C4
	0x0353FEB4 LDR X1, [X24]
	0x0353FEB8 ADD X8, X31, 0x8
	0x0353FEBC MOV X0, X20
	0x0353FEC0 BL 0x301CB58
	0x0353FEC4 LDR X1, [X22]
	0x0353FEC8 ADD X0, X31, 0x8
	0x0353FECC BL 0x2BC4350
	0x0353FED0 TBZ X0, 0x0, 0x353FF40
	0x0353FED4 LDR X20, [X31 + 0x18]
	0x0353FED8 CBZ X20, 0x353FF64
	0x0353FEDC LDR X8, [X20]
	0x0353FEE0 LDR X1, [X23]
	0x0353FEE4 LDRH W9, [X8 + 0x12E]
	0x0353FEE8 CBZ X9, 0x353FF0C
	0x0353FEEC LDR X10, [X8 + 0xB0]
	0x0353FEF0 ADD X10, X10, 0x8
	0x0353FEF4 LDUR X11, [X10 - 0x8]
	0x0353FEF8 CMP X11, X1
	0x0353FEFC B.EQ 0x353FF1C
	0x0353FF00 SUBS X9, X9, 0x1
	0x0353FF04 ADD X10, X10, 0x10
	0x0353FF08 B.NE 0x353FEF4
	0x0353FF0C MOVZ W2, 0x5
	0x0353FF10 MOV X0, X20
	0x0353FF14 BL 0x1C5C788
	0x0353FF18 B 0x353FF2C
	0x0353FF1C LDR W9, [X10]
	0x0353FF20 ADD W9, W9, 0x5
	0x0353FF24 ADD X8, X8, W9, 0x4, SXTW
	0x0353FF28 ADD X0, X8, 0x138
	0x0353FF2C LDP X8, X2, [X0]
	0x0353FF30 MOV X0, X20
	0x0353FF34 MOV X1, X19
	0x0353FF38 BLR X8
	0x0353FF3C B 0x353FEC4
	0x0353FF40 LDR X1, [X21]
	0x0353FF44 ADD X0, X31, 0x8
	0x0353FF48 BL 0x2BC434C
	0x0353FF4C LDP X20, X19, [X31 + 0x50]
	0x0353FF50 LDP X22, X21, [X31 + 0x40]
	0x0353FF54 LDP X24, X23, [X31 + 0x30]
	0x0353FF58 LDR X30, [X31 + 0x20]
	0x0353FF5C ADD X31, X31, 0x60
	0x0353FF60 RET
	0x0353FF64 BL 0x1C16F20
	0x0353FF68 BL 0x1C16F20
	0x0353FF6C B 0x353FF74
	0x0353FF70 B 0x353FF74
	0x0353FF74 MOV X19, X0
	0x0353FF78 CMP W1, 0x1
	0x0353FF7C B.NE 0x353FFA8
	0x0353FF80 MOV X0, X19
	0x0353FF84 BL 0x3EB1AD0
	0x0353FF88 LDR X20, [X0]
	0x0353FF8C BL 0x3EB1AE0
	0x0353FF90 LDR X1, [X21]
	0x0353FF94 ADD X0, X31, 0x8
	0x0353FF98 BL 0x2BC434C
	0x0353FF9C CBZ X20, 0x353FF4C
	0x0353FFA0 MOV X0, X20
	0x0353FFA4 BL 0x1C16F18
	0x0353FFA8 MOV X20, X31
	0x0353FFAC B 0x353FFB4
	0x0353FFB0 MOV X19, X0
	0x0353FFB4 LDR X1, [X21]
	0x0353FFB8 ADD X0, X31, 0x8
	0x0353FFBC BL 0x2BC434C
	0x0353FFC0 CBNZ X20, 0x353FFCC
	0x0353FFC4 MOV X0, X19
	0x0353FFC8 BL 0x1D2C690
	0x0353FFCC MOV X0, X20
	0x0353FFD0 BL 0x1C16F18
	0x0353FFD4 BL 0x1990590
	0x0353FFD8 STP X30, X21, [X31 - 0x20]!
	0x0353FFDC STP X20, X19, [X31 + 0x10]
	0x0353FFE0 ADRP X21, 0xEA0000
	0x0353FFE4 LDRB W8, [X21 + 0xC16]
	0x0353FFE8 MOV X20, X1
	0x0353FFEC MOV X19, X0
	0x0353FFF0 TBNZ X8, 0x0, 0x3540020
	0x0353FFF4 ADRP X0, 0xBB4000
	0x0353FFF8 LDR X0, [X0 + 0x618]
	0x0353FFFC BL 0x1C16CF4
	0x03540000 ADRP X0, 0xBB4000
	0x03540004 LDR X0, [X0 + 0x9D8]
	0x03540008 BL 0x1C16CF4
	0x0354000C ADRP X0, 0xBBC000
	0x03540010 LDR X0, [X0 + 0x390]
	0x03540014 BL 0x1C16CF4
	0x03540018 MOVZ W8, 0x1
	0x0354001C STRB W8, [X21 + 0xC16]
	0x03540020 CBZ X20, 0x3540130
	0x03540024 ADRP X21, 0xBBC000
	0x03540028 LDR X21, [X21 + 0x390]
	0x0354002C MOV X0, X20
	0x03540030 MOV W1, W31
	0x03540034 LDR X2, [X21]
	0x03540038 BL 0x29D3494
	0x0354003C CBZ X0, 0x3540130
	0x03540040 ADRP X8, 0xBB4000
	0x03540044 LDR X8, [X8 + 0x9D8]
	0x03540048 LDR X9, [X0]
	0x0354004C LDR X1, [X8]
	0x03540050 LDR X8, [X9 + 0x40]
	0x03540054 LDR X9, [X1 + 0x40]
	0x03540058 CMP X8, X9
	0x0354005C B.NE 0x3540134
	0x03540060 BL 0x1C16E08
	0x03540064 LDRB W8, [X0]
	0x03540068 CMP W8, 0xD
	0x0354006C B.EQ 0x35400AC
	0x03540070 CBNZ W8, 0x3540138
	0x03540074 LDR X2, [X21]
	0x03540078 MOVZ W1, 0x1
	0x0354007C MOV X0, X20
	0x03540080 BL 0x29D3494
	0x03540084 CBZ X0, 0x3540114
	0x03540088 ADRP X8, 0xBB3000
	0x0354008C LDR X8, [X8 + 0x618]
	0x03540090 MOV X20, X0
	0x03540094 LDR X21, [X8]
	0x03540098 MOV X1, X21
	0x0354009C BL 0x1C16E00
	0x035400A0 MOV X1, X0
	0x035400A4 CBNZ X0, 0x3540118
	0x035400A8 B 0x35400E0
	0x035400AC LDR X2, [X21]
	0x035400B0 MOVZ W1, 0x1
	0x035400B4 MOV X0, X20
	0x035400B8 BL 0x29D3494
	0x035400BC CBZ X0, 0x35400EC
	0x035400C0 ADRP X8, 0xBB3000
	0x035400C4 LDR X8, [X8 + 0x618]
	0x035400C8 MOV X20, X0
	0x035400CC LDR X21, [X8]
	0x035400D0 MOV X1, X21
	0x035400D4 BL 0x1C16E00
	0x035400D8 MOV X1, X0
	0x035400DC CBNZ X0, 0x35400F0
	0x035400E0 MOV X0, X20
	0x035400E4 MOV X1, X21
	0x035400E8 BL 0x1C171E0
	0x035400EC MOV X1, X31
	0x035400F0 LDR X0, [X19 + 0x10]
	0x035400F4 CBZ X0, 0x3540130
	0x035400F8 LDP X20, X19, [X31 + 0x10]
	0x035400FC MOVZ W3, 0x1
	0x03540100 MOVZ W4, 0x1
	0x03540104 MOV X2, X31
	0x03540108 MOV X5, X31
	0x0354010C LDP X30, X21, [X31], #0x20
	0x03540110 B 0x3503F44
	0x03540114 MOV X1, X31
	0x03540118 LDR X0, [X19 + 0x10]
	0x0354011C CBZ X0, 0x3540130
	0x03540120 LDP X20, X19, [X31 + 0x10]
	0x03540124 MOV X2, X31
	0x03540128 LDP X30, X21, [X31], #0x20
	0x0354012C B 0x3504530
	0x03540130 BL 0x1C16F20
	0x03540134 BL 0x1C171E0
	0x03540138 ADRP X0, 0xBBB000
	0x0354013C LDR X0, [X0 + 0x760]
	0x03540140 BL 0x1C16D08
	0x03540144 BL 0x1C16F10
	0x03540148 MOV X1, X31
	0x0354014C MOV X19, X0
	0x03540150 BL 0x3315FB8
	0x03540154 ADRP X0, 0xBF4000
	0x03540158 LDR X0, [X0 + 0xDB8]
	0x0354015C BL 0x1C16D08
	0x03540160 MOV X1, X0
	0x03540164 MOV X0, X19
	0x03540168 BL 0x1C16DEC
	0x0354016C SUB X31, X31, 0x30
	0x03540170 STP X30, X21, [X31 + 0x10]
	0x03540174 STP X20, X19, [X31 + 0x20]
	0x03540178 ADRP X21, 0xE9F000
	0x0354017C LDRB W8, [X21 + 0xC15]
	0x03540180 MOV W19, W1
	0x03540184 MOV X20, X0
	0x03540188 TBNZ X8, 0x0, 0x35401D0
	0x0354018C ADRP X0, 0xBB8000
	0x03540190 LDR X0, [X0 + 0x658]
	0x03540194 BL 0x1C16CF4
	0x03540198 ADRP X0, 0xBBC000
	0x0354019C LDR X0, [X0 + 0x3A0]
	0x035401A0 BL 0x1C16CF4
	0x035401A4 ADRP X0, 0xBBC000
	0x035401A8 LDR X0, [X0 + 0x3A8]
	0x035401AC BL 0x1C16CF4
	0x035401B0 ADRP X0, 0xBBB000
	0x035401B4 LDR X0, [X0 + 0xFF0]
	0x035401B8 BL 0x1C16CF4
	0x035401BC ADRP X0, 0xBBC000
	0x035401C0 LDR X0, [X0 + 0x3B0]
	0x035401C4 BL 0x1C16CF4
	0x035401C8 MOVZ W8, 0x1
	0x035401CC STRB W8, [X21 + 0xC15]
	0x035401D0 CBZ X20, 0x35402D0
	0x035401D4 ADRP X8, 0xBBC000
	0x035401D8 LDR X8, [X8 + 0x3A8]
	0x035401DC MOV X0, X20
	0x035401E0 MOV X2, X31
	0x035401E4 LDR X1, [X8]
	0x035401E8 BL 0x3226F64
	0x035401EC TBZ X0, 0x0, 0x3540240
	0x035401F0 ADRP X8, 0xBBC000
	0x035401F4 LDR X8, [X8 + 0x3A0]
	0x035401F8 LDR X0, [X8]
	0x035401FC BL 0x1C16F10
	0x03540200 MOV X1, X20
	0x03540204 MOV X2, X31
	0x03540208 MOV X21, X0
	0x0354020C BL 0x3627EE0
	0x03540210 CBZ X21, 0x35402D0
	0x03540214 AND W1, W19, 0xFFFF
	0x03540218 MOV X0, X21
	0x0354021C MOV X2, X31
	0x03540220 BL 0x3628858
	0x03540224 LDR X8, [X21]
	0x03540228 MOV X0, X21
	0x0354022C LDP X20, X19, [X31 + 0x20]
	0x03540230 LDP X30, X21, [X31 + 0x10]
	0x03540234 LDP X2, X1, [X8 + 0x168]
	0x03540238 ADD X31, X31, 0x30
	0x0354023C BR X2
	0x03540240 ADRP X8, 0xBBC000
	0x03540244 LDR X8, [X8 + 0x3B0]
	0x03540248 MOV X1, X20
	0x0354024C MOV X2, X31
	0x03540250 LDR X0, [X8]
	0x03540254 BL 0x321EFD0
	0x03540258 ADRP X8, 0xBBC000
	0x0354025C LDR X8, [X8 + 0x3A0]
	0x03540260 MOV X21, X0
	0x03540264 LDR X8, [X8]
	0x03540268 MOV X0, X8
	0x0354026C BL 0x1C16F10
	0x03540270 MOV X1, X21
	0x03540274 MOV X2, X31
	0x03540278 MOV X20, X0
	0x0354027C BL 0x3627EE0
	0x03540280 CBZ X20, 0x35402D0
	0x03540284 ADRP X8, 0xBB8000
	0x03540288 LDR X20, [X20 + 0x20]
	0x0354028C LDR X8, [X8 + 0x658]
	0x03540290 ADD X1, X31, 0xC
	0x03540294 STRH W19, [X31 + 0xC]
	0x03540298 LDR X0, [X8]
	0x0354029C BL 0x1C16E04
	0x035402A0 ADRP X8, 0xBBB000
	0x035402A4 LDR X8, [X8 + 0xFF0]
	0x035402A8 MOV X2, X0
	0x035402AC MOV X1, X20
	0x035402B0 MOV X3, X31
	0x035402B4 LDR X8, [X8]
	0x035402B8 MOV X0, X8
	0x035402BC BL 0x3227BD4
	0x035402C0 LDP X20, X19, [X31 + 0x20]
	0x035402C4 LDP X30, X21, [X31 + 0x10]
	0x035402C8 ADD X31, X31, 0x30
	0x035402CC RET
	0x035402D0 BL 0x1C16F20
	0x035402D4 SUB X31, X31, 0x50
	0x035402D8 STP X30, X23, [X31 + 0x20]
	0x035402DC STP X22, X21, [X31 + 0x30]
	0x035402E0 STP X20, X19, [X31 + 0x40]
	0x035402E4 ADRP X20, 0xE9F000
	0x035402E8 LDRB W8, [X20 + 0xC1E]
	0x035402EC MOV X19, X0
	0x035402F0 TBNZ X8, 0x0, 0x3540338
	0x035402F4 ADRP X0, 0xBF4000
	0x035402F8 LDR X0, [X0 + 0xD90]
	0x035402FC BL 0x1C16CF4
	0x03540300 ADRP X0, 0xBF4000
	0x03540304 LDR X0, [X0 + 0xD98]
	0x03540308 BL 0x1C16CF4
	0x0354030C ADRP X0, 0xBF4000
	0x03540310 LDR X0, [X0 + 0xDA0]
	0x03540314 BL 0x1C16CF4
	0x03540318 ADRP X0, 0xBF4000
	0x0354031C LDR X0, [X0 + 0xDA8]
	0x03540320 BL 0x1C16CF4
	0x03540324 ADRP X0, 0xBF4000
	0x03540328 LDR X0, [X0 + 0xDB0]
	0x0354032C BL 0x1C16CF4
	0x03540330 MOVZ W8, 0x1
	0x03540334 STRB W8, [X20 + 0xC1E]
	0x03540338 STP X31, X31, [X31 + 0x8]
	0x0354033C STR X31, [X31 + 0x18]
	0x03540340 LDR X0, [X19 + 0x28]
	0x03540344 CBZ X0, 0x354041C
	0x03540348 ADRP X23, 0xBF4000
	0x0354034C ADRP X21, 0xBF4000
	0x03540350 ADRP X22, 0xBF4000
	0x03540354 ADRP X20, 0xBF4000
	0x03540358 LDR X23, [X23 + 0xDB0]
	0x0354035C LDR X21, [X21 + 0xD98]
	0x03540360 LDR X22, [X22 + 0xDA8]
	0x03540364 LDR X20, [X20 + 0xD90]
	0x03540368 BL 0x35440C4
	0x0354036C LDR X1, [X23]
	0x03540370 ADD X8, X31, 0x8
	0x03540374 MOV X0, X19
	0x03540378 BL 0x301CB58
	0x0354037C LDR X1, [X21]
	0x03540380 ADD X0, X31, 0x8
	0x03540384 BL 0x2BC4350
	0x03540388 TBZ X0, 0x0, 0x35403F4
	0x0354038C LDR X19, [X31 + 0x18]
	0x03540390 CBZ X19, 0x3540414
	0x03540394 LDR X8, [X19]
	0x03540398 LDR X1, [X22]
	0x0354039C LDRH W9, [X8 + 0x12E]
	0x035403A0 CBZ X9, 0x35403C4
	0x035403A4 LDR X10, [X8 + 0xB0]
	0x035403A8 ADD X10, X10, 0x8
	0x035403AC LDUR X11, [X10 - 0x8]
	0x035403B0 CMP X11, X1
	0x035403B4 B.EQ 0x35403D4
	0x035403B8 SUBS X9, X9, 0x1
	0x035403BC ADD X10, X10, 0x10
	0x035403C0 B.NE 0x35403AC
	0x035403C4 MOVZ W2, 0x1
	0x035403C8 MOV X0, X19
	0x035403CC BL 0x1C5C788
	0x035403D0 B 0x35403E4
	0x035403D4 LDR W9, [X10]
	0x035403D8 ADD W9, W9, 0x1
	0x035403DC ADD X8, X8, W9, 0x4, SXTW
	0x035403E0 ADD X0, X8, 0x138
	0x035403E4 LDP X8, X1, [X0]
	0x035403E8 MOV X0, X19
	0x035403EC BLR X8
	0x035403F0 B 0x354037C
	0x035403F4 LDR X1, [X20]
	0x035403F8 ADD X0, X31, 0x8
	0x035403FC BL 0x2BC434C
	0x03540400 LDP X20, X19, [X31 + 0x40]
	0x03540404 LDP X22, X21, [X31 + 0x30]
	0x03540408 LDP X30, X23, [X31 + 0x20]
	0x0354040C ADD X31, X31, 0x50
	0x03540410 RET
	0x03540414 MOV X21, X20
	0x03540418 BL 0x1C16F20
	0x0354041C BL 0x1C16F20
	0x03540420 B 0x354042C
	0x03540424 B 0x3540428
	0x03540428 MOV X21, X20
	0x0354042C MOV X19, X0
	0x03540430 CMP W1, 0x1
	0x03540434 B.NE 0x3540460
	0x03540438 MOV X0, X19
	0x0354043C BL 0x3EB1AD0
	0x03540440 LDR X20, [X0]
	0x03540444 BL 0x3EB1AE0
	0x03540448 LDR X1, [X21]
	0x0354044C ADD X0, X31, 0x8
	0x03540450 BL 0x2BC434C
	0x03540454 CBZ X20, 0x3540400
	0x03540458 MOV X0, X20
	0x0354045C BL 0x1C16F18
	0x03540460 MOV X20, X31
	0x03540464 B 0x354046C
	0x03540468 MOV X19, X0
	0x0354046C LDR X1, [X21]
	0x03540470 ADD X0, X31, 0x8
	0x03540474 BL 0x2BC434C
	0x03540478 CBNZ X20, 0x3540484
	0x0354047C MOV X0, X19
	0x03540480 BL 0x1D2C690
	0x03540484 MOV X0, X20
	0x03540488 BL 0x1C16F18
	0x0354048C BL 0x1990590
	0x03540490 SUB X31, X31, 0x60
	0x03540494 STR X30, [X31 + 0x20]
	0x03540498 STP X24, X23, [X31 + 0x30]
	0x0354049C STP X22, X21, [X31 + 0x40]
	0x035404A0 STP X20, X19, [X31 + 0x50]
	0x035404A4 ADRP X21, 0xE9F000
	0x035404A8 LDRB W8, [X21 + 0xC21]
	0x035404AC MOV X19, X1
	0x035404B0 MOV X20, X0
	0x035404B4 TBNZ X8, 0x0, 0x35404FC
	0x035404B8 ADRP X0, 0xBF4000
	0x035404BC LDR X0, [X0 + 0xD90]
	0x035404C0 BL 0x1C16CF4
	0x035404C4 ADRP X0, 0xBF4000
	0x035404C8 LDR X0, [X0 + 0xD98]
	0x035404CC BL 0x1C16CF4
	0x035404D0 ADRP X0, 0xBF4000
	0x035404D4 LDR X0, [X0 + 0xDA0]
	0x035404D8 BL 0x1C16CF4
	0x035404DC ADRP X0, 0xBF4000
	0x035404E0 LDR X0, [X0 + 0xDA8]
	0x035404E4 BL 0x1C16CF4
	0x035404E8 ADRP X0, 0xBF4000
	0x035404EC LDR X0, [X0 + 0xDB0]
	0x035404F0 BL 0x1C16CF4
	0x035404F4 MOVZ W8, 0x1
	0x035404F8 STRB W8, [X21 + 0xC21]
	0x035404FC STP X31, X31, [X31 + 0x8]
	0x03540500 STR X31, [X31 + 0x18]
	0x03540504 LDR X0, [X20 + 0x28]
	0x03540508 CBZ X0, 0x35405E4
	0x0354050C ADRP X24, 0xBF4000
	0x03540510 ADRP X22, 0xBF4000
	0x03540514 ADRP X23, 0xBF4000
	0x03540518 ADRP X21, 0xBF4000
	0x0354051C LDR X24, [X24 + 0xDB0]
	0x03540520 LDR X22, [X22 + 0xD98]
	0x03540524 LDR X23, [X23 + 0xDA8]
	0x03540528 LDR X21, [X21 + 0xD90]
	0x0354052C BL 0x35440C4
	0x03540530 LDR X1, [X24]
	0x03540534 ADD X8, X31, 0x8
	0x03540538 MOV X0, X20
	0x0354053C BL 0x301CB58
	0x03540540 LDR X1, [X22]
	0x03540544 ADD X0, X31, 0x8
	0x03540548 BL 0x2BC4350
	0x0354054C TBZ X0, 0x0, 0x35405BC
	0x03540550 LDR X20, [X31 + 0x18]
	0x03540554 CBZ X20, 0x35405E0
	0x03540558 LDR X8, [X20]
	0x0354055C LDR X1, [X23]
	0x03540560 LDRH W9, [X8 + 0x12E]
	0x03540564 CBZ X9, 0x3540588
	0x03540568 LDR X10, [X8 + 0xB0]
	0x0354056C ADD X10, X10, 0x8
	0x03540570 LDUR X11, [X10 - 0x8]
	0x03540574 CMP X11, X1
	0x03540578 B.EQ 0x3540598
	0x0354057C SUBS X9, X9, 0x1
	0x03540580 ADD X10, X10, 0x10
	0x03540584 B.NE 0x3540570
	0x03540588 MOVZ W2, 0x4
	0x0354058C MOV X0, X20
	0x03540590 BL 0x1C5C788
	0x03540594 B 0x35405A8
	0x03540598 LDR W9, [X10]
	0x0354059C ADD W9, W9, 0x4
	0x035405A0 ADD X8, X8, W9, 0x4, SXTW
	0x035405A4 ADD X0, X8, 0x138
	0x035405A8 LDP X8, X2, [X0]
	0x035405AC MOV X0, X20
	0x035405B0 MOV X1, X19
	0x035405B4 BLR X8
	0x035405B8 B 0x3540540
	0x035405BC LDR X1, [X21]
	0x035405C0 ADD X0, X31, 0x8
	0x035405C4 BL 0x2BC434C
	0x035405C8 LDP X20, X19, [X31 + 0x50]
	0x035405CC LDP X22, X21, [X31 + 0x40]
	0x035405D0 LDP X24, X23, [X31 + 0x30]
	0x035405D4 LDR X30, [X31 + 0x20]
	0x035405D8 ADD X31, X31, 0x60
	0x035405DC RET
	0x035405E0 BL 0x1C16F20
	0x035405E4 BL 0x1C16F20
	0x035405E8 B 0x35405F0
	0x035405EC B 0x35405F0
	0x035405F0 MOV X19, X0
	0x035405F4 CMP W1, 0x1
	0x035405F8 B.NE 0x3540624
	0x035405FC MOV X0, X19
	0x03540600 BL 0x3EB1AD0
	0x03540604 LDR X20, [X0]
	0x03540608 BL 0x3EB1AE0
	0x0354060C LDR X1, [X21]
	0x03540610 ADD X0, X31, 0x8
	0x03540614 BL 0x2BC434C
	0x03540618 CBZ X20, 0x35405C8
	0x0354061C MOV X0, X20
	0x03540620 BL 0x1C16F18
	0x03540624 MOV X20, X31
	0x03540628 B 0x3540630
	0x0354062C MOV X19, X0
	0x03540630 LDR X1, [X21]
	0x03540634 ADD X0, X31, 0x8
	0x03540638 BL 0x2BC434C
	0x0354063C CBNZ X20, 0x3540648
	0x03540640 MOV X0, X19
	0x03540644 BL 0x1D2C690
	0x03540648 MOV X0, X20
	0x0354064C BL 0x1C16F18
	0x03540650 BL 0x1990590
	0x03540654 STR X30, [X31 - 0x40]!
	0x03540658 STP X24, X23, [X31 + 0x10]
	0x0354065C STP X22, X21, [X31 + 0x20]
	0x03540660 STP X20, X19, [X31 + 0x30]
	0x03540664 ADRP X23, 0xE9F000
	0x03540668 ADRP X24, 0xBF4000
	0x0354066C ADRP X21, 0xBF4000
	0x03540670 ADRP X22, 0xBF4000
	0x03540674 LDRB W8, [X23 + 0xC75]
	0x03540678 LDR X24, [X24 + 0xDC0]
	0x0354067C LDR X21, [X21 + 0xDC8]
	0x03540680 LDR X22, [X22 + 0xD80]
	0x03540684 MOV W19, W1
	0x03540688 MOV X20, X0
	0x0354068C TBNZ X8, 0x0, 0x35406BC
	0x03540690 ADRP X0, 0xBF4000
	0x03540694 LDR X0, [X0 + 0xDC8]
	0x03540698 BL 0x1C16CF4
	0x0354069C ADRP X0, 0xBF4000
	0x035406A0 LDR X0, [X0 + 0xDC0]
	0x035406A4 BL 0x1C16CF4
	0x035406A8 ADRP X0, 0xBF4000
	0x035406AC LDR X0, [X0 + 0xD80]
	0x035406B0 BL 0x1C16CF4
	0x035406B4 MOVZ W8, 0x1
	0x035406B8 STRB W8, [X23 + 0xC75]
	0x035406BC LDR X0, [X24]
	0x035406C0 BL 0x1C16F10
	0x035406C4 LDR X1, [X21]
	0x035406C8 MOV X21, X0
	0x035406CC BL 0x301B7C4
	0x035406D0 MOVZ W8, 0x999A
	0x035406D4 MOVK W8, 0x3F990000
	0x035406D8 MOVZ W9, 0x5A
	0x035406DC UNIMPLEMENTED
	0x035406E0 MOV X0, X20
	0x035406E4 MOV X1, X31
	0x035406E8 STR X21, [X20 + 0x28]
	0x035406EC STR D0, [X20 + 0x48]
	0x035406F0 STR W9, [X20 + 0x50]
	0x035406F4 BL 0x33BDD8C
	0x035406F8 LDR X8, [X22]
	0x035406FC LDP X22, X21, [X31 + 0x20]
	0x03540700 LDP X24, X23, [X31 + 0x10]
	0x03540704 LDR X8, [X8 + 0xB8]
	0x03540708 STRH W19, [X8 + 0x8]
	0x0354070C LDP X20, X19, [X31 + 0x30]
	0x03540710 LDR X30, [X31], #0x40
	0x03540714 RET
	0x03540718 STP X29, X30, [X31 - 0x60]!
	0x0354071C STP X28, X27, [X31 + 0x10]
	0x03540720 STP X26, X25, [X31 + 0x20]
	0x03540724 STP X24, X23, [X31 + 0x30]
	0x03540728 STP X22, X21, [X31 + 0x40]
	0x0354072C STP X20, X19, [X31 + 0x50]
	0x03540730 ADRP X20, 0xE9F000
	0x03540734 LDRB W8, [X20 + 0xC74]
	0x03540738 MOV X21, X1
	0x0354073C MOV X19, X0
	0x03540740 TBNZ X8, 0x0, 0x35407B8
	0x03540744 ADRP X0, 0xBBC000
	0x03540748 LDR X0, [X0 + 0x890]
	0x0354074C BL 0x1C16CF4
	0x03540750 ADRP X0, 0xBF4000
	0x03540754 LDR X0, [X0 + 0xDD0]
	0x03540758 BL 0x1C16CF4
	0x0354075C ADRP X0, 0xBF4000
	0x03540760 LDR X0, [X0 + 0xDD8]
	0x03540764 BL 0x1C16CF4
	0x03540768 ADRP X0, 0xBF4000
	0x0354076C LDR X0, [X0 + 0xDE0]
	0x03540770 BL 0x1C16CF4
	0x03540774 ADRP X0, 0xBF4000
	0x03540778 LDR X0, [X0 + 0xBB8]
	0x0354077C BL 0x1C16CF4
	0x03540780 ADRP X0, 0xBF4000
	0x03540784 LDR X0, [X0 + 0xD80]
	0x03540788 BL 0x1C16CF4
	0x0354078C ADRP X0, 0xBF4000
	0x03540790 LDR X0, [X0 + 0xDE8]
	0x03540794 BL 0x1C16CF4
	0x03540798 ADRP X0, 0xBB3000
	0x0354079C LDR X0, [X0 + 0xAC8]
	0x035407A0 BL 0x1C16CF4
	0x035407A4 ADRP X0, 0xBB5000
	0x035407A8 LDR X0, [X0 + 0x3A0]
	0x035407AC BL 0x1C16CF4
	0x035407B0 MOVZ W8, 0x1
	0x035407B4 STRB W8, [X20 + 0xC74]
	0x035407B8 CBZ X21, 0x35409DC
	0x035407BC LDRB W8, [X21 + 0x10]
	0x035407C0 CMP W8, 0xDC
	0x035407C4 B.NE 0x35407D0
	0x035407C8 LDRH W8, [X21 + 0x12]
	0x035407CC CBZ W8, 0x35407EC
	0x035407D0 LDP X20, X19, [X31 + 0x50]
	0x035407D4 LDP X22, X21, [X31 + 0x40]
	0x035407D8 LDP X24, X23, [X31 + 0x30]
	0x035407DC LDP X26, X25, [X31 + 0x20]
	0x035407E0 LDP X28, X27, [X31 + 0x10]
	0x035407E4 LDP X29, X30, [X31], #0x60
	0x035407E8 RET
	0x035407EC MOVZ W1, 0xD2
	0x035407F0 MOV X0, X21
	0x035407F4 MOV X2, X31
	0x035407F8 BL 0x3505754
	0x035407FC ADRP X22, 0xBB3000
	0x03540800 LDR X22, [X22 + 0xAC8]
	0x03540804 LDR X1, [X22]
	0x03540808 BL 0x1C16E00
	0x0354080C MOV X20, X0
	0x03540810 MOVZ W1, 0xE6
	0x03540814 MOV X0, X21
	0x03540818 MOV X2, X31
	0x0354081C BL 0x3505754
	0x03540820 LDR X1, [X22]
	0x03540824 BL 0x1C16E00
	0x03540828 CBZ X20, 0x35407D0
	0x0354082C MOV X21, X0
	0x03540830 CBZ X0, 0x35407D0
	0x03540834 LDR W8, [X20 + 0x18]
	0x03540838 LDR W9, [X21 + 0x18]
	0x0354083C CMP W8, W9
	0x03540840 B.NE 0x35407D0
	0x03540844 STR X31, [X19 + 0x20]
	0x03540848 ADRP X8, 0xBF4000
	0x0354084C LDR X8, [X8 + 0xDE0]
	0x03540850 LDR X0, [X8]
	0x03540854 BL 0x1C16F10
	0x03540858 ADRP X8, 0xBF4000
	0x0354085C LDR W1, [X20 + 0x18]
	0x03540860 LDR X8, [X8 + 0xDD8]
	0x03540864 MOV X22, X0
	0x03540868 LDR X2, [X8]
	0x0354086C BL 0x301B830
	0x03540870 STR X22, [X19 + 0x10]
	0x03540874 LDR X8, [X20 + 0x18]
	0x03540878 CMP W8, 0x1
	0x0354087C B.LT 0x35409A4
	0x03540880 ADRP X29, 0xBF4000
	0x03540884 LDR X29, [X29 + 0xDE8]
	0x03540888 MOV X25, X31
	0x0354088C AND X8, X8, 0x0
	0x03540890 ADD X26, X21, 0x20
	0x03540894 ADD X27, X20, 0x20
	0x03540898 MOVN W28, 0x80000000
	0x0354089C LDR W9, [X21 + 0x18]
	0x035408A0 CMP X25, X9
	0x035408A4 B.CS 0x35409D8
	0x035408A8 ADRP X9, 0xBF4000
	0x035408AC LDR X9, [X9 + 0xD80]
	0x035408B0 LDR X23, [X26, X25, LSL #3]
	0x035408B4 LDR X9, [X9]
	0x035408B8 LDR X9, [X9 + 0xB8]
	0x035408BC LDRH W22, [X9 + 0x8]
	0x035408C0 CBZ W22, 0x35408F0
	0x035408C4 ADRP X8, 0xBF4000
	0x035408C8 LDR X8, [X8 + 0xBB8]
	0x035408CC LDR X0, [X8]
	0x035408D0 LDR W8, [X0 + 0xE0]
	0x035408D4 CBNZ W8, 0x35408DC
	0x035408D8 BL 0x1C16DFC
	0x035408DC MOV X0, X23
	0x035408E0 MOV W1, W22
	0x035408E4 BL 0x354016C
	0x035408E8 LDR W8, [X20 + 0x18]
	0x035408EC MOV X23, X0
	0x035408F0 CMP X25, W8, UXTW
	0x035408F4 B.CS 0x35409D8
	0x035408F8 LDR X0, [X29]
	0x035408FC LDR X24, [X27, X25, LSL #3]
	0x03540900 BL 0x1C16F10
	0x03540904 MOV X1, X31
	0x03540908 MOV X22, X0
	0x0354090C BL 0x33BDD8C
	0x03540910 MOV X0, X22
	0x03540914 MOV X1, X24
	0x03540918 BL 0x3549B98
	0x0354091C LDR X0, [X22 + 0x10]
	0x03540920 MOV X1, X31
	0x03540924 STR X23, [X22 + 0x20]
	0x03540928 STR W28, [X22 + 0x28]
	0x0354092C BL 0x32277A8
	0x03540930 TBNZ X0, 0x0, 0x3540994
	0x03540934 LDR X0, [X19 + 0x10]
	0x03540938 CBZ X0, 0x35409DC
	0x0354093C ADRP X9, 0xBF4000
	0x03540940 LDR W10, [X0 + 0x1C]
	0x03540944 LDR X8, [X0 + 0x10]
	0x03540948 LDR X9, [X9 + 0xDD0]
	0x0354094C ADD W10, W10, 0x1
	0x03540950 LDR X9, [X9]
	0x03540954 STR W10, [X0 + 0x1C]
	0x03540958 CBZ X8, 0x35409DC
	0x0354095C LDRSW X10, [X0 + 0x18]
	0x03540960 LDR W11, [X8 + 0x18]
	0x03540964 CMP W10, W11
	0x03540968 B.CS 0x3540980
	0x0354096C ADD W9, W10, 0x1
	0x03540970 ADD X8, X8, X10, 0x3, LSL
	0x03540974 STR W9, [X0 + 0x18]
	0x03540978 STR X22, [X8 + 0x20]
	0x0354097C B 0x3540994
	0x03540980 LDR X8, [X9 + 0x20]
	0x03540984 MOV X1, X22
	0x03540988 LDR X8, [X8 + 0xC0]
	0x0354098C LDR X2, [X8 + 0x70]
	0x03540990 BL 0x301BF90
	0x03540994 LDR W8, [X20 + 0x18]
	0x03540998 ADD X25, X25, 0x1
	0x0354099C CMP X25, W8, SXTW
	0x035409A0 B.LT 0x354089C
	0x035409A4 ADRP X8, 0xBBC000
	0x035409A8 LDR X8, [X8 + 0x890]
	0x035409AC MOV X0, X20
	0x035409B0 LDR X1, [X8]
	0x035409B4 BL 0x2157BDC
	0x035409B8 ADRP X8, 0xBB5000
	0x035409BC LDR X8, [X8 + 0x3A0]
	0x035409C0 MOV X1, X20
	0x035409C4 MOV X2, X31
	0x035409C8 LDR X0, [X8]
	0x035409CC BL 0x3227FF8
	0x035409D0 STR X0, [X19 + 0x18]
	0x035409D4 B 0x35407D0
	0x035409D8 BL 0x1C16F28
	0x035409DC BL 0x1C16F20
	0x035409E0 SUB X31, X31, 0x60
	0x035409E4 STR X30, [X31 + 0x20]
	0x035409E8 STP X24, X23, [X31 + 0x30]
	0x035409EC STP X22, X21, [X31 + 0x40]
	0x035409F0 STP X20, X19, [X31 + 0x50]
	0x035409F4 ADRP X21, 0xE9F000
	0x035409F8 LDRB W8, [X21 + 0xC1F]
	0x035409FC MOV X19, X1
	0x03540A00 MOV X20, X0
	0x03540A04 TBNZ X8, 0x0, 0x3540A4C
	0x03540A08 ADRP X0, 0xBF4000
	0x03540A0C LDR X0, [X0 + 0xD90]
	0x03540A10 BL 0x1C16CF4
	0x03540A14 ADRP X0, 0xBF4000
	0x03540A18 LDR X0, [X0 + 0xD98]
	0x03540A1C BL 0x1C16CF4
	0x03540A20 ADRP X0, 0xBF4000
	0x03540A24 LDR X0, [X0 + 0xDA0]
	0x03540A28 BL 0x1C16CF4
	0x03540A2C ADRP X0, 0xBF4000
	0x03540A30 LDR X0, [X0 + 0xDA8]
	0x03540A34 BL 0x1C16CF4
	0x03540A38 ADRP X0, 0xBF4000
	0x03540A3C LDR X0, [X0 + 0xDB0]
	0x03540A40 BL 0x1C16CF4
	0x03540A44 MOVZ W8, 0x1
	0x03540A48 STRB W8, [X21 + 0xC1F]
	0x03540A4C STP X31, X31, [X31 + 0x8]
	0x03540A50 STR X31, [X31 + 0x18]
	0x03540A54 LDR X0, [X20 + 0x28]
	0x03540A58 CBZ X0, 0x3540B34
	0x03540A5C ADRP X24, 0xBF4000
	0x03540A60 ADRP X22, 0xBF4000
	0x03540A64 ADRP X23, 0xBF4000
	0x03540A68 ADRP X21, 0xBF4000
	0x03540A6C LDR X24, [X24 + 0xDB0]
	0x03540A70 LDR X22, [X22 + 0xD98]
	0x03540A74 LDR X23, [X23 + 0xDA8]
	0x03540A78 LDR X21, [X21 + 0xD90]
	0x03540A7C BL 0x35440C4
	0x03540A80 LDR X1, [X24]
	0x03540A84 ADD X8, X31, 0x8
	0x03540A88 MOV X0, X20
	0x03540A8C BL 0x301CB58
	0x03540A90 LDR X1, [X22]
	0x03540A94 ADD X0, X31, 0x8
	0x03540A98 BL 0x2BC4350
	0x03540A9C TBZ X0, 0x0, 0x3540B0C
	0x03540AA0 LDR X20, [X31 + 0x18]
	0x03540AA4 CBZ X20, 0x3540B30
	0x03540AA8 LDR X8, [X20]
	0x03540AAC LDR X1, [X23]
	0x03540AB0 LDRH W9, [X8 + 0x12E]
	0x03540AB4 CBZ X9, 0x3540AD8
	0x03540AB8 LDR X10, [X8 + 0xB0]
	0x03540ABC ADD X10, X10, 0x8
	0x03540AC0 LDUR X11, [X10 - 0x8]
	0x03540AC4 CMP X11, X1
	0x03540AC8 B.EQ 0x3540AE8
	0x03540ACC SUBS X9, X9, 0x1
	0x03540AD0 ADD X10, X10, 0x10
	0x03540AD4 B.NE 0x3540AC0
	0x03540AD8 MOVZ W2, 0x3
	0x03540ADC MOV X0, X20
	0x03540AE0 BL 0x1C5C788
	0x03540AE4 B 0x3540AF8
	0x03540AE8 LDR W9, [X10]
	0x03540AEC ADD W9, W9, 0x3
	0x03540AF0 ADD X8, X8, W9, 0x4, SXTW
	0x03540AF4 ADD X0, X8, 0x138
	0x03540AF8 LDP X8, X2, [X0]
	0x03540AFC MOV X0, X20
	0x03540B00 MOV X1, X19
	0x03540B04 BLR X8
	0x03540B08 B 0x3540A90
	0x03540B0C LDR X1, [X21]
	0x03540B10 ADD X0, X31, 0x8
	0x03540B14 BL 0x2BC434C
	0x03540B18 LDP X20, X19, [X31 + 0x50]
	0x03540B1C LDP X22, X21, [X31 + 0x40]
	0x03540B20 LDP X24, X23, [X31 + 0x30]
	0x03540B24 LDR X30, [X31 + 0x20]
	0x03540B28 ADD X31, X31, 0x60
	0x03540B2C RET
	0x03540B30 BL 0x1C16F20
	0x03540B34 BL 0x1C16F20
	0x03540B38 B 0x3540B40
	0x03540B3C B 0x3540B40
	0x03540B40 MOV X19, X0
	0x03540B44 CMP W1, 0x1
	0x03540B48 B.NE 0x3540B74
	0x03540B4C MOV X0, X19
	0x03540B50 BL 0x3EB1AD0
	0x03540B54 LDR X20, [X0]
	0x03540B58 BL 0x3EB1AE0
	0x03540B5C LDR X1, [X21]
	0x03540B60 ADD X0, X31, 0x8
	0x03540B64 BL 0x2BC434C
	0x03540B68 CBZ X20, 0x3540B18
	0x03540B6C MOV X0, X20
	0x03540B70 BL 0x1C16F18
	0x03540B74 MOV X20, X31
	0x03540B78 B 0x3540B80
	0x03540B7C MOV X19, X0
	0x03540B80 LDR X1, [X21]
	0x03540B84 ADD X0, X31, 0x8
	0x03540B88 BL 0x2BC434C
	0x03540B8C CBNZ X20, 0x3540B98
	0x03540B90 MOV X0, X19
	0x03540B94 BL 0x1D2C690
	0x03540B98 MOV X0, X20
	0x03540B9C BL 0x1C16F18
	0x03540BA0 BL 0x1990590
	0x03540BA4 SUB X31, X31, 0x40
	0x03540BA8 STP X30, X23, [X31 + 0x10]
	0x03540BAC STP X22, X21, [X31 + 0x20]
	0x03540BB0 STP X20, X19, [X31 + 0x30]
	0x03540BB4 ADRP X23, 0xE9F000
	0x03540BB8 ADRP X20, 0xBF4000
	0x03540BBC LDRB W8, [X23 + 0xC76]
	0x03540BC0 LDR X20, [X20 + 0xDF0]
	0x03540BC4 MOV X21, X2
	0x03540BC8 MOV X22, X1
	0x03540BCC MOV X19, X0
	0x03540BD0 TBNZ X8, 0x0, 0x3540C84
	0x03540BD4 ADRP X0, 0xBF4000
	0x03540BD8 LDR X0, [X0 + 0xD38]
	0x03540BDC BL 0x1C16CF4
	0x03540BE0 ADRP X0, 0xBF4000
	0x03540BE4 LDR X0, [X0 + 0xDF8]
	0x03540BE8 BL 0x1C16CF4
	0x03540BEC ADRP X0, 0xBF4000
	0x03540BF0 LDR X0, [X0 + 0xE00]
	0x03540BF4 BL 0x1C16CF4
	0x03540BF8 ADRP X0, 0xBF4000
	0x03540BFC LDR X0, [X0 + 0xE08]
	0x03540C00 BL 0x1C16CF4
	0x03540C04 ADRP X0, 0xBF4000
	0x03540C08 LDR X0, [X0 + 0xE10]
	0x03540C0C BL 0x1C16CF4
	0x03540C10 ADRP X0, 0xBF4000
	0x03540C14 LDR X0, [X0 + 0xE18]
	0x03540C18 BL 0x1C16CF4
	0x03540C1C ADRP X0, 0xBF4000
	0x03540C20 LDR X0, [X0 + 0xE20]
	0x03540C24 BL 0x1C16CF4
	0x03540C28 ADRP X0, 0xBB3000
	0x03540C2C LDR X0, [X0 + 0x598]
	0x03540C30 BL 0x1C16CF4
	0x03540C34 ADRP X0, 0xBF4000
	0x03540C38 LDR X0, [X0 + 0xE28]
	0x03540C3C BL 0x1C16CF4
	0x03540C40 ADRP X0, 0xBF4000
	0x03540C44 LDR X0, [X0 + 0xE30]
	0x03540C48 BL 0x1C16CF4
	0x03540C4C ADRP X0, 0xBF4000
	0x03540C50 LDR X0, [X0 + 0xE38]
	0x03540C54 BL 0x1C16CF4
	0x03540C58 ADRP X0, 0xBF4000
	0x03540C5C LDR X0, [X0 + 0xE40]
	0x03540C60 BL 0x1C16CF4
	0x03540C64 ADRP X0, 0xBF4000
	0x03540C68 LDR X0, [X0 + 0xDF0]
	0x03540C6C BL 0x1C16CF4
	0x03540C70 ADRP X0, 0xBBC000
	0x03540C74 LDR X0, [X0 + 0x920]
	0x03540C78 BL 0x1C16CF4
	0x03540C7C MOVZ W8, 0x1
	0x03540C80 STRB W8, [X23 + 0xC76]
	0x03540C84 LDR X0, [X20]
	0x03540C88 STR W31, [X31 + 0xC]
	0x03540C8C STRB W31, [X31 + 0x8]
	0x03540C90 BL 0x1C16F10
	0x03540C94 MOV X1, X31
	0x03540C98 MOV X20, X0
	0x03540C9C BL 0x354A998
	0x03540CA0 LDR X8, [X19 + 0x10]
	0x03540CA4 CBZ X8, 0x3540CB8
	0x03540CA8 LDR W8, [X8 + 0x18]
	0x03540CAC CBZ W8, 0x3540CB8
	0x03540CB0 LDRB W8, [X19 + 0x54]
	0x03540CB4 CBZ W8, 0x3540CD4
	0x03540CB8 MOV W0, W31
	0x03540CBC LDP X20, X19, [X31 + 0x30]
	0x03540CC0 LDP X22, X21, [X31 + 0x20]
	0x03540CC4 LDP X30, X23, [X31 + 0x10]
	0x03540CC8 AND W0, W0, 0x1
	0x03540CCC ADD X31, X31, 0x40
	0x03540CD0 RET
	0x03540CD4 MOVZ W8, 0x1
	0x03540CD8 STR X21, [X19 + 0x40]
	0x03540CDC STRH W8, [X19 + 0x54]
	0x03540CE0 ADRP X8, 0xBB3000
	0x03540CE4 LDR X8, [X8 + 0x598]
	0x03540CE8 LDR X23, [X19 + 0x58]
	0x03540CEC LDR X0, [X8]
	0x03540CF0 LDR W8, [X0 + 0xE0]
	0x03540CF4 CBNZ W8, 0x3540CFC
	0x03540CF8 BL 0x1C16DFC
	0x03540CFC MOV X0, X23
	0x03540D00 MOV X1, X31
	0x03540D04 MOV X2, X31
	0x03540D08 BL 0x3C354F8
	0x03540D0C TBZ X0, 0x0, 0x3540D20
	0x03540D10 LDR X0, [X19 + 0x58]
	0x03540D14 CBZ X0, 0x3540FFC
	0x03540D18 MOV X1, X31
	0x03540D1C BL 0x354BE0C
	0x03540D20 ADRP X8, 0xBBC000
	0x03540D24 LDR X8, [X8 + 0x920]
	0x03540D28 MOV X1, X31
	0x03540D2C LDR X0, [X8]
	0x03540D30 BL 0x354BD38
	0x03540D34 STR X0, [X19 + 0x58]
	0x03540D38 CBZ X0, 0x3540FFC
	0x03540D3C STR X22, [X0 + 0x20]
	0x03540D40 ADRP X8, 0xBF4000
	0x03540D44 LDR X8, [X8 + 0xD38]
	0x03540D48 MOV X23, X0
	0x03540D4C LDR X0, [X8]
	0x03540D50 BL 0x1C16F10
	0x03540D54 ADRP X8, 0xBF4000
	0x03540D58 LDR X8, [X8 + 0xE20]
	0x03540D5C MOV X1, X23
	0x03540D60 MOV X3, X31
	0x03540D64 MOV X22, X0
	0x03540D68 LDR X2, [X8]
	0x03540D6C BL 0x2A6B948
	0x03540D70 MOV X0, X21
	0x03540D74 MOV X1, X31
	0x03540D78 STR X22, [X19 + 0x30]
	0x03540D7C BL 0x32277A8
	0x03540D80 TBNZ X0, 0x0, 0x3540F98
	0x03540D84 CBZ X21, 0x3540FFC
	0x03540D88 MOVZ W1, 0x3B
	0x03540D8C MOV X0, X21
	0x03540D90 MOV W2, W31
	0x03540D94 MOV X3, X31
	0x03540D98 BL 0x3229AE8
	0x03540D9C CBZ X0, 0x3540FFC
	0x03540DA0 LDR W8, [X0 + 0x18]
	0x03540DA4 MOV X21, X0
	0x03540DA8 CMP W8, 0x2
	0x03540DAC B.LE 0x3540F98
	0x03540DB0 LDR X0, [X21 + 0x28]
	0x03540DB4 ADD X1, X31, 0xC
	0x03540DB8 MOV X2, X31
	0x03540DBC BL 0x337BDF4
	0x03540DC0 TBZ X0, 0x0, 0x3540F98
	0x03540DC4 LDR W8, [X21 + 0x18]
	0x03540DC8 CBZ W8, 0x3541000
	0x03540DCC CBZ X20, 0x3540FFC
	0x03540DD0 LDR X0, [X21 + 0x20]
	0x03540DD4 CMP W8, 0x2
	0x03540DD8 STR X0, [X20 + 0x10]
	0x03540DDC B.LS 0x3541000
	0x03540DE0 LDR X21, [X21 + 0x30]
	0x03540DE4 MOV X1, X31
	0x03540DE8 BL 0x32277A8
	0x03540DEC TBNZ X0, 0x0, 0x3540F98
	0x03540DF0 MOV X0, X21
	0x03540DF4 MOV X1, X31
	0x03540DF8 BL 0x32277A8
	0x03540DFC TBNZ X0, 0x0, 0x3540F98
	0x03540E00 LDR X0, [X19 + 0x18]
	0x03540E04 CBZ X0, 0x3540FFC
	0x03540E08 MOV X1, X21
	0x03540E0C MOV X2, X31
	0x03540E10 BL 0x322693C

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0xEA1000
	015 Move W8, [X21+3088]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {147}
	022 Move X0, 0xBF6000
	023 Move X0, [X0+3384]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB5000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move X0, 0xBF6000
	029 Move X0, [X0+3040]
	030 Call 0x1C17CF4
	031 Move X0, 0xBB7000
	032 Move X0, [X0+2488]
	033 Call 0x1C17CF4
	034 Move X0, 0xBBE000
	035 Move X0, [X0+568]
	036 Call 0x1C17CF4
	037 Move X0, 0xBBE000
	038 Move X0, [X0+696]
	039 Call 0x1C17CF4
	040 Move X0, 0xBB5000
	041 Move X0, [X0+1824]
	042 Call 0x1C17CF4
	043 Move X0, 0xBBE000
	044 Move X0, [X0+576]
	045 Call 0x1C17CF4
	046 Move X0, 0xBBE000
	047 Move X0, [X0+584]
	048 Call 0x1C17CF4
	049 Move X0, 0xBBE000
	050 Move X0, [X0+592]
	051 Call 0x1C17CF4
	052 Move X0, 0xBF6000
	053 Move X0, [X0+2984]
	054 Call 0x1C17CF4
	055 Move X0, 0xBF6000
	056 Move X0, [X0+3392]
	057 Call 0x1C17CF4
	058 Move X0, 0xBBD000
	059 Move X0, [X0+3488]
	060 Call 0x1C17CF4
	061 Move X0, 0xBBE000
	062 Move X0, [X0+600]
	063 Call 0x1C17CF4
	064 Move X0, 0xBF6000
	065 Move X0, [X0+3400]
	066 Call 0x1C17CF4
	067 Move X0, 0xBF6000
	068 Move X0, [X0+3408]
	069 Call 0x1C17CF4
	070 Move X0, 0xBF6000
	071 Move X0, [X0+3416]
	072 Call 0x1C17CF4
	073 Move X0, 0xBF6000
	074 Move X0, [X0+3424]
	075 Call 0x1C17CF4
	076 Move X0, 0xBF6000
	077 Move X0, [X0+3432]
	078 Call 0x1C17CF4
	079 Move X0, 0xBF6000
	080 Move X0, [X0+3440]
	081 Call 0x1C17CF4
	082 Move X0, 0xBF6000
	083 Move X0, [X0+3448]
	084 Call 0x1C17CF4
	085 Move X0, 0xBF6000
	086 Move X0, [X0+3000]
	087 Call 0x1C17CF4
	088 Move X0, 0xBBE000
	089 Move X0, [X0+24]
	090 Call 0x1C17CF4
	091 Move X0, 0xBBE000
	092 Move X0, [X0+64]
	093 Call 0x1C17CF4
	094 Move X0, 0xBBE000
	095 Move X0, [X0+768]
	096 Call 0x1C17CF4
	097 Move X0, 0xBF6000
	098 Move X0, [X0+3456]
	099 Call 0x1C17CF4
	100 Move X0, 0xBF6000
	101 Move X0, [X0+3464]
	102 Call 0x1C17CF4
	103 Move X0, 0xBF6000
	104 Move X0, [X0+3240]
	105 Call 0x1C17CF4
	106 Move X0, 0xBB5000
	107 Move X0, [X0+2760]
	108 Call 0x1C17CF4
	109 Move X0, 0xBB7000
	110 Move X0, [X0+632]
	111 Call 0x1C17CF4
	112 Move X0, 0xBB9000
	113 Move X0, [X0+2344]
	114 Call 0x1C17CF4
	115 Move X0, 0xBBE000
	116 Move X0, [X0+792]
	117 Call 0x1C17CF4
	118 Move X0, 0xBBE000
	119 Move X0, [X0+800]
	120 Call 0x1C17CF4
	121 Move X0, 0xBBE000
	122 Move X0, [X0+808]
	123 Call 0x1C17CF4
	124 Move X0, 0xBBE000
	125 Move X0, [X0+816]
	126 Call 0x1C17CF4
	127 Move X0, 0xBBE000
	128 Move X0, [X0+824]
	129 Call 0x1C17CF4
	130 Move X0, 0xBBE000
	131 Move X0, [X0+832]
	132 Call 0x1C17CF4
	133 Move X0, 0xBBE000
	134 Move X0, [X0+840]
	135 Call 0x1C17CF4
	136 Move X0, 0xBBE000
	137 Move X0, [X0+848]
	138 Call 0x1C17CF4
	139 Move X0, 0xBBE000
	140 Move X0, [X0+856]
	141 Call 0x1C17CF4
	142 Move X0, 0xBBE000
	143 Move X0, [X0+864]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X21+3088], W8
	147 NotImplemented "Instruction STRH not yet implemented."
	148 Move [X31+32], X31
	149 Move [X31+40], X31
	150 Move [X31+48], X31
	151 Compare X19, 0
	152 JumpIfEqual {596}
	153 Move X0, [X19+32]
	154 Compare X0, 0
	155 JumpIfEqual {596}
	156 Move W1, 221
	157 Move X2, X31
	158 Call ParameterDictionary.ContainsKey, X0, X1
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {188}
	163 Move X21, [X20+48]
	164 Compare X21, 0
	165 JumpIfNotEqual {176}
	166 Move X8, 0xBF6000
	167 Move X8, [X8+3040]
	168 Move X0, [X8]
	169 Call 0x1C17F10
	170 Move W8, 255
	171 Move X1, X31
	172 Move X21, X0
	173 Move [X0+16], W8
	174 Call Object..ctor, X0
	175 Move [X20+48], X21
	176 Move X0, [X19+32]
	177 Compare X0, 0
	178 JumpIfEqual {596}
	179 Move W1, 221
	180 Move X2, X31
	181 Call ParameterDictionary.get_Item, X0, X1
	182 Move [X21+40], X0
	183 Move X8, [X20+48]
	184 Compare X8, 0
	185 JumpIfEqual {596}
	186 Move X8, [X8+40]
	187 Move [X20+72], X8
	188 Move X21, X19
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Move W9, 0x7FE7
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move W1, 18
	193 Move X0, X20
	194 Call LoadBalancingClient.Disconnect, X0, X1
	195 Move W9, [X19+16]
	196 Subtract W8, W9, 217
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X9, -43679744
	199 Add X9, X9, 3340
	200 NotImplemented "Instruction ADR not yet implemented."
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Add X10, X10, X11
	203 CallNoReturn X10
	204 Move W8, [X20+128]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Compare W9, 0
	208 Invalid "Jump target not found in method."
	209 Move [X20+304], X19
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Compare W8, 0
	212 JumpIfEqual {430}
	213 Move X8, 0xBB5000
	214 Move X8, [X8+2760]
	215 Move W1, 5
	216 Move X0, [X8]
	217 Call 0x1C17D6C
	218 Move X22, X0
	219 Move X0, X19
	220 Move X1, X31
	221 Call OperationResponse.ToStringFull, X0
	222 Compare X22, 0
	223 JumpIfEqual {596}
	224 Move W8, [X22+24]
	225 Compare W8, 0
	226 JumpIfEqual {1176}
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move [X22+32], X0
	229 Move X8, 0xBBE000
	230 Move X8, [X8+816]
	231 Move X9, 0xBF6000
	232 Move TEMP, 0
	233 Not TEMP
	234 Move X10, TEMP
	235 Add X0, X31, 8
	236 Move X8, [X8]
	237 Move X9, [X9+3240]
	238 Move X1, X31
	239 Move [X22+40], X8
	240 Move X8, [X9]
	241 Move W9, [X20+128]
	242 Move [X31+8], X8
	243 Move [X31+16], X10
	244 Move [X31+24], W9
	245 Call Enum.ToString, X0
	246 Move W8, [X22+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move [X22+48], X0
	250 Move X8, 0xBBE000
	251 Move X8, [X8+824]
	252 Move X8, [X8]
	253 Move [X22+56], X8
	254 Move X0, [X20+16]
	255 Compare X0, 0
	256 JumpIfEqual {596}
	257 Move X1, X31
	258 Call PhotonPeer.get_ServerAddress, X0
	259 Move W8, [X22+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move [X22+64], X0
	262 Move X0, X22
	263 Move X1, X31
	264 Call String.Concat, X0
	265 Move X8, [X20]
	266 Move X2, X0
	267 Move W1, 1
	268 Move X0, X20
	269 Move X9, [X8+536]
	270 Move X3, [X8+544]
	271 NotImplemented "Instruction BLR not yet implemented."
	272 NotImplemented "Instruction LDRSH not yet implemented."
	273 Add W9, W8, 3
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move TEMP, 0x7FF0
	276 Not TEMP
	277 Move W9, TEMP
	278 Add W9, W8, W9
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X8, -43683840
	281 Add X8, X8, 3370
	282 NotImplemented "Instruction ADR not yet implemented."
	283 NotImplemented "Instruction LDRH not yet implemented."
	284 Add X10, X10, X11
	285 CallNoReturn X10
	286 Move W8, 13
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X0, X20
	289 Move X1, X19
	290 Call LoadBalancingClient.GameEnteredOnGameServer, X0, X1
	291 NotImplemented "Instruction LDRH not yet implemented."
	292 Compare W8, 0
	293 JumpIfEqual {515}
	294 Move X0, X19
	295 Move X1, X31
	296 Call OperationResponse.ToStringFull, X0
	297 Move X8, 0xBBD000
	298 Move X8, [X8+856]
	299 Move X1, X0
	300 Move X2, X31
	301 Move X8, [X8]
	302 Move X0, X8
	303 Call String.Concat, X0, X1
	304 Move X8, [X20]
	305 Move X2, X0
	306 Move W1, 1
	307 Move X0, X20
	308 Move X9, [X8+536]
	309 Move X3, [X8+544]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move [X20+312], X31
	312 NotImplemented "Instruction LDRH not yet implemented."
	313 Compare W8, 0
	314 JumpIfEqual {725}
	315 Move W9, 0x7FFF
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X8, 0xBBD000
	318 Move X1, [X19+24]
	319 Move X8, [X8+808]
	320 Move X2, X31
	321 Move X0, [X8]
	322 Call String.Concat, X0, X1
	323 Move X8, 0xBB4000
	324 Move X8, [X8+2504]
	325 Move X21, X0
	326 Move X22, [X8]
	327 Move X8, [X22+56]
	328 Compare X8, 0
	329 JumpIfNotEqual {333}
	330 Move X0, X22
	331 Call 0x1C5D6E0
	332 Move X8, [X22+56]
	333 Move X0, [X8+16]
	334 Move W8, [X0+309]
	335 Move TEMP, X8
	336 And TEMP, TEMP, 1
	337 Compare TEMP, 1
	338 JumpIfEqual {340}
	339 Call 0x1C5D684
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X8, [X22+56]
	345 Move X0, [X8+16]
	346 Move W8, [X0+309]
	347 Move TEMP, X8
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfEqual {352}
	351 Call 0x1C5D684
	352 Move X8, [X0+184]
	353 Move X0, X21
	354 Move X2, X31
	355 Move X1, [X8]
	356 Call String.Format, X0, X1
	357 Move W1, [X20+144]
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move X8, [X20+152]
	360 Move W9, 15
	361 Move [X20+144], W9
	362 Compare X8, 0
	363 JumpIfEqual {369}
	364 Move X9, [X8+24]
	365 Move X0, [X8+64]
	366 Move X3, [X8+40]
	367 Move W2, 15
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Move X0, [X20+200]
	370 Compare X0, 0
	371 JumpIfEqual {596}
	372 Call LobbyCallbacksContainer.OnLeftLobby, X0
	373 NotImplemented "Instruction LDRH not yet implemented."
	374 Compare W8, 0
	375 JumpIfEqual {597}
	376 Move X0, X19
	377 Move X1, X31
	378 Call OperationResponse.ToStringFull, X0
	379 Move X8, 0xBBD000
	380 Move X8, [X8+848]
	381 Move X1, X0
	382 Move X2, X31
	383 Move X8, [X8]
	384 Move X0, X8
	385 Call String.Concat, X0, X1
	386 Move X8, [X20]
	387 Move X2, X0
	388 Move W1, 1
	389 Move X0, X20
	390 Move X9, [X8+536]
	391 Move X3, [X8+544]
	392 NotImplemented "Instruction BLR not yet implemented."
	393 Move X0, [X20+208]
	394 Compare X0, 0
	395 JumpIfEqual {596}
	396 Move X1, X19
	397 Call WebRpcCallbacksContainer.OnWebRpcResponse, X0, X1
	398 Move W1, [X20+144]
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move X8, [X20+152]
	401 Move W9, 4
	402 Move [X20+144], W9
	403 Compare X8, 0
	404 JumpIfEqual {410}
	405 Move X9, [X8+24]
	406 Move X0, [X8+64]
	407 Move X3, [X8+40]
	408 Move W2, 4
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Move X0, [X20+200]
	411 Compare X0, 0
	412 JumpIfEqual {596}
	413 Call LobbyCallbacksContainer.OnJoinedLobby, X0
	414 Move W1, [X20+144]
	415 Move W8, 15
	416 NotImplemented "Instruction CMP not yet implemented."
	417 NotImplemented "Instruction CSEL not yet implemented."
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Move X8, [X20+152]
	420 Move [X20+144], W2
	421 Compare X8, 0
	422 JumpIfEqual {427}
	423 Move X9, [X8+24]
	424 Move X0, [X8+64]
	425 Move X3, [X8+40]
	426 NotImplemented "Instruction BLR not yet implemented."
	427 Move X0, X20
	428 Move X1, X19
	429 Call LoadBalancingClient.CallbackRoomEnterFailed, X0, X1
	430 Move W8, [X20+128]
	431 Or W9, W8, 2
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Move X0, [X19+32]
	434 Compare X0, 0
	435 JumpIfEqual {596}
	436 Move W1, 225
	437 Move X2, X31
	438 Call ParameterDictionary.ContainsKey, X0, X1
	439 Move TEMP, X0
	440 And TEMP, TEMP, 1
	441 Compare TEMP, 1
	442 JumpIfNotEqual {865}
	443 Move X0, [X19+32]
	444 Compare X0, 0
	445 JumpIfEqual {596}
	446 Move W1, 225
	447 Move X2, X31
	448 Call ParameterDictionary.get_Item, X0, X1
	449 Move X21, X0
	450 Compare X0, 0
	451 JumpIfEqual {457}
	452 Move X8, 0xBB6000
	453 Move X8, [X8+632]
	454 Move X1, [X8]
	455 Move X8, [X21]
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Move X0, X21
	458 Move X1, X31
	459 Call String.IsNullOrEmpty, X0
	460 Move TEMP, X0
	461 And TEMP, TEMP, 1
	462 Compare TEMP, 1
	463 JumpIfEqual {865}
	464 Move X0, X20
	465 Move X1, X21
	466 Call LoadBalancingClient.set_UserId, X0, X1
	467 Move X8, [X20+264]
	468 Compare X8, 0
	469 JumpIfEqual {596}
	470 Move [X8+40], X21
	471 Move X8, [X20+48]
	472 Compare X8, 0
	473 JumpIfEqual {852}
	474 Move X1, [X8+48]
	475 Move W8, 16
	476 Move [X20+224], W8
	477 Move W1, [X20+224]
	478 Move W1, 230
	479 Move X0, X19
	480 Move X2, X31
	481 Call OperationResponse.get_Item, X0, X1
	482 Move X23, 0xBB6000
	483 Move X23, [X23+632]
	484 Move X21, X0
	485 Compare X0, 0
	486 JumpIfEqual {490}
	487 Move X1, [X23]
	488 Move X8, [X21]
	489 NotImplemented "Instruction CMP not yet implemented."
	490 NotImplemented "Instruction LDRH not yet implemented."
	491 Move [X20+120], X21
	492 Compare W22, 0
	493 JumpIfEqual {505}
	494 Move X8, 0xBF5000
	495 Move X8, [X8+3000]
	496 Move X0, [X8]
	497 Move W8, [X0+224]
	498 Compare W8, 0
	499 JumpIfNotEqual {501}
	500 Call 0x1C17DFC
	501 Move X0, X21
	502 Move W1, W22
	503 Call LoadBalancingClient.ReplacePortWithAlternative, X0, X1
	504 Move [X20+120], X0
	505 Move W1, 255
	506 Move X0, X19
	507 Move X2, X31
	508 Call OperationResponse.get_Item, X0, X1
	509 Compare X0, 0
	510 JumpIfEqual {775}
	511 Move X8, [X23]
	512 Move X9, [X0]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 NotImplemented "Instruction CSEL not yet implemented."
	515 Move W1, 1
	516 Move X0, X19
	517 Move X2, X31
	518 Call OperationResponse.get_Item, X0, X1
	519 Move X8, 0xBB6000
	520 Move X8, [X8+2488]
	521 Move X1, [X8]
	522 Call 0x1C17E00
	523 Move X21, X0
	524 Move W1, 2
	525 Move X0, X19
	526 Move X2, X31
	527 Call OperationResponse.get_Item, X0, X1
	528 Move X8, 0xBB4000
	529 Move X8, [X8+2760]
	530 Move X1, [X8]
	531 Call 0x1C17E00
	532 Move X23, [X20+312]
	533 Compare X23, 0
	534 JumpIfEqual {596}
	535 Move X8, 0xBF5000
	536 Move X8, [X8+3440]
	537 Move X22, X0
	538 Move X0, [X8]
	539 Call 0x1C17F10
	540 Move X8, 0xBF5000
	541 Move W1, [X23+24]
	542 Move X8, [X8+3424]
	543 Move X23, X0
	544 Move X2, [X8]
	545 Call List`1<Object>..ctor, X0, X1
	546 Move X8, [X20+312]
	547 Compare X8, 0
	548 JumpIfEqual {596}
	549 Move X28, 0xBF5000
	550 Move X29, 0xBF5000
	551 Move X28, [X28+3392]
	552 Move X29, [X29+3408]
	553 Move X24, X31
	554 Add X26, X21, 32
	555 Add X27, X22, 32
	556 NotImplemented "Instruction LDRSW not yet implemented."
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Move X0, [X28]
	559 Call 0x1C17F10
	560 Move X1, X31
	561 Move X25, X0
	562 Call Object..ctor, X0
	563 Move X8, [X20+312]
	564 Compare X8, 0
	565 JumpIfEqual {596}
	566 Move W9, [X8+24]
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Compare X25, 0
	569 JumpIfEqual {596}
	570 Add X8, X8, X24
	571 Move X8, [X8+32]
	572 Move [X25+16], X8
	573 Compare X22, 0
	574 JumpIfEqual {596}
	575 Move W8, [X22+24]
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Move X8, [X27]
	578 Move [X25+32], X8
	579 Compare X21, 0
	580 JumpIfEqual {596}
	581 Move W8, [X21+24]
	582 NotImplemented "Instruction CMP not yet implemented."
	583 Move W8, [X26]
	584 Move [X25+24], W8
	585 Compare X23, 0
	586 JumpIfEqual {596}
	587 Move X3, [X29]
	588 Move X0, X23
	589 Move W1, W24
	590 Move X2, X25
	591 Call List`1<Object>.Insert, X0, X1, X2
	592 Move X8, [X20+312]
	593 Add X24, X24, 1
	594 Compare X8, 0
	595 JumpIfNotEqual {556}
	596 Call 0x1C17F20
	597 Move X8, 0xBF5000
	598 Move X8, [X8+3432]
	599 Move X0, [X8]
	600 Call 0x1C17F10
	601 Move X8, 0xBF5000
	602 Move X8, [X8+3416]
	603 Move X21, X0
	604 Move X1, [X8]
	605 Call List`1<Object>..ctor, X0
	606 Move W1, 222
	607 Move X0, X19
	608 Move X2, X31
	609 Call OperationResponse.get_Item, X0, X1
	610 Compare X0, 0
	611 JumpIfEqual {596}
	612 Move X9, 0xBBC000
	613 Move X9, [X9+3488]
	614 Move X8, [X0]
	615 Move X22, X0
	616 Move X1, [X9]
	617 Move W10, [X8+304]
	618 Move W9, [X1+304]
	619 NotImplemented "Instruction CMP not yet implemented."
	620 Move X8, [X8+200]
	621 Add X8, X8, X9
	622 NotImplemented "Instruction LDUR not yet implemented."
	623 NotImplemented "Instruction CMP not yet implemented."
	624 Move X8, 0xBBD000
	625 Move X8, [X8+568]
	626 Move X0, X22
	627 Move X1, [X8]
	628 Call Dictionary`2<Object, Object>.get_Keys, X0
	629 Compare X0, 0
	630 JumpIfEqual {596}
	631 Move X8, 0xBBD000
	632 Move X8, [X8+600]
	633 Move X1, [X8]
	634 Add X8, X31, 8
	635 Call KeyCollection<Object, Object>.GetEnumerator, X0
	636 NotImplemented "Instruction LDUR not yet implemented."
	637 Move X8, [X31+24]
	638 Move X27, 0xBBD000
	639 Move X28, 0xBB6000
	640 Move X29, 0xBF5000
	641 Move X27, [X27+584]
	642 Move X28, [X28+632]
	643 Move X29, [X29+3464]
	644 Move [X31+2], V0
	645 Move [X31+48], X8
	646 Move X26, 0xBF5000
	647 Move X26, [X26+3400]
	648 Move X1, [X27]
	649 Add X0, X31, 32
	650 Call Enumerator<Object, Object>.MoveNext, X0
	651 Move TEMP, X0
	652 And TEMP, TEMP, 1
	653 Compare TEMP, 1
	654 JumpIfNotEqual {709}
	655 Move X24, [X31+48]
	656 Compare X24, 0
	657 JumpIfEqual {661}
	658 Move X1, [X28]
	659 Move X8, [X24]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 Move X0, X22
	662 Move X1, X24
	663 Move X2, X31
	664 Call Hashtable.get_Item, X0, X1
	665 Move X25, X0
	666 Move X0, [X29]
	667 Call 0x1C17F10
	668 Move X23, X0
	669 Compare X25, 0
	670 JumpIfEqual {682}
	671 Move X9, 0xBBC000
	672 Move X8, [X25]
	673 Move X9, [X9+3488]
	674 Move W10, [X8+304]
	675 Move X1, [X9]
	676 Move W9, [X1+304]
	677 NotImplemented "Instruction CMP not yet implemented."
	678 Move X8, [X8+200]
	679 Add X8, X8, X9
	680 NotImplemented "Instruction LDUR not yet implemented."
	681 NotImplemented "Instruction CMP not yet implemented."
	682 Move X0, X23
	683 Move X1, X24
	684 Move X2, X25
	685 Move X3, X31
	686 Call RoomInfo..ctor, X0, X1, X2
	687 Compare X21, 0
	688 JumpIfEqual {1179}
	689 Move W10, [X21+28]
	690 Move X8, [X21+16]
	691 Move X9, [X26]
	692 Add W10, W10, 1
	693 Move [X21+28], W10
	694 Compare X8, 0
	695 JumpIfEqual {1180}
	696 NotImplemented "Instruction LDRSW not yet implemented."
	697 Move W11, [X8+24]
	698 NotImplemented "Instruction CMP not yet implemented."
	699 Add W9, W10, 1
	700 Add X8, X8, X10
	701 Move [X21+24], W9
	702 Move [X8+32], X23
	703 Move X8, [X9+32]
	704 Move X8, [X8+192]
	705 Move X2, [X8+112]
	706 Move X0, X21
	707 Move X1, X23
	708 Call List`1<Object>.AddWithResize, X0, X1
	709 Move X8, 0xBBD000
	710 Move X8, [X8+576]
	711 Add X0, X31, 32
	712 Move X1, [X8]
	713 Call Enumerator<Object, Object>.Dispose, X0
	714 Move X0, [X20+200]
	715 Compare X0, 0
	716 JumpIfEqual {596}
	717 Move X1, X21
	718 Call LobbyCallbacksContainer.OnRoomListUpdate, X0, X1
	719 Move X0, [X20+184]
	720 Move [X20+312], X31
	721 Compare X0, 0
	722 JumpIfEqual {596}
	723 Move X1, X23
	724 Call MatchMakingCallbacksContainer.OnFriendListUpdate, X0, X1
	725 Move X21, [X20+336]
	726 Compare X21, 0
	727 JumpIfNotEqual {739}
	728 Move X8, 0xBF5000
	729 Move X8, [X8+3456]
	730 NotImplemented "Instruction LDRH not yet implemented."
	731 Move X0, [X8]
	732 Call 0x1C17F10
	733 Move W1, W22
	734 Move X21, X0
	735 Call RegionHandler..ctor, X0, X1
	736 Move [X20+336], X21
	737 Compare X21, 0
	738 JumpIfEqual {596}
	739 Move W8, [X21+84]
	740 Compare W8, 0
	741 JumpIfEqual {811}
	742 Move X9, 0xBBD000
	743 Move X8, [X20]
	744 Move X9, [X9+832]
	745 Move W1, 2
	746 Move X0, X20
	747 Move X3, [X8+544]
	748 Move X2, [X9]
	749 Move X9, [X8+536]
	750 NotImplemented "Instruction BLR not yet implemented."
	751 Move X0, X21
	752 Move X1, X31
	753 Call Int16.ToString, X0
	754 Move X8, 0xBBD000
	755 Move X3, [X19+24]
	756 Move X8, [X8+800]
	757 Move X9, 0xBB8000
	758 Move X9, [X9+2344]
	759 Move X1, X0
	760 Move X8, [X8]
	761 Move X4, X31
	762 Move X2, [X9]
	763 Move X0, X8
	764 Call String.Concat, X0, X1, X2, X3
	765 Move X8, [X20]
	766 Move X2, X0
	767 Move W1, 1
	768 Move X0, X20
	769 Move X9, [X8+536]
	770 Move X3, [X8+544]
	771 NotImplemented "Instruction BLR not yet implemented."
	772 Move W1, 11
	773 Move X0, X20
	774 Call LoadBalancingClient.Disconnect, X0, X1
	775 Move X21, X31
	776 Move X0, X21
	777 Move X1, X31
	778 Call String.IsNullOrEmpty, X0
	779 Move TEMP, X0
	780 And TEMP, TEMP, 1
	781 Compare TEMP, 1
	782 JumpIfEqual {787}
	783 Move X8, [X20+296]
	784 Compare X8, 0
	785 JumpIfEqual {596}
	786 Move [X8+16], X21
	787 Move X0, X20
	788 Call LoadBalancingClient.DisconnectToReconnect, X0
	789 Move X8, [X20+168]
	790 Compare X8, 0
	791 JumpIfEqual {797}
	792 Move X9, [X8+24]
	793 Move X0, [X8+64]
	794 Move X2, [X8+40]
	795 Move X1, X19
	796 NotImplemented "Instruction BLR not yet implemented."
	797 Move X20, [X31+144]
	798 Move X19, [X31+152]
	799 Move X22, [X31+128]
	800 Move X21, [X31+136]
	801 Move X24, [X31+112]
	802 Move X23, [X31+120]
	803 Move X26, [X31+96]
	804 Move X25, [X31+104]
	805 Move X28, [X31+80]
	806 Move X27, [X31+88]
	807 Move X29, [X31+64]
	808 Move X30, [X31+72]
	809 Add X31, X31, 160
	810 Return 
	811 Move X0, X21
	812 Move X1, X19
	813 Call RegionHandler.SetRegions, X0, X1
	814 Move X0, [X20+176]
	815 Compare X0, 0
	816 JumpIfEqual {596}
	817 Move X1, [X20+336]
	818 Call ConnectionCallbacksContainer.OnRegionListReceived, X0, X1
	819 Move W8, [X20+360]
	820 Compare W8, 0
	821 JumpIfEqual {789}
	822 Move X8, 0xBF5000
	823 Move X21, [X20+336]
	824 Move X8, [X8+3384]
	825 Move X0, [X8]
	826 Call 0x1C17F10
	827 Move X8, 0xBF5000
	828 Move X8, [X8+3448]
	829 Move X1, X20
	830 Move X3, X31
	831 Move X22, X0
	832 Move X2, [X8]
	833 Call Action`1<Object>..ctor, X0, X1, X2
	834 Compare X21, 0
	835 JumpIfEqual {596}
	836 Move X2, [X20+344]
	837 Move X0, X21
	838 Move X1, X22
	839 Call RegionHandler.PingMinimumOfRegions, X0, X1, X2
	840 Move W8, 14
	841 Move X0, [X20+176]
	842 Move W8, 12
	843 Move [X20+224], W8
	844 Compare X0, 0
	845 JumpIfEqual {596}
	846 Move X1, [X19+24]
	847 Call ConnectionCallbacksContainer.OnCustomAuthenticationFailed, X0, X1
	848 Move W8, 15
	849 Move W9, 0x7FFF
	850 NotImplemented "Instruction CMP not yet implemented."
	851 Move W8, 11
	852 Move X1, X31
	853 Move X8, 0xBBD000
	854 Move X8, [X8+864]
	855 Move X2, X31
	856 Move X0, [X8]
	857 Call String.Format, X0, X1
	858 Move X8, [X20]
	859 Move X2, X0
	860 Move W1, 3
	861 Move X0, X20
	862 Move X9, [X8+536]
	863 Move X3, [X8+544]
	864 NotImplemented "Instruction BLR not yet implemented."
	865 Move X0, [X19+32]
	866 Compare X0, 0
	867 JumpIfEqual {596}
	868 Move W1, 202
	869 Move X2, X31
	870 Call ParameterDictionary.ContainsKey, X0, X1
	871 Move TEMP, X0
	872 And TEMP, TEMP, 1
	873 Compare TEMP, 1
	874 JumpIfNotEqual {910}
	875 Move X0, [X19+32]
	876 Compare X0, 0
	877 JumpIfEqual {596}
	878 Move W1, 202
	879 Move X2, X31
	880 Call ParameterDictionary.get_Item, X0, X1
	881 Move X8, X0
	882 Compare X0, 0
	883 JumpIfEqual {889}
	884 Move X9, 0xBB6000
	885 Move X9, [X9+632]
	886 Move X1, [X9]
	887 Move X9, [X8]
	888 NotImplemented "Instruction CMP not yet implemented."
	889 Move X0, [X20+264]
	890 Compare X0, 0
	891 JumpIfEqual {596}
	892 Move X1, X8
	893 Call Player.set_NickName, X0, X1
	894 Move X8, [X20+264]
	895 Compare X8, 0
	896 JumpIfEqual {596}
	897 Move X1, [X8+32]
	898 Move X8, 0xBBD000
	899 Move X8, [X8+792]
	900 Move X2, X31
	901 Move X0, [X8]
	902 Call String.Format, X0, X1
	903 Move X8, [X20]
	904 Move X2, X0
	905 Move W1, 3
	906 Move X0, X20
	907 Move X9, [X8+536]
	908 Move X3, [X8+544]
	909 NotImplemented "Instruction BLR not yet implemented."
	910 Move X0, [X19+32]
	911 Compare X0, 0
	912 JumpIfEqual {596}
	913 Move W1, 192
	914 Move X2, X31
	915 Call ParameterDictionary.ContainsKey, X0, X1
	916 Move TEMP, X0
	917 And TEMP, TEMP, 1
	918 Compare TEMP, 1
	919 JumpIfNotEqual {943}
	920 Move X0, [X19+32]
	921 Compare X0, 0
	922 JumpIfEqual {596}
	923 Move W1, 192
	924 Move X2, X31
	925 Call ParameterDictionary.get_Item, X0, X1
	926 Move X8, X0
	927 Compare X0, 0
	928 JumpIfEqual {940}
	929 Move X10, 0xBBD000
	930 Move X10, [X10+696]
	931 Move X9, [X8]
	932 Move X1, [X10]
	933 Move W11, [X9+304]
	934 Move W10, [X1+304]
	935 NotImplemented "Instruction CMP not yet implemented."
	936 Move X9, [X9+200]
	937 Add X9, X9, X10
	938 NotImplemented "Instruction LDUR not yet implemented."
	939 NotImplemented "Instruction CMP not yet implemented."
	940 Move X0, X20
	941 Move X1, X8
	942 Call LoadBalancingClient.SetupEncryption, X0, X1
	943 Move W8, [X20+128]
	944 NotImplemented "Instruction CMP not yet implemented."
	945 Move W1, 196
	946 Move X0, X19
	947 Move X2, X31
	948 Call OperationResponse.get_Item, X0, X1
	949 Compare X0, 0
	950 JumpIfEqual {996}
	951 Move X8, 0xBB6000
	952 Move X8, [X8+632]
	953 Move X9, [X0]
	954 Move X8, [X8]
	955 NotImplemented "Instruction CMP not yet implemented."
	956 NotImplemented "Instruction CSEL not yet implemented."
	957 NotImplemented "Instruction CMP not yet implemented."
	958 Compare W8, 0
	959 JumpIfNotEqual {1144}
	960 Move W1, [X20+144]
	961 NotImplemented "Instruction CMP not yet implemented."
	962 Move X8, [X20+152]
	963 Move W9, 15
	964 Move [X20+144], W9
	965 Compare X8, 0
	966 JumpIfEqual {972}
	967 Move X9, [X8+24]
	968 Move X0, [X8+64]
	969 Move X3, [X8+40]
	970 Move W2, 15
	971 NotImplemented "Instruction BLR not yet implemented."
	972 Move X1, [X20+304]
	973 Compare X1, 0
	974 JumpIfEqual {1129}
	975 Move X0, X20
	976 Call LoadBalancingClient.CallbackRoomEnterFailed, X0, X1
	977 Move [X20+304], X31
	978 Move W1, [X20+144]
	979 NotImplemented "Instruction CMP not yet implemented."
	980 Move X8, [X20+152]
	981 Move W9, 8
	982 Move [X20+144], W9
	983 Compare X8, 0
	984 JumpIfEqual {990}
	985 Move X9, [X8+24]
	986 Move X0, [X8+64]
	987 Move X3, [X8+40]
	988 Move W2, 8
	989 NotImplemented "Instruction BLR not yet implemented."
	990 Move X1, [X20+296]
	991 Compare X1, 0
	992 JumpIfEqual {596}
	993 Move W8, [X1+49]
	994 NotImplemented "Instruction CMP not yet implemented."
	995 Move [X1+40], X31
	996 Move X21, X31
	997 Move X0, X21
	998 Move X1, X31
	999 Call String.IsNullOrEmpty, X0
	1000 Move TEMP, X0
	1001 And TEMP, TEMP, 1
	1002 Compare TEMP, 1
	1003 JumpIfEqual {1005}
	1004 Move [X20+328], X21
	1005 Move W1, 230
	1006 Move X0, X19
	1007 Move X2, X31
	1008 Call OperationResponse.get_Item, X0, X1
	1009 Compare X0, 0
	1010 JumpIfEqual {1017}
	1011 Move X8, 0xBB6000
	1012 Move X8, [X8+632]
	1013 Move X9, [X0]
	1014 Move X8, [X8]
	1015 NotImplemented "Instruction CMP not yet implemented."
	1016 NotImplemented "Instruction CSEL not yet implemented."
	1017 Move X21, X31
	1018 NotImplemented "Instruction LDRH not yet implemented."
	1019 Move [X20+112], X21
	1020 Compare W22, 0
	1021 JumpIfEqual {1033}
	1022 Move X8, 0xBF5000
	1023 Move X8, [X8+3000]
	1024 Move X0, [X8]
	1025 Move W8, [X0+224]
	1026 Compare W8, 0
	1027 JumpIfNotEqual {1029}
	1028 Call 0x1C17DFC
	1029 Move X0, X21
	1030 Move W1, W22
	1031 Call LoadBalancingClient.ReplacePortWithAlternative, X0, X1
	1032 Move [X20+112], X0
	1033 Move W8, [X20+56]
	1034 NotImplemented "Instruction CMP not yet implemented."
	1035 NotImplemented "Instruction LDRH not yet implemented."
	1036 And W31, W8, 255
	1037 NotImplemented "Instruction STRH not yet implemented."
	1038 Move X9, 0xBBD000
	1039 Move X9, [X9+768]
	1040 Add X1, X31, 8
	1041 NotImplemented "Instruction STRH not yet implemented."
	1042 Move X0, [X9]
	1043 Call 0x1C17E04
	1044 Move X8, 0xBBD000
	1045 Move X8, [X8+840]
	1046 Move X1, X0
	1047 Move X2, X31
	1048 Move X8, [X8]
	1049 Move X0, X8
	1050 Call String.Format, X0, X1
	1051 Move X8, [X20]
	1052 Move X2, X0
	1053 Move W1, 3
	1054 Move X0, X20
	1055 Move X9, [X8+536]
	1056 Move X3, [X8+544]
	1057 NotImplemented "Instruction BLR not yet implemented."
	1058 Move X9, 0xBBD000
	1059 Move X21, [X20+16]
	1060 NotImplemented "Instruction LDRH not yet implemented."
	1061 Move X9, [X9+64]
	1062 Add X0, X31, 60
	1063 NotImplemented "Instruction STRH not yet implemented."
	1064 Move X1, [X9]
	1065 Call Nullable`1<ByteEnum>.get_Value, X0
	1066 Compare X21, 0
	1067 JumpIfEqual {596}
	1068 Move [X21+132], W0
	1069 NotImplemented "Instruction STRH not yet implemented."
	1070 NotImplemented "Instruction STRH not yet implemented."
	1071 Move X0, X20
	1072 Call LoadBalancingClient.DisconnectToReconnect, X0
	1073 Move X8, 0xBBC000
	1074 Move X8, [X8+3488]
	1075 Move X0, [X8]
	1076 Call 0x1C17F10
	1077 Move X1, X31
	1078 Move X21, X0
	1079 Call Hashtable..ctor, X0
	1080 Move X8, [X20+264]
	1081 Compare X8, 0
	1082 JumpIfEqual {596}
	1083 Move X9, 0xBF5000
	1084 Move X9, [X9+2984]
	1085 Move X22, [X8+56]
	1086 Move X0, [X9]
	1087 Move W9, [X0+224]
	1088 Compare W9, 0
	1089 JumpIfNotEqual {1091}
	1090 Call 0x1C17DFC
	1091 Move X0, X21
	1092 Move X1, X22
	1093 Call Extensions.Merge, X0, X1
	1094 Move X8, [X20+264]
	1095 Compare X8, 0
	1096 JumpIfEqual {596}
	1097 Move X0, [X8+32]
	1098 Move X1, X31
	1099 Call String.IsNullOrEmpty, X0
	1100 Move TEMP, X0
	1101 And TEMP, TEMP, 1
	1102 Compare TEMP, 1
	1103 JumpIfEqual {1114}
	1104 Move X8, [X20+264]
	1105 Compare X8, 0
	1106 JumpIfEqual {596}
	1107 Compare X21, 0
	1108 JumpIfEqual {596}
	1109 Move X2, [X8+32]
	1110 Move W1, 255
	1111 Move X0, X21
	1112 Move X3, X31
	1113 Call Hashtable.set_Item, X0, X1, X2
	1114 Move X1, [X20+296]
	1115 Compare X1, 0
	1116 JumpIfEqual {596}
	1117 Move [X1+40], X21
	1118 Move W8, 1
	1119 Move [X1+48], W8
	1120 Move W8, [X20+292]
	1121 Subtract W9, W8, 1
	1122 NotImplemented "Instruction CMP not yet implemented."
	1123 Move X0, [X20+16]
	1124 Compare X0, 0
	1125 JumpIfEqual {596}
	1126 Move X8, [X0]
	1127 Move X9, [X8+648]
	1128 Move X2, [X8+656]
	1129 Move X0, [X20+176]
	1130 Compare X0, 0
	1131 JumpIfEqual {596}
	1132 Call ConnectionCallbacksContainer.OnConnectedToMaster, X0
	1133 Move W8, [X20+56]
	1134 Compare W8, 0
	1135 JumpIfEqual {1144}
	1136 Move X0, [X20+16]
	1137 Compare X0, 0
	1138 JumpIfEqual {596}
	1139 Move X8, [X0]
	1140 Move W1, [X20+248]
	1141 Move X9, [X8+808]
	1142 Move X2, [X8+816]
	1143 NotImplemented "Instruction BLR not yet implemented."
	1144 Move W1, 245
	1145 Move X0, X19
	1146 Move X2, X31
	1147 Call OperationResponse.get_Item, X0, X1
	1148 Compare X0, 0
	1149 JumpIfEqual {789}
	1150 Move X10, 0xBB4000
	1151 Move X10, [X10+1824]
	1152 Move X9, [X0]
	1153 Move X8, X0
	1154 Move X1, [X10]
	1155 Move W11, [X9+304]
	1156 Move W10, [X1+304]
	1157 NotImplemented "Instruction CMP not yet implemented."
	1158 Move X9, [X9+200]
	1159 Add X9, X9, X10
	1160 NotImplemented "Instruction LDUR not yet implemented."
	1161 NotImplemented "Instruction CMP not yet implemented."
	1162 Move X0, [X20+176]
	1163 Compare X0, 0
	1164 JumpIfEqual {596}
	1165 Move X1, X8
	1166 Call ConnectionCallbacksContainer.OnCustomAuthenticationResponse, X0, X1
	1167 Compare W8, 0
	1168 JumpIfNotEqual {789}
	1169 Move X0, [X20+16]
	1170 Compare X0, 0
	1171 JumpIfEqual {596}
	1172 Move X8, [X0]
	1173 Move X9, [X8+632]
	1174 Move X2, [X8+640]
	1175 NotImplemented "Instruction BLR not yet implemented."
	1176 Call 0x1C17F28
	1177 Move X0, X25
	1178 Call 0x1C181E0
	1179 Call 0x1C17F20
	1180 Call 0x1C17F20
	1181 Move X0, X24
	1182 Call 0x1C181E0
	1183 Move X0, X8
	1184 Call 0x1C181E0
	1185 Move X0, X22
	1186 Call 0x1C181E0
	1187 Move X0, X21
	1188 Call 0x1C181E0
	1189 Move X22, X0
	1190 NotImplemented "Instruction CMP not yet implemented."
	1191 Move X0, X22
	1192 Call 0x3EB2AD0
	1193 Move X23, [X0]
	1194 Call 0x3EB2AE0
	1195 Move X8, 0xBBD000
	1196 Move X8, [X8+576]
	1197 Add X0, X31, 32
	1198 Move X1, [X8]
	1199 Call Enumerator<Object, Object>.Dispose, X0
	1200 Compare X23, 0
	1201 JumpIfEqual {714}
	1202 Move X0, X23
	1203 Call 0x1C17F18
	1204 Move X23, X31
	1205 Move X22, X0
	1206 Move X8, 0xBBD000
	1207 Move X8, [X8+576]
	1208 Move X1, [X8]
	1209 Add X0, X31, 32
	1210 Call Enumerator<Object, Object>.Dispose, X0
	1211 Compare X23, 0
	1212 JumpIfNotEqual {1215}
	1213 Move X0, X22
	1214 Call 0x1D2D690
	1215 Move X0, X23
	1216 Call 0x1C17F18
	1217 Call 0x1991590

Method: System.Void OnStatusChanged(ExitGames.Client.Photon.StatusCode statusCode)

Disassembly:
	0x03542934 BL 0x1C16F18
	0x03542938 BL 0x1990590
	0x0354293C SUB X31, X31, 0x60
	0x03542940 STR X30, [X31 + 0x20]
	0x03542944 STP X24, X23, [X31 + 0x30]
	0x03542948 STP X22, X21, [X31 + 0x40]
	0x0354294C STP X20, X19, [X31 + 0x50]
	0x03542950 ADRP X21, 0xE9D000
	0x03542954 LDRB W8, [X21 + 0xC20]
	0x03542958 MOV W19, W1
	0x0354295C MOV X20, X0
	0x03542960 TBNZ X8, 0x0, 0x35429A8
	0x03542964 ADRP X0, 0xBF2000
	0x03542968 LDR X0, [X0 + 0xD90]
	0x0354296C BL 0x1C16CF4
	0x03542970 ADRP X0, 0xBF2000
	0x03542974 LDR X0, [X0 + 0xD98]
	0x03542978 BL 0x1C16CF4
	0x0354297C ADRP X0, 0xBF2000
	0x03542980 LDR X0, [X0 + 0xDA0]
	0x03542984 BL 0x1C16CF4
	0x03542988 ADRP X0, 0xBF2000
	0x0354298C LDR X0, [X0 + 0xDA8]
	0x03542990 BL 0x1C16CF4
	0x03542994 ADRP X0, 0xBF2000
	0x03542998 LDR X0, [X0 + 0xDB0]
	0x0354299C BL 0x1C16CF4
	0x035429A0 MOVZ W8, 0x1
	0x035429A4 STRB W8, [X21 + 0xC20]
	0x035429A8 STP X31, X31, [X31 + 0x8]
	0x035429AC STR X31, [X31 + 0x18]
	0x035429B0 LDR X0, [X20 + 0x28]
	0x035429B4 CBZ X0, 0x3542A90
	0x035429B8 ADRP X24, 0xBF2000
	0x035429BC ADRP X22, 0xBF2000
	0x035429C0 ADRP X23, 0xBF2000
	0x035429C4 ADRP X21, 0xBF2000
	0x035429C8 LDR X24, [X24 + 0xDB0]
	0x035429CC LDR X22, [X22 + 0xD98]
	0x035429D0 LDR X23, [X23 + 0xDA8]
	0x035429D4 LDR X21, [X21 + 0xD90]
	0x035429D8 BL 0x35440C4
	0x035429DC LDR X1, [X24]
	0x035429E0 ADD X8, X31, 0x8
	0x035429E4 MOV X0, X20
	0x035429E8 BL 0x301CB58
	0x035429EC LDR X1, [X22]
	0x035429F0 ADD X0, X31, 0x8
	0x035429F4 BL 0x2BC4350
	0x035429F8 TBZ X0, 0x0, 0x3542A68
	0x035429FC LDR X20, [X31 + 0x18]
	0x03542A00 CBZ X20, 0x3542A8C
	0x03542A04 LDR X8, [X20]
	0x03542A08 LDR X1, [X23]
	0x03542A0C LDRH W9, [X8 + 0x12E]
	0x03542A10 CBZ X9, 0x3542A34
	0x03542A14 LDR X10, [X8 + 0xB0]
	0x03542A18 ADD X10, X10, 0x8
	0x03542A1C LDUR X11, [X10 - 0x8]
	0x03542A20 CMP X11, X1
	0x03542A24 B.EQ 0x3542A44
	0x03542A28 SUBS X9, X9, 0x1
	0x03542A2C ADD X10, X10, 0x10
	0x03542A30 B.NE 0x3542A1C
	0x03542A34 MOVZ W2, 0x2
	0x03542A38 MOV X0, X20
	0x03542A3C BL 0x1C5C788
	0x03542A40 B 0x3542A54
	0x03542A44 LDR W9, [X10]
	0x03542A48 ADD W9, W9, 0x2
	0x03542A4C ADD X8, X8, W9, 0x4, SXTW
	0x03542A50 ADD X0, X8, 0x138
	0x03542A54 LDP X8, X2, [X0]
	0x03542A58 MOV X0, X20
	0x03542A5C MOV W1, W19
	0x03542A60 BLR X8
	0x03542A64 B 0x35429EC
	0x03542A68 LDR X1, [X21]
	0x03542A6C ADD X0, X31, 0x8
	0x03542A70 BL 0x2BC434C
	0x03542A74 LDP X20, X19, [X31 + 0x50]
	0x03542A78 LDP X22, X21, [X31 + 0x40]
	0x03542A7C LDP X24, X23, [X31 + 0x30]
	0x03542A80 LDR X30, [X31 + 0x20]
	0x03542A84 ADD X31, X31, 0x60
	0x03542A88 RET
	0x03542A8C BL 0x1C16F20
	0x03542A90 BL 0x1C16F20
	0x03542A94 B 0x3542A9C
	0x03542A98 B 0x3542A9C
	0x03542A9C MOV X19, X0
	0x03542AA0 CMP W1, 0x1
	0x03542AA4 B.NE 0x3542AD0
	0x03542AA8 MOV X0, X19
	0x03542AAC BL 0x3EB1AD0
	0x03542AB0 LDR X20, [X0]
	0x03542AB4 BL 0x3EB1AE0
	0x03542AB8 LDR X1, [X21]
	0x03542ABC ADD X0, X31, 0x8
	0x03542AC0 BL 0x2BC434C
	0x03542AC4 CBZ X20, 0x3542A74
	0x03542AC8 MOV X0, X20
	0x03542ACC BL 0x1C16F18
	0x03542AD0 MOV X20, X31
	0x03542AD4 B 0x3542ADC
	0x03542AD8 MOV X19, X0
	0x03542ADC LDR X1, [X21]
	0x03542AE0 ADD X0, X31, 0x8
	0x03542AE4 BL 0x2BC434C
	0x03542AE8 CBNZ X20, 0x3542AF4
	0x03542AEC MOV X0, X19
	0x03542AF0 BL 0x1D2C690
	0x03542AF4 MOV X0, X20
	0x03542AF8 BL 0x1C16F18
	0x03542AFC BL 0x1990590
	0x03542B00 SUB X31, X31, 0xB0
	0x03542B04 STP X29, X30, [X31 + 0x50]
	0x03542B08 STP X28, X27, [X31 + 0x60]
	0x03542B0C STP X26, X25, [X31 + 0x70]
	0x03542B10 STP X24, X23, [X31 + 0x80]
	0x03542B14 STP X22, X21, [X31 + 0x90]
	0x03542B18 STP X20, X19, [X31 + 0xA0]
	0x03542B1C ADRP X19, 0xE9D000
	0x03542B20 LDRB W8, [X19 + 0xC12]
	0x03542B24 MOV X20, X1
	0x03542B28 MOV X24, X0
	0x03542B2C TBNZ X8, 0x0, 0x3542C40
	0x03542B30 ADRP X0, 0xBF2000
	0x03542B34 LDR X0, [X0 + 0xBE0]
	0x03542B38 BL 0x1C16CF4
	0x03542B3C ADRP X0, 0xBB1000
	0x03542B40 LDR X0, [X0 + 0xB58]
	0x03542B44 BL 0x1C16CF4
	0x03542B48 ADRP X0, 0xBB9000
	0x03542B4C LDR X0, [X0 + 0xC98]
	0x03542B50 BL 0x1C16CF4
	0x03542B54 ADRP X0, 0xBB1000
	0x03542B58 LDR X0, [X0 + 0x618]
	0x03542B5C BL 0x1C16CF4
	0x03542B60 ADRP X0, 0xBBA000
	0x03542B64 LDR X0, [X0 + 0x238]
	0x03542B68 BL 0x1C16CF4
	0x03542B6C ADRP X0, 0xBBA000
	0x03542B70 LDR X0, [X0 + 0x240]
	0x03542B74 BL 0x1C16CF4
	0x03542B78 ADRP X0, 0xBBA000
	0x03542B7C LDR X0, [X0 + 0x248]
	0x03542B80 BL 0x1C16CF4
	0x03542B84 ADRP X0, 0xBBA000
	0x03542B88 LDR X0, [X0 + 0x250]
	0x03542B8C BL 0x1C16CF4
	0x03542B90 ADRP X0, 0xBF2000
	0x03542B94 LDR X0, [X0 + 0xEA0]
	0x03542B98 BL 0x1C16CF4
	0x03542B9C ADRP X0, 0xBB9000
	0x03542BA0 LDR X0, [X0 + 0xDA0]
	0x03542BA4 BL 0x1C16CF4
	0x03542BA8 ADRP X0, 0xBB2000
	0x03542BAC LDR X0, [X0 + 0xE58]
	0x03542BB0 BL 0x1C16CF4
	0x03542BB4 ADRP X0, 0xBB1000
	0x03542BB8 LDR X0, [X0 + 0x758]
	0x03542BBC BL 0x1C16CF4
	0x03542BC0 ADRP X0, 0xBBA000
	0x03542BC4 LDR X0, [X0 + 0x258]
	0x03542BC8 BL 0x1C16CF4
	0x03542BCC ADRP X0, 0xBF2000
	0x03542BD0 LDR X0, [X0 + 0xEA8]
	0x03542BD4 BL 0x1C16CF4
	0x03542BD8 ADRP X0, 0xBF2000
	0x03542BDC LDR X0, [X0 + 0xD48]
	0x03542BE0 BL 0x1C16CF4
	0x03542BE4 ADRP X0, 0xBF2000
	0x03542BE8 LDR X0, [X0 + 0xEB0]
	0x03542BEC BL 0x1C16CF4
	0x03542BF0 ADRP X0, 0xBF2000
	0x03542BF4 LDR X0, [X0 + 0xD58]
	0x03542BF8 BL 0x1C16CF4
	0x03542BFC ADRP X0, 0xBF2000
	0x03542C00 LDR X0, [X0 + 0xD68]
	0x03542C04 BL 0x1C16CF4
	0x03542C08 ADRP X0, 0xBF2000
	0x03542C0C LDR X0, [X0 + 0xD88]
	0x03542C10 BL 0x1C16CF4
	0x03542C14 ADRP X0, 0xBB1000
	0x03542C18 LDR X0, [X0 + 0xAC8]
	0x03542C1C BL 0x1C16CF4
	0x03542C20 ADRP X0, 0xBB3000
	0x03542C24 LDR X0, [X0 + 0x278]
	0x03542C28 BL 0x1C16CF4
	0x03542C2C ADRP X0, 0xBF2000
	0x03542C30 LDR X0, [X0 + 0xEB8]
	0x03542C34 BL 0x1C16CF4
	0x03542C38 MOVZ W8, 0x1
	0x03542C3C STRB W8, [X19 + 0xC12]
	0x03542C40 STP X31, X31, [X31 + 0x30]
	0x03542C44 STR X31, [X31 + 0x40]
	0x03542C48 CBZ X20, 0x3543664
	0x03542C4C MOV X0, X20
	0x03542C50 MOV X1, X31
	0x03542C54 BL 0x3505B04
	0x03542C58 LDR X8, [X24 + 0x110]
	0x03542C5C MOV W22, W0
	0x03542C60 CBZ X8, 0x3542C84
	0x03542C64 LDR X9, [X8]
	0x03542C68 MOV X0, X8
	0x03542C6C MOV W1, W22
	0x03542C70 MOV W2, W31
	0x03542C74 LDP X10, X3, [X9 + 0x1D8]
	0x03542C78 BLR X10
	0x03542C7C MOV X21, X0
	0x03542C80 B 0x3542C88
	0x03542C84 MOV X21, X31
	0x03542C88 LDRB W9, [X20 + 0x10]
	0x03542C8C SUB W8, W9, 0xDF
	0x03542C90 CMP W8, 0x7
	0x03542C94 B.HI 0x3542E68
	0x03542C98 ADRP X9, 0xFFFFFFFFFD654000
	0x03542C9C ADD X9, X9, 0xD90
	0x03542CA0 ADR X10, 0x10
	0x03542CA4 LDRH W11, [X9, X8, LSL #1]
	0x03542CA8 ADD X10, X10, X11, 0x2, LSL
	0x03542CAC BR X10
	0x03542CB0 ADRP X8, 0xBF2000
	0x03542CB4 LDR X8, [X8 + 0xD68]
	0x03542CB8 LDR X0, [X8]
	0x03542CBC BL 0x1C16F10
	0x03542CC0 ADRP X8, 0xBF2000
	0x03542CC4 LDR X8, [X8 + 0xD58]
	0x03542CC8 MOV X21, X0
	0x03542CCC LDR X1, [X8]
	0x03542CD0 BL 0x301B7C4
	0x03542CD4 MOVZ W1, 0xDE
	0x03542CD8 MOV X0, X20
	0x03542CDC MOV X2, X31
	0x03542CE0 BL 0x3505ABC
	0x03542CE4 CBZ X0, 0x3543664
	0x03542CE8 ADRP X26, 0xBB9000
	0x03542CEC LDR X26, [X26 + 0xDA0]
	0x03542CF0 LDR X8, [X0]
	0x03542CF4 MOV X22, X0
	0x03542CF8 LDR X1, [X26]
	0x03542CFC LDRB W10, [X8 + 0x130]
	0x03542D00 LDRB W9, [X1 + 0x130]
	0x03542D04 CMP W10, W9
	0x03542D08 B.CC 0x3543684
	0x03542D0C LDR X8, [X8 + 0xC8]
	0x03542D10 ADD X8, X8, X9, 0x3, LSL
	0x03542D14 LDUR X8, [X8 - 0x8]
	0x03542D18 CMP X8, X1
	0x03542D1C B.NE 0x3543684
	0x03542D20 STR X24, [X31 + 0x10]
	0x03542D24 ADRP X8, 0xBBA000
	0x03542D28 LDR X8, [X8 + 0x238]
	0x03542D2C MOV X0, X22
	0x03542D30 LDR X1, [X8]
	0x03542D34 BL 0x2AA4E98
	0x03542D38 CBZ X0, 0x3543664
	0x03542D3C ADRP X8, 0xBBA000
	0x03542D40 LDR X8, [X8 + 0x258]
	0x03542D44 LDR X1, [X8]
	0x03542D48 ADD X8, X31, 0x18
	0x03542D4C BL 0x2EC7020
	0x03542D50 LDUR V0, [X31 + 0x18]
	0x03542D54 LDR X8, [X31 + 0x28]
	0x03542D58 ADRP X27, 0xBBA000
	0x03542D5C ADRP X28, 0xBB3000
	0x03542D60 ADRP X29, 0xBF2000
	0x03542D64 LDR X27, [X27 + 0x248]
	0x03542D68 LDR X28, [X28 + 0x278]
	0x03542D6C LDR X29, [X29 + 0xD88]
	0x03542D70 STR V0, [X31 + 0x3]
	0x03542D74 STR X8, [X31 + 0x40]
	0x03542D78 ADRP X19, 0xBF2000
	0x03542D7C LDR X19, [X19 + 0xD48]
	0x03542D80 LDR X1, [X27]
	0x03542D84 ADD X0, X31, 0x30
	0x03542D88 BL 0x2C0B090
	0x03542D8C TBZ X0, 0x0, 0x3542EC0
	0x03542D90 LDR X24, [X31 + 0x40]
	0x03542D94 CBZ X24, 0x3542DA8
	0x03542D98 LDR X1, [X28]
	0x03542D9C LDR X8, [X24]
	0x03542DA0 CMP X8, X1
	0x03542DA4 B.NE 0x354367C
	0x03542DA8 MOV X0, X22
	0x03542DAC MOV X1, X24
	0x03542DB0 MOV X2, X31
	0x03542DB4 BL 0x34ED878
	0x03542DB8 MOV X25, X0
	0x03542DBC LDR X0, [X29]
	0x03542DC0 BL 0x1C16F10
	0x03542DC4 MOV X23, X0
	0x03542DC8 CBZ X25, 0x3542DF8
	0x03542DCC LDR X8, [X25]
	0x03542DD0 LDR X1, [X26]
	0x03542DD4 LDRB W10, [X8 + 0x130]
	0x03542DD8 LDRB W9, [X1 + 0x130]
	0x03542DDC CMP W10, W9
	0x03542DE0 B.CC 0x354366C
	0x03542DE4 LDR X8, [X8 + 0xC8]
	0x03542DE8 ADD X8, X8, X9, 0x3, LSL
	0x03542DEC LDUR X8, [X8 - 0x8]
	0x03542DF0 CMP X8, X1
	0x03542DF4 B.NE 0x354366C
	0x03542DF8 MOV X0, X23
	0x03542DFC MOV X1, X24
	0x03542E00 MOV X2, X25
	0x03542E04 MOV X3, X31
	0x03542E08 BL 0x354C6BC
	0x03542E0C CBZ X21, 0x3543674
	0x03542E10 LDR W10, [X21 + 0x1C]
	0x03542E14 LDR X8, [X21 + 0x10]
	0x03542E18 LDR X9, [X19]
	0x03542E1C ADD W10, W10, 0x1
	0x03542E20 STR W10, [X21 + 0x1C]
	0x03542E24 CBZ X8, 0x3543678
	0x03542E28 LDRSW X10, [X21 + 0x18]
	0x03542E2C LDR W11, [X8 + 0x18]
	0x03542E30 CMP W10, W11
	0x03542E34 B.CS 0x3542E4C
	0x03542E38 ADD W9, W10, 0x1
	0x03542E3C ADD X8, X8, X10, 0x3, LSL
	0x03542E40 STR W9, [X21 + 0x18]
	0x03542E44 STR X23, [X8 + 0x20]
	0x03542E48 B 0x3542D80
	0x03542E4C LDR X8, [X9 + 0x20]
	0x03542E50 LDR X8, [X8 + 0xC0]
	0x03542E54 LDR X2, [X8 + 0x70]
	0x03542E58 MOV X0, X21
	0x03542E5C MOV X1, X23
	0x03542E60 BL 0x301BF90
	0x03542E64 B 0x3542D80
	0x03542E68 SUB W8, W9, 0xFB
	0x03542E6C CMP W8, 0x4
	0x03542E70 B.HI 0x3543614
	0x03542E74 ADRP X9, 0xFFFFFFFFFD654000
	0x03542E78 ADD X9, X9, 0xDA0
	0x03542E7C ADR X10, 0x10
	0x03542E80 LDRH W11, [X9, X8, LSL #1]
	0x03542E84 ADD X10, X10, X11, 0x2, LSL
	0x03542E88 BR X10
	0x03542E8C ADRP X8, 0xBF2000
	0x03542E90 LDR X21, [X24 + 0xD8]
	0x03542E94 LDR X8, [X8 + 0xEA0]
	0x03542E98 LDR X0, [X8]
	0x03542E9C BL 0x1C16F10
	0x03542EA0 MOV X1, X20
	0x03542EA4 MOV X22, X0
	0x03542EA8 BL 0x3543E7C
	0x03542EAC CBZ X21, 0x3543664
	0x03542EB0 MOV X0, X21
	0x03542EB4 MOV X1, X22
	0x03542EB8 BL 0x3543F04
	0x03542EBC B 0x3543614
	0x03542EC0 ADRP X8, 0xBBA000
	0x03542EC4 LDR X8, [X8 + 0x240]
	0x03542EC8 ADD X0, X31, 0x30
	0x03542ECC LDR X1, [X8]
	0x03542ED0 BL 0x2C0B08C
	0x03542ED4 LDR X24, [X31 + 0x10]
	0x03542ED8 LDR X0, [X24 + 0xC8]
	0x03542EDC CBZ X0, 0x3543664
	0x03542EE0 MOV X1, X21
	0x03542EE4 BL 0x354107C
	0x03542EE8 B 0x3543614
	0x03542EEC MOVZ W1, 0xE5
	0x03542EF0 MOV X0, X20
	0x03542EF4 MOV X2, X31
	0x03542EF8 BL 0x3505ABC
	0x03542EFC CBZ X0, 0x3543664
	0x03542F00 ADRP X19, 0xBB1000
	0x03542F04 LDR X19, [X19 + 0x758]
	0x03542F08 LDR X8, [X0]
	0x03542F0C LDR X1, [X19]
	0x03542F10 LDR X8, [X8 + 0x40]
	0x03542F14 LDR X9, [X1 + 0x40]
	0x03542F18 CMP X8, X9
	0x03542F1C B.NE 0x3543568
	0x03542F20 BL 0x1C16E08
	0x03542F24 LDR W8, [X0]
	0x03542F28 MOVZ W1, 0xE4
	0x03542F2C MOV X0, X20
	0x03542F30 MOV X2, X31
	0x03542F34 STR W8, [X24 + 0x11C]
	0x03542F38 BL 0x3505ABC
	0x03542F3C CBZ X0, 0x3543664
	0x03542F40 LDR X8, [X0]
	0x03542F44 LDR X1, [X19]
	0x03542F48 LDR X8, [X8 + 0x40]
	0x03542F4C LDR X9, [X1 + 0x40]
	0x03542F50 CMP X8, X9
	0x03542F54 B.NE 0x3543568
	0x03542F58 BL 0x1C16E08
	0x03542F5C LDR W8, [X0]
	0x03542F60 MOVZ W1, 0xE3
	0x03542F64 MOV X0, X20
	0x03542F68 MOV X2, X31
	0x03542F6C STR W8, [X24 + 0x120]
	0x03542F70 BL 0x3505ABC
	0x03542F74 CBZ X0, 0x3543664
	0x03542F78 LDR X8, [X0]
	0x03542F7C LDR X1, [X19]
	0x03542F80 LDR X8, [X8 + 0x40]
	0x03542F84 LDR X9, [X1 + 0x40]
	0x03542F88 CMP X8, X9
	0x03542F8C B.NE 0x3543568
	0x03542F90 BL 0x1C16E08
	0x03542F94 LDR W8, [X0]
	0x03542F98 STR W8, [X24 + 0x118]
	0x03542F9C B 0x3543614
	0x03542FA0 MOVZ W1, 0xD5
	0x03542FA4 MOV X0, X20
	0x03542FA8 MOV X2, X31
	0x03542FAC BL 0x3505ABC
	0x03542FB0 ADRP X8, 0xBB1000
	0x03542FB4 LDR X8, [X8 + 0xAC8]
	0x03542FB8 LDR X1, [X8]
	0x03542FBC BL 0x1C16E00
	0x03542FC0 MOV X21, X0
	0x03542FC4 MOVZ W1, 0xE5
	0x03542FC8 MOV X0, X20
	0x03542FCC MOV X2, X31
	0x03542FD0 BL 0x3505ABC
	0x03542FD4 ADRP X19, 0xBB2000
	0x03542FD8 LDR X19, [X19 + 0xE58]
	0x03542FDC LDR X1, [X19]
	0x03542FE0 BL 0x1C16E00
	0x03542FE4 MOV X22, X0
	0x03542FE8 MOVZ W1, 0xE4
	0x03542FEC MOV X0, X20
	0x03542FF0 MOV X2, X31
	0x03542FF4 BL 0x3505ABC
	0x03542FF8 LDR X1, [X19]
	0x03542FFC BL 0x1C16E00
	0x03543000 MOV X23, X0
	0x03543004 MOVZ W1, 0xD4
	0x03543008 MOV X0, X20
	0x0354300C MOV X2, X31
	0x03543010 BL 0x3505ABC
	0x03543014 CBZ X0, 0x3543050
	0x03543018 ADRP X8, 0xBB8000
	0x0354301C LDR X8, [X8 + 0xC98]
	0x03543020 LDR X9, [X0]
	0x03543024 MOV X26, X0
	0x03543028 LDR X8, [X8]
	0x0354302C LDRB W11, [X9 + 0x130]
	0x03543030 LDRB W10, [X8 + 0x130]
	0x03543034 CMP W11, W10
	0x03543038 B.CC 0x3543050
	0x0354303C LDR X9, [X9 + 0xC8]
	0x03543040 ADD X9, X9, X10, 0x3, LSL
	0x03543044 LDUR X9, [X9 - 0x8]
	0x03543048 CMP X9, X8
	0x0354304C B.EQ 0x3543658
	0x03543050 MOVZ W1, 0xD4
	0x03543054 MOV X0, X20
	0x03543058 MOV X2, X31
	0x0354305C BL 0x3505ABC
	0x03543060 ADRP X8, 0xBB0000
	0x03543064 LDR X8, [X8 + 0x618]
	0x03543068 LDR X1, [X8]
	0x0354306C BL 0x1C16E00
	0x03543070 MOV X25, X0
	0x03543074 MOV X26, X31
	0x03543078 MOVZ W9, 0x1
	0x0354307C LDR X8, [X24 + 0x100]
	0x03543080 CBZ X8, 0x3543664
	0x03543084 STR W9, [X31 + 0xC]
	0x03543088 LDP W2, W9, [X8 + 0x18]
	0x0354308C MOV X19, X20
	0x03543090 ADD W9, W9, 0x1
	0x03543094 CMP W2, 0x1
	0x03543098 STP W31, W9, [X8 + 0x18]
	0x0354309C B.LT 0x35430B0
	0x035430A0 LDR X0, [X8 + 0x10]
	0x035430A4 MOV W1, W31
	0x035430A8 MOV X3, X31
	0x035430AC BL 0x339FA34
	0x035430B0 STR X26, [X31]
	0x035430B4 STR X19, [X31 + 0x10]
	0x035430B8 CBZ X21, 0x3543664
	0x035430BC LDR W8, [X21 + 0x18]
	0x035430C0 MOV X20, X24
	0x035430C4 CMP W8, 0x1
	0x035430C8 B.LT 0x35431C8
	0x035430CC MOV X19, X31
	0x035430D0 ADD X28, X23, 0x20
	0x035430D4 ADD X29, X22, 0x20
	0x035430D8 ADD X27, X25, 0x20
	0x035430DC ADD X24, X21, 0x20
	0x035430E0 ADRP X8, 0xBF1000
	0x035430E4 LDR X8, [X8 + 0xEB8]
	0x035430E8 LDR X0, [X8]
	0x035430EC BL 0x1C16F10
	0x035430F0 MOV X26, X0
	0x035430F4 BL 0x3543C60
	0x035430F8 LDR W8, [X21 + 0x18]
	0x035430FC CMP X19, X8
	0x03543100 B.CS 0x3543668
	0x03543104 CBZ X26, 0x3543664
	0x03543108 LDR X8, [X24, X19, LSL #3]
	0x0354310C STR X8, [X26 + 0x10]
	0x03543110 CBZ X25, 0x3543664
	0x03543114 LDR W8, [X25 + 0x18]
	0x03543118 CMP X19, X8
	0x0354311C B.CS 0x3543668
	0x03543120 LDRB W8, [X27, X19, LSL]
	0x03543124 STRB W8, [X26 + 0x18]
	0x03543128 CBZ X22, 0x3543664
	0x0354312C LDR W8, [X22 + 0x18]
	0x03543130 CMP X19, X8
	0x03543134 B.CS 0x3543668
	0x03543138 LDR W8, [X29, X19, LSL #2]
	0x0354313C STR W8, [X26 + 0x1C]
	0x03543140 CBZ X23, 0x3543664
	0x03543144 LDR W8, [X23 + 0x18]
	0x03543148 CMP X19, X8
	0x0354314C B.CS 0x3543668
	0x03543150 LDR W8, [X28, X19, LSL #2]
	0x03543154 STR W8, [X26 + 0x20]
	0x03543158 LDR X0, [X20 + 0x100]
	0x0354315C CBZ X0, 0x3543664
	0x03543160 ADRP X9, 0xBF1000
	0x03543164 LDR W10, [X0 + 0x1C]
	0x03543168 LDR X8, [X0 + 0x10]
	0x0354316C LDR X9, [X9 + 0xEA8]
	0x03543170 ADD W10, W10, 0x1
	0x03543174 LDR X9, [X9]
	0x03543178 STR W10, [X0 + 0x1C]
	0x0354317C CBZ X8, 0x3543664
	0x03543180 LDRSW X10, [X0 + 0x18]
	0x03543184 LDR W11, [X8 + 0x18]
	0x03543188 CMP W10, W11
	0x0354318C B.CS 0x35431A4
	0x03543190 ADD W9, W10, 0x1
	0x03543194 ADD X8, X8, X10, 0x3, LSL
	0x03543198 STR W9, [X0 + 0x18]
	0x0354319C STR X26, [X8 + 0x20]
	0x035431A0 B 0x35431B8
	0x035431A4 LDR X8, [X9 + 0x20]
	0x035431A8 MOV X1, X26
	0x035431AC LDR X8, [X8 + 0xC0]
	0x035431B0 LDR X2, [X8 + 0x70]
	0x035431B4 BL 0x301BF90
	0x035431B8 LDRSW X8, [X21 + 0x18]
	0x035431BC ADD X19, X19, 0x1
	0x035431C0 CMP X19, X8
	0x035431C4 B.LT 0x35430E0
	0x035431C8 LDR W8, [X31 + 0xC]
	0x035431CC TBNZ X8, 0x0, 0x35431DC
	0x035431D0 LDR X0, [X31]
	0x035431D4 MOV X1, X31
	0x035431D8 BL 0x34EC900
	0x035431DC MOV X24, X20
	0x035431E0 LDR X0, [X20 + 0xC8]
	0x035431E4 LDR X20, [X31 + 0x10]
	0x035431E8 CBZ X0, 0x3543664
	0x035431EC LDR X1, [X24 + 0x100]
	0x035431F0 BL 0x3543CB8
	0x035431F4 B 0x3543614
	0x035431F8 LDR X21, [X24 + 0x30]
	0x035431FC CBNZ X21, 0x3543228
	0x03543200 ADRP X8, 0xBF1000
	0x03543204 LDR X8, [X8 + 0xBE0]
	0x03543208 LDR X0, [X8]
	0x0354320C BL 0x1C16F10
	0x03543210 MOVZ W8, 0xFF
	0x03543214 MOV X1, X31
	0x03543218 MOV X21, X0
	0x0354321C STRB W8, [X0 + 0x10]
	0x03543220 BL 0x33BDD8C
	0x03543224 STR X21, [X24 + 0x30]
	0x03543228 MOVZ W1, 0xDD
	0x0354322C MOV X0, X20
	0x03543230 MOV X2, X31
	0x03543234 BL 0x3505ABC
	0x03543238 STR X0, [X21 + 0x28]
	0x0354323C LDR X8, [X24 + 0x30]
	0x03543240 CBZ X8, 0x3543664
	0x03543244 LDR X8, [X8 + 0x28]
	0x03543248 STR X8, [X24 + 0x48]
	0x0354324C B 0x3543614
	0x03543250 CBZ X21, 0x3543478
	0x03543254 LDR X0, [X20 + 0x18]
	0x03543258 CBZ X0, 0x3543664
	0x0354325C MOVZ W1, 0xE9
	0x03543260 MOV X2, X31
	0x03543264 BL 0x34FC4A4
	0x03543268 TBZ X0, 0x0, 0x3543458
	0x0354326C LDR X0, [X20 + 0x18]
	0x03543270 CBZ X0, 0x3543664
	0x03543274 MOVZ W1, 0xE9
	0x03543278 MOV X2, X31
	0x0354327C BL 0x34FB9B8
	0x03543280 CBZ X0, 0x3543664
	0x03543284 ADRP X8, 0xBB0000
	0x03543288 LDR X8, [X8 + 0xB58]
	0x0354328C LDR X9, [X0]
	0x03543290 LDR X1, [X8]
	0x03543294 LDR X8, [X9 + 0x40]
	0x03543298 LDR X9, [X1 + 0x40]
	0x0354329C CMP X8, X9
	0x035432A0 B.NE 0x3543568
	0x035432A4 BL 0x1C16E08
	0x035432A8 LDRB W8, [X0]
	0x035432AC STRB W31, [X21 + 0x1D]
	0x035432B0 STRB W8, [X21 + 0x30]
	0x035432B4 CBNZ W8, 0x3543478
	0x035432B8 B 0x3543460
	0x035432BC LDR X0, [X20 + 0x18]
	0x035432C0 CBZ X0, 0x3543664
	0x035432C4 MOVZ W1, 0xFD
	0x035432C8 MOV X2, X31
	0x035432CC BL 0x34FC4A4
	0x035432D0 TBZ X0, 0x0, 0x3543398
	0x035432D4 MOVZ W1, 0xFD
	0x035432D8 MOV X0, X20
	0x035432DC MOV X2, X31
	0x035432E0 BL 0x3505ABC
	0x035432E4 CBZ X0, 0x3543664
	0x035432E8 ADRP X8, 0xBB0000
	0x035432EC LDR X8, [X8 + 0x758]
	0x035432F0 LDR X9, [X0]
	0x035432F4 LDR X1, [X8]
	0x035432F8 LDR X8, [X9 + 0x40]
	0x035432FC LDR X9, [X1 + 0x40]
	0x03543300 CMP X8, X9
	0x03543304 B.NE 0x3543568
	0x03543308 BL 0x1C16E08
	0x0354330C LDR W21, [X0]
	0x03543310 B 0x354339C
	0x03543314 MOVZ W1, 0xF9
	0x03543318 MOV X0, X20
	0x0354331C MOV X2, X31
	0x03543320 BL 0x3505ABC
	0x03543324 MOV X4, X0
	0x03543328 CBZ X0, 0x3543360
	0x0354332C ADRP X9, 0xBB8000
	0x03543330 LDR X9, [X9 + 0xDA0]
	0x03543334 LDR X8, [X4]
	0x03543338 LDR X1, [X9]
	0x0354333C LDRB W10, [X8 + 0x130]
	0x03543340 LDRB W9, [X1 + 0x130]
	0x03543344 CMP W10, W9
	0x03543348 B.CC 0x354368C
	0x0354334C LDR X8, [X8 + 0xC8]
	0x03543350 ADD X8, X8, X9, 0x3, LSL
	0x03543354 LDUR X8, [X8 - 0x8]
	0x03543358 CMP X8, X1
	0x0354335C B.NE 0x354368C
	0x03543360 CBZ X21, 0x3543400
	0x03543364 LDR X8, [X21]
	0x03543368 MOV X0, X21
	0x0354336C MOV X1, X4
	0x03543370 LDP X9, X2, [X8 + 0x178]
	0x03543374 BLR X9
	0x03543378 STRB W31, [X21 + 0x30]
	0x0354337C LDR X8, [X24 + 0x108]
	0x03543380 CBZ X8, 0x3543664
	0x03543384 LDR W8, [X8 + 0x18]
	0x03543388 CMP W22, W8
	0x0354338C CSET W8, NE
	0x03543390 STRB W8, [X21 + 0x1D]
	0x03543394 B 0x3543518
	0x03543398 MOV W21, W31
	0x0354339C MOVZ W1, 0xFB
	0x035433A0 MOV X0, X20
	0x035433A4 MOV X2, X31
	0x035433A8 BL 0x3505ABC
	0x035433AC CBZ X0, 0x35433E4
	0x035433B0 ADRP X9, 0xBB8000
	0x035433B4 LDR X9, [X9 + 0xDA0]
	0x035433B8 LDR X8, [X0]
	0x035433BC LDR X1, [X9]
	0x035433C0 LDRB W10, [X8 + 0x130]
	0x035433C4 LDRB W9, [X1 + 0x130]
	0x035433C8 CMP W10, W9
	0x035433CC B.CC 0x3543568
	0x035433D0 LDR X8, [X8 + 0xC8]
	0x035433D4 ADD X8, X8, X9, 0x3, LSL
	0x035433D8 LDUR X8, [X8 - 0x8]
	0x035433DC CMP X8, X1
	0x035433E0 B.NE 0x3543568
	0x035433E4 CMP W21, 0x0
	0x035433E8 CSEL X2, X31, X0, EQ
	0x035433EC CSEL X1, X0, X31, EQ
	0x035433F0 MOV X0, X24
	0x035433F4 MOV W3, W21
	0x035433F8 BL 0x353D350
	0x035433FC B 0x3543614
	0x03543400 CMP W22, 0x1
	0x03543404 B.LT 0x3543514
	0x03543408 ADRP X8, 0xBB2000
	0x0354340C LDR X8, [X8 + 0x278]
	0x03543410 LDR X9, [X24]
	0x03543414 MOV X0, X24
	0x03543418 MOV W2, W22
	0x0354341C LDR X8, [X8]
	0x03543420 MOV W3, W31
	0x03543424 LDR X8, [X8 + 0xB8]
	0x03543428 LDR X1, [X8]
	0x0354342C LDP X8, X5, [X9 + 0x1F8]
	0x03543430 BLR X8
	0x03543434 LDR X8, [X24 + 0x110]
	0x03543438 CBZ X8, 0x3543664
	0x0354343C LDR X9, [X8]
	0x03543440 MOV X21, X0
	0x03543444 MOV X0, X8
	0x03543448 MOV X1, X21
	0x0354344C LDP X10, X2, [X9 + 0x1C8]
	0x03543450 BLR X10
	0x03543454 B 0x3543518
	0x03543458 STRB W31, [X21 + 0x30]
	0x0354345C STRB W31, [X21 + 0x1D]
	0x03543460 LDR X0, [X24 + 0x110]
	0x03543464 CBZ X0, 0x3543664
	0x03543468 LDR X8, [X0]
	0x0354346C MOV W1, W22
	0x03543470 LDP X9, X2, [X8 + 0x1A8]
	0x03543474 BLR X9
	0x03543478 LDR X0, [X20 + 0x18]
	0x0354347C CBZ X0, 0x3543664
	0x03543480 MOVZ W1, 0xCB
	0x03543484 MOV X2, X31
	0x03543488 BL 0x34FC4A4
	0x0354348C TBZ X0, 0x0, 0x3543500
	0x03543490 MOVZ W1, 0xCB
	0x03543494 MOV X0, X20
	0x03543498 MOV X2, X31
	0x0354349C BL 0x3505ABC
	0x035434A0 CBZ X0, 0x3543664
	0x035434A4 ADRP X8, 0xBB0000
	0x035434A8 LDR X8, [X8 + 0x758]
	0x035434AC LDR X9, [X0]
	0x035434B0 LDR X1, [X8]
	0x035434B4 LDR X8, [X9 + 0x40]
	0x035434B8 LDR X9, [X1 + 0x40]
	0x035434BC CMP X8, X9
	0x035434C0 B.NE 0x3543568
	0x035434C4 BL 0x1C16E08
	0x035434C8 LDR W1, [X0]
	0x035434CC CBZ W1, 0x3543500
	0x035434D0 LDR X0, [X24 + 0x110]
	0x035434D4 CBZ X0, 0x3543664
	0x035434D8 LDR X8, [X0]
	0x035434DC STR W1, [X0 + 0x48]
	0x035434E0 LDR X22, [X24 + 0xC0]
	0x035434E4 MOV W2, W31
	0x035434E8 LDP X9, X3, [X8 + 0x1D8]
	0x035434EC BLR X9
	0x035434F0 CBZ X22, 0x3543664
	0x035434F4 MOV X1, X0
	0x035434F8 MOV X0, X22
	0x035434FC BL 0x35438D8
	0x03543500 LDR X0, [X24 + 0xC0]
	0x03543504 CBZ X0, 0x3543664
	0x03543508 MOV X1, X21
	0x0354350C BL 0x3543A9C
	0x03543510 B 0x3543614
	0x03543514 MOV X21, X31
	0x03543518 LDR X8, [X24 + 0x108]
	0x0354351C CBZ X8, 0x3543664
	0x03543520 LDR W8, [X8 + 0x18]
	0x03543524 CMP W22, W8
	0x03543528 B.NE 0x354356C
	0x0354352C MOVZ W1, 0xFC
	0x03543530 MOV X0, X20
	0x03543534 MOV X2, X31
	0x03543538 BL 0x3505ABC
	0x0354353C CBZ X0, 0x3543580
	0x03543540 ADRP X8, 0xBB1000
	0x03543544 LDR X8, [X8 + 0xE58]
	0x03543548 MOV X22, X0
	0x0354354C LDR X23, [X8]
	0x03543550 MOV X1, X23
	0x03543554 BL 0x1C16E00
	0x03543558 MOV X1, X0
	0x0354355C CBNZ X0, 0x3543584
	0x03543560 MOV X0, X22
	0x03543564 MOV X1, X23
	0x03543568 BL 0x1C171E0
	0x0354356C LDR X0, [X24 + 0xC0]
	0x03543570 CBZ X0, 0x3543664
	0x03543574 MOV X1, X21
	0x03543578 BL 0x3543718
	0x0354357C B 0x3543614
	0x03543580 MOV X1, X31
	0x03543584 MOV X0, X24
	0x03543588 BL 0x353DC8C
	0x0354358C LDR X8, [X24 + 0x128]
	0x03543590 CBZ X8, 0x35435A0
	0x03543594 LDRB W8, [X8 + 0x31]
	0x03543598 CMP W8, 0x3
	0x0354359C CSET W8, EQ
	0x035435A0 CBZ X21, 0x3543664
	0x035435A4 STRB W8, [X21 + 0x1D]
	0x035435A8 LDR W1, [X24 + 0x90]
	0x035435AC CMP W1, 0x9
	0x035435B0 B.EQ 0x35435D8
	0x035435B4 LDR X8, [X24 + 0x98]
	0x035435B8 MOVZ W9, 0x9
	0x035435BC STR W9, [X24 + 0x90]
	0x035435C0 CBZ X8, 0x35435D8
	0x035435C4 LDR X9, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xE9E000
	007 Move W8, [X21+3089]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {91}
	014 Move X0, 0xBB2000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0xBF3000
	018 Move X0, [X0+2896]
	019 Call 0x1C17CF4
	020 Move X0, 0xBBA000
	021 Move X0, [X0+3576]
	022 Call 0x1C17CF4
	023 Move X0, 0xBF3000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move X0, 0xBBB000
	027 Move X0, [X0+1032]
	028 Call 0x1C17CF4
	029 Move X0, 0xBBB000
	030 Move X0, [X0+24]
	031 Call 0x1C17CF4
	032 Move X0, 0xBBB000
	033 Move X0, [X0+64]
	034 Call 0x1C17CF4
	035 Move X0, 0xBBB000
	036 Move X0, [X0+768]
	037 Call 0x1C17CF4
	038 Move X0, 0xBF3000
	039 Move X0, [X0+3240]
	040 Call 0x1C17CF4
	041 Move X0, 0xBBB000
	042 Move X0, [X0+1040]
	043 Call 0x1C17CF4
	044 Move X0, 0xBB2000
	045 Move X0, [X0+2760]
	046 Call 0x1C17CF4
	047 Move X0, 0xBF3000
	048 Move X0, [X0+3736]
	049 Call 0x1C17CF4
	050 Move X0, 0xBBB000
	051 Move X0, [X0+1056]
	052 Call 0x1C17CF4
	053 Move X0, 0xBBB000
	054 Move X0, [X0+1064]
	055 Call 0x1C17CF4
	056 Move X0, 0xBBB000
	057 Move X0, [X0+1072]
	058 Call 0x1C17CF4
	059 Move X0, 0xBBB000
	060 Move X0, [X0+1080]
	061 Call 0x1C17CF4
	062 Move X0, 0xBBB000
	063 Move X0, [X0+1088]
	064 Call 0x1C17CF4
	065 Move X0, 0xBBB000
	066 Move X0, [X0+1096]
	067 Call 0x1C17CF4
	068 Move X0, 0xBBB000
	069 Move X0, [X0+1104]
	070 Call 0x1C17CF4
	071 Move X0, 0xBBB000
	072 Move X0, [X0+1112]
	073 Call 0x1C17CF4
	074 Move X0, 0xBBB000
	075 Move X0, [X0+1120]
	076 Call 0x1C17CF4
	077 Move X0, 0xBBB000
	078 Move X0, [X0+1128]
	079 Call 0x1C17CF4
	080 Move X0, 0xBB2000
	081 Move X0, [X0+2440]
	082 Call 0x1C17CF4
	083 Move X0, 0xBBB000
	084 Move X0, [X0+1136]
	085 Call 0x1C17CF4
	086 Move X0, 0xBBB000
	087 Move X0, [X0+1144]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X21+3089], W8
	091 Subtract W8, W20, 1022
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction STRH not yet implemented."
	094 Move X9, -43692032
	095 Add X9, X9, 3380
	096 NotImplemented "Instruction ADR not yet implemented."
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Add X10, X10, X11
	099 CallNoReturn X10
	100 Move X8, 0xBF3000
	101 Move X8, [X8+3736]
	102 Move X0, [X8]
	103 Call 0x1C17F10
	104 Move X1, X19
	105 Move X2, X31
	106 Move X21, X0
	107 Call SystemConnectionSummary..ctor, X0, X1
	108 Move [X19+232], X21
	109 Move X8, 0xBBB000
	110 Move X8, [X8+1040]
	111 Add X1, X31, 32
	112 Move [X31+32], W20
	113 Move X0, [X8]
	114 Call 0x1C17E04
	115 Move X9, 0xBF3000
	116 Move W8, [X19+144]
	117 Move X9, [X9+2896]
	118 Move X20, X0
	119 Add X1, X31, 8
	120 Move [X31+8], W8
	121 Move X0, [X9]
	122 Call 0x1C17E04
	123 Move X8, [X19+232]
	124 Compare X8, 0
	125 JumpIfEqual {831}
	126 Move X9, [X8]
	127 Move X21, X0
	128 Move X0, X8
	129 Move X10, [X9+360]
	130 Move X1, [X9+368]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, 0xBBB000
	133 Move X8, [X8+1096]
	134 Move X3, X0
	135 Move X1, X20
	136 Move X2, X21
	137 Move X8, [X8]
	138 Move X4, X31
	139 Move X0, X8
	140 Call String.Format, X0, X1, X2, X3
	141 Move X8, [X19]
	142 Move X2, X0
	143 Move W1, 1
	144 Move X0, X19
	145 Move X9, [X8+536]
	146 Move X3, [X8+544]
	147 Move W20, 1
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move W1, [X19+144]
	150 Move [X19+224], W20
	151 Move X8, 0xBF3000
	152 Move X8, [X8+3736]
	153 Move X0, [X8]
	154 Call 0x1C17F10
	155 Move X1, X19
	156 Move X2, X31
	157 Move X21, X0
	158 Call SystemConnectionSummary..ctor, X0, X1
	159 Move [X19+232], X21
	160 Move X8, 0xBBB000
	161 Move X8, [X8+1040]
	162 Add X1, X31, 32
	163 Move [X31+32], W20
	164 Move X0, [X8]
	165 Call 0x1C17E04
	166 Move X9, 0xBF3000
	167 Move W8, [X19+144]
	168 Move X9, [X9+2896]
	169 Move X20, X0
	170 Add X1, X31, 8
	171 Move [X31+8], W8
	172 Move X0, [X9]
	173 Call 0x1C17E04
	174 Move X8, [X19+232]
	175 Compare X8, 0
	176 JumpIfEqual {831}
	177 Move X9, [X8]
	178 Move X21, X0
	179 Move X0, X8
	180 Move X10, [X9+360]
	181 Move X1, [X9+368]
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X8, 0xBBB000
	184 Move X8, [X8+1096]
	185 Move X3, X0
	186 Move X1, X20
	187 Move X2, X21
	188 Move X8, [X8]
	189 Move X4, X31
	190 Move X0, X8
	191 Call String.Format, X0, X1, X2, X3
	192 Move X8, [X19]
	193 Move X2, X0
	194 Move W1, 1
	195 Move X0, X19
	196 Move X9, [X8+536]
	197 Move X3, [X8+544]
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move W1, [X19+144]
	200 Move W8, 4
	201 Move W8, [X19+144]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X8, [X19+16]
	204 Compare X8, 0
	205 JumpIfEqual {831}
	206 Move W8, [X8+64]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X9, 0xBBB000
	209 Move X8, [X19]
	210 Move X9, [X9+1072]
	211 Move W1, 5
	212 Move X0, X19
	213 Move X3, [X8+544]
	214 Move X2, [X9]
	215 Move X9, [X8+536]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X8, [X19+48]
	218 Move W9, 2
	219 Move [X19+128], W9
	220 Compare X8, 0
	221 JumpIfEqual {223}
	222 Move [X8+40], X31
	223 Move W8, [X19+144]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X8, [X19+16]
	226 Compare X8, 0
	227 JumpIfEqual {831}
	228 Move W8, [X8+64]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move W8, 6
	231 Move X20, [X19+272]
	232 Move TEMP, 0
	233 Not TEMP
	234 Move W1, TEMP
	235 Move X0, X19
	236 Move [X19+312], X31
	237 Move [X19+272], X31
	238 Call LoadBalancingClient.ChangeLocalID, X0, X1
	239 Compare X20, 0
	240 JumpIfEqual {247}
	241 Move W8, [X19+128]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X0, [X19+184]
	244 Compare X0, 0
	245 JumpIfEqual {831}
	246 Call MatchMakingCallbacksContainer.OnLeftRoom, X0
	247 NotImplemented "Instruction LDRH not yet implemented."
	248 And W31, W8, 255
	249 NotImplemented "Instruction STRH not yet implemented."
	250 Move X9, [X19+16]
	251 Compare X9, 0
	252 JumpIfEqual {831}
	253 Move W9, [X9+132]
	254 NotImplemented "Instruction STRH not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X9, 0xBBB000
	257 Move X9, [X9+768]
	258 Add X1, X31, 32
	259 NotImplemented "Instruction STRH not yet implemented."
	260 Move X0, [X9]
	261 Call 0x1C17E04
	262 Move X8, 0xBBB000
	263 Move X8, [X8+1112]
	264 Move X1, X0
	265 Move X2, X31
	266 Move X8, [X8]
	267 Move X0, X8
	268 Call String.Format, X0, X1
	269 Move X8, [X19]
	270 Move X2, X0
	271 Move W1, 3
	272 Move X0, X19
	273 Move X9, [X8+536]
	274 Move X3, [X8+544]
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Move X9, 0xBBB000
	277 Move X20, [X19+16]
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X9, [X9+64]
	280 Add X0, X31, 60
	281 NotImplemented "Instruction STRH not yet implemented."
	282 Move X1, [X9]
	283 Call Nullable`1<ByteEnum>.get_Value, X0
	284 Compare X20, 0
	285 JumpIfEqual {831}
	286 Move [X20+132], W0
	287 NotImplemented "Instruction STRH not yet implemented."
	288 NotImplemented "Instruction STRH not yet implemented."
	289 Move W1, [X19+144]
	290 Subtract W8, W1, 5
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move X9, -43692032
	293 Add X9, X9, 3440
	294 NotImplemented "Instruction ADR not yet implemented."
	295 NotImplemented "Instruction LDRH not yet implemented."
	296 Add X10, X10, X11
	297 CallNoReturn X10
	298 Move X8, [X19]
	299 Move X0, X19
	300 Move X9, [X8+456]
	301 Move X1, [X8+464]
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Move X8, 0xBF3000
	304 Move X8, [X8+3736]
	305 Move X0, [X8]
	306 Call 0x1C17F10
	307 Move X1, X19
	308 Move X2, X31
	309 Move X20, X0
	310 Call SystemConnectionSummary..ctor, X0, X1
	311 Move [X19+232], X20
	312 Move X8, 0xBBB000
	313 Move X8, [X8+1040]
	314 Add X1, X31, 32
	315 Move X0, [X8]
	316 Move W8, 1040
	317 Move [X31+32], W8
	318 Call 0x1C17E04
	319 Move X9, 0xBF3000
	320 Move W8, [X19+144]
	321 Move X9, [X9+2896]
	322 Move X20, X0
	323 Add X1, X31, 8
	324 Move [X31+8], W8
	325 Move X0, [X9]
	326 Call 0x1C17E04
	327 Move X8, [X19+232]
	328 Compare X8, 0
	329 JumpIfEqual {831}
	330 Move X9, [X8]
	331 Move X21, X0
	332 Move X0, X8
	333 Move X10, [X9+360]
	334 Move X1, [X9+368]
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Move X8, 0xBBB000
	337 Move X8, [X8+1096]
	338 Move X3, X0
	339 Move X1, X20
	340 Move X2, X21
	341 Move X8, [X8]
	342 Move X4, X31
	343 Move X0, X8
	344 Call String.Format, X0, X1, X2, X3
	345 Move X8, [X19]
	346 Move X2, X0
	347 Move W1, 1
	348 Move X0, X19
	349 Move X9, [X8+536]
	350 Move X3, [X8+544]
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Move W1, [X19+144]
	353 Move W8, 8
	354 Move [X19+224], W8
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move W8, [X19+56]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 NotImplemented "Instruction LDRH not yet implemented."
	359 Move W2, 20
	360 And W9, W8, 0xFF00
	361 NotImplemented "Instruction CMP not yet implemented."
	362 NotImplemented "Instruction STRH not yet implemented."
	363 And W31, W8, 255
	364 Move W8, [X19+104]
	365 Move W9, 19
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move W8, 13
	368 NotImplemented "Instruction CSEL not yet implemented."
	369 Move W8, 1
	370 Move [X19+56], W8
	371 Move W2, 13
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Move X8, [X19+152]
	374 Move [X19+144], W2
	375 Compare X8, 0
	376 JumpIfEqual {462}
	377 Move X9, [X8+24]
	378 Move X0, [X8+64]
	379 Move X3, [X8+40]
	380 Move X8, 0xBF3000
	381 Move X8, [X8+3736]
	382 Move X0, [X8]
	383 Call 0x1C17F10
	384 Move X1, X19
	385 Move X2, X31
	386 Move X20, X0
	387 Call SystemConnectionSummary..ctor, X0, X1
	388 Move [X19+232], X20
	389 Move X8, 0xBBB000
	390 Move X8, [X8+1040]
	391 Add X1, X31, 32
	392 Move X0, [X8]
	393 Move W8, 1041
	394 Move [X31+32], W8
	395 Call 0x1C17E04
	396 Move X9, 0xBF3000
	397 Move W8, [X19+144]
	398 Move X9, [X9+2896]
	399 Move X20, X0
	400 Add X1, X31, 8
	401 Move [X31+8], W8
	402 Move X0, [X9]
	403 Call 0x1C17E04
	404 Move X8, [X19+232]
	405 Compare X8, 0
	406 JumpIfEqual {831}
	407 Move X9, [X8]
	408 Move X21, X0
	409 Move X0, X8
	410 Move X10, [X9+360]
	411 Move X1, [X9+368]
	412 NotImplemented "Instruction BLR not yet implemented."
	413 Move X8, 0xBBB000
	414 Move X8, [X8+1096]
	415 Move X3, X0
	416 Move X1, X20
	417 Move X2, X21
	418 Move X8, [X8]
	419 Move X4, X31
	420 Move X0, X8
	421 Call String.Format, X0, X1, X2, X3
	422 Move X8, [X19]
	423 Move X2, X0
	424 Move W1, 1
	425 Move X0, X19
	426 Move X9, [X8+536]
	427 Move X3, [X8+544]
	428 NotImplemented "Instruction BLR not yet implemented."
	429 Move W1, [X19+144]
	430 Move W8, 7
	431 Move X9, 0xBBB000
	432 Move X8, [X19]
	433 Move X9, [X9+1088]
	434 Move W1, 1
	435 Move X0, X19
	436 Move X3, [X8+544]
	437 Move X2, [X9]
	438 Move X9, [X8+536]
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Move W1, [X19+144]
	441 Move W8, 14
	442 Move W1, [X19+144]
	443 Move W8, 9
	444 Move W1, [X19+144]
	445 Move W8, 10
	446 Move W1, [X19+144]
	447 Move W8, 3
	448 Move W1, [X19+144]
	449 Move W8, 2
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Move [X19+224], W8
	452 Move X8, [X19+152]
	453 Move W9, 13
	454 Move [X19+144], W9
	455 Compare X8, 0
	456 JumpIfEqual {462}
	457 Move X9, [X8+24]
	458 Move X0, [X8+64]
	459 Move X3, [X8+40]
	460 Move W2, 13
	461 NotImplemented "Instruction BLR not yet implemented."
	462 Move X20, [X31+80]
	463 Move X19, [X31+88]
	464 Move X30, [X31+64]
	465 Move X21, [X31+72]
	466 Add X31, X31, 96
	467 Return 
	468 Move X9, 0xBBA000
	469 Move X8, [X19]
	470 Move X9, [X9+1064]
	471 Move W1, 5
	472 Move X0, X19
	473 Move X3, [X8+544]
	474 Move X2, [X9]
	475 Move X9, [X8+536]
	476 NotImplemented "Instruction BLR not yet implemented."
	477 Move W8, [X19+144]
	478 Move W9, 1
	479 Move [X19+128], W9
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Move X8, [X19+16]
	482 Compare X8, 0
	483 JumpIfEqual {831}
	484 Move W8, [X8+64]
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move X9, 0xBBA000
	487 Move X8, [X19]
	488 Move X9, [X9+1056]
	489 Move W1, 5
	490 Move X0, X19
	491 Move X3, [X8+544]
	492 Move X2, [X9]
	493 Move X9, [X8+536]
	494 NotImplemented "Instruction BLR not yet implemented."
	495 Move X0, [X19+176]
	496 Move [X19+128], W31
	497 Compare X0, 0
	498 JumpIfEqual {831}
	499 Call ConnectionCallbacksContainer.OnConnected, X0
	500 Move X0, [X19+16]
	501 Compare X0, 0
	502 JumpIfEqual {831}
	503 Move W8, [X0+132]
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move W8, [X19+128]
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Move W1, [X19+144]
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Move X8, [X19+152]
	510 Move W9, 17
	511 Move [X19+144], W9
	512 Compare X8, 0
	513 JumpIfEqual {519}
	514 Move X9, [X8+24]
	515 Move X0, [X8+64]
	516 Move X3, [X8+40]
	517 Move W2, 17
	518 NotImplemented "Instruction BLR not yet implemented."
	519 Move X0, [X19+320]
	520 Move X1, X31
	521 Call String.IsNullOrEmpty, X0
	522 Move TEMP, X0
	523 And TEMP, TEMP, 1
	524 Compare TEMP, 1
	525 JumpIfNotEqual {531}
	526 Move X0, X19
	527 Call LoadBalancingClient.OpGetRegions, X0
	528 Move W8, [X19+56]
	529 Subtract W8, W8, 1
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Move X0, X19
	532 Call LoadBalancingClient.CallAuthenticate, X0
	533 Move W1, [X19+144]
	534 Move TEMP, X0
	535 And TEMP, TEMP, 1
	536 Compare TEMP, 1
	537 JumpIfNotEqual {555}
	538 NotImplemented "Instruction CMP not yet implemented."
	539 Move X8, [X19+152]
	540 Move W9, 1
	541 Move [X19+144], W9
	542 Compare X8, 0
	543 JumpIfEqual {462}
	544 Move X9, [X8+24]
	545 Move X0, [X8+64]
	546 Move X3, [X8+40]
	547 Move W2, 1
	548 Move W8, [X19+128]
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Move W8, [X19+56]
	551 Compare W8, 0
	552 JumpIfNotEqual {462}
	553 Move X1, X31
	554 Call PhotonPeer.EstablishEncryption, X0
	555 Move X8, 0xBF2000
	556 Move X8, [X8+2896]
	557 Move TEMP, 0
	558 Not TEMP
	559 Move X9, TEMP
	560 Move [X31+48], W1
	561 Add X0, X31, 32
	562 Move X8, [X8]
	563 Move X1, X31
	564 Move [X31+32], X8
	565 Move [X31+40], X9
	566 Call Enum.ToString, X0
	567 Move X8, 0xBBA000
	568 Move X8, [X8+1128]
	569 Move X1, X0
	570 Move X2, X31
	571 Move X8, [X8]
	572 Move X0, X8
	573 Call String.Concat, X0, X1
	574 Move X8, [X19]
	575 Move X2, X0
	576 Move W1, 1
	577 Move X0, X19
	578 Move X9, [X8+536]
	579 Move X3, [X8+544]
	580 NotImplemented "Instruction BLR not yet implemented."
	581 Compare W1, 0
	582 JumpIfNotEqual {587}
	583 Move X8, [X19+48]
	584 Compare X8, 0
	585 JumpIfEqual {665}
	586 Move [X8+40], X31
	587 Move X8, 0xBB1000
	588 Move X9, 0xBB1000
	589 Move X8, [X8+2440]
	590 Move X9, [X9+2760]
	591 Move W1, 6
	592 Move X21, [X8]
	593 Move X0, [X9]
	594 Call 0x1C17D6C
	595 Compare X0, 0
	596 JumpIfEqual {831}
	597 Move W8, [X0+24]
	598 Move X20, X0
	599 Compare W8, 0
	600 JumpIfEqual {832}
	601 Move X8, 0xBBA000
	602 Move X8, [X8+1120]
	603 Move X9, 0xBF2000
	604 Move TEMP, 0
	605 Not TEMP
	606 Move X10, TEMP
	607 Add X0, X31, 32
	608 Move X8, [X8]
	609 Move X9, [X9+2896]
	610 Move X1, X31
	611 Move [X20+32], X8
	612 Move X8, [X9]
	613 Move W9, [X19+144]
	614 Move [X31+32], X8
	615 Move [X31+40], X10
	616 Move [X31+48], W9
	617 Call Enum.ToString, X0
	618 Move W8, [X20+24]
	619 NotImplemented "Instruction CMP not yet implemented."
	620 NotImplemented "Instruction CMP not yet implemented."
	621 Move [X20+40], X0
	622 Move X8, 0xBBA000
	623 Move X8, [X8+1144]
	624 Move X9, 0xBF2000
	625 Move TEMP, 0
	626 Not TEMP
	627 Move X10, TEMP
	628 Add X0, X31, 8
	629 Move X8, [X8]
	630 Move X9, [X9+3240]
	631 Move X1, X31
	632 Move [X20+48], X8
	633 Move X8, [X9]
	634 Move W9, [X19+128]
	635 Move [X31+8], X8
	636 Move [X31+16], X10
	637 Move [X31+24], W9
	638 Call Enum.ToString, X0
	639 Move W8, [X20+24]
	640 NotImplemented "Instruction CMP not yet implemented."
	641 NotImplemented "Instruction CMP not yet implemented."
	642 Move [X20+56], X0
	643 Move X9, 0xBBA000
	644 Move X9, [X9+1104]
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Move X9, [X9]
	647 Move [X20+64], X9
	648 Move X0, X20
	649 Move X1, X31
	650 Move [X20+72], X21
	651 Call String.Concat, X0
	652 Move X8, [X19]
	653 Move X2, X0
	654 Move W1, 2
	655 Move X0, X19
	656 Move X9, [X8+536]
	657 Move X3, [X8+544]
	658 NotImplemented "Instruction BLR not yet implemented."
	659 Move X8, [X19+48]
	660 Compare X8, 0
	661 JumpIfEqual {663}
	662 Move [X8+40], X31
	663 Move W1, [X19+144]
	664 NotImplemented "Instruction CMP not yet implemented."
	665 Move X8, [X19+152]
	666 Move W9, 14
	667 Move [X19+144], W9
	668 Compare X8, 0
	669 JumpIfEqual {675}
	670 Move X9, [X8+24]
	671 Move X0, [X8+64]
	672 Move X3, [X8+40]
	673 Move W2, 14
	674 NotImplemented "Instruction BLR not yet implemented."
	675 Move X0, [X19+176]
	676 Compare X0, 0
	677 JumpIfEqual {831}
	678 Move W1, [X19+224]
	679 Call ConnectionCallbacksContainer.OnDisconnected, X0, X1
	680 Move X1, [X19+120]
	681 Move X2, [X19+136]
	682 Move W3, 1
	683 Move X0, X19
	684 Call LoadBalancingClient.Connect, X0, X1, X2, X3
	685 Move X20, [X19+16]
	686 Move [X19+104], W31
	687 Compare X20, 0
	688 JumpIfEqual {831}
	689 Move W8, [X20+132]
	690 Move W9, 5
	691 Move X0, X19
	692 NotImplemented "Instruction CMP not yet implemented."
	693 NotImplemented "Instruction CSEL not yet implemented."
	694 Move [X20+132], W8
	695 Move [X19+384], W31
	696 Move [X19+98], W31
	697 NotImplemented "Instruction STRH not yet implemented."
	698 Call LoadBalancingClient.GetNameServerAddress, X0
	699 Move X2, [X19+136]
	700 Move W8, [X19+56]
	701 Move X3, [X19+32]
	702 Move X1, X0
	703 Compare W8, 0
	704 JumpIfEqual {803}
	705 Move X8, [X19+48]
	706 Compare X8, 0
	707 JumpIfEqual {803}
	708 Move X4, [X8+40]
	709 Move X8, 0xBF2000
	710 Move X8, [X8+2904]
	711 Move W9, [X19+224]
	712 Move TEMP, 0
	713 Not TEMP
	714 Move X21, TEMP
	715 Add X0, X31, 32
	716 Move X8, [X8]
	717 Move X1, X31
	718 Move [X31+48], W9
	719 Move [X31+32], X8
	720 Move [X31+40], X21
	721 Call Enum.ToString, X0
	722 Move X8, [X19+16]
	723 Compare X8, 0
	724 JumpIfEqual {831}
	725 Move X9, 0xBB9000
	726 Move X9, [X9+3576]
	727 Move W8, [X8+132]
	728 Move X20, X0
	729 Add X0, X31, 8
	730 Move X9, [X9]
	731 Move X1, X31
	732 Move [X31+24], W8
	733 Move [X31+8], X9
	734 Move [X31+16], X21
	735 Call Enum.ToString, X0
	736 Move X8, 0xBBA000
	737 Move X8, [X8+1136]
	738 Move X9, 0xBBA000
	739 Move X9, [X9+1080]
	740 Move X3, X0
	741 Move X8, [X8]
	742 Move X1, X20
	743 Move X2, [X9]
	744 Move X4, X31
	745 Move X0, X8
	746 Call String.Concat, X0, X1, X2, X3
	747 Move X8, 0xBB1000
	748 Move X8, [X8+2504]
	749 Move X20, X0
	750 Move X21, [X8]
	751 Move X8, [X21+56]
	752 Compare X8, 0
	753 JumpIfNotEqual {757}
	754 Move X0, X21
	755 Call 0x1C5D6E0
	756 Move X8, [X21+56]
	757 Move X0, [X8+16]
	758 Move W8, [X0+309]
	759 Move TEMP, X8
	760 And TEMP, TEMP, 1
	761 Compare TEMP, 1
	762 JumpIfEqual {764}
	763 Call 0x1C5D684
	764 Move W8, [X0+224]
	765 Compare W8, 0
	766 JumpIfNotEqual {768}
	767 Call 0x1C17DFC
	768 Move X8, [X21+56]
	769 Move X0, [X8+16]
	770 Move W8, [X0+309]
	771 Move TEMP, X8
	772 And TEMP, TEMP, 1
	773 Compare TEMP, 1
	774 JumpIfEqual {776}
	775 Call 0x1C5D684
	776 Move X8, [X0+184]
	777 Move X0, X20
	778 Move X2, X31
	779 Move X1, [X8]
	780 Call String.Format, X0, X1
	781 Move X8, [X19]
	782 Move X2, X0
	783 Move W1, 3
	784 Move X0, X19
	785 Move X9, [X8+536]
	786 Move X3, [X8+544]
	787 NotImplemented "Instruction BLR not yet implemented."
	788 Move X20, [X19+16]
	789 Move X0, X19
	790 Move [X19+56], W31
	791 Move [X19+384], W31
	792 Move [X19+98], W31
	793 NotImplemented "Instruction STRH not yet implemented."
	794 Call LoadBalancingClient.GetNameServerAddress, X0
	795 Move W8, [X19+56]
	796 Move X1, X0
	797 Compare W8, 0
	798 JumpIfEqual {805}
	799 Move X8, [X19+48]
	800 Compare X8, 0
	801 JumpIfEqual {805}
	802 Move X4, [X8+40]
	803 Move X4, X31
	804 Move X8, [X20]
	805 Move X4, X31
	806 Compare X20, 0
	807 JumpIfEqual {831}
	808 Move X8, [X20]
	809 Move X2, [X19+136]
	810 Move X3, [X19+32]
	811 Move X9, [X8+424]
	812 Move X6, [X8+432]
	813 Move X0, X20
	814 Move X5, X31
	815 NotImplemented "Instruction BLR not yet implemented."
	816 Move TEMP, X0
	817 And TEMP, TEMP, 1
	818 Compare TEMP, 1
	819 JumpIfNotEqual {462}
	820 Move W1, [X19+144]
	821 NotImplemented "Instruction CMP not yet implemented."
	822 Move X8, [X19+152]
	823 Move W9, 16
	824 Move [X19+144], W9
	825 Compare X8, 0
	826 JumpIfEqual {462}
	827 Move X9, [X8+24]
	828 Move X0, [X8+64]
	829 Move X3, [X8+40]
	830 Move W2, 16
	831 Call 0x1C17F20
	832 Call 0x1C17F28

Method: System.Void OnEvent(ExitGames.Client.Photon.EventData photonEvent)

Disassembly:
	0x03543B00 MOVZ W8, 0x1
	0x03543B04 STRB W8, [X21 + 0xC2D]
	0x03543B08 STP X31, X31, [X31 + 0x8]
	0x03543B0C STR X31, [X31 + 0x18]
	0x03543B10 LDR X0, [X20 + 0x28]
	0x03543B14 CBZ X0, 0x3543BF0
	0x03543B18 ADRP X24, 0xBF1000
	0x03543B1C ADRP X22, 0xBF1000
	0x03543B20 ADRP X23, 0xBF1000
	0x03543B24 ADRP X21, 0xBF1000
	0x03543B28 LDR X24, [X24 + 0xCF0]
	0x03543B2C LDR X22, [X22 + 0xCD8]
	0x03543B30 LDR X23, [X23 + 0xCE8]
	0x03543B34 LDR X21, [X21 + 0xCD0]
	0x03543B38 BL 0x35440C4
	0x03543B3C LDR X1, [X24]
	0x03543B40 ADD X8, X31, 0x8
	0x03543B44 MOV X0, X20
	0x03543B48 BL 0x301CB58
	0x03543B4C LDR X1, [X22]
	0x03543B50 ADD X0, X31, 0x8
	0x03543B54 BL 0x2BC4350
	0x03543B58 TBZ X0, 0x0, 0x3543BC8
	0x03543B5C LDR X20, [X31 + 0x18]
	0x03543B60 CBZ X20, 0x3543BEC
	0x03543B64 LDR X8, [X20]
	0x03543B68 LDR X1, [X23]
	0x03543B6C LDRH W9, [X8 + 0x12E]
	0x03543B70 CBZ X9, 0x3543B94
	0x03543B74 LDR X10, [X8 + 0xB0]
	0x03543B78 ADD X10, X10, 0x8
	0x03543B7C LDUR X11, [X10 - 0x8]
	0x03543B80 CMP X11, X1
	0x03543B84 B.EQ 0x3543BA4
	0x03543B88 SUBS X9, X9, 0x1
	0x03543B8C ADD X10, X10, 0x10
	0x03543B90 B.NE 0x3543B7C
	0x03543B94 MOVZ W2, 0x1
	0x03543B98 MOV X0, X20
	0x03543B9C BL 0x1C5C788
	0x03543BA0 B 0x3543BB4
	0x03543BA4 LDR W9, [X10]
	0x03543BA8 ADD W9, W9, 0x1
	0x03543BAC ADD X8, X8, W9, 0x4, SXTW
	0x03543BB0 ADD X0, X8, 0x138
	0x03543BB4 LDP X8, X2, [X0]
	0x03543BB8 MOV X0, X20
	0x03543BBC MOV X1, X19
	0x03543BC0 BLR X8
	0x03543BC4 B 0x3543B4C
	0x03543BC8 LDR X1, [X21]
	0x03543BCC ADD X0, X31, 0x8
	0x03543BD0 BL 0x2BC434C
	0x03543BD4 LDP X20, X19, [X31 + 0x50]
	0x03543BD8 LDP X22, X21, [X31 + 0x40]
	0x03543BDC LDP X24, X23, [X31 + 0x30]
	0x03543BE0 LDR X30, [X31 + 0x20]
	0x03543BE4 ADD X31, X31, 0x60
	0x03543BE8 RET
	0x03543BEC BL 0x1C16F20
	0x03543BF0 BL 0x1C16F20
	0x03543BF4 B 0x3543BFC
	0x03543BF8 B 0x3543BFC
	0x03543BFC MOV X19, X0
	0x03543C00 CMP W1, 0x1
	0x03543C04 B.NE 0x3543C30
	0x03543C08 MOV X0, X19
	0x03543C0C BL 0x3EB1AD0
	0x03543C10 LDR X20, [X0]
	0x03543C14 BL 0x3EB1AE0
	0x03543C18 LDR X1, [X21]
	0x03543C1C ADD X0, X31, 0x8
	0x03543C20 BL 0x2BC434C
	0x03543C24 CBZ X20, 0x3543BD4
	0x03543C28 MOV X0, X20
	0x03543C2C BL 0x1C16F18
	0x03543C30 MOV X20, X31
	0x03543C34 B 0x3543C3C
	0x03543C38 MOV X19, X0
	0x03543C3C LDR X1, [X21]
	0x03543C40 ADD X0, X31, 0x8
	0x03543C44 BL 0x2BC434C
	0x03543C48 CBNZ X20, 0x3543C54
	0x03543C4C MOV X0, X19
	0x03543C50 BL 0x1D2C690
	0x03543C54 MOV X0, X20
	0x03543C58 BL 0x1C16F18
	0x03543C5C BL 0x1990590
	0x03543C60 STP X30, X21, [X31 - 0x20]!
	0x03543C64 STP X20, X19, [X31 + 0x10]
	0x03543C68 ADRP X20, 0xE9C000
	0x03543C6C ADRP X21, 0xBF1000
	0x03543C70 LDRB W8, [X20 + 0xC5E]
	0x03543C74 LDR X21, [X21 + 0xCB8]
	0x03543C78 MOV X19, X0
	0x03543C7C TBNZ X8, 0x0, 0x3543C94
	0x03543C80 ADRP X0, 0xBF1000
	0x03543C84 LDR X0, [X0 + 0xCB8]
	0x03543C88 BL 0x1C16CF4
	0x03543C8C MOVZ W8, 0x1
	0x03543C90 STRB W8, [X20 + 0xC5E]
	0x03543C94 LDR X0, [X21]
	0x03543C98 LDR W8, [X0 + 0xE0]
	0x03543C9C CBNZ W8, 0x3543CA4
	0x03543CA0 BL 0x1C16DFC
	0x03543CA4 MOV X0, X19
	0x03543CA8 LDP X20, X19, [X31 + 0x10]
	0x03543CAC MOV X1, X31
	0x03543CB0 LDP X30, X21, [X31], #0x20
	0x03543CB4 B 0x33BDD8C
	0x03543CB8 SUB X31, X31, 0x60
	0x03543CBC STR X30, [X31 + 0x20]
	0x03543CC0 STP X24, X23, [X31 + 0x30]
	0x03543CC4 STP X22, X21, [X31 + 0x40]
	0x03543CC8 STP X20, X19, [X31 + 0x50]
	0x03543CCC ADRP X21, 0xE9C000
	0x03543CD0 LDRB W8, [X21 + 0xC35]
	0x03543CD4 MOV X19, X1
	0x03543CD8 MOV X20, X0
	0x03543CDC TBNZ X8, 0x0, 0x3543D24
	0x03543CE0 ADRP X0, 0xBF1000
	0x03543CE4 LDR X0, [X0 + 0xE48]
	0x03543CE8 BL 0x1C16CF4
	0x03543CEC ADRP X0, 0xBF1000
	0x03543CF0 LDR X0, [X0 + 0xE50]
	0x03543CF4 BL 0x1C16CF4
	0x03543CF8 ADRP X0, 0xBF1000
	0x03543CFC LDR X0, [X0 + 0xE58]
	0x03543D00 BL 0x1C16CF4
	0x03543D04 ADRP X0, 0xBF1000
	0x03543D08 LDR X0, [X0 + 0xE60]
	0x03543D0C BL 0x1C16CF4
	0x03543D10 ADRP X0, 0xBF1000
	0x03543D14 LDR X0, [X0 + 0xE68]
	0x03543D18 BL 0x1C16CF4
	0x03543D1C MOVZ W8, 0x1
	0x03543D20 STRB W8, [X21 + 0xC35]
	0x03543D24 STP X31, X31, [X31 + 0x8]
	0x03543D28 STR X31, [X31 + 0x18]
	0x03543D2C LDR X0, [X20 + 0x28]
	0x03543D30 CBZ X0, 0x3543E0C
	0x03543D34 ADRP X24, 0xBF1000
	0x03543D38 ADRP X22, 0xBF1000
	0x03543D3C ADRP X23, 0xBF1000
	0x03543D40 ADRP X21, 0xBF1000
	0x03543D44 LDR X24, [X24 + 0xE68]
	0x03543D48 LDR X22, [X22 + 0xE50]
	0x03543D4C LDR X23, [X23 + 0xE60]
	0x03543D50 LDR X21, [X21 + 0xE48]
	0x03543D54 BL 0x35440C4
	0x03543D58 LDR X1, [X24]
	0x03543D5C ADD X8, X31, 0x8
	0x03543D60 MOV X0, X20
	0x03543D64 BL 0x301CB58
	0x03543D68 LDR X1, [X22]
	0x03543D6C ADD X0, X31, 0x8
	0x03543D70 BL 0x2BC4350
	0x03543D74 TBZ X0, 0x0, 0x3543DE4
	0x03543D78 LDR X20, [X31 + 0x18]
	0x03543D7C CBZ X20, 0x3543E08
	0x03543D80 LDR X8, [X20]
	0x03543D84 LDR X1, [X23]
	0x03543D88 LDRH W9, [X8 + 0x12E]
	0x03543D8C CBZ X9, 0x3543DB0
	0x03543D90 LDR X10, [X8 + 0xB0]
	0x03543D94 ADD X10, X10, 0x8
	0x03543D98 LDUR X11, [X10 - 0x8]
	0x03543D9C CMP X11, X1
	0x03543DA0 B.EQ 0x3543DC0
	0x03543DA4 SUBS X9, X9, 0x1
	0x03543DA8 ADD X10, X10, 0x10
	0x03543DAC B.NE 0x3543D98
	0x03543DB0 MOVZ W2, 0x3
	0x03543DB4 MOV X0, X20
	0x03543DB8 BL 0x1C5C788
	0x03543DBC B 0x3543DD0
	0x03543DC0 LDR W9, [X10]
	0x03543DC4 ADD W9, W9, 0x3
	0x03543DC8 ADD X8, X8, W9, 0x4, SXTW
	0x03543DCC ADD X0, X8, 0x138
	0x03543DD0 LDP X8, X2, [X0]
	0x03543DD4 MOV X0, X20
	0x03543DD8 MOV X1, X19
	0x03543DDC BLR X8
	0x03543DE0 B 0x3543D68
	0x03543DE4 LDR X1, [X21]
	0x03543DE8 ADD X0, X31, 0x8
	0x03543DEC BL 0x2BC434C
	0x03543DF0 LDP X20, X19, [X31 + 0x50]
	0x03543DF4 LDP X22, X21, [X31 + 0x40]
	0x03543DF8 LDP X24, X23, [X31 + 0x30]
	0x03543DFC LDR X30, [X31 + 0x20]
	0x03543E00 ADD X31, X31, 0x60
	0x03543E04 RET
	0x03543E08 BL 0x1C16F20
	0x03543E0C BL 0x1C16F20
	0x03543E10 B 0x3543E18
	0x03543E14 B 0x3543E18
	0x03543E18 MOV X19, X0
	0x03543E1C CMP W1, 0x1
	0x03543E20 B.NE 0x3543E4C
	0x03543E24 MOV X0, X19
	0x03543E28 BL 0x3EB1AD0
	0x03543E2C LDR X20, [X0]
	0x03543E30 BL 0x3EB1AE0
	0x03543E34 LDR X1, [X21]
	0x03543E38 ADD X0, X31, 0x8
	0x03543E3C BL 0x2BC434C
	0x03543E40 CBZ X20, 0x3543DF0
	0x03543E44 MOV X0, X20
	0x03543E48 BL 0x1C16F18
	0x03543E4C MOV X20, X31
	0x03543E50 B 0x3543E58
	0x03543E54 MOV X19, X0
	0x03543E58 LDR X1, [X21]
	0x03543E5C ADD X0, X31, 0x8
	0x03543E60 BL 0x2BC434C
	0x03543E64 CBNZ X20, 0x3543E70
	0x03543E68 MOV X0, X19
	0x03543E6C BL 0x1D2C690
	0x03543E70 MOV X0, X20
	0x03543E74 BL 0x1C16F18
	0x03543E78 BL 0x1990590
	0x03543E7C STP X30, X21, [X31 - 0x20]!
	0x03543E80 STP X20, X19, [X31 + 0x10]
	0x03543E84 ADRP X21, 0xE9C000
	0x03543E88 LDRB W8, [X21 + 0xC3A]
	0x03543E8C MOV X20, X1
	0x03543E90 MOV X19, X0
	0x03543E94 TBNZ X8, 0x0, 0x3543EAC
	0x03543E98 ADRP X0, 0xBB2000
	0x03543E9C LDR X0, [X0 + 0x278]
	0x03543EA0 BL 0x1C16CF4
	0x03543EA4 MOVZ W8, 0x1
	0x03543EA8 STRB W8, [X21 + 0xC3A]
	0x03543EAC MOV X0, X19
	0x03543EB0 MOV X1, X31
	0x03543EB4 BL 0x33BDD8C
	0x03543EB8 CBZ X20, 0x3543F00
	0x03543EBC MOVZ W1, 0xDA
	0x03543EC0 MOV X0, X20
	0x03543EC4 MOV X2, X31
	0x03543EC8 BL 0x3505ABC
	0x03543ECC CBZ X0, 0x3543EEC
	0x03543ED0 ADRP X8, 0xBB2000
	0x03543ED4 LDR X8, [X8 + 0x278]
	0x03543ED8 LDR X9, [X0]
	0x03543EDC LDR X8, [X8]
	0x03543EE0 CMP X9, X8
	0x03543EE4 CSEL X8, X0, X31, EQ
	0x03543EE8 B 0x3543EF0
	0x03543EEC MOV X8, X31
	0x03543EF0 STR X8, [X19 + 0x10]
	0x03543EF4 LDP X20, X19, [X31 + 0x10]
	0x03543EF8 LDP X30, X21, [X31], #0x20
	0x03543EFC RET
	0x03543F00 BL 0x1C16F20
	0x03543F04 SUB X31, X31, 0x60
	0x03543F08 STR X30, [X31 + 0x20]
	0x03543F0C STP X24, X23, [X31 + 0x30]
	0x03543F10 STP X22, X21, [X31 + 0x40]
	0x03543F14 STP X20, X19, [X31 + 0x50]
	0x03543F18 ADRP X21, 0xE9C000
	0x03543F1C LDRB W8, [X21 + 0xC39]
	0x03543F20 MOV X19, X1
	0x03543F24 MOV X20, X0
	0x03543F28 TBNZ X8, 0x0, 0x3543F70
	0x03543F2C ADRP X0, 0xBF1000
	0x03543F30 LDR X0, [X0 + 0xEC0]
	0x03543F34 BL 0x1C16CF4
	0x03543F38 ADRP X0, 0xBF1000
	0x03543F3C LDR X0, [X0 + 0xEC8]
	0x03543F40 BL 0x1C16CF4
	0x03543F44 ADRP X0, 0xBF1000
	0x03543F48 LDR X0, [X0 + 0xED0]
	0x03543F4C BL 0x1C16CF4
	0x03543F50 ADRP X0, 0xBF1000
	0x03543F54 LDR X0, [X0 + 0xED8]
	0x03543F58 BL 0x1C16CF4
	0x03543F5C ADRP X0, 0xBF1000
	0x03543F60 LDR X0, [X0 + 0xEE0]
	0x03543F64 BL 0x1C16CF4
	0x03543F68 MOVZ W8, 0x1
	0x03543F6C STRB W8, [X21 + 0xC39]
	0x03543F70 STP X31, X31, [X31 + 0x8]
	0x03543F74 STR X31, [X31 + 0x18]
	0x03543F78 LDR X0, [X20 + 0x28]
	0x03543F7C CBZ X0, 0x3544054
	0x03543F80 ADRP X24, 0xBF1000
	0x03543F84 ADRP X22, 0xBF1000
	0x03543F88 ADRP X23, 0xBF1000
	0x03543F8C ADRP X21, 0xBF1000
	0x03543F90 LDR X24, [X24 + 0xEE0]
	0x03543F94 LDR X22, [X22 + 0xEC8]
	0x03543F98 LDR X23, [X23 + 0xED8]
	0x03543F9C LDR X21, [X21 + 0xEC0]
	0x03543FA0 BL 0x35440C4
	0x03543FA4 LDR X1, [X24]
	0x03543FA8 ADD X8, X31, 0x8
	0x03543FAC MOV X0, X20
	0x03543FB0 BL 0x301CB58
	0x03543FB4 LDR X1, [X22]
	0x03543FB8 ADD X0, X31, 0x8
	0x03543FBC BL 0x2BC4350
	0x03543FC0 TBZ X0, 0x0, 0x354402C
	0x03543FC4 LDR X20, [X31 + 0x18]
	0x03543FC8 CBZ X20, 0x3544050
	0x03543FCC LDR X8, [X20]
	0x03543FD0 LDR X1, [X23]
	0x03543FD4 LDRH W9, [X8 + 0x12E]
	0x03543FD8 CBZ X9, 0x3543FFC
	0x03543FDC LDR X10, [X8 + 0xB0]
	0x03543FE0 ADD X10, X10, 0x8
	0x03543FE4 LDUR X11, [X10 - 0x8]
	0x03543FE8 CMP X11, X1
	0x03543FEC B.EQ 0x354400C
	0x03543FF0 SUBS X9, X9, 0x1
	0x03543FF4 ADD X10, X10, 0x10
	0x03543FF8 B.NE 0x3543FE4
	0x03543FFC MOV X0, X20
	0x03544000 MOV W2, W31
	0x03544004 BL 0x1C5C788
	0x03544008 B 0x3544018
	0x0354400C LDRSW X9, [X10]
	0x03544010 ADD X8, X8, X9, 0x4, LSL
	0x03544014 ADD X0, X8, 0x138
	0x03544018 LDP X8, X2, [X0]
	0x0354401C MOV X0, X20
	0x03544020 MOV X1, X19
	0x03544024 BLR X8
	0x03544028 B 0x3543FB4
	0x0354402C LDR X1, [X21]
	0x03544030 ADD X0, X31, 0x8
	0x03544034 BL 0x2BC434C
	0x03544038 LDP X20, X19, [X31 + 0x50]
	0x0354403C LDP X22, X21, [X31 + 0x40]
	0x03544040 LDP X24, X23, [X31 + 0x30]
	0x03544044 LDR X30, [X31 + 0x20]
	0x03544048 ADD X31, X31, 0x60
	0x0354404C RET
	0x03544050 BL 0x1C16F20
	0x03544054 BL 0x1C16F20
	0x03544058 B 0x3544060
	0x0354405C B 0x3544060
	0x03544060 MOV X19, X0
	0x03544064 CMP W1, 0x1
	0x03544068 B.NE 0x3544094
	0x0354406C MOV X0, X19
	0x03544070 BL 0x3EB1AD0
	0x03544074 LDR X20, [X0]
	0x03544078 BL 0x3EB1AE0
	0x0354407C LDR X1, [X21]
	0x03544080 ADD X0, X31, 0x8
	0x03544084 BL 0x2BC434C
	0x03544088 CBZ X20, 0x3544038
	0x0354408C MOV X0, X20
	0x03544090 BL 0x1C16F18
	0x03544094 MOV X20, X31
	0x03544098 B 0x35440A0
	0x0354409C MOV X19, X0
	0x035440A0 LDR X1, [X21]
	0x035440A4 ADD X0, X31, 0x8
	0x035440A8 BL 0x2BC434C
	0x035440AC CBNZ X20, 0x35440B8
	0x035440B0 MOV X0, X19
	0x035440B4 BL 0x1D2C690
	0x035440B8 MOV X0, X20
	0x035440BC BL 0x1C16F18
	0x035440C0 BL 0x1990590
	0x035440C4 STP X29, X30, [X31 - 0x60]!
	0x035440C8 STP X28, X27, [X31 + 0x10]
	0x035440CC STP X26, X25, [X31 + 0x20]
	0x035440D0 STP X24, X23, [X31 + 0x30]
	0x035440D4 STP X22, X21, [X31 + 0x40]
	0x035440D8 STP X20, X19, [X31 + 0x50]
	0x035440DC ADRP X20, 0xE9B000
	0x035440E0 LDRB W8, [X20 + 0xC1A]
	0x035440E4 MOV X19, X0
	0x035440E8 TBNZ X8, 0x0, 0x3544190
	0x035440EC ADRP X0, 0xBB7000
	0x035440F0 LDR X0, [X0 + 0xCB0]
	0x035440F4 BL 0x1C16CF4
	0x035440F8 ADRP X0, 0xBB8000
	0x035440FC LDR X0, [X0 + 0x4C8]
	0x03544100 BL 0x1C16CF4
	0x03544104 ADRP X0, 0xBB8000
	0x03544108 LDR X0, [X0 + 0x4D0]
	0x0354410C BL 0x1C16CF4
	0x03544110 ADRP X0, 0xBB8000
	0x03544114 LDR X0, [X0 + 0x4D8]
	0x03544118 BL 0x1C16CF4
	0x0354411C ADRP X0, 0xBF0000
	0x03544120 LDR X0, [X0 + 0xEE8]
	0x03544124 BL 0x1C16CF4
	0x03544128 ADRP X0, 0xBF0000
	0x0354412C LDR X0, [X0 + 0xEF0]
	0x03544130 BL 0x1C16CF4
	0x03544134 ADRP X0, 0xBF0000
	0x03544138 LDR X0, [X0 + 0xEF8]
	0x0354413C BL 0x1C16CF4
	0x03544140 ADRP X0, 0xBF0000
	0x03544144 LDR X0, [X0 + 0xF00]
	0x03544148 BL 0x1C16CF4
	0x0354414C ADRP X0, 0xBF0000
	0x03544150 LDR X0, [X0 + 0xF08]
	0x03544154 BL 0x1C16CF4
	0x03544158 ADRP X0, 0xBF0000
	0x0354415C LDR X0, [X0 + 0xF10]
	0x03544160 BL 0x1C16CF4
	0x03544164 ADRP X0, 0xBF0000
	0x03544168 LDR X0, [X0 + 0xF18]
	0x0354416C BL 0x1C16CF4
	0x03544170 ADRP X0, 0xBF0000
	0x03544174 LDR X0, [X0 + 0xF20]
	0x03544178 BL 0x1C16CF4
	0x0354417C ADRP X0, 0xBF0000
	0x03544180 LDR X0, [X0 + 0xF28]
	0x03544184 BL 0x1C16CF4
	0x03544188 MOVZ W8, 0x1
	0x0354418C STRB W8, [X20 + 0xC1A]
	0x03544190 LDR X0, [X19 + 0x170]
	0x03544194 CBZ X0, 0x3544380
	0x03544198 ADRP X22, 0xBF0000
	0x0354419C ADRP X23, 0xBB8000
	0x035441A0 ADRP X27, 0xBF0000
	0x035441A4 ADRP X28, 0xBF0000
	0x035441A8 ADRP X29, 0xBF0000
	0x035441AC ADRP X24, 0xBF0000
	0x035441B0 ADRP X25, 0xBF0000
	0x035441B4 LDR X22, [X22 + 0xF20]
	0x035441B8 LDR X23, [X23 + 0x4D0]
	0x035441BC LDR X27, [X27 + 0xF10]
	0x035441C0 LDR X28, [X28 + 0xF08]
	0x035441C4 LDR X29, [X29 + 0xF18]
	0x035441C8 LDR X24, [X24 + 0xEF8]
	0x035441CC LDR X25, [X25 + 0xEE8]
	0x035441D0 LDR W8, [X0 + 0x20]
	0x035441D4 CMP W8, 0x0
	0x035441D8 B.LE 0x3544384
	0x035441DC LDR X1, [X22]
	0x035441E0 BL 0x24F18D4
	0x035441E4 CBZ X0, 0x3544380
	0x035441E8 MOV X20, X0
	0x035441EC LDR X0, [X19 + 0x178]
	0x035441F0 CBZ X0, 0x3544380
	0x035441F4 LDR X1, [X20 + 0x10]
	0x035441F8 LDR X2, [X23]
	0x035441FC LDRB W21, [X20 + 0x18]
	0x03544200 BL 0x2DBE4B0
	0x03544204 CBZ W21, 0x354422C
	0x03544208 TBNZ X0, 0x0, 0x3544378
	0x0354420C LDR X0, [X19 + 0x178]
	0x03544210 CBZ X0, 0x3544380
	0x03544214 ADRP X8, 0xBB8000
	0x03544218 LDR X1, [X20 + 0x10]
	0x0354421C LDR X8, [X8 + 0x4C8]
	0x03544220 LDR X2, [X8]
	0x03544224 BL 0x2DBEF30
	0x03544228 B 0x354424C
	0x0354422C TBZ X0, 0x0, 0x3544378
	0x03544230 LDR X0, [X19 + 0x178]
	0x03544234 CBZ X0, 0x3544380
	0x03544238 ADRP X8, 0xBB8000
	0x0354423C LDR X1, [X20 + 0x10]
	0x03544240 LDR X8, [X8 + 0x4D8]
	0x03544244 LDR X2, [X8]
	0x03544248 BL 0x2DBE67C
	0x0354424C ADRP X8, 0xBF0000
	0x03544250 LDR X2, [X19 + 0xC0]
	0x03544254 LDR X8, [X8 + 0xF00]
	0x03544258 MOV X0, X19
	0x0354425C MOV X1, X20
	0x03544260 LDR X3, [X8]
	0x03544264 BL 0x2213588
	0x03544268 ADRP X8, 0xBF0000
	0x0354426C LDR X2, [X19 + 0xB0]
	0x03544270 LDR X8, [X8 + 0xEF0]
	0x03544274 MOV X0, X19
	0x03544278 MOV X1, X20
	0x0354427C LDR X3, [X8]
	0x03544280 BL 0x2213588
	0x03544284 LDR X2, [X19 + 0xB8]
	0x03544288 LDR X3, [X27]
	0x0354428C MOV X0, X19
	0x03544290 MOV X1, X20
	0x03544294 BL 0x2213588
	0x03544298 LDR X2, [X19 + 0xC8]
	0x0354429C LDR X3, [X28]
	0x035442A0 MOV X0, X19
	0x035442A4 MOV X1, X20
	0x035442A8 BL 0x2213588
	0x035442AC LDR X2, [X19 + 0xD0]
	0x035442B0 LDR X3, [X29]
	0x035442B4 MOV X0, X19
	0x035442B8 MOV X1, X20
	0x035442BC BL 0x2213588
	0x035442C0 LDR X2, [X19 + 0xD8]
	0x035442C4 LDR X3, [X24]
	0x035442C8 MOV X0, X19
	0x035442CC MOV X1, X20
	0x035442D0 BL 0x2213588
	0x035442D4 LDR X0, [X20 + 0x10]
	0x035442D8 LDR X1, [X25]
	0x035442DC BL 0x1C16E00
	0x035442E0 CBZ X0, 0x3544378
	0x035442E4 ADRP X8, 0xBB7000
	0x035442E8 LDRB W26, [X20 + 0x18]
	0x035442EC LDR X8, [X8 + 0xCB0]
	0x035442F0 MOV X21, X0
	0x035442F4 LDR X0, [X8]
	0x035442F8 BL 0x1C16F10
	0x035442FC LDR X8, [X21]
	0x03544300 LDR X1, [X25]
	0x03544304 MOV X20, X0
	0x03544308 LDRH W9, [X8 + 0x12E]
	0x0354430C CBZ X9, 0x3544330
	0x03544310 LDR X10, [X8 + 0xB0]
	0x03544314 ADD X10, X10, 0x8
	0x03544318 LDUR X11, [X10 - 0x8]
	0x0354431C CMP X11, X1
	0x03544320 B.EQ 0x3544340
	0x03544324 SUBS X9, X9, 0x1
	0x03544328 ADD X10, X10, 0x10
	0x0354432C B.NE 0x3544318
	0x03544330 MOV X0, X21
	0x03544334 MOV W2, W31
	0x03544338 BL 0x1C5C788
	0x0354433C B 0x354434C
	0x03544340 LDRSW X9, [X10]
	0x03544344 ADD X8, X8, X9, 0x4, LSL
	0x03544348 ADD X0, X8, 0x138
	0x0354434C LDR X2, [X0 + 0x8]
	0x03544350 MOV X0, X20
	0x03544354 MOV X1, X21
	0x03544358 MOV X3, X31
	0x0354435C BL 0x2A6B948
	0x03544360 MOV X0, X19
	0x03544364 MOV X1, X20
	0x03544368 CBZ W26, 0x3544374
	0x0354436C BL 0x3538BE0
	0x03544370 B 0x3544378
	0x03544374 BL 0x3538C90
	0x03544378 LDR X0, [X19 + 0x170]
	0x0354437C CBNZ X0, 0x35441D0
	0x03544380 BL 0x1C16F20
	0x03544384 LDP X20, X19, [X31 + 0x50]
	0x03544388 LDP X22, X21, [X31 + 0x40]
	0x0354438C LDP X24, X23, [X31 + 0x30]
	0x03544390 LDP X26, X25, [X31 + 0x20]
	0x03544394 LDP X28, X27, [X31 + 0x10]
	0x03544398 LDP X29, X30, [X31], #0x60
	0x0354439C RET
	0x035443A0 STR X30, [X31 - 0x30]!
	0x035443A4 STP X22, X21, [X31 + 0x10]
	0x035443A8 STP X20, X19, [X31 + 0x20]
	0x035443AC ADRP X21, 0xE9B000
	0x035443B0 ADRP X22, 0xBB8000
	0x035443B4 LDRB W8, [X21 + 0xC13]
	0x035443B8 LDR X22, [X22 + 0x528]
	0x035443BC MOV X20, X1
	0x035443C0 MOV X19, X0
	0x035443C4 TBNZ X8, 0x0, 0x35443DC
	0x035443C8 ADRP X0, 0xBB8000
	0x035443CC LDR X0, [X0 + 0x528]
	0x035443D0 BL 0x1C16CF4
	0x035443D4 MOVZ W8, 0x1
	0x035443D8 STRB W8, [X21 + 0xC13]
	0x035443DC LDR X0, [X22]
	0x035443E0 MOV X1, X20
	0x035443E4 MOV X2, X31
	0x035443E8 BL 0x321EFD0
	0x035443EC LDR X8, [X19]
	0x035443F0 MOV X2, X0
	0x035443F4 MOV X0, X19
	0x035443F8 LDP X20, X19, [X31 + 0x20]
	0x035443FC LDR X4, [X8 + 0x218]
	0x03544400 LDR X3, [X8 + 0x220]
	0x03544404 LDP X22, X21, [X31 + 0x10]
	0x03544408 MOVZ W1, 0x5
	0x0354440C LDR X30, [X31], #0x30
	0x03544410 BR X4
	0x03544414 SUB X31, X31, 0x40
	0x03544418 STP X30, X23, [X31 + 0x10]
	0x0354441C STP X22, X21, [X31 + 0x20]
	0x03544420 STP X20, X19, [X31 + 0x30]
	0x03544424 ADRP X21, 0xE9B000
	0x03544428 LDRB W8, [X21 + 0xC14]
	0x0354442C MOV X20, X1
	0x03544430 MOV X19, X0
	0x03544434 TBNZ X8, 0x0, 0x3544464
	0x03544438 ADRP X0, 0xBF0000
	0x0354443C LDR X0, [X0 + 0xBA8]
	0x03544440 BL 0x1C16CF4
	0x03544444 ADRP X0, 0xBB3000
	0x03544448 LDR X0, [X0 + 0x628]
	0x0354444C BL 0x1C16CF4
	0x03544450 ADRP X0, 0xBB8000
	0x03544454 LDR X0, [X0 + 0x530]
	0x03544458 BL 0x1C16CF4
	0x0354445C MOVZ W8, 0x1
	0x03544460 STRB W8, [X21 + 0xC14]
	0x03544464 CBZ X20, 0x3544510
	0x03544468 ADRP X8, 0xBB3000
	0x0354446C LDR X8, [X8 + 0x628]
	0x03544470 LDRH W9, [X20 + 0x10]
	0x03544474 ADRP X21, 0xBF0000
	0x03544478 ADRP X23, 0xBB8000
	0x0354447C LDR X0, [X8]
	0x03544480 LDR X21, [X21 + 0xBA8]
	0x03544484 LDR X23, [X23 + 0x530]
	0x03544488 ADD X1, X31, 0xC
	0x0354448C STRH W9, [X31 + 0xC]
	0x03544490 BL 0x1C16E04
	0x03544494 LDR X8, [X21]
	0x03544498 LDP X21, X22, [X20 + 0x18]
	0x0354449C MOV X20, X0
	0x035444A0 LDR W9, [X8 + 0xE0]
	0x035444A4 CBNZ W9, 0x35444B0
	0x035444A8 MOV X0, X8
	0x035444AC BL 0x1C16DFC
	0x035444B0 MOV X0, X22
	0x035444B4 BL 0x3537368
	0x035444B8 LDR X8, [X23]
	0x035444BC MOV X3, X0
	0x035444C0 MOV X1, X20
	0x035444C4 MOV X2, X21
	0x035444C8 MOV X0, X8
	0x035444CC MOV X4, X31
	0x035444D0 BL 0x3227C18
	0x035444D4 LDR X8, [X19]
	0x035444D8 MOV X2, X0
	0x035444DC MOVZ W1, 0x1
	0x035444E0 MOV X0, X19
	0x035444E4 LDR X9, [X8 + 0x218]
	0x035444E8 LDR X3, [X8 + 0x220]
	0x035444EC BLR X9
	0x035444F0 MOVZ W1, 0x13
	0x035444F4 MOV X0, X19
	0x035444F8 BL 0x35353A0
	0x035444FC LDP X20, X19, [X31 + 0x30]
	0x03544500 LDP X22, X21, [X31 + 0x20]
	0x03544504 LDP X30, X23, [X31 + 0x10]
	0x03544508 ADD X31, X31, 0x40
	0x0354450C RET
	0x03544510 BL 0x1C16F20
	0x03544514 STR X30, [X31 - 0x20]!
	0x03544518 STP X20, X19, [X31 + 0x10]
	0x0354451C CBZ X1, 0x3544554
	0x03544520 MOV X19, X0
	0x03544524 MOV X0, X1
	0x03544528 MOV X20, X1
	0x0354452C BL 0x3544558
	0x03544530 STR X0, [X19 + 0x160]
	0x03544534 MOV X0, X20
	0x03544538 BL 0x35446B8
	0x0354453C CBZ X0, 0x3544554
	0x03544540 LDR X1, [X0 + 0x10]
	0x03544544 MOV X0, X19
	0x03544548 LDP X20, X19, [X31 + 0x10]
	0x0354454C LDR X30, [X31], #0x20
	0x03544550 B 0x3539F60
	0x03544554 BL 0x1C16F20
	0x03544558 SUB X31, X31, 0x30
	0x0354455C STP X30, X21, [X31 + 0x10]
	0x03544560 STP X20, X19, [X31 + 0x20]
	0x03544564 ADRP X20, 0xE9B000
	0x03544568 LDRB W8, [X20 + 0xC72]
	0x0354456C MOV X19, X0
	0x03544570 TBNZ X8, 0x0, 0x35445A0
	0x03544574 ADRP X0, 0xBF0000
	0x03544578 LDR X0, [X0 + 0xE38]
	0x0354457C BL 0x1C16CF4
	0x03544580 ADRP X0, 0xBAF000
	0x03544584 LDR X0, [X0 + 0xAC8]
	0x03544588 BL 0x1C16CF4
	0x0354458C ADRP X0, 0xBB8000
	0x03544590 LDR X0, [X0 + 0x848]
	0x03544594 BL 0x1C16CF4
	0x03544598 MOVZ W8, 0x1
	0x0354459C STRB W8, [X20 + 0xC72]
	0x035445A0 MOV X0, X19
	0x035445A4 BL 0x35446B8
	0x035445A8 CBZ X0, 0x354469C
	0x035445AC MOV X0, X19
	0x035445B0 BL 0x35446B8
	0x035445B4 CBZ X0, 0x35446B0
	0x035445B8 ADRP X21, 0xBF0000
	0x035445BC LDR X21, [X21 + 0xE38]
	0x035445C0 MOV X8, X0
	0x035445C4 LDR W20, [X8 + 0x28]
	0x035445C8 LDR X0, [X21]
	0x035445CC LDR W9, [X0 + 0xE0]
	0x035445D0 CBNZ W9, 0x35445DC
	0x035445D4 BL 0x1C16DFC
	0x035445D8 LDR X0, [X21]
	0x035445DC LDR X8, [X0 + 0xB8]
	0x035445E0 LDR W8, [X8 + 0x4]
	0x035445E4 CMP W20, W8
	0x035445E8 B.GE 0x354469C
	0x035445EC ADRP X8, 0xBAF000
	0x035445F0 LDR X8, [X8 + 0xAC8]
	0x035445F4 MOVZ W1, 0x5
	0x035445F8 LDR X0, [X8]
	0x035445FC BL 0x1C16D6C
	0x03544600 MOV X20, X0
	0x03544604 MOV X0, X19
	0x03544608 BL 0x35446B8
	0x0354460C CBZ X0, 0x35446B0
	0x03544610 CBZ X20, 0x35446B0
	0x03544614 LDR W8, [X20 + 0x18]
	0x03544618 CBZ W8, 0x35446B4
	0x0354461C LDR X9, [X0 + 0x10]
	0x03544620 CMP W8, 0x1
	0x03544624 STR X9, [X20 + 0x20]
	0x03544628 B.EQ 0x35446B4
	0x0354462C ADRP X21, 0xBB8000
	0x03544630 LDR X21, [X21 + 0x848]
	0x03544634 MOV X0, X19
	0x03544638 LDR X8, [X21]
	0x0354463C STR X8, [X20 + 0x28]
	0x03544640 BL 0x35446B8
	0x03544644 CBZ X0, 0x35446B0
	0x03544648 LDR W8, [X0 + 0x28]
	0x0354464C ADD X0, X31, 0xC
	0x03544650 MOV X1, X31
	0x03544654 STR W8, [X31 + 0xC]
	0x03544658 BL 0x337B6E0
	0x0354465C LDR W8, [X20 + 0x18]
	0x03544660 CMP W8, 0x2
	0x03544664 B.LS 0x35446B4
	0x03544668 CMP W8, 0x3
	0x0354466C STR X0, [X20 + 0x30]
	0x03544670 B.EQ 0x35446B4
	0x03544674 LDR X9, [X21]
	0x03544678 CMP W8, 0x4
	0x0354467C STR X9, [X20 + 0x38]
	0x03544680 B.LS 0x35446B4
	0x03544684 LDR X8, [X19 + 0x18]
	0x03544688 MOV X0, X20
	0x0354468C MOV X1, X31
	0x03544690 STR X8, [X20 + 0x40]
	0x03544694 BL 0x32278CC
	0x03544698 B 0x35446A0
	0x0354469C LDR X0, [X19 + 0x18]
	0x035446A0 LDP X20, X19, [X31 + 0x20]
	0x035446A4 LDP X30, X21, [X31 + 0x10]
	0x035446A8 ADD X31, X31, 0x30
	0x035446AC RET
	0x035446B0 BL 0x1C16F20
	0x035446B4 BL 0x1C16F28
	0x035446B8 SUB X31, X31, 0x70
	0x035446BC STP X30, X23, [X31 + 0x40]
	0x035446C0 STP X22, X21, [X31 + 0x50]
	0x035446C4 STP X20, X19, [X31 + 0x60]
	0x035446C8 ADRP X20, 0xE9B000
	0x035446CC LDRB W8, [X20 + 0xC71]
	0x035446D0 MOV X19, X0
	0x035446D4 TBNZ X8, 0x0, 0x354474C
	0x035446D8 ADRP X0, 0xBF0000
	0x035446DC LDR X0, [X0 + 0xF30]
	0x035446E0 BL 0x1C16CF4
	0x035446E4 ADRP X0, 0xBF0000
	0x035446E8 LDR X0, [X0 + 0xF38]
	0x035446EC BL 0x1C16CF4
	0x035446F0 ADRP X0, 0xBF0000
	0x035446F4 LDR X0, [X0 + 0xF40]
	0x035446F8 BL 0x1C16CF4
	0x035446FC ADRP X0, 0xBF0000
	0x03544700 LDR X0, [X0 + 0xF48]
	0x03544704 BL 0x1C16CF4
	0x03544708 ADRP X0, 0xBF0000
	0x0354470C LDR X0, [X0 + 0xF50]
	0x03544710 BL 0x1C16CF4
	0x03544714 ADRP X0, 0xBF0000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0xE9D000
	015 Move W8, [X19+3090]
	016 Move X20, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {90}
	022 Move X0, 0xBF2000
	023 Move X0, [X0+3040]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB1000
	026 Move X0, [X0+2904]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB9000
	029 Move X0, [X0+3224]
	030 Call 0x1C17CF4
	031 Move X0, 0xBB1000
	032 Move X0, [X0+1560]
	033 Call 0x1C17CF4
	034 Move X0, 0xBBA000
	035 Move X0, [X0+568]
	036 Call 0x1C17CF4
	037 Move X0, 0xBBA000
	038 Move X0, [X0+576]
	039 Call 0x1C17CF4
	040 Move X0, 0xBBA000
	041 Move X0, [X0+584]
	042 Call 0x1C17CF4
	043 Move X0, 0xBBA000
	044 Move X0, [X0+592]
	045 Call 0x1C17CF4
	046 Move X0, 0xBF2000
	047 Move X0, [X0+3744]
	048 Call 0x1C17CF4
	049 Move X0, 0xBB9000
	050 Move X0, [X0+3488]
	051 Call 0x1C17CF4
	052 Move X0, 0xBB2000
	053 Move X0, [X0+3672]
	054 Call 0x1C17CF4
	055 Move X0, 0xBB1000
	056 Move X0, [X0+1880]
	057 Call 0x1C17CF4
	058 Move X0, 0xBBA000
	059 Move X0, [X0+600]
	060 Call 0x1C17CF4
	061 Move X0, 0xBF2000
	062 Move X0, [X0+3752]
	063 Call 0x1C17CF4
	064 Move X0, 0xBF2000
	065 Move X0, [X0+3400]
	066 Call 0x1C17CF4
	067 Move X0, 0xBF2000
	068 Move X0, [X0+3760]
	069 Call 0x1C17CF4
	070 Move X0, 0xBF2000
	071 Move X0, [X0+3416]
	072 Call 0x1C17CF4
	073 Move X0, 0xBF2000
	074 Move X0, [X0+3432]
	075 Call 0x1C17CF4
	076 Move X0, 0xBF2000
	077 Move X0, [X0+3464]
	078 Call 0x1C17CF4
	079 Move X0, 0xBB1000
	080 Move X0, [X0+2760]
	081 Call 0x1C17CF4
	082 Move X0, 0xBB3000
	083 Move X0, [X0+632]
	084 Call 0x1C17CF4
	085 Move X0, 0xBF2000
	086 Move X0, [X0+3768]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X19+3090], W8
	090 Move [X31+48], X31
	091 Move [X31+56], X31
	092 Move [X31+64], X31
	093 Compare X20, 0
	094 JumpIfEqual {775}
	095 Move X0, X20
	096 Move X1, X31
	097 Call EventData.get_Sender, X0
	098 Move X8, [X24+272]
	099 Move W22, W0
	100 Compare X8, 0
	101 JumpIfEqual {110}
	102 Move X9, [X8]
	103 Move X0, X8
	104 Move W1, W22
	105 Move W2, W31
	106 Move X10, [X9+472]
	107 Move X3, [X9+480]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X21, X0
	110 Move X21, X31
	111 Move W9, [X20+16]
	112 Subtract W8, W9, 223
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X9, -43696128
	115 Add X9, X9, 3472
	116 NotImplemented "Instruction ADR not yet implemented."
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Add X10, X10, X11
	119 CallNoReturn X10
	120 Move X8, 0xBF2000
	121 Move X8, [X8+3432]
	122 Move X0, [X8]
	123 Call 0x1C17F10
	124 Move X8, 0xBF2000
	125 Move X8, [X8+3416]
	126 Move X21, X0
	127 Move X1, [X8]
	128 Call List`1<Object>..ctor, X0
	129 Move W1, 222
	130 Move X0, X20
	131 Move X2, X31
	132 Call EventData.get_Item, X0, X1
	133 Compare X0, 0
	134 JumpIfEqual {775}
	135 Move X26, 0xBB9000
	136 Move X26, [X26+3488]
	137 Move X8, [X0]
	138 Move X22, X0
	139 Move X1, [X26]
	140 Move W10, [X8+304]
	141 Move W9, [X1+304]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X8, [X8+200]
	144 Add X8, X8, X9
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X31+16], X24
	148 Move X8, 0xBBA000
	149 Move X8, [X8+568]
	150 Move X0, X22
	151 Move X1, [X8]
	152 Call Dictionary`2<Object, Object>.get_Keys, X0
	153 Compare X0, 0
	154 JumpIfEqual {775}
	155 Move X8, 0xBBA000
	156 Move X8, [X8+600]
	157 Move X1, [X8]
	158 Add X8, X31, 24
	159 Call KeyCollection<Object, Object>.GetEnumerator, X0
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 Move X8, [X31+40]
	162 Move X27, 0xBBA000
	163 Move X28, 0xBB3000
	164 Move X29, 0xBF2000
	165 Move X27, [X27+584]
	166 Move X28, [X28+632]
	167 Move X29, [X29+3464]
	168 Move [X31+3], V0
	169 Move [X31+64], X8
	170 Move X19, 0xBF2000
	171 Move X19, [X19+3400]
	172 Move X1, [X27]
	173 Add X0, X31, 48
	174 Call Enumerator<Object, Object>.MoveNext, X0
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {252}
	179 Move X24, [X31+64]
	180 Compare X24, 0
	181 JumpIfEqual {185}
	182 Move X1, [X28]
	183 Move X8, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, X22
	186 Move X1, X24
	187 Move X2, X31
	188 Call Hashtable.get_Item, X0, X1
	189 Move X25, X0
	190 Move X0, [X29]
	191 Call 0x1C17F10
	192 Move X23, X0
	193 Compare X25, 0
	194 JumpIfEqual {204}
	195 Move X8, [X25]
	196 Move X1, [X26]
	197 Move W10, [X8+304]
	198 Move W9, [X1+304]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X8, [X8+200]
	201 Add X8, X8, X9
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X0, X23
	205 Move X1, X24
	206 Move X2, X25
	207 Move X3, X31
	208 Call RoomInfo..ctor, X0, X1, X2
	209 Compare X21, 0
	210 JumpIfEqual {779}
	211 Move W10, [X21+28]
	212 Move X8, [X21+16]
	213 Move X9, [X19]
	214 Add W10, W10, 1
	215 Move [X21+28], W10
	216 Compare X8, 0
	217 JumpIfEqual {780}
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Move W11, [X8+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add W9, W10, 1
	222 Add X8, X8, X10
	223 Move [X21+24], W9
	224 Move [X8+32], X23
	225 Move X8, [X9+32]
	226 Move X8, [X8+192]
	227 Move X2, [X8+112]
	228 Move X0, X21
	229 Move X1, X23
	230 Call List`1<Object>.AddWithResize, X0, X1
	231 Subtract W8, W9, 251
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X9, -43696128
	234 Add X9, X9, 3488
	235 NotImplemented "Instruction ADR not yet implemented."
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Add X10, X10, X11
	238 CallNoReturn X10
	239 Move X8, 0xBF2000
	240 Move X21, [X24+216]
	241 Move X8, [X8+3744]
	242 Move X0, [X8]
	243 Call 0x1C17F10
	244 Move X1, X20
	245 Move X22, X0
	246 Call ErrorInfo..ctor, X0, X1
	247 Compare X21, 0
	248 JumpIfEqual {775}
	249 Move X0, X21
	250 Move X1, X22
	251 Call ErrorInfoCallbacksContainer.OnErrorInfo, X0, X1
	252 Move X8, 0xBBA000
	253 Move X8, [X8+576]
	254 Add X0, X31, 48
	255 Move X1, [X8]
	256 Call Enumerator<Object, Object>.Dispose, X0
	257 Move X24, [X31+16]
	258 Move X0, [X24+200]
	259 Compare X0, 0
	260 JumpIfEqual {775}
	261 Move X1, X21
	262 Call LobbyCallbacksContainer.OnRoomListUpdate, X0, X1
	263 Move W1, 229
	264 Move X0, X20
	265 Move X2, X31
	266 Call EventData.get_Item, X0, X1
	267 Compare X0, 0
	268 JumpIfEqual {775}
	269 Move X19, 0xBB1000
	270 Move X19, [X19+1880]
	271 Move X8, [X0]
	272 Move X1, [X19]
	273 Move X8, [X8+64]
	274 Move X9, [X1+64]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Call 0x1C17E08
	277 Move W8, [X0]
	278 Move W1, 228
	279 Move X0, X20
	280 Move X2, X31
	281 Move [X24+284], W8
	282 Call EventData.get_Item, X0, X1
	283 Compare X0, 0
	284 JumpIfEqual {775}
	285 Move X8, [X0]
	286 Move X1, [X19]
	287 Move X8, [X8+64]
	288 Move X9, [X1+64]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Call 0x1C17E08
	291 Move W8, [X0]
	292 Move W1, 227
	293 Move X0, X20
	294 Move X2, X31
	295 Move [X24+288], W8
	296 Call EventData.get_Item, X0, X1
	297 Compare X0, 0
	298 JumpIfEqual {775}
	299 Move X8, [X0]
	300 Move X1, [X19]
	301 Move X8, [X8+64]
	302 Move X9, [X1+64]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Call 0x1C17E08
	305 Move W8, [X0]
	306 Move [X24+280], W8
	307 Move W1, 213
	308 Move X0, X20
	309 Move X2, X31
	310 Call EventData.get_Item, X0, X1
	311 Move X8, 0xBB1000
	312 Move X8, [X8+2760]
	313 Move X1, [X8]
	314 Call 0x1C17E00
	315 Move X21, X0
	316 Move W1, 229
	317 Move X0, X20
	318 Move X2, X31
	319 Call EventData.get_Item, X0, X1
	320 Move X19, 0xBB2000
	321 Move X19, [X19+3672]
	322 Move X1, [X19]
	323 Call 0x1C17E00
	324 Move X22, X0
	325 Move W1, 228
	326 Move X0, X20
	327 Move X2, X31
	328 Call EventData.get_Item, X0, X1
	329 Move X1, [X19]
	330 Call 0x1C17E00
	331 Move X23, X0
	332 Move W1, 212
	333 Move X0, X20
	334 Move X2, X31
	335 Call EventData.get_Item, X0, X1
	336 Compare X0, 0
	337 JumpIfEqual {350}
	338 Move X8, 0xBB8000
	339 Move X8, [X8+3224]
	340 Move X9, [X0]
	341 Move X26, X0
	342 Move X8, [X8]
	343 Move W11, [X9+304]
	344 Move W10, [X8+304]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X9, [X9+200]
	347 Add X9, X9, X10
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move W1, 212
	351 Move X0, X20
	352 Move X2, X31
	353 Call EventData.get_Item, X0, X1
	354 Move X8, 0xBB0000
	355 Move X8, [X8+1560]
	356 Move X1, [X8]
	357 Call 0x1C17E00
	358 Move X25, X0
	359 Move X26, X31
	360 Move W9, 1
	361 Move X8, [X24+256]
	362 Compare X8, 0
	363 JumpIfEqual {775}
	364 Move [X31+12], W9
	365 Move W2, [X8+24]
	366 Move W9, [X8+28]
	367 Move X19, X20
	368 Add W9, W9, 1
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move [X8+24], W31
	371 Move [X8+28], W9
	372 Move X0, [X8+16]
	373 Move W1, W31
	374 Move X3, X31
	375 Call Array.Clear, X0, X1, X2
	376 Move [X31], X26
	377 Move [X31+16], X19
	378 Compare X21, 0
	379 JumpIfEqual {775}
	380 Move W8, [X21+24]
	381 Move X20, X24
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move X19, X31
	384 Add X28, X23, 32
	385 Add X29, X22, 32
	386 Add X27, X25, 32
	387 Add X24, X21, 32
	388 Move X8, 0xBF1000
	389 Move X8, [X8+3768]
	390 Move X0, [X8]
	391 Call 0x1C17F10
	392 Move X26, X0
	393 Call TypedLobbyInfo..ctor, X0
	394 Move W8, [X21+24]
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Compare X26, 0
	397 JumpIfEqual {775}
	398 Move X8, [X24]
	399 Move [X26+16], X8
	400 Compare X25, 0
	401 JumpIfEqual {775}
	402 Move W8, [X25+24]
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Move W8, [X27]
	405 Move [X26+24], W8
	406 Compare X22, 0
	407 JumpIfEqual {775}
	408 Move W8, [X22+24]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move W8, [X29]
	411 Move [X26+28], W8
	412 Compare X23, 0
	413 JumpIfEqual {775}
	414 Move W8, [X23+24]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move W8, [X28]
	417 Move [X26+32], W8
	418 Move X0, [X20+256]
	419 Compare X0, 0
	420 JumpIfEqual {775}
	421 Move X9, 0xBF1000
	422 Move W10, [X0+28]
	423 Move X8, [X0+16]
	424 Move X9, [X9+3752]
	425 Add W10, W10, 1
	426 Move X9, [X9]
	427 Move [X0+28], W10
	428 Compare X8, 0
	429 JumpIfEqual {775}
	430 NotImplemented "Instruction LDRSW not yet implemented."
	431 Move W11, [X8+24]
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Add W9, W10, 1
	434 Add X8, X8, X10
	435 Move [X0+24], W9
	436 Move [X8+32], X26
	437 Move X8, [X9+32]
	438 Move X1, X26
	439 Move X8, [X8+192]
	440 Move X2, [X8+112]
	441 Call List`1<Object>.AddWithResize, X0, X1
	442 NotImplemented "Instruction LDRSW not yet implemented."
	443 Add X19, X19, 1
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Move W8, [X31+12]
	446 Move TEMP, X8
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfEqual {453}
	450 Move X0, [X31]
	451 Move X1, X31
	452 Call ByteArraySlice.Release, X0
	453 Move X24, X20
	454 Move X0, [X20+200]
	455 Move X20, [X31+16]
	456 Compare X0, 0
	457 JumpIfEqual {775}
	458 Move X1, [X24+256]
	459 Call LobbyCallbacksContainer.OnLobbyStatisticsUpdate, X0, X1
	460 Move X21, [X24+48]
	461 Compare X21, 0
	462 JumpIfNotEqual {473}
	463 Move X8, 0xBF1000
	464 Move X8, [X8+3040]
	465 Move X0, [X8]
	466 Call 0x1C17F10
	467 Move W8, 255
	468 Move X1, X31
	469 Move X21, X0
	470 Move [X0+16], W8
	471 Call Object..ctor, X0
	472 Move [X24+48], X21
	473 Move W1, 221
	474 Move X0, X20
	475 Move X2, X31
	476 Call EventData.get_Item, X0, X1
	477 Move [X21+40], X0
	478 Move X8, [X24+48]
	479 Compare X8, 0
	480 JumpIfEqual {775}
	481 Move X8, [X8+40]
	482 Move [X24+72], X8
	483 Compare X21, 0
	484 JumpIfEqual {632}
	485 Move X0, [X20+24]
	486 Compare X0, 0
	487 JumpIfEqual {775}
	488 Move W1, 233
	489 Move X2, X31
	490 Call ParameterDictionary.ContainsKey, X0, X1
	491 Move TEMP, X0
	492 And TEMP, TEMP, 1
	493 Compare TEMP, 1
	494 JumpIfNotEqual {622}
	495 Move X0, [X20+24]
	496 Compare X0, 0
	497 JumpIfEqual {775}
	498 Move W1, 233
	499 Move X2, X31
	500 Call ParameterDictionary.get_Item, X0, X1
	501 Compare X0, 0
	502 JumpIfEqual {775}
	503 Move X8, 0xBB0000
	504 Move X8, [X8+2904]
	505 Move X9, [X0]
	506 Move X1, [X8]
	507 Move X8, [X9+64]
	508 Move X9, [X1+64]
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Call 0x1C17E08
	511 Move W8, [X0]
	512 Move [X21+29], W31
	513 Move [X21+48], W8
	514 Compare W8, 0
	515 JumpIfNotEqual {632}
	516 Move X0, [X20+24]
	517 Compare X0, 0
	518 JumpIfEqual {775}
	519 Move W1, 253
	520 Move X2, X31
	521 Call ParameterDictionary.ContainsKey, X0, X1
	522 Move TEMP, X0
	523 And TEMP, TEMP, 1
	524 Compare TEMP, 1
	525 JumpIfNotEqual {575}
	526 Move W1, 253
	527 Move X0, X20
	528 Move X2, X31
	529 Call EventData.get_Item, X0, X1
	530 Compare X0, 0
	531 JumpIfEqual {775}
	532 Move X8, 0xBB0000
	533 Move X8, [X8+1880]
	534 Move X9, [X0]
	535 Move X1, [X8]
	536 Move X8, [X9+64]
	537 Move X9, [X1+64]
	538 NotImplemented "Instruction CMP not yet implemented."
	539 Call 0x1C17E08
	540 Move W21, [X0]
	541 Move W1, 249
	542 Move X0, X20
	543 Move X2, X31
	544 Call EventData.get_Item, X0, X1
	545 Move X4, X0
	546 Compare X0, 0
	547 JumpIfEqual {559}
	548 Move X9, 0xBB8000
	549 Move X9, [X9+3488]
	550 Move X8, [X4]
	551 Move X1, [X9]
	552 Move W10, [X8+304]
	553 Move W9, [X1+304]
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move X8, [X8+200]
	556 Add X8, X8, X9
	557 NotImplemented "Instruction LDUR not yet implemented."
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Compare X21, 0
	560 JumpIfEqual {599}
	561 Move X8, [X21]
	562 Move X0, X21
	563 Move X1, X4
	564 Move X9, [X8+376]
	565 Move X2, [X8+384]
	566 NotImplemented "Instruction BLR not yet implemented."
	567 Move [X21+48], W31
	568 Move X8, [X24+264]
	569 Compare X8, 0
	570 JumpIfEqual {775}
	571 Move W8, [X8+24]
	572 NotImplemented "Instruction CMP not yet implemented."
	573 NotImplemented "Instruction CSET not yet implemented."
	574 Move [X21+29], W8
	575 Move W21, W31
	576 Move W1, 251
	577 Move X0, X20
	578 Move X2, X31
	579 Call EventData.get_Item, X0, X1
	580 Compare X0, 0
	581 JumpIfEqual {593}
	582 Move X9, 0xBB8000
	583 Move X9, [X9+3488]
	584 Move X8, [X0]
	585 Move X1, [X9]
	586 Move W10, [X8+304]
	587 Move W9, [X1+304]
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move X8, [X8+200]
	590 Add X8, X8, X9
	591 NotImplemented "Instruction LDUR not yet implemented."
	592 NotImplemented "Instruction CMP not yet implemented."
	593 NotImplemented "Instruction CMP not yet implemented."
	594 NotImplemented "Instruction CSEL not yet implemented."
	595 NotImplemented "Instruction CSEL not yet implemented."
	596 Move X0, X24
	597 Move W3, W21
	598 Call LoadBalancingClient.ReadoutProperties, X0, X1, X2, X3
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Move X8, 0xBB2000
	601 Move X8, [X8+632]
	602 Move X9, [X24]
	603 Move X0, X24
	604 Move W2, W22
	605 Move X8, [X8]
	606 Move W3, W31
	607 Move X8, [X8+184]
	608 Move X1, [X8]
	609 Move X8, [X9+504]
	610 Move X5, [X9+512]
	611 NotImplemented "Instruction BLR not yet implemented."
	612 Move X8, [X24+272]
	613 Compare X8, 0
	614 JumpIfEqual {775}
	615 Move X9, [X8]
	616 Move X21, X0
	617 Move X0, X8
	618 Move X1, X21
	619 Move X10, [X9+456]
	620 Move X2, [X9+464]
	621 NotImplemented "Instruction BLR not yet implemented."
	622 Move [X21+48], W31
	623 Move [X21+29], W31
	624 Move X0, [X24+272]
	625 Compare X0, 0
	626 JumpIfEqual {775}
	627 Move X8, [X0]
	628 Move W1, W22
	629 Move X9, [X8+424]
	630 Move X2, [X8+432]
	631 NotImplemented "Instruction BLR not yet implemented."
	632 Move X0, [X20+24]
	633 Compare X0, 0
	634 JumpIfEqual {775}
	635 Move W1, 203
	636 Move X2, X31
	637 Call ParameterDictionary.ContainsKey, X0, X1
	638 Move TEMP, X0
	639 And TEMP, TEMP, 1
	640 Compare TEMP, 1
	641 JumpIfNotEqual {674}
	642 Move W1, 203
	643 Move X0, X20
	644 Move X2, X31
	645 Call EventData.get_Item, X0, X1
	646 Compare X0, 0
	647 JumpIfEqual {775}
	648 Move X8, 0xBB0000
	649 Move X8, [X8+1880]
	650 Move X9, [X0]
	651 Move X1, [X8]
	652 Move X8, [X9+64]
	653 Move X9, [X1+64]
	654 NotImplemented "Instruction CMP not yet implemented."
	655 Call 0x1C17E08
	656 Move W1, [X0]
	657 Compare W1, 0
	658 JumpIfEqual {674}
	659 Move X0, [X24+272]
	660 Compare X0, 0
	661 JumpIfEqual {775}
	662 Move X8, [X0]
	663 Move [X0+72], W1
	664 Move X22, [X24+192]
	665 Move W2, W31
	666 Move X9, [X8+472]
	667 Move X3, [X8+480]
	668 NotImplemented "Instruction BLR not yet implemented."
	669 Compare X22, 0
	670 JumpIfEqual {775}
	671 Move X1, X0
	672 Move X0, X22
	673 Call InRoomCallbacksContainer.OnMasterClientSwitched, X0, X1
	674 Move X0, [X24+192]
	675 Compare X0, 0
	676 JumpIfEqual {775}
	677 Move X1, X21
	678 Call InRoomCallbacksContainer.OnPlayerLeftRoom, X0, X1
	679 Move X21, X31
	680 Move X8, [X24+264]
	681 Compare X8, 0
	682 JumpIfEqual {775}
	683 Move W8, [X8+24]
	684 NotImplemented "Instruction CMP not yet implemented."
	685 Move W1, 252
	686 Move X0, X20
	687 Move X2, X31
	688 Call EventData.get_Item, X0, X1
	689 Compare X0, 0
	690 JumpIfEqual {708}
	691 Move X8, 0xBB1000
	692 Move X8, [X8+3672]
	693 Move X22, X0
	694 Move X23, [X8]
	695 Move X1, X23
	696 Call 0x1C17E00
	697 Move X1, X0
	698 Compare X0, 0
	699 JumpIfNotEqual {709}
	700 Move X0, X22
	701 Move X1, X23
	702 Call 0x1C181E0
	703 Move X0, [X24+192]
	704 Compare X0, 0
	705 JumpIfEqual {775}
	706 Move X1, X21
	707 Call InRoomCallbacksContainer.OnPlayerEnteredRoom, X0, X1
	708 Move X1, X31
	709 Move X0, X24
	710 Call LoadBalancingClient.UpdatedActorList, X0, X1
	711 Move X8, [X24+296]
	712 Compare X8, 0
	713 JumpIfEqual {717}
	714 Move W8, [X8+49]
	715 NotImplemented "Instruction CMP not yet implemented."
	716 NotImplemented "Instruction CSET not yet implemented."
	717 Compare X21, 0
	718 JumpIfEqual {775}
	719 Move [X21+29], W8
	720 Move W1, [X24+144]
	721 NotImplemented "Instruction CMP not yet implemented."
	722 Move X8, [X24+152]
	723 Move W9, 9
	724 Move [X24+144], W9
	725 Compare X8, 0
	726 JumpIfEqual {732}
	727 Move X9, [X8+24]
	728 Move X0, [X8+64]
	729 Move X3, [X8+40]
	730 Move W2, 9
	731 NotImplemented "Instruction BLR not yet implemented."
	732 Move W8, [X24+292]
	733 Compare W8, 0
	734 JumpIfEqual {741}
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Move X8, [X24+264]
	737 Compare X8, 0
	738 JumpIfEqual {775}
	739 Move W8, [X8+24]
	740 NotImplemented "Instruction CMP not yet implemented."
	741 Move X0, [X24+184]
	742 Compare X0, 0
	743 JumpIfEqual {775}
	744 Call MatchMakingCallbacksContainer.OnCreatedRoom, X0
	745 Move X0, [X24+184]
	746 Compare X0, 0
	747 JumpIfEqual {775}
	748 Call MatchMakingCallbacksContainer.OnJoinedRoom, X0
	749 Move X0, X24
	750 Call LoadBalancingClient.UpdateCallbackTargets, X0
	751 Move X8, [X24+160]
	752 Compare X8, 0
	753 JumpIfEqual {759}
	754 Move X9, [X8+24]
	755 Move X0, [X8+64]
	756 Move X2, [X8+40]
	757 Move X1, X20
	758 NotImplemented "Instruction BLR not yet implemented."
	759 Move X20, [X31+160]
	760 Move X19, [X31+168]
	761 Move X22, [X31+144]
	762 Move X21, [X31+152]
	763 Move X24, [X31+128]
	764 Move X23, [X31+136]
	765 Move X26, [X31+112]
	766 Move X25, [X31+120]
	767 Move X28, [X31+96]
	768 Move X27, [X31+104]
	769 Move X29, [X31+80]
	770 Move X30, [X31+88]
	771 Add X31, X31, 176
	772 Return 
	773 Move X25, [X26+16]
	774 Move W9, W31
	775 Call 0x1C17F20
	776 Call 0x1C17F28
	777 Move X0, X25
	778 Call 0x1C181E0
	779 Call 0x1C17F20
	780 Call 0x1C17F20
	781 Move X0, X24
	782 Call 0x1C181E0
	783 Move X0, X22
	784 Call 0x1C181E0
	785 Move X0, X4
	786 Call 0x1C181E0
	787 Move X22, X0
	788 NotImplemented "Instruction CMP not yet implemented."
	789 Move X0, X22
	790 Call 0x3EB2AD0
	791 Move X23, [X0]
	792 Call 0x3EB2AE0
	793 Move X8, 0xBB9000
	794 Move X8, [X8+576]
	795 Add X0, X31, 48
	796 Move X1, [X8]
	797 Call Enumerator<Object, Object>.Dispose, X0
	798 Compare X23, 0
	799 JumpIfEqual {257}
	800 Move X0, X23
	801 Call 0x1C17F18
	802 Move X23, X31
	803 Move X22, X0
	804 Move X8, 0xBB9000
	805 Move X8, [X8+576]
	806 Move X1, [X8]
	807 Add X0, X31, 48
	808 Call Enumerator<Object, Object>.Dispose, X0
	809 Compare X23, 0
	810 JumpIfNotEqual {813}
	811 Move X0, X22
	812 Call 0x1D2D690
	813 Move X0, X23
	814 Call 0x1C17F18
	815 Call 0x1991590

Method: System.Void OnMessage(System.Object message)

Disassembly:
	0x035453A0 MOV X19, X0
	0x035453A4 TBNZ X8, 0x0, 0x3545404
	0x035453A8 ADRP X0, 0xBAF000
	0x035453AC LDR X0, [X0 + 0x9D8]
	0x035453B0 BL 0x1C16CF4
	0x035453B4 ADRP X0, 0xBB7000
	0x035453B8 LDR X0, [X0 + 0x540]
	0x035453BC BL 0x1C16CF4
	0x035453C0 ADRP X0, 0xBB7000
	0x035453C4 LDR X0, [X0 + 0x618]
	0x035453C8 BL 0x1C16CF4
	0x035453CC ADRP X0, 0xBB7000
	0x035453D0 LDR X0, [X0 + 0x2B8]
	0x035453D4 BL 0x1C16CF4
	0x035453D8 ADRP X0, 0xBB6000
	0x035453DC LDR X0, [X0 + 0xBC8]
	0x035453E0 BL 0x1C16CF4
	0x035453E4 ADRP X0, 0xBB7000
	0x035453E8 LDR X0, [X0 + 0x548]
	0x035453EC BL 0x1C16CF4
	0x035453F0 ADRP X0, 0xBB7000
	0x035453F4 LDR X0, [X0 + 0x620]
	0x035453F8 BL 0x1C16CF4
	0x035453FC MOVZ W8, 0x1
	0x03545400 STRB W8, [X21 + 0xC42]
	0x03545404 LDRB W8, [X19 + 0x40]
	0x03545408 CMP W8, 0x3
	0x0354540C B.CC 0x354548C
	0x03545410 LDR X21, [X19 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE9B000
	007 Move X22, 0xBB8000
	008 Move W8, [X21+3091]
	009 Move X22, [X22+1320]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBB8000
	017 Move X0, [X0+1320]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3091], W8
	021 Move X0, [X22]
	022 Move X1, X20
	023 Move X2, X31
	024 Call String.Format, X0, X1
	025 Move X8, [X19]
	026 Move X2, X0
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X4, [X8+536]
	031 Move X3, [X8+544]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move W1, 5
	035 Move X30, [X31+48]
	036 CallNoReturn X4

Method: System.Void OnDisconnectMessageReceived(ExitGames.Client.Photon.DisconnectMessage obj)

Disassembly:
	0x03545414 CBZ X21, 0x3545574
	0x03545418 ADRP X9, 0xBB6000
	0x0354541C LDR X8, [X21]
	0x03545420 LDR X9, [X9 + 0xBC8]
	0x03545424 ADRP X10, 0xBB7000
	0x03545428 LDR X1, [X9]
	0x0354542C LDR X10, [X10 + 0x620]
	0x03545430 LDRH W9, [X8 + 0x12E]
	0x03545434 LDR X22, [X10]
	0x03545438 CBZ X9, 0x354545C
	0x0354543C LDR X10, [X8 + 0xB0]
	0x03545440 ADD X10, X10, 0x8
	0x03545444 LDUR X11, [X10 - 0x8]
	0x03545448 CMP X11, X1
	0x0354544C B.EQ 0x354546C
	0x03545450 SUBS X9, X9, 0x1
	0x03545454 ADD X10, X10, 0x10
	0x03545458 B.NE 0x3545444
	0x0354545C MOV X0, X21
	0x03545460 MOV W2, W31
	0x03545464 BL 0x1C5C788
	0x03545468 B 0x3545478
	0x0354546C LDRSW X9, [X10]
	0x03545470 ADD X8, X8, X9, 0x4, LSL
	0x03545474 ADD X0, X8, 0x138
	0x03545478 LDP X8, X3, [X0]
	0x0354547C MOVZ W1, 0x3
	0x03545480 MOV X0, X21
	0x03545484 MOV X2, X22
	0x03545488 BLR X8
	0x0354548C CBZ X20, 0x354551C
	0x03545490 LDR X0, [X20 + 0x10]
	0x03545494 MOV X1, X31
	0x03545498 BL 0x32277A8
	0x0354549C MOV X21, X31
	0x035454A0 TBNZ X0, 0x0, 0x3545520
	0x035454A4 ADRP X8, 0xBB7000
	0x035454A8 LDR X8, [X8 + 0x2B8]
	0x035454AC LDR X0, [X8]
	0x035454B0 BL 0x1C16F10
	0x035454B4 ADRP X8, 0xBB7000
	0x035454B8 LDR X8, [X8 + 0x540]
	0x035454BC MOV X21, X0
	0x035454C0 LDR X1, [X8]
	0x035454C4 BL 0x29D2C7C
	0x035454C8 CBZ X21, 0x3545574
	0x035454CC ADRP X22, 0xBB7000
	0x035454D0 LDR X2, [X20 + 0x10]
	0x035454D4 LDR X22, [X22 + 0x618]
	0x035454D8 MOVZ W1, 0xD5
	0x035454DC MOV X0, X21
	0x035454E0 LDR X3, [X22]
	0x035454E4 BL 0x29D3520
	0x035454E8 ADRP X9, 0xBAF000
	0x035454EC LDRB W8, [X20 + 0x18]
	0x035454F0 LDR X9, [X9 + 0x9D8]
	0x035454F4 ADD X1, X31, 0xC
	0x035454F8 STRB W8, [X31 + 0xC]
	0x035454FC LDR X0, [X9]
	0x03545500 BL 0x1C16E04
	0x03545504 LDR X3, [X22]
	0x03545508 MOV X2, X0
	0x0354550C MOVZ W1, 0xD4
	0x03545510 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE9B000
	009 Move W8, [X21+3092]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBF0000
	017 Move X0, [X0+2984]
	018 Call 0x1C17CF4
	019 Move X0, 0xBB3000
	020 Move X0, [X0+1576]
	021 Call 0x1C17CF4
	022 Move X0, 0xBB8000
	023 Move X0, [X0+1328]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3092], W8
	027 Compare X20, 0
	028 JumpIfEqual {76}
	029 Move X8, 0xBB3000
	030 Move X8, [X8+1576]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X21, 0xBF0000
	033 Move X23, 0xBB8000
	034 Move X0, [X8]
	035 Move X21, [X21+2984]
	036 Move X23, [X23+1328]
	037 Add X1, X31, 12
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Call 0x1C17E04
	040 Move X8, [X21]
	041 Move X21, [X20+24]
	042 Move X22, [X20+32]
	043 Move X20, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X22
	050 Call Extensions.ToStringFull, X0
	051 Move X8, [X23]
	052 Move X3, X0
	053 Move X1, X20
	054 Move X2, X21
	055 Move X0, X8
	056 Move X4, X31
	057 Call String.Format, X0, X1, X2, X3
	058 Move X8, [X19]
	059 Move X2, X0
	060 Move W1, 1
	061 Move X0, X19
	062 Move X9, [X8+536]
	063 Move X3, [X8+544]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W1, 19
	066 Move X0, X19
	067 Call LoadBalancingClient.Disconnect, X0, X1
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X30, [X31+16]
	073 Move X23, [X31+24]
	074 Add X31, X31, 64
	075 Return 
	076 Call 0x1C17F20

Method: System.Void OnRegionPingCompleted(Photon.Realtime.RegionHandler regionHandler)

Disassembly:
	0x03545514 BL 0x29D3520
	0x03545518 B 0x3545520
	0x0354551C MOV X21, X31
	0x03545520 ADRP X20, 0xBB7000
	0x03545524 LDR X20, [X20 + 0x548]
	0x03545528 LDR X0, [X20]
	0x0354552C LDR W8, [X0 + 0xE0]
	0x03545530 CBNZ W8, 0x354553C
	0x03545534 BL 0x1C16DFC
	0x03545538 LDR X0, [X20]
	0x0354553C LDR X8, [X0 + 0xB8]
	0x03545540 LDR X9, [X19]
	0x03545544 MOVZ W1, 0xE5
	0x03545548 MOV X0, X19
	0x0354554C LDR X3, [X8]
	0x03545550 LDR X8, [X9 + 0x228]
	0x03545554 LDR X4, [X9 + 0x230]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {22}
	006 Move X19, X0
	007 Move X0, X1
	008 Move X20, X1
	009 Call RegionHandler.get_SummaryToCache, X0
	010 Move [X19+352], X0
	011 Move X0, X20
	012 Call RegionHandler.get_BestRegion, X0
	013 Compare X0, 0
	014 JumpIfEqual {22}
	015 Move X1, [X0+16]
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Call LoadBalancingClient.ConnectToRegionMaster, X0, X1
	021 Return 
	022 Call 0x1C17F20

Method: System.String ReplacePortWithAlternative(System.String address, System.UInt16 replacementPort)

Disassembly:
	0x0354116C ADD X10, X10, 0x10
	0x03541170 B.NE 0x354115C
	0x03541174 MOVZ W2, 0x2
	0x03541178 MOV X0, X20
	0x0354117C BL 0x1C5C788
	0x03541180 B 0x3541194
	0x03541184 LDR W9, [X10]
	0x03541188 ADD W9, W9, 0x2
	0x0354118C ADD X8, X8, W9, 0x4, SXTW
	0x03541190 ADD X0, X8, 0x138
	0x03541194 LDP X8, X2, [X0]
	0x03541198 MOV X0, X20
	0x0354119C MOV X1, X19
	0x035411A0 BLR X8
	0x035411A4 B 0x354112C
	0x035411A8 LDR X1, [X21]
	0x035411AC ADD X0, X31, 0x8
	0x035411B0 BL 0x2BC434C
	0x035411B4 LDP X20, X19, [X31 + 0x50]
	0x035411B8 LDP X22, X21, [X31 + 0x40]
	0x035411BC LDP X24, X23, [X31 + 0x30]
	0x035411C0 LDR X30, [X31 + 0x20]
	0x035411C4 ADD X31, X31, 0x60
	0x035411C8 RET
	0x035411CC BL 0x1C16F20
	0x035411D0 BL 0x1C16F20
	0x035411D4 B 0x35411DC
	0x035411D8 B 0x35411DC
	0x035411DC MOV X19, X0
	0x035411E0 CMP W1, 0x1
	0x035411E4 B.NE 0x3541210
	0x035411E8 MOV X0, X19
	0x035411EC BL 0x3EB1AD0
	0x035411F0 LDR X20, [X0]
	0x035411F4 BL 0x3EB1AE0
	0x035411F8 LDR X1, [X21]
	0x035411FC ADD X0, X31, 0x8
	0x03541200 BL 0x2BC434C
	0x03541204 CBZ X20, 0x35411B4
	0x03541208 MOV X0, X20
	0x0354120C BL 0x1C16F18
	0x03541210 MOV X20, X31
	0x03541214 B 0x354121C
	0x03541218 MOV X19, X0
	0x0354121C LDR X1, [X21]
	0x03541220 ADD X0, X31, 0x8
	0x03541224 BL 0x2BC434C
	0x03541228 CBNZ X20, 0x3541234
	0x0354122C MOV X0, X19
	0x03541230 BL 0x1D2C690
	0x03541234 MOV X0, X20
	0x03541238 BL 0x1C16F18
	0x0354123C BL 0x1990590
	0x03541240 SUB X31, X31, 0x50
	0x03541244 STP X30, X23, [X31 + 0x20]
	0x03541248 STP X22, X21, [X31 + 0x30]
	0x0354124C STP X20, X19, [X31 + 0x40]
	0x03541250 ADRP X20, 0xE9E000
	0x03541254 LDRB W8, [X20 + 0xC32]
	0x03541258 MOV X19, X0
	0x0354125C TBNZ X8, 0x0, 0x35412A4
	0x03541260 ADRP X0, 0xBF3000
	0x03541264 LDR X0, [X0 + 0xE48]
	0x03541268 BL 0x1C16CF4
	0x0354126C ADRP X0, 0xBF3000
	0x03541270 LDR X0, [X0 + 0xE50]
	0x03541274 BL 0x1C16CF4
	0x03541278 ADRP X0, 0xBF3000
	0x0354127C LDR X0, [X0 + 0xE58]
	0x03541280 BL 0x1C16CF4
	0x03541284 ADRP X0, 0xBF3000
	0x03541288 LDR X0, [X0 + 0xE60]
	0x0354128C BL 0x1C16CF4
	0x03541290 ADRP X0, 0xBF3000
	0x03541294 LDR X0, [X0 + 0xE68]
	0x03541298 BL 0x1C16CF4
	0x0354129C MOVZ W8, 0x1
	0x035412A0 STRB W8, [X20 + 0xC32]
	0x035412A4 STP X31, X31, [X31 + 0x8]
	0x035412A8 STR X31, [X31 + 0x18]
	0x035412AC LDR X0, [X19 + 0x28]
	0x035412B0 CBZ X0, 0x3541384
	0x035412B4 ADRP X23, 0xBF3000
	0x035412B8 ADRP X21, 0xBF3000
	0x035412BC ADRP X22, 0xBF3000
	0x035412C0 ADRP X20, 0xBF3000
	0x035412C4 LDR X23, [X23 + 0xE68]
	0x035412C8 LDR X21, [X21 + 0xE50]
	0x035412CC LDR X22, [X22 + 0xE60]
	0x035412D0 LDR X20, [X20 + 0xE48]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE9F000
	007 Move W8, [X21+3093]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xBB8000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move X0, 0xBBC000
	018 Move X0, [X0+928]
	019 Call 0x1C17CF4
	020 Move X0, 0xBBC000
	021 Move X0, [X0+936]
	022 Call 0x1C17CF4
	023 Move X0, 0xBBB000
	024 Move X0, [X0+4080]
	025 Call 0x1C17CF4
	026 Move X0, 0xBBC000
	027 Move X0, [X0+944]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3093], W8
	031 Compare X20, 0
	032 JumpIfEqual {106}
	033 Move X8, 0xBBC000
	034 Move X8, [X8+936]
	035 Move X0, X20
	036 Move X2, X31
	037 Move X1, [X8]
	038 Call String.StartsWith, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {67}
	043 Move X8, 0xBBC000
	044 Move X8, [X8+928]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X1, X20
	048 Move X2, X31
	049 Move X21, X0
	050 Call UriBuilder..ctor, X0, X1
	051 Compare X21, 0
	052 JumpIfEqual {106}
	053 And W1, W19, 0xFFFF
	054 Move X0, X21
	055 Move X2, X31
	056 Call UriBuilder.set_Port, X0, X1
	057 Move X8, [X21]
	058 Move X0, X21
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Move X2, [X8+360]
	064 Move X1, [X8+368]
	065 Add X31, X31, 48
	066 CallNoReturn X2
	067 Move X8, 0xBBC000
	068 Move X8, [X8+944]
	069 Move X1, X20
	070 Move X2, X31
	071 Move X0, [X8]
	072 Call String.Format, X0, X1
	073 Move X8, 0xBBC000
	074 Move X8, [X8+928]
	075 Move X21, X0
	076 Move X8, [X8]
	077 Move X0, X8
	078 Call 0x1C17F10
	079 Move X1, X21
	080 Move X2, X31
	081 Move X20, X0
	082 Call UriBuilder..ctor, X0, X1
	083 Compare X20, 0
	084 JumpIfEqual {106}
	085 Move X8, 0xBB8000
	086 Move X20, [X20+32]
	087 Move X8, [X8+1624]
	088 Add X1, X31, 12
	089 NotImplemented "Instruction STRH not yet implemented."
	090 Move X0, [X8]
	091 Call 0x1C17E04
	092 Move X8, 0xBBB000
	093 Move X8, [X8+4080]
	094 Move X2, X0
	095 Move X1, X20
	096 Move X3, X31
	097 Move X8, [X8]
	098 Move X0, X8
	099 Call String.Format, X0, X1, X2
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X30, [X31+16]
	103 Move X21, [X31+24]
	104 Add X31, X31, 48
	105 Return X0
	106 Call 0x1C17F20

Method: System.Void SetupEncryption(System.Collections.Generic.Dictionary`2<System.Byte, System.Object> encryptionData)

Disassembly:
	0x03540FD8 CMP W22, 0xE
	0x03540FDC B.EQ 0x3540FE4
	0x03540FE0 CBNZ W22, 0x3540CBC
	0x03540FE4 CBZ X20, 0x3540FFC
	0x03540FE8 MOV X0, X20
	0x03540FEC MOV X1, X31
	0x03540FF0 BL 0x354AC24
	0x03540FF4 MOVZ W0, 0x1
	0x03540FF8 B 0x3540CBC
	0x03540FFC BL 0x1C16F20
	0x03541000 BL 0x1C16F28
	0x03541004 MOV X0, X19
	0x03541008 BL 0x1C16F18
	0x0354100C BL 0x1C16F20
	0x03541010 BL 0x1C16F20
	0x03541014 BL 0x1C16F20
	0x03541018 B 0x3541020
	0x0354101C B 0x3541020
	0x03541020 MOV X22, X0
	0x03541024 CMP W1, 0x1
	0x03541028 B.NE 0x3541044
	0x0354102C MOV X0, X22
	0x03541030 BL 0x3EB1AD0
	0x03541034 LDR X19, [X0]
	0x03541038 BL 0x3EB1AE0
	0x0354103C MOV W22, W31
	0x03541040 B 0x3540FC0
	0x03541044 MOV X19, X31
	0x03541048 B 0x3541050
	0x0354104C MOV X22, X0
	0x03541050 LDRB W8, [X31 + 0x8]
	0x03541054 CBZ W8, 0x3541064
	0x03541058 MOV X0, X21
	0x0354105C MOV X1, X31
	0x03541060 BL 0x33E14E4
	0x03541064 CBNZ X19, 0x3541070
	0x03541068 MOV X0, X22
	0x0354106C BL 0x1D2C690
	0x03541070 MOV X0, X19
	0x03541074 BL 0x1C16F18
	0x03541078 BL 0x1990590
	0x0354107C SUB X31, X31, 0x60
	0x03541080 STR X30, [X31 + 0x20]
	0x03541084 STP X24, X23, [X31 + 0x30]
	0x03541088 STP X22, X21, [X31 + 0x40]
	0x0354108C STP X20, X19, [X31 + 0x50]
	0x03541090 ADRP X21, 0xE9E000
	0x03541094 LDRB W8, [X21 + 0xC34]
	0x03541098 MOV X19, X1
	0x0354109C MOV X20, X0
	0x035410A0 TBNZ X8, 0x0, 0x35410E8
	0x035410A4 ADRP X0, 0xBF3000
	0x035410A8 LDR X0, [X0 + 0xE48]
	0x035410AC BL 0x1C16CF4
	0x035410B0 ADRP X0, 0xBF3000
	0x035410B4 LDR X0, [X0 + 0xE50]
	0x035410B8 BL 0x1C16CF4
	0x035410BC ADRP X0, 0xBF3000
	0x035410C0 LDR X0, [X0 + 0xE58]
	0x035410C4 BL 0x1C16CF4
	0x035410C8 ADRP X0, 0xBF3000
	0x035410CC LDR X0, [X0 + 0xE60]
	0x035410D0 BL 0x1C16CF4
	0x035410D4 ADRP X0, 0xBF3000
	0x035410D8 LDR X0, [X0 + 0xE68]
	0x035410DC BL 0x1C16CF4
	0x035410E0 MOVZ W8, 0x1
	0x035410E4 STRB W8, [X21 + 0xC34]
	0x035410E8 STP X31, X31, [X31 + 0x8]
	0x035410EC STR X31, [X31 + 0x18]
	0x035410F0 LDR X0, [X20 + 0x28]
	0x035410F4 CBZ X0, 0x35411D0
	0x035410F8 ADRP X24, 0xBF3000
	0x035410FC ADRP X22, 0xBF3000
	0x03541100 ADRP X23, 0xBF3000
	0x03541104 ADRP X21, 0xBF3000
	0x03541108 LDR X24, [X24 + 0xE68]
	0x0354110C LDR X22, [X22 + 0xE50]
	0x03541110 LDR X23, [X23 + 0xE60]
	0x03541114 LDR X21, [X21 + 0xE48]
	0x03541118 BL 0x35440C4
	0x0354111C LDR X1, [X24]
	0x03541120 ADD X8, X31, 0x8
	0x03541124 MOV X0, X20
	0x03541128 BL 0x301CB58
	0x0354112C LDR X1, [X22]
	0x03541130 ADD X0, X31, 0x8
	0x03541134 BL 0x2BC4350
	0x03541138 TBZ X0, 0x0, 0x35411A8
	0x0354113C LDR X20, [X31 + 0x18]
	0x03541140 CBZ X20, 0x35411CC
	0x03541144 LDR X8, [X20]
	0x03541148 LDR X1, [X23]
	0x0354114C LDRH W9, [X8 + 0x12E]
	0x03541150 CBZ X9, 0x3541174
	0x03541154 LDR X10, [X8 + 0xB0]
	0x03541158 ADD X10, X10, 0x8
	0x0354115C LDUR X11, [X10 - 0x8]
	0x03541160 CMP X11, X1
	0x03541164 B.EQ 0x3541184
	0x03541168 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEA0000
	006 Move W8, [X21+3094]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xBB4000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move X0, 0xBB4000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move X0, 0xBBC000
	020 Move X0, [X0+912]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3094], W8
	024 Compare X20, 0
	025 JumpIfEqual {104}
	026 Move X21, 0xBBC000
	027 Move X21, [X21+912]
	028 Move X0, X20
	029 Move W1, W31
	030 Move X2, [X21]
	031 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {104}
	034 Move X8, 0xBB4000
	035 Move X8, [X8+2520]
	036 Move X9, [X0]
	037 Move X1, [X8]
	038 Move X8, [X9+64]
	039 Move X9, [X1+64]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Call 0x1C17E08
	042 Move W8, [X0]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Compare W8, 0
	045 JumpIfNotEqual {106}
	046 Move X2, [X21]
	047 Move W1, 1
	048 Move X0, X20
	049 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {93}
	052 Move X8, 0xBB3000
	053 Move X8, [X8+1560]
	054 Move X20, X0
	055 Move X21, [X8]
	056 Move X1, X21
	057 Call 0x1C17E00
	058 Move X1, X0
	059 Compare X0, 0
	060 JumpIfNotEqual {94}
	061 Move X2, [X21]
	062 Move W1, 1
	063 Move X0, X20
	064 Call Dictionary`2<Byte, Object>.get_Item, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {79}
	067 Move X8, 0xBB3000
	068 Move X8, [X8+1560]
	069 Move X20, X0
	070 Move X21, [X8]
	071 Move X1, X21
	072 Call 0x1C17E00
	073 Move X1, X0
	074 Compare X0, 0
	075 JumpIfNotEqual {80}
	076 Move X0, X20
	077 Move X1, X21
	078 Call 0x1C181E0
	079 Move X1, X31
	080 Move X0, [X19+16]
	081 Compare X0, 0
	082 JumpIfEqual {104}
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move W3, 1
	086 Move W4, 1
	087 Move X2, X31
	088 Move X5, X31
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Call PhotonPeer.InitDatagramEncryption, X0, X1, X2, X3, X4
	092 Return 
	093 Move X1, X31
	094 Move X0, [X19+16]
	095 Compare X0, 0
	096 JumpIfEqual {104}
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move X2, X31
	100 Move X30, [X31+32]
	101 Move X21, [X31+40]
	102 Call PhotonPeer.InitPayloadEncryption, X0, X1
	103 Return 
	104 Call 0x1C17F20
	105 Call 0x1C181E0
	106 Move X0, 0xBBB000
	107 Move X0, [X0+1888]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X1, X31
	111 Move X19, X0
	112 Call ArgumentOutOfRangeException..ctor, X0
	113 Move X0, 0xBF4000
	114 Move X0, [X0+3512]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

Method: System.Boolean OpWebRpc(System.String uriPath, System.Object parameters, System.Boolean sendAuthCookie = False)

Disassembly:
	0x035459A0 BL 0x29D3520
	0x035459A4 LDR W8, [X20 + 0x1C]
	0x035459A8 CMP W8, 0x1
	0x035459AC B.LT 0x35459D4
	0x035459B0 LDR X0, [X25]
	0x035459B4 ADD X1, X31, 0x8
	0x035459B8 STR W8, [X31 + 0x8]
	0x035459BC BL 0x1C16E04
	0x035459C0 LDR X3, [X23]
	0x035459C4 MOV X2, X0
	0x035459C8 MOVZ W1, 0xEC
	0x035459CC MOV X0, X19
	0x035459D0 BL 0x29D3520
	0x035459D4 LDRB W8, [X20 + 0x40]
	0x035459D8 CBZ W8, 0x3545A08
	0x035459DC LDR X0, [X24]
	0x035459E0 MOVZ W8, 0x1
	0x035459E4 ADD X1, X31, 0x8
	0x035459E8 ORR W21, W21, 0x4
	0x035459EC STRB W8, [X31 + 0x8]
	0x035459F0 BL 0x1C16E04
	0x035459F4 LDR X3, [X23]
	0x035459F8 MOV X2, X0
	0x035459FC MOVZ W1, 0xED
	0x03545A00 MOV X0, X19
	0x03545A04 BL 0x29D3520
	0x03545A08 LDRB W8, [X20 + 0x41]
	0x03545A0C LDR X2, [X20 + 0x38]
	0x03545A10 ORR W9, W21, 0x40
	0x03545A14 CMP W8, 0x0
	0x03545A18 CSEL W21, W21, W9, EQ
	0x03545A1C CBZ X2, 0x3545A30
	0x03545A20 LDR X3, [X23]
	0x03545A24 MOVZ W1, 0xCC
	0x03545A28 MOV X0, X19
	0x03545A2C BL 0x29D3520
	0x03545A30 LDRB W8, [X20 + 0x42]
	0x03545A34 CBZ W8, 0x3545A64
	0x03545A38 LDR X0, [X24]
	0x03545A3C MOVZ W8, 0x1
	0x03545A40 ADD X1, X31, 0x8
	0x03545A44 ORR W21, W21, 0x8
	0x03545A48 STRB W8, [X31 + 0x8]
	0x03545A4C BL 0x1C16E04
	0x03545A50 LDR X3, [X23]
	0x03545A54 MOV X2, X0
	0x03545A58 MOVZ W1, 0xEF
	0x03545A5C MOV X0, X19
	0x03545A60 BL 0x29D3520
	0x03545A64 LDRB W8, [X20 + 0x43]
	0x03545A68 LDRB W10, [X20 + 0x44]
	0x03545A6C ORR W9, W21, 0x10
	0x03545A70 LDR X0, [X25]
	0x03545A74 CMP W8, 0x0
	0x03545A78 CSEL W8, W21, W9, EQ
	0x03545A7C ORR W9, W8, 0x20
	0x03545A80 CMP W10, 0x0
	0x03545A84 CSEL W8, W8, W9, EQ
	0x03545A88 ADD X1, X31, 0x8
	0x03545A8C STR W8, [X31 + 0x8]
	0x03545A90 BL 0x1C16E04
	0x03545A94 LDR X3, [X23]
	0x03545A98 MOV X2, X0
	0x03545A9C MOVZ W1, 0xBF
	0x03545AA0 MOV X0, X19
	0x03545AA4 BL 0x29D3520
	0x03545AA8 LDP X20, X19, [X31 + 0x40]
	0x03545AAC LDP X22, X21, [X31 + 0x30]
	0x03545AB0 LDP X24, X23, [X31 + 0x20]
	0x03545AB4 LDP X30, X25, [X31 + 0x10]
	0x03545AB8 ADD X31, X31, 0x50
	0x03545ABC RET
	0x03545AC0 BL 0x1C16F20
	0x03545AC4 STP X30, X21, [X31 - 0x20]!
	0x03545AC8 STP X20, X19, [X31 + 0x10]
	0x03545ACC ADRP X21, 0xE9A000
	0x03545AD0 ADRP X20, 0xBAE000
	0x03545AD4 LDRB W8, [X21 + 0xC58]
	0x03545AD8 LDR X20, [X20 + 0xAC8]
	0x03545ADC MOV X19, X0
	0x03545AE0 TBNZ X8, 0x0, 0x3545AF8
	0x03545AE4 ADRP X0, 0xBAE000
	0x03545AE8 LDR X0, [X0 + 0xAC8]
	0x03545AEC BL 0x1C16CF4
	0x03545AF0 MOVZ W8, 0x1
	0x03545AF4 STRB W8, [X21 + 0xC58]
	0x03545AF8 MOVZ W8, 0x101
	0x03545AFC MOVZ W21, 0x1
	0x03545B00 STRH W8, [X19 + 0x10]
	0x03545B04 STRB W21, [X19 + 0x20]
	0x03545B08 LDR X0, [X20]
	0x03545B0C MOV W1, W31
	0x03545B10 BL 0x1C16D6C
	0x03545B14 STR X0, [X19 + 0x30]
	0x03545B18 STRB W21, [X19 + 0x44]
	0x03545B1C MOV X0, X19
	0x03545B20 LDP X20, X19, [X31 + 0x10]
	0x03545B24 MOV X1, X31
	0x03545B28 LDP X30, X21, [X31], #0x20
	0x03545B2C B 0x33BDD8C
	0x03545B30 STR X30, [X31 - 0x30]!
	0x03545B34 STP X22, X21, [X31 + 0x10]
	0x03545B38 STP X20, X19, [X31 + 0x20]
	0x03545B3C ADRP X21, 0xE9A000
	0x03545B40 LDRB W8, [X21 + 0xC45]
	0x03545B44 MOV X20, X1
	0x03545B48 MOV X19, X0
	0x03545B4C TBNZ X8, 0x0, 0x3545BC4
	0x03545B50 ADRP X0, 0xBAE000
	0x03545B54 LDR X0, [X0 + 0xB58]
	0x03545B58 BL 0x1C16CF4
	0x03545B5C ADRP X0, 0xBAF000
	0x03545B60 LDR X0, [X0 + 0x9D8]
	0x03545B64 BL 0x1C16CF4
	0x03545B68 ADRP X0, 0xBB7000
	0x03545B6C LDR X0, [X0 + 0x540]
	0x03545B70 BL 0x1C16CF4
	0x03545B74 ADRP X0, 0xBB6000
	0x03545B78 LDR X0, [X0 + 0xD60]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xE9B000
	009 Move W8, [X23+3095]
	010 Move W20, W3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xBB0000
	019 Move X0, [X0+2520]
	020 Call 0x1C17CF4
	021 Move X0, 0xBB8000
	022 Move X0, [X0+1336]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB8000
	025 Move X0, [X0+1344]
	026 Call 0x1C17CF4
	027 Move X0, 0xBB8000
	028 Move X0, [X0+696]
	029 Call 0x1C17CF4
	030 Move X0, 0xBB8000
	031 Move X0, [X0+1352]
	032 Call 0x1C17CF4
	033 Move X0, 0xBB8000
	034 Move X0, [X0+1360]
	035 Call 0x1C17CF4
	036 Move X0, 0xBB8000
	037 Move X0, [X0+1368]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3095], W8
	041 Move X0, X22
	042 Move X1, X31
	043 Call String.IsNullOrEmpty, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {57}
	048 Move X9, 0xBB8000
	049 Move X8, [X19]
	050 Move X9, [X9+1360]
	051 Move W1, 1
	052 Move X0, X19
	053 Move X3, [X8+544]
	054 Move X2, [X9]
	055 Move X9, [X8+536]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, 0xBB8000
	058 Move X8, [X8+1368]
	059 Move W2, [X19+128]
	060 Move W1, 219
	061 Move X0, X19
	062 Move X3, [X8]
	063 Call LoadBalancingClient.CheckIfOpCanBeSent, X0, X1, X2, X3
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {129}
	068 Move X8, 0xBB8000
	069 Move X8, [X8+696]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X8, 0xBB8000
	073 Move X8, [X8+1344]
	074 Move X23, X0
	075 Move X1, [X8]
	076 Call Dictionary`2<Byte, Object>..ctor, X0
	077 Compare X23, 0
	078 JumpIfEqual {139}
	079 Move X24, 0xBB8000
	080 Move X24, [X24+1336]
	081 Move W1, 209
	082 Move X0, X23
	083 Move X2, X22
	084 Move X3, [X24]
	085 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	086 Compare X21, 0
	087 JumpIfEqual {93}
	088 Move X3, [X24]
	089 Move W1, 208
	090 Move X0, X23
	091 Move X2, X21
	092 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	093 Move TEMP, X20
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {109}
	097 Move X8, 0xBB0000
	098 Move X8, [X8+2520]
	099 Add X1, X31, 12
	100 Move X0, [X8]
	101 Move W8, 2
	102 Move [X31+12], W8
	103 Call 0x1C17E04
	104 Move X3, [X24]
	105 Move X2, X0
	106 Move W1, 234
	107 Move X0, X23
	108 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	109 Move X20, 0xBB8000
	110 Move X20, [X20+1352]
	111 Move X19, [X19+16]
	112 Move X0, [X20]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Compare X19, 0
	118 JumpIfEqual {139}
	119 Move X8, [X20]
	120 Move X9, [X19]
	121 Move W1, 219
	122 Move X0, X19
	123 Move X8, [X8+184]
	124 Move X10, [X9+552]
	125 Move X4, [X9+560]
	126 Move X2, X23
	127 Move X3, [X8]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move W0, W31
	130 Move X20, [X31+48]
	131 Move X19, [X31+56]
	132 Move X22, [X31+32]
	133 Move X21, [X31+40]
	134 Move X24, [X31+16]
	135 Move X23, [X31+24]
	136 And W0, W0, 1
	137 Move X30, [X31+64]
	138 Return X0
	139 Call 0x1C17F20

Method: System.Void AddCallbackTarget(System.Object target)

Disassembly:
	0x03545B7C BL 0x1C16CF4
	0x03545B80 ADRP X0, 0xBB7000
	0x03545B84 LDR X0, [X0 + 0x618]
	0x03545B88 BL 0x1C16CF4
	0x03545B8C ADRP X0, 0xBB7000
	0x03545B90 LDR X0, [X0 + 0x2B8]
	0x03545B94 BL 0x1C16CF4
	0x03545B98 ADRP X0, 0xBB6000
	0x03545B9C LDR X0, [X0 + 0xBC8]
	0x03545BA0 BL 0x1C16CF4
	0x03545BA4 ADRP X0, 0xBB7000
	0x03545BA8 LDR X0, [X0 + 0x548]
	0x03545BAC BL 0x1C16CF4
	0x03545BB0 ADRP X0, 0xBB7000
	0x03545BB4 LDR X0, [X0 + 0x630]
	0x03545BB8 BL 0x1C16CF4
	0x03545BBC MOVZ W8, 0x1
	0x03545BC0 STRB W8, [X21 + 0xC45]
	0x03545BC4 LDRB W8, [X19 + 0x40]
	0x03545BC8 CMP W8, 0x3
	0x03545BCC B.CC 0x3545C4C
	0x03545BD0 LDR X21, [X19 + 0x48]
	0x03545BD4 CBZ X21, 0x3545E10
	0x03545BD8 ADRP X9, 0xBB6000
	0x03545BDC LDR X8, [X21]
	0x03545BE0 LDR X9, [X9 + 0xBC8]
	0x03545BE4 ADRP X10, 0xBB7000
	0x03545BE8 LDR X1, [X9]
	0x03545BEC LDR X10, [X10 + 0x630]
	0x03545BF0 LDRH W9, [X8 + 0x12E]
	0x03545BF4 LDR X22, [X10]
	0x03545BF8 CBZ X9, 0x3545C1C
	0x03545BFC LDR X10, [X8 + 0xB0]
	0x03545C00 ADD X10, X10, 0x8
	0x03545C04 LDUR X11, [X10 - 0x8]
	0x03545C08 CMP X11, X1
	0x03545C0C B.EQ 0x3545C2C
	0x03545C10 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE9B000
	007 Move X21, 0xBF0000
	008 Move W8, [X22+3096]
	009 Move X21, [X21+3960]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xBF0000
	017 Move X0, [X0+3960]
	018 Call 0x1C17CF4
	019 Move X0, 0xBF0000
	020 Move X0, [X0+3968]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3096], W8
	024 Move X0, [X21]
	025 Move X20, [X20+368]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X21, X0
	029 Call Object..ctor, X0
	030 Move W8, 1
	031 Move [X21+16], X19
	032 Move [X21+24], W8
	033 Compare X20, 0
	034 JumpIfEqual {47}
	035 Move X8, 0xBF0000
	036 Move X8, [X8+3968]
	037 Move X0, X20
	038 Move X1, X21
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X2, [X8]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call Queue`1<Object>.Enqueue, X0, X1
	046 Return 
	047 Call 0x1C17F20

Method: System.Void RemoveCallbackTarget(System.Object target)

Disassembly:
	0x03545C44 MOV X2, X22
	0x03545C48 BLR X8
	0x03545C4C ADRP X8, 0xBB7000
	0x03545C50 LDR X8, [X8 + 0x2B8]
	0x03545C54 ADRP X21, 0xBB7000
	0x03545C58 LDR X0, [X8]
	0x03545C5C LDR X21, [X21 + 0x540]
	0x03545C60 BL 0x1C16F10
	0x03545C64 LDR X1, [X21]
	0x03545C68 MOV X21, X0
	0x03545C6C BL 0x29D2C7C
	0x03545C70 CBZ X20, 0x3545E10
	0x03545C74 LDR X0, [X20 + 0x10]
	0x03545C78 ADRP X22, 0xBB7000
	0x03545C7C LDR X22, [X22 + 0x618]
	0x03545C80 MOV X1, X31
	0x03545C84 BL 0x32277A8
	0x03545C88 TBNZ X0, 0x0, 0x3545CA4
	0x03545C8C CBZ X21, 0x3545E10
	0x03545C90 LDR X2, [X20 + 0x10]
	0x03545C94 LDR X3, [X22]
	0x03545C98 MOVZ W1, 0xFF
	0x03545C9C MOV X0, X21
	0x03545CA0 BL 0x29D3520
	0x03545CA4 LDR X8, [X20 + 0x20]
	0x03545CA8 CBZ X8, 0x3545D14
	0x03545CAC LDR X0, [X8 + 0x10]
	0x03545CB0 MOV X1, X31
	0x03545CB4 BL 0x32277A8
	0x03545CB8 TBNZ X0, 0x0, 0x3545D14
	0x03545CBC LDR X8, [X20 + 0x20]
	0x03545CC0 CBZ X8, 0x3545E10
	0x03545CC4 CBZ X21, 0x3545E10
	0x03545CC8 LDR X2, [X8 + 0x10]
	0x03545CCC LDR X3, [X22]
	0x03545CD0 MOVZ W1, 0xD5
	0x03545CD4 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE9B000
	007 Move X21, 0xBF0000
	008 Move W8, [X22+3097]
	009 Move X21, [X21+3960]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xBF0000
	017 Move X0, [X0+3960]
	018 Call 0x1C17CF4
	019 Move X0, 0xBF0000
	020 Move X0, [X0+3968]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3097], W8
	024 Move X0, [X21]
	025 Move X20, [X20+368]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X21, X0
	029 Call Object..ctor, X0
	030 Move [X21+16], X19
	031 Move [X21+24], W31
	032 Compare X20, 0
	033 JumpIfEqual {46}
	034 Move X8, 0xBF0000
	035 Move X8, [X8+3968]
	036 Move X0, X20
	037 Move X1, X21
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X2, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Queue`1<Object>.Enqueue, X0, X1
	045 Return 
	046 Call 0x1C17F20

Method: System.Void UpdateCallbackTargets()

Disassembly:
	0x035450C4 TBNZ X8, 0x0, 0x3545124
	0x035450C8 ADRP X0, 0xBB7000
	0x035450CC LDR X0, [X0 + 0x5B8]
	0x035450D0 BL 0x1C16CF4
	0x035450D4 ADRP X0, 0xBEF000
	0x035450D8 LDR X0, [X0 + 0xFA0]
	0x035450DC BL 0x1C16CF4
	0x035450E0 ADRP X0, 0xBB6000
	0x035450E4 LDR X0, [X0 + 0x5C8]
	0x035450E8 BL 0x1C16CF4
	0x035450EC ADRP X0, 0xBAE000
	0x035450F0 LDR X0, [X0 + 0x6C0]
	0x035450F4 BL 0x1C16CF4
	0x035450F8 ADRP X0, 0xBB7000
	0x035450FC LDR X0, [X0 + 0x5E0]
	0x03545100 BL 0x1C16CF4
	0x03545104 ADRP X0, 0xBB7000
	0x03545108 LDR X0, [X0 + 0x5F8]
	0x0354510C BL 0x1C16CF4
	0x03545110 ADRP X0, 0xBB7000
	0x03545114 LDR X0, [X0 + 0x608]
	0x03545118 BL 0x1C16CF4
	0x0354511C MOVZ W8, 0x1
	0x03545120 STRB W8, [X20 + 0xC40]
	0x03545124 LDR X0, [X21]
	0x03545128 ADRP X20, 0xBB7000
	0x0354512C ADRP X23, 0xBB6000
	0x03545130 ADRP X22, 0xBEF000
	0x03545134 LDR W8, [X0 + 0xE0]
	0x03545138 LDR X20, [X20 + 0x5F8]
	0x0354513C LDR X23, [X23 + 0x5C8]
	0x03545140 LDR X22, [X22 + 0xFA0]
	0x03545144 CBNZ W8, 0x354514C
	0x03545148 BL 0x1C16DFC
	0x0354514C LDR X0, [X20]
	0x03545150 LDR X2, [X23]
	0x03545154 LDR X3, [X22]
	0x03545158 MOV W1, W31
	0x0354515C BL 0x1C170BC
	0x03545160 MOV X1, X31
	0x03545164 MOV X2, X31
	0x03545168 MOV X20, X0
	0x0354516C BL 0x3395194
	0x03545170 TBZ X0, 0x0, 0x35451A4
	0x03545174 LDR X0, [X21]
	0x03545178 ADRP X20, 0xBB7000
	0x0354517C LDR W8, [X0 + 0xE0]
	0x03545180 LDR X20, [X20 + 0x5E0]
	0x03545184 CBNZ W8, 0x354518C
	0x03545188 BL 0x1C16DFC
	0x0354518C LDR X0, [X20]
	0x03545190 LDR X2, [X23]
	0x03545194 LDR X3, [X22]
	0x03545198 MOV W1, W31
	0x0354519C BL 0x1C170BC
	0x035451A0 MOV X20, X0
	0x035451A4 LDR X0, [X21]
	0x035451A8 LDR W8, [X0 + 0xE0]
	0x035451AC CBNZ W8, 0x35451B4
	0x035451B0 BL 0x1C16DFC
	0x035451B4 MOV X0, X20
	0x035451B8 MOV X1, X31
	0x035451BC MOV X2, X31
	0x035451C0 BL 0x3395194
	0x035451C4 TBZ X0, 0x0, 0x35451F8
	0x035451C8 LDR X0, [X21]
	0x035451CC ADRP X20, 0xBB7000
	0x035451D0 LDR W8, [X0 + 0xE0]
	0x035451D4 LDR X20, [X20 + 0x608]
	0x035451D8 CBNZ W8, 0x35451E0
	0x035451DC BL 0x1C16DFC
	0x035451E0 LDR X0, [X20]
	0x035451E4 LDR X2, [X23]
	0x035451E8 LDR X3, [X22]
	0x035451EC MOV W1, W31
	0x035451F0 BL 0x1C170BC
	0x035451F4 MOV X20, X0
	0x035451F8 LDR X0, [X21]
	0x035451FC LDR W8, [X0 + 0xE0]
	0x03545200 CBNZ W8, 0x3545208
	0x03545204 BL 0x1C16DFC
	0x03545208 MOV X0, X20
	0x0354520C MOV X1, X31
	0x03545210 MOV X2, X31
	0x03545214 BL 0x3395F0C
	0x03545218 TBZ X0, 0x0, 0x3545260
	0x0354521C LDR X0, [X19 + 0x30]
	0x03545220 CBZ X0, 0x3545270
	0x03545224 ADRP X21, 0xBB7000
	0x03545228 LDR X21, [X21 + 0x5B8]
	0x0354522C MOVZ W1, 0x4
	0x03545230 MOV X2, X20
	0x03545234 LDR X3, [X21]
	0x03545238 BL 0x29D94A0
	0x0354523C LDR X0, [X19 + 0x30]
	0x03545240 CBZ X0, 0x3545270
	0x03545244 LDR X3, [X21]
	0x03545248 MOV X2, X20
	0x0354524C LDP X20, X19, [X31 + 0x20]
	0x03545250 LDP X22, X21, [X31 + 0x10]
	0x03545254 MOVZ W1, 0x5
	0x03545258 LDP X30, X23, [X31], #0x30
	0x0354525C B 0x29D94A0
	0x03545260 LDP X20, X19, [X31 + 0x20]
	0x03545264 LDP X22, X21, [X31 + 0x10]
	0x03545268 LDP X30, X23, [X31], #0x30
	0x0354526C RET
	0x03545270 BL 0x1C16F20
	0x03545274 SUB X31, X31, 0x40
	0x03545278 STP X30, X23, [X31 + 0x10]
	0x0354527C STP X22, X21, [X31 + 0x20]
	0x03545280 STP X20, X19, [X31 + 0x30]
	0x03545284 ADRP X22, 0xE9A000
	0x03545288 ADRP X23, 0xBB7000
	0x0354528C ADRP X21, 0xBB7000
	0x03545290 LDRB W8, [X22 + 0xC41]
	0x03545294 LDR X23, [X23 + 0x2B8]
	0x03545298 LDR X21, [X21 + 0x610]
	0x0354529C MOV X20, X1
	0x035452A0 MOV X19, X0
	0x035452A4 TBNZ X8, 0x0, 0x35452E0
	0x035452A8 ADRP X0, 0xBB7000
	0x035452AC LDR X0, [X0 + 0x610]
	0x035452B0 BL 0x1C16CF4
	0x035452B4 ADRP X0, 0xBB7000
	0x035452B8 LDR X0, [X0 + 0x618]
	0x035452BC BL 0x1C16CF4
	0x035452C0 ADRP X0, 0xBB7000
	0x035452C4 LDR X0, [X0 + 0x2B8]
	0x035452C8 BL 0x1C16CF4
	0x035452CC ADRP X0, 0xBB7000
	0x035452D0 LDR X0, [X0 + 0x548]
	0x035452D4 BL 0x1C16CF4
	0x035452D8 MOVZ W8, 0x1
	0x035452DC STRB W8, [X22 + 0xC41]
	0x035452E0 LDR X0, [X23]
	0x035452E4 BL 0x1C16F10
	0x035452E8 LDR X2, [X21]
	0x035452EC MOVZ W1, 0x1
	0x035452F0 MOV X21, X0
	0x035452F4 BL 0x29D2C94
	0x035452F8 CBZ X21, 0x3545384
	0x035452FC ADRP X8, 0xBB7000
	0x03545300 LDR X8, [X8 + 0x618]
	0x03545304 ADRP X22, 0xBB7000
	0x03545308 MOVZ W1, 0xE0
	0x0354530C MOV X0, X21
	0x03545310 LDR X3, [X8]
	0x03545314 LDR X22, [X22 + 0x548]
	0x03545318 MOV X2, X20
	0x0354531C BL 0x29D3520
	0x03545320 LDR X0, [X22]
	0x03545324 STR X31, [X31 + 0x8]
	0x03545328 LDR W8, [X0 + 0xE0]
	0x0354532C CBNZ W8, 0x3545334
	0x03545330 BL 0x1C16DFC
	0x03545334 ADD X0, X31, 0x8
	0x03545338 MOVZ W1, 0x1
	0x0354533C MOV X2, X31
	0x03545340 MOVZ W20, 0x1
	0x03545344 BL 0x35160A8
	0x03545348 STRB W20, [X31 + 0xC]
	0x0354534C LDR X8, [X19]
	0x03545350 LDR X3, [X31 + 0x8]
	0x03545354 MOVZ W1, 0xDC
	0x03545358 MOV X0, X19
	0x0354535C LDR X9, [X8 + 0x228]
	0x03545360 LDR X4, [X8 + 0x230]
	0x03545364 MOV X2, X21
	0x03545368 BLR X9
	0x0354536C LDP X20, X19, [X31 + 0x30]
	0x03545370 LDP X22, X21, [X31 + 0x20]
	0x03545374 LDP X30, X23, [X31 + 0x10]
	0x03545378 AND W0, W0, 0x1
	0x0354537C ADD X31, X31, 0x40
	0x03545380 RET
	0x03545384 BL 0x1C16F20
	0x03545388 STR X30, [X31 - 0x30]!
	0x0354538C STP X22, X21, [X31 + 0x10]
	0x03545390 STP X20, X19, [X31 + 0x20]
	0x03545394 ADRP X21, 0xE9A000
	0x03545398 LDRB W8, [X21 + 0xC42]
	0x0354539C MOV X20, X1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xE9B000
	014 Move W8, [X20+3098]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {61}
	020 Move X0, 0xBB7000
	021 Move X0, [X0+3248]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB8000
	024 Move X0, [X0+1224]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB8000
	027 Move X0, [X0+1232]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB8000
	030 Move X0, [X0+1240]
	031 Call 0x1C17CF4
	032 Move X0, 0xBF0000
	033 Move X0, [X0+3816]
	034 Call 0x1C17CF4
	035 Move X0, 0xBF0000
	036 Move X0, [X0+3824]
	037 Call 0x1C17CF4
	038 Move X0, 0xBF0000
	039 Move X0, [X0+3832]
	040 Call 0x1C17CF4
	041 Move X0, 0xBF0000
	042 Move X0, [X0+3840]
	043 Call 0x1C17CF4
	044 Move X0, 0xBF0000
	045 Move X0, [X0+3848]
	046 Call 0x1C17CF4
	047 Move X0, 0xBF0000
	048 Move X0, [X0+3856]
	049 Call 0x1C17CF4
	050 Move X0, 0xBF0000
	051 Move X0, [X0+3864]
	052 Call 0x1C17CF4
	053 Move X0, 0xBF0000
	054 Move X0, [X0+3872]
	055 Call 0x1C17CF4
	056 Move X0, 0xBF0000
	057 Move X0, [X0+3880]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+3098], W8
	061 Move X0, [X19+368]
	062 Compare X0, 0
	063 JumpIfEqual {195}
	064 Move X22, 0xBF0000
	065 Move X23, 0xBB8000
	066 Move X27, 0xBF0000
	067 Move X28, 0xBF0000
	068 Move X29, 0xBF0000
	069 Move X24, 0xBF0000
	070 Move X25, 0xBF0000
	071 Move X22, [X22+3872]
	072 Move X23, [X23+1232]
	073 Move X27, [X27+3856]
	074 Move X28, [X28+3848]
	075 Move X29, [X29+3864]
	076 Move X24, [X24+3832]
	077 Move X25, [X25+3816]
	078 Move W8, [X0+32]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X1, [X22]
	081 Call Queue`1<Object>.Dequeue, X0
	082 Compare X0, 0
	083 JumpIfEqual {195}
	084 Move X20, X0
	085 Move X0, [X19+376]
	086 Compare X0, 0
	087 JumpIfEqual {195}
	088 Move X1, [X20+16]
	089 Move X2, [X23]
	090 Move W21, [X20+24]
	091 Call HashSet`1<Object>.Contains, X0, X1
	092 Compare W21, 0
	093 JumpIfEqual {106}
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {192}
	098 Move X0, [X19+376]
	099 Compare X0, 0
	100 JumpIfEqual {195}
	101 Move X8, 0xBB8000
	102 Move X1, [X20+16]
	103 Move X8, [X8+1224]
	104 Move X2, [X8]
	105 Call HashSet`1<Object>.Add, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {192}
	110 Move X0, [X19+376]
	111 Compare X0, 0
	112 JumpIfEqual {195}
	113 Move X8, 0xBB8000
	114 Move X1, [X20+16]
	115 Move X8, [X8+1240]
	116 Move X2, [X8]
	117 Call HashSet`1<Object>.Remove, X0, X1
	118 Move X8, 0xBF0000
	119 Move X2, [X19+192]
	120 Move X8, [X8+3840]
	121 Move X0, X19
	122 Move X1, X20
	123 Move X3, [X8]
	124 Call 0x2214588, X0, X1, X2
	125 Move X8, 0xBF0000
	126 Move X2, [X19+176]
	127 Move X8, [X8+3824]
	128 Move X0, X19
	129 Move X1, X20
	130 Move X3, [X8]
	131 Call 0x2214588, X0, X1, X2
	132 Move X2, [X19+184]
	133 Move X3, [X27]
	134 Move X0, X19
	135 Move X1, X20
	136 Call 0x2214588, X0, X1, X2
	137 Move X2, [X19+200]
	138 Move X3, [X28]
	139 Move X0, X19
	140 Move X1, X20
	141 Call 0x2214588, X0, X1, X2
	142 Move X2, [X19+208]
	143 Move X3, [X29]
	144 Move X0, X19
	145 Move X1, X20
	146 Call 0x2214588, X0, X1, X2
	147 Move X2, [X19+216]
	148 Move X3, [X24]
	149 Move X0, X19
	150 Move X1, X20
	151 Call 0x2214588, X0, X1, X2
	152 Move X0, [X20+16]
	153 Move X1, [X25]
	154 Call 0x1C17E00
	155 Compare X0, 0
	156 JumpIfEqual {192}
	157 Move X8, 0xBB7000
	158 Move W26, [X20+24]
	159 Move X8, [X8+3248]
	160 Move X21, X0
	161 Move X0, [X8]
	162 Call 0x1C17F10
	163 Move X8, [X21]
	164 Move X1, [X25]
	165 Move X20, X0
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move X0, X21
	176 Move W2, W31
	177 Call 0x1C5D788
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X2, [X0+8]
	182 Move X0, X20
	183 Move X1, X21
	184 Move X3, X31
	185 Call Action`1<Object>..ctor, X0, X1, X2
	186 Move X0, X19
	187 Move X1, X20
	188 Compare W26, 0
	189 JumpIfEqual {191}
	190 Call LoadBalancingClient.add_EventReceived, X0, X1
	191 Call LoadBalancingClient.remove_EventReceived, X0, X1
	192 Move X0, [X19+368]
	193 Compare X0, 0
	194 JumpIfNotEqual {78}
	195 Call 0x1C17F20
	196 Move X20, [X31+80]
	197 Move X19, [X31+88]
	198 Move X22, [X31+64]
	199 Move X21, [X31+72]
	200 Move X24, [X31+48]
	201 Move X23, [X31+56]
	202 Move X26, [X31+32]
	203 Move X25, [X31+40]
	204 Move X28, [X31+16]
	205 Move X27, [X31+24]
	206 Move X29, [X31+96]
	207 Move X30, [X31+104]
	208 Return 

Method: System.Void UpdateCallbackTarget(Photon.Realtime.LoadBalancingClient/CallbackTargetChange change, System.Collections.Generic.List`1<T> container)

Disassembly:
	0x02214588 LDR X0, [X0 + 0x8B0]
	0x0221458C BL 0x1C16CF4
	0x02214590 ADRP X0, 0x1EE7000
	0x02214594 LDR X0, [X0 + 0xA48]
	0x02214598 BL 0x1C16CF4
	0x0221459C MOVZ W8, 0x1
	0x022145A0 STRB W8, [X22 + 0x86D]
	0x022145A4 LDR X0, [X21]
	0x022145A8 ADRP X21, 0x1EE7000
	0x022145AC LDR W8, [X0 + 0xE0]
	0x022145B0 LDR X21, [X21 + 0xA48]
	0x022145B4 CBNZ W8, 0x22145BC
	0x022145B8 BL 0x1C16DFC
	0x022145BC LDR X2, [X21]
	0x022145C0 MOV X0, X20
	0x022145C4 MOV X1, X19
	0x022145C8 LDP X20, X19, [X31 + 0x20]
	0x022145CC LDP X22, X21, [X31 + 0x10]
	0x022145D0 MOV X3, X31
	0x022145D4 LDR X30, [X31], #0x30
	0x022145D8 B 0x1E3F2E0
	0x022145DC STR X30, [X31 - 0x30]!
	0x022145E0 STP X22, X21, [X31 + 0x10]
	0x022145E4 STP X20, X19, [X31 + 0x20]
	0x022145E8 ADRP X22, 0x21C5000
	0x022145EC ADRP X21, 0x1EE7000
	0x022145F0 LDRB W8, [X22 + 0x86E]
	0x022145F4 LDR X21, [X21 + 0x8B0]
	0x022145F8 MOV X19, X1
	0x022145FC MOV X20, X0
	0x02214600 TBNZ X8, 0x0, 0x2214624
	0x02214604 ADRP X0, 0x1EE7000
	0x02214608 LDR X0, [X0 + 0x8B0]
	0x0221460C BL 0x1C16CF4
	0x02214610 ADRP X0, 0x1EE7000
	0x02214614 LDR X0, [X0 + 0xA78]
	0x02214618 BL 0x1C16CF4
	0x0221461C MOVZ W8, 0x1
	0x02214620 STRB W8, [X22 + 0x86E]
	0x02214624 LDR X0, [X21]
	0x02214628 ADRP X21, 0x1EE7000
	0x0221462C LDR W8, [X0 + 0xE0]
	0x02214630 LDR X21, [X21 + 0xA78]
	0x02214634 CBNZ W8, 0x221463C
	0x02214638 BL 0x1C16DFC
	0x0221463C LDR X2, [X21]
	0x02214640 MOV X0, X20
	0x02214644 MOV X1, X19
	0x02214648 LDP X20, X19, [X31 + 0x20]
	0x0221464C LDP X22, X21, [X31 + 0x10]
	0x02214650 MOV X3, X31
	0x02214654 LDR X30, [X31], #0x30
	0x02214658 B 0x1E3F018
	0x0221465C STR X30, [X31 - 0x30]!
	0x02214660 STP X22, X21, [X31 + 0x10]
	0x02214664 STP X20, X19, [X31 + 0x20]
	0x02214668 ADRP X22, 0x21C5000
	0x0221466C ADRP X21, 0x1EE7000
	0x02214670 LDRB W8, [X22 + 0x86F]
	0x02214674 LDR X21, [X21 + 0x8B0]
	0x02214678 MOV X19, X1
	0x0221467C MOV X20, X0
	0x02214680 TBNZ X8, 0x0, 0x22146A4
	0x02214684 ADRP X0, 0x1EE7000
	0x02214688 LDR X0, [X0 + 0x8B0]
	0x0221468C BL 0x1C16CF4
	0x02214690 ADRP X0, 0x1EE7000
	0x02214694 LDR X0, [X0 + 0xA50]
	0x02214698 BL 0x1C16CF4
	0x0221469C MOVZ W8, 0x1
	0x022146A0 STRB W8, [X22 + 0x86F]
	0x022146A4 LDR X0, [X21]
	0x022146A8 ADRP X21, 0x1EE7000
	0x022146AC LDR W8, [X0 + 0xE0]
	0x022146B0 LDR X21, [X21 + 0xA50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X20, X3
	009 Move X19, X2
	010 Move X21, X1
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X20
	014 Call 0x1C5D6E0
	015 Compare X21, 0
	016 JumpIfEqual {98}
	017 Move X8, [X20+56]
	018 Move X22, [X21+16]
	019 Move X1, [X8]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Move X0, X22
	029 Call 0x1C17E00
	030 Move X8, [X20+56]
	031 Move X23, X0
	032 Move X22, [X8]
	033 Move W8, [X22+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X22
	039 Call 0x1C5D684
	040 Move X22, X0
	041 Compare X23, 0
	042 JumpIfEqual {69}
	043 Move X0, X23
	044 Move X1, X22
	045 Call 0x1C17E00
	046 Compare X0, 0
	047 JumpIfEqual {99}
	048 Compare X19, 0
	049 JumpIfEqual {98}
	050 Move W8, [X21+24]
	051 Move X9, [X20+56]
	052 Move X1, X0
	053 Compare W8, 0
	054 JumpIfEqual {76}
	055 Move W10, [X19+28]
	056 Move X8, [X19+16]
	057 Move X9, [X9+16]
	058 Add W10, W10, 1
	059 Move [X19+28], W10
	060 Compare X8, 0
	061 JumpIfEqual {98}
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Move W11, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add W9, W10, 1
	066 Add X8, X8, X10
	067 Move [X19+24], W9
	068 Move [X8+32], X1
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Return 
	076 Move X2, [X9+24]
	077 Move X0, X19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Call List`1<Object>.Remove, X0, X1
	085 Return 
	086 Move X8, [X9+32]
	087 Move X0, X19
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X8, [X8+192]
	093 Move X2, [X8+112]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Call List`1<Object>.AddWithResize, X0, X1
	097 Return 
	098 Call 0x1C17F20
	099 Move X0, X23
	100 Move X1, X22
	101 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x03545CD8 BL 0x29D3520
	0x03545CDC LDR X8, [X20 + 0x20]
	0x03545CE0 CBZ X8, 0x3545E10
	0x03545CE4 ADRP X9, 0xBAF000
	0x03545CE8 LDRB W8, [X8 + 0x18]
	0x03545CEC LDR X9, [X9 + 0x9D8]
	0x03545CF0 ADD X1, X31, 0xC
	0x03545CF4 STRB W8, [X31 + 0xC]
	0x03545CF8 LDR X0, [X9]
	0x03545CFC BL 0x1C16E04
	0x03545D00 LDR X3, [X22]
	0x03545D04 MOV X2, X0
	0x03545D08 MOVZ W1, 0xD4
	0x03545D0C MOV X0, X21
	0x03545D10 BL 0x29D3520
	0x03545D14 LDR X2, [X20 + 0x38]
	0x03545D18 CBZ X2, 0x3545D38
	0x03545D1C LDR X8, [X2 + 0x18]
	0x03545D20 CBZ X8, 0x3545D38
	0x03545D24 CBZ X21, 0x3545E10
	0x03545D28 LDR X3, [X22]
	0x03545D2C MOVZ W1, 0xEE
	0x03545D30 MOV X0, X21
	0x03545D34 BL 0x29D3520
	0x03545D38 LDRB W8, [X20 + 0x30]
	0x03545D3C CBZ W8, 0x3545DBC
	0x03545D40 LDR X0, [X20 + 0x28]
	0x03545D44 CBZ X0, 0x3545D78
	0x03545D48 ADRP X8, 0xBB6000
	0x03545D4C LDR X8, [X8 + 0xD60]
	0x03545D50 LDR X1, [X8]
	0x03545D54 BL 0x2AA4E88
	0x03545D58 CMP W0, 0x1
	0x03545D5C B.LT 0x3545D78
	0x03545D60 CBZ X21, 0x3545E10
	0x03545D64 LDR X2, [X20 + 0x28]
	0x03545D68 LDR X3, [X22]
	0x03545D6C MOVZ W1, 0xF9
	0x03545D70 MOV X0, X21
	0x03545D74 BL 0x29D3520
	0x03545D78 ADRP X8, 0xBAE000
	0x03545D7C LDR X8, [X8 + 0xB58]
	0x03545D80 ADD X1, X31, 0x8
	0x03545D84 LDR X0, [X8]
	0x03545D88 MOVZ W8, 0x1
	0x03545D8C STRB W8, [X31 + 0x8]
	0x03545D90 BL 0x1C16E04
	0x03545D94 CBZ X21, 0x3545E10
	0x03545D98 LDR X3, [X22]
	0x03545D9C MOV X2, X0
	0x03545DA0 MOVZ W1, 0xFA
	0x03545DA4 MOV X0, X21
	0x03545DA8 BL 0x29D3520
	0x03545DAC LDR X2, [X20 + 0x18]
	0x03545DB0 MOV X1, X21
	0x03545DB4 MOV W3, W31
	0x03545DB8 BL 0x354569C
	0x03545DBC ADRP X20, 0xBB7000
	0x03545DC0 LDR X20, [X20 + 0x548]
	0x03545DC4 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE9B000
	006 Move X21, 0xBB8000
	007 Move X19, 0xBB8000
	008 Move W8, [X20+3099]
	009 Move X21, [X21+1376]
	010 Move X19, [X19+1384]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xBB8000
	016 Move X0, [X0+1392]
	017 Call 0x1C17CF4
	018 Move X0, 0xBB8000
	019 Move X0, [X0+1384]
	020 Call 0x1C17CF4
	021 Move X0, 0xBB8000
	022 Move X0, [X0+1376]
	023 Call 0x1C17CF4
	024 Move X0, 0xBF0000
	025 Move X0, [X0+3000]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3099], W8
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<ByteEnum, Int32>..ctor, X0
	034 Compare X19, 0
	035 JumpIfEqual {68}
	036 Move X20, 0xBB8000
	037 Move X20, [X20+1392]
	038 Move X21, 0xBF0000
	039 Move W2, 0x13C2
	040 Move X0, X19
	041 Move X3, [X20]
	042 Move X21, [X21+3000]
	043 Move W1, W31
	044 Call Dictionary`2<ByteEnum, Int32>.Add, X0, X1, X2
	045 Move X3, [X20]
	046 Move W1, 1
	047 Move W2, 0x11B5
	048 Move X0, X19
	049 Call Dictionary`2<ByteEnum, Int32>.Add, X0, X1, X2
	050 Move X3, [X20]
	051 Move W1, 4
	052 Move W2, 80
	053 Move X0, X19
	054 Call Dictionary`2<ByteEnum, Int32>.Add, X0, X1, X2
	055 Move X3, [X20]
	056 Move W1, 5
	057 Move W2, 443
	058 Move X0, X19
	059 Call Dictionary`2<ByteEnum, Int32>.Add, X0, X1, X2
	060 Move X8, [X21]
	061 Move X8, [X8+184]
	062 Move [X8], X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 
	068 Call 0x1C17F20

