Type: Photon.Realtime.WebRpcResponse

Method: System.String get_Name()

Disassembly:
	0x03551F1C BL 0x1C16D08
	0x03551F20 MOVN X8, 0x0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x03551F24 STP X0, X8, [X31 + 0x8]
	0x03551F28 ADD X0, X31, 0x8

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Int32 get_ResultCode()

Disassembly:
	0x03551F2C MOV X1, X31
	0x03551F30 STR W22, [X31 + 0x18]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_ResultCode(System.Int32 value)

Disassembly:
	0x03551F34 BL 0x33B162C
	0x03551F38 MOV X19, X0

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.Int32 get_ReturnCode()

Disassembly:
	0x03551F3C ADRP X0, 0xBE4000
	0x03551F40 LDR X0, [X0 + 0x250]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.String get_Message()

Disassembly:
	0x03551F44 BL 0x1C16D08
	0x03551F48 MOV X20, X0

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Message(System.String value)

Disassembly:
	0x03551F4C ADRP X0, 0xBA3000
	0x03551F50 LDR X0, [X0 + 0x608]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_DebugMessage()

Disassembly:
	0x03551F54 BL 0x1C16D08
	0x03551F58 MOV X2, X0

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.Object> get_Parameters()

Disassembly:
	0x03551F5C MOV X0, X20
	0x03551F60 MOV X1, X19

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Parameters(System.Collections.Generic.Dictionary`2<System.String, System.Object> value)

Disassembly:
	0x03551F64 MOV X3, X31
	0x03551F68 BL 0x32274B8

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Void .ctor(ExitGames.Client.Photon.OperationResponse response)

Disassembly:
	0x03551F6C MOV X19, X0
	0x03551F70 ADRP X0, 0xBAA000
	0x03551F74 LDR X0, [X0 + 0x760]
	0x03551F78 BL 0x1C16D08
	0x03551F7C BL 0x1C16F10
	0x03551F80 MOV X20, X0
	0x03551F84 ADRP X0, 0xBE4000
	0x03551F88 LDR X0, [X0 + 0x258]
	0x03551F8C B 0x3552084
	0x03551F90 ADRP X0, 0xBCB000
	0x03551F94 LDR X0, [X0 + 0xE00]
	0x03551F98 BL 0x1C16D08
	0x03551F9C MOVN X8, 0x0
	0x03551FA0 STP X0, X8, [X31 + 0x8]
	0x03551FA4 ADD X0, X31, 0x8
	0x03551FA8 MOV X1, X31
	0x03551FAC STR W23, [X31 + 0x18]
	0x03551FB0 BL 0x33B162C
	0x03551FB4 MOV X19, X0
	0x03551FB8 ADRP X0, 0xBE4000
	0x03551FBC LDR X0, [X0 + 0x260]
	0x03551FC0 BL 0x1C16D08
	0x03551FC4 MOV X20, X0
	0x03551FC8 ADRP X0, 0xBA3000
	0x03551FCC LDR X0, [X0 + 0x608]
	0x03551FD0 BL 0x1C16D08
	0x03551FD4 MOV X2, X0
	0x03551FD8 MOV X0, X20
	0x03551FDC MOV X1, X19
	0x03551FE0 MOV X3, X31
	0x03551FE4 BL 0x32274B8
	0x03551FE8 MOV X19, X0
	0x03551FEC ADRP X0, 0xBAA000
	0x03551FF0 LDR X0, [X0 + 0x760]
	0x03551FF4 BL 0x1C16D08
	0x03551FF8 BL 0x1C16F10
	0x03551FFC MOV X20, X0
	0x03552000 ADRP X0, 0xBE3000
	0x03552004 LDR X0, [X0 + 0x268]
	0x03552008 B 0x3552084
	0x0355200C ADRP X0, 0xBE3000
	0x03552010 LDR X0, [X0 + 0x270]
	0x03552014 BL 0x1C16D08
	0x03552018 MOVN X8, 0x0
	0x0355201C STP X0, X8, [X31 + 0x8]
	0x03552020 ADD X0, X31, 0x8
	0x03552024 MOV X1, X31
	0x03552028 STR W20, [X31 + 0x18]
	0x0355202C BL 0x33B162C
	0x03552030 MOV X19, X0
	0x03552034 ADRP X0, 0xBE3000
	0x03552038 LDR X0, [X0 + 0x278]
	0x0355203C BL 0x1C16D08
	0x03552040 MOV X20, X0
	0x03552044 ADRP X0, 0xBA2000
	0x03552048 LDR X0, [X0 + 0x608]
	0x0355204C BL 0x1C16D08
	0x03552050 MOV X2, X0
	0x03552054 MOV X0, X20
	0x03552058 MOV X1, X19
	0x0355205C MOV X3, X31
	0x03552060 BL 0x32274B8
	0x03552064 MOV X19, X0
	0x03552068 ADRP X0, 0xBA9000
	0x0355206C LDR X0, [X0 + 0x760]
	0x03552070 BL 0x1C16D08
	0x03552074 BL 0x1C16F10
	0x03552078 MOV X20, X0
	0x0355207C ADRP X0, 0xBE3000
	0x03552080 LDR X0, [X0 + 0x280]
	0x03552084 BL 0x1C16D08
	0x03552088 MOV X1, X0
	0x0355208C MOV X0, X20
	0x03552090 MOV X2, X19
	0x03552094 MOV X3, X31
	0x03552098 BL 0x3311888
	0x0355209C ADRP X0, 0xBE3000
	0x035520A0 LDR X0, [X0 + 0x240]
	0x035520A4 BL 0x1C16D08
	0x035520A8 MOV X1, X0
	0x035520AC MOV X0, X20
	0x035520B0 BL 0x1C16DEC
	0x035520B4 SUB X31, X31, 0x50
	0x035520B8 STP X30, X25, [X31 + 0x10]
	0x035520BC STP X24, X23, [X31 + 0x20]
	0x035520C0 STP X22, X21, [X31 + 0x30]
	0x035520C4 STP X20, X19, [X31 + 0x40]
	0x035520C8 ADRP X21, 0xE8D000
	0x035520CC ADRP X19, 0xBC9000
	0x035520D0 LDRB W8, [X21 + 0xD60]
	0x035520D4 LDR X19, [X19 + 0x850]
	0x035520D8 MOV W20, W2
	0x035520DC MOV W22, W1
	0x035520E0 MOV W24, W0
	0x035520E4 TBNZ X8, 0x0, 0x3552138
	0x035520E8 ADRP X0, 0xBE3000
	0x035520EC LDR X0, [X0 + 0x288]
	0x035520F0 BL 0x1C16CF4
	0x035520F4 ADRP X0, 0xBC9000
	0x035520F8 LDR X0, [X0 + 0x850]
	0x035520FC BL 0x1C16CF4
	0x03552100 ADRP X0, 0xBA1000
	0x03552104 LDR X0, [X0 + 0x9D0]
	0x03552108 BL 0x1C16CF4
	0x0355210C ADRP X0, 0xBE3000
	0x03552110 LDR X0, [X0 + 0x248]
	0x03552114 BL 0x1C16CF4
	0x03552118 ADRP X0, 0xBCA000
	0x0355211C LDR X0, [X0 + 0xE00]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE8F000
	007 Move W8, [X21+3272]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xBA4000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0xBA3000
	018 Move X0, [X0+1824]
	019 Call 0x1C17CF4
	020 Move X0, 0xBA5000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3272], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Move [X31+8], X31
	028 Call Object..ctor, X0
	029 Compare X20, 0
	030 JumpIfEqual {135}
	031 Move X0, [X20+32]
	032 Compare X0, 0
	033 JumpIfEqual {135}
	034 Add X2, X31, 8
	035 Move W1, 209
	036 Move X3, X31
	037 Call ParameterDictionary.TryGetValue, X0, X1, X2
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {52}
	042 Move X8, [X31+8]
	043 Compare X8, 0
	044 JumpIfEqual {51}
	045 Move X9, 0xBA5000
	046 Move X9, [X9+632]
	047 Move X10, [X8]
	048 Move X9, [X9]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move [X19+16], X8
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W8, TEMP
	055 Move [X19+24], W8
	056 Move X0, [X20+32]
	057 Compare X0, 0
	058 JumpIfEqual {135}
	059 Add X2, X31, 8
	060 Move W1, 207
	061 Move X3, X31
	062 Call ParameterDictionary.TryGetValue, X0, X1, X2
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {80}
	067 Move X0, [X31+8]
	068 Compare X0, 0
	069 JumpIfEqual {135}
	070 Move X8, 0xBA3000
	071 Move X8, [X8+2520]
	072 Move X9, [X0]
	073 Move X1, [X8]
	074 Move X8, [X9+64]
	075 Move X9, [X1+64]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Call 0x1C17E08
	078 Move W8, [X0]
	079 Move [X19+24], W8
	080 Move X0, [X20+32]
	081 Compare X0, 0
	082 JumpIfEqual {135}
	083 Add X2, X31, 8
	084 Move W1, 208
	085 Move X3, X31
	086 Call ParameterDictionary.TryGetValue, X0, X1, X2
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {108}
	091 Move X8, [X31+8]
	092 Compare X8, 0
	093 JumpIfEqual {107}
	094 Move X9, 0xBA2000
	095 Move X9, [X9+1824]
	096 Move X10, [X8]
	097 Move X9, [X9]
	098 Move W12, [X10+304]
	099 Move W11, [X9+304]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, X31
	102 Move X10, [X10+200]
	103 Add X10, X10, X11
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSEL not yet implemented."
	107 Move [X19+40], X8
	108 Move X0, [X20+32]
	109 Compare X0, 0
	110 JumpIfEqual {135}
	111 Add X2, X31, 8
	112 Move W1, 206
	113 Move X3, X31
	114 Call ParameterDictionary.TryGetValue, X0, X1, X2
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {129}
	119 Move X8, [X31+8]
	120 Compare X8, 0
	121 JumpIfEqual {128}
	122 Move X9, 0xBA4000
	123 Move X9, [X9+632]
	124 Move X10, [X8]
	125 Move X9, [X9]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 Move [X19+32], X8
	129 Move X20, [X31+32]
	130 Move X19, [X31+40]
	131 Move X30, [X31+16]
	132 Move X21, [X31+24]
	133 Add X31, X31, 48
	134 Return 
	135 Call 0x1C17F20
	136 Call 0x1C181E0

Method: System.String ToStringFull()

Disassembly:
	0x03552120 BL 0x1C16CF4
	0x03552124 ADRP X0, 0xBE3000
	0x03552128 LDR X0, [X0 + 0x290]
	0x0355212C BL 0x1C16CF4
	0x03552130 MOVZ W8, 0x1
	0x03552134 STRB W8, [X21 + 0xD60]
	0x03552138 ADRP X21, 0xBA1000
	0x0355213C LDR X21, [X21 + 0x9D0]
	0x03552140 MOV W0, W22
	0x03552144 BL 0x3552EB8
	0x03552148 LDR X8, [X19]
	0x0355214C MOV W19, W0
	0x03552150 LDR W9, [X8 + 0xE0]
	0x03552154 CBNZ W9, 0x3552160
	0x03552158 MOV X0, X8
	0x0355215C BL 0x1C16DFC
	0x03552160 MOV W0, W19
	0x03552164 MOV X1, X31
	0x03552168 BL 0x32C098C
	0x0355216C MOV W1, W24
	0x03552170 MOV W2, W22
	0x03552174 MOV W3, W20
	0x03552178 MOV X19, X0
	0x0355217C BL 0x3552F34
	0x03552180 LDR X8, [X21]
	0x03552184 MOV W21, W0
	0x03552188 MOVZ W1, 0x4
	0x0355218C MOV X0, X8
	0x03552190 BL 0x1C16D6C
	0x03552194 MOV X23, X0
	0x03552198 CBZ X0, 0x35522C0
	0x0355219C ADRP X25, 0xBE3000
	0x035521A0 LDR X25, [X25 + 0x290]
	0x035521A4 LDR X0, [X25]
	0x035521A8 CBZ X0, 0x35521BC
	0x035521AC LDR X8, [X23]
	0x035521B0 LDR X1, [X8 + 0x40]
	0x035521B4 BL 0x1C16E00
	0x035521B8 CBZ X0, 0x35522D4
	0x035521BC LDR W8, [X23 + 0x18]
	0x035521C0 CBZ W8, 0x35522C4
	0x035521C4 LDR X8, [X25]
	0x035521C8 ADRP X9, 0xBCA000
	0x035521CC LDR X9, [X9 + 0xE00]
	0x035521D0 STR X8, [X23 + 0x20]
	0x035521D4 STR W24, [X31 + 0xC]
	0x035521D8 LDR X0, [X9]
	0x035521DC ADD X1, X31, 0xC
	0x035521E0 BL 0x1C16E04
	0x035521E4 MOV X24, X0
	0x035521E8 CBZ X0, 0x3552200
	0x035521EC LDR X8, [X23]
	0x035521F0 LDR X1, [X8 + 0x40]
	0x035521F4 MOV X0, X24
	0x035521F8 BL 0x1C16E00
	0x035521FC CBZ X0, 0x35522E0
	0x03552200 LDR W8, [X23 + 0x18]
	0x03552204 CMP W8, 0x1
	0x03552208 B.LS 0x35522C8
	0x0355220C ADRP X8, 0xBE3000
	0x03552210 LDR X8, [X8 + 0x288]
	0x03552214 STR X24, [X23 + 0x28]
	0x03552218 STR W22, [X31 + 0x8]
	0x0355221C LDR X0, [X8]
	0x03552220 ADD X1, X31, 0x8
	0x03552224 BL 0x1C16E04
	0x03552228 MOV X22, X0
	0x0355222C CBZ X0, 0x3552244
	0x03552230 LDR X8, [X23]
	0x03552234 LDR X1, [X8 + 0x40]
	0x03552238 MOV X0, X22
	0x0355223C BL 0x1C16E00
	0x03552240 CBZ X0, 0x35522EC
	0x03552244 LDR W8, [X23 + 0x18]
	0x03552248 CMP W8, 0x2
	0x0355224C B.LS 0x35522CC
	0x03552250 ADRP X8, 0xBE3000
	0x03552254 LDR X8, [X8 + 0x248]
	0x03552258 STR X22, [X23 + 0x30]
	0x0355225C STR W20, [X31 + 0x4]
	0x03552260 LDR X0, [X8]
	0x03552264 ADD X1, X31, 0x4
	0x03552268 BL 0x1C16E04
	0x0355226C MOV X20, X0
	0x03552270 CBZ X0, 0x3552288
	0x03552274 LDR X8, [X23]
	0x03552278 LDR X1, [X8 + 0x40]
	0x0355227C MOV X0, X20
	0x03552280 BL 0x1C16E00
	0x03552284 CBZ X0, 0x35522F8
	0x03552288 LDR W8, [X23 + 0x18]
	0x0355228C CMP W8, 0x3
	0x03552290 B.LS 0x35522D0
	0x03552294 STR X20, [X23 + 0x38]
	0x03552298 MOV W0, W21
	0x0355229C MOV X1, X23
	0x035522A0 BL 0x355361C
	0x035522A4 MOV X0, X19
	0x035522A8 LDP X20, X19, [X31 + 0x40]
	0x035522AC LDP X22, X21, [X31 + 0x30]
	0x035522B0 LDP X24, X23, [X31 + 0x20]
	0x035522B4 LDP X30, X25, [X31 + 0x10]
	0x035522B8 ADD X31, X31, 0x50
	0x035522BC RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE8E000
	007 Move X21, 0xBA2000
	008 Move W8, [X20+3273]
	009 Move X21, [X21+2512]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xBA2000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0xBA2000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0xBAA000
	022 Move X0, [X0+3680]
	023 Call 0x1C17CF4
	024 Move X0, 0xBAB000
	025 Move X0, [X0+2920]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3273], W8
	029 Move X0, [X21]
	030 Move W1, 4
	031 Call 0x1C17D6C
	032 Compare X0, 0
	033 JumpIfEqual {119}
	034 Move X21, [X19+16]
	035 Move X20, X0
	036 Compare X21, 0
	037 JumpIfEqual {44}
	038 Move X8, [X20]
	039 Move X0, X21
	040 Move X1, [X8+64]
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfEqual {116}
	044 Move W8, [X20+24]
	045 Compare W8, 0
	046 JumpIfEqual {115}
	047 Move X8, 0xBAA000
	048 Move X8, [X8+3680]
	049 Move [X20+32], X21
	050 Move X21, [X19+40]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move W1, 1
	057 Move X0, X21
	058 Move X2, X31
	059 Call SupportClass.DictionaryToString, X0, X1
	060 Move X21, X0
	061 Compare X0, 0
	062 JumpIfEqual {69}
	063 Move X8, [X20]
	064 Move X0, X21
	065 Move X1, [X8+64]
	066 Call 0x1C17E00
	067 Compare X0, 0
	068 JumpIfEqual {116}
	069 Move W8, [X20+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, 0xBA2000
	072 Move X8, [X8+1880]
	073 Move [X20+40], X21
	074 Move W9, [X19+24]
	075 Add X1, X31, 12
	076 Move X0, [X8]
	077 Move [X31+12], W9
	078 Call 0x1C17E04
	079 Move X21, X0
	080 Compare X0, 0
	081 JumpIfEqual {88}
	082 Move X8, [X20]
	083 Move X0, X21
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {116}
	088 Move W8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X20+48], X21
	091 Move X19, [X19+32]
	092 Compare X19, 0
	093 JumpIfEqual {101}
	094 Move X8, [X20]
	095 Move X0, X19
	096 Move X1, [X8+64]
	097 Call 0x1C17E00
	098 Compare X0, 0
	099 JumpIfEqual {116}
	100 Move W8, [X20+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, 0xBAB000
	103 Move X8, [X8+2920]
	104 Move [X20+56], X19
	105 Move X1, X20
	106 Move X2, X31
	107 Move X0, [X8]
	108 Call String.Format, X0, X1
	109 Move X20, [X31+32]
	110 Move X19, [X31+40]
	111 Move X30, [X31+16]
	112 Move X21, [X31+24]
	113 Add X31, X31, 48
	114 Return X0
	115 Call 0x1C17F28
	116 Call 0x1C17F44
	117 Move X1, X31
	118 Call 0x1C17DEC
	119 Call 0x1C17F20

