Type: Photon.Realtime.RegionHandler

Method: System.Collections.Generic.List`1<Photon.Realtime.Region> get_EnabledRegions()

Disassembly:
	0x0354ADDC BL 0x2D27194
	0x0354ADE0 LDR X8, [X19 + 0x30]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_EnabledRegions(System.Collections.Generic.List`1<Photon.Realtime.Region> value)

Disassembly:
	0x0354ADE4 CBZ X8, 0x354AE54
	0x0354ADE8 LDP X1, X3, [X8 + 0x10]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: Photon.Realtime.Region get_BestRegion()

Disassembly:
	0x035456B8 MOV W21, W3
	0x035456BC MOV X20, X2
	0x035456C0 MOV X19, X1
	0x035456C4 TBNZ X8, 0x0, 0x3545730
	0x035456C8 ADRP X0, 0xBAE000
	0x035456CC LDR X0, [X0 + 0xB58]
	0x035456D0 BL 0x1C16CF4
	0x035456D4 ADRP X0, 0xBAF000
	0x035456D8 LDR X0, [X0 + 0x9D8]
	0x035456DC BL 0x1C16CF4
	0x035456E0 ADRP X0, 0xBB7000
	0x035456E4 LDR X0, [X0 + 0x618]
	0x035456E8 BL 0x1C16CF4
	0x035456EC ADRP X0, 0xBEF000
	0x035456F0 LDR X0, [X0 + 0xBA8]
	0x035456F4 BL 0x1C16CF4
	0x035456F8 ADRP X0, 0xBB6000
	0x035456FC LDR X0, [X0 + 0xDA0]
	0x03545700 BL 0x1C16CF4
	0x03545704 ADRP X0, 0xBAE000
	0x03545708 LDR X0, [X0 + 0x758]
	0x0354570C BL 0x1C16CF4
	0x03545710 ADRP X0, 0xBEF000
	0x03545714 LDR X0, [X0 + 0xFA8]
	0x03545718 BL 0x1C16CF4
	0x0354571C ADRP X0, 0xBAE000
	0x03545720 LDR X0, [X0 + 0xAC8]
	0x03545724 BL 0x1C16CF4
	0x03545728 MOVZ W8, 0x1
	0x0354572C STRB W8, [X22 + 0xC44]
	0x03545730 ADRP X22, 0xBB6000
	0x03545734 LDR X22, [X22 + 0xDA0]
	0x03545738 CBNZ X20, 0x3545754
	0x0354573C ADRP X8, 0xBEF000
	0x03545740 LDR X8, [X8 + 0xFA8]
	0x03545744 LDR X0, [X8]
	0x03545748 BL 0x1C16F10
	0x0354574C MOV X20, X0
	0x03545750 BL 0x3545AC4
	0x03545754 LDR X0, [X22]
	0x03545758 BL 0x1C16F10
	0x0354575C MOV X1, X31
	0x03545760 MOV X22, X0
	0x03545764 BL 0x34ED7D8
	0x03545768 CBZ X20, 0x3545AC0
	0x0354576C ADRP X24, 0xBAE000
	0x03545770 LDR X24, [X24 + 0xB58]
	0x03545774 LDRB W8, [X20 + 0x11]
	0x03545778 ADD X1, X31, 0x8
	0x0354577C LDR X0, [X24]
	0x03545780 STRB W8, [X31 + 0x8]
	0x03545784 BL 0x1C16E04
	0x03545788 CBZ X22, 0x3545AC0
	0x0354578C ADRP X23, 0xBEF000
	0x03545790 LDR X23, [X23 + 0xBA8]
	0x03545794 MOV X2, X0
	0x03545798 MOVZ W1, 0xFD
	0x0354579C MOV X0, X22
	0x035457A0 MOV X3, X31
	0x035457A4 BL 0x34ED9F4
	0x035457A8 LDRB W8, [X20 + 0x10]
	0x035457AC LDR X0, [X24]
	0x035457B0 ADD X1, X31, 0xC
	0x035457B4 STRB W8, [X31 + 0xC]
	0x035457B8 BL 0x1C16E04
	0x035457BC MOV X2, X0
	0x035457C0 MOVZ W1, 0xFE
	0x035457C4 MOV X0, X22
	0x035457C8 MOV X3, X31
	0x035457CC BL 0x34ED9F4
	0x035457D0 LDR X2, [X20 + 0x30]
	0x035457D4 CBNZ X2, 0x35457F0
	0x035457D8 ADRP X8, 0xBAE000
	0x035457DC LDR X8, [X8 + 0xAC8]
	0x035457E0 MOV W1, W31
	0x035457E4 LDR X0, [X8]
	0x035457E8 BL 0x1C16D6C
	0x035457EC MOV X2, X0
	0x035457F0 MOVZ W1, 0xFA
	0x035457F4 MOV X0, X22
	0x035457F8 MOV X3, X31
	0x035457FC BL 0x34ED9F4
	0x03545800 LDR X0, [X23]
	0x03545804 LDR X23, [X20 + 0x28]
	0x03545808 LDR W8, [X0 + 0xE0]
	0x0354580C CBNZ W8, 0x3545814
	0x03545810 BL 0x1C16DFC
	0x03545814 ADRP X25, 0xBAE000
	0x03545818 LDR X25, [X25 + 0x758]
	0x0354581C MOV X0, X22
	0x03545820 MOV X1, X23
	0x03545824 BL 0x3536EF8
	0x03545828 LDR W8, [X20 + 0x14]
	0x0354582C CMP W8, 0x1
	0x03545830 B.LT 0x3545894
	0x03545834 ADRP X9, 0xBAF000
	0x03545838 LDR X9, [X9 + 0x9D8]
	0x0354583C CMP W8, 0x100
	0x03545840 ADD X1, X31, 0xC
	0x03545844 LDR X0, [X9]
	0x03545848 MOVZ W9, 0x100
	0x0354584C CSEL W8, W8, W9, LT
	0x03545850 STRB W8, [X31 + 0xC]
	0x03545854 BL 0x1C16E04
	0x03545858 MOV X2, X0
	0x0354585C MOVZ W1, 0xFF
	0x03545860 MOV X0, X22
	0x03545864 MOV X3, X31
	0x03545868 BL 0x34ED9F4
	0x0354586C LDR W8, [X20 + 0x14]
	0x03545870 LDR X0, [X25]
	0x03545874 ADD X1, X31, 0x8
	0x03545878 STR W8, [X31 + 0x8]
	0x0354587C BL 0x1C16E04
	0x03545880 MOV X2, X0
	0x03545884 MOVZ W1, 0xF3
	0x03545888 MOV X0, X22
	0x0354588C MOV X3, X31
	0x03545890 BL 0x34ED9F4
	0x03545894 CBZ X19, 0x3545AC0
	0x03545898 ADRP X23, 0xBB7000
	0x0354589C LDR X23, [X23 + 0x618]
	0x035458A0 ANDS W31, W21, 0x1
	0x035458A4 MOVN W8, 0x7
	0x035458A8 MOVN W9, 0x4
	0x035458AC LDR X3, [X23]
	0x035458B0 CSEL W1, W9, W8, NE
	0x035458B4 MOV X0, X19
	0x035458B8 MOV X2, X22
	0x035458BC BL 0x29D3520
	0x035458C0 LDRB W8, [X20 + 0x20]
	0x035458C4 CBZ W8, 0x35458F8
	0x035458C8 LDR X0, [X24]
	0x035458CC MOVZ W8, 0x1
	0x035458D0 ADD X1, X31, 0x8
	0x035458D4 STRB W8, [X31 + 0x8]
	0x035458D8 BL 0x1C16E04
	0x035458DC LDR X3, [X23]
	0x035458E0 MOV X2, X0
	0x035458E4 MOVZ W1, 0xF1
	0x035458E8 MOV X0, X19
	0x035458EC BL 0x29D3520
	0x035458F0 MOVZ W21, 0x3
	0x035458F4 B 0x3545944
	0x035458F8 LDR X0, [X24]
	0x035458FC ADD X1, X31, 0x8
	0x03545900 STRB W31, [X31 + 0x8]
	0x03545904 BL 0x1C16E04
	0x03545908 LDR X3, [X23]
	0x0354590C MOV X2, X0
	0x03545910 MOVZ W1, 0xF1
	0x03545914 MOV X0, X19
	0x03545918 BL 0x29D3520
	0x0354591C LDR X0, [X24]
	0x03545920 ADD X1, X31, 0xC
	0x03545924 STRB W31, [X31 + 0xC]
	0x03545928 BL 0x1C16E04
	0x0354592C MOV X2, X0
	0x03545930 MOVZ W1, 0xF9
	0x03545934 MOV X0, X22
	0x03545938 MOV X3, X31
	0x0354593C BL 0x34ED9F4
	0x03545940 MOVZ W21, 0x1
	0x03545944 LDR X0, [X24]
	0x03545948 MOVZ W8, 0x1
	0x0354594C ADD X1, X31, 0x8
	0x03545950 STRB W8, [X31 + 0x8]
	0x03545954 BL 0x1C16E04
	0x03545958 LDR X3, [X23]
	0x0354595C MOV X2, X0
	0x03545960 MOVZ W1, 0xE8
	0x03545964 MOV X0, X19
	0x03545968 BL 0x29D3520
	0x0354596C LDR W8, [X20 + 0x18]
	0x03545970 CMP W8, 0x0
	0x03545974 B.GT 0x3545980
	0x03545978 ADDS W31, W8, 0x1
	0x0354597C B.NE 0x35459A4
	0x03545980 LDR X0, [X25]
	0x03545984 ADD X1, X31, 0x8
	0x03545988 STR W8, [X31 + 0x8]
	0x0354598C BL 0x1C16E04
	0x03545990 LDR X3, [X23]
	0x03545994 MOV X2, X0
	0x03545998 MOVZ W1, 0xEB
	0x0354599C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X20, 0xE9B000
	009 Move W8, [X20+3185]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0xBF0000
	016 Move X0, [X0+3888]
	017 Call 0x1C17CF4
	018 Move X0, 0xBF0000
	019 Move X0, [X0+3896]
	020 Call 0x1C17CF4
	021 Move X0, 0xBF0000
	022 Move X0, [X0+3904]
	023 Call 0x1C17CF4
	024 Move X0, 0xBF0000
	025 Move X0, [X0+3912]
	026 Call 0x1C17CF4
	027 Move X0, 0xBF0000
	028 Move X0, [X0+3920]
	029 Call 0x1C17CF4
	030 Move X0, 0xBF0000
	031 Move X0, [X0+3928]
	032 Call 0x1C17CF4
	033 Move X0, 0xBF0000
	034 Move X0, [X0+3936]
	035 Call 0x1C17CF4
	036 Move X0, 0xBF0000
	037 Move X0, [X0+3944]
	038 Call 0x1C17CF4
	039 Move X0, 0xBF0000
	040 Move X0, [X0+3952]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+3185], W8
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Move [X31+48], X31
	047 Move X21, [X19+16]
	048 Compare X21, 0
	049 JumpIfEqual {156}
	050 Move X20, [X19+32]
	051 Compare X20, 0
	052 JumpIfNotEqual {163}
	053 Move X23, 0xBF0000
	054 Move X23, [X23+3952]
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X23]
	061 Move X8, [X0+184]
	062 Move X20, [X8+8]
	063 Compare X20, 0
	064 JumpIfNotEqual {86}
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X23]
	070 Move X9, 0xBF0000
	071 Move X8, [X0+184]
	072 Move X9, [X9+3888]
	073 Move X22, [X8]
	074 Move X0, [X9]
	075 Call 0x1C17F10
	076 Move X8, 0xBF0000
	077 Move X8, [X8+3944]
	078 Move X1, X22
	079 Move X3, X31
	080 Move X20, X0
	081 Move X2, [X8]
	082 Call Comparison`1<Object>..ctor, X0, X1, X2
	083 Move X8, [X23]
	084 Move X8, [X8+184]
	085 Move [X8+8], X20
	086 Move X8, 0xBF0000
	087 Move X8, [X8+3928]
	088 Move X0, X21
	089 Move X1, X20
	090 Move X2, [X8]
	091 Call List`1<Object>.Sort, X0, X1
	092 Move X0, [X19+16]
	093 Compare X0, 0
	094 JumpIfEqual {173}
	095 Move X20, 0xBF0000
	096 Move X20, [X20+3936]
	097 Move W1, W31
	098 Move X2, [X20]
	099 Call List`1<Object>.get_Item, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {173}
	102 Move V0, [X0+40]
	103 Move V1, [X19+76]
	104 Move W8, 0x7F800000
	105 Move X0, [X19+16]
	106 NotImplemented "Instruction SCVTF not yet implemented."
	107 Move S2, W8
	108 Multiply S0, S1, S0
	109 NotImplemented "Instruction FCVTZS not yet implemented."
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move W9, 0x80000000
	112 NotImplemented "Instruction CSEL not yet implemented."
	113 Compare X0, 0
	114 JumpIfEqual {173}
	115 Move X2, [X20]
	116 Move W1, W31
	117 Call List`1<Object>.get_Item, X0, X1
	118 Move X9, [X19+16]
	119 Compare X9, 0
	120 JumpIfEqual {173}
	121 Move X8, 0xBF0000
	122 Move X8, [X8+3920]
	123 Move X20, X0
	124 Move X0, X9
	125 Move X1, [X8]
	126 Add X8, X31, 8
	127 Call List`1<Object>.GetEnumerator, X0
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move X8, [X31+24]
	130 Move X22, 0xBF0000
	131 Move [X31+2], V0
	132 Move [X31+48], X8
	133 Move X22, [X22+3904]
	134 Move X1, [X22]
	135 Add X0, X31, 32
	136 Call Enumerator<Object>.MoveNext, X0
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {157}
	141 Move X23, [X31+48]
	142 Compare X23, 0
	143 JumpIfEqual {172}
	144 Move W8, [X23+40]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Compare X20, 0
	147 JumpIfEqual {175}
	148 Move X0, [X23+16]
	149 Compare X0, 0
	150 JumpIfEqual {174}
	151 Move X1, [X20+16]
	152 Move X2, X31
	153 Call String.CompareTo, X0, X1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CSEL not yet implemented."
	156 Move X20, X31
	157 Move X8, 0xBF0000
	158 Move X8, [X8+3896]
	159 Add X0, X31, 32
	160 Move X1, [X8]
	161 Call Enumerator<Object>.Dispose, X0
	162 Move [X19+32], X20
	163 Move X0, X20
	164 Move X20, [X31+96]
	165 Move X19, [X31+104]
	166 Move X22, [X31+80]
	167 Move X21, [X31+88]
	168 Move X30, [X31+64]
	169 Move X23, [X31+72]
	170 Add X31, X31, 112
	171 Return X0
	172 Call 0x1C17F20
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Move X21, X0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X21
	179 Call 0x3EB2AD0
	180 Move X22, [X0]
	181 Call 0x3EB2AE0
	182 Move X8, 0xBF0000
	183 Move X8, [X8+3896]
	184 Add X0, X31, 32
	185 Move X1, [X8]
	186 Call Enumerator<Object>.Dispose, X0
	187 Compare X22, 0
	188 JumpIfEqual {162}
	189 Move X0, X22
	190 Call 0x1C17F18
	191 Move X22, X31
	192 Move X21, X0
	193 Move X8, 0xBF0000
	194 Move X8, [X8+3896]
	195 Move X1, [X8]
	196 Add X0, X31, 32
	197 Call Enumerator<Object>.Dispose, X0
	198 Compare X22, 0
	199 JumpIfNotEqual {202}
	200 Move X0, X21
	201 Call 0x1D2D690
	202 Move X0, X22
	203 Call 0x1C17F18
	204 Call 0x1991590

Method: System.String get_SummaryToCache()

Disassembly:
	0x03545558 MOV X2, X21
	0x0354555C BLR X8
	0x03545560 LDP X20, X19, [X31 + 0x20]
	0x03545564 LDP X22, X21, [X31 + 0x10]
	0x03545568 AND W0, W0, 0x1
	0x0354556C LDR X30, [X31], #0x30
	0x03545570 RET
	0x03545574 BL 0x1C16F20
	0x03545578 LDR X0, [X0 + 0x10]
	0x0354557C MOV X1, X31
	0x03545580 B 0x32277A8
	0x03545584 STP X30, X21, [X31 - 0x20]!
	0x03545588 STP X20, X19, [X31 + 0x10]
	0x0354558C ADRP X20, 0xE9A000
	0x03545590 LDRB W8, [X20 + 0xC43]
	0x03545594 MOV X19, X0
	0x03545598 TBNZ X8, 0x0, 0x35455C8
	0x0354559C ADRP X0, 0xBB6000
	0x035455A0 LDR X0, [X0 + 0xBC8]
	0x035455A4 BL 0x1C16CF4
	0x035455A8 ADRP X0, 0xBB7000
	0x035455AC LDR X0, [X0 + 0x548]
	0x035455B0 BL 0x1C16CF4
	0x035455B4 ADRP X0, 0xBB7000
	0x035455B8 LDR X0, [X0 + 0x628]
	0x035455BC BL 0x1C16CF4
	0x035455C0 MOVZ W8, 0x1
	0x035455C4 STRB W8, [X20 + 0xC43]
	0x035455C8 LDRB W8, [X19 + 0x40]
	0x035455CC CMP W8, 0x3
	0x035455D0 B.CC 0x3545650
	0x035455D4 LDR X20, [X19 + 0x48]
	0x035455D8 CBZ X20, 0x3545698
	0x035455DC ADRP X9, 0xBB6000
	0x035455E0 LDR X8, [X20]
	0x035455E4 LDR X9, [X9 + 0xBC8]
	0x035455E8 ADRP X10, 0xBB7000
	0x035455EC LDR X1, [X9]
	0x035455F0 LDR X10, [X10 + 0x628]
	0x035455F4 LDRH W9, [X8 + 0x12E]
	0x035455F8 LDR X21, [X10]
	0x035455FC CBZ X9, 0x3545620
	0x03545600 LDR X10, [X8 + 0xB0]
	0x03545604 ADD X10, X10, 0x8
	0x03545608 LDUR X11, [X10 - 0x8]
	0x0354560C CMP X11, X1
	0x03545610 B.EQ 0x3545630
	0x03545614 SUBS X9, X9, 0x1
	0x03545618 ADD X10, X10, 0x10
	0x0354561C B.NE 0x3545608
	0x03545620 MOV X0, X20
	0x03545624 MOV W2, W31
	0x03545628 BL 0x1C5C788
	0x0354562C B 0x354563C
	0x03545630 LDRSW X9, [X10]
	0x03545634 ADD X8, X8, X9, 0x4, LSL
	0x03545638 ADD X0, X8, 0x138
	0x0354563C LDP X8, X3, [X0]
	0x03545640 MOVZ W1, 0x3
	0x03545644 MOV X0, X20
	0x03545648 MOV X2, X21
	0x0354564C BLR X8
	0x03545650 ADRP X20, 0xBB7000
	0x03545654 LDR X20, [X20 + 0x548]
	0x03545658 LDR X0, [X20]
	0x0354565C LDR W8, [X0 + 0xE0]
	0x03545660 CBNZ W8, 0x354566C
	0x03545664 BL 0x1C16DFC
	0x03545668 LDR X0, [X20]
	0x0354566C LDR X8, [X0 + 0xB8]
	0x03545670 LDR X9, [X19]
	0x03545674 MOV X0, X19
	0x03545678 LDP X20, X19, [X31 + 0x10]
	0x0354567C LDR X3, [X8]
	0x03545680 LDR X5, [X9 + 0x228]
	0x03545684 LDR X4, [X9 + 0x230]
	0x03545688 MOVZ W1, 0xE4
	0x0354568C MOV X2, X31
	0x03545690 LDP X30, X21, [X31], #0x20
	0x03545694 BR X5
	0x03545698 BL 0x1C16F20
	0x0354569C SUB X31, X31, 0x50
	0x035456A0 STP X30, X25, [X31 + 0x10]
	0x035456A4 STP X24, X23, [X31 + 0x20]
	0x035456A8 STP X22, X21, [X31 + 0x30]
	0x035456AC STP X20, X19, [X31 + 0x40]
	0x035456B0 ADRP X22, 0xE9A000
	0x035456B4 LDRB W8, [X22 + 0xC44]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE9B000
	007 Move W8, [X20+3186]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xBF0000
	014 Move X0, [X0+3640]
	015 Call 0x1C17CF4
	016 Move X0, 0xBAF000
	017 Move X0, [X0+2760]
	018 Call 0x1C17CF4
	019 Move X0, 0xBB8000
	020 Move X0, [X0+2120]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3186], W8
	024 Move X0, X19
	025 Call RegionHandler.get_BestRegion, X0
	026 Compare X0, 0
	027 JumpIfEqual {88}
	028 Move X0, X19
	029 Call RegionHandler.get_BestRegion, X0
	030 Compare X0, 0
	031 JumpIfEqual {95}
	032 Move X21, 0xBF0000
	033 Move X21, [X21+3640]
	034 Move X8, X0
	035 Move W20, [X8+40]
	036 Move X0, [X21]
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Move X8, [X0+184]
	043 Move W8, [X8+4]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0xBAF000
	046 Move X8, [X8+2760]
	047 Move W1, 5
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Move X20, X0
	051 Move X0, X19
	052 Call RegionHandler.get_BestRegion, X0
	053 Compare X0, 0
	054 JumpIfEqual {95}
	055 Compare X20, 0
	056 JumpIfEqual {95}
	057 Move W8, [X20+24]
	058 Compare W8, 0
	059 JumpIfEqual {96}
	060 Move X9, [X0+16]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X20+32], X9
	063 Move X21, 0xBB8000
	064 Move X21, [X21+2120]
	065 Move X0, X19
	066 Move X8, [X21]
	067 Move [X20+40], X8
	068 Call RegionHandler.get_BestRegion, X0
	069 Compare X0, 0
	070 JumpIfEqual {95}
	071 Move W8, [X0+40]
	072 Add X0, X31, 12
	073 Move X1, X31
	074 Move [X31+12], W8
	075 Call Int32.ToString, X0
	076 Move W8, [X20+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X20+48], X0
	080 Move X9, [X21]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X20+56], X9
	083 Move X8, [X19+24]
	084 Move X0, X20
	085 Move X1, X31
	086 Move [X20+64], X8
	087 Call String.Concat, X0
	088 Move X0, [X19+24]
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X30, [X31+16]
	092 Move X21, [X31+24]
	093 Add X31, X31, 48
	094 Return X0
	095 Call 0x1C17F20
	096 Call 0x1C17F28

Method: System.String GetResults()

Disassembly:
	0x0354ADEC ADRP X8, 0xBB2000
	0x0354ADF0 ADRP X9, 0xBA9000
	0x0354ADF4 LDR X8, [X8 + 0x960]
	0x0354ADF8 LDR X9, [X9 + 0xDE0]
	0x0354ADFC MOV X4, X31
	0x0354AE00 LDR X0, [X8]
	0x0354AE04 LDR X2, [X9]
	0x0354AE08 BL 0x32277C4
	0x0354AE0C ADRP X8, 0xBB1000
	0x0354AE10 LDR X8, [X8 + 0xE60]
	0x0354AE14 MOV X19, X0
	0x0354AE18 LDR X8, [X8]
	0x0354AE1C LDR W9, [X8 + 0xE0]
	0x0354AE20 CBNZ W9, 0x354AE2C
	0x0354AE24 MOV X0, X8
	0x0354AE28 BL 0x1C16DFC
	0x0354AE2C MOV X0, X20
	0x0354AE30 MOV W1, W31
	0x0354AE34 MOV X2, X19
	0x0354AE38 MOV X3, X31
	0x0354AE3C BL 0x351F6A0
	0x0354AE40 MOVZ W0, 0x1
	0x0354AE44 LDP X20, X19, [X31 + 0x20]
	0x0354AE48 LDP X22, X21, [X31 + 0x10]
	0x0354AE4C LDP X30, X23, [X31], #0x30
	0x0354AE50 RET
	0x0354AE54 BL 0x1C16F20
	0x0354AE58 B 0x354AE5C
	0x0354AE5C MOV X20, X0
	0x0354AE60 CMP W1, 0x1
	0x0354AE64 B.NE 0x354AEC0
	0x0354AE68 MOV X0, X20
	0x0354AE6C BL 0x3EB1AD0
	0x0354AE70 MOV X20, X0
	0x0354AE74 ADRP X0, 0xBAF000
	0x0354AE78 LDR X0, [X0 + 0xCC0]
	0x0354AE7C BL 0x1C16D08
	0x0354AE80 LDR X8, [X20]
	0x0354AE84 LDR X1, [X8]
	0x0354AE88 BL 0x1C17270
	0x0354AE8C TBZ X0, 0x0, 0x354AE98
	0x0354AE90 BL 0x3EB1AE0
	0x0354AE94 B 0x354ADB4
	0x0354AE98 MOVZ W0, 0x8
	0x0354AE9C BL 0x3EB1AF0
	0x0354AEA0 LDR X8, [X20]
	0x0354AEA4 STR X8, [X0]
	0x0354AEA8 ADRP X1, 0x96A000
	0x0354AEAC ADD X1, X1, 0xE58
	0x0354AEB0 MOV X2, X31
	0x0354AEB4 BL 0x3EB1B00
	0x0354AEB8 MOV X20, X0
	0x0354AEBC BL 0x3EB1AE0
	0x0354AEC0 MOV X0, X20
	0x0354AEC4 BL 0x1D2C690
	0x0354AEC8 BL 0x1990590
	0x0354AECC STR X30, [X31 - 0x40]!
	0x0354AED0 STP X24, X23, [X31 + 0x10]
	0x0354AED4 STP X22, X21, [X31 + 0x20]
	0x0354AED8 STP X20, X19, [X31 + 0x30]
	0x0354AEDC ADRP X19, 0xE95000
	0x0354AEE0 LDRB W8, [X19 + 0xC81]
	0x0354AEE4 MOV X20, X0
	0x0354AEE8 TBNZ X8, 0x0, 0x354AF24
	0x0354AEEC ADRP X0, 0xBAB000
	0x0354AEF0 LDR X0, [X0 + 0x278]
	0x0354AEF4 BL 0x1C16CF4
	0x0354AEF8 ADRP X0, 0xBB1000
	0x0354AEFC LDR X0, [X0 + 0xFD8]
	0x0354AF00 BL 0x1C16CF4
	0x0354AF04 ADRP X0, 0xBB1000
	0x0354AF08 LDR X0, [X0 + 0xFE0]
	0x0354AF0C BL 0x1C16CF4
	0x0354AF10 ADRP X0, 0xBB2000
	0x0354AF14 LDR X0, [X0 + 0x988]
	0x0354AF18 BL 0x1C16CF4
	0x0354AF1C MOVZ W8, 0x1
	0x0354AF20 STRB W8, [X19 + 0xC81]
	0x0354AF24 CBZ X20, 0x354B090
	0x0354AF28 ADRP X8, 0xBB1000
	0x0354AF2C LDR X8, [X8 + 0xFD8]
	0x0354AF30 MOV X0, X20
	0x0354AF34 MOV X2, X31
	0x0354AF38 LDR X1, [X8]
	0x0354AF3C BL 0x3226F64
	0x0354AF40 TBZ X0, 0x0, 0x354AF5C
	0x0354AF44 MOVZ W1, 0x6
	0x0354AF48 MOV X0, X20
	0x0354AF4C MOV X2, X31
	0x0354AF50 BL 0x322B484
	0x0354AF54 MOV X20, X0
	0x0354AF58 CBZ X0, 0x354B090
	0x0354AF5C ADRP X8, 0xBB1000
	0x0354AF60 LDR X8, [X8 + 0xFE0]
	0x0354AF64 ADRP X19, 0xBAB000
	0x0354AF68 MOV X0, X20
	0x0354AF6C MOV X2, X31
	0x0354AF70 LDR X1, [X8]
	0x0354AF74 LDR X19, [X19 + 0x278]
	0x0354AF78 BL 0x3226F64
	0x0354AF7C TBZ X0, 0x0, 0x354AF94
	0x0354AF80 MOVZ W1, 0x5
	0x0354AF84 MOV X0, X20
	0x0354AF88 MOV X2, X31
	0x0354AF8C BL 0x322B484
	0x0354AF90 MOV X20, X0
	0x0354AF94 LDR X8, [X19]
	0x0354AF98 LDR X8, [X8 + 0xB8]
	0x0354AF9C LDR X19, [X8]
	0x0354AFA0 MOV X0, X20
	0x0354AFA4 MOV X1, X31
	0x0354AFA8 BL 0x369B574
	0x0354AFAC MOV X20, X0
	0x0354AFB0 CBZ X0, 0x354B094
	0x0354AFB4 LDR X8, [X20 + 0x18]
	0x0354AFB8 CMP W8, 0x1
	0x0354AFBC B.NE 0x354AFDC
	0x0354AFC0 LDR X0, [X20 + 0x20]
	0x0354AFC4 CBZ X0, 0x354B098
	0x0354AFC8 LDR X8, [X0]
	0x0354AFCC LDP X9, X1, [X8 + 0x168]
	0x0354AFD0 BLR X9
	0x0354AFD4 MOV X19, X0
	0x0354AFD8 B 0x354B05C
	0x0354AFDC B.LT 0x354B05C
	0x0354AFE0 ADRP X24, 0xBB2000
	0x0354AFE4 LDR X24, [X24 + 0x988]
	0x0354AFE8 MOV X22, X31
	0x0354AFEC AND X8, X8, 0x0
	0x0354AFF0 ADD X23, X20, 0x20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0xE96000
	009 Move X20, 0xBAA000
	010 Move W8, [X21+3187]
	011 Move X20, [X20+2288]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xBEC000
	018 Move X0, [X0+64]
	019 Call 0x1C17CF4
	020 Move X0, 0xBEC000
	021 Move X0, [X0+72]
	022 Call 0x1C17CF4
	023 Move X0, 0xBEC000
	024 Move X0, [X0+80]
	025 Call 0x1C17CF4
	026 Move X0, 0xBEC000
	027 Move X0, [X0+88]
	028 Call 0x1C17CF4
	029 Move X0, 0xBAA000
	030 Move X0, [X0+2288]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB3000
	033 Move X0, [X0+2160]
	034 Call 0x1C17CF4
	035 Move X0, 0xBB3000
	036 Move X0, [X0+2168]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3187], W8
	040 Move X0, [X20]
	041 Move [X31+8], X31
	042 Move [X31+16], X31
	043 Move [X31+24], X31
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X20, X0
	047 Call StringBuilder..ctor, X0
	048 Move X0, X19
	049 Call RegionHandler.get_BestRegion, X0
	050 Compare X0, 0
	051 JumpIfEqual {115}
	052 Move W1, W31
	053 Call Region.ToString, X0, X1
	054 Compare X20, 0
	055 JumpIfEqual {115}
	056 Move X8, 0xBB3000
	057 Move X8, [X8+2160]
	058 Move X2, X0
	059 Move X0, X20
	060 Move X3, X31
	061 Move X1, [X8]
	062 Call StringBuilder.AppendFormat, X0, X1, X2
	063 Move X0, [X19+40]
	064 Compare X0, 0
	065 JumpIfEqual {115}
	066 Move X8, 0xBEC000
	067 Move X8, [X8+88]
	068 Move X22, 0xBEC000
	069 Move X23, 0xBB3000
	070 Move X21, 0xBEC000
	071 Move X1, [X8]
	072 Move X22, [X22+72]
	073 Move X23, [X23+2168]
	074 Move X21, [X21+64]
	075 Add X8, X31, 8
	076 Call List`1<Object>.GetEnumerator, X0
	077 Move X1, [X22]
	078 Add X0, X31, 8
	079 Call Enumerator<Object>.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {93}
	084 Move X0, [X31+24]
	085 Compare X0, 0
	086 JumpIfEqual {114}
	087 Move X1, X31
	088 Call RegionPinger.GetResults, X0
	089 Move X1, X0
	090 Move X0, X20
	091 Move X2, X31
	092 Call StringBuilder.AppendLine, X0, X1
	093 Move X1, [X21]
	094 Add X0, X31, 8
	095 Call Enumerator<Object>.Dispose, X0
	096 Move X2, [X19+64]
	097 Move X1, [X23]
	098 Move X0, X20
	099 Move X3, X31
	100 Call StringBuilder.AppendFormat, X0, X1, X2
	101 Move X8, [X20]
	102 Move X0, X20
	103 Move X9, [X8+360]
	104 Move X1, [X8+368]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X20, [X31+64]
	107 Move X19, [X31+72]
	108 Move X22, [X31+48]
	109 Move X21, [X31+56]
	110 Move X30, [X31+32]
	111 Move X23, [X31+40]
	112 Add X31, X31, 80
	113 Return X0
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Move X21, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X21
	119 Call 0x3EB2AD0
	120 Move X22, [X0]
	121 Call 0x3EB2AE0
	122 Move X8, 0xBEC000
	123 Move X8, [X8+64]
	124 Add X0, X31, 8
	125 Move X1, [X8]
	126 Call Enumerator<Object>.Dispose, X0
	127 Compare X22, 0
	128 JumpIfEqual {96}
	129 Move X0, X22
	130 Call 0x1C17F18
	131 Move X22, X31
	132 Move X21, X0
	133 Move X8, 0xBEC000
	134 Move X8, [X8+64]
	135 Move X1, [X8]
	136 Add X0, X31, 8
	137 Call Enumerator<Object>.Dispose, X0
	138 Compare X22, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X21
	141 Call 0x1D2D690
	142 Move X0, X22
	143 Call 0x1C17F18
	144 Call 0x1991590

Method: System.Void SetRegions(ExitGames.Client.Photon.OperationResponse opGetRegions)

Disassembly:
	0x03541718 B.NE 0x3541744
	0x0354171C MOV X0, X19
	0x03541720 BL 0x3EB1AD0
	0x03541724 LDR X20, [X0]
	0x03541728 BL 0x3EB1AE0
	0x0354172C LDR X1, [X21]
	0x03541730 ADD X0, X31, 0x8
	0x03541734 BL 0x2BC434C
	0x03541738 CBZ X20, 0x35416E8
	0x0354173C MOV X0, X20
	0x03541740 BL 0x1C16F18
	0x03541744 MOV X20, X31
	0x03541748 B 0x3541750
	0x0354174C MOV X19, X0
	0x03541750 LDR X1, [X21]
	0x03541754 ADD X0, X31, 0x8
	0x03541758 BL 0x2BC434C
	0x0354175C CBNZ X20, 0x3541768
	0x03541760 MOV X0, X19
	0x03541764 BL 0x1D2C690
	0x03541768 MOV X0, X20
	0x0354176C BL 0x1C16F18
	0x03541770 BL 0x1990590
	0x03541774 SUB X31, X31, 0x60
	0x03541778 STR X30, [X31 + 0x20]
	0x0354177C STP X24, X23, [X31 + 0x30]
	0x03541780 STP X22, X21, [X31 + 0x40]
	0x03541784 STP X20, X19, [X31 + 0x50]
	0x03541788 ADRP X21, 0xE9E000
	0x0354178C LDRB W8, [X21 + 0xC37]
	0x03541790 MOV X19, X1
	0x03541794 MOV X20, X0
	0x03541798 TBNZ X8, 0x0, 0x35417E0
	0x0354179C ADRP X0, 0xBF3000
	0x035417A0 LDR X0, [X0 + 0xE70]
	0x035417A4 BL 0x1C16CF4
	0x035417A8 ADRP X0, 0xBF3000
	0x035417AC LDR X0, [X0 + 0xE78]
	0x035417B0 BL 0x1C16CF4
	0x035417B4 ADRP X0, 0xBF3000
	0x035417B8 LDR X0, [X0 + 0xE80]
	0x035417BC BL 0x1C16CF4
	0x035417C0 ADRP X0, 0xBF3000
	0x035417C4 LDR X0, [X0 + 0xE88]
	0x035417C8 BL 0x1C16CF4
	0x035417CC ADRP X0, 0xBF3000
	0x035417D0 LDR X0, [X0 + 0xE90]
	0x035417D4 BL 0x1C16CF4
	0x035417D8 MOVZ W8, 0x1
	0x035417DC STRB W8, [X21 + 0xC37]
	0x035417E0 STP X31, X31, [X31 + 0x8]
	0x035417E4 STR X31, [X31 + 0x18]
	0x035417E8 LDR X0, [X20 + 0x28]
	0x035417EC CBZ X0, 0x35418C4
	0x035417F0 ADRP X24, 0xBF3000
	0x035417F4 ADRP X22, 0xBF3000
	0x035417F8 ADRP X23, 0xBF3000
	0x035417FC ADRP X21, 0xBF3000
	0x03541800 LDR X24, [X24 + 0xE90]
	0x03541804 LDR X22, [X22 + 0xE78]
	0x03541808 LDR X23, [X23 + 0xE88]
	0x0354180C LDR X21, [X21 + 0xE70]
	0x03541810 BL 0x35440C4
	0x03541814 LDR X1, [X24]
	0x03541818 ADD X8, X31, 0x8
	0x0354181C MOV X0, X20
	0x03541820 BL 0x301CB58
	0x03541824 LDR X1, [X22]
	0x03541828 ADD X0, X31, 0x8
	0x0354182C BL 0x2BC4350
	0x03541830 TBZ X0, 0x0, 0x354189C
	0x03541834 LDR X20, [X31 + 0x18]
	0x03541838 CBZ X20, 0x35418C0
	0x0354183C LDR X8, [X20]
	0x03541840 LDR X1, [X23]
	0x03541844 LDRH W9, [X8 + 0x12E]
	0x03541848 CBZ X9, 0x354186C
	0x0354184C LDR X10, [X8 + 0xB0]
	0x03541850 ADD X10, X10, 0x8
	0x03541854 LDUR X11, [X10 - 0x8]
	0x03541858 CMP X11, X1
	0x0354185C B.EQ 0x354187C
	0x03541860 SUBS X9, X9, 0x1
	0x03541864 ADD X10, X10, 0x10
	0x03541868 B.NE 0x3541854
	0x0354186C MOV X0, X20
	0x03541870 MOV W2, W31
	0x03541874 BL 0x1C5C788
	0x03541878 B 0x3541888
	0x0354187C LDRSW X9, [X10]
	0x03541880 ADD X8, X8, X9, 0x4, LSL
	0x03541884 ADD X0, X8, 0x138
	0x03541888 LDP X8, X2, [X0]
	0x0354188C MOV X0, X20
	0x03541890 MOV X1, X19
	0x03541894 BLR X8
	0x03541898 B 0x3541824
	0x0354189C LDR X1, [X21]
	0x035418A0 ADD X0, X31, 0x8
	0x035418A4 BL 0x2BC434C
	0x035418A8 LDP X20, X19, [X31 + 0x50]
	0x035418AC LDP X22, X21, [X31 + 0x40]
	0x035418B0 LDP X24, X23, [X31 + 0x30]
	0x035418B4 LDR X30, [X31 + 0x20]
	0x035418B8 ADD X31, X31, 0x60
	0x035418BC RET
	0x035418C0 BL 0x1C16F20
	0x035418C4 BL 0x1C16F20
	0x035418C8 B 0x35418D0
	0x035418CC B 0x35418D0
	0x035418D0 MOV X19, X0
	0x035418D4 CMP W1, 0x1
	0x035418D8 B.NE 0x3541904
	0x035418DC MOV X0, X19
	0x035418E0 BL 0x3EB1AD0
	0x035418E4 LDR X20, [X0]
	0x035418E8 BL 0x3EB1AE0
	0x035418EC LDR X1, [X21]
	0x035418F0 ADD X0, X31, 0x8
	0x035418F4 BL 0x2BC434C
	0x035418F8 CBZ X20, 0x35418A8
	0x035418FC MOV X0, X20
	0x03541900 BL 0x1C16F18
	0x03541904 MOV X20, X31
	0x03541908 B 0x3541910
	0x0354190C MOV X19, X0
	0x03541910 LDR X1, [X21]
	0x03541914 ADD X0, X31, 0x8
	0x03541918 BL 0x2BC434C
	0x0354191C CBNZ X20, 0x3541928
	0x03541920 MOV X0, X19
	0x03541924 BL 0x1D2C690
	0x03541928 MOV X0, X20
	0x0354192C BL 0x1C16F18
	0x03541930 BL 0x1990590
	0x03541934 SUB X31, X31, 0x60
	0x03541938 STP X30, X21, [X31 + 0x40]
	0x0354193C STP X20, X19, [X31 + 0x50]
	0x03541940 ADRP X21, 0xE9E000
	0x03541944 LDRB W8, [X21 + 0xC11]
	0x03541948 MOV W20, W1
	0x0354194C MOV X19, X0
	0x03541950 TBNZ X8, 0x0, 0x3541A88
	0x03541954 ADRP X0, 0xBB2000
	0x03541958 LDR X0, [X0 + 0x9C8]
	0x0354195C BL 0x1C16CF4
	0x03541960 ADRP X0, 0xBF3000
	0x03541964 LDR X0, [X0 + 0xB50]
	0x03541968 BL 0x1C16CF4
	0x0354196C ADRP X0, 0xBBA000
	0x03541970 LDR X0, [X0 + 0xDF8]
	0x03541974 BL 0x1C16CF4
	0x03541978 ADRP X0, 0xBF3000
	0x0354197C LDR X0, [X0 + 0xB58]
	0x03541980 BL 0x1C16CF4
	0x03541984 ADRP X0, 0xBBB000
	0x03541988 LDR X0, [X0 + 0x408]
	0x0354198C BL 0x1C16CF4
	0x03541990 ADRP X0, 0xBBB000
	0x03541994 LDR X0, [X0 + 0x18]
	0x03541998 BL 0x1C16CF4
	0x0354199C ADRP X0, 0xBBB000
	0x035419A0 LDR X0, [X0 + 0x40]
	0x035419A4 BL 0x1C16CF4
	0x035419A8 ADRP X0, 0xBBB000
	0x035419AC LDR X0, [X0 + 0x300]
	0x035419B0 BL 0x1C16CF4
	0x035419B4 ADRP X0, 0xBF3000
	0x035419B8 LDR X0, [X0 + 0xCA8]
	0x035419BC BL 0x1C16CF4
	0x035419C0 ADRP X0, 0xBBB000
	0x035419C4 LDR X0, [X0 + 0x410]
	0x035419C8 BL 0x1C16CF4
	0x035419CC ADRP X0, 0xBB2000
	0x035419D0 LDR X0, [X0 + 0xAC8]
	0x035419D4 BL 0x1C16CF4
	0x035419D8 ADRP X0, 0xBF3000
	0x035419DC LDR X0, [X0 + 0xE98]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xE9F000
	014 Move W8, [X20+3188]
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0xBBC000
	022 Move X0, [X0+2192]
	023 Call 0x1C17CF4
	024 Move X0, 0xBF4000
	025 Move X0, [X0+3536]
	026 Call 0x1C17CF4
	027 Move X0, 0xBF4000
	028 Move X0, [X0+3544]
	029 Call 0x1C17CF4
	030 Move X0, 0xBF4000
	031 Move X0, [X0+3552]
	032 Call 0x1C17CF4
	033 Move X0, 0xBF4000
	034 Move X0, [X0+3000]
	035 Call 0x1C17CF4
	036 Move X0, 0xBF4000
	037 Move X0, [X0+3456]
	038 Call 0x1C17CF4
	039 Move X0, 0xBF4000
	040 Move X0, [X0+3560]
	041 Call 0x1C17CF4
	042 Move X0, 0xBB3000
	043 Move X0, [X0+2760]
	044 Call 0x1C17CF4
	045 Move X0, 0xBB5000
	046 Move X0, [X0+928]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+3188], W8
	050 Compare X21, 0
	051 JumpIfEqual {197}
	052 Move W8, [X21+16]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare W8, 0
	056 JumpIfEqual {70}
	057 Move X20, [X31+80]
	058 Move X19, [X31+88]
	059 Move X22, [X31+64]
	060 Move X21, [X31+72]
	061 Move X24, [X31+48]
	062 Move X23, [X31+56]
	063 Move X26, [X31+32]
	064 Move X25, [X31+40]
	065 Move X28, [X31+16]
	066 Move X27, [X31+24]
	067 Move X29, [X31+96]
	068 Move X30, [X31+104]
	069 Return 
	070 Move W1, 210
	071 Move X0, X21
	072 Move X2, X31
	073 Call OperationResponse.get_Item, X0, X1
	074 Move X22, 0xBB3000
	075 Move X22, [X22+2760]
	076 Move X1, [X22]
	077 Call 0x1C17E00
	078 Move X20, X0
	079 Move W1, 230
	080 Move X0, X21
	081 Move X2, X31
	082 Call OperationResponse.get_Item, X0, X1
	083 Move X1, [X22]
	084 Call 0x1C17E00
	085 Compare X20, 0
	086 JumpIfEqual {57}
	087 Move X21, X0
	088 Compare X0, 0
	089 JumpIfEqual {57}
	090 Move W8, [X20+24]
	091 Move W9, [X21+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X19+32], X31
	094 Move X8, 0xBF4000
	095 Move X8, [X8+3552]
	096 Move X0, [X8]
	097 Call 0x1C17F10
	098 Move X8, 0xBF4000
	099 Move W1, [X20+24]
	100 Move X8, [X8+3544]
	101 Move X22, X0
	102 Move X2, [X8]
	103 Call List`1<Object>..ctor, X0, X1
	104 Move [X19+16], X22
	105 Move X8, [X20+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X29, 0xBF4000
	108 Move X29, [X29+3560]
	109 Move X25, X31
	110 And X8, X8, 0
	111 Add X26, X21, 32
	112 Add X27, X20, 32
	113 Move TEMP, 0x80000000
	114 Not TEMP
	115 Move W28, TEMP
	116 Move W9, [X21+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X9, 0xBF4000
	119 Move X9, [X9+3456]
	120 Move X23, [X26]
	121 Move X9, [X9]
	122 Move X9, [X9+184]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare W22, 0
	125 JumpIfEqual {138}
	126 Move X8, 0xBF4000
	127 Move X8, [X8+3000]
	128 Move X0, [X8]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X23
	134 Move W1, W22
	135 Call LoadBalancingClient.ReplacePortWithAlternative, X0, X1
	136 Move W8, [X20+24]
	137 Move X23, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, [X29]
	140 Move X24, [X27]
	141 Call 0x1C17F10
	142 Move X1, X31
	143 Move X22, X0
	144 Call Object..ctor, X0
	145 Move X0, X22
	146 Move X1, X24
	147 Call Region.SetCodeAndCluster, X0, X1
	148 Move X0, [X22+16]
	149 Move X1, X31
	150 Move [X22+32], X23
	151 Move [X22+40], W28
	152 Call String.IsNullOrEmpty, X0
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {181}
	157 Move X0, [X19+16]
	158 Compare X0, 0
	159 JumpIfEqual {197}
	160 Move X9, 0xBF4000
	161 Move W10, [X0+28]
	162 Move X8, [X0+16]
	163 Move X9, [X9+3536]
	164 Add W10, W10, 1
	165 Move X9, [X9]
	166 Move [X0+28], W10
	167 Compare X8, 0
	168 JumpIfEqual {197}
	169 NotImplemented "Instruction LDRSW not yet implemented."
	170 Move W11, [X8+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add W9, W10, 1
	173 Add X8, X8, X10
	174 Move [X0+24], W9
	175 Move [X8+32], X22
	176 Move X8, [X9+32]
	177 Move X1, X22
	178 Move X8, [X8+192]
	179 Move X2, [X8+112]
	180 Call List`1<Object>.AddWithResize, X0, X1
	181 Move W8, [X20+24]
	182 Add X25, X25, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X8, 0xBBC000
	185 Move X8, [X8+2192]
	186 Move X0, X20
	187 Move X1, [X8]
	188 Call 0x2158BDC, X0
	189 Move X8, 0xBB5000
	190 Move X8, [X8+928]
	191 Move X1, X20
	192 Move X2, X31
	193 Move X0, [X8]
	194 Call String.Join, X0, X1
	195 Move [X19+24], X0
	196 Call 0x1C17F28
	197 Call 0x1C17F20

Method: System.Boolean get_IsPinging()

Disassembly:
	0x0354AFF4 CMP X22, W8, UXTW
	0x0354AFF8 B.CS 0x354B088

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Void set_IsPinging(System.Boolean value)

Disassembly:
	0x0354AFFC LDR X21, [X23, X22, LSL #3]
	0x0354B000 CBZ X21, 0x354B04C
	0x0354B004 LDR X8, [X21]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+84], W8
	003 Return 

Method: System.Boolean get_Aborted()

Disassembly:
	0x0354B008 LDP X9, X1, [X8 + 0x168]
	0x0354B00C MOV X0, X21

ISIL:
	001 Move W0, [X0+85]
	002 Return X0

Method: System.Void set_Aborted(System.Boolean value)

Disassembly:
	0x0354B010 BLR X9
	0x0354B014 CBZ X0, 0x354B08C
	0x0354B018 LDR X1, [X24]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+85], W8
	003 Return 

Method: System.Void .ctor(System.UInt16 masterServerPortOverride = 0)

Disassembly:
	0x03541654 LDR X1, [X24]
	0x03541658 ADD X8, X31, 0x8
	0x0354165C MOV X0, X20
	0x03541660 BL 0x301CB58
	0x03541664 LDR X1, [X22]
	0x03541668 ADD X0, X31, 0x8
	0x0354166C BL 0x2BC4350
	0x03541670 TBZ X0, 0x0, 0x35416DC
	0x03541674 LDR X20, [X31 + 0x18]
	0x03541678 CBZ X20, 0x3541700
	0x0354167C LDR X8, [X20]
	0x03541680 LDR X1, [X23]
	0x03541684 LDRH W9, [X8 + 0x12E]
	0x03541688 CBZ X9, 0x35416AC
	0x0354168C LDR X10, [X8 + 0xB0]
	0x03541690 ADD X10, X10, 0x8
	0x03541694 LDUR X11, [X10 - 0x8]
	0x03541698 CMP X11, X1
	0x0354169C B.EQ 0x35416BC
	0x035416A0 SUBS X9, X9, 0x1
	0x035416A4 ADD X10, X10, 0x10
	0x035416A8 B.NE 0x3541694
	0x035416AC MOV X0, X20
	0x035416B0 MOV W2, W31
	0x035416B4 BL 0x1C5C788
	0x035416B8 B 0x35416C8
	0x035416BC LDRSW X9, [X10]
	0x035416C0 ADD X8, X8, X9, 0x4, LSL
	0x035416C4 ADD X0, X8, 0x138
	0x035416C8 LDP X8, X2, [X0]
	0x035416CC MOV X0, X20
	0x035416D0 MOV X1, X19
	0x035416D4 BLR X8
	0x035416D8 B 0x3541664
	0x035416DC LDR X1, [X21]
	0x035416E0 ADD X0, X31, 0x8
	0x035416E4 BL 0x2BC434C
	0x035416E8 LDP X20, X19, [X31 + 0x50]
	0x035416EC LDP X22, X21, [X31 + 0x40]
	0x035416F0 LDP X24, X23, [X31 + 0x30]
	0x035416F4 LDR X30, [X31 + 0x20]
	0x035416F8 ADD X31, X31, 0x60
	0x035416FC RET
	0x03541700 BL 0x1C16F20
	0x03541704 BL 0x1C16F20
	0x03541708 B 0x3541710
	0x0354170C B 0x3541710
	0x03541710 MOV X19, X0
	0x03541714 CMP W1, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xE9F000
	009 Move X24, 0xBF4000
	010 Move X21, 0xBF4000
	011 Move X22, 0xBF4000
	012 Move W8, [X23+3189]
	013 Move X24, [X24+3520]
	014 Move X21, [X21+3528]
	015 Move X22, [X22+3456]
	016 Move W19, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xBF4000
	023 Move X0, [X0+3528]
	024 Call 0x1C17CF4
	025 Move X0, 0xBF4000
	026 Move X0, [X0+3520]
	027 Call 0x1C17CF4
	028 Move X0, 0xBF4000
	029 Move X0, [X0+3456]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+3189], W8
	033 Move X0, [X24]
	034 Call 0x1C17F10
	035 Move X1, [X21]
	036 Move X21, X0
	037 Call List`1<Object>..ctor, X0
	038 Move W8, 0x999A
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 Move W9, 90
	041 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	042 Move X0, X20
	043 Move X1, X31
	044 Move [X20+40], X21
	045 Move [X20+72], D0
	046 Move [X20+80], W9
	047 Call Object..ctor, X0
	048 Move X8, [X22]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X8, [X8+184]
	054 NotImplemented "Instruction STRH not yet implemented."
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X30, [X31+64]
	058 Return 

Method: System.Boolean PingMinimumOfRegions(System.Action`1<Photon.Realtime.RegionHandler> onCompleteCallback, System.String previousSummary)

Disassembly:
	0x03541BA4 ADD X1, X31, 0x20
	0x03541BA8 STR W20, [X31 + 0x20]
	0x03541BAC LDR X0, [X8]
	0x03541BB0 BL 0x1C16E04
	0x03541BB4 ADRP X9, 0xBF3000
	0x03541BB8 LDR W8, [X19 + 0x90]
	0x03541BBC LDR X9, [X9 + 0xB50]
	0x03541BC0 MOV X20, X0
	0x03541BC4 ADD X1, X31, 0x8
	0x03541BC8 STR W8, [X31 + 0x8]
	0x03541BCC LDR X0, [X9]
	0x03541BD0 BL 0x1C16E04
	0x03541BD4 LDR X8, [X19 + 0xE8]
	0x03541BD8 CBZ X8, 0x35425C0
	0x03541BDC LDR X9, [X8]
	0x03541BE0 MOV X21, X0
	0x03541BE4 MOV X0, X8
	0x03541BE8 LDP X10, X1, [X9 + 0x168]
	0x03541BEC BLR X10
	0x03541BF0 ADRP X8, 0xBBB000
	0x03541BF4 LDR X8, [X8 + 0x448]
	0x03541BF8 MOV X3, X0
	0x03541BFC MOV X1, X20
	0x03541C00 MOV X2, X21
	0x03541C04 LDR X8, [X8]
	0x03541C08 MOV X4, X31
	0x03541C0C MOV X0, X8
	0x03541C10 BL 0x3227C18
	0x03541C14 LDR X8, [X19]
	0x03541C18 MOV X2, X0
	0x03541C1C MOVZ W1, 0x1
	0x03541C20 MOV X0, X19
	0x03541C24 LDR X9, [X8 + 0x218]
	0x03541C28 LDR X3, [X8 + 0x220]
	0x03541C2C BLR X9
	0x03541C30 LDR W1, [X19 + 0x90]
	0x03541C34 MOVZ W8, 0x4
	0x03541C38 B 0x354203C
	0x03541C3C LDR W8, [X19 + 0x90]
	0x03541C40 CMP W8, 0x10
	0x03541C44 B.NE 0x3541C98
	0x03541C48 LDR X8, [X19 + 0x10]
	0x03541C4C CBZ X8, 0x35425C0
	0x03541C50 LDRB W8, [X8 + 0x40]
	0x03541C54 CMP W8, 0x5
	0x03541C58 B.CC 0x3541C80
	0x03541C5C ADRP X9, 0xBBB000
	0x03541C60 LDR X8, [X19]
	0x03541C64 LDR X9, [X9 + 0x430]
	0x03541C68 MOVZ W1, 0x5
	0x03541C6C MOV X0, X19
	0x03541C70 LDR X3, [X8 + 0x220]
	0x03541C74 LDR X2, [X9]
	0x03541C78 LDR X9, [X8 + 0x218]
	0x03541C7C BLR X9
	0x03541C80 LDR X8, [X19 + 0x30]
	0x03541C84 MOVZ W9, 0x2
	0x03541C88 STR W9, [X19 + 0x80]
	0x03541C8C CBZ X8, 0x3541C94
	0x03541C90 STR X31, [X8 + 0x28]
	0x03541C94 LDR W8, [X19 + 0x90]
	0x03541C98 CMP W8, 0x6
	0x03541C9C B.NE 0x35420AC
	0x03541CA0 LDR X8, [X19 + 0x10]
	0x03541CA4 CBZ X8, 0x35425C0
	0x03541CA8 LDRB W8, [X8 + 0x40]
	0x03541CAC CMP W8, 0x5
	0x03541CB0 B.CS 0x354207C
	0x03541CB4 MOVZ W8, 0x6
	0x03541CB8 B 0x35420A4
	0x03541CBC LDR X20, [X19 + 0x110]
	0x03541CC0 MOVN W1, 0x0
	0x03541CC4 MOV X0, X19
	0x03541CC8 STR X31, [X19 + 0x138]
	0x03541CCC STR X31, [X19 + 0x110]
	0x03541CD0 BL 0x353D860
	0x03541CD4 CBZ X20, 0x3541CF0
	0x03541CD8 LDR W8, [X19 + 0x80]
	0x03541CDC CMP W8, 0x1
	0x03541CE0 B.NE 0x3541CF0
	0x03541CE4 LDR X0, [X19 + 0xB8]
	0x03541CE8 CBZ X0, 0x35425C0
	0x03541CEC BL 0x3542780
	0x03541CF0 LDRH W8, [X19 + 0x40]
	0x03541CF4 ANDS W31, W8, 0xFF
	0x03541CF8 STRH W8, [X31 + 0x3C]
	0x03541CFC B.EQ 0x3541D98
	0x03541D00 LDR X9, [X19 + 0x10]
	0x03541D04 CBZ X9, 0x35425C0
	0x03541D08 LDRB W9, [X9 + 0x84]
	0x03541D0C STRH W8, [X31 + 0x3C]
	0x03541D10 CMP W9, W8, LSR
	0x03541D14 B.EQ 0x3541D98
	0x03541D18 ADRP X9, 0xBBB000
	0x03541D1C LDR X9, [X9 + 0x300]
	0x03541D20 ADD X1, X31, 0x20
	0x03541D24 STRH W8, [X31 + 0x20]
	0x03541D28 LDR X0, [X9]
	0x03541D2C BL 0x1C16E04
	0x03541D30 ADRP X8, 0xBBB000
	0x03541D34 LDR X8, [X8 + 0x458]
	0x03541D38 MOV X1, X0
	0x03541D3C MOV X2, X31
	0x03541D40 LDR X8, [X8]
	0x03541D44 MOV X0, X8
	0x03541D48 BL 0x321EFD0
	0x03541D4C LDR X8, [X19]
	0x03541D50 MOV X2, X0
	0x03541D54 MOVZ W1, 0x3
	0x03541D58 MOV X0, X19
	0x03541D5C LDR X9, [X8 + 0x218]
	0x03541D60 LDR X3, [X8 + 0x220]
	0x03541D64 BLR X9
	0x03541D68 ADRP X9, 0xBBB000
	0x03541D6C LDR X20, [X19 + 0x10]
	0x03541D70 LDRH W8, [X19 + 0x40]
	0x03541D74 LDR X9, [X9 + 0x40]
	0x03541D78 ADD X0, X31, 0x3C
	0x03541D7C STRH W8, [X31 + 0x3C]
	0x03541D80 LDR X1, [X9]
	0x03541D84 BL 0x242DFB0
	0x03541D88 CBZ X20, 0x35425C0
	0x03541D8C STRB W0, [X20 + 0x84]
	0x03541D90 STRH W31, [X31 + 0x3C]
	0x03541D94 STRH W31, [X19 + 0x40]
	0x03541D98 LDR W1, [X19 + 0x90]
	0x03541D9C SUB W8, W1, 0x5
	0x03541DA0 CMP W8, 0xF
	0x03541DA4 B.HI 0x3542234
	0x03541DA8 ADRP X9, 0xFFFFFFFFFD655000
	0x03541DAC ADD X9, X9, 0xD70
	0x03541DB0 ADR X10, 0x10
	0x03541DB4 LDRH W11, [X9, X8, LSL #1]
	0x03541DB8 ADD X10, X10, X11, 0x2, LSL
	0x03541DBC BR X10
	0x03541DC0 LDR X8, [X19]
	0x03541DC4 MOV X0, X19
	0x03541DC8 LDP X9, X1, [X8 + 0x1C8]
	0x03541DCC BLR X9
	0x03541DD0 B 0x354206C
	0x03541DD4 ADRP X8, 0xBF3000
	0x03541DD8 LDR X8, [X8 + 0xE98]
	0x03541DDC LDR X0, [X8]
	0x03541DE0 BL 0x1C16F10
	0x03541DE4 MOV X1, X19
	0x03541DE8 MOV X2, X31
	0x03541DEC MOV X20, X0
	0x03541DF0 BL 0x35503C4
	0x03541DF4 STR X20, [X19 + 0xE8]
	0x03541DF8 ADRP X8, 0xBBB000
	0x03541DFC LDR X8, [X8 + 0x410]
	0x03541E00 ADD X1, X31, 0x20
	0x03541E04 LDR X0, [X8]
	0x03541E08 MOVZ W8, 0x410
	0x03541E0C STR W8, [X31 + 0x20]
	0x03541E10 BL 0x1C16E04
	0x03541E14 ADRP X9, 0xBF3000
	0x03541E18 LDR W8, [X19 + 0x90]
	0x03541E1C LDR X9, [X9 + 0xB50]
	0x03541E20 MOV X20, X0
	0x03541E24 ADD X1, X31, 0x8
	0x03541E28 STR W8, [X31 + 0x8]
	0x03541E2C LDR X0, [X9]
	0x03541E30 BL 0x1C16E04
	0x03541E34 LDR X8, [X19 + 0xE8]
	0x03541E38 CBZ X8, 0x35425C0
	0x03541E3C LDR X9, [X8]
	0x03541E40 MOV X21, X0
	0x03541E44 MOV X0, X8
	0x03541E48 LDP X10, X1, [X9 + 0x168]
	0x03541E4C BLR X10
	0x03541E50 ADRP X8, 0xBBB000
	0x03541E54 LDR X8, [X8 + 0x448]
	0x03541E58 MOV X3, X0
	0x03541E5C MOV X1, X20
	0x03541E60 MOV X2, X21
	0x03541E64 LDR X8, [X8]
	0x03541E68 MOV X4, X31
	0x03541E6C MOV X0, X8
	0x03541E70 BL 0x3227C18
	0x03541E74 LDR X8, [X19]
	0x03541E78 MOV X2, X0
	0x03541E7C MOVZ W1, 0x1
	0x03541E80 MOV X0, X19
	0x03541E84 LDR X9, [X8 + 0x218]
	0x03541E88 LDR X3, [X8 + 0x220]
	0x03541E8C BLR X9
	0x03541E90 LDR W1, [X19 + 0x90]
	0x03541E94 MOVZ W8, 0x8
	0x03541E98 STR W8, [X19 + 0xE0]
	0x03541E9C CMP W1, 0x10
	0x03541EA0 B.NE 0x3541EF0
	0x03541EA4 LDR W8, [X19 + 0x38]
	0x03541EA8 CMP W8, 0x2
	0x03541EAC B.NE 0x3541ED0
	0x03541EB0 LDRH W8, [X19 + 0x40]
	0x03541EB4 MOVZ W2, 0x14
	0x03541EB8 AND W9, W8, 0xFF00
	0x03541EBC CMP W9, 0x500
	0x03541EC0 STRH W8, [X31 + 0x3C]
	0x03541EC4 B.NE 0x3541EE4
	0x03541EC8 ANDS W31, W8, 0xFF
	0x03541ECC B.EQ 0x3541EE4
	0x03541ED0 LDRB W8, [X19 + 0x68]
	0x03541ED4 MOVZ W9, 0x13
	0x03541ED8 CMP W8, 0x0
	0x03541EDC MOVZ W8, 0xD
	0x03541EE0 CSEL W2, W8, W9, EQ
	0x03541EE4 MOVZ W8, 0x1
	0x03541EE8 STR W8, [X19 + 0x38]
	0x03541EEC B 0x3541EF4
	0x03541EF0 MOVZ W2, 0xD
	0x03541EF4 CMP W1, W2
	0x03541EF8 B.EQ 0x354206C
	0x03541EFC LDR X8, [X19 + 0x98]
	0x03541F00 STR W2, [X19 + 0x90]
	0x03541F04 CBZ X8, 0x354206C
	0x03541F08 LDR X9, [X8 + 0x18]
	0x03541F0C LDR X0, [X8 + 0x40]
	0x03541F10 LDR X3, [X8 + 0x28]
	0x03541F14 B 0x3542068
	0x03541F18 ADRP X8, 0xBF3000
	0x03541F1C LDR X8, [X8 + 0xE98]
	0x03541F20 LDR X0, [X8]
	0x03541F24 BL 0x1C16F10
	0x03541F28 MOV X1, X19
	0x03541F2C MOV X2, X31
	0x03541F30 MOV X20, X0
	0x03541F34 BL 0x35503C4
	0x03541F38 STR X20, [X19 + 0xE8]
	0x03541F3C ADRP X8, 0xBBB000
	0x03541F40 LDR X8, [X8 + 0x410]
	0x03541F44 ADD X1, X31, 0x20
	0x03541F48 LDR X0, [X8]
	0x03541F4C MOVZ W8, 0x411
	0x03541F50 STR W8, [X31 + 0x20]
	0x03541F54 BL 0x1C16E04
	0x03541F58 ADRP X9, 0xBF3000
	0x03541F5C LDR W8, [X19 + 0x90]
	0x03541F60 LDR X9, [X9 + 0xB50]
	0x03541F64 MOV X20, X0
	0x03541F68 ADD X1, X31, 0x8
	0x03541F6C STR W8, [X31 + 0x8]
	0x03541F70 LDR X0, [X9]
	0x03541F74 BL 0x1C16E04
	0x03541F78 LDR X8, [X19 + 0xE8]
	0x03541F7C CBZ X8, 0x35425C0
	0x03541F80 LDR X9, [X8]
	0x03541F84 MOV X21, X0
	0x03541F88 MOV X0, X8
	0x03541F8C LDP X10, X1, [X9 + 0x168]
	0x03541F90 BLR X10
	0x03541F94 ADRP X8, 0xBBB000
	0x03541F98 LDR X8, [X8 + 0x448]
	0x03541F9C MOV X3, X0
	0x03541FA0 MOV X1, X20
	0x03541FA4 MOV X2, X21
	0x03541FA8 LDR X8, [X8]
	0x03541FAC MOV X4, X31
	0x03541FB0 MOV X0, X8
	0x03541FB4 BL 0x3227C18
	0x03541FB8 LDR X8, [X19]
	0x03541FBC MOV X2, X0
	0x03541FC0 MOVZ W1, 0x1
	0x03541FC4 MOV X0, X19
	0x03541FC8 LDR X9, [X8 + 0x218]
	0x03541FCC LDR X3, [X8 + 0x220]
	0x03541FD0 BLR X9
	0x03541FD4 LDR W1, [X19 + 0x90]
	0x03541FD8 MOVZ W8, 0x7
	0x03541FDC B 0x354203C
	0x03541FE0 ADRP X9, 0xBBB000
	0x03541FE4 LDR X8, [X19]
	0x03541FE8 LDR X9, [X9 + 0x440]
	0x03541FEC MOVZ W1, 0x1
	0x03541FF0 MOV X0, X19
	0x03541FF4 LDR X3, [X8 + 0x220]
	0x03541FF8 LDR X2, [X9]
	0x03541FFC LDR X9, [X8 + 0x218]
	0x03542000 BLR X9
	0x03542004 LDR W1, [X19 + 0x90]
	0x03542008 MOVZ W8, 0xE
	0x0354200C B 0x354203C
	0x03542010 LDR W1, [X19 + 0x90]
	0x03542014 MOVZ W8, 0x9
	0x03542018 B 0x354203C
	0x0354201C LDR W1, [X19 + 0x90]
	0x03542020 MOVZ W8, 0xA
	0x03542024 B 0x354203C
	0x03542028 LDR W1, [X19 + 0x90]
	0x0354202C MOVZ W8, 0x3
	0x03542030 B 0x354203C
	0x03542034 LDR W1, [X19 + 0x90]
	0x03542038 MOVZ W8, 0x2
	0x0354203C CMP W1, 0xD
	0x03542040 STR W8, [X19 + 0xE0]
	0x03542044 B.EQ 0x354206C
	0x03542048 LDR X8, [X19 + 0x98]
	0x0354204C MOVZ W9, 0xD
	0x03542050 STR W9, [X19 + 0x90]
	0x03542054 CBZ X8, 0x354206C
	0x03542058 LDR X9, [X8 + 0x18]
	0x0354205C LDR X0, [X8 + 0x40]
	0x03542060 LDR X3, [X8 + 0x28]
	0x03542064 MOVZ W2, 0xD
	0x03542068 BLR X9
	0x0354206C LDP X20, X19, [X31 + 0x50]
	0x03542070 LDP X30, X21, [X31 + 0x40]
	0x03542074 ADD X31, X31, 0x60
	0x03542078 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xE9F000
	009 Move X20, 0xBF4000
	010 Move W8, [X23+3190]
	011 Move X20, [X20+3568]
	012 Move X21, X2
	013 Move X22, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {63}
	019 Move X0, 0xBF4000
	020 Move X0, [X0+3384]
	021 Call 0x1C17CF4
	022 Move X0, 0xBF4000
	023 Move X0, [X0+3576]
	024 Call 0x1C17CF4
	025 Move X0, 0xBF4000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0xBF4000
	029 Move X0, [X0+3592]
	030 Call 0x1C17CF4
	031 Move X0, 0xBF4000
	032 Move X0, [X0+3600]
	033 Call 0x1C17CF4
	034 Move X0, 0xBF4000
	035 Move X0, [X0+3608]
	036 Call 0x1C17CF4
	037 Move X0, 0xBF4000
	038 Move X0, [X0+3616]
	039 Call 0x1C17CF4
	040 Move X0, 0xBB3000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move X0, 0xBF4000
	044 Move X0, [X0+3624]
	045 Call 0x1C17CF4
	046 Move X0, 0xBF4000
	047 Move X0, [X0+3632]
	048 Call 0x1C17CF4
	049 Move X0, 0xBF4000
	050 Move X0, [X0+3640]
	051 Call 0x1C17CF4
	052 Move X0, 0xBF4000
	053 Move X0, [X0+3648]
	054 Call 0x1C17CF4
	055 Move X0, 0xBF4000
	056 Move X0, [X0+3568]
	057 Call 0x1C17CF4
	058 Move X0, 0xBBC000
	059 Move X0, [X0+2336]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X23+3190], W8
	063 Move X0, [X20]
	064 Move [X31+12], W31
	065 Move [X31+8], W31
	066 Call 0x1C17F10
	067 Move X1, X31
	068 Move X20, X0
	069 Call <>c__DisplayClass31_0..ctor, X0
	070 Move X8, [X19+16]
	071 Compare X8, 0
	072 JumpIfEqual {79}
	073 Move W8, [X8+24]
	074 Compare W8, 0
	075 JumpIfEqual {79}
	076 Move W8, [X19+84]
	077 Compare W8, 0
	078 JumpIfEqual {89}
	079 Move W0, W31
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X30, [X31+16]
	085 Move X23, [X31+24]
	086 And W0, W0, 1
	087 Add X31, X31, 64
	088 Return X0
	089 Move W8, 1
	090 Move [X19+64], X21
	091 NotImplemented "Instruction STRH not yet implemented."
	092 Move X8, 0xBB3000
	093 Move X8, [X8+1432]
	094 Move X23, [X19+88]
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X23
	101 Move X1, X31
	102 Move X2, X31
	103 Call Object.op_Inequality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {113}
	108 Move X0, [X19+88]
	109 Compare X0, 0
	110 JumpIfEqual {323}
	111 Move X1, X31
	112 Call MonoBehaviourEmpty.SelfDestroy, X0
	113 Move X8, 0xBBC000
	114 Move X8, [X8+2336]
	115 Move X1, X31
	116 Move X0, [X8]
	117 Call MonoBehaviourEmpty.BuildInstance, X0
	118 Move [X19+88], X0
	119 Compare X0, 0
	120 JumpIfEqual {323}
	121 Move [X0+32], X22
	122 Move X8, 0xBF4000
	123 Move X8, [X8+3384]
	124 Move X23, X0
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X8, 0xBF4000
	128 Move X8, [X8+3616]
	129 Move X1, X23
	130 Move X3, X31
	131 Move X22, X0
	132 Move X2, [X8]
	133 Call Action`1<Object>..ctor, X0, X1, X2
	134 Move X0, X21
	135 Move X1, X31
	136 Move [X19+48], X22
	137 Call String.IsNullOrEmpty, X0
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {297}
	142 Compare X21, 0
	143 JumpIfEqual {323}
	144 Move W1, 59
	145 Move X0, X21
	146 Move W2, W31
	147 Move X3, X31
	148 Call String.Split, X0, X1, X2
	149 Compare X0, 0
	150 JumpIfEqual {323}
	151 Move W8, [X0+24]
	152 Move X21, X0
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, [X21+40]
	155 Add X1, X31, 12
	156 Move X2, X31
	157 Call Int32.TryParse, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {297}
	162 Move W8, [X21+24]
	163 Compare W8, 0
	164 JumpIfEqual {324}
	165 Compare X20, 0
	166 JumpIfEqual {323}
	167 Move X0, [X21+32]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move [X20+16], X0
	170 Move X21, [X21+48]
	171 Move X1, X31
	172 Call String.IsNullOrEmpty, X0
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {297}
	177 Move X0, X21
	178 Move X1, X31
	179 Call String.IsNullOrEmpty, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {297}
	184 Move X0, [X19+24]
	185 Compare X0, 0
	186 JumpIfEqual {323}
	187 Move X1, X21
	188 Move X2, X31
	189 Call String.Equals, X0, X1
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {297}
	194 Move X0, [X19+24]
	195 Compare X0, 0
	196 JumpIfEqual {323}
	197 Move X1, [X20+16]
	198 Move X2, X31
	199 Call String.Contains, X0, X1
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {297}
	204 Move X23, 0xBF4000
	205 Move X23, [X23+3640]
	206 Move W21, [X31+12]
	207 Move X0, [X23]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {213}
	211 Call 0x1C17DFC
	212 Move X0, [X23]
	213 Move X8, [X0+184]
	214 Move W8, [X8+8]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W8, [X31+12]
	217 Move X21, [X19+16]
	218 Move [X19+56], W8
	219 Move X8, 0xBF4000
	220 Move X8, [X8+3624]
	221 Move X0, [X8]
	222 Call 0x1C17F10
	223 Move X8, 0xBF4000
	224 Move X8, [X8+3648]
	225 Move X1, X20
	226 Move X3, X31
	227 Move X22, X0
	228 Move X2, [X8]
	229 Call Predicate`1<Object>..ctor, X0, X1, X2
	230 Compare X21, 0
	231 JumpIfEqual {323}
	232 Move X8, 0xBF4000
	233 Move X8, [X8+3600]
	234 Move X0, X21
	235 Move X1, X22
	236 Move X2, [X8]
	237 Call List`1<Object>.Find, X0, X1
	238 Move X8, 0xBF4000
	239 Move X8, [X8+3576]
	240 Move X21, X0
	241 Move X8, [X8]
	242 Move X0, X8
	243 Call 0x1C17F10
	244 Move X8, 0xBF4000
	245 Move X8, [X8+3632]
	246 Move X1, X19
	247 Move X3, X31
	248 Move X22, X0
	249 Move X2, [X8]
	250 Call Action`1<Object>..ctor, X0, X1, X2
	251 Move X0, [X23]
	252 Call 0x1C17F10
	253 Move X1, X21
	254 Move X2, X22
	255 Move X3, X31
	256 Move X20, X0
	257 Call RegionPinger..ctor, X0, X1, X2
	258 Move X21, [X19+40]
	259 Move [X31+8], W31
	260 Add X1, X31, 8
	261 Move X0, X21
	262 Move X2, X31
	263 Call Monitor.Enter, X0, X1
	264 Move X0, [X19+40]
	265 Compare X0, 0
	266 JumpIfEqual {327}
	267 Move W2, [X0+24]
	268 Move W8, [X0+28]
	269 Add W8, W8, 1
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move [X0+24], W31
	272 Move [X0+28], W8
	273 Move X0, [X0+16]
	274 Move W1, W31
	275 Move X3, X31
	276 Call Array.Clear, X0, X1, X2
	277 Move X0, [X19+40]
	278 Compare X0, 0
	279 JumpIfEqual {329}
	280 Move X9, 0xBF4000
	281 Move X9, [X9+3584]
	282 Move W10, [X0+28]
	283 Move X8, [X0+16]
	284 Move X9, [X9]
	285 Add W10, W10, 1
	286 Move [X0+28], W10
	287 Compare X8, 0
	288 JumpIfEqual {328}
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Move W11, [X8+24]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Add W9, W10, 1
	293 Add X8, X8, X10
	294 Move X19, X31
	295 Move [X0+24], W9
	296 Move [X8+32], X20
	297 Move X0, X19
	298 Call RegionHandler.PingEnabledRegions, X0
	299 Move X8, [X9+32]
	300 Move X8, [X8+192]
	301 Move X2, [X8+112]
	302 Move X1, X20
	303 Call List`1<Object>.AddWithResize, X0, X1
	304 Move X19, X31
	305 Move W22, 14
	306 Move W8, [X31+8]
	307 Compare W8, 0
	308 JumpIfEqual {312}
	309 Move X0, X21
	310 Move X1, X31
	311 Call Monitor.Exit, X0
	312 Compare X19, 0
	313 JumpIfNotEqual {325}
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Compare W22, 0
	316 JumpIfNotEqual {80}
	317 Compare X20, 0
	318 JumpIfEqual {323}
	319 Move X0, X20
	320 Move X1, X31
	321 Call RegionPinger.Start, X0
	322 Move W0, 1
	323 Call 0x1C17F20
	324 Call 0x1C17F28
	325 Move X0, X19
	326 Call 0x1C17F18
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X22, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X22
	333 Call 0x3EB2AD0
	334 Move X19, [X0]
	335 Call 0x3EB2AE0
	336 Move W22, W31
	337 Move X19, X31
	338 Move X22, X0
	339 Move W8, [X31+8]
	340 Compare W8, 0
	341 JumpIfEqual {345}
	342 Move X0, X21
	343 Move X1, X31
	344 Call Monitor.Exit, X0
	345 Compare X19, 0
	346 JumpIfNotEqual {349}
	347 Move X0, X22
	348 Call 0x1D2D690
	349 Move X0, X19
	350 Call 0x1C17F18
	351 Call 0x1991590

Method: System.Void Abort()

Disassembly:
	0x0354B394 CBZ X0, 0x354B4C4
	0x0354B398 MOVN W21, 0x3
	0x0354B39C LDR X8, [X0]
	0x0354B3A0 LDP X9, X1, [X8 + 0x198]
	0x0354B3A4 BLR X9
	0x0354B3A8 CBZ W21, 0x354B3CC
	0x0354B3AC TBNZ X0, 0x0, 0x354B3CC
	0x0354B3B0 MOVZ W0, 0x64
	0x0354B3B4 MOV X1, X31
	0x0354B3B8 BL 0x33E3BEC
	0x0354B3BC LDR X0, [X19 + 0x20]
	0x0354B3C0 ADD W21, W21, 0x1
	0x0354B3C4 CBNZ X0, 0x354B39C
	0x0354B3C8 B 0x354B4C4
	0x0354B3CC MOVZ W0, 0xA
	0x0354B3D0 MOV X1, X31
	0x0354B3D4 BL 0x33E3BEC
	0x0354B3D8 LDR W8, [X19 + 0x10]
	0x0354B3DC ADD W21, W8, 0x1
	0x0354B3E0 B 0x354B210
	0x0354B3E4 BL 0x1C16F20
	0x0354B3E8 B 0x354B3EC
	0x0354B3EC MOV X20, X0
	0x0354B3F0 CMP W1, 0x1
	0x0354B3F4 B.NE 0x354B4F0
	0x0354B3F8 MOV X0, X20
	0x0354B3FC BL 0x3EB1AD0
	0x0354B400 MOV X20, X0
	0x0354B404 ADRP X0, 0xBA8000
	0x0354B408 LDR X0, [X0 + 0x7D0]
	0x0354B40C BL 0x1C16D08
	0x0354B410 LDR X8, [X20]
	0x0354B414 LDR X1, [X8]
	0x0354B418 BL 0x1C17270
	0x0354B41C TBZ X0, 0x0, 0x354B4C8
	0x0354B420 BL 0x3EB1AE0
	0x0354B424 LDR X0, [X19 + 0x20]
	0x0354B428 MOVZ W8, 0x1
	0x0354B42C STRB W8, [X19 + 0x14]
	0x0354B430 CBZ X0, 0x354B4C4
	0x0354B434 LDR X8, [X0]
	0x0354B438 LDP X9, X1, [X8 + 0x1A8]
	0x0354B43C BLR X9
	0x0354B440 LDR X0, [X19 + 0x28]
	0x0354B444 CBZ X0, 0x354B4C4
	0x0354B448 CMP W22, 0x1
	0x0354B44C B.LT 0x354B490
	0x0354B450 LDR W8, [X0 + 0x18]
	0x0354B454 CMP W8, 0x2
	0x0354B458 B.LT 0x354B490
	0x0354B45C MOV X1, X31
	0x0354B460 BL 0x35DF194
	0x0354B464 LDR X8, [X19 + 0x28]
	0x0354B468 MOV W20, W0
	0x0354B46C MOV X1, X31
	0x0354B470 MOV X0, X8
	0x0354B474 BL 0x35DF820
	0x0354B478 LDR X8, [X19 + 0x30]
	0x0354B47C CBZ X8, 0x354B4C4
	0x0354B480 ADD W9, W20, W23
	0x0354B484 SUB W9, W9, W0
	0x0354B488 SDIV W9, W9, W22
	0x0354B48C STR W9, [X8 + 0x28]
	0x0354B490 LDR X8, [X19 + 0x18]
	0x0354B494 CBZ X8, 0x354B4C4
	0x0354B498 LDR X1, [X19 + 0x30]
	0x0354B49C LDR X9, [X8 + 0x18]
	0x0354B4A0 LDR X0, [X8 + 0x40]
	0x0354B4A4 LDR X2, [X8 + 0x28]
	0x0354B4A8 BLR X9
	0x0354B4AC LDP X20, X19, [X31 + 0x30]
	0x0354B4B0 LDP X22, X21, [X31 + 0x20]
	0x0354B4B4 LDP X24, X23, [X31 + 0x10]
	0x0354B4B8 MOV W0, W31
	0x0354B4BC LDP X30, X25, [X31], #0x40
	0x0354B4C0 RET
	0x0354B4C4 BL 0x1C16F20
	0x0354B4C8 MOVZ W0, 0x8
	0x0354B4CC BL 0x3EB1AF0
	0x0354B4D0 LDR X8, [X20]
	0x0354B4D4 STR X8, [X0]
	0x0354B4D8 ADRP X1, 0x969000
	0x0354B4DC ADD X1, X1, 0xE58
	0x0354B4E0 MOV X2, X31
	0x0354B4E4 BL 0x3EB1B00
	0x0354B4E8 MOV X20, X0
	0x0354B4EC BL 0x3EB1AE0
	0x0354B4F0 MOV X0, X20
	0x0354B4F4 BL 0x1D2C690
	0x0354B4F8 BL 0x1990590
	0x0354B4FC STP X30, X21, [X31 - 0x20]!
	0x0354B500 STP X20, X19, [X31 + 0x10]
	0x0354B504 ADRP X20, 0xE94000
	0x0354B508 ADRP X21, 0xBEA000
	0x0354B50C LDRB W8, [X20 + 0xC7F]
	0x0354B510 LDR X21, [X21 + 0x88]
	0x0354B514 MOV X19, X0
	0x0354B518 TBNZ X8, 0x0, 0x354B530
	0x0354B51C ADRP X0, 0xBEA000
	0x0354B520 LDR X0, [X0 + 0x88]
	0x0354B524 BL 0x1C16CF4
	0x0354B528 MOVZ W8, 0x1
	0x0354B52C STRB W8, [X20 + 0xC7F]
	0x0354B530 LDR X0, [X21]
	0x0354B534 BL 0x1C16F10
	0x0354B538 MOV X1, X31
	0x0354B53C MOV X20, X0
	0x0354B540 BL 0x33BDD8C
	0x0354B544 STR W31, [X20 + 0x10]
	0x0354B548 STR X19, [X20 + 0x20]
	0x0354B54C MOV X0, X20
	0x0354B550 LDP X20, X19, [X31 + 0x10]
	0x0354B554 LDP X30, X21, [X31], #0x20
	0x0354B558 RET
	0x0354B55C STR X30, [X31 - 0x20]!
	0x0354B560 STP X20, X19, [X31 + 0x10]
	0x0354B564 MOV W19, W1
	0x0354B568 MOV X1, X31
	0x0354B56C MOV X20, X0
	0x0354B570 BL 0x33BDD8C
	0x0354B574 STR W19, [X20 + 0x10]
	0x0354B578 LDP X20, X19, [X31 + 0x10]
	0x0354B57C LDR X30, [X31], #0x20
	0x0354B580 RET
	0x0354B584 SUB X31, X31, 0x40
	0x0354B588 STP X30, X23, [X31 + 0x10]
	0x0354B58C STP X22, X21, [X31 + 0x20]
	0x0354B590 STP X20, X19, [X31 + 0x30]
	0x0354B594 ADRP X20, 0xE94000
	0x0354B598 LDRB W8, [X20 + 0xC80]
	0x0354B59C MOV X19, X0
	0x0354B5A0 TBNZ X8, 0x0, 0x354B5DC
	0x0354B5A4 ADRP X0, 0xBEA000
	0x0354B5A8 LDR X0, [X0 + 0x90]
	0x0354B5AC BL 0x1C16CF4
	0x0354B5B0 ADRP X0, 0xBE9000
	0x0354B5B4 LDR X0, [X0 + 0xBA8]
	0x0354B5B8 BL 0x1C16CF4
	0x0354B5BC ADRP X0, 0xBA8000
	0x0354B5C0 LDR X0, [X0 + 0x758]
	0x0354B5C4 BL 0x1C16CF4
	0x0354B5C8 ADRP X0, 0xBB1000
	0x0354B5CC LDR X0, [X0 + 0x888]
	0x0354B5D0 BL 0x1C16CF4
	0x0354B5D4 MOVZ W8, 0x1
	0x0354B5D8 STRB W8, [X20 + 0xC80]
	0x0354B5DC LDR X8, [X19 + 0x30]
	0x0354B5E0 CBZ X8, 0x354B674
	0x0354B5E4 ADRP X9, 0xBA8000
	0x0354B5E8 LDR X9, [X9 + 0x758]
	0x0354B5EC ADRP X21, 0xBE9000
	0x0354B5F0 LDR X21, [X21 + 0xBA8]
	0x0354B5F4 LDR X20, [X8 + 0x10]
	0x0354B5F8 LDR W8, [X8 + 0x28]
	0x0354B5FC LDR X0, [X9]
	0x0354B600 ADRP X23, 0xBEA000
	0x0354B604 ADRP X22, 0xBB1000
	0x0354B608 LDR X23, [X23 + 0x90]
	0x0354B60C LDR X22, [X22 + 0x888]
	0x0354B610 ADD X1, X31, 0xC
	0x0354B614 STR W8, [X31 + 0xC]
	0x0354B618 BL 0x1C16E04
	0x0354B61C LDR X8, [X21]
	0x0354B620 LDR X21, [X19 + 0x28]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X20, 0xE95000
	010 Move W8, [X20+3191]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBEB000
	017 Move X0, [X0+64]
	018 Call 0x1C17CF4
	019 Move X0, 0xBEB000
	020 Move X0, [X0+72]
	021 Call 0x1C17CF4
	022 Move X0, 0xBEB000
	023 Move X0, [X0+80]
	024 Call 0x1C17CF4
	025 Move X0, 0xBEB000
	026 Move X0, [X0+88]
	027 Call 0x1C17CF4
	028 Move X0, 0xBA9000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3191], W8
	033 Move [X31+32], X31
	034 Move [X31+40], X31
	035 Move [X31+48], X31
	036 Move W8, [X19+85]
	037 Compare W8, 0
	038 JumpIfEqual {48}
	039 Move X20, [X31+112]
	040 Move X19, [X31+120]
	041 Move X22, [X31+96]
	042 Move X21, [X31+104]
	043 Move X24, [X31+80]
	044 Move X23, [X31+88]
	045 Move X30, [X31+64]
	046 Add X31, X31, 128
	047 Return 
	048 Move X20, [X19+40]
	049 Move W8, 1
	050 Move [X19+85], W8
	051 Move [X31+76], W31
	052 Add X1, X31, 76
	053 Move X0, X20
	054 Move X2, X31
	055 Call Monitor.Enter, X0, X1
	056 Move X0, [X19+40]
	057 Compare X0, 0
	058 JumpIfEqual {134}
	059 Move X8, 0xBEB000
	060 Move X8, [X8+88]
	061 Move X1, [X8]
	062 Add X8, X31, 8
	063 Call List`1<Object>.GetEnumerator, X0
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move X8, [X31+24]
	066 Move X21, 0xBEB000
	067 Move [X31+2], V0
	068 Move [X31+48], X8
	069 Move X21, [X21+72]
	070 Move X1, [X21]
	071 Add X0, X31, 32
	072 Call Enumerator<Object>.MoveNext, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {82}
	077 Move X0, [X31+48]
	078 Compare X0, 0
	079 JumpIfEqual {131}
	080 Move X1, X31
	081 Call RegionPinger.Abort, X0
	082 Move X21, X31
	083 Move W24, W31
	084 Move W23, 5
	085 Move X8, 0xBEB000
	086 Move X8, [X8+64]
	087 Move X1, [X8]
	088 Add X0, X31, 32
	089 Call Enumerator<Object>.Dispose, X0
	090 Compare X21, 0
	091 JumpIfNotEqual {135}
	092 Move X22, X31
	093 Move TEMP, X24
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {99}
	097 Move W23, W31
	098 Move X22, X21
	099 Move W8, [X31+76]
	100 Compare W8, 0
	101 JumpIfEqual {105}
	102 Move X0, X20
	103 Move X1, X31
	104 Call Monitor.Exit, X0
	105 Compare X22, 0
	106 JumpIfNotEqual {132}
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Compare W23, 0
	109 JumpIfNotEqual {39}
	110 Move X8, 0xBA9000
	111 Move X8, [X8+1432]
	112 Move X20, [X19+88]
	113 Move X0, [X8]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X20
	119 Move X1, X31
	120 Move X2, X31
	121 Call Object.op_Inequality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {39}
	126 Move X0, [X19+88]
	127 Compare X0, 0
	128 JumpIfEqual {137}
	129 Move X1, X31
	130 Call MonoBehaviourEmpty.SelfDestroy, X0
	131 Call 0x1C17F20
	132 Move X0, X22
	133 Call 0x1C17F18
	134 Call 0x1C17F20
	135 Move X0, X21
	136 Call 0x1C17F18
	137 Call 0x1C17F20
	138 Move X22, X1
	139 Move X23, X0
	140 Move X22, X1
	141 Move X23, X0
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, X23
	144 Call 0x3EB2AD0
	145 Move X21, [X0]
	146 Call 0x3EB2AE0
	147 Move W23, W31
	148 Move W24, 1
	149 Move X21, X31
	150 Move X8, 0xBEB000
	151 Move X8, [X8+64]
	152 Move X1, [X8]
	153 Add X0, X31, 32
	154 Call Enumerator<Object>.Dispose, X0
	155 Compare X21, 0
	156 JumpIfNotEqual {163}
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X23
	159 Call 0x3EB2AD0
	160 Move X21, [X0]
	161 Call 0x3EB2AE0
	162 Move X21, X31
	163 Move X0, X21
	164 Call 0x1C17F18
	165 Move X22, X1
	166 Move X23, X0
	167 Move X23, X0
	168 Move W8, [X31+76]
	169 Compare W8, 0
	170 JumpIfEqual {174}
	171 Move X0, X20
	172 Move X1, X31
	173 Call Monitor.Exit, X0
	174 Compare X21, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X23
	177 Call 0x1D2D690
	178 Move X0, X21
	179 Call 0x1C17F18
	180 Call 0x1991590

Method: System.Void OnPreferredRegionPinged(Photon.Realtime.Region preferredRegion)

Disassembly:
	0x0354B624 MOV X19, X0
	0x0354B628 LDR W9, [X8 + 0xE0]
	0x0354B62C CBNZ W9, 0x354B638
	0x0354B630 MOV X0, X8
	0x0354B634 BL 0x1C16DFC
	0x0354B638 LDR X1, [X23]
	0x0354B63C MOV X0, X21
	0x0354B640 BL 0x21E3358
	0x0354B644 LDR X8, [X22]
	0x0354B648 MOV X3, X0
	0x0354B64C MOV X1, X20
	0x0354B650 MOV X2, X19
	0x0354B654 MOV X0, X8
	0x0354B658 MOV X4, X31
	0x0354B65C BL 0x3227C18
	0x0354B660 LDP X20, X19, [X31 + 0x30]
	0x0354B664 LDP X22, X21, [X31 + 0x20]
	0x0354B668 LDP X30, X23, [X31 + 0x10]
	0x0354B66C ADD X31, X31, 0x40
	0x0354B670 RET
	0x0354B674 BL 0x1C16F20
	0x0354B678 STR X30, [X31 - 0x20]!
	0x0354B67C STP X20, X19, [X31 + 0x10]
	0x0354B680 ADRP X19, 0xE94000
	0x0354B684 ADRP X20, 0xBE9000
	0x0354B688 LDRB W8, [X19 + 0xC82]
	0x0354B68C LDR X20, [X20 + 0xE38]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {28}
	004 Move W9, [X1+40]
	005 Move W10, [X0+80]
	006 Move X8, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move V0, [X8+56]
	009 Move V1, [X8+72]
	010 NotImplemented "Instruction SCVTF not yet implemented."
	011 NotImplemented "Instruction SCVTF not yet implemented."
	012 Multiply S0, S1, S0
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move X0, X8
	015 Move X30, [X31+16]
	016 Call RegionHandler.PingEnabledRegions, X0
	017 Return 
	018 Move X9, [X8+48]
	019 Move [X8+84], W31
	020 Compare X9, 0
	021 JumpIfEqual {28}
	022 Move X3, [X9+24]
	023 Move X0, [X9+64]
	024 Move X2, [X9+40]
	025 Move X1, X8
	026 Move X30, [X31+16]
	027 CallNoReturn X3
	028 Call 0x1C17F20

Method: System.Boolean PingEnabledRegions()

Disassembly:
	0x0354B01C MOV X2, X31
	0x0354B020 BL 0x322BD1C
	0x0354B024 TBNZ X0, 0x0, 0x354B074
	0x0354B028 MOV X0, X19
	0x0354B02C MOV X1, X31
	0x0354B030 BL 0x32277A8
	0x0354B034 TBZ X0, 0x0, 0x354B04C
	0x0354B038 LDR X8, [X20]
	0x0354B03C LDP X9, X1, [X8 + 0x168]
	0x0354B040 MOV X0, X20
	0x0354B044 BLR X9
	0x0354B048 MOV X19, X0
	0x0354B04C LDR W8, [X20 + 0x18]
	0x0354B050 ADD X22, X22, 0x1
	0x0354B054 CMP X22, W8, SXTW
	0x0354B058 B.LT 0x354AFF4
	0x0354B05C MOV X0, X19
	0x0354B060 LDP X20, X19, [X31 + 0x30]
	0x0354B064 LDP X22, X21, [X31 + 0x20]
	0x0354B068 LDP X24, X23, [X31 + 0x10]
	0x0354B06C LDR X30, [X31], #0x40
	0x0354B070 RET
	0x0354B074 LDR X8, [X21]
	0x0354B078 LDP X9, X1, [X8 + 0x168]
	0x0354B07C MOV X0, X21
	0x0354B080 BLR X9
	0x0354B084 B 0x354AFD4
	0x0354B088 BL 0x1C16F28
	0x0354B08C BL 0x1C16F20
	0x0354B090 BL 0x1C16F20
	0x0354B094 BL 0x1C16F20
	0x0354B098 BL 0x1C16F20
	0x0354B09C B 0x354B0C4
	0x0354B0A0 B 0x354B0C4
	0x0354B0A4 B 0x354B0C4
	0x0354B0A8 B 0x354B0C4
	0x0354B0AC B 0x354B0C4
	0x0354B0B0 B 0x354B0C4
	0x0354B0B4 B 0x354B0C4
	0x0354B0B8 B 0x354B0C4
	0x0354B0BC B 0x354B0C4
	0x0354B0C0 B 0x354B0C4
	0x0354B0C4 MOV X20, X0
	0x0354B0C8 CMP W1, 0x1
	0x0354B0CC B.NE 0x354B128
	0x0354B0D0 MOV X0, X20
	0x0354B0D4 BL 0x3EB1AD0
	0x0354B0D8 MOV X20, X0
	0x0354B0DC ADRP X0, 0xBA8000
	0x0354B0E0 LDR X0, [X0 + 0x7D0]
	0x0354B0E4 BL 0x1C16D08
	0x0354B0E8 LDR X8, [X20]
	0x0354B0EC LDR X1, [X8]
	0x0354B0F0 BL 0x1C17270
	0x0354B0F4 TBZ X0, 0x0, 0x354B100
	0x0354B0F8 BL 0x3EB1AE0
	0x0354B0FC B 0x354B05C
	0x0354B100 MOVZ W0, 0x8
	0x0354B104 BL 0x3EB1AF0
	0x0354B108 LDR X8, [X20]
	0x0354B10C STR X8, [X0]
	0x0354B110 ADRP X1, 0x969000
	0x0354B114 ADD X1, X1, 0xE58
	0x0354B118 MOV X2, X31
	0x0354B11C BL 0x3EB1B00
	0x0354B120 MOV X20, X0
	0x0354B124 BL 0x3EB1AE0
	0x0354B128 MOV X0, X20
	0x0354B12C BL 0x1D2C690
	0x0354B130 BL 0x1990590
	0x0354B134 MOV X8, X0
	0x0354B138 LDR X0, [X0 + 0x20]
	0x0354B13C MOVZ W9, 0x1
	0x0354B140 STRB W9, [X8 + 0x15]
	0x0354B144 CBZ X0, 0x354B154
	0x0354B148 LDR X8, [X0]
	0x0354B14C LDP X2, X1, [X8 + 0x1A8]
	0x0354B150 BR X2
	0x0354B154 RET
	0x0354B158 STP X30, X25, [X31 - 0x40]!
	0x0354B15C STP X24, X23, [X31 + 0x10]
	0x0354B160 STP X22, X21, [X31 + 0x20]
	0x0354B164 STP X20, X19, [X31 + 0x30]
	0x0354B168 ADRP X20, 0xE94000
	0x0354B16C ADRP X24, 0xBE9000
	0x0354B170 LDRB W8, [X20 + 0xC7E]
	0x0354B174 LDR X24, [X24 + 0xE38]
	0x0354B178 MOV X19, X0
	0x0354B17C TBNZ X8, 0x0, 0x354B1B8
	0x0354B180 ADRP X0, 0xBA9000
	0x0354B184 LDR X0, [X0 + 0xE10]
	0x0354B188 BL 0x1C16CF4
	0x0354B18C ADRP X0, 0xBA9000
	0x0354B190 LDR X0, [X0 + 0xE28]
	0x0354B194 BL 0x1C16CF4
	0x0354B198 ADRP X0, 0xBE9000
	0x0354B19C LDR X0, [X0 + 0xE38]
	0x0354B1A0 BL 0x1C16CF4
	0x0354B1A4 ADRP X0, 0xBB0000
	0x0354B1A8 LDR X0, [X0 + 0x708]
	0x0354B1AC BL 0x1C16CF4
	0x0354B1B0 MOVZ W8, 0x1
	0x0354B1B4 STRB W8, [X20 + 0xC7E]
	0x0354B1B8 LDR X0, [X24]
	0x0354B1BC LDR X20, [X19 + 0x30]
	0x0354B1C0 LDR W8, [X0 + 0xE0]
	0x0354B1C4 CBNZ W8, 0x354B1CC
	0x0354B1C8 BL 0x1C16DFC
	0x0354B1CC CBZ X20, 0x354B4C4
	0x0354B1D0 LDR X8, [X24]
	0x0354B1D4 ADRP X9, 0xBB0000
	0x0354B1D8 ADRP X25, 0xBA9000
	0x0354B1DC LDR X8, [X8 + 0xB8]
	0x0354B1E0 LDR W8, [X8 + 0x8]
	0x0354B1E4 LDR X9, [X9 + 0x708]
	0x0354B1E8 STR W8, [X20 + 0x28]
	0x0354B1EC LDR X0, [X9]
	0x0354B1F0 LDR X25, [X25 + 0xE10]
	0x0354B1F4 BL 0x1C16F10
	0x0354B1F8 MOV X1, X31
	0x0354B1FC MOV X20, X0
	0x0354B200 BL 0x364BFC4
	0x0354B204 MOV W21, W31
	0x0354B208 MOV W22, W31
	0x0354B20C MOV W23, W31
	0x0354B210 STR W21, [X19 + 0x10]
	0x0354B214 LDR X0, [X24]
	0x0354B218 LDR W8, [X0 + 0xE0]
	0x0354B21C CBNZ W8, 0x354B228
	0x0354B220 BL 0x1C16DFC
	0x0354B224 LDR X0, [X24]
	0x0354B228 LDR X8, [X0 + 0xB8]
	0x0354B22C LDR W8, [X8]
	0x0354B230 CMP W21, W8
	0x0354B234 B.GE 0x354B424
	0x0354B238 LDRB W8, [X19 + 0x15]
	0x0354B23C CBNZ W8, 0x354B424
	0x0354B240 CBZ X20, 0x354B4C4
	0x0354B244 MOV X0, X20
	0x0354B248 MOV X1, X31
	0x0354B24C BL 0x364C2E8
	0x0354B250 MOV X0, X20
	0x0354B254 MOV X1, X31
	0x0354B258 BL 0x364BFCC
	0x0354B25C LDR X0, [X19 + 0x20]
	0x0354B260 CBZ X0, 0x354B3E4
	0x0354B264 LDR X8, [X0]
	0x0354B268 LDR X1, [X19 + 0x38]
	0x0354B26C LDP X9, X2, [X8 + 0x188]
	0x0354B270 BLR X9
	0x0354B274 LDR X0, [X19 + 0x20]
	0x0354B278 CBZ X0, 0x354B4C4
	0x0354B27C LDR X8, [X0]
	0x0354B280 LDP X9, X1, [X8 + 0x198]
	0x0354B284 BLR X9
	0x0354B288 TBNZ X0, 0x0, 0x354B2D4
	0x0354B28C MOV X0, X20
	0x0354B290 MOV X1, X31
	0x0354B294 BL 0x364C19C
	0x0354B298 LDR X8, [X24]
	0x0354B29C MOV X21, X0
	0x0354B2A0 LDR W9, [X8 + 0xE0]
	0x0354B2A4 CBNZ W9, 0x354B2B4
	0x0354B2A8 MOV X0, X8
	0x0354B2AC BL 0x1C16DFC
	0x0354B2B0 LDR X8, [X24]
	0x0354B2B4 LDR X8, [X8 + 0xB8]
	0x0354B2B8 LDRSW X8, [X8 + 0x4]
	0x0354B2BC CMP X21, X8
	0x0354B2C0 B.GE 0x354B2D4
	0x0354B2C4 MOVZ W0, 0x1
	0x0354B2C8 MOV X1, X31
	0x0354B2CC BL 0x33E3BEC
	0x0354B2D0 B 0x354B274
	0x0354B2D4 MOV X0, X20
	0x0354B2D8 MOV X1, X31
	0x0354B2DC BL 0x364C2F4
	0x0354B2E0 LDR X8, [X19 + 0x20]
	0x0354B2E4 CBZ X8, 0x354B4C4
	0x0354B2E8 LDRB W8, [X8 + 0x18]
	0x0354B2EC CBZ W8, 0x354B304
	0x0354B2F0 MOV X0, X20
	0x0354B2F4 MOV X1, X31
	0x0354B2F8 BL 0x364C19C
	0x0354B2FC MOV X21, X0
	0x0354B300 B 0x354B320
	0x0354B304 LDR X0, [X24]
	0x0354B308 LDR W8, [X0 + 0xE0]
	0x0354B30C CBNZ W8, 0x354B318
	0x0354B310 BL 0x1C16DFC
	0x0354B314 LDR X0, [X24]
	0x0354B318 LDR X8, [X0 + 0xB8]
	0x0354B31C LDR W21, [X8 + 0x4]
	0x0354B320 LDR X0, [X19 + 0x28]
	0x0354B324 CBZ X0, 0x354B4C4
	0x0354B328 LDR W10, [X0 + 0x1C]
	0x0354B32C LDR X8, [X0 + 0x10]
	0x0354B330 LDR X9, [X25]
	0x0354B334 ADD W10, W10, 0x1
	0x0354B338 STR W10, [X0 + 0x1C]
	0x0354B33C CBZ X8, 0x354B4C4
	0x0354B340 LDRSW X10, [X0 + 0x18]
	0x0354B344 LDR W11, [X8 + 0x18]
	0x0354B348 CMP W10, W11
	0x0354B34C B.CS 0x354B364
	0x0354B350 ADD W9, W10, 0x1
	0x0354B354 ADD X8, X8, X10, 0x2, LSL
	0x0354B358 STR W9, [X0 + 0x18]
	0x0354B35C STR W21, [X8 + 0x20]
	0x0354B360 B 0x354B378
	0x0354B364 LDR X8, [X9 + 0x20]
	0x0354B368 MOV W1, W21
	0x0354B36C LDR X8, [X8 + 0xC0]
	0x0354B370 LDR X2, [X8 + 0x70]
	0x0354B374 BL 0x2FDC70C
	0x0354B378 LDR X8, [X19 + 0x30]
	0x0354B37C CBZ X8, 0x354B4C4
	0x0354B380 ADD W23, W21, W23
	0x0354B384 ADD W22, W22, 0x1
	0x0354B388 SDIV W9, W23, W22
	0x0354B38C STR W9, [X8 + 0x28]
	0x0354B390 LDR X0, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X19, 0xE95000
	014 Move W8, [X19+3192]
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {52}
	020 Move X0, 0xBEA000
	021 Move X0, [X0+3576]
	022 Call 0x1C17CF4
	023 Move X0, 0xBEA000
	024 Move X0, [X0+3896]
	025 Call 0x1C17CF4
	026 Move X0, 0xBEA000
	027 Move X0, [X0+3904]
	028 Call 0x1C17CF4
	029 Move X0, 0xBEA000
	030 Move X0, [X0+3912]
	031 Call 0x1C17CF4
	032 Move X0, 0xBEA000
	033 Move X0, [X0+3584]
	034 Call 0x1C17CF4
	035 Move X0, 0xBEA000
	036 Move X0, [X0+3592]
	037 Call 0x1C17CF4
	038 Move X0, 0xBEA000
	039 Move X0, [X0+3920]
	040 Call 0x1C17CF4
	041 Move X0, 0xBEA000
	042 Move X0, [X0+3608]
	043 Call 0x1C17CF4
	044 Move X0, 0xBEB000
	045 Move X0, [X0+96]
	046 Call 0x1C17CF4
	047 Move X0, 0xBEA000
	048 Move X0, [X0+3640]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X19+3192], W8
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Move X8, [X20+16]
	056 Compare X8, 0
	057 JumpIfEqual {151}
	058 Move W8, [X8+24]
	059 Compare W8, 0
	060 JumpIfEqual {151}
	061 Move X19, [X20+40]
	062 Move [X31+76], W31
	063 Add X1, X31, 76
	064 Move X0, X19
	065 Move X2, X31
	066 Call Monitor.Enter, X0, X1
	067 Move X8, [X20+40]
	068 Compare X8, 0
	069 JumpIfEqual {188}
	070 Move W2, [X8+24]
	071 Move W9, [X8+28]
	072 Add W9, W9, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X8+24], W31
	075 Move [X8+28], W9
	076 Move X0, [X8+16]
	077 Move W1, W31
	078 Move X3, X31
	079 Call Array.Clear, X0, X1, X2
	080 Move X0, [X20+16]
	081 Compare X0, 0
	082 JumpIfEqual {189}
	083 Move X8, 0xBEA000
	084 Move X8, [X8+3920]
	085 Move X1, [X8]
	086 Add X8, X31, 8
	087 Call List`1<Object>.GetEnumerator, X0
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move X8, [X31+24]
	090 Move X24, 0xBEA000
	091 Move X25, 0xBEA000
	092 Move X26, 0xBEB000
	093 Move X27, 0xBEA000
	094 Move X24, [X24+3904]
	095 Move X25, [X25+3576]
	096 Move X26, [X26+96]
	097 Move X27, [X27+3640]
	098 Move [X31+2], V0
	099 Move [X31+48], X8
	100 Move X28, 0xBEA000
	101 Move X28, [X28+3584]
	102 Move X1, [X24]
	103 Add X0, X31, 32
	104 Call Enumerator<Object>.MoveNext, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {152}
	109 Move X22, [X31+48]
	110 Move X0, [X25]
	111 Call 0x1C17F10
	112 Move X2, [X26]
	113 Move X23, X0
	114 Move X1, X20
	115 Move X3, X31
	116 Call Action`1<Object>..ctor, X0, X1, X2
	117 Move X0, [X27]
	118 Call 0x1C17F10
	119 Move X21, X0
	120 Move X1, X22
	121 Move X2, X23
	122 Move X3, X31
	123 Call RegionPinger..ctor, X0, X1, X2
	124 Move X0, [X20+40]
	125 Compare X0, 0
	126 JumpIfEqual {184}
	127 Move W10, [X0+28]
	128 Move X8, [X0+16]
	129 Move X9, [X28]
	130 Add W10, W10, 1
	131 Move [X0+28], W10
	132 Compare X8, 0
	133 JumpIfEqual {185}
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Move W11, [X8+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W9, W10, 1
	138 Add X8, X8, X10
	139 Move [X0+24], W9
	140 Move [X8+32], X21
	141 Move X8, [X9+32]
	142 Move X8, [X8+192]
	143 Move X2, [X8+112]
	144 Move X1, X21
	145 Call List`1<Object>.AddWithResize, X0, X1
	146 Compare X21, 0
	147 JumpIfEqual {183}
	148 Move X0, X21
	149 Move X1, X31
	150 Call RegionPinger.Start, X0
	151 Move W0, W31
	152 Move X21, X31
	153 Move X8, 0xBEA000
	154 Move X8, [X8+3896]
	155 Move X1, [X8]
	156 Add X0, X31, 32
	157 Call Enumerator<Object>.Dispose, X0
	158 Compare X21, 0
	159 JumpIfNotEqual {190}
	160 Move X20, X31
	161 Move W8, [X31+76]
	162 Compare W8, 0
	163 JumpIfEqual {167}
	164 Move X0, X19
	165 Move X1, X31
	166 Call Monitor.Exit, X0
	167 Compare X20, 0
	168 JumpIfNotEqual {186}
	169 Move W0, 1
	170 Move X20, [X31+144]
	171 Move X19, [X31+152]
	172 Move X22, [X31+128]
	173 Move X21, [X31+136]
	174 Move X24, [X31+112]
	175 Move X23, [X31+120]
	176 Move X26, [X31+96]
	177 Move X25, [X31+104]
	178 Move X28, [X31+80]
	179 Move X27, [X31+88]
	180 Move X30, [X31+64]
	181 Add X31, X31, 160
	182 Return X0
	183 Call 0x1C17F20
	184 Call 0x1C17F20
	185 Call 0x1C17F20
	186 Move X0, X20
	187 Call 0x1C17F18
	188 Call 0x1C17F20
	189 Call 0x1C17F20
	190 Move X0, X21
	191 Call 0x1C17F18
	192 Move X20, X1
	193 Move X22, X0
	194 Move X22, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X22
	197 Call 0x3EB2AD0
	198 Move X21, [X0]
	199 Call 0x3EB2AE0
	200 Move X20, X1
	201 Move X21, X31
	202 Move X8, 0xBEA000
	203 Move X8, [X8+3896]
	204 Move X1, [X8]
	205 Add X0, X31, 32
	206 Call Enumerator<Object>.Dispose, X0
	207 Compare X21, 0
	208 JumpIfNotEqual {215}
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, X22
	211 Call 0x3EB2AD0
	212 Move X20, [X0]
	213 Call 0x3EB2AE0
	214 Move X20, X31
	215 Move X0, X21
	216 Call 0x1C17F18
	217 Move X20, X1
	218 Move X22, X0
	219 Move X22, X0
	220 Move W8, [X31+76]
	221 Compare W8, 0
	222 JumpIfEqual {226}
	223 Move X0, X19
	224 Move X1, X31
	225 Call Monitor.Exit, X0
	226 Compare X20, 0
	227 JumpIfNotEqual {230}
	228 Move X0, X22
	229 Call 0x1D2D690
	230 Move X0, X20
	231 Call 0x1C17F18
	232 Call 0x1991590

Method: System.Void OnRegionDone(Photon.Realtime.Region region)

Disassembly:
	0x0354B690 TBNZ X8, 0x0, 0x354B6A8
	0x0354B694 ADRP X0, 0xBE9000
	0x0354B698 LDR X0, [X0 + 0xE38]
	0x0354B69C BL 0x1C16CF4
	0x0354B6A0 MOVZ W8, 0x1
	0x0354B6A4 STRB W8, [X19 + 0xC82]
	0x0354B6A8 LDR X8, [X20]
	0x0354B6AC ADRP X9, 0xFFFFFFFFFD5A2000
	0x0354B6B0 LDR V0, [X9 + 0xE48]
	0x0354B6B4 LDP X20, X19, [X31 + 0x10]
	0x0354B6B8 LDR X8, [X8 + 0xB8]
	0x0354B6BC MOVZ W9, 0xFA0
	0x0354B6C0 STR D0, [X8]
	0x0354B6C4 STR W9, [X8 + 0x8]
	0x0354B6C8 LDR X30, [X31], #0x20
	0x0354B6CC RET
	0x0354B6D0 B 0x354B158
	0x0354B6D4 RET
	0x0354B6D8 STR X30, [X31 - 0x30]!
	0x0354B6DC STP X22, X21, [X31 + 0x10]
	0x0354B6E0 STP X20, X19, [X31 + 0x20]
	0x0354B6E4 ADRP X20, 0xE94000
	0x0354B6E8 LDRB W8, [X20 + 0xC83]
	0x0354B6EC MOV X19, X0
	0x0354B6F0 TBNZ X8, 0x0, 0x354B744
	0x0354B6F4 ADRP X0, 0xBA9000
	0x0354B6F8 LDR X0, [X0 + 0xE10]
	0x0354B6FC BL 0x1C16CF4
	0x0354B700 ADRP X0, 0xBA9000
	0x0354B704 LDR X0, [X0 + 0xE28]
	0x0354B708 BL 0x1C16CF4
	0x0354B70C ADRP X0, 0xBE9000
	0x0354B710 LDR X0, [X0 + 0xE38]
	0x0354B714 BL 0x1C16CF4
	0x0354B718 ADRP X0, 0xBB0000
	0x0354B71C LDR X0, [X0 + 0x708]
	0x0354B720 BL 0x1C16CF4
	0x0354B724 ADRP X0, 0xBB1000
	0x0354B728 LDR X0, [X0 + 0x9A0]
	0x0354B72C BL 0x1C16CF4
	0x0354B730 ADRP X0, 0xBAB000
	0x0354B734 LDR X0, [X0 + 0xC30]
	0x0354B738 BL 0x1C16CF4
	0x0354B73C MOVZ W8, 0x1
	0x0354B740 STRB W8, [X20 + 0xC83]
	0x0354B744 LDR W8, [X19 + 0x10]
	0x0354B748 MOV W0, W31
	0x0354B74C CMP W8, 0x5
	0x0354B750 B.HI 0x354BCA4
	0x0354B754 LDR X21, [X19 + 0x20]
	0x0354B758 ADRP X9, 0xFFFFFFFFFD64B000
	0x0354B75C ADD X9, X9, 0xDAA
	0x0354B760 ADR X10, 0x14
	0x0354B764 LDRH W11, [X9, X8, LSL #1]
	0x0354B768 ADD X10, X10, X11, 0x2, LSL
	0x0354B76C MOVN W8, 0x0
	0x0354B770 BR X10
	0x0354B774 MOVN W8, 0x0
	0x0354B778 STR W8, [X19 + 0x10]
	0x0354B77C CBZ X21, 0x354BCB4
	0x0354B780 ADRP X22, 0xBE9000
	0x0354B784 LDR X22, [X22 + 0xE38]
	0x0354B788 LDR X20, [X21 + 0x30]
	0x0354B78C LDR X0, [X22]
	0x0354B790 LDR W8, [X0 + 0xE0]
	0x0354B794 CBNZ W8, 0x354B79C
	0x0354B798 BL 0x1C16DFC
	0x0354B79C CBZ X20, 0x354BCB4
	0x0354B7A0 LDR X8, [X22]
	0x0354B7A4 LDR X8, [X8 + 0xB8]
	0x0354B7A8 LDR W8, [X8 + 0x8]
	0x0354B7AC STR W8, [X20 + 0x28]
	0x0354B7B0 STR X31, [X19 + 0x28]
	0x0354B7B4 ADRP X8, 0xBB0000
	0x0354B7B8 LDR X8, [X8 + 0x708]
	0x0354B7BC LDR X0, [X8]
	0x0354B7C0 BL 0x1C16F10
	0x0354B7C4 MOV X1, X31
	0x0354B7C8 MOV X20, X0
	0x0354B7CC BL 0x364BFC4
	0x0354B7D0 MOV W22, W31
	0x0354B7D4 STR X20, [X19 + 0x30]
	0x0354B7D8 STR W31, [X21 + 0x10]
	0x0354B7DC B 0x354B824
	0x0354B7E0 MOVN W8, 0x0
	0x0354B7E4 STR W8, [X19 + 0x10]
	0x0354B7E8 CBNZ X21, 0x354BA0C
	0x0354B7EC B 0x354BCB4
	0x0354B7F0 MOVN W8, 0x0
	0x0354B7F4 STR W8, [X19 + 0x10]
	0x0354B7F8 B 0x354B864
	0x0354B7FC MOVN W8, 0x0
	0x0354B800 STR W8, [X19 + 0x10]
	0x0354B804 CBNZ X21, 0x354B8A0
	0x0354B808 B 0x354BCB4
	0x0354B80C MOVN W8, 0x0
	0x0354B810 STR W8, [X19 + 0x10]
	0x0354B814 CBZ X21, 0x354BCB4
	0x0354B818 LDR W8, [X21 + 0x10]
	0x0354B81C ADD W22, W8, 0x1
	0x0354B820 STR W22, [X21 + 0x10]
	0x0354B824 ADRP X20, 0xBE9000
	0x0354B828 LDR X20, [X20 + 0xE38]
	0x0354B82C LDR X0, [X20]
	0x0354B830 LDR W8, [X0 + 0xE0]
	0x0354B834 CBNZ W8, 0x354B840
	0x0354B838 BL 0x1C16DFC
	0x0354B83C LDR X0, [X20]
	0x0354B840 LDR X8, [X0 + 0xB8]
	0x0354B844 LDR W8, [X8]
	0x0354B848 CMP W22, W8
	0x0354B84C B.GE 0x354BC00
	0x0354B850 LDRB W8, [X21 + 0x15]
	0x0354B854 CBZ W8, 0x354B864
	0x0354B858 MOV X20, X31
	0x0354B85C MOVZ W8, 0x1
	0x0354B860 B 0x354BC98
	0x0354B864 LDR X0, [X19 + 0x30]
	0x0354B868 CBZ X0, 0x354BCB4
	0x0354B86C MOV X1, X31
	0x0354B870 BL 0x364C2E8
	0x0354B874 LDR X0, [X19 + 0x30]
	0x0354B878 CBZ X0, 0x354BCB4
	0x0354B87C MOV X1, X31
	0x0354B880 BL 0x364BFCC
	0x0354B884 CBZ X21, 0x354BA90
	0x0354B888 LDR X0, [X21 + 0x20]
	0x0354B88C CBZ X0, 0x354BA98
	0x0354B890 LDR X8, [X0]
	0x0354B894 LDR X1, [X21 + 0x38]
	0x0354B898 LDP X9, X2, [X8 + 0x188]
	0x0354B89C BLR X9
	0x0354B8A0 LDR X0, [X21 + 0x20]
	0x0354B8A4 CBZ X0, 0x354BCB4
	0x0354B8A8 LDR X8, [X0]
	0x0354B8AC LDP X9, X1, [X8 + 0x198]
	0x0354B8B0 BLR X9
	0x0354B8B4 TBNZ X0, 0x0, 0x354B928
	0x0354B8B8 LDR X0, [X19 + 0x30]
	0x0354B8BC CBZ X0, 0x354BCB4
	0x0354B8C0 MOV X1, X31
	0x0354B8C4 BL 0x364C19C
	0x0354B8C8 ADRP X22, 0xBE9000
	0x0354B8CC LDR X22, [X22 + 0xE38]
	0x0354B8D0 MOV X20, X0
	0x0354B8D4 LDR X8, [X22]
	0x0354B8D8 LDR W9, [X8 + 0xE0]
	0x0354B8DC CBNZ W9, 0x354B8EC
	0x0354B8E0 MOV X0, X8
	0x0354B8E4 BL 0x1C16DFC
	0x0354B8E8 LDR X8, [X22]
	0x0354B8EC LDR X8, [X8 + 0xB8]
	0x0354B8F0 LDRSW X8, [X8 + 0x4]
	0x0354B8F4 CMP X20, X8
	0x0354B8F8 B.GE 0x354B928
	0x0354B8FC ADRP X8, 0xBB1000
	0x0354B900 LDR X8, [X8 + 0x9A0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X20, 0xE95000
	010 Move W8, [X20+3193]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xBEB000
	017 Move X0, [X0+64]
	018 Call 0x1C17CF4
	019 Move X0, 0xBEB000
	020 Move X0, [X0+72]
	021 Call 0x1C17CF4
	022 Move X0, 0xBEB000
	023 Move X0, [X0+80]
	024 Call 0x1C17CF4
	025 Move X0, 0xBEB000
	026 Move X0, [X0+88]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3193], W8
	030 Move [X31+32], X31
	031 Move [X31+40], X31
	032 Move [X31+48], X31
	033 Move X20, [X19+40]
	034 Move [X31+76], W31
	035 Add X1, X31, 76
	036 Move X0, X20
	037 Move X2, X31
	038 Call Monitor.Enter, X0, X1
	039 Move W8, [X19+84]
	040 Compare W8, 0
	041 JumpIfEqual {74}
	042 Move X0, [X19+40]
	043 Move [X19+32], X31
	044 Compare X0, 0
	045 JumpIfEqual {124}
	046 Move X8, 0xBEB000
	047 Move X8, [X8+88]
	048 Move X1, [X8]
	049 Add X8, X31, 8
	050 Call List`1<Object>.GetEnumerator, X0
	051 Move X21, 0xBEB000
	052 Move X24, 0xBEB000
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X8, [X31+24]
	055 Move X21, [X21+72]
	056 Move X24, [X24+64]
	057 Move [X31+2], V0
	058 Move [X31+48], X8
	059 Move X1, [X21]
	060 Add X0, X31, 32
	061 Call Enumerator<Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {76}
	066 Move X8, [X31+48]
	067 Compare X8, 0
	068 JumpIfEqual {121}
	069 Move W8, [X8+20]
	070 Compare W8, 0
	071 JumpIfNotEqual {59}
	072 Move X21, X31
	073 Move W23, 3
	074 Move X22, X31
	075 Move W23, 3
	076 Move X21, X31
	077 Move W23, 6
	078 Move X1, [X24]
	079 Add X0, X31, 32
	080 Call Enumerator<Object>.Dispose, X0
	081 Compare X21, 0
	082 JumpIfNotEqual {125}
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare W23, 0
	085 JumpIfNotEqual {89}
	086 Move X22, X31
	087 Move [X19+84], W31
	088 Move W23, 7
	089 Move X22, X31
	090 Move W8, [X31+76]
	091 Compare W8, 0
	092 JumpIfEqual {96}
	093 Move X0, X20
	094 Move X1, X31
	095 Call Monitor.Exit, X0
	096 Compare X22, 0
	097 JumpIfNotEqual {122}
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Compare W23, 0
	100 JumpIfNotEqual {112}
	101 Move W8, [X19+85]
	102 Compare W8, 0
	103 JumpIfNotEqual {112}
	104 Move X8, [X19+48]
	105 Compare X8, 0
	106 JumpIfEqual {127}
	107 Move X9, [X8+24]
	108 Move X0, [X8+64]
	109 Move X2, [X8+40]
	110 Move X1, X19
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X20, [X31+112]
	113 Move X19, [X31+120]
	114 Move X22, [X31+96]
	115 Move X21, [X31+104]
	116 Move X24, [X31+80]
	117 Move X23, [X31+88]
	118 Move X30, [X31+64]
	119 Add X31, X31, 128
	120 Return 
	121 Call 0x1C17F20
	122 Move X0, X22
	123 Call 0x1C17F18
	124 Call 0x1C17F20
	125 Move X0, X21
	126 Call 0x1C17F18
	127 Call 0x1C17F20
	128 Move X22, X1
	129 Move X23, X0
	130 Move X22, X1
	131 Move X23, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X23
	134 Call 0x3EB2AD0
	135 Move X21, [X0]
	136 Call 0x3EB2AE0
	137 Move W23, W31
	138 Move X21, X31
	139 Move X1, [X24]
	140 Add X0, X31, 32
	141 Call Enumerator<Object>.Dispose, X0
	142 Compare X21, 0
	143 JumpIfNotEqual {151}
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X23
	146 Call 0x3EB2AD0
	147 Move X22, [X0]
	148 Call 0x3EB2AE0
	149 Move W23, W31
	150 Move X22, X31
	151 Move X0, X21
	152 Call 0x1C17F18
	153 Move X22, X1
	154 Move X23, X0
	155 Move X23, X0
	156 Move W8, [X31+76]
	157 Compare W8, 0
	158 JumpIfEqual {162}
	159 Move X0, X20
	160 Move X1, X31
	161 Call Monitor.Exit, X0
	162 Compare X22, 0
	163 JumpIfNotEqual {166}
	164 Move X0, X23
	165 Call 0x1D2D690
	166 Move X0, X22
	167 Call 0x1C17F18
	168 Call 0x1991590

