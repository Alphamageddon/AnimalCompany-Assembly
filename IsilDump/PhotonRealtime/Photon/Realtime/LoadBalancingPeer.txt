Type: Photon.Realtime.LoadBalancingPeer

Method: System.Type get_PingImplementation()

Disassembly:
	0x03545E1C STP X22, X21, [X31 + 0x20]
	0x03545E20 STP X20, X19, [X31 + 0x30]
	0x03545E24 ADRP X21, 0xE9A000
	0x03545E28 LDRB W8, [X21 + 0xC46]
	0x03545E2C MOV X20, X1
	0x03545E30 MOV X19, X0
	0x03545E34 TBNZ X8, 0x0, 0x3545EAC
	0x03545E38 ADRP X0, 0xBAE000
	0x03545E3C LDR X0, [X0 + 0xB58]
	0x03545E40 BL 0x1C16CF4
	0x03545E44 ADRP X0, 0xBAF000
	0x03545E48 LDR X0, [X0 + 0x9D8]
	0x03545E4C BL 0x1C16CF4
	0x03545E50 ADRP X0, 0xBB7000
	0x03545E54 LDR X0, [X0 + 0x540]
	0x03545E58 BL 0x1C16CF4
	0x03545E5C ADRP X0, 0xBB6000
	0x03545E60 LDR X0, [X0 + 0xD60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE9B000
	005 Move X20, 0xBF0000
	006 Move W8, [X19+3132]
	007 Move X20, [X20+3456]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBF0000
	013 Move X0, [X0+3456]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3132], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_PingImplementation(System.Type value)

Disassembly:
	0x03545E64 BL 0x1C16CF4
	0x03545E68 ADRP X0, 0xBB7000
	0x03545E6C LDR X0, [X0 + 0x618]
	0x03545E70 BL 0x1C16CF4
	0x03545E74 ADRP X0, 0xBB7000
	0x03545E78 LDR X0, [X0 + 0x2B8]
	0x03545E7C BL 0x1C16CF4
	0x03545E80 ADRP X0, 0xBB6000
	0x03545E84 LDR X0, [X0 + 0xBC8]
	0x03545E88 BL 0x1C16CF4
	0x03545E8C ADRP X0, 0xBB7000
	0x03545E90 LDR X0, [X0 + 0x548]
	0x03545E94 BL 0x1C16CF4
	0x03545E98 ADRP X0, 0xBB7000
	0x03545E9C LDR X0, [X0 + 0x638]
	0x03545EA0 BL 0x1C16CF4
	0x03545EA4 MOVZ W8, 0x1
	0x03545EA8 STRB W8, [X21 + 0xC46]
	0x03545EAC LDRB W8, [X19 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE9B000
	006 Move X21, 0xBF0000
	007 Move W8, [X20+3133]
	008 Move X21, [X21+3456]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBF0000
	015 Move X0, [X0+3456]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3133], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void .ctor(ExitGames.Client.Photon.ConnectionProtocol protocolType)

Disassembly:
	0x03545EB0 CMP W8, 0x3
	0x03545EB4 B.CC 0x3545F34
	0x03545EB8 LDR X21, [X19 + 0x48]
	0x03545EBC CBZ X21, 0x3546164
	0x03545EC0 ADRP X9, 0xBB6000
	0x03545EC4 LDR X8, [X21]
	0x03545EC8 LDR X9, [X9 + 0xBC8]
	0x03545ECC ADRP X10, 0xBB7000
	0x03545ED0 LDR X1, [X9]
	0x03545ED4 LDR X10, [X10 + 0x638]
	0x03545ED8 LDRH W9, [X8 + 0x12E]
	0x03545EDC LDR X22, [X10]
	0x03545EE0 CBZ X9, 0x3545F04
	0x03545EE4 LDR X10, [X8 + 0xB0]
	0x03545EE8 ADD X10, X10, 0x8
	0x03545EEC LDUR X11, [X10 - 0x8]
	0x03545EF0 CMP X11, X1
	0x03545EF4 B.EQ 0x3545F14
	0x03545EF8 SUBS X9, X9, 0x1
	0x03545EFC ADD X10, X10, 0x10
	0x03545F00 B.NE 0x3545EEC
	0x03545F04 MOV X0, X21
	0x03545F08 MOV W2, W31
	0x03545F0C BL 0x1C5C788
	0x03545F10 B 0x3545F20
	0x03545F14 LDRSW X9, [X10]
	0x03545F18 ADD X8, X8, X9, 0x4, LSL
	0x03545F1C ADD X0, X8, 0x138
	0x03545F20 LDP X8, X3, [X0]
	0x03545F24 MOVZ W1, 0x3
	0x03545F28 MOV X0, X21
	0x03545F2C MOV X2, X22
	0x03545F30 BLR X8
	0x03545F34 ADRP X8, 0xBB7000
	0x03545F38 LDR X8, [X8 + 0x2B8]
	0x03545F3C ADRP X21, 0xBB7000
	0x03545F40 LDR X0, [X8]
	0x03545F44 LDR X21, [X21 + 0x540]
	0x03545F48 BL 0x1C16F10
	0x03545F4C LDR X1, [X21]
	0x03545F50 MOV X21, X0
	0x03545F54 BL 0x29D2C7C
	0x03545F58 CBZ X20, 0x3546164
	0x03545F5C LDR X0, [X20 + 0x10]
	0x03545F60 ADRP X22, 0xBB7000
	0x03545F64 LDR X22, [X22 + 0x618]
	0x03545F68 MOV X1, X31
	0x03545F6C BL 0x32277A8
	0x03545F70 TBNZ X0, 0x0, 0x3545F8C
	0x03545F74 CBZ X21, 0x3546164
	0x03545F78 LDR X2, [X20 + 0x10]
	0x03545F7C LDR X3, [X22]
	0x03545F80 MOVZ W1, 0xFF
	0x03545F84 MOV X0, X21
	0x03545F88 BL 0x29D3520
	0x03545F8C LDRB W8, [X20 + 0x31]
	0x03545F90 CMP W8, 0x3
	0x03545F94 B.EQ 0x3546030
	0x03545F98 CMP W8, 0x1
	0x03545F9C B.NE 0x3546064
	0x03545FA0 ADRP X23, 0xBAF000
	0x03545FA4 LDR X23, [X23 + 0x9D8]
	0x03545FA8 ADD X1, X31, 0xC
	0x03545FAC STRB W8, [X31 + 0xC]
	0x03545FB0 LDR X0, [X23]
	0x03545FB4 BL 0x1C16E04
	0x03545FB8 CBZ X21, 0x3546164
	0x03545FBC LDR X3, [X22]
	0x03545FC0 MOV X2, X0
	0x03545FC4 MOVZ W1, 0xD7
	0x03545FC8 MOV X0, X21
	0x03545FCC BL 0x29D3520
	0x03545FD0 LDR X8, [X20 + 0x20]
	0x03545FD4 CBZ X8, 0x3546064
	0x03545FD8 LDR X0, [X8 + 0x10]
	0x03545FDC MOV X1, X31
	0x03545FE0 BL 0x32277A8
	0x03545FE4 TBNZ X0, 0x0, 0x3546064
	0x03545FE8 LDR X8, [X20 + 0x20]
	0x03545FEC CBZ X8, 0x3546164
	0x03545FF0 LDR X2, [X8 + 0x10]
	0x03545FF4 LDR X3, [X22]
	0x03545FF8 MOVZ W1, 0xD5
	0x03545FFC MOV X0, X21
	0x03546000 BL 0x29D3520
	0x03546004 LDR X8, [X20 + 0x20]
	0x03546008 CBZ X8, 0x3546164
	0x0354600C LDRB W8, [X8 + 0x18]
	0x03546010 LDR X0, [X23]
	0x03546014 ADD X1, X31, 0x8
	0x03546018 STRB W8, [X31 + 0x8]
	0x0354601C BL 0x1C16E04
	0x03546020 LDR X3, [X22]
	0x03546024 MOV X2, X0
	0x03546028 MOVZ W1, 0xD4
	0x0354602C B 0x354605C
	0x03546030 ADRP X8, 0xBAE000
	0x03546034 LDR X8, [X8 + 0x9D8]
	0x03546038 ADD X1, X31, 0x4
	0x0354603C LDR X0, [X8]
	0x03546040 MOVZ W8, 0x3
	0x03546044 STRB W8, [X31 + 0x4]
	0x03546048 BL 0x1C16E04
	0x0354604C CBZ X21, 0x3546164
	0x03546050 LDR X3, [X22]
	0x03546054 MOV X2, X0
	0x03546058 MOVZ W1, 0xD7
	0x0354605C MOV X0, X21
	0x03546060 BL 0x29D3520
	0x03546064 LDR X2, [X20 + 0x38]
	0x03546068 CBZ X2, 0x3546088
	0x0354606C LDR X8, [X2 + 0x18]
	0x03546070 CBZ X8, 0x3546088
	0x03546074 CBZ X21, 0x3546164
	0x03546078 LDR X3, [X22]
	0x0354607C MOVZ W1, 0xEE
	0x03546080 MOV X0, X21
	0x03546084 BL 0x29D3520
	0x03546088 LDRB W8, [X20 + 0x30]
	0x0354608C CBZ W8, 0x354610C
	0x03546090 LDR X0, [X20 + 0x28]
	0x03546094 CBZ X0, 0x35460C8
	0x03546098 ADRP X8, 0xBB5000
	0x0354609C LDR X8, [X8 + 0xD60]
	0x035460A0 LDR X1, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xE9B000
	011 Move X24, 0xBF0000
	012 Move W8, [X21+3134]
	013 Move X24, [X24+3976]
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0xBB8000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB8000
	024 Move X0, [X0+1424]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB7000
	027 Move X0, [X0+3808]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB8000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB8000
	033 Move X0, [X0+1440]
	034 Call 0x1C17CF4
	035 Move X0, 0xBF0000
	036 Move X0, [X0+3984]
	037 Call 0x1C17CF4
	038 Move X0, 0xBF0000
	039 Move X0, [X0+3992]
	040 Call 0x1C17CF4
	041 Move X0, 0xBF0000
	042 Move X0, [X0+3976]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+3134], W8
	046 Move X0, [X24]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X24]
	052 Move X8, [X0+184]
	053 Move X21, [X8+8]
	054 Compare X21, 0
	055 JumpIfNotEqual {77}
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X24]
	061 Move X9, 0xBB8000
	062 Move X8, [X0+184]
	063 Move X9, [X9+1424]
	064 Move X22, [X8]
	065 Move X0, [X9]
	066 Call 0x1C17F10
	067 Move X8, 0xBF0000
	068 Move X8, [X8+3984]
	069 Move X1, X22
	070 Move X3, X31
	071 Move X21, X0
	072 Move X2, [X8]
	073 Call Func`1<Object>..ctor, X0, X1, X2
	074 Move X0, [X24]
	075 Move X8, [X0+184]
	076 Move [X8+8], X21
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X24]
	082 Move X8, [X0+184]
	083 Move X26, 0xBB8000
	084 Move X25, 0xBB8000
	085 Move X22, [X8+16]
	086 Move X26, [X26+1440]
	087 Move X25, [X25+1432]
	088 Compare X22, 0
	089 JumpIfNotEqual {111}
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X24]
	095 Move X9, 0xBB8000
	096 Move X8, [X0+184]
	097 Move X9, [X9+1416]
	098 Move X23, [X8]
	099 Move X0, [X9]
	100 Call 0x1C17F10
	101 Move X8, 0xBEF000
	102 Move X8, [X8+3992]
	103 Move X1, X23
	104 Move X3, X31
	105 Move X22, X0
	106 Move X2, [X8]
	107 Call Action`1<Object>..ctor, X0, X1, X2
	108 Move X8, [X24]
	109 Move X8, [X8+184]
	110 Move [X8+16], X22
	111 Move X0, [X26]
	112 Call 0x1C17F10
	113 Move X4, [X25]
	114 Move W3, 1
	115 Move X1, X21
	116 Move X2, X22
	117 Move X23, X0
	118 Call 0x24A72B4, X0, X1, X2, X3
	119 Compare X19, 0
	120 JumpIfEqual {143}
	121 Move X8, 0xBB6000
	122 Move X8, [X8+3808]
	123 Move [X19+272], X23
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X19
	130 Move W1, W20
	131 Move X2, X31
	132 Call PhotonPeer..ctor, X0, X1
	133 Move X0, X19
	134 Move X20, [X31+64]
	135 Move X19, [X31+72]
	136 Move X22, [X31+48]
	137 Move X21, [X31+56]
	138 Move X24, [X31+32]
	139 Move X23, [X31+40]
	140 Move X26, [X31+16]
	141 Move X25, [X31+24]
	142 Move X30, [X31+80]
	143 Call 0x1C17F20

Method: System.Void .ctor(ExitGames.Client.Photon.IPhotonPeerListener listener, ExitGames.Client.Photon.ConnectionProtocol protocolType)

Disassembly:
	0x0353A728 MOVZ W2, 0xC
	0x0353A72C BLR X9
	0x0353A730 MOVZ W0, 0x1
	0x0353A734 B 0x353A6BC
	0x0353A738 BL 0x1C16F20
	0x0353A73C SUB X31, X31, 0x40
	0x0353A740 STP X30, X21, [X31 + 0x20]
	0x0353A744 STP X20, X19, [X31 + 0x30]
	0x0353A748 ADRP X20, 0xEA5000
	0x0353A74C LDRB W8, [X20 + 0xBEF]
	0x0353A750 MOV X19, X0
	0x0353A754 TBNZ X8, 0x0, 0x353A7A8
	0x0353A758 ADRP X0, 0xBFA000
	0x0353A75C LDR X0, [X0 + 0xBE0]
	0x0353A760 BL 0x1C16CF4
	0x0353A764 ADRP X0, 0xBC1000
	0x0353A768 LDR X0, [X0 + 0xD40]
	0x0353A76C BL 0x1C16CF4
	0x0353A770 ADRP X0, 0xBC2000
	0x0353A774 LDR X0, [X0 + 0x90]
	0x0353A778 BL 0x1C16CF4
	0x0353A77C ADRP X0, 0xBC2000
	0x0353A780 LDR X0, [X0 + 0x98]
	0x0353A784 BL 0x1C16CF4
	0x0353A788 ADRP X0, 0xBC2000
	0x0353A78C LDR X0, [X0 + 0xA0]
	0x0353A790 BL 0x1C16CF4
	0x0353A794 ADRP X0, 0xBC2000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xEA6000
	008 Move X22, 0xBC2000
	009 Move W8, [X23+3135]
	010 Move X22, [X22+3808]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBC2000
	019 Move X0, [X0+3808]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3135], W8
	023 Move X0, X20
	024 Move W1, W21
	025 Call LoadBalancingPeer..ctor, X0, X1
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move [X20+72], X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return 

Method: System.Void ConfigUnitySockets()

Disassembly:
	0x035460A4 BL 0x2AA4E88
	0x035460A8 CMP W0, 0x1
	0x035460AC B.LT 0x35460C8
	0x035460B0 CBZ X21, 0x3546164
	0x035460B4 LDR X2, [X20 + 0x28]
	0x035460B8 LDR X3, [X22]
	0x035460BC MOVZ W1, 0xF9
	0x035460C0 MOV X0, X21
	0x035460C4 BL 0x29D3520
	0x035460C8 ADRP X8, 0xBAD000
	0x035460CC LDR X8, [X8 + 0xB58]
	0x035460D0 ADD X1, X31, 0x0
	0x035460D4 LDR X0, [X8]
	0x035460D8 MOVZ W8, 0x1
	0x035460DC STRB W8, [X31]
	0x035460E0 BL 0x1C16E04
	0x035460E4 CBZ X21, 0x3546164
	0x035460E8 LDR X3, [X22]
	0x035460EC MOV X2, X0
	0x035460F0 MOVZ W1, 0xFA
	0x035460F4 MOV X0, X21
	0x035460F8 BL 0x29D3520
	0x035460FC LDR X2, [X20 + 0x18]
	0x03546100 MOV X1, X21
	0x03546104 MOV W3, W31
	0x03546108 BL 0x354569C
	0x0354610C ADRP X20, 0xBB6000
	0x03546110 LDR X20, [X20 + 0x548]
	0x03546114 LDR X0, [X20]
	0x03546118 LDR W8, [X0 + 0xE0]
	0x0354611C CBNZ W8, 0x3546128
	0x03546120 BL 0x1C16DFC
	0x03546124 LDR X0, [X20]
	0x03546128 LDR X8, [X0 + 0xB8]
	0x0354612C LDR X9, [X19]
	0x03546130 MOVZ W1, 0xE2
	0x03546134 MOV X0, X19
	0x03546138 LDR X3, [X8]
	0x0354613C LDR X8, [X9 + 0x228]
	0x03546140 LDR X4, [X9 + 0x230]
	0x03546144 MOV X2, X21
	0x03546148 BLR X8
	0x0354614C LDP X20, X19, [X31 + 0x30]
	0x03546150 LDP X22, X21, [X31 + 0x20]
	0x03546154 LDP X30, X23, [X31 + 0x10]
	0x03546158 AND W0, W0, 0x1
	0x0354615C ADD X31, X31, 0x40
	0x03546160 RET
	0x03546164 BL 0x1C16F20
	0x03546168 SUB X31, X31, 0x50
	0x0354616C STR X30, [X31 + 0x10]
	0x03546170 STP X24, X23, [X31 + 0x20]
	0x03546174 STP X22, X21, [X31 + 0x30]
	0x03546178 STP X20, X19, [X31 + 0x40]
	0x0354617C ADRP X21, 0xE99000
	0x03546180 LDRB W8, [X21 + 0xC47]
	0x03546184 MOV X20, X1
	0x03546188 MOV X19, X0
	0x0354618C TBNZ X8, 0x0, 0x3546228
	0x03546190 ADRP X0, 0xBAD000
	0x03546194 LDR X0, [X0 + 0xB58]
	0x03546198 BL 0x1C16CF4
	0x0354619C ADRP X0, 0xBAE000
	0x035461A0 LDR X0, [X0 + 0x9D8]
	0x035461A4 BL 0x1C16CF4
	0x035461A8 ADRP X0, 0xBB6000
	0x035461AC LDR X0, [X0 + 0x540]
	0x035461B0 BL 0x1C16CF4
	0x035461B4 ADRP X0, 0xBB5000
	0x035461B8 LDR X0, [X0 + 0xD60]
	0x035461BC BL 0x1C16CF4
	0x035461C0 ADRP X0, 0xBB6000
	0x035461C4 LDR X0, [X0 + 0x618]
	0x035461C8 BL 0x1C16CF4
	0x035461CC ADRP X0, 0xBB6000
	0x035461D0 LDR X0, [X0 + 0x2B8]
	0x035461D4 BL 0x1C16CF4
	0x035461D8 ADRP X0, 0xBEE000
	0x035461DC LDR X0, [X0 + 0xBA8]
	0x035461E0 BL 0x1C16CF4
	0x035461E4 ADRP X0, 0xBB5000
	0x035461E8 LDR X0, [X0 + 0xDA0]
	0x035461EC BL 0x1C16CF4
	0x035461F0 ADRP X0, 0xBB5000
	0x035461F4 LDR X0, [X0 + 0xBC8]
	0x035461F8 BL 0x1C16CF4
	0x035461FC ADRP X0, 0xBAD000
	0x03546200 LDR X0, [X0 + 0x758]
	0x03546204 BL 0x1C16CF4
	0x03546208 ADRP X0, 0xBB6000
	0x0354620C LDR X0, [X0 + 0x548]
	0x03546210 BL 0x1C16CF4
	0x03546214 ADRP X0, 0xBB6000
	0x03546218 LDR X0, [X0 + 0x640]
	0x0354621C BL 0x1C16CF4
	0x03546220 MOVZ W8, 0x1
	0x03546224 STRB W8, [X21 + 0xC47]
	0x03546228 LDRB W8, [X19 + 0x40]
	0x0354622C CMP W8, 0x3
	0x03546230 B.CC 0x35462B0
	0x03546234 LDR X21, [X19 + 0x48]
	0x03546238 CBZ X21, 0x3546550
	0x0354623C ADRP X9, 0xBB5000
	0x03546240 LDR X8, [X21]
	0x03546244 LDR X9, [X9 + 0xBC8]
	0x03546248 ADRP X10, 0xBB6000
	0x0354624C LDR X1, [X9]
	0x03546250 LDR X10, [X10 + 0x640]
	0x03546254 LDRH W9, [X8 + 0x12E]
	0x03546258 LDR X22, [X10]
	0x0354625C CBZ X9, 0x3546280
	0x03546260 LDR X10, [X8 + 0xB0]
	0x03546264 ADD X10, X10, 0x8
	0x03546268 LDUR X11, [X10 - 0x8]
	0x0354626C CMP X11, X1
	0x03546270 B.EQ 0x3546290

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE9A000
	008 Move X21, 0xBAE000
	009 Move W8, [X20+3136]
	010 Move X21, [X21+1728]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xBB7000
	017 Move X0, [X0+1464]
	018 Call 0x1C17CF4
	019 Move X0, 0xBEF000
	020 Move X0, [X0+4000]
	021 Call 0x1C17CF4
	022 Move X0, 0xBB6000
	023 Move X0, [X0+1480]
	024 Call 0x1C17CF4
	025 Move X0, 0xBAE000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB7000
	029 Move X0, [X0+1504]
	030 Call 0x1C17CF4
	031 Move X0, 0xBB7000
	032 Move X0, [X0+1528]
	033 Call 0x1C17CF4
	034 Move X0, 0xBB7000
	035 Move X0, [X0+1544]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+3136], W8
	039 Move X0, [X21]
	040 Move X20, 0xBB7000
	041 Move X23, 0xBB6000
	042 Move X22, 0xBEF000
	043 Move W8, [X0+224]
	044 Move X20, [X20+1528]
	045 Move X23, [X23+1480]
	046 Move X22, [X22+4000]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X20]
	051 Move X2, [X23]
	052 Move X3, [X22]
	053 Move W1, W31
	054 Call 0x1C180BC
	055 Move X1, X31
	056 Move X2, X31
	057 Move X20, X0
	058 Call Type.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {76}
	063 Move X0, [X21]
	064 Move X20, 0xBB7000
	065 Move W8, [X0+224]
	066 Move X20, [X20+1504]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X2, [X23]
	072 Move X3, [X22]
	073 Move W1, W31
	074 Call 0x1C180BC
	075 Move X20, X0
	076 Move X0, [X21]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X20
	082 Move X1, X31
	083 Move X2, X31
	084 Call Type.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {102}
	089 Move X0, [X21]
	090 Move X20, 0xBB7000
	091 Move W8, [X0+224]
	092 Move X20, [X20+1544]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, [X20]
	097 Move X2, [X23]
	098 Move X3, [X22]
	099 Move W1, W31
	100 Call 0x1C180BC
	101 Move X20, X0
	102 Move X0, [X21]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X20
	108 Move X1, X31
	109 Move X2, X31
	110 Call Type.op_Inequality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {138}
	115 Move X0, [X19+48]
	116 Compare X0, 0
	117 JumpIfEqual {145}
	118 Move X21, 0xBB7000
	119 Move X21, [X21+1464]
	120 Move W1, 4
	121 Move X2, X20
	122 Move X3, [X21]
	123 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	124 Move X0, [X19+48]
	125 Compare X0, 0
	126 JumpIfEqual {145}
	127 Move X3, [X21]
	128 Move X2, X20
	129 Move X20, [X31+32]
	130 Move X19, [X31+40]
	131 Move X22, [X31+16]
	132 Move X21, [X31+24]
	133 Move W1, 5
	134 Move X30, [X31+48]
	135 Move X23, [X31+56]
	136 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	137 Return 
	138 Move X20, [X31+32]
	139 Move X19, [X31+40]
	140 Move X22, [X31+16]
	141 Move X21, [X31+24]
	142 Move X30, [X31+48]
	143 Move X23, [X31+56]
	144 Return 
	145 Call 0x1C17F20

Method: System.Boolean OpGetRegions(System.String appId)

Disassembly:
	0x03546274 SUBS X9, X9, 0x1
	0x03546278 ADD X10, X10, 0x10
	0x0354627C B.NE 0x3546268
	0x03546280 MOV X0, X21
	0x03546284 MOV W2, W31
	0x03546288 BL 0x1C5C788
	0x0354628C B 0x354629C
	0x03546290 LDRSW X9, [X10]
	0x03546294 ADD X8, X8, X9, 0x4, LSL
	0x03546298 ADD X0, X8, 0x138
	0x0354629C LDP X8, X3, [X0]
	0x035462A0 MOVZ W1, 0x3
	0x035462A4 MOV X0, X21
	0x035462A8 MOV X2, X22
	0x035462AC BLR X8
	0x035462B0 ADRP X8, 0xBB5000
	0x035462B4 LDR X8, [X8 + 0xDA0]
	0x035462B8 LDR X0, [X8]
	0x035462BC BL 0x1C16F10
	0x035462C0 MOV X1, X31
	0x035462C4 MOV X22, X0
	0x035462C8 BL 0x34ED7D8
	0x035462CC CBZ X20, 0x3546550
	0x035462D0 ADRP X8, 0xBEE000
	0x035462D4 LDR X8, [X8 + 0xBA8]
	0x035462D8 LDR X21, [X20 + 0x10]
	0x035462DC LDR X0, [X8]
	0x035462E0 LDR W8, [X0 + 0xE0]
	0x035462E4 CBNZ W8, 0x35462EC
	0x035462E8 BL 0x1C16DFC
	0x035462EC ADRP X23, 0xBAE000
	0x035462F0 LDR X23, [X23 + 0x9D8]
	0x035462F4 MOV X0, X22
	0x035462F8 MOV X1, X21
	0x035462FC BL 0x3536EF8
	0x03546300 LDR W8, [X20 + 0x18]
	0x03546304 CMP W8, 0x1
	0x03546308 B.LT 0x3546378
	0x0354630C LDR X0, [X23]
	0x03546310 CMP W8, 0x100
	0x03546314 MOVZ W9, 0x100
	0x03546318 CSEL W8, W8, W9, LT
	0x0354631C ADD X1, X31, 0x1C
	0x03546320 STRB W8, [X31 + 0x1C]
	0x03546324 BL 0x1C16E04
	0x03546328 CBZ X22, 0x3546550
	0x0354632C MOV X2, X0
	0x03546330 MOVZ W1, 0xFF
	0x03546334 MOV X0, X22
	0x03546338 MOV X3, X31
	0x0354633C BL 0x34ED9F4
	0x03546340 LDR W8, [X20 + 0x18]
	0x03546344 CMP W8, 0x100
	0x03546348 B.LT 0x3546378
	0x0354634C ADRP X9, 0xBAD000
	0x03546350 LDR X9, [X9 + 0x758]
	0x03546354 ADD X1, X31, 0x18
	0x03546358 STR W8, [X31 + 0x18]
	0x0354635C LDR X0, [X9]
	0x03546360 BL 0x1C16E04
	0x03546364 MOV X2, X0
	0x03546368 MOVZ W1, 0xF3
	0x0354636C MOV X0, X22
	0x03546370 MOV X3, X31
	0x03546374 BL 0x34ED9F4
	0x03546378 ADRP X8, 0xBB6000
	0x0354637C LDR X8, [X8 + 0x2B8]
	0x03546380 ADRP X21, 0xBB6000
	0x03546384 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xE9A000
	009 Move X23, 0xBB7000
	010 Move X21, 0xBB7000
	011 Move W8, [X22+3137]
	012 Move X23, [X23+696]
	013 Move X21, [X21+1552]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xBB7000
	021 Move X0, [X0+1552]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB7000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB7000
	027 Move X0, [X0+696]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB7000
	030 Move X0, [X0+1352]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+3137], W8
	034 Move X0, [X23]
	035 Call 0x1C17F10
	036 Move X2, [X21]
	037 Move W1, 1
	038 Move X21, X0
	039 Call Dictionary`2<Byte, Object>..ctor, X0, X1
	040 Compare X21, 0
	041 JumpIfEqual {80}
	042 Move X8, 0xBB7000
	043 Move X8, [X8+1560]
	044 Move X22, 0xBB7000
	045 Move W1, 224
	046 Move X0, X21
	047 Move X3, [X8]
	048 Move X22, [X22+1352]
	049 Move X2, X20
	050 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	051 Move X0, [X22]
	052 Move [X31+8], X31
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Add X0, X31, 8
	058 Move W1, 1
	059 Move X2, X31
	060 Move W20, 1
	061 Call SendOptions.set_Reliability, X0, X1
	062 Move [X31+12], W20
	063 Move X8, [X19]
	064 Move X3, [X31+8]
	065 Move W1, 220
	066 Move X0, X19
	067 Move X9, [X8+552]
	068 Move X4, [X8+560]
	069 Move X2, X21
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X22, [X31+32]
	074 Move X21, [X31+40]
	075 Move X30, [X31+16]
	076 Move X23, [X31+24]
	077 And W0, W0, 1
	078 Add X31, X31, 64
	079 Return X0
	080 Call 0x1C17F20

Method: System.Boolean OpJoinLobby(Photon.Realtime.TypedLobby lobby = null)

Disassembly:
	0x03546388 LDR X21, [X21 + 0x540]
	0x0354638C BL 0x1C16F10
	0x03546390 LDR X1, [X21]
	0x03546394 MOV X21, X0
	0x03546398 BL 0x29D2C7C
	0x0354639C CBZ X22, 0x3546550
	0x035463A0 ADRP X8, 0xBB5000
	0x035463A4 LDR X8, [X8 + 0xD60]
	0x035463A8 ADRP X24, 0xBB6000
	0x035463AC MOV X0, X22
	0x035463B0 LDR X1, [X8]
	0x035463B4 LDR X24, [X24 + 0x618]
	0x035463B8 BL 0x2AA4E88
	0x035463BC CMP W0, 0x1
	0x035463C0 B.LT 0x35463DC
	0x035463C4 CBZ X21, 0x3546550
	0x035463C8 LDR X3, [X24]
	0x035463CC MOVZ W1, 0xF8
	0x035463D0 MOV X0, X21
	0x035463D4 MOV X2, X22
	0x035463D8 BL 0x29D3520
	0x035463DC LDRB W8, [X20 + 0x1C]
	0x035463E0 CBZ W8, 0x354640C
	0x035463E4 LDR X0, [X23]
	0x035463E8 ADD X1, X31, 0xC
	0x035463EC STRB W8, [X31 + 0xC]
	0x035463F0 BL 0x1C16E04
	0x035463F4 CBZ X21, 0x3546550
	0x035463F8 LDR X3, [X24]
	0x035463FC MOV X2, X0
	0x03546400 MOVZ W1, 0xDF
	0x03546404 MOV X0, X21
	0x03546408 BL 0x29D3520
	0x0354640C LDR X8, [X20 + 0x20]
	0x03546410 CBZ X8, 0x3546474
	0x03546414 LDR X0, [X8 + 0x10]
	0x03546418 MOV X1, X31
	0x0354641C BL 0x32277A8
	0x03546420 TBNZ X0, 0x0, 0x3546474
	0x03546424 LDR X8, [X20 + 0x20]
	0x03546428 CBZ X8, 0x3546550
	0x0354642C CBZ X21, 0x3546550
	0x03546430 LDR X2, [X8 + 0x10]
	0x03546434 LDR X3, [X24]
	0x03546438 MOVZ W1, 0xD5
	0x0354643C MOV X0, X21
	0x03546440 BL 0x29D3520
	0x03546444 LDR X8, [X20 + 0x20]
	0x03546448 CBZ X8, 0x3546550
	0x0354644C LDRB W8, [X8 + 0x18]
	0x03546450 LDR X0, [X23]
	0x03546454 ADD X1, X31, 0x8
	0x03546458 STRB W8, [X31 + 0x8]
	0x0354645C BL 0x1C16E04
	0x03546460 LDR X3, [X24]
	0x03546464 MOV X2, X0
	0x03546468 MOVZ W1, 0xD4
	0x0354646C MOV X0, X21
	0x03546470 BL 0x29D3520
	0x03546474 LDR X0, [X20 + 0x28]
	0x03546478 MOV X1, X31
	0x0354647C BL 0x32277A8
	0x03546480 TBNZ X0, 0x0, 0x354649C
	0x03546484 CBZ X21, 0x3546550
	0x03546488 LDR X2, [X20 + 0x28]
	0x0354648C LDR X3, [X24]
	0x03546490 MOVZ W1, 0xF5
	0x03546494 MOV X0, X21
	0x03546498 BL 0x29D3520
	0x0354649C LDR X2, [X20 + 0x30]
	0x035464A0 CBZ X2, 0x35464C0
	0x035464A4 LDR X8, [X2 + 0x18]
	0x035464A8 CBZ X8, 0x35464C0
	0x035464AC CBZ X21, 0x3546550
	0x035464B0 LDR X3, [X24]
	0x035464B4 MOVZ W1, 0xEE
	0x035464B8 MOV X0, X21
	0x035464BC BL 0x29D3520
	0x035464C0 ADRP X8, 0xBAD000
	0x035464C4 LDR X8, [X8 + 0xB58]
	0x035464C8 ADD X1, X31, 0x4
	0x035464CC LDR X0, [X8]
	0x035464D0 MOVZ W8, 0x1
	0x035464D4 STRB W8, [X31 + 0x4]
	0x035464D8 BL 0x1C16E04
	0x035464DC CBZ X21, 0x3546550
	0x035464E0 LDR X3, [X24]
	0x035464E4 ADRP X20, 0xBB6000
	0x035464E8 LDR X20, [X20 + 0x548]
	0x035464EC MOV X2, X0
	0x035464F0 MOVZ W1, 0xBC
	0x035464F4 MOV X0, X21
	0x035464F8 BL 0x29D3520
	0x035464FC LDR X0, [X20]
	0x03546500 LDR W8, [X0 + 0xE0]
	0x03546504 CBNZ W8, 0x3546510
	0x03546508 BL 0x1C16DFC
	0x0354650C LDR X0, [X20]
	0x03546510 LDR X8, [X0 + 0xB8]
	0x03546514 LDR X9, [X19]
	0x03546518 MOVZ W1, 0xE1
	0x0354651C MOV X0, X19
	0x03546520 LDR X3, [X8]
	0x03546524 LDR X8, [X9 + 0x228]
	0x03546528 LDR X4, [X9 + 0x230]
	0x0354652C MOV X2, X21
	0x03546530 BLR X8
	0x03546534 LDP X20, X19, [X31 + 0x40]
	0x03546538 LDP X22, X21, [X31 + 0x30]
	0x0354653C LDP X24, X23, [X31 + 0x20]
	0x03546540 LDR X30, [X31 + 0x10]
	0x03546544 AND W0, W0, 0x1
	0x03546548 ADD X31, X31, 0x50
	0x0354654C RET
	0x03546550 BL 0x1C16F20
	0x03546554 SUB X31, X31, 0x60
	0x03546558 STP X30, X25, [X31 + 0x20]
	0x0354655C STP X24, X23, [X31 + 0x30]
	0x03546560 STP X22, X21, [X31 + 0x40]
	0x03546564 STP X20, X19, [X31 + 0x50]
	0x03546568 ADRP X22, 0xE99000
	0x0354656C LDRB W8, [X22 + 0xC48]
	0x03546570 MOV X20, X2
	0x03546574 MOV X21, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE9A000
	007 Move W8, [X21+3138]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0xBAF000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move X0, 0xBB7000
	018 Move X0, [X0+1344]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB7000
	021 Move X0, [X0+1560]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB7000
	024 Move X0, [X0+696]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB6000
	027 Move X0, [X0+3016]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB7000
	030 Move X0, [X0+1352]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB7000
	033 Move X0, [X0+1568]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3138], W8
	037 Move W8, [X19+64]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X21, [X19+72]
	040 Compare X21, 0
	041 JumpIfEqual {135}
	042 Move X9, 0xBB6000
	043 Move X8, [X21]
	044 Move X9, [X9+3016]
	045 Move X10, 0xBB7000
	046 Move X1, [X9]
	047 Move X10, [X10+1568]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X22, [X10]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X21
	059 Move W2, W31
	060 Call 0x1C5D788
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X3, [X0+8]
	066 Move W1, 3
	067 Move X0, X21
	068 Move X2, X22
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X20, 0
	071 JumpIfEqual {110}
	072 Move X0, [X20+16]
	073 Move X1, X31
	074 Call String.IsNullOrEmpty, X0
	075 Move X21, X31
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {111}
	080 Move X8, 0xBB7000
	081 Move X8, [X8+696]
	082 Move X0, [X8]
	083 Call 0x1C17F10
	084 Move X8, 0xBB7000
	085 Move X8, [X8+1344]
	086 Move X21, X0
	087 Move X1, [X8]
	088 Call Dictionary`2<Byte, Object>..ctor, X0
	089 Compare X21, 0
	090 JumpIfEqual {135}
	091 Move X22, 0xBB7000
	092 Move X2, [X20+16]
	093 Move X22, [X22+1560]
	094 Move W1, 213
	095 Move X0, X21
	096 Move X3, [X22]
	097 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	098 Move X9, 0xBAF000
	099 Move W8, [X20+24]
	100 Move X9, [X9+2520]
	101 Add X1, X31, 12
	102 Move [X31+12], W8
	103 Move X0, [X9]
	104 Call 0x1C17E04
	105 Move X3, [X22]
	106 Move X2, X0
	107 Move W1, 212
	108 Move X0, X21
	109 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	110 Move X21, X31
	111 Move X20, 0xBB7000
	112 Move X20, [X20+1352]
	113 Move X0, [X20]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X20]
	119 Move X8, [X0+184]
	120 Move X9, [X19]
	121 Move W1, 229
	122 Move X0, X19
	123 Move X3, [X8]
	124 Move X8, [X9+552]
	125 Move X4, [X9+560]
	126 Move X2, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 And W0, W0, 1
	133 Move X30, [X31+48]
	134 Return X0
	135 Call 0x1C17F20

Method: System.Boolean OpLeaveLobby()

Disassembly:
	0x03546584 LDR X0, [X0 + 0xB58]
	0x03546588 BL 0x1C16CF4
	0x0354658C ADRP X0, 0xBAE000
	0x03546590 LDR X0, [X0 + 0x9D8]
	0x03546594 BL 0x1C16CF4
	0x03546598 ADRP X0, 0xBB6000
	0x0354659C LDR X0, [X0 + 0x540]
	0x035465A0 BL 0x1C16CF4
	0x035465A4 ADRP X0, 0xBB5000
	0x035465A8 LDR X0, [X0 + 0xD60]
	0x035465AC BL 0x1C16CF4
	0x035465B0 ADRP X0, 0xBB6000
	0x035465B4 LDR X0, [X0 + 0x618]
	0x035465B8 BL 0x1C16CF4
	0x035465BC ADRP X0, 0xBB6000
	0x035465C0 LDR X0, [X0 + 0x2B8]
	0x035465C4 BL 0x1C16CF4
	0x035465C8 ADRP X0, 0xBEE000
	0x035465CC LDR X0, [X0 + 0xBA8]
	0x035465D0 BL 0x1C16CF4
	0x035465D4 ADRP X0, 0xBB5000
	0x035465D8 LDR X0, [X0 + 0xDA0]
	0x035465DC BL 0x1C16CF4
	0x035465E0 ADRP X0, 0xBB5000
	0x035465E4 LDR X0, [X0 + 0xBC8]
	0x035465E8 BL 0x1C16CF4
	0x035465EC ADRP X0, 0xBAD000
	0x035465F0 LDR X0, [X0 + 0x758]
	0x035465F4 BL 0x1C16CF4
	0x035465F8 ADRP X0, 0xBB6000
	0x035465FC LDR X0, [X0 + 0x548]
	0x03546600 BL 0x1C16CF4
	0x03546604 ADRP X0, 0xBB6000
	0x03546608 LDR X0, [X0 + 0x648]
	0x0354660C BL 0x1C16CF4
	0x03546610 MOVZ W8, 0x1
	0x03546614 STRB W8, [X22 + 0xC48]
	0x03546618 LDRB W8, [X19 + 0x40]
	0x0354661C CMP W8, 0x3
	0x03546620 B.CC 0x35466A0
	0x03546624 LDR X22, [X19 + 0x48]
	0x03546628 CBZ X22, 0x35469A8
	0x0354662C ADRP X9, 0xBB5000
	0x03546630 LDR X8, [X22]
	0x03546634 LDR X9, [X9 + 0xBC8]
	0x03546638 ADRP X10, 0xBB6000
	0x0354663C LDR X1, [X9]
	0x03546640 LDR X10, [X10 + 0x648]
	0x03546644 LDRH W9, [X8 + 0x12E]
	0x03546648 LDR X23, [X10]
	0x0354664C CBZ X9, 0x3546670
	0x03546650 LDR X10, [X8 + 0xB0]
	0x03546654 ADD X10, X10, 0x8
	0x03546658 LDUR X11, [X10 - 0x8]
	0x0354665C CMP X11, X1
	0x03546660 B.EQ 0x3546680
	0x03546664 SUBS X9, X9, 0x1
	0x03546668 ADD X10, X10, 0x10
	0x0354666C B.NE 0x3546658
	0x03546670 MOV X0, X22
	0x03546674 MOV W2, W31
	0x03546678 BL 0x1C5C788
	0x0354667C B 0x354668C
	0x03546680 LDRSW X9, [X10]
	0x03546684 ADD X8, X8, X9, 0x4, LSL
	0x03546688 ADD X0, X8, 0x138
	0x0354668C LDP X8, X3, [X0]
	0x03546690 MOVZ W1, 0x3
	0x03546694 MOV X0, X22
	0x03546698 MOV X2, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE9A000
	006 Move W8, [X20+3139]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xBB6000
	013 Move X0, [X0+3016]
	014 Call 0x1C17CF4
	015 Move X0, 0xBB7000
	016 Move X0, [X0+1352]
	017 Call 0x1C17CF4
	018 Move X0, 0xBB7000
	019 Move X0, [X0+1576]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3139], W8
	023 Move W8, [X19+64]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X19+72]
	026 Compare X20, 0
	027 JumpIfEqual {77}
	028 Move X9, 0xBB6000
	029 Move X8, [X20]
	030 Move X9, [X9+3016]
	031 Move X10, 0xBB7000
	032 Move X1, [X9]
	033 Move X10, [X10+1576]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X21, [X10]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X20
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X3, [X0+8]
	052 Move W1, 3
	053 Move X0, X20
	054 Move X2, X21
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X20, 0xBB7000
	057 Move X20, [X20+1352]
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move X9, [X19]
	066 Move X0, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X3, [X8]
	070 Move X5, [X9+552]
	071 Move X4, [X9+560]
	072 Move W1, 228
	073 Move X2, X31
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 CallNoReturn X5
	077 Call 0x1C17F20

Method: System.Void RoomOptionsToOpParameters(System.Collections.Generic.Dictionary`2<System.Byte, System.Object> op, Photon.Realtime.RoomOptions roomOptions, System.Boolean usePropertiesKey = False)

Disassembly:
	0x0354669C BLR X8
	0x035466A0 ADRP X8, 0xBB5000
	0x035466A4 LDR X8, [X8 + 0xDA0]
	0x035466A8 LDR X0, [X8]
	0x035466AC BL 0x1C16F10
	0x035466B0 MOV X1, X31
	0x035466B4 MOV X23, X0
	0x035466B8 BL 0x34ED7D8
	0x035466BC CBZ X21, 0x35469A8
	0x035466C0 ADRP X8, 0xBEE000
	0x035466C4 LDR X8, [X8 + 0xBA8]
	0x035466C8 LDR X22, [X21 + 0x10]
	0x035466CC LDR X0, [X8]
	0x035466D0 LDR W8, [X0 + 0xE0]
	0x035466D4 CBNZ W8, 0x35466DC
	0x035466D8 BL 0x1C16DFC
	0x035466DC ADRP X24, 0xBAE000
	0x035466E0 LDR X24, [X24 + 0x9D8]
	0x035466E4 MOV X0, X23
	0x035466E8 MOV X1, X22
	0x035466EC BL 0x3536EF8
	0x035466F0 LDR W8, [X21 + 0x18]
	0x035466F4 CMP W8, 0x1
	0x035466F8 B.LT 0x3546768
	0x035466FC LDR X0, [X24]
	0x03546700 CMP W8, 0x100
	0x03546704 MOVZ W9, 0x100
	0x03546708 CSEL W8, W8, W9, LT
	0x0354670C ADD X1, X31, 0x1C
	0x03546710 STRB W8, [X31 + 0x1C]
	0x03546714 BL 0x1C16E04
	0x03546718 CBZ X23, 0x35469A8
	0x0354671C MOV X2, X0
	0x03546720 MOVZ W1, 0xFF
	0x03546724 MOV X0, X23
	0x03546728 MOV X3, X31
	0x0354672C BL 0x34ED9F4
	0x03546730 LDR W8, [X21 + 0x18]
	0x03546734 CMP W8, 0x100
	0x03546738 B.LT 0x3546768
	0x0354673C ADRP X9, 0xBAD000
	0x03546740 LDR X9, [X9 + 0x758]
	0x03546744 ADD X1, X31, 0x18
	0x03546748 STR W8, [X31 + 0x18]
	0x0354674C LDR X0, [X9]
	0x03546750 BL 0x1C16E04
	0x03546754 MOV X2, X0
	0x03546758 MOVZ W1, 0xF3
	0x0354675C MOV X0, X23
	0x03546760 MOV X3, X31
	0x03546764 BL 0x34ED9F4
	0x03546768 ADRP X8, 0xBB6000
	0x0354676C LDR X8, [X8 + 0x2B8]
	0x03546770 ADRP X22, 0xBB6000
	0x03546774 LDR X0, [X8]
	0x03546778 LDR X22, [X22 + 0x540]
	0x0354677C BL 0x1C16F10
	0x03546780 LDR X1, [X22]
	0x03546784 MOV X22, X0
	0x03546788 BL 0x29D2C7C
	0x0354678C CBZ X23, 0x35469A8
	0x03546790 ADRP X8, 0xBB5000
	0x03546794 LDR X8, [X8 + 0xD60]
	0x03546798 ADRP X25, 0xBB6000
	0x0354679C MOV X0, X23
	0x035467A0 LDR X1, [X8]
	0x035467A4 LDR X25, [X25 + 0x618]
	0x035467A8 BL 0x2AA4E88
	0x035467AC CMP W0, 0x1
	0x035467B0 B.LT 0x35467CC
	0x035467B4 CBZ X22, 0x35469A8
	0x035467B8 LDR X3, [X25]
	0x035467BC MOVZ W1, 0xF8
	0x035467C0 MOV X0, X22
	0x035467C4 MOV X2, X23
	0x035467C8 BL 0x29D3520
	0x035467CC LDRB W8, [X21 + 0x1C]
	0x035467D0 CBZ W8, 0x35467FC
	0x035467D4 LDR X0, [X24]
	0x035467D8 ADD X1, X31, 0x14
	0x035467DC STRB W8, [X31 + 0x14]
	0x035467E0 BL 0x1C16E04
	0x035467E4 CBZ X22, 0x35469A8
	0x035467E8 LDR X3, [X25]
	0x035467EC MOV X2, X0
	0x035467F0 MOVZ W1, 0xDF
	0x035467F4 MOV X0, X22
	0x035467F8 BL 0x29D3520
	0x035467FC LDR X8, [X21 + 0x20]
	0x03546800 CBZ X8, 0x3546864
	0x03546804 LDR X0, [X8 + 0x10]
	0x03546808 MOV X1, X31
	0x0354680C BL 0x32277A8
	0x03546810 TBNZ X0, 0x0, 0x3546864
	0x03546814 LDR X8, [X21 + 0x20]
	0x03546818 CBZ X8, 0x35469A8
	0x0354681C CBZ X22, 0x35469A8
	0x03546820 LDR X2, [X8 + 0x10]
	0x03546824 LDR X3, [X25]
	0x03546828 MOVZ W1, 0xD5
	0x0354682C MOV X0, X22
	0x03546830 BL 0x29D3520
	0x03546834 LDR X8, [X21 + 0x20]
	0x03546838 CBZ X8, 0x35469A8
	0x0354683C LDRB W8, [X8 + 0x18]
	0x03546840 LDR X0, [X24]
	0x03546844 ADD X1, X31, 0x10
	0x03546848 STRB W8, [X31 + 0x10]
	0x0354684C BL 0x1C16E04
	0x03546850 LDR X3, [X25]
	0x03546854 MOV X2, X0
	0x03546858 MOVZ W1, 0xD4
	0x0354685C MOV X0, X22
	0x03546860 BL 0x29D3520
	0x03546864 LDR X0, [X21 + 0x28]
	0x03546868 MOV X1, X31
	0x0354686C BL 0x32277A8
	0x03546870 TBNZ X0, 0x0, 0x354688C
	0x03546874 CBZ X22, 0x35469A8
	0x03546878 LDR X2, [X21 + 0x28]
	0x0354687C LDR X3, [X25]
	0x03546880 MOVZ W1, 0xF5
	0x03546884 MOV X0, X22
	0x03546888 BL 0x29D3520
	0x0354688C LDR X2, [X21 + 0x30]
	0x03546890 CBZ X2, 0x35468B0
	0x03546894 LDR X8, [X2 + 0x18]
	0x03546898 CBZ X8, 0x35468B0
	0x0354689C CBZ X22, 0x35469A8
	0x035468A0 LDR X3, [X25]
	0x035468A4 MOVZ W1, 0xEE
	0x035468A8 MOV X0, X22
	0x035468AC BL 0x29D3520
	0x035468B0 LDR X2, [X21 + 0x38]
	0x035468B4 CBZ X2, 0x35468CC
	0x035468B8 CBZ X22, 0x35469A8
	0x035468BC LDR X3, [X25]
	0x035468C0 MOVZ W1, 0xBE
	0x035468C4 MOV X0, X22
	0x035468C8 BL 0x29D3520
	0x035468CC LDR X0, [X24]
	0x035468D0 MOVZ W23, 0x1
	0x035468D4 ADD X1, X31, 0xC
	0x035468D8 STRB W23, [X31 + 0xC]
	0x035468DC BL 0x1C16E04
	0x035468E0 CBZ X22, 0x35469A8
	0x035468E4 LDR X3, [X25]
	0x035468E8 ADRP X24, 0xBAD000
	0x035468EC ADRP X21, 0xBB6000
	0x035468F0 LDR X24, [X24 + 0xB58]
	0x035468F4 LDR X21, [X21 + 0x548]
	0x035468F8 MOV X2, X0
	0x035468FC MOVZ W1, 0xD7
	0x03546900 MOV X0, X22
	0x03546904 BL 0x29D3520
	0x03546908 LDR X0, [X24]
	0x0354690C ADD X1, X31, 0x8
	0x03546910 STRB W23, [X31 + 0x8]
	0x03546914 BL 0x1C16E04
	0x03546918 LDR X3, [X25]
	0x0354691C MOV X2, X0
	0x03546920 MOVZ W1, 0xBC
	0x03546924 MOV X0, X22
	0x03546928 BL 0x29D3520
	0x0354692C CBZ X20, 0x3546954
	0x03546930 LDR X0, [X20 + 0x10]
	0x03546934 MOV X1, X31
	0x03546938 BL 0x32277A8
	0x0354693C TBNZ X0, 0x0, 0x3546954
	0x03546940 LDR X2, [X20 + 0x10]
	0x03546944 LDR X3, [X25]
	0x03546948 MOVZ W1, 0xFF
	0x0354694C MOV X0, X22
	0x03546950 BL 0x29D3520
	0x03546954 LDR X0, [X21]
	0x03546958 LDR W8, [X0 + 0xE0]
	0x0354695C CBNZ W8, 0x3546968
	0x03546960 BL 0x1C16DFC
	0x03546964 LDR X0, [X21]
	0x03546968 LDR X8, [X0 + 0xB8]
	0x0354696C LDR X9, [X19]
	0x03546970 MOVZ W1, 0xE1
	0x03546974 MOV X0, X19
	0x03546978 LDR X3, [X8]
	0x0354697C LDR X8, [X9 + 0x228]
	0x03546980 LDR X4, [X9 + 0x230]
	0x03546984 MOV X2, X22
	0x03546988 BLR X8
	0x0354698C LDP X20, X19, [X31 + 0x50]
	0x03546990 LDP X22, X21, [X31 + 0x40]
	0x03546994 LDP X24, X23, [X31 + 0x30]
	0x03546998 LDP X30, X25, [X31 + 0x20]
	0x0354699C AND W0, W0, 0x1
	0x035469A0 ADD X31, X31, 0x60
	0x035469A4 RET
	0x035469A8 BL 0x1C16F20
	0x035469AC STR X30, [X31 - 0x40]!
	0x035469B0 STP X24, X23, [X31 + 0x10]
	0x035469B4 STP X22, X21, [X31 + 0x20]
	0x035469B8 STP X20, X19, [X31 + 0x30]
	0x035469BC ADRP X23, 0xE99000
	0x035469C0 ADRP X24, 0xBB6000
	0x035469C4 ADRP X20, 0xBB6000
	0x035469C8 LDRB W8, [X23 + 0xC49]
	0x035469CC LDR X24, [X24 + 0x2B8]
	0x035469D0 LDR X20, [X20 + 0x540]
	0x035469D4 MOV W21, W2
	0x035469D8 MOV W22, W1
	0x035469DC MOV X19, X0
	0x035469E0 TBNZ X8, 0x0, 0x3546A34
	0x035469E4 ADRP X0, 0xBAD000
	0x035469E8 LDR X0, [X0 + 0xB58]
	0x035469EC BL 0x1C16CF4
	0x035469F0 ADRP X0, 0xBAE000
	0x035469F4 LDR X0, [X0 + 0x9D8]
	0x035469F8 BL 0x1C16CF4
	0x035469FC ADRP X0, 0xBB6000
	0x03546A00 LDR X0, [X0 + 0x540]
	0x03546A04 BL 0x1C16CF4
	0x03546A08 ADRP X0, 0xBB6000
	0x03546A0C LDR X0, [X0 + 0x618]
	0x03546A10 BL 0x1C16CF4
	0x03546A14 ADRP X0, 0xBB6000
	0x03546A18 LDR X0, [X0 + 0x2B8]
	0x03546A1C BL 0x1C16CF4
	0x03546A20 ADRP X0, 0xBB6000
	0x03546A24 LDR X0, [X0 + 0x548]
	0x03546A28 BL 0x1C16CF4
	0x03546A2C MOVZ W8, 0x1
	0x03546A30 STRB W8, [X23 + 0xC49]
	0x03546A34 LDR X0, [X24]
	0x03546A38 BL 0x1C16F10
	0x03546A3C LDR X1, [X20]
	0x03546A40 MOV X20, X0
	0x03546A44 BL 0x29D2C7C
	0x03546A48 TBZ X22, 0x0, 0x3546A88
	0x03546A4C ADRP X8, 0xBAD000
	0x03546A50 LDR X8, [X8 + 0xB58]
	0x03546A54 ADD X1, X31, 0xC
	0x03546A58 LDR X0, [X8]
	0x03546A5C MOVZ W8, 0x1
	0x03546A60 STRB W8, [X31 + 0xC]
	0x03546A64 BL 0x1C16E04
	0x03546A68 CBZ X20, 0x3546B20
	0x03546A6C ADRP X8, 0xBB6000
	0x03546A70 LDR X8, [X8 + 0x618]
	0x03546A74 MOV X2, X0
	0x03546A78 MOVZ W1, 0xE9
	0x03546A7C MOV X0, X20
	0x03546A80 LDR X3, [X8]
	0x03546A84 BL 0x29D3520
	0x03546A88 TBZ X21, 0x0, 0x3546AC8
	0x03546A8C ADRP X8, 0xBAE000
	0x03546A90 LDR X8, [X8 + 0x9D8]
	0x03546A94 ADD X1, X31, 0x8
	0x03546A98 LDR X0, [X8]
	0x03546A9C MOVZ W8, 0x2
	0x03546AA0 STRB W8, [X31 + 0x8]
	0x03546AA4 BL 0x1C16E04
	0x03546AA8 CBZ X20, 0x3546B20
	0x03546AAC ADRP X8, 0xBB6000
	0x03546AB0 LDR X8, [X8 + 0x618]
	0x03546AB4 MOV X2, X0
	0x03546AB8 MOVZ W1, 0xEA
	0x03546ABC MOV X0, X20
	0x03546AC0 LDR X3, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xE9A000
	011 Move W8, [X22+3140]
	012 Move W21, W3
	013 Move X20, X2
	014 Move X19, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0xBAE000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0xBAF000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB7000
	026 Move X0, [X0+1560]
	027 Call 0x1C17CF4
	028 Move X0, 0xBEF000
	029 Move X0, [X0+2984]
	030 Call 0x1C17CF4
	031 Move X0, 0xBB6000
	032 Move X0, [X0+3488]
	033 Call 0x1C17CF4
	034 Move X0, 0xBAE000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0xBEF000
	038 Move X0, [X0+4008]
	039 Call 0x1C17CF4
	040 Move X0, 0xBAE000
	041 Move X0, [X0+2760]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+3140], W8
	045 Move X22, 0xBB6000
	046 Move X22, [X22+3488]
	047 Compare X20, 0
	048 JumpIfNotEqual {55}
	049 Move X8, 0xBEF000
	050 Move X8, [X8+4008]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X20, X0
	054 Call RoomOptions..ctor, X0
	055 Move X0, [X22]
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X22, X0
	059 Call Hashtable..ctor, X0
	060 Compare X20, 0
	061 JumpIfEqual {286}
	062 Move X24, 0xBAE000
	063 Move X24, [X24+2904]
	064 Move W8, [X20+17]
	065 Add X1, X31, 8
	066 Move X0, [X24]
	067 Move [X31+8], W8
	068 Call 0x1C17E04
	069 Compare X22, 0
	070 JumpIfEqual {286}
	071 Move X23, 0xBEF000
	072 Move X23, [X23+2984]
	073 Move X2, X0
	074 Move W1, 253
	075 Move X0, X22
	076 Move X3, X31
	077 Call Hashtable.set_Item, X0, X1, X2
	078 Move W8, [X20+16]
	079 Move X0, [X24]
	080 Add X1, X31, 12
	081 Move [X31+12], W8
	082 Call 0x1C17E04
	083 Move X2, X0
	084 Move W1, 254
	085 Move X0, X22
	086 Move X3, X31
	087 Call Hashtable.set_Item, X0, X1, X2
	088 Move X2, [X20+48]
	089 Compare X2, 0
	090 JumpIfNotEqual {97}
	091 Move X8, 0xBAE000
	092 Move X8, [X8+2760]
	093 Move W1, W31
	094 Move X0, [X8]
	095 Call 0x1C17D6C
	096 Move X2, X0
	097 Move W1, 250
	098 Move X0, X22
	099 Move X3, X31
	100 Call Hashtable.set_Item, X0, X1, X2
	101 Move X0, [X23]
	102 Move X23, [X20+40]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X25, 0xBAE000
	108 Move X25, [X25+1880]
	109 Move X0, X22
	110 Move X1, X23
	111 Call Extensions.MergeStringKeys, X0, X1
	112 Move W8, [X20+20]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X9, 0xBAF000
	115 Move X9, [X9+2520]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add X1, X31, 12
	118 Move X0, [X9]
	119 Move W9, 256
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 Move [X31+12], W8
	122 Call 0x1C17E04
	123 Move X2, X0
	124 Move W1, 255
	125 Move X0, X22
	126 Move X3, X31
	127 Call Hashtable.set_Item, X0, X1, X2
	128 Move W8, [X20+20]
	129 Move X0, [X25]
	130 Add X1, X31, 8
	131 Move [X31+8], W8
	132 Call 0x1C17E04
	133 Move X2, X0
	134 Move W1, 243
	135 Move X0, X22
	136 Move X3, X31
	137 Call Hashtable.set_Item, X0, X1, X2
	138 Compare X19, 0
	139 JumpIfEqual {286}
	140 Move X23, 0xBB7000
	141 Move X23, [X23+1560]
	142 And W31, W21, 1
	143 Move TEMP, 7
	144 Not TEMP
	145 Move W8, TEMP
	146 Move TEMP, 4
	147 Not TEMP
	148 Move W9, TEMP
	149 Move X3, [X23]
	150 NotImplemented "Instruction CSEL not yet implemented."
	151 Move X0, X19
	152 Move X2, X22
	153 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	154 Move W8, [X20+32]
	155 Compare W8, 0
	156 JumpIfEqual {168}
	157 Move X0, [X24]
	158 Move W8, 1
	159 Add X1, X31, 8
	160 Move [X31+8], W8
	161 Call 0x1C17E04
	162 Move X3, [X23]
	163 Move X2, X0
	164 Move W1, 241
	165 Move X0, X19
	166 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	167 Move W21, 3
	168 Move X0, [X24]
	169 Add X1, X31, 8
	170 Move [X31+8], W31
	171 Call 0x1C17E04
	172 Move X3, [X23]
	173 Move X2, X0
	174 Move W1, 241
	175 Move X0, X19
	176 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	177 Move X0, [X24]
	178 Add X1, X31, 12
	179 Move [X31+12], W31
	180 Call 0x1C17E04
	181 Move X2, X0
	182 Move W1, 249
	183 Move X0, X22
	184 Move X3, X31
	185 Call Hashtable.set_Item, X0, X1, X2
	186 Move W21, 1
	187 Move X0, [X24]
	188 Move W8, 1
	189 Add X1, X31, 8
	190 Move [X31+8], W8
	191 Call 0x1C17E04
	192 Move X3, [X23]
	193 Move X2, X0
	194 Move W1, 232
	195 Move X0, X19
	196 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	197 Move W8, [X20+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add W31, W8, 1
	200 Move X0, [X25]
	201 Add X1, X31, 8
	202 Move [X31+8], W8
	203 Call 0x1C17E04
	204 Move X3, [X23]
	205 Move X2, X0
	206 Move W1, 235
	207 Move X0, X19
	208 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	209 Move W8, [X20+28]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X0, [X25]
	212 Add X1, X31, 8
	213 Move [X31+8], W8
	214 Call 0x1C17E04
	215 Move X3, [X23]
	216 Move X2, X0
	217 Move W1, 236
	218 Move X0, X19
	219 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	220 Move W8, [X20+64]
	221 Compare W8, 0
	222 JumpIfEqual {234}
	223 Move X0, [X24]
	224 Move W8, 1
	225 Add X1, X31, 8
	226 Or W21, W21, 4
	227 Move [X31+8], W8
	228 Call 0x1C17E04
	229 Move X3, [X23]
	230 Move X2, X0
	231 Move W1, 237
	232 Move X0, X19
	233 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	234 Move W8, [X20+65]
	235 Move X2, [X20+56]
	236 Or W9, W21, 64
	237 NotImplemented "Instruction CMP not yet implemented."
	238 NotImplemented "Instruction CSEL not yet implemented."
	239 Compare X2, 0
	240 JumpIfEqual {245}
	241 Move X3, [X23]
	242 Move W1, 204
	243 Move X0, X19
	244 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	245 Move W8, [X20+66]
	246 Compare W8, 0
	247 JumpIfEqual {259}
	248 Move X0, [X24]
	249 Move W8, 1
	250 Add X1, X31, 8
	251 Or W21, W21, 8
	252 Move [X31+8], W8
	253 Call 0x1C17E04
	254 Move X3, [X23]
	255 Move X2, X0
	256 Move W1, 239
	257 Move X0, X19
	258 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	259 Move W8, [X20+67]
	260 Move W10, [X20+68]
	261 Or W9, W21, 16
	262 Move X0, [X25]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 NotImplemented "Instruction CSEL not yet implemented."
	265 Or W9, W8, 32
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CSEL not yet implemented."
	268 Add X1, X31, 8
	269 Move [X31+8], W8
	270 Call 0x1C17E04
	271 Move X3, [X23]
	272 Move X2, X0
	273 Move W1, 191
	274 Move X0, X19
	275 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	276 Move X20, [X31+64]
	277 Move X19, [X31+72]
	278 Move X22, [X31+48]
	279 Move X21, [X31+56]
	280 Move X24, [X31+32]
	281 Move X23, [X31+40]
	282 Move X30, [X31+16]
	283 Move X25, [X31+24]
	284 Add X31, X31, 80
	285 Return 
	286 Call 0x1C17F20

Method: System.Boolean OpCreateRoom(Photon.Realtime.EnterRoomParams opParams)

Disassembly:
	0x03546B30 STP X20, X19, [X31 + 0x30]
	0x03546B34 ADRP X22, 0xE99000
	0x03546B38 LDRB W8, [X22 + 0xC4A]
	0x03546B3C MOV X20, X2
	0x03546B40 MOV X21, X1
	0x03546B44 MOV X19, X0
	0x03546B48 TBNZ X8, 0x0, 0x3546BD8
	0x03546B4C ADRP X0, 0xBAE000
	0x03546B50 LDR X0, [X0 + 0x9D8]
	0x03546B54 BL 0x1C16CF4
	0x03546B58 ADRP X0, 0xBB6000
	0x03546B5C LDR X0, [X0 + 0x540]
	0x03546B60 BL 0x1C16CF4
	0x03546B64 ADRP X0, 0xBB6000
	0x03546B68 LDR X0, [X0 + 0x618]
	0x03546B6C BL 0x1C16CF4
	0x03546B70 ADRP X0, 0xBB6000
	0x03546B74 LDR X0, [X0 + 0x2B8]
	0x03546B78 BL 0x1C16CF4
	0x03546B7C ADRP X0, 0xBB5000
	0x03546B80 LDR X0, [X0 + 0xBC8]
	0x03546B84 BL 0x1C16CF4
	0x03546B88 ADRP X0, 0xBB6000
	0x03546B8C LDR X0, [X0 + 0x548]
	0x03546B90 BL 0x1C16CF4
	0x03546B94 ADRP X0, 0xBB6000
	0x03546B98 LDR X0, [X0 + 0x650]
	0x03546B9C BL 0x1C16CF4
	0x03546BA0 ADRP X0, 0xBB6000
	0x03546BA4 LDR X0, [X0 + 0x658]
	0x03546BA8 BL 0x1C16CF4
	0x03546BAC ADRP X0, 0xBB6000
	0x03546BB0 LDR X0, [X0 + 0x660]
	0x03546BB4 BL 0x1C16CF4
	0x03546BB8 ADRP X0, 0xBB6000
	0x03546BBC LDR X0, [X0 + 0x668]
	0x03546BC0 BL 0x1C16CF4
	0x03546BC4 ADRP X0, 0xBB6000
	0x03546BC8 LDR X0, [X0 + 0x670]
	0x03546BCC BL 0x1C16CF4
	0x03546BD0 MOVZ W8, 0x1
	0x03546BD4 STRB W8, [X22 + 0xC4A]
	0x03546BD8 LDRB W8, [X19 + 0x40]
	0x03546BDC CMP W8, 0x3
	0x03546BE0 B.CC 0x3546C60
	0x03546BE4 LDR X22, [X19 + 0x48]
	0x03546BE8 CBZ X22, 0x3546F14
	0x03546BEC ADRP X9, 0xBB5000
	0x03546BF0 LDR X8, [X22]
	0x03546BF4 LDR X9, [X9 + 0xBC8]
	0x03546BF8 ADRP X10, 0xBB6000
	0x03546BFC LDR X1, [X9]
	0x03546C00 LDR X10, [X10 + 0x650]
	0x03546C04 LDRH W9, [X8 + 0x12E]
	0x03546C08 LDR X23, [X10]
	0x03546C0C CBZ X9, 0x3546C30
	0x03546C10 LDR X10, [X8 + 0xB0]
	0x03546C14 ADD X10, X10, 0x8
	0x03546C18 LDUR X11, [X10 - 0x8]
	0x03546C1C CMP X11, X1
	0x03546C20 B.EQ 0x3546C40
	0x03546C24 SUBS X9, X9, 0x1
	0x03546C28 ADD X10, X10, 0x10
	0x03546C2C B.NE 0x3546C18
	0x03546C30 MOV X0, X22
	0x03546C34 MOV W2, W31
	0x03546C38 BL 0x1C5C788
	0x03546C3C B 0x3546C4C
	0x03546C40 LDRSW X9, [X10]
	0x03546C44 ADD X8, X8, X9, 0x4, LSL
	0x03546C48 ADD X0, X8, 0x138
	0x03546C4C LDP X8, X3, [X0]
	0x03546C50 MOVZ W1, 0x3
	0x03546C54 MOV X0, X22
	0x03546C58 MOV X2, X23
	0x03546C5C BLR X8
	0x03546C60 CBZ X21, 0x3546CDC
	0x03546C64 LDRB W8, [X21 + 0x18]
	0x03546C68 CMP W8, 0x2
	0x03546C6C B.NE 0x3546D38
	0x03546C70 LDR X0, [X21 + 0x10]
	0x03546C74 MOV X1, X31
	0x03546C78 BL 0x32277A8
	0x03546C7C TBZ X0, 0x0, 0x3546D94
	0x03546C80 LDRB W8, [X19 + 0x40]
	0x03546C84 CMP W8, 0x3
	0x03546C88 B.CC 0x3546E2C
	0x03546C8C LDR X19, [X19 + 0x48]
	0x03546C90 CBZ X19, 0x3546F14
	0x03546C94 ADRP X9, 0xBB5000
	0x03546C98 LDR X8, [X19]
	0x03546C9C LDR X9, [X9 + 0xBC8]
	0x03546CA0 ADRP X10, 0xBB6000
	0x03546CA4 LDR X1, [X9]
	0x03546CA8 LDR X10, [X10 + 0x670]
	0x03546CAC LDRH W9, [X8 + 0x12E]
	0x03546CB0 LDR X20, [X10]
	0x03546CB4 CBZ X9, 0x3546DFC
	0x03546CB8 LDR X10, [X8 + 0xB0]
	0x03546CBC ADD X10, X10, 0x8
	0x03546CC0 LDUR X11, [X10 - 0x8]
	0x03546CC4 CMP X11, X1
	0x03546CC8 B.EQ 0x3546E0C
	0x03546CCC SUBS X9, X9, 0x1
	0x03546CD0 ADD X10, X10, 0x10
	0x03546CD4 B.NE 0x3546CC0
	0x03546CD8 B 0x3546DFC
	0x03546CDC LDRB W8, [X19 + 0x40]
	0x03546CE0 CMP W8, 0x3
	0x03546CE4 B.CC 0x3546E2C
	0x03546CE8 LDR X19, [X19 + 0x48]
	0x03546CEC CBZ X19, 0x3546F14
	0x03546CF0 ADRP X9, 0xBB5000
	0x03546CF4 LDR X8, [X19]
	0x03546CF8 LDR X9, [X9 + 0xBC8]
	0x03546CFC ADRP X10, 0xBB6000
	0x03546D00 LDR X1, [X9]
	0x03546D04 LDR X10, [X10 + 0x658]
	0x03546D08 LDRH W9, [X8 + 0x12E]
	0x03546D0C LDR X20, [X10]
	0x03546D10 CBZ X9, 0x3546DFC
	0x03546D14 LDR X10, [X8 + 0xB0]
	0x03546D18 ADD X10, X10, 0x8
	0x03546D1C LDUR X11, [X10 - 0x8]
	0x03546D20 CMP X11, X1
	0x03546D24 B.EQ 0x3546E0C
	0x03546D28 SUBS X9, X9, 0x1
	0x03546D2C ADD X10, X10, 0x10
	0x03546D30 B.NE 0x3546D1C
	0x03546D34 B 0x3546DFC
	0x03546D38 LDRB W8, [X19 + 0x40]
	0x03546D3C CMP W8, 0x3
	0x03546D40 B.CC 0x3546E2C
	0x03546D44 LDR X19, [X19 + 0x48]
	0x03546D48 CBZ X19, 0x3546F14
	0x03546D4C ADRP X9, 0xBB5000
	0x03546D50 LDR X8, [X19]
	0x03546D54 LDR X9, [X9 + 0xBC8]
	0x03546D58 ADRP X10, 0xBB6000
	0x03546D5C LDR X1, [X9]
	0x03546D60 LDR X10, [X10 + 0x668]
	0x03546D64 LDRH W9, [X8 + 0x12E]
	0x03546D68 LDR X20, [X10]
	0x03546D6C CBZ X9, 0x3546DFC
	0x03546D70 LDR X10, [X8 + 0xB0]
	0x03546D74 ADD X10, X10, 0x8
	0x03546D78 LDUR X11, [X10 - 0x8]
	0x03546D7C CMP X11, X1
	0x03546D80 B.EQ 0x3546E0C
	0x03546D84 SUBS X9, X9, 0x1
	0x03546D88 ADD X10, X10, 0x10
	0x03546D8C B.NE 0x3546D78
	0x03546D90 B 0x3546DFC
	0x03546D94 MOV X0, X20
	0x03546D98 MOV X1, X31
	0x03546D9C BL 0x32277A8
	0x03546DA0 TBZ X0, 0x0, 0x3546E48
	0x03546DA4 LDRB W8, [X19 + 0x40]
	0x03546DA8 CMP W8, 0x3
	0x03546DAC B.CC 0x3546E2C
	0x03546DB0 LDR X19, [X19 + 0x48]
	0x03546DB4 CBZ X19, 0x3546F14
	0x03546DB8 ADRP X9, 0xBB5000
	0x03546DBC LDR X8, [X19]
	0x03546DC0 LDR X9, [X9 + 0xBC8]
	0x03546DC4 ADRP X10, 0xBB6000
	0x03546DC8 LDR X1, [X9]
	0x03546DCC LDR X10, [X10 + 0x660]
	0x03546DD0 LDRH W9, [X8 + 0x12E]
	0x03546DD4 LDR X20, [X10]
	0x03546DD8 CBZ X9, 0x3546DFC
	0x03546DDC LDR X10, [X8 + 0xB0]
	0x03546DE0 ADD X10, X10, 0x8
	0x03546DE4 LDUR X11, [X10 - 0x8]
	0x03546DE8 CMP X11, X1
	0x03546DEC B.EQ 0x3546E0C
	0x03546DF0 SUBS X9, X9, 0x1
	0x03546DF4 ADD X10, X10, 0x10
	0x03546DF8 B.NE 0x3546DE4
	0x03546DFC MOV X0, X19
	0x03546E00 MOV W2, W31
	0x03546E04 BL 0x1C5C788
	0x03546E08 B 0x3546E18
	0x03546E0C LDRSW X9, [X10]
	0x03546E10 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE9A000
	007 Move W8, [X21+3141]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {43}
	014 Move X0, 0xBAE000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0xBAF000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB7000
	021 Move X0, [X0+1344]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB6000
	024 Move X0, [X0+3424]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB7000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB7000
	030 Move X0, [X0+696]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB6000
	033 Move X0, [X0+3016]
	034 Call 0x1C17CF4
	035 Move X0, 0xBB7000
	036 Move X0, [X0+1352]
	037 Call 0x1C17CF4
	038 Move X0, 0xBB7000
	039 Move X0, [X0+1584]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+3141], W8
	043 Move W8, [X19+64]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X21, [X19+72]
	046 Compare X21, 0
	047 JumpIfEqual {210}
	048 Move X9, 0xBB6000
	049 Move X8, [X21]
	050 Move X9, [X9+3016]
	051 Move X10, 0xBB7000
	052 Move X1, [X9]
	053 Move X10, [X10+1584]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X22, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X21
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X3, [X0+8]
	072 Move W1, 3
	073 Move X0, X21
	074 Move X2, X22
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, 0xBB7000
	077 Move X8, [X8+696]
	078 Move X21, 0xBB7000
	079 Move X0, [X8]
	080 Move X21, [X21+1344]
	081 Call 0x1C17F10
	082 Move X1, [X21]
	083 Move X21, X0
	084 Call Dictionary`2<Byte, Object>..ctor, X0
	085 Compare X20, 0
	086 JumpIfEqual {210}
	087 Move X0, [X20+16]
	088 Move X22, 0xBB7000
	089 Move X22, [X22+1560]
	090 Move X1, X31
	091 Call String.IsNullOrEmpty, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {103}
	096 Compare X21, 0
	097 JumpIfEqual {210}
	098 Move X2, [X20+16]
	099 Move X3, [X22]
	100 Move W1, 255
	101 Move X0, X21
	102 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	103 Move X8, [X20+32]
	104 Compare X8, 0
	105 JumpIfEqual {138}
	106 Move X0, [X8+16]
	107 Move X1, X31
	108 Call String.IsNullOrEmpty, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {138}
	113 Move X8, [X20+32]
	114 Compare X8, 0
	115 JumpIfEqual {210}
	116 Compare X21, 0
	117 JumpIfEqual {210}
	118 Move X2, [X8+16]
	119 Move X3, [X22]
	120 Move W1, 213
	121 Move X0, X21
	122 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	123 Move X8, [X20+32]
	124 Compare X8, 0
	125 JumpIfEqual {210}
	126 Move X9, 0xBAF000
	127 Move W8, [X8+24]
	128 Move X9, [X9+2520]
	129 Add X1, X31, 12
	130 Move [X31+12], W8
	131 Move X0, [X9]
	132 Call 0x1C17E04
	133 Move X3, [X22]
	134 Move X2, X0
	135 Move W1, 212
	136 Move X0, X21
	137 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	138 Move X2, [X20+56]
	139 Compare X2, 0
	140 JumpIfEqual {150}
	141 Move X8, [X2+24]
	142 Compare X8, 0
	143 JumpIfEqual {150}
	144 Compare X21, 0
	145 JumpIfEqual {210}
	146 Move X3, [X22]
	147 Move W1, 238
	148 Move X0, X21
	149 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	150 Move W8, [X20+48]
	151 Compare W8, 0
	152 JumpIfEqual {186}
	153 Move X0, [X20+40]
	154 Compare X0, 0
	155 JumpIfEqual {168}
	156 Move X8, 0xBB6000
	157 Move X8, [X8+3424]
	158 Move X1, [X8]
	159 Call Dictionary`2<Object, Object>.get_Count, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Compare X21, 0
	162 JumpIfEqual {210}
	163 Move X2, [X20+40]
	164 Move X3, [X22]
	165 Move W1, 249
	166 Move X0, X21
	167 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	168 Move X8, 0xBAE000
	169 Move X8, [X8+2904]
	170 Add X1, X31, 8
	171 Move X0, [X8]
	172 Move W8, 1
	173 Move [X31+8], W8
	174 Call 0x1C17E04
	175 Compare X21, 0
	176 JumpIfEqual {210}
	177 Move X3, [X22]
	178 Move X2, X0
	179 Move W1, 250
	180 Move X0, X21
	181 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	182 Move X2, [X20+24]
	183 Move X1, X21
	184 Move W3, W31
	185 Call LoadBalancingPeer.RoomOptionsToOpParameters, X0, X1, X2, X3
	186 Move X20, 0xBB7000
	187 Move X20, [X20+1352]
	188 Move X0, [X20]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {194}
	192 Call 0x1C17DFC
	193 Move X0, [X20]
	194 Move X8, [X0+184]
	195 Move X9, [X19]
	196 Move W1, 227
	197 Move X0, X19
	198 Move X3, [X8]
	199 Move X8, [X9+552]
	200 Move X4, [X9+560]
	201 Move X2, X21
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move X20, [X31+32]
	204 Move X19, [X31+40]
	205 Move X22, [X31+16]
	206 Move X21, [X31+24]
	207 And W0, W0, 1
	208 Move X30, [X31+48]
	209 Return X0
	210 Call 0x1C17F20

Method: System.Boolean OpJoinRoom(Photon.Realtime.EnterRoomParams opParams)

Disassembly:
	0x03546E14 ADD X0, X8, 0x138
	0x03546E18 LDP X8, X3, [X0]
	0x03546E1C MOVZ W1, 0x3
	0x03546E20 MOV X0, X19
	0x03546E24 MOV X2, X20
	0x03546E28 BLR X8
	0x03546E2C MOV W0, W31
	0x03546E30 LDP X20, X19, [X31 + 0x30]
	0x03546E34 LDP X22, X21, [X31 + 0x20]
	0x03546E38 LDP X30, X23, [X31 + 0x10]
	0x03546E3C AND W0, W0, 0x1
	0x03546E40 ADD X31, X31, 0x40
	0x03546E44 RET
	0x03546E48 ADRP X8, 0xBB6000
	0x03546E4C LDR X8, [X8 + 0x2B8]
	0x03546E50 LDR X0, [X8]
	0x03546E54 BL 0x1C16F10
	0x03546E58 ADRP X8, 0xBB6000
	0x03546E5C LDR X8, [X8 + 0x540]
	0x03546E60 MOV X22, X0
	0x03546E64 LDR X1, [X8]
	0x03546E68 BL 0x29D2C7C
	0x03546E6C CBZ X22, 0x3546F14
	0x03546E70 ADRP X23, 0xBB6000
	0x03546E74 LDR X2, [X21 + 0x10]
	0x03546E78 LDR X23, [X23 + 0x618]
	0x03546E7C MOVZ W1, 0xD5
	0x03546E80 MOV X0, X22
	0x03546E84 LDR X3, [X23]
	0x03546E88 BL 0x29D3520
	0x03546E8C ADRP X9, 0xBAE000
	0x03546E90 LDRB W8, [X21 + 0x18]
	0x03546E94 LDR X9, [X9 + 0x9D8]
	0x03546E98 ADD X1, X31, 0xC
	0x03546E9C STRB W8, [X31 + 0xC]
	0x03546EA0 LDR X0, [X9]
	0x03546EA4 BL 0x1C16E04
	0x03546EA8 LDR X3, [X23]
	0x03546EAC MOV X2, X0
	0x03546EB0 MOVZ W1, 0xD4
	0x03546EB4 MOV X0, X22
	0x03546EB8 BL 0x29D3520
	0x03546EBC LDR X3, [X23]
	0x03546EC0 MOVZ W1, 0xF5
	0x03546EC4 MOV X0, X22
	0x03546EC8 MOV X2, X20
	0x03546ECC BL 0x29D3520
	0x03546ED0 ADRP X20, 0xBB6000
	0x03546ED4 LDR X20, [X20 + 0x548]
	0x03546ED8 LDR X0, [X20]
	0x03546EDC LDR W8, [X0 + 0xE0]
	0x03546EE0 CBNZ W8, 0x3546EEC
	0x03546EE4 BL 0x1C16DFC
	0x03546EE8 LDR X0, [X20]
	0x03546EEC LDR X8, [X0 + 0xB8]
	0x03546EF0 LDR X9, [X19]
	0x03546EF4 MOVZ W1, 0xD9
	0x03546EF8 MOV X0, X19
	0x03546EFC LDR X3, [X8]
	0x03546F00 LDR X8, [X9 + 0x228]
	0x03546F04 LDR X4, [X9 + 0x230]
	0x03546F08 MOV X2, X22
	0x03546F0C BLR X8
	0x03546F10 B 0x3546E30
	0x03546F14 BL 0x1C16F20
	0x03546F18 STR X30, [X31 - 0x40]!
	0x03546F1C STP X24, X23, [X31 + 0x10]
	0x03546F20 STP X22, X21, [X31 + 0x20]
	0x03546F24 STP X20, X19, [X31 + 0x30]
	0x03546F28 ADRP X24, 0xE99000
	0x03546F2C ADRP X23, 0xBB6000
	0x03546F30 ADRP X20, 0xBB6000
	0x03546F34 LDRB W8, [X24 + 0xC4B]
	0x03546F38 LDR X23, [X23 + 0x2B8]
	0x03546F3C LDR X20, [X20 + 0x540]
	0x03546F40 MOV X21, X2
	0x03546F44 MOV X22, X1
	0x03546F48 MOV X19, X0
	0x03546F4C TBNZ X8, 0x0, 0x3546F94
	0x03546F50 ADRP X0, 0xBB6000
	0x03546F54 LDR X0, [X0 + 0x540]
	0x03546F58 BL 0x1C16CF4
	0x03546F5C ADRP X0, 0xBB6000
	0x03546F60 LDR X0, [X0 + 0x618]
	0x03546F64 BL 0x1C16CF4
	0x03546F68 ADRP X0, 0xBB6000
	0x03546F6C LDR X0, [X0 + 0x2B8]
	0x03546F70 BL 0x1C16CF4
	0x03546F74 ADRP X0, 0xBAD000
	0x03546F78 LDR X0, [X0 + 0x758]
	0x03546F7C BL 0x1C16CF4
	0x03546F80 ADRP X0, 0xBB6000
	0x03546F84 LDR X0, [X0 + 0x548]
	0x03546F88 BL 0x1C16CF4
	0x03546F8C MOVZ W8, 0x1
	0x03546F90 STRB W8, [X24 + 0xC4B]
	0x03546F94 LDR X0, [X23]
	0x03546F98 ADRP X23, 0xBB6000
	0x03546F9C LDR X23, [X23 + 0x618]
	0x03546FA0 BL 0x1C16F10
	0x03546FA4 LDR X1, [X20]
	0x03546FA8 MOV X20, X0
	0x03546FAC BL 0x29D2C7C
	0x03546FB0 CBZ X22, 0x3546FD4
	0x03546FB4 LDR X8, [X22 + 0x18]
	0x03546FB8 CBZ X8, 0x3546FD4
	0x03546FBC CBZ X20, 0x3547084
	0x03546FC0 LDR X3, [X23]
	0x03546FC4 MOVZ W1, 0x1
	0x03546FC8 MOV X0, X20
	0x03546FCC MOV X2, X22
	0x03546FD0 BL 0x29D3520
	0x03546FD4 CBZ X21, 0x354702C
	0x03546FD8 ADRP X8, 0xBAD000
	0x03546FDC LDR X8, [X8 + 0x758]
	0x03546FE0 LDRB W9, [X21 + 0x10]
	0x03546FE4 LDRB W10, [X21 + 0x11]
	0x03546FE8 LDRB W11, [X21 + 0x12]
	0x03546FEC LDR X0, [X8]
	0x03546FF0 ORR W8, W9, 0x2
	0x03546FF4 CMP W10, 0x0
	0x03546FF8 CSEL W8, W9, W8, EQ
	0x03546FFC ORR W9, W8, 0x4
	0x03547000 CMP W11, 0x0
	0x03547004 CSEL W8, W8, W9, EQ
	0x03547008 ADD X1, X31, 0xC
	0x0354700C STR W8, [X31 + 0xC]
	0x03547010 BL 0x1C16E04
	0x03547014 CBZ X20, 0x3547084
	0x03547018 LDR X3, [X23]
	0x0354701C MOV X2, X0
	0x03547020 MOVZ W1, 0x2
	0x03547024 MOV X0, X20
	0x03547028 BL 0x29D3520
	0x0354702C ADRP X21, 0xBB5000
	0x03547030 LDR X21, [X21 + 0x548]
	0x03547034 LDR X0, [X21]
	0x03547038 LDR W8, [X0 + 0xE0]
	0x0354703C CBNZ W8, 0x3547048
	0x03547040 BL 0x1C16DFC
	0x03547044 LDR X0, [X21]
	0x03547048 LDR X8, [X0 + 0xB8]
	0x0354704C LDR X9, [X19]
	0x03547050 MOVZ W1, 0xDE
	0x03547054 MOV X0, X19
	0x03547058 LDR X3, [X8]
	0x0354705C LDR X8, [X9 + 0x228]
	0x03547060 LDR X4, [X9 + 0x230]
	0x03547064 MOV X2, X20
	0x03547068 BLR X8
	0x0354706C LDP X20, X19, [X31 + 0x30]
	0x03547070 LDP X22, X21, [X31 + 0x20]
	0x03547074 LDP X24, X23, [X31 + 0x10]
	0x03547078 AND W0, W0, 0x1
	0x0354707C LDR X30, [X31], #0x40
	0x03547080 RET
	0x03547084 BL 0x1C16F20
	0x03547088 LDRB W8, [X0 + 0x10]
	0x0354708C LDRB W9, [X0 + 0x11]
	0x03547090 LDRB W10, [X0 + 0x12]
	0x03547094 ORR W11, W8, 0x2
	0x03547098 CMP W9, 0x0
	0x0354709C CSEL W8, W8, W11, EQ
	0x035470A0 ORR W9, W8, 0x4
	0x035470A4 CMP W10, 0x0
	0x035470A8 CSEL W0, W8, W9, EQ
	0x035470AC RET
	0x035470B0 STP X30, X23, [X31 - 0x30]!
	0x035470B4 STP X22, X21, [X31 + 0x10]
	0x035470B8 STP X20, X19, [X31 + 0x20]
	0x035470BC ADRP X22, 0xE98000
	0x035470C0 ADRP X23, 0xBED000
	0x035470C4 LDRB W8, [X22 + 0xC4C]
	0x035470C8 LDR X23, [X23 + 0xBA8]
	0x035470CC MOV X21, X2
	0x035470D0 MOV W19, W1
	0x035470D4 MOV X20, X0
	0x035470D8 TBNZ X8, 0x0, 0x35470F0
	0x035470DC ADRP X0, 0xBED000
	0x035470E0 LDR X0, [X0 + 0xBA8]
	0x035470E4 BL 0x1C16CF4
	0x035470E8 MOVZ W8, 0x1
	0x035470EC STRB W8, [X22 + 0xC4C]
	0x035470F0 LDR X0, [X23]
	0x035470F4 LDR W8, [X0 + 0xE0]
	0x035470F8 CBNZ W8, 0x3547100
	0x035470FC BL 0x1C16DFC
	0x03547100 MOV X0, X21
	0x03547104 BL 0x3537918
	0x03547108 MOV X2, X0
	0x0354710C MOV X0, X20
	0x03547110 MOV W1, W19
	0x03547114 LDP X20, X19, [X31 + 0x20]
	0x03547118 LDP X22, X21, [X31 + 0x10]
	0x0354711C MOV X3, X31
	0x03547120 MOV X4, X31
	0x03547124 LDP X30, X23, [X31], #0x30
	0x03547128 B 0x353C464
	0x0354712C STP X30, X23, [X31 - 0x30]!
	0x03547130 STP X22, X21, [X31 + 0x10]
	0x03547134 STP X20, X19, [X31 + 0x20]
	0x03547138 ADRP X22, 0xE98000
	0x0354713C ADRP X23, 0xBB4000
	0x03547140 LDRB W8, [X22 + 0xC4E]
	0x03547144 LDR X23, [X23 + 0xDA0]
	0x03547148 MOV X20, X2
	0x0354714C MOV W21, W1
	0x03547150 MOV X19, X0
	0x03547154 TBNZ X8, 0x0, 0x354716C
	0x03547158 ADRP X0, 0xBB4000
	0x0354715C LDR X0, [X0 + 0xDA0]
	0x03547160 BL 0x1C16CF4
	0x03547164 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xE9A000
	009 Move W8, [X21+3142]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0xBAE000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move X0, 0xBAF000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0xBB7000
	023 Move X0, [X0+1344]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB6000
	026 Move X0, [X0+3424]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB7000
	029 Move X0, [X0+1560]
	030 Call 0x1C17CF4
	031 Move X0, 0xBB7000
	032 Move X0, [X0+696]
	033 Call 0x1C17CF4
	034 Move X0, 0xBB6000
	035 Move X0, [X0+3016]
	036 Call 0x1C17CF4
	037 Move X0, 0xBB7000
	038 Move X0, [X0+1352]
	039 Call 0x1C17CF4
	040 Move X0, 0xBB7000
	041 Move X0, [X0+1592]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+3142], W8
	045 Move W8, [X19+64]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X21, [X19+72]
	048 Compare X21, 0
	049 JumpIfEqual {238}
	050 Move X9, 0xBB6000
	051 Move X8, [X21]
	052 Move X9, [X9+3016]
	053 Move X10, 0xBB7000
	054 Move X1, [X9]
	055 Move X10, [X10+1592]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X22, [X10]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X21
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X3, [X0+8]
	074 Move W1, 3
	075 Move X0, X21
	076 Move X2, X22
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, 0xBB7000
	079 Move X8, [X8+696]
	080 Move X21, 0xBB7000
	081 Move X0, [X8]
	082 Move X21, [X21+1344]
	083 Call 0x1C17F10
	084 Move X1, [X21]
	085 Move X21, X0
	086 Call Dictionary`2<Byte, Object>..ctor, X0
	087 Compare X20, 0
	088 JumpIfEqual {238}
	089 Move X0, [X20+16]
	090 Move X22, 0xBB7000
	091 Move X22, [X22+1560]
	092 Move X1, X31
	093 Call String.IsNullOrEmpty, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {105}
	098 Compare X21, 0
	099 JumpIfEqual {238}
	100 Move X2, [X20+16]
	101 Move X3, [X22]
	102 Move W1, 255
	103 Move X0, X21
	104 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	105 Move W8, [X20+49]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X23, 0xBAF000
	109 Move X23, [X23+2520]
	110 Add X1, X31, 12
	111 Move [X31+12], W8
	112 Move X0, [X23]
	113 Call 0x1C17E04
	114 Compare X21, 0
	115 JumpIfEqual {238}
	116 Move X3, [X22]
	117 Move X2, X0
	118 Move W1, 215
	119 Move X0, X21
	120 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	121 Move X8, [X20+32]
	122 Compare X8, 0
	123 JumpIfEqual {164}
	124 Move X0, [X8+16]
	125 Move X1, X31
	126 Call String.IsNullOrEmpty, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {164}
	131 Move X8, [X20+32]
	132 Compare X8, 0
	133 JumpIfEqual {238}
	134 Move X2, [X8+16]
	135 Move X3, [X22]
	136 Move W1, 213
	137 Move X0, X21
	138 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	139 Move X8, [X20+32]
	140 Compare X8, 0
	141 JumpIfEqual {238}
	142 Move W8, [X8+24]
	143 Move X0, [X23]
	144 Add X1, X31, 8
	145 Move [X31+8], W8
	146 Call 0x1C17E04
	147 Move X3, [X22]
	148 Move X2, X0
	149 Move W1, 212
	150 Move X8, 0xBAE000
	151 Move X8, [X8+2520]
	152 Add X1, X31, 4
	153 Move X0, [X8]
	154 Move W8, 3
	155 Move [X31+4], W8
	156 Call 0x1C17E04
	157 Compare X21, 0
	158 JumpIfEqual {238}
	159 Move X3, [X22]
	160 Move X2, X0
	161 Move W1, 215
	162 Move X0, X21
	163 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	164 Move X2, [X20+56]
	165 Compare X2, 0
	166 JumpIfEqual {176}
	167 Move X8, [X2+24]
	168 Compare X8, 0
	169 JumpIfEqual {176}
	170 Compare X21, 0
	171 JumpIfEqual {238}
	172 Move X3, [X22]
	173 Move W1, 238
	174 Move X0, X21
	175 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	176 Move W8, [X20+48]
	177 Compare W8, 0
	178 JumpIfEqual {212}
	179 Move X0, [X20+40]
	180 Compare X0, 0
	181 JumpIfEqual {194}
	182 Move X8, 0xBB5000
	183 Move X8, [X8+3424]
	184 Move X1, [X8]
	185 Call Dictionary`2<Object, Object>.get_Count, X0
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Compare X21, 0
	188 JumpIfEqual {238}
	189 Move X2, [X20+40]
	190 Move X3, [X22]
	191 Move W1, 249
	192 Move X0, X21
	193 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	194 Move X8, 0xBAD000
	195 Move X8, [X8+2904]
	196 Add X1, X31, 0
	197 Move X0, [X8]
	198 Move W8, 1
	199 Move [X31], W8
	200 Call 0x1C17E04
	201 Compare X21, 0
	202 JumpIfEqual {238}
	203 Move X3, [X22]
	204 Move X2, X0
	205 Move W1, 250
	206 Move X0, X21
	207 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	208 Move X2, [X20+24]
	209 Move X1, X21
	210 Move W3, W31
	211 Call LoadBalancingPeer.RoomOptionsToOpParameters, X0, X1, X2, X3
	212 Move X20, 0xBB6000
	213 Move X20, [X20+1352]
	214 Move X0, [X20]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {220}
	218 Call 0x1C17DFC
	219 Move X0, [X20]
	220 Move X8, [X0+184]
	221 Move X9, [X19]
	222 Move W1, 226
	223 Move X0, X19
	224 Move X3, [X8]
	225 Move X8, [X9+552]
	226 Move X4, [X9+560]
	227 Move X2, X21
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X20, [X31+48]
	230 Move X19, [X31+56]
	231 Move X22, [X31+32]
	232 Move X21, [X31+40]
	233 Move X30, [X31+16]
	234 Move X23, [X31+24]
	235 And W0, W0, 1
	236 Add X31, X31, 64
	237 Return X0
	238 Call 0x1C17F20

Method: System.Boolean OpJoinRandomRoom(Photon.Realtime.OpJoinRandomRoomParams opJoinRandomRoomParams)

Disassembly:
	0x03547168 STRB W8, [X22 + 0xC4E]
	0x0354716C LDR X0, [X23]
	0x03547170 BL 0x1C16F10
	0x03547174 MOV X1, X31
	0x03547178 MOV X22, X0
	0x0354717C BL 0x34ED7D8
	0x03547180 CBZ X22, 0x35471B8
	0x03547184 MOV X0, X22
	0x03547188 MOV W1, W21
	0x0354718C MOV X2, X20
	0x03547190 MOV X3, X31
	0x03547194 BL 0x34ED9F4
	0x03547198 MOV X0, X19
	0x0354719C MOV X1, X22
	0x035471A0 LDP X20, X19, [X31 + 0x20]
	0x035471A4 LDP X22, X21, [X31 + 0x10]
	0x035471A8 MOV X2, X31
	0x035471AC MOV X3, X31
	0x035471B0 LDP X30, X23, [X31], #0x30
	0x035471B4 B 0x353CD00
	0x035471B8 BL 0x1C16F20
	0x035471BC STR X30, [X31 - 0x30]!
	0x035471C0 STP X22, X21, [X31 + 0x10]
	0x035471C4 STP X20, X19, [X31 + 0x20]
	0x035471C8 ADRP X21, 0xE98000
	0x035471CC ADRP X22, 0xBED000
	0x035471D0 LDRB W8, [X21 + 0xC4F]
	0x035471D4 LDR X22, [X22 + 0xBA8]
	0x035471D8 MOV X20, X1
	0x035471DC MOV X19, X0
	0x035471E0 TBNZ X8, 0x0, 0x35471F8
	0x035471E4 ADRP X0, 0xBED000
	0x035471E8 LDR X0, [X0 + 0xBA8]
	0x035471EC BL 0x1C16CF4
	0x035471F0 MOVZ W8, 0x1
	0x035471F4 STRB W8, [X21 + 0xC4F]
	0x035471F8 LDR X0, [X22]
	0x035471FC LDR W8, [X0 + 0xE0]
	0x03547200 CBNZ W8, 0x3547208
	0x03547204 BL 0x1C16DFC
	0x03547208 MOV X0, X20
	0x0354720C BL 0x3537918
	0x03547210 MOV X1, X0
	0x03547214 MOV X0, X19
	0x03547218 LDP X20, X19, [X31 + 0x20]
	0x0354721C LDP X22, X21, [X31 + 0x10]
	0x03547220 MOV X2, X31
	0x03547224 MOV X3, X31
	0x03547228 LDR X30, [X31], #0x30
	0x0354722C B 0x353CD00
	0x03547230 SUB X31, X31, 0x60
	0x03547234 STR X30, [X31 + 0x10]
	0x03547238 STP X26, X25, [X31 + 0x20]
	0x0354723C STP X24, X23, [X31 + 0x30]
	0x03547240 STP X22, X21, [X31 + 0x40]
	0x03547244 STP X20, X19, [X31 + 0x50]
	0x03547248 ADRP X21, 0xE98000
	0x0354724C LDRB W8, [X21 + 0xC51]
	0x03547250 MOV W25, W5
	0x03547254 MOV X22, X4
	0x03547258 MOV X20, X3
	0x0354725C MOV X24, X2
	0x03547260 MOV X23, X1
	0x03547264 MOV X19, X0
	0x03547268 TBNZ X8, 0x0, 0x35472D4
	0x0354726C ADRP X0, 0xBAC000
	0x03547270 LDR X0, [X0 + 0xB58]
	0x03547274 BL 0x1C16CF4
	0x03547278 ADRP X0, 0xBAD000
	0x0354727C LDR X0, [X0 + 0x9D8]
	0x03547280 BL 0x1C16CF4
	0x03547284 ADRP X0, 0xBB5000
	0x03547288 LDR X0, [X0 + 0x540]
	0x0354728C BL 0x1C16CF4
	0x03547290 ADRP X0, 0xBB5000
	0x03547294 LDR X0, [X0 + 0x618]
	0x03547298 BL 0x1C16CF4
	0x0354729C ADRP X0, 0xBB5000
	0x035472A0 LDR X0, [X0 + 0x2B8]
	0x035472A4 BL 0x1C16CF4
	0x035472A8 ADRP X0, 0xBB4000
	0x035472AC LDR X0, [X0 + 0xBC8]
	0x035472B0 BL 0x1C16CF4
	0x035472B4 ADRP X0, 0xBB5000
	0x035472B8 LDR X0, [X0 + 0x548]
	0x035472BC BL 0x1C16CF4
	0x035472C0 ADRP X0, 0xBB5000
	0x035472C4 LDR X0, [X0 + 0x698]
	0x035472C8 BL 0x1C16CF4
	0x035472CC MOVZ W8, 0x1
	0x035472D0 STRB W8, [X21 + 0xC51]
	0x035472D4 STR X31, [X31 + 0x18]
	0x035472D8 LDRB W8, [X19 + 0x40]
	0x035472DC CMP W8, 0x3
	0x035472E0 B.CC 0x3547360
	0x035472E4 LDR X21, [X19 + 0x48]
	0x035472E8 CBZ X21, 0x3547580
	0x035472EC ADRP X9, 0xBB4000
	0x035472F0 LDR X8, [X21]
	0x035472F4 LDR X9, [X9 + 0xBC8]
	0x035472F8 ADRP X10, 0xBB5000
	0x035472FC LDR X1, [X9]
	0x03547300 LDR X10, [X10 + 0x698]
	0x03547304 LDRH W9, [X8 + 0x12E]
	0x03547308 LDR X26, [X10]
	0x0354730C CBZ X9, 0x3547330
	0x03547310 LDR X10, [X8 + 0xB0]
	0x03547314 ADD X10, X10, 0x8
	0x03547318 LDUR X11, [X10 - 0x8]
	0x0354731C CMP X11, X1
	0x03547320 B.EQ 0x3547340
	0x03547324 SUBS X9, X9, 0x1
	0x03547328 ADD X10, X10, 0x10
	0x0354732C B.NE 0x3547318
	0x03547330 MOV X0, X21
	0x03547334 MOV W2, W31
	0x03547338 BL 0x1C5C788
	0x0354733C B 0x354734C
	0x03547340 LDRSW X9, [X10]
	0x03547344 ADD X8, X8, X9, 0x4, LSL
	0x03547348 ADD X0, X8, 0x138
	0x0354734C LDP X8, X3, [X0]
	0x03547350 MOVZ W1, 0x3
	0x03547354 MOV X0, X21
	0x03547358 MOV X2, X26
	0x0354735C BLR X8
	0x03547360 ADRP X8, 0xBB5000
	0x03547364 LDR X8, [X8 + 0x2B8]
	0x03547368 ADRP X21, 0xBB5000
	0x0354736C ADRP X26, 0xBB5000
	0x03547370 LDR X0, [X8]
	0x03547374 LDR X21, [X21 + 0x540]
	0x03547378 LDR X26, [X26 + 0x618]
	0x0354737C BL 0x1C16F10
	0x03547380 LDR X1, [X21]
	0x03547384 MOV X21, X0
	0x03547388 BL 0x29D2C7C
	0x0354738C TBZ X25, 0x0, 0x35473C4
	0x03547390 ADRP X8, 0xBAC000
	0x03547394 LDR X8, [X8 + 0xB58]
	0x03547398 ADD X1, X31, 0xC
	0x0354739C LDR X0, [X8]
	0x035473A0 MOVZ W8, 0x1
	0x035473A4 STRB W8, [X31 + 0xC]
	0x035473A8 BL 0x1C16E04
	0x035473AC CBZ X21, 0x3547580
	0x035473B0 LDR X3, [X26]
	0x035473B4 MOV X2, X0
	0x035473B8 MOVZ W1, 0xD3
	0x035473BC MOV X0, X21
	0x035473C0 BL 0x29D3520
	0x035473C4 ADRP X25, 0xBB5000
	0x035473C8 LDR X25, [X25 + 0x548]
	0x035473CC CBZ X20, 0x3547428
	0x035473D0 LDR X2, [X20 + 0x28]
	0x035473D4 CBZ X2, 0x3547428
	0x035473D8 CBZ X21, 0x3547580
	0x035473DC LDR X3, [X26]
	0x035473E0 MOVZ W1, 0xDD
	0x035473E4 MOV X0, X21
	0x035473E8 BL 0x29D3520
	0x035473EC LDR X0, [X25]
	0x035473F0 LDR W8, [X0 + 0xE0]
	0x035473F4 CBNZ W8, 0x3547400
	0x035473F8 BL 0x1C16DFC
	0x035473FC LDR X0, [X25]
	0x03547400 LDR X8, [X0 + 0xB8]
	0x03547404 LDR X9, [X19]
	0x03547408 MOVZ W1, 0xE6
	0x0354740C MOV X0, X19
	0x03547410 LDR X3, [X8]
	0x03547414 LDR X8, [X9 + 0x228]
	0x03547418 LDR X4, [X9 + 0x230]
	0x0354741C MOV X2, X21
	0x03547420 BLR X8
	0x03547424 B 0x3547560
	0x03547428 CBZ X21, 0x3547580
	0x0354742C LDR X3, [X26]
	0x03547430 MOVZ W1, 0xDC
	0x03547434 MOV X0, X21
	0x03547438 MOV X2, X24
	0x0354743C BL 0x29D3520
	0x03547440 LDR X3, [X26]
	0x03547444 MOVZ W1, 0xE0
	0x03547448 MOV X0, X21
	0x0354744C MOV X2, X23
	0x03547450 BL 0x29D3520
	0x03547454 MOV X0, X22
	0x03547458 MOV X1, X31
	0x0354745C BL 0x32277A8
	0x03547460 TBNZ X0, 0x0, 0x3547478
	0x03547464 LDR X3, [X26]
	0x03547468 MOVZ W1, 0xD2
	0x0354746C MOV X0, X21
	0x03547470 MOV X2, X22
	0x03547474 BL 0x29D3520
	0x03547478 CBZ X20, 0x3547514
	0x0354747C LDR X0, [X20 + 0x30]
	0x03547480 MOV X1, X31
	0x03547484 BL 0x32277A8
	0x03547488 TBNZ X0, 0x0, 0x35474A0
	0x0354748C LDR X2, [X20 + 0x30]
	0x03547490 LDR X3, [X26]
	0x03547494 MOVZ W1, 0xE1
	0x03547498 MOV X0, X21
	0x0354749C BL 0x29D3520
	0x035474A0 LDRB W8, [X20 + 0x10]
	0x035474A4 CMP W8, 0xFF
	0x035474A8 B.EQ 0x3547514
	0x035474AC ADRP X9, 0xBAD000
	0x035474B0 LDR X9, [X9 + 0x9D8]
	0x035474B4 ADD X1, X31, 0x8
	0x035474B8 STRB W8, [X31 + 0x8]
	0x035474BC LDR X0, [X9]
	0x035474C0 BL 0x1C16E04
	0x035474C4 LDR X3, [X26]
	0x035474C8 MOV X2, X0
	0x035474CC MOVZ W1, 0xD9
	0x035474D0 MOV X0, X21
	0x035474D4 BL 0x29D3520
	0x035474D8 LDR X0, [X20 + 0x18]
	0x035474DC MOV X1, X31
	0x035474E0 BL 0x32277A8
	0x035474E4 TBNZ X0, 0x0, 0x35474FC
	0x035474E8 LDR X2, [X20 + 0x18]
	0x035474EC LDR X3, [X26]
	0x035474F0 MOVZ W1, 0xD8
	0x035474F4 MOV X0, X21
	0x035474F8 BL 0x29D3520
	0x035474FC LDR X2, [X20 + 0x20]
	0x03547500 CBZ X2, 0x3547514
	0x03547504 LDR X3, [X26]
	0x03547508 MOVZ W1, 0xD6
	0x0354750C MOV X0, X21
	0x03547510 BL 0x29D3520
	0x03547514 LDR X0, [X25]
	0x03547518 STR X31, [X31 + 0x18]
	0x0354751C LDR W8, [X0 + 0xE0]
	0x03547520 CBNZ W8, 0x3547528
	0x03547524 BL 0x1C16DFC
	0x03547528 ADD X0, X31, 0x18
	0x0354752C MOVZ W1, 0x1
	0x03547530 MOV X2, X31
	0x03547534 MOVZ W20, 0x1
	0x03547538 BL 0x35160A8
	0x0354753C STRB W20, [X31 + 0x1C]
	0x03547540 LDR X8, [X19]
	0x03547544 LDR X3, [X31 + 0x18]
	0x03547548 MOVZ W1, 0xE6
	0x0354754C MOV X0, X19
	0x03547550 LDR X9, [X8 + 0x228]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0xE99000
	010 Move W8, [X21+3143]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {55}
	017 Move X0, 0xBAD000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0xBAE000
	021 Move X0, [X0+2520]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB6000
	024 Move X0, [X0+1344]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB5000
	027 Move X0, [X0+3424]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB6000
	030 Move X0, [X0+1560]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB6000
	033 Move X0, [X0+696]
	034 Call 0x1C17CF4
	035 Move X0, 0xBEE000
	036 Move X0, [X0+2984]
	037 Call 0x1C17CF4
	038 Move X0, 0xBB5000
	039 Move X0, [X0+3488]
	040 Call 0x1C17CF4
	041 Move X0, 0xBB5000
	042 Move X0, [X0+3016]
	043 Call 0x1C17CF4
	044 Move X0, 0xBAD000
	045 Move X0, [X0+1880]
	046 Call 0x1C17CF4
	047 Move X0, 0xBB6000
	048 Move X0, [X0+1352]
	049 Call 0x1C17CF4
	050 Move X0, 0xBB6000
	051 Move X0, [X0+1600]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+3143], W8
	055 Move W8, [X19+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X21, [X19+72]
	058 Compare X21, 0
	059 JumpIfEqual {279}
	060 Move X9, 0xBB5000
	061 Move X8, [X21]
	062 Move X9, [X9+3016]
	063 Move X10, 0xBB6000
	064 Move X1, [X9]
	065 Move X10, [X10+1600]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X22, [X10]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X21
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X3, [X0+8]
	084 Move W1, 3
	085 Move X0, X21
	086 Move X2, X22
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, 0xBB5000
	089 Move X8, [X8+3488]
	090 Move X0, [X8]
	091 Call 0x1C17F10
	092 Move X1, X31
	093 Move X22, X0
	094 Call Hashtable..ctor, X0
	095 Compare X20, 0
	096 JumpIfEqual {279}
	097 Move X8, 0xBEE000
	098 Move X8, [X8+2984]
	099 Move X21, [X20+16]
	100 Move X0, [X8]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X23, 0xBAE000
	106 Move X23, [X23+2520]
	107 Move X0, X22
	108 Move X1, X21
	109 Call Extensions.MergeStringKeys, X0, X1
	110 Move W8, [X20+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, [X23]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W9, 256
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Add X1, X31, 28
	117 Move [X31+28], W8
	118 Call 0x1C17E04
	119 Compare X22, 0
	120 JumpIfEqual {279}
	121 Move X2, X0
	122 Move W1, 255
	123 Move X0, X22
	124 Move X3, X31
	125 Call Hashtable.set_Item, X0, X1, X2
	126 Move W8, [X20+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X9, 0xBAD000
	129 Move X9, [X9+1880]
	130 Add X1, X31, 24
	131 Move [X31+24], W8
	132 Move X0, [X9]
	133 Call 0x1C17E04
	134 Move X2, X0
	135 Move W1, 243
	136 Move X0, X22
	137 Move X3, X31
	138 Call Hashtable.set_Item, X0, X1, X2
	139 Move X8, 0xBB6000
	140 Move X8, [X8+696]
	141 Move X21, 0xBB6000
	142 Move X0, [X8]
	143 Move X21, [X21+1344]
	144 Call 0x1C17F10
	145 Move X1, [X21]
	146 Move X21, X0
	147 Call Dictionary`2<Byte, Object>..ctor, X0
	148 Compare X22, 0
	149 JumpIfEqual {279}
	150 Move X8, 0xBB5000
	151 Move X8, [X8+3424]
	152 Move X24, 0xBB6000
	153 Move X0, X22
	154 Move X1, [X8]
	155 Move X24, [X24+1560]
	156 Call Dictionary`2<Object, Object>.get_Count, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Compare X21, 0
	159 JumpIfEqual {279}
	160 Move X3, [X24]
	161 Move W1, 248
	162 Move X0, X21
	163 Move X2, X22
	164 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	165 Move W8, [X20+28]
	166 Compare W8, 0
	167 JumpIfEqual {179}
	168 Move X0, [X23]
	169 Add X1, X31, 12
	170 Move [X31+12], W8
	171 Call 0x1C17E04
	172 Compare X21, 0
	173 JumpIfEqual {279}
	174 Move X3, [X24]
	175 Move X2, X0
	176 Move W1, 223
	177 Move X0, X21
	178 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	179 Move X8, [X20+32]
	180 Compare X8, 0
	181 JumpIfEqual {212}
	182 Move X0, [X8+16]
	183 Move X1, X31
	184 Call String.IsNullOrEmpty, X0
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {212}
	189 Move X8, [X20+32]
	190 Compare X8, 0
	191 JumpIfEqual {279}
	192 Compare X21, 0
	193 JumpIfEqual {279}
	194 Move X2, [X8+16]
	195 Move X3, [X24]
	196 Move W1, 213
	197 Move X0, X21
	198 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	199 Move X8, [X20+32]
	200 Compare X8, 0
	201 JumpIfEqual {279}
	202 Move W8, [X8+24]
	203 Move X0, [X23]
	204 Add X1, X31, 8
	205 Move [X31+8], W8
	206 Call 0x1C17E04
	207 Move X3, [X24]
	208 Move X2, X0
	209 Move W1, 212
	210 Move X0, X21
	211 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	212 Move X0, [X20+40]
	213 Move X1, X31
	214 Call String.IsNullOrEmpty, X0
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {226}
	219 Compare X21, 0
	220 JumpIfEqual {279}
	221 Move X2, [X20+40]
	222 Move X3, [X24]
	223 Move W1, 245
	224 Move X0, X21
	225 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	226 Move X2, [X20+48]
	227 Compare X2, 0
	228 JumpIfEqual {238}
	229 Move X8, [X2+24]
	230 Compare X8, 0
	231 JumpIfEqual {238}
	232 Compare X21, 0
	233 JumpIfEqual {279}
	234 Move X3, [X24]
	235 Move W1, 238
	236 Move X0, X21
	237 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	238 Move X8, 0xBAD000
	239 Move X8, [X8+2904]
	240 Add X1, X31, 4
	241 Move X0, [X8]
	242 Move W8, 1
	243 Move [X31+4], W8
	244 Call 0x1C17E04
	245 Compare X21, 0
	246 JumpIfEqual {279}
	247 Move X3, [X24]
	248 Move X20, 0xBB6000
	249 Move X20, [X20+1352]
	250 Move X2, X0
	251 Move W1, 188
	252 Move X0, X21
	253 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	254 Move X0, [X20]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {260}
	258 Call 0x1C17DFC
	259 Move X0, [X20]
	260 Move X8, [X0+184]
	261 Move X9, [X19]
	262 Move W1, 225
	263 Move X0, X19
	264 Move X3, [X8]
	265 Move X8, [X9+552]
	266 Move X4, [X9+560]
	267 Move X2, X21
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move X20, [X31+64]
	270 Move X19, [X31+72]
	271 Move X22, [X31+48]
	272 Move X21, [X31+56]
	273 Move X24, [X31+32]
	274 Move X23, [X31+40]
	275 Move X30, [X31+16]
	276 And W0, W0, 1
	277 Add X31, X31, 80
	278 Return X0
	279 Call 0x1C17F20

Method: System.Boolean OpJoinRandomOrCreateRoom(Photon.Realtime.OpJoinRandomRoomParams opJoinRandomRoomParams, Photon.Realtime.EnterRoomParams createRoomParams)

Disassembly:
	0x03547554 LDR X4, [X8 + 0x230]
	0x03547558 MOV X2, X21
	0x0354755C BLR X9
	0x03547560 LDP X20, X19, [X31 + 0x50]
	0x03547564 LDP X22, X21, [X31 + 0x40]
	0x03547568 LDP X24, X23, [X31 + 0x30]
	0x0354756C LDP X26, X25, [X31 + 0x20]
	0x03547570 LDR X30, [X31 + 0x10]
	0x03547574 AND W0, W0, 0x1
	0x03547578 ADD X31, X31, 0x60
	0x0354757C RET
	0x03547580 BL 0x1C16F20
	0x03547584 SUB X31, X31, 0x90
	0x03547588 STP X29, X30, [X31 + 0x30]
	0x0354758C STP X28, X27, [X31 + 0x40]
	0x03547590 STP X26, X25, [X31 + 0x50]
	0x03547594 STP X24, X23, [X31 + 0x60]
	0x03547598 STP X22, X21, [X31 + 0x70]
	0x0354759C STP X20, X19, [X31 + 0x80]
	0x035475A0 ADRP X26, 0xE98000
	0x035475A4 LDRB W8, [X26 + 0xC52]
	0x035475A8 MOV W25, W6
	0x035475AC MOV W24, W5
	0x035475B0 MOV X21, X4
	0x035475B4 MOV X20, X3
	0x035475B8 MOV X23, X2
	0x035475BC MOV X22, X1
	0x035475C0 MOV X19, X0
	0x035475C4 TBNZ X8, 0x0, 0x3547654
	0x035475C8 ADRP X0, 0xBAD000
	0x035475CC LDR X0, [X0 + 0x9D8]
	0x035475D0 BL 0x1C16CF4
	0x035475D4 ADRP X0, 0xBB5000
	0x035475D8 LDR X0, [X0 + 0x540]
	0x035475DC BL 0x1C16CF4
	0x035475E0 ADRP X0, 0xBB5000
	0x035475E4 LDR X0, [X0 + 0x618]
	0x035475E8 BL 0x1C16CF4
	0x035475EC ADRP X0, 0xBB5000
	0x035475F0 LDR X0, [X0 + 0x2B8]
	0x035475F4 BL 0x1C16CF4
	0x035475F8 ADRP X0, 0xBED000
	0x035475FC LDR X0, [X0 + 0xFB0]
	0x03547600 BL 0x1C16CF4
	0x03547604 ADRP X0, 0xBB4000
	0x03547608 LDR X0, [X0 + 0xBC8]
	0x0354760C BL 0x1C16CF4
	0x03547610 ADRP X0, 0xBB5000
	0x03547614 LDR X0, [X0 + 0x548]
	0x03547618 BL 0x1C16CF4
	0x0354761C ADRP X0, 0xBAC000
	0x03547620 LDR X0, [X0 + 0xAC8]
	0x03547624 BL 0x1C16CF4
	0x03547628 ADRP X0, 0xBB5000
	0x0354762C LDR X0, [X0 + 0x6A8]
	0x03547630 BL 0x1C16CF4
	0x03547634 ADRP X0, 0xBB5000
	0x03547638 LDR X0, [X0 + 0x6B0]
	0x0354763C BL 0x1C16CF4
	0x03547640 ADRP X0, 0xBB5000
	0x03547644 LDR X0, [X0 + 0x6B8]
	0x03547648 BL 0x1C16CF4
	0x0354764C MOVZ W8, 0x1
	0x03547650 STRB W8, [X26 + 0xC52]
	0x03547654 STR X31, [X31 + 0x28]
	0x03547658 LDRB W8, [X19 + 0x40]
	0x0354765C CMP W8, 0x3
	0x03547660 B.CC 0x35477B4
	0x03547664 ADRP X8, 0xBAC000
	0x03547668 LDR X8, [X8 + 0xAC8]
	0x0354766C LDR X26, [X19 + 0x48]
	0x03547670 MOVZ W1, 0x6
	0x03547674 LDR X0, [X8]
	0x03547678 BL 0x1C16D6C
	0x0354767C CBZ X0, 0x3547A10
	0x03547680 LDR X8, [X0 + 0x18]
	0x03547684 MOV X27, X0
	0x03547688 CBZ W8, 0x3547A0C
	0x0354768C ADRP X9, 0xBB5000
	0x03547690 LDR X9, [X9 + 0x6B8]
	0x03547694 LDR X9, [X9]
	0x03547698 STR X9, [X27 + 0x20]
	0x0354769C CBZ X20, 0x35476B8
	0x035476A0 LDR X8, [X20]
	0x035476A4 MOV X0, X20
	0x035476A8 LDP X9, X1, [X8 + 0x168]
	0x035476AC BLR X9
	0x035476B0 LDR X8, [X27 + 0x18]
	0x035476B4 B 0x35476BC
	0x035476B8 MOV X0, X31
	0x035476BC CMP W8, 0x1
	0x035476C0 B.LS 0x3547A0C
	0x035476C4 CMP W8, 0x2
	0x035476C8 STR X0, [X27 + 0x28]
	0x035476CC B.EQ 0x3547A0C
	0x035476D0 ADRP X9, 0xBB5000
	0x035476D4 LDR X9, [X9 + 0x6B0]
	0x035476D8 CMP W8, 0x3
	0x035476DC LDR X9, [X9]
	0x035476E0 STR X9, [X27 + 0x30]
	0x035476E4 B.LS 0x3547A0C
	0x035476E8 CMP W8, 0x4
	0x035476EC STR X21, [X27 + 0x38]
	0x035476F0 B.EQ 0x3547A0C
	0x035476F4 ADRP X8, 0xBB5000
	0x035476F8 LDR X8, [X8 + 0x6A8]
	0x035476FC ADRP X9, 0xBED000
	0x03547700 ADD X0, X31, 0x10
	0x03547704 MOV X1, X31
	0x03547708 LDR X8, [X8]
	0x0354770C LDR X9, [X9 + 0xFB0]
	0x03547710 STR X8, [X27 + 0x40]
	0x03547714 LDR X8, [X9]
	0x03547718 MOVN X9, 0x0
	0x0354771C STR W24, [X31 + 0x20]
	0x03547720 STP X8, X9, [X31 + 0x10]
	0x03547724 BL 0x33B162C
	0x03547728 LDR W8, [X27 + 0x18]
	0x0354772C CMP W8, 0x5
	0x03547730 B.LS 0x3547A0C
	0x03547734 STR X0, [X27 + 0x48]
	0x03547738 MOV X0, X27
	0x0354773C MOV X1, X31
	0x03547740 BL 0x32278CC
	0x03547744 CBZ X26, 0x3547A10
	0x03547748 ADRP X10, 0xBB4000
	0x0354774C LDR X8, [X26]
	0x03547750 LDR X10, [X10 + 0xBC8]
	0x03547754 MOV X27, X0
	0x03547758 LDRH W9, [X8 + 0x12E]
	0x0354775C LDR X1, [X10]
	0x03547760 CBZ X9, 0x3547784
	0x03547764 LDR X10, [X8 + 0xB0]
	0x03547768 ADD X10, X10, 0x8
	0x0354776C LDUR X11, [X10 - 0x8]
	0x03547770 CMP X11, X1
	0x03547774 B.EQ 0x3547794
	0x03547778 SUBS X9, X9, 0x1
	0x0354777C ADD X10, X10, 0x10
	0x03547780 B.NE 0x354776C
	0x03547784 MOV X0, X26
	0x03547788 MOV W2, W31
	0x0354778C BL 0x1C5C788
	0x03547790 B 0x35477A0
	0x03547794 LDRSW X9, [X10]
	0x03547798 ADD X8, X8, X9, 0x4, LSL
	0x0354779C ADD X0, X8, 0x138
	0x035477A0 LDP X8, X3, [X0]
	0x035477A4 MOVZ W1, 0x3
	0x035477A8 MOV X0, X26
	0x035477AC MOV X2, X27
	0x035477B0 BLR X8
	0x035477B4 ADRP X8, 0xBB5000
	0x035477B8 LDR X8, [X8 + 0x2B8]
	0x035477BC ADRP X26, 0xBB5000
	0x035477C0 ADRP X28, 0xBB5000
	0x035477C4 ADRP X27, 0xBB5000
	0x035477C8 LDR X0, [X8]
	0x035477CC LDR X26, [X26 + 0x540]
	0x035477D0 LDR X28, [X28 + 0x618]
	0x035477D4 LDR X27, [X27 + 0x548]
	0x035477D8 BL 0x1C16F10
	0x035477DC LDR X1, [X26]
	0x035477E0 MOV X26, X0
	0x035477E4 BL 0x29D2C7C
	0x035477E8 CBZ X20, 0x3547844
	0x035477EC LDR X2, [X20 + 0x28]
	0x035477F0 CBZ X2, 0x3547844
	0x035477F4 CBZ X26, 0x3547A10
	0x035477F8 LDR X3, [X28]
	0x035477FC MOVZ W1, 0xDD
	0x03547800 MOV X0, X26
	0x03547804 BL 0x29D3520
	0x03547808 LDR X0, [X27]
	0x0354780C LDR W8, [X0 + 0xE0]
	0x03547810 CBNZ W8, 0x354781C
	0x03547814 BL 0x1C16DFC
	0x03547818 LDR X0, [X27]
	0x0354781C LDR X8, [X0 + 0xB8]
	0x03547820 LDR X9, [X19]
	0x03547824 MOVZ W1, 0xE7
	0x03547828 MOV X0, X19
	0x0354782C LDR X3, [X8]
	0x03547830 LDR X8, [X9 + 0x228]
	0x03547834 LDR X4, [X9 + 0x230]
	0x03547838 MOV X2, X26
	0x0354783C BLR X8
	0x03547840 B 0x35479E8
	0x03547844 CMP W24, 0xD
	0x03547848 B.NE 0x3547854
	0x0354784C ANDS W31, W25, 0xFF
	0x03547850 B.NE 0x3547A14
	0x03547854 ADRP X29, 0xBAD000
	0x03547858 LDR X29, [X29 + 0x9D8]
	0x0354785C ADD X1, X31, 0x10
	0x03547860 STRB W25, [X31 + 0x10]
	0x03547864 LDR X0, [X29]
	0x03547868 BL 0x1C16E04
	0x0354786C CBZ X26, 0x3547A10
	0x03547870 LDR X3, [X28]
	0x03547874 MOV X2, X0
	0x03547878 MOVZ W1, 0xC3
	0x0354787C MOV X0, X26
	0x03547880 BL 0x29D3520
	0x03547884 LDR X0, [X29]
	0x03547888 ADD X1, X31, 0xC
	0x0354788C STRB W24, [X31 + 0xC]
	0x03547890 BL 0x1C16E04
	0x03547894 LDR X3, [X28]
	0x03547898 MOV X2, X0
	0x0354789C MOVZ W1, 0xC1
	0x035478A0 MOV X0, X26
	0x035478A4 BL 0x29D3520
	0x035478A8 LDR X3, [X28]
	0x035478AC MOVZ W1, 0xDC
	0x035478B0 MOV X0, X26
	0x035478B4 MOV X2, X23
	0x035478B8 BL 0x29D3520
	0x035478BC LDR X3, [X28]
	0x035478C0 MOVZ W1, 0xE0
	0x035478C4 MOV X0, X26
	0x035478C8 MOV X2, X22
	0x035478CC BL 0x29D3520
	0x035478D0 MOV X0, X21
	0x035478D4 MOV X1, X31
	0x035478D8 BL 0x32277A8
	0x035478DC TBNZ X0, 0x0, 0x35478F4
	0x035478E0 LDR X3, [X28]
	0x035478E4 MOVZ W1, 0xD2
	0x035478E8 MOV X0, X26
	0x035478EC MOV X2, X21
	0x035478F0 BL 0x29D3520
	0x035478F4 CBZ X20, 0x354799C
	0x035478F8 LDR X0, [X20 + 0x30]
	0x035478FC MOV X1, X31
	0x03547900 BL 0x32277A8
	0x03547904 TBNZ X0, 0x0, 0x354791C
	0x03547908 LDR X2, [X20 + 0x30]
	0x0354790C LDR X3, [X28]
	0x03547910 MOVZ W1, 0xE1
	0x03547914 MOV X0, X26
	0x03547918 BL 0x29D3520
	0x0354791C LDRB W8, [X20 + 0x10]
	0x03547920 CMP W8, 0xFF
	0x03547924 B.EQ 0x354799C
	0x03547928 LDR X0, [X29]
	0x0354792C ADD X1, X31, 0x10
	0x03547930 STRB W8, [X31 + 0x10]
	0x03547934 BL 0x1C16E04
	0x03547938 LDR X3, [X28]
	0x0354793C MOV X2, X0
	0x03547940 MOVZ W1, 0xD9
	0x03547944 MOV X0, X26
	0x03547948 BL 0x29D3520
	0x0354794C LDR X2, [X20 + 0x28]
	0x03547950 CBZ X2, 0x3547960
	0x03547954 LDR X3, [X28]
	0x03547958 MOVZ W1, 0xDD
	0x0354795C B 0x3547994
	0x03547960 LDR X0, [X20 + 0x18]
	0x03547964 MOV X1, X31
	0x03547968 BL 0x32277A8
	0x0354796C TBNZ X0, 0x0, 0x3547984
	0x03547970 LDR X2, [X20 + 0x18]
	0x03547974 LDR X3, [X28]
	0x03547978 MOVZ W1, 0xD8
	0x0354797C MOV X0, X26
	0x03547980 BL 0x29D3520
	0x03547984 LDR X2, [X20 + 0x20]
	0x03547988 CBZ X2, 0x354799C
	0x0354798C LDR X3, [X28]
	0x03547990 MOVZ W1, 0xD6
	0x03547994 MOV X0, X26
	0x03547998 BL 0x29D3520
	0x0354799C LDR X0, [X27]
	0x035479A0 STR X31, [X31 + 0x28]
	0x035479A4 LDR W8, [X0 + 0xE0]
	0x035479A8 CBNZ W8, 0x35479B0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X22, 0xE99000
	011 Move W8, [X22+3144]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0xBAD000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0xBAE000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB6000
	026 Move X0, [X0+1344]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB5000
	029 Move X0, [X0+3424]
	030 Call 0x1C17CF4
	031 Move X0, 0xBB6000
	032 Move X0, [X0+1560]
	033 Call 0x1C17CF4
	034 Move X0, 0xBB6000
	035 Move X0, [X0+696]
	036 Call 0x1C17CF4
	037 Move X0, 0xBEE000
	038 Move X0, [X0+2984]
	039 Call 0x1C17CF4
	040 Move X0, 0xBB5000
	041 Move X0, [X0+3488]
	042 Call 0x1C17CF4
	043 Move X0, 0xBB5000
	044 Move X0, [X0+3016]
	045 Call 0x1C17CF4
	046 Move X0, 0xBAD000
	047 Move X0, [X0+1880]
	048 Call 0x1C17CF4
	049 Move X0, 0xBB6000
	050 Move X0, [X0+1352]
	051 Call 0x1C17CF4
	052 Move X0, 0xBB6000
	053 Move X0, [X0+1608]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+3144], W8
	057 Move W8, [X19+64]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X22, [X19+72]
	060 Compare X22, 0
	061 JumpIfEqual {314}
	062 Move X9, 0xBB5000
	063 Move X8, [X22]
	064 Move X9, [X9+3016]
	065 Move X10, 0xBB6000
	066 Move X1, [X9]
	067 Move X10, [X10+1608]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move X23, [X10]
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X22
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X3, [X0+8]
	086 Move W1, 3
	087 Move X0, X22
	088 Move X2, X23
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X8, 0xBB5000
	091 Move X8, [X8+3488]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X1, X31
	095 Move X23, X0
	096 Call Hashtable..ctor, X0
	097 Compare X21, 0
	098 JumpIfEqual {314}
	099 Move X8, 0xBEE000
	100 Move X8, [X8+2984]
	101 Move X22, [X21+16]
	102 Move X0, [X8]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X24, 0xBAE000
	108 Move X24, [X24+2520]
	109 Move X0, X23
	110 Move X1, X22
	111 Call Extensions.MergeStringKeys, X0, X1
	112 Move W8, [X21+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, [X24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W9, 256
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 Add X1, X31, 28
	119 Move [X31+28], W8
	120 Call 0x1C17E04
	121 Compare X23, 0
	122 JumpIfEqual {314}
	123 Move X2, X0
	124 Move W1, 255
	125 Move X0, X23
	126 Move X3, X31
	127 Call Hashtable.set_Item, X0, X1, X2
	128 Move W8, [X21+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X9, 0xBAD000
	131 Move X9, [X9+1880]
	132 Add X1, X31, 24
	133 Move [X31+24], W8
	134 Move X0, [X9]
	135 Call 0x1C17E04
	136 Move X2, X0
	137 Move W1, 243
	138 Move X0, X23
	139 Move X3, X31
	140 Call Hashtable.set_Item, X0, X1, X2
	141 Move X8, 0xBB6000
	142 Move X8, [X8+696]
	143 Move X22, 0xBB6000
	144 Move X0, [X8]
	145 Move X22, [X22+1344]
	146 Call 0x1C17F10
	147 Move X1, [X22]
	148 Move X22, X0
	149 Call Dictionary`2<Byte, Object>..ctor, X0
	150 Compare X23, 0
	151 JumpIfEqual {314}
	152 Move X8, 0xBB5000
	153 Move X8, [X8+3424]
	154 Move X25, 0xBB6000
	155 Move X0, X23
	156 Move X1, [X8]
	157 Move X25, [X25+1560]
	158 Call Dictionary`2<Object, Object>.get_Count, X0
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Compare X22, 0
	161 JumpIfEqual {314}
	162 Move X3, [X25]
	163 Move W1, 248
	164 Move X0, X22
	165 Move X2, X23
	166 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	167 Move W8, [X21+28]
	168 Compare W8, 0
	169 JumpIfEqual {181}
	170 Move X0, [X24]
	171 Add X1, X31, 20
	172 Move [X31+20], W8
	173 Call 0x1C17E04
	174 Compare X22, 0
	175 JumpIfEqual {314}
	176 Move X3, [X25]
	177 Move X2, X0
	178 Move W1, 223
	179 Move X0, X22
	180 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	181 Move X8, [X21+32]
	182 Compare X8, 0
	183 JumpIfEqual {214}
	184 Move X0, [X8+16]
	185 Move X1, X31
	186 Call String.IsNullOrEmpty, X0
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {214}
	191 Move X8, [X21+32]
	192 Compare X8, 0
	193 JumpIfEqual {314}
	194 Compare X22, 0
	195 JumpIfEqual {314}
	196 Move X2, [X8+16]
	197 Move X3, [X25]
	198 Move W1, 213
	199 Move X0, X22
	200 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	201 Move X8, [X21+32]
	202 Compare X8, 0
	203 JumpIfEqual {314}
	204 Move W8, [X8+24]
	205 Move X0, [X24]
	206 Add X1, X31, 16
	207 Move [X31+16], W8
	208 Call 0x1C17E04
	209 Move X3, [X25]
	210 Move X2, X0
	211 Move W1, 212
	212 Move X0, X22
	213 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	214 Move X0, [X21+40]
	215 Move X1, X31
	216 Call String.IsNullOrEmpty, X0
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfEqual {228}
	221 Compare X22, 0
	222 JumpIfEqual {314}
	223 Move X2, [X21+40]
	224 Move X3, [X25]
	225 Move W1, 245
	226 Move X0, X22
	227 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	228 Move X2, [X21+48]
	229 Compare X2, 0
	230 JumpIfEqual {240}
	231 Move X8, [X2+24]
	232 Compare X8, 0
	233 JumpIfEqual {240}
	234 Compare X22, 0
	235 JumpIfEqual {314}
	236 Move X3, [X25]
	237 Move W1, 238
	238 Move X0, X22
	239 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	240 Move X2, [X21+56]
	241 Compare X2, 0
	242 JumpIfEqual {249}
	243 Compare X22, 0
	244 JumpIfEqual {314}
	245 Move X3, [X25]
	246 Move W1, 190
	247 Move X0, X22
	248 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	249 Move X0, [X24]
	250 Move W23, 1
	251 Add X1, X31, 12
	252 Move [X31+12], W23
	253 Call 0x1C17E04
	254 Compare X22, 0
	255 JumpIfEqual {314}
	256 Move X3, [X25]
	257 Move X24, 0xBAD000
	258 Move X21, 0xBB6000
	259 Move X24, [X24+2904]
	260 Move X21, [X21+1352]
	261 Move X2, X0
	262 Move W1, 215
	263 Move X0, X22
	264 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	265 Move X0, [X24]
	266 Add X1, X31, 8
	267 Move [X31+8], W23
	268 Call 0x1C17E04
	269 Move X3, [X25]
	270 Move X2, X0
	271 Move W1, 188
	272 Move X0, X22
	273 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	274 Compare X20, 0
	275 JumpIfEqual {288}
	276 Move X0, [X20+16]
	277 Move X1, X31
	278 Call String.IsNullOrEmpty, X0
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfEqual {288}
	283 Move X2, [X20+16]
	284 Move X3, [X25]
	285 Move W1, 255
	286 Move X0, X22
	287 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	288 Move X0, [X21]
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {294}
	292 Call 0x1C17DFC
	293 Move X0, [X21]
	294 Move X8, [X0+184]
	295 Move X9, [X19]
	296 Move W1, 225
	297 Move X0, X19
	298 Move X3, [X8]
	299 Move X8, [X9+552]
	300 Move X4, [X9+560]
	301 Move X2, X22
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Move X20, [X31+80]
	304 Move X19, [X31+88]
	305 Move X22, [X31+64]
	306 Move X21, [X31+72]
	307 Move X24, [X31+48]
	308 Move X23, [X31+56]
	309 Move X30, [X31+32]
	310 Move X25, [X31+40]
	311 And W0, W0, 1
	312 Add X31, X31, 96
	313 Return X0
	314 Call 0x1C17F20

Method: System.Boolean OpLeaveRoom(System.Boolean becomeInactive, System.Boolean sendAuthCookie = False)

Disassembly:
	0x035479AC BL 0x1C16DFC
	0x035479B0 ADD X0, X31, 0x28
	0x035479B4 MOVZ W1, 0x1
	0x035479B8 MOV X2, X31
	0x035479BC MOVZ W20, 0x1
	0x035479C0 BL 0x35160A8
	0x035479C4 STRB W20, [X31 + 0x2C]
	0x035479C8 LDR X8, [X19]
	0x035479CC LDR X3, [X31 + 0x28]
	0x035479D0 MOVZ W1, 0xE7
	0x035479D4 MOV X0, X19
	0x035479D8 LDR X9, [X8 + 0x228]
	0x035479DC LDR X4, [X8 + 0x230]
	0x035479E0 MOV X2, X26
	0x035479E4 BLR X9
	0x035479E8 LDP X20, X19, [X31 + 0x80]
	0x035479EC LDP X22, X21, [X31 + 0x70]
	0x035479F0 LDP X24, X23, [X31 + 0x60]
	0x035479F4 LDP X26, X25, [X31 + 0x50]
	0x035479F8 LDP X28, X27, [X31 + 0x40]
	0x035479FC LDP X29, X30, [X31 + 0x30]
	0x03547A00 AND W0, W0, 0x1
	0x03547A04 ADD X31, X31, 0x90
	0x03547A08 RET
	0x03547A0C BL 0x1C16F28
	0x03547A10 BL 0x1C16F20
	0x03547A14 ADRP X0, 0xBAC000
	0x03547A18 LDR X0, [X0 + 0xB40]
	0x03547A1C BL 0x1C16D08
	0x03547A20 BL 0x1C16F10
	0x03547A24 MOV X19, X0
	0x03547A28 ADRP X0, 0xBB5000
	0x03547A2C LDR X0, [X0 + 0x6C0]
	0x03547A30 BL 0x1C16D08
	0x03547A34 MOV X1, X0
	0x03547A38 MOV X0, X19
	0x03547A3C MOV X2, X31
	0x03547A40 BL 0x3379A44
	0x03547A44 ADRP X0, 0xBED000
	0x03547A48 LDR X0, [X0 + 0xFB8]
	0x03547A4C BL 0x1C16D08
	0x03547A50 MOV X1, X0
	0x03547A54 MOV X0, X19
	0x03547A58 BL 0x1C16DEC
	0x03547A5C STP X30, X23, [X31 - 0x30]!
	0x03547A60 STP X22, X21, [X31 + 0x10]
	0x03547A64 STP X20, X19, [X31 + 0x20]
	0x03547A68 ADRP X22, 0xE98000
	0x03547A6C LDRB W8, [X22 + 0xC53]
	0x03547A70 MOV X20, X2
	0x03547A74 MOV X21, X1
	0x03547A78 MOV X19, X0
	0x03547A7C TBNZ X8, 0x0, 0x3547AD0
	0x03547A80 ADRP X0, 0xBB5000
	0x03547A84 LDR X0, [X0 + 0x540]
	0x03547A88 BL 0x1C16CF4
	0x03547A8C ADRP X0, 0xBB5000
	0x03547A90 LDR X0, [X0 + 0x618]
	0x03547A94 BL 0x1C16CF4
	0x03547A98 ADRP X0, 0xBB5000
	0x03547A9C LDR X0, [X0 + 0x2B8]
	0x03547AA0 BL 0x1C16CF4
	0x03547AA4 ADRP X0, 0xBB4000
	0x03547AA8 LDR X0, [X0 + 0xBC8]
	0x03547AAC BL 0x1C16CF4
	0x03547AB0 ADRP X0, 0xBB5000
	0x03547AB4 LDR X0, [X0 + 0x548]
	0x03547AB8 BL 0x1C16CF4
	0x03547ABC ADRP X0, 0xBB5000
	0x03547AC0 LDR X0, [X0 + 0x6D0]
	0x03547AC4 BL 0x1C16CF4
	0x03547AC8 MOVZ W8, 0x1
	0x03547ACC STRB W8, [X22 + 0xC53]
	0x03547AD0 LDRB W8, [X19 + 0x40]
	0x03547AD4 CMP W8, 0x5
	0x03547AD8 B.CC 0x3547B58
	0x03547ADC LDR X22, [X19 + 0x48]
	0x03547AE0 CBZ X22, 0x3547C08
	0x03547AE4 ADRP X9, 0xBB4000
	0x03547AE8 LDR X8, [X22]
	0x03547AEC LDR X9, [X9 + 0xBC8]
	0x03547AF0 ADRP X10, 0xBB5000
	0x03547AF4 LDR X1, [X9]
	0x03547AF8 LDR X10, [X10 + 0x6D0]
	0x03547AFC LDRH W9, [X8 + 0x12E]
	0x03547B00 LDR X23, [X10]
	0x03547B04 CBZ X9, 0x3547B28
	0x03547B08 LDR X10, [X8 + 0xB0]
	0x03547B0C ADD X10, X10, 0x8
	0x03547B10 LDUR X11, [X10 - 0x8]
	0x03547B14 CMP X11, X1
	0x03547B18 B.EQ 0x3547B38
	0x03547B1C SUBS X9, X9, 0x1
	0x03547B20 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xE99000
	009 Move X24, 0xBB6000
	010 Move X20, 0xBB6000
	011 Move W8, [X23+3145]
	012 Move X24, [X24+696]
	013 Move X20, [X20+1344]
	014 Move W21, W2
	015 Move W22, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0xBAD000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xBAE000
	025 Move X0, [X0+2520]
	026 Call 0x1C17CF4
	027 Move X0, 0xBB6000
	028 Move X0, [X0+1344]
	029 Call 0x1C17CF4
	030 Move X0, 0xBB6000
	031 Move X0, [X0+1560]
	032 Call 0x1C17CF4
	033 Move X0, 0xBB6000
	034 Move X0, [X0+696]
	035 Call 0x1C17CF4
	036 Move X0, 0xBB6000
	037 Move X0, [X0+1352]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3145], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X20]
	044 Move X20, X0
	045 Call Dictionary`2<Byte, Object>..ctor, X0
	046 Move TEMP, X22
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {66}
	050 Move X8, 0xBAD000
	051 Move X8, [X8+2904]
	052 Add X1, X31, 12
	053 Move X0, [X8]
	054 Move W8, 1
	055 Move [X31+12], W8
	056 Call 0x1C17E04
	057 Compare X20, 0
	058 JumpIfEqual {112}
	059 Move X8, 0xBB6000
	060 Move X8, [X8+1560]
	061 Move X2, X0
	062 Move W1, 233
	063 Move X0, X20
	064 Move X3, [X8]
	065 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	066 Move TEMP, X21
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {86}
	070 Move X8, 0xBAE000
	071 Move X8, [X8+2520]
	072 Add X1, X31, 8
	073 Move X0, [X8]
	074 Move W8, 2
	075 Move [X31+8], W8
	076 Call 0x1C17E04
	077 Compare X20, 0
	078 JumpIfEqual {112}
	079 Move X8, 0xBB6000
	080 Move X8, [X8+1560]
	081 Move X2, X0
	082 Move W1, 234
	083 Move X0, X20
	084 Move X3, [X8]
	085 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	086 Move X21, 0xBB6000
	087 Move X21, [X21+1352]
	088 Move X0, [X21]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X21]
	094 Move X8, [X0+184]
	095 Move X9, [X19]
	096 Move W1, 254
	097 Move X0, X19
	098 Move X3, [X8]
	099 Move X8, [X9+552]
	100 Move X4, [X9+560]
	101 Move X2, X20
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 And W0, W0, 1
	110 Move X30, [X31+64]
	111 Return X0
	112 Call 0x1C17F20

Method: System.Boolean OpGetGameList(Photon.Realtime.TypedLobby lobby, System.String queryData)

Disassembly:
	0x03547B24 B.NE 0x3547B10
	0x03547B28 MOV X0, X22
	0x03547B2C MOV W2, W31
	0x03547B30 BL 0x1C5C788
	0x03547B34 B 0x3547B44
	0x03547B38 LDRSW X9, [X10]
	0x03547B3C ADD X8, X8, X9, 0x4, LSL
	0x03547B40 ADD X0, X8, 0x138
	0x03547B44 LDP X8, X3, [X0]
	0x03547B48 MOVZ W1, 0x5
	0x03547B4C MOV X0, X22
	0x03547B50 MOV X2, X23
	0x03547B54 BLR X8
	0x03547B58 ADRP X8, 0xBB5000
	0x03547B5C LDR X8, [X8 + 0x2B8]
	0x03547B60 ADRP X22, 0xBB5000
	0x03547B64 ADRP X23, 0xBB5000
	0x03547B68 LDR X0, [X8]
	0x03547B6C LDR X22, [X22 + 0x540]
	0x03547B70 LDR X23, [X23 + 0x618]
	0x03547B74 BL 0x1C16F10
	0x03547B78 LDR X1, [X22]
	0x03547B7C MOV X22, X0
	0x03547B80 BL 0x29D2C7C
	0x03547B84 CBZ X21, 0x3547BA0
	0x03547B88 CBZ X22, 0x3547C08
	0x03547B8C LDR X3, [X23]
	0x03547B90 MOVZ W1, 0xEF
	0x03547B94 MOV X0, X22
	0x03547B98 MOV X2, X21
	0x03547B9C BL 0x29D3520
	0x03547BA0 CBZ X20, 0x3547BBC
	0x03547BA4 CBZ X22, 0x3547C08
	0x03547BA8 LDR X3, [X23]
	0x03547BAC MOVZ W1, 0xEE
	0x03547BB0 MOV X0, X22
	0x03547BB4 MOV X2, X20
	0x03547BB8 BL 0x29D3520
	0x03547BBC ADRP X20, 0xBB5000
	0x03547BC0 LDR X20, [X20 + 0x548]
	0x03547BC4 LDR X0, [X20]
	0x03547BC8 LDR W8, [X0 + 0xE0]
	0x03547BCC CBNZ W8, 0x3547BD8
	0x03547BD0 BL 0x1C16DFC
	0x03547BD4 LDR X0, [X20]
	0x03547BD8 LDR X8, [X0 + 0xB8]
	0x03547BDC LDR X9, [X19]
	0x03547BE0 MOV X0, X19
	0x03547BE4 MOV X2, X22
	0x03547BE8 LDR X3, [X8]
	0x03547BEC LDR X5, [X9 + 0x228]
	0x03547BF0 LDR X4, [X9 + 0x230]
	0x03547BF4 LDP X20, X19, [X31 + 0x20]
	0x03547BF8 LDP X22, X21, [X31 + 0x10]
	0x03547BFC MOVZ W1, 0xF8
	0x03547C00 LDP X30, X23, [X31], #0x30
	0x03547C04 BR X5
	0x03547C08 BL 0x1C16F20
	0x03547C0C STP X30, X25, [X31 - 0x40]!
	0x03547C10 STP X24, X23, [X31 + 0x10]
	0x03547C14 STP X22, X21, [X31 + 0x20]
	0x03547C18 STP X20, X19, [X31 + 0x30]
	0x03547C1C ADRP X20, 0xE98000
	0x03547C20 LDRB W8, [X20 + 0xC54]
	0x03547C24 MOV X21, X4
	0x03547C28 MOV X24, X3
	0x03547C2C MOV X22, X2
	0x03547C30 MOV W23, W1
	0x03547C34 MOV X19, X0
	0x03547C38 TBNZ X8, 0x0, 0x3547C5C
	0x03547C3C ADRP X0, 0xBB5000
	0x03547C40 LDR X0, [X0 + 0x6D8]
	0x03547C44 BL 0x1C16CF4
	0x03547C48 ADRP X0, 0xBB5000
	0x03547C4C LDR X0, [X0 + 0x6E0]
	0x03547C50 BL 0x1C16CF4
	0x03547C54 MOVZ W8, 0x1
	0x03547C58 STRB W8, [X20 + 0xC54]
	0x03547C5C LDR X0, [X19 + 0x110]
	0x03547C60 CBZ X0, 0x3547E48
	0x03547C64 ADRP X8, 0xBB5000
	0x03547C68 LDR X8, [X8 + 0x6D8]
	0x03547C6C ADRP X25, 0xBB5000
	0x03547C70 LDR X1, [X8]
	0x03547C74 LDR X25, [X25 + 0x6E0]
	0x03547C78 BL 0x24A6860
	0x03547C7C MOV X20, X0
	0x03547C80 CBZ X24, 0x3547DC0
	0x03547C84 LDRB W2, [X24 + 0x10]
	0x03547C88 CBZ W2, 0x3547CEC
	0x03547C8C CBZ X20, 0x3547E58
	0x03547C90 MOVZ W1, 0xF7
	0x03547C94 MOV X0, X20
	0x03547C98 MOV X3, X31
	0x03547C9C BL 0x34FBD80
	0x03547CA0 LDRB W8, [X24 + 0x10]
	0x03547CA4 SUB W8, W8, 0x6
	0x03547CA8 CMP W8, 0x7
	0x03547CAC B.HI 0x3547CEC
	0x03547CB0 ADRP X9, 0xFFFFFFFFFD5E6000
	0x03547CB4 ADD X9, X9, 0xB30
	0x03547CB8 ADR X10, 0x10
	0x03547CBC LDRB W11, [X9, X8, LSL]
	0x03547CC0 ADD X10, X10, X11, 0x2, LSL
	0x03547CC4 BR X10
	0x03547CC8 LDR X8, [X19]
	0x03547CCC LDR X9, [X8 + 0x238]
	0x03547CD0 LDR X4, [X8 + 0x240]
	0x03547CD4 MOVZ W1, 0xFD
	0x03547CD8 MOV X0, X19
	0x03547CDC MOV X2, X20
	0x03547CE0 MOV X3, X21
	0x03547CE4 BLR X9
	0x03547CE8 B 0x3547E10
	0x03547CEC LDR X2, [X24 + 0x18]
	0x03547CF0 CBZ X2, 0x3547D30
	0x03547CF4 CBZ X20, 0x3547E60
	0x03547CF8 MOVZ W1, 0xFC
	0x03547CFC MOV X0, X20
	0x03547D00 MOV X3, X31
	0x03547D04 BL 0x34FC3A4
	0x03547D08 B 0x3547D88
	0x03547D0C LDR X8, [X19]
	0x03547D10 LDR X9, [X8 + 0x238]
	0x03547D14 LDR X4, [X8 + 0x240]
	0x03547D18 MOVZ W1, 0xFD
	0x03547D1C MOV X0, X19
	0x03547D20 MOV X2, X20
	0x03547D24 MOV X3, X21
	0x03547D28 BLR X9
	0x03547D2C B 0x3547E10
	0x03547D30 LDRB W2, [X24 + 0x11]
	0x03547D34 CBZ W2, 0x3547D6C
	0x03547D38 CBZ X20, 0x3547E6C
	0x03547D3C MOVZ W1, 0xF0
	0x03547D40 MOV X0, X20
	0x03547D44 MOV X3, X31
	0x03547D48 BL 0x34FBD80
	0x03547D4C B 0x3547D88
	0x03547D50 LDR X2, [X24 + 0x18]
	0x03547D54 CBZ X2, 0x3547DC4
	0x03547D58 MOVZ W1, 0xFC
	0x03547D5C MOV X0, X20
	0x03547D60 MOV X3, X31
	0x03547D64 BL 0x34FC3A4
	0x03547D68 B 0x3547DC4
	0x03547D6C LDRB W2, [X24 + 0x20]
	0x03547D70 CBZ W2, 0x3547D88
	0x03547D74 CBZ X20, 0x3547E70
	0x03547D78 MOVZ W1, 0xF6
	0x03547D7C MOV X0, X20
	0x03547D80 MOV X3, X31
	0x03547D84 BL 0x34FBD80
	0x03547D88 LDR X0, [X24 + 0x28]
	0x03547D8C CBZ X0, 0x3547E5C
	0x03547D90 MOV X1, X31
	0x03547D94 BL 0x35512C0
	0x03547D98 TBZ X0, 0x0, 0x3547DC0
	0x03547D9C LDR X8, [X24 + 0x28]
	0x03547DA0 CBZ X8, 0x3547E64
	0x03547DA4 CBZ X20, 0x3547E68
	0x03547DA8 LDRB W2, [X8 + 0x10]
	0x03547DAC MOVZ W1, 0xEA
	0x03547DB0 MOV X0, X20
	0x03547DB4 MOV X3, X31
	0x03547DB8 BL 0x34FBD80
	0x03547DBC B 0x3547DC4
	0x03547DC0 CBZ X20, 0x3547E54
	0x03547DC4 MOVZ W1, 0xF4
	0x03547DC8 MOV X0, X20
	0x03547DCC MOV W2, W23
	0x03547DD0 MOV X3, X31
	0x03547DD4 BL 0x34FBD80
	0x03547DD8 CBZ X22, 0x3547DF0
	0x03547DDC MOVZ W1, 0xF5
	0x03547DE0 MOV X0, X20
	0x03547DE4 MOV X2, X22
	0x03547DE8 MOV X3, X31
	0x03547DEC BL 0x34FC3A4
	0x03547DF0 LDR X8, [X19]
	0x03547DF4 LDR X9, [X8 + 0x238]
	0x03547DF8 LDR X4, [X8 + 0x240]
	0x03547DFC MOVZ W1, 0xFD
	0x03547E00 MOV X0, X19
	0x03547E04 MOV X2, X20
	0x03547E08 MOV X3, X21
	0x03547E0C BLR X9
	0x03547E10 MOV W21, W0
	0x03547E14 MOV X22, X31
	0x03547E18 LDR X0, [X19 + 0x110]
	0x03547E1C CBZ X0, 0x3547E48
	0x03547E20 LDR X2, [X25]
	0x03547E24 MOV X1, X20
	0x03547E28 BL 0x24A65D0
	0x03547E2C CBNZ X22, 0x3547E4C
	0x03547E30 AND W0, W21, 0x1
	0x03547E34 LDP X20, X19, [X31 + 0x30]
	0x03547E38 LDP X22, X21, [X31 + 0x20]
	0x03547E3C LDP X24, X23, [X31 + 0x10]
	0x03547E40 LDP X30, X25, [X31], #0x40
	0x03547E44 RET
	0x03547E48 BL 0x1C16F20
	0x03547E4C MOV X0, X22
	0x03547E50 BL 0x1C16F18
	0x03547E54 BL 0x1C16F20
	0x03547E58 BL 0x1C16F20
	0x03547E5C BL 0x1C16F20
	0x03547E60 BL 0x1C16F20
	0x03547E64 BL 0x1C16F20
	0x03547E68 BL 0x1C16F20
	0x03547E6C BL 0x1C16F20
	0x03547E70 BL 0x1C16F20
	0x03547E74 B 0x3547EA8
	0x03547E78 B 0x3547EA8
	0x03547E7C B 0x3547EA8
	0x03547E80 B 0x3547EA8
	0x03547E84 B 0x3547EA8
	0x03547E88 B 0x3547EA8
	0x03547E8C B 0x3547EA8
	0x03547E90 B 0x3547EA8
	0x03547E94 B 0x3547EA8
	0x03547E98 B 0x3547EA8
	0x03547E9C B 0x3547EA8
	0x03547EA0 B 0x3547EA8
	0x03547EA4 B 0x3547EA8
	0x03547EA8 MOV X21, X0
	0x03547EAC CMP W1, 0x1
	0x03547EB0 B.NE 0x3547ECC
	0x03547EB4 MOV X0, X21
	0x03547EB8 BL 0x3EB1AD0
	0x03547EBC LDR X22, [X0]
	0x03547EC0 BL 0x3EB1AE0
	0x03547EC4 MOV W21, W31
	0x03547EC8 B 0x3547E18
	0x03547ECC MOV X22, X31
	0x03547ED0 B 0x3547ED8
	0x03547ED4 MOV X21, X0
	0x03547ED8 LDR X0, [X19 + 0x110]
	0x03547EDC CBNZ X0, 0x3547EE4
	0x03547EE0 BL 0x1C16F20
	0x03547EE4 LDR X2, [X25]
	0x03547EE8 MOV X1, X20
	0x03547EEC BL 0x24A65D0
	0x03547EF0 CBNZ X22, 0x3547EFC
	0x03547EF4 MOV X0, X21
	0x03547EF8 BL 0x1D2C690
	0x03547EFC MOV X0, X22
	0x03547F00 BL 0x1C16F18
	0x03547F04 BL 0x1990590
	0x03547F08 STR X30, [X31 - 0x30]!
	0x03547F0C STP X22, X21, [X31 + 0x10]
	0x03547F10 STP X20, X19, [X31 + 0x20]
	0x03547F14 ADRP X21, 0xE98000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xE99000
	009 Move W8, [X22+3146]
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0xBAE000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB6000
	021 Move X0, [X0+1344]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB6000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB6000
	027 Move X0, [X0+696]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB5000
	030 Move X0, [X0+3016]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB6000
	033 Move X0, [X0+1352]
	034 Call 0x1C17CF4
	035 Move X0, 0xBB6000
	036 Move X0, [X0+1616]
	037 Call 0x1C17CF4
	038 Move X0, 0xBB6000
	039 Move X0, [X0+1624]
	040 Call 0x1C17CF4
	041 Move X0, 0xBB6000
	042 Move X0, [X0+1632]
	043 Call 0x1C17CF4
	044 Move X0, 0xBB6000
	045 Move X0, [X0+1640]
	046 Call 0x1C17CF4
	047 Move X0, 0xBB6000
	048 Move X0, [X0+1648]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+3146], W8
	052 Move W8, [X19+64]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X22, [X19+72]
	055 Compare X22, 0
	056 JumpIfEqual {261}
	057 Move X9, 0xBB5000
	058 Move X8, [X22]
	059 Move X9, [X9+3016]
	060 Move X10, 0xBB6000
	061 Move X1, [X9]
	062 Move X10, [X10+1616]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X23, [X10]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X22
	074 Move W2, W31
	075 Call 0x1C5D788
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Add X8, X8, X9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X3, [X0+8]
	081 Move W1, 3
	082 Move X0, X22
	083 Move X2, X23
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X21, 0
	086 JumpIfEqual {117}
	087 Move W8, [X21+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X21+16]
	090 Move X1, X31
	091 Call String.IsNullOrEmpty, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {159}
	096 Move W8, [X19+64]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X19, [X19+72]
	099 Compare X19, 0
	100 JumpIfEqual {261}
	101 Move X9, 0xBB5000
	102 Move X8, [X19]
	103 Move X9, [X9+3016]
	104 Move X10, 0xBB6000
	105 Move X1, [X9]
	106 Move X10, [X10+1648]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X20, [X10]
	109 Compare X9, 0
	110 JumpIfEqual {187}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move W8, [X19+64]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X19, [X19+72]
	120 Compare X19, 0
	121 JumpIfEqual {261}
	122 Move X9, 0xBB5000
	123 Move X8, [X19]
	124 Move X9, [X9+3016]
	125 Move X10, 0xBB6000
	126 Move X1, [X9]
	127 Move X10, [X10+1624]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X20, [X10]
	130 Compare X9, 0
	131 JumpIfEqual {187}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W8, [X19+64]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X19, [X19+72]
	141 Compare X19, 0
	142 JumpIfEqual {261}
	143 Move X9, 0xBB5000
	144 Move X8, [X19]
	145 Move X9, [X9+3016]
	146 Move X10, 0xBB6000
	147 Move X1, [X9]
	148 Move X10, [X10+1640]
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Move X20, [X10]
	151 Compare X9, 0
	152 JumpIfEqual {187}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move X0, X20
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {209}
	166 Move W8, [X19+64]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X19, [X19+72]
	169 Compare X19, 0
	170 JumpIfEqual {261}
	171 Move X9, 0xBB5000
	172 Move X8, [X19]
	173 Move X9, [X9+3016]
	174 Move X10, 0xBB6000
	175 Move X1, [X9]
	176 Move X10, [X10+1632]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Move X20, [X10]
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X19
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X3, [X0+8]
	195 Move W1, 3
	196 Move X0, X19
	197 Move X2, X20
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move W0, W31
	200 Move X20, [X31+48]
	201 Move X19, [X31+56]
	202 Move X22, [X31+32]
	203 Move X21, [X31+40]
	204 Move X30, [X31+16]
	205 Move X23, [X31+24]
	206 And W0, W0, 1
	207 Add X31, X31, 64
	208 Return X0
	209 Move X8, 0xBB6000
	210 Move X8, [X8+696]
	211 Move X0, [X8]
	212 Call 0x1C17F10
	213 Move X8, 0xBB6000
	214 Move X8, [X8+1344]
	215 Move X22, X0
	216 Move X1, [X8]
	217 Call Dictionary`2<Byte, Object>..ctor, X0
	218 Compare X22, 0
	219 JumpIfEqual {261}
	220 Move X23, 0xBB6000
	221 Move X2, [X21+16]
	222 Move X23, [X23+1560]
	223 Move W1, 213
	224 Move X0, X22
	225 Move X3, [X23]
	226 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	227 Move X9, 0xBAE000
	228 Move W8, [X21+24]
	229 Move X9, [X9+2520]
	230 Add X1, X31, 12
	231 Move [X31+12], W8
	232 Move X0, [X9]
	233 Call 0x1C17E04
	234 Move X3, [X23]
	235 Move X2, X0
	236 Move W1, 212
	237 Move X0, X22
	238 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	239 Move X3, [X23]
	240 Move W1, 245
	241 Move X0, X22
	242 Move X2, X20
	243 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	244 Move X20, 0xBB6000
	245 Move X20, [X20+1352]
	246 Move X0, [X20]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {252}
	250 Call 0x1C17DFC
	251 Move X0, [X20]
	252 Move X8, [X0+184]
	253 Move X9, [X19]
	254 Move W1, 217
	255 Move X0, X19
	256 Move X3, [X8]
	257 Move X8, [X9+552]
	258 Move X4, [X9+560]
	259 Move X2, X22
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Call 0x1C17F20

Method: System.Boolean OpFindFriends(System.String[] friendsToFind, Photon.Realtime.FindFriendsOptions options = null)

Disassembly:
	0x03547F18 LDRB W8, [X21 + 0xC55]
	0x03547F1C MOV W20, W1
	0x03547F20 MOV X19, X0
	0x03547F24 TBNZ X8, 0x0, 0x3547F90
	0x03547F28 ADRP X0, 0xBAC000
	0x03547F2C LDR X0, [X0 + 0xB58]
	0x03547F30 BL 0x1C16CF4
	0x03547F34 ADRP X0, 0xBB5000
	0x03547F38 LDR X0, [X0 + 0x540]
	0x03547F3C BL 0x1C16CF4
	0x03547F40 ADRP X0, 0xBB5000
	0x03547F44 LDR X0, [X0 + 0x6E8]
	0x03547F48 BL 0x1C16CF4
	0x03547F4C ADRP X0, 0xBB5000
	0x03547F50 LDR X0, [X0 + 0x618]
	0x03547F54 BL 0x1C16CF4
	0x03547F58 ADRP X0, 0xBB5000
	0x03547F5C LDR X0, [X0 + 0x2B8]
	0x03547F60 BL 0x1C16CF4
	0x03547F64 ADRP X0, 0xBB4000
	0x03547F68 LDR X0, [X0 + 0xBC8]
	0x03547F6C BL 0x1C16CF4
	0x03547F70 ADRP X0, 0xBB5000
	0x03547F74 LDR X0, [X0 + 0x548]
	0x03547F78 BL 0x1C16CF4
	0x03547F7C ADRP X0, 0xBB5000
	0x03547F80 LDR X0, [X0 + 0x6F0]
	0x03547F84 BL 0x1C16CF4
	0x03547F88 MOVZ W8, 0x1
	0x03547F8C STRB W8, [X21 + 0xC55]
	0x03547F90 LDRB W8, [X19 + 0x40]
	0x03547F94 CMP W8, 0x5
	0x03547F98 B.CC 0x3548018
	0x03547F9C LDR X21, [X19 + 0x48]
	0x03547FA0 CBZ X21, 0x35480F8
	0x03547FA4 ADRP X9, 0xBB4000
	0x03547FA8 LDR X8, [X21]
	0x03547FAC LDR X9, [X9 + 0xBC8]
	0x03547FB0 ADRP X10, 0xBB5000
	0x03547FB4 LDR X1, [X9]
	0x03547FB8 LDR X10, [X10 + 0x6F0]
	0x03547FBC LDRH W9, [X8 + 0x12E]
	0x03547FC0 LDR X22, [X10]
	0x03547FC4 CBZ X9, 0x3547FE8
	0x03547FC8 LDR X10, [X8 + 0xB0]
	0x03547FCC ADD X10, X10, 0x8
	0x03547FD0 LDUR X11, [X10 - 0x8]
	0x03547FD4 CMP X11, X1
	0x03547FD8 B.EQ 0x3547FF8
	0x03547FDC SUBS X9, X9, 0x1
	0x03547FE0 ADD X10, X10, 0x10
	0x03547FE4 B.NE 0x3547FD0
	0x03547FE8 MOV X0, X21
	0x03547FEC MOV W2, W31
	0x03547FF0 BL 0x1C5C788
	0x03547FF4 B 0x3548004
	0x03547FF8 LDRSW X9, [X10]
	0x03547FFC ADD X8, X8, X9, 0x4, LSL
	0x03548000 ADD X0, X8, 0x138
	0x03548004 LDP X8, X3, [X0]
	0x03548008 MOVZ W1, 0x5
	0x0354800C MOV X0, X21
	0x03548010 MOV X2, X22
	0x03548014 BLR X8
	0x03548018 ADRP X8, 0xBB4000
	0x0354801C LDR X8, [X8 + 0x2B8]
	0x03548020 ADRP X21, 0xBB4000
	0x03548024 LDR X0, [X8]
	0x03548028 LDR X21, [X21 + 0x540]
	0x0354802C BL 0x1C16F10
	0x03548030 LDR X1, [X21]
	0x03548034 MOV X21, X0
	0x03548038 BL 0x29D2C7C
	0x0354803C TBZ X20, 0x0, 0x3548080
	0x03548040 ADRP X8, 0xBAB000
	0x03548044 LDR X8, [X8 + 0xB58]
	0x03548048 ADD X1, X31, 0xC
	0x0354804C LDR X0, [X8]
	0x03548050 AND W8, W20, 0x1
	0x03548054 STRB W8, [X31 + 0xC]
	0x03548058 BL 0x1C16E04
	0x0354805C CBZ X21, 0x35480F8
	0x03548060 ADRP X8, 0xBB4000
	0x03548064 LDR X8, [X8 + 0x618]
	0x03548068 MOV X2, X0
	0x0354806C MOV X0, X21
	0x03548070 MOV W1, W31
	0x03548074 LDR X3, [X8]
	0x03548078 BL 0x29D3520
	0x0354807C B 0x3548084
	0x03548080 CBZ X21, 0x35480F8
	0x03548084 ADRP X8, 0xBB4000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xE99000
	009 Move X23, 0xBB6000
	010 Move X20, 0xBB6000
	011 Move W8, [X24+3147]
	012 Move X23, [X23+696]
	013 Move X20, [X20+1344]
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0xBB6000
	022 Move X0, [X0+1344]
	023 Call 0x1C17CF4
	024 Move X0, 0xBB6000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0xBB6000
	028 Move X0, [X0+696]
	029 Call 0x1C17CF4
	030 Move X0, 0xBAD000
	031 Move X0, [X0+1880]
	032 Call 0x1C17CF4
	033 Move X0, 0xBB6000
	034 Move X0, [X0+1352]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+3147], W8
	038 Move X0, [X23]
	039 Move X23, 0xBB6000
	040 Move X23, [X23+1560]
	041 Call 0x1C17F10
	042 Move X1, [X20]
	043 Move X20, X0
	044 Call Dictionary`2<Byte, Object>..ctor, X0
	045 Compare X22, 0
	046 JumpIfEqual {57}
	047 Move X8, [X22+24]
	048 Compare X8, 0
	049 JumpIfEqual {57}
	050 Compare X20, 0
	051 JumpIfEqual {107}
	052 Move X3, [X23]
	053 Move W1, 1
	054 Move X0, X20
	055 Move X2, X22
	056 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	057 Compare X21, 0
	058 JumpIfEqual {81}
	059 Move X8, 0xBAD000
	060 Move X8, [X8+1880]
	061 Move W9, [X21+16]
	062 Move W10, [X21+17]
	063 Move W11, [X21+18]
	064 Move X0, [X8]
	065 Or W8, W9, 2
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 Or W9, W8, 4
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Add X1, X31, 12
	072 Move [X31+12], W8
	073 Call 0x1C17E04
	074 Compare X20, 0
	075 JumpIfEqual {107}
	076 Move X3, [X23]
	077 Move X2, X0
	078 Move W1, 2
	079 Move X0, X20
	080 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	081 Move X21, 0xBB5000
	082 Move X21, [X21+1352]
	083 Move X0, [X21]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {89}
	087 Call 0x1C17DFC
	088 Move X0, [X21]
	089 Move X8, [X0+184]
	090 Move X9, [X19]
	091 Move W1, 222
	092 Move X0, X19
	093 Move X3, [X8]
	094 Move X8, [X9+552]
	095 Move X4, [X9+560]
	096 Move X2, X20
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 And W0, W0, 1
	105 Move X30, [X31+64]
	106 Return X0
	107 Call 0x1C17F20

Method: System.Boolean OpSetCustomPropertiesOfActor(System.Int32 actorNr, ExitGames.Client.Photon.Hashtable actorProperties)

Disassembly:
	0x035480B0 BL 0x1C16DFC
	0x035480B4 LDR X0, [X20]
	0x035480B8 LDR X8, [X0 + 0xB8]
	0x035480BC LDR X9, [X19]
	0x035480C0 MOVZ W1, 0xDA
	0x035480C4 MOV X0, X19
	0x035480C8 LDR X3, [X8]
	0x035480CC LDR X8, [X9 + 0x228]
	0x035480D0 LDR X4, [X9 + 0x230]
	0x035480D4 MOV X2, X21
	0x035480D8 BLR X8
	0x035480DC B 0x35480E4
	0x035480E0 MOVZ W0, 0x1
	0x035480E4 LDP X20, X19, [X31 + 0x20]
	0x035480E8 LDP X22, X21, [X31 + 0x10]
	0x035480EC AND W0, W0, 0x1
	0x035480F0 LDR X30, [X31], #0x30
	0x035480F4 RET
	0x035480F8 BL 0x1C16F20
	0x035480FC STR X30, [X31 - 0x20]!
	0x03548100 STP X20, X19, [X31 + 0x10]
	0x03548104 ADRP X19, 0xE97000
	0x03548108 ADRP X20, 0xBEC000
	0x0354810C LDRB W8, [X19 + 0xC56]
	0x03548110 LDR X20, [X20 + 0xF88]
	0x03548114 TBNZ X8, 0x0, 0x354812C
	0x03548118 ADRP X0, 0xBEC000
	0x0354811C LDR X0, [X0 + 0xF88]
	0x03548120 BL 0x1C16CF4
	0x03548124 MOVZ W8, 0x1
	0x03548128 STRB W8, [X19 + 0xC56]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE98000
	008 Move X23, 0xBED000
	009 Move W8, [X22+3148]
	010 Move X23, [X23+2984]
	011 Move X21, X2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBED000
	019 Move X0, [X0+2984]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3148], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Call Extensions.StripToStringKeys, X0
	030 Move X2, X0
	031 Move X0, X20
	032 Move W1, W19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X3, X31
	038 Move X4, X31
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call LoadBalancingPeer.OpSetPropertiesOfActor, X0, X1, X2, X3, X4
	042 Return X0

Method: System.Boolean OpSetPropertiesOfActor(System.Int32 actorNr, ExitGames.Client.Photon.Hashtable actorProperties, ExitGames.Client.Photon.Hashtable expectedProperties = null, Photon.Realtime.WebFlags webflags = null)

Disassembly:
	0x0353D464 CMP W21, 0x1
	0x0353D468 B.LT 0x353D4CC
	0x0353D46C LDR X0, [X19 + 0x110]
	0x0353D470 CBZ X0, 0x353D6B0
	0x0353D474 LDR X8, [X0]
	0x0353D478 MOV W1, W21
	0x0353D47C MOV W2, W31
	0x0353D480 LDP X9, X3, [X8 + 0x1D8]
	0x0353D484 BLR X9
	0x0353D488 CBZ X0, 0x353D664
	0x0353D48C MOV X1, X20
	0x0353D490 MOV W2, W21
	0x0353D494 MOV X22, X0
	0x0353D498 BL 0x353D760
	0x0353D49C LDR X8, [X22]
	0x0353D4A0 MOV X20, X0
	0x0353D4A4 MOV X0, X22
	0x0353D4A8 MOV X1, X20
	0x0353D4AC LDP X9, X2, [X8 + 0x178]
	0x0353D4B0 BLR X9
	0x0353D4B4 LDR X0, [X19 + 0xC0]
	0x0353D4B8 CBZ X0, 0x353D6B0
	0x0353D4BC MOV X1, X22
	0x0353D4C0 MOV X2, X20
	0x0353D4C4 BL 0x353C7E8
	0x0353D4C8 B 0x353D664
	0x0353D4CC ADRP X8, 0xBBF000
	0x0353D4D0 LDR X8, [X8 + 0x238]
	0x0353D4D4 MOV X0, X20
	0x0353D4D8 LDR X1, [X8]
	0x0353D4DC BL 0x2AA4E98
	0x0353D4E0 CBZ X0, 0x353D6B0
	0x0353D4E4 ADRP X8, 0xBBF000
	0x0353D4E8 LDR X8, [X8 + 0x258]
	0x0353D4EC LDR X1, [X8]
	0x0353D4F0 ADD X8, X31, 0x8
	0x0353D4F4 BL 0x2EC7020
	0x0353D4F8 LDUR V0, [X31 + 0x8]
	0x0353D4FC LDR X8, [X31 + 0x18]
	0x0353D500 ADRP X25, 0xBBF000
	0x0353D504 ADRP X26, 0xBB6000
	0x0353D508 ADRP X27, 0xBBE000
	0x0353D50C LDR X25, [X25 + 0x248]
	0x0353D510 LDR X26, [X26 + 0x758]
	0x0353D514 LDR X27, [X27 + 0xDA0]
	0x0353D518 STR V0, [X31 + 0x2]
	0x0353D51C STR X8, [X31 + 0x30]
	0x0353D520 ADRP X28, 0xBB8000
	0x0353D524 LDR X28, [X28 + 0x278]
	0x0353D528 LDR X1, [X25]
	0x0353D52C ADD X0, X31, 0x20
	0x0353D530 BL 0x2C0B090
	0x0353D534 TBZ X0, 0x0, 0x353D650
	0x0353D538 LDR X21, [X31 + 0x30]
	0x0353D53C CBZ X21, 0x353D68C
	0x0353D540 LDR X8, [X21]
	0x0353D544 LDR X1, [X26]
	0x0353D548 LDR X8, [X8 + 0x40]
	0x0353D54C LDR X9, [X1 + 0x40]
	0x0353D550 CMP X8, X9
	0x0353D554 B.NE 0x353D690
	0x0353D558 MOV X0, X21
	0x0353D55C BL 0x1C16E08
	0x0353D560 LDR W22, [X0]
	0x0353D564 CBZ W22, 0x353D528
	0x0353D568 MOV X0, X20
	0x0353D56C MOV X1, X21
	0x0353D570 MOV X2, X31
	0x0353D574 BL 0x34ED878
	0x0353D578 MOV X21, X0
	0x0353D57C CBZ X0, 0x353D69C
	0x0353D580 LDR X8, [X21]
	0x0353D584 LDR X1, [X27]
	0x0353D588 LDRB W10, [X8 + 0x130]
	0x0353D58C LDRB W9, [X1 + 0x130]
	0x0353D590 CMP W10, W9
	0x0353D594 B.CC 0x353D684
	0x0353D598 LDR X8, [X8 + 0xC8]
	0x0353D59C ADD X8, X8, X9, 0x3, LSL
	0x0353D5A0 LDUR X8, [X8 - 0x8]
	0x0353D5A4 CMP X8, X1
	0x0353D5A8 B.NE 0x353D684
	0x0353D5AC MOVZ W1, 0xFF
	0x0353D5B0 MOV X0, X21
	0x0353D5B4 MOV X2, X31
	0x0353D5B8 BL 0x34ED940
	0x0353D5BC MOV X23, X0
	0x0353D5C0 CBZ X0, 0x353D5D4
	0x0353D5C4 LDR X1, [X28]
	0x0353D5C8 LDR X8, [X23]
	0x0353D5CC CMP X8, X1
	0x0353D5D0 B.NE 0x353D6A0
	0x0353D5D4 LDR X0, [X19 + 0x110]
	0x0353D5D8 CBZ X0, 0x353D698
	0x0353D5DC LDR X8, [X0]
	0x0353D5E0 LDP X9, X3, [X8 + 0x1D8]
	0x0353D5E4 MOV W1, W22
	0x0353D5E8 MOV W2, W31
	0x0353D5EC BLR X9
	0x0353D5F0 MOV X24, X0
	0x0353D5F4 CBNZ X0, 0x353D638
	0x0353D5F8 LDR X8, [X19]
	0x0353D5FC LDP X9, X5, [X8 + 0x1F8]
	0x0353D600 MOV X0, X19
	0x0353D604 MOV X1, X23
	0x0353D608 MOV W2, W22
	0x0353D60C MOV W3, W31
	0x0353D610 MOV X4, X21
	0x0353D614 BLR X9
	0x0353D618 MOV X24, X0
	0x0353D61C LDR X0, [X19 + 0x110]
	0x0353D620 CBZ X0, 0x353D6A8
	0x0353D624 LDR X8, [X0]
	0x0353D628 LDP X9, X2, [X8 + 0x1C8]
	0x0353D62C MOV X1, X24
	0x0353D630 BLR X9
	0x0353D634 CBZ X24, 0x353D6AC
	0x0353D638 LDR X8, [X24]
	0x0353D63C LDP X9, X2, [X8 + 0x178]
	0x0353D640 MOV X0, X24
	0x0353D644 MOV X1, X21
	0x0353D648 BLR X9
	0x0353D64C B 0x353D528
	0x0353D650 ADRP X8, 0xBBF000
	0x0353D654 LDR X8, [X8 + 0x240]
	0x0353D658 ADD X0, X31, 0x20
	0x0353D65C LDR X1, [X8]
	0x0353D660 BL 0x2C0B08C
	0x0353D664 LDP X20, X19, [X31 + 0x90]
	0x0353D668 LDP X22, X21, [X31 + 0x80]
	0x0353D66C LDP X24, X23, [X31 + 0x70]
	0x0353D670 LDP X26, X25, [X31 + 0x60]
	0x0353D674 LDP X28, X27, [X31 + 0x50]
	0x0353D678 LDR X30, [X31 + 0x40]
	0x0353D67C ADD X31, X31, 0xA0
	0x0353D680 RET
	0x0353D684 MOV X0, X21
	0x0353D688 BL 0x1C171E0
	0x0353D68C BL 0x1C16F20
	0x0353D690 MOV X0, X21
	0x0353D694 BL 0x1C171E0
	0x0353D698 BL 0x1C16F20
	0x0353D69C BL 0x1C16F20
	0x0353D6A0 MOV X0, X23
	0x0353D6A4 BL 0x1C171E0
	0x0353D6A8 BL 0x1C16F20
	0x0353D6AC BL 0x1C16F20
	0x0353D6B0 BL 0x1C16F20
	0x0353D6B4 B 0x353D6EC
	0x0353D6B8 B 0x353D6EC
	0x0353D6BC B 0x353D6EC
	0x0353D6C0 B 0x353D6EC
	0x0353D6C4 B 0x353D6EC
	0x0353D6C8 B 0x353D6EC
	0x0353D6CC B 0x353D6EC
	0x0353D6D0 B 0x353D6EC
	0x0353D6D4 B 0x353D6EC
	0x0353D6D8 B 0x353D6EC
	0x0353D6DC B 0x353D6EC
	0x0353D6E0 B 0x353D6EC
	0x0353D6E4 B 0x353D6EC
	0x0353D6E8 B 0x353D6EC
	0x0353D6EC MOV X19, X0
	0x0353D6F0 CMP W1, 0x1
	0x0353D6F4 B.NE 0x353D728
	0x0353D6F8 MOV X0, X19
	0x0353D6FC BL 0x3EB1AD0
	0x0353D700 LDR X20, [X0]
	0x0353D704 BL 0x3EB1AE0
	0x0353D708 ADRP X8, 0xBBF000
	0x0353D70C LDR X8, [X8 + 0x240]
	0x0353D710 ADD X0, X31, 0x20
	0x0353D714 LDR X1, [X8]
	0x0353D718 BL 0x2C0B08C
	0x0353D71C CBZ X20, 0x353D664
	0x0353D720 MOV X0, X20
	0x0353D724 BL 0x1C16F18
	0x0353D728 MOV X20, X31
	0x0353D72C B 0x353D734
	0x0353D730 MOV X19, X0
	0x0353D734 ADRP X8, 0xBBF000
	0x0353D738 LDR X8, [X8 + 0x240]
	0x0353D73C LDR X1, [X8]
	0x0353D740 ADD X0, X31, 0x20
	0x0353D744 BL 0x2C0B08C
	0x0353D748 CBNZ X20, 0x353D754
	0x0353D74C MOV X0, X19
	0x0353D750 BL 0x1D2C690
	0x0353D754 MOV X0, X20
	0x0353D758 BL 0x1C16F18
	0x0353D75C BL 0x1990590
	0x0353D760 STR X30, [X31 - 0x30]!
	0x0353D764 STP X22, X21, [X31 + 0x10]
	0x0353D768 STP X20, X19, [X31 + 0x20]
	0x0353D76C ADRP X22, 0xEA2000
	0x0353D770 ADRP X21, 0xBB6000
	0x0353D774 LDRB W8, [X22 + 0xC08]
	0x0353D778 LDR X21, [X21 + 0x758]
	0x0353D77C MOV W20, W2
	0x0353D780 MOV X19, X1
	0x0353D784 TBNZ X8, 0x0, 0x353D7B4
	0x0353D788 ADRP X0, 0xBBE000
	0x0353D78C LDR X0, [X0 + 0xD58]
	0x0353D790 BL 0x1C16CF4
	0x0353D794 ADRP X0, 0xBBE000
	0x0353D798 LDR X0, [X0 + 0xDA0]
	0x0353D79C BL 0x1C16CF4
	0x0353D7A0 ADRP X0, 0xBB6000
	0x0353D7A4 LDR X0, [X0 + 0x758]
	0x0353D7A8 BL 0x1C16CF4
	0x0353D7AC MOVZ W8, 0x1
	0x0353D7B0 STRB W8, [X22 + 0xC08]
	0x0353D7B4 LDR X0, [X21]
	0x0353D7B8 ADD X1, X31, 0xC
	0x0353D7BC STR W20, [X31 + 0xC]
	0x0353D7C0 BL 0x1C16E04
	0x0353D7C4 CBZ X19, 0x353D854
	0x0353D7C8 ADRP X8, 0xBBE000
	0x0353D7CC LDR X8, [X8 + 0xD58]
	0x0353D7D0 MOV X1, X0
	0x0353D7D4 MOV X0, X19
	0x0353D7D8 LDR X2, [X8]
	0x0353D7DC BL 0x2AA528C
	0x0353D7E0 TBZ X0, 0x0, 0x353D840
	0x0353D7E4 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X24, 0xEA3000
	012 Move W8, [X24+3149]
	013 Move X20, X4
	014 Move X21, X3
	015 Move X23, X2
	016 Move W22, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0xBB7000
	023 Move X0, [X0+2904]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB8000
	026 Move X0, [X0+2520]
	027 Call 0x1C17CF4
	028 Move X0, 0xBC0000
	029 Move X0, [X0+1336]
	030 Call 0x1C17CF4
	031 Move X0, 0xBC0000
	032 Move X0, [X0+1344]
	033 Call 0x1C17CF4
	034 Move X0, 0xBBF000
	035 Move X0, [X0+3424]
	036 Call 0x1C17CF4
	037 Move X0, 0xBC0000
	038 Move X0, [X0+1560]
	039 Call 0x1C17CF4
	040 Move X0, 0xBC0000
	041 Move X0, [X0+696]
	042 Call 0x1C17CF4
	043 Move X0, 0xBBF000
	044 Move X0, [X0+3016]
	045 Call 0x1C17CF4
	046 Move X0, 0xBB7000
	047 Move X0, [X0+1880]
	048 Call 0x1C17CF4
	049 Move X0, 0xBC0000
	050 Move X0, [X0+1352]
	051 Call 0x1C17CF4
	052 Move X0, 0xBC0000
	053 Move X0, [X0+1656]
	054 Call 0x1C17CF4
	055 Move X0, 0xBC0000
	056 Move X0, [X0+1664]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X24+3149], W8
	060 Move W8, [X19+64]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X24, [X19+72]
	063 Compare X24, 0
	064 JumpIfEqual {242}
	065 Move X9, 0xBBF000
	066 Move X8, [X24]
	067 Move X9, [X9+3016]
	068 Move X10, 0xBC0000
	069 Move X1, [X9]
	070 Move X10, [X10+1664]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X25, [X10]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X24
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X3, [X0+8]
	089 Move W1, 3
	090 Move X0, X24
	091 Move X2, X25
	092 NotImplemented "Instruction BLR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Compare X23, 0
	095 JumpIfEqual {196}
	096 Move X25, 0xBBF000
	097 Move X25, [X25+3424]
	098 Move X0, X23
	099 Move X1, [X25]
	100 Call Dictionary`2<Object, Object>.get_Count, X0
	101 Compare W0, 0
	102 JumpIfEqual {196}
	103 Move X8, 0xBC0000
	104 Move X8, [X8+696]
	105 Move X0, [X8]
	106 Call 0x1C17F10
	107 Move X8, 0xBC0000
	108 Move X8, [X8+1344]
	109 Move X24, X0
	110 Move X1, [X8]
	111 Call Dictionary`2<Byte, Object>..ctor, X0
	112 Compare X24, 0
	113 JumpIfEqual {242}
	114 Move X26, 0xBC0000
	115 Move X26, [X26+1336]
	116 Move W1, 251
	117 Move X0, X24
	118 Move X2, X23
	119 Move X3, [X26]
	120 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	121 Move X8, 0xBB7000
	122 Move X8, [X8+1880]
	123 Add X1, X31, 28
	124 Move [X31+28], W22
	125 Move X0, [X8]
	126 Call 0x1C17E04
	127 Move X3, [X26]
	128 Move X2, X0
	129 Move W1, 254
	130 Move X0, X24
	131 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	132 Move X8, 0xBB7000
	133 Move X8, [X8+2904]
	134 Add X1, X31, 24
	135 Move X0, [X8]
	136 Move W8, 1
	137 Move [X31+24], W8
	138 Call 0x1C17E04
	139 Move X3, [X26]
	140 Move X2, X0
	141 Move W1, 250
	142 Move X0, X24
	143 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	144 Compare X21, 0
	145 JumpIfEqual {156}
	146 Move X1, [X25]
	147 Move X0, X21
	148 Call Dictionary`2<Object, Object>.get_Count, X0
	149 Compare W0, 0
	150 JumpIfEqual {156}
	151 Move X3, [X26]
	152 Move W1, 231
	153 Move X0, X24
	154 Move X2, X21
	155 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	156 Compare X20, 0
	157 JumpIfEqual {179}
	158 Move X0, X20
	159 Move X1, X31
	160 Call WebFlags.get_HttpForward, X0
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {179}
	165 Move X9, 0xBB8000
	166 Move W8, [X20+16]
	167 Move X9, [X9+2520]
	168 Add X1, X31, 12
	169 Move [X31+12], W8
	170 Move X0, [X9]
	171 Call 0x1C17E04
	172 Move X8, 0xBC0000
	173 Move X8, [X8+1560]
	174 Move X2, X0
	175 Move W1, 234
	176 Move X0, X24
	177 Move X3, [X8]
	178 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	179 Move X20, 0xBC0000
	180 Move X20, [X20+1352]
	181 Move X0, [X20]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X20]
	187 Move X8, [X0+184]
	188 Move X9, [X19]
	189 Move W1, 252
	190 Move X0, X19
	191 Move X3, [X8]
	192 Move X8, [X9+552]
	193 Move X4, [X9+560]
	194 Move X2, X24
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move W8, [X19+64]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X19, [X19+72]
	199 Compare X19, 0
	200 JumpIfEqual {242}
	201 Move X9, 0xBBF000
	202 Move X8, [X19]
	203 Move X9, [X9+3016]
	204 Move X10, 0xBC0000
	205 Move X1, [X9]
	206 Move X10, [X10+1656]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Move X20, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X19
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X3, [X0+8]
	225 Move W1, 3
	226 Move X0, X19
	227 Move X2, X20
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move W0, W31
	230 Move X20, [X31+80]
	231 Move X19, [X31+88]
	232 Move X22, [X31+64]
	233 Move X21, [X31+72]
	234 Move X24, [X31+48]
	235 Move X23, [X31+56]
	236 Move X26, [X31+32]
	237 Move X25, [X31+40]
	238 Move X30, [X31+16]
	239 And W0, W0, 1
	240 Add X31, X31, 96
	241 Return X0
	242 Call 0x1C17F20

Method: System.Boolean OpSetPropertyOfRoom(System.Byte propCode, System.Object value)

Disassembly:
	0x0354812C LDR X0, [X20]
	0x03548130 BL 0x1C16F10
	0x03548134 MOV X1, X31
	0x03548138 MOV X19, X0
	0x0354813C BL 0x33BDD8C
	0x03548140 LDR X8, [X20]
	0x03548144 LDR X8, [X8 + 0xB8]
	0x03548148 STR X19, [X8]
	0x0354814C LDP X20, X19, [X31 + 0x10]
	0x03548150 LDR X30, [X31], #0x20
	0x03548154 RET
	0x03548158 MOV X1, X31
	0x0354815C B 0x33BDD8C
	0x03548160 STR X30, [X31 - 0x20]!
	0x03548164 STP X20, X19, [X31 + 0x10]
	0x03548168 ADRP X19, 0xE97000
	0x0354816C ADRP X20, 0xBB4000
	0x03548170 LDRB W8, [X19 + 0xC57]
	0x03548174 LDR X20, [X20 + 0x6F8]
	0x03548178 TBNZ X8, 0x0, 0x3548190
	0x0354817C ADRP X0, 0xBB4000
	0x03548180 LDR X0, [X0 + 0x6F8]
	0x03548184 BL 0x1C16CF4
	0x03548188 MOVZ W8, 0x1
	0x0354818C STRB W8, [X19 + 0xC57]
	0x03548190 LDR X0, [X20]
	0x03548194 BL 0x1C16F10
	0x03548198 MOV X1, X31
	0x0354819C MOV X19, X0
	0x035481A0 BL 0x34FB6A4
	0x035481A4 MOV X0, X19
	0x035481A8 LDP X20, X19, [X31 + 0x10]
	0x035481AC LDR X30, [X31], #0x20
	0x035481B0 RET
	0x035481B4 CBZ X1, 0x35481C4
	0x035481B8 MOV X0, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE98000
	008 Move X23, 0xBB4000
	009 Move W8, [X22+3150]
	010 Move X23, [X23+3488]
	011 Move X20, X2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBB4000
	019 Move X0, [X0+3488]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3150], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X22, X0
	027 Call Hashtable..ctor, X0
	028 Compare X22, 0
	029 JumpIfEqual {47}
	030 Move X0, X22
	031 Move W1, W21
	032 Move X2, X20
	033 Move X3, X31
	034 Call Hashtable.set_Item, X0, X1, X2
	035 Move X0, X19
	036 Move X1, X22
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X2, X31
	042 Move X3, X31
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Call LoadBalancingPeer.OpSetPropertiesOfRoom, X0, X1, X2, X3
	046 Return X0
	047 Call 0x1C17F20

Method: System.Boolean OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties)

Disassembly:
	0x035481BC MOV X1, X31
	0x035481C0 B 0x34FBB20
	0x035481C4 STR X30, [X31 - 0x10]!
	0x035481C8 BL 0x1C16F20
	0x035481CC MOV X1, X31
	0x035481D0 B 0x33BDD8C
	0x035481D4 MOV X1, X31
	0x035481D8 B 0x33BDD8C
	0x035481DC MOV X1, X31
	0x035481E0 B 0x33BDD8C
	0x035481E4 MOV X1, X31
	0x035481E8 B 0x33BDD8C
	0x035481EC MOV X1, X31
	0x035481F0 B 0x33BDD8C
	0x035481F4 MOV X1, X31
	0x035481F8 B 0x33BDD8C
	0x035481FC MOV X1, X31
	0x03548200 B 0x33BDD8C
	0x03548204 LDRB W0, [X0 + 0x10]
	0x03548208 RET
	0x0354820C AND W8, W1, 0x1
	0x03548210 STRB W8, [X0 + 0x10]
	0x03548214 RET
	0x03548218 LDRB W0, [X0 + 0x11]
	0x0354821C RET
	0x03548220 AND W8, W1, 0x1
	0x03548224 STRB W8, [X0 + 0x11]
	0x03548228 RET
	0x0354822C LDRB W0, [X0 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE98000
	007 Move X22, 0xBED000
	008 Move W8, [X21+3151]
	009 Move X22, [X22+2984]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBED000
	017 Move X0, [X0+2984]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3151], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Call Extensions.StripToStringKeys, X0
	028 Move X1, X0
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X2, X31
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Call LoadBalancingPeer.OpSetPropertiesOfRoom, X0, X1, X2, X3
	038 Return X0

Method: System.Boolean OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable expectedProperties = null, Photon.Realtime.WebFlags webflags = null)

Disassembly:
	0x0353DD00 LDR X8, [X0]
	0x0353DD04 MOV W1, W21
	0x0353DD08 MOV W2, W31
	0x0353DD0C LDP X9, X3, [X8 + 0x1D8]
	0x0353DD10 BLR X9
	0x0353DD14 CBNZ X0, 0x353DD5C
	0x0353DD18 LDR X8, [X25]
	0x0353DD1C LDR X9, [X20]
	0x0353DD20 LDR X22, [X20 + 0x110]
	0x0353DD24 MOV X0, X20
	0x0353DD28 LDR X8, [X8 + 0xB8]
	0x0353DD2C MOV W2, W21
	0x0353DD30 MOV W3, W31
	0x0353DD34 MOV X4, X31
	0x0353DD38 LDR X1, [X8]
	0x0353DD3C LDP X8, X5, [X9 + 0x1F8]
	0x0353DD40 BLR X8
	0x0353DD44 CBZ X22, 0x353DD84
	0x0353DD48 LDR X8, [X22]
	0x0353DD4C MOV X1, X0
	0x0353DD50 MOV X0, X22
	0x0353DD54 LDP X9, X2, [X8 + 0x1C8]
	0x0353DD58 BLR X9
	0x0353DD5C LDR W8, [X19 + 0x18]
	0x0353DD60 ADD X23, X23, 0x1
	0x0353DD64 CMP X23, W8, SXTW
	0x0353DD68 B.LT 0x353DCE8
	0x0353DD6C LDP X20, X19, [X31 + 0x30]
	0x0353DD70 LDP X22, X21, [X31 + 0x20]
	0x0353DD74 LDP X24, X23, [X31 + 0x10]
	0x0353DD78 LDP X30, X25, [X31], #0x40
	0x0353DD7C RET
	0x0353DD80 BL 0x1C16F28
	0x0353DD84 BL 0x1C16F20
	0x0353DD88 SUB X31, X31, 0x50
	0x0353DD8C STP X30, X23, [X31 + 0x20]
	0x0353DD90 STP X22, X21, [X31 + 0x30]
	0x0353DD94 STP X20, X19, [X31 + 0x40]
	0x0353DD98 ADRP X20, 0xEA2000
	0x0353DD9C LDRB W8, [X20 + 0xC24]
	0x0353DDA0 MOV X19, X0
	0x0353DDA4 TBNZ X8, 0x0, 0x353DDEC
	0x0353DDA8 ADRP X0, 0xBF7000
	0x0353DDAC LDR X0, [X0 + 0xCF8]
	0x0353DDB0 BL 0x1C16CF4
	0x0353DDB4 ADRP X0, 0xBF7000
	0x0353DDB8 LDR X0, [X0 + 0xD00]
	0x0353DDBC BL 0x1C16CF4
	0x0353DDC0 ADRP X0, 0xBF7000
	0x0353DDC4 LDR X0, [X0 + 0xD08]
	0x0353DDC8 BL 0x1C16CF4
	0x0353DDCC ADRP X0, 0xBF7000
	0x0353DDD0 LDR X0, [X0 + 0xD10]
	0x0353DDD4 BL 0x1C16CF4
	0x0353DDD8 ADRP X0, 0xBF7000
	0x0353DDDC LDR X0, [X0 + 0xD18]
	0x0353DDE0 BL 0x1C16CF4
	0x0353DDE4 MOVZ W8, 0x1
	0x0353DDE8 STRB W8, [X20 + 0xC24]
	0x0353DDEC STP X31, X31, [X31 + 0x8]
	0x0353DDF0 STR X31, [X31 + 0x18]
	0x0353DDF4 LDR X0, [X19 + 0x28]
	0x0353DDF8 CBZ X0, 0x353DED0
	0x0353DDFC ADRP X23, 0xBF7000
	0x0353DE00 ADRP X21, 0xBF7000
	0x0353DE04 ADRP X22, 0xBF7000
	0x0353DE08 ADRP X20, 0xBF7000
	0x0353DE0C LDR X23, [X23 + 0xD18]
	0x0353DE10 LDR X21, [X21 + 0xD00]
	0x0353DE14 LDR X22, [X22 + 0xD10]
	0x0353DE18 LDR X20, [X20 + 0xCF8]
	0x0353DE1C BL 0x35440C4
	0x0353DE20 LDR X1, [X23]
	0x0353DE24 ADD X8, X31, 0x8
	0x0353DE28 MOV X0, X19
	0x0353DE2C BL 0x301CB58
	0x0353DE30 LDR X1, [X21]
	0x0353DE34 ADD X0, X31, 0x8
	0x0353DE38 BL 0x2BC4350
	0x0353DE3C TBZ X0, 0x0, 0x353DEA8
	0x0353DE40 LDR X19, [X31 + 0x18]
	0x0353DE44 CBZ X19, 0x353DEC8
	0x0353DE48 LDR X8, [X19]
	0x0353DE4C LDR X1, [X22]
	0x0353DE50 LDRH W9, [X8 + 0x12E]
	0x0353DE54 CBZ X9, 0x353DE78
	0x0353DE58 LDR X10, [X8 + 0xB0]
	0x0353DE5C ADD X10, X10, 0x8
	0x0353DE60 LDUR X11, [X10 - 0x8]
	0x0353DE64 CMP X11, X1
	0x0353DE68 B.EQ 0x353DE88
	0x0353DE6C SUBS X9, X9, 0x1
	0x0353DE70 ADD X10, X10, 0x10
	0x0353DE74 B.NE 0x353DE60
	0x0353DE78 MOVZ W2, 0x1
	0x0353DE7C MOV X0, X19
	0x0353DE80 BL 0x1C5C788
	0x0353DE84 B 0x353DE98
	0x0353DE88 LDR W9, [X10]
	0x0353DE8C ADD W9, W9, 0x1
	0x0353DE90 ADD X8, X8, W9, 0x4, SXTW
	0x0353DE94 ADD X0, X8, 0x138
	0x0353DE98 LDP X8, X1, [X0]
	0x0353DE9C MOV X0, X19
	0x0353DEA0 BLR X8
	0x0353DEA4 B 0x353DE30
	0x0353DEA8 LDR X1, [X20]
	0x0353DEAC ADD X0, X31, 0x8
	0x0353DEB0 BL 0x2BC434C
	0x0353DEB4 LDP X20, X19, [X31 + 0x40]
	0x0353DEB8 LDP X22, X21, [X31 + 0x30]
	0x0353DEBC LDP X30, X23, [X31 + 0x20]
	0x0353DEC0 ADD X31, X31, 0x50
	0x0353DEC4 RET
	0x0353DEC8 MOV X21, X20
	0x0353DECC BL 0x1C16F20
	0x0353DED0 BL 0x1C16F20
	0x0353DED4 B 0x353DEE0
	0x0353DED8 B 0x353DEDC
	0x0353DEDC MOV X21, X20
	0x0353DEE0 MOV X19, X0
	0x0353DEE4 CMP W1, 0x1
	0x0353DEE8 B.NE 0x353DF14
	0x0353DEEC MOV X0, X19
	0x0353DEF0 BL 0x3EB1AD0
	0x0353DEF4 LDR X20, [X0]
	0x0353DEF8 BL 0x3EB1AE0
	0x0353DEFC LDR X1, [X21]
	0x0353DF00 ADD X0, X31, 0x8
	0x0353DF04 BL 0x2BC434C
	0x0353DF08 CBZ X20, 0x353DEB4
	0x0353DF0C MOV X0, X20
	0x0353DF10 BL 0x1C16F18
	0x0353DF14 MOV X20, X31
	0x0353DF18 B 0x353DF20
	0x0353DF1C MOV X19, X0
	0x0353DF20 LDR X1, [X21]
	0x0353DF24 ADD X0, X31, 0x8
	0x0353DF28 BL 0x2BC434C
	0x0353DF2C CBNZ X20, 0x353DF38
	0x0353DF30 MOV X0, X19
	0x0353DF34 BL 0x1D2C690
	0x0353DF38 MOV X0, X20
	0x0353DF3C BL 0x1C16F18
	0x0353DF40 BL 0x1990590
	0x0353DF44 SUB X31, X31, 0x50
	0x0353DF48 STP X30, X23, [X31 + 0x20]
	0x0353DF4C STP X22, X21, [X31 + 0x30]
	0x0353DF50 STP X20, X19, [X31 + 0x40]
	0x0353DF54 ADRP X20, 0xEA2000
	0x0353DF58 LDRB W8, [X20 + 0xC25]
	0x0353DF5C MOV X19, X0
	0x0353DF60 TBNZ X8, 0x0, 0x353DFA8
	0x0353DF64 ADRP X0, 0xBF7000
	0x0353DF68 LDR X0, [X0 + 0xCF8]
	0x0353DF6C BL 0x1C16CF4
	0x0353DF70 ADRP X0, 0xBF7000
	0x0353DF74 LDR X0, [X0 + 0xD00]
	0x0353DF78 BL 0x1C16CF4
	0x0353DF7C ADRP X0, 0xBF7000
	0x0353DF80 LDR X0, [X0 + 0xD08]
	0x0353DF84 BL 0x1C16CF4
	0x0353DF88 ADRP X0, 0xBF7000
	0x0353DF8C LDR X0, [X0 + 0xD10]
	0x0353DF90 BL 0x1C16CF4
	0x0353DF94 ADRP X0, 0xBF7000
	0x0353DF98 LDR X0, [X0 + 0xD18]
	0x0353DF9C BL 0x1C16CF4
	0x0353DFA0 MOVZ W8, 0x1
	0x0353DFA4 STRB W8, [X20 + 0xC25]
	0x0353DFA8 STP X31, X31, [X31 + 0x8]
	0x0353DFAC STR X31, [X31 + 0x18]
	0x0353DFB0 LDR X0, [X19 + 0x28]
	0x0353DFB4 CBZ X0, 0x353E08C
	0x0353DFB8 ADRP X23, 0xBF7000
	0x0353DFBC ADRP X21, 0xBF7000
	0x0353DFC0 ADRP X22, 0xBF7000
	0x0353DFC4 ADRP X20, 0xBF7000
	0x0353DFC8 LDR X23, [X23 + 0xD18]
	0x0353DFCC LDR X21, [X21 + 0xD00]
	0x0353DFD0 LDR X22, [X22 + 0xD10]
	0x0353DFD4 LDR X20, [X20 + 0xCF8]
	0x0353DFD8 BL 0x35440C4
	0x0353DFDC LDR X1, [X23]
	0x0353DFE0 ADD X8, X31, 0x8
	0x0353DFE4 MOV X0, X19
	0x0353DFE8 BL 0x301CB58
	0x0353DFEC LDR X1, [X21]
	0x0353DFF0 ADD X0, X31, 0x8
	0x0353DFF4 BL 0x2BC4350
	0x0353DFF8 TBZ X0, 0x0, 0x353E064
	0x0353DFFC LDR X19, [X31 + 0x18]
	0x0353E000 CBZ X19, 0x353E084
	0x0353E004 LDR X8, [X19]
	0x0353E008 LDR X1, [X22]
	0x0353E00C LDRH W9, [X8 + 0x12E]
	0x0353E010 CBZ X9, 0x353E034
	0x0353E014 LDR X10, [X8 + 0xB0]
	0x0353E018 ADD X10, X10, 0x8
	0x0353E01C LDUR X11, [X10 - 0x8]
	0x0353E020 CMP X11, X1
	0x0353E024 B.EQ 0x353E044
	0x0353E028 SUBS X9, X9, 0x1
	0x0353E02C ADD X10, X10, 0x10
	0x0353E030 B.NE 0x353E01C
	0x0353E034 MOVZ W2, 0x3

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xEA3000
	011 Move W8, [X23+3152]
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0xBB7000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB8000
	024 Move X0, [X0+2520]
	025 Call 0x1C17CF4
	026 Move X0, 0xBC0000
	027 Move X0, [X0+1336]
	028 Call 0x1C17CF4
	029 Move X0, 0xBC0000
	030 Move X0, [X0+1344]
	031 Call 0x1C17CF4
	032 Move X0, 0xBBF000
	033 Move X0, [X0+3424]
	034 Call 0x1C17CF4
	035 Move X0, 0xBC0000
	036 Move X0, [X0+1560]
	037 Call 0x1C17CF4
	038 Move X0, 0xBC0000
	039 Move X0, [X0+696]
	040 Call 0x1C17CF4
	041 Move X0, 0xBBF000
	042 Move X0, [X0+3016]
	043 Call 0x1C17CF4
	044 Move X0, 0xBC0000
	045 Move X0, [X0+1352]
	046 Call 0x1C17CF4
	047 Move X0, 0xBC0000
	048 Move X0, [X0+1672]
	049 Call 0x1C17CF4
	050 Move X0, 0xBC0000
	051 Move X0, [X0+1680]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X23+3152], W8
	055 Move W8, [X19+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X23, [X19+72]
	058 Compare X23, 0
	059 JumpIfEqual {224}
	060 Move X9, 0xBBF000
	061 Move X8, [X23]
	062 Move X9, [X9+3016]
	063 Move X10, 0xBC0000
	064 Move X1, [X9]
	065 Move X10, [X10+1672]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X24, [X10]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X23
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X3, [X0+8]
	084 Move W1, 3
	085 Move X0, X23
	086 Move X2, X24
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare X22, 0
	089 JumpIfEqual {179}
	090 Move X24, 0xBBF000
	091 Move X24, [X24+3424]
	092 Move X0, X22
	093 Move X1, [X24]
	094 Call Dictionary`2<Object, Object>.get_Count, X0
	095 Compare W0, 0
	096 JumpIfEqual {179}
	097 Move X8, 0xBC0000
	098 Move X8, [X8+696]
	099 Move X0, [X8]
	100 Call 0x1C17F10
	101 Move X8, 0xBC0000
	102 Move X8, [X8+1344]
	103 Move X23, X0
	104 Move X1, [X8]
	105 Call Dictionary`2<Byte, Object>..ctor, X0
	106 Compare X23, 0
	107 JumpIfEqual {224}
	108 Move X25, 0xBC0000
	109 Move X25, [X25+1336]
	110 Move W1, 251
	111 Move X0, X23
	112 Move X2, X22
	113 Move X3, [X25]
	114 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	115 Move X8, 0xBB7000
	116 Move X8, [X8+2904]
	117 Add X1, X31, 12
	118 Move X0, [X8]
	119 Move W8, 1
	120 Move [X31+12], W8
	121 Call 0x1C17E04
	122 Move X3, [X25]
	123 Move X2, X0
	124 Move W1, 250
	125 Move X0, X23
	126 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	127 Compare X21, 0
	128 JumpIfEqual {139}
	129 Move X1, [X24]
	130 Move X0, X21
	131 Call Dictionary`2<Object, Object>.get_Count, X0
	132 Compare W0, 0
	133 JumpIfEqual {139}
	134 Move X3, [X25]
	135 Move W1, 231
	136 Move X0, X23
	137 Move X2, X21
	138 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	139 Compare X20, 0
	140 JumpIfEqual {162}
	141 Move X0, X20
	142 Move X1, X31
	143 Call WebFlags.get_HttpForward, X0
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {162}
	148 Move X9, 0xBB8000
	149 Move W8, [X20+16]
	150 Move X9, [X9+2520]
	151 Add X1, X31, 8
	152 Move [X31+8], W8
	153 Move X0, [X9]
	154 Call 0x1C17E04
	155 Move X8, 0xBC0000
	156 Move X8, [X8+1560]
	157 Move X2, X0
	158 Move W1, 234
	159 Move X0, X23
	160 Move X3, [X8]
	161 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	162 Move X20, 0xBC0000
	163 Move X20, [X20+1352]
	164 Move X0, [X20]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X20]
	170 Move X8, [X0+184]
	171 Move X9, [X19]
	172 Move W1, 252
	173 Move X0, X19
	174 Move X3, [X8]
	175 Move X8, [X9+552]
	176 Move X4, [X9+560]
	177 Move X2, X23
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move W8, [X19+64]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X19, [X19+72]
	182 Compare X19, 0
	183 JumpIfEqual {224}
	184 Move X9, 0xBBF000
	185 Move X8, [X19]
	186 Move X9, [X9+3016]
	187 Move X10, 0xBC0000
	188 Move X1, [X9]
	189 Move X10, [X10+1680]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Move X20, [X10]
	192 Compare X9, 0
	193 JumpIfEqual {200}
	194 Move X10, [X8+176]
	195 Add X10, X10, 8
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract X9, X9, 1
	199 Add X10, X10, 16
	200 Move X0, X19
	201 Move W2, W31
	202 Call 0x1C5D788
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Add X8, X8, X9
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X3, [X0+8]
	208 Move W1, 3
	209 Move X0, X19
	210 Move X2, X20
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move W0, W31
	213 Move X20, [X31+64]
	214 Move X19, [X31+72]
	215 Move X22, [X31+48]
	216 Move X21, [X31+56]
	217 Move X24, [X31+32]
	218 Move X23, [X31+40]
	219 Move X30, [X31+16]
	220 Move X25, [X31+24]
	221 And W0, W0, 1
	222 Add X31, X31, 80
	223 Return X0
	224 Call 0x1C17F20

Method: System.Boolean OpAuthenticate(System.String appId, System.String appVersion, Photon.Realtime.AuthenticationValues authValues, System.String regionCode, System.Boolean getLobbyStatistics)

Disassembly:
	0x03548230 RET
	0x03548234 AND W8, W1, 0x1
	0x03548238 STRB W8, [X0 + 0x20]
	0x0354823C RET
	0x03548240 LDRB W0, [X0 + 0x40]
	0x03548244 RET
	0x03548248 AND W8, W1, 0x1
	0x0354824C STRB W8, [X0 + 0x40]
	0x03548250 RET
	0x03548254 LDRB W0, [X0 + 0x41]
	0x03548258 RET
	0x0354825C AND W8, W1, 0x1
	0x03548260 STRB W8, [X0 + 0x41]
	0x03548264 RET
	0x03548268 LDRB W0, [X0 + 0x42]
	0x0354826C RET
	0x03548270 AND W8, W1, 0x1
	0x03548274 STRB W8, [X0 + 0x42]
	0x03548278 RET
	0x0354827C LDRB W0, [X0 + 0x43]
	0x03548280 RET
	0x03548284 AND W8, W1, 0x1
	0x03548288 STRB W8, [X0 + 0x43]
	0x0354828C RET
	0x03548290 LDRB W0, [X0 + 0x44]
	0x03548294 RET
	0x03548298 AND W8, W1, 0x1
	0x0354829C STRB W8, [X0 + 0x44]
	0x035482A0 RET
	0x035482A4 STP X30, X21, [X31 - 0x20]!
	0x035482A8 STP X20, X19, [X31 + 0x10]
	0x035482AC ADRP X21, 0xE97000
	0x035482B0 ADRP X20, 0xBEC000
	0x035482B4 LDRB W8, [X21 + 0xC59]
	0x035482B8 LDR X20, [X20 + 0xFC0]
	0x035482BC MOV X19, X0
	0x035482C0 TBNZ X8, 0x0, 0x35482D8
	0x035482C4 ADRP X0, 0xBEC000
	0x035482C8 LDR X0, [X0 + 0xFC0]
	0x035482CC BL 0x1C16CF4
	0x035482D0 MOVZ W8, 0x1
	0x035482D4 STRB W8, [X21 + 0xC59]
	0x035482D8 LDR X0, [X20]
	0x035482DC LDR W8, [X0 + 0xE0]
	0x035482E0 CBNZ W8, 0x35482EC
	0x035482E4 BL 0x1C16DFC
	0x035482E8 LDR X0, [X20]
	0x035482EC LDR X8, [X0 + 0xB8]
	0x035482F0 MOV X0, X19
	0x035482F4 MOV X1, X31
	0x035482F8 LDR X8, [X8]
	0x035482FC STR X8, [X19 + 0x28]
	0x03548300 LDP X20, X19, [X31 + 0x10]
	0x03548304 LDP X30, X21, [X31], #0x20
	0x03548308 B 0x33BDD8C
	0x0354830C STR X30, [X31 - 0x20]!
	0x03548310 STP X20, X19, [X31 + 0x10]
	0x03548314 ADRP X19, 0xE97000
	0x03548318 ADRP X20, 0xBEC000
	0x0354831C LDRB W8, [X19 + 0xC5A]
	0x03548320 LDR X20, [X20 + 0xFC8]
	0x03548324 TBNZ X8, 0x0, 0x354833C
	0x03548328 ADRP X0, 0xBEC000
	0x0354832C LDR X0, [X0 + 0xFC8]
	0x03548330 BL 0x1C16CF4
	0x03548334 MOVZ W8, 0x1
	0x03548338 STRB W8, [X19 + 0xC5A]
	0x0354833C LDR X0, [X20]
	0x03548340 BL 0x1C16F10
	0x03548344 MOV X19, X0
	0x03548348 BL 0x35482A4
	0x0354834C LDR X8, [X20]
	0x03548350 LDR X8, [X8 + 0xB8]
	0x03548354 STR X19, [X8]
	0x03548358 LDP X20, X19, [X31 + 0x10]
	0x0354835C LDR X30, [X31], #0x20
	0x03548360 RET
	0x03548364 MOV X1, X31
	0x03548368 B 0x33BDD8C
	0x0354836C STP X30, X21, [X31 - 0x20]!
	0x03548370 STP X20, X19, [X31 + 0x10]
	0x03548374 MOV X20, X1
	0x03548378 MOV X1, X31
	0x0354837C MOV W19, W2
	0x03548380 MOV X21, X0
	0x03548384 BL 0x33BDD8C
	0x03548388 STR X20, [X21 + 0x10]
	0x0354838C STRB W19, [X21 + 0x18]
	0x03548390 LDP X20, X19, [X31 + 0x10]
	0x03548394 LDP X30, X21, [X31], #0x20
	0x03548398 RET
	0x0354839C STR X30, [X31 - 0x30]!
	0x035483A0 STP X22, X21, [X31 + 0x10]
	0x035483A4 STP X20, X19, [X31 + 0x20]
	0x035483A8 ADRP X20, 0xE97000
	0x035483AC ADRP X22, 0xBEC000
	0x035483B0 ADRP X21, 0xBB4000
	0x035483B4 LDRB W8, [X20 + 0xC5B]
	0x035483B8 LDR X22, [X22 + 0xFD0]
	0x035483BC LDR X21, [X21 + 0x710]
	0x035483C0 MOV X19, X0
	0x035483C4 TBNZ X8, 0x0, 0x35483E8
	0x035483C8 ADRP X0, 0xBEC000
	0x035483CC LDR X0, [X0 + 0xFD0]
	0x035483D0 BL 0x1C16CF4
	0x035483D4 ADRP X0, 0xBB4000
	0x035483D8 LDR X0, [X0 + 0x710]
	0x035483DC BL 0x1C16CF4
	0x035483E0 MOVZ W8, 0x1
	0x035483E4 STRB W8, [X20 + 0xC5B]
	0x035483E8 LDRB W8, [X19 + 0x18]
	0x035483EC LDR X0, [X22]
	0x035483F0 LDR X20, [X19 + 0x10]
	0x035483F4 ADD X1, X31, 0xC
	0x035483F8 STRB W8, [X31 + 0xC]
	0x035483FC BL 0x1C16E04
	0x03548400 LDR X8, [X21]
	0x03548404 MOV X2, X0
	0x03548408 MOV X1, X20
	0x0354840C MOV X3, X31
	0x03548410 MOV X0, X8
	0x03548414 BL 0x3227BD4
	0x03548418 LDP X20, X19, [X31 + 0x20]
	0x0354841C LDP X22, X21, [X31 + 0x10]
	0x03548420 LDR X30, [X31], #0x30
	0x03548424 RET
	0x03548428 STR X30, [X31 - 0x20]!
	0x0354842C STP X20, X19, [X31 + 0x10]
	0x03548430 ADRP X19, 0xE97000
	0x03548434 ADRP X20, 0xBEC000
	0x03548438 LDRB W8, [X19 + 0xC5C]
	0x0354843C LDR X20, [X20 + 0xCB8]
	0x03548440 TBNZ X8, 0x0, 0x3548458
	0x03548444 ADRP X0, 0xBEC000
	0x03548448 LDR X0, [X0 + 0xCB8]
	0x0354844C BL 0x1C16CF4
	0x03548450 MOVZ W8, 0x1
	0x03548454 STRB W8, [X19 + 0xC5C]
	0x03548458 LDR X0, [X20]
	0x0354845C BL 0x1C16F10
	0x03548460 MOV X1, X31
	0x03548464 MOV X19, X0
	0x03548468 BL 0x33BDD8C
	0x0354846C LDR X8, [X20]
	0x03548470 LDR X8, [X8 + 0xB8]
	0x03548474 STR X19, [X8]
	0x03548478 LDP X20, X19, [X31 + 0x10]
	0x0354847C LDR X30, [X31], #0x20
	0x03548480 RET
	0x03548484 SUB X31, X31, 0x40
	0x03548488 STR X30, [X31 + 0x10]
	0x0354848C STP X22, X21, [X31 + 0x20]
	0x03548490 STP X20, X19, [X31 + 0x30]
	0x03548494 ADRP X20, 0xE97000
	0x03548498 ADRP X21, 0xBAB000
	0x0354849C LDRB W8, [X20 + 0xC5D]
	0x035484A0 LDR X21, [X21 + 0x9D0]
	0x035484A4 MOV X19, X0
	0x035484A8 TBNZ X8, 0x0, 0x35484E4
	0x035484AC ADRP X0, 0xBAB000
	0x035484B0 LDR X0, [X0 + 0x758]
	0x035484B4 BL 0x1C16CF4
	0x035484B8 ADRP X0, 0xBEC000
	0x035484BC LDR X0, [X0 + 0xFD0]
	0x035484C0 BL 0x1C16CF4
	0x035484C4 ADRP X0, 0xBAB000
	0x035484C8 LDR X0, [X0 + 0x9D0]
	0x035484CC BL 0x1C16CF4
	0x035484D0 ADRP X0, 0xBB4000
	0x035484D4 LDR X0, [X0 + 0x718]
	0x035484D8 BL 0x1C16CF4
	0x035484DC MOVZ W8, 0x1
	0x035484E0 STRB W8, [X20 + 0xC5D]
	0x035484E4 LDR X0, [X21]
	0x035484E8 MOVZ W1, 0x4
	0x035484EC BL 0x1C16D6C
	0x035484F0 CBZ X0, 0x354862C
	0x035484F4 LDR X21, [X19 + 0x10]
	0x035484F8 MOV X20, X0
	0x035484FC CBZ X21, 0x3548514
	0x03548500 LDR X8, [X20]
	0x03548504 MOV X0, X21
	0x03548508 LDR X1, [X8 + 0x40]
	0x0354850C BL 0x1C16E00
	0x03548510 CBZ X0, 0x3548620
	0x03548514 LDR W8, [X20 + 0x18]
	0x03548518 CBZ W8, 0x354861C
	0x0354851C ADRP X8, 0xBEC000
	0x03548520 LDR X8, [X8 + 0xFD0]
	0x03548524 STR X21, [X20 + 0x20]
	0x03548528 LDRB W9, [X19 + 0x18]
	0x0354852C ADD X1, X31, 0x1C
	0x03548530 LDR X0, [X8]
	0x03548534 STRB W9, [X31 + 0x1C]
	0x03548538 BL 0x1C16E04
	0x0354853C MOV X21, X0
	0x03548540 CBZ X0, 0x3548558
	0x03548544 LDR X8, [X20]
	0x03548548 MOV X0, X21
	0x0354854C LDR X1, [X8 + 0x40]
	0x03548550 BL 0x1C16E00
	0x03548554 CBZ X0, 0x3548620
	0x03548558 LDR W8, [X20 + 0x18]
	0x0354855C CMP W8, 0x1
	0x03548560 B.LS 0x354861C
	0x03548564 ADRP X22, 0xBAB000
	0x03548568 LDR X22, [X22 + 0x758]
	0x0354856C STR X21, [X20 + 0x28]
	0x03548570 LDR W8, [X19 + 0x20]
	0x03548574 ADD X1, X31, 0x18
	0x03548578 LDR X0, [X22]
	0x0354857C STR W8, [X31 + 0x18]
	0x03548580 BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X21, 0xE98000
	012 Move W8, [X21+3153]
	013 Move W25, W5
	014 Move X22, X4
	015 Move X20, X3
	016 Move X24, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0xBAC000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move X0, 0xBAD000
	027 Move X0, [X0+2520]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB5000
	030 Move X0, [X0+1344]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB5000
	033 Move X0, [X0+1560]
	034 Call 0x1C17CF4
	035 Move X0, 0xBB5000
	036 Move X0, [X0+696]
	037 Call 0x1C17CF4
	038 Move X0, 0xBB4000
	039 Move X0, [X0+3016]
	040 Call 0x1C17CF4
	041 Move X0, 0xBB5000
	042 Move X0, [X0+1352]
	043 Call 0x1C17CF4
	044 Move X0, 0xBB5000
	045 Move X0, [X0+1688]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+3153], W8
	049 Move [X31+24], X31
	050 Move W8, [X19+64]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X21, [X19+72]
	053 Compare X21, 0
	054 JumpIfEqual {242}
	055 Move X9, 0xBB4000
	056 Move X8, [X21]
	057 Move X9, [X9+3016]
	058 Move X10, 0xBB5000
	059 Move X1, [X9]
	060 Move X10, [X10+1688]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X26, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move X0, X21
	072 Move W2, W31
	073 Call 0x1C5D788
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Add X8, X8, X9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X3, [X0+8]
	079 Move W1, 3
	080 Move X0, X21
	081 Move X2, X26
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X8, 0xBB5000
	084 Move X8, [X8+696]
	085 Move X21, 0xBB5000
	086 Move X26, 0xBB5000
	087 Move X0, [X8]
	088 Move X21, [X21+1344]
	089 Move X26, [X26+1560]
	090 Call 0x1C17F10
	091 Move X1, [X21]
	092 Move X21, X0
	093 Call Dictionary`2<Byte, Object>..ctor, X0
	094 Move TEMP, X25
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {112}
	098 Move X8, 0xBAC000
	099 Move X8, [X8+2904]
	100 Add X1, X31, 12
	101 Move X0, [X8]
	102 Move W8, 1
	103 Move [X31+12], W8
	104 Call 0x1C17E04
	105 Compare X21, 0
	106 JumpIfEqual {242}
	107 Move X3, [X26]
	108 Move X2, X0
	109 Move W1, 211
	110 Move X0, X21
	111 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	112 Move X25, 0xBB5000
	113 Move X25, [X25+1352]
	114 Compare X20, 0
	115 JumpIfEqual {140}
	116 Move X2, [X20+40]
	117 Compare X2, 0
	118 JumpIfEqual {140}
	119 Compare X21, 0
	120 JumpIfEqual {242}
	121 Move X3, [X26]
	122 Move W1, 221
	123 Move X0, X21
	124 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	125 Move X0, [X25]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1C17DFC
	130 Move X0, [X25]
	131 Move X8, [X0+184]
	132 Move X9, [X19]
	133 Move W1, 230
	134 Move X0, X19
	135 Move X3, [X8]
	136 Move X8, [X9+552]
	137 Move X4, [X9+560]
	138 Move X2, X21
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare X21, 0
	141 JumpIfEqual {242}
	142 Move X3, [X26]
	143 Move W1, 220
	144 Move X0, X21
	145 Move X2, X24
	146 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	147 Move X3, [X26]
	148 Move W1, 224
	149 Move X0, X21
	150 Move X2, X23
	151 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	152 Move X0, X22
	153 Move X1, X31
	154 Call String.IsNullOrEmpty, X0
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {164}
	159 Move X3, [X26]
	160 Move W1, 210
	161 Move X0, X21
	162 Move X2, X22
	163 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	164 Compare X20, 0
	165 JumpIfEqual {210}
	166 Move X0, [X20+48]
	167 Move X1, X31
	168 Call String.IsNullOrEmpty, X0
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {178}
	173 Move X2, [X20+48]
	174 Move X3, [X26]
	175 Move W1, 225
	176 Move X0, X21
	177 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	178 Move W8, [X20+16]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X9, 0xBAD000
	181 Move X9, [X9+2520]
	182 Add X1, X31, 8
	183 Move [X31+8], W8
	184 Move X0, [X9]
	185 Call 0x1C17E04
	186 Move X3, [X26]
	187 Move X2, X0
	188 Move W1, 217
	189 Move X0, X21
	190 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	191 Move X0, [X20+24]
	192 Move X1, X31
	193 Call String.IsNullOrEmpty, X0
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {203}
	198 Move X2, [X20+24]
	199 Move X3, [X26]
	200 Move W1, 216
	201 Move X0, X21
	202 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	203 Move X2, [X20+32]
	204 Compare X2, 0
	205 JumpIfEqual {210}
	206 Move X3, [X26]
	207 Move W1, 214
	208 Move X0, X21
	209 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	210 Move X0, [X25]
	211 Move [X31+24], X31
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Add X0, X31, 24
	217 Move W1, 1
	218 Move X2, X31
	219 Move W20, 1
	220 Call SendOptions.set_Reliability, X0, X1
	221 Move [X31+28], W20
	222 Move X8, [X19]
	223 Move X3, [X31+24]
	224 Move W1, 230
	225 Move X0, X19
	226 Move X9, [X8+552]
	227 Move X4, [X8+560]
	228 Move X2, X21
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X20, [X31+80]
	231 Move X19, [X31+88]
	232 Move X22, [X31+64]
	233 Move X21, [X31+72]
	234 Move X24, [X31+48]
	235 Move X23, [X31+56]
	236 Move X26, [X31+32]
	237 Move X25, [X31+40]
	238 Move X30, [X31+16]
	239 And W0, W0, 1
	240 Add X31, X31, 96
	241 Return X0
	242 Call 0x1C17F20

Method: System.Boolean OpAuthenticateOnce(System.String appId, System.String appVersion, Photon.Realtime.AuthenticationValues authValues, System.String regionCode, Photon.Realtime.EncryptionMode encryptionMode, ExitGames.Client.Photon.ConnectionProtocol expectedProtocol)

Disassembly:
	0x03548584 MOV X21, X0
	0x03548588 CBZ X0, 0x35485A0
	0x0354858C LDR X8, [X20]
	0x03548590 MOV X0, X21
	0x03548594 LDR X1, [X8 + 0x40]
	0x03548598 BL 0x1C16E00
	0x0354859C CBZ X0, 0x3548620
	0x035485A0 LDR W8, [X20 + 0x18]
	0x035485A4 CMP W8, 0x2
	0x035485A8 B.LS 0x354861C
	0x035485AC STR X21, [X20 + 0x30]
	0x035485B0 LDR W8, [X19 + 0x1C]
	0x035485B4 LDR X0, [X22]
	0x035485B8 ADD X1, X31, 0xC
	0x035485BC STR W8, [X31 + 0xC]
	0x035485C0 BL 0x1C16E04
	0x035485C4 MOV X19, X0
	0x035485C8 CBZ X0, 0x35485E0
	0x035485CC LDR X8, [X20]
	0x035485D0 MOV X0, X19
	0x035485D4 LDR X1, [X8 + 0x40]
	0x035485D8 BL 0x1C16E00
	0x035485DC CBZ X0, 0x3548620
	0x035485E0 LDR W8, [X20 + 0x18]
	0x035485E4 CMP W8, 0x3
	0x035485E8 B.LS 0x354861C
	0x035485EC ADRP X8, 0xBB4000
	0x035485F0 LDR X8, [X8 + 0x718]
	0x035485F4 STR X19, [X20 + 0x38]
	0x035485F8 MOV X1, X20
	0x035485FC MOV X2, X31
	0x03548600 LDR X0, [X8]
	0x03548604 BL 0x3227C5C
	0x03548608 LDP X20, X19, [X31 + 0x30]
	0x0354860C LDP X22, X21, [X31 + 0x20]
	0x03548610 LDR X30, [X31 + 0x10]
	0x03548614 ADD X31, X31, 0x40
	0x03548618 RET
	0x0354861C BL 0x1C16F28
	0x03548620 BL 0x1C16F44
	0x03548624 MOV X1, X31
	0x03548628 BL 0x1C16DEC
	0x0354862C BL 0x1C16F20
	0x03548630 LDRB W0, [X0 + 0x10]
	0x03548634 RET
	0x03548638 STRB W1, [X0 + 0x10]
	0x0354863C RET
	0x03548640 LDR X0, [X0 + 0x18]
	0x03548644 RET
	0x03548648 STR X1, [X0 + 0x18]
	0x0354864C RET
	0x03548650 LDR X0, [X0 + 0x20]
	0x03548654 RET
	0x03548658 STR X1, [X0 + 0x20]
	0x0354865C RET
	0x03548660 LDR X0, [X0 + 0x28]
	0x03548664 RET
	0x03548668 STR X1, [X0 + 0x28]
	0x0354866C RET
	0x03548670 LDR X0, [X0 + 0x30]
	0x03548674 RET
	0x03548678 STR X1, [X0 + 0x30]
	0x0354867C RET
	0x03548680 STR X30, [X31 - 0x20]!
	0x03548684 STP X20, X19, [X31 + 0x10]
	0x03548688 MOV X19, X1
	0x0354868C MOVZ W8, 0xFF
	0x03548690 MOV X1, X31
	0x03548694 MOV X20, X0
	0x03548698 STRB W8, [X0 + 0x10]
	0x0354869C BL 0x33BDD8C
	0x035486A0 STR X19, [X20 + 0x30]
	0x035486A4 LDP X20, X19, [X31 + 0x10]
	0x035486A8 LDR X30, [X31], #0x20
	0x035486AC RET
	0x035486B0 STR X30, [X31 - 0x20]!
	0x035486B4 STP X20, X19, [X31 + 0x10]
	0x035486B8 MOV X20, X1
	0x035486BC MOV X19, X0
	0x035486C0 MOV X0, X1
	0x035486C4 MOV X1, X31
	0x035486C8 BL 0x32277A8
	0x035486CC CBZ X19, 0x35486E8
	0x035486D0 ANDS W31, W0, 0x1
	0x035486D4 CSEL X8, X31, X20, NE
	0x035486D8 STR X8, [X19 + 0x20]
	0x035486DC LDP X20, X19, [X31 + 0x10]
	0x035486E0 LDR X30, [X31], #0x20
	0x035486E4 RET
	0x035486E8 BL 0x1C16F20
	0x035486EC STR X1, [X0 + 0x20]
	0x035486F0 RET
	0x035486F4 STR X1, [X0 + 0x20]
	0x035486F8 RET
	0x035486FC STP X30, X25, [X31 - 0x40]!
	0x03548700 STP X24, X23, [X31 + 0x10]
	0x03548704 STP X22, X21, [X31 + 0x20]
	0x03548708 STP X20, X19, [X31 + 0x30]
	0x0354870C ADRP X25, 0xE97000
	0x03548710 ADRP X21, 0xBAB000
	0x03548714 ADRP X23, 0xBB4000
	0x03548718 ADRP X24, 0xBAB000
	0x0354871C LDRB W8, [X25 + 0xC5F]
	0x03548720 LDR X21, [X21 + 0x988]
	0x03548724 LDR X23, [X23 + 0x720]
	0x03548728 LDR X24, [X24 + 0x9D0]
	0x0354872C MOV X20, X2
	0x03548730 MOV X22, X1
	0x03548734 MOV X19, X0
	0x03548738 TBNZ X8, 0x0, 0x3548780
	0x0354873C ADRP X0, 0xBAB000
	0x03548740 LDR X0, [X0 + 0x9D0]
	0x03548744 BL 0x1C16CF4
	0x03548748 ADRP X0, 0xBAD000
	0x0354874C LDR X0, [X0 + 0xA28]
	0x03548750 BL 0x1C16CF4
	0x03548754 ADRP X0, 0xBB4000
	0x03548758 LDR X0, [X0 + 0x728]
	0x0354875C BL 0x1C16CF4
	0x03548760 ADRP X0, 0xBB4000
	0x03548764 LDR X0, [X0 + 0x720]
	0x03548768 BL 0x1C16CF4
	0x0354876C ADRP X0, 0xBAB000
	0x03548770 LDR X0, [X0 + 0x988]
	0x03548774 BL 0x1C16CF4
	0x03548778 MOVZ W8, 0x1
	0x0354877C STRB W8, [X25 + 0xC5F]
	0x03548780 LDR X0, [X19 + 0x18]
	0x03548784 MOV X1, X31
	0x03548788 BL 0x32277A8
	0x0354878C ANDS W31, W0, 0x1
	0x03548790 CSEL X8, X21, X23, NE
	0x03548794 LDR X0, [X24]
	0x03548798 LDR X23, [X8]
	0x0354879C MOVZ W1, 0x4
	0x035487A0 BL 0x1C16D6C
	0x035487A4 CBZ X0, 0x35488C4
	0x035487A8 LDR X24, [X19 + 0x18]
	0x035487AC MOV X21, X0
	0x035487B0 CBZ X24, 0x35487C8
	0x035487B4 LDR X8, [X21]
	0x035487B8 MOV X0, X24
	0x035487BC LDR X1, [X8 + 0x40]
	0x035487C0 BL 0x1C16E00
	0x035487C4 CBZ X0, 0x35488B8
	0x035487C8 LDR W8, [X21 + 0x18]
	0x035487CC CBZ W8, 0x35488B4
	0x035487D0 STR X24, [X21 + 0x20]
	0x035487D4 CBZ X23, 0x35487F0
	0x035487D8 LDR X8, [X21]
	0x035487DC MOV X0, X23
	0x035487E0 LDR X1, [X8 + 0x40]
	0x035487E4 BL 0x1C16E00
	0x035487E8 CBZ X0, 0x35488B8
	0x035487EC LDR W8, [X21 + 0x18]
	0x035487F0 CMP W8, 0x1
	0x035487F4 B.LS 0x35488B4
	0x035487F8 ADRP X8, 0xBAD000
	0x035487FC LDR X8, [X8 + 0xA28]
	0x03548800 STR X23, [X21 + 0x28]
	0x03548804 LDR X0, [X8]
	0x03548808 LDR W8, [X0 + 0xE0]
	0x0354880C CBNZ W8, 0x3548814
	0x03548810 BL 0x1C16DFC
	0x03548814 MOV X0, X22
	0x03548818 MOV X1, X31
	0x0354881C BL 0x3624D20
	0x03548820 MOV X22, X0
	0x03548824 CBZ X0, 0x354883C
	0x03548828 LDR X8, [X21]
	0x0354882C MOV X0, X22
	0x03548830 LDR X1, [X8 + 0x40]
	0x03548834 BL 0x1C16E00
	0x03548838 CBZ X0, 0x35488B8
	0x0354883C LDR W8, [X21 + 0x18]
	0x03548840 CMP W8, 0x2
	0x03548844 B.LS 0x35488B4
	0x03548848 MOV X0, X20
	0x0354884C MOV X1, X31
	0x03548850 STR X22, [X21 + 0x30]
	0x03548854 BL 0x3624D20
	0x03548858 MOV X20, X0
	0x0354885C CBZ X0, 0x3548874
	0x03548860 LDR X8, [X21]
	0x03548864 MOV X0, X20
	0x03548868 LDR X1, [X8 + 0x40]
	0x0354886C BL 0x1C16E00
	0x03548870 CBZ X0, 0x35488B8
	0x03548874 LDR W8, [X21 + 0x18]
	0x03548878 CMP W8, 0x3
	0x0354887C B.LS 0x35488B4
	0x03548880 ADRP X8, 0xBB4000
	0x03548884 LDR X8, [X8 + 0x728]
	0x03548888 STR X20, [X21 + 0x38]
	0x0354888C MOV X1, X21
	0x03548890 MOV X2, X31
	0x03548894 LDR X0, [X8]
	0x03548898 BL 0x3227C5C
	0x0354889C STR X0, [X19 + 0x18]
	0x035488A0 LDP X20, X19, [X31 + 0x30]
	0x035488A4 LDP X22, X21, [X31 + 0x20]
	0x035488A8 LDP X24, X23, [X31 + 0x10]
	0x035488AC LDP X30, X25, [X31], #0x40
	0x035488B0 RET
	0x035488B4 BL 0x1C16F28
	0x035488B8 BL 0x1C16F44
	0x035488BC MOV X1, X31
	0x035488C0 BL 0x1C16DEC
	0x035488C4 BL 0x1C16F20
	0x035488C8 SUB X31, X31, 0x40
	0x035488CC STP X30, X23, [X31 + 0x10]
	0x035488D0 STP X22, X21, [X31 + 0x20]
	0x035488D4 STP X20, X19, [X31 + 0x30]
	0x035488D8 ADRP X20, 0xE97000
	0x035488DC ADRP X22, 0xBAB000
	0x035488E0 ADRP X21, 0xBEC000
	0x035488E4 LDRB W8, [X20 + 0xC60]
	0x035488E8 LDR X22, [X22 + 0x9D0]
	0x035488EC LDR X21, [X21 + 0xFD8]
	0x035488F0 MOV X19, X0
	0x035488F4 TBNZ X8, 0x0, 0x3548954
	0x035488F8 ADRP X0, 0xBEC000
	0x035488FC LDR X0, [X0 + 0xFD8]
	0x03548900 BL 0x1C16CF4
	0x03548904 ADRP X0, 0xBAB000
	0x03548908 LDR X0, [X0 + 0x9D0]
	0x0354890C BL 0x1C16CF4
	0x03548910 ADRP X0, 0xBB4000
	0x03548914 LDR X0, [X0 + 0x738]
	0x03548918 BL 0x1C16CF4
	0x0354891C ADRP X0, 0xBB4000
	0x03548920 LDR X0, [X0 + 0x740]
	0x03548924 BL 0x1C16CF4
	0x03548928 ADRP X0, 0xBB4000
	0x0354892C LDR X0, [X0 + 0x748]
	0x03548930 BL 0x1C16CF4
	0x03548934 ADRP X0, 0xBB4000
	0x03548938 LDR X0, [X0 + 0x750]
	0x0354893C BL 0x1C16CF4
	0x03548940 ADRP X0, 0xBAB000
	0x03548944 LDR X0, [X0 + 0x988]
	0x03548948 BL 0x1C16CF4
	0x0354894C MOVZ W8, 0x1
	0x03548950 STRB W8, [X20 + 0xC60]
	0x03548954 LDR X0, [X22]
	0x03548958 MOVZ W1, 0x5
	0x0354895C BL 0x1C16D6C
	0x03548960 MOV X20, X0
	0x03548964 LDRB W8, [X19 + 0x10]
	0x03548968 LDR X0, [X21]
	0x0354896C ADD X1, X31, 0xC
	0x03548970 STRB W8, [X31 + 0xC]
	0x03548974 BL 0x1C16E04
	0x03548978 CBZ X20, 0x3548AE0
	0x0354897C MOV X21, X0
	0x03548980 CBZ X0, 0x3548998
	0x03548984 LDR X8, [X20]
	0x03548988 MOV X0, X21
	0x0354898C LDR X1, [X8 + 0x40]
	0x03548990 BL 0x1C16E00
	0x03548994 CBZ X0, 0x3548AD4
	0x03548998 LDR W8, [X20 + 0x18]
	0x0354899C CBZ W8, 0x3548AD0
	0x035489A0 STR X21, [X20 + 0x20]
	0x035489A4 LDR X21, [X19 + 0x30]
	0x035489A8 CBZ X21, 0x35489C4
	0x035489AC LDR X8, [X20]
	0x035489B0 MOV X0, X21
	0x035489B4 LDR X1, [X8 + 0x40]
	0x035489B8 BL 0x1C16E00
	0x035489BC CBZ X0, 0x3548AD4
	0x035489C0 LDR W8, [X20 + 0x18]
	0x035489C4 CMP W8, 0x1
	0x035489C8 B.LS 0x3548AD0
	0x035489CC STR X21, [X20 + 0x28]
	0x035489D0 LDR X0, [X19 + 0x18]
	0x035489D4 ADRP X21, 0xBB4000
	0x035489D8 ADRP X22, 0xBB4000
	0x035489DC ADRP X23, 0xBAB000
	0x035489E0 LDR X21, [X21 + 0x750]
	0x035489E4 LDR X22, [X22 + 0x740]
	0x035489E8 LDR X23, [X23 + 0x988]
	0x035489EC MOV X1, X31
	0x035489F0 BL 0x32277A8
	0x035489F4 ANDS W31, W0, 0x1
	0x035489F8 CSEL X8, X22, X23, NE
	0x035489FC LDR X22, [X8]
	0x03548A00 LDR X21, [X21]
	0x03548A04 CBZ X22, 0x3548A1C
	0x03548A08 LDR X8, [X20]
	0x03548A0C MOV X0, X22
	0x03548A10 LDR X1, [X8 + 0x40]
	0x03548A14 BL 0x1C16E00
	0x03548A18 CBZ X0, 0x3548AD4
	0x03548A1C LDR W8, [X20 + 0x18]
	0x03548A20 CMP W8, 0x2
	0x03548A24 B.LS 0x3548AD0
	0x03548A28 STR X22, [X20 + 0x30]
	0x03548A2C LDR X9, [X19 + 0x20]
	0x03548A30 ADRP X10, 0xBB4000
	0x03548A34 LDR X10, [X10 + 0x748]
	0x03548A38 CMP X9, 0x0
	0x03548A3C CSEL X9, X23, X10, EQ
	0x03548A40 LDR X22, [X9]
	0x03548A44 CBZ X22, 0x3548A60
	0x03548A48 LDR X8, [X20]
	0x03548A4C MOV X0, X22
	0x03548A50 LDR X1, [X8 + 0x40]
	0x03548A54 BL 0x1C16E00
	0x03548A58 CBZ X0, 0x3548AD4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X26, 0xE98000
	015 Move W8, [X26+3154]
	016 Move W25, W6
	017 Move W24, W5
	018 Move X21, X4
	019 Move X20, X3
	020 Move X23, X2
	021 Move X22, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {62}
	027 Move X0, 0xBAD000
	028 Move X0, [X0+2520]
	029 Call 0x1C17CF4
	030 Move X0, 0xBB5000
	031 Move X0, [X0+1344]
	032 Call 0x1C17CF4
	033 Move X0, 0xBB5000
	034 Move X0, [X0+1560]
	035 Call 0x1C17CF4
	036 Move X0, 0xBB5000
	037 Move X0, [X0+696]
	038 Call 0x1C17CF4
	039 Move X0, 0xBED000
	040 Move X0, [X0+4016]
	041 Call 0x1C17CF4
	042 Move X0, 0xBB4000
	043 Move X0, [X0+3016]
	044 Call 0x1C17CF4
	045 Move X0, 0xBB5000
	046 Move X0, [X0+1352]
	047 Call 0x1C17CF4
	048 Move X0, 0xBAC000
	049 Move X0, [X0+2760]
	050 Call 0x1C17CF4
	051 Move X0, 0xBB5000
	052 Move X0, [X0+1704]
	053 Call 0x1C17CF4
	054 Move X0, 0xBB5000
	055 Move X0, [X0+1712]
	056 Call 0x1C17CF4
	057 Move X0, 0xBB5000
	058 Move X0, [X0+1720]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X26+3154], W8
	062 Move [X31+40], X31
	063 Move W8, [X19+64]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, 0xBAC000
	066 Move X8, [X8+2760]
	067 Move X26, [X19+72]
	068 Move W1, 6
	069 Move X0, [X8]
	070 Call 0x1C17D6C
	071 Compare X0, 0
	072 JumpIfEqual {320}
	073 Move X8, [X0+24]
	074 Move X27, X0
	075 Compare W8, 0
	076 JumpIfEqual {319}
	077 Move X9, 0xBB5000
	078 Move X9, [X9+1720]
	079 Move X9, [X9]
	080 Move [X27+32], X9
	081 Compare X20, 0
	082 JumpIfEqual {89}
	083 Move X8, [X20]
	084 Move X0, X20
	085 Move X9, [X8+360]
	086 Move X1, [X8+368]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, [X27+24]
	089 Move X0, X31
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X27+40], X0
	093 Move X9, 0xBB5000
	094 Move X9, [X9+1712]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X9, [X9]
	097 Move [X27+48], X9
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X27+56], X21
	100 Move X8, 0xBB5000
	101 Move X8, [X8+1704]
	102 Move X9, 0xBED000
	103 Add X0, X31, 16
	104 Move X1, X31
	105 Move X8, [X8]
	106 Move X9, [X9+4016]
	107 Move [X27+64], X8
	108 Move X8, [X9]
	109 Move TEMP, 0
	110 Not TEMP
	111 Move X9, TEMP
	112 Move [X31+32], W24
	113 Move [X31+16], X8
	114 Move [X31+24], X9
	115 Call Enum.ToString, X0
	116 Move W8, [X27+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X27+72], X0
	119 Move X0, X27
	120 Move X1, X31
	121 Call String.Concat, X0
	122 Compare X26, 0
	123 JumpIfEqual {320}
	124 Move X10, 0xBB4000
	125 Move X8, [X26]
	126 Move X10, [X10+3016]
	127 Move X27, X0
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X1, [X10]
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X26
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X3, [X0+8]
	146 Move W1, 3
	147 Move X0, X26
	148 Move X2, X27
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X8, 0xBB5000
	151 Move X8, [X8+696]
	152 Move X26, 0xBB5000
	153 Move X28, 0xBB5000
	154 Move X27, 0xBB5000
	155 Move X0, [X8]
	156 Move X26, [X26+1344]
	157 Move X28, [X28+1560]
	158 Move X27, [X27+1352]
	159 Call 0x1C17F10
	160 Move X1, [X26]
	161 Move X26, X0
	162 Call Dictionary`2<Byte, Object>..ctor, X0
	163 Compare X20, 0
	164 JumpIfEqual {189}
	165 Move X2, [X20+40]
	166 Compare X2, 0
	167 JumpIfEqual {189}
	168 Compare X26, 0
	169 JumpIfEqual {320}
	170 Move X3, [X28]
	171 Move W1, 221
	172 Move X0, X26
	173 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	174 Move X0, [X27]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1C17DFC
	179 Move X0, [X27]
	180 Move X8, [X0+184]
	181 Move X9, [X19]
	182 Move W1, 231
	183 Move X0, X19
	184 Move X3, [X8]
	185 Move X8, [X9+552]
	186 Move X4, [X9+560]
	187 Move X2, X26
	188 NotImplemented "Instruction BLR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 And W31, W25, 255
	191 Move X29, 0xBAD000
	192 Move X29, [X29+2520]
	193 Add X1, X31, 16
	194 Move [X31+16], W25
	195 Move X0, [X29]
	196 Call 0x1C17E04
	197 Compare X26, 0
	198 JumpIfEqual {320}
	199 Move X3, [X28]
	200 Move X2, X0
	201 Move W1, 195
	202 Move X0, X26
	203 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	204 Move X0, [X29]
	205 Add X1, X31, 12
	206 Move [X31+12], W24
	207 Call 0x1C17E04
	208 Move X3, [X28]
	209 Move X2, X0
	210 Move W1, 193
	211 Move X0, X26
	212 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	213 Move X3, [X28]
	214 Move W1, 220
	215 Move X0, X26
	216 Move X2, X23
	217 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	218 Move X3, [X28]
	219 Move W1, 224
	220 Move X0, X26
	221 Move X2, X22
	222 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	223 Move X0, X21
	224 Move X1, X31
	225 Call String.IsNullOrEmpty, X0
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfEqual {235}
	230 Move X3, [X28]
	231 Move W1, 210
	232 Move X0, X26
	233 Move X2, X21
	234 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	235 Compare X20, 0
	236 JumpIfEqual {284}
	237 Move X0, [X20+48]
	238 Move X1, X31
	239 Call String.IsNullOrEmpty, X0
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfEqual {249}
	244 Move X2, [X20+48]
	245 Move X3, [X28]
	246 Move W1, 225
	247 Move X0, X26
	248 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	249 Move W8, [X20+16]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, [X29]
	252 Add X1, X31, 16
	253 Move [X31+16], W8
	254 Call 0x1C17E04
	255 Move X3, [X28]
	256 Move X2, X0
	257 Move W1, 217
	258 Move X0, X26
	259 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	260 Move X2, [X20+40]
	261 Compare X2, 0
	262 JumpIfEqual {265}
	263 Move X3, [X28]
	264 Move W1, 221
	265 Move X0, [X20+24]
	266 Move X1, X31
	267 Call String.IsNullOrEmpty, X0
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfEqual {277}
	272 Move X2, [X20+24]
	273 Move X3, [X28]
	274 Move W1, 216
	275 Move X0, X26
	276 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	277 Move X2, [X20+32]
	278 Compare X2, 0
	279 JumpIfEqual {284}
	280 Move X3, [X28]
	281 Move W1, 214
	282 Move X0, X26
	283 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	284 Move X0, [X27]
	285 Move [X31+40], X31
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Add X0, X31, 40
	291 Move W1, 1
	292 Move X2, X31
	293 Move W20, 1
	294 Call SendOptions.set_Reliability, X0, X1
	295 Move [X31+44], W20
	296 Move X8, [X19]
	297 Move X3, [X31+40]
	298 Move W1, 231
	299 Move X0, X19
	300 Move X9, [X8+552]
	301 Move X4, [X8+560]
	302 Move X2, X26
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move X20, [X31+128]
	305 Move X19, [X31+136]
	306 Move X22, [X31+112]
	307 Move X21, [X31+120]
	308 Move X24, [X31+96]
	309 Move X23, [X31+104]
	310 Move X26, [X31+80]
	311 Move X25, [X31+88]
	312 Move X28, [X31+64]
	313 Move X27, [X31+72]
	314 Move X29, [X31+48]
	315 Move X30, [X31+56]
	316 And W0, W0, 1
	317 Add X31, X31, 144
	318 Return X0
	319 Call 0x1C17F28
	320 Call 0x1C17F20
	321 Move X0, 0xBAC000
	322 Move X0, [X0+2880]
	323 Call 0x1C17D08
	324 Call 0x1C17F10
	325 Move X19, X0
	326 Move X0, 0xBB5000
	327 Move X0, [X0+1728]
	328 Call 0x1C17D08
	329 Move X1, X0
	330 Move X0, X19
	331 Move X2, X31
	332 Call NotSupportedException..ctor, X0, X1
	333 Move X0, 0xBED000
	334 Move X0, [X0+4024]
	335 Call 0x1C17D08
	336 Move X1, X0
	337 Move X0, X19
	338 Call 0x1C17DEC

Method: System.Boolean OpChangeGroups(System.Byte[] groupsToRemove, System.Byte[] groupsToAdd)

Disassembly:
	0x03548A5C LDR W8, [X20 + 0x18]
	0x03548A60 CMP W8, 0x3
	0x03548A64 B.LS 0x3548AD0
	0x03548A68 STR X22, [X20 + 0x38]
	0x03548A6C LDR X9, [X19 + 0x28]
	0x03548A70 ADRP X10, 0xBB4000
	0x03548A74 LDR X10, [X10 + 0x738]
	0x03548A78 CMP X9, 0x0
	0x03548A7C CSEL X9, X23, X10, EQ
	0x03548A80 LDR X19, [X9]
	0x03548A84 CBZ X19, 0x3548AA0
	0x03548A88 LDR X8, [X20]
	0x03548A8C MOV X0, X19
	0x03548A90 LDR X1, [X8 + 0x40]
	0x03548A94 BL 0x1C16E00
	0x03548A98 CBZ X0, 0x3548AD4
	0x03548A9C LDR W8, [X20 + 0x18]
	0x03548AA0 CMP W8, 0x4
	0x03548AA4 B.LS 0x3548AD0
	0x03548AA8 MOV X0, X21
	0x03548AAC MOV X1, X20
	0x03548AB0 MOV X2, X31
	0x03548AB4 STR X19, [X20 + 0x40]
	0x03548AB8 BL 0x3227C5C
	0x03548ABC LDP X20, X19, [X31 + 0x30]
	0x03548AC0 LDP X22, X21, [X31 + 0x20]
	0x03548AC4 LDP X30, X23, [X31 + 0x10]
	0x03548AC8 ADD X31, X31, 0x40
	0x03548ACC RET
	0x03548AD0 BL 0x1C16F28
	0x03548AD4 BL 0x1C16F44
	0x03548AD8 MOV X1, X31
	0x03548ADC BL 0x1C16DEC
	0x03548AE0 BL 0x1C16F20
	0x03548AE4 STR X30, [X31 - 0x10]!
	0x03548AE8 CBZ X1, 0x3548B18
	0x03548AEC LDRB W8, [X0 + 0x10]
	0x03548AF0 STRB W8, [X1 + 0x10]
	0x03548AF4 LDR X8, [X0 + 0x18]
	0x03548AF8 STR X8, [X1 + 0x18]
	0x03548AFC LDR X8, [X0 + 0x20]
	0x03548B00 STR X8, [X1 + 0x20]
	0x03548B04 LDR X8, [X0 + 0x30]
	0x03548B08 MOV X0, X1
	0x03548B0C STR X8, [X1 + 0x30]
	0x03548B10 LDR X30, [X31], #0x10
	0x03548B14 RET
	0x03548B18 BL 0x1C16F20
	0x03548B1C STP X30, X19, [X31 - 0x10]!
	0x03548B20 ADRP X0, 0xBB4000
	0x03548B24 LDR X0, [X0 + 0x758]
	0x03548B28 BL 0x1C16D08
	0x03548B2C BL 0x1C16F10
	0x03548B30 MOV X1, X31
	0x03548B34 MOV X19, X0
	0x03548B38 BL 0x3380288
	0x03548B3C ADRP X0, 0xBEC000
	0x03548B40 LDR X0, [X0 + 0xFE0]
	0x03548B44 BL 0x1C16D08
	0x03548B48 MOV X1, X0
	0x03548B4C MOV X0, X19
	0x03548B50 BL 0x1C16DEC
	0x03548B54 STP X30, X19, [X31 - 0x10]!
	0x03548B58 ADRP X0, 0xBB4000
	0x03548B5C LDR X0, [X0 + 0x758]
	0x03548B60 BL 0x1C16D08
	0x03548B64 BL 0x1C16F10
	0x03548B68 MOV X1, X31
	0x03548B6C MOV X19, X0
	0x03548B70 BL 0x3380288
	0x03548B74 ADRP X0, 0xBEC000
	0x03548B78 LDR X0, [X0 + 0xFE8]
	0x03548B7C BL 0x1C16D08
	0x03548B80 MOV X1, X0
	0x03548B84 MOV X0, X19
	0x03548B88 BL 0x1C16DEC
	0x03548B8C STP X30, X19, [X31 - 0x10]!
	0x03548B90 ADRP X0, 0xBB4000
	0x03548B94 LDR X0, [X0 + 0x758]
	0x03548B98 BL 0x1C16D08
	0x03548B9C BL 0x1C16F10
	0x03548BA0 MOV X1, X31
	0x03548BA4 MOV X19, X0
	0x03548BA8 BL 0x3380288
	0x03548BAC ADRP X0, 0xBEC000
	0x03548BB0 LDR X0, [X0 + 0xFF0]
	0x03548BB4 BL 0x1C16D08
	0x03548BB8 MOV X1, X0
	0x03548BBC MOV X0, X19
	0x03548BC0 BL 0x1C16DEC
	0x03548BC4 STP X30, X21, [X31 - 0x20]!
	0x03548BC8 STP X20, X19, [X31 + 0x10]
	0x03548BCC ADRP X21, 0xE97000
	0x03548BD0 ADRP X20, 0xBEC000
	0x03548BD4 LDRB W8, [X21 + 0xC61]
	0x03548BD8 LDR X20, [X20 + 0xFF8]
	0x03548BDC MOV X19, X0
	0x03548BE0 TBNZ X8, 0x0, 0x3548BF8
	0x03548BE4 ADRP X0, 0xBEC000
	0x03548BE8 LDR X0, [X0 + 0xFF8]
	0x03548BEC BL 0x1C16CF4
	0x03548BF0 MOVZ W8, 0x1
	0x03548BF4 STRB W8, [X21 + 0xC61]
	0x03548BF8 STRH W31, [X19 + 0x18]
	0x03548BFC LDR X0, [X20]
	0x03548C00 LDR W8, [X0 + 0xE0]
	0x03548C04 CBNZ W8, 0x3548C10
	0x03548C08 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE98000
	008 Move W8, [X22+3155]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0xBB5000
	017 Move X0, [X0+1344]
	018 Call 0x1C17CF4
	019 Move X0, 0xBB5000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0xBB5000
	023 Move X0, [X0+696]
	024 Call 0x1C17CF4
	025 Move X0, 0xBB4000
	026 Move X0, [X0+3016]
	027 Call 0x1C17CF4
	028 Move X0, 0xBB5000
	029 Move X0, [X0+1352]
	030 Call 0x1C17CF4
	031 Move X0, 0xBB5000
	032 Move X0, [X0+1744]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3155], W8
	036 Move W8, [X19+64]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X22, [X19+72]
	039 Compare X22, 0
	040 JumpIfEqual {121}
	041 Move X9, 0xBB4000
	042 Move X8, [X22]
	043 Move X9, [X9+3016]
	044 Move X10, 0xBB5000
	045 Move X1, [X9]
	046 Move X10, [X10+1744]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X23, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X22
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X3, [X0+8]
	065 Move W1, 5
	066 Move X0, X22
	067 Move X2, X23
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, 0xBB5000
	070 Move X8, [X8+696]
	071 Move X22, 0xBB5000
	072 Move X23, 0xBB5000
	073 Move X0, [X8]
	074 Move X22, [X22+1344]
	075 Move X23, [X23+1560]
	076 Call 0x1C17F10
	077 Move X1, [X22]
	078 Move X22, X0
	079 Call Dictionary`2<Byte, Object>..ctor, X0
	080 Compare X21, 0
	081 JumpIfEqual {89}
	082 Compare X22, 0
	083 JumpIfEqual {121}
	084 Move X3, [X23]
	085 Move W1, 239
	086 Move X0, X22
	087 Move X2, X21
	088 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	089 Compare X20, 0
	090 JumpIfEqual {98}
	091 Compare X22, 0
	092 JumpIfEqual {121}
	093 Move X3, [X23]
	094 Move W1, 238
	095 Move X0, X22
	096 Move X2, X20
	097 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	098 Move X20, 0xBB5000
	099 Move X20, [X20+1352]
	100 Move X0, [X20]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X20]
	106 Move X8, [X0+184]
	107 Move X9, [X19]
	108 Move X0, X19
	109 Move X2, X22
	110 Move X3, [X8]
	111 Move X5, [X9+552]
	112 Move X4, [X9+560]
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move W1, 248
	118 Move X30, [X31+48]
	119 Move X23, [X31+56]
	120 CallNoReturn X5
	121 Call 0x1C17F20

Method: System.Boolean OpRaiseEvent(System.Byte eventCode, System.Object customEventContent, Photon.Realtime.RaiseEventOptions raiseEventOptions, ExitGames.Client.Photon.SendOptions sendOptions)

Disassembly:
	0x03548C0C LDR X0, [X20]
	0x03548C10 LDR X8, [X0 + 0xB8]
	0x03548C14 LDR X0, [X8]
	0x03548C18 CBZ X0, 0x3548C3C
	0x03548C1C LDR X8, [X0]
	0x03548C20 MOVZ W1, 0xFF
	0x03548C24 LDP X9, X2, [X8 + 0x1A8]
	0x03548C28 BLR X9
	0x03548C2C STRB W0, [X19 + 0x28]
	0x03548C30 LDP X20, X19, [X31 + 0x10]
	0x03548C34 LDP X30, X21, [X31], #0x20
	0x03548C38 RET
	0x03548C3C BL 0x1C16F20
	0x03548C40 STP X30, X23, [X31 - 0x30]!
	0x03548C44 STP X22, X21, [X31 + 0x10]
	0x03548C48 STP X20, X19, [X31 + 0x20]
	0x03548C4C ADRP X22, 0xE97000
	0x03548C50 ADRP X23, 0xBAB000
	0x03548C54 ADRP X21, 0xBAB000
	0x03548C58 ADRP X20, 0xBED000
	0x03548C5C LDRB W8, [X22 + 0xC62]
	0x03548C60 LDR X23, [X23 + 0x988]
	0x03548C64 LDR X21, [X21 + 0x618]
	0x03548C68 LDR X20, [X20]
	0x03548C6C MOV X19, X0
	0x03548C70 TBNZ X8, 0x0, 0x3548CA0
	0x03548C74 ADRP X0, 0xBAB000
	0x03548C78 LDR X0, [X0 + 0x618]
	0x03548C7C BL 0x1C16CF4
	0x03548C80 ADRP X0, 0xBED000
	0x03548C84 LDR X0, [X0]
	0x03548C88 BL 0x1C16CF4
	0x03548C8C ADRP X0, 0xBAB000
	0x03548C90 LDR X0, [X0 + 0x988]
	0x03548C94 BL 0x1C16CF4
	0x03548C98 MOVZ W8, 0x1
	0x03548C9C STRB W8, [X22 + 0xC62]
	0x03548CA0 LDR X8, [X23]
	0x03548CA4 MOVZ W9, 0xD
	0x03548CA8 STR W9, [X19 + 0x1C]
	0x03548CAC MOVZ W1, 0xD
	0x03548CB0 STR X8, [X19 + 0x10]
	0x03548CB4 LDR X0, [X21]
	0x03548CB8 BL 0x1C16D6C
	0x03548CBC LDR X1, [X20]
	0x03548CC0 MOV X2, X31
	0x03548CC4 MOV X20, X0
	0x03548CC8 BL 0x32C5BD8
	0x03548CCC STR X20, [X19 + 0x20]
	0x03548CD0 MOV X0, X19
	0x03548CD4 LDP X20, X19, [X31 + 0x20]
	0x03548CD8 LDP X22, X21, [X31 + 0x10]
	0x03548CDC MOV X1, X31
	0x03548CE0 LDP X30, X23, [X31], #0x30
	0x03548CE4 B 0x33BDD8C
	0x03548CE8 STP X30, X21, [X31 - 0x20]!
	0x03548CEC STP X20, X19, [X31 + 0x10]
	0x03548CF0 ADRP X19, 0xE97000
	0x03548CF4 ADRP X21, 0xBB2000
	0x03548CF8 ADRP X20, 0xBEC000
	0x03548CFC LDRB W8, [X19 + 0xC63]
	0x03548D00 LDR X21, [X21 + 0x2E8]
	0x03548D04 LDR X20, [X20 + 0xFF8]
	0x03548D08 TBNZ X8, 0x0, 0x3548D2C
	0x03548D0C ADRP X0, 0xBEC000
	0x03548D10 LDR X0, [X0 + 0xFF8]
	0x03548D14 BL 0x1C16CF4
	0x03548D18 ADRP X0, 0xBB2000
	0x03548D1C LDR X0, [X0 + 0x2E8]
	0x03548D20 BL 0x1C16CF4
	0x03548D24 MOVZ W8, 0x1
	0x03548D28 STRB W8, [X19 + 0xC63]
	0x03548D2C LDR X0, [X21]
	0x03548D30 BL 0x1C16F10
	0x03548D34 MOV X1, X31
	0x03548D38 MOV X19, X0
	0x03548D3C BL 0x338E3CC
	0x03548D40 LDR X8, [X20]
	0x03548D44 LDR X8, [X8 + 0xB8]
	0x03548D48 STR X19, [X8]
	0x03548D4C LDP X20, X19, [X31 + 0x10]
	0x03548D50 LDP X30, X21, [X31], #0x20
	0x03548D54 RET
	0x03548D58 STP X30, X21, [X31 - 0x20]!
	0x03548D5C STP X20, X19, [X31 + 0x10]
	0x03548D60 ADRP X21, 0xE97000
	0x03548D64 LDRB W8, [X21 + 0xC64]
	0x03548D68 MOV X20, X1
	0x03548D6C MOV X19, X0
	0x03548D70 TBNZ X8, 0x0, 0x3548DA0
	0x03548D74 ADRP X0, 0xBEC000
	0x03548D78 LDR X0, [X0 + 0xD80]
	0x03548D7C BL 0x1C16CF4
	0x03548D80 ADRP X0, 0xBB4000
	0x03548D84 LDR X0, [X0 + 0x788]
	0x03548D88 BL 0x1C16CF4
	0x03548D8C ADRP X0, 0xBB4000
	0x03548D90 LDR X0, [X0 + 0x790]
	0x03548D94 BL 0x1C16CF4
	0x03548D98 MOVZ W8, 0x1
	0x03548D9C STRB W8, [X21 + 0xC64]
	0x03548DA0 MOV X0, X19
	0x03548DA4 BL 0x3548BC4
	0x03548DA8 LDR X8, [X19 + 0x30]
	0x03548DAC CBNZ X8, 0x3548E68
	0x03548DB0 CBZ X20, 0x3548EE4
	0x03548DB4 ADRP X8, 0xBB4000
	0x03548DB8 LDR X8, [X8 + 0x790]
	0x03548DBC LDR X1, [X8]
	0x03548DC0 MOV X0, X20
	0x03548DC4 MOV X2, X31
	0x03548DC8 BL 0x322BD1C
	0x03548DCC ADRP X9, 0xBB4000
	0x03548DD0 LDR X9, [X9 + 0x788]
	0x03548DD4 MOV W8, W0
	0x03548DD8 LDR X0, [X9]
	0x03548DDC TBZ X8, 0x0, 0x3548E00
	0x03548DE0 BL 0x1C16F10
	0x03548DE4 MOV X21, X0
	0x03548DE8 MOVZ W1, 0x2
	0x03548DEC MOVZ W2, 0x2
	0x03548DF0 MOVZ W3, 0x11
	0x03548DF4 MOV X4, X31
	0x03548DF8 BL 0x36AC13C
	0x03548DFC B 0x3548E1C
	0x03548E00 BL 0x1C16F10
	0x03548E04 MOV X21, X0
	0x03548E08 MOVZ W1, 0x17
	0x03548E0C MOVZ W2, 0x2
	0x03548E10 MOVZ W3, 0x11
	0x03548E14 MOV X4, X31
	0x03548E18 BL 0x36AC13C
	0x03548E1C STR X21, [X19 + 0x30]
	0x03548E20 CBZ X21, 0x3548EE8
	0x03548E24 MOVZ W1, 0x1388
	0x03548E28 MOV X0, X21
	0x03548E2C MOV X2, X31
	0x03548E30 BL 0x36BF3EC
	0x03548E34 LDR X0, [X19 + 0x30]
	0x03548E38 CBZ X0, 0x3548EEC
	0x03548E3C ADRP X8, 0xBEC000
	0x03548E40 LDR X8, [X8 + 0xD80]
	0x03548E44 MOVZ W9, 0x13BF
	0x03548E48 LDR X8, [X8]
	0x03548E4C LDR X8, [X8 + 0xB8]
	0x03548E50 LDRH W8, [X8 + 0x8]
	0x03548E54 CMP W8, 0x0
	0x03548E58 CSEL W2, W9, W8, EQ
	0x03548E5C MOV X1, X20
	0x03548E60 MOV X3, X31
	0x03548E64 BL 0x36C2FF4
	0x03548E68 LDR X8, [X19 + 0x20]
	0x03548E6C CBZ X8, 0x3548ED0
	0x03548E70 LDR X9, [X8 + 0x18]
	0x03548E74 CBZ W9, 0x3548ED4
	0x03548E78 LDRB W10, [X19 + 0x28]
	0x03548E7C SUB W9, W9, 0x1
	0x03548E80 ADD X8, X8, W9, SXTW
	0x03548E84 STRB W10, [X8 + 0x20]
	0x03548E88 LDR X0, [X19 + 0x30]
	0x03548E8C CBZ X0, 0x3548ED8
	0x03548E90 LDR X1, [X19 + 0x20]
	0x03548E94 MOV X2, X31
	0x03548E98 BL 0x36BFE20
	0x03548E9C LDR X8, [X19 + 0x20]
	0x03548EA0 CBZ X8, 0x3548EDC
	0x03548EA4 LDR X9, [X8 + 0x18]
	0x03548EA8 CBZ W9, 0x3548EE0
	0x03548EAC LDRB W10, [X19 + 0x28]
	0x03548EB0 LDP X20, X19, [X31 + 0x10]
	0x03548EB4 SUB W9, W9, 0x1
	0x03548EB8 ADD X8, X8, W9, SXTW
	0x03548EBC ADD W10, W10, 0x1
	0x03548EC0 STRB W10, [X8 + 0x20]
	0x03548EC4 MOV W0, W31
	0x03548EC8 LDP X30, X21, [X31], #0x20
	0x03548ECC RET
	0x03548ED0 BL 0x1C16F20
	0x03548ED4 BL 0x1C16F28
	0x03548ED8 BL 0x1C16F20
	0x03548EDC BL 0x1C16F20
	0x03548EE0 BL 0x1C16F28
	0x03548EE4 BL 0x1C16F20
	0x03548EE8 BL 0x1C16F20
	0x03548EEC BL 0x1C16F20
	0x03548EF0 B 0x3548F1C
	0x03548EF4 B 0x3548F1C
	0x03548EF8 B 0x3548F1C
	0x03548EFC B 0x3548F1C
	0x03548F00 B 0x3548F1C
	0x03548F04 B 0x3548F1C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xE98000
	010 Move W8, [X20+3156]
	011 Move X21, X4
	012 Move X24, X3
	013 Move X22, X2
	014 Move W23, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xBB5000
	021 Move X0, [X0+1752]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB5000
	024 Move X0, [X0+1760]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3156], W8
	028 Move X0, [X19+272]
	029 Compare X0, 0
	030 JumpIfEqual {169}
	031 Move X8, 0xBB5000
	032 Move X8, [X8+1752]
	033 Move X25, 0xBB5000
	034 Move X1, [X8]
	035 Move X25, [X25+1760]
	036 Call 0x24A7860, X0
	037 Move X20, X0
	038 Compare X24, 0
	039 JumpIfEqual {127}
	040 Move W2, [X24+16]
	041 Compare W2, 0
	042 JumpIfEqual {66}
	043 Compare X20, 0
	044 JumpIfEqual {173}
	045 Move W1, 247
	046 Move X0, X20
	047 Move X3, X31
	048 Call ParameterDictionary.Add, X0, X1, X2
	049 Move W8, [X24+16]
	050 Subtract W8, W8, 6
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X9, -44146688
	053 Add X9, X9, 2864
	054 NotImplemented "Instruction ADR not yet implemented."
	055 Move W11, [X9]
	056 Add X10, X10, X11
	057 CallNoReturn X10
	058 Move X8, [X19]
	059 Move X9, [X8+568]
	060 Move X4, [X8+576]
	061 Move W1, 253
	062 Move X0, X19
	063 Move X2, X20
	064 Move X3, X21
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X2, [X24+24]
	067 Compare X2, 0
	068 JumpIfEqual {83}
	069 Compare X20, 0
	070 JumpIfEqual {175}
	071 Move W1, 252
	072 Move X0, X20
	073 Move X3, X31
	074 Call ParameterDictionary.Add, X0, X1, X2
	075 Move X8, [X19]
	076 Move X9, [X8+568]
	077 Move X4, [X8+576]
	078 Move W1, 253
	079 Move X0, X19
	080 Move X2, X20
	081 Move X3, X21
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move W2, [X24+17]
	084 Compare W2, 0
	085 JumpIfEqual {99}
	086 Compare X20, 0
	087 JumpIfEqual {178}
	088 Move W1, 240
	089 Move X0, X20
	090 Move X3, X31
	091 Call ParameterDictionary.Add, X0, X1, X2
	092 Move X2, [X24+24]
	093 Compare X2, 0
	094 JumpIfEqual {129}
	095 Move W1, 252
	096 Move X0, X20
	097 Move X3, X31
	098 Call ParameterDictionary.Add, X0, X1, X2
	099 Move W2, [X24+32]
	100 Compare W2, 0
	101 JumpIfEqual {108}
	102 Compare X20, 0
	103 JumpIfEqual {179}
	104 Move W1, 246
	105 Move X0, X20
	106 Move X3, X31
	107 Call ParameterDictionary.Add, X0, X1, X2
	108 Move X0, [X24+40]
	109 Compare X0, 0
	110 JumpIfEqual {174}
	111 Move X1, X31
	112 Call WebFlags.get_HttpForward, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {127}
	117 Move X8, [X24+40]
	118 Compare X8, 0
	119 JumpIfEqual {176}
	120 Compare X20, 0
	121 JumpIfEqual {177}
	122 Move W2, [X8+16]
	123 Move W1, 234
	124 Move X0, X20
	125 Move X3, X31
	126 Call ParameterDictionary.Add, X0, X1, X2
	127 Compare X20, 0
	128 JumpIfEqual {172}
	129 Move W1, 244
	130 Move X0, X20
	131 Move W2, W23
	132 Move X3, X31
	133 Call ParameterDictionary.Add, X0, X1, X2
	134 Compare X22, 0
	135 JumpIfEqual {141}
	136 Move W1, 245
	137 Move X0, X20
	138 Move X2, X22
	139 Move X3, X31
	140 Call ParameterDictionary.Add, X0, X1, X2
	141 Move X8, [X19]
	142 Move X9, [X8+568]
	143 Move X4, [X8+576]
	144 Move W1, 253
	145 Move X0, X19
	146 Move X2, X20
	147 Move X3, X21
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move W21, W0
	150 Move X22, X31
	151 Move X0, [X19+272]
	152 Compare X0, 0
	153 JumpIfEqual {169}
	154 Move X2, [X25]
	155 Move X1, X20
	156 Call 0x24A75D0, X0, X1
	157 Compare X22, 0
	158 JumpIfNotEqual {170}
	159 And W0, W21, 1
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X22, [X31+32]
	163 Move X21, [X31+40]
	164 Move X24, [X31+16]
	165 Move X23, [X31+24]
	166 Move X30, [X31+64]
	167 Move X25, [X31+72]
	168 Return X0
	169 Call 0x1C17F20
	170 Move X0, X22
	171 Call 0x1C17F18
	172 Call 0x1C17F20
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Call 0x1C17F20
	178 Call 0x1C17F20
	179 Call 0x1C17F20
	180 Move X21, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, X21
	183 Call 0x3EB2AD0
	184 Move X22, [X0]
	185 Call 0x3EB2AE0
	186 Move W21, W31
	187 Move X22, X31
	188 Move X21, X0
	189 Move X0, [X19+272]
	190 Compare X0, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17F20
	193 Move X2, [X25]
	194 Move X1, X20
	195 Call 0x24A75D0, X0, X1
	196 Compare X22, 0
	197 JumpIfNotEqual {200}
	198 Move X0, X21
	199 Call 0x1D2D690
	200 Move X0, X22
	201 Call 0x1C17F18
	202 Call 0x1991590

Method: System.Boolean OpSettings(System.Boolean receiveLobbyStats)

Disassembly:
	0x03548F08 B 0x3548F1C
	0x03548F0C B 0x3548F1C
	0x03548F10 B 0x3548F1C
	0x03548F14 B 0x3548F1C
	0x03548F18 B 0x3548F1C
	0x03548F1C MOV X20, X0
	0x03548F20 CMP W1, 0x1
	0x03548F24 B.NE 0x3548F8C
	0x03548F28 MOV X0, X20
	0x03548F2C BL 0x3EB1AD0
	0x03548F30 MOV X20, X0
	0x03548F34 ADRP X0, 0xBAB000
	0x03548F38 LDR X0, [X0 + 0x7D0]
	0x03548F3C BL 0x1C16D08
	0x03548F40 LDR X8, [X20]
	0x03548F44 LDR X1, [X8]
	0x03548F48 BL 0x1C17270
	0x03548F4C TBZ X0, 0x0, 0x3548F64
	0x03548F50 LDR X20, [X20]
	0x03548F54 BL 0x3EB1AE0
	0x03548F58 MOV X0, X20
	0x03548F5C STR X31, [X19 + 0x30]
	0x03548F60 BL 0x1C16F18
	0x03548F64 MOVZ W0, 0x8
	0x03548F68 BL 0x3EB1AF0
	0x03548F6C LDR X8, [X20]
	0x03548F70 STR X8, [X0]
	0x03548F74 ADRP X1, 0x96C000
	0x03548F78 ADD X1, X1, 0xE58
	0x03548F7C MOV X2, X31
	0x03548F80 BL 0x3EB1B00
	0x03548F84 MOV X20, X0
	0x03548F88 BL 0x3EB1AE0
	0x03548F8C MOV X0, X20
	0x03548F90 BL 0x1D2C690
	0x03548F94 BL 0x1990590
	0x03548F98 STR X30, [X31 - 0x30]!
	0x03548F9C STP X22, X21, [X31 + 0x10]
	0x03548FA0 STP X20, X19, [X31 + 0x20]
	0x03548FA4 ADRP X20, 0xE97000
	0x03548FA8 LDRB W8, [X20 + 0xC65]
	0x03548FAC MOV X19, X0
	0x03548FB0 TBNZ X8, 0x0, 0x3548FC8
	0x03548FB4 ADRP X0, 0xBB4000
	0x03548FB8 LDR X0, [X0 + 0x798]
	0x03548FBC BL 0x1C16CF4
	0x03548FC0 MOVZ W8, 0x1
	0x03548FC4 STRB W8, [X20 + 0xC65]
	0x03548FC8 LDRB W8, [X19 + 0x19]
	0x03548FCC CBZ W8, 0x3548FE4
	0x03548FD0 MOVZ W0, 0x1
	0x03548FD4 LDP X20, X19, [X31 + 0x20]
	0x03548FD8 LDP X22, X21, [X31 + 0x10]
	0x03548FDC LDR X30, [X31], #0x30
	0x03548FE0 RET
	0x03548FE4 LDR X0, [X19 + 0x30]
	0x03548FE8 CBZ X0, 0x3548FD0
	0x03548FEC MOV W1, W31
	0x03548FF0 MOV W2, W31
	0x03548FF4 MOV X3, X31
	0x03548FF8 BL 0x36A987C
	0x03548FFC TBZ X0, 0x0, 0x3549054
	0x03549000 LDR X0, [X19 + 0x30]
	0x03549004 CBZ X0, 0x354908C
	0x03549008 LDR X1, [X19 + 0x20]
	0x0354900C MOV W2, W31
	0x03549010 MOV X3, X31
	0x03549014 BL 0x36C0594
	0x03549018 LDR X8, [X19 + 0x20]
	0x0354901C CBZ X8, 0x3549158
	0x03549020 LDR X9, [X8 + 0x18]
	0x03549024 CBZ W9, 0x3549090
	0x03549028 SUB W9, W9, 0x1
	0x0354902C ADD X8, X8, W9, SXTW
	0x03549030 LDRB W8, [X8 + 0x20]
	0x03549034 LDRB W9, [X19 + 0x28]
	0x03549038 CMP W8, W9
	0x0354903C B.NE 0x354905C
	0x03549040 LDR W8, [X19 + 0x1C]
	0x03549044 CMP W0, W8
	0x03549048 B.NE 0x354905C
	0x0354904C MOVZ W8, 0x1
	0x03549050 B 0x354907C
	0x03549054 MOV W0, W31
	0x03549058 B 0x3548FD4
	0x0354905C ADRP X8, 0xBB3000
	0x03549060 LDR X0, [X19 + 0x10]
	0x03549064 LDR X8, [X8 + 0x798]
	0x03549068 MOV X2, X31
	0x0354906C LDR X1, [X8]
	0x03549070 BL 0x321B938
	0x03549074 MOV W8, W31
	0x03549078 STR X0, [X19 + 0x10]
	0x0354907C MOVZ W0, 0x1
	0x03549080 STRB W8, [X19 + 0x18]
	0x03549084 STRB W0, [X19 + 0x19]
	0x03549088 B 0x3548FD4
	0x0354908C BL 0x1C16F20
	0x03549090 BL 0x1C16F28
	0x03549094 B 0x354909C
	0x03549098 B 0x354909C
	0x0354909C MOV X20, X0
	0x035490A0 CMP W1, 0x1
	0x035490A4 B.NE 0x3549184
	0x035490A8 MOV X0, X20
	0x035490AC BL 0x3EB1AD0
	0x035490B0 MOV X20, X0
	0x035490B4 ADRP X0, 0xBAA000
	0x035490B8 LDR X0, [X0 + 0x7D0]
	0x035490BC BL 0x1C16D08
	0x035490C0 LDR X8, [X20]
	0x035490C4 LDR X1, [X8]
	0x035490C8 BL 0x1C17270
	0x035490CC TBZ X0, 0x0, 0x354915C
	0x035490D0 LDR X21, [X20]
	0x035490D4 BL 0x3EB1AE0
	0x035490D8 LDR X0, [X19 + 0x30]
	0x035490DC CBZ X0, 0x35490EC
	0x035490E0 MOV X1, X31
	0x035490E4 BL 0x36AC3C8
	0x035490E8 STR X31, [X19 + 0x30]
	0x035490EC CBZ X21, 0x3549158
	0x035490F0 LDR X20, [X19 + 0x10]
	0x035490F4 MOV X0, X21
	0x035490F8 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE98000
	007 Move W8, [X21+3157]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0xBAC000
	015 Move X0, [X0+2904]
	016 Call 0x1C17CF4
	017 Move X0, 0xBB5000
	018 Move X0, [X0+1344]
	019 Call 0x1C17CF4
	020 Move X0, 0xBB5000
	021 Move X0, [X0+1768]
	022 Call 0x1C17CF4
	023 Move X0, 0xBB5000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0xBB5000
	027 Move X0, [X0+696]
	028 Call 0x1C17CF4
	029 Move X0, 0xBB4000
	030 Move X0, [X0+3016]
	031 Call 0x1C17CF4
	032 Move X0, 0xBB5000
	033 Move X0, [X0+1352]
	034 Call 0x1C17CF4
	035 Move X0, 0xBB5000
	036 Move X0, [X0+1776]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3157], W8
	040 Move W8, [X19+64]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X21, [X19+72]
	043 Compare X21, 0
	044 JumpIfEqual {136}
	045 Move X9, 0xBB4000
	046 Move X8, [X21]
	047 Move X9, [X9+3016]
	048 Move X10, 0xBB5000
	049 Move X1, [X9]
	050 Move X10, [X10+1776]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X22, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X21
	062 Move W2, W31
	063 Call 0x1C5D788
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X8, X8, X9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X3, [X0+8]
	069 Move W1, 5
	070 Move X0, X21
	071 Move X2, X22
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, 0xBB4000
	074 Move X8, [X8+696]
	075 Move X21, 0xBB4000
	076 Move X0, [X8]
	077 Move X21, [X21+1344]
	078 Call 0x1C17F10
	079 Move X1, [X21]
	080 Move X21, X0
	081 Call Dictionary`2<Byte, Object>..ctor, X0
	082 Move TEMP, X20
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {102}
	086 Move X8, 0xBAB000
	087 Move X8, [X8+2904]
	088 Add X1, X31, 12
	089 Move X0, [X8]
	090 And W8, W20, 1
	091 Move [X31+12], W8
	092 Call 0x1C17E04
	093 Compare X21, 0
	094 JumpIfEqual {136}
	095 Move X8, 0xBB4000
	096 Move X8, [X8+1560]
	097 Move X2, X0
	098 Move X0, X21
	099 Move W1, W31
	100 Move X3, [X8]
	101 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	102 Compare X21, 0
	103 JumpIfEqual {136}
	104 Move X8, 0xBB4000
	105 Move X8, [X8+1768]
	106 Move X0, X21
	107 Move X1, [X8]
	108 Call Dictionary`2<Byte, Object>.get_Count, X0
	109 Compare W0, 0
	110 JumpIfEqual {128}
	111 Move X20, 0xBB4000
	112 Move X20, [X20+1352]
	113 Move X0, [X20]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X20]
	119 Move X8, [X0+184]
	120 Move X9, [X19]
	121 Move W1, 218
	122 Move X0, X19
	123 Move X3, [X8]
	124 Move X8, [X9+552]
	125 Move X4, [X9+560]
	126 Move X2, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move W0, 1
	129 Move X20, [X31+32]
	130 Move X19, [X31+40]
	131 Move X22, [X31+16]
	132 Move X21, [X31+24]
	133 And W0, W0, 1
	134 Move X30, [X31+48]
	135 Return X0
	136 Call 0x1C17F20

