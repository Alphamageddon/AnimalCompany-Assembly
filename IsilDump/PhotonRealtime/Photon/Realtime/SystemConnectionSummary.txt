Type: Photon.Realtime.SystemConnectionSummary

Method: System.Void .ctor(Photon.Realtime.LoadBalancingClient client)

Disassembly:
	0x035513C4 MOV X19, X0
	0x035513C8 BL 0x33BDD8C
	0x035513CC STRB W31, [X19 + 0x10]
	0x035513D0 LDR X8, [X20]
	0x035513D4 LDR X8, [X8 + 0xB8]
	0x035513D8 STR X19, [X8]
	0x035513DC LDP X20, X19, [X31 + 0x10]
	0x035513E0 LDR X30, [X31], #0x20
	0x035513E4 RET
	0x035513E8 STP X30, X23, [X31 - 0x30]!
	0x035513EC STP X22, X21, [X31 + 0x10]
	0x035513F0 STP X20, X19, [X31 + 0x20]
	0x035513F4 ADRP X23, 0xE8E000
	0x035513F8 ADRP X22, 0xBA2000
	0x035513FC ADRP X20, 0xBE4000
	0x03551400 ADRP X21, 0xBE4000
	0x03551404 MOV X19, X8
	0x03551408 LDRB W8, [X23 + 0xCCB]
	0x0355140C LDR X22, [X22 + 0x618]
	0x03551410 LDR X20, [X20 + 0x1E8]
	0x03551414 LDR X21, [X21 + 0x1F0]
	0x03551418 TBNZ X8, 0x0, 0x3551448
	0x0355141C ADRP X0, 0xBA2000
	0x03551420 LDR X0, [X0 + 0x618]
	0x03551424 BL 0x1C16CF4
	0x03551428 ADRP X0, 0xBE4000
	0x0355142C LDR X0, [X0 + 0x1F0]
	0x03551430 BL 0x1C16CF4
	0x03551434 ADRP X0, 0xBE4000
	0x03551438 LDR X0, [X0 + 0x1E8]
	0x0355143C BL 0x1C16CF4
	0x03551440 MOVZ W8, 0x1
	0x03551444 STRB W8, [X23 + 0xCCB]
	0x03551448 LDR X0, [X22]
	0x0355144C MOVZ W1, 0xB45
	0x03551450 BL 0x1C16D6C
	0x03551454 LDR X1, [X20]
	0x03551458 MOV X2, X31
	0x0355145C MOV X20, X0
	0x03551460 BL 0x32C5BD8
	0x03551464 LDR X0, [X22]
	0x03551468 MOVZ W1, 0x1422
	0x0355146C BL 0x1C16D6C
	0x03551470 LDR X1, [X21]
	0x03551474 MOV X2, X31
	0x03551478 MOV X21, X0
	0x0355147C BL 0x32C5BD8
	0x03551480 ADRP X8, 0xFFFFFFFFFD59C000
	0x03551484 LDR V0, [X8 + 0x468]
	0x03551488 STP X20, X21, [X19]
	0x0355148C STRB W31, [X19 + 0x18]
	0x03551490 STUR W31, [X19 + 0x19]
	0x03551494 STR D0, [X19 + 0x10]
	0x03551498 STR W31, [X19 + 0x1C]
	0x0355149C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE8F000
	006 Move W8, [X21+3264]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBE4000
	014 Move X0, [X0+2888]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3264], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Compare X20, 0
	022 JumpIfEqual {36}
	023 Move X0, [X20+16]
	024 Compare X0, 0
	025 JumpIfEqual {65}
	026 Move X1, X31
	027 Call PhotonPeer.get_UsedProtocol, X0
	028 And W8, W0, 7
	029 Move [X19+17], W8
	030 Move X0, [X20+16]
	031 Compare X0, 0
	032 JumpIfEqual {65}
	033 Move X1, X31
	034 Call PhotonPeer.get_SocketErrorCode, X0
	035 Move [X19+28], W0
	036 Move X8, 0xBE4000
	037 Move X8, [X8+2888]
	038 Move X0, X31
	039 Move X8, [X8]
	040 Move X8, [X8+184]
	041 Move W9, [X8]
	042 Move [X19+18], W9
	043 Move W9, [X8+1]
	044 Move [X19+19], W9
	045 Move W9, [X8+2]
	046 Move [X19+20], W9
	047 Move W9, [X8+3]
	048 Move [X19+21], W9
	049 Move W8, [X8+4]
	050 Move [X19+22], W8
	051 Call ConnectionHandler.IsNetworkReachableUnity
	052 Move W8, [X19+28]
	053 And W9, W0, 1
	054 Move W10, 1
	055 Move [X19+23], W9
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move [X19+24], W8
	059 Move [X19+25], W10
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void .ctor(System.Int32 summary)

Disassembly:
	0x035514A0 LDP X22, X21, [X31 + 0x10]
	0x035514A4 LDP X30, X23, [X31], #0x30
	0x035514A8 RET
	0x035514AC MOV X1, X31
	0x035514B0 B 0x33BDD8C
	0x035514B4 STR X30, [X31 - 0x20]!
	0x035514B8 STP X20, X19, [X31 + 0x10]
	0x035514BC ADRP X20, 0xE8E000
	0x035514C0 ADRP X19, 0xBCA000
	0x035514C4 LDRB W8, [X20 + 0xCCD]
	0x035514C8 LDR X19, [X19 + 0x850]
	0x035514CC TBNZ X8, 0x0, 0x35514FC
	0x035514D0 ADRP X0, 0xBCA000
	0x035514D4 LDR X0, [X0 + 0x850]
	0x035514D8 BL 0x1C16CF4
	0x035514DC ADRP X0, 0xBD0000
	0x035514E0 LDR X0, [X0 + 0x990]
	0x035514E4 BL 0x1C16CF4
	0x035514E8 ADRP X0, 0xBA2000
	0x035514EC LDR X0, [X0 + 0x988]
	0x035514F0 BL 0x1C16CF4
	0x035514F4 MOVZ W8, 0x1
	0x035514F8 STRB W8, [X20 + 0xCCD]
	0x035514FC BL 0x3551568
	0x03551500 LDR X8, [X19]
	0x03551504 MOV X19, X0
	0x03551508 LDR W9, [X8 + 0xE0]
	0x0355150C CBNZ W9, 0x3551518
	0x03551510 MOV X0, X8
	0x03551514 BL 0x1C16DFC
	0x03551518 ADRP X20, 0xBA2000
	0x0355151C LDR X20, [X20 + 0x988]
	0x03551520 MOV X0, X19
	0x03551524 MOV X1, X31
	0x03551528 BL 0x32C132C
	0x0355152C CBZ X0, 0x3551544
	0x03551530 LDR X1, [X20]
	0x03551534 MOV X2, X31
	0x03551538 MOV X19, X0
	0x0355153C BL 0x321BA08
	0x03551540 TBZ X0, 0x0, 0x3551550
	0x03551544 ADRP X8, 0xBD0000
	0x03551548 LDR X8, [X8 + 0x990]
	0x0355154C LDR X19, [X8]
	0x03551550 LDR X8, [X20]
	0x03551554 CMP X19, 0x0
	0x03551558 CSEL X0, X8, X19, EQ
	0x0355155C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE8F000
	007 Move X21, 0xBE4000
	008 Move W8, [X22+3265]
	009 Move X21, [X21+3736]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBE4000
	017 Move X0, [X0+3736]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3265], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W8, W20
	030 ShiftRight W8, 28
	031 And W8, W8, 0x7FFFFFFF
	032 Move [X19+16], W8
	033 Move W8, W20
	034 ShiftRight W8, 25
	035 And W8, W8, 0x7FFFFFF
	036 Move [X19+17], W8
	037 Move W8, W20
	038 ShiftRight W8, 23
	039 And W8, W8, 0x7FFFFF
	040 Move [X19+18], W8
	041 Move W8, W20
	042 ShiftRight W8, 22
	043 And W8, W8, 0x3FFFFF
	044 Move [X19+19], W8
	045 Move W8, W20
	046 ShiftRight W8, 21
	047 And W8, W8, 0x1FFFFF
	048 Move [X19+20], W8
	049 Move W8, W20
	050 ShiftRight W8, 20
	051 And W8, W8, 0xFFFFF
	052 Move [X19+21], W8
	053 Move W8, W20
	054 ShiftRight W8, 19
	055 And W8, W8, 0x7FFFF
	056 Move [X19+22], W8
	057 Move W8, W20
	058 ShiftRight W8, 18
	059 And W8, W8, 0x3FFFF
	060 Move [X19+23], W8
	061 Move W8, W20
	062 ShiftRight W8, 17
	063 And W8, W8, 0x1FFFF
	064 Move [X19+24], W8
	065 Move W8, W20
	066 ShiftRight W8, 16
	067 And W8, W8, 0xFFFF
	068 And W9, W20, 0xFFFF
	069 Move [X19+25], W8
	070 Move [X19+28], W9
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return 

Method: System.Int32 ToInt()

Disassembly:
	0x03551580 ADRP X10, 0xFFFFFFFFFD5B5000
	0x03551584 ADD X8, X8, 0x155
	0x03551588 MOVZ W9, 0x9
	0x0355158C ADD X10, X10, 0x724
	0x03551590 MOVZ W11, 0x17
	0x03551594 MOVZ W12, 0x1
	0x03551598 ADD X0, X31, 0x0
	0x0355159C STUR X31, [X31 + 0x24]
	0x035515A0 STP X8, X9, [X31]
	0x035515A4 STP X10, X11, [X31 + 0x10]
	0x035515A8 STR W12, [X31 + 0x20]
	0x035515AC STRB W31, [X31 + 0x2C]
	0x035515B0 BL 0x1C1729C
	0x035515B4 MOV X8, X0
	0x035515B8 STR X0, [X19 + 0xD00]
	0x035515BC BLR X8
	0x035515C0 LDP X30, X19, [X31 + 0x30]
	0x035515C4 ADD X31, X31, 0x40
	0x035515C8 RET
	0x035515CC SUB X31, X31, 0x40
	0x035515D0 STP X30, X23, [X31 + 0x10]
	0x035515D4 STP X22, X21, [X31 + 0x20]
	0x035515D8 STP X20, X19, [X31 + 0x30]
	0x035515DC ADRP X23, 0xE8E000
	0x035515E0 ADRP X22, 0xBCD000
	0x035515E4 LDRB W8, [X23 + 0xCD0]
	0x035515E8 LDR X22, [X22 + 0xB60]
	0x035515EC MOV W19, W2
	0x035515F0 MOV X20, X1
	0x035515F4 MOV X21, X0
	0x035515F8 TBNZ X8, 0x0, 0x355161C
	0x035515FC ADRP X0, 0xBE4000
	0x03551600 LDR X0, [X0 + 0x1F8]
	0x03551604 BL 0x1C16CF4
	0x03551608 ADRP X0, 0xBCD000
	0x0355160C LDR X0, [X0 + 0xB60]
	0x03551610 BL 0x1C16CF4
	0x03551614 MOVZ W8, 0x1
	0x03551618 STRB W8, [X23 + 0xCD0]
	0x0355161C LDR X0, [X22]
	0x03551620 STR X31, [X31 + 0x8]
	0x03551624 LDR W8, [X0 + 0xE0]
	0x03551628 CBNZ W8, 0x3551634
	0x0355162C BL 0x1C16DFC
	0x03551630 LDR X0, [X22]
	0x03551634 LDR X8, [X0 + 0xB8]
	0x03551638 LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE8F000
	006 Move X20, 0xBE4000
	007 Move W8, [X21+3266]
	008 Move X20, [X20+3736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBE4000
	015 Move X0, [X0+3736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3266], W8
	019 Move X0, [X20]
	020 Move W20, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W8, [X19+17]
	026 Move W12, [X19+21]
	027 Move W9, [X19+18]
	028 Move W11, [X19+20]
	029 Move W10, [X19+19]
	030 Move W8, W8
	031 ShiftRight W8, 7
	032 And W8, W8, 63
	033 Move W13, [X19+22]
	034 Or W8, W8, W20
	035 Move W12, W12
	036 ShiftRight W12, 12
	037 And W12, W12, 2047
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Or W11, W12, W11
	040 Or W12, W8, 0x800000
	041 Move W9, [X19+23]
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Move W14, [X19+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Or W10, W8, 0x400000
	046 Move W12, [X19+25]
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Or W10, W11, W13
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Or W8, W10, W8
	051 Or W8, W8, W9
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Or W8, W8, W14
	055 Or W8, W8, W12
	056 Or W0, W8, W15
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return X0

Method: System.String ToString()

Disassembly:
	0x03551678 LDP X30, X23, [X31 + 0x10]
	0x0355167C ADD X31, X31, 0x40
	0x03551680 RET
	0x03551684 BL 0x1C16F20
	0x03551688 LDR W0, [X0 + 0x1C]
	0x0355168C RET
	0x03551690 LDR W0, [X0 + 0x20]
	0x03551694 RET
	0x03551698 SUB X31, X31, 0x50
	0x0355169C STP X30, X23, [X31 + 0x20]
	0x035516A0 STP X22, X21, [X31 + 0x30]
	0x035516A4 STP X20, X19, [X31 + 0x40]
	0x035516A8 MRS X22, 0xC000
	0x035516AC LDR X8, [X22 + 0x28]
	0x035516B0 ADRP X23, 0xE8E000
	0x035516B4 ADRP X21, 0xBCA000
	0x035516B8 MOV W20, W1
	0x035516BC STR X8, [X31 + 0x18]
	0x035516C0 LDRB W8, [X23 + 0xCCE]
	0x035516C4 LDR X21, [X21 + 0x5F0]
	0x035516C8 MOV X19, X0
	0x035516CC TBNZ X8, 0x0, 0x35516E4
	0x035516D0 ADRP X0, 0xBCA000
	0x035516D4 LDR X0, [X0 + 0x5F0]
	0x035516D8 BL 0x1C16CF4
	0x035516DC MOVZ W8, 0x1
	0x035516E0 STRB W8, [X23 + 0xCCE]
	0x035516E4 STR W20, [X19 + 0x30]
	0x035516E8 LDR X0, [X21]
	0x035516EC LDR W20, [X19 + 0x1C]
	0x035516F0 LDR W8, [X0 + 0xE0]
	0x035516F4 CBNZ W8, 0x35516FC
	0x035516F8 BL 0x1C16DFC
	0x035516FC MOVZ W8, 0x4DD3
	0x03551700 MOVK W8, 0x10620000
	0x03551704 SMADDL X8, X20, X8, X31
	0x03551708 UBFM X9, X8, 0x3F, 0x3F
	0x0355170C SBFM X8, X8, 0x26, 0x3F
	0x03551710 ADD W0, W8, W9
	0x03551714 MOV X1, X31
	0x03551718 BL 0x33D8EE8
	0x0355171C MOV X20, X0
	0x03551720 LDR W0, [X19 + 0x30]
	0x03551724 MOV X21, X1
	0x03551728 MOV X1, X31
	0x0355172C BL 0x33D8EE8
	0x03551730 MOV X2, X0
	0x03551734 MOV X3, X1
	0x03551738 MOV X0, X20
	0x0355173C MOV X1, X21
	0x03551740 MOV X4, X31
	0x03551744 BL 0x33D9914
	0x03551748 MOV X20, X0
	0x0355174C MOV X21, X1
	0x03551750 ADD X0, X31, 0x8
	0x03551754 MOVZ W1, 0x2
	0x03551758 MOV X2, X31
	0x0355175C STP X31, X31, [X31 + 0x8]
	0x03551760 BL 0x33D61F0
	0x03551764 LDP X2, X3, [X31 + 0x8]
	0x03551768 MOV X0, X20
	0x0355176C MOV X1, X21
	0x03551770 MOV X4, X31
	0x03551774 BL 0x33D9E18
	0x03551778 MOV X2, X31
	0x0355177C BL 0x33D8FB4
	0x03551780 STR W0, [X19 + 0x18]
	0x03551784 LDR X8, [X22 + 0x28]
	0x03551788 LDR X9, [X31 + 0x18]
	0x0355178C CMP X8, X9
	0x03551790 B.NE 0x35517A8
	0x03551794 LDP X20, X19, [X31 + 0x40]
	0x03551798 LDP X22, X21, [X31 + 0x30]
	0x0355179C LDP X30, X23, [X31 + 0x20]
	0x035517A0 ADD X31, X31, 0x50
	0x035517A4 RET
	0x035517A8 BL 0x3EB1B20
	0x035517AC LDR W0, [X0 + 0x30]
	0x035517B0 RET
	0x035517B4 LDR W0, [X0 + 0x18]
	0x035517B8 RET
	0x035517BC LDR X0, [X0 + 0x10]
	0x035517C0 MOVZ W1, 0xFA3
	0x035517C4 B 0x35517C8
	0x035517C8 STR X30, [X31 - 0x30]!
	0x035517CC STP X22, X21, [X31 + 0x10]
	0x035517D0 STP X20, X19, [X31 + 0x20]
	0x035517D4 ADRP X21, 0xE8E000
	0x035517D8 LDRB W8, [X21 + 0xD63]
	0x035517DC MOV W19, W1
	0x035517E0 MOV X20, X0
	0x035517E4 TBNZ X8, 0x0, 0x3551814
	0x035517E8 ADRP X0, 0xBA2000
	0x035517EC LDR X0, [X0 + 0x9D0]
	0x035517F0 BL 0x1C16CF4
	0x035517F4 ADRP X0, 0xBE4000
	0x035517F8 LDR X0, [X0 + 0x200]
	0x035517FC BL 0x1C16CF4
	0x03551800 ADRP X0, 0xBE4000
	0x03551804 LDR X0, [X0 + 0x208]
	0x03551808 BL 0x1C16CF4
	0x0355180C MOVZ W8, 0x1
	0x03551810 STRB W8, [X21 + 0xD63]
	0x03551814 MOV X0, X20
	0x03551818 MOV X1, X31
	0x0355181C MOV X2, X31
	0x03551820 BL 0x33BE5B0
	0x03551824 TBNZ X0, 0x0, 0x3551904
	0x03551828 ADRP X21, 0xBA2000
	0x0355182C LDR X21, [X21 + 0x9D0]
	0x03551830 ADD X2, X31, 0xC
	0x03551834 MOV X0, X20
	0x03551838 MOV W1, W19
	0x0355183C STR W31, [X31 + 0xC]
	0x03551840 BL 0x35531D8
	0x03551844 LDR X8, [X21]
	0x03551848 MOV W20, W0
	0x0355184C MOVZ W1, 0x2
	0x03551850 MOV X0, X8
	0x03551854 BL 0x1C16D6C
	0x03551858 CBZ X0, 0x355194C
	0x0355185C ADRP X22, 0xBE4000
	0x03551860 LDR X22, [X22 + 0x208]
	0x03551864 MOV X21, X0
	0x03551868 LDR X0, [X22]
	0x0355186C CBZ X0, 0x3551880
	0x03551870 LDR X8, [X21]
	0x03551874 LDR X1, [X8 + 0x40]
	0x03551878 BL 0x1C16E00
	0x0355187C CBZ X0, 0x35518F8
	0x03551880 LDR W8, [X21 + 0x18]
	0x03551884 CBZ W8, 0x35518F4
	0x03551888 LDR X8, [X22]
	0x0355188C ADRP X9, 0xBE4000
	0x03551890 LDR X9, [X9 + 0x200]
	0x03551894 ADD X1, X31, 0x8
	0x03551898 STR X8, [X21 + 0x20]
	0x0355189C STR W19, [X31 + 0x8]
	0x035518A0 LDR X0, [X9]
	0x035518A4 BL 0x1C16E04
	0x035518A8 MOV X19, X0
	0x035518AC CBZ X0, 0x35518C4
	0x035518B0 LDR X8, [X21]
	0x035518B4 MOV X0, X19
	0x035518B8 LDR X1, [X8 + 0x40]
	0x035518BC BL 0x1C16E00
	0x035518C0 CBZ X0, 0x35518F8
	0x035518C4 LDR W8, [X21 + 0x18]
	0x035518C8 CMP W8, 0x1
	0x035518CC B.LS 0x35518F4
	0x035518D0 MOV W0, W20
	0x035518D4 MOV X1, X21
	0x035518D8 STR X19, [X21 + 0x28]
	0x035518DC BL 0x355361C
	0x035518E0 LDR W0, [X31 + 0xC]
	0x035518E4 LDP X20, X19, [X31 + 0x20]
	0x035518E8 LDP X22, X21, [X31 + 0x10]
	0x035518EC LDR X30, [X31], #0x30
	0x035518F0 RET
	0x035518F4 BL 0x1C16F28
	0x035518F8 BL 0x1C16F44
	0x035518FC MOV X1, X31
	0x03551900 BL 0x1C16DEC
	0x03551904 ADRP X0, 0xBCB000
	0x03551908 LDR X0, [X0 + 0x4B8]
	0x0355190C BL 0x1C16D08
	0x03551910 BL 0x1C16F10
	0x03551914 MOV X19, X0
	0x03551918 ADRP X0, 0xBE4000
	0x0355191C LDR X0, [X0 + 0x210]
	0x03551920 BL 0x1C16D08
	0x03551924 MOV X1, X0
	0x03551928 MOV X0, X19
	0x0355192C MOV X2, X31
	0x03551930 BL 0x338C448
	0x03551934 ADRP X0, 0xBE4000
	0x03551938 LDR X0, [X0 + 0x218]
	0x0355193C BL 0x1C16D08
	0x03551940 MOV X1, X0
	0x03551944 MOV X0, X19
	0x03551948 BL 0x1C16DEC
	0x0355194C BL 0x1C16F20
	0x03551950 LDR X0, [X0 + 0x10]
	0x03551954 MOV W2, W1
	0x03551958 MOVZ W1, 0xFA2
	0x0355195C B 0x3551960

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xE8F000
	009 Move X22, 0xBA3000
	010 Move X21, 0xBE4000
	011 Move W8, [X20+3267]
	012 Move X22, [X22+2288]
	013 Move X21, [X21+3736]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {63}
	019 Move X0, 0xBA4000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0xBA3000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0xBA3000
	026 Move X0, [X0+2288]
	027 Call 0x1C17CF4
	028 Move X0, 0xBE4000
	029 Move X0, [X0+3736]
	030 Call 0x1C17CF4
	031 Move X0, 0xBAC000
	032 Move X0, [X0+2776]
	033 Call 0x1C17CF4
	034 Move X0, 0xBAC000
	035 Move X0, [X0+2784]
	036 Call 0x1C17CF4
	037 Move X0, 0xBAC000
	038 Move X0, [X0+2792]
	039 Call 0x1C17CF4
	040 Move X0, 0xBAC000
	041 Move X0, [X0+2800]
	042 Call 0x1C17CF4
	043 Move X0, 0xBAC000
	044 Move X0, [X0+2808]
	045 Call 0x1C17CF4
	046 Move X0, 0xBAC000
	047 Move X0, [X0+2816]
	048 Call 0x1C17CF4
	049 Move X0, 0xBAC000
	050 Move X0, [X0+2824]
	051 Call 0x1C17CF4
	052 Move X0, 0xBAC000
	053 Move X0, [X0+2832]
	054 Call 0x1C17CF4
	055 Move X0, 0xBAC000
	056 Move X0, [X0+2840]
	057 Call 0x1C17CF4
	058 Move X0, 0xBAC000
	059 Move X0, [X0+2848]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X20+3267], W8
	063 Move X0, [X22]
	064 Call 0x1C17F10
	065 Move X1, X31
	066 Move X20, X0
	067 Call StringBuilder..ctor, X0
	068 Move X0, [X21]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X21]
	074 Move X8, [X0+184]
	075 Move X8, [X8]
	076 Compare X8, 0
	077 JumpIfEqual {206}
	078 Move W9, [X19+17]
	079 Move W10, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X10, 0xBA4000
	082 Move X10, [X10+2520]
	083 Add X8, X8, X9
	084 Move W9, [X19+16]
	085 Move X23, 0xBA3000
	086 Move X0, [X10]
	087 Move X24, 0xBAC000
	088 Move X21, [X8+32]
	089 Move X23, [X23+1880]
	090 Move X24, [X24+2816]
	091 Add X1, X31, 12
	092 Move [X31+12], W9
	093 Call 0x1C17E04
	094 Move X22, X0
	095 Move W8, [X19+28]
	096 Move X0, [X23]
	097 Add X1, X31, 8
	098 Move [X31+8], W8
	099 Call 0x1C17E04
	100 Move X8, [X24]
	101 Move X3, X0
	102 Move X1, X22
	103 Move X2, X21
	104 Move X0, X8
	105 Move X4, X31
	106 Call String.Format, X0, X1, X2, X3
	107 Compare X20, 0
	108 JumpIfEqual {206}
	109 Move X1, X0
	110 Move X0, X20
	111 Move X2, X31
	112 Call StringBuilder.Append, X0, X1
	113 Move W8, [X19+18]
	114 Compare W8, 0
	115 JumpIfEqual {122}
	116 Move X8, 0xBAC000
	117 Move X8, [X8+2840]
	118 Move X0, X20
	119 Move X2, X31
	120 Move X1, [X8]
	121 Call StringBuilder.Append, X0, X1
	122 Move W8, [X19+19]
	123 Compare W8, 0
	124 JumpIfEqual {134}
	125 Move X8, 0xBAC000
	126 Move X8, [X8+2784]
	127 Move X0, X20
	128 Move X2, X31
	129 Move X1, [X8]
	130 Call StringBuilder.Append, X0, X1
	131 Move W8, [X19+19]
	132 Compare W8, 0
	133 JumpIfNotEqual {143}
	134 Move W8, [X19+20]
	135 Compare W8, 0
	136 JumpIfEqual {143}
	137 Move X8, 0xBAC000
	138 Move X8, [X8+2808]
	139 Move X0, X20
	140 Move X2, X31
	141 Move X1, [X8]
	142 Call StringBuilder.Append, X0, X1
	143 Move W8, [X19+21]
	144 Compare W8, 0
	145 JumpIfEqual {155}
	146 Move X8, 0xBAC000
	147 Move X8, [X8+2832]
	148 Move X0, X20
	149 Move X2, X31
	150 Move X1, [X8]
	151 Call StringBuilder.Append, X0, X1
	152 Move W8, [X19+21]
	153 Compare W8, 0
	154 JumpIfNotEqual {164}
	155 Move W8, [X19+22]
	156 Compare W8, 0
	157 JumpIfEqual {164}
	158 Move X8, 0xBAC000
	159 Move X8, [X8+2776]
	160 Move X0, X20
	161 Move X2, X31
	162 Move X1, [X8]
	163 Call StringBuilder.Append, X0, X1
	164 Move W8, [X19+23]
	165 Compare W8, 0
	166 JumpIfNotEqual {173}
	167 Move X8, 0xBAC000
	168 Move X8, [X8+2800]
	169 Move X0, X20
	170 Move X2, X31
	171 Move X1, [X8]
	172 Call StringBuilder.Append, X0, X1
	173 Move X21, 0xBAC000
	174 Move X22, 0xBAC000
	175 Move W8, [X19+24]
	176 Move X21, [X21+2792]
	177 Move X22, [X22+2824]
	178 Compare W8, 0
	179 JumpIfNotEqual {186}
	180 Move X8, 0xBAC000
	181 Move X8, [X8+2848]
	182 Move X0, X20
	183 Move X2, X31
	184 Move X1, [X8]
	185 Call StringBuilder.Append, X0, X1
	186 Move W8, [X19+25]
	187 Move X0, X20
	188 Move X2, X31
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CSEL not yet implemented."
	191 Move X1, [X8]
	192 Call StringBuilder.Append, X0, X1
	193 Move X8, [X20]
	194 Move X0, X20
	195 Move X9, [X8+360]
	196 Move X1, [X8+368]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X20, [X31+48]
	199 Move X19, [X31+56]
	200 Move X22, [X31+32]
	201 Move X21, [X31+40]
	202 Move X24, [X31+16]
	203 Move X23, [X31+24]
	204 Move X30, [X31+64]
	205 Return X0
	206 Call 0x1C17F20
	207 Call 0x1C17F28

Method: System.Boolean GetBit(ref System.Int32 value, System.Int32 bitpos)

Disassembly:
	0x03551570 ADRP X19, 0xE8E000
	0x03551574 LDR X8, [X19 + 0xD00]
	0x03551578 CBNZ X8, 0x35515BC
	0x0355157C ADRP X8, 0xFFFFFFFFFD5CD000

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction LSRV not yet implemented."
	003 And W0, W8, 1
	004 Return X0

Method: System.Byte GetBits(ref System.Int32 value, System.Int32 bitpos, System.Byte mask)

Disassembly:
	0x03551560 LDR X30, [X31], #0x20
	0x03551564 RET
	0x03551568 SUB X31, X31, 0x40
	0x0355156C STP X30, X19, [X31 + 0x30]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction ASRV not yet implemented."
	003 And W0, W8, W2
	004 Return X0

Method: System.Void SetBit(ref System.Int32 value, System.Boolean bitval, System.Int32 bitpos)

Disassembly:
	0x03551654 BL 0x2A52D58
	0x03551658 TBZ X0, 0x0, 0x3551670
	0x0355165C LDR X0, [X31 + 0x8]
	0x03551660 CBZ X0, 0x3551684
	0x03551664 MOV X1, X20
	0x03551668 MOV W2, W19
	0x0355166C BL 0x35524BC
	0x03551670 LDP X20, X19, [X31 + 0x30]
	0x03551674 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move W8, [X0]
	002 Move W9, 1
	003 NotImplemented "Instruction LSLV not yet implemented."
	004 And W31, W1, 1
	005 NotImplemented "Instruction BIC not yet implemented."
	006 Or W8, W8, W9
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Move [X0], W8
	009 Return 

Method: System.Void SetBits(ref System.Int32 value, System.Byte bitvals, System.Int32 bitpos)

Disassembly:
	0x0355163C CBZ X0, 0x3551684
	0x03551640 ADRP X8, 0xBE4000
	0x03551644 LDR X8, [X8 + 0x1F8]
	0x03551648 ADD X2, X31, 0x8
	0x0355164C MOV X1, X21
	0x03551650 LDR X3, [X8]

ISIL:
	001 Move W8, [X0]
	002 And W9, W1, 255
	003 NotImplemented "Instruction LSLV not yet implemented."
	004 Or W8, W8, W9
	005 Move [X0], W8
	006 Return 

Method: System.Void .cctor()

Disassembly:
	0x03551960 SUB X31, X31, 0x40
	0x03551964 STP X30, X23, [X31 + 0x10]
	0x03551968 STP X22, X21, [X31 + 0x20]
	0x0355196C STP X20, X19, [X31 + 0x30]
	0x03551970 ADRP X21, 0xE8E000
	0x03551974 LDRB W8, [X21 + 0xD64]
	0x03551978 MOV W19, W2
	0x0355197C MOV W22, W1
	0x03551980 MOV X20, X0
	0x03551984 TBNZ X8, 0x0, 0x35519C0
	0x03551988 ADRP X0, 0xBA2000
	0x0355198C LDR X0, [X0 + 0x758]
	0x03551990 BL 0x1C16CF4
	0x03551994 ADRP X0, 0xBA2000
	0x03551998 LDR X0, [X0 + 0x9D0]
	0x0355199C BL 0x1C16CF4
	0x035519A0 ADRP X0, 0xBE4000
	0x035519A4 LDR X0, [X0 + 0x220]
	0x035519A8 BL 0x1C16CF4
	0x035519AC ADRP X0, 0xBE4000
	0x035519B0 LDR X0, [X0 + 0x228]
	0x035519B4 BL 0x1C16CF4
	0x035519B8 MOVZ W8, 0x1
	0x035519BC STRB W8, [X21 + 0xD64]
	0x035519C0 MOV X0, X20
	0x035519C4 MOV X1, X31
	0x035519C8 MOV X2, X31
	0x035519CC BL 0x33BE5B0
	0x035519D0 TBNZ X0, 0x0, 0x3551AF0
	0x035519D4 ADRP X21, 0xBA2000
	0x035519D8 LDR X21, [X21 + 0x9D0]
	0x035519DC MOV X0, X20
	0x035519E0 MOV W1, W22
	0x035519E4 MOV W2, W19
	0x035519E8 BL 0x3553148
	0x035519EC LDR X8, [X21]
	0x035519F0 MOV W20, W0
	0x035519F4 MOVZ W1, 0x3
	0x035519F8 MOV X0, X8
	0x035519FC BL 0x1C16D6C
	0x03551A00 CBZ X0, 0x3551B38
	0x03551A04 ADRP X23, 0xBE4000
	0x03551A08 LDR X23, [X23 + 0x228]
	0x03551A0C MOV X21, X0
	0x03551A10 LDR X0, [X23]
	0x03551A14 CBZ X0, 0x3551A28
	0x03551A18 LDR X8, [X21]
	0x03551A1C LDR X1, [X8 + 0x40]
	0x03551A20 BL 0x1C16E00
	0x03551A24 CBZ X0, 0x3551AE4
	0x03551A28 LDR W8, [X21 + 0x18]
	0x03551A2C CBZ W8, 0x3551AE0
	0x03551A30 LDR X8, [X23]
	0x03551A34 ADRP X9, 0xBE4000
	0x03551A38 LDR X9, [X9 + 0x220]
	0x03551A3C ADD X1, X31, 0xC
	0x03551A40 STR X8, [X21 + 0x20]
	0x03551A44 STR W22, [X31 + 0xC]
	0x03551A48 LDR X0, [X9]
	0x03551A4C BL 0x1C16E04
	0x03551A50 MOV X22, X0
	0x03551A54 CBZ X0, 0x3551A6C
	0x03551A58 LDR X8, [X21]
	0x03551A5C MOV X0, X22
	0x03551A60 LDR X1, [X8 + 0x40]
	0x03551A64 BL 0x1C16E00
	0x03551A68 CBZ X0, 0x3551AE4
	0x03551A6C LDR W8, [X21 + 0x18]
	0x03551A70 CMP W8, 0x1
	0x03551A74 B.LS 0x3551AE0
	0x03551A78 ADRP X8, 0xBA2000
	0x03551A7C LDR X8, [X8 + 0x758]
	0x03551A80 STR X22, [X21 + 0x28]
	0x03551A84 ADD X1, X31, 0x8
	0x03551A88 STR W19, [X31 + 0x8]
	0x03551A8C LDR X0, [X8]
	0x03551A90 BL 0x1C16E04
	0x03551A94 MOV X19, X0
	0x03551A98 CBZ X0, 0x3551AB0
	0x03551A9C LDR X8, [X21]
	0x03551AA0 MOV X0, X19
	0x03551AA4 LDR X1, [X8 + 0x40]
	0x03551AA8 BL 0x1C16E00
	0x03551AAC CBZ X0, 0x3551AE4
	0x03551AB0 LDR W8, [X21 + 0x18]
	0x03551AB4 CMP W8, 0x2
	0x03551AB8 B.LS 0x3551AE0
	0x03551ABC MOV W0, W20
	0x03551AC0 MOV X1, X21
	0x03551AC4 STR X19, [X21 + 0x30]
	0x03551AC8 BL 0x355361C
	0x03551ACC LDP X20, X19, [X31 + 0x30]
	0x03551AD0 LDP X22, X21, [X31 + 0x20]
	0x03551AD4 LDP X30, X23, [X31 + 0x10]
	0x03551AD8 ADD X31, X31, 0x40
	0x03551ADC RET
	0x03551AE0 BL 0x1C16F28
	0x03551AE4 BL 0x1C16F44
	0x03551AE8 MOV X1, X31
	0x03551AEC BL 0x1C16DEC
	0x03551AF0 ADRP X0, 0xBCB000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE8F000
	005 Move X20, 0xBA3000
	006 Move W8, [X19+3268]
	007 Move X20, [X20+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {44}
	012 Move X0, 0xBA3000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move X0, 0xBE4000
	016 Move X0, [X0+3736]
	017 Call 0x1C17CF4
	018 Move X0, 0xBAC000
	019 Move X0, [X0+2856]
	020 Call 0x1C17CF4
	021 Move X0, 0xBAC000
	022 Move X0, [X0+2864]
	023 Call 0x1C17CF4
	024 Move X0, 0xBAC000
	025 Move X0, [X0+2872]
	026 Call 0x1C17CF4
	027 Move X0, 0xBAC000
	028 Move X0, [X0+2880]
	029 Call 0x1C17CF4
	030 Move X0, 0xBAC000
	031 Move X0, [X0+2888]
	032 Call 0x1C17CF4
	033 Move X0, 0xBAC000
	034 Move X0, [X0+2896]
	035 Call 0x1C17CF4
	036 Move X0, 0xBAC000
	037 Move X0, [X0+2904]
	038 Call 0x1C17CF4
	039 Move X0, 0xBAC000
	040 Move X0, [X0+2912]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+3268], W8
	044 Move X0, [X20]
	045 Move W1, 8
	046 Call 0x1C17D6C
	047 Compare X0, 0
	048 JumpIfEqual {101}
	049 Move W8, [X0+24]
	050 Compare W8, 0
	051 JumpIfEqual {100}
	052 Move X9, 0xBAC000
	053 Move X9, [X9+2904]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, [X9]
	056 Move [X0+32], X9
	057 Move X9, 0xBAC000
	058 Move X9, [X9+2896]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X9, [X9]
	061 Move [X0+40], X9
	062 Move X9, 0xBAC000
	063 Move X9, [X9+2856]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X9, [X9]
	066 Move [X0+48], X9
	067 Move X9, 0xBAC000
	068 Move X9, [X9+2872]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X9]
	071 Move [X0+56], X9
	072 Move X9, 0xBAC000
	073 Move X9, [X9+2880]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X9, [X9]
	076 Move [X0+64], X9
	077 Move X9, 0xBAC000
	078 Move X9, [X9+2864]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X9, [X9]
	081 Move [X0+72], X9
	082 Move X9, 0xBAC000
	083 Move X9, [X9+2888]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X9, [X9]
	086 Move [X0+80], X9
	087 Move X8, 0xBAC000
	088 Move X8, [X8+2912]
	089 Move X9, 0xBE4000
	090 Move X8, [X8]
	091 Move X9, [X9+3736]
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move [X0+88], X8
	095 Move X8, [X9]
	096 Move X8, [X8+184]
	097 Move [X8], X0
	098 Move X30, [X31+32]
	099 Return 
	100 Call 0x1C17F28
	101 Call 0x1C17F20

