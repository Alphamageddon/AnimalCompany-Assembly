Type: Photon.Realtime.PhotonPing

Method: System.Boolean StartPing(System.String ip)

Disassembly:
	0x03549B1C STR X1, [X0 + 0x18]
	0x03549B20 RET
	0x03549B24 LDR X0, [X0 + 0x20]
	0x03549B28 RET
	0x03549B2C STR X1, [X0 + 0x20]
	0x03549B30 RET
	0x03549B34 LDR W0, [X0 + 0x28]
	0x03549B38 RET
	0x03549B3C STR W1, [X0 + 0x28]
	0x03549B40 RET
	0x03549B44 LDR W8, [X0 + 0x28]
	0x03549B48 MOVN W9, 0x80000000
	0x03549B4C CMP W8, W9
	0x03549B50 CSET W0, NE

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xBB4000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xBEC000
	011 Move X0, [X0+4064]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Boolean Done()

Disassembly:
	0x03549B54 RET
	0x03549B58 STP X30, X21, [X31 - 0x20]!
	0x03549B5C STP X20, X19, [X31 + 0x10]
	0x03549B60 MOV X20, X1
	0x03549B64 MOV X1, X31
	0x03549B68 MOV X19, X2
	0x03549B6C MOV X21, X0
	0x03549B70 BL 0x33BDD8C
	0x03549B74 MOV X0, X21
	0x03549B78 MOV X1, X20
	0x03549B7C BL 0x3549B98
	0x03549B80 STR X19, [X21 + 0x20]
	0x03549B84 LDP X20, X19, [X31 + 0x10]
	0x03549B88 MOVN W8, 0x80000000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xBB4000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xBEC000
	011 Move X0, [X0+4072]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Dispose()

Disassembly:
	0x03549B8C STR W8, [X21 + 0x28]
	0x03549B90 LDP X30, X21, [X31], #0x20
	0x03549B94 RET
	0x03549B98 STR X30, [X31 - 0x30]!
	0x03549B9C STP X22, X21, [X31 + 0x10]
	0x03549BA0 STP X20, X19, [X31 + 0x20]
	0x03549BA4 ADRP X21, 0xE96000
	0x03549BA8 LDRB W8, [X21 + 0xC6F]
	0x03549BAC MOV X20, X1
	0x03549BB0 MOV X19, X0
	0x03549BB4 TBNZ X8, 0x0, 0x3549BCC
	0x03549BB8 ADRP X0, 0xBAA000
	0x03549BBC LDR X0, [X0 + 0x988]
	0x03549BC0 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xBB4000
	004 Move X0, [X0+1880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotImplementedException..ctor, X0
	010 Move X0, 0xBEC000
	011 Move X0, [X0+4080]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Init()

Disassembly:
	0x03549BC4 MOVZ W8, 0x1
	0x03549BC8 STRB W8, [X21 + 0xC6F]
	0x03549BCC CBZ X20, 0x3549C48
	0x03549BD0 MOV X0, X20
	0x03549BD4 MOV X1, X31
	0x03549BD8 BL 0x322B5E4
	0x03549BDC CBZ X0, 0x3549C88
	0x03549BE0 MOVZ W1, 0x2F
	0x03549BE4 MOV X2, X31
	0x03549BE8 MOV X20, X0
	0x03549BEC BL 0x322BD98
	0x03549BF0 CMP W0, 0x1
	0x03549BF4 CSEL X22, X31, X19, LT
	0x03549BF8 CSEL X8, X19, X31, LT
	0x03549BFC CMP W0, 0x0
	0x03549C00 B.LE 0x3549C5C
	0x03549C04 MOV W21, W0
	0x03549C08 MOV X0, X20
	0x03549C0C MOV W1, W31
	0x03549C10 MOV W2, W21
	0x03549C14 MOV X3, X31
	0x03549C18 BL 0x3228DE4
	0x03549C1C CBZ X22, 0x3549C88
	0x03549C20 STR X0, [X22 + 0x10]
	0x03549C24 LDR W8, [X20 + 0x10]
	0x03549C28 ORN W9, W31, W21, 0x0
	0x03549C2C ADD W1, W21, 0x1
	0x03549C30 MOV X0, X20
	0x03549C34 ADD W2, W8, W9
	0x03549C38 MOV X3, X31
	0x03549C3C BL 0x3228DE4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE97000
	006 Move X20, 0xBEC000
	007 Move W8, [X21+3169]
	008 Move X20, [X20+4088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBEC000
	015 Move X0, [X0+4088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3169], W8
	019 NotImplemented "Instruction STRH not yet implemented."
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X0, [X8]
	028 Compare X0, 0
	029 JumpIfEqual {41}
	030 Move X8, [X0]
	031 Move W1, 255
	032 Move X9, [X8+424]
	033 Move X2, [X8+432]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move [X19+40], W0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03549C40 CBNZ X19, 0x3549C74
	0x03549C44 B 0x3549C88
	0x03549C48 ADRP X8, 0xBAA000
	0x03549C4C LDR X8, [X8 + 0x988]
	0x03549C50 LDR X0, [X8]
	0x03549C54 STR X0, [X19 + 0x10]
	0x03549C58 B 0x3549C74
	0x03549C5C CBZ X8, 0x3549C88
	0x03549C60 STR X20, [X8 + 0x10]
	0x03549C64 ADRP X8, 0xBAA000
	0x03549C68 LDR X8, [X8 + 0x988]
	0x03549C6C LDR X0, [X8]
	0x03549C70 CBZ X19, 0x3549C88
	0x03549C74 STR X0, [X19 + 0x18]
	0x03549C78 LDP X20, X19, [X31 + 0x20]
	0x03549C7C LDP X22, X21, [X31 + 0x10]
	0x03549C80 LDR X30, [X31], #0x30
	0x03549C84 RET
	0x03549C88 BL 0x1C16F20
	0x03549C8C STP X30, X21, [X31 - 0x20]!
	0x03549C90 STP X20, X19, [X31 + 0x10]
	0x03549C94 MOV X20, X1
	0x03549C98 MOV X1, X31
	0x03549C9C MOV W19, W2
	0x03549CA0 MOV X21, X0
	0x03549CA4 BL 0x33BDD8C
	0x03549CA8 MOV X0, X21
	0x03549CAC MOV X1, X20
	0x03549CB0 BL 0x3549B98
	0x03549CB4 STR W19, [X21 + 0x28]
	0x03549CB8 LDP X20, X19, [X31 + 0x10]
	0x03549CBC LDP X30, X21, [X31], #0x20
	0x03549CC0 RET
	0x03549CC4 MOV W1, W31
	0x03549CC8 B 0x3549CCC
	0x03549CCC SUB X31, X31, 0x30
	0x03549CD0 STP X30, X21, [X31 + 0x10]
	0x03549CD4 STP X20, X19, [X31 + 0x20]
	0x03549CD8 ADRP X21, 0xE96000
	0x03549CDC LDRB W8, [X21 + 0xC70]
	0x03549CE0 MOV W20, W1
	0x03549CE4 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE97000
	008 Move X23, 0xBAB000
	009 Move X21, 0xBAB000
	010 Move X20, 0xBED000
	011 Move W8, [X22+3170]
	012 Move X23, [X23+2440]
	013 Move X21, [X21+1560]
	014 Move X20, [X20]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xBAB000
	021 Move X0, [X0+1560]
	022 Call 0x1C17CF4
	023 Move X0, 0xBED000
	024 Move X0, [X0]
	025 Call 0x1C17CF4
	026 Move X0, 0xBAB000
	027 Move X0, [X0+2440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+3170], W8
	031 Move X8, [X23]
	032 Move W9, 13
	033 Move [X19+28], W9
	034 Move W1, 13
	035 Move [X19+16], X8
	036 Move X0, [X21]
	037 Call 0x1C17D6C
	038 Move X1, [X20]
	039 Move X2, X31
	040 Move X20, X0
	041 Call RuntimeHelpers.InitializeArray, X0, X1
	042 Move [X19+32], X20
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call Object..ctor, X0
	052 Return 

Method: System.Void .cctor()

Disassembly:
	0x03549CE8 TBNZ X8, 0x0, 0x3549D24
	0x03549CEC ADRP X0, 0xBAA000
	0x03549CF0 LDR X0, [X0 + 0x758]
	0x03549CF4 BL 0x1C16CF4
	0x03549CF8 ADRP X0, 0xBAB000
	0x03549CFC LDR X0, [X0 + 0xEC8]
	0x03549D00 BL 0x1C16CF4
	0x03549D04 ADRP X0, 0xBB2000
	0x03549D08 LDR X0, [X0 + 0xFF0]
	0x03549D0C BL 0x1C16CF4
	0x03549D10 ADRP X0, 0xBB3000
	0x03549D14 LDR X0, [X0 + 0x810]
	0x03549D18 BL 0x1C16CF4
	0x03549D1C MOVZ W8, 0x1
	0x03549D20 STRB W8, [X21 + 0xC70]
	0x03549D24 LDP X21, X0, [X19 + 0x10]
	0x03549D28 MOV X1, X31
	0x03549D2C BL 0x32277A8
	0x03549D30 TBNZ X0, 0x0, 0x3549D54
	0x03549D34 ADRP X8, 0xBAB000
	0x03549D38 LDR X8, [X8 + 0xEC8]
	0x03549D3C LDR X2, [X19 + 0x18]
	0x03549D40 MOV X0, X21
	0x03549D44 MOV X3, X31
	0x03549D48 LDR X1, [X8]
	0x03549D4C BL 0x32274B8
	0x03549D50 MOV X21, X0
	0x03549D54 ADRP X9, 0xBAA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xE97000
	006 Move X21, 0xBB2000
	007 Move X20, 0xBEC000
	008 Move W8, [X19+3171]
	009 Move X21, [X21+744]
	010 Move X20, [X20+4088]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xBEC000
	016 Move X0, [X0+4088]
	017 Call 0x1C17CF4
	018 Move X0, 0xBB2000
	019 Move X0, [X0+744]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3171], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Random..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

