Type: SpatialSys.ObservableState.AutoRegisteredTypeIDManifest

Method: System.Int32 get_numRegisteredTypes()

Disassembly:
	0x035D2E40 ADRP X0, 0xB49000
	0x035D2E44 LDR X0, [X0 + 0xBC8]
	0x035D2E48 BL 0x1C16CF4
	0x035D2E4C ADRP X0, 0xB49000
	0x035D2E50 LDR X0, [X0 + 0xBD0]
	0x035D2E54 BL 0x1C16CF4
	0x035D2E58 ADRP X0, 0xB49000
	0x035D2E5C LDR X0, [X0 + 0xBE8]
	0x035D2E60 BL 0x1C16CF4
	0x035D2E64 MOVZ W8, 0x1
	0x035D2E68 STRB W8, [X20 + 0x21F]
	0x035D2E6C LDR X0, [X21]
	0x035D2E70 BL 0x1C16F10
	0x035D2E74 LDR X1, [X19]
	0x035D2E78 MOV X19, X0
	0x035D2E7C BL 0x29D8BFC
	0x035D2E80 CBZ X19, 0x35D2F2C
	0x035D2E84 ADRP X8, 0xB49000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE0F000
	005 Move W8, [X20+532]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB2C000
	012 Move X0, [X0+2760]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+532], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move W0, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Collections.Generic.IReadOnlyList`1<System.Type> get_registeredTypes()

Disassembly:
	0x035D2E88 ADRP X20, 0xB66000
	0x035D2E8C LDR X8, [X8 + 0xBC8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void .ctor(System.Type rootStateObjectType)

Disassembly:
	0x035D2E90 LDR X20, [X20 + 0x7C8]
	0x035D2E94 ADRP X21, 0xB49000
	0x035D2E98 ADRP X22, 0xB49000
	0x035D2E9C LDR X2, [X8]
	0x035D2EA0 LDR X3, [X20]
	0x035D2EA4 ADRP X23, 0xB49000
	0x035D2EA8 LDR X21, [X21 + 0xBD0]
	0x035D2EAC LDR X22, [X22 + 0xBE8]
	0x035D2EB0 LDR X23, [X23 + 0xBB0]
	0x035D2EB4 MOVZ W1, 0x1
	0x035D2EB8 MOV X0, X19
	0x035D2EBC BL 0x29D94B4
	0x035D2EC0 LDR X2, [X21]
	0x035D2EC4 LDR X3, [X20]
	0x035D2EC8 MOVZ W1, 0x2
	0x035D2ECC MOV X0, X19
	0x035D2ED0 BL 0x29D94B4
	0x035D2ED4 LDR X2, [X21]
	0x035D2ED8 LDR X3, [X20]
	0x035D2EDC MOVZ W1, 0x4
	0x035D2EE0 MOV X0, X19
	0x035D2EE4 BL 0x29D94B4
	0x035D2EE8 LDR X2, [X22]
	0x035D2EEC LDR X3, [X20]
	0x035D2EF0 MOVZ W1, 0x3
	0x035D2EF4 MOV X0, X19
	0x035D2EF8 BL 0x29D94B4
	0x035D2EFC LDR X2, [X22]
	0x035D2F00 LDR X3, [X20]
	0x035D2F04 MOVZ W1, 0x5
	0x035D2F08 MOV X0, X19
	0x035D2F0C BL 0x29D94B4
	0x035D2F10 LDR X8, [X23]
	0x035D2F14 LDP X22, X21, [X31 + 0x10]
	0x035D2F18 LDR X8, [X8 + 0xB8]
	0x035D2F1C STR X19, [X8]
	0x035D2F20 LDP X20, X19, [X31 + 0x20]
	0x035D2F24 LDP X30, X23, [X31], #0x30
	0x035D2F28 RET
	0x035D2F2C BL 0x1C16F20
	0x035D2F30 RET
	0x035D2F34 RET
	0x035D2F38 RET
	0x035D2F3C RET
	0x035D2F40 RET
	0x035D2F44 RET
	0x035D2F48 MOV W0, W31
	0x035D2F4C RET
	0x035D2F50 RET
	0x035D2F54 RET
	0x035D2F58 MOV X1, X31
	0x035D2F5C B 0x33BDD8C
	0x035D2F60 MOV X1, X31
	0x035D2F64 B 0x33A51F0
	0x035D2F68 STP X29, X30, [X31 - 0x60]!
	0x035D2F6C STP X28, X27, [X31 + 0x10]
	0x035D2F70 STP X26, X25, [X31 + 0x20]
	0x035D2F74 STP X24, X23, [X31 + 0x30]
	0x035D2F78 STP X22, X21, [X31 + 0x40]
	0x035D2F7C STP X20, X19, [X31 + 0x50]
	0x035D2F80 ADRP X25, 0xE0E000
	0x035D2F84 ADRP X24, 0xB4A000
	0x035D2F88 ADRP X19, 0xB4A000
	0x035D2F8C ADRP X23, 0xB4A000
	0x035D2F90 ADRP X21, 0xB66000
	0x035D2F94 ADRP X20, 0xB66000
	0x035D2F98 ADRP X22, 0xB66000
	0x035D2F9C LDR X24, [X24 + 0x358]
	0x035D2FA0 LDRB W8, [X25 + 0x220]
	0x035D2FA4 LDR X19, [X19 + 0x350]
	0x035D2FA8 LDR X23, [X23 + 0x2A0]
	0x035D2FAC LDR X21, [X21 + 0x7D0]
	0x035D2FB0 LDR X20, [X20 + 0x7D8]
	0x035D2FB4 LDR X22, [X22 + 0x7E0]
	0x035D2FB8 TBNZ X8, 0x0, 0x35D372C
	0x035D2FBC ADRP X0, 0xB4A000
	0x035D2FC0 LDR X0, [X0 + 0x350]
	0x035D2FC4 BL 0x1C16CF4
	0x035D2FC8 ADRP X0, 0xB4A000
	0x035D2FCC LDR X0, [X0 + 0x358]
	0x035D2FD0 BL 0x1C16CF4
	0x035D2FD4 ADRP X0, 0xB66000
	0x035D2FD8 LDR X0, [X0 + 0x7E8]
	0x035D2FDC BL 0x1C16CF4
	0x035D2FE0 ADRP X0, 0xB66000
	0x035D2FE4 LDR X0, [X0 + 0x7F0]
	0x035D2FE8 BL 0x1C16CF4
	0x035D2FEC ADRP X0, 0xB66000
	0x035D2FF0 LDR X0, [X0 + 0x7F8]
	0x035D2FF4 BL 0x1C16CF4
	0x035D2FF8 ADRP X0, 0xB66000
	0x035D2FFC LDR X0, [X0 + 0x800]
	0x035D3000 BL 0x1C16CF4
	0x035D3004 ADRP X0, 0xB65000
	0x035D3008 LDR X0, [X0 + 0x808]
	0x035D300C BL 0x1C16CF4
	0x035D3010 ADRP X0, 0xB65000
	0x035D3014 LDR X0, [X0 + 0x810]
	0x035D3018 BL 0x1C16CF4
	0x035D301C ADRP X0, 0xB65000
	0x035D3020 LDR X0, [X0 + 0x818]
	0x035D3024 BL 0x1C16CF4
	0x035D3028 ADRP X0, 0xB65000
	0x035D302C LDR X0, [X0 + 0x820]
	0x035D3030 BL 0x1C16CF4
	0x035D3034 ADRP X0, 0xB65000
	0x035D3038 LDR X0, [X0 + 0x828]
	0x035D303C BL 0x1C16CF4
	0x035D3040 ADRP X0, 0xB65000
	0x035D3044 LDR X0, [X0 + 0x830]
	0x035D3048 BL 0x1C16CF4
	0x035D304C ADRP X0, 0xB65000
	0x035D3050 LDR X0, [X0 + 0x838]
	0x035D3054 BL 0x1C16CF4
	0x035D3058 ADRP X0, 0xB65000
	0x035D305C LDR X0, [X0 + 0x840]
	0x035D3060 BL 0x1C16CF4
	0x035D3064 ADRP X0, 0xB65000
	0x035D3068 LDR X0, [X0 + 0x848]
	0x035D306C BL 0x1C16CF4
	0x035D3070 ADRP X0, 0xB65000
	0x035D3074 LDR X0, [X0 + 0x850]
	0x035D3078 BL 0x1C16CF4
	0x035D307C ADRP X0, 0xB65000
	0x035D3080 LDR X0, [X0 + 0x858]
	0x035D3084 BL 0x1C16CF4
	0x035D3088 ADRP X0, 0xB65000
	0x035D308C LDR X0, [X0 + 0x860]
	0x035D3090 BL 0x1C16CF4
	0x035D3094 ADRP X0, 0xB65000
	0x035D3098 LDR X0, [X0 + 0x868]
	0x035D309C BL 0x1C16CF4
	0x035D30A0 ADRP X0, 0xB65000
	0x035D30A4 LDR X0, [X0 + 0x870]
	0x035D30A8 BL 0x1C16CF4
	0x035D30AC ADRP X0, 0xB65000
	0x035D30B0 LDR X0, [X0 + 0x878]
	0x035D30B4 BL 0x1C16CF4
	0x035D30B8 ADRP X0, 0xB65000
	0x035D30BC LDR X0, [X0 + 0x880]
	0x035D30C0 BL 0x1C16CF4
	0x035D30C4 ADRP X0, 0xB65000
	0x035D30C8 LDR X0, [X0 + 0x888]
	0x035D30CC BL 0x1C16CF4
	0x035D30D0 ADRP X0, 0xB65000
	0x035D30D4 LDR X0, [X0 + 0x890]
	0x035D30D8 BL 0x1C16CF4
	0x035D30DC ADRP X0, 0xB65000
	0x035D30E0 LDR X0, [X0 + 0x898]
	0x035D30E4 BL 0x1C16CF4
	0x035D30E8 ADRP X0, 0xB65000
	0x035D30EC LDR X0, [X0 + 0x8A0]
	0x035D30F0 BL 0x1C16CF4
	0x035D30F4 ADRP X0, 0xB65000
	0x035D30F8 LDR X0, [X0 + 0x8A8]
	0x035D30FC BL 0x1C16CF4
	0x035D3100 ADRP X0, 0xB65000
	0x035D3104 LDR X0, [X0 + 0x8B0]
	0x035D3108 BL 0x1C16CF4
	0x035D310C ADRP X0, 0xB65000
	0x035D3110 LDR X0, [X0 + 0x8B8]
	0x035D3114 BL 0x1C16CF4
	0x035D3118 ADRP X0, 0xB65000
	0x035D311C LDR X0, [X0 + 0x8C0]
	0x035D3120 BL 0x1C16CF4
	0x035D3124 ADRP X0, 0xB65000
	0x035D3128 LDR X0, [X0 + 0x8C8]
	0x035D312C BL 0x1C16CF4
	0x035D3130 ADRP X0, 0xB65000
	0x035D3134 LDR X0, [X0 + 0x8D0]
	0x035D3138 BL 0x1C16CF4
	0x035D313C ADRP X0, 0xB65000
	0x035D3140 LDR X0, [X0 + 0x8D8]
	0x035D3144 BL 0x1C16CF4
	0x035D3148 ADRP X0, 0xB65000
	0x035D314C LDR X0, [X0 + 0x8E0]
	0x035D3150 BL 0x1C16CF4
	0x035D3154 ADRP X0, 0xB65000
	0x035D3158 LDR X0, [X0 + 0x8E8]
	0x035D315C BL 0x1C16CF4
	0x035D3160 ADRP X0, 0xB65000
	0x035D3164 LDR X0, [X0 + 0x8F0]
	0x035D3168 BL 0x1C16CF4
	0x035D316C ADRP X0, 0xB65000
	0x035D3170 LDR X0, [X0 + 0x8F8]
	0x035D3174 BL 0x1C16CF4
	0x035D3178 ADRP X0, 0xB65000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X23, 0xE0F000
	013 Move X21, 0xB67000
	014 Move X22, 0xB22000
	015 Move W8, [X23+533]
	016 Move X21, [X21+1424]
	017 Move X22, [X22+1728]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {65}
	024 Move X0, 0xB67000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move X0, 0xB2C000
	028 Move X0, [X0+2048]
	029 Call 0x1C17CF4
	030 Move X0, 0xB67000
	031 Move X0, [X0+1832]
	032 Call 0x1C17CF4
	033 Move X0, 0xB67000
	034 Move X0, [X0+1840]
	035 Call 0x1C17CF4
	036 Move X0, 0xB67000
	037 Move X0, [X0+1848]
	038 Call 0x1C17CF4
	039 Move X0, 0xB67000
	040 Move X0, [X0+1856]
	041 Call 0x1C17CF4
	042 Move X0, 0xB2C000
	043 Move X0, [X0+2320]
	044 Call 0x1C17CF4
	045 Move X0, 0xB67000
	046 Move X0, [X0+1864]
	047 Call 0x1C17CF4
	048 Move X0, 0xB2C000
	049 Move X0, [X0+2328]
	050 Call 0x1C17CF4
	051 Move X0, 0xB54000
	052 Move X0, [X0+888]
	053 Call 0x1C17CF4
	054 Move X0, 0xB2C000
	055 Move X0, [X0+2336]
	056 Call 0x1C17CF4
	057 Move X0, 0xB67000
	058 Move X0, [X0+1424]
	059 Call 0x1C17CF4
	060 Move X0, 0xB22000
	061 Move X0, [X0+1728]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X23+533], W8
	065 Move X0, X19
	066 Move X1, X31
	067 Move [X31+8], X31
	068 Move [X31+16], X31
	069 Move [X31+24], X31
	070 Call Object..ctor, X0
	071 Move X0, [X22]
	072 Move X21, [X21]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X21
	078 Move X1, X31
	079 Call Type.GetTypeFromHandle, X0
	080 Compare X0, 0
	081 JumpIfEqual {165}
	082 Move X8, [X0]
	083 Move X1, X20
	084 Move X9, [X8+680]
	085 Move X2, [X8+688]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {166}
	091 Move X8, 0xB2C000
	092 Move X8, [X8+2328]
	093 Move X21, 0xB2C000
	094 Move X0, [X8]
	095 Move X21, [X21+2320]
	096 Call 0x1C17F10
	097 Move X1, [X21]
	098 Move X21, X0
	099 Call HashSet`1<Object>..ctor, X0
	100 Move X0, X19
	101 Move X1, X21
	102 Move X2, X20
	103 Call AutoRegisteredTypeIDManifest.SearchRecursiveForPrimitiveTypes, X0, X1, X2
	104 Compare X21, 0
	105 JumpIfEqual {165}
	106 Move X8, 0xB2C000
	107 Move X8, [X8+2336]
	108 Move X22, 0xB53000
	109 Move X25, 0xB2B000
	110 Move X26, 0xB66000
	111 Move X22, [X22+888]
	112 Move X25, [X25+2048]
	113 Move X26, [X26+1824]
	114 Move X0, [X8]
	115 Move X27, 0xB66000
	116 Move X24, 0xB66000
	117 Move X23, 0xB66000
	118 Move W20, [X21+32]
	119 Move X27, [X27+1856]
	120 Move X24, [X24+1840]
	121 Move X23, [X23+1832]
	122 Call 0x1C17F10
	123 Move X2, [X22]
	124 Move W1, W20
	125 Move X22, X0
	126 Call List`1<Object>..ctor, X0, X1
	127 Move [X19+16], X22
	128 Move X0, [X25]
	129 Move W20, [X21+32]
	130 Call 0x1C17F10
	131 Move X2, [X26]
	132 Move W1, W20
	133 Move X22, X0
	134 Call Dictionary`2<Object, Int32>..ctor, X0, X1
	135 Move [X19+24], X22
	136 Move X1, [X27]
	137 Add X8, X31, 8
	138 Move X0, X21
	139 Call HashSet`1<Object>.GetEnumerator, X0
	140 Move X1, [X24]
	141 Add X0, X31, 8
	142 Call Enumerator<Object>.MoveNext, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {150}
	147 Move X1, [X31+24]
	148 Move X0, X19
	149 Call AutoRegisteredTypeIDManifest.RegisterType, X0, X1
	150 Move X1, [X23]
	151 Add X0, X31, 8
	152 Call Enumerator<Object>.Dispose, X0
	153 Move X20, [X31+96]
	154 Move X19, [X31+104]
	155 Move X22, [X31+80]
	156 Move X21, [X31+88]
	157 Move X24, [X31+64]
	158 Move X23, [X31+72]
	159 Move X26, [X31+48]
	160 Move X25, [X31+56]
	161 Move X30, [X31+32]
	162 Move X27, [X31+40]
	163 Add X31, X31, 112
	164 Return 
	165 Call 0x1C17F20
	166 Move X0, 0xB29000
	167 Move X0, [X0+1400]
	168 Call 0x1C17D08
	169 Call 0x1C17F10
	170 Move X19, X0
	171 Move X0, 0xB66000
	172 Move X0, [X0+1872]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Move X2, X31
	177 Call ArgumentException..ctor, X0, X1
	178 Move X0, 0xB66000
	179 Move X0, [X0+1880]
	180 Call 0x1C17D08
	181 Move X1, X0
	182 Move X0, X19
	183 Call 0x1C17DEC
	184 Move X20, X0
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, X20
	187 Call 0x3EB2AD0
	188 Move X19, [X0]
	189 Call 0x3EB2AE0
	190 Move X1, [X23]
	191 Add X0, X31, 8
	192 Call Enumerator<Object>.Dispose, X0
	193 Compare X19, 0
	194 JumpIfEqual {153}
	195 Move X0, X19
	196 Call 0x1C17F18
	197 Move X19, X31
	198 Move X20, X0
	199 Move X1, [X23]
	200 Add X0, X31, 8
	201 Call Enumerator<Object>.Dispose, X0
	202 Compare X19, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X20
	205 Call 0x1D2D690
	206 Move X0, X19
	207 Call 0x1C17F18
	208 Call 0x1991590

Method: System.Void SearchRecursiveForPrimitiveTypes(System.Collections.Generic.HashSet`1<System.Type> typesFound, System.Type type)

Disassembly:
	0x035D317C LDR X0, [X0 + 0x900]
	0x035D3180 BL 0x1C16CF4
	0x035D3184 ADRP X0, 0xB65000
	0x035D3188 LDR X0, [X0 + 0x908]
	0x035D318C BL 0x1C16CF4
	0x035D3190 ADRP X0, 0xB65000
	0x035D3194 LDR X0, [X0 + 0x910]
	0x035D3198 BL 0x1C16CF4
	0x035D319C ADRP X0, 0xB65000
	0x035D31A0 LDR X0, [X0 + 0x918]
	0x035D31A4 BL 0x1C16CF4
	0x035D31A8 ADRP X0, 0xB65000
	0x035D31AC LDR X0, [X0 + 0x920]
	0x035D31B0 BL 0x1C16CF4
	0x035D31B4 ADRP X0, 0xB65000
	0x035D31B8 LDR X0, [X0 + 0x928]
	0x035D31BC BL 0x1C16CF4
	0x035D31C0 ADRP X0, 0xB65000
	0x035D31C4 LDR X0, [X0 + 0x930]
	0x035D31C8 BL 0x1C16CF4
	0x035D31CC ADRP X0, 0xB65000
	0x035D31D0 LDR X0, [X0 + 0x938]
	0x035D31D4 BL 0x1C16CF4
	0x035D31D8 ADRP X0, 0xB65000
	0x035D31DC LDR X0, [X0 + 0x940]
	0x035D31E0 BL 0x1C16CF4
	0x035D31E4 ADRP X0, 0xB65000
	0x035D31E8 LDR X0, [X0 + 0x948]
	0x035D31EC BL 0x1C16CF4
	0x035D31F0 ADRP X0, 0xB65000
	0x035D31F4 LDR X0, [X0 + 0x950]
	0x035D31F8 BL 0x1C16CF4
	0x035D31FC ADRP X0, 0xB65000
	0x035D3200 LDR X0, [X0 + 0x958]
	0x035D3204 BL 0x1C16CF4
	0x035D3208 ADRP X0, 0xB65000
	0x035D320C LDR X0, [X0 + 0x960]
	0x035D3210 BL 0x1C16CF4
	0x035D3214 ADRP X0, 0xB65000
	0x035D3218 LDR X0, [X0 + 0x968]
	0x035D321C BL 0x1C16CF4
	0x035D3220 ADRP X0, 0xB65000
	0x035D3224 LDR X0, [X0 + 0x970]
	0x035D3228 BL 0x1C16CF4
	0x035D322C ADRP X0, 0xB65000
	0x035D3230 LDR X0, [X0 + 0x978]
	0x035D3234 BL 0x1C16CF4
	0x035D3238 ADRP X0, 0xB65000
	0x035D323C LDR X0, [X0 + 0x980]
	0x035D3240 BL 0x1C16CF4
	0x035D3244 ADRP X0, 0xB65000
	0x035D3248 LDR X0, [X0 + 0x988]
	0x035D324C BL 0x1C16CF4
	0x035D3250 ADRP X0, 0xB65000
	0x035D3254 LDR X0, [X0 + 0x990]
	0x035D3258 BL 0x1C16CF4
	0x035D325C ADRP X0, 0xB65000
	0x035D3260 LDR X0, [X0 + 0x998]
	0x035D3264 BL 0x1C16CF4
	0x035D3268 ADRP X0, 0xB65000
	0x035D326C LDR X0, [X0 + 0x9A0]
	0x035D3270 BL 0x1C16CF4
	0x035D3274 ADRP X0, 0xB65000
	0x035D3278 LDR X0, [X0 + 0x9A8]
	0x035D327C BL 0x1C16CF4
	0x035D3280 ADRP X0, 0xB65000
	0x035D3284 LDR X0, [X0 + 0x7D8]
	0x035D3288 BL 0x1C16CF4
	0x035D328C ADRP X0, 0xB65000
	0x035D3290 LDR X0, [X0 + 0x9B0]
	0x035D3294 BL 0x1C16CF4
	0x035D3298 ADRP X0, 0xB65000
	0x035D329C LDR X0, [X0 + 0x9B8]
	0x035D32A0 BL 0x1C16CF4
	0x035D32A4 ADRP X0, 0xB65000
	0x035D32A8 LDR X0, [X0 + 0x9C0]
	0x035D32AC BL 0x1C16CF4
	0x035D32B0 ADRP X0, 0xB65000
	0x035D32B4 LDR X0, [X0 + 0x9C8]
	0x035D32B8 BL 0x1C16CF4
	0x035D32BC ADRP X0, 0xB65000
	0x035D32C0 LDR X0, [X0 + 0x9D0]
	0x035D32C4 BL 0x1C16CF4
	0x035D32C8 ADRP X0, 0xB65000
	0x035D32CC LDR X0, [X0 + 0x7D0]
	0x035D32D0 BL 0x1C16CF4
	0x035D32D4 ADRP X0, 0xB65000
	0x035D32D8 LDR X0, [X0 + 0x9D8]
	0x035D32DC BL 0x1C16CF4
	0x035D32E0 ADRP X0, 0xB65000
	0x035D32E4 LDR X0, [X0 + 0x9E0]
	0x035D32E8 BL 0x1C16CF4
	0x035D32EC ADRP X0, 0xB65000
	0x035D32F0 LDR X0, [X0 + 0x9E8]
	0x035D32F4 BL 0x1C16CF4
	0x035D32F8 ADRP X0, 0xB65000
	0x035D32FC LDR X0, [X0 + 0x9F0]
	0x035D3300 BL 0x1C16CF4
	0x035D3304 ADRP X0, 0xB65000
	0x035D3308 LDR X0, [X0 + 0x9F8]
	0x035D330C BL 0x1C16CF4
	0x035D3310 ADRP X0, 0xB65000
	0x035D3314 LDR X0, [X0 + 0xA00]
	0x035D3318 BL 0x1C16CF4
	0x035D331C ADRP X0, 0xB65000
	0x035D3320 LDR X0, [X0 + 0xA08]
	0x035D3324 BL 0x1C16CF4
	0x035D3328 ADRP X0, 0xB65000
	0x035D332C LDR X0, [X0 + 0xA10]
	0x035D3330 BL 0x1C16CF4
	0x035D3334 ADRP X0, 0xB65000
	0x035D3338 LDR X0, [X0 + 0xA18]
	0x035D333C BL 0x1C16CF4
	0x035D3340 ADRP X0, 0xB65000
	0x035D3344 LDR X0, [X0 + 0xA20]
	0x035D3348 BL 0x1C16CF4
	0x035D334C ADRP X0, 0xB65000
	0x035D3350 LDR X0, [X0 + 0xA28]
	0x035D3354 BL 0x1C16CF4
	0x035D3358 ADRP X0, 0xB65000
	0x035D335C LDR X0, [X0 + 0xA30]
	0x035D3360 BL 0x1C16CF4
	0x035D3364 ADRP X0, 0xB65000
	0x035D3368 LDR X0, [X0 + 0xA38]
	0x035D336C BL 0x1C16CF4
	0x035D3370 ADRP X0, 0xB65000
	0x035D3374 LDR X0, [X0 + 0xA40]
	0x035D3378 BL 0x1C16CF4
	0x035D337C ADRP X0, 0xB65000
	0x035D3380 LDR X0, [X0 + 0xA48]
	0x035D3384 BL 0x1C16CF4
	0x035D3388 ADRP X0, 0xB65000
	0x035D338C LDR X0, [X0 + 0xA50]
	0x035D3390 BL 0x1C16CF4
	0x035D3394 ADRP X0, 0xB65000
	0x035D3398 LDR X0, [X0 + 0xA58]
	0x035D339C BL 0x1C16CF4
	0x035D33A0 ADRP X0, 0xB65000
	0x035D33A4 LDR X0, [X0 + 0xA60]
	0x035D33A8 BL 0x1C16CF4
	0x035D33AC ADRP X0, 0xB65000
	0x035D33B0 LDR X0, [X0 + 0xA68]
	0x035D33B4 BL 0x1C16CF4
	0x035D33B8 ADRP X0, 0xB65000
	0x035D33BC LDR X0, [X0 + 0xA70]
	0x035D33C0 BL 0x1C16CF4
	0x035D33C4 ADRP X0, 0xB65000
	0x035D33C8 LDR X0, [X0 + 0xA78]
	0x035D33CC BL 0x1C16CF4
	0x035D33D0 ADRP X0, 0xB65000
	0x035D33D4 LDR X0, [X0 + 0xA80]
	0x035D33D8 BL 0x1C16CF4
	0x035D33DC ADRP X0, 0xB65000
	0x035D33E0 LDR X0, [X0 + 0xA88]
	0x035D33E4 BL 0x1C16CF4
	0x035D33E8 ADRP X0, 0xB65000
	0x035D33EC LDR X0, [X0 + 0xA90]
	0x035D33F0 BL 0x1C16CF4
	0x035D33F4 ADRP X0, 0xB65000
	0x035D33F8 LDR X0, [X0 + 0xA98]
	0x035D33FC BL 0x1C16CF4
	0x035D3400 ADRP X0, 0xB65000
	0x035D3404 LDR X0, [X0 + 0xAA0]
	0x035D3408 BL 0x1C16CF4
	0x035D340C ADRP X0, 0xB65000
	0x035D3410 LDR X0, [X0 + 0xAA8]
	0x035D3414 BL 0x1C16CF4
	0x035D3418 ADRP X0, 0xB65000
	0x035D341C LDR X0, [X0 + 0xAB0]
	0x035D3420 BL 0x1C16CF4
	0x035D3424 ADRP X0, 0xB65000
	0x035D3428 LDR X0, [X0 + 0xAB8]
	0x035D342C BL 0x1C16CF4
	0x035D3430 ADRP X0, 0xB65000
	0x035D3434 LDR X0, [X0 + 0xAC0]
	0x035D3438 BL 0x1C16CF4
	0x035D343C ADRP X0, 0xB65000
	0x035D3440 LDR X0, [X0 + 0xAC8]
	0x035D3444 BL 0x1C16CF4
	0x035D3448 ADRP X0, 0xB65000
	0x035D344C LDR X0, [X0 + 0xAD0]
	0x035D3450 BL 0x1C16CF4
	0x035D3454 ADRP X0, 0xB65000
	0x035D3458 LDR X0, [X0 + 0xAD8]
	0x035D345C BL 0x1C16CF4
	0x035D3460 ADRP X0, 0xB65000
	0x035D3464 LDR X0, [X0 + 0xAE0]
	0x035D3468 BL 0x1C16CF4
	0x035D346C ADRP X0, 0xB65000
	0x035D3470 LDR X0, [X0 + 0xAE8]
	0x035D3474 BL 0x1C16CF4
	0x035D3478 ADRP X0, 0xB65000
	0x035D347C LDR X0, [X0 + 0xAF0]
	0x035D3480 BL 0x1C16CF4
	0x035D3484 ADRP X0, 0xB65000
	0x035D3488 LDR X0, [X0 + 0xAF8]
	0x035D348C BL 0x1C16CF4
	0x035D3490 ADRP X0, 0xB65000
	0x035D3494 LDR X0, [X0 + 0xB00]
	0x035D3498 BL 0x1C16CF4
	0x035D349C ADRP X0, 0xB65000
	0x035D34A0 LDR X0, [X0 + 0xB08]
	0x035D34A4 BL 0x1C16CF4
	0x035D34A8 ADRP X0, 0xB65000
	0x035D34AC LDR X0, [X0 + 0xB10]
	0x035D34B0 BL 0x1C16CF4
	0x035D34B4 ADRP X0, 0xB49000
	0x035D34B8 LDR X0, [X0 + 0x2A0]
	0x035D34BC BL 0x1C16CF4
	0x035D34C0 ADRP X0, 0xB65000
	0x035D34C4 LDR X0, [X0 + 0xB18]
	0x035D34C8 BL 0x1C16CF4
	0x035D34CC ADRP X0, 0xB65000
	0x035D34D0 LDR X0, [X0 + 0xB20]
	0x035D34D4 BL 0x1C16CF4
	0x035D34D8 ADRP X0, 0xB65000
	0x035D34DC LDR X0, [X0 + 0xB28]
	0x035D34E0 BL 0x1C16CF4
	0x035D34E4 ADRP X0, 0xB65000
	0x035D34E8 LDR X0, [X0 + 0xB30]
	0x035D34EC BL 0x1C16CF4
	0x035D34F0 ADRP X0, 0xB65000
	0x035D34F4 LDR X0, [X0 + 0xB38]
	0x035D34F8 BL 0x1C16CF4
	0x035D34FC ADRP X0, 0xB65000
	0x035D3500 LDR X0, [X0 + 0xB40]
	0x035D3504 BL 0x1C16CF4
	0x035D3508 ADRP X0, 0xB65000
	0x035D350C LDR X0, [X0 + 0xB48]
	0x035D3510 BL 0x1C16CF4
	0x035D3514 ADRP X0, 0xB65000
	0x035D3518 LDR X0, [X0 + 0xB50]
	0x035D351C BL 0x1C16CF4
	0x035D3520 ADRP X0, 0xB65000
	0x035D3524 LDR X0, [X0 + 0xB58]
	0x035D3528 BL 0x1C16CF4
	0x035D352C ADRP X0, 0xB65000
	0x035D3530 LDR X0, [X0 + 0xB60]
	0x035D3534 BL 0x1C16CF4
	0x035D3538 ADRP X0, 0xB65000
	0x035D353C LDR X0, [X0 + 0xB68]
	0x035D3540 BL 0x1C16CF4
	0x035D3544 ADRP X0, 0xB65000
	0x035D3548 LDR X0, [X0 + 0xB70]
	0x035D354C BL 0x1C16CF4
	0x035D3550 ADRP X0, 0xB65000
	0x035D3554 LDR X0, [X0 + 0xB78]
	0x035D3558 BL 0x1C16CF4
	0x035D355C ADRP X0, 0xB65000
	0x035D3560 LDR X0, [X0 + 0xB80]
	0x035D3564 BL 0x1C16CF4
	0x035D3568 ADRP X0, 0xB65000
	0x035D356C LDR X0, [X0 + 0xB88]
	0x035D3570 BL 0x1C16CF4
	0x035D3574 ADRP X0, 0xB65000
	0x035D3578 LDR X0, [X0 + 0xB90]
	0x035D357C BL 0x1C16CF4
	0x035D3580 ADRP X0, 0xB65000
	0x035D3584 LDR X0, [X0 + 0xB98]
	0x035D3588 BL 0x1C16CF4
	0x035D358C ADRP X0, 0xB65000
	0x035D3590 LDR X0, [X0 + 0xBA0]
	0x035D3594 BL 0x1C16CF4
	0x035D3598 ADRP X0, 0xB65000
	0x035D359C LDR X0, [X0 + 0xBA8]
	0x035D35A0 BL 0x1C16CF4
	0x035D35A4 ADRP X0, 0xB65000
	0x035D35A8 LDR X0, [X0 + 0xBB0]
	0x035D35AC BL 0x1C16CF4
	0x035D35B0 ADRP X0, 0xB65000
	0x035D35B4 LDR X0, [X0 + 0xBB8]
	0x035D35B8 BL 0x1C16CF4
	0x035D35BC ADRP X0, 0xB65000
	0x035D35C0 LDR X0, [X0 + 0xBC0]
	0x035D35C4 BL 0x1C16CF4
	0x035D35C8 ADRP X0, 0xB65000
	0x035D35CC LDR X0, [X0 + 0xBC8]
	0x035D35D0 BL 0x1C16CF4
	0x035D35D4 ADRP X0, 0xB65000
	0x035D35D8 LDR X0, [X0 + 0xBD0]
	0x035D35DC BL 0x1C16CF4
	0x035D35E0 ADRP X0, 0xB65000
	0x035D35E4 LDR X0, [X0 + 0xBD8]
	0x035D35E8 BL 0x1C16CF4
	0x035D35EC ADRP X0, 0xB65000
	0x035D35F0 LDR X0, [X0 + 0xBE0]
	0x035D35F4 BL 0x1C16CF4
	0x035D35F8 ADRP X0, 0xB65000
	0x035D35FC LDR X0, [X0 + 0xBE8]
	0x035D3600 BL 0x1C16CF4
	0x035D3604 ADRP X0, 0xB65000
	0x035D3608 LDR X0, [X0 + 0xBF0]
	0x035D360C BL 0x1C16CF4
	0x035D3610 ADRP X0, 0xB65000
	0x035D3614 LDR X0, [X0 + 0xBF8]
	0x035D3618 BL 0x1C16CF4
	0x035D361C ADRP X0, 0xB65000
	0x035D3620 LDR X0, [X0 + 0xC00]
	0x035D3624 BL 0x1C16CF4
	0x035D3628 ADRP X0, 0xB65000
	0x035D362C LDR X0, [X0 + 0xC08]
	0x035D3630 BL 0x1C16CF4
	0x035D3634 ADRP X0, 0xB65000
	0x035D3638 LDR X0, [X0 + 0xC10]
	0x035D363C BL 0x1C16CF4
	0x035D3640 ADRP X0, 0xB65000
	0x035D3644 LDR X0, [X0 + 0xC18]
	0x035D3648 BL 0x1C16CF4
	0x035D364C ADRP X0, 0xB65000
	0x035D3650 LDR X0, [X0 + 0xC20]
	0x035D3654 BL 0x1C16CF4
	0x035D3658 ADRP X0, 0xB65000
	0x035D365C LDR X0, [X0 + 0xC28]
	0x035D3660 BL 0x1C16CF4
	0x035D3664 ADRP X0, 0xB65000
	0x035D3668 LDR X0, [X0 + 0xC30]
	0x035D366C BL 0x1C16CF4
	0x035D3670 ADRP X0, 0xB65000
	0x035D3674 LDR X0, [X0 + 0xC38]
	0x035D3678 BL 0x1C16CF4
	0x035D367C ADRP X0, 0xB65000
	0x035D3680 LDR X0, [X0 + 0xC40]
	0x035D3684 BL 0x1C16CF4
	0x035D3688 ADRP X0, 0xB65000
	0x035D368C LDR X0, [X0 + 0xC48]
	0x035D3690 BL 0x1C16CF4
	0x035D3694 ADRP X0, 0xB65000
	0x035D3698 LDR X0, [X0 + 0xC50]
	0x035D369C BL 0x1C16CF4
	0x035D36A0 ADRP X0, 0xB65000
	0x035D36A4 LDR X0, [X0 + 0xC58]
	0x035D36A8 BL 0x1C16CF4
	0x035D36AC ADRP X0, 0xB65000
	0x035D36B0 LDR X0, [X0 + 0xC60]
	0x035D36B4 BL 0x1C16CF4
	0x035D36B8 ADRP X0, 0xB65000
	0x035D36BC LDR X0, [X0 + 0xC68]
	0x035D36C0 BL 0x1C16CF4
	0x035D36C4 ADRP X0, 0xB65000
	0x035D36C8 LDR X0, [X0 + 0xC70]
	0x035D36CC BL 0x1C16CF4
	0x035D36D0 ADRP X0, 0xB65000
	0x035D36D4 LDR X0, [X0 + 0xC78]
	0x035D36D8 BL 0x1C16CF4
	0x035D36DC ADRP X0, 0xB65000
	0x035D36E0 LDR X0, [X0 + 0xC80]
	0x035D36E4 BL 0x1C16CF4
	0x035D36E8 ADRP X0, 0xB65000
	0x035D36EC LDR X0, [X0 + 0xC88]
	0x035D36F0 BL 0x1C16CF4
	0x035D36F4 ADRP X0, 0xB65000
	0x035D36F8 LDR X0, [X0 + 0xC90]
	0x035D36FC BL 0x1C16CF4
	0x035D3700 ADRP X0, 0xB65000
	0x035D3704 LDR X0, [X0 + 0xC98]
	0x035D3708 BL 0x1C16CF4
	0x035D370C ADRP X0, 0xB65000
	0x035D3710 LDR X0, [X0 + 0xCA0]
	0x035D3714 BL 0x1C16CF4
	0x035D3718 ADRP X0, 0xB65000
	0x035D371C LDR X0, [X0 + 0x7E0]
	0x035D3720 BL 0x1C16CF4
	0x035D3724 MOVZ W8, 0x1
	0x035D3728 STRB W8, [X25 + 0x220]
	0x035D372C LDR X0, [X24]
	0x035D3730 ADRP X25, 0xB65000
	0x035D3734 ADRP X24, 0xB65000
	0x035D3738 LDR X25, [X25 + 0x7F0]
	0x035D373C LDR X24, [X24 + 0xB18]
	0x035D3740 BL 0x1C16F10
	0x035D3744 LDR X1, [X19]
	0x035D3748 MOV X19, X0
	0x035D374C BL 0x2AA4804
	0x035D3750 LDR X8, [X23]
	0x035D3754 LDR X8, [X8 + 0xB8]
	0x035D3758 STR X19, [X8]
	0x035D375C LDR X0, [X21]
	0x035D3760 BL 0x1C16F10
	0x035D3764 LDR X1, [X20]
	0x035D3768 MOV X19, X0
	0x035D376C BL 0x249B51C
	0x035D3770 LDR X0, [X22]
	0x035D3774 LDR W8, [X0 + 0xE0]
	0x035D3778 CBNZ W8, 0x35D3784
	0x035D377C BL 0x1C16DFC
	0x035D3780 LDR X0, [X22]
	0x035D3784 LDR X8, [X0 + 0xB8]
	0x035D3788 LDR X0, [X25]
	0x035D378C LDR X21, [X8]
	0x035D3790 BL 0x1C16F10
	0x035D3794 LDR X2, [X24]
	0x035D3798 MOV X1, X21
	0x035D379C MOV X3, X31
	0x035D37A0 MOV X20, X0
	0x035D37A4 BL 0x2D3AA24
	0x035D37A8 CBZ X19, 0x35D47E4
	0x035D37AC ADRP X8, 0xB65000
	0x035D37B0 LDR X8, [X8 + 0xAE0]
	0x035D37B4 ADRP X21, 0xB65000
	0x035D37B8 LDR X21, [X21 + 0xA00]
	0x035D37BC STR X20, [X19 + 0x20]
	0x035D37C0 LDR X1, [X8]
	0x035D37C4 ADRP X20, 0xB65000
	0x035D37C8 ADRP X23, 0xB65000
	0x035D37CC ADRP X24, 0xB65000
	0x035D37D0 LDR X20, [X20 + 0x980]
	0x035D37D4 LDR X23, [X23 + 0x8D8]
	0x035D37D8 LDR X24, [X24 + 0xB70]
	0x035D37DC MOV X0, X19
	0x035D37E0 BL 0x2233A4C
	0x035D37E4 LDR X0, [X21]
	0x035D37E8 BL 0x1C16F10
	0x035D37EC LDR X1, [X20]
	0x035D37F0 MOV X19, X0
	0x035D37F4 BL 0x249B4CC
	0x035D37F8 LDR X8, [X22]
	0x035D37FC LDR X0, [X23]
	0x035D3800 LDR X8, [X8 + 0xB8]
	0x035D3804 LDR X21, [X8]
	0x035D3808 BL 0x1C16F10
	0x035D380C LDR X2, [X24]
	0x035D3810 MOV X1, X21
	0x035D3814 MOV X3, X31
	0x035D3818 MOV X20, X0
	0x035D381C BL 0x2D36A44
	0x035D3820 CBZ X19, 0x35D47E4
	0x035D3824 ADRP X8, 0xB65000
	0x035D3828 LDR X8, [X8 + 0xA80]
	0x035D382C ADRP X21, 0xB65000
	0x035D3830 LDR X21, [X21 + 0xA50]
	0x035D3834 STR X20, [X19 + 0x20]
	0x035D3838 LDR X1, [X8]
	0x035D383C ADRP X20, 0xB65000
	0x035D3840 ADRP X23, 0xB65000
	0x035D3844 ADRP X24, 0xB65000
	0x035D3848 LDR X20, [X20 + 0x928]
	0x035D384C LDR X23, [X23 + 0x870]
	0x035D3850 LDR X24, [X24 + 0xBC8]
	0x035D3854 MOV X0, X19
	0x035D3858 BL 0x223340C
	0x035D385C LDR X0, [X21]
	0x035D3860 BL 0x1C16F10
	0x035D3864 LDR X1, [X20]
	0x035D3868 MOV X19, X0
	0x035D386C BL 0x249B4B4
	0x035D3870 LDR X8, [X22]
	0x035D3874 LDR X0, [X23]
	0x035D3878 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xE0E000
	009 Move X22, 0xB66000
	010 Move X23, 0xB21000
	011 Move W8, [X24+534]
	012 Move X22, [X22+1888]
	013 Move X23, [X23+1728]
	014 Move X21, X2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {65}
	021 Move X0, 0xB2B000
	022 Move X0, [X0+2688]
	023 Call 0x1C17CF4
	024 Move X0, 0xB21000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xB66000
	028 Move X0, [X0+1896]
	029 Call 0x1C17CF4
	030 Move X0, 0xB66000
	031 Move X0, [X0+1904]
	032 Call 0x1C17CF4
	033 Move X0, 0xB21000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xB66000
	037 Move X0, [X0+1912]
	038 Call 0x1C17CF4
	039 Move X0, 0xB66000
	040 Move X0, [X0+1920]
	041 Call 0x1C17CF4
	042 Move X0, 0xB66000
	043 Move X0, [X0+1928]
	044 Call 0x1C17CF4
	045 Move X0, 0xB66000
	046 Move X0, [X0+1888]
	047 Call 0x1C17CF4
	048 Move X0, 0xB66000
	049 Move X0, [X0+1936]
	050 Call 0x1C17CF4
	051 Move X0, 0xB4B000
	052 Move X0, [X0+896]
	053 Call 0x1C17CF4
	054 Move X0, 0xB66000
	055 Move X0, [X0+1424]
	056 Call 0x1C17CF4
	057 Move X0, 0xB29000
	058 Move X0, [X0+3168]
	059 Call 0x1C17CF4
	060 Move X0, 0xB21000
	061 Move X0, [X0+1728]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X24+534], W8
	065 Move X0, [X23]
	066 Move X22, [X22]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X22
	072 Move X1, X31
	073 Call Type.GetTypeFromHandle, X0
	074 Compare X0, 0
	075 JumpIfEqual {460}
	076 Move X8, [X0]
	077 Move X1, X21
	078 Move X9, [X8+680]
	079 Move X2, [X8+688]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {149}
	085 Compare X21, 0
	086 JumpIfEqual {460}
	087 Move X8, [X21]
	088 Move X0, X21
	089 Move X9, [X8+1128]
	090 Move X1, [X8+1136]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X0, 0
	093 JumpIfEqual {460}
	094 Move W8, [X0+24]
	095 Compare W8, 0
	096 JumpIfEqual {461}
	097 Compare X19, 0
	098 JumpIfEqual {460}
	099 Move X24, 0xB2B000
	100 Move X20, [X0+32]
	101 Move X24, [X24+2688]
	102 Move X0, X19
	103 Move X1, X20
	104 Move X2, [X24]
	105 Call HashSet`1<Object>.Add, X0, X1
	106 Move X8, 0xB66000
	107 Move X0, [X23]
	108 Move X8, [X8+1912]
	109 Move W9, [X0+224]
	110 Move X21, [X8]
	111 Compare W9, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X21
	115 Move X1, X31
	116 Call Type.GetTypeFromHandle, X0
	117 Move X8, 0xB29000
	118 Move X8, [X8+3168]
	119 Move X21, X0
	120 Move W1, 1
	121 Move X8, [X8]
	122 Move X0, X8
	123 Call 0x1C17D6C
	124 Compare X0, 0
	125 JumpIfEqual {460}
	126 Move X22, X0
	127 Compare X20, 0
	128 JumpIfEqual {135}
	129 Move X8, [X22]
	130 Move X0, X20
	131 Move X1, [X8+64]
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {463}
	135 Move W8, [X22+24]
	136 Compare W8, 0
	137 JumpIfEqual {461}
	138 Move [X22+32], X20
	139 Compare X21, 0
	140 JumpIfEqual {460}
	141 Move X8, [X21]
	142 Move X0, X21
	143 Move X1, X22
	144 Move X9, [X8+2264]
	145 Move X2, [X8+2272]
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X2, [X24]
	148 Move X1, X0
	149 Move X8, 0xB4B000
	150 Move X0, [X23]
	151 Move X8, [X8+896]
	152 Move W9, [X0+224]
	153 Move X22, [X8]
	154 Compare W9, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, X22
	158 Move X1, X31
	159 Call Type.GetTypeFromHandle, X0
	160 Compare X0, 0
	161 JumpIfEqual {460}
	162 Move X8, [X0]
	163 Move X1, X21
	164 Move X9, [X8+680]
	165 Move X2, [X8+688]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {193}
	171 Move X8, 0xB66000
	172 Move X0, [X23]
	173 Move X8, [X8+1936]
	174 Move W9, [X0+224]
	175 Move X22, [X8]
	176 Compare W9, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X22
	180 Move X1, X31
	181 Call Type.GetTypeFromHandle, X0
	182 Compare X0, 0
	183 JumpIfEqual {460}
	184 Move X8, [X0]
	185 Move X1, X21
	186 Move X9, [X8+680]
	187 Move X2, [X8+688]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {221}
	193 Compare X21, 0
	194 JumpIfEqual {460}
	195 Move X8, [X21]
	196 Move X0, X21
	197 Move X9, [X8+1128]
	198 Move X1, [X8+1136]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Compare X0, 0
	201 JumpIfEqual {460}
	202 Move W8, [X0+24]
	203 Compare W8, 0
	204 JumpIfEqual {461}
	205 Compare X19, 0
	206 JumpIfEqual {460}
	207 Move X8, 0xB2B000
	208 Move X1, [X0+32]
	209 Move X8, [X8+2688]
	210 Move X2, [X8]
	211 Move X0, X19
	212 Move X20, [X31+48]
	213 Move X19, [X31+56]
	214 Move X22, [X31+32]
	215 Move X21, [X31+40]
	216 Move X24, [X31+16]
	217 Move X23, [X31+24]
	218 Move X30, [X31+64]
	219 Call HashSet`1<Object>.Add, X0, X1
	220 Return 
	221 Move X8, 0xB66000
	222 Move X0, [X23]
	223 Move X8, [X8+1920]
	224 Move W9, [X0+224]
	225 Move X22, [X8]
	226 Compare W9, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move X0, X22
	230 Move X1, X31
	231 Call Type.GetTypeFromHandle, X0
	232 Compare X0, 0
	233 JumpIfEqual {460}
	234 Move X8, [X0]
	235 Move X1, X21
	236 Move X9, [X8+680]
	237 Move X2, [X8+688]
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {267}
	243 Compare X21, 0
	244 JumpIfEqual {460}
	245 Move X8, [X21]
	246 Move X0, X21
	247 Move X9, [X8+1128]
	248 Move X1, [X8+1136]
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Compare X0, 0
	251 JumpIfEqual {460}
	252 Move W8, [X0+24]
	253 Move X21, X0
	254 Compare W8, 0
	255 JumpIfEqual {461}
	256 Compare X19, 0
	257 JumpIfEqual {460}
	258 Move X8, 0xB2B000
	259 Move X1, [X21+32]
	260 Move X8, [X8+2688]
	261 Move X0, X19
	262 Move X2, [X8]
	263 Call HashSet`1<Object>.Add, X0, X1
	264 Move W8, [X21+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X2, [X21+40]
	267 Move X8, 0xB66000
	268 Move X0, [X23]
	269 Move X8, [X8+1928]
	270 Move W9, [X0+224]
	271 Move X22, [X8]
	272 Compare W9, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X0, X22
	276 Move X1, X31
	277 Call Type.GetTypeFromHandle, X0
	278 Compare X0, 0
	279 JumpIfEqual {460}
	280 Move X8, [X0]
	281 Move X1, X21
	282 Move X9, [X8+680]
	283 Move X2, [X8+688]
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {311}
	289 Compare X21, 0
	290 JumpIfEqual {460}
	291 Move X8, [X21]
	292 Move X0, X21
	293 Move X9, [X8+1128]
	294 Move X1, [X8+1136]
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Compare X0, 0
	297 JumpIfEqual {460}
	298 Move W8, [X0+24]
	299 Compare W8, 0
	300 JumpIfEqual {461}
	301 Move X2, [X0+32]
	302 Move X0, X20
	303 Move X1, X19
	304 Move X20, [X31+48]
	305 Move X19, [X31+56]
	306 Move X22, [X31+32]
	307 Move X21, [X31+40]
	308 Move X24, [X31+16]
	309 Move X23, [X31+24]
	310 Move X30, [X31+64]
	311 Move X8, 0xB66000
	312 Move X0, [X23]
	313 Move X8, [X8+1424]
	314 Move W9, [X0+224]
	315 Move X22, [X8]
	316 Compare W9, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 Move X0, X22
	320 Move X1, X31
	321 Call Type.GetTypeFromHandle, X0
	322 Compare X0, 0
	323 JumpIfEqual {460}
	324 Move X8, [X0]
	325 Move X1, X21
	326 Move X9, [X8+680]
	327 Move X2, [X8+688]
	328 NotImplemented "Instruction BLR not yet implemented."
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfNotEqual {452}
	333 Move X0, X21
	334 Call StateObject.GetChildStatePropertyInfo, X0
	335 Compare X0, 0
	336 JumpIfEqual {460}
	337 Move X10, 0xB66000
	338 Move X8, [X0]
	339 Move X10, [X10+1896]
	340 Move X21, X0
	341 NotImplemented "Instruction LDRH not yet implemented."
	342 Move X1, [X10]
	343 Compare X9, 0
	344 JumpIfEqual {351}
	345 Move X10, [X8+176]
	346 Add X10, X10, 8
	347 NotImplemented "Instruction LDUR not yet implemented."
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Subtract X9, X9, 1
	350 Add X10, X10, 16
	351 Move X0, X21
	352 Move W2, W31
	353 Call 0x1C5D788
	354 NotImplemented "Instruction LDRSW not yet implemented."
	355 Add X8, X8, X9
	356 Add X0, X8, 312
	357 Move X8, [X0]
	358 Move X1, [X0+8]
	359 Move X0, X21
	360 NotImplemented "Instruction BLR not yet implemented."
	361 Move X21, X0
	362 Compare X0, 0
	363 JumpIfEqual {466}
	364 Move X22, 0xB21000
	365 Move X23, 0xB66000
	366 Move X22, [X22+3608]
	367 Move X23, [X23+1904]
	368 Move X8, [X21]
	369 Move X1, [X22]
	370 NotImplemented "Instruction LDRH not yet implemented."
	371 Compare X9, 0
	372 JumpIfEqual {379}
	373 Move X10, [X8+176]
	374 Add X10, X10, 8
	375 NotImplemented "Instruction LDUR not yet implemented."
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Subtract X9, X9, 1
	378 Add X10, X10, 16
	379 Move X0, X21
	380 Move W2, W31
	381 Call 0x1C5D788
	382 NotImplemented "Instruction LDRSW not yet implemented."
	383 Add X8, X8, X9
	384 Add X0, X8, 312
	385 Move X8, [X0]
	386 Move X1, [X0+8]
	387 Move X0, X21
	388 NotImplemented "Instruction BLR not yet implemented."
	389 Move TEMP, X0
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfNotEqual {424}
	393 Move X8, [X21]
	394 Move X1, [X23]
	395 NotImplemented "Instruction LDRH not yet implemented."
	396 Compare X9, 0
	397 JumpIfEqual {404}
	398 Move X10, [X8+176]
	399 Add X10, X10, 8
	400 NotImplemented "Instruction LDUR not yet implemented."
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Subtract X9, X9, 1
	403 Add X10, X10, 16
	404 Move X0, X21
	405 Move W2, W31
	406 Call 0x1C5D788
	407 NotImplemented "Instruction LDRSW not yet implemented."
	408 Add X8, X8, X9
	409 Add X0, X8, 312
	410 Move X8, [X0]
	411 Move X1, [X0+8]
	412 Move X0, X21
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Compare X0, 0
	415 JumpIfEqual {462}
	416 Move X8, [X0]
	417 Move X1, [X8+592]
	418 Move X9, [X8+584]
	419 NotImplemented "Instruction BLR not yet implemented."
	420 Move X2, X0
	421 Move X0, X20
	422 Move X1, X19
	423 Call AutoRegisteredTypeIDManifest.SearchRecursiveForPrimitiveTypes, X0, X1, X2
	424 Move X19, X31
	425 Compare X21, 0
	426 JumpIfEqual {450}
	427 Move X10, 0xB21000
	428 Move X8, [X21]
	429 Move X10, [X10+3584]
	430 NotImplemented "Instruction LDRH not yet implemented."
	431 Move X1, [X10]
	432 Compare X9, 0
	433 JumpIfEqual {440}
	434 Move X10, [X8+176]
	435 Add X10, X10, 8
	436 NotImplemented "Instruction LDUR not yet implemented."
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Subtract X9, X9, 1
	439 Add X10, X10, 16
	440 Move X0, X21
	441 Move W2, W31
	442 Call 0x1C5D788
	443 NotImplemented "Instruction LDRSW not yet implemented."
	444 Add X8, X8, X9
	445 Add X0, X8, 312
	446 Move X8, [X0]
	447 Move X1, [X0+8]
	448 Move X0, X21
	449 NotImplemented "Instruction BLR not yet implemented."
	450 Compare X19, 0
	451 JumpIfNotEqual {467}
	452 Move X20, [X31+48]
	453 Move X19, [X31+56]
	454 Move X22, [X31+32]
	455 Move X21, [X31+40]
	456 Move X24, [X31+16]
	457 Move X23, [X31+24]
	458 Move X30, [X31+64]
	459 Return 
	460 Call 0x1C17F20
	461 Call 0x1C17F28
	462 Call 0x1C17F20
	463 Call 0x1C17F44
	464 Move X1, X31
	465 Call 0x1C17DEC
	466 Call 0x1C17F20
	467 Move X0, X19
	468 Call 0x1C17F18
	469 Move X20, X0
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Move X0, X20
	472 Call 0x3EB2AD0
	473 Move X19, [X0]
	474 Call 0x3EB2AE0
	475 Move X19, X31
	476 Move X20, X0
	477 Compare X21, 0
	478 JumpIfEqual {502}
	479 Move X10, 0xB21000
	480 Move X8, [X21]
	481 Move X10, [X10+3584]
	482 NotImplemented "Instruction LDRH not yet implemented."
	483 Move X1, [X10]
	484 Compare X9, 0
	485 JumpIfEqual {492}
	486 Move X10, [X8+176]
	487 Add X10, X10, 8
	488 NotImplemented "Instruction LDUR not yet implemented."
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Subtract X9, X9, 1
	491 Add X10, X10, 16
	492 Move X0, X21
	493 Move W2, W31
	494 Call 0x1C5D788
	495 NotImplemented "Instruction LDRSW not yet implemented."
	496 Add X8, X8, X9
	497 Add X0, X8, 312
	498 Move X8, [X0]
	499 Move X1, [X0+8]
	500 Move X0, X21
	501 NotImplemented "Instruction BLR not yet implemented."
	502 Compare X19, 0
	503 JumpIfNotEqual {506}
	504 Move X0, X20
	505 Call 0x1D2D690
	506 Move X0, X19
	507 Call 0x1C17F18
	508 Call 0x1991590

Method: System.Void RegisterType(System.Type type)

Disassembly:
	0x035D387C LDR X21, [X8]
	0x035D3880 BL 0x1C16F10
	0x035D3884 LDR X2, [X24]
	0x035D3888 MOV X1, X21
	0x035D388C MOV X3, X31
	0x035D3890 MOV X20, X0
	0x035D3894 BL 0x2D35FD4
	0x035D3898 CBZ X19, 0x35D47E4
	0x035D389C ADRP X8, 0xB65000
	0x035D38A0 LDR X8, [X8 + 0xA68]
	0x035D38A4 ADRP X21, 0xB65000
	0x035D38A8 LDR X21, [X21 + 0xA40]
	0x035D38AC STR X20, [X19 + 0x20]
	0x035D38B0 LDR X1, [X8]
	0x035D38B4 ADRP X20, 0xB65000
	0x035D38B8 ADRP X23, 0xB65000
	0x035D38BC ADRP X24, 0xB65000
	0x035D38C0 LDR X20, [X20 + 0x9A8]
	0x035D38C4 LDR X23, [X23 + 0x898]
	0x035D38C8 LDR X24, [X24 + 0xC20]
	0x035D38CC MOV X0, X19
	0x035D38D0 BL 0x22331B4
	0x035D38D4 LDR X0, [X21]
	0x035D38D8 BL 0x1C16F10
	0x035D38DC LDR X1, [X20]
	0x035D38E0 MOV X19, X0
	0x035D38E4 BL 0x249B4C4
	0x035D38E8 LDR X8, [X22]
	0x035D38EC LDR X0, [X23]
	0x035D38F0 LDR X8, [X8 + 0xB8]
	0x035D38F4 LDR X21, [X8]
	0x035D38F8 BL 0x1C16F10
	0x035D38FC LDR X2, [X24]
	0x035D3900 MOV X1, X21
	0x035D3904 MOV X3, X31
	0x035D3908 MOV X20, X0
	0x035D390C BL 0x2D36618
	0x035D3910 CBZ X19, 0x35D47E4
	0x035D3914 STR X20, [X19 + 0x10]
	0x035D3918 LDR X8, [X22]
	0x035D391C ADRP X21, 0xB65000
	0x035D3920 ADRP X24, 0xB65000
	0x035D3924 LDR X21, [X21 + 0xC78]
	0x035D3928 LDR X24, [X24 + 0x8E0]
	0x035D392C LDR X8, [X8 + 0xB8]
	0x035D3930 ADRP X25, 0xB65000
	0x035D3934 ADRP X26, 0xB65000
	0x035D3938 ADRP X27, 0xB65000
	0x035D393C LDR X25, [X25 + 0xC80]
	0x035D3940 LDR X26, [X26 + 0xA78]
	0x035D3944 LDR X27, [X27 + 0xA60]
	0x035D3948 LDR X0, [X23]
	0x035D394C ADRP X28, 0xB65000
	0x035D3950 ADRP X23, 0xB65000
	0x035D3954 ADRP X29, 0xB65000
	0x035D3958 LDR X20, [X8]
	0x035D395C LDR X28, [X28 + 0x958]
	0x035D3960 LDR X23, [X23 + 0x848]
	0x035D3964 LDR X29, [X29 + 0xC88]
	0x035D3968 BL 0x1C16F10
	0x035D396C LDR X2, [X21]
	0x035D3970 MOV X1, X20
	0x035D3974 MOV X3, X31
	0x035D3978 MOV X21, X0
	0x035D397C BL 0x2D36618
	0x035D3980 STR X21, [X19 + 0x18]
	0x035D3984 LDR X8, [X22]
	0x035D3988 LDR X0, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE0E000
	006 Move W8, [X21+535]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xB66000
	014 Move X0, [X0+1944]
	015 Call 0x1C17CF4
	016 Move X0, 0xB66000
	017 Move X0, [X0+1952]
	018 Call 0x1C17CF4
	019 Move X0, 0xB2B000
	020 Move X0, [X0+2360]
	021 Call 0x1C17CF4
	022 Move X0, 0xB2B000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+535], W8
	027 Move X0, [X20+24]
	028 Compare X0, 0
	029 JumpIfEqual {85}
	030 Move X8, 0xB66000
	031 Move X8, [X8+1944]
	032 Move X1, X19
	033 Move X2, [X8]
	034 Call Dictionary`2<Object, Int32>.ContainsKey, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {70}
	039 Move X8, [X20+16]
	040 Compare X8, 0
	041 JumpIfEqual {85}
	042 Move X0, [X20+24]
	043 Compare X0, 0
	044 JumpIfEqual {85}
	045 Move W2, [X8+24]
	046 Move X8, 0xB66000
	047 Move X8, [X8+1952]
	048 Move X1, X19
	049 Move X3, [X8]
	050 Call Dictionary`2<Object, Int32>.set_Item, X0, X1, X2
	051 Move X0, [X20+16]
	052 Compare X0, 0
	053 JumpIfEqual {85}
	054 Move X9, 0xB2B000
	055 Move X9, [X9+2360]
	056 Move W10, [X0+28]
	057 Move X8, [X0+16]
	058 Move X9, [X9]
	059 Add W10, W10, 1
	060 Move [X0+28], W10
	061 Compare X8, 0
	062 JumpIfEqual {85}
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Move W11, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add W9, W10, 1
	067 Add X8, X8, X10
	068 Move [X0+24], W9
	069 Move [X8+32], X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Return 
	075 Move X8, [X9+32]
	076 Move X1, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X8, [X8+192]
	080 Move X2, [X8+112]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call List`1<Object>.AddWithResize, X0, X1
	084 Return 
	085 Call 0x1C17F20

Method: System.Boolean TryGetIDForType(System.Type type, out System.Int32 id)

Disassembly:
	0x035D398C LDR X8, [X8 + 0xB8]
	0x035D3990 LDR X20, [X8]
	0x035D3994 BL 0x1C16F10
	0x035D3998 LDR X2, [X25]
	0x035D399C MOV X1, X20
	0x035D39A0 MOV X3, X31
	0x035D39A4 MOV X21, X0
	0x035D39A8 BL 0x2D364B0
	0x035D39AC STR X21, [X19 + 0x20]
	0x035D39B0 LDR X1, [X26]
	0x035D39B4 MOV X0, X19
	0x035D39B8 BL 0x2233344
	0x035D39BC LDR X0, [X27]
	0x035D39C0 BL 0x1C16F10
	0x035D39C4 LDR X1, [X28]
	0x035D39C8 MOV X19, X0
	0x035D39CC BL 0x249B534
	0x035D39D0 LDR X8, [X22]
	0x035D39D4 LDR X0, [X23]
	0x035D39D8 LDR X8, [X8 + 0xB8]
	0x035D39DC LDR X21, [X8]
	0x035D39E0 BL 0x1C16F10
	0x035D39E4 LDR X2, [X29]
	0x035D39E8 MOV X1, X21
	0x035D39EC MOV X3, X31
	0x035D39F0 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE0E000
	007 Move W8, [X22+536]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB2B000
	016 Move X0, [X0+1808]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+536], W8
	020 Move X0, [X21+24]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0xB2B000
	024 Move X8, [X8+1808]
	025 Move X1, X20
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	034 Return X0
	035 Call 0x1C17F20

Method: System.Int32 GetIDForType(System.Type type)

Disassembly:
	0x035D39F4 BL 0x2D3E10C
	0x035D39F8 CBZ X19, 0x35D47E4
	0x035D39FC STR X20, [X19 + 0x10]
	0x035D3A00 LDR X8, [X22]
	0x035D3A04 ADRP X21, 0xB65000
	0x035D3A08 ADRP X24, 0xB65000
	0x035D3A0C LDR X21, [X21 + 0xC90]
	0x035D3A10 LDR X24, [X24 + 0x7E8]
	0x035D3A14 LDR X8, [X8 + 0xB8]
	0x035D3A18 ADRP X25, 0xB65000
	0x035D3A1C ADRP X26, 0xB65000
	0x035D3A20 ADRP X27, 0xB65000
	0x035D3A24 LDR X25, [X25 + 0xC98]
	0x035D3A28 LDR X26, [X26 + 0xAD0]
	0x035D3A2C LDR X27, [X27 + 0xA10]
	0x035D3A30 LDR X0, [X23]
	0x035D3A34 ADRP X28, 0xB65000
	0x035D3A38 ADRP X23, 0xB65000
	0x035D3A3C ADRP X29, 0xB65000
	0x035D3A40 LDR X20, [X8]
	0x035D3A44 LDR X28, [X28 + 0x920]
	0x035D3A48 LDR X23, [X23 + 0x840]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE0E000
	006 Move W8, [X21+537]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB66000
	014 Move X0, [X0+1960]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+537], W8
	018 Move X0, [X20+24]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0xB66000
	022 Move X8, [X8+1960]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Dictionary`2<Object, Int32>.get_Item, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Type GetTypeByID(System.Int32 typeID)

Disassembly:
	0x035D3A4C LDR X29, [X29 + 0xCA0]
	0x035D3A50 BL 0x1C16F10
	0x035D3A54 LDR X2, [X21]
	0x035D3A58 MOV X1, X20
	0x035D3A5C MOV X3, X31
	0x035D3A60 MOV X21, X0
	0x035D3A64 BL 0x2D3E10C
	0x035D3A68 STR X21, [X19 + 0x18]
	0x035D3A6C LDR X8, [X22]
	0x035D3A70 LDR X0, [X24]
	0x035D3A74 LDR X8, [X8 + 0xB8]
	0x035D3A78 LDR X20, [X8]
	0x035D3A7C BL 0x1C16F10
	0x035D3A80 LDR X2, [X25]
	0x035D3A84 MOV X1, X20
	0x035D3A88 MOV X3, X31
	0x035D3A8C MOV X21, X0
	0x035D3A90 BL 0x2D3DFA4
	0x035D3A94 STR X21, [X19 + 0x20]
	0x035D3A98 LDR X1, [X26]
	0x035D3A9C MOV X0, X19
	0x035D3AA0 BL 0x2233CA4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE0E000
	006 Move W8, [X21+538]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB53000
	014 Move X0, [X0+928]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+538], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0xB53000
	022 Move X8, [X8+928]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.get_Item, X0, X1
	030 Return X0
	031 Call 0x1C17F20

