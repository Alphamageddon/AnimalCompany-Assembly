Type: SpatialSys.ObservableState.StateObject

Method: System.Int32 get_childCount()

Disassembly:
	0x035CE8C8 LDR X0, [X0 + 0x610]
	0x035CE8CC BL 0x1C16CF4
	0x035CE8D0 ADRP X0, 0xB4F000
	0x035CE8D4 LDR X0, [X0 + 0x348]
	0x035CE8D8 BL 0x1C16CF4
	0x035CE8DC ADRP X0, 0xB6A000
	0x035CE8E0 LDR X0, [X0 + 0x618]
	0x035CE8E4 BL 0x1C16CF4
	0x035CE8E8 ADRP X0, 0xB6A000
	0x035CE8EC LDR X0, [X0 + 0x5E0]
	0x035CE8F0 BL 0x1C16CF4
	0x035CE8F4 MOVZ W8, 0x1
	0x035CE8F8 STRB W8, [X22 + 0x1F7]
	0x035CE8FC LDR X0, [X20]
	0x035CE900 MOVI V0.2D, 0x0
	0x035CE904 STR X31, [X31 + 0x90]
	0x035CE908 STP V0, V0, [X31 + 0x70]
	0x035CE90C STP V0, V0, [X31 + 0x50]
	0x035CE910 STR X31, [X31 + 0xA8]
	0x035CE914 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE13000
	005 Move W8, [X20+496]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB6B000
	012 Move X0, [X0+1328]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+496], W8
	016 Move X0, [X19+64]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0xB6B000
	020 Move X8, [X8+1328]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Dictionary`2<Object, Object>.get_Count, X0
	026 Return X0
	027 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<SpatialSys.ObservableState.IStateObject> get_childStateObjects()

Disassembly:
	0x035CE918 MOV X1, X31
	0x035CE91C MOV X20, X0
	0x035CE920 BL 0x33BDD8C
	0x035CE924 CBZ X20, 0x35CECC0
	0x035CE928 STR X21, [X20 + 0x10]
	0x035CE92C CBZ X21, 0x35CECC0
	0x035CE930 LDR X8, [X21]
	0x035CE934 MOV X0, X21
	0x035CE938 LDR X9, [X8 + 0x248]
	0x035CE93C LDR X1, [X8 + 0x250]
	0x035CE940 BLR X9
	0x035CE944 TBZ X0, 0x0, 0x35CECC4
	0x035CE948 LDR X0, [X20 + 0x10]
	0x035CE94C CBZ X0, 0x35CECC0
	0x035CE950 LDR X8, [X0]
	0x035CE954 LDR X9, [X8 + 0x338]
	0x035CE958 LDR X1, [X8 + 0x340]
	0x035CE95C ADD X8, X31, 0x8
	0x035CE960 BLR X9
	0x035CE964 ADD X0, X31, 0x50
	0x035CE968 ADD X1, X31, 0x8
	0x035CE96C MOVZ W2, 0x48
	0x035CE970 BL 0x3EB1AC0
	0x035CE974 ADD X0, X31, 0x50
	0x035CE978 MOV X1, X31
	0x035CE97C BL 0x35B4900
	0x035CE980 TBZ X0, 0x0, 0x35CEA3C
	0x035CE984 ADRP X23, 0xB6A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE13000
	006 Move X21, 0xB6B000
	007 Move W8, [X20+497]
	008 Move X21, [X21+1336]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB6B000
	015 Move X0, [X0+1336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+497], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move TEMP, 1
	025 Not TEMP
	026 Move W8, TEMP
	027 Move X0, X31
	028 Move [X20+16], W8
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+32], W0
	031 Move [X20+40], X19
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0

Method: System.Boolean get_isLeafObject()

Disassembly:
	0x035CE9BC BL 0x2AA6B2C
	0x035CE9C0 TBZ X0, 0x0, 0x35CEA2C

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_isIndexedCollection()

Disassembly:
	0x035CE9C4 LDR X22, [X31 + 0xA8]
	0x035CE9C8 CBZ X22, 0x35CECC0

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_isDerivedState()

Disassembly:
	0x035CE9CC LDR X8, [X22]
	0x035CE9D0 LDR X1, [X24]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x035CE9D4 LDRH W9, [X8 + 0x12E]
	0x035CE9D8 CBZ X9, 0x35CE9FC
	0x035CE9DC LDR X10, [X8 + 0xB0]
	0x035CE9E0 ADD X10, X10, 0x8
	0x035CE9E4 LDUR X11, [X10 - 0x8]
	0x035CE9E8 CMP X11, X1
	0x035CE9EC B.EQ 0x35CEA0C
	0x035CE9F0 SUBS X9, X9, 0x1
	0x035CE9F4 ADD X10, X10, 0x10
	0x035CE9F8 B.NE 0x35CE9E4
	0x035CE9FC MOVZ W2, 0x13
	0x035CEA00 MOV X0, X22
	0x035CEA04 BL 0x1C5C788
	0x035CEA08 B 0x35CEA1C
	0x035CEA0C LDR W9, [X10]
	0x035CEA10 ADD W9, W9, 0x13
	0x035CEA14 ADD X8, X8, W9, 0x4, SXTW
	0x035CEA18 ADD X0, X8, 0x138
	0x035CEA1C LDP X8, X2, [X0]
	0x035CEA20 MOV X0, X22
	0x035CEA24 MOV X1, X21
	0x035CEA28 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE13000
	006 Move X21, 0xB50000
	007 Move W8, [X20+498]
	008 Move X21, [X21+784]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB50000
	015 Move X0, [X0+784]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+498], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.IStateObject parent, System.String stateName)

Disassembly:
	0x035CEA34 BL 0x35B4900
	0x035CEA38 TBNZ X0, 0x0, 0x35CE994
	0x035CEA3C ADRP X22, 0xB6A000
	0x035CEA40 LDR X21, [X20 + 0x18]
	0x035CEA44 LDR X19, [X19 + 0x40]
	0x035CEA48 LDR X22, [X22 + 0x5F0]
	0x035CEA4C CBNZ X21, 0x35CEA80
	0x035CEA50 ADRP X8, 0xB6A000
	0x035CEA54 LDR X8, [X8 + 0x5F8]
	0x035CEA58 LDR X0, [X8]
	0x035CEA5C BL 0x1C16F10
	0x035CEA60 ADRP X8, 0xB6A000
	0x035CEA64 LDR X8, [X8 + 0x618]
	0x035CEA68 MOV X1, X20
	0x035CEA6C MOV X3, X31
	0x035CEA70 MOV X21, X0
	0x035CEA74 LDR X2, [X8]
	0x035CEA78 BL 0x2D29F50
	0x035CEA7C STR X21, [X20 + 0x18]
	0x035CEA80 LDR X2, [X22]
	0x035CEA84 MOV X0, X19
	0x035CEA88 MOV X1, X21
	0x035CEA8C BL 0x21D8848
	0x035CEA90 CBZ X0, 0x35CECC0
	0x035CEA94 ADRP X10, 0xB6A000
	0x035CEA98 LDR X8, [X0]
	0x035CEA9C LDR X10, [X10 + 0x600]
	0x035CEAA0 MOV X19, X0
	0x035CEAA4 LDRH W9, [X8 + 0x12E]
	0x035CEAA8 LDR X1, [X10]
	0x035CEAAC CBZ X9, 0x35CEAD0
	0x035CEAB0 LDR X10, [X8 + 0xB0]
	0x035CEAB4 ADD X10, X10, 0x8
	0x035CEAB8 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE13000
	008 Move X23, 0xB50000
	009 Move W8, [X22+499]
	010 Move X23, [X23+784]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB50000
	019 Move X0, [X0+784]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+499], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Move X8, [X21]
	032 Move X0, X21
	033 Move X1, X20
	034 Move X2, X19
	035 Move X5, [X8+872]
	036 Move X4, [X8+880]
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move W3, 1
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 CallNoReturn X5

Method: System.Void InternalInitialize(SpatialSys.ObservableState.IStateObject parent, System.String stateName, System.Boolean serialize)

Disassembly:
	0x035CEB00 MOV X19, X0
	0x035CEB04 CBZ X0, 0x35CED0C
	0x035CEB08 ADRP X21, 0xB25000
	0x035CEB0C ADRP X23, 0xB6A000
	0x035CEB10 ADRP X24, 0xB26000
	0x035CEB14 LDR X21, [X21 + 0xE18]
	0x035CEB18 LDR X23, [X23 + 0x608]
	0x035CEB1C LDR X24, [X24 + 0x1B0]
	0x035CEB20 LDR X8, [X19]
	0x035CEB24 LDR X1, [X21]
	0x035CEB28 LDRH W9, [X8 + 0x12E]
	0x035CEB2C CBZ X9, 0x35CEB50
	0x035CEB30 LDR X10, [X8 + 0xB0]
	0x035CEB34 ADD X10, X10, 0x8
	0x035CEB38 LDUR X11, [X10 - 0x8]
	0x035CEB3C CMP X11, X1
	0x035CEB40 B.EQ 0x35CEB60
	0x035CEB44 SUBS X9, X9, 0x1
	0x035CEB48 ADD X10, X10, 0x10
	0x035CEB4C B.NE 0x35CEB38
	0x035CEB50 MOV X0, X19
	0x035CEB54 MOV W2, W31
	0x035CEB58 BL 0x1C5C788
	0x035CEB5C B 0x35CEB6C
	0x035CEB60 LDRSW X9, [X10]
	0x035CEB64 ADD X8, X8, X9, 0x4, LSL
	0x035CEB68 ADD X0, X8, 0x138
	0x035CEB6C LDP X8, X1, [X0]
	0x035CEB70 MOV X0, X19
	0x035CEB74 BLR X8
	0x035CEB78 TBZ X0, 0x0, 0x35CEC40
	0x035CEB7C LDR X8, [X19]
	0x035CEB80 LDR X1, [X23]
	0x035CEB84 LDRH W9, [X8 + 0x12E]
	0x035CEB88 CBZ X9, 0x35CEBAC
	0x035CEB8C LDR X10, [X8 + 0xB0]
	0x035CEB90 ADD X10, X10, 0x8
	0x035CEB94 LDUR X11, [X10 - 0x8]
	0x035CEB98 CMP X11, X1
	0x035CEB9C B.EQ 0x35CEBBC
	0x035CEBA0 SUBS X9, X9, 0x1
	0x035CEBA4 ADD X10, X10, 0x10
	0x035CEBA8 B.NE 0x35CEB94
	0x035CEBAC MOV X0, X19
	0x035CEBB0 MOV W2, W31
	0x035CEBB4 BL 0x1C5C788
	0x035CEBB8 B 0x35CEBC8
	0x035CEBBC LDRSW X9, [X10]
	0x035CEBC0 ADD X8, X8, X9, 0x4, LSL
	0x035CEBC4 ADD X0, X8, 0x138
	0x035CEBC8 LDP X8, X1, [X0]
	0x035CEBCC MOV X0, X19
	0x035CEBD0 BLR X8
	0x035CEBD4 MOV X20, X1
	0x035CEBD8 CBZ X1, 0x35CECBC
	0x035CEBDC LDR X8, [X20]
	0x035CEBE0 LDR X1, [X24]
	0x035CEBE4 LDRH W9, [X8 + 0x12E]
	0x035CEBE8 CBZ X9, 0x35CEC0C
	0x035CEBEC LDR X10, [X8 + 0xB0]
	0x035CEBF0 ADD X10, X10, 0x8
	0x035CEBF4 LDUR X11, [X10 - 0x8]
	0x035CEBF8 CMP X11, X1
	0x035CEBFC B.EQ 0x35CEC1C
	0x035CEC00 SUBS X9, X9, 0x1
	0x035CEC04 ADD X10, X10, 0x10
	0x035CEC08 B.NE 0x35CEBF4
	0x035CEC0C MOVZ W2, 0x17
	0x035CEC10 MOV X0, X20
	0x035CEC14 BL 0x1C5C788
	0x035CEC18 B 0x35CEC2C
	0x035CEC1C LDR W9, [X10]
	0x035CEC20 ADD W9, W9, 0x17
	0x035CEC24 ADD X8, X8, W9, 0x4, SXTW
	0x035CEC28 ADD X0, X8, 0x138
	0x035CEC2C LDP X8, X2, [X0]
	0x035CEC30 MOVZ W1, 0x1
	0x035CEC34 MOV X0, X20
	0x035CEC38 BLR X8
	0x035CEC3C B 0x35CEB20
	0x035CEC40 MOV X20, X31
	0x035CEC44 CBZ X19, 0x35CECA0
	0x035CEC48 LDR X8, [X19]
	0x035CEC4C LDR X1, [X22]
	0x035CEC50 LDRH W9, [X8 + 0x12E]
	0x035CEC54 CBZ X9, 0x35CEC78
	0x035CEC58 LDR X10, [X8 + 0xB0]
	0x035CEC5C ADD X10, X10, 0x8
	0x035CEC60 LDUR X11, [X10 - 0x8]
	0x035CEC64 CMP X11, X1
	0x035CEC68 B.EQ 0x35CEC88
	0x035CEC6C SUBS X9, X9, 0x1
	0x035CEC70 ADD X10, X10, 0x10
	0x035CEC74 B.NE 0x35CEC60
	0x035CEC78 MOV X0, X19
	0x035CEC7C MOV W2, W31
	0x035CEC80 BL 0x1C5C788
	0x035CEC84 B 0x35CEC94
	0x035CEC88 LDRSW X9, [X10]
	0x035CEC8C ADD X8, X8, X9, 0x4, LSL
	0x035CEC90 ADD X0, X8, 0x138
	0x035CEC94 LDP X8, X1, [X0]
	0x035CEC98 MOV X0, X19
	0x035CEC9C BLR X8
	0x035CECA0 CBNZ X20, 0x35CED10
	0x035CECA4 LDP X20, X19, [X31 + 0xD0]
	0x035CECA8 LDP X22, X21, [X31 + 0xC0]
	0x035CECAC LDP X24, X23, [X31 + 0xB0]
	0x035CECB0 LDR X30, [X31 + 0xA0]
	0x035CECB4 ADD X31, X31, 0xE0
	0x035CECB8 RET
	0x035CECBC BL 0x1C16F20
	0x035CECC0 BL 0x1C16F20
	0x035CECC4 ADRP X0, 0xB2D000
	0x035CECC8 LDR X0, [X0 + 0xC08]
	0x035CECCC BL 0x1C16D08
	0x035CECD0 BL 0x1C16F10
	0x035CECD4 MOV X19, X0
	0x035CECD8 ADRP X0, 0xB4F000
	0x035CECDC LDR X0, [X0 + 0x350]
	0x035CECE0 BL 0x1C16D08
	0x035CECE4 MOV X1, X0
	0x035CECE8 MOV X0, X19
	0x035CECEC MOV X2, X31
	0x035CECF0 BL 0x337B498
	0x035CECF4 ADRP X0, 0xB6A000
	0x035CECF8 LDR X0, [X0 + 0x620]
	0x035CECFC BL 0x1C16D08
	0x035CED00 MOV X1, X0
	0x035CED04 MOV X0, X19
	0x035CED08 BL 0x1C16DEC
	0x035CED0C BL 0x1C16F20
	0x035CED10 MOV X0, X20
	0x035CED14 BL 0x1C16F18
	0x035CED18 B 0x35CED28
	0x035CED1C B 0x35CED28
	0x035CED20 B 0x35CED28
	0x035CED24 B 0x35CED28
	0x035CED28 CMP W1, 0x1
	0x035CED2C B.NE 0x35CED40
	0x035CED30 BL 0x3EB1AD0
	0x035CED34 LDR X20, [X0]
	0x035CED38 BL 0x3EB1AE0
	0x035CED3C B 0x35CEC44
	0x035CED40 MOV X21, X0
	0x035CED44 MOV X20, X31
	0x035CED48 B 0x35CED50
	0x035CED4C MOV X21, X0
	0x035CED50 CBZ X19, 0x35CEDAC
	0x035CED54 LDR X8, [X19]
	0x035CED58 LDR X1, [X22]
	0x035CED5C LDRH W9, [X8 + 0x12E]
	0x035CED60 CBZ X9, 0x35CED84
	0x035CED64 LDR X10, [X8 + 0xB0]
	0x035CED68 ADD X10, X10, 0x8
	0x035CED6C LDUR X11, [X10 - 0x8]
	0x035CED70 CMP X11, X1
	0x035CED74 B.EQ 0x35CED94
	0x035CED78 SUBS X9, X9, 0x1
	0x035CED7C ADD X10, X10, 0x10
	0x035CED80 B.NE 0x35CED6C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xE13000
	012 Move X24, 0xB6B000
	013 Move W8, [X23+500]
	014 Move X24, [X24+1344]
	015 Move W22, W3
	016 Move X20, X2
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {55}
	023 Move X0, 0xB6B000
	024 Move X0, [X0+1352]
	025 Call 0x1C17CF4
	026 Move X0, 0xB6B000
	027 Move X0, [X0+1360]
	028 Call 0x1C17CF4
	029 Move X0, 0xB6B000
	030 Move X0, [X0+1368]
	031 Call 0x1C17CF4
	032 Move X0, 0xB6B000
	033 Move X0, [X0+1376]
	034 Call 0x1C17CF4
	035 Move X0, 0xB6B000
	036 Move X0, [X0+1384]
	037 Call 0x1C17CF4
	038 Move X0, 0xB6B000
	039 Move X0, [X0+1392]
	040 Call 0x1C17CF4
	041 Move X0, 0xB6B000
	042 Move X0, [X0+1400]
	043 Call 0x1C17CF4
	044 Move X0, 0xB6B000
	045 Move X0, [X0+1408]
	046 Call 0x1C17CF4
	047 Move X0, 0xB6B000
	048 Move X0, [X0+1344]
	049 Call 0x1C17CF4
	050 Move X0, 0xB6B000
	051 Move X0, [X0+1416]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X23+500], W8
	055 Move X0, [X24]
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X23, X0
	059 Call Object..ctor, X0
	060 Compare X23, 0
	061 JumpIfEqual {182}
	062 Move X25, 0xB6B000
	063 Move X26, 0xB6B000
	064 Move X27, 0xB6B000
	065 Move X24, 0xB6B000
	066 Move X25, [X25+1384]
	067 Move X26, [X26+1408]
	068 Move X27, [X27+1352]
	069 Move X24, [X24+1416]
	070 And W8, W22, 1
	071 And W3, W22, 1
	072 Move X0, X19
	073 Move X1, X21
	074 Move X2, X20
	075 Move [X23+16], X19
	076 Move [X23+24], W8
	077 Call StateObjectBase.InternalInitialize, X0, X1, X2, X3
	078 Move X0, X19
	079 Move X1, X31
	080 Call "il2cpp_vm_object_is_inst", X0
	081 Call StateObject.GetChildStatePropertyInfo, X0
	082 Move X8, [X25]
	083 Move X20, X0
	084 Move X0, X8
	085 Call 0x1C17F10
	086 Move X2, [X26]
	087 Move X1, X23
	088 Move X3, X31
	089 Move X21, X0
	090 Call Func`2<Object, ValueTuple`2<Object, Object>>..ctor, X0, X1, X2
	091 Move X2, [X27]
	092 Move X0, X20
	093 Move X1, X21
	094 Call Enumerable.Select, X0, X1
	095 Move X8, [X24]
	096 Move X20, X0
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {103}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X8, [X24]
	103 Move X9, [X8+184]
	104 Move X21, [X9+16]
	105 Compare X21, 0
	106 JumpIfNotEqual {129}
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {113}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move X8, [X24]
	113 Move X9, 0xB6B000
	114 Move X8, [X8+184]
	115 Move X9, [X9+1368]
	116 Move X22, [X8]
	117 Move X0, [X9]
	118 Call 0x1C17F10
	119 Move X8, 0xB6B000
	120 Move X8, [X8+1392]
	121 Move X1, X22
	122 Move X3, X31
	123 Move X21, X0
	124 Move X2, [X8]
	125 Call Func`2<ValueTuple`2<Object, Object>, Object>..ctor, X0, X1, X2
	126 Move X8, [X24]
	127 Move X9, [X8+184]
	128 Move [X9+16], X21
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {135}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X8, [X24]
	135 Move X9, [X8+184]
	136 Move X25, 0xB6B000
	137 Move X22, [X9+24]
	138 Move X25, [X25+1360]
	139 Compare X22, 0
	140 JumpIfNotEqual {163}
	141 Move W9, [X8+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {147}
	144 Move X0, X8
	145 Call 0x1C17DFC
	146 Move X8, [X24]
	147 Move X9, 0xB6B000
	148 Move X8, [X8+184]
	149 Move X9, [X9+1376]
	150 Move X23, [X8]
	151 Move X0, [X9]
	152 Call 0x1C17F10
	153 Move X8, 0xB6B000
	154 Move X8, [X8+1400]
	155 Move X1, X23
	156 Move X3, X31
	157 Move X22, X0
	158 Move X2, [X8]
	159 Call Func`2<ValueTuple`2<Object, Object>, Object>..ctor, X0, X1, X2
	160 Move X8, [X24]
	161 Move X8, [X8+184]
	162 Move [X8+24], X22
	163 Move X3, [X25]
	164 Move X0, X20
	165 Move X1, X21
	166 Move X2, X22
	167 Call Enumerable.ToDictionary, X0, X1, X2
	168 Compare X19, 0
	169 JumpIfEqual {182}
	170 Move [X19+64], X0
	171 Move X20, [X31+64]
	172 Move X19, [X31+72]
	173 Move X22, [X31+48]
	174 Move X21, [X31+56]
	175 Move X24, [X31+32]
	176 Move X23, [X31+40]
	177 Move X26, [X31+16]
	178 Move X25, [X31+24]
	179 Move X30, [X31+80]
	180 Move X27, [X31+88]
	181 Return 
	182 Call 0x1C17F20

Method: System.Void ApplyOperation(SpatialSys.ObservableState.IStateOperation operation)

Disassembly:
	0x035CF1A0 MOV X0, X21
	0x035CF1A4 BL 0x1C5C788
	0x035CF1A8 B 0x35CF1BC
	0x035CF1AC LDR W9, [X10]
	0x035CF1B0 ADD W9, W9, 0x17
	0x035CF1B4 ADD X8, X8, W9, 0x4, SXTW
	0x035CF1B8 ADD X0, X8, 0x138
	0x035CF1BC LDP X8, X2, [X0]
	0x035CF1C0 AND W1, W19, 0x1
	0x035CF1C4 MOV X0, X21
	0x035CF1C8 BLR X8
	0x035CF1CC B 0x35CF0B0
	0x035CF1D0 MOV X19, X31
	0x035CF1D4 CBZ X20, 0x35CF230
	0x035CF1D8 LDR X8, [X20]
	0x035CF1DC LDR X1, [X22]
	0x035CF1E0 LDRH W9, [X8 + 0x12E]
	0x035CF1E4 CBZ X9, 0x35CF208
	0x035CF1E8 LDR X10, [X8 + 0xB0]
	0x035CF1EC ADD X10, X10, 0x8
	0x035CF1F0 LDUR X11, [X10 - 0x8]
	0x035CF1F4 CMP X11, X1
	0x035CF1F8 B.EQ 0x35CF218
	0x035CF1FC SUBS X9, X9, 0x1
	0x035CF200 ADD X10, X10, 0x10
	0x035CF204 B.NE 0x35CF1F0
	0x035CF208 MOV X0, X20
	0x035CF20C MOV W2, W31
	0x035CF210 BL 0x1C5C788
	0x035CF214 B 0x35CF224
	0x035CF218 LDRSW X9, [X10]
	0x035CF21C ADD X8, X8, X9, 0x4, LSL
	0x035CF220 ADD X0, X8, 0x138
	0x035CF224 LDP X8, X1, [X0]
	0x035CF228 MOV X0, X20
	0x035CF22C BLR X8
	0x035CF230 CBNZ X19, 0x35CF258
	0x035CF234 LDP X20, X19, [X31 + 0x40]
	0x035CF238 LDP X22, X21, [X31 + 0x30]
	0x035CF23C LDP X24, X23, [X31 + 0x20]
	0x035CF240 LDP X30, X25, [X31 + 0x10]
	0x035CF244 ADD X31, X31, 0x50
	0x035CF248 RET
	0x035CF24C BL 0x1C16F20
	0x035CF250 BL 0x1C16F20
	0x035CF254 BL 0x1C16F20
	0x035CF258 MOV X0, X19
	0x035CF25C BL 0x1C16F18
	0x035CF260 B 0x35CF270
	0x035CF264 B 0x35CF270
	0x035CF268 B 0x35CF270
	0x035CF26C B 0x35CF270
	0x035CF270 CMP W1, 0x1
	0x035CF274 B.NE 0x35CF288
	0x035CF278 BL 0x3EB1AD0
	0x035CF27C LDR X19, [X0]
	0x035CF280 BL 0x3EB1AE0
	0x035CF284 B 0x35CF1D4
	0x035CF288 STR X0, [X31 + 0x8]
	0x035CF28C MOV X19, X31
	0x035CF290 B 0x35CF298
	0x035CF294 STR X0, [X31 + 0x8]
	0x035CF298 CBZ X20, 0x35CF2F4
	0x035CF29C LDR X8, [X20]
	0x035CF2A0 LDR X1, [X22]
	0x035CF2A4 LDRH W9, [X8 + 0x12E]
	0x035CF2A8 CBZ X9, 0x35CF2CC
	0x035CF2AC LDR X10, [X8 + 0xB0]
	0x035CF2B0 ADD X10, X10, 0x8
	0x035CF2B4 LDUR X11, [X10 - 0x8]
	0x035CF2B8 CMP X11, X1
	0x035CF2BC B.EQ 0x35CF2DC
	0x035CF2C0 SUBS X9, X9, 0x1
	0x035CF2C4 ADD X10, X10, 0x10
	0x035CF2C8 B.NE 0x35CF2B4
	0x035CF2CC MOV X0, X20
	0x035CF2D0 MOV W2, W31
	0x035CF2D4 BL 0x1C5C788
	0x035CF2D8 B 0x35CF2E8
	0x035CF2DC LDRSW X9, [X10]
	0x035CF2E0 ADD X8, X8, X9, 0x4, LSL
	0x035CF2E4 ADD X0, X8, 0x138
	0x035CF2E8 LDP X8, X1, [X0]
	0x035CF2EC MOV X0, X20
	0x035CF2F0 BLR X8
	0x035CF2F4 CBNZ X19, 0x35CF300
	0x035CF2F8 LDR X0, [X31 + 0x8]
	0x035CF2FC BL 0x1D2C690
	0x035CF300 MOV X0, X19
	0x035CF304 BL 0x1C16F18
	0x035CF308 BL 0x1990590
	0x035CF30C SUB X31, X31, 0xA0
	0x035CF310 STR X30, [X31 + 0x60]
	0x035CF314 STP X24, X23, [X31 + 0x70]
	0x035CF318 STP X22, X21, [X31 + 0x80]
	0x035CF31C STP X20, X19, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE12000
	007 Move W8, [X21+501]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB25000
	015 Move X0, [X0+1872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+501], W8
	019 Compare X20, 0
	020 JumpIfEqual {53}
	021 Move X10, 0xB25000
	022 Move X8, [X20]
	023 Move X10, [X10+1872]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 2
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 2
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X20
	044 NotImplemented "Instruction BLR not yet implemented."
	045 And W8, W0, 255
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+16]
	050 Move X21, [X31+24]
	051 Add X31, X31, 48
	052 Return 
	053 Call 0x1C17F20
	054 Move X0, X20
	055 Call 0x19913C0
	056 Move X0, 0xB25000
	057 Move X0, [X0+1872]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move W0, 2
	061 Move X2, X20
	062 Call 0x19973F0
	063 Move [X31+12], W0
	064 Move X0, 0xB4F000
	065 Move X0, [X0+808]
	066 Call 0x1C17D08
	067 Add X1, X31, 12
	068 Call 0x1C17E04
	069 Move X20, X0
	070 Move X0, X19
	071 Move X1, X31
	072 Call "il2cpp_vm_object_is_inst", X0
	073 Move X19, X0
	074 Call 0x19913C0
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X9, [X8+744]
	078 Move X1, [X8+752]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X19, X0
	081 Move X0, 0xB4F000
	082 Move X0, [X0+816]
	083 Call 0x1C17D08
	084 Move X1, X20
	085 Move X2, X19
	086 Move X3, X31
	087 Call String.Format, X0, X1, X2
	088 Move X19, X0
	089 Move X0, 0xB25000
	090 Move X0, [X0+1456]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X1, X19
	094 Move X2, X31
	095 Move X20, X0
	096 Call InvalidOperationException..ctor, X0, X1
	097 Move X0, 0xB6A000
	098 Move X0, [X0+1472]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X20
	102 Call 0x1C17DEC

Method: SimpleJSON.JSONNode ToJSON(System.Predicate`1<SpatialSys.ObservableState.IStateObject> filter = null, System.Boolean includeSyncRate = True)

Disassembly:
	0x035CF320 ADRP X21, 0xE11000
	0x035CF324 LDRB W8, [X21 + 0x1FA]
	0x035CF328 MOV X19, X1
	0x035CF32C MOV X20, X0
	0x035CF330 TBNZ X8, 0x0, 0x35CF390
	0x035CF334 ADRP X0, 0xB69000
	0x035CF338 LDR X0, [X0 + 0x638]
	0x035CF33C BL 0x1C16CF4
	0x035CF340 ADRP X0, 0xB69000
	0x035CF344 LDR X0, [X0 + 0x640]
	0x035CF348 BL 0x1C16CF4
	0x035CF34C ADRP X0, 0xB69000
	0x035CF350 LDR X0, [X0 + 0x648]
	0x035CF354 BL 0x1C16CF4
	0x035CF358 ADRP X0, 0xB69000
	0x035CF35C LDR X0, [X0 + 0x650]
	0x035CF360 BL 0x1C16CF4
	0x035CF364 ADRP X0, 0xB25000
	0x035CF368 LDR X0, [X0 + 0x1B0]
	0x035CF36C BL 0x1C16CF4
	0x035CF370 ADRP X0, 0xB69000
	0x035CF374 LDR X0, [X0 + 0x658]
	0x035CF378 BL 0x1C16CF4
	0x035CF37C ADRP X0, 0xB69000
	0x035CF380 LDR X0, [X0 + 0x610]
	0x035CF384 BL 0x1C16CF4
	0x035CF388 MOVZ W8, 0x1
	0x035CF38C STRB W8, [X21 + 0x1FA]
	0x035CF390 MOVI V0.2D, 0x0
	0x035CF394 STR X31, [X31 + 0x50]
	0x035CF398 STP V0, V0, [X31 + 0x30]
	0x035CF39C STR X31, [X31 + 0x68]
	0x035CF3A0 LDR X0, [X20 + 0x40]
	0x035CF3A4 CBZ X0, 0x35CF500
	0x035CF3A8 ADRP X8, 0xB69000
	0x035CF3AC LDR X8, [X8 + 0x638]
	0x035CF3B0 ADRP X23, 0xB69000
	0x035CF3B4 ADRP X24, 0xB25000
	0x035CF3B8 ADRP X22, 0xB69000
	0x035CF3BC LDR X1, [X8]
	0x035CF3C0 LDR X23, [X23 + 0x648]
	0x035CF3C4 LDR X24, [X24 + 0x1B0]
	0x035CF3C8 LDR X22, [X22 + 0x640]
	0x035CF3CC ADD X8, X31, 0x8
	0x035CF3D0 BL 0x2AA54BC
	0x035CF3D4 LDUR V0, [X31 + 0x8]
	0x035CF3D8 LDUR V1, [X31 + 0x18]
	0x035CF3DC LDR X8, [X31 + 0x28]
	0x035CF3E0 STP V0, V1, [X31 + 0x30]
	0x035CF3E4 STR X8, [X31 + 0x50]
	0x035CF3E8 LDR X1, [X23]
	0x035CF3EC ADD X0, X31, 0x30
	0x035CF3F0 BL 0x2C0A728
	0x035CF3F4 TBZ X0, 0x0, 0x35CF4D4
	0x035CF3F8 CBZ X19, 0x35CF4F8
	0x035CF3FC LDR X8, [X19]
	0x035CF400 LDP X21, X20, [X31 + 0x40]
	0x035CF404 LDR X1, [X24]
	0x035CF408 LDRH W9, [X8 + 0x12E]
	0x035CF40C CBZ X9, 0x35CF430
	0x035CF410 LDR X10, [X8 + 0xB0]
	0x035CF414 ADD X10, X10, 0x8
	0x035CF418 LDUR X11, [X10 - 0x8]
	0x035CF41C CMP X11, X1
	0x035CF420 B.EQ 0x35CF440
	0x035CF424 SUBS X9, X9, 0x1
	0x035CF428 ADD X10, X10, 0x10
	0x035CF42C B.NE 0x35CF418
	0x035CF430 MOVZ W2, 0x15
	0x035CF434 MOV X0, X19
	0x035CF438 BL 0x1C5C788
	0x035CF43C B 0x35CF450
	0x035CF440 LDR W9, [X10]
	0x035CF444 ADD W9, W9, 0x15
	0x035CF448 ADD X8, X8, W9, 0x4, SXTW
	0x035CF44C ADD X0, X8, 0x138
	0x035CF450 LDP X8, X3, [X0]
	0x035CF454 ADD X2, X31, 0x68
	0x035CF458 MOV X0, X19
	0x035CF45C MOV X1, X21
	0x035CF460 BLR X8
	0x035CF464 TBZ X0, 0x0, 0x35CF3E8
	0x035CF468 CBZ X20, 0x35CF4FC
	0x035CF46C LDR X8, [X20]
	0x035CF470 LDR X21, [X31 + 0x68]
	0x035CF474 LDR X1, [X24]
	0x035CF478 LDRH W9, [X8 + 0x12E]
	0x035CF47C CBZ X9, 0x35CF4A0
	0x035CF480 LDR X10, [X8 + 0xB0]
	0x035CF484 ADD X10, X10, 0x8
	0x035CF488 LDUR X11, [X10 - 0x8]
	0x035CF48C CMP X11, X1
	0x035CF490 B.EQ 0x35CF4B0
	0x035CF494 SUBS X9, X9, 0x1
	0x035CF498 ADD X10, X10, 0x10
	0x035CF49C B.NE 0x35CF488
	0x035CF4A0 MOVZ W2, 0x18
	0x035CF4A4 MOV X0, X20
	0x035CF4A8 BL 0x1C5C788
	0x035CF4AC B 0x35CF4C0
	0x035CF4B0 LDR W9, [X10]
	0x035CF4B4 ADD W9, W9, 0x18
	0x035CF4B8 ADD X8, X8, W9, 0x4, SXTW
	0x035CF4BC ADD X0, X8, 0x138
	0x035CF4C0 LDP X8, X2, [X0]
	0x035CF4C4 MOV X0, X20
	0x035CF4C8 MOV X1, X21
	0x035CF4CC BLR X8
	0x035CF4D0 B 0x35CF3E8
	0x035CF4D4 LDR X1, [X22]
	0x035CF4D8 ADD X0, X31, 0x30
	0x035CF4DC BL 0x2C0A83C
	0x035CF4E0 LDP X20, X19, [X31 + 0x90]
	0x035CF4E4 LDP X22, X21, [X31 + 0x80]
	0x035CF4E8 LDP X24, X23, [X31 + 0x70]
	0x035CF4EC LDR X30, [X31 + 0x60]
	0x035CF4F0 ADD X31, X31, 0xA0
	0x035CF4F4 RET
	0x035CF4F8 BL 0x1C16F20
	0x035CF4FC BL 0x1C16F20
	0x035CF500 BL 0x1C16F20
	0x035CF504 B 0x35CF514
	0x035CF508 B 0x35CF514
	0x035CF50C B 0x35CF514
	0x035CF510 B 0x35CF514
	0x035CF514 MOV X19, X0
	0x035CF518 CMP W1, 0x1
	0x035CF51C B.NE 0x35CF548
	0x035CF520 MOV X0, X19
	0x035CF524 BL 0x3EB1AD0
	0x035CF528 LDR X20, [X0]
	0x035CF52C BL 0x3EB1AE0
	0x035CF530 LDR X1, [X22]
	0x035CF534 ADD X0, X31, 0x30
	0x035CF538 BL 0x2C0A83C
	0x035CF53C CBZ X20, 0x35CF4E0
	0x035CF540 MOV X0, X20
	0x035CF544 BL 0x1C16F18
	0x035CF548 MOV X20, X31
	0x035CF54C B 0x35CF554
	0x035CF550 MOV X19, X0
	0x035CF554 LDR X1, [X22]
	0x035CF558 ADD X0, X31, 0x30
	0x035CF55C BL 0x2C0A83C
	0x035CF560 CBNZ X20, 0x35CF56C
	0x035CF564 MOV X0, X19
	0x035CF568 BL 0x1D2C690
	0x035CF56C MOV X0, X20
	0x035CF570 BL 0x1C16F18
	0x035CF574 BL 0x1990590
	0x035CF578 STR X30, [X31 - 0x20]!
	0x035CF57C STP X20, X19, [X31 + 0x10]
	0x035CF580 ADRP X19, 0xE11000
	0x035CF584 ADRP X20, 0xB69000
	0x035CF588 LDRB W8, [X19 + 0x1FC]
	0x035CF58C LDR X20, [X20 + 0x588]
	0x035CF590 TBNZ X8, 0x0, 0x35CF5A8
	0x035CF594 ADRP X0, 0xB69000
	0x035CF598 LDR X0, [X0 + 0x588]
	0x035CF59C BL 0x1C16CF4
	0x035CF5A0 MOVZ W8, 0x1
	0x035CF5A4 STRB W8, [X19 + 0x1FC]
	0x035CF5A8 LDR X0, [X20]
	0x035CF5AC BL 0x1C16F10
	0x035CF5B0 MOV X1, X31
	0x035CF5B4 MOV X19, X0
	0x035CF5B8 BL 0x33BDD8C
	0x035CF5BC LDR X8, [X20]
	0x035CF5C0 LDR X8, [X8 + 0xB8]
	0x035CF5C4 STR X19, [X8]
	0x035CF5C8 LDP X20, X19, [X31 + 0x10]
	0x035CF5CC LDR X30, [X31], #0x20
	0x035CF5D0 RET
	0x035CF5D4 MOV X1, X31
	0x035CF5D8 B 0x33BDD8C
	0x035CF5DC STP X30, X21, [X31 - 0x20]!
	0x035CF5E0 STP X20, X19, [X31 + 0x10]
	0x035CF5E4 ADRP X20, 0xE11000
	0x035CF5E8 LDRB W8, [X20 + 0x1FD]
	0x035CF5EC MOV X19, X1
	0x035CF5F0 TBNZ X8, 0x0, 0x35CF614
	0x035CF5F4 ADRP X0, 0xB69000
	0x035CF5F8 LDR X0, [X0 + 0x660]
	0x035CF5FC BL 0x1C16CF4
	0x035CF600 ADRP X0, 0xB24000
	0x035CF604 LDR X0, [X0 + 0x6C0]
	0x035CF608 BL 0x1C16CF4
	0x035CF60C MOVZ W8, 0x1
	0x035CF610 STRB W8, [X20 + 0x1FD]
	0x035CF614 CBZ X19, 0x35CF674
	0x035CF618 ADRP X20, 0xB69000
	0x035CF61C ADRP X21, 0xB24000
	0x035CF620 LDR X20, [X20 + 0x660]
	0x035CF624 LDR X21, [X21 + 0x6C0]
	0x035CF628 MOV X0, X19
	0x035CF62C MOV X1, X31
	0x035CF630 BL 0x32D7840
	0x035CF634 LDR X8, [X21]
	0x035CF638 LDR X20, [X20]
	0x035CF63C MOV X19, X0
	0x035CF640 LDR W9, [X8 + 0xE0]
	0x035CF644 CBNZ W9, 0x35CF650
	0x035CF648 MOV X0, X8
	0x035CF64C BL 0x1C16DFC
	0x035CF650 MOV X0, X20
	0x035CF654 MOV X1, X31
	0x035CF658 BL 0x338C698
	0x035CF65C MOV X1, X0
	0x035CF660 MOV X0, X19
	0x035CF664 LDP X20, X19, [X31 + 0x10]
	0x035CF668 MOV X2, X31
	0x035CF66C LDP X30, X21, [X31], #0x20
	0x035CF670 B 0x3395F0C
	0x035CF674 BL 0x1C16F20
	0x035CF678 MOV X0, X1
	0x035CF67C RET
	0x035CF680 MOV X0, X2
	0x035CF684 RET
	0x035CF688 STR X30, [X31 - 0x20]!
	0x035CF68C STP X20, X19, [X31 + 0x10]
	0x035CF690 ADRP X20, 0xE11000
	0x035CF694 LDRB W8, [X20 + 0x1FE]
	0x035CF698 MOV X19, X1
	0x035CF69C TBNZ X8, 0x0, 0x35CF6B4
	0x035CF6A0 ADRP X0, 0xB25000
	0x035CF6A4 LDR X0, [X0 + 0x1B0]
	0x035CF6A8 BL 0x1C16CF4
	0x035CF6AC MOVZ W8, 0x1
	0x035CF6B0 STRB W8, [X20 + 0x1FE]
	0x035CF6B4 CBZ X19, 0x35CF730
	0x035CF6B8 ADRP X10, 0xB25000
	0x035CF6BC LDR X8, [X19]
	0x035CF6C0 LDR X10, [X10 + 0x1B0]
	0x035CF6C4 LDRH W9, [X8 + 0x12E]
	0x035CF6C8 LDR X1, [X10]
	0x035CF6CC CBZ X9, 0x35CF6F0
	0x035CF6D0 LDR X10, [X8 + 0xB0]
	0x035CF6D4 ADD X10, X10, 0x8
	0x035CF6D8 LDUR X11, [X10 - 0x8]
	0x035CF6DC CMP X11, X1
	0x035CF6E0 B.EQ 0x35CF700
	0x035CF6E4 SUBS X9, X9, 0x1
	0x035CF6E8 ADD X10, X10, 0x10
	0x035CF6EC B.NE 0x35CF6D8
	0x035CF6F0 MOVZ W2, 0xF
	0x035CF6F4 MOV X0, X19
	0x035CF6F8 BL 0x1C5C788
	0x035CF6FC B 0x35CF710
	0x035CF700 LDR W9, [X10]
	0x035CF704 ADD W9, W9, 0xF
	0x035CF708 ADD X8, X8, W9, 0x4, SXTW
	0x035CF70C ADD X0, X8, 0x138
	0x035CF710 LDP X8, X1, [X0]
	0x035CF714 MOV X0, X19
	0x035CF718 BLR X8
	0x035CF71C LDP X20, X19, [X31 + 0x10]
	0x035CF720 ORN W8, W31, W0, 0x0
	0x035CF724 AND W0, W8, 0x1
	0x035CF728 LDR X30, [X31], #0x20
	0x035CF72C RET
	0x035CF730 BL 0x1C16F20
	0x035CF734 STR X30, [X31 - 0x20]!
	0x035CF738 STP X20, X19, [X31 + 0x10]
	0x035CF73C ADRP X20, 0xE11000
	0x035CF740 LDRB W8, [X20 + 0x1FF]
	0x035CF744 MOV X19, X1
	0x035CF748 TBNZ X8, 0x0, 0x35CF760
	0x035CF74C ADRP X0, 0xB25000
	0x035CF750 LDR X0, [X0 + 0x1B0]
	0x035CF754 BL 0x1C16CF4
	0x035CF758 MOVZ W8, 0x1
	0x035CF75C STRB W8, [X20 + 0x1FF]
	0x035CF760 CBZ X19, 0x35CF8A4
	0x035CF764 ADRP X20, 0xB25000
	0x035CF768 LDR X8, [X19]
	0x035CF76C LDR X20, [X20 + 0x1B0]
	0x035CF770 LDRH W9, [X8 + 0x12E]
	0x035CF774 LDR X1, [X20]
	0x035CF778 CBZ X9, 0x35CF79C
	0x035CF77C LDR X10, [X8 + 0xB0]
	0x035CF780 ADD X10, X10, 0x8
	0x035CF784 LDUR X11, [X10 - 0x8]
	0x035CF788 CMP X11, X1
	0x035CF78C B.EQ 0x35CF7AC
	0x035CF790 SUBS X9, X9, 0x1
	0x035CF794 ADD X10, X10, 0x10
	0x035CF798 B.NE 0x35CF784
	0x035CF79C MOVZ W2, 0xC
	0x035CF7A0 MOV X0, X19
	0x035CF7A4 BL 0x1C5C788
	0x035CF7A8 B 0x35CF7BC
	0x035CF7AC LDR W9, [X10]
	0x035CF7B0 ADD W9, W9, 0xC
	0x035CF7B4 ADD X8, X8, W9, 0x4, SXTW
	0x035CF7B8 ADD X0, X8, 0x138
	0x035CF7BC LDP X8, X1, [X0]
	0x035CF7C0 MOV X0, X19
	0x035CF7C4 BLR X8
	0x035CF7C8 TBNZ X0, 0x0, 0x35CF82C
	0x035CF7CC LDR X8, [X19]
	0x035CF7D0 LDR X1, [X20]
	0x035CF7D4 LDRH W9, [X8 + 0x12E]
	0x035CF7D8 CBZ X9, 0x35CF7FC
	0x035CF7DC LDR X10, [X8 + 0xB0]
	0x035CF7E0 ADD X10, X10, 0x8
	0x035CF7E4 LDUR X11, [X10 - 0x8]
	0x035CF7E8 CMP X11, X1
	0x035CF7EC B.EQ 0x35CF80C
	0x035CF7F0 SUBS X9, X9, 0x1
	0x035CF7F4 ADD X10, X10, 0x10
	0x035CF7F8 B.NE 0x35CF7E4
	0x035CF7FC MOVZ W2, 0xD
	0x035CF800 MOV X0, X19
	0x035CF804 BL 0x1C5C788
	0x035CF808 B 0x35CF81C
	0x035CF80C LDR W9, [X10]
	0x035CF810 ADD W9, W9, 0xD
	0x035CF814 ADD X8, X8, W9, 0x4, SXTW
	0x035CF818 ADD X0, X8, 0x138
	0x035CF81C LDP X8, X1, [X0]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0xE12000
	014 Move X23, 0xB6A000
	015 Move W8, [X21+502]
	016 Move X23, [X23+1480]
	017 Move W22, W2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0xB6A000
	025 Move X0, [X0+1488]
	026 Call 0x1C17CF4
	027 Move X0, 0xB69000
	028 Move X0, [X0+3960]
	029 Call 0x1C17CF4
	030 Move X0, 0xB69000
	031 Move X0, [X0+3944]
	032 Call 0x1C17CF4
	033 Move X0, 0xB25000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0xB69000
	037 Move X0, [X0+4072]
	038 Call 0x1C17CF4
	039 Move X0, 0xB69000
	040 Move X0, [X0+4080]
	041 Call 0x1C17CF4
	042 Move X0, 0xB25000
	043 Move X0, [X0+3608]
	044 Call 0x1C17CF4
	045 Move X0, 0xB26000
	046 Move X0, [X0+432]
	047 Call 0x1C17CF4
	048 Move X0, 0xB4D000
	049 Move X0, [X0+3008]
	050 Call 0x1C17CF4
	051 Move X0, 0xB6A000
	052 Move X0, [X0+1496]
	053 Call 0x1C17CF4
	054 Move X0, 0xB6A000
	055 Move X0, [X0+1480]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+502], W8
	059 Move X0, [X23]
	060 Call 0x1C17F10
	061 Move X1, X31
	062 Move X21, X0
	063 Call Object..ctor, X0
	064 Compare X21, 0
	065 JumpIfEqual {289}
	066 Move X8, 0xB4D000
	067 Move X8, [X8+3008]
	068 Move [X21+16], X19
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Move X1, X31
	072 Move X19, X0
	073 Call JSONObject..ctor, X0
	074 Move X0, [X20+64]
	075 Compare X0, 0
	076 JumpIfEqual {289}
	077 Move X8, 0xB6A000
	078 Move X8, [X8+1488]
	079 Move X23, [X21+16]
	080 Move X1, [X8]
	081 Call Dictionary`2<Object, Object>.get_Values, X0
	082 Move X20, X0
	083 Compare X23, 0
	084 JumpIfEqual {103}
	085 Move X8, 0xB69000
	086 Move X8, [X8+3944]
	087 Move X23, 0xB6A000
	088 Move X24, 0xB69000
	089 Move X0, [X8]
	090 Move X23, [X23+1496]
	091 Move X24, [X24+3960]
	092 Call 0x1C17F10
	093 Move X2, [X23]
	094 Move X1, X21
	095 Move X3, X31
	096 Move X23, X0
	097 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	098 Move X2, [X24]
	099 Move X0, X20
	100 Move X1, X23
	101 Call Enumerable.Where, X0, X1
	102 Move X20, X0
	103 Compare X20, 0
	104 JumpIfEqual {289}
	105 Move X10, 0xB69000
	106 Move X8, [X20]
	107 Move X10, [X10+4072]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Move X1, [X10]
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move X0, X20
	119 Move W2, W31
	120 Call 0x1C5D788
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X1, [X0+8]
	126 Move X26, 0xB25000
	127 Move X26, [X26+3584]
	128 Move X0, X20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X20, X0
	131 Compare X0, 0
	132 JumpIfEqual {290}
	133 Move X27, 0xB25000
	134 Move X28, 0xB69000
	135 Move X29, 0xB26000
	136 Move X27, [X27+3608]
	137 Move X28, [X28+4080]
	138 Move X29, [X29+432]
	139 And W22, W22, 1
	140 Move X8, [X20]
	141 Move X1, [X27]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move X0, X20
	152 Move W2, W31
	153 Call 0x1C5D788
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X8, X8, X9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X1, [X0+8]
	159 Move X0, X20
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {245}
	165 Move X8, [X20]
	166 Move X1, [X28]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move X0, X20
	177 Move W2, W31
	178 Call 0x1C5D788
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Add X8, X8, X9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X1, [X0+8]
	184 Move X0, X20
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X23, X0
	187 Compare X0, 0
	188 JumpIfEqual {287}
	189 Move X8, [X23]
	190 Move X1, [X29]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Compare X9, 0
	193 JumpIfEqual {200}
	194 Move X10, [X8+176]
	195 Add X10, X10, 8
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract X9, X9, 1
	199 Add X10, X10, 16
	200 Move X0, X23
	201 Move W2, W31
	202 Call 0x1C5D788
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Add X8, X8, X9
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X1, [X0+8]
	208 Move X0, X23
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Move X8, [X23]
	211 Move X25, [X21+16]
	212 Move X1, [X29]
	213 Move X24, X0
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 18
	224 Move X0, X23
	225 Call 0x1C5D788
	226 Move W9, [X10]
	227 Add W9, W9, 18
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X3, [X0+8]
	232 Move X0, X23
	233 Move X1, X25
	234 Move W2, W22
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Compare X19, 0
	237 JumpIfEqual {288}
	238 Move X8, [X19]
	239 Move X2, X0
	240 Move X9, [X8+632]
	241 Move X3, [X8+640]
	242 Move X0, X19
	243 Move X1, X24
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move X21, X31
	246 Move W22, 6
	247 Compare X20, 0
	248 JumpIfEqual {270}
	249 Move X8, [X20]
	250 Move X1, [X26]
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move X0, X20
	261 Move W2, W31
	262 Call 0x1C5D788
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X20
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Compare X21, 0
	271 JumpIfNotEqual {291}
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X0, X19
	274 Move X20, [X31+80]
	275 Move X19, [X31+88]
	276 Move X22, [X31+64]
	277 Move X21, [X31+72]
	278 Move X24, [X31+48]
	279 Move X23, [X31+56]
	280 Move X26, [X31+32]
	281 Move X25, [X31+40]
	282 Move X28, [X31+16]
	283 Move X27, [X31+24]
	284 Move X29, [X31+96]
	285 Move X30, [X31+104]
	286 Return X0
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Move X0, X21
	292 Call 0x1C17F18
	293 Move X22, X0
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X0, X22
	296 Call 0x3EB2AD0
	297 Move X21, [X0]
	298 Call 0x3EB2AE0
	299 Move W22, W31
	300 Compare X20, 0
	301 JumpIfNotEqual {249}
	302 Move X21, X31
	303 Move X22, X0
	304 Compare X20, 0
	305 JumpIfEqual {327}
	306 Move X8, [X20]
	307 Move X1, [X26]
	308 NotImplemented "Instruction LDRH not yet implemented."
	309 Compare X9, 0
	310 JumpIfEqual {317}
	311 Move X10, [X8+176]
	312 Add X10, X10, 8
	313 NotImplemented "Instruction LDUR not yet implemented."
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Subtract X9, X9, 1
	316 Add X10, X10, 16
	317 Move X0, X20
	318 Move W2, W31
	319 Call 0x1C5D788
	320 NotImplemented "Instruction LDRSW not yet implemented."
	321 Add X8, X8, X9
	322 Add X0, X8, 312
	323 Move X8, [X0]
	324 Move X1, [X0+8]
	325 Move X0, X20
	326 NotImplemented "Instruction BLR not yet implemented."
	327 Compare X21, 0
	328 JumpIfNotEqual {331}
	329 Move X0, X22
	330 Call 0x1D2D690
	331 Move X0, X21
	332 Call 0x1C17F18
	333 Call 0x1991590

Method: System.Void FromJSON(SimpleJSON.JSONNode json)

Disassembly:
	0x035CF828 TBZ X0, 0x0, 0x35CF86C
	0x035CF82C LDR X8, [X19]
	0x035CF830 LDR X1, [X20]
	0x035CF834 LDRH W9, [X8 + 0x12E]
	0x035CF838 CBZ X9, 0x35CF85C
	0x035CF83C LDR X10, [X8 + 0xB0]
	0x035CF840 ADD X10, X10, 0x8
	0x035CF844 LDUR X11, [X10 - 0x8]
	0x035CF848 CMP X11, X1
	0x035CF84C B.EQ 0x35CF874
	0x035CF850 SUBS X9, X9, 0x1
	0x035CF854 ADD X10, X10, 0x10
	0x035CF858 B.NE 0x35CF844
	0x035CF85C MOVZ W2, 0xF
	0x035CF860 MOV X0, X19
	0x035CF864 BL 0x1C5C788
	0x035CF868 B 0x35CF884
	0x035CF86C MOV W8, W31
	0x035CF870 B 0x35CF894
	0x035CF874 LDR W9, [X10]
	0x035CF878 ADD W9, W9, 0xF
	0x035CF87C ADD X8, X8, W9, 0x4, SXTW
	0x035CF880 ADD X0, X8, 0x138
	0x035CF884 LDP X8, X1, [X0]
	0x035CF888 MOV X0, X19
	0x035CF88C BLR X8
	0x035CF890 EOR W8, W0, 0x1
	0x035CF894 LDP X20, X19, [X31 + 0x10]
	0x035CF898 AND W0, W8, 0x1
	0x035CF89C LDR X30, [X31], #0x20
	0x035CF8A0 RET
	0x035CF8A4 BL 0x1C16F20
	0x035CF8A8 STR X30, [X31 - 0x20]!
	0x035CF8AC STP X20, X19, [X31 + 0x10]
	0x035CF8B0 ADRP X20, 0xE11000
	0x035CF8B4 LDRB W8, [X20 + 0x200]
	0x035CF8B8 MOV X19, X1
	0x035CF8BC TBNZ X8, 0x0, 0x35CF8EC
	0x035CF8C0 ADRP X0, 0xB69000
	0x035CF8C4 LDR X0, [X0 + 0x668]
	0x035CF8C8 BL 0x1C16CF4
	0x035CF8CC ADRP X0, 0xB24000
	0x035CF8D0 LDR X0, [X0 + 0x6C0]
	0x035CF8D4 BL 0x1C16CF4
	0x035CF8D8 ADRP X0, 0xB69000
	0x035CF8DC LDR X0, [X0 + 0x670]
	0x035CF8E0 BL 0x1C16CF4
	0x035CF8E4 MOVZ W8, 0x1
	0x035CF8E8 STRB W8, [X20 + 0x200]
	0x035CF8EC CBZ X19, 0x35CF9B8
	0x035CF8F0 LDR X8, [X19]
	0x035CF8F4 MOV X0, X19
	0x035CF8F8 LDR X9, [X8 + 0x2A8]
	0x035CF8FC LDR X1, [X8 + 0x2B0]
	0x035CF900 BLR X9
	0x035CF904 MOV X1, X31
	0x035CF908 MOV X2, X31
	0x035CF90C BL 0x32CE528
	0x035CF910 TBZ X0, 0x0, 0x35CF9A8
	0x035CF914 ADRP X8, 0xB24000
	0x035CF918 LDR X8, [X8 + 0x6C0]
	0x035CF91C LDR X0, [X8]
	0x035CF920 ADRP X8, 0xB69000
	0x035CF924 LDR X8, [X8 + 0x668]
	0x035CF928 LDR W9, [X0 + 0xE0]
	0x035CF92C LDR X20, [X8]
	0x035CF930 CBNZ W9, 0x35CF938
	0x035CF934 BL 0x1C16DFC
	0x035CF938 MOV X0, X20
	0x035CF93C MOV X1, X31
	0x035CF940 BL 0x338C698
	0x035CF944 LDR X8, [X19]
	0x035CF948 MOV X20, X0
	0x035CF94C MOV X0, X19
	0x035CF950 LDR X9, [X8 + 0x248]
	0x035CF954 LDR X1, [X8 + 0x250]
	0x035CF958 BLR X9
	0x035CF95C CBZ X20, 0x35CF9B8
	0x035CF960 LDR X8, [X20]
	0x035CF964 MOV X1, X0
	0x035CF968 MOV X0, X20
	0x035CF96C LDR X9, [X8 + 0x2A8]
	0x035CF970 LDR X2, [X8 + 0x2B0]
	0x035CF974 BLR X9
	0x035CF978 TBZ X0, 0x0, 0x35CF9A8
	0x035CF97C LDR X8, [X19]
	0x035CF980 MOV X0, X19
	0x035CF984 LDP X9, X1, [X8 + 0x1A8]
	0x035CF988 BLR X9
	0x035CF98C ADRP X8, 0xB69000
	0x035CF990 LDR X8, [X8 + 0x670]
	0x035CF994 LDP X20, X19, [X31 + 0x10]
	0x035CF998 MOV X2, X31
	0x035CF99C LDR X1, [X8]
	0x035CF9A0 LDR X30, [X31], #0x20
	0x035CF9A4 B 0x3226EF8
	0x035CF9A8 LDP X20, X19, [X31 + 0x10]
	0x035CF9AC MOV W0, W31
	0x035CF9B0 LDR X30, [X31], #0x20
	0x035CF9B4 RET
	0x035CF9B8 BL 0x1C16F20
	0x035CF9BC SUB X31, X31, 0x70
	0x035CF9C0 STP X29, X30, [X31 + 0x10]
	0x035CF9C4 STP X28, X27, [X31 + 0x20]
	0x035CF9C8 STP X26, X25, [X31 + 0x30]
	0x035CF9CC STP X24, X23, [X31 + 0x40]
	0x035CF9D0 STP X22, X21, [X31 + 0x50]
	0x035CF9D4 STP X20, X19, [X31 + 0x60]
	0x035CF9D8 ADRP X21, 0xE11000
	0x035CF9DC LDRB W8, [X21 + 0x201]
	0x035CF9E0 MOV X19, X1
	0x035CF9E4 MOV X20, X0
	0x035CF9E8 TBNZ X8, 0x0, 0x35CFA48
	0x035CF9EC ADRP X0, 0xB69000
	0x035CF9F0 LDR X0, [X0 + 0x678]
	0x035CF9F4 BL 0x1C16CF4
	0x035CF9F8 ADRP X0, 0xB69000
	0x035CF9FC LDR X0, [X0 + 0x680]
	0x035CFA00 BL 0x1C16CF4
	0x035CFA04 ADRP X0, 0xB25000
	0x035CFA08 LDR X0, [X0 + 0x1B0]
	0x035CFA0C BL 0x1C16CF4
	0x035CFA10 ADRP X0, 0xB4E000
	0x035CFA14 LDR X0, [X0 + 0x310]
	0x035CFA18 BL 0x1C16CF4
	0x035CFA1C ADRP X0, 0xB69000
	0x035CFA20 LDR X0, [X0 + 0x688]
	0x035CFA24 BL 0x1C16CF4
	0x035CFA28 ADRP X0, 0xB69000
	0x035CFA2C LDR X0, [X0 + 0x588]
	0x035CFA30 BL 0x1C16CF4
	0x035CFA34 ADRP X0, 0xB69000
	0x035CFA38 LDR X0, [X0 + 0x690]
	0x035CFA3C BL 0x1C16CF4
	0x035CFA40 MOVZ W8, 0x1
	0x035CFA44 STRB W8, [X21 + 0x201]
	0x035CFA48 CBZ X19, 0x35CFC50
	0x035CFA4C LDR X8, [X19]
	0x035CFA50 MOV X0, X19
	0x035CFA54 LDR X9, [X8 + 0x248]
	0x035CFA58 LDR X1, [X8 + 0x250]
	0x035CFA5C BLR X9
	0x035CFA60 MOV X1, X31
	0x035CFA64 MOV X2, X31
	0x035CFA68 BL 0x33A700C
	0x035CFA6C CBZ X0, 0x35CFA9C
	0x035CFA70 ADRP X8, 0xB25000
	0x035CFA74 LDR X8, [X8 + 0x1B0]
	0x035CFA78 MOV X22, X0
	0x035CFA7C LDR X23, [X8]
	0x035CFA80 MOV X1, X23
	0x035CFA84 BL 0x1C16E00
	0x035CFA88 MOV X21, X0
	0x035CFA8C CBNZ X0, 0x35CFAA0
	0x035CFA90 MOV X0, X22
	0x035CFA94 MOV X1, X23
	0x035CFA98 BL 0x1C171E0
	0x035CFA9C MOV X21, X31
	0x035CFAA0 LDR X8, [X19]
	0x035CFAA4 LDR X22, [X20 + 0x10]
	0x035CFAA8 MOV X0, X19
	0x035CFAAC LDP X9, X1, [X8 + 0x1A8]
	0x035CFAB0 BLR X9
	0x035CFAB4 LDRB W8, [X20 + 0x18]
	0x035CFAB8 MOV X23, X0
	0x035CFABC CBZ X21, 0x35CFAE0
	0x035CFAC0 ADRP X9, 0xB4E000
	0x035CFAC4 LDR X9, [X9 + 0x310]
	0x035CFAC8 LDR X10, [X21]
	0x035CFACC LDR X9, [X9]
	0x035CFAD0 LDRB W12, [X10 + 0x130]
	0x035CFAD4 LDRB W11, [X9 + 0x130]
	0x035CFAD8 CMP W12, W11
	0x035CFADC B.CS 0x35CFC30
	0x035CFAE0 MOV X24, X31
	0x035CFAE4 CBZ W8, 0x35CFC48
	0x035CFAE8 LDR X8, [X19]
	0x035CFAEC ADRP X28, 0xB69000
	0x035CFAF0 MOV X0, X19
	0x035CFAF4 LDR X9, [X8 + 0x218]
	0x035CFAF8 LDR X1, [X8 + 0x220]
	0x035CFAFC LDR X28, [X28 + 0x588]
	0x035CFB00 BLR X9
	0x035CFB04 LDR X8, [X28]
	0x035CFB08 MOV X25, X0
	0x035CFB0C LDR W9, [X8 + 0xE0]
	0x035CFB10 CBNZ W9, 0x35CFB20
	0x035CFB14 MOV X0, X8
	0x035CFB18 BL 0x1C16DFC
	0x035CFB1C LDR X8, [X28]
	0x035CFB20 LDR X9, [X8 + 0xB8]
	0x035CFB24 ADRP X29, 0xB69000
	0x035CFB28 LDR X26, [X9 + 0x8]
	0x035CFB2C LDR X29, [X29 + 0x678]
	0x035CFB30 CBNZ X26, 0x35CFB88
	0x035CFB34 LDR W9, [X8 + 0xE0]
	0x035CFB38 CBNZ W9, 0x35CFB48
	0x035CFB3C MOV X0, X8
	0x035CFB40 BL 0x1C16DFC
	0x035CFB44 LDR X8, [X28]
	0x035CFB48 ADRP X9, 0xB69000
	0x035CFB4C LDR X8, [X8 + 0xB8]
	0x035CFB50 LDR X9, [X9 + 0x680]
	0x035CFB54 LDR X27, [X8]
	0x035CFB58 LDR X0, [X9]
	0x035CFB5C BL 0x1C16F10
	0x035CFB60 ADRP X8, 0xB69000
	0x035CFB64 LDR X8, [X8 + 0x688]
	0x035CFB68 MOV X1, X27
	0x035CFB6C MOV X3, X31
	0x035CFB70 MOV X26, X0
	0x035CFB74 LDR X2, [X8]
	0x035CFB78 BL 0x2D2F428
	0x035CFB7C LDR X8, [X28]
	0x035CFB80 LDR X8, [X8 + 0xB8]
	0x035CFB84 STR X26, [X8 + 0x8]
	0x035CFB88 LDR X2, [X29]
	0x035CFB8C MOV X0, X25
	0x035CFB90 MOV X1, X26
	0x035CFB94 BL 0x21B1A10
	0x035CFB98 CBZ X24, 0x35CFC50
	0x035CFB9C LDR X8, [X24]
	0x035CFBA0 ADRP X25, 0xB69000
	0x035CFBA4 AND W3, W0, 0x1
	0x035CFBA8 MOV X0, X24
	0x035CFBAC LDR X9, [X8 + 0x368]
	0x035CFBB0 LDR X4, [X8 + 0x370]
	0x035CFBB4 LDR X25, [X25 + 0x690]
	0x035CFBB8 MOV X1, X22
	0x035CFBBC MOV X2, X23
	0x035CFBC0 BLR X9
	0x035CFBC4 LDR X8, [X19]
	0x035CFBC8 LDR X1, [X20 + 0x10]
	0x035CFBCC MOV X0, X19
	0x035CFBD0 MOV X2, X21
	0x035CFBD4 LDR X9, [X8 + 0x2E8]
	0x035CFBD8 LDR X4, [X8 + 0x2F0]
	0x035CFBDC MOV X3, X31
	0x035CFBE0 BLR X9
	0x035CFBE4 LDR X8, [X19]
	0x035CFBE8 MOV X0, X19
	0x035CFBEC LDP X9, X1, [X8 + 0x1A8]
	0x035CFBF0 BLR X9
	0x035CFBF4 LDR X3, [X25]
	0x035CFBF8 MOV X1, X0
	0x035CFBFC ADD X0, X31, 0x0
	0x035CFC00 MOV X2, X21
	0x035CFC04 STP X31, X31, [X31]
	0x035CFC08 BL 0x27ABC80
	0x035CFC0C LDP X0, X1, [X31]
	0x035CFC10 LDP X20, X19, [X31 + 0x60]
	0x035CFC14 LDP X22, X21, [X31 + 0x50]
	0x035CFC18 LDP X24, X23, [X31 + 0x40]
	0x035CFC1C LDP X26, X25, [X31 + 0x30]
	0x035CFC20 LDP X28, X27, [X31 + 0x20]
	0x035CFC24 LDP X29, X30, [X31 + 0x10]
	0x035CFC28 ADD X31, X31, 0x70
	0x035CFC2C RET
	0x035CFC30 LDR X10, [X10 + 0xC8]
	0x035CFC34 ADD X10, X10, X11, 0x3, LSL
	0x035CFC38 LDUR X10, [X10 - 0x8]
	0x035CFC3C CMP X10, X9
	0x035CFC40 CSEL X24, X21, X31, EQ
	0x035CFC44 CBNZ W8, 0x35CFAE8
	0x035CFC48 MOV W0, W31
	0x035CFC4C CBNZ X24, 0x35CFB9C
	0x035CFC50 BL 0x1C16F20
	0x035CFC54 STR X30, [X31 - 0x10]!
	0x035CFC58 LDR X8, [X0 + 0x10]
	0x035CFC5C CBZ X8, 0x35CFC74
	0x035CFC60 LDR X3, [X8 + 0x18]
	0x035CFC64 LDR X0, [X8 + 0x40]
	0x035CFC68 LDR X2, [X8 + 0x28]
	0x035CFC6C LDR X30, [X31], #0x10
	0x035CFC70 BR X3
	0x035CFC74 BL 0x1C16F20
	0x035CFC78 STP X30, X23, [X31 - 0x30]!
	0x035CFC7C STP X22, X21, [X31 + 0x10]
	0x035CFC80 STP X20, X19, [X31 + 0x20]
	0x035CFC84 ADRP X21, 0xE11000
	0x035CFC88 ADRP X23, 0xB69000
	0x035CFC8C LDRB W8, [X21 + 0x202]
	0x035CFC90 LDR X23, [X23 + 0x698]
	0x035CFC94 MOV X20, X2
	0x035CFC98 MOV X22, X1
	0x035CFC9C MOV X19, X0
	0x035CFCA0 TBNZ X8, 0x0, 0x35CFCF4
	0x035CFCA4 ADRP X0, 0xB69000
	0x035CFCA8 LDR X0, [X0 + 0x6A0]
	0x035CFCAC BL 0x1C16CF4
	0x035CFCB0 ADRP X0, 0xB68000
	0x035CFCB4 LDR X0, [X0 + 0x878]
	0x035CFCB8 BL 0x1C16CF4
	0x035CFCBC ADRP X0, 0xB25000
	0x035CFCC0 LDR X0, [X0 + 0x1B0]
	0x035CFCC4 BL 0x1C16CF4
	0x035CFCC8 ADRP X0, 0xB69000
	0x035CFCCC LDR X0, [X0 + 0x610]
	0x035CFCD0 BL 0x1C16CF4
	0x035CFCD4 ADRP X0, 0xB69000
	0x035CFCD8 LDR X0, [X0 + 0x6A8]
	0x035CFCDC BL 0x1C16CF4
	0x035CFCE0 ADRP X0, 0xB69000
	0x035CFCE4 LDR X0, [X0 + 0x698]
	0x035CFCE8 BL 0x1C16CF4
	0x035CFCEC MOVZ W8, 0x1
	0x035CFCF0 STRB W8, [X21 + 0x202]
	0x035CFCF4 LDR X0, [X23]
	0x035CFCF8 BL 0x1C16F10
	0x035CFCFC MOV X1, X31
	0x035CFD00 MOV X21, X0
	0x035CFD04 BL 0x33BDD8C
	0x035CFD08 CBZ X21, 0x35CFDF8
	0x035CFD0C STP X22, X20, [X21 + 0x10]
	0x035CFD10 CBZ X20, 0x35CFDF8
	0x035CFD14 ADRP X10, 0xB25000
	0x035CFD18 LDR X8, [X20]
	0x035CFD1C LDR X10, [X10 + 0x1B0]
	0x035CFD20 LDRH W9, [X8 + 0x12E]
	0x035CFD24 LDR X1, [X10]
	0x035CFD28 CBZ X9, 0x35CFD4C
	0x035CFD2C LDR X10, [X8 + 0xB0]
	0x035CFD30 ADD X10, X10, 0x8
	0x035CFD34 LDUR X11, [X10 - 0x8]
	0x035CFD38 CMP X11, X1
	0x035CFD3C B.EQ 0x35CFD5C
	0x035CFD40 SUBS X9, X9, 0x1
	0x035CFD44 ADD X10, X10, 0x10
	0x035CFD48 B.NE 0x35CFD34
	0x035CFD4C MOVZ W2, 0xF
	0x035CFD50 MOV X0, X20
	0x035CFD54 BL 0x1C5C788
	0x035CFD58 B 0x35CFD6C
	0x035CFD5C LDR W9, [X10]
	0x035CFD60 ADD W9, W9, 0xF
	0x035CFD64 ADD X8, X8, W9, 0x4, SXTW
	0x035CFD68 ADD X0, X8, 0x138
	0x035CFD6C LDP X8, X1, [X0]
	0x035CFD70 MOV X0, X20
	0x035CFD74 BLR X8
	0x035CFD78 TBZ X0, 0x0, 0x35CFD84
	0x035CFD7C MOV W8, W31
	0x035CFD80 B 0x35CFDE4
	0x035CFD84 LDR X0, [X19 + 0x10]
	0x035CFD88 CBZ X0, 0x35CFDF8
	0x035CFD8C MOV X1, X31
	0x035CFD90 BL 0x35AC92C
	0x035CFD94 ADRP X8, 0xB68000
	0x035CFD98 LDR X8, [X8 + 0x878]
	0x035CFD9C MOV X19, X0
	0x035CFDA0 LDR X8, [X8]
	0x035CFDA4 MOV X0, X8
	0x035CFDA8 BL 0x1C16F10
	0x035CFDAC ADRP X8, 0xB69000
	0x035CFDB0 LDR X8, [X8 + 0x6A8]
	0x035CFDB4 MOV X1, X21
	0x035CFDB8 MOV X3, X31
	0x035CFDBC MOV X20, X0
	0x035CFDC0 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+176], X24
	004 Move [X31+184], X23
	005 Move [X31+192], X22
	006 Move [X31+200], X21
	007 Move [X31+208], X20
	008 Move [X31+216], X19
	009 Move X22, 0xE12000
	010 Move X20, 0xB6A000
	011 Move W8, [X22+503]
	012 Move X20, [X20+1504]
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {60}
	019 Move X0, 0xB6A000
	020 Move X0, [X0+1512]
	021 Call 0x1C17CF4
	022 Move X0, 0xB6A000
	023 Move X0, [X0+1520]
	024 Call 0x1C17CF4
	025 Move X0, 0xB6A000
	026 Move X0, [X0+1528]
	027 Call 0x1C17CF4
	028 Move X0, 0xB25000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0xB6A000
	032 Move X0, [X0+1536]
	033 Call 0x1C17CF4
	034 Move X0, 0xB6A000
	035 Move X0, [X0+1544]
	036 Call 0x1C17CF4
	037 Move X0, 0xB25000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0xB26000
	041 Move X0, [X0+432]
	042 Call 0x1C17CF4
	043 Move X0, 0xB4F000
	044 Move X0, [X0+832]
	045 Call 0x1C17CF4
	046 Move X0, 0xB6A000
	047 Move X0, [X0+1552]
	048 Call 0x1C17CF4
	049 Move X0, 0xB4F000
	050 Move X0, [X0+840]
	051 Call 0x1C17CF4
	052 Move X0, 0xB6A000
	053 Move X0, [X0+1560]
	054 Call 0x1C17CF4
	055 Move X0, 0xB6A000
	056 Move X0, [X0+1504]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X22+503], W8
	060 Move X0, [X20]
	061 NotImplemented "Instruction MOVI not yet implemented."
	062 Move [X31+144], X31
	063 Move [X31+112], V0
	064 Move [X31+120], V0
	065 Move [X31+80], V0
	066 Move [X31+88], V0
	067 Move [X31+168], X31
	068 Call 0x1C17F10
	069 Move X1, X31
	070 Move X20, X0
	071 Call Object..ctor, X0
	072 Compare X20, 0
	073 JumpIfEqual {325}
	074 Move [X20+16], X21
	075 Compare X21, 0
	076 JumpIfEqual {325}
	077 Move X8, [X21]
	078 Move X0, X21
	079 Move X9, [X8+584]
	080 Move X1, [X8+592]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {326}
	086 Move X0, [X20+16]
	087 Compare X0, 0
	088 JumpIfEqual {325}
	089 Move X8, [X0]
	090 Move X9, [X8+824]
	091 Move X1, [X8+832]
	092 Add X8, X31, 8
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Add X0, X31, 80
	095 Add X1, X31, 8
	096 Move W2, 72
	097 Call 0x3EB2AC0
	098 Add X0, X31, 80
	099 Move X1, X31
	100 Call Enumerator.MoveNext, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {158}
	105 Move X23, 0xB6A000
	106 Move X24, 0xB26000
	107 Move X23, [X23+1512]
	108 Move X24, [X24+432]
	109 Add X0, X31, 80
	110 Move X1, X31
	111 Call Enumerator.get_Current, X0
	112 Move X4, X0
	113 Move X0, [X19+64]
	114 Compare X0, 0
	115 JumpIfEqual {325}
	116 Move X3, [X23]
	117 Move X21, X1
	118 Add X2, X31, 168
	119 Move X1, X4
	120 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {151}
	125 Move X22, [X31+168]
	126 Compare X22, 0
	127 JumpIfEqual {325}
	128 Move X8, [X22]
	129 Move X1, [X24]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move W2, 19
	140 Move X0, X22
	141 Call 0x1C5D788
	142 Move W9, [X10]
	143 Add W9, W9, 19
	144 Add X8, X8, W9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X2, [X0+8]
	148 Move X0, X22
	149 Move X1, X21
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Add X0, X31, 80
	152 Move X1, X31
	153 Call Enumerator.MoveNext, X0
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {109}
	158 Move X22, 0xB6A000
	159 Move X21, [X20+24]
	160 Move X19, [X19+64]
	161 Move X22, [X22+1520]
	162 Compare X21, 0
	163 JumpIfNotEqual {176}
	164 Move X8, 0xB6A000
	165 Move X8, [X8+1528]
	166 Move X0, [X8]
	167 Call 0x1C17F10
	168 Move X8, 0xB6A000
	169 Move X8, [X8+1560]
	170 Move X1, X20
	171 Move X3, X31
	172 Move X21, X0
	173 Move X2, [X8]
	174 Call Func`2<KeyValuePair`2<Object, Object>, Boolean>..ctor, X0, X1, X2
	175 Move [X20+24], X21
	176 Move X2, [X22]
	177 Move X0, X19
	178 Move X1, X21
	179 Call Enumerable.Where, X0, X1
	180 Compare X0, 0
	181 JumpIfEqual {325}
	182 Move X10, 0xB6A000
	183 Move X8, [X0]
	184 Move X10, [X10+1536]
	185 Move X19, X0
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move X1, [X10]
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move X0, X19
	197 Move W2, W31
	198 Call 0x1C5D788
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Add X8, X8, X9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X22, 0xB25000
	205 Move X22, [X22+3584]
	206 Move X0, X19
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X19, X0
	209 Compare X0, 0
	210 JumpIfEqual {344}
	211 Move X21, 0xB25000
	212 Move X23, 0xB6A000
	213 Move X24, 0xB26000
	214 Move X21, [X21+3608]
	215 Move X23, [X23+1544]
	216 Move X24, [X24+432]
	217 Move X8, [X19]
	218 Move X1, [X21]
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Compare X9, 0
	221 JumpIfEqual {228}
	222 Move X10, [X8+176]
	223 Add X10, X10, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X9, X9, 1
	227 Add X10, X10, 16
	228 Move X0, X19
	229 Move W2, W31
	230 Call 0x1C5D788
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Add X8, X8, X9
	233 Add X0, X8, 312
	234 Move X8, [X0]
	235 Move X1, [X0+8]
	236 Move X0, X19
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfNotEqual {289}
	242 Move X8, [X19]
	243 Move X1, [X23]
	244 NotImplemented "Instruction LDRH not yet implemented."
	245 Compare X9, 0
	246 JumpIfEqual {253}
	247 Move X10, [X8+176]
	248 Add X10, X10, 8
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Subtract X9, X9, 1
	252 Add X10, X10, 16
	253 Move X0, X19
	254 Move W2, W31
	255 Call 0x1C5D788
	256 NotImplemented "Instruction LDRSW not yet implemented."
	257 Add X8, X8, X9
	258 Add X0, X8, 312
	259 Move X8, [X0]
	260 Move X1, [X0+8]
	261 Move X0, X19
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Move X20, X1
	264 Compare X1, 0
	265 JumpIfEqual {324}
	266 Move X8, [X20]
	267 Move X1, [X24]
	268 NotImplemented "Instruction LDRH not yet implemented."
	269 Compare X9, 0
	270 JumpIfEqual {277}
	271 Move X10, [X8+176]
	272 Add X10, X10, 8
	273 NotImplemented "Instruction LDUR not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Subtract X9, X9, 1
	276 Add X10, X10, 16
	277 Move W2, 23
	278 Move X0, X20
	279 Call 0x1C5D788
	280 Move W9, [X10]
	281 Add W9, W9, 23
	282 Add X8, X8, W9
	283 Add X0, X8, 312
	284 Move X8, [X0]
	285 Move X2, [X0+8]
	286 Move W1, 1
	287 Move X0, X20
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Move X20, X31
	290 Compare X19, 0
	291 JumpIfEqual {313}
	292 Move X8, [X19]
	293 Move X1, [X22]
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Compare X9, 0
	296 JumpIfEqual {303}
	297 Move X10, [X8+176]
	298 Add X10, X10, 8
	299 NotImplemented "Instruction LDUR not yet implemented."
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Subtract X9, X9, 1
	302 Add X10, X10, 16
	303 Move X0, X19
	304 Move W2, W31
	305 Call 0x1C5D788
	306 NotImplemented "Instruction LDRSW not yet implemented."
	307 Add X8, X8, X9
	308 Add X0, X8, 312
	309 Move X8, [X0]
	310 Move X1, [X0+8]
	311 Move X0, X19
	312 NotImplemented "Instruction BLR not yet implemented."
	313 Compare X20, 0
	314 JumpIfNotEqual {345}
	315 Move X20, [X31+208]
	316 Move X19, [X31+216]
	317 Move X22, [X31+192]
	318 Move X21, [X31+200]
	319 Move X24, [X31+176]
	320 Move X23, [X31+184]
	321 Move X30, [X31+160]
	322 Add X31, X31, 224
	323 Return 
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Move X0, 0xB2D000
	327 Move X0, [X0+3080]
	328 Call 0x1C17D08
	329 Call 0x1C17F10
	330 Move X19, X0
	331 Move X0, 0xB4F000
	332 Move X0, [X0+848]
	333 Call 0x1C17D08
	334 Move X1, X0
	335 Move X0, X19
	336 Move X2, X31
	337 Call InvalidCastException..ctor, X0, X1
	338 Move X0, 0xB6A000
	339 Move X0, [X0+1568]
	340 Call 0x1C17D08
	341 Move X1, X0
	342 Move X0, X19
	343 Call 0x1C17DEC
	344 Call 0x1C17F20
	345 Move X0, X20
	346 Call 0x1C17F18
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Call 0x3EB2AD0
	349 Move X20, [X0]
	350 Call 0x3EB2AE0
	351 Move X21, X0
	352 Move X20, X31
	353 Move X21, X0
	354 Compare X19, 0
	355 JumpIfEqual {377}
	356 Move X8, [X19]
	357 Move X1, [X22]
	358 NotImplemented "Instruction LDRH not yet implemented."
	359 Compare X9, 0
	360 JumpIfEqual {367}
	361 Move X10, [X8+176]
	362 Add X10, X10, 8
	363 NotImplemented "Instruction LDUR not yet implemented."
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Subtract X9, X9, 1
	366 Add X10, X10, 16
	367 Move X0, X19
	368 Move W2, W31
	369 Call 0x1C5D788
	370 NotImplemented "Instruction LDRSW not yet implemented."
	371 Add X8, X8, X9
	372 Add X0, X8, 312
	373 Move X8, [X0]
	374 Move X1, [X0+8]
	375 Move X0, X19
	376 NotImplemented "Instruction BLR not yet implemented."
	377 Compare X20, 0
	378 JumpIfNotEqual {381}
	379 Move X0, X21
	380 Call 0x1D2D690
	381 Move X0, X20
	382 Call 0x1C17F18
	383 Call 0x1991590

Method: System.Boolean TryFindChild(System.Object childObjectKey, out SpatialSys.ObservableState.IStateObject result)

Disassembly:
	0x035CFDCC LDR X8, [X8 + 0x6A0]
	0x035CFDD0 MOV X0, X19
	0x035CFDD4 MOV X1, X20
	0x035CFDD8 LDR X2, [X8]
	0x035CFDDC BL 0x21B3370
	0x035CFDE0 EOR W8, W0, 0x1
	0x035CFDE4 LDP X20, X19, [X31 + 0x20]
	0x035CFDE8 LDP X22, X21, [X31 + 0x10]
	0x035CFDEC AND W0, W8, 0x1
	0x035CFDF0 LDP X30, X23, [X31], #0x30
	0x035CFDF4 RET
	0x035CFDF8 BL 0x1C16F20
	0x035CFDFC MOV X1, X31
	0x035CFE00 B 0x33BDD8C
	0x035CFE04 STP X30, X21, [X31 - 0x20]!
	0x035CFE08 STP X20, X19, [X31 + 0x10]
	0x035CFE0C ADRP X21, 0xE11000
	0x035CFE10 LDRB W8, [X21 + 0x203]
	0x035CFE14 MOV X19, X1
	0x035CFE18 MOV X20, X0
	0x035CFE1C TBNZ X8, 0x0, 0x35CFE40
	0x035CFE20 ADRP X0, 0xB69000
	0x035CFE24 LDR X0, [X0 + 0x658]
	0x035CFE28 BL 0x1C16CF4
	0x035CFE2C ADRP X0, 0xB4E000
	0x035CFE30 LDR X0, [X0 + 0x340]
	0x035CFE34 BL 0x1C16CF4
	0x035CFE38 MOVZ W8, 0x1
	0x035CFE3C STRB W8, [X21 + 0x203]
	0x035CFE40 LDR X0, [X20 + 0x10]
	0x035CFE44 MOV X1, X19
	0x035CFE48 LDP X20, X19, [X31 + 0x10]
	0x035CFE4C MOV X2, X31
	0x035CFE50 LDP X30, X21, [X31], #0x20
	0x035CFE54 B 0x321BA08
	0x035CFE58 LDR W8, [X0 + 0x10]
	0x035CFE5C CMP W8, 0x1
	0x035CFE60 B.EQ 0x35CFE6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE12000
	007 Move W8, [X22+504]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB6A000
	016 Move X0, [X0+1512]
	017 Call 0x1C17CF4
	018 Move X0, 0xB27000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+504], W8
	023 Move X0, [X21+64]
	024 Compare X0, 0
	025 JumpIfEqual {45}
	026 Compare X19, 0
	027 JumpIfEqual {33}
	028 Move X8, 0xB27000
	029 Move X8, [X8+632]
	030 Move X1, [X8]
	031 Move X8, [X19]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0xB6A000
	034 Move X8, [X8+1512]
	035 Move X1, X19
	036 Move X2, X20
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X3, [X8]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	044 Return X0
	045 Call 0x1C17F20
	046 Move X0, X19
	047 Call 0x1C181E0

Method: System.Void Reset(System.Boolean recursively = True)

Disassembly:
	0x035CFE64 ADDS W31, W8, 0x3
	0x035CFE68 B.NE 0x35CFE70
	0x035CFE6C B 0x35D0030
	0x035CFE70 RET
	0x035CFE74 SUB X31, X31, 0x70
	0x035CFE78 STP X30, X0, [X31 + 0x50]
	0x035CFE7C STP X20, X19, [X31 + 0x60]
	0x035CFE80 ADRP X20, 0xE11000
	0x035CFE84 LDRB W8, [X20 + 0x204]
	0x035CFE88 MOV X19, X0
	0x035CFE8C TBNZ X8, 0x0, 0x35CFEC8
	0x035CFE90 ADRP X0, 0xB69000
	0x035CFE94 LDR X0, [X0 + 0x5D0]
	0x035CFE98 BL 0x1C16CF4
	0x035CFE9C ADRP X0, 0xB69000
	0x035CFEA0 LDR X0, [X0 + 0x6B0]
	0x035CFEA4 BL 0x1C16CF4
	0x035CFEA8 ADRP X0, 0xB69000
	0x035CFEAC LDR X0, [X0 + 0x6B8]
	0x035CFEB0 BL 0x1C16CF4
	0x035CFEB4 ADRP X0, 0xB69000
	0x035CFEB8 LDR X0, [X0 + 0x6C0]
	0x035CFEBC BL 0x1C16CF4
	0x035CFEC0 MOVZ W8, 0x1
	0x035CFEC4 STRB W8, [X20 + 0x204]
	0x035CFEC8 ADD X8, X31, 0x58
	0x035CFECC STR X8, [X31 + 0x48]
	0x035CFED0 LDR W8, [X19 + 0x10]
	0x035CFED4 CMP W8, 0x1
	0x035CFED8 B.EQ 0x35CFF48
	0x035CFEDC CBNZ W8, 0x35CFFD8
	0x035CFEE0 LDR X8, [X19 + 0x28]
	0x035CFEE4 MOVN W9, 0x0
	0x035CFEE8 STR W9, [X19 + 0x10]
	0x035CFEEC CBZ X8, 0x35CFF9C
	0x035CFEF0 LDR X0, [X8 + 0x40]
	0x035CFEF4 CBZ X0, 0x35CFFA0
	0x035CFEF8 ADRP X8, 0xB69000
	0x035CFEFC LDR X8, [X8 + 0x5D0]
	0x035CFF00 LDR X1, [X8]
	0x035CFF04 BL 0x2AA4F58
	0x035CFF08 CBZ X0, 0x35CFFA4
	0x035CFF0C ADRP X8, 0xB69000
	0x035CFF10 LDR X8, [X8 + 0x6C0]
	0x035CFF14 LDR X1, [X8]
	0x035CFF18 ADD X8, X31, 0x8
	0x035CFF1C BL 0x275A7AC
	0x035CFF20 LDUR V0, [X31 + 0x8]
	0x035CFF24 LDR X8, [X31 + 0x18]
	0x035CFF28 LDR X19, [X31 + 0x58]
	0x035CFF2C MOVN W9, 0x2
	0x035CFF30 STR V0, [X31 + 0x2]
	0x035CFF34 STR X8, [X31 + 0x30]
	0x035CFF38 STR X8, [X19 + 0x40]
	0x035CFF3C STR V0, [X19 + 0x3]
	0x035CFF40 STR W9, [X19 + 0x10]
	0x035CFF44 B 0x35CFF50
	0x035CFF48 MOVN W8, 0x2
	0x035CFF4C STR W8, [X19 + 0x10]
	0x035CFF50 ADRP X8, 0xB69000
	0x035CFF54 LDR X8, [X8 + 0x6B0]
	0x035CFF58 ADD X0, X19, 0x30
	0x035CFF5C LDR X1, [X8]
	0x035CFF60 BL 0x2C0B1F0
	0x035CFF64 LDR X8, [X31 + 0x58]
	0x035CFF68 TBZ X0, 0x0, 0x35CFF80
	0x035CFF6C LDR X9, [X8 + 0x40]
	0x035CFF70 MOVZ W0, 0x1
	0x035CFF74 STR W0, [X8 + 0x10]
	0x035CFF78 STR X9, [X8 + 0x18]
	0x035CFF7C B 0x35CFFDC
	0x035CFF80 MOV X0, X8
	0x035CFF84 BL 0x35D0030
	0x035CFF88 LDR X8, [X31 + 0x58]
	0x035CFF8C MOV W0, W31
	0x035CFF90 STP X31, X31, [X8 + 0x30]
	0x035CFF94 STR X31, [X8 + 0x40]
	0x035CFF98 B 0x35CFFDC
	0x035CFF9C BL 0x1C16F20
	0x035CFFA0 BL 0x1C16F20
	0x035CFFA4 BL 0x1C16F20
	0x035CFFA8 B 0x35CFFBC
	0x035CFFAC B 0x35CFFBC
	0x035CFFB0 B 0x35CFFBC
	0x035CFFB4 B 0x35CFFBC
	0x035CFFB8 B 0x35CFFBC
	0x035CFFBC CMP W1, 0x1
	0x035CFFC0 B.NE 0x35D0004
	0x035CFFC4 BL 0x3EB1AD0
	0x035CFFC8 LDR X19, [X0]
	0x035CFFCC STR X19, [X31 + 0x40]
	0x035CFFD0 BL 0x3EB1AE0
	0x035CFFD4 CBNZ X19, 0x35CFFEC
	0x035CFFD8 MOV W0, W31
	0x035CFFDC LDP X20, X19, [X31 + 0x60]
	0x035CFFE0 LDR X30, [X31 + 0x50]
	0x035CFFE4 ADD X31, X31, 0x70
	0x035CFFE8 RET
	0x035CFFEC ADD X8, X31, 0x40
	0x035CFFF0 ADD X0, X8, 0x8
	0x035CFFF4 BL 0x1BC1FE8
	0x035CFFF8 MOV X0, X19
	0x035CFFFC BL 0x1C16F18
	0x035D0000 CBNZ X19, 0x35D0008
	0x035D0004 BL 0x1D2C690
	0x035D0008 LDR X0, [X31 + 0x58]
	0x035D000C LDR W8, [X0 + 0x10]
	0x035D0010 CMP W8, 0x1
	0x035D0014 B.EQ 0x35D0020
	0x035D0018 ADDS W31, W8, 0x3
	0x035D001C B.NE 0x35D0024
	0x035D0020 BL 0x35D0030
	0x035D0024 MOV X0, X19
	0x035D0028 BL 0x1C16F18
	0x035D002C BL 0x1990590
	0x035D0030 STP X30, X21, [X31 - 0x20]!
	0x035D0034 STP X20, X19, [X31 + 0x10]
	0x035D0038 ADRP X21, 0xE10000
	0x035D003C ADRP X20, 0xB68000
	0x035D0040 LDRB W8, [X21 + 0x205]
	0x035D0044 LDR X20, [X20 + 0x6C8]
	0x035D0048 MOV X19, X0
	0x035D004C TBNZ X8, 0x0, 0x35D0064
	0x035D0050 ADRP X0, 0xB68000
	0x035D0054 LDR X0, [X0 + 0x6C8]
	0x035D0058 BL 0x1C16CF4
	0x035D005C MOVZ W8, 0x1
	0x035D0060 STRB W8, [X21 + 0x205]
	0x035D0064 MOVN W8, 0x0
	0x035D0068 STR W8, [X19 + 0x10]
	0x035D006C LDR X1, [X20]
	0x035D0070 ADD X0, X19, 0x30
	0x035D0074 LDP X20, X19, [X31 + 0x10]
	0x035D0078 LDP X30, X21, [X31], #0x20
	0x035D007C B 0x2C0B1EC
	0x035D0080 LDR X0, [X0 + 0x18]
	0x035D0084 RET
	0x035D0088 STP X30, X19, [X31 - 0x10]!
	0x035D008C ADRP X0, 0xB23000
	0x035D0090 LDR X0, [X0 + 0xB40]
	0x035D0094 BL 0x1C16D08
	0x035D0098 BL 0x1C16F10
	0x035D009C MOV X1, X31
	0x035D00A0 MOV X19, X0
	0x035D00A4 BL 0x3380310
	0x035D00A8 ADRP X0, 0xB68000
	0x035D00AC LDR X0, [X0 + 0x6D0]
	0x035D00B0 BL 0x1C16D08
	0x035D00B4 MOV X1, X0
	0x035D00B8 MOV X0, X19
	0x035D00BC BL 0x1C16DEC
	0x035D00C0 LDR X0, [X0 + 0x18]
	0x035D00C4 RET
	0x035D00C8 STR X30, [X31 - 0x20]!
	0x035D00CC STP X20, X19, [X31 + 0x10]
	0x035D00D0 ADRP X20, 0xE10000
	0x035D00D4 LDRB W8, [X20 + 0x206]
	0x035D00D8 MOV X19, X0
	0x035D00DC TBNZ X8, 0x0, 0x35D00F4
	0x035D00E0 ADRP X0, 0xB68000
	0x035D00E4 LDR X0, [X0 + 0x538]
	0x035D00E8 BL 0x1C16CF4
	0x035D00EC MOVZ W8, 0x1
	0x035D00F0 STRB W8, [X20 + 0x206]
	0x035D00F4 LDR W8, [X19 + 0x10]
	0x035D00F8 ADDS W31, W8, 0x2
	0x035D00FC B.NE 0x35D011C
	0x035D0100 LDR W20, [X19 + 0x20]
	0x035D0104 MOV X0, X31
	0x035D0108 BL 0x33C151C
	0x035D010C CMP W20, W0
	0x035D0110 B.NE 0x35D011C
	0x035D0114 STR W31, [X19 + 0x10]
	0x035D0118 B 0x35D0154
	0x035D011C ADRP X8, 0xB68000
	0x035D0120 LDR X8, [X8 + 0x538]
	0x035D0124 LDR X0, [X8]
	0x035D0128 BL 0x1C16F10
	0x035D012C MOV X1, X31
	0x035D0130 MOV X20, X0
	0x035D0134 BL 0x33BDD8C
	0x035D0138 MOV X0, X31
	0x035D013C STR W31, [X20 + 0x10]
	0x035D0140 BL 0x33C151C
	0x035D0144 STR W0, [X20 + 0x20]
	0x035D0148 LDR X8, [X19 + 0x28]
	0x035D014C MOV X19, X20
	0x035D0150 STR X8, [X20 + 0x28]
	0x035D0154 MOV X0, X19
	0x035D0158 LDP X20, X19, [X31 + 0x10]
	0x035D015C LDR X30, [X31], #0x20
	0x035D0160 RET
	0x035D0164 B 0x35D00C8
	0x035D0168 LDR X0, [X0 + 0x10]
	0x035D016C RET
	0x035D0170 STR X1, [X0 + 0x10]
	0x035D0174 RET
	0x035D0178 LDR X0, [X0 + 0x18]
	0x035D017C RET
	0x035D0180 STR X1, [X0 + 0x18]
	0x035D0184 RET
	0x035D0188 LDRB W0, [X0 + 0x20]
	0x035D018C RET
	0x035D0190 AND W8, W1, 0x1
	0x035D0194 STRB W8, [X0 + 0x20]
	0x035D0198 RET
	0x035D019C LDR X0, [X0 + 0x28]
	0x035D01A0 RET
	0x035D01A4 STR X1, [X0 + 0x28]
	0x035D01A8 RET
	0x035D01AC LDR X0, [X0 + 0x30]
	0x035D01B0 RET
	0x035D01B4 STR X1, [X0 + 0x30]
	0x035D01B8 RET
	0x035D01BC STR X30, [X31 - 0x20]!
	0x035D01C0 STP X20, X19, [X31 + 0x10]
	0x035D01C4 ADRP X20, 0xE10000
	0x035D01C8 LDRB W8, [X20 + 0x207]
	0x035D01CC MOV X19, X0
	0x035D01D0 TBNZ X8, 0x0, 0x35D01E8
	0x035D01D4 ADRP X0, 0xB24000
	0x035D01D8 LDR X0, [X0 + 0x1B0]
	0x035D01DC BL 0x1C16CF4
	0x035D01E0 MOVZ W8, 0x1
	0x035D01E4 STRB W8, [X20 + 0x207]
	0x035D01E8 LDR X19, [X19 + 0x30]
	0x035D01EC CBZ X19, 0x35D0238
	0x035D01F0 ADRP X10, 0xB24000
	0x035D01F4 LDR X8, [X19]
	0x035D01F8 LDR X10, [X10 + 0x1B0]
	0x035D01FC LDRH W9, [X8 + 0x12E]
	0x035D0200 LDR X1, [X10]
	0x035D0204 CBZ X9, 0x35D0228
	0x035D0208 LDR X10, [X8 + 0xB0]
	0x035D020C ADD X10, X10, 0x8
	0x035D0210 LDUR X11, [X10 - 0x8]
	0x035D0214 CMP X11, X1
	0x035D0218 B.EQ 0x35D0248
	0x035D021C SUBS X9, X9, 0x1
	0x035D0220 ADD X10, X10, 0x10
	0x035D0224 B.NE 0x35D0210
	0x035D0228 MOVZ W2, 0x9
	0x035D022C MOV X0, X19
	0x035D0230 BL 0x1C5C788
	0x035D0234 B 0x35D0258
	0x035D0238 LDP X20, X19, [X31 + 0x10]
	0x035D023C MOV X0, X31
	0x035D0240 LDR X30, [X31], #0x20
	0x035D0244 RET
	0x035D0248 LDR W9, [X10]
	0x035D024C ADD W9, W9, 0x9
	0x035D0250 ADD X8, X8, W9, 0x4, SXTW
	0x035D0254 ADD X0, X8, 0x138
	0x035D0258 LDP X2, X1, [X0]
	0x035D025C MOV X0, X19
	0x035D0260 LDP X20, X19, [X31 + 0x10]
	0x035D0264 LDR X30, [X31], #0x20
	0x035D0268 BR X2
	0x035D026C LDRB W0, [X0 + 0x38]
	0x035D0270 RET
	0x035D0274 AND W8, W1, 0x1
	0x035D0278 STRB W8, [X0 + 0x38]
	0x035D027C RET
	0x035D0280 LDRB W0, [X0 + 0x39]
	0x035D0284 RET
	0x035D0288 AND W8, W1, 0x1
	0x035D028C STRB W8, [X0 + 0x39]
	0x035D0290 RET
	0x035D0294 STR X30, [X31 - 0x20]!
	0x035D0298 STP X20, X19, [X31 + 0x10]
	0x035D029C ADRP X20, 0xE10000
	0x035D02A0 LDRB W8, [X20 + 0x208]
	0x035D02A4 MOV X19, X0
	0x035D02A8 TBNZ X8, 0x0, 0x35D02C0
	0x035D02AC ADRP X0, 0xB24000
	0x035D02B0 LDR X0, [X0 + 0x1B0]
	0x035D02B4 BL 0x1C16CF4
	0x035D02B8 MOVZ W8, 0x1
	0x035D02BC STRB W8, [X20 + 0x208]
	0x035D02C0 LDR X20, [X19 + 0x28]
	0x035D02C4 CBZ X20, 0x35D0338
	0x035D02C8 ADRP X10, 0xB24000
	0x035D02CC LDR X8, [X20]
	0x035D02D0 LDR X10, [X10 + 0x1B0]
	0x035D02D4 LDRH W9, [X8 + 0x12E]
	0x035D02D8 LDR X1, [X10]
	0x035D02DC CBZ X9, 0x35D0300
	0x035D02E0 LDR X10, [X8 + 0xB0]
	0x035D02E4 ADD X10, X10, 0x8
	0x035D02E8 LDUR X11, [X10 - 0x8]
	0x035D02EC CMP X11, X1
	0x035D02F0 B.EQ 0x35D0310
	0x035D02F4 SUBS X9, X9, 0x1
	0x035D02F8 ADD X10, X10, 0x10
	0x035D02FC B.NE 0x35D02E8
	0x035D0300 MOVZ W2, 0xA
	0x035D0304 MOV X0, X20
	0x035D0308 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xE12000
	011 Move X23, 0xB6A000
	012 Move W8, [X21+505]
	013 Move X23, [X23+1416]
	014 Move W19, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {52}
	020 Move X0, 0xB69000
	021 Move X0, [X0+3960]
	022 Call 0x1C17CF4
	023 Move X0, 0xB69000
	024 Move X0, [X0+3944]
	025 Call 0x1C17CF4
	026 Move X0, 0xB25000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0xB69000
	030 Move X0, [X0+4072]
	031 Call 0x1C17CF4
	032 Move X0, 0xB69000
	033 Move X0, [X0+4080]
	034 Call 0x1C17CF4
	035 Move X0, 0xB25000
	036 Move X0, [X0+3608]
	037 Call 0x1C17CF4
	038 Move X0, 0xB26000
	039 Move X0, [X0+432]
	040 Call 0x1C17CF4
	041 Move X0, 0xB6A000
	042 Move X0, [X0+1576]
	043 Call 0x1C17CF4
	044 Move X0, 0xB6A000
	045 Move X0, [X0+1584]
	046 Call 0x1C17CF4
	047 Move X0, 0xB6A000
	048 Move X0, [X0+1416]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+505], W8
	052 Move X8, [X20]
	053 Move X0, X20
	054 Move X9, [X8+792]
	055 Move X1, [X8+800]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X23]
	058 Move X20, X0
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {65}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X8, [X23]
	065 Move X24, 0xB69000
	066 Move X9, [X8+184]
	067 Move X24, [X24+3960]
	068 Move TEMP, X19
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {97}
	072 Move X21, [X9+32]
	073 Compare X21, 0
	074 JumpIfNotEqual {122}
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {81}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X8, [X23]
	081 Move X9, 0xB69000
	082 Move X8, [X8+184]
	083 Move X9, [X9+3944]
	084 Move X22, [X8]
	085 Move X0, [X9]
	086 Call 0x1C17F10
	087 Move X8, 0xB6A000
	088 Move X8, [X8+1576]
	089 Move X1, X22
	090 Move X3, X31
	091 Move X21, X0
	092 Move X2, [X8]
	093 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	094 Move X8, [X23]
	095 Move X8, [X8+184]
	096 Move [X8+32], X21
	097 Move X21, [X9+40]
	098 Compare X21, 0
	099 JumpIfNotEqual {122}
	100 Move W9, [X8+224]
	101 Compare W9, 0
	102 JumpIfNotEqual {106}
	103 Move X0, X8
	104 Call 0x1C17DFC
	105 Move X8, [X23]
	106 Move X9, 0xB69000
	107 Move X8, [X8+184]
	108 Move X9, [X9+3944]
	109 Move X22, [X8]
	110 Move X0, [X9]
	111 Call 0x1C17F10
	112 Move X8, 0xB6A000
	113 Move X8, [X8+1584]
	114 Move X1, X22
	115 Move X3, X31
	116 Move X21, X0
	117 Move X2, [X8]
	118 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	119 Move X8, [X23]
	120 Move X8, [X8+184]
	121 Move [X8+40], X21
	122 Move X2, [X24]
	123 Move X0, X20
	124 Move X1, X21
	125 Call Enumerable.Where, X0, X1
	126 Compare X0, 0
	127 JumpIfEqual {272}
	128 Move X10, 0xB68000
	129 Move X8, [X0]
	130 Move X10, [X10+4072]
	131 Move X20, X0
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Move X1, [X10]
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X20
	143 Move W2, W31
	144 Call 0x1C5D788
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X22, 0xB24000
	151 Move X22, [X22+3584]
	152 Move X0, X20
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X20, X0
	155 Compare X0, 0
	156 JumpIfEqual {273}
	157 Move X23, 0xB24000
	158 Move X24, 0xB68000
	159 Move X25, 0xB25000
	160 Move X23, [X23+3608]
	161 Move X24, [X24+4080]
	162 Move X25, [X25+432]
	163 Move X8, [X20]
	164 Move X1, [X23]
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move X0, X20
	175 Move W2, W31
	176 Call 0x1C5D788
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Add X8, X8, X9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X1, [X0+8]
	182 Move X0, X20
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {235}
	188 Move X8, [X20]
	189 Move X1, [X24]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move X0, X20
	200 Move W2, W31
	201 Call 0x1C5D788
	202 NotImplemented "Instruction LDRSW not yet implemented."
	203 Add X8, X8, X9
	204 Add X0, X8, 312
	205 Move X8, [X0]
	206 Move X1, [X0+8]
	207 Move X0, X20
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move X21, X0
	210 Compare X0, 0
	211 JumpIfEqual {271}
	212 Move X8, [X21]
	213 Move X1, [X25]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 23
	224 Move X0, X21
	225 Call 0x1C5D788
	226 Move W9, [X10]
	227 Add W9, W9, 23
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X2, [X0+8]
	232 And W1, W19, 1
	233 Move X0, X21
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move X19, X31
	236 Compare X20, 0
	237 JumpIfEqual {259}
	238 Move X8, [X20]
	239 Move X1, [X22]
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Compare X9, 0
	242 JumpIfEqual {249}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 Move X0, X20
	250 Move W2, W31
	251 Call 0x1C5D788
	252 NotImplemented "Instruction LDRSW not yet implemented."
	253 Add X8, X8, X9
	254 Add X0, X8, 312
	255 Move X8, [X0]
	256 Move X1, [X0+8]
	257 Move X0, X20
	258 NotImplemented "Instruction BLR not yet implemented."
	259 Compare X19, 0
	260 JumpIfNotEqual {274}
	261 Move X20, [X31+64]
	262 Move X19, [X31+72]
	263 Move X22, [X31+48]
	264 Move X21, [X31+56]
	265 Move X24, [X31+32]
	266 Move X23, [X31+40]
	267 Move X30, [X31+16]
	268 Move X25, [X31+24]
	269 Add X31, X31, 80
	270 Return 
	271 Call 0x1C17F20
	272 Call 0x1C17F20
	273 Call 0x1C17F20
	274 Move X0, X19
	275 Call 0x1C17F18
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Call 0x3EB2AD0
	278 Move X19, [X0]
	279 Call 0x3EB2AE0
	280 Move [X31+8], X0
	281 Move X19, X31
	282 Move [X31+8], X0
	283 Compare X20, 0
	284 JumpIfEqual {306}
	285 Move X8, [X20]
	286 Move X1, [X22]
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Compare X9, 0
	289 JumpIfEqual {296}
	290 Move X10, [X8+176]
	291 Add X10, X10, 8
	292 NotImplemented "Instruction LDUR not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Subtract X9, X9, 1
	295 Add X10, X10, 16
	296 Move X0, X20
	297 Move W2, W31
	298 Call 0x1C5D788
	299 NotImplemented "Instruction LDRSW not yet implemented."
	300 Add X8, X8, X9
	301 Add X0, X8, 312
	302 Move X8, [X0]
	303 Move X1, [X0+8]
	304 Move X0, X20
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Compare X19, 0
	307 JumpIfNotEqual {310}
	308 Move X0, [X31+8]
	309 Call 0x1D2D690
	310 Move X0, X19
	311 Call 0x1C17F18
	312 Call 0x1991590

Method: System.Void CopyTo(SpatialSys.ObservableState.IStateObject other)

Disassembly:
	0x035D030C B 0x35D0320
	0x035D0310 LDR W9, [X10]
	0x035D0314 ADD W9, W9, 0xA
	0x035D0318 ADD X8, X8, W9, 0x4, SXTW
	0x035D031C ADD X0, X8, 0x138
	0x035D0320 LDP X8, X1, [X0]
	0x035D0324 MOV X0, X20
	0x035D0328 BLR X8
	0x035D032C TBZ X0, 0x0, 0x35D0338
	0x035D0330 MOVZ W0, 0x1
	0x035D0334 B 0x35D0344
	0x035D0338 LDRB W8, [X19 + 0x3A]
	0x035D033C CMP W8, 0x0
	0x035D0340 CSET W0, NE
	0x035D0344 LDP X20, X19, [X31 + 0x10]
	0x035D0348 LDR X30, [X31], #0x20
	0x035D034C RET
	0x035D0350 AND W8, W1, 0x1
	0x035D0354 STRB W8, [X0 + 0x3A]
	0x035D0358 RET
	0x035D035C STR X30, [X31 - 0x40]!
	0x035D0360 STP X24, X23, [X31 + 0x10]
	0x035D0364 STP X22, X21, [X31 + 0x20]
	0x035D0368 STP X20, X19, [X31 + 0x30]
	0x035D036C ADRP X20, 0xE10000
	0x035D0370 LDRB W8, [X20 + 0x20A]
	0x035D0374 MOV X19, X0
	0x035D0378 TBNZ X8, 0x0, 0x35D03C0
	0x035D037C ADRP X0, 0xB23000
	0x035D0380 LDR X0, [X0 + 0xE00]
	0x035D0384 BL 0x1C16CF4
	0x035D0388 ADRP X0, 0xB67000
	0x035D038C LDR X0, [X0 + 0xFE8]
	0x035D0390 BL 0x1C16CF4
	0x035D0394 ADRP X0, 0xB67000
	0x035D0398 LDR X0, [X0 + 0xFF0]
	0x035D039C BL 0x1C16CF4
	0x035D03A0 ADRP X0, 0xB23000
	0x035D03A4 LDR X0, [X0 + 0xE18]
	0x035D03A8 BL 0x1C16CF4
	0x035D03AC ADRP X0, 0xB4D000
	0x035D03B0 LDR X0, [X0 + 0x310]
	0x035D03B4 BL 0x1C16CF4
	0x035D03B8 MOVZ W8, 0x1
	0x035D03BC STRB W8, [X20 + 0x20A]
	0x035D03C0 LDR X8, [X19]
	0x035D03C4 MOV X0, X19
	0x035D03C8 LDR X9, [X8 + 0x388]
	0x035D03CC LDR X1, [X8 + 0x390]
	0x035D03D0 BLR X9
	0x035D03D4 LDR X8, [X19]
	0x035D03D8 MOV X0, X19
	0x035D03DC LDR X9, [X8 + 0x318]
	0x035D03E0 LDR X1, [X8 + 0x320]
	0x035D03E4 BLR X9
	0x035D03E8 CBZ X0, 0x35D0640
	0x035D03EC ADRP X10, 0xB67000
	0x035D03F0 LDR X8, [X0]
	0x035D03F4 LDR X10, [X10 + 0xFE8]
	0x035D03F8 MOV X20, X0
	0x035D03FC LDRH W9, [X8 + 0x12E]
	0x035D0400 LDR X1, [X10]
	0x035D0404 CBZ X9, 0x35D0428
	0x035D0408 LDR X10, [X8 + 0xB0]
	0x035D040C ADD X10, X10, 0x8
	0x035D0410 LDUR X11, [X10 - 0x8]
	0x035D0414 CMP X11, X1
	0x035D0418 B.EQ 0x35D0438
	0x035D041C SUBS X9, X9, 0x1
	0x035D0420 ADD X10, X10, 0x10
	0x035D0424 B.NE 0x35D0410
	0x035D0428 MOV X0, X20
	0x035D042C MOV W2, W31
	0x035D0430 BL 0x1C5C788
	0x035D0434 B 0x35D0444
	0x035D0438 LDRSW X9, [X10]
	0x035D043C ADD X8, X8, X9, 0x4, LSL
	0x035D0440 ADD X0, X8, 0x138
	0x035D0444 LDP X8, X1, [X0]
	0x035D0448 ADRP X22, 0xB23000
	0x035D044C LDR X22, [X22 + 0xE00]
	0x035D0450 MOV X0, X20
	0x035D0454 BLR X8
	0x035D0458 MOV X20, X0
	0x035D045C CBZ X0, 0x35D0644
	0x035D0460 ADRP X21, 0xB23000
	0x035D0464 ADRP X23, 0xB67000
	0x035D0468 ADRP X24, 0xB4D000
	0x035D046C LDR X21, [X21 + 0xE18]
	0x035D0470 LDR X23, [X23 + 0xFF0]
	0x035D0474 LDR X24, [X24 + 0x310]
	0x035D0478 LDR X8, [X20]
	0x035D047C LDR X1, [X21]
	0x035D0480 LDRH W9, [X8 + 0x12E]
	0x035D0484 CBZ X9, 0x35D04A8
	0x035D0488 LDR X10, [X8 + 0xB0]
	0x035D048C ADD X10, X10, 0x8
	0x035D0490 LDUR X11, [X10 - 0x8]
	0x035D0494 CMP X11, X1
	0x035D0498 B.EQ 0x35D04B8
	0x035D049C SUBS X9, X9, 0x1
	0x035D04A0 ADD X10, X10, 0x10
	0x035D04A4 B.NE 0x35D0490
	0x035D04A8 MOV X0, X20
	0x035D04AC MOV W2, W31
	0x035D04B0 BL 0x1C5C788
	0x035D04B4 B 0x35D04C4
	0x035D04B8 LDRSW X9, [X10]
	0x035D04BC ADD X8, X8, X9, 0x4, LSL
	0x035D04C0 ADD X0, X8, 0x138
	0x035D04C4 LDP X8, X1, [X0]
	0x035D04C8 MOV X0, X20
	0x035D04CC BLR X8
	0x035D04D0 TBZ X0, 0x0, 0x35D0584
	0x035D04D4 LDR X8, [X20]
	0x035D04D8 LDR X1, [X23]
	0x035D04DC LDRH W9, [X8 + 0x12E]
	0x035D04E0 CBZ X9, 0x35D0504
	0x035D04E4 LDR X10, [X8 + 0xB0]
	0x035D04E8 ADD X10, X10, 0x8
	0x035D04EC LDUR X11, [X10 - 0x8]
	0x035D04F0 CMP X11, X1
	0x035D04F4 B.EQ 0x35D0514
	0x035D04F8 SUBS X9, X9, 0x1
	0x035D04FC ADD X10, X10, 0x10
	0x035D0500 B.NE 0x35D04EC
	0x035D0504 MOV X0, X20
	0x035D0508 MOV W2, W31
	0x035D050C BL 0x1C5C788
	0x035D0510 B 0x35D0520
	0x035D0514 LDRSW X9, [X10]
	0x035D0518 ADD X8, X8, X9, 0x4, LSL
	0x035D051C ADD X0, X8, 0x138
	0x035D0520 LDP X8, X1, [X0]
	0x035D0524 MOV X0, X20
	0x035D0528 BLR X8
	0x035D052C CBZ X0, 0x35D063C
	0x035D0530 LDR X9, [X0]
	0x035D0534 LDR X8, [X24]
	0x035D0538 LDRB W11, [X9 + 0x130]
	0x035D053C LDRB W10, [X8 + 0x130]
	0x035D0540 CMP W11, W10
	0x035D0544 B.CC 0x35D063C
	0x035D0548 LDR X11, [X9 + 0xC8]
	0x035D054C ADD X11, X11, X10, 0x3, LSL
	0x035D0550 LDUR X11, [X11 - 0x8]
	0x035D0554 CMP X11, X8
	0x035D0558 B.NE 0x35D063C
	0x035D055C LDR X9, [X9 + 0xC8]
	0x035D0560 ADD X9, X9, X10, 0x3, LSL
	0x035D0564 LDUR X9, [X9 - 0x8]
	0x035D0568 CMP X9, X8
	0x035D056C CSEL X0, X0, X31, EQ
	0x035D0570 LDR X8, [X0]
	0x035D0574 LDR X1, [X8 + 0x380]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X21, 0xE11000
	010 Move W8, [X21+506]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xB69000
	018 Move X0, [X0+1592]
	019 Call 0x1C17CF4
	020 Move X0, 0xB69000
	021 Move X0, [X0+1600]
	022 Call 0x1C17CF4
	023 Move X0, 0xB69000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0xB69000
	027 Move X0, [X0+1616]
	028 Call 0x1C17CF4
	029 Move X0, 0xB25000
	030 Move X0, [X0+432]
	031 Call 0x1C17CF4
	032 Move X0, 0xB69000
	033 Move X0, [X0+1624]
	034 Call 0x1C17CF4
	035 Move X0, 0xB69000
	036 Move X0, [X0+1552]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+506], W8
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X31+80], X31
	042 Move [X31+48], V0
	043 Move [X31+56], V0
	044 Move [X31+104], X31
	045 Move X0, [X20+64]
	046 Compare X0, 0
	047 JumpIfEqual {144}
	048 Move X8, 0xB69000
	049 Move X8, [X8+1592]
	050 Move X23, 0xB69000
	051 Move X24, 0xB25000
	052 Move X22, 0xB69000
	053 Move X1, [X8]
	054 Move X23, [X23+1608]
	055 Move X24, [X24+432]
	056 Move X22, [X22+1600]
	057 Add X8, X31, 8
	058 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Move X8, [X31+40]
	062 Move [X31+48], V0
	063 Move [X31+56], V1
	064 Move [X31+80], X8
	065 Move X1, [X23]
	066 Add X0, X31, 48
	067 Call Enumerator<Object, Object>.MoveNext, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {130}
	072 Compare X19, 0
	073 JumpIfEqual {142}
	074 Move X8, [X19]
	075 Move X21, [X31+64]
	076 Move X20, [X31+72]
	077 Move X1, [X24]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move W2, 21
	088 Move X0, X19
	089 Call 0x1C5D788
	090 Move W9, [X10]
	091 Add W9, W9, 21
	092 Add X8, X8, W9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X3, [X0+8]
	096 Add X2, X31, 104
	097 Move X0, X19
	098 Move X1, X21
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {65}
	104 Compare X20, 0
	105 JumpIfEqual {143}
	106 Move X8, [X20]
	107 Move X21, [X31+104]
	108 Move X1, [X24]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 24
	119 Move X0, X20
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 24
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X2, [X0+8]
	127 Move X0, X20
	128 Move X1, X21
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X1, [X22]
	131 Add X0, X31, 48
	132 Call Enumerator<Object, Object>.Dispose, X0
	133 Move X20, [X31+144]
	134 Move X19, [X31+152]
	135 Move X22, [X31+128]
	136 Move X21, [X31+136]
	137 Move X24, [X31+112]
	138 Move X23, [X31+120]
	139 Move X30, [X31+96]
	140 Add X31, X31, 160
	141 Return 
	142 Call 0x1C17F20
	143 Call 0x1C17F20
	144 Call 0x1C17F20
	145 Move X19, X0
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X0, X19
	148 Call 0x3EB2AD0
	149 Move X20, [X0]
	150 Call 0x3EB2AE0
	151 Move X1, [X22]
	152 Add X0, X31, 48
	153 Call Enumerator<Object, Object>.Dispose, X0
	154 Compare X20, 0
	155 JumpIfEqual {133}
	156 Move X0, X20
	157 Call 0x1C17F18
	158 Move X20, X31
	159 Move X19, X0
	160 Move X1, [X22]
	161 Add X0, X31, 48
	162 Call Enumerator<Object, Object>.Dispose, X0
	163 Compare X20, 0
	164 JumpIfNotEqual {167}
	165 Move X0, X19
	166 Call 0x1D2D690
	167 Move X0, X20
	168 Call 0x1C17F18
	169 Call 0x1991590

Method: System.Collections.Generic.IEnumerable`1<System.Reflection.PropertyInfo> GetChildStatePropertyInfo(System.Type stateObjectType)

Disassembly:
	0x035CEF48 LDR X9, [X8 + 0xB8]
	0x035CEF4C LDR X24, [X24 + 0xF78]
	0x035CEF50 TBZ X19, 0x0, 0x35CEFB4
	0x035CEF54 LDR X21, [X9 + 0x20]
	0x035CEF58 CBNZ X21, 0x35CF010
	0x035CEF5C LDR W9, [X8 + 0xE0]
	0x035CEF60 CBNZ W9, 0x35CEF70
	0x035CEF64 MOV X0, X8
	0x035CEF68 BL 0x1C16DFC
	0x035CEF6C LDR X8, [X23]
	0x035CEF70 ADRP X9, 0xB69000
	0x035CEF74 LDR X8, [X8 + 0xB8]
	0x035CEF78 LDR X9, [X9 + 0xF68]
	0x035CEF7C LDR X22, [X8]
	0x035CEF80 LDR X0, [X9]
	0x035CEF84 BL 0x1C16F10
	0x035CEF88 ADRP X8, 0xB6A000
	0x035CEF8C LDR X8, [X8 + 0x628]
	0x035CEF90 MOV X1, X22
	0x035CEF94 MOV X3, X31
	0x035CEF98 MOV X21, X0
	0x035CEF9C LDR X2, [X8]
	0x035CEFA0 BL 0x2D2F428
	0x035CEFA4 LDR X8, [X23]
	0x035CEFA8 LDR X8, [X8 + 0xB8]
	0x035CEFAC STR X21, [X8 + 0x20]
	0x035CEFB0 B 0x35CF010
	0x035CEFB4 LDR X21, [X9 + 0x28]
	0x035CEFB8 CBNZ X21, 0x35CF010
	0x035CEFBC LDR W9, [X8 + 0xE0]
	0x035CEFC0 CBNZ W9, 0x35CEFD0
	0x035CEFC4 MOV X0, X8
	0x035CEFC8 BL 0x1C16DFC
	0x035CEFCC LDR X8, [X23]
	0x035CEFD0 ADRP X9, 0xB69000
	0x035CEFD4 LDR X8, [X8 + 0xB8]
	0x035CEFD8 LDR X9, [X9 + 0xF68]
	0x035CEFDC LDR X22, [X8]
	0x035CEFE0 LDR X0, [X9]
	0x035CEFE4 BL 0x1C16F10
	0x035CEFE8 ADRP X8, 0xB6A000
	0x035CEFEC LDR X8, [X8 + 0x630]
	0x035CEFF0 MOV X1, X22
	0x035CEFF4 MOV X3, X31
	0x035CEFF8 MOV X21, X0
	0x035CEFFC LDR X2, [X8]
	0x035CF000 BL 0x2D2F428
	0x035CF004 LDR X8, [X23]
	0x035CF008 LDR X8, [X8 + 0xB8]
	0x035CF00C STR X21, [X8 + 0x28]
	0x035CF010 LDR X2, [X24]
	0x035CF014 MOV X0, X20
	0x035CF018 MOV X1, X21
	0x035CF01C BL 0x21DA490
	0x035CF020 CBZ X0, 0x35CF250
	0x035CF024 ADRP X10, 0xB68000
	0x035CF028 LDR X8, [X0]
	0x035CF02C LDR X10, [X10 + 0xFE8]
	0x035CF030 MOV X20, X0
	0x035CF034 LDRH W9, [X8 + 0x12E]
	0x035CF038 LDR X1, [X10]
	0x035CF03C CBZ X9, 0x35CF060
	0x035CF040 LDR X10, [X8 + 0xB0]
	0x035CF044 ADD X10, X10, 0x8
	0x035CF048 LDUR X11, [X10 - 0x8]
	0x035CF04C CMP X11, X1
	0x035CF050 B.EQ 0x35CF070
	0x035CF054 SUBS X9, X9, 0x1
	0x035CF058 ADD X10, X10, 0x10
	0x035CF05C B.NE 0x35CF048
	0x035CF060 MOV X0, X20
	0x035CF064 MOV W2, W31
	0x035CF068 BL 0x1C5C788
	0x035CF06C B 0x35CF07C
	0x035CF070 LDRSW X9, [X10]
	0x035CF074 ADD X8, X8, X9, 0x4, LSL
	0x035CF078 ADD X0, X8, 0x138
	0x035CF07C LDP X8, X1, [X0]
	0x035CF080 ADRP X22, 0xB24000
	0x035CF084 LDR X22, [X22 + 0xE00]
	0x035CF088 MOV X0, X20
	0x035CF08C BLR X8
	0x035CF090 MOV X20, X0
	0x035CF094 CBZ X0, 0x35CF254
	0x035CF098 ADRP X23, 0xB24000
	0x035CF09C ADRP X24, 0xB68000
	0x035CF0A0 ADRP X25, 0xB25000
	0x035CF0A4 LDR X23, [X23 + 0xE18]
	0x035CF0A8 LDR X24, [X24 + 0xFF0]
	0x035CF0AC LDR X25, [X25 + 0x1B0]
	0x035CF0B0 LDR X8, [X20]
	0x035CF0B4 LDR X1, [X23]
	0x035CF0B8 LDRH W9, [X8 + 0x12E]
	0x035CF0BC CBZ X9, 0x35CF0E0
	0x035CF0C0 LDR X10, [X8 + 0xB0]
	0x035CF0C4 ADD X10, X10, 0x8
	0x035CF0C8 LDUR X11, [X10 - 0x8]
	0x035CF0CC CMP X11, X1
	0x035CF0D0 B.EQ 0x35CF0F0
	0x035CF0D4 SUBS X9, X9, 0x1
	0x035CF0D8 ADD X10, X10, 0x10
	0x035CF0DC B.NE 0x35CF0C8
	0x035CF0E0 MOV X0, X20
	0x035CF0E4 MOV W2, W31
	0x035CF0E8 BL 0x1C5C788
	0x035CF0EC B 0x35CF0FC
	0x035CF0F0 LDRSW X9, [X10]
	0x035CF0F4 ADD X8, X8, X9, 0x4, LSL
	0x035CF0F8 ADD X0, X8, 0x138
	0x035CF0FC LDP X8, X1, [X0]
	0x035CF100 MOV X0, X20
	0x035CF104 BLR X8
	0x035CF108 TBZ X0, 0x0, 0x35CF1D0
	0x035CF10C LDR X8, [X20]
	0x035CF110 LDR X1, [X24]
	0x035CF114 LDRH W9, [X8 + 0x12E]
	0x035CF118 CBZ X9, 0x35CF13C
	0x035CF11C LDR X10, [X8 + 0xB0]
	0x035CF120 ADD X10, X10, 0x8
	0x035CF124 LDUR X11, [X10 - 0x8]
	0x035CF128 CMP X11, X1
	0x035CF12C B.EQ 0x35CF14C
	0x035CF130 SUBS X9, X9, 0x1
	0x035CF134 ADD X10, X10, 0x10
	0x035CF138 B.NE 0x35CF124
	0x035CF13C MOV X0, X20
	0x035CF140 MOV W2, W31
	0x035CF144 BL 0x1C5C788
	0x035CF148 B 0x35CF158
	0x035CF14C LDRSW X9, [X10]
	0x035CF150 ADD X8, X8, X9, 0x4, LSL
	0x035CF154 ADD X0, X8, 0x138
	0x035CF158 LDP X8, X1, [X0]
	0x035CF15C MOV X0, X20
	0x035CF160 BLR X8
	0x035CF164 MOV X21, X0
	0x035CF168 CBZ X0, 0x35CF24C
	0x035CF16C LDR X8, [X21]
	0x035CF170 LDR X1, [X25]
	0x035CF174 LDRH W9, [X8 + 0x12E]
	0x035CF178 CBZ X9, 0x35CF19C
	0x035CF17C LDR X10, [X8 + 0xB0]
	0x035CF180 ADD X10, X10, 0x8
	0x035CF184 LDUR X11, [X10 - 0x8]
	0x035CF188 CMP X11, X1
	0x035CF18C B.EQ 0x35CF1AC
	0x035CF190 SUBS X9, X9, 0x1
	0x035CF194 ADD X10, X10, 0x10
	0x035CF198 B.NE 0x35CF184
	0x035CF19C MOVZ W2, 0x17

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE13000
	008 Move X20, 0xB6B000
	009 Move X21, 0xB26000
	010 Move W8, [X22+507]
	011 Move X20, [X20+1424]
	012 Move X21, [X21+1728]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0xB6B000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0xB6B000
	022 Move X0, [X0+1440]
	023 Call 0x1C17CF4
	024 Move X0, 0xB6B000
	025 Move X0, [X0+1424]
	026 Call 0x1C17CF4
	027 Move X0, 0xB26000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0xB6B000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move X0, 0xB6B000
	034 Move X0, [X0+1416]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+507], W8
	038 Move X0, [X21]
	039 Move X20, [X20]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Call Type.GetTypeFromHandle, X0
	047 Compare X0, 0
	048 JumpIfEqual {116}
	049 Move X8, [X0]
	050 Move X1, X19
	051 Move X9, [X8+680]
	052 Move X2, [X8+688]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {117}
	058 Move X0, X19
	059 Move X1, X31
	060 Call IntrospectionExtensions.GetTypeInfo, X0
	061 Compare X0, 0
	062 JumpIfEqual {116}
	063 Move X8, [X0]
	064 Move X22, 0xB6A000
	065 Move X9, [X8+2392]
	066 Move X1, [X8+2400]
	067 Move X22, [X22+1416]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X22]
	070 Move X19, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, [X22]
	077 Move X9, [X8+184]
	078 Move X23, 0xB6A000
	079 Move X20, [X9+48]
	080 Move X23, [X23+1432]
	081 Compare X20, 0
	082 JumpIfNotEqual {105}
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X22]
	089 Move X9, 0xB6A000
	090 Move X8, [X8+184]
	091 Move X9, [X9+1440]
	092 Move X21, [X8]
	093 Move X0, [X9]
	094 Call 0x1C17F10
	095 Move X8, 0xB6A000
	096 Move X8, [X8+1448]
	097 Move X1, X21
	098 Move X3, X31
	099 Move X20, X0
	100 Move X2, [X8]
	101 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	102 Move X8, [X22]
	103 Move X8, [X8+184]
	104 Move [X8+48], X20
	105 Move X2, [X23]
	106 Move X0, X19
	107 Move X1, X20
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X30, [X31+48]
	113 Move X23, [X31+56]
	114 Call Enumerable.Where, X0, X1
	115 Return X0
	116 Call 0x1C17F20
	117 Move X0, X19
	118 Call 0x19913C0
	119 Move X8, [X19]
	120 Move X0, X19
	121 Move X9, [X8+424]
	122 Move X1, [X8+432]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X19, X0
	125 Move X0, 0xB6A000
	126 Move X0, [X0+1424]
	127 Call 0x1C17D08
	128 Move X20, X0
	129 Move X0, 0xB25000
	130 Move X0, [X0+1728]
	131 Call 0x1C17D08
	132 Call 0x19913D0
	133 Move X0, X20
	134 Move X1, X31
	135 Call Type.GetTypeFromHandle, X0
	136 Move X20, X0
	137 Call 0x19913C0
	138 Move X8, [X20]
	139 Move X0, X20
	140 Move X9, [X8+424]
	141 Move X1, [X8+432]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X20, X0
	144 Move X0, 0xB2D000
	145 Move X0, [X0+1488]
	146 Call 0x1C17D08
	147 Move X21, X0
	148 Move X0, 0xB6A000
	149 Move X0, [X0+1456]
	150 Call 0x1C17D08
	151 Move X2, X0
	152 Move X0, X21
	153 Move X1, X19
	154 Move X3, X20
	155 Move X4, X31
	156 Call String.Concat, X0, X1, X2, X3
	157 Move X19, X0
	158 Move X0, 0xB25000
	159 Move X0, [X0+2000]
	160 Call 0x1C17D08
	161 Call 0x1C17F10
	162 Move X1, X19
	163 Move X2, X31
	164 Move X20, X0
	165 Call Exception..ctor, X0, X1
	166 Move X0, 0xB6A000
	167 Move X0, [X0+1464]
	168 Call 0x1C17D08
	169 Move X1, X0
	170 Move X0, X20
	171 Call 0x1C17DEC

