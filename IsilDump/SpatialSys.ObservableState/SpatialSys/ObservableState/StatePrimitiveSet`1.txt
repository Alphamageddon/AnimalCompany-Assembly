Type: SpatialSys.ObservableState.StatePrimitiveSet`1

Method: System.Int32 get_childCount()

Disassembly:
	0x0261FCF4 BL 0x3EB1AD0
	0x0261FCF8 LDR X21, [X0]
	0x0261FCFC BL 0x3EB1AE0
	0x0261FD00 B 0x261FC90
	0x0261FD04 MOV X21, X31
	0x0261FD08 B 0x261FD10
	0x0261FD0C MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+80]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+32]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<SpatialSys.ObservableState.IStateObject> get_childStateObjects()

Disassembly:
	0x0261FD10 LDR X8, [X19 + 0x20]
	0x0261FD14 LDR X8, [X8 + 0xC0]
	0x0261FD18 LDR X1, [X8 + 0x110]
	0x0261FD1C ADD X0, X31, 0x20
	0x0261FD20 BL 0x2BB614C
	0x0261FD24 CBNZ X21, 0x261FD30
	0x0261FD28 MOV X0, X20
	0x0261FD2C BL 0x1D2C690
	0x0261FD30 MOV X0, X21
	0x0261FD34 BL 0x1C16F18
	0x0261FD38 BL 0x1990590
	0x0261FD3C STR X30, [X31 - 0x10]!
	0x0261FD40 LDR X0, [X0 + 0x50]
	0x0261FD44 CBZ X0, 0x261FD60
	0x0261FD48 LDR X8, [X2 + 0x20]
	0x0261FD4C AND W1, W1, 0x1
	0x0261FD50 LDR X8, [X8 + 0xC0]
	0x0261FD54 LDR X2, [X8 + 0x118]
	0x0261FD58 LDR X30, [X31], #0x10
	0x0261FD5C B 0x2D5EA70
	0x0261FD60 BL 0x1C16F20
	0x0261FD64 SUB X31, X31, 0x50
	0x0261FD68 STP X30, X19, [X31 + 0x40]
	0x0261FD6C LDR X0, [X0 + 0x50]
	0x0261FD70 CBZ X0, 0x261FDC4
	0x0261FD74 LDR X8, [X1 + 0x20]
	0x0261FD78 MOV X19, X1
	0x0261FD7C LDR X8, [X8 + 0xC0]
	0x0261FD80 LDR X1, [X8 + 0xE0]
	0x0261FD84 ADD X8, X31, 0x0
	0x0261FD88 BL 0x2D5EF18
	0x0261FD8C LDR X8, [X31 + 0x10]
	0x0261FD90 LDR V0, [X31]
	0x0261FD94 ADD X1, X31, 0x0
	0x0261FD98 STR X8, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1DBC000
	005 Move X20, 0x1AFF000
	006 Move W8, [X19+78]
	007 Move X20, [X20+976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x1AFF000
	013 Move X0, [X0+976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+78], W8
	017 Move X19, [X20]
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X0, [X8+16]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X19+56]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X0, [X8]
	047 Move X30, [X31+32]
	048 Return X0

Method: System.Boolean get_isLeafObject()

Disassembly:
	0x0261FD9C STR V0, [X31 + 0x2]
	0x0261FDA0 STR V0, [X31]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_isIndexedCollection()

Disassembly:
	0x0261FDA4 STR X8, [X31 + 0x10]
	0x0261FDA8 LDR X8, [X19 + 0x20]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_isDerivedState()

Disassembly:
	0x0261FDAC LDR X8, [X8 + 0xC0]
	0x0261FDB0 LDR X0, [X8 + 0xE8]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 get_Count()

Disassembly:
	0x0261FDB4 BL 0x1C16E04
	0x0261FDB8 LDP X30, X19, [X31 + 0x40]
	0x0261FDBC ADD X31, X31, 0x50
	0x0261FDC0 RET
	0x0261FDC4 BL 0x1C16F20
	0x0261FDC8 SUB X31, X31, 0x50
	0x0261FDCC STP X30, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+80]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+32]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Type get_elementType()

Disassembly:
	0x0261FDD0 LDR X0, [X0 + 0x50]
	0x0261FDD4 CBZ X0, 0x261FE28

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Int32 get_elementTypeID()

Disassembly:
	0x0261FDD8 LDR X8, [X1 + 0x20]
	0x0261FDDC MOV X19, X1

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_elementTypeID(System.Int32 value)

Disassembly:
	0x0261FDE0 LDR X8, [X8 + 0xC0]
	0x0261FDE4 LDR X1, [X8 + 0xE0]

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x0261FDE8 ADD X8, X31, 0x0
	0x0261FDEC BL 0x2D5EF18
	0x0261FDF0 LDR X8, [X31 + 0x10]
	0x0261FDF4 LDR V0, [X31]
	0x0261FDF8 ADD X1, X31, 0x0
	0x0261FDFC STR X8, [X31 + 0x30]
	0x0261FE00 STR V0, [X31 + 0x2]
	0x0261FE04 STR V0, [X31]
	0x0261FE08 STR X8, [X31 + 0x10]
	0x0261FE0C LDR X8, [X19 + 0x20]
	0x0261FE10 LDR X8, [X8 + 0xC0]
	0x0261FE14 LDR X0, [X8 + 0xE8]
	0x0261FE18 BL 0x1C16E04
	0x0261FE1C LDP X30, X19, [X31 + 0x40]
	0x0261FE20 ADD X31, X31, 0x50
	0x0261FE24 RET
	0x0261FE28 BL 0x1C16F20
	0x0261FE2C STR X30, [X31 - 0x10]!
	0x0261FE30 LDR X0, [X0 + 0x50]
	0x0261FE34 CBZ X0, 0x261FE4C
	0x0261FE38 LDR X8, [X2 + 0x20]
	0x0261FE3C LDR X8, [X8 + 0xC0]
	0x0261FE40 LDR X2, [X8 + 0x120]
	0x0261FE44 LDR X30, [X31], #0x10
	0x0261FE48 B 0x2D5FFF8
	0x0261FE4C BL 0x1C16F20
	0x0261FE50 STR X30, [X31 - 0x10]!
	0x0261FE54 LDR X0, [X0 + 0x50]
	0x0261FE58 CBZ X0, 0x261FE70
	0x0261FE5C LDR X8, [X2 + 0x20]
	0x0261FE60 LDR X8, [X8 + 0xC0]
	0x0261FE64 LDR X2, [X8 + 0x128]
	0x0261FE68 LDR X30, [X31], #0x10
	0x0261FE6C B 0x2D60414
	0x0261FE70 BL 0x1C16F20
	0x0261FE74 STR X30, [X31 - 0x10]!
	0x0261FE78 LDR X0, [X0 + 0x50]
	0x0261FE7C CBZ X0, 0x261FE94
	0x0261FE80 LDR X8, [X2 + 0x20]
	0x0261FE84 LDR X8, [X8 + 0xC0]
	0x0261FE88 LDR X2, [X8 + 0x130]
	0x0261FE8C LDR X30, [X31], #0x10
	0x0261FE90 B 0x2D5FEBC
	0x0261FE94 BL 0x1C16F20
	0x0261FE98 STR X30, [X31 - 0x10]!
	0x0261FE9C LDR X0, [X0 + 0x50]
	0x0261FEA0 CBZ X0, 0x261FEB8
	0x0261FEA4 LDR X8, [X2 + 0x20]
	0x0261FEA8 LDR X8, [X8 + 0xC0]
	0x0261FEAC LDR X2, [X8 + 0x138]
	0x0261FEB0 LDR X30, [X31], #0x10
	0x0261FEB4 B 0x2D60260
	0x0261FEB8 BL 0x1C16F20
	0x0261FEBC STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1DBC000
	007 Move X21, 0x1AD5000
	008 Move W8, [X22+79]
	009 Move X21, [X21+1728]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1AFF000
	017 Move X0, [X0+784]
	018 Call 0x1C17CF4
	019 Move X0, 0x1AD5000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+79], W8
	024 Move X8, [X20+32]
	025 Move X0, [X21]
	026 Move X8, [X8+192]
	027 Move W9, [X0+224]
	028 Move X21, [X8+24]
	029 Compare W9, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X22, 0x1AFF000
	033 Move X22, [X22+784]
	034 Move X0, X21
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Move [X19+64], X0
	038 Move X8, [X20+32]
	039 Move X8, [X8+192]
	040 Move X0, [X8+8]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Call 0x1C17F10
	048 Move X8, [X20+32]
	049 Move X20, X0
	050 Move X8, [X8+192]
	051 Move X1, [X8+32]
	052 Call HashSet`1<Boolean>..ctor, X0
	053 Move [X19+80], X20
	054 Move X0, [X22]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X1, X31
	065 Move X30, [X31+48]
	066 Call StateObjectBase..ctor, X0
	067 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.IStateObject parent, System.String stateName)

Disassembly:
	0x0261FEC0 LDR X0, [X0 + 0x50]
	0x0261FEC4 CBZ X0, 0x261FEDC
	0x0261FEC8 LDR X8, [X2 + 0x20]
	0x0261FECC LDR X8, [X8 + 0xC0]
	0x0261FED0 LDR X2, [X8 + 0x140]
	0x0261FED4 LDR X30, [X31], #0x10
	0x0261FED8 B 0x2D60610
	0x0261FEDC BL 0x1C16F20
	0x0261FEE0 STR X30, [X31 - 0x40]!
	0x0261FEE4 STP X24, X23, [X31 + 0x10]
	0x0261FEE8 STP X22, X21, [X31 + 0x20]
	0x0261FEEC STP X20, X19, [X31 + 0x30]
	0x0261FEF0 ADRP X21, 0x1DBB000
	0x0261FEF4 LDRB W8, [X21 + 0x56]
	0x0261FEF8 MOV X22, X2
	0x0261FEFC MOV W19, W1
	0x0261FF00 MOV X20, X0
	0x0261FF04 TBNZ X8, 0x0, 0x261FF1C
	0x0261FF08 ADRP X0, 0x1AFE000
	0x0261FF0C LDR X0, [X0 + 0x318]
	0x0261FF10 BL 0x1C16CF4
	0x0261FF14 MOVZ W8, 0x1
	0x0261FF18 STRB W8, [X21 + 0x56]
	0x0261FF1C LDR X0, [X20 + 0x50]
	0x0261FF20 CBZ X0, 0x2620058
	0x0261FF24 LDR X8, [X22 + 0x20]
	0x0261FF28 AND W1, W19, 0x1
	0x0261FF2C LDR X8, [X8 + 0xC0]
	0x0261FF30 LDR X2, [X8 + 0x148]
	0x0261FF34 BL 0x2D5EC4C
	0x0261FF38 MOV W21, W0
	0x0261FF3C TBZ X0, 0x0, 0x2620040
	0x0261FF40 LDR X23, [X20 + 0x30]
	0x0261FF44 MOVZ W8, 0x1
	0x0261FF48 STRB W8, [X20 + 0x20]
	0x0261FF4C CBZ X23, 0x2620058
	0x0261FF50 ADRP X10, 0x1AFE000
	0x0261FF54 LDR X8, [X23]
	0x0261FF58 LDR X10, [X10 + 0x318]
	0x0261FF5C LDRH W9, [X8 + 0x12E]
	0x0261FF60 LDR X1, [X10]
	0x0261FF64 CBZ X9, 0x261FF88
	0x0261FF68 LDR X10, [X8 + 0xB0]
	0x0261FF6C ADD X10, X10, 0x8
	0x0261FF70 LDUR X11, [X10 - 0x8]
	0x0261FF74 CMP X11, X1
	0x0261FF78 B.EQ 0x261FF98
	0x0261FF7C SUBS X9, X9, 0x1
	0x0261FF80 ADD X10, X10, 0x10
	0x0261FF84 B.NE 0x261FF70
	0x0261FF88 MOV X0, X23
	0x0261FF8C MOV W2, W31
	0x0261FF90 BL 0x1C5C788
	0x0261FF94 B 0x261FFA4
	0x0261FF98 LDRSW X9, [X10]
	0x0261FF9C ADD X8, X8, X9, 0x4, LSL
	0x0261FFA0 ADD X0, X8, 0x138
	0x0261FFA4 LDP X8, X1, [X0]
	0x0261FFA8 MOV X0, X23
	0x0261FFAC BLR X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1DBC000
	009 Move X23, 0x1AD5000
	010 Move W8, [X24+80]
	011 Move X23, [X23+1728]
	012 Move X22, X3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x1AFF000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move X0, 0x1AD5000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+80], W8
	028 Move X8, [X22+32]
	029 Move X0, [X23]
	030 Move X8, [X8+192]
	031 Move W9, [X0+224]
	032 Move X23, [X8+24]
	033 Compare W9, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X24, 0x1AFF000
	037 Move X24, [X24+784]
	038 Move X0, X23
	039 Move X1, X31
	040 Call Type.GetTypeFromHandle, X0
	041 Move [X21+64], X0
	042 Move X8, [X22+32]
	043 Move X8, [X8+192]
	044 Move X0, [X8+8]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Call 0x1C17F10
	052 Move X8, [X22+32]
	053 Move X22, X0
	054 Move X8, [X8+192]
	055 Move X1, [X8+32]
	056 Call HashSet`1<Boolean>..ctor, X0
	057 Move [X21+80], X22
	058 Move X0, [X24]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X20
	065 Move X2, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X3, X31
	073 Move X30, [X31+64]
	074 Call StateObjectBase..ctor, X0, X1, X2
	075 Return 

Method: System.Void InternalInitialize(SpatialSys.ObservableState.IStateObject parent, System.String stateName, System.Boolean serialize)

Disassembly:
	0x0261FFB0 CBZ X0, 0x2620058
	0x0261FFB4 LDR X8, [X22 + 0x20]
	0x0261FFB8 LDR W22, [X20 + 0x48]
	0x0261FFBC MOV X23, X0
	0x0261FFC0 LDR X9, [X8 + 0xC0]
	0x0261FFC4 LDR X8, [X0]
	0x0261FFC8 LDR X24, [X9 + 0x100]
	0x0261FFCC LDRH W9, [X8 + 0x12E]
	0x0261FFD0 LDR X1, [X24 + 0x20]
	0x0261FFD4 LDRH W2, [X24 + 0x50]
	0x0261FFD8 CBZ X9, 0x261FFFC
	0x0261FFDC LDR X10, [X8 + 0xB0]
	0x0261FFE0 ADD X10, X10, 0x8
	0x0261FFE4 LDUR X11, [X10 - 0x8]
	0x0261FFE8 CMP X11, X1
	0x0261FFEC B.EQ 0x2620008
	0x0261FFF0 SUBS X9, X9, 0x1
	0x0261FFF4 ADD X10, X10, 0x10
	0x0261FFF8 B.NE 0x261FFE4
	0x0261FFFC MOV X0, X23
	0x02620000 BL 0x1C5C788
	0x02620004 B 0x2620018
	0x02620008 LDR W9, [X10]
	0x0262000C ADD W9, W9, W2
	0x02620010 ADD X8, X8, W9, 0x4, SXTW
	0x02620014 ADD X0, X8, 0x138
	0x02620018 LDR X0, [X0 + 0x8]
	0x0262001C MOV X1, X24
	0x02620020 BL 0x1C16DF8
	0x02620024 LDR X8, [X0 + 0x8]
	0x02620028 MOV X4, X0
	0x0262002C AND W2, W19, 0x1
	0x02620030 MOV X0, X23
	0x02620034 MOV X1, X20
	0x02620038 MOV W3, W22
	0x0262003C BLR X8
	0x02620040 AND W0, W21, 0x1
	0x02620044 LDP X20, X19, [X31 + 0x30]
	0x02620048 LDP X22, X21, [X31 + 0x20]
	0x0262004C LDP X24, X23, [X31 + 0x10]
	0x02620050 LDR X30, [X31], #0x40
	0x02620054 RET
	0x02620058 BL 0x1C16F20
	0x0262005C SUB X31, X31, 0x90
	0x02620060 STP X30, X27, [X31 + 0x40]
	0x02620064 STP X26, X25, [X31 + 0x50]
	0x02620068 STP X24, X23, [X31 + 0x60]
	0x0262006C STP X22, X21, [X31 + 0x70]
	0x02620070 STP X20, X19, [X31 + 0x80]
	0x02620074 ADRP X22, 0x1DBA000
	0x02620078 LDRB W8, [X22 + 0x57]
	0x0262007C MOV X19, X2
	0x02620080 MOV X21, X1
	0x02620084 MOV X20, X0
	0x02620088 TBNZ X8, 0x0, 0x26200A0
	0x0262008C ADRP X0, 0x1AFD000
	0x02620090 LDR X0, [X0 + 0x318]
	0x02620094 BL 0x1C16CF4
	0x02620098 MOVZ W8, 0x1
	0x0262009C STRB W8, [X22 + 0x57]
	0x026200A0 STP X31, X31, [X31 + 0x20]
	0x026200A4 STR X31, [X31 + 0x30]
	0x026200A8 LDR X8, [X19 + 0x20]
	0x026200AC LDR X8, [X8 + 0xC0]
	0x026200B0 LDR X0, [X8 + 0x150]
	0x026200B4 LDRB W8, [X0 + 0x135]
	0x026200B8 TBNZ X8, 0x0, 0x26200C0
	0x026200BC BL 0x1C5C684
	0x026200C0 BL 0x1C16F10
	0x026200C4 LDR X8, [X19 + 0x20]
	0x026200C8 MOV X22, X0
	0x026200CC LDR X8, [X8 + 0xC0]
	0x026200D0 LDR X1, [X8 + 0x158]
	0x026200D4 BL 0x23774F4
	0x026200D8 CBZ X22, 0x2620330
	0x026200DC STR X21, [X22 + 0x10]
	0x026200E0 LDR X8, [X19 + 0x20]
	0x026200E4 LDR X21, [X20 + 0x50]
	0x026200E8 LDR X8, [X8 + 0xC0]
	0x026200EC LDR X0, [X8 + 0x170]
	0x026200F0 LDRB W8, [X0 + 0x135]
	0x026200F4 TBNZ X8, 0x0, 0x26200FC
	0x026200F8 BL 0x1C5C684
	0x026200FC BL 0x1C16F10
	0x02620100 LDR X8, [X19 + 0x20]
	0x02620104 MOV X1, X22
	0x02620108 MOV X23, X0
	0x0262010C LDR X8, [X8 + 0xC0]
	0x02620110 LDR X2, [X8 + 0x168]
	0x02620114 LDR X3, [X8 + 0x178]
	0x02620118 BL 0x2D2B448
	0x0262011C LDR X8, [X19 + 0x20]
	0x02620120 MOV X0, X21
	0x02620124 MOV X1, X23
	0x02620128 LDR X8, [X8 + 0xC0]
	0x0262012C LDR X2, [X8 + 0x180]
	0x02620130 BL 0x21D8DF0
	0x02620134 LDR X8, [X19 + 0x20]
	0x02620138 MOV X22, X0
	0x0262013C LDR X8, [X8 + 0xC0]
	0x02620140 LDR X8, [X8 + 0x8]
	0x02620144 LDRB W9, [X8 + 0x135]
	0x02620148 TBNZ X9, 0x0, 0x2620158
	0x0262014C MOV X0, X8
	0x02620150 BL 0x1C5C684
	0x02620154 MOV X8, X0
	0x02620158 MOV X0, X8
	0x0262015C BL 0x1C16F10
	0x02620160 LDR X8, [X19 + 0x20]
	0x02620164 MOV X1, X22
	0x02620168 MOV X21, X0
	0x0262016C LDR X8, [X8 + 0xC0]
	0x02620170 LDR X2, [X8 + 0xD0]
	0x02620174 BL 0x2D5E4A8
	0x02620178 CBZ X21, 0x2620330
	0x0262017C LDR X8, [X19 + 0x20]
	0x02620180 ADRP X25, 0x1AFD000
	0x02620184 MOV X0, X21
	0x02620188 LDR X8, [X8 + 0xC0]
	0x0262018C LDR X1, [X8 + 0xE0]
	0x02620190 LDR X25, [X25 + 0x318]
	0x02620194 ADD X8, X31, 0x8
	0x02620198 BL 0x2D5EF18
	0x0262019C LDUR V0, [X31 + 0x8]
	0x026201A0 LDR X8, [X31 + 0x18]
	0x026201A4 MOVZ W26, 0x1
	0x026201A8 STR V0, [X31 + 0x2]
	0x026201AC STR X8, [X31 + 0x30]
	0x026201B0 LDR X8, [X19 + 0x20]
	0x026201B4 LDR X8, [X8 + 0xC0]
	0x026201B8 LDR X1, [X8 + 0x108]
	0x026201BC ADD X0, X31, 0x20
	0x026201C0 BL 0x2BB6150
	0x026201C4 TBZ X0, 0x0, 0x26202E8
	0x026201C8 LDR X0, [X20 + 0x50]
	0x026201CC CBZ X0, 0x2620328
	0x026201D0 LDR X8, [X19 + 0x20]
	0x026201D4 LDRB W27, [X31 + 0x30]
	0x026201D8 LDR X8, [X8 + 0xC0]
	0x026201DC CMP W27, 0x0
	0x026201E0 CSET W1, NE
	0x026201E4 LDR X2, [X8 + 0x148]
	0x026201E8 BL 0x2D5EC4C
	0x026201EC LDR X22, [X20 + 0x30]
	0x026201F0 STRB W26, [X20 + 0x20]
	0x026201F4 CBZ X22, 0x262032C
	0x026201F8 LDR X8, [X22]
	0x026201FC LDR X1, [X25]
	0x02620200 LDRH W9, [X8 + 0x12E]
	0x02620204 CBZ X9, 0x2620228
	0x02620208 LDR X10, [X8 + 0xB0]
	0x0262020C ADD X10, X10, 0x8
	0x02620210 LDUR X11, [X10 - 0x8]
	0x02620214 CMP X11, X1
	0x02620218 B.EQ 0x2620238
	0x0262021C SUBS X9, X9, 0x1
	0x02620220 ADD X10, X10, 0x10
	0x02620224 B.NE 0x2620210
	0x02620228 MOV X0, X22
	0x0262022C MOV W2, W31
	0x02620230 BL 0x1C5C788
	0x02620234 B 0x2620244
	0x02620238 LDRSW X9, [X10]
	0x0262023C ADD X8, X8, X9, 0x4, LSL
	0x02620240 ADD X0, X8, 0x138
	0x02620244 LDP X8, X1, [X0]
	0x02620248 MOV X0, X22
	0x0262024C BLR X8
	0x02620250 MOV X22, X0
	0x02620254 CBZ X0, 0x2620324

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x1DBC000
	010 Move X25, 0x1AD5000
	011 Move W8, [X24+81]
	012 Move X25, [X25+1728]
	013 Move X20, X4
	014 Move W23, W3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x1AFF000
	023 Move X0, [X0+792]
	024 Call 0x1C17CF4
	025 Move X0, 0x1AFF000
	026 Move X0, [X0+800]
	027 Call 0x1C17CF4
	028 Move X0, 0x1AFC000
	029 Move X0, [X0+2912]
	030 Call 0x1C17CF4
	031 Move X0, 0x1AD4000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+81], W8
	036 Move X8, [X20+32]
	037 Move X0, [X25]
	038 Move X8, [X8+192]
	039 Move W9, [X0+224]
	040 Move X24, [X8+24]
	041 Compare W9, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X24
	045 Move X1, X31
	046 Call Type.GetTypeFromHandle, X0
	047 Compare X0, 0
	048 JumpIfEqual {149}
	049 Move X1, X31
	050 Move X24, X0
	051 Call Type.get_IsValueType, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {75}
	056 Move X8, 0x1AFC000
	057 Move X0, [X25]
	058 Move X8, [X8+2912]
	059 Move W9, [X0+224]
	060 Move X25, [X8]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X25
	065 Move X1, X31
	066 Call Type.GetTypeFromHandle, X0
	067 Move X1, X0
	068 Move X0, X24
	069 Move X2, X31
	070 Call Type.op_Inequality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {150}
	075 Compare X19, 0
	076 JumpIfEqual {149}
	077 And W3, W23, 1
	078 Move X0, X19
	079 Move X1, X22
	080 Move X2, X21
	081 Move X4, X31
	082 Call StateObjectBase.InternalInitialize, X0, X1, X2, X3
	083 Move X20, [X19+48]
	084 Compare X20, 0
	085 JumpIfEqual {149}
	086 Move X10, 0x1AFE000
	087 Move X8, [X20]
	088 Move X10, [X10+792]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X1, [X10]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move W2, 1
	100 Move X0, X20
	101 Call 0x1C5D788
	102 Move W9, [X10]
	103 Add W9, W9, 1
	104 Add X8, X8, W9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X0, 0
	111 JumpIfEqual {149}
	112 Move X10, 0x1AFE000
	113 Move X8, [X0]
	114 Move X10, [X10+800]
	115 Move X21, [X19+64]
	116 Move X20, X0
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Move X1, [X10]
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move W2, 4
	128 Move X0, X20
	129 Call 0x1C5D788
	130 Move W9, [X10]
	131 Add W9, W9, 4
	132 Add X8, X8, W9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X2, [X0+8]
	136 Move X0, X20
	137 Move X1, X21
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move [X19+72], W0
	140 Move X20, [X31+48]
	141 Move X19, [X31+56]
	142 Move X22, [X31+32]
	143 Move X21, [X31+40]
	144 Move X24, [X31+16]
	145 Move X23, [X31+24]
	146 Move X30, [X31+64]
	147 Move X25, [X31+72]
	148 Return 
	149 Call 0x1C17F20
	150 Move X8, [X20+32]
	151 Move X0, 0x1AD4000
	152 Move X8, [X8+192]
	153 Move X19, [X8+24]
	154 Move X0, [X0+1728]
	155 Call 0x1C17D08
	156 Call 0x19913D0
	157 Move X0, X19
	158 Move X1, X31
	159 Call Type.GetTypeFromHandle, X0
	160 Move X19, X0
	161 Call 0x19913C0
	162 Move X8, [X19]
	163 Move X0, X19
	164 Move X9, [X8+744]
	165 Move X1, [X8+752]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X19, X0
	168 Move X0, 0x1AFE000
	169 Move X0, [X0+1088]
	170 Call 0x1C17D08
	171 Move X21, X0
	172 Move X0, 0x1AD5000
	173 Move X0, [X0+1544]
	174 Call 0x1C17D08
	175 Move X2, X0
	176 Move X0, X21
	177 Move X1, X19
	178 Move X3, X31
	179 Call String.Concat, X0, X1, X2
	180 Move X19, X0
	181 Move X0, 0x1ADC000
	182 Move X0, [X0+1400]
	183 Call 0x1C17D08
	184 Call 0x1C17F10
	185 Move X1, X19
	186 Move X2, X31
	187 Move X21, X0
	188 Call ArgumentException..ctor, X0, X1
	189 Move X0, X21
	190 Move X1, X20
	191 Call 0x1C17DEC

Method: System.Void ApplyOperation(SpatialSys.ObservableState.IStateOperation operation)

Disassembly:
	0x02620258 LDR X8, [X19 + 0x20]
	0x0262025C LDR W23, [X20 + 0x48]
	0x02620260 LDR X9, [X8 + 0xC0]
	0x02620264 LDR X8, [X22]
	0x02620268 LDR X24, [X9 + 0x100]
	0x0262026C LDRH W9, [X8 + 0x12E]
	0x02620270 LDR X1, [X24 + 0x20]
	0x02620274 LDRH W2, [X24 + 0x50]
	0x02620278 CBZ X9, 0x262029C
	0x0262027C LDR X10, [X8 + 0xB0]
	0x02620280 ADD X10, X10, 0x8
	0x02620284 LDUR X11, [X10 - 0x8]
	0x02620288 CMP X11, X1
	0x0262028C B.EQ 0x26202A8
	0x02620290 SUBS X9, X9, 0x1
	0x02620294 ADD X10, X10, 0x10
	0x02620298 B.NE 0x2620284
	0x0262029C MOV X0, X22
	0x026202A0 BL 0x1C5C788
	0x026202A4 B 0x26202B8
	0x026202A8 LDR W9, [X10]
	0x026202AC ADD W9, W9, W2
	0x026202B0 ADD X8, X8, W9, 0x4, SXTW
	0x026202B4 ADD X0, X8, 0x138
	0x026202B8 LDR X0, [X0 + 0x8]
	0x026202BC MOV X1, X24
	0x026202C0 BL 0x1C16DF8
	0x026202C4 LDR X8, [X0 + 0x8]
	0x026202C8 CMP W27, 0x0
	0x026202CC MOV X4, X0
	0x026202D0 CSET W2, NE
	0x026202D4 MOV X0, X22
	0x026202D8 MOV X1, X20
	0x026202DC MOV W3, W23
	0x026202E0 BLR X8
	0x026202E4 B 0x26201B0
	0x026202E8 MOV X22, X31
	0x026202EC LDR X8, [X19 + 0x20]
	0x026202F0 ADD X0, X31, 0x20
	0x026202F4 LDR X8, [X8 + 0xC0]
	0x026202F8 LDR X1, [X8 + 0x110]
	0x026202FC BL 0x2BB614C
	0x02620300 CBNZ X22, 0x2620334
	0x02620304 LDR W0, [X21 + 0x20]
	0x02620308 LDP X20, X19, [X31 + 0x80]
	0x0262030C LDP X22, X21, [X31 + 0x70]
	0x02620310 LDP X24, X23, [X31 + 0x60]
	0x02620314 LDP X26, X25, [X31 + 0x50]
	0x02620318 LDP X30, X27, [X31 + 0x40]
	0x0262031C ADD X31, X31, 0x90
	0x02620320 RET
	0x02620324 BL 0x1C16F20
	0x02620328 BL 0x1C16F20
	0x0262032C BL 0x1C16F20
	0x02620330 BL 0x1C16F20
	0x02620334 MOV X0, X22
	0x02620338 BL 0x1C16F18
	0x0262033C B 0x2620354
	0x02620340 B 0x2620354
	0x02620344 B 0x2620354
	0x02620348 B 0x2620354
	0x0262034C B 0x2620354
	0x02620350 B 0x2620354
	0x02620354 MOV X20, X0
	0x02620358 CMP W1, 0x1
	0x0262035C B.NE 0x2620374
	0x02620360 MOV X0, X20
	0x02620364 BL 0x3EB1AD0
	0x02620368 LDR X22, [X0]
	0x0262036C BL 0x3EB1AE0
	0x02620370 B 0x26202EC
	0x02620374 MOV X22, X31
	0x02620378 B 0x2620380
	0x0262037C MOV X20, X0
	0x02620380 LDR X8, [X19 + 0x20]
	0x02620384 LDR X8, [X8 + 0xC0]
	0x02620388 LDR X1, [X8 + 0x110]
	0x0262038C ADD X0, X31, 0x20
	0x02620390 BL 0x2BB614C
	0x02620394 CBNZ X22, 0x26203A0
	0x02620398 MOV X0, X20
	0x0262039C BL 0x1D2C690
	0x026203A0 MOV X0, X22
	0x026203A4 BL 0x1C16F18
	0x026203A8 BL 0x1990590
	0x026203AC LDR X8, [X1 + 0x20]
	0x026203B0 LDR X0, [X0 + 0x50]
	0x026203B4 LDR X8, [X8 + 0xC0]
	0x026203B8 LDR X1, [X8 + 0xA8]
	0x026203BC B 0x21D51A4
	0x026203C0 SUB X31, X31, 0x70
	0x026203C4 STP X30, X23, [X31 + 0x40]
	0x026203C8 STP X22, X21, [X31 + 0x50]
	0x026203CC STP X20, X19, [X31 + 0x60]
	0x026203D0 ADRP X22, 0x1DBA000
	0x026203D4 ADRP X21, 0x1AFD000
	0x026203D8 LDRB W8, [X22 + 0x58]
	0x026203DC LDR X21, [X21 + 0x370]
	0x026203E0 MOV X19, X3
	0x026203E4 MOV X20, X0
	0x026203E8 TBNZ X8, 0x0, 0x2620400
	0x026203EC ADRP X0, 0x1AFD000
	0x026203F0 LDR X0, [X0 + 0x370]
	0x026203F4 BL 0x1C16CF4
	0x026203F8 MOVZ W8, 0x1
	0x026203FC STRB W8, [X22 + 0x58]
	0x02620400 LDR X0, [X21]
	0x02620404 STP X31, X31, [X31 + 0x20]
	0x02620408 STR X31, [X31 + 0x30]
	0x0262040C BL 0x1C16F10
	0x02620410 MOV X1, X31
	0x02620414 MOV X21, X0
	0x02620418 BL 0x35AE904
	0x0262041C CBZ X20, 0x2620570
	0x02620420 LDR X8, [X20]
	0x02620424 LDR X1, [X8 + 0x330]
	0x02620428 LDR X9, [X8 + 0x328]
	0x0262042C MOV X0, X20
	0x02620430 BLR X9
	0x02620434 MOV X22, X0
	0x02620438 CBZ X0, 0x2620574
	0x0262043C LDR X8, [X19 + 0x20]
	0x02620440 LDR X9, [X8 + 0xC0]
	0x02620444 LDR X8, [X22]
	0x02620448 LDR X23, [X9 + 0x188]
	0x0262044C LDRH W9, [X8 + 0x12E]
	0x02620450 LDR X1, [X23 + 0x20]
	0x02620454 LDRH W2, [X23 + 0x50]
	0x02620458 CBZ X9, 0x262047C
	0x0262045C LDR X10, [X8 + 0xB0]
	0x02620460 ADD X10, X10, 0x8
	0x02620464 LDUR X11, [X10 - 0x8]
	0x02620468 CMP X11, X1
	0x0262046C B.EQ 0x2620488
	0x02620470 SUBS X9, X9, 0x1
	0x02620474 ADD X10, X10, 0x10
	0x02620478 B.NE 0x2620464
	0x0262047C MOV X0, X22
	0x02620480 BL 0x1C5C788
	0x02620484 B 0x2620498
	0x02620488 LDR W9, [X10]
	0x0262048C ADD W9, W9, W2
	0x02620490 ADD X8, X8, W9, 0x4, SXTW
	0x02620494 ADD X0, X8, 0x138
	0x02620498 LDR X0, [X0 + 0x8]
	0x0262049C MOV X1, X23
	0x026204A0 BL 0x1C16DF8
	0x026204A4 MOV X1, X0
	0x026204A8 LDR X8, [X1 + 0x8]
	0x026204AC MOV X0, X22
	0x026204B0 BLR X8
	0x026204B4 MOV X22, X0
	0x026204B8 LDR X0, [X20 + 0x50]
	0x026204BC CBZ X0, 0x2620578
	0x026204C0 LDR X8, [X19 + 0x20]
	0x026204C4 LDR X8, [X8 + 0xC0]
	0x026204C8 LDR X1, [X8 + 0xE0]
	0x026204CC ADD X8, X31, 0x8
	0x026204D0 BL 0x2D5EF18
	0x026204D4 LDUR V0, [X31 + 0x8]
	0x026204D8 LDR X8, [X31 + 0x18]
	0x026204DC STR V0, [X31 + 0x2]
	0x026204E0 STR X8, [X31 + 0x30]
	0x026204E4 LDR X8, [X19 + 0x20]
	0x026204E8 LDR X8, [X8 + 0xC0]
	0x026204EC LDR X1, [X8 + 0x108]
	0x026204F0 ADD X0, X31, 0x20
	0x026204F4 BL 0x2BB6150

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1DBB000
	007 Move W8, [X22+82]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1AD4000
	016 Move X0, [X0+1872]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+82], W8
	020 Compare X20, 0
	021 JumpIfEqual {144}
	022 Move X10, 0x1AD4000
	023 Move X8, [X20]
	024 Move X10, [X10+1872]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 2
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 2
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X20
	045 NotImplemented "Instruction BLR not yet implemented."
	046 And W8, W0, 255
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+32]
	051 Move X8, [X8+192]
	052 Move X0, [X8+56]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X20]
	060 Move W9, [X0+304]
	061 Move W10, [X8+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X8+200]
	064 Add X9, X8, X9
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X9, [X19+32]
	068 Move X9, [X9+192]
	069 Move X0, [X9+56]
	070 Move W10, [X0+309]
	071 Move TEMP, X10
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {80}
	075 Call 0x1C5D684
	076 Move X8, [X20]
	077 Move X9, [X19+32]
	078 Move X8, [X8+200]
	079 Move X9, [X9+192]
	080 Move W10, [X0+304]
	081 Move X2, [X9+80]
	082 Add X8, X8, X10
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 Move W1, [X8+25]
	087 Move X0, X21
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Return 
	099 Move X8, [X19+32]
	100 Move X8, [X8+192]
	101 Move X0, [X8+56]
	102 Move W8, [X0+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Move X8, [X20]
	109 Move W9, [X0+304]
	110 Move W10, [X8+304]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X8+200]
	113 Add X9, X8, X9
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X9, [X19+32]
	117 Move X9, [X9+192]
	118 Move X0, [X9+56]
	119 Move W10, [X0+309]
	120 Move TEMP, X10
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {129}
	124 Call 0x1C5D684
	125 Move X8, [X20]
	126 Move X9, [X19+32]
	127 Move X8, [X8+200]
	128 Move X9, [X9+192]
	129 Move W10, [X0+304]
	130 Move X2, [X9+88]
	131 Add X8, X8, X10
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CSEL not yet implemented."
	135 Move W1, [X8+25]
	136 Move X0, X21
	137 Move X20, [X31+32]
	138 Move X19, [X31+40]
	139 Move X22, [X31+16]
	140 Move X21, [X31+24]
	141 Move X30, [X31+48]
	142 Call 0x2620EE0, X0, X1
	143 Return 
	144 Call 0x1C17F20
	145 Move X0, X20
	146 Call 0x19913C0
	147 Move X0, 0x1AD4000
	148 Move X0, [X0+1872]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move W0, 2
	152 Move X2, X20
	153 Call 0x19973F0
	154 Move [X31+12], W0
	155 Move X0, 0x1AFE000
	156 Move X0, [X0+808]
	157 Call 0x1C17D08
	158 Add X1, X31, 12
	159 Call 0x1C17E04
	160 Move X20, X0
	161 Move X0, 0x1AFE000
	162 Move X0, [X0+816]
	163 Call 0x1C17D08
	164 Move X21, X0
	165 Move X0, 0x1AFE000
	166 Move X0, [X0+1096]
	167 Call 0x1C17D08
	168 Move X2, X0
	169 Move X0, X21
	170 Move X1, X20
	171 Move X3, X31
	172 Call String.Format, X0, X1, X2
	173 Move X20, X0
	174 Move X0, 0x1AD4000
	175 Move X0, [X0+1456]
	176 Call 0x1C17D08
	177 Call 0x1C17F10
	178 Move X1, X20
	179 Move X2, X31
	180 Move X21, X0
	181 Call InvalidOperationException..ctor, X0, X1
	182 Move X0, X21
	183 Move X1, X19
	184 Call 0x1C17DEC

Method: System.Boolean Add(T item)

Disassembly:
	0x026204F8 TBZ X0, 0x0, 0x2620534
	0x026204FC CBZ X22, 0x2620568
	0x02620500 LDRB W1, [X31 + 0x30]
	0x02620504 LDR X0, [X22 + 0x40]
	0x02620508 LDR X8, [X22 + 0x18]
	0x0262050C LDR X2, [X22 + 0x28]
	0x02620510 BLR X8
	0x02620514 MOV X1, X0
	0x02620518 CBZ X21, 0x262056C
	0x0262051C LDR X8, [X21]
	0x02620520 LDR X9, [X8 + 0x288]
	0x02620524 LDR X2, [X8 + 0x290]
	0x02620528 MOV X0, X21
	0x0262052C BLR X9
	0x02620530 B 0x26204E4
	0x02620534 MOV X22, X31
	0x02620538 LDR X8, [X19 + 0x20]
	0x0262053C LDR X8, [X8 + 0xC0]
	0x02620540 LDR X1, [X8 + 0x110]
	0x02620544 ADD X0, X31, 0x20
	0x02620548 BL 0x2BB614C
	0x0262054C CBNZ X22, 0x262057C
	0x02620550 MOV X0, X21
	0x02620554 LDP X20, X19, [X31 + 0x60]
	0x02620558 LDP X22, X21, [X31 + 0x50]
	0x0262055C LDP X30, X23, [X31 + 0x40]
	0x02620560 ADD X31, X31, 0x70
	0x02620564 RET
	0x02620568 BL 0x1C16F20
	0x0262056C BL 0x1C16F20
	0x02620570 BL 0x1C16F20
	0x02620574 BL 0x1C16F20
	0x02620578 BL 0x1C16F20
	0x0262057C MOV X0, X22
	0x02620580 BL 0x1C16F18
	0x02620584 B 0x2620598
	0x02620588 B 0x2620598
	0x0262058C B 0x2620598
	0x02620590 B 0x2620598
	0x02620594 B 0x2620598
	0x02620598 MOV X21, X0
	0x0262059C STR X1, [X31]
	0x026205A0 LDR X8, [X31]
	0x026205A4 CMP W8, 0x1
	0x026205A8 B.NE 0x26206C0
	0x026205AC MOV X0, X21
	0x026205B0 BL 0x3EB1AD0
	0x026205B4 MOV X21, X0
	0x026205B8 ADRP X0, 0x1AD3000
	0x026205BC LDR X0, [X0 + 0x7D0]
	0x026205C0 BL 0x1C16D08
	0x026205C4 LDR X8, [X21]
	0x026205C8 LDR X1, [X8]
	0x026205CC BL 0x1C17270
	0x026205D0 TBZ X0, 0x0, 0x2620698
	0x026205D4 LDR X21, [X21]
	0x026205D8 BL 0x3EB1AE0
	0x026205DC MOV X0, X20
	0x026205E0 BL 0x19903C0
	0x026205E4 LDR X8, [X19 + 0x20]
	0x026205E8 ADRP X0, 0x1AD3000
	0x026205EC LDR X20, [X20 + 0x18]
	0x026205F0 LDR X8, [X8 + 0xC0]
	0x026205F4 LDR X22, [X8 + 0x18]
	0x026205F8 LDR X0, [X0 + 0x6C0]
	0x026205FC BL 0x1C16D08
	0x02620600 BL 0x19903D0
	0x02620604 MOV X0, X22
	0x02620608 MOV X1, X31
	0x0262060C BL 0x338C698
	0x02620610 MOV X22, X0
	0x02620614 BL 0x19903C0
	0x02620618 LDR X8, [X22]
	0x0262061C MOV X0, X22
	0x02620620 LDR X9, [X8 + 0x2E8]
	0x02620624 LDR X1, [X8 + 0x2F0]
	0x02620628 BLR X9
	0x0262062C MOV X22, X0
	0x02620630 ADRP X0, 0x1AFD000
	0x02620634 LDR X0, [X0 + 0x410]
	0x02620638 BL 0x1C16D08
	0x0262063C MOV X23, X0
	0x02620640 ADRP X0, 0x1AFD000
	0x02620644 LDR X0, [X0 + 0x418]
	0x02620648 BL 0x1C16D08
	0x0262064C MOV X2, X0
	0x02620650 MOV X0, X23
	0x02620654 MOV X1, X20
	0x02620658 MOV X3, X22
	0x0262065C MOV X4, X31
	0x02620660 BL 0x32277C4
	0x02620664 MOV X20, X0
	0x02620668 ADRP X0, 0x1AFC000
	0x0262066C LDR X0, [X0 + 0x660]
	0x02620670 BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1DBB000
	009 Move W8, [X21+83]
	010 Move X22, X2
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1AFE000
	018 Move X0, [X0+792]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+83], W8
	022 Move X0, [X20+80]
	023 Compare X0, 0
	024 JumpIfEqual {107}
	025 Move X8, [X22+32]
	026 And W1, W19, 1
	027 Move X8, [X8+192]
	028 Move X2, [X8+96]
	029 Call HashSet`1<Boolean>.Add, X0, X1
	030 Move W21, W0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {98}
	035 Move X23, [X20+48]
	036 Move W8, 1
	037 Move [X20+32], W8
	038 Compare X23, 0
	039 JumpIfEqual {107}
	040 Move X10, 0x1AFE000
	041 Move X8, [X23]
	042 Move X10, [X10+792]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X23
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X23
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {107}
	065 Move X8, [X22+32]
	066 Move W22, [X20+72]
	067 Move X23, X0
	068 Move X9, [X8+192]
	069 Move X8, [X0]
	070 Move X24, [X9+112]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X24+32]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X23
	083 Call 0x1C5D788
	084 Move W9, [X10]
	085 Add W9, W9, W2
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X0, [X0+8]
	089 Move X1, X24
	090 Call 0x1C17DF8
	091 Move X8, [X0+8]
	092 Move X4, X0
	093 And W2, W19, 1
	094 Move X0, X23
	095 Move X1, X20
	096 Move W3, W22
	097 NotImplemented "Instruction BLR not yet implemented."
	098 And W0, W21, 1
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X24, [X31+16]
	104 Move X23, [X31+24]
	105 Move X30, [X31+64]
	106 Return X0
	107 Call 0x1C17F20

Method: System.Boolean AssignValues(System.Collections.Generic.IReadOnlyList`1<T> values)

Disassembly:
	0x02620674 BL 0x1C16F10
	0x02620678 MOV X1, X20
	0x0262067C MOV X2, X21
	0x02620680 MOV X3, X31
	0x02620684 MOV X22, X0
	0x02620688 BL 0x35C99E4
	0x0262068C MOV X0, X22
	0x02620690 MOV X1, X19
	0x02620694 BL 0x1C16DEC
	0x02620698 MOVZ W0, 0x8
	0x0262069C BL 0x3EB1AF0
	0x026206A0 LDR X8, [X21]
	0x026206A4 STR X8, [X0]
	0x026206A8 ADRP X1, 0x1894000
	0x026206AC ADD X1, X1, 0xE58
	0x026206B0 MOV X2, X31
	0x026206B4 BL 0x3EB1B00
	0x026206B8 MOV X21, X0
	0x026206BC BL 0x3EB1AE0
	0x026206C0 MOV X0, X21
	0x026206C4 BL 0x1D2C690
	0x026206C8 B 0x26206D4
	0x026206CC B 0x26206D4
	0x026206D0 B 0x26206D4
	0x026206D4 CMP W1, 0x1
	0x026206D8 B.NE 0x26206EC
	0x026206DC BL 0x3EB1AD0
	0x026206E0 LDR X22, [X0]
	0x026206E4 BL 0x3EB1AE0
	0x026206E8 B 0x2620538
	0x026206EC STR X1, [X31]
	0x026206F0 MOV X21, X0
	0x026206F4 MOV X22, X31
	0x026206F8 B 0x2620704
	0x026206FC MOV X21, X0
	0x02620700 STR X1, [X31]
	0x02620704 LDR X8, [X19 + 0x20]
	0x02620708 LDR X8, [X8 + 0xC0]
	0x0262070C LDR X1, [X8 + 0x110]
	0x02620710 ADD X0, X31, 0x20
	0x02620714 BL 0x2BB614C
	0x02620718 CBZ X22, 0x26205A0
	0x0262071C MOV X0, X22
	0x02620720 BL 0x1C16F18
	0x02620724 BL 0x1990590
	0x02620728 SUB X31, X31, 0x110
	0x0262072C STR X29, [X31 + 0xC0]
	0x02620730 STP X30, X25, [X31 + 0xD0]
	0x02620734 STP X24, X23, [X31 + 0xE0]
	0x02620738 STP X22, X21, [X31 + 0xF0]
	0x0262073C STP X20, X19, [X31 + 0x100]
	0x02620740 ADRP X23, 0x1DBA000
	0x02620744 LDRB W8, [X23 + 0x59]
	0x02620748 MOV X19, X2
	0x0262074C MOV X22, X1
	0x02620750 MOV X20, X0
	0x02620754 ADD X21, X31, 0x70
	0x02620758 TBNZ X8, 0x0, 0x2620770
	0x0262075C ADRP X0, 0x1AD4000
	0x02620760 LDR X0, [X0 + 0x460]
	0x02620764 BL 0x1C16CF4
	0x02620768 MOVZ W8, 0x1
	0x0262076C STRB W8, [X23 + 0x59]
	0x02620770 MOVI V0.2D, 0x0
	0x02620774 STR X31, [X31 + 0xB0]
	0x02620778 STP X31, X31, [X31 + 0x50]
	0x0262077C STP V0, V0, [X21 + 0x20]
	0x02620780 STP V0, V0, [X31 + 0x70]
	0x02620784 STR X31, [X31 + 0x60]
	0x02620788 CBZ X22, 0x26209DC
	0x0262078C LDR X8, [X22]
	0x02620790 MOV X0, X22
	0x02620794 LDR X9, [X8 + 0x238]
	0x02620798 LDR X1, [X8 + 0x240]
	0x0262079C BLR X9
	0x026207A0 TBZ X0, 0x0, 0x26209E0
	0x026207A4 LDR X8, [X19 + 0x20]
	0x026207A8 LDR X23, [X20 + 0x50]
	0x026207AC LDR X8, [X8 + 0xC0]
	0x026207B0 LDR X0, [X8 + 0x8]
	0x026207B4 LDRB W8, [X0 + 0x135]
	0x026207B8 TBNZ X8, 0x0, 0x26207C0
	0x026207BC BL 0x1C5C684
	0x026207C0 BL 0x1C16F10
	0x026207C4 LDR X8, [X19 + 0x20]
	0x026207C8 MOV X21, X0
	0x026207CC LDR X8, [X8 + 0xC0]
	0x026207D0 LDR X2, [X8 + 0xD0]
	0x026207D4 MOV X1, X23
	0x026207D8 BL 0x2D5E4A8
	0x026207DC LDR X8, [X20]
	0x026207E0 LDR X1, [X8 + 0x330]
	0x026207E4 LDR X9, [X8 + 0x328]
	0x026207E8 MOV X0, X20
	0x026207EC BLR X9
	0x026207F0 MOV X23, X0
	0x026207F4 CBZ X0, 0x2620B1C
	0x026207F8 LDR X8, [X19 + 0x20]
	0x026207FC LDR X9, [X8 + 0xC0]
	0x02620800 LDR X8, [X23]
	0x02620804 LDR X24, [X9 + 0x1A0]
	0x02620808 LDRH W9, [X8 + 0x12E]
	0x0262080C LDR X1, [X24 + 0x20]
	0x02620810 LDRH W2, [X24 + 0x50]
	0x02620814 CBZ X9, 0x2620838
	0x02620818 LDR X10, [X8 + 0xB0]
	0x0262081C ADD X10, X10, 0x8
	0x02620820 LDUR X11, [X10 - 0x8]
	0x02620824 CMP X11, X1
	0x02620828 B.EQ 0x2620844
	0x0262082C SUBS X9, X9, 0x1
	0x02620830 ADD X10, X10, 0x10
	0x02620834 B.NE 0x2620820
	0x02620838 MOV X0, X23
	0x0262083C BL 0x1C5C788
	0x02620840 B 0x2620854
	0x02620844 LDR W9, [X10]
	0x02620848 ADD W9, W9, W2
	0x0262084C ADD X8, X8, W9, 0x4, SXTW
	0x02620850 ADD X0, X8, 0x138
	0x02620854 LDR X0, [X0 + 0x8]
	0x02620858 MOV X1, X24
	0x0262085C BL 0x1C16DF8
	0x02620860 MOV X1, X0
	0x02620864 LDR X8, [X1 + 0x8]
	0x02620868 MOV X0, X23
	0x0262086C BLR X8
	0x02620870 LDR X8, [X22]
	0x02620874 MOV X23, X0
	0x02620878 LDR X1, [X8 + 0x340]
	0x0262087C LDR X9, [X8 + 0x338]
	0x02620880 ADD X8, X31, 0x8
	0x02620884 MOV X0, X22
	0x02620888 BLR X9
	0x0262088C ADRP X25, 0x1AD4000
	0x02620890 LDR X25, [X25 + 0x460]
	0x02620894 ADD X0, X31, 0x70
	0x02620898 ADD X1, X31, 0x8
	0x0262089C MOVZ W2, 0x48
	0x026208A0 BL 0x3EB1AC0
	0x026208A4 ADD X0, X31, 0x70
	0x026208A8 MOV X1, X31
	0x026208AC BL 0x35B4900
	0x026208B0 TBZ X0, 0x0, 0x262093C
	0x026208B4 ADD X0, X31, 0x70
	0x026208B8 MOV X1, X31
	0x026208BC BL 0x35B4830
	0x026208C0 MOV X22, X0
	0x026208C4 LDR X0, [X25]
	0x026208C8 MOV X24, X1
	0x026208CC LDR W8, [X0 + 0xE0]
	0x026208D0 CBNZ W8, 0x26208D8
	0x026208D4 BL 0x1C16DFC
	0x026208D8 MOV X0, X22
	0x026208DC MOV X1, X24
	0x026208E0 MOV X2, X31
	0x026208E4 BL 0x35ADA20
	0x026208E8 MOV X1, X0
	0x026208EC CBZ X23, 0x26209D4
	0x026208F0 LDR X0, [X23 + 0x40]
	0x026208F4 LDR X8, [X23 + 0x18]
	0x026208F8 LDR X2, [X23 + 0x28]
	0x026208FC BLR X8
	0x02620900 CBZ X21, 0x26209D8
	0x02620904 LDR X8, [X19 + 0x20]
	0x02620908 LDR X8, [X8 + 0xC0]
	0x0262090C LDR X2, [X8 + 0x148]
	0x02620910 AND W22, W0, 0x1
	0x02620914 MOV X0, X21
	0x02620918 MOV W1, W22
	0x0262091C BL 0x2D5EC4C
	0x02620920 LDR X8, [X19 + 0x20]
	0x02620924 LDR X8, [X8 + 0xC0]
	0x02620928 LDR X2, [X8 + 0x50]
	0x0262092C MOV X0, X20
	0x02620930 MOV W1, W22
	0x02620934 BL 0x261F4F8
	0x02620938 B 0x26208A4
	0x0262093C CBZ X21, 0x2620B20
	0x02620940 LDR X8, [X19 + 0x20]
	0x02620944 LDR X8, [X8 + 0xC0]
	0x02620948 LDR X1, [X8 + 0xE0]
	0x0262094C ADD X8, X31, 0x8
	0x02620950 MOV X0, X21
	0x02620954 BL 0x2D5EF18
	0x02620958 LDUR V0, [X31 + 0x8]
	0x0262095C LDR X8, [X31 + 0x18]
	0x02620960 STR V0, [X31 + 0x5]
	0x02620964 STR X8, [X31 + 0x60]
	0x02620968 LDR X8, [X19 + 0x20]
	0x0262096C LDR X8, [X8 + 0xC0]
	0x02620970 LDR X1, [X8 + 0x108]
	0x02620974 ADD X0, X31, 0x50
	0x02620978 BL 0x2BB6150
	0x0262097C TBZ X0, 0x0, 0x262099C
	0x02620980 LDR X8, [X19 + 0x20]
	0x02620984 LDRB W1, [X31 + 0x60]
	0x02620988 LDR X8, [X8 + 0xC0]
	0x0262098C LDR X2, [X8 + 0x58]
	0x02620990 MOV X0, X20
	0x02620994 BL 0x261FEE0
	0x02620998 B 0x2620968
	0x0262099C MOV X23, X31
	0x026209A0 LDR X8, [X19 + 0x20]
	0x026209A4 LDR X8, [X8 + 0xC0]
	0x026209A8 LDR X1, [X8 + 0x110]
	0x026209AC ADD X0, X31, 0x50
	0x026209B0 BL 0x2BB614C
	0x026209B4 CBNZ X23, 0x2620B24
	0x026209B8 LDP X20, X19, [X31 + 0x100]
	0x026209BC LDP X22, X21, [X31 + 0xF0]
	0x026209C0 LDP X24, X23, [X31 + 0xE0]
	0x026209C4 LDP X30, X25, [X31 + 0xD0]
	0x026209C8 LDR X29, [X31 + 0xC0]
	0x026209CC ADD X31, X31, 0x110
	0x026209D0 RET
	0x026209D4 BL 0x1C16F20
	0x026209D8 BL 0x1C16F20
	0x026209DC BL 0x1C16F20
	0x026209E0 ADRP X0, 0x1AD3000
	0x026209E4 LDR X0, [X0 + 0xAC8]
	0x026209E8 BL 0x1C16D08
	0x026209EC MOVZ W1, 0x5
	0x026209F0 BL 0x1C16D6C
	0x026209F4 MOV X21, X0
	0x026209F8 BL 0x19903C0
	0x026209FC ADRP X0, 0x1AFD000
	0x02620A00 LDR X0, [X0 + 0x450]
	0x02620A04 BL 0x1C16D08
	0x02620A08 MOV X2, X0
	0x02620A0C MOV X0, X21
	0x02620A10 MOV X1, X31
	0x02620A14 BL 0x1993444
	0x02620A18 MOV X0, X20
	0x02620A1C BL 0x19903C0
	0x02620A20 LDR X20, [X20 + 0x18]
	0x02620A24 MOV X0, X21
	0x02620A28 BL 0x19903C0
	0x02620A2C MOVZ W1, 0x1
	0x02620A30 MOV X0, X21
	0x02620A34 MOV X2, X20
	0x02620A38 BL 0x1993444
	0x02620A3C MOV X0, X21
	0x02620A40 BL 0x19903C0
	0x02620A44 ADRP X0, 0x1AFD000
	0x02620A48 LDR X0, [X0 + 0x418]
	0x02620A4C BL 0x1C16D08
	0x02620A50 MOV X2, X0
	0x02620A54 MOVZ W1, 0x2
	0x02620A58 MOV X0, X21
	0x02620A5C BL 0x1993444
	0x02620A60 LDR X8, [X19 + 0x20]
	0x02620A64 ADRP X0, 0x1AD3000
	0x02620A68 LDR X8, [X8 + 0xC0]
	0x02620A6C LDR X20, [X8 + 0x18]
	0x02620A70 LDR X0, [X0 + 0x6C0]
	0x02620A74 BL 0x1C16D08
	0x02620A78 BL 0x19903D0
	0x02620A7C MOV X0, X20
	0x02620A80 MOV X1, X31
	0x02620A84 BL 0x338C698
	0x02620A88 MOV X20, X0
	0x02620A8C BL 0x19903C0
	0x02620A90 LDR X8, [X20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x1DBB000
	010 Move W8, [X22+84]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x1AD4000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x1AD4000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+84], W8
	026 Compare X21, 0
	027 JumpIfEqual {113}
	028 Move X8, [X19+32]
	029 Move X8, [X8+192]
	030 Move X1, [X8+128]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X8, [X21]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X21
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X21
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare W0, 0
	060 JumpIfEqual {113}
	061 Move X8, [X19+32]
	062 Move X0, [X20+80]
	063 Move X1, X21
	064 Move X8, [X8+192]
	065 Move X2, [X8+152]
	066 Call 0x21C2970, X0, X1
	067 Move X8, [X19+32]
	068 Move X8, [X8+192]
	069 Move X1, [X8+168]
	070 Call Enumerable.ToArray, X0
	071 Compare X0, 0
	072 JumpIfEqual {235}
	073 Move X23, [X0+24]
	074 Move X22, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X24, X31
	077 And X8, X23, 0
	078 Add X25, X22, 32
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, [X19+32]
	081 Move W1, [X25]
	082 Move X0, X20
	083 Move X8, [X8+192]
	084 Move X2, [X8+88]
	085 Call 0x2620EE0, X0, X1
	086 Move W8, [X22+24]
	087 Add X24, X24, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X19+32]
	090 Move X8, [X8+192]
	091 Move X1, [X8+160]
	092 Move W8, [X1+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {100}
	097 Move X0, X1
	098 Call 0x1C5D684
	099 Move X1, X0
	100 Move X8, [X21]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X21
	111 Move W2, W31
	112 Call 0x1C5D788
	113 Move X8, [X19+32]
	114 Move X0, X20
	115 Move X8, [X8+192]
	116 Move X1, [X8+144]
	117 Call 0x2620A94, X0
	118 Move W22, 1
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X21
	125 NotImplemented "Instruction BLR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X21, X0
	128 NotImplemented "Instruction CSET not yet implemented."
	129 Compare X0, 0
	130 JumpIfEqual {236}
	131 Move X23, 0x1AD4000
	132 Move X23, [X23+3608]
	133 Move X8, [X21]
	134 Move X1, [X23]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X21
	145 Move W2, W31
	146 Call 0x1C5D788
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X21
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {196}
	158 Move X8, [X19+32]
	159 Move X8, [X8+192]
	160 Move X1, [X8+192]
	161 Move W8, [X1+309]
	162 Move TEMP, X8
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {169}
	166 Move X0, X1
	167 Call 0x1C5D684
	168 Move X1, X0
	169 Move X8, [X21]
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Compare X9, 0
	172 JumpIfEqual {179}
	173 Move X10, [X8+176]
	174 Add X10, X10, 8
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract X9, X9, 1
	178 Add X10, X10, 16
	179 Move X0, X21
	180 Move W2, W31
	181 Call 0x1C5D788
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Add X8, X8, X9
	184 Add X0, X8, 312
	185 Move X8, [X0]
	186 Move X1, [X0+8]
	187 Move X0, X21
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move X8, [X19+32]
	190 Move X8, [X8+192]
	191 Move X2, [X8+80]
	192 And W1, W0, 1
	193 Move X0, X20
	194 Call 0x26204F8, X0, X1
	195 Or W22, W22, W0
	196 Move X19, X31
	197 Compare X21, 0
	198 JumpIfEqual {222}
	199 Move X10, 0x1AD4000
	200 Move X8, [X21]
	201 Move X10, [X10+3584]
	202 NotImplemented "Instruction LDRH not yet implemented."
	203 Move X1, [X10]
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move X0, X21
	213 Move W2, W31
	214 Call 0x1C5D788
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X1, [X0+8]
	220 Move X0, X21
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Compare X19, 0
	223 JumpIfNotEqual {237}
	224 And W0, W22, 1
	225 Move X20, [X31+48]
	226 Move X19, [X31+56]
	227 Move X22, [X31+32]
	228 Move X21, [X31+40]
	229 Move X24, [X31+16]
	230 Move X23, [X31+24]
	231 Move X30, [X31+64]
	232 Move X25, [X31+72]
	233 Return X0
	234 Call 0x1C17F28
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Move X0, X19
	238 Call 0x1C17F18
	239 Move X20, X0
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X0, X20
	242 Call 0x3EB2AD0
	243 Move X19, [X0]
	244 Call 0x3EB2AE0
	245 Move X19, X31
	246 Move X20, X0
	247 Compare X21, 0
	248 JumpIfEqual {272}
	249 Move X10, 0x1AD4000
	250 Move X8, [X21]
	251 Move X10, [X10+3584]
	252 NotImplemented "Instruction LDRH not yet implemented."
	253 Move X1, [X10]
	254 Compare X9, 0
	255 JumpIfEqual {262}
	256 Move X10, [X8+176]
	257 Add X10, X10, 8
	258 NotImplemented "Instruction LDUR not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Subtract X9, X9, 1
	261 Add X10, X10, 16
	262 Move X0, X21
	263 Move W2, W31
	264 Call 0x1C5D788
	265 NotImplemented "Instruction LDRSW not yet implemented."
	266 Add X8, X8, X9
	267 Add X0, X8, 312
	268 Move X8, [X0]
	269 Move X1, [X0+8]
	270 Move X0, X21
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Compare X19, 0
	273 JumpIfNotEqual {276}
	274 Move X0, X20
	275 Call 0x1D2D690
	276 Move X0, X19
	277 Call 0x1C17F18
	278 Call 0x1991590

Method: System.Void Clear()

Disassembly:
	0x02620A94 MOV X0, X20
	0x02620A98 LDR X9, [X8 + 0x2E8]
	0x02620A9C LDR X1, [X8 + 0x2F0]
	0x02620AA0 BLR X9
	0x02620AA4 MOV X20, X0
	0x02620AA8 MOV X0, X21
	0x02620AAC BL 0x19903C0
	0x02620AB0 MOVZ W1, 0x3
	0x02620AB4 MOV X0, X21
	0x02620AB8 MOV X2, X20
	0x02620ABC BL 0x1993444
	0x02620AC0 MOV X0, X21
	0x02620AC4 BL 0x19903C0
	0x02620AC8 ADRP X0, 0x1AD4000
	0x02620ACC LDR X0, [X0 + 0x608]
	0x02620AD0 BL 0x1C16D08
	0x02620AD4 MOV X2, X0
	0x02620AD8 MOVZ W1, 0x4
	0x02620ADC MOV X0, X21
	0x02620AE0 BL 0x1993444
	0x02620AE4 MOV X0, X21
	0x02620AE8 MOV X1, X31
	0x02620AEC BL 0x32278CC
	0x02620AF0 MOV X20, X0
	0x02620AF4 ADRP X0, 0x1AFC000
	0x02620AF8 LDR X0, [X0 + 0x660]
	0x02620AFC BL 0x1C16D08
	0x02620B00 BL 0x1C16F10
	0x02620B04 MOV X1, X20
	0x02620B08 MOV X2, X31
	0x02620B0C MOV X21, X0
	0x02620B10 BL 0x35C997C
	0x02620B14 MOV X0, X21
	0x02620B18 B 0x2620CB4
	0x02620B1C BL 0x1C16F20
	0x02620B20 BL 0x1C16F20
	0x02620B24 MOV X0, X23
	0x02620B28 BL 0x1C16F18
	0x02620B2C B 0x2620BC0
	0x02620B30 B 0x2620BC0
	0x02620B34 B 0x2620BC0
	0x02620B38 B 0x2620BC0
	0x02620B3C B 0x2620BC0
	0x02620B40 B 0x2620BC0
	0x02620B44 B 0x2620BC0
	0x02620B48 B 0x2620BC0
	0x02620B4C B 0x2620B6C
	0x02620B50 B 0x2620BC0
	0x02620B54 B 0x2620BC0
	0x02620B58 B 0x2620BC0
	0x02620B5C B 0x2620BC0
	0x02620B60 B 0x2620BC0
	0x02620B64 B 0x2620BC0
	0x02620B68 B 0x2620BC0
	0x02620B6C MOV X22, X1
	0x02620B70 MOV X21, X0
	0x02620B74 CMP W22, 0x1
	0x02620B78 B.NE 0x2620B90
	0x02620B7C MOV X0, X21
	0x02620B80 BL 0x3EB1AD0
	0x02620B84 LDR X23, [X0]
	0x02620B88 BL 0x3EB1AE0
	0x02620B8C B 0x26209A0
	0x02620B90 MOV X23, X31
	0x02620B94 B 0x2620BA0
	0x02620B98 MOV X22, X1
	0x02620B9C MOV X21, X0
	0x02620BA0 LDR X8, [X19 + 0x20]
	0x02620BA4 LDR X8, [X8 + 0xC0]
	0x02620BA8 LDR X1, [X8 + 0x110]
	0x02620BAC ADD X0, X31, 0x50
	0x02620BB0 BL 0x2BB614C
	0x02620BB4 CBZ X23, 0x2620BC8
	0x02620BB8 MOV X0, X23
	0x02620BBC BL 0x1C16F18
	0x02620BC0 MOV X22, X1
	0x02620BC4 MOV X21, X0
	0x02620BC8 CMP W22, 0x1
	0x02620BCC B.NE 0x2620CE4
	0x02620BD0 MOV X0, X21
	0x02620BD4 BL 0x3EB1AD0
	0x02620BD8 MOV X21, X0
	0x02620BDC ADRP X0, 0x1AD3000
	0x02620BE0 LDR X0, [X0 + 0x7D0]
	0x02620BE4 BL 0x1C16D08
	0x02620BE8 LDR X8, [X21]
	0x02620BEC LDR X1, [X8]
	0x02620BF0 BL 0x1C17270
	0x02620BF4 TBZ X0, 0x0, 0x2620CBC
	0x02620BF8 LDR X21, [X21]
	0x02620BFC BL 0x3EB1AE0
	0x02620C00 MOV X0, X20
	0x02620C04 BL 0x19903C0
	0x02620C08 LDR X8, [X19 + 0x20]
	0x02620C0C ADRP X0, 0x1AD3000
	0x02620C10 LDR X20, [X20 + 0x18]
	0x02620C14 LDR X8, [X8 + 0xC0]
	0x02620C18 LDR X22, [X8 + 0x18]
	0x02620C1C LDR X0, [X0 + 0x6C0]
	0x02620C20 BL 0x1C16D08
	0x02620C24 BL 0x19903D0
	0x02620C28 MOV X0, X22
	0x02620C2C MOV X1, X31
	0x02620C30 BL 0x338C698
	0x02620C34 MOV X22, X0
	0x02620C38 BL 0x19903C0
	0x02620C3C LDR X8, [X22]
	0x02620C40 MOV X0, X22
	0x02620C44 LDR X9, [X8 + 0x2E8]
	0x02620C48 LDR X1, [X8 + 0x2F0]
	0x02620C4C BLR X9
	0x02620C50 MOV X22, X0
	0x02620C54 ADRP X0, 0x1AFD000
	0x02620C58 LDR X0, [X0 + 0x420]
	0x02620C5C BL 0x1C16D08
	0x02620C60 MOV X23, X0
	0x02620C64 ADRP X0, 0x1AFD000
	0x02620C68 LDR X0, [X0 + 0x418]
	0x02620C6C BL 0x1C16D08
	0x02620C70 MOV X2, X0
	0x02620C74 MOV X0, X23
	0x02620C78 MOV X1, X20
	0x02620C7C MOV X3, X22
	0x02620C80 MOV X4, X31
	0x02620C84 BL 0x32277C4
	0x02620C88 MOV X20, X0
	0x02620C8C ADRP X0, 0x1AFC000
	0x02620C90 LDR X0, [X0 + 0x660]
	0x02620C94 BL 0x1C16D08
	0x02620C98 BL 0x1C16F10
	0x02620C9C MOV X1, X20
	0x02620CA0 MOV X2, X21
	0x02620CA4 MOV X3, X31
	0x02620CA8 MOV X22, X0
	0x02620CAC BL 0x35C99E4
	0x02620CB0 MOV X0, X22
	0x02620CB4 MOV X1, X19
	0x02620CB8 BL 0x1C16DEC
	0x02620CBC MOVZ W0, 0x8
	0x02620CC0 BL 0x3EB1AF0
	0x02620CC4 LDR X8, [X21]
	0x02620CC8 STR X8, [X0]
	0x02620CCC ADRP X1, 0x1894000
	0x02620CD0 ADD X1, X1, 0xE58
	0x02620CD4 MOV X2, X31
	0x02620CD8 BL 0x3EB1B00
	0x02620CDC MOV X21, X0
	0x02620CE0 BL 0x3EB1AE0
	0x02620CE4 MOV X0, X21
	0x02620CE8 BL 0x1D2C690
	0x02620CEC BL 0x1990590
	0x02620CF0 STR X30, [X31 - 0x30]!
	0x02620CF4 STP X22, X21, [X31 + 0x10]
	0x02620CF8 STP X20, X19, [X31 + 0x20]
	0x02620CFC ADRP X21, 0x1DBA000
	0x02620D00 LDRB W8, [X21 + 0x5A]
	0x02620D04 MOV X19, X1
	0x02620D08 MOV X20, X0
	0x02620D0C TBNZ X8, 0x0, 0x2620D48
	0x02620D10 ADRP X0, 0x1AFD000
	0x02620D14 LDR X0, [X0 + 0x458]
	0x02620D18 BL 0x1C16CF4
	0x02620D1C ADRP X0, 0x1AFD000
	0x02620D20 LDR X0, [X0 + 0x430]
	0x02620D24 BL 0x1C16CF4
	0x02620D28 ADRP X0, 0x1AD5000
	0x02620D2C LDR X0, [X0 + 0x3A0]
	0x02620D30 BL 0x1C16CF4
	0x02620D34 ADRP X0, 0x1AFD000
	0x02620D38 LDR X0, [X0 + 0x460]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0x1DBB000
	011 Move W8, [X21+85]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1AFE000
	019 Move X0, [X0+792]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+85], W8
	023 Move [X31+32], X31
	024 Move [X31+40], X31
	025 Move [X31+48], X31
	026 Move X22, [X20+80]
	027 Compare X22, 0
	028 JumpIfEqual {162}
	029 Move X8, [X19+32]
	030 Move W23, [X22+32]
	031 Move X8, [X8+192]
	032 Move X0, [X8+8]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+32]
	041 Move X1, X22
	042 Move X21, X0
	043 Move X8, [X8+192]
	044 Move X2, [X8+208]
	045 Call HashSet`1<Boolean>..ctor, X0, X1
	046 Move X0, [X20+80]
	047 Compare X0, 0
	048 JumpIfEqual {162}
	049 Move X8, [X19+32]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move X8, [X8+192]
	053 Move X1, [X8+216]
	054 Call HashSet`1<Boolean>.Clear, X0
	055 Move W8, [X20+32]
	056 Or W8, W8, W22
	057 Move [X20+32], W8
	058 Compare X21, 0
	059 JumpIfEqual {162}
	060 Move X8, [X19+32]
	061 Move X24, 0x1AFE000
	062 Move X0, X21
	063 Move X8, [X8+192]
	064 Move X1, [X8+224]
	065 Move X24, [X24+792]
	066 Add X8, X31, 8
	067 Call HashSet`1<Boolean>.GetEnumerator, X0
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move X8, [X31+24]
	070 Move [X31+2], V0
	071 Move [X31+48], X8
	072 Move X8, [X19+32]
	073 Move X8, [X8+192]
	074 Move X1, [X8+264]
	075 Add X0, X31, 32
	076 Call Enumerator<Boolean>.MoveNext, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {142}
	081 Move X21, [X20+48]
	082 Compare X21, 0
	083 JumpIfEqual {160}
	084 Move X8, [X21]
	085 Move W25, [X31+48]
	086 Move X1, [X24]
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X21
	097 Move W2, W31
	098 Call 0x1C5D788
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X21
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X21, X0
	107 Compare X0, 0
	108 JumpIfEqual {161}
	109 Move X8, [X19+32]
	110 Move W22, [X20+72]
	111 Move X9, [X8+192]
	112 Move X8, [X21]
	113 Move X23, [X9+256]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Move X1, [X23+32]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X21
	126 Call 0x1C5D788
	127 Move W9, [X10]
	128 Add W9, W9, W2
	129 Add X8, X8, W9
	130 Add X0, X8, 312
	131 Move X0, [X0+8]
	132 Move X1, X23
	133 Call 0x1C17DF8
	134 Move X8, [X0+8]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X4, X0
	137 NotImplemented "Instruction CSET not yet implemented."
	138 Move X0, X21
	139 Move X1, X20
	140 Move W3, W22
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X21, X31
	143 Move X8, [X19+32]
	144 Add X0, X31, 32
	145 Move X8, [X8+192]
	146 Move X1, [X8+272]
	147 Call Enumerator<Boolean>.Dispose, X0
	148 Compare X21, 0
	149 JumpIfNotEqual {163}
	150 Move X20, [X31+112]
	151 Move X19, [X31+120]
	152 Move X22, [X31+96]
	153 Move X21, [X31+104]
	154 Move X24, [X31+80]
	155 Move X23, [X31+88]
	156 Move X30, [X31+64]
	157 Move X25, [X31+72]
	158 Add X31, X31, 128
	159 Return 
	160 Call 0x1C17F20
	161 Call 0x1C17F20
	162 Call 0x1C17F20
	163 Move X0, X21
	164 Call 0x1C17F18
	165 Move X20, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, X20
	168 Call 0x3EB2AD0
	169 Move X21, [X0]
	170 Call 0x3EB2AE0
	171 Move X21, X31
	172 Move X20, X0
	173 Move X8, [X19+32]
	174 Move X8, [X8+192]
	175 Move X1, [X8+272]
	176 Add X0, X31, 32
	177 Call Enumerator<Boolean>.Dispose, X0
	178 Compare X21, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X20
	181 Call 0x1D2D690
	182 Move X0, X21
	183 Call 0x1C17F18
	184 Call 0x1991590

Method: System.Boolean Contains(T item)

Disassembly:
	0x02620D3C BL 0x1C16CF4
	0x02620D40 MOVZ W8, 0x1
	0x02620D44 STRB W8, [X21 + 0x5A]
	0x02620D48 CBZ X20, 0x2620DF8
	0x02620D4C MOV X0, X20
	0x02620D50 MOV X1, X31
	0x02620D54 BL 0x35D0294
	0x02620D58 MOV W22, W0
	0x02620D5C MOV X0, X20
	0x02620D60 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move X8, [X2+32]
	006 And W1, W1, 1
	007 Move X8, [X8+192]
	008 Move X2, [X8+280]
	009 Move X30, [X31+16]
	010 Call HashSet`1<Boolean>.Contains, X0, X1
	011 Return X0
	012 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x02620D64 BL 0x33BE520
	0x02620D68 CBZ X0, 0x2620DF8
	0x02620D6C LDR X8, [X0]
	0x02620D70 LDP X9, X1, [X8 + 0x1A8]
	0x02620D74 BLR X9
	0x02620D78 MOV X21, X0
	0x02620D7C TBZ X22, 0x0, 0x2620DA4
	0x02620D80 ADRP X8, 0x1AFD000
	0x02620D84 LDR X8, [X8 + 0x460]
	0x02620D88 MOV X0, X21
	0x02620D8C LDP X20, X19, [X31 + 0x20]
	0x02620D90 LDP X22, X21, [X31 + 0x10]
	0x02620D94 LDR X1, [X8]
	0x02620D98 MOV X2, X31
	0x02620D9C LDR X30, [X31], #0x30
	0x02620DA0 B 0x321B938
	0x02620DA4 LDR X8, [X19 + 0x20]
	0x02620DA8 ADRP X9, 0x1AD5000
	0x02620DAC LDR X1, [X20 + 0x50]
	0x02620DB0 LDR X8, [X8 + 0xC0]
	0x02620DB4 LDR X9, [X9 + 0x3A0]
	0x02620DB8 LDR X2, [X8 + 0x1B8]
	0x02620DBC LDR X0, [X9]
	0x02620DC0 BL 0x226B4E8
	0x02620DC4 ADRP X8, 0x1AFD000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X0, [X0+80]
	005 Compare X0, 0
	006 JumpIfEqual {28}
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8+224]
	011 Add X8, X31, 0
	012 Call HashSet`1<Boolean>.GetEnumerator, X0
	013 Move X8, [X31+16]
	014 Move V0, [X31]
	015 Add X1, X31, 0
	016 Move [X31+48], X8
	017 Move [X31+2], V0
	018 Move [X31], V0
	019 Move [X31+16], X8
	020 Move X8, [X19+32]
	021 Move X8, [X8+192]
	022 Move X0, [X8+232]
	023 Call 0x1C17E04
	024 Move X30, [X31+64]
	025 Move X19, [X31+72]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02620DC8 ADRP X9, 0x1AFD000
	0x02620DCC LDR X8, [X8 + 0x458]
	0x02620DD0 LDR X9, [X9 + 0x430]
	0x02620DD4 MOV X2, X0
	0x02620DD8 MOV X0, X21
	0x02620DDC LDR X1, [X8]
	0x02620DE0 LDR X3, [X9]
	0x02620DE4 LDP X20, X19, [X31 + 0x20]
	0x02620DE8 LDP X22, X21, [X31 + 0x10]
	0x02620DEC MOV X4, X31
	0x02620DF0 LDR X30, [X31], #0x30
	0x02620DF4 B 0x32277C4
	0x02620DF8 BL 0x1C16F20
	0x02620DFC MOV W0, W31
	0x02620E00 STR X31, [X2]
	0x02620E04 RET
	0x02620E08 LDR X8, [X2 + 0x20]
	0x02620E0C LDR X8, [X8 + 0xC0]
	0x02620E10 LDR X1, [X8 + 0x90]
	0x02620E14 B 0x261FA94
	0x02620E18 SUB X31, X31, 0x80
	0x02620E1C STR X30, [X31 + 0x40]
	0x02620E20 STP X24, X23, [X31 + 0x50]
	0x02620E24 STP X22, X21, [X31 + 0x60]
	0x02620E28 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X0, [X0+80]
	005 Compare X0, 0
	006 JumpIfEqual {28}
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8+224]
	011 Add X8, X31, 0
	012 Call HashSet`1<Boolean>.GetEnumerator, X0
	013 Move X8, [X31+16]
	014 Move V0, [X31]
	015 Add X1, X31, 0
	016 Move [X31+48], X8
	017 Move [X31+2], V0
	018 Move [X31], V0
	019 Move [X31+16], X8
	020 Move X8, [X19+32]
	021 Move X8, [X8+192]
	022 Move X0, [X8+232]
	023 Call 0x1C17E04
	024 Move X30, [X31+64]
	025 Move X19, [X31+72]
	026 Add X31, X31, 80
	027 Return X0
	028 Call 0x1C17F20

Method: System.Boolean IsProperSubsetOf(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02620E2C STP X31, X31, [X31 + 0x20]
	0x02620E30 STR X31, [X31 + 0x30]
	0x02620E34 LDR X8, [X2 + 0x20]
	0x02620E38 MOV X20, X1
	0x02620E3C MOV X19, X2
	0x02620E40 MOV X21, X0
	0x02620E44 LDR X8, [X8 + 0xC0]
	0x02620E48 LDR X1, [X8]
	0x02620E4C LDRB W8, [X1 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+288]
	008 Move X30, [X31+16]
	009 Call HashSet`1<Boolean>.IsProperSubsetOf, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean IsProperSupersetOf(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02620E50 TBNZ X8, 0x0, 0x2620E60
	0x02620E54 MOV X0, X1
	0x02620E58 BL 0x1C5C684
	0x02620E5C MOV X1, X0
	0x02620E60 CBZ X20, 0x2620E70
	0x02620E64 LDR X8, [X20]
	0x02620E68 CMP X8, X1
	0x02620E6C B.NE 0x2620F98
	0x02620E70 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+296]
	008 Move X30, [X31+16]
	009 Call HashSet`1<Boolean>.IsProperSupersetOf, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean IsSubsetOf(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02620E74 LDR X1, [X21 + 0x50]
	0x02620E78 MOV X0, X20
	0x02620E7C LDR X8, [X8 + 0xC0]
	0x02620E80 LDR X2, [X8 + 0x98]
	0x02620E84 BL 0x21C1970
	0x02620E88 LDR X8, [X19 + 0x20]
	0x02620E8C LDR X8, [X8 + 0xC0]
	0x02620E90 LDR X1, [X8 + 0xA8]
	0x02620E94 BL 0x21D51A4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+304]
	008 Move X30, [X31+16]
	009 Call HashSet`1<Boolean>.IsSubsetOf, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean IsSupersetOf(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02620E98 CBZ X0, 0x2620F88
	0x02620E9C LDR X8, [X0 + 0x18]
	0x02620EA0 MOV X22, X0
	0x02620EA4 CMP W8, 0x1
	0x02620EA8 B.LT 0x2620EEC
	0x02620EAC MOV X23, X31
	0x02620EB0 AND X8, X8, 0x0
	0x02620EB4 ADD X24, X22, 0x20
	0x02620EB8 CMP X23, W8, UXTW

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+312]
	008 Move X30, [X31+16]
	009 Call HashSet`1<Boolean>.IsSupersetOf, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean Overlaps(System.Collections.Generic.IEnumerable`1<T> other)

Disassembly:
	0x02620EBC B.CS 0x2620F8C
	0x02620EC0 CBZ X20, 0x2620F88
	0x02620EC4 LDR X8, [X19 + 0x20]
	0x02620EC8 LDRB W1, [X24, X23, LSL]
	0x02620ECC MOV X0, X20
	0x02620ED0 LDR X8, [X8 + 0xC0]
	0x02620ED4 LDR X2, [X8 + 0x58]
	0x02620ED8 BL 0x261FEE0
	0x02620EDC LDR W8, [X22 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+320]
	008 Move X30, [X31+16]
	009 Call HashSet`1<Boolean>.Overlaps, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean Remove(T item)

Disassembly:
	0x02620EE0 ADD X23, X23, 0x1
	0x02620EE4 CMP X23, W8, SXTW
	0x02620EE8 B.LT 0x2620EB8
	0x02620EEC LDR X0, [X21 + 0x50]
	0x02620EF0 CBZ X0, 0x2620F88
	0x02620EF4 LDR X8, [X19 + 0x20]
	0x02620EF8 LDR X8, [X8 + 0xC0]
	0x02620EFC LDR X1, [X8 + 0xE0]
	0x02620F00 ADD X8, X31, 0x8
	0x02620F04 BL 0x2D5EF18
	0x02620F08 LDUR V0, [X31 + 0x8]
	0x02620F0C LDR X8, [X31 + 0x18]
	0x02620F10 STR V0, [X31 + 0x2]
	0x02620F14 STR X8, [X31 + 0x30]
	0x02620F18 LDR X8, [X19 + 0x20]
	0x02620F1C LDR X8, [X8 + 0xC0]
	0x02620F20 LDR X1, [X8 + 0x108]
	0x02620F24 ADD X0, X31, 0x20
	0x02620F28 BL 0x2BB6150
	0x02620F2C TBZ X0, 0x0, 0x2620F50
	0x02620F30 CBZ X20, 0x2620F84
	0x02620F34 LDR X8, [X19 + 0x20]
	0x02620F38 LDRB W1, [X31 + 0x30]
	0x02620F3C LDR X8, [X8 + 0xC0]
	0x02620F40 LDR X2, [X8 + 0x50]
	0x02620F44 MOV X0, X20
	0x02620F48 BL 0x261F4F8
	0x02620F4C B 0x2620F18
	0x02620F50 MOV X20, X31
	0x02620F54 LDR X8, [X19 + 0x20]
	0x02620F58 ADD X0, X31, 0x20
	0x02620F5C LDR X8, [X8 + 0xC0]
	0x02620F60 LDR X1, [X8 + 0x110]
	0x02620F64 BL 0x2BB614C
	0x02620F68 CBNZ X20, 0x2620F90
	0x02620F6C LDP X20, X19, [X31 + 0x70]
	0x02620F70 LDP X22, X21, [X31 + 0x60]
	0x02620F74 LDP X24, X23, [X31 + 0x50]
	0x02620F78 LDR X30, [X31 + 0x40]
	0x02620F7C ADD X31, X31, 0x80
	0x02620F80 RET
	0x02620F84 BL 0x1C16F20
	0x02620F88 BL 0x1C16F20
	0x02620F8C BL 0x1C16F28
	0x02620F90 MOV X0, X20
	0x02620F94 BL 0x1C16F18
	0x02620F98 MOV X0, X20
	0x02620F9C BL 0x1C171E0
	0x02620FA0 B 0x2620FA8
	0x02620FA4 B 0x2620FA8
	0x02620FA8 MOV X21, X0
	0x02620FAC CMP W1, 0x1
	0x02620FB0 B.NE 0x2620FC8
	0x02620FB4 MOV X0, X21
	0x02620FB8 BL 0x3EB1AD0
	0x02620FBC LDR X20, [X0]
	0x02620FC0 BL 0x3EB1AE0
	0x02620FC4 B 0x2620F54
	0x02620FC8 MOV X20, X31
	0x02620FCC B 0x2620FD4
	0x02620FD0 MOV X21, X0
	0x02620FD4 LDR X8, [X19 + 0x20]
	0x02620FD8 LDR X8, [X8 + 0xC0]
	0x02620FDC LDR X1, [X8 + 0x110]
	0x02620FE0 ADD X0, X31, 0x20
	0x02620FE4 BL 0x2BB614C
	0x02620FE8 CBNZ X20, 0x2620FF4
	0x02620FEC MOV X0, X21
	0x02620FF0 BL 0x1D2C690
	0x02620FF4 MOV X0, X20
	0x02620FF8 BL 0x1C16F18
	0x02620FFC BL 0x1990590
	0x02621000 STP X30, X21, [X31 - 0x20]!
	0x02621004 STP X20, X19, [X31 + 0x10]
	0x02621008 LDR X8, [X2 + 0x20]
	0x0262100C MOV X20, X1
	0x02621010 MOV X19, X2
	0x02621014 MOV X21, X0
	0x02621018 LDR X8, [X8 + 0xC0]
	0x0262101C LDR X1, [X8 + 0x48]
	0x02621020 LDRB W8, [X1 + 0x135]
	0x02621024 TBNZ X8, 0x0, 0x2621034
	0x02621028 MOV X0, X1
	0x0262102C BL 0x1C5C684
	0x02621030 MOV X1, X0
	0x02621034 CBZ X20, 0x2621074
	0x02621038 LDR X8, [X20]
	0x0262103C LDR X9, [X1 + 0x40]
	0x02621040 MOV X0, X20
	0x02621044 LDR X8, [X8 + 0x40]
	0x02621048 CMP X8, X9
	0x0262104C B.NE 0x2621078
	0x02621050 BL 0x1C16E08
	0x02621054 LDR X8, [X19 + 0x20]
	0x02621058 LDRB W1, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1DBB000
	009 Move W8, [X21+86]
	010 Move X22, X2
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1AFE000
	018 Move X0, [X0+792]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+86], W8
	022 Move X0, [X20+80]
	023 Compare X0, 0
	024 JumpIfEqual {107}
	025 Move X8, [X22+32]
	026 And W1, W19, 1
	027 Move X8, [X8+192]
	028 Move X2, [X8+328]
	029 Call HashSet`1<Boolean>.Remove, X0, X1
	030 Move W21, W0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {98}
	035 Move X23, [X20+48]
	036 Move W8, 1
	037 Move [X20+32], W8
	038 Compare X23, 0
	039 JumpIfEqual {107}
	040 Move X10, 0x1AFE000
	041 Move X8, [X23]
	042 Move X10, [X10+792]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X23
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X23
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {107}
	065 Move X8, [X22+32]
	066 Move W22, [X20+72]
	067 Move X23, X0
	068 Move X9, [X8+192]
	069 Move X8, [X0]
	070 Move X24, [X9+256]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X24+32]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X23
	083 Call 0x1C5D788
	084 Move W9, [X10]
	085 Add W9, W9, W2
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X0, [X0+8]
	089 Move X1, X24
	090 Call 0x1C17DF8
	091 Move X8, [X0+8]
	092 Move X4, X0
	093 And W2, W19, 1
	094 Move X0, X23
	095 Move X1, X20
	096 Move W3, W22
	097 NotImplemented "Instruction BLR not yet implemented."
	098 And W0, W21, 1
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X24, [X31+16]
	104 Move X23, [X31+24]
	105 Move X30, [X31+64]
	106 Return X0
	107 Call 0x1C17F20

Method: System.Int32 RemoveWhere(System.Predicate`1<T> match)

Disassembly:
	0x0262105C LDP X20, X19, [X31 + 0x10]
	0x02621060 MOV X0, X21
	0x02621064 LDR X8, [X8 + 0xC0]
	0x02621068 LDR X2, [X8 + 0x50]
	0x0262106C LDP X30, X21, [X31], #0x20
	0x02621070 B 0x261F4F8
	0x02621074 BL 0x1C16F20
	0x02621078 BL 0x1C171E0
	0x0262107C STP X30, X21, [X31 - 0x20]!
	0x02621080 STP X20, X19, [X31 + 0x10]
	0x02621084 LDR X8, [X2 + 0x20]
	0x02621088 MOV X20, X1
	0x0262108C MOV X19, X2
	0x02621090 MOV X21, X0
	0x02621094 LDR X8, [X8 + 0xC0]
	0x02621098 LDR X1, [X8 + 0x48]
	0x0262109C LDRB W8, [X1 + 0x135]
	0x026210A0 TBNZ X8, 0x0, 0x26210B0
	0x026210A4 MOV X0, X1
	0x026210A8 BL 0x1C5C684
	0x026210AC MOV X1, X0
	0x026210B0 CBZ X20, 0x26210F0
	0x026210B4 LDR X8, [X20]
	0x026210B8 LDR X9, [X1 + 0x40]
	0x026210BC MOV X0, X20
	0x026210C0 LDR X8, [X8 + 0x40]
	0x026210C4 CMP X8, X9
	0x026210C8 B.NE 0x26210F4
	0x026210CC BL 0x1C16E08
	0x026210D0 LDR X8, [X19 + 0x20]
	0x026210D4 LDRB W1, [X0]
	0x026210D8 LDP X20, X19, [X31 + 0x10]
	0x026210DC MOV X0, X21
	0x026210E0 LDR X8, [X8 + 0xC0]
	0x026210E4 LDR X2, [X8 + 0x1C0]
	0x026210E8 LDP X30, X21, [X31], #0x20
	0x026210EC B 0x261FD3C
	0x026210F0 BL 0x1C16F20
	0x026210F4 BL 0x1C171E0
	0x026210F8 STP X30, X21, [X31 - 0x20]!
	0x026210FC STP X20, X19, [X31 + 0x10]
	0x02621100 LDR X8, [X2 + 0x20]
	0x02621104 MOV X20, X1
	0x02621108 MOV X19, X2
	0x0262110C MOV X21, X0
	0x02621110 LDR X8, [X8 + 0xC0]
	0x02621114 LDR X1, [X8 + 0x48]
	0x02621118 LDRB W8, [X1 + 0x135]
	0x0262111C TBNZ X8, 0x0, 0x262112C
	0x02621120 MOV X0, X1
	0x02621124 BL 0x1C5C684
	0x02621128 MOV X1, X0
	0x0262112C CBZ X20, 0x262116C
	0x02621130 LDR X8, [X20]
	0x02621134 LDR X9, [X1 + 0x40]
	0x02621138 MOV X0, X20
	0x0262113C LDR X8, [X8 + 0x40]
	0x02621140 CMP X8, X9
	0x02621144 B.NE 0x2621170
	0x02621148 BL 0x1C16E08
	0x0262114C LDR X8, [X19 + 0x20]
	0x02621150 LDRB W1, [X0]
	0x02621154 LDP X20, X19, [X31 + 0x10]
	0x02621158 MOV X0, X21
	0x0262115C LDR X8, [X8 + 0xC0]
	0x02621160 LDR X2, [X8 + 0x58]
	0x02621164 LDP X30, X21, [X31], #0x20
	0x02621168 B 0x261FEE0
	0x0262116C BL 0x1C16F20
	0x02621170 BL 0x1C171E0
	0x02621174 STR X30, [X31 - 0x30]!
	0x02621178 STP X22, X21, [X31 + 0x10]
	0x0262117C STP X20, X19, [X31 + 0x20]
	0x02621180 ADRP X22, 0x1DB9000
	0x02621184 ADRP X21, 0x1AD4000
	0x02621188 LDRB W8, [X22 + 0x5B]
	0x0262118C LDR X21, [X21 + 0x3A0]
	0x02621190 MOV X20, X1
	0x02621194 MOV X19, X0
	0x02621198 TBNZ X8, 0x0, 0x26211B0
	0x0262119C ADRP X0, 0x1AD4000
	0x026211A0 LDR X0, [X0 + 0x3A0]
	0x026211A4 BL 0x1C16CF4
	0x026211A8 MOVZ W8, 0x1
	0x026211AC STRB W8, [X22 + 0x5B]
	0x026211B0 LDR X8, [X20 + 0x20]
	0x026211B4 LDR X1, [X19 + 0x50]
	0x026211B8 LDR X0, [X21]
	0x026211BC LDP X20, X19, [X31 + 0x20]
	0x026211C0 LDR X8, [X8 + 0xC0]
	0x026211C4 LDP X22, X21, [X31 + 0x10]
	0x026211C8 LDR X2, [X8 + 0x1B8]
	0x026211CC LDR X30, [X31], #0x30
	0x026211D0 B 0x226B4E8
	0x026211D4 STR X30, [X31 - 0x10]!
	0x026211D8 LDR X8, [X0 + 0x50]
	0x026211DC CBZ X8, 0x26211EC
	0x026211E0 LDR W0, [X8 + 0x20]
	0x026211E4 LDR X30, [X31], #0x10
	0x026211E8 RET
	0x026211EC BL 0x1C16F20
	0x026211F0 STR X30, [X31 - 0x20]!
	0x026211F4 STP X20, X19, [X31 + 0x10]
	0x026211F8 ADRP X19, 0x1DB9000
	0x026211FC ADRP X20, 0x1AFC000
	0x02621200 LDRB W8, [X19 + 0x5C]
	0x02621204 LDR X20, [X20 + 0x3D0]
	0x02621208 TBNZ X8, 0x0, 0x2621220
	0x0262120C ADRP X0, 0x1AFC000
	0x02621210 LDR X0, [X0 + 0x3D0]
	0x02621214 BL 0x1C16CF4
	0x02621218 MOVZ W8, 0x1
	0x0262121C STRB W8, [X19 + 0x5C]
	0x02621220 LDR X19, [X20]
	0x02621224 LDR X8, [X19 + 0x38]
	0x02621228 CBNZ X8, 0x2621238
	0x0262122C MOV X0, X19
	0x02621230 BL 0x1C5C6E0
	0x02621234 LDR X8, [X19 + 0x38]
	0x02621238 LDR X0, [X8 + 0x10]
	0x0262123C LDRB W8, [X0 + 0x135]
	0x02621240 TBNZ X8, 0x0, 0x2621248
	0x02621244 BL 0x1C5C684
	0x02621248 LDR W8, [X0 + 0xE0]
	0x0262124C CBNZ W8, 0x2621254
	0x02621250 BL 0x1C16DFC
	0x02621254 LDR X8, [X19 + 0x38]
	0x02621258 LDR X0, [X8 + 0x10]
	0x0262125C LDRB W8, [X0 + 0x135]
	0x02621260 TBNZ X8, 0x0, 0x2621268
	0x02621264 BL 0x1C5C684
	0x02621268 LDR X8, [X0 + 0xB8]
	0x0262126C LDP X20, X19, [X31 + 0x10]
	0x02621270 LDR X0, [X8]
	0x02621274 LDR X30, [X31], #0x20
	0x02621278 RET
	0x0262127C MOVZ W0, 0x1
	0x02621280 RET
	0x02621284 MOV W0, W31
	0x02621288 RET
	0x0262128C MOV W0, W31
	0x02621290 RET
	0x02621294 STR X30, [X31 - 0x10]!
	0x02621298 LDR X8, [X0 + 0x50]
	0x0262129C CBZ X8, 0x26212AC
	0x026212A0 LDR W0, [X8 + 0x20]
	0x026212A4 LDR X30, [X31], #0x10
	0x026212A8 RET
	0x026212AC BL 0x1C16F20
	0x026212B0 LDR X0, [X0 + 0x40]
	0x026212B4 RET
	0x026212B8 LDR W0, [X0 + 0x48]
	0x026212BC RET
	0x026212C0 STR W1, [X0 + 0x48]
	0x026212C4 RET
	0x026212C8 STR X30, [X31 - 0x30]!
	0x026212CC STP X22, X21, [X31 + 0x10]
	0x026212D0 STP X20, X19, [X31 + 0x20]
	0x026212D4 ADRP X22, 0x1DB9000
	0x026212D8 ADRP X21, 0x1AD2000
	0x026212DC LDRB W8, [X22 + 0x5D]
	0x026212E0 LDR X21, [X21 + 0x6C0]
	0x026212E4 MOV X20, X1
	0x026212E8 MOV X19, X0
	0x026212EC TBNZ X8, 0x0, 0x2621310
	0x026212F0 ADRP X0, 0x1AFC000
	0x026212F4 LDR X0, [X0 + 0x310]
	0x026212F8 BL 0x1C16CF4
	0x026212FC ADRP X0, 0x1AD2000
	0x02621300 LDR X0, [X0 + 0x6C0]
	0x02621304 BL 0x1C16CF4
	0x02621308 MOVZ W8, 0x1
	0x0262130C STRB W8, [X22 + 0x5D]
	0x02621310 LDR X8, [X20 + 0x20]
	0x02621314 LDR X0, [X21]
	0x02621318 LDR X8, [X8 + 0xC0]
	0x0262131C LDR W9, [X0 + 0xE0]
	0x02621320 LDR X21, [X8 + 0x18]
	0x02621324 CBNZ W9, 0x262132C
	0x02621328 BL 0x1C16DFC
	0x0262132C ADRP X22, 0x1AFC000
	0x02621330 LDR X22, [X22 + 0x310]
	0x02621334 MOV X0, X21
	0x02621338 MOV X1, X31
	0x0262133C BL 0x338C698
	0x02621340 STR X0, [X19 + 0x40]
	0x02621344 LDR X8, [X20 + 0x20]
	0x02621348 LDR X8, [X8 + 0xC0]
	0x0262134C LDR X0, [X8 + 0x8]
	0x02621350 LDRB W8, [X0 + 0x135]
	0x02621354 TBNZ X8, 0x0, 0x262135C
	0x02621358 BL 0x1C5C684
	0x0262135C BL 0x1C16F10
	0x02621360 LDR X8, [X20 + 0x20]
	0x02621364 MOV X20, X0
	0x02621368 LDR X8, [X8 + 0xC0]
	0x0262136C LDR X1, [X8 + 0x20]
	0x02621370 BL 0x2D8C06C
	0x02621374 STR X20, [X19 + 0x50]
	0x02621378 LDR X0, [X22]
	0x0262137C LDR W8, [X0 + 0xE0]
	0x02621380 CBNZ W8, 0x2621388
	0x02621384 BL 0x1C16DFC
	0x02621388 MOV X0, X19
	0x0262138C LDP X20, X19, [X31 + 0x20]
	0x02621390 LDP X22, X21, [X31 + 0x10]
	0x02621394 MOV X1, X31
	0x02621398 LDR X30, [X31], #0x30
	0x0262139C B 0x35CDA2C
	0x026213A0 STR X30, [X31 - 0x40]!
	0x026213A4 STP X24, X23, [X31 + 0x10]
	0x026213A8 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X22, 0x1DBA000
	013 Move W8, [X22+87]
	014 Move X19, X2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x1AFD000
	022 Move X0, [X0+792]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+87], W8
	026 Move [X31+32], X31
	027 Move [X31+40], X31
	028 Move [X31+48], X31
	029 Move X8, [X19+32]
	030 Move X8, [X8+192]
	031 Move X0, [X8+336]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Call 0x1C17F10
	039 Move X8, [X19+32]
	040 Move X22, X0
	041 Move X8, [X8+192]
	042 Move X1, [X8+344]
	043 Call 0x23784F4, X0
	044 Compare X22, 0
	045 JumpIfEqual {210}
	046 Move [X22+16], X21
	047 Move X8, [X19+32]
	048 Move X21, [X20+80]
	049 Move X8, [X8+192]
	050 Move X0, [X8+368]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Call 0x1C17F10
	058 Move X8, [X19+32]
	059 Move X1, X22
	060 Move X23, X0
	061 Move X8, [X8+192]
	062 Move X2, [X8+360]
	063 Move X3, [X8+376]
	064 Call Func`2<Boolean, Boolean>..ctor, X0, X1, X2
	065 Move X8, [X19+32]
	066 Move X0, X21
	067 Move X1, X23
	068 Move X8, [X8+192]
	069 Move X2, [X8+384]
	070 Call Enumerable.Where, X0, X1
	071 Move X8, [X19+32]
	072 Move X22, X0
	073 Move X8, [X8+192]
	074 Move X8, [X8+8]
	075 Move W9, [X8+309]
	076 Move TEMP, X9
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {83}
	080 Move X0, X8
	081 Call 0x1C5D684
	082 Move X8, X0
	083 Move X0, X8
	084 Call 0x1C17F10
	085 Move X8, [X19+32]
	086 Move X1, X22
	087 Move X21, X0
	088 Move X8, [X8+192]
	089 Move X2, [X8+208]
	090 Call HashSet`1<Boolean>..ctor, X0, X1
	091 Compare X21, 0
	092 JumpIfEqual {210}
	093 Move X8, [X19+32]
	094 Move X25, 0x1AFD000
	095 Move X0, X21
	096 Move X8, [X8+192]
	097 Move X1, [X8+224]
	098 Move X25, [X25+792]
	099 Add X8, X31, 8
	100 Call HashSet`1<Boolean>.GetEnumerator, X0
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X8, [X31+24]
	103 Move W26, 1
	104 Move [X31+2], V0
	105 Move [X31+48], X8
	106 Move X8, [X19+32]
	107 Move X8, [X8+192]
	108 Move X1, [X8+264]
	109 Add X0, X31, 32
	110 Call Enumerator<Boolean>.MoveNext, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {186}
	115 Move X0, [X20+80]
	116 Compare X0, 0
	117 JumpIfEqual {208}
	118 Move X8, [X19+32]
	119 Move W27, [X31+48]
	120 Move X8, [X8+192]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CSET not yet implemented."
	123 Move X2, [X8+328]
	124 Call HashSet`1<Boolean>.Remove, X0, X1
	125 Move X22, [X20+48]
	126 Move [X20+32], W26
	127 Compare X22, 0
	128 JumpIfEqual {209}
	129 Move X8, [X22]
	130 Move X1, [X25]
	131 NotImplemented "Instruction LDRH not yet implemented."
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X22
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X22
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X22, X0
	151 Compare X0, 0
	152 JumpIfEqual {207}
	153 Move X8, [X19+32]
	154 Move W23, [X20+72]
	155 Move X9, [X8+192]
	156 Move X8, [X22]
	157 Move X24, [X9+256]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Move X1, [X24+32]
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move X0, X22
	170 Call 0x1C5D788
	171 Move W9, [X10]
	172 Add W9, W9, W2
	173 Add X8, X8, W9
	174 Add X0, X8, 312
	175 Move X0, [X0+8]
	176 Move X1, X24
	177 Call 0x1C17DF8
	178 Move X8, [X0+8]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X4, X0
	181 NotImplemented "Instruction CSET not yet implemented."
	182 Move X0, X22
	183 Move X1, X20
	184 Move W3, W23
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X22, X31
	187 Move X8, [X19+32]
	188 Add X0, X31, 32
	189 Move X8, [X8+192]
	190 Move X1, [X8+272]
	191 Call Enumerator<Boolean>.Dispose, X0
	192 Compare X22, 0
	193 JumpIfNotEqual {211}
	194 Move W0, [X21+32]
	195 Move X20, [X31+128]
	196 Move X19, [X31+136]
	197 Move X22, [X31+112]
	198 Move X21, [X31+120]
	199 Move X24, [X31+96]
	200 Move X23, [X31+104]
	201 Move X26, [X31+80]
	202 Move X25, [X31+88]
	203 Move X30, [X31+64]
	204 Move X27, [X31+72]
	205 Add X31, X31, 144
	206 Return X0
	207 Call 0x1C17F20
	208 Call 0x1C17F20
	209 Call 0x1C17F20
	210 Call 0x1C17F20
	211 Move X0, X22
	212 Call 0x1C17F18
	213 Move X20, X0
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X0, X20
	216 Call 0x3EB2AD0
	217 Move X22, [X0]
	218 Call 0x3EB2AE0
	219 Move X22, X31
	220 Move X20, X0
	221 Move X8, [X19+32]
	222 Move X8, [X8+192]
	223 Move X1, [X8+272]
	224 Add X0, X31, 32
	225 Call Enumerator<Boolean>.Dispose, X0
	226 Compare X22, 0
	227 JumpIfNotEqual {230}
	228 Move X0, X20
	229 Call 0x1D2D690
	230 Move X0, X22
	231 Call 0x1C17F18
	232 Call 0x1991590

Method: T[] ToArray()

Disassembly:
	0x026213AC STP X20, X19, [X31 + 0x30]
	0x026213B0 ADRP X24, 0x1DB9000
	0x026213B4 ADRP X23, 0x1AD2000
	0x026213B8 LDRB W8, [X24 + 0x5E]
	0x026213BC LDR X23, [X23 + 0x6C0]

ISIL:
	001 Move X8, [X1+32]
	002 Move X0, [X0+80]
	003 Move X8, [X8+192]
	004 Move X1, [X8+168]
	005 Call Enumerable.ToArray, X0
	006 Return X0

Method: SimpleJSON.JSONNode ToJSON(System.Predicate`1<SpatialSys.ObservableState.IStateObject> filter = null, System.Boolean includeSyncRate = True)

Disassembly:
	0x026213C0 MOV X22, X3
	0x026213C4 MOV X19, X2
	0x026213C8 MOV X20, X1
	0x026213CC MOV X21, X0
	0x026213D0 TBNZ X8, 0x0, 0x26213F4
	0x026213D4 ADRP X0, 0x1AFC000
	0x026213D8 LDR X0, [X0 + 0x310]
	0x026213DC BL 0x1C16CF4
	0x026213E0 ADRP X0, 0x1AD2000
	0x026213E4 LDR X0, [X0 + 0x6C0]
	0x026213E8 BL 0x1C16CF4
	0x026213EC MOVZ W8, 0x1
	0x026213F0 STRB W8, [X24 + 0x5E]
	0x026213F4 LDR X8, [X22 + 0x20]
	0x026213F8 LDR X0, [X23]
	0x026213FC LDR X8, [X8 + 0xC0]
	0x02621400 LDR W9, [X0 + 0xE0]
	0x02621404 LDR X23, [X8 + 0x18]
	0x02621408 CBNZ W9, 0x2621410
	0x0262140C BL 0x1C16DFC
	0x02621410 ADRP X24, 0x1AFC000
	0x02621414 LDR X24, [X24 + 0x310]
	0x02621418 MOV X0, X23
	0x0262141C MOV X1, X31
	0x02621420 BL 0x338C698
	0x02621424 STR X0, [X21 + 0x40]
	0x02621428 LDR X8, [X22 + 0x20]
	0x0262142C LDR X8, [X8 + 0xC0]
	0x02621430 LDR X0, [X8 + 0x8]
	0x02621434 LDRB W8, [X0 + 0x135]
	0x02621438 TBNZ X8, 0x0, 0x2621440
	0x0262143C BL 0x1C5C684
	0x02621440 BL 0x1C16F10
	0x02621444 LDR X8, [X22 + 0x20]
	0x02621448 MOV X22, X0
	0x0262144C LDR X8, [X8 + 0xC0]
	0x02621450 LDR X1, [X8 + 0x20]
	0x02621454 BL 0x2D8C06C
	0x02621458 STR X22, [X21 + 0x50]
	0x0262145C LDR X0, [X24]
	0x02621460 LDR W8, [X0 + 0xE0]
	0x02621464 CBNZ W8, 0x262146C
	0x02621468 BL 0x1C16DFC
	0x0262146C MOV X0, X21
	0x02621470 MOV X1, X20
	0x02621474 MOV X2, X19
	0x02621478 LDP X20, X19, [X31 + 0x30]
	0x0262147C LDP X22, X21, [X31 + 0x20]
	0x02621480 LDP X24, X23, [X31 + 0x10]
	0x02621484 MOV X3, X31
	0x02621488 LDR X30, [X31], #0x40
	0x0262148C B 0x35CDABC
	0x02621490 STP X30, X25, [X31 - 0x40]!
	0x02621494 STP X24, X23, [X31 + 0x10]
	0x02621498 STP X22, X21, [X31 + 0x20]
	0x0262149C STP X20, X19, [X31 + 0x30]
	0x026214A0 ADRP X24, 0x1DB9000
	0x026214A4 ADRP X25, 0x1AD2000
	0x026214A8 LDRB W8, [X24 + 0x5F]
	0x026214AC LDR X25, [X25 + 0x6C0]
	0x026214B0 MOV X20, X4
	0x026214B4 MOV W23, W3
	0x026214B8 MOV X21, X2
	0x026214BC MOV X22, X1
	0x026214C0 MOV X19, X0
	0x026214C4 TBNZ X8, 0x0, 0x2621500
	0x026214C8 ADRP X0, 0x1AFC000
	0x026214CC LDR X0, [X0 + 0x318]
	0x026214D0 BL 0x1C16CF4
	0x026214D4 ADRP X0, 0x1AFC000
	0x026214D8 LDR X0, [X0 + 0x320]
	0x026214DC BL 0x1C16CF4
	0x026214E0 ADRP X0, 0x1AFA000
	0x026214E4 LDR X0, [X0 + 0xB60]
	0x026214E8 BL 0x1C16CF4
	0x026214EC ADRP X0, 0x1AD2000
	0x026214F0 LDR X0, [X0 + 0x6C0]
	0x026214F4 BL 0x1C16CF4
	0x026214F8 MOVZ W8, 0x1
	0x026214FC STRB W8, [X24 + 0x5F]
	0x02621500 LDR X8, [X20 + 0x20]
	0x02621504 LDR X0, [X25]
	0x02621508 LDR X8, [X8 + 0xC0]
	0x0262150C LDR W9, [X0 + 0xE0]
	0x02621510 LDR X24, [X8 + 0x18]
	0x02621514 CBNZ W9, 0x262151C
	0x02621518 BL 0x1C16DFC
	0x0262151C MOV X0, X24
	0x02621520 MOV X1, X31
	0x02621524 BL 0x338C698
	0x02621528 CBZ X0, 0x262168C
	0x0262152C MOV X1, X31
	0x02621530 MOV X24, X0
	0x02621534 BL 0x33970C4
	0x02621538 TBNZ X0, 0x0, 0x2621578
	0x0262153C ADRP X8, 0x1AFA000
	0x02621540 LDR X0, [X25]
	0x02621544 LDR X8, [X8 + 0xB60]
	0x02621548 LDR W9, [X0 + 0xE0]
	0x0262154C LDR X25, [X8]
	0x02621550 CBNZ W9, 0x2621558
	0x02621554 BL 0x1C16DFC
	0x02621558 MOV X0, X25
	0x0262155C MOV X1, X31
	0x02621560 BL 0x338C698
	0x02621564 MOV X1, X0
	0x02621568 MOV X0, X24
	0x0262156C MOV X2, X31
	0x02621570 BL 0x3395F0C
	0x02621574 TBNZ X0, 0x0, 0x2621690
	0x02621578 CBZ X19, 0x262168C
	0x0262157C AND W3, W23, 0x1
	0x02621580 MOV X0, X19
	0x02621584 MOV X1, X22
	0x02621588 MOV X2, X21
	0x0262158C MOV X4, X31
	0x02621590 BL 0x35CDD8C
	0x02621594 LDR X20, [X19 + 0x30]
	0x02621598 CBZ X20, 0x262168C
	0x0262159C ADRP X10, 0x1AFC000
	0x026215A0 LDR X8, [X20]
	0x026215A4 LDR X10, [X10 + 0x318]
	0x026215A8 LDRH W9, [X8 + 0x12E]
	0x026215AC LDR X1, [X10]
	0x026215B0 CBZ X9, 0x26215D4
	0x026215B4 LDR X10, [X8 + 0xB0]
	0x026215B8 ADD X10, X10, 0x8
	0x026215BC LDUR X11, [X10 - 0x8]
	0x026215C0 CMP X11, X1
	0x026215C4 B.EQ 0x26215E4
	0x026215C8 SUBS X9, X9, 0x1
	0x026215CC ADD X10, X10, 0x10
	0x026215D0 B.NE 0x26215BC
	0x026215D4 MOVZ W2, 0x1
	0x026215D8 MOV X0, X20
	0x026215DC BL 0x1C5C788
	0x026215E0 B 0x26215F4
	0x026215E4 LDR W9, [X10]
	0x026215E8 ADD W9, W9, 0x1
	0x026215EC ADD X8, X8, W9, 0x4, SXTW
	0x026215F0 ADD X0, X8, 0x138
	0x026215F4 LDP X8, X1, [X0]
	0x026215F8 MOV X0, X20
	0x026215FC BLR X8
	0x02621600 CBZ X0, 0x262168C
	0x02621604 ADRP X10, 0x1AFC000
	0x02621608 LDR X8, [X0]
	0x0262160C LDR X10, [X10 + 0x320]
	0x02621610 LDR X21, [X19 + 0x40]
	0x02621614 MOV X20, X0
	0x02621618 LDRH W9, [X8 + 0x12E]
	0x0262161C LDR X1, [X10]
	0x02621620 CBZ X9, 0x2621644
	0x02621624 LDR X10, [X8 + 0xB0]
	0x02621628 ADD X10, X10, 0x8
	0x0262162C LDUR X11, [X10 - 0x8]
	0x02621630 CMP X11, X1
	0x02621634 B.EQ 0x2621654
	0x02621638 SUBS X9, X9, 0x1
	0x0262163C ADD X10, X10, 0x10
	0x02621640 B.NE 0x262162C
	0x02621644 MOVZ W2, 0x4
	0x02621648 MOV X0, X20
	0x0262164C BL 0x1C5C788
	0x02621650 B 0x2621664
	0x02621654 LDR W9, [X10]
	0x02621658 ADD W9, W9, 0x4
	0x0262165C ADD X8, X8, W9, 0x4, SXTW
	0x02621660 ADD X0, X8, 0x138
	0x02621664 LDP X8, X2, [X0]
	0x02621668 MOV X0, X20
	0x0262166C MOV X1, X21
	0x02621670 BLR X8
	0x02621674 STR W0, [X19 + 0x48]
	0x02621678 LDP X20, X19, [X31 + 0x30]
	0x0262167C LDP X22, X21, [X31 + 0x20]
	0x02621680 LDP X24, X23, [X31 + 0x10]
	0x02621684 LDP X30, X25, [X31], #0x40
	0x02621688 RET
	0x0262168C BL 0x1C16F20
	0x02621690 LDR X8, [X20 + 0x20]
	0x02621694 ADRP X0, 0x1AD2000
	0x02621698 LDR X8, [X8 + 0xC0]
	0x0262169C LDR X19, [X8 + 0x18]
	0x026216A0 LDR X0, [X0 + 0x6C0]
	0x026216A4 BL 0x1C16D08
	0x026216A8 BL 0x19903D0
	0x026216AC MOV X0, X19
	0x026216B0 MOV X1, X31
	0x026216B4 BL 0x338C698
	0x026216B8 MOV X19, X0
	0x026216BC BL 0x19903C0
	0x026216C0 LDR X8, [X19]
	0x026216C4 MOV X0, X19
	0x026216C8 LDR X9, [X8 + 0x2E8]
	0x026216CC LDR X1, [X8 + 0x2F0]
	0x026216D0 BLR X9
	0x026216D4 MOV X19, X0
	0x026216D8 ADRP X0, 0x1AFC000
	0x026216DC LDR X0, [X0 + 0x440]
	0x026216E0 BL 0x1C16D08
	0x026216E4 MOV X21, X0
	0x026216E8 ADRP X0, 0x1AD3000
	0x026216EC LDR X0, [X0 + 0x608]
	0x026216F0 BL 0x1C16D08
	0x026216F4 MOV X2, X0
	0x026216F8 MOV X0, X21
	0x026216FC MOV X1, X19
	0x02621700 MOV X3, X31
	0x02621704 BL 0x32274B8
	0x02621708 MOV X19, X0
	0x0262170C ADRP X0, 0x1ADA000
	0x02621710 LDR X0, [X0 + 0x578]
	0x02621714 BL 0x1C16D08
	0x02621718 BL 0x1C16F10
	0x0262171C MOV X1, X19
	0x02621720 MOV X2, X31
	0x02621724 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0x1DBA000
	009 Move X21, 0x1AFD000
	010 Move W8, [X22+88]
	011 Move X21, [X21+880]
	012 Move X19, X3
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1AFD000
	019 Move X0, [X0+880]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+88], W8
	023 Move X0, [X21]
	024 Move [X31+32], X31
	025 Move [X31+40], X31
	026 Move [X31+48], X31
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X21, X0
	030 Call JSONArray..ctor, X0
	031 Compare X20, 0
	032 JumpIfEqual {125}
	033 Move X8, [X20]
	034 Move X1, [X8+816]
	035 Move X9, [X8+808]
	036 Move X0, X20
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X22, X0
	039 Compare X0, 0
	040 JumpIfEqual {126}
	041 Move X8, [X19+32]
	042 Move X9, [X8+192]
	043 Move X8, [X22]
	044 Move X23, [X9+392]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X23+32]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X22
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, W2
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X0, [X0+8]
	063 Move X1, X23
	064 Call 0x1C17DF8
	065 Move X1, X0
	066 Move X8, [X1+8]
	067 Move X0, X22
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X22, X0
	070 Move X0, [X20+80]
	071 Compare X0, 0
	072 JumpIfEqual {127}
	073 Move X8, [X19+32]
	074 Move X8, [X8+192]
	075 Move X1, [X8+224]
	076 Add X8, X31, 8
	077 Call HashSet`1<Boolean>.GetEnumerator, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move X8, [X31+24]
	080 Move [X31+2], V0
	081 Move [X31+48], X8
	082 Move X8, [X19+32]
	083 Move X8, [X8+192]
	084 Move X1, [X8+264]
	085 Add X0, X31, 32
	086 Call Enumerator<Boolean>.MoveNext, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {106}
	091 Compare X22, 0
	092 JumpIfEqual {123}
	093 Move W1, [X31+48]
	094 Move X0, [X22+64]
	095 Move X8, [X22+24]
	096 Move X2, [X22+40]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X1, X0
	099 Compare X21, 0
	100 JumpIfEqual {124}
	101 Move X8, [X21]
	102 Move X9, [X8+648]
	103 Move X2, [X8+656]
	104 Move X0, X21
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X22, X31
	107 Move X8, [X19+32]
	108 Move X8, [X8+192]
	109 Move X1, [X8+272]
	110 Add X0, X31, 32
	111 Call Enumerator<Boolean>.Dispose, X0
	112 Compare X22, 0
	113 JumpIfNotEqual {128}
	114 Move X0, X21
	115 Move X20, [X31+96]
	116 Move X19, [X31+104]
	117 Move X22, [X31+80]
	118 Move X21, [X31+88]
	119 Move X30, [X31+64]
	120 Move X23, [X31+72]
	121 Add X31, X31, 112
	122 Return X0
	123 Call 0x1C17F20
	124 Call 0x1C17F20
	125 Call 0x1C17F20
	126 Call 0x1C17F20
	127 Call 0x1C17F20
	128 Move X0, X22
	129 Call 0x1C17F18
	130 Move X21, X0
	131 Move [X31], X1
	132 Move X8, [X31]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X21
	135 Call 0x3EB2AD0
	136 Move X21, X0
	137 Move X0, 0x1AD3000
	138 Move X0, [X0+2000]
	139 Call 0x1C17D08
	140 Move X8, [X21]
	141 Move X1, [X8]
	142 Call 0x1C18270
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {196}
	147 Move X21, [X21]
	148 Call 0x3EB2AE0
	149 Move X0, X20
	150 Call 0x19913C0
	151 Move X8, [X19+32]
	152 Move X0, 0x1AD3000
	153 Move X20, [X20+24]
	154 Move X8, [X8+192]
	155 Move X22, [X8+24]
	156 Move X0, [X0+1728]
	157 Call 0x1C17D08
	158 Call 0x19913D0
	159 Move X0, X22
	160 Move X1, X31
	161 Call Type.GetTypeFromHandle, X0
	162 Move X22, X0
	163 Call 0x19913C0
	164 Move X8, [X22]
	165 Move X0, X22
	166 Move X9, [X8+744]
	167 Move X1, [X8+752]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X22, X0
	170 Move X0, 0x1AFD000
	171 Move X0, [X0+1040]
	172 Call 0x1C17D08
	173 Move X23, X0
	174 Move X0, 0x1AFD000
	175 Move X0, [X0+1048]
	176 Call 0x1C17D08
	177 Move X2, X0
	178 Move X0, X23
	179 Move X1, X20
	180 Move X3, X22
	181 Move X4, X31
	182 Call String.Concat, X0, X1, X2, X3
	183 Move X20, X0
	184 Move X0, 0x1AFC000
	185 Move X0, [X0+1632]
	186 Call 0x1C17D08
	187 Call 0x1C17F10
	188 Move X1, X20
	189 Move X2, X21
	190 Move X3, X31
	191 Move X22, X0
	192 Call StateSerializationException..ctor, X0, X1, X2
	193 Move X0, X22
	194 Move X1, X19
	195 Call 0x1C17DEC
	196 Move W0, 8
	197 Call 0x3EB2AF0
	198 Move X8, [X21]
	199 Move [X0], X8
	200 Move X1, 0x1894000
	201 Add X1, X1, 3672
	202 Move X2, X31
	203 Call 0x3EB2B00
	204 Move X21, X0
	205 Call 0x3EB2AE0
	206 Move X0, X21
	207 Call 0x1D2D690
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Call 0x3EB2AD0
	210 Move X22, [X0]
	211 Call 0x3EB2AE0
	212 Move [X31], X1
	213 Move X21, X0
	214 Move X22, X31
	215 Move X21, X0
	216 Move [X31], X1
	217 Move X8, [X19+32]
	218 Move X8, [X8+192]
	219 Move X1, [X8+272]
	220 Add X0, X31, 32
	221 Call Enumerator<Boolean>.Dispose, X0
	222 Compare X22, 0
	223 JumpIfEqual {132}
	224 Move X0, X22
	225 Call 0x1C17F18
	226 Call 0x1991590

Method: System.Void FromJSON(SimpleJSON.JSONNode json)

Disassembly:
	0x02621728 BL 0x3314A68
	0x0262172C MOV X0, X21
	0x02621730 MOV X1, X20
	0x02621734 BL 0x1C16DEC
	0x02621738 STR X30, [X31 - 0x30]!
	0x0262173C STP X22, X21, [X31 + 0x10]
	0x02621740 STP X20, X19, [X31 + 0x20]
	0x02621744 ADRP X22, 0x1DB9000
	0x02621748 LDRB W8, [X22 + 0x60]
	0x0262174C MOV X19, X2
	0x02621750 MOV X20, X1
	0x02621754 MOV X21, X0
	0x02621758 TBNZ X8, 0x0, 0x2621770
	0x0262175C ADRP X0, 0x1AD2000
	0x02621760 LDR X0, [X0 + 0x750]
	0x02621764 BL 0x1C16CF4
	0x02621768 MOVZ W8, 0x1
	0x0262176C STRB W8, [X22 + 0x60]
	0x02621770 CBZ X20, 0x2621934
	0x02621774 ADRP X10, 0x1AD2000
	0x02621778 LDR X8, [X20]
	0x0262177C LDR X10, [X10 + 0x750]
	0x02621780 LDRH W9, [X8 + 0x12E]
	0x02621784 LDR X1, [X10]
	0x02621788 CBZ X9, 0x26217AC
	0x0262178C LDR X10, [X8 + 0xB0]
	0x02621790 ADD X10, X10, 0x8
	0x02621794 LDUR X11, [X10 - 0x8]
	0x02621798 CMP X11, X1
	0x0262179C B.EQ 0x26217BC
	0x026217A0 SUBS X9, X9, 0x1
	0x026217A4 ADD X10, X10, 0x10
	0x026217A8 B.NE 0x2621794
	0x026217AC MOVZ W2, 0x2
	0x026217B0 MOV X0, X20
	0x026217B4 BL 0x1C5C788
	0x026217B8 B 0x26217CC
	0x026217BC LDR W9, [X10]
	0x026217C0 ADD W9, W9, 0x2
	0x026217C4 ADD X8, X8, W9, 0x4, SXTW
	0x026217C8 ADD X0, X8, 0x138
	0x026217CC LDP X8, X1, [X0]
	0x026217D0 MOV X0, X20
	0x026217D4 BLR X8
	0x026217D8 AND W8, W0, 0xFF
	0x026217DC CMP W8, 0x6
	0x026217E0 B.EQ 0x262188C
	0x026217E4 CMP W8, 0x3
	0x026217E8 B.EQ 0x262189C
	0x026217EC CMP W8, 0x2
	0x026217F0 B.NE 0x2621938
	0x026217F4 LDR X8, [X19 + 0x20]
	0x026217F8 LDR X8, [X8 + 0xC0]
	0x026217FC LDR X0, [X8 + 0x38]
	0x02621800 LDRB W8, [X0 + 0x135]
	0x02621804 TBNZ X8, 0x0, 0x262180C
	0x02621808 BL 0x1C5C684
	0x0262180C LDR X8, [X20]
	0x02621810 LDRB W9, [X0 + 0x130]
	0x02621814 LDRB W10, [X8 + 0x130]
	0x02621818 CMP W10, W9
	0x0262181C B.CC 0x2621934
	0x02621820 LDR X8, [X8 + 0xC8]
	0x02621824 ADD X9, X8, X9, 0x3, LSL
	0x02621828 LDUR X9, [X9 - 0x8]
	0x0262182C CMP X9, X0
	0x02621830 B.NE 0x2621934
	0x02621834 LDR X9, [X19 + 0x20]
	0x02621838 LDR X9, [X9 + 0xC0]
	0x0262183C LDR X0, [X9 + 0x38]
	0x02621840 LDRB W10, [X0 + 0x135]
	0x02621844 TBNZ X10, 0x0, 0x262185C
	0x02621848 BL 0x1C5C684
	0x0262184C LDR X8, [X20]
	0x02621850 LDR X9, [X19 + 0x20]
	0x02621854 LDR X8, [X8 + 0xC8]
	0x02621858 LDR X9, [X9 + 0xC0]
	0x0262185C LDRB W10, [X0 + 0x130]
	0x02621860 LDR X2, [X9 + 0x50]
	0x02621864 ADD X8, X8, X10, 0x3, LSL
	0x02621868 LDUR X8, [X8 - 0x8]
	0x0262186C CMP X8, X0
	0x02621870 CSEL X8, X20, X31, EQ
	0x02621874 LDRB W1, [X8 + 0x19]
	0x02621878 MOV X0, X21
	0x0262187C LDP X20, X19, [X31 + 0x20]
	0x02621880 LDP X22, X21, [X31 + 0x10]
	0x02621884 LDR X30, [X31], #0x30
	0x02621888 B 0x26219D8
	0x0262188C LDP X20, X19, [X31 + 0x20]
	0x02621890 LDP X22, X21, [X31 + 0x10]
	0x02621894 LDR X30, [X31], #0x30
	0x02621898 RET
	0x0262189C LDR X8, [X19 + 0x20]
	0x026218A0 LDR X8, [X8 + 0xC0]
	0x026218A4 LDR X0, [X8 + 0x38]
	0x026218A8 LDRB W8, [X0 + 0x135]
	0x026218AC TBNZ X8, 0x0, 0x26218B4
	0x026218B0 BL 0x1C5C684
	0x026218B4 LDR X8, [X20]
	0x026218B8 LDRB W9, [X0 + 0x130]
	0x026218BC LDRB W10, [X8 + 0x130]
	0x026218C0 CMP W10, W9
	0x026218C4 B.CC 0x2621934
	0x026218C8 LDR X8, [X8 + 0xC8]
	0x026218CC ADD X9, X8, X9, 0x3, LSL
	0x026218D0 LDUR X9, [X9 - 0x8]
	0x026218D4 CMP X9, X0
	0x026218D8 B.NE 0x2621934
	0x026218DC LDR X9, [X19 + 0x20]
	0x026218E0 LDR X9, [X9 + 0xC0]
	0x026218E4 LDR X0, [X9 + 0x38]
	0x026218E8 LDRB W10, [X0 + 0x135]
	0x026218EC TBNZ X10, 0x0, 0x2621904
	0x026218F0 BL 0x1C5C684
	0x026218F4 LDR X8, [X20]
	0x026218F8 LDR X9, [X19 + 0x20]
	0x026218FC LDR X8, [X8 + 0xC8]
	0x02621900 LDR X9, [X9 + 0xC0]
	0x02621904 LDRB W10, [X0 + 0x130]
	0x02621908 LDR X2, [X9 + 0x58]
	0x0262190C ADD X8, X8, X10, 0x3, LSL
	0x02621910 LDUR X8, [X8 - 0x8]
	0x02621914 CMP X8, X0
	0x02621918 CSEL X8, X20, X31, EQ
	0x0262191C LDRB W1, [X8 + 0x19]
	0x02621920 MOV X0, X21
	0x02621924 LDP X20, X19, [X31 + 0x20]
	0x02621928 LDP X22, X21, [X31 + 0x10]
	0x0262192C LDR X30, [X31], #0x30
	0x02621930 B 0x26223B8
	0x02621934 BL 0x1C16F20
	0x02621938 MOV X0, X20
	0x0262193C BL 0x19903C0
	0x02621940 ADRP X0, 0x1AD2000
	0x02621944 LDR X0, [X0 + 0x750]
	0x02621948 BL 0x1C16D08
	0x0262194C MOV X1, X0
	0x02621950 MOVZ W0, 0x2
	0x02621954 MOV X2, X20
	0x02621958 BL 0x19963F0
	0x0262195C STRB W0, [X31 + 0xC]
	0x02621960 ADRP X0, 0x1AFC000
	0x02621964 LDR X0, [X0 + 0x328]
	0x02621968 BL 0x1C16D08
	0x0262196C ADD X1, X31, 0xC
	0x02621970 BL 0x1C16E04
	0x02621974 MOV X20, X0
	0x02621978 ADRP X0, 0x1AFC000
	0x0262197C LDR X0, [X0 + 0x330]
	0x02621980 BL 0x1C16D08
	0x02621984 MOV X21, X0
	0x02621988 ADRP X0, 0x1AFC000
	0x0262198C LDR X0, [X0 + 0x448]
	0x02621990 BL 0x1C16D08
	0x02621994 MOV X2, X0
	0x02621998 MOV X0, X21
	0x0262199C MOV X1, X20
	0x026219A0 MOV X3, X31
	0x026219A4 BL 0x3227BD4
	0x026219A8 MOV X20, X0
	0x026219AC ADRP X0, 0x1AD2000
	0x026219B0 LDR X0, [X0 + 0x5B0]
	0x026219B4 BL 0x1C16D08
	0x026219B8 BL 0x1C16F10
	0x026219BC MOV X1, X20
	0x026219C0 MOV X2, X31
	0x026219C4 MOV X21, X0
	0x026219C8 BL 0x337DF1C
	0x026219CC MOV X0, X21
	0x026219D0 MOV X1, X19
	0x026219D4 BL 0x1C16DEC
	0x026219D8 STR X30, [X31 - 0x40]!
	0x026219DC STP X24, X23, [X31 + 0x10]
	0x026219E0 STP X22, X21, [X31 + 0x20]
	0x026219E4 STP X20, X19, [X31 + 0x30]
	0x026219E8 ADRP X21, 0x1DB9000
	0x026219EC LDRB W8, [X21 + 0x61]
	0x026219F0 MOV X22, X2
	0x026219F4 MOV W19, W1
	0x026219F8 MOV X20, X0
	0x026219FC TBNZ X8, 0x0, 0x2621A14
	0x02621A00 ADRP X0, 0x1AFC000
	0x02621A04 LDR X0, [X0 + 0x318]
	0x02621A08 BL 0x1C16CF4
	0x02621A0C MOVZ W8, 0x1
	0x02621A10 STRB W8, [X21 + 0x61]
	0x02621A14 LDR X0, [X20 + 0x50]
	0x02621A18 CBZ X0, 0x2621B50
	0x02621A1C LDR X8, [X22 + 0x20]
	0x02621A20 MOV W1, W19
	0x02621A24 LDR X8, [X8 + 0xC0]
	0x02621A28 LDR X2, [X8 + 0x60]
	0x02621A2C BL 0x2D8D1B4
	0x02621A30 MOV W21, W0
	0x02621A34 TBZ X0, 0x0, 0x2621B38
	0x02621A38 LDR X23, [X20 + 0x30]
	0x02621A3C MOVZ W8, 0x1
	0x02621A40 STRB W8, [X20 + 0x20]
	0x02621A44 CBZ X23, 0x2621B50
	0x02621A48 ADRP X10, 0x1AFC000
	0x02621A4C LDR X8, [X23]
	0x02621A50 LDR X10, [X10 + 0x318]
	0x02621A54 LDRH W9, [X8 + 0x12E]
	0x02621A58 LDR X1, [X10]
	0x02621A5C CBZ X9, 0x2621A80
	0x02621A60 LDR X10, [X8 + 0xB0]
	0x02621A64 ADD X10, X10, 0x8
	0x02621A68 LDUR X11, [X10 - 0x8]
	0x02621A6C CMP X11, X1
	0x02621A70 B.EQ 0x2621A90
	0x02621A74 SUBS X9, X9, 0x1
	0x02621A78 ADD X10, X10, 0x10
	0x02621A7C B.NE 0x2621A68
	0x02621A80 MOV X0, X23
	0x02621A84 MOV W2, W31
	0x02621A88 BL 0x1C5C788
	0x02621A8C B 0x2621A9C
	0x02621A90 LDRSW X9, [X10]
	0x02621A94 ADD X8, X8, X9, 0x4, LSL
	0x02621A98 ADD X0, X8, 0x138
	0x02621A9C LDP X8, X1, [X0]
	0x02621AA0 MOV X0, X23
	0x02621AA4 BLR X8
	0x02621AA8 CBZ X0, 0x2621B50
	0x02621AAC LDR X8, [X22 + 0x20]
	0x02621AB0 LDR W22, [X20 + 0x48]
	0x02621AB4 MOV X23, X0
	0x02621AB8 LDR X9, [X8 + 0xC0]
	0x02621ABC LDR X8, [X0]
	0x02621AC0 LDR X24, [X9 + 0x70]
	0x02621AC4 LDRH W9, [X8 + 0x12E]
	0x02621AC8 LDR X1, [X24 + 0x20]
	0x02621ACC LDRH W2, [X24 + 0x50]
	0x02621AD0 CBZ X9, 0x2621AF4
	0x02621AD4 LDR X10, [X8 + 0xB0]
	0x02621AD8 ADD X10, X10, 0x8
	0x02621ADC LDUR X11, [X10 - 0x8]
	0x02621AE0 CMP X11, X1
	0x02621AE4 B.EQ 0x2621B00
	0x02621AE8 SUBS X9, X9, 0x1
	0x02621AEC ADD X10, X10, 0x10
	0x02621AF0 B.NE 0x2621ADC
	0x02621AF4 MOV X0, X23
	0x02621AF8 BL 0x1C5C788
	0x02621AFC B 0x2621B10
	0x02621B00 LDR W9, [X10]
	0x02621B04 ADD W9, W9, W2
	0x02621B08 ADD X8, X8, W9, 0x4, SXTW
	0x02621B0C ADD X0, X8, 0x138
	0x02621B10 LDR X0, [X0 + 0x8]
	0x02621B14 MOV X1, X24
	0x02621B18 BL 0x1C16DF8
	0x02621B1C LDR X8, [X0 + 0x8]
	0x02621B20 MOV X4, X0
	0x02621B24 MOV X0, X23
	0x02621B28 MOV X1, X20
	0x02621B2C MOV W2, W19
	0x02621B30 MOV W3, W22
	0x02621B34 BLR X8
	0x02621B38 AND W0, W21, 0x1
	0x02621B3C LDP X20, X19, [X31 + 0x30]
	0x02621B40 LDP X22, X21, [X31 + 0x20]
	0x02621B44 LDP X24, X23, [X31 + 0x10]
	0x02621B48 LDR X30, [X31], #0x40
	0x02621B4C RET
	0x02621B50 BL 0x1C16F20
	0x02621B54 STP X30, X25, [X31 - 0x40]!
	0x02621B58 STP X24, X23, [X31 + 0x10]
	0x02621B5C STP X22, X21, [X31 + 0x20]
	0x02621B60 STP X20, X19, [X31 + 0x30]
	0x02621B64 ADRP X22, 0x1DB9000
	0x02621B68 LDRB W8, [X22 + 0x62]
	0x02621B6C MOV X19, X2
	0x02621B70 MOV X21, X1
	0x02621B74 MOV X20, X0
	0x02621B78 TBNZ X8, 0x0, 0x2621B9C
	0x02621B7C ADRP X0, 0x1AD2000
	0x02621B80 LDR X0, [X0 + 0xE00]
	0x02621B84 BL 0x1C16CF4
	0x02621B88 ADRP X0, 0x1AD2000
	0x02621B8C LDR X0, [X0 + 0xE18]
	0x02621B90 BL 0x1C16CF4
	0x02621B94 MOVZ W8, 0x1
	0x02621B98 STRB W8, [X22 + 0x62]
	0x02621B9C CBZ X21, 0x2621CEC
	0x02621BA0 LDR X8, [X19 + 0x20]
	0x02621BA4 LDR X8, [X8 + 0xC0]
	0x02621BA8 LDR X1, [X8 + 0x80]
	0x02621BAC LDRB W8, [X1 + 0x135]
	0x02621BB0 TBNZ X8, 0x0, 0x2621BC0
	0x02621BB4 MOV X0, X1
	0x02621BB8 BL 0x1C5C684
	0x02621BBC MOV X1, X0
	0x02621BC0 LDR X8, [X21]
	0x02621BC4 LDRH W9, [X8 + 0x12E]
	0x02621BC8 CBZ X9, 0x2621BEC
	0x02621BCC LDR X10, [X8 + 0xB0]
	0x02621BD0 ADD X10, X10, 0x8
	0x02621BD4 LDUR X11, [X10 - 0x8]
	0x02621BD8 CMP X11, X1
	0x02621BDC B.EQ 0x2621BFC
	0x02621BE0 SUBS X9, X9, 0x1
	0x02621BE4 ADD X10, X10, 0x10
	0x02621BE8 B.NE 0x2621BD4
	0x02621BEC MOV X0, X21
	0x02621BF0 MOV W2, W31
	0x02621BF4 BL 0x1C5C788
	0x02621BF8 B 0x2621C08
	0x02621BFC LDRSW X9, [X10]
	0x02621C00 ADD X8, X8, X9, 0x4, LSL
	0x02621C04 ADD X0, X8, 0x138
	0x02621C08 LDP X8, X1, [X0]
	0x02621C0C MOV X0, X21
	0x02621C10 BLR X8
	0x02621C14 CBZ W0, 0x2621CEC
	0x02621C18 LDR X8, [X19 + 0x20]
	0x02621C1C LDR X0, [X20 + 0x50]
	0x02621C20 MOV X1, X21
	0x02621C24 LDR X8, [X8 + 0xC0]
	0x02621C28 LDR X2, [X8 + 0x98]
	0x02621C2C BL 0x21C19E4
	0x02621C30 LDR X8, [X19 + 0x20]
	0x02621C34 LDR X8, [X8 + 0xC0]
	0x02621C38 LDR X1, [X8 + 0xA8]
	0x02621C3C BL 0x21D522C
	0x02621C40 CBZ X0, 0x2621EB0
	0x02621C44 LDR X23, [X0 + 0x18]
	0x02621C48 MOV X22, X0
	0x02621C4C CMP W23, 0x1
	0x02621C50 B.LT 0x2621C90
	0x02621C54 MOV X24, X31
	0x02621C58 AND X8, X23, 0x0
	0x02621C5C ADD X25, X22, 0x20
	0x02621C60 CMP X24, W8, UXTW
	0x02621C64 B.CS 0x2621EAC
	0x02621C68 LDR X8, [X19 + 0x20]
	0x02621C6C LDRB W1, [X25, X24, LSL]
	0x02621C70 MOV X0, X20
	0x02621C74 LDR X8, [X8 + 0xC0]
	0x02621C78 LDR X2, [X8 + 0x58]
	0x02621C7C BL 0x26223B8
	0x02621C80 LDR W8, [X22 + 0x18]
	0x02621C84 ADD X24, X24, 0x1
	0x02621C88 CMP X24, W8, SXTW
	0x02621C8C B.LT 0x2621C60
	0x02621C90 LDR X8, [X19 + 0x20]
	0x02621C94 LDR X8, [X8 + 0xC0]
	0x02621C98 LDR X1, [X8 + 0xA0]
	0x02621C9C LDRB W8, [X1 + 0x135]
	0x02621CA0 TBNZ X8, 0x0, 0x2621CB0
	0x02621CA4 MOV X0, X1
	0x02621CA8 BL 0x1C5C684
	0x02621CAC MOV X1, X0
	0x02621CB0 LDR X8, [X21]
	0x02621CB4 LDRH W9, [X8 + 0x12E]
	0x02621CB8 CBZ X9, 0x2621CDC
	0x02621CBC LDR X10, [X8 + 0xB0]
	0x02621CC0 ADD X10, X10, 0x8
	0x02621CC4 LDUR X11, [X10 - 0x8]
	0x02621CC8 CMP X11, X1
	0x02621CCC B.EQ 0x2621D08
	0x02621CD0 SUBS X9, X9, 0x1
	0x02621CD4 ADD X10, X10, 0x10
	0x02621CD8 B.NE 0x2621CC4
	0x02621CDC MOV X0, X21
	0x02621CE0 MOV W2, W31
	0x02621CE4 BL 0x1C5C788
	0x02621CE8 B 0x2621D14
	0x02621CEC LDR X8, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], X29
	003 Move [X31+208], X30
	004 Move [X31+216], X25
	005 Move [X31+224], X24
	006 Move [X31+232], X23
	007 Move [X31+240], X22
	008 Move [X31+248], X21
	009 Move [X31+256], X20
	010 Move [X31+264], X19
	011 Move X23, 0x1DBA000
	012 Move W8, [X23+89]
	013 Move X19, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Add X21, X31, 112
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x1AD4000
	022 Move X0, [X0+1120]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+89], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+176], X31
	028 Move [X31+80], X31
	029 Move [X31+88], X31
	030 Move [X21+32], V0
	031 Move [X21+40], V0
	032 Move [X31+112], V0
	033 Move [X31+120], V0
	034 Move [X31+96], X31
	035 Compare X22, 0
	036 JumpIfEqual {203}
	037 Move X8, [X22]
	038 Move X0, X22
	039 Move X9, [X8+568]
	040 Move X1, [X8+576]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {204}
	046 Move X8, [X19+32]
	047 Move X23, [X20+80]
	048 Move X8, [X8+192]
	049 Move X0, [X8+8]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Call 0x1C17F10
	057 Move X8, [X19+32]
	058 Move X21, X0
	059 Move X8, [X8+192]
	060 Move X2, [X8+208]
	061 Move X1, X23
	062 Call HashSet`1<Boolean>..ctor, X0, X1
	063 Move X8, [X20]
	064 Move X1, [X8+816]
	065 Move X9, [X8+808]
	066 Move X0, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X23, X0
	069 Compare X0, 0
	070 JumpIfEqual {282}
	071 Move X8, [X19+32]
	072 Move X9, [X8+192]
	073 Move X8, [X23]
	074 Move X24, [X9+416]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X1, [X24+32]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X23
	087 Call 0x1C5D788
	088 Move W9, [X10]
	089 Add W9, W9, W2
	090 Add X8, X8, W9
	091 Add X0, X8, 312
	092 Move X0, [X0+8]
	093 Move X1, X24
	094 Call 0x1C17DF8
	095 Move X1, X0
	096 Move X8, [X1+8]
	097 Move X0, X23
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X8, [X22]
	100 Move X23, X0
	101 Move X1, [X8+832]
	102 Move X9, [X8+824]
	103 Add X8, X31, 8
	104 Move X0, X22
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X25, 0x1AD4000
	107 Move X25, [X25+1120]
	108 Add X0, X31, 112
	109 Add X1, X31, 8
	110 Move W2, 72
	111 Call 0x3EB2AC0
	112 Add X0, X31, 112
	113 Move X1, X31
	114 Call Enumerator.MoveNext, X0
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {155}
	119 Add X0, X31, 112
	120 Move X1, X31
	121 Call Enumerator.get_Current, X0
	122 Move X22, X0
	123 Move X0, [X25]
	124 Move X24, X1
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X22
	130 Move X1, X24
	131 Move X2, X31
	132 Call JSONNode.op_Implicit, X0
	133 Move X1, X0
	134 Compare X23, 0
	135 JumpIfEqual {201}
	136 Move X0, [X23+64]
	137 Move X8, [X23+24]
	138 Move X2, [X23+40]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare X21, 0
	141 JumpIfEqual {202}
	142 Move X8, [X19+32]
	143 Move X8, [X8+192]
	144 Move X2, [X8+328]
	145 And W22, W0, 1
	146 Move X0, X21
	147 Move W1, W22
	148 Call HashSet`1<Boolean>.Remove, X0, X1
	149 Move X8, [X19+32]
	150 Move X8, [X8+192]
	151 Move X2, [X8+80]
	152 Move X0, X20
	153 Move W1, W22
	154 Call 0x26204F8, X0, X1
	155 Compare X21, 0
	156 JumpIfEqual {283}
	157 Move X8, [X19+32]
	158 Move X8, [X8+192]
	159 Move X1, [X8+224]
	160 Add X8, X31, 8
	161 Move X0, X21
	162 Call HashSet`1<Boolean>.GetEnumerator, X0
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 Move X8, [X31+24]
	165 Move [X31+5], V0
	166 Move [X31+96], X8
	167 Move X8, [X19+32]
	168 Move X8, [X8+192]
	169 Move X1, [X8+264]
	170 Add X0, X31, 80
	171 Call Enumerator<Boolean>.MoveNext, X0
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {182}
	176 Move X8, [X19+32]
	177 Move W1, [X31+96]
	178 Move X8, [X8+192]
	179 Move X2, [X8+88]
	180 Move X0, X20
	181 Call 0x2620EE0, X0, X1
	182 Move X23, X31
	183 Move X8, [X19+32]
	184 Move X8, [X8+192]
	185 Move X1, [X8+272]
	186 Add X0, X31, 80
	187 Call Enumerator<Boolean>.Dispose, X0
	188 Compare X23, 0
	189 JumpIfNotEqual {284}
	190 Move X20, [X31+256]
	191 Move X19, [X31+264]
	192 Move X22, [X31+240]
	193 Move X21, [X31+248]
	194 Move X24, [X31+224]
	195 Move X23, [X31+232]
	196 Move X30, [X31+208]
	197 Move X25, [X31+216]
	198 Move X29, [X31+192]
	199 Add X31, X31, 272
	200 Return 
	201 Call 0x1C17F20
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Move X0, 0x1AD3000
	205 Move X0, [X0+2760]
	206 Call 0x1C17D08
	207 Move W1, 5
	208 Call 0x1C17D6C
	209 Move X21, X0
	210 Call 0x19913C0
	211 Move X0, 0x1AFD000
	212 Move X0, [X0+1104]
	213 Call 0x1C17D08
	214 Move X2, X0
	215 Move X0, X21
	216 Move X1, X31
	217 Call 0x1994444
	218 Move X0, X20
	219 Call 0x19913C0
	220 Move X20, [X20+24]
	221 Move X0, X21
	222 Call 0x19913C0
	223 Move W1, 1
	224 Move X0, X21
	225 Move X2, X20
	226 Call 0x1994444
	227 Move X0, X21
	228 Call 0x19913C0
	229 Move X0, 0x1AFD000
	230 Move X0, [X0+1048]
	231 Call 0x1C17D08
	232 Move X2, X0
	233 Move W1, 2
	234 Move X0, X21
	235 Call 0x1994444
	236 Move X8, [X19+32]
	237 Move X0, 0x1AD3000
	238 Move X8, [X8+192]
	239 Move X20, [X8+24]
	240 Move X0, [X0+1728]
	241 Call 0x1C17D08
	242 Call 0x19913D0
	243 Move X0, X20
	244 Move X1, X31
	245 Call Type.GetTypeFromHandle, X0
	246 Move X20, X0
	247 Call 0x19913C0
	248 Move X8, [X20]
	249 Move X0, X20
	250 Move X9, [X8+744]
	251 Move X1, [X8+752]
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X20, X0
	254 Move X0, X21
	255 Call 0x19913C0
	256 Move W1, 3
	257 Move X0, X21
	258 Move X2, X20
	259 Call 0x1994444
	260 Move X0, X21
	261 Call 0x19913C0
	262 Move X0, 0x1AD4000
	263 Move X0, [X0+1544]
	264 Call 0x1C17D08
	265 Move X2, X0
	266 Move W1, 4
	267 Move X0, X21
	268 Call 0x1994444
	269 Move X0, X21
	270 Move X1, X31
	271 Call String.Concat, X0
	272 Move X20, X0
	273 Move X0, 0x1AFC000
	274 Move X0, [X0+1632]
	275 Call 0x1C17D08
	276 Call 0x1C17F10
	277 Move X1, X20
	278 Move X2, X31
	279 Move X21, X0
	280 Call StateSerializationException..ctor, X0, X1
	281 Move X0, X21
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Move X0, X23
	285 Call 0x1C17F18
	286 Move X22, X1
	287 Move X21, X0
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X0, X21
	290 Call 0x3EB2AD0
	291 Move X23, [X0]
	292 Call 0x3EB2AE0
	293 Move X23, X31
	294 Move X22, X1
	295 Move X21, X0
	296 Move X8, [X19+32]
	297 Move X8, [X8+192]
	298 Move X1, [X8+272]
	299 Add X0, X31, 80
	300 Call Enumerator<Boolean>.Dispose, X0
	301 Compare X23, 0
	302 JumpIfEqual {307}
	303 Move X0, X23
	304 Call 0x1C17F18
	305 Move X22, X1
	306 Move X21, X0
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X0, X21
	309 Call 0x3EB2AD0
	310 Move X21, X0
	311 Move X0, 0x1AD3000
	312 Move X0, [X0+2000]
	313 Call 0x1C17D08
	314 Move X8, [X21]
	315 Move X1, [X8]
	316 Call 0x1C18270
	317 Move TEMP, X0
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfNotEqual {370}
	321 Move X21, [X21]
	322 Call 0x3EB2AE0
	323 Move X0, X20
	324 Call 0x19913C0
	325 Move X8, [X19+32]
	326 Move X0, 0x1AD3000
	327 Move X20, [X20+24]
	328 Move X8, [X8+192]
	329 Move X22, [X8+24]
	330 Move X0, [X0+1728]
	331 Call 0x1C17D08
	332 Call 0x19913D0
	333 Move X0, X22
	334 Move X1, X31
	335 Call Type.GetTypeFromHandle, X0
	336 Move X22, X0
	337 Call 0x19913C0
	338 Move X8, [X22]
	339 Move X0, X22
	340 Move X9, [X8+744]
	341 Move X1, [X8+752]
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Move X22, X0
	344 Move X0, 0x1AFD000
	345 Move X0, [X0+1056]
	346 Call 0x1C17D08
	347 Move X23, X0
	348 Move X0, 0x1AFD000
	349 Move X0, [X0+1048]
	350 Call 0x1C17D08
	351 Move X2, X0
	352 Move X0, X23
	353 Move X1, X20
	354 Move X3, X22
	355 Move X4, X31
	356 Call String.Concat, X0, X1, X2, X3
	357 Move X20, X0
	358 Move X0, 0x1AFC000
	359 Move X0, [X0+1632]
	360 Call 0x1C17D08
	361 Call 0x1C17F10
	362 Move X1, X20
	363 Move X2, X21
	364 Move X3, X31
	365 Move X22, X0
	366 Call StateSerializationException..ctor, X0, X1, X2
	367 Move X0, X22
	368 Move X1, X19
	369 Call 0x1C17DEC
	370 Move W0, 8
	371 Call 0x3EB2AF0
	372 Move X8, [X21]
	373 Move [X0], X8
	374 Move X1, 0x1894000
	375 Add X1, X1, 3672
	376 Move X2, X31
	377 Call 0x3EB2B00
	378 Move X21, X0
	379 Call 0x3EB2AE0
	380 Move X0, X21
	381 Call 0x1D2D690
	382 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x02621CF0 MOV X0, X20
	0x02621CF4 LDR X8, [X8 + 0xC0]
	0x02621CF8 LDR X1, [X8 + 0x90]
	0x02621CFC BL 0x2621F74
	0x02621D00 MOVZ W22, 0x1
	0x02621D04 B 0x2621E94
	0x02621D08 LDRSW X9, [X10]
	0x02621D0C ADD X8, X8, X9, 0x4, LSL
	0x02621D10 ADD X0, X8, 0x138
	0x02621D14 LDP X8, X1, [X0]
	0x02621D18 MOV X0, X21
	0x02621D1C BLR X8
	0x02621D20 CMP W23, 0x0
	0x02621D24 MOV X21, X0
	0x02621D28 CSET W22, NE
	0x02621D2C CBZ X0, 0x2621EB4
	0x02621D30 ADRP X23, 0x1AD2000
	0x02621D34 LDR X23, [X23 + 0xE18]
	0x02621D38 LDR X8, [X21]
	0x02621D3C LDR X1, [X23]
	0x02621D40 LDRH W9, [X8 + 0x12E]
	0x02621D44 CBZ X9, 0x2621D68
	0x02621D48 LDR X10, [X8 + 0xB0]
	0x02621D4C ADD X10, X10, 0x8
	0x02621D50 LDUR X11, [X10 - 0x8]
	0x02621D54 CMP X11, X1
	0x02621D58 B.EQ 0x2621D78
	0x02621D5C SUBS X9, X9, 0x1
	0x02621D60 ADD X10, X10, 0x10
	0x02621D64 B.NE 0x2621D50
	0x02621D68 MOV X0, X21
	0x02621D6C MOV W2, W31
	0x02621D70 BL 0x1C5C788
	0x02621D74 B 0x2621D84
	0x02621D78 LDRSW X9, [X10]
	0x02621D7C ADD X8, X8, X9, 0x4, LSL
	0x02621D80 ADD X0, X8, 0x138
	0x02621D84 LDP X8, X1, [X0]
	0x02621D88 MOV X0, X21
	0x02621D8C BLR X8
	0x02621D90 TBZ X0, 0x0, 0x2621E28
	0x02621D94 LDR X8, [X19 + 0x20]
	0x02621D98 LDR X8, [X8 + 0xC0]
	0x02621D9C LDR X1, [X8 + 0xC0]
	0x02621DA0 LDRB W8, [X1 + 0x135]
	0x02621DA4 TBNZ X8, 0x0, 0x2621DB4
	0x02621DA8 MOV X0, X1
	0x02621DAC BL 0x1C5C684
	0x02621DB0 MOV X1, X0
	0x02621DB4 LDR X8, [X21]
	0x02621DB8 LDRH W9, [X8 + 0x12E]
	0x02621DBC CBZ X9, 0x2621DE0
	0x02621DC0 LDR X10, [X8 + 0xB0]
	0x02621DC4 ADD X10, X10, 0x8
	0x02621DC8 LDUR X11, [X10 - 0x8]
	0x02621DCC CMP X11, X1
	0x02621DD0 B.EQ 0x2621DF0
	0x02621DD4 SUBS X9, X9, 0x1
	0x02621DD8 ADD X10, X10, 0x10
	0x02621DDC B.NE 0x2621DC8
	0x02621DE0 MOV X0, X21
	0x02621DE4 MOV W2, W31
	0x02621DE8 BL 0x1C5C788
	0x02621DEC B 0x2621DFC
	0x02621DF0 LDRSW X9, [X10]
	0x02621DF4 ADD X8, X8, X9, 0x4, LSL
	0x02621DF8 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1DBA000
	007 Move W8, [X21+90]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x1AFD000
	015 Move X0, [X0+1112]
	016 Call 0x1C17CF4
	017 Move X0, 0x1AFD000
	018 Move X0, [X0+1072]
	019 Call 0x1C17CF4
	020 Move X0, 0x1AD5000
	021 Move X0, [X0+928]
	022 Call 0x1C17CF4
	023 Move X0, 0x1AFD000
	024 Move X0, [X0+1120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+90], W8
	028 Compare X20, 0
	029 JumpIfEqual {84}
	030 Move X0, X20
	031 Move X1, X31
	032 Call StateObjectBase.get_isSensitiveData, X0
	033 Move W22, W0
	034 Move X0, X20
	035 Move X1, X31
	036 Call "il2cpp_vm_object_is_inst", X0
	037 Compare X0, 0
	038 JumpIfEqual {84}
	039 Move X8, [X0]
	040 Move X9, [X8+424]
	041 Move X1, [X8+432]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X21, X0
	044 Move TEMP, X22
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {60}
	048 Move X8, 0x1AFD000
	049 Move X8, [X8+1120]
	050 Move X0, X21
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X1, [X8]
	056 Move X2, X31
	057 Move X30, [X31+48]
	058 Call String.Concat, X0, X1
	059 Return X0
	060 Move X8, [X19+32]
	061 Move X9, 0x1AD5000
	062 Move X1, [X20+80]
	063 Move X8, [X8+192]
	064 Move X9, [X9+928]
	065 Move X2, [X8+440]
	066 Move X0, [X9]
	067 Call 0x226C4E8, X0, X1
	068 Move X8, 0x1AFD000
	069 Move X9, 0x1AFD000
	070 Move X8, [X8+1112]
	071 Move X9, [X9+1072]
	072 Move X2, X0
	073 Move X0, X21
	074 Move X1, [X8]
	075 Move X3, [X9]
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X4, X31
	081 Move X30, [X31+48]
	082 Call String.Concat, X0, X1, X2, X3
	083 Return X0
	084 Call 0x1C17F20

Method: System.Boolean TryFindChild(System.Object childObjectKey, out SpatialSys.ObservableState.IStateObject result)

Disassembly:
	0x02621DFC LDP X8, X1, [X0]
	0x02621E00 MOV X0, X21
	0x02621E04 BLR X8

ISIL:
	001 Move W0, W31
	002 Move [X2], X31
	003 Return X0

Method: System.Void Reset(System.Boolean recursively = True)

Disassembly:
	0x02621E08 MOV W1, W0
	0x02621E0C LDR X8, [X19 + 0x20]
	0x02621E10 LDR X8, [X8 + 0xC0]
	0x02621E14 LDR X2, [X8 + 0x50]

ISIL:
	001 Move X8, [X2+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+144]
	004 Call 0x2620A94, X0
	005 Return 

Method: System.Void CopyTo(SpatialSys.ObservableState.IStateObject other)

Disassembly:
	0x02621E18 MOV X0, X20
	0x02621E1C BL 0x26219D8
	0x02621E20 ORR W22, W22, W0, 0x0
	0x02621E24 B 0x2621D38
	0x02621E28 MOV X19, X31
	0x02621E2C CBZ X21, 0x2621E90
	0x02621E30 ADRP X10, 0x1AD2000
	0x02621E34 LDR X8, [X21]
	0x02621E38 LDR X10, [X10 + 0xE00]
	0x02621E3C LDRH W9, [X8 + 0x12E]
	0x02621E40 LDR X1, [X10]
	0x02621E44 CBZ X9, 0x2621E68
	0x02621E48 LDR X10, [X8 + 0xB0]
	0x02621E4C ADD X10, X10, 0x8
	0x02621E50 LDUR X11, [X10 - 0x8]
	0x02621E54 CMP X11, X1
	0x02621E58 B.EQ 0x2621E78
	0x02621E5C SUBS X9, X9, 0x1
	0x02621E60 ADD X10, X10, 0x10
	0x02621E64 B.NE 0x2621E50
	0x02621E68 MOV X0, X21
	0x02621E6C MOV W2, W31
	0x02621E70 BL 0x1C5C788
	0x02621E74 B 0x2621E84
	0x02621E78 LDRSW X9, [X10]
	0x02621E7C ADD X8, X8, X9, 0x4, LSL
	0x02621E80 ADD X0, X8, 0x138
	0x02621E84 LDP X8, X1, [X0]
	0x02621E88 MOV X0, X21
	0x02621E8C BLR X8
	0x02621E90 CBNZ X19, 0x2621EB8
	0x02621E94 AND W0, W22, 0x1
	0x02621E98 LDP X20, X19, [X31 + 0x30]
	0x02621E9C LDP X22, X21, [X31 + 0x20]
	0x02621EA0 LDP X24, X23, [X31 + 0x10]
	0x02621EA4 LDP X30, X25, [X31], #0x40
	0x02621EA8 RET
	0x02621EAC BL 0x1C16F28
	0x02621EB0 BL 0x1C16F20
	0x02621EB4 BL 0x1C16F20
	0x02621EB8 MOV X0, X19
	0x02621EBC BL 0x1C16F18
	0x02621EC0 B 0x2621ECC
	0x02621EC4 B 0x2621ECC
	0x02621EC8 B 0x2621ECC
	0x02621ECC MOV X20, X0
	0x02621ED0 CMP W1, 0x1
	0x02621ED4 B.NE 0x2621EEC
	0x02621ED8 MOV X0, X20
	0x02621EDC BL 0x3EB1AD0
	0x02621EE0 LDR X19, [X0]
	0x02621EE4 BL 0x3EB1AE0
	0x02621EE8 B 0x2621E2C
	0x02621EEC MOV X19, X31
	0x02621EF0 B 0x2621EF8
	0x02621EF4 MOV X20, X0
	0x02621EF8 CBZ X21, 0x2621F5C
	0x02621EFC ADRP X10, 0x1AD2000
	0x02621F00 LDR X8, [X21]
	0x02621F04 LDR X10, [X10 + 0xE00]
	0x02621F08 LDRH W9, [X8 + 0x12E]
	0x02621F0C LDR X1, [X10]
	0x02621F10 CBZ X9, 0x2621F34
	0x02621F14 LDR X10, [X8 + 0xB0]
	0x02621F18 ADD X10, X10, 0x8
	0x02621F1C LDUR X11, [X10 - 0x8]
	0x02621F20 CMP X11, X1
	0x02621F24 B.EQ 0x2621F44
	0x02621F28 SUBS X9, X9, 0x1
	0x02621F2C ADD X10, X10, 0x10
	0x02621F30 B.NE 0x2621F1C
	0x02621F34 MOV X0, X21
	0x02621F38 MOV W2, W31
	0x02621F3C BL 0x1C5C788
	0x02621F40 B 0x2621F50
	0x02621F44 LDRSW X9, [X10]
	0x02621F48 ADD X8, X8, X9, 0x4, LSL
	0x02621F4C ADD X0, X8, 0x138
	0x02621F50 LDP X8, X1, [X0]
	0x02621F54 MOV X0, X21
	0x02621F58 BLR X8
	0x02621F5C CBNZ X19, 0x2621F68
	0x02621F60 MOV X0, X20
	0x02621F64 BL 0x1D2C690
	0x02621F68 MOV X0, X19
	0x02621F6C BL 0x1C16F18
	0x02621F70 BL 0x1990590
	0x02621F74 SUB X31, X31, 0x80
	0x02621F78 STP X30, X25, [X31 + 0x40]
	0x02621F7C STP X24, X23, [X31 + 0x50]
	0x02621F80 STP X22, X21, [X31 + 0x60]
	0x02621F84 STP X20, X19, [X31 + 0x70]
	0x02621F88 ADRP X21, 0x1DB9000
	0x02621F8C LDRB W8, [X21 + 0x63]
	0x02621F90 MOV X19, X1
	0x02621F94 MOV X20, X0
	0x02621F98 TBNZ X8, 0x0, 0x2621FB0
	0x02621F9C ADRP X0, 0x1AFC000
	0x02621FA0 LDR X0, [X0 + 0x318]
	0x02621FA4 BL 0x1C16CF4
	0x02621FA8 MOVZ W8, 0x1
	0x02621FAC STRB W8, [X21 + 0x63]
	0x02621FB0 STP X31, X31, [X31 + 0x20]
	0x02621FB4 STR X31, [X31 + 0x30]
	0x02621FB8 LDR X22, [X20 + 0x50]
	0x02621FBC CBZ X22, 0x26221A4
	0x02621FC0 LDR X8, [X19 + 0x20]
	0x02621FC4 LDR W23, [X22 + 0x20]
	0x02621FC8 LDR X8, [X8 + 0xC0]
	0x02621FCC LDR X0, [X8 + 0x8]
	0x02621FD0 LDRB W8, [X0 + 0x135]
	0x02621FD4 TBNZ X8, 0x0, 0x2621FDC
	0x02621FD8 BL 0x1C5C684
	0x02621FDC BL 0x1C16F10
	0x02621FE0 LDR X8, [X19 + 0x20]
	0x02621FE4 MOV X1, X22
	0x02621FE8 MOV X21, X0
	0x02621FEC LDR X8, [X8 + 0xC0]
	0x02621FF0 LDR X2, [X8 + 0xD0]
	0x02621FF4 BL 0x2D8C150
	0x02621FF8 LDR X0, [X20 + 0x50]
	0x02621FFC CBZ X0, 0x26221A4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move [X31+32], X31
	010 Move [X31+40], X31
	011 Move [X31+48], X31
	012 Move X8, [X2+32]
	013 Move X20, X1
	014 Move X19, X2
	015 Move X21, X0
	016 Move X8, [X8+192]
	017 Move X1, [X8]
	018 Move W8, [X1+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X1
	024 Call 0x1C5D684
	025 Move X1, X0
	026 Compare X20, 0
	027 JumpIfEqual {30}
	028 Move X8, [X20]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X19+32]
	031 Move X1, [X21+80]
	032 Move X0, X20
	033 Move X8, [X8+192]
	034 Move X2, [X8+152]
	035 Call 0x21C2970, X0, X1
	036 Move X8, [X19+32]
	037 Move X8, [X8+192]
	038 Move X1, [X8+168]
	039 Call Enumerable.ToArray, X0
	040 Compare X0, 0
	041 JumpIfEqual {107}
	042 Move X8, [X0+24]
	043 Move X22, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X23, X31
	046 And X8, X8, 0
	047 Add X24, X22, 32
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X20, 0
	050 JumpIfEqual {107}
	051 Move X8, [X19+32]
	052 Move W1, [X24]
	053 Move X0, X20
	054 Move X8, [X8+192]
	055 Move X2, [X8+88]
	056 Call 0x2620EE0, X0, X1
	057 Move W8, [X22+24]
	058 Add X23, X23, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, [X21+80]
	061 Compare X0, 0
	062 JumpIfEqual {107}
	063 Move X8, [X19+32]
	064 Move X8, [X8+192]
	065 Move X1, [X8+224]
	066 Add X8, X31, 8
	067 Call HashSet`1<Boolean>.GetEnumerator, X0
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move X8, [X31+24]
	070 Move [X31+2], V0
	071 Move [X31+48], X8
	072 Move X8, [X19+32]
	073 Move X8, [X8+192]
	074 Move X1, [X8+264]
	075 Add X0, X31, 32
	076 Call Enumerator<Boolean>.MoveNext, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {89}
	081 Compare X20, 0
	082 JumpIfEqual {106}
	083 Move X8, [X19+32]
	084 Move W1, [X31+48]
	085 Move X8, [X8+192]
	086 Move X2, [X8+80]
	087 Move X0, X20
	088 Call 0x26204F8, X0, X1
	089 Move X20, X31
	090 Move X8, [X19+32]
	091 Add X0, X31, 32
	092 Move X8, [X8+192]
	093 Move X1, [X8+272]
	094 Call Enumerator<Boolean>.Dispose, X0
	095 Compare X20, 0
	096 JumpIfNotEqual {109}
	097 Move X20, [X31+112]
	098 Move X19, [X31+120]
	099 Move X22, [X31+96]
	100 Move X21, [X31+104]
	101 Move X24, [X31+80]
	102 Move X23, [X31+88]
	103 Move X30, [X31+64]
	104 Add X31, X31, 128
	105 Return 
	106 Call 0x1C17F20
	107 Call 0x1C17F20
	108 Call 0x1C17F28
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Move X0, X20
	112 Call 0x1C181E0
	113 Move X21, X0
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, X21
	116 Call 0x3EB2AD0
	117 Move X20, [X0]
	118 Call 0x3EB2AE0
	119 Move X20, X31
	120 Move X21, X0
	121 Move X8, [X19+32]
	122 Move X8, [X8+192]
	123 Move X1, [X8+272]
	124 Add X0, X31, 32
	125 Call Enumerator<Boolean>.Dispose, X0
	126 Compare X20, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X21
	129 Call 0x1D2D690
	130 Move X0, X20
	131 Call 0x1C17F18
	132 Call 0x1991590

Method: System.Void Add(System.Object value)

Disassembly:
	0x02622000 LDR X8, [X19 + 0x20]
	0x02622004 CMP W23, 0x0
	0x02622008 CSET W22, GT
	0x0262200C LDR X8, [X8 + 0xC0]
	0x02622010 LDR X1, [X8 + 0xD8]
	0x02622014 BL 0x2D8C6B4
	0x02622018 LDRB W8, [X20 + 0x20]
	0x0262201C ORR W8, W8, W22, 0x0
	0x02622020 STRB W8, [X20 + 0x20]
	0x02622024 CBZ X21, 0x26221A4
	0x02622028 LDR X8, [X19 + 0x20]
	0x0262202C ADRP X25, 0x1AFB000
	0x02622030 MOV X0, X21
	0x02622034 LDR X8, [X8 + 0xC0]
	0x02622038 LDR X1, [X8 + 0xE0]
	0x0262203C LDR X25, [X25 + 0x318]
	0x02622040 ADD X8, X31, 0x8
	0x02622044 BL 0x2D8CBA8
	0x02622048 LDUR V0, [X31 + 0x8]
	0x0262204C LDR X8, [X31 + 0x18]
	0x02622050 STR V0, [X31 + 0x2]
	0x02622054 STR X8, [X31 + 0x30]
	0x02622058 LDR X8, [X19 + 0x20]
	0x0262205C LDR X8, [X8 + 0xC0]
	0x02622060 LDR X1, [X8 + 0x108]
	0x02622064 ADD X0, X31, 0x20
	0x02622068 BL 0x2BB6EE4
	0x0262206C TBZ X0, 0x0, 0x2622168
	0x02622070 LDR X22, [X20 + 0x30]
	0x02622074 CBZ X22, 0x262219C
	0x02622078 LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+72]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Compare X20, 0
	020 JumpIfEqual {38}
	021 Move X8, [X20]
	022 Move X9, [X1+64]
	023 Move X0, X20
	024 Move X8, [X8+64]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Call 0x1C17E08
	027 Move X8, [X19+32]
	028 Move W1, [X0]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X0, X21
	032 Move X8, [X8+192]
	033 Move X2, [X8+80]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call 0x26204F8, X0, X1
	037 Return 
	038 Call 0x1C17F20
	039 Call 0x1C181E0

Method: System.Boolean Contains(System.Object value)

Disassembly:
	0x0262207C LDRB W21, [X31 + 0x30]
	0x02622080 LDR X1, [X25]
	0x02622084 LDRH W9, [X8 + 0x12E]
	0x02622088 CBZ X9, 0x26220AC
	0x0262208C LDR X10, [X8 + 0xB0]
	0x02622090 ADD X10, X10, 0x8
	0x02622094 LDUR X11, [X10 - 0x8]
	0x02622098 CMP X11, X1
	0x0262209C B.EQ 0x26220BC
	0x026220A0 SUBS X9, X9, 0x1
	0x026220A4 ADD X10, X10, 0x10
	0x026220A8 B.NE 0x2622094
	0x026220AC MOV X0, X22
	0x026220B0 MOV W2, W31
	0x026220B4 BL 0x1C5C788
	0x026220B8 B 0x26220C8
	0x026220BC LDRSW X9, [X10]
	0x026220C0 ADD X8, X8, X9, 0x4, LSL
	0x026220C4 ADD X0, X8, 0x138
	0x026220C8 LDP X8, X1, [X0]
	0x026220CC MOV X0, X22
	0x026220D0 BLR X8
	0x026220D4 MOV X22, X0
	0x026220D8 CBZ X0, 0x26221A0
	0x026220DC LDR X8, [X19 + 0x20]
	0x026220E0 LDR W23, [X20 + 0x48]
	0x026220E4 LDR X9, [X8 + 0xC0]
	0x026220E8 LDR X8, [X22]
	0x026220EC LDR X24, [X9 + 0x100]
	0x026220F0 LDRH W9, [X8 + 0x12E]
	0x026220F4 LDR X1, [X24 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+72]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Compare X20, 0
	020 JumpIfEqual {38}
	021 Move X8, [X20]
	022 Move X9, [X1+64]
	023 Move X0, X20
	024 Move X8, [X8+64]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Call 0x1C17E08
	027 Move X8, [X19+32]
	028 Move W1, [X0]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X0, X21
	032 Move X8, [X8+192]
	033 Move X2, [X8+448]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call 0x2620D3C, X0, X1
	037 Return X0
	038 Call 0x1C17F20
	039 Call 0x1C181E0

Method: System.Void Remove(System.Object value)

Disassembly:
	0x026220F8 LDRH W2, [X24 + 0x50]
	0x026220FC CBZ X9, 0x2622120
	0x02622100 LDR X10, [X8 + 0xB0]
	0x02622104 ADD X10, X10, 0x8
	0x02622108 LDUR X11, [X10 - 0x8]
	0x0262210C CMP X11, X1
	0x02622110 B.EQ 0x262212C
	0x02622114 SUBS X9, X9, 0x1
	0x02622118 ADD X10, X10, 0x10
	0x0262211C B.NE 0x2622108
	0x02622120 MOV X0, X22
	0x02622124 BL 0x1C5C788
	0x02622128 B 0x262213C
	0x0262212C LDR W9, [X10]
	0x02622130 ADD W9, W9, W2
	0x02622134 ADD X8, X8, W9, 0x4, SXTW
	0x02622138 ADD X0, X8, 0x138
	0x0262213C LDR X0, [X0 + 0x8]
	0x02622140 MOV X1, X24
	0x02622144 BL 0x1C16DF8
	0x02622148 LDR X8, [X0 + 0x8]
	0x0262214C MOV X4, X0
	0x02622150 MOV X0, X22
	0x02622154 MOV X1, X20
	0x02622158 MOV W2, W21
	0x0262215C MOV W3, W23
	0x02622160 BLR X8
	0x02622164 B 0x2622058
	0x02622168 MOV X21, X31
	0x0262216C LDR X8, [X19 + 0x20]
	0x02622170 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+72]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Compare X20, 0
	020 JumpIfEqual {38}
	021 Move X8, [X20]
	022 Move X9, [X1+64]
	023 Move X0, X20
	024 Move X8, [X8+64]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Call 0x1C17E08
	027 Move X8, [X19+32]
	028 Move W1, [X0]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X0, X21
	032 Move X8, [X8+192]
	033 Move X2, [X8+88]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call 0x2620EE0, X0, X1
	037 Return 
	038 Call 0x1C17F20
	039 Call 0x1C181E0

Method: System.String ValuesToString()

Disassembly:
	0x02622174 LDR X8, [X8 + 0xC0]
	0x02622178 LDR X1, [X8 + 0x110]
	0x0262217C BL 0x2BB6EE0
	0x02622180 CBNZ X21, 0x26221A8
	0x02622184 LDP X20, X19, [X31 + 0x70]
	0x02622188 LDP X22, X21, [X31 + 0x60]
	0x0262218C LDP X24, X23, [X31 + 0x50]
	0x02622190 LDP X30, X25, [X31 + 0x40]
	0x02622194 ADD X31, X31, 0x80
	0x02622198 RET
	0x0262219C BL 0x1C16F20
	0x026221A0 BL 0x1C16F20
	0x026221A4 BL 0x1C16F20
	0x026221A8 MOV X0, X21
	0x026221AC BL 0x1C16F18
	0x026221B0 B 0x26221C0
	0x026221B4 B 0x26221C0
	0x026221B8 B 0x26221C0
	0x026221BC B 0x26221C0
	0x026221C0 MOV X20, X0
	0x026221C4 CMP W1, 0x1
	0x026221C8 B.NE 0x26221E0
	0x026221CC MOV X0, X20
	0x026221D0 BL 0x3EB1AD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1DB9000
	007 Move X21, 0x1AD4000
	008 Move W8, [X22+91]
	009 Move X21, [X21+928]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1AD4000
	017 Move X0, [X0+928]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+91], W8
	021 Move X8, [X20+32]
	022 Move X1, [X19+80]
	023 Move X0, [X21]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X8, [X8+192]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X2, [X8+440]
	030 Move X30, [X31+48]
	031 Call 0x226C4E8, X0, X1
	032 Return X0

