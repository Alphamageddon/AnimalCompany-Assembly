Type: SpatialSys.ObservableState.StateObservationContext/<>c

Method: System.Void .cctor()

Disassembly:
	0x035C9ECC BL 0x1C16CF4
	0x035C9ED0 ADRP X0, 0xB6F000
	0x035C9ED4 LDR X0, [X0 + 0x3E0]
	0x035C9ED8 BL 0x1C16CF4
	0x035C9EDC ADRP X0, 0xB6F000
	0x035C9EE0 LDR X0, [X0 + 0x3E8]
	0x035C9EE4 BL 0x1C16CF4
	0x035C9EE8 ADRP X0, 0xB6F000
	0x035C9EEC LDR X0, [X0 + 0x3F0]
	0x035C9EF0 BL 0x1C16CF4
	0x035C9EF4 ADRP X0, 0xB6F000
	0x035C9EF8 LDR X0, [X0 + 0x3F8]
	0x035C9EFC BL 0x1C16CF4
	0x035C9F00 ADRP X0, 0xB6F000
	0x035C9F04 LDR X0, [X0 + 0x400]
	0x035C9F08 BL 0x1C16CF4
	0x035C9F0C ADRP X0, 0xB6F000
	0x035C9F10 LDR X0, [X0 + 0x408]
	0x035C9F14 BL 0x1C16CF4
	0x035C9F18 ADRP X0, 0xB6F000
	0x035C9F1C LDR X0, [X0 + 0x410]
	0x035C9F20 BL 0x1C16CF4
	0x035C9F24 ADRP X0, 0xB6F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE18000
	005 Move X20, 0xB6F000
	006 Move W8, [X19+453]
	007 Move X20, [X20+3920]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB6F000
	013 Move X0, [X0+3920]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+453], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x035C9F28 LDR X0, [X0 + 0x418]
	0x035C9F2C BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <RegisterObserver>b__30_0(SpatialSys.ObservableState.IStateObject s)

Disassembly:
	0x035C9F30 ADRP X0, 0xB6F000
	0x035C9F34 LDR X0, [X0 + 0x420]
	0x035C9F38 BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.String <RegisterObserver>b__30_1(SpatialSys.ObservableState.IStateObject s)

Disassembly:
	0x035C9F3C ADRP X0, 0xB6F000
	0x035C9F40 LDR X0, [X0 + 0x428]
	0x035C9F44 BL 0x1C16CF4
	0x035C9F48 ADRP X0, 0xB6F000
	0x035C9F4C LDR X0, [X0 + 0x430]
	0x035C9F50 BL 0x1C16CF4
	0x035C9F54 ADRP X0, 0xB6F000
	0x035C9F58 LDR X0, [X0 + 0x438]
	0x035C9F5C BL 0x1C16CF4
	0x035C9F60 ADRP X0, 0xB6F000
	0x035C9F64 LDR X0, [X0 + 0x440]
	0x035C9F68 BL 0x1C16CF4
	0x035C9F6C ADRP X0, 0xB6F000
	0x035C9F70 LDR X0, [X0 + 0x448]
	0x035C9F74 BL 0x1C16CF4
	0x035C9F78 ADRP X0, 0xB6F000
	0x035C9F7C LDR X0, [X0 + 0x450]
	0x035C9F80 BL 0x1C16CF4
	0x035C9F84 ADRP X0, 0xB6F000
	0x035C9F88 LDR X0, [X0 + 0x458]
	0x035C9F8C BL 0x1C16CF4
	0x035C9F90 ADRP X0, 0xB6F000
	0x035C9F94 LDR X0, [X0 + 0x460]
	0x035C9F98 BL 0x1C16CF4
	0x035C9F9C ADRP X0, 0xB6F000
	0x035C9FA0 LDR X0, [X0 + 0x468]
	0x035C9FA4 BL 0x1C16CF4
	0x035C9FA8 ADRP X0, 0xB6F000
	0x035C9FAC LDR X0, [X0 + 0x470]
	0x035C9FB0 BL 0x1C16CF4
	0x035C9FB4 ADRP X0, 0xB6F000
	0x035C9FB8 LDR X0, [X0 + 0x478]
	0x035C9FBC BL 0x1C16CF4
	0x035C9FC0 ADRP X0, 0xB6F000
	0x035C9FC4 LDR X0, [X0 + 0x480]
	0x035C9FC8 BL 0x1C16CF4
	0x035C9FCC ADRP X0, 0xB6F000
	0x035C9FD0 LDR X0, [X0 + 0x488]
	0x035C9FD4 BL 0x1C16CF4
	0x035C9FD8 ADRP X0, 0xB6F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE18000
	005 Move W8, [X20+454]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB2C000
	012 Move X0, [X0+432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+454], W8
	016 Compare X19, 0
	017 JumpIfEqual {45}
	018 Move X10, 0xB2C000
	019 Move X8, [X19]
	020 Move X10, [X10+432]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 1
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 1
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Int64 <RegisterObserver>b__30_2(SpatialSys.ObservableState.StateObservationContext/ObserverData o)

Disassembly:
	0x035C9FDC LDR X0, [X0 + 0x490]
	0x035C9FE0 BL 0x1C16CF4
	0x035C9FE4 ADRP X0, 0xB6F000
	0x035C9FE8 LDR X0, [X0 + 0x498]
	0x035C9FEC BL 0x1C16CF4
	0x035C9FF0 ADRP X0, 0xB6F000

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move X0, [X1+32]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: System.Boolean <RegisterObserver>b__30_3(SpatialSys.ObservableState.IStateObject s)

Disassembly:
	0x035C9FF4 LDR X0, [X0 + 0x4A0]
	0x035C9FF8 BL 0x1C16CF4
	0x035C9FFC ADRP X0, 0xB6F000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.String <RegisterObserver>b__30_4(SpatialSys.ObservableState.IStateObject s)

Disassembly:
	0x035CA000 LDR X0, [X0 + 0x4A8]
	0x035CA004 BL 0x1C16CF4
	0x035CA008 ADRP X0, 0xB6E000
	0x035CA00C LDR X0, [X0 + 0x4B0]
	0x035CA010 BL 0x1C16CF4
	0x035CA014 ADRP X0, 0xB6E000
	0x035CA018 LDR X0, [X0 + 0x4B8]
	0x035CA01C BL 0x1C16CF4
	0x035CA020 ADRP X0, 0xB6E000
	0x035CA024 LDR X0, [X0 + 0x4C0]
	0x035CA028 BL 0x1C16CF4
	0x035CA02C ADRP X0, 0xB6E000
	0x035CA030 LDR X0, [X0 + 0x4C8]
	0x035CA034 BL 0x1C16CF4
	0x035CA038 ADRP X0, 0xB6E000
	0x035CA03C LDR X0, [X0 + 0x4D0]
	0x035CA040 BL 0x1C16CF4
	0x035CA044 ADRP X0, 0xB6E000
	0x035CA048 LDR X0, [X0 + 0x4D8]
	0x035CA04C BL 0x1C16CF4
	0x035CA050 ADRP X0, 0xB6E000
	0x035CA054 LDR X0, [X0 + 0x4E0]
	0x035CA058 BL 0x1C16CF4
	0x035CA05C ADRP X0, 0xB6E000
	0x035CA060 LDR X0, [X0 + 0x4E8]
	0x035CA064 BL 0x1C16CF4
	0x035CA068 ADRP X0, 0xB6E000
	0x035CA06C LDR X0, [X0 + 0x4F0]
	0x035CA070 BL 0x1C16CF4
	0x035CA074 ADRP X0, 0xB6E000
	0x035CA078 LDR X0, [X0 + 0x150]
	0x035CA07C BL 0x1C16CF4
	0x035CA080 ADRP X0, 0xB6E000
	0x035CA084 LDR X0, [X0 + 0x158]
	0x035CA088 BL 0x1C16CF4
	0x035CA08C MOVZ W8, 0x1
	0x035CA090 STRB W8, [X20 + 0x1D2]
	0x035CA094 LDR X0, [X21]
	0x035CA098 BL 0x1C16F10
	0x035CA09C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE17000
	005 Move W8, [X20+455]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB2B000
	012 Move X0, [X0+432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+455], W8
	016 Compare X19, 0
	017 JumpIfEqual {45}
	018 Move X10, 0xB2B000
	019 Move X8, [X19]
	020 Move X10, [X10+432]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 1
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 1
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.String <NotifyObserversAndReset>b__49_0(SpatialSys.ObservableState.IStateObject s)

Disassembly:
	0x035CA0A0 MOV X25, X0
	0x035CA0A4 BL 0x33BDD8C
	0x035CA0A8 LDR X0, [X24]
	0x035CA0AC LDR W8, [X0 + 0xE0]
	0x035CA0B0 CBNZ W8, 0x35CA0BC
	0x035CA0B4 BL 0x1C16DFC
	0x035CA0B8 LDR X0, [X24]
	0x035CA0BC LDR X8, [X0 + 0xB8]
	0x035CA0C0 LDR X21, [X8 + 0x8]
	0x035CA0C4 CBNZ X21, 0x35CA118
	0x035CA0C8 LDR W8, [X0 + 0xE0]
	0x035CA0CC CBNZ W8, 0x35CA0D8
	0x035CA0D0 BL 0x1C16DFC
	0x035CA0D4 LDR X0, [X24]
	0x035CA0D8 ADRP X9, 0xB6E000
	0x035CA0DC LDR X8, [X0 + 0xB8]
	0x035CA0E0 LDR X9, [X9 + 0x190]
	0x035CA0E4 LDR X22, [X8]
	0x035CA0E8 LDR X0, [X9]
	0x035CA0EC BL 0x1C16F10
	0x035CA0F0 ADRP X8, 0xB6E000
	0x035CA0F4 LDR X8, [X8 + 0x388]
	0x035CA0F8 MOV X1, X22
	0x035CA0FC MOV X3, X31
	0x035CA100 MOV X21, X0
	0x035CA104 LDR X2, [X8]
	0x035CA108 BL 0x2D30578
	0x035CA10C LDR X0, [X24]
	0x035CA110 LDR X8, [X0 + 0xB8]
	0x035CA114 STR X21, [X8 + 0x8]
	0x035CA118 LDR W8, [X0 + 0xE0]
	0x035CA11C CBNZ W8, 0x35CA128
	0x035CA120 BL 0x1C16DFC
	0x035CA124 LDR X0, [X24]
	0x035CA128 LDR X8, [X0 + 0xB8]
	0x035CA12C LDR X22, [X8 + 0x10]
	0x035CA130 CBNZ X22, 0x35CA184
	0x035CA134 LDR W8, [X0 + 0xE0]
	0x035CA138 CBNZ W8, 0x35CA144
	0x035CA13C BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE17000
	005 Move W8, [X20+456]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB2B000
	012 Move X0, [X0+432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+456], W8
	016 Compare X19, 0
	017 JumpIfEqual {45}
	018 Move X10, 0xB2B000
	019 Move X8, [X19]
	020 Move X10, [X10+432]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 1
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 1
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

