Type: SpatialSys.ObservableState.TypeScriptInterfaceGenerator

Method: System.Void Generate(System.String fileIntro, System.String outputDirectory, System.String typesFilename, System.String keyPathsFilename, System.String emptyStateFilename, System.Type[] types, SpatialSys.ObservableState.IStateObject emptyState)

Disassembly:
	0x035D5DB4 TBZ X0, 0x0, 0x35D5E18
	0x035D5DB8 LDR X0, [X31 + 0x48]
	0x035D5DBC CBZ X0, 0x35D62C0
	0x035D5DC0 ADRP X9, 0xB28000
	0x035D5DC4 LDR X1, [X31 + 0xD0]
	0x035D5DC8 LDR W10, [X0 + 0x1C]
	0x035D5DCC LDR X8, [X0 + 0x10]
	0x035D5DD0 LDR X9, [X9 + 0x938]
	0x035D5DD4 ADD W10, W10, 0x1
	0x035D5DD8 LDR X9, [X9]
	0x035D5DDC STR W10, [X0 + 0x1C]
	0x035D5DE0 CBZ X8, 0x35D62C0
	0x035D5DE4 LDRSW X10, [X0 + 0x18]
	0x035D5DE8 LDR W11, [X8 + 0x18]
	0x035D5DEC CMP W10, W11
	0x035D5DF0 B.CS 0x35D5E08
	0x035D5DF4 ADD W9, W10, 0x1
	0x035D5DF8 ADD X8, X8, X10, 0x3, LSL
	0x035D5DFC STR W9, [X0 + 0x18]
	0x035D5E00 STR X1, [X8 + 0x20]
	0x035D5E04 B 0x35D5E18
	0x035D5E08 LDR X8, [X9 + 0x20]
	0x035D5E0C LDR X8, [X8 + 0xC0]
	0x035D5E10 LDR X2, [X8 + 0x70]
	0x035D5E14 BL 0x301BF90
	0x035D5E18 ADRP X8, 0xB1E000
	0x035D5E1C LDR X8, [X8 + 0x6C0]
	0x035D5E20 LDR X23, [X31 + 0xD0]
	0x035D5E24 LDR X0, [X8]
	0x035D5E28 LDR W8, [X0 + 0xE0]
	0x035D5E2C CBNZ W8, 0x35D5E34
	0x035D5E30 BL 0x1C16DFC
	0x035D5E34 MOV X0, X23
	0x035D5E38 MOV X1, X31
	0x035D5E3C MOV X2, X31
	0x035D5E40 BL 0x3395F0C
	0x035D5E44 ADRP X23, 0xB63000
	0x035D5E48 LDR X23, [X23 + 0x670]
	0x035D5E4C TBZ X0, 0x0, 0x35D5E7C
	0x035D5E50 LDR X8, [X25]
	0x035D5E54 MOV X0, X25
	0x035D5E58 LDP X9, X1, [X8 + 0x1A8]
	0x035D5E5C BLR X9
	0x035D5E60 MOV X1, X0
	0x035D5E64 LDR X0, [X31 + 0x58]
	0x035D5E68 CBZ X0, 0x35D62C0
	0x035D5E6C ADRP X8, 0xB1F000
	0x035D5E70 LDR X8, [X8 + 0xC20]
	0x035D5E74 LDR X2, [X8]
	0x035D5E78 BL 0x2DBEF30
	0x035D5E7C LDR W8, [X31 + 0x6C]
	0x035D5E80 TBNZ X8, 0x0, 0x35D5EEC
	0x035D5E84 LDR X0, [X31 + 0x60]
	0x035D5E88 CBZ X0, 0x35D62C0
	0x035D5E8C ADRP X9, 0xB1F000
	0x035D5E90 LDR W10, [X0 + 0x1C]
	0x035D5E94 LDR X8, [X0 + 0x10]
	0x035D5E98 LDR X9, [X9 + 0x1B8]
	0x035D5E9C ADD W10, W10, 0x1
	0x035D5EA0 LDR X9, [X9]
	0x035D5EA4 STR W10, [X0 + 0x1C]
	0x035D5EA8 CBZ X8, 0x35D62C0
	0x035D5EAC LDRSW X10, [X0 + 0x18]
	0x035D5EB0 LDR W11, [X8 + 0x18]
	0x035D5EB4 CMP W10, W11
	0x035D5EB8 B.CS 0x35D5ED8
	0x035D5EBC ADD W9, W10, 0x1
	0x035D5EC0 STR W9, [X0 + 0x18]
	0x035D5EC4 LDR X9, [X31 + 0x20]
	0x035D5EC8 ADD X8, X8, X10, 0x3, LSL
	0x035D5ECC STR W31, [X31 + 0x38]
	0x035D5ED0 STR X9, [X8 + 0x20]
	0x035D5ED4 B 0x35D56B4
	0x035D5ED8 LDR X8, [X9 + 0x20]
	0x035D5EDC LDR X1, [X31 + 0x20]
	0x035D5EE0 LDR X8, [X8 + 0xC0]
	0x035D5EE4 LDR X2, [X8 + 0x70]
	0x035D5EE8 BL 0x301BF90
	0x035D5EEC STR W31, [X31 + 0x38]
	0x035D5EF0 B 0x35D56B4
	0x035D5EF4 LDR X8, [X9 + 0x20]
	0x035D5EF8 LDR X1, [X31 + 0x20]
	0x035D5EFC LDR X8, [X8 + 0xC0]
	0x035D5F00 LDR X2, [X8 + 0x70]
	0x035D5F04 BL 0x301BF90
	0x035D5F08 STR W31, [X31 + 0x38]
	0x035D5F0C B 0x35D56B8
	0x035D5F10 LDR X24, [X31 + 0x40]
	0x035D5F14 LDR X26, [X31 + 0x10]
	0x035D5F18 LDR W8, [X31 + 0x38]
	0x035D5F1C TBZ X8, 0x0, 0x35D6004
	0x035D5F20 LDR X23, [X20]
	0x035D5F24 CBZ X23, 0x35D62C0
	0x035D5F28 MOV X0, X23
	0x035D5F2C MOV X1, X31
	0x035D5F30 BL 0x323260C
	0x035D5F34 ADRP X21, 0xB63000
	0x035D5F38 LDR X21, [X21 + 0xCA8]
	0x035D5F3C MOV W25, W0
	0x035D5F40 LDR X8, [X21]
	0x035D5F44 LDR W9, [X8 + 0xE0]
	0x035D5F48 CBNZ W9, 0x35D5F58
	0x035D5F4C MOV X0, X8
	0x035D5F50 BL 0x1C16DFC
	0x035D5F54 LDR X8, [X21]
	0x035D5F58 LDR X8, [X8 + 0xB8]
	0x035D5F5C MOV X0, X23
	0x035D5F60 MOV X3, X31
	0x035D5F64 LDR W2, [X8]
	0x035D5F68 SUB W1, W25, W2
	0x035D5F6C BL 0x3233A34
	0x035D5F70 LDR X8, [X24]
	0x035D5F74 MOV X0, X24
	0x035D5F78 LDR X9, [X8 + 0x588]
	0x035D5F7C LDR X1, [X8 + 0x590]
	0x035D5F80 BLR X9
	0x035D5F84 TBZ X0, 0x0, 0x35D6004
	0x035D5F88 CBZ X19, 0x35D62C0
	0x035D5F8C ADRP X8, 0xB1F000
	0x035D5F90 LDR X8, [X8 + 0xC20]
	0x035D5F94 MOV X0, X19
	0x035D5F98 MOV X1, X26
	0x035D5F9C LDR X2, [X8]
	0x035D5FA0 BL 0x2DBEF30
	0x035D5FA4 LDR X0, [X31 + 0x48]
	0x035D5FA8 CBZ X0, 0x35D62C0
	0x035D5FAC ADRP X9, 0xB28000
	0x035D5FB0 LDR W10, [X0 + 0x1C]
	0x035D5FB4 LDR X8, [X0 + 0x10]
	0x035D5FB8 LDR X9, [X9 + 0x938]
	0x035D5FBC ADD W10, W10, 0x1
	0x035D5FC0 LDR X9, [X9]
	0x035D5FC4 STR W10, [X0 + 0x1C]
	0x035D5FC8 CBZ X8, 0x35D62C0
	0x035D5FCC LDRSW X10, [X0 + 0x18]
	0x035D5FD0 LDR W11, [X8 + 0x18]
	0x035D5FD4 CMP W10, W11
	0x035D5FD8 B.CS 0x35D5FF0
	0x035D5FDC ADD W9, W10, 0x1
	0x035D5FE0 ADD X8, X8, X10, 0x3, LSL
	0x035D5FE4 STR W9, [X0 + 0x18]
	0x035D5FE8 STR X24, [X8 + 0x20]
	0x035D5FEC B 0x35D6004
	0x035D5FF0 LDR X8, [X9 + 0x20]
	0x035D5FF4 MOV X1, X24
	0x035D5FF8 LDR X8, [X8 + 0xC0]
	0x035D5FFC LDR X2, [X8 + 0x70]
	0x035D6000 BL 0x301BF90
	0x035D6004 LDR X23, [X20]
	0x035D6008 MOV X0, X24
	0x035D600C MOV X1, X31
	0x035D6010 BL 0x339707C
	0x035D6014 CBZ X23, 0x35D62C0
	0x035D6018 ADRP X8, 0xB28000
	0x035D601C ADRP X9, 0xB1D000
	0x035D6020 LDR X8, [X8 + 0x6D8]
	0x035D6024 LDR X9, [X9 + 0x988]
	0x035D6028 ANDS W31, W0, 0x1
	0x035D602C MOV X0, X23
	0x035D6030 MOV X2, X31
	0x035D6034 CSEL X8, X8, X9, NE
	0x035D6038 LDR X1, [X8]
	0x035D603C BL 0x32338A8
	0x035D6040 LDR X0, [X31 + 0x50]
	0x035D6044 CBZ X0, 0x35D62C0
	0x035D6048 ADRP X8, 0xB62000
	0x035D604C LDR X8, [X8 + 0xCF8]
	0x035D6050 ADRP X24, 0xB62000
	0x035D6054 ADRP X27, 0xB62000
	0x035D6058 ADRP X29, 0xB27000
	0x035D605C LDR X24, [X24 + 0xCD8]
	0x035D6060 LDR X27, [X27 + 0xCE8]
	0x035D6064 LDR X29, [X29 + 0x9D8]
	0x035D6068 LDR X1, [X8]
	0x035D606C ADRP X28, 0xB27000
	0x035D6070 ADRP X21, 0xB62000
	0x035D6074 LDR X28, [X28 + 0x9A0]
	0x035D6078 LDR X21, [X21 + 0xCD0]
	0x035D607C ADD X8, X31, 0x78
	0x035D6080 BL 0x301CB58
	0x035D6084 LDUR V0, [X31 + 0x78]
	0x035D6088 LDR X8, [X31 + 0x88]
	0x035D608C STR V0, [X31 + 0xB]
	0x035D6090 STR X8, [X31 + 0xC0]
	0x035D6094 LDR X1, [X24]
	0x035D6098 ADD X0, X31, 0xB0
	0x035D609C BL 0x2BC4350
	0x035D60A0 TBZ X0, 0x0, 0x35D61B4
	0x035D60A4 LDR X23, [X31 + 0xC0]
	0x035D60A8 CBZ X23, 0x35D62D0
	0x035D60AC LDR X0, [X23 + 0x18]
	0x035D60B0 CBZ X0, 0x35D62D4
	0x035D60B4 LDR X8, [X0]
	0x035D60B8 LDR X1, [X8 + 0x2F0]
	0x035D60BC LDR X9, [X8 + 0x2E8]
	0x035D60C0 BLR X9
	0x035D60C4 MOV X1, X0
	0x035D60C8 CBZ X22, 0x35D62CC
	0x035D60CC LDR X2, [X27]
	0x035D60D0 MOV X0, X22
	0x035D60D4 BL 0x2DBE4B0
	0x035D60D8 TBNZ X0, 0x0, 0x35D6094
	0x035D60DC LDR X0, [X31 + 0x70]
	0x035D60E0 CBZ X0, 0x35D62E4
	0x035D60E4 LDR W8, [X0 + 0x10]
	0x035D60E8 LDR X25, [X23 + 0x10]
	0x035D60EC CBZ W8, 0x35D610C
	0x035D60F0 ADRP X8, 0xB1E000
	0x035D60F4 LDR X8, [X8 + 0xEC8]
	0x035D60F8 LDR X1, [X8]
	0x035D60FC MOV X2, X25
	0x035D6100 MOV X3, X31
	0x035D6104 BL 0x32274B8
	0x035D6108 MOV X25, X0
	0x035D610C LDR W8, [X31 + 0x6C]
	0x035D6110 TBZ X8, 0x0, 0x35D611C
	0x035D6114 MOVZ W26, 0x1
	0x035D6118 B 0x35D6134
	0x035D611C LDR X0, [X31 + 0x58]
	0x035D6120 CBZ X0, 0x35D62EC
	0x035D6124 LDR X1, [X23 + 0x10]
	0x035D6128 LDR X2, [X27]
	0x035D612C BL 0x2DBE4B0
	0x035D6130 AND W26, W0, 0x1
	0x035D6134 LDR X0, [X23 + 0x18]
	0x035D6138 CBZ X0, 0x35D62E0
	0x035D613C LDR X8, [X0]
	0x035D6140 LDR X1, [X8 + 0x2F0]
	0x035D6144 LDR X9, [X8 + 0x2E8]
	0x035D6148 BLR X9
	0x035D614C MOV X1, X0
	0x035D6150 ADRP X8, 0xB1E000
	0x035D6154 LDR X8, [X8 + 0xC20]
	0x035D6158 LDR X2, [X8]
	0x035D615C MOV X0, X22
	0x035D6160 BL 0x2DBEF30
	0x035D6164 LDR X0, [X20]
	0x035D6168 CBZ X0, 0x35D62E8
	0x035D616C MOV X1, X31
	0x035D6170 BL 0x3233888
	0x035D6174 ADRP X8, 0xB62000
	0x035D6178 LDR X8, [X8 + 0xCA8]
	0x035D617C LDR X23, [X23 + 0x18]
	0x035D6180 LDR X0, [X8]
	0x035D6184 LDR W8, [X0 + 0xE0]
	0x035D6188 CBNZ W8, 0x35D6190
	0x035D618C BL 0x1C16DFC
	0x035D6190 LDR X6, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0xE0C000
	015 Move W8, [X20+549]
	016 Move X29, X6
	017 Move X27, X5
	018 Move X22, X4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X21, X1
	022 Move X28, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X0, 0xB1F000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0xB20000
	031 Move X0, [X0+3112]
	032 Call 0x1C17CF4
	033 Move X0, 0xB20000
	034 Move X0, [X0+3120]
	035 Call 0x1C17CF4
	036 Move X0, 0xB20000
	037 Move X0, [X0+448]
	038 Call 0x1C17CF4
	039 Move X0, 0xB20000
	040 Move X0, [X0+464]
	041 Call 0x1C17CF4
	042 Move X0, 0xB1F000
	043 Move X0, [X0+2288]
	044 Call 0x1C17CF4
	045 Move X0, 0xB64000
	046 Move X0, [X0+3240]
	047 Call 0x1C17CF4
	048 Move X0, 0xB64000
	049 Move X0, [X0+3248]
	050 Call 0x1C17CF4
	051 Move X0, 0xB20000
	052 Move X0, [X0+3784]
	053 Call 0x1C17CF4
	054 Move X0, 0xB1F000
	055 Move X0, [X0+2440]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+549], W8
	059 Move X0, X21
	060 Move X1, X31
	061 Call Directory.Exists, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {245}
	066 Move X19, 0xB1F000
	067 Move X19, [X19+2288]
	068 Move X0, [X19]
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X26, X0
	072 Call StringBuilder..ctor, X0
	073 Move X0, [X19]
	074 Move [X31+72], X26
	075 Call 0x1C17F10
	076 Move X1, X31
	077 Move X25, X0
	078 Call StringBuilder..ctor, X0
	079 Move X0, [X19]
	080 Move [X31+64], X25
	081 Call 0x1C17F10
	082 Move X1, X31
	083 Move X19, X0
	084 Call StringBuilder..ctor, X0
	085 Move [X31+56], X19
	086 Compare X26, 0
	087 JumpIfEqual {278}
	088 Move X0, X26
	089 Move X1, X28
	090 Move X2, X31
	091 Call StringBuilder.AppendLine, X0, X1
	092 Compare X25, 0
	093 JumpIfEqual {278}
	094 Move X0, X25
	095 Move X1, X28
	096 Move X2, X31
	097 Move [X31+48], X29
	098 Call StringBuilder.AppendLine, X0, X1
	099 Compare X19, 0
	100 JumpIfEqual {278}
	101 Move X0, X19
	102 Move X1, X28
	103 Move X2, X31
	104 Move [X31+24], X24
	105 Move [X31+32], X23
	106 Move [X31+8], X19
	107 Move [X31+16], X22
	108 Move [X31+40], X21
	109 Call StringBuilder.AppendLine, X0, X1
	110 Move X19, 0xB20000
	111 Move X19, [X19+3120]
	112 Move X0, [X19]
	113 Call 0x1C17F10
	114 Move X20, 0xB20000
	115 Move X20, [X20+3112]
	116 Move X29, X0
	117 Move X1, [X20]
	118 Call HashSet`1<Object>..ctor, X0
	119 Move X0, [X19]
	120 Call 0x1C17F10
	121 Move X1, [X20]
	122 Move X20, X0
	123 Call HashSet`1<Object>..ctor, X0
	124 Move X8, 0xB20000
	125 Move X8, [X8+464]
	126 Move X0, [X8]
	127 Call 0x1C17F10
	128 Move X8, 0xB20000
	129 Move X8, [X8+448]
	130 Move X28, X0
	131 Move X1, [X8]
	132 Call List`1<Object>..ctor, X0
	133 Compare X27, 0
	134 JumpIfEqual {278}
	135 Move X8, [X27+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X19, 0xB64000
	138 Move X24, 0xB1F000
	139 Move X19, [X19+3240]
	140 Move X24, [X24+2440]
	141 Move X22, X31
	142 And X8, X8, 0
	143 Add X23, X27, 32
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, [X19]
	146 Move X21, [X23]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X2, [X24]
	152 Add X0, X31, 72
	153 Move X1, X21
	154 Move W3, W31
	155 Move X4, X29
	156 Move X5, X20
	157 Move X6, X28
	158 Call TypeScriptInterfaceGenerator.GenerateInternal, X0, X1, X2, X3, X4, X5, X6
	159 Move W8, [X27+24]
	160 Add X22, X22, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X8, 0xB64000
	163 Move X8, [X8+3240]
	164 Move X0, [X8]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Add X0, X31, 72
	170 Call TypeScriptInterfaceGenerator.GenerateUnityTypes, X0
	171 Add X0, X31, 72
	172 Call TypeScriptInterfaceGenerator.GenerateCustomPrimitiveTypes, X0
	173 Move X21, [X31+32]
	174 Move X22, [X31+40]
	175 Move X20, [X31+24]
	176 Move X19, [X31+48]
	177 Compare X19, 0
	178 JumpIfEqual {278}
	179 Move X0, X19
	180 Move X1, X31
	181 Call "il2cpp_vm_object_is_inst", X0
	182 Compare X0, 0
	183 JumpIfEqual {278}
	184 Move X8, [X0]
	185 Move X9, [X8+424]
	186 Move X1, [X8+432]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Call TypeScriptInterfaceGenerator.TypeNameToTS, X0
	189 Move X1, X0
	190 Add X0, X31, 64
	191 Move X2, X28
	192 Call TypeScriptInterfaceGenerator.GenerateKeyPaths, X0, X1, X2
	193 Add X0, X31, 56
	194 Move X1, X20
	195 Move X2, X28
	196 Move X3, X19
	197 Call TypeScriptInterfaceGenerator.GenerateEmptyState, X0, X1, X2, X3
	198 Move X19, 0xB1F000
	199 Move X19, [X19+3784]
	200 Move X0, X22
	201 Move X2, X20
	202 Move X3, X31
	203 Move X1, [X19]
	204 Call String.Concat, X0, X1, X2
	205 Move X1, [X19]
	206 Move X20, X0
	207 Move X0, X22
	208 Move X2, X21
	209 Move X3, X31
	210 Call String.Concat, X0, X1, X2
	211 Move X1, [X19]
	212 Move X2, [X31+16]
	213 Move X21, X0
	214 Move X0, X22
	215 Move X3, X31
	216 Call String.Concat, X0, X1, X2
	217 Move X8, [X26]
	218 Move X19, X0
	219 Move X0, X26
	220 Move X9, [X8+360]
	221 Move X1, [X8+368]
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Move X1, X0
	224 Move X0, X20
	225 Move X2, X31
	226 Call File.WriteAllText, X0, X1
	227 Move X8, [X25]
	228 Move X0, X25
	229 Move X9, [X8+360]
	230 Move X1, [X8+368]
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move X1, X0
	233 Move X0, X21
	234 Move X2, X31
	235 Call File.WriteAllText, X0, X1
	236 Move X0, [X31+8]
	237 Move X8, [X0]
	238 Move X9, [X8+360]
	239 Move X1, [X8+368]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move X1, X0
	242 Move X0, X19
	243 Move X2, X31
	244 Call File.WriteAllText, X0, X1
	245 Move X8, 0xB63000
	246 Move X8, [X8+3248]
	247 Move X1, X21
	248 Move X2, X31
	249 Move X0, [X8]
	250 Call String.Concat, X0, X1
	251 Move X8, 0xB1E000
	252 Move X8, [X8+2600]
	253 Move X19, X0
	254 Move X8, [X8]
	255 Move W9, [X8+224]
	256 Compare W9, 0
	257 JumpIfNotEqual {260}
	258 Move X0, X8
	259 Call 0x1C17DFC
	260 Move X0, X19
	261 Move X1, X31
	262 Call Debug.Log, X0
	263 Move X20, [X31+160]
	264 Move X19, [X31+168]
	265 Move X22, [X31+144]
	266 Move X21, [X31+152]
	267 Move X24, [X31+128]
	268 Move X23, [X31+136]
	269 Move X26, [X31+112]
	270 Move X25, [X31+120]
	271 Move X28, [X31+96]
	272 Move X27, [X31+104]
	273 Move X29, [X31+80]
	274 Move X30, [X31+88]
	275 Add X31, X31, 176
	276 Return 
	277 Call 0x1C17F28
	278 Call 0x1C17F20

Method: System.Void GenerateClassInterfaces(System.String fileIntro, System.String outputPath, System.Type[] types, System.Type exportAttribute)

Disassembly:
	0x035D80D8 MOV X22, X0
	0x035D80DC LDR W9, [X8 + 0xE0]
	0x035D80E0 CBNZ W9, 0x35D80EC
	0x035D80E4 MOV X0, X8
	0x035D80E8 BL 0x1C16DFC
	0x035D80EC MOV X0, X22
	0x035D80F0 BL 0x35D6624
	0x035D80F4 LDR X8, [X24]
	0x035D80F8 LDR X2, [X23]
	0x035D80FC LDR X22, [X19]
	0x035D8100 MOV X1, X0
	0x035D8104 MOV X0, X8
	0x035D8108 MOV X3, X31
	0x035D810C BL 0x32274B8
	0x035D8110 CBZ X22, 0x35D8354
	0x035D8114 MOV X1, X0
	0x035D8118 MOV X0, X22
	0x035D811C MOV X2, X31
	0x035D8120 BL 0x32338A8
	0x035D8124 LDR X8, [X21]
	0x035D8128 MOVZ W1, 0x18
	0x035D812C MOV X0, X21
	0x035D8130 LDR X9, [X8 + 0x688]
	0x035D8134 LDR X2, [X8 + 0x690]
	0x035D8138 BLR X9
	0x035D813C CBZ X0, 0x35D8354
	0x035D8140 LDR W8, [X0 + 0x18]
	0x035D8144 MOV X21, X0
	0x035D8148 CMP W8, 0x1
	0x035D814C B.LT 0x35D831C
	0x035D8150 ADRP X28, 0xB1D000
	0x035D8154 ADRP X29, 0xB60000
	0x035D8158 ADRP X26, 0xB60000
	0x035D815C LDR X28, [X28 + 0x4B0]
	0x035D8160 LDR X29, [X29 + 0xD28]
	0x035D8164 LDR X26, [X26 + 0xCC8]
	0x035D8168 MOV W27, W31
	0x035D816C CMP W27, W8
	0x035D8170 B.CS 0x35D8350
	0x035D8174 ADD X8, X21, W27, 0x3, SXTW
	0x035D8178 LDR X22, [X8 + 0x20]
	0x035D817C CBZ X22, 0x35D8354
	0x035D8180 LDR X8, [X22]
	0x035D8184 MOV X0, X22
	0x035D8188 LDR X9, [X8 + 0x308]
	0x035D818C LDR X1, [X8 + 0x310]
	0x035D8190 BLR X9
	0x035D8194 CBZ X0, 0x35D8354
	0x035D8198 LDR X8, [X0]
	0x035D819C LDP X9, X1, [X8 + 0x168]
	0x035D81A0 BLR X9
	0x035D81A4 LDR X1, [X28]
	0x035D81A8 MOV X2, X31
	0x035D81AC MOV X23, X0
	0x035D81B0 BL 0x3226EF8
	0x035D81B4 TBZ X0, 0x0, 0x35D8264
	0x035D81B8 LDR X8, [X22]
	0x035D81BC MOV X0, X22
	0x035D81C0 LDR X9, [X8 + 0x218]
	0x035D81C4 LDR X1, [X8 + 0x220]
	0x035D81C8 BLR X9
	0x035D81CC LDR X8, [X29]
	0x035D81D0 MOV X24, X0
	0x035D81D4 LDR W9, [X8 + 0xE0]
	0x035D81D8 CBNZ W9, 0x35D81E8
	0x035D81DC MOV X0, X8
	0x035D81E0 BL 0x1C16DFC
	0x035D81E4 LDR X8, [X29]
	0x035D81E8 LDR X9, [X8 + 0xB8]
	0x035D81EC LDR X25, [X9 + 0x10]
	0x035D81F0 CBNZ X25, 0x35D8250

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xE09000
	011 Move X24, 0xB1C000
	012 Move W8, [X22+550]
	013 Move X24, [X24+2288]
	014 Move X20, X3
	015 Move X21, X2
	016 Move X19, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xB1C000
	023 Move X0, [X0+2288]
	024 Call 0x1C17CF4
	025 Move X0, 0xB61000
	026 Move X0, [X0+3240]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+550], W8
	030 Move X0, [X24]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X22, X0
	034 Call StringBuilder..ctor, X0
	035 Compare X22, 0
	036 JumpIfEqual {84}
	037 Move X0, X22
	038 Move X1, X23
	039 Move X2, X31
	040 Call StringBuilder.AppendLine, X0, X1
	041 Compare X21, 0
	042 JumpIfEqual {84}
	043 Move X8, [X21+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X25, 0xB61000
	046 Move X25, [X25+3240]
	047 Move X24, X31
	048 And X8, X8, 0
	049 Add X26, X21, 32
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X25]
	052 Move X23, [X26]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X22
	058 Move X1, X23
	059 Move X2, X20
	060 Call TypeScriptInterfaceGenerator.GenerateClassInterface, X0, X1, X2
	061 Move W8, [X21+24]
	062 Add X24, X24, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X22]
	065 Move X0, X22
	066 Move X9, [X8+360]
	067 Move X1, [X8+368]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X1, X0
	070 Move X0, X19
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X2, X31
	080 Move X30, [X31+80]
	081 Call File.WriteAllText, X0, X1
	082 Return 
	083 Call 0x1C17F28
	084 Call 0x1C17F20

Method: System.Void GenerateInternal(ref System.Text.StringBuilder builder, System.Type type, System.String keyPath, System.Boolean isStateDictionary, System.Collections.Generic.HashSet`1<System.String> generatedInterfaceNames, System.Collections.Generic.HashSet`1<System.String> generatedEnumNames, System.Collections.Generic.List`1<System.String> generatedKeyPaths)

Disassembly:
	0x035D6194 MOV X0, X20
	0x035D6198 MOV X1, X23
	0x035D619C MOV X2, X25
	0x035D61A0 MOV W3, W26
	0x035D61A4 MOV X4, X22
	0x035D61A8 MOV X5, X19
	0x035D61AC BL 0x35D5194
	0x035D61B0 B 0x35D6094
	0x035D61B4 LDR X1, [X21]
	0x035D61B8 ADD X0, X31, 0xB0
	0x035D61BC BL 0x2BC434C
	0x035D61C0 LDR X0, [X31 + 0x48]
	0x035D61C4 CBZ X0, 0x35D62C0
	0x035D61C8 LDR X1, [X29]
	0x035D61CC ADD X8, X31, 0x78
	0x035D61D0 BL 0x301CB58
	0x035D61D4 LDUR V0, [X31 + 0x78]
	0x035D61D8 LDR X8, [X31 + 0x88]
	0x035D61DC STR V0, [X31 + 0x9]
	0x035D61E0 STR X8, [X31 + 0xA0]
	0x035D61E4 LDR X1, [X28]
	0x035D61E8 ADD X0, X31, 0x90
	0x035D61EC BL 0x2BC4350
	0x035D61F0 TBZ X0, 0x0, 0x35D628C
	0x035D61F4 LDR X21, [X31 + 0xA0]
	0x035D61F8 CBZ X21, 0x35D62C4
	0x035D61FC LDR X8, [X21]
	0x035D6200 LDR X1, [X8 + 0x2F0]
	0x035D6204 LDR X9, [X8 + 0x2E8]
	0x035D6208 MOV X0, X21
	0x035D620C BLR X9
	0x035D6210 MOV X1, X0
	0x035D6214 CBZ X19, 0x35D62C8
	0x035D6218 LDR X2, [X27]
	0x035D621C MOV X0, X19
	0x035D6220 BL 0x2DBE4B0
	0x035D6224 TBNZ X0, 0x0, 0x35D61E4
	0x035D6228 LDR X8, [X21]
	0x035D622C LDR X1, [X8 + 0x2F0]
	0x035D6230 LDR X9, [X8 + 0x2E8]
	0x035D6234 MOV X0, X21
	0x035D6238 BLR X9
	0x035D623C MOV X1, X0
	0x035D6240 ADRP X8, 0xB1E000
	0x035D6244 LDR X8, [X8 + 0xC20]
	0x035D6248 LDR X2, [X8]
	0x035D624C MOV X0, X19
	0x035D6250 BL 0x2DBEF30
	0x035D6254 LDR X0, [X20]
	0x035D6258 CBZ X0, 0x35D62DC
	0x035D625C MOV X1, X31
	0x035D6260 BL 0x3233888
	0x035D6264 ADRP X8, 0xB62000
	0x035D6268 LDR X8, [X8 + 0xCA8]
	0x035D626C LDR X0, [X8]
	0x035D6270 LDR W8, [X0 + 0xE0]
	0x035D6274 CBNZ W8, 0x35D627C
	0x035D6278 BL 0x1C16DFC
	0x035D627C MOV X0, X20
	0x035D6280 MOV X1, X21
	0x035D6284 BL 0x35D7FB4
	0x035D6288 B 0x35D61E4
	0x035D628C ADRP X8, 0xB27000
	0x035D6290 LDR X8, [X8 + 0x998]
	0x035D6294 ADD X0, X31, 0x90
	0x035D6298 LDR X1, [X8]
	0x035D629C BL 0x2BC434C
	0x035D62A0 LDP X20, X19, [X31 + 0x130]
	0x035D62A4 LDP X22, X21, [X31 + 0x120]
	0x035D62A8 LDP X24, X23, [X31 + 0x110]
	0x035D62AC LDP X26, X25, [X31 + 0x100]
	0x035D62B0 LDP X28, X27, [X31 + 0xF0]
	0x035D62B4 LDP X29, X30, [X31 + 0xE0]
	0x035D62B8 ADD X31, X31, 0x140
	0x035D62BC RET
	0x035D62C0 BL 0x1C16F20
	0x035D62C4 BL 0x1C16F20
	0x035D62C8 BL 0x1C16F20
	0x035D62CC BL 0x1C16F20
	0x035D62D0 BL 0x1C16F20
	0x035D62D4 BL 0x1C16F20
	0x035D62D8 BL 0x1C16F28
	0x035D62DC BL 0x1C16F20
	0x035D62E0 BL 0x1C16F20
	0x035D62E4 BL 0x1C16F20
	0x035D62E8 BL 0x1C16F20
	0x035D62EC BL 0x1C16F20
	0x035D62F0 B 0x35D6350
	0x035D62F4 B 0x35D6350
	0x035D62F8 B 0x35D6350
	0x035D62FC B 0x35D6350
	0x035D6300 B 0x35D6350
	0x035D6304 B 0x35D6350
	0x035D6308 B 0x35D6350
	0x035D630C B 0x35D6350
	0x035D6310 B 0x35D6350
	0x035D6314 B 0x35D63A8
	0x035D6318 B 0x35D63A8
	0x035D631C B 0x35D63A8
	0x035D6320 B 0x35D63A8
	0x035D6324 B 0x35D6350
	0x035D6328 B 0x35D63A8
	0x035D632C B 0x35D6350
	0x035D6330 B 0x35D6350
	0x035D6334 B 0x35D6350
	0x035D6338 B 0x35D6350
	0x035D633C B 0x35D6350
	0x035D6340 B 0x35D63A8
	0x035D6344 B 0x35D63A8
	0x035D6348 B 0x35D63A8
	0x035D634C B 0x35D63A8
	0x035D6350 MOV X23, X0
	0x035D6354 CMP W1, 0x1
	0x035D6358 B.NE 0x35D6384
	0x035D635C MOV X0, X23
	0x035D6360 BL 0x3EB1AD0
	0x035D6364 LDR X22, [X0]
	0x035D6368 BL 0x3EB1AE0
	0x035D636C LDR X1, [X21]
	0x035D6370 ADD X0, X31, 0xB0
	0x035D6374 BL 0x2BC434C
	0x035D6378 CBZ X22, 0x35D61C0
	0x035D637C MOV X0, X22
	0x035D6380 BL 0x1C16F18
	0x035D6384 MOV X22, X31
	0x035D6388 B 0x35D6390
	0x035D638C MOV X23, X0
	0x035D6390 LDR X1, [X21]
	0x035D6394 ADD X0, X31, 0xB0
	0x035D6398 BL 0x2BC434C
	0x035D639C CBZ X22, 0x35D6408
	0x035D63A0 MOV X0, X22
	0x035D63A4 BL 0x1C16F18
	0x035D63A8 MOV X23, X0
	0x035D63AC CMP W1, 0x1
	0x035D63B0 B.NE 0x35D63E4
	0x035D63B4 MOV X0, X23
	0x035D63B8 BL 0x3EB1AD0
	0x035D63BC LDR X19, [X0]
	0x035D63C0 BL 0x3EB1AE0
	0x035D63C4 ADRP X8, 0xB27000
	0x035D63C8 LDR X8, [X8 + 0x998]
	0x035D63CC ADD X0, X31, 0x90
	0x035D63D0 LDR X1, [X8]
	0x035D63D4 BL 0x2BC434C
	0x035D63D8 CBZ X19, 0x35D62A0
	0x035D63DC MOV X0, X19
	0x035D63E0 BL 0x1C16F18
	0x035D63E4 MOV X19, X31
	0x035D63E8 B 0x35D63F0
	0x035D63EC MOV X23, X0
	0x035D63F0 ADRP X8, 0xB27000
	0x035D63F4 LDR X8, [X8 + 0x998]
	0x035D63F8 LDR X1, [X8]
	0x035D63FC ADD X0, X31, 0x90
	0x035D6400 BL 0x2BC434C
	0x035D6404 CBNZ X19, 0x35D6410
	0x035D6408 MOV X0, X23
	0x035D640C BL 0x1D2C690
	0x035D6410 MOV X0, X19
	0x035D6414 BL 0x1C16F18
	0x035D6418 BL 0x1990590
	0x035D641C STR X30, [X31 - 0x20]!
	0x035D6420 STP X20, X19, [X31 + 0x10]
	0x035D6424 ADRP X20, 0xE0A000
	0x035D6428 LDRB W8, [X20 + 0x22E]
	0x035D642C MOV X19, X0
	0x035D6430 TBNZ X8, 0x0, 0x35D646C
	0x035D6434 ADRP X0, 0xB28000
	0x035D6438 LDR X0, [X0 + 0x6D8]
	0x035D643C BL 0x1C16CF4
	0x035D6440 ADRP X0, 0xB62000
	0x035D6444 LDR X0, [X0 + 0xD48]
	0x035D6448 BL 0x1C16CF4
	0x035D644C ADRP X0, 0xB62000
	0x035D6450 LDR X0, [X0 + 0xD50]
	0x035D6454 BL 0x1C16CF4
	0x035D6458 ADRP X0, 0xB62000
	0x035D645C LDR X0, [X0 + 0xD58]
	0x035D6460 BL 0x1C16CF4
	0x035D6464 MOVZ W8, 0x1
	0x035D6468 STRB W8, [X20 + 0x22E]
	0x035D646C LDR X0, [X19]
	0x035D6470 CBZ X0, 0x35D64F4
	0x035D6474 MOV X1, X31
	0x035D6478 BL 0x3233888
	0x035D647C LDR X0, [X19]
	0x035D6480 CBZ X0, 0x35D64F4
	0x035D6484 ADRP X8, 0xB62000
	0x035D6488 LDR X8, [X8 + 0xD58]
	0x035D648C MOV X2, X31
	0x035D6490 LDR X1, [X8]
	0x035D6494 BL 0x32338A8
	0x035D6498 LDR X0, [X19]
	0x035D649C CBZ X0, 0x35D64F4
	0x035D64A0 ADRP X8, 0xB62000
	0x035D64A4 LDR X8, [X8 + 0xD50]
	0x035D64A8 MOV X2, X31
	0x035D64AC LDR X1, [X8]
	0x035D64B0 BL 0x32338A8
	0x035D64B4 LDR X0, [X19]
	0x035D64B8 CBZ X0, 0x35D64F4
	0x035D64BC ADRP X8, 0xB62000
	0x035D64C0 LDR X8, [X8 + 0xD48]
	0x035D64C4 MOV X2, X31
	0x035D64C8 LDR X1, [X8]
	0x035D64CC BL 0x32338A8
	0x035D64D0 LDR X0, [X19]
	0x035D64D4 CBZ X0, 0x35D64F4
	0x035D64D8 ADRP X8, 0xB28000
	0x035D64DC LDR X8, [X8 + 0x6D8]
	0x035D64E0 LDP X20, X19, [X31 + 0x10]
	0x035D64E4 MOV X2, X31
	0x035D64E8 LDR X1, [X8]
	0x035D64EC LDR X30, [X31], #0x20
	0x035D64F0 B 0x32338A8
	0x035D64F4 BL 0x1C16F20
	0x035D64F8 STR X30, [X31 - 0x20]!
	0x035D64FC STP X20, X19, [X31 + 0x10]
	0x035D6500 ADRP X20, 0xE0A000
	0x035D6504 LDRB W8, [X20 + 0x22F]
	0x035D6508 MOV X19, X0
	0x035D650C TBNZ X8, 0x0, 0x35D6560
	0x035D6510 ADRP X0, 0xB28000
	0x035D6514 LDR X0, [X0 + 0x6D8]
	0x035D6518 BL 0x1C16CF4
	0x035D651C ADRP X0, 0xB62000
	0x035D6520 LDR X0, [X0 + 0xD60]
	0x035D6524 BL 0x1C16CF4
	0x035D6528 ADRP X0, 0xB62000
	0x035D652C LDR X0, [X0 + 0xD68]
	0x035D6530 BL 0x1C16CF4
	0x035D6534 ADRP X0, 0xB62000
	0x035D6538 LDR X0, [X0 + 0xD70]
	0x035D653C BL 0x1C16CF4
	0x035D6540 ADRP X0, 0xB62000
	0x035D6544 LDR X0, [X0 + 0xD78]
	0x035D6548 BL 0x1C16CF4
	0x035D654C ADRP X0, 0xB62000
	0x035D6550 LDR X0, [X0 + 0xD80]
	0x035D6554 BL 0x1C16CF4
	0x035D6558 MOVZ W8, 0x1
	0x035D655C STRB W8, [X20 + 0x22F]
	0x035D6560 LDR X0, [X19]
	0x035D6564 CBZ X0, 0x35D6620
	0x035D6568 MOV X1, X31
	0x035D656C BL 0x3233888
	0x035D6570 LDR X0, [X19]
	0x035D6574 CBZ X0, 0x35D6620
	0x035D6578 ADRP X8, 0xB62000
	0x035D657C LDR X8, [X8 + 0xD60]
	0x035D6580 MOV X2, X31
	0x035D6584 LDR X1, [X8]
	0x035D6588 BL 0x32338A8
	0x035D658C LDR X0, [X19]
	0x035D6590 CBZ X0, 0x35D6620
	0x035D6594 ADRP X8, 0xB62000
	0x035D6598 LDR X8, [X8 + 0xD80]
	0x035D659C MOV X2, X31
	0x035D65A0 LDR X1, [X8]
	0x035D65A4 BL 0x32338A8
	0x035D65A8 LDR X0, [X19]
	0x035D65AC CBZ X0, 0x35D6620
	0x035D65B0 ADRP X8, 0xB62000
	0x035D65B4 LDR X8, [X8 + 0xD78]
	0x035D65B8 MOV X2, X31
	0x035D65BC LDR X1, [X8]
	0x035D65C0 BL 0x32338A8
	0x035D65C4 LDR X0, [X19]
	0x035D65C8 CBZ X0, 0x35D6620
	0x035D65CC ADRP X8, 0xB62000
	0x035D65D0 LDR X8, [X8 + 0xD70]
	0x035D65D4 MOV X2, X31
	0x035D65D8 LDR X1, [X8]
	0x035D65DC BL 0x32338A8
	0x035D65E0 LDR X0, [X19]
	0x035D65E4 CBZ X0, 0x35D6620
	0x035D65E8 ADRP X8, 0xB62000
	0x035D65EC LDR X8, [X8 + 0xD68]
	0x035D65F0 MOV X2, X31
	0x035D65F4 LDR X1, [X8]
	0x035D65F8 BL 0x32338A8
	0x035D65FC LDR X0, [X19]
	0x035D6600 CBZ X0, 0x35D6620
	0x035D6604 ADRP X8, 0xB28000
	0x035D6608 LDR X8, [X8 + 0x6D8]
	0x035D660C LDP X20, X19, [X31 + 0x10]
	0x035D6610 MOV X2, X31
	0x035D6614 LDR X1, [X8]
	0x035D6618 LDR X30, [X31], #0x20
	0x035D661C B 0x32338A8
	0x035D6620 BL 0x1C16F20
	0x035D6624 STP X30, X19, [X31 - 0x10]!
	0x035D6628 CBZ X0, 0x35D6674
	0x035D662C MOVZ W1, 0x2B
	0x035D6630 MOVZ W2, 0x5F
	0x035D6634 MOV X3, X31
	0x035D6638 BL 0x32296D0
	0x035D663C CBZ X0, 0x35D6674
	0x035D6640 MOVZ W1, 0x2E
	0x035D6644 MOV X2, X31
	0x035D6648 MOV X19, X0
	0x035D664C BL 0x322C668
	0x035D6650 TBNZ X0, 0x1F, 0x35D6668
	0x035D6654 ADD W1, W0, 0x1
	0x035D6658 MOV X0, X19
	0x035D665C MOV X2, X31
	0x035D6660 LDP X30, X19, [X31], #0x10
	0x035D6664 B 0x322B484
	0x035D6668 MOV X0, X19
	0x035D666C LDP X30, X19, [X31], #0x10
	0x035D6670 RET
	0x035D6674 BL 0x1C16F20
	0x035D6678 SUB X31, X31, 0x70
	0x035D667C STP X30, X27, [X31 + 0x20]
	0x035D6680 STP X26, X25, [X31 + 0x30]
	0x035D6684 STP X24, X23, [X31 + 0x40]
	0x035D6688 STP X22, X21, [X31 + 0x50]
	0x035D668C STP X20, X19, [X31 + 0x60]
	0x035D6690 ADRP X21, 0xE0A000
	0x035D6694 LDRB W8, [X21 + 0x22D]
	0x035D6698 MOV X20, X2
	0x035D669C MOV X22, X1
	0x035D66A0 MOV X19, X0
	0x035D66A4 TBNZ X8, 0x0, 0x35D671C
	0x035D66A8 ADRP X0, 0xB44000
	0x035D66AC LDR X0, [X0 + 0xFC8]
	0x035D66B0 BL 0x1C16CF4
	0x035D66B4 ADRP X0, 0xB44000
	0x035D66B8 LDR X0, [X0 + 0xFD0]
	0x035D66BC BL 0x1C16CF4
	0x035D66C0 ADRP X0, 0xB44000
	0x035D66C4 LDR X0, [X0 + 0xFD8]
	0x035D66C8 BL 0x1C16CF4
	0x035D66CC ADRP X0, 0xB44000
	0x035D66D0 LDR X0, [X0 + 0xFE0]
	0x035D66D4 BL 0x1C16CF4
	0x035D66D8 ADRP X0, 0xB62000
	0x035D66DC LDR X0, [X0 + 0xD88]
	0x035D66E0 BL 0x1C16CF4
	0x035D66E4 ADRP X0, 0xB62000
	0x035D66E8 LDR X0, [X0 + 0xD90]
	0x035D66EC BL 0x1C16CF4
	0x035D66F0 ADRP X0, 0xB62000
	0x035D66F4 LDR X0, [X0 + 0xD98]
	0x035D66F8 BL 0x1C16CF4
	0x035D66FC ADRP X0, 0xB62000
	0x035D6700 LDR X0, [X0 + 0xDA0]
	0x035D6704 BL 0x1C16CF4
	0x035D6708 ADRP X0, 0xB28000
	0x035D670C LDR X0, [X0 + 0xCD8]
	0x035D6710 BL 0x1C16CF4
	0x035D6714 MOVZ W8, 0x1
	0x035D6718 STRB W8, [X21 + 0x22D]
	0x035D671C MOVZ W1, 0x20
	0x035D6720 MOVZ W2, 0x2
	0x035D6724 MOV X0, X31
	0x035D6728 MOV X3, X31
	0x035D672C STP X31, X31, [X31 + 0x8]
	0x035D6730 STR X31, [X31 + 0x18]
	0x035D6734 BL 0x322EAF4
	0x035D6738 CBZ X20, 0x35D6838
	0x035D673C ADRP X8, 0xB62000
	0x035D6740 LDR X8, [X8 + 0xD88]
	0x035D6744 ADRP X24, 0xB62000
	0x035D6748 ADRP X25, 0xB62000
	0x035D674C MOV X21, X0
	0x035D6750 LDR X1, [X8]
	0x035D6754 LDR X24, [X24 + 0xD90]
	0x035D6758 LDR X25, [X25 + 0xD98]
	0x035D675C MOV X0, X20
	0x035D6760 BL 0x301DC50
	0x035D6764 LDR X0, [X24]
	0x035D6768 LDR X2, [X25]
	0x035D676C LDR X23, [X19]
	0x035D6770 MOV X1, X22
	0x035D6774 MOV X3, X31
	0x035D6778 BL 0x32274B8
	0x035D677C CBZ X23, 0x35D6838
	0x035D6780 ADRP X27, 0xB44000
	0x035D6784 ADRP X24, 0xB44000
	0x035D6788 ADRP X25, 0xB62000
	0x035D678C ADRP X26, 0xB28000
	0x035D6790 ADRP X22, 0xB44000
	0x035D6794 LDR X27, [X27 + 0xFE0]
	0x035D6798 LDR X24, [X24 + 0xFD0]
	0x035D679C LDR X25, [X25 + 0xDA0]
	0x035D67A0 LDR X26, [X26 + 0xCD8]
	0x035D67A4 LDR X22, [X22 + 0xFC8]
	0x035D67A8 MOV X1, X0
	0x035D67AC MOV X0, X23
	0x035D67B0 MOV X2, X31
	0x035D67B4 BL 0x32338A8
	0x035D67B8 LDR X1, [X27]
	0x035D67BC ADD X8, X31, 0x8
	0x035D67C0 MOV X0, X20
	0x035D67C4 BL 0x301CB58
	0x035D67C8 LDR X1, [X24]
	0x035D67CC ADD X0, X31, 0x8
	0x035D67D0 BL 0x2BC4350
	0x035D67D4 TBZ X0, 0x0, 0x35D680C
	0x035D67D8 LDR X20, [X19]
	0x035D67DC LDR X1, [X25]
	0x035D67E0 LDR X2, [X31 + 0x18]
	0x035D67E4 LDR X3, [X26]
	0x035D67E8 MOV X0, X21
	0x035D67EC MOV X4, X31
	0x035D67F0 BL 0x32277C4
	0x035D67F4 MOV X1, X0
	0x035D67F8 CBZ X20, 0x35D6834
	0x035D67FC MOV X0, X20
	0x035D6800 MOV X2, X31
	0x035D6804 BL 0x32338A8
	0x035D6808 B 0x35D67C8
	0x035D680C LDR X1, [X22]
	0x035D6810 ADD X0, X31, 0x8
	0x035D6814 BL 0x2BC434C
	0x035D6818 LDP X20, X19, [X31 + 0x60]
	0x035D681C LDP X22, X21, [X31 + 0x50]
	0x035D6820 LDP X24, X23, [X31 + 0x40]
	0x035D6824 LDP X26, X25, [X31 + 0x30]
	0x035D6828 LDP X30, X27, [X31 + 0x20]
	0x035D682C ADD X31, X31, 0x70
	0x035D6830 RET
	0x035D6834 BL 0x1C16F20
	0x035D6838 BL 0x1C16F20
	0x035D683C B 0x35D6848
	0x035D6840 B 0x35D6848
	0x035D6844 B 0x35D6848
	0x035D6848 MOV X19, X0
	0x035D684C CMP W1, 0x1
	0x035D6850 B.NE 0x35D687C
	0x035D6854 MOV X0, X19
	0x035D6858 BL 0x3EB1AD0
	0x035D685C LDR X20, [X0]
	0x035D6860 BL 0x3EB1AE0
	0x035D6864 LDR X1, [X22]
	0x035D6868 ADD X0, X31, 0x8
	0x035D686C BL 0x2BC434C
	0x035D6870 CBZ X20, 0x35D6818
	0x035D6874 MOV X0, X20
	0x035D6878 BL 0x1C16F18
	0x035D687C MOV X20, X31
	0x035D6880 B 0x35D6888
	0x035D6884 MOV X19, X0
	0x035D6888 LDR X1, [X22]
	0x035D688C ADD X0, X31, 0x8
	0x035D6890 BL 0x2BC434C
	0x035D6894 CBNZ X20, 0x35D68A0
	0x035D6898 MOV X0, X19
	0x035D689C BL 0x1D2C690
	0x035D68A0 MOV X0, X20
	0x035D68A4 BL 0x1C16F18
	0x035D68A8 BL 0x1990590
	0x035D68AC SUB X31, X31, 0xC0
	0x035D68B0 STP X29, X30, [X31 + 0x60]
	0x035D68B4 STP X28, X27, [X31 + 0x70]
	0x035D68B8 STP X26, X25, [X31 + 0x80]
	0x035D68BC STP X24, X23, [X31 + 0x90]
	0x035D68C0 STP X22, X21, [X31 + 0xA0]
	0x035D68C4 STP X20, X19, [X31 + 0xB0]
	0x035D68C8 STR X1, [X31]
	0x035D68CC ADRP X26, 0xE0A000
	0x035D68D0 ADRP X25, 0xB62000
	0x035D68D4 ADRP X22, 0xB62000
	0x035D68D8 ADRP X23, 0xB61000
	0x035D68DC ADRP X20, 0xB61000
	0x035D68E0 LDRB W8, [X26 + 0x22C]
	0x035D68E4 LDR X25, [X25 + 0xDA8]
	0x035D68E8 LDR X22, [X22 + 0xDB0]
	0x035D68EC LDR X23, [X23 + 0xE50]
	0x035D68F0 LDR X20, [X20 + 0xE58]
	0x035D68F4 MOV X21, X3
	0x035D68F8 MOV X24, X2
	0x035D68FC MOV X19, X0
	0x035D6900 TBNZ X8, 0x0, 0x35D6A50
	0x035D6904 ADRP X0, 0xB44000
	0x035D6908 LDR X0, [X0 + 0xFC8]
	0x035D690C BL 0x1C16CF4
	0x035D6910 ADRP X0, 0xB62000
	0x035D6914 LDR X0, [X0 + 0x10]
	0x035D6918 BL 0x1C16CF4
	0x035D691C ADRP X0, 0xB62000
	0x035D6920 LDR X0, [X0 + 0x18]
	0x035D6924 BL 0x1C16CF4
	0x035D6928 ADRP X0, 0xB44000
	0x035D692C LDR X0, [X0 + 0xFD0]
	0x035D6930 BL 0x1C16CF4
	0x035D6934 ADRP X0, 0xB44000
	0x035D6938 LDR X0, [X0 + 0xFD8]
	0x035D693C BL 0x1C16CF4
	0x035D6940 ADRP X0, 0xB62000
	0x035D6944 LDR X0, [X0 + 0x20]
	0x035D6948 BL 0x1C16CF4
	0x035D694C ADRP X0, 0xB46000
	0x035D6950 LDR X0, [X0 + 0x580]
	0x035D6954 BL 0x1C16CF4
	0x035D6958 ADRP X0, 0xB62000
	0x035D695C LDR X0, [X0 + 0x28]
	0x035D6960 BL 0x1C16CF4
	0x035D6964 ADRP X0, 0xB61000
	0x035D6968 LDR X0, [X0 + 0xE58]
	0x035D696C BL 0x1C16CF4
	0x035D6970 ADRP X0, 0xB61000
	0x035D6974 LDR X0, [X0 + 0xE50]
	0x035D6978 BL 0x1C16CF4
	0x035D697C ADRP X0, 0xB1E000
	0x035D6980 LDR X0, [X0 + 0x1B0]
	0x035D6984 BL 0x1C16CF4
	0x035D6988 ADRP X0, 0xB62000
	0x035D698C LDR X0, [X0 + 0xDB8]
	0x035D6990 BL 0x1C16CF4
	0x035D6994 ADRP X0, 0xB44000
	0x035D6998 LDR X0, [X0 + 0xFE0]
	0x035D699C BL 0x1C16CF4
	0x035D69A0 ADRP X0, 0xB62000
	0x035D69A4 LDR X0, [X0 + 0xDC0]
	0x035D69A8 BL 0x1C16CF4
	0x035D69AC ADRP X0, 0xB62000
	0x035D69B0 LDR X0, [X0 + 0xDB0]
	0x035D69B4 BL 0x1C16CF4
	0x035D69B8 ADRP X0, 0xB62000
	0x035D69BC LDR X0, [X0 + 0xDA8]
	0x035D69C0 BL 0x1C16CF4
	0x035D69C4 ADRP X0, 0xB1D000
	0x035D69C8 LDR X0, [X0 + 0xAC8]
	0x035D69CC BL 0x1C16CF4
	0x035D69D0 ADRP X0, 0xB62000
	0x035D69D4 LDR X0, [X0 + 0xCA8]
	0x035D69D8 BL 0x1C16CF4
	0x035D69DC ADRP X0, 0xB62000
	0x035D69E0 LDR X0, [X0 + 0xDC8]
	0x035D69E4 BL 0x1C16CF4
	0x035D69E8 ADRP X0, 0xB21000
	0x035D69EC LDR X0, [X0 + 0x928]
	0x035D69F0 BL 0x1C16CF4
	0x035D69F4 ADRP X0, 0xB62000
	0x035D69F8 LDR X0, [X0 + 0xDD0]
	0x035D69FC BL 0x1C16CF4
	0x035D6A00 ADRP X0, 0xB62000
	0x035D6A04 LDR X0, [X0 + 0xDD8]
	0x035D6A08 BL 0x1C16CF4
	0x035D6A0C ADRP X0, 0xB47000
	0x035D6A10 LDR X0, [X0 + 0x3A8]
	0x035D6A14 BL 0x1C16CF4
	0x035D6A18 ADRP X0, 0xB62000
	0x035D6A1C LDR X0, [X0 + 0xDE0]
	0x035D6A20 BL 0x1C16CF4
	0x035D6A24 ADRP X0, 0xB28000
	0x035D6A28 LDR X0, [X0 + 0xCD8]
	0x035D6A2C BL 0x1C16CF4
	0x035D6A30 ADRP X0, 0xB1D000
	0x035D6A34 LDR X0, [X0 + 0x988]
	0x035D6A38 BL 0x1C16CF4
	0x035D6A3C ADRP X0, 0xB62000
	0x035D6A40 LDR X0, [X0 + 0xDE8]
	0x035D6A44 BL 0x1C16CF4
	0x035D6A48 MOVZ W8, 0x1
	0x035D6A4C STRB W8, [X26 + 0x22C]
	0x035D6A50 LDR X0, [X25]
	0x035D6A54 STP X31, X31, [X31 + 0x40]
	0x035D6A58 STR X31, [X31 + 0x50]
	0x035D6A5C STP X31, X31, [X31 + 0x30]
	0x035D6A60 STP X31, X31, [X31 + 0x20]
	0x035D6A64 BL 0x1C16F10
	0x035D6A68 LDR X1, [X22]
	0x035D6A6C MOV X22, X0
	0x035D6A70 BL 0x301B7C4
	0x035D6A74 LDR X0, [X23]
	0x035D6A78 BL 0x1C16F10
	0x035D6A7C LDR X1, [X20]
	0x035D6A80 MOV X23, X0
	0x035D6A84 BL 0x2DBDE08
	0x035D6A88 CBZ X24, 0x35D6FBC
	0x035D6A8C ADRP X8, 0xB44000
	0x035D6A90 LDR X8, [X8 + 0xFE0]
	0x035D6A94 ADRP X25, 0xB44000
	0x035D6A98 ADRP X28, 0xB1E000
	0x035D6A9C ADRP X29, 0xB62000
	0x035D6AA0 ADRP X20, 0xB46000
	0x035D6AA4 ADRP X26, 0xB62000
	0x035D6AA8 ADRP X27, 0xB62000
	0x035D6AAC LDR X25, [X25 + 0xFD0]
	0x035D6AB0 LDR X28, [X28 + 0x1B0]
	0x035D6AB4 LDR X29, [X29 + 0xDB8]
	0x035D6AB8 LDR X20, [X20 + 0x580]
	0x035D6ABC LDR X26, [X26 + 0x18]
	0x035D6AC0 LDR X27, [X27 + 0xDC0]
	0x035D6AC4 LDR X1, [X8]
	0x035D6AC8 ADD X8, X31, 0x8
	0x035D6ACC MOV X0, X24
	0x035D6AD0 BL 0x301CB58
	0x035D6AD4 LDUR V0, [X31 + 0x8]
	0x035D6AD8 LDR X8, [X31 + 0x18]
	0x035D6ADC STR V0, [X31 + 0x4]
	0x035D6AE0 STR X8, [X31 + 0x50]
	0x035D6AE4 LDR X1, [X25]
	0x035D6AE8 ADD X0, X31, 0x40
	0x035D6AEC BL 0x2BC4350
	0x035D6AF0 TBZ X0, 0x0, 0x35D6CA0
	0x035D6AF4 CBZ X21, 0x35D6FAC
	0x035D6AF8 LDR X8, [X21]
	0x035D6AFC LDR X24, [X31 + 0x50]
	0x035D6B00 LDR X1, [X28]
	0x035D6B04 LDRH W9, [X8 + 0x12E]
	0x035D6B08 CBZ X9, 0x35D6B2C
	0x035D6B0C LDR X10, [X8 + 0xB0]
	0x035D6B10 ADD X10, X10, 0x8
	0x035D6B14 LDUR X11, [X10 - 0x8]
	0x035D6B18 CMP X11, X1
	0x035D6B1C B.EQ 0x35D6B3C
	0x035D6B20 SUBS X9, X9, 0x1
	0x035D6B24 ADD X10, X10, 0x10
	0x035D6B28 B.NE 0x35D6B14
	0x035D6B2C MOVZ W2, 0x16
	0x035D6B30 MOV X0, X21
	0x035D6B34 BL 0x1C5C788
	0x035D6B38 B 0x35D6B4C
	0x035D6B3C LDR W9, [X10]
	0x035D6B40 ADD W9, W9, 0x16
	0x035D6B44 ADD X8, X8, W9, 0x4, SXTW
	0x035D6B48 ADD X0, X8, 0x138
	0x035D6B4C LDP X8, X3, [X0]
	0x035D6B50 ADD X2, X31, 0x38
	0x035D6B54 MOV X0, X21
	0x035D6B58 MOV X1, X24
	0x035D6B5C BLR X8
	0x035D6B60 TBZ X0, 0x0, 0x35D6AE4
	0x035D6B64 CBZ X22, 0x35D6FB4
	0x035D6B68 LDR W10, [X22 + 0x1C]
	0x035D6B6C LDR X1, [X31 + 0x38]
	0x035D6B70 LDR X8, [X22 + 0x10]
	0x035D6B74 LDR X9, [X29]
	0x035D6B78 ADD W10, W10, 0x1
	0x035D6B7C STR W10, [X22 + 0x1C]
	0x035D6B80 CBZ X8, 0x35D6FB8
	0x035D6B84 LDRSW X10, [X22 + 0x18]
	0x035D6B88 LDR W11, [X8 + 0x18]
	0x035D6B8C CMP W10, W11
	0x035D6B90 B.CS 0x35D6BA8
	0x035D6B94 ADD W9, W10, 0x1
	0x035D6B98 ADD X8, X8, X10, 0x3, LSL
	0x035D6B9C STR W9, [X22 + 0x18]
	0x035D6BA0 STR X1, [X8 + 0x20]
	0x035D6BA4 B 0x35D6BBC
	0x035D6BA8 LDR X8, [X9 + 0x20]
	0x035D6BAC LDR X8, [X8 + 0xC0]
	0x035D6BB0 LDR X2, [X8 + 0x70]
	0x035D6BB4 MOV X0, X22
	0x035D6BB8 BL 0x301BF90
	0x035D6BBC LDR X24, [X31 + 0x38]
	0x035D6BC0 CBZ X24, 0x35D6FB0
	0x035D6BC4 LDR X8, [X24]
	0x035D6BC8 LDR X1, [X28]
	0x035D6BCC LDRH W9, [X8 + 0x12E]
	0x035D6BD0 CBZ X9, 0x35D6BF4
	0x035D6BD4 LDR X10, [X8 + 0xB0]
	0x035D6BD8 ADD X10, X10, 0x8
	0x035D6BDC LDUR X11, [X10 - 0x8]
	0x035D6BE0 CMP X11, X1
	0x035D6BE4 B.EQ 0x35D6C04
	0x035D6BE8 SUBS X9, X9, 0x1
	0x035D6BEC ADD X10, X10, 0x10
	0x035D6BF0 B.NE 0x35D6BDC
	0x035D6BF4 MOVZ W2, 0x4
	0x035D6BF8 MOV X0, X24
	0x035D6BFC BL 0x1C5C788
	0x035D6C00 B 0x35D6C14
	0x035D6C04 LDR W9, [X10]
	0x035D6C08 ADD W9, W9, 0x4
	0x035D6C0C ADD X8, X8, W9, 0x4, SXTW
	0x035D6C10 ADD X0, X8, 0x138
	0x035D6C14 LDP X8, X1, [X0]
	0x035D6C18 MOV X0, X24
	0x035D6C1C BLR X8
	0x035D6C20 CBZ X0, 0x35D6AE4
	0x035D6C24 LDR X24, [X31 + 0x38]
	0x035D6C28 CBZ X24, 0x35D6FC8
	0x035D6C2C LDR X8, [X24]
	0x035D6C30 LDR X1, [X28]
	0x035D6C34 LDRH W9, [X8 + 0x12E]
	0x035D6C38 CBZ X9, 0x35D6C5C
	0x035D6C3C LDR X10, [X8 + 0xB0]
	0x035D6C40 ADD X10, X10, 0x8
	0x035D6C44 LDUR X11, [X10 - 0x8]
	0x035D6C48 CMP X11, X1
	0x035D6C4C B.EQ 0x35D6C6C
	0x035D6C50 SUBS X9, X9, 0x1
	0x035D6C54 ADD X10, X10, 0x10
	0x035D6C58 B.NE 0x35D6C44
	0x035D6C5C MOVZ W2, 0x4
	0x035D6C60 MOV X0, X24
	0x035D6C64 BL 0x1C5C788
	0x035D6C68 B 0x35D6C7C
	0x035D6C6C LDR W9, [X10]
	0x035D6C70 ADD W9, W9, 0x4
	0x035D6C74 ADD X8, X8, W9, 0x4, SXTW
	0x035D6C78 ADD X0, X8, 0x138
	0x035D6C7C LDP X8, X1, [X0]
	0x035D6C80 MOV X0, X24
	0x035D6C84 BLR X8
	0x035D6C88 MOV X1, X0
	0x035D6C8C CBZ X23, 0x35D6FC4
	0x035D6C90 LDR X2, [X20]
	0x035D6C94 MOV X0, X23
	0x035D6C98 BL 0x2DBEF30
	0x035D6C9C B 0x35D6AE4
	0x035D6CA0 ADRP X8, 0xB44000
	0x035D6CA4 LDR X8, [X8 + 0xFC8]
	0x035D6CA8 ADD X0, X31, 0x40
	0x035D6CAC LDR X1, [X8]
	0x035D6CB0 BL 0x2BC434C
	0x035D6CB4 CBZ X23, 0x35D6FBC
	0x035D6CB8 ADRP X8, 0xB62000
	0x035D6CBC LDR X8, [X8 + 0x28]
	0x035D6CC0 MOV X0, X23
	0x035D6CC4 LDR X1, [X8]
	0x035D6CC8 ADD X8, X31, 0x8
	0x035D6CCC BL 0x2DBE924
	0x035D6CD0 LDUR V0, [X31 + 0x8]
	0x035D6CD4 LDR X8, [X31 + 0x18]
	0x035D6CD8 STR V0, [X31 + 0x2]
	0x035D6CDC STR X8, [X31 + 0x30]
	0x035D6CE0 LDR X1, [X26]
	0x035D6CE4 ADD X0, X31, 0x20
	0x035D6CE8 BL 0x2BC3C64
	0x035D6CEC TBZ X0, 0x0, 0x35D6D08
	0x035D6CF0 CBZ X22, 0x35D6FA8
	0x035D6CF4 LDR X1, [X31 + 0x30]
	0x035D6CF8 LDR X2, [X27]
	0x035D6CFC MOV X0, X22
	0x035D6D00 BL 0x301D7A8
	0x035D6D04 B 0x35D6CE0
	0x035D6D08 ADRP X8, 0xB62000
	0x035D6D0C LDR X8, [X8 + 0x10]
	0x035D6D10 ADD X0, X31, 0x20
	0x035D6D14 LDR X1, [X8]
	0x035D6D18 BL 0x2BC3C60
	0x035D6D1C CBZ X21, 0x35D6FBC
	0x035D6D20 LDR X8, [X21]
	0x035D6D24 ADRP X24, 0xB1D000
	0x035D6D28 LDR X1, [X28]
	0x035D6D2C LDRH W9, [X8 + 0x12E]
	0x035D6D30 LDR X24, [X24 + 0xAC8]
	0x035D6D34 CBZ X9, 0x35D6D58
	0x035D6D38 LDR X10, [X8 + 0xB0]
	0x035D6D3C ADD X10, X10, 0x8
	0x035D6D40 LDUR X11, [X10 - 0x8]
	0x035D6D44 CMP X11, X1
	0x035D6D48 B.EQ 0x35D6D68
	0x035D6D4C SUBS X9, X9, 0x1
	0x035D6D50 ADD X10, X10, 0x10
	0x035D6D54 B.NE 0x35D6D40
	0x035D6D58 MOVZ W2, 0x11
	0x035D6D5C MOV X0, X21
	0x035D6D60 BL 0x1C5C788
	0x035D6D64 B 0x35D6D78
	0x035D6D68 LDR W9, [X10]
	0x035D6D6C ADD W9, W9, 0x11
	0x035D6D70 ADD X8, X8, W9, 0x4, SXTW
	0x035D6D74 ADD X0, X8, 0x138
	0x035D6D78 LDP X8, X3, [X0]
	0x035D6D7C MOV X0, X21
	0x035D6D80 MOV X1, X22
	0x035D6D84 MOV W2, W31
	0x035D6D88 BLR X8
	0x035D6D8C ADRP X8, 0xB62000
	0x035D6D90 LDR X8, [X8 + 0xCA8]
	0x035D6D94 MOV X22, X0
	0x035D6D98 LDR X8, [X8]
	0x035D6D9C LDR W9, [X8 + 0xE0]
	0x035D6DA0 CBNZ W9, 0x35D6DAC
	0x035D6DA4 MOV X0, X8
	0x035D6DA8 BL 0x1C16DFC
	0x035D6DAC MOV X0, X22
	0x035D6DB0 BL 0x35D8C04
	0x035D6DB4 CBZ X0, 0x35D6FBC
	0x035D6DB8 LDR X8, [X0]
	0x035D6DBC MOVZ W1, 0x2
	0x035D6DC0 LDR X9, [X8 + 0x318]
	0x035D6DC4 LDR X2, [X8 + 0x320]
	0x035D6DC8 BLR X9
	0x035D6DCC MOV X22, X0
	0x035D6DD0 MOV X0, X21
	0x035D6DD4 MOV X1, X31
	0x035D6DD8 BL 0x33BE520
	0x035D6DDC CBZ X0, 0x35D6FBC
	0x035D6DE0 LDR X8, [X0]
	0x035D6DE4 LDR X9, [X8 + 0x2E8]
	0x035D6DE8 LDR X1, [X8 + 0x2F0]
	0x035D6DEC BLR X9
	0x035D6DF0 BL 0x35D6624
	0x035D6DF4 MOV X21, X0
	0x035D6DF8 LDR X0, [X31]
	0x035D6DFC CBZ X0, 0x35D6FBC
	0x035D6E00 ADRP X8, 0xB62000
	0x035D6E04 LDR X8, [X8 + 0xDD8]
	0x035D6E08 MOV X3, X31
	0x035D6E0C LDR X1, [X8]
	0x035D6E10 ADRP X8, 0xB1D000
	0x035D6E14 LDR X8, [X8 + 0x988]
	0x035D6E18 LDR X2, [X8]
	0x035D6E1C BL 0x32293BC
	0x035D6E20 LDR X8, [X24]
	0x035D6E24 LDR X20, [X19]
	0x035D6E28 MOV X23, X0
	0x035D6E2C MOVZ W1, 0x5
	0x035D6E30 MOV X0, X8
	0x035D6E34 BL 0x1C16D6C
	0x035D6E38 CBZ X0, 0x35D6FBC
	0x035D6E3C LDR W8, [X0 + 0x18]
	0x035D6E40 CBZ W8, 0x35D6FC0
	0x035D6E44 ADRP X9, 0xB62000
	0x035D6E48 LDR X9, [X9 + 0xDE0]
	0x035D6E4C CMP W8, 0x1
	0x035D6E50 LDR X9, [X9]
	0x035D6E54 STR X9, [X0 + 0x20]
	0x035D6E58 B.EQ 0x35D6FC0
	0x035D6E5C CMP W8, 0x2
	0x035D6E60 STR X21, [X0 + 0x28]
	0x035D6E64 B.LS 0x35D6FC0
	0x035D6E68 ADRP X9, 0xB62000
	0x035D6E6C LDR X9, [X9 + 0xDC8]
	0x035D6E70 CMP W8, 0x3
	0x035D6E74 LDR X9, [X9]
	0x035D6E78 STR X9, [X0 + 0x30]
	0x035D6E7C B.EQ 0x35D6FC0
	0x035D6E80 CMP W8, 0x4
	0x035D6E84 STR X23, [X0 + 0x38]
	0x035D6E88 B.LS 0x35D6FC0
	0x035D6E8C ADRP X8, 0xB28000
	0x035D6E90 LDR X8, [X8 + 0xCD8]
	0x035D6E94 MOV X1, X31
	0x035D6E98 LDR X8, [X8]
	0x035D6E9C STR X8, [X0 + 0x40]
	0x035D6EA0 BL 0x32278CC
	0x035D6EA4 CBZ X20, 0x35D6FBC
	0x035D6EA8 MOV X1, X0
	0x035D6EAC MOV X0, X20
	0x035D6EB0 MOV X2, X31
	0x035D6EB4 BL 0x32338A8
	0x035D6EB8 LDR X0, [X19]
	0x035D6EBC CBZ X0, 0x35D6FBC
	0x035D6EC0 MOV X1, X31
	0x035D6EC4 BL 0x3233888
	0x035D6EC8 LDR X0, [X19]
	0x035D6ECC CBZ X0, 0x35D6FBC
	0x035D6ED0 ADRP X8, 0xB62000
	0x035D6ED4 LDR X8, [X8 + 0xDD0]
	0x035D6ED8 MOV X2, X31
	0x035D6EDC LDR X1, [X8]
	0x035D6EE0 BL 0x32338A8
	0x035D6EE4 LDR X0, [X24]
	0x035D6EE8 LDR X20, [X19]
	0x035D6EEC MOVZ W1, 0x5
	0x035D6EF0 BL 0x1C16D6C
	0x035D6EF4 CBZ X0, 0x35D6FBC
	0x035D6EF8 LDR W8, [X0 + 0x18]
	0x035D6EFC CBZ W8, 0x35D6FC0
	0x035D6F00 ADRP X9, 0xB62000
	0x035D6F04 LDR X9, [X9 + 0xDE8]
	0x035D6F08 CMP W8, 0x1
	0x035D6F0C LDR X9, [X9]
	0x035D6F10 STR X9, [X0 + 0x20]
	0x035D6F14 B.EQ 0x35D6FC0
	0x035D6F18 CMP W8, 0x2
	0x035D6F1C STR X21, [X0 + 0x28]
	0x035D6F20 B.LS 0x35D6FC0
	0x035D6F24 ADRP X9, 0xB21000
	0x035D6F28 LDR X9, [X9 + 0x928]
	0x035D6F2C CMP W8, 0x3
	0x035D6F30 LDR X9, [X9]
	0x035D6F34 STR X9, [X0 + 0x30]
	0x035D6F38 B.EQ 0x35D6FC0
	0x035D6F3C CMP W8, 0x4
	0x035D6F40 STR X21, [X0 + 0x38]
	0x035D6F44 B.LS 0x35D6FC0
	0x035D6F48 ADRP X8, 0xB47000
	0x035D6F4C LDR X8, [X8 + 0x3A8]
	0x035D6F50 MOV X1, X31
	0x035D6F54 LDR X8, [X8]
	0x035D6F58 STR X8, [X0 + 0x40]
	0x035D6F5C BL 0x32278CC
	0x035D6F60 CBZ X20, 0x35D6FBC
	0x035D6F64 MOV X1, X0
	0x035D6F68 MOV X0, X20
	0x035D6F6C MOV X2, X31
	0x035D6F70 BL 0x32333E0
	0x035D6F74 LDR X0, [X19]
	0x035D6F78 CBZ X0, 0x35D6FBC
	0x035D6F7C MOV X1, X22
	0x035D6F80 MOV X2, X31
	0x035D6F84 BL 0x32338A8
	0x035D6F88 LDP X20, X19, [X31 + 0xB0]
	0x035D6F8C LDP X22, X21, [X31 + 0xA0]
	0x035D6F90 LDP X24, X23, [X31 + 0x90]
	0x035D6F94 LDP X26, X25, [X31 + 0x80]
	0x035D6F98 LDP X28, X27, [X31 + 0x70]
	0x035D6F9C LDP X29, X30, [X31 + 0x60]
	0x035D6FA0 ADD X31, X31, 0xC0
	0x035D6FA4 RET
	0x035D6FA8 BL 0x1C16F20
	0x035D6FAC BL 0x1C16F20
	0x035D6FB0 BL 0x1C16F20
	0x035D6FB4 BL 0x1C16F20
	0x035D6FB8 BL 0x1C16F20
	0x035D6FBC BL 0x1C16F20
	0x035D6FC0 BL 0x1C16F28
	0x035D6FC4 BL 0x1C16F20
	0x035D6FC8 BL 0x1C16F20
	0x035D6FCC B 0x35D7064
	0x035D6FD0 B 0x35D7064
	0x035D6FD4 B 0x35D7064
	0x035D6FD8 B 0x35D7064
	0x035D6FDC B 0x35D7064
	0x035D6FE0 B 0x35D7064
	0x035D6FE4 B 0x35D7064
	0x035D6FE8 B 0x35D7064
	0x035D6FEC B 0x35D7064
	0x035D6FF0 B 0x35D6FFC
	0x035D6FF4 B 0x35D6FFC
	0x035D6FF8 B 0x35D7064
	0x035D6FFC MOV X20, X0
	0x035D7000 CMP W1, 0x1
	0x035D7004 B.NE 0x35D7038
	0x035D7008 MOV X0, X20
	0x035D700C BL 0x3EB1AD0
	0x035D7010 LDR X23, [X0]
	0x035D7014 BL 0x3EB1AE0
	0x035D7018 ADRP X8, 0xB61000
	0x035D701C LDR X8, [X8 + 0x10]
	0x035D7020 ADD X0, X31, 0x20
	0x035D7024 LDR X1, [X8]
	0x035D7028 BL 0x2BC3C60
	0x035D702C CBZ X23, 0x35D6D1C
	0x035D7030 MOV X0, X23
	0x035D7034 BL 0x1C16F18
	0x035D7038 MOV X23, X31
	0x035D703C B 0x35D7044
	0x035D7040 MOV X20, X0
	0x035D7044 ADRP X8, 0xB61000
	0x035D7048 LDR X8, [X8 + 0x10]
	0x035D704C LDR X1, [X8]
	0x035D7050 ADD X0, X31, 0x20
	0x035D7054 BL 0x2BC3C60
	0x035D7058 CBZ X23, 0x35D70C4
	0x035D705C MOV X0, X23
	0x035D7060 BL 0x1C16F18
	0x035D7064 MOV X20, X0
	0x035D7068 CMP W1, 0x1
	0x035D706C B.NE 0x35D70A0
	0x035D7070 MOV X0, X20
	0x035D7074 BL 0x3EB1AD0
	0x035D7078 LDR X24, [X0]
	0x035D707C BL 0x3EB1AE0
	0x035D7080 ADRP X8, 0xB43000
	0x035D7084 LDR X8, [X8 + 0xFC8]
	0x035D7088 ADD X0, X31, 0x40
	0x035D708C LDR X1, [X8]
	0x035D7090 BL 0x2BC434C
	0x035D7094 CBZ X24, 0x35D6CB4
	0x035D7098 MOV X0, X24
	0x035D709C BL 0x1C16F18
	0x035D70A0 MOV X24, X31
	0x035D70A4 B 0x35D70AC
	0x035D70A8 MOV X20, X0
	0x035D70AC ADRP X8, 0xB43000
	0x035D70B0 LDR X8, [X8 + 0xFC8]
	0x035D70B4 LDR X1, [X8]
	0x035D70B8 ADD X0, X31, 0x40
	0x035D70BC BL 0x2BC434C
	0x035D70C0 CBNZ X24, 0x35D70CC
	0x035D70C4 MOV X0, X20
	0x035D70C8 BL 0x1D2C690
	0x035D70CC MOV X0, X24
	0x035D70D0 BL 0x1C16F18
	0x035D70D4 BL 0x1990590
	0x035D70D8 STR X30, [X31 - 0x50]!
	0x035D70DC STP X26, X25, [X31 + 0x10]
	0x035D70E0 STP X24, X23, [X31 + 0x20]
	0x035D70E4 STP X22, X21, [X31 + 0x30]
	0x035D70E8 STP X20, X19, [X31 + 0x40]
	0x035D70EC ADRP X22, 0xE09000
	0x035D70F0 ADRP X24, 0xB1C000
	0x035D70F4 LDRB W8, [X22 + 0x226]
	0x035D70F8 LDR X24, [X24 + 0x8F0]
	0x035D70FC MOV X20, X3
	0x035D7100 MOV X21, X2
	0x035D7104 MOV X19, X1
	0x035D7108 MOV X23, X0
	0x035D710C TBNZ X8, 0x0, 0x35D7130
	0x035D7110 ADRP X0, 0xB1C000
	0x035D7114 LDR X0, [X0 + 0x8F0]
	0x035D7118 BL 0x1C16CF4
	0x035D711C ADRP X0, 0xB61000
	0x035D7120 LDR X0, [X0 + 0xCA8]
	0x035D7124 BL 0x1C16CF4
	0x035D7128 MOVZ W8, 0x1
	0x035D712C STRB W8, [X22 + 0x226]
	0x035D7130 LDR X0, [X24]
	0x035D7134 BL 0x1C16F10
	0x035D7138 MOV X1, X31
	0x035D713C MOV X22, X0
	0x035D7140 BL 0x3231AC4
	0x035D7144 CBZ X22, 0x35D71F0
	0x035D7148 MOV X0, X22
	0x035D714C MOV X1, X23
	0x035D7150 MOV X2, X31
	0x035D7154 BL 0x32338A8
	0x035D7158 CBZ X21, 0x35D71F0
	0x035D715C LDR X8, [X21 + 0x18]
	0x035D7160 CMP W8, 0x1
	0x035D7164 B.LT 0x35D71B8
	0x035D7168 ADRP X25, 0xB61000
	0x035D716C LDR X25, [X25 + 0xCA8]
	0x035D7170 MOV X24, X31
	0x035D7174 AND X8, X8, 0x0
	0x035D7178 ADD X26, X21, 0x20
	0x035D717C CMP X24, W8, UXTW
	0x035D7180 B.CS 0x35D71EC
	0x035D7184 LDR X0, [X25]
	0x035D7188 LDR X23, [X26, X24, LSL #3]
	0x035D718C LDR W8, [X0 + 0xE0]
	0x035D7190 CBNZ W8, 0x35D7198
	0x035D7194 BL 0x1C16DFC
	0x035D7198 MOV X0, X22
	0x035D719C MOV X1, X23
	0x035D71A0 MOV X2, X20
	0x035D71A4 BL 0x35D71F4
	0x035D71A8 LDR W8, [X21 + 0x18]
	0x035D71AC ADD X24, X24, 0x1
	0x035D71B0 CMP X24, W8, SXTW
	0x035D71B4 B.LT 0x35D717C
	0x035D71B8 LDR X8, [X22]
	0x035D71BC MOV X0, X22
	0x035D71C0 LDP X9, X1, [X8 + 0x168]
	0x035D71C4 BLR X9
	0x035D71C8 MOV X1, X0
	0x035D71CC MOV X0, X19
	0x035D71D0 LDP X20, X19, [X31 + 0x40]
	0x035D71D4 LDP X22, X21, [X31 + 0x30]
	0x035D71D8 LDP X24, X23, [X31 + 0x20]
	0x035D71DC LDP X26, X25, [X31 + 0x10]
	0x035D71E0 MOV X2, X31
	0x035D71E4 LDR X30, [X31], #0x50
	0x035D71E8 B 0x32ED528
	0x035D71EC BL 0x1C16F28
	0x035D71F0 BL 0x1C16F20
	0x035D71F4 STP X29, X30, [X31 - 0x60]!
	0x035D71F8 STP X28, X27, [X31 + 0x10]
	0x035D71FC STP X26, X25, [X31 + 0x20]
	0x035D7200 STP X24, X23, [X31 + 0x30]
	0x035D7204 STP X22, X21, [X31 + 0x40]
	0x035D7208 STP X20, X19, [X31 + 0x50]
	0x035D720C ADRP X22, 0xE09000
	0x035D7210 LDRB W8, [X22 + 0x231]
	0x035D7214 MOV X19, X2
	0x035D7218 MOV X21, X1
	0x035D721C MOV X20, X0
	0x035D7220 TBNZ X8, 0x0, 0x35D72EC
	0x035D7224 ADRP X0, 0xB61000
	0x035D7228 LDR X0, [X0 + 0xDF0]
	0x035D722C BL 0x1C16CF4
	0x035D7230 ADRP X0, 0xB1C000
	0x035D7234 LDR X0, [X0 + 0xEB8]
	0x035D7238 BL 0x1C16CF4
	0x035D723C ADRP X0, 0xB61000
	0x035D7240 LDR X0, [X0 + 0xDF8]
	0x035D7244 BL 0x1C16CF4
	0x035D7248 ADRP X0, 0xB1C000
	0x035D724C LDR X0, [X0 + 0xAC8]
	0x035D7250 BL 0x1C16CF4
	0x035D7254 ADRP X0, 0xB61000
	0x035D7258 LDR X0, [X0 + 0xCA8]
	0x035D725C BL 0x1C16CF4
	0x035D7260 ADRP X0, 0xB61000
	0x035D7264 LDR X0, [X0 + 0xE00]
	0x035D7268 BL 0x1C16CF4
	0x035D726C ADRP X0, 0xB61000
	0x035D7270 LDR X0, [X0 + 0xD28]
	0x035D7274 BL 0x1C16CF4
	0x035D7278 ADRP X0, 0xB61000
	0x035D727C LDR X0, [X0 + 0xE08]
	0x035D7280 BL 0x1C16CF4
	0x035D7284 ADRP X0, 0xB20000
	0x035D7288 LDR X0, [X0 + 0x928]
	0x035D728C BL 0x1C16CF4
	0x035D7290 ADRP X0, 0xB27000
	0x035D7294 LDR X0, [X0 + 0x6D8]
	0x035D7298 BL 0x1C16CF4
	0x035D729C ADRP X0, 0xB1C000
	0x035D72A0 LDR X0, [X0 + 0x838]
	0x035D72A4 BL 0x1C16CF4
	0x035D72A8 ADRP X0, 0xB1E000
	0x035D72AC LDR X0, [X0 + 0x1A0]
	0x035D72B0 BL 0x1C16CF4
	0x035D72B4 ADRP X0, 0xB22000
	0x035D72B8 LDR X0, [X0 + 0x368]
	0x035D72BC BL 0x1C16CF4
	0x035D72C0 ADRP X0, 0xB27000
	0x035D72C4 LDR X0, [X0 + 0x310]
	0x035D72C8 BL 0x1C16CF4
	0x035D72CC ADRP X0, 0xB61000
	0x035D72D0 LDR X0, [X0 + 0xD38]
	0x035D72D4 BL 0x1C16CF4
	0x035D72D8 ADRP X0, 0xB1C000
	0x035D72DC LDR X0, [X0 + 0x988]
	0x035D72E0 BL 0x1C16CF4
	0x035D72E4 MOVZ W8, 0x1
	0x035D72E8 STRB W8, [X22 + 0x231]
	0x035D72EC CBZ X20, 0x35D770C
	0x035D72F0 ADRP X8, 0xB1C000
	0x035D72F4 LDR X8, [X8 + 0x988]
	0x035D72F8 MOV X0, X20
	0x035D72FC MOV X2, X31
	0x035D7300 LDR X1, [X8]
	0x035D7304 BL 0x32338A8
	0x035D7308 CBZ X21, 0x35D770C
	0x035D730C LDR X8, [X21]
	0x035D7310 ADRP X27, 0xB61000
	0x035D7314 ADRP X24, 0xB61000
	0x035D7318 ADRP X23, 0xB61000
	0x035D731C LDR X9, [X8 + 0x2E8]
	0x035D7320 LDR X1, [X8 + 0x2F0]
	0x035D7324 LDR X27, [X27 + 0xCA8]
	0x035D7328 LDR X24, [X24 + 0xD38]
	0x035D732C LDR X23, [X23 + 0xE08]
	0x035D7330 MOV X0, X21
	0x035D7334 BLR X9
	0x035D7338 LDR X8, [X27]
	0x035D733C MOV X22, X0
	0x035D7340 LDR W9, [X8 + 0xE0]
	0x035D7344 CBNZ W9, 0x35D7350
	0x035D7348 MOV X0, X8
	0x035D734C BL 0x1C16DFC
	0x035D7350 MOV X0, X22
	0x035D7354 BL 0x35D6624
	0x035D7358 LDR X8, [X24]
	0x035D735C LDR X2, [X23]
	0x035D7360 MOV X1, X0
	0x035D7364 MOV X3, X31
	0x035D7368 MOV X0, X8
	0x035D736C BL 0x32274B8
	0x035D7370 MOV X1, X0
	0x035D7374 MOV X0, X20
	0x035D7378 MOV X2, X31
	0x035D737C BL 0x32338A8
	0x035D7380 LDR X8, [X21]
	0x035D7384 MOVZ W1, 0x16
	0x035D7388 MOV X0, X21
	0x035D738C LDR X9, [X8 + 0x7E8]
	0x035D7390 LDR X2, [X8 + 0x7F0]
	0x035D7394 BLR X9
	0x035D7398 CBZ X0, 0x35D770C
	0x035D739C LDR W8, [X0 + 0x18]
	0x035D73A0 ADRP X28, 0xB1E000
	0x035D73A4 LDR X28, [X28 + 0x1A0]
	0x035D73A8 MOV X22, X0
	0x035D73AC CMP W8, 0x1
	0x035D73B0 B.LT 0x35D7480
	0x035D73B4 ADRP X26, 0xB20000
	0x035D73B8 LDR X26, [X26 + 0x928]
	0x035D73BC MOV W25, W31
	0x035D73C0 CMP W25, W8
	0x035D73C4 B.CS 0x35D7708
	0x035D73C8 ADD X8, X22, W25, 0x3, SXTW
	0x035D73CC LDR X23, [X8 + 0x20]
	0x035D73D0 CBZ X23, 0x35D770C
	0x035D73D4 LDR X8, [X23]
	0x035D73D8 MOVZ W2, 0x1
	0x035D73DC MOV X0, X23
	0x035D73E0 MOV X1, X19
	0x035D73E4 LDR X9, [X8 + 0x208]
	0x035D73E8 LDR X3, [X8 + 0x210]
	0x035D73EC BLR X9
	0x035D73F0 CBZ X0, 0x35D770C
	0x035D73F4 LDR X8, [X0 + 0x18]
	0x035D73F8 CBZ X8, 0x35D7470
	0x035D73FC LDR X8, [X23]
	0x035D7400 MOV X0, X23
	0x035D7404 LDP X9, X1, [X8 + 0x1A8]
	0x035D7408 BLR X9
	0x035D740C LDR X8, [X23]
	0x035D7410 MOV X24, X0
	0x035D7414 MOV X0, X23
	0x035D7418 LDR X9, [X8 + 0x248]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X28
	005 Move [X31+248], X27
	006 Move [X31+256], X26
	007 Move [X31+264], X25
	008 Move [X31+272], X24
	009 Move [X31+280], X23
	010 Move [X31+288], X22
	011 Move [X31+296], X21
	012 Move [X31+304], X20
	013 Move [X31+312], X19
	014 Move [X31+96], X6
	015 Move [X31+108], W3
	016 Move [X31+112], X2
	017 Move [X31+64], X1
	018 Move X28, 0xE0B000
	019 Move X27, 0xB63000
	020 Move X26, 0xB63000
	021 Move X25, 0xB28000
	022 Move X24, 0xB28000
	023 Move X23, 0xB1F000
	024 Move X21, 0xB1F000
	025 Move X27, [X27+3256]
	026 Move W8, [X28+551]
	027 Move X26, [X26+3264]
	028 Move X25, [X25+2336]
	029 Move X24, [X24+2344]
	030 Move X23, [X23+3120]
	031 Move X21, [X21+3112]
	032 Move X19, X5
	033 Move X22, X4
	034 Move X20, X0
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {155}
	039 Move X0, 0xB1E000
	040 Move X0, [X0+2600]
	041 Call 0x1C17CF4
	042 Move X0, 0xB63000
	043 Move X0, [X0+3272]
	044 Call 0x1C17CF4
	045 Move X0, 0xB28000
	046 Move X0, [X0+2456]
	047 Call 0x1C17CF4
	048 Move X0, 0xB63000
	049 Move X0, [X0+3280]
	050 Call 0x1C17CF4
	051 Move X0, 0xB63000
	052 Move X0, [X0+3288]
	053 Call 0x1C17CF4
	054 Move X0, 0xB28000
	055 Move X0, [X0+2464]
	056 Call 0x1C17CF4
	057 Move X0, 0xB63000
	058 Move X0, [X0+3296]
	059 Call 0x1C17CF4
	060 Move X0, 0xB28000
	061 Move X0, [X0+2472]
	062 Call 0x1C17CF4
	063 Move X0, 0xB63000
	064 Move X0, [X0+1664]
	065 Call 0x1C17CF4
	066 Move X0, 0xB1F000
	067 Move X0, [X0+3104]
	068 Call 0x1C17CF4
	069 Move X0, 0xB63000
	070 Move X0, [X0+3304]
	071 Call 0x1C17CF4
	072 Move X0, 0xB1F000
	073 Move X0, [X0+3112]
	074 Call 0x1C17CF4
	075 Move X0, 0xB1F000
	076 Move X0, [X0+3120]
	077 Call 0x1C17CF4
	078 Move X0, 0xB63000
	079 Move X0, [X0+3312]
	080 Call 0x1C17CF4
	081 Move X0, 0xB28000
	082 Move X0, [X0+2360]
	083 Call 0x1C17CF4
	084 Move X0, 0xB1F000
	085 Move X0, [X0+440]
	086 Call 0x1C17CF4
	087 Move X0, 0xB63000
	088 Move X0, [X0+3320]
	089 Call 0x1C17CF4
	090 Move X0, 0xB28000
	091 Move X0, [X0+2520]
	092 Call 0x1C17CF4
	093 Move X0, 0xB63000
	094 Move X0, [X0+3264]
	095 Call 0x1C17CF4
	096 Move X0, 0xB28000
	097 Move X0, [X0+2344]
	098 Call 0x1C17CF4
	099 Move X0, 0xB28000
	100 Move X0, [X0+2336]
	101 Call 0x1C17CF4
	102 Move X0, 0xB63000
	103 Move X0, [X0+3256]
	104 Call 0x1C17CF4
	105 Move X0, 0xB63000
	106 Move X0, [X0+3328]
	107 Call 0x1C17CF4
	108 Move X0, 0xB63000
	109 Move X0, [X0+3336]
	110 Call 0x1C17CF4
	111 Move X0, 0xB63000
	112 Move X0, [X0+3344]
	113 Call 0x1C17CF4
	114 Move X0, 0xB63000
	115 Move X0, [X0+3352]
	116 Call 0x1C17CF4
	117 Move X0, 0xB63000
	118 Move X0, [X0+3240]
	119 Call 0x1C17CF4
	120 Move X0, 0xB1E000
	121 Move X0, [X0+1728]
	122 Call 0x1C17CF4
	123 Move X0, 0xB63000
	124 Move X0, [X0+3360]
	125 Call 0x1C17CF4
	126 Move X0, 0xB63000
	127 Move X0, [X0+3368]
	128 Call 0x1C17CF4
	129 Move X0, 0xB22000
	130 Move X0, [X0+2344]
	131 Call 0x1C17CF4
	132 Move X0, 0xB63000
	133 Move X0, [X0+1648]
	134 Call 0x1C17CF4
	135 Move X0, 0xB63000
	136 Move X0, [X0+3376]
	137 Call 0x1C17CF4
	138 Move X0, 0xB29000
	139 Move X0, [X0+1752]
	140 Call 0x1C17CF4
	141 Move X0, 0xB1F000
	142 Move X0, [X0+3784]
	143 Call 0x1C17CF4
	144 Move X0, 0xB63000
	145 Move X0, [X0+3384]
	146 Call 0x1C17CF4
	147 Move X0, 0xB63000
	148 Move X0, [X0+3392]
	149 Call 0x1C17CF4
	150 Move X0, 0xB1E000
	151 Move X0, [X0+2440]
	152 Call 0x1C17CF4
	153 Move W8, 1
	154 Move [X28+551], W8
	155 Move W1, 32
	156 Move W2, 2
	157 Move X0, X31
	158 Move X3, X31
	159 Move [X31+208], X31
	160 Move [X31+216], X31
	161 Move [X31+176], X31
	162 Move [X31+184], X31
	163 Move [X31+192], X31
	164 Move [X31+144], X31
	165 Move [X31+152], X31
	166 Move [X31+160], X31
	167 Call String.CreateString, X0, X1, X2
	168 Move X8, [X27]
	169 Move [X31+40], X0
	170 Move X0, X8
	171 Call 0x1C17F10
	172 Move X1, [X26]
	173 Move [X31+80], X0
	174 Call List`1<Object>..ctor, X0
	175 Move X0, [X25]
	176 Call 0x1C17F10
	177 Move X1, [X24]
	178 Move [X31+72], X0
	179 Call List`1<Object>..ctor, X0
	180 Move X0, [X23]
	181 Call 0x1C17F10
	182 Move X1, [X21]
	183 Move [X31+88], X0
	184 Call HashSet`1<Object>..ctor, X0
	185 Move X24, [X31+64]
	186 Compare X24, 0
	187 JumpIfEqual {1241}
	188 Move X8, [X24]
	189 Move X21, 0xB63000
	190 Move X0, X24
	191 Move X9, [X8+744]
	192 Move X1, [X8+752]
	193 Move X21, [X21+3240]
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move X8, [X21]
	196 Move X21, X0
	197 Move W9, [X8+224]
	198 Compare W9, 0
	199 JumpIfNotEqual {202}
	200 Move X0, X8
	201 Call 0x1C17DFC
	202 Move X0, X21
	203 Call TypeScriptInterfaceGenerator.TypeNameToTS, X0
	204 Move X26, X0
	205 Move X0, X24
	206 Move X1, X31
	207 Call Type.get_IsClass, X0
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {228}
	212 Move X8, 0xB63000
	213 Move X9, 0xB63000
	214 Move X23, [X20]
	215 Move X8, [X8+3384]
	216 Move X9, [X9+3392]
	217 Move X1, X26
	218 Move X3, X31
	219 Move X0, [X8]
	220 Move X2, [X9]
	221 Call String.Concat, X0, X1, X2
	222 Compare X23, 0
	223 JumpIfEqual {1241}
	224 Move X1, X0
	225 Move X0, X23
	226 Move X2, X31
	227 Call StringBuilder.AppendLine, X0, X1
	228 Move X8, [X24]
	229 Move W1, 22
	230 Move X0, X24
	231 Move X9, [X8+2024]
	232 Move X2, [X8+2032]
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Compare X0, 0
	235 JumpIfEqual {1241}
	236 Move W8, [X0+24]
	237 Move X29, X0
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move [X31+16], X26
	240 Move [X31+48], X31
	241 Move X23, 0xB63000
	242 Move X28, 0xB63000
	243 Move X23, [X23+1648]
	244 Move X28, [X28+3272]
	245 Move X24, X31
	246 Move W27, W31
	247 Move W9, 1
	248 Move [X31+56], W9
	249 Move [X31+24], X20
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Add X8, X29, W27
	252 Move X25, [X8+32]
	253 Compare X25, 0
	254 JumpIfEqual {1241}
	255 Move X8, [X25]
	256 Move X0, X25
	257 Move X9, [X8+680]
	258 Move X1, [X8+688]
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move X1, X31
	261 Move X2, X31
	262 Call MethodInfo.op_Equality, X0, X1
	263 Move TEMP, X0
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfEqual {364}
	267 Move X8, [X25]
	268 Move X0, X25
	269 Move X9, [X8+424]
	270 Move X1, [X8+432]
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Move X1, [X23]
	273 Move X2, X31
	274 Call String.op_Equality, X0, X1
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfEqual {364}
	279 Move X21, 0xB63000
	280 Move X21, [X21+3240]
	281 Move X0, [X21]
	282 Move W8, [X0+224]
	283 Compare W8, 0
	284 JumpIfNotEqual {287}
	285 Call 0x1C17DFC
	286 Move X0, [X21]
	287 Move X8, [X0+184]
	288 Move X9, [X25]
	289 Move X0, X25
	290 Move X23, [X8+8]
	291 Move X8, [X9+584]
	292 Move X1, [X9+592]
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Compare X23, 0
	295 JumpIfEqual {1241}
	296 Move X8, [X23]
	297 Move X1, X0
	298 Move X0, X23
	299 Move X9, [X8+680]
	300 Move X2, [X8+688]
	301 NotImplemented "Instruction BLR not yet implemented."
	302 Move TEMP, X0
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfNotEqual {362}
	306 Move X8, [X25]
	307 Move X0, X25
	308 Move X9, [X8+536]
	309 Move X1, [X8+544]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move X21, 0xB63000
	312 Move X21, [X21+3368]
	313 Move X26, X0
	314 Move X8, [X21]
	315 Move W9, [X8+224]
	316 Compare W9, 0
	317 JumpIfNotEqual {321}
	318 Move X0, X8
	319 Call 0x1C17DFC
	320 Move X8, [X21]
	321 Move X9, [X8+184]
	322 Move X23, [X9+8]
	323 Compare X23, 0
	324 JumpIfNotEqual {354}
	325 Move W9, [X8+224]
	326 Move X20, X28
	327 Compare W9, 0
	328 JumpIfEqual {331}
	329 Move X28, 0xB63000
	330 Move X28, [X28+3368]
	331 Move X0, X8
	332 Call 0x1C17DFC
	333 Move X28, 0xB63000
	334 Move X28, [X28+3368]
	335 Move X8, [X28]
	336 Move X8, [X8+184]
	337 Move X21, [X8]
	338 Move X8, 0xB63000
	339 Move X8, [X8+1664]
	340 Move X0, [X8]
	341 Call 0x1C17F10
	342 Move X8, 0xB63000
	343 Move X8, [X8+3360]
	344 Move X1, X21
	345 Move X3, X31
	346 Move X23, X0
	347 Move X2, [X8]
	348 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	349 Move X8, [X28]
	350 Move X28, X20
	351 Move X20, [X31+24]
	352 Move X8, [X8+184]
	353 Move [X8+8], X23
	354 Move X2, [X28]
	355 Move X0, X26
	356 Move X1, X23
	357 Call Enumerable.Any, X0, X1
	358 Move TEMP, X0
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {369}
	362 Move X23, 0xB63000
	363 Move X23, [X23+1648]
	364 Move X26, X24
	365 Move W8, [X29+24]
	366 Add W27, W27, 1
	367 Move X24, X26
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move X23, [X31+112]
	370 Compare X23, 0
	371 JumpIfEqual {1241}
	372 Move X8, [X25]
	373 Move W21, [X23+16]
	374 Move X0, X25
	375 Move X9, [X8+424]
	376 Move X1, [X8+432]
	377 NotImplemented "Instruction BLR not yet implemented."
	378 Move X2, X0
	379 Compare W21, 0
	380 JumpIfEqual {388}
	381 Move X8, 0xB1F000
	382 Move X8, [X8+3784]
	383 Move X0, X23
	384 Move X3, X31
	385 Move X1, [X8]
	386 Call String.Concat, X0, X1, X2
	387 Move [X31+32], X0
	388 Move [X31+32], X2
	389 Move X8, [X25]
	390 Move X0, X25
	391 Move X9, [X8+584]
	392 Move X1, [X8+592]
	393 NotImplemented "Instruction BLR not yet implemented."
	394 Compare X0, 0
	395 JumpIfEqual {1241}
	396 Move X8, [X0]
	397 Move X9, [X8+968]
	398 Move X1, [X8+976]
	399 NotImplemented "Instruction BLR not yet implemented."
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfEqual {432}
	404 Move X8, [X25]
	405 Move X0, X25
	406 Move X9, [X8+584]
	407 Move X1, [X8+592]
	408 NotImplemented "Instruction BLR not yet implemented."
	409 Compare X0, 0
	410 JumpIfEqual {1241}
	411 Move X8, [X0]
	412 Move X9, [X8+2072]
	413 Move X1, [X8+2080]
	414 NotImplemented "Instruction BLR not yet implemented."
	415 NotImplemented "Instruction CMP not yet implemented."
	416 NotImplemented "Instruction CSEL not yet implemented."
	417 Compare X0, 0
	418 JumpIfEqual {457}
	419 Compare X26, 0
	420 JumpIfEqual {1241}
	421 Move X8, [X26]
	422 Move X23, X0
	423 Move X0, X26
	424 Move X9, [X8+968]
	425 Move X1, [X8+976]
	426 NotImplemented "Instruction BLR not yet implemented."
	427 Move X24, X23
	428 Move TEMP, X0
	429 And TEMP, TEMP, 1
	430 Compare TEMP, 1
	431 JumpIfNotEqual {457}
	432 Move X8, [X25]
	433 Move X0, X25
	434 Move X9, [X8+584]
	435 Move X1, [X8+592]
	436 NotImplemented "Instruction BLR not yet implemented."
	437 Compare X0, 0
	438 JumpIfEqual {1241}
	439 Move X8, [X0]
	440 Move X9, [X8+2072]
	441 Move X1, [X8+2080]
	442 NotImplemented "Instruction BLR not yet implemented."
	443 Move X8, [X31+48]
	444 NotImplemented "Instruction CMP not yet implemented."
	445 NotImplemented "Instruction CSEL not yet implemented."
	446 Move [X31+48], X8
	447 Compare X0, 0
	448 JumpIfEqual {565}
	449 Compare X8, 0
	450 JumpIfEqual {1241}
	451 Move X0, X8
	452 Move X8, [X8]
	453 Move X9, [X8+968]
	454 Move X1, [X8+976]
	455 NotImplemented "Instruction BLR not yet implemented."
	456 And W21, W0, 1
	457 Move X8, [X25]
	458 Move X0, X25
	459 Move X9, [X8+584]
	460 Move X1, [X8+592]
	461 NotImplemented "Instruction BLR not yet implemented."
	462 Move X8, 0xB63000
	463 Move X8, [X8+3240]
	464 Move X21, X0
	465 Move X8, [X8]
	466 Move W9, [X8+224]
	467 Compare W9, 0
	468 JumpIfNotEqual {471}
	469 Move X0, X8
	470 Call 0x1C17DFC
	471 Move X0, X21
	472 Call TypeScriptInterfaceGenerator.IsStateObject, X0
	473 Move TEMP, X0
	474 And TEMP, TEMP, 1
	475 Compare TEMP, 1
	476 JumpIfNotEqual {660}
	477 Move X8, [X25]
	478 Move X24, X28
	479 Move X28, [X20]
	480 Move X0, X25
	481 Move X9, [X8+424]
	482 Move X1, [X8+432]
	483 NotImplemented "Instruction BLR not yet implemented."
	484 Move X8, [X25]
	485 Move X23, X0
	486 Move X0, X25
	487 Move X9, [X8+584]
	488 Move X1, [X8+592]
	489 NotImplemented "Instruction BLR not yet implemented."
	490 Compare X0, 0
	491 JumpIfEqual {1241}
	492 Move X8, [X0]
	493 Move X9, [X8+744]
	494 Move X1, [X8+752]
	495 NotImplemented "Instruction BLR not yet implemented."
	496 Move X8, 0xB63000
	497 Move X8, [X8+3240]
	498 Move X21, X0
	499 Move X8, [X8]
	500 Move W9, [X8+224]
	501 Compare W9, 0
	502 JumpIfNotEqual {505}
	503 Move X0, X8
	504 Call 0x1C17DFC
	505 Move X0, X21
	506 Call TypeScriptInterfaceGenerator.TypeNameToTS, X0
	507 Move X8, 0xB22000
	508 Move X8, [X8+2344]
	509 Move X3, X0
	510 Move X0, [X31+40]
	511 Move X1, X23
	512 Move X2, [X8]
	513 Move X4, X31
	514 Call String.Concat, X0, X1, X2, X3
	515 Compare X28, 0
	516 JumpIfEqual {1241}
	517 Move X1, X0
	518 Move X0, X28
	519 Move X2, X31
	520 Call StringBuilder.AppendLine, X0, X1
	521 Move X8, [X25]
	522 Move X0, X25
	523 Move X9, [X8+424]
	524 Move X1, [X8+432]
	525 NotImplemented "Instruction BLR not yet implemented."
	526 Move X8, [X25]
	527 Move X21, X0
	528 Move X0, X25
	529 Move X9, [X8+584]
	530 Move X1, [X8+592]
	531 NotImplemented "Instruction BLR not yet implemented."
	532 Move X8, 0xB63000
	533 Move X8, [X8+3352]
	534 Move X25, X0
	535 Move X8, [X8]
	536 Move X0, X8
	537 Call 0x1C17F10
	538 Move X8, 0xB63000
	539 Move X8, [X8+3328]
	540 Move X1, X21
	541 Move X2, X25
	542 Move X23, X0
	543 Move X3, [X8]
	544 Call Tuple`2<Object, Object>..ctor, X0, X1, X2
	545 Move X0, [X31+80]
	546 Compare X0, 0
	547 JumpIfEqual {1241}
	548 Move X9, 0xB63000
	549 Move W10, [X0+28]
	550 Move X8, [X0+16]
	551 Move X9, [X9+3312]
	552 Add W10, W10, 1
	553 Move X9, [X9]
	554 Move [X0+28], W10
	555 Compare X8, 0
	556 JumpIfEqual {1241}
	557 NotImplemented "Instruction LDRSW not yet implemented."
	558 Move W11, [X8+24]
	559 Move X28, X24
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Add W9, W10, 1
	562 Add X8, X8, X10
	563 Move [X0+24], W9
	564 Move [X8+32], X23
	565 Move W21, W31
	566 Move X8, [X25]
	567 Move X0, X25
	568 Move X9, [X8+584]
	569 Move X1, [X8+592]
	570 NotImplemented "Instruction BLR not yet implemented."
	571 Move X23, X0
	572 Compare W21, 0
	573 JumpIfEqual {582}
	574 Compare X23, 0
	575 JumpIfEqual {1241}
	576 Move X8, [X23]
	577 Move X0, X23
	578 Move X9, [X8+2072]
	579 Move X1, [X8+2080]
	580 NotImplemented "Instruction BLR not yet implemented."
	581 Move X23, X0
	582 Move X8, 0xB63000
	583 Move X8, [X8+3240]
	584 Move [X31+208], X31
	585 Move [X31+216], X31
	586 Move X0, [X8]
	587 Move W8, [X0+224]
	588 Compare W8, 0
	589 JumpIfNotEqual {591}
	590 Call 0x1C17DFC
	591 Add X1, X31, 216
	592 Add X2, X31, 208
	593 Move X0, X23
	594 Call TypeScriptInterfaceGenerator.GenericTypeToTS, X0, X1, X2
	595 Move X8, [X25]
	596 Move X23, [X20]
	597 Move X21, X0
	598 Move X0, X25
	599 Move X9, [X8+424]
	600 Move X1, [X8+432]
	601 NotImplemented "Instruction BLR not yet implemented."
	602 Move X8, 0xB22000
	603 Move X8, [X8+2344]
	604 Move X1, X0
	605 Move X0, [X31+40]
	606 Move X3, X21
	607 Move X2, [X8]
	608 Move X4, X31
	609 Call String.Concat, X0, X1, X2, X3
	610 Compare X23, 0
	611 JumpIfEqual {1241}
	612 Move X1, X0
	613 Move X0, X23
	614 Move X2, X31
	615 Call StringBuilder.AppendLine, X0, X1
	616 Move X26, [X31+216]
	617 Move X0, X26
	618 Call TypeScriptInterfaceGenerator.IsStateObject, X0
	619 Move TEMP, X0
	620 And TEMP, TEMP, 1
	621 Compare TEMP, 1
	622 JumpIfNotEqual {698}
	623 Move X8, [X25]
	624 Move X0, X25
	625 Move X9, [X8+424]
	626 Move X1, [X8+432]
	627 NotImplemented "Instruction BLR not yet implemented."
	628 Move X8, 0xB63000
	629 Move X8, [X8+3352]
	630 Move X21, X0
	631 Move X8, [X8]
	632 Move X0, X8
	633 Call 0x1C17F10
	634 Move X8, 0xB63000
	635 Move X8, [X8+3328]
	636 Move X1, X21
	637 Move X2, X26
	638 Move X23, X0
	639 Move X3, [X8]
	640 Call Tuple`2<Object, Object>..ctor, X0, X1, X2
	641 Move X0, [X31+80]
	642 Compare X0, 0
	643 JumpIfEqual {1241}
	644 Move X9, 0xB63000
	645 Move W10, [X0+28]
	646 Move X8, [X0+16]
	647 Move X9, [X9+3312]
	648 Add W10, W10, 1
	649 Move X9, [X9]
	650 Move [X0+28], W10
	651 Compare X8, 0
	652 JumpIfEqual {1241}
	653 NotImplemented "Instruction LDRSW not yet implemented."
	654 Move W11, [X8+24]
	655 NotImplemented "Instruction CMP not yet implemented."
	656 Add W9, W10, 1
	657 Add X8, X8, X10
	658 Move [X0+24], W9
	659 Move [X8+32], X23
	660 Move X8, [X25]
	661 Move X0, X25
	662 Move X9, [X8+424]
	663 Move X1, [X8+432]
	664 NotImplemented "Instruction BLR not yet implemented."
	665 Move X8, [X25]
	666 Move X21, X0
	667 Move X0, X25
	668 Move X9, [X8+584]
	669 Move X1, [X8+592]
	670 NotImplemented "Instruction BLR not yet implemented."
	671 Move X8, 0xB63000
	672 Move X8, [X8+3376]
	673 Move X2, X0
	674 Move X1, X21
	675 Move X3, X31
	676 Move X8, [X8]
	677 Move X0, X8
	678 Call String.Format, X0, X1, X2
	679 Move X8, 0xB1E000
	680 Move X8, [X8+2600]
	681 Move X23, 0xB63000
	682 Move X21, X0
	683 Move X8, [X8]
	684 Move W9, [X8+224]
	685 Move X23, [X23+1648]
	686 Compare W9, 0
	687 JumpIfNotEqual {690}
	688 Move X0, X8
	689 Call 0x1C17DFC
	690 Move X0, X21
	691 Move X1, X31
	692 Call Debug.Log, X0
	693 Move X8, [X9+32]
	694 Move X1, X23
	695 Move X8, [X8+192]
	696 Move X2, [X8+112]
	697 Call List`1<Object>.AddWithResize, X0, X1
	698 Move X8, 0xB63000
	699 Move X8, [X8+3240]
	700 Move X21, [X31+208]
	701 Move X0, [X8]
	702 Move W8, [X0+224]
	703 Compare W8, 0
	704 JumpIfNotEqual {706}
	705 Call 0x1C17DFC
	706 Move X0, X21
	707 Call TypeScriptInterfaceGenerator.IsStateObject, X0
	708 Move TEMP, X0
	709 And TEMP, TEMP, 1
	710 Compare TEMP, 1
	711 JumpIfNotEqual {759}
	712 Move X8, [X25]
	713 Move X0, X25
	714 Move [X31+56], X26
	715 Move X26, X28
	716 Move X9, [X8+424]
	717 Move X1, [X8+432]
	718 NotImplemented "Instruction BLR not yet implemented."
	719 Move X8, 0xB63000
	720 Move X21, [X31+208]
	721 Move X8, [X8+3352]
	722 Move X28, X0
	723 Move X8, [X8]
	724 Move X0, X8
	725 Call 0x1C17F10
	726 Move X8, 0xB63000
	727 Move X8, [X8+3328]
	728 Move X1, X28
	729 Move X2, X21
	730 Move X23, X0
	731 Move X3, [X8]
	732 Call Tuple`2<Object, Object>..ctor, X0, X1, X2
	733 Move X0, [X31+80]
	734 Compare X0, 0
	735 JumpIfEqual {1241}
	736 Move X9, 0xB63000
	737 Move W10, [X0+28]
	738 Move X8, [X0+16]
	739 Move X9, [X9+3312]
	740 Add W10, W10, 1
	741 Move X9, [X9]
	742 Move [X0+28], W10
	743 Compare X8, 0
	744 JumpIfEqual {1241}
	745 NotImplemented "Instruction LDRSW not yet implemented."
	746 Move W11, [X8+24]
	747 Move X28, X26
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Add W9, W10, 1
	750 Add X8, X8, X10
	751 Move [X0+24], W9
	752 Move [X8+32], X23
	753 Move X8, [X9+32]
	754 Move X1, X23
	755 Move X8, [X8+192]
	756 Move X2, [X8+112]
	757 Call List`1<Object>.AddWithResize, X0, X1
	758 Move X26, [X31+56]
	759 Move X8, 0xB1E000
	760 Move X8, [X8+1728]
	761 Move X0, [X8]
	762 Move W8, [X0+224]
	763 Compare W8, 0
	764 JumpIfNotEqual {766}
	765 Call 0x1C17DFC
	766 Move X0, X26
	767 Move X1, X31
	768 Move X2, X31
	769 Call Type.op_Inequality, X0, X1
	770 Move TEMP, X0
	771 And TEMP, TEMP, 1
	772 Compare TEMP, 1
	773 JumpIfNotEqual {842}
	774 Compare X26, 0
	775 JumpIfEqual {1241}
	776 Move X8, [X26]
	777 Move X0, X26
	778 Move X9, [X8+1416]
	779 Move X1, [X8+1424]
	780 NotImplemented "Instruction BLR not yet implemented."
	781 Move TEMP, X0
	782 And TEMP, TEMP, 1
	783 Compare TEMP, 1
	784 JumpIfNotEqual {842}
	785 Move X0, [X31+72]
	786 Compare X0, 0
	787 JumpIfEqual {1241}
	788 Move X9, 0xB28000
	789 Move W10, [X0+28]
	790 Move X8, [X0+16]
	791 Move X9, [X9+2360]
	792 Add W10, W10, 1
	793 Move X9, [X9]
	794 Move [X0+28], W10
	795 Compare X8, 0
	796 JumpIfEqual {1241}
	797 NotImplemented "Instruction LDRSW not yet implemented."
	798 Move W11, [X8+24]
	799 NotImplemented "Instruction CMP not yet implemented."
	800 Add W9, W10, 1
	801 Add X8, X8, X10
	802 Move [X0+24], W9
	803 Move [X8+32], X26
	804 Move X8, [X9+32]
	805 Move X1, X23
	806 Move X8, [X8+192]
	807 Move X2, [X8+112]
	808 Call List`1<Object>.AddWithResize, X0, X1
	809 Move X23, 0xB63000
	810 Move W8, [X31+108]
	811 Move X23, [X23+1648]
	812 Move TEMP, X8
	813 And TEMP, TEMP, 1
	814 Compare TEMP, 1
	815 JumpIfEqual {961}
	816 Move X0, [X31+96]
	817 Compare X0, 0
	818 JumpIfEqual {1241}
	819 Move X9, 0xB1F000
	820 Move W10, [X0+28]
	821 Move X8, [X0+16]
	822 Move X9, [X9+440]
	823 Add W10, W10, 1
	824 Move X9, [X9]
	825 Move [X0+28], W10
	826 Compare X8, 0
	827 JumpIfEqual {1241}
	828 NotImplemented "Instruction LDRSW not yet implemented."
	829 Move W11, [X8+24]
	830 NotImplemented "Instruction CMP not yet implemented."
	831 Add W9, W10, 1
	832 Move [X0+24], W9
	833 Move X9, [X31+32]
	834 Add X8, X8, X10
	835 Move [X31+56], W31
	836 Move [X8+32], X9
	837 Move X8, [X9+32]
	838 Move X1, X26
	839 Move X8, [X8+192]
	840 Move X2, [X8+112]
	841 Call List`1<Object>.AddWithResize, X0, X1
	842 Move X8, 0xB1E000
	843 Move X8, [X8+1728]
	844 Move X23, [X31+208]
	845 Move X0, [X8]
	846 Move W8, [X0+224]
	847 Compare W8, 0
	848 JumpIfNotEqual {850}
	849 Call 0x1C17DFC
	850 Move X0, X23
	851 Move X1, X31
	852 Move X2, X31
	853 Call Type.op_Inequality, X0, X1
	854 Move TEMP, X0
	855 And TEMP, TEMP, 1
	856 Compare TEMP, 1
	857 JumpIfNotEqual {893}
	858 Move X0, [X31+208]
	859 Compare X0, 0
	860 JumpIfEqual {1241}
	861 Move X8, [X0]
	862 Move X9, [X8+1416]
	863 Move X1, [X8+1424]
	864 NotImplemented "Instruction BLR not yet implemented."
	865 Move TEMP, X0
	866 And TEMP, TEMP, 1
	867 Compare TEMP, 1
	868 JumpIfNotEqual {893}
	869 Move X0, [X31+72]
	870 Compare X0, 0
	871 JumpIfEqual {1241}
	872 Move X9, 0xB28000
	873 Move X1, [X31+208]
	874 Move W10, [X0+28]
	875 Move X8, [X0+16]
	876 Move X9, [X9+2360]
	877 Add W10, W10, 1
	878 Move X9, [X9]
	879 Move [X0+28], W10
	880 Compare X8, 0
	881 JumpIfEqual {1241}
	882 NotImplemented "Instruction LDRSW not yet implemented."
	883 Move W11, [X8+24]
	884 NotImplemented "Instruction CMP not yet implemented."
	885 Add W9, W10, 1
	886 Add X8, X8, X10
	887 Move [X0+24], W9
	888 Move [X8+32], X1
	889 Move X8, [X9+32]
	890 Move X8, [X8+192]
	891 Move X2, [X8+112]
	892 Call List`1<Object>.AddWithResize, X0, X1
	893 Move X8, 0xB1E000
	894 Move X8, [X8+1728]
	895 Move X23, [X31+208]
	896 Move X0, [X8]
	897 Move W8, [X0+224]
	898 Compare W8, 0
	899 JumpIfNotEqual {901}
	900 Call 0x1C17DFC
	901 Move X0, X23
	902 Move X1, X31
	903 Move X2, X31
	904 Call Type.op_Inequality, X0, X1
	905 Move X23, 0xB63000
	906 Move X23, [X23+1648]
	907 Move TEMP, X0
	908 And TEMP, TEMP, 1
	909 Compare TEMP, 1
	910 JumpIfNotEqual {924}
	911 Move X8, [X25]
	912 Move X0, X25
	913 Move X9, [X8+424]
	914 Move X1, [X8+432]
	915 NotImplemented "Instruction BLR not yet implemented."
	916 Move X1, X0
	917 Move X0, [X31+88]
	918 Compare X0, 0
	919 JumpIfEqual {1241}
	920 Move X8, 0xB1F000
	921 Move X8, [X8+3104]
	922 Move X2, [X8]
	923 Call HashSet`1<Object>.Add, X0, X1
	924 Move W8, [X31+108]
	925 Move TEMP, X8
	926 And TEMP, TEMP, 1
	927 Compare TEMP, 1
	928 JumpIfEqual {955}
	929 Move X0, [X31+96]
	930 Compare X0, 0
	931 JumpIfEqual {1241}
	932 Move X9, 0xB1F000
	933 Move W10, [X0+28]
	934 Move X8, [X0+16]
	935 Move X9, [X9+440]
	936 Add W10, W10, 1
	937 Move X9, [X9]
	938 Move [X0+28], W10
	939 Compare X8, 0
	940 JumpIfEqual {1241}
	941 NotImplemented "Instruction LDRSW not yet implemented."
	942 Move W11, [X8+24]
	943 NotImplemented "Instruction CMP not yet implemented."
	944 Add W9, W10, 1
	945 Move [X0+24], W9
	946 Move X9, [X31+32]
	947 Add X8, X8, X10
	948 Move [X31+56], W31
	949 Move [X8+32], X9
	950 Move X8, [X9+32]
	951 Move X1, [X31+32]
	952 Move X8, [X8+192]
	953 Move X2, [X8+112]
	954 Call List`1<Object>.AddWithResize, X0, X1
	955 Move [X31+56], W31
	956 Move X8, [X9+32]
	957 Move X1, [X31+32]
	958 Move X8, [X8+192]
	959 Move X2, [X8+112]
	960 Call List`1<Object>.AddWithResize, X0, X1
	961 Move [X31+56], W31
	962 Move X24, [X31+64]
	963 Move X26, [X31+16]
	964 Move W8, [X31+56]
	965 Move TEMP, X8
	966 And TEMP, TEMP, 1
	967 Compare TEMP, 1
	968 JumpIfNotEqual {1032}
	969 Move X23, [X20]
	970 Compare X23, 0
	971 JumpIfEqual {1241}
	972 Move X0, X23
	973 Move X1, X31
	974 Call StringBuilder.get_Length, X0
	975 Move X21, 0xB63000
	976 Move X21, [X21+3240]
	977 Move W25, W0
	978 Move X8, [X21]
	979 Move W9, [X8+224]
	980 Compare W9, 0
	981 JumpIfNotEqual {985}
	982 Move X0, X8
	983 Call 0x1C17DFC
	984 Move X8, [X21]
	985 Move X8, [X8+184]
	986 Move X0, X23
	987 Move X3, X31
	988 Move W2, [X8]
	989 Subtract W1, W25, W2
	990 Call StringBuilder.Remove, X0, X1, X2
	991 Move X8, [X24]
	992 Move X0, X24
	993 Move X9, [X8+1416]
	994 Move X1, [X8+1424]
	995 NotImplemented "Instruction BLR not yet implemented."
	996 Move TEMP, X0
	997 And TEMP, TEMP, 1
	998 Compare TEMP, 1
	999 JumpIfNotEqual {1032}
	1000 Compare X19, 0
	1001 JumpIfEqual {1241}
	1002 Move X8, 0xB1F000
	1003 Move X8, [X8+3104]
	1004 Move X0, X19
	1005 Move X1, X26
	1006 Move X2, [X8]
	1007 Call HashSet`1<Object>.Add, X0, X1
	1008 Move X0, [X31+72]
	1009 Compare X0, 0
	1010 JumpIfEqual {1241}
	1011 Move X9, 0xB28000
	1012 Move W10, [X0+28]
	1013 Move X8, [X0+16]
	1014 Move X9, [X9+2360]
	1015 Add W10, W10, 1
	1016 Move X9, [X9]
	1017 Move [X0+28], W10
	1018 Compare X8, 0
	1019 JumpIfEqual {1241}
	1020 NotImplemented "Instruction LDRSW not yet implemented."
	1021 Move W11, [X8+24]
	1022 NotImplemented "Instruction CMP not yet implemented."
	1023 Add W9, W10, 1
	1024 Add X8, X8, X10
	1025 Move [X0+24], W9
	1026 Move [X8+32], X24
	1027 Move X8, [X9+32]
	1028 Move X1, X24
	1029 Move X8, [X8+192]
	1030 Move X2, [X8+112]
	1031 Call List`1<Object>.AddWithResize, X0, X1
	1032 Move X23, [X20]
	1033 Move X0, X24
	1034 Move X1, X31
	1035 Call Type.get_IsClass, X0
	1036 Compare X23, 0
	1037 JumpIfEqual {1241}
	1038 Move X8, 0xB28000
	1039 Move X9, 0xB1D000
	1040 Move X8, [X8+1752]
	1041 Move X9, [X9+2440]
	1042 And W31, W0, 1
	1043 Move X0, X23
	1044 Move X2, X31
	1045 NotImplemented "Instruction CSEL not yet implemented."
	1046 Move X1, [X8]
	1047 Call StringBuilder.AppendLine, X0, X1
	1048 Move X0, [X31+80]
	1049 Compare X0, 0
	1050 JumpIfEqual {1241}
	1051 Move X8, 0xB62000
	1052 Move X8, [X8+3320]
	1053 Move X24, 0xB62000
	1054 Move X27, 0xB62000
	1055 Move X29, 0xB27000
	1056 Move X24, [X24+3288]
	1057 Move X27, [X27+3304]
	1058 Move X29, [X29+2520]
	1059 Move X1, [X8]
	1060 Move X28, 0xB27000
	1061 Move X21, 0xB62000
	1062 Move X28, [X28+2464]
	1063 Move X21, [X21+3280]
	1064 Add X8, X31, 120
	1065 Call List`1<Object>.GetEnumerator, X0
	1066 NotImplemented "Instruction LDUR not yet implemented."
	1067 Move X8, [X31+136]
	1068 Move [X31+11], V0
	1069 Move [X31+192], X8
	1070 Move X1, [X24]
	1071 Add X0, X31, 176
	1072 Call Enumerator<Object>.MoveNext, X0
	1073 Move TEMP, X0
	1074 And TEMP, TEMP, 1
	1075 Compare TEMP, 1
	1076 JumpIfNotEqual {1158}
	1077 Move X23, [X31+192]
	1078 Compare X23, 0
	1079 JumpIfEqual {1245}
	1080 Move X0, [X23+24]
	1081 Compare X0, 0
	1082 JumpIfEqual {1246}
	1083 Move X8, [X0]
	1084 Move X1, [X8+752]
	1085 Move X9, [X8+744]
	1086 NotImplemented "Instruction BLR not yet implemented."
	1087 Move X1, X0
	1088 Compare X22, 0
	1089 JumpIfEqual {1244}
	1090 Move X2, [X27]
	1091 Move X0, X22
	1092 Call HashSet`1<Object>.Contains, X0, X1
	1093 Move TEMP, X0
	1094 And TEMP, TEMP, 1
	1095 Compare TEMP, 1
	1096 JumpIfEqual {1070}
	1097 Move X0, [X31+112]
	1098 Compare X0, 0
	1099 JumpIfEqual {1250}
	1100 Move W8, [X0+16]
	1101 Move X25, [X23+16]
	1102 Compare W8, 0
	1103 JumpIfEqual {1111}
	1104 Move X8, 0xB1E000
	1105 Move X8, [X8+3784]
	1106 Move X1, [X8]
	1107 Move X2, X25
	1108 Move X3, X31
	1109 Call String.Concat, X0, X1, X2
	1110 Move X25, X0
	1111 Move W8, [X31+108]
	1112 Move TEMP, X8
	1113 And TEMP, TEMP, 1
	1114 Compare TEMP, 1
	1115 JumpIfNotEqual {1117}
	1116 Move W26, 1
	1117 Move X0, [X31+88]
	1118 Compare X0, 0
	1119 JumpIfEqual {1252}
	1120 Move X1, [X23+16]
	1121 Move X2, [X27]
	1122 Call HashSet`1<Object>.Contains, X0, X1
	1123 And W26, W0, 1
	1124 Move X0, [X23+24]
	1125 Compare X0, 0
	1126 JumpIfEqual {1249}
	1127 Move X8, [X0]
	1128 Move X1, [X8+752]
	1129 Move X9, [X8+744]
	1130 NotImplemented "Instruction BLR not yet implemented."
	1131 Move X1, X0
	1132 Move X8, 0xB1E000
	1133 Move X8, [X8+3104]
	1134 Move X2, [X8]
	1135 Move X0, X22
	1136 Call HashSet`1<Object>.Add, X0, X1
	1137 Move X0, [X20]
	1138 Compare X0, 0
	1139 JumpIfEqual {1251}
	1140 Move X1, X31
	1141 Call StringBuilder.AppendLine, X0
	1142 Move X8, 0xB62000
	1143 Move X8, [X8+3240]
	1144 Move X23, [X23+24]
	1145 Move X0, [X8]
	1146 Move W8, [X0+224]
	1147 Compare W8, 0
	1148 JumpIfNotEqual {1150}
	1149 Call 0x1C17DFC
	1150 Move X6, [X31+96]
	1151 Move X0, X20
	1152 Move X1, X23
	1153 Move X2, X25
	1154 Move W3, W26
	1155 Move X4, X22
	1156 Move X5, X19
	1157 Call TypeScriptInterfaceGenerator.GenerateInternal, X0, X1, X2, X3, X4, X5, X6
	1158 Move X1, [X21]
	1159 Add X0, X31, 176
	1160 Call Enumerator<Object>.Dispose, X0
	1161 Move X0, [X31+72]
	1162 Compare X0, 0
	1163 JumpIfEqual {1241}
	1164 Move X1, [X29]
	1165 Add X8, X31, 120
	1166 Call List`1<Object>.GetEnumerator, X0
	1167 NotImplemented "Instruction LDUR not yet implemented."
	1168 Move X8, [X31+136]
	1169 Move [X31+9], V0
	1170 Move [X31+160], X8
	1171 Move X1, [X28]
	1172 Add X0, X31, 144
	1173 Call Enumerator<Object>.MoveNext, X0
	1174 Move TEMP, X0
	1175 And TEMP, TEMP, 1
	1176 Compare TEMP, 1
	1177 JumpIfNotEqual {1222}
	1178 Move X21, [X31+160]
	1179 Compare X21, 0
	1180 JumpIfEqual {1242}
	1181 Move X8, [X21]
	1182 Move X1, [X8+752]
	1183 Move X9, [X8+744]
	1184 Move X0, X21
	1185 NotImplemented "Instruction BLR not yet implemented."
	1186 Move X1, X0
	1187 Compare X19, 0
	1188 JumpIfEqual {1243}
	1189 Move X2, [X27]
	1190 Move X0, X19
	1191 Call HashSet`1<Object>.Contains, X0, X1
	1192 Move TEMP, X0
	1193 And TEMP, TEMP, 1
	1194 Compare TEMP, 1
	1195 JumpIfEqual {1171}
	1196 Move X8, [X21]
	1197 Move X1, [X8+752]
	1198 Move X9, [X8+744]
	1199 Move X0, X21
	1200 NotImplemented "Instruction BLR not yet implemented."
	1201 Move X1, X0
	1202 Move X8, 0xB1E000
	1203 Move X8, [X8+3104]
	1204 Move X2, [X8]
	1205 Move X0, X19
	1206 Call HashSet`1<Object>.Add, X0, X1
	1207 Move X0, [X20]
	1208 Compare X0, 0
	1209 JumpIfEqual {1248}
	1210 Move X1, X31
	1211 Call StringBuilder.AppendLine, X0
	1212 Move X8, 0xB62000
	1213 Move X8, [X8+3240]
	1214 Move X0, [X8]
	1215 Move W8, [X0+224]
	1216 Compare W8, 0
	1217 JumpIfNotEqual {1219}
	1218 Call 0x1C17DFC
	1219 Move X0, X20
	1220 Move X1, X21
	1221 Call TypeScriptInterfaceGenerator.GenerateEnumInternal, X0, X1
	1222 Move X8, 0xB27000
	1223 Move X8, [X8+2456]
	1224 Add X0, X31, 144
	1225 Move X1, [X8]
	1226 Call Enumerator<Object>.Dispose, X0
	1227 Move X20, [X31+304]
	1228 Move X19, [X31+312]
	1229 Move X22, [X31+288]
	1230 Move X21, [X31+296]
	1231 Move X24, [X31+272]
	1232 Move X23, [X31+280]
	1233 Move X26, [X31+256]
	1234 Move X25, [X31+264]
	1235 Move X28, [X31+240]
	1236 Move X27, [X31+248]
	1237 Move X29, [X31+224]
	1238 Move X30, [X31+232]
	1239 Add X31, X31, 320
	1240 Return 
	1241 Call 0x1C17F20
	1242 Call 0x1C17F20
	1243 Call 0x1C17F20
	1244 Call 0x1C17F20
	1245 Call 0x1C17F20
	1246 Call 0x1C17F20
	1247 Call 0x1C17F28
	1248 Call 0x1C17F20
	1249 Call 0x1C17F20
	1250 Call 0x1C17F20
	1251 Call 0x1C17F20
	1252 Call 0x1C17F20
	1253 Move X23, X0
	1254 NotImplemented "Instruction CMP not yet implemented."
	1255 Move X0, X23
	1256 Call 0x3EB2AD0
	1257 Move X22, [X0]
	1258 Call 0x3EB2AE0
	1259 Move X1, [X21]
	1260 Add X0, X31, 176
	1261 Call Enumerator<Object>.Dispose, X0
	1262 Compare X22, 0
	1263 JumpIfEqual {1161}
	1264 Move X0, X22
	1265 Call 0x1C17F18
	1266 Move X22, X31
	1267 Move X23, X0
	1268 Move X1, [X21]
	1269 Add X0, X31, 176
	1270 Call Enumerator<Object>.Dispose, X0
	1271 Compare X22, 0
	1272 JumpIfEqual {1299}
	1273 Move X0, X22
	1274 Call 0x1C17F18
	1275 Move X23, X0
	1276 NotImplemented "Instruction CMP not yet implemented."
	1277 Move X0, X23
	1278 Call 0x3EB2AD0
	1279 Move X19, [X0]
	1280 Call 0x3EB2AE0
	1281 Move X8, 0xB27000
	1282 Move X8, [X8+2456]
	1283 Add X0, X31, 144
	1284 Move X1, [X8]
	1285 Call Enumerator<Object>.Dispose, X0
	1286 Compare X19, 0
	1287 JumpIfEqual {1227}
	1288 Move X0, X19
	1289 Call 0x1C17F18
	1290 Move X19, X31
	1291 Move X23, X0
	1292 Move X8, 0xB27000
	1293 Move X8, [X8+2456]
	1294 Move X1, [X8]
	1295 Add X0, X31, 144
	1296 Call Enumerator<Object>.Dispose, X0
	1297 Compare X19, 0
	1298 JumpIfNotEqual {1301}
	1299 Move X0, X23
	1300 Call 0x1D2D690
	1301 Move X0, X19
	1302 Call 0x1C17F18
	1303 Call 0x1991590

Method: System.Boolean IsStateObject(System.Type type)

Disassembly:
	0x035D8EF8 LDR X0, [X10]
	0x035D8EFC ADRP X26, 0xB60000
	0x035D8F00 ADRP X25, 0xB60000
	0x035D8F04 ADRP X24, 0xB60000
	0x035D8F08 ADRP X23, 0xB25000
	0x035D8F0C ADRP X22, 0xB25000
	0x035D8F10 ADRP X21, 0xB60000
	0x035D8F14 LDR X26, [X26 + 0x590]
	0x035D8F18 LDR X25, [X25 + 0xF60]
	0x035D8F1C LDR X24, [X24 + 0xF58]
	0x035D8F20 LDR W8, [X0 + 0xE0]
	0x035D8F24 LDR X19, [X9]
	0x035D8F28 LDR X23, [X23 + 0x918]
	0x035D8F2C LDR X22, [X22 + 0x910]
	0x035D8F30 LDR X21, [X21 + 0xF50]
	0x035D8F34 CBNZ W8, 0x35D8F3C
	0x035D8F38 BL 0x1C16DFC
	0x035D8F3C MOV X0, X19
	0x035D8F40 MOV X1, X31
	0x035D8F44 BL 0x338C698
	0x035D8F48 LDR X8, [X20]
	0x035D8F4C MOV X1, X31
	0x035D8F50 LDR X8, [X8 + 0xB8]
	0x035D8F54 STR X0, [X8 + 0x8]
	0x035D8F58 LDR X0, [X29]
	0x035D8F5C BL 0x338C698
	0x035D8F60 LDR X8, [X20]
	0x035D8F64 MOV X1, X31
	0x035D8F68 LDR X8, [X8 + 0xB8]
	0x035D8F6C STR X0, [X8 + 0x10]
	0x035D8F70 LDR X0, [X28]
	0x035D8F74 BL 0x338C698
	0x035D8F78 LDR X8, [X20]
	0x035D8F7C MOV X1, X31
	0x035D8F80 LDR X8, [X8 + 0xB8]
	0x035D8F84 STR X0, [X8 + 0x18]
	0x035D8F88 LDR X0, [X27]
	0x035D8F8C BL 0x338C698
	0x035D8F90 LDR X8, [X20]
	0x035D8F94 MOV X1, X31
	0x035D8F98 LDR X8, [X8 + 0xB8]
	0x035D8F9C STR X0, [X8 + 0x20]
	0x035D8FA0 LDR X0, [X26]
	0x035D8FA4 BL 0x338C698
	0x035D8FA8 LDR X8, [X20]
	0x035D8FAC MOV X1, X31
	0x035D8FB0 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE09000
	006 Move X21, 0xB1C000
	007 Move W8, [X20+552]
	008 Move X21, [X21+1728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xB61000
	015 Move X0, [X0+3240]
	016 Call 0x1C17CF4
	017 Move X0, 0xB1C000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+552], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Move X2, X31
	030 Call Type.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {56}
	035 Move X20, 0xB61000
	036 Move X20, [X20+3240]
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move X0, [X8+8]
	045 Compare X0, 0
	046 JumpIfEqual {62}
	047 Move X8, [X0]
	048 Move X1, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X3, [X8+680]
	052 Move X2, [X8+688]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 CallNoReturn X3
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move W0, W31
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return X0
	062 Call 0x1C17F20

Method: System.Void GenerateEnumInternal(ref System.Text.StringBuilder builder, System.Type root)

Disassembly:
	0x035D8FB4 STR X0, [X8 + 0x28]
	0x035D8FB8 LDR X0, [X25]
	0x035D8FBC BL 0x338C698
	0x035D8FC0 LDR X8, [X20]
	0x035D8FC4 MOV X1, X31
	0x035D8FC8 LDR X8, [X8 + 0xB8]
	0x035D8FCC STR X0, [X8 + 0x30]
	0x035D8FD0 LDR X0, [X24]
	0x035D8FD4 BL 0x338C698
	0x035D8FD8 LDR X8, [X20]
	0x035D8FDC LDR X8, [X8 + 0xB8]
	0x035D8FE0 STR X0, [X8 + 0x38]
	0x035D8FE4 LDR X0, [X23]
	0x035D8FE8 BL 0x1C16F10
	0x035D8FEC LDR X1, [X22]
	0x035D8FF0 MOV X19, X0
	0x035D8FF4 BL 0x2DBDE08
	0x035D8FF8 LDR X0, [X21]
	0x035D8FFC MOV X1, X31
	0x035D9000 BL 0x338C698
	0x035D9004 CBZ X19, 0x35D906C
	0x035D9008 ADRP X21, 0xB24000
	0x035D900C LDR X21, [X21 + 0xA80]
	0x035D9010 ADRP X22, 0xB43000
	0x035D9014 MOV X1, X0
	0x035D9018 MOV X0, X19
	0x035D901C LDR X2, [X21]
	0x035D9020 LDR X22, [X22 + 0xB28]
	0x035D9024 BL 0x2DBEF30
	0x035D9028 LDR X0, [X22]
	0x035D902C MOV X1, X31
	0x035D9030 BL 0x338C698
	0x035D9034 LDR X2, [X21]
	0x035D9038 MOV X1, X0
	0x035D903C MOV X0, X19
	0x035D9040 BL 0x2DBEF30
	0x035D9044 LDR X8, [X20]
	0x035D9048 LDP X22, X21, [X31 + 0x40]
	0x035D904C LDP X24, X23, [X31 + 0x30]
	0x035D9050 LDP X26, X25, [X31 + 0x20]
	0x035D9054 LDR X8, [X8 + 0xB8]
	0x035D9058 LDP X28, X27, [X31 + 0x10]
	0x035D905C STR X19, [X8 + 0x40]
	0x035D9060 LDP X20, X19, [X31 + 0x50]
	0x035D9064 LDP X29, X30, [X31], #0x60
	0x035D9068 RET
	0x035D906C BL 0x1C16F20
	0x035D9070 STR X30, [X31 - 0x20]!
	0x035D9074 STP X20, X19, [X31 + 0x10]
	0x035D9078 ADRP X19, 0xE07000
	0x035D907C ADRP X20, 0xB5F000
	0x035D9080 LDRB W8, [X19 + 0x234]
	0x035D9084 LDR X20, [X20 + 0xD28]
	0x035D9088 TBNZ X8, 0x0, 0x35D90A0
	0x035D908C ADRP X0, 0xB5F000
	0x035D9090 LDR X0, [X0 + 0xD28]
	0x035D9094 BL 0x1C16CF4
	0x035D9098 MOVZ W8, 0x1
	0x035D909C STRB W8, [X19 + 0x234]
	0x035D90A0 LDR X0, [X20]
	0x035D90A4 BL 0x1C16F10
	0x035D90A8 MOV X1, X31
	0x035D90AC MOV X19, X0
	0x035D90B0 BL 0x33BDD8C
	0x035D90B4 LDR X8, [X20]
	0x035D90B8 LDR X8, [X8 + 0xB8]
	0x035D90BC STR X19, [X8]
	0x035D90C0 LDP X20, X19, [X31 + 0x10]
	0x035D90C4 LDR X30, [X31], #0x20
	0x035D90C8 RET
	0x035D90CC MOV X1, X31
	0x035D90D0 B 0x33BDD8C
	0x035D90D4 STP X30, X21, [X31 - 0x20]!
	0x035D90D8 STP X20, X19, [X31 + 0x10]
	0x035D90DC ADRP X21, 0xE07000
	0x035D90E0 ADRP X20, 0xB5F000
	0x035D90E4 LDRB W8, [X21 + 0x235]
	0x035D90E8 LDR X20, [X20 + 0xCA8]
	0x035D90EC MOV X19, X1
	0x035D90F0 TBNZ X8, 0x0, 0x35D9114
	0x035D90F4 ADRP X0, 0xB24000
	0x035D90F8 LDR X0, [X0 + 0xA88]
	0x035D90FC BL 0x1C16CF4
	0x035D9100 ADRP X0, 0xB5F000
	0x035D9104 LDR X0, [X0 + 0xCA8]
	0x035D9108 BL 0x1C16CF4
	0x035D910C MOVZ W8, 0x1
	0x035D9110 STRB W8, [X21 + 0x235]
	0x035D9114 LDR X0, [X20]
	0x035D9118 LDR W8, [X0 + 0xE0]
	0x035D911C CBNZ W8, 0x35D9128
	0x035D9120 BL 0x1C16DFC
	0x035D9124 LDR X0, [X20]
	0x035D9128 CBZ X19, 0x35D9164
	0x035D912C LDR X8, [X0 + 0xB8]
	0x035D9130 MOV X0, X19
	0x035D9134 MOV X1, X31
	0x035D9138 LDR X20, [X8 + 0x40]
	0x035D913C BL 0x32D7840
	0x035D9140 CBZ X20, 0x35D9164
	0x035D9144 ADRP X8, 0xB24000
	0x035D9148 LDR X8, [X8 + 0xA88]
	0x035D914C MOV X1, X0
	0x035D9150 MOV X0, X20
	0x035D9154 LDP X20, X19, [X31 + 0x10]
	0x035D9158 LDR X2, [X8]
	0x035D915C LDP X30, X21, [X31], #0x20
	0x035D9160 B 0x2DBE4B0
	0x035D9164 BL 0x1C16F20
	0x035D9168 STP X30, X21, [X31 - 0x20]!
	0x035D916C STP X20, X19, [X31 + 0x10]
	0x035D9170 ADRP X21, 0xE07000
	0x035D9174 ADRP X20, 0xB5F000
	0x035D9178 LDRB W8, [X21 + 0x236]
	0x035D917C LDR X20, [X20 + 0xCA8]
	0x035D9180 MOV X19, X1
	0x035D9184 TBNZ X8, 0x0, 0x35D91A8
	0x035D9188 ADRP X0, 0xB24000
	0x035D918C LDR X0, [X0 + 0xA88]
	0x035D9190 BL 0x1C16CF4
	0x035D9194 ADRP X0, 0xB5F000
	0x035D9198 LDR X0, [X0 + 0xCA8]
	0x035D919C BL 0x1C16CF4
	0x035D91A0 MOVZ W8, 0x1
	0x035D91A4 STRB W8, [X21 + 0x236]
	0x035D91A8 LDR X0, [X20]
	0x035D91AC LDR W8, [X0 + 0xE0]
	0x035D91B0 CBNZ W8, 0x35D91BC
	0x035D91B4 BL 0x1C16DFC
	0x035D91B8 LDR X0, [X20]
	0x035D91BC CBZ X19, 0x35D91F8
	0x035D91C0 LDR X8, [X0 + 0xB8]
	0x035D91C4 MOV X0, X19
	0x035D91C8 MOV X1, X31
	0x035D91CC LDR X20, [X8 + 0x40]
	0x035D91D0 BL 0x32D7840
	0x035D91D4 CBZ X20, 0x35D91F8
	0x035D91D8 ADRP X8, 0xB24000
	0x035D91DC LDR X8, [X8 + 0xA88]
	0x035D91E0 MOV X1, X0
	0x035D91E4 MOV X0, X20
	0x035D91E8 LDP X20, X19, [X31 + 0x10]
	0x035D91EC LDR X2, [X8]
	0x035D91F0 LDP X30, X21, [X31], #0x20
	0x035D91F4 B 0x2DBE4B0
	0x035D91F8 BL 0x1C16F20
	0x035D91FC STP X30, X21, [X31 - 0x20]!
	0x035D9200 STP X20, X19, [X31 + 0x10]
	0x035D9204 ADRP X21, 0xE07000
	0x035D9208 ADRP X20, 0xB5F000
	0x035D920C LDRB W8, [X21 + 0x237]
	0x035D9210 LDR X20, [X20 + 0xCA8]
	0x035D9214 MOV X19, X1
	0x035D9218 TBNZ X8, 0x0, 0x35D923C
	0x035D921C ADRP X0, 0xB5F000
	0x035D9220 LDR X0, [X0 + 0xCA8]
	0x035D9224 BL 0x1C16CF4
	0x035D9228 ADRP X0, 0xB5F000
	0x035D922C LDR X0, [X0 + 0xF80]
	0x035D9230 BL 0x1C16CF4
	0x035D9234 MOVZ W8, 0x1
	0x035D9238 STRB W8, [X21 + 0x237]
	0x035D923C LDR X0, [X20]
	0x035D9240 ADRP X20, 0xB5F000
	0x035D9244 LDR W8, [X0 + 0xE0]
	0x035D9248 LDR X20, [X20 + 0xF80]
	0x035D924C CBNZ W8, 0x35D9254
	0x035D9250 BL 0x1C16DFC
	0x035D9254 MOV X0, X19
	0x035D9258 BL 0x35D89E4
	0x035D925C LDR X8, [X20]
	0x035D9260 LDP X20, X19, [X31 + 0x10]
	0x035D9264 MOV X1, X0
	0x035D9268 MOV X2, X31
	0x035D926C MOV X0, X8
	0x035D9270 LDP X30, X21, [X31], #0x20
	0x035D9274 B 0x321B938
	0x035D9278 STR X30, [X31 - 0x30]!
	0x035D927C STP X22, X21, [X31 + 0x10]
	0x035D9280 STP X20, X19, [X31 + 0x20]
	0x035D9284 ADRP X20, 0xE07000
	0x035D9288 LDRB W8, [X20 + 0x238]
	0x035D928C MOV X19, X1
	0x035D9290 TBNZ X8, 0x0, 0x35D92B4
	0x035D9294 ADRP X0, 0xB5F000
	0x035D9298 LDR X0, [X0 + 0xCA8]
	0x035D929C BL 0x1C16CF4
	0x035D92A0 ADRP X0, 0xB1E000
	0x035D92A4 LDR X0, [X0 + 0x928]
	0x035D92A8 BL 0x1C16CF4
	0x035D92AC MOVZ W8, 0x1
	0x035D92B0 STRB W8, [X20 + 0x238]
	0x035D92B4 CBZ X19, 0x35D932C
	0x035D92B8 LDR X8, [X19]
	0x035D92BC ADRP X22, 0xB5F000
	0x035D92C0 ADRP X21, 0xB1E000
	0x035D92C4 MOV X0, X19
	0x035D92C8 LDP X9, X1, [X8 + 0x1C8]
	0x035D92CC LDR X22, [X22 + 0xCA8]
	0x035D92D0 LDR X21, [X21 + 0x928]
	0x035D92D4 BLR X9
	0x035D92D8 LDR X8, [X19]
	0x035D92DC MOV X20, X0
	0x035D92E0 MOV X0, X19
	0x035D92E4 LDP X9, X1, [X8 + 0x1D8]
	0x035D92E8 BLR X9
	0x035D92EC LDR X8, [X22]
	0x035D92F0 MOV X19, X0
	0x035D92F4 LDR W9, [X8 + 0xE0]
	0x035D92F8 CBNZ W9, 0x35D9304
	0x035D92FC MOV X0, X8
	0x035D9300 BL 0x1C16DFC
	0x035D9304 MOV X0, X19
	0x035D9308 BL 0x35D89E4
	0x035D930C LDR X1, [X21]
	0x035D9310 MOV X2, X0
	0x035D9314 MOV X0, X20
	0x035D9318 LDP X20, X19, [X31 + 0x20]
	0x035D931C LDP X22, X21, [X31 + 0x10]
	0x035D9320 MOV X3, X31
	0x035D9324 LDR X30, [X31], #0x30
	0x035D9328 B 0x32274B8
	0x035D932C BL 0x1C16F20
	0x035D9330 STP X30, X23, [X31 - 0x30]!
	0x035D9334 STP X22, X21, [X31 + 0x10]
	0x035D9338 STP X20, X19, [X31 + 0x20]
	0x035D933C ADRP X23, 0xE07000
	0x035D9340 ADRP X22, 0xB1A000
	0x035D9344 ADRP X20, 0xB5F000
	0x035D9348 ADRP X21, 0xB5F000
	0x035D934C MOV X19, X8
	0x035D9350 LDRB W8, [X23 + 0x239]
	0x035D9354 LDR X22, [X22 + 0x618]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xE09000
	014 Move W8, [X20+553]
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0xB61000
	022 Move X0, [X0+3272]
	023 Call 0x1C17CF4
	024 Move X0, 0xB61000
	025 Move X0, [X0+1664]
	026 Call 0x1C17CF4
	027 Move X0, 0xB1C000
	028 Move X0, [X0+2760]
	029 Call 0x1C17CF4
	030 Move X0, 0xB60000
	031 Move X0, [X0+3240]
	032 Call 0x1C17CF4
	033 Move X0, 0xB60000
	034 Move X0, [X0+3672]
	035 Call 0x1C17CF4
	036 Move X0, 0xB60000
	037 Move X0, [X0+3368]
	038 Call 0x1C17CF4
	039 Move X0, 0xB26000
	040 Move X0, [X0+1752]
	041 Call 0x1C17CF4
	042 Move X0, 0xB60000
	043 Move X0, [X0+3680]
	044 Call 0x1C17CF4
	045 Move X0, 0xB45000
	046 Move X0, [X0+936]
	047 Call 0x1C17CF4
	048 Move X0, 0xB1D000
	049 Move X0, [X0+928]
	050 Call 0x1C17CF4
	051 Move X0, 0xB60000
	052 Move X0, [X0+3392]
	053 Call 0x1C17CF4
	054 Move X0, 0xB1D000
	055 Move X0, [X0+1200]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+553], W8
	059 Move W1, 32
	060 Move W2, 2
	061 Move X0, X31
	062 Move X3, X31
	063 Call String.CreateString, X0, X1, X2
	064 Compare X21, 0
	065 JumpIfEqual {263}
	066 Move X8, [X21]
	067 Move X22, 0xB60000
	068 Move X24, 0xB60000
	069 Move X23, 0xB60000
	070 Move X9, [X8+2184]
	071 Move X1, [X8+2192]
	072 Move X22, [X22+3240]
	073 Move X24, [X24+3680]
	074 Move X23, [X23+3392]
	075 Move X20, X0
	076 Move X0, X21
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X21]
	079 Move X0, X21
	080 Move X9, [X8+744]
	081 Move X1, [X8+752]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X8, [X22]
	084 Move X22, X0
	085 Move W9, [X8+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Move X0, X22
	091 Call TypeScriptInterfaceGenerator.TypeNameToTS, X0
	092 Move X8, [X24]
	093 Move X2, [X23]
	094 Move X22, [X19]
	095 Move X1, X0
	096 Move X0, X8
	097 Move X3, X31
	098 Call String.Concat, X0, X1, X2
	099 Compare X22, 0
	100 JumpIfEqual {263}
	101 Move X1, X0
	102 Move X0, X22
	103 Move X2, X31
	104 Call StringBuilder.AppendLine, X0, X1
	105 Move X8, [X21]
	106 Move W1, 24
	107 Move X0, X21
	108 Move X9, [X8+1672]
	109 Move X2, [X8+1680]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Compare X0, 0
	112 JumpIfEqual {263}
	113 Move W8, [X0+24]
	114 Move X21, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X28, 0xB1D000
	117 Move X29, 0xB60000
	118 Move X26, 0xB60000
	119 Move X28, [X28+1200]
	120 Move X29, [X29+3368]
	121 Move X26, [X26+3272]
	122 Move W27, W31
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add X8, X21, W27
	125 Move X22, [X8+32]
	126 Compare X22, 0
	127 JumpIfEqual {263}
	128 Move X8, [X22]
	129 Move X0, X22
	130 Move X9, [X8+776]
	131 Move X1, [X8+784]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Compare X0, 0
	134 JumpIfEqual {263}
	135 Move X8, [X0]
	136 Move X9, [X8+360]
	137 Move X1, [X8+368]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X1, [X28]
	140 Move X2, X31
	141 Move X23, X0
	142 Call String.op_Inequality, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {196}
	147 Move X8, [X22]
	148 Move X0, X22
	149 Move X9, [X8+536]
	150 Move X1, [X8+544]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, [X29]
	153 Move X24, X0
	154 Move W9, [X8+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {160}
	157 Move X0, X8
	158 Call 0x1C17DFC
	159 Move X8, [X29]
	160 Move X9, [X8+184]
	161 Move X25, [X9+16]
	162 Compare X25, 0
	163 JumpIfNotEqual {188}
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {170}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 Move X8, [X29]
	170 Move X8, [X8+184]
	171 Move X26, [X8]
	172 Move X8, 0xB60000
	173 Move X8, [X8+1664]
	174 Move X0, [X8]
	175 Call 0x1C17F10
	176 Move X8, 0xB60000
	177 Move X8, [X8+3672]
	178 Move X1, X26
	179 Move X3, X31
	180 Move X25, X0
	181 Move X2, [X8]
	182 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	183 Move X8, [X29]
	184 Move X26, 0xB60000
	185 Move X8, [X8+184]
	186 Move [X8+16], X25
	187 Move X26, [X26+3272]
	188 Move X2, [X26]
	189 Move X0, X24
	190 Move X1, X25
	191 Call Enumerable.Any, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {238}
	196 Move X8, 0xB1B000
	197 Move X24, [X19]
	198 Move X8, [X8+2760]
	199 Move W1, 5
	200 Move X0, [X8]
	201 Call 0x1C17D6C
	202 Compare X0, 0
	203 JumpIfEqual {263}
	204 Move W8, [X0+24]
	205 Move X25, X0
	206 Compare W8, 0
	207 JumpIfEqual {262}
	208 Move [X25+32], X20
	209 Move X8, [X22]
	210 Move X0, X22
	211 Move X9, [X8+424]
	212 Move X1, [X8+432]
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move W8, [X25+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move [X25+40], X0
	218 Move X9, 0xB45000
	219 Move X9, [X9+936]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X9, [X9]
	222 Move [X25+48], X9
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move [X25+56], X23
	225 Move X8, 0xB1D000
	226 Move X8, [X8+928]
	227 Move X0, X25
	228 Move X1, X31
	229 Move X8, [X8]
	230 Move [X25+64], X8
	231 Call String.Concat, X0
	232 Compare X24, 0
	233 JumpIfEqual {263}
	234 Move X1, X0
	235 Move X0, X24
	236 Move X2, X31
	237 Call StringBuilder.AppendLine, X0, X1
	238 Move W8, [X21+24]
	239 Add W27, W27, 1
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X0, [X19]
	242 Compare X0, 0
	243 JumpIfEqual {263}
	244 Move X8, 0xB26000
	245 Move X8, [X8+1752]
	246 Move X20, [X31+80]
	247 Move X19, [X31+88]
	248 Move X22, [X31+64]
	249 Move X21, [X31+72]
	250 Move X24, [X31+48]
	251 Move X23, [X31+56]
	252 Move X1, [X8]
	253 Move X26, [X31+32]
	254 Move X25, [X31+40]
	255 Move X28, [X31+16]
	256 Move X27, [X31+24]
	257 Move X2, X31
	258 Move X29, [X31+96]
	259 Move X30, [X31+104]
	260 Call StringBuilder.AppendLine, X0, X1
	261 Return 
	262 Call 0x1C17F28
	263 Call 0x1C17F20

Method: System.String TypeNameToTS(System.String cSharpName)

Disassembly:
	0x035D7624 STR X0, [X23 + 0x28]
	0x035D7628 B.EQ 0x35D7708
	0x035D762C ADRP X9, 0xB27000
	0x035D7630 LDR X9, [X9 + 0x310]
	0x035D7634 CMP W8, 0x3
	0x035D7638 LDR X9, [X9]
	0x035D763C STR X9, [X23 + 0x30]
	0x035D7640 B.LS 0x35D7708
	0x035D7644 CMP W8, 0x4
	0x035D7648 STR X24, [X23 + 0x38]
	0x035D764C B.EQ 0x35D7708
	0x035D7650 ADRP X8, 0xB22000
	0x035D7654 LDR X8, [X8 + 0x368]
	0x035D7658 MOV X0, X22
	0x035D765C LDR X8, [X8]
	0x035D7660 STR X8, [X23 + 0x40]
	0x035D7664 LDR X8, [X22]
	0x035D7668 LDR X9, [X8 + 0x3B8]
	0x035D766C LDR X1, [X8 + 0x3C0]
	0x035D7670 BLR X9
	0x035D7674 ADRP X8, 0xB61000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {30}
	005 Move W1, 43
	006 Move W2, 95
	007 Move X3, X31
	008 Call String.Replace, X0, X1, X2
	009 Compare X0, 0
	010 JumpIfEqual {30}
	011 Move W1, 46
	012 Move X2, X31
	013 Move X19, X0
	014 Call String.LastIndexOf, X0, X1
	015 Move TEMP, X0
	016 And TEMP, TEMP, -2147483648
	017 Compare TEMP, -2147483648
	018 JumpIfEqual {26}
	019 Add W1, W0, 1
	020 Move X0, X19
	021 Move X2, X31
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call String.Substring, X0, X1
	025 Return X0
	026 Move X0, X19
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return X0
	030 Call 0x1C17F20

Method: System.String PrimitiveTypeToTS(System.Type type, System.Boolean usedForKey = False)

Disassembly:
	0x035D9358 LDR X20, [X20 + 0xF88]
	0x035D935C LDR X21, [X21 + 0xF90]
	0x035D9360 TBNZ X8, 0x0, 0x35D9390
	0x035D9364 ADRP X0, 0xB1A000
	0x035D9368 LDR X0, [X0 + 0x618]
	0x035D936C BL 0x1C16CF4
	0x035D9370 ADRP X0, 0xB5F000
	0x035D9374 LDR X0, [X0 + 0xF88]
	0x035D9378 BL 0x1C16CF4
	0x035D937C ADRP X0, 0xB5F000
	0x035D9380 LDR X0, [X0 + 0xF90]
	0x035D9384 BL 0x1C16CF4
	0x035D9388 MOVZ W8, 0x1
	0x035D938C STRB W8, [X23 + 0x239]
	0x035D9390 LDR X0, [X22]
	0x035D9394 MOVZ W1, 0x39
	0x035D9398 BL 0x1C16D6C
	0x035D939C LDR X1, [X20]
	0x035D93A0 MOV X2, X31
	0x035D93A4 MOV X20, X0
	0x035D93A8 BL 0x32C5BD8
	0x035D93AC LDR X0, [X22]
	0x035D93B0 MOVZ W1, 0x2D
	0x035D93B4 BL 0x1C16D6C
	0x035D93B8 LDR X1, [X21]
	0x035D93BC MOV X2, X31
	0x035D93C0 MOV X21, X0
	0x035D93C4 BL 0x32C5BD8
	0x035D93C8 MOVI V0.2S, 0x1
	0x035D93CC STP X20, X21, [X19]
	0x035D93D0 STRB W31, [X19 + 0x18]
	0x035D93D4 STUR W31, [X19 + 0x19]
	0x035D93D8 STR D0, [X19 + 0x10]
	0x035D93DC STR W31, [X19 + 0x1C]
	0x035D93E0 LDP X20, X19, [X31 + 0x20]
	0x035D93E4 LDP X22, X21, [X31 + 0x10]
	0x035D93E8 LDP X30, X23, [X31], #0x30
	0x035D93EC RET
	0x035D93F0 MOV X1, X31
	0x035D93F4 B 0x33BDD8C
	0x035D93F8 STR X30, [X31 - 0x20]!
	0x035D93FC STP X20, X19, [X31 + 0x10]
	0x035D9400 ADRP X19, 0xE07000
	0x035D9404 ADRP X20, 0xB5F000
	0x035D9408 LDRB W8, [X19 + 0x23B]
	0x035D940C LDR X20, [X20 + 0xF98]
	0x035D9410 TBNZ X8, 0x0, 0x35D9428
	0x035D9414 ADRP X0, 0xB5F000
	0x035D9418 LDR X0, [X0 + 0xF98]
	0x035D941C BL 0x1C16CF4
	0x035D9420 MOVZ W8, 0x1
	0x035D9424 STRB W8, [X19 + 0x23B]
	0x035D9428 LDR X0, [X20]
	0x035D942C BL 0x1C16D9C
	0x035D9430 STR X30, [X31 - 0x20]!
	0x035D9434 STP X20, X19, [X31 + 0x10]
	0x035D9438 ADRP X19, 0xE07000
	0x035D943C ADRP X20, 0xB5F000
	0x035D9440 LDRB W8, [X19 + 0x23C]
	0x035D9444 LDR X20, [X20 + 0xFA0]
	0x035D9448 TBNZ X8, 0x0, 0x35D9460
	0x035D944C ADRP X0, 0xB5F000
	0x035D9450 LDR X0, [X0 + 0xFA0]
	0x035D9454 BL 0x1C16CF4
	0x035D9458 MOVZ W8, 0x1
	0x035D945C STRB W8, [X19 + 0x23C]
	0x035D9460 LDR X0, [X20]
	0x035D9464 BL 0x1C16D9C
	0x035D9468 STR X30, [X31 - 0x20]!
	0x035D946C STP X20, X19, [X31 + 0x10]
	0x035D9470 ADRP X19, 0xE07000
	0x035D9474 ADRP X20, 0xB5F000
	0x035D9478 LDRB W8, [X19 + 0x23D]
	0x035D947C LDR X20, [X20 + 0xFA8]
	0x035D9480 TBNZ X8, 0x0, 0x35D9498
	0x035D9484 ADRP X0, 0xB5F000
	0x035D9488 LDR X0, [X0 + 0xFA8]
	0x035D948C BL 0x1C16CF4
	0x035D9490 MOVZ W8, 0x1
	0x035D9494 STRB W8, [X19 + 0x23D]
	0x035D9498 LDR X0, [X20]
	0x035D949C BL 0x1C16D9C
	0x035D94A0 STR X30, [X31 - 0x20]!
	0x035D94A4 STP X20, X19, [X31 + 0x10]
	0x035D94A8 ADRP X19, 0xE07000
	0x035D94AC ADRP X20, 0xB5F000
	0x035D94B0 LDRB W8, [X19 + 0x23E]
	0x035D94B4 LDR X20, [X20 + 0xFB0]
	0x035D94B8 TBNZ X8, 0x0, 0x35D94D0
	0x035D94BC ADRP X0, 0xB5F000
	0x035D94C0 LDR X0, [X0 + 0xFB0]
	0x035D94C4 BL 0x1C16CF4
	0x035D94C8 MOVZ W8, 0x1
	0x035D94CC STRB W8, [X19 + 0x23E]
	0x035D94D0 LDR X0, [X20]
	0x035D94D4 BL 0x1C16D9C
	0x035D94D8 STR X30, [X31 - 0x20]!
	0x035D94DC STP X20, X19, [X31 + 0x10]
	0x035D94E0 ADRP X19, 0xE07000
	0x035D94E4 ADRP X20, 0xB5F000
	0x035D94E8 LDRB W8, [X19 + 0x23F]
	0x035D94EC LDR X20, [X20 + 0xFB8]
	0x035D94F0 TBNZ X8, 0x0, 0x35D9508
	0x035D94F4 ADRP X0, 0xB5F000
	0x035D94F8 LDR X0, [X0 + 0xFB8]
	0x035D94FC BL 0x1C16CF4
	0x035D9500 MOVZ W8, 0x1
	0x035D9504 STRB W8, [X19 + 0x23F]
	0x035D9508 LDR X0, [X20]
	0x035D950C BL 0x1C16D9C
	0x035D9510 STR X30, [X31 - 0x20]!
	0x035D9514 STP X20, X19, [X31 + 0x10]
	0x035D9518 ADRP X19, 0xE07000
	0x035D951C ADRP X20, 0xB5F000
	0x035D9520 LDRB W8, [X19 + 0x240]
	0x035D9524 LDR X20, [X20 + 0xFC0]
	0x035D9528 TBNZ X8, 0x0, 0x35D9540
	0x035D952C ADRP X0, 0xB5F000
	0x035D9530 LDR X0, [X0 + 0xFC0]
	0x035D9534 BL 0x1C16CF4
	0x035D9538 MOVZ W8, 0x1
	0x035D953C STRB W8, [X19 + 0x240]
	0x035D9540 LDR X0, [X20]
	0x035D9544 BL 0x1C16D9C
	0x035D9548 STR X30, [X31 - 0x20]!
	0x035D954C STP X20, X19, [X31 + 0x10]
	0x035D9550 ADRP X19, 0xE07000
	0x035D9554 ADRP X20, 0xB5F000
	0x035D9558 LDRB W8, [X19 + 0x241]
	0x035D955C LDR X20, [X20 + 0xFC8]
	0x035D9560 TBNZ X8, 0x0, 0x35D9578
	0x035D9564 ADRP X0, 0xB5F000
	0x035D9568 LDR X0, [X0 + 0xFC8]
	0x035D956C BL 0x1C16CF4
	0x035D9570 MOVZ W8, 0x1
	0x035D9574 STRB W8, [X19 + 0x241]
	0x035D9578 LDR X0, [X20]
	0x035D957C BL 0x1C16D9C
	0x035D9580 STR X30, [X31 - 0x20]!
	0x035D9584 STP X20, X19, [X31 + 0x10]
	0x035D9588 ADRP X19, 0xE07000
	0x035D958C ADRP X20, 0xB5F000
	0x035D9590 LDRB W8, [X19 + 0x242]
	0x035D9594 LDR X20, [X20 + 0xFD0]
	0x035D9598 TBNZ X8, 0x0, 0x35D95B0
	0x035D959C ADRP X0, 0xB5F000
	0x035D95A0 LDR X0, [X0 + 0xFD0]
	0x035D95A4 BL 0x1C16CF4
	0x035D95A8 MOVZ W8, 0x1
	0x035D95AC STRB W8, [X19 + 0x242]
	0x035D95B0 LDR X0, [X20]
	0x035D95B4 BL 0x1C16D9C
	0x035D95B8 RET
	0x035D95BC STR X30, [X31 - 0x20]!
	0x035D95C0 STP X20, X19, [X31 + 0x10]
	0x035D95C4 ADRP X19, 0xE07000
	0x035D95C8 ADRP X20, 0xB5F000
	0x035D95CC LDRB W8, [X19 + 0x243]
	0x035D95D0 LDR X20, [X20 + 0xFD8]
	0x035D95D4 TBNZ X8, 0x0, 0x35D95EC
	0x035D95D8 ADRP X0, 0xB5F000
	0x035D95DC LDR X0, [X0 + 0xFD8]
	0x035D95E0 BL 0x1C16CF4
	0x035D95E4 MOVZ W8, 0x1
	0x035D95E8 STRB W8, [X19 + 0x243]
	0x035D95EC LDR X0, [X20]
	0x035D95F0 BL 0x1C16D9C
	0x035D95F4 STR X30, [X31 - 0x20]!
	0x035D95F8 STP X20, X19, [X31 + 0x10]
	0x035D95FC ADRP X19, 0xE07000
	0x035D9600 ADRP X20, 0xB5F000
	0x035D9604 LDRB W8, [X19 + 0x244]
	0x035D9608 LDR X20, [X20 + 0xFE0]
	0x035D960C TBNZ X8, 0x0, 0x35D9624
	0x035D9610 ADRP X0, 0xB5F000
	0x035D9614 LDR X0, [X0 + 0xFE0]
	0x035D9618 BL 0x1C16CF4
	0x035D961C MOVZ W8, 0x1
	0x035D9620 STRB W8, [X19 + 0x244]
	0x035D9624 LDR X0, [X20]
	0x035D9628 BL 0x1C16D9C
	0x035D962C STR X30, [X31 - 0x20]!
	0x035D9630 STP X20, X19, [X31 + 0x10]
	0x035D9634 ADRP X19, 0xE07000
	0x035D9638 ADRP X20, 0xB5F000
	0x035D963C LDRB W8, [X19 + 0x245]
	0x035D9640 LDR X20, [X20 + 0xFE8]
	0x035D9644 TBNZ X8, 0x0, 0x35D965C
	0x035D9648 ADRP X0, 0xB5F000
	0x035D964C LDR X0, [X0 + 0xFE8]
	0x035D9650 BL 0x1C16CF4
	0x035D9654 MOVZ W8, 0x1
	0x035D9658 STRB W8, [X19 + 0x245]
	0x035D965C LDR X0, [X20]
	0x035D9660 BL 0x1C16D9C
	0x035D9664 STR X30, [X31 - 0x20]!
	0x035D9668 STP X20, X19, [X31 + 0x10]
	0x035D966C ADRP X19, 0xE07000
	0x035D9670 ADRP X20, 0xB5F000
	0x035D9674 LDRB W8, [X19 + 0x246]
	0x035D9678 LDR X20, [X20 + 0xFF0]
	0x035D967C TBNZ X8, 0x0, 0x35D9694
	0x035D9680 ADRP X0, 0xB5F000
	0x035D9684 LDR X0, [X0 + 0xFF0]
	0x035D9688 BL 0x1C16CF4
	0x035D968C MOVZ W8, 0x1
	0x035D9690 STRB W8, [X19 + 0x246]
	0x035D9694 LDR X0, [X20]
	0x035D9698 BL 0x1C16D9C
	0x035D969C STR X30, [X31 - 0x20]!
	0x035D96A0 STP X20, X19, [X31 + 0x10]
	0x035D96A4 ADRP X19, 0xE07000
	0x035D96A8 ADRP X20, 0xB5F000
	0x035D96AC LDRB W8, [X19 + 0x247]
	0x035D96B0 LDR X20, [X20 + 0xFF8]
	0x035D96B4 TBNZ X8, 0x0, 0x35D96CC
	0x035D96B8 ADRP X0, 0xB5F000
	0x035D96BC LDR X0, [X0 + 0xFF8]
	0x035D96C0 BL 0x1C16CF4
	0x035D96C4 MOVZ W8, 0x1
	0x035D96C8 STRB W8, [X19 + 0x247]
	0x035D96CC LDR X0, [X20]
	0x035D96D0 BL 0x1C16D9C
	0x035D96D4 STR X30, [X31 - 0x20]!
	0x035D96D8 STP X20, X19, [X31 + 0x10]
	0x035D96DC ADRP X19, 0xE07000
	0x035D96E0 ADRP X20, 0xB60000
	0x035D96E4 LDRB W8, [X19 + 0x248]
	0x035D96E8 LDR X20, [X20]
	0x035D96EC TBNZ X8, 0x0, 0x35D9704
	0x035D96F0 ADRP X0, 0xB60000
	0x035D96F4 LDR X0, [X0]
	0x035D96F8 BL 0x1C16CF4
	0x035D96FC MOVZ W8, 0x1
	0x035D9700 STRB W8, [X19 + 0x248]
	0x035D9704 LDR X0, [X20]
	0x035D9708 BL 0x1C16D9C
	0x035D970C STR X30, [X31 - 0x20]!
	0x035D9710 STP X20, X19, [X31 + 0x10]
	0x035D9714 ADRP X19, 0xE07000
	0x035D9718 ADRP X20, 0xB60000
	0x035D971C LDRB W8, [X19 + 0x249]
	0x035D9720 LDR X20, [X20 + 0x8]
	0x035D9724 TBNZ X8, 0x0, 0x35D973C
	0x035D9728 ADRP X0, 0xB60000
	0x035D972C LDR X0, [X0 + 0x8]
	0x035D9730 BL 0x1C16CF4
	0x035D9734 MOVZ W8, 0x1
	0x035D9738 STRB W8, [X19 + 0x249]
	0x035D973C LDR X0, [X20]
	0x035D9740 BL 0x1C16D9C
	0x035D9744 STP X30, X19, [X31 - 0x10]!
	0x035D9748 ADRP X0, 0xB45000
	0x035D974C LDR X0, [X0 + 0xC50]
	0x035D9750 BL 0x1C16D08
	0x035D9754 BL 0x1C16F10
	0x035D9758 MOV X1, X31
	0x035D975C MOV X19, X0
	0x035D9760 BL 0x338E344
	0x035D9764 ADRP X0, 0xB60000
	0x035D9768 LDR X0, [X0 + 0x10]
	0x035D976C BL 0x1C16D08
	0x035D9770 MOV X1, X0
	0x035D9774 MOV X0, X19
	0x035D9778 BL 0x1C16DEC
	0x035D977C RET
	0x035D9780 STR X30, [X31 - 0x30]!
	0x035D9784 STP X22, X21, [X31 + 0x10]
	0x035D9788 STP X20, X19, [X31 + 0x20]
	0x035D978C ADRP X21, 0xE07000
	0x035D9790 ADRP X22, 0xB1C000
	0x035D9794 LDRB W8, [X21 + 0x24A]
	0x035D9798 LDR X22, [X22 + 0xC48]
	0x035D979C MOV X19, X1
	0x035D97A0 MOV X20, X0
	0x035D97A4 TBNZ X8, 0x0, 0x35D97BC
	0x035D97A8 ADRP X0, 0xB1C000
	0x035D97AC LDR X0, [X0 + 0xC48]
	0x035D97B0 BL 0x1C16CF4
	0x035D97B4 MOVZ W8, 0x1
	0x035D97B8 STRB W8, [X21 + 0x24A]
	0x035D97BC LDR X0, [X22]
	0x035D97C0 LDR W8, [X0 + 0xE0]
	0x035D97C4 CBNZ W8, 0x35D97CC
	0x035D97C8 BL 0x1C16DFC
	0x035D97CC MOV X0, X31
	0x035D97D0 BL 0x3338524
	0x035D97D4 MOV X1, X20
	0x035D97D8 MOV X2, X19
	0x035D97DC LDP X20, X19, [X31 + 0x20]
	0x035D97E0 LDP X22, X21, [X31 + 0x10]
	0x035D97E4 MOV X3, X31
	0x035D97E8 LDR X30, [X31], #0x30
	0x035D97EC B 0x3227D04
	0x035D97F0 STP X30, X21, [X31 - 0x20]!
	0x035D97F4 STP X20, X19, [X31 + 0x10]
	0x035D97F8 ADRP X21, 0xE07000
	0x035D97FC ADRP X20, 0xB27000
	0x035D9800 LDRB W8, [X21 + 0x24B]
	0x035D9804 LDR X20, [X20 + 0xDF0]
	0x035D9808 MOV X19, X0
	0x035D980C TBNZ X8, 0x0, 0x35D983C
	0x035D9810 ADRP X0, 0xB27000
	0x035D9814 LDR X0, [X0 + 0xDF0]
	0x035D9818 BL 0x1C16CF4
	0x035D981C ADRP X0, 0xB47000
	0x035D9820 LDR X0, [X0 + 0xBD8]
	0x035D9824 BL 0x1C16CF4
	0x035D9828 ADRP X0, 0xB4A000
	0x035D982C LDR X0, [X0 + 0x4A0]
	0x035D9830 BL 0x1C16CF4
	0x035D9834 MOVZ W8, 0x1
	0x035D9838 STRB W8, [X21 + 0x24B]
	0x035D983C LDR X0, [X20]
	0x035D9840 ADRP X20, 0xB47000
	0x035D9844 LDR W8, [X0 + 0xE0]
	0x035D9848 LDR X20, [X20 + 0xBD8]
	0x035D984C CBNZ W8, 0x35D9854
	0x035D9850 BL 0x1C16DFC
	0x035D9854 MOV X0, X19
	0x035D9858 MOV X1, X31
	0x035D985C BL 0x3251CE4
	0x035D9860 LDR X0, [X20]
	0x035D9864 LDR W8, [X0 + 0xE0]
	0x035D9868 CBNZ W8, 0x35D9870
	0x035D986C BL 0x1C16DFC
	0x035D9870 MOV X0, X31
	0x035D9874 BL 0x325F54C
	0x035D9878 TBNZ X0, 0x0, 0x35D9904
	0x035D987C ADRP X8, 0xB4A000
	0x035D9880 LDR X8, [X8 + 0x4A0]
	0x035D9884 LDR X0, [X8]
	0x035D9888 BL 0x1C16F10
	0x035D988C MOV X1, X31
	0x035D9890 MOV X20, X0
	0x035D9894 BL 0x3256C58
	0x035D9898 LDR X8, [X19]
	0x035D989C STR X20, [X19 + 0x48]
	0x035D98A0 MOV X0, X19
	0x035D98A4 LDP X9, X1, [X8 + 0x198]
	0x035D98A8 BLR X9
	0x035D98AC CBZ X20, 0x35D9900
	0x035D98B0 LDR X8, [X20]
	0x035D98B4 MOV W1, W0
	0x035D98B8 MOV X0, X20
	0x035D98BC LDP X9, X2, [X8 + 0x1A8]
	0x035D98C0 BLR X9
	0x035D98C4 LDR X8, [X19]
	0x035D98C8 LDR X20, [X19 + 0x48]
	0x035D98CC MOV X0, X19
	0x035D98D0 LDR X9, [X8 + 0x218]
	0x035D98D4 LDR X1, [X8 + 0x220]
	0x035D98D8 BLR X9
	0x035D98DC CBZ X20, 0x35D9900
	0x035D98E0 LDR X8, [X20]
	0x035D98E4 MOV W1, W0
	0x035D98E8 MOV X0, X20
	0x035D98EC LDP X20, X19, [X31 + 0x10]
	0x035D98F0 LDR X3, [X8 + 0x228]
	0x035D98F4 LDR X2, [X8 + 0x230]
	0x035D98F8 LDP X30, X21, [X31], #0x20
	0x035D98FC BR X3
	0x035D9900 BL 0x1C16F20
	0x035D9904 ADRP X0, 0xB4A000
	0x035D9908 LDR X0, [X0 + 0xA0]
	0x035D990C BL 0x1C16D08
	0x035D9910 MOV X19, X0
	0x035D9914 ADRP X0, 0xB1A000
	0x035D9918 LDR X0, [X0 + 0x5B0]
	0x035D991C BL 0x1C16D08
	0x035D9920 BL 0x1C16F10
	0x035D9924 MOV X1, X19
	0x035D9928 MOV X2, X31
	0x035D992C MOV X20, X0
	0x035D9930 BL 0x337DF1C
	0x035D9934 ADRP X0, 0xB60000
	0x035D9938 LDR X0, [X0 + 0x18]
	0x035D993C BL 0x1C16D08
	0x035D9940 MOV X1, X0
	0x035D9944 MOV X0, X20
	0x035D9948 BL 0x1C16DEC
	0x035D994C STR X30, [X31 - 0x10]!
	0x035D9950 LDR X0, [X0 + 0x48]
	0x035D9954 CBZ X0, 0x35D9968
	0x035D9958 LDR X8, [X0]
	0x035D995C LDP X2, X1, [X8 + 0x1B8]
	0x035D9960 LDR X30, [X31], #0x10
	0x035D9964 BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE08000
	006 Move W8, [X21+554]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {111}
	013 Move X0, 0xB43000
	014 Move X0, [X0+2912]
	015 Call 0x1C17CF4
	016 Move X0, 0xB60000
	017 Move X0, [X0+3240]
	018 Call 0x1C17CF4
	019 Move X0, 0xB1B000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move X0, 0xB60000
	023 Move X0, [X0+3688]
	024 Call 0x1C17CF4
	025 Move X0, 0xB60000
	026 Move X0, [X0+3696]
	027 Call 0x1C17CF4
	028 Move X0, 0xB60000
	029 Move X0, [X0+3704]
	030 Call 0x1C17CF4
	031 Move X0, 0xB45000
	032 Move X0, [X0+2744]
	033 Call 0x1C17CF4
	034 Move X0, 0xB60000
	035 Move X0, [X0+3712]
	036 Call 0x1C17CF4
	037 Move X0, 0xB60000
	038 Move X0, [X0+3720]
	039 Call 0x1C17CF4
	040 Move X0, 0xB60000
	041 Move X0, [X0+3728]
	042 Call 0x1C17CF4
	043 Move X0, 0xB60000
	044 Move X0, [X0+3736]
	045 Call 0x1C17CF4
	046 Move X0, 0xB60000
	047 Move X0, [X0+3744]
	048 Call 0x1C17CF4
	049 Move X0, 0xB60000
	050 Move X0, [X0+3752]
	051 Call 0x1C17CF4
	052 Move X0, 0xB60000
	053 Move X0, [X0+3760]
	054 Call 0x1C17CF4
	055 Move X0, 0xB4D000
	056 Move X0, [X0+1384]
	057 Call 0x1C17CF4
	058 Move X0, 0xB60000
	059 Move X0, [X0+3768]
	060 Call 0x1C17CF4
	061 Move X0, 0xB60000
	062 Move X0, [X0+3776]
	063 Call 0x1C17CF4
	064 Move X0, 0xB60000
	065 Move X0, [X0+3784]
	066 Call 0x1C17CF4
	067 Move X0, 0xB60000
	068 Move X0, [X0+3792]
	069 Call 0x1C17CF4
	070 Move X0, 0xB60000
	071 Move X0, [X0+3800]
	072 Call 0x1C17CF4
	073 Move X0, 0xB60000
	074 Move X0, [X0+3808]
	075 Call 0x1C17CF4
	076 Move X0, 0xB60000
	077 Move X0, [X0+3816]
	078 Call 0x1C17CF4
	079 Move X0, 0xB60000
	080 Move X0, [X0+3824]
	081 Call 0x1C17CF4
	082 Move X0, 0xB60000
	083 Move X0, [X0+3832]
	084 Call 0x1C17CF4
	085 Move X0, 0xB60000
	086 Move X0, [X0+3840]
	087 Call 0x1C17CF4
	088 Move X0, 0xB60000
	089 Move X0, [X0+3848]
	090 Call 0x1C17CF4
	091 Move X0, 0xB60000
	092 Move X0, [X0+3856]
	093 Call 0x1C17CF4
	094 Move X0, 0xB60000
	095 Move X0, [X0+3864]
	096 Call 0x1C17CF4
	097 Move X0, 0xB60000
	098 Move X0, [X0+3872]
	099 Call 0x1C17CF4
	100 Move X0, 0xB60000
	101 Move X0, [X0+3880]
	102 Call 0x1C17CF4
	103 Move X0, 0xB60000
	104 Move X0, [X0+3888]
	105 Call 0x1C17CF4
	106 Move X0, 0xB60000
	107 Move X0, [X0+3896]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X21+554], W8
	111 Move TEMP, X20
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {156}
	115 Compare X19, 0
	116 JumpIfEqual {386}
	117 Move X8, [X19]
	118 Move X0, X19
	119 Move X9, [X8+1416]
	120 Move X1, [X8+1424]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {158}
	126 Move X8, [X19]
	127 Move X0, X19
	128 Move X9, [X8+2184]
	129 Move X1, [X8+2192]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X8, 0xB1B000
	132 Move X8, [X8+1728]
	133 Move X9, 0xB43000
	134 Move X19, X0
	135 Move X8, [X8]
	136 Move X9, [X9+2912]
	137 Move W10, [X8+224]
	138 Move X20, [X9]
	139 Compare W10, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 Move X0, X20
	144 Move X1, X31
	145 Call Type.GetTypeFromHandle, X0
	146 Move X1, X0
	147 Move X0, X19
	148 Move X2, X31
	149 Call Type.op_Equality, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {364}
	154 Move X8, 0xB45000
	155 Move X8, [X8+2744]
	156 Compare X19, 0
	157 JumpIfEqual {386}
	158 Move X8, [X19]
	159 Move X0, X19
	160 Move X9, [X8+744]
	161 Move X1, [X8+752]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X19, X0
	164 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	165 Move W8, 0x296C
	166 NotImplemented "Instruction MOVK not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move W8, 0x3EE0
	169 NotImplemented "Instruction MOVK not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move W8, 0x3288
	172 NotImplemented "Instruction MOVK not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W8, 0x1EE8
	175 NotImplemented "Instruction MOVK not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move W8, 0x3288
	178 NotImplemented "Instruction MOVK not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X8, 0xB60000
	181 Move X8, [X8+3720]
	182 Move X0, X19
	183 Move X2, X31
	184 Move X1, [X8]
	185 Call String.op_Equality, X0, X1
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {372}
	190 Move X8, 0xB60000
	191 Move X8, [X8+3728]
	192 Move W8, 0x5AA4
	193 NotImplemented "Instruction MOVK not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move W8, 0x4F3E
	196 NotImplemented "Instruction MOVK not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move W8, 0x63C5
	199 NotImplemented "Instruction MOVK not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X8, 0xB60000
	202 Move X8, [X8+3688]
	203 Move W8, 0xDD63
	204 NotImplemented "Instruction MOVK not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move W8, 1685
	207 NotImplemented "Instruction MOVK not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move W8, 0xDD63
	210 NotImplemented "Instruction MOVK not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X8, 0xB60000
	213 Move X8, [X8+3736]
	214 Move W8, 0xD0F2
	215 NotImplemented "Instruction MOVK not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move W8, 0x38BC
	218 NotImplemented "Instruction MOVK not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move W8, 0xD2CB
	221 NotImplemented "Instruction MOVK not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move W8, 0xD0F2
	224 NotImplemented "Instruction MOVK not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X8, 0xB60000
	227 Move X8, [X8+3888]
	228 Move W8, 0x1C5E
	229 NotImplemented "Instruction MOVK not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move W8, 0xE55B
	232 NotImplemented "Instruction MOVK not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move W8, 0x3EE0
	235 NotImplemented "Instruction MOVK not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X8, 0xB60000
	238 Move X8, [X8+3768]
	239 Move W8, 0xE6FD
	240 NotImplemented "Instruction MOVK not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move W8, 0x489B
	243 NotImplemented "Instruction MOVK not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move W8, 0x5AA4
	246 NotImplemented "Instruction MOVK not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X8, 0xB60000
	249 Move X8, [X8+3784]
	250 Move W8, 0x58D6
	251 NotImplemented "Instruction MOVK not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move W8, 0x5A69
	254 NotImplemented "Instruction MOVK not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move W8, 0x296C
	257 NotImplemented "Instruction MOVK not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X8, 0xB60000
	260 Move X8, [X8+3816]
	261 Move W8, 0xD378
	262 NotImplemented "Instruction MOVK not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W8, 570
	265 NotImplemented "Instruction MOVK not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move W8, 0xBBA7
	268 NotImplemented "Instruction MOVK not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X8, 0xB4D000
	271 Move X8, [X8+1384]
	272 Move X1, [X8]
	273 Move X0, X19
	274 Move X2, X31
	275 Call String.op_Equality, X0, X1
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {154}
	280 Move X8, 0xB60000
	281 Move X8, [X8+3776]
	282 Move X8, 0xB60000
	283 Move X8, [X8+3792]
	284 Move X8, 0xB60000
	285 Move X8, [X8+3880]
	286 Move X8, 0xB60000
	287 Move X8, [X8+3864]
	288 Move X8, 0xB60000
	289 Move X8, [X8+3896]
	290 Move X8, 0xB60000
	291 Move X8, [X8+3840]
	292 Move X0, X19
	293 Move X2, X31
	294 Move X1, [X8]
	295 Call String.op_Equality, X0, X1
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {372}
	300 Move X8, 0xB60000
	301 Move X8, [X8+3848]
	302 Move X8, 0xB60000
	303 Move X8, [X8+3872]
	304 Move X8, 0xB60000
	305 Move X8, [X8+3832]
	306 Move X8, 0xB60000
	307 Move X8, [X8+3856]
	308 Move X0, X19
	309 Move X2, X31
	310 Move X1, [X8]
	311 Call String.op_Equality, X0, X1
	312 Move TEMP, X0
	313 And TEMP, TEMP, 1
	314 Compare TEMP, 1
	315 JumpIfNotEqual {372}
	316 Move X8, 0xB60000
	317 Move X8, [X8+3824]
	318 Move X8, 0xB60000
	319 Move X8, [X8+3696]
	320 Move X0, X19
	321 Move X2, X31
	322 Move X1, [X8]
	323 Call String.op_Equality, X0, X1
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {372}
	328 Move X8, 0xB60000
	329 Move X8, [X8+3752]
	330 Move X8, 0xB60000
	331 Move X8, [X8+3800]
	332 Move X0, X19
	333 Move X2, X31
	334 Move X1, [X8]
	335 Call String.op_Equality, X0, X1
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfNotEqual {372}
	340 Move X8, 0xB60000
	341 Move X8, [X8+3704]
	342 Move X8, 0xB60000
	343 Move X8, [X8+3712]
	344 Move X1, [X8]
	345 Move X0, X19
	346 Move X2, X31
	347 Call String.op_Equality, X0, X1
	348 Move TEMP, X0
	349 And TEMP, TEMP, 1
	350 Compare TEMP, 1
	351 JumpIfNotEqual {372}
	352 Move X8, 0xB60000
	353 Move X8, [X8+3808]
	354 Move X8, 0xB60000
	355 Move X8, [X8+3760]
	356 Move X1, [X8]
	357 Move X0, X19
	358 Move X2, X31
	359 Call String.op_Equality, X0, X1
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {372}
	364 Move X8, 0xB60000
	365 Move X8, [X8+3744]
	366 Move X0, [X8]
	367 Move X20, [X31+16]
	368 Move X19, [X31+24]
	369 Move X30, [X31+32]
	370 Move X21, [X31+40]
	371 Return X0
	372 Move X8, 0xB60000
	373 Move X8, [X8+3240]
	374 Move X0, [X8]
	375 Move W8, [X0+224]
	376 Compare W8, 0
	377 JumpIfNotEqual {379}
	378 Call 0x1C17DFC
	379 Move X0, X19
	380 Move X20, [X31+16]
	381 Move X19, [X31+24]
	382 Move X30, [X31+32]
	383 Move X21, [X31+40]
	384 Call TypeScriptInterfaceGenerator.TypeNameToTS, X0
	385 Return X0
	386 Call 0x1C17F20

Method: System.String GenericTypeToTS(System.Type type, out System.Type genericArgument0, out System.Type genericArgument1)

Disassembly:
	0x035D8710 CMP W0, W8
	0x035D8714 B.NE 0x35D893C
	0x035D8718 ADRP X8, 0xB60000
	0x035D871C LDR X8, [X8 + 0xEB8]
	0x035D8720 B 0x35D8910
	0x035D8724 MOVZ W8, 0xE6FD
	0x035D8728 MOVK W8, 0x94A80000
	0x035D872C CMP W0, W8
	0x035D8730 B.EQ 0x35D885C
	0x035D8734 MOVZ W8, 0x489B
	0x035D8738 MOVK W8, 0x9AC70000
	0x035D873C CMP W0, W8
	0x035D8740 B.EQ 0x35D8868
	0x035D8744 MOVZ W8, 0x5AA4
	0x035D8748 MOVK W8, 0xAC830000
	0x035D874C CMP W0, W8
	0x035D8750 B.NE 0x35D893C
	0x035D8754 ADRP X8, 0xB60000
	0x035D8758 LDR X8, [X8 + 0xEC8]
	0x035D875C B 0x35D8910
	0x035D8760 MOVZ W8, 0x58D6
	0x035D8764 MOVK W8, 0x62CF0000
	0x035D8768 CMP W0, W8
	0x035D876C B.EQ 0x35D8890
	0x035D8770 MOVZ W8, 0x5A69
	0x035D8774 MOVK W8, 0x63CF0000
	0x035D8778 CMP W0, W8
	0x035D877C B.EQ 0x35D88B8
	0x035D8780 MOVZ W8, 0x296C
	0x035D8784 MOVK W8, 0x65320000
	0x035D8788 CMP W0, W8
	0x035D878C B.NE 0x35D893C
	0x035D8790 ADRP X8, 0xB60000
	0x035D8794 LDR X8, [X8 + 0xEE8]
	0x035D8798 B 0x35D8910
	0x035D879C MOVZ W8, 0xD378
	0x035D87A0 MOVK W8, 0xE05E0000
	0x035D87A4 CMP W0, W8
	0x035D87A8 B.EQ 0x35D88E0
	0x035D87AC MOVZ W8, 0x23A
	0x035D87B0 MOVK W8, 0xF92D0000
	0x035D87B4 CMP W0, W8
	0x035D87B8 B.EQ 0x35D8908
	0x035D87BC MOVZ W8, 0xBBA7
	0x035D87C0 MOVK W8, 0xFA6B0000
	0x035D87C4 CMP W0, W8
	0x035D87C8 B.NE 0x35D893C
	0x035D87CC ADRP X8, 0xB4D000
	0x035D87D0 LDR X8, [X8 + 0x568]
	0x035D87D4 LDR X1, [X8]
	0x035D87D8 MOV X0, X19
	0x035D87DC MOV X2, X31
	0x035D87E0 BL 0x321BA08
	0x035D87E4 TBNZ X0, 0x0, 0x35D857C
	0x035D87E8 B 0x35D893C
	0x035D87EC ADRP X8, 0xB60000
	0x035D87F0 LDR X8, [X8 + 0xEC0]
	0x035D87F4 B 0x35D88E8
	0x035D87F8 ADRP X8, 0xB60000
	0x035D87FC LDR X8, [X8 + 0xED0]
	0x035D8800 B 0x35D8910
	0x035D8804 ADRP X8, 0xB60000
	0x035D8808 LDR X8, [X8 + 0xF28]
	0x035D880C B 0x35D8910
	0x035D8810 ADRP X8, 0xB60000
	0x035D8814 LDR X8, [X8 + 0xF18]
	0x035D8818 B 0x35D8910
	0x035D881C ADRP X8, 0xB60000
	0x035D8820 LDR X8, [X8 + 0xF38]
	0x035D8824 B 0x35D8910
	0x035D8828 ADRP X8, 0xB60000
	0x035D882C LDR X8, [X8 + 0xF00]
	0x035D8830 MOV X0, X19
	0x035D8834 MOV X2, X31
	0x035D8838 LDR X1, [X8]
	0x035D883C BL 0x321BA08
	0x035D8840 TBZ X0, 0x0, 0x35D893C
	0x035D8844 ADRP X8, 0xB60000
	0x035D8848 LDR X8, [X8 + 0xF08]
	0x035D884C B 0x35D892C
	0x035D8850 ADRP X8, 0xB60000
	0x035D8854 LDR X8, [X8 + 0xF20]
	0x035D8858 B 0x35D8910
	0x035D885C ADRP X8, 0xB60000
	0x035D8860 LDR X8, [X8 + 0xEF8]
	0x035D8864 B 0x35D88E8
	0x035D8868 ADRP X8, 0xB60000
	0x035D886C LDR X8, [X8 + 0xF10]
	0x035D8870 MOV X0, X19
	0x035D8874 MOV X2, X31
	0x035D8878 LDR X1, [X8]
	0x035D887C BL 0x321BA08
	0x035D8880 TBZ X0, 0x0, 0x35D893C
	0x035D8884 ADRP X8, 0xB60000
	0x035D8888 LDR X8, [X8 + 0xEF0]
	0x035D888C B 0x35D892C
	0x035D8890 ADRP X8, 0xB60000
	0x035D8894 LDR X8, [X8 + 0xE70]
	0x035D8898 MOV X0, X19
	0x035D889C MOV X2, X31
	0x035D88A0 LDR X1, [X8]
	0x035D88A4 BL 0x321BA08
	0x035D88A8 TBZ X0, 0x0, 0x35D893C
	0x035D88AC ADRP X8, 0xB60000
	0x035D88B0 LDR X8, [X8 + 0xEA8]
	0x035D88B4 B 0x35D892C
	0x035D88B8 ADRP X8, 0xB60000
	0x035D88BC LDR X8, [X8 + 0xED8]
	0x035D88C0 MOV X0, X19
	0x035D88C4 MOV X2, X31
	0x035D88C8 LDR X1, [X8]
	0x035D88CC BL 0x321BA08
	0x035D88D0 TBZ X0, 0x0, 0x35D893C
	0x035D88D4 ADRP X8, 0xB60000
	0x035D88D8 LDR X8, [X8 + 0xE78]
	0x035D88DC B 0x35D892C
	0x035D88E0 ADRP X8, 0xB60000
	0x035D88E4 LDR X8, [X8 + 0xE80]
	0x035D88E8 LDR X1, [X8]
	0x035D88EC MOV X0, X19
	0x035D88F0 MOV X2, X31
	0x035D88F4 BL 0x321BA08
	0x035D88F8 TBZ X0, 0x0, 0x35D893C
	0x035D88FC ADRP X8, 0xB60000
	0x035D8900 LDR X8, [X8 + 0xEE0]
	0x035D8904 B 0x35D892C
	0x035D8908 ADRP X8, 0xB60000
	0x035D890C LDR X8, [X8 + 0xEB0]
	0x035D8910 LDR X1, [X8]
	0x035D8914 MOV X0, X19
	0x035D8918 MOV X2, X31
	0x035D891C BL 0x321BA08
	0x035D8920 TBZ X0, 0x0, 0x35D893C
	0x035D8924 ADRP X8, 0xB60000
	0x035D8928 LDR X8, [X8 + 0xEA0]
	0x035D892C LDR X0, [X8]
	0x035D8930 LDP X20, X19, [X31 + 0x10]
	0x035D8934 LDP X30, X21, [X31], #0x20
	0x035D8938 RET
	0x035D893C ADRP X8, 0xB60000
	0x035D8940 LDR X8, [X8 + 0xCA8]
	0x035D8944 LDR X0, [X8]
	0x035D8948 LDR W8, [X0 + 0xE0]
	0x035D894C CBNZ W8, 0x35D8954
	0x035D8950 BL 0x1C16DFC
	0x035D8954 MOV X0, X19
	0x035D8958 LDP X20, X19, [X31 + 0x10]
	0x035D895C LDP X30, X21, [X31], #0x20
	0x035D8960 B 0x35D6624
	0x035D8964 BL 0x1C16F20
	0x035D8968 STR X30, [X31 - 0x30]!
	0x035D896C STP X22, X21, [X31 + 0x10]
	0x035D8970 STP X20, X19, [X31 + 0x20]
	0x035D8974 CBZ X0, 0x35D89CC
	0x035D8978 LDR W8, [X0 + 0x10]
	0x035D897C MOVZ W20, 0x9DC5
	0x035D8980 MOV X19, X0
	0x035D8984 MOVK W20, 0x811C0000
	0x035D8988 CMP W8, 0x1
	0x035D898C B.LT 0x35D89D0
	0x035D8990 MOVZ W22, 0x193
	0x035D8994 MOV W21, W31
	0x035D8998 MOVK W22, 0x1000000
	0x035D899C MOV X0, X19
	0x035D89A0 MOV W1, W21
	0x035D89A4 MOV X2, X31
	0x035D89A8 BL 0x3222A1C
	0x035D89AC LDR W8, [X19 + 0x10]
	0x035D89B0 AND W9, W0, 0xFFFF
	0x035D89B4 EOR W9, W20, W9, 0x0
	0x035D89B8 ADD W21, W21, 0x1
	0x035D89BC CMP W21, W8
	0x035D89C0 MUL W20, W9, W22
	0x035D89C4 B.LT 0x35D899C
	0x035D89C8 B 0x35D89D0
	0x035D89CC MOV W20, W31
	0x035D89D0 MOV W0, W20
	0x035D89D4 LDP X20, X19, [X31 + 0x20]
	0x035D89D8 LDP X22, X21, [X31 + 0x10]
	0x035D89DC LDR X30, [X31], #0x30
	0x035D89E0 RET
	0x035D89E4 SUB X31, X31, 0x40
	0x035D89E8 STR X30, [X31 + 0x10]
	0x035D89EC STP X22, X21, [X31 + 0x20]
	0x035D89F0 STP X20, X19, [X31 + 0x30]
	0x035D89F4 ADRP X20, 0xE08000
	0x035D89F8 LDRB W8, [X20 + 0x230]
	0x035D89FC MOV X19, X0
	0x035D8A00 TBNZ X8, 0x0, 0x35D8A54
	0x035D8A04 ADRP X0, 0xB43000
	0x035D8A08 LDR X0, [X0 + 0xB60]
	0x035D8A0C BL 0x1C16CF4
	0x035D8A10 ADRP X0, 0xB60000
	0x035D8A14 LDR X0, [X0 + 0xCA8]
	0x035D8A18 BL 0x1C16CF4
	0x035D8A1C ADRP X0, 0xB1B000
	0x035D8A20 LDR X0, [X0 + 0x6C0]
	0x035D8A24 BL 0x1C16CF4
	0x035D8A28 ADRP X0, 0xB4C000
	0x035D8A2C LDR X0, [X0 + 0x810]
	0x035D8A30 BL 0x1C16CF4
	0x035D8A34 ADRP X0, 0xB60000
	0x035D8A38 LDR X0, [X0 + 0xF40]
	0x035D8A3C BL 0x1C16CF4
	0x035D8A40 ADRP X0, 0xB4C000
	0x035D8A44 LDR X0, [X0 + 0xC90]
	0x035D8A48 BL 0x1C16CF4
	0x035D8A4C MOVZ W8, 0x1
	0x035D8A50 STRB W8, [X20 + 0x230]
	0x035D8A54 STR X31, [X31 + 0x18]
	0x035D8A58 STR X31, [X31 + 0x8]
	0x035D8A5C CBZ X19, 0x35D8C00
	0x035D8A60 ADRP X21, 0xB60000
	0x035D8A64 LDR X21, [X21 + 0xCA8]
	0x035D8A68 MOV X0, X19
	0x035D8A6C MOV X1, X31
	0x035D8A70 BL 0x3397374
	0x035D8A74 TBNZ X0, 0x0, 0x35D8AF8
	0x035D8A78 ADRP X22, 0xB1B000
	0x035D8A7C LDR X22, [X22 + 0x6C0]
	0x035D8A80 ADRP X8, 0xB4C000
	0x035D8A84 LDR X0, [X22]
	0x035D8A88 LDR X8, [X8 + 0x810]
	0x035D8A8C LDR W9, [X0 + 0xE0]
	0x035D8A90 LDR X20, [X8]
	0x035D8A94 CBNZ W9, 0x35D8A9C
	0x035D8A98 BL 0x1C16DFC
	0x035D8A9C MOV X0, X20
	0x035D8AA0 MOV X1, X31
	0x035D8AA4 BL 0x338C698
	0x035D8AA8 MOV X1, X0
	0x035D8AAC MOV X0, X19
	0x035D8AB0 MOV X2, X31
	0x035D8AB4 BL 0x3395194
	0x035D8AB8 TBNZ X0, 0x0, 0x35D8AF8
	0x035D8ABC ADRP X8, 0xB43000
	0x035D8AC0 LDR X0, [X22]
	0x035D8AC4 LDR X8, [X8 + 0xB60]
	0x035D8AC8 LDR W9, [X0 + 0xE0]
	0x035D8ACC LDR X20, [X8]
	0x035D8AD0 CBNZ W9, 0x35D8AD8
	0x035D8AD4 BL 0x1C16DFC
	0x035D8AD8 MOV X0, X20
	0x035D8ADC MOV X1, X31
	0x035D8AE0 BL 0x338C698
	0x035D8AE4 MOV X1, X0
	0x035D8AE8 MOV X0, X19
	0x035D8AEC MOV X2, X31
	0x035D8AF0 BL 0x3395194
	0x035D8AF4 TBZ X0, 0x0, 0x35D8B28
	0x035D8AF8 LDR X0, [X21]
	0x035D8AFC LDR W8, [X0 + 0xE0]
	0x035D8B00 CBNZ W8, 0x35D8B08
	0x035D8B04 BL 0x1C16DFC
	0x035D8B08 MOV X0, X19
	0x035D8B0C MOV W1, W31
	0x035D8B10 BL 0x35D8358
	0x035D8B14 LDP X20, X19, [X31 + 0x30]
	0x035D8B18 LDP X22, X21, [X31 + 0x20]
	0x035D8B1C LDR X30, [X31 + 0x10]
	0x035D8B20 ADD X31, X31, 0x40
	0x035D8B24 RET
	0x035D8B28 LDR X8, [X19]
	0x035D8B2C MOV X0, X19
	0x035D8B30 LDR X9, [X8 + 0x3C8]
	0x035D8B34 LDR X1, [X8 + 0x3D0]
	0x035D8B38 BLR X9
	0x035D8B3C TBNZ X0, 0x0, 0x35D8B6C
	0x035D8B40 LDR X8, [X19]
	0x035D8B44 MOV X0, X19
	0x035D8B48 LDR X9, [X8 + 0x818]
	0x035D8B4C LDR X1, [X8 + 0x820]
	0x035D8B50 BLR X9
	0x035D8B54 CBZ X0, 0x35D8B90
	0x035D8B58 LDR X8, [X0]
	0x035D8B5C LDR X9, [X8 + 0x3C8]
	0x035D8B60 LDR X1, [X8 + 0x3D0]
	0x035D8B64 BLR X9
	0x035D8B68 TBZ X0, 0x0, 0x35D8B90
	0x035D8B6C LDR X0, [X21]
	0x035D8B70 LDR W8, [X0 + 0xE0]
	0x035D8B74 CBNZ W8, 0x35D8B7C
	0x035D8B78 BL 0x1C16DFC
	0x035D8B7C ADD X1, X31, 0x18
	0x035D8B80 ADD X2, X31, 0x8
	0x035D8B84 MOV X0, X19
	0x035D8B88 BL 0x35D7710
	0x035D8B8C B 0x35D8B14
	0x035D8B90 MOV X0, X19
	0x035D8B94 MOV X1, X31
	0x035D8B98 BL 0x3396BF8
	0x035D8B9C TBZ X0, 0x0, 0x35D8BF0
	0x035D8BA0 LDR X8, [X19]
	0x035D8BA4 MOV X0, X19
	0x035D8BA8 LDR X9, [X8 + 0x428]
	0x035D8BAC LDR X1, [X8 + 0x430]
	0x035D8BB0 BLR X9
	0x035D8BB4 LDR X8, [X21]
	0x035D8BB8 MOV X19, X0
	0x035D8BBC LDR W9, [X8 + 0xE0]
	0x035D8BC0 CBNZ W9, 0x35D8BCC
	0x035D8BC4 MOV X0, X8
	0x035D8BC8 BL 0x1C16DFC
	0x035D8BCC MOV X0, X19
	0x035D8BD0 MOV W1, W31
	0x035D8BD4 BL 0x35D8358
	0x035D8BD8 ADRP X8, 0xB4C000
	0x035D8BDC LDR X8, [X8 + 0xC90]
	0x035D8BE0 MOV X2, X31
	0x035D8BE4 LDR X1, [X8]
	0x035D8BE8 BL 0x321B938
	0x035D8BEC B 0x35D8B14
	0x035D8BF0 ADRP X8, 0xB60000
	0x035D8BF4 LDR X8, [X8 + 0xF40]
	0x035D8BF8 LDR X0, [X8]
	0x035D8BFC B 0x35D8B14
	0x035D8C00 BL 0x1C16F20
	0x035D8C04 SUB X31, X31, 0xE0
	0x035D8C08 STP X30, X25, [X31 + 0xA0]
	0x035D8C0C STP X24, X23, [X31 + 0xB0]
	0x035D8C10 STP X22, X21, [X31 + 0xC0]
	0x035D8C14 STP X20, X19, [X31 + 0xD0]
	0x035D8C18 ADRP X19, 0xE08000
	0x035D8C1C LDRB W8, [X19 + 0x232]
	0x035D8C20 MOV X20, X0
	0x035D8C24 TBNZ X8, 0x0, 0x35D8C78
	0x035D8C28 ADRP X0, 0xB60000
	0x035D8C2C LDR X0, [X0 + 0xF48]
	0x035D8C30 BL 0x1C16CF4
	0x035D8C34 ADRP X0, 0xB1C000
	0x035D8C38 LDR X0, [X0 + 0x460]
	0x035D8C3C BL 0x1C16CF4
	0x035D8C40 ADRP X0, 0xB45000
	0x035D8C44 LDR X0, [X0 + 0x340]
	0x035D8C48 BL 0x1C16CF4
	0x035D8C4C ADRP X0, 0xB45000
	0x035D8C50 LDR X0, [X0 + 0x348]
	0x035D8C54 BL 0x1C16CF4
	0x035D8C58 ADRP X0, 0xB60000
	0x035D8C5C LDR X0, [X0 + 0xCA8]
	0x035D8C60 BL 0x1C16CF4
	0x035D8C64 ADRP X0, 0xB1B000
	0x035D8C68 LDR X0, [X0 + 0x988]
	0x035D8C6C BL 0x1C16CF4
	0x035D8C70 MOVZ W8, 0x1
	0x035D8C74 STRB W8, [X19 + 0x232]
	0x035D8C78 MOVI V0.2D, 0x0
	0x035D8C7C STR X31, [X31 + 0x90]
	0x035D8C80 STP V0, V0, [X31 + 0x70]
	0x035D8C84 STP V0, V0, [X31 + 0x50]
	0x035D8C88 CBZ X20, 0x35D8DD4
	0x035D8C8C LDR X8, [X20]
	0x035D8C90 MOV X0, X20
	0x035D8C94 LDR X9, [X8 + 0x2D8]
	0x035D8C98 LDR X1, [X8 + 0x2E0]
	0x035D8C9C BLR X9
	0x035D8CA0 LDR X8, [X20]
	0x035D8CA4 MOV X19, X0
	0x035D8CA8 MOV X0, X20
	0x035D8CAC LDR X9, [X8 + 0x338]
	0x035D8CB0 LDR X1, [X8 + 0x340]
	0x035D8CB4 ADD X8, X31, 0x8
	0x035D8CB8 BLR X9
	0x035D8CBC ADD X0, X31, 0x50
	0x035D8CC0 ADD X1, X31, 0x8
	0x035D8CC4 MOVZ W2, 0x48
	0x035D8CC8 BL 0x3EB1AC0
	0x035D8CCC ADD X0, X31, 0x50
	0x035D8CD0 MOV X1, X31
	0x035D8CD4 BL 0x35B4900
	0x035D8CD8 TBZ X0, 0x0, 0x35D8DB8
	0x035D8CDC ADRP X22, 0xB1C000
	0x035D8CE0 ADRP X23, 0xB1B000
	0x035D8CE4 ADRP X24, 0xB60000
	0x035D8CE8 ADRP X25, 0xB60000
	0x035D8CEC LDR X22, [X22 + 0x460]
	0x035D8CF0 LDR X23, [X23 + 0x988]
	0x035D8CF4 LDR X24, [X24 + 0xF48]
	0x035D8CF8 LDR X25, [X25 + 0xCA8]
	0x035D8CFC ADD X0, X31, 0x50
	0x035D8D00 MOV X1, X31
	0x035D8D04 BL 0x35B4830
	0x035D8D08 CBZ X1, 0x35D8DD4
	0x035D8D0C LDR X8, [X1]
	0x035D8D10 MOV X21, X1
	0x035D8D14 MOV X20, X0
	0x035D8D18 MOV X0, X21
	0x035D8D1C LDR X9, [X8 + 0x228]
	0x035D8D20 LDR X1, [X8 + 0x230]
	0x035D8D24 BLR X9
	0x035D8D28 TBZ X0, 0x0, 0x35D8D50
	0x035D8D2C LDR X0, [X22]
	0x035D8D30 LDR W8, [X0 + 0xE0]
	0x035D8D34 CBNZ W8, 0x35D8D3C
	0x035D8D38 BL 0x1C16DFC
	0x035D8D3C LDR X0, [X23]
	0x035D8D40 MOV X1, X31
	0x035D8D44 BL 0x35ACF6C
	0x035D8D48 CBNZ X19, 0x35D8D90
	0x035D8D4C B 0x35D8DD4
	0x035D8D50 LDR X8, [X21]
	0x035D8D54 MOV X0, X21
	0x035D8D58 LDR X9, [X8 + 0x2E8]
	0x035D8D5C LDR X1, [X8 + 0x2F0]
	0x035D8D60 BLR X9
	0x035D8D64 LDR X1, [X24]
	0x035D8D68 BL 0x21BD4C4
	0x035D8D6C CMP W0, 0x1
	0x035D8D70 B.LT 0x35D8DA8
	0x035D8D74 LDR X0, [X25]
	0x035D8D78 LDR W8, [X0 + 0xE0]
	0x035D8D7C CBNZ W8, 0x35D8D84
	0x035D8D80 BL 0x1C16DFC
	0x035D8D84 MOV X0, X21
	0x035D8D88 BL 0x35D8C04
	0x035D8D8C CBZ X19, 0x35D8DD4
	0x035D8D90 LDR X8, [X19]
	0x035D8D94 MOV X2, X0
	0x035D8D98 MOV X0, X19
	0x035D8D9C MOV X1, X20
	0x035D8DA0 LDP X9, X3, [X8 + 0x1B8]
	0x035D8DA4 BLR X9
	0x035D8DA8 ADD X0, X31, 0x50
	0x035D8DAC MOV X1, X31
	0x035D8DB0 BL 0x35B4900
	0x035D8DB4 TBNZ X0, 0x0, 0x35D8CFC
	0x035D8DB8 MOV X0, X19
	0x035D8DBC LDP X20, X19, [X31 + 0xD0]
	0x035D8DC0 LDP X22, X21, [X31 + 0xC0]
	0x035D8DC4 LDP X24, X23, [X31 + 0xB0]
	0x035D8DC8 LDP X30, X25, [X31 + 0xA0]
	0x035D8DCC ADD X31, X31, 0xE0
	0x035D8DD0 RET
	0x035D8DD4 BL 0x1C16F20
	0x035D8DD8 STP X29, X30, [X31 - 0x60]!
	0x035D8DDC STP X28, X27, [X31 + 0x10]
	0x035D8DE0 STP X26, X25, [X31 + 0x20]
	0x035D8DE4 STP X24, X23, [X31 + 0x30]
	0x035D8DE8 STP X22, X21, [X31 + 0x40]
	0x035D8DEC STP X20, X19, [X31 + 0x50]
	0x035D8DF0 ADRP X19, 0xE08000
	0x035D8DF4 LDRB W8, [X19 + 0x233]
	0x035D8DF8 TBNZ X8, 0x0, 0x35D8EAC
	0x035D8DFC ADRP X0, 0xB25000
	0x035D8E00 LDR X0, [X0 + 0xA80]
	0x035D8E04 BL 0x1C16CF4
	0x035D8E08 ADRP X0, 0xB25000
	0x035D8E0C LDR X0, [X0 + 0x910]
	0x035D8E10 BL 0x1C16CF4
	0x035D8E14 ADRP X0, 0xB25000
	0x035D8E18 LDR X0, [X0 + 0x918]
	0x035D8E1C BL 0x1C16CF4
	0x035D8E20 ADRP X0, 0xB60000
	0x035D8E24 LDR X0, [X0 + 0x668]
	0x035D8E28 BL 0x1C16CF4
	0x035D8E2C ADRP X0, 0xB60000
	0x035D8E30 LDR X0, [X0 + 0xF50]
	0x035D8E34 BL 0x1C16CF4
	0x035D8E38 ADRP X0, 0xB44000
	0x035D8E3C LDR X0, [X0 + 0xB28]
	0x035D8E40 BL 0x1C16CF4
	0x035D8E44 ADRP X0, 0xB60000
	0x035D8E48 LDR X0, [X0 + 0xF58]
	0x035D8E4C BL 0x1C16CF4
	0x035D8E50 ADRP X0, 0xB60000
	0x035D8E54 LDR X0, [X0 + 0xF60]
	0x035D8E58 BL 0x1C16CF4
	0x035D8E5C ADRP X0, 0xB60000
	0x035D8E60 LDR X0, [X0 + 0x590]
	0x035D8E64 BL 0x1C16CF4
	0x035D8E68 ADRP X0, 0xB60000
	0x035D8E6C LDR X0, [X0 + 0xF68]
	0x035D8E70 BL 0x1C16CF4
	0x035D8E74 ADRP X0, 0xB60000
	0x035D8E78 LDR X0, [X0 + 0xF70]
	0x035D8E7C BL 0x1C16CF4
	0x035D8E80 ADRP X0, 0xB60000
	0x035D8E84 LDR X0, [X0 + 0xF78]
	0x035D8E88 BL 0x1C16CF4
	0x035D8E8C ADRP X0, 0xB60000
	0x035D8E90 LDR X0, [X0 + 0xCA8]
	0x035D8E94 BL 0x1C16CF4
	0x035D8E98 ADRP X0, 0xB1B000
	0x035D8E9C LDR X0, [X0 + 0x6C0]
	0x035D8EA0 BL 0x1C16CF4
	0x035D8EA4 MOVZ W8, 0x1
	0x035D8EA8 STRB W8, [X19 + 0x233]
	0x035D8EAC MOV X0, X31
	0x035D8EB0 BL 0x33C1548
	0x035D8EB4 CBZ X0, 0x35D906C
	0x035D8EB8 ADRP X20, 0xB60000
	0x035D8EBC LDR X20, [X20 + 0xCA8]
	0x035D8EC0 ADRP X9, 0xB60000
	0x035D8EC4 ADRP X10, 0xB1B000
	0x035D8EC8 ADRP X29, 0xB60000
	0x035D8ECC LDR X8, [X20]
	0x035D8ED0 LDR X9, [X9 + 0x668]
	0x035D8ED4 LDR X10, [X10 + 0x6C0]
	0x035D8ED8 LDR W11, [X0 + 0x10]
	0x035D8EDC LDR X8, [X8 + 0xB8]
	0x035D8EE0 ADRP X28, 0xB60000
	0x035D8EE4 ADRP X27, 0xB60000
	0x035D8EE8 LDR X29, [X29 + 0xF78]
	0x035D8EEC LDR X28, [X28 + 0xF70]
	0x035D8EF0 LDR X27, [X27 + 0xF68]
	0x035D8EF4 STR W11, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xE09000
	011 Move W8, [X22+555]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {84}
	019 Move X0, 0xB61000
	020 Move X0, [X0+3600]
	021 Call 0x1C17CF4
	022 Move X0, 0xB61000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move X0, 0xB61000
	026 Move X0, [X0+3616]
	027 Call 0x1C17CF4
	028 Move X0, 0xB61000
	029 Move X0, [X0+3624]
	030 Call 0x1C17CF4
	031 Move X0, 0xB1C000
	032 Move X0, [X0+3768]
	033 Call 0x1C17CF4
	034 Move X0, 0xB47000
	035 Move X0, [X0+48]
	036 Call 0x1C17CF4
	037 Move X0, 0xB45000
	038 Move X0, [X0+32]
	039 Call 0x1C17CF4
	040 Move X0, 0xB1C000
	041 Move X0, [X0+2760]
	042 Call 0x1C17CF4
	043 Move X0, 0xB61000
	044 Move X0, [X0+3240]
	045 Call 0x1C17CF4
	046 Move X0, 0xB1C000
	047 Move X0, [X0+1728]
	048 Call 0x1C17CF4
	049 Move X0, 0xB61000
	050 Move X0, [X0+3632]
	051 Call 0x1C17CF4
	052 Move X0, 0xB61000
	053 Move X0, [X0+3368]
	054 Call 0x1C17CF4
	055 Move X0, 0xB47000
	056 Move X0, [X0+3664]
	057 Call 0x1C17CF4
	058 Move X0, 0xB4D000
	059 Move X0, [X0+3216]
	060 Call 0x1C17CF4
	061 Move X0, 0xB61000
	062 Move X0, [X0+3640]
	063 Call 0x1C17CF4
	064 Move X0, 0xB1C000
	065 Move X0, [X0+2104]
	066 Call 0x1C17CF4
	067 Move X0, 0xB61000
	068 Move X0, [X0+3648]
	069 Call 0x1C17CF4
	070 Move X0, 0xB27000
	071 Move X0, [X0+784]
	072 Call 0x1C17CF4
	073 Move X0, 0xB4F000
	074 Move X0, [X0+344]
	075 Call 0x1C17CF4
	076 Move X0, 0xB61000
	077 Move X0, [X0+3656]
	078 Call 0x1C17CF4
	079 Move X0, 0xB61000
	080 Move X0, [X0+3664]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X22+555], W8
	084 Move [X31], X31
	085 Move [X31+8], X31
	086 Move [X19], X31
	087 Move [X21], X31
	088 Compare X20, 0
	089 JumpIfEqual {574}
	090 Move X8, [X20]
	091 Move X0, X20
	092 Move X9, [X8+1096]
	093 Move X1, [X8+1104]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X0, 0
	096 JumpIfEqual {574}
	097 Move X8, [X0]
	098 Move X22, X0
	099 Move X9, [X8+1128]
	100 Move X1, [X8+1136]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Compare X0, 0
	103 JumpIfEqual {574}
	104 Move X8, [X0+24]
	105 Compare X8, 0
	106 JumpIfEqual {154}
	107 Move X8, [X20]
	108 Move X0, X20
	109 Move X9, [X8+1128]
	110 Move X1, [X8+1136]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X0, 0
	113 JumpIfEqual {574}
	114 Move W8, [X0+24]
	115 Compare W8, 0
	116 JumpIfEqual {575}
	117 Move X8, [X0+32]
	118 Move X24, 0xB61000
	119 Move X24, [X24+3240]
	120 Move X25, 0xB1C000
	121 Move [X19], X8
	122 Move X0, [X24]
	123 Move W8, [X0+224]
	124 Move X25, [X25+1728]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X24]
	129 Move X8, [X25]
	130 Move X9, [X0+184]
	131 Move W10, [X8+224]
	132 Move X23, [X9+16]
	133 Compare W10, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X8
	136 Call 0x1C17DFC
	137 Move X0, X22
	138 Move X1, X23
	139 Move X2, X31
	140 Call Type.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {160}
	145 Move X0, [X24]
	146 Move X19, [X19]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X19
	152 Move W1, W31
	153 Call TypeScriptInterfaceGenerator.PrimitiveTypeToTS, X0, X1
	154 Move X8, 0xB61000
	155 Move X8, [X8+3640]
	156 Move X1, X20
	157 Move X2, X31
	158 Move X0, [X8]
	159 Call String.Format, X0, X1
	160 Move X0, [X24]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X24]
	166 Move X8, [X25]
	167 Move X9, [X0+184]
	168 Move W10, [X8+224]
	169 Move X23, [X9+24]
	170 Compare W10, 0
	171 JumpIfNotEqual {174}
	172 Move X0, X8
	173 Call 0x1C17DFC
	174 Move X0, X22
	175 Move X1, X23
	176 Move X2, X31
	177 Call Type.op_Equality, X0, X1
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {226}
	182 Move X0, [X24]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {188}
	186 Call 0x1C17DFC
	187 Move X0, [X24]
	188 Move X8, [X25]
	189 Move X9, [X0+184]
	190 Move W10, [X8+224]
	191 Move X23, [X9+48]
	192 Compare W10, 0
	193 JumpIfNotEqual {196}
	194 Move X0, X8
	195 Call 0x1C17DFC
	196 Move X0, X22
	197 Move X1, X23
	198 Move X2, X31
	199 Call Type.op_Equality, X0, X1
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {226}
	204 Move X0, [X24]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {210}
	208 Call 0x1C17DFC
	209 Move X0, [X24]
	210 Move X8, [X25]
	211 Move X9, [X0+184]
	212 Move W10, [X8+224]
	213 Move X23, [X9+32]
	214 Compare W10, 0
	215 JumpIfNotEqual {218}
	216 Move X0, X8
	217 Call 0x1C17DFC
	218 Move X0, X22
	219 Move X1, X23
	220 Move X2, X31
	221 Call Type.op_Equality, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {272}
	226 Move X0, [X19]
	227 Compare X0, 0
	228 JumpIfEqual {574}
	229 Move X8, [X0]
	230 Move X9, [X8+968]
	231 Move X1, [X8+976]
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {248}
	237 Move X0, [X24]
	238 Move [X31+8], X31
	239 Move X20, [X19]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Add X2, X31, 8
	245 Move X0, X20
	246 Move X1, X19
	247 Call TypeScriptInterfaceGenerator.GenericTypeToTS, X0, X1, X2
	248 Move X0, [X24]
	249 Move X19, [X19]
	250 Move W8, [X0+224]
	251 Compare W8, 0
	252 JumpIfNotEqual {254}
	253 Call 0x1C17DFC
	254 Move X0, X19
	255 Move W1, W31
	256 Call TypeScriptInterfaceGenerator.PrimitiveTypeToTS, X0, X1
	257 Move X8, 0xB4D000
	258 Move X8, [X8+3216]
	259 Move X2, X31
	260 Move X1, [X8]
	261 Call String.Concat, X0, X1
	262 Move X20, [X31+64]
	263 Move X19, [X31+72]
	264 Move X22, [X31+48]
	265 Move X21, [X31+56]
	266 Move X24, [X31+32]
	267 Move X23, [X31+40]
	268 Move X30, [X31+16]
	269 Move X25, [X31+24]
	270 Add X31, X31, 80
	271 Return X0
	272 Move X0, [X24]
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {278}
	276 Call 0x1C17DFC
	277 Move X0, [X24]
	278 Move X8, [X25]
	279 Move X9, [X0+184]
	280 Move W10, [X8+224]
	281 Move X23, [X9+56]
	282 Compare W10, 0
	283 JumpIfNotEqual {286}
	284 Move X0, X8
	285 Call 0x1C17DFC
	286 Move X0, X22
	287 Move X1, X23
	288 Move X2, X31
	289 Call Type.op_Equality, X0, X1
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {357}
	294 Move X8, [X20]
	295 Move X0, X20
	296 Move X9, [X8+1128]
	297 Move X1, [X8+1136]
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X0, 0
	300 JumpIfEqual {574}
	301 Move W8, [X0+24]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X0, [X0+40]
	304 Move [X21], X0
	305 Compare X0, 0
	306 JumpIfEqual {574}
	307 Move X8, [X0]
	308 Move X9, [X8+968]
	309 Move X1, [X8+976]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {491}
	315 Move X0, [X24]
	316 Move [X31], X31
	317 Move X20, [X21]
	318 Move W8, [X0+224]
	319 Compare W8, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Add X2, X31, 0
	323 Move X0, X20
	324 Move X1, X21
	325 Call TypeScriptInterfaceGenerator.GenericTypeToTS, X0, X1, X2
	326 Move X8, 0xB1C000
	327 Move X8, [X8+2760]
	328 Move X21, X0
	329 Move W1, 5
	330 Move X8, [X8]
	331 Move X0, X8
	332 Call 0x1C17D6C
	333 Compare X0, 0
	334 JumpIfEqual {574}
	335 Move W8, [X0+24]
	336 Move X20, X0
	337 Compare W8, 0
	338 JumpIfEqual {575}
	339 Move X8, 0xB61000
	340 Move X8, [X8+3656]
	341 Move W1, 1
	342 Move X8, [X8]
	343 Move [X20+32], X8
	344 Move X0, [X19]
	345 Call TypeScriptInterfaceGenerator.PrimitiveTypeToTS, X0, X1
	346 Move W8, [X20+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move [X20+40], X0
	350 Move X9, 0xB47000
	351 Move X9, [X9+3664]
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move X9, [X9]
	354 Move [X20+48], X9
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move [X20+56], X21
	357 Move X8, 0xB61000
	358 Move X0, [X25]
	359 Move X8, [X8+3600]
	360 Move W9, [X0+224]
	361 Move X21, [X8]
	362 Compare W9, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move X0, X21
	366 Move X1, X31
	367 Call Type.GetTypeFromHandle, X0
	368 Compare X0, 0
	369 JumpIfEqual {574}
	370 Move X8, [X0]
	371 Move X1, X22
	372 Move X9, [X8+680]
	373 Move X2, [X8+688]
	374 NotImplemented "Instruction BLR not yet implemented."
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfEqual {423}
	379 Move X8, 0xB61000
	380 Move X0, [X25]
	381 Move X8, [X8+3608]
	382 Move W9, [X0+224]
	383 Move X21, [X8]
	384 Compare W9, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1C17DFC
	387 Move X0, X21
	388 Move X1, X31
	389 Call Type.GetTypeFromHandle, X0
	390 Compare X0, 0
	391 JumpIfEqual {574}
	392 Move X8, [X0]
	393 Move X1, X22
	394 Move X9, [X8+680]
	395 Move X2, [X8+688]
	396 NotImplemented "Instruction BLR not yet implemented."
	397 Move TEMP, X0
	398 And TEMP, TEMP, 1
	399 Compare TEMP, 1
	400 JumpIfEqual {423}
	401 Move X8, 0xB61000
	402 Move X0, [X25]
	403 Move X8, [X8+3616]
	404 Move W9, [X0+224]
	405 Move X21, [X8]
	406 Compare W9, 0
	407 JumpIfNotEqual {409}
	408 Call 0x1C17DFC
	409 Move X0, X21
	410 Move X1, X31
	411 Call Type.GetTypeFromHandle, X0
	412 Compare X0, 0
	413 JumpIfEqual {574}
	414 Move X8, [X0]
	415 Move X1, X22
	416 Move X9, [X8+680]
	417 Move X2, [X8+688]
	418 NotImplemented "Instruction BLR not yet implemented."
	419 Move TEMP, X0
	420 And TEMP, TEMP, 1
	421 Compare TEMP, 1
	422 JumpIfNotEqual {537}
	423 Move X8, [X20]
	424 Move X0, X20
	425 Move X9, [X8+1128]
	426 Move X1, [X8+1136]
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Move X23, 0xB61000
	429 Move X23, [X23+3368]
	430 Move X19, X0
	431 Move X8, [X23]
	432 Move W9, [X8+224]
	433 Compare W9, 0
	434 JumpIfNotEqual {438}
	435 Move X0, X8
	436 Call 0x1C17DFC
	437 Move X8, [X23]
	438 Move X9, [X8+184]
	439 Move X21, [X9+24]
	440 Move X9, 0xB1C000
	441 Move X9, [X9+2104]
	442 Move X20, [X9]
	443 Compare X21, 0
	444 JumpIfNotEqual {467}
	445 Move W9, [X8+224]
	446 Compare W9, 0
	447 JumpIfNotEqual {451}
	448 Move X0, X8
	449 Call 0x1C17DFC
	450 Move X8, [X23]
	451 Move X9, 0xB47000
	452 Move X8, [X8+184]
	453 Move X9, [X9+48]
	454 Move X22, [X8]
	455 Move X0, [X9]
	456 Call 0x1C17F10
	457 Move X8, 0xB61000
	458 Move X8, [X8+3632]
	459 Move X1, X22
	460 Move X3, X31
	461 Move X21, X0
	462 Move X2, [X8]
	463 Call Func`2<Object, Object>..ctor, X0, X1, X2
	464 Move X8, [X23]
	465 Move X8, [X8+184]
	466 Move [X8+24], X21
	467 Move X8, 0xB61000
	468 Move X8, [X8+3624]
	469 Move X0, X19
	470 Move X1, X21
	471 Move X2, [X8]
	472 Call Enumerable.Select, X0, X1
	473 Move X8, 0xB1C000
	474 Move X8, [X8+3768]
	475 Move X1, [X8]
	476 Call Enumerable.ToArray, X0
	477 Move X1, X0
	478 Move X0, X20
	479 Move X2, X31
	480 Call String.Join, X0, X1
	481 Move X8, 0xB27000
	482 Move X8, [X8+784]
	483 Move X9, 0xB61000
	484 Move X9, [X9+3664]
	485 Move X1, X0
	486 Move X8, [X8]
	487 Move X3, X31
	488 Move X2, [X9]
	489 Move X0, X8
	490 Call String.Concat, X0, X1, X2
	491 Move X8, 0xB1C000
	492 Move X8, [X8+2760]
	493 Move W1, 5
	494 Move X0, [X8]
	495 Call 0x1C17D6C
	496 Compare X0, 0
	497 JumpIfEqual {574}
	498 Move W8, [X0+24]
	499 Move X20, X0
	500 Compare W8, 0
	501 JumpIfEqual {575}
	502 Move X8, 0xB61000
	503 Move X8, [X8+3656]
	504 Move X8, [X8]
	505 Move [X20+32], X8
	506 Move X0, [X24]
	507 Move X19, [X19]
	508 Move W8, [X0+224]
	509 Compare W8, 0
	510 JumpIfNotEqual {512}
	511 Call 0x1C17DFC
	512 Move W1, 1
	513 Move X0, X19
	514 Call TypeScriptInterfaceGenerator.PrimitiveTypeToTS, X0, X1
	515 Move W8, [X20+24]
	516 NotImplemented "Instruction CMP not yet implemented."
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move [X20+40], X0
	519 Move X8, 0xB47000
	520 Move X8, [X8+3664]
	521 Move W1, W31
	522 Move X8, [X8]
	523 Move [X20+48], X8
	524 Move X0, [X21]
	525 Call TypeScriptInterfaceGenerator.PrimitiveTypeToTS, X0, X1
	526 Move W8, [X20+24]
	527 NotImplemented "Instruction CMP not yet implemented."
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Move [X20+56], X0
	530 Move X8, 0xB4F000
	531 Move X8, [X8+344]
	532 Move X0, X20
	533 Move X1, X31
	534 Move X8, [X8]
	535 Move [X20+64], X8
	536 Call String.Concat, X0
	537 Move X8, 0xB45000
	538 Move X0, [X25]
	539 Move X8, [X8+32]
	540 Move W9, [X0+224]
	541 Move X21, [X8]
	542 Compare W9, 0
	543 JumpIfNotEqual {545}
	544 Call 0x1C17DFC
	545 Move X0, X21
	546 Move X1, X31
	547 Call Type.GetTypeFromHandle, X0
	548 Compare X0, 0
	549 JumpIfEqual {574}
	550 Move X8, [X0]
	551 Move X1, X22
	552 Move X9, [X8+680]
	553 Move X2, [X8+688]
	554 NotImplemented "Instruction BLR not yet implemented."
	555 Move TEMP, X0
	556 And TEMP, TEMP, 1
	557 Compare TEMP, 1
	558 JumpIfNotEqual {567}
	559 Move X0, [X24]
	560 Move X19, [X19]
	561 Move W8, [X0+224]
	562 Compare W8, 0
	563 JumpIfNotEqual {565}
	564 Call 0x1C17DFC
	565 Move X0, X19
	566 Call TypeScriptInterfaceGenerator.TypeNameFromNonPolymer, X0
	567 Move X8, 0xB61000
	568 Move X8, [X8+3648]
	569 Move X1, X20
	570 Move X2, X22
	571 Move X3, X31
	572 Move X0, [X8]
	573 Call String.Format, X0, X1, X2
	574 Call 0x1C17F20
	575 Call 0x1C17F28

Method: System.Void GenerateEmptyState(ref System.Text.StringBuilder builder, System.String typesFilename, System.Collections.Generic.List`1<System.String> generatedKeyPaths, SpatialSys.ObservableState.IStateObject emptyState)

Disassembly:
	0x035D78AC ADRP X24, 0xB61000
	0x035D78B0 LDR X24, [X24 + 0xCA8]
	0x035D78B4 ADRP X25, 0xB1C000
	0x035D78B8 STR X8, [X19]
	0x035D78BC LDR X0, [X24]
	0x035D78C0 LDR W8, [X0 + 0xE0]
	0x035D78C4 LDR X25, [X25 + 0x6C0]
	0x035D78C8 CBNZ W8, 0x35D78D4
	0x035D78CC BL 0x1C16DFC
	0x035D78D0 LDR X0, [X24]
	0x035D78D4 LDR X8, [X25]
	0x035D78D8 LDR X9, [X0 + 0xB8]
	0x035D78DC LDR W10, [X8 + 0xE0]
	0x035D78E0 LDR X23, [X9 + 0x10]
	0x035D78E4 CBNZ W10, 0x35D78F0
	0x035D78E8 MOV X0, X8
	0x035D78EC BL 0x1C16DFC
	0x035D78F0 MOV X0, X22
	0x035D78F4 MOV X1, X23
	0x035D78F8 MOV X2, X31
	0x035D78FC BL 0x3395194
	0x035D7900 TBZ X0, 0x0, 0x35D7944
	0x035D7904 LDR X0, [X24]
	0x035D7908 LDR X19, [X19]
	0x035D790C LDR W8, [X0 + 0xE0]
	0x035D7910 CBNZ W8, 0x35D7918
	0x035D7914 BL 0x1C16DFC
	0x035D7918 MOV X0, X19
	0x035D791C MOV W1, W31
	0x035D7920 BL 0x35D8358
	0x035D7924 B 0x35D7A88
	0x035D7928 ADRP X8, 0xB61000
	0x035D792C LDR X8, [X8 + 0xE38]
	0x035D7930 MOV X1, X20
	0x035D7934 MOV X2, X31
	0x035D7938 LDR X0, [X8]
	0x035D793C BL 0x321EFD0
	0x035D7940 B 0x35D7A88
	0x035D7944 LDR X0, [X24]
	0x035D7948 LDR W8, [X0 + 0xE0]
	0x035D794C CBNZ W8, 0x35D7958
	0x035D7950 BL 0x1C16DFC
	0x035D7954 LDR X0, [X24]
	0x035D7958 LDR X8, [X25]
	0x035D795C LDR X9, [X0 + 0xB8]
	0x035D7960 LDR W10, [X8 + 0xE0]
	0x035D7964 LDR X23, [X9 + 0x18]
	0x035D7968 CBNZ W10, 0x35D7974
	0x035D796C MOV X0, X8
	0x035D7970 BL 0x1C16DFC
	0x035D7974 MOV X0, X22
	0x035D7978 MOV X1, X23
	0x035D797C MOV X2, X31
	0x035D7980 BL 0x3395194
	0x035D7984 TBNZ X0, 0x0, 0x35D7A10
	0x035D7988 LDR X0, [X24]
	0x035D798C LDR W8, [X0 + 0xE0]
	0x035D7990 CBNZ W8, 0x35D799C
	0x035D7994 BL 0x1C16DFC
	0x035D7998 LDR X0, [X24]
	0x035D799C LDR X8, [X25]
	0x035D79A0 LDR X9, [X0 + 0xB8]
	0x035D79A4 LDR W10, [X8 + 0xE0]
	0x035D79A8 LDR X23, [X9 + 0x30]
	0x035D79AC CBNZ W10, 0x35D79B8
	0x035D79B0 MOV X0, X8
	0x035D79B4 BL 0x1C16DFC
	0x035D79B8 MOV X0, X22
	0x035D79BC MOV X1, X23
	0x035D79C0 MOV X2, X31
	0x035D79C4 BL 0x3395194
	0x035D79C8 TBNZ X0, 0x0, 0x35D7A10
	0x035D79CC LDR X0, [X24]
	0x035D79D0 LDR W8, [X0 + 0xE0]
	0x035D79D4 CBNZ W8, 0x35D79E0
	0x035D79D8 BL 0x1C16DFC
	0x035D79DC LDR X0, [X24]
	0x035D79E0 LDR X8, [X25]
	0x035D79E4 LDR X9, [X0 + 0xB8]
	0x035D79E8 LDR W10, [X8 + 0xE0]
	0x035D79EC LDR X23, [X9 + 0x20]
	0x035D79F0 CBNZ W10, 0x35D79FC
	0x035D79F4 MOV X0, X8
	0x035D79F8 BL 0x1C16DFC
	0x035D79FC MOV X0, X22
	0x035D7A00 MOV X1, X23
	0x035D7A04 MOV X2, X31
	0x035D7A08 BL 0x3395194
	0x035D7A0C TBZ X0, 0x0, 0x35D7AA0
	0x035D7A10 LDR X0, [X19]
	0x035D7A14 CBZ X0, 0x35D7EF0
	0x035D7A18 LDR X8, [X0]
	0x035D7A1C LDR X9, [X8 + 0x3C8]
	0x035D7A20 LDR X1, [X8 + 0x3D0]
	0x035D7A24 BLR X9
	0x035D7A28 TBZ X0, 0x0, 0x35D7A54
	0x035D7A2C LDR X0, [X24]
	0x035D7A30 STR X31, [X31 + 0x8]
	0x035D7A34 LDR X20, [X19]
	0x035D7A38 LDR W8, [X0 + 0xE0]
	0x035D7A3C CBNZ W8, 0x35D7A44
	0x035D7A40 BL 0x1C16DFC
	0x035D7A44 ADD X2, X31, 0x8
	0x035D7A48 MOV X0, X20
	0x035D7A4C MOV X1, X19
	0x035D7A50 BL 0x35D7710
	0x035D7A54 LDR X0, [X24]
	0x035D7A58 LDR X19, [X19]
	0x035D7A5C LDR W8, [X0 + 0xE0]
	0x035D7A60 CBNZ W8, 0x35D7A68
	0x035D7A64 BL 0x1C16DFC
	0x035D7A68 MOV X0, X19
	0x035D7A6C MOV W1, W31
	0x035D7A70 BL 0x35D8358
	0x035D7A74 ADRP X8, 0xB4D000
	0x035D7A78 LDR X8, [X8 + 0xC90]
	0x035D7A7C MOV X2, X31
	0x035D7A80 LDR X1, [X8]
	0x035D7A84 BL 0x321B938
	0x035D7A88 LDP X20, X19, [X31 + 0x40]
	0x035D7A8C LDP X22, X21, [X31 + 0x30]
	0x035D7A90 LDP X24, X23, [X31 + 0x20]
	0x035D7A94 LDP X30, X25, [X31 + 0x10]
	0x035D7A98 ADD X31, X31, 0x50
	0x035D7A9C RET
	0x035D7AA0 LDR X0, [X24]
	0x035D7AA4 LDR W8, [X0 + 0xE0]
	0x035D7AA8 CBNZ W8, 0x35D7AB4
	0x035D7AAC BL 0x1C16DFC
	0x035D7AB0 LDR X0, [X24]
	0x035D7AB4 LDR X8, [X25]
	0x035D7AB8 LDR X9, [X0 + 0xB8]
	0x035D7ABC LDR W10, [X8 + 0xE0]
	0x035D7AC0 LDR X23, [X9 + 0x38]
	0x035D7AC4 CBNZ W10, 0x35D7AD0
	0x035D7AC8 MOV X0, X8
	0x035D7ACC BL 0x1C16DFC
	0x035D7AD0 MOV X0, X22
	0x035D7AD4 MOV X1, X23
	0x035D7AD8 MOV X2, X31
	0x035D7ADC BL 0x3395194
	0x035D7AE0 TBZ X0, 0x0, 0x35D7BD8
	0x035D7AE4 LDR X8, [X20]
	0x035D7AE8 MOV X0, X20
	0x035D7AEC LDR X9, [X8 + 0x468]
	0x035D7AF0 LDR X1, [X8 + 0x470]
	0x035D7AF4 BLR X9
	0x035D7AF8 CBZ X0, 0x35D7EF0
	0x035D7AFC LDR W8, [X0 + 0x18]
	0x035D7B00 CMP W8, 0x1
	0x035D7B04 B.LS 0x35D7EF4
	0x035D7B08 LDR X0, [X0 + 0x28]
	0x035D7B0C STR X0, [X21]
	0x035D7B10 CBZ X0, 0x35D7EF0
	0x035D7B14 LDR X8, [X0]
	0x035D7B18 LDR X9, [X8 + 0x3C8]
	0x035D7B1C LDR X1, [X8 + 0x3D0]
	0x035D7B20 BLR X9
	0x035D7B24 TBZ X0, 0x0, 0x35D7DAC
	0x035D7B28 LDR X0, [X24]
	0x035D7B2C STR X31, [X31]
	0x035D7B30 LDR X20, [X21]
	0x035D7B34 LDR W8, [X0 + 0xE0]
	0x035D7B38 CBNZ W8, 0x35D7B40
	0x035D7B3C BL 0x1C16DFC
	0x035D7B40 ADD X2, X31, 0x0
	0x035D7B44 MOV X0, X20
	0x035D7B48 MOV X1, X21
	0x035D7B4C BL 0x35D7710
	0x035D7B50 ADRP X8, 0xB1C000
	0x035D7B54 LDR X8, [X8 + 0xAC8]
	0x035D7B58 MOV X21, X0
	0x035D7B5C MOVZ W1, 0x5
	0x035D7B60 LDR X8, [X8]
	0x035D7B64 MOV X0, X8
	0x035D7B68 BL 0x1C16D6C
	0x035D7B6C CBZ X0, 0x35D7EF0
	0x035D7B70 LDR W8, [X0 + 0x18]
	0x035D7B74 MOV X20, X0
	0x035D7B78 CBZ W8, 0x35D7EF4
	0x035D7B7C ADRP X8, 0xB61000
	0x035D7B80 LDR X8, [X8 + 0xE48]
	0x035D7B84 MOVZ W1, 0x1
	0x035D7B88 LDR X8, [X8]
	0x035D7B8C STR X8, [X20 + 0x20]
	0x035D7B90 LDR X0, [X19]
	0x035D7B94 BL 0x35D8358
	0x035D7B98 LDR W8, [X20 + 0x18]
	0x035D7B9C CMP W8, 0x1
	0x035D7BA0 B.LS 0x35D7EF4
	0x035D7BA4 CMP W8, 0x2
	0x035D7BA8 STR X0, [X20 + 0x28]
	0x035D7BAC B.EQ 0x35D7EF4
	0x035D7BB0 ADRP X9, 0xB47000
	0x035D7BB4 LDR X9, [X9 + 0xE50]
	0x035D7BB8 CMP W8, 0x3
	0x035D7BBC LDR X9, [X9]
	0x035D7BC0 STR X9, [X20 + 0x30]
	0x035D7BC4 B.LS 0x35D7EF4
	0x035D7BC8 CMP W8, 0x4
	0x035D7BCC STR X21, [X20 + 0x38]
	0x035D7BD0 B.NE 0x35D7E4C
	0x035D7BD4 B 0x35D7EF4
	0x035D7BD8 ADRP X8, 0xB61000
	0x035D7BDC LDR X0, [X25]
	0x035D7BE0 LDR X8, [X8 + 0xE10]
	0x035D7BE4 LDR W9, [X0 + 0xE0]
	0x035D7BE8 LDR X21, [X8]
	0x035D7BEC CBNZ W9, 0x35D7BF4
	0x035D7BF0 BL 0x1C16DFC
	0x035D7BF4 MOV X0, X21
	0x035D7BF8 MOV X1, X31
	0x035D7BFC BL 0x338C698
	0x035D7C00 CBZ X0, 0x35D7EF0
	0x035D7C04 LDR X8, [X0]
	0x035D7C08 MOV X1, X22
	0x035D7C0C LDR X9, [X8 + 0x2A8]
	0x035D7C10 LDR X2, [X8 + 0x2B0]
	0x035D7C14 BLR X9
	0x035D7C18 TBNZ X0, 0x0, 0x35D7CA4
	0x035D7C1C ADRP X8, 0xB61000
	0x035D7C20 LDR X0, [X25]
	0x035D7C24 LDR X8, [X8 + 0xE18]
	0x035D7C28 LDR W9, [X0 + 0xE0]
	0x035D7C2C LDR X21, [X8]
	0x035D7C30 CBNZ W9, 0x35D7C38
	0x035D7C34 BL 0x1C16DFC
	0x035D7C38 MOV X0, X21
	0x035D7C3C MOV X1, X31
	0x035D7C40 BL 0x338C698
	0x035D7C44 CBZ X0, 0x35D7EF0
	0x035D7C48 LDR X8, [X0]
	0x035D7C4C MOV X1, X22
	0x035D7C50 LDR X9, [X8 + 0x2A8]
	0x035D7C54 LDR X2, [X8 + 0x2B0]
	0x035D7C58 BLR X9
	0x035D7C5C TBNZ X0, 0x0, 0x35D7CA4
	0x035D7C60 ADRP X8, 0xB61000
	0x035D7C64 LDR X0, [X25]
	0x035D7C68 LDR X8, [X8 + 0xE20]
	0x035D7C6C LDR W9, [X0 + 0xE0]
	0x035D7C70 LDR X21, [X8]
	0x035D7C74 CBNZ W9, 0x35D7C7C
	0x035D7C78 BL 0x1C16DFC
	0x035D7C7C MOV X0, X21
	0x035D7C80 MOV X1, X31
	0x035D7C84 BL 0x338C698
	0x035D7C88 CBZ X0, 0x35D7EF0
	0x035D7C8C LDR X8, [X0]
	0x035D7C90 MOV X1, X22
	0x035D7C94 LDR X9, [X8 + 0x2A8]
	0x035D7C98 LDR X2, [X8 + 0x2B0]
	0x035D7C9C BLR X9
	0x035D7CA0 TBZ X0, 0x0, 0x35D7E6C
	0x035D7CA4 LDR X8, [X20]
	0x035D7CA8 MOV X0, X20
	0x035D7CAC LDR X9, [X8 + 0x468]
	0x035D7CB0 LDR X1, [X8 + 0x470]
	0x035D7CB4 BLR X9
	0x035D7CB8 ADRP X23, 0xB61000
	0x035D7CBC LDR X23, [X23 + 0xD28]
	0x035D7CC0 MOV X19, X0
	0x035D7CC4 LDR X8, [X23]
	0x035D7CC8 LDR W9, [X8 + 0xE0]
	0x035D7CCC CBNZ W9, 0x35D7CDC
	0x035D7CD0 MOV X0, X8
	0x035D7CD4 BL 0x1C16DFC
	0x035D7CD8 LDR X8, [X23]
	0x035D7CDC LDR X9, [X8 + 0xB8]
	0x035D7CE0 LDR X21, [X9 + 0x18]
	0x035D7CE4 ADRP X9, 0xB1C000
	0x035D7CE8 LDR X9, [X9 + 0x838]
	0x035D7CEC LDR X20, [X9]
	0x035D7CF0 CBNZ X21, 0x35D7D48
	0x035D7CF4 LDR W9, [X8 + 0xE0]
	0x035D7CF8 CBNZ W9, 0x35D7D08
	0x035D7CFC MOV X0, X8
	0x035D7D00 BL 0x1C16DFC
	0x035D7D04 LDR X8, [X23]
	0x035D7D08 ADRP X9, 0xB47000
	0x035D7D0C LDR X8, [X8 + 0xB8]
	0x035D7D10 LDR X9, [X9 + 0x30]
	0x035D7D14 LDR X22, [X8]
	0x035D7D18 LDR X0, [X9]
	0x035D7D1C BL 0x1C16F10
	0x035D7D20 ADRP X8, 0xB61000
	0x035D7D24 LDR X8, [X8 + 0xE30]
	0x035D7D28 MOV X1, X22
	0x035D7D2C MOV X3, X31
	0x035D7D30 MOV X21, X0
	0x035D7D34 LDR X2, [X8]
	0x035D7D38 BL 0x2D30578
	0x035D7D3C LDR X8, [X23]
	0x035D7D40 LDR X8, [X8 + 0xB8]
	0x035D7D44 STR X21, [X8 + 0x18]
	0x035D7D48 ADRP X8, 0xB61000
	0x035D7D4C LDR X8, [X8 + 0xE28]
	0x035D7D50 MOV X0, X19
	0x035D7D54 MOV X1, X21
	0x035D7D58 LDR X2, [X8]
	0x035D7D5C BL 0x21CF224
	0x035D7D60 ADRP X8, 0xB1C000
	0x035D7D64 LDR X8, [X8 + 0xEB8]
	0x035D7D68 LDR X1, [X8]
	0x035D7D6C BL 0x21D577C
	0x035D7D70 MOV X1, X0
	0x035D7D74 MOV X0, X20
	0x035D7D78 MOV X2, X31
	0x035D7D7C BL 0x3227FF8
	0x035D7D80 ADRP X8, 0xB27000
	0x035D7D84 LDR X8, [X8 + 0x310]
	0x035D7D88 ADRP X9, 0xB61000
	0x035D7D8C LDR X9, [X9 + 0xE50]
	0x035D7D90 MOV X1, X0
	0x035D7D94 LDR X8, [X8]
	0x035D7D98 MOV X3, X31
	0x035D7D9C LDR X2, [X9]
	0x035D7DA0 MOV X0, X8
	0x035D7DA4 BL 0x32274B8
	0x035D7DA8 B 0x35D7A88
	0x035D7DAC ADRP X8, 0xB1C000
	0x035D7DB0 LDR X8, [X8 + 0xAC8]
	0x035D7DB4 MOVZ W1, 0x5
	0x035D7DB8 LDR X0, [X8]
	0x035D7DBC BL 0x1C16D6C
	0x035D7DC0 CBZ X0, 0x35D7EF0
	0x035D7DC4 LDR W8, [X0 + 0x18]
	0x035D7DC8 MOV X20, X0
	0x035D7DCC CBZ W8, 0x35D7EF4
	0x035D7DD0 ADRP X8, 0xB61000
	0x035D7DD4 LDR X8, [X8 + 0xE48]
	0x035D7DD8 LDR X8, [X8]
	0x035D7DDC STR X8, [X20 + 0x20]
	0x035D7DE0 LDR X0, [X24]
	0x035D7DE4 LDR X19, [X19]
	0x035D7DE8 LDR W8, [X0 + 0xE0]
	0x035D7DEC CBNZ W8, 0x35D7DF4
	0x035D7DF0 BL 0x1C16DFC
	0x035D7DF4 MOVZ W1, 0x1
	0x035D7DF8 MOV X0, X19
	0x035D7DFC BL 0x35D8358
	0x035D7E00 LDR W8, [X20 + 0x18]
	0x035D7E04 CMP W8, 0x1
	0x035D7E08 B.LS 0x35D7EF4
	0x035D7E0C CMP W8, 0x2
	0x035D7E10 STR X0, [X20 + 0x28]
	0x035D7E14 B.EQ 0x35D7EF4
	0x035D7E18 ADRP X8, 0xB47000
	0x035D7E1C LDR X8, [X8 + 0xE50]
	0x035D7E20 MOV W1, W31
	0x035D7E24 LDR X8, [X8]
	0x035D7E28 STR X8, [X20 + 0x30]
	0x035D7E2C LDR X0, [X21]
	0x035D7E30 BL 0x35D8358
	0x035D7E34 LDR W8, [X20 + 0x18]
	0x035D7E38 CMP W8, 0x3
	0x035D7E3C B.LS 0x35D7EF4
	0x035D7E40 CMP W8, 0x4
	0x035D7E44 STR X0, [X20 + 0x38]
	0x035D7E48 B.EQ 0x35D7EF4
	0x035D7E4C ADRP X8, 0xB4F000
	0x035D7E50 LDR X8, [X8 + 0x158]
	0x035D7E54 MOV X0, X20
	0x035D7E58 MOV X1, X31
	0x035D7E5C LDR X8, [X8]
	0x035D7E60 STR X8, [X20 + 0x40]
	0x035D7E64 BL 0x32278CC
	0x035D7E68 B 0x35D7A88
	0x035D7E6C ADRP X8, 0xB45000
	0x035D7E70 LDR X0, [X25]
	0x035D7E74 LDR X8, [X8 + 0x20]
	0x035D7E78 LDR W9, [X0 + 0xE0]
	0x035D7E7C LDR X21, [X8]
	0x035D7E80 CBNZ W9, 0x35D7E88
	0x035D7E84 BL 0x1C16DFC
	0x035D7E88 MOV X0, X21
	0x035D7E8C MOV X1, X31
	0x035D7E90 BL 0x338C698
	0x035D7E94 CBZ X0, 0x35D7EF0
	0x035D7E98 LDR X8, [X0]
	0x035D7E9C MOV X1, X22
	0x035D7EA0 LDR X9, [X8 + 0x2A8]
	0x035D7EA4 LDR X2, [X8 + 0x2B0]
	0x035D7EA8 BLR X9
	0x035D7EAC TBZ X0, 0x0, 0x35D7ED0
	0x035D7EB0 LDR X0, [X24]
	0x035D7EB4 LDR X19, [X19]
	0x035D7EB8 LDR W8, [X0 + 0xE0]
	0x035D7EBC CBNZ W8, 0x35D7EC4
	0x035D7EC0 BL 0x1C16DFC
	0x035D7EC4 MOV X0, X19
	0x035D7EC8 BL 0x35D89E4
	0x035D7ECC B 0x35D7A74
	0x035D7ED0 ADRP X8, 0xB61000
	0x035D7ED4 LDR X8, [X8 + 0xE40]
	0x035D7ED8 MOV X1, X20
	0x035D7EDC MOV X2, X22
	0x035D7EE0 MOV X3, X31
	0x035D7EE4 LDR X0, [X8]
	0x035D7EE8 BL 0x3227BD4
	0x035D7EEC B 0x35D7A88
	0x035D7EF0 BL 0x1C16F20
	0x035D7EF4 BL 0x1C16F28
	0x035D7EF8 STP X30, X21, [X31 - 0x20]!
	0x035D7EFC STP X20, X19, [X31 + 0x10]
	0x035D7F00 ADRP X20, 0xE09000
	0x035D7F04 ADRP X21, 0xB1C000
	0x035D7F08 LDRB W8, [X20 + 0x228]
	0x035D7F0C LDR X21, [X21 + 0x6C0]
	0x035D7F10 MOV X19, X0
	0x035D7F14 TBNZ X8, 0x0, 0x35D7F38
	0x035D7F18 ADRP X0, 0xB61000
	0x035D7F1C LDR X0, [X0 + 0xCA8]
	0x035D7F20 BL 0x1C16CF4
	0x035D7F24 ADRP X0, 0xB1C000
	0x035D7F28 LDR X0, [X0 + 0x6C0]
	0x035D7F2C BL 0x1C16CF4
	0x035D7F30 MOVZ W8, 0x1
	0x035D7F34 STRB W8, [X20 + 0x228]
	0x035D7F38 LDR X0, [X21]
	0x035D7F3C LDR W8, [X0 + 0xE0]
	0x035D7F40 CBNZ W8, 0x35D7F48
	0x035D7F44 BL 0x1C16DFC
	0x035D7F48 MOV X0, X19
	0x035D7F4C MOV X1, X31
	0x035D7F50 MOV X2, X31
	0x035D7F54 BL 0x3395F0C
	0x035D7F58 TBZ X0, 0x0, 0x35D7FA0
	0x035D7F5C ADRP X20, 0xB61000
	0x035D7F60 LDR X20, [X20 + 0xCA8]
	0x035D7F64 LDR X0, [X20]
	0x035D7F68 LDR W8, [X0 + 0xE0]
	0x035D7F6C CBNZ W8, 0x35D7F78
	0x035D7F70 BL 0x1C16DFC
	0x035D7F74 LDR X0, [X20]
	0x035D7F78 LDR X8, [X0 + 0xB8]
	0x035D7F7C LDR X0, [X8 + 0x8]
	0x035D7F80 CBZ X0, 0x35D7FB0
	0x035D7F84 LDR X8, [X0]
	0x035D7F88 MOV X1, X19
	0x035D7F8C LDP X20, X19, [X31 + 0x10]
	0x035D7F90 LDR X3, [X8 + 0x2A8]
	0x035D7F94 LDR X2, [X8 + 0x2B0]
	0x035D7F98 LDP X30, X21, [X31], #0x20
	0x035D7F9C BR X3
	0x035D7FA0 LDP X20, X19, [X31 + 0x10]
	0x035D7FA4 MOV W0, W31
	0x035D7FA8 LDP X30, X21, [X31], #0x20
	0x035D7FAC RET
	0x035D7FB0 BL 0x1C16F20
	0x035D7FB4 STP X29, X30, [X31 - 0x60]!
	0x035D7FB8 STP X28, X27, [X31 + 0x10]
	0x035D7FBC STP X26, X25, [X31 + 0x20]
	0x035D7FC0 STP X24, X23, [X31 + 0x30]
	0x035D7FC4 STP X22, X21, [X31 + 0x40]
	0x035D7FC8 STP X20, X19, [X31 + 0x50]
	0x035D7FCC ADRP X20, 0xE09000
	0x035D7FD0 LDRB W8, [X20 + 0x229]
	0x035D7FD4 MOV X21, X1
	0x035D7FD8 MOV X19, X0
	0x035D7FDC TBNZ X8, 0x0, 0x35D8078
	0x035D7FE0 ADRP X0, 0xB61000
	0x035D7FE4 LDR X0, [X0 + 0xCC8]
	0x035D7FE8 BL 0x1C16CF4
	0x035D7FEC ADRP X0, 0xB61000
	0x035D7FF0 LDR X0, [X0 + 0x680]
	0x035D7FF4 BL 0x1C16CF4
	0x035D7FF8 ADRP X0, 0xB1C000
	0x035D7FFC LDR X0, [X0 + 0xAC8]
	0x035D8000 BL 0x1C16CF4
	0x035D8004 ADRP X0, 0xB60000
	0x035D8008 LDR X0, [X0 + 0xCA8]
	0x035D800C BL 0x1C16CF4
	0x035D8010 ADRP X0, 0xB60000
	0x035D8014 LDR X0, [X0 + 0xE58]
	0x035D8018 BL 0x1C16CF4
	0x035D801C ADRP X0, 0xB60000
	0x035D8020 LDR X0, [X0 + 0xD28]
	0x035D8024 BL 0x1C16CF4
	0x035D8028 ADRP X0, 0xB26000
	0x035D802C LDR X0, [X0 + 0x6D8]
	0x035D8030 BL 0x1C16CF4
	0x035D8034 ADRP X0, 0xB60000
	0x035D8038 LDR X0, [X0 + 0xE60]
	0x035D803C BL 0x1C16CF4
	0x035D8040 ADRP X0, 0xB45000
	0x035D8044 LDR X0, [X0 + 0x3A8]
	0x035D8048 BL 0x1C16CF4
	0x035D804C ADRP X0, 0xB1D000
	0x035D8050 LDR X0, [X0 + 0x3A0]
	0x035D8054 BL 0x1C16CF4
	0x035D8058 ADRP X0, 0xB60000
	0x035D805C LDR X0, [X0 + 0xD40]
	0x035D8060 BL 0x1C16CF4
	0x035D8064 ADRP X0, 0xB1D000
	0x035D8068 LDR X0, [X0 + 0x4B0]
	0x035D806C BL 0x1C16CF4
	0x035D8070 MOVZ W8, 0x1
	0x035D8074 STRB W8, [X20 + 0x229]
	0x035D8078 MOVZ W1, 0x20
	0x035D807C MOVZ W2, 0x2
	0x035D8080 MOV X0, X31
	0x035D8084 MOV X3, X31
	0x035D8088 BL 0x322EAF4
	0x035D808C CBZ X21, 0x35D8354
	0x035D8090 LDR X8, [X21]
	0x035D8094 ADRP X22, 0xB60000
	0x035D8098 ADRP X24, 0xB60000
	0x035D809C ADRP X23, 0xB60000
	0x035D80A0 LDR X9, [X8 + 0x888]
	0x035D80A4 LDR X1, [X8 + 0x890]
	0x035D80A8 LDR X22, [X22 + 0xCA8]
	0x035D80AC LDR X24, [X24 + 0xE60]
	0x035D80B0 LDR X23, [X23 + 0xD40]
	0x035D80B4 MOV X20, X0
	0x035D80B8 MOV X0, X21
	0x035D80BC BLR X9
	0x035D80C0 LDR X8, [X21]
	0x035D80C4 MOV X0, X21
	0x035D80C8 LDR X9, [X8 + 0x2E8]
	0x035D80CC LDR X1, [X8 + 0x2F0]
	0x035D80D0 BLR X9
	0x035D80D4 LDR X8, [X22]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move [X31], X1
	015 Move X26, 0xE0A000
	016 Move X25, 0xB62000
	017 Move X22, 0xB62000
	018 Move X23, 0xB61000
	019 Move X20, 0xB61000
	020 Move W8, [X26+556]
	021 Move X25, [X25+3496]
	022 Move X22, [X22+3504]
	023 Move X23, [X23+3664]
	024 Move X20, [X20+3672]
	025 Move X21, X3
	026 Move X24, X2
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {115}
	032 Move X0, 0xB44000
	033 Move X0, [X0+4040]
	034 Call 0x1C17CF4
	035 Move X0, 0xB62000
	036 Move X0, [X0+16]
	037 Call 0x1C17CF4
	038 Move X0, 0xB62000
	039 Move X0, [X0+24]
	040 Call 0x1C17CF4
	041 Move X0, 0xB44000
	042 Move X0, [X0+4048]
	043 Call 0x1C17CF4
	044 Move X0, 0xB44000
	045 Move X0, [X0+4056]
	046 Call 0x1C17CF4
	047 Move X0, 0xB62000
	048 Move X0, [X0+32]
	049 Call 0x1C17CF4
	050 Move X0, 0xB46000
	051 Move X0, [X0+1408]
	052 Call 0x1C17CF4
	053 Move X0, 0xB62000
	054 Move X0, [X0+40]
	055 Call 0x1C17CF4
	056 Move X0, 0xB61000
	057 Move X0, [X0+3672]
	058 Call 0x1C17CF4
	059 Move X0, 0xB61000
	060 Move X0, [X0+3664]
	061 Call 0x1C17CF4
	062 Move X0, 0xB1E000
	063 Move X0, [X0+432]
	064 Call 0x1C17CF4
	065 Move X0, 0xB62000
	066 Move X0, [X0+3512]
	067 Call 0x1C17CF4
	068 Move X0, 0xB44000
	069 Move X0, [X0+4064]
	070 Call 0x1C17CF4
	071 Move X0, 0xB62000
	072 Move X0, [X0+3520]
	073 Call 0x1C17CF4
	074 Move X0, 0xB62000
	075 Move X0, [X0+3504]
	076 Call 0x1C17CF4
	077 Move X0, 0xB62000
	078 Move X0, [X0+3496]
	079 Call 0x1C17CF4
	080 Move X0, 0xB1D000
	081 Move X0, [X0+2760]
	082 Call 0x1C17CF4
	083 Move X0, 0xB62000
	084 Move X0, [X0+3240]
	085 Call 0x1C17CF4
	086 Move X0, 0xB62000
	087 Move X0, [X0+3528]
	088 Call 0x1C17CF4
	089 Move X0, 0xB21000
	090 Move X0, [X0+2344]
	091 Call 0x1C17CF4
	092 Move X0, 0xB62000
	093 Move X0, [X0+3536]
	094 Call 0x1C17CF4
	095 Move X0, 0xB62000
	096 Move X0, [X0+3544]
	097 Call 0x1C17CF4
	098 Move X0, 0xB47000
	099 Move X0, [X0+936]
	100 Call 0x1C17CF4
	101 Move X0, 0xB62000
	102 Move X0, [X0+3552]
	103 Call 0x1C17CF4
	104 Move X0, 0xB28000
	105 Move X0, [X0+3288]
	106 Call 0x1C17CF4
	107 Move X0, 0xB1D000
	108 Move X0, [X0+2440]
	109 Call 0x1C17CF4
	110 Move X0, 0xB62000
	111 Move X0, [X0+3560]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X26+556], W8
	115 Move X0, [X25]
	116 Move [X31+64], X31
	117 Move [X31+72], X31
	118 Move [X31+80], X31
	119 Move [X31+48], X31
	120 Move [X31+56], X31
	121 Move [X31+32], X31
	122 Move [X31+40], X31
	123 Call 0x1C17F10
	124 Move X1, [X22]
	125 Move X22, X0
	126 Call List`1<Object>..ctor, X0
	127 Move X0, [X23]
	128 Call 0x1C17F10
	129 Move X1, [X20]
	130 Move X23, X0
	131 Call HashSet`1<Object>..ctor, X0
	132 Compare X24, 0
	133 JumpIfEqual {488}
	134 Move X8, 0xB44000
	135 Move X8, [X8+4064]
	136 Move X25, 0xB44000
	137 Move X28, 0xB1E000
	138 Move X29, 0xB62000
	139 Move X20, 0xB46000
	140 Move X26, 0xB62000
	141 Move X27, 0xB62000
	142 Move X25, [X25+4048]
	143 Move X28, [X28+432]
	144 Move X29, [X29+3512]
	145 Move X20, [X20+1408]
	146 Move X26, [X26+24]
	147 Move X27, [X27+3520]
	148 Move X1, [X8]
	149 Add X8, X31, 8
	150 Move X0, X24
	151 Call List`1<Object>.GetEnumerator, X0
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 Move X8, [X31+24]
	154 Move [X31+4], V0
	155 Move [X31+80], X8
	156 Move X1, [X25]
	157 Add X0, X31, 64
	158 Call Enumerator<Object>.MoveNext, X0
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {274}
	163 Compare X21, 0
	164 JumpIfEqual {484}
	165 Move X8, [X21]
	166 Move X24, [X31+80]
	167 Move X1, [X28]
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move W2, 22
	178 Move X0, X21
	179 Call 0x1C5D788
	180 Move W9, [X10]
	181 Add W9, W9, 22
	182 Add X8, X8, W9
	183 Add X0, X8, 312
	184 Move X8, [X0]
	185 Move X3, [X0+8]
	186 Add X2, X31, 56
	187 Move X0, X21
	188 Move X1, X24
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {156}
	194 Compare X22, 0
	195 JumpIfEqual {486}
	196 Move W10, [X22+28]
	197 Move X1, [X31+56]
	198 Move X8, [X22+16]
	199 Move X9, [X29]
	200 Add W10, W10, 1
	201 Move [X22+28], W10
	202 Compare X8, 0
	203 JumpIfEqual {487}
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Move W11, [X8+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add W9, W10, 1
	208 Add X8, X8, X10
	209 Move [X22+24], W9
	210 Move [X8+32], X1
	211 Move X8, [X9+32]
	212 Move X8, [X8+192]
	213 Move X2, [X8+112]
	214 Move X0, X22
	215 Call List`1<Object>.AddWithResize, X0, X1
	216 Move X24, [X31+56]
	217 Compare X24, 0
	218 JumpIfEqual {485}
	219 Move X8, [X24]
	220 Move X1, [X28]
	221 NotImplemented "Instruction LDRH not yet implemented."
	222 Compare X9, 0
	223 JumpIfEqual {230}
	224 Move X10, [X8+176]
	225 Add X10, X10, 8
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Subtract X9, X9, 1
	229 Add X10, X10, 16
	230 Move W2, 4
	231 Move X0, X24
	232 Call 0x1C5D788
	233 Move W9, [X10]
	234 Add W9, W9, 4
	235 Add X8, X8, W9
	236 Add X0, X8, 312
	237 Move X8, [X0]
	238 Move X1, [X0+8]
	239 Move X0, X24
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Compare X0, 0
	242 JumpIfEqual {156}
	243 Move X24, [X31+56]
	244 Compare X24, 0
	245 JumpIfEqual {491}
	246 Move X8, [X24]
	247 Move X1, [X28]
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move W2, 4
	258 Move X0, X24
	259 Call 0x1C5D788
	260 Move W9, [X10]
	261 Add W9, W9, 4
	262 Add X8, X8, W9
	263 Add X0, X8, 312
	264 Move X8, [X0]
	265 Move X1, [X0+8]
	266 Move X0, X24
	267 NotImplemented "Instruction BLR not yet implemented."
	268 Move X1, X0
	269 Compare X23, 0
	270 JumpIfEqual {490}
	271 Move X2, [X20]
	272 Move X0, X23
	273 Call HashSet`1<Object>.Add, X0, X1
	274 Move X8, 0xB44000
	275 Move X8, [X8+4040]
	276 Add X0, X31, 64
	277 Move X1, [X8]
	278 Call Enumerator<Object>.Dispose, X0
	279 Compare X23, 0
	280 JumpIfEqual {488}
	281 Move X8, 0xB62000
	282 Move X8, [X8+40]
	283 Move X0, X23
	284 Move X1, [X8]
	285 Add X8, X31, 8
	286 Call HashSet`1<Object>.GetEnumerator, X0
	287 NotImplemented "Instruction LDUR not yet implemented."
	288 Move X8, [X31+24]
	289 Move [X31+2], V0
	290 Move [X31+48], X8
	291 Move X1, [X26]
	292 Add X0, X31, 32
	293 Call Enumerator<Object>.MoveNext, X0
	294 Move TEMP, X0
	295 And TEMP, TEMP, 1
	296 Compare TEMP, 1
	297 JumpIfNotEqual {304}
	298 Compare X22, 0
	299 JumpIfEqual {483}
	300 Move X1, [X31+48]
	301 Move X2, [X27]
	302 Move X0, X22
	303 Call List`1<Object>.Remove, X0, X1
	304 Move X8, 0xB62000
	305 Move X8, [X8+16]
	306 Add X0, X31, 32
	307 Move X1, [X8]
	308 Call Enumerator<Object>.Dispose, X0
	309 Compare X21, 0
	310 JumpIfEqual {488}
	311 Move X8, [X21]
	312 Move X24, 0xB1D000
	313 Move X1, [X28]
	314 NotImplemented "Instruction LDRH not yet implemented."
	315 Move X24, [X24+2760]
	316 Compare X9, 0
	317 JumpIfEqual {324}
	318 Move X10, [X8+176]
	319 Add X10, X10, 8
	320 NotImplemented "Instruction LDUR not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Subtract X9, X9, 1
	323 Add X10, X10, 16
	324 Move W2, 17
	325 Move X0, X21
	326 Call 0x1C5D788
	327 Move W9, [X10]
	328 Add W9, W9, 17
	329 Add X8, X8, W9
	330 Add X0, X8, 312
	331 Move X8, [X0]
	332 Move X3, [X0+8]
	333 Move X0, X21
	334 Move X1, X22
	335 Move W2, W31
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X8, 0xB62000
	338 Move X8, [X8+3240]
	339 Move X22, X0
	340 Move X8, [X8]
	341 Move W9, [X8+224]
	342 Compare W9, 0
	343 JumpIfNotEqual {346}
	344 Move X0, X8
	345 Call 0x1C17DFC
	346 Move X0, X22
	347 Call TypeScriptInterfaceGenerator.ReplaceNullsWithEmptyString, X0
	348 Compare X0, 0
	349 JumpIfEqual {488}
	350 Move X8, [X0]
	351 Move W1, 2
	352 Move X9, [X8+792]
	353 Move X2, [X8+800]
	354 NotImplemented "Instruction BLR not yet implemented."
	355 Move X22, X0
	356 Move X0, X21
	357 Move X1, X31
	358 Call "il2cpp_vm_object_is_inst", X0
	359 Compare X0, 0
	360 JumpIfEqual {488}
	361 Move X8, [X0]
	362 Move X9, [X8+744]
	363 Move X1, [X8+752]
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Call TypeScriptInterfaceGenerator.TypeNameToTS, X0
	366 Move X21, X0
	367 Move X0, [X31]
	368 Compare X0, 0
	369 JumpIfEqual {488}
	370 Move X8, 0xB62000
	371 Move X8, [X8+3544]
	372 Move X3, X31
	373 Move X1, [X8]
	374 Move X8, 0xB1D000
	375 Move X8, [X8+2440]
	376 Move X2, [X8]
	377 Call String.Replace, X0, X1, X2
	378 Move X8, [X24]
	379 Move X20, [X19]
	380 Move X23, X0
	381 Move W1, 5
	382 Move X0, X8
	383 Call 0x1C17D6C
	384 Compare X0, 0
	385 JumpIfEqual {488}
	386 Move W8, [X0+24]
	387 Compare W8, 0
	388 JumpIfEqual {489}
	389 Move X9, 0xB62000
	390 Move X9, [X9+3552]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X9, [X9]
	393 Move [X0+32], X9
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move [X0+40], X21
	396 Move X9, 0xB62000
	397 Move X9, [X9+3528]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X9, [X9]
	400 Move [X0+48], X9
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move [X0+56], X23
	403 Move X8, 0xB28000
	404 Move X8, [X8+3288]
	405 Move X1, X31
	406 Move X8, [X8]
	407 Move [X0+64], X8
	408 Call String.Concat, X0
	409 Compare X20, 0
	410 JumpIfEqual {488}
	411 Move X1, X0
	412 Move X0, X20
	413 Move X2, X31
	414 Call StringBuilder.AppendLine, X0, X1
	415 Move X0, [X19]
	416 Compare X0, 0
	417 JumpIfEqual {488}
	418 Move X1, X31
	419 Call StringBuilder.AppendLine, X0
	420 Move X0, [X19]
	421 Compare X0, 0
	422 JumpIfEqual {488}
	423 Move X8, 0xB62000
	424 Move X8, [X8+3536]
	425 Move X2, X31
	426 Move X1, [X8]
	427 Call StringBuilder.AppendLine, X0, X1
	428 Move X0, [X24]
	429 Move X20, [X19]
	430 Move W1, 5
	431 Call 0x1C17D6C
	432 Compare X0, 0
	433 JumpIfEqual {488}
	434 Move W8, [X0+24]
	435 Compare W8, 0
	436 JumpIfEqual {489}
	437 Move X9, 0xB62000
	438 Move X9, [X9+3560]
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move X9, [X9]
	441 Move [X0+32], X9
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move [X0+40], X21
	444 Move X9, 0xB21000
	445 Move X9, [X9+2344]
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Move X9, [X9]
	448 Move [X0+48], X9
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move [X0+56], X21
	451 Move X8, 0xB47000
	452 Move X8, [X8+936]
	453 Move X1, X31
	454 Move X8, [X8]
	455 Move [X0+64], X8
	456 Call String.Concat, X0
	457 Compare X20, 0
	458 JumpIfEqual {488}
	459 Move X1, X0
	460 Move X0, X20
	461 Move X2, X31
	462 Call StringBuilder.Append, X0, X1
	463 Move X0, [X19]
	464 Compare X0, 0
	465 JumpIfEqual {488}
	466 Move X1, X22
	467 Move X2, X31
	468 Call StringBuilder.AppendLine, X0, X1
	469 Move X20, [X31+176]
	470 Move X19, [X31+184]
	471 Move X22, [X31+160]
	472 Move X21, [X31+168]
	473 Move X24, [X31+144]
	474 Move X23, [X31+152]
	475 Move X26, [X31+128]
	476 Move X25, [X31+136]
	477 Move X28, [X31+112]
	478 Move X27, [X31+120]
	479 Move X29, [X31+96]
	480 Move X30, [X31+104]
	481 Add X31, X31, 192
	482 Return 
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Call 0x1C17F20
	487 Call 0x1C17F20
	488 Call 0x1C17F20
	489 Call 0x1C17F28
	490 Call 0x1C17F20
	491 Call 0x1C17F20
	492 Move X20, X0
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Move X0, X20
	495 Call 0x3EB2AD0
	496 Move X23, [X0]
	497 Call 0x3EB2AE0
	498 Move X8, 0xB61000
	499 Move X8, [X8+16]
	500 Add X0, X31, 32
	501 Move X1, [X8]
	502 Call Enumerator<Object>.Dispose, X0
	503 Compare X23, 0
	504 JumpIfEqual {309}
	505 Move X0, X23
	506 Call 0x1C17F18
	507 Move X23, X31
	508 Move X20, X0
	509 Move X8, 0xB61000
	510 Move X8, [X8+16]
	511 Move X1, [X8]
	512 Add X0, X31, 32
	513 Call Enumerator<Object>.Dispose, X0
	514 Compare X23, 0
	515 JumpIfEqual {542}
	516 Move X0, X23
	517 Call 0x1C17F18
	518 Move X20, X0
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Move X0, X20
	521 Call 0x3EB2AD0
	522 Move X24, [X0]
	523 Call 0x3EB2AE0
	524 Move X8, 0xB43000
	525 Move X8, [X8+4040]
	526 Add X0, X31, 64
	527 Move X1, [X8]
	528 Call Enumerator<Object>.Dispose, X0
	529 Compare X24, 0
	530 JumpIfEqual {279}
	531 Move X0, X24
	532 Call 0x1C17F18
	533 Move X24, X31
	534 Move X20, X0
	535 Move X8, 0xB43000
	536 Move X8, [X8+4040]
	537 Move X1, [X8]
	538 Add X0, X31, 64
	539 Call Enumerator<Object>.Dispose, X0
	540 Compare X24, 0
	541 JumpIfNotEqual {544}
	542 Move X0, X20
	543 Call 0x1D2D690
	544 Move X0, X24
	545 Call 0x1C17F18
	546 Call 0x1991590

Method: System.Void GenerateKeyPaths(ref System.Text.StringBuilder builder, System.String typeName, System.Collections.Generic.List`1<System.String> generatedKeyPaths)

Disassembly:
	0x035D7678 LDR X8, [X8 + 0xCA8]
	0x035D767C MOV X22, X0
	0x035D7680 LDR X8, [X8]
	0x035D7684 LDR W9, [X8 + 0xE0]
	0x035D7688 CBNZ W9, 0x35D7694
	0x035D768C MOV X0, X8
	0x035D7690 BL 0x1C16DFC
	0x035D7694 MOV X0, X22
	0x035D7698 BL 0x35D89E4
	0x035D769C LDR W8, [X23 + 0x18]
	0x035D76A0 CMP W8, 0x5
	0x035D76A4 B.LS 0x35D7708
	0x035D76A8 STR X0, [X23 + 0x48]
	0x035D76AC MOV X0, X23
	0x035D76B0 MOV X1, X31
	0x035D76B4 BL 0x32278CC
	0x035D76B8 MOV X1, X0
	0x035D76BC MOV X0, X20
	0x035D76C0 MOV X2, X31
	0x035D76C4 BL 0x32338A8
	0x035D76C8 LDR W8, [X21 + 0x18]
	0x035D76CC ADD W29, W29, 0x1
	0x035D76D0 CMP W29, W8
	0x035D76D4 B.LT 0x35D74C0
	0x035D76D8 ADRP X8, 0xB27000
	0x035D76DC LDR X8, [X8 + 0x6D8]
	0x035D76E0 MOV X0, X20
	0x035D76E4 LDP X20, X19, [X31 + 0x50]
	0x035D76E8 LDP X22, X21, [X31 + 0x40]
	0x035D76EC LDR X1, [X8]
	0x035D76F0 LDP X24, X23, [X31 + 0x30]
	0x035D76F4 LDP X26, X25, [X31 + 0x20]
	0x035D76F8 LDP X28, X27, [X31 + 0x10]
	0x035D76FC MOV X2, X31
	0x035D7700 LDP X29, X30, [X31], #0x60
	0x035D7704 B 0x32338A8
	0x035D7708 BL 0x1C16F28
	0x035D770C BL 0x1C16F20
	0x035D7710 SUB X31, X31, 0x50
	0x035D7714 STP X30, X25, [X31 + 0x10]
	0x035D7718 STP X24, X23, [X31 + 0x20]
	0x035D771C STP X22, X21, [X31 + 0x30]
	0x035D7720 STP X20, X19, [X31 + 0x40]
	0x035D7724 ADRP X22, 0xE09000
	0x035D7728 LDRB W8, [X22 + 0x22B]
	0x035D772C MOV X21, X2
	0x035D7730 MOV X19, X1
	0x035D7734 MOV X20, X0
	0x035D7738 TBNZ X8, 0x0, 0x35D7840
	0x035D773C ADRP X0, 0xB61000
	0x035D7740 LDR X0, [X0 + 0xE10]
	0x035D7744 BL 0x1C16CF4
	0x035D7748 ADRP X0, 0xB61000
	0x035D774C LDR X0, [X0 + 0xE18]
	0x035D7750 BL 0x1C16CF4
	0x035D7754 ADRP X0, 0xB61000
	0x035D7758 LDR X0, [X0 + 0xE20]
	0x035D775C BL 0x1C16CF4
	0x035D7760 ADRP X0, 0xB61000
	0x035D7764 LDR X0, [X0 + 0xE28]
	0x035D7768 BL 0x1C16CF4
	0x035D776C ADRP X0, 0xB1C000
	0x035D7770 LDR X0, [X0 + 0xEB8]
	0x035D7774 BL 0x1C16CF4
	0x035D7778 ADRP X0, 0xB47000
	0x035D777C LDR X0, [X0 + 0x30]
	0x035D7780 BL 0x1C16CF4
	0x035D7784 ADRP X0, 0xB45000
	0x035D7788 LDR X0, [X0 + 0x20]
	0x035D778C BL 0x1C16CF4
	0x035D7790 ADRP X0, 0xB1C000
	0x035D7794 LDR X0, [X0 + 0xAC8]
	0x035D7798 BL 0x1C16CF4
	0x035D779C ADRP X0, 0xB61000
	0x035D77A0 LDR X0, [X0 + 0xCA8]
	0x035D77A4 BL 0x1C16CF4
	0x035D77A8 ADRP X0, 0xB1C000
	0x035D77AC LDR X0, [X0 + 0x6C0]
	0x035D77B0 BL 0x1C16CF4
	0x035D77B4 ADRP X0, 0xB61000
	0x035D77B8 LDR X0, [X0 + 0xE30]
	0x035D77BC BL 0x1C16CF4
	0x035D77C0 ADRP X0, 0xB61000
	0x035D77C4 LDR X0, [X0 + 0xD28]
	0x035D77C8 BL 0x1C16CF4
	0x035D77CC ADRP X0, 0xB47000
	0x035D77D0 LDR X0, [X0 + 0xE50]
	0x035D77D4 BL 0x1C16CF4
	0x035D77D8 ADRP X0, 0xB4D000
	0x035D77DC LDR X0, [X0 + 0xC90]
	0x035D77E0 BL 0x1C16CF4
	0x035D77E4 ADRP X0, 0xB61000
	0x035D77E8 LDR X0, [X0 + 0xE38]
	0x035D77EC BL 0x1C16CF4
	0x035D77F0 ADRP X0, 0xB1C000
	0x035D77F4 LDR X0, [X0 + 0x838]
	0x035D77F8 BL 0x1C16CF4
	0x035D77FC ADRP X0, 0xB61000
	0x035D7800 LDR X0, [X0 + 0xE40]
	0x035D7804 BL 0x1C16CF4
	0x035D7808 ADRP X0, 0xB27000
	0x035D780C LDR X0, [X0 + 0x310]
	0x035D7810 BL 0x1C16CF4
	0x035D7814 ADRP X0, 0xB4F000
	0x035D7818 LDR X0, [X0 + 0x158]
	0x035D781C BL 0x1C16CF4
	0x035D7820 ADRP X0, 0xB61000
	0x035D7824 LDR X0, [X0 + 0xE48]
	0x035D7828 BL 0x1C16CF4
	0x035D782C ADRP X0, 0xB61000
	0x035D7830 LDR X0, [X0 + 0xE50]
	0x035D7834 BL 0x1C16CF4
	0x035D7838 MOVZ W8, 0x1
	0x035D783C STRB W8, [X22 + 0x22B]
	0x035D7840 STP X31, X31, [X31]
	0x035D7844 STR X31, [X19]
	0x035D7848 STR X31, [X21]
	0x035D784C CBZ X20, 0x35D7EF0
	0x035D7850 LDR X8, [X20]
	0x035D7854 MOV X0, X20
	0x035D7858 LDR X9, [X8 + 0x448]
	0x035D785C LDR X1, [X8 + 0x450]
	0x035D7860 BLR X9
	0x035D7864 CBZ X0, 0x35D7EF0
	0x035D7868 LDR X8, [X0]
	0x035D786C MOV X22, X0
	0x035D7870 LDR X9, [X8 + 0x468]
	0x035D7874 LDR X1, [X8 + 0x470]
	0x035D7878 BLR X9
	0x035D787C CBZ X0, 0x35D7EF0
	0x035D7880 LDR X8, [X0 + 0x18]
	0x035D7884 CBZ X8, 0x35D7928
	0x035D7888 LDR X8, [X20]
	0x035D788C MOV X0, X20
	0x035D7890 LDR X9, [X8 + 0x468]
	0x035D7894 LDR X1, [X8 + 0x470]
	0x035D7898 BLR X9
	0x035D789C CBZ X0, 0x35D7EF0
	0x035D78A0 LDR W8, [X0 + 0x18]
	0x035D78A4 CBZ W8, 0x35D7EF4
	0x035D78A8 LDR X8, [X0 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X21, 0xE0A000
	013 Move W8, [X21+557]
	014 Move X20, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0xB44000
	022 Move X0, [X0+4040]
	023 Call 0x1C17CF4
	024 Move X0, 0xB44000
	025 Move X0, [X0+4048]
	026 Call 0x1C17CF4
	027 Move X0, 0xB44000
	028 Move X0, [X0+4056]
	029 Call 0x1C17CF4
	030 Move X0, 0xB44000
	031 Move X0, [X0+4064]
	032 Call 0x1C17CF4
	033 Move X0, 0xB62000
	034 Move X0, [X0+3464]
	035 Call 0x1C17CF4
	036 Move X0, 0xB62000
	037 Move X0, [X0+3472]
	038 Call 0x1C17CF4
	039 Move X0, 0xB62000
	040 Move X0, [X0+3480]
	041 Call 0x1C17CF4
	042 Move X0, 0xB62000
	043 Move X0, [X0+3488]
	044 Call 0x1C17CF4
	045 Move X0, 0xB28000
	046 Move X0, [X0+3288]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+557], W8
	050 Move W1, 32
	051 Move W2, 2
	052 Move X0, X31
	053 Move X3, X31
	054 Move [X31+8], X31
	055 Move [X31+16], X31
	056 Move [X31+24], X31
	057 Call String.CreateString, X0, X1, X2
	058 Compare X20, 0
	059 JumpIfEqual {132}
	060 Move X8, 0xB62000
	061 Move X8, [X8+3464]
	062 Move X24, 0xB62000
	063 Move X25, 0xB62000
	064 Move X21, X0
	065 Move X1, [X8]
	066 Move X24, [X24+3472]
	067 Move X25, [X25+3480]
	068 Move X0, X20
	069 Call List`1<Object>.Sort, X0
	070 Move X0, [X24]
	071 Move X2, [X25]
	072 Move X23, [X19]
	073 Move X1, X22
	074 Move X3, X31
	075 Call String.Concat, X0, X1, X2
	076 Compare X23, 0
	077 JumpIfEqual {132}
	078 Move X27, 0xB44000
	079 Move X24, 0xB44000
	080 Move X25, 0xB62000
	081 Move X26, 0xB28000
	082 Move X22, 0xB44000
	083 Move X27, [X27+4064]
	084 Move X24, [X24+4048]
	085 Move X25, [X25+3488]
	086 Move X26, [X26+3288]
	087 Move X22, [X22+4040]
	088 Move X1, X0
	089 Move X0, X23
	090 Move X2, X31
	091 Call StringBuilder.AppendLine, X0, X1
	092 Move X1, [X27]
	093 Add X8, X31, 8
	094 Move X0, X20
	095 Call List`1<Object>.GetEnumerator, X0
	096 Move X1, [X24]
	097 Add X0, X31, 8
	098 Call Enumerator<Object>.MoveNext, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {116}
	103 Move X20, [X19]
	104 Move X1, [X25]
	105 Move X2, [X31+24]
	106 Move X3, [X26]
	107 Move X0, X21
	108 Move X4, X31
	109 Call String.Concat, X0, X1, X2, X3
	110 Move X1, X0
	111 Compare X20, 0
	112 JumpIfEqual {131}
	113 Move X0, X20
	114 Move X2, X31
	115 Call StringBuilder.AppendLine, X0, X1
	116 Move X1, [X22]
	117 Add X0, X31, 8
	118 Call Enumerator<Object>.Dispose, X0
	119 Move X20, [X31+96]
	120 Move X19, [X31+104]
	121 Move X22, [X31+80]
	122 Move X21, [X31+88]
	123 Move X24, [X31+64]
	124 Move X23, [X31+72]
	125 Move X26, [X31+48]
	126 Move X25, [X31+56]
	127 Move X30, [X31+32]
	128 Move X27, [X31+40]
	129 Add X31, X31, 112
	130 Return 
	131 Call 0x1C17F20
	132 Call 0x1C17F20
	133 Move X19, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X19
	136 Call 0x3EB2AD0
	137 Move X20, [X0]
	138 Call 0x3EB2AE0
	139 Move X1, [X22]
	140 Add X0, X31, 8
	141 Call Enumerator<Object>.Dispose, X0
	142 Compare X20, 0
	143 JumpIfEqual {119}
	144 Move X0, X20
	145 Call 0x1C17F18
	146 Move X20, X31
	147 Move X19, X0
	148 Move X1, [X22]
	149 Add X0, X31, 8
	150 Call Enumerator<Object>.Dispose, X0
	151 Compare X20, 0
	152 JumpIfNotEqual {155}
	153 Move X0, X19
	154 Call 0x1D2D690
	155 Move X0, X20
	156 Call 0x1C17F18
	157 Call 0x1991590

Method: System.Void GenerateUnityTypes(ref System.Text.StringBuilder builder)

Disassembly:
	0x035D741C LDR X1, [X8 + 0x250]
	0x035D7420 BLR X9
	0x035D7424 LDR X8, [X27]
	0x035D7428 MOV X23, X0
	0x035D742C LDR W9, [X8 + 0xE0]
	0x035D7430 CBNZ W9, 0x35D743C
	0x035D7434 MOV X0, X8
	0x035D7438 BL 0x1C16DFC
	0x035D743C MOV X0, X23
	0x035D7440 BL 0x35D89E4
	0x035D7444 LDR X8, [X28]
	0x035D7448 LDR X2, [X26]
	0x035D744C MOV X3, X0
	0x035D7450 MOV X1, X24
	0x035D7454 MOV X0, X8
	0x035D7458 MOV X4, X31
	0x035D745C BL 0x32277C4
	0x035D7460 MOV X1, X0
	0x035D7464 MOV X0, X20
	0x035D7468 MOV X2, X31
	0x035D746C BL 0x32338A8
	0x035D7470 LDR W8, [X22 + 0x18]
	0x035D7474 ADD W25, W25, 0x1
	0x035D7478 CMP W25, W8
	0x035D747C B.LT 0x35D73C0
	0x035D7480 LDR X8, [X21]
	0x035D7484 MOVZ W1, 0x16
	0x035D7488 MOV X0, X21
	0x035D748C LDR X9, [X8 + 0x758]
	0x035D7490 LDR X2, [X8 + 0x760]
	0x035D7494 BLR X9
	0x035D7498 CBZ X0, 0x35D770C
	0x035D749C LDR W8, [X0 + 0x18]
	0x035D74A0 MOV X21, X0
	0x035D74A4 CMP W8, 0x1
	0x035D74A8 B.LT 0x35D76D8
	0x035D74AC ADRP X27, 0xB61000
	0x035D74B0 ADRP X26, 0xB1C000
	0x035D74B4 LDR X27, [X27 + 0xD28]
	0x035D74B8 LDR X26, [X26 + 0x838]
	0x035D74BC MOV W29, W31
	0x035D74C0 CMP W29, W8
	0x035D74C4 B.CS 0x35D7708
	0x035D74C8 ADD X8, X21, W29, 0x3, SXTW
	0x035D74CC LDR X22, [X8 + 0x20]
	0x035D74D0 CBZ X22, 0x35D770C
	0x035D74D4 LDR X8, [X22]
	0x035D74D8 MOVZ W2, 0x1
	0x035D74DC MOV X0, X22
	0x035D74E0 MOV X1, X19
	0x035D74E4 LDR X9, [X8 + 0x208]
	0x035D74E8 LDR X3, [X8 + 0x210]
	0x035D74EC BLR X9
	0x035D74F0 CBZ X0, 0x35D770C
	0x035D74F4 LDR X8, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE0A000
	005 Move W8, [X20+558]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0xB28000
	012 Move X0, [X0+1752]
	013 Call 0x1C17CF4
	014 Move X0, 0xB62000
	015 Move X0, [X0+3400]
	016 Call 0x1C17CF4
	017 Move X0, 0xB62000
	018 Move X0, [X0+3408]
	019 Call 0x1C17CF4
	020 Move X0, 0xB62000
	021 Move X0, [X0+3416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+558], W8
	025 Move X0, [X19]
	026 Compare X0, 0
	027 JumpIfEqual {66}
	028 Move X1, X31
	029 Call StringBuilder.AppendLine, X0
	030 Move X0, [X19]
	031 Compare X0, 0
	032 JumpIfEqual {66}
	033 Move X8, 0xB62000
	034 Move X8, [X8+3416]
	035 Move X2, X31
	036 Move X1, [X8]
	037 Call StringBuilder.AppendLine, X0, X1
	038 Move X0, [X19]
	039 Compare X0, 0
	040 JumpIfEqual {66}
	041 Move X8, 0xB62000
	042 Move X8, [X8+3408]
	043 Move X2, X31
	044 Move X1, [X8]
	045 Call StringBuilder.AppendLine, X0, X1
	046 Move X0, [X19]
	047 Compare X0, 0
	048 JumpIfEqual {66}
	049 Move X8, 0xB62000
	050 Move X8, [X8+3400]
	051 Move X2, X31
	052 Move X1, [X8]
	053 Call StringBuilder.AppendLine, X0, X1
	054 Move X0, [X19]
	055 Compare X0, 0
	056 JumpIfEqual {66}
	057 Move X8, 0xB28000
	058 Move X8, [X8+1752]
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X2, X31
	062 Move X1, [X8]
	063 Move X30, [X31+32]
	064 Call StringBuilder.AppendLine, X0, X1
	065 Return 
	066 Call 0x1C17F20

Method: System.Void GenerateCustomPrimitiveTypes(ref System.Text.StringBuilder builder)

Disassembly:
	0x035D74F8 CBZ X8, 0x35D76C8
	0x035D74FC LDR X8, [X22]
	0x035D7500 MOV X0, X22
	0x035D7504 LDR X9, [X8 + 0x248]
	0x035D7508 LDR X1, [X8 + 0x250]
	0x035D750C BLR X9
	0x035D7510 LDR X8, [X27]
	0x035D7514 MOV X23, X0
	0x035D7518 LDR W9, [X8 + 0xE0]
	0x035D751C CBNZ W9, 0x35D752C
	0x035D7520 MOV X0, X8
	0x035D7524 BL 0x1C16DFC
	0x035D7528 LDR X8, [X27]
	0x035D752C LDR X9, [X8 + 0xB8]
	0x035D7530 LDR X24, [X26]
	0x035D7534 LDR X25, [X9 + 0x20]
	0x035D7538 CBNZ X25, 0x35D7598
	0x035D753C LDR W9, [X8 + 0xE0]
	0x035D7540 CBNZ W9, 0x35D7550
	0x035D7544 MOV X0, X8
	0x035D7548 BL 0x1C16DFC
	0x035D754C LDR X8, [X27]
	0x035D7550 LDR X8, [X8 + 0xB8]
	0x035D7554 LDR X26, [X8]
	0x035D7558 ADRP X8, 0xB61000
	0x035D755C LDR X8, [X8 + 0xDF8]
	0x035D7560 LDR X0, [X8]
	0x035D7564 BL 0x1C16F10
	0x035D7568 ADRP X8, 0xB61000
	0x035D756C LDR X8, [X8 + 0xE00]
	0x035D7570 MOV X1, X26
	0x035D7574 MOV X3, X31
	0x035D7578 MOV X25, X0
	0x035D757C LDR X2, [X8]
	0x035D7580 BL 0x2D30578
	0x035D7584 LDR X8, [X27]
	0x035D7588 ADRP X26, 0xB1C000
	0x035D758C LDR X8, [X8 + 0xB8]
	0x035D7590 STR X25, [X8 + 0x20]
	0x035D7594 LDR X26, [X26 + 0x838]
	0x035D7598 ADRP X8, 0xB61000
	0x035D759C LDR X8, [X8 + 0xDF0]
	0x035D75A0 MOV X0, X23
	0x035D75A4 MOV X1, X25
	0x035D75A8 LDR X2, [X8]
	0x035D75AC BL 0x21CF224
	0x035D75B0 ADRP X8, 0xB1C000
	0x035D75B4 LDR X8, [X8 + 0xEB8]
	0x035D75B8 LDR X1, [X8]
	0x035D75BC BL 0x21D577C
	0x035D75C0 MOV X1, X0
	0x035D75C4 MOV X0, X24
	0x035D75C8 MOV X2, X31
	0x035D75CC BL 0x3227FF8
	0x035D75D0 ADRP X8, 0xB1C000
	0x035D75D4 LDR X8, [X8 + 0xAC8]
	0x035D75D8 MOV X24, X0
	0x035D75DC MOVZ W1, 0x6
	0x035D75E0 LDR X8, [X8]
	0x035D75E4 MOV X0, X8
	0x035D75E8 BL 0x1C16D6C
	0x035D75EC CBZ X0, 0x35D770C
	0x035D75F0 LDR W8, [X0 + 0x18]
	0x035D75F4 MOV X23, X0
	0x035D75F8 CBZ W8, 0x35D7708
	0x035D75FC LDR X8, [X28]
	0x035D7600 MOV X0, X22
	0x035D7604 STR X8, [X23 + 0x20]
	0x035D7608 LDR X8, [X22]
	0x035D760C LDP X9, X1, [X8 + 0x1A8]
	0x035D7610 BLR X9
	0x035D7614 LDR W8, [X23 + 0x18]
	0x035D7618 CMP W8, 0x1
	0x035D761C B.LS 0x35D7708
	0x035D7620 CMP W8, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE0A000
	005 Move W8, [X20+559]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {31}
	011 Move X0, 0xB28000
	012 Move X0, [X0+1752]
	013 Call 0x1C17CF4
	014 Move X0, 0xB62000
	015 Move X0, [X0+3424]
	016 Call 0x1C17CF4
	017 Move X0, 0xB62000
	018 Move X0, [X0+3432]
	019 Call 0x1C17CF4
	020 Move X0, 0xB62000
	021 Move X0, [X0+3440]
	022 Call 0x1C17CF4
	023 Move X0, 0xB62000
	024 Move X0, [X0+3448]
	025 Call 0x1C17CF4
	026 Move X0, 0xB62000
	027 Move X0, [X0+3456]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+559], W8
	031 Move X0, [X19]
	032 Compare X0, 0
	033 JumpIfEqual {88}
	034 Move X1, X31
	035 Call StringBuilder.AppendLine, X0
	036 Move X0, [X19]
	037 Compare X0, 0
	038 JumpIfEqual {88}
	039 Move X8, 0xB62000
	040 Move X8, [X8+3424]
	041 Move X2, X31
	042 Move X1, [X8]
	043 Call StringBuilder.AppendLine, X0, X1
	044 Move X0, [X19]
	045 Compare X0, 0
	046 JumpIfEqual {88}
	047 Move X8, 0xB62000
	048 Move X8, [X8+3456]
	049 Move X2, X31
	050 Move X1, [X8]
	051 Call StringBuilder.AppendLine, X0, X1
	052 Move X0, [X19]
	053 Compare X0, 0
	054 JumpIfEqual {88}
	055 Move X8, 0xB62000
	056 Move X8, [X8+3448]
	057 Move X2, X31
	058 Move X1, [X8]
	059 Call StringBuilder.AppendLine, X0, X1
	060 Move X0, [X19]
	061 Compare X0, 0
	062 JumpIfEqual {88}
	063 Move X8, 0xB62000
	064 Move X8, [X8+3440]
	065 Move X2, X31
	066 Move X1, [X8]
	067 Call StringBuilder.AppendLine, X0, X1
	068 Move X0, [X19]
	069 Compare X0, 0
	070 JumpIfEqual {88}
	071 Move X8, 0xB62000
	072 Move X8, [X8+3432]
	073 Move X2, X31
	074 Move X1, [X8]
	075 Call StringBuilder.AppendLine, X0, X1
	076 Move X0, [X19]
	077 Compare X0, 0
	078 JumpIfEqual {88}
	079 Move X8, 0xB28000
	080 Move X8, [X8+1752]
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X2, X31
	084 Move X1, [X8]
	085 Move X30, [X31+32]
	086 Call StringBuilder.AppendLine, X0, X1
	087 Return 
	088 Call 0x1C17F20

Method: System.String TypeNameFromNonPolymer(System.Type type)

Disassembly:
	0x035D99E4 BR X3
	0x035D99E8 BL 0x1C16F20
	0x035D99EC STR X30, [X31 - 0x10]!
	0x035D99F0 LDR X0, [X0 + 0x48]
	0x035D99F4 CBZ X0, 0x35D9A0C
	0x035D99F8 LDR X8, [X0]
	0x035D99FC LDR X2, [X8 + 0x218]
	0x035D9A00 LDR X1, [X8 + 0x220]
	0x035D9A04 LDR X30, [X31], #0x10
	0x035D9A08 BR X2
	0x035D9A0C BL 0x1C16F20
	0x035D9A10 STR X30, [X31 - 0x10]!
	0x035D9A14 LDR X0, [X0 + 0x48]
	0x035D9A18 CBZ X0, 0x35D9A30
	0x035D9A1C LDR X8, [X0]
	0x035D9A20 LDR X3, [X8 + 0x228]
	0x035D9A24 LDR X2, [X8 + 0x230]
	0x035D9A28 LDR X30, [X31], #0x10
	0x035D9A2C BR X3
	0x035D9A30 BL 0x1C16F20
	0x035D9A34 STR X30, [X31 - 0x10]!
	0x035D9A38 LDR X0, [X0 + 0x48]
	0x035D9A3C CBZ X0, 0x35D9A54
	0x035D9A40 LDR X8, [X0]
	0x035D9A44 LDR X2, [X8 + 0x238]
	0x035D9A48 LDR X1, [X8 + 0x240]
	0x035D9A4C LDR X30, [X31], #0x10
	0x035D9A50 BR X2
	0x035D9A54 BL 0x1C16F20
	0x035D9A58 STR X30, [X31 - 0x20]!
	0x035D9A5C STP X20, X19, [X31 + 0x10]
	0x035D9A60 SUB W8, W1, 0x3
	0x035D9A64 CMP W8, 0x1
	0x035D9A68 B.LS 0x35D9A8C
	0x035D9A6C LDR X0, [X0 + 0x48]
	0x035D9A70 CBZ X0, 0x35D9AD4
	0x035D9A74 LDR X8, [X0]
	0x035D9A78 LDP X20, X19, [X31 + 0x10]
	0x035D9A7C LDR X3, [X8 + 0x248]
	0x035D9A80 LDR X2, [X8 + 0x250]
	0x035D9A84 LDR X30, [X31], #0x20
	0x035D9A88 BR X3
	0x035D9A8C ADRP X0, 0xB4A000
	0x035D9A90 LDR X0, [X0 + 0x1D0]
	0x035D9A94 BL 0x1C16D08
	0x035D9A98 MOV X19, X0
	0x035D9A9C ADRP X0, 0xB47000
	0x035D9AA0 LDR X0, [X0 + 0xCE0]
	0x035D9AA4 BL 0x1C16D08
	0x035D9AA8 BL 0x1C16F10
	0x035D9AAC MOV X1, X19
	0x035D9AB0 MOV X2, X31
	0x035D9AB4 MOV X20, X0
	0x035D9AB8 BL 0x3252170
	0x035D9ABC ADRP X0, 0xB60000
	0x035D9AC0 LDR X0, [X0 + 0x20]
	0x035D9AC4 BL 0x1C16D08
	0x035D9AC8 MOV X1, X0
	0x035D9ACC MOV X0, X20
	0x035D9AD0 BL 0x1C16DEC
	0x035D9AD4 BL 0x1C16F20
	0x035D9AD8 STR X30, [X31 - 0x10]!
	0x035D9ADC LDR X0, [X0 + 0x48]
	0x035D9AE0 CBZ X0, 0x35D9AF8
	0x035D9AE4 LDR X8, [X0]
	0x035D9AE8 LDR X2, [X8 + 0x258]
	0x035D9AEC LDR X1, [X8 + 0x260]
	0x035D9AF0 LDR X30, [X31], #0x10
	0x035D9AF4 BR X2
	0x035D9AF8 BL 0x1C16F20
	0x035D9AFC STR X30, [X31 - 0x10]!
	0x035D9B00 LDR X0, [X0 + 0x48]
	0x035D9B04 CBZ X0, 0x35D9B1C
	0x035D9B08 LDR X8, [X0]
	0x035D9B0C LDR X3, [X8 + 0x268]
	0x035D9B10 LDR X2, [X8 + 0x270]
	0x035D9B14 LDR X30, [X31], #0x10
	0x035D9B18 BR X3
	0x035D9B1C BL 0x1C16F20
	0x035D9B20 STR X30, [X31 - 0x10]!
	0x035D9B24 LDR X0, [X0 + 0x48]
	0x035D9B28 CBZ X0, 0x35D9B40
	0x035D9B2C LDR X8, [X0]
	0x035D9B30 LDR X2, [X8 + 0x298]
	0x035D9B34 LDR X1, [X8 + 0x2A0]
	0x035D9B38 LDR X30, [X31], #0x10
	0x035D9B3C BR X2
	0x035D9B40 BL 0x1C16F20
	0x035D9B44 STP X30, X21, [X31 - 0x20]!
	0x035D9B48 STP X20, X19, [X31 + 0x10]
	0x035D9B4C CBZ X1, 0x35D9BAC
	0x035D9B50 LDR W8, [X1 + 0x18]
	0x035D9B54 MOV X19, X2
	0x035D9B58 MOV X20, X1
	0x035D9B5C MOV X2, X31
	0x035D9B60 UBFM W1, W8, 0x1D, 0x1C
	0x035D9B64 MOV X21, X0
	0x035D9B68 BL 0x3260DF0
	0x035D9B6C TBZ X0, 0x0, 0x35D9BF4
	0x035D9B70 CBZ X19, 0x35D9B84
	0x035D9B74 LDR W8, [X21 + 0x10]
	0x035D9B78 LDR W9, [X19 + 0x18]
	0x035D9B7C CMP W8, W9, LSL
	0x035D9B80 B.NE 0x35D9C28
	0x035D9B84 LDR X0, [X21 + 0x48]
	0x035D9B88 CBZ X0, 0x35D9C24
	0x035D9B8C LDR X8, [X0]
	0x035D9B90 MOV X1, X20
	0x035D9B94 MOV X2, X19
	0x035D9B98 LDP X20, X19, [X31 + 0x10]
	0x035D9B9C LDR X4, [X8 + 0x2A8]
	0x035D9BA0 LDR X3, [X8 + 0x2B0]
	0x035D9BA4 LDP X30, X21, [X31], #0x20
	0x035D9BA8 BR X4
	0x035D9BAC ADRP X0, 0xB1F000
	0x035D9BB0 LDR X0, [X0 + 0x528]
	0x035D9BB4 BL 0x1C16D08
	0x035D9BB8 BL 0x1C16F10
	0x035D9BBC MOV X19, X0
	0x035D9BC0 ADRP X0, 0xB44000
	0x035D9BC4 LDR X0, [X0 + 0x70]
	0x035D9BC8 BL 0x1C16D08
	0x035D9BCC MOV X1, X0
	0x035D9BD0 MOV X0, X19
	0x035D9BD4 MOV X2, X31
	0x035D9BD8 BL 0x330E100
	0x035D9BDC ADRP X0, 0xB60000
	0x035D9BE0 LDR X0, [X0 + 0x28]
	0x035D9BE4 BL 0x1C16D08
	0x035D9BE8 MOV X1, X0
	0x035D9BEC MOV X0, X19
	0x035D9BF0 BL 0x1C16DEC
	0x035D9BF4 ADRP X0, 0xB49000
	0x035D9BF8 LDR X0, [X0 + 0xF08]
	0x035D9BFC BL 0x1C16D08
	0x035D9C00 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xE08000
	008 Move W8, [X20+560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xB43000
	015 Move X0, [X0+2912]
	016 Call 0x1C17CF4
	017 Move X0, 0xB60000
	018 Move X0, [X0+3240]
	019 Call 0x1C17CF4
	020 Move X0, 0xB1B000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xB4C000
	024 Move X0, [X0+2064]
	025 Call 0x1C17CF4
	026 Move X0, 0xB60000
	027 Move X0, [X0+3904]
	028 Call 0x1C17CF4
	029 Move X0, 0xB4C000
	030 Move X0, [X0+3216]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+560], W8
	034 Move [X31+24], X31
	035 Move [X31+8], X31
	036 Compare X19, 0
	037 JumpIfEqual {165}
	038 Move X21, 0xB60000
	039 Move X21, [X21+3240]
	040 Move X0, X19
	041 Move X1, X31
	042 Call Type.get_IsPrimitive, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {87}
	047 Move X22, 0xB1B000
	048 Move X22, [X22+1728]
	049 Move X8, 0xB4C000
	050 Move X0, [X22]
	051 Move X8, [X8+2064]
	052 Move W9, [X0+224]
	053 Move X20, [X8]
	054 Compare W9, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Call Type.GetTypeFromHandle, X0
	060 Move X1, X0
	061 Move X0, X19
	062 Move X2, X31
	063 Call Type.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {87}
	068 Move X8, 0xB43000
	069 Move X0, [X22]
	070 Move X8, [X8+2912]
	071 Move W9, [X0+224]
	072 Move X20, [X8]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Call Type.GetTypeFromHandle, X0
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call Type.op_Equality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {102}
	087 Move X0, [X21]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X19
	093 Move W1, W31
	094 Call TypeScriptInterfaceGenerator.PrimitiveTypeToTS, X0, X1
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X30, [X31+16]
	100 Add X31, X31, 64
	101 Return X0
	102 Move X8, [X19]
	103 Move X0, X19
	104 Move X9, [X8+968]
	105 Move X1, [X8+976]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {126}
	111 Move X8, [X19]
	112 Move X0, X19
	113 Move X9, [X8+2072]
	114 Move X1, [X8+2080]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Compare X0, 0
	117 JumpIfEqual {135}
	118 Move X8, [X0]
	119 Move X9, [X8+968]
	120 Move X1, [X8+976]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {135}
	126 Move X0, [X21]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Add X1, X31, 24
	132 Add X2, X31, 8
	133 Move X0, X19
	134 Call TypeScriptInterfaceGenerator.GenericTypeToTS, X0, X1, X2
	135 Move X0, X19
	136 Move X1, X31
	137 Call Type.get_IsArray, X0
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {162}
	142 Move X8, [X19]
	143 Move X0, X19
	144 Move X9, [X8+1064]
	145 Move X1, [X8+1072]
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X8, [X21]
	148 Move X19, X0
	149 Move W9, [X8+224]
	150 Compare W9, 0
	151 JumpIfNotEqual {154}
	152 Move X0, X8
	153 Call 0x1C17DFC
	154 Move X0, X19
	155 Move W1, W31
	156 Call TypeScriptInterfaceGenerator.PrimitiveTypeToTS, X0, X1
	157 Move X8, 0xB4C000
	158 Move X8, [X8+3216]
	159 Move X2, X31
	160 Move X1, [X8]
	161 Call String.Concat, X0, X1
	162 Move X8, 0xB60000
	163 Move X8, [X8+3904]
	164 Move X0, [X8]
	165 Call 0x1C17F20

Method: System.Void GenerateClassInterface(System.Text.StringBuilder builder, System.Type type, System.Type exportAttribute)

Disassembly:
	0x035D81F4 LDR W9, [X8 + 0xE0]
	0x035D81F8 CBNZ W9, 0x35D8208
	0x035D81FC MOV X0, X8
	0x035D8200 BL 0x1C16DFC
	0x035D8204 LDR X8, [X29]
	0x035D8208 LDR X8, [X8 + 0xB8]
	0x035D820C LDR X26, [X8]
	0x035D8210 ADRP X8, 0xB60000
	0x035D8214 LDR X8, [X8 + 0x680]
	0x035D8218 LDR X0, [X8]
	0x035D821C BL 0x1C16F10
	0x035D8220 ADRP X8, 0xB60000
	0x035D8224 LDR X8, [X8 + 0xE58]
	0x035D8228 MOV X1, X26
	0x035D822C MOV X3, X31
	0x035D8230 MOV X25, X0
	0x035D8234 LDR X2, [X8]
	0x035D8238 BL 0x2D2F428
	0x035D823C LDR X8, [X29]
	0x035D8240 ADRP X26, 0xB60000
	0x035D8244 LDR X8, [X8 + 0xB8]
	0x035D8248 STR X25, [X8 + 0x10]
	0x035D824C LDR X26, [X26 + 0xCC8]
	0x035D8250 LDR X2, [X26]
	0x035D8254 MOV X0, X24
	0x035D8258 MOV X1, X25
	0x035D825C BL 0x21B36AC
	0x035D8260 TBNZ X0, 0x0, 0x35D830C
	0x035D8264 ADRP X8, 0xB1B000
	0x035D8268 LDR X24, [X19]
	0x035D826C LDR X8, [X8 + 0xAC8]
	0x035D8270 MOVZ W1, 0x5
	0x035D8274 LDR X0, [X8]
	0x035D8278 BL 0x1C16D6C
	0x035D827C CBZ X0, 0x35D8354
	0x035D8280 LDR W8, [X0 + 0x18]
	0x035D8284 MOV X25, X0
	0x035D8288 CBZ W8, 0x35D8350
	0x035D828C STR X20, [X25 + 0x20]
	0x035D8290 LDR X8, [X22]
	0x035D8294 MOV X0, X22
	0x035D8298 LDP X9, X1, [X8 + 0x1A8]
	0x035D829C BLR X9
	0x035D82A0 LDR W8, [X25 + 0x18]
	0x035D82A4 CMP W8, 0x1
	0x035D82A8 B.LS 0x35D8350
	0x035D82AC CMP W8, 0x2
	0x035D82B0 STR X0, [X25 + 0x28]
	0x035D82B4 B.EQ 0x35D8350
	0x035D82B8 ADRP X9, 0xB45000
	0x035D82BC LDR X9, [X9 + 0x3A8]
	0x035D82C0 CMP W8, 0x3
	0x035D82C4 LDR X9, [X9]
	0x035D82C8 STR X9, [X25 + 0x30]
	0x035D82CC B.LS 0x35D8350
	0x035D82D0 CMP W8, 0x4
	0x035D82D4 STR X23, [X25 + 0x38]
	0x035D82D8 B.EQ 0x35D8350
	0x035D82DC ADRP X8, 0xB1D000
	0x035D82E0 LDR X8, [X8 + 0x3A0]
	0x035D82E4 MOV X0, X25
	0x035D82E8 MOV X1, X31
	0x035D82EC LDR X8, [X8]
	0x035D82F0 STR X8, [X25 + 0x40]
	0x035D82F4 BL 0x32278CC
	0x035D82F8 CBZ X24, 0x35D8354
	0x035D82FC MOV X1, X0
	0x035D8300 MOV X0, X24
	0x035D8304 MOV X2, X31
	0x035D8308 BL 0x32338A8
	0x035D830C LDR W8, [X21 + 0x18]
	0x035D8310 ADD W27, W27, 0x1
	0x035D8314 CMP W27, W8
	0x035D8318 B.LT 0x35D816C
	0x035D831C LDR X0, [X19]
	0x035D8320 CBZ X0, 0x35D8354
	0x035D8324 ADRP X8, 0xB26000
	0x035D8328 LDR X8, [X8 + 0x6D8]
	0x035D832C LDP X20, X19, [X31 + 0x50]
	0x035D8330 LDP X22, X21, [X31 + 0x40]
	0x035D8334 LDP X24, X23, [X31 + 0x30]
	0x035D8338 LDR X1, [X8]
	0x035D833C LDP X26, X25, [X31 + 0x20]
	0x035D8340 LDP X28, X27, [X31 + 0x10]
	0x035D8344 MOV X2, X31
	0x035D8348 LDP X29, X30, [X31], #0x60
	0x035D834C B 0x32338A8
	0x035D8350 BL 0x1C16F28
	0x035D8354 BL 0x1C16F20
	0x035D8358 STP X30, X21, [X31 - 0x20]!
	0x035D835C STP X20, X19, [X31 + 0x10]
	0x035D8360 ADRP X21, 0xE08000
	0x035D8364 LDRB W8, [X21 + 0x22A]
	0x035D8368 MOV W20, W1
	0x035D836C MOV X19, X0
	0x035D8370 TBNZ X8, 0x0, 0x35D84FC
	0x035D8374 ADRP X0, 0xB43000
	0x035D8378 LDR X0, [X0 + 0xB60]
	0x035D837C BL 0x1C16CF4
	0x035D8380 ADRP X0, 0xB60000
	0x035D8384 LDR X0, [X0 + 0xCA8]
	0x035D8388 BL 0x1C16CF4
	0x035D838C ADRP X0, 0xB1B000
	0x035D8390 LDR X0, [X0 + 0x6C0]
	0x035D8394 BL 0x1C16CF4
	0x035D8398 ADRP X0, 0xB60000
	0x035D839C LDR X0, [X0 + 0xE68]
	0x035D83A0 BL 0x1C16CF4
	0x035D83A4 ADRP X0, 0xB60000
	0x035D83A8 LDR X0, [X0 + 0xE70]
	0x035D83AC BL 0x1C16CF4
	0x035D83B0 ADRP X0, 0xB60000
	0x035D83B4 LDR X0, [X0 + 0xE78]
	0x035D83B8 BL 0x1C16CF4
	0x035D83BC ADRP X0, 0xB45000
	0x035D83C0 LDR X0, [X0 + 0xAB8]
	0x035D83C4 BL 0x1C16CF4
	0x035D83C8 ADRP X0, 0xB60000
	0x035D83CC LDR X0, [X0 + 0xE80]
	0x035D83D0 BL 0x1C16CF4
	0x035D83D4 ADRP X0, 0xB60000
	0x035D83D8 LDR X0, [X0 + 0xE88]
	0x035D83DC BL 0x1C16CF4
	0x035D83E0 ADRP X0, 0xB60000
	0x035D83E4 LDR X0, [X0 + 0xE90]
	0x035D83E8 BL 0x1C16CF4
	0x035D83EC ADRP X0, 0xB60000
	0x035D83F0 LDR X0, [X0 + 0xE98]
	0x035D83F4 BL 0x1C16CF4
	0x035D83F8 ADRP X0, 0xB60000
	0x035D83FC LDR X0, [X0 + 0xEA0]
	0x035D8400 BL 0x1C16CF4
	0x035D8404 ADRP X0, 0xB60000
	0x035D8408 LDR X0, [X0 + 0xEA8]
	0x035D840C BL 0x1C16CF4
	0x035D8410 ADRP X0, 0xB60000
	0x035D8414 LDR X0, [X0 + 0xEB0]
	0x035D8418 BL 0x1C16CF4
	0x035D841C ADRP X0, 0xB4D000
	0x035D8420 LDR X0, [X0 + 0x568]
	0x035D8424 BL 0x1C16CF4
	0x035D8428 ADRP X0, 0xB60000
	0x035D842C LDR X0, [X0 + 0xEB8]
	0x035D8430 BL 0x1C16CF4
	0x035D8434 ADRP X0, 0xB60000
	0x035D8438 LDR X0, [X0 + 0xEC0]
	0x035D843C BL 0x1C16CF4
	0x035D8440 ADRP X0, 0xB60000
	0x035D8444 LDR X0, [X0 + 0xEC8]
	0x035D8448 BL 0x1C16CF4
	0x035D844C ADRP X0, 0xB60000
	0x035D8450 LDR X0, [X0 + 0xED0]
	0x035D8454 BL 0x1C16CF4
	0x035D8458 ADRP X0, 0xB60000
	0x035D845C LDR X0, [X0 + 0xED8]
	0x035D8460 BL 0x1C16CF4
	0x035D8464 ADRP X0, 0xB60000
	0x035D8468 LDR X0, [X0 + 0xEE0]
	0x035D846C BL 0x1C16CF4
	0x035D8470 ADRP X0, 0xB60000
	0x035D8474 LDR X0, [X0 + 0xEE8]
	0x035D8478 BL 0x1C16CF4
	0x035D847C ADRP X0, 0xB60000
	0x035D8480 LDR X0, [X0 + 0xEF0]
	0x035D8484 BL 0x1C16CF4
	0x035D8488 ADRP X0, 0xB60000
	0x035D848C LDR X0, [X0 + 0xEF8]
	0x035D8490 BL 0x1C16CF4
	0x035D8494 ADRP X0, 0xB60000
	0x035D8498 LDR X0, [X0 + 0xF00]
	0x035D849C BL 0x1C16CF4
	0x035D84A0 ADRP X0, 0xB60000
	0x035D84A4 LDR X0, [X0 + 0xF08]
	0x035D84A8 BL 0x1C16CF4
	0x035D84AC ADRP X0, 0xB60000
	0x035D84B0 LDR X0, [X0 + 0xF10]
	0x035D84B4 BL 0x1C16CF4
	0x035D84B8 ADRP X0, 0xB60000
	0x035D84BC LDR X0, [X0 + 0xF18]
	0x035D84C0 BL 0x1C16CF4
	0x035D84C4 ADRP X0, 0xB60000
	0x035D84C8 LDR X0, [X0 + 0xF20]
	0x035D84CC BL 0x1C16CF4
	0x035D84D0 ADRP X0, 0xB60000
	0x035D84D4 LDR X0, [X0 + 0xF28]
	0x035D84D8 BL 0x1C16CF4
	0x035D84DC ADRP X0, 0xB60000
	0x035D84E0 LDR X0, [X0 + 0xF30]
	0x035D84E4 BL 0x1C16CF4
	0x035D84E8 ADRP X0, 0xB60000
	0x035D84EC LDR X0, [X0 + 0xF38]
	0x035D84F0 BL 0x1C16CF4
	0x035D84F4 MOVZ W8, 0x1
	0x035D84F8 STRB W8, [X21 + 0x22A]
	0x035D84FC TBZ X20, 0x0, 0x35D8588
	0x035D8500 CBZ X19, 0x35D8964
	0x035D8504 LDR X8, [X19]
	0x035D8508 MOV X0, X19
	0x035D850C LDR X9, [X8 + 0x588]
	0x035D8510 LDR X1, [X8 + 0x590]
	0x035D8514 BLR X9
	0x035D8518 TBZ X0, 0x0, 0x35D858C
	0x035D851C LDR X8, [X19]
	0x035D8520 MOV X0, X19
	0x035D8524 LDR X9, [X8 + 0x888]
	0x035D8528 LDR X1, [X8 + 0x890]
	0x035D852C BLR X9
	0x035D8530 ADRP X8, 0xB1B000
	0x035D8534 LDR X8, [X8 + 0x6C0]
	0x035D8538 ADRP X9, 0xB43000
	0x035D853C MOV X19, X0
	0x035D8540 LDR X8, [X8]
	0x035D8544 LDR X9, [X9 + 0xB60]
	0x035D8548 LDR W10, [X8 + 0xE0]
	0x035D854C LDR X20, [X9]
	0x035D8550 CBNZ W10, 0x35D855C
	0x035D8554 MOV X0, X8
	0x035D8558 BL 0x1C16DFC
	0x035D855C MOV X0, X20
	0x035D8560 MOV X1, X31
	0x035D8564 BL 0x338C698
	0x035D8568 MOV X1, X0
	0x035D856C MOV X0, X19
	0x035D8570 MOV X2, X31
	0x035D8574 BL 0x3395194
	0x035D8578 TBZ X0, 0x0, 0x35D8924
	0x035D857C ADRP X8, 0xB45000
	0x035D8580 LDR X8, [X8 + 0xAB8]
	0x035D8584 B 0x35D892C
	0x035D8588 CBZ X19, 0x35D8964
	0x035D858C LDR X8, [X19]
	0x035D8590 MOV X0, X19
	0x035D8594 LDR X9, [X8 + 0x2E8]
	0x035D8598 LDR X1, [X8 + 0x2F0]
	0x035D859C BLR X9
	0x035D85A0 MOV X19, X0
	0x035D85A4 BL 0x35D8968
	0x035D85A8 MOVZ W8, 0x296C
	0x035D85AC MOVK W8, 0x65320000
	0x035D85B0 CMP W0, W8
	0x035D85B4 B.HI 0x35D8620
	0x035D85B8 MOVZ W8, 0x3EE0
	0x035D85BC MOVK W8, 0x34300000
	0x035D85C0 CMP W0, W8
	0x035D85C4 B.HI 0x35D8660
	0x035D85C8 MOVZ W8, 0x3288
	0x035D85CC MOVK W8, 0x131E0000
	0x035D85D0 CMP W0, W8
	0x035D85D4 B.HI 0x35D86E8
	0x035D85D8 MOVZ W8, 0x1EE8
	0x035D85DC MOVK W8, 0x6E10000
	0x035D85E0 CMP W0, W8
	0x035D85E4 B.EQ 0x35D87EC
	0x035D85E8 MOVZ W8, 0x3288
	0x035D85EC MOVK W8, 0x131E0000
	0x035D85F0 CMP W0, W8
	0x035D85F4 B.NE 0x35D893C
	0x035D85F8 ADRP X8, 0xB60000
	0x035D85FC LDR X8, [X8 + 0xE88]
	0x035D8600 MOV X0, X19
	0x035D8604 MOV X2, X31
	0x035D8608 LDR X1, [X8]
	0x035D860C BL 0x321BA08
	0x035D8610 TBZ X0, 0x0, 0x35D893C
	0x035D8614 ADRP X8, 0xB60000
	0x035D8618 LDR X8, [X8 + 0xE90]
	0x035D861C B 0x35D892C
	0x035D8620 MOVZ W8, 0x5AA4
	0x035D8624 MOVK W8, 0xAC830000
	0x035D8628 CMP W0, W8
	0x035D862C B.HI 0x35D869C
	0x035D8630 MOVZ W8, 0x4F3E
	0x035D8634 MOVK W8, 0x82420000
	0x035D8638 CMP W0, W8
	0x035D863C B.HI 0x35D8724
	0x035D8640 B.EQ 0x35D87F8
	0x035D8644 MOVZ W8, 0x63C5
	0x035D8648 MOVK W8, 0x69250000
	0x035D864C CMP W0, W8
	0x035D8650 B.NE 0x35D893C
	0x035D8654 ADRP X8, 0xB60000
	0x035D8658 LDR X8, [X8 + 0xE68]
	0x035D865C B 0x35D8910
	0x035D8660 MOVZ W8, 0xDD63
	0x035D8664 MOVK W8, 0x5BE10000
	0x035D8668 CMP W0, W8
	0x035D866C B.HI 0x35D8760
	0x035D8670 MOVZ W8, 0x695
	0x035D8674 MOVK W8, 0x382E0000
	0x035D8678 CMP W0, W8
	0x035D867C B.EQ 0x35D8804
	0x035D8680 MOVZ W8, 0xDD63
	0x035D8684 MOVK W8, 0x5BE10000
	0x035D8688 CMP W0, W8
	0x035D868C B.NE 0x35D893C
	0x035D8690 ADRP X8, 0xB60000
	0x035D8694 LDR X8, [X8 + 0xE98]
	0x035D8698 B 0x35D87D4
	0x035D869C MOVZ W8, 0xD0F2
	0x035D86A0 MOVK W8, 0xD2ED0000
	0x035D86A4 CMP W0, W8
	0x035D86A8 B.HI 0x35D879C
	0x035D86AC MOVZ W8, 0x38BC
	0x035D86B0 MOVK W8, 0xB7940000
	0x035D86B4 CMP W0, W8
	0x035D86B8 B.EQ 0x35D8810
	0x035D86BC MOVZ W8, 0xD2CB
	0x035D86C0 MOVK W8, 0xC4280000
	0x035D86C4 CMP W0, W8
	0x035D86C8 B.EQ 0x35D881C
	0x035D86CC MOVZ W8, 0xD0F2
	0x035D86D0 MOVK W8, 0xD2ED0000
	0x035D86D4 CMP W0, W8
	0x035D86D8 B.NE 0x35D893C
	0x035D86DC ADRP X8, 0xB60000
	0x035D86E0 LDR X8, [X8 + 0xF30]
	0x035D86E4 B 0x35D88E8
	0x035D86E8 MOVZ W8, 0x1C5E
	0x035D86EC MOVK W8, 0x14B00000
	0x035D86F0 CMP W0, W8
	0x035D86F4 B.EQ 0x35D8828
	0x035D86F8 MOVZ W8, 0xE55B
	0x035D86FC MOVK W8, 0x328E0000
	0x035D8700 CMP W0, W8
	0x035D8704 B.EQ 0x35D8850
	0x035D8708 MOVZ W8, 0x3EE0
	0x035D870C MOVK W8, 0x34300000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xE09000
	014 Move W8, [X22+561]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {72}
	022 Move X0, 0xB61000
	023 Move X0, [X0+3568]
	024 Call 0x1C17CF4
	025 Move X0, 0xB1C000
	026 Move X0, [X0+3768]
	027 Call 0x1C17CF4
	028 Move X0, 0xB61000
	029 Move X0, [X0+3576]
	030 Call 0x1C17CF4
	031 Move X0, 0xB1C000
	032 Move X0, [X0+2760]
	033 Call 0x1C17CF4
	034 Move X0, 0xB61000
	035 Move X0, [X0+3240]
	036 Call 0x1C17CF4
	037 Move X0, 0xB61000
	038 Move X0, [X0+3584]
	039 Call 0x1C17CF4
	040 Move X0, 0xB61000
	041 Move X0, [X0+3368]
	042 Call 0x1C17CF4
	043 Move X0, 0xB61000
	044 Move X0, [X0+3592]
	045 Call 0x1C17CF4
	046 Move X0, 0xB20000
	047 Move X0, [X0+2344]
	048 Call 0x1C17CF4
	049 Move X0, 0xB27000
	050 Move X0, [X0+1752]
	051 Call 0x1C17CF4
	052 Move X0, 0xB1C000
	053 Move X0, [X0+2104]
	054 Call 0x1C17CF4
	055 Move X0, 0xB1E000
	056 Move X0, [X0+416]
	057 Call 0x1C17CF4
	058 Move X0, 0xB22000
	059 Move X0, [X0+872]
	060 Call 0x1C17CF4
	061 Move X0, 0xB27000
	062 Move X0, [X0+784]
	063 Call 0x1C17CF4
	064 Move X0, 0xB61000
	065 Move X0, [X0+3384]
	066 Call 0x1C17CF4
	067 Move X0, 0xB1C000
	068 Move X0, [X0+2440]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X22+561], W8
	072 Compare X20, 0
	073 JumpIfEqual {352}
	074 Move X8, 0xB1C000
	075 Move X8, [X8+2440]
	076 Move X0, X20
	077 Move X2, X31
	078 Move X1, [X8]
	079 Call StringBuilder.AppendLine, X0, X1
	080 Compare X21, 0
	081 JumpIfEqual {352}
	082 Move X8, [X21]
	083 Move X27, 0xB61000
	084 Move X24, 0xB61000
	085 Move X23, 0xB61000
	086 Move X9, [X8+744]
	087 Move X1, [X8+752]
	088 Move X27, [X27+3240]
	089 Move X24, [X24+3384]
	090 Move X23, [X23+3592]
	091 Move X0, X21
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, [X27]
	094 Move X22, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X0, X22
	101 Call TypeScriptInterfaceGenerator.TypeNameToTS, X0
	102 Move X8, [X24]
	103 Move X2, [X23]
	104 Move X1, X0
	105 Move X3, X31
	106 Move X0, X8
	107 Call String.Concat, X0, X1, X2
	108 Move X1, X0
	109 Move X0, X20
	110 Move X2, X31
	111 Call StringBuilder.AppendLine, X0, X1
	112 Move X8, [X21]
	113 Move W1, 22
	114 Move X0, X21
	115 Move X9, [X8+2024]
	116 Move X2, [X8+2032]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X0, 0
	119 JumpIfEqual {352}
	120 Move W8, [X0+24]
	121 Move X28, 0xB1E000
	122 Move X28, [X28+416]
	123 Move X22, X0
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X26, 0xB20000
	126 Move X26, [X26+2344]
	127 Move W25, W31
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Add X8, X22, W25
	130 Move X23, [X8+32]
	131 Compare X23, 0
	132 JumpIfEqual {352}
	133 Move X8, [X23]
	134 Move W2, 1
	135 Move X0, X23
	136 Move X1, X19
	137 Move X9, [X8+520]
	138 Move X3, [X8+528]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare X0, 0
	141 JumpIfEqual {352}
	142 Move X8, [X0+24]
	143 Compare X8, 0
	144 JumpIfEqual {176}
	145 Move X8, [X23]
	146 Move X0, X23
	147 Move X9, [X8+424]
	148 Move X1, [X8+432]
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X8, [X23]
	151 Move X24, X0
	152 Move X0, X23
	153 Move X9, [X8+584]
	154 Move X1, [X8+592]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, [X27]
	157 Move X23, X0
	158 Move W9, [X8+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {163}
	161 Move X0, X8
	162 Call 0x1C17DFC
	163 Move X0, X23
	164 Call TypeScriptInterfaceGenerator.TypeNameFromNonPolymer, X0
	165 Move X8, [X28]
	166 Move X2, [X26]
	167 Move X3, X0
	168 Move X1, X24
	169 Move X0, X8
	170 Move X4, X31
	171 Call String.Concat, X0, X1, X2, X3
	172 Move X1, X0
	173 Move X0, X20
	174 Move X2, X31
	175 Call StringBuilder.AppendLine, X0, X1
	176 Move W8, [X22+24]
	177 Add W25, W25, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, [X21]
	180 Move W1, 22
	181 Move X0, X21
	182 Move X9, [X8+1880]
	183 Move X2, [X8+1888]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Compare X0, 0
	186 JumpIfEqual {352}
	187 Move W8, [X0+24]
	188 Move X21, X0
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X27, 0xB61000
	191 Move X26, 0xB1C000
	192 Move X27, [X27+3368]
	193 Move X26, [X26+2104]
	194 Move W29, W31
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Add X8, X21, W29
	197 Move X22, [X8+32]
	198 Compare X22, 0
	199 JumpIfEqual {352}
	200 Move X8, [X22]
	201 Move W2, 1
	202 Move X0, X22
	203 Move X1, X19
	204 Move X9, [X8+520]
	205 Move X3, [X8+528]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Compare X0, 0
	208 JumpIfEqual {352}
	209 Move X8, [X0+24]
	210 Compare X8, 0
	211 JumpIfEqual {329}
	212 Move X8, [X22]
	213 Move X0, X22
	214 Move X9, [X8+584]
	215 Move X1, [X8+592]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X8, [X27]
	218 Move X23, X0
	219 Move W9, [X8+224]
	220 Compare W9, 0
	221 JumpIfNotEqual {225}
	222 Move X0, X8
	223 Call 0x1C17DFC
	224 Move X8, [X27]
	225 Move X9, [X8+184]
	226 Move X24, [X26]
	227 Move X25, [X9+32]
	228 Compare X25, 0
	229 JumpIfNotEqual {254}
	230 Move W9, [X8+224]
	231 Compare W9, 0
	232 JumpIfNotEqual {236}
	233 Move X0, X8
	234 Call 0x1C17DFC
	235 Move X8, [X27]
	236 Move X8, [X8+184]
	237 Move X26, [X8]
	238 Move X8, 0xB61000
	239 Move X8, [X8+3576]
	240 Move X0, [X8]
	241 Call 0x1C17F10
	242 Move X8, 0xB61000
	243 Move X8, [X8+3584]
	244 Move X1, X26
	245 Move X3, X31
	246 Move X25, X0
	247 Move X2, [X8]
	248 Call Func`2<Object, Object>..ctor, X0, X1, X2
	249 Move X8, [X27]
	250 Move X26, 0xB1C000
	251 Move X8, [X8+184]
	252 Move [X8+32], X25
	253 Move X26, [X26+2104]
	254 Move X8, 0xB61000
	255 Move X8, [X8+3568]
	256 Move X0, X23
	257 Move X1, X25
	258 Move X2, [X8]
	259 Call Enumerable.Select, X0, X1
	260 Move X8, 0xB1C000
	261 Move X8, [X8+3768]
	262 Move X1, [X8]
	263 Call Enumerable.ToArray, X0
	264 Move X1, X0
	265 Move X0, X24
	266 Move X2, X31
	267 Call String.Join, X0, X1
	268 Move X8, 0xB1C000
	269 Move X8, [X8+2760]
	270 Move X24, X0
	271 Move W1, 6
	272 Move X8, [X8]
	273 Move X0, X8
	274 Call 0x1C17D6C
	275 Compare X0, 0
	276 JumpIfEqual {352}
	277 Move W8, [X0+24]
	278 Move X23, X0
	279 Compare W8, 0
	280 JumpIfEqual {351}
	281 Move X8, [X28]
	282 Move X0, X22
	283 Move [X23+32], X8
	284 Move X8, [X22]
	285 Move X9, [X8+424]
	286 Move X1, [X8+432]
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Move W8, [X23+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move [X23+40], X0
	292 Move X9, 0xB27000
	293 Move X9, [X9+784]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X9, [X9]
	296 Move [X23+48], X9
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move [X23+56], X24
	299 Move X8, 0xB22000
	300 Move X8, [X8+872]
	301 Move X0, X22
	302 Move X8, [X8]
	303 Move [X23+64], X8
	304 Move X8, [X22]
	305 Move X9, [X8+952]
	306 Move X1, [X8+960]
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Move X8, 0xB61000
	309 Move X8, [X8+3240]
	310 Move X22, X0
	311 Move X8, [X8]
	312 Move W9, [X8+224]
	313 Compare W9, 0
	314 JumpIfNotEqual {317}
	315 Move X0, X8
	316 Call 0x1C17DFC
	317 Move X0, X22
	318 Call TypeScriptInterfaceGenerator.TypeNameFromNonPolymer, X0
	319 Move W8, [X23+24]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move [X23+72], X0
	322 Move X0, X23
	323 Move X1, X31
	324 Call String.Concat, X0
	325 Move X1, X0
	326 Move X0, X20
	327 Move X2, X31
	328 Call StringBuilder.AppendLine, X0, X1
	329 Move W8, [X21+24]
	330 Add W29, W29, 1
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X8, 0xB27000
	333 Move X8, [X8+1752]
	334 Move X0, X20
	335 Move X20, [X31+80]
	336 Move X19, [X31+88]
	337 Move X22, [X31+64]
	338 Move X21, [X31+72]
	339 Move X1, [X8]
	340 Move X24, [X31+48]
	341 Move X23, [X31+56]
	342 Move X26, [X31+32]
	343 Move X25, [X31+40]
	344 Move X28, [X31+16]
	345 Move X27, [X31+24]
	346 Move X2, X31
	347 Move X29, [X31+96]
	348 Move X30, [X31+104]
	349 Call StringBuilder.AppendLine, X0, X1
	350 Return 
	351 Call 0x1C17F28
	352 Call 0x1C17F20

Method: SimpleJSON.JSONNode ReplaceNullsWithEmptyString(SimpleJSON.JSONNode node)

Disassembly:
	0x035D9C04 ADRP X0, 0xB22000
	0x035D9C08 LDR X0, [X0 + 0x578]
	0x035D9C0C BL 0x1C16D08
	0x035D9C10 BL 0x1C16F10
	0x035D9C14 MOV X20, X0
	0x035D9C18 ADRP X0, 0xB44000
	0x035D9C1C LDR X0, [X0 + 0x70]
	0x035D9C20 B 0x35D9C54
	0x035D9C24 BL 0x1C16F20
	0x035D9C28 ADRP X0, 0xB4A000
	0x035D9C2C LDR X0, [X0 + 0x1C8]
	0x035D9C30 BL 0x1C16D08
	0x035D9C34 MOV X19, X0
	0x035D9C38 ADRP X0, 0xB22000
	0x035D9C3C LDR X0, [X0 + 0x578]
	0x035D9C40 BL 0x1C16D08
	0x035D9C44 BL 0x1C16F10
	0x035D9C48 MOV X20, X0
	0x035D9C4C ADRP X0, 0xB4F000
	0x035D9C50 LDR X0, [X0 + 0xB40]
	0x035D9C54 BL 0x1C16D08
	0x035D9C58 MOV X2, X0
	0x035D9C5C MOV X0, X20
	0x035D9C60 MOV X1, X19
	0x035D9C64 MOV X3, X31
	0x035D9C68 BL 0x330E16C
	0x035D9C6C ADRP X0, 0xB60000
	0x035D9C70 LDR X0, [X0 + 0x28]
	0x035D9C74 BL 0x1C16D08
	0x035D9C78 MOV X1, X0
	0x035D9C7C MOV X0, X20
	0x035D9C80 BL 0x1C16DEC
	0x035D9C84 STR X30, [X31 - 0x10]!
	0x035D9C88 LDR X0, [X0 + 0x48]
	0x035D9C8C CBZ X0, 0x35D9CA4
	0x035D9C90 LDR X8, [X0]
	0x035D9C94 LDR X2, [X8 + 0x278]
	0x035D9C98 LDR X1, [X8 + 0x280]
	0x035D9C9C LDR X30, [X31], #0x10
	0x035D9CA0 BR X2
	0x035D9CA4 BL 0x1C16F20
	0x035D9CA8 STP X30, X21, [X31 - 0x20]!
	0x035D9CAC STP X20, X19, [X31 + 0x10]
	0x035D9CB0 CBZ X1, 0x35D9D10
	0x035D9CB4 LDR W8, [X1 + 0x18]
	0x035D9CB8 MOV X19, X2
	0x035D9CBC MOV X20, X1
	0x035D9CC0 MOV X2, X31
	0x035D9CC4 UBFM W1, W8, 0x1D, 0x1C
	0x035D9CC8 MOV X21, X0
	0x035D9CCC BL 0x3260DF0
	0x035D9CD0 TBZ X0, 0x0, 0x35D9D58
	0x035D9CD4 CBZ X19, 0x35D9CE8
	0x035D9CD8 LDR W8, [X21 + 0x10]
	0x035D9CDC LDR W9, [X19 + 0x18]
	0x035D9CE0 CMP W8, W9, LSL
	0x035D9CE4 B.NE 0x35D9D8C
	0x035D9CE8 LDR X0, [X21 + 0x48]
	0x035D9CEC CBZ X0, 0x35D9D88
	0x035D9CF0 LDR X8, [X0]
	0x035D9CF4 MOV X1, X20
	0x035D9CF8 MOV X2, X19
	0x035D9CFC LDP X20, X19, [X31 + 0x10]
	0x035D9D00 LDR X4, [X8 + 0x288]
	0x035D9D04 LDR X3, [X8 + 0x290]
	0x035D9D08 LDP X30, X21, [X31], #0x20
	0x035D9D0C BR X4
	0x035D9D10 ADRP X0, 0xB1F000
	0x035D9D14 LDR X0, [X0 + 0x528]
	0x035D9D18 BL 0x1C16D08
	0x035D9D1C BL 0x1C16F10
	0x035D9D20 MOV X19, X0
	0x035D9D24 ADRP X0, 0xB44000
	0x035D9D28 LDR X0, [X0 + 0x70]
	0x035D9D2C BL 0x1C16D08
	0x035D9D30 MOV X1, X0
	0x035D9D34 MOV X0, X19
	0x035D9D38 MOV X2, X31
	0x035D9D3C BL 0x330E100
	0x035D9D40 ADRP X0, 0xB60000
	0x035D9D44 LDR X0, [X0 + 0x30]
	0x035D9D48 BL 0x1C16D08
	0x035D9D4C MOV X1, X0
	0x035D9D50 MOV X0, X19
	0x035D9D54 BL 0x1C16DEC
	0x035D9D58 ADRP X0, 0xB49000
	0x035D9D5C LDR X0, [X0 + 0xF08]
	0x035D9D60 BL 0x1C16D08
	0x035D9D64 MOV X19, X0
	0x035D9D68 ADRP X0, 0xB22000
	0x035D9D6C LDR X0, [X0 + 0x578]
	0x035D9D70 BL 0x1C16D08
	0x035D9D74 BL 0x1C16F10
	0x035D9D78 MOV X20, X0
	0x035D9D7C ADRP X0, 0xB44000
	0x035D9D80 LDR X0, [X0 + 0x70]
	0x035D9D84 B 0x35D9DB8
	0x035D9D88 BL 0x1C16F20
	0x035D9D8C ADRP X0, 0xB4A000
	0x035D9D90 LDR X0, [X0 + 0x1C8]
	0x035D9D94 BL 0x1C16D08
	0x035D9D98 MOV X19, X0
	0x035D9D9C ADRP X0, 0xB22000
	0x035D9DA0 LDR X0, [X0 + 0x578]
	0x035D9DA4 BL 0x1C16D08
	0x035D9DA8 BL 0x1C16F10
	0x035D9DAC MOV X20, X0
	0x035D9DB0 ADRP X0, 0xB4F000
	0x035D9DB4 LDR X0, [X0 + 0xB40]
	0x035D9DB8 BL 0x1C16D08
	0x035D9DBC MOV X2, X0
	0x035D9DC0 MOV X0, X20
	0x035D9DC4 MOV X1, X19
	0x035D9DC8 MOV X3, X31
	0x035D9DCC BL 0x330E16C
	0x035D9DD0 ADRP X0, 0xB60000
	0x035D9DD4 LDR X0, [X0 + 0x30]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+168], X25
	004 Move [X31+176], X24
	005 Move [X31+184], X23
	006 Move [X31+192], X22
	007 Move [X31+200], X21
	008 Move [X31+208], X20
	009 Move [X31+216], X19
	010 Move X19, 0xE08000
	011 Move W8, [X19+562]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xB60000
	018 Move X0, [X0+3912]
	019 Call 0x1C17CF4
	020 Move X0, 0xB1C000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move X0, 0xB45000
	024 Move X0, [X0+832]
	025 Call 0x1C17CF4
	026 Move X0, 0xB45000
	027 Move X0, [X0+840]
	028 Call 0x1C17CF4
	029 Move X0, 0xB60000
	030 Move X0, [X0+3240]
	031 Call 0x1C17CF4
	032 Move X0, 0xB1B000
	033 Move X0, [X0+2440]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+562], W8
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+144], X31
	039 Move [X31+112], V0
	040 Move [X31+120], V0
	041 Move [X31+80], V0
	042 Move [X31+88], V0
	043 Compare X20, 0
	044 JumpIfEqual {144}
	045 Move X8, [X20]
	046 Move X0, X20
	047 Move X9, [X8+728]
	048 Move X1, [X8+736]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X20]
	051 Move X19, X0
	052 Move X0, X20
	053 Move X9, [X8+824]
	054 Move X1, [X8+832]
	055 Add X8, X31, 8
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Add X0, X31, 80
	058 Add X1, X31, 8
	059 Move W2, 72
	060 Call 0x3EB2AC0
	061 Add X0, X31, 80
	062 Move X1, X31
	063 Call Enumerator.MoveNext, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {133}
	068 Move X22, 0xB1C000
	069 Move X23, 0xB1B000
	070 Move X24, 0xB60000
	071 Move X25, 0xB60000
	072 Move X22, [X22+1120]
	073 Move X23, [X23+2440]
	074 Move X24, [X24+3912]
	075 Move X25, [X25+3240]
	076 Add X0, X31, 80
	077 Move X1, X31
	078 Call Enumerator.get_Current, X0
	079 Compare X1, 0
	080 JumpIfEqual {144}
	081 Move X8, [X1]
	082 Move X21, X1
	083 Move X20, X0
	084 Move X0, X21
	085 Move X9, [X8+552]
	086 Move X1, [X8+560]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {102}
	092 Move X0, [X22]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, [X23]
	098 Move X1, X31
	099 Call JSONNode.op_Implicit, X0
	100 Compare X19, 0
	101 JumpIfNotEqual {119}
	102 Move X8, [X21]
	103 Move X0, X21
	104 Move X9, [X8+744]
	105 Move X1, [X8+752]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X1, [X24]
	108 Call Enumerable.Count, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, [X25]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X21
	116 Call TypeScriptInterfaceGenerator.ReplaceNullsWithEmptyString, X0
	117 Compare X19, 0
	118 JumpIfEqual {144}
	119 Move X8, [X19]
	120 Move X2, X0
	121 Move X0, X19
	122 Move X1, X20
	123 Move X9, [X8+440]
	124 Move X3, [X8+448]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Add X0, X31, 80
	127 Move X1, X31
	128 Call Enumerator.MoveNext, X0
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {76}
	133 Move X0, X19
	134 Move X20, [X31+208]
	135 Move X19, [X31+216]
	136 Move X22, [X31+192]
	137 Move X21, [X31+200]
	138 Move X24, [X31+176]
	139 Move X23, [X31+184]
	140 Move X30, [X31+160]
	141 Move X25, [X31+168]
	142 Add X31, X31, 224
	143 Return X0
	144 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x035D9DD8 BL 0x1C16D08
	0x035D9DDC MOV X1, X0
	0x035D9DE0 MOV X0, X20
	0x035D9DE4 BL 0x1C16DEC
	0x035D9DE8 STP X30, X21, [X31 - 0x20]!
	0x035D9DEC STP X20, X19, [X31 + 0x10]
	0x035D9DF0 ADRP X21, 0xE07000
	0x035D9DF4 LDRB W8, [X21 + 0x24C]
	0x035D9DF8 MOV W20, W1
	0x035D9DFC MOV X19, X0
	0x035D9E00 TBNZ X8, 0x0, 0x35D9E18
	0x035D9E04 ADRP X0, 0xB1A000
	0x035D9E08 LDR X0, [X0 + 0xE00]
	0x035D9E0C BL 0x1C16CF4
	0x035D9E10 MOVZ W8, 0x1
	0x035D9E14 STRB W8, [X21 + 0x24C]
	0x035D9E18 TBZ X20, 0x0, 0x35D9E84
	0x035D9E1C LDR X21, [X19 + 0x48]
	0x035D9E20 CBZ X21, 0x35D9E9C
	0x035D9E24 ADRP X10, 0xB1A000
	0x035D9E28 LDR X8, [X21]
	0x035D9E2C LDR X10, [X10 + 0xE00]
	0x035D9E30 LDRH W9, [X8 + 0x12E]
	0x035D9E34 LDR X1, [X10]
	0x035D9E38 CBZ X9, 0x35D9E5C
	0x035D9E3C LDR X10, [X8 + 0xB0]
	0x035D9E40 ADD X10, X10, 0x8
	0x035D9E44 LDUR X11, [X10 - 0x8]
	0x035D9E48 CMP X11, X1
	0x035D9E4C B.EQ 0x35D9E6C
	0x035D9E50 SUBS X9, X9, 0x1
	0x035D9E54 ADD X10, X10, 0x10
	0x035D9E58 B.NE 0x35D9E44
	0x035D9E5C MOV X0, X21
	0x035D9E60 MOV W2, W31
	0x035D9E64 BL 0x1C5C788
	0x035D9E68 B 0x35D9E78
	0x035D9E6C LDRSW X9, [X10]
	0x035D9E70 ADD X8, X8, X9, 0x4, LSL
	0x035D9E74 ADD X0, X8, 0x138
	0x035D9E78 LDP X8, X1, [X0]
	0x035D9E7C MOV X0, X21
	0x035D9E80 BLR X8
	0x035D9E84 AND W1, W20, 0x1
	0x035D9E88 MOV X0, X19
	0x035D9E8C LDP X20, X19, [X31 + 0x10]
	0x035D9E90 MOV X2, X31
	0x035D9E94 LDP X30, X21, [X31], #0x20
	0x035D9E98 B 0x32608D4
	0x035D9E9C BL 0x1C16F20
	0x035D9EA0 CMP W1, 0x1
	0x035D9EA4 MOV X21, X0
	0x035D9EA8 B.NE 0x35D9EDC
	0x035D9EAC MOV X0, X21
	0x035D9EB0 BL 0x3EB1AD0
	0x035D9EB4 LDR X20, [X0]
	0x035D9EB8 BL 0x3EB1AE0
	0x035D9EBC MOVZ W1, 0x1
	0x035D9EC0 MOV X0, X19
	0x035D9EC4 MOV X2, X31
	0x035D9EC8 BL 0x32608D4
	0x035D9ECC CBNZ X20, 0x35D9EE4
	0x035D9ED0 LDP X20, X19, [X31 + 0x10]
	0x035D9ED4 LDP X30, X21, [X31], #0x20
	0x035D9ED8 RET
	0x035D9EDC MOV X20, X31
	0x035D9EE0 B 0x35D9EF0
	0x035D9EE4 MOV X0, X20
	0x035D9EE8 BL 0x1C16F18
	0x035D9EEC MOV X21, X0
	0x035D9EF0 MOVZ W1, 0x1
	0x035D9EF4 MOV X0, X19
	0x035D9EF8 MOV X2, X31
	0x035D9EFC BL 0x32608D4
	0x035D9F00 CBNZ X20, 0x35D9F0C
	0x035D9F04 MOV X0, X21
	0x035D9F08 BL 0x1D2C690
	0x035D9F0C MOV X0, X20
	0x035D9F10 BL 0x1C16F18
	0x035D9F14 BL 0x1990590
	0x035D9F18 STR X30, [X31 - 0x10]!
	0x035D9F1C LDR X0, [X0 + 0x48]
	0x035D9F20 CBZ X0, 0x35D9F38
	0x035D9F24 LDR X8, [X0]
	0x035D9F28 LDR X2, [X8 + 0x2C8]
	0x035D9F2C LDR X1, [X8 + 0x2D0]
	0x035D9F30 LDR X30, [X31], #0x10
	0x035D9F34 BR X2
	0x035D9F38 BL 0x1C16F20
	0x035D9F3C STR X30, [X31 - 0x10]!
	0x035D9F40 LDR X0, [X0 + 0x48]
	0x035D9F44 CBZ X0, 0x35D9F5C
	0x035D9F48 LDR X8, [X0]
	0x035D9F4C LDR X2, [X8 + 0x2B8]
	0x035D9F50 LDR X1, [X8 + 0x2C0]
	0x035D9F54 LDR X30, [X31], #0x10
	0x035D9F58 BR X2
	0x035D9F5C BL 0x1C16F20
	0x035D9F60 STP X30, X21, [X31 - 0x20]!
	0x035D9F64 STP X20, X19, [X31 + 0x10]
	0x035D9F68 ADRP X20, 0xE07000
	0x035D9F6C ADRP X21, 0xB27000
	0x035D9F70 LDRB W8, [X20 + 0x24D]
	0x035D9F74 LDR X21, [X21 + 0xDF0]
	0x035D9F78 MOV X19, X0
	0x035D9F7C TBNZ X8, 0x0, 0x35D9F94
	0x035D9F80 ADRP X0, 0xB27000
	0x035D9F84 LDR X0, [X0 + 0xDF0]
	0x035D9F88 BL 0x1C16CF4
	0x035D9F8C MOVZ W8, 0x1
	0x035D9F90 STRB W8, [X20 + 0x24D]
	0x035D9F94 LDR X0, [X21]
	0x035D9F98 LDR W8, [X0 + 0xE0]
	0x035D9F9C CBNZ W8, 0x35D9FA4
	0x035D9FA0 BL 0x1C16DFC
	0x035D9FA4 MOV X0, X19
	0x035D9FA8 MOV X1, X31
	0x035D9FAC BL 0x3251CE4
	0x035D9FB0 MOVZ W8, 0x8
	0x035D9FB4 STR W8, [X19 + 0x14]
	0x035D9FB8 LDP X20, X19, [X31 + 0x10]
	0x035D9FBC LDP X30, X21, [X31], #0x20
	0x035D9FC0 RET
	0x035D9FC4 STP X30, X19, [X31 - 0x10]!
	0x035D9FC8 LDR W8, [X0 + 0x10]
	0x035D9FCC MOV X19, X0
	0x035D9FD0 MOV X1, X31
	0x035D9FD4 SBFM W0, W8, 0x3, 0x1F
	0x035D9FD8 BL 0x3217C84
	0x035D9FDC STR X0, [X19 + 0x18]
	0x035D9FE0 LDP X30, X19, [X31], #0x10
	0x035D9FE4 RET
	0x035D9FE8 STP X30, X19, [X31 - 0x10]!
	0x035D9FEC LDR W8, [X0 + 0x38]
	0x035D9FF0 MOV X19, X0
	0x035D9FF4 MOV X1, X31
	0x035D9FF8 SBFM W0, W8, 0x3, 0x1F
	0x035D9FFC BL 0x3217C14
	0x035DA000 STR X0, [X19 + 0x20]
	0x035DA004 LDP X30, X19, [X31], #0x10
	0x035DA008 RET
	0x035DA00C STR X30, [X31 - 0x30]!
	0x035DA010 STP X22, X21, [X31 + 0x10]
	0x035DA014 STP X20, X19, [X31 + 0x20]
	0x035DA018 ADRP X22, 0xE06000
	0x035DA01C LDRB W8, [X22 + 0x24E]
	0x035DA020 MOV X19, X2
	0x035DA024 MOV X20, X1
	0x035DA028 MOV X21, X0
	0x035DA02C TBNZ X8, 0x0, 0x35DA044
	0x035DA030 ADRP X0, 0xB5F000
	0x035DA034 LDR X0, [X0 + 0x38]
	0x035DA038 BL 0x1C16CF4
	0x035DA03C MOVZ W8, 0x1
	0x035DA040 STRB W8, [X22 + 0x24E]
	0x035DA044 LDR X8, [X21]
	0x035DA048 MOV X0, X21
	0x035DA04C LDR X9, [X8 + 0x238]
	0x035DA050 LDR X1, [X8 + 0x240]
	0x035DA054 BLR X9
	0x035DA058 CMP W0, 0x4
	0x035DA05C B.NE 0x35DA078
	0x035DA060 LDR X8, [X21]
	0x035DA064 MOV X0, X21
	0x035DA068 LDP X9, X1, [X8 + 0x1B8]
	0x035DA06C BLR X9

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0xE08000
	014 Move W8, [X19+563]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {63}
	019 Move X0, 0xB25000
	020 Move X0, [X0+2688]
	021 Call 0x1C17CF4
	022 Move X0, 0xB25000
	023 Move X0, [X0+2320]
	024 Call 0x1C17CF4
	025 Move X0, 0xB25000
	026 Move X0, [X0+2328]
	027 Call 0x1C17CF4
	028 Move X0, 0xB60000
	029 Move X0, [X0+1640]
	030 Call 0x1C17CF4
	031 Move X0, 0xB60000
	032 Move X0, [X0+3920]
	033 Call 0x1C17CF4
	034 Move X0, 0xB44000
	035 Move X0, [X0+2856]
	036 Call 0x1C17CF4
	037 Move X0, 0xB60000
	038 Move X0, [X0+3928]
	039 Call 0x1C17CF4
	040 Move X0, 0xB60000
	041 Move X0, [X0+3936]
	042 Call 0x1C17CF4
	043 Move X0, 0xB60000
	044 Move X0, [X0+1424]
	045 Call 0x1C17CF4
	046 Move X0, 0xB60000
	047 Move X0, [X0+3944]
	048 Call 0x1C17CF4
	049 Move X0, 0xB60000
	050 Move X0, [X0+3952]
	051 Call 0x1C17CF4
	052 Move X0, 0xB60000
	053 Move X0, [X0+3960]
	054 Call 0x1C17CF4
	055 Move X0, 0xB60000
	056 Move X0, [X0+3240]
	057 Call 0x1C17CF4
	058 Move X0, 0xB1B000
	059 Move X0, [X0+1728]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X19+563], W8
	063 Move X0, X31
	064 Call Environment.get_NewLine
	065 Compare X0, 0
	066 JumpIfEqual {184}
	067 Move X20, 0xB60000
	068 Move X20, [X20+3240]
	069 Move X9, 0xB60000
	070 Move X10, 0xB1B000
	071 Move X29, 0xB60000
	072 Move X8, [X20]
	073 Move X9, [X9+1640]
	074 Move X10, [X10+1728]
	075 Move W11, [X0+16]
	076 Move X8, [X8+184]
	077 Move X28, 0xB60000
	078 Move X27, 0xB60000
	079 Move X29, [X29+3960]
	080 Move X28, [X28+3952]
	081 Move X27, [X27+3944]
	082 Move [X8], W11
	083 Move X0, [X10]
	084 Move X26, 0xB60000
	085 Move X25, 0xB60000
	086 Move X24, 0xB60000
	087 Move X23, 0xB25000
	088 Move X22, 0xB25000
	089 Move X21, 0xB60000
	090 Move X26, [X26+1424]
	091 Move X25, [X25+3936]
	092 Move X24, [X24+3928]
	093 Move W8, [X0+224]
	094 Move X19, [X9]
	095 Move X23, [X23+2328]
	096 Move X22, [X22+2320]
	097 Move X21, [X21+3920]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X19
	102 Move X1, X31
	103 Call Type.GetTypeFromHandle, X0
	104 Move X8, [X20]
	105 Move X1, X31
	106 Move X8, [X8+184]
	107 Move [X8+8], X0
	108 Move X0, [X29]
	109 Call Type.GetTypeFromHandle, X0
	110 Move X8, [X20]
	111 Move X1, X31
	112 Move X8, [X8+184]
	113 Move [X8+16], X0
	114 Move X0, [X28]
	115 Call Type.GetTypeFromHandle, X0
	116 Move X8, [X20]
	117 Move X1, X31
	118 Move X8, [X8+184]
	119 Move [X8+24], X0
	120 Move X0, [X27]
	121 Call Type.GetTypeFromHandle, X0
	122 Move X8, [X20]
	123 Move X1, X31
	124 Move X8, [X8+184]
	125 Move [X8+32], X0
	126 Move X0, [X26]
	127 Call Type.GetTypeFromHandle, X0
	128 Move X8, [X20]
	129 Move X1, X31
	130 Move X8, [X8+184]
	131 Move [X8+40], X0
	132 Move X0, [X25]
	133 Call Type.GetTypeFromHandle, X0
	134 Move X8, [X20]
	135 Move X1, X31
	136 Move X8, [X8+184]
	137 Move [X8+48], X0
	138 Move X0, [X24]
	139 Call Type.GetTypeFromHandle, X0
	140 Move X8, [X20]
	141 Move X8, [X8+184]
	142 Move [X8+56], X0
	143 Move X0, [X23]
	144 Call 0x1C17F10
	145 Move X1, [X22]
	146 Move X19, X0
	147 Call HashSet`1<Object>..ctor, X0
	148 Move X0, [X21]
	149 Move X1, X31
	150 Call Type.GetTypeFromHandle, X0
	151 Compare X19, 0
	152 JumpIfEqual {184}
	153 Move X21, 0xB24000
	154 Move X21, [X21+2688]
	155 Move X22, 0xB43000
	156 Move X1, X0
	157 Move X0, X19
	158 Move X2, [X21]
	159 Move X22, [X22+2856]
	160 Call HashSet`1<Object>.Add, X0, X1
	161 Move X0, [X22]
	162 Move X1, X31
	163 Call Type.GetTypeFromHandle, X0
	164 Move X2, [X21]
	165 Move X1, X0
	166 Move X0, X19
	167 Call HashSet`1<Object>.Add, X0, X1
	168 Move X8, [X20]
	169 Move X22, [X31+64]
	170 Move X21, [X31+72]
	171 Move X24, [X31+48]
	172 Move X23, [X31+56]
	173 Move X26, [X31+32]
	174 Move X25, [X31+40]
	175 Move X8, [X8+184]
	176 Move X28, [X31+16]
	177 Move X27, [X31+24]
	178 Move [X8+64], X19
	179 Move X20, [X31+80]
	180 Move X19, [X31+88]
	181 Move X29, [X31+96]
	182 Move X30, [X31+104]
	183 Return 
	184 Call 0x1C17F20

