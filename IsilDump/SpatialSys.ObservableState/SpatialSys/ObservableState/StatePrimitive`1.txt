Type: SpatialSys.ObservableState.StatePrimitive`1

Method: System.Int32 get_childCount()

Disassembly:
	0x02652824 ADD X31, X31, 0x40
	0x02652828 RET

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<SpatialSys.ObservableState.IStateObject> get_childStateObjects()

Disassembly:
	0x0265282C LDR X22, [X19 + 0x30]
	0x02652830 MOVZ W8, 0x1
	0x02652834 STRB W23, [X19 + 0x4C]
	0x02652838 STRB W8, [X19 + 0x20]
	0x0265283C CBZ X22, 0x2652940
	0x02652840 ADRP X10, 0x1ACB000
	0x02652844 LDR X8, [X22]
	0x02652848 LDR X10, [X10 + 0x318]
	0x0265284C LDRH W9, [X8 + 0x12E]
	0x02652850 LDR X1, [X10]
	0x02652854 CBZ X9, 0x2652878
	0x02652858 LDR X10, [X8 + 0xB0]
	0x0265285C ADD X10, X10, 0x8
	0x02652860 LDUR X11, [X10 - 0x8]
	0x02652864 CMP X11, X1
	0x02652868 B.EQ 0x2652888
	0x0265286C SUBS X9, X9, 0x1
	0x02652870 ADD X10, X10, 0x10
	0x02652874 B.NE 0x2652860
	0x02652878 MOV X0, X22
	0x0265287C MOV W2, W31
	0x02652880 BL 0x1C5C788
	0x02652884 B 0x2652894
	0x02652888 LDRSW X9, [X10]
	0x0265288C ADD X8, X8, X9, 0x4, LSL
	0x02652890 ADD X0, X8, 0x138
	0x02652894 LDP X8, X1, [X0]
	0x02652898 MOV X0, X22
	0x0265289C BLR X8
	0x026528A0 CBZ X0, 0x2652940
	0x026528A4 LDR X8, [X20 + 0x20]
	0x026528A8 LDR W20, [X19 + 0x48]
	0x026528AC MOV X22, X0
	0x026528B0 LDR X9, [X8 + 0xC0]
	0x026528B4 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1D89000
	005 Move X20, 0x1ACC000
	006 Move W8, [X19+341]
	007 Move X20, [X20+976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x1ACC000
	013 Move X0, [X0+976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+341], W8
	017 Move X19, [X20]
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X0, [X8+16]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X19+56]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X0, [X8]
	047 Move X30, [X31+32]
	048 Return X0

Method: System.Boolean get_isLeafObject()

Disassembly:
	0x026528B8 LDR X23, [X9 + 0xD8]
	0x026528BC LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_isIndexedCollection()

Disassembly:
	0x026528C0 LDR X1, [X23 + 0x20]
	0x026528C4 LDRH W2, [X23 + 0x50]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: T get_value()

Disassembly:
	0x026528C8 CBZ X9, 0x26528EC
	0x026528CC LDR X10, [X8 + 0xB0]

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Void set_value(T value)

Disassembly:
	0x026528D0 ADD X10, X10, 0x8
	0x026528D4 LDUR X11, [X10 - 0x8]
	0x026528D8 CMP X11, X1
	0x026528DC B.EQ 0x26528F8
	0x026528E0 SUBS X9, X9, 0x1
	0x026528E4 ADD X10, X10, 0x10
	0x026528E8 B.NE 0x26528D4
	0x026528EC MOV X0, X22
	0x026528F0 BL 0x1C5C788
	0x026528F4 B 0x2652908
	0x026528F8 LDR W9, [X10]
	0x026528FC ADD W9, W9, W2
	0x02652900 ADD X8, X8, W9, 0x4, SXTW
	0x02652904 ADD X0, X8, 0x138
	0x02652908 LDR X0, [X0 + 0x8]
	0x0265290C MOV X1, X23
	0x02652910 BL 0x1C16DF8
	0x02652914 MOV X4, X0
	0x02652918 LDR X5, [X0 + 0x8]
	0x0265291C AND W2, W21, 0x1
	0x02652920 MOV X0, X22
	0x02652924 MOV X1, X19
	0x02652928 MOV W3, W20
	0x0265292C LDP X20, X19, [X31 + 0x30]
	0x02652930 LDP X22, X21, [X31 + 0x20]
	0x02652934 LDP X30, X23, [X31 + 0x10]
	0x02652938 ADD X31, X31, 0x40
	0x0265293C BR X5
	0x02652940 BL 0x1C16F20
	0x02652944 MOVZ W8, 0x8
	0x02652948 STRB W8, [X31 + 0xC]
	0x0265294C ADRP X0, 0x1ACB000
	0x02652950 LDR X0, [X0 + 0x328]
	0x02652954 BL 0x1C16D08
	0x02652958 ADD X1, X31, 0xC
	0x0265295C BL 0x1C16E04
	0x02652960 LDR X8, [X20 + 0x20]
	0x02652964 MOV X22, X0
	0x02652968 ADRP X0, 0x1AA1000
	0x0265296C LDR X8, [X8 + 0xC0]
	0x02652970 LDR X21, [X8 + 0x40]
	0x02652974 LDR X0, [X0 + 0x6C0]
	0x02652978 BL 0x1C16D08
	0x0265297C BL 0x19903D0
	0x02652980 MOV X0, X21
	0x02652984 MOV X1, X31
	0x02652988 BL 0x338C698
	0x0265298C MOV X21, X0
	0x02652990 BL 0x19903C0
	0x02652994 LDR X8, [X21]
	0x02652998 MOV X0, X21
	0x0265299C LDR X9, [X8 + 0x2E8]
	0x026529A0 LDR X1, [X8 + 0x2F0]
	0x026529A4 BLR X9
	0x026529A8 MOV X21, X0
	0x026529AC ADRP X0, 0x1ACB000
	0x026529B0 LDR X0, [X0 + 0x5B0]
	0x026529B4 BL 0x1C16D08
	0x026529B8 MOV X1, X22
	0x026529BC MOV X2, X21
	0x026529C0 MOV X3, X31
	0x026529C4 BL 0x3227BD4
	0x026529C8 MOV X21, X0
	0x026529CC ADRP X0, 0x1AA1000
	0x026529D0 LDR X0, [X0 + 0x5B0]
	0x026529D4 BL 0x1C16D08
	0x026529D8 BL 0x1C16F10
	0x026529DC MOV X1, X21
	0x026529E0 MOV X2, X31
	0x026529E4 MOV X22, X0
	0x026529E8 BL 0x337DF1C
	0x026529EC MOV X0, X22
	0x026529F0 BL 0x19903C0
	0x026529F4 LDR X8, [X22]
	0x026529F8 MOV X0, X22
	0x026529FC LDP X9, X1, [X8 + 0x198]
	0x02652A00 BLR X9
	0x02652A04 MOV X21, X0
	0x02652A08 MOV X0, X19
	0x02652A0C BL 0x19903C0
	0x02652A10 LDR X19, [X19 + 0x18]
	0x02652A14 MOV X0, X21
	0x02652A18 BL 0x19903C0
	0x02652A1C ADRP X0, 0x1AA1000
	0x02652A20 LDR X0, [X0 + 0x818]
	0x02652A24 BL 0x1C16D08
	0x02652A28 MOV X23, X0
	0x02652A2C ADRP X0, 0x1ACB000
	0x02652A30 LDR X0, [X0 + 0x5B8]
	0x02652A34 BL 0x1C16D08
	0x02652A38 MOV X3, X0
	0x02652A3C MOVZ W0, 0x1
	0x02652A40 MOV X1, X23
	0x02652A44 MOV X2, X21
	0x02652A48 MOV X4, X19
	0x02652A4C BL 0x1990514
	0x02652A50 MOV X0, X22
	0x02652A54 B 0x2652AF0
	0x02652A58 ADRP X0, 0x1AA1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1D89000
	008 Move W8, [X22+342]
	009 Move X21, X2
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1ACC000
	017 Move X0, [X0+792]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+342], W8
	021 Move X8, [X20+80]
	022 Compare X8, 0
	023 JumpIfEqual {115}
	024 Move X8, [X8+32]
	025 Compare X8, 0
	026 JumpIfEqual {115}
	027 Move W1, [X20+76]
	028 Move X9, [X8+24]
	029 Move X0, [X8+64]
	030 Move X3, [X8+40]
	031 And W2, W19, 1
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {44}
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 
	044 Move X22, [X20+48]
	045 And W8, W19, 1
	046 Move [X20+76], W8
	047 Move W8, 1
	048 Move [X20+32], W8
	049 Compare X22, 0
	050 JumpIfEqual {115}
	051 Move X10, 0x1ACC000
	052 Move X8, [X22]
	053 Move X10, [X10+792]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X22
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X22
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X0, 0
	075 JumpIfEqual {115}
	076 Move X8, [X21+32]
	077 Move W21, [X20+72]
	078 Move X22, X0
	079 Move X9, [X8+192]
	080 Move X8, [X0]
	081 Move X23, [X9+48]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X1, [X23+32]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Compare X9, 0
	086 JumpIfEqual {93}
	087 Move X10, [X8+176]
	088 Add X10, X10, 8
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X9, X9, 1
	092 Add X10, X10, 16
	093 Move X0, X22
	094 Call 0x1C5D788
	095 Move W9, [X10]
	096 Add W9, W9, W2
	097 Add X8, X8, W9
	098 Add X0, X8, 312
	099 Move X0, [X0+8]
	100 Move X1, X23
	101 Call 0x1C17DF8
	102 Move X4, X0
	103 Move X5, [X0+8]
	104 And W2, W19, 1
	105 Move X0, X22
	106 Move X1, X20
	107 Move W3, W21
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X30, [X31+48]
	113 Move X23, [X31+56]
	114 CallNoReturn X5
	115 Call 0x1C17F20

Method: System.Type get_valueType()

Disassembly:
	0x02652A5C LDR X0, [X0 + 0x5B0]
	0x02652A60 BL 0x1C16D08

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Int32 get_valueTypeID()

Disassembly:
	0x02652A64 BL 0x1C16F10
	0x02652A68 MOV X21, X0

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_valueTypeID(System.Int32 value)

Disassembly:
	0x02652A6C ADRP X0, 0x1ACB000
	0x02652A70 LDR X0, [X0 + 0x5C0]

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: T op_Implicit(SpatialSys.ObservableState.StatePrimitive`1<T> value)

Disassembly:
	0x02652A74 BL 0x1C16D08
	0x02652A78 MOV X1, X0
	0x02652A7C MOV X0, X21
	0x02652A80 MOV X2, X31
	0x02652A84 BL 0x337DF1C
	0x02652A88 MOV X0, X21
	0x02652A8C BL 0x19903C0
	0x02652A90 LDR X8, [X21]
	0x02652A94 MOV X0, X21
	0x02652A98 LDP X9, X1, [X8 + 0x198]
	0x02652A9C BLR X9

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {17}
	005 Move X19, X0
	006 Move X0, [X1+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move W0, [X19+76]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Byte get_syncRate()

Disassembly:
	0x02652AA0 MOV X22, X0
	0x02652AA4 MOV X0, X19

ISIL:
	001 Move W0, [X0+77]
	002 Return X0

Method: System.Void set_syncRate(System.Byte value)

Disassembly:
	0x02652AA8 BL 0x19903C0
	0x02652AAC LDR X19, [X19 + 0x18]
	0x02652AB0 MOV X0, X22
	0x02652AB4 BL 0x19903C0
	0x02652AB8 ADRP X0, 0x1AA1000
	0x02652ABC LDR X0, [X0 + 0x818]
	0x02652AC0 BL 0x1C16D08
	0x02652AC4 MOV X23, X0
	0x02652AC8 ADRP X0, 0x1ACB000
	0x02652ACC LDR X0, [X0 + 0x5B8]
	0x02652AD0 BL 0x1C16D08
	0x02652AD4 MOV X3, X0
	0x02652AD8 MOVZ W0, 0x1
	0x02652ADC MOV X1, X23
	0x02652AE0 MOV X2, X22
	0x02652AE4 MOV X4, X19
	0x02652AE8 BL 0x1990514
	0x02652AEC MOV X0, X21
	0x02652AF0 MOV X1, X20
	0x02652AF4 BL 0x1C16DEC
	0x02652AF8 SUB X31, X31, 0x40
	0x02652AFC STP X30, X23, [X31 + 0x10]
	0x02652B00 STP X22, X21, [X31 + 0x20]
	0x02652B04 STP X20, X19, [X31 + 0x30]
	0x02652B08 ADRP X22, 0x1D88000
	0x02652B0C LDRB W8, [X22 + 0x15E]
	0x02652B10 MOV X20, X2
	0x02652B14 MOV W21, W1
	0x02652B18 MOV X19, X0
	0x02652B1C TBNZ X8, 0x0, 0x2652B34
	0x02652B20 ADRP X0, 0x1ACB000
	0x02652B24 LDR X0, [X0 + 0x318]
	0x02652B28 BL 0x1C16CF4
	0x02652B2C MOVZ W8, 0x1
	0x02652B30 STRB W8, [X22 + 0x15E]
	0x02652B34 LDR X8, [X19 + 0x50]
	0x02652B38 CBZ X8, 0x2652CC8
	0x02652B3C LDR X8, [X8 + 0x18]
	0x02652B40 CBZ X8, 0x2652CCC
	0x02652B44 LDRB W9, [X19 + 0x4D]
	0x02652B48 CBNZ W9, 0x2652DE0
	0x02652B4C LDRB W22, [X19 + 0x4C]
	0x02652B50 LDR X9, [X8 + 0x18]
	0x02652B54 LDR X0, [X8 + 0x40]
	0x02652B58 LDR X3, [X8 + 0x28]
	0x02652B5C AND W2, W21, 0x1
	0x02652B60 MOV W1, W22
	0x02652B64 BLR X9
	0x02652B68 LDR X8, [X19 + 0x50]
	0x02652B6C CBZ X8, 0x2652CC8
	0x02652B70 LDR X9, [X8 + 0x20]
	0x02652B74 CBZ X9, 0x2652CC8
	0x02652B78 LDR X8, [X9 + 0x40]
	0x02652B7C LDR X10, [X9 + 0x18]
	0x02652B80 LDR X3, [X9 + 0x28]
	0x02652B84 AND W23, W0, 0x1
	0x02652B88 CMP W22, 0x0
	0x02652B8C CSET W1, NE
	0x02652B90 MOV X0, X8
	0x02652B94 MOV W2, W23
	0x02652B98 BLR X10
	0x02652B9C TBZ X0, 0x0, 0x2652BB4
	0x02652BA0 LDP X20, X19, [X31 + 0x30]
	0x02652BA4 LDP X22, X21, [X31 + 0x20]
	0x02652BA8 LDP X30, X23, [X31 + 0x10]
	0x02652BAC ADD X31, X31, 0x40
	0x02652BB0 RET
	0x02652BB4 LDR X22, [X19 + 0x30]
	0x02652BB8 MOVZ W8, 0x1
	0x02652BBC STRB W23, [X19 + 0x4C]
	0x02652BC0 STRB W8, [X19 + 0x20]
	0x02652BC4 CBZ X22, 0x2652CC8
	0x02652BC8 ADRP X10, 0x1ACB000
	0x02652BCC LDR X8, [X22]
	0x02652BD0 LDR X10, [X10 + 0x318]
	0x02652BD4 LDRH W9, [X8 + 0x12E]
	0x02652BD8 LDR X1, [X10]
	0x02652BDC CBZ X9, 0x2652C00
	0x02652BE0 LDR X10, [X8 + 0xB0]
	0x02652BE4 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1D89000
	006 Move W8, [X21+343]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x1AA2000
	014 Move X0, [X0+1704]
	015 Call 0x1C17CF4
	016 Move X0, 0x1ACC000
	017 Move X0, [X0+792]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+343], W8
	021 Move W8, [X20+77]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 
	028 Move X21, [X20+48]
	029 Move [X20+77], W19
	030 Compare X21, 0
	031 JumpIfEqual {88}
	032 Move X10, 0x1ACC000
	033 Move X8, [X21]
	034 Move X10, [X10+792]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X21
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X21
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {88}
	057 Move X10, 0x1AA2000
	058 Move X8, [X0]
	059 Move X10, [X10+1704]
	060 Move X21, X0
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 10
	072 Move X0, X21
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 10
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X4, [X0]
	079 Move X3, [X0+8]
	080 Move X1, X20
	081 Move W2, W19
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X0, X21
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 CallNoReturn X4
	088 Call 0x1C17F20

Method: System.Boolean get_isDerivedState()

Disassembly:
	0x02652BE8 LDUR X11, [X10 - 0x8]
	0x02652BEC CMP X11, X1
	0x02652BF0 B.EQ 0x2652C10
	0x02652BF4 SUBS X9, X9, 0x1

ISIL:
	001 Move X8, [X0+88]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor()

Disassembly:
	0x02652BF8 ADD X10, X10, 0x10
	0x02652BFC B.NE 0x2652BE8
	0x02652C00 MOV X0, X22
	0x02652C04 MOV W2, W31
	0x02652C08 BL 0x1C5C788
	0x02652C0C B 0x2652C1C
	0x02652C10 LDRSW X9, [X10]
	0x02652C14 ADD X8, X8, X9, 0x4, LSL
	0x02652C18 ADD X0, X8, 0x138
	0x02652C1C LDP X8, X1, [X0]
	0x02652C20 MOV X0, X22
	0x02652C24 BLR X8
	0x02652C28 CBZ X0, 0x2652CC8
	0x02652C2C LDR X8, [X20 + 0x20]
	0x02652C30 LDR W20, [X19 + 0x48]
	0x02652C34 MOV X22, X0
	0x02652C38 LDR X9, [X8 + 0xC0]
	0x02652C3C LDR X8, [X0]
	0x02652C40 LDR X23, [X9 + 0xE0]
	0x02652C44 LDRH W9, [X8 + 0x12E]
	0x02652C48 LDR X1, [X23 + 0x20]
	0x02652C4C LDRH W2, [X23 + 0x50]
	0x02652C50 CBZ X9, 0x2652C74
	0x02652C54 LDR X10, [X8 + 0xB0]
	0x02652C58 ADD X10, X10, 0x8
	0x02652C5C LDUR X11, [X10 - 0x8]
	0x02652C60 CMP X11, X1
	0x02652C64 B.EQ 0x2652C80
	0x02652C68 SUBS X9, X9, 0x1
	0x02652C6C ADD X10, X10, 0x10
	0x02652C70 B.NE 0x2652C5C
	0x02652C74 MOV X0, X22
	0x02652C78 BL 0x1C5C788
	0x02652C7C B 0x2652C90
	0x02652C80 LDR W9, [X10]
	0x02652C84 ADD W9, W9, W2
	0x02652C88 ADD X8, X8, W9, 0x4, SXTW
	0x02652C8C ADD X0, X8, 0x138
	0x02652C90 LDR X0, [X0 + 0x8]
	0x02652C94 MOV X1, X23
	0x02652C98 BL 0x1C16DF8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D89000
	007 Move X21, 0x1AA2000
	008 Move W8, [X22+344]
	009 Move X21, [X21+1728]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1ACC000
	017 Move X0, [X0+784]
	018 Call 0x1C17CF4
	019 Move X0, 0x1AA2000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+344], W8
	024 Move X8, [X20+32]
	025 Move X0, [X21]
	026 Move X21, 0x1ACC000
	027 Move X8, [X8+192]
	028 Move W9, [X0+224]
	029 Move X20, [X8+64]
	030 Move X21, [X21+784]
	031 Compare W9, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Move [X19+64], X0
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Call StateObjectBase..ctor, X0
	051 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.IStateObject parent, System.String stateName)

Disassembly:
	0x02652C9C MOV X4, X0
	0x02652CA0 LDR X5, [X0 + 0x8]
	0x02652CA4 AND W2, W21, 0x1
	0x02652CA8 MOV X0, X22
	0x02652CAC MOV X1, X19
	0x02652CB0 MOV W3, W20
	0x02652CB4 LDP X20, X19, [X31 + 0x30]
	0x02652CB8 LDP X22, X21, [X31 + 0x20]
	0x02652CBC LDP X30, X23, [X31 + 0x10]
	0x02652CC0 ADD X31, X31, 0x40
	0x02652CC4 BR X5
	0x02652CC8 BL 0x1C16F20
	0x02652CCC MOVZ W8, 0x9
	0x02652CD0 STRB W8, [X31 + 0xC]
	0x02652CD4 ADRP X0, 0x1ACB000
	0x02652CD8 LDR X0, [X0 + 0x328]
	0x02652CDC BL 0x1C16D08
	0x02652CE0 ADD X1, X31, 0xC
	0x02652CE4 BL 0x1C16E04
	0x02652CE8 LDR X8, [X20 + 0x20]
	0x02652CEC MOV X22, X0
	0x02652CF0 ADRP X0, 0x1AA1000
	0x02652CF4 LDR X8, [X8 + 0xC0]
	0x02652CF8 LDR X21, [X8 + 0x40]
	0x02652CFC LDR X0, [X0 + 0x6C0]
	0x02652D00 BL 0x1C16D08
	0x02652D04 BL 0x19903D0
	0x02652D08 MOV X0, X21
	0x02652D0C MOV X1, X31
	0x02652D10 BL 0x338C698
	0x02652D14 MOV X21, X0
	0x02652D18 BL 0x19903C0
	0x02652D1C LDR X8, [X21]
	0x02652D20 MOV X0, X21
	0x02652D24 LDR X9, [X8 + 0x2E8]
	0x02652D28 LDR X1, [X8 + 0x2F0]
	0x02652D2C BLR X9
	0x02652D30 MOV X21, X0
	0x02652D34 ADRP X0, 0x1ACB000
	0x02652D38 LDR X0, [X0 + 0x5B0]
	0x02652D3C BL 0x1C16D08
	0x02652D40 MOV X1, X22
	0x02652D44 MOV X2, X21
	0x02652D48 MOV X3, X31
	0x02652D4C BL 0x3227BD4
	0x02652D50 MOV X21, X0
	0x02652D54 ADRP X0, 0x1AA1000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1D89000
	009 Move X23, 0x1AA2000
	010 Move W8, [X24+345]
	011 Move X23, [X23+1728]
	012 Move X22, X3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x1ACC000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move X0, 0x1AA2000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+345], W8
	028 Move X8, [X22+32]
	029 Move X0, [X23]
	030 Move X23, 0x1ACC000
	031 Move X8, [X8+192]
	032 Move W9, [X0+224]
	033 Move X22, [X8+64]
	034 Move X23, [X23+784]
	035 Compare W9, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X22
	039 Move X1, X31
	040 Call Type.GetTypeFromHandle, X0
	041 Move [X21+64], X0
	042 Move X0, [X23]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X20
	049 Move X2, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X3, X31
	057 Move X30, [X31+64]
	058 Call StateObjectBase..ctor, X0, X1, X2
	059 Return 

Method: System.Void InternalInitialize(SpatialSys.ObservableState.IStateObject parent, System.String stateName, System.Boolean serialize)

Disassembly:
	0x02652D58 LDR X0, [X0 + 0x5B0]
	0x02652D5C BL 0x1C16D08
	0x02652D60 BL 0x1C16F10
	0x02652D64 MOV X1, X21
	0x02652D68 MOV X2, X31
	0x02652D6C MOV X22, X0
	0x02652D70 BL 0x337DF1C
	0x02652D74 MOV X0, X22
	0x02652D78 BL 0x19903C0
	0x02652D7C LDR X8, [X22]
	0x02652D80 MOV X0, X22
	0x02652D84 LDP X9, X1, [X8 + 0x198]
	0x02652D88 BLR X9
	0x02652D8C MOV X21, X0
	0x02652D90 MOV X0, X19
	0x02652D94 BL 0x19903C0
	0x02652D98 LDR X19, [X19 + 0x18]
	0x02652D9C MOV X0, X21
	0x02652DA0 BL 0x19903C0
	0x02652DA4 ADRP X0, 0x1AA1000
	0x02652DA8 LDR X0, [X0 + 0x818]
	0x02652DAC BL 0x1C16D08
	0x02652DB0 MOV X23, X0
	0x02652DB4 ADRP X0, 0x1ACB000
	0x02652DB8 LDR X0, [X0 + 0x5B8]
	0x02652DBC BL 0x1C16D08
	0x02652DC0 MOV X3, X0
	0x02652DC4 MOVZ W0, 0x1
	0x02652DC8 MOV X1, X23
	0x02652DCC MOV X2, X21
	0x02652DD0 MOV X4, X19
	0x02652DD4 BL 0x1990514
	0x02652DD8 MOV X0, X22
	0x02652DDC B 0x2652E78
	0x02652DE0 ADRP X0, 0x1AA1000
	0x02652DE4 LDR X0, [X0 + 0x5B0]
	0x02652DE8 BL 0x1C16D08
	0x02652DEC BL 0x1C16F10
	0x02652DF0 MOV X21, X0
	0x02652DF4 ADRP X0, 0x1ACB000
	0x02652DF8 LDR X0, [X0 + 0x5C0]
	0x02652DFC BL 0x1C16D08
	0x02652E00 MOV X1, X0
	0x02652E04 MOV X0, X21
	0x02652E08 MOV X2, X31
	0x02652E0C BL 0x337DF1C
	0x02652E10 MOV X0, X21
	0x02652E14 BL 0x19903C0
	0x02652E18 LDR X8, [X21]
	0x02652E1C MOV X0, X21
	0x02652E20 LDP X9, X1, [X8 + 0x198]
	0x02652E24 BLR X9
	0x02652E28 MOV X22, X0
	0x02652E2C MOV X0, X19
	0x02652E30 BL 0x19903C0
	0x02652E34 LDR X19, [X19 + 0x18]
	0x02652E38 MOV X0, X22
	0x02652E3C BL 0x19903C0
	0x02652E40 ADRP X0, 0x1AA1000
	0x02652E44 LDR X0, [X0 + 0x818]
	0x02652E48 BL 0x1C16D08
	0x02652E4C MOV X23, X0
	0x02652E50 ADRP X0, 0x1ACB000
	0x02652E54 LDR X0, [X0 + 0x5B8]
	0x02652E58 BL 0x1C16D08
	0x02652E5C MOV X3, X0
	0x02652E60 MOVZ W0, 0x1
	0x02652E64 MOV X1, X23
	0x02652E68 MOV X2, X22
	0x02652E6C MOV X4, X19
	0x02652E70 BL 0x1990514
	0x02652E74 MOV X0, X21
	0x02652E78 MOV X1, X20
	0x02652E7C BL 0x1C16DEC
	0x02652E80 STR X30, [X31 - 0x40]!
	0x02652E84 STP X24, X23, [X31 + 0x10]
	0x02652E88 STP X22, X21, [X31 + 0x20]
	0x02652E8C STP X20, X19, [X31 + 0x30]
	0x02652E90 ADRP X22, 0x1D88000
	0x02652E94 LDRB W8, [X22 + 0x15F]
	0x02652E98 MOV X19, X3
	0x02652E9C MOV W21, W2
	0x02652EA0 MOV X20, X0
	0x02652EA4 TBNZ X8, 0x0, 0x2652EE0
	0x02652EA8 ADRP X0, 0x1ACB000
	0x02652EAC LDR X0, [X0 + 0x400]
	0x02652EB0 BL 0x1C16CF4
	0x02652EB4 ADRP X0, 0x1AC9000
	0x02652EB8 LDR X0, [X0 + 0xBC0]
	0x02652EBC BL 0x1C16CF4
	0x02652EC0 ADRP X0, 0x1ACB000
	0x02652EC4 LDR X0, [X0 + 0x408]
	0x02652EC8 BL 0x1C16CF4
	0x02652ECC ADRP X0, 0x1AAB000
	0x02652ED0 LDR X0, [X0 + 0xEC8]
	0x02652ED4 BL 0x1C16CF4
	0x02652ED8 MOVZ W8, 0x1
	0x02652EDC STRB W8, [X22 + 0x15F]
	0x02652EE0 LDRB W8, [X20 + 0x4D]
	0x02652EE4 CBZ W8, 0x2652F74
	0x02652EE8 TBZ X21, 0x0, 0x2652F74
	0x02652EEC ADRP X8, 0x1AC9000
	0x02652EF0 LDR X8, [X8 + 0xBC0]
	0x02652EF4 LDR X0, [X8]
	0x02652EF8 BL 0x1C16F10
	0x02652EFC MOV X21, X0
	0x02652F00 MOV X1, X31
	0x02652F04 BL 0x35AE864
	0x02652F08 LDR X8, [X20]
	0x02652F0C LDR X1, [X8 + 0x330]
	0x02652F10 LDR X9, [X8 + 0x328]
	0x02652F14 MOV X0, X20
	0x02652F18 BLR X9
	0x02652F1C MOV X22, X0
	0x02652F20 CBZ X0, 0x26530DC
	0x02652F24 LDR X8, [X19 + 0x20]
	0x02652F28 LDRB W24, [X20 + 0x4C]
	0x02652F2C LDR X9, [X8 + 0xC0]
	0x02652F30 LDR X8, [X22]
	0x02652F34 LDR X23, [X9 + 0xE8]
	0x02652F38 LDRH W9, [X8 + 0x12E]
	0x02652F3C LDR X1, [X23 + 0x20]
	0x02652F40 LDRH W2, [X23 + 0x50]
	0x02652F44 CBZ X9, 0x2652F68
	0x02652F48 LDR X10, [X8 + 0xB0]
	0x02652F4C ADD X10, X10, 0x8
	0x02652F50 LDUR X11, [X10 - 0x8]
	0x02652F54 CMP X11, X1
	0x02652F58 B.EQ 0x265301C
	0x02652F5C SUBS X9, X9, 0x1
	0x02652F60 ADD X10, X10, 0x10
	0x02652F64 B.NE 0x2652F50
	0x02652F68 MOV X0, X22
	0x02652F6C BL 0x1C5C788
	0x02652F70 B 0x265302C
	0x02652F74 LDR X8, [X20]
	0x02652F78 LDR X1, [X8 + 0x330]
	0x02652F7C LDR X9, [X8 + 0x328]
	0x02652F80 MOV X0, X20
	0x02652F84 BLR X9
	0x02652F88 MOV X21, X0
	0x02652F8C CBZ X0, 0x26530D8
	0x02652F90 LDR X8, [X19 + 0x20]
	0x02652F94 LDRB W23, [X20 + 0x4C]
	0x02652F98 LDR X9, [X8 + 0xC0]
	0x02652F9C LDR X8, [X21]
	0x02652FA0 LDR X22, [X9 + 0xE8]
	0x02652FA4 LDRH W9, [X8 + 0x12E]
	0x02652FA8 LDR X1, [X22 + 0x20]
	0x02652FAC LDRH W2, [X22 + 0x50]
	0x02652FB0 CBZ X9, 0x2652FD4
	0x02652FB4 LDR X10, [X8 + 0xB0]
	0x02652FB8 ADD X10, X10, 0x8
	0x02652FBC LDUR X11, [X10 - 0x8]
	0x02652FC0 CMP X11, X1
	0x02652FC4 B.EQ 0x2652FE0
	0x02652FC8 SUBS X9, X9, 0x1
	0x02652FCC ADD X10, X10, 0x10
	0x02652FD0 B.NE 0x2652FBC
	0x02652FD4 MOV X0, X21
	0x02652FD8 BL 0x1C5C788
	0x02652FDC B 0x2652FF0
	0x02652FE0 LDR W9, [X10]
	0x02652FE4 ADD W9, W9, W2
	0x02652FE8 ADD X8, X8, W9, 0x4, SXTW
	0x02652FEC ADD X0, X8, 0x138
	0x02652FF0 LDR X0, [X0 + 0x8]
	0x02652FF4 MOV X1, X22
	0x02652FF8 BL 0x1C16DF8
	0x02652FFC LDR X8, [X0 + 0x8]
	0x02653000 CMP W23, 0x0
	0x02653004 CSET W1, NE
	0x02653008 MOV X2, X0
	0x0265300C MOV X0, X21
	0x02653010 BLR X8
	0x02653014 MOV X21, X0
	0x02653018 B 0x26530C0
	0x0265301C LDR W9, [X10]
	0x02653020 ADD W9, W9, W2
	0x02653024 ADD X8, X8, W9, 0x4, SXTW
	0x02653028 ADD X0, X8, 0x138
	0x0265302C LDR X0, [X0 + 0x8]
	0x02653030 MOV X1, X23
	0x02653034 BL 0x1C16DF8
	0x02653038 LDR X8, [X0 + 0x8]
	0x0265303C CMP W24, 0x0
	0x02653040 CSET W1, NE
	0x02653044 MOV X2, X0
	0x02653048 MOV X0, X22
	0x0265304C BLR X8
	0x02653050 CBZ X21, 0x26530E0
	0x02653054 ADRP X9, 0x1AAA000
	0x02653058 LDR X8, [X21]
	0x0265305C LDR X9, [X9 + 0xEC8]
	0x02653060 MOV X2, X0
	0x02653064 LDR X3, [X8 + 0x280]
	0x02653068 LDR X1, [X9]
	0x0265306C LDR X9, [X8 + 0x278]
	0x02653070 MOV X0, X21
	0x02653074 BLR X9
	0x02653078 ADRP X8, 0x1ACA000
	0x0265307C LDRB W23, [X20 + 0x4D]
	0x02653080 LDR X8, [X8 + 0x400]
	0x02653084 LDR X0, [X8]
	0x02653088 BL 0x1C16F10
	0x0265308C MOV X22, X0
	0x02653090 UCVTF D0, W23
	0x02653094 MOV X1, X31
	0x02653098 BL 0x35AD340
	0x0265309C ADRP X9, 0x1ACA000
	0x026530A0 LDR X8, [X21]
	0x026530A4 LDR X9, [X9 + 0x408]
	0x026530A8 LDR X3, [X8 + 0x280]
	0x026530AC LDR X1, [X9]
	0x026530B0 LDR X9, [X8 + 0x278]
	0x026530B4 MOV X0, X21
	0x026530B8 MOV X2, X22
	0x026530BC BLR X9
	0x026530C0 MOV X0, X21
	0x026530C4 LDP X20, X19, [X31 + 0x30]
	0x026530C8 LDP X22, X21, [X31 + 0x20]
	0x026530CC LDP X24, X23, [X31 + 0x10]
	0x026530D0 LDR X30, [X31], #0x40
	0x026530D4 RET
	0x026530D8 BL 0x1C16F20
	0x026530DC BL 0x1C16F20
	0x026530E0 BL 0x1C16F20
	0x026530E4 B 0x2653100
	0x026530E8 B 0x2653100
	0x026530EC B 0x2653100
	0x026530F0 B 0x2653100
	0x026530F4 B 0x2653100
	0x026530F8 B 0x2653100
	0x026530FC B 0x2653100
	0x02653100 MOV X21, X0
	0x02653104 CMP W1, 0x1
	0x02653108 B.NE 0x2653220
	0x0265310C MOV X0, X21
	0x02653110 BL 0x3EB1AD0
	0x02653114 MOV X21, X0
	0x02653118 ADRP X0, 0x1AA0000
	0x0265311C LDR X0, [X0 + 0x7D0]
	0x02653120 BL 0x1C16D08
	0x02653124 LDR X8, [X21]
	0x02653128 LDR X1, [X8]
	0x0265312C BL 0x1C17270
	0x02653130 TBZ X0, 0x0, 0x26531F8
	0x02653134 LDR X21, [X21]
	0x02653138 BL 0x3EB1AE0
	0x0265313C MOV X0, X20
	0x02653140 BL 0x19903C0
	0x02653144 LDR X8, [X19 + 0x20]
	0x02653148 ADRP X0, 0x1AA0000
	0x0265314C LDR X20, [X20 + 0x18]
	0x02653150 LDR X8, [X8 + 0xC0]
	0x02653154 LDR X22, [X8 + 0x40]
	0x02653158 LDR X0, [X0 + 0x6C0]
	0x0265315C BL 0x1C16D08
	0x02653160 BL 0x19903D0
	0x02653164 MOV X0, X22
	0x02653168 MOV X1, X31
	0x0265316C BL 0x338C698
	0x02653170 MOV X22, X0
	0x02653174 BL 0x19903C0
	0x02653178 LDR X8, [X22]
	0x0265317C MOV X0, X22
	0x02653180 LDR X9, [X8 + 0x2E8]
	0x02653184 LDR X1, [X8 + 0x2F0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0x1D89000
	012 Move X25, 0x1AA2000
	013 Move W8, [X24+346]
	014 Move X25, [X25+1728]
	015 Move X20, X4
	016 Move W23, W3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x1ACC000
	025 Move X0, [X0+792]
	026 Call 0x1C17CF4
	027 Move X0, 0x1ACC000
	028 Move X0, [X0+800]
	029 Call 0x1C17CF4
	030 Move X0, 0x1ACB000
	031 Move X0, [X0+672]
	032 Call 0x1C17CF4
	033 Move X0, 0x1ACA000
	034 Move X0, [X0+2912]
	035 Call 0x1C17CF4
	036 Move X0, 0x1AA2000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+346], W8
	041 Move X8, [X20+32]
	042 Move X0, [X25]
	043 Move X8, [X8+192]
	044 Move W9, [X0+224]
	045 Move X24, [X8+64]
	046 Compare W9, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X24
	050 Move X1, X31
	051 Call Type.GetTypeFromHandle, X0
	052 Compare X0, 0
	053 JumpIfEqual {279}
	054 Move X1, X31
	055 Move X24, X0
	056 Call Type.get_IsValueType, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {80}
	061 Move X8, 0x1ACA000
	062 Move X0, [X25]
	063 Move X8, [X8+2912]
	064 Move W9, [X0+224]
	065 Move X25, [X8]
	066 Compare W9, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X25
	070 Move X1, X31
	071 Call Type.GetTypeFromHandle, X0
	072 Move X1, X0
	073 Move X0, X24
	074 Move X2, X31
	075 Call Type.op_Inequality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {280}
	080 Move X8, 0x1ACB000
	081 Move X8, [X8+672]
	082 Add X24, X19, 80
	083 Move X0, [X8]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X8, [X20+32]
	089 Move X0, X24
	090 Move X8, [X8+192]
	091 Move X1, [X8+72]
	092 Call 0x22353AC, X0
	093 Move X8, [X24]
	094 Compare X8, 0
	095 JumpIfNotEqual {205}
	096 Move X8, [X20+32]
	097 Move X8, [X8+192]
	098 Move X0, [X8+16]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Call 0x1C17F10
	106 Move X8, [X20+32]
	107 Move X25, X0
	108 Move X8, [X8+192]
	109 Move X1, [X8+88]
	110 Call 0x249C4B4, X0
	111 Move X8, [X20+32]
	112 Move X8, [X8+192]
	113 Move X0, [X8+104]
	114 Move W8, [X0+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X8, [X20+32]
	125 Move X8, [X8+192]
	126 Move X0, [X8+104]
	127 Move W8, [X0+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {133}
	132 Call 0x1C5D684
	133 Move X8, [X0+184]
	134 Move X26, [X8+8]
	135 Compare X26, 0
	136 JumpIfNotEqual {201}
	137 Move X8, [X20+32]
	138 Move X8, [X8+192]
	139 Move X0, [X8+104]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X8, [X20+32]
	151 Move X8, [X8+192]
	152 Move X0, [X8+104]
	153 Move W9, [X0+309]
	154 Move TEMP, X9
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {161}
	158 Call 0x1C5D684
	159 Move X8, [X20+32]
	160 Move X8, [X8+192]
	161 Move X8, [X8+24]
	162 Move X9, [X0+184]
	163 Move W10, [X8+309]
	164 Move X27, [X9]
	165 Move TEMP, X10
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {172}
	169 Move X0, X8
	170 Call 0x1C5D684
	171 Move X8, X0
	172 Move X0, X8
	173 Call 0x1C17F10
	174 Move X8, [X20+32]
	175 Move X1, X27
	176 Move X26, X0
	177 Move X8, [X8+192]
	178 Move X2, [X8+112]
	179 Move X3, [X8+120]
	180 Call Func`3<Boolean, Boolean, Boolean>..ctor, X0, X1, X2
	181 Move X8, [X20+32]
	182 Move X8, [X8+192]
	183 Move X0, [X8+104]
	184 Move W9, [X0+309]
	185 Move TEMP, X9
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {192}
	189 Call 0x1C5D684
	190 Move X8, [X20+32]
	191 Move X8, [X8+192]
	192 Move X9, [X0+184]
	193 Move [X9+8], X26
	194 Move X0, [X8+104]
	195 Move W8, [X0+309]
	196 Move TEMP, X8
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {201}
	200 Call 0x1C5D684
	201 Compare X25, 0
	202 JumpIfEqual {279}
	203 Move [X25+32], X26
	204 Move [X24], X25
	205 And W3, W23, 1
	206 Move X0, X19
	207 Move X1, X22
	208 Move X2, X21
	209 Move X4, X31
	210 Call StateObjectBase.InternalInitialize, X0, X1, X2, X3
	211 Move X20, [X19+48]
	212 Compare X20, 0
	213 JumpIfEqual {279}
	214 Move X10, 0x1ACC000
	215 Move X8, [X20]
	216 Move X10, [X10+792]
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Move X1, [X10]
	219 Compare X9, 0
	220 JumpIfEqual {227}
	221 Move X10, [X8+176]
	222 Add X10, X10, 8
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Subtract X9, X9, 1
	226 Add X10, X10, 16
	227 Move W2, 1
	228 Move X0, X20
	229 Call 0x1C5D788
	230 Move W9, [X10]
	231 Add W9, W9, 1
	232 Add X8, X8, W9
	233 Add X0, X8, 312
	234 Move X8, [X0]
	235 Move X1, [X0+8]
	236 Move X0, X20
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X0, 0
	239 JumpIfEqual {279}
	240 Move X10, 0x1ACB000
	241 Move X8, [X0]
	242 Move X10, [X10+800]
	243 Move X21, [X19+64]
	244 Move X20, X0
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X1, [X10]
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move W2, 4
	256 Move X0, X20
	257 Call 0x1C5D788
	258 Move W9, [X10]
	259 Add W9, W9, 4
	260 Add X8, X8, W9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X2, [X0+8]
	264 Move X0, X20
	265 Move X1, X21
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Move [X19+72], W0
	268 Move X20, [X31+64]
	269 Move X19, [X31+72]
	270 Move X22, [X31+48]
	271 Move X21, [X31+56]
	272 Move X24, [X31+32]
	273 Move X23, [X31+40]
	274 Move X26, [X31+16]
	275 Move X25, [X31+24]
	276 Move X30, [X31+80]
	277 Move X27, [X31+88]
	278 Return 
	279 Call 0x1C17F20
	280 Move X8, [X20+32]
	281 Move X0, 0x1AA1000
	282 Move X8, [X8+192]
	283 Move X19, [X8+64]
	284 Move X0, [X0+1728]
	285 Call 0x1C17D08
	286 Call 0x19913D0
	287 Move X0, X19
	288 Move X1, X31
	289 Call Type.GetTypeFromHandle, X0
	290 Move X19, X0
	291 Call 0x19913C0
	292 Move X8, [X19]
	293 Move X0, X19
	294 Move X9, [X8+744]
	295 Move X1, [X8+752]
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move X19, X0
	298 Move X0, 0x1ACB000
	299 Move X0, [X0+1440]
	300 Call 0x1C17D08
	301 Move X21, X0
	302 Move X0, 0x1AA2000
	303 Move X0, [X0+1544]
	304 Call 0x1C17D08
	305 Move X2, X0
	306 Move X0, X21
	307 Move X1, X19
	308 Move X3, X31
	309 Call String.Concat, X0, X1, X2
	310 Move X19, X0
	311 Move X0, 0x1AA9000
	312 Move X0, [X0+1400]
	313 Call 0x1C17D08
	314 Call 0x1C17F10
	315 Move X1, X19
	316 Move X2, X31
	317 Move X21, X0
	318 Call ArgumentException..ctor, X0, X1
	319 Move X0, X21
	320 Move X1, X20
	321 Call 0x1C17DEC

Method: System.Void InternalDispose()

Disassembly:
	0x02653188 BLR X9
	0x0265318C MOV X22, X0
	0x02653190 ADRP X0, 0x1ACA000
	0x02653194 LDR X0, [X0 + 0x410]
	0x02653198 BL 0x1C16D08
	0x0265319C MOV X23, X0
	0x026531A0 ADRP X0, 0x1ACA000
	0x026531A4 LDR X0, [X0 + 0x418]
	0x026531A8 BL 0x1C16D08
	0x026531AC MOV X2, X0
	0x026531B0 MOV X0, X23
	0x026531B4 MOV X1, X20
	0x026531B8 MOV X3, X22
	0x026531BC MOV X4, X31
	0x026531C0 BL 0x32277C4
	0x026531C4 MOV X20, X0
	0x026531C8 ADRP X0, 0x1AC9000
	0x026531CC LDR X0, [X0 + 0x660]
	0x026531D0 BL 0x1C16D08
	0x026531D4 BL 0x1C16F10
	0x026531D8 MOV X1, X20
	0x026531DC MOV X2, X21
	0x026531E0 MOV X3, X31
	0x026531E4 MOV X22, X0
	0x026531E8 BL 0x35C99E4
	0x026531EC MOV X0, X22
	0x026531F0 MOV X1, X19
	0x026531F4 BL 0x1C16DEC
	0x026531F8 MOVZ W0, 0x8
	0x026531FC BL 0x3EB1AF0
	0x02653200 LDR X8, [X21]
	0x02653204 STR X8, [X0]
	0x02653208 ADRP X1, 0x1861000
	0x0265320C ADD X1, X1, 0xE58
	0x02653210 MOV X2, X31
	0x02653214 BL 0x3EB1B00
	0x02653218 MOV X21, X0
	0x0265321C BL 0x3EB1AE0
	0x02653220 MOV X0, X21
	0x02653224 BL 0x1D2C690
	0x02653228 BL 0x1990590
	0x0265322C STR X30, [X31 - 0x40]!
	0x02653230 STP X24, X23, [X31 + 0x10]
	0x02653234 STP X22, X21, [X31 + 0x20]
	0x02653238 STP X20, X19, [X31 + 0x30]
	0x0265323C ADRP X22, 0x1D87000
	0x02653240 LDRB W8, [X22 + 0x160]
	0x02653244 MOV X19, X2
	0x02653248 MOV X21, X1
	0x0265324C MOV X20, X0
	0x02653250 TBNZ X8, 0x0, 0x2653274
	0x02653254 ADRP X0, 0x1ACA000
	0x02653258 LDR X0, [X0 + 0x408]
	0x0265325C BL 0x1C16CF4
	0x02653260 ADRP X0, 0x1AAA000
	0x02653264 LDR X0, [X0 + 0xEC8]
	0x02653268 BL 0x1C16CF4
	0x0265326C MOVZ W8, 0x1
	0x02653270 STRB W8, [X22 + 0x160]
	0x02653274 CBZ X20, 0x265346C
	0x02653278 LDR X8, [X20]
	0x0265327C MOV X0, X20
	0x02653280 LDR X9, [X8 + 0x358]
	0x02653284 LDR X1, [X8 + 0x360]
	0x02653288 BLR X9
	0x0265328C TBNZ X0, 0x0, 0x2653458
	0x02653290 CBZ X21, 0x2653470
	0x02653294 LDR X8, [X21]
	0x02653298 LDR X1, [X8 + 0x250]
	0x0265329C LDR X9, [X8 + 0x248]
	0x026532A0 MOV X0, X21
	0x026532A4 BLR X9
	0x026532A8 LDR X9, [X20]
	0x026532AC LDR X8, [X9 + 0x328]
	0x026532B0 LDR X1, [X9 + 0x330]
	0x026532B4 TBZ X0, 0x0, 0x2653334
	0x026532B8 MOV X0, X20
	0x026532BC BLR X8
	0x026532C0 ADRP X9, 0x1AAA000
	0x026532C4 LDR X8, [X21]
	0x026532C8 LDR X9, [X9 + 0xEC8]
	0x026532CC MOV X22, X0
	0x026532D0 LDR X1, [X9]
	0x026532D4 LDP X9, X2, [X8 + 0x1A8]
	0x026532D8 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1D88000
	005 Move W8, [X20+347]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x1AA1000
	012 Move X0, [X0+1704]
	013 Call 0x1C17CF4
	014 Move X0, 0x1ACB000
	015 Move X0, [X0+792]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+347], W8
	019 Compare X19, 0
	020 JumpIfEqual {95}
	021 Move X0, X19
	022 Move X1, X31
	023 Call StateObjectBase.InternalDispose, X0
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+856]
	027 Move X1, [X8+864]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {52}
	033 Move X20, [X19+48]
	034 Compare X20, 0
	035 JumpIfEqual {95}
	036 Move X10, 0x1ACB000
	037 Move X8, [X20]
	038 Move X10, [X10+792]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X20
	050 Move W2, W31
	051 Call 0x1C5D788
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return 
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X20
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {95}
	065 Move X10, 0x1AA1000
	066 Move X8, [X0]
	067 Move X19, [X19+88]
	068 Move X10, [X10+1704]
	069 Move X20, X0
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X1, [X10]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 7
	081 Move X0, X20
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 7
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X3, [X0]
	088 Move X2, [X0+8]
	089 Move X0, X20
	090 Move X1, X19
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 CallNoReturn X3
	095 Call 0x1C17F20

Method: System.Void ApplyOperation(SpatialSys.ObservableState.IStateOperation operation)

Disassembly:
	0x026532DC BLR X9
	0x026532E0 CBZ X22, 0x2653478
	0x026532E4 LDR X8, [X19 + 0x20]
	0x026532E8 MOV X23, X0
	0x026532EC LDR X9, [X8 + 0xC0]
	0x026532F0 LDR X8, [X22]
	0x026532F4 LDR X24, [X9 + 0xF0]
	0x026532F8 LDRH W9, [X8 + 0x12E]
	0x026532FC LDR X1, [X24 + 0x20]
	0x02653300 LDRH W2, [X24 + 0x50]
	0x02653304 CBZ X9, 0x2653328
	0x02653308 LDR X10, [X8 + 0xB0]
	0x0265330C ADD X10, X10, 0x8
	0x02653310 LDUR X11, [X10 - 0x8]
	0x02653314 CMP X11, X1
	0x02653318 B.EQ 0x26533DC
	0x0265331C SUBS X9, X9, 0x1
	0x02653320 ADD X10, X10, 0x10
	0x02653324 B.NE 0x2653310
	0x02653328 MOV X0, X22
	0x0265332C BL 0x1C5C788
	0x02653330 B 0x26533EC
	0x02653334 MOV X0, X20
	0x02653338 BLR X8
	0x0265333C MOV X22, X0
	0x02653340 CBZ X0, 0x2653474
	0x02653344 LDR X8, [X19 + 0x20]
	0x02653348 LDR X9, [X8 + 0xC0]
	0x0265334C LDR X8, [X22]
	0x02653350 LDR X23, [X9 + 0xF0]
	0x02653354 LDRH W9, [X8 + 0x12E]
	0x02653358 LDR X1, [X23 + 0x20]
	0x0265335C LDRH W2, [X23 + 0x50]
	0x02653360 CBZ X9, 0x2653384
	0x02653364 LDR X10, [X8 + 0xB0]
	0x02653368 ADD X10, X10, 0x8
	0x0265336C LDUR X11, [X10 - 0x8]
	0x02653370 CMP X11, X1
	0x02653374 B.EQ 0x2653390
	0x02653378 SUBS X9, X9, 0x1
	0x0265337C ADD X10, X10, 0x10
	0x02653380 B.NE 0x265336C
	0x02653384 MOV X0, X22
	0x02653388 BL 0x1C5C788
	0x0265338C B 0x26533A0
	0x02653390 LDR W9, [X10]
	0x02653394 ADD W9, W9, W2
	0x02653398 ADD X8, X8, W9, 0x4, SXTW
	0x0265339C ADD X0, X8, 0x138
	0x026533A0 LDR X0, [X0 + 0x8]
	0x026533A4 MOV X1, X23
	0x026533A8 BL 0x1C16DF8
	0x026533AC LDR X8, [X0 + 0x8]
	0x026533B0 MOV X2, X0
	0x026533B4 MOV X0, X22
	0x026533B8 MOV X1, X21
	0x026533BC BLR X8
	0x026533C0 LDR X8, [X19 + 0x20]
	0x026533C4 LDR X8, [X8 + 0xC0]
	0x026533C8 LDR X2, [X8 + 0xA0]
	0x026533CC AND W1, W0, 0x1
	0x026533D0 MOV X0, X20
	0x026533D4 BL 0x26518D0
	0x026533D8 B 0x2653458
	0x026533DC LDR W9, [X10]
	0x026533E0 ADD W9, W9, W2
	0x026533E4 ADD X8, X8, W9, 0x4, SXTW
	0x026533E8 ADD X0, X8, 0x138
	0x026533EC LDR X0, [X0 + 0x8]
	0x026533F0 MOV X1, X24
	0x026533F4 BL 0x1C16DF8
	0x026533F8 LDR X8, [X0 + 0x8]
	0x026533FC MOV X2, X0
	0x02653400 MOV X0, X22
	0x02653404 MOV X1, X23
	0x02653408 BLR X8
	0x0265340C LDR X8, [X19 + 0x20]
	0x02653410 LDR X8, [X8 + 0xC0]
	0x02653414 LDR X2, [X8 + 0xA0]
	0x02653418 AND W1, W0, 0x1
	0x0265341C MOV X0, X20
	0x02653420 BL 0x26518D0
	0x02653424 ADRP X9, 0x1ACA000
	0x02653428 LDR X8, [X21]
	0x0265342C LDR X9, [X9 + 0x408]
	0x02653430 LDR X1, [X9]
	0x02653434 LDP X9, X2, [X8 + 0x1A8]
	0x02653438 MOV X0, X21
	0x0265343C BLR X9
	0x02653440 CBZ X0, 0x265347C
	0x02653444 LDR X8, [X0]
	0x02653448 LDR X1, [X8 + 0x370]
	0x0265344C LDR X9, [X8 + 0x368]
	0x02653450 BLR X9
	0x02653454 STRB W0, [X20 + 0x4D]
	0x02653458 LDP X20, X19, [X31 + 0x30]
	0x0265345C LDP X22, X21, [X31 + 0x20]
	0x02653460 LDP X24, X23, [X31 + 0x10]
	0x02653464 LDR X30, [X31], #0x40
	0x02653468 RET
	0x0265346C BL 0x1C16F20
	0x02653470 BL 0x1C16F20
	0x02653474 BL 0x1C16F20
	0x02653478 BL 0x1C16F20
	0x0265347C BL 0x1C16F20
	0x02653480 B 0x26534A4
	0x02653484 B 0x26534A4
	0x02653488 B 0x26534A4
	0x0265348C B 0x26534A4
	0x02653490 B 0x26534A4
	0x02653494 B 0x26534A4
	0x02653498 B 0x26534A4
	0x0265349C B 0x26534A4
	0x026534A0 B 0x26534A4
	0x026534A4 MOV X21, X0
	0x026534A8 CMP W1, 0x1
	0x026534AC B.NE 0x26535C4
	0x026534B0 MOV X0, X21
	0x026534B4 BL 0x3EB1AD0
	0x026534B8 MOV X21, X0
	0x026534BC ADRP X0, 0x1AA0000
	0x026534C0 LDR X0, [X0 + 0x7D0]
	0x026534C4 BL 0x1C16D08
	0x026534C8 LDR X8, [X21]
	0x026534CC LDR X1, [X8]
	0x026534D0 BL 0x1C17270
	0x026534D4 TBZ X0, 0x0, 0x265359C
	0x026534D8 LDR X21, [X21]
	0x026534DC BL 0x3EB1AE0
	0x026534E0 MOV X0, X20
	0x026534E4 BL 0x19903C0
	0x026534E8 LDR X8, [X19 + 0x20]
	0x026534EC ADRP X0, 0x1AA0000
	0x026534F0 LDR X20, [X20 + 0x18]
	0x026534F4 LDR X8, [X8 + 0xC0]
	0x026534F8 LDR X22, [X8 + 0x40]
	0x026534FC LDR X0, [X0 + 0x6C0]
	0x02653500 BL 0x1C16D08
	0x02653504 BL 0x19903D0
	0x02653508 MOV X0, X22
	0x0265350C MOV X1, X31
	0x02653510 BL 0x338C698
	0x02653514 MOV X22, X0
	0x02653518 BL 0x19903C0
	0x0265351C LDR X8, [X22]
	0x02653520 MOV X0, X22
	0x02653524 LDR X9, [X8 + 0x2E8]
	0x02653528 LDR X1, [X8 + 0x2F0]
	0x0265352C BLR X9
	0x02653530 MOV X22, X0
	0x02653534 ADRP X0, 0x1ACA000
	0x02653538 LDR X0, [X0 + 0x420]
	0x0265353C BL 0x1C16D08
	0x02653540 MOV X23, X0
	0x02653544 ADRP X0, 0x1ACA000
	0x02653548 LDR X0, [X0 + 0x418]
	0x0265354C BL 0x1C16D08
	0x02653550 MOV X2, X0
	0x02653554 MOV X0, X23
	0x02653558 MOV X1, X20
	0x0265355C MOV X3, X22
	0x02653560 MOV X4, X31
	0x02653564 BL 0x32277C4
	0x02653568 MOV X20, X0
	0x0265356C ADRP X0, 0x1AC9000
	0x02653570 LDR X0, [X0 + 0x660]
	0x02653574 BL 0x1C16D08
	0x02653578 BL 0x1C16F10
	0x0265357C MOV X1, X20
	0x02653580 MOV X2, X21
	0x02653584 MOV X3, X31
	0x02653588 MOV X22, X0
	0x0265358C BL 0x35C99E4
	0x02653590 MOV X0, X22
	0x02653594 MOV X1, X19
	0x02653598 BL 0x1C16DEC
	0x0265359C MOVZ W0, 0x8
	0x026535A0 BL 0x3EB1AF0
	0x026535A4 LDR X8, [X21]
	0x026535A8 STR X8, [X0]
	0x026535AC ADRP X1, 0x1861000
	0x026535B0 ADD X1, X1, 0xE58
	0x026535B4 MOV X2, X31
	0x026535B8 BL 0x3EB1B00
	0x026535BC MOV X21, X0
	0x026535C0 BL 0x3EB1AE0
	0x026535C4 MOV X0, X21
	0x026535C8 BL 0x1D2C690
	0x026535CC BL 0x1990590
	0x026535D0 STR X30, [X31 - 0x30]!
	0x026535D4 STP X22, X21, [X31 + 0x10]
	0x026535D8 STP X20, X19, [X31 + 0x20]
	0x026535DC ADRP X21, 0x1D87000
	0x026535E0 LDRB W8, [X21 + 0x161]
	0x026535E4 MOV X19, X1
	0x026535E8 MOV X20, X0
	0x026535EC TBNZ X8, 0x0, 0x2653610
	0x026535F0 ADRP X0, 0x1ACA000
	0x026535F4 LDR X0, [X0 + 0x5C8]
	0x026535F8 BL 0x1C16CF4
	0x026535FC ADRP X0, 0x1ACA000
	0x02653600 LDR X0, [X0 + 0x438]
	0x02653604 BL 0x1C16CF4
	0x02653608 MOVZ W8, 0x1
	0x0265360C STRB W8, [X21 + 0x161]
	0x02653610 CBZ X20, 0x26536B8
	0x02653614 MOV X0, X20
	0x02653618 MOV X1, X31
	0x0265361C BL 0x35D0294
	0x02653620 MOV W22, W0
	0x02653624 MOV X0, X20
	0x02653628 MOV X1, X31
	0x0265362C BL 0x33BE520
	0x02653630 CBZ X0, 0x26536B8
	0x02653634 LDR X8, [X0]
	0x02653638 LDP X9, X1, [X8 + 0x1A8]
	0x0265363C BLR X9
	0x02653640 MOV X21, X0
	0x02653644 TBZ X22, 0x0, 0x265366C
	0x02653648 ADRP X8, 0x1ACA000
	0x0265364C LDR X8, [X8 + 0x438]
	0x02653650 MOV X0, X21
	0x02653654 LDP X20, X19, [X31 + 0x20]
	0x02653658 LDP X22, X21, [X31 + 0x10]
	0x0265365C LDR X1, [X8]
	0x02653660 MOV X2, X31
	0x02653664 LDR X30, [X31], #0x30
	0x02653668 B 0x321B938
	0x0265366C LDR X8, [X19 + 0x20]
	0x02653670 LDRB W9, [X20 + 0x4C]
	0x02653674 ADD X1, X31, 0xC
	0x02653678 LDR X8, [X8 + 0xC0]
	0x0265367C STRB W9, [X31 + 0xC]
	0x02653680 LDR X0, [X8 + 0x8]
	0x02653684 BL 0x1C16E04
	0x02653688 ADRP X8, 0x1ACA000
	0x0265368C LDR X8, [X8 + 0x5C8]
	0x02653690 MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D88000
	007 Move W8, [X22+348]
	008 Move X21, X2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1AA1000
	016 Move X0, [X0+1872]
	017 Call 0x1C17CF4
	018 Move X0, 0x1ACB000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move X0, 0x1ACB000
	022 Move X0, [X0+1000]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+348], W8
	026 Compare X20, 0
	027 JumpIfEqual {222}
	028 Move X10, 0x1AA1000
	029 Move X8, [X20]
	030 Move X10, [X10+1872]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 2
	042 Move X0, X20
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 2
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X20
	051 NotImplemented "Instruction BLR not yet implemented."
	052 And W8, W0, 255
	053 Subtract W8, W8, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, -28463104
	056 Add X9, X9, 3353
	057 NotImplemented "Instruction ADR not yet implemented."
	058 Move W11, [X9]
	059 Add X10, X10, X11
	060 CallNoReturn X10
	061 Move X8, [X21+32]
	062 Move X8, [X8+192]
	063 Move X0, [X8+144]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move X8, [X20]
	071 Move W9, [X0+304]
	072 Move W10, [X8+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X8+200]
	075 Add X9, X8, X9
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X9, [X21+32]
	079 Move X9, [X9+192]
	080 Move X0, [X9+144]
	081 Move W10, [X0+309]
	082 Move TEMP, X10
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {91}
	086 Call 0x1C5D684
	087 Move X8, [X20]
	088 Move X9, [X21+32]
	089 Move X8, [X8+200]
	090 Move X9, [X9+192]
	091 Move W10, [X0+304]
	092 Move X2, [X9+160]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Add X8, X8, X10
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Move W1, [X8+25]
	100 Move X0, X19
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X30, [X31+48]
	104 Call 0x26528D0, X0, X1
	105 Return 
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+48]
	111 Return 
	112 Move X8, 0x1ACB000
	113 Move X8, [X8+1000]
	114 Move X9, [X20]
	115 Move X8, [X8]
	116 Move W11, [X9+304]
	117 Move W10, [X8+304]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X9, [X9+200]
	120 Add X9, X9, X10
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W1, [X20+25]
	124 Move X0, X19
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X22, [X31+16]
	128 Move X21, [X31+24]
	129 Move X30, [X31+48]
	130 Call 0x2652AA8, X0, X1
	131 Return 
	132 Move X8, [X21+32]
	133 Move X8, [X8+192]
	134 Move X0, [X8+144]
	135 Move W8, [X0+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {141}
	140 Call 0x1C5D684
	141 Move X8, [X20]
	142 Move W9, [X0+304]
	143 Move W10, [X8+304]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X8, [X8+200]
	146 Add X9, X8, X9
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X9, [X21+32]
	150 Move X9, [X9+192]
	151 Move X0, [X9+144]
	152 Move W10, [X0+309]
	153 Move TEMP, X10
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {162}
	157 Call 0x1C5D684
	158 Move X8, [X20]
	159 Move X9, [X21+32]
	160 Move X8, [X8+200]
	161 Move X9, [X9+192]
	162 Move W10, [X0+304]
	163 Move X2, [X9+176]
	164 Move X22, [X31+16]
	165 Move X21, [X31+24]
	166 Add X8, X8, X10
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 Move W1, [X8+25]
	171 Move X0, X19
	172 Move X20, [X31+32]
	173 Move X19, [X31+40]
	174 Move X30, [X31+48]
	175 Call 0x2653770, X0, X1
	176 Return 
	177 Move X8, [X21+32]
	178 Move X8, [X8+192]
	179 Move X0, [X8+144]
	180 Move W8, [X0+309]
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {186}
	185 Call 0x1C5D684
	186 Move X8, [X20]
	187 Move W9, [X0+304]
	188 Move W10, [X8+304]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X8, [X8+200]
	191 Add X9, X8, X9
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X9, [X21+32]
	195 Move X9, [X9+192]
	196 Move X0, [X9+144]
	197 Move W10, [X0+309]
	198 Move TEMP, X10
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {207}
	202 Call 0x1C5D684
	203 Move X8, [X20]
	204 Move X9, [X21+32]
	205 Move X8, [X8+200]
	206 Move X9, [X9+192]
	207 Move W10, [X0+304]
	208 Move X2, [X9+184]
	209 Move X22, [X31+16]
	210 Move X21, [X31+24]
	211 Add X8, X8, X10
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CSEL not yet implemented."
	215 Move W1, [X8+25]
	216 Move X0, X19
	217 Move X20, [X31+32]
	218 Move X19, [X31+40]
	219 Move X30, [X31+48]
	220 Call 0x2653AF8, X0, X1
	221 Return 
	222 Call 0x1C17F20
	223 Move X0, X20
	224 Call 0x19913C0
	225 Move X0, 0x1AA1000
	226 Move X0, [X0+1872]
	227 Call 0x1C17D08
	228 Move X1, X0
	229 Move W0, 2
	230 Move X2, X20
	231 Call 0x19973F0
	232 Move [X31+12], W0
	233 Move X0, 0x1ACB000
	234 Move X0, [X0+808]
	235 Call 0x1C17D08
	236 Add X1, X31, 12
	237 Call 0x1C17E04
	238 Move X20, X0
	239 Move X0, X19
	240 Call 0x19913C0
	241 Move X0, 0x1ACB000
	242 Move X19, [X19+24]
	243 Move X0, [X0+1008]
	244 Call 0x1C17D08
	245 Move X22, X0
	246 Move X0, 0x1ACB000
	247 Move X0, [X0+1448]
	248 Call 0x1C17D08
	249 Move X2, X0
	250 Move X0, X22
	251 Move X1, X20
	252 Move X3, X19
	253 Move X4, X31
	254 Call String.Format, X0, X1, X2, X3
	255 Move X19, X0
	256 Move X0, 0x1AA1000
	257 Move X0, [X0+1456]
	258 Call 0x1C17D08
	259 Call 0x1C17F10
	260 Move X1, X19
	261 Move X2, X31
	262 Move X20, X0
	263 Call InvalidOperationException..ctor, X0, X1
	264 Move X0, X20
	265 Move X1, X21
	266 Call 0x1C17DEC

Method: SpatialSys.ObservableState.IStateOperation AllocateSetOperationWithCurrentValue(SpatialSys.ObservableState.StateOperationPool pool)

Disassembly:
	0x02653694 MOV X1, X21
	0x02653698 MOV X3, X31
	0x0265369C LDR X8, [X8]
	0x026536A0 MOV X0, X8
	0x026536A4 BL 0x3227BD4
	0x026536A8 LDP X20, X19, [X31 + 0x20]
	0x026536AC LDP X22, X21, [X31 + 0x10]
	0x026536B0 LDR X30, [X31], #0x30
	0x026536B4 RET
	0x026536B8 BL 0x1C16F20
	0x026536BC MOV W0, W31
	0x026536C0 STR X31, [X2]
	0x026536C4 RET
	0x026536C8 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {16}
	004 Move X9, [X2+32]
	005 Move W4, [X0+72]
	006 Move W3, [X0+76]
	007 Move X8, X0
	008 Move X9, [X9+192]
	009 Move W2, 1
	010 Move X0, X1
	011 Move X1, X8
	012 Move X5, [X9+192]
	013 Move X30, [X31+16]
	014 Call 0x2267334, X0, X1, X2, X3, X4
	015 Return X0
	016 Call 0x1C17F20

Method: System.Object GetValue()

Disassembly:
	0x026536CC LDR X8, [X2 + 0x20]
	0x026536D0 MOV W1, W31
	0x026536D4 MOV X19, X0
	0x026536D8 LDR X8, [X8 + 0xC0]
	0x026536DC LDR X2, [X8 + 0xA0]
	0x026536E0 BL 0x26518D0
	0x026536E4 MOV X0, X19
	0x026536E8 MOV W1, W31
	0x026536EC LDP X30, X19, [X31], #0x10
	0x026536F0 B 0x2651AA8

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X1+32]
	003 Move W9, [X0+76]
	004 Add X1, X31, 12
	005 Move X8, [X8+192]
	006 Move [X31+12], W9
	007 Move X0, [X8+8]
	008 Call 0x1C17E04
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Void SetValue(System.Object value)

Disassembly:
	0x026536F4 STR X30, [X31 - 0x30]!
	0x026536F8 STP X22, X21, [X31 + 0x10]
	0x026536FC STP X20, X19, [X31 + 0x20]
	0x02653700 ADRP X22, 0x1D87000
	0x02653704 LDRB W8, [X22 + 0x162]
	0x02653708 MOV X21, X2
	0x0265370C MOV X19, X1
	0x02653710 MOV X20, X0
	0x02653714 TBNZ X8, 0x0, 0x265372C
	0x02653718 ADRP X0, 0x1AA1000
	0x0265371C LDR X0, [X0 + 0x1B0]
	0x02653720 BL 0x1C16CF4
	0x02653724 MOVZ W8, 0x1
	0x02653728 STRB W8, [X22 + 0x162]
	0x0265372C CBZ X19, 0x2653804
	0x02653730 ADRP X10, 0x1AA1000
	0x02653734 LDR X8, [X19]
	0x02653738 LDR X10, [X10 + 0x1B0]
	0x0265373C LDRH W9, [X8 + 0x12E]
	0x02653740 LDR X1, [X10]
	0x02653744 CBZ X9, 0x2653768
	0x02653748 LDR X10, [X8 + 0xB0]
	0x0265374C ADD X10, X10, 0x8
	0x02653750 LDUR X11, [X10 - 0x8]
	0x02653754 CMP X11, X1
	0x02653758 B.EQ 0x2653778
	0x0265375C SUBS X9, X9, 0x1
	0x02653760 ADD X10, X10, 0x10
	0x02653764 B.NE 0x2653750
	0x02653768 MOVZ W2, 0xF
	0x0265376C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Compare X20, 0
	020 JumpIfEqual {38}
	021 Move X8, [X20]
	022 Move X9, [X1+64]
	023 Move X0, X20
	024 Move X8, [X8+64]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Call 0x1C17E08
	027 Move X8, [X19+32]
	028 Move W1, [X0]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X0, X21
	032 Move X8, [X8+192]
	033 Move X2, [X8+160]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call 0x26528D0, X0, X1
	037 Return 
	038 Call 0x1C17F20
	039 Call 0x1C181E0

Method: System.Void Add(T value)

Disassembly:
	0x02653770 BL 0x1C5C788
	0x02653774 B 0x2653788
	0x02653778 LDR W9, [X10]
	0x0265377C ADD W9, W9, 0xF
	0x02653780 ADD X8, X8, W9, 0x4, SXTW
	0x02653784 ADD X0, X8, 0x138
	0x02653788 LDP X8, X1, [X0]
	0x0265378C MOV X0, X19
	0x02653790 BLR X8
	0x02653794 TBZ X0, 0x0, 0x26537A8
	0x02653798 LDP X20, X19, [X31 + 0x20]
	0x0265379C LDP X22, X21, [X31 + 0x10]
	0x026537A0 LDR X30, [X31], #0x30
	0x026537A4 RET
	0x026537A8 LDR X8, [X21 + 0x20]
	0x026537AC LDR X8, [X8 + 0xC0]
	0x026537B0 LDR X1, [X8]
	0x026537B4 LDRB W8, [X1 + 0x135]
	0x026537B8 TBNZ X8, 0x0, 0x26537C8
	0x026537BC MOV X0, X1
	0x026537C0 BL 0x1C5C684
	0x026537C4 MOV X1, X0
	0x026537C8 LDR X8, [X19]
	0x026537CC CMP X8, X1
	0x026537D0 B.NE 0x2653808
	0x026537D4 LDR X8, [X21 + 0x20]
	0x026537D8 LDRB W1, [X20 + 0x4C]
	0x026537DC MOV X0, X19
	0x026537E0 LDR X8, [X8 + 0xC0]
	0x026537E4 LDR X2, [X8 + 0xA0]
	0x026537E8 BL 0x26518D0
	0x026537EC LDRB W1, [X20 + 0x4D]
	0x026537F0 MOV X0, X19
	0x026537F4 LDP X20, X19, [X31 + 0x20]
	0x026537F8 LDP X22, X21, [X31 + 0x10]
	0x026537FC LDR X30, [X31], #0x30
	0x02653800 B 0x2651AA8
	0x02653804 BL 0x1C16F20
	0x02653808 MOV X0, X19
	0x0265380C BL 0x1C171E0
	0x02653810 STR X30, [X31 - 0x40]!
	0x02653814 STP X24, X23, [X31 + 0x10]
	0x02653818 STP X22, X21, [X31 + 0x20]
	0x0265381C STP X20, X19, [X31 + 0x30]
	0x02653820 ADRP X24, 0x1D87000
	0x02653824 LDRB W8, [X24 + 0x163]
	0x02653828 MOV X22, X4
	0x0265382C MOV X19, X3
	0x02653830 MOV W20, W2
	0x02653834 MOV X23, X1
	0x02653838 MOV X21, X0
	0x0265383C TBNZ X8, 0x0, 0x2653860
	0x02653840 ADRP X0, 0x1AA0000
	0x02653844 LDR X0, [X0 + 0x6A8]
	0x02653848 BL 0x1C16CF4
	0x0265384C ADRP X0, 0x1ACA000
	0x02653850 LDR X0, [X0 + 0x318]
	0x02653854 BL 0x1C16CF4
	0x02653858 MOVZ W8, 0x1
	0x0265385C STRB W8, [X24 + 0x163]
	0x02653860 LDR X8, [X21 + 0x58]
	0x02653864 CBNZ X8, 0x2653968
	0x02653868 LDR X22, [X21 + 0x30]
	0x0265386C STR X23, [X21 + 0x58]
	0x02653870 CBZ X22, 0x2653964
	0x02653874 ADRP X10, 0x1ACA000
	0x02653878 LDR X8, [X22]
	0x0265387C LDR X10, [X10 + 0x318]
	0x02653880 LDRH W9, [X8 + 0x12E]
	0x02653884 LDR X1, [X10]
	0x02653888 CBZ X9, 0x26538AC
	0x0265388C LDR X10, [X8 + 0xB0]
	0x02653890 ADD X10, X10, 0x8
	0x02653894 LDUR X11, [X10 - 0x8]
	0x02653898 CMP X11, X1
	0x0265389C B.EQ 0x26538BC
	0x026538A0 SUBS X9, X9, 0x1
	0x026538A4 ADD X10, X10, 0x10
	0x026538A8 B.NE 0x2653894
	0x026538AC MOV X0, X22
	0x026538B0 MOV W2, W31
	0x026538B4 BL 0x1C5C788
	0x026538B8 B 0x26538C8
	0x026538BC LDRSW X9, [X10]
	0x026538C0 ADD X8, X8, X9, 0x4, LSL
	0x026538C4 ADD X0, X8, 0x138
	0x026538C8 LDP X8, X1, [X0]
	0x026538CC MOV X0, X22
	0x026538D0 BLR X8
	0x026538D4 CBZ X0, 0x2653964
	0x026538D8 ADRP X10, 0x1AA0000
	0x026538DC LDR X8, [X0]
	0x026538E0 LDR X10, [X10 + 0x6A8]
	0x026538E4 LDR X23, [X21 + 0x58]
	0x026538E8 MOV X22, X0
	0x026538EC LDRH W9, [X8 + 0x12E]
	0x026538F0 LDR X1, [X10]
	0x026538F4 CBZ X9, 0x2653918
	0x026538F8 LDR X10, [X8 + 0xB0]
	0x026538FC ADD X10, X10, 0x8
	0x02653900 LDUR X11, [X10 - 0x8]
	0x02653904 CMP X11, X1
	0x02653908 B.EQ 0x2653928
	0x0265390C SUBS X9, X9, 0x1
	0x02653910 ADD X10, X10, 0x10
	0x02653914 B.NE 0x2653900
	0x02653918 MOVZ W2, 0x5
	0x0265391C MOV X0, X22
	0x02653920 BL 0x1C5C788
	0x02653924 B 0x2653938
	0x02653928 LDR W9, [X10]
	0x0265392C ADD W9, W9, 0x5
	0x02653930 ADD X8, X8, W9, 0x4, SXTW
	0x02653934 ADD X0, X8, 0x138
	0x02653938 LDP X6, X5, [X0]
	0x0265393C MOV X0, X22
	0x02653940 MOV X1, X21
	0x02653944 MOV X2, X23
	0x02653948 MOV W3, W20
	0x0265394C MOV X4, X19
	0x02653950 LDP X20, X19, [X31 + 0x30]
	0x02653954 LDP X22, X21, [X31 + 0x20]
	0x02653958 LDP X24, X23, [X31 + 0x10]
	0x0265395C LDR X30, [X31], #0x40
	0x02653960 BR X6
	0x02653964 BL 0x1C16F20
	0x02653968 MOV X0, X21
	0x0265396C BL 0x19903C0
	0x02653970 ADRP X0, 0x1ACA000
	0x02653974 LDR X19, [X21 + 0x18]
	0x02653978 LDR X0, [X0 + 0x5D0]
	0x0265397C BL 0x1C16D08
	0x02653980 MOV X1, X0
	0x02653984 MOV X0, X19
	0x02653988 MOV X2, X31
	0x0265398C BL 0x321B938
	0x02653990 MOV X19, X0
	0x02653994 ADRP X0, 0x1AA0000
	0x02653998 LDR X0, [X0 + 0x7D0]
	0x0265399C BL 0x1C16D08
	0x026539A0 BL 0x1C16F10
	0x026539A4 MOV X1, X19
	0x026539A8 MOV X2, X31
	0x026539AC MOV X20, X0
	0x026539B0 BL 0x33B2C70
	0x026539B4 MOV X0, X20
	0x026539B8 MOV X1, X22
	0x026539BC BL 0x1C16DEC
	0x026539C0 LDR X9, [X3 + 0x20]
	0x026539C4 MOV X8, X2
	0x026539C8 MOVZ W2, 0x2
	0x026539CC MOV X3, X8
	0x026539D0 LDR X9, [X9 + 0xC0]
	0x026539D4 LDR X4, [X9 + 0x100]
	0x026539D8 B 0x2653810
	0x026539DC LDR X9, [X3 + 0x20]
	0x026539E0 MOV X8, X2
	0x026539E4 MOV W2, W31
	0x026539E8 MOV X3, X8
	0x026539EC LDR X9, [X9 + 0xC0]
	0x026539F0 LDR X4, [X9 + 0x100]
	0x026539F4 B 0x2653810
	0x026539F8 LDR X9, [X3 + 0x20]
	0x026539FC MOV X8, X2
	0x02653A00 MOVZ W2, 0x1
	0x02653A04 MOV X3, X8
	0x02653A08 LDR X9, [X9 + 0xC0]
	0x02653A0C LDR X4, [X9 + 0x100]
	0x02653A10 B 0x2653810
	0x02653A14 MOV W0, W31
	0x02653A18 RET
	0x02653A1C STR X30, [X31 - 0x20]!
	0x02653A20 STP X20, X19, [X31 + 0x10]
	0x02653A24 ADRP X19, 0x1D87000
	0x02653A28 ADRP X20, 0x1ACA000
	0x02653A2C LDRB W8, [X19 + 0x164]
	0x02653A30 LDR X20, [X20 + 0x3D0]
	0x02653A34 TBNZ X8, 0x0, 0x2653A4C
	0x02653A38 ADRP X0, 0x1ACA000
	0x02653A3C LDR X0, [X0 + 0x3D0]
	0x02653A40 BL 0x1C16CF4
	0x02653A44 MOVZ W8, 0x1
	0x02653A48 STRB W8, [X19 + 0x164]
	0x02653A4C LDR X19, [X20]
	0x02653A50 LDR X8, [X19 + 0x38]
	0x02653A54 CBNZ X8, 0x2653A64
	0x02653A58 MOV X0, X19
	0x02653A5C BL 0x1C5C6E0
	0x02653A60 LDR X8, [X19 + 0x38]
	0x02653A64 LDR X0, [X8 + 0x10]
	0x02653A68 LDRB W8, [X0 + 0x135]
	0x02653A6C TBNZ X8, 0x0, 0x2653A74
	0x02653A70 BL 0x1C5C684
	0x02653A74 LDR W8, [X0 + 0xE0]
	0x02653A78 CBNZ W8, 0x2653A80
	0x02653A7C BL 0x1C16DFC
	0x02653A80 LDR X8, [X19 + 0x38]
	0x02653A84 LDR X0, [X8 + 0x10]
	0x02653A88 LDRB W8, [X0 + 0x135]
	0x02653A8C TBNZ X8, 0x0, 0x2653A94
	0x02653A90 BL 0x1C5C684
	0x02653A94 LDR X8, [X0 + 0xB8]
	0x02653A98 LDP X20, X19, [X31 + 0x10]
	0x02653A9C LDR X0, [X8]
	0x02653AA0 LDR X30, [X31], #0x20
	0x02653AA4 RET
	0x02653AA8 MOVZ W0, 0x1
	0x02653AAC RET
	0x02653AB0 MOV W0, W31
	0x02653AB4 RET
	0x02653AB8 LDP S0, S1, [X0 + 0x4C]
	0x02653ABC LDP S2, S3, [X0 + 0x54]
	0x02653AC0 RET
	0x02653AC4 STP D11, D10, [X31 - 0x50]!
	0x02653AC8 STP D9, D8, [X31 + 0x10]
	0x02653ACC STR X30, [X31 + 0x20]
	0x02653AD0 STP X22, X21, [X31 + 0x30]
	0x02653AD4 STP X20, X19, [X31 + 0x40]
	0x02653AD8 ADRP X21, 0x1D87000
	0x02653ADC LDRB W8, [X21 + 0x165]
	0x02653AE0 MOV X20, X1
	0x02653AE4 MOV V8.16B, V3.16B
	0x02653AE8 MOV V9.16B, V2.16B
	0x02653AEC MOV V10.16B, V1.16B
	0x02653AF0 MOV V11.16B, V0.16B
	0x02653AF4 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1D88000
	009 Move W8, [X22+349]
	010 Move X20, X2
	011 Move W21, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1ACB000
	018 Move X0, [X0+792]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+349], W8
	022 Move X8, [X19+80]
	023 Compare X8, 0
	024 JumpIfEqual {136}
	025 Move X8, [X8+16]
	026 Compare X8, 0
	027 JumpIfEqual {137}
	028 Move W9, [X19+77]
	029 Compare W9, 0
	030 JumpIfNotEqual {206}
	031 Move W22, [X19+76]
	032 Move X9, [X8+24]
	033 Move X0, [X8+64]
	034 Move X3, [X8+40]
	035 And W2, W21, 1
	036 Move W1, W22
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X19+80]
	039 Compare X8, 0
	040 JumpIfEqual {136}
	041 Move X9, [X8+32]
	042 Compare X9, 0
	043 JumpIfEqual {136}
	044 Move X8, [X9+64]
	045 Move X10, [X9+24]
	046 Move X3, [X9+40]
	047 And W23, W0, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Move X0, X8
	051 Move W2, W23
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {65}
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X30, [X31+16]
	062 Move X23, [X31+24]
	063 Add X31, X31, 64
	064 Return 
	065 Move X22, [X19+48]
	066 Move W8, 1
	067 Move [X19+76], W23
	068 Move [X19+32], W8
	069 Compare X22, 0
	070 JumpIfEqual {136}
	071 Move X10, 0x1ACB000
	072 Move X8, [X22]
	073 Move X10, [X10+792]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X22
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X22
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Compare X0, 0
	095 JumpIfEqual {136}
	096 Move X8, [X20+32]
	097 Move W20, [X19+72]
	098 Move X22, X0
	099 Move X9, [X8+192]
	100 Move X8, [X0]
	101 Move X23, [X9+216]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Move X1, [X23+32]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X22
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, W2
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X0, [X0+8]
	120 Move X1, X23
	121 Call 0x1C17DF8
	122 Move X4, X0
	123 Move X5, [X0+8]
	124 And W2, W21, 1
	125 Move X0, X22
	126 Move X1, X19
	127 Move W3, W20
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X30, [X31+16]
	133 Move X23, [X31+24]
	134 Add X31, X31, 64
	135 CallNoReturn X5
	136 Call 0x1C17F20
	137 Move W8, 8
	138 Move [X31+12], W8
	139 Move X0, 0x1ACB000
	140 Move X0, [X0+808]
	141 Call 0x1C17D08
	142 Add X1, X31, 12
	143 Call 0x1C17E04
	144 Move X8, [X20+32]
	145 Move X22, X0
	146 Move X0, 0x1AA1000
	147 Move X8, [X8+192]
	148 Move X21, [X8+64]
	149 Move X0, [X0+1728]
	150 Call 0x1C17D08
	151 Call 0x19913D0
	152 Move X0, X21
	153 Move X1, X31
	154 Call Type.GetTypeFromHandle, X0
	155 Move X21, X0
	156 Call 0x19913C0
	157 Move X8, [X21]
	158 Move X0, X21
	159 Move X9, [X8+744]
	160 Move X1, [X8+752]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X21, X0
	163 Move X0, 0x1ACB000
	164 Move X0, [X0+1456]
	165 Call 0x1C17D08
	166 Move X1, X22
	167 Move X2, X21
	168 Move X3, X31
	169 Call String.Format, X0, X1, X2
	170 Move X21, X0
	171 Move X0, 0x1AA1000
	172 Move X0, [X0+1456]
	173 Call 0x1C17D08
	174 Call 0x1C17F10
	175 Move X1, X21
	176 Move X2, X31
	177 Move X22, X0
	178 Call InvalidOperationException..ctor, X0, X1
	179 Move X0, X22
	180 Call 0x19913C0
	181 Move X8, [X22]
	182 Move X0, X22
	183 Move X9, [X8+408]
	184 Move X1, [X8+416]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X21, X0
	187 Move X0, X19
	188 Call 0x19913C0
	189 Move X19, [X19+24]
	190 Move X0, X21
	191 Call 0x19913C0
	192 Move X0, 0x1AA1000
	193 Move X0, [X0+2072]
	194 Call 0x1C17D08
	195 Move X23, X0
	196 Move X0, 0x1ACB000
	197 Move X0, [X0+1464]
	198 Call 0x1C17D08
	199 Move X3, X0
	200 Move W0, 1
	201 Move X1, X23
	202 Move X2, X21
	203 Move X4, X19
	204 Call 0x1991514
	205 Move X0, X22
	206 Move X0, 0x1AA1000
	207 Move X0, [X0+1456]
	208 Call 0x1C17D08
	209 Call 0x1C17F10
	210 Move X21, X0
	211 Move X0, 0x1ACB000
	212 Move X0, [X0+1472]
	213 Call 0x1C17D08
	214 Move X1, X0
	215 Move X0, X21
	216 Move X2, X31
	217 Call InvalidOperationException..ctor, X0, X1
	218 Move X0, X21
	219 Call 0x19913C0
	220 Move X8, [X21]
	221 Move X0, X21
	222 Move X9, [X8+408]
	223 Move X1, [X8+416]
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X22, X0
	226 Move X0, X19
	227 Call 0x19913C0
	228 Move X19, [X19+24]
	229 Move X0, X22
	230 Call 0x19913C0
	231 Move X0, 0x1AA1000
	232 Move X0, [X0+2072]
	233 Call 0x1C17D08
	234 Move X23, X0
	235 Move X0, 0x1ACB000
	236 Move X0, [X0+1464]
	237 Call 0x1C17D08
	238 Move X3, X0
	239 Move W0, 1
	240 Move X1, X23
	241 Move X2, X22
	242 Move X4, X19
	243 Call 0x1991514
	244 Move X0, X21
	245 Move X1, X20
	246 Call 0x1C17DEC

Method: System.Void Multiply(T value)

Disassembly:
	0x02653AF8 TBNZ X8, 0x0, 0x2653B10
	0x02653AFC ADRP X0, 0x1ACA000
	0x02653B00 LDR X0, [X0 + 0x318]
	0x02653B04 BL 0x1C16CF4
	0x02653B08 MOVZ W8, 0x1
	0x02653B0C STRB W8, [X21 + 0x165]
	0x02653B10 LDR X8, [X19 + 0x60]
	0x02653B14 CBZ X8, 0x2653C8C
	0x02653B18 LDR X8, [X8 + 0x20]
	0x02653B1C CBZ X8, 0x2653C8C
	0x02653B20 LDP S2, S3, [X19 + 0x54]
	0x02653B24 LDP S0, S1, [X19 + 0x4C]
	0x02653B28 LDR X9, [X8 + 0x18]
	0x02653B2C LDR X0, [X8 + 0x40]
	0x02653B30 LDR X1, [X8 + 0x28]
	0x02653B34 MOV V4.16B, V11.16B
	0x02653B38 MOV V5.16B, V10.16B
	0x02653B3C MOV V6.16B, V9.16B
	0x02653B40 MOV V7.16B, V8.16B
	0x02653B44 BLR X9
	0x02653B48 TBZ X0, 0x0, 0x2653B64
	0x02653B4C LDP X20, X19, [X31 + 0x40]
	0x02653B50 LDP X22, X21, [X31 + 0x30]
	0x02653B54 LDR X30, [X31 + 0x20]
	0x02653B58 LDP D9, D8, [X31 + 0x10]
	0x02653B5C LDP D11, D10, [X31], #0x50
	0x02653B60 RET
	0x02653B64 LDR X21, [X19 + 0x30]
	0x02653B68 MOVZ W8, 0x1
	0x02653B6C STP S11, S10, [X19 + 0x4C]
	0x02653B70 STP S9, S8, [X19 + 0x54]
	0x02653B74 STRB W8, [X19 + 0x20]
	0x02653B78 CBZ X21, 0x2653C8C
	0x02653B7C ADRP X10, 0x1ACA000
	0x02653B80 LDR X8, [X21]
	0x02653B84 LDR X10, [X10 + 0x318]
	0x02653B88 LDRH W9, [X8 + 0x12E]
	0x02653B8C LDR X1, [X10]
	0x02653B90 CBZ X9, 0x2653BB4
	0x02653B94 LDR X10, [X8 + 0xB0]
	0x02653B98 ADD X10, X10, 0x8
	0x02653B9C LDUR X11, [X10 - 0x8]
	0x02653BA0 CMP X11, X1
	0x02653BA4 B.EQ 0x2653BC4
	0x02653BA8 SUBS X9, X9, 0x1
	0x02653BAC ADD X10, X10, 0x10
	0x02653BB0 B.NE 0x2653B9C
	0x02653BB4 MOV X0, X21
	0x02653BB8 MOV W2, W31
	0x02653BBC BL 0x1C5C788
	0x02653BC0 B 0x2653BD0
	0x02653BC4 LDRSW X9, [X10]
	0x02653BC8 ADD X8, X8, X9, 0x4, LSL
	0x02653BCC ADD X0, X8, 0x138
	0x02653BD0 LDP X8, X1, [X0]
	0x02653BD4 MOV X0, X21
	0x02653BD8 BLR X8
	0x02653BDC CBZ X0, 0x2653C8C
	0x02653BE0 LDR X8, [X20 + 0x20]
	0x02653BE4 LDR W20, [X19 + 0x48]
	0x02653BE8 MOV X21, X0
	0x02653BEC LDR X9, [X8 + 0xC0]
	0x02653BF0 LDR X8, [X0]
	0x02653BF4 LDR X22, [X9 + 0x30]
	0x02653BF8 LDRH W9, [X8 + 0x12E]
	0x02653BFC LDR X1, [X22 + 0x20]
	0x02653C00 LDRH W2, [X22 + 0x50]
	0x02653C04 CBZ X9, 0x2653C28
	0x02653C08 LDR X10, [X8 + 0xB0]
	0x02653C0C ADD X10, X10, 0x8
	0x02653C10 LDUR X11, [X10 - 0x8]
	0x02653C14 CMP X11, X1
	0x02653C18 B.EQ 0x2653C34
	0x02653C1C SUBS X9, X9, 0x1
	0x02653C20 ADD X10, X10, 0x10
	0x02653C24 B.NE 0x2653C10
	0x02653C28 MOV X0, X21
	0x02653C2C BL 0x1C5C788
	0x02653C30 B 0x2653C44
	0x02653C34 LDR W9, [X10]
	0x02653C38 ADD W9, W9, W2
	0x02653C3C ADD X8, X8, W9, 0x4, SXTW
	0x02653C40 ADD X0, X8, 0x138
	0x02653C44 LDR X0, [X0 + 0x8]
	0x02653C48 MOV X1, X22
	0x02653C4C BL 0x1C16DF8
	0x02653C50 MOV X3, X0
	0x02653C54 LDR X4, [X0 + 0x8]
	0x02653C58 MOV X0, X21
	0x02653C5C MOV X1, X19
	0x02653C60 MOV V2.16B, V9.16B
	0x02653C64 MOV V3.16B, V8.16B
	0x02653C68 MOV W2, W20
	0x02653C6C LDP X20, X19, [X31 + 0x40]
	0x02653C70 LDP X22, X21, [X31 + 0x30]
	0x02653C74 LDR X30, [X31 + 0x20]
	0x02653C78 LDP D9, D8, [X31 + 0x10]
	0x02653C7C MOV V0.16B, V11.16B
	0x02653C80 MOV V1.16B, V10.16B
	0x02653C84 LDP D11, D10, [X31], #0x50
	0x02653C88 BR X4
	0x02653C8C BL 0x1C16F20
	0x02653C90 LDR X0, [X0 + 0x40]
	0x02653C94 RET
	0x02653C98 LDR W0, [X0 + 0x48]
	0x02653C9C RET
	0x02653CA0 STR W1, [X0 + 0x48]
	0x02653CA4 RET
	0x02653CA8 STP X30, X19, [X31 - 0x10]!
	0x02653CAC CBZ X0, 0x2653CD4
	0x02653CB0 MOV X19, X0
	0x02653CB4 LDR X0, [X1 + 0x20]
	0x02653CB8 LDRB W8, [X0 + 0x135]
	0x02653CBC TBNZ X8, 0x0, 0x2653CC4
	0x02653CC0 BL 0x1C5C684
	0x02653CC4 LDP S0, S1, [X19 + 0x4C]
	0x02653CC8 LDP S2, S3, [X19 + 0x54]
	0x02653CCC LDP X30, X19, [X31], #0x10
	0x02653CD0 RET
	0x02653CD4 BL 0x1C16F20
	0x02653CD8 LDRB W0, [X0 + 0x5C]
	0x02653CDC RET
	0x02653CE0 STP X30, X21, [X31 - 0x20]!
	0x02653CE4 STP X20, X19, [X31 + 0x10]
	0x02653CE8 ADRP X21, 0x1D87000
	0x02653CEC LDRB W8, [X21 + 0x166]
	0x02653CF0 MOV W19, W1
	0x02653CF4 MOV X20, X0
	0x02653CF8 TBNZ X8, 0x0, 0x2653D1C
	0x02653CFC ADRP X0, 0x1AA0000
	0x02653D00 LDR X0, [X0 + 0x6A8]
	0x02653D04 BL 0x1C16CF4
	0x02653D08 ADRP X0, 0x1ACA000
	0x02653D0C LDR X0, [X0 + 0x318]
	0x02653D10 BL 0x1C16CF4
	0x02653D14 MOVZ W8, 0x1
	0x02653D18 STRB W8, [X21 + 0x166]
	0x02653D1C LDRB W8, [X20 + 0x5C]
	0x02653D20 CMP W8, W19, UXTB
	0x02653D24 B.NE 0x2653D34
	0x02653D28 LDP X20, X19, [X31 + 0x10]
	0x02653D2C LDP X30, X21, [X31], #0x20
	0x02653D30 RET
	0x02653D34 LDR X21, [X20 + 0x30]
	0x02653D38 STRB W19, [X20 + 0x5C]
	0x02653D3C CBZ X21, 0x2653E1C
	0x02653D40 ADRP X10, 0x1ACA000
	0x02653D44 LDR X8, [X21]
	0x02653D48 LDR X10, [X10 + 0x318]
	0x02653D4C LDRH W9, [X8 + 0x12E]
	0x02653D50 LDR X1, [X10]
	0x02653D54 CBZ X9, 0x2653D78
	0x02653D58 LDR X10, [X8 + 0xB0]
	0x02653D5C ADD X10, X10, 0x8
	0x02653D60 LDUR X11, [X10 - 0x8]
	0x02653D64 CMP X11, X1
	0x02653D68 B.EQ 0x2653D88
	0x02653D6C SUBS X9, X9, 0x1
	0x02653D70 ADD X10, X10, 0x10
	0x02653D74 B.NE 0x2653D60
	0x02653D78 MOV X0, X21
	0x02653D7C MOV W2, W31
	0x02653D80 BL 0x1C5C788
	0x02653D84 B 0x2653D94
	0x02653D88 LDRSW X9, [X10]
	0x02653D8C ADD X8, X8, X9, 0x4, LSL
	0x02653D90 ADD X0, X8, 0x138
	0x02653D94 LDP X8, X1, [X0]
	0x02653D98 MOV X0, X21
	0x02653D9C BLR X8
	0x02653DA0 CBZ X0, 0x2653E1C
	0x02653DA4 ADRP X10, 0x1AA0000
	0x02653DA8 LDR X8, [X0]
	0x02653DAC LDR X10, [X10 + 0x6A8]
	0x02653DB0 MOV X21, X0
	0x02653DB4 LDRH W9, [X8 + 0x12E]
	0x02653DB8 LDR X1, [X10]
	0x02653DBC CBZ X9, 0x2653DE0
	0x02653DC0 LDR X10, [X8 + 0xB0]
	0x02653DC4 ADD X10, X10, 0x8
	0x02653DC8 LDUR X11, [X10 - 0x8]
	0x02653DCC CMP X11, X1
	0x02653DD0 B.EQ 0x2653DF0
	0x02653DD4 SUBS X9, X9, 0x1
	0x02653DD8 ADD X10, X10, 0x10
	0x02653DDC B.NE 0x2653DC8
	0x02653DE0 MOVZ W2, 0xA
	0x02653DE4 MOV X0, X21
	0x02653DE8 BL 0x1C5C788
	0x02653DEC B 0x2653E00
	0x02653DF0 LDR W9, [X10]
	0x02653DF4 ADD W9, W9, 0xA
	0x02653DF8 ADD X8, X8, W9, 0x4, SXTW
	0x02653DFC ADD X0, X8, 0x138
	0x02653E00 LDP X4, X3, [X0]
	0x02653E04 MOV X1, X20
	0x02653E08 MOV W2, W19
	0x02653E0C LDP X20, X19, [X31 + 0x10]
	0x02653E10 MOV X0, X21
	0x02653E14 LDP X30, X21, [X31], #0x20
	0x02653E18 BR X4
	0x02653E1C BL 0x1C16F20
	0x02653E20 LDR X8, [X0 + 0x68]
	0x02653E24 CMP X8, 0x0
	0x02653E28 CSET W0, NE
	0x02653E2C RET
	0x02653E30 STR X30, [X31 - 0x30]!
	0x02653E34 STP X22, X21, [X31 + 0x10]
	0x02653E38 STP X20, X19, [X31 + 0x20]
	0x02653E3C ADRP X22, 0x1D87000
	0x02653E40 ADRP X21, 0x1AA0000
	0x02653E44 LDRB W8, [X22 + 0x167]
	0x02653E48 LDR X21, [X21 + 0x6C0]
	0x02653E4C MOV X20, X1
	0x02653E50 MOV X19, X0
	0x02653E54 TBNZ X8, 0x0, 0x2653E78
	0x02653E58 ADRP X0, 0x1ACA000
	0x02653E5C LDR X0, [X0 + 0x310]
	0x02653E60 BL 0x1C16CF4
	0x02653E64 ADRP X0, 0x1AA0000
	0x02653E68 LDR X0, [X0 + 0x6C0]
	0x02653E6C BL 0x1C16CF4
	0x02653E70 MOVZ W8, 0x1
	0x02653E74 STRB W8, [X22 + 0x167]
	0x02653E78 LDR X8, [X20 + 0x20]
	0x02653E7C LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1D88000
	009 Move W8, [X22+350]
	010 Move X20, X2
	011 Move W21, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1ACB000
	018 Move X0, [X0+792]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+350], W8
	022 Move X8, [X19+80]
	023 Compare X8, 0
	024 JumpIfEqual {136}
	025 Move X8, [X8+24]
	026 Compare X8, 0
	027 JumpIfEqual {137}
	028 Move W9, [X19+77]
	029 Compare W9, 0
	030 JumpIfNotEqual {206}
	031 Move W22, [X19+76]
	032 Move X9, [X8+24]
	033 Move X0, [X8+64]
	034 Move X3, [X8+40]
	035 And W2, W21, 1
	036 Move W1, W22
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X19+80]
	039 Compare X8, 0
	040 JumpIfEqual {136}
	041 Move X9, [X8+32]
	042 Compare X9, 0
	043 JumpIfEqual {136}
	044 Move X8, [X9+64]
	045 Move X10, [X9+24]
	046 Move X3, [X9+40]
	047 And W23, W0, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Move X0, X8
	051 Move W2, W23
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {65}
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X30, [X31+16]
	062 Move X23, [X31+24]
	063 Add X31, X31, 64
	064 Return 
	065 Move X22, [X19+48]
	066 Move W8, 1
	067 Move [X19+76], W23
	068 Move [X19+32], W8
	069 Compare X22, 0
	070 JumpIfEqual {136}
	071 Move X10, 0x1ACB000
	072 Move X8, [X22]
	073 Move X10, [X10+792]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X22
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X22
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Compare X0, 0
	095 JumpIfEqual {136}
	096 Move X8, [X20+32]
	097 Move W20, [X19+72]
	098 Move X22, X0
	099 Move X9, [X8+192]
	100 Move X8, [X0]
	101 Move X23, [X9+224]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Move X1, [X23+32]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X22
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, W2
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X0, [X0+8]
	120 Move X1, X23
	121 Call 0x1C17DF8
	122 Move X4, X0
	123 Move X5, [X0+8]
	124 And W2, W21, 1
	125 Move X0, X22
	126 Move X1, X19
	127 Move W3, W20
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X30, [X31+16]
	133 Move X23, [X31+24]
	134 Add X31, X31, 64
	135 CallNoReturn X5
	136 Call 0x1C17F20
	137 Move W8, 9
	138 Move [X31+12], W8
	139 Move X0, 0x1ACB000
	140 Move X0, [X0+808]
	141 Call 0x1C17D08
	142 Add X1, X31, 12
	143 Call 0x1C17E04
	144 Move X8, [X20+32]
	145 Move X22, X0
	146 Move X0, 0x1AA1000
	147 Move X8, [X8+192]
	148 Move X21, [X8+64]
	149 Move X0, [X0+1728]
	150 Call 0x1C17D08
	151 Call 0x19913D0
	152 Move X0, X21
	153 Move X1, X31
	154 Call Type.GetTypeFromHandle, X0
	155 Move X21, X0
	156 Call 0x19913C0
	157 Move X8, [X21]
	158 Move X0, X21
	159 Move X9, [X8+744]
	160 Move X1, [X8+752]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X21, X0
	163 Move X0, 0x1ACB000
	164 Move X0, [X0+1456]
	165 Call 0x1C17D08
	166 Move X1, X22
	167 Move X2, X21
	168 Move X3, X31
	169 Call String.Format, X0, X1, X2
	170 Move X21, X0
	171 Move X0, 0x1AA1000
	172 Move X0, [X0+1456]
	173 Call 0x1C17D08
	174 Call 0x1C17F10
	175 Move X1, X21
	176 Move X2, X31
	177 Move X22, X0
	178 Call InvalidOperationException..ctor, X0, X1
	179 Move X0, X22
	180 Call 0x19913C0
	181 Move X8, [X22]
	182 Move X0, X22
	183 Move X9, [X8+408]
	184 Move X1, [X8+416]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X21, X0
	187 Move X0, X19
	188 Call 0x19913C0
	189 Move X19, [X19+24]
	190 Move X0, X21
	191 Call 0x19913C0
	192 Move X0, 0x1AA1000
	193 Move X0, [X0+2072]
	194 Call 0x1C17D08
	195 Move X23, X0
	196 Move X0, 0x1ACB000
	197 Move X0, [X0+1464]
	198 Call 0x1C17D08
	199 Move X3, X0
	200 Move W0, 1
	201 Move X1, X23
	202 Move X2, X21
	203 Move X4, X19
	204 Call 0x1991514
	205 Move X0, X22
	206 Move X0, 0x1AA1000
	207 Move X0, [X0+1456]
	208 Call 0x1C17D08
	209 Call 0x1C17F10
	210 Move X21, X0
	211 Move X0, 0x1ACB000
	212 Move X0, [X0+1472]
	213 Call 0x1C17D08
	214 Move X1, X0
	215 Move X0, X21
	216 Move X2, X31
	217 Call InvalidOperationException..ctor, X0, X1
	218 Move X0, X21
	219 Call 0x19913C0
	220 Move X8, [X21]
	221 Move X0, X21
	222 Move X9, [X8+408]
	223 Move X1, [X8+416]
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X22, X0
	226 Move X0, X19
	227 Call 0x19913C0
	228 Move X19, [X19+24]
	229 Move X0, X22
	230 Call 0x19913C0
	231 Move X0, 0x1AA1000
	232 Move X0, [X0+2072]
	233 Call 0x1C17D08
	234 Move X23, X0
	235 Move X0, 0x1ACB000
	236 Move X0, [X0+1464]
	237 Call 0x1C17D08
	238 Move X3, X0
	239 Move W0, 1
	240 Move X1, X23
	241 Move X2, X22
	242 Move X4, X19
	243 Call 0x1991514
	244 Move X0, X21
	245 Move X1, X20
	246 Call 0x1C17DEC

Method: SimpleJSON.JSONNode ToJSON(System.Predicate`1<SpatialSys.ObservableState.IStateObject> filter = null, System.Boolean includeSyncRate = True)

Disassembly:
	0x02653E80 ADRP X21, 0x1ACA000
	0x02653E84 LDR X8, [X8 + 0xC0]
	0x02653E88 LDR W9, [X0 + 0xE0]
	0x02653E8C LDR X20, [X8 + 0x40]
	0x02653E90 LDR X21, [X21 + 0x310]
	0x02653E94 CBNZ W9, 0x2653E9C
	0x02653E98 BL 0x1C16DFC
	0x02653E9C MOV X0, X20
	0x02653EA0 MOV X1, X31
	0x02653EA4 BL 0x338C698
	0x02653EA8 STR X0, [X19 + 0x40]
	0x02653EAC LDR X0, [X21]
	0x02653EB0 LDR W8, [X0 + 0xE0]
	0x02653EB4 CBNZ W8, 0x2653EBC
	0x02653EB8 BL 0x1C16DFC
	0x02653EBC MOV X0, X19
	0x02653EC0 LDP X20, X19, [X31 + 0x20]
	0x02653EC4 LDP X22, X21, [X31 + 0x10]
	0x02653EC8 MOV X1, X31
	0x02653ECC LDR X30, [X31], #0x30
	0x02653ED0 B 0x35CDA2C
	0x02653ED4 STR X30, [X31 - 0x40]!
	0x02653ED8 STP X24, X23, [X31 + 0x10]
	0x02653EDC STP X22, X21, [X31 + 0x20]
	0x02653EE0 STP X20, X19, [X31 + 0x30]
	0x02653EE4 ADRP X24, 0x1D87000
	0x02653EE8 ADRP X23, 0x1AA0000
	0x02653EEC LDRB W8, [X24 + 0x168]
	0x02653EF0 LDR X23, [X23 + 0x6C0]
	0x02653EF4 MOV X22, X3
	0x02653EF8 MOV X19, X2
	0x02653EFC MOV X20, X1
	0x02653F00 MOV X21, X0
	0x02653F04 TBNZ X8, 0x0, 0x2653F28
	0x02653F08 ADRP X0, 0x1ACA000
	0x02653F0C LDR X0, [X0 + 0x310]
	0x02653F10 BL 0x1C16CF4
	0x02653F14 ADRP X0, 0x1AA0000
	0x02653F18 LDR X0, [X0 + 0x6C0]
	0x02653F1C BL 0x1C16CF4
	0x02653F20 MOVZ W8, 0x1
	0x02653F24 STRB W8, [X24 + 0x168]
	0x02653F28 LDR X8, [X22 + 0x20]
	0x02653F2C LDR X0, [X23]
	0x02653F30 ADRP X23, 0x1ACA000
	0x02653F34 LDR X8, [X8 + 0xC0]
	0x02653F38 LDR W9, [X0 + 0xE0]
	0x02653F3C LDR X22, [X8 + 0x40]
	0x02653F40 LDR X23, [X23 + 0x310]
	0x02653F44 CBNZ W9, 0x2653F4C
	0x02653F48 BL 0x1C16DFC
	0x02653F4C MOV X0, X22
	0x02653F50 MOV X1, X31
	0x02653F54 BL 0x338C698
	0x02653F58 STR X0, [X21 + 0x40]
	0x02653F5C LDR X0, [X23]
	0x02653F60 LDR W8, [X0 + 0xE0]
	0x02653F64 CBNZ W8, 0x2653F6C
	0x02653F68 BL 0x1C16DFC
	0x02653F6C MOV X0, X21
	0x02653F70 MOV X1, X20
	0x02653F74 MOV X2, X19
	0x02653F78 LDP X20, X19, [X31 + 0x30]
	0x02653F7C LDP X22, X21, [X31 + 0x20]
	0x02653F80 LDP X24, X23, [X31 + 0x10]
	0x02653F84 MOV X3, X31
	0x02653F88 LDR X30, [X31], #0x40
	0x02653F8C B 0x35CDABC
	0x02653F90 STP X30, X27, [X31 - 0x50]!
	0x02653F94 STP X26, X25, [X31 + 0x10]
	0x02653F98 STP X24, X23, [X31 + 0x20]
	0x02653F9C STP X22, X21, [X31 + 0x30]
	0x02653FA0 STP X20, X19, [X31 + 0x40]
	0x02653FA4 ADRP X24, 0x1D87000
	0x02653FA8 ADRP X25, 0x1AA0000
	0x02653FAC LDRB W8, [X24 + 0x169]
	0x02653FB0 LDR X25, [X25 + 0x6C0]
	0x02653FB4 MOV X20, X4
	0x02653FB8 MOV W23, W3
	0x02653FBC MOV X21, X2
	0x02653FC0 MOV X22, X1
	0x02653FC4 MOV X19, X0
	0x02653FC8 TBNZ X8, 0x0, 0x2654010
	0x02653FCC ADRP X0, 0x1ACA000
	0x02653FD0 LDR X0, [X0 + 0x318]
	0x02653FD4 BL 0x1C16CF4
	0x02653FD8 ADRP X0, 0x1ACA000
	0x02653FDC LDR X0, [X0 + 0x320]
	0x02653FE0 BL 0x1C16CF4
	0x02653FE4 ADRP X0, 0x1AC9000
	0x02653FE8 LDR X0, [X0 + 0x2A0]
	0x02653FEC BL 0x1C16CF4
	0x02653FF0 ADRP X0, 0x1AC8000
	0x02653FF4 LDR X0, [X0 + 0xB60]
	0x02653FF8 BL 0x1C16CF4
	0x02653FFC ADRP X0, 0x1AA0000
	0x02654000 LDR X0, [X0 + 0x6C0]
	0x02654004 BL 0x1C16CF4
	0x02654008 MOVZ W8, 0x1
	0x0265400C STRB W8, [X24 + 0x169]
	0x02654010 LDR X8, [X20 + 0x20]
	0x02654014 LDR X0, [X25]
	0x02654018 LDR X8, [X8 + 0xC0]
	0x0265401C LDR W9, [X0 + 0xE0]
	0x02654020 LDR X24, [X8 + 0x40]
	0x02654024 CBNZ W9, 0x265402C
	0x02654028 BL 0x1C16DFC
	0x0265402C MOV X0, X24
	0x02654030 MOV X1, X31
	0x02654034 BL 0x338C698
	0x02654038 CBZ X0, 0x2654314
	0x0265403C MOV X1, X31
	0x02654040 MOV X24, X0
	0x02654044 BL 0x33970C4
	0x02654048 TBNZ X0, 0x0, 0x2654088
	0x0265404C ADRP X8, 0x1AC7000
	0x02654050 LDR X0, [X25]
	0x02654054 LDR X8, [X8 + 0xB60]
	0x02654058 LDR W9, [X0 + 0xE0]
	0x0265405C LDR X25, [X8]
	0x02654060 CBNZ W9, 0x2654068
	0x02654064 BL 0x1C16DFC
	0x02654068 MOV X0, X25
	0x0265406C MOV X1, X31
	0x02654070 BL 0x338C698
	0x02654074 MOV X1, X0
	0x02654078 MOV X0, X24
	0x0265407C MOV X2, X31
	0x02654080 BL 0x3395F0C
	0x02654084 TBNZ X0, 0x0, 0x2654318
	0x02654088 ADRP X8, 0x1AC8000
	0x0265408C LDR X8, [X8 + 0x2A0]
	0x02654090 ADD X24, X19, 0x60
	0x02654094 LDR X0, [X8]
	0x02654098 LDR W8, [X0 + 0xE0]
	0x0265409C CBNZ W8, 0x26540A4
	0x026540A0 BL 0x1C16DFC
	0x026540A4 LDR X8, [X20 + 0x20]
	0x026540A8 MOV X0, X24
	0x026540AC LDR X8, [X8 + 0xC0]
	0x026540B0 LDR X1, [X8 + 0x48]
	0x026540B4 BL 0x2234538
	0x026540B8 LDR X8, [X24]
	0x026540BC CBNZ X8, 0x2654200
	0x026540C0 LDR X8, [X20 + 0x20]
	0x026540C4 LDR X8, [X8 + 0xC0]
	0x026540C8 LDR X0, [X8 + 0x10]
	0x026540CC LDRB W8, [X0 + 0x135]
	0x026540D0 TBNZ X8, 0x0, 0x26540D8
	0x026540D4 BL 0x1C5C684
	0x026540D8 BL 0x1C16F10
	0x026540DC LDR X8, [X20 + 0x20]
	0x026540E0 MOV X25, X0
	0x026540E4 LDR X8, [X8 + 0xC0]
	0x026540E8 LDR X1, [X8 + 0x58]
	0x026540EC BL 0x249B4D4
	0x026540F0 LDR X8, [X20 + 0x20]
	0x026540F4 LDR X8, [X8 + 0xC0]
	0x026540F8 LDR X0, [X8 + 0x68]
	0x026540FC LDRB W8, [X0 + 0x135]
	0x02654100 TBNZ X8, 0x0, 0x2654108
	0x02654104 BL 0x1C5C684
	0x02654108 LDR W8, [X0 + 0xE0]
	0x0265410C CBNZ W8, 0x2654114
	0x02654110 BL 0x1C16DFC
	0x02654114 LDR X8, [X20 + 0x20]
	0x02654118 LDR X8, [X8 + 0xC0]
	0x0265411C LDR X0, [X8 + 0x68]
	0x02654120 LDRB W8, [X0 + 0x135]
	0x02654124 TBNZ X8, 0x0, 0x265412C
	0x02654128 BL 0x1C5C684
	0x0265412C LDR X8, [X0 + 0xB8]
	0x02654130 LDR X26, [X8 + 0x8]
	0x02654134 CBNZ X26, 0x26541F4
	0x02654138 LDR X8, [X20 + 0x20]
	0x0265413C LDR X8, [X8 + 0xC0]
	0x02654140 LDR X0, [X8 + 0x68]
	0x02654144 LDRB W8, [X0 + 0x135]
	0x02654148 TBNZ X8, 0x0, 0x2654150
	0x0265414C BL 0x1C5C684
	0x02654150 LDR W8, [X0 + 0xE0]
	0x02654154 CBNZ W8, 0x265415C
	0x02654158 BL 0x1C16DFC
	0x0265415C LDR X8, [X20 + 0x20]
	0x02654160 LDR X8, [X8 + 0xC0]
	0x02654164 LDR X0, [X8 + 0x68]
	0x02654168 LDRB W9, [X0 + 0x135]
	0x0265416C TBNZ X9, 0x0, 0x265417C
	0x02654170 BL 0x1C5C684
	0x02654174 LDR X8, [X20 + 0x20]
	0x02654178 LDR X8, [X8 + 0xC0]
	0x0265417C LDR X8, [X8 + 0x18]
	0x02654180 LDR X9, [X0 + 0xB8]
	0x02654184 LDRB W10, [X8 + 0x135]
	0x02654188 LDR X27, [X9]
	0x0265418C TBNZ X10, 0x0, 0x265419C
	0x02654190 MOV X0, X8
	0x02654194 BL 0x1C5C684
	0x02654198 MOV X8, X0
	0x0265419C MOV X0, X8
	0x026541A0 BL 0x1C16F10
	0x026541A4 LDR X8, [X20 + 0x20]
	0x026541A8 MOV X1, X27
	0x026541AC MOV X26, X0
	0x026541B0 LDR X8, [X8 + 0xC0]
	0x026541B4 LDP X2, X3, [X8 + 0x70]
	0x026541B8 BL 0x2D36D14
	0x026541BC LDR X8, [X20 + 0x20]
	0x026541C0 LDR X8, [X8 + 0xC0]
	0x026541C4 LDR X0, [X8 + 0x68]
	0x026541C8 LDRB W9, [X0 + 0x135]
	0x026541CC TBNZ X9, 0x0, 0x26541DC
	0x026541D0 BL 0x1C5C684
	0x026541D4 LDR X8, [X20 + 0x20]
	0x026541D8 LDR X8, [X8 + 0xC0]
	0x026541DC LDR X9, [X0 + 0xB8]
	0x026541E0 STR X26, [X9 + 0x8]
	0x026541E4 LDR X0, [X8 + 0x68]
	0x026541E8 LDRB W8, [X0 + 0x135]
	0x026541EC TBNZ X8, 0x0, 0x26541F4
	0x026541F0 BL 0x1C5C684
	0x026541F4 CBZ X25, 0x2654314
	0x026541F8 STR X26, [X25 + 0x20]
	0x026541FC STR X25, [X24]
	0x02654200 AND W3, W23, 0x1
	0x02654204 MOV X0, X19
	0x02654208 MOV X1, X22
	0x0265420C MOV X2, X21
	0x02654210 MOV X4, X31
	0x02654214 BL 0x35CDD8C
	0x02654218 LDR X20, [X19 + 0x30]
	0x0265421C CBZ X20, 0x2654314
	0x02654220 ADRP X10, 0x1AC9000
	0x02654224 LDR X8, [X20]
	0x02654228 LDR X10, [X10 + 0x318]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1D88000
	009 Move W8, [X22+351]
	010 Move X19, X3
	011 Move W21, W2
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x1ACB000
	018 Move X0, [X0+1024]
	019 Call 0x1C17CF4
	020 Move X0, 0x1AC9000
	021 Move X0, [X0+3008]
	022 Call 0x1C17CF4
	023 Move X0, 0x1ACB000
	024 Move X0, [X0+1032]
	025 Call 0x1C17CF4
	026 Move X0, 0x1AAB000
	027 Move X0, [X0+3784]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+351], W8
	031 Move W8, [X20+77]
	032 Compare W8, 0
	033 JumpIfEqual {71}
	034 Move TEMP, X21
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {71}
	038 Move X8, 0x1AC9000
	039 Move X8, [X8+3008]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move X21, X0
	043 Move X1, X31
	044 Call JSONObject..ctor, X0
	045 Move X8, [X20]
	046 Move X1, [X8+816]
	047 Move X9, [X8+808]
	048 Move X0, X20
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X22, X0
	051 Compare X0, 0
	052 JumpIfEqual {163}
	053 Move X8, [X19+32]
	054 Move W24, [X20+76]
	055 Move X9, [X8+192]
	056 Move X8, [X22]
	057 Move X23, [X9+232]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X23+32]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move X0, X22
	070 Call 0x1C5D788
	071 Move X8, [X20]
	072 Move X1, [X8+816]
	073 Move X9, [X8+808]
	074 Move X0, X20
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X21, X0
	077 Compare X0, 0
	078 JumpIfEqual {162}
	079 Move X8, [X19+32]
	080 Move W23, [X20+76]
	081 Move X9, [X8+192]
	082 Move X8, [X21]
	083 Move X22, [X9+232]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Move X1, [X22+32]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X21
	096 Call 0x1C5D788
	097 Move W9, [X10]
	098 Add W9, W9, W2
	099 Add X8, X8, W9
	100 Add X0, X8, 312
	101 Move X0, [X0+8]
	102 Move X1, X22
	103 Call 0x1C17DF8
	104 Move X8, [X0+8]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSET not yet implemented."
	107 Move X2, X0
	108 Move X0, X21
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X21, X0
	111 Move W9, [X10]
	112 Add W9, W9, W2
	113 Add X8, X8, W9
	114 Add X0, X8, 312
	115 Move X0, [X0+8]
	116 Move X1, X23
	117 Call 0x1C17DF8
	118 Move X8, [X0+8]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Move X2, X0
	122 Move X0, X22
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Compare X21, 0
	125 JumpIfEqual {164}
	126 Move X9, 0x1AAA000
	127 Move X8, [X21]
	128 Move X9, [X9+3784]
	129 Move X2, X0
	130 Move X3, [X8+640]
	131 Move X1, [X9]
	132 Move X9, [X8+632]
	133 Move X0, X21
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X8, 0x1ACA000
	136 Move W23, [X20+77]
	137 Move X8, [X8+1024]
	138 Move X0, [X8]
	139 Call 0x1C17F10
	140 Move X22, X0
	141 NotImplemented "Instruction UCVTF not yet implemented."
	142 Move X1, X31
	143 Call JSONNumber..ctor, X0, V0
	144 Move X9, 0x1ACA000
	145 Move X8, [X21]
	146 Move X9, [X9+1032]
	147 Move X3, [X8+640]
	148 Move X1, [X9]
	149 Move X9, [X8+632]
	150 Move X0, X21
	151 Move X2, X22
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X0, X21
	154 Move X20, [X31+48]
	155 Move X19, [X31+56]
	156 Move X22, [X31+32]
	157 Move X21, [X31+40]
	158 Move X24, [X31+16]
	159 Move X23, [X31+24]
	160 Move X30, [X31+64]
	161 Return X0
	162 Call 0x1C17F20
	163 Call 0x1C17F20
	164 Call 0x1C17F20
	165 Move X21, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, X21
	168 Call 0x3EB2AD0
	169 Move X21, X0
	170 Move X0, 0x1AA0000
	171 Move X0, [X0+2000]
	172 Call 0x1C17D08
	173 Move X8, [X21]
	174 Move X1, [X8]
	175 Call 0x1C18270
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {229}
	180 Move X21, [X21]
	181 Call 0x3EB2AE0
	182 Move X0, X20
	183 Call 0x19913C0
	184 Move X8, [X19+32]
	185 Move X0, 0x1AA0000
	186 Move X20, [X20+24]
	187 Move X8, [X8+192]
	188 Move X22, [X8+64]
	189 Move X0, [X0+1728]
	190 Call 0x1C17D08
	191 Call 0x19913D0
	192 Move X0, X22
	193 Move X1, X31
	194 Call Type.GetTypeFromHandle, X0
	195 Move X22, X0
	196 Call 0x19913C0
	197 Move X8, [X22]
	198 Move X0, X22
	199 Move X9, [X8+744]
	200 Move X1, [X8+752]
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X22, X0
	203 Move X0, 0x1ACA000
	204 Move X0, [X0+1040]
	205 Call 0x1C17D08
	206 Move X23, X0
	207 Move X0, 0x1ACA000
	208 Move X0, [X0+1048]
	209 Call 0x1C17D08
	210 Move X2, X0
	211 Move X0, X23
	212 Move X1, X20
	213 Move X3, X22
	214 Move X4, X31
	215 Call String.Concat, X0, X1, X2, X3
	216 Move X20, X0
	217 Move X0, 0x1AC9000
	218 Move X0, [X0+1632]
	219 Call 0x1C17D08
	220 Call 0x1C17F10
	221 Move X1, X20
	222 Move X2, X21
	223 Move X3, X31
	224 Move X22, X0
	225 Call StateSerializationException..ctor, X0, X1, X2
	226 Move X0, X22
	227 Move X1, X19
	228 Call 0x1C17DEC
	229 Move W0, 8
	230 Call 0x3EB2AF0
	231 Move X8, [X21]
	232 Move [X0], X8
	233 Move X1, 0x1861000
	234 Add X1, X1, 3672
	235 Move X2, X31
	236 Call 0x3EB2B00
	237 Move X21, X0
	238 Call 0x3EB2AE0
	239 Move X0, X21
	240 Call 0x1D2D690
	241 Call 0x1991590

Method: System.Void FromJSON(SimpleJSON.JSONNode json)

Disassembly:
	0x0265422C LDRH W9, [X8 + 0x12E]
	0x02654230 LDR X1, [X10]
	0x02654234 CBZ X9, 0x2654258
	0x02654238 LDR X10, [X8 + 0xB0]
	0x0265423C ADD X10, X10, 0x8
	0x02654240 LDUR X11, [X10 - 0x8]
	0x02654244 CMP X11, X1
	0x02654248 B.EQ 0x2654268
	0x0265424C SUBS X9, X9, 0x1
	0x02654250 ADD X10, X10, 0x10
	0x02654254 B.NE 0x2654240
	0x02654258 MOVZ W2, 0x1
	0x0265425C MOV X0, X20
	0x02654260 BL 0x1C5C788
	0x02654264 B 0x2654278
	0x02654268 LDR W9, [X10]
	0x0265426C ADD W9, W9, 0x1
	0x02654270 ADD X8, X8, W9, 0x4, SXTW
	0x02654274 ADD X0, X8, 0x138
	0x02654278 LDP X8, X1, [X0]
	0x0265427C MOV X0, X20
	0x02654280 BLR X8
	0x02654284 CBZ X0, 0x2654314
	0x02654288 ADRP X10, 0x1AC9000
	0x0265428C LDR X8, [X0]
	0x02654290 LDR X10, [X10 + 0x320]
	0x02654294 LDR X21, [X19 + 0x40]
	0x02654298 MOV X20, X0
	0x0265429C LDRH W9, [X8 + 0x12E]
	0x026542A0 LDR X1, [X10]
	0x026542A4 CBZ X9, 0x26542C8
	0x026542A8 LDR X10, [X8 + 0xB0]
	0x026542AC ADD X10, X10, 0x8
	0x026542B0 LDUR X11, [X10 - 0x8]
	0x026542B4 CMP X11, X1
	0x026542B8 B.EQ 0x26542D8
	0x026542BC SUBS X9, X9, 0x1
	0x026542C0 ADD X10, X10, 0x10
	0x026542C4 B.NE 0x26542B0
	0x026542C8 MOVZ W2, 0x4
	0x026542CC MOV X0, X20
	0x026542D0 BL 0x1C5C788
	0x026542D4 B 0x26542E8
	0x026542D8 LDR W9, [X10]
	0x026542DC ADD W9, W9, 0x4
	0x026542E0 ADD X8, X8, W9, 0x4, SXTW
	0x026542E4 ADD X0, X8, 0x138
	0x026542E8 LDP X8, X2, [X0]
	0x026542EC MOV X0, X20
	0x026542F0 MOV X1, X21
	0x026542F4 BLR X8
	0x026542F8 STR W0, [X19 + 0x48]
	0x026542FC LDP X20, X19, [X31 + 0x40]
	0x02654300 LDP X22, X21, [X31 + 0x30]
	0x02654304 LDP X24, X23, [X31 + 0x20]
	0x02654308 LDP X26, X25, [X31 + 0x10]
	0x0265430C LDP X30, X27, [X31], #0x50
	0x02654310 RET
	0x02654314 BL 0x1C16F20
	0x02654318 LDR X8, [X20 + 0x20]
	0x0265431C ADRP X0, 0x1A9F000
	0x02654320 LDR X8, [X8 + 0xC0]
	0x02654324 LDR X19, [X8 + 0x40]
	0x02654328 LDR X0, [X0 + 0x6C0]
	0x0265432C BL 0x1C16D08
	0x02654330 BL 0x19903D0
	0x02654334 MOV X0, X19
	0x02654338 MOV X1, X31
	0x0265433C BL 0x338C698
	0x02654340 MOV X19, X0
	0x02654344 BL 0x19903C0
	0x02654348 LDR X8, [X19]
	0x0265434C MOV X0, X19
	0x02654350 LDR X9, [X8 + 0x2E8]
	0x02654354 LDR X1, [X8 + 0x2F0]
	0x02654358 BLR X9
	0x0265435C MOV X19, X0
	0x02654360 ADRP X0, 0x1AC9000
	0x02654364 LDR X0, [X0 + 0x5A0]
	0x02654368 BL 0x1C16D08
	0x0265436C MOV X21, X0
	0x02654370 ADRP X0, 0x1AA0000
	0x02654374 LDR X0, [X0 + 0x608]
	0x02654378 BL 0x1C16D08
	0x0265437C MOV X2, X0
	0x02654380 MOV X0, X21
	0x02654384 MOV X1, X19
	0x02654388 MOV X3, X31
	0x0265438C BL 0x32274B8
	0x02654390 MOV X19, X0
	0x02654394 ADRP X0, 0x1AA7000
	0x02654398 LDR X0, [X0 + 0x578]
	0x0265439C BL 0x1C16D08
	0x026543A0 BL 0x1C16F10
	0x026543A4 MOV X1, X19
	0x026543A8 MOV X2, X31
	0x026543AC MOV X21, X0
	0x026543B0 BL 0x3314A68
	0x026543B4 MOV X0, X21
	0x026543B8 MOV X1, X20
	0x026543BC BL 0x1C16DEC
	0x026543C0 STR X30, [X31 - 0x20]!
	0x026543C4 STP X20, X19, [X31 + 0x10]
	0x026543C8 ADRP X20, 0x1D86000
	0x026543CC LDRB W8, [X20 + 0x16A]
	0x026543D0 MOV X19, X0
	0x026543D4 TBNZ X8, 0x0, 0x26543F8
	0x026543D8 ADRP X0, 0x1A9F000
	0x026543DC LDR X0, [X0 + 0x6A8]
	0x026543E0 BL 0x1C16CF4
	0x026543E4 ADRP X0, 0x1AC9000
	0x026543E8 LDR X0, [X0 + 0x318]
	0x026543EC BL 0x1C16CF4
	0x026543F0 MOVZ W8, 0x1
	0x026543F4 STRB W8, [X20 + 0x16A]
	0x026543F8 CBZ X19, 0x2654510
	0x026543FC MOV X0, X19
	0x02654400 MOV X1, X31
	0x02654404 BL 0x35D06FC
	0x02654408 LDR X8, [X19]
	0x0265440C MOV X0, X19
	0x02654410 LDR X9, [X8 + 0x358]
	0x02654414 LDR X1, [X8 + 0x360]
	0x02654418 BLR X9
	0x0265441C TBZ X0, 0x0, 0x2654470
	0x02654420 LDR X20, [X19 + 0x30]
	0x02654424 CBZ X20, 0x2654510
	0x02654428 ADRP X10, 0x1AC9000
	0x0265442C LDR X8, [X20]
	0x02654430 LDR X10, [X10 + 0x318]
	0x02654434 LDRH W9, [X8 + 0x12E]
	0x02654438 LDR X1, [X10]
	0x0265443C CBZ X9, 0x2654460
	0x02654440 LDR X10, [X8 + 0xB0]
	0x02654444 ADD X10, X10, 0x8
	0x02654448 LDUR X11, [X10 - 0x8]
	0x0265444C CMP X11, X1
	0x02654450 B.EQ 0x265447C
	0x02654454 SUBS X9, X9, 0x1
	0x02654458 ADD X10, X10, 0x10
	0x0265445C B.NE 0x2654448
	0x02654460 MOV X0, X20
	0x02654464 MOV W2, W31
	0x02654468 BL 0x1C5C788
	0x0265446C B 0x2654488
	0x02654470 LDP X20, X19, [X31 + 0x10]
	0x02654474 LDR X30, [X31], #0x20
	0x02654478 RET
	0x0265447C LDRSW X9, [X10]
	0x02654480 ADD X8, X8, X9, 0x4, LSL
	0x02654484 ADD X0, X8, 0x138
	0x02654488 LDP X8, X1, [X0]
	0x0265448C MOV X0, X20
	0x02654490 BLR X8
	0x02654494 CBZ X0, 0x2654510
	0x02654498 ADRP X10, 0x1A9F000
	0x0265449C LDR X8, [X0]
	0x026544A0 LDR X19, [X19 + 0x68]
	0x026544A4 LDR X10, [X10 + 0x6A8]
	0x026544A8 MOV X20, X0
	0x026544AC LDRH W9, [X8 + 0x12E]
	0x026544B0 LDR X1, [X10]
	0x026544B4 CBZ X9, 0x26544D8
	0x026544B8 LDR X10, [X8 + 0xB0]
	0x026544BC ADD X10, X10, 0x8
	0x026544C0 LDUR X11, [X10 - 0x8]
	0x026544C4 CMP X11, X1
	0x026544C8 B.EQ 0x26544E8
	0x026544CC SUBS X9, X9, 0x1
	0x026544D0 ADD X10, X10, 0x10
	0x026544D4 B.NE 0x26544C0
	0x026544D8 MOVZ W2, 0x7
	0x026544DC MOV X0, X20
	0x026544E0 BL 0x1C5C788
	0x026544E4 B 0x26544F8
	0x026544E8 LDR W9, [X10]
	0x026544EC ADD W9, W9, 0x7
	0x026544F0 ADD X8, X8, W9, 0x4, SXTW
	0x026544F4 ADD X0, X8, 0x138
	0x026544F8 LDP X3, X2, [X0]
	0x026544FC MOV X0, X20
	0x02654500 MOV X1, X19
	0x02654504 LDP X20, X19, [X31 + 0x10]
	0x02654508 LDR X30, [X31], #0x20
	0x0265450C BR X3
	0x02654510 BL 0x1C16F20
	0x02654514 STR X30, [X31 - 0x30]!
	0x02654518 STP X22, X21, [X31 + 0x10]
	0x0265451C STP X20, X19, [X31 + 0x20]
	0x02654520 ADRP X22, 0x1D86000
	0x02654524 LDRB W8, [X22 + 0x16B]
	0x02654528 MOV X21, X2
	0x0265452C MOV X20, X1
	0x02654530 MOV X19, X0
	0x02654534 TBNZ X8, 0x0, 0x2654564
	0x02654538 ADRP X0, 0x1A9F000
	0x0265453C LDR X0, [X0 + 0x750]
	0x02654540 BL 0x1C16CF4
	0x02654544 ADRP X0, 0x1AC9000
	0x02654548 LDR X0, [X0 + 0x3E0]
	0x0265454C BL 0x1C16CF4
	0x02654550 ADRP X0, 0x1AC9000
	0x02654554 LDR X0, [X0 + 0x3E8]
	0x02654558 BL 0x1C16CF4
	0x0265455C MOVZ W8, 0x1
	0x02654560 STRB W8, [X22 + 0x16B]
	0x02654564 CBZ X20, 0x2654824
	0x02654568 ADRP X10, 0x1A9F000
	0x0265456C LDR X8, [X20]
	0x02654570 LDR X10, [X10 + 0x750]
	0x02654574 LDRH W9, [X8 + 0x12E]
	0x02654578 LDR X1, [X10]
	0x0265457C CBZ X9, 0x26545A0
	0x02654580 LDR X10, [X8 + 0xB0]
	0x02654584 ADD X10, X10, 0x8
	0x02654588 LDUR X11, [X10 - 0x8]
	0x0265458C CMP X11, X1
	0x02654590 B.EQ 0x26545B0
	0x02654594 SUBS X9, X9, 0x1
	0x02654598 ADD X10, X10, 0x10
	0x0265459C B.NE 0x2654588
	0x026545A0 MOVZ W2, 0x2
	0x026545A4 MOV X0, X20
	0x026545A8 BL 0x1C5C788
	0x026545AC B 0x26545C0
	0x026545B0 LDR W9, [X10]
	0x026545B4 ADD W9, W9, 0x2
	0x026545B8 ADD X8, X8, W9, 0x4, SXTW
	0x026545BC ADD X0, X8, 0x138
	0x026545C0 LDP X8, X1, [X0]
	0x026545C4 MOV X0, X20
	0x026545C8 BLR X8
	0x026545CC AND W8, W0, 0xFF

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1D87000
	009 Move W8, [X22+352]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1ACA000
	018 Move X0, [X0+1032]
	019 Call 0x1C17CF4
	020 Move X0, 0x1AAA000
	021 Move X0, [X0+3784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+352], W8
	025 Compare X20, 0
	026 JumpIfEqual {162}
	027 Move X8, [X20]
	028 Move X0, X20
	029 Move X9, [X8+856]
	030 Move X1, [X8+864]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {154}
	036 Compare X21, 0
	037 JumpIfEqual {163}
	038 Move X8, [X21]
	039 Move X1, [X8+592]
	040 Move X9, [X8+584]
	041 Move X0, X21
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X9, [X20]
	044 Move X8, [X9+808]
	045 Move X1, [X9+816]
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {81}
	050 Move X0, X20
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X9, 0x1AAA000
	053 Move X8, [X21]
	054 Move X9, [X9+3784]
	055 Move X22, X0
	056 Move X1, [X9]
	057 Move X9, [X8+424]
	058 Move X2, [X8+432]
	059 Move X0, X21
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X22, 0
	062 JumpIfEqual {165}
	063 Move X8, [X19+32]
	064 Move X23, X0
	065 Move X9, [X8+192]
	066 Move X8, [X22]
	067 Move X24, [X9+240]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move X1, [X24+32]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X22
	080 Call 0x1C5D788
	081 Move X0, X20
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X22, X0
	084 Compare X0, 0
	085 JumpIfEqual {164}
	086 Move X8, [X19+32]
	087 Move X9, [X8+192]
	088 Move X8, [X22]
	089 Move X23, [X9+240]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X23+32]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X22
	102 Call 0x1C5D788
	103 Move W9, [X10]
	104 Add W9, W9, W2
	105 Add X8, X8, W9
	106 Add X0, X8, 312
	107 Move X0, [X0+8]
	108 Move X1, X23
	109 Call 0x1C17DF8
	110 Move X8, [X0+8]
	111 Move X2, X0
	112 Move X0, X22
	113 Move X1, X21
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X8, [X19+32]
	116 Move X8, [X8+192]
	117 Move X2, [X8+160]
	118 And W1, W0, 1
	119 Move X0, X20
	120 Call 0x26528D0, X0, X1
	121 Move W9, [X10]
	122 Add W9, W9, W2
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X0, [X0+8]
	126 Move X1, X24
	127 Call 0x1C17DF8
	128 Move X8, [X0+8]
	129 Move X2, X0
	130 Move X0, X22
	131 Move X1, X23
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, [X19+32]
	134 Move X8, [X8+192]
	135 Move X2, [X8+160]
	136 And W1, W0, 1
	137 Move X0, X20
	138 Call 0x26528D0, X0, X1
	139 Move X9, 0x1ACA000
	140 Move X8, [X21]
	141 Move X9, [X9+1032]
	142 Move X1, [X9]
	143 Move X9, [X8+424]
	144 Move X2, [X8+432]
	145 Move X0, X21
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Compare X0, 0
	148 JumpIfEqual {166}
	149 Move X8, [X0]
	150 Move X1, [X8+880]
	151 Move X9, [X8+872]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move [X20+77], W0
	154 Move X20, [X31+48]
	155 Move X19, [X31+56]
	156 Move X22, [X31+32]
	157 Move X21, [X31+40]
	158 Move X24, [X31+16]
	159 Move X23, [X31+24]
	160 Move X30, [X31+64]
	161 Return 
	162 Call 0x1C17F20
	163 Call 0x1C17F20
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Move X21, X0
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, X21
	170 Call 0x3EB2AD0
	171 Move X21, X0
	172 Move X0, 0x1AA0000
	173 Move X0, [X0+2000]
	174 Call 0x1C17D08
	175 Move X8, [X21]
	176 Move X1, [X8]
	177 Call 0x1C18270
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {231}
	182 Move X21, [X21]
	183 Call 0x3EB2AE0
	184 Move X0, X20
	185 Call 0x19913C0
	186 Move X8, [X19+32]
	187 Move X0, 0x1AA0000
	188 Move X20, [X20+24]
	189 Move X8, [X8+192]
	190 Move X22, [X8+64]
	191 Move X0, [X0+1728]
	192 Call 0x1C17D08
	193 Call 0x19913D0
	194 Move X0, X22
	195 Move X1, X31
	196 Call Type.GetTypeFromHandle, X0
	197 Move X22, X0
	198 Call 0x19913C0
	199 Move X8, [X22]
	200 Move X0, X22
	201 Move X9, [X8+744]
	202 Move X1, [X8+752]
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move X22, X0
	205 Move X0, 0x1ACA000
	206 Move X0, [X0+1056]
	207 Call 0x1C17D08
	208 Move X23, X0
	209 Move X0, 0x1ACA000
	210 Move X0, [X0+1048]
	211 Call 0x1C17D08
	212 Move X2, X0
	213 Move X0, X23
	214 Move X1, X20
	215 Move X3, X22
	216 Move X4, X31
	217 Call String.Concat, X0, X1, X2, X3
	218 Move X20, X0
	219 Move X0, 0x1AC9000
	220 Move X0, [X0+1632]
	221 Call 0x1C17D08
	222 Call 0x1C17F10
	223 Move X1, X20
	224 Move X2, X21
	225 Move X3, X31
	226 Move X22, X0
	227 Call StateSerializationException..ctor, X0, X1, X2
	228 Move X0, X22
	229 Move X1, X19
	230 Call 0x1C17DEC
	231 Move W0, 8
	232 Call 0x3EB2AF0
	233 Move X8, [X21]
	234 Move [X0], X8
	235 Move X1, 0x1861000
	236 Add X1, X1, 3672
	237 Move X2, X31
	238 Call 0x3EB2B00
	239 Move X21, X0
	240 Call 0x3EB2AE0
	241 Move X0, X21
	242 Call 0x1D2D690
	243 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x026545D0 SUB W8, W8, 0x1
	0x026545D4 CMP W8, 0x8
	0x026545D8 B.HI 0x2654828
	0x026545DC ADRP X9, 0xFFFFFFFFFE4D9000
	0x026545E0 ADD X9, X9, 0xD22
	0x026545E4 ADR X10, 0x10
	0x026545E8 LDRB W11, [X9, X8, LSL]
	0x026545EC ADD X10, X10, X11, 0x2, LSL
	0x026545F0 BR X10
	0x026545F4 LDR X8, [X21 + 0x20]
	0x026545F8 LDR X8, [X8 + 0xC0]
	0x026545FC LDR X0, [X8 + 0x90]
	0x02654600 LDRB W8, [X0 + 0x135]
	0x02654604 TBNZ X8, 0x0, 0x265460C
	0x02654608 BL 0x1C5C684
	0x0265460C LDR X8, [X20]
	0x02654610 LDRB W10, [X0 + 0x130]
	0x02654614 LDRB W9, [X8 + 0x130]
	0x02654618 CMP W9, W10
	0x0265461C B.CC 0x2654824
	0x02654620 LDR X9, [X8 + 0xC8]
	0x02654624 ADD X8, X9, X10, 0x3, LSL
	0x02654628 LDUR X8, [X8 - 0x8]
	0x0265462C CMP X8, X0
	0x02654630 B.NE 0x2654824
	0x02654634 LDR X8, [X21 + 0x20]
	0x02654638 LDR X8, [X8 + 0xC0]
	0x0265463C LDR X0, [X8 + 0x90]
	0x02654640 LDRB W10, [X0 + 0x135]
	0x02654644 TBNZ X10, 0x0, 0x265465C
	0x02654648 BL 0x1C5C684
	0x0265464C LDR X8, [X20]
	0x02654650 LDR X10, [X21 + 0x20]
	0x02654654 LDR X9, [X8 + 0xC8]
	0x02654658 LDR X8, [X10 + 0xC0]
	0x0265465C LDRB W10, [X0 + 0x130]
	0x02654660 LDR X1, [X8 + 0xA0]
	0x02654664 LDP X22, X21, [X31 + 0x10]
	0x02654668 ADD X9, X9, X10, 0x3, LSL
	0x0265466C LDUR X9, [X9 - 0x8]
	0x02654670 CMP X9, X0
	0x02654674 CSEL X9, X20, X31, EQ
	0x02654678 LDP S0, S1, [X9 + 0x1C]
	0x0265467C LDP S2, S3, [X9 + 0x24]
	0x02654680 MOV X0, X19
	0x02654684 LDP X20, X19, [X31 + 0x20]
	0x02654688 LDR X30, [X31], #0x30
	0x0265468C B 0x2653AC4
	0x02654690 LDP X20, X19, [X31 + 0x20]
	0x02654694 LDP X22, X21, [X31 + 0x10]
	0x02654698 LDR X30, [X31], #0x30
	0x0265469C RET
	0x026546A0 ADRP X8, 0x1AC9000
	0x026546A4 LDR X8, [X8 + 0x3E8]
	0x026546A8 LDR X9, [X20]
	0x026546AC LDR X8, [X8]
	0x026546B0 LDRB W11, [X9 + 0x130]
	0x026546B4 LDRB W10, [X8 + 0x130]
	0x026546B8 CMP W11, W10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1D87000
	007 Move W8, [X21+353]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1ACA000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move X0, 0x1ACA000
	018 Move X0, [X0+1080]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+353], W8
	022 Compare X20, 0
	023 JumpIfEqual {75}
	024 Move X0, X20
	025 Move X1, X31
	026 Call StateObjectBase.get_isSensitiveData, X0
	027 Move W22, W0
	028 Move X0, X20
	029 Move X1, X31
	030 Call "il2cpp_vm_object_is_inst", X0
	031 Compare X0, 0
	032 JumpIfEqual {75}
	033 Move X8, [X0]
	034 Move X9, [X8+424]
	035 Move X1, [X8+432]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X21, X0
	038 Move TEMP, X22
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {54}
	042 Move X8, 0x1ACA000
	043 Move X8, [X8+1080]
	044 Move X0, X21
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X1, [X8]
	050 Move X2, X31
	051 Move X30, [X31+48]
	052 Call String.Concat, X0, X1
	053 Return X0
	054 Move X8, [X19+32]
	055 Move W9, [X20+76]
	056 Add X1, X31, 12
	057 Move X8, [X8+192]
	058 Move [X31+12], W9
	059 Move X0, [X8+8]
	060 Call 0x1C17E04
	061 Move X8, 0x1ACA000
	062 Move X8, [X8+1480]
	063 Move X2, X0
	064 Move X1, X21
	065 Move X3, X31
	066 Move X8, [X8]
	067 Move X0, X8
	068 Call String.Format, X0, X1, X2
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return X0
	075 Call 0x1C17F20

Method: System.Boolean TryFindChild(System.Object childObjectKey, out SpatialSys.ObservableState.IStateObject result)

Disassembly:
	0x026546BC B.CC 0x2654824
	0x026546C0 LDR X9, [X9 + 0xC8]
	0x026546C4 ADD X9, X9, X10, 0x3, LSL

ISIL:
	001 Move W0, W31
	002 Move [X2], X31
	003 Return X0

Method: System.Void Reset(System.Boolean recursively = True)

Disassembly:
	0x026546C8 LDUR X9, [X9 - 0x8]
	0x026546CC CMP X9, X8
	0x026546D0 B.NE 0x2654824
	0x026546D4 LDRB W1, [X20 + 0x19]
	0x026546D8 MOV X0, X19
	0x026546DC LDP X20, X19, [X31 + 0x20]
	0x026546E0 LDP X22, X21, [X31 + 0x10]
	0x026546E4 LDR X30, [X31], #0x30
	0x026546E8 B 0x2653CE0
	0x026546EC LDR X8, [X21 + 0x20]
	0x026546F0 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move W1, W31
	005 Move X19, X0
	006 Move X8, [X8+192]
	007 Move X2, [X8+160]
	008 Call 0x26528D0, X0, X1
	009 Move X0, X19
	010 Move W1, W31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call 0x2652AA8, X0, X1
	014 Return 

Method: System.Void CopyTo(SpatialSys.ObservableState.IStateObject other)

Disassembly:
	0x026546F4 LDR X0, [X8 + 0x90]
	0x026546F8 LDRB W8, [X0 + 0x135]
	0x026546FC TBNZ X8, 0x0, 0x2654704
	0x02654700 BL 0x1C5C684
	0x02654704 LDR X8, [X20]
	0x02654708 LDRB W10, [X0 + 0x130]
	0x0265470C LDRB W9, [X8 + 0x130]
	0x02654710 CMP W9, W10
	0x02654714 B.CC 0x2654824
	0x02654718 LDR X9, [X8 + 0xC8]
	0x0265471C ADD X8, X9, X10, 0x3, LSL
	0x02654720 LDUR X8, [X8 - 0x8]
	0x02654724 CMP X8, X0
	0x02654728 B.NE 0x2654824
	0x0265472C LDR X8, [X21 + 0x20]
	0x02654730 LDR X8, [X8 + 0xC0]
	0x02654734 LDR X0, [X8 + 0x90]
	0x02654738 LDRB W10, [X0 + 0x135]
	0x0265473C TBNZ X10, 0x0, 0x2654754
	0x02654740 BL 0x1C5C684
	0x02654744 LDR X8, [X20]
	0x02654748 LDR X10, [X21 + 0x20]
	0x0265474C LDR X9, [X8 + 0xC8]
	0x02654750 LDR X8, [X10 + 0xC0]
	0x02654754 LDRB W10, [X0 + 0x130]
	0x02654758 LDR X1, [X8 + 0xB0]
	0x0265475C LDP X22, X21, [X31 + 0x10]
	0x02654760 ADD X9, X9, X10, 0x3, LSL
	0x02654764 LDUR X9, [X9 - 0x8]
	0x02654768 CMP X9, X0
	0x0265476C CSEL X9, X20, X31, EQ
	0x02654770 LDP S0, S1, [X9 + 0x1C]
	0x02654774 LDP S2, S3, [X9 + 0x24]
	0x02654778 MOV X0, X19
	0x0265477C LDP X20, X19, [X31 + 0x20]
	0x02654780 LDR X30, [X31], #0x30
	0x02654784 B 0x26549C4
	0x02654788 LDR X8, [X21 + 0x20]
	0x0265478C LDR X8, [X8 + 0xC0]
	0x02654790 LDR X0, [X8 + 0x90]
	0x02654794 LDRB W8, [X0 + 0x135]
	0x02654798 TBNZ X8, 0x0, 0x26547A0
	0x0265479C BL 0x1C5C684
	0x026547A0 LDR X8, [X20]
	0x026547A4 LDRB W10, [X0 + 0x130]
	0x026547A8 LDRB W9, [X8 + 0x130]
	0x026547AC CMP W9, W10
	0x026547B0 B.CC 0x2654824
	0x026547B4 LDR X9, [X8 + 0xC8]
	0x026547B8 ADD X8, X9, X10, 0x3, LSL
	0x026547BC LDUR X8, [X8 - 0x8]
	0x026547C0 CMP X8, X0
	0x026547C4 B.NE 0x2654824
	0x026547C8 LDR X8, [X21 + 0x20]
	0x026547CC LDR X8, [X8 + 0xC0]
	0x026547D0 LDR X0, [X8 + 0x90]
	0x026547D4 LDRB W10, [X0 + 0x135]
	0x026547D8 TBNZ X10, 0x0, 0x26547F0
	0x026547DC BL 0x1C5C684
	0x026547E0 LDR X8, [X20]
	0x026547E4 LDR X10, [X21 + 0x20]
	0x026547E8 LDR X9, [X8 + 0xC8]
	0x026547EC LDR X8, [X10 + 0xC0]
	0x026547F0 LDRB W10, [X0 + 0x130]
	0x026547F4 LDR X1, [X8 + 0xB8]
	0x026547F8 LDP X22, X21, [X31 + 0x10]
	0x026547FC ADD X9, X9, X10, 0x3, LSL
	0x02654800 LDUR X9, [X9 - 0x8]
	0x02654804 CMP X9, X0
	0x02654808 CSEL X9, X20, X31, EQ
	0x0265480C LDP S0, S1, [X9 + 0x1C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1D87000
	007 Move W8, [X22+354]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1AA1000
	016 Move X0, [X0+432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+354], W8
	020 Compare X19, 0
	021 JumpIfEqual {84}
	022 Move X10, 0x1AA1000
	023 Move X8, [X19]
	024 Move X10, [X10+432]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 15
	036 Move X0, X19
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 15
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {56}
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return 
	056 Move X8, [X21+32]
	057 Move X8, [X8+192]
	058 Move X1, [X8]
	059 Move W8, [X1+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {67}
	064 Move X0, X1
	065 Call 0x1C5D684
	066 Move X1, X0
	067 Move X8, [X19]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, [X21+32]
	070 Move W1, [X20+76]
	071 Move X0, X19
	072 Move X8, [X8+192]
	073 Move X2, [X8+160]
	074 Call 0x26528D0, X0, X1
	075 Move W1, [X20+77]
	076 Move X0, X19
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Call 0x2652AA8, X0, X1
	083 Return 
	084 Call 0x1C17F20
	085 Move X0, X19
	086 Call 0x1C181E0

Method: System.Void RegisterDerivedState(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.ObservationScope scope, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x02654810 LDP S2, S3, [X9 + 0x24]
	0x02654814 MOV X0, X19
	0x02654818 LDP X20, X19, [X31 + 0x20]
	0x0265481C LDR X30, [X31], #0x30
	0x02654820 B 0x2654DE0
	0x02654824 BL 0x1C16F20
	0x02654828 MOV X0, X20
	0x0265482C BL 0x19903C0
	0x02654830 ADRP X0, 0x1A9F000
	0x02654834 LDR X0, [X0 + 0x750]
	0x02654838 BL 0x1C16D08
	0x0265483C MOV X1, X0
	0x02654840 MOVZ W0, 0x2
	0x02654844 MOV X2, X20
	0x02654848 BL 0x19963F0
	0x0265484C STRB W0, [X31 + 0xC]
	0x02654850 ADRP X0, 0x1AC9000
	0x02654854 LDR X0, [X0 + 0x328]
	0x02654858 BL 0x1C16D08
	0x0265485C ADD X1, X31, 0xC
	0x02654860 BL 0x1C16E04
	0x02654864 MOV X20, X0
	0x02654868 MOV X0, X19
	0x0265486C BL 0x19903C0
	0x02654870 ADRP X0, 0x1AC9000
	0x02654874 LDR X19, [X19 + 0x18]
	0x02654878 LDR X0, [X0 + 0x3F0]
	0x0265487C BL 0x1C16D08
	0x02654880 MOV X22, X0
	0x02654884 ADRP X0, 0x1AC9000
	0x02654888 LDR X0, [X0 + 0x5A8]
	0x0265488C BL 0x1C16D08
	0x02654890 MOV X2, X0
	0x02654894 MOV X0, X22
	0x02654898 MOV X1, X20
	0x0265489C MOV X3, X19
	0x026548A0 MOV X4, X31
	0x026548A4 BL 0x3227C18
	0x026548A8 MOV X19, X0
	0x026548AC ADRP X0, 0x1A9F000
	0x026548B0 LDR X0, [X0 + 0x5B0]
	0x026548B4 BL 0x1C16D08
	0x026548B8 BL 0x1C16F10
	0x026548BC MOV X1, X19
	0x026548C0 MOV X2, X31
	0x026548C4 MOV X20, X0
	0x026548C8 BL 0x337DF1C
	0x026548CC MOV X0, X20
	0x026548D0 MOV X1, X21
	0x026548D4 BL 0x1C16DEC
	0x026548D8 STR X30, [X31 - 0x10]!
	0x026548DC CBZ X1, 0x2654910
	0x026548E0 LDR X9, [X2 + 0x20]
	0x026548E4 LDR W3, [X0 + 0x48]
	0x026548E8 LDP S2, S3, [X0 + 0x54]
	0x026548EC LDP S0, S1, [X0 + 0x4C]
	0x026548F0 LDR X9, [X9 + 0xC0]
	0x026548F4 MOV X8, X0
	0x026548F8 MOVZ W2, 0x1
	0x026548FC MOV X0, X1
	0x02654900 LDR X4, [X9 + 0xC0]
	0x02654904 MOV X1, X8
	0x02654908 LDR X30, [X31], #0x10
	0x0265490C B 0x2266650
	0x02654910 BL 0x1C16F20
	0x02654914 SUB X31, X31, 0x20
	0x02654918 STR X30, [X31 + 0x10]
	0x0265491C LDR X8, [X1 + 0x20]
	0x02654920 LDUR V0, [X0 + 0x4C]
	0x02654924 ADD X1, X31, 0x0
	0x02654928 LDR X8, [X8 + 0xC0]
	0x0265492C STR V0, [X31]
	0x02654930 LDR X0, [X8 + 0x8]
	0x02654934 BL 0x1C16E04
	0x02654938 LDR X30, [X31 + 0x10]
	0x0265493C ADD X31, X31, 0x20
	0x02654940 RET
	0x02654944 STP X30, X21, [X31 - 0x20]!
	0x02654948 STP X20, X19, [X31 + 0x10]
	0x0265494C LDR X8, [X2 + 0x20]
	0x02654950 MOV X21, X1
	0x02654954 MOV X19, X2
	0x02654958 MOV X20, X0
	0x0265495C LDR X8, [X8 + 0xC0]
	0x02654960 LDR X1, [X8 + 0x8]
	0x02654964 LDRB W8, [X1 + 0x135]
	0x02654968 TBNZ X8, 0x0, 0x2654978
	0x0265496C MOV X0, X1
	0x02654970 BL 0x1C5C684
	0x02654974 MOV X1, X0
	0x02654978 CBZ X21, 0x26549BC
	0x0265497C LDR X8, [X21]
	0x02654980 LDR X9, [X1 + 0x40]
	0x02654984 MOV X0, X21
	0x02654988 LDR X8, [X8 + 0x40]
	0x0265498C CMP X8, X9
	0x02654990 B.NE 0x26549C0
	0x02654994 BL 0x1C16E08
	0x02654998 LDR X8, [X19 + 0x20]
	0x0265499C LDP S0, S1, [X0]
	0x026549A0 LDP S2, S3, [X0 + 0x8]
	0x026549A4 MOV X0, X20
	0x026549A8 LDR X8, [X8 + 0xC0]
	0x026549AC LDP X20, X19, [X31 + 0x10]
	0x026549B0 LDR X1, [X8 + 0xA0]
	0x026549B4 LDP X30, X21, [X31], #0x20
	0x026549B8 B 0x2653AC4
	0x026549BC BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1D87000
	009 Move W8, [X24+355]
	010 Move X22, X4
	011 Move X19, X3
	012 Move W20, W2
	013 Move X23, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x1AA0000
	020 Move X0, [X0+1704]
	021 Call 0x1C17CF4
	022 Move X0, 0x1ACA000
	023 Move X0, [X0+792]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+355], W8
	027 Move X8, [X21+88]
	028 Compare X8, 0
	029 JumpIfNotEqual {97}
	030 Move X22, [X21+48]
	031 Move [X21+88], X23
	032 Compare X22, 0
	033 JumpIfEqual {96}
	034 Move X10, 0x1ACA000
	035 Move X8, [X22]
	036 Move X10, [X10+792]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X22
	048 Move W2, W31
	049 Call 0x1C5D788
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X0, X22
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X0, 0
	058 JumpIfEqual {96}
	059 Move X10, 0x1AA0000
	060 Move X8, [X0]
	061 Move X10, [X10+1704]
	062 Move X23, [X21+88]
	063 Move X22, X0
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X10]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move W2, 5
	075 Move X0, X22
	076 Call 0x1C5D788
	077 Move W9, [X10]
	078 Add W9, W9, 5
	079 Add X8, X8, W9
	080 Add X0, X8, 312
	081 Move X6, [X0]
	082 Move X5, [X0+8]
	083 Move X0, X22
	084 Move X1, X21
	085 Move X2, X23
	086 Move W3, W20
	087 Move X4, X19
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X30, [X31+64]
	095 CallNoReturn X6
	096 Call 0x1C17F20
	097 Move X0, X21
	098 Call 0x19913C0
	099 Move X0, 0x1ACA000
	100 Move X19, [X21+24]
	101 Move X0, [X0+1488]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call String.Concat, X0, X1
	107 Move X19, X0
	108 Move X0, 0x1AA0000
	109 Move X0, [X0+2000]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X1, X19
	113 Move X2, X31
	114 Move X20, X0
	115 Call Exception..ctor, X0, X1
	116 Move X0, X20
	117 Move X1, X22
	118 Call 0x1C17DEC

Method: System.Void RegisterDerivedState(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x026549C0 BL 0x1C171E0
	0x026549C4 SUB X31, X31, 0x90
	0x026549C8 STP D15, D14, [X31 + 0x20]
	0x026549CC STP D13, D12, [X31 + 0x30]
	0x026549D0 STP D11, D10, [X31 + 0x40]
	0x026549D4 STP D9, D8, [X31 + 0x50]
	0x026549D8 STP X30, X23, [X31 + 0x60]

ISIL:
	001 Move X9, [X3+32]
	002 Move X8, X2
	003 Move W2, 2
	004 Move X3, X8
	005 Move X9, [X9+192]
	006 Move X4, [X9+256]
	007 Call 0x2654810, X0, X1, X2, X3
	008 Return 

Method: System.Void RegisterDerivedStateSelf(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x026549DC STP X22, X21, [X31 + 0x70]
	0x026549E0 STP X20, X19, [X31 + 0x80]
	0x026549E4 ADRP X21, 0x1D86000
	0x026549E8 LDRB W8, [X21 + 0x16C]
	0x026549EC MOV X20, X1
	0x026549F0 MOV V8.16B, V3.16B
	0x026549F4 MOV V9.16B, V2.16B

ISIL:
	001 Move X9, [X3+32]
	002 Move X8, X2
	003 Move W2, W31
	004 Move X3, X8
	005 Move X9, [X9+192]
	006 Move X4, [X9+256]
	007 Call 0x2654810, X0, X1, X2, X3
	008 Return 

Method: System.Void RegisterDerivedStateChildren(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x026549F8 MOV V10.16B, V1.16B
	0x026549FC MOV V11.16B, V0.16B
	0x02654A00 MOV X19, X0
	0x02654A04 TBNZ X8, 0x0, 0x2654A1C
	0x02654A08 ADRP X0, 0x1AC9000
	0x02654A0C LDR X0, [X0 + 0x318]
	0x02654A10 BL 0x1C16CF4

ISIL:
	001 Move X9, [X3+32]
	002 Move X8, X2
	003 Move W2, 1
	004 Move X3, X8
	005 Move X9, [X9+192]
	006 Move X4, [X9+256]
	007 Call 0x2654810, X0, X1, X2, X3
	008 Return 

