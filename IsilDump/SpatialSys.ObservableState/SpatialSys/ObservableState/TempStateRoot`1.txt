Type: SpatialSys.ObservableState.TempStateRoot`1

Method: T get_state()

Disassembly:
	0x026B0B08 STP X22, X21, [X31 + 0x10]
	0x026B0B0C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_state(T value)

Disassembly:
	0x026B0B10 ADRP X22, 0x1D2A000
	0x026B0B14 LDRB W8, [X22 + 0x3CF]

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.IStateSerialization serializationOverride = null)

Disassembly:
	0x026B0B18 MOV X20, X2
	0x026B0B1C MOV X21, X1
	0x026B0B20 MOV X19, X0
	0x026B0B24 TBNZ X8, 0x0, 0x26B0B48
	0x026B0B28 ADRP X0, 0x1A6B000
	0x026B0B2C LDR X0, [X0 + 0x820]
	0x026B0B30 BL 0x1C16CF4
	0x026B0B34 ADRP X0, 0x1A43000
	0x026B0B38 LDR X0, [X0 + 0x638]
	0x026B0B3C BL 0x1C16CF4
	0x026B0B40 MOVZ W8, 0x1
	0x026B0B44 STRB W8, [X22 + 0x3CF]
	0x026B0B48 LDRB W8, [X19 + 0x28]
	0x026B0B4C CBZ W8, 0x26B0B94
	0x026B0B50 LDR X8, [X20 + 0x20]
	0x026B0B54 LDR W9, [X19 + 0x10]
	0x026B0B58 LDR X8, [X8 + 0xC0]
	0x026B0B5C CMP W9, 0x2
	0x026B0B60 B.NE 0x26B0BA8
	0x026B0B64 LDR X8, [X8 + 0x20]
	0x026B0B68 ADRP X9, 0x1A6B000
	0x026B0B6C LDR X9, [X9 + 0x820]
	0x026B0B70 LDR X0, [X8]
	0x026B0B74 LDR X1, [X9]
	0x026B0B78 STR X0, [X31 + 0x8]
	0x026B0B7C MOV X0, X21
	0x026B0B80 BL 0x1C16E00
	0x026B0B84 LDR X8, [X20 + 0x20]
	0x026B0B88 LDR X8, [X8 + 0xC0]
	0x026B0B8C LDR X2, [X8 + 0x20]
	0x026B0B90 B 0x26B0BD4
	0x026B0B94 LDP X20, X19, [X31 + 0x20]
	0x026B0B98 LDP X22, X21, [X31 + 0x10]
	0x026B0B9C MOV W0, W31
	0x026B0BA0 LDR X30, [X31], #0x30
	0x026B0BA4 RET
	0x026B0BA8 LDR X8, [X8 + 0x28]
	0x026B0BAC ADRP X9, 0x1A43000
	0x026B0BB0 LDR X9, [X9 + 0x638]
	0x026B0BB4 LDR X0, [X8]
	0x026B0BB8 LDR X1, [X9]
	0x026B0BBC STR X0, [X31 + 0x8]
	0x026B0BC0 MOV X0, X21
	0x026B0BC4 BL 0x1C16E00
	0x026B0BC8 LDR X8, [X20 + 0x20]
	0x026B0BCC LDR X8, [X8 + 0xC0]
	0x026B0BD0 LDR X2, [X8 + 0x28]
	0x026B0BD4 MOV X1, X0
	0x026B0BD8 MOV X0, X19
	0x026B0BDC LDR X3, [X31 + 0x8]
	0x026B0BE0 LDP X20, X19, [X31 + 0x20]
	0x026B0BE4 LDP X22, X21, [X31 + 0x10]
	0x026B0BE8 LDR X30, [X31], #0x30
	0x026B0BEC BR X3
	0x026B0BF0 STR X30, [X31 - 0x10]!
	0x026B0BF4 LDR W8, [X0 + 0x14]
	0x026B0BF8 CMP W8, 0x1
	0x026B0BFC B.EQ 0x26B0CE8
	0x026B0C00 CMP W8, 0x2
	0x026B0C04 B.NE 0x26B0D94
	0x026B0C08 CBZ X1, 0x26B0E90
	0x026B0C0C LDR W10, [X1 + 0x18]
	0x026B0C10 CMP W10, 0x1
	0x026B0C14 B.LT 0x26B0E7C
	0x026B0C18 MOV W9, W31
	0x026B0C1C MOVZ W11, 0x1
	0x026B0C20 MOVN W12, 0x0
	0x026B0C24 SUB W14, W11, 0x1
	0x026B0C28 CMP W14, W10
	0x026B0C2C B.CS 0x26B0E8C
	0x026B0C30 ADD W13, W14, 0x1
	0x026B0C34 CMP W13, W10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1D2B000
	008 Move X23, 0x1A44000
	009 Move X22, 0x1A44000
	010 Move W8, [X21+969]
	011 Move X23, [X23+3472]
	012 Move X22, [X22+3480]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x1A44000
	020 Move X0, [X0+1704]
	021 Call 0x1C17CF4
	022 Move X0, 0x1A44000
	023 Move X0, [X0+3472]
	024 Call 0x1C17CF4
	025 Move X0, 0x1A44000
	026 Move X0, [X0+3480]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+969], W8
	030 Move X0, [X23]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X21, X0
	034 Call NoOpObservationContext..ctor, X0
	035 Move X0, [X22]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X22, X0
	039 Call NoOpTypeIDManifest..ctor, X0
	040 Move X0, X19
	041 Move X1, X21
	042 Move X2, X22
	043 Move X3, X20
	044 Move X4, X31
	045 Call StateRoot..ctor, X0, X1, X2, X3
	046 Compare X19, 0
	047 JumpIfEqual {82}
	048 Move X19, [X19+72]
	049 Compare X19, 0
	050 JumpIfEqual {82}
	051 Move X10, 0x1A44000
	052 Move X8, [X19]
	053 Move X10, [X10+1704]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move W2, 1
	065 Move X0, X19
	066 Call 0x1C5D788
	067 Move W9, [X10]
	068 Add W9, W9, 1
	069 Add X8, X8, W9
	070 Add X0, X8, 312
	071 Move X3, [X0]
	072 Move X2, [X0+8]
	073 Move X0, X19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move W1, 1
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 CallNoReturn X3
	082 Call 0x1C17F20

