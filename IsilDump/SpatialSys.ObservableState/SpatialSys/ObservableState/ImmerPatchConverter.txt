Type: SpatialSys.ObservableState.ImmerPatchConverter

Method: SpatialSys.ObservableState.ImmerPatch FromStateOp(SpatialSys.ObservableState.StateOperation`1<T> op)

Disassembly:
	0x021F09C4 LDR X10, [X8 + 0xB0]
	0x021F09C8 ADD X10, X10, 0x8
	0x021F09CC LDUR X11, [X10 - 0x8]
	0x021F09D0 CMP X11, X1
	0x021F09D4 B.EQ 0x21F0B48
	0x021F09D8 SUBS X9, X9, 0x1
	0x021F09DC ADD X10, X10, 0x10
	0x021F09E0 B.NE 0x21F09CC
	0x021F09E4 MOVZ W2, 0x9
	0x021F09E8 MOV X0, X23
	0x021F09EC BL 0x1C5C788
	0x021F09F0 B 0x21F0B58
	0x021F09F4 LDRSW X9, [X10]
	0x021F09F8 ADD X8, X8, X9, 0x4, LSL
	0x021F09FC ADD X0, X8, 0x138
	0x021F0A00 LDP X8, X3, [X0]
	0x021F0A04 ADD X2, X31, 0x8
	0x021F0A08 MOV X0, X23
	0x021F0A0C MOV W1, W24
	0x021F0A10 BLR X8
	0x021F0A14 TBZ X0, 0x0, 0x21F0554
	0x021F0A18 LDR X23, [X31 + 0x8]
	0x021F0A1C CBZ X23, 0x21F0D9C
	0x021F0A20 ADRP X10, 0x1F04000
	0x021F0A24 LDR X8, [X23]
	0x021F0A28 LDR X10, [X10 + 0x1B0]
	0x021F0A2C LDRH W9, [X8 + 0x12E]
	0x021F0A30 LDR X1, [X10]
	0x021F0A34 CBZ X9, 0x21F0A58
	0x021F0A38 LDR X10, [X8 + 0xB0]
	0x021F0A3C ADD X10, X10, 0x8
	0x021F0A40 LDUR X11, [X10 - 0x8]
	0x021F0A44 CMP X11, X1
	0x021F0A48 B.EQ 0x21F0B1C
	0x021F0A4C SUBS X9, X9, 0x1
	0x021F0A50 ADD X10, X10, 0x10
	0x021F0A54 B.NE 0x21F0A40
	0x021F0A58 MOVZ W2, 0x12
	0x021F0A5C MOV X0, X23
	0x021F0A60 BL 0x1C5C788
	0x021F0A64 B 0x21F0B2C
	0x021F0A68 LDR W9, [X10]
	0x021F0A6C ADD W9, W9, 0x12
	0x021F0A70 ADD X8, X8, W9, 0x4, SXTW
	0x021F0A74 ADD X0, X8, 0x138
	0x021F0A78 LDP X8, X3, [X0]
	0x021F0A7C MOV X0, X20
	0x021F0A80 MOV X1, X31
	0x021F0A84 MOV W2, W31
	0x021F0A88 BLR X8
	0x021F0A8C ADRP X9, 0x1F0D000
	0x021F0A90 LDR X8, [X19]
	0x021F0A94 LDR X9, [X9 + 0xEC8]
	0x021F0A98 MOV X2, X0
	0x021F0A9C MOV X0, X19
	0x021F0AA0 LDR X1, [X9]
	0x021F0AA4 LDP X9, X3, [X8 + 0x1B8]
	0x021F0AA8 BLR X9
	0x021F0AAC ADRP X9, 0x1F0E000
	0x021F0AB0 LDR X8, [X19]
	0x021F0AB4 LDR X9, [X9 + 0x120]
	0x021F0AB8 MOV X0, X19
	0x021F0ABC MOV X2, X22
	0x021F0AC0 LDR X1, [X9]
	0x021F0AC4 LDP X9, X3, [X8 + 0x1B8]
	0x021F0AC8 BLR X9
	0x021F0ACC ADRP X8, 0x1F2B000
	0x021F0AD0 LDR X8, [X8 + 0xBB8]
	0x021F0AD4 LDR X0, [X8]
	0x021F0AD8 BL 0x1C16F10
	0x021F0ADC MOV X22, X0
	0x021F0AE0 MOV X1, X19
	0x021F0AE4 MOV X2, X31
	0x021F0AE8 MOV X3, X31
	0x021F0AEC BL 0x35D2AD8
	0x021F0AF0 MOV X0, X22
	0x021F0AF4 LDP X20, X19, [X31 + 0x60]
	0x021F0AF8 LDP X22, X21, [X31 + 0x50]
	0x021F0AFC LDP X24, X23, [X31 + 0x40]
	0x021F0B00 LDP X26, X25, [X31 + 0x30]
	0x021F0B04 LDP X30, X27, [X31 + 0x20]
	0x021F0B08 ADD X31, X31, 0x70
	0x021F0B0C RET
	0x021F0B10 MOV X23, X31
	0x021F0B14 MOV X24, X31
	0x021F0B18 B 0x21F0C34
	0x021F0B1C LDR W9, [X10]
	0x021F0B20 ADD W9, W9, 0x12
	0x021F0B24 ADD X8, X8, W9, 0x4, SXTW
	0x021F0B28 ADD X0, X8, 0x138
	0x021F0B2C LDP X8, X3, [X0]
	0x021F0B30 MOV X0, X23
	0x021F0B34 MOV X1, X31
	0x021F0B38 MOV W2, W31
	0x021F0B3C BLR X8
	0x021F0B40 MOV X24, X0
	0x021F0B44 B 0x21F0C34
	0x021F0B48 LDR W9, [X10]
	0x021F0B4C ADD W9, W9, 0x9
	0x021F0B50 ADD X8, X8, W9, 0x4, SXTW
	0x021F0B54 ADD X0, X8, 0x138
	0x021F0B58 LDP X8, X1, [X0]
	0x021F0B5C MOV X0, X23
	0x021F0B60 BLR X8
	0x021F0B64 CBZ X0, 0x21F0D9C
	0x021F0B68 LDR X9, [X21 + 0x38]
	0x021F0B6C LDR X8, [X0]
	0x021F0B70 LDRB W24, [X20 + 0x19]
	0x021F0B74 MOV X23, X0
	0x021F0B78 LDR X25, [X9 + 0x28]
	0x021F0B7C LDRH W9, [X8 + 0x12E]
	0x021F0B80 LDR X1, [X25 + 0x20]
	0x021F0B84 LDRH W2, [X25 + 0x50]
	0x021F0B88 CBZ X9, 0x21F0BAC
	0x021F0B8C LDR X10, [X8 + 0xB0]
	0x021F0B90 ADD X10, X10, 0x8
	0x021F0B94 LDUR X11, [X10 - 0x8]
	0x021F0B98 CMP X11, X1
	0x021F0B9C B.EQ 0x21F0BB8
	0x021F0BA0 SUBS X9, X9, 0x1
	0x021F0BA4 ADD X10, X10, 0x10
	0x021F0BA8 B.NE 0x21F0B94
	0x021F0BAC MOV X0, X23
	0x021F0BB0 BL 0x1C5C788
	0x021F0BB4 B 0x21F0BC8
	0x021F0BB8 LDR W9, [X10]
	0x021F0BBC ADD W9, W9, W2
	0x021F0BC0 ADD X8, X8, W9, 0x4, SXTW
	0x021F0BC4 ADD X0, X8, 0x138
	0x021F0BC8 LDR X0, [X0 + 0x8]
	0x021F0BCC MOV X1, X25
	0x021F0BD0 BL 0x1C16DF8
	0x021F0BD4 LDR X8, [X0 + 0x8]
	0x021F0BD8 MOV X2, X0
	0x021F0BDC MOV X0, X23
	0x021F0BE0 MOV W1, W24
	0x021F0BE4 BLR X8
	0x021F0BE8 LDR X8, [X26]
	0x021F0BEC MOV X24, X0
	0x021F0BF0 LDR W9, [X8 + 0xE0]
	0x021F0BF4 CBNZ W9, 0x21F0C00
	0x021F0BF8 MOV X0, X8
	0x021F0BFC BL 0x1C16DFC
	0x021F0C00 ADRP X8, 0x1F04000
	0x021F0C04 LDR X8, [X8 + 0x2A8]
	0x021F0C08 MOV X1, X31
	0x021F0C0C LDR X0, [X8]
	0x021F0C10 BL 0x35ACF6C
	0x021F0C14 CBZ X22, 0x21F0D9C
	0x021F0C18 LDR X8, [X22]
	0x021F0C1C MOV X1, X0
	0x021F0C20 MOV X0, X22
	0x021F0C24 LDR X9, [X8 + 0x288]
	0x021F0C28 LDR X2, [X8 + 0x290]
	0x021F0C2C BLR X9
	0x021F0C30 MOV X23, X31
	0x021F0C34 LDR X0, [X20 + 0x10]
	0x021F0C38 LDR X1, [X27]
	0x021F0C3C BL 0x1C16E00
	0x021F0C40 CBNZ X0, 0x21F0D3C
	0x021F0C44 ADRP X8, 0x1F03000
	0x021F0C48 LDR X8, [X8 + 0x6C0]
	0x021F0C4C LDR X0, [X8]
	0x021F0C50 LDR X8, [X21 + 0x38]
	0x021F0C54 LDR W9, [X0 + 0xE0]
	0x021F0C58 LDR X25, [X8 + 0x50]
	0x021F0C5C CBNZ W9, 0x21F0C64
	0x021F0C60 BL 0x1C16DFC
	0x021F0C64 MOV X0, X25
	0x021F0C68 MOV X1, X31
	0x021F0C6C BL 0x338C698
	0x021F0C70 CBZ X0, 0x21F0D9C
	0x021F0C74 LDR X8, [X0]
	0x021F0C78 LDR X9, [X8 + 0x588]
	0x021F0C7C LDR X1, [X8 + 0x590]
	0x021F0C80 BLR X9
	0x021F0C84 LDR X8, [X21 + 0x38]
	0x021F0C88 LDRB W9, [X20 + 0x19]
	0x021F0C8C TBZ X0, 0x0, 0x21F0CF0
	0x021F0C90 STRB W9, [X31 + 0x4]
	0x021F0C94 LDR X0, [X8 + 0x20]
	0x021F0C98 ADD X1, X31, 0x4
	0x021F0C9C BL 0x1C16E04
	0x021F0CA0 CBZ X0, 0x21F0D9C
	0x021F0CA4 ADRP X8, 0x1F03000
	0x021F0CA8 LDR X8, [X8 + 0xDF8]
	0x021F0CAC LDR X9, [X0]
	0x021F0CB0 LDR X8, [X8]
	0x021F0CB4 LDRB W11, [X9 + 0x130]
	0x021F0CB8 LDRB W10, [X8 + 0x130]
	0x021F0CBC CMP W11, W10
	0x021F0CC0 B.CC 0x21F0D9C
	0x021F0CC4 LDR X9, [X9 + 0xC8]
	0x021F0CC8 ADD X9, X9, X10, 0x3, LSL
	0x021F0CCC LDUR X9, [X9 - 0x8]
	0x021F0CD0 CMP X9, X8
	0x021F0CD4 B.NE 0x21F0D9C
	0x021F0CD8 ADRP X8, 0x1F2B000
	0x021F0CDC LDR X8, [X8 + 0xBE0]
	0x021F0CE0 MOV X2, X31
	0x021F0CE4 LDR X1, [X8]
	0x021F0CE8 BL 0x33B16FC
	0x021F0CEC B 0x21F0D00
	0x021F0CF0 STRB W9, [X31 + 0x14]
	0x021F0CF4 LDR X1, [X8 + 0x38]
	0x021F0CF8 ADD X0, X31, 0x14
	0x021F0CFC BL 0x3319BB4
	0x021F0D00 MOV X20, X0
	0x021F0D04 LDR X0, [X26]
	0x021F0D08 LDR W8, [X0 + 0xE0]
	0x021F0D0C CBNZ W8, 0x21F0D14
	0x021F0D10 BL 0x1C16DFC
	0x021F0D14 MOV X0, X20
	0x021F0D18 MOV X1, X31
	0x021F0D1C BL 0x35ACF6C
	0x021F0D20 CBZ X22, 0x21F0D9C
	0x021F0D24 LDR X8, [X22]
	0x021F0D28 MOV X1, X0
	0x021F0D2C MOV X0, X22
	0x021F0D30 LDR X9, [X8 + 0x288]
	0x021F0D34 LDR X2, [X8 + 0x290]
	0x021F0D38 BLR X9
	0x021F0D3C ADRP X9, 0x1F0D000
	0x021F0D40 LDR X8, [X19]
	0x021F0D44 LDR X9, [X9 + 0xEC8]
	0x021F0D48 MOV X0, X19
	0x021F0D4C MOV X2, X24
	0x021F0D50 LDR X1, [X9]
	0x021F0D54 LDP X9, X3, [X8 + 0x1B8]
	0x021F0D58 BLR X9
	0x021F0D5C ADRP X9, 0x1F0E000
	0x021F0D60 LDR X8, [X19]
	0x021F0D64 LDR X9, [X9 + 0x120]
	0x021F0D68 MOV X0, X19
	0x021F0D6C MOV X2, X22
	0x021F0D70 LDR X1, [X9]
	0x021F0D74 LDP X9, X3, [X8 + 0x1B8]
	0x021F0D78 BLR X9
	0x021F0D7C ADRP X8, 0x1F2B000
	0x021F0D80 LDR X8, [X8 + 0xBB8]
	0x021F0D84 LDR X0, [X8]
	0x021F0D88 BL 0x1C16F10
	0x021F0D8C MOV X22, X0
	0x021F0D90 MOV X1, X19
	0x021F0D94 MOV X2, X23
	0x021F0D98 B 0x21F0AE8
	0x021F0D9C BL 0x1C16F20
	0x021F0DA0 SUB X31, X31, 0xA0
	0x021F0DA4 STP D11, D10, [X31 + 0x30]
	0x021F0DA8 STP D9, D8, [X31 + 0x40]
	0x021F0DAC STR X30, [X31 + 0x50]
	0x021F0DB0 STP X26, X25, [X31 + 0x60]
	0x021F0DB4 STP X24, X23, [X31 + 0x70]
	0x021F0DB8 STP X22, X21, [X31 + 0x80]
	0x021F0DBC STP X20, X19, [X31 + 0x90]
	0x021F0DC0 LDR X8, [X1 + 0x38]
	0x021F0DC4 MOV X21, X1
	0x021F0DC8 MOV X20, X0
	0x021F0DCC CBNZ X8, 0x21F0EC4
	0x021F0DD0 ADRP X0, 0x1F03000
	0x021F0DD4 LDR X0, [X0 + 0xA28]
	0x021F0DD8 BL 0x1C16CF4
	0x021F0DDC ADRP X0, 0x1F03000
	0x021F0DE0 LDR X0, [X0 + 0xDF8]
	0x021F0DE4 BL 0x1C16CF4
	0x021F0DE8 ADRP X0, 0x1F04000
	0x021F0DEC LDR X0, [X0 + 0x1B0]
	0x021F0DF0 BL 0x1C16CF4
	0x021F0DF4 ADRP X0, 0x1F2B000
	0x021F0DF8 LDR X0, [X0 + 0xBA0]
	0x021F0DFC BL 0x1C16CF4
	0x021F0E00 ADRP X0, 0x1F2B000
	0x021F0E04 LDR X0, [X0 + 0xBA8]
	0x021F0E08 BL 0x1C16CF4
	0x021F0E0C ADRP X0, 0x1F2B000
	0x021F0E10 LDR X0, [X0 + 0xBB0]
	0x021F0E14 BL 0x1C16CF4
	0x021F0E18 ADRP X0, 0x1F2B000
	0x021F0E1C LDR X0, [X0 + 0xBB8]
	0x021F0E20 BL 0x1C16CF4
	0x021F0E24 ADRP X0, 0x1F04000
	0x021F0E28 LDR X0, [X0 + 0x460]
	0x021F0E2C BL 0x1C16CF4
	0x021F0E30 ADRP X0, 0x1F2B000
	0x021F0E34 LDR X0, [X0 + 0xBC0]
	0x021F0E38 BL 0x1C16CF4
	0x021F0E3C ADRP X0, 0x1F03000
	0x021F0E40 LDR X0, [X0 + 0x6C0]
	0x021F0E44 BL 0x1C16CF4
	0x021F0E48 ADRP X0, 0x1F2B000
	0x021F0E4C LDR X0, [X0 + 0xBC8]
	0x021F0E50 BL 0x1C16CF4
	0x021F0E54 ADRP X0, 0x1F04000
	0x021F0E58 LDR X0, [X0 + 0x2A8]
	0x021F0E5C BL 0x1C16CF4
	0x021F0E60 ADRP X0, 0x1F0D000
	0x021F0E64 LDR X0, [X0 + 0xEC8]
	0x021F0E68 BL 0x1C16CF4
	0x021F0E6C ADRP X0, 0x1F2B000
	0x021F0E70 LDR X0, [X0 + 0xBD0]
	0x021F0E74 BL 0x1C16CF4
	0x021F0E78 ADRP X0, 0x1F2B000
	0x021F0E7C LDR X0, [X0 + 0xBD8]
	0x021F0E80 BL 0x1C16CF4
	0x021F0E84 ADRP X0, 0x1F2B000
	0x021F0E88 LDR X0, [X0 + 0xBE0]
	0x021F0E8C BL 0x1C16CF4
	0x021F0E90 ADRP X0, 0x1F2B000
	0x021F0E94 LDR X0, [X0 + 0xBE8]
	0x021F0E98 BL 0x1C16CF4
	0x021F0E9C ADRP X0, 0x1F0E000
	0x021F0EA0 LDR X0, [X0 + 0xCF8]
	0x021F0EA4 BL 0x1C16CF4
	0x021F0EA8 ADRP X0, 0x1F0E000
	0x021F0EAC LDR X0, [X0 + 0x120]
	0x021F0EB0 BL 0x1C16CF4
	0x021F0EB4 LDR X8, [X21 + 0x38]
	0x021F0EB8 CBNZ X8, 0x21F0EC4
	0x021F0EBC MOV X0, X21
	0x021F0EC0 BL 0x1C5C6E0
	0x021F0EC4 STR X31, [X31 + 0x58]
	0x021F0EC8 STP X31, X31, [X31 + 0x20]
	0x021F0ECC STR X31, [X31 + 0x18]
	0x021F0ED0 CBZ X20, 0x21F17B8
	0x021F0ED4 ADRP X23, 0x1F2B000
	0x021F0ED8 LDR X23, [X23 + 0xBB0]
	0x021F0EDC LDRB W19, [X20 + 0x18]
	0x021F0EE0 LDR X0, [X23]
	0x021F0EE4 LDR W8, [X0 + 0xE0]
	0x021F0EE8 CBNZ W8, 0x21F0EF0
	0x021F0EEC BL 0x1C16DFC
	0x021F0EF0 ADD X1, X31, 0x58
	0x021F0EF4 MOV W0, W19
	0x021F0EF8 MOV X2, X31
	0x021F0EFC BL 0x35D2B04
	0x021F0F00 MOV X22, X31
	0x021F0F04 TBZ X0, 0x0, 0x21F14E0
	0x021F0F08 ADRP X8, 0x1F2B000
	0x021F0F0C LDR X0, [X20 + 0x10]
	0x021F0F10 LDR X8, [X8 + 0xBA0]
	0x021F0F14 LDR X1, [X8]
	0x021F0F18 BL 0x1C16E00
	0x021F0F1C CBZ X0, 0x21F0F28
	0x021F0F20 MOV X22, X31
	0x021F0F24 B 0x21F14E0
	0x021F0F28 ADRP X8, 0x1F2B000
	0x021F0F2C LDR X8, [X8 + 0xBC0]
	0x021F0F30 LDR X0, [X8]
	0x021F0F34 BL 0x1C16F10
	0x021F0F38 MOV X1, X31
	0x021F0F3C MOV X19, X0
	0x021F0F40 BL 0x35AE864
	0x021F0F44 ADRP X26, 0x1F04000
	0x021F0F48 LDR X26, [X26 + 0x460]
	0x021F0F4C LDR X22, [X31 + 0x58]
	0x021F0F50 LDR X0, [X26]
	0x021F0F54 LDR W8, [X0 + 0xE0]
	0x021F0F58 CBNZ W8, 0x21F0F60
	0x021F0F5C BL 0x1C16DFC
	0x021F0F60 MOV X0, X22
	0x021F0F64 MOV X1, X31
	0x021F0F68 BL 0x35ACF6C
	0x021F0F6C CBZ X19, 0x21F17B8
	0x021F0F70 ADRP X24, 0x1F0E000
	0x021F0F74 LDR X8, [X19]
	0x021F0F78 LDR X24, [X24 + 0xCF8]
	0x021F0F7C MOV X2, X0
	0x021F0F80 MOV X0, X19
	0x021F0F84 LDP X9, X3, [X8 + 0x1B8]
	0x021F0F88 LDR X1, [X24]
	0x021F0F8C BLR X9
	0x021F0F90 ADRP X25, 0x1F2B000
	0x021F0F94 LDR X0, [X31 + 0x58]
	0x021F0F98 LDR X25, [X25 + 0xBC8]
	0x021F0F9C MOV X2, X31
	0x021F0FA0 LDR X1, [X25]
	0x021F0FA4 BL 0x321BA08
	0x021F0FA8 TBZ X0, 0x0, 0x21F0FFC
	0x021F0FAC LDR X22, [X20 + 0x10]
	0x021F0FB0 CBZ X22, 0x21F17B8
	0x021F0FB4 ADRP X10, 0x1F04000
	0x021F0FB8 LDR X8, [X22]
	0x021F0FBC LDR X10, [X10 + 0x1B0]
	0x021F0FC0 LDRH W9, [X8 + 0x12E]
	0x021F0FC4 LDR X1, [X10]
	0x021F0FC8 CBZ X9, 0x21F0FEC
	0x021F0FCC LDR X10, [X8 + 0xB0]
	0x021F0FD0 ADD X10, X10, 0x8
	0x021F0FD4 LDUR X11, [X10 - 0x8]
	0x021F0FD8 CMP X11, X1
	0x021F0FDC B.EQ 0x21F11A4
	0x021F0FE0 SUBS X9, X9, 0x1
	0x021F0FE4 ADD X10, X10, 0x10
	0x021F0FE8 B.NE 0x21F0FD4
	0x021F0FEC MOVZ W2, 0x9
	0x021F0FF0 MOV X0, X22
	0x021F0FF4 BL 0x1C5C788
	0x021F0FF8 B 0x21F11B4
	0x021F0FFC ADRP X8, 0x1F2B000
	0x021F1000 LDR X0, [X31 + 0x58]
	0x021F1004 B 0x3EB17E4
	0x021F1008 MOV X2, X31
	0x021F100C LDR X1, [X8]
	0x021F1010 BL 0x321BA08
	0x021F1014 TBZ X0, 0x0, 0x21F10CC
	0x021F1018 LDR X0, [X23]
	0x021F101C LDR X22, [X20 + 0x10]
	0x021F1020 LDR W8, [X0 + 0xE0]
	0x021F1024 CBNZ W8, 0x21F102C
	0x021F1028 BL 0x1C16DFC
	0x021F102C MOV X0, X22
	0x021F1030 MOV X1, X31
	0x021F1034 BL 0x35D2B94
	0x021F1038 LDR X8, [X21 + 0x38]
	0x021F103C LDR X22, [X20 + 0x10]
	0x021F1040 MOV X21, X0
	0x021F1044 LDR X8, [X8 + 0x30]
	0x021F1048 LDRB W9, [X8 + 0x135]
	0x021F104C TBNZ X9, 0x0, 0x21F105C
	0x021F1050 MOV X0, X8
	0x021F1054 BL 0x1C5C684
	0x021F1058 MOV X8, X0
	0x021F105C CBZ X22, 0x21F106C
	0x021F1060 LDR X9, [X22]
	0x021F1064 CMP X9, X8
	0x021F1068 B.EQ 0x21F12F4
	0x021F106C LDUR V0, [X20 + 0x1C]
	0x021F1070 ADD X0, X31, 0x20
	0x021F1074 MOV X1, X31
	0x021F1078 MOV X2, X31
	0x021F107C MOV X3, X31
	0x021F1080 STR V0, [X31 + 0x2]
	0x021F1084 BL 0x21F21BC
	0x021F1088 LDR X8, [X26]
	0x021F108C MOV X20, X0
	0x021F1090 LDR W9, [X8 + 0xE0]
	0x021F1094 CBNZ W9, 0x21F10A0
	0x021F1098 MOV X0, X8
	0x021F109C BL 0x1C16DFC
	0x021F10A0 MOV X0, X20
	0x021F10A4 MOV X1, X31
	0x021F10A8 BL 0x35ACF6C
	0x021F10AC CBZ X21, 0x21F17B8
	0x021F10B0 LDR X8, [X21]
	0x021F10B4 MOV X1, X0
	0x021F10B8 MOV X0, X21
	0x021F10BC LDR X9, [X8 + 0x288]
	0x021F10C0 LDR X2, [X8 + 0x290]
	0x021F10C4 BLR X9
	0x021F10C8 B 0x21F149C
	0x021F10CC ADRP X8, 0x1F2A000
	0x021F10D0 LDR X0, [X31 + 0x58]
	0x021F10D4 LDR X8, [X8 + 0xBD0]
	0x021F10D8 MOV X2, X31
	0x021F10DC LDR X1, [X8]
	0x021F10E0 BL 0x321BA08
	0x021F10E4 TBZ X0, 0x0, 0x21F12AC
	0x021F10E8 LDR X0, [X23]
	0x021F10EC LDR X22, [X20 + 0x10]
	0x021F10F0 LDR W8, [X0 + 0xE0]
	0x021F10F4 CBNZ W8, 0x21F10FC
	0x021F10F8 BL 0x1C16DFC
	0x021F10FC MOV X0, X22
	0x021F1100 MOV X1, X31
	0x021F1104 BL 0x35D2B94
	0x021F1108 LDR X8, [X21 + 0x38]
	0x021F110C LDR X23, [X20 + 0x10]
	0x021F1110 MOV X22, X0
	0x021F1114 LDR X1, [X8 + 0x40]
	0x021F1118 LDRB W8, [X1 + 0x135]
	0x021F111C TBNZ X8, 0x0, 0x21F112C
	0x021F1120 MOV X0, X1
	0x021F1124 BL 0x1C5C684
	0x021F1128 MOV X1, X0
	0x021F112C MOV X0, X23
	0x021F1130 BL 0x1C16E00
	0x021F1134 ADRP X25, 0x1F2A000
	0x021F1138 LDR X25, [X25 + 0xBA8]
	0x021F113C CBZ X0, 0x21F1378
	0x021F1140 LDR X8, [X21 + 0x38]
	0x021F1144 LDP S9, S8, [X20 + 0x1C]
	0x021F1148 LDP S11, S10, [X20 + 0x24]
	0x021F114C MOV X23, X0
	0x021F1150 LDR X1, [X8 + 0x40]
	0x021F1154 LDRB W8, [X1 + 0x135]
	0x021F1158 TBNZ X8, 0x0, 0x21F1168
	0x021F115C MOV X0, X1
	0x021F1160 BL 0x1C5C684
	0x021F1164 MOV X1, X0
	0x021F1168 LDR X8, [X23]
	0x021F116C LDRH W9, [X8 + 0x12E]
	0x021F1170 CBZ X9, 0x21F1194
	0x021F1174 LDR X10, [X8 + 0xB0]
	0x021F1178 ADD X10, X10, 0x8
	0x021F117C LDUR X11, [X10 - 0x8]
	0x021F1180 CMP X11, X1
	0x021F1184 B.EQ 0x21F13D8
	0x021F1188 SUBS X9, X9, 0x1
	0x021F118C ADD X10, X10, 0x10
	0x021F1190 B.NE 0x21F117C
	0x021F1194 MOV X0, X23
	0x021F1198 MOV W2, W31
	0x021F119C BL 0x1C5C788
	0x021F11A0 B 0x21F13E4
	0x021F11A4 LDR W9, [X10]
	0x021F11A8 ADD W9, W9, 0x9
	0x021F11AC ADD X8, X8, W9, 0x4, SXTW
	0x021F11B0 ADD X0, X8, 0x138
	0x021F11B4 LDP X8, X1, [X0]
	0x021F11B8 MOV X0, X22
	0x021F11BC BLR X8
	0x021F11C0 CBZ X0, 0x21F17B8
	0x021F11C4 LDR X9, [X21 + 0x38]
	0x021F11C8 LDR X8, [X0]
	0x021F11CC LDP S9, S8, [X20 + 0x24]
	0x021F11D0 LDP S11, S10, [X20 + 0x1C]
	0x021F11D4 LDR X21, [X9 + 0x28]
	0x021F11D8 LDRH W9, [X8 + 0x12E]
	0x021F11DC MOV X22, X0
	0x021F11E0 LDR X1, [X21 + 0x20]
	0x021F11E4 LDRH W2, [X21 + 0x50]
	0x021F11E8 CBZ X9, 0x21F120C
	0x021F11EC LDR X10, [X8 + 0xB0]
	0x021F11F0 ADD X10, X10, 0x8
	0x021F11F4 LDUR X11, [X10 - 0x8]
	0x021F11F8 CMP X11, X1
	0x021F11FC B.EQ 0x21F1218
	0x021F1200 SUBS X9, X9, 0x1
	0x021F1204 ADD X10, X10, 0x10
	0x021F1208 B.NE 0x21F11F4
	0x021F120C MOV X0, X22
	0x021F1210 BL 0x1C5C788
	0x021F1214 B 0x21F1228
	0x021F1218 LDR W9, [X10]
	0x021F121C ADD W9, W9, W2
	0x021F1220 ADD X8, X8, W9, 0x4, SXTW
	0x021F1224 ADD X0, X8, 0x138
	0x021F1228 LDR X0, [X0 + 0x8]
	0x021F122C MOV X1, X21
	0x021F1230 BL 0x1C16DF8
	0x021F1234 LDR X8, [X0 + 0x8]
	0x021F1238 MOV X1, X0
	0x021F123C MOV X0, X22
	0x021F1240 MOV V0.16B, V11.16B
	0x021F1244 MOV V1.16B, V10.16B
	0x021F1248 MOV V2.16B, V9.16B
	0x021F124C MOV V3.16B, V8.16B
	0x021F1250 BLR X8
	0x021F1254 ADRP X9, 0x1F0C000
	0x021F1258 LDR X8, [X19]
	0x021F125C LDR X9, [X9 + 0xEC8]
	0x021F1260 MOV X2, X0
	0x021F1264 MOV X0, X19
	0x021F1268 LDR X1, [X9]
	0x021F126C LDP X9, X3, [X8 + 0x1B8]
	0x021F1270 BLR X9
	0x021F1274 LDR X0, [X23]
	0x021F1278 LDR X20, [X20 + 0x10]
	0x021F127C LDR W8, [X0 + 0xE0]
	0x021F1280 CBNZ W8, 0x21F1288
	0x021F1284 BL 0x1C16DFC
	0x021F1288 MOV X0, X20
	0x021F128C MOV X1, X31
	0x021F1290 BL 0x35D2B94
	0x021F1294 ADRP X9, 0x1F0D000
	0x021F1298 LDR X8, [X19]
	0x021F129C LDR X9, [X9 + 0x120]
	0x021F12A0 MOV X2, X0
	0x021F12A4 MOV X0, X19
	0x021F12A8 B 0x21F14B0
	0x021F12AC ADRP X8, 0x1F2A000
	0x021F12B0 LDR X1, [X31 + 0x58]
	0x021F12B4 LDR X8, [X8 + 0xBD8]
	0x021F12B8 MOV X2, X31
	0x021F12BC LDR X0, [X8]
	0x021F12C0 BL 0x321B938
	0x021F12C4 ADRP X8, 0x1F02000
	0x021F12C8 LDR X8, [X8 + 0xA28]
	0x021F12CC MOV X19, X0
	0x021F12D0 LDR X8, [X8]
	0x021F12D4 LDR W9, [X8 + 0xE0]
	0x021F12D8 CBNZ W9, 0x21F12E4
	0x021F12DC MOV X0, X8
	0x021F12E0 BL 0x1C16DFC
	0x021F12E4 MOV X0, X19
	0x021F12E8 MOV X1, X31
	0x021F12EC BL 0x3C0649C
	0x021F12F0 B 0x21F0F20
	0x021F12F4 LDR X0, [X26]
	0x021F12F8 LDR W8, [X0 + 0xE0]
	0x021F12FC CBNZ W8, 0x21F1304
	0x021F1300 BL 0x1C16DFC
	0x021F1304 LDR X0, [X25]
	0x021F1308 MOV X1, X31
	0x021F130C BL 0x35ACF6C
	0x021F1310 LDR X8, [X19]
	0x021F1314 LDR X1, [X24]
	0x021F1318 MOV X2, X0
	0x021F131C MOV X0, X19
	0x021F1320 LDP X9, X3, [X8 + 0x1B8]
	0x021F1324 BLR X9
	0x021F1328 LDR X20, [X20 + 0x10]
	0x021F132C CBZ X20, 0x21F17B8
	0x021F1330 ADRP X10, 0x1F03000
	0x021F1334 LDR X8, [X20]
	0x021F1338 LDR X10, [X10 + 0x1B0]
	0x021F133C LDRH W9, [X8 + 0x12E]
	0x021F1340 LDR X1, [X10]
	0x021F1344 CBZ X9, 0x21F1368
	0x021F1348 LDR X10, [X8 + 0xB0]
	0x021F134C ADD X10, X10, 0x8
	0x021F1350 LDUR X11, [X10 - 0x8]
	0x021F1354 CMP X11, X1
	0x021F1358 B.EQ 0x21F1458
	0x021F135C SUBS X9, X9, 0x1
	0x021F1360 ADD X10, X10, 0x10
	0x021F1364 B.NE 0x21F1350
	0x021F1368 MOVZ W2, 0x12
	0x021F136C MOV X0, X20
	0x021F1370 BL 0x1C5C788
	0x021F1374 B 0x21F1468
	0x021F1378 LDR X0, [X20 + 0x10]
	0x021F137C LDR X1, [X25]
	0x021F1380 BL 0x1C16E00
	0x021F1384 CBZ X0, 0x21F1508
	0x021F1388 LDR X23, [X20 + 0x10]
	0x021F138C CBZ X23, 0x21F17B8
	0x021F1390 ADRP X10, 0x1F03000
	0x021F1394 LDR X8, [X23]
	0x021F1398 LDR X10, [X10 + 0x1B0]
	0x021F139C LDRH W9, [X8 + 0x12E]
	0x021F13A0 LDR X1, [X10]
	0x021F13A4 CBZ X9, 0x21F13C8
	0x021F13A8 LDR X10, [X8 + 0xB0]
	0x021F13AC ADD X10, X10, 0x8
	0x021F13B0 LDUR X11, [X10 - 0x8]
	0x021F13B4 CMP X11, X1
	0x021F13B8 B.EQ 0x21F1540
	0x021F13BC SUBS X9, X9, 0x1
	0x021F13C0 ADD X10, X10, 0x10
	0x021F13C4 B.NE 0x21F13B0
	0x021F13C8 MOVZ W2, 0x9
	0x021F13CC MOV X0, X23
	0x021F13D0 BL 0x1C5C788
	0x021F13D4 B 0x21F1550
	0x021F13D8 LDRSW X9, [X10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X8, [X1+56]
	013 Move X21, X1
	014 Move X20, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {82}
	017 Move X0, 0x1F04000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0x1F04000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x1F04000
	024 Move X0, [X0+3576]
	025 Call 0x1C17CF4
	026 Move X0, 0x1F05000
	027 Move X0, [X0+432]
	028 Call 0x1C17CF4
	029 Move X0, 0x1F2C000
	030 Move X0, [X0+2976]
	031 Call 0x1C17CF4
	032 Move X0, 0x1F2C000
	033 Move X0, [X0+2984]
	034 Call 0x1C17CF4
	035 Move X0, 0x1F2C000
	036 Move X0, [X0+2992]
	037 Call 0x1C17CF4
	038 Move X0, 0x1F2C000
	039 Move X0, [X0+3000]
	040 Call 0x1C17CF4
	041 Move X0, 0x1F05000
	042 Move X0, [X0+1120]
	043 Call 0x1C17CF4
	044 Move X0, 0x1F2C000
	045 Move X0, [X0+3008]
	046 Call 0x1C17CF4
	047 Move X0, 0x1F04000
	048 Move X0, [X0+1728]
	049 Call 0x1C17CF4
	050 Move X0, 0x1F2C000
	051 Move X0, [X0+3016]
	052 Call 0x1C17CF4
	053 Move X0, 0x1F05000
	054 Move X0, [X0+680]
	055 Call 0x1C17CF4
	056 Move X0, 0x1F0E000
	057 Move X0, [X0+3784]
	058 Call 0x1C17CF4
	059 Move X0, 0x1F2C000
	060 Move X0, [X0+3024]
	061 Call 0x1C17CF4
	062 Move X0, 0x1F2C000
	063 Move X0, [X0+3032]
	064 Call 0x1C17CF4
	065 Move X0, 0x1F2C000
	066 Move X0, [X0+3040]
	067 Call 0x1C17CF4
	068 Move X0, 0x1F2C000
	069 Move X0, [X0+3048]
	070 Call 0x1C17CF4
	071 Move X0, 0x1F0F000
	072 Move X0, [X0+3320]
	073 Call 0x1C17CF4
	074 Move X0, 0x1F0F000
	075 Move X0, [X0+288]
	076 Call 0x1C17CF4
	077 Move X8, [X21+56]
	078 Compare X8, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X21
	081 Call 0x1C5D6E0
	082 Move [X31+24], X31
	083 Move [X31+20], W31
	084 Move [X31+8], X31
	085 Compare X20, 0
	086 JumpIfEqual {703}
	087 Move X24, 0x1F2C000
	088 Move X24, [X24+2992]
	089 Move W19, [X20+24]
	090 Move X0, [X24]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Add X1, X31, 24
	096 Move W0, W19
	097 Move X2, X31
	098 Call ImmerPatchConverter.TryConvertToImmerPatchType, X0, X1
	099 Move X22, X31
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {509}
	104 Move X8, 0x1F2C000
	105 Move X0, [X20+16]
	106 Move X8, [X8+2976]
	107 Move X1, [X8]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {112}
	111 Move X22, X31
	112 Move X8, 0x1F2C000
	113 Move X8, [X8+3008]
	114 Move X0, [X8]
	115 Call 0x1C17F10
	116 Move X1, X31
	117 Move X19, X0
	118 Call JSONObject..ctor, X0
	119 Move X26, 0x1F05000
	120 Move X26, [X26+1120]
	121 Move X22, [X31+24]
	122 Move X0, [X26]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X0, X22
	128 Move X1, X31
	129 Call JSONNode.op_Implicit, X0
	130 Compare X19, 0
	131 JumpIfEqual {703}
	132 Move X23, 0x1F0F000
	133 Move X8, [X19]
	134 Move X23, [X23+3320]
	135 Move X2, X0
	136 Move X0, X19
	137 Move X9, [X8+440]
	138 Move X3, [X8+448]
	139 Move X1, [X23]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X25, 0x1F2C000
	142 Move X0, [X31+24]
	143 Move X25, [X25+3016]
	144 Move X2, X31
	145 Move X1, [X25]
	146 Call String.op_Equality, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {170}
	151 Move X22, [X20+16]
	152 Compare X22, 0
	153 JumpIfEqual {703}
	154 Move X10, 0x1F05000
	155 Move X8, [X22]
	156 Move X10, [X10+432]
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Move X1, [X10]
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move W2, 9
	168 Move X0, X22
	169 Call 0x1C5D788
	170 Move X8, 0x1F2C000
	171 Move X0, [X31+24]
	172 Move X8, [X8+3048]
	173 Move X2, X31
	174 Move X1, [X8]
	175 Call String.op_Equality, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {236}
	180 Move X0, [X24]
	181 Move X22, [X20+16]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X0, X22
	187 Move X1, X31
	188 Call ImmerPatchConverter.GetPath, X0
	189 Move X8, [X21+56]
	190 Move X24, [X20+16]
	191 Move X22, X0
	192 Move X8, [X8+48]
	193 Move W9, [X8+309]
	194 Move TEMP, X9
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {201}
	198 Move X0, X8
	199 Call 0x1C5D684
	200 Move X8, X0
	201 Compare X24, 0
	202 JumpIfEqual {205}
	203 Move X9, [X24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X9, 0x1F04000
	206 Move W8, [X20+25]
	207 Move X9, [X9+2904]
	208 Move [X31+20], W8
	209 Move X0, [X9]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X8, [X21+56]
	215 Add X0, X31, 20
	216 Move X1, [X8+56]
	217 Call Boolean.ToString, X0
	218 Move X8, [X26]
	219 Move X20, X0
	220 Move W9, [X8+224]
	221 Compare W9, 0
	222 JumpIfNotEqual {225}
	223 Move X0, X8
	224 Call 0x1C17DFC
	225 Move X0, X20
	226 Move X1, X31
	227 Call JSONNode.op_Implicit, X0
	228 Compare X22, 0
	229 JumpIfEqual {703}
	230 Move X8, [X22]
	231 Move X1, X0
	232 Move X0, X22
	233 Move X9, [X8+648]
	234 Move X2, [X8+656]
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X8, 0x1F2C000
	237 Move X0, [X31+24]
	238 Move X8, [X8+3024]
	239 Move X2, X31
	240 Move X1, [X8]
	241 Call String.op_Equality, X0, X1
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {363}
	246 Move X0, [X24]
	247 Move X22, [X20+16]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X0, X22
	253 Move X1, X31
	254 Call ImmerPatchConverter.GetPath, X0
	255 Move X8, [X21+56]
	256 Move X23, [X20+16]
	257 Move X22, X0
	258 Move X1, [X8+64]
	259 Move W8, [X1+309]
	260 Move TEMP, X8
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfEqual {267}
	264 Move X0, X1
	265 Call 0x1C5D684
	266 Move X1, X0
	267 Move X0, X23
	268 Call 0x1C17E00
	269 Move X27, 0x1F2C000
	270 Move X27, [X27+2984]
	271 Compare X0, 0
	272 JumpIfEqual {415}
	273 Move X8, [X21+56]
	274 Move W24, [X20+25]
	275 Move X23, X0
	276 Move X1, [X8+64]
	277 Move W8, [X1+309]
	278 Move TEMP, X8
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfEqual {285}
	282 Move X0, X1
	283 Call 0x1C5D684
	284 Move X1, X0
	285 Move X8, [X23]
	286 NotImplemented "Instruction LDRH not yet implemented."
	287 Compare X9, 0
	288 JumpIfEqual {295}
	289 Move X10, [X8+176]
	290 Add X10, X10, 8
	291 NotImplemented "Instruction LDUR not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Subtract X9, X9, 1
	294 Add X10, X10, 16
	295 Move X0, X23
	296 Move W2, W31
	297 Call 0x1C5D788
	298 Move W9, [X10]
	299 Add W9, W9, 9
	300 Add X8, X8, W9
	301 Add X0, X8, 312
	302 Move X8, [X0]
	303 Move X1, [X0+8]
	304 Move X0, X22
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Compare X0, 0
	307 JumpIfEqual {703}
	308 Move X9, [X21+56]
	309 Move X8, [X0]
	310 Move W23, [X20+25]
	311 Move X22, X0
	312 Move X21, [X9+40]
	313 NotImplemented "Instruction LDRH not yet implemented."
	314 Move X1, [X21+32]
	315 NotImplemented "Instruction LDRH not yet implemented."
	316 Compare X9, 0
	317 JumpIfEqual {324}
	318 Move X10, [X8+176]
	319 Add X10, X10, 8
	320 NotImplemented "Instruction LDUR not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Subtract X9, X9, 1
	323 Add X10, X10, 16
	324 Move X0, X22
	325 Call 0x1C5D788
	326 Move W9, [X10]
	327 Add W9, W9, W2
	328 Add X8, X8, W9
	329 Add X0, X8, 312
	330 Move X0, [X0+8]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X1, X21
	333 NotImplemented "Instruction CSET not yet implemented."
	334 Call 0x1C17DF8
	335 Move X8, [X0+8]
	336 Move X2, X0
	337 Move X0, X22
	338 Move W1, W23
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Move X9, 0x1F0E000
	341 Move X8, [X19]
	342 Move X9, [X9+3784]
	343 Move X2, X0
	344 Move X0, X19
	345 Move X1, [X9]
	346 Move X9, [X8+440]
	347 Move X3, [X8+448]
	348 NotImplemented "Instruction BLR not yet implemented."
	349 Move X0, [X24]
	350 Move X20, [X20+16]
	351 Move W8, [X0+224]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 Move X0, X20
	356 Move X1, X31
	357 Call ImmerPatchConverter.GetPath, X0
	358 Move X9, 0x1F0F000
	359 Move X8, [X19]
	360 Move X9, [X9+288]
	361 Move X2, X0
	362 Move X0, X19
	363 Move X8, 0x1F2C000
	364 Move X1, [X31+24]
	365 Move X8, [X8+3032]
	366 Move X2, X31
	367 Move X0, [X8]
	368 Call String.Concat, X0, X1
	369 Move X8, 0x1F04000
	370 Move X8, [X8+2600]
	371 Move X19, X0
	372 Move X8, [X8]
	373 Move W9, [X8+224]
	374 Compare W9, 0
	375 JumpIfNotEqual {378}
	376 Move X0, X8
	377 Call 0x1C17DFC
	378 Move X0, X19
	379 Move X1, X31
	380 Call Debug.LogError, X0
	381 Move X0, [X26]
	382 Move W8, [X0+224]
	383 Compare W8, 0
	384 JumpIfNotEqual {386}
	385 Call 0x1C17DFC
	386 Move X0, [X25]
	387 Move X1, X31
	388 Call JSONNode.op_Implicit, X0
	389 Move X8, [X19]
	390 Move X1, [X23]
	391 Move X2, X0
	392 Move X0, X19
	393 Move X9, [X8+440]
	394 Move X3, [X8+448]
	395 NotImplemented "Instruction BLR not yet implemented."
	396 Move X20, [X20+16]
	397 Compare X20, 0
	398 JumpIfEqual {703}
	399 Move X10, 0x1F05000
	400 Move X8, [X20]
	401 Move X10, [X10+432]
	402 NotImplemented "Instruction LDRH not yet implemented."
	403 Move X1, [X10]
	404 Compare X9, 0
	405 JumpIfEqual {412}
	406 Move X10, [X8+176]
	407 Add X10, X10, 8
	408 NotImplemented "Instruction LDUR not yet implemented."
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Subtract X9, X9, 1
	411 Add X10, X10, 16
	412 Move W2, 18
	413 Move X0, X20
	414 Call 0x1C5D788
	415 Move X0, [X20+16]
	416 Move X1, [X27]
	417 Call 0x1C17E00
	418 Compare X0, 0
	419 JumpIfEqual {522}
	420 Move X23, [X20+16]
	421 Compare X23, 0
	422 JumpIfEqual {703}
	423 Move X10, 0x1F05000
	424 Move X8, [X23]
	425 Move X10, [X10+432]
	426 NotImplemented "Instruction LDRH not yet implemented."
	427 Move X1, [X10]
	428 Compare X9, 0
	429 JumpIfEqual {436}
	430 Move X10, [X8+176]
	431 Add X10, X10, 8
	432 NotImplemented "Instruction LDUR not yet implemented."
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Subtract X9, X9, 1
	435 Add X10, X10, 16
	436 Move W2, 9
	437 Move X0, X23
	438 Call 0x1C5D788
	439 NotImplemented "Instruction LDRSW not yet implemented."
	440 Add X8, X8, X9
	441 Add X0, X8, 312
	442 Move X8, [X0]
	443 Move X3, [X0+8]
	444 NotImplemented "Instruction CMP not yet implemented."
	445 NotImplemented "Instruction CSET not yet implemented."
	446 Add X2, X31, 8
	447 Move X0, X23
	448 NotImplemented "Instruction BLR not yet implemented."
	449 Move TEMP, X0
	450 And TEMP, TEMP, 1
	451 Compare TEMP, 1
	452 JumpIfNotEqual {111}
	453 Move X23, [X31+8]
	454 Compare X23, 0
	455 JumpIfEqual {703}
	456 Move X10, 0x1F04000
	457 Move X8, [X23]
	458 Move X10, [X10+432]
	459 NotImplemented "Instruction LDRH not yet implemented."
	460 Move X1, [X10]
	461 Compare X9, 0
	462 JumpIfEqual {469}
	463 Move X10, [X8+176]
	464 Add X10, X10, 8
	465 NotImplemented "Instruction LDUR not yet implemented."
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Subtract X9, X9, 1
	468 Add X10, X10, 16
	469 Move W2, 18
	470 Move X0, X23
	471 Call 0x1C5D788
	472 Move W9, [X10]
	473 Add W9, W9, 18
	474 Add X8, X8, W9
	475 Add X0, X8, 312
	476 Move X8, [X0]
	477 Move X3, [X0+8]
	478 Move X0, X20
	479 Move X1, X31
	480 Move W2, W31
	481 NotImplemented "Instruction BLR not yet implemented."
	482 Move X9, 0x1F0D000
	483 Move X8, [X19]
	484 Move X9, [X9+3784]
	485 Move X2, X0
	486 Move X0, X19
	487 Move X1, [X9]
	488 Move X9, [X8+440]
	489 Move X3, [X8+448]
	490 NotImplemented "Instruction BLR not yet implemented."
	491 Move X9, 0x1F0E000
	492 Move X8, [X19]
	493 Move X9, [X9+288]
	494 Move X0, X19
	495 Move X2, X22
	496 Move X1, [X9]
	497 Move X9, [X8+440]
	498 Move X3, [X8+448]
	499 NotImplemented "Instruction BLR not yet implemented."
	500 Move X8, 0x1F2B000
	501 Move X8, [X8+3000]
	502 Move X0, [X8]
	503 Call 0x1C17F10
	504 Move X22, X0
	505 Move X1, X19
	506 Move X2, X31
	507 Move X3, X31
	508 Call ImmerPatch..ctor, X0, X1, X2
	509 Move X0, X22
	510 Move X20, [X31+96]
	511 Move X19, [X31+104]
	512 Move X22, [X31+80]
	513 Move X21, [X31+88]
	514 Move X24, [X31+64]
	515 Move X23, [X31+72]
	516 Move X26, [X31+48]
	517 Move X25, [X31+56]
	518 Move X30, [X31+32]
	519 Move X27, [X31+40]
	520 Add X31, X31, 112
	521 Return X0
	522 Move X23, X31
	523 Move X24, X31
	524 Move W9, [X10]
	525 Add W9, W9, 18
	526 Add X8, X8, W9
	527 Add X0, X8, 312
	528 Move X8, [X0]
	529 Move X3, [X0+8]
	530 Move X0, X23
	531 Move X1, X31
	532 Move W2, W31
	533 NotImplemented "Instruction BLR not yet implemented."
	534 Move X24, X0
	535 Move W9, [X10]
	536 Add W9, W9, 9
	537 Add X8, X8, W9
	538 Add X0, X8, 312
	539 Move X8, [X0]
	540 Move X1, [X0+8]
	541 Move X0, X23
	542 NotImplemented "Instruction BLR not yet implemented."
	543 Compare X0, 0
	544 JumpIfEqual {703}
	545 Move X9, [X21+56]
	546 Move X8, [X0]
	547 Move W25, [X20+25]
	548 Move X23, X0
	549 Move X24, [X9+40]
	550 NotImplemented "Instruction LDRH not yet implemented."
	551 Move X1, [X24+32]
	552 NotImplemented "Instruction LDRH not yet implemented."
	553 Compare X9, 0
	554 JumpIfEqual {561}
	555 Move X10, [X8+176]
	556 Add X10, X10, 8
	557 NotImplemented "Instruction LDUR not yet implemented."
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Subtract X9, X9, 1
	560 Add X10, X10, 16
	561 Move X0, X23
	562 Call 0x1C5D788
	563 Move W9, [X10]
	564 Add W9, W9, W2
	565 Add X8, X8, W9
	566 Add X0, X8, 312
	567 Move X0, [X0+8]
	568 NotImplemented "Instruction CMP not yet implemented."
	569 Move X1, X24
	570 NotImplemented "Instruction CSET not yet implemented."
	571 Call 0x1C17DF8
	572 Move X8, [X0+8]
	573 Move X2, X0
	574 Move X0, X23
	575 Move W1, W25
	576 NotImplemented "Instruction BLR not yet implemented."
	577 Move X8, [X26]
	578 Move X24, X0
	579 Move W9, [X8+224]
	580 Compare W9, 0
	581 JumpIfNotEqual {584}
	582 Move X0, X8
	583 Call 0x1C17DFC
	584 Move X8, 0x1F04000
	585 Move X8, [X8+680]
	586 Move X1, X31
	587 Move X0, [X8]
	588 Call JSONNode.op_Implicit, X0
	589 Compare X22, 0
	590 JumpIfEqual {703}
	591 Move X8, [X22]
	592 Move X1, X0
	593 Move X0, X22
	594 Move X9, [X8+648]
	595 Move X2, [X8+656]
	596 NotImplemented "Instruction BLR not yet implemented."
	597 Move X23, X31
	598 Move X0, [X20+16]
	599 Move X1, [X27]
	600 Call 0x1C17E00
	601 Compare X0, 0
	602 JumpIfNotEqual {678}
	603 Move X8, 0x1F03000
	604 Move X8, [X8+1728]
	605 Move X0, [X8]
	606 Move X8, [X21+56]
	607 Move W9, [X0+224]
	608 Move X25, [X8+80]
	609 Compare W9, 0
	610 JumpIfNotEqual {612}
	611 Call 0x1C17DFC
	612 Move X0, X25
	613 Move X1, X31
	614 Call Type.GetTypeFromHandle, X0
	615 Compare X0, 0
	616 JumpIfEqual {703}
	617 Move X8, [X0]
	618 Move X9, [X8+1416]
	619 Move X1, [X8+1424]
	620 NotImplemented "Instruction BLR not yet implemented."
	621 Move W8, [X20+25]
	622 Move TEMP, X0
	623 And TEMP, TEMP, 1
	624 Compare TEMP, 1
	625 JumpIfNotEqual {649}
	626 Move X9, [X21+56]
	627 Move [X31+4], W8
	628 Add X1, X31, 4
	629 Move X0, [X9+32]
	630 Call 0x1C17E04
	631 Compare X0, 0
	632 JumpIfEqual {703}
	633 Move X8, 0x1F03000
	634 Move X8, [X8+3576]
	635 Move X9, [X0]
	636 Move X8, [X8]
	637 Move W11, [X9+304]
	638 Move W10, [X8+304]
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Move X9, [X9+200]
	641 Add X9, X9, X10
	642 NotImplemented "Instruction LDUR not yet implemented."
	643 NotImplemented "Instruction CMP not yet implemented."
	644 Move X8, 0x1F2B000
	645 Move X8, [X8+3040]
	646 Move X2, X31
	647 Move X1, [X8]
	648 Call Enum.ToString, X0, X1
	649 Move X9, 0x1F03000
	650 Move X9, [X9+2904]
	651 Move [X31+20], W8
	652 Move X0, [X9]
	653 Move W8, [X0+224]
	654 Compare W8, 0
	655 JumpIfNotEqual {657}
	656 Call 0x1C17DFC
	657 Move X8, [X21+56]
	658 Add X0, X31, 20
	659 Move X1, [X8+56]
	660 Call Boolean.ToString, X0
	661 Move X20, X0
	662 Move X0, [X26]
	663 Move W8, [X0+224]
	664 Compare W8, 0
	665 JumpIfNotEqual {667}
	666 Call 0x1C17DFC
	667 Move X0, X20
	668 Move X1, X31
	669 Call JSONNode.op_Implicit, X0
	670 Compare X22, 0
	671 JumpIfEqual {703}
	672 Move X8, [X22]
	673 Move X1, X0
	674 Move X0, X22
	675 Move X9, [X8+648]
	676 Move X2, [X8+656]
	677 NotImplemented "Instruction BLR not yet implemented."
	678 Move X9, 0x1F0D000
	679 Move X8, [X19]
	680 Move X9, [X9+3784]
	681 Move X0, X19
	682 Move X2, X24
	683 Move X1, [X9]
	684 Move X9, [X8+440]
	685 Move X3, [X8+448]
	686 NotImplemented "Instruction BLR not yet implemented."
	687 Move X9, 0x1F0E000
	688 Move X8, [X19]
	689 Move X9, [X9+288]
	690 Move X0, X19
	691 Move X2, X22
	692 Move X1, [X9]
	693 Move X9, [X8+440]
	694 Move X3, [X8+448]
	695 NotImplemented "Instruction BLR not yet implemented."
	696 Move X8, 0x1F2B000
	697 Move X8, [X8+3000]
	698 Move X0, [X8]
	699 Call 0x1C17F10
	700 Move X22, X0
	701 Move X1, X19
	702 Move X2, X23
	703 Call 0x1C17F20

Method: System.Boolean TryConvertToImmerPatchType(SpatialSys.ObservableState.OperationType operationType, out System.String immerPatchOpType)

Disassembly:
	0x035D3B04 ADRP X26, 0xB65000
	0x035D3B08 ADRP X27, 0xB65000
	0x035D3B0C LDR X25, [X25 + 0xB28]
	0x035D3B10 LDR X26, [X26 + 0xAA8]
	0x035D3B14 LDR X27, [X27 + 0xA38]
	0x035D3B18 LDR X0, [X23]
	0x035D3B1C ADRP X28, 0xB65000
	0x035D3B20 ADRP X23, 0xB65000
	0x035D3B24 ADRP X29, 0xB65000
	0x035D3B28 LDR X20, [X8]
	0x035D3B2C LDR X28, [X28 + 0x988]
	0x035D3B30 LDR X23, [X23 + 0x818]
	0x035D3B34 LDR X29, [X29 + 0xB30]
	0x035D3B38 BL 0x1C16F10
	0x035D3B3C LDR X2, [X21]
	0x035D3B40 MOV X1, X20
	0x035D3B44 MOV X3, X31
	0x035D3B48 MOV X21, X0
	0x035D3B4C BL 0x2D37FC4
	0x035D3B50 STR X21, [X19 + 0x18]
	0x035D3B54 LDR X8, [X22]
	0x035D3B58 LDR X0, [X24]
	0x035D3B5C LDR X8, [X8 + 0xB8]
	0x035D3B60 LDR X20, [X8]
	0x035D3B64 BL 0x1C16F10
	0x035D3B68 LDR X2, [X25]
	0x035D3B6C MOV X1, X20
	0x035D3B70 MOV X3, X31
	0x035D3B74 MOV X21, X0
	0x035D3B78 BL 0x2D37E5C
	0x035D3B7C STR X21, [X19 + 0x20]
	0x035D3B80 LDR X1, [X26]
	0x035D3B84 MOV X0, X19
	0x035D3B88 BL 0x22337F4
	0x035D3B8C LDR X0, [X27]
	0x035D3B90 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE0E000
	007 Move X21, 0xB49000
	008 Move W8, [X22+540]
	009 Move X21, [X21+2992]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB66000
	017 Move X0, [X0+1968]
	018 Call 0x1C17CF4
	019 Move X0, 0xB49000
	020 Move X0, [X0+2992]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+540], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0xB66000
	035 Move X8, [X8+1968]
	036 Move W1, W20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Dictionary`2<ByteEnum, Object>.TryGetValue, X0, X1, X2
	045 Return X0
	046 Call 0x1C17F20

Method: SimpleJSON.JSONArray GetPath(SpatialSys.ObservableState.IStateObject obj)

Disassembly:
	0x035D3B94 LDR X1, [X28]
	0x035D3B98 MOV X19, X0
	0x035D3B9C BL 0x249B504
	0x035D3BA0 LDR X8, [X22]
	0x035D3BA4 LDR X0, [X23]
	0x035D3BA8 LDR X8, [X8 + 0xB8]
	0x035D3BAC LDR X21, [X8]
	0x035D3BB0 BL 0x1C16F10
	0x035D3BB4 LDR X2, [X29]
	0x035D3BB8 MOV X1, X21
	0x035D3BBC MOV X3, X31
	0x035D3BC0 MOV X20, X0
	0x035D3BC4 BL 0x2D383F8
	0x035D3BC8 CBZ X19, 0x35D47E4
	0x035D3BCC STR X20, [X19 + 0x10]
	0x035D3BD0 LDR X8, [X22]
	0x035D3BD4 ADRP X21, 0xB65000
	0x035D3BD8 ADRP X24, 0xB65000
	0x035D3BDC LDR X21, [X21 + 0xB38]
	0x035D3BE0 LDR X24, [X24 + 0x8F8]
	0x035D3BE4 LDR X8, [X8 + 0xB8]
	0x035D3BE8 ADRP X25, 0xB65000
	0x035D3BEC ADRP X26, 0xB65000
	0x035D3BF0 ADRP X27, 0xB65000
	0x035D3BF4 LDR X25, [X25 + 0xB40]
	0x035D3BF8 LDR X26, [X26 + 0xAB0]
	0x035D3BFC LDR X27, [X27 + 0xA58]
	0x035D3C00 LDR X0, [X23]
	0x035D3C04 ADRP X28, 0xB65000
	0x035D3C08 ADRP X23, 0xB65000
	0x035D3C0C ADRP X29, 0xB65000
	0x035D3C10 LDR X20, [X8]
	0x035D3C14 LDR X28, [X28 + 0x968]
	0x035D3C18 LDR X23, [X23 + 0x8A8]
	0x035D3C1C LDR X29, [X29 + 0xB48]
	0x035D3C20 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xE0E000
	007 Move X22, 0xB4B000
	008 Move X21, 0xB49000
	009 Move W8, [X20+541]
	010 Move X22, [X22+880]
	011 Move X21, [X21+2992]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB49000
	018 Move X0, [X0+2992]
	019 Call 0x1C17CF4
	020 Move X0, 0xB4B000
	021 Move X0, [X0+880]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+541], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call JSONArray..ctor, X0
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X20
	037 Call ImmerPatchConverter.GetPathRecursive, X0, X1
	038 Move X0, X20
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return X0

Method: System.Void GetPathRecursive(SpatialSys.ObservableState.IStateObject obj, SimpleJSON.JSONArray pathArray)

Disassembly:
	0x035D3C24 LDR X2, [X21]
	0x035D3C28 MOV X1, X20
	0x035D3C2C MOV X3, X31
	0x035D3C30 MOV X21, X0
	0x035D3C34 BL 0x2D383F8
	0x035D3C38 STR X21, [X19 + 0x18]
	0x035D3C3C LDR X8, [X22]
	0x035D3C40 LDR X0, [X24]
	0x035D3C44 LDR X8, [X8 + 0xB8]
	0x035D3C48 LDR X20, [X8]
	0x035D3C4C BL 0x1C16F10
	0x035D3C50 LDR X2, [X25]
	0x035D3C54 MOV X1, X20
	0x035D3C58 MOV X3, X31
	0x035D3C5C MOV X21, X0
	0x035D3C60 BL 0x2D38294
	0x035D3C64 STR X21, [X19 + 0x20]
	0x035D3C68 LDR X1, [X26]
	0x035D3C6C MOV X0, X19
	0x035D3C70 BL 0x22338BC
	0x035D3C74 LDR X0, [X27]
	0x035D3C78 BL 0x1C16F10
	0x035D3C7C LDR X1, [X28]
	0x035D3C80 MOV X19, X0
	0x035D3C84 BL 0x249B514
	0x035D3C88 LDR X8, [X22]
	0x035D3C8C LDR X0, [X23]
	0x035D3C90 LDR X8, [X8 + 0xB8]
	0x035D3C94 LDR X21, [X8]
	0x035D3C98 BL 0x1C16F10
	0x035D3C9C LDR X2, [X29]
	0x035D3CA0 MOV X1, X21
	0x035D3CA4 MOV X3, X31
	0x035D3CA8 MOV X20, X0
	0x035D3CAC BL 0x2D38C48
	0x035D3CB0 CBZ X19, 0x35D47E4
	0x035D3CB4 STR X20, [X19 + 0x10]
	0x035D3CB8 LDR X8, [X22]
	0x035D3CBC ADRP X21, 0xB65000
	0x035D3CC0 ADRP X24, 0xB65000
	0x035D3CC4 LDR X21, [X21 + 0xB50]
	0x035D3CC8 LDR X24, [X24 + 0x8B8]
	0x035D3CCC LDR X8, [X8 + 0xB8]
	0x035D3CD0 ADRP X25, 0xB65000
	0x035D3CD4 ADRP X26, 0xB65000
	0x035D3CD8 ADRP X27, 0xB65000
	0x035D3CDC LDR X25, [X25 + 0xB58]
	0x035D3CE0 LDR X26, [X26 + 0xAB8]
	0x035D3CE4 LDR X27, [X27 + 0x9D8]
	0x035D3CE8 LDR X0, [X23]
	0x035D3CEC ADRP X28, 0xB65000
	0x035D3CF0 ADRP X23, 0xB65000
	0x035D3CF4 ADRP X29, 0xB65000
	0x035D3CF8 LDR X20, [X8]
	0x035D3CFC LDR X28, [X28 + 0x918]
	0x035D3D00 LDR X23, [X23 + 0x7F8]
	0x035D3D04 LDR X29, [X29 + 0xB60]
	0x035D3D08 BL 0x1C16F10
	0x035D3D0C LDR X2, [X21]
	0x035D3D10 MOV X1, X20
	0x035D3D14 MOV X3, X31
	0x035D3D18 MOV X21, X0
	0x035D3D1C BL 0x2D38C48
	0x035D3D20 STR X21, [X19 + 0x18]
	0x035D3D24 LDR X8, [X22]
	0x035D3D28 LDR X0, [X24]
	0x035D3D2C LDR X8, [X8 + 0xB8]
	0x035D3D30 LDR X20, [X8]
	0x035D3D34 BL 0x1C16F10
	0x035D3D38 LDR X2, [X25]
	0x035D3D3C MOV X1, X20
	0x035D3D40 MOV X3, X31
	0x035D3D44 MOV X21, X0
	0x035D3D48 BL 0x2D38AE4
	0x035D3D4C STR X21, [X19 + 0x20]
	0x035D3D50 LDR X1, [X26]
	0x035D3D54 MOV X0, X19
	0x035D3D58 BL 0x2233984
	0x035D3D5C LDR X0, [X27]
	0x035D3D60 BL 0x1C16F10
	0x035D3D64 LDR X1, [X28]
	0x035D3D68 MOV X19, X0
	0x035D3D6C BL 0x249B53C
	0x035D3D70 LDR X8, [X22]
	0x035D3D74 LDR X0, [X23]
	0x035D3D78 LDR X8, [X8 + 0xB8]
	0x035D3D7C LDR X21, [X8]
	0x035D3D80 BL 0x1C16F10
	0x035D3D84 LDR X2, [X29]
	0x035D3D88 MOV X1, X21
	0x035D3D8C MOV X3, X31
	0x035D3D90 MOV X20, X0
	0x035D3D94 BL 0x2D3E540
	0x035D3D98 CBZ X19, 0x35D47E4
	0x035D3D9C STR X20, [X19 + 0x10]
	0x035D3DA0 LDR X8, [X22]
	0x035D3DA4 ADRP X21, 0xB65000
	0x035D3DA8 ADRP X24, 0xB65000
	0x035D3DAC LDR X21, [X21 + 0xB68]
	0x035D3DB0 LDR X24, [X24 + 0x8A0]
	0x035D3DB4 LDR X8, [X8 + 0xB8]
	0x035D3DB8 ADRP X25, 0xB65000
	0x035D3DBC ADRP X26, 0xB65000
	0x035D3DC0 ADRP X27, 0xB65000
	0x035D3DC4 LDR X25, [X25 + 0xB78]
	0x035D3DC8 LDR X26, [X26 + 0xAD8]
	0x035D3DCC LDR X27, [X27 + 0xA48]
	0x035D3DD0 LDR X0, [X23]
	0x035D3DD4 ADRP X28, 0xB65000
	0x035D3DD8 ADRP X23, 0xB65000
	0x035D3DDC ADRP X29, 0xB65000
	0x035D3DE0 LDR X20, [X8]
	0x035D3DE4 LDR X28, [X28 + 0x978]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE0E000
	007 Move X22, 0xB4B000
	008 Move W8, [X21+542]
	009 Move X22, [X22+792]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xB22000
	017 Move X0, [X0+432]
	018 Call 0x1C17CF4
	019 Move X0, 0xB4B000
	020 Move X0, [X0+792]
	021 Call 0x1C17CF4
	022 Move X0, 0xB49000
	023 Move X0, [X0+2992]
	024 Call 0x1C17CF4
	025 Move X0, 0xB22000
	026 Move X0, [X0+1120]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+542], W8
	030 Move X1, [X22]
	031 Move X0, X20
	032 Call 0x1C17E00
	033 Compare X0, 0
	034 JumpIfEqual {41}
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Compare X20, 0
	042 JumpIfEqual {125}
	043 Move X22, 0xB22000
	044 Move X8, [X20]
	045 Move X22, [X22+432]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X22]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 4
	057 Move X0, X20
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 4
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, 0xB49000
	068 Move X8, [X8+2992]
	069 Move X21, X0
	070 Move X8, [X8]
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X21
	077 Move X1, X19
	078 Call ImmerPatchConverter.GetPathRecursive, X0, X1
	079 Move X8, [X20]
	080 Move X1, [X22]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move X0, X20
	091 Move W2, W31
	092 Call 0x1C5D788
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add X8, X8, X9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X20
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X8, 0xB22000
	101 Move X8, [X8+1120]
	102 Move X20, X0
	103 Move X8, [X8]
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X0, X20
	110 Move X1, X31
	111 Call JSONNode.op_Implicit, X0
	112 Compare X19, 0
	113 JumpIfEqual {125}
	114 Move X8, [X19]
	115 Move X1, X0
	116 Move X0, X19
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X3, [X8+648]
	120 Move X2, [X8+656]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X30, [X31+48]
	124 CallNoReturn X3
	125 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x035D3DE8 LDR X23, [X23 + 0x830]
	0x035D3DEC LDR X29, [X29 + 0xB80]
	0x035D3DF0 BL 0x1C16F10
	0x035D3DF4 LDR X2, [X21]
	0x035D3DF8 MOV X1, X20
	0x035D3DFC MOV X3, X31
	0x035D3E00 MOV X21, X0
	0x035D3E04 BL 0x2D3E540
	0x035D3E08 STR X21, [X19 + 0x18]
	0x035D3E0C LDR X8, [X22]
	0x035D3E10 LDR X0, [X24]
	0x035D3E14 LDR X8, [X8 + 0xB8]
	0x035D3E18 LDR X20, [X8]
	0x035D3E1C BL 0x1C16F10
	0x035D3E20 LDR X2, [X25]
	0x035D3E24 MOV X1, X20
	0x035D3E28 MOV X3, X31
	0x035D3E2C MOV X21, X0
	0x035D3E30 BL 0x2D3E3DC
	0x035D3E34 STR X21, [X19 + 0x20]
	0x035D3E38 LDR X1, [X26]
	0x035D3E3C MOV X0, X19
	0x035D3E40 BL 0x2233D6C
	0x035D3E44 LDR X0, [X27]
	0x035D3E48 BL 0x1C16F10
	0x035D3E4C LDR X1, [X28]
	0x035D3E50 MOV X19, X0
	0x035D3E54 BL 0x249B4F4
	0x035D3E58 LDR X8, [X22]
	0x035D3E5C LDR X0, [X23]
	0x035D3E60 LDR X8, [X8 + 0xB8]
	0x035D3E64 LDR X21, [X8]
	0x035D3E68 BL 0x1C16F10
	0x035D3E6C LDR X2, [X29]
	0x035D3E70 MOV X1, X21
	0x035D3E74 MOV X3, X31
	0x035D3E78 MOV X20, X0
	0x035D3E7C BL 0x2D37A38
	0x035D3E80 CBZ X19, 0x35D47E4
	0x035D3E84 STR X20, [X19 + 0x10]
	0x035D3E88 LDR X8, [X22]
	0x035D3E8C ADRP X21, 0xB65000
	0x035D3E90 ADRP X24, 0xB65000
	0x035D3E94 LDR X21, [X21 + 0xB88]
	0x035D3E98 LDR X24, [X24 + 0x8E8]
	0x035D3E9C LDR X8, [X8 + 0xB8]
	0x035D3EA0 ADRP X25, 0xB65000
	0x035D3EA4 ADRP X26, 0xB65000
	0x035D3EA8 ADRP X27, 0xB65000
	0x035D3EAC LDR X25, [X25 + 0xB90]
	0x035D3EB0 LDR X26, [X26 + 0xAA0]
	0x035D3EB4 LDR X27, [X27 + 0xA28]
	0x035D3EB8 LDR X0, [X23]
	0x035D3EBC ADRP X28, 0xB65000
	0x035D3EC0 ADRP X23, 0xB65000
	0x035D3EC4 ADRP X29, 0xB65000
	0x035D3EC8 LDR X20, [X8]
	0x035D3ECC LDR X28, [X28 + 0x9B0]
	0x035D3ED0 LDR X23, [X23 + 0x820]
	0x035D3ED4 LDR X29, [X29 + 0xB98]
	0x035D3ED8 BL 0x1C16F10
	0x035D3EDC LDR X2, [X21]
	0x035D3EE0 MOV X1, X20
	0x035D3EE4 MOV X3, X31
	0x035D3EE8 MOV X21, X0
	0x035D3EEC BL 0x2D37A38
	0x035D3EF0 STR X21, [X19 + 0x18]
	0x035D3EF4 LDR X8, [X22]
	0x035D3EF8 LDR X0, [X24]
	0x035D3EFC LDR X8, [X8 + 0xB8]
	0x035D3F00 LDR X20, [X8]
	0x035D3F04 BL 0x1C16F10
	0x035D3F08 LDR X2, [X25]
	0x035D3F0C MOV X1, X20
	0x035D3F10 MOV X3, X31
	0x035D3F14 MOV X21, X0
	0x035D3F18 BL 0x2D378D4
	0x035D3F1C STR X21, [X19 + 0x20]
	0x035D3F20 LDR X1, [X26]
	0x035D3F24 MOV X0, X19
	0x035D3F28 BL 0x223372C
	0x035D3F2C LDR X0, [X27]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xE0E000
	008 Move X21, 0xB66000
	009 Move X19, 0xB66000
	010 Move W8, [X20+543]
	011 Move X21, [X21+1976]
	012 Move X19, [X19+1984]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xB66000
	018 Move X0, [X0+1992]
	019 Call 0x1C17CF4
	020 Move X0, 0xB66000
	021 Move X0, [X0+1984]
	022 Call 0x1C17CF4
	023 Move X0, 0xB66000
	024 Move X0, [X0+1976]
	025 Call 0x1C17CF4
	026 Move X0, 0xB49000
	027 Move X0, [X0+2992]
	028 Call 0x1C17CF4
	029 Move X0, 0xB49000
	030 Move X0, [X0+3016]
	031 Call 0x1C17CF4
	032 Move X0, 0xB49000
	033 Move X0, [X0+3024]
	034 Call 0x1C17CF4
	035 Move X0, 0xB49000
	036 Move X0, [X0+3048]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+543], W8
	040 Move X0, [X21]
	041 Call 0x1C17F10
	042 Move X1, [X19]
	043 Move X19, X0
	044 Call Dictionary`2<ByteEnum, Object>..ctor, X0
	045 Compare X19, 0
	046 JumpIfEqual {92}
	047 Move X8, 0xB49000
	048 Move X20, 0xB66000
	049 Move X8, [X8+3016]
	050 Move X20, [X20+1992]
	051 Move X21, 0xB49000
	052 Move X22, 0xB49000
	053 Move X2, [X8]
	054 Move X3, [X20]
	055 Move X23, 0xB49000
	056 Move X21, [X21+3024]
	057 Move X22, [X22+3048]
	058 Move X23, [X23+2992]
	059 Move W1, 1
	060 Move X0, X19
	061 Call Dictionary`2<ByteEnum, Object>.Add, X0, X1, X2
	062 Move X2, [X21]
	063 Move X3, [X20]
	064 Move W1, 2
	065 Move X0, X19
	066 Call Dictionary`2<ByteEnum, Object>.Add, X0, X1, X2
	067 Move X2, [X21]
	068 Move X3, [X20]
	069 Move W1, 4
	070 Move X0, X19
	071 Call Dictionary`2<ByteEnum, Object>.Add, X0, X1, X2
	072 Move X2, [X22]
	073 Move X3, [X20]
	074 Move W1, 3
	075 Move X0, X19
	076 Call Dictionary`2<ByteEnum, Object>.Add, X0, X1, X2
	077 Move X2, [X22]
	078 Move X3, [X20]
	079 Move W1, 5
	080 Move X0, X19
	081 Call Dictionary`2<ByteEnum, Object>.Add, X0, X1, X2
	082 Move X8, [X23]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X8, [X8+184]
	086 Move [X8], X19
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X30, [X31+48]
	090 Move X23, [X31+56]
	091 Return 
	092 Call 0x1C17F20

