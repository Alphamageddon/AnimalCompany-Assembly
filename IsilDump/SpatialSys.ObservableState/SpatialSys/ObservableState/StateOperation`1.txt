Type: SpatialSys.ObservableState.StateOperation`1

Method: SpatialSys.ObservableState.IStateObject get_state()

Disassembly:
	0x02615F3C ADD W9, W9, 0x1
	0x02615F40 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_state(SpatialSys.ObservableState.IStateObject value)

Disassembly:
	0x02615F44 ADD X0, X8, 0x138
	0x02615F48 LDP X8, X1, [X0]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: SpatialSys.ObservableState.OperationType get_opType()

Disassembly:
	0x02615F4C MOV X0, X20
	0x02615F50 BLR X8

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_opType(SpatialSys.ObservableState.OperationType value)

Disassembly:
	0x02615F54 LDR X8, [X22]
	0x02615F58 MOV X3, X0

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: T get_param1()

Disassembly:
	0x02615F5C MOV X1, X19
	0x02615F60 MOV X2, X21

ISIL:
	001 Move W0, [X0+25]
	002 Return X0

Method: System.Void set_param1(T value)

Disassembly:
	0x02615F64 MOV X0, X8
	0x02615F68 MOV X4, X31
	0x02615F6C BL 0x3227C18

ISIL:
	001 And W8, W1, 1
	002 Move [X0+25], W8
	003 Return 

Method: System.Int32 get_param1TypeID()

Disassembly:
	0x02615F70 LDP X20, X19, [X31 + 0x40]
	0x02615F74 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Void set_param1TypeID(System.Int32 value)

Disassembly:
	0x02615F78 LDP X24, X23, [X31 + 0x20]
	0x02615F7C LDR X30, [X31 + 0x10]

ISIL:
	001 Move [X0+28], W1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x02615F80 ADD X31, X31, 0x50
	0x02615F84 RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.IStateObject state, SpatialSys.ObservableState.OperationType opType, T param1, System.Int32 param1TypeID)

Disassembly:
	0x02615F88 BL 0x1C16F20
	0x02615F8C SUB X31, X31, 0x60
	0x02615F90 STP X30, X25, [X31 + 0x20]
	0x02615F94 STP X24, X23, [X31 + 0x30]
	0x02615F98 STP X22, X21, [X31 + 0x40]
	0x02615F9C STP X20, X19, [X31 + 0x50]
	0x02615FA0 ADRP X22, 0x1DC5000
	0x02615FA4 LDRB W8, [X22 + 0x2B]
	0x02615FA8 MOV X21, X2
	0x02615FAC MOV X19, X1
	0x02615FB0 MOV X20, X0
	0x02615FB4 TBNZ X8, 0x0, 0x2616044
	0x02615FB8 ADRP X0, 0x1ADF000
	0x02615FBC LDR X0, [X0 + 0x1B0]
	0x02615FC0 BL 0x1C16CF4
	0x02615FC4 ADRP X0, 0x1B06000
	0x02615FC8 LDR X0, [X0 + 0xBA0]
	0x02615FCC BL 0x1C16CF4
	0x02615FD0 ADRP X0, 0x1B07000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move X1, X31
	009 Move W19, W4
	010 Move W20, W3
	011 Move W21, W2
	012 Move X23, X0
	013 Call Object..ctor, X0
	014 Move [X23+16], X22
	015 Move [X23+24], W21
	016 And W8, W20, 1
	017 Move [X23+28], W19
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move [X23+25], W8
	023 Move X30, [X31+48]
	024 Move X23, [X31+56]
	025 Return 

Method: System.Void Reset()

Disassembly:
	0x02615FD4 LDR X0, [X0 + 0xB58]
	0x02615FD8 BL 0x1C16CF4
	0x02615FDC ADRP X0, 0x1B08000

ISIL:
	001 Move [X0+16], X31
	002 NotImplemented "Instruction STRH not yet implemented."
	003 Return 

Method: System.Void CopyFrom(SpatialSys.ObservableState.IStateOperation other)

Disassembly:
	0x02615FE0 LDR X0, [X0 + 0x328]
	0x02615FE4 BL 0x1C16CF4
	0x02615FE8 ADRP X0, 0x1B08000
	0x02615FEC LDR X0, [X0 + 0x398]
	0x02615FF0 BL 0x1C16CF4
	0x02615FF4 ADRP X0, 0x1B08000
	0x02615FF8 LDR X0, [X0 + 0x3A0]
	0x02615FFC BL 0x1C16CF4
	0x02616000 ADRP X0, 0x1B07000
	0x02616004 LDR X0, [X0 + 0x3A8]
	0x02616008 BL 0x1C16CF4
	0x0261600C ADRP X0, 0x1B07000
	0x02616010 LDR X0, [X0 + 0x3B0]
	0x02616014 BL 0x1C16CF4
	0x02616018 ADRP X0, 0x1B07000
	0x0261601C LDR X0, [X0 + 0x3B8]
	0x02616020 BL 0x1C16CF4
	0x02616024 ADRP X0, 0x1B07000
	0x02616028 LDR X0, [X0 + 0x3C0]
	0x0261602C BL 0x1C16CF4
	0x02616030 ADRP X0, 0x1B07000
	0x02616034 LDR X0, [X0 + 0x3C8]
	0x02616038 BL 0x1C16CF4
	0x0261603C MOVZ W8, 0x1
	0x02616040 STRB W8, [X22 + 0x2B]
	0x02616044 STRB W31, [X31 + 0x1C]
	0x02616048 LDRB W8, [X20 + 0x18]
	0x0261604C SUB W9, W8, 0x1
	0x02616050 CMP W9, 0x8
	0x02616054 B.HI 0x2616460
	0x02616058 ADRP X10, 0xFFFFFFFFFE517000
	0x0261605C ADD X10, X10, 0xCFE
	0x02616060 ADR X11, 0x10
	0x02616064 LDRB W12, [X10, X9, LSL]
	0x02616068 ADD X11, X11, X12, 0x2, LSL
	0x0261606C BR X11
	0x02616070 ADRP X9, 0x1B07000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Compare X19, 0
	018 JumpIfEqual {41}
	019 Move X8, [X19]
	020 Move W9, [X1+304]
	021 Move W10, [X8+304]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X8+200]
	024 Add X8, X8, X9
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, [X19+16]
	028 Move [X20+16], X8
	029 Move W8, [X19+24]
	030 Move [X20+24], W8
	031 Move W8, [X19+25]
	032 Move [X20+25], W8
	033 Move W8, [X19+28]
	034 Move [X20+28], W8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 
	039 Move X0, X19
	040 Call 0x1C181E0
	041 Call 0x1C17F20

Method: SpatialSys.ObservableState.IStateOperation Clone()

Disassembly:
	0x02616074 LDR X9, [X9 + 0x328]
	0x02616078 ADD X1, X31, 0x10
	0x0261607C STRB W8, [X31 + 0x10]
	0x02616080 LDR X0, [X9]
	0x02616084 BL 0x1C16E04
	0x02616088 LDR X23, [X20 + 0x10]
	0x0261608C CBZ X23, 0x2616648
	0x02616090 ADRP X10, 0x1ADE000
	0x02616094 LDR X8, [X23]
	0x02616098 LDR X10, [X10 + 0x1B0]
	0x0261609C MOV X22, X0
	0x026160A0 LDRH W9, [X8 + 0x12E]
	0x026160A4 LDR X1, [X10]
	0x026160A8 CBZ X9, 0x26160CC
	0x026160AC LDR X10, [X8 + 0xB0]
	0x026160B0 ADD X10, X10, 0x8
	0x026160B4 LDUR X11, [X10 - 0x8]
	0x026160B8 CMP X11, X1
	0x026160BC B.EQ 0x26160DC
	0x026160C0 SUBS X9, X9, 0x1
	0x026160C4 ADD X10, X10, 0x10
	0x026160C8 B.NE 0x26160B4
	0x026160CC MOVZ W2, 0x1
	0x026160D0 MOV X0, X23
	0x026160D4 BL 0x1C5C788
	0x026160D8 B 0x26160EC
	0x026160DC LDR W9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X9, [X1+32]
	008 Move X8, X0
	009 Move X23, [X8+16]
	010 Move W21, [X8+24]
	011 Move X9, [X9+192]
	012 Move W20, [X8+25]
	013 Move W22, [X8+28]
	014 Move X0, [X9]
	015 Move W9, [X0+309]
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X19, X0
	024 Call Object..ctor, X0
	025 Move [X19+16], X23
	026 Move [X19+24], W21
	027 Move [X19+25], W20
	028 Move [X19+28], W22
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: System.String ToString()

Disassembly:
	0x026160E0 ADD W9, W9, 0x1
	0x026160E4 ADD X8, X8, W9, 0x4, SXTW
	0x026160E8 ADD X0, X8, 0x138
	0x026160EC LDP X8, X1, [X0]
	0x026160F0 MOV X0, X23
	0x026160F4 BLR X8
	0x026160F8 LDR X8, [X21 + 0x20]
	0x026160FC LDRB W9, [X20 + 0x19]
	0x02616100 MOV X20, X0
	0x02616104 ADD X1, X31, 0xC
	0x02616108 LDR X8, [X8 + 0xC0]
	0x0261610C STRB W9, [X31 + 0xC]
	0x02616110 LDR X8, [X8 + 0x8]
	0x02616114 MOV X0, X8
	0x02616118 BL 0x1C16E04
	0x0261611C ADRP X8, 0x1B07000
	0x02616120 LDR X8, [X8 + 0x398]
	0x02616124 MOV X3, X0
	0x02616128 MOV X1, X22
	0x0261612C MOV X2, X20
	0x02616130 LDR X8, [X8]
	0x02616134 MOV X4, X31
	0x02616138 MOV X0, X8
	0x0261613C BL 0x3227C18
	0x02616140 CBNZ X19, 0x2616450
	0x02616144 B 0x2616648
	0x02616148 ADRP X8, 0x1B06000
	0x0261614C LDR X0, [X20 + 0x10]
	0x02616150 LDR X8, [X8 + 0xB58]
	0x02616154 LDR X1, [X8]
	0x02616158 BL 0x1C16E00
	0x0261615C CBZ X0, 0x2616648
	0x02616160 ADRP X24, 0x1ADE000
	0x02616164 LDR X8, [X0]
	0x02616168 LDR X24, [X24 + 0x1B0]
	0x0261616C MOV X22, X0
	0x02616170 LDRH W9, [X8 + 0x12E]
	0x02616174 LDR X1, [X24]
	0x02616178 CBZ X9, 0x261619C
	0x0261617C LDR X10, [X8 + 0xB0]
	0x02616180 ADD X10, X10, 0x8
	0x02616184 LDUR X11, [X10 - 0x8]
	0x02616188 CMP X11, X1
	0x0261618C B.EQ 0x261629C
	0x02616190 SUBS X9, X9, 0x1
	0x02616194 ADD X10, X10, 0x10
	0x02616198 B.NE 0x2616184
	0x0261619C MOVZ W2, 0xA
	0x026161A0 MOV X0, X22
	0x026161A4 BL 0x1C5C788
	0x026161A8 B 0x26162AC
	0x026161AC LDR X20, [X20 + 0x10]
	0x026161B0 CBZ X20, 0x2616648
	0x026161B4 ADRP X10, 0x1ADE000
	0x026161B8 LDR X8, [X20]
	0x026161BC LDR X10, [X10 + 0x1B0]
	0x026161C0 LDRH W9, [X8 + 0x12E]
	0x026161C4 LDR X1, [X10]
	0x026161C8 CBZ X9, 0x26161EC
	0x026161CC LDR X10, [X8 + 0xB0]
	0x026161D0 ADD X10, X10, 0x8
	0x026161D4 LDUR X11, [X10 - 0x8]
	0x026161D8 CMP X11, X1
	0x026161DC B.EQ 0x2616360
	0x026161E0 SUBS X9, X9, 0x1
	0x026161E4 ADD X10, X10, 0x10
	0x026161E8 B.NE 0x26161D4
	0x026161EC MOVZ W2, 0x1
	0x026161F0 MOV X0, X20
	0x026161F4 BL 0x1C5C788
	0x026161F8 B 0x2616370
	0x026161FC LDR X22, [X20 + 0x10]
	0x02616200 CBZ X22, 0x2616648
	0x02616204 ADRP X10, 0x1ADE000
	0x02616208 LDR X8, [X22]
	0x0261620C LDR X10, [X10 + 0x1B0]
	0x02616210 LDRH W9, [X8 + 0x12E]
	0x02616214 LDR X1, [X10]
	0x02616218 CBZ X9, 0x261623C
	0x0261621C LDR X10, [X8 + 0xB0]
	0x02616220 ADD X10, X10, 0x8
	0x02616224 LDUR X11, [X10 - 0x8]
	0x02616228 CMP X11, X1
	0x0261622C B.EQ 0x26163A0
	0x02616230 SUBS X9, X9, 0x1
	0x02616234 ADD X10, X10, 0x10
	0x02616238 B.NE 0x2616224
	0x0261623C MOVZ W2, 0x1
	0x02616240 MOV X0, X22
	0x02616244 BL 0x1C5C788
	0x02616248 B 0x26163B0
	0x0261624C LDR X22, [X20 + 0x10]
	0x02616250 CBZ X22, 0x2616648
	0x02616254 ADRP X10, 0x1ADE000
	0x02616258 LDR X8, [X22]
	0x0261625C LDR X10, [X10 + 0x1B0]
	0x02616260 LDRH W9, [X8 + 0x12E]
	0x02616264 LDR X1, [X10]
	0x02616268 CBZ X9, 0x261628C
	0x0261626C LDR X10, [X8 + 0xB0]
	0x02616270 ADD X10, X10, 0x8
	0x02616274 LDUR X11, [X10 - 0x8]
	0x02616278 CMP X11, X1
	0x0261627C B.EQ 0x26163EC
	0x02616280 SUBS X9, X9, 0x1
	0x02616284 ADD X10, X10, 0x10
	0x02616288 B.NE 0x2616274
	0x0261628C MOVZ W2, 0x1
	0x02616290 MOV X0, X22
	0x02616294 BL 0x1C5C788
	0x02616298 B 0x26163FC
	0x0261629C LDR W9, [X10]
	0x026162A0 ADD W9, W9, 0xA
	0x026162A4 ADD X8, X8, W9, 0x4, SXTW
	0x026162A8 ADD X0, X8, 0x138
	0x026162AC LDP X8, X1, [X0]
	0x026162B0 MOV X0, X22
	0x026162B4 BLR X8
	0x026162B8 LDR X23, [X20 + 0x10]
	0x026162BC TBZ X0, 0x0, 0x2616304
	0x026162C0 CBZ X23, 0x2616648
	0x026162C4 LDR X8, [X23]
	0x026162C8 LDR X1, [X24]
	0x026162CC LDRH W9, [X8 + 0x12E]
	0x026162D0 CBZ X9, 0x26162F4
	0x026162D4 LDR X10, [X8 + 0xB0]
	0x026162D8 ADD X10, X10, 0x8
	0x026162DC LDUR X11, [X10 - 0x8]
	0x026162E0 CMP X11, X1
	0x026162E4 B.EQ 0x26164C0
	0x026162E8 SUBS X9, X9, 0x1
	0x026162EC ADD X10, X10, 0x10
	0x026162F0 B.NE 0x26162DC
	0x026162F4 MOVZ W2, 0x1
	0x026162F8 MOV X0, X23
	0x026162FC BL 0x1C5C788
	0x02616300 B 0x26164D0
	0x02616304 ADRP X25, 0x1B05000
	0x02616308 LDR X25, [X25 + 0xBA0]
	0x0261630C MOV X0, X23
	0x02616310 LDR X1, [X25]
	0x02616314 BL 0x1C16E00
	0x02616318 CBZ X0, 0x2616478
	0x0261631C LDR X8, [X22]
	0x02616320 LDR X1, [X24]
	0x02616324 MOV X23, X0
	0x02616328 LDRH W9, [X8 + 0x12E]
	0x0261632C CBZ X9, 0x2616350
	0x02616330 LDR X10, [X8 + 0xB0]
	0x02616334 ADD X10, X10, 0x8
	0x02616338 LDUR X11, [X10 - 0x8]
	0x0261633C CMP X11, X1
	0x02616340 B.EQ 0x261650C
	0x02616344 SUBS X9, X9, 0x1
	0x02616348 ADD X10, X10, 0x10
	0x0261634C B.NE 0x2616338
	0x02616350 MOVZ W2, 0x1
	0x02616354 MOV X0, X22
	0x02616358 BL 0x1C5C788
	0x0261635C B 0x261651C
	0x02616360 LDR W9, [X10]
	0x02616364 ADD W9, W9, 0x1
	0x02616368 ADD X8, X8, W9, 0x4, SXTW
	0x0261636C ADD X0, X8, 0x138
	0x02616370 LDP X8, X1, [X0]
	0x02616374 MOV X0, X20
	0x02616378 BLR X8
	0x0261637C ADRP X8, 0x1B07000
	0x02616380 LDR X8, [X8 + 0x3B0]
	0x02616384 MOV X1, X0
	0x02616388 MOV X2, X31
	0x0261638C LDR X8, [X8]
	0x02616390 MOV X0, X8
	0x02616394 BL 0x321B938
	0x02616398 CBNZ X19, 0x2616450
	0x0261639C B 0x2616648
	0x026163A0 LDR W9, [X10]
	0x026163A4 ADD W9, W9, 0x1
	0x026163A8 ADD X8, X8, W9, 0x4, SXTW
	0x026163AC ADD X0, X8, 0x138
	0x026163B0 LDP X8, X1, [X0]
	0x026163B4 MOV X0, X22
	0x026163B8 BLR X8
	0x026163BC LDR X8, [X21 + 0x20]
	0x026163C0 LDRB W9, [X20 + 0x19]
	0x026163C4 MOV X20, X0
	0x026163C8 ADD X1, X31, 0x14
	0x026163CC LDR X8, [X8 + 0xC0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x1DC5000
	010 Move W8, [X21+39]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x1ADE000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0x1ADF000
	021 Move X0, [X0+432]
	022 Call 0x1C17CF4
	023 Move X0, 0x1B06000
	024 Move X0, [X0+2976]
	025 Call 0x1C17CF4
	026 Move X0, 0x1B07000
	027 Move X0, [X0+2904]
	028 Call 0x1C17CF4
	029 Move X0, 0x1B08000
	030 Move X0, [X0+808]
	031 Call 0x1C17CF4
	032 Move X0, 0x1B08000
	033 Move X0, [X0+904]
	034 Call 0x1C17CF4
	035 Move X0, 0x1B08000
	036 Move X0, [X0+912]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+39], W8
	040 Move [X31+28], W31
	041 Move W8, [X19+24]
	042 Move X23, 0x1ADF000
	043 Move X23, [X23+432]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X24, 0x1B07000
	046 Move X21, [X19+16]
	047 Move X24, [X24+2904]
	048 Move X0, X21
	049 Move X1, [X24]
	050 Call 0x1C17E00
	051 Compare X0, 0
	052 JumpIfEqual {201}
	053 Move X1, [X24]
	054 Move X22, [X23]
	055 Move X0, X21
	056 Call 0x1C17E00
	057 Move X8, [X0]
	058 Move X21, X0
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 10
	069 Move X0, X21
	070 Move X1, X22
	071 Call 0x1C5D788
	072 Move X21, X31
	073 Move W9, [X10]
	074 Add W9, W9, 10
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X0, X21
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {88}
	085 Move X8, 0x1B08000
	086 Move X8, [X8+904]
	087 Move X21, [X8]
	088 Move X22, 0x1B06000
	089 Move X0, [X19+16]
	090 Move X22, [X22+2976]
	091 Move X1, [X22]
	092 Call 0x1C17E00
	093 Move X21, X0
	094 Compare X0, 0
	095 JumpIfEqual {128}
	096 Move X8, [X20+32]
	097 Move W9, [X19+25]
	098 Add X1, X31, 24
	099 Move X8, [X8+192]
	100 Move [X31+24], W9
	101 Move X0, [X8+8]
	102 Call 0x1C17E04
	103 Move X8, [X21]
	104 Move X1, [X22]
	105 Move X22, X0
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move W2, 5
	116 Move X0, X21
	117 Call 0x1C5D788
	118 Move W9, [X10]
	119 Add W9, W9, 5
	120 Add X8, X8, W9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X2, [X0+8]
	124 Move X0, X21
	125 Move X1, X22
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X21, X0
	128 Move X22, 0x1B08000
	129 Move X22, [X22+808]
	130 Move X0, X21
	131 Move X1, X31
	132 Call String.IsNullOrEmpty, X0
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {152}
	137 Move X9, 0x1ADE000
	138 Move W8, [X19+25]
	139 Move X9, [X9+2904]
	140 Move [X31+28], W8
	141 Move X0, [X9]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X8, [X20+32]
	147 Add X0, X31, 28
	148 Move X8, [X8+192]
	149 Move X1, [X8+88]
	150 Call Boolean.ToString, X0
	151 Move X21, X0
	152 Move W8, [X19+24]
	153 Move X0, [X22]
	154 Add X1, X31, 12
	155 Move [X31+12], W8
	156 Call 0x1C17E04
	157 Move X20, [X19+16]
	158 Compare X20, 0
	159 JumpIfEqual {201}
	160 Move X8, [X20]
	161 Move X22, 0x1B08000
	162 Move X1, [X23]
	163 Move X19, X0
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Move X22, [X22+912]
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move W2, 1
	175 Move X0, X20
	176 Call 0x1C5D788
	177 Move W9, [X10]
	178 Add W9, W9, 1
	179 Add X8, X8, W9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X1, [X0+8]
	183 Move X0, X20
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move X8, [X22]
	186 Move X3, X0
	187 Move X1, X19
	188 Move X2, X21
	189 Move X0, X8
	190 Move X4, X31
	191 Call String.Format, X0, X1, X2, X3
	192 Move X20, [X31+64]
	193 Move X19, [X31+72]
	194 Move X22, [X31+48]
	195 Move X21, [X31+56]
	196 Move X24, [X31+32]
	197 Move X23, [X31+40]
	198 Move X30, [X31+16]
	199 Add X31, X31, 80
	200 Return X0
	201 Call 0x1C17F20

Method: System.Void AppendReadableDebugString(System.Text.StringBuilder sb)

Disassembly:
	0x026163D0 STRB W9, [X31 + 0x14]
	0x026163D4 LDR X8, [X8 + 0x8]
	0x026163D8 MOV X0, X8
	0x026163DC BL 0x1C16E04
	0x026163E0 ADRP X8, 0x1B07000
	0x026163E4 LDR X8, [X8 + 0x3A0]
	0x026163E8 B 0x2616434
	0x026163EC LDR W9, [X10]
	0x026163F0 ADD W9, W9, 0x1
	0x026163F4 ADD X8, X8, W9, 0x4, SXTW
	0x026163F8 ADD X0, X8, 0x138
	0x026163FC LDP X8, X1, [X0]
	0x02616400 MOV X0, X22
	0x02616404 BLR X8
	0x02616408 LDR X8, [X21 + 0x20]
	0x0261640C LDRB W9, [X20 + 0x19]
	0x02616410 MOV X20, X0
	0x02616414 ADD X1, X31, 0x8
	0x02616418 LDR X8, [X8 + 0xC0]
	0x0261641C STRB W9, [X31 + 0x8]
	0x02616420 LDR X8, [X8 + 0x8]
	0x02616424 MOV X0, X8
	0x02616428 BL 0x1C16E04
	0x0261642C ADRP X8, 0x1B07000
	0x02616430 LDR X8, [X8 + 0x3B8]
	0x02616434 LDR X8, [X8]
	0x02616438 MOV X2, X0
	0x0261643C MOV X1, X20
	0x02616440 MOV X3, X31
	0x02616444 MOV X0, X8
	0x02616448 BL 0x3227BD4
	0x0261644C CBZ X19, 0x2616648
	0x02616450 MOV X1, X0
	0x02616454 MOV X0, X19
	0x02616458 MOV X2, X31
	0x0261645C BL 0x32333E0
	0x02616460 LDP X20, X19, [X31 + 0x50]
	0x02616464 LDP X22, X21, [X31 + 0x40]
	0x02616468 LDP X24, X23, [X31 + 0x30]
	0x0261646C LDP X30, X25, [X31 + 0x20]
	0x02616470 ADD X31, X31, 0x60
	0x02616474 RET
	0x02616478 LDR X22, [X20 + 0x10]
	0x0261647C CBZ X22, 0x2616648
	0x02616480 LDR X8, [X22]
	0x02616484 LDR X1, [X24]
	0x02616488 LDRH W9, [X8 + 0x12E]
	0x0261648C CBZ X9, 0x26164B0
	0x02616490 LDR X10, [X8 + 0xB0]
	0x02616494 ADD X10, X10, 0x8
	0x02616498 LDUR X11, [X10 - 0x8]
	0x0261649C CMP X11, X1
	0x026164A0 B.EQ 0x26165D8
	0x026164A4 SUBS X9, X9, 0x1
	0x026164A8 ADD X10, X10, 0x10
	0x026164AC B.NE 0x2616498
	0x026164B0 MOVZ W2, 0x1
	0x026164B4 MOV X0, X22
	0x026164B8 BL 0x1C5C788
	0x026164BC B 0x26165E8
	0x026164C0 LDR W9, [X10]
	0x026164C4 ADD W9, W9, 0x1
	0x026164C8 ADD X8, X8, W9, 0x4, SXTW
	0x026164CC ADD X0, X8, 0x138
	0x026164D0 LDP X8, X1, [X0]
	0x026164D4 MOV X0, X23
	0x026164D8 BLR X8
	0x026164DC ADRP X8, 0x1B07000
	0x026164E0 LDR X8, [X8 + 0x3C0]
	0x026164E4 ADRP X9, 0x1B07000
	0x026164E8 LDR X9, [X9 + 0x3C8]
	0x026164EC MOV X1, X0
	0x026164F0 LDR X8, [X8]
	0x026164F4 MOV X3, X31
	0x026164F8 LDR X2, [X9]
	0x026164FC MOV X0, X8
	0x02616500 BL 0x32274B8
	0x02616504 CBNZ X19, 0x2616450
	0x02616508 B 0x2616648
	0x0261650C LDR W9, [X10]
	0x02616510 ADD W9, W9, 0x1
	0x02616514 ADD X8, X8, W9, 0x4, SXTW
	0x02616518 ADD X0, X8, 0x138
	0x0261651C LDP X8, X1, [X0]
	0x02616520 MOV X0, X22
	0x02616524 BLR X8
	0x02616528 LDR X8, [X21 + 0x20]
	0x0261652C LDRB W9, [X20 + 0x19]
	0x02616530 MOV X20, X0
	0x02616534 ADD X1, X31, 0x18
	0x02616538 LDR X8, [X8 + 0xC0]
	0x0261653C STRB W9, [X31 + 0x18]
	0x02616540 LDR X8, [X8 + 0x8]
	0x02616544 MOV X0, X8
	0x02616548 BL 0x1C16E04
	0x0261654C LDR X8, [X23]
	0x02616550 LDR X1, [X25]
	0x02616554 MOV X21, X0
	0x02616558 LDRH W9, [X8 + 0x12E]
	0x0261655C CBZ X9, 0x2616580
	0x02616560 LDR X10, [X8 + 0xB0]
	0x02616564 ADD X10, X10, 0x8
	0x02616568 LDUR X11, [X10 - 0x8]
	0x0261656C CMP X11, X1
	0x02616570 B.EQ 0x2616590
	0x02616574 SUBS X9, X9, 0x1
	0x02616578 ADD X10, X10, 0x10
	0x0261657C B.NE 0x2616568
	0x02616580 MOVZ W2, 0x5
	0x02616584 MOV X0, X23
	0x02616588 BL 0x1C5C788
	0x0261658C B 0x26165A0
	0x02616590 LDR W9, [X10]
	0x02616594 ADD W9, W9, 0x5
	0x02616598 ADD X8, X8, W9, 0x4, SXTW
	0x0261659C ADD X0, X8, 0x138
	0x026165A0 LDP X8, X2, [X0]
	0x026165A4 MOV X0, X23
	0x026165A8 MOV X1, X21
	0x026165AC BLR X8
	0x026165B0 ADRP X8, 0x1B07000
	0x026165B4 LDR X8, [X8 + 0x3C0]
	0x026165B8 ADRP X9, 0x1B07000
	0x026165BC LDR X9, [X9 + 0x3A8]
	0x026165C0 MOV X3, X0
	0x026165C4 LDR X8, [X8]
	0x026165C8 MOV X1, X20
	0x026165CC LDR X2, [X9]
	0x026165D0 MOV X0, X8
	0x026165D4 B 0x261663C
	0x026165D8 LDR W9, [X10]
	0x026165DC ADD W9, W9, 0x1
	0x026165E0 ADD X8, X8, W9, 0x4, SXTW
	0x026165E4 ADD X0, X8, 0x138
	0x026165E8 LDP X8, X1, [X0]
	0x026165EC MOV X0, X22
	0x026165F0 BLR X8
	0x026165F4 ADRP X9, 0x1B07000
	0x026165F8 LDR X8, [X21 + 0x20]
	0x026165FC LDR X9, [X9 + 0x3A8]
	0x02616600 LDRB W10, [X20 + 0x19]
	0x02616604 MOV X22, X0
	0x02616608 LDR X8, [X8 + 0xC0]
	0x0261660C LDR X20, [X9]
	0x02616610 ADRP X9, 0x1B07000
	0x02616614 LDR X9, [X9 + 0x3C0]
	0x02616618 STRB W10, [X31 + 0x1C]
	0x0261661C LDR X1, [X8 + 0x58]
	0x02616620 ADD X0, X31, 0x1C
	0x02616624 LDR X21, [X9]
	0x02616628 BL 0x3319BB4
	0x0261662C MOV X3, X0
	0x02616630 MOV X0, X21
	0x02616634 MOV X1, X22
	0x02616638 MOV X2, X20
	0x0261663C MOV X4, X31
	0x02616640 BL 0x32277C4
	0x02616644 CBNZ X19, 0x2616450
	0x02616648 BL 0x1C16F20
	0x0261664C STR X30, [X31 - 0x30]!
	0x02616650 STP X22, X21, [X31 + 0x10]
	0x02616654 STP X20, X19, [X31 + 0x20]
	0x02616658 ADRP X21, 0x1DC4000
	0x0261665C ADRP X22, 0x1B05000
	0x02616660 LDRB W8, [X21 + 0x2C]
	0x02616664 LDR X22, [X22 + 0xBB0]
	0x02616668 MOV X20, X1
	0x0261666C MOV X19, X0
	0x02616670 TBNZ X8, 0x0, 0x2616688
	0x02616674 ADRP X0, 0x1B05000
	0x02616678 LDR X0, [X0 + 0xBB0]
	0x0261667C BL 0x1C16CF4
	0x02616680 MOVZ W8, 0x1
	0x02616684 STRB W8, [X21 + 0x2C]
	0x02616688 LDR X0, [X22]
	0x0261668C LDR W8, [X0 + 0xE0]
	0x02616690 CBNZ W8, 0x2616698
	0x02616694 BL 0x1C16DFC
	0x02616698 LDR X8, [X20 + 0x20]
	0x0261669C MOV X0, X19
	0x026166A0 LDP X20, X19, [X31 + 0x20]
	0x026166A4 LDP X22, X21, [X31 + 0x10]
	0x026166A8 LDR X8, [X8 + 0xC0]
	0x026166AC LDR X1, [X8 + 0x60]
	0x026166B0 LDR X30, [X31], #0x30
	0x026166B4 B 0x21F03DC
	0x026166B8 LDR X0, [X0 + 0x10]
	0x026166BC RET
	0x026166C0 STR X1, [X0 + 0x10]
	0x026166C4 RET
	0x026166C8 LDRB W0, [X0 + 0x18]
	0x026166CC RET
	0x026166D0 STRB W1, [X0 + 0x18]
	0x026166D4 RET
	0x026166D8 LDP S0, S1, [X0 + 0x1C]
	0x026166DC LDP S2, S3, [X0 + 0x24]
	0x026166E0 RET
	0x026166E4 STP S0, S1, [X0 + 0x1C]
	0x026166E8 STP S2, S3, [X0 + 0x24]
	0x026166EC RET
	0x026166F0 LDR W0, [X0 + 0x2C]
	0x026166F4 RET
	0x026166F8 STR W1, [X0 + 0x2C]
	0x026166FC RET
	0x02616700 MOV X1, X31
	0x02616704 B 0x33BDD8C
	0x02616708 STP D11, D10, [X31 - 0x50]!
	0x0261670C STP D9, D8, [X31 + 0x10]
	0x02616710 STR X30, [X31 + 0x20]
	0x02616714 STP X22, X21, [X31 + 0x30]
	0x02616718 STP X20, X19, [X31 + 0x40]
	0x0261671C MOV X21, X1
	0x02616720 MOV X1, X31
	0x02616724 MOV W19, W3
	0x02616728 MOV V8.16B, V3.16B
	0x0261672C MOV V9.16B, V2.16B
	0x02616730 MOV V10.16B, V1.16B
	0x02616734 MOV V11.16B, V0.16B
	0x02616738 MOV W20, W2
	0x0261673C MOV X22, X0
	0x02616740 BL 0x33BDD8C
	0x02616744 STR X21, [X22 + 0x10]
	0x02616748 STRB W20, [X22 + 0x18]
	0x0261674C STP S11, S10, [X22 + 0x1C]
	0x02616750 STP S9, S8, [X22 + 0x24]
	0x02616754 STR W19, [X22 + 0x2C]
	0x02616758 LDP X20, X19, [X31 + 0x40]
	0x0261675C LDP X22, X21, [X31 + 0x30]
	0x02616760 LDR X30, [X31 + 0x20]
	0x02616764 LDP D9, D8, [X31 + 0x10]
	0x02616768 LDP D11, D10, [X31], #0x50
	0x0261676C RET
	0x02616770 STR X31, [X0 + 0x10]
	0x02616774 STRB W31, [X0 + 0x18]
	0x02616778 STUR X31, [X0 + 0x24]
	0x0261677C STUR X31, [X0 + 0x1C]
	0x02616780 RET
	0x02616784 STR X30, [X31 - 0x20]!
	0x02616788 STP X20, X19, [X31 + 0x10]
	0x0261678C LDR X8, [X2 + 0x20]
	0x02616790 MOV X19, X1
	0x02616794 MOV X20, X0
	0x02616798 LDR X8, [X8 + 0xC0]
	0x0261679C LDR X1, [X8]
	0x026167A0 LDRB W8, [X1 + 0x135]
	0x026167A4 TBNZ X8, 0x0, 0x26167B4
	0x026167A8 MOV X0, X1
	0x026167AC BL 0x1C5C684
	0x026167B0 MOV X1, X0
	0x026167B4 CBZ X19, 0x2616814
	0x026167B8 LDR X8, [X19]
	0x026167BC LDRB W9, [X1 + 0x130]
	0x026167C0 LDRB W10, [X8 + 0x130]
	0x026167C4 CMP W10, W9
	0x026167C8 B.CC 0x261680C
	0x026167CC LDR X8, [X8 + 0xC8]
	0x026167D0 ADD X8, X8, X9, 0x3, LSL
	0x026167D4 LDUR X8, [X8 - 0x8]
	0x026167D8 CMP X8, X1
	0x026167DC B.NE 0x261680C
	0x026167E0 LDR X8, [X19 + 0x10]
	0x026167E4 STR X8, [X20 + 0x10]
	0x026167E8 LDRB W8, [X19 + 0x18]
	0x026167EC STRB W8, [X20 + 0x18]
	0x026167F0 LDUR V0, [X19 + 0x1C]
	0x026167F4 STUR V0, [X20 + 0x1C]
	0x026167F8 LDR W8, [X19 + 0x2C]
	0x026167FC STR W8, [X20 + 0x2C]
	0x02616800 LDP X20, X19, [X31 + 0x10]
	0x02616804 LDR X30, [X31], #0x20
	0x02616808 RET
	0x0261680C MOV X0, X19
	0x02616810 BL 0x1C171E0
	0x02616814 BL 0x1C16F20
	0x02616818 SUB X31, X31, 0x40
	0x0261681C STR X30, [X31 + 0x10]
	0x02616820 STP X22, X21, [X31 + 0x20]
	0x02616824 STP X20, X19, [X31 + 0x30]
	0x02616828 LDR X9, [X1 + 0x20]
	0x0261682C MOV X8, X0
	0x02616830 LDR X22, [X8 + 0x10]
	0x02616834 LDRB W20, [X8 + 0x18]
	0x02616838 LDR X9, [X9 + 0xC0]
	0x0261683C LDUR V0, [X8 + 0x1C]
	0x02616840 LDR W21, [X8 + 0x2C]
	0x02616844 LDR X0, [X9]
	0x02616848 STR V0, [X31]
	0x0261684C LDRB W9, [X0 + 0x135]
	0x02616850 TBNZ X9, 0x0, 0x2616858
	0x02616854 BL 0x1C5C684
	0x02616858 BL 0x1C16F10
	0x0261685C MOV X1, X31
	0x02616860 MOV X19, X0
	0x02616864 BL 0x33BDD8C
	0x02616868 LDR V0, [X31]
	0x0261686C STR X22, [X19 + 0x10]
	0x02616870 STRB W20, [X19 + 0x18]
	0x02616874 STR W21, [X19 + 0x2C]
	0x02616878 STUR V0, [X19 + 0x1C]
	0x0261687C MOV X0, X19
	0x02616880 LDP X20, X19, [X31 + 0x30]
	0x02616884 LDP X22, X21, [X31 + 0x20]
	0x02616888 LDR X30, [X31 + 0x10]
	0x0261688C ADD X31, X31, 0x40
	0x02616890 RET
	0x02616894 SUB X31, X31, 0x60
	0x02616898 STR X30, [X31 + 0x20]
	0x0261689C STP X24, X23, [X31 + 0x30]
	0x026168A0 STP X22, X21, [X31 + 0x40]
	0x026168A4 STP X20, X19, [X31 + 0x50]
	0x026168A8 ADRP X21, 0x1DC4000
	0x026168AC LDRB W8, [X21 + 0x2D]
	0x026168B0 MOV X20, X1
	0x026168B4 MOV X19, X0
	0x026168B8 TBNZ X8, 0x0, 0x261690C
	0x026168BC ADRP X0, 0x1ADE000
	0x026168C0 LDR X0, [X0 + 0x1B0]
	0x026168C4 BL 0x1C16CF4
	0x026168C8 ADRP X0, 0x1B05000
	0x026168CC LDR X0, [X0 + 0xBA0]
	0x026168D0 BL 0x1C16CF4
	0x026168D4 ADRP X0, 0x1B06000
	0x026168D8 LDR X0, [X0 + 0xB58]
	0x026168DC BL 0x1C16CF4
	0x026168E0 ADRP X0, 0x1B07000
	0x026168E4 LDR X0, [X0 + 0x328]
	0x026168E8 BL 0x1C16CF4
	0x026168EC ADRP X0, 0x1B07000
	0x026168F0 LDR X0, [X0 + 0x388]
	0x026168F4 BL 0x1C16CF4
	0x026168F8 ADRP X0, 0x1B07000
	0x026168FC LDR X0, [X0 + 0x390]
	0x02616900 BL 0x1C16CF4
	0x02616904 MOVZ W8, 0x1
	0x02616908 STRB W8, [X21 + 0x2D]
	0x0261690C STP X31, X31, [X31 + 0x10]
	0x02616910 LDRB W8, [X19 + 0x18]
	0x02616914 ADRP X23, 0x1ADE000
	0x02616918 LDR X23, [X23 + 0x1B0]
	0x0261691C MOV X21, X31
	0x02616920 CMP W8, 0x1
	0x02616924 B.NE 0x2616A68
	0x02616928 ADRP X24, 0x1B06000
	0x0261692C LDR X21, [X19 + 0x10]
	0x02616930 LDR X24, [X24 + 0xB58]
	0x02616934 MOV X0, X21
	0x02616938 LDR X1, [X24]
	0x0261693C BL 0x1C16E00
	0x02616940 CBZ X0, 0x2616B58
	0x02616944 LDR X1, [X24]
	0x02616948 LDR X22, [X23]
	0x0261694C MOV X0, X21
	0x02616950 BL 0x1C16E00
	0x02616954 LDR X8, [X0]
	0x02616958 MOV X21, X0
	0x0261695C LDRH W9, [X8 + 0x12E]
	0x02616960 CBZ X9, 0x2616984
	0x02616964 LDR X10, [X8 + 0xB0]
	0x02616968 ADD X10, X10, 0x8
	0x0261696C LDUR X11, [X10 - 0x8]
	0x02616970 CMP X11, X22
	0x02616974 B.EQ 0x2616998
	0x02616978 SUBS X9, X9, 0x1
	0x0261697C ADD X10, X10, 0x10
	0x02616980 B.NE 0x261696C
	0x02616984 MOVZ W2, 0xA
	0x02616988 MOV X0, X21
	0x0261698C MOV X1, X22
	0x02616990 BL 0x1C5C788
	0x02616994 B 0x26169A8
	0x02616998 LDR W9, [X10]
	0x0261699C ADD W9, W9, 0xA
	0x026169A0 ADD X8, X8, W9, 0x4, SXTW
	0x026169A4 ADD X0, X8, 0x138
	0x026169A8 LDP X8, X1, [X0]
	0x026169AC MOV X0, X21
	0x026169B0 BLR X8
	0x026169B4 TBZ X0, 0x0, 0x26169C8
	0x026169B8 ADRP X8, 0x1B07000
	0x026169BC LDR X8, [X8 + 0x388]
	0x026169C0 LDR X21, [X8]
	0x026169C4 B 0x2616A68
	0x026169C8 ADRP X22, 0x1B05000
	0x026169CC LDR X0, [X19 + 0x10]
	0x026169D0 LDR X22, [X22 + 0xBA0]
	0x026169D4 LDR X1, [X22]
	0x026169D8 BL 0x1C16E00
	0x026169DC MOV X21, X0
	0x026169E0 CBZ X0, 0x2616A68
	0x026169E4 LDR X8, [X20 + 0x20]
	0x026169E8 LDUR V0, [X19 + 0x1C]
	0x026169EC ADD X1, X31, 0x0
	0x026169F0 LDR X8, [X8 + 0xC0]
	0x026169F4 STR V0, [X31]
	0x026169F8 LDR X0, [X8 + 0x8]
	0x026169FC BL 0x1C16E04
	0x02616A00 LDR X8, [X21]
	0x02616A04 LDR X1, [X22]
	0x02616A08 MOV X20, X0
	0x02616A0C LDRH W9, [X8 + 0x12E]
	0x02616A10 CBZ X9, 0x2616A34
	0x02616A14 LDR X10, [X8 + 0xB0]
	0x02616A18 ADD X10, X10, 0x8
	0x02616A1C LDUR X11, [X10 - 0x8]
	0x02616A20 CMP X11, X1
	0x02616A24 B.EQ 0x2616A44
	0x02616A28 SUBS X9, X9, 0x1
	0x02616A2C ADD X10, X10, 0x10
	0x02616A30 B.NE 0x2616A1C
	0x02616A34 MOVZ W2, 0x5
	0x02616A38 MOV X0, X21
	0x02616A3C BL 0x1C5C788
	0x02616A40 B 0x2616A54
	0x02616A44 LDR W9, [X10]
	0x02616A48 ADD W9, W9, 0x5
	0x02616A4C ADD X8, X8, W9, 0x4, SXTW
	0x02616A50 ADD X0, X8, 0x138
	0x02616A54 LDP X8, X2, [X0]
	0x02616A58 MOV X0, X21
	0x02616A5C MOV X1, X20
	0x02616A60 BLR X8
	0x02616A64 MOV X21, X0
	0x02616A68 ADRP X20, 0x1B07000
	0x02616A6C LDR X20, [X20 + 0x328]
	0x02616A70 MOV X0, X21
	0x02616A74 MOV X1, X31
	0x02616A78 BL 0x32277A8
	0x02616A7C TBZ X0, 0x0, 0x2616AA0
	0x02616A80 LDUR V0, [X19 + 0x1C]
	0x02616A84 ADD X0, X31, 0x10
	0x02616A88 MOV X1, X31
	0x02616A8C MOV X2, X31
	0x02616A90 MOV X3, X31
	0x02616A94 STR V0, [X31 + 0x1]
	0x02616A98 BL 0x21F21BC
	0x02616A9C MOV X21, X0
	0x02616AA0 LDRB W8, [X19 + 0x18]
	0x02616AA4 LDR X0, [X20]
	0x02616AA8 ADD X1, X31, 0x0
	0x02616AAC STRB W8, [X31]
	0x02616AB0 BL 0x1C16E04
	0x02616AB4 LDR X20, [X19 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X22, 0x1DC5000
	011 Move W8, [X22+40]
	012 Move X20, X2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0x1ADE000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0x1ADF000
	023 Move X0, [X0+432]
	024 Call 0x1C17CF4
	025 Move X0, 0x1B06000
	026 Move X0, [X0+2976]
	027 Call 0x1C17CF4
	028 Move X0, 0x1B07000
	029 Move X0, [X0+2904]
	030 Call 0x1C17CF4
	031 Move X0, 0x1B08000
	032 Move X0, [X0+808]
	033 Call 0x1C17CF4
	034 Move X0, 0x1B08000
	035 Move X0, [X0+920]
	036 Call 0x1C17CF4
	037 Move X0, 0x1B08000
	038 Move X0, [X0+928]
	039 Call 0x1C17CF4
	040 Move X0, 0x1B08000
	041 Move X0, [X0+936]
	042 Call 0x1C17CF4
	043 Move X0, 0x1B08000
	044 Move X0, [X0+944]
	045 Call 0x1C17CF4
	046 Move X0, 0x1B08000
	047 Move X0, [X0+952]
	048 Call 0x1C17CF4
	049 Move X0, 0x1B08000
	050 Move X0, [X0+960]
	051 Call 0x1C17CF4
	052 Move X0, 0x1B08000
	053 Move X0, [X0+968]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+40], W8
	057 Move [X31+28], W31
	058 Move W8, [X21+24]
	059 Subtract W9, W8, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X10, -28213248
	062 Add X10, X10, 3326
	063 NotImplemented "Instruction ADR not yet implemented."
	064 Move W12, [X10]
	065 Add X11, X11, X12
	066 CallNoReturn X11
	067 Move X9, 0x1B08000
	068 Move X9, [X9+808]
	069 Add X1, X31, 16
	070 Move [X31+16], W8
	071 Move X0, [X9]
	072 Call 0x1C17E04
	073 Move X23, [X21+16]
	074 Compare X23, 0
	075 JumpIfEqual {455}
	076 Move X10, 0x1ADF000
	077 Move X8, [X23]
	078 Move X10, [X10+432]
	079 Move X22, X0
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X1, [X10]
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move W2, 1
	091 Move X0, X23
	092 Call 0x1C5D788
	093 Move W9, [X10]
	094 Add W9, W9, 1
	095 Add X8, X8, W9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X23
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X8, [X20+32]
	102 Move W9, [X21+25]
	103 Move X20, X0
	104 Add X1, X31, 12
	105 Move X8, [X8+192]
	106 Move [X31+12], W9
	107 Move X8, [X8+8]
	108 Move X0, X8
	109 Call 0x1C17E04
	110 Move X8, 0x1B08000
	111 Move X8, [X8+920]
	112 Move X3, X0
	113 Move X1, X22
	114 Move X2, X20
	115 Move X8, [X8]
	116 Move X4, X31
	117 Move X0, X8
	118 Call String.Format, X0, X1, X2, X3
	119 Compare X19, 0
	120 JumpIfNotEqual {316}
	121 Move X8, 0x1B07000
	122 Move X0, [X21+16]
	123 Move X8, [X8+2904]
	124 Move X1, [X8]
	125 Call 0x1C17E00
	126 Compare X0, 0
	127 JumpIfEqual {455}
	128 Move X24, 0x1ADF000
	129 Move X8, [X0]
	130 Move X24, [X24+432]
	131 Move X22, X0
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Move X1, [X24]
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move W2, 10
	143 Move X0, X22
	144 Call 0x1C5D788
	145 Move X20, [X21+16]
	146 Compare X20, 0
	147 JumpIfEqual {455}
	148 Move X10, 0x1ADF000
	149 Move X8, [X20]
	150 Move X10, [X10+432]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Move X1, [X10]
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move W2, 1
	162 Move X0, X20
	163 Call 0x1C5D788
	164 Move X22, [X21+16]
	165 Compare X22, 0
	166 JumpIfEqual {455}
	167 Move X10, 0x1ADF000
	168 Move X8, [X22]
	169 Move X10, [X10+432]
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X1, [X10]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move W2, 1
	181 Move X0, X22
	182 Call 0x1C5D788
	183 Move X22, [X21+16]
	184 Compare X22, 0
	185 JumpIfEqual {455}
	186 Move X10, 0x1ADF000
	187 Move X8, [X22]
	188 Move X10, [X10+432]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Move X1, [X10]
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move W2, 1
	200 Move X0, X22
	201 Call 0x1C5D788
	202 Move W9, [X10]
	203 Add W9, W9, 10
	204 Add X8, X8, W9
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X1, [X0+8]
	208 Move X0, X22
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Move X23, [X21+16]
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {231}
	215 Compare X23, 0
	216 JumpIfEqual {455}
	217 Move X8, [X23]
	218 Move X1, [X24]
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Compare X9, 0
	221 JumpIfEqual {228}
	222 Move X10, [X8+176]
	223 Add X10, X10, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X9, X9, 1
	227 Add X10, X10, 16
	228 Move W2, 1
	229 Move X0, X23
	230 Call 0x1C5D788
	231 Move X25, 0x1B06000
	232 Move X25, [X25+2976]
	233 Move X0, X23
	234 Move X1, [X25]
	235 Call 0x1C17E00
	236 Compare X0, 0
	237 JumpIfEqual {330}
	238 Move X8, [X22]
	239 Move X1, [X24]
	240 Move X23, X0
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move W2, 1
	251 Move X0, X22
	252 Call 0x1C5D788
	253 Move W9, [X10]
	254 Add W9, W9, 1
	255 Add X8, X8, W9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X1, [X0+8]
	259 Move X0, X20
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Move X8, 0x1B08000
	262 Move X8, [X8+944]
	263 Move X1, X0
	264 Move X2, X31
	265 Move X8, [X8]
	266 Move X0, X8
	267 Call String.Concat, X0, X1
	268 Compare X19, 0
	269 JumpIfNotEqual {316}
	270 Move W9, [X10]
	271 Add W9, W9, 1
	272 Add X8, X8, W9
	273 Add X0, X8, 312
	274 Move X8, [X0]
	275 Move X1, [X0+8]
	276 Move X0, X22
	277 NotImplemented "Instruction BLR not yet implemented."
	278 Move X8, [X20+32]
	279 Move W9, [X21+25]
	280 Move X20, X0
	281 Add X1, X31, 20
	282 Move X8, [X8+192]
	283 Move [X31+20], W9
	284 Move X8, [X8+8]
	285 Move X0, X8
	286 Call 0x1C17E04
	287 Move X8, 0x1B08000
	288 Move X8, [X8+928]
	289 Move W9, [X10]
	290 Add W9, W9, 1
	291 Add X8, X8, W9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X1, [X0+8]
	295 Move X0, X22
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move X8, [X20+32]
	298 Move W9, [X21+25]
	299 Move X20, X0
	300 Add X1, X31, 8
	301 Move X8, [X8+192]
	302 Move [X31+8], W9
	303 Move X8, [X8+8]
	304 Move X0, X8
	305 Call 0x1C17E04
	306 Move X8, 0x1B08000
	307 Move X8, [X8+952]
	308 Move X8, [X8]
	309 Move X2, X0
	310 Move X1, X20
	311 Move X3, X31
	312 Move X0, X8
	313 Call String.Format, X0, X1, X2
	314 Compare X19, 0
	315 JumpIfEqual {455}
	316 Move X1, X0
	317 Move X0, X19
	318 Move X2, X31
	319 Call StringBuilder.Append, X0, X1
	320 Move X20, [X31+80]
	321 Move X19, [X31+88]
	322 Move X22, [X31+64]
	323 Move X21, [X31+72]
	324 Move X24, [X31+48]
	325 Move X23, [X31+56]
	326 Move X30, [X31+32]
	327 Move X25, [X31+40]
	328 Add X31, X31, 96
	329 Return 
	330 Move X22, [X21+16]
	331 Compare X22, 0
	332 JumpIfEqual {455}
	333 Move X8, [X22]
	334 Move X1, [X24]
	335 NotImplemented "Instruction LDRH not yet implemented."
	336 Compare X9, 0
	337 JumpIfEqual {344}
	338 Move X10, [X8+176]
	339 Add X10, X10, 8
	340 NotImplemented "Instruction LDUR not yet implemented."
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Subtract X9, X9, 1
	343 Add X10, X10, 16
	344 Move W2, 1
	345 Move X0, X22
	346 Call 0x1C5D788
	347 Move W9, [X10]
	348 Add W9, W9, 1
	349 Add X8, X8, W9
	350 Add X0, X8, 312
	351 Move X8, [X0]
	352 Move X1, [X0+8]
	353 Move X0, X23
	354 NotImplemented "Instruction BLR not yet implemented."
	355 Move X8, 0x1B08000
	356 Move X8, [X8+960]
	357 Move X9, 0x1B08000
	358 Move X9, [X9+968]
	359 Move X1, X0
	360 Move X8, [X8]
	361 Move X3, X31
	362 Move X2, [X9]
	363 Move X0, X8
	364 Call String.Concat, X0, X1, X2
	365 Compare X19, 0
	366 JumpIfNotEqual {316}
	367 Move W9, [X10]
	368 Add W9, W9, 1
	369 Add X8, X8, W9
	370 Add X0, X8, 312
	371 Move X8, [X0]
	372 Move X1, [X0+8]
	373 Move X0, X22
	374 NotImplemented "Instruction BLR not yet implemented."
	375 Move X8, [X20+32]
	376 Move W9, [X21+25]
	377 Move X20, X0
	378 Add X1, X31, 24
	379 Move X8, [X8+192]
	380 Move [X31+24], W9
	381 Move X8, [X8+8]
	382 Move X0, X8
	383 Call 0x1C17E04
	384 Move X8, [X23]
	385 Move X1, [X25]
	386 Move X21, X0
	387 NotImplemented "Instruction LDRH not yet implemented."
	388 Compare X9, 0
	389 JumpIfEqual {396}
	390 Move X10, [X8+176]
	391 Add X10, X10, 8
	392 NotImplemented "Instruction LDUR not yet implemented."
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Subtract X9, X9, 1
	395 Add X10, X10, 16
	396 Move W2, 5
	397 Move X0, X23
	398 Call 0x1C5D788
	399 Move W9, [X10]
	400 Add W9, W9, 5
	401 Add X8, X8, W9
	402 Add X0, X8, 312
	403 Move X8, [X0]
	404 Move X2, [X0+8]
	405 Move X0, X23
	406 Move X1, X21
	407 NotImplemented "Instruction BLR not yet implemented."
	408 Move X8, 0x1B08000
	409 Move X8, [X8+960]
	410 Move X9, 0x1B08000
	411 Move X9, [X9+936]
	412 Move X3, X0
	413 Move X8, [X8]
	414 Move X1, X20
	415 Move X2, [X9]
	416 Move X0, X8
	417 Move W9, [X10]
	418 Add W9, W9, 1
	419 Add X8, X8, W9
	420 Add X0, X8, 312
	421 Move X8, [X0]
	422 Move X1, [X0+8]
	423 Move X0, X22
	424 NotImplemented "Instruction BLR not yet implemented."
	425 Move X10, 0x1B08000
	426 Move W9, [X21+25]
	427 Move X10, [X10+936]
	428 Move X8, 0x1ADE000
	429 Move X8, [X8+2904]
	430 Move X22, X0
	431 Move X21, [X10]
	432 Move X10, 0x1B08000
	433 Move X8, [X8]
	434 Move X10, [X10+960]
	435 Move [X31+28], W9
	436 Move W9, [X8+224]
	437 Move X23, [X10]
	438 Compare W9, 0
	439 JumpIfNotEqual {442}
	440 Move X0, X8
	441 Call 0x1C17DFC
	442 Move X8, [X20+32]
	443 Add X0, X31, 28
	444 Move X8, [X8+192]
	445 Move X1, [X8+88]
	446 Call Boolean.ToString, X0
	447 Move X3, X0
	448 Move X0, X23
	449 Move X1, X22
	450 Move X2, X21
	451 Move X4, X31
	452 Call String.Concat, X0, X1, X2, X3
	453 Compare X19, 0
	454 JumpIfNotEqual {316}
	455 Call 0x1C17F20

Method: SpatialSys.ObservableState.ImmerPatch ToImmerPatch()

Disassembly:
	0x02616AB8 CBZ X20, 0x2616B58
	0x02616ABC LDR X8, [X20]
	0x02616AC0 ADRP X22, 0x1B07000
	0x02616AC4 LDR X1, [X23]
	0x02616AC8 MOV X19, X0
	0x02616ACC LDRH W9, [X8 + 0x12E]
	0x02616AD0 LDR X22, [X22 + 0x390]
	0x02616AD4 CBZ X9, 0x2616AF8
	0x02616AD8 LDR X10, [X8 + 0xB0]
	0x02616ADC ADD X10, X10, 0x8
	0x02616AE0 LDUR X11, [X10 - 0x8]
	0x02616AE4 CMP X11, X1
	0x02616AE8 B.EQ 0x2616B08
	0x02616AEC SUBS X9, X9, 0x1
	0x02616AF0 ADD X10, X10, 0x10
	0x02616AF4 B.NE 0x2616AE0
	0x02616AF8 MOVZ W2, 0x1
	0x02616AFC MOV X0, X20
	0x02616B00 BL 0x1C5C788
	0x02616B04 B 0x2616B18
	0x02616B08 LDR W9, [X10]
	0x02616B0C ADD W9, W9, 0x1
	0x02616B10 ADD X8, X8, W9, 0x4, SXTW
	0x02616B14 ADD X0, X8, 0x138
	0x02616B18 LDP X8, X1, [X0]
	0x02616B1C MOV X0, X20
	0x02616B20 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1DC5000
	007 Move X22, 0x1B06000
	008 Move W8, [X21+41]
	009 Move X22, [X22+2992]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1B06000
	017 Move X0, [X0+2992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+41], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X20+32]
	027 Move X0, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X8, [X8+192]
	033 Move X1, [X8+96]
	034 Move X30, [X31+48]
	035 Call 0x21F09C4, X0
	036 Return X0

