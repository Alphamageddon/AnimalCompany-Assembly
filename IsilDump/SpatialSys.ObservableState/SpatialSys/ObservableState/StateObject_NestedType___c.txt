Type: SpatialSys.ObservableState.StateObject/<>c

Method: System.Void .cctor()

Disassembly:
	0x035D0578 LDR X9, [X8 + 0x378]
	0x035D057C BLR X9
	0x035D0580 B 0x35D0478
	0x035D0584 MOV X21, X31
	0x035D0588 CBZ X20, 0x35D05E4
	0x035D058C LDR X8, [X20]
	0x035D0590 LDR X1, [X22]
	0x035D0594 LDRH W9, [X8 + 0x12E]
	0x035D0598 CBZ X9, 0x35D05BC
	0x035D059C LDR X10, [X8 + 0xB0]
	0x035D05A0 ADD X10, X10, 0x8
	0x035D05A4 LDUR X11, [X10 - 0x8]
	0x035D05A8 CMP X11, X1
	0x035D05AC B.EQ 0x35D05CC
	0x035D05B0 SUBS X9, X9, 0x1
	0x035D05B4 ADD X10, X10, 0x10
	0x035D05B8 B.NE 0x35D05A4
	0x035D05BC MOV X0, X20
	0x035D05C0 MOV W2, W31
	0x035D05C4 BL 0x1C5C788
	0x035D05C8 B 0x35D05D8
	0x035D05CC LDRSW X9, [X10]
	0x035D05D0 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE11000
	005 Move X20, 0xB69000
	006 Move W8, [X19+508]
	007 Move X20, [X20+1416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB69000
	013 Move X0, [X0+1416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+508], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x035D05D4 ADD X0, X8, 0x138
	0x035D05D8 LDP X8, X1, [X0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <InternalInitialize>b__13_3(System.Reflection.CustomAttributeData x)

Disassembly:
	0x035D05DC MOV X0, X20
	0x035D05E0 BLR X8
	0x035D05E4 CBNZ X21, 0x35D0648
	0x035D05E8 LDR X8, [X19]
	0x035D05EC MOV X0, X19
	0x035D05F0 LDR X9, [X8 + 0x358]
	0x035D05F4 LDR X1, [X8 + 0x360]
	0x035D05F8 BLR X9
	0x035D05FC TBZ X0, 0x0, 0x35D0614
	0x035D0600 LDP X20, X19, [X31 + 0x30]
	0x035D0604 LDP X22, X21, [X31 + 0x20]
	0x035D0608 LDP X24, X23, [X31 + 0x10]
	0x035D060C LDR X30, [X31], #0x40
	0x035D0610 RET
	0x035D0614 LDR X8, [X19]
	0x035D0618 MOV X0, X19
	0x035D061C LDP X20, X19, [X31 + 0x30]
	0x035D0620 LDP X22, X21, [X31 + 0x20]
	0x035D0624 LDR X3, [X8 + 0x3E8]
	0x035D0628 LDR X2, [X8 + 0x3F0]
	0x035D062C LDP X24, X23, [X31 + 0x10]
	0x035D0630 MOV W1, W31
	0x035D0634 LDR X30, [X31], #0x40
	0x035D0638 BR X3
	0x035D063C BL 0x1C16F20
	0x035D0640 BL 0x1C16F20
	0x035D0644 BL 0x1C16F20
	0x035D0648 MOV X0, X21
	0x035D064C BL 0x1C16F18
	0x035D0650 B 0x35D065C
	0x035D0654 B 0x35D065C
	0x035D0658 B 0x35D065C
	0x035D065C CMP W1, 0x1
	0x035D0660 B.NE 0x35D0674
	0x035D0664 BL 0x3EB1AD0
	0x035D0668 LDR X21, [X0]
	0x035D066C BL 0x3EB1AE0
	0x035D0670 B 0x35D0588
	0x035D0674 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE11000
	006 Move W8, [X20+509]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xB69000
	013 Move X0, [X0+1632]
	014 Call 0x1C17CF4
	015 Move X0, 0xB24000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+509], W8
	020 Compare X19, 0
	021 JumpIfEqual {49}
	022 Move X20, 0xB69000
	023 Move X21, 0xB24000
	024 Move X20, [X20+1632]
	025 Move X21, [X21+1728]
	026 Move X0, X19
	027 Move X1, X31
	028 Call CustomAttributeData.get_AttributeType, X0
	029 Move X8, [X21]
	030 Move X20, [X20]
	031 Move X19, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Call Type.GetTypeFromHandle, X0
	040 Move X1, X0
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X2, X31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call Type.op_Inequality, X0, X1
	048 Return X0
	049 Call 0x1C17F20

Method: System.String <InternalInitialize>b__13_1(System.ValueTuple`2<System.String, SpatialSys.ObservableState.IStateObject> p)

Disassembly:
	0x035D0678 MOV X21, X31
	0x035D067C B 0x35D0684

ISIL:
	001 Move X0, X1
	002 Return X0

Method: SpatialSys.ObservableState.IStateObject <InternalInitialize>b__13_2(System.ValueTuple`2<System.String, SpatialSys.ObservableState.IStateObject> p)

Disassembly:
	0x035D0680 MOV X19, X0
	0x035D0684 CBZ X20, 0x35D06E0

ISIL:
	001 Move X0, X2
	002 Return X0

Method: System.Boolean <Reset>b__18_0(SpatialSys.ObservableState.IStateObject x)

Disassembly:
	0x035D0688 LDR X8, [X20]
	0x035D068C LDR X1, [X22]
	0x035D0690 LDRH W9, [X8 + 0x12E]
	0x035D0694 CBZ X9, 0x35D06B8
	0x035D0698 LDR X10, [X8 + 0xB0]
	0x035D069C ADD X10, X10, 0x8
	0x035D06A0 LDUR X11, [X10 - 0x8]
	0x035D06A4 CMP X11, X1
	0x035D06A8 B.EQ 0x35D06C8
	0x035D06AC SUBS X9, X9, 0x1
	0x035D06B0 ADD X10, X10, 0x10
	0x035D06B4 B.NE 0x35D06A0
	0x035D06B8 MOV X0, X20
	0x035D06BC MOV W2, W31
	0x035D06C0 BL 0x1C5C788
	0x035D06C4 B 0x35D06D4
	0x035D06C8 LDRSW X9, [X10]
	0x035D06CC ADD X8, X8, X9, 0x4, LSL
	0x035D06D0 ADD X0, X8, 0x138
	0x035D06D4 LDP X8, X1, [X0]
	0x035D06D8 MOV X0, X20
	0x035D06DC BLR X8
	0x035D06E0 CBNZ X21, 0x35D06EC
	0x035D06E4 MOV X0, X19
	0x035D06E8 BL 0x1D2C690
	0x035D06EC MOV X0, X21
	0x035D06F0 BL 0x1C16F18
	0x035D06F4 BL 0x1990590
	0x035D06F8 RET
	0x035D06FC STR X30, [X31 - 0x40]!
	0x035D0700 STP X24, X23, [X31 + 0x10]
	0x035D0704 STP X22, X21, [X31 + 0x20]
	0x035D0708 STP X20, X19, [X31 + 0x30]
	0x035D070C ADRP X20, 0xE10000
	0x035D0710 LDRB W8, [X20 + 0x20B]
	0x035D0714 MOV X19, X0
	0x035D0718 TBNZ X8, 0x0, 0x35D0778
	0x035D071C ADRP X0, 0xB23000
	0x035D0720 LDR X0, [X0 + 0xE00]
	0x035D0724 BL 0x1C16CF4
	0x035D0728 ADRP X0, 0xB67000
	0x035D072C LDR X0, [X0 + 0xFE8]
	0x035D0730 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE11000
	005 Move W8, [X20+510]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB25000
	012 Move X0, [X0+432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+510], W8
	016 Compare X19, 0
	017 JumpIfEqual {48}
	018 Move X10, 0xB25000
	019 Move X8, [X19]
	020 Move X10, [X10+432]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 15
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 15
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 NotImplemented "Instruction ORN not yet implemented."
	045 And W0, W8, 1
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Boolean <Reset>b__18_1(SpatialSys.ObservableState.IStateObject x)

Disassembly:
	0x035D0734 ADRP X0, 0xB67000
	0x035D0738 LDR X0, [X0 + 0xFF0]
	0x035D073C BL 0x1C16CF4
	0x035D0740 ADRP X0, 0xB23000
	0x035D0744 LDR X0, [X0 + 0xE18]
	0x035D0748 BL 0x1C16CF4
	0x035D074C ADRP X0, 0xB23000
	0x035D0750 LDR X0, [X0 + 0x6A8]
	0x035D0754 BL 0x1C16CF4
	0x035D0758 ADRP X0, 0xB4D000
	0x035D075C LDR X0, [X0 + 0x318]
	0x035D0760 BL 0x1C16CF4
	0x035D0764 ADRP X0, 0xB4D000
	0x035D0768 LDR X0, [X0 + 0x310]
	0x035D076C BL 0x1C16CF4
	0x035D0770 MOVZ W8, 0x1
	0x035D0774 STRB W8, [X20 + 0x20B]
	0x035D0778 LDR X20, [X19 + 0x30]
	0x035D077C MOVZ W8, 0x1
	0x035D0780 STRB W8, [X19 + 0x38]
	0x035D0784 CBZ X20, 0x35D0A88
	0x035D0788 ADRP X10, 0xB4D000
	0x035D078C LDR X8, [X20]
	0x035D0790 LDR X10, [X10 + 0x318]
	0x035D0794 LDRH W9, [X8 + 0x12E]
	0x035D0798 LDR X1, [X10]
	0x035D079C CBZ X9, 0x35D07C0
	0x035D07A0 LDR X10, [X8 + 0xB0]
	0x035D07A4 ADD X10, X10, 0x8
	0x035D07A8 LDUR X11, [X10 - 0x8]
	0x035D07AC CMP X11, X1
	0x035D07B0 B.EQ 0x35D07D0
	0x035D07B4 SUBS X9, X9, 0x1
	0x035D07B8 ADD X10, X10, 0x10
	0x035D07BC B.NE 0x35D07A8
	0x035D07C0 MOV X0, X20
	0x035D07C4 MOV W2, W31
	0x035D07C8 BL 0x1C5C788
	0x035D07CC B 0x35D07DC
	0x035D07D0 LDRSW X9, [X10]
	0x035D07D4 ADD X8, X8, X9, 0x4, LSL
	0x035D07D8 ADD X0, X8, 0x138
	0x035D07DC LDP X8, X1, [X0]
	0x035D07E0 MOV X0, X20
	0x035D07E4 BLR X8
	0x035D07E8 CBZ X0, 0x35D0A88
	0x035D07EC ADRP X10, 0xB23000
	0x035D07F0 LDR X8, [X0]
	0x035D07F4 LDR X10, [X10 + 0x6A8]
	0x035D07F8 MOV X20, X0
	0x035D07FC LDRH W9, [X8 + 0x12E]
	0x035D0800 LDR X1, [X10]
	0x035D0804 CBZ X9, 0x35D0828
	0x035D0808 LDR X10, [X8 + 0xB0]
	0x035D080C ADD X10, X10, 0x8
	0x035D0810 LDUR X11, [X10 - 0x8]
	0x035D0814 CMP X11, X1
	0x035D0818 B.EQ 0x35D0838
	0x035D081C SUBS X9, X9, 0x1
	0x035D0820 ADD X10, X10, 0x10
	0x035D0824 B.NE 0x35D0810
	0x035D0828 MOVZ W2, 0x13
	0x035D082C MOV X0, X20
	0x035D0830 BL 0x1C5C788
	0x035D0834 B 0x35D0848
	0x035D0838 LDR W9, [X10]
	0x035D083C ADD W9, W9, 0x13
	0x035D0840 ADD X8, X8, W9, 0x4, SXTW
	0x035D0844 ADD X0, X8, 0x138
	0x035D0848 LDP X8, X2, [X0]
	0x035D084C MOV X0, X20
	0x035D0850 MOV X1, X19
	0x035D0854 BLR X8
	0x035D0858 LDR X8, [X19]
	0x035D085C MOV X0, X19
	0x035D0860 LDR X9, [X8 + 0x318]
	0x035D0864 LDR X1, [X8 + 0x320]
	0x035D0868 BLR X9
	0x035D086C CBZ X0, 0x35D0A88
	0x035D0870 ADRP X10, 0xB67000
	0x035D0874 LDR X8, [X0]
	0x035D0878 LDR X10, [X10 + 0xFE8]
	0x035D087C MOV X20, X0
	0x035D0880 LDRH W9, [X8 + 0x12E]
	0x035D0884 LDR X1, [X10]
	0x035D0888 CBZ X9, 0x35D08AC
	0x035D088C LDR X10, [X8 + 0xB0]
	0x035D0890 ADD X10, X10, 0x8
	0x035D0894 LDUR X11, [X10 - 0x8]
	0x035D0898 CMP X11, X1
	0x035D089C B.EQ 0x35D08BC
	0x035D08A0 SUBS X9, X9, 0x1
	0x035D08A4 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE11000
	005 Move W8, [X20+511]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB25000
	012 Move X0, [X0+432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+511], W8
	016 Compare X19, 0
	017 JumpIfEqual {101}
	018 Move X20, 0xB25000
	019 Move X8, [X19]
	020 Move X20, [X20+432]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X20]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 12
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 12
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {72}
	046 Move X8, [X19]
	047 Move X1, [X20]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 13
	058 Move X0, X19
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 13
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {86}
	072 Move X8, [X19]
	073 Move X1, [X20]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move W2, 15
	084 Move X0, X19
	085 Call 0x1C5D788
	086 Move W8, W31
	087 Move W9, [X10]
	088 Add W9, W9, 15
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X19
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Xor W8, W0, 1
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 And W0, W8, 1
	099 Move X30, [X31+32]
	100 Return X0
	101 Call 0x1C17F20

Method: System.Boolean <GetChildStatePropertyInfo>b__20_0(System.Reflection.PropertyInfo p)

Disassembly:
	0x035D08A8 B.NE 0x35D0894
	0x035D08AC MOV X0, X20
	0x035D08B0 MOV W2, W31
	0x035D08B4 BL 0x1C5C788
	0x035D08B8 B 0x35D08C8
	0x035D08BC LDRSW X9, [X10]
	0x035D08C0 ADD X8, X8, X9, 0x4, LSL
	0x035D08C4 ADD X0, X8, 0x138
	0x035D08C8 LDP X8, X1, [X0]
	0x035D08CC ADRP X22, 0xB23000
	0x035D08D0 LDR X22, [X22 + 0xE00]
	0x035D08D4 MOV X0, X20
	0x035D08D8 BLR X8
	0x035D08DC MOV X20, X0
	0x035D08E0 CBZ X0, 0x35D0A8C
	0x035D08E4 ADRP X21, 0xB23000
	0x035D08E8 ADRP X23, 0xB67000
	0x035D08EC ADRP X24, 0xB4D000
	0x035D08F0 LDR X21, [X21 + 0xE18]
	0x035D08F4 LDR X23, [X23 + 0xFF0]
	0x035D08F8 LDR X24, [X24 + 0x310]
	0x035D08FC LDR X8, [X20]
	0x035D0900 LDR X1, [X21]
	0x035D0904 LDRH W9, [X8 + 0x12E]
	0x035D0908 CBZ X9, 0x35D092C
	0x035D090C LDR X10, [X8 + 0xB0]
	0x035D0910 ADD X10, X10, 0x8
	0x035D0914 LDUR X11, [X10 - 0x8]
	0x035D0918 CMP X11, X1
	0x035D091C B.EQ 0x35D093C
	0x035D0920 SUBS X9, X9, 0x1
	0x035D0924 ADD X10, X10, 0x10
	0x035D0928 B.NE 0x35D0914
	0x035D092C MOV X0, X20
	0x035D0930 MOV W2, W31
	0x035D0934 BL 0x1C5C788
	0x035D0938 B 0x35D0948
	0x035D093C LDRSW X9, [X10]
	0x035D0940 ADD X8, X8, X9, 0x4, LSL
	0x035D0944 ADD X0, X8, 0x138
	0x035D0948 LDP X8, X1, [X0]
	0x035D094C MOV X0, X20
	0x035D0950 BLR X8
	0x035D0954 TBZ X0, 0x0, 0x35D0A08
	0x035D0958 LDR X8, [X20]
	0x035D095C LDR X1, [X23]
	0x035D0960 LDRH W9, [X8 + 0x12E]
	0x035D0964 CBZ X9, 0x35D0988
	0x035D0968 LDR X10, [X8 + 0xB0]
	0x035D096C ADD X10, X10, 0x8
	0x035D0970 LDUR X11, [X10 - 0x8]
	0x035D0974 CMP X11, X1
	0x035D0978 B.EQ 0x35D0998
	0x035D097C SUBS X9, X9, 0x1
	0x035D0980 ADD X10, X10, 0x10
	0x035D0984 B.NE 0x35D0970
	0x035D0988 MOV X0, X20
	0x035D098C MOV W2, W31
	0x035D0990 BL 0x1C5C788
	0x035D0994 B 0x35D09A4
	0x035D0998 LDRSW X9, [X10]
	0x035D099C ADD X8, X8, X9, 0x4, LSL
	0x035D09A0 ADD X0, X8, 0x138
	0x035D09A4 LDP X8, X1, [X0]
	0x035D09A8 MOV X0, X20
	0x035D09AC BLR X8
	0x035D09B0 CBZ X0, 0x35D0A84
	0x035D09B4 LDR X9, [X0]
	0x035D09B8 LDR X8, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE11000
	005 Move W8, [X20+512]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0xB69000
	012 Move X0, [X0+1640]
	013 Call 0x1C17CF4
	014 Move X0, 0xB24000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move X0, 0xB69000
	018 Move X0, [X0+1648]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+512], W8
	022 Compare X19, 0
	023 JumpIfEqual {86}
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+680]
	027 Move X1, [X8+688]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X1, X31
	030 Move X2, X31
	031 Call MethodInfo.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {81}
	036 Move X8, 0xB24000
	037 Move X8, [X8+1728]
	038 Move X0, [X8]
	039 Move X8, 0xB69000
	040 Move X8, [X8+1640]
	041 Move W9, [X0+224]
	042 Move X20, [X8]
	043 Compare W9, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X20
	047 Move X1, X31
	048 Call Type.GetTypeFromHandle, X0
	049 Move X8, [X19]
	050 Move X20, X0
	051 Move X0, X19
	052 Move X9, [X8+584]
	053 Move X1, [X8+592]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X20, 0
	056 JumpIfEqual {86}
	057 Move X8, [X20]
	058 Move X1, X0
	059 Move X0, X20
	060 Move X9, [X8+680]
	061 Move X2, [X8+688]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {81}
	067 Move X8, [X19]
	068 Move X0, X19
	069 Move X9, [X8+424]
	070 Move X1, [X8+432]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, 0xB69000
	073 Move X8, [X8+1648]
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X2, X31
	077 Move X1, [X8]
	078 Move X30, [X31+32]
	079 Call String.op_Inequality, X0, X1
	080 Return X0
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move W0, W31
	084 Move X30, [X31+32]
	085 Return X0
	086 Call 0x1C17F20

