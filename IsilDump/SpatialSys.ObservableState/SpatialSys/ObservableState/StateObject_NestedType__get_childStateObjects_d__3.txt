Type: SpatialSys.ObservableState.StateObject/<get_childStateObjects>d__3

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x035CE988 ADRP X24, 0xB26000
	0x035CE98C LDR X23, [X23 + 0x5E8]
	0x035CE990 LDR X24, [X24 + 0x1B0]
	0x035CE994 ADD X0, X31, 0x50
	0x035CE998 MOV X1, X31
	0x035CE99C BL 0x35B4830
	0x035CE9A0 MOV X4, X0
	0x035CE9A4 LDR X0, [X19 + 0x40]
	0x035CE9A8 CBZ X0, 0x35CECC0
	0x035CE9AC LDR X3, [X23]
	0x035CE9B0 MOV X21, X1
	0x035CE9B4 ADD X2, X31, 0xA8
	0x035CE9B8 MOV X1, X4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x035D0E58 BLR X8
	0x035D0E5C LDR X8, [X29]
	0x035D0E60 MOV X27, X0
	0x035D0E64 CMP X0, X20
	0x035D0E68 LDR W9, [X8 + 0xE0]
	0x035D0E6C B.EQ 0x35D0E9C
	0x035D0E70 CBNZ W9, 0x35D0E80

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <get_childStateObjects>d__3.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x035D0E74 MOV X0, X8
	0x035D0E78 BL 0x1C16DFC
	0x035D0E7C LDR X8, [X29]
	0x035D0E80 LDR X8, [X8 + 0xB8]
	0x035D0E84 LDR X0, [X8 + 0x8]
	0x035D0E88 CBZ X0, 0x35D10B0
	0x035D0E8C LDR X2, [X23]
	0x035D0E90 MOV X1, X27
	0x035D0E94 BL 0x2602314
	0x035D0E98 B 0x35D0DFC
	0x035D0E9C CBNZ W9, 0x35D0EAC
	0x035D0EA0 MOV X0, X8
	0x035D0EA4 BL 0x1C16DFC
	0x035D0EA8 LDR X8, [X29]
	0x035D0EAC LDR X9, [X8 + 0xB8]
	0x035D0EB0 LDR X9, [X9 + 0x8]
	0x035D0EB4 CBZ X9, 0x35D10D8
	0x035D0EB8 LDR W25, [X9 + 0x18]
	0x035D0EBC CMP W25, 0x1
	0x035D0EC0 B.LT 0x35D0F84
	0x035D0EC4 LDR X27, [X31 + 0x10]
	0x035D0EC8 MOV W21, W31
	0x035D0ECC LDR W9, [X8 + 0xE0]
	0x035D0ED0 CBNZ W9, 0x35D0EE0
	0x035D0ED4 MOV X0, X8
	0x035D0ED8 BL 0x1C16DFC
	0x035D0EDC LDR X8, [X29]
	0x035D0EE0 LDR X8, [X8 + 0xB8]
	0x035D0EE4 LDR X0, [X8 + 0x8]
	0x035D0EE8 CBZ X0, 0x35D10C0
	0x035D0EEC LDR X1, [X22]
	0x035D0EF0 BL 0x26022C0
	0x035D0EF4 MOV X28, X0
	0x035D0EF8 CBZ X0, 0x35D10C8
	0x035D0EFC LDR X8, [X28]
	0x035D0F00 LDR X1, [X19]
	0x035D0F04 LDRH W9, [X8 + 0x12E]
	0x035D0F08 CBZ X9, 0x35D0F2C
	0x035D0F0C LDR X10, [X8 + 0xB0]
	0x035D0F10 ADD X10, X10, 0x8
	0x035D0F14 LDUR X11, [X10 - 0x8]
	0x035D0F18 CMP X11, X1
	0x035D0F1C B.EQ 0x35D0F3C
	0x035D0F20 SUBS X9, X9, 0x1
	0x035D0F24 ADD X10, X10, 0x10
	0x035D0F28 B.NE 0x35D0F14
	0x035D0F2C MOV X0, X28
	0x035D0F30 MOV W2, W31
	0x035D0F34 BL 0x1C5C788
	0x035D0F38 B 0x35D0F48
	0x035D0F3C LDRSW X9, [X10]
	0x035D0F40 ADD X8, X8, X9, 0x4, LSL
	0x035D0F44 ADD X0, X8, 0x138
	0x035D0F48 LDP X8, X1, [X0]
	0x035D0F4C MOV X0, X28
	0x035D0F50 BLR X8
	0x035D0F54 MOV X1, X0
	0x035D0F58 CBZ X27, 0x35D10B8
	0x035D0F5C LDR X8, [X27]
	0x035D0F60 LDP X9, X2, [X8 + 0x1A8]
	0x035D0F64 MOV X0, X27
	0x035D0F68 BLR X9
	0x035D0F6C ADD W21, W21, 0x1
	0x035D0F70 MOV X27, X0
	0x035D0F74 CMP W21, W25
	0x035D0F78 B.EQ 0x35D0F88
	0x035D0F7C LDR X8, [X29]
	0x035D0F80 B 0x35D0ECC
	0x035D0F84 LDR X27, [X31 + 0x10]
	0x035D0F88 LDR X25, [X31 + 0x8]
	0x035D0F8C CBZ X26, 0x35D10E0
	0x035D0F90 LDR X8, [X26]
	0x035D0F94 LDR X1, [X19]
	0x035D0F98 LDRH W9, [X8 + 0x12E]
	0x035D0F9C CBZ X9, 0x35D0FC0
	0x035D0FA0 LDR X10, [X8 + 0xB0]
	0x035D0FA4 ADD X10, X10, 0x8
	0x035D0FA8 LDUR X11, [X10 - 0x8]
	0x035D0FAC CMP X11, X1
	0x035D0FB0 B.EQ 0x35D0FD0
	0x035D0FB4 SUBS X9, X9, 0x1
	0x035D0FB8 ADD X10, X10, 0x10
	0x035D0FBC B.NE 0x35D0FA8
	0x035D0FC0 MOV X0, X26
	0x035D0FC4 MOV W2, W31
	0x035D0FC8 BL 0x1C5C788
	0x035D0FCC B 0x35D0FDC
	0x035D0FD0 LDRSW X9, [X10]
	0x035D0FD4 ADD X8, X8, X9, 0x4, LSL
	0x035D0FD8 ADD X0, X8, 0x138
	0x035D0FDC LDP X8, X1, [X0]
	0x035D0FE0 MOV X0, X26
	0x035D0FE4 BLR X8
	0x035D0FE8 LDR X8, [X26]
	0x035D0FEC LDR X1, [X19]
	0x035D0FF0 MOV X28, X0
	0x035D0FF4 LDRH W9, [X8 + 0x12E]
	0x035D0FF8 CBZ X9, 0x35D101C
	0x035D0FFC LDR X10, [X8 + 0xB0]
	0x035D1000 ADD X10, X10, 0x8
	0x035D1004 LDUR X11, [X10 - 0x8]
	0x035D1008 CMP X11, X1
	0x035D100C B.EQ 0x35D102C
	0x035D1010 SUBS X9, X9, 0x1
	0x035D1014 ADD X10, X10, 0x10
	0x035D1018 B.NE 0x35D1004
	0x035D101C MOVZ W2, 0x12
	0x035D1020 MOV X0, X26
	0x035D1024 BL 0x1C5C788
	0x035D1028 B 0x35D103C
	0x035D102C LDR W9, [X10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X0
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X20, 0xE11000
	007 Move W8, [X20+516]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xB69000
	014 Move X0, [X0+1488]
	015 Call 0x1C17CF4
	016 Move X0, 0xB69000
	017 Move X0, [X0+1712]
	018 Call 0x1C17CF4
	019 Move X0, 0xB69000
	020 Move X0, [X0+1720]
	021 Call 0x1C17CF4
	022 Move X0, 0xB69000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+516], W8
	027 Add X8, X31, 88
	028 Move [X31+72], X8
	029 Move W8, [X19+16]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare W8, 0
	032 JumpIfNotEqual {100}
	033 Move X8, [X19+40]
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W9, TEMP
	037 Move [X19+16], W9
	038 Compare X8, 0
	039 JumpIfEqual {90}
	040 Move X0, [X8+64]
	041 Compare X0, 0
	042 JumpIfEqual {91}
	043 Move X8, 0xB69000
	044 Move X8, [X8+1488]
	045 Move X1, [X8]
	046 Call Dictionary`2<Object, Object>.get_Values, X0
	047 Compare X0, 0
	048 JumpIfEqual {92}
	049 Move X8, 0xB69000
	050 Move X8, [X8+1728]
	051 Move X1, [X8]
	052 Add X8, X31, 8
	053 Call ValueCollection<Object, Object>.GetEnumerator, X0
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X8, [X31+24]
	056 Move X19, [X31+88]
	057 Move TEMP, 2
	058 Not TEMP
	059 Move W9, TEMP
	060 Move [X31+2], V0
	061 Move [X31+48], X8
	062 Move [X19+64], X8
	063 Move [X19+3], V0
	064 Move [X19+16], W9
	065 Move TEMP, 2
	066 Not TEMP
	067 Move W8, TEMP
	068 Move [X19+16], W8
	069 Move X8, 0xB69000
	070 Move X8, [X8+1712]
	071 Add X0, X19, 48
	072 Move X1, [X8]
	073 Call Enumerator<Object, Object>.MoveNext, X0
	074 Move X8, [X31+88]
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {83}
	079 Move X9, [X8+64]
	080 Move W0, 1
	081 Move [X8+16], W0
	082 Move [X8+24], X9
	083 Move X0, X8
	084 Call <get_childStateObjects>d__3.<>m__Finally1, X0
	085 Move X8, [X31+88]
	086 Move W0, W31
	087 Move [X8+48], X31
	088 Move [X8+56], X31
	089 Move [X8+64], X31
	090 Call 0x1C17F20
	091 Call 0x1C17F20
	092 Call 0x1C17F20
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Call 0x3EB2AD0
	095 Move X19, [X0]
	096 Move [X31+64], X19
	097 Call 0x3EB2AE0
	098 Compare X19, 0
	099 JumpIfNotEqual {106}
	100 Move W0, W31
	101 Move X20, [X31+96]
	102 Move X19, [X31+104]
	103 Move X30, [X31+80]
	104 Add X31, X31, 112
	105 Return X0
	106 Add X8, X31, 64
	107 Add X0, X8, 8
	108 Call 0x1BC2FE8
	109 Move X0, X19
	110 Call 0x1C17F18
	111 Compare X19, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1D2D690
	114 Move X0, [X31+88]
	115 Move W8, [X0+16]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add W31, W8, 3
	118 Call <get_childStateObjects>d__3.<>m__Finally1, X0
	119 Move X0, X19
	120 Call 0x1C17F18
	121 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x035D1030 ADD W9, W9, 0x12
	0x035D1034 ADD X8, X8, W9, 0x4, SXTW
	0x035D1038 ADD X0, X8, 0x138
	0x035D103C LDP X8, X3, [X0]
	0x035D1040 LDR W9, [X31 + 0x18]
	0x035D1044 MOV X0, X26
	0x035D1048 MOV X1, X31
	0x035D104C AND W2, W9, 0x1
	0x035D1050 BLR X8
	0x035D1054 CBZ X27, 0x35D10E8
	0x035D1058 LDR X8, [X27]
	0x035D105C MOV X2, X0
	0x035D1060 LDP X9, X3, [X8 + 0x1B8]
	0x035D1064 MOV X0, X27
	0x035D1068 MOV X1, X28
	0x035D106C BLR X9
	0x035D1070 MOV X27, X31
	0x035D1074 MOVZ W21, 0xD
	0x035D1078 LDRB W8, [X31 + 0x2C]
	0x035D107C CBZ W8, 0x35D108C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE10000
	006 Move X20, 0xB68000
	007 Move W8, [X21+517]
	008 Move X20, [X20+1736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB68000
	015 Move X0, [X0+1736]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+517], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 48
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object, Object>.Dispose, X0
	030 Return 

Method: SpatialSys.ObservableState.IStateObject System.Collections.Generic.IEnumerator<SpatialSys.ObservableState.IStateObject>.get_Current()

Disassembly:
	0x035D1080 LDR X0, [X31 + 0x20]
	0x035D1084 MOV X1, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x035D1088 BL 0x33E14E4
	0x035D108C CBNZ X27, 0x35D1188
	0x035D1090 CMP W21, 0xD
	0x035D1094 B.EQ 0x35D109C
	0x035D1098 CBNZ W21, 0x35D1160
	0x035D109C LDR W8, [X31 + 0x1C]
	0x035D10A0 ADD W24, W24, 0x1
	0x035D10A4 CMP W24, W8
	0x035D10A8 B.NE 0x35D0D28
	0x035D10AC B 0x35D1160
	0x035D10B0 BL 0x1C16F20
	0x035D10B4 B 0x35D1198
	0x035D10B8 BL 0x1C16F20
	0x035D10BC B 0x35D1198

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xB23000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xB68000
	011 Move X0, [X0+1744]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x035D10C0 BL 0x1C16F20
	0x035D10C4 B 0x35D1198

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.ObservableState.IStateObject> System.Collections.Generic.IEnumerable<SpatialSys.ObservableState.IStateObject>.GetEnumerator()

Disassembly:
	0x035D10C8 BL 0x1C16F20
	0x035D10CC B 0x35D1198
	0x035D10D0 BL 0x1C16F20
	0x035D10D4 B 0x35D1198
	0x035D10D8 BL 0x1C16F20
	0x035D10DC B 0x35D1198
	0x035D10E0 BL 0x1C16F20
	0x035D10E4 B 0x35D1198
	0x035D10E8 BL 0x1C16F20
	0x035D10EC B 0x35D1198
	0x035D10F0 B 0x35D113C
	0x035D10F4 B 0x35D113C
	0x035D10F8 B 0x35D1134
	0x035D10FC B 0x35D1134
	0x035D1100 B 0x35D113C
	0x035D1104 B 0x35D113C
	0x035D1108 B 0x35D113C
	0x035D110C B 0x35D113C
	0x035D1110 B 0x35D1134
	0x035D1114 B 0x35D113C
	0x035D1118 B 0x35D1134
	0x035D111C B 0x35D1134
	0x035D1120 B 0x35D1134
	0x035D1124 B 0x35D1134
	0x035D1128 B 0x35D1134
	0x035D112C B 0x35D113C
	0x035D1130 B 0x35D113C
	0x035D1134 LDR X25, [X31 + 0x8]
	0x035D1138 B 0x35D113C
	0x035D113C MOV X26, X0
	0x035D1140 CMP W1, 0x1
	0x035D1144 B.NE 0x35D1190
	0x035D1148 MOV X0, X26
	0x035D114C BL 0x3EB1AD0
	0x035D1150 LDR X27, [X0]
	0x035D1154 BL 0x3EB1AE0
	0x035D1158 MOV W21, W31
	0x035D115C B 0x35D1078
	0x035D1160 LDR X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE10000
	005 Move W8, [X20+518]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB68000
	012 Move X0, [X0+1336]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+518], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X8, 0xB68000
	024 Move X8, [X8+1336]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Move X0, X31
	031 Move [X20+16], W31
	032 Call Environment.get_CurrentManagedThreadId
	033 Move [X20+32], W0
	034 Move X8, [X19+40]
	035 Move X19, X20
	036 Move [X20+40], X8
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x035D1164 MOV X0, X21

ISIL:
	001 Call <get_childStateObjects>d__3.System.Collections.Generic.IEnumerable<SpatialSys.ObservableState.IStateObject>.GetEnumerator, X0
	002 Return X0

