Type: SpatialSys.ObservableState.StateObservationContext/ObserverData

Method: SpatialSys.ObservableState.ObserverDelegate get_observerMethod()

Disassembly:
	0x035C9E50 LDR X0, [X0 + 0x388]
	0x035C9E54 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_observerMethod(SpatialSys.ObservableState.ObserverDelegate value)

Disassembly:
	0x035C9E58 ADRP X0, 0xB6F000
	0x035C9E5C LDR X0, [X0 + 0x390]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.HashSet`1<SpatialSys.ObservableState.IStateObject> get_observedState()

Disassembly:
	0x035C9E60 BL 0x1C16CF4
	0x035C9E64 ADRP X0, 0xB6F000

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_observedState(System.Collections.Generic.HashSet`1<SpatialSys.ObservableState.IStateObject> value)

Disassembly:
	0x035C9E68 LDR X0, [X0 + 0x398]
	0x035C9E6C BL 0x1C16CF4

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Collections.Generic.HashSet`1<SpatialSys.ObservableState.IStateObject> get_inheritedObservedState()

Disassembly:
	0x035C9E70 ADRP X0, 0xB6F000
	0x035C9E74 LDR X0, [X0 + 0x3A0]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_inheritedObservedState(System.Collections.Generic.HashSet`1<SpatialSys.ObservableState.IStateObject> value)

Disassembly:
	0x035C9E78 BL 0x1C16CF4
	0x035C9E7C ADRP X0, 0xB6F000

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Collections.Generic.List`1<SpatialSys.ObservableState.IStateOperation> get_pendingOperations()

Disassembly:
	0x035C9E80 LDR X0, [X0 + 0x3A8]
	0x035C9E84 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_pendingOperations(System.Collections.Generic.List`1<SpatialSys.ObservableState.IStateOperation> value)

Disassembly:
	0x035C9E88 ADRP X0, 0xB6F000
	0x035C9E8C LDR X0, [X0 + 0x3B0]

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.Boolean get_disposed()

Disassembly:
	0x035C9E90 BL 0x1C16CF4
	0x035C9E94 ADRP X0, 0xB6F000

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x035C9E98 LDR X0, [X0 + 0x3B8]
	0x035C9E9C BL 0x1C16CF4
	0x035C9EA0 ADRP X0, 0xB6F000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+96], W8
	003 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.ObserverDelegate observerMethod)

Disassembly:
	0x035C7F08 LDR X8, [X0 + 0xB8]
	0x035C7F0C LDR W8, [X8]
	0x035C7F10 CMP W21, W8
	0x035C7F14 B.LE 0x35C7E14
	0x035C7F18 LDR X0, [X19 + 0x78]
	0x035C7F1C CBZ X0, 0x35C84F0
	0x035C7F20 ADRP X8, 0xB2C000
	0x035C7F24 LDR X8, [X8 + 0x7A0]
	0x035C7F28 LDR X1, [X8]
	0x035C7F2C ADRP X22, 0xB55000
	0x035C7F30 LDR X22, [X22 + 0x5F0]
	0x035C7F34 MOV X2, X31
	0x035C7F38 BL 0x32333E0
	0x035C7F3C MOV X21, X31
	0x035C7F40 MOVZ W20, 0x6
	0x035C7F44 B 0x35C7F58
	0x035C7F48 MOV X21, X31
	0x035C7F4C MOVZ W20, 0x6
	0x035C7F50 ADRP X22, 0xB55000
	0x035C7F54 LDR X22, [X22 + 0x5F0]
	0x035C7F58 LDR X0, [X29]
	0x035C7F5C LDR W8, [X0 + 0xE0]
	0x035C7F60 CBNZ W8, 0x35C7F68
	0x035C7F64 BL 0x1C16DFC
	0x035C7F68 ADRP X8, 0xB55000
	0x035C7F6C LDR X8, [X8 + 0x550]
	0x035C7F70 ADD X0, X31, 0x90
	0x035C7F74 LDR X1, [X8]
	0x035C7F78 BL 0x2BC5018
	0x035C7F7C CBNZ X21, 0x35C84E8
	0x035C7F80 CMP W20, 0x6
	0x035C7F84 B.EQ 0x35C7F8C
	0x035C7F88 CBNZ W20, 0x35C8494
	0x035C7F8C LDR X21, [X19 + 0x70]
	0x035C7F90 CBZ X21, 0x35C8034
	0x035C7F94 LDR X0, [X19 + 0x78]
	0x035C7F98 CBZ X0, 0x35C84BC
	0x035C7F9C LDR X8, [X0]
	0x035C7FA0 LDP X9, X1, [X8 + 0x168]
	0x035C7FA4 BLR X9
	0x035C7FA8 ADRP X9, 0xB55000
	0x035C7FAC LDR X1, [X22]
	0x035C7FB0 LDR X8, [X21]
	0x035C7FB4 LDR X9, [X9 + 0x5F8]
	0x035C7FB8 ADRP X10, 0xB71000
	0x035C7FBC MOV X24, X0
	0x035C7FC0 LDR X22, [X9]
	0x035C7FC4 LDR X10, [X10 + 0x68]
	0x035C7FC8 LDRH W9, [X8 + 0x12E]
	0x035C7FCC LDR X23, [X10]
	0x035C7FD0 CBZ X9, 0x35C7FF4
	0x035C7FD4 LDR X10, [X8 + 0xB0]
	0x035C7FD8 ADD X10, X10, 0x8
	0x035C7FDC LDUR X11, [X10 - 0x8]
	0x035C7FE0 CMP X11, X1
	0x035C7FE4 B.EQ 0x35C8004
	0x035C7FE8 SUBS X9, X9, 0x1
	0x035C7FEC ADD X10, X10, 0x10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xE1A000
	010 Move X25, 0xB71000
	011 Move X24, 0xB71000
	012 Move X23, 0xB71000
	013 Move X22, 0xB71000
	014 Move W8, [X21+452]
	015 Move X25, [X25+3664]
	016 Move X24, [X24+3672]
	017 Move X23, [X23+3648]
	018 Move X22, [X22+3656]
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0xB71000
	026 Move X0, [X0+3672]
	027 Call 0x1C17CF4
	028 Move X0, 0xB71000
	029 Move X0, [X0+3664]
	030 Call 0x1C17CF4
	031 Move X0, 0xB71000
	032 Move X0, [X0+3656]
	033 Call 0x1C17CF4
	034 Move X0, 0xB71000
	035 Move X0, [X0+3648]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+452], W8
	039 Move X0, [X25]
	040 Call 0x1C17F10
	041 Move X1, [X24]
	042 Move X21, X0
	043 Call HashSet`1<Object>..ctor, X0
	044 Move [X20+72], X21
	045 Move X0, [X25]
	046 Call 0x1C17F10
	047 Move X1, [X24]
	048 Move X21, X0
	049 Call HashSet`1<Object>..ctor, X0
	050 Move [X20+80], X21
	051 Move X0, [X23]
	052 Call 0x1C17F10
	053 Move X1, [X22]
	054 Move X21, X0
	055 Call List`1<Object>..ctor, X0
	056 Move X0, X20
	057 Move X1, X31
	058 Move [X20+88], X21
	059 Call Object..ctor, X0
	060 Move [X20+16], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Move X25, [X31+72]
	069 Return 

Method: System.Void Dispose()

Disassembly:
	0x035C88BC ADD X8, X8, W9, 0x4, SXTW
	0x035C88C0 ADD X0, X8, 0x138
	0x035C88C4 LDP X8, X2, [X0]

ISIL:
	001 Move W8, 1
	002 Move [X0+96], W8
	003 Return 

