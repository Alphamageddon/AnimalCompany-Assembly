Type: SpatialSys.ObservableState.StateObservationContext

Method: System.Boolean get_allowChanges()

Disassembly:
	0x035C64D0 LDR X8, [X22]
	0x035C64D4 MOV X1, X0

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_allowChanges(System.Boolean value)

Disassembly:
	0x035C64D8 LDRH W9, [X8 + 0x12E]
	0x035C64DC CBZ X9, 0x35C6500
	0x035C64E0 LDR X10, [X8 + 0xB0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.Collections.Generic.List`1<SpatialSys.ObservableState.IStateOperation> get_observedOperations()

Disassembly:
	0x035C64E4 ADD X10, X10, 0x8
	0x035C64E8 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x035C64EC CMP X11, X1
	0x035C64F0 B.EQ 0x35C6510
	0x035C64F4 SUBS X9, X9, 0x1
	0x035C64F8 ADD X10, X10, 0x10
	0x035C64FC B.NE 0x35C64E8
	0x035C6500 MOVZ W2, 0x1
	0x035C6504 MOV X0, X22
	0x035C6508 BL 0x1C5C788
	0x035C650C B 0x35C6520
	0x035C6510 LDR W9, [X10]
	0x035C6514 ADD W9, W9, 0x1
	0x035C6518 ADD X8, X8, W9, 0x4, SXTW
	0x035C651C ADD X0, X8, 0x138
	0x035C6520 LDP X8, X3, [X0]
	0x035C6524 MOV X0, X22
	0x035C6528 MOV X1, X23
	0x035C652C MOV X2, X20
	0x035C6530 BLR X8
	0x035C6534 LDR X19, [X19 + 0x70]
	0x035C6538 CBZ X19, 0x35C65DC
	0x035C653C ADRP X0, 0xB56000
	0x035C6540 LDR X0, [X0 + 0x5F0]
	0x035C6544 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE1B000
	006 Move X21, 0xB2E000
	007 Move W8, [X20+438]
	008 Move X21, [X21+3480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB2E000
	015 Move X0, [X0+3480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+438], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X20, X0
	022 Call NoOpTypeIDManifest..ctor, X0
	023 Move X0, X19
	024 Move X1, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X2, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call StateObservationContext..ctor, X0, X1, X2
	031 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.IStateTypeIDManifest typeIDManifest)

Disassembly:
	0x035C6A88 ADD X0, X8, 0x138
	0x035C6A8C LDP X8, X3, [X0]

ISIL:
	001 Move X2, X31
	002 Call StateObservationContext..ctor, X0, X1, X2
	003 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.IStateTypeIDManifest typeIDManifest, SpatialSys.ObservableState.ILogger logger)

Disassembly:
	0x035C65C8 MOV X1, X21
	0x035C65CC MOV X2, X31
	0x035C65D0 MOV X3, X20
	0x035C65D4 MOV X4, X22
	0x035C65D8 BLR X8
	0x035C65DC ADRP X0, 0xB71000
	0x035C65E0 LDR X0, [X0 + 0xFA0]
	0x035C65E4 BL 0x1C16D08
	0x035C65E8 MOV X1, X0
	0x035C65EC MOV X0, X21
	0x035C65F0 BL 0x1C16DEC
	0x035C65F4 CMP W1, 0x1
	0x035C65F8 MOV X28, X0
	0x035C65FC B.NE 0x35C6850
	0x035C6600 MOV X0, X28
	0x035C6604 BL 0x3EB1AD0
	0x035C6608 MOV X22, X0
	0x035C660C ADRP X0, 0xB2D000
	0x035C6610 LDR X0, [X0 + 0x7D0]
	0x035C6614 BL 0x1C16D08
	0x035C6618 LDR X8, [X22]
	0x035C661C LDR X1, [X8]
	0x035C6620 BL 0x1C17270
	0x035C6624 TBZ X0, 0x0, 0x35C67D4
	0x035C6628 LDR X8, [X22]
	0x035C662C STR X8, [X31 + 0x10]
	0x035C6630 BL 0x3EB1AE0
	0x035C6634 LDR X23, [X19 + 0x70]
	0x035C6638 CBZ X23, 0x35C6184
	0x035C663C ADRP X0, 0xB2D000
	0x035C6640 LDR X0, [X0 + 0x720]
	0x035C6644 BL 0x1C16D08
	0x035C6648 BL 0x1C16F10
	0x035C664C MOV X22, X0
	0x035C6650 ADRP X0, 0xB2D000
	0x035C6654 LDR X0, [X0 + 0x718]
	0x035C6658 BL 0x1C16D08
	0x035C665C MOV X1, X0
	0x035C6660 MOV X0, X22
	0x035C6664 BL 0x2AA4804
	0x035C6668 LDR X0, [X27 + 0x10]
	0x035C666C CBZ X0, 0x35C67F8
	0x035C6670 MOV X1, X31
	0x035C6674 BL 0x33C4268
	0x035C6678 CBZ X0, 0x35C67FC
	0x035C667C LDR X8, [X0]
	0x035C6680 LDP X9, X1, [X8 + 0x1C8]
	0x035C6684 BLR X9
	0x035C6688 CBZ X0, 0x35C6800
	0x035C668C LDR X8, [X0]
	0x035C6690 LDR X1, [X8 + 0x2F0]
	0x035C6694 LDR X9, [X8 + 0x2E8]
	0x035C6698 BLR X9
	0x035C669C MOV X25, X0
	0x035C66A0 LDR X0, [X27 + 0x10]
	0x035C66A4 CBZ X0, 0x35C6804
	0x035C66A8 MOV X1, X31
	0x035C66AC BL 0x33C4268
	0x035C66B0 CBZ X0, 0x35C6808
	0x035C66B4 LDR X8, [X0]
	0x035C66B8 LDP X9, X1, [X8 + 0x1A8]
	0x035C66BC BLR X9
	0x035C66C0 MOV X26, X0
	0x035C66C4 ADRP X0, 0xB36000
	0x035C66C8 LDR X0, [X0 + 0x790]
	0x035C66CC BL 0x1C16D08
	0x035C66D0 MOV X1, X0
	0x035C66D4 MOV X0, X25
	0x035C66D8 MOV X2, X26
	0x035C66DC MOV X3, X31
	0x035C66E0 BL 0x32274B8
	0x035C66E4 CBZ X22, 0x35C680C
	0x035C66E8 MOV X25, X0
	0x035C66EC ADRP X0, 0xB56000
	0x035C66F0 LDR X0, [X0 + 0x5E8]
	0x035C66F4 BL 0x1C16D08
	0x035C66F8 MOV X26, X0
	0x035C66FC ADRP X0, 0xB2D000
	0x035C6700 LDR X0, [X0 + 0x710]
	0x035C6704 BL 0x1C16D08
	0x035C6708 MOV X3, X0
	0x035C670C MOV X0, X22
	0x035C6710 MOV X1, X26
	0x035C6714 MOV X2, X25
	0x035C6718 BL 0x2AA5098
	0x035C671C ADRP X0, 0xB56000
	0x035C6720 LDR X0, [X0 + 0x5F0]
	0x035C6724 BL 0x1C16D08
	0x035C6728 MOV X28, X0
	0x035C672C ADRP X0, 0xB71000
	0x035C6730 LDR X0, [X0 + 0xFA8]
	0x035C6734 BL 0x1C16D08
	0x035C6738 MOV X25, X0
	0x035C673C ADRP X0, 0xB56000
	0x035C6740 LDR X0, [X0 + 0x5F8]
	0x035C6744 BL 0x1C16D08
	0x035C6748 MOV X26, X0
	0x035C674C ADRP X0, 0xB71000
	0x035C6750 LDR X0, [X0 + 0xF98]
	0x035C6754 BL 0x1C16D08
	0x035C6758 LDR X8, [X23]
	0x035C675C MOV X27, X0
	0x035C6760 LDRH W9, [X8 + 0x12E]
	0x035C6764 CBZ X9, 0x35C6788
	0x035C6768 LDR X10, [X8 + 0xB0]
	0x035C676C ADD X10, X10, 0x8
	0x035C6770 LDUR X11, [X10 - 0x8]
	0x035C6774 CMP X11, X28
	0x035C6778 B.EQ 0x35C679C
	0x035C677C SUBS X9, X9, 0x1
	0x035C6780 ADD X10, X10, 0x10
	0x035C6784 B.NE 0x35C6770
	0x035C6788 MOVZ W2, 0x6
	0x035C678C MOV X0, X23
	0x035C6790 MOV X1, X28
	0x035C6794 BL 0x1C5C788
	0x035C6798 B 0x35C67AC
	0x035C679C LDR W9, [X10]
	0x035C67A0 ADD W9, W9, 0x6
	0x035C67A4 ADD X8, X8, W9, 0x4, SXTW
	0x035C67A8 ADD X0, X8, 0x138
	0x035C67AC LDP X8, X7, [X0]
	0x035C67B0 LDR X2, [X31 + 0x10]
	0x035C67B4 MOVZ W6, 0xBB
	0x035C67B8 MOV X0, X23
	0x035C67BC MOV X1, X25
	0x035C67C0 MOV X3, X22
	0x035C67C4 MOV X4, X26
	0x035C67C8 MOV X5, X27
	0x035C67CC BLR X8
	0x035C67D0 B 0x35C6184
	0x035C67D4 MOVZ W0, 0x8
	0x035C67D8 BL 0x3EB1AF0
	0x035C67DC LDR X8, [X22]
	0x035C67E0 STR X8, [X0]
	0x035C67E4 ADRP X1, 0x8EE000
	0x035C67E8 ADD X1, X1, 0xE58
	0x035C67EC MOV X2, X31
	0x035C67F0 BL 0x3EB1B00
	0x035C67F4 B 0x35C6A7C
	0x035C67F8 BL 0x1C16F20
	0x035C67FC BL 0x1C16F20
	0x035C6800 BL 0x1C16F20
	0x035C6804 BL 0x1C16F20
	0x035C6808 BL 0x1C16F20
	0x035C680C BL 0x1C16F20
	0x035C6810 B 0x35C6830
	0x035C6814 B 0x35C6830
	0x035C6818 B 0x35C6830
	0x035C681C B 0x35C6830
	0x035C6820 B 0x35C6830
	0x035C6824 B 0x35C6830
	0x035C6828 B 0x35C6830
	0x035C682C B 0x35C6830
	0x035C6830 MOV X28, X0
	0x035C6834 B 0x35C6850
	0x035C6838 MOV X22, X1
	0x035C683C MOV X28, X0
	0x035C6840 BL 0x3EB1AE0
	0x035C6844 MOV W1, W22
	0x035C6848 B 0x35C6850
	0x035C684C MOV X28, X0
	0x035C6850 MOVZ W8, 0x1
	0x035C6854 CMP W1, W8
	0x035C6858 B.NE 0x35C68B8
	0x035C685C MOV X0, X28
	0x035C6860 BL 0x3EB1AD0
	0x035C6864 LDR X22, [X0]
	0x035C6868 BL 0x3EB1AE0
	0x035C686C STRB W24, [X19 + 0x10]
	0x035C6870 STRB W29, [X19 + 0x60]
	0x035C6874 CBNZ X22, 0x35C68C4
	0x035C6878 CBZ X21, 0x35C68B4
	0x035C687C LDR X0, [X21 + 0x40]
	0x035C6880 LDR X2, [X19 + 0x48]
	0x035C6884 LDR X8, [X21 + 0x18]
	0x035C6888 LDR X3, [X21 + 0x28]
	0x035C688C MOVZ W1, 0x1
	0x035C6890 BLR X8
	0x035C6894 LDP X20, X19, [X31 + 0xA0]
	0x035C6898 LDP X22, X21, [X31 + 0x90]
	0x035C689C LDP X24, X23, [X31 + 0x80]
	0x035C68A0 LDP X26, X25, [X31 + 0x70]
	0x035C68A4 LDP X28, X27, [X31 + 0x60]
	0x035C68A8 LDP X29, X30, [X31 + 0x50]
	0x035C68AC ADD X31, X31, 0xB0
	0x035C68B0 RET
	0x035C68B4 BL 0x1C16F20
	0x035C68B8 STRB W24, [X19 + 0x10]
	0x035C68BC STRB W29, [X19 + 0x60]
	0x035C68C0 B 0x35C6D90
	0x035C68C4 MOV X0, X22
	0x035C68C8 BL 0x1C16F18
	0x035C68CC STRB W24, [X19 + 0x10]
	0x035C68D0 STRB W29, [X19 + 0x60]
	0x035C68D4 CBNZ X22, 0x35C68E0
	0x035C68D8 MOV X28, X0
	0x035C68DC B 0x35C6D90
	0x035C68E0 MOV X0, X22
	0x035C68E4 BL 0x1C16F18
	0x035C68E8 CMP W1, 0x1
	0x035C68EC MOV X28, X0
	0x035C68F0 B.NE 0x35C6D90
	0x035C68F4 MOV X0, X28
	0x035C68F8 BL 0x3EB1AD0
	0x035C68FC MOV X22, X0
	0x035C6900 ADRP X0, 0xB2D000
	0x035C6904 LDR X0, [X0 + 0x7D0]
	0x035C6908 BL 0x1C16D08
	0x035C690C LDR X8, [X22]
	0x035C6910 LDR X1, [X8]
	0x035C6914 BL 0x1C17270
	0x035C6918 TBZ X0, 0x0, 0x35C6A5C
	0x035C691C LDR X23, [X22]
	0x035C6920 BL 0x3EB1AE0
	0x035C6924 CBZ X21, 0x35C6C7C
	0x035C6928 MOV X0, X21
	0x035C692C MOV X1, X31
	0x035C6930 BL 0x33C4268
	0x035C6934 CBZ X0, 0x35C6C7C
	0x035C6938 LDR X8, [X0]
	0x035C693C LDP X9, X1, [X8 + 0x1C8]
	0x035C6940 BLR X9
	0x035C6944 CBZ X0, 0x35C6C7C
	0x035C6948 LDR X8, [X0]
	0x035C694C LDR X9, [X8 + 0x2E8]
	0x035C6950 LDR X1, [X8 + 0x2F0]
	0x035C6954 BLR X9
	0x035C6958 MOV X22, X0
	0x035C695C MOV X0, X21
	0x035C6960 MOV X1, X31
	0x035C6964 BL 0x33C4268
	0x035C6968 CBZ X0, 0x35C6C7C
	0x035C696C LDR X8, [X0]
	0x035C6970 LDP X9, X1, [X8 + 0x1A8]
	0x035C6974 BLR X9
	0x035C6978 MOV X21, X0
	0x035C697C ADRP X0, 0xB36000
	0x035C6980 LDR X0, [X0 + 0x790]
	0x035C6984 BL 0x1C16D08
	0x035C6988 MOV X1, X0
	0x035C698C MOV X0, X22
	0x035C6990 MOV X2, X21
	0x035C6994 MOV X3, X31
	0x035C6998 BL 0x32274B8
	0x035C699C MOV X22, X0
	0x035C69A0 ADRP X0, 0xB71000
	0x035C69A4 LDR X0, [X0 + 0xFB0]
	0x035C69A8 BL 0x1C16D08
	0x035C69AC MOV X1, X22
	0x035C69B0 MOV X2, X31
	0x035C69B4 BL 0x321B938
	0x035C69B8 MOV X24, X0
	0x035C69BC ADRP X0, 0xB2D000
	0x035C69C0 LDR X0, [X0 + 0x7D0]
	0x035C69C4 BL 0x1C16D08
	0x035C69C8 BL 0x1C16F10
	0x035C69CC MOV X1, X24
	0x035C69D0 MOV X2, X23
	0x035C69D4 MOV X3, X31
	0x035C69D8 MOV X21, X0
	0x035C69DC BL 0x33B2CA0
	0x035C69E0 CBZ X21, 0x35C6C7C
	0x035C69E4 LDR X8, [X21]
	0x035C69E8 MOV X0, X21
	0x035C69EC LDP X9, X1, [X8 + 0x198]
	0x035C69F0 BLR X9
	0x035C69F4 CBZ X0, 0x35C6C7C
	0x035C69F8 MOV X23, X0
	0x035C69FC ADRP X0, 0xB2D000
	0x035C6A00 LDR X0, [X0 + 0x818]
	0x035C6A04 BL 0x1C16D08
	0x035C6A08 MOV X25, X0
	0x035C6A0C ADRP X0, 0xB56000
	0x035C6A10 LDR X0, [X0 + 0x5E8]
	0x035C6A14 BL 0x1C16D08
	0x035C6A18 LDR X8, [X23]
	0x035C6A1C MOV X24, X0
	0x035C6A20 LDRH W9, [X8 + 0x12E]
	0x035C6A24 CBZ X9, 0x35C6A48
	0x035C6A28 LDR X10, [X8 + 0xB0]
	0x035C6A2C ADD X10, X10, 0x8
	0x035C6A30 LDUR X11, [X10 - 0x8]
	0x035C6A34 CMP X11, X25
	0x035C6A38 B.EQ 0x35C6A7C
	0x035C6A3C SUBS X9, X9, 0x1
	0x035C6A40 ADD X10, X10, 0x10
	0x035C6A44 B.NE 0x35C6A30
	0x035C6A48 MOVZ W2, 0x1
	0x035C6A4C MOV X0, X23
	0x035C6A50 MOV X1, X25
	0x035C6A54 BL 0x1C5C788
	0x035C6A58 B 0x35C6A8C
	0x035C6A5C MOVZ W0, 0x8
	0x035C6A60 BL 0x3EB1AF0
	0x035C6A64 LDR X8, [X22]
	0x035C6A68 STR X8, [X0]
	0x035C6A6C ADRP X1, 0x8EE000
	0x035C6A70 ADD X1, X1, 0xE58
	0x035C6A74 MOV X2, X31
	0x035C6A78 BL 0x3EB1B00
	0x035C6A7C LDR W9, [X10]
	0x035C6A80 ADD W9, W9, 0x1
	0x035C6A84 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31+8], X2
	015 Move X22, 0xE1B000
	016 Move X24, 0xB72000
	017 Move X29, 0xB72000
	018 Move X26, 0xB72000
	019 Move X25, 0xB72000
	020 Move X23, 0xB72000
	021 Move X19, 0xB72000
	022 Move X28, 0xB72000
	023 Move X27, 0xB72000
	024 Move X24, [X24+3648]
	025 Move X29, [X29+3656]
	026 Move X26, [X26+3664]
	027 Move X25, [X25+3672]
	028 Move X23, [X23+3680]
	029 Move X19, [X19+3688]
	030 Move X28, [X28+3696]
	031 Move X27, [X27+3704]
	032 Move W8, [X22+439]
	033 Move X21, X1
	034 Move X20, X0
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {98}
	039 Move X0, 0xB55000
	040 Move X0, [X0+3432]
	041 Call 0x1C17CF4
	042 Move X0, 0xB72000
	043 Move X0, [X0+3688]
	044 Call 0x1C17CF4
	045 Move X0, 0xB72000
	046 Move X0, [X0+3704]
	047 Call 0x1C17CF4
	048 Move X0, 0xB72000
	049 Move X0, [X0+3696]
	050 Call 0x1C17CF4
	051 Move X0, 0xB72000
	052 Move X0, [X0+3680]
	053 Call 0x1C17CF4
	054 Move X0, 0xB72000
	055 Move X0, [X0+3672]
	056 Call 0x1C17CF4
	057 Move X0, 0xB72000
	058 Move X0, [X0+3664]
	059 Call 0x1C17CF4
	060 Move X0, 0xB58000
	061 Move X0, [X0+800]
	062 Call 0x1C17CF4
	063 Move X0, 0xB55000
	064 Move X0, [X0+3456]
	065 Call 0x1C17CF4
	066 Move X0, 0xB72000
	067 Move X0, [X0+3656]
	068 Call 0x1C17CF4
	069 Move X0, 0xB72000
	070 Move X0, [X0+3648]
	071 Call 0x1C17CF4
	072 Move X0, 0xB72000
	073 Move X0, [X0+3712]
	074 Call 0x1C17CF4
	075 Move X0, 0xB72000
	076 Move X0, [X0+3720]
	077 Call 0x1C17CF4
	078 Move X0, 0xB72000
	079 Move X0, [X0+3728]
	080 Call 0x1C17CF4
	081 Move X0, 0xB72000
	082 Move X0, [X0+3736]
	083 Call 0x1C17CF4
	084 Move X0, 0xB72000
	085 Move X0, [X0+3744]
	086 Call 0x1C17CF4
	087 Move X0, 0xB72000
	088 Move X0, [X0+3752]
	089 Call 0x1C17CF4
	090 Move X0, 0xB2E000
	091 Move X0, [X0+2288]
	092 Call 0x1C17CF4
	093 Move X0, 0xB2E000
	094 Move X0, [X0+1728]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X22+439], W8
	098 Move X0, [X24]
	099 Call 0x1C17F10
	100 Move X1, [X29]
	101 Move X22, X0
	102 Call List`1<Object>..ctor, X0
	103 Move [X20+24], X22
	104 Move X0, [X26]
	105 Call 0x1C17F10
	106 Move X1, [X25]
	107 Move X22, X0
	108 Call HashSet`1<Object>..ctor, X0
	109 Move [X20+32], X22
	110 Move X0, [X23]
	111 Call 0x1C17F10
	112 Move X1, [X19]
	113 Move X22, X0
	114 Call Dictionary`2<Object, Object>..ctor, X0
	115 Move [X20+40], X22
	116 Move X0, [X28]
	117 Call 0x1C17F10
	118 Move X1, [X27]
	119 Move X22, X0
	120 Call Dictionary`2<Object, Object>..ctor, X0
	121 Move [X20+48], X22
	122 Move X8, 0xB72000
	123 Move X8, [X8+3712]
	124 Move X0, [X8]
	125 Call 0x1C17F10
	126 Move X1, X31
	127 Move X22, X0
	128 Call Object..ctor, X0
	129 Move X8, 0xB72000
	130 Move X8, [X8+3744]
	131 Move X0, [X8]
	132 Call 0x1C17F10
	133 Move X8, 0xB72000
	134 Move X8, [X8+3736]
	135 Move X1, X22
	136 Move X23, X0
	137 Move X2, [X8]
	138 Call 0x25F7FBC, X0, X1
	139 Move [X20+64], X23
	140 Move X0, [X24]
	141 Call 0x1C17F10
	142 Move X1, [X29]
	143 Move X22, X0
	144 Call List`1<Object>..ctor, X0
	145 Move [X20+72], X22
	146 Move X8, 0xB72000
	147 Move X8, [X8+3728]
	148 Move X0, [X8]
	149 Call 0x1C17F10
	150 Move X8, 0xB72000
	151 Move X8, [X8+3720]
	152 Move X22, X0
	153 Move X1, [X8]
	154 Call Queue`1<Object>..ctor, X0
	155 Move [X20+104], X22
	156 Move X8, 0xB2E000
	157 Move X8, [X8+2288]
	158 Move X0, [X8]
	159 Call 0x1C17F10
	160 Move X1, X31
	161 Move X22, X0
	162 Call StringBuilder..ctor, X0
	163 Move X0, X20
	164 Move X1, X31
	165 Move [X20+120], X22
	166 Call Object..ctor, X0
	167 Move X8, 0xB72000
	168 Move X8, [X8+3752]
	169 Move X0, [X8]
	170 Call 0x1C17F10
	171 Move X1, X21
	172 Move X22, X0
	173 Call StateOperationPool..ctor, X0, X1
	174 Move [X20+80], X22
	175 Move X8, 0xB2E000
	176 Move X8, [X8+1728]
	177 Move X24, 0xB55000
	178 Move X0, [X8]
	179 Move W8, [X0+224]
	180 Move X24, [X24+3432]
	181 Move X22, [X24]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X22
	186 Move X1, X31
	187 Call Type.GetTypeFromHandle, X0
	188 Compare X21, 0
	189 JumpIfEqual {317}
	190 Move X23, 0xB58000
	191 Move X8, [X21]
	192 Move X23, [X23+800]
	193 Move X19, 0xB55000
	194 Move X22, X0
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Move X1, [X23]
	197 Move X19, [X19+3456]
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move W2, 2
	207 Move X0, X21
	208 Call 0x1C5D788
	209 Move W9, [X10]
	210 Add W9, W9, 2
	211 Add X8, X8, W9
	212 Add X0, X8, 312
	213 Move X8, [X0]
	214 Move X2, [X0+8]
	215 Move X0, X21
	216 Move X1, X22
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move X0, [X19]
	219 Move X1, X31
	220 Call Type.GetTypeFromHandle, X0
	221 Move X8, [X21]
	222 Move X1, [X23]
	223 Move X22, X0
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move W2, 2
	234 Move X0, X21
	235 Call 0x1C5D788
	236 Move W9, [X10]
	237 Add W9, W9, 2
	238 Add X8, X8, W9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X2, [X0+8]
	242 Move X0, X21
	243 Move X1, X22
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move X0, [X24]
	246 Move X1, X31
	247 Call Type.GetTypeFromHandle, X0
	248 Move X8, [X21]
	249 Move X1, [X23]
	250 Move X22, X0
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move W2, 4
	261 Move X0, X21
	262 Call 0x1C5D788
	263 Move W9, [X10]
	264 Add W9, W9, 4
	265 Add X8, X8, W9
	266 Add X0, X8, 312
	267 Move X8, [X0]
	268 Move X2, [X0+8]
	269 Move X0, X21
	270 Move X1, X22
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Move [X20+88], W0
	273 Move X0, [X19]
	274 Move X1, X31
	275 Call Type.GetTypeFromHandle, X0
	276 Move X8, [X21]
	277 Move X1, [X23]
	278 Move X22, X0
	279 NotImplemented "Instruction LDRH not yet implemented."
	280 Compare X9, 0
	281 JumpIfEqual {288}
	282 Move X10, [X8+176]
	283 Add X10, X10, 8
	284 NotImplemented "Instruction LDUR not yet implemented."
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Subtract X9, X9, 1
	287 Add X10, X10, 16
	288 Move W2, 4
	289 Move X0, X21
	290 Call 0x1C5D788
	291 Move W9, [X10]
	292 Add W9, W9, 4
	293 Add X8, X8, W9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X2, [X0+8]
	297 Move X0, X21
	298 Move X1, X22
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Move X8, [X31+8]
	301 Move [X20+92], W0
	302 Move X22, [X31+80]
	303 Move X21, [X31+88]
	304 Move X24, [X31+64]
	305 Move X23, [X31+72]
	306 Move [X20+112], X8
	307 Move X20, [X31+96]
	308 Move X19, [X31+104]
	309 Move X26, [X31+48]
	310 Move X25, [X31+56]
	311 Move X28, [X31+32]
	312 Move X27, [X31+40]
	313 Move X29, [X31+16]
	314 Move X30, [X31+24]
	315 Add X31, X31, 112
	316 Return 
	317 Call 0x1C17F20

Method: System.Void RegisterObserver(SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.ObservationScope scope, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x035C6CAC CMP X11, X1
	0x035C6CB0 B.EQ 0x35C6CD0
	0x035C6CB4 SUBS X9, X9, 0x1
	0x035C6CB8 ADD X10, X10, 0x10
	0x035C6CBC B.NE 0x35C6CA8
	0x035C6CC0 MOVZ W2, 0x1
	0x035C6CC4 MOV X0, X22
	0x035C6CC8 BL 0x1C5C788
	0x035C6CCC B 0x35C6CE0
	0x035C6CD0 LDR W9, [X10]
	0x035C6CD4 ADD W9, W9, 0x1
	0x035C6CD8 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move X5, X3
	004 Move W4, W2
	005 Move W2, W31
	006 Move X3, X31
	007 Move W6, W31
	008 Move X7, X31
	009 Call StateObservationContext.RegisterObserver, X0, X1, X2, X3, X4, X5, X6, X7
	010 Move X30, [X31+16]
	011 Add X31, X31, 32
	012 Return 

Method: System.Void RegisterKeyObserver(SpatialSys.ObservableState.ObserverDelegate observer, System.Object key, SpatialSys.ObservableState.ObservationScope scope, SpatialSys.ObservableState.IStateDictionary[] dictionaries)

Disassembly:
	0x035C7E78 BLR X9
	0x035C7E7C CBZ X0, 0x35C84C8
	0x035C7E80 LDR X8, [X0]
	0x035C7E84 LDR X1, [X8 + 0x2F0]
	0x035C7E88 LDR X9, [X8 + 0x2E8]
	0x035C7E8C BLR X9
	0x035C7E90 MOV X23, X0
	0x035C7E94 LDR X0, [X22 + 0x10]
	0x035C7E98 CBZ X0, 0x35C84C0
	0x035C7E9C MOV X1, X31
	0x035C7EA0 BL 0x33C4268
	0x035C7EA4 CBZ X0, 0x35C84D4

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move X5, X4
	004 Move W4, W3
	005 Move X3, X2
	006 Move W2, 1
	007 Move W6, W31
	008 Move X7, X31
	009 Call StateObservationContext.RegisterObserver, X0, X1, X2, X3, X4, X5, X6, X7
	010 Move X30, [X31+16]
	011 Add X31, X31, 32
	012 Return 

Method: System.Void RegisterDerivedStateObserver(SpatialSys.ObservableState.IStateObject derivedState, SpatialSys.ObservableState.ObserverDelegate observer, SpatialSys.ObservableState.ObservationScope scope, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x035C7EA8 LDR X8, [X0]
	0x035C7EAC LDP X9, X1, [X8 + 0x1A8]
	0x035C7EB0 BLR X9
	0x035C7EB4 MOV X3, X0
	0x035C7EB8 LDR X0, [X28]
	0x035C7EBC LDR X2, [X24]
	0x035C7EC0 MOV X1, X23
	0x035C7EC4 MOV X4, X31
	0x035C7EC8 BL 0x32277C4
	0x035C7ECC MOV X1, X0
	0x035C7ED0 CBZ X21, 0x35C84D8
	0x035C7ED4 MOV X0, X21
	0x035C7ED8 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move X5, X4
	004 Move W4, W3
	005 Move X7, X1
	006 Move W6, 1
	007 Move X1, X2
	008 Move W2, W31
	009 Move X3, X31
	010 Call StateObservationContext.RegisterObserver, X0, X1, X2, X3, X4, X5, X6, X7
	011 Move X30, [X31+16]
	012 Add X31, X31, 32
	013 Return 

Method: System.Void RegisterDerivedStateKeyObserver(SpatialSys.ObservableState.IStateObject derivedState, SpatialSys.ObservableState.ObserverDelegate observer, System.Object key, SpatialSys.ObservableState.ObservationScope scope, SpatialSys.ObservableState.IStateObject[] state)

Disassembly:
	0x035C7EDC BL 0x32333E0
	0x035C7EE0 LDR X0, [X19 + 0x78]
	0x035C7EE4 CBZ X0, 0x35C84DC
	0x035C7EE8 MOV X1, X31
	0x035C7EEC BL 0x323260C
	0x035C7EF0 MOV W21, W0
	0x035C7EF4 LDR X0, [X20]
	0x035C7EF8 LDR W8, [X0 + 0xE0]
	0x035C7EFC CBNZ W8, 0x35C7F08
	0x035C7F00 BL 0x1C16DFC
	0x035C7F04 LDR X0, [X20]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move X8, X2
	004 Move X7, X1
	005 Move W2, 1
	006 Move W6, 1
	007 Move X1, X8
	008 Call StateObservationContext.RegisterObserver, X0, X1, X2, X3, X4, X5, X6, X7
	009 Move X30, [X31+16]
	010 Add X31, X31, 32
	011 Return 

Method: System.Void RegisterObserver(SpatialSys.ObservableState.ObserverDelegate observer, System.Boolean isKeyObserver, System.Object key, SpatialSys.ObservableState.ObservationScope scope, SpatialSys.ObservableState.IStateObject[] state, System.Boolean isDerivedStateObserver = False, SpatialSys.ObservableState.IStateObject derivedState = null)

Disassembly:
	0x035C6CDC ADD X0, X8, 0x138
	0x035C6CE0 LDP X8, X3, [X0]
	0x035C6CE4 MOV X0, X22
	0x035C6CE8 MOV X1, X23
	0x035C6CEC MOV X2, X20
	0x035C6CF0 BLR X8
	0x035C6CF4 LDR X19, [X19 + 0x70]
	0x035C6CF8 CBZ X19, 0x35C65DC
	0x035C6CFC ADRP X0, 0xB56000
	0x035C6D00 LDR X0, [X0 + 0x5F0]
	0x035C6D04 BL 0x1C16D08
	0x035C6D08 MOV X23, X0
	0x035C6D0C ADRP X0, 0xB56000
	0x035C6D10 LDR X0, [X0 + 0x5F8]
	0x035C6D14 BL 0x1C16D08
	0x035C6D18 MOV X20, X0
	0x035C6D1C ADRP X0, 0xB71000
	0x035C6D20 LDR X0, [X0 + 0xF98]
	0x035C6D24 BL 0x1C16D08
	0x035C6D28 LDR X8, [X19]
	0x035C6D2C MOV X22, X0
	0x035C6D30 LDRH W9, [X8 + 0x12E]
	0x035C6D34 CBZ X9, 0x35C6D58
	0x035C6D38 LDR X10, [X8 + 0xB0]
	0x035C6D3C ADD X10, X10, 0x8
	0x035C6D40 LDUR X11, [X10 - 0x8]
	0x035C6D44 CMP X11, X23
	0x035C6D48 B.EQ 0x35C6D6C
	0x035C6D4C SUBS X9, X9, 0x1
	0x035C6D50 ADD X10, X10, 0x10
	0x035C6D54 B.NE 0x35C6D40
	0x035C6D58 MOVZ W2, 0x7
	0x035C6D5C MOV X0, X19
	0x035C6D60 MOV X1, X23
	0x035C6D64 BL 0x1C5C788
	0x035C6D68 B 0x35C6D7C
	0x035C6D6C LDR W9, [X10]
	0x035C6D70 ADD W9, W9, 0x7
	0x035C6D74 ADD X8, X8, W9, 0x4, SXTW
	0x035C6D78 ADD X0, X8, 0x138
	0x035C6D7C LDP X8, X6, [X0]
	0x035C6D80 MOVZ W5, 0xD5
	0x035C6D84 B 0x35C65C4
	0x035C6D88 MOV X28, X0
	0x035C6D8C BL 0x3EB1AE0
	0x035C6D90 MOV X0, X28
	0x035C6D94 BL 0x1D2C690
	0x035C6D98 B 0x35C6DA4
	0x035C6D9C B 0x35C6DA4
	0x035C6DA0 B 0x35C6E0C
	0x035C6DA4 MOV X28, X0
	0x035C6DA8 CMP W1, 0x1
	0x035C6DAC B.NE 0x35C6DE0
	0x035C6DB0 MOV X0, X28
	0x035C6DB4 BL 0x3EB1AD0
	0x035C6DB8 LDR X27, [X0]
	0x035C6DBC BL 0x3EB1AE0
	0x035C6DC0 ADRP X8, 0xB71000
	0x035C6DC4 LDR X8, [X8 + 0xF08]
	0x035C6DC8 ADD X0, X31, 0x30
	0x035C6DCC LDR X1, [X8]
	0x035C6DD0 BL 0x2BC434C
	0x035C6DD4 LDR X29, [X31 + 0x10]
	0x035C6DD8 CBZ X27, 0x35C6094
	0x035C6DDC B 0x35C6E40
	0x035C6DE0 MOV X27, X31
	0x035C6DE4 B 0x35C6DEC
	0x035C6DE8 MOV X28, X0
	0x035C6DEC ADRP X8, 0xB71000
	0x035C6DF0 LDR X8, [X8 + 0xF08]
	0x035C6DF4 LDR X1, [X8]
	0x035C6DF8 ADD X0, X31, 0x30
	0x035C6DFC BL 0x2BC434C
	0x035C6E00 CBZ X27, 0x35C6D90
	0x035C6E04 MOV X0, X27
	0x035C6E08 BL 0x1C16F18
	0x035C6E0C MOV X28, X0
	0x035C6E10 CMP W1, 0x1
	0x035C6E14 B.NE 0x35C6E48
	0x035C6E18 MOV X0, X28
	0x035C6E1C BL 0x3EB1AD0
	0x035C6E20 LDR X27, [X0]
	0x035C6E24 BL 0x3EB1AE0
	0x035C6E28 ADRP X8, 0xB71000
	0x035C6E2C LDR X8, [X8 + 0xF08]
	0x035C6E30 ADD X0, X31, 0x30
	0x035C6E34 LDR X1, [X8]
	0x035C6E38 BL 0x2BC434C
	0x035C6E3C CBZ X27, 0x35C5FE4
	0x035C6E40 MOV X0, X27
	0x035C6E44 BL 0x1C16F18
	0x035C6E48 MOV X27, X31
	0x035C6E4C B 0x35C6E54
	0x035C6E50 MOV X28, X0
	0x035C6E54 ADRP X8, 0xB71000
	0x035C6E58 LDR X8, [X8 + 0xF08]
	0x035C6E5C LDR X1, [X8]
	0x035C6E60 ADD X0, X31, 0x30
	0x035C6E64 BL 0x2BC434C
	0x035C6E68 CBZ X27, 0x35C6D90
	0x035C6E6C MOV X0, X27
	0x035C6E70 BL 0x1C16F18
	0x035C6E74 BL 0x1990590
	0x035C6E78 SUB X31, X31, 0x20
	0x035C6E7C STR X30, [X31 + 0x10]
	0x035C6E80 MOV X5, X4
	0x035C6E84 MOV W4, W3
	0x035C6E88 MOV X3, X2
	0x035C6E8C MOVZ W2, 0x1
	0x035C6E90 MOV W6, W31
	0x035C6E94 MOV X7, X31
	0x035C6E98 BL 0x35C5CDC
	0x035C6E9C LDR X30, [X31 + 0x10]
	0x035C6EA0 ADD X31, X31, 0x20
	0x035C6EA4 RET
	0x035C6EA8 SUB X31, X31, 0x20
	0x035C6EAC STR X30, [X31 + 0x10]
	0x035C6EB0 MOV X5, X4
	0x035C6EB4 MOV W4, W3
	0x035C6EB8 MOV X7, X1
	0x035C6EBC MOVZ W6, 0x1
	0x035C6EC0 MOV X1, X2
	0x035C6EC4 MOV W2, W31
	0x035C6EC8 MOV X3, X31
	0x035C6ECC BL 0x35C5CDC
	0x035C6ED0 LDR X30, [X31 + 0x10]
	0x035C6ED4 ADD X31, X31, 0x20
	0x035C6ED8 RET
	0x035C6EDC SUB X31, X31, 0x20
	0x035C6EE0 STR X30, [X31 + 0x10]
	0x035C6EE4 MOV X8, X2
	0x035C6EE8 MOV X7, X1
	0x035C6EEC MOVZ W2, 0x1
	0x035C6EF0 MOVZ W6, 0x1
	0x035C6EF4 MOV X1, X8
	0x035C6EF8 BL 0x35C5CDC
	0x035C6EFC LDR X30, [X31 + 0x10]
	0x035C6F00 ADD X31, X31, 0x20
	0x035C6F04 RET
	0x035C6F08 STP X30, X25, [X31 - 0x40]!
	0x035C6F0C STP X24, X23, [X31 + 0x10]
	0x035C6F10 STP X22, X21, [X31 + 0x20]
	0x035C6F14 STP X20, X19, [X31 + 0x30]
	0x035C6F18 ADRP X21, 0xE1A000
	0x035C6F1C ADRP X25, 0xB71000
	0x035C6F20 ADRP X24, 0xB71000
	0x035C6F24 ADRP X23, 0xB71000
	0x035C6F28 ADRP X22, 0xB71000
	0x035C6F2C LDRB W8, [X21 + 0x1C4]
	0x035C6F30 LDR X25, [X25 + 0xE50]
	0x035C6F34 LDR X24, [X24 + 0xE58]
	0x035C6F38 LDR X23, [X23 + 0xE40]
	0x035C6F3C LDR X22, [X22 + 0xE48]
	0x035C6F40 MOV X19, X1
	0x035C6F44 MOV X20, X0
	0x035C6F48 TBNZ X8, 0x0, 0x35C6F84
	0x035C6F4C ADRP X0, 0xB71000
	0x035C6F50 LDR X0, [X0 + 0xE58]
	0x035C6F54 BL 0x1C16CF4
	0x035C6F58 ADRP X0, 0xB71000
	0x035C6F5C LDR X0, [X0 + 0xE50]
	0x035C6F60 BL 0x1C16CF4
	0x035C6F64 ADRP X0, 0xB71000
	0x035C6F68 LDR X0, [X0 + 0xE48]
	0x035C6F6C BL 0x1C16CF4
	0x035C6F70 ADRP X0, 0xB71000
	0x035C6F74 LDR X0, [X0 + 0xE40]
	0x035C6F78 BL 0x1C16CF4
	0x035C6F7C MOVZ W8, 0x1
	0x035C6F80 STRB W8, [X21 + 0x1C4]
	0x035C6F84 LDR X0, [X25]
	0x035C6F88 BL 0x1C16F10
	0x035C6F8C LDR X1, [X24]
	0x035C6F90 MOV X21, X0
	0x035C6F94 BL 0x2DBDE08
	0x035C6F98 STR X21, [X20 + 0x48]
	0x035C6F9C LDR X0, [X25]
	0x035C6FA0 BL 0x1C16F10
	0x035C6FA4 LDR X1, [X24]
	0x035C6FA8 MOV X21, X0
	0x035C6FAC BL 0x2DBDE08
	0x035C6FB0 STR X21, [X20 + 0x50]
	0x035C6FB4 LDR X0, [X23]
	0x035C6FB8 BL 0x1C16F10
	0x035C6FBC LDR X1, [X22]
	0x035C6FC0 MOV X21, X0
	0x035C6FC4 BL 0x301B7C4
	0x035C6FC8 MOV X0, X20
	0x035C6FCC MOV X1, X31
	0x035C6FD0 STR X21, [X20 + 0x58]
	0x035C6FD4 BL 0x33BDD8C
	0x035C6FD8 STR X19, [X20 + 0x10]
	0x035C6FDC LDP X20, X19, [X31 + 0x30]
	0x035C6FE0 LDP X22, X21, [X31 + 0x20]
	0x035C6FE4 LDP X24, X23, [X31 + 0x10]
	0x035C6FE8 LDP X30, X25, [X31], #0x40
	0x035C6FEC RET
	0x035C6FF0 SUB X31, X31, 0x50
	0x035C6FF4 STR X30, [X31 + 0x10]
	0x035C6FF8 STP X24, X23, [X31 + 0x20]
	0x035C6FFC STP X22, X21, [X31 + 0x30]
	0x035C7000 STP X20, X19, [X31 + 0x40]
	0x035C7004 ADRP X24, 0xE19000
	0x035C7008 LDRB W8, [X24 + 0x1B9]
	0x035C700C MOV W23, W4
	0x035C7010 MOV W22, W3
	0x035C7014 MOV X19, X2
	0x035C7018 MOV X21, X1
	0x035C701C MOV X20, X0
	0x035C7020 TBNZ X8, 0x0, 0x35C70C8
	0x035C7024 ADRP X0, 0xB70000
	0x035C7028 LDR X0, [X0 + 0xFC8]
	0x035C702C BL 0x1C16CF4
	0x035C7030 ADRP X0, 0xB55000
	0x035C7034 LDR X0, [X0 + 0x540]
	0x035C7038 BL 0x1C16CF4
	0x035C703C ADRP X0, 0xB55000
	0x035C7040 LDR X0, [X0 + 0x580]
	0x035C7044 BL 0x1C16CF4
	0x035C7048 ADRP X0, 0xB70000
	0x035C704C LDR X0, [X0 + 0xFD0]
	0x035C7050 BL 0x1C16CF4
	0x035C7054 ADRP X0, 0xB55000
	0x035C7058 LDR X0, [X0 + 0x588]
	0x035C705C BL 0x1C16CF4
	0x035C7060 ADRP X0, 0xB70000
	0x035C7064 LDR X0, [X0 + 0xFD8]
	0x035C7068 BL 0x1C16CF4
	0x035C706C ADRP X0, 0xB70000
	0x035C7070 LDR X0, [X0 + 0xFE0]
	0x035C7074 BL 0x1C16CF4
	0x035C7078 ADRP X0, 0xB2C000
	0x035C707C LDR X0, [X0 + 0xE00]
	0x035C7080 BL 0x1C16CF4
	0x035C7084 ADRP X0, 0xB70000
	0x035C7088 LDR X0, [X0 + 0xFE8]
	0x035C708C BL 0x1C16CF4
	0x035C7090 ADRP X0, 0xB70000
	0x035C7094 LDR X0, [X0 + 0xFF0]
	0x035C7098 BL 0x1C16CF4
	0x035C709C ADRP X0, 0xB2C000
	0x035C70A0 LDR X0, [X0 + 0xE18]
	0x035C70A4 BL 0x1C16CF4
	0x035C70A8 ADRP X0, 0xB55000
	0x035C70AC LDR X0, [X0 + 0x5A0]
	0x035C70B0 BL 0x1C16CF4
	0x035C70B4 ADRP X0, 0xB2D000
	0x035C70B8 LDR X0, [X0 + 0x1B0]
	0x035C70BC BL 0x1C16CF4
	0x035C70C0 MOVZ W8, 0x1
	0x035C70C4 STRB W8, [X24 + 0x1B9]
	0x035C70C8 STR X31, [X31 + 0x18]
	0x035C70CC STR X31, [X31 + 0x8]
	0x035C70D0 CBZ X19, 0x35C74B8
	0x035C70D4 TBZ X23, 0x0, 0x35C70E4
	0x035C70D8 LDR X0, [X19 + 0x50]
	0x035C70DC CBNZ X0, 0x35C70EC
	0x035C70E0 B 0x35C74B8
	0x035C70E4 LDR X0, [X19 + 0x48]
	0x035C70E8 CBZ X0, 0x35C74B8
	0x035C70EC ADRP X8, 0xB55000
	0x035C70F0 LDR X8, [X8 + 0x580]
	0x035C70F4 MOV X1, X21
	0x035C70F8 LDR X2, [X8]
	0x035C70FC BL 0x2DBEF30
	0x035C7100 LDR X0, [X20 + 0x28]
	0x035C7104 CBZ X0, 0x35C74B8
	0x035C7108 ADRP X8, 0xB55000
	0x035C710C LDR X8, [X8 + 0x540]
	0x035C7110 ADD X2, X31, 0x18
	0x035C7114 MOV X1, X21
	0x035C7118 LDR X3, [X8]
	0x035C711C BL 0x2AA6B2C
	0x035C7120 TBNZ X0, 0x0, 0x35C716C
	0x035C7124 ADRP X8, 0xB70000
	0x035C7128 LDR X8, [X8 + 0xFE0]
	0x035C712C LDR X0, [X8]
	0x035C7130 BL 0x1C16F10
	0x035C7134 ADRP X8, 0xB70000
	0x035C7138 LDR X8, [X8 + 0xFD8]
	0x035C713C MOV X23, X0
	0x035C7140 LDR X1, [X8]
	0x035C7144 BL 0x2DBDE08
	0x035C7148 STR X23, [X31 + 0x18]
	0x035C714C LDR X0, [X20 + 0x28]
	0x035C7150 CBZ X0, 0x35C74B8
	0x035C7154 ADRP X8, 0xB70000
	0x035C7158 LDR X8, [X8 + 0xFC8]
	0x035C715C MOV X1, X21
	0x035C7160 MOV X2, X23
	0x035C7164 LDR X3, [X8]
	0x035C7168 BL 0x2AA5098
	0x035C716C LDR X0, [X31 + 0x18]
	0x035C7170 CBZ X0, 0x35C74B8
	0x035C7174 ADRP X8, 0xB70000
	0x035C7178 LDR X8, [X8 + 0xFD0]
	0x035C717C MOV X1, X19
	0x035C7180 LDR X2, [X8]
	0x035C7184 BL 0x2DBEF30
	0x035C7188 LDRB W8, [X19 + 0x28]
	0x035C718C CBZ W8, 0x35C722C
	0x035C7190 LDR X0, [X19 + 0x48]
	0x035C7194 CBZ X0, 0x35C74B8
	0x035C7198 ADRP X8, 0xB55000
	0x035C719C LDR X8, [X8 + 0x588]
	0x035C71A0 MOV X1, X21
	0x035C71A4 LDR X2, [X8]
	0x035C71A8 BL 0x2DBE4B0
	0x035C71AC TBZ X0, 0x0, 0x35C722C
	0x035C71B0 CBZ X21, 0x35C74B8
	0x035C71B4 ADRP X24, 0xB55000
	0x035C71B8 LDR X22, [X19 + 0x30]
	0x035C71BC LDR X24, [X24 + 0x5A0]
	0x035C71C0 MOV X0, X21
	0x035C71C4 LDR X23, [X24]
	0x035C71C8 MOV X1, X23
	0x035C71CC BL 0x1C16E00
	0x035C71D0 CBZ X0, 0x35C74C8
	0x035C71D4 LDR X24, [X24]
	0x035C71D8 MOV X0, X21
	0x035C71DC MOV X1, X24
	0x035C71E0 BL 0x1C16E00
	0x035C71E4 CBZ X0, 0x35C74D4
	0x035C71E8 LDR X8, [X0]
	0x035C71EC MOV X23, X0
	0x035C71F0 LDRH W9, [X8 + 0x12E]
	0x035C71F4 CBZ X9, 0x35C7218
	0x035C71F8 LDR X10, [X8 + 0xB0]
	0x035C71FC ADD X10, X10, 0x8
	0x035C7200 LDUR X11, [X10 - 0x8]
	0x035C7204 CMP X11, X24
	0x035C7208 B.EQ 0x35C7440
	0x035C720C SUBS X9, X9, 0x1
	0x035C7210 ADD X10, X10, 0x10
	0x035C7214 B.NE 0x35C7200
	0x035C7218 MOVZ W2, 0xA
	0x035C721C MOV X0, X23
	0x035C7220 MOV X1, X24
	0x035C7224 BL 0x1C5C788
	0x035C7228 B 0x35C7450
	0x035C722C CBZ W22, 0x35C74A0
	0x035C7230 CMP W22, 0x1
	0x035C7234 CSEL W22, W31, W22, EQ
	0x035C7238 CBZ X21, 0x35C74B8
	0x035C723C ADRP X10, 0xB2D000
	0x035C7240 LDR X8, [X21]
	0x035C7244 LDR X10, [X10 + 0x1B0]
	0x035C7248 LDRH W9, [X8 + 0x12E]
	0x035C724C LDR X1, [X10]
	0x035C7250 CBZ X9, 0x35C7274
	0x035C7254 LDR X10, [X8 + 0xB0]
	0x035C7258 ADD X10, X10, 0x8
	0x035C725C LDUR X11, [X10 - 0x8]
	0x035C7260 CMP X11, X1
	0x035C7264 B.EQ 0x35C7284
	0x035C7268 SUBS X9, X9, 0x1
	0x035C726C ADD X10, X10, 0x10
	0x035C7270 B.NE 0x35C725C
	0x035C7274 MOVZ W2, 0x6
	0x035C7278 MOV X0, X21
	0x035C727C BL 0x1C5C788
	0x035C7280 B 0x35C7294
	0x035C7284 LDR W9, [X10]
	0x035C7288 ADD W9, W9, 0x6
	0x035C728C ADD X8, X8, W9, 0x4, SXTW
	0x035C7290 ADD X0, X8, 0x138
	0x035C7294 LDP X8, X1, [X0]
	0x035C7298 MOV X0, X21
	0x035C729C BLR X8
	0x035C72A0 CBZ X0, 0x35C74B8
	0x035C72A4 ADRP X10, 0xB70000
	0x035C72A8 LDR X8, [X0]
	0x035C72AC LDR X10, [X10 + 0xFE8]
	0x035C72B0 MOV X21, X0
	0x035C72B4 LDRH W9, [X8 + 0x12E]
	0x035C72B8 LDR X1, [X10]
	0x035C72BC CBZ X9, 0x35C72E0
	0x035C72C0 LDR X10, [X8 + 0xB0]
	0x035C72C4 ADD X10, X10, 0x8
	0x035C72C8 LDUR X11, [X10 - 0x8]
	0x035C72CC CMP X11, X1
	0x035C72D0 B.EQ 0x35C72F0
	0x035C72D4 SUBS X9, X9, 0x1
	0x035C72D8 ADD X10, X10, 0x10
	0x035C72DC B.NE 0x35C72C8
	0x035C72E0 MOV X0, X21
	0x035C72E4 MOV W2, W31
	0x035C72E8 BL 0x1C5C788
	0x035C72EC B 0x35C72FC
	0x035C72F0 LDRSW X9, [X10]
	0x035C72F4 ADD X8, X8, X9, 0x4, LSL
	0x035C72F8 ADD X0, X8, 0x138
	0x035C72FC LDP X8, X1, [X0]
	0x035C7300 MOV X0, X21
	0x035C7304 BLR X8
	0x035C7308 MOV X21, X0
	0x035C730C CBZ X0, 0x35C74BC
	0x035C7310 ADRP X23, 0xB2C000
	0x035C7314 ADRP X24, 0xB70000
	0x035C7318 LDR X23, [X23 + 0xE18]
	0x035C731C LDR X24, [X24 + 0xFF0]
	0x035C7320 LDR X8, [X21]
	0x035C7324 LDR X1, [X23]
	0x035C7328 LDRH W9, [X8 + 0x12E]
	0x035C732C CBZ X9, 0x35C7350
	0x035C7330 LDR X10, [X8 + 0xB0]
	0x035C7334 ADD X10, X10, 0x8
	0x035C7338 LDUR X11, [X10 - 0x8]
	0x035C733C CMP X11, X1
	0x035C7340 B.EQ 0x35C7360
	0x035C7344 SUBS X9, X9, 0x1
	0x035C7348 ADD X10, X10, 0x10
	0x035C734C B.NE 0x35C7338
	0x035C7350 MOV X0, X21
	0x035C7354 MOV W2, W31
	0x035C7358 BL 0x1C5C788
	0x035C735C B 0x35C736C
	0x035C7360 LDRSW X9, [X10]
	0x035C7364 ADD X8, X8, X9, 0x4, LSL
	0x035C7368 ADD X0, X8, 0x138
	0x035C736C LDP X8, X1, [X0]
	0x035C7370 MOV X0, X21
	0x035C7374 BLR X8
	0x035C7378 TBZ X0, 0x0, 0x35C73F0
	0x035C737C LDR X8, [X21]
	0x035C7380 LDR X1, [X24]
	0x035C7384 LDRH W9, [X8 + 0x12E]
	0x035C7388 CBZ X9, 0x35C73AC
	0x035C738C LDR X10, [X8 + 0xB0]
	0x035C7390 ADD X10, X10, 0x8
	0x035C7394 LDUR X11, [X10 - 0x8]
	0x035C7398 CMP X11, X1
	0x035C739C B.EQ 0x35C73BC
	0x035C73A0 SUBS X9, X9, 0x1
	0x035C73A4 ADD X10, X10, 0x10
	0x035C73A8 B.NE 0x35C7394
	0x035C73AC MOV X0, X21
	0x035C73B0 MOV W2, W31
	0x035C73B4 BL 0x1C5C788
	0x035C73B8 B 0x35C73C8
	0x035C73BC LDRSW X9, [X10]
	0x035C73C0 ADD X8, X8, X9, 0x4, LSL
	0x035C73C4 ADD X0, X8, 0x138
	0x035C73C8 LDP X8, X1, [X0]
	0x035C73CC MOV X0, X21
	0x035C73D0 BLR X8
	0x035C73D4 MOV X1, X0
	0x035C73D8 MOVZ W4, 0x1
	0x035C73DC MOV X0, X20
	0x035C73E0 MOV X2, X19
	0x035C73E4 MOV W3, W22
	0x035C73E8 BL 0x35C6FF0
	0x035C73EC B 0x35C7320
	0x035C73F0 MOV X19, X31
	0x035C73F4 CBZ X21, 0x35C749C
	0x035C73F8 ADRP X10, 0xB2C000
	0x035C73FC LDR X8, [X21]
	0x035C7400 LDR X10, [X10 + 0xE00]
	0x035C7404 LDRH W9, [X8 + 0x12E]
	0x035C7408 LDR X1, [X10]
	0x035C740C CBZ X9, 0x35C7430
	0x035C7410 LDR X10, [X8 + 0xB0]
	0x035C7414 ADD X10, X10, 0x8
	0x035C7418 LDUR X11, [X10 - 0x8]
	0x035C741C CMP X11, X1
	0x035C7420 B.EQ 0x35C7484
	0x035C7424 SUBS X9, X9, 0x1
	0x035C7428 ADD X10, X10, 0x10
	0x035C742C B.NE 0x35C7418
	0x035C7430 MOV X0, X21
	0x035C7434 MOV W2, W31
	0x035C7438 BL 0x1C5C788
	0x035C743C B 0x35C7490
	0x035C7440 LDR W9, [X10]
	0x035C7444 ADD W9, W9, 0xA
	0x035C7448 ADD X8, X8, W9, 0x4, SXTW
	0x035C744C ADD X0, X8, 0x138
	0x035C7450 LDP X8, X3, [X0]
	0x035C7454 ADD X2, X31, 0x8
	0x035C7458 MOV X0, X23
	0x035C745C MOV X1, X22
	0x035C7460 BLR X8
	0x035C7464 TBZ X0, 0x0, 0x35C74A0
	0x035C7468 LDR X1, [X31 + 0x8]
	0x035C746C LDR W3, [X19 + 0x18]
	0x035C7470 MOVZ W4, 0x1
	0x035C7474 MOV X0, X20
	0x035C7478 MOV X2, X19
	0x035C747C BL 0x35C6FF0
	0x035C7480 B 0x35C74A0
	0x035C7484 LDRSW X9, [X10]
	0x035C7488 ADD X8, X8, X9, 0x4, LSL
	0x035C748C ADD X0, X8, 0x138
	0x035C7490 LDP X8, X1, [X0]
	0x035C7494 MOV X0, X21
	0x035C7498 BLR X8
	0x035C749C CBNZ X19, 0x35C74C0
	0x035C74A0 LDP X20, X19, [X31 + 0x40]
	0x035C74A4 LDP X22, X21, [X31 + 0x30]
	0x035C74A8 LDP X24, X23, [X31 + 0x20]
	0x035C74AC LDR X30, [X31 + 0x10]
	0x035C74B0 ADD X31, X31, 0x50
	0x035C74B4 RET
	0x035C74B8 BL 0x1C16F20
	0x035C74BC BL 0x1C16F20
	0x035C74C0 MOV X0, X19
	0x035C74C4 BL 0x1C16F18
	0x035C74C8 MOV X0, X21
	0x035C74CC MOV X1, X23
	0x035C74D0 BL 0x1C171E0
	0x035C74D4 MOV X0, X21
	0x035C74D8 MOV X1, X24
	0x035C74DC BL 0x1C171E0
	0x035C74E0 B 0x35C74EC
	0x035C74E4 B 0x35C74EC
	0x035C74E8 B 0x35C74EC
	0x035C74EC MOV X20, X0
	0x035C74F0 CMP W1, 0x1
	0x035C74F4 B.NE 0x35C750C
	0x035C74F8 MOV X0, X20
	0x035C74FC BL 0x3EB1AD0
	0x035C7500 LDR X19, [X0]
	0x035C7504 BL 0x3EB1AE0
	0x035C7508 B 0x35C73F4
	0x035C750C MOV X19, X31
	0x035C7510 B 0x35C7518
	0x035C7514 MOV X20, X0
	0x035C7518 CBZ X21, 0x35C757C
	0x035C751C ADRP X10, 0xB2C000
	0x035C7520 LDR X8, [X21]
	0x035C7524 LDR X10, [X10 + 0xE00]
	0x035C7528 LDRH W9, [X8 + 0x12E]
	0x035C752C LDR X1, [X10]
	0x035C7530 CBZ X9, 0x35C7554
	0x035C7534 LDR X10, [X8 + 0xB0]
	0x035C7538 ADD X10, X10, 0x8
	0x035C753C LDUR X11, [X10 - 0x8]
	0x035C7540 CMP X11, X1
	0x035C7544 B.EQ 0x35C7564
	0x035C7548 SUBS X9, X9, 0x1
	0x035C754C ADD X10, X10, 0x10
	0x035C7550 B.NE 0x35C753C
	0x035C7554 MOV X0, X21
	0x035C7558 MOV W2, W31
	0x035C755C BL 0x1C5C788
	0x035C7560 B 0x35C7570
	0x035C7564 LDRSW X9, [X10]
	0x035C7568 ADD X8, X8, X9, 0x4, LSL
	0x035C756C ADD X0, X8, 0x138
	0x035C7570 LDP X8, X1, [X0]
	0x035C7574 MOV X0, X21
	0x035C7578 BLR X8
	0x035C757C CBNZ X19, 0x35C7588
	0x035C7580 MOV X0, X20
	0x035C7584 BL 0x1D2C690
	0x035C7588 MOV X0, X19
	0x035C758C BL 0x1C16F18
	0x035C7590 BL 0x1990590
	0x035C7594 SUB X31, X31, 0x90
	0x035C7598 STR X30, [X31 + 0x40]
	0x035C759C STP X26, X25, [X31 + 0x50]
	0x035C75A0 STP X24, X23, [X31 + 0x60]
	0x035C75A4 STP X22, X21, [X31 + 0x70]
	0x035C75A8 STP X20, X19, [X31 + 0x80]
	0x035C75AC ADRP X21, 0xE19000
	0x035C75B0 LDRB W8, [X21 + 0x1BA]
	0x035C75B4 MOV X19, X1
	0x035C75B8 MOV X20, X0
	0x035C75BC TBNZ X8, 0x0, 0x35C7628
	0x035C75C0 ADRP X0, 0xB70000
	0x035C75C4 LDR X0, [X0 + 0xFF8]
	0x035C75C8 BL 0x1C16CF4
	0x035C75CC ADRP X0, 0xB71000
	0x035C75D0 LDR X0, [X0]
	0x035C75D4 BL 0x1C16CF4
	0x035C75D8 ADRP X0, 0xB71000
	0x035C75DC LDR X0, [X0 + 0x8]
	0x035C75E0 BL 0x1C16CF4
	0x035C75E4 ADRP X0, 0xB71000
	0x035C75E8 LDR X0, [X0 + 0x10]
	0x035C75EC BL 0x1C16CF4
	0x035C75F0 ADRP X0, 0xB71000
	0x035C75F4 LDR X0, [X0 + 0x18]
	0x035C75F8 BL 0x1C16CF4
	0x035C75FC ADRP X0, 0xB71000
	0x035C7600 LDR X0, [X0 + 0x20]
	0x035C7604 BL 0x1C16CF4
	0x035C7608 ADRP X0, 0xB71000
	0x035C760C LDR X0, [X0 + 0x28]
	0x035C7610 BL 0x1C16CF4
	0x035C7614 ADRP X0, 0xB71000
	0x035C7618 LDR X0, [X0 + 0x30]
	0x035C761C BL 0x1C16CF4
	0x035C7620 MOVZ W8, 0x1
	0x035C7624 STRB W8, [X21 + 0x1BA]
	0x035C7628 STR X31, [X31 + 0x48]
	0x035C762C STP X31, X31, [X31 + 0x20]
	0x035C7630 STR X31, [X31 + 0x30]
	0x035C7634 LDR X0, [X20 + 0x30]
	0x035C7638 CBZ X0, 0x35C77C0
	0x035C763C ADRP X8, 0xB71000
	0x035C7640 LDR X8, [X8]
	0x035C7644 ADD X2, X31, 0x48
	0x035C7648 MOV X1, X19
	0x035C764C LDR X3, [X8]
	0x035C7650 BL 0x2AA6B2C
	0x035C7654 TBZ X0, 0x0, 0x35C7794
	0x035C7658 LDR X8, [X31 + 0x48]
	0x035C765C CBZ X8, 0x35C77C0
	0x035C7660 LDR X0, [X8 + 0x48]
	0x035C7664 CBZ X0, 0x35C77C0
	0x035C7668 ADRP X26, 0xB71000
	0x035C766C LDR X26, [X26 + 0x28]
	0x035C7670 ADD X8, X31, 0x8
	0x035C7674 LDR X1, [X26]
	0x035C7678 BL 0x2DBE924
	0x035C767C LDUR V0, [X31 + 0x8]
	0x035C7680 LDR X8, [X31 + 0x18]
	0x035C7684 ADRP X23, 0xB71000
	0x035C7688 ADRP X24, 0xB71000
	0x035C768C LDR X23, [X23 + 0x18]
	0x035C7690 LDR X24, [X24 + 0x8]
	0x035C7694 STR V0, [X31 + 0x2]
	0x035C7698 STR X8, [X31 + 0x30]
	0x035C769C ADRP X25, 0xB71000
	0x035C76A0 LDR X25, [X25 + 0x30]
	0x035C76A4 LDR X1, [X23]
	0x035C76A8 ADD X0, X31, 0x20
	0x035C76AC BL 0x2BC3C64
	0x035C76B0 TBZ X0, 0x0, 0x35C76DC
	0x035C76B4 LDR X0, [X20 + 0x28]
	0x035C76B8 CBZ X0, 0x35C77B0
	0x035C76BC LDR X1, [X31 + 0x30]
	0x035C76C0 LDR X2, [X24]
	0x035C76C4 BL 0x2AA5018
	0x035C76C8 CBZ X0, 0x35C77B4
	0x035C76CC LDR X1, [X31 + 0x48]
	0x035C76D0 LDR X2, [X25]
	0x035C76D4 BL 0x2DBE67C
	0x035C76D8 B 0x35C76A4
	0x035C76DC ADRP X8, 0xB71000
	0x035C76E0 LDR X8, [X8 + 0x10]
	0x035C76E4 ADD X0, X31, 0x20
	0x035C76E8 LDR X1, [X8]
	0x035C76EC BL 0x2BC3C60
	0x035C76F0 LDR X8, [X31 + 0x48]
	0x035C76F4 CBZ X8, 0x35C77C0
	0x035C76F8 LDR X0, [X8 + 0x50]
	0x035C76FC CBZ X0, 0x35C77C0
	0x035C7700 LDR X1, [X26]
	0x035C7704 ADD X8, X31, 0x8
	0x035C7708 BL 0x2DBE924
	0x035C770C LDUR V0, [X31 + 0x8]
	0x035C7710 LDR X8, [X31 + 0x18]
	0x035C7714 STR V0, [X31 + 0x2]
	0x035C7718 STR X8, [X31 + 0x30]
	0x035C771C LDR X1, [X23]
	0x035C7720 ADD X0, X31, 0x20
	0x035C7724 BL 0x2BC3C64
	0x035C7728 TBZ X0, 0x0, 0x35C7754
	0x035C772C LDR X0, [X20 + 0x28]
	0x035C7730 CBZ X0, 0x35C77B8
	0x035C7734 LDR X1, [X31 + 0x30]
	0x035C7738 LDR X2, [X24]
	0x035C773C BL 0x2AA5018
	0x035C7740 CBZ X0, 0x35C77BC
	0x035C7744 LDR X1, [X31 + 0x48]
	0x035C7748 LDR X2, [X25]
	0x035C774C BL 0x2DBE67C
	0x035C7750 B 0x35C771C
	0x035C7754 ADRP X8, 0xB71000
	0x035C7758 LDR X8, [X8 + 0x10]
	0x035C775C ADD X0, X31, 0x20
	0x035C7760 LDR X1, [X8]
	0x035C7764 BL 0x2BC3C60
	0x035C7768 LDR X8, [X31 + 0x48]
	0x035C776C CBZ X8, 0x35C77C0
	0x035C7770 MOVZ W9, 0x1
	0x035C7774 STRB W9, [X8 + 0x60]
	0x035C7778 LDR X0, [X20 + 0x30]
	0x035C777C CBZ X0, 0x35C77C0
	0x035C7780 ADRP X8, 0xB70000
	0x035C7784 LDR X8, [X8 + 0xFF8]
	0x035C7788 MOV X1, X19
	0x035C778C LDR X2, [X8]
	0x035C7790 BL 0x2AA64F8
	0x035C7794 LDP X20, X19, [X31 + 0x80]
	0x035C7798 LDP X22, X21, [X31 + 0x70]
	0x035C779C LDP X24, X23, [X31 + 0x60]
	0x035C77A0 LDP X26, X25, [X31 + 0x50]
	0x035C77A4 LDR X30, [X31 + 0x40]
	0x035C77A8 ADD X31, X31, 0x90
	0x035C77AC RET
	0x035C77B0 BL 0x1C16F20
	0x035C77B4 BL 0x1C16F20
	0x035C77B8 BL 0x1C16F20
	0x035C77BC BL 0x1C16F20
	0x035C77C0 BL 0x1C16F20
	0x035C77C4 B 0x35C77E4
	0x035C77C8 B 0x35C77E4
	0x035C77CC B 0x35C77E4
	0x035C77D0 B 0x35C77E4
	0x035C77D4 B 0x35C7848
	0x035C77D8 B 0x35C7848
	0x035C77DC B 0x35C7848
	0x035C77E0 B 0x35C7848
	0x035C77E4 MOV X21, X0
	0x035C77E8 CMP W1, 0x1
	0x035C77EC B.NE 0x35C781C
	0x035C77F0 MOV X0, X21
	0x035C77F4 BL 0x3EB1AD0
	0x035C77F8 LDR X22, [X0]
	0x035C77FC BL 0x3EB1AE0
	0x035C7800 ADRP X8, 0xB71000
	0x035C7804 LDR X8, [X8 + 0x10]
	0x035C7808 ADD X0, X31, 0x20
	0x035C780C LDR X1, [X8]
	0x035C7810 BL 0x2BC3C60
	0x035C7814 CBZ X22, 0x35C7768
	0x035C7818 B 0x35C787C
	0x035C781C MOV X22, X31
	0x035C7820 B 0x35C7828
	0x035C7824 MOV X21, X0
	0x035C7828 ADRP X8, 0xB71000
	0x035C782C LDR X8, [X8 + 0x10]
	0x035C7830 LDR X1, [X8]
	0x035C7834 ADD X0, X31, 0x20
	0x035C7838 BL 0x2BC3C60
	0x035C783C CBZ X22, 0x35C78A8
	0x035C7840 MOV X0, X22
	0x035C7844 BL 0x1C16F18
	0x035C7848 MOV X21, X0
	0x035C784C CMP W1, 0x1
	0x035C7850 B.NE 0x35C7884
	0x035C7854 MOV X0, X21
	0x035C7858 BL 0x3EB1AD0
	0x035C785C LDR X22, [X0]
	0x035C7860 BL 0x3EB1AE0
	0x035C7864 ADRP X8, 0xB71000
	0x035C7868 LDR X8, [X8 + 0x10]
	0x035C786C ADD X0, X31, 0x20
	0x035C7870 LDR X1, [X8]
	0x035C7874 BL 0x2BC3C60
	0x035C7878 CBZ X22, 0x35C76F0
	0x035C787C MOV X0, X22
	0x035C7880 BL 0x1C16F18
	0x035C7884 MOV X22, X31
	0x035C7888 B 0x35C7890
	0x035C788C MOV X21, X0
	0x035C7890 ADRP X8, 0xB71000
	0x035C7894 LDR X8, [X8 + 0x10]
	0x035C7898 LDR X1, [X8]
	0x035C789C ADD X0, X31, 0x20
	0x035C78A0 BL 0x2BC3C60
	0x035C78A4 CBNZ X22, 0x35C78B0
	0x035C78A8 MOV X0, X21
	0x035C78AC BL 0x1D2C690
	0x035C78B0 MOV X0, X22
	0x035C78B4 BL 0x1C16F18
	0x035C78B8 BL 0x1990590
	0x035C78BC MOVZ W8, 0x1
	0x035C78C0 STRB W8, [X0 + 0x60]
	0x035C78C4 RET
	0x035C78C8 STP X30, X23, [X31 - 0x30]!
	0x035C78CC STP X22, X21, [X31 + 0x10]
	0x035C78D0 STP X20, X19, [X31 + 0x20]
	0x035C78D4 ADRP X23, 0xE19000
	0x035C78D8 ADRP X22, 0xB71000
	0x035C78DC LDRB W8, [X23 + 0x1BB]
	0x035C78E0 LDR X22, [X22 + 0x38]
	0x035C78E4 MOV W19, W2
	0x035C78E8 MOV X20, X1
	0x035C78EC MOV X21, X0
	0x035C78F0 TBNZ X8, 0x0, 0x35C7908
	0x035C78F4 ADRP X0, 0xB71000
	0x035C78F8 LDR X0, [X0 + 0x38]
	0x035C78FC BL 0x1C16CF4
	0x035C7900 MOVZ W8, 0x1
	0x035C7904 STRB W8, [X23 + 0x1BB]
	0x035C7908 LDR W4, [X21 + 0x58]
	0x035C790C LDR X5, [X22]
	0x035C7910 MOV X0, X21
	0x035C7914 MOV X1, X20
	0x035C7918 MOV W3, W19
	0x035C791C LDP X20, X19, [X31 + 0x20]
	0x035C7920 LDP X22, X21, [X31 + 0x10]
	0x035C7924 MOVZ W2, 0x7
	0x035C7928 LDP X30, X23, [X31], #0x30
	0x035C792C B 0x225BC48
	0x035C7930 STP X30, X23, [X31 - 0x30]!
	0x035C7934 STP X22, X21, [X31 + 0x10]
	0x035C7938 STP X20, X19, [X31 + 0x20]
	0x035C793C ADRP X23, 0xE19000
	0x035C7940 ADRP X22, 0xB71000
	0x035C7944 LDRB W8, [X23 + 0x1BC]
	0x035C7948 LDR X22, [X22 + 0x40]
	0x035C794C MOV W19, W2
	0x035C7950 MOV X20, X1
	0x035C7954 MOV X21, X0
	0x035C7958 TBNZ X8, 0x0, 0x35C7970
	0x035C795C ADRP X0, 0xB71000
	0x035C7960 LDR X0, [X0 + 0x40]
	0x035C7964 BL 0x1C16CF4
	0x035C7968 MOVZ W8, 0x1
	0x035C796C STRB W8, [X23 + 0x1BC]
	0x035C7970 LDR W4, [X21 + 0x5C]
	0x035C7974 LDR X5, [X22]
	0x035C7978 MOV X0, X21
	0x035C797C MOV X1, X20
	0x035C7980 MOV W3, W19
	0x035C7984 LDP X20, X19, [X31 + 0x20]
	0x035C7988 LDP X22, X21, [X31 + 0x10]
	0x035C798C MOVZ W2, 0x4
	0x035C7990 LDP X30, X23, [X31], #0x30
	0x035C7994 B 0x225E674
	0x035C7998 STP X30, X23, [X31 - 0x30]!
	0x035C799C STP X22, X21, [X31 + 0x10]
	0x035C79A0 STP X20, X19, [X31 + 0x20]
	0x035C79A4 ADRP X23, 0xE19000
	0x035C79A8 ADRP X22, 0xB71000
	0x035C79AC LDRB W8, [X23 + 0x1BD]
	0x035C79B0 LDR X22, [X22 + 0x40]
	0x035C79B4 MOV W19, W2
	0x035C79B8 MOV X20, X1
	0x035C79BC MOV X21, X0
	0x035C79C0 TBNZ X8, 0x0, 0x35C79D8
	0x035C79C4 ADRP X0, 0xB71000
	0x035C79C8 LDR X0, [X0 + 0x40]
	0x035C79CC BL 0x1C16CF4
	0x035C79D0 MOVZ W8, 0x1
	0x035C79D4 STRB W8, [X23 + 0x1BD]
	0x035C79D8 LDR W4, [X21 + 0x5C]
	0x035C79DC LDR X5, [X22]
	0x035C79E0 MOV X0, X21
	0x035C79E4 MOV X1, X20
	0x035C79E8 MOV W3, W19
	0x035C79EC LDP X20, X19, [X31 + 0x20]
	0x035C79F0 LDP X22, X21, [X31 + 0x10]
	0x035C79F4 MOVZ W2, 0x5
	0x035C79F8 LDP X30, X23, [X31], #0x30
	0x035C79FC B 0x225E674
	0x035C7A00 STR X30, [X31 - 0x30]!
	0x035C7A04 STP X22, X21, [X31 + 0x10]
	0x035C7A08 STP X20, X19, [X31 + 0x20]
	0x035C7A0C ADRP X22, 0xE19000
	0x035C7A10 ADRP X21, 0xB71000
	0x035C7A14 LDRB W8, [X22 + 0x1BE]
	0x035C7A18 LDR X21, [X21 + 0x40]
	0x035C7A1C MOV X19, X1
	0x035C7A20 MOV X20, X0
	0x035C7A24 TBNZ X8, 0x0, 0x35C7A3C
	0x035C7A28 ADRP X0, 0xB71000
	0x035C7A2C LDR X0, [X0 + 0x40]
	0x035C7A30 BL 0x1C16CF4
	0x035C7A34 MOVZ W8, 0x1
	0x035C7A38 STRB W8, [X22 + 0x1BE]
	0x035C7A3C LDR W4, [X20 + 0x5C]
	0x035C7A40 LDR X5, [X21]
	0x035C7A44 MOV X0, X20
	0x035C7A48 MOV X1, X19
	0x035C7A4C LDP X20, X19, [X31 + 0x20]
	0x035C7A50 LDP X22, X21, [X31 + 0x10]
	0x035C7A54 MOVZ W2, 0x6
	0x035C7A58 MOV W3, W31
	0x035C7A5C LDR X30, [X31], #0x30
	0x035C7A60 B 0x225E674
	0x035C7A64 STR X30, [X31 - 0x20]!
	0x035C7A68 STP X20, X19, [X31 + 0x10]
	0x035C7A6C ADRP X20, 0xE19000
	0x035C7A70 LDRB W8, [X20 + 0x1BF]
	0x035C7A74 MOV X19, X0
	0x035C7A78 TBNZ X8, 0x0, 0x35C7AC0
	0x035C7A7C ADRP X0, 0xB70000
	0x035C7A80 LDR X0, [X0 + 0xE80]
	0x035C7A84 BL 0x1C16CF4
	0x035C7A88 ADRP X0, 0xB71000
	0x035C7A8C LDR X0, [X0 + 0x48]
	0x035C7A90 BL 0x1C16CF4
	0x035C7A94 ADRP X0, 0xB71000
	0x035C7A98 LDR X0, [X0 + 0x50]
	0x035C7A9C BL 0x1C16CF4
	0x035C7AA0 ADRP X0, 0xB70000
	0x035C7AA4 LDR X0, [X0 + 0xE98]
	0x035C7AA8 BL 0x1C16CF4
	0x035C7AAC ADRP X0, 0xB70000
	0x035C7AB0 LDR X0, [X0 + 0xEA0]
	0x035C7AB4 BL 0x1C16CF4
	0x035C7AB8 MOVZ W8, 0x1
	0x035C7ABC STRB W8, [X20 + 0x1BF]
	0x035C7AC0 LDR X0, [X19 + 0x68]
	0x035C7AC4 CBZ X0, 0x35C7B3C
	0x035C7AC8 LDR W8, [X0 + 0x20]
	0x035C7ACC CBZ W8, 0x35C7AE8
	0x035C7AD0 ADRP X8, 0xB71000
	0x035C7AD4 LDR X8, [X8 + 0x48]
	0x035C7AD8 LDP X20, X19, [X31 + 0x10]
	0x035C7ADC LDR X1, [X8]
	0x035C7AE0 LDR X30, [X31], #0x20
	0x035C7AE4 B 0x24F18D4
	0x035C7AE8 ADRP X8, 0xB70000
	0x035C7AEC LDR X8, [X8 + 0xE80]
	0x035C7AF0 LDR X0, [X8]
	0x035C7AF4 BL 0x1C16F10
	0x035C7AF8 MOV X1, X31
	0x035C7AFC MOV X19, X0
	0x035C7B00 BL 0x33BDD8C
	0x035C7B04 ADRP X8, 0xB70000
	0x035C7B08 LDR X8, [X8 + 0xEA0]
	0x035C7B0C LDR X0, [X8]
	0x035C7B10 BL 0x1C16F10
	0x035C7B14 ADRP X8, 0xB70000
	0x035C7B18 LDR X8, [X8 + 0xE98]
	0x035C7B1C MOV X1, X19
	0x035C7B20 MOV X20, X0
	0x035C7B24 LDR X2, [X8]
	0x035C7B28 BL 0x25F6FBC
	0x035C7B2C MOV X0, X20
	0x035C7B30 LDP X20, X19, [X31 + 0x10]
	0x035C7B34 LDR X30, [X31], #0x20
	0x035C7B38 RET
	0x035C7B3C BL 0x1C16F20
	0x035C7B40 STP X30, X21, [X31 - 0x20]!
	0x035C7B44 STP X20, X19, [X31 + 0x10]
	0x035C7B48 ADRP X21, 0xE19000
	0x035C7B4C LDRB W8, [X21 + 0x1C0]
	0x035C7B50 MOV X19, X1
	0x035C7B54 MOV X20, X0
	0x035C7B58 TBNZ X8, 0x0, 0x35C7B70
	0x035C7B5C ADRP X0, 0xB71000
	0x035C7B60 LDR X0, [X0 + 0x58]
	0x035C7B64 BL 0x1C16CF4
	0x035C7B68 MOVZ W8, 0x1
	0x035C7B6C STRB W8, [X21 + 0x1C0]
	0x035C7B70 CBZ X19, 0x35C7BAC
	0x035C7B74 LDR X8, [X19]
	0x035C7B78 MOV X0, X19
	0x035C7B7C LDR X9, [X8 + 0x2D8]
	0x035C7B80 LDR X1, [X8 + 0x2E0]
	0x035C7B84 BLR X9
	0x035C7B88 LDR X0, [X20 + 0x68]
	0x035C7B8C CBZ X0, 0x35C7BAC
	0x035C7B90 ADRP X8, 0xB71000
	0x035C7B94 LDR X8, [X8 + 0x58]
	0x035C7B98 MOV X1, X19
	0x035C7B9C LDP X20, X19, [X31 + 0x10]
	0x035C7BA0 LDR X2, [X8]
	0x035C7BA4 LDP X30, X21, [X31], #0x20
	0x035C7BA8 B 0x24F1750
	0x035C7BAC BL 0x1C16F20
	0x035C7BB0 SUB X31, X31, 0x120
	0x035C7BB4 STP X29, X30, [X31 + 0xC0]
	0x035C7BB8 STP X28, X27, [X31 + 0xD0]
	0x035C7BBC STP X26, X25, [X31 + 0xE0]
	0x035C7BC0 STP X24, X23, [X31 + 0xF0]
	0x035C7BC4 STP X22, X21, [X31 + 0x100]
	0x035C7BC8 STP X20, X19, [X31 + 0x110]
	0x035C7BCC ADRP X20, 0xE19000
	0x035C7BD0 LDRB W8, [X20 + 0x1C1]
	0x035C7BD4 MOV W22, W2
	0x035C7BD8 MOV W21, W1
	0x035C7BDC MOV X19, X0
	0x035C7BE0 TBNZ X8, 0x0, 0x35C7CA0
	0x035C7BE4 ADRP X0, 0xB55000
	0x035C7BE8 LDR X0, [X0 + 0x550]
	0x035C7BEC BL 0x1C16CF4
	0x035C7BF0 ADRP X0, 0xB55000
	0x035C7BF4 LDR X0, [X0 + 0x558]
	0x035C7BF8 BL 0x1C16CF4
	0x035C7BFC ADRP X0, 0xB55000
	0x035C7C00 LDR X0, [X0 + 0x568]
	0x035C7C04 BL 0x1C16CF4
	0x035C7C08 ADRP X0, 0xB55000
	0x035C7C0C LDR X0, [X0 + 0x578]
	0x035C7C10 BL 0x1C16CF4
	0x035C7C14 ADRP X0, 0xB55000
	0x035C7C18 LDR X0, [X0 + 0x5F0]
	0x035C7C1C BL 0x1C16CF4
	0x035C7C20 ADRP X0, 0xB2C000
	0x035C7C24 LDR X0, [X0 + 0x758]
	0x035C7C28 BL 0x1C16CF4
	0x035C7C2C ADRP X0, 0xB55000
	0x035C7C30 LDR X0, [X0 + 0x5C8]
	0x035C7C34 BL 0x1C16CF4
	0x035C7C38 ADRP X0, 0xB71000
	0x035C7C3C LDR X0, [X0 + 0x60]
	0x035C7C40 BL 0x1C16CF4
	0x035C7C44 ADRP X0, 0xB2C000
	0x035C7C48 LDR X0, [X0 + 0x6E0]
	0x035C7C4C BL 0x1C16CF4
	0x035C7C50 ADRP X0, 0xB55000
	0x035C7C54 LDR X0, [X0 + 0x5F8]
	0x035C7C58 BL 0x1C16CF4
	0x035C7C5C ADRP X0, 0xB2C000
	0x035C7C60 LDR X0, [X0 + 0x7A0]
	0x035C7C64 BL 0x1C16CF4
	0x035C7C68 ADRP X0, 0xB71000
	0x035C7C6C LDR X0, [X0 + 0x68]
	0x035C7C70 BL 0x1C16CF4
	0x035C7C74 ADRP X0, 0xB71000
	0x035C7C78 LDR X0, [X0 + 0x70]
	0x035C7C7C BL 0x1C16CF4
	0x035C7C80 ADRP X0, 0xB71000
	0x035C7C84 LDR X0, [X0 + 0x78]
	0x035C7C88 BL 0x1C16CF4
	0x035C7C8C ADRP X0, 0xB35000
	0x035C7C90 LDR X0, [X0 + 0x790]
	0x035C7C94 BL 0x1C16CF4
	0x035C7C98 MOVZ W8, 0x1
	0x035C7C9C STRB W8, [X20 + 0x1C1]
	0x035C7CA0 MOVI V0.2D, 0x0
	0x035C7CA4 STR X31, [X31 + 0xB0]
	0x035C7CA8 STP V0, V0, [X31 + 0x90]
	0x035C7CAC STR W31, [X31 + 0x88]
	0x035C7CB0 LDR X0, [X19 + 0x40]
	0x035C7CB4 CBZ X0, 0x35C84BC
	0x035C7CB8 ADRP X20, 0xB71000
	0x035C7CBC LDR X20, [X20 + 0x60]
	0x035C7CC0 LDR X1, [X20]
	0x035C7CC4 BL 0x25F7180
	0x035C7CC8 CMP W0, 0x1
	0x035C7CCC B.LT 0x35C848C
	0x035C7CD0 STR W22, [X31 + 0x4C]
	0x035C7CD4 ADRP X27, 0xB55000
	0x035C7CD8 ADRP X29, 0xB55000
	0x035C7CDC ADRP X25, 0xB55000
	0x035C7CE0 ADRP X26, 0xB55000
	0x035C7CE4 LDR X27, [X27 + 0x5C8]
	0x035C7CE8 LDR X29, [X29 + 0x578]
	0x035C7CEC LDR X25, [X25 + 0x558]
	0x035C7CF0 LDR X26, [X26 + 0x568]
	0x035C7CF4 TBZ X21, 0x0, 0x35C8034
	0x035C7CF8 LDR X21, [X19 + 0x70]
	0x035C7CFC CBZ X21, 0x35C8034
	0x035C7D00 ADRP X10, 0xB55000
	0x035C7D04 LDR X8, [X21]
	0x035C7D08 LDR X10, [X10 + 0x5F0]
	0x035C7D0C LDRH W9, [X8 + 0x12E]
	0x035C7D10 LDR X1, [X10]
	0x035C7D14 CBZ X9, 0x35C7D38
	0x035C7D18 LDR X10, [X8 + 0xB0]
	0x035C7D1C ADD X10, X10, 0x8
	0x035C7D20 LDUR X11, [X10 - 0x8]
	0x035C7D24 CMP X11, X1
	0x035C7D28 B.EQ 0x35C7D48
	0x035C7D2C SUBS X9, X9, 0x1
	0x035C7D30 ADD X10, X10, 0x10
	0x035C7D34 B.NE 0x35C7D20
	0x035C7D38 MOV X0, X21
	0x035C7D3C MOV W2, W31
	0x035C7D40 BL 0x1C5C788
	0x035C7D44 B 0x35C7D54
	0x035C7D48 LDRSW X9, [X10]
	0x035C7D4C ADD X8, X8, X9, 0x4, LSL
	0x035C7D50 ADD X0, X8, 0x138
	0x035C7D54 LDP X8, X2, [X0]
	0x035C7D58 MOVZ W1, 0x4
	0x035C7D5C MOV X0, X21
	0x035C7D60 BLR X8
	0x035C7D64 TBZ X0, 0x0, 0x35C8034
	0x035C7D68 LDR X0, [X19 + 0x78]
	0x035C7D6C CBZ X0, 0x35C84BC
	0x035C7D70 MOV X1, X31
	0x035C7D74 BL 0x3232AC0
	0x035C7D78 LDR X0, [X19 + 0x40]
	0x035C7D7C CBZ X0, 0x35C84BC
	0x035C7D80 LDR X1, [X20]
	0x035C7D84 LDR X21, [X19 + 0x78]
	0x035C7D88 BL 0x25F7180
	0x035C7D8C ADRP X8, 0xB2C000
	0x035C7D90 LDR X8, [X8 + 0x758]
	0x035C7D94 STR W0, [X31 + 0x7C]
	0x035C7D98 ADD X1, X31, 0x7C
	0x035C7D9C LDR X8, [X8]
	0x035C7DA0 MOV X0, X8
	0x035C7DA4 BL 0x1C16E04
	0x035C7DA8 ADRP X8, 0xB71000
	0x035C7DAC LDR X8, [X8 + 0x78]
	0x035C7DB0 MOV X1, X0
	0x035C7DB4 MOV X2, X31
	0x035C7DB8 LDR X8, [X8]
	0x035C7DBC MOV X0, X8
	0x035C7DC0 BL 0x321EFD0
	0x035C7DC4 CBZ X21, 0x35C84BC
	0x035C7DC8 MOV X1, X0
	0x035C7DCC MOV X0, X21
	0x035C7DD0 MOV X2, X31
	0x035C7DD4 BL 0x32333E0
	0x035C7DD8 LDR X0, [X19 + 0x40]
	0x035C7DDC CBZ X0, 0x35C84BC
	0x035C7DE0 LDR X1, [X27]
	0x035C7DE4 ADD X8, X31, 0x50
	0x035C7DE8 BL 0x25F7F38
	0x035C7DEC LDP V0, V1, [X31 + 0x50]
	0x035C7DF0 LDR X8, [X31 + 0x70]
	0x035C7DF4 ADRP X28, 0xB71000
	0x035C7DF8 ADRP X24, 0xB35000
	0x035C7DFC LDR X28, [X28 + 0x70]
	0x035C7E00 LDR X24, [X24 + 0x790]
	0x035C7E04 STP V0, V1, [X31 + 0x90]
	0x035C7E08 STR X8, [X31 + 0xB0]
	0x035C7E0C ADRP X20, 0xB2C000
	0x035C7E10 LDR X20, [X20 + 0x6E0]
	0x035C7E14 LDR X0, [X29]
	0x035C7E18 LDR W8, [X0 + 0xE0]
	0x035C7E1C CBNZ W8, 0x35C7E24
	0x035C7E20 BL 0x1C16DFC
	0x035C7E24 LDR X1, [X25]
	0x035C7E28 ADD X0, X31, 0x90
	0x035C7E2C BL 0x2BC4DE0
	0x035C7E30 TBZ X0, 0x0, 0x35C7F48
	0x035C7E34 LDR X0, [X29]
	0x035C7E38 LDR W8, [X0 + 0xE0]
	0x035C7E3C CBNZ W8, 0x35C7E44
	0x035C7E40 BL 0x1C16DFC
	0x035C7E44 LDR X1, [X26]
	0x035C7E48 ADD X0, X31, 0x90
	0x035C7E4C BL 0x2BC501C
	0x035C7E50 MOV X22, X0
	0x035C7E54 CBZ X0, 0x35C84CC
	0x035C7E58 LDR X0, [X22 + 0x10]
	0x035C7E5C CBZ X0, 0x35C84D0
	0x035C7E60 LDR X21, [X19 + 0x78]
	0x035C7E64 MOV X1, X31
	0x035C7E68 BL 0x33C4268
	0x035C7E6C CBZ X0, 0x35C84C4
	0x035C7E70 LDR X8, [X0]
	0x035C7E74 LDP X9, X1, [X8 + 0x1C8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X24, 0xE1B000
	015 Move W8, [X24+440]
	016 Move X29, X7
	017 Move W22, W6
	018 Move X20, X5
	019 Move W23, W4
	020 Move X25, X3
	021 Move W26, W2
	022 Move X21, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {99}
	028 Move X0, 0xB72000
	029 Move X0, [X0+3808]
	030 Call 0x1C17CF4
	031 Move X0, 0xB72000
	032 Move X0, [X0+3816]
	033 Call 0x1C17CF4
	034 Move X0, 0xB72000
	035 Move X0, [X0+3824]
	036 Call 0x1C17CF4
	037 Move X0, 0xB72000
	038 Move X0, [X0+3832]
	039 Call 0x1C17CF4
	040 Move X0, 0xB72000
	041 Move X0, [X0+3840]
	042 Call 0x1C17CF4
	043 Move X0, 0xB72000
	044 Move X0, [X0+3848]
	045 Call 0x1C17CF4
	046 Move X0, 0xB72000
	047 Move X0, [X0+3856]
	048 Call 0x1C17CF4
	049 Move X0, 0xB72000
	050 Move X0, [X0+3864]
	051 Call 0x1C17CF4
	052 Move X0, 0xB2E000
	053 Move X0, [X0+2000]
	054 Call 0x1C17CF4
	055 Move X0, 0xB72000
	056 Move X0, [X0+3872]
	057 Call 0x1C17CF4
	058 Move X0, 0xB2E000
	059 Move X0, [X0+2072]
	060 Call 0x1C17CF4
	061 Move X0, 0xB72000
	062 Move X0, [X0+3880]
	063 Call 0x1C17CF4
	064 Move X0, 0xB72000
	065 Move X0, [X0+3888]
	066 Call 0x1C17CF4
	067 Move X0, 0xB72000
	068 Move X0, [X0+3896]
	069 Call 0x1C17CF4
	070 Move X0, 0xB72000
	071 Move X0, [X0+3904]
	072 Call 0x1C17CF4
	073 Move X0, 0xB57000
	074 Move X0, [X0+1472]
	075 Call 0x1C17CF4
	076 Move X0, 0xB72000
	077 Move X0, [X0+3912]
	078 Call 0x1C17CF4
	079 Move X0, 0xB72000
	080 Move X0, [X0+3920]
	081 Call 0x1C17CF4
	082 Move X0, 0xB72000
	083 Move X0, [X0+3928]
	084 Call 0x1C17CF4
	085 Move X0, 0xB72000
	086 Move X0, [X0+3936]
	087 Call 0x1C17CF4
	088 Move X0, 0xB2E000
	089 Move X0, [X0+2104]
	090 Call 0x1C17CF4
	091 Move X0, 0xB37000
	092 Move X0, [X0+1936]
	093 Call 0x1C17CF4
	094 Move X0, 0xB57000
	095 Move X0, [X0+1512]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X24+440], W8
	099 Move [X31+48], X31
	100 Move [X31+56], X31
	101 Move [X31+64], X31
	102 Move X0, [X19+48]
	103 Compare X0, 0
	104 JumpIfEqual {1069}
	105 Move X8, 0xB72000
	106 Move X8, [X8+3816]
	107 Move X1, X21
	108 Move X2, [X8]
	109 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {336}
	114 Move X8, [X19+56]
	115 Move TEMP, 0x80000000
	116 Not TEMP
	117 Move X9, TEMP
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, [X19+48]
	120 Move [X19+56], X31
	121 Compare X0, 0
	122 JumpIfEqual {1069}
	123 Move X8, 0xB72000
	124 Move X8, [X8+3824]
	125 Move X1, [X8]
	126 Call Dictionary`2<Object, Object>.get_Values, X0
	127 Move X24, 0xB72000
	128 Move X24, [X24+3920]
	129 Move X27, X0
	130 Move X8, [X24]
	131 Move W9, [X8+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {137}
	134 Move X0, X8
	135 Call 0x1C17DFC
	136 Move X8, [X24]
	137 Move X9, [X8+184]
	138 Move X28, [X9+24]
	139 Compare X28, 0
	140 JumpIfNotEqual {174}
	141 Move W9, [X8+224]
	142 Move [X31+8], X21
	143 Move W21, W22
	144 Move W22, W26
	145 Move X26, X25
	146 Compare W9, 0
	147 JumpIfEqual {149}
	148 Move X25, X29
	149 Move X0, X8
	150 Move X25, X29
	151 Call 0x1C17DFC
	152 Move X8, [X24]
	153 Move X9, 0xB72000
	154 Move X8, [X8+184]
	155 Move X9, [X9+3872]
	156 Move X29, [X8]
	157 Move X0, [X9]
	158 Call 0x1C17F10
	159 Move X8, 0xB72000
	160 Move X8, [X8+3912]
	161 Move X1, X29
	162 Move X3, X31
	163 Move X28, X0
	164 Move X2, [X8]
	165 Call Func`2<Object, Int64>..ctor, X0, X1, X2
	166 Move X8, [X24]
	167 Move X29, X25
	168 Move X25, X26
	169 Move W26, W22
	170 Move X8, [X8+184]
	171 Move W22, W21
	172 Move X21, [X31+8]
	173 Move [X8+24], X28
	174 Move [X31+16], X29
	175 Move X8, 0xB72000
	176 Move X8, [X8+3832]
	177 Move X0, X27
	178 Move X1, X28
	179 Move X2, [X8]
	180 Call Enumerable.OrderBy, X0, X1
	181 Move X8, 0xB72000
	182 Move X8, [X8+3840]
	183 Move X1, [X8]
	184 Call Enumerable.ToList, X0
	185 Compare X0, 0
	186 JumpIfEqual {1069}
	187 Move X24, 0xB72000
	188 Move X24, [X24+3880]
	189 Add X8, X31, 24
	190 Move X1, [X24]
	191 Call List`1<Object>.GetEnumerator, X0
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 Move X8, [X31+40]
	194 Move X29, 0xB72000
	195 Move [X31+3], V0
	196 Move [X31+64], X8
	197 Move X29, [X29+3856]
	198 Move X1, [X29]
	199 Add X0, X31, 48
	200 Call Enumerator<Object>.MoveNext, X0
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {212}
	205 Move X8, [X19+56]
	206 Move X9, [X31+64]
	207 Add X10, X8, 1
	208 Move [X19+56], X10
	209 Compare X9, 0
	210 JumpIfEqual {334}
	211 Move [X9+32], X8
	212 Move X8, 0xB72000
	213 Move X8, [X8+3848]
	214 Add X0, X31, 48
	215 Move X1, [X8]
	216 Call Enumerator<Object>.Dispose, X0
	217 Move X8, 0xB72000
	218 Move X28, [X19+64]
	219 Move X8, [X8+3896]
	220 Move X0, [X8]
	221 Call 0x1C17F10
	222 Move X8, 0xB72000
	223 Move X8, [X8+3888]
	224 Move X1, X28
	225 Move X27, X0
	226 Move X2, [X8]
	227 Call List`1<Object>..ctor, X0, X1
	228 Move X0, [X19+64]
	229 Compare X0, 0
	230 JumpIfEqual {1069}
	231 Move X8, [X0]
	232 Move X9, [X8+728]
	233 Move X1, [X8+736]
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Compare X27, 0
	236 JumpIfEqual {1069}
	237 Move X1, [X24]
	238 Add X8, X31, 24
	239 Move X0, X27
	240 Call List`1<Object>.GetEnumerator, X0
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 Move X8, [X31+40]
	243 Move X24, 0xB56000
	244 Move [X31+3], V0
	245 Move [X31+64], X8
	246 Move X24, [X24+1472]
	247 Move X1, [X29]
	248 Add X0, X31, 48
	249 Call Enumerator<Object>.MoveNext, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {260}
	254 Move X0, [X19+64]
	255 Compare X0, 0
	256 JumpIfEqual {335}
	257 Move X1, [X31+64]
	258 Move X2, [X24]
	259 Call 0x25F8234, X0, X1
	260 Move X8, 0xB71000
	261 Move X8, [X8+3848]
	262 Add X0, X31, 48
	263 Move X1, [X8]
	264 Call Enumerator<Object>.Dispose, X0
	265 Move X29, [X31+16]
	266 Move X8, 0xB71000
	267 Move X8, [X8+3904]
	268 Move X0, [X8]
	269 Call 0x1C17F10
	270 Move X1, X21
	271 Move X27, X0
	272 Call ObserverData..ctor, X0, X1
	273 Compare X27, 0
	274 JumpIfEqual {1069}
	275 Move [X27+24], W23
	276 Move X8, [X19+56]
	277 And W9, W26, 1
	278 And W10, W22, 1
	279 Add X11, X8, 1
	280 Move [X19+56], X11
	281 Move [X27+32], X8
	282 Move [X27+40], W9
	283 Move [X27+48], X25
	284 Move [X27+56], W10
	285 Move [X27+64], X29
	286 Move X0, [X19+48]
	287 Compare X0, 0
	288 JumpIfEqual {1069}
	289 Move X8, 0xB71000
	290 Move X8, [X8+3808]
	291 Move X1, X21
	292 Move X2, X27
	293 Move X3, [X8]
	294 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	295 Compare X20, 0
	296 JumpIfEqual {1069}
	297 Move X8, [X20+24]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X24, X31
	300 And X8, X8, 0
	301 Add X25, X20, 32
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X1, [X25]
	304 Compare X1, 0
	305 JumpIfEqual {311}
	306 Move X0, X19
	307 Move X2, X27
	308 Move W3, W23
	309 Move W4, W31
	310 Call StateObservationContext.AddObserverToScope, X0, X1, X2, X3, X4
	311 Move W8, [X20+24]
	312 Add X24, X24, 1
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move TEMP, X22
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {788}
	318 Move W24, [X19+16]
	319 Move W29, [X19+96]
	320 Move W8, 1
	321 Move [X19+16], W31
	322 Move [X19+96], W8
	323 Compare X21, 0
	324 JumpIfEqual {418}
	325 Move X0, [X21+64]
	326 Move X2, [X19+72]
	327 Move X8, [X21+24]
	328 Move X3, [X21+40]
	329 Move W1, 1
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Move [X19+16], W24
	332 Move [X19+96], W29
	333 Call 0x1C17F28
	334 Call 0x1C17F20
	335 Call 0x1C17F20
	336 Compare X21, 0
	337 JumpIfEqual {1069}
	338 Move X0, X21
	339 Move X1, X31
	340 Move X23, X21
	341 Call Delegate.get_Method, X0
	342 Compare X0, 0
	343 JumpIfEqual {1069}
	344 Move X8, [X0]
	345 Move X9, [X8+456]
	346 Move X1, [X8+464]
	347 NotImplemented "Instruction BLR not yet implemented."
	348 Compare X0, 0
	349 JumpIfEqual {1069}
	350 Move X8, [X0]
	351 Move X9, [X8+744]
	352 Move X1, [X8+752]
	353 NotImplemented "Instruction BLR not yet implemented."
	354 Move X22, X0
	355 Move X0, X23
	356 Move X1, X31
	357 Call Delegate.get_Method, X0
	358 Compare X0, 0
	359 JumpIfEqual {1069}
	360 Move X8, [X0]
	361 Move X9, [X8+424]
	362 Move X1, [X8+432]
	363 NotImplemented "Instruction BLR not yet implemented."
	364 Move X8, 0xB36000
	365 Move X8, [X8+1936]
	366 Move X2, X0
	367 Move X0, X22
	368 Move X3, X31
	369 Move X1, [X8]
	370 Call String.Concat, X0, X1, X2
	371 Move X8, 0xB71000
	372 Move X8, [X8+3936]
	373 Move X22, X0
	374 Move X1, X22
	375 Move X2, X31
	376 Move X8, [X8]
	377 Move X0, X8
	378 Call String.Concat, X0, X1
	379 Move X8, 0xB2D000
	380 Move X8, [X8+2000]
	381 Move X23, X0
	382 Move X8, [X8]
	383 Move X0, X8
	384 Call 0x1C17F10
	385 Move X1, X23
	386 Move X2, X31
	387 Move X21, X0
	388 Call Exception..ctor, X0, X1
	389 Compare X21, 0
	390 JumpIfEqual {1069}
	391 Move X8, [X21]
	392 Move X0, X21
	393 Move X9, [X8+408]
	394 Move X1, [X8+416]
	395 NotImplemented "Instruction BLR not yet implemented."
	396 Compare X0, 0
	397 JumpIfEqual {1069}
	398 Move X9, 0xB2D000
	399 Move X8, [X0]
	400 Move X9, [X9+2072]
	401 Move X10, 0xB56000
	402 Move X23, X0
	403 Move X1, [X9]
	404 Move X10, [X10+1512]
	405 NotImplemented "Instruction LDRH not yet implemented."
	406 Move X24, [X10]
	407 Compare X9, 0
	408 JumpIfEqual {415}
	409 Move X10, [X8+176]
	410 Add X10, X10, 8
	411 NotImplemented "Instruction LDUR not yet implemented."
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Subtract X9, X9, 1
	414 Add X10, X10, 16
	415 Move W2, 1
	416 Move X0, X23
	417 Call 0x1C5D788
	418 Call 0x1C17F20
	419 Move W9, [X10]
	420 Add W9, W9, 1
	421 Add X8, X8, W9
	422 Add X0, X8, 312
	423 Move X8, [X0]
	424 Move X3, [X0+8]
	425 Move X0, X23
	426 Move X1, X24
	427 Move X2, X22
	428 NotImplemented "Instruction BLR not yet implemented."
	429 Move X8, [X21]
	430 Move X0, X21
	431 Move X9, [X8+408]
	432 Move X1, [X8+416]
	433 NotImplemented "Instruction BLR not yet implemented."
	434 Move X23, 0xB71000
	435 Move X23, [X23+3920]
	436 Move X22, X0
	437 Move X8, [X23]
	438 Move W9, [X8+224]
	439 Compare W9, 0
	440 JumpIfNotEqual {444}
	441 Move X0, X8
	442 Call 0x1C17DFC
	443 Move X8, [X23]
	444 Move X8, [X8+184]
	445 Move X9, 0xB2D000
	446 Move X9, [X9+2104]
	447 Move X25, [X8+8]
	448 Move X8, 0xB71000
	449 Move X24, [X9]
	450 Move X8, [X8+3928]
	451 Move X23, [X8]
	452 Compare X25, 0
	453 JumpIfNotEqual {486}
	454 Move X0, 0xB71000
	455 Move X0, [X0+3920]
	456 Call 0x1C17D08
	457 Move W8, [X0+224]
	458 Compare W8, 0
	459 JumpIfNotEqual {461}
	460 Call 0x1C17DFC
	461 Move X26, 0xB71000
	462 Move X26, [X26+3920]
	463 Move X0, X26
	464 Call 0x1C17D08
	465 Move X8, [X0+184]
	466 Move X0, 0xB71000
	467 Move X27, [X8]
	468 Move X0, [X0+3944]
	469 Call 0x1C17D08
	470 Call 0x1C17F10
	471 Move X25, X0
	472 Move X0, 0xB71000
	473 Move X0, [X0+3952]
	474 Call 0x1C17D08
	475 Move X2, X0
	476 Move X0, X25
	477 Move X1, X27
	478 Move X3, X31
	479 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	480 Move X0, X26
	481 Call 0x1C17D08
	482 Move X8, [X0+184]
	483 Move X0, X26
	484 Move [X8+8], X25
	485 Call 0x1C17D08
	486 Move X0, 0xB71000
	487 Move X0, [X0+3960]
	488 Call 0x1C17D08
	489 Move X2, X0
	490 Move X0, X20
	491 Move X1, X25
	492 Call Enumerable.Where, X0, X1
	493 Move X20, X0
	494 Move X0, 0xB71000
	495 Move X0, [X0+3920]
	496 Call 0x1C17D08
	497 Move W8, [X0+224]
	498 Compare W8, 0
	499 JumpIfNotEqual {501}
	500 Call 0x1C17DFC
	501 Move X0, 0xB71000
	502 Move X0, [X0+3920]
	503 Call 0x1C17D08
	504 Move X8, [X0+184]
	505 Move X25, [X8+16]
	506 Compare X25, 0
	507 JumpIfNotEqual {540}
	508 Move X0, 0xB71000
	509 Move X0, [X0+3920]
	510 Call 0x1C17D08
	511 Move W8, [X0+224]
	512 Compare W8, 0
	513 JumpIfNotEqual {515}
	514 Call 0x1C17DFC
	515 Move X26, 0xB71000
	516 Move X26, [X26+3920]
	517 Move X0, X26
	518 Call 0x1C17D08
	519 Move X8, [X0+184]
	520 Move X0, 0xB71000
	521 Move X27, [X8]
	522 Move X0, [X0+3968]
	523 Call 0x1C17D08
	524 Call 0x1C17F10
	525 Move X25, X0
	526 Move X0, 0xB71000
	527 Move X0, [X0+3976]
	528 Call 0x1C17D08
	529 Move X2, X0
	530 Move X0, X25
	531 Move X1, X27
	532 Move X3, X31
	533 Call Func`2<Object, Object>..ctor, X0, X1, X2
	534 Move X0, X26
	535 Call 0x1C17D08
	536 Move X8, [X0+184]
	537 Move X0, X26
	538 Move [X8+16], X25
	539 Call 0x1C17D08
	540 Move X0, 0xB71000
	541 Move X0, [X0+3984]
	542 Call 0x1C17D08
	543 Move X2, X0
	544 Move X0, X20
	545 Move X1, X25
	546 Call Enumerable.Select, X0, X1
	547 Move X1, X0
	548 Move X0, X24
	549 Move X2, X31
	550 Call String.Join, X0, X1
	551 Compare X22, 0
	552 JumpIfEqual {1069}
	553 Move X20, X0
	554 Move X0, 0xB2D000
	555 Move X0, [X0+2072]
	556 Call 0x1C17D08
	557 Move X8, [X22]
	558 Move X1, X0
	559 NotImplemented "Instruction LDRH not yet implemented."
	560 Compare X9, 0
	561 JumpIfEqual {568}
	562 Move X10, [X8+176]
	563 Add X10, X10, 8
	564 NotImplemented "Instruction LDUR not yet implemented."
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Subtract X9, X9, 1
	567 Add X10, X10, 16
	568 Move W2, 1
	569 Move X0, X22
	570 Call 0x1C5D788
	571 Move W9, [X10]
	572 Add W9, W9, 1
	573 Add X8, X8, W9
	574 Add X0, X8, 312
	575 Move X8, [X0]
	576 Move X3, [X0+8]
	577 Move X0, X22
	578 Move X1, X23
	579 Move X2, X20
	580 NotImplemented "Instruction BLR not yet implemented."
	581 Move X19, [X19+112]
	582 Compare X19, 0
	583 JumpIfEqual {623}
	584 Move X0, 0xB56000
	585 Move X0, [X0+1520]
	586 Call 0x1C17D08
	587 Move X23, X0
	588 Move X0, 0xB56000
	589 Move X0, [X0+1528]
	590 Call 0x1C17D08
	591 Move X20, X0
	592 Move X0, 0xB71000
	593 Move X0, [X0+3992]
	594 Call 0x1C17D08
	595 Move X8, [X19]
	596 Move X22, X0
	597 NotImplemented "Instruction LDRH not yet implemented."
	598 Compare X9, 0
	599 JumpIfEqual {606}
	600 Move X10, [X8+176]
	601 Add X10, X10, 8
	602 NotImplemented "Instruction LDUR not yet implemented."
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Subtract X9, X9, 1
	605 Add X10, X10, 16
	606 Move W2, 7
	607 Move X0, X19
	608 Move X1, X23
	609 Call 0x1C5D788
	610 Move W9, [X10]
	611 Add W9, W9, 7
	612 Add X8, X8, W9
	613 Add X0, X8, 312
	614 Move X8, [X0]
	615 Move X6, [X0+8]
	616 Move W5, 131
	617 Move X0, X19
	618 Move X1, X21
	619 Move X2, X31
	620 Move X3, X20
	621 Move X4, X22
	622 NotImplemented "Instruction BLR not yet implemented."
	623 Move X0, 0xB71000
	624 Move X0, [X0+4000]
	625 Call 0x1C17D08
	626 Move X1, X0
	627 Move X0, X21
	628 Call 0x1C17DEC
	629 NotImplemented "Instruction CMP not yet implemented."
	630 Move X28, X0
	631 Move X0, X28
	632 Call 0x3EB2AD0
	633 Move X22, X0
	634 Move X0, 0xB2D000
	635 Move X0, [X0+2000]
	636 Call 0x1C17D08
	637 Move X8, [X22]
	638 Move X1, [X8]
	639 Call 0x1C18270
	640 Move TEMP, X0
	641 And TEMP, TEMP, 1
	642 Compare TEMP, 1
	643 JumpIfNotEqual {758}
	644 Move X8, [X22]
	645 Move [X31+16], X8
	646 Call 0x3EB2AE0
	647 Move X23, [X19+112]
	648 Compare X23, 0
	649 JumpIfEqual {331}
	650 Move X0, 0xB2D000
	651 Move X0, [X0+1824]
	652 Call 0x1C17D08
	653 Call 0x1C17F10
	654 Move X22, X0
	655 Move X0, 0xB2D000
	656 Move X0, [X0+1816]
	657 Call 0x1C17D08
	658 Move X1, X0
	659 Move X0, X22
	660 Call Dictionary`2<Object, Object>..ctor, X0
	661 Move X0, [X27+16]
	662 Compare X0, 0
	663 JumpIfEqual {766}
	664 Move X1, X31
	665 Call Delegate.get_Method, X0
	666 Compare X0, 0
	667 JumpIfEqual {767}
	668 Move X8, [X0]
	669 Move X9, [X8+456]
	670 Move X1, [X8+464]
	671 NotImplemented "Instruction BLR not yet implemented."
	672 Compare X0, 0
	673 JumpIfEqual {768}
	674 Move X8, [X0]
	675 Move X1, [X8+752]
	676 Move X9, [X8+744]
	677 NotImplemented "Instruction BLR not yet implemented."
	678 Move X25, X0
	679 Move X0, [X27+16]
	680 Compare X0, 0
	681 JumpIfEqual {769}
	682 Move X1, X31
	683 Call Delegate.get_Method, X0
	684 Compare X0, 0
	685 JumpIfEqual {770}
	686 Move X8, [X0]
	687 Move X9, [X8+424]
	688 Move X1, [X8+432]
	689 NotImplemented "Instruction BLR not yet implemented."
	690 Move X26, X0
	691 Move X0, 0xB36000
	692 Move X0, [X0+1936]
	693 Call 0x1C17D08
	694 Move X1, X0
	695 Move X0, X25
	696 Move X2, X26
	697 Move X3, X31
	698 Call String.Concat, X0, X1, X2
	699 Compare X22, 0
	700 JumpIfEqual {771}
	701 Move X25, X0
	702 Move X0, 0xB56000
	703 Move X0, [X0+1512]
	704 Call 0x1C17D08
	705 Move X26, X0
	706 Move X0, 0xB2D000
	707 Move X0, [X0+1808]
	708 Call 0x1C17D08
	709 Move X3, X0
	710 Move X0, X22
	711 Move X1, X26
	712 Move X2, X25
	713 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	714 Move X0, 0xB56000
	715 Move X0, [X0+1520]
	716 Call 0x1C17D08
	717 Move X28, X0
	718 Move X0, 0xB71000
	719 Move X0, [X0+4008]
	720 Call 0x1C17D08
	721 Move X25, X0
	722 Move X0, 0xB56000
	723 Move X0, [X0+1528]
	724 Call 0x1C17D08
	725 Move X26, X0
	726 Move X0, 0xB71000
	727 Move X0, [X0+3992]
	728 Call 0x1C17D08
	729 Move X8, [X23]
	730 Move X27, X0
	731 NotImplemented "Instruction LDRH not yet implemented."
	732 Compare X9, 0
	733 JumpIfEqual {740}
	734 Move X10, [X8+176]
	735 Add X10, X10, 8
	736 NotImplemented "Instruction LDUR not yet implemented."
	737 NotImplemented "Instruction CMP not yet implemented."
	738 Subtract X9, X9, 1
	739 Add X10, X10, 16
	740 Move W2, 6
	741 Move X0, X23
	742 Move X1, X28
	743 Call 0x1C5D788
	744 Move W9, [X10]
	745 Add W9, W9, 6
	746 Add X8, X8, W9
	747 Add X0, X8, 312
	748 Move X8, [X0]
	749 Move X7, [X0+8]
	750 Move X2, [X31+16]
	751 Move W6, 187
	752 Move X0, X23
	753 Move X1, X25
	754 Move X3, X22
	755 Move X4, X26
	756 Move X5, X27
	757 NotImplemented "Instruction BLR not yet implemented."
	758 Move W0, 8
	759 Call 0x3EB2AF0
	760 Move X8, [X22]
	761 Move [X0], X8
	762 Move X1, 0x8EE000
	763 Add X1, X1, 3672
	764 Move X2, X31
	765 Call 0x3EB2B00
	766 Call 0x1C17F20
	767 Call 0x1C17F20
	768 Call 0x1C17F20
	769 Call 0x1C17F20
	770 Call 0x1C17F20
	771 Call 0x1C17F20
	772 Move X28, X0
	773 Move X22, X1
	774 Move X28, X0
	775 Call 0x3EB2AE0
	776 Move W1, W22
	777 Move X28, X0
	778 Move W8, 1
	779 NotImplemented "Instruction CMP not yet implemented."
	780 Move X0, X28
	781 Call 0x3EB2AD0
	782 Move X22, [X0]
	783 Call 0x3EB2AE0
	784 Move [X19+16], W24
	785 Move [X19+96], W29
	786 Compare X22, 0
	787 JumpIfNotEqual {813}
	788 Compare X21, 0
	789 JumpIfEqual {810}
	790 Move X0, [X21+64]
	791 Move X2, [X19+72]
	792 Move X8, [X21+24]
	793 Move X3, [X21+40]
	794 Move W1, 1
	795 NotImplemented "Instruction BLR not yet implemented."
	796 Move X20, [X31+160]
	797 Move X19, [X31+168]
	798 Move X22, [X31+144]
	799 Move X21, [X31+152]
	800 Move X24, [X31+128]
	801 Move X23, [X31+136]
	802 Move X26, [X31+112]
	803 Move X25, [X31+120]
	804 Move X28, [X31+96]
	805 Move X27, [X31+104]
	806 Move X29, [X31+80]
	807 Move X30, [X31+88]
	808 Add X31, X31, 176
	809 Return 
	810 Call 0x1C17F20
	811 Move [X19+16], W24
	812 Move [X19+96], W29
	813 Move X0, X22
	814 Call 0x1C17F18
	815 Move [X19+16], W24
	816 Move [X19+96], W29
	817 Compare X22, 0
	818 JumpIfNotEqual {820}
	819 Move X28, X0
	820 Move X0, X22
	821 Call 0x1C17F18
	822 NotImplemented "Instruction CMP not yet implemented."
	823 Move X28, X0
	824 Move X0, X28
	825 Call 0x3EB2AD0
	826 Move X22, X0
	827 Move X0, 0xB2D000
	828 Move X0, [X0+2000]
	829 Call 0x1C17D08
	830 Move X8, [X22]
	831 Move X1, [X8]
	832 Call 0x1C18270
	833 Move TEMP, X0
	834 And TEMP, TEMP, 1
	835 Compare TEMP, 1
	836 JumpIfNotEqual {924}
	837 Move X23, [X22]
	838 Call 0x3EB2AE0
	839 Compare X21, 0
	840 JumpIfEqual {1069}
	841 Move X0, X21
	842 Move X1, X31
	843 Call Delegate.get_Method, X0
	844 Compare X0, 0
	845 JumpIfEqual {1069}
	846 Move X8, [X0]
	847 Move X9, [X8+456]
	848 Move X1, [X8+464]
	849 NotImplemented "Instruction BLR not yet implemented."
	850 Compare X0, 0
	851 JumpIfEqual {1069}
	852 Move X8, [X0]
	853 Move X9, [X8+744]
	854 Move X1, [X8+752]
	855 NotImplemented "Instruction BLR not yet implemented."
	856 Move X22, X0
	857 Move X0, X21
	858 Move X1, X31
	859 Call Delegate.get_Method, X0
	860 Compare X0, 0
	861 JumpIfEqual {1069}
	862 Move X8, [X0]
	863 Move X9, [X8+424]
	864 Move X1, [X8+432]
	865 NotImplemented "Instruction BLR not yet implemented."
	866 Move X21, X0
	867 Move X0, 0xB36000
	868 Move X0, [X0+1936]
	869 Call 0x1C17D08
	870 Move X1, X0
	871 Move X0, X22
	872 Move X2, X21
	873 Move X3, X31
	874 Call String.Concat, X0, X1, X2
	875 Move X22, X0
	876 Move X0, 0xB71000
	877 Move X0, [X0+4016]
	878 Call 0x1C17D08
	879 Move X1, X22
	880 Move X2, X31
	881 Call String.Concat, X0, X1
	882 Move X24, X0
	883 Move X0, 0xB2D000
	884 Move X0, [X0+2000]
	885 Call 0x1C17D08
	886 Call 0x1C17F10
	887 Move X1, X24
	888 Move X2, X23
	889 Move X3, X31
	890 Move X21, X0
	891 Call Exception..ctor, X0, X1, X2
	892 Compare X21, 0
	893 JumpIfEqual {1069}
	894 Move X8, [X21]
	895 Move X0, X21
	896 Move X9, [X8+408]
	897 Move X1, [X8+416]
	898 NotImplemented "Instruction BLR not yet implemented."
	899 Compare X0, 0
	900 JumpIfEqual {1069}
	901 Move X23, X0
	902 Move X0, 0xB2D000
	903 Move X0, [X0+2072]
	904 Call 0x1C17D08
	905 Move X25, X0
	906 Move X0, 0xB56000
	907 Move X0, [X0+1512]
	908 Call 0x1C17D08
	909 Move X8, [X23]
	910 Move X24, X0
	911 NotImplemented "Instruction LDRH not yet implemented."
	912 Compare X9, 0
	913 JumpIfEqual {920}
	914 Move X10, [X8+176]
	915 Add X10, X10, 8
	916 NotImplemented "Instruction LDUR not yet implemented."
	917 NotImplemented "Instruction CMP not yet implemented."
	918 Subtract X9, X9, 1
	919 Add X10, X10, 16
	920 Move W2, 1
	921 Move X0, X23
	922 Move X1, X25
	923 Call 0x1C5D788
	924 Move W0, 8
	925 Call 0x3EB2AF0
	926 Move X8, [X22]
	927 Move [X0], X8
	928 Move X1, 0x8EE000
	929 Add X1, X1, 3672
	930 Move X2, X31
	931 Call 0x3EB2B00
	932 Move W9, [X10]
	933 Add W9, W9, 1
	934 Add X8, X8, W9
	935 Add X0, X8, 312
	936 Move X8, [X0]
	937 Move X3, [X0+8]
	938 Move X0, X23
	939 Move X1, X24
	940 Move X2, X22
	941 NotImplemented "Instruction BLR not yet implemented."
	942 Move X8, [X21]
	943 Move X0, X21
	944 Move X9, [X8+408]
	945 Move X1, [X8+416]
	946 NotImplemented "Instruction BLR not yet implemented."
	947 Move X22, X0
	948 Move X0, 0xB71000
	949 Move X0, [X0+3920]
	950 Call 0x1C17D08
	951 Move W8, [X0+224]
	952 Compare W8, 0
	953 JumpIfNotEqual {955}
	954 Call 0x1C17DFC
	955 Move X0, 0xB71000
	956 Move X0, [X0+3920]
	957 Call 0x1C17D08
	958 Move X8, [X0+184]
	959 Move X0, 0xB2D000
	960 Move X25, [X8+32]
	961 Move X0, [X0+2104]
	962 Call 0x1C17D08
	963 Move X24, X0
	964 Move X0, 0xB71000
	965 Move X0, [X0+3928]
	966 Call 0x1C17D08
	967 Move X23, X0
	968 Compare X25, 0
	969 JumpIfNotEqual {1002}
	970 Move X0, 0xB71000
	971 Move X0, [X0+3920]
	972 Call 0x1C17D08
	973 Move W8, [X0+224]
	974 Compare W8, 0
	975 JumpIfNotEqual {977}
	976 Call 0x1C17DFC
	977 Move X26, 0xB71000
	978 Move X26, [X26+3920]
	979 Move X0, X26
	980 Call 0x1C17D08
	981 Move X8, [X0+184]
	982 Move X0, 0xB71000
	983 Move X27, [X8]
	984 Move X0, [X0+3944]
	985 Call 0x1C17D08
	986 Call 0x1C17F10
	987 Move X25, X0
	988 Move X0, 0xB71000
	989 Move X0, [X0+4024]
	990 Call 0x1C17D08
	991 Move X2, X0
	992 Move X0, X25
	993 Move X1, X27
	994 Move X3, X31
	995 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	996 Move X0, X26
	997 Call 0x1C17D08
	998 Move X8, [X0+184]
	999 Move X0, X26
	1000 Move [X8+32], X25
	1001 Call 0x1C17D08
	1002 Move X0, 0xB71000
	1003 Move X0, [X0+3960]
	1004 Call 0x1C17D08
	1005 Move X2, X0
	1006 Move X0, X20
	1007 Move X1, X25
	1008 Call Enumerable.Where, X0, X1
	1009 Move X20, X0
	1010 Move X0, 0xB71000
	1011 Move X0, [X0+3920]
	1012 Call 0x1C17D08
	1013 Move W8, [X0+224]
	1014 Compare W8, 0
	1015 JumpIfNotEqual {1017}
	1016 Call 0x1C17DFC
	1017 Move X0, 0xB71000
	1018 Move X0, [X0+3920]
	1019 Call 0x1C17D08
	1020 Move X8, [X0+184]
	1021 Move X25, [X8+40]
	1022 Compare X25, 0
	1023 JumpIfNotEqual {1056}
	1024 Move X0, 0xB71000
	1025 Move X0, [X0+3920]
	1026 Call 0x1C17D08
	1027 Move W8, [X0+224]
	1028 Compare W8, 0
	1029 JumpIfNotEqual {1031}
	1030 Call 0x1C17DFC
	1031 Move X26, 0xB71000
	1032 Move X26, [X26+3920]
	1033 Move X0, X26
	1034 Call 0x1C17D08
	1035 Move X8, [X0+184]
	1036 Move X0, 0xB71000
	1037 Move X27, [X8]
	1038 Move X0, [X0+3968]
	1039 Call 0x1C17D08
	1040 Call 0x1C17F10
	1041 Move X25, X0
	1042 Move X0, 0xB71000
	1043 Move X0, [X0+4032]
	1044 Call 0x1C17D08
	1045 Move X2, X0
	1046 Move X0, X25
	1047 Move X1, X27
	1048 Move X3, X31
	1049 Call Func`2<Object, Object>..ctor, X0, X1, X2
	1050 Move X0, X26
	1051 Call 0x1C17D08
	1052 Move X8, [X0+184]
	1053 Move X0, X26
	1054 Move [X8+40], X25
	1055 Call 0x1C17D08
	1056 Move X0, 0xB71000
	1057 Move X0, [X0+3984]
	1058 Call 0x1C17D08
	1059 Move X2, X0
	1060 Move X0, X20
	1061 Move X1, X25
	1062 Call Enumerable.Select, X0, X1
	1063 Move X1, X0
	1064 Move X0, X24
	1065 Move X2, X31
	1066 Call String.Join, X0, X1
	1067 Compare X22, 0
	1068 JumpIfNotEqual {1070}
	1069 Call 0x1C17F20
	1070 Move X20, X0
	1071 Move X0, 0xB2D000
	1072 Move X0, [X0+2072]
	1073 Call 0x1C17D08
	1074 Move X8, [X22]
	1075 Move X1, X0
	1076 NotImplemented "Instruction LDRH not yet implemented."
	1077 Compare X9, 0
	1078 JumpIfEqual {1085}
	1079 Move X10, [X8+176]
	1080 Add X10, X10, 8
	1081 NotImplemented "Instruction LDUR not yet implemented."
	1082 NotImplemented "Instruction CMP not yet implemented."
	1083 Subtract X9, X9, 1
	1084 Add X10, X10, 16
	1085 Move W2, 1
	1086 Move X0, X22
	1087 Call 0x1C5D788
	1088 Move W9, [X10]
	1089 Add W9, W9, 1
	1090 Add X8, X8, W9
	1091 Add X0, X8, 312
	1092 Move X8, [X0]
	1093 Move X3, [X0+8]
	1094 Move X0, X22
	1095 Move X1, X23
	1096 Move X2, X20
	1097 NotImplemented "Instruction BLR not yet implemented."
	1098 Move X19, [X19+112]
	1099 Compare X19, 0
	1100 JumpIfEqual {623}
	1101 Move X0, 0xB56000
	1102 Move X0, [X0+1520]
	1103 Call 0x1C17D08
	1104 Move X23, X0
	1105 Move X0, 0xB56000
	1106 Move X0, [X0+1528]
	1107 Call 0x1C17D08
	1108 Move X20, X0
	1109 Move X0, 0xB71000
	1110 Move X0, [X0+3992]
	1111 Call 0x1C17D08
	1112 Move X8, [X19]
	1113 Move X22, X0
	1114 NotImplemented "Instruction LDRH not yet implemented."
	1115 Compare X9, 0
	1116 JumpIfEqual {1123}
	1117 Move X10, [X8+176]
	1118 Add X10, X10, 8
	1119 NotImplemented "Instruction LDUR not yet implemented."
	1120 NotImplemented "Instruction CMP not yet implemented."
	1121 Subtract X9, X9, 1
	1122 Add X10, X10, 16
	1123 Move W2, 7
	1124 Move X0, X19
	1125 Move X1, X23
	1126 Call 0x1C5D788
	1127 Move W9, [X10]
	1128 Add W9, W9, 7
	1129 Add X8, X8, W9
	1130 Add X0, X8, 312
	1131 Move X8, [X0]
	1132 Move X6, [X0+8]
	1133 Move W5, 213
	1134 Move X28, X0
	1135 Call 0x3EB2AE0
	1136 Move X0, X28
	1137 Call 0x1D2D690
	1138 Move X28, X0
	1139 NotImplemented "Instruction CMP not yet implemented."
	1140 Move X0, X28
	1141 Call 0x3EB2AD0
	1142 Move X27, [X0]
	1143 Call 0x3EB2AE0
	1144 Move X8, 0xB71000
	1145 Move X8, [X8+3848]
	1146 Add X0, X31, 48
	1147 Move X1, [X8]
	1148 Call Enumerator<Object>.Dispose, X0
	1149 Move X29, [X31+16]
	1150 Compare X27, 0
	1151 JumpIfEqual {266}
	1152 Move X27, X31
	1153 Move X28, X0
	1154 Move X8, 0xB71000
	1155 Move X8, [X8+3848]
	1156 Move X1, [X8]
	1157 Add X0, X31, 48
	1158 Call Enumerator<Object>.Dispose, X0
	1159 Compare X27, 0
	1160 JumpIfEqual {1136}
	1161 Move X0, X27
	1162 Call 0x1C17F18
	1163 Move X28, X0
	1164 NotImplemented "Instruction CMP not yet implemented."
	1165 Move X0, X28
	1166 Call 0x3EB2AD0
	1167 Move X27, [X0]
	1168 Call 0x3EB2AE0
	1169 Move X8, 0xB71000
	1170 Move X8, [X8+3848]
	1171 Add X0, X31, 48
	1172 Move X1, [X8]
	1173 Call Enumerator<Object>.Dispose, X0
	1174 Compare X27, 0
	1175 JumpIfEqual {217}
	1176 Move X0, X27
	1177 Call 0x1C17F18
	1178 Move X27, X31
	1179 Move X28, X0
	1180 Move X8, 0xB71000
	1181 Move X8, [X8+3848]
	1182 Move X1, [X8]
	1183 Add X0, X31, 48
	1184 Call Enumerator<Object>.Dispose, X0
	1185 Compare X27, 0
	1186 JumpIfEqual {1136}
	1187 Move X0, X27
	1188 Call 0x1C17F18
	1189 Call 0x1991590

Method: System.Void AddObserverToScope(SpatialSys.ObservableState.IStateObject state, SpatialSys.ObservableState.StateObservationContext/ObserverData observer, SpatialSys.ObservableState.ObservationScope scope, System.Boolean inherited)

Disassembly:
	0x035C7FF0 B.NE 0x35C7FDC
	0x035C7FF4 MOVZ W2, 0x2
	0x035C7FF8 MOV X0, X21
	0x035C7FFC BL 0x1C5C788
	0x035C8000 B 0x35C8014
	0x035C8004 LDR W9, [X10]
	0x035C8008 ADD W9, W9, 0x2
	0x035C800C ADD X8, X8, W9, 0x4, SXTW
	0x035C8010 ADD X0, X8, 0x138
	0x035C8014 LDP X8, X6, [X0]
	0x035C8018 MOVZ W5, 0x201
	0x035C801C MOV X0, X21
	0x035C8020 MOV X1, X24
	0x035C8024 MOV X2, X31
	0x035C8028 MOV X3, X22
	0x035C802C MOV X4, X23
	0x035C8030 BLR X8
	0x035C8034 LDR X0, [X19 + 0x40]
	0x035C8038 CBZ X0, 0x35C84BC
	0x035C803C LDR X1, [X27]
	0x035C8040 ADD X8, X31, 0x50
	0x035C8044 BL 0x25F7F38
	0x035C8048 LDP V0, V1, [X31 + 0x50]
	0x035C804C LDR X8, [X31 + 0x70]
	0x035C8050 ADRP X20, 0xB2B000
	0x035C8054 ADRP X22, 0xB54000
	0x035C8058 LDR W24, [X31 + 0x88]
	0x035C805C LDR X20, [X20 + 0x7D0]
	0x035C8060 LDR X22, [X22 + 0x5F8]
	0x035C8064 STP V0, V1, [X31 + 0x90]
	0x035C8068 STR X8, [X31 + 0xB0]
	0x035C806C ADRP X27, 0xB70000
	0x035C8070 LDR X27, [X27 + 0x68]
	0x035C8074 ADD W23, W24, 0x1
	0x035C8078 SXTW X21, W24
	0x035C807C LDR X0, [X29]
	0x035C8080 LDR W8, [X0 + 0xE0]
	0x035C8084 CBNZ W8, 0x35C808C
	0x035C8088 BL 0x1C16DFC
	0x035C808C LDR X1, [X25]
	0x035C8090 ADD X0, X31, 0x90
	0x035C8094 BL 0x2BC4DE0
	0x035C8098 TBZ X0, 0x0, 0x35C845C
	0x035C809C LDR X0, [X29]
	0x035C80A0 LDR W8, [X0 + 0xE0]
	0x035C80A4 CBNZ W8, 0x35C80AC
	0x035C80A8 BL 0x1C16DFC
	0x035C80AC LDR X1, [X26]
	0x035C80B0 ADD X0, X31, 0x90
	0x035C80B4 BL 0x2BC501C
	0x035C80B8 MOV X28, X0
	0x035C80BC CBZ X0, 0x35C84B4
	0x035C80C0 LDRB W8, [X28 + 0x60]
	0x035C80C4 CBNZ W8, 0x35C807C
	0x035C80C8 LDR X8, [X28 + 0x10]
	0x035C80CC CBZ X8, 0x35C80EC
	0x035C80D0 LDR X0, [X8 + 0x40]
	0x035C80D4 LDR X2, [X28 + 0x58]
	0x035C80D8 LDR X9, [X8 + 0x18]
	0x035C80DC LDR X3, [X8 + 0x28]
	0x035C80E0 MOV X1, X31
	0x035C80E4 BLR X9
	0x035C80E8 B 0x35C807C
	0x035C80EC BL 0x1C16F20
	0x035C80F0 B 0x35C8504
	0x035C80F4 B 0x35C80F8
	0x035C80F8 MOV X8, X1
	0x035C80FC CMP W8, 0x1
	0x035C8100 STP X1, X0, [X31 + 0x38]
	0x035C8104 B.NE 0x35C8698
	0x035C8108 LDR X0, [X31 + 0x40]
	0x035C810C BL 0x3EB1AD0
	0x035C8110 STR X0, [X31 + 0x40]
	0x035C8114 MOV X0, X20
	0x035C8118 BL 0x1C16D08
	0x035C811C LDR X8, [X31 + 0x40]
	0x035C8120 LDR X8, [X8]
	0x035C8124 LDR X1, [X8]
	0x035C8128 BL 0x1C17270
	0x035C812C TBZ X0, 0x0, 0x35C8504
	0x035C8130 LDR X8, [X31 + 0x40]
	0x035C8134 LDR X9, [X8]
	0x035C8138 ADD X8, X31, 0x80
	0x035C813C STR X9, [X31 + 0x30]
	0x035C8140 STR X9, [X8, X21, LSL #3]
	0x035C8144 BL 0x3EB1AE0
	0x035C8148 LDR X8, [X19 + 0x70]
	0x035C814C STR X8, [X31 + 0x38]
	0x035C8150 CBZ X8, 0x35C8438
	0x035C8154 ADRP X0, 0xB2B000
	0x035C8158 LDR X0, [X0 + 0x720]
	0x035C815C BL 0x1C16D08
	0x035C8160 BL 0x1C16F10
	0x035C8164 STR X0, [X31 + 0x40]
	0x035C8168 ADRP X0, 0xB2B000
	0x035C816C LDR X0, [X0 + 0x718]
	0x035C8170 BL 0x1C16D08
	0x035C8174 MOV X1, X0
	0x035C8178 LDR X0, [X31 + 0x40]
	0x035C817C BL 0x2AA4804
	0x035C8180 LDR X0, [X28 + 0x10]
	0x035C8184 CBZ X0, 0x35C84FC
	0x035C8188 MOV X1, X31
	0x035C818C BL 0x33C4268
	0x035C8190 CBZ X0, 0x35C84F4
	0x035C8194 LDR X8, [X0]
	0x035C8198 LDP X9, X1, [X8 + 0x1C8]
	0x035C819C BLR X9
	0x035C81A0 CBZ X0, 0x35C8544
	0x035C81A4 LDR X8, [X0]
	0x035C81A8 LDR X1, [X8 + 0x2F0]
	0x035C81AC LDR X9, [X8 + 0x2E8]
	0x035C81B0 BLR X9
	0x035C81B4 STR X0, [X31 + 0x28]
	0x035C81B8 LDR X0, [X28 + 0x10]
	0x035C81BC CBZ X0, 0x35C853C
	0x035C81C0 MOV X1, X31
	0x035C81C4 BL 0x33C4268
	0x035C81C8 CBZ X0, 0x35C8534
	0x035C81CC LDR X8, [X0]
	0x035C81D0 LDP X9, X1, [X8 + 0x1A8]
	0x035C81D4 BLR X9
	0x035C81D8 STR X0, [X31 + 0x20]
	0x035C81DC ADRP X0, 0xB34000
	0x035C81E0 LDR X0, [X0 + 0x790]
	0x035C81E4 BL 0x1C16D08
	0x035C81E8 MOV X1, X0
	0x035C81EC LDP X2, X0, [X31 + 0x20]
	0x035C81F0 MOV X3, X31
	0x035C81F4 BL 0x32274B8
	0x035C81F8 STR X0, [X31 + 0x28]
	0x035C81FC LDR X8, [X31 + 0x40]
	0x035C8200 CBZ X8, 0x35C852C
	0x035C8204 ADRP X0, 0xB54000
	0x035C8208 LDR X0, [X0 + 0x5E8]
	0x035C820C BL 0x1C16D08
	0x035C8210 STR X0, [X31 + 0x20]
	0x035C8214 ADRP X0, 0xB2B000
	0x035C8218 LDR X0, [X0 + 0x710]
	0x035C821C BL 0x1C16D08
	0x035C8220 MOV X3, X0
	0x035C8224 LDR X0, [X31 + 0x40]
	0x035C8228 LDP X1, X2, [X31 + 0x20]
	0x035C822C BL 0x2AA5098
	0x035C8230 LDR X8, [X28 + 0x48]
	0x035C8234 STR X8, [X31 + 0x28]
	0x035C8238 ADRP X0, 0xB6F000
	0x035C823C LDR X0, [X0 + 0xF50]
	0x035C8240 BL 0x1C16D08
	0x035C8244 LDR W8, [X0 + 0xE0]
	0x035C8248 CBNZ W8, 0x35C8250
	0x035C824C BL 0x1C16DFC
	0x035C8250 ADRP X0, 0xB6F000
	0x035C8254 LDR X0, [X0 + 0xF50]
	0x035C8258 BL 0x1C16D08
	0x035C825C LDR X8, [X0 + 0xB8]
	0x035C8260 LDR X28, [X8 + 0x30]
	0x035C8264 CBZ X28, 0x35C829C
	0x035C8268 ADRP X0, 0xB2B000
	0x035C826C LDR X0, [X0 + 0x838]
	0x035C8270 BL 0x1C16D08
	0x035C8274 STR X0, [X31 + 0x20]
	0x035C8278 ADRP X0, 0xB6F000
	0x035C827C LDR X0, [X0 + 0xF58]
	0x035C8280 BL 0x1C16D08
	0x035C8284 STR X0, [X31 + 0x18]
	0x035C8288 ADRP X0, 0xB70000
	0x035C828C LDR X0, [X0 + 0x80]
	0x035C8290 BL 0x1C16D08
	0x035C8294 STR X0, [X31 + 0x10]
	0x035C8298 B 0x35C8350
	0x035C829C ADRP X0, 0xB2B000
	0x035C82A0 LDR X0, [X0 + 0x838]
	0x035C82A4 BL 0x1C16D08
	0x035C82A8 STR X0, [X31 + 0x20]
	0x035C82AC ADRP X0, 0xB6F000
	0x035C82B0 LDR X0, [X0 + 0xF58]
	0x035C82B4 BL 0x1C16D08
	0x035C82B8 STR X0, [X31 + 0x18]
	0x035C82BC ADRP X0, 0xB70000
	0x035C82C0 LDR X0, [X0 + 0x80]
	0x035C82C4 BL 0x1C16D08
	0x035C82C8 STR X0, [X31 + 0x10]
	0x035C82CC ADRP X0, 0xB6F000
	0x035C82D0 LDR X0, [X0 + 0xF50]
	0x035C82D4 BL 0x1C16D08
	0x035C82D8 LDR W8, [X0 + 0xE0]
	0x035C82DC CBNZ W8, 0x35C82E4
	0x035C82E0 BL 0x1C16DFC
	0x035C82E4 ADRP X0, 0xB6F000
	0x035C82E8 LDR X0, [X0 + 0xF50]
	0x035C82EC BL 0x1C16D08
	0x035C82F0 LDR X8, [X0 + 0xB8]
	0x035C82F4 LDR X8, [X8]
	0x035C82F8 STR X8, [X31 + 0x8]
	0x035C82FC ADRP X0, 0xB6F000
	0x035C8300 LDR X0, [X0 + 0xF80]
	0x035C8304 BL 0x1C16D08
	0x035C8308 BL 0x1C16F10
	0x035C830C MOV X28, X0
	0x035C8310 ADRP X0, 0xB70000
	0x035C8314 LDR X0, [X0 + 0x88]
	0x035C8318 BL 0x1C16D08
	0x035C831C MOV X2, X0
	0x035C8320 LDR X1, [X31 + 0x8]
	0x035C8324 MOV X0, X28
	0x035C8328 MOV X3, X31
	0x035C832C BL 0x2D30578
	0x035C8330 ADRP X0, 0xB6F000
	0x035C8334 LDR X0, [X0 + 0xF50]
	0x035C8338 BL 0x1C16D08
	0x035C833C LDR X8, [X0 + 0xB8]
	0x035C8340 STR X28, [X8 + 0x30]
	0x035C8344 ADRP X0, 0xB6F000
	0x035C8348 LDR X0, [X0 + 0xF50]
	0x035C834C BL 0x1C16D08
	0x035C8350 ADRP X0, 0xB6F000
	0x035C8354 LDR X0, [X0 + 0xF90]
	0x035C8358 BL 0x1C16D08
	0x035C835C MOV X2, X0
	0x035C8360 LDR X0, [X31 + 0x28]
	0x035C8364 MOV X1, X28
	0x035C8368 BL 0x21CF224
	0x035C836C MOV X1, X0
	0x035C8370 LDR X0, [X31 + 0x20]
	0x035C8374 MOV X2, X31
	0x035C8378 BL 0x32280D8
	0x035C837C MOV X28, X0
	0x035C8380 ADRP X0, 0xB2B000
	0x035C8384 LDR X0, [X0 + 0x710]
	0x035C8388 BL 0x1C16D08
	0x035C838C MOV X3, X0
	0x035C8390 LDR X0, [X31 + 0x40]
	0x035C8394 LDR X1, [X31 + 0x18]
	0x035C8398 MOV X2, X28
	0x035C839C BL 0x2AA5098
	0x035C83A0 ADRP X0, 0xB54000
	0x035C83A4 LDR X0, [X0 + 0x5F0]
	0x035C83A8 BL 0x1C16D08
	0x035C83AC MOV X28, X0
	0x035C83B0 MOV X0, X22
	0x035C83B4 BL 0x1C16D08
	0x035C83B8 STR X0, [X31 + 0x28]
	0x035C83BC MOV X0, X27
	0x035C83C0 BL 0x1C16D08
	0x035C83C4 STR X0, [X31 + 0x20]
	0x035C83C8 LDR X8, [X31 + 0x38]
	0x035C83CC LDR X8, [X8]
	0x035C83D0 LDRH W9, [X8 + 0x12E]
	0x035C83D4 CBZ X9, 0x35C83F8
	0x035C83D8 LDR X10, [X8 + 0xB0]
	0x035C83DC ADD X10, X10, 0x8
	0x035C83E0 LDUR X11, [X10 - 0x8]
	0x035C83E4 CMP X11, X28
	0x035C83E8 B.EQ 0x35C840C
	0x035C83EC SUBS X9, X9, 0x1
	0x035C83F0 ADD X10, X10, 0x10
	0x035C83F4 B.NE 0x35C83E0
	0x035C83F8 LDR X0, [X31 + 0x38]
	0x035C83FC MOVZ W2, 0x6
	0x035C8400 MOV X1, X28
	0x035C8404 BL 0x1C5C788
	0x035C8408 B 0x35C841C
	0x035C840C LDR W9, [X10]
	0x035C8410 ADD W9, W9, 0x6
	0x035C8414 ADD X8, X8, W9, 0x4, SXTW
	0x035C8418 ADD X0, X8, 0x138
	0x035C841C LDP X8, X7, [X0]
	0x035C8420 LDP X2, X0, [X31 + 0x30]
	0x035C8424 LDR X1, [X31 + 0x10]
	0x035C8428 LDR X3, [X31 + 0x40]
	0x035C842C LDP X5, X4, [X31 + 0x20]
	0x035C8430 MOVZ W6, 0x20F
	0x035C8434 BLR X8
	0x035C8438 LDR W8, [X31 + 0x4C]
	0x035C843C TBZ X8, 0x0, 0x35C807C
	0x035C8440 STR W24, [X31 + 0x88]
	0x035C8444 ADRP X0, 0xB70000
	0x035C8448 LDR X0, [X0 + 0x90]
	0x035C844C BL 0x1C16D08
	0x035C8450 MOV X1, X0
	0x035C8454 LDR X0, [X31 + 0x30]
	0x035C8458 BL 0x1C16DEC
	0x035C845C MOV X20, X31
	0x035C8460 STR W24, [X31 + 0x88]
	0x035C8464 LDR X0, [X29]
	0x035C8468 LDR W8, [X0 + 0xE0]
	0x035C846C CBNZ W8, 0x35C8474
	0x035C8470 BL 0x1C16DFC
	0x035C8474 ADRP X8, 0xB54000
	0x035C8478 LDR X8, [X8 + 0x550]
	0x035C847C ADD X0, X31, 0x90
	0x035C8480 LDR X1, [X8]
	0x035C8484 BL 0x2BC5018
	0x035C8488 CBNZ X20, 0x35C84E0
	0x035C848C MOV X0, X19
	0x035C8490 BL 0x35C8704
	0x035C8494 LDP X20, X19, [X31 + 0x110]
	0x035C8498 LDP X22, X21, [X31 + 0x100]
	0x035C849C LDP X24, X23, [X31 + 0xF0]
	0x035C84A0 LDP X26, X25, [X31 + 0xE0]
	0x035C84A4 LDP X28, X27, [X31 + 0xD0]
	0x035C84A8 LDP X29, X30, [X31 + 0xC0]
	0x035C84AC ADD X31, X31, 0x120
	0x035C84B0 RET
	0x035C84B4 STR W24, [X31 + 0x88]
	0x035C84B8 BL 0x1C16F20
	0x035C84BC BL 0x1C16F20
	0x035C84C0 BL 0x1C16F20
	0x035C84C4 BL 0x1C16F20
	0x035C84C8 BL 0x1C16F20
	0x035C84CC BL 0x1C16F20
	0x035C84D0 BL 0x1C16F20
	0x035C84D4 BL 0x1C16F20
	0x035C84D8 BL 0x1C16F20
	0x035C84DC BL 0x1C16F20
	0x035C84E0 MOV X0, X20
	0x035C84E4 BL 0x1C16F18
	0x035C84E8 MOV X0, X21
	0x035C84EC BL 0x1C16F18
	0x035C84F0 BL 0x1C16F20
	0x035C84F4 STR W23, [X31 + 0x88]
	0x035C84F8 BL 0x1C16F20
	0x035C84FC STR W23, [X31 + 0x88]
	0x035C8500 BL 0x1C16F20
	0x035C8504 MOVZ W0, 0x8
	0x035C8508 STR W24, [X31 + 0x88]
	0x035C850C BL 0x3EB1AF0
	0x035C8510 LDR X8, [X31 + 0x40]
	0x035C8514 LDR X8, [X8]
	0x035C8518 STR X8, [X0]
	0x035C851C ADRP X1, 0x8EC000
	0x035C8520 ADD X1, X1, 0xE58
	0x035C8524 MOV X2, X31
	0x035C8528 BL 0x3EB1B00
	0x035C852C STR W23, [X31 + 0x88]
	0x035C8530 BL 0x1C16F20
	0x035C8534 STR W23, [X31 + 0x88]
	0x035C8538 BL 0x1C16F20
	0x035C853C STR W23, [X31 + 0x88]
	0x035C8540 BL 0x1C16F20
	0x035C8544 STR W23, [X31 + 0x88]
	0x035C8548 BL 0x1C16F20
	0x035C854C B 0x35C8688
	0x035C8550 B 0x35C85C8
	0x035C8554 STP X1, X0, [X31 + 0x38]
	0x035C8558 MOV W24, W23
	0x035C855C B 0x35C8698
	0x035C8560 B 0x35C85C8
	0x035C8564 B 0x35C85C8
	0x035C8568 B 0x35C8688
	0x035C856C B 0x35C85C8
	0x035C8570 B 0x35C85C8
	0x035C8574 B 0x35C85C8
	0x035C8578 B 0x35C85C8
	0x035C857C B 0x35C8688
	0x035C8580 B 0x35C85C8
	0x035C8584 B 0x35C85C8
	0x035C8588 B 0x35C85C8
	0x035C858C B 0x35C85C8
	0x035C8590 B 0x35C8688

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0xE19000
	010 Move W8, [X24+441]
	011 Move W23, W4
	012 Move W22, W3
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {61}
	020 Move X0, 0xB70000
	021 Move X0, [X0+4040]
	022 Call 0x1C17CF4
	023 Move X0, 0xB55000
	024 Move X0, [X0+1344]
	025 Call 0x1C17CF4
	026 Move X0, 0xB55000
	027 Move X0, [X0+1408]
	028 Call 0x1C17CF4
	029 Move X0, 0xB70000
	030 Move X0, [X0+4048]
	031 Call 0x1C17CF4
	032 Move X0, 0xB55000
	033 Move X0, [X0+1416]
	034 Call 0x1C17CF4
	035 Move X0, 0xB70000
	036 Move X0, [X0+4056]
	037 Call 0x1C17CF4
	038 Move X0, 0xB70000
	039 Move X0, [X0+4064]
	040 Call 0x1C17CF4
	041 Move X0, 0xB2C000
	042 Move X0, [X0+3584]
	043 Call 0x1C17CF4
	044 Move X0, 0xB70000
	045 Move X0, [X0+4072]
	046 Call 0x1C17CF4
	047 Move X0, 0xB70000
	048 Move X0, [X0+4080]
	049 Call 0x1C17CF4
	050 Move X0, 0xB2C000
	051 Move X0, [X0+3608]
	052 Call 0x1C17CF4
	053 Move X0, 0xB55000
	054 Move X0, [X0+1440]
	055 Call 0x1C17CF4
	056 Move X0, 0xB2D000
	057 Move X0, [X0+432]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X24+441], W8
	061 Move [X31+24], X31
	062 Move [X31+8], X31
	063 Compare X19, 0
	064 JumpIfEqual {339}
	065 Move TEMP, X23
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {72}
	069 Move X0, [X19+80]
	070 Compare X0, 0
	071 JumpIfNotEqual {75}
	072 Move X0, [X19+72]
	073 Compare X0, 0
	074 JumpIfEqual {339}
	075 Move X8, 0xB55000
	076 Move X8, [X8+1408]
	077 Move X1, X21
	078 Move X2, [X8]
	079 Call HashSet`1<Object>.Add, X0, X1
	080 Move X0, [X20+40]
	081 Compare X0, 0
	082 JumpIfEqual {339}
	083 Move X8, 0xB55000
	084 Move X8, [X8+1344]
	085 Add X2, X31, 24
	086 Move X1, X21
	087 Move X3, [X8]
	088 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {112}
	093 Move X8, 0xB70000
	094 Move X8, [X8+4064]
	095 Move X0, [X8]
	096 Call 0x1C17F10
	097 Move X8, 0xB70000
	098 Move X8, [X8+4056]
	099 Move X23, X0
	100 Move X1, [X8]
	101 Call HashSet`1<Object>..ctor, X0
	102 Move [X31+24], X23
	103 Move X0, [X20+40]
	104 Compare X0, 0
	105 JumpIfEqual {339}
	106 Move X8, 0xB70000
	107 Move X8, [X8+4040]
	108 Move X1, X21
	109 Move X2, X23
	110 Move X3, [X8]
	111 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	112 Move X0, [X31+24]
	113 Compare X0, 0
	114 JumpIfEqual {339}
	115 Move X8, 0xB70000
	116 Move X8, [X8+4048]
	117 Move X1, X19
	118 Move X2, [X8]
	119 Call HashSet`1<Object>.Add, X0, X1
	120 Move W8, [X19+40]
	121 Compare W8, 0
	122 JumpIfEqual {167}
	123 Move X0, [X19+72]
	124 Compare X0, 0
	125 JumpIfEqual {339}
	126 Move X8, 0xB55000
	127 Move X8, [X8+1416]
	128 Move X1, X21
	129 Move X2, [X8]
	130 Call HashSet`1<Object>.Contains, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {167}
	135 Compare X21, 0
	136 JumpIfEqual {339}
	137 Move X24, 0xB55000
	138 Move X22, [X19+48]
	139 Move X24, [X24+1440]
	140 Move X0, X21
	141 Move X23, [X24]
	142 Move X1, X23
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {343}
	146 Move X24, [X24]
	147 Move X0, X21
	148 Move X1, X24
	149 Call 0x1C17E00
	150 Compare X0, 0
	151 JumpIfEqual {346}
	152 Move X8, [X0]
	153 Move X23, X0
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move W2, 10
	164 Move X0, X23
	165 Move X1, X24
	166 Call 0x1C5D788
	167 Compare W22, 0
	168 JumpIfEqual {330}
	169 NotImplemented "Instruction CMP not yet implemented."
	170 NotImplemented "Instruction CSEL not yet implemented."
	171 Compare X21, 0
	172 JumpIfEqual {339}
	173 Move X10, 0xB2D000
	174 Move X8, [X21]
	175 Move X10, [X10+432]
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Move X1, [X10]
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move W2, 6
	187 Move X0, X21
	188 Call 0x1C5D788
	189 Move W9, [X10]
	190 Add W9, W9, 6
	191 Add X8, X8, W9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X21
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X0, 0
	198 JumpIfEqual {339}
	199 Move X10, 0xB70000
	200 Move X8, [X0]
	201 Move X10, [X10+4072]
	202 Move X21, X0
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Move X1, [X10]
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move X0, X21
	214 Move W2, W31
	215 Call 0x1C5D788
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Add X8, X8, X9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X1, [X0+8]
	221 Move X0, X21
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Move X21, X0
	224 Compare X0, 0
	225 JumpIfEqual {340}
	226 Move X23, 0xB2C000
	227 Move X24, 0xB70000
	228 Move X23, [X23+3608]
	229 Move X24, [X24+4080]
	230 Move X8, [X21]
	231 Move X1, [X23]
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move X0, X21
	242 Move W2, W31
	243 Call 0x1C5D788
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Add X8, X8, X9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X1, [X0+8]
	249 Move X0, X21
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {282}
	255 Move X8, [X21]
	256 Move X1, [X24]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move X0, X21
	267 Move W2, W31
	268 Call 0x1C5D788
	269 NotImplemented "Instruction LDRSW not yet implemented."
	270 Add X8, X8, X9
	271 Add X0, X8, 312
	272 Move X8, [X0]
	273 Move X1, [X0+8]
	274 Move X0, X21
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Move X1, X0
	277 Move W4, 1
	278 Move X0, X20
	279 Move X2, X19
	280 Move W3, W22
	281 Call StateObservationContext.AddObserverToScope, X0, X1, X2, X3, X4
	282 Move X19, X31
	283 Compare X21, 0
	284 JumpIfEqual {328}
	285 Move X10, 0xB2C000
	286 Move X8, [X21]
	287 Move X10, [X10+3584]
	288 NotImplemented "Instruction LDRH not yet implemented."
	289 Move X1, [X10]
	290 Compare X9, 0
	291 JumpIfEqual {298}
	292 Move X10, [X8+176]
	293 Add X10, X10, 8
	294 NotImplemented "Instruction LDUR not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Subtract X9, X9, 1
	297 Add X10, X10, 16
	298 Move X0, X21
	299 Move W2, W31
	300 Call 0x1C5D788
	301 Move W9, [X10]
	302 Add W9, W9, 10
	303 Add X8, X8, W9
	304 Add X0, X8, 312
	305 Move X8, [X0]
	306 Move X3, [X0+8]
	307 Add X2, X31, 8
	308 Move X0, X23
	309 Move X1, X22
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {330}
	315 Move X1, [X31+8]
	316 Move W3, [X19+24]
	317 Move W4, 1
	318 Move X0, X20
	319 Move X2, X19
	320 Call StateObservationContext.AddObserverToScope, X0, X1, X2, X3, X4
	321 NotImplemented "Instruction LDRSW not yet implemented."
	322 Add X8, X8, X9
	323 Add X0, X8, 312
	324 Move X8, [X0]
	325 Move X1, [X0+8]
	326 Move X0, X21
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Compare X19, 0
	329 JumpIfNotEqual {341}
	330 Move X20, [X31+64]
	331 Move X19, [X31+72]
	332 Move X22, [X31+48]
	333 Move X21, [X31+56]
	334 Move X24, [X31+32]
	335 Move X23, [X31+40]
	336 Move X30, [X31+16]
	337 Add X31, X31, 80
	338 Return 
	339 Call 0x1C17F20
	340 Call 0x1C17F20
	341 Move X0, X19
	342 Call 0x1C17F18
	343 Move X0, X21
	344 Move X1, X23
	345 Call 0x1C181E0
	346 Move X0, X21
	347 Move X1, X24
	348 Call 0x1C181E0
	349 Move X20, X0
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move X0, X20
	352 Call 0x3EB2AD0
	353 Move X19, [X0]
	354 Call 0x3EB2AE0
	355 Move X19, X31
	356 Move X20, X0
	357 Compare X21, 0
	358 JumpIfEqual {382}
	359 Move X10, 0xB2C000
	360 Move X8, [X21]
	361 Move X10, [X10+3584]
	362 NotImplemented "Instruction LDRH not yet implemented."
	363 Move X1, [X10]
	364 Compare X9, 0
	365 JumpIfEqual {372}
	366 Move X10, [X8+176]
	367 Add X10, X10, 8
	368 NotImplemented "Instruction LDUR not yet implemented."
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Subtract X9, X9, 1
	371 Add X10, X10, 16
	372 Move X0, X21
	373 Move W2, W31
	374 Call 0x1C5D788
	375 NotImplemented "Instruction LDRSW not yet implemented."
	376 Add X8, X8, X9
	377 Add X0, X8, 312
	378 Move X8, [X0]
	379 Move X1, [X0+8]
	380 Move X0, X21
	381 NotImplemented "Instruction BLR not yet implemented."
	382 Compare X19, 0
	383 JumpIfNotEqual {386}
	384 Move X0, X20
	385 Call 0x1D2D690
	386 Move X0, X19
	387 Call 0x1C17F18
	388 Call 0x1991590

Method: System.Void DeregisterObserver(SpatialSys.ObservableState.ObserverDelegate observer)

Disassembly:
	0x035C8594 B 0x35C85C8
	0x035C8598 STP X1, X0, [X31 + 0x38]
	0x035C859C B 0x35C85A8
	0x035C85A0 STP X1, X0, [X31 + 0x38]
	0x035C85A4 STR W24, [X31 + 0x88]
	0x035C85A8 BL 0x3EB1AE0
	0x035C85AC B 0x35C869C
	0x035C85B0 B 0x35C85C8
	0x035C85B4 B 0x35C8688
	0x035C85B8 B 0x35C85C8
	0x035C85BC B 0x35C8688
	0x035C85C0 B 0x35C85C8
	0x035C85C4 B 0x35C8688
	0x035C85C8 STP X1, X0, [X31 + 0x38]
	0x035C85CC STR W23, [X31 + 0x88]
	0x035C85D0 B 0x35C869C
	0x035C85D4 B 0x35C8624
	0x035C85D8 B 0x35C8624
	0x035C85DC B 0x35C8624
	0x035C85E0 B 0x35C8624
	0x035C85E4 B 0x35C8624
	0x035C85E8 B 0x35C8624
	0x035C85EC B 0x35C8624
	0x035C85F0 B 0x35C8624
	0x035C85F4 B 0x35C8624
	0x035C85F8 B 0x35C8624
	0x035C85FC B 0x35C8624
	0x035C8600 B 0x35C8624
	0x035C8604 B 0x35C8624
	0x035C8608 B 0x35C8624
	0x035C860C B 0x35C8624
	0x035C8610 B 0x35C8624
	0x035C8614 B 0x35C8624
	0x035C8618 B 0x35C8624
	0x035C861C B 0x35C8624
	0x035C8620 B 0x35C8624
	0x035C8624 CMP W1, 0x1
	0x035C8628 STR X0, [X31 + 0x40]
	0x035C862C B.NE 0x35C8648
	0x035C8630 LDR X0, [X31 + 0x40]
	0x035C8634 BL 0x3EB1AD0
	0x035C8638 LDR X21, [X0]
	0x035C863C BL 0x3EB1AE0
	0x035C8640 MOV W20, W31
	0x035C8644 B 0x35C7F50
	0x035C8648 MOV X21, X31
	0x035C864C B 0x35C8654
	0x035C8650 STR X0, [X31 + 0x40]
	0x035C8654 LDR X0, [X29]
	0x035C8658 LDR W8, [X0 + 0xE0]
	0x035C865C CBNZ W8, 0x35C8664
	0x035C8660 BL 0x1C16DFC
	0x035C8664 ADRP X8, 0xB54000
	0x035C8668 LDR X8, [X8 + 0x550]
	0x035C866C LDR X1, [X8]
	0x035C8670 ADD X0, X31, 0x90
	0x035C8674 BL 0x2BC5018
	0x035C8678 CBZ X21, 0x35C86F0
	0x035C867C MOV X0, X21
	0x035C8680 BL 0x1C16F18
	0x035C8684 B 0x35C8694
	0x035C8688 STP X1, X0, [X31 + 0x38]
	0x035C868C B 0x35C869C
	0x035C8690 B 0x35C8694
	0x035C8694 STP X1, X0, [X31 + 0x38]
	0x035C8698 STR W24, [X31 + 0x88]
	0x035C869C LDR X8, [X31 + 0x38]
	0x035C86A0 CMP W8, 0x1
	0x035C86A4 B.NE 0x35C86BC
	0x035C86A8 LDR X0, [X31 + 0x40]
	0x035C86AC BL 0x3EB1AD0
	0x035C86B0 LDR X20, [X0]
	0x035C86B4 BL 0x3EB1AE0
	0x035C86B8 B 0x35C8464
	0x035C86BC MOV X20, X31
	0x035C86C0 B 0x35C86C8
	0x035C86C4 STR X0, [X31 + 0x40]
	0x035C86C8 LDR X0, [X29]
	0x035C86CC LDR W8, [X0 + 0xE0]
	0x035C86D0 CBNZ W8, 0x35C86D8
	0x035C86D4 BL 0x1C16DFC
	0x035C86D8 ADRP X8, 0xB54000
	0x035C86DC LDR X8, [X8 + 0x550]
	0x035C86E0 LDR X1, [X8]
	0x035C86E4 ADD X0, X31, 0x90
	0x035C86E8 BL 0x2BC5018
	0x035C86EC CBNZ X20, 0x35C86F8
	0x035C86F0 LDR X0, [X31 + 0x40]
	0x035C86F4 BL 0x1D2C690
	0x035C86F8 MOV X0, X20
	0x035C86FC BL 0x1C16F18
	0x035C8700 BL 0x1990590
	0x035C8704 SUB X31, X31, 0xE0
	0x035C8708 STP X29, X30, [X31 + 0x80]
	0x035C870C STP X28, X27, [X31 + 0x90]
	0x035C8710 STP X26, X25, [X31 + 0xA0]
	0x035C8714 STP X24, X23, [X31 + 0xB0]
	0x035C8718 STP X22, X21, [X31 + 0xC0]
	0x035C871C STP X20, X19, [X31 + 0xD0]
	0x035C8720 ADRP X20, 0xE18000
	0x035C8724 LDRB W8, [X20 + 0x1C2]
	0x035C8728 MOV X19, X0
	0x035C872C TBNZ X8, 0x0, 0x35C87D4
	0x035C8730 ADRP X0, 0xB54000
	0x035C8734 LDR X0, [X0 + 0x550]
	0x035C8738 BL 0x1C16CF4
	0x035C873C ADRP X0, 0xB70000
	0x035C8740 LDR X0, [X0 + 0x10]
	0x035C8744 BL 0x1C16CF4
	0x035C8748 ADRP X0, 0xB54000
	0x035C874C LDR X0, [X0 + 0x558]
	0x035C8750 BL 0x1C16CF4
	0x035C8754 ADRP X0, 0xB70000
	0x035C8758 LDR X0, [X0 + 0x18]
	0x035C875C BL 0x1C16CF4
	0x035C8760 ADRP X0, 0xB54000
	0x035C8764 LDR X0, [X0 + 0x568]
	0x035C8768 BL 0x1C16CF4
	0x035C876C ADRP X0, 0xB70000
	0x035C8770 LDR X0, [X0 + 0x20]
	0x035C8774 BL 0x1C16CF4
	0x035C8778 ADRP X0, 0xB54000
	0x035C877C LDR X0, [X0 + 0x578]
	0x035C8780 BL 0x1C16CF4
	0x035C8784 ADRP X0, 0xB70000
	0x035C8788 LDR X0, [X0 + 0x98]
	0x035C878C BL 0x1C16CF4
	0x035C8790 ADRP X0, 0xB70000
	0x035C8794 LDR X0, [X0 + 0x28]
	0x035C8798 BL 0x1C16CF4
	0x035C879C ADRP X0, 0xB70000
	0x035C87A0 LDR X0, [X0 + 0xA0]
	0x035C87A4 BL 0x1C16CF4
	0x035C87A8 ADRP X0, 0xB2C000
	0x035C87AC LDR X0, [X0 + 0x1B0]
	0x035C87B0 BL 0x1C16CF4
	0x035C87B4 ADRP X0, 0xB70000
	0x035C87B8 LDR X0, [X0 + 0xA8]
	0x035C87BC BL 0x1C16CF4
	0x035C87C0 ADRP X0, 0xB54000
	0x035C87C4 LDR X0, [X0 + 0x5C8]
	0x035C87C8 BL 0x1C16CF4
	0x035C87CC MOVZ W8, 0x1
	0x035C87D0 STRB W8, [X20 + 0x1C2]
	0x035C87D4 MOVI V0.2D, 0x0
	0x035C87D8 STP X31, X31, [X31 + 0x60]
	0x035C87DC STR X31, [X31 + 0x70]
	0x035C87E0 STR X31, [X31 + 0x50]
	0x035C87E4 STP V0, V0, [X31 + 0x30]
	0x035C87E8 LDR X0, [X19 + 0x20]
	0x035C87EC CBZ X0, 0x35C8A60
	0x035C87F0 ADRP X8, 0xB70000
	0x035C87F4 LDR X8, [X8 + 0x28]
	0x035C87F8 ADRP X28, 0xB70000
	0x035C87FC ADRP X29, 0xB2C000
	0x035C8800 ADRP X26, 0xB54000
	0x035C8804 ADRP X23, 0xB54000
	0x035C8808 ADRP X24, 0xB54000
	0x035C880C ADRP X25, 0xB54000
	0x035C8810 LDR X28, [X28 + 0x18]
	0x035C8814 LDR X29, [X29 + 0x1B0]
	0x035C8818 LDR X26, [X26 + 0x5C8]
	0x035C881C LDR X23, [X23 + 0x578]
	0x035C8820 LDR X24, [X24 + 0x558]
	0x035C8824 LDR X25, [X25 + 0x568]
	0x035C8828 LDR X1, [X8]
	0x035C882C ADRP X21, 0xB54000
	0x035C8830 ADRP X22, 0xB70000
	0x035C8834 ADRP X27, 0xB70000
	0x035C8838 LDR X21, [X21 + 0x550]
	0x035C883C LDR X22, [X22 + 0x98]
	0x035C8840 LDR X27, [X27 + 0x10]
	0x035C8844 ADD X8, X31, 0x8
	0x035C8848 BL 0x2DBE924
	0x035C884C LDUR V0, [X31 + 0x8]
	0x035C8850 LDR X8, [X31 + 0x18]
	0x035C8854 STR V0, [X31 + 0x6]
	0x035C8858 STR X8, [X31 + 0x70]
	0x035C885C LDR X1, [X28]
	0x035C8860 ADD X0, X31, 0x60
	0x035C8864 BL 0x2BC3C64
	0x035C8868 TBZ X0, 0x0, 0x35C88D8
	0x035C886C LDR X20, [X31 + 0x70]
	0x035C8870 CBZ X20, 0x35C8A50
	0x035C8874 LDR X8, [X20]
	0x035C8878 LDR X1, [X29]
	0x035C887C LDRH W9, [X8 + 0x12E]
	0x035C8880 CBZ X9, 0x35C88A4
	0x035C8884 LDR X10, [X8 + 0xB0]
	0x035C8888 ADD X10, X10, 0x8
	0x035C888C LDUR X11, [X10 - 0x8]
	0x035C8890 CMP X11, X1
	0x035C8894 B.EQ 0x35C88B4
	0x035C8898 SUBS X9, X9, 0x1
	0x035C889C ADD X10, X10, 0x10
	0x035C88A0 B.NE 0x35C888C
	0x035C88A4 MOVZ W2, 0x3
	0x035C88A8 MOV X0, X20
	0x035C88AC BL 0x1C5C788
	0x035C88B0 B 0x35C88C4
	0x035C88B4 LDR W9, [X10]
	0x035C88B8 ADD W9, W9, 0x3

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X21, 0xE19000
	012 Move W8, [X21+442]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0xB70000
	020 Move X0, [X0+4088]
	021 Call 0x1C17CF4
	022 Move X0, 0xB71000
	023 Move X0, [X0]
	024 Call 0x1C17CF4
	025 Move X0, 0xB71000
	026 Move X0, [X0+8]
	027 Call 0x1C17CF4
	028 Move X0, 0xB71000
	029 Move X0, [X0+16]
	030 Call 0x1C17CF4
	031 Move X0, 0xB71000
	032 Move X0, [X0+24]
	033 Call 0x1C17CF4
	034 Move X0, 0xB71000
	035 Move X0, [X0+32]
	036 Call 0x1C17CF4
	037 Move X0, 0xB71000
	038 Move X0, [X0+40]
	039 Call 0x1C17CF4
	040 Move X0, 0xB71000
	041 Move X0, [X0+48]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+442], W8
	045 Move [X31+72], X31
	046 Move [X31+32], X31
	047 Move [X31+40], X31
	048 Move [X31+48], X31
	049 Move X0, [X20+48]
	050 Compare X0, 0
	051 JumpIfEqual {170}
	052 Move X8, 0xB71000
	053 Move X8, [X8]
	054 Add X2, X31, 72
	055 Move X1, X19
	056 Move X3, [X8]
	057 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {155}
	062 Move X8, [X31+72]
	063 Compare X8, 0
	064 JumpIfEqual {170}
	065 Move X0, [X8+72]
	066 Compare X0, 0
	067 JumpIfEqual {170}
	068 Move X26, 0xB71000
	069 Move X26, [X26+40]
	070 Add X8, X31, 8
	071 Move X1, [X26]
	072 Call HashSet`1<Object>.GetEnumerator, X0
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move X8, [X31+24]
	075 Move X23, 0xB71000
	076 Move X24, 0xB71000
	077 Move X23, [X23+24]
	078 Move X24, [X24+8]
	079 Move [X31+2], V0
	080 Move [X31+48], X8
	081 Move X25, 0xB71000
	082 Move X25, [X25+48]
	083 Move X1, [X23]
	084 Add X0, X31, 32
	085 Call Enumerator<Object>.MoveNext, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {101}
	090 Move X0, [X20+40]
	091 Compare X0, 0
	092 JumpIfEqual {166}
	093 Move X1, [X31+48]
	094 Move X2, [X24]
	095 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	096 Compare X0, 0
	097 JumpIfEqual {167}
	098 Move X1, [X31+72]
	099 Move X2, [X25]
	100 Call HashSet`1<Object>.Remove, X0, X1
	101 Move X8, 0xB71000
	102 Move X8, [X8+16]
	103 Add X0, X31, 32
	104 Move X1, [X8]
	105 Call Enumerator<Object>.Dispose, X0
	106 Move X8, [X31+72]
	107 Compare X8, 0
	108 JumpIfEqual {170}
	109 Move X0, [X8+80]
	110 Compare X0, 0
	111 JumpIfEqual {170}
	112 Move X1, [X26]
	113 Add X8, X31, 8
	114 Call HashSet`1<Object>.GetEnumerator, X0
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 Move X8, [X31+24]
	117 Move [X31+2], V0
	118 Move [X31+48], X8
	119 Move X1, [X23]
	120 Add X0, X31, 32
	121 Call Enumerator<Object>.MoveNext, X0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {137}
	126 Move X0, [X20+40]
	127 Compare X0, 0
	128 JumpIfEqual {168}
	129 Move X1, [X31+48]
	130 Move X2, [X24]
	131 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	132 Compare X0, 0
	133 JumpIfEqual {169}
	134 Move X1, [X31+72]
	135 Move X2, [X25]
	136 Call HashSet`1<Object>.Remove, X0, X1
	137 Move X8, 0xB71000
	138 Move X8, [X8+16]
	139 Add X0, X31, 32
	140 Move X1, [X8]
	141 Call Enumerator<Object>.Dispose, X0
	142 Move X8, [X31+72]
	143 Compare X8, 0
	144 JumpIfEqual {170}
	145 Move W9, 1
	146 Move [X8+96], W9
	147 Move X0, [X20+48]
	148 Compare X0, 0
	149 JumpIfEqual {170}
	150 Move X8, 0xB70000
	151 Move X8, [X8+4088]
	152 Move X1, X19
	153 Move X2, [X8]
	154 Call Dictionary`2<Object, Object>.Remove, X0, X1
	155 Move X20, [X31+128]
	156 Move X19, [X31+136]
	157 Move X22, [X31+112]
	158 Move X21, [X31+120]
	159 Move X24, [X31+96]
	160 Move X23, [X31+104]
	161 Move X26, [X31+80]
	162 Move X25, [X31+88]
	163 Move X30, [X31+64]
	164 Add X31, X31, 144
	165 Return 
	166 Call 0x1C17F20
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Move X21, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, X21
	174 Call 0x3EB2AD0
	175 Move X22, [X0]
	176 Call 0x3EB2AE0
	177 Move X8, 0xB71000
	178 Move X8, [X8+16]
	179 Add X0, X31, 32
	180 Move X1, [X8]
	181 Call Enumerator<Object>.Dispose, X0
	182 Compare X22, 0
	183 JumpIfEqual {142}
	184 Move X22, X31
	185 Move X21, X0
	186 Move X8, 0xB71000
	187 Move X8, [X8+16]
	188 Move X1, [X8]
	189 Add X0, X31, 32
	190 Call Enumerator<Object>.Dispose, X0
	191 Compare X22, 0
	192 JumpIfEqual {219}
	193 Move X0, X22
	194 Call 0x1C17F18
	195 Move X21, X0
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X0, X21
	198 Call 0x3EB2AD0
	199 Move X22, [X0]
	200 Call 0x3EB2AE0
	201 Move X8, 0xB71000
	202 Move X8, [X8+16]
	203 Add X0, X31, 32
	204 Move X1, [X8]
	205 Call Enumerator<Object>.Dispose, X0
	206 Compare X22, 0
	207 JumpIfEqual {106}
	208 Move X0, X22
	209 Call 0x1C17F18
	210 Move X22, X31
	211 Move X21, X0
	212 Move X8, 0xB71000
	213 Move X8, [X8+16]
	214 Move X1, [X8]
	215 Add X0, X31, 32
	216 Call Enumerator<Object>.Dispose, X0
	217 Compare X22, 0
	218 JumpIfNotEqual {221}
	219 Move X0, X21
	220 Call 0x1D2D690
	221 Move X0, X22
	222 Call 0x1C17F18
	223 Call 0x1991590

Method: System.Void RegisterSetOperation(SpatialSys.ObservableState.IStatePrimitive prim, T value, System.Int32 valueTypeID)

Disassembly:
	0x02266F00 CMP W10, W9
	0x02266F04 B.CC 0x2266F1C
	0x02266F08 LDR X8, [X8 + 0xC8]
	0x02266F0C ADD X8, X8, X9, 0x3, LSL
	0x02266F10 LDUR X8, [X8 - 0x8]
	0x02266F14 CMP X8, X1
	0x02266F18 B.EQ 0x2266F4C
	0x02266F1C MOV X0, X23
	0x02266F20 BL 0x1C171E0
	0x02266F24 LDR X8, [X23 + 0x38]
	0x02266F28 LDR X0, [X8]
	0x02266F2C LDRB W8, [X0 + 0x135]
	0x02266F30 TBNZ X8, 0x0, 0x2266F38
	0x02266F34 BL 0x1C5C684
	0x02266F38 BL 0x1C16F10
	0x02266F3C LDR X8, [X23 + 0x38]
	0x02266F40 MOV X23, X0
	0x02266F44 LDR X1, [X8 + 0x8]
	0x02266F48 BL 0x261A11C
	0x02266F4C CBZ X23, 0x2266FAC
	0x02266F50 STR X22, [X23 + 0x10]
	0x02266F54 STRB W20, [X23 + 0x18]
	0x02266F58 STR S8, [X23 + 0x1C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move W19, W3
	009 Move W22, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {18}
	014 Move X0, X4
	015 Move X23, X4
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X5, [X8+8]
	019 And W3, W22, 1
	020 Move X0, X21
	021 Move X1, X20
	022 Move W4, W19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move W2, 1
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Call 0x225BE48, X0, X1, X2, X3, X4
	031 Return 

Method: System.Void RegisterSetOperation(SpatialSys.ObservableState.IStatePrimitive prim, System.Collections.Generic.IReadOnlyList`1<T> value, System.Int32 valueTypeID)

Disassembly:
	0x022672B0 RET
	0x022672B4 BL 0x1C16F20
	0x022672B8 STR X30, [X31 - 0x20]!
	0x022672BC STP X20, X19, [X31 + 0x10]
	0x022672C0 LDR X8, [X1 + 0x38]
	0x022672C4 MOV X19, X0
	0x022672C8 CBNZ X8, 0x22672DC
	0x022672CC MOV X0, X1
	0x022672D0 MOV X20, X1
	0x022672D4 BL 0x1C5C6E0
	0x022672D8 LDR X8, [X20 + 0x38]
	0x022672DC LDR X1, [X8]
	0x022672E0 MOV X0, X19
	0x022672E4 BL 0x2267CE0
	0x022672E8 CBZ X0, 0x22672FC
	0x022672EC LDR X0, [X0 + 0x28]
	0x022672F0 LDP X20, X19, [X31 + 0x10]
	0x022672F4 LDR X30, [X31], #0x20
	0x022672F8 RET
	0x022672FC BL 0x1C16F20
	0x02267300 STR X30, [X31 - 0x20]!
	0x02267304 STP X20, X19, [X31 + 0x10]
	0x02267308 LDR X8, [X1 + 0x38]
	0x0226730C MOV X19, X0
	0x02267310 CBNZ X8, 0x2267324
	0x02267314 MOV X0, X1
	0x02267318 MOV X20, X1
	0x0226731C BL 0x1C5C6E0
	0x02267320 LDR X8, [X20 + 0x38]
	0x02267324 LDR X1, [X8]
	0x02267328 MOV X0, X19
	0x0226732C BL 0x2267FA8
	0x02267330 CBZ X0, 0x2267344

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X8, [X4+56]
	009 Move W21, W3
	010 Move X20, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {19}
	015 Move X0, X4
	016 Move X23, X4
	017 Call 0x1C5D6E0
	018 Move X8, [X23+56]
	019 Move X1, [X8+8]
	020 Move W8, 1
	021 Add X9, X31, 44
	022 Add X10, X31, 40
	023 Move X0, [X1]
	024 Move [X31+44], W8
	025 Move [X31+40], W21
	026 Move [X31+8], X22
	027 Move [X31+16], X9
	028 Move [X31+24], X20
	029 Move [X31+32], X10
	030 Move X8, [X1+16]
	031 Add X3, X31, 8
	032 Add X4, X31, 40
	033 Move X2, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Move X22, [X31+64]
	038 Move X21, [X31+72]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Add X31, X31, 96
	042 Return 

Method: System.Void RegisterSetSyncRateOperation(SpatialSys.ObservableState.IStatePrimitive prim, System.Byte syncRate)

Disassembly:
	0x035C88C8 MOV X0, X20
	0x035C88CC MOV W1, W31
	0x035C88D0 BLR X8
	0x035C88D4 B 0x35C885C
	0x035C88D8 LDR X1, [X27]
	0x035C88DC ADD X0, X31, 0x60
	0x035C88E0 BL 0x2BC3C60
	0x035C88E4 LDR X0, [X19 + 0x40]
	0x035C88E8 CBZ X0, 0x35C8A60
	0x035C88EC LDR X1, [X26]
	0x035C88F0 ADD X8, X31, 0x8
	0x035C88F4 BL 0x25F7F38
	0x035C88F8 LDUR V0, [X31 + 0x8]
	0x035C88FC LDUR V1, [X31 + 0x18]
	0x035C8900 LDR X8, [X31 + 0x28]
	0x035C8904 STP V0, V1, [X31 + 0x30]
	0x035C8908 STR X8, [X31 + 0x50]
	0x035C890C LDR X0, [X23]
	0x035C8910 LDR W8, [X0 + 0xE0]
	0x035C8914 CBNZ W8, 0x35C891C
	0x035C8918 BL 0x1C16DFC
	0x035C891C LDR X1, [X24]
	0x035C8920 ADD X0, X31, 0x30
	0x035C8924 BL 0x2BC4DE0
	0x035C8928 TBZ X0, 0x0, 0x35C899C
	0x035C892C LDR X0, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xE19000
	008 Move X22, 0xB71000
	009 Move W8, [X23+443]
	010 Move X22, [X22+56]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB71000
	019 Move X0, [X0+56]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+443], W8
	023 Move W4, [X21+88]
	024 Move X5, [X22]
	025 Move X0, X21
	026 Move X1, X20
	027 Move W3, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move W2, 7
	033 Move X30, [X31+48]
	034 Move X23, [X31+56]
	035 Call StateObservationContext.RegisterChange, X0, X1, X2, X3, X4
	036 Return 

Method: System.Void RegisterMathAddOperation(SpatialSys.ObservableState.IStatePrimitive prim, T value, System.Int32 valueTypeID)

Disassembly:
	0x02263D88 MOV X1, X0
	0x02263D8C MOV X0, X20
	0x02263D90 BL 0x1C16E00
	0x02263D94 CBZ X0, 0x2263FA0
	0x02263D98 LDR X8, [X19 + 0x38]
	0x02263D9C MOV X22, X0
	0x02263DA0 LDR X1, [X8]
	0x02263DA4 LDRB W8, [X1 + 0x135]
	0x02263DA8 TBNZ X8, 0x0, 0x2263DB8
	0x02263DAC MOV X0, X1
	0x02263DB0 BL 0x1C5C684
	0x02263DB4 MOV X1, X0
	0x02263DB8 LDR X8, [X22]
	0x02263DBC LDRH W9, [X8 + 0x12E]
	0x02263DC0 CBZ X9, 0x2263DE4
	0x02263DC4 LDR X10, [X8 + 0xB0]
	0x02263DC8 ADD X10, X10, 0x8
	0x02263DCC LDUR X11, [X10 - 0x8]
	0x02263DD0 CMP X11, X1
	0x02263DD4 B.EQ 0x2263DF4
	0x02263DD8 SUBS X9, X9, 0x1
	0x02263DDC ADD X10, X10, 0x10
	0x02263DE0 B.NE 0x2263DCC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move W19, W3
	009 Move W22, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {18}
	014 Move X0, X4
	015 Move X23, X4
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X5, [X8+8]
	019 And W3, W22, 1
	020 Move X0, X21
	021 Move X1, X20
	022 Move W4, W19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move W2, 8
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Call 0x225BE48, X0, X1, X2, X3, X4
	031 Return 

Method: System.Void RegisterMathMultiplyOperation(SpatialSys.ObservableState.IStatePrimitive prim, T value, System.Int32 valueTypeID)

Disassembly:
	0x02264138 BL 0x1C16CF4
	0x0226413C ADRP X0, 0x1EB8000
	0x02264140 LDR X0, [X0 + 0x570]
	0x02264144 BL 0x1C16CF4
	0x02264148 ADRP X0, 0x1EB8000
	0x0226414C LDR X0, [X0 + 0x588]
	0x02264150 BL 0x1C16CF4
	0x02264154 ADRP X0, 0x1EB8000
	0x02264158 LDR X0, [X0 + 0x590]
	0x0226415C BL 0x1C16CF4
	0x02264160 LDR X8, [X19 + 0x38]
	0x02264164 CBNZ X8, 0x2264174
	0x02264168 MOV X0, X19
	0x0226416C BL 0x1C5C6E0
	0x02264170 LDR X8, [X19 + 0x38]
	0x02264174 STP X31, X31, [X31 + 0x40]
	0x02264178 STP X31, X31, [X31 + 0x20]
	0x0226417C STR X31, [X31 + 0x30]
	0x02264180 LDR X1, [X8]
	0x02264184 LDRB W8, [X1 + 0x135]
	0x02264188 TBNZ X8, 0x0, 0x2264198
	0x0226418C MOV X0, X1
	0x02264190 BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move W19, W3
	009 Move W22, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {18}
	014 Move X0, X4
	015 Move X23, X4
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X5, [X8+8]
	019 And W3, W22, 1
	020 Move X0, X21
	021 Move X1, X20
	022 Move W4, W19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move W2, 9
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Call 0x225BE48, X0, X1, X2, X3, X4
	031 Return 

Method: System.Void RegisterAddOperation(SpatialSys.ObservableState.IStateDictionary dict, TKey key, System.Int32 keyTypeID)

Disassembly:
	0x0225BA20 LDR X8, [X21]
	0x0225BA24 STR X8, [X0]
	0x0225BA28 ADRP X1, 0x1C59000
	0x0225BA2C ADD X1, X1, 0xE58
	0x0225BA30 MOV X2, X31
	0x0225BA34 BL 0x3EB1B00
	0x0225BA38 B 0x225BA3C
	0x0225BA3C MOV X21, X1
	0x0225BA40 MOV X22, X0
	0x0225BA44 BL 0x3EB1AE0
	0x0225BA48 B 0x225BB64
	0x0225BA4C B 0x225BB5C
	0x0225BA50 B 0x225BB5C
	0x0225BA54 B 0x225BB5C
	0x0225BA58 B 0x225BB5C
	0x0225BA5C B 0x225BB5C
	0x0225BA60 B 0x225BB5C
	0x0225BA64 B 0x225BB5C
	0x0225BA68 B 0x225BB5C
	0x0225BA6C B 0x225BB5C
	0x0225BA70 B 0x225BB5C
	0x0225BA74 B 0x225BB5C
	0x0225BA78 B 0x225BB5C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move W19, W3
	009 Move W20, W2
	010 Move X21, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {18}
	014 Move X0, X4
	015 Move X23, X4
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X5, [X8+8]
	019 Move X0, X22
	020 Move X1, X21
	021 Move W3, W20
	022 Move W4, W19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move W2, 2
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Call StateObservationContext.RegisterChange, X0, X1, X2, X3, X4
	031 Return 

Method: System.Void RegisterAddOperation(SpatialSys.ObservableState.IStatePrimitiveSet set, TKey value, System.Int32 valueTypeID)

Disassembly:
	0x0225B888 CBZ X22, 0x225B928
	0x0225B88C LDR X0, [X22 + 0x48]
	0x0225B890 CBZ X0, 0x225B92C
	0x0225B894 LDR X2, [X21]
	0x0225B898 MOV X1, X19
	0x0225B89C BL 0x2DBE67C
	0x0225B8A0 LDR X0, [X22 + 0x50]
	0x0225B8A4 CBZ X0, 0x225B924
	0x0225B8A8 LDR X2, [X21]
	0x0225B8AC MOV X1, X19
	0x0225B8B0 BL 0x2DBE67C
	0x0225B8B4 B 0x225B874
	0x0225B8B8 ADRP X8, 0x1EC1000
	0x0225B8BC LDR X8, [X8 + 0x548]
	0x0225B8C0 ADD X0, X31, 0xA0
	0x0225B8C4 LDR X1, [X8]
	0x0225B8C8 BL 0x2BC3C60
	0x0225B8CC LDR X0, [X20 + 0x28]
	0x0225B8D0 CBZ X0, 0x225B920
	0x0225B8D4 ADRP X8, 0x1EC1000
	0x0225B8D8 LDR X8, [X8 + 0x538]
	0x0225B8DC MOV X1, X19
	0x0225B8E0 LDR X2, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move W19, W3
	009 Move W22, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {18}
	014 Move X0, X4
	015 Move X23, X4
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X5, [X8+8]
	019 And W3, W22, 1
	020 Move X0, X21
	021 Move X1, X20
	022 Move W4, W19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move W2, 2
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Call 0x225BE48, X0, X1, X2, X3, X4
	031 Return 

Method: System.Void RegisterRemoveOperation(SpatialSys.ObservableState.IStateDictionary dict, TKey key, System.Int32 keyTypeID)

Disassembly:
	0x02266AD8 BL 0x301BCCC
	0x02266ADC CBZ X0, 0x2266B0C
	0x02266AE0 ADRP X8, 0x1EB6000
	0x02266AE4 LDR X8, [X8 + 0x628]
	0x02266AE8 MOV X1, X24
	0x02266AEC LDR X2, [X8]
	0x02266AF0 BL 0x2DBEF30
	0x02266AF4 MOV X0, X24
	0x02266AF8 LDP X20, X19, [X31 + 0x30]
	0x02266AFC LDP X22, X21, [X31 + 0x20]
	0x02266B00 LDP X24, X23, [X31 + 0x10]
	0x02266B04 LDR X30, [X31], #0x40
	0x02266B08 RET
	0x02266B0C BL 0x1C16F20
	0x02266B10 STR X30, [X31 - 0x40]!
	0x02266B14 STP X24, X23, [X31 + 0x10]
	0x02266B18 STP X22, X21, [X31 + 0x20]
	0x02266B1C STP X20, X19, [X31 + 0x30]
	0x02266B20 LDR X8, [X5 + 0x38]
	0x02266B24 MOV X24, X5
	0x02266B28 MOV W19, W4
	0x02266B2C MOV W20, W3
	0x02266B30 MOV W21, W2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move W19, W3
	009 Move W20, W2
	010 Move X21, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {18}
	014 Move X0, X4
	015 Move X23, X4
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X5, [X8+8]
	019 Move X0, X22
	020 Move X1, X21
	021 Move W3, W20
	022 Move W4, W19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move W2, 3
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Call StateObservationContext.RegisterChange, X0, X1, X2, X3, X4
	031 Return 

Method: System.Void RegisterRemoveOperation(SpatialSys.ObservableState.IStatePrimitiveSet set, TKey value, System.Int32 valueTypeID)

Disassembly:
	0x02266940 ADRP X8, 0x1EB6000
	0x02266944 LDR X8, [X8 + 0x630]
	0x02266948 MOV W1, W19
	0x0226694C LDR X2, [X8]
	0x02266950 BL 0x301BCCC
	0x02266954 CBZ X0, 0x2266984
	0x02266958 ADRP X8, 0x1EB6000
	0x0226695C LDR X8, [X8 + 0x628]
	0x02266960 MOV X1, X24
	0x02266964 LDR X2, [X8]
	0x02266968 BL 0x2DBEF30
	0x0226696C MOV X0, X24
	0x02266970 LDP X20, X19, [X31 + 0x30]
	0x02266974 LDP X22, X21, [X31 + 0x20]
	0x02266978 LDP X24, X23, [X31 + 0x10]
	0x0226697C LDR X30, [X31], #0x40
	0x02266980 RET
	0x02266984 BL 0x1C16F20
	0x02266988 STR X30, [X31 - 0x40]!
	0x0226698C STP X24, X23, [X31 + 0x10]
	0x02266990 STP X22, X21, [X31 + 0x20]
	0x02266994 STP X20, X19, [X31 + 0x30]
	0x02266998 LDR X8, [X5 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move W19, W3
	009 Move W22, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {18}
	014 Move X0, X4
	015 Move X23, X4
	016 Call 0x1C5D6E0
	017 Move X8, [X23+56]
	018 Move X5, [X8+8]
	019 And W3, W22, 1
	020 Move X0, X21
	021 Move X1, X20
	022 Move W4, W19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move W2, 3
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 Call 0x225BE48, X0, X1, X2, X3, X4
	031 Return 

Method: System.Void RegisterInsertOperation(SpatialSys.ObservableState.IStateList list, System.Int32 index)

Disassembly:
	0x035C8930 LDR W8, [X0 + 0xE0]
	0x035C8934 CBNZ W8, 0x35C893C
	0x035C8938 BL 0x1C16DFC
	0x035C893C LDR X1, [X25]
	0x035C8940 ADD X0, X31, 0x30
	0x035C8944 BL 0x2BC501C
	0x035C8948 MOV X20, X0
	0x035C894C CBZ X0, 0x35C8A58
	0x035C8950 LDR X8, [X20 + 0x58]
	0x035C8954 CBZ X8, 0x35C8A5C
	0x035C8958 LDP W2, W9, [X8 + 0x18]
	0x035C895C ADD W9, W9, 0x1
	0x035C8960 CMP W2, 0x1
	0x035C8964 STP W31, W9, [X8 + 0x18]
	0x035C8968 B.LT 0x35C897C
	0x035C896C LDR X0, [X8 + 0x10]
	0x035C8970 MOV W1, W31
	0x035C8974 MOV X3, X31
	0x035C8978 BL 0x339FA34
	0x035C897C LDR X8, [X20 + 0x48]
	0x035C8980 CBZ X8, 0x35C8A54
	0x035C8984 LDR W8, [X8 + 0x20]
	0x035C8988 CBNZ W8, 0x35C890C
	0x035C898C LDR X1, [X20 + 0x10]
	0x035C8990 MOV X0, X19
	0x035C8994 BL 0x35C7594

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xE19000
	008 Move X22, 0xB71000
	009 Move W8, [X23+444]
	010 Move X22, [X22+64]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB71000
	019 Move X0, [X0+64]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+444], W8
	023 Move W4, [X21+92]
	024 Move X5, [X22]
	025 Move X0, X21
	026 Move X1, X20
	027 Move W3, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move W2, 4
	033 Move X30, [X31+48]
	034 Move X23, [X31+56]
	035 Call StateObservationContext.RegisterChange, X0, X1, X2, X3, X4
	036 Return 

Method: System.Void RegisterDeleteOperation(SpatialSys.ObservableState.IStateList list, System.Int32 index)

Disassembly:
	0x035C8998 B 0x35C890C
	0x035C899C MOV X20, X31
	0x035C89A0 MOVZ W24, 0x7
	0x035C89A4 LDR X0, [X23]
	0x035C89A8 LDR W8, [X0 + 0xE0]
	0x035C89AC CBNZ W8, 0x35C89B4
	0x035C89B0 BL 0x1C16DFC
	0x035C89B4 LDR X1, [X21]
	0x035C89B8 ADD X0, X31, 0x30
	0x035C89BC BL 0x2BC5018
	0x035C89C0 CBNZ X20, 0x35C8B08
	0x035C89C4 CMP W24, 0x7
	0x035C89C8 B.EQ 0x35C89D0
	0x035C89CC CBNZ W24, 0x35C8A30
	0x035C89D0 LDR X0, [X19 + 0x20]
	0x035C89D4 CBZ X0, 0x35C8A60
	0x035C89D8 LDR X1, [X22]
	0x035C89DC BL 0x2DBE450
	0x035C89E0 LDR X8, [X19 + 0x18]
	0x035C89E4 CBZ X8, 0x35C8A60
	0x035C89E8 LDP W2, W9, [X8 + 0x18]
	0x035C89EC ADD W9, W9, 0x1
	0x035C89F0 CMP W2, 0x1
	0x035C89F4 STP W31, W9, [X8 + 0x18]
	0x035C89F8 B.LT 0x35C8A0C
	0x035C89FC LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xE19000
	008 Move X22, 0xB71000
	009 Move W8, [X23+445]
	010 Move X22, [X22+64]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB71000
	019 Move X0, [X0+64]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+445], W8
	023 Move W4, [X21+92]
	024 Move X5, [X22]
	025 Move X0, X21
	026 Move X1, X20
	027 Move W3, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move W2, 5
	033 Move X30, [X31+48]
	034 Move X23, [X31+56]
	035 Call StateObservationContext.RegisterChange, X0, X1, X2, X3, X4
	036 Return 

Method: System.Void RegisterDisposeOperation(SpatialSys.ObservableState.IStateObject state)

Disassembly:
	0x035C8A00 MOV W1, W31
	0x035C8A04 MOV X3, X31
	0x035C8A08 BL 0x339FA34
	0x035C8A0C LDR X0, [X19 + 0x40]
	0x035C8A10 CBZ X0, 0x35C8A60
	0x035C8A14 LDR X8, [X0]
	0x035C8A18 LDR X9, [X8 + 0x2D8]
	0x035C8A1C LDR X1, [X8 + 0x2E0]
	0x035C8A20 BLR X9
	0x035C8A24 LDR X0, [X19 + 0x50]
	0x035C8A28 CBZ X0, 0x35C8A60
	0x035C8A2C BL 0x35C8B40
	0x035C8A30 LDP X20, X19, [X31 + 0xD0]
	0x035C8A34 LDP X22, X21, [X31 + 0xC0]
	0x035C8A38 LDP X24, X23, [X31 + 0xB0]
	0x035C8A3C LDP X26, X25, [X31 + 0xA0]
	0x035C8A40 LDP X28, X27, [X31 + 0x90]
	0x035C8A44 LDP X29, X30, [X31 + 0x80]
	0x035C8A48 ADD X31, X31, 0xE0
	0x035C8A4C RET
	0x035C8A50 BL 0x1C16F20
	0x035C8A54 BL 0x1C16F20
	0x035C8A58 BL 0x1C16F20
	0x035C8A5C BL 0x1C16F20
	0x035C8A60 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xE19000
	007 Move X21, 0xB71000
	008 Move W8, [X22+446]
	009 Move X21, [X21+64]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB71000
	017 Move X0, [X0+64]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+446], W8
	021 Move W4, [X20+92]
	022 Move X5, [X21]
	023 Move X0, X20
	024 Move X1, X19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move W2, 6
	030 Move W3, W31
	031 Move X30, [X31+48]
	032 Call StateObservationContext.RegisterChange, X0, X1, X2, X3, X4
	033 Return 

Method: System.Void RegisterChange(SpatialSys.ObservableState.IStateObject state, SpatialSys.ObservableState.OperationType opType, T param1, System.Int32 param1TypeID)

Disassembly:
	0x0225BE48 BL 0x1C5C788
	0x0225BE4C B 0x225BE60
	0x0225BE50 LDR W9, [X10]
	0x0225BE54 ADD W9, W9, 0xF
	0x0225BE58 ADD X8, X8, W9, 0x4, SXTW
	0x0225BE5C ADD X0, X8, 0x138
	0x0225BE60 LDP X8, X1, [X0]
	0x0225BE64 MOV X0, X19
	0x0225BE68 BLR X8
	0x0225BE6C TBZ X0, 0x0, 0x225BE84
	0x0225BE70 AND W8, W26, 0xFF
	0x0225BE74 CMP W8, 0x6
	0x0225BE78 B.EQ 0x225BE84
	0x0225BE7C LDRB W8, [X20 + 0x60]
	0x0225BE80 CBZ W8, 0x225C72C
	0x0225BE84 AND W8, W26, 0xFF
	0x0225BE88 CMP W8, 0x4
	0x0225BE8C B.EQ 0x225BEA4
	0x0225BE90 CMP W8, 0x2
	0x0225BE94 B.NE 0x225BED4
	0x0225BE98 ADRP X8, 0x1EC1000
	0x0225BE9C LDR X8, [X8 + 0x5A0]
	0x0225BEA0 B 0x225BEAC
	0x0225BEA4 ADRP X8, 0x1EC1000
	0x0225BEA8 LDR X8, [X8 + 0x5A8]
	0x0225BEAC LDR X1, [X8]
	0x0225BEB0 MOV X0, X19
	0x0225BEB4 BL 0x1C16E00
	0x0225BEB8 CBZ X0, 0x225BED4
	0x0225BEBC LDR X8, [X24 + 0x38]
	0x0225BEC0 MOV X0, X20
	0x0225BEC4 MOV X1, X19
	0x0225BEC8 MOV W2, W25
	0x0225BECC LDR X3, [X8 + 0x8]
	0x0225BED0 BL 0x22638DC
	0x0225BED4 LDR X0, [X20 + 0x20]
	0x0225BED8 CBZ X0, 0x225C71C
	0x0225BEDC ADRP X8, 0x1EC1000
	0x0225BEE0 LDR X8, [X8 + 0x580]
	0x0225BEE4 MOV X1, X19
	0x0225BEE8 LDR X2, [X8]
	0x0225BEEC BL 0x2DBEF30
	0x0225BEF0 LDR X0, [X20 + 0x50]
	0x0225BEF4 CBZ X0, 0x225C71C
	0x0225BEF8 LDR X8, [X24 + 0x38]
	0x0225BEFC MOV X1, X19
	0x0225BF00 MOV W2, W26
	0x0225BF04 MOV W3, W25
	0x0225BF08 LDR X5, [X8 + 0x10]
	0x0225BF0C MOV W4, W22
	0x0225BF10 BL 0x22664C4
	0x0225BF14 LDR X8, [X20 + 0x18]
	0x0225BF18 CBZ X8, 0x225C71C
	0x0225BF1C ADRP X28, 0x1EC1000
	0x0225BF20 LDR X28, [X28 + 0x5B8]
	0x0225BF24 LDR W11, [X8 + 0x1C]
	0x0225BF28 LDR X9, [X8 + 0x10]
	0x0225BF2C LDR X10, [X28]
	0x0225BF30 ADD W11, W11, 0x1
	0x0225BF34 STR W11, [X8 + 0x1C]
	0x0225BF38 CBZ X9, 0x225C71C
	0x0225BF3C LDRSW X11, [X8 + 0x18]
	0x0225BF40 LDR W12, [X9 + 0x18]
	0x0225BF44 MOV X23, X0
	0x0225BF48 CMP W11, W12
	0x0225BF4C B.CS 0x225BF64
	0x0225BF50 ADD W10, W11, 0x1
	0x0225BF54 ADD X9, X9, X11, 0x3, LSL
	0x0225BF58 STR W10, [X8 + 0x18]
	0x0225BF5C STR X23, [X9 + 0x20]
	0x0225BF60 B 0x225BF7C
	0x0225BF64 LDR X9, [X10 + 0x20]
	0x0225BF68 MOV X0, X8
	0x0225BF6C MOV X1, X23
	0x0225BF70 LDR X9, [X9 + 0xC0]
	0x0225BF74 LDR X2, [X9 + 0x70]
	0x0225BF78 BL 0x301BF90
	0x0225BF7C LDR X0, [X20 + 0x28]
	0x0225BF80 STR W26, [X31 + 0x3C]
	0x0225BF84 CBZ X0, 0x225C71C
	0x0225BF88 ADRP X8, 0x1EC1000
	0x0225BF8C LDR X8, [X8 + 0x540]
	0x0225BF90 ADD X2, X31, 0xB8
	0x0225BF94 MOV X1, X19
	0x0225BF98 LDR X3, [X8]
	0x0225BF9C BL 0x2AA6B2C
	0x0225BFA0 TBZ X0, 0x0, 0x225C6E4
	0x0225BFA4 LDR X0, [X31 + 0xB8]
	0x0225BFA8 CBZ X0, 0x225C71C
	0x0225BFAC ADRP X8, 0x1EC1000
	0x0225BFB0 LDR X8, [X8 + 0x590]
	0x0225BFB4 LDR X1, [X8]
	0x0225BFB8 ADD X8, X31, 0x48
	0x0225BFBC BL 0x2DBE924
	0x0225BFC0 LDUR V0, [X31 + 0x48]
	0x0225BFC4 LDR X8, [X31 + 0x58]
	0x0225BFC8 STR X31, [X31 + 0x40]
	0x0225BFCC ADRP X29, 0x1EC1000
	0x0225BFD0 ADRP X22, 0x1EC1000
	0x0225BFD4 LDR X29, [X29 + 0x560]
	0x0225BFD8 LDR X22, [X22 + 0x5C0]
	0x0225BFDC STR V0, [X31 + 0xA]
	0x0225BFE0 STR X8, [X31 + 0xB0]
	0x0225BFE4 ADRP X21, 0x1EC1000
	0x0225BFE8 LDR X21, [X21 + 0x588]
	0x0225BFEC LDR X1, [X29]
	0x0225BFF0 ADD X0, X31, 0xA0
	0x0225BFF4 BL 0x2BC3C64
	0x0225BFF8 TBZ X0, 0x0, 0x225C0F4
	0x0225BFFC LDR X26, [X31 + 0xB0]
	0x0225C000 CBZ X26, 0x225C704
	0x0225C004 LDRB W8, [X26 + 0x28]
	0x0225C008 CBZ W8, 0x225C050
	0x0225C00C LDR X0, [X26 + 0x48]
	0x0225C010 CBZ X0, 0x225C718
	0x0225C014 LDR X2, [X21]
	0x0225C018 MOV X1, X19
	0x0225C01C BL 0x2DBE4B0
	0x0225C020 TBZ X0, 0x0, 0x225C050
	0x0225C024 LDR X27, [X26 + 0x30]
	0x0225C028 STRB W25, [X31 + 0x48]
	0x0225C02C LDR X8, [X24 + 0x38]
	0x0225C030 LDR X0, [X8]
	0x0225C034 ADD X1, X31, 0x48
	0x0225C038 BL 0x1C16E04
	0x0225C03C MOV X1, X0
	0x0225C040 MOV X0, X27
	0x0225C044 MOV X2, X31
	0x0225C048 BL 0x33CB4B0
	0x0225C04C TBZ X0, 0x0, 0x225BFEC
	0x0225C050 LDRB W8, [X26 + 0x38]
	0x0225C054 CBNZ W8, 0x225C0C8
	0x0225C058 LDR X0, [X26 + 0x58]
	0x0225C05C CBZ X0, 0x225C70C
	0x0225C060 LDR W10, [X0 + 0x1C]
	0x0225C064 LDR X8, [X0 + 0x10]
	0x0225C068 LDR X9, [X28]
	0x0225C06C ADD W10, W10, 0x1
	0x0225C070 STR W10, [X0 + 0x1C]
	0x0225C074 CBZ X8, 0x225C710
	0x0225C078 LDRSW X10, [X0 + 0x18]
	0x0225C07C LDR W11, [X8 + 0x18]
	0x0225C080 CMP W10, W11
	0x0225C084 B.CS 0x225C09C
	0x0225C088 ADD W9, W10, 0x1
	0x0225C08C ADD X8, X8, X10, 0x3, LSL
	0x0225C090 STR W9, [X0 + 0x18]
	0x0225C094 STR X23, [X8 + 0x20]
	0x0225C098 B 0x225C0B0
	0x0225C09C LDR X8, [X9 + 0x20]
	0x0225C0A0 LDR X8, [X8 + 0xC0]
	0x0225C0A4 LDR X2, [X8 + 0x70]
	0x0225C0A8 MOV X1, X23
	0x0225C0AC BL 0x301BF90
	0x0225C0B0 LDR X0, [X20 + 0x40]
	0x0225C0B4 CBZ X0, 0x225C708
	0x0225C0B8 LDR X2, [X22]
	0x0225C0BC MOV X1, X26
	0x0225C0C0 BL 0x25F7234
	0x0225C0C4 B 0x225BFEC
	0x0225C0C8 LDR X0, [X31 + 0x40]
	0x0225C0CC CBNZ X0, 0x225C0E0
	0x0225C0D0 MOV X0, X20
	0x0225C0D4 MOV X1, X31
	0x0225C0D8 BL 0x35C7A64
	0x0225C0DC CBZ X0, 0x225C7E8
	0x0225C0E0 LDR X2, [X22]
	0x0225C0E4 MOV X1, X26
	0x0225C0E8 STR X0, [X31 + 0x40]
	0x0225C0EC BL 0x25F7234
	0x0225C0F0 B 0x225BFEC
	0x0225C0F4 ADRP X8, 0x1EC0000
	0x0225C0F8 LDR X8, [X8 + 0x548]
	0x0225C0FC ADD X0, X31, 0xA0
	0x0225C100 LDR X1, [X8]
	0x0225C104 BL 0x2BC3C60
	0x0225C108 LDR X22, [X31 + 0x40]
	0x0225C10C CBZ X22, 0x225C62C
	0x0225C110 LDRB W9, [X20 + 0x10]
	0x0225C114 LDRB W8, [X20 + 0x60]
	0x0225C118 STRB W31, [X20 + 0x10]
	0x0225C11C MOVZ W1, 0x1
	0x0225C120 STP W8, W9, [X31 + 0x34]
	0x0225C124 MOVZ W8, 0x1
	0x0225C128 STRB W8, [X20 + 0x60]
	0x0225C12C ADRP X8, 0x1EC0000
	0x0225C130 LDR X8, [X8 + 0x5B0]
	0x0225C134 LDR X0, [X8]
	0x0225C138 BL 0x1C16D6C
	0x0225C13C CBZ X0, 0x225C71C
	0x0225C140 MOV X24, X0
	0x0225C144 CBZ X23, 0x225C15C
	0x0225C148 LDR X8, [X24]
	0x0225C14C MOV X0, X23
	0x0225C150 LDR X1, [X8 + 0x40]
	0x0225C154 BL 0x1C16E00
	0x0225C158 CBZ X0, 0x225C7DC
	0x0225C15C LDR W8, [X24 + 0x18]
	0x0225C160 CBZ W8, 0x225C7D0
	0x0225C164 STR X23, [X24 + 0x20]
	0x0225C168 ADRP X8, 0x1EC0000
	0x0225C16C LDR X8, [X8 + 0x5C8]
	0x0225C170 MOV X0, X22
	0x0225C174 LDR X1, [X8]
	0x0225C178 ADD X8, X31, 0x48
	0x0225C17C BL 0x25F7F38
	0x0225C180 STR X31, [X31 + 0x28]
	0x0225C184 LDUR V0, [X31 + 0x48]
	0x0225C188 LDUR V1, [X31 + 0x58]
	0x0225C18C LDR X8, [X31 + 0x68]
	0x0225C190 ADRP X25, 0x1EC0000
	0x0225C194 ADRP X26, 0x1EC0000
	0x0225C198 ADRP X27, 0x1EC0000
	0x0225C19C LDR X25, [X25 + 0x578]
	0x0225C1A0 LDR X26, [X26 + 0x558]
	0x0225C1A4 LDR X27, [X27 + 0x568]
	0x0225C1A8 STP V0, V1, [X31 + 0x70]
	0x0225C1AC STR X8, [X31 + 0x90]
	0x0225C1B0 LDR X0, [X25]
	0x0225C1B4 LDR W8, [X0 + 0xE0]
	0x0225C1B8 CBNZ W8, 0x225C1C0
	0x0225C1BC BL 0x1C16DFC
	0x0225C1C0 LDR X1, [X26]
	0x0225C1C4 ADD X0, X31, 0x70
	0x0225C1C8 BL 0x2BC4DE0
	0x0225C1CC TBZ X0, 0x0, 0x225C5D0
	0x0225C1D0 LDR X0, [X25]
	0x0225C1D4 LDR W8, [X0 + 0xE0]
	0x0225C1D8 CBNZ W8, 0x225C1E0
	0x0225C1DC BL 0x1C16DFC
	0x0225C1E0 LDR X1, [X27]
	0x0225C1E4 ADD X0, X31, 0x70
	0x0225C1E8 BL 0x2BC501C
	0x0225C1EC MOV X28, X0
	0x0225C1F0 CBZ X0, 0x225C714
	0x0225C1F4 LDRB W8, [X28 + 0x60]
	0x0225C1F8 CBNZ W8, 0x225C1B0
	0x0225C1FC LDR X21, [X28 + 0x10]
	0x0225C200 STP X31, X31, [X31 + 0x48]
	0x0225C204 ADD X0, X31, 0x48
	0x0225C208 MOV W1, W31
	0x0225C20C MOV X2, X24
	0x0225C210 MOV X3, X31
	0x0225C214 BL 0x35C52E0
	0x0225C218 CBZ X21, 0x225C234
	0x0225C21C LDP X1, X2, [X31 + 0x48]
	0x0225C220 LDR X0, [X21 + 0x40]
	0x0225C224 LDR X8, [X21 + 0x18]
	0x0225C228 LDR X3, [X21 + 0x28]
	0x0225C22C BLR X8
	0x0225C230 B 0x225C1B0
	0x0225C234 BL 0x1C16F20
	0x0225C238 B 0x225C7EC
	0x0225C23C B 0x225C240
	0x0225C240 MOV X21, X1
	0x0225C244 MOV X22, X0
	0x0225C248 CMP W21, 0x1
	0x0225C24C B.NE 0x225C960
	0x0225C250 MOV X0, X22
	0x0225C254 BL 0x3EB1AD0
	0x0225C258 MOV X21, X0
	0x0225C25C ADRP X0, 0x1E97000
	0x0225C260 LDR X0, [X0 + 0x7D0]
	0x0225C264 BL 0x1C16D08
	0x0225C268 LDR X8, [X21]
	0x0225C26C LDR X1, [X8]
	0x0225C270 BL 0x1C17270
	0x0225C274 TBZ X0, 0x0, 0x225C814
	0x0225C278 LDR X21, [X21]
	0x0225C27C BL 0x3EB1AE0
	0x0225C280 LDR X8, [X20 + 0x70]
	0x0225C284 LDR X9, [X31 + 0x28]
	0x0225C288 LDR X22, [X31 + 0x40]
	0x0225C28C CMP X8, 0x0
	0x0225C290 CSEL X9, X9, X8, EQ
	0x0225C294 STR X9, [X31 + 0x28]
	0x0225C298 CBZ X8, 0x225C1B0
	0x0225C29C LDR X22, [X28 + 0x40]
	0x0225C2A0 CBZ X22, 0x225C7EC
	0x0225C2A4 ADRP X0, 0x1E98000
	0x0225C2A8 LDR X0, [X0 + 0x1B0]
	0x0225C2AC BL 0x1C16D08
	0x0225C2B0 MOV X1, X0
	0x0225C2B4 LDR X8, [X22]
	0x0225C2B8 LDRH W9, [X8 + 0x12E]
	0x0225C2BC CBZ X9, 0x225C2E0
	0x0225C2C0 LDR X10, [X8 + 0xB0]
	0x0225C2C4 ADD X10, X10, 0x8
	0x0225C2C8 LDUR X11, [X10 - 0x8]
	0x0225C2CC CMP X11, X1
	0x0225C2D0 B.EQ 0x225C2F0
	0x0225C2D4 SUBS X9, X9, 0x1
	0x0225C2D8 ADD X10, X10, 0x10
	0x0225C2DC B.NE 0x225C2C8
	0x0225C2E0 MOVZ W2, 0x1
	0x0225C2E4 MOV X0, X22
	0x0225C2E8 BL 0x1C5C788
	0x0225C2EC B 0x225C300
	0x0225C2F0 LDR W9, [X10]
	0x0225C2F4 ADD W9, W9, 0x1
	0x0225C2F8 ADD X8, X8, W9, 0x4, SXTW
	0x0225C2FC ADD X0, X8, 0x138
	0x0225C300 LDP X8, X1, [X0]
	0x0225C304 MOV X0, X22
	0x0225C308 BLR X8
	0x0225C30C MOV X22, X0
	0x0225C310 ADRP X0, 0x1EC0000
	0x0225C314 LDR X0, [X0 + 0x5D0]
	0x0225C318 BL 0x1C16D08
	0x0225C31C MOV X1, X22
	0x0225C320 MOV X2, X31
	0x0225C324 BL 0x321B938
	0x0225C328 STR X0, [X31 + 0x10]
	0x0225C32C ADRP X0, 0x1E97000
	0x0225C330 LDR X0, [X0 + 0x720]
	0x0225C334 BL 0x1C16D08
	0x0225C338 BL 0x1C16F10
	0x0225C33C STR X0, [X31 + 0x20]
	0x0225C340 ADRP X0, 0x1E97000
	0x0225C344 LDR X0, [X0 + 0x718]
	0x0225C348 BL 0x1C16D08
	0x0225C34C MOV X1, X0
	0x0225C350 LDR X0, [X31 + 0x20]
	0x0225C354 BL 0x2AA4804
	0x0225C358 CBZ X23, 0x225C7F0
	0x0225C35C LDR X8, [X23]
	0x0225C360 LDP X9, X1, [X8 + 0x168]
	0x0225C364 MOV X0, X23
	0x0225C368 BLR X9
	0x0225C36C LDR X8, [X31 + 0x20]
	0x0225C370 CBZ X8, 0x225C7F4
	0x0225C374 MOV X22, X0
	0x0225C378 ADRP X0, 0x1EC0000
	0x0225C37C LDR X0, [X0 + 0x5D8]
	0x0225C380 BL 0x1C16D08
	0x0225C384 STR X0, [X31 + 0x18]
	0x0225C388 ADRP X0, 0x1E97000
	0x0225C38C LDR X0, [X0 + 0x710]
	0x0225C390 BL 0x1C16D08
	0x0225C394 MOV X3, X0
	0x0225C398 LDP X1, X0, [X31 + 0x18]
	0x0225C39C MOV X2, X22
	0x0225C3A0 BL 0x2AA5098
	0x0225C3A4 LDR X8, [X28 + 0x40]
	0x0225C3A8 CBZ X8, 0x225C7F8
	0x0225C3AC MOV X22, X8
	0x0225C3B0 ADRP X0, 0x1E98000
	0x0225C3B4 LDR X0, [X0 + 0x1B0]
	0x0225C3B8 BL 0x1C16D08
	0x0225C3BC MOV X1, X0
	0x0225C3C0 LDR X8, [X22]
	0x0225C3C4 LDRH W9, [X8 + 0x12E]
	0x0225C3C8 CBZ X9, 0x225C3EC
	0x0225C3CC LDR X10, [X8 + 0xB0]
	0x0225C3D0 ADD X10, X10, 0x8
	0x0225C3D4 LDUR X11, [X10 - 0x8]
	0x0225C3D8 CMP X11, X1
	0x0225C3DC B.EQ 0x225C3FC
	0x0225C3E0 SUBS X9, X9, 0x1
	0x0225C3E4 ADD X10, X10, 0x10
	0x0225C3E8 B.NE 0x225C3D4
	0x0225C3EC MOVZ W2, 0x1
	0x0225C3F0 MOV X0, X22
	0x0225C3F4 BL 0x1C5C788
	0x0225C3F8 B 0x225C40C
	0x0225C3FC LDR W9, [X10]
	0x0225C400 ADD W9, W9, 0x1
	0x0225C404 ADD X8, X8, W9, 0x4, SXTW
	0x0225C408 ADD X0, X8, 0x138
	0x0225C40C LDP X8, X1, [X0]
	0x0225C410 MOV X0, X22
	0x0225C414 BLR X8
	0x0225C418 MOV X22, X0
	0x0225C41C CBZ X0, 0x225C434
	0x0225C420 ADRP X0, 0x1EC0000
	0x0225C424 LDR X0, [X0 + 0x5E0]
	0x0225C428 BL 0x1C16D08
	0x0225C42C STR X0, [X31 + 0x18]
	0x0225C430 B 0x225C454
	0x0225C434 ADRP X0, 0x1EC0000
	0x0225C438 LDR X0, [X0 + 0x5E0]
	0x0225C43C BL 0x1C16D08
	0x0225C440 STR X0, [X31 + 0x18]
	0x0225C444 ADRP X0, 0x1E97000
	0x0225C448 LDR X0, [X0 + 0x988]
	0x0225C44C BL 0x1C16D08
	0x0225C450 MOV X22, X0
	0x0225C454 ADRP X0, 0x1E97000
	0x0225C458 LDR X0, [X0 + 0x710]
	0x0225C45C BL 0x1C16D08
	0x0225C460 MOV X3, X0
	0x0225C464 LDP X1, X0, [X31 + 0x18]
	0x0225C468 MOV X2, X22
	0x0225C46C BL 0x2AA5098
	0x0225C470 LDR X0, [X28 + 0x10]
	0x0225C474 CBZ X0, 0x225C7FC
	0x0225C478 MOV X1, X31
	0x0225C47C BL 0x33C4268
	0x0225C480 CBZ X0, 0x225C800
	0x0225C484 LDR X8, [X0]
	0x0225C488 LDP X9, X1, [X8 + 0x1C8]
	0x0225C48C BLR X9
	0x0225C490 CBZ X0, 0x225C804
	0x0225C494 LDR X8, [X0]
	0x0225C498 LDR X1, [X8 + 0x2F0]
	0x0225C49C LDR X9, [X8 + 0x2E8]
	0x0225C4A0 BLR X9
	0x0225C4A4 MOV X22, X0
	0x0225C4A8 LDR X0, [X28 + 0x10]
	0x0225C4AC CBZ X0, 0x225C808
	0x0225C4B0 MOV X1, X31
	0x0225C4B4 BL 0x33C4268
	0x0225C4B8 CBZ X0, 0x225C80C
	0x0225C4BC LDR X8, [X0]
	0x0225C4C0 LDP X9, X1, [X8 + 0x1A8]
	0x0225C4C4 BLR X9
	0x0225C4C8 MOV X28, X0
	0x0225C4CC ADRP X0, 0x1EA0000
	0x0225C4D0 LDR X0, [X0 + 0x790]
	0x0225C4D4 BL 0x1C16D08
	0x0225C4D8 MOV X1, X0
	0x0225C4DC MOV X0, X22
	0x0225C4E0 MOV X2, X28
	0x0225C4E4 MOV X3, X31
	0x0225C4E8 BL 0x32274B8
	0x0225C4EC MOV X22, X0
	0x0225C4F0 ADRP X0, 0x1EC0000
	0x0225C4F4 LDR X0, [X0 + 0x5E8]
	0x0225C4F8 BL 0x1C16D08
	0x0225C4FC MOV X28, X0
	0x0225C500 ADRP X0, 0x1E97000
	0x0225C504 LDR X0, [X0 + 0x710]
	0x0225C508 BL 0x1C16D08
	0x0225C50C MOV X3, X0
	0x0225C510 LDR X0, [X31 + 0x20]
	0x0225C514 MOV X1, X28
	0x0225C518 MOV X2, X22
	0x0225C51C BL 0x2AA5098
	0x0225C520 LDR X8, [X31 + 0x28]
	0x0225C524 CBZ X8, 0x225C810
	0x0225C528 ADRP X0, 0x1EC0000
	0x0225C52C LDR X0, [X0 + 0x5F0]
	0x0225C530 BL 0x1C16D08
	0x0225C534 MOV X28, X0
	0x0225C538 ADRP X0, 0x1EC0000
	0x0225C53C LDR X0, [X0 + 0x5F8]
	0x0225C540 BL 0x1C16D08
	0x0225C544 STR X0, [X31 + 0x18]
	0x0225C548 ADRP X0, 0x1EC0000
	0x0225C54C LDR X0, [X0 + 0x600]
	0x0225C550 BL 0x1C16D08
	0x0225C554 STR X0, [X31 + 0x8]
	0x0225C558 LDR X8, [X31 + 0x28]
	0x0225C55C LDR X8, [X8]
	0x0225C560 LDRH W9, [X8 + 0x12E]
	0x0225C564 CBZ X9, 0x225C588
	0x0225C568 LDR X10, [X8 + 0xB0]
	0x0225C56C ADD X10, X10, 0x8
	0x0225C570 LDUR X11, [X10 - 0x8]
	0x0225C574 CMP X11, X28
	0x0225C578 B.EQ 0x225C59C
	0x0225C57C SUBS X9, X9, 0x1
	0x0225C580 ADD X10, X10, 0x10
	0x0225C584 B.NE 0x225C570
	0x0225C588 LDR X0, [X31 + 0x28]
	0x0225C58C MOVZ W2, 0x6
	0x0225C590 MOV X1, X28
	0x0225C594 BL 0x1C5C788
	0x0225C598 B 0x225C5AC
	0x0225C59C LDR W9, [X10]
	0x0225C5A0 ADD W9, W9, 0x6
	0x0225C5A4 ADD X8, X8, W9, 0x4, SXTW
	0x0225C5A8 ADD X0, X8, 0x138
	0x0225C5AC LDP X8, X7, [X0]
	0x0225C5B0 LDP X3, X0, [X31 + 0x20]
	0x0225C5B4 LDP X1, X4, [X31 + 0x10]
	0x0225C5B8 LDR X5, [X31 + 0x8]
	0x0225C5BC LDR X22, [X31 + 0x40]
	0x0225C5C0 MOVZ W6, 0x199
	0x0225C5C4 MOV X2, X21
	0x0225C5C8 BLR X8
	0x0225C5CC B 0x225C1B0
	0x0225C5D0 MOV X23, X31
	0x0225C5D4 MOVZ W21, 0x19
	0x0225C5D8 LDR X0, [X25]
	0x0225C5DC LDR W8, [X0 + 0xE0]
	0x0225C5E0 CBNZ W8, 0x225C5E8
	0x0225C5E4 BL 0x1C16DFC
	0x0225C5E8 ADRP X8, 0x1EC0000
	0x0225C5EC LDR X8, [X8 + 0x550]
	0x0225C5F0 ADD X0, X31, 0x70
	0x0225C5F4 LDR X1, [X8]
	0x0225C5F8 BL 0x2BC5018
	0x0225C5FC CBNZ X23, 0x225C7D4
	0x0225C600 CMP W21, 0x19
	0x0225C604 B.EQ 0x225C60C
	0x0225C608 CBNZ W21, 0x225C6E4
	0x0225C60C LDR W8, [X31 + 0x34]
	0x0225C610 MOV X0, X20
	0x0225C614 MOV X1, X22
	0x0225C618 MOV X2, X31
	0x0225C61C STRB W8, [X20 + 0x60]
	0x0225C620 LDR W8, [X31 + 0x38]
	0x0225C624 STRB W8, [X20 + 0x10]
	0x0225C628 BL 0x35C7B40
	0x0225C62C LDR W8, [X31 + 0x3C]
	0x0225C630 AND W8, W8, 0xFF
	0x0225C634 CMP W8, 0x6
	0x0225C638 B.NE 0x225C6E4
	0x0225C63C LDR X0, [X31 + 0xB8]
	0x0225C640 CBZ X0, 0x225C71C
	0x0225C644 ADRP X8, 0x1EC0000
	0x0225C648 LDR X8, [X8 + 0x590]
	0x0225C64C LDR X1, [X8]
	0x0225C650 ADD X8, X31, 0x48
	0x0225C654 BL 0x2DBE924
	0x0225C658 LDUR V0, [X31 + 0x48]
	0x0225C65C LDR X8, [X31 + 0x58]
	0x0225C660 ADRP X21, 0x1EC0000
	0x0225C664 STR V0, [X31 + 0xA]
	0x0225C668 STR X8, [X31 + 0xB0]
	0x0225C66C LDR X21, [X21 + 0x598]
	0x0225C670 LDR X1, [X29]
	0x0225C674 ADD X0, X31, 0xA0
	0x0225C678 BL 0x2BC3C64
	0x0225C67C TBZ X0, 0x0, 0x225C6B4
	0x0225C680 LDR X22, [X31 + 0xB0]
	0x0225C684 CBZ X22, 0x225C724
	0x0225C688 LDR X0, [X22 + 0x48]
	0x0225C68C CBZ X0, 0x225C728
	0x0225C690 LDR X2, [X21]
	0x0225C694 MOV X1, X19
	0x0225C698 BL 0x2DBE67C
	0x0225C69C LDR X0, [X22 + 0x50]
	0x0225C6A0 CBZ X0, 0x225C720
	0x0225C6A4 LDR X2, [X21]
	0x0225C6A8 MOV X1, X19
	0x0225C6AC BL 0x2DBE67C
	0x0225C6B0 B 0x225C670
	0x0225C6B4 ADRP X8, 0x1EC0000
	0x0225C6B8 LDR X8, [X8 + 0x548]
	0x0225C6BC ADD X0, X31, 0xA0
	0x0225C6C0 LDR X1, [X8]
	0x0225C6C4 BL 0x2BC3C60
	0x0225C6C8 LDR X0, [X20 + 0x28]
	0x0225C6CC CBZ X0, 0x225C71C
	0x0225C6D0 ADRP X8, 0x1EC0000
	0x0225C6D4 LDR X8, [X8 + 0x538]
	0x0225C6D8 MOV X1, X19
	0x0225C6DC LDR X2, [X8]
	0x0225C6E0 BL 0x2AA64F8
	0x0225C6E4 LDP X20, X19, [X31 + 0x110]
	0x0225C6E8 LDP X22, X21, [X31 + 0x100]
	0x0225C6EC LDP X24, X23, [X31 + 0xF0]
	0x0225C6F0 LDP X26, X25, [X31 + 0xE0]
	0x0225C6F4 LDP X28, X27, [X31 + 0xD0]
	0x0225C6F8 LDP X29, X30, [X31 + 0xC0]
	0x0225C6FC ADD X31, X31, 0x120
	0x0225C700 RET
	0x0225C704 BL 0x1C16F20
	0x0225C708 BL 0x1C16F20
	0x0225C70C BL 0x1C16F20
	0x0225C710 BL 0x1C16F20
	0x0225C714 BL 0x1C16F20
	0x0225C718 BL 0x1C16F20
	0x0225C71C BL 0x1C16F20
	0x0225C720 BL 0x1C16F20
	0x0225C724 BL 0x1C16F20
	0x0225C728 BL 0x1C16F20
	0x0225C72C MOV X0, X19
	0x0225C730 BL 0x19903C0
	0x0225C734 ADRP X0, 0x1E98000
	0x0225C738 LDR X0, [X0 + 0x1B0]
	0x0225C73C BL 0x1C16D08
	0x0225C740 MOV X1, X0
	0x0225C744 MOVZ W0, 0x1
	0x0225C748 MOV X2, X19
	0x0225C74C BL 0x19963F0
	0x0225C750 MOV X19, X0
	0x0225C754 ADRP X0, 0x1EC0000
	0x0225C758 LDR X0, [X0 + 0x608]
	0x0225C75C B 0x225C790
	0x0225C760 MOV X0, X19
	0x0225C764 BL 0x19903C0
	0x0225C768 ADRP X0, 0x1E98000
	0x0225C76C LDR X0, [X0 + 0x1B0]
	0x0225C770 BL 0x1C16D08
	0x0225C774 MOV X1, X0
	0x0225C778 MOVZ W0, 0x1
	0x0225C77C MOV X2, X19
	0x0225C780 BL 0x19963F0
	0x0225C784 MOV X19, X0
	0x0225C788 ADRP X0, 0x1EC0000
	0x0225C78C LDR X0, [X0 + 0x610]
	0x0225C790 BL 0x1C16D08
	0x0225C794 MOV X1, X19
	0x0225C798 MOV X2, X31
	0x0225C79C BL 0x321B938
	0x0225C7A0 MOV X19, X0
	0x0225C7A4 ADRP X0, 0x1E97000
	0x0225C7A8 LDR X0, [X0 + 0x5B0]
	0x0225C7AC BL 0x1C16D08
	0x0225C7B0 BL 0x1C16F10
	0x0225C7B4 MOV X1, X19
	0x0225C7B8 MOV X2, X31
	0x0225C7BC MOV X20, X0
	0x0225C7C0 BL 0x337DF1C
	0x0225C7C4 MOV X0, X20
	0x0225C7C8 MOV X1, X24
	0x0225C7CC BL 0x1C16DEC
	0x0225C7D0 BL 0x1C16F28
	0x0225C7D4 MOV X0, X23
	0x0225C7D8 BL 0x1C16F18
	0x0225C7DC BL 0x1C16F44
	0x0225C7E0 MOV X1, X31
	0x0225C7E4 BL 0x1C16DEC
	0x0225C7E8 BL 0x1C16F20
	0x0225C7EC BL 0x1C16F20
	0x0225C7F0 BL 0x1C16F20
	0x0225C7F4 BL 0x1C16F20
	0x0225C7F8 BL 0x1C16F20
	0x0225C7FC BL 0x1C16F20
	0x0225C800 BL 0x1C16F20
	0x0225C804 BL 0x1C16F20
	0x0225C808 BL 0x1C16F20
	0x0225C80C BL 0x1C16F20
	0x0225C810 BL 0x1C16F20
	0x0225C814 MOVZ W0, 0x8
	0x0225C818 BL 0x3EB1AF0
	0x0225C81C LDR X8, [X21]
	0x0225C820 STR X8, [X0]
	0x0225C824 ADRP X1, 0x1C58000
	0x0225C828 ADD X1, X1, 0xE58
	0x0225C82C MOV X2, X31
	0x0225C830 BL 0x3EB1B00
	0x0225C834 B 0x225C838
	0x0225C838 MOV X21, X1
	0x0225C83C MOV X22, X0
	0x0225C840 BL 0x3EB1AE0
	0x0225C844 B 0x225C960
	0x0225C848 B 0x225C958
	0x0225C84C B 0x225C958
	0x0225C850 B 0x225C958
	0x0225C854 B 0x225C958
	0x0225C858 B 0x225C958
	0x0225C85C B 0x225C958
	0x0225C860 B 0x225C958
	0x0225C864 B 0x225C958
	0x0225C868 B 0x225C958
	0x0225C86C B 0x225C958
	0x0225C870 B 0x225C958
	0x0225C874 B 0x225C958
	0x0225C878 B 0x225C958
	0x0225C87C B 0x225C958
	0x0225C880 B 0x225C958
	0x0225C884 B 0x225C958
	0x0225C888 B 0x225C958
	0x0225C88C B 0x225C958
	0x0225C890 B 0x225C958
	0x0225C894 B 0x225C958
	0x0225C898 B 0x225C958
	0x0225C89C B 0x225C958
	0x0225C8A0 B 0x225C958
	0x0225C8A4 B 0x225C958
	0x0225C8A8 B 0x225C8AC
	0x0225C8AC MOV X22, X0
	0x0225C8B0 STR X31, [X31 + 0x40]
	0x0225C8B4 B 0x225C9D4
	0x0225C8B8 B 0x225C9D0
	0x0225C8BC B 0x225C9D0
	0x0225C8C0 B 0x225C9D0
	0x0225C8C4 B 0x225C8D8
	0x0225C8C8 B 0x225C8D8
	0x0225C8CC B 0x225C8D8
	0x0225C8D0 B 0x225C8D8
	0x0225C8D4 B 0x225C8D8
	0x0225C8D8 MOV X22, X0
	0x0225C8DC CMP W1, 0x1
	0x0225C8E0 B.NE 0x225C914
	0x0225C8E4 MOV X0, X22
	0x0225C8E8 BL 0x3EB1AD0
	0x0225C8EC LDR X21, [X0]
	0x0225C8F0 BL 0x3EB1AE0
	0x0225C8F4 ADRP X8, 0x1EC0000
	0x0225C8F8 LDR X8, [X8 + 0x548]
	0x0225C8FC ADD X0, X31, 0xA0
	0x0225C900 LDR X1, [X8]
	0x0225C904 BL 0x2BC3C60
	0x0225C908 CBZ X21, 0x225C6C8
	0x0225C90C MOV X0, X21
	0x0225C910 BL 0x1C16F18
	0x0225C914 MOV X21, X31
	0x0225C918 B 0x225C920
	0x0225C91C MOV X22, X0
	0x0225C920 ADRP X8, 0x1EC0000
	0x0225C924 LDR X8, [X8 + 0x548]
	0x0225C928 LDR X1, [X8]
	0x0225C92C ADD X0, X31, 0xA0
	0x0225C930 BL 0x2BC3C60
	0x0225C934 CBZ X21, 0x225CA30
	0x0225C938 MOV X0, X21
	0x0225C93C BL 0x1C16F18
	0x0225C940 B 0x225C9D0
	0x0225C944 B 0x225C958
	0x0225C948 B 0x225C9D0
	0x0225C94C B 0x225C9D0
	0x0225C950 B 0x225C958
	0x0225C954 B 0x225C958
	0x0225C958 MOV X21, X1
	0x0225C95C MOV X22, X0
	0x0225C960 CMP W21, 0x1
	0x0225C964 B.NE 0x225C984
	0x0225C968 MOV X0, X22
	0x0225C96C BL 0x3EB1AD0
	0x0225C970 LDR X23, [X0]
	0x0225C974 BL 0x3EB1AE0
	0x0225C978 LDR X22, [X31 + 0x40]
	0x0225C97C MOV W21, W31
	0x0225C980 B 0x225C5D8
	0x0225C984 MOV X23, X31
	0x0225C988 B 0x225C990
	0x0225C98C MOV X22, X0
	0x0225C990 LDR X0, [X25]
	0x0225C994 LDR W8, [X0 + 0xE0]
	0x0225C998 CBNZ W8, 0x225C9A0
	0x0225C99C BL 0x1C16DFC
	0x0225C9A0 ADRP X8, 0x1EC0000
	0x0225C9A4 LDR X8, [X8 + 0x550]
	0x0225C9A8 LDR X1, [X8]
	0x0225C9AC ADD X0, X31, 0x70
	0x0225C9B0 BL 0x2BC5018
	0x0225C9B4 CBZ X23, 0x225CA30
	0x0225C9B8 MOV X0, X23
	0x0225C9BC BL 0x1C16F18
	0x0225C9C0 B 0x225C9D0
	0x0225C9C4 B 0x225C9D0
	0x0225C9C8 B 0x225C9D0
	0x0225C9CC B 0x225C9D0
	0x0225C9D0 MOV X22, X0
	0x0225C9D4 CMP W1, 0x1
	0x0225C9D8 B.NE 0x225CA0C
	0x0225C9DC MOV X0, X22
	0x0225C9E0 BL 0x3EB1AD0
	0x0225C9E4 LDR X24, [X0]
	0x0225C9E8 BL 0x3EB1AE0
	0x0225C9EC ADRP X8, 0x1EC0000
	0x0225C9F0 LDR X8, [X8 + 0x548]
	0x0225C9F4 ADD X0, X31, 0xA0
	0x0225C9F8 LDR X1, [X8]
	0x0225C9FC BL 0x2BC3C60
	0x0225CA00 CBZ X24, 0x225C108
	0x0225CA04 MOV X0, X24
	0x0225CA08 BL 0x1C16F18
	0x0225CA0C MOV X24, X31
	0x0225CA10 B 0x225CA18
	0x0225CA14 MOV X22, X0
	0x0225CA18 ADRP X8, 0x1EC0000
	0x0225CA1C LDR X8, [X8 + 0x548]
	0x0225CA20 LDR X1, [X8]
	0x0225CA24 ADD X0, X31, 0xA0
	0x0225CA28 BL 0x2BC3C60
	0x0225CA2C CBNZ X24, 0x225CA38
	0x0225CA30 MOV X0, X22
	0x0225CA34 BL 0x1D2C690
	0x0225CA38 MOV X0, X24
	0x0225CA3C BL 0x1C16F18
	0x0225CA40 BL 0x1990590
	0x0225CA44 SUB X31, X31, 0x140
	0x0225CA48 STP D11, D10, [X31 + 0xC0]
	0x0225CA4C STP D9, D8, [X31 + 0xD0]
	0x0225CA50 STP X29, X30, [X31 + 0xE0]
	0x0225CA54 STP X28, X27, [X31 + 0xF0]
	0x0225CA58 STP X26, X25, [X31 + 0x100]
	0x0225CA5C STP X24, X23, [X31 + 0x110]
	0x0225CA60 STP X22, X21, [X31 + 0x120]
	0x0225CA64 STP X20, X19, [X31 + 0x130]
	0x0225CA68 LDR X8, [X4 + 0x38]
	0x0225CA6C MOV X24, X4
	0x0225CA70 MOV W22, W3
	0x0225CA74 MOV V8.16B, V3.16B
	0x0225CA78 MOV V9.16B, V2.16B
	0x0225CA7C MOV V10.16B, V1.16B
	0x0225CA80 MOV V11.16B, V0.16B
	0x0225CA84 MOV W21, W2
	0x0225CA88 MOV X19, X1
	0x0225CA8C MOV X20, X0
	0x0225CA90 CBNZ X8, 0x225CB94
	0x0225CA94 ADRP X0, 0x1EC0000
	0x0225CA98 LDR X0, [X0 + 0x538]
	0x0225CA9C BL 0x1C16CF4
	0x0225CAA0 ADRP X0, 0x1EC0000
	0x0225CAA4 LDR X0, [X0 + 0x540]
	0x0225CAA8 BL 0x1C16CF4
	0x0225CAAC ADRP X0, 0x1EC0000
	0x0225CAB0 LDR X0, [X0 + 0x548]
	0x0225CAB4 BL 0x1C16CF4
	0x0225CAB8 ADRP X0, 0x1EC0000
	0x0225CABC LDR X0, [X0 + 0x550]
	0x0225CAC0 BL 0x1C16CF4
	0x0225CAC4 ADRP X0, 0x1EC0000
	0x0225CAC8 LDR X0, [X0 + 0x558]
	0x0225CACC BL 0x1C16CF4
	0x0225CAD0 ADRP X0, 0x1EC0000
	0x0225CAD4 LDR X0, [X0 + 0x560]
	0x0225CAD8 BL 0x1C16CF4
	0x0225CADC ADRP X0, 0x1EC0000
	0x0225CAE0 LDR X0, [X0 + 0x568]
	0x0225CAE4 BL 0x1C16CF4
	0x0225CAE8 ADRP X0, 0x1EC0000
	0x0225CAEC LDR X0, [X0 + 0x570]
	0x0225CAF0 BL 0x1C16CF4
	0x0225CAF4 ADRP X0, 0x1EC0000
	0x0225CAF8 LDR X0, [X0 + 0x578]
	0x0225CAFC BL 0x1C16CF4
	0x0225CB00 ADRP X0, 0x1EC0000
	0x0225CB04 LDR X0, [X0 + 0x580]
	0x0225CB08 BL 0x1C16CF4
	0x0225CB0C ADRP X0, 0x1EC0000
	0x0225CB10 LDR X0, [X0 + 0x588]
	0x0225CB14 BL 0x1C16CF4
	0x0225CB18 ADRP X0, 0x1EC0000
	0x0225CB1C LDR X0, [X0 + 0x590]
	0x0225CB20 BL 0x1C16CF4
	0x0225CB24 ADRP X0, 0x1EC0000
	0x0225CB28 LDR X0, [X0 + 0x598]
	0x0225CB2C BL 0x1C16CF4
	0x0225CB30 ADRP X0, 0x1EC0000
	0x0225CB34 LDR X0, [X0 + 0x5A0]
	0x0225CB38 BL 0x1C16CF4
	0x0225CB3C ADRP X0, 0x1EC0000
	0x0225CB40 LDR X0, [X0 + 0x5A8]
	0x0225CB44 BL 0x1C16CF4
	0x0225CB48 ADRP X0, 0x1E98000
	0x0225CB4C LDR X0, [X0 + 0x1B0]
	0x0225CB50 BL 0x1C16CF4
	0x0225CB54 ADRP X0, 0x1EC0000
	0x0225CB58 LDR X0, [X0 + 0x5B0]
	0x0225CB5C BL 0x1C16CF4
	0x0225CB60 ADRP X0, 0x1EC0000
	0x0225CB64 LDR X0, [X0 + 0x5B8]
	0x0225CB68 BL 0x1C16CF4
	0x0225CB6C ADRP X0, 0x1EC0000
	0x0225CB70 LDR X0, [X0 + 0x5C0]
	0x0225CB74 BL 0x1C16CF4
	0x0225CB78 ADRP X0, 0x1EC0000
	0x0225CB7C LDR X0, [X0 + 0x5C8]
	0x0225CB80 BL 0x1C16CF4
	0x0225CB84 LDR X8, [X24 + 0x38]
	0x0225CB88 CBNZ X8, 0x225CB94
	0x0225CB8C MOV X0, X24
	0x0225CB90 BL 0x1C5C6E0
	0x0225CB94 MOVI V0.2D, 0x0
	0x0225CB98 STP X31, X31, [X31 + 0xB0]
	0x0225CB9C STP X31, X31, [X31 + 0xA0]
	0x0225CBA0 STR X31, [X31 + 0x90]
	0x0225CBA4 STP V0, V0, [X31 + 0x70]
	0x0225CBA8 ADRP X23, 0x1E98000
	0x0225CBAC LDRB W8, [X20 + 0x10]
	0x0225CBB0 LDR X23, [X23 + 0x1B0]
	0x0225CBB4 CBNZ W8, 0x225CC1C
	0x0225CBB8 CBZ X19, 0x225D550
	0x0225CBBC LDR X8, [X19]
	0x0225CBC0 LDR X1, [X23]
	0x0225CBC4 LDRH W9, [X8 + 0x12E]
	0x0225CBC8 CBZ X9, 0x225CBEC
	0x0225CBCC LDR X10, [X8 + 0xB0]
	0x0225CBD0 ADD X10, X10, 0x8
	0x0225CBD4 LDUR X11, [X10 - 0x8]
	0x0225CBD8 CMP X11, X1
	0x0225CBDC B.EQ 0x225CBFC
	0x0225CBE0 SUBS X9, X9, 0x1
	0x0225CBE4 ADD X10, X10, 0x10
	0x0225CBE8 B.NE 0x225CBD4
	0x0225CBEC MOVZ W2, 0xF
	0x0225CBF0 MOV X0, X19
	0x0225CBF4 BL 0x1C5C788
	0x0225CBF8 B 0x225CC0C
	0x0225CBFC LDR W9, [X10]
	0x0225CC00 ADD W9, W9, 0xF
	0x0225CC04 ADD X8, X8, W9, 0x4, SXTW
	0x0225CC08 ADD X0, X8, 0x138
	0x0225CC0C LDP X8, X1, [X0]
	0x0225CC10 MOV X0, X19
	0x0225CC14 BLR X8
	0x0225CC18 TBZ X0, 0x0, 0x225D594
	0x0225CC1C CBZ X19, 0x225D550
	0x0225CC20 LDR X8, [X19]
	0x0225CC24 LDR X1, [X23]
	0x0225CC28 LDRH W9, [X8 + 0x12E]
	0x0225CC2C CBZ X9, 0x225CC50
	0x0225CC30 LDR X10, [X8 + 0xB0]
	0x0225CC34 ADD X10, X10, 0x8
	0x0225CC38 LDUR X11, [X10 - 0x8]
	0x0225CC3C CMP X11, X1
	0x0225CC40 B.EQ 0x225CC60
	0x0225CC44 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X8, [X5+56]
	015 Move X24, X5
	016 Move W23, W4
	017 Move W22, W3
	018 Move W25, W2
	019 Move X19, X1
	020 Move X20, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {88}
	023 Move X0, 0x1EC2000
	024 Move X0, [X0+1336]
	025 Call 0x1C17CF4
	026 Move X0, 0x1EC2000
	027 Move X0, [X0+1344]
	028 Call 0x1C17CF4
	029 Move X0, 0x1EC2000
	030 Move X0, [X0+1352]
	031 Call 0x1C17CF4
	032 Move X0, 0x1EC2000
	033 Move X0, [X0+1360]
	034 Call 0x1C17CF4
	035 Move X0, 0x1EC2000
	036 Move X0, [X0+1368]
	037 Call 0x1C17CF4
	038 Move X0, 0x1EC2000
	039 Move X0, [X0+1376]
	040 Call 0x1C17CF4
	041 Move X0, 0x1EC2000
	042 Move X0, [X0+1384]
	043 Call 0x1C17CF4
	044 Move X0, 0x1EC2000
	045 Move X0, [X0+1392]
	046 Call 0x1C17CF4
	047 Move X0, 0x1EC2000
	048 Move X0, [X0+1400]
	049 Call 0x1C17CF4
	050 Move X0, 0x1EC2000
	051 Move X0, [X0+1408]
	052 Call 0x1C17CF4
	053 Move X0, 0x1EC2000
	054 Move X0, [X0+1416]
	055 Call 0x1C17CF4
	056 Move X0, 0x1EC2000
	057 Move X0, [X0+1424]
	058 Call 0x1C17CF4
	059 Move X0, 0x1EC2000
	060 Move X0, [X0+1432]
	061 Call 0x1C17CF4
	062 Move X0, 0x1EC2000
	063 Move X0, [X0+1440]
	064 Call 0x1C17CF4
	065 Move X0, 0x1EC2000
	066 Move X0, [X0+1448]
	067 Call 0x1C17CF4
	068 Move X0, 0x1E9A000
	069 Move X0, [X0+432]
	070 Call 0x1C17CF4
	071 Move X0, 0x1EC2000
	072 Move X0, [X0+1456]
	073 Call 0x1C17CF4
	074 Move X0, 0x1EC2000
	075 Move X0, [X0+1464]
	076 Call 0x1C17CF4
	077 Move X0, 0x1EC2000
	078 Move X0, [X0+1472]
	079 Call 0x1C17CF4
	080 Move X0, 0x1EC2000
	081 Move X0, [X0+1480]
	082 Call 0x1C17CF4
	083 Move X8, [X24+56]
	084 Compare X8, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X24
	087 Call 0x1C5D6E0
	088 NotImplemented "Instruction MOVI not yet implemented."
	089 Move [X31+176], X31
	090 Move [X31+184], X31
	091 Move [X31+160], X31
	092 Move [X31+168], X31
	093 Move [X31+144], X31
	094 Move [X31+112], V0
	095 Move [X31+120], V0
	096 Move X21, 0x1E9A000
	097 Move W8, [X20+16]
	098 Move X21, [X21+432]
	099 Compare W8, 0
	100 JumpIfNotEqual {129}
	101 Compare X19, 0
	102 JumpIfEqual {776}
	103 Move X8, [X19]
	104 Move X1, [X21]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move W2, 15
	115 Move X0, X19
	116 Call 0x1C5D788
	117 Move W9, [X10]
	118 Add W9, W9, 15
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X19
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {792}
	129 Compare X19, 0
	130 JumpIfEqual {776}
	131 Move X8, [X19]
	132 Move X1, [X21]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move W2, 15
	143 Move X0, X19
	144 Call 0x1C5D788
	145 Move W9, [X10]
	146 Add W9, W9, 15
	147 Add X8, X8, W9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X1, [X0+8]
	151 Move X0, X19
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {162}
	157 And W8, W25, 255
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move W8, [X20+96]
	160 Compare W8, 0
	161 JumpIfEqual {780}
	162 And W8, W25, 255
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X8, 0x1EC1000
	166 Move X8, [X8+1440]
	167 Move X8, 0x1EC1000
	168 Move X8, [X8+1448]
	169 Move X1, [X8]
	170 Move X0, X19
	171 Call 0x1C17E00
	172 Compare X0, 0
	173 JumpIfEqual {180}
	174 Move X8, [X24+56]
	175 And W2, W22, 1
	176 Move X0, X20
	177 Move X1, X19
	178 Move X3, [X8+8]
	179 Call 0x22644E8, X0, X1, X2
	180 Move X0, [X20+32]
	181 Compare X0, 0
	182 JumpIfEqual {776}
	183 Move X8, 0x1EC1000
	184 Move X8, [X8+1408]
	185 Move X1, X19
	186 Move X2, [X8]
	187 Call HashSet`1<Object>.Add, X0, X1
	188 Move X0, [X20+80]
	189 Compare X0, 0
	190 JumpIfEqual {776}
	191 Move X8, [X24+56]
	192 And W3, W22, 1
	193 Move X1, X19
	194 Move W2, W25
	195 Move X5, [X8+16]
	196 Move W4, W23
	197 Call 0x2267334, X0, X1, X2, X3, X4
	198 Move X8, [X20+24]
	199 Compare X8, 0
	200 JumpIfEqual {776}
	201 Move X27, 0x1EC1000
	202 Move X27, [X27+1464]
	203 Move W11, [X8+28]
	204 Move X9, [X8+16]
	205 Move X10, [X27]
	206 Add W11, W11, 1
	207 Move [X8+28], W11
	208 Compare X9, 0
	209 JumpIfEqual {776}
	210 NotImplemented "Instruction LDRSW not yet implemented."
	211 Move W12, [X9+24]
	212 Move X23, X0
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Add W10, W11, 1
	215 Add X9, X9, X11
	216 Move [X8+24], W10
	217 Move [X9+32], X23
	218 Move X9, [X10+32]
	219 Move X0, X8
	220 Move X1, X23
	221 Move X9, [X9+192]
	222 Move X2, [X9+112]
	223 Call List`1<Object>.AddWithResize, X0, X1
	224 Move X0, [X20+40]
	225 Move [X31+60], W25
	226 Compare X0, 0
	227 JumpIfEqual {776}
	228 Move X8, 0x1EC1000
	229 Move X8, [X8+1344]
	230 Add X2, X31, 184
	231 Move X1, X19
	232 Move X3, [X8]
	233 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {756}
	238 Move X0, [X31+184]
	239 Compare X0, 0
	240 JumpIfEqual {776}
	241 Move X8, 0x1EC1000
	242 Move X8, [X8+1424]
	243 And W28, W22, 1
	244 Move X1, [X8]
	245 Add X8, X31, 72
	246 Call HashSet`1<Object>.GetEnumerator, X0
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 Move X8, [X31+88]
	249 Move [X31+64], X31
	250 Move X29, 0x1EC1000
	251 Move X22, 0x1EC1000
	252 Move X29, [X29+1376]
	253 Move X22, [X22+1472]
	254 Move [X31+10], V0
	255 Move [X31+176], X8
	256 Move X21, 0x1EC1000
	257 Move X21, [X21+1416]
	258 Move X1, [X29]
	259 Add X0, X31, 160
	260 Call Enumerator<Object>.MoveNext, X0
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfNotEqual {338}
	265 Move X25, [X31+176]
	266 Compare X25, 0
	267 JumpIfEqual {770}
	268 Move W8, [X25+40]
	269 Compare W8, 0
	270 JumpIfEqual {295}
	271 Move X0, [X25+72]
	272 Compare X0, 0
	273 JumpIfEqual {775}
	274 Move X2, [X21]
	275 Move X1, X19
	276 Call HashSet`1<Object>.Contains, X0, X1
	277 Move TEMP, X0
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfNotEqual {295}
	281 Move X26, [X25+48]
	282 Move [X31+72], W28
	283 Move X8, [X24+56]
	284 Move X0, [X8]
	285 Add X1, X31, 72
	286 Call 0x1C17E04
	287 Move X1, X0
	288 Move X0, X26
	289 Move X2, X31
	290 Call Object.Equals, X0, X1
	291 Move TEMP, X0
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {258}
	295 Move W8, [X25+56]
	296 Compare W8, 0
	297 JumpIfNotEqual {326}
	298 Move X0, [X25+88]
	299 Compare X0, 0
	300 JumpIfEqual {772}
	301 Move W10, [X0+28]
	302 Move X8, [X0+16]
	303 Move X9, [X27]
	304 Add W10, W10, 1
	305 Move [X0+28], W10
	306 Compare X8, 0
	307 JumpIfEqual {773}
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Move W11, [X8+24]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Add W9, W10, 1
	312 Add X8, X8, X10
	313 Move [X0+24], W9
	314 Move [X8+32], X23
	315 Move X8, [X9+32]
	316 Move X8, [X8+192]
	317 Move X2, [X8+112]
	318 Move X1, X23
	319 Call List`1<Object>.AddWithResize, X0, X1
	320 Move X0, [X20+64]
	321 Compare X0, 0
	322 JumpIfEqual {771}
	323 Move X2, [X22]
	324 Move X1, X25
	325 Call 0x25F8234, X0, X1
	326 Move X0, [X31+64]
	327 Compare X0, 0
	328 JumpIfNotEqual {334}
	329 Move X0, X20
	330 Move X1, X31
	331 Call StateObservationContext.AllocateDerivedStateObserverBuffer, X0
	332 Compare X0, 0
	333 JumpIfEqual {826}
	334 Move X2, [X22]
	335 Move X1, X25
	336 Move [X31+64], X0
	337 Call 0x25F8234, X0, X1
	338 Move X8, 0x1EC1000
	339 Move X8, [X8+1352]
	340 Add X0, X31, 160
	341 Move X1, [X8]
	342 Call Enumerator<Object>.Dispose, X0
	343 Move X22, [X31+64]
	344 Compare X22, 0
	345 JumpIfEqual {704}
	346 Move W9, [X20+16]
	347 Move W8, [X20+96]
	348 Move [X20+16], W31
	349 Move W1, 1
	350 Move [X31+52], W8
	351 Move [X31+56], W9
	352 Move W8, 1
	353 Move [X20+96], W8
	354 Move X8, 0x1EC1000
	355 Move X8, [X8+1456]
	356 Move X0, [X8]
	357 Call 0x1C17D6C
	358 Compare X0, 0
	359 JumpIfEqual {776}
	360 Move X24, X0
	361 Compare X23, 0
	362 JumpIfEqual {369}
	363 Move X8, [X24]
	364 Move X0, X23
	365 Move X1, [X8+64]
	366 Call 0x1C17E00
	367 Compare X0, 0
	368 JumpIfEqual {823}
	369 Move W8, [X24+24]
	370 Compare W8, 0
	371 JumpIfEqual {820}
	372 Move [X24+32], X23
	373 Move X8, 0x1EC1000
	374 Move X8, [X8+1480]
	375 Move X0, X22
	376 Move X1, [X8]
	377 Add X8, X31, 72
	378 Call 0x25F8F38, X0
	379 Move [X31+40], X31
	380 NotImplemented "Instruction LDUR not yet implemented."
	381 NotImplemented "Instruction LDUR not yet implemented."
	382 Move X8, [X31+104]
	383 Move X25, 0x1EC1000
	384 Move X26, 0x1EC1000
	385 Move X27, 0x1EC1000
	386 Move X25, [X25+1400]
	387 Move X26, [X26+1368]
	388 Move X27, [X27+1384]
	389 Move [X31+112], V0
	390 Move [X31+120], V1
	391 Move [X31+144], X8
	392 Move X0, [X25]
	393 Move W8, [X0+224]
	394 Compare W8, 0
	395 JumpIfNotEqual {397}
	396 Call 0x1C17DFC
	397 Move X1, [X26]
	398 Add X0, X31, 112
	399 Call 0x2BC5DE0, X0
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfNotEqual {679}
	404 Move X0, [X25]
	405 Move W8, [X0+224]
	406 Compare W8, 0
	407 JumpIfNotEqual {409}
	408 Call 0x1C17DFC
	409 Move X1, [X27]
	410 Add X0, X31, 112
	411 Call 0x2BC601C, X0
	412 Move X28, X0
	413 Compare X0, 0
	414 JumpIfEqual {774}
	415 Move W8, [X28+96]
	416 Compare W8, 0
	417 JumpIfNotEqual {392}
	418 Move X21, [X28+16]
	419 Move [X31+72], X31
	420 Move [X31+80], X31
	421 Add X0, X31, 72
	422 Move W1, W31
	423 Move X2, X24
	424 Move X3, X31
	425 Call StateChangedEventArgs..ctor, X0, X1, X2
	426 Compare X21, 0
	427 JumpIfEqual {434}
	428 Move X1, [X31+72]
	429 Move X2, [X31+80]
	430 Move X0, [X21+64]
	431 Move X8, [X21+24]
	432 Move X3, [X21+40]
	433 NotImplemented "Instruction BLR not yet implemented."
	434 Call 0x1C17F20
	435 Move X21, X1
	436 Move X22, X0
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Move X0, X22
	439 Call 0x3EB2AD0
	440 Move X21, X0
	441 Move X0, 0x1E98000
	442 Move X0, [X0+2000]
	443 Call 0x1C17D08
	444 Move X8, [X21]
	445 Move X1, [X8]
	446 Call 0x1C18270
	447 Move TEMP, X0
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfNotEqual {837}
	451 Move X21, [X21]
	452 Call 0x3EB2AE0
	453 Move X8, [X20+112]
	454 Move X9, [X31+40]
	455 Move X22, [X31+64]
	456 NotImplemented "Instruction CMP not yet implemented."
	457 NotImplemented "Instruction CSEL not yet implemented."
	458 Move [X31+40], X9
	459 Compare X8, 0
	460 JumpIfEqual {392}
	461 Move X22, [X28+64]
	462 Compare X22, 0
	463 JumpIfEqual {827}
	464 Move X0, 0x1E99000
	465 Move X0, [X0+432]
	466 Call 0x1C17D08
	467 Move X1, X0
	468 Move X8, [X22]
	469 NotImplemented "Instruction LDRH not yet implemented."
	470 Compare X9, 0
	471 JumpIfEqual {478}
	472 Move X10, [X8+176]
	473 Add X10, X10, 8
	474 NotImplemented "Instruction LDUR not yet implemented."
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Subtract X9, X9, 1
	477 Add X10, X10, 16
	478 Move W2, 1
	479 Move X0, X22
	480 Call 0x1C5D788
	481 Move W9, [X10]
	482 Add W9, W9, 1
	483 Add X8, X8, W9
	484 Add X0, X8, 312
	485 Move X8, [X0]
	486 Move X1, [X0+8]
	487 Move X0, X22
	488 NotImplemented "Instruction BLR not yet implemented."
	489 Move X22, X0
	490 Move X0, 0x1EC1000
	491 Move X0, [X0+1488]
	492 Call 0x1C17D08
	493 Move X1, X22
	494 Move X2, X31
	495 Call String.Concat, X0, X1
	496 Move [X31+16], X0
	497 Move X0, 0x1E98000
	498 Move X0, [X0+1824]
	499 Call 0x1C17D08
	500 Call 0x1C17F10
	501 Move [X31+32], X0
	502 Move X0, 0x1E98000
	503 Move X0, [X0+1816]
	504 Call 0x1C17D08
	505 Move X1, X0
	506 Move X0, [X31+32]
	507 Call Dictionary`2<Object, Object>..ctor, X0
	508 Compare X23, 0
	509 JumpIfEqual {828}
	510 Move X8, [X23]
	511 Move X9, [X8+360]
	512 Move X1, [X8+368]
	513 Move X0, X23
	514 NotImplemented "Instruction BLR not yet implemented."
	515 Move X8, [X31+32]
	516 Compare X8, 0
	517 JumpIfEqual {829}
	518 Move X22, X0
	519 Move X0, 0x1EC1000
	520 Move X0, [X0+1496]
	521 Call 0x1C17D08
	522 Move [X31+24], X0
	523 Move X0, 0x1E98000
	524 Move X0, [X0+1808]
	525 Call 0x1C17D08
	526 Move X3, X0
	527 Move X1, [X31+24]
	528 Move X0, [X31+32]
	529 Move X2, X22
	530 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	531 Move X8, [X28+64]
	532 Compare X8, 0
	533 JumpIfEqual {830}
	534 Move X22, X8
	535 Move X0, 0x1E99000
	536 Move X0, [X0+432]
	537 Call 0x1C17D08
	538 Move X1, X0
	539 Move X8, [X22]
	540 NotImplemented "Instruction LDRH not yet implemented."
	541 Compare X9, 0
	542 JumpIfEqual {549}
	543 Move X10, [X8+176]
	544 Add X10, X10, 8
	545 NotImplemented "Instruction LDUR not yet implemented."
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Subtract X9, X9, 1
	548 Add X10, X10, 16
	549 Move W2, 1
	550 Move X0, X22
	551 Call 0x1C5D788
	552 Move W9, [X10]
	553 Add W9, W9, 1
	554 Add X8, X8, W9
	555 Add X0, X8, 312
	556 Move X8, [X0]
	557 Move X1, [X0+8]
	558 Move X0, X22
	559 NotImplemented "Instruction BLR not yet implemented."
	560 Move X22, X0
	561 Compare X0, 0
	562 JumpIfEqual {567}
	563 Move X0, 0x1EC1000
	564 Move X0, [X0+1504]
	565 Call 0x1C17D08
	566 Move [X31+24], X0
	567 Move X0, 0x1EC1000
	568 Move X0, [X0+1504]
	569 Call 0x1C17D08
	570 Move [X31+24], X0
	571 Move X0, 0x1E98000
	572 Move X0, [X0+2440]
	573 Call 0x1C17D08
	574 Move X22, X0
	575 Move X0, 0x1E98000
	576 Move X0, [X0+1808]
	577 Call 0x1C17D08
	578 Move X3, X0
	579 Move X1, [X31+24]
	580 Move X0, [X31+32]
	581 Move X2, X22
	582 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	583 Move X0, [X28+16]
	584 Compare X0, 0
	585 JumpIfEqual {831}
	586 Move X1, X31
	587 Call Delegate.get_Method, X0
	588 Compare X0, 0
	589 JumpIfEqual {832}
	590 Move X8, [X0]
	591 Move X9, [X8+456]
	592 Move X1, [X8+464]
	593 NotImplemented "Instruction BLR not yet implemented."
	594 Compare X0, 0
	595 JumpIfEqual {833}
	596 Move X8, [X0]
	597 Move X1, [X8+752]
	598 Move X9, [X8+744]
	599 NotImplemented "Instruction BLR not yet implemented."
	600 Move X22, X0
	601 Move X0, [X28+16]
	602 Compare X0, 0
	603 JumpIfEqual {834}
	604 Move X1, X31
	605 Call Delegate.get_Method, X0
	606 Compare X0, 0
	607 JumpIfEqual {835}
	608 Move X8, [X0]
	609 Move X9, [X8+424]
	610 Move X1, [X8+432]
	611 NotImplemented "Instruction BLR not yet implemented."
	612 Move X28, X0
	613 Move X0, 0x1EA1000
	614 Move X0, [X0+1936]
	615 Call 0x1C17D08
	616 Move X1, X0
	617 Move X0, X22
	618 Move X2, X28
	619 Move X3, X31
	620 Call String.Concat, X0, X1, X2
	621 Move X22, X0
	622 Move X0, 0x1EC1000
	623 Move X0, [X0+1512]
	624 Call 0x1C17D08
	625 Move X28, X0
	626 Move X0, 0x1E98000
	627 Move X0, [X0+1808]
	628 Call 0x1C17D08
	629 Move X3, X0
	630 Move X0, [X31+32]
	631 Move X1, X28
	632 Move X2, X22
	633 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	634 Move X8, [X31+40]
	635 Compare X8, 0
	636 JumpIfEqual {836}
	637 Move X0, 0x1EC1000
	638 Move X0, [X0+1520]
	639 Call 0x1C17D08
	640 Move X28, X0
	641 Move X0, 0x1EC1000
	642 Move X0, [X0+1528]
	643 Call 0x1C17D08
	644 Move [X31+24], X0
	645 Move X0, 0x1EC1000
	646 Move X0, [X0+1536]
	647 Call 0x1C17D08
	648 Move [X31+8], X0
	649 Move X8, [X31+40]
	650 Move X8, [X8]
	651 NotImplemented "Instruction LDRH not yet implemented."
	652 Compare X9, 0
	653 JumpIfEqual {660}
	654 Move X10, [X8+176]
	655 Add X10, X10, 8
	656 NotImplemented "Instruction LDUR not yet implemented."
	657 NotImplemented "Instruction CMP not yet implemented."
	658 Subtract X9, X9, 1
	659 Add X10, X10, 16
	660 Move X0, [X31+40]
	661 Move W2, 6
	662 Move X1, X28
	663 Call 0x1C5D788
	664 Move W9, [X10]
	665 Add W9, W9, 6
	666 Add X8, X8, W9
	667 Add X0, X8, 312
	668 Move X8, [X0]
	669 Move X7, [X0+8]
	670 Move X3, [X31+32]
	671 Move X0, [X31+40]
	672 Move X1, [X31+16]
	673 Move X4, [X31+24]
	674 Move X5, [X31+8]
	675 Move X22, [X31+64]
	676 Move W6, 409
	677 Move X2, X21
	678 NotImplemented "Instruction BLR not yet implemented."
	679 Move X23, X31
	680 Move W21, 25
	681 Move X0, [X25]
	682 Move W8, [X0+224]
	683 Compare W8, 0
	684 JumpIfNotEqual {686}
	685 Call 0x1C17DFC
	686 Move X8, 0x1EC1000
	687 Move X8, [X8+1360]
	688 Add X0, X31, 112
	689 Move X1, [X8]
	690 Call 0x2BC6018, X0
	691 Compare X23, 0
	692 JumpIfNotEqual {821}
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Compare W21, 0
	695 JumpIfNotEqual {756}
	696 Move W8, [X31+52]
	697 Move X0, X20
	698 Move X1, X22
	699 Move X2, X31
	700 Move [X20+96], W8
	701 Move W8, [X31+56]
	702 Move [X20+16], W8
	703 Call StateObservationContext.DeallocateDerivedStateObserverBuffer, X0, X1
	704 Move W8, [X31+60]
	705 And W8, W8, 255
	706 NotImplemented "Instruction CMP not yet implemented."
	707 Move X0, [X31+184]
	708 Compare X0, 0
	709 JumpIfEqual {776}
	710 Move X8, 0x1EC1000
	711 Move X8, [X8+1424]
	712 Move X1, [X8]
	713 Add X8, X31, 72
	714 Call HashSet`1<Object>.GetEnumerator, X0
	715 NotImplemented "Instruction LDUR not yet implemented."
	716 Move X8, [X31+88]
	717 Move X21, 0x1EC1000
	718 Move [X31+10], V0
	719 Move [X31+176], X8
	720 Move X21, [X21+1432]
	721 Move X1, [X29]
	722 Add X0, X31, 160
	723 Call Enumerator<Object>.MoveNext, X0
	724 Move TEMP, X0
	725 And TEMP, TEMP, 1
	726 Compare TEMP, 1
	727 JumpIfNotEqual {743}
	728 Move X22, [X31+176]
	729 Compare X22, 0
	730 JumpIfEqual {778}
	731 Move X0, [X22+72]
	732 Compare X0, 0
	733 JumpIfEqual {779}
	734 Move X2, [X21]
	735 Move X1, X19
	736 Call HashSet`1<Object>.Remove, X0, X1
	737 Move X0, [X22+80]
	738 Compare X0, 0
	739 JumpIfEqual {777}
	740 Move X2, [X21]
	741 Move X1, X19
	742 Call HashSet`1<Object>.Remove, X0, X1
	743 Move X8, 0x1EC1000
	744 Move X8, [X8+1352]
	745 Add X0, X31, 160
	746 Move X1, [X8]
	747 Call Enumerator<Object>.Dispose, X0
	748 Move X0, [X20+40]
	749 Compare X0, 0
	750 JumpIfEqual {776}
	751 Move X8, 0x1EC1000
	752 Move X8, [X8+1336]
	753 Move X1, X19
	754 Move X2, [X8]
	755 Call Dictionary`2<Object, Object>.Remove, X0, X1
	756 Move X20, [X31+272]
	757 Move X19, [X31+280]
	758 Move X22, [X31+256]
	759 Move X21, [X31+264]
	760 Move X24, [X31+240]
	761 Move X23, [X31+248]
	762 Move X26, [X31+224]
	763 Move X25, [X31+232]
	764 Move X28, [X31+208]
	765 Move X27, [X31+216]
	766 Move X29, [X31+192]
	767 Move X30, [X31+200]
	768 Add X31, X31, 288
	769 Return 
	770 Call 0x1C17F20
	771 Call 0x1C17F20
	772 Call 0x1C17F20
	773 Call 0x1C17F20
	774 Call 0x1C17F20
	775 Call 0x1C17F20
	776 Call 0x1C17F20
	777 Call 0x1C17F20
	778 Call 0x1C17F20
	779 Call 0x1C17F20
	780 Move X0, X19
	781 Call 0x19913C0
	782 Move X0, 0x1E99000
	783 Move X0, [X0+432]
	784 Call 0x1C17D08
	785 Move X1, X0
	786 Move W0, 1
	787 Move X2, X19
	788 Call 0x19973F0
	789 Move X19, X0
	790 Move X0, 0x1EC1000
	791 Move X0, [X0+1544]
	792 Move X0, X19
	793 Call 0x19913C0
	794 Move X0, 0x1E99000
	795 Move X0, [X0+432]
	796 Call 0x1C17D08
	797 Move X1, X0
	798 Move W0, 1
	799 Move X2, X19
	800 Call 0x19973F0
	801 Move X19, X0
	802 Move X0, 0x1EC1000
	803 Move X0, [X0+1552]
	804 Call 0x1C17D08
	805 Move X1, X19
	806 Move X2, X31
	807 Call String.Concat, X0, X1
	808 Move X19, X0
	809 Move X0, 0x1E98000
	810 Move X0, [X0+1456]
	811 Call 0x1C17D08
	812 Call 0x1C17F10
	813 Move X1, X19
	814 Move X2, X31
	815 Move X20, X0
	816 Call InvalidOperationException..ctor, X0, X1
	817 Move X0, X20
	818 Move X1, X24
	819 Call 0x1C17DEC
	820 Call 0x1C17F28
	821 Move X0, X23
	822 Call 0x1C17F18
	823 Call 0x1C17F44
	824 Move X1, X31
	825 Call 0x1C17DEC
	826 Call 0x1C17F20
	827 Call 0x1C17F20
	828 Call 0x1C17F20
	829 Call 0x1C17F20
	830 Call 0x1C17F20
	831 Call 0x1C17F20
	832 Call 0x1C17F20
	833 Call 0x1C17F20
	834 Call 0x1C17F20
	835 Call 0x1C17F20
	836 Call 0x1C17F20
	837 Move W0, 8
	838 Call 0x3EB2AF0
	839 Move X8, [X21]
	840 Move [X0], X8
	841 Move X1, 0x1C59000
	842 Add X1, X1, 3672
	843 Move X2, X31
	844 Call 0x3EB2B00
	845 Move X21, X1
	846 Move X22, X0
	847 Call 0x3EB2AE0
	848 Move X22, X0
	849 Move [X31+64], X31
	850 Move X22, X0
	851 NotImplemented "Instruction CMP not yet implemented."
	852 Move X0, X22
	853 Call 0x3EB2AD0
	854 Move X21, [X0]
	855 Call 0x3EB2AE0
	856 Move X8, 0x1EC1000
	857 Move X8, [X8+1352]
	858 Add X0, X31, 160
	859 Move X1, [X8]
	860 Call Enumerator<Object>.Dispose, X0
	861 Compare X21, 0
	862 JumpIfEqual {748}
	863 Move X0, X21
	864 Call 0x1C17F18
	865 Move X21, X31
	866 Move X22, X0
	867 Move X8, 0x1EC1000
	868 Move X8, [X8+1352]
	869 Move X1, [X8]
	870 Add X0, X31, 160
	871 Call Enumerator<Object>.Dispose, X0
	872 Compare X21, 0
	873 JumpIfEqual {925}
	874 Move X0, X21
	875 Call 0x1C17F18
	876 Move X21, X1
	877 Move X22, X0
	878 NotImplemented "Instruction CMP not yet implemented."
	879 Move X0, X22
	880 Call 0x3EB2AD0
	881 Move X23, [X0]
	882 Call 0x3EB2AE0
	883 Move X22, [X31+64]
	884 Move W21, W31
	885 Move X23, X31
	886 Move X22, X0
	887 Move X0, [X25]
	888 Move W8, [X0+224]
	889 Compare W8, 0
	890 JumpIfNotEqual {892}
	891 Call 0x1C17DFC
	892 Move X8, 0x1EC1000
	893 Move X8, [X8+1360]
	894 Move X1, [X8]
	895 Add X0, X31, 112
	896 Call 0x2BC6018, X0
	897 Compare X23, 0
	898 JumpIfEqual {925}
	899 Move X0, X23
	900 Call 0x1C17F18
	901 Move X22, X0
	902 NotImplemented "Instruction CMP not yet implemented."
	903 Move X0, X22
	904 Call 0x3EB2AD0
	905 Move X24, [X0]
	906 Call 0x3EB2AE0
	907 Move X8, 0x1EC1000
	908 Move X8, [X8+1352]
	909 Add X0, X31, 160
	910 Move X1, [X8]
	911 Call Enumerator<Object>.Dispose, X0
	912 Compare X24, 0
	913 JumpIfEqual {343}
	914 Move X0, X24
	915 Call 0x1C17F18
	916 Move X24, X31
	917 Move X22, X0
	918 Move X8, 0x1EC1000
	919 Move X8, [X8+1352]
	920 Move X1, [X8]
	921 Add X0, X31, 160
	922 Call Enumerator<Object>.Dispose, X0
	923 Compare X24, 0
	924 JumpIfNotEqual {927}
	925 Move X0, X22
	926 Call 0x1D2D690
	927 Move X0, X24
	928 Call 0x1C17F18
	929 Call 0x1991590

Method: System.Collections.Generic.SortedSet`1<SpatialSys.ObservableState.StateObservationContext/ObserverData> AllocateDerivedStateObserverBuffer()

Disassembly:
	0x035C8A64 B 0x35C8A84
	0x035C8A68 B 0x35C8A84
	0x035C8A6C B 0x35C8A84
	0x035C8A70 B 0x35C8A84
	0x035C8A74 B 0x35C8A84
	0x035C8A78 B 0x35C8A84
	0x035C8A7C B 0x35C8A84
	0x035C8A80 B 0x35C8ADC
	0x035C8A84 CMP W1, 0x1
	0x035C8A88 B.NE 0x35C8AA0
	0x035C8A8C BL 0x3EB1AD0
	0x035C8A90 LDR X20, [X0]
	0x035C8A94 BL 0x3EB1AE0
	0x035C8A98 MOV W24, W31
	0x035C8A9C B 0x35C89A4
	0x035C8AA0 STR X0, [X31]
	0x035C8AA4 MOV X20, X31
	0x035C8AA8 B 0x35C8AB0
	0x035C8AAC STR X0, [X31]
	0x035C8AB0 LDR X0, [X23]
	0x035C8AB4 LDR W8, [X0 + 0xE0]
	0x035C8AB8 CBNZ W8, 0x35C8AC0
	0x035C8ABC BL 0x1C16DFC
	0x035C8AC0 LDR X1, [X21]
	0x035C8AC4 ADD X0, X31, 0x30
	0x035C8AC8 BL 0x2BC5018
	0x035C8ACC CBZ X20, 0x35C8B2C
	0x035C8AD0 MOV X0, X20
	0x035C8AD4 BL 0x1C16F18
	0x035C8AD8 B 0x35C8ADC
	0x035C8ADC CMP W1, 0x1
	0x035C8AE0 STR X0, [X31]
	0x035C8AE4 B.NE 0x35C8B10
	0x035C8AE8 LDR X0, [X31]
	0x035C8AEC BL 0x3EB1AD0
	0x035C8AF0 LDR X20, [X0]
	0x035C8AF4 BL 0x3EB1AE0
	0x035C8AF8 LDR X1, [X27]
	0x035C8AFC ADD X0, X31, 0x60
	0x035C8B00 BL 0x2BC3C60
	0x035C8B04 CBZ X20, 0x35C88E4
	0x035C8B08 MOV X0, X20
	0x035C8B0C BL 0x1C16F18
	0x035C8B10 MOV X20, X31
	0x035C8B14 B 0x35C8B1C
	0x035C8B18 STR X0, [X31]
	0x035C8B1C LDR X1, [X27]
	0x035C8B20 ADD X0, X31, 0x60
	0x035C8B24 BL 0x2BC3C60
	0x035C8B28 CBNZ X20, 0x35C8B34
	0x035C8B2C LDR X0, [X31]
	0x035C8B30 BL 0x1D2C690
	0x035C8B34 MOV X0, X20
	0x035C8B38 BL 0x1C16F18
	0x035C8B3C BL 0x1990590

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xE19000
	005 Move W8, [X20+447]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0xB70000
	012 Move X0, [X0+3712]
	013 Call 0x1C17CF4
	014 Move X0, 0xB71000
	015 Move X0, [X0+72]
	016 Call 0x1C17CF4
	017 Move X0, 0xB71000
	018 Move X0, [X0+80]
	019 Call 0x1C17CF4
	020 Move X0, 0xB70000
	021 Move X0, [X0+3736]
	022 Call 0x1C17CF4
	023 Move X0, 0xB70000
	024 Move X0, [X0+3744]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+447], W8
	028 Move X0, [X19+104]
	029 Compare X0, 0
	030 JumpIfEqual {64}
	031 Move W8, [X0+32]
	032 Compare W8, 0
	033 JumpIfEqual {42}
	034 Move X8, 0xB71000
	035 Move X8, [X8+72]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, [X8]
	039 Move X30, [X31+32]
	040 Call Queue`1<Object>.Dequeue, X0
	041 Return X0
	042 Move X8, 0xB70000
	043 Move X8, [X8+3712]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X19, X0
	048 Call Object..ctor, X0
	049 Move X8, 0xB70000
	050 Move X8, [X8+3744]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X8, 0xB70000
	054 Move X8, [X8+3736]
	055 Move X1, X19
	056 Move X20, X0
	057 Move X2, [X8]
	058 Call 0x25F7FBC, X0, X1
	059 Move X0, X20
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Return X0
	064 Call 0x1C17F20

Method: System.Void DeallocateDerivedStateObserverBuffer(System.Collections.Generic.SortedSet`1<SpatialSys.ObservableState.StateObservationContext/ObserverData> derivedStateObserverBuffer)

Disassembly:
	0x035C8B40 SUB X31, X31, 0xA0
	0x035C8B44 STP X29, X30, [X31 + 0x40]
	0x035C8B48 STP X28, X27, [X31 + 0x50]
	0x035C8B4C STP X26, X25, [X31 + 0x60]
	0x035C8B50 STP X24, X23, [X31 + 0x70]
	0x035C8B54 STP X22, X21, [X31 + 0x80]
	0x035C8B58 STP X20, X19, [X31 + 0x90]
	0x035C8B5C ADRP X20, 0xE18000
	0x035C8B60 LDRB W8, [X20 + 0x1CD]
	0x035C8B64 MOV X19, X0
	0x035C8B68 TBNZ X8, 0x0, 0x35C8BEC
	0x035C8B6C ADRP X0, 0xB70000
	0x035C8B70 LDR X0, [X0 + 0xB0]
	0x035C8B74 BL 0x1C16CF4
	0x035C8B78 ADRP X0, 0xB70000
	0x035C8B7C LDR X0, [X0 + 0xB8]
	0x035C8B80 BL 0x1C16CF4
	0x035C8B84 ADRP X0, 0xB70000
	0x035C8B88 LDR X0, [X0 + 0xC0]
	0x035C8B8C BL 0x1C16CF4
	0x035C8B90 ADRP X0, 0xB70000
	0x035C8B94 LDR X0, [X0 + 0xC8]
	0x035C8B98 BL 0x1C16CF4
	0x035C8B9C ADRP X0, 0xB70000
	0x035C8BA0 LDR X0, [X0 + 0xD0]
	0x035C8BA4 BL 0x1C16CF4
	0x035C8BA8 ADRP X0, 0xB2B000
	0x035C8BAC LDR X0, [X0 + 0x750]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xE19000
	006 Move W8, [X21+448]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB71000
	014 Move X0, [X0+88]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+448], W8
	018 Compare X19, 0
	019 JumpIfEqual {38}
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X9, [X8+728]
	023 Move X1, [X8+736]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20+104]
	026 Compare X0, 0
	027 JumpIfEqual {38}
	028 Move X8, 0xB71000
	029 Move X8, [X8+88]
	030 Move X1, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, [X8]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call Queue`1<Object>.Enqueue, X0, X1
	037 Return 
	038 Call 0x1C17F20

Method: System.Void RegisterObserversForNewState(SpatialSys.ObservableState.IStateObject parentState, T param1)

Disassembly:
	0x022644E8 STP X22, X21, [X31 + 0x70]
	0x022644EC STP X20, X19, [X31 + 0x80]
	0x022644F0 LDR X8, [X3 + 0x38]
	0x022644F4 MOV X19, X3
	0x022644F8 MOV W20, W2
	0x022644FC MOV X21, X1
	0x02264500 MOV X22, X0
	0x02264504 CBNZ X8, 0x2264564
	0x02264508 ADRP X0, 0x1EB8000
	0x0226450C LDR X0, [X0 + 0x540]
	0x02264510 BL 0x1C16CF4
	0x02264514 ADRP X0, 0x1EB8000
	0x02264518 LDR X0, [X0 + 0x548]
	0x0226451C BL 0x1C16CF4
	0x02264520 ADRP X0, 0x1EB8000
	0x02264524 LDR X0, [X0 + 0x560]
	0x02264528 BL 0x1C16CF4
	0x0226452C ADRP X0, 0x1EB8000
	0x02264530 LDR X0, [X0 + 0x570]
	0x02264534 BL 0x1C16CF4
	0x02264538 ADRP X0, 0x1EB8000
	0x0226453C LDR X0, [X0 + 0x588]
	0x02264540 BL 0x1C16CF4
	0x02264544 ADRP X0, 0x1EB8000
	0x02264548 LDR X0, [X0 + 0x590]
	0x0226454C BL 0x1C16CF4
	0x02264550 LDR X8, [X19 + 0x38]
	0x02264554 CBNZ X8, 0x2264564
	0x02264558 MOV X0, X19
	0x0226455C BL 0x1C5C6E0
	0x02264560 LDR X8, [X19 + 0x38]
	0x02264564 STP X31, X31, [X31 + 0x40]
	0x02264568 STP X31, X31, [X31 + 0x20]
	0x0226456C STR X31, [X31 + 0x30]
	0x02264570 LDR X1, [X8]
	0x02264574 LDRB W8, [X1 + 0x135]
	0x02264578 TBNZ X8, 0x0, 0x2264588
	0x0226457C MOV X0, X1
	0x02264580 BL 0x1C5C684
	0x02264584 MOV X1, X0
	0x02264588 MOV X0, X21
	0x0226458C BL 0x1C16E00
	0x02264590 CBZ X0, 0x2264784
	0x02264594 LDR X8, [X19 + 0x38]
	0x02264598 MOV X23, X0
	0x0226459C LDR X1, [X8]
	0x022645A0 LDRB W8, [X1 + 0x135]
	0x022645A4 TBNZ X8, 0x0, 0x22645B4
	0x022645A8 MOV X0, X1
	0x022645AC BL 0x1C5C684
	0x022645B0 MOV X1, X0
	0x022645B4 LDR X8, [X23]
	0x022645B8 LDRH W9, [X8 + 0x12E]
	0x022645BC CBZ X9, 0x22645E0
	0x022645C0 LDR X10, [X8 + 0xB0]
	0x022645C4 ADD X10, X10, 0x8
	0x022645C8 LDUR X11, [X10 - 0x8]
	0x022645CC CMP X11, X1
	0x022645D0 B.EQ 0x22645F0
	0x022645D4 SUBS X9, X9, 0x1
	0x022645D8 ADD X10, X10, 0x10
	0x022645DC B.NE 0x22645C8
	0x022645E0 MOV X0, X23
	0x022645E4 MOV W2, W31
	0x022645E8 BL 0x1C5C788
	0x022645EC B 0x22645FC
	0x022645F0 LDRSW X9, [X10]
	0x022645F4 ADD X8, X8, X9, 0x4, LSL
	0x022645F8 ADD X0, X8, 0x138
	0x022645FC LDP X8, X3, [X0]
	0x02264600 ADD X2, X31, 0x48
	0x02264604 MOV X0, X23
	0x02264608 MOV W1, W20
	0x0226460C BLR X8
	0x02264610 TBZ X0, 0x0, 0x2264764
	0x02264614 LDR X0, [X22 + 0x28]
	0x02264618 CBZ X0, 0x226482C
	0x0226461C ADRP X8, 0x1EB8000
	0x02264620 LDR X8, [X8 + 0x540]
	0x02264624 ADD X2, X31, 0x40
	0x02264628 MOV X1, X21
	0x0226462C LDR X3, [X8]
	0x02264630 BL 0x2AA6B2C
	0x02264634 TBZ X0, 0x0, 0x2264764
	0x02264638 LDR X0, [X31 + 0x40]
	0x0226463C CBZ X0, 0x226482C
	0x02264640 ADRP X8, 0x1EB8000
	0x02264644 LDR X8, [X8 + 0x590]
	0x02264648 LDR X1, [X8]
	0x0226464C ADD X8, X31, 0x8
	0x02264650 BL 0x2DBE924
	0x02264654 LDUR V0, [X31 + 0x8]
	0x02264658 LDR X8, [X31 + 0x18]
	0x0226465C ADRP X24, 0x1EB8000
	0x02264660 LDR X24, [X24 + 0x560]
	0x02264664 STR V0, [X31 + 0x2]
	0x02264668 STR X8, [X31 + 0x30]
	0x0226466C ADRP X25, 0x1EB8000
	0x02264670 LDR X25, [X25 + 0x588]
	0x02264674 LDR X1, [X24]
	0x02264678 ADD X0, X31, 0x20
	0x0226467C BL 0x2BC3C64
	0x02264680 TBZ X0, 0x0, 0x2264750
	0x02264684 LDR X23, [X31 + 0x30]
	0x02264688 CBZ X23, 0x226477C
	0x0226468C LDRB W8, [X23 + 0x60]
	0x02264690 CBNZ W8, 0x2264674
	0x02264694 LDRB W8, [X23 + 0x28]
	0x02264698 CBZ W8, 0x22646F8
	0x0226469C LDR X0, [X23 + 0x48]
	0x022646A0 CBZ X0, 0x2264780
	0x022646A4 LDR X2, [X25]
	0x022646A8 MOV X1, X21
	0x022646AC BL 0x2DBE4B0
	0x022646B0 TBZ X0, 0x0, 0x22646F8
	0x022646B4 STR W20, [X31 + 0x8]
	0x022646B8 LDR X8, [X19 + 0x38]
	0x022646BC LDR X0, [X8 + 0x8]
	0x022646C0 ADD X1, X31, 0x8
	0x022646C4 BL 0x1C16E04
	0x022646C8 LDR X1, [X23 + 0x30]
	0x022646CC MOV X2, X31
	0x022646D0 BL 0x33CB4B0
	0x022646D4 TBZ X0, 0x0, 0x2264674
	0x022646D8 LDR X1, [X31 + 0x48]
	0x022646DC LDR W3, [X23 + 0x18]
	0x022646E0 MOVZ W4, 0x1
	0x022646E4 MOV X0, X22
	0x022646E8 MOV X2, X23
	0x022646EC MOV X5, X31
	0x022646F0 BL 0x35C6FF0
	0x022646F4 B 0x2264674
	0x022646F8 LDR W8, [X23 + 0x18]
	0x022646FC CMP W8, 0x2
	0x02264700 B.EQ 0x2264728
	0x02264704 CMP W8, 0x1
	0x02264708 B.NE 0x2264674
	0x0226470C LDR X0, [X23 + 0x48]
	0x02264710 CBZ X0, 0x2264830
	0x02264714 LDR X2, [X25]
	0x02264718 MOV X1, X21
	0x0226471C BL 0x2DBE4B0
	0x02264720 TBZ X0, 0x0, 0x2264674
	0x02264724 LDR W8, [X23 + 0x18]
	0x02264728 LDR X1, [X31 + 0x48]
	0x0226472C CMP W8, 0x2
	0x02264730 CSET W8, EQ
	0x02264734 UBFM W3, W8, 0x1F, 0x1E
	0x02264738 MOVZ W4, 0x1
	0x0226473C MOV X0, X22
	0x02264740 MOV X2, X23
	0x02264744 MOV X5, X31
	0x02264748 BL 0x35C6FF0
	0x0226474C B 0x2264674
	0x02264750 ADRP X8, 0x1EB8000
	0x02264754 LDR X8, [X8 + 0x548]
	0x02264758 ADD X0, X31, 0x20
	0x0226475C LDR X1, [X8]
	0x02264760 BL 0x2BC3C60
	0x02264764 LDP X20, X19, [X31 + 0x80]
	0x02264768 LDP X22, X21, [X31 + 0x70]
	0x0226476C LDP X24, X23, [X31 + 0x60]
	0x02264770 LDP X30, X25, [X31 + 0x50]
	0x02264774 ADD X31, X31, 0x90
	0x02264778 RET
	0x0226477C BL 0x1C16F20
	0x02264780 BL 0x1C16F20
	0x02264784 MOV X0, X21
	0x02264788 BL 0x19903C0
	0x0226478C ADRP X0, 0x1E90000
	0x02264790 LDR X0, [X0 + 0x1B0]
	0x02264794 BL 0x1C16D08
	0x02264798 MOV X1, X0
	0x0226479C MOVZ W0, 0x1
	0x022647A0 MOV X2, X21
	0x022647A4 BL 0x19963F0
	0x022647A8 STR W20, [X31 + 0x8]
	0x022647AC LDR X8, [X19 + 0x38]
	0x022647B0 MOV X20, X0
	0x022647B4 ADD X1, X31, 0x8
	0x022647B8 LDR X8, [X8 + 0x8]
	0x022647BC MOV X0, X8
	0x022647C0 BL 0x1C16E04
	0x022647C4 MOV X21, X0
	0x022647C8 ADRP X0, 0x1EB8000
	0x022647CC LDR X0, [X0 + 0x618]
	0x022647D0 BL 0x1C16D08
	0x022647D4 MOV X22, X0
	0x022647D8 ADRP X0, 0x1EB8000
	0x022647DC LDR X0, [X0 + 0x620]
	0x022647E0 BL 0x1C16D08
	0x022647E4 MOV X1, X0
	0x022647E8 MOV X0, X22
	0x022647EC MOV X2, X20
	0x022647F0 MOV X3, X21
	0x022647F4 MOV X4, X31
	0x022647F8 BL 0x3227C18
	0x022647FC MOV X20, X0
	0x02264800 ADRP X0, 0x1E8F000
	0x02264804 LDR X0, [X0 + 0x5B0]
	0x02264808 BL 0x1C16D08
	0x0226480C BL 0x1C16F10
	0x02264810 MOV X1, X20
	0x02264814 MOV X2, X31
	0x02264818 MOV X21, X0
	0x0226481C BL 0x337DF1C
	0x02264820 MOV X0, X21
	0x02264824 MOV X1, X19
	0x02264828 BL 0x1C16DEC
	0x0226482C BL 0x1C16F20
	0x02264830 BL 0x1C16F20
	0x02264834 B 0x2264858
	0x02264838 B 0x2264858
	0x0226483C B 0x2264858
	0x02264840 B 0x2264858
	0x02264844 B 0x2264858
	0x02264848 B 0x2264858
	0x0226484C B 0x2264858
	0x02264850 B 0x2264858
	0x02264854 B 0x2264858
	0x02264858 MOV X19, X0
	0x0226485C CMP W1, 0x1
	0x02264860 B.NE 0x2264894
	0x02264864 MOV X0, X19
	0x02264868 BL 0x3EB1AD0
	0x0226486C LDR X20, [X0]
	0x02264870 BL 0x3EB1AE0
	0x02264874 ADRP X8, 0x1EB8000
	0x02264878 LDR X8, [X8 + 0x548]
	0x0226487C ADD X0, X31, 0x20
	0x02264880 LDR X1, [X8]
	0x02264884 BL 0x2BC3C60
	0x02264888 CBZ X20, 0x2264764
	0x0226488C MOV X0, X20
	0x02264890 BL 0x1C16F18
	0x02264894 MOV X20, X31
	0x02264898 B 0x22648A0
	0x0226489C MOV X19, X0
	0x022648A0 ADRP X8, 0x1EB8000
	0x022648A4 LDR X8, [X8 + 0x548]
	0x022648A8 LDR X1, [X8]
	0x022648AC ADD X0, X31, 0x20
	0x022648B0 BL 0x2BC3C60
	0x022648B4 CBNZ X20, 0x22648C0
	0x022648B8 MOV X0, X19
	0x022648BC BL 0x1D2C690
	0x022648C0 MOV X0, X20
	0x022648C4 BL 0x1C16F18
	0x022648C8 BL 0x1990590
	0x022648CC SUB X31, X31, 0x90
	0x022648D0 STP X30, X25, [X31 + 0x50]
	0x022648D4 STP X24, X23, [X31 + 0x60]
	0x022648D8 STP X22, X21, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X8, [X3+56]
	011 Move X19, X3
	012 Move W22, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {41}
	017 Move X0, 0x1EB9000
	018 Move X0, [X0+1344]
	019 Call 0x1C17CF4
	020 Move X0, 0x1EB9000
	021 Move X0, [X0+1352]
	022 Call 0x1C17CF4
	023 Move X0, 0x1EB9000
	024 Move X0, [X0+1376]
	025 Call 0x1C17CF4
	026 Move X0, 0x1EB9000
	027 Move X0, [X0+1392]
	028 Call 0x1C17CF4
	029 Move X0, 0x1EB9000
	030 Move X0, [X0+1416]
	031 Call 0x1C17CF4
	032 Move X0, 0x1EB9000
	033 Move X0, [X0+1424]
	034 Call 0x1C17CF4
	035 Move X8, [X19+56]
	036 Compare X8, 0
	037 JumpIfNotEqual {41}
	038 Move X0, X19
	039 Call 0x1C5D6E0
	040 Move X8, [X19+56]
	041 Move [X31+64], X31
	042 Move [X31+72], X31
	043 Move [X31+32], X31
	044 Move [X31+40], X31
	045 Move [X31+48], X31
	046 Move X1, [X8]
	047 And W24, W22, 1
	048 Move W8, [X1+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {56}
	053 Move X0, X1
	054 Call 0x1C5D684
	055 Move X1, X0
	056 Move X0, X20
	057 Call 0x1C17E00
	058 Compare X0, 0
	059 JumpIfEqual {213}
	060 Move X8, [X19+56]
	061 Move X23, X0
	062 Move X1, [X8]
	063 Move W8, [X1+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {71}
	068 Move X0, X1
	069 Call 0x1C5D684
	070 Move X1, X0
	071 Move X8, [X23]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X23
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X3, [X0+8]
	089 And W1, W22, 1
	090 Add X2, X31, 72
	091 Move X0, X23
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {201}
	097 Move X0, [X21+40]
	098 Compare X0, 0
	099 JumpIfEqual {255}
	100 Move X8, 0x1EB9000
	101 Move X8, [X8+1344]
	102 Add X2, X31, 64
	103 Move X1, X20
	104 Move X3, [X8]
	105 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {201}
	110 Move X0, [X31+64]
	111 Compare X0, 0
	112 JumpIfEqual {255}
	113 Move X8, 0x1EB9000
	114 Move X8, [X8+1424]
	115 Move X1, [X8]
	116 Add X8, X31, 8
	117 Call HashSet`1<Object>.GetEnumerator, X0
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 Move X8, [X31+24]
	120 Move X23, 0x1EB9000
	121 Move X23, [X23+1376]
	122 Move [X31+2], V0
	123 Move [X31+48], X8
	124 Move X25, 0x1EB9000
	125 Move X25, [X25+1416]
	126 Move X1, [X23]
	127 Add X0, X31, 32
	128 Call Enumerator<Object>.MoveNext, X0
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {196}
	133 Move X22, [X31+48]
	134 Compare X22, 0
	135 JumpIfEqual {211}
	136 Move W8, [X22+96]
	137 Compare W8, 0
	138 JumpIfNotEqual {126}
	139 Move W8, [X22+40]
	140 Compare W8, 0
	141 JumpIfEqual {171}
	142 Move X0, [X22+72]
	143 Compare X0, 0
	144 JumpIfEqual {212}
	145 Move X2, [X25]
	146 Move X1, X20
	147 Call HashSet`1<Object>.Contains, X0, X1
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {171}
	152 Move [X31+8], W24
	153 Move X8, [X19+56]
	154 Move X0, [X8+8]
	155 Add X1, X31, 8
	156 Call 0x1C17E04
	157 Move X1, [X22+48]
	158 Move X2, X31
	159 Call Object.Equals, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {126}
	164 Move X1, [X31+72]
	165 Move W3, [X22+24]
	166 Move W4, 1
	167 Move X0, X21
	168 Move X2, X22
	169 Move X5, X31
	170 Call StateObservationContext.AddObserverToScope, X0, X1, X2, X3, X4
	171 Move W8, [X22+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, [X22+72]
	175 Compare X0, 0
	176 JumpIfEqual {256}
	177 Move X2, [X25]
	178 Move X1, X20
	179 Call HashSet`1<Object>.Contains, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {126}
	184 Move W8, [X22+24]
	185 Move X1, [X31+72]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CSET not yet implemented."
	188 Move W3, W8
	189 ShiftRight W3, 31
	190 And W3, W3, 0x3FFFFFFF
	191 Move W4, 1
	192 Move X0, X21
	193 Move X2, X22
	194 Move X5, X31
	195 Call StateObservationContext.AddObserverToScope, X0, X1, X2, X3, X4
	196 Move X8, 0x1EB9000
	197 Move X8, [X8+1352]
	198 Add X0, X31, 32
	199 Move X1, [X8]
	200 Call Enumerator<Object>.Dispose, X0
	201 Move X20, [X31+128]
	202 Move X19, [X31+136]
	203 Move X22, [X31+112]
	204 Move X21, [X31+120]
	205 Move X24, [X31+96]
	206 Move X23, [X31+104]
	207 Move X30, [X31+80]
	208 Move X25, [X31+88]
	209 Add X31, X31, 144
	210 Return 
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Move X0, X20
	214 Call 0x19913C0
	215 Move X0, 0x1E91000
	216 Move X0, [X0+432]
	217 Call 0x1C17D08
	218 Move X1, X0
	219 Move W0, 1
	220 Move X2, X20
	221 Call 0x19973F0
	222 Move [X31+8], W24
	223 Move X8, [X19+56]
	224 Move X20, X0
	225 Add X1, X31, 8
	226 Move X8, [X8+8]
	227 Move X0, X8
	228 Call 0x1C17E04
	229 Move X21, X0
	230 Move X0, 0x1EB9000
	231 Move X0, [X0+1560]
	232 Call 0x1C17D08
	233 Move X22, X0
	234 Move X0, 0x1EB9000
	235 Move X0, [X0+1568]
	236 Call 0x1C17D08
	237 Move X1, X0
	238 Move X0, X22
	239 Move X2, X20
	240 Move X3, X21
	241 Move X4, X31
	242 Call String.Format, X0, X1, X2, X3
	243 Move X20, X0
	244 Move X0, 0x1E90000
	245 Move X0, [X0+1456]
	246 Call 0x1C17D08
	247 Call 0x1C17F10
	248 Move X1, X20
	249 Move X2, X31
	250 Move X21, X0
	251 Call InvalidOperationException..ctor, X0, X1
	252 Move X0, X21
	253 Move X1, X19
	254 Call 0x1C17DEC
	255 Call 0x1C17F20
	256 Call 0x1C17F20
	257 Move X19, X0
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X0, X19
	260 Call 0x3EB2AD0
	261 Move X20, [X0]
	262 Call 0x3EB2AE0
	263 Move X8, 0x1EB9000
	264 Move X8, [X8+1352]
	265 Add X0, X31, 32
	266 Move X1, [X8]
	267 Call Enumerator<Object>.Dispose, X0
	268 Compare X20, 0
	269 JumpIfEqual {201}
	270 Move X0, X20
	271 Call 0x1C17F18
	272 Move X20, X31
	273 Move X19, X0
	274 Move X8, 0x1EB9000
	275 Move X8, [X8+1352]
	276 Move X1, [X8]
	277 Add X0, X31, 32
	278 Call Enumerator<Object>.Dispose, X0
	279 Compare X20, 0
	280 JumpIfNotEqual {283}
	281 Move X0, X19
	282 Call 0x1D2D690
	283 Move X0, X20
	284 Call 0x1C17F18
	285 Call 0x1991590

Method: System.Void NotifyObserversAndReset(System.Boolean logObservers = True, System.Boolean rethrowObserverExceptions = False)

Disassembly:
	0x035C8BB0 BL 0x1C16CF4
	0x035C8BB4 ADRP X0, 0xB70000
	0x035C8BB8 LDR X0, [X0 + 0xD8]
	0x035C8BBC BL 0x1C16CF4
	0x035C8BC0 ADRP X0, 0xB54000
	0x035C8BC4 LDR X0, [X0 + 0x630]
	0x035C8BC8 BL 0x1C16CF4
	0x035C8BCC ADRP X0, 0xB70000
	0x035C8BD0 LDR X0, [X0 + 0xE0]
	0x035C8BD4 BL 0x1C16CF4
	0x035C8BD8 ADRP X0, 0xB70000
	0x035C8BDC LDR X0, [X0 + 0xE8]
	0x035C8BE0 BL 0x1C16CF4
	0x035C8BE4 MOVZ W8, 0x1
	0x035C8BE8 STRB W8, [X20 + 0x1CD]
	0x035C8BEC STP X31, X31, [X31 + 0x20]
	0x035C8BF0 STR X31, [X31 + 0x30]
	0x035C8BF4 LDR X0, [X19 + 0x18]
	0x035C8BF8 CBZ X0, 0x35C8DC8
	0x035C8BFC ADRP X25, 0xB54000
	0x035C8C00 ADRP X27, 0xB70000
	0x035C8C04 ADRP X28, 0xB70000
	0x035C8C08 ADRP X29, 0xB2B000
	0x035C8C0C ADRP X24, 0xB70000
	0x035C8C10 ADRP X26, 0xB70000
	0x035C8C14 LDR X25, [X25 + 0x630]
	0x035C8C18 LDR X27, [X27 + 0xD0]
	0x035C8C1C LDR X28, [X28 + 0xB8]
	0x035C8C20 LDR X29, [X29 + 0x750]
	0x035C8C24 LDR X24, [X24 + 0xE8]
	0x035C8C28 LDR X26, [X26 + 0xC8]
	0x035C8C2C MOV W20, W31
	0x035C8C30 LDR W8, [X0 + 0x18]
	0x035C8C34 CMP W20, W8
	0x035C8C38 B.GE 0x35C8DA8
	0x035C8C3C LDR X2, [X25]
	0x035C8C40 MOV W1, W20
	0x035C8C44 BL 0x301BCCC
	0x035C8C48 CBZ X0, 0x35C8D3C
	0x035C8C4C MOV X21, X0
	0x035C8C50 LDR X0, [X19 + 0x10]
	0x035C8C54 CBZ X0, 0x35C8DC8
	0x035C8C58 ADRP X8, 0xB70000
	0x035C8C5C LDR X8, [X8 + 0xE0]
	0x035C8C60 MOV W1, W20
	0x035C8C64 LDR X2, [X8]
	0x035C8C68 BL 0x301BCCC
	0x035C8C6C LDR X1, [X27]
	0x035C8C70 MOV X22, X0
	0x035C8C74 ADD X8, X31, 0x8
	0x035C8C78 MOV X0, X21
	0x035C8C7C BL 0x2DBE924
	0x035C8C80 LDUR V0, [X31 + 0x8]
	0x035C8C84 LDR X8, [X31 + 0x18]
	0x035C8C88 STR V0, [X31 + 0x2]
	0x035C8C8C STR X8, [X31 + 0x30]
	0x035C8C90 LDR X1, [X28]
	0x035C8C94 ADD X0, X31, 0x20
	0x035C8C98 BL 0x2BC3C64
	0x035C8C9C TBZ X0, 0x0, 0x35C8D1C
	0x035C8CA0 LDR X23, [X31 + 0x30]
	0x035C8CA4 CBZ X23, 0x35C8D4C
	0x035C8CA8 LDR X8, [X23]
	0x035C8CAC LDR X1, [X29]
	0x035C8CB0 LDRH W9, [X8 + 0x12E]
	0x035C8CB4 CBZ X9, 0x35C8CD8
	0x035C8CB8 LDR X10, [X8 + 0xB0]
	0x035C8CBC ADD X10, X10, 0x8
	0x035C8CC0 LDUR X11, [X10 - 0x8]
	0x035C8CC4 CMP X11, X1
	0x035C8CC8 B.EQ 0x35C8CE8
	0x035C8CCC SUBS X9, X9, 0x1
	0x035C8CD0 ADD X10, X10, 0x10
	0x035C8CD4 B.NE 0x35C8CC0
	0x035C8CD8 MOVZ W2, 0x6
	0x035C8CDC MOV X0, X23
	0x035C8CE0 BL 0x1C5C788
	0x035C8CE4 B 0x35C8CF8
	0x035C8CE8 LDR W9, [X10]
	0x035C8CEC ADD W9, W9, 0x6
	0x035C8CF0 ADD X8, X8, W9, 0x4, SXTW
	0x035C8CF4 ADD X0, X8, 0x138
	0x035C8CF8 LDP X8, X1, [X0]
	0x035C8CFC MOV X0, X23
	0x035C8D00 BLR X8
	0x035C8D04 CBZ X22, 0x35C8D54
	0x035C8D08 LDR X2, [X24]
	0x035C8D0C MOV X0, X22
	0x035C8D10 MOV X1, X23
	0x035C8D14 BL 0x24F1750
	0x035C8D18 B 0x35C8C90
	0x035C8D1C ADRP X8, 0xB70000
	0x035C8D20 LDR X8, [X8 + 0xB0]
	0x035C8D24 ADD X0, X31, 0x20
	0x035C8D28 LDR X1, [X8]
	0x035C8D2C BL 0x2BC3C60
	0x035C8D30 LDR X1, [X26]
	0x035C8D34 MOV X0, X21
	0x035C8D38 BL 0x2DBE450
	0x035C8D3C LDR X0, [X19 + 0x18]
	0x035C8D40 ADD W20, W20, 0x1
	0x035C8D44 CBNZ X0, 0x35C8C30
	0x035C8D48 B 0x35C8DC8
	0x035C8D4C BL 0x1C16F20
	0x035C8D50 B 0x35C8DD4
	0x035C8D54 BL 0x1C16F20
	0x035C8D58 B 0x35C8DD4
	0x035C8D5C B 0x35C8D6C
	0x035C8D60 B 0x35C8D6C
	0x035C8D64 B 0x35C8D6C
	0x035C8D68 B 0x35C8D6C
	0x035C8D6C MOV X22, X0
	0x035C8D70 CMP W1, 0x1
	0x035C8D74 B.NE 0x35C8DCC
	0x035C8D78 MOV X0, X22
	0x035C8D7C BL 0x3EB1AD0
	0x035C8D80 LDR X23, [X0]
	0x035C8D84 BL 0x3EB1AE0
	0x035C8D88 ADRP X8, 0xB70000
	0x035C8D8C LDR X8, [X8 + 0xB0]
	0x035C8D90 ADD X0, X31, 0x20
	0x035C8D94 LDR X1, [X8]
	0x035C8D98 BL 0x2BC3C60
	0x035C8D9C CBZ X23, 0x35C8D30
	0x035C8DA0 MOV X0, X23
	0x035C8DA4 BL 0x1C16F18
	0x035C8DA8 LDP X20, X19, [X31 + 0x90]
	0x035C8DAC LDP X22, X21, [X31 + 0x80]
	0x035C8DB0 LDP X24, X23, [X31 + 0x70]
	0x035C8DB4 LDP X26, X25, [X31 + 0x60]
	0x035C8DB8 LDP X28, X27, [X31 + 0x50]
	0x035C8DBC LDP X29, X30, [X31 + 0x40]
	0x035C8DC0 ADD X31, X31, 0xA0
	0x035C8DC4 RET
	0x035C8DC8 BL 0x1C16F20
	0x035C8DCC MOV X23, X31
	0x035C8DD0 B 0x35C8DD8
	0x035C8DD4 MOV X22, X0
	0x035C8DD8 ADRP X8, 0xB70000
	0x035C8DDC LDR X8, [X8 + 0xB0]
	0x035C8DE0 LDR X1, [X8]
	0x035C8DE4 ADD X0, X31, 0x20
	0x035C8DE8 BL 0x2BC3C60
	0x035C8DEC CBNZ X23, 0x35C8DF8
	0x035C8DF0 MOV X0, X22
	0x035C8DF4 BL 0x1D2C690
	0x035C8DF8 MOV X0, X23
	0x035C8DFC BL 0x1C16F18
	0x035C8E00 BL 0x1990590
	0x035C8E04 STR X30, [X31 - 0x20]!
	0x035C8E08 STP X20, X19, [X31 + 0x10]
	0x035C8E0C ADRP X19, 0xE18000
	0x035C8E10 ADRP X20, 0xB2B000
	0x035C8E14 LDRB W8, [X19 + 0x1C3]
	0x035C8E18 LDR X20, [X20 + 0x6E0]
	0x035C8E1C TBNZ X8, 0x0, 0x35C8E34
	0x035C8E20 ADRP X0, 0xB2B000
	0x035C8E24 LDR X0, [X0 + 0x6E0]
	0x035C8E28 BL 0x1C16CF4
	0x035C8E2C MOVZ W8, 0x1
	0x035C8E30 STRB W8, [X19 + 0x1C3]
	0x035C8E34 LDR X8, [X20]
	0x035C8E38 LDP X20, X19, [X31 + 0x10]
	0x035C8E3C MOVZ W9, 0x2328
	0x035C8E40 LDR X8, [X8 + 0xB8]
	0x035C8E44 STR W9, [X8]
	0x035C8E48 LDR X30, [X31], #0x20
	0x035C8E4C RET
	0x035C8E50 LDR X0, [X0 + 0x10]
	0x035C8E54 RET
	0x035C8E58 STR X1, [X0 + 0x10]
	0x035C8E5C RET
	0x035C8E60 LDR X0, [X0 + 0x48]
	0x035C8E64 RET
	0x035C8E68 STR X1, [X0 + 0x48]
	0x035C8E6C RET
	0x035C8E70 LDR X0, [X0 + 0x50]
	0x035C8E74 RET
	0x035C8E78 STR X1, [X0 + 0x50]
	0x035C8E7C RET
	0x035C8E80 LDR X0, [X0 + 0x58]
	0x035C8E84 RET
	0x035C8E88 STR X1, [X0 + 0x58]
	0x035C8E8C RET
	0x035C8E90 LDRB W0, [X0 + 0x60]
	0x035C8E94 RET
	0x035C8E98 AND W8, W1, 0x1
	0x035C8E9C STRB W8, [X0 + 0x60]
	0x035C8EA0 RET
	0x035C8EA4 STR X30, [X31 - 0x10]!
	0x035C8EA8 CBZ X1, 0x35C8EC8
	0x035C8EAC CBZ X2, 0x35C8EC8
	0x035C8EB0 LDR X8, [X2 + 0x20]
	0x035C8EB4 ADD X0, X1, 0x20
	0x035C8EB8 MOV X2, X31
	0x035C8EBC MOV X1, X8
	0x035C8EC0 LDR X30, [X31], #0x10
	0x035C8EC4 B 0x337C8BC
	0x035C8EC8 BL 0x1C16F20
	0x035C8ECC STR X30, [X31 - 0x20]!
	0x035C8ED0 STP X20, X19, [X31 + 0x10]
	0x035C8ED4 ADRP X19, 0xE18000
	0x035C8ED8 ADRP X20, 0xB6F000
	0x035C8EDC LDRB W8, [X19 + 0x1C5]
	0x035C8EE0 LDR X20, [X20 + 0xF50]
	0x035C8EE4 TBNZ X8, 0x0, 0x35C8EFC
	0x035C8EE8 ADRP X0, 0xB6F000
	0x035C8EEC LDR X0, [X0 + 0xF50]
	0x035C8EF0 BL 0x1C16CF4
	0x035C8EF4 MOVZ W8, 0x1
	0x035C8EF8 STRB W8, [X19 + 0x1C5]
	0x035C8EFC LDR X0, [X20]
	0x035C8F00 BL 0x1C16F10
	0x035C8F04 MOV X1, X31
	0x035C8F08 MOV X19, X0
	0x035C8F0C BL 0x33BDD8C
	0x035C8F10 LDR X8, [X20]
	0x035C8F14 LDR X8, [X8 + 0xB8]
	0x035C8F18 STR X19, [X8]
	0x035C8F1C LDP X20, X19, [X31 + 0x10]
	0x035C8F20 LDR X30, [X31], #0x20
	0x035C8F24 RET
	0x035C8F28 MOV X1, X31
	0x035C8F2C B 0x33BDD8C
	0x035C8F30 CMP X1, 0x0
	0x035C8F34 CSET W0, NE
	0x035C8F38 RET
	0x035C8F3C STR X30, [X31 - 0x20]!
	0x035C8F40 STP X20, X19, [X31 + 0x10]
	0x035C8F44 ADRP X20, 0xE18000
	0x035C8F48 LDRB W8, [X20 + 0x1C6]
	0x035C8F4C MOV X19, X1
	0x035C8F50 TBNZ X8, 0x0, 0x35C8F68
	0x035C8F54 ADRP X0, 0xB2C000
	0x035C8F58 LDR X0, [X0 + 0x1B0]
	0x035C8F5C BL 0x1C16CF4
	0x035C8F60 MOVZ W8, 0x1
	0x035C8F64 STRB W8, [X20 + 0x1C6]
	0x035C8F68 CBZ X19, 0x35C8FD8
	0x035C8F6C ADRP X10, 0xB2C000
	0x035C8F70 LDR X8, [X19]
	0x035C8F74 LDR X10, [X10 + 0x1B0]
	0x035C8F78 LDRH W9, [X8 + 0x12E]
	0x035C8F7C LDR X1, [X10]
	0x035C8F80 CBZ X9, 0x35C8FA4
	0x035C8F84 LDR X10, [X8 + 0xB0]
	0x035C8F88 ADD X10, X10, 0x8
	0x035C8F8C LDUR X11, [X10 - 0x8]
	0x035C8F90 CMP X11, X1
	0x035C8F94 B.EQ 0x35C8FB4
	0x035C8F98 SUBS X9, X9, 0x1
	0x035C8F9C ADD X10, X10, 0x10
	0x035C8FA0 B.NE 0x35C8F8C
	0x035C8FA4 MOVZ W2, 0x1
	0x035C8FA8 MOV X0, X19
	0x035C8FAC BL 0x1C5C788
	0x035C8FB0 B 0x35C8FC4
	0x035C8FB4 LDR W9, [X10]
	0x035C8FB8 ADD W9, W9, 0x1
	0x035C8FBC ADD X8, X8, W9, 0x4, SXTW
	0x035C8FC0 ADD X0, X8, 0x138
	0x035C8FC4 LDP X2, X1, [X0]
	0x035C8FC8 MOV X0, X19
	0x035C8FCC LDP X20, X19, [X31 + 0x10]
	0x035C8FD0 LDR X30, [X31], #0x20
	0x035C8FD4 BR X2
	0x035C8FD8 BL 0x1C16F20
	0x035C8FDC STR X30, [X31 - 0x10]!
	0x035C8FE0 CBZ X1, 0x35C8FF0
	0x035C8FE4 LDR X0, [X1 + 0x20]
	0x035C8FE8 LDR X30, [X31], #0x10
	0x035C8FEC RET
	0x035C8FF0 BL 0x1C16F20
	0x035C8FF4 CMP X1, 0x0
	0x035C8FF8 CSET W0, NE
	0x035C8FFC RET
	0x035C9000 STR X30, [X31 - 0x20]!
	0x035C9004 STP X20, X19, [X31 + 0x10]
	0x035C9008 ADRP X20, 0xE17000
	0x035C900C LDRB W8, [X20 + 0x1C7]
	0x035C9010 MOV X19, X1
	0x035C9014 TBNZ X8, 0x0, 0x35C902C
	0x035C9018 ADRP X0, 0xB2B000
	0x035C901C LDR X0, [X0 + 0x1B0]
	0x035C9020 BL 0x1C16CF4
	0x035C9024 MOVZ W8, 0x1
	0x035C9028 STRB W8, [X20 + 0x1C7]
	0x035C902C CBZ X19, 0x35C909C
	0x035C9030 ADRP X10, 0xB2B000
	0x035C9034 LDR X8, [X19]
	0x035C9038 LDR X10, [X10 + 0x1B0]
	0x035C903C LDRH W9, [X8 + 0x12E]
	0x035C9040 LDR X1, [X10]
	0x035C9044 CBZ X9, 0x35C9068
	0x035C9048 LDR X10, [X8 + 0xB0]
	0x035C904C ADD X10, X10, 0x8
	0x035C9050 LDUR X11, [X10 - 0x8]
	0x035C9054 CMP X11, X1
	0x035C9058 B.EQ 0x35C9078
	0x035C905C SUBS X9, X9, 0x1
	0x035C9060 ADD X10, X10, 0x10
	0x035C9064 B.NE 0x35C9050
	0x035C9068 MOVZ W2, 0x1
	0x035C906C MOV X0, X19
	0x035C9070 BL 0x1C5C788
	0x035C9074 B 0x35C9088
	0x035C9078 LDR W9, [X10]
	0x035C907C ADD W9, W9, 0x1
	0x035C9080 ADD X8, X8, W9, 0x4, SXTW
	0x035C9084 ADD X0, X8, 0x138
	0x035C9088 LDP X2, X1, [X0]
	0x035C908C MOV X0, X19
	0x035C9090 LDP X20, X19, [X31 + 0x10]
	0x035C9094 LDR X30, [X31], #0x20
	0x035C9098 BR X2
	0x035C909C BL 0x1C16F20
	0x035C90A0 STR X30, [X31 - 0x20]!
	0x035C90A4 STP X20, X19, [X31 + 0x10]
	0x035C90A8 ADRP X20, 0xE17000
	0x035C90AC LDRB W8, [X20 + 0x1C8]
	0x035C90B0 MOV X19, X1
	0x035C90B4 TBNZ X8, 0x0, 0x35C90CC
	0x035C90B8 ADRP X0, 0xB2B000
	0x035C90BC LDR X0, [X0 + 0x1B0]
	0x035C90C0 BL 0x1C16CF4
	0x035C90C4 MOVZ W8, 0x1
	0x035C90C8 STRB W8, [X20 + 0x1C8]
	0x035C90CC CBZ X19, 0x35C913C
	0x035C90D0 ADRP X10, 0xB2B000
	0x035C90D4 LDR X8, [X19]
	0x035C90D8 LDR X10, [X10 + 0x1B0]
	0x035C90DC LDRH W9, [X8 + 0x12E]
	0x035C90E0 LDR X1, [X10]
	0x035C90E4 CBZ X9, 0x35C9108
	0x035C90E8 LDR X10, [X8 + 0xB0]
	0x035C90EC ADD X10, X10, 0x8
	0x035C90F0 LDUR X11, [X10 - 0x8]
	0x035C90F4 CMP X11, X1
	0x035C90F8 B.EQ 0x35C9118
	0x035C90FC SUBS X9, X9, 0x1
	0x035C9100 ADD X10, X10, 0x10
	0x035C9104 B.NE 0x35C90F0
	0x035C9108 MOVZ W2, 0x1
	0x035C910C MOV X0, X19
	0x035C9110 BL 0x1C5C788
	0x035C9114 B 0x35C9128
	0x035C9118 LDR W9, [X10]
	0x035C911C ADD W9, W9, 0x1
	0x035C9120 ADD X8, X8, W9, 0x4, SXTW
	0x035C9124 ADD X0, X8, 0x138
	0x035C9128 LDP X2, X1, [X0]
	0x035C912C MOV X0, X19
	0x035C9130 LDP X20, X19, [X31 + 0x10]
	0x035C9134 LDR X30, [X31], #0x20
	0x035C9138 BR X2
	0x035C913C BL 0x1C16F20
	0x035C9140 STR X30, [X31 - 0x50]!
	0x035C9144 STP X26, X25, [X31 + 0x10]
	0x035C9148 STP X24, X23, [X31 + 0x20]
	0x035C914C STP X22, X21, [X31 + 0x30]
	0x035C9150 STP X20, X19, [X31 + 0x40]
	0x035C9154 ADRP X22, 0xE17000
	0x035C9158 LDRB W8, [X22 + 0x1CA]
	0x035C915C MOV X21, X2
	0x035C9160 MOV W19, W1
	0x035C9164 MOV X20, X0
	0x035C9168 TBNZ X8, 0x0, 0x35C9204
	0x035C916C ADRP X0, 0xB6F000
	0x035C9170 LDR X0, [X0 + 0xF0]
	0x035C9174 BL 0x1C16CF4
	0x035C9178 ADRP X0, 0xB6F000
	0x035C917C LDR X0, [X0 + 0xF8]
	0x035C9180 BL 0x1C16CF4
	0x035C9184 ADRP X0, 0xB54000
	0x035C9188 LDR X0, [X0 + 0x320]
	0x035C918C BL 0x1C16CF4
	0x035C9190 ADRP X0, 0xB6F000
	0x035C9194 LDR X0, [X0 + 0x100]
	0x035C9198 BL 0x1C16CF4
	0x035C919C ADRP X0, 0xB6F000
	0x035C91A0 LDR X0, [X0 + 0x108]
	0x035C91A4 BL 0x1C16CF4
	0x035C91A8 ADRP X0, 0xB6F000
	0x035C91AC LDR X0, [X0 + 0xD8]
	0x035C91B0 BL 0x1C16CF4
	0x035C91B4 ADRP X0, 0xB6F000
	0x035C91B8 LDR X0, [X0 + 0x110]
	0x035C91BC BL 0x1C16CF4
	0x035C91C0 ADRP X0, 0xB6F000
	0x035C91C4 LDR X0, [X0 + 0xE0]
	0x035C91C8 BL 0x1C16CF4
	0x035C91CC ADRP X0, 0xB6F000
	0x035C91D0 LDR X0, [X0 + 0x118]
	0x035C91D4 BL 0x1C16CF4
	0x035C91D8 ADRP X0, 0xB6F000
	0x035C91DC LDR X0, [X0 + 0x120]
	0x035C91E0 BL 0x1C16CF4
	0x035C91E4 ADRP X0, 0xB6F000
	0x035C91E8 LDR X0, [X0 + 0x128]
	0x035C91EC BL 0x1C16CF4
	0x035C91F0 ADRP X0, 0xB6F000
	0x035C91F4 LDR X0, [X0 + 0x130]
	0x035C91F8 BL 0x1C16CF4
	0x035C91FC MOVZ W8, 0x1
	0x035C9200 STRB W8, [X22 + 0x1CA]
	0x035C9204 LDR X9, [X20 + 0x10]
	0x035C9208 CBZ X9, 0x35C94AC
	0x035C920C ADRP X23, 0xB6F000
	0x035C9210 ADRP X24, 0xB54000
	0x035C9214 ADRP X25, 0xB6F000
	0x035C9218 LDR X23, [X23 + 0xE0]
	0x035C921C LDR X24, [X24 + 0x320]
	0x035C9220 LDR X25, [X25 + 0x108]
	0x035C9224 LDR X22, [X20 + 0x20]
	0x035C9228 CBZ X22, 0x35C94AC
	0x035C922C LDR X8, [X22]
	0x035C9230 LDR W26, [X9 + 0x18]
	0x035C9234 LDR X1, [X24]
	0x035C9238 LDRH W9, [X8 + 0x12E]
	0x035C923C CBZ X9, 0x35C9260
	0x035C9240 LDR X10, [X8 + 0xB0]
	0x035C9244 ADD X10, X10, 0x8
	0x035C9248 LDUR X11, [X10 - 0x8]
	0x035C924C CMP X11, X1
	0x035C9250 B.EQ 0x35C9270
	0x035C9254 SUBS X9, X9, 0x1
	0x035C9258 ADD X10, X10, 0x10
	0x035C925C B.NE 0x35C9248
	0x035C9260 MOV X0, X22
	0x035C9264 MOV W2, W31
	0x035C9268 BL 0x1C5C788
	0x035C926C B 0x35C927C
	0x035C9270 LDRSW X9, [X10]
	0x035C9274 ADD X8, X8, X9, 0x4, LSL
	0x035C9278 ADD X0, X8, 0x138
	0x035C927C LDP X8, X1, [X0]
	0x035C9280 MOV X0, X22
	0x035C9284 BLR X8
	0x035C9288 CMP W26, W0
	0x035C928C B.GE 0x35C92F4
	0x035C9290 LDR X0, [X20 + 0x10]
	0x035C9294 CBZ X0, 0x35C94AC
	0x035C9298 LDR W10, [X0 + 0x1C]
	0x035C929C LDR X8, [X0 + 0x10]
	0x035C92A0 LDR X9, [X25]
	0x035C92A4 ADD W10, W10, 0x1
	0x035C92A8 STR W10, [X0 + 0x1C]
	0x035C92AC CBZ X8, 0x35C94AC
	0x035C92B0 LDRSW X10, [X0 + 0x18]
	0x035C92B4 LDR W11, [X8 + 0x18]
	0x035C92B8 CMP W10, W11
	0x035C92BC B.CS 0x35C92D4
	0x035C92C0 ADD W9, W10, 0x1
	0x035C92C4 ADD X8, X8, X10, 0x3, LSL
	0x035C92C8 STR W9, [X0 + 0x18]
	0x035C92CC STR X31, [X8 + 0x20]
	0x035C92D0 B 0x35C92E8
	0x035C92D4 LDR X8, [X9 + 0x20]
	0x035C92D8 MOV X1, X31
	0x035C92DC LDR X8, [X8 + 0xC0]
	0x035C92E0 LDR X2, [X8 + 0x70]
	0x035C92E4 BL 0x301BF90
	0x035C92E8 LDR X9, [X20 + 0x10]
	0x035C92EC CBNZ X9, 0x35C9224
	0x035C92F0 B 0x35C94AC
	0x035C92F4 LDR X9, [X20 + 0x18]
	0x035C92F8 CBZ X9, 0x35C94AC
	0x035C92FC ADRP X25, 0xB6F000
	0x035C9300 LDR X25, [X25 + 0x100]
	0x035C9304 LDR X22, [X20 + 0x20]
	0x035C9308 CBZ X22, 0x35C94AC
	0x035C930C LDR X8, [X22]
	0x035C9310 LDR W26, [X9 + 0x18]
	0x035C9314 LDR X1, [X24]
	0x035C9318 LDRH W9, [X8 + 0x12E]
	0x035C931C CBZ X9, 0x35C9340
	0x035C9320 LDR X10, [X8 + 0xB0]
	0x035C9324 ADD X10, X10, 0x8
	0x035C9328 LDUR X11, [X10 - 0x8]
	0x035C932C CMP X11, X1
	0x035C9330 B.EQ 0x35C9350
	0x035C9334 SUBS X9, X9, 0x1
	0x035C9338 ADD X10, X10, 0x10
	0x035C933C B.NE 0x35C9328
	0x035C9340 MOV X0, X22
	0x035C9344 MOV W2, W31
	0x035C9348 BL 0x1C5C788
	0x035C934C B 0x35C935C
	0x035C9350 LDRSW X9, [X10]
	0x035C9354 ADD X8, X8, X9, 0x4, LSL
	0x035C9358 ADD X0, X8, 0x138
	0x035C935C LDP X8, X1, [X0]
	0x035C9360 MOV X0, X22
	0x035C9364 BLR X8
	0x035C9368 CMP W26, W0
	0x035C936C B.GE 0x35C93D4
	0x035C9370 LDR X0, [X20 + 0x18]
	0x035C9374 CBZ X0, 0x35C94AC
	0x035C9378 LDR W10, [X0 + 0x1C]
	0x035C937C LDR X8, [X0 + 0x10]
	0x035C9380 LDR X9, [X25]
	0x035C9384 ADD W10, W10, 0x1
	0x035C9388 STR W10, [X0 + 0x1C]
	0x035C938C CBZ X8, 0x35C94AC
	0x035C9390 LDRSW X10, [X0 + 0x18]
	0x035C9394 LDR W11, [X8 + 0x18]
	0x035C9398 CMP W10, W11
	0x035C939C B.CS 0x35C93B4
	0x035C93A0 ADD W9, W10, 0x1
	0x035C93A4 ADD X8, X8, X10, 0x3, LSL
	0x035C93A8 STR W9, [X0 + 0x18]
	0x035C93AC STR X31, [X8 + 0x20]
	0x035C93B0 B 0x35C93C8
	0x035C93B4 LDR X8, [X9 + 0x20]
	0x035C93B8 MOV X1, X31
	0x035C93BC LDR X8, [X8 + 0xC0]
	0x035C93C0 LDR X2, [X8 + 0x70]
	0x035C93C4 BL 0x301BF90
	0x035C93C8 LDR X9, [X20 + 0x18]
	0x035C93CC CBNZ X9, 0x35C9304
	0x035C93D0 B 0x35C94AC
	0x035C93D4 LDR X0, [X20 + 0x10]
	0x035C93D8 CBZ X0, 0x35C94AC
	0x035C93DC LDR X2, [X23]
	0x035C93E0 MOV W1, W19
	0x035C93E4 BL 0x301BCCC
	0x035C93E8 STR X0, [X21]
	0x035C93EC CBZ X0, 0x35C9408
	0x035C93F0 LDP X20, X19, [X31 + 0x40]
	0x035C93F4 LDP X22, X21, [X31 + 0x30]
	0x035C93F8 LDP X24, X23, [X31 + 0x20]
	0x035C93FC LDP X26, X25, [X31 + 0x10]
	0x035C9400 LDR X30, [X31], #0x50
	0x035C9404 RET
	0x035C9408 ADRP X8, 0xB6F000
	0x035C940C LDR X8, [X8 + 0x130]
	0x035C9410 LDR X0, [X8]
	0x035C9414 BL 0x1C16F10
	0x035C9418 ADRP X8, 0xB6F000
	0x035C941C LDR X8, [X8 + 0x128]
	0x035C9420 MOV X22, X0
	0x035C9424 LDR X1, [X8]
	0x035C9428 BL 0x24F1248
	0x035C942C STR X22, [X21]
	0x035C9430 LDR X0, [X20 + 0x10]
	0x035C9434 CBZ X0, 0x35C94AC
	0x035C9438 ADRP X8, 0xB6F000
	0x035C943C LDR X8, [X8 + 0x118]
	0x035C9440 MOV W1, W19
	0x035C9444 MOV X2, X22
	0x035C9448 LDR X3, [X8]
	0x035C944C BL 0x301BD20
	0x035C9450 ADRP X8, 0xB6F000
	0x035C9454 LDR X20, [X20 + 0x18]
	0x035C9458 LDR X8, [X8 + 0xF8]
	0x035C945C LDR X0, [X8]
	0x035C9460 BL 0x1C16F10
	0x035C9464 ADRP X8, 0xB6F000
	0x035C9468 LDR X8, [X8 + 0xF0]
	0x035C946C MOV X21, X0
	0x035C9470 LDR X1, [X8]
	0x035C9474 BL 0x2DBDE08
	0x035C9478 CBZ X20, 0x35C94AC
	0x035C947C ADRP X8, 0xB6F000
	0x035C9480 LDR X8, [X8 + 0x120]
	0x035C9484 MOV X0, X20
	0x035C9488 MOV W1, W19
	0x035C948C MOV X2, X21
	0x035C9490 LDR X3, [X8]
	0x035C9494 LDP X20, X19, [X31 + 0x40]
	0x035C9498 LDP X22, X21, [X31 + 0x30]
	0x035C949C LDP X24, X23, [X31 + 0x20]
	0x035C94A0 LDP X26, X25, [X31 + 0x10]
	0x035C94A4 LDR X30, [X31], #0x50
	0x035C94A8 B 0x301BD20
	0x035C94AC BL 0x1C16F20
	0x035C94B0 STR X30, [X31 - 0x30]!
	0x035C94B4 STP X22, X21, [X31 + 0x10]
	0x035C94B8 STP X20, X19, [X31 + 0x20]
	0x035C94BC ADRP X21, 0xE17000
	0x035C94C0 LDRB W8, [X21 + 0x1CB]
	0x035C94C4 MOV X19, X1
	0x035C94C8 MOV X20, X0
	0x035C94CC TBNZ X8, 0x0, 0x35C9514
	0x035C94D0 ADRP X0, 0xB53000
	0x035C94D4 LDR X0, [X0 + 0x628]
	0x035C94D8 BL 0x1C16CF4
	0x035C94DC ADRP X0, 0xB2A000
	0x035C94E0 LDR X0, [X0 + 0x750]
	0x035C94E4 BL 0x1C16CF4
	0x035C94E8 ADRP X0, 0xB53000
	0x035C94EC LDR X0, [X0 + 0x630]
	0x035C94F0 BL 0x1C16CF4
	0x035C94F4 ADRP X0, 0xB53000
	0x035C94F8 LDR X0, [X0 + 0x638]
	0x035C94FC BL 0x1C16CF4
	0x035C9500 ADRP X0, 0xB53000
	0x035C9504 LDR X0, [X0 + 0x640]
	0x035C9508 BL 0x1C16CF4
	0x035C950C MOVZ W8, 0x1
	0x035C9510 STRB W8, [X21 + 0x1CB]
	0x035C9514 STR X31, [X31 + 0x8]
	0x035C9518 CBZ X19, 0x35C9728
	0x035C951C ADRP X22, 0xB2A000
	0x035C9520 LDR X8, [X19]
	0x035C9524 LDR X22, [X22 + 0x750]
	0x035C9528 LDRH W9, [X8 + 0x12E]
	0x035C952C LDR X1, [X22]
	0x035C9530 CBZ X9, 0x35C9554
	0x035C9534 LDR X10, [X8 + 0xB0]
	0x035C9538 ADD X10, X10, 0x8
	0x035C953C LDUR X11, [X10 - 0x8]
	0x035C9540 CMP X11, X1
	0x035C9544 B.EQ 0x35C9564
	0x035C9548 SUBS X9, X9, 0x1
	0x035C954C ADD X10, X10, 0x10
	0x035C9550 B.NE 0x35C953C
	0x035C9554 MOVZ W2, 0x4
	0x035C9558 MOV X0, X19
	0x035C955C BL 0x1C5C788
	0x035C9560 B 0x35C9574
	0x035C9564 LDR W9, [X10]
	0x035C9568 ADD W9, W9, 0x4
	0x035C956C ADD X8, X8, W9, 0x4, SXTW
	0x035C9570 ADD X0, X8, 0x138
	0x035C9574 LDP X8, X1, [X0]
	0x035C9578 MOV X0, X19
	0x035C957C BLR X8
	0x035C9580 MOV W1, W0
	0x035C9584 ADD X2, X31, 0x8
	0x035C9588 MOV X0, X20
	0x035C958C BL 0x35C9140
	0x035C9590 LDR X0, [X31 + 0x8]
	0x035C9594 CBZ X0, 0x35C9728
	0x035C9598 LDR W8, [X0 + 0x20]
	0x035C959C CMP W8, 0x1
	0x035C95A0 B.LT 0x35C95FC
	0x035C95A4 ADRP X8, 0xB53000
	0x035C95A8 LDR X8, [X8 + 0x638]
	0x035C95AC LDR X1, [X8]
	0x035C95B0 BL 0x24F18D4
	0x035C95B4 CBZ X0, 0x35C9728
	0x035C95B8 LDR X8, [X0]
	0x035C95BC LDR X1, [X22]
	0x035C95C0 MOV X21, X0
	0x035C95C4 LDRH W9, [X8 + 0x12E]
	0x035C95C8 CBZ X9, 0x35C95EC
	0x035C95CC LDR X10, [X8 + 0xB0]
	0x035C95D0 ADD X10, X10, 0x8
	0x035C95D4 LDUR X11, [X10 - 0x8]
	0x035C95D8 CMP X11, X1
	0x035C95DC B.EQ 0x35C963C
	0x035C95E0 SUBS X9, X9, 0x1
	0x035C95E4 ADD X10, X10, 0x10
	0x035C95E8 B.NE 0x35C95D4
	0x035C95EC MOVZ W2, 0x8
	0x035C95F0 MOV X0, X21
	0x035C95F4 BL 0x1C5C788
	0x035C95F8 B 0x35C964C
	0x035C95FC LDR X8, [X19]
	0x035C9600 LDR X1, [X22]
	0x035C9604 LDRH W9, [X8 + 0x12E]
	0x035C9608 CBZ X9, 0x35C962C
	0x035C960C LDR X10, [X8 + 0xB0]
	0x035C9610 ADD X10, X10, 0x8
	0x035C9614 LDUR X11, [X10 - 0x8]
	0x035C9618 CMP X11, X1
	0x035C961C B.EQ 0x35C9660
	0x035C9620 SUBS X9, X9, 0x1
	0x035C9624 ADD X10, X10, 0x10
	0x035C9628 B.NE 0x35C9614
	0x035C962C MOVZ W2, 0x7
	0x035C9630 MOV X0, X19
	0x035C9634 BL 0x1C5C788
	0x035C9638 B 0x35C9670
	0x035C963C LDR W9, [X10]
	0x035C9640 ADD W9, W9, 0x8
	0x035C9644 ADD X8, X8, W9, 0x4, SXTW
	0x035C9648 ADD X0, X8, 0x138
	0x035C964C LDP X8, X2, [X0]
	0x035C9650 MOV X0, X21
	0x035C9654 MOV X1, X19
	0x035C9658 BLR X8
	0x035C965C B 0x35C9680
	0x035C9660 LDR W9, [X10]
	0x035C9664 ADD W9, W9, 0x7
	0x035C9668 ADD X8, X8, W9, 0x4, SXTW
	0x035C966C ADD X0, X8, 0x138
	0x035C9670 LDP X8, X1, [X0]
	0x035C9674 MOV X0, X19
	0x035C9678 BLR X8
	0x035C967C MOV X21, X0
	0x035C9680 LDR X8, [X19]
	0x035C9684 LDR X20, [X20 + 0x18]
	0x035C9688 LDR X1, [X22]
	0x035C968C LDRH W9, [X8 + 0x12E]
	0x035C9690 CBZ X9, 0x35C96B4
	0x035C9694 LDR X10, [X8 + 0xB0]
	0x035C9698 ADD X10, X10, 0x8
	0x035C969C LDUR X11, [X10 - 0x8]
	0x035C96A0 CMP X11, X1
	0x035C96A4 B.EQ 0x35C96C4
	0x035C96A8 SUBS X9, X9, 0x1
	0x035C96AC ADD X10, X10, 0x10
	0x035C96B0 B.NE 0x35C969C
	0x035C96B4 MOVZ W2, 0x4
	0x035C96B8 MOV X0, X19
	0x035C96BC BL 0x1C5C788
	0x035C96C0 B 0x35C96D4
	0x035C96C4 LDR W9, [X10]
	0x035C96C8 ADD W9, W9, 0x4
	0x035C96CC ADD X8, X8, W9, 0x4, SXTW
	0x035C96D0 ADD X0, X8, 0x138
	0x035C96D4 LDP X8, X1, [X0]
	0x035C96D8 MOV X0, X19
	0x035C96DC BLR X8
	0x035C96E0 CBZ X20, 0x35C9728
	0x035C96E4 ADRP X8, 0xB53000
	0x035C96E8 LDR X8, [X8 + 0x630]
	0x035C96EC MOV W1, W0
	0x035C96F0 MOV X0, X20
	0x035C96F4 LDR X2, [X8]
	0x035C96F8 BL 0x301BCCC
	0x035C96FC CBZ X0, 0x35C9728
	0x035C9700 ADRP X8, 0xB53000

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X20, 0xE19000
	015 Move W8, [X20+449]
	016 Move W22, W2
	017 Move W21, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {70}
	023 Move X0, 0xB55000
	024 Move X0, [X0+1360]
	025 Call 0x1C17CF4
	026 Move X0, 0xB55000
	027 Move X0, [X0+1368]
	028 Call 0x1C17CF4
	029 Move X0, 0xB55000
	030 Move X0, [X0+1384]
	031 Call 0x1C17CF4
	032 Move X0, 0xB55000
	033 Move X0, [X0+1400]
	034 Call 0x1C17CF4
	035 Move X0, 0xB55000
	036 Move X0, [X0+1520]
	037 Call 0x1C17CF4
	038 Move X0, 0xB2C000
	039 Move X0, [X0+1880]
	040 Call 0x1C17CF4
	041 Move X0, 0xB55000
	042 Move X0, [X0+1480]
	043 Call 0x1C17CF4
	044 Move X0, 0xB71000
	045 Move X0, [X0+96]
	046 Call 0x1C17CF4
	047 Move X0, 0xB2C000
	048 Move X0, [X0+1760]
	049 Call 0x1C17CF4
	050 Move X0, 0xB55000
	051 Move X0, [X0+1528]
	052 Call 0x1C17CF4
	053 Move X0, 0xB2C000
	054 Move X0, [X0+1952]
	055 Call 0x1C17CF4
	056 Move X0, 0xB71000
	057 Move X0, [X0+104]
	058 Call 0x1C17CF4
	059 Move X0, 0xB71000
	060 Move X0, [X0+112]
	061 Call 0x1C17CF4
	062 Move X0, 0xB71000
	063 Move X0, [X0+120]
	064 Call 0x1C17CF4
	065 Move X0, 0xB35000
	066 Move X0, [X0+1936]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+449], W8
	070 NotImplemented "Instruction MOVI not yet implemented."
	071 Move [X31+176], X31
	072 Move [X31+144], V0
	073 Move [X31+152], V0
	074 Move [X31+136], W31
	075 Move X0, [X19+64]
	076 Compare X0, 0
	077 JumpIfEqual {657}
	078 Move X20, 0xB71000
	079 Move X20, [X20+96]
	080 Move X1, [X20]
	081 Call 0x25F8180, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X31+76], W22
	084 Move X27, 0xB55000
	085 Move X29, 0xB55000
	086 Move X25, 0xB55000
	087 Move X26, 0xB55000
	088 Move X27, [X27+1480]
	089 Move X29, [X29+1400]
	090 Move X25, [X25+1368]
	091 Move X26, [X26+1384]
	092 Move TEMP, X21
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {331}
	096 Move X21, [X19+112]
	097 Compare X21, 0
	098 JumpIfEqual {331}
	099 Move X10, 0xB55000
	100 Move X8, [X21]
	101 Move X10, [X10+1520]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Move X1, [X10]
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X21
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X2, [X0+8]
	120 Move W1, 4
	121 Move X0, X21
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {331}
	127 Move X0, [X19+120]
	128 Compare X0, 0
	129 JumpIfEqual {657}
	130 Move X1, X31
	131 Call StringBuilder.Clear, X0
	132 Move X0, [X19+64]
	133 Compare X0, 0
	134 JumpIfEqual {657}
	135 Move X1, [X20]
	136 Move X21, [X19+120]
	137 Call 0x25F8180, X0
	138 Move X8, 0xB2C000
	139 Move X8, [X8+1880]
	140 Move [X31+124], W0
	141 Add X1, X31, 124
	142 Move X8, [X8]
	143 Move X0, X8
	144 Call 0x1C17E04
	145 Move X8, 0xB71000
	146 Move X8, [X8+120]
	147 Move X1, X0
	148 Move X2, X31
	149 Move X8, [X8]
	150 Move X0, X8
	151 Call String.Format, X0, X1
	152 Compare X21, 0
	153 JumpIfEqual {657}
	154 Move X1, X0
	155 Move X0, X21
	156 Move X2, X31
	157 Call StringBuilder.Append, X0, X1
	158 Move X0, [X19+64]
	159 Compare X0, 0
	160 JumpIfEqual {657}
	161 Move X1, [X27]
	162 Add X8, X31, 80
	163 Call 0x25F8F38, X0
	164 Move V0, [X31+80]
	165 Move V1, [X31+96]
	166 Move X8, [X31+112]
	167 Move X28, 0xB71000
	168 Move X24, 0xB35000
	169 Move X28, [X28+112]
	170 Move X24, [X24+1936]
	171 Move [X31+144], V0
	172 Move [X31+152], V1
	173 Move [X31+176], X8
	174 Move X20, 0xB2C000
	175 Move X20, [X20+1760]
	176 Move X0, [X29]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X1, [X25]
	182 Add X0, X31, 144
	183 Call 0x2BC5DE0, X0
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {268}
	188 Move X0, [X29]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X1, [X26]
	194 Add X0, X31, 144
	195 Call 0x2BC601C, X0
	196 Move X22, X0
	197 Compare X0, 0
	198 JumpIfEqual {661}
	199 Move X0, [X22+16]
	200 Compare X0, 0
	201 JumpIfEqual {662}
	202 Move X21, [X19+120]
	203 Move X1, X31
	204 Call Delegate.get_Method, X0
	205 Compare X0, 0
	206 JumpIfEqual {659}
	207 Move X8, [X0]
	208 Move X9, [X8+456]
	209 Move X1, [X8+464]
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Compare X0, 0
	212 JumpIfEqual {660}
	213 Move X8, [X0]
	214 Move X1, [X8+752]
	215 Move X9, [X8+744]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X23, X0
	218 Move X0, [X22+16]
	219 Compare X0, 0
	220 JumpIfEqual {658}
	221 Move X1, X31
	222 Call Delegate.get_Method, X0
	223 Compare X0, 0
	224 JumpIfEqual {663}
	225 Move X8, [X0]
	226 Move X9, [X8+424]
	227 Move X1, [X8+432]
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X3, X0
	230 Move X0, [X28]
	231 Move X2, [X24]
	232 Move X1, X23
	233 Move X4, X31
	234 Call String.Concat, X0, X1, X2, X3
	235 Move X1, X0
	236 Compare X21, 0
	237 JumpIfEqual {664}
	238 Move X0, X21
	239 Move X2, X31
	240 Call StringBuilder.Append, X0, X1
	241 Move X0, [X19+120]
	242 Compare X0, 0
	243 JumpIfEqual {665}
	244 Move X1, X31
	245 Call StringBuilder.get_Length, X0
	246 Move W21, W0
	247 Move X0, [X20]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {253}
	251 Call 0x1C17DFC
	252 Move X0, [X20]
	253 Move X8, [X0+184]
	254 Move W8, [X8]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X0, [X19+120]
	257 Compare X0, 0
	258 JumpIfEqual {670}
	259 Move X8, 0xB2C000
	260 Move X8, [X8+1952]
	261 Move X1, [X8]
	262 Move X22, 0xB55000
	263 Move X22, [X22+1520]
	264 Move X2, X31
	265 Call StringBuilder.Append, X0, X1
	266 Move X21, X31
	267 Move W20, 6
	268 Move X21, X31
	269 Move W20, 6
	270 Move X22, 0xB55000
	271 Move X22, [X22+1520]
	272 Move X0, [X29]
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X8, 0xB55000
	278 Move X8, [X8+1360]
	279 Add X0, X31, 144
	280 Move X1, [X8]
	281 Call 0x2BC6018, X0
	282 Compare X21, 0
	283 JumpIfNotEqual {668}
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Compare W20, 0
	286 JumpIfNotEqual {641}
	287 Move X21, [X19+112]
	288 Compare X21, 0
	289 JumpIfEqual {331}
	290 Move X0, [X19+120]
	291 Compare X0, 0
	292 JumpIfEqual {657}
	293 Move X8, [X0]
	294 Move X9, [X8+360]
	295 Move X1, [X8+368]
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move X9, 0xB55000
	298 Move X1, [X22]
	299 Move X8, [X21]
	300 Move X9, [X9+1528]
	301 Move X10, 0xB71000
	302 Move X24, X0
	303 Move X22, [X9]
	304 Move X10, [X10+104]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Move X23, [X10]
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move W2, 2
	316 Move X0, X21
	317 Call 0x1C5D788
	318 Move W9, [X10]
	319 Add W9, W9, 2
	320 Add X8, X8, W9
	321 Add X0, X8, 312
	322 Move X8, [X0]
	323 Move X6, [X0+8]
	324 Move W5, 513
	325 Move X0, X21
	326 Move X1, X24
	327 Move X2, X31
	328 Move X3, X22
	329 Move X4, X23
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Move X0, [X19+64]
	332 Compare X0, 0
	333 JumpIfEqual {657}
	334 Move X1, [X27]
	335 Add X8, X31, 80
	336 Call 0x25F8F38, X0
	337 Move V0, [X31+80]
	338 Move V1, [X31+96]
	339 Move X8, [X31+112]
	340 Move X20, 0xB2B000
	341 Move X22, 0xB54000
	342 Move W24, [X31+136]
	343 Move X20, [X20+2000]
	344 Move X22, [X22+1528]
	345 Move [X31+144], V0
	346 Move [X31+152], V1
	347 Move [X31+176], X8
	348 Move X27, 0xB70000
	349 Move X27, [X27+104]
	350 Add W23, W24, 1
	351 Move X21, W24
	352 Move X0, [X29]
	353 Move W8, [X0+224]
	354 Compare W8, 0
	355 JumpIfNotEqual {357}
	356 Call 0x1C17DFC
	357 Move X1, [X25]
	358 Add X0, X31, 144
	359 Call 0x2BC5DE0, X0
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {625}
	364 Move X0, [X29]
	365 Move W8, [X0+224]
	366 Compare W8, 0
	367 JumpIfNotEqual {369}
	368 Call 0x1C17DFC
	369 Move X1, [X26]
	370 Add X0, X31, 144
	371 Call 0x2BC601C, X0
	372 Move X28, X0
	373 Compare X0, 0
	374 JumpIfEqual {655}
	375 Move W8, [X28+96]
	376 Compare W8, 0
	377 JumpIfNotEqual {352}
	378 Move X8, [X28+16]
	379 Compare X8, 0
	380 JumpIfEqual {387}
	381 Move X0, [X8+64]
	382 Move X2, [X28+88]
	383 Move X9, [X8+24]
	384 Move X3, [X8+40]
	385 Move X1, X31
	386 NotImplemented "Instruction BLR not yet implemented."
	387 Call 0x1C17F20
	388 Move X8, X1
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move [X31+56], X1
	391 Move [X31+64], X0
	392 Move X0, [X31+64]
	393 Call 0x3EB2AD0
	394 Move [X31+64], X0
	395 Move X0, X20
	396 Call 0x1C17D08
	397 Move X8, [X31+64]
	398 Move X8, [X8]
	399 Move X1, [X8]
	400 Call 0x1C18270
	401 Move TEMP, X0
	402 And TEMP, TEMP, 1
	403 Compare TEMP, 1
	404 JumpIfNotEqual {675}
	405 Move X8, [X31+64]
	406 Move X9, [X8]
	407 Add X8, X31, 128
	408 Move [X31+48], X9
	409 Move [X8], X9
	410 Call 0x3EB2AE0
	411 Move X8, [X19+112]
	412 Move [X31+56], X8
	413 Compare X8, 0
	414 JumpIfEqual {613}
	415 Move X0, 0xB2B000
	416 Move X0, [X0+1824]
	417 Call 0x1C17D08
	418 Call 0x1C17F10
	419 Move [X31+64], X0
	420 Move X0, 0xB2B000
	421 Move X0, [X0+1816]
	422 Call 0x1C17D08
	423 Move X1, X0
	424 Move X0, [X31+64]
	425 Call Dictionary`2<Object, Object>..ctor, X0
	426 Move X0, [X28+16]
	427 Compare X0, 0
	428 JumpIfEqual {673}
	429 Move X1, X31
	430 Call Delegate.get_Method, X0
	431 Compare X0, 0
	432 JumpIfEqual {671}
	433 Move X8, [X0]
	434 Move X9, [X8+456]
	435 Move X1, [X8+464]
	436 NotImplemented "Instruction BLR not yet implemented."
	437 Compare X0, 0
	438 JumpIfEqual {691}
	439 Move X8, [X0]
	440 Move X1, [X8+752]
	441 Move X9, [X8+744]
	442 NotImplemented "Instruction BLR not yet implemented."
	443 Move [X31+40], X0
	444 Move X0, [X28+16]
	445 Compare X0, 0
	446 JumpIfEqual {689}
	447 Move X1, X31
	448 Call Delegate.get_Method, X0
	449 Compare X0, 0
	450 JumpIfEqual {687}
	451 Move X8, [X0]
	452 Move X9, [X8+424]
	453 Move X1, [X8+432]
	454 NotImplemented "Instruction BLR not yet implemented."
	455 Move [X31+32], X0
	456 Move X0, 0xB34000
	457 Move X0, [X0+1936]
	458 Call 0x1C17D08
	459 Move X1, X0
	460 Move X2, [X31+32]
	461 Move X0, [X31+40]
	462 Move X3, X31
	463 Call String.Concat, X0, X1, X2
	464 Move [X31+40], X0
	465 Move X8, [X31+64]
	466 Compare X8, 0
	467 JumpIfEqual {685}
	468 Move X0, 0xB54000
	469 Move X0, [X0+1512]
	470 Call 0x1C17D08
	471 Move [X31+32], X0
	472 Move X0, 0xB2B000
	473 Move X0, [X0+1808]
	474 Call 0x1C17D08
	475 Move X3, X0
	476 Move X0, [X31+64]
	477 Move X1, [X31+32]
	478 Move X2, [X31+40]
	479 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	480 Move X8, [X28+72]
	481 Move [X31+40], X8
	482 Move X0, 0xB6F000
	483 Move X0, [X0+3920]
	484 Call 0x1C17D08
	485 Move W8, [X0+224]
	486 Compare W8, 0
	487 JumpIfNotEqual {489}
	488 Call 0x1C17DFC
	489 Move X0, 0xB6F000
	490 Move X0, [X0+3920]
	491 Call 0x1C17D08
	492 Move X8, [X0+184]
	493 Move X28, [X8+48]
	494 Compare X28, 0
	495 JumpIfEqual {508}
	496 Move X0, 0xB2B000
	497 Move X0, [X0+2104]
	498 Call 0x1C17D08
	499 Move [X31+32], X0
	500 Move X0, 0xB6F000
	501 Move X0, [X0+3928]
	502 Call 0x1C17D08
	503 Move [X31+24], X0
	504 Move X0, 0xB70000
	505 Move X0, [X0+128]
	506 Call 0x1C17D08
	507 Move [X31+16], X0
	508 Move X0, 0xB2B000
	509 Move X0, [X0+2104]
	510 Call 0x1C17D08
	511 Move [X31+32], X0
	512 Move X0, 0xB6F000
	513 Move X0, [X0+3928]
	514 Call 0x1C17D08
	515 Move [X31+24], X0
	516 Move X0, 0xB70000
	517 Move X0, [X0+128]
	518 Call 0x1C17D08
	519 Move [X31+16], X0
	520 Move X0, 0xB6F000
	521 Move X0, [X0+3920]
	522 Call 0x1C17D08
	523 Move W8, [X0+224]
	524 Compare W8, 0
	525 JumpIfNotEqual {527}
	526 Call 0x1C17DFC
	527 Move X0, 0xB6F000
	528 Move X0, [X0+3920]
	529 Call 0x1C17D08
	530 Move X8, [X0+184]
	531 Move X8, [X8]
	532 Move [X31+8], X8
	533 Move X0, 0xB6F000
	534 Move X0, [X0+3968]
	535 Call 0x1C17D08
	536 Call 0x1C17F10
	537 Move X28, X0
	538 Move X0, 0xB70000
	539 Move X0, [X0+136]
	540 Call 0x1C17D08
	541 Move X2, X0
	542 Move X1, [X31+8]
	543 Move X0, X28
	544 Move X3, X31
	545 Call Func`2<Object, Object>..ctor, X0, X1, X2
	546 Move X0, 0xB6F000
	547 Move X0, [X0+3920]
	548 Call 0x1C17D08
	549 Move X8, [X0+184]
	550 Move [X8+48], X28
	551 Move X0, 0xB6F000
	552 Move X0, [X0+3920]
	553 Call 0x1C17D08
	554 Move X0, 0xB6F000
	555 Move X0, [X0+3984]
	556 Call 0x1C17D08
	557 Move X2, X0
	558 Move X0, [X31+40]
	559 Move X1, X28
	560 Call Enumerable.Select, X0, X1
	561 Move X1, X0
	562 Move X0, [X31+32]
	563 Move X2, X31
	564 Call String.Join, X0, X1
	565 Move X28, X0
	566 Move X0, 0xB2B000
	567 Move X0, [X0+1808]
	568 Call 0x1C17D08
	569 Move X3, X0
	570 Move X0, [X31+64]
	571 Move X1, [X31+24]
	572 Move X2, X28
	573 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	574 Move X0, 0xB54000
	575 Move X0, [X0+1520]
	576 Call 0x1C17D08
	577 Move X28, X0
	578 Move X0, X22
	579 Call 0x1C17D08
	580 Move [X31+40], X0
	581 Move X0, X27
	582 Call 0x1C17D08
	583 Move [X31+32], X0
	584 Move X8, [X31+56]
	585 Move X8, [X8]
	586 NotImplemented "Instruction LDRH not yet implemented."
	587 Compare X9, 0
	588 JumpIfEqual {595}
	589 Move X10, [X8+176]
	590 Add X10, X10, 8
	591 NotImplemented "Instruction LDUR not yet implemented."
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Subtract X9, X9, 1
	594 Add X10, X10, 16
	595 Move X0, [X31+56]
	596 Move W2, 6
	597 Move X1, X28
	598 Call 0x1C5D788
	599 Move W9, [X10]
	600 Add W9, W9, 6
	601 Add X8, X8, W9
	602 Add X0, X8, 312
	603 Move X8, [X0]
	604 Move X7, [X0+8]
	605 Move X2, [X31+48]
	606 Move X0, [X31+56]
	607 Move X1, [X31+16]
	608 Move X3, [X31+64]
	609 Move X5, [X31+32]
	610 Move X4, [X31+40]
	611 Move W6, 527
	612 NotImplemented "Instruction BLR not yet implemented."
	613 Move W8, [X31+76]
	614 Move TEMP, X8
	615 And TEMP, TEMP, 1
	616 Compare TEMP, 1
	617 JumpIfNotEqual {352}
	618 Move [X31+136], W24
	619 Move X0, 0xB70000
	620 Move X0, [X0+144]
	621 Call 0x1C17D08
	622 Move X1, X0
	623 Move X0, [X31+48]
	624 Call 0x1C17DEC
	625 Move X20, X31
	626 Move [X31+136], W24
	627 Move X0, [X29]
	628 Move W8, [X0+224]
	629 Compare W8, 0
	630 JumpIfNotEqual {632}
	631 Call 0x1C17DFC
	632 Move X8, 0xB54000
	633 Move X8, [X8+1360]
	634 Add X0, X31, 144
	635 Move X1, [X8]
	636 Call 0x2BC6018, X0
	637 Compare X20, 0
	638 JumpIfNotEqual {666}
	639 Move X0, X19
	640 Call StateObservationContext.ClearObservedChanges, X0
	641 Move X20, [X31+272]
	642 Move X19, [X31+280]
	643 Move X22, [X31+256]
	644 Move X21, [X31+264]
	645 Move X24, [X31+240]
	646 Move X23, [X31+248]
	647 Move X26, [X31+224]
	648 Move X25, [X31+232]
	649 Move X28, [X31+208]
	650 Move X27, [X31+216]
	651 Move X29, [X31+192]
	652 Move X30, [X31+200]
	653 Add X31, X31, 288
	654 Return 
	655 Move [X31+136], W24
	656 Call 0x1C17F20
	657 Call 0x1C17F20
	658 Call 0x1C17F20
	659 Call 0x1C17F20
	660 Call 0x1C17F20
	661 Call 0x1C17F20
	662 Call 0x1C17F20
	663 Call 0x1C17F20
	664 Call 0x1C17F20
	665 Call 0x1C17F20
	666 Move X0, X20
	667 Call 0x1C17F18
	668 Move X0, X21
	669 Call 0x1C17F18
	670 Call 0x1C17F20
	671 Move [X31+136], W23
	672 Call 0x1C17F20
	673 Move [X31+136], W23
	674 Call 0x1C17F20
	675 Move W0, 8
	676 Move [X31+136], W24
	677 Call 0x3EB2AF0
	678 Move X8, [X31+64]
	679 Move X8, [X8]
	680 Move [X0], X8
	681 Move X1, 0x8EC000
	682 Add X1, X1, 3672
	683 Move X2, X31
	684 Call 0x3EB2B00
	685 Move [X31+136], W23
	686 Call 0x1C17F20
	687 Move [X31+136], W23
	688 Call 0x1C17F20
	689 Move [X31+136], W23
	690 Call 0x1C17F20
	691 Move [X31+136], W23
	692 Call 0x1C17F20
	693 Move [X31+56], X1
	694 Move [X31+64], X0
	695 Move W24, W23
	696 Move [X31+56], X1
	697 Move [X31+64], X0
	698 Move [X31+56], X1
	699 Move [X31+64], X0
	700 Move [X31+136], W24
	701 Call 0x3EB2AE0
	702 Move [X31+56], X1
	703 Move [X31+64], X0
	704 Move [X31+136], W23
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Move [X31+64], X0
	707 Move X0, [X31+64]
	708 Call 0x3EB2AD0
	709 Move X21, [X0]
	710 Call 0x3EB2AE0
	711 Move W20, W31
	712 Move X21, X31
	713 Move [X31+64], X0
	714 Move X0, [X29]
	715 Move W8, [X0+224]
	716 Compare W8, 0
	717 JumpIfNotEqual {719}
	718 Call 0x1C17DFC
	719 Move X8, 0xB54000
	720 Move X8, [X8+1360]
	721 Move X1, [X8]
	722 Add X0, X31, 144
	723 Call 0x2BC6018, X0
	724 Compare X21, 0
	725 JumpIfEqual {753}
	726 Move X0, X21
	727 Call 0x1C17F18
	728 Move [X31+56], X1
	729 Move [X31+64], X0
	730 Move [X31+56], X1
	731 Move [X31+64], X0
	732 Move [X31+136], W24
	733 Move X8, [X31+56]
	734 NotImplemented "Instruction CMP not yet implemented."
	735 Move X0, [X31+64]
	736 Call 0x3EB2AD0
	737 Move X20, [X0]
	738 Call 0x3EB2AE0
	739 Move X20, X31
	740 Move [X31+64], X0
	741 Move X0, [X29]
	742 Move W8, [X0+224]
	743 Compare W8, 0
	744 JumpIfNotEqual {746}
	745 Call 0x1C17DFC
	746 Move X8, 0xB54000
	747 Move X8, [X8+1360]
	748 Move X1, [X8]
	749 Add X0, X31, 144
	750 Call 0x2BC6018, X0
	751 Compare X20, 0
	752 JumpIfNotEqual {755}
	753 Move X0, [X31+64]
	754 Call 0x1D2D690
	755 Move X0, X20
	756 Call 0x1C17F18
	757 Call 0x1991590

Method: System.Void ClearObservedChanges()

Disassembly:
	0x035C9704 LDR X8, [X8 + 0x628]
	0x035C9708 MOV X1, X21
	0x035C970C LDR X2, [X8]
	0x035C9710 BL 0x2DBEF30
	0x035C9714 MOV X0, X21
	0x035C9718 LDP X20, X19, [X31 + 0x20]
	0x035C971C LDP X22, X21, [X31 + 0x10]
	0x035C9720 LDR X30, [X31], #0x30
	0x035C9724 RET
	0x035C9728 BL 0x1C16F20
	0x035C972C SUB X31, X31, 0x30
	0x035C9730 STP X30, X21, [X31 + 0x10]
	0x035C9734 STP X20, X19, [X31 + 0x20]
	0x035C9738 ADRP X21, 0xE17000
	0x035C973C LDRB W8, [X21 + 0x1CC]
	0x035C9740 MOV X19, X1
	0x035C9744 MOV X20, X0
	0x035C9748 TBNZ X8, 0x0, 0x35C9784
	0x035C974C ADRP X0, 0xB6F000
	0x035C9750 LDR X0, [X0 + 0x138]
	0x035C9754 BL 0x1C16CF4
	0x035C9758 ADRP X0, 0xB2A000
	0x035C975C LDR X0, [X0 + 0x750]
	0x035C9760 BL 0x1C16CF4
	0x035C9764 ADRP X0, 0xB53000
	0x035C9768 LDR X0, [X0 + 0x630]
	0x035C976C BL 0x1C16CF4
	0x035C9770 ADRP X0, 0xB6F000
	0x035C9774 LDR X0, [X0 + 0xE8]
	0x035C9778 BL 0x1C16CF4
	0x035C977C MOVZ W8, 0x1
	0x035C9780 STRB W8, [X21 + 0x1CC]
	0x035C9784 STR X31, [X31 + 0x8]
	0x035C9788 CBZ X19, 0x35C9918
	0x035C978C ADRP X21, 0xB2A000
	0x035C9790 LDR X8, [X19]
	0x035C9794 LDR X21, [X21 + 0x750]
	0x035C9798 LDRH W9, [X8 + 0x12E]
	0x035C979C LDR X1, [X21]
	0x035C97A0 CBZ X9, 0x35C97C4
	0x035C97A4 LDR X10, [X8 + 0xB0]
	0x035C97A8 ADD X10, X10, 0x8
	0x035C97AC LDUR X11, [X10 - 0x8]
	0x035C97B0 CMP X11, X1
	0x035C97B4 B.EQ 0x35C97D4
	0x035C97B8 SUBS X9, X9, 0x1
	0x035C97BC ADD X10, X10, 0x10
	0x035C97C0 B.NE 0x35C97AC
	0x035C97C4 MOVZ W2, 0x6
	0x035C97C8 MOV X0, X19
	0x035C97CC BL 0x1C5C788
	0x035C97D0 B 0x35C97E4
	0x035C97D4 LDR W9, [X10]
	0x035C97D8 ADD W9, W9, 0x6
	0x035C97DC ADD X8, X8, W9, 0x4, SXTW
	0x035C97E0 ADD X0, X8, 0x138
	0x035C97E4 LDP X8, X1, [X0]
	0x035C97E8 MOV X0, X19
	0x035C97EC BLR X8
	0x035C97F0 LDR X8, [X19]
	0x035C97F4 LDR X1, [X21]
	0x035C97F8 LDRH W9, [X8 + 0x12E]
	0x035C97FC CBZ X9, 0x35C9820
	0x035C9800 LDR X10, [X8 + 0xB0]
	0x035C9804 ADD X10, X10, 0x8
	0x035C9808 LDUR X11, [X10 - 0x8]
	0x035C980C CMP X11, X1
	0x035C9810 B.EQ 0x35C9830
	0x035C9814 SUBS X9, X9, 0x1
	0x035C9818 ADD X10, X10, 0x10
	0x035C981C B.NE 0x35C9808
	0x035C9820 MOVZ W2, 0x4
	0x035C9824 MOV X0, X19
	0x035C9828 BL 0x1C5C788
	0x035C982C B 0x35C9840
	0x035C9830 LDR W9, [X10]
	0x035C9834 ADD W9, W9, 0x4
	0x035C9838 ADD X8, X8, W9, 0x4, SXTW
	0x035C983C ADD X0, X8, 0x138
	0x035C9840 LDP X8, X1, [X0]
	0x035C9844 MOV X0, X19
	0x035C9848 BLR X8
	0x035C984C MOV W1, W0
	0x035C9850 ADD X2, X31, 0x8
	0x035C9854 MOV X0, X20
	0x035C9858 BL 0x35C9140
	0x035C985C LDR X0, [X31 + 0x8]
	0x035C9860 CBZ X0, 0x35C9918
	0x035C9864 ADRP X8, 0xB6F000
	0x035C9868 LDR X8, [X8 + 0xE8]
	0x035C986C MOV X1, X19
	0x035C9870 LDR X2, [X8]
	0x035C9874 BL 0x24F1750
	0x035C9878 LDR X8, [X19]
	0x035C987C LDR X20, [X20 + 0x18]
	0x035C9880 LDR X1, [X21]
	0x035C9884 LDRH W9, [X8 + 0x12E]
	0x035C9888 CBZ X9, 0x35C98AC
	0x035C988C LDR X10, [X8 + 0xB0]
	0x035C9890 ADD X10, X10, 0x8
	0x035C9894 LDUR X11, [X10 - 0x8]
	0x035C9898 CMP X11, X1
	0x035C989C B.EQ 0x35C98BC
	0x035C98A0 SUBS X9, X9, 0x1
	0x035C98A4 ADD X10, X10, 0x10
	0x035C98A8 B.NE 0x35C9894
	0x035C98AC MOVZ W2, 0x4
	0x035C98B0 MOV X0, X19
	0x035C98B4 BL 0x1C5C788
	0x035C98B8 B 0x35C98CC
	0x035C98BC LDR W9, [X10]
	0x035C98C0 ADD W9, W9, 0x4
	0x035C98C4 ADD X8, X8, W9, 0x4, SXTW
	0x035C98C8 ADD X0, X8, 0x138
	0x035C98CC LDP X8, X1, [X0]
	0x035C98D0 MOV X0, X19
	0x035C98D4 BLR X8
	0x035C98D8 CBZ X20, 0x35C9918
	0x035C98DC ADRP X8, 0xB53000
	0x035C98E0 LDR X8, [X8 + 0x630]
	0x035C98E4 MOV W1, W0
	0x035C98E8 MOV X0, X20
	0x035C98EC LDR X2, [X8]
	0x035C98F0 BL 0x301BCCC
	0x035C98F4 CBZ X0, 0x35C9918
	0x035C98F8 ADRP X8, 0xB6F000
	0x035C98FC LDR X8, [X8 + 0x138]
	0x035C9900 MOV X1, X19
	0x035C9904 LDP X20, X19, [X31 + 0x20]
	0x035C9908 LDP X30, X21, [X31 + 0x10]
	0x035C990C LDR X2, [X8]
	0x035C9910 ADD X31, X31, 0x30
	0x035C9914 B 0x2DBE67C
	0x035C9918 BL 0x1C16F20
	0x035C991C MOV X1, X31
	0x035C9920 B 0x33A51F0
	0x035C9924 STP X30, X21, [X31 - 0x20]!
	0x035C9928 STP X20, X19, [X31 + 0x10]
	0x035C992C ADRP X20, 0xE17000
	0x035C9930 ADRP X21, 0xB2A000
	0x035C9934 LDRB W8, [X20 + 0x1CE]
	0x035C9938 LDR X21, [X21 + 0x7D0]
	0x035C993C MOV X19, X0
	0x035C9940 TBNZ X8, 0x0, 0x35C9958
	0x035C9944 ADRP X0, 0xB2A000
	0x035C9948 LDR X0, [X0 + 0x7D0]
	0x035C994C BL 0x1C16CF4
	0x035C9950 MOVZ W8, 0x1
	0x035C9954 STRB W8, [X20 + 0x1CE]
	0x035C9958 LDR X0, [X21]
	0x035C995C LDR W8, [X0 + 0xE0]
	0x035C9960 CBNZ W8, 0x35C9968
	0x035C9964 BL 0x1C16DFC
	0x035C9968 MOV X0, X19
	0x035C996C LDP X20, X19, [X31 + 0x10]
	0x035C9970 MOV X1, X31
	0x035C9974 LDP X30, X21, [X31], #0x20
	0x035C9978 B 0x33B2C54
	0x035C997C STR X30, [X31 - 0x30]!
	0x035C9980 STP X22, X21, [X31 + 0x10]
	0x035C9984 STP X20, X19, [X31 + 0x20]
	0x035C9988 ADRP X21, 0xE17000
	0x035C998C ADRP X22, 0xB2A000
	0x035C9990 LDRB W8, [X21 + 0x1CF]
	0x035C9994 LDR X22, [X22 + 0x7D0]
	0x035C9998 MOV X19, X1
	0x035C999C MOV X20, X0
	0x035C99A0 TBNZ X8, 0x0, 0x35C99B8
	0x035C99A4 ADRP X0, 0xB2A000
	0x035C99A8 LDR X0, [X0 + 0x7D0]
	0x035C99AC BL 0x1C16CF4
	0x035C99B0 MOVZ W8, 0x1
	0x035C99B4 STRB W8, [X21 + 0x1CF]
	0x035C99B8 LDR X0, [X22]
	0x035C99BC LDR W8, [X0 + 0xE0]
	0x035C99C0 CBNZ W8, 0x35C99C8
	0x035C99C4 BL 0x1C16DFC
	0x035C99C8 MOV X0, X20
	0x035C99CC MOV X1, X19
	0x035C99D0 LDP X20, X19, [X31 + 0x20]
	0x035C99D4 LDP X22, X21, [X31 + 0x10]
	0x035C99D8 MOV X2, X31
	0x035C99DC LDR X30, [X31], #0x30
	0x035C99E0 B 0x33B2C70
	0x035C99E4 STP X30, X23, [X31 - 0x30]!
	0x035C99E8 STP X22, X21, [X31 + 0x10]
	0x035C99EC STP X20, X19, [X31 + 0x20]
	0x035C99F0 ADRP X22, 0xE17000
	0x035C99F4 ADRP X23, 0xB2A000
	0x035C99F8 LDRB W8, [X22 + 0x1D0]
	0x035C99FC LDR X23, [X23 + 0x7D0]
	0x035C9A00 MOV X19, X2
	0x035C9A04 MOV X20, X1
	0x035C9A08 MOV X21, X0
	0x035C9A0C TBNZ X8, 0x0, 0x35C9A24
	0x035C9A10 ADRP X0, 0xB2A000
	0x035C9A14 LDR X0, [X0 + 0x7D0]
	0x035C9A18 BL 0x1C16CF4
	0x035C9A1C MOVZ W8, 0x1
	0x035C9A20 STRB W8, [X22 + 0x1D0]
	0x035C9A24 LDR X0, [X23]
	0x035C9A28 LDR W8, [X0 + 0xE0]
	0x035C9A2C CBNZ W8, 0x35C9A34
	0x035C9A30 BL 0x1C16DFC
	0x035C9A34 MOV X0, X21
	0x035C9A38 MOV X1, X20
	0x035C9A3C MOV X2, X19
	0x035C9A40 LDP X20, X19, [X31 + 0x20]
	0x035C9A44 LDP X22, X21, [X31 + 0x10]
	0x035C9A48 MOV X3, X31
	0x035C9A4C LDP X30, X23, [X31], #0x30
	0x035C9A50 B 0x33B2CA0
	0x035C9A54 STR X30, [X31 - 0x30]!
	0x035C9A58 STP X22, X21, [X31 + 0x10]
	0x035C9A5C STP X20, X19, [X31 + 0x20]
	0x035C9A60 ADRP X21, 0xE17000
	0x035C9A64 ADRP X22, 0xB6F000
	0x035C9A68 ADRP X20, 0xB6F000
	0x035C9A6C LDRB W8, [X21 + 0x1D1]
	0x035C9A70 LDR X22, [X22 + 0x140]
	0x035C9A74 LDR X20, [X20 + 0x148]
	0x035C9A78 MOV X19, X0
	0x035C9A7C TBNZ X8, 0x0, 0x35C9AA0
	0x035C9A80 ADRP X0, 0xB6F000
	0x035C9A84 LDR X0, [X0 + 0x148]
	0x035C9A88 BL 0x1C16CF4
	0x035C9A8C ADRP X0, 0xB6F000
	0x035C9A90 LDR X0, [X0 + 0x140]
	0x035C9A94 BL 0x1C16CF4
	0x035C9A98 MOVZ W8, 0x1
	0x035C9A9C STRB W8, [X21 + 0x1D1]
	0x035C9AA0 LDR X0, [X22]
	0x035C9AA4 BL 0x1C16F10
	0x035C9AA8 LDR X1, [X20]
	0x035C9AAC MOV X20, X0
	0x035C9AB0 BL 0x2AA4804
	0x035C9AB4 MOV X0, X19
	0x035C9AB8 MOV X1, X31
	0x035C9ABC STR X20, [X19 + 0x10]
	0x035C9AC0 BL 0x33BDD8C
	0x035C9AC4 MOV X0, X19
	0x035C9AC8 LDP X20, X19, [X31 + 0x20]
	0x035C9ACC LDP X22, X21, [X31 + 0x10]
	0x035C9AD0 LDR X30, [X31], #0x30
	0x035C9AD4 B 0x35C9AD8
	0x035C9AD8 STP X29, X30, [X31 - 0x60]!
	0x035C9ADC STP X28, X27, [X31 + 0x10]
	0x035C9AE0 STP X26, X25, [X31 + 0x20]
	0x035C9AE4 STP X24, X23, [X31 + 0x30]
	0x035C9AE8 STP X22, X21, [X31 + 0x40]
	0x035C9AEC STP X20, X19, [X31 + 0x50]
	0x035C9AF0 ADRP X20, 0xE17000
	0x035C9AF4 ADRP X21, 0xB6F000
	0x035C9AF8 ADRP X24, 0xB6F000
	0x035C9AFC LDRB W8, [X20 + 0x1D2]
	0x035C9B00 LDR X21, [X21 + 0x150]
	0x035C9B04 LDR X24, [X24 + 0x158]
	0x035C9B08 MOV X19, X0
	0x035C9B0C TBNZ X8, 0x0, 0x35CA094
	0x035C9B10 ADRP X0, 0xB6F000
	0x035C9B14 LDR X0, [X0 + 0x160]
	0x035C9B18 BL 0x1C16CF4
	0x035C9B1C ADRP X0, 0xB6F000
	0x035C9B20 LDR X0, [X0 + 0x168]
	0x035C9B24 BL 0x1C16CF4
	0x035C9B28 ADRP X0, 0xB6F000
	0x035C9B2C LDR X0, [X0 + 0x170]
	0x035C9B30 BL 0x1C16CF4
	0x035C9B34 ADRP X0, 0xB6F000
	0x035C9B38 LDR X0, [X0 + 0x178]
	0x035C9B3C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X20, 0xE18000
	015 Move W8, [X20+450]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0xB54000
	022 Move X0, [X0+1360]
	023 Call 0x1C17CF4
	024 Move X0, 0xB70000
	025 Move X0, [X0+16]
	026 Call 0x1C17CF4
	027 Move X0, 0xB54000
	028 Move X0, [X0+1368]
	029 Call 0x1C17CF4
	030 Move X0, 0xB70000
	031 Move X0, [X0+24]
	032 Call 0x1C17CF4
	033 Move X0, 0xB54000
	034 Move X0, [X0+1384]
	035 Call 0x1C17CF4
	036 Move X0, 0xB70000
	037 Move X0, [X0+32]
	038 Call 0x1C17CF4
	039 Move X0, 0xB54000
	040 Move X0, [X0+1400]
	041 Call 0x1C17CF4
	042 Move X0, 0xB70000
	043 Move X0, [X0+152]
	044 Call 0x1C17CF4
	045 Move X0, 0xB70000
	046 Move X0, [X0+40]
	047 Call 0x1C17CF4
	048 Move X0, 0xB70000
	049 Move X0, [X0+160]
	050 Call 0x1C17CF4
	051 Move X0, 0xB2C000
	052 Move X0, [X0+432]
	053 Call 0x1C17CF4
	054 Move X0, 0xB70000
	055 Move X0, [X0+168]
	056 Call 0x1C17CF4
	057 Move X0, 0xB54000
	058 Move X0, [X0+1480]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+450], W8
	062 NotImplemented "Instruction MOVI not yet implemented."
	063 Move [X31+96], X31
	064 Move [X31+104], X31
	065 Move [X31+112], X31
	066 Move [X31+80], X31
	067 Move [X31+48], V0
	068 Move [X31+56], V0
	069 Move X0, [X19+32]
	070 Compare X0, 0
	071 JumpIfEqual {254}
	072 Move X8, 0xB70000
	073 Move X8, [X8+40]
	074 Move X28, 0xB70000
	075 Move X29, 0xB2C000
	076 Move X26, 0xB54000
	077 Move X23, 0xB54000
	078 Move X24, 0xB54000
	079 Move X25, 0xB54000
	080 Move X28, [X28+24]
	081 Move X29, [X29+432]
	082 Move X26, [X26+1480]
	083 Move X23, [X23+1400]
	084 Move X24, [X24+1368]
	085 Move X25, [X25+1384]
	086 Move X1, [X8]
	087 Move X21, 0xB54000
	088 Move X22, 0xB70000
	089 Move X27, 0xB70000
	090 Move X21, [X21+1360]
	091 Move X22, [X22+152]
	092 Move X27, [X27+16]
	093 Add X8, X31, 8
	094 Call HashSet`1<Object>.GetEnumerator, X0
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 Move X8, [X31+24]
	097 Move [X31+6], V0
	098 Move [X31+112], X8
	099 Move X1, [X28]
	100 Add X0, X31, 96
	101 Call Enumerator<Object>.MoveNext, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {132}
	106 Move X20, [X31+112]
	107 Compare X20, 0
	108 JumpIfEqual {250}
	109 Move X8, [X20]
	110 Move X1, [X29]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move W2, 3
	121 Move X0, X20
	122 Call 0x1C5D788
	123 Move W9, [X10]
	124 Add W9, W9, 3
	125 Add X8, X8, W9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X2, [X0+8]
	129 Move X0, X20
	130 Move W1, W31
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X1, [X27]
	133 Add X0, X31, 96
	134 Call Enumerator<Object>.Dispose, X0
	135 Move X0, [X19+64]
	136 Compare X0, 0
	137 JumpIfEqual {254}
	138 Move X1, [X26]
	139 Add X8, X31, 8
	140 Call 0x25F8F38, X0
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Move X8, [X31+40]
	144 Move [X31+48], V0
	145 Move [X31+56], V1
	146 Move [X31+80], X8
	147 Move X0, [X23]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X1, [X24]
	153 Add X0, X31, 48
	154 Call 0x2BC5DE0, X0
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {192}
	159 Move X0, [X23]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X1, [X25]
	165 Add X0, X31, 48
	166 Call 0x2BC601C, X0
	167 Move X20, X0
	168 Compare X0, 0
	169 JumpIfEqual {252}
	170 Move X8, [X20+88]
	171 Compare X8, 0
	172 JumpIfEqual {253}
	173 Move W2, [X8+24]
	174 Move W9, [X8+28]
	175 Add W9, W9, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move [X8+24], W31
	178 Move [X8+28], W9
	179 Move X0, [X8+16]
	180 Move W1, W31
	181 Move X3, X31
	182 Call Array.Clear, X0, X1, X2
	183 Move X8, [X20+72]
	184 Compare X8, 0
	185 JumpIfEqual {251}
	186 Move W8, [X8+32]
	187 Compare W8, 0
	188 JumpIfNotEqual {147}
	189 Move X1, [X20+16]
	190 Move X0, X19
	191 Call StateObservationContext.DeregisterObserver, X0, X1
	192 Move X20, X31
	193 Move W24, 7
	194 Move X0, [X23]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X1, [X21]
	200 Add X0, X31, 48
	201 Call 0x2BC6018, X0
	202 Compare X20, 0
	203 JumpIfNotEqual {286}
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Compare W24, 0
	206 JumpIfNotEqual {236}
	207 Move X0, [X19+32]
	208 Compare X0, 0
	209 JumpIfEqual {254}
	210 Move X1, [X22]
	211 Call HashSet`1<Object>.Clear, X0
	212 Move X8, [X19+24]
	213 Compare X8, 0
	214 JumpIfEqual {254}
	215 Move W2, [X8+24]
	216 Move W9, [X8+28]
	217 Add W9, W9, 1
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move [X8+24], W31
	220 Move [X8+28], W9
	221 Move X0, [X8+16]
	222 Move W1, W31
	223 Move X3, X31
	224 Call Array.Clear, X0, X1, X2
	225 Move X0, [X19+64]
	226 Compare X0, 0
	227 JumpIfEqual {254}
	228 Move X8, [X0]
	229 Move X9, [X8+728]
	230 Move X1, [X8+736]
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move X0, [X19+80]
	233 Compare X0, 0
	234 JumpIfEqual {254}
	235 Call StateOperationPool.DeallocateAll, X0
	236 Move X20, [X31+208]
	237 Move X19, [X31+216]
	238 Move X22, [X31+192]
	239 Move X21, [X31+200]
	240 Move X24, [X31+176]
	241 Move X23, [X31+184]
	242 Move X26, [X31+160]
	243 Move X25, [X31+168]
	244 Move X28, [X31+144]
	245 Move X27, [X31+152]
	246 Move X29, [X31+128]
	247 Move X30, [X31+136]
	248 Add X31, X31, 224
	249 Return 
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Call 0x3EB2AD0
	257 Move X20, [X0]
	258 Call 0x3EB2AE0
	259 Move W24, W31
	260 Move [X31], X0
	261 Move X20, X31
	262 Move [X31], X0
	263 Move X0, [X23]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X1, [X21]
	269 Add X0, X31, 48
	270 Call 0x2BC6018, X0
	271 Compare X20, 0
	272 JumpIfEqual {295}
	273 Move X0, X20
	274 Call 0x1C17F18
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move [X31], X0
	277 Move X0, [X31]
	278 Call 0x3EB2AD0
	279 Move X20, [X0]
	280 Call 0x3EB2AE0
	281 Move X1, [X27]
	282 Add X0, X31, 96
	283 Call Enumerator<Object>.Dispose, X0
	284 Compare X20, 0
	285 JumpIfEqual {135}
	286 Move X0, X20
	287 Call 0x1C17F18
	288 Move X20, X31
	289 Move [X31], X0
	290 Move X1, [X27]
	291 Add X0, X31, 96
	292 Call Enumerator<Object>.Dispose, X0
	293 Compare X20, 0
	294 JumpIfNotEqual {297}
	295 Move X0, [X31]
	296 Call 0x1D2D690
	297 Move X0, X20
	298 Call 0x1C17F18
	299 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x035C9E04 ADRP X0, 0xB6F000
	0x035C9E08 LDR X0, [X0 + 0x358]
	0x035C9E0C BL 0x1C16CF4
	0x035C9E10 ADRP X0, 0xB6F000
	0x035C9E14 LDR X0, [X0 + 0x360]
	0x035C9E18 BL 0x1C16CF4
	0x035C9E1C ADRP X0, 0xB6F000
	0x035C9E20 LDR X0, [X0 + 0x368]
	0x035C9E24 BL 0x1C16CF4
	0x035C9E28 ADRP X0, 0xB6F000
	0x035C9E2C LDR X0, [X0 + 0x370]
	0x035C9E30 BL 0x1C16CF4
	0x035C9E34 ADRP X0, 0xB6F000
	0x035C9E38 LDR X0, [X0 + 0x378]
	0x035C9E3C BL 0x1C16CF4
	0x035C9E40 ADRP X0, 0xB6F000
	0x035C9E44 LDR X0, [X0 + 0x380]
	0x035C9E48 BL 0x1C16CF4
	0x035C9E4C ADRP X0, 0xB6F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE18000
	005 Move X20, 0xB2B000
	006 Move W8, [X19+451]
	007 Move X20, [X20+1760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB2B000
	013 Move X0, [X0+1760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+451], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 0x2328
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

