Type: SpatialSys.ObservableState.StateObject/<>c__DisplayClass13_0

Method: System.Void .ctor()

Disassembly:
	0x035CED84 MOV X0, X19
	0x035CED88 MOV W2, W31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.ValueTuple`2<System.String, SpatialSys.ObservableState.IStateObject> <InternalInitialize>b__0(System.Reflection.PropertyInfo p)

Disassembly:
	0x035D09BC LDRB W11, [X9 + 0x130]
	0x035D09C0 LDRB W10, [X8 + 0x130]
	0x035D09C4 CMP W11, W10
	0x035D09C8 B.CC 0x35D0A84
	0x035D09CC LDR X11, [X9 + 0xC8]
	0x035D09D0 ADD X11, X11, X10, 0x3, LSL
	0x035D09D4 LDUR X11, [X11 - 0x8]
	0x035D09D8 CMP X11, X8
	0x035D09DC B.NE 0x35D0A84
	0x035D09E0 LDR X9, [X9 + 0xC8]
	0x035D09E4 ADD X9, X9, X10, 0x3, LSL
	0x035D09E8 LDUR X9, [X9 - 0x8]
	0x035D09EC CMP X9, X8
	0x035D09F0 CSEL X0, X0, X31, EQ
	0x035D09F4 LDR X8, [X0]
	0x035D09F8 LDR X1, [X8 + 0x3A0]
	0x035D09FC LDR X9, [X8 + 0x398]
	0x035D0A00 BLR X9
	0x035D0A04 B 0x35D08FC
	0x035D0A08 MOV X21, X31
	0x035D0A0C CBZ X20, 0x35D0A68
	0x035D0A10 LDR X8, [X20]
	0x035D0A14 LDR X1, [X22]
	0x035D0A18 LDRH W9, [X8 + 0x12E]
	0x035D0A1C CBZ X9, 0x35D0A40
	0x035D0A20 LDR X10, [X8 + 0xB0]
	0x035D0A24 ADD X10, X10, 0x8
	0x035D0A28 LDUR X11, [X10 - 0x8]
	0x035D0A2C CMP X11, X1
	0x035D0A30 B.EQ 0x35D0A50
	0x035D0A34 SUBS X9, X9, 0x1
	0x035D0A38 ADD X10, X10, 0x10
	0x035D0A3C B.NE 0x35D0A28
	0x035D0A40 MOV X0, X20
	0x035D0A44 MOV W2, W31
	0x035D0A48 BL 0x1C5C788
	0x035D0A4C B 0x35D0A5C
	0x035D0A50 LDRSW X9, [X10]
	0x035D0A54 ADD X8, X8, X9, 0x4, LSL
	0x035D0A58 ADD X0, X8, 0x138
	0x035D0A5C LDP X8, X1, [X0]
	0x035D0A60 MOV X0, X20
	0x035D0A64 BLR X8
	0x035D0A68 CBNZ X21, 0x35D0A90
	0x035D0A6C STR X31, [X19 + 0x28]
	0x035D0A70 LDP X20, X19, [X31 + 0x30]
	0x035D0A74 LDP X22, X21, [X31 + 0x20]
	0x035D0A78 LDP X24, X23, [X31 + 0x10]
	0x035D0A7C LDR X30, [X31], #0x40
	0x035D0A80 RET
	0x035D0A84 BL 0x1C16F20
	0x035D0A88 BL 0x1C16F20
	0x035D0A8C BL 0x1C16F20
	0x035D0A90 MOV X0, X21
	0x035D0A94 BL 0x1C16F18
	0x035D0A98 B 0x35D0AA4
	0x035D0A9C B 0x35D0AA4
	0x035D0AA0 B 0x35D0AA4
	0x035D0AA4 CMP W1, 0x1
	0x035D0AA8 B.NE 0x35D0ABC
	0x035D0AAC BL 0x3EB1AD0
	0x035D0AB0 LDR X21, [X0]
	0x035D0AB4 BL 0x3EB1AE0
	0x035D0AB8 B 0x35D0A0C
	0x035D0ABC MOV X19, X0
	0x035D0AC0 MOV X21, X31
	0x035D0AC4 B 0x35D0ACC
	0x035D0AC8 MOV X19, X0
	0x035D0ACC CBZ X20, 0x35D0B28
	0x035D0AD0 LDR X8, [X20]
	0x035D0AD4 LDR X1, [X22]
	0x035D0AD8 LDRH W9, [X8 + 0x12E]
	0x035D0ADC CBZ X9, 0x35D0B00
	0x035D0AE0 LDR X10, [X8 + 0xB0]
	0x035D0AE4 ADD X10, X10, 0x8
	0x035D0AE8 LDUR X11, [X10 - 0x8]
	0x035D0AEC CMP X11, X1
	0x035D0AF0 B.EQ 0x35D0B10
	0x035D0AF4 SUBS X9, X9, 0x1
	0x035D0AF8 ADD X10, X10, 0x10
	0x035D0AFC B.NE 0x35D0AE8
	0x035D0B00 MOV X0, X20
	0x035D0B04 MOV W2, W31
	0x035D0B08 BL 0x1C5C788
	0x035D0B0C B 0x35D0B1C
	0x035D0B10 LDRSW X9, [X10]
	0x035D0B14 ADD X8, X8, X9, 0x4, LSL
	0x035D0B18 ADD X0, X8, 0x138
	0x035D0B1C LDP X8, X1, [X0]
	0x035D0B20 MOV X0, X20
	0x035D0B24 BLR X8
	0x035D0B28 CBNZ X21, 0x35D0B34
	0x035D0B2C MOV X0, X19
	0x035D0B30 BL 0x1D2C690
	0x035D0B34 MOV X0, X21
	0x035D0B38 BL 0x1C16F18
	0x035D0B3C BL 0x1990590
	0x035D0B40 SUB X31, X31, 0x90
	0x035D0B44 STP X29, X30, [X31 + 0x30]
	0x035D0B48 STP X28, X27, [X31 + 0x40]
	0x035D0B4C STP X26, X25, [X31 + 0x50]
	0x035D0B50 STP X24, X23, [X31 + 0x60]
	0x035D0B54 STP X22, X21, [X31 + 0x70]
	0x035D0B58 STP X20, X19, [X31 + 0x80]
	0x035D0B5C ADRP X19, 0xE10000
	0x035D0B60 LDRB W8, [X19 + 0x20C]
	0x035D0B64 MOV X25, X1
	0x035D0B68 MOV X20, X0
	0x035D0B6C STR W2, [X31 + 0x18]
	0x035D0B70 TBNZ X8, 0x0, 0x35D0BE8
	0x035D0B74 ADRP X0, 0xB68000
	0x035D0B78 LDR X0, [X0 + 0x6D8]
	0x035D0B7C BL 0x1C16CF4
	0x035D0B80 ADRP X0, 0xB68000
	0x035D0B84 LDR X0, [X0 + 0x6E0]
	0x035D0B88 BL 0x1C16CF4
	0x035D0B8C ADRP X0, 0xB24000
	0x035D0B90 LDR X0, [X0 + 0x1B0]
	0x035D0B94 BL 0x1C16CF4
	0x035D0B98 ADRP X0, 0xB4B000
	0x035D0B9C LDR X0, [X0 + 0xBC0]
	0x035D0BA0 BL 0x1C16CF4
	0x035D0BA4 ADRP X0, 0xB68000
	0x035D0BA8 LDR X0, [X0 + 0x6E8]
	0x035D0BAC BL 0x1C16CF4
	0x035D0BB0 ADRP X0, 0xB68000
	0x035D0BB4 LDR X0, [X0 + 0x6F0]
	0x035D0BB8 BL 0x1C16CF4
	0x035D0BBC ADRP X0, 0xB68000
	0x035D0BC0 LDR X0, [X0 + 0x6F8]
	0x035D0BC4 BL 0x1C16CF4
	0x035D0BC8 ADRP X0, 0xB68000
	0x035D0BCC LDR X0, [X0 + 0x700]
	0x035D0BD0 BL 0x1C16CF4
	0x035D0BD4 ADRP X0, 0xB4D000
	0x035D0BD8 LDR X0, [X0 + 0x310]
	0x035D0BDC BL 0x1C16CF4
	0x035D0BE0 MOVZ W8, 0x1
	0x035D0BE4 STRB W8, [X19 + 0x20C]
	0x035D0BE8 STRB W31, [X31 + 0x2C]
	0x035D0BEC CBZ X25, 0x35D0CB0
	0x035D0BF0 ADRP X19, 0xB68000
	0x035D0BF4 LDR X8, [X25]
	0x035D0BF8 LDR X19, [X19 + 0x6D8]
	0x035D0BFC LDRH W9, [X8 + 0x12E]
	0x035D0C00 LDR X1, [X19]
	0x035D0C04 CBZ X9, 0x35D0C28
	0x035D0C08 LDR X10, [X8 + 0xB0]
	0x035D0C0C ADD X10, X10, 0x8
	0x035D0C10 LDUR X11, [X10 - 0x8]
	0x035D0C14 CMP X11, X1
	0x035D0C18 B.EQ 0x35D0C38
	0x035D0C1C SUBS X9, X9, 0x1
	0x035D0C20 ADD X10, X10, 0x10
	0x035D0C24 B.NE 0x35D0C10
	0x035D0C28 MOV X0, X25
	0x035D0C2C MOV W2, W31
	0x035D0C30 BL 0x1C5C788
	0x035D0C34 B 0x35D0C44
	0x035D0C38 LDRSW X9, [X10]
	0x035D0C3C ADD X8, X8, X9, 0x4, LSL
	0x035D0C40 ADD X0, X8, 0x138
	0x035D0C44 LDP X8, X1, [X0]
	0x035D0C48 MOV X0, X25
	0x035D0C4C BLR X8
	0x035D0C50 CBZ W0, 0x35D0CB0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xE11000
	015 Move W8, [X21+513]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0xB69000
	023 Move X0, [X0+1656]
	024 Call 0x1C17CF4
	025 Move X0, 0xB69000
	026 Move X0, [X0+1664]
	027 Call 0x1C17CF4
	028 Move X0, 0xB25000
	029 Move X0, [X0+432]
	030 Call 0x1C17CF4
	031 Move X0, 0xB4E000
	032 Move X0, [X0+784]
	033 Call 0x1C17CF4
	034 Move X0, 0xB69000
	035 Move X0, [X0+1672]
	036 Call 0x1C17CF4
	037 Move X0, 0xB69000
	038 Move X0, [X0+1416]
	039 Call 0x1C17CF4
	040 Move X0, 0xB69000
	041 Move X0, [X0+1680]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+513], W8
	045 Compare X19, 0
	046 JumpIfEqual {195}
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X9, [X8+584]
	050 Move X1, [X8+592]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X1, X31
	053 Move X2, X31
	054 Call Activator.CreateInstance, X0, X1
	055 Compare X0, 0
	056 JumpIfEqual {69}
	057 Move X8, 0xB25000
	058 Move X8, [X8+432]
	059 Move X22, X0
	060 Move X23, [X8]
	061 Move X1, X23
	062 Call 0x1C17E00
	063 Move X21, X0
	064 Compare X0, 0
	065 JumpIfNotEqual {70}
	066 Move X0, X22
	067 Move X1, X23
	068 Call 0x1C181E0
	069 Move X21, X31
	070 Move X8, [X19]
	071 Move X22, [X20+16]
	072 Move X0, X19
	073 Move X9, [X8+424]
	074 Move X1, [X8+432]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move W8, [X20+24]
	077 Move X23, X0
	078 Compare X21, 0
	079 JumpIfEqual {87}
	080 Move X9, 0xB4E000
	081 Move X9, [X9+784]
	082 Move X10, [X21]
	083 Move X9, [X9]
	084 Move W12, [X10+304]
	085 Move W11, [X9+304]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X24, X31
	088 Compare W8, 0
	089 JumpIfEqual {192}
	090 Move X8, [X19]
	091 Move X28, 0xB69000
	092 Move X0, X19
	093 Move X9, [X8+536]
	094 Move X1, [X8+544]
	095 Move X28, [X28+1416]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, [X28]
	098 Move X25, X0
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {105}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X8, [X28]
	105 Move X9, [X8+184]
	106 Move X29, 0xB69000
	107 Move X26, [X9+8]
	108 Move X29, [X29+1656]
	109 Compare X26, 0
	110 JumpIfNotEqual {133}
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {117}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X8, [X28]
	117 Move X9, 0xB69000
	118 Move X8, [X8+184]
	119 Move X9, [X9+1664]
	120 Move X27, [X8]
	121 Move X0, [X9]
	122 Call 0x1C17F10
	123 Move X8, 0xB69000
	124 Move X8, [X8+1672]
	125 Move X1, X27
	126 Move X3, X31
	127 Move X26, X0
	128 Move X2, [X8]
	129 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	130 Move X8, [X28]
	131 Move X8, [X8+184]
	132 Move [X8+8], X26
	133 Move X2, [X29]
	134 Move X0, X25
	135 Move X1, X26
	136 Call Enumerable.All, X0, X1
	137 Compare X24, 0
	138 JumpIfEqual {195}
	139 Move X8, [X24]
	140 Move X25, 0xB69000
	141 And W3, W0, 1
	142 Move X0, X24
	143 Move X9, [X8+872]
	144 Move X4, [X8+880]
	145 Move X25, [X25+1680]
	146 Move X1, X22
	147 Move X2, X23
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X8, [X19]
	150 Move X1, [X20+16]
	151 Move X0, X19
	152 Move X2, X21
	153 Move X9, [X8+744]
	154 Move X4, [X8+752]
	155 Move X3, X31
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X8, [X19]
	158 Move X0, X19
	159 Move X9, [X8+424]
	160 Move X1, [X8+432]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X3, [X25]
	163 Move X1, X0
	164 Add X0, X31, 0
	165 Move X2, X21
	166 Move [X31], X31
	167 Move [X31+8], X31
	168 Call ValueTuple`2<Object, Object>..ctor, X0, X1, X2
	169 Move X0, [X31]
	170 Move X1, [X31+8]
	171 Move X20, [X31+96]
	172 Move X19, [X31+104]
	173 Move X22, [X31+80]
	174 Move X21, [X31+88]
	175 Move X24, [X31+64]
	176 Move X23, [X31+72]
	177 Move X26, [X31+48]
	178 Move X25, [X31+56]
	179 Move X28, [X31+32]
	180 Move X27, [X31+40]
	181 Move X29, [X31+16]
	182 Move X30, [X31+24]
	183 Add X31, X31, 112
	184 Return X0
	185 Move X10, [X10+200]
	186 Add X10, X10, X11
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CSEL not yet implemented."
	190 Compare W8, 0
	191 JumpIfNotEqual {90}
	192 Move W0, W31
	193 Compare X24, 0
	194 JumpIfNotEqual {139}
	195 Call 0x1C17F20

