Type: SpatialSys.ObservableState.StateDictionary`2

Method: System.Int32 get_childCount()

Disassembly:
	0x02606B64 LDR X8, [X31 + 0x28]
	0x02606B68 STP V0, V1, [X31 + 0x30]
	0x02606B6C STR X8, [X31 + 0x50]
	0x02606B70 LDR X8, [X19 + 0x20]
	0x02606B74 LDR X8, [X8 + 0xC0]
	0x02606B78 LDR X1, [X8 + 0x180]
	0x02606B7C ADD X0, X31, 0x30
	0x02606B80 BL 0x2BF5330
	0x02606B84 TBZ X0, 0x0, 0x2606CD8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+16]
	008 Move X30, [X31+16]
	009 Call Dictionary`2<Int32, Object>.get_Count, X0
	010 Return X0
	011 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<SpatialSys.ObservableState.IStateObject> get_childStateObjects()

Disassembly:
	0x02606B88 LDR X22, [X20 + 0x30]
	0x02606B8C CBZ X22, 0x2606D14
	0x02606B90 LDR X8, [X22]
	0x02606B94 LDR W21, [X31 + 0x40]
	0x02606B98 LDR X27, [X31 + 0x48]
	0x02606B9C LDR X1, [X25]
	0x02606BA0 LDRH W9, [X8 + 0x12E]
	0x02606BA4 CBZ X9, 0x2606BC8
	0x02606BA8 LDR X10, [X8 + 0xB0]
	0x02606BAC ADD X10, X10, 0x8
	0x02606BB0 LDUR X11, [X10 - 0x8]
	0x02606BB4 CMP X11, X1
	0x02606BB8 B.EQ 0x2606BD8
	0x02606BBC SUBS X9, X9, 0x1
	0x02606BC0 ADD X10, X10, 0x10
	0x02606BC4 B.NE 0x2606BB0
	0x02606BC8 MOV X0, X22
	0x02606BCC MOV W2, W31
	0x02606BD0 BL 0x1C5C788
	0x02606BD4 B 0x2606BE4
	0x02606BD8 LDRSW X9, [X10]
	0x02606BDC ADD X8, X8, X9, 0x4, LSL
	0x02606BE0 ADD X0, X8, 0x138
	0x02606BE4 LDP X8, X1, [X0]
	0x02606BE8 MOV X0, X22
	0x02606BEC BLR X8
	0x02606BF0 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+24]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X0, X8
	018 Call 0x1C17F10
	019 Move X8, [X20+32]
	020 Move TEMP, 1
	021 Not TEMP
	022 Move W1, TEMP
	023 Move X20, X0
	024 Move X8, [X8+192]
	025 Move X2, [X8+32]
	026 Call 0x297E498, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {35}
	029 Move [X20+40], X19
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20

Method: System.Boolean get_isLeafObject()

Disassembly:
	0x02606BF4 CBZ X0, 0x2606D18
	0x02606BF8 LDR X8, [X19 + 0x20]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_isIndexedCollection()

Disassembly:
	0x02606BFC LDR W23, [X20 + 0x48]
	0x02606C00 LDR X9, [X8 + 0xC0]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_isDerivedState()

Disassembly:
	0x02606C04 LDR X8, [X22]
	0x02606C08 LDR X24, [X9 + 0x170]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: TValue get_Item(TKey key)

Disassembly:
	0x02606C0C LDRH W9, [X8 + 0x12E]
	0x02606C10 LDR X1, [X24 + 0x20]
	0x02606C14 LDRH W2, [X24 + 0x50]
	0x02606C18 CBZ X9, 0x2606C3C
	0x02606C1C LDR X10, [X8 + 0xB0]
	0x02606C20 ADD X10, X10, 0x8
	0x02606C24 LDUR X11, [X10 - 0x8]
	0x02606C28 CMP X11, X1
	0x02606C2C B.EQ 0x2606C48

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+48]
	008 Move X30, [X31+16]
	009 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2/ValueCollection<TKey, TValue> get_Values()

Disassembly:
	0x02606C30 SUBS X9, X9, 0x1
	0x02606C34 ADD X10, X10, 0x10
	0x02606C38 B.NE 0x2606C24
	0x02606C3C MOV X0, X22
	0x02606C40 BL 0x1C5C788
	0x02606C44 B 0x2606C58
	0x02606C48 LDR W9, [X10]
	0x02606C4C ADD W9, W9, W2
	0x02606C50 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+64]
	008 Move X30, [X31+16]
	009 Call Dictionary`2<Int32, Object>.get_Values, X0
	010 Return X0
	011 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2/KeyCollection<TKey, TValue> get_Keys()

Disassembly:
	0x02606C54 ADD X0, X8, 0x138
	0x02606C58 LDR X0, [X0 + 0x8]
	0x02606C5C MOV X1, X24
	0x02606C60 BL 0x1C16DF8
	0x02606C64 LDR X8, [X0 + 0x8]
	0x02606C68 MOV X4, X0
	0x02606C6C MOV X0, X22
	0x02606C70 MOV X1, X20
	0x02606C74 MOV W2, W21

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+80]
	008 Move X30, [X31+16]
	009 Call Dictionary`2<Int32, Object>.get_Keys, X0
	010 Return X0
	011 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x02606C78 MOV W3, W23
	0x02606C7C BLR X8
	0x02606C80 CBZ X27, 0x2606D10
	0x02606C84 LDR X9, [X27]
	0x02606C88 LDR X8, [X26]
	0x02606C8C LDRB W11, [X9 + 0x130]
	0x02606C90 LDRB W10, [X8 + 0x130]
	0x02606C94 CMP W11, W10
	0x02606C98 B.CC 0x2606D10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+16]
	008 Move X30, [X31+16]
	009 Call Dictionary`2<Int32, Object>.get_Count, X0
	010 Return X0
	011 Call 0x1C17F20

Method: System.Type get_keyType()

Disassembly:
	0x02606C9C LDR X11, [X9 + 0xC8]
	0x02606CA0 ADD X11, X11, X10, 0x3, LSL

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Int32 get_keyTypeID()

Disassembly:
	0x02606CA4 LDUR X11, [X11 - 0x8]
	0x02606CA8 CMP X11, X8

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_keyTypeID(System.Int32 value)

Disassembly:
	0x02606CAC B.NE 0x2606D10
	0x02606CB0 LDR X9, [X9 + 0xC8]

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.Type get_valueType()

Disassembly:
	0x02606CB4 ADD X9, X9, X10, 0x3, LSL
	0x02606CB8 LDUR X9, [X9 - 0x8]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Collections.ICollection SpatialSys.ObservableState.IStateDictionary.get_keys()

Disassembly:
	0x02606CBC CMP X9, X8
	0x02606CC0 CSEL X0, X27, X31, EQ
	0x02606CC4 LDR X8, [X0]
	0x02606CC8 LDR X1, [X8 + 0x3A0]
	0x02606CCC LDR X9, [X8 + 0x398]
	0x02606CD0 BLR X9
	0x02606CD4 B 0x2606B70
	0x02606CD8 MOV X21, X31
	0x02606CDC LDR X8, [X19 + 0x20]
	0x02606CE0 ADD X0, X31, 0x30
	0x02606CE4 LDR X8, [X8 + 0xC0]
	0x02606CE8 LDR X1, [X8 + 0x188]
	0x02606CEC BL 0x2BF5448
	0x02606CF0 CBNZ X21, 0x2606D20
	0x02606CF4 LDP X20, X19, [X31 + 0xA0]
	0x02606CF8 LDP X22, X21, [X31 + 0x90]
	0x02606CFC LDP X24, X23, [X31 + 0x80]
	0x02606D00 LDP X26, X25, [X31 + 0x70]
	0x02606D04 LDP X30, X27, [X31 + 0x60]
	0x02606D08 ADD X31, X31, 0xB0
	0x02606D0C RET
	0x02606D10 BL 0x1C16F20
	0x02606D14 BL 0x1C16F20
	0x02606D18 BL 0x1C16F20
	0x02606D1C BL 0x1C16F20
	0x02606D20 MOV X0, X21
	0x02606D24 BL 0x1C16F18
	0x02606D28 B 0x2606D40
	0x02606D2C B 0x2606D40
	0x02606D30 B 0x2606D40
	0x02606D34 B 0x2606D40
	0x02606D38 B 0x2606D40
	0x02606D3C B 0x2606D40
	0x02606D40 MOV X20, X0
	0x02606D44 CMP W1, 0x1
	0x02606D48 B.NE 0x2606D60
	0x02606D4C MOV X0, X20
	0x02606D50 BL 0x3EB1AD0
	0x02606D54 LDR X21, [X0]
	0x02606D58 BL 0x3EB1AE0
	0x02606D5C B 0x2606CDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1DD4000
	005 Move W8, [X20+4078]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1AEE000
	012 Move X0, [X0+2072]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4078], W8
	016 Move X19, [X19+96]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x1AEE000
	020 Move X8, [X19]
	021 Move X10, [X10+2072]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 2
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 2
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Collections.ICollection SpatialSys.ObservableState.IStateDictionary.get_values()

Disassembly:
	0x02606D60 MOV X21, X31
	0x02606D64 B 0x2606D6C
	0x02606D68 MOV X20, X0
	0x02606D6C LDR X8, [X19 + 0x20]
	0x02606D70 LDR X8, [X8 + 0xC0]
	0x02606D74 LDR X1, [X8 + 0x188]
	0x02606D78 ADD X0, X31, 0x30
	0x02606D7C BL 0x2BF5448
	0x02606D80 CBNZ X21, 0x2606D8C
	0x02606D84 MOV X0, X20
	0x02606D88 BL 0x1D2C690
	0x02606D8C MOV X0, X21
	0x02606D90 BL 0x1C16F18
	0x02606D94 BL 0x1990590
	0x02606D98 STR X30, [X31 - 0x10]!
	0x02606D9C LDR X0, [X0 + 0x60]
	0x02606DA0 CBZ X0, 0x2606DB8
	0x02606DA4 LDR X8, [X2 + 0x20]
	0x02606DA8 LDR X8, [X8 + 0xC0]
	0x02606DAC LDR X2, [X8 + 0x190]
	0x02606DB0 LDR X30, [X31], #0x10
	0x02606DB4 B 0x2A13880
	0x02606DB8 BL 0x1C16F20
	0x02606DBC STR X30, [X31 - 0x10]!
	0x02606DC0 LDR X0, [X0 + 0x60]
	0x02606DC4 CBZ X0, 0x2606DDC
	0x02606DC8 LDR X8, [X2 + 0x20]
	0x02606DCC LDR X8, [X8 + 0xC0]
	0x02606DD0 LDR X2, [X8 + 0x198]
	0x02606DD4 LDR X30, [X31], #0x10
	0x02606DD8 B 0x2A138A4
	0x02606DDC BL 0x1C16F20
	0x02606DE0 SUB X31, X31, 0x70
	0x02606DE4 STP X30, X19, [X31 + 0x60]
	0x02606DE8 LDR X0, [X0 + 0x60]
	0x02606DEC CBZ X0, 0x2606E40
	0x02606DF0 LDR X8, [X1 + 0x20]
	0x02606DF4 MOV X19, X1
	0x02606DF8 LDR X8, [X8 + 0xC0]
	0x02606DFC LDR X1, [X8 + 0x138]
	0x02606E00 ADD X8, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1DD4000
	005 Move W8, [X20+4079]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1AEE000
	012 Move X0, [X0+2072]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4079], W8
	016 Move X19, [X19+96]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x1AEE000
	020 Move X8, [X19]
	021 Move X10, [X10+2072]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 3
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 3
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: SpatialSys.ObservableState.IStateObject get_Item(System.Object key)

Disassembly:
	0x02606E04 BL 0x2A13AB4
	0x02606E08 LDR X8, [X31 + 0x20]
	0x02606E0C LDP V1, V0, [X31]
	0x02606E10 ADD X1, X31, 0x0
	0x02606E14 STR X8, [X31 + 0x50]
	0x02606E18 STP V1, V0, [X31 + 0x30]
	0x02606E1C STP V1, V0, [X31]
	0x02606E20 STR X8, [X31 + 0x20]
	0x02606E24 LDR X8, [X19 + 0x20]
	0x02606E28 LDR X8, [X8 + 0xC0]
	0x02606E2C LDR X0, [X8 + 0x140]
	0x02606E30 BL 0x1C16E04
	0x02606E34 LDP X30, X19, [X31 + 0x60]
	0x02606E38 ADD X31, X31, 0x70
	0x02606E3C RET
	0x02606E40 BL 0x1C16F20
	0x02606E44 SUB X31, X31, 0x70
	0x02606E48 STP X30, X19, [X31 + 0x60]
	0x02606E4C LDR X0, [X0 + 0x60]
	0x02606E50 CBZ X0, 0x2606EA4
	0x02606E54 LDR X8, [X1 + 0x20]
	0x02606E58 MOV X19, X1
	0x02606E5C LDR X8, [X8 + 0xC0]
	0x02606E60 LDR X1, [X8 + 0x138]
	0x02606E64 ADD X8, X31, 0x0
	0x02606E68 BL 0x2A13AB4
	0x02606E6C LDR X8, [X31 + 0x20]
	0x02606E70 LDP V1, V0, [X31]
	0x02606E74 ADD X1, X31, 0x0
	0x02606E78 STR X8, [X31 + 0x50]
	0x02606E7C STP V1, V0, [X31 + 0x30]
	0x02606E80 STP V1, V0, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, [X0+96]
	006 Compare X20, 0
	007 JumpIfEqual {40}
	008 Move X8, [X2+32]
	009 Move X21, X1
	010 Move X19, X2
	011 Move X8, [X8+192]
	012 Move X1, [X8+40]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Compare X21, 0
	022 JumpIfEqual {40}
	023 Move X8, [X21]
	024 Move X9, [X1+64]
	025 Move X0, X21
	026 Move X8, [X8+64]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Call 0x1C17E08
	029 Move X8, [X19+32]
	030 Move W1, [X0]
	031 Move X0, X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X8, [X8+192]
	035 Move X2, [X8+48]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	039 Return X0
	040 Call 0x1C17F20
	041 Call 0x1C181E0

Method: SpatialSys.ObservableState.IStateObject SpatialSys.ObservableState.IStateDictionary<TKey>.get_Item(TKey key)

Disassembly:
	0x02606E84 STR X8, [X31 + 0x20]
	0x02606E88 LDR X8, [X19 + 0x20]
	0x02606E8C LDR X8, [X8 + 0xC0]
	0x02606E90 LDR X0, [X8 + 0x140]
	0x02606E94 BL 0x1C16E04
	0x02606E98 LDP X30, X19, [X31 + 0x60]
	0x02606E9C ADD X31, X31, 0x70
	0x02606EA0 RET
	0x02606EA4 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+48]
	008 Move X30, [X31+16]
	009 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02606EA8 STR X30, [X31 - 0x40]!
	0x02606EAC STP X24, X23, [X31 + 0x10]
	0x02606EB0 STP X22, X21, [X31 + 0x20]
	0x02606EB4 STP X20, X19, [X31 + 0x30]
	0x02606EB8 ADRP X20, 0x1DD3000
	0x02606EBC LDRB W8, [X20 + 0xFF6]
	0x02606EC0 MOV X22, X2
	0x02606EC4 MOV W19, W1
	0x02606EC8 MOV X21, X0
	0x02606ECC TBNZ X8, 0x0, 0x2606EF0
	0x02606ED0 ADRP X0, 0x1B17000
	0x02606ED4 LDR X0, [X0 + 0x318]
	0x02606ED8 BL 0x1C16CF4
	0x02606EDC ADRP X0, 0x1B17000
	0x02606EE0 LDR X0, [X0 + 0x310]
	0x02606EE4 BL 0x1C16CF4
	0x02606EE8 MOVZ W8, 0x1
	0x02606EEC STRB W8, [X20 + 0xFF6]
	0x02606EF0 STR X31, [X31 + 0x8]
	0x02606EF4 LDR X0, [X21 + 0x60]
	0x02606EF8 CBZ X0, 0x2607098
	0x02606EFC LDR X8, [X22 + 0x20]
	0x02606F00 ADD X2, X31, 0x8
	0x02606F04 MOV W1, W19
	0x02606F08 LDR X8, [X8 + 0xC0]
	0x02606F0C LDR X3, [X8 + 0x1A8]
	0x02606F10 BL 0x2A150AC
	0x02606F14 MOV W20, W0
	0x02606F18 TBZ X0, 0x0, 0x2607080
	0x02606F1C LDR X0, [X21 + 0x60]
	0x02606F20 CBZ X0, 0x2607098
	0x02606F24 LDR X8, [X22 + 0x20]
	0x02606F28 MOV W1, W19
	0x02606F2C LDR X8, [X8 + 0xC0]
	0x02606F30 LDR X2, [X8 + 0x1B8]
	0x02606F34 BL 0x2A14A88
	0x02606F38 LDR X23, [X21 + 0x30]
	0x02606F3C MOVZ W8, 0x1
	0x02606F40 STRB W8, [X21 + 0x20]
	0x02606F44 CBZ X23, 0x2607098
	0x02606F48 ADRP X10, 0x1B17000
	0x02606F4C LDR X8, [X23]
	0x02606F50 LDR X10, [X10 + 0x318]
	0x02606F54 LDRH W9, [X8 + 0x12E]
	0x02606F58 LDR X1, [X10]
	0x02606F5C CBZ X9, 0x2606F80
	0x02606F60 LDR X10, [X8 + 0xB0]
	0x02606F64 ADD X10, X10, 0x8
	0x02606F68 LDUR X11, [X10 - 0x8]
	0x02606F6C CMP X11, X1
	0x02606F70 B.EQ 0x2606F90
	0x02606F74 SUBS X9, X9, 0x1
	0x02606F78 ADD X10, X10, 0x10
	0x02606F7C B.NE 0x2606F68
	0x02606F80 MOV X0, X23
	0x02606F84 MOV W2, W31
	0x02606F88 BL 0x1C5C788
	0x02606F8C B 0x2606F9C
	0x02606F90 LDRSW X9, [X10]
	0x02606F94 ADD X8, X8, X9, 0x4, LSL
	0x02606F98 ADD X0, X8, 0x138
	0x02606F9C LDP X8, X1, [X0]
	0x02606FA0 MOV X0, X23
	0x02606FA4 BLR X8
	0x02606FA8 CBZ X0, 0x2607098
	0x02606FAC LDR X8, [X22 + 0x20]
	0x02606FB0 LDR W22, [X21 + 0x48]
	0x02606FB4 MOV X23, X0
	0x02606FB8 LDR X9, [X8 + 0xC0]
	0x02606FBC LDR X8, [X0]
	0x02606FC0 LDR X24, [X9 + 0x170]
	0x02606FC4 LDRH W9, [X8 + 0x12E]
	0x02606FC8 LDR X1, [X24 + 0x20]
	0x02606FCC LDRH W2, [X24 + 0x50]
	0x02606FD0 CBZ X9, 0x2606FF4
	0x02606FD4 LDR X10, [X8 + 0xB0]
	0x02606FD8 ADD X10, X10, 0x8
	0x02606FDC LDUR X11, [X10 - 0x8]
	0x02606FE0 CMP X11, X1
	0x02606FE4 B.EQ 0x2607000
	0x02606FE8 SUBS X9, X9, 0x1
	0x02606FEC ADD X10, X10, 0x10
	0x02606FF0 B.NE 0x2606FDC
	0x02606FF4 MOV X0, X23
	0x02606FF8 BL 0x1C5C788
	0x02606FFC B 0x2607010
	0x02607000 LDR W9, [X10]
	0x02607004 ADD W9, W9, W2
	0x02607008 ADD X8, X8, W9, 0x4, SXTW
	0x0260700C ADD X0, X8, 0x138
	0x02607010 LDR X0, [X0 + 0x8]
	0x02607014 MOV X1, X24
	0x02607018 BL 0x1C16DF8
	0x0260701C LDR X8, [X0 + 0x8]
	0x02607020 MOV X4, X0
	0x02607024 MOV X0, X23
	0x02607028 MOV X1, X21
	0x0260702C MOV W2, W19
	0x02607030 MOV W3, W22
	0x02607034 BLR X8
	0x02607038 LDR X0, [X31 + 0x8]
	0x0260703C CBZ X0, 0x2607098
	0x02607040 ADRP X9, 0x1B16000
	0x02607044 LDR X9, [X9 + 0x310]
	0x02607048 LDR X8, [X0]
	0x0260704C LDR X9, [X9]
	0x02607050 LDRB W11, [X8 + 0x130]
	0x02607054 LDRB W10, [X9 + 0x130]
	0x02607058 CMP W11, W10
	0x0260705C B.CC 0x2607098
	0x02607060 LDR X11, [X8 + 0xC8]
	0x02607064 ADD X10, X11, X10, 0x3, LSL
	0x02607068 LDUR X10, [X10 - 0x8]
	0x0260706C CMP X10, X9
	0x02607070 B.NE 0x2607098
	0x02607074 LDR X9, [X8 + 0x398]
	0x02607078 LDR X1, [X8 + 0x3A0]
	0x0260707C BLR X9
	0x02607080 AND W0, W20, 0x1
	0x02607084 LDP X20, X19, [X31 + 0x30]
	0x02607088 LDP X22, X21, [X31 + 0x20]
	0x0260708C LDP X24, X23, [X31 + 0x10]
	0x02607090 LDR X30, [X31], #0x40
	0x02607094 RET
	0x02607098 BL 0x1C16F20
	0x0260709C SUB X31, X31, 0xB0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1DD4000
	007 Move X21, 0x1AEE000
	008 Move W8, [X22+4080]
	009 Move X21, [X21+1728]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1B18000
	017 Move X0, [X0+784]
	018 Call 0x1C17CF4
	019 Move X0, 0x1AEE000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4080], W8
	024 Move X8, [X20+32]
	025 Move X0, [X21]
	026 Move X8, [X8+192]
	027 Move W9, [X0+224]
	028 Move X21, [X8+96]
	029 Compare W9, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X31
	034 Call Type.GetTypeFromHandle, X0
	035 Move [X19+64], X0
	036 Move X8, [X20+32]
	037 Move X1, X31
	038 Move X8, [X8+192]
	039 Move X0, [X8+104]
	040 Call Type.GetTypeFromHandle, X0
	041 Move [X19+80], X0
	042 Move X8, [X20+32]
	043 Move X8, [X8+192]
	044 Move X0, [X8+128]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X8, [X20+32]
	056 Move X8, [X8+192]
	057 Move X0, [X8+128]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Move X8, [X0+184]
	065 Move X21, [X8+8]
	066 Compare X21, 0
	067 JumpIfNotEqual {132}
	068 Move X8, [X20+32]
	069 Move X8, [X8+192]
	070 Move X0, [X8+128]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, [X20+32]
	082 Move X8, [X8+192]
	083 Move X0, [X8+128]
	084 Move W9, [X0+309]
	085 Move TEMP, X9
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {92}
	089 Call 0x1C5D684
	090 Move X8, [X20+32]
	091 Move X8, [X8+192]
	092 Move X8, [X8+120]
	093 Move X9, [X0+184]
	094 Move W10, [X8+309]
	095 Move X22, [X9]
	096 Move TEMP, X10
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {103}
	100 Move X0, X8
	101 Call 0x1C5D684
	102 Move X8, X0
	103 Move X0, X8
	104 Call 0x1C17F10
	105 Move X8, [X20+32]
	106 Move X1, X22
	107 Move X21, X0
	108 Move X8, [X8+192]
	109 Move X2, [X8+136]
	110 Move X3, [X8+144]
	111 Call Func`1<Object>..ctor, X0, X1, X2
	112 Move X8, [X20+32]
	113 Move X8, [X8+192]
	114 Move X0, [X8+128]
	115 Move W9, [X0+309]
	116 Move TEMP, X9
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {123}
	120 Call 0x1C5D684
	121 Move X8, [X20+32]
	122 Move X8, [X8+192]
	123 Move X9, [X0+184]
	124 Move [X9+8], X21
	125 Move X0, [X8+128]
	126 Move W8, [X0+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {132}
	131 Call 0x1C5D684
	132 Move [X19+88], X21
	133 Move X8, [X20+32]
	134 Move X21, 0x1B17000
	135 Move X8, [X8+192]
	136 Move X0, [X8+8]
	137 Move W8, [X0+309]
	138 Move X21, [X21+784]
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {144}
	143 Call 0x1C5D684
	144 Call 0x1C17F10
	145 Move X8, [X20+32]
	146 Move X20, X0
	147 Move X8, [X8+192]
	148 Move X1, [X8+152]
	149 Call Dictionary`2<Int32, Object>..ctor, X0
	150 Move [X19+96], X20
	151 Move X0, [X21]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X19
	157 Move X20, [X31+32]
	158 Move X19, [X31+40]
	159 Move X22, [X31+16]
	160 Move X21, [X31+24]
	161 Move X1, X31
	162 Move X30, [X31+48]
	163 Call StateObjectBase..ctor, X0
	164 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.IStateObject parent, System.String stateName)

Disassembly:
	0x026070A0 STP X30, X23, [X31 + 0x80]
	0x026070A4 STP X22, X21, [X31 + 0x90]
	0x026070A8 STP X20, X19, [X31 + 0xA0]
	0x026070AC MOVI V0.2D, 0x0
	0x026070B0 STR X31, [X31 + 0x70]
	0x026070B4 STP X31, X31, [X31 + 0x30]
	0x026070B8 STP V0, V0, [X31 + 0x50]
	0x026070BC STR X31, [X31 + 0x40]
	0x026070C0 MOV X20, X0
	0x026070C4 LDR X0, [X0 + 0x60]
	0x026070C8 CBZ X0, 0x260724C
	0x026070CC LDR X8, [X2 + 0x20]
	0x026070D0 MOV X22, X1
	0x026070D4 MOV X19, X2
	0x026070D8 LDR X8, [X8 + 0xC0]
	0x026070DC LDR X1, [X8 + 0x138]
	0x026070E0 ADD X8, X31, 0x8
	0x026070E4 BL 0x2A13AB4
	0x026070E8 LDUR V0, [X31 + 0x8]
	0x026070EC LDUR V1, [X31 + 0x18]
	0x026070F0 LDR X8, [X31 + 0x28]
	0x026070F4 MOV X21, X31
	0x026070F8 STP V0, V1, [X31 + 0x50]
	0x026070FC STR X8, [X31 + 0x70]
	0x02607100 LDR X8, [X19 + 0x20]
	0x02607104 LDR X8, [X8 + 0xC0]
	0x02607108 LDR X1, [X8 + 0x180]
	0x0260710C ADD X0, X31, 0x50
	0x02607110 BL 0x2BF5330
	0x02607114 TBZ X0, 0x0, 0x260718C
	0x02607118 CBZ X22, 0x2607248
	0x0260711C LDP X23, X2, [X31 + 0x60]
	0x02607120 LDR X0, [X22 + 0x40]
	0x02607124 LDR X8, [X22 + 0x18]
	0x02607128 LDR X3, [X22 + 0x28]
	0x0260712C MOV X1, X23
	0x02607130 BLR X8
	0x02607134 TBZ X0, 0x0, 0x2607100
	0x02607138 CBNZ X21, 0x2607170
	0x0260713C LDR X8, [X19 + 0x20]
	0x02607140 LDR X8, [X8 + 0xC0]
	0x02607144 LDR X0, [X8 + 0x1D0]
	0x02607148 LDRB W8, [X0 + 0x135]
	0x0260714C TBNZ X8, 0x0, 0x2607154
	0x02607150 BL 0x1C5C684
	0x02607154 BL 0x1C16F10
	0x02607158 LDR X8, [X19 + 0x20]
	0x0260715C MOV X21, X0
	0x02607160 LDR X8, [X8 + 0xC0]
	0x02607164 LDR X1, [X8 + 0x1D8]
	0x02607168 BL 0x2DA9EF4
	0x0260716C CBZ X21, 0x2607260
	0x02607170 LDR X8, [X19 + 0x20]
	0x02607174 LDR X8, [X8 + 0xC0]
	0x02607178 LDR X2, [X8 + 0x1E0]
	0x0260717C MOV X0, X21
	0x02607180 MOV W1, W23
	0x02607184 BL 0x2DAB03C
	0x02607188 B 0x2607100
	0x0260718C MOV X23, X31
	0x02607190 MOVZ W22, 0x5
	0x02607194 LDR X8, [X19 + 0x20]
	0x02607198 ADD X0, X31, 0x50
	0x0260719C LDR X8, [X8 + 0xC0]
	0x026071A0 LDR X1, [X8 + 0x188]
	0x026071A4 BL 0x2BF5448
	0x026071A8 CBNZ X23, 0x2607250
	0x026071AC CMP W22, 0x5
	0x026071B0 B.EQ 0x26071B8
	0x026071B4 CBNZ W22, 0x2607234
	0x026071B8 CBZ X21, 0x2607234
	0x026071BC LDR X8, [X19 + 0x20]
	0x026071C0 MOV X0, X21
	0x026071C4 LDR X8, [X8 + 0xC0]
	0x026071C8 LDR X1, [X8 + 0x1E8]
	0x026071CC ADD X8, X31, 0x8
	0x026071D0 BL 0x2DAAA30
	0x026071D4 LDUR V0, [X31 + 0x8]
	0x026071D8 LDR X8, [X31 + 0x18]
	0x026071DC STR V0, [X31 + 0x3]
	0x026071E0 STR X8, [X31 + 0x40]
	0x026071E4 LDR X8, [X19 + 0x20]
	0x026071E8 LDR X8, [X8 + 0xC0]
	0x026071EC LDR X1, [X8 + 0x208]
	0x026071F0 ADD X0, X31, 0x30
	0x026071F4 BL 0x2BBDA6C
	0x026071F8 TBZ X0, 0x0, 0x2607218
	0x026071FC LDR X8, [X19 + 0x20]
	0x02607200 LDR W1, [X31 + 0x40]
	0x02607204 LDR X8, [X8 + 0xC0]
	0x02607208 LDR X2, [X8 + 0xD8]
	0x0260720C MOV X0, X20
	0x02607210 BL 0x2606EA8
	0x02607214 B 0x26071E4
	0x02607218 MOV X20, X31
	0x0260721C LDR X8, [X19 + 0x20]
	0x02607220 ADD X0, X31, 0x30
	0x02607224 LDR X8, [X8 + 0xC0]
	0x02607228 LDR X1, [X8 + 0x210]
	0x0260722C BL 0x2BBDA68
	0x02607230 CBNZ X20, 0x2607258
	0x02607234 LDP X20, X19, [X31 + 0xA0]
	0x02607238 LDP X22, X21, [X31 + 0x90]
	0x0260723C LDP X30, X23, [X31 + 0x80]
	0x02607240 ADD X31, X31, 0xB0
	0x02607244 RET
	0x02607248 BL 0x1C16F20
	0x0260724C BL 0x1C16F20
	0x02607250 MOV X0, X23
	0x02607254 BL 0x1C16F18
	0x02607258 MOV X0, X20
	0x0260725C BL 0x1C16F18
	0x02607260 BL 0x1C16F20
	0x02607264 B 0x26072C4
	0x02607268 B 0x26072C4
	0x0260726C B 0x26072D0
	0x02607270 B 0x2607274
	0x02607274 MOV X22, X0
	0x02607278 CMP W1, 0x1
	0x0260727C B.NE 0x2607294
	0x02607280 MOV X0, X22
	0x02607284 BL 0x3EB1AD0
	0x02607288 LDR X20, [X0]
	0x0260728C BL 0x3EB1AE0
	0x02607290 B 0x260721C
	0x02607294 MOV X20, X31
	0x02607298 B 0x26072A0
	0x0260729C MOV X22, X0
	0x026072A0 LDR X8, [X19 + 0x20]
	0x026072A4 LDR X8, [X8 + 0xC0]
	0x026072A8 LDR X1, [X8 + 0x210]
	0x026072AC ADD X0, X31, 0x30
	0x026072B0 BL 0x2BBDA68

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1DD3000
	009 Move X23, 0x1AED000
	010 Move W8, [X24+4081]
	011 Move X23, [X23+1728]
	012 Move X22, X3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x1B17000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move X0, 0x1AED000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+4081], W8
	028 Move X8, [X22+32]
	029 Move X0, [X23]
	030 Move X8, [X8+192]
	031 Move W9, [X0+224]
	032 Move X23, [X8+96]
	033 Compare W9, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X23
	037 Move X1, X31
	038 Call Type.GetTypeFromHandle, X0
	039 Move [X21+64], X0
	040 Move X8, [X22+32]
	041 Move X1, X31
	042 Move X8, [X8+192]
	043 Move X0, [X8+104]
	044 Call Type.GetTypeFromHandle, X0
	045 Move [X21+80], X0
	046 Move X8, [X22+32]
	047 Move X8, [X8+192]
	048 Move X0, [X8+128]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X8, [X22+32]
	060 Move X8, [X8+192]
	061 Move X0, [X8+128]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move X8, [X0+184]
	069 Move X23, [X8+16]
	070 Compare X23, 0
	071 JumpIfNotEqual {136}
	072 Move X8, [X22+32]
	073 Move X8, [X8+192]
	074 Move X0, [X8+128]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X8, [X22+32]
	086 Move X8, [X8+192]
	087 Move X0, [X8+128]
	088 Move W9, [X0+309]
	089 Move TEMP, X9
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {96}
	093 Call 0x1C5D684
	094 Move X8, [X22+32]
	095 Move X8, [X8+192]
	096 Move X8, [X8+120]
	097 Move X9, [X0+184]
	098 Move W10, [X8+309]
	099 Move X24, [X9]
	100 Move TEMP, X10
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {107}
	104 Move X0, X8
	105 Call 0x1C5D684
	106 Move X8, X0
	107 Move X0, X8
	108 Call 0x1C17F10
	109 Move X8, [X22+32]
	110 Move X1, X24
	111 Move X23, X0
	112 Move X8, [X8+192]
	113 Move X2, [X8+160]
	114 Move X3, [X8+144]
	115 Call Func`1<Object>..ctor, X0, X1, X2
	116 Move X8, [X22+32]
	117 Move X8, [X8+192]
	118 Move X0, [X8+128]
	119 Move W9, [X0+309]
	120 Move TEMP, X9
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {127}
	124 Call 0x1C5D684
	125 Move X8, [X22+32]
	126 Move X8, [X8+192]
	127 Move X9, [X0+184]
	128 Move [X9+16], X23
	129 Move X0, [X8+128]
	130 Move W8, [X0+309]
	131 Move TEMP, X8
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {136}
	135 Call 0x1C5D684
	136 Move [X21+88], X23
	137 Move X8, [X22+32]
	138 Move X23, 0x1B17000
	139 Move X8, [X8+192]
	140 Move X0, [X8+8]
	141 Move W8, [X0+309]
	142 Move X23, [X23+784]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {148}
	147 Call 0x1C5D684
	148 Call 0x1C17F10
	149 Move X8, [X22+32]
	150 Move X22, X0
	151 Move X8, [X8+192]
	152 Move X1, [X8+152]
	153 Call Dictionary`2<Int32, Object>..ctor, X0
	154 Move [X21+96], X22
	155 Move X0, [X23]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X21
	161 Move X1, X20
	162 Move X2, X19
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X24, [X31+16]
	168 Move X23, [X31+24]
	169 Move X3, X31
	170 Move X30, [X31+64]
	171 Call StateObjectBase..ctor, X0, X1, X2
	172 Return 

Method: System.Void InternalInitialize(SpatialSys.ObservableState.IStateObject parent, System.String stateName, System.Boolean serialize)

Disassembly:
	0x026072B4 CBZ X20, 0x2607318
	0x026072B8 MOV X0, X20
	0x026072BC BL 0x1C16F18
	0x026072C0 B 0x26072D0
	0x026072C4 MOV X22, X0
	0x026072C8 MOV X21, X31
	0x026072CC B 0x26072D4
	0x026072D0 MOV X22, X0
	0x026072D4 CMP W1, 0x1
	0x026072D8 B.NE 0x26072F4
	0x026072DC MOV X0, X22
	0x026072E0 BL 0x3EB1AD0
	0x026072E4 LDR X23, [X0]
	0x026072E8 BL 0x3EB1AE0
	0x026072EC MOV W22, W31
	0x026072F0 B 0x2607194
	0x026072F4 MOV X23, X31
	0x026072F8 B 0x2607300
	0x026072FC MOV X22, X0
	0x02607300 LDR X8, [X19 + 0x20]
	0x02607304 LDR X8, [X8 + 0xC0]
	0x02607308 LDR X1, [X8 + 0x188]
	0x0260730C ADD X0, X31, 0x50
	0x02607310 BL 0x2BF5448
	0x02607314 CBNZ X23, 0x2607320
	0x02607318 MOV X0, X22
	0x0260731C BL 0x1D2C690
	0x02607320 MOV X0, X23
	0x02607324 BL 0x1C16F18
	0x02607328 BL 0x1990590
	0x0260732C STR X30, [X31 - 0x10]!
	0x02607330 LDR X0, [X0 + 0x60]
	0x02607334 CBZ X0, 0x260734C
	0x02607338 LDR X8, [X3 + 0x20]
	0x0260733C LDR X8, [X8 + 0xC0]
	0x02607340 LDR X3, [X8 + 0x1A8]
	0x02607344 LDR X30, [X31], #0x10
	0x02607348 B 0x2A150AC
	0x0260734C BL 0x1C16F20
	0x02607350 SUB X31, X31, 0x30
	0x02607354 STP X30, X21, [X31 + 0x10]
	0x02607358 STP X20, X19, [X31 + 0x20]
	0x0260735C STR X31, [X31 + 0x8]
	0x02607360 LDR X8, [X2 + 0x20]
	0x02607364 MOV X20, X2
	0x02607368 ADD X2, X31, 0x8
	0x0260736C MOV W19, W1
	0x02607370 LDR X8, [X8 + 0xC0]
	0x02607374 MOV X21, X0
	0x02607378 LDR X3, [X8 + 0x218]
	0x0260737C BL 0x260732C
	0x02607380 TBZ X0, 0x0, 0x260738C
	0x02607384 LDR X0, [X31 + 0x8]
	0x02607388 B 0x26073A4
	0x0260738C LDR X8, [X20 + 0x20]
	0x02607390 MOV X0, X21
	0x02607394 MOV W1, W19
	0x02607398 LDR X8, [X8 + 0xC0]
	0x0260739C LDR X2, [X8 + 0xD0]
	0x026073A0 BL 0x26066A0
	0x026073A4 LDP X20, X19, [X31 + 0x20]
	0x026073A8 LDP X30, X21, [X31 + 0x10]
	0x026073AC ADD X31, X31, 0x30
	0x026073B0 RET
	0x026073B4 STP X29, X30, [X31 - 0x60]!
	0x026073B8 STP X28, X27, [X31 + 0x10]
	0x026073BC STP X26, X25, [X31 + 0x20]
	0x026073C0 STP X24, X23, [X31 + 0x30]
	0x026073C4 STP X22, X21, [X31 + 0x40]
	0x026073C8 STP X20, X19, [X31 + 0x50]
	0x026073CC ADRP X22, 0x1DD2000
	0x026073D0 LDRB W8, [X22 + 0xFF7]
	0x026073D4 MOV X20, X3
	0x026073D8 MOV W24, W2
	0x026073DC MOV X19, X1
	0x026073E0 MOV X21, X0
	0x026073E4 TBNZ X8, 0x0, 0x260742C
	0x026073E8 ADRP X0, 0x1AEC000
	0x026073EC LDR X0, [X0 + 0xE00]
	0x026073F0 BL 0x1C16CF4
	0x026073F4 ADRP X0, 0x1AEC000
	0x026073F8 LDR X0, [X0 + 0xE18]
	0x026073FC BL 0x1C16CF4
	0x02607400 ADRP X0, 0x1AED000
	0x02607404 LDR X0, [X0 + 0x1B0]
	0x02607408 BL 0x1C16CF4
	0x0260740C ADRP X0, 0x1AED000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1DD3000
	008 Move W8, [X23+4082]
	009 Move W22, W3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1B17000
	018 Move X0, [X0+792]
	019 Call 0x1C17CF4
	020 Move X0, 0x1B17000
	021 Move X0, [X0+800]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+4082], W8
	025 Compare X19, 0
	026 JumpIfEqual {97}
	027 And W3, W22, 1
	028 Move X0, X19
	029 Move X1, X21
	030 Move X2, X20
	031 Move X4, X31
	032 Call StateObjectBase.InternalInitialize, X0, X1, X2, X3
	033 Move X20, [X19+48]
	034 Compare X20, 0
	035 JumpIfEqual {97}
	036 Move X10, 0x1B17000
	037 Move X8, [X20]
	038 Move X10, [X10+792]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 1
	050 Move X0, X20
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 1
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X20
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X0, 0
	061 JumpIfEqual {97}
	062 Move X10, 0x1B17000
	063 Move X8, [X0]
	064 Move X10, [X10+800]
	065 Move X21, [X19+64]
	066 Move X20, X0
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X10]
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move W2, 4
	078 Move X0, X20
	079 Call 0x1C5D788
	080 Move W9, [X10]
	081 Add W9, W9, 4
	082 Add X8, X8, W9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X2, [X0+8]
	086 Move X0, X20
	087 Move X1, X21
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move [X19+72], W0
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Return 
	097 Call 0x1C17F20

Method: System.Void SetValueInstanceActivator(System.Func`1<TValue> valueActivator)

Disassembly:
	0x02607410 LDR X0, [X0 + 0x460]
	0x02607414 BL 0x1C16CF4

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.Void ApplyOperation(SpatialSys.ObservableState.IStateOperation operation)

Disassembly:
	0x02607418 ADRP X0, 0x1B14000
	0x0260741C LDR X0, [X0 + 0xBC0]
	0x02607420 BL 0x1C16CF4
	0x02607424 MOVZ W8, 0x1
	0x02607428 STRB W8, [X22 + 0xFF7]
	0x0260742C LDR X8, [X20 + 0x20]
	0x02607430 LDR X8, [X8 + 0xC0]
	0x02607434 LDR X0, [X8 + 0x220]
	0x02607438 LDRB W8, [X0 + 0x135]
	0x0260743C TBNZ X8, 0x0, 0x2607444
	0x02607440 BL 0x1C5C684
	0x02607444 BL 0x1C16F10
	0x02607448 LDR X8, [X20 + 0x20]
	0x0260744C MOV X22, X0
	0x02607450 LDR X8, [X8 + 0xC0]
	0x02607454 LDR X1, [X8 + 0x228]
	0x02607458 BL 0x237AB40
	0x0260745C CBZ X22, 0x260785C
	0x02607460 ADRP X8, 0x1B14000
	0x02607464 LDR X8, [X8 + 0xBC0]
	0x02607468 STR X19, [X22 + 0x10]
	0x0260746C LDR X0, [X8]
	0x02607470 BL 0x1C16F10
	0x02607474 MOV X1, X31
	0x02607478 MOV X19, X0
	0x0260747C BL 0x35AE864
	0x02607480 CBZ X21, 0x260785C
	0x02607484 LDR X8, [X21]
	0x02607488 MOV X0, X21
	0x0260748C LDR X9, [X8 + 0x328]
	0x02607490 LDR X1, [X8 + 0x330]
	0x02607494 BLR X9
	0x02607498 CBZ X0, 0x260785C
	0x0260749C LDR X8, [X20 + 0x20]
	0x026074A0 MOV X23, X0
	0x026074A4 LDR X9, [X8 + 0xC0]
	0x026074A8 LDR X8, [X0]
	0x026074AC LDR X25, [X9 + 0x230]
	0x026074B0 LDRH W9, [X8 + 0x12E]
	0x026074B4 LDR X1, [X25 + 0x20]
	0x026074B8 LDRH W2, [X25 + 0x50]
	0x026074BC CBZ X9, 0x26074E0
	0x026074C0 LDR X10, [X8 + 0xB0]
	0x026074C4 ADD X10, X10, 0x8
	0x026074C8 LDUR X11, [X10 - 0x8]
	0x026074CC CMP X11, X1
	0x026074D0 B.EQ 0x26074EC
	0x026074D4 SUBS X9, X9, 0x1
	0x026074D8 ADD X10, X10, 0x10
	0x026074DC B.NE 0x26074C8
	0x026074E0 MOV X0, X23
	0x026074E4 BL 0x1C5C788
	0x026074E8 B 0x26074FC
	0x026074EC LDR W9, [X10]
	0x026074F0 ADD W9, W9, W2
	0x026074F4 ADD X8, X8, W9, 0x4, SXTW
	0x026074F8 ADD X0, X8, 0x138
	0x026074FC LDR X0, [X0 + 0x8]
	0x02607500 MOV X1, X25
	0x02607504 BL 0x1C16DF8
	0x02607508 LDR X8, [X0 + 0x8]
	0x0260750C MOV X1, X0
	0x02607510 MOV X0, X23
	0x02607514 BLR X8
	0x02607518 LDR X8, [X22 + 0x10]
	0x0260751C LDR X21, [X21 + 0x60]
	0x02607520 MOV X23, X0
	0x02607524 CBZ X8, 0x260757C
	0x02607528 LDR X8, [X20 + 0x20]
	0x0260752C LDR X8, [X8 + 0xC0]
	0x02607530 LDR X0, [X8 + 0x248]
	0x02607534 LDRB W8, [X0 + 0x135]
	0x02607538 TBNZ X8, 0x0, 0x2607540
	0x0260753C BL 0x1C5C684
	0x02607540 BL 0x1C16F10
	0x02607544 LDR X8, [X20 + 0x20]
	0x02607548 MOV X1, X22
	0x0260754C MOV X25, X0
	0x02607550 LDR X8, [X8 + 0xC0]
	0x02607554 LDR X2, [X8 + 0x240]
	0x02607558 LDR X3, [X8 + 0x250]
	0x0260755C BL 0x2D29CD0
	0x02607560 LDR X8, [X20 + 0x20]
	0x02607564 MOV X0, X21
	0x02607568 MOV X1, X25
	0x0260756C LDR X8, [X8 + 0xC0]
	0x02607570 LDR X2, [X8 + 0x258]
	0x02607574 BL 0x21D8574
	0x02607578 MOV X21, X0
	0x0260757C CBZ X21, 0x260785C
	0x02607580 LDR X8, [X20 + 0x20]
	0x02607584 LDR X8, [X8 + 0xC0]
	0x02607588 LDR X1, [X8 + 0x260]
	0x0260758C LDRB W8, [X1 + 0x135]
	0x02607590 TBNZ X8, 0x0, 0x26075A0
	0x02607594 MOV X0, X1
	0x02607598 BL 0x1C5C684
	0x0260759C MOV X1, X0
	0x026075A0 LDR X8, [X21]
	0x026075A4 LDRH W9, [X8 + 0x12E]
	0x026075A8 CBZ X9, 0x26075CC
	0x026075AC LDR X10, [X8 + 0xB0]
	0x026075B0 ADD X10, X10, 0x8
	0x026075B4 LDUR X11, [X10 - 0x8]
	0x026075B8 CMP X11, X1
	0x026075BC B.EQ 0x26075DC
	0x026075C0 SUBS X9, X9, 0x1
	0x026075C4 ADD X10, X10, 0x10
	0x026075C8 B.NE 0x26075B4
	0x026075CC MOV X0, X21
	0x026075D0 MOV W2, W31
	0x026075D4 BL 0x1C5C788
	0x026075D8 B 0x26075E8
	0x026075DC LDRSW X9, [X10]
	0x026075E0 ADD X8, X8, X9, 0x4, LSL
	0x026075E4 ADD X0, X8, 0x138
	0x026075E8 LDP X8, X1, [X0]
	0x026075EC MOV X0, X21
	0x026075F0 BLR X8
	0x026075F4 MOV X21, X0
	0x026075F8 CBZ X0, 0x2607860
	0x026075FC ADRP X29, 0x1AEC000
	0x02607600 ADRP X28, 0x1AED000
	0x02607604 LDR X29, [X29 + 0xE18]
	0x02607608 LDR X28, [X28 + 0x1B0]
	0x0260760C AND W24, W24, 0x1
	0x02607610 LDR X8, [X21]
	0x02607614 LDR X1, [X29]
	0x02607618 LDRH W9, [X8 + 0x12E]
	0x0260761C CBZ X9, 0x2607640
	0x02607620 LDR X10, [X8 + 0xB0]
	0x02607624 ADD X10, X10, 0x8
	0x02607628 LDUR X11, [X10 - 0x8]
	0x0260762C CMP X11, X1
	0x02607630 B.EQ 0x2607650
	0x02607634 SUBS X9, X9, 0x1
	0x02607638 ADD X10, X10, 0x10
	0x0260763C B.NE 0x2607628
	0x02607640 MOV X0, X21
	0x02607644 MOV W2, W31
	0x02607648 BL 0x1C5C788
	0x0260764C B 0x260765C
	0x02607650 LDRSW X9, [X10]
	0x02607654 ADD X8, X8, X9, 0x4, LSL
	0x02607658 ADD X0, X8, 0x138
	0x0260765C LDP X8, X1, [X0]
	0x02607660 MOV X0, X21
	0x02607664 BLR X8
	0x02607668 TBZ X0, 0x0, 0x26077BC
	0x0260766C LDR X8, [X20 + 0x20]
	0x02607670 LDR X8, [X8 + 0xC0]
	0x02607674 LDR X1, [X8 + 0x1A0]
	0x02607678 LDRB W8, [X1 + 0x135]
	0x0260767C TBNZ X8, 0x0, 0x260768C
	0x02607680 MOV X0, X1
	0x02607684 BL 0x1C5C684
	0x02607688 MOV X1, X0
	0x0260768C LDR X8, [X21]
	0x02607690 LDRH W9, [X8 + 0x12E]
	0x02607694 CBZ X9, 0x26076B8
	0x02607698 LDR X10, [X8 + 0xB0]
	0x0260769C ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1DD3000
	007 Move W8, [X22+4083]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1AED000
	016 Move X0, [X0+1872]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+4083], W8
	020 Compare X20, 0
	021 JumpIfEqual {138}
	022 Move X10, 0x1AED000
	023 Move X8, [X20]
	024 Move X10, [X10+1872]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 2
	036 Move X0, X20
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 2
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X20
	045 NotImplemented "Instruction BLR not yet implemented."
	046 And W8, W0, 255
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+32]
	051 Move X8, [X8+192]
	052 Move X0, [X8+184]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X20]
	060 Move W9, [X0+304]
	061 Move W10, [X8+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X8+200]
	064 Add X8, X8, X9
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X19+32]
	068 Move W1, [X20+28]
	069 Move X0, X21
	070 Move X8, [X8+192]
	071 Move X2, [X8+200]
	072 Call 0x2607D98, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {128}
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return 
	083 Move X8, [X19+32]
	084 Move X8, [X8+192]
	085 Move X0, [X8+184]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move X8, [X20]
	093 Move W9, [X0+304]
	094 Move W10, [X8+304]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, [X8+200]
	097 Add X9, X8, X9
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X9, [X19+32]
	101 Move X9, [X9+192]
	102 Move X0, [X9+184]
	103 Move W10, [X0+309]
	104 Move TEMP, X10
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {113}
	108 Call 0x1C5D684
	109 Move X8, [X20]
	110 Move X9, [X19+32]
	111 Move X8, [X8+200]
	112 Move X9, [X9+192]
	113 Move W10, [X0+304]
	114 Move X2, [X9+216]
	115 Add X8, X8, X10
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Move W1, [X8+28]
	120 Move X0, X21
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Call 0x2607EA8, X0, X1
	127 Return 
	128 Move X8, [X19+32]
	129 Move W1, [X20+28]
	130 Move X0, X21
	131 Move X20, [X31+32]
	132 Move X19, [X31+40]
	133 Move X8, [X8+192]
	134 Move X22, [X31+16]
	135 Move X21, [X31+24]
	136 Move X2, [X8+208]
	137 Move X30, [X31+48]
	138 Call 0x1C17F20
	139 Move X0, X20
	140 Call 0x19913C0
	141 Move X0, 0x1AED000
	142 Move X0, [X0+1872]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move W0, 2
	146 Move X2, X20
	147 Call 0x19973F0
	148 Move [X31+12], W0
	149 Move X0, 0x1B17000
	150 Move X0, [X0+808]
	151 Call 0x1C17D08
	152 Add X1, X31, 12
	153 Call 0x1C17E04
	154 Move X20, X0
	155 Move X0, 0x1B17000
	156 Move X0, [X0+816]
	157 Call 0x1C17D08
	158 Move X21, X0
	159 Move X0, 0x1B17000
	160 Move X0, [X0+824]
	161 Call 0x1C17D08
	162 Move X2, X0
	163 Move X0, X21
	164 Move X1, X20
	165 Move X3, X31
	166 Call String.Format, X0, X1, X2
	167 Move X20, X0
	168 Move X0, 0x1AED000
	169 Move X0, [X0+1456]
	170 Call 0x1C17D08
	171 Call 0x1C17F10
	172 Move X1, X20
	173 Move X2, X31
	174 Move X21, X0
	175 Call InvalidOperationException..ctor, X0, X1
	176 Move X0, X21
	177 Move X1, X19
	178 Call 0x1C17DEC

Method: TValue Add(TKey key)

Disassembly:
	0x026076A0 LDUR X11, [X10 - 0x8]
	0x026076A4 CMP X11, X1
	0x026076A8 B.EQ 0x26076C8
	0x026076AC SUBS X9, X9, 0x1
	0x026076B0 ADD X10, X10, 0x10
	0x026076B4 B.NE 0x26076A0
	0x026076B8 MOV X0, X21
	0x026076BC MOV W2, W31
	0x026076C0 BL 0x1C5C788
	0x026076C4 B 0x26076D4
	0x026076C8 LDRSW X9, [X10]
	0x026076CC ADD X8, X8, X9, 0x4, LSL
	0x026076D0 ADD X0, X8, 0x138
	0x026076D4 LDP X8, X1, [X0]
	0x026076D8 MOV X0, X21
	0x026076DC BLR X8
	0x026076E0 CBZ X23, 0x2607854
	0x026076E4 MOV X3, X0
	0x026076E8 LDR X0, [X23 + 0x40]
	0x026076EC LDR X8, [X23 + 0x18]
	0x026076F0 LDR X2, [X23 + 0x28]
	0x026076F4 MOV X25, X1
	0x026076F8 MOV W1, W3
	0x026076FC BLR X8
	0x02607700 ADRP X8, 0x1AED000
	0x02607704 LDR X8, [X8 + 0x460]
	0x02607708 MOV X26, X0
	0x0260770C LDR X0, [X8]
	0x02607710 LDR W8, [X0 + 0xE0]
	0x02607714 CBNZ W8, 0x260771C
	0x02607718 BL 0x1C16DFC
	0x0260771C MOV X0, X26
	0x02607720 MOV X1, X31
	0x02607724 BL 0x35AD0EC
	0x02607728 CBZ X25, 0x2607858
	0x0260772C LDR X8, [X25]
	0x02607730 LDR X27, [X22 + 0x10]
	0x02607734 LDR X1, [X28]
	0x02607738 MOV X26, X0
	0x0260773C LDRH W9, [X8 + 0x12E]
	0x02607740 CBZ X9, 0x2607764
	0x02607744 LDR X10, [X8 + 0xB0]
	0x02607748 ADD X10, X10, 0x8
	0x0260774C LDUR X11, [X10 - 0x8]
	0x02607750 CMP X11, X1
	0x02607754 B.EQ 0x2607774
	0x02607758 SUBS X9, X9, 0x1
	0x0260775C ADD X10, X10, 0x10
	0x02607760 B.NE 0x260774C
	0x02607764 MOVZ W2, 0x12
	0x02607768 MOV X0, X25
	0x0260776C BL 0x1C5C788
	0x02607770 B 0x2607784
	0x02607774 LDR W9, [X10]
	0x02607778 ADD W9, W9, 0x12
	0x0260777C ADD X8, X8, W9, 0x4, SXTW
	0x02607780 ADD X0, X8, 0x138
	0x02607784 LDP X8, X3, [X0]
	0x02607788 MOV X0, X25
	0x0260778C MOV X1, X27
	0x02607790 MOV W2, W24
	0x02607794 BLR X8
	0x02607798 CBZ X19, 0x2607850
	0x0260779C LDR X8, [X19]
	0x026077A0 MOV X2, X0
	0x026077A4 LDR X9, [X8 + 0x278]
	0x026077A8 LDR X3, [X8 + 0x280]
	0x026077AC MOV X0, X19
	0x026077B0 MOV X1, X26
	0x026077B4 BLR X9
	0x026077B8 B 0x2607610
	0x026077BC MOV X20, X31
	0x026077C0 MOVZ W22, 0x6
	0x026077C4 CBZ X21, 0x2607828
	0x026077C8 LDR X8, [X21]
	0x026077CC ADRP X10, 0x1AEC000
	0x026077D0 LDRH W9, [X8 + 0x12E]
	0x026077D4 LDR X10, [X10 + 0xE00]
	0x026077D8 LDR X1, [X10]
	0x026077DC CBZ X9, 0x2607800
	0x026077E0 LDR X10, [X8 + 0xB0]
	0x026077E4 ADD X10, X10, 0x8
	0x026077E8 LDUR X11, [X10 - 0x8]
	0x026077EC CMP X11, X1
	0x026077F0 B.EQ 0x2607810
	0x026077F4 SUBS X9, X9, 0x1
	0x026077F8 ADD X10, X10, 0x10
	0x026077FC B.NE 0x26077E8
	0x02607800 MOV X0, X21
	0x02607804 MOV W2, W31
	0x02607808 BL 0x1C5C788
	0x0260780C B 0x260781C
	0x02607810 LDRSW X9, [X10]
	0x02607814 ADD X8, X8, X9, 0x4, LSL
	0x02607818 ADD X0, X8, 0x138
	0x0260781C LDP X8, X1, [X0]
	0x02607820 MOV X0, X21
	0x02607824 BLR X8
	0x02607828 CBNZ X20, 0x2607864
	0x0260782C CMP W22, 0x6
	0x02607830 MOV X0, X19
	0x02607834 LDP X20, X19, [X31 + 0x50]
	0x02607838 LDP X22, X21, [X31 + 0x40]
	0x0260783C LDP X24, X23, [X31 + 0x30]
	0x02607840 LDP X26, X25, [X31 + 0x20]
	0x02607844 LDP X28, X27, [X31 + 0x10]
	0x02607848 LDP X29, X30, [X31], #0x60
	0x0260784C RET
	0x02607850 BL 0x1C16F20
	0x02607854 BL 0x1C16F20
	0x02607858 BL 0x1C16F20
	0x0260785C BL 0x1C16F20
	0x02607860 BL 0x1C16F20
	0x02607864 MOV X0, X20
	0x02607868 BL 0x1C16F18
	0x0260786C B 0x260788C
	0x02607870 B 0x260788C
	0x02607874 B 0x260788C
	0x02607878 B 0x260788C
	0x0260787C B 0x260788C
	0x02607880 B 0x260788C
	0x02607884 B 0x260788C
	0x02607888 B 0x260788C
	0x0260788C MOV X22, X0
	0x02607890 CMP W1, 0x1
	0x02607894 B.NE 0x26078B4
	0x02607898 MOV X0, X22
	0x0260789C BL 0x3EB1AD0
	0x026078A0 LDR X20, [X0]
	0x026078A4 BL 0x3EB1AE0
	0x026078A8 MOV W22, W31
	0x026078AC CBNZ X21, 0x26077C8
	0x026078B0 B 0x2607828
	0x026078B4 MOV X20, X31
	0x026078B8 B 0x26078C0
	0x026078BC MOV X22, X0
	0x026078C0 CBZ X21, 0x2607924
	0x026078C4 LDR X8, [X21]
	0x026078C8 ADRP X10, 0x1AEC000
	0x026078CC LDRH W9, [X8 + 0x12E]
	0x026078D0 LDR X10, [X10 + 0xE00]
	0x026078D4 LDR X1, [X10]
	0x026078D8 CBZ X9, 0x26078FC
	0x026078DC LDR X10, [X8 + 0xB0]
	0x026078E0 ADD X10, X10, 0x8
	0x026078E4 LDUR X11, [X10 - 0x8]
	0x026078E8 CMP X11, X1
	0x026078EC B.EQ 0x260790C
	0x026078F0 SUBS X9, X9, 0x1
	0x026078F4 ADD X10, X10, 0x10
	0x026078F8 B.NE 0x26078E4
	0x026078FC MOV X0, X21
	0x02607900 MOV W2, W31
	0x02607904 BL 0x1C5C788
	0x02607908 B 0x2607918
	0x0260790C LDRSW X9, [X10]
	0x02607910 ADD X8, X8, X9, 0x4, LSL
	0x02607914 ADD X0, X8, 0x138
	0x02607918 LDP X8, X1, [X0]
	0x0260791C MOV X0, X21
	0x02607920 BLR X8
	0x02607924 CBNZ X20, 0x2607930
	0x02607928 MOV X0, X22
	0x0260792C BL 0x1D2C690
	0x02607930 MOV X0, X20
	0x02607934 BL 0x1C16F18
	0x02607938 BL 0x1990590
	0x0260793C SUB X31, X31, 0xF0
	0x02607940 STR X30, [X31 + 0xA0]
	0x02607944 STP X26, X25, [X31 + 0xB0]
	0x02607948 STP X24, X23, [X31 + 0xC0]
	0x0260794C STP X22, X21, [X31 + 0xD0]
	0x02607950 STP X20, X19, [X31 + 0xE0]
	0x02607954 ADRP X21, 0x1DD2000
	0x02607958 LDRB W8, [X21 + 0xFF8]
	0x0260795C MOV X19, X2
	0x02607960 MOV X22, X1
	0x02607964 MOV X20, X0
	0x02607968 TBNZ X8, 0x0, 0x26079A4
	0x0260796C ADRP X0, 0x1AED000
	0x02607970 LDR X0, [X0 + 0x1B0]
	0x02607974 BL 0x1C16CF4
	0x02607978 ADRP X0, 0x1AED000
	0x0260797C LDR X0, [X0 + 0x460]
	0x02607980 BL 0x1C16CF4
	0x02607984 ADRP X0, 0x1B16000
	0x02607988 LDR X0, [X0 + 0x340]
	0x0260798C BL 0x1C16CF4
	0x02607990 ADRP X0, 0x1B16000
	0x02607994 LDR X0, [X0 + 0x348]
	0x02607998 BL 0x1C16CF4
	0x0260799C MOVZ W8, 0x1
	0x026079A0 STRB W8, [X21 + 0xFF8]
	0x026079A4 MOVI V0.2D, 0x0
	0x026079A8 STR X31, [X31 + 0x90]
	0x026079AC STP V0, V0, [X31 + 0x70]
	0x026079B0 STP V0, V0, [X31 + 0x50]
	0x026079B4 STR X31, [X31 + 0xA8]
	0x026079B8 LDR X8, [X19 + 0x20]
	0x026079BC LDR X8, [X8 + 0xC0]
	0x026079C0 LDR X0, [X8 + 0x288]
	0x026079C4 LDRB W8, [X0 + 0x135]
	0x026079C8 TBNZ X8, 0x0, 0x26079D0
	0x026079CC BL 0x1C5C684
	0x026079D0 BL 0x1C16F10
	0x026079D4 LDR X8, [X19 + 0x20]
	0x026079D8 MOV X21, X0
	0x026079DC LDR X8, [X8 + 0xC0]
	0x026079E0 LDR X1, [X8 + 0x290]
	0x026079E4 BL 0x237AC78
	0x026079E8 CBZ X22, 0x2607D40
	0x026079EC LDR X8, [X22]
	0x026079F0 MOV X0, X22
	0x026079F4 LDR X9, [X8 + 0x248]
	0x026079F8 LDR X1, [X8 + 0x250]
	0x026079FC BLR X9
	0x02607A00 TBZ X0, 0x0, 0x2607D48
	0x02607A04 LDR X8, [X19 + 0x20]
	0x02607A08 LDR X8, [X8 + 0xC0]
	0x02607A0C LDR X0, [X8 + 0x1D0]
	0x02607A10 LDRB W8, [X0 + 0x135]
	0x02607A14 TBNZ X8, 0x0, 0x2607A1C
	0x02607A18 BL 0x1C5C684
	0x02607A1C BL 0x1C16F10
	0x02607A20 LDR X8, [X19 + 0x20]
	0x02607A24 MOV X23, X0
	0x02607A28 LDR X8, [X8 + 0xC0]
	0x02607A2C LDR X1, [X8 + 0x1D8]
	0x02607A30 BL 0x2DA9EF4
	0x02607A34 CBZ X21, 0x2607D40
	0x02607A38 STR X23, [X21 + 0x10]
	0x02607A3C CBZ X20, 0x2607D40
	0x02607A40 LDR X8, [X20]
	0x02607A44 MOV X0, X20
	0x02607A48 LDR X9, [X8 + 0x328]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1DD3000
	009 Move W8, [X20+4084]
	010 Move X21, X2
	011 Move W22, W1
	012 Move X19, X0
	013 Move [X31+12], W1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x1AED000
	019 Move X0, [X0+3576]
	020 Call 0x1C17CF4
	021 Move X0, 0x1B17000
	022 Move X0, [X0+792]
	023 Call 0x1C17CF4
	024 Move X0, 0x1B17000
	025 Move X0, [X0+784]
	026 Call 0x1C17CF4
	027 Move X0, 0x1B15000
	028 Move X0, [X0+3040]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+4084], W8
	032 Move X0, [X19+96]
	033 Compare X0, 0
	034 JumpIfEqual {253}
	035 Move X8, [X21+32]
	036 Move W1, W22
	037 Move X2, X31
	038 Move X8, [X8+192]
	039 Move X3, [X8+224]
	040 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	041 Move X8, [X19+88]
	042 Move W9, 1
	043 Move [X19+32], W9
	044 Compare X8, 0
	045 JumpIfEqual {253}
	046 Move X9, [X8+24]
	047 Move X0, [X8+64]
	048 Move X1, [X8+40]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X19+64]
	051 Compare X8, 0
	052 JumpIfEqual {253}
	053 Move X9, [X8]
	054 Move X20, X0
	055 Move X0, X8
	056 Move X10, [X9+1416]
	057 Move X1, [X9+1424]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {92}
	063 Move [X31+8], W22
	064 Move X8, [X21+32]
	065 Add X1, X31, 8
	066 Move X8, [X8+192]
	067 Move X0, [X8+40]
	068 Call 0x1C17E04
	069 Compare X0, 0
	070 JumpIfEqual {253}
	071 Move X8, 0x1AED000
	072 Move X8, [X8+3576]
	073 Move X9, [X0]
	074 Move X8, [X8]
	075 Move W11, [X9+304]
	076 Move W10, [X8+304]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X11, [X9+200]
	079 Add X11, X11, X10
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X9, [X9+200]
	083 Move X2, X31
	084 Add X9, X9, X10
	085 Move X10, 0x1B15000
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Move X10, [X10+3040]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X1, [X10]
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Call Enum.ToString, X0, X1
	092 Move X8, [X21+32]
	093 Add X0, X31, 12
	094 Move X8, [X8+192]
	095 Move X1, [X8+240]
	096 Call Int32.ToString, X0
	097 Move X22, X0
	098 Move X0, [X19+96]
	099 Compare X0, 0
	100 JumpIfEqual {253}
	101 Move X8, [X21+32]
	102 Move W1, [X31+12]
	103 Move X2, X20
	104 Move X8, [X8+192]
	105 Move X3, [X8+248]
	106 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	107 Move X8, [X21+32]
	108 Move X8, [X8+192]
	109 Move X1, [X8+256]
	110 Move W8, [X1+309]
	111 Move TEMP, X8
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {118}
	115 Move X0, X1
	116 Call 0x1C5D684
	117 Move X1, X0
	118 Move X0, X20
	119 Call 0x1C17E00
	120 Compare X0, 0
	121 JumpIfEqual {156}
	122 Move X8, [X21+32]
	123 Move W24, [X31+12]
	124 Move X23, X0
	125 Move X8, [X8+192]
	126 Move X1, [X8+256]
	127 Move W8, [X1+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {135}
	132 Move X0, X1
	133 Call 0x1C5D684
	134 Move X1, X0
	135 Move X8, [X23]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X23
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X2, [X0+8]
	153 Move X0, X23
	154 Move W1, W24
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Compare X20, 0
	157 JumpIfEqual {253}
	158 Move X8, 0x1B17000
	159 Move X8, [X8+784]
	160 Move X9, [X20]
	161 Move X8, [X8]
	162 Move W11, [X9+304]
	163 Move W10, [X8+304]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X9, [X9+200]
	166 Add X9, X9, X10
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X8, [X20]
	170 Move W3, [X19+57]
	171 Move X0, X20
	172 Move X1, X19
	173 Move X9, [X8+872]
	174 Move X4, [X8+880]
	175 Move X2, X22
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X8, [X20]
	178 Move X0, X20
	179 Move X9, [X8+888]
	180 Move X1, [X8+896]
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X22, [X19+48]
	183 Compare X22, 0
	184 JumpIfEqual {253}
	185 Move X10, 0x1B17000
	186 Move X8, [X22]
	187 Move X10, [X10+792]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Move X1, [X10]
	190 Compare X9, 0
	191 JumpIfEqual {198}
	192 Move X10, [X8+176]
	193 Add X10, X10, 8
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract X9, X9, 1
	197 Add X10, X10, 16
	198 Move X0, X22
	199 Move W2, W31
	200 Call 0x1C5D788
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Add X8, X8, X9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X1, [X0+8]
	206 Move X0, X22
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Compare X0, 0
	209 JumpIfEqual {253}
	210 Move X8, [X21+32]
	211 Move W23, [X31+12]
	212 Move W21, [X19+72]
	213 Move X22, X0
	214 Move X9, [X8+192]
	215 Move X8, [X0]
	216 Move X24, [X9+280]
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Move X1, [X24+32]
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Compare X9, 0
	221 JumpIfEqual {228}
	222 Move X10, [X8+176]
	223 Add X10, X10, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X9, X9, 1
	227 Add X10, X10, 16
	228 Move X0, X22
	229 Call 0x1C5D788
	230 Move W9, [X10]
	231 Add W9, W9, W2
	232 Add X8, X8, W9
	233 Add X0, X8, 312
	234 Move X0, [X0+8]
	235 Move X1, X24
	236 Call 0x1C17DF8
	237 Move X8, [X0+8]
	238 Move X4, X0
	239 Move X0, X22
	240 Move X1, X19
	241 Move W2, W23
	242 Move W3, W21
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X0, X20
	245 Move X20, [X31+48]
	246 Move X19, [X31+56]
	247 Move X22, [X31+32]
	248 Move X21, [X31+40]
	249 Move X24, [X31+16]
	250 Move X23, [X31+24]
	251 Move X30, [X31+64]
	252 Return X0
	253 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x02607A4C LDR X1, [X8 + 0x330]
	0x02607A50 BLR X9
	0x02607A54 CBZ X0, 0x2607D40
	0x02607A58 LDR X8, [X19 + 0x20]
	0x02607A5C MOV X23, X0
	0x02607A60 LDR X9, [X8 + 0xC0]
	0x02607A64 LDR X8, [X0]
	0x02607A68 LDR X24, [X9 + 0x298]
	0x02607A6C LDRH W9, [X8 + 0x12E]
	0x02607A70 LDR X1, [X24 + 0x20]
	0x02607A74 LDRH W2, [X24 + 0x50]
	0x02607A78 CBZ X9, 0x2607A9C
	0x02607A7C LDR X10, [X8 + 0xB0]
	0x02607A80 ADD X10, X10, 0x8
	0x02607A84 LDUR X11, [X10 - 0x8]
	0x02607A88 CMP X11, X1
	0x02607A8C B.EQ 0x2607AA8
	0x02607A90 SUBS X9, X9, 0x1
	0x02607A94 ADD X10, X10, 0x10
	0x02607A98 B.NE 0x2607A84
	0x02607A9C MOV X0, X23
	0x02607AA0 BL 0x1C5C788
	0x02607AA4 B 0x2607AB8
	0x02607AA8 LDR W9, [X10]
	0x02607AAC ADD W9, W9, W2
	0x02607AB0 ADD X8, X8, W9, 0x4, SXTW
	0x02607AB4 ADD X0, X8, 0x138
	0x02607AB8 LDR X0, [X0 + 0x8]
	0x02607ABC MOV X1, X24
	0x02607AC0 BL 0x1C16DF8
	0x02607AC4 LDR X8, [X0 + 0x8]
	0x02607AC8 MOV X1, X0
	0x02607ACC MOV X0, X23
	0x02607AD0 BLR X8
	0x02607AD4 LDR X8, [X22]
	0x02607AD8 MOV X23, X0
	0x02607ADC MOV X0, X22
	0x02607AE0 LDR X9, [X8 + 0x338]
	0x02607AE4 LDR X1, [X8 + 0x340]
	0x02607AE8 ADD X8, X31, 0x8
	0x02607AEC BLR X9
	0x02607AF0 ADD X0, X31, 0x50
	0x02607AF4 ADD X1, X31, 0x8
	0x02607AF8 MOVZ W2, 0x48
	0x02607AFC BL 0x3EB1AC0
	0x02607B00 ADD X0, X31, 0x50
	0x02607B04 MOV X1, X31
	0x02607B08 BL 0x35B4900
	0x02607B0C TBZ X0, 0x0, 0x2607C4C
	0x02607B10 ADRP X25, 0x1AED000
	0x02607B14 ADRP X26, 0x1AED000
	0x02607B18 LDR X25, [X25 + 0x460]
	0x02607B1C LDR X26, [X26 + 0x1B0]
	0x02607B20 ADD X0, X31, 0x50
	0x02607B24 MOV X1, X31
	0x02607B28 BL 0x35B4830
	0x02607B2C MOV X24, X0
	0x02607B30 LDR X0, [X25]
	0x02607B34 MOV X22, X1
	0x02607B38 LDR W8, [X0 + 0xE0]
	0x02607B3C CBNZ W8, 0x2607B44
	0x02607B40 BL 0x1C16DFC
	0x02607B44 MOV X0, X24
	0x02607B48 MOV X1, X31
	0x02607B4C BL 0x35ACF6C
	0x02607B50 CBZ X23, 0x2607D40
	0x02607B54 MOV X1, X0
	0x02607B58 LDR X8, [X23 + 0x18]
	0x02607B5C LDR X0, [X23 + 0x40]
	0x02607B60 LDR X2, [X23 + 0x28]
	0x02607B64 BLR X8
	0x02607B68 LDR X8, [X21 + 0x10]
	0x02607B6C CBZ X8, 0x2607D40
	0x02607B70 LDR X9, [X19 + 0x20]
	0x02607B74 MOV W24, W0
	0x02607B78 MOV X0, X8
	0x02607B7C MOV W1, W24
	0x02607B80 LDR X9, [X9 + 0xC0]
	0x02607B84 LDR X2, [X9 + 0x1E0]
	0x02607B88 BL 0x2DAB03C
	0x02607B8C LDR X0, [X20 + 0x60]
	0x02607B90 CBZ X0, 0x2607D40
	0x02607B94 LDR X8, [X19 + 0x20]
	0x02607B98 ADD X2, X31, 0xA8
	0x02607B9C MOV W1, W24
	0x02607BA0 LDR X8, [X8 + 0xC0]
	0x02607BA4 LDR X3, [X8 + 0x1A8]
	0x02607BA8 BL 0x2A150AC
	0x02607BAC TBZ X0, 0x0, 0x2607BB8
	0x02607BB0 LDR X24, [X31 + 0xA8]
	0x02607BB4 B 0x2607BD8
	0x02607BB8 LDR X8, [X19 + 0x20]
	0x02607BBC MOV X0, X20
	0x02607BC0 MOV W1, W24
	0x02607BC4 LDR X8, [X8 + 0xC0]
	0x02607BC8 LDR X2, [X8 + 0xD0]
	0x02607BCC BL 0x26066A0
	0x02607BD0 MOV X24, X0
	0x02607BD4 STR X0, [X31 + 0xA8]
	0x02607BD8 CBZ X24, 0x2607D40
	0x02607BDC LDR X8, [X24]
	0x02607BE0 LDR X1, [X26]
	0x02607BE4 LDRH W9, [X8 + 0x12E]
	0x02607BE8 CBZ X9, 0x2607C0C
	0x02607BEC LDR X10, [X8 + 0xB0]
	0x02607BF0 ADD X10, X10, 0x8
	0x02607BF4 LDUR X11, [X10 - 0x8]
	0x02607BF8 CMP X11, X1
	0x02607BFC B.EQ 0x2607C1C
	0x02607C00 SUBS X9, X9, 0x1
	0x02607C04 ADD X10, X10, 0x10
	0x02607C08 B.NE 0x2607BF4
	0x02607C0C MOVZ W2, 0x13
	0x02607C10 MOV X0, X24
	0x02607C14 BL 0x1C5C788
	0x02607C18 B 0x2607C2C
	0x02607C1C LDR W9, [X10]
	0x02607C20 ADD W9, W9, 0x13
	0x02607C24 ADD X8, X8, W9, 0x4, SXTW
	0x02607C28 ADD X0, X8, 0x138
	0x02607C2C LDP X8, X2, [X0]
	0x02607C30 MOV X0, X24
	0x02607C34 MOV X1, X22
	0x02607C38 BLR X8
	0x02607C3C ADD X0, X31, 0x50
	0x02607C40 MOV X1, X31
	0x02607C44 BL 0x35B4900
	0x02607C48 TBNZ X0, 0x0, 0x2607B20
	0x02607C4C LDR X0, [X20 + 0x60]
	0x02607C50 CBZ X0, 0x2607D40
	0x02607C54 LDR X8, [X19 + 0x20]
	0x02607C58 LDR X8, [X8 + 0xC0]
	0x02607C5C LDR X1, [X8 + 0x50]
	0x02607C60 BL 0x2A1346C
	0x02607C64 LDR X8, [X19 + 0x20]
	0x02607C68 MOV X22, X0
	0x02607C6C LDR X8, [X8 + 0xC0]
	0x02607C70 LDR X8, [X8 + 0x2C0]
	0x02607C74 LDRB W9, [X8 + 0x135]
	0x02607C78 TBNZ X9, 0x0, 0x2607C88
	0x02607C7C MOV X0, X8
	0x02607C80 BL 0x1C5C684
	0x02607C84 MOV X8, X0
	0x02607C88 MOV X0, X8
	0x02607C8C BL 0x1C16F10
	0x02607C90 LDR X8, [X19 + 0x20]
	0x02607C94 MOV X1, X21
	0x02607C98 MOV X23, X0
	0x02607C9C LDR X8, [X8 + 0xC0]
	0x02607CA0 LDR X2, [X8 + 0x2B8]
	0x02607CA4 LDR X3, [X8 + 0x2C8]
	0x02607CA8 BL 0x2D2CE34
	0x02607CAC LDR X8, [X19 + 0x20]
	0x02607CB0 MOV X0, X22
	0x02607CB4 MOV X1, X23
	0x02607CB8 LDR X8, [X8 + 0xC0]
	0x02607CBC LDR X2, [X8 + 0x2D0]
	0x02607CC0 BL 0x21D9EE8
	0x02607CC4 LDR X8, [X19 + 0x20]
	0x02607CC8 LDR X8, [X8 + 0xC0]
	0x02607CCC LDR X1, [X8 + 0x2E0]
	0x02607CD0 BL 0x21D54D4
	0x02607CD4 CBZ X0, 0x2607D40
	0x02607CD8 LDR X8, [X0 + 0x18]
	0x02607CDC MOV X21, X0
	0x02607CE0 CMP W8, 0x1
	0x02607CE4 B.LT 0x2607D24
	0x02607CE8 MOV X22, X31
	0x02607CEC AND X8, X8, 0x0
	0x02607CF0 ADD X23, X21, 0x20
	0x02607CF4 CMP X22, W8, UXTW
	0x02607CF8 B.CS 0x2607D44
	0x02607CFC LDR X8, [X19 + 0x20]
	0x02607D00 LDR W1, [X23, X22, LSL #2]
	0x02607D04 MOV X0, X20
	0x02607D08 LDR X8, [X8 + 0xC0]
	0x02607D0C LDR X2, [X8 + 0xD8]
	0x02607D10 BL 0x2606EA8
	0x02607D14 LDR W8, [X21 + 0x18]
	0x02607D18 ADD X22, X22, 0x1
	0x02607D1C CMP X22, W8, SXTW
	0x02607D20 B.LT 0x2607CF4
	0x02607D24 LDP X20, X19, [X31 + 0xE0]
	0x02607D28 LDP X22, X21, [X31 + 0xD0]
	0x02607D2C LDP X24, X23, [X31 + 0xC0]
	0x02607D30 LDP X26, X25, [X31 + 0xB0]
	0x02607D34 LDR X30, [X31 + 0xA0]
	0x02607D38 ADD X31, X31, 0xF0
	0x02607D3C RET
	0x02607D40 BL 0x1C16F20
	0x02607D44 BL 0x1C16F28
	0x02607D48 ADRP X0, 0x1AF4000
	0x02607D4C LDR X0, [X0 + 0xC08]
	0x02607D50 BL 0x1C16D08
	0x02607D54 BL 0x1C16F10
	0x02607D58 MOV X20, X0
	0x02607D5C ADRP X0, 0x1B16000
	0x02607D60 LDR X0, [X0 + 0x350]
	0x02607D64 BL 0x1C16D08
	0x02607D68 MOV X1, X0
	0x02607D6C MOV X0, X20
	0x02607D70 MOV X2, X31
	0x02607D74 BL 0x337B498
	0x02607D78 MOV X0, X20
	0x02607D7C MOV X1, X19
	0x02607D80 BL 0x1C16DEC
	0x02607D84 STR X30, [X31 - 0x30]!
	0x02607D88 STP X22, X21, [X31 + 0x10]
	0x02607D8C STP X20, X19, [X31 + 0x20]
	0x02607D90 STR X31, [X31 + 0x8]
	0x02607D94 LDR X20, [X0 + 0x60]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X21, 0x1DD3000
	013 Move W8, [X21+4085]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x1B17000
	021 Move X0, [X0+792]
	022 Call 0x1C17CF4
	023 Move X0, 0x1B17000
	024 Move X0, [X0+784]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+4085], W8
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+80], X31
	030 Move [X31+48], V0
	031 Move [X31+56], V0
	032 Move X0, [X20+96]
	033 Compare X0, 0
	034 JumpIfEqual {203}
	035 Move X8, [X19+32]
	036 Move X8, [X8+192]
	037 Move X1, [X8+16]
	038 Call Dictionary`2<Int32, Object>.get_Count, X0
	039 Move X8, [X19+32]
	040 Move X23, [X20+96]
	041 Move W21, W0
	042 Move X8, [X8+192]
	043 Move X8, [X8+8]
	044 Move W9, [X8+309]
	045 Move TEMP, X9
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X8
	050 Call 0x1C5D684
	051 Move X8, X0
	052 Move X0, X8
	053 Call 0x1C17F10
	054 Move X8, [X19+32]
	055 Move X1, X23
	056 Move X22, X0
	057 Move X8, [X8+192]
	058 Move X2, [X8+288]
	059 Call Dictionary`2<Int32, Object>..ctor, X0, X1
	060 Move X0, [X20+96]
	061 Compare X0, 0
	062 JumpIfEqual {203}
	063 Move X8, [X19+32]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Move X8, [X8+192]
	067 Move X1, [X8+304]
	068 Call Dictionary`2<Int32, Object>.Clear, X0
	069 Move W8, [X20+32]
	070 Or W8, W8, W21
	071 Move [X20+32], W8
	072 Compare X22, 0
	073 JumpIfEqual {203}
	074 Move X8, [X19+32]
	075 Move X25, 0x1B17000
	076 Move X26, 0x1B17000
	077 Move X0, X22
	078 Move X8, [X8+192]
	079 Move X1, [X8+312]
	080 Move X25, [X25+792]
	081 Move X26, [X26+784]
	082 Add X8, X31, 8
	083 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 Move X8, [X31+40]
	087 Move [X31+48], V0
	088 Move [X31+56], V1
	089 Move [X31+80], X8
	090 Move X8, [X19+32]
	091 Move X8, [X8+192]
	092 Move X1, [X8+384]
	093 Add X0, X31, 48
	094 Call Enumerator<Int32, Object>.MoveNext, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {180}
	099 Move X22, [X20+48]
	100 Compare X22, 0
	101 JumpIfEqual {201}
	102 Move X8, [X22]
	103 Move W21, [X31+64]
	104 Move X27, [X31+72]
	105 Move X1, [X25]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X22
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X22
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X22, X0
	126 Compare X0, 0
	127 JumpIfEqual {202}
	128 Move X8, [X19+32]
	129 Move W23, [X20+72]
	130 Move X9, [X8+192]
	131 Move X8, [X22]
	132 Move X24, [X9+368]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move X1, [X24+32]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X22
	145 Call 0x1C5D788
	146 Move W9, [X10]
	147 Add W9, W9, W2
	148 Add X8, X8, W9
	149 Add X0, X8, 312
	150 Move X0, [X0+8]
	151 Move X1, X24
	152 Call 0x1C17DF8
	153 Move X8, [X0+8]
	154 Move X4, X0
	155 Move X0, X22
	156 Move X1, X20
	157 Move W2, W21
	158 Move W3, W23
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Compare X27, 0
	161 JumpIfEqual {200}
	162 Move X9, [X27]
	163 Move X8, [X26]
	164 Move W11, [X9+304]
	165 Move W10, [X8+304]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X11, [X9+200]
	168 Add X11, X11, X10
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X9, [X9+200]
	172 Add X9, X9, X10
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 NotImplemented "Instruction CSEL not yet implemented."
	176 Move X8, [X0]
	177 Move X1, [X8+928]
	178 Move X9, [X8+920]
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X21, X31
	181 Move X8, [X19+32]
	182 Add X0, X31, 48
	183 Move X8, [X8+192]
	184 Move X1, [X8+392]
	185 Call Enumerator<Int32, Object>.Dispose, X0
	186 Compare X21, 0
	187 JumpIfNotEqual {204}
	188 Move X20, [X31+160]
	189 Move X19, [X31+168]
	190 Move X22, [X31+144]
	191 Move X21, [X31+152]
	192 Move X24, [X31+128]
	193 Move X23, [X31+136]
	194 Move X26, [X31+112]
	195 Move X25, [X31+120]
	196 Move X30, [X31+96]
	197 Move X27, [X31+104]
	198 Add X31, X31, 176
	199 Return 
	200 Call 0x1C17F20
	201 Call 0x1C17F20
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Move X0, X21
	205 Call 0x1C17F18
	206 Move X20, X0
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X0, X20
	209 Call 0x3EB2AD0
	210 Move X21, [X0]
	211 Call 0x3EB2AE0
	212 Move X21, X31
	213 Move X20, X0
	214 Move X8, [X19+32]
	215 Move X8, [X8+192]
	216 Move X1, [X8+392]
	217 Add X0, X31, 48
	218 Call Enumerator<Int32, Object>.Dispose, X0
	219 Compare X21, 0
	220 JumpIfNotEqual {223}
	221 Move X0, X20
	222 Call 0x1D2D690
	223 Move X0, X21
	224 Call 0x1C17F18
	225 Call 0x1991590

Method: System.Boolean ContainsKey(TKey key)

Disassembly:
	0x02607D98 CBZ X20, 0x2607E24
	0x02607D9C LDR X8, [X3 + 0x20]
	0x02607DA0 MOV X22, X1
	0x02607DA4 MOV X21, X3
	0x02607DA8 MOV X19, X2
	0x02607DAC LDR X8, [X8 + 0xC0]
	0x02607DB0 LDR X1, [X8 + 0x28]
	0x02607DB4 LDRB W8, [X1 + 0x135]
	0x02607DB8 TBNZ X8, 0x0, 0x2607DC8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+400]
	008 Move X30, [X31+16]
	009 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean ContainsValue(TValue value)

Disassembly:
	0x02607DBC MOV X0, X1
	0x02607DC0 BL 0x1C5C684
	0x02607DC4 MOV X1, X0
	0x02607DC8 CBZ X22, 0x2607E24
	0x02607DCC LDR X8, [X22]
	0x02607DD0 LDR X9, [X1 + 0x40]
	0x02607DD4 MOV X0, X22
	0x02607DD8 LDR X8, [X8 + 0x40]
	0x02607DDC CMP X8, X9

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+408]
	008 Move X30, [X31+16]
	009 Call Dictionary`2<Int32, Object>.ContainsValue, X0, X1
	010 Return X0
	011 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<TKey, TValue>> GetEnumerator()

Disassembly:
	0x02607DE0 B.NE 0x2607E28
	0x02607DE4 BL 0x1C16E08
	0x02607DE8 LDR X8, [X21 + 0x20]
	0x02607DEC LDR W1, [X0]
	0x02607DF0 ADD X2, X31, 0x8
	0x02607DF4 MOV X0, X20
	0x02607DF8 LDR X8, [X8 + 0xC0]
	0x02607DFC LDR X3, [X8 + 0x1A8]
	0x02607E00 BL 0x2A150AC
	0x02607E04 LDR X8, [X31 + 0x8]
	0x02607E08 ANDS W0, W0, 0x1
	0x02607E0C LDP X22, X21, [X31 + 0x10]
	0x02607E10 CSEL X8, X8, X31, NE
	0x02607E14 STR X8, [X19]
	0x02607E18 LDP X20, X19, [X31 + 0x20]
	0x02607E1C LDR X30, [X31], #0x30
	0x02607E20 RET
	0x02607E24 BL 0x1C16F20
	0x02607E28 BL 0x1C171E0
	0x02607E2C SUB X31, X31, 0x20
	0x02607E30 STP X30, X19, [X31 + 0x10]
	0x02607E34 STR X31, [X31 + 0x8]
	0x02607E38 LDR X0, [X0 + 0x60]
	0x02607E3C CBZ X0, 0x2607E74
	0x02607E40 LDR X8, [X3 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Move X0, [X0+96]
	005 Compare X0, 0
	006 JumpIfEqual {31}
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8+312]
	011 Add X8, X31, 0
	012 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	013 Move X8, [X31+32]
	014 Move V1, [X31]
	015 Move V0, [X31+16]
	016 Add X1, X31, 0
	017 Move [X31+80], X8
	018 Move [X31+48], V1
	019 Move [X31+56], V0
	020 Move [X31], V1
	021 Move [X31+8], V0
	022 Move [X31+32], X8
	023 Move X8, [X19+32]
	024 Move X8, [X8+192]
	025 Move X0, [X8+320]
	026 Call 0x1C17E04
	027 Move X30, [X31+96]
	028 Move X19, [X31+104]
	029 Add X31, X31, 112
	030 Return X0
	031 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02607E44 MOV X19, X2
	0x02607E48 ADD X2, X31, 0x8
	0x02607E4C LDR X8, [X8 + 0xC0]
	0x02607E50 LDR X3, [X8 + 0x1A8]
	0x02607E54 BL 0x2A150AC
	0x02607E58 LDR X8, [X31 + 0x8]
	0x02607E5C ANDS W0, W0, 0x1
	0x02607E60 CSEL X8, X8, X31, NE
	0x02607E64 STR X8, [X19]
	0x02607E68 LDP X30, X19, [X31 + 0x10]
	0x02607E6C ADD X31, X31, 0x20
	0x02607E70 RET
	0x02607E74 BL 0x1C16F20
	0x02607E78 LDR X8, [X2 + 0x20]
	0x02607E7C LDR X8, [X8 + 0xC0]
	0x02607E80 LDR X1, [X8 + 0x2F0]
	0x02607E84 B 0x2606A4C
	0x02607E88 SUB X31, X31, 0xC0
	0x02607E8C STR X30, [X31 + 0x80]
	0x02607E90 STP X24, X23, [X31 + 0x90]
	0x02607E94 STP X22, X21, [X31 + 0xA0]
	0x02607E98 STP X20, X19, [X31 + 0xB0]
	0x02607E9C ADRP X22, 0x1DD2000
	0x02607EA0 LDRB W8, [X22 + 0xFF9]
	0x02607EA4 MOV X19, X2

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Move X0, [X0+96]
	005 Compare X0, 0
	006 JumpIfEqual {31}
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8+312]
	011 Add X8, X31, 0
	012 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	013 Move X8, [X31+32]
	014 Move V1, [X31]
	015 Move V0, [X31+16]
	016 Add X1, X31, 0
	017 Move [X31+80], X8
	018 Move [X31+48], V1
	019 Move [X31+56], V0
	020 Move [X31], V1
	021 Move [X31+8], V0
	022 Move [X31+32], X8
	023 Move X8, [X19+32]
	024 Move X8, [X8+192]
	025 Move X0, [X8+320]
	026 Call 0x1C17E04
	027 Move X30, [X31+96]
	028 Move X19, [X31+104]
	029 Add X31, X31, 112
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean Remove(TKey key)

Disassembly:
	0x02607EA8 MOV X20, X1
	0x02607EAC MOV X21, X0
	0x02607EB0 TBNZ X8, 0x0, 0x2607EC8
	0x02607EB4 ADRP X0, 0x1AED000
	0x02607EB8 LDR X0, [X0 + 0x1B0]
	0x02607EBC BL 0x1C16CF4
	0x02607EC0 MOVZ W8, 0x1
	0x02607EC4 STRB W8, [X22 + 0xFF9]
	0x02607EC8 MOVI V0.2D, 0x0
	0x02607ECC STP X31, X31, [X31 + 0x60]
	0x02607ED0 STR X31, [X31 + 0x70]
	0x02607ED4 STR X31, [X31 + 0x50]
	0x02607ED8 STP V0, V0, [X31 + 0x30]
	0x02607EDC LDR X8, [X19 + 0x20]
	0x02607EE0 LDR X8, [X8 + 0xC0]
	0x02607EE4 LDR X1, [X8]
	0x02607EE8 LDRB W8, [X1 + 0x135]
	0x02607EEC TBNZ X8, 0x0, 0x2607EFC
	0x02607EF0 MOV X0, X1
	0x02607EF4 BL 0x1C5C684
	0x02607EF8 MOV X1, X0
	0x02607EFC CBZ X20, 0x26081BC
	0x02607F00 LDR X8, [X20]
	0x02607F04 CMP X8, X1
	0x02607F08 B.NE 0x26081C0
	0x02607F0C LDR X8, [X19 + 0x20]
	0x02607F10 MOV X0, X20
	0x02607F14 LDR X8, [X8 + 0xC0]
	0x02607F18 LDR X1, [X8 + 0x2F8]
	0x02607F1C BL 0x2605C54
	0x02607F20 LDR X8, [X19 + 0x20]
	0x02607F24 MOV X22, X0
	0x02607F28 LDR X8, [X8 + 0xC0]
	0x02607F2C LDR X8, [X8 + 0x2C0]
	0x02607F30 LDRB W9, [X8 + 0x135]
	0x02607F34 TBNZ X9, 0x0, 0x2607F44
	0x02607F38 MOV X0, X8
	0x02607F3C BL 0x1C5C684
	0x02607F40 MOV X8, X0
	0x02607F44 MOV X0, X8
	0x02607F48 BL 0x1C16F10
	0x02607F4C LDR X8, [X19 + 0x20]
	0x02607F50 MOV X1, X21
	0x02607F54 MOV X23, X0
	0x02607F58 LDR X8, [X8 + 0xC0]
	0x02607F5C LDR X2, [X8 + 0x300]
	0x02607F60 LDR X3, [X8 + 0x2C8]
	0x02607F64 BL 0x2D2CE34
	0x02607F68 LDR X8, [X19 + 0x20]
	0x02607F6C MOV X0, X22
	0x02607F70 MOV X1, X23
	0x02607F74 LDR X8, [X8 + 0xC0]
	0x02607F78 LDR X2, [X8 + 0x2D0]
	0x02607F7C BL 0x21D9EE8
	0x02607F80 LDR X8, [X19 + 0x20]
	0x02607F84 LDR X8, [X8 + 0xC0]
	0x02607F88 LDR X1, [X8 + 0x2E0]
	0x02607F8C BL 0x21D54D4
	0x02607F90 CBZ X0, 0x26081BC
	0x02607F94 LDR X8, [X0 + 0x18]
	0x02607F98 MOV X22, X0
	0x02607F9C CMP W8, 0x1
	0x02607FA0 B.LT 0x2607FE0
	0x02607FA4 MOV X23, X31
	0x02607FA8 AND X8, X8, 0x0
	0x02607FAC ADD X24, X22, 0x20
	0x02607FB0 CMP X23, W8, UXTW
	0x02607FB4 B.CS 0x26081B8
	0x02607FB8 LDR X8, [X19 + 0x20]
	0x02607FBC LDR W1, [X24, X23, LSL #2]
	0x02607FC0 MOV X0, X20
	0x02607FC4 LDR X8, [X8 + 0xC0]
	0x02607FC8 LDR X2, [X8 + 0xD8]
	0x02607FCC BL 0x2606EA8
	0x02607FD0 LDR W8, [X22 + 0x18]
	0x02607FD4 ADD X23, X23, 0x1
	0x02607FD8 CMP X23, W8, SXTW
	0x02607FDC B.LT 0x2607FB0
	0x02607FE0 LDR X0, [X21 + 0x60]
	0x02607FE4 CBZ X0, 0x26081BC
	0x02607FE8 LDR X8, [X19 + 0x20]
	0x02607FEC LDR X8, [X8 + 0xC0]
	0x02607FF0 LDR X1, [X8 + 0x50]
	0x02607FF4 BL 0x2A1346C
	0x02607FF8 CBZ X0, 0x26081BC
	0x02607FFC LDR X8, [X19 + 0x20]
	0x02608000 ADRP X24, 0x1AEC000
	0x02608004 LDR X8, [X8 + 0xC0]
	0x02608008 LDR X1, [X8 + 0x308]
	0x0260800C B 0x3EB154C
	0x02608010 ADD X8, X31, 0x8
	0x02608014 BL 0x2EB7E78
	0x02608018 LDUR V0, [X31 + 0x8]
	0x0260801C LDR X8, [X31 + 0x18]
	0x02608020 STR V0, [X31 + 0x6]
	0x02608024 STR X8, [X31 + 0x70]
	0x02608028 LDR X8, [X19 + 0x20]
	0x0260802C LDR X8, [X8 + 0xC0]
	0x02608030 LDR X1, [X8 + 0x328]
	0x02608034 ADD X0, X31, 0x60
	0x02608038 BL 0x2BF5DBC
	0x0260803C TBZ X0, 0x0, 0x2608080
	0x02608040 LDR X0, [X20 + 0x60]
	0x02608044 CBZ X0, 0x26081B0
	0x02608048 LDR X8, [X19 + 0x20]
	0x0260804C LDR W22, [X31 + 0x70]
	0x02608050 LDR X8, [X8 + 0xC0]
	0x02608054 LDR X2, [X8 + 0x190]
	0x02608058 MOV W1, W22
	0x0260805C BL 0x2A13880
	0x02608060 TBNZ X0, 0x0, 0x2608028
	0x02608064 LDR X8, [X19 + 0x20]
	0x02608068 LDR X8, [X8 + 0xC0]
	0x0260806C LDR X2, [X8 + 0xD0]
	0x02608070 MOV X0, X20
	0x02608074 MOV W1, W22
	0x02608078 BL 0x26066A0
	0x0260807C B 0x2608028
	0x02608080 MOV X23, X31
	0x02608084 MOVZ W22, 0x6
	0x02608088 LDR X8, [X19 + 0x20]
	0x0260808C ADD X0, X31, 0x60
	0x02608090 LDR X8, [X8 + 0xC0]
	0x02608094 LDR X1, [X8 + 0x330]
	0x02608098 BL 0x2BF5DB8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1DD3000
	009 Move W8, [X20+4086]
	010 Move X22, X2
	011 Move W19, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1B17000
	018 Move X0, [X0+792]
	019 Call 0x1C17CF4
	020 Move X0, 0x1B17000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+4086], W8
	025 Move [X31+8], X31
	026 Move X0, [X21+96]
	027 Compare X0, 0
	028 JumpIfEqual {137}
	029 Move X8, [X22+32]
	030 Add X2, X31, 8
	031 Move W1, W19
	032 Move X8, [X8+192]
	033 Move X3, [X8+424]
	034 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	035 Move W20, W0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {128}
	040 Move X0, [X21+96]
	041 Compare X0, 0
	042 JumpIfEqual {137}
	043 Move X8, [X22+32]
	044 Move W1, W19
	045 Move X8, [X8+192]
	046 Move X2, [X8+440]
	047 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	048 Move X23, [X21+48]
	049 Move W8, 1
	050 Move [X21+32], W8
	051 Compare X23, 0
	052 JumpIfEqual {137}
	053 Move X10, 0x1B17000
	054 Move X8, [X23]
	055 Move X10, [X10+792]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X10]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X23
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X23
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {137}
	078 Move X8, [X22+32]
	079 Move W22, [X21+72]
	080 Move X23, X0
	081 Move X9, [X8+192]
	082 Move X8, [X0]
	083 Move X24, [X9+368]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Move X1, [X24+32]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X23
	096 Call 0x1C5D788
	097 Move W9, [X10]
	098 Add W9, W9, W2
	099 Add X8, X8, W9
	100 Add X0, X8, 312
	101 Move X0, [X0+8]
	102 Move X1, X24
	103 Call 0x1C17DF8
	104 Move X8, [X0+8]
	105 Move X4, X0
	106 Move X0, X23
	107 Move X1, X21
	108 Move W2, W19
	109 Move W3, W22
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X0, [X31+8]
	112 Compare X0, 0
	113 JumpIfEqual {137}
	114 Move X9, 0x1B16000
	115 Move X9, [X9+784]
	116 Move X8, [X0]
	117 Move X9, [X9]
	118 Move W11, [X8+304]
	119 Move W10, [X9+304]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X11, [X8+200]
	122 Add X10, X11, X10
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X9, [X8+920]
	126 Move X1, [X8+928]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 And W0, W20, 1
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X24, [X31+16]
	134 Move X23, [X31+24]
	135 Move X30, [X31+64]
	136 Return X0
	137 Call 0x1C17F20

Method: System.Void RemoveAll(System.Predicate`1<System.Collections.Generic.KeyValuePair`2<TKey, TValue>> predicate)

Disassembly:
	0x0260809C CBNZ X23, 0x26081C8
	0x026080A0 CMP W22, 0x6
	0x026080A4 B.EQ 0x26080AC
	0x026080A8 CBNZ W22, 0x2608198
	0x026080AC LDR X0, [X21 + 0x60]
	0x026080B0 CBZ X0, 0x26081BC
	0x026080B4 LDR X8, [X19 + 0x20]
	0x026080B8 LDR X8, [X8 + 0xC0]
	0x026080BC LDR X1, [X8 + 0x138]
	0x026080C0 ADD X8, X31, 0x8
	0x026080C4 BL 0x2A13AB4
	0x026080C8 LDUR V0, [X31 + 0x8]
	0x026080CC LDUR V1, [X31 + 0x18]
	0x026080D0 LDR X8, [X31 + 0x28]
	0x026080D4 STP V0, V1, [X31 + 0x30]
	0x026080D8 STR X8, [X31 + 0x50]
	0x026080DC LDR X8, [X19 + 0x20]
	0x026080E0 LDR X8, [X8 + 0xC0]
	0x026080E4 LDR X1, [X8 + 0x180]
	0x026080E8 ADD X0, X31, 0x30
	0x026080EC BL 0x2BF5330
	0x026080F0 TBZ X0, 0x0, 0x260817C
	0x026080F4 LDR X8, [X19 + 0x20]
	0x026080F8 LDR W1, [X31 + 0x40]
	0x026080FC LDR X21, [X31 + 0x48]
	0x02608100 LDR X8, [X8 + 0xC0]
	0x02608104 LDR X2, [X8 + 0x338]
	0x02608108 MOV X0, X20
	0x0260810C BL 0x2605C0C
	0x02608110 CBZ X21, 0x26081B4
	0x02608114 LDR X8, [X21]
	0x02608118 LDR X1, [X24]
	0x0260811C MOV X22, X0
	0x02608120 LDRH W9, [X8 + 0x12E]
	0x02608124 CBZ X9, 0x2608148
	0x02608128 LDR X10, [X8 + 0xB0]
	0x0260812C ADD X10, X10, 0x8
	0x02608130 LDUR X11, [X10 - 0x8]
	0x02608134 CMP X11, X1
	0x02608138 B.EQ 0x2608158
	0x0260813C SUBS X9, X9, 0x1
	0x02608140 ADD X10, X10, 0x10
	0x02608144 B.NE 0x2608130
	0x02608148 MOVZ W2, 0x18
	0x0260814C MOV X0, X21
	0x02608150 BL 0x1C5C788
	0x02608154 B 0x2608168
	0x02608158 LDR W9, [X10]
	0x0260815C ADD W9, W9, 0x18
	0x02608160 ADD X8, X8, W9, 0x4, SXTW
	0x02608164 ADD X0, X8, 0x138
	0x02608168 LDP X8, X2, [X0]
	0x0260816C MOV X0, X21
	0x02608170 MOV X1, X22
	0x02608174 BLR X8
	0x02608178 B 0x26080DC
	0x0260817C MOV X20, X31
	0x02608180 LDR X8, [X19 + 0x20]
	0x02608184 ADD X0, X31, 0x30
	0x02608188 LDR X8, [X8 + 0xC0]
	0x0260818C LDR X1, [X8 + 0x188]
	0x02608190 BL 0x2BF5448
	0x02608194 CBNZ X20, 0x26081D0
	0x02608198 LDP X20, X19, [X31 + 0xB0]
	0x0260819C LDP X22, X21, [X31 + 0xA0]
	0x026081A0 LDP X24, X23, [X31 + 0x90]
	0x026081A4 LDR X30, [X31 + 0x80]
	0x026081A8 ADD X31, X31, 0xC0
	0x026081AC RET
	0x026081B0 BL 0x1C16F20
	0x026081B4 BL 0x1C16F20
	0x026081B8 BL 0x1C16F28
	0x026081BC BL 0x1C16F20
	0x026081C0 MOV X0, X20
	0x026081C4 BL 0x1C171E0
	0x026081C8 MOV X0, X23
	0x026081CC BL 0x1C16F18
	0x026081D0 MOV X0, X20
	0x026081D4 BL 0x1C16F18
	0x026081D8 B 0x26081EC
	0x026081DC B 0x260823C
	0x026081E0 B 0x260823C
	0x026081E4 B 0x26081EC
	0x026081E8 B 0x26081EC
	0x026081EC MOV X22, X0
	0x026081F0 CMP W1, 0x1
	0x026081F4 B.NE 0x2608210
	0x026081F8 MOV X0, X22
	0x026081FC BL 0x3EB1AD0
	0x02608200 LDR X23, [X0]
	0x02608204 BL 0x3EB1AE0
	0x02608208 MOV W22, W31
	0x0260820C B 0x2608088
	0x02608210 MOV X23, X31
	0x02608214 B 0x260821C
	0x02608218 MOV X22, X0
	0x0260821C LDR X8, [X19 + 0x20]
	0x02608220 LDR X8, [X8 + 0xC0]
	0x02608224 LDR X1, [X8 + 0x330]
	0x02608228 ADD X0, X31, 0x60
	0x0260822C BL 0x2BF5DB8
	0x02608230 CBZ X23, 0x2608280
	0x02608234 MOV X0, X23
	0x02608238 BL 0x1C16F18
	0x0260823C MOV X22, X0
	0x02608240 CMP W1, 0x1
	0x02608244 B.NE 0x260825C
	0x02608248 MOV X0, X22
	0x0260824C BL 0x3EB1AD0
	0x02608250 LDR X20, [X0]
	0x02608254 BL 0x3EB1AE0
	0x02608258 B 0x2608180
	0x0260825C MOV X20, X31
	0x02608260 B 0x2608268
	0x02608264 MOV X22, X0
	0x02608268 LDR X8, [X19 + 0x20]
	0x0260826C LDR X8, [X8 + 0xC0]
	0x02608270 LDR X1, [X8 + 0x188]
	0x02608274 ADD X0, X31, 0x30
	0x02608278 BL 0x2BF5448
	0x0260827C CBNZ X20, 0x2608288
	0x02608280 MOV X0, X22
	0x02608284 BL 0x1D2C690
	0x02608288 MOV X0, X20
	0x0260828C BL 0x1C16F18
	0x02608290 BL 0x1990590
	0x02608294 STP X30, X21, [X31 - 0x20]!
	0x02608298 STP X20, X19, [X31 + 0x10]
	0x0260829C LDR X8, [X2 + 0x20]
	0x026082A0 MOV X20, X1
	0x026082A4 MOV X19, X2
	0x026082A8 MOV X21, X0
	0x026082AC LDR X8, [X8 + 0xC0]
	0x026082B0 LDR X1, [X8 + 0x28]
	0x026082B4 LDRB W8, [X1 + 0x135]
	0x026082B8 TBNZ X8, 0x0, 0x26082C8
	0x026082BC MOV X0, X1
	0x026082C0 BL 0x1C5C684
	0x026082C4 MOV X1, X0
	0x026082C8 CBZ X20, 0x2608308
	0x026082CC LDR X8, [X20]
	0x026082D0 LDR X9, [X1 + 0x40]
	0x026082D4 MOV X0, X20
	0x026082D8 LDR X8, [X8 + 0x40]
	0x026082DC CMP X8, X9
	0x026082E0 B.NE 0x260830C
	0x026082E4 BL 0x1C16E08
	0x026082E8 LDR X8, [X19 + 0x20]
	0x026082EC LDR W1, [X0]
	0x026082F0 LDP X20, X19, [X31 + 0x10]
	0x026082F4 MOV X0, X21
	0x026082F8 LDR X8, [X8 + 0xC0]
	0x026082FC LDR X2, [X8 + 0xD0]
	0x02608300 LDP X30, X21, [X31], #0x20
	0x02608304 B 0x26066A0
	0x02608308 BL 0x1C16F20
	0x0260830C BL 0x1C171E0
	0x02608310 STP X30, X21, [X31 - 0x20]!
	0x02608314 STP X20, X19, [X31 + 0x10]
	0x02608318 LDR X8, [X2 + 0x20]
	0x0260831C MOV X20, X1
	0x02608320 MOV X19, X2
	0x02608324 MOV X21, X0
	0x02608328 LDR X8, [X8 + 0xC0]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move [X31+112], X31
	010 Move [X31+48], X31
	011 Move [X31+56], X31
	012 Move [X31+80], V0
	013 Move [X31+88], V0
	014 Move [X31+64], X31
	015 Move X20, X0
	016 Move X0, [X0+96]
	017 Compare X0, 0
	018 JumpIfEqual {136}
	019 Move X8, [X2+32]
	020 Move X22, X1
	021 Move X19, X2
	022 Move X8, [X8+192]
	023 Move X1, [X8+312]
	024 Add X8, X31, 8
	025 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move X8, [X31+40]
	029 Move X21, X31
	030 Move [X31+80], V0
	031 Move [X31+88], V1
	032 Move [X31+112], X8
	033 Move X8, [X19+32]
	034 Move X8, [X8+192]
	035 Move X1, [X8+384]
	036 Add X0, X31, 80
	037 Call Enumerator<Int32, Object>.MoveNext, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {80}
	042 Compare X22, 0
	043 JumpIfEqual {135}
	044 Move X23, [X31+96]
	045 Move X2, [X31+104]
	046 Move X0, [X22+64]
	047 Move X8, [X22+24]
	048 Move X3, [X22+40]
	049 Move X1, X23
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {33}
	055 Compare X21, 0
	056 JumpIfNotEqual {74}
	057 Move X8, [X19+32]
	058 Move X8, [X8+192]
	059 Move X0, [X8+464]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Call 0x1C17F10
	067 Move X8, [X19+32]
	068 Move X21, X0
	069 Move X8, [X8+192]
	070 Move X1, [X8+472]
	071 Call HashSet`1<Int32>..ctor, X0
	072 Compare X21, 0
	073 JumpIfEqual {141}
	074 Move X8, [X19+32]
	075 Move X8, [X8+192]
	076 Move X2, [X8+480]
	077 Move X0, X21
	078 Move W1, W23
	079 Call HashSet`1<Int32>.Add, X0, X1
	080 Move X23, X31
	081 Move W22, 5
	082 Move X8, [X19+32]
	083 Add X0, X31, 80
	084 Move X8, [X8+192]
	085 Move X1, [X8+392]
	086 Call Enumerator<Int32, Object>.Dispose, X0
	087 Compare X23, 0
	088 JumpIfNotEqual {137}
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Compare W22, 0
	091 JumpIfNotEqual {127}
	092 Compare X21, 0
	093 JumpIfEqual {127}
	094 Move X8, [X19+32]
	095 Move X0, X21
	096 Move X8, [X8+192]
	097 Move X1, [X8+488]
	098 Add X8, X31, 8
	099 Call HashSet`1<Int32>.GetEnumerator, X0
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Move X8, [X31+24]
	102 Move [X31+3], V0
	103 Move [X31+64], X8
	104 Move X8, [X19+32]
	105 Move X8, [X8+192]
	106 Move X1, [X8+520]
	107 Add X0, X31, 48
	108 Call Enumerator<Int32>.MoveNext, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {119}
	113 Move X8, [X19+32]
	114 Move W1, [X31+64]
	115 Move X8, [X8+192]
	116 Move X2, [X8+216]
	117 Move X0, X20
	118 Call 0x2607EA8, X0, X1
	119 Move X20, X31
	120 Move X8, [X19+32]
	121 Add X0, X31, 48
	122 Move X8, [X8+192]
	123 Move X1, [X8+528]
	124 Call Enumerator<Int32>.Dispose, X0
	125 Compare X20, 0
	126 JumpIfNotEqual {139}
	127 Move X20, [X31+160]
	128 Move X19, [X31+168]
	129 Move X22, [X31+144]
	130 Move X21, [X31+152]
	131 Move X30, [X31+128]
	132 Move X23, [X31+136]
	133 Add X31, X31, 176
	134 Return 
	135 Call 0x1C17F20
	136 Call 0x1C17F20
	137 Move X0, X23
	138 Call 0x1C17F18
	139 Move X0, X20
	140 Call 0x1C17F18
	141 Call 0x1C17F20
	142 Move X22, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X22
	145 Call 0x3EB2AD0
	146 Move X20, [X0]
	147 Call 0x3EB2AE0
	148 Move X20, X31
	149 Move X22, X0
	150 Move X8, [X19+32]
	151 Move X8, [X8+192]
	152 Move X1, [X8+528]
	153 Add X0, X31, 48
	154 Call Enumerator<Int32>.Dispose, X0
	155 Compare X20, 0
	156 JumpIfEqual {177}
	157 Move X0, X20
	158 Call 0x1C17F18
	159 Move X22, X0
	160 Move X21, X31
	161 Move X22, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X22
	164 Call 0x3EB2AD0
	165 Move X23, [X0]
	166 Call 0x3EB2AE0
	167 Move W22, W31
	168 Move X23, X31
	169 Move X22, X0
	170 Move X8, [X19+32]
	171 Move X8, [X8+192]
	172 Move X1, [X8+392]
	173 Add X0, X31, 80
	174 Call Enumerator<Int32, Object>.Dispose, X0
	175 Compare X23, 0
	176 JumpIfNotEqual {179}
	177 Move X0, X22
	178 Call 0x1D2D690
	179 Move X0, X23
	180 Call 0x1C17F18
	181 Call 0x1991590

Method: System.Boolean TryGetValue(TKey key, out TValue value)

Disassembly:
	0x0260832C LDR X1, [X8 + 0x28]
	0x02608330 LDRB W8, [X1 + 0x135]
	0x02608334 TBNZ X8, 0x0, 0x2608344
	0x02608338 MOV X0, X1
	0x0260833C BL 0x1C5C684
	0x02608340 MOV X1, X0
	0x02608344 CBZ X20, 0x2608384
	0x02608348 LDR X8, [X20]
	0x0260834C LDR X9, [X1 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X3+32]
	006 Move X8, [X8+192]
	007 Move X3, [X8+424]
	008 Move X30, [X31+16]
	009 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	010 Return X0
	011 Call 0x1C17F20

Method: TValue GetOrAddValue(TKey key)

Disassembly:
	0x02608350 MOV X0, X20
	0x02608354 LDR X8, [X8 + 0x40]
	0x02608358 CMP X8, X9
	0x0260835C B.NE 0x2608388
	0x02608360 BL 0x1C16E08
	0x02608364 LDR X8, [X19 + 0x20]
	0x02608368 LDR W1, [X0]
	0x0260836C LDP X20, X19, [X31 + 0x10]
	0x02608370 MOV X0, X21
	0x02608374 LDR X8, [X8 + 0xC0]
	0x02608378 LDR X2, [X8 + 0xC8]
	0x0260837C LDP X30, X21, [X31], #0x20
	0x02608380 B 0x2606D98
	0x02608384 BL 0x1C16F20
	0x02608388 BL 0x1C171E0
	0x0260838C STP X30, X21, [X31 - 0x20]!
	0x02608390 STP X20, X19, [X31 + 0x10]
	0x02608394 LDR X8, [X2 + 0x20]
	0x02608398 MOV X20, X1
	0x0260839C MOV X19, X2
	0x026083A0 MOV X21, X0
	0x026083A4 LDR X8, [X8 + 0xC0]
	0x026083A8 LDR X1, [X8 + 0x28]
	0x026083AC LDRB W8, [X1 + 0x135]
	0x026083B0 TBNZ X8, 0x0, 0x26083C0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move X8, [X2+32]
	008 Move X20, X2
	009 Add X2, X31, 8
	010 Move W19, W1
	011 Move X8, [X8+192]
	012 Move X21, X0
	013 Move X3, [X8+536]
	014 Call 0x260832C, X0, X1, X2
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {20}
	019 Move X0, [X31+8]
	020 Move X8, [X20+32]
	021 Move X0, X21
	022 Move W1, W19
	023 Move X8, [X8+192]
	024 Move X2, [X8+208]
	025 Call 0x26076A0, X0, X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Add X31, X31, 48
	031 Return X0

Method: SimpleJSON.JSONNode ToJSON(System.Predicate`1<SpatialSys.ObservableState.IStateObject> filter = null, System.Boolean includeSyncRate = True)

Disassembly:
	0x026083B4 MOV X0, X1
	0x026083B8 BL 0x1C5C684
	0x026083BC MOV X1, X0
	0x026083C0 CBZ X20, 0x2608400
	0x026083C4 LDR X8, [X20]
	0x026083C8 LDR X9, [X1 + 0x40]
	0x026083CC MOV X0, X20
	0x026083D0 LDR X8, [X8 + 0x40]
	0x026083D4 CMP X8, X9
	0x026083D8 B.NE 0x2608404
	0x026083DC BL 0x1C16E08
	0x026083E0 LDR X8, [X19 + 0x20]
	0x026083E4 LDR W1, [X0]
	0x026083E8 LDP X20, X19, [X31 + 0x10]
	0x026083EC MOV X0, X21
	0x026083F0 LDR X8, [X8 + 0xC0]
	0x026083F4 LDR X2, [X8 + 0xD8]
	0x026083F8 LDP X30, X21, [X31], #0x20
	0x026083FC B 0x2606EA8
	0x02608400 BL 0x1C16F20
	0x02608404 BL 0x1C171E0
	0x02608408 LDR X8, [X2 + 0x20]
	0x0260840C LDR X8, [X8 + 0xC0]
	0x02608410 LDR X2, [X8 + 0xD0]
	0x02608414 B 0x26066A0
	0x02608418 STR X30, [X31 - 0x30]!
	0x0260841C STP X22, X21, [X31 + 0x10]
	0x02608420 STP X20, X19, [X31 + 0x20]
	0x02608424 STR X31, [X31 + 0x8]
	0x02608428 LDR X8, [X3 + 0x20]
	0x0260842C MOV X22, X1
	0x02608430 MOV X20, X3
	0x02608434 MOV X19, X2
	0x02608438 LDR X8, [X8 + 0xC0]
	0x0260843C MOV X21, X0
	0x02608440 LDR X1, [X8 + 0x28]
	0x02608444 LDRB W8, [X1 + 0x135]
	0x02608448 TBNZ X8, 0x0, 0x2608458
	0x0260844C MOV X0, X1
	0x02608450 BL 0x1C5C684
	0x02608454 MOV X1, X0
	0x02608458 CBZ X22, 0x26084B4
	0x0260845C LDR X8, [X22]
	0x02608460 LDR X9, [X1 + 0x40]
	0x02608464 MOV X0, X22
	0x02608468 LDR X8, [X8 + 0x40]
	0x0260846C CMP X8, X9
	0x02608470 B.NE 0x26084B8
	0x02608474 BL 0x1C16E08
	0x02608478 LDR X8, [X20 + 0x20]
	0x0260847C LDR W1, [X0]
	0x02608480 ADD X2, X31, 0x8
	0x02608484 MOV X0, X21
	0x02608488 LDR X8, [X8 + 0xC0]
	0x0260848C LDR X3, [X8 + 0x218]
	0x02608490 BL 0x260732C
	0x02608494 LDR X8, [X31 + 0x8]
	0x02608498 ANDS W0, W0, 0x1
	0x0260849C LDP X22, X21, [X31 + 0x10]
	0x026084A0 CSEL X8, X8, X31, NE
	0x026084A4 STR X8, [X19]
	0x026084A8 LDP X20, X19, [X31 + 0x20]
	0x026084AC LDR X30, [X31], #0x30
	0x026084B0 RET
	0x026084B4 BL 0x1C16F20
	0x026084B8 BL 0x1C171E0
	0x026084BC STR X30, [X31 - 0x10]!
	0x026084C0 LDR X0, [X0 + 0x60]
	0x026084C4 CBZ X0, 0x26084E8
	0x026084C8 LDR X8, [X2 + 0x20]
	0x026084CC LDR X8, [X8 + 0xC0]
	0x026084D0 LDR X2, [X8 + 0x190]
	0x026084D4 BL 0x2A13880
	0x026084D8 ORN W8, W31, W0, 0x0
	0x026084DC AND W0, W8, 0x1
	0x026084E0 LDR X30, [X31], #0x10
	0x026084E4 RET
	0x026084E8 BL 0x1C16F20
	0x026084EC STP X29, X30, [X31 - 0x50]!
	0x026084F0 STR X25, [X31 + 0x10]
	0x026084F4 STP X24, X23, [X31 + 0x20]
	0x026084F8 STP X22, X21, [X31 + 0x30]
	0x026084FC STP X20, X19, [X31 + 0x40]
	0x02608500 ADD X29, X31, 0x0
	0x02608504 SUB X31, X31, 0x10
	0x02608508 MRS X25, 0xC000
	0x0260850C LDR X8, [X25 + 0x28]
	0x02608510 ADRP X22, 0x1DD1000
	0x02608514 MOV X21, X2
	0x02608518 MOV X19, X1
	0x0260851C STUR X8, [X29 - 0x8]
	0x02608520 LDRB W8, [X22 + 0xFFA]
	0x02608524 MOV X20, X0
	0x02608528 CBNZ W8, 0x2608540
	0x0260852C ADRP X0, 0x1AEB000
	0x02608530 LDR X0, [X0 + 0x6C0]
	0x02608534 BL 0x1C16CF4
	0x02608538 MOVZ W8, 0x1
	0x0260853C STRB W8, [X22 + 0xFFA]
	0x02608540 LDR X0, [X21 + 0x20]
	0x02608544 LDRB W8, [X0 + 0x135]
	0x02608548 TBNZ X8, 0x0, 0x2608550
	0x0260854C BL 0x1C5C684
	0x02608550 LDR X8, [X0 + 0xC0]
	0x02608554 LDR X8, [X8 + 0x10]
	0x02608558 LDR W23, [X8 + 0xFC]
	0x0260855C ADD X8, X31, 0x0
	0x02608560 ADD X9, X23, 0xF
	0x02608564 AND X9, X9, 0x1FFFFFFFF
	0x02608568 SUB X22, X8, X9
	0x0260856C ADD X31, X22, 0x0
	0x02608570 ADD X8, X31, 0x0
	0x02608574 SUB X24, X8, X9
	0x02608578 ADD X31, X24, 0x0
	0x0260857C MOV X0, X24
	0x02608580 MOV W1, W31
	0x02608584 MOV X2, X23
	0x02608588 BL 0x3EB1B10
	0x0260858C CBZ X19, 0x2608658
	0x02608590 MOV X0, X24
	0x02608594 MOV W1, W31
	0x02608598 MOV X2, X23
	0x0260859C BL 0x3EB1B10
	0x026085A0 MOV X0, X22
	0x026085A4 MOV X1, X24
	0x026085A8 MOV X2, X23
	0x026085AC BL 0x3EB1AC0
	0x026085B0 LDR X0, [X21 + 0x20]
	0x026085B4 LDRB W8, [X0 + 0x135]
	0x026085B8 TBNZ X8, 0x0, 0x26085C0
	0x026085BC BL 0x1C5C684
	0x026085C0 LDR X8, [X0 + 0xC0]
	0x026085C4 MOV X1, X22
	0x026085C8 LDR X0, [X8 + 0x10]
	0x026085CC BL 0x1C16ED4
	0x026085D0 TBNZ X0, 0x0, 0x2608644
	0x026085D4 MOV X0, X19
	0x026085D8 MOV X1, X31
	0x026085DC BL 0x33BE520
	0x026085E0 LDR X8, [X21 + 0x20]
	0x026085E4 MOV X21, X0
	0x026085E8 LDRB W9, [X8 + 0x135]
	0x026085EC TBNZ X9, 0x0, 0x26085FC
	0x026085F0 MOV X0, X8
	0x026085F4 BL 0x1C5C684
	0x026085F8 MOV X8, X0
	0x026085FC ADRP X9, 0x1AEB000
	0x02608600 LDR X9, [X9 + 0x6C0]
	0x02608604 LDR X8, [X8 + 0xC0]
	0x02608608 LDR X0, [X9]
	0x0260860C LDR X22, [X8 + 0x18]
	0x02608610 LDR W9, [X0 + 0xE0]
	0x02608614 CBNZ W9, 0x260861C
	0x02608618 BL 0x1C16DFC
	0x0260861C MOV X0, X22
	0x02608620 MOV X1, X31
	0x02608624 BL 0x338C698
	0x02608628 MOV X1, X0
	0x0260862C MOV X0, X21
	0x02608630 MOV X2, X31
	0x02608634 BL 0x3395F0C
	0x02608638 TBZ X0, 0x0, 0x2608644
	0x0260863C MOV X0, X31
	0x02608640 BL 0x339D56C
	0x02608644 ADD X8, X19, 0x20
	0x02608648 STR X8, [X20]
	0x0260864C LDR X8, [X19 + 0x18]
	0x02608650 STR W8, [X20 + 0x8]
	0x02608654 B 0x260865C
	0x02608658 STP X31, X31, [X20]
	0x0260865C LDR X8, [X25 + 0x28]
	0x02608660 LDUR X9, [X29 - 0x8]
	0x02608664 CMP X8, X9
	0x02608668 B.NE 0x2608688
	0x0260866C ADD X31, X29, 0x0
	0x02608670 LDP X20, X19, [X31 + 0x40]
	0x02608674 LDP X22, X21, [X31 + 0x30]
	0x02608678 LDP X24, X23, [X31 + 0x20]
	0x0260867C LDR X25, [X31 + 0x10]
	0x02608680 LDP X29, X30, [X31], #0x50
	0x02608684 RET
	0x02608688 BL 0x3EB1B20
	0x0260868C STR X30, [X31 - 0x10]!
	0x02608690 LDR X0, [X0 + 0x60]
	0x02608694 CBZ X0, 0x26086AC
	0x02608698 LDR X8, [X1 + 0x20]
	0x0260869C LDR X8, [X8 + 0xC0]
	0x026086A0 LDR X1, [X8 + 0x10]
	0x026086A4 LDR X30, [X31], #0x10
	0x026086A8 B 0x2AA4E88
	0x026086AC BL 0x1C16F20
	0x026086B0 STR X30, [X31 - 0x20]!
	0x026086B4 STP X20, X19, [X31 + 0x10]
	0x026086B8 LDR X8, [X1 + 0x20]
	0x026086BC MOV X20, X1
	0x026086C0 MOV X19, X0
	0x026086C4 LDR X8, [X8 + 0xC0]
	0x026086C8 LDR X8, [X8 + 0x18]
	0x026086CC LDRB W9, [X8 + 0x135]
	0x026086D0 TBNZ X9, 0x0, 0x26086E0
	0x026086D4 MOV X0, X8
	0x026086D8 BL 0x1C5C684
	0x026086DC MOV X8, X0
	0x026086E0 MOV X0, X8
	0x026086E4 BL 0x1C16F10
	0x026086E8 LDR X8, [X20 + 0x20]
	0x026086EC MOVN W1, 0x1
	0x026086F0 MOV X20, X0
	0x026086F4 LDR X8, [X8 + 0xC0]
	0x026086F8 LDR X2, [X8 + 0x20]
	0x026086FC BL 0x297D79C
	0x02608700 CBZ X20, 0x2608718
	0x02608704 STR X19, [X20 + 0x28]
	0x02608708 MOV X0, X20
	0x0260870C LDP X20, X19, [X31 + 0x10]
	0x02608710 LDR X30, [X31], #0x20
	0x02608714 RET
	0x02608718 BL 0x1C16F20
	0x0260871C MOV W0, W31
	0x02608720 RET
	0x02608724 MOVZ W0, 0x1
	0x02608728 RET
	0x0260872C MOV W0, W31
	0x02608730 RET
	0x02608734 STR X30, [X31 - 0x10]!
	0x02608738 LDR X0, [X0 + 0x60]
	0x0260873C CBZ X0, 0x2608754
	0x02608740 LDR X8, [X2 + 0x20]
	0x02608744 LDR X8, [X8 + 0xC0]
	0x02608748 LDR X2, [X8 + 0x30]
	0x0260874C LDR X30, [X31], #0x10
	0x02608750 B 0x2AA5018
	0x02608754 BL 0x1C16F20
	0x02608758 STR X30, [X31 - 0x10]!
	0x0260875C LDR X0, [X0 + 0x60]
	0x02608760 CBZ X0, 0x2608778
	0x02608764 LDR X8, [X1 + 0x20]
	0x02608768 LDR X8, [X8 + 0xC0]
	0x0260876C LDR X1, [X8 + 0x40]
	0x02608770 LDR X30, [X31], #0x10
	0x02608774 B 0x2AA4F58
	0x02608778 BL 0x1C16F20
	0x0260877C STR X30, [X31 - 0x10]!
	0x02608780 LDR X0, [X0 + 0x60]
	0x02608784 CBZ X0, 0x260879C
	0x02608788 LDR X8, [X1 + 0x20]
	0x0260878C LDR X8, [X8 + 0xC0]
	0x02608790 LDR X1, [X8 + 0x50]
	0x02608794 LDR X30, [X31], #0x10
	0x02608798 B 0x2AA4E98
	0x0260879C BL 0x1C16F20
	0x026087A0 STR X30, [X31 - 0x10]!
	0x026087A4 LDR X0, [X0 + 0x60]
	0x026087A8 CBZ X0, 0x26087C0
	0x026087AC LDR X8, [X1 + 0x20]
	0x026087B0 LDR X8, [X8 + 0xC0]
	0x026087B4 LDR X1, [X8 + 0x10]
	0x026087B8 LDR X30, [X31], #0x10
	0x026087BC B 0x2AA4E88
	0x026087C0 BL 0x1C16F20
	0x026087C4 LDR X0, [X0 + 0x40]
	0x026087C8 RET
	0x026087CC LDR W0, [X0 + 0x48]
	0x026087D0 RET
	0x026087D4 STR W1, [X0 + 0x48]
	0x026087D8 RET
	0x026087DC LDR X0, [X0 + 0x50]
	0x026087E0 RET
	0x026087E4 STR X30, [X31 - 0x20]!
	0x026087E8 STP X20, X19, [X31 + 0x10]
	0x026087EC ADRP X20, 0x1DD1000
	0x026087F0 LDRB W8, [X20 + 0xFFB]
	0x026087F4 MOV X19, X0
	0x026087F8 TBNZ X8, 0x0, 0x2608810
	0x026087FC ADRP X0, 0x1AEB000
	0x02608800 LDR X0, [X0 + 0x818]
	0x02608804 BL 0x1C16CF4
	0x02608808 MOVZ W8, 0x1
	0x0260880C STRB W8, [X20 + 0xFFB]
	0x02608810 LDR X19, [X19 + 0x60]
	0x02608814 CBZ X19, 0x2608884
	0x02608818 ADRP X10, 0x1AEB000
	0x0260881C LDR X8, [X19]
	0x02608820 LDR X10, [X10 + 0x818]
	0x02608824 LDRH W9, [X8 + 0x12E]
	0x02608828 LDR X1, [X10]
	0x0260882C CBZ X9, 0x2608850
	0x02608830 LDR X10, [X8 + 0xB0]
	0x02608834 ADD X10, X10, 0x8
	0x02608838 LDUR X11, [X10 - 0x8]
	0x0260883C CMP X11, X1
	0x02608840 B.EQ 0x2608860
	0x02608844 SUBS X9, X9, 0x1
	0x02608848 ADD X10, X10, 0x10
	0x0260884C B.NE 0x2608838
	0x02608850 MOVZ W2, 0x2
	0x02608854 MOV X0, X19
	0x02608858 BL 0x1C5C788
	0x0260885C B 0x2608870
	0x02608860 LDR W9, [X10]
	0x02608864 ADD W9, W9, 0x2
	0x02608868 ADD X8, X8, W9, 0x4, SXTW
	0x0260886C ADD X0, X8, 0x138
	0x02608870 LDP X2, X1, [X0]
	0x02608874 MOV X0, X19
	0x02608878 LDP X20, X19, [X31 + 0x10]
	0x0260887C LDR X30, [X31], #0x20
	0x02608880 BR X2
	0x02608884 BL 0x1C16F20
	0x02608888 STR X30, [X31 - 0x20]!
	0x0260888C STP X20, X19, [X31 + 0x10]
	0x02608890 ADRP X20, 0x1DD1000
	0x02608894 LDRB W8, [X20 + 0xFFC]
	0x02608898 MOV X19, X0
	0x0260889C TBNZ X8, 0x0, 0x26088B4
	0x026088A0 ADRP X0, 0x1AEB000
	0x026088A4 LDR X0, [X0 + 0x818]
	0x026088A8 BL 0x1C16CF4
	0x026088AC MOVZ W8, 0x1
	0x026088B0 STRB W8, [X20 + 0xFFC]
	0x026088B4 LDR X19, [X19 + 0x60]
	0x026088B8 CBZ X19, 0x2608928
	0x026088BC ADRP X10, 0x1AEB000
	0x026088C0 LDR X8, [X19]
	0x026088C4 LDR X10, [X10 + 0x818]
	0x026088C8 LDRH W9, [X8 + 0x12E]
	0x026088CC LDR X1, [X10]
	0x026088D0 CBZ X9, 0x26088F4
	0x026088D4 LDR X10, [X8 + 0xB0]
	0x026088D8 ADD X10, X10, 0x8
	0x026088DC LDUR X11, [X10 - 0x8]
	0x026088E0 CMP X11, X1
	0x026088E4 B.EQ 0x2608904
	0x026088E8 SUBS X9, X9, 0x1
	0x026088EC ADD X10, X10, 0x10
	0x026088F0 B.NE 0x26088DC
	0x026088F4 MOVZ W2, 0x3
	0x026088F8 MOV X0, X19
	0x026088FC BL 0x1C5C788
	0x02608900 B 0x2608914
	0x02608904 LDR W9, [X10]
	0x02608908 ADD W9, W9, 0x3
	0x0260890C ADD X8, X8, W9, 0x4, SXTW
	0x02608910 ADD X0, X8, 0x138
	0x02608914 LDP X2, X1, [X0]
	0x02608918 MOV X0, X19
	0x0260891C LDP X20, X19, [X31 + 0x10]
	0x02608920 LDR X30, [X31], #0x20
	0x02608924 BR X2
	0x02608928 BL 0x1C16F20
	0x0260892C STR X30, [X31 - 0x30]!
	0x02608930 STP X22, X21, [X31 + 0x10]
	0x02608934 STP X20, X19, [X31 + 0x20]
	0x02608938 LDR X20, [X0 + 0x60]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x1DD2000
	014 Move W8, [X22+4087]
	015 Move X20, X3
	016 Move W24, W2
	017 Move X19, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0x1AEC000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x1AEC000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move X0, 0x1AED000
	030 Move X0, [X0+432]
	031 Call 0x1C17CF4
	032 Move X0, 0x1AED000
	033 Move X0, [X0+1120]
	034 Call 0x1C17CF4
	035 Move X0, 0x1B14000
	036 Move X0, [X0+3008]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+4087], W8
	040 Move X8, [X20+32]
	041 Move X8, [X8+192]
	042 Move X0, [X8+544]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Call 0x1C17F10
	050 Move X8, [X20+32]
	051 Move X22, X0
	052 Move X8, [X8+192]
	053 Move X1, [X8+552]
	054 Call 0x237BB40, X0
	055 Compare X22, 0
	056 JumpIfEqual {333}
	057 Move X8, 0x1B14000
	058 Move X8, [X8+3008]
	059 Move [X22+16], X19
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X19, X0
	064 Call JSONObject..ctor, X0
	065 Compare X21, 0
	066 JumpIfEqual {333}
	067 Move X8, [X21]
	068 Move X0, X21
	069 Move X9, [X8+808]
	070 Move X1, [X8+816]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X0, 0
	073 JumpIfEqual {333}
	074 Move X8, [X20+32]
	075 Move X23, X0
	076 Move X9, [X8+192]
	077 Move X8, [X0]
	078 Move X25, [X9+560]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X25+32]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move X0, X23
	091 Call 0x1C5D788
	092 Move W9, [X10]
	093 Add W9, W9, W2
	094 Add X8, X8, W9
	095 Add X0, X8, 312
	096 Move X0, [X0+8]
	097 Move X1, X25
	098 Call 0x1C17DF8
	099 Move X8, [X0+8]
	100 Move X1, X0
	101 Move X0, X23
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, [X22+16]
	104 Move X21, [X21+96]
	105 Move X23, X0
	106 Compare X8, 0
	107 JumpIfEqual {132}
	108 Move X8, [X20+32]
	109 Move X8, [X8+192]
	110 Move X0, [X8+584]
	111 Move W8, [X0+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {117}
	116 Call 0x1C5D684
	117 Call 0x1C17F10
	118 Move X8, [X20+32]
	119 Move X1, X22
	120 Move X25, X0
	121 Move X8, [X8+192]
	122 Move X2, [X8+576]
	123 Move X3, [X8+592]
	124 Call Func`2<KeyValuePair`2<Int32, Object>, Boolean>..ctor, X0, X1, X2
	125 Move X8, [X20+32]
	126 Move X0, X21
	127 Move X1, X25
	128 Move X8, [X8+192]
	129 Move X2, [X8+600]
	130 Call Enumerable.Where, X0, X1
	131 Move X21, X0
	132 Compare X21, 0
	133 JumpIfEqual {333}
	134 Move X8, [X20+32]
	135 Move X8, [X8+192]
	136 Move X1, [X8+608]
	137 Move W8, [X1+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {145}
	142 Move X0, X1
	143 Call 0x1C5D684
	144 Move X1, X0
	145 Move X8, [X21]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X21
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X21, X0
	166 Compare X0, 0
	167 JumpIfEqual {334}
	168 Move X29, 0x1AEC000
	169 Move X28, 0x1AED000
	170 Move X29, [X29+3608]
	171 Move X28, [X28+432]
	172 And W24, W24, 1
	173 Move X8, [X21]
	174 Move X1, [X29]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Compare X9, 0
	177 JumpIfEqual {184}
	178 Move X10, [X8+176]
	179 Add X10, X10, 8
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Subtract X9, X9, 1
	183 Add X10, X10, 16
	184 Move X0, X21
	185 Move W2, W31
	186 Call 0x1C5D788
	187 NotImplemented "Instruction LDRSW not yet implemented."
	188 Add X8, X8, X9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X1, [X0+8]
	192 Move X0, X21
	193 NotImplemented "Instruction BLR not yet implemented."
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {286}
	198 Move X8, [X20+32]
	199 Move X8, [X8+192]
	200 Move X1, [X8+416]
	201 Move W8, [X1+309]
	202 Move TEMP, X8
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfEqual {209}
	206 Move X0, X1
	207 Call 0x1C5D684
	208 Move X1, X0
	209 Move X8, [X21]
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Compare X9, 0
	212 JumpIfEqual {219}
	213 Move X10, [X8+176]
	214 Add X10, X10, 8
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Add X10, X10, 16
	219 Move X0, X21
	220 Move W2, W31
	221 Call 0x1C5D788
	222 NotImplemented "Instruction LDRSW not yet implemented."
	223 Add X8, X8, X9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X21
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Compare X23, 0
	230 JumpIfEqual {331}
	231 Move X3, X0
	232 Move X0, [X23+64]
	233 Move X8, [X23+24]
	234 Move X2, [X23+40]
	235 Move X25, X1
	236 Move W1, W3
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X8, 0x1AED000
	239 Move X8, [X8+1120]
	240 Move X26, X0
	241 Move X0, [X8]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X0, X26
	247 Move X1, X31
	248 Call JSONNode.op_Implicit, X0
	249 Compare X25, 0
	250 JumpIfEqual {332}
	251 Move X8, [X25]
	252 Move X27, [X22+16]
	253 Move X1, [X28]
	254 Move X26, X0
	255 NotImplemented "Instruction LDRH not yet implemented."
	256 Compare X9, 0
	257 JumpIfEqual {264}
	258 Move X10, [X8+176]
	259 Add X10, X10, 8
	260 NotImplemented "Instruction LDUR not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Subtract X9, X9, 1
	263 Add X10, X10, 16
	264 Move W2, 18
	265 Move X0, X25
	266 Call 0x1C5D788
	267 Move W9, [X10]
	268 Add W9, W9, 18
	269 Add X8, X8, W9
	270 Add X0, X8, 312
	271 Move X8, [X0]
	272 Move X3, [X0+8]
	273 Move X0, X25
	274 Move X1, X27
	275 Move W2, W24
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Compare X19, 0
	278 JumpIfEqual {330}
	279 Move X8, [X19]
	280 Move X2, X0
	281 Move X9, [X8+632]
	282 Move X3, [X8+640]
	283 Move X0, X19
	284 Move X1, X26
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move X20, X31
	287 Move W22, 6
	288 Compare X21, 0
	289 JumpIfEqual {313}
	290 Move X8, [X21]
	291 Move X10, 0x1AEC000
	292 NotImplemented "Instruction LDRH not yet implemented."
	293 Move X10, [X10+3584]
	294 Move X1, [X10]
	295 Compare X9, 0
	296 JumpIfEqual {303}
	297 Move X10, [X8+176]
	298 Add X10, X10, 8
	299 NotImplemented "Instruction LDUR not yet implemented."
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Subtract X9, X9, 1
	302 Add X10, X10, 16
	303 Move X0, X21
	304 Move W2, W31
	305 Call 0x1C5D788
	306 NotImplemented "Instruction LDRSW not yet implemented."
	307 Add X8, X8, X9
	308 Add X0, X8, 312
	309 Move X8, [X0]
	310 Move X1, [X0+8]
	311 Move X0, X21
	312 NotImplemented "Instruction BLR not yet implemented."
	313 Compare X20, 0
	314 JumpIfNotEqual {335}
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X0, X19
	317 Move X20, [X31+80]
	318 Move X19, [X31+88]
	319 Move X22, [X31+64]
	320 Move X21, [X31+72]
	321 Move X24, [X31+48]
	322 Move X23, [X31+56]
	323 Move X26, [X31+32]
	324 Move X25, [X31+40]
	325 Move X28, [X31+16]
	326 Move X27, [X31+24]
	327 Move X29, [X31+96]
	328 Move X30, [X31+104]
	329 Return X0
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Call 0x1C17F20
	333 Call 0x1C17F20
	334 Call 0x1C17F20
	335 Move X0, X20
	336 Call 0x1C17F18
	337 Move X22, X0
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move X0, X22
	340 Call 0x3EB2AD0
	341 Move X20, [X0]
	342 Call 0x3EB2AE0
	343 Move W22, W31
	344 Compare X21, 0
	345 JumpIfNotEqual {290}
	346 Move X20, X31
	347 Move X22, X0
	348 Compare X21, 0
	349 JumpIfEqual {373}
	350 Move X8, [X21]
	351 Move X10, 0x1AEC000
	352 NotImplemented "Instruction LDRH not yet implemented."
	353 Move X10, [X10+3584]
	354 Move X1, [X10]
	355 Compare X9, 0
	356 JumpIfEqual {363}
	357 Move X10, [X8+176]
	358 Add X10, X10, 8
	359 NotImplemented "Instruction LDUR not yet implemented."
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Subtract X9, X9, 1
	362 Add X10, X10, 16
	363 Move X0, X21
	364 Move W2, W31
	365 Call 0x1C5D788
	366 NotImplemented "Instruction LDRSW not yet implemented."
	367 Add X8, X8, X9
	368 Add X0, X8, 312
	369 Move X8, [X0]
	370 Move X1, [X0+8]
	371 Move X0, X21
	372 NotImplemented "Instruction BLR not yet implemented."
	373 Compare X20, 0
	374 JumpIfNotEqual {377}
	375 Move X0, X22
	376 Call 0x1D2D690
	377 Move X0, X20
	378 Call 0x1C17F18
	379 Call 0x1991590

Method: System.Void FromJSON(SimpleJSON.JSONNode json)

Disassembly:
	0x0260893C CBZ X20, 0x26089B0
	0x02608940 LDR X8, [X2 + 0x20]
	0x02608944 MOV X19, X2
	0x02608948 MOV X21, X1
	0x0260894C LDR X8, [X8 + 0xC0]
	0x02608950 LDR X22, [X8 + 0x28]
	0x02608954 LDRB W8, [X22 + 0x135]
	0x02608958 TBNZ X8, 0x0, 0x2608968
	0x0260895C MOV X0, X22
	0x02608960 BL 0x1C5C684
	0x02608964 MOV X22, X0
	0x02608968 CBZ X21, 0x260898C
	0x0260896C MOV X0, X21
	0x02608970 MOV X1, X22
	0x02608974 BL 0x1C16E00
	0x02608978 MOV X1, X0
	0x0260897C CBNZ X0, 0x2608990
	0x02608980 MOV X0, X21
	0x02608984 MOV X1, X22
	0x02608988 BL 0x1C171E0
	0x0260898C MOV X1, X31
	0x02608990 LDR X8, [X19 + 0x20]
	0x02608994 MOV X0, X20
	0x02608998 LDP X20, X19, [X31 + 0x20]
	0x0260899C LDP X22, X21, [X31 + 0x10]
	0x026089A0 LDR X8, [X8 + 0xC0]
	0x026089A4 LDR X2, [X8 + 0x30]
	0x026089A8 LDR X30, [X31], #0x30
	0x026089AC B 0x2AA5018
	0x026089B0 BL 0x1C16F20
	0x026089B4 STR X30, [X31 - 0x10]!
	0x026089B8 LDR X0, [X0 + 0x60]
	0x026089BC CBZ X0, 0x26089D4
	0x026089C0 LDR X8, [X2 + 0x20]
	0x026089C4 LDR X8, [X8 + 0xC0]
	0x026089C8 LDR X2, [X8 + 0x30]
	0x026089CC LDR X30, [X31], #0x10
	0x026089D0 B 0x2AA5018
	0x026089D4 BL 0x1C16F20
	0x026089D8 STR X30, [X31 - 0x30]!
	0x026089DC STP X22, X21, [X31 + 0x10]
	0x026089E0 STP X20, X19, [X31 + 0x20]
	0x026089E4 ADRP X22, 0x1DD1000
	0x026089E8 ADRP X21, 0x1AEB000
	0x026089EC LDRB W8, [X22 + 0xFFD]
	0x026089F0 LDR X21, [X21 + 0x6C0]
	0x026089F4 MOV X20, X1
	0x026089F8 MOV X19, X0
	0x026089FC TBNZ X8, 0x0, 0x2608A20
	0x02608A00 ADRP X0, 0x1B15000
	0x02608A04 LDR X0, [X0 + 0x310]
	0x02608A08 BL 0x1C16CF4
	0x02608A0C ADRP X0, 0x1AEB000
	0x02608A10 LDR X0, [X0 + 0x6C0]
	0x02608A14 BL 0x1C16CF4
	0x02608A18 MOVZ W8, 0x1
	0x02608A1C STRB W8, [X22 + 0xFFD]
	0x02608A20 LDR X8, [X20 + 0x20]
	0x02608A24 LDR X0, [X21]
	0x02608A28 LDR X8, [X8 + 0xC0]
	0x02608A2C LDR W9, [X0 + 0xE0]
	0x02608A30 LDR X21, [X8 + 0x60]
	0x02608A34 CBNZ W9, 0x2608A3C
	0x02608A38 BL 0x1C16DFC
	0x02608A3C MOV X0, X21
	0x02608A40 MOV X1, X31
	0x02608A44 BL 0x338C698
	0x02608A48 STR X0, [X19 + 0x40]
	0x02608A4C LDR X8, [X20 + 0x20]
	0x02608A50 MOV X1, X31
	0x02608A54 LDR X8, [X8 + 0xC0]
	0x02608A58 LDR X0, [X8 + 0x68]
	0x02608A5C BL 0x338C698
	0x02608A60 STR X0, [X19 + 0x50]
	0x02608A64 LDR X8, [X20 + 0x20]
	0x02608A68 LDR X8, [X8 + 0xC0]
	0x02608A6C LDR X0, [X8 + 0x80]
	0x02608A70 LDRB W8, [X0 + 0x135]
	0x02608A74 TBNZ X8, 0x0, 0x2608A7C
	0x02608A78 BL 0x1C5C684
	0x02608A7C LDR W8, [X0 + 0xE0]
	0x02608A80 CBNZ W8, 0x2608A88
	0x02608A84 BL 0x1C16DFC
	0x02608A88 LDR X8, [X20 + 0x20]
	0x02608A8C LDR X8, [X8 + 0xC0]
	0x02608A90 LDR X0, [X8 + 0x80]
	0x02608A94 LDRB W8, [X0 + 0x135]
	0x02608A98 TBNZ X8, 0x0, 0x2608AA0
	0x02608A9C BL 0x1C5C684
	0x02608AA0 LDR X8, [X0 + 0xB8]
	0x02608AA4 LDR X21, [X8 + 0x8]
	0x02608AA8 CBNZ X21, 0x2608B68
	0x02608AAC LDR X8, [X20 + 0x20]
	0x02608AB0 LDR X8, [X8 + 0xC0]
	0x02608AB4 LDR X0, [X8 + 0x80]
	0x02608AB8 LDRB W8, [X0 + 0x135]
	0x02608ABC TBNZ X8, 0x0, 0x2608AC4
	0x02608AC0 BL 0x1C5C684
	0x02608AC4 LDR W8, [X0 + 0xE0]
	0x02608AC8 CBNZ W8, 0x2608AD0
	0x02608ACC BL 0x1C16DFC
	0x02608AD0 LDR X8, [X20 + 0x20]
	0x02608AD4 LDR X8, [X8 + 0xC0]
	0x02608AD8 LDR X0, [X8 + 0x80]
	0x02608ADC LDRB W9, [X0 + 0x135]
	0x02608AE0 TBNZ X9, 0x0, 0x2608AF0
	0x02608AE4 BL 0x1C5C684
	0x02608AE8 LDR X8, [X20 + 0x20]
	0x02608AEC LDR X8, [X8 + 0xC0]
	0x02608AF0 LDR X8, [X8 + 0x78]
	0x02608AF4 LDR X9, [X0 + 0xB8]
	0x02608AF8 LDRB W10, [X8 + 0x135]
	0x02608AFC LDR X22, [X9]
	0x02608B00 TBNZ X10, 0x0, 0x2608B10
	0x02608B04 MOV X0, X8
	0x02608B08 BL 0x1C5C684
	0x02608B0C MOV X8, X0
	0x02608B10 MOV X0, X8
	0x02608B14 BL 0x1C16F10
	0x02608B18 LDR X8, [X20 + 0x20]
	0x02608B1C MOV X1, X22
	0x02608B20 MOV X21, X0
	0x02608B24 LDR X8, [X8 + 0xC0]
	0x02608B28 LDP X2, X3, [X8 + 0x88]
	0x02608B2C BL 0x2D27AA8
	0x02608B30 LDR X8, [X20 + 0x20]
	0x02608B34 LDR X8, [X8 + 0xC0]
	0x02608B38 LDR X0, [X8 + 0x80]
	0x02608B3C LDRB W9, [X0 + 0x135]
	0x02608B40 TBNZ X9, 0x0, 0x2608B50
	0x02608B44 BL 0x1C5C684
	0x02608B48 LDR X8, [X20 + 0x20]
	0x02608B4C LDR X8, [X8 + 0xC0]
	0x02608B50 LDR X9, [X0 + 0xB8]
	0x02608B54 STR X21, [X9 + 0x8]
	0x02608B58 LDR X0, [X8 + 0x80]
	0x02608B5C LDRB W8, [X0 + 0x135]
	0x02608B60 TBNZ X8, 0x0, 0x2608B68
	0x02608B64 BL 0x1C5C684
	0x02608B68 STR X21, [X19 + 0x58]
	0x02608B6C LDR X8, [X20 + 0x20]
	0x02608B70 ADRP X21, 0x1B15000
	0x02608B74 LDR X8, [X8 + 0xC0]
	0x02608B78 LDR X0, [X8 + 0x8]
	0x02608B7C LDRB W8, [X0 + 0x135]
	0x02608B80 LDR X21, [X21 + 0x310]
	0x02608B84 TBNZ X8, 0x0, 0x2608B8C
	0x02608B88 BL 0x1C5C684
	0x02608B8C BL 0x1C16F10
	0x02608B90 LDR X8, [X20 + 0x20]
	0x02608B94 MOV X20, X0
	0x02608B98 LDR X8, [X8 + 0xC0]
	0x02608B9C LDR X1, [X8 + 0x98]
	0x02608BA0 BL 0x2AA4804
	0x02608BA4 STR X20, [X19 + 0x60]
	0x02608BA8 LDR X0, [X21]
	0x02608BAC LDR W8, [X0 + 0xE0]
	0x02608BB0 CBNZ W8, 0x2608BB8
	0x02608BB4 BL 0x1C16DFC
	0x02608BB8 MOV X0, X19
	0x02608BBC LDP X20, X19, [X31 + 0x20]
	0x02608BC0 LDP X22, X21, [X31 + 0x10]
	0x02608BC4 MOV X1, X31
	0x02608BC8 LDR X30, [X31], #0x30
	0x02608BCC B 0x35CDA2C
	0x02608BD0 STR X30, [X31 - 0x40]!
	0x02608BD4 STP X24, X23, [X31 + 0x10]
	0x02608BD8 STP X22, X21, [X31 + 0x20]
	0x02608BDC STP X20, X19, [X31 + 0x30]
	0x02608BE0 ADRP X24, 0x1DD1000
	0x02608BE4 ADRP X23, 0x1AEB000
	0x02608BE8 LDRB W8, [X24 + 0xFFE]
	0x02608BEC LDR X23, [X23 + 0x6C0]
	0x02608BF0 MOV X22, X3
	0x02608BF4 MOV X19, X2
	0x02608BF8 MOV X20, X1
	0x02608BFC MOV X21, X0
	0x02608C00 TBNZ X8, 0x0, 0x2608C24
	0x02608C04 ADRP X0, 0x1B15000
	0x02608C08 LDR X0, [X0 + 0x310]
	0x02608C0C BL 0x1C16CF4
	0x02608C10 ADRP X0, 0x1AEB000
	0x02608C14 LDR X0, [X0 + 0x6C0]
	0x02608C18 BL 0x1C16CF4
	0x02608C1C MOVZ W8, 0x1
	0x02608C20 STRB W8, [X24 + 0xFFE]
	0x02608C24 LDR X8, [X22 + 0x20]
	0x02608C28 LDR X0, [X23]
	0x02608C2C LDR X8, [X8 + 0xC0]
	0x02608C30 LDR W9, [X0 + 0xE0]
	0x02608C34 LDR X23, [X8 + 0x60]
	0x02608C38 CBNZ W9, 0x2608C40
	0x02608C3C BL 0x1C16DFC
	0x02608C40 MOV X0, X23
	0x02608C44 MOV X1, X31
	0x02608C48 BL 0x338C698
	0x02608C4C STR X0, [X21 + 0x40]
	0x02608C50 LDR X8, [X22 + 0x20]
	0x02608C54 MOV X1, X31
	0x02608C58 LDR X8, [X8 + 0xC0]
	0x02608C5C LDR X0, [X8 + 0x68]
	0x02608C60 BL 0x338C698
	0x02608C64 STR X0, [X21 + 0x50]
	0x02608C68 LDR X8, [X22 + 0x20]
	0x02608C6C LDR X8, [X8 + 0xC0]
	0x02608C70 LDR X0, [X8 + 0x80]
	0x02608C74 LDRB W8, [X0 + 0x135]
	0x02608C78 TBNZ X8, 0x0, 0x2608C80
	0x02608C7C BL 0x1C5C684
	0x02608C80 LDR W8, [X0 + 0xE0]
	0x02608C84 CBNZ W8, 0x2608C8C
	0x02608C88 BL 0x1C16DFC
	0x02608C8C LDR X8, [X22 + 0x20]
	0x02608C90 LDR X8, [X8 + 0xC0]
	0x02608C94 LDR X0, [X8 + 0x80]
	0x02608C98 LDRB W8, [X0 + 0x135]
	0x02608C9C TBNZ X8, 0x0, 0x2608CA4
	0x02608CA0 BL 0x1C5C684
	0x02608CA4 LDR X8, [X0 + 0xB8]
	0x02608CA8 LDR X23, [X8 + 0x10]
	0x02608CAC CBNZ X23, 0x2608D70
	0x02608CB0 LDR X8, [X22 + 0x20]
	0x02608CB4 LDR X8, [X8 + 0xC0]
	0x02608CB8 LDR X0, [X8 + 0x80]
	0x02608CBC LDRB W8, [X0 + 0x135]
	0x02608CC0 TBNZ X8, 0x0, 0x2608CC8
	0x02608CC4 BL 0x1C5C684
	0x02608CC8 LDR W8, [X0 + 0xE0]
	0x02608CCC CBNZ W8, 0x2608CD4
	0x02608CD0 BL 0x1C16DFC
	0x02608CD4 LDR X8, [X22 + 0x20]
	0x02608CD8 LDR X8, [X8 + 0xC0]
	0x02608CDC LDR X0, [X8 + 0x80]
	0x02608CE0 LDRB W9, [X0 + 0x135]
	0x02608CE4 TBNZ X9, 0x0, 0x2608CF4
	0x02608CE8 BL 0x1C5C684
	0x02608CEC LDR X8, [X22 + 0x20]
	0x02608CF0 LDR X8, [X8 + 0xC0]
	0x02608CF4 LDR X8, [X8 + 0x78]
	0x02608CF8 LDR X9, [X0 + 0xB8]
	0x02608CFC LDRB W10, [X8 + 0x135]
	0x02608D00 LDR X24, [X9]
	0x02608D04 TBNZ X10, 0x0, 0x2608D14
	0x02608D08 MOV X0, X8
	0x02608D0C BL 0x1C5C684
	0x02608D10 MOV X8, X0
	0x02608D14 MOV X0, X8
	0x02608D18 BL 0x1C16F10
	0x02608D1C LDR X8, [X22 + 0x20]
	0x02608D20 MOV X1, X24
	0x02608D24 MOV X23, X0
	0x02608D28 LDR X8, [X8 + 0xC0]
	0x02608D2C LDR X2, [X8 + 0xA0]
	0x02608D30 LDR X3, [X8 + 0x90]
	0x02608D34 BL 0x2D27AA8
	0x02608D38 LDR X8, [X22 + 0x20]
	0x02608D3C LDR X8, [X8 + 0xC0]
	0x02608D40 LDR X0, [X8 + 0x80]
	0x02608D44 LDRB W9, [X0 + 0x135]
	0x02608D48 TBNZ X9, 0x0, 0x2608D58
	0x02608D4C BL 0x1C5C684
	0x02608D50 LDR X8, [X22 + 0x20]
	0x02608D54 LDR X8, [X8 + 0xC0]
	0x02608D58 LDR X9, [X0 + 0xB8]
	0x02608D5C STR X23, [X9 + 0x10]
	0x02608D60 LDR X0, [X8 + 0x80]
	0x02608D64 LDRB W8, [X0 + 0x135]
	0x02608D68 TBNZ X8, 0x0, 0x2608D70
	0x02608D6C BL 0x1C5C684
	0x02608D70 STR X23, [X21 + 0x58]
	0x02608D74 LDR X8, [X22 + 0x20]
	0x02608D78 ADRP X23, 0x1B15000
	0x02608D7C LDR X8, [X8 + 0xC0]
	0x02608D80 LDR X0, [X8 + 0x8]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+176], X26
	004 Move [X31+184], X25
	005 Move [X31+192], X24
	006 Move [X31+200], X23
	007 Move [X31+208], X22
	008 Move [X31+216], X21
	009 Move [X31+224], X20
	010 Move [X31+232], X19
	011 Move X21, 0x1DD2000
	012 Move W8, [X21+4088]
	013 Move X19, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x1AED000
	021 Move X0, [X0+432]
	022 Call 0x1C17CF4
	023 Move X0, 0x1AED000
	024 Move X0, [X0+1120]
	025 Call 0x1C17CF4
	026 Move X0, 0x1B16000
	027 Move X0, [X0+832]
	028 Call 0x1C17CF4
	029 Move X0, 0x1B16000
	030 Move X0, [X0+840]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+4088], W8
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+144], X31
	036 Move [X31+112], V0
	037 Move [X31+120], V0
	038 Move [X31+80], V0
	039 Move [X31+88], V0
	040 Move [X31+168], X31
	041 Move X8, [X19+32]
	042 Move X8, [X8+192]
	043 Move X0, [X8+648]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Call 0x1C17F10
	051 Move X8, [X19+32]
	052 Move X21, X0
	053 Move X8, [X8+192]
	054 Move X1, [X8+656]
	055 Call 0x237BC78, X0
	056 Compare X22, 0
	057 JumpIfEqual {296}
	058 Move X8, [X22]
	059 Move X0, X22
	060 Move X9, [X8+584]
	061 Move X1, [X8+592]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {298}
	067 Move X8, [X19+32]
	068 Move X8, [X8+192]
	069 Move X0, [X8+464]
	070 Move W8, [X0+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Call 0x1C17F10
	077 Move X8, [X19+32]
	078 Move X23, X0
	079 Move X8, [X8+192]
	080 Move X1, [X8+472]
	081 Call HashSet`1<Int32>..ctor, X0
	082 Compare X21, 0
	083 JumpIfEqual {296}
	084 Move [X21+16], X23
	085 Compare X20, 0
	086 JumpIfEqual {296}
	087 Move X8, [X20]
	088 Move X0, X20
	089 Move X9, [X8+808]
	090 Move X1, [X8+816]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X0, 0
	093 JumpIfEqual {296}
	094 Move X8, [X19+32]
	095 Move X23, X0
	096 Move X9, [X8+192]
	097 Move X8, [X0]
	098 Move X24, [X9+664]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Move X1, [X24+32]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X23
	111 Call 0x1C5D788
	112 Move W9, [X10]
	113 Add W9, W9, W2
	114 Add X8, X8, W9
	115 Add X0, X8, 312
	116 Move X0, [X0+8]
	117 Move X1, X24
	118 Call 0x1C17DF8
	119 Move X8, [X0+8]
	120 Move X1, X0
	121 Move X0, X23
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X8, [X22]
	124 Move X23, X0
	125 Move X0, X22
	126 Move X9, [X8+824]
	127 Move X1, [X8+832]
	128 Add X8, X31, 8
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Add X0, X31, 80
	131 Add X1, X31, 8
	132 Move W2, 72
	133 Call 0x3EB2AC0
	134 Add X0, X31, 80
	135 Move X1, X31
	136 Call Enumerator.MoveNext, X0
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {229}
	141 Move X25, 0x1AED000
	142 Move X26, 0x1AED000
	143 Move X25, [X25+1120]
	144 Move X26, [X26+432]
	145 Add X0, X31, 80
	146 Move X1, X31
	147 Call Enumerator.get_Current, X0
	148 Move X24, X0
	149 Move X0, [X25]
	150 Move X22, X1
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, X24
	156 Move X1, X31
	157 Call JSONNode.op_Implicit, X0
	158 Compare X23, 0
	159 JumpIfEqual {296}
	160 Move X1, X0
	161 Move X8, [X23+24]
	162 Move X0, [X23+64]
	163 Move X2, [X23+40]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X8, [X21+16]
	166 Compare X8, 0
	167 JumpIfEqual {296}
	168 Move X9, [X19+32]
	169 Move W24, W0
	170 Move X0, X8
	171 Move W1, W24
	172 Move X9, [X9+192]
	173 Move X2, [X9+480]
	174 Call HashSet`1<Int32>.Add, X0, X1
	175 Move X0, [X20+96]
	176 Compare X0, 0
	177 JumpIfEqual {296}
	178 Move X8, [X19+32]
	179 Add X2, X31, 168
	180 Move W1, W24
	181 Move X8, [X8+192]
	182 Move X3, [X8+424]
	183 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {189}
	188 Move X24, [X31+168]
	189 Move X8, [X19+32]
	190 Move X0, X20
	191 Move W1, W24
	192 Move X8, [X8+192]
	193 Move X2, [X8+208]
	194 Call 0x26076A0, X0, X1
	195 Move X24, X0
	196 Move [X31+168], X0
	197 Compare X24, 0
	198 JumpIfEqual {296}
	199 Move X8, [X24]
	200 Move X1, [X26]
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move W2, 19
	211 Move X0, X24
	212 Call 0x1C5D788
	213 Move W9, [X10]
	214 Add W9, W9, 19
	215 Add X8, X8, W9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X2, [X0+8]
	219 Move X0, X24
	220 Move X1, X22
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Add X0, X31, 80
	223 Move X1, X31
	224 Call Enumerator.MoveNext, X0
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {145}
	229 Move X0, [X20+96]
	230 Compare X0, 0
	231 JumpIfEqual {296}
	232 Move X8, [X19+32]
	233 Move X8, [X8+192]
	234 Move X1, [X8+80]
	235 Call Dictionary`2<Int32, Object>.get_Keys, X0
	236 Move X8, [X19+32]
	237 Move X22, X0
	238 Move X8, [X8+192]
	239 Move X8, [X8+704]
	240 Move W9, [X8+309]
	241 Move TEMP, X9
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfEqual {248}
	245 Move X0, X8
	246 Call 0x1C5D684
	247 Move X8, X0
	248 Move X0, X8
	249 Call 0x1C17F10
	250 Move X8, [X19+32]
	251 Move X1, X21
	252 Move X23, X0
	253 Move X8, [X8+192]
	254 Move X2, [X8+696]
	255 Move X3, [X8+712]
	256 Call Func`2<Int32, Boolean>..ctor, X0, X1, X2
	257 Move X8, [X19+32]
	258 Move X0, X22
	259 Move X1, X23
	260 Move X8, [X8+192]
	261 Move X2, [X8+720]
	262 Call Enumerable.Where, X0, X1
	263 Move X8, [X19+32]
	264 Move X8, [X8+192]
	265 Move X1, [X8+736]
	266 Call Enumerable.ToArray, X0
	267 Compare X0, 0
	268 JumpIfEqual {296}
	269 Move X8, [X0+24]
	270 Move X21, X0
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X22, X31
	273 And X8, X8, 0
	274 Add X23, X21, 32
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X8, [X19+32]
	277 Move W1, [X23]
	278 Move X0, X20
	279 Move X8, [X8+192]
	280 Move X2, [X8+216]
	281 Call 0x2607EA8, X0, X1
	282 Move W8, [X21+24]
	283 Add X22, X22, 1
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X20, [X31+224]
	286 Move X19, [X31+232]
	287 Move X22, [X31+208]
	288 Move X21, [X31+216]
	289 Move X24, [X31+192]
	290 Move X23, [X31+200]
	291 Move X26, [X31+176]
	292 Move X25, [X31+184]
	293 Move X30, [X31+160]
	294 Add X31, X31, 240
	295 Return 
	296 Call 0x1C17F20
	297 Call 0x1C17F28
	298 Move X0, 0x1AF4000
	299 Move X0, [X0+3080]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0x1B16000
	304 Move X0, [X0+848]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call InvalidCastException..ctor, X0, X1
	310 Move X0, X20
	311 Move X1, X19
	312 Call 0x1C17DEC

Method: System.Boolean TryFindChild(System.Object childObjectKey, out SpatialSys.ObservableState.IStateObject result)

Disassembly:
	0x02608D84 LDRB W8, [X0 + 0x135]
	0x02608D88 LDR X23, [X23 + 0x310]
	0x02608D8C TBNZ X8, 0x0, 0x2608D94
	0x02608D90 BL 0x1C5C684
	0x02608D94 BL 0x1C16F10
	0x02608D98 LDR X8, [X22 + 0x20]
	0x02608D9C MOV X22, X0
	0x02608DA0 LDR X8, [X8 + 0xC0]
	0x02608DA4 LDR X1, [X8 + 0x98]
	0x02608DA8 BL 0x2AA4804
	0x02608DAC STR X22, [X21 + 0x60]
	0x02608DB0 LDR X0, [X23]
	0x02608DB4 LDR W8, [X0 + 0xE0]
	0x02608DB8 CBNZ W8, 0x2608DC0
	0x02608DBC BL 0x1C16DFC
	0x02608DC0 MOV X0, X21
	0x02608DC4 MOV X1, X20
	0x02608DC8 MOV X2, X19
	0x02608DCC LDP X20, X19, [X31 + 0x30]
	0x02608DD0 LDP X22, X21, [X31 + 0x20]
	0x02608DD4 LDP X24, X23, [X31 + 0x10]
	0x02608DD8 MOV X3, X31
	0x02608DDC LDR X30, [X31], #0x40
	0x02608DE0 B 0x35CDABC
	0x02608DE4 STP X30, X23, [X31 - 0x30]!
	0x02608DE8 STP X22, X21, [X31 + 0x10]
	0x02608DEC STP X20, X19, [X31 + 0x20]
	0x02608DF0 ADRP X23, 0x1DD1000
	0x02608DF4 LDRB W8, [X23 + 0xFFF]
	0x02608DF8 MOV W22, W3
	0x02608DFC MOV X20, X2
	0x02608E00 MOV X21, X1
	0x02608E04 MOV X19, X0
	0x02608E08 TBNZ X8, 0x0, 0x2608E2C
	0x02608E0C ADRP X0, 0x1B15000
	0x02608E10 LDR X0, [X0 + 0x318]
	0x02608E14 BL 0x1C16CF4
	0x02608E18 ADRP X0, 0x1B15000
	0x02608E1C LDR X0, [X0 + 0x320]
	0x02608E20 BL 0x1C16CF4
	0x02608E24 MOVZ W8, 0x1
	0x02608E28 STRB W8, [X23 + 0xFFF]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move X20, [X0+96]
	008 Compare X20, 0
	009 JumpIfEqual {49}
	010 Move X8, [X3+32]
	011 Move X22, X1
	012 Move X21, X3
	013 Move X19, X2
	014 Move X8, [X8+192]
	015 Move X1, [X8+40]
	016 Move W8, [X1+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X1
	022 Call 0x1C5D684
	023 Move X1, X0
	024 Compare X22, 0
	025 JumpIfEqual {49}
	026 Move X8, [X22]
	027 Move X9, [X1+64]
	028 Move X0, X22
	029 Move X8, [X8+64]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Call 0x1C17E08
	032 Move X8, [X21+32]
	033 Move W1, [X0]
	034 Add X2, X31, 8
	035 Move X0, X20
	036 Move X8, [X8+192]
	037 Move X3, [X8+424]
	038 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	039 Move X8, [X31+8]
	040 And W0, W0, 1
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move [X19], X8
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X30, [X31+48]
	048 Return X0
	049 Call 0x1C17F20
	050 Call 0x1C181E0

Method: System.Boolean TryFindChild(TKey key, out SpatialSys.ObservableState.IStateObject child)

Disassembly:
	0x02608E2C CBZ X19, 0x2608F3C
	0x02608E30 AND W3, W22, 0x1
	0x02608E34 MOV X0, X19
	0x02608E38 MOV X1, X21
	0x02608E3C MOV X2, X20
	0x02608E40 MOV X4, X31
	0x02608E44 BL 0x35CDD8C
	0x02608E48 LDR X20, [X19 + 0x30]
	0x02608E4C CBZ X20, 0x2608F3C
	0x02608E50 ADRP X10, 0x1B15000
	0x02608E54 LDR X8, [X20]
	0x02608E58 LDR X10, [X10 + 0x318]
	0x02608E5C LDRH W9, [X8 + 0x12E]
	0x02608E60 LDR X1, [X10]
	0x02608E64 CBZ X9, 0x2608E88
	0x02608E68 LDR X10, [X8 + 0xB0]
	0x02608E6C ADD X10, X10, 0x8
	0x02608E70 LDUR X11, [X10 - 0x8]
	0x02608E74 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move [X31+8], X31
	005 Move X0, [X0+96]
	006 Compare X0, 0
	007 JumpIfEqual {22}
	008 Move X8, [X3+32]
	009 Move X19, X2
	010 Add X2, X31, 8
	011 Move X8, [X8+192]
	012 Move X3, [X8+424]
	013 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	014 Move X8, [X31+8]
	015 And W0, W0, 1
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 Move [X19], X8
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Add X31, X31, 32
	021 Return X0
	022 Call 0x1C17F20

Method: System.Void Reset(System.Boolean recursively = True)

Disassembly:
	0x02608E78 B.EQ 0x2608E98
	0x02608E7C SUBS X9, X9, 0x1
	0x02608E80 ADD X10, X10, 0x10
	0x02608E84 B.NE 0x2608E70

ISIL:
	001 Move X8, [X2+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+752]
	004 Call 0x2607A4C, X0
	005 Return 

Method: System.Void CopyTo(SpatialSys.ObservableState.IStateObject other)

Disassembly:
	0x02608E88 MOVZ W2, 0x1
	0x02608E8C MOV X0, X20
	0x02608E90 BL 0x1C5C788
	0x02608E94 B 0x2608EA8
	0x02608E98 LDR W9, [X10]
	0x02608E9C ADD W9, W9, 0x1
	0x02608EA0 ADD X8, X8, W9, 0x4, SXTW
	0x02608EA4 ADD X0, X8, 0x138
	0x02608EA8 LDP X8, X1, [X0]
	0x02608EAC MOV X0, X20
	0x02608EB0 BLR X8
	0x02608EB4 CBZ X0, 0x2608F3C
	0x02608EB8 ADRP X10, 0x1B15000
	0x02608EBC LDR X8, [X0]
	0x02608EC0 LDR X10, [X10 + 0x320]
	0x02608EC4 LDR X21, [X19 + 0x40]
	0x02608EC8 MOV X20, X0
	0x02608ECC LDRH W9, [X8 + 0x12E]
	0x02608ED0 LDR X1, [X10]
	0x02608ED4 CBZ X9, 0x2608EF8
	0x02608ED8 LDR X10, [X8 + 0xB0]
	0x02608EDC ADD X10, X10, 0x8
	0x02608EE0 LDUR X11, [X10 - 0x8]
	0x02608EE4 CMP X11, X1
	0x02608EE8 B.EQ 0x2608F08
	0x02608EEC SUBS X9, X9, 0x1
	0x02608EF0 ADD X10, X10, 0x10
	0x02608EF4 B.NE 0x2608EE0
	0x02608EF8 MOVZ W2, 0x4
	0x02608EFC MOV X0, X20
	0x02608F00 BL 0x1C5C788
	0x02608F04 B 0x2608F18
	0x02608F08 LDR W9, [X10]
	0x02608F0C ADD W9, W9, 0x4
	0x02608F10 ADD X8, X8, W9, 0x4, SXTW
	0x02608F14 ADD X0, X8, 0x138
	0x02608F18 LDP X8, X2, [X0]
	0x02608F1C MOV X0, X20
	0x02608F20 MOV X1, X21
	0x02608F24 BLR X8
	0x02608F28 STR W0, [X19 + 0x48]
	0x02608F2C LDP X20, X19, [X31 + 0x20]
	0x02608F30 LDP X22, X21, [X31 + 0x10]
	0x02608F34 LDP X30, X23, [X31], #0x30
	0x02608F38 RET
	0x02608F3C BL 0x1C16F20
	0x02608F40 STR X1, [X0 + 0x58]
	0x02608F44 RET
	0x02608F48 STR X30, [X31 - 0x30]!
	0x02608F4C STP X22, X21, [X31 + 0x10]
	0x02608F50 STP X20, X19, [X31 + 0x20]
	0x02608F54 ADRP X22, 0x1DD2000
	0x02608F58 LDRB W8, [X22]
	0x02608F5C MOV X19, X2
	0x02608F60 MOV X20, X1
	0x02608F64 MOV X21, X0
	0x02608F68 TBNZ X8, 0x0, 0x2608F80
	0x02608F6C ADRP X0, 0x1AEB000
	0x02608F70 LDR X0, [X0 + 0x750]
	0x02608F74 BL 0x1C16CF4
	0x02608F78 MOVZ W8, 0x1
	0x02608F7C STRB W8, [X22]
	0x02608F80 CBZ X20, 0x260912C
	0x02608F84 ADRP X10, 0x1AEB000
	0x02608F88 LDR X8, [X20]
	0x02608F8C LDR X10, [X10 + 0x750]
	0x02608F90 LDRH W9, [X8 + 0x12E]
	0x02608F94 LDR X1, [X10]
	0x02608F98 CBZ X9, 0x2608FBC
	0x02608F9C LDR X10, [X8 + 0xB0]
	0x02608FA0 ADD X10, X10, 0x8
	0x02608FA4 LDUR X11, [X10 - 0x8]
	0x02608FA8 CMP X11, X1
	0x02608FAC B.EQ 0x2608FCC
	0x02608FB0 SUBS X9, X9, 0x1
	0x02608FB4 ADD X10, X10, 0x10
	0x02608FB8 B.NE 0x2608FA4
	0x02608FBC MOVZ W2, 0x2
	0x02608FC0 MOV X0, X20
	0x02608FC4 BL 0x1C5C788
	0x02608FC8 B 0x2608FDC
	0x02608FCC LDR W9, [X10]
	0x02608FD0 ADD W9, W9, 0x2
	0x02608FD4 ADD X8, X8, W9, 0x4, SXTW
	0x02608FD8 ADD X0, X8, 0x138
	0x02608FDC LDP X8, X1, [X0]
	0x02608FE0 MOV X0, X20
	0x02608FE4 BLR X8
	0x02608FE8 AND W8, W0, 0xFF
	0x02608FEC CMP W8, 0x6
	0x02608FF0 B.EQ 0x2609060
	0x02608FF4 CMP W8, 0x3
	0x02608FF8 B.EQ 0x2609070
	0x02608FFC CMP W8, 0x2
	0x02609000 B.NE 0x2609130
	0x02609004 LDR X8, [X19 + 0x20]
	0x02609008 LDR X8, [X8 + 0xC0]
	0x0260900C LDR X0, [X8 + 0xB8]
	0x02609010 LDRB W8, [X0 + 0x135]
	0x02609014 TBNZ X8, 0x0, 0x260901C
	0x02609018 BL 0x1C5C684
	0x0260901C LDR X8, [X20]
	0x02609020 LDRB W9, [X0 + 0x130]
	0x02609024 LDRB W10, [X8 + 0x130]
	0x02609028 CMP W10, W9
	0x0260902C B.CC 0x260912C
	0x02609030 LDR X8, [X8 + 0xC8]
	0x02609034 ADD X8, X8, X9, 0x3, LSL
	0x02609038 LDUR X8, [X8 - 0x8]
	0x0260903C CMP X8, X0
	0x02609040 B.NE 0x260912C
	0x02609044 LDR X8, [X19 + 0x20]
	0x02609048 LDR X1, [X20 + 0x20]
	0x0260904C MOV X0, X21
	0x02609050 LDR X8, [X8 + 0xC0]
	0x02609054 LDR X2, [X8 + 0xC8]
	0x02609058 BL 0x26098A0
	0x0260905C TBZ X0, 0x0, 0x2609108
	0x02609060 LDP X20, X19, [X31 + 0x20]
	0x02609064 LDP X22, X21, [X31 + 0x10]
	0x02609068 LDR X30, [X31], #0x30
	0x0260906C RET
	0x02609070 LDR X8, [X19 + 0x20]
	0x02609074 LDR X8, [X8 + 0xC0]
	0x02609078 LDR X0, [X8 + 0xB8]
	0x0260907C LDRB W8, [X0 + 0x135]
	0x02609080 TBNZ X8, 0x0, 0x2609088
	0x02609084 BL 0x1C5C684
	0x02609088 LDR X8, [X20]
	0x0260908C LDRB W9, [X0 + 0x130]
	0x02609090 LDRB W10, [X8 + 0x130]
	0x02609094 CMP W10, W9
	0x02609098 B.CC 0x260912C
	0x0260909C LDR X8, [X8 + 0xC8]
	0x026090A0 ADD X9, X8, X9, 0x3, LSL
	0x026090A4 LDUR X9, [X9 - 0x8]
	0x026090A8 CMP X9, X0
	0x026090AC B.NE 0x260912C
	0x026090B0 LDR X9, [X19 + 0x20]
	0x026090B4 LDR X9, [X9 + 0xC0]
	0x026090B8 LDR X0, [X9 + 0xB8]
	0x026090BC LDRB W10, [X0 + 0x135]
	0x026090C0 TBNZ X10, 0x0, 0x26090D8
	0x026090C4 BL 0x1C5C684
	0x026090C8 LDR X8, [X20]
	0x026090CC LDR X9, [X19 + 0x20]
	0x026090D0 LDR X8, [X8 + 0xC8]
	0x026090D4 LDR X9, [X9 + 0xC0]
	0x026090D8 LDRB W10, [X0 + 0x130]
	0x026090DC LDR X2, [X9 + 0xD8]
	0x026090E0 ADD X8, X8, X10, 0x3, LSL
	0x026090E4 LDUR X8, [X8 - 0x8]
	0x026090E8 CMP X8, X0
	0x026090EC CSEL X8, X20, X31, EQ
	0x026090F0 LDR X1, [X8 + 0x20]
	0x026090F4 MOV X0, X21
	0x026090F8 LDP X20, X19, [X31 + 0x20]
	0x026090FC LDP X22, X21, [X31 + 0x10]
	0x02609100 LDR X30, [X31], #0x30
	0x02609104 B 0x26099B0
	0x02609108 LDR X8, [X19 + 0x20]
	0x0260910C LDR X1, [X20 + 0x20]
	0x02609110 MOV X0, X21
	0x02609114 LDP X20, X19, [X31 + 0x20]
	0x02609118 LDR X8, [X8 + 0xC0]
	0x0260911C LDP X22, X21, [X31 + 0x10]
	0x02609120 LDR X2, [X8 + 0xD0]
	0x02609124 LDR X30, [X31], #0x30
	0x02609128 B 0x26091D0
	0x0260912C BL 0x1C16F20
	0x02609130 MOV X0, X20
	0x02609134 BL 0x19903C0
	0x02609138 ADRP X0, 0x1AEA000
	0x0260913C LDR X0, [X0 + 0x750]
	0x02609140 BL 0x1C16D08
	0x02609144 MOV X1, X0
	0x02609148 MOVZ W0, 0x2
	0x0260914C MOV X2, X20
	0x02609150 BL 0x19963F0
	0x02609154 STRB W0, [X31 + 0xC]
	0x02609158 ADRP X0, 0x1B14000
	0x0260915C LDR X0, [X0 + 0x328]
	0x02609160 BL 0x1C16D08
	0x02609164 ADD X1, X31, 0xC
	0x02609168 BL 0x1C16E04
	0x0260916C MOV X20, X0
	0x02609170 ADRP X0, 0x1B14000
	0x02609174 LDR X0, [X0 + 0x330]
	0x02609178 BL 0x1C16D08
	0x0260917C MOV X21, X0
	0x02609180 ADRP X0, 0x1B14000
	0x02609184 LDR X0, [X0 + 0x338]
	0x02609188 BL 0x1C16D08
	0x0260918C MOV X2, X0
	0x02609190 MOV X0, X21
	0x02609194 MOV X1, X20
	0x02609198 MOV X3, X31
	0x0260919C BL 0x3227BD4
	0x026091A0 MOV X20, X0
	0x026091A4 ADRP X0, 0x1AEA000
	0x026091A8 LDR X0, [X0 + 0x5B0]
	0x026091AC BL 0x1C16D08
	0x026091B0 BL 0x1C16F10
	0x026091B4 MOV X1, X20
	0x026091B8 MOV X2, X31
	0x026091BC MOV X21, X0
	0x026091C0 BL 0x337DF1C
	0x026091C4 MOV X0, X21
	0x026091C8 MOV X1, X19
	0x026091CC BL 0x1C16DEC
	0x026091D0 STR X30, [X31 - 0x40]!
	0x026091D4 STP X24, X23, [X31 + 0x10]
	0x026091D8 STP X22, X21, [X31 + 0x20]
	0x026091DC STP X20, X19, [X31 + 0x30]
	0x026091E0 ADRP X21, 0x1DD1000
	0x026091E4 LDRB W8, [X21 + 0x1]
	0x026091E8 MOV X22, X2
	0x026091EC MOV X19, X1
	0x026091F0 MOV X20, X0
	0x026091F4 TBNZ X8, 0x0, 0x2609230
	0x026091F8 ADRP X0, 0x1AEA000
	0x026091FC LDR X0, [X0 + 0xDF8]
	0x02609200 BL 0x1C16CF4
	0x02609204 ADRP X0, 0x1B14000
	0x02609208 LDR X0, [X0 + 0x318]
	0x0260920C BL 0x1C16CF4
	0x02609210 ADRP X0, 0x1B14000
	0x02609214 LDR X0, [X0 + 0x310]
	0x02609218 BL 0x1C16CF4
	0x0260921C ADRP X0, 0x1B12000
	0x02609220 LDR X0, [X0 + 0xBE0]
	0x02609224 BL 0x1C16CF4
	0x02609228 MOVZ W8, 0x1
	0x0260922C STRB W8, [X21 + 0x1]
	0x02609230 LDR X0, [X20 + 0x60]
	0x02609234 CBZ X0, 0x2609554
	0x02609238 LDR X8, [X22 + 0x20]
	0x0260923C MOV X1, X19
	0x02609240 MOV X2, X31
	0x02609244 LDR X8, [X8 + 0xC0]
	0x02609248 LDR X3, [X8 + 0xE0]
	0x0260924C BL 0x2AA5098
	0x02609250 LDR X8, [X20 + 0x58]
	0x02609254 MOVZ W9, 0x1
	0x02609258 STRB W9, [X20 + 0x20]
	0x0260925C CBZ X8, 0x2609554
	0x02609260 LDR X9, [X8 + 0x18]
	0x02609264 LDR X0, [X8 + 0x40]
	0x02609268 LDR X1, [X8 + 0x28]
	0x0260926C BLR X9
	0x02609270 LDR X8, [X20 + 0x40]
	0x02609274 CBZ X8, 0x2609554
	0x02609278 LDR X9, [X8]
	0x0260927C MOV X21, X0
	0x02609280 MOV X0, X8
	0x02609284 LDR X10, [X9 + 0x588]
	0x02609288 LDR X1, [X9 + 0x590]
	0x0260928C BLR X10
	0x02609290 TBZ X0, 0x0, 0x26092F8

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X22, 0x1DD2000
	010 Move W8, [X22+4089]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1AED000
	019 Move X0, [X0+432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+4089], W8
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Move [X31+96], X31
	025 Move [X31+104], X31
	026 Move [X31+112], X31
	027 Move [X31+80], X31
	028 Move [X31+48], V0
	029 Move [X31+56], V0
	030 Move X8, [X19+32]
	031 Move X8, [X8+192]
	032 Move X1, [X8]
	033 Move W8, [X1+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X1
	039 Call 0x1C5D684
	040 Move X1, X0
	041 Compare X20, 0
	042 JumpIfEqual {236}
	043 Move X8, [X20]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, [X19+32]
	046 Move X0, X20
	047 Move X8, [X8+192]
	048 Move X1, [X8+760]
	049 Call 0x2606C54, X0
	050 Move X8, [X19+32]
	051 Move X22, X0
	052 Move X8, [X8+192]
	053 Move X8, [X8+704]
	054 Move W9, [X8+309]
	055 Move TEMP, X9
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X8
	060 Call 0x1C5D684
	061 Move X8, X0
	062 Move X0, X8
	063 Call 0x1C17F10
	064 Move X8, [X19+32]
	065 Move X1, X21
	066 Move X23, X0
	067 Move X8, [X8+192]
	068 Move X2, [X8+768]
	069 Move X3, [X8+712]
	070 Call Func`2<Int32, Boolean>..ctor, X0, X1, X2
	071 Move X8, [X19+32]
	072 Move X0, X22
	073 Move X1, X23
	074 Move X8, [X8+192]
	075 Move X2, [X8+720]
	076 Call Enumerable.Where, X0, X1
	077 Move X8, [X19+32]
	078 Move X8, [X8+192]
	079 Move X1, [X8+736]
	080 Call Enumerable.ToArray, X0
	081 Compare X0, 0
	082 JumpIfEqual {236}
	083 Move X8, [X0+24]
	084 Move X22, X0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X23, X31
	087 And X8, X8, 0
	088 Add X24, X22, 32
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, [X19+32]
	091 Move W1, [X24]
	092 Move X0, X20
	093 Move X8, [X8+192]
	094 Move X2, [X8+216]
	095 Call 0x2607EA8, X0, X1
	096 Move W8, [X22+24]
	097 Add X23, X23, 1
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, [X21+96]
	100 Compare X0, 0
	101 JumpIfEqual {236}
	102 Move X8, [X19+32]
	103 Move X8, [X8+192]
	104 Move X1, [X8+80]
	105 Call Dictionary`2<Int32, Object>.get_Keys, X0
	106 Compare X0, 0
	107 JumpIfEqual {236}
	108 Move X8, [X19+32]
	109 Move X24, 0x1AEC000
	110 Move X8, [X8+192]
	111 Move X1, [X8+776]
	112 Call 0x3EB254C
	113 Return 
	114 Add X8, X31, 8
	115 Call KeyCollection<Int32, Object>.GetEnumerator, X0
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 Move X8, [X31+24]
	118 Move [X31+6], V0
	119 Move [X31+112], X8
	120 Move X8, [X19+32]
	121 Move X8, [X8+192]
	122 Move X1, [X8+808]
	123 Add X0, X31, 96
	124 Call Enumerator<Int32, Object>.MoveNext, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {148}
	129 Move X0, [X20+96]
	130 Compare X0, 0
	131 JumpIfEqual {233}
	132 Move X8, [X19+32]
	133 Move W22, [X31+112]
	134 Move X8, [X8+192]
	135 Move X2, [X8+400]
	136 Move W1, W22
	137 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {120}
	142 Move X8, [X19+32]
	143 Move X8, [X8+192]
	144 Move X2, [X8+208]
	145 Move X0, X20
	146 Move W1, W22
	147 Call 0x26076A0, X0, X1
	148 Move X23, X31
	149 Move W22, 6
	150 Move X8, [X19+32]
	151 Add X0, X31, 96
	152 Move X8, [X8+192]
	153 Move X1, [X8+816]
	154 Call Enumerator<Int32, Object>.Dispose, X0
	155 Compare X23, 0
	156 JumpIfNotEqual {239}
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Compare W22, 0
	159 JumpIfNotEqual {224}
	160 Move X0, [X21+96]
	161 Compare X0, 0
	162 JumpIfEqual {236}
	163 Move X8, [X19+32]
	164 Move X8, [X8+192]
	165 Move X1, [X8+312]
	166 Add X8, X31, 8
	167 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 Move X8, [X31+40]
	171 Move [X31+48], V0
	172 Move [X31+56], V1
	173 Move [X31+80], X8
	174 Move X8, [X19+32]
	175 Move X8, [X8+192]
	176 Move X1, [X8+384]
	177 Add X0, X31, 48
	178 Call Enumerator<Int32, Object>.MoveNext, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {216}
	183 Move X8, [X19+32]
	184 Move W1, [X31+64]
	185 Move X21, [X31+72]
	186 Move X8, [X8+192]
	187 Move X2, [X8+824]
	188 Move X0, X20
	189 Call 0x2606C0C, X0, X1
	190 Compare X21, 0
	191 JumpIfEqual {234}
	192 Move X8, [X21]
	193 Move X1, [X24]
	194 Move X22, X0
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move W2, 24
	205 Move X0, X21
	206 Call 0x1C5D788
	207 Move W9, [X10]
	208 Add W9, W9, 24
	209 Add X8, X8, W9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X2, [X0+8]
	213 Move X0, X21
	214 Move X1, X22
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X20, X31
	217 Move X8, [X19+32]
	218 Add X0, X31, 48
	219 Move X8, [X8+192]
	220 Move X1, [X8+392]
	221 Call Enumerator<Int32, Object>.Dispose, X0
	222 Compare X20, 0
	223 JumpIfNotEqual {241}
	224 Move X20, [X31+176]
	225 Move X19, [X31+184]
	226 Move X22, [X31+160]
	227 Move X21, [X31+168]
	228 Move X24, [X31+144]
	229 Move X23, [X31+152]
	230 Move X30, [X31+128]
	231 Add X31, X31, 192
	232 Return 
	233 Call 0x1C17F20
	234 Call 0x1C17F20
	235 Call 0x1C17F28
	236 Call 0x1C17F20
	237 Move X0, X20
	238 Call 0x1C181E0
	239 Move X0, X23
	240 Call 0x1C17F18
	241 Move X0, X20
	242 Call 0x1C17F18
	243 Move X22, X0
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X0, X22
	246 Call 0x3EB2AD0
	247 Move X23, [X0]
	248 Call 0x3EB2AE0
	249 Move W22, W31
	250 Move X23, X31
	251 Move X22, X0
	252 Move X8, [X19+32]
	253 Move X8, [X8+192]
	254 Move X1, [X8+816]
	255 Add X0, X31, 96
	256 Call Enumerator<Int32, Object>.Dispose, X0
	257 Compare X23, 0
	258 JumpIfEqual {276}
	259 Move X0, X23
	260 Call 0x1C17F18
	261 Move X22, X0
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X0, X22
	264 Call 0x3EB2AD0
	265 Move X20, [X0]
	266 Call 0x3EB2AE0
	267 Move X20, X31
	268 Move X22, X0
	269 Move X8, [X19+32]
	270 Move X8, [X8+192]
	271 Move X1, [X8+392]
	272 Add X0, X31, 48
	273 Call Enumerator<Int32, Object>.Dispose, X0
	274 Compare X20, 0
	275 JumpIfNotEqual {278}
	276 Move X0, X22
	277 Call 0x1D2D690
	278 Move X0, X20
	279 Call 0x1C17F18
	280 Call 0x1991590

Method: SpatialSys.ObservableState.IStateObject Add(System.Object key)

Disassembly:
	0x02609294 CBZ X19, 0x2609554
	0x02609298 ADRP X8, 0x1AEA000
	0x0260929C LDR X8, [X8 + 0xDF8]
	0x026092A0 LDR X9, [X19]
	0x026092A4 LDR X8, [X8]
	0x026092A8 LDRB W11, [X9 + 0x130]
	0x026092AC LDRB W10, [X8 + 0x130]
	0x026092B0 CMP W11, W10
	0x026092B4 B.CC 0x2609554
	0x026092B8 LDR X11, [X9 + 0xC8]
	0x026092BC ADD X11, X11, X10, 0x3, LSL
	0x026092C0 LDUR X11, [X11 - 0x8]
	0x026092C4 CMP X11, X8
	0x026092C8 B.NE 0x2609554
	0x026092CC LDR X9, [X9 + 0xC8]
	0x026092D0 MOV X2, X31
	0x026092D4 ADD X9, X9, X10, 0x3, LSL
	0x026092D8 ADRP X10, 0x1B12000
	0x026092DC LDUR X9, [X9 - 0x8]
	0x026092E0 LDR X10, [X10 + 0xBE0]
	0x026092E4 CMP X9, X8
	0x026092E8 LDR X1, [X10]
	0x026092EC CSEL X0, X19, X31, EQ
	0x026092F0 BL 0x33B16FC
	0x026092F4 B 0x260930C
	0x026092F8 CBZ X19, 0x2609554
	0x026092FC LDR X8, [X19]
	0x02609300 MOV X0, X19
	0x02609304 LDP X9, X1, [X8 + 0x168]
	0x02609308 BLR X9
	0x0260930C MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+40]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Compare X20, 0
	020 JumpIfEqual {38}
	021 Move X8, [X20]
	022 Move X9, [X1+64]
	023 Move X0, X20
	024 Move X8, [X8+64]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Call 0x1C17E08
	027 Move X8, [X19+32]
	028 Move W1, [X0]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X0, X21
	032 Move X8, [X8+192]
	033 Move X2, [X8+208]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call 0x26076A0, X0, X1
	037 Return X0
	038 Call 0x1C17F20
	039 Call 0x1C181E0

Method: System.Boolean ContainsKey(System.Object key)

Disassembly:
	0x02609310 LDR X0, [X20 + 0x60]
	0x02609314 CBZ X0, 0x2609554
	0x02609318 LDR X8, [X22 + 0x20]
	0x0260931C MOV X1, X19
	0x02609320 MOV X2, X21
	0x02609324 LDR X8, [X8 + 0xC0]
	0x02609328 LDR X3, [X8 + 0xF8]
	0x0260932C BL 0x2AA5084
	0x02609330 LDR X8, [X22 + 0x20]
	0x02609334 LDR X8, [X8 + 0xC0]
	0x02609338 LDR X1, [X8 + 0x100]
	0x0260933C LDRB W8, [X1 + 0x135]
	0x02609340 TBNZ X8, 0x0, 0x2609350
	0x02609344 MOV X0, X1
	0x02609348 BL 0x1C5C684
	0x0260934C MOV X1, X0
	0x02609350 MOV X0, X21
	0x02609354 BL 0x1C16E00
	0x02609358 CBZ X0, 0x26093D8
	0x0260935C LDR X8, [X22 + 0x20]
	0x02609360 MOV X24, X0
	0x02609364 LDR X8, [X8 + 0xC0]
	0x02609368 LDR X1, [X8 + 0x100]
	0x0260936C LDRB W8, [X1 + 0x135]
	0x02609370 TBNZ X8, 0x0, 0x2609380
	0x02609374 MOV X0, X1
	0x02609378 BL 0x1C5C684
	0x0260937C MOV X1, X0
	0x02609380 LDR X8, [X24]
	0x02609384 LDRH W9, [X8 + 0x12E]
	0x02609388 CBZ X9, 0x26093AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+40]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Compare X20, 0
	020 JumpIfEqual {38}
	021 Move X8, [X20]
	022 Move X9, [X1+64]
	023 Move X0, X20
	024 Move X8, [X8+64]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Call 0x1C17E08
	027 Move X8, [X19+32]
	028 Move W1, [X0]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X0, X21
	032 Move X8, [X8+192]
	033 Move X2, [X8+200]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call 0x2607D98, X0, X1
	037 Return X0
	038 Call 0x1C17F20
	039 Call 0x1C181E0

Method: System.Void Remove(System.Object key)

Disassembly:
	0x0260938C LDR X10, [X8 + 0xB0]
	0x02609390 ADD X10, X10, 0x8
	0x02609394 LDUR X11, [X10 - 0x8]
	0x02609398 CMP X11, X1
	0x0260939C B.EQ 0x26093BC
	0x026093A0 SUBS X9, X9, 0x1
	0x026093A4 ADD X10, X10, 0x10
	0x026093A8 B.NE 0x2609394
	0x026093AC MOV X0, X24
	0x026093B0 MOV W2, W31
	0x026093B4 BL 0x1C5C788
	0x026093B8 B 0x26093C8
	0x026093BC LDRSW X9, [X10]
	0x026093C0 ADD X8, X8, X9, 0x4, LSL
	0x026093C4 ADD X0, X8, 0x138
	0x026093C8 LDP X8, X2, [X0]
	0x026093CC MOV X0, X24
	0x026093D0 MOV X1, X19
	0x026093D4 BLR X8
	0x026093D8 CBZ X21, 0x2609554
	0x026093DC ADRP X8, 0x1B14000
	0x026093E0 LDR X8, [X8 + 0x310]
	0x026093E4 LDR X9, [X21]
	0x026093E8 LDR X8, [X8]
	0x026093EC LDRB W11, [X9 + 0x130]
	0x026093F0 LDRB W10, [X8 + 0x130]
	0x026093F4 CMP W11, W10
	0x026093F8 B.CC 0x2609554
	0x026093FC LDR X9, [X9 + 0xC8]
	0x02609400 ADD X9, X9, X10, 0x3, LSL
	0x02609404 LDUR X9, [X9 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X20, X1
	007 Move X19, X2
	008 Move X21, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+40]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Compare X20, 0
	020 JumpIfEqual {38}
	021 Move X8, [X20]
	022 Move X9, [X1+64]
	023 Move X0, X20
	024 Move X8, [X8+64]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Call 0x1C17E08
	027 Move X8, [X19+32]
	028 Move W1, [X0]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X0, X21
	032 Move X8, [X8+192]
	033 Move X2, [X8+216]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call 0x2607EA8, X0, X1
	037 Return 
	038 Call 0x1C17F20
	039 Call 0x1C181E0

Method: SpatialSys.ObservableState.IStateObject SpatialSys.ObservableState.IStateDictionary<TKey>.Add(TKey key)

Disassembly:
	0x02609408 CMP X9, X8
	0x0260940C B.NE 0x2609554
	0x02609410 LDR X8, [X21]
	0x02609414 LDRB W3, [X20 + 0x39]

ISIL:
	001 Move X8, [X2+32]
	002 Move X8, [X8+192]
	003 Move X2, [X8+208]
	004 Call 0x26076A0, X0, X1
	005 Return X0

Method: System.Boolean TryGetValue(System.Object key, out SpatialSys.ObservableState.IStateObject value)

Disassembly:
	0x02609418 MOV X0, X21
	0x0260941C MOV X1, X20
	0x02609420 LDR X9, [X8 + 0x368]
	0x02609424 LDR X4, [X8 + 0x370]
	0x02609428 MOV X2, X23
	0x0260942C BLR X9
	0x02609430 LDR X8, [X21]
	0x02609434 MOV X0, X21
	0x02609438 LDR X9, [X8 + 0x378]
	0x0260943C LDR X1, [X8 + 0x380]
	0x02609440 BLR X9
	0x02609444 LDR X23, [X20 + 0x30]
	0x02609448 CBZ X23, 0x2609554
	0x0260944C ADRP X10, 0x1B14000
	0x02609450 LDR X8, [X23]
	0x02609454 LDR X10, [X10 + 0x318]
	0x02609458 LDRH W9, [X8 + 0x12E]
	0x0260945C LDR X1, [X10]
	0x02609460 CBZ X9, 0x2609484
	0x02609464 LDR X10, [X8 + 0xB0]
	0x02609468 ADD X10, X10, 0x8
	0x0260946C LDUR X11, [X10 - 0x8]
	0x02609470 CMP X11, X1
	0x02609474 B.EQ 0x2609494
	0x02609478 SUBS X9, X9, 0x1
	0x0260947C ADD X10, X10, 0x10
	0x02609480 B.NE 0x260946C
	0x02609484 MOV X0, X23
	0x02609488 MOV W2, W31
	0x0260948C BL 0x1C5C788
	0x02609490 B 0x26094A0
	0x02609494 LDRSW X9, [X10]
	0x02609498 ADD X8, X8, X9, 0x4, LSL
	0x0260949C ADD X0, X8, 0x138
	0x026094A0 LDP X8, X1, [X0]
	0x026094A4 MOV X0, X23
	0x026094A8 BLR X8
	0x026094AC CBZ X0, 0x2609554
	0x026094B0 LDR X8, [X22 + 0x20]
	0x026094B4 LDR W22, [X20 + 0x48]
	0x026094B8 MOV X23, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move X8, [X3+32]
	008 Move X22, X1
	009 Move X20, X3
	010 Move X19, X2
	011 Move X8, [X8+192]
	012 Move X21, X0
	013 Move X1, [X8+40]
	014 Move W8, [X1+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {22}
	019 Move X0, X1
	020 Call 0x1C5D684
	021 Move X1, X0
	022 Compare X22, 0
	023 JumpIfEqual {47}
	024 Move X8, [X22]
	025 Move X9, [X1+64]
	026 Move X0, X22
	027 Move X8, [X8+64]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Call 0x1C17E08
	030 Move X8, [X20+32]
	031 Move W1, [X0]
	032 Add X2, X31, 8
	033 Move X0, X21
	034 Move X8, [X8+192]
	035 Move X3, [X8+536]
	036 Call 0x260832C, X0, X1, X2
	037 Move X8, [X31+8]
	038 And W0, W0, 1
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move [X19], X8
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+48]
	046 Return X0
	047 Call 0x1C17F20
	048 Call 0x1C181E0

Method: System.Boolean <CopyTo>b__58_0(TKey k)

Disassembly:
	0x026094BC LDR X9, [X8 + 0xC0]
	0x026094C0 LDR X8, [X0]
	0x026094C4 LDR X24, [X9 + 0x118]
	0x026094C8 LDRH W9, [X8 + 0x12E]
	0x026094CC LDR X1, [X24 + 0x20]
	0x026094D0 LDRH W2, [X24 + 0x50]
	0x026094D4 CBZ X9, 0x26094F8
	0x026094D8 LDR X10, [X8 + 0xB0]
	0x026094DC ADD X10, X10, 0x8
	0x026094E0 LDUR X11, [X10 - 0x8]
	0x026094E4 CMP X11, X1
	0x026094E8 B.EQ 0x2609504
	0x026094EC SUBS X9, X9, 0x1
	0x026094F0 ADD X10, X10, 0x10
	0x026094F4 B.NE 0x26094E0
	0x026094F8 MOV X0, X23
	0x026094FC BL 0x1C5C788
	0x02609500 B 0x2609514
	0x02609504 LDR W9, [X10]
	0x02609508 ADD W9, W9, W2
	0x0260950C ADD X8, X8, W9, 0x4, SXTW
	0x02609510 ADD X0, X8, 0x138
	0x02609514 LDR X0, [X0 + 0x8]
	0x02609518 MOV X1, X24
	0x0260951C BL 0x1C16DF8
	0x02609520 LDR X8, [X0 + 0x8]
	0x02609524 MOV X4, X0
	0x02609528 MOV X0, X23
	0x0260952C MOV X1, X20
	0x02609530 MOV X2, X19
	0x02609534 MOV W3, W22
	0x02609538 BLR X8
	0x0260953C MOV X0, X21
	0x02609540 LDP X20, X19, [X31 + 0x30]
	0x02609544 LDP X22, X21, [X31 + 0x20]
	0x02609548 LDP X24, X23, [X31 + 0x10]
	0x0260954C LDR X30, [X31], #0x40
	0x02609550 RET
	0x02609554 BL 0x1C16F20
	0x02609558 SUB X31, X31, 0xB0
	0x0260955C STP X30, X27, [X31 + 0x60]
	0x02609560 STP X26, X25, [X31 + 0x70]
	0x02609564 STP X24, X23, [X31 + 0x80]
	0x02609568 STP X22, X21, [X31 + 0x90]
	0x0260956C STP X20, X19, [X31 + 0xA0]
	0x02609570 ADRP X21, 0x1DD1000
	0x02609574 LDRB W8, [X21 + 0x2]
	0x02609578 MOV X19, X1
	0x0260957C MOV X20, X0
	0x02609580 TBNZ X8, 0x0, 0x26095A4
	0x02609584 ADRP X0, 0x1B14000
	0x02609588 LDR X0, [X0 + 0x318]
	0x0260958C BL 0x1C16CF4
	0x02609590 ADRP X0, 0x1B14000
	0x02609594 LDR X0, [X0 + 0x310]
	0x02609598 BL 0x1C16CF4
	0x0260959C MOVZ W8, 0x1
	0x026095A0 STRB W8, [X21 + 0x2]
	0x026095A4 MOVI V0.2D, 0x0
	0x026095A8 STR X31, [X31 + 0x50]
	0x026095AC STP V0, V0, [X31 + 0x30]
	0x026095B0 LDR X0, [X20 + 0x60]
	0x026095B4 CBZ X0, 0x2609824
	0x026095B8 LDR X8, [X19 + 0x20]
	0x026095BC LDR X8, [X8 + 0xC0]
	0x026095C0 LDR X1, [X8 + 0x10]
	0x026095C4 BL 0x2AA4E88
	0x026095C8 LDR X8, [X19 + 0x20]
	0x026095CC LDR X23, [X20 + 0x60]
	0x026095D0 MOV W21, W0
	0x026095D4 LDR X8, [X8 + 0xC0]
	0x026095D8 LDR X8, [X8 + 0x8]
	0x026095DC LDRB W9, [X8 + 0x135]
	0x026095E0 TBNZ X9, 0x0, 0x26095F0
	0x026095E4 MOV X0, X8
	0x026095E8 BL 0x1C5C684
	0x026095EC MOV X8, X0
	0x026095F0 MOV X0, X8
	0x026095F4 BL 0x1C16F10
	0x026095F8 LDR X8, [X19 + 0x20]
	0x026095FC MOV X1, X23
	0x02609600 MOV X22, X0
	0x02609604 LDR X8, [X8 + 0xC0]
	0x02609608 LDR X2, [X8 + 0x120]
	0x0260960C BL 0x2AA48CC
	0x02609610 LDR X0, [X20 + 0x60]
	0x02609614 CBZ X0, 0x2609824
	0x02609618 LDR X8, [X19 + 0x20]
	0x0260961C CMP W21, 0x0
	0x02609620 CSET W21, GT
	0x02609624 LDR X8, [X8 + 0xC0]
	0x02609628 LDR X1, [X8 + 0x130]
	0x0260962C BL 0x2AA5220
	0x02609630 LDRB W8, [X20 + 0x20]
	0x02609634 ORR W8, W8, W21, 0x0
	0x02609638 STRB W8, [X20 + 0x20]
	0x0260963C CBZ X22, 0x2609824
	0x02609640 LDR X8, [X19 + 0x20]
	0x02609644 ADRP X25, 0x1B14000
	0x02609648 ADRP X26, 0x1B14000
	0x0260964C MOV X0, X22
	0x02609650 LDR X8, [X8 + 0xC0]
	0x02609654 LDR X1, [X8 + 0x138]
	0x02609658 LDR X25, [X25 + 0x318]
	0x0260965C LDR X26, [X26 + 0x310]
	0x02609660 ADD X8, X31, 0x8
	0x02609664 BL 0x2AA54BC
	0x02609668 LDUR V0, [X31 + 0x8]
	0x0260966C LDUR V1, [X31 + 0x18]
	0x02609670 LDR X8, [X31 + 0x28]
	0x02609674 STP V0, V1, [X31 + 0x30]
	0x02609678 STR X8, [X31 + 0x50]
	0x0260967C LDR X8, [X19 + 0x20]
	0x02609680 LDR X8, [X8 + 0xC0]
	0x02609684 LDR X1, [X8 + 0x180]
	0x02609688 ADD X0, X31, 0x30

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+96]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X8, [X2+32]
	006 Move X8, [X8+192]
	007 Move X2, [X8+400]
	008 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	009 NotImplemented "Instruction ORN not yet implemented."
	010 And W0, W8, 1
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20
	014 Move [X31-80], X29
	015 Move [X31-72], X30
	016 Move [X31+16], X25
	017 Move [X31+32], X24
	018 Move [X31+40], X23
	019 Move [X31+48], X22
	020 Move [X31+56], X21
	021 Move [X31+64], X20
	022 Move [X31+72], X19
	023 Add X29, X31, 0
	024 Subtract X31, X31, 16
	025 NotImplemented "Instruction MRS not yet implemented."
	026 Move X8, [X25+40]
	027 Move X22, 0x1DD1000
	028 Move X21, X2
	029 Move X19, X1
	030 Move [X29-8], X8
	031 Move W8, [X22+4090]
	032 Move X20, X0
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x1AEB000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+4090], W8
	040 Move X0, [X21+32]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+192]
	048 Move X8, [X8+16]
	049 Move W23, [X8+252]
	050 Add X8, X31, 0
	051 Add X9, X23, 15
	052 And X9, X9, 0x1FFFFFFFF
	053 Subtract X22, X8, X9
	054 Add X31, X22, 0
	055 Add X8, X31, 0
	056 Subtract X24, X8, X9
	057 Add X31, X24, 0
	058 Move X0, X24
	059 Move W1, W31
	060 Move X2, X23
	061 Call 0x3EB2B10
	062 Compare X19, 0
	063 JumpIfEqual {126}
	064 Move X0, X24
	065 Move W1, W31
	066 Move X2, X23
	067 Call 0x3EB2B10
	068 Move X0, X22
	069 Move X1, X24
	070 Move X2, X23
	071 Call 0x3EB2AC0
	072 Move X0, [X21+32]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Move X8, [X0+192]
	080 Move X1, X22
	081 Move X0, [X8+16]
	082 Call 0x1C17ED4
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {122}
	087 Move X0, X19
	088 Move X1, X31
	089 Call "il2cpp_vm_object_is_inst", X0
	090 Move X8, [X21+32]
	091 Move X21, X0
	092 Move W9, [X8+309]
	093 Move TEMP, X9
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {100}
	097 Move X0, X8
	098 Call 0x1C5D684
	099 Move X8, X0
	100 Move X9, 0x1AEB000
	101 Move X9, [X9+1728]
	102 Move X8, [X8+192]
	103 Move X0, [X9]
	104 Move X22, [X8+24]
	105 Move W9, [X0+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X22
	110 Move X1, X31
	111 Call Type.GetTypeFromHandle, X0
	112 Move X1, X0
	113 Move X0, X21
	114 Move X2, X31
	115 Call Type.op_Inequality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {122}
	120 Move X0, X31
	121 Call ThrowHelper.ThrowArrayTypeMismatchException
	122 Add X8, X19, 32
	123 Move [X20], X8
	124 Move X8, [X19+24]
	125 Move [X20+8], W8
	126 Move [X20], X31
	127 Move [X20+8], X31
	128 Move X8, [X25+40]
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add X31, X29, 0
	132 Move X20, [X31+64]
	133 Move X19, [X31+72]
	134 Move X22, [X31+48]
	135 Move X21, [X31+56]
	136 Move X24, [X31+32]
	137 Move X23, [X31+40]
	138 Move X25, [X31+16]
	139 Move X29, [X31+80]
	140 Move X30, [X31+88]
	141 Return X0
	142 Call 0x3EB2B20

