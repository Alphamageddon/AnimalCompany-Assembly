Type: SpatialSys.ObservableState.PrimitiveOperators/<>c

Method: System.Void .cctor()

Disassembly:
	0x035D57E8 LDR X1, [X8 + 0x3D0]
	0x035D57EC BLR X9
	0x035D57F0 AND W21, W0, 0x1
	0x035D57F4 B 0x35D5988
	0x035D57F8 LDR X8, [X25]
	0x035D57FC MOV X0, X25
	0x035D5800 LDR X9, [X8 + 0x248]
	0x035D5804 LDR X1, [X8 + 0x250]
	0x035D5808 BLR X9
	0x035D580C ADRP X8, 0xB63000
	0x035D5810 LDR X8, [X8 + 0xCA8]
	0x035D5814 MOV X21, X0
	0x035D5818 LDR X8, [X8]
	0x035D581C LDR W9, [X8 + 0xE0]
	0x035D5820 CBNZ W9, 0x35D582C
	0x035D5824 MOV X0, X8
	0x035D5828 BL 0x1C16DFC
	0x035D582C MOV X0, X21
	0x035D5830 BL 0x35D7EF8
	0x035D5834 TBZ X0, 0x0, 0x35D5AD8
	0x035D5838 LDR X8, [X25]
	0x035D583C MOV X24, X28
	0x035D5840 LDR X28, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xE0C000
	005 Move X20, 0xB64000
	006 Move W8, [X19+545]
	007 Move X20, [X20+2016]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB64000
	013 Move X0, [X0+2016]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+545], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x035D5844 MOV X0, X25
	0x035D5848 LDP X9, X1, [X8 + 0x1A8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <.cctor>b__2_0(System.String a, System.String b)

Disassembly:
	0x035D584C BLR X9
	0x035D5850 LDR X8, [X25]
	0x035D5854 MOV X23, X0
	0x035D5858 MOV X0, X25

ISIL:
	001 Move X0, X1
	002 Move X1, X2
	003 Move X2, X31
	004 Call String.op_Equality, X0, X1
	005 Return X0

Method: System.Boolean <.cctor>b__2_1(System.Char a, System.Char b)

Disassembly:
	0x035D585C LDR X9, [X8 + 0x248]
	0x035D5860 LDR X1, [X8 + 0x250]
	0x035D5864 BLR X9
	0x035D5868 CBZ X0, 0x35D62C0

ISIL:
	001 And W8, W1, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean <.cctor>b__2_2(System.Boolean a, System.Boolean b)

Disassembly:
	0x035D586C LDR X8, [X0]
	0x035D5870 LDR X9, [X8 + 0x2E8]
	0x035D5874 LDR X1, [X8 + 0x2F0]

ISIL:
	001 NotImplemented "Instruction EON not yet implemented."
	002 And W0, W8, 1
	003 Return X0

Method: System.Byte <.cctor>b__2_3(System.Byte a, System.Byte b)

Disassembly:
	0x035D5878 BLR X9
	0x035D587C ADRP X8, 0xB63000

ISIL:
	001 Add W0, W2, W1
	002 Return X0

Method: System.Byte <.cctor>b__2_4(System.Byte a, System.Byte b)

Disassembly:
	0x035D5880 LDR X8, [X8 + 0xCA8]
	0x035D5884 MOV X21, X0

ISIL:
	001 Multiply W0, W2, W1
	002 Return X0

Method: System.Boolean <.cctor>b__2_5(System.Byte a, System.Byte b)

Disassembly:
	0x035D5888 LDR X8, [X8]
	0x035D588C LDR W9, [X8 + 0xE0]
	0x035D5890 CBNZ W9, 0x35D589C
	0x035D5894 MOV X0, X8

ISIL:
	001 And W8, W1, 255
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.SByte <.cctor>b__2_6(System.SByte a, System.SByte b)

Disassembly:
	0x035D5898 BL 0x1C16DFC
	0x035D589C MOV X0, X21

ISIL:
	001 Add W0, W2, W1
	002 Return X0

Method: System.SByte <.cctor>b__2_7(System.SByte a, System.SByte b)

Disassembly:
	0x035D58A0 BL 0x35D6624
	0x035D58A4 ADRP X8, 0xB22000

ISIL:
	001 Multiply W0, W2, W1
	002 Return X0

Method: System.Boolean <.cctor>b__2_8(System.SByte a, System.SByte b)

Disassembly:
	0x035D58A8 LDR X8, [X8 + 0x928]
	0x035D58AC MOV X3, X0
	0x035D58B0 LDR X0, [X31 + 0x28]
	0x035D58B4 MOV X1, X23

ISIL:
	001 And W8, W1, 255
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int16 <.cctor>b__2_9(System.Int16 a, System.Int16 b)

Disassembly:
	0x035D58B8 LDR X2, [X8]
	0x035D58BC MOV X4, X31

ISIL:
	001 Add W0, W2, W1
	002 Return X0

Method: System.Int16 <.cctor>b__2_10(System.Int16 a, System.Int16 b)

Disassembly:
	0x035D58C0 BL 0x32277C4
	0x035D58C4 CBZ X28, 0x35D62C0

ISIL:
	001 Multiply W0, W2, W1
	002 Return X0

Method: System.Boolean <.cctor>b__2_11(System.Int16 a, System.Int16 b)

Disassembly:
	0x035D58C8 MOV X1, X0
	0x035D58CC MOV X0, X28
	0x035D58D0 MOV X2, X31
	0x035D58D4 BL 0x32338A8

ISIL:
	001 And W8, W1, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 <.cctor>b__2_12(System.Int32 a, System.Int32 b)

Disassembly:
	0x035D58D8 LDR X8, [X25]
	0x035D58DC MOV X0, X25

ISIL:
	001 Add W0, W2, W1
	002 Return X0

Method: System.Int32 <.cctor>b__2_13(System.Int32 a, System.Int32 b)

Disassembly:
	0x035D58E0 LDP X9, X1, [X8 + 0x1A8]
	0x035D58E4 BLR X9

ISIL:
	001 Multiply W0, W2, W1
	002 Return X0

Method: System.Boolean <.cctor>b__2_14(System.Int32 a, System.Int32 b)

Disassembly:
	0x035D58E8 LDR X8, [X25]
	0x035D58EC MOV X21, X0
	0x035D58F0 MOV X0, X25

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Int64 <.cctor>b__2_15(System.Int64 a, System.Int64 b)

Disassembly:
	0x035D58F4 LDR X9, [X8 + 0x248]
	0x035D58F8 LDR X1, [X8 + 0x250]

ISIL:
	001 Add X0, X2, X1
	002 Return X0

Method: System.Int64 <.cctor>b__2_16(System.Int64 a, System.Int64 b)

Disassembly:
	0x035D58FC BLR X9
	0x035D5900 ADRP X8, 0xB63000

ISIL:
	001 Multiply X0, X2, X1
	002 Return X0

Method: System.Boolean <.cctor>b__2_17(System.Int64 a, System.Int64 b)

Disassembly:
	0x035D5904 LDR X8, [X8 + 0xD18]
	0x035D5908 MOV X25, X0
	0x035D590C LDR X8, [X8]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Single <.cctor>b__2_18(System.Single a, System.Single b)

Disassembly:
	0x035D5910 MOV X0, X8
	0x035D5914 BL 0x1C16F10

ISIL:
	001 Add S0, S0, S1
	002 Return V0

Method: System.Single <.cctor>b__2_19(System.Single a, System.Single b)

Disassembly:
	0x035D5918 ADRP X8, 0xB63000
	0x035D591C LDR X8, [X8 + 0xD00]

ISIL:
	001 Multiply S0, S0, S1
	002 Return V0

Method: System.Boolean <.cctor>b__2_20(System.Single a, System.Single b)

Disassembly:
	0x035D5920 MOV X1, X21
	0x035D5924 MOV X2, X25
	0x035D5928 MOV X23, X0

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Double <.cctor>b__2_21(System.Double a, System.Double b)

Disassembly:
	0x035D592C LDR X3, [X8]
	0x035D5930 BL 0x2703724

ISIL:
	001 Add D0, D0, D1
	002 Return V0

Method: System.Double <.cctor>b__2_22(System.Double a, System.Double b)

Disassembly:
	0x035D5934 LDR X0, [X31 + 0x50]
	0x035D5938 CBZ X0, 0x35D62C0

ISIL:
	001 Multiply D0, D0, D1
	002 Return V0

Method: System.Boolean <.cctor>b__2_23(System.Double a, System.Double b)

Disassembly:
	0x035D593C ADRP X9, 0xB63000
	0x035D5940 LDR W10, [X0 + 0x1C]
	0x035D5944 LDR X8, [X0 + 0x10]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Decimal <.cctor>b__2_24(System.Decimal a, System.Decimal b)

Disassembly:
	0x035D5948 LDR X9, [X9 + 0xCF0]
	0x035D594C ADD W10, W10, 0x1
	0x035D5950 LDR X9, [X9]
	0x035D5954 STR W10, [X0 + 0x1C]
	0x035D5958 CBZ X8, 0x35D62C0
	0x035D595C LDRSW X10, [X0 + 0x18]
	0x035D5960 LDR W11, [X8 + 0x18]
	0x035D5964 MOV X28, X24
	0x035D5968 CMP W10, W11
	0x035D596C B.CS 0x35D5CE0
	0x035D5970 ADD W9, W10, 0x1
	0x035D5974 ADD X8, X8, X10, 0x3, LSL
	0x035D5978 STR W9, [X0 + 0x18]
	0x035D597C STR X23, [X8 + 0x20]
	0x035D5980 B 0x35D5CF4
	0x035D5984 MOV W21, W31
	0x035D5988 LDR X8, [X25]
	0x035D598C MOV X0, X25
	0x035D5990 LDR X9, [X8 + 0x248]
	0x035D5994 LDR X1, [X8 + 0x250]
	0x035D5998 BLR X9
	0x035D599C MOV X23, X0
	0x035D59A0 CBZ W21, 0x35D59C0
	0x035D59A4 CBZ X23, 0x35D62C0
	0x035D59A8 LDR X8, [X23]
	0x035D59AC MOV X0, X23
	0x035D59B0 LDR X9, [X8 + 0x818]
	0x035D59B4 LDR X1, [X8 + 0x820]
	0x035D59B8 BLR X9
	0x035D59BC MOV X23, X0
	0x035D59C0 ADRP X8, 0xB63000
	0x035D59C4 LDR X8, [X8 + 0xCA8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xE0C000
	009 Move X23, 0xB47000
	010 Move W8, [X24+546]
	011 Move X23, [X23+1520]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB47000
	021 Move X0, [X0+1520]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+546], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X4, X31
	041 Move X30, [X31+64]
	042 Call Decimal.op_Addition, X0, X1
	043 Return X0

Method: System.Decimal <.cctor>b__2_25(System.Decimal a, System.Decimal b)

Disassembly:
	0x035D59C8 STP X31, X31, [X31 + 0xD0]
	0x035D59CC LDR X0, [X8]
	0x035D59D0 LDR W8, [X0 + 0xE0]
	0x035D59D4 CBNZ W8, 0x35D59DC
	0x035D59D8 BL 0x1C16DFC
	0x035D59DC ADD X1, X31, 0xD8
	0x035D59E0 ADD X2, X31, 0xD0
	0x035D59E4 MOV X0, X23
	0x035D59E8 BL 0x35D7710
	0x035D59EC LDR X8, [X25]
	0x035D59F0 LDR X23, [X20]
	0x035D59F4 MOV X21, X0
	0x035D59F8 MOV X0, X25
	0x035D59FC LDP X9, X1, [X8 + 0x1A8]
	0x035D5A00 BLR X9
	0x035D5A04 ADRP X8, 0xB22000
	0x035D5A08 LDR X8, [X8 + 0x928]
	0x035D5A0C MOV X1, X0
	0x035D5A10 LDR X0, [X31 + 0x28]
	0x035D5A14 MOV X3, X21
	0x035D5A18 LDR X2, [X8]
	0x035D5A1C MOV X4, X31
	0x035D5A20 BL 0x32277C4
	0x035D5A24 CBZ X23, 0x35D62C0
	0x035D5A28 MOV X1, X0
	0x035D5A2C MOV X0, X23
	0x035D5A30 MOV X2, X31
	0x035D5A34 BL 0x32338A8
	0x035D5A38 LDR X26, [X31 + 0xD8]
	0x035D5A3C MOV X0, X26
	0x035D5A40 BL 0x35D7EF8
	0x035D5A44 TBZ X0, 0x0, 0x35D5B6C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xE0C000
	009 Move X23, 0xB47000
	010 Move W8, [X24+547]
	011 Move X23, [X23+1520]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB47000
	021 Move X0, [X0+1520]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+547], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X4, X31
	041 Move X30, [X31+64]
	042 Call Decimal.op_Multiply, X0, X1
	043 Return X0

Method: System.Boolean <.cctor>b__2_26(System.Decimal a, System.Decimal b)

Disassembly:
	0x035D5A48 LDR X8, [X25]
	0x035D5A4C MOV X0, X25
	0x035D5A50 LDP X9, X1, [X8 + 0x1A8]
	0x035D5A54 BLR X9
	0x035D5A58 ADRP X8, 0xB63000
	0x035D5A5C LDR X8, [X8 + 0xD18]
	0x035D5A60 MOV X21, X0
	0x035D5A64 LDR X8, [X8]
	0x035D5A68 MOV X0, X8
	0x035D5A6C BL 0x1C16F10
	0x035D5A70 ADRP X8, 0xB63000
	0x035D5A74 LDR X8, [X8 + 0xD00]
	0x035D5A78 MOV X1, X21
	0x035D5A7C MOV X2, X26
	0x035D5A80 MOV X23, X0
	0x035D5A84 LDR X3, [X8]
	0x035D5A88 BL 0x2703724
	0x035D5A8C LDR X0, [X31 + 0x50]
	0x035D5A90 CBZ X0, 0x35D62C0
	0x035D5A94 ADRP X9, 0xB63000
	0x035D5A98 LDR W10, [X0 + 0x1C]
	0x035D5A9C LDR X8, [X0 + 0x10]
	0x035D5AA0 LDR X9, [X9 + 0xCF0]
	0x035D5AA4 ADD W10, W10, 0x1
	0x035D5AA8 LDR X9, [X9]
	0x035D5AAC STR W10, [X0 + 0x1C]
	0x035D5AB0 CBZ X8, 0x35D62C0
	0x035D5AB4 LDRSW X10, [X0 + 0x18]
	0x035D5AB8 LDR W11, [X8 + 0x18]
	0x035D5ABC CMP W10, W11
	0x035D5AC0 B.CS 0x35D5B58
	0x035D5AC4 ADD W9, W10, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xE0C000
	009 Move X23, 0xB47000
	010 Move W8, [X24+548]
	011 Move X23, [X23+1520]
	012 Move X19, X4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB47000
	021 Move X0, [X0+1520]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+548], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X4, X31
	041 Move X30, [X31+64]
	042 Call Decimal.op_Equality, X0, X1
	043 Return X0

Method: System.UInt16 <.cctor>b__2_27(System.UInt16 a, System.UInt16 b)

Disassembly:
	0x035D5AC8 ADD X8, X8, X10, 0x3, LSL
	0x035D5ACC STR W9, [X0 + 0x18]

ISIL:
	001 Add W0, W2, W1
	002 Return X0

Method: System.UInt16 <.cctor>b__2_28(System.UInt16 a, System.UInt16 b)

Disassembly:
	0x035D5AD0 STR X23, [X8 + 0x20]
	0x035D5AD4 B 0x35D5B6C

ISIL:
	001 Multiply W0, W2, W1
	002 Return X0

Method: System.Boolean <.cctor>b__2_29(System.UInt16 a, System.UInt16 b)

Disassembly:
	0x035D5AD8 LDR X8, [X25]
	0x035D5ADC MOV X0, X25
	0x035D5AE0 LDP X9, X1, [X8 + 0x1A8]
	0x035D5AE4 BLR X9

ISIL:
	001 And W8, W1, 0xFFFF
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.UInt32 <.cctor>b__2_30(System.UInt32 a, System.UInt32 b)

Disassembly:
	0x035D5AE8 LDR X8, [X25]
	0x035D5AEC MOV X21, X0

ISIL:
	001 Add W0, W2, W1
	002 Return X0

Method: System.UInt32 <.cctor>b__2_31(System.UInt32 a, System.UInt32 b)

Disassembly:
	0x035D5AF0 MOV X0, X25
	0x035D5AF4 LDR X9, [X8 + 0x248]

ISIL:
	001 Multiply W0, W2, W1
	002 Return X0

Method: System.Boolean <.cctor>b__2_32(System.UInt32 a, System.UInt32 b)

Disassembly:
	0x035D5AF8 LDR X1, [X8 + 0x250]
	0x035D5AFC BLR X9
	0x035D5B00 ADRP X8, 0xB63000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.UInt64 <.cctor>b__2_33(System.UInt64 a, System.UInt64 b)

Disassembly:
	0x035D5B04 LDR X8, [X8 + 0xD30]
	0x035D5B08 MOV X2, X0

ISIL:
	001 Add X0, X2, X1
	002 Return X0

Method: System.UInt64 <.cctor>b__2_34(System.UInt64 a, System.UInt64 b)

Disassembly:
	0x035D5B0C MOV X1, X21
	0x035D5B10 MOV X3, X31

ISIL:
	001 Multiply X0, X2, X1
	002 Return X0

Method: System.Boolean <.cctor>b__2_35(System.UInt64 a, System.UInt64 b)

Disassembly:
	0x035D5B14 LDR X8, [X8]
	0x035D5B18 MOV X0, X8
	0x035D5B1C BL 0x3227BD4

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: UnityEngine.Vector2 <.cctor>b__2_36(UnityEngine.Vector2 a, UnityEngine.Vector2 b)

Disassembly:
	0x035D5B20 ADRP X8, 0xB1E000
	0x035D5B24 LDR X8, [X8 + 0xA28]
	0x035D5B28 ADRP X23, 0xB63000

ISIL:
	001 Add S0, S0, S2
	002 Add S1, S1, S3
	003 Return X0

Method: UnityEngine.Vector2 <.cctor>b__2_37(UnityEngine.Vector2 a, UnityEngine.Vector2 b)

Disassembly:
	0x035D5B2C MOV X21, X0
	0x035D5B30 LDR X8, [X8]
	0x035D5B34 LDR W9, [X8 + 0xE0]

ISIL:
	001 Multiply S0, S0, S2
	002 Multiply S1, S1, S3
	003 Return X0

Method: System.Boolean <.cctor>b__2_38(UnityEngine.Vector2 a, UnityEngine.Vector2 b)

Disassembly:
	0x035D5B38 LDR X23, [X23 + 0x670]
	0x035D5B3C CBNZ W9, 0x35D5B48
	0x035D5B40 MOV X0, X8
	0x035D5B44 BL 0x1C16DFC
	0x035D5B48 MOV X0, X21
	0x035D5B4C MOV X1, X31
	0x035D5B50 BL 0x3C06048
	0x035D5B54 B 0x35D56B8
	0x035D5B58 LDR X8, [X9 + 0x20]
	0x035D5B5C MOV X1, X23

ISIL:
	001 Move X8, -45002752
	002 Subtract S0, S0, S2
	003 Move V2, [X8+3872]
	004 Subtract S1, S1, S3
	005 Multiply S0, S0, S0
	006 Multiply S1, S1, S1
	007 Add S0, S0, S1
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Return X0

Method: UnityEngine.Vector3 <.cctor>b__2_39(UnityEngine.Vector3 a, UnityEngine.Vector3 b)

Disassembly:
	0x035D5B60 LDR X8, [X8 + 0xC0]
	0x035D5B64 LDR X2, [X8 + 0x70]
	0x035D5B68 BL 0x301BF90
	0x035D5B6C ADRP X8, 0xB63000

ISIL:
	001 Add S0, S0, S3
	002 Add S1, S1, S4
	003 Add S2, S2, S5
	004 Return X0

Method: System.Boolean <.cctor>b__2_40(UnityEngine.Vector3 a, UnityEngine.Vector3 b)

Disassembly:
	0x035D5B70 LDR X8, [X8 + 0xCA8]
	0x035D5B74 LDR X21, [X31 + 0xD0]
	0x035D5B78 LDR X0, [X8]
	0x035D5B7C LDR W8, [X0 + 0xE0]
	0x035D5B80 CBNZ W8, 0x35D5B88
	0x035D5B84 BL 0x1C16DFC
	0x035D5B88 MOV X0, X21
	0x035D5B8C BL 0x35D7EF8
	0x035D5B90 TBZ X0, 0x0, 0x35D5C4C
	0x035D5B94 LDR X8, [X25]
	0x035D5B98 MOV X0, X25
	0x035D5B9C STR X26, [X31 + 0x38]
	0x035D5BA0 MOV X26, X28

ISIL:
	001 Move X8, -45002752
	002 Subtract S0, S0, S3
	003 Subtract S1, S1, S4
	004 Move V3, [X8+3872]
	005 Subtract S2, S2, S5
	006 Multiply S0, S0, S0
	007 Multiply S1, S1, S1
	008 Add S0, S0, S1
	009 Multiply S1, S2, S2
	010 Add S0, S1, S0
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Return X0

Method: UnityEngine.Vector4 <.cctor>b__2_41(UnityEngine.Vector4 a, UnityEngine.Vector4 b)

Disassembly:
	0x035D5BA4 LDP X9, X1, [X8 + 0x1A8]
	0x035D5BA8 BLR X9
	0x035D5BAC ADRP X8, 0xB63000
	0x035D5BB0 LDR X21, [X31 + 0xD0]
	0x035D5BB4 LDR X8, [X8 + 0xD18]

ISIL:
	001 Add S0, S0, S4
	002 Add S1, S1, S5
	003 Add S2, S2, S6
	004 Add S3, S3, S7
	005 Return X0

Method: System.Boolean <.cctor>b__2_42(UnityEngine.Vector4 a, UnityEngine.Vector4 b)

Disassembly:
	0x035D5BB8 MOV X28, X0
	0x035D5BBC LDR X8, [X8]
	0x035D5BC0 MOV X0, X8
	0x035D5BC4 BL 0x1C16F10
	0x035D5BC8 ADRP X8, 0xB63000
	0x035D5BCC LDR X8, [X8 + 0xD00]
	0x035D5BD0 MOV X1, X28
	0x035D5BD4 MOV X2, X21
	0x035D5BD8 MOV X23, X0
	0x035D5BDC LDR X3, [X8]
	0x035D5BE0 BL 0x2703724
	0x035D5BE4 LDR X0, [X31 + 0x50]
	0x035D5BE8 CBZ X0, 0x35D62C0
	0x035D5BEC ADRP X9, 0xB63000
	0x035D5BF0 LDR W10, [X0 + 0x1C]
	0x035D5BF4 LDR X8, [X0 + 0x10]

ISIL:
	001 Subtract S0, S0, S4
	002 Subtract S1, S1, S5
	003 Move X8, -45002752
	004 Subtract S2, S2, S6
	005 Multiply S0, S0, S0
	006 Multiply S1, S1, S1
	007 Move V4, [X8+3872]
	008 Subtract S3, S3, S7
	009 Multiply S2, S2, S2
	010 Add S0, S0, S1
	011 Add S0, S2, S0
	012 Multiply S1, S3, S3
	013 Add S0, S1, S0
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0

Method: UnityEngine.Quaternion <.cctor>b__2_43(UnityEngine.Quaternion a, UnityEngine.Quaternion b)

Disassembly:
	0x035D5BF8 LDR X9, [X9 + 0xCF0]
	0x035D5BFC ADD W10, W10, 0x1
	0x035D5C00 LDR X9, [X9]
	0x035D5C04 STR W10, [X0 + 0x1C]
	0x035D5C08 CBZ X8, 0x35D62C0
	0x035D5C0C LDRSW X10, [X0 + 0x18]
	0x035D5C10 LDR W11, [X8 + 0x18]
	0x035D5C14 MOV X28, X26
	0x035D5C18 CMP W10, W11
	0x035D5C1C B.CS 0x35D5C34
	0x035D5C20 ADD W9, W10, 0x1
	0x035D5C24 ADD X8, X8, X10, 0x3, LSL
	0x035D5C28 STR W9, [X0 + 0x18]
	0x035D5C2C STR X23, [X8 + 0x20]
	0x035D5C30 B 0x35D5C48
	0x035D5C34 LDR X8, [X9 + 0x20]
	0x035D5C38 MOV X1, X23
	0x035D5C3C LDR X8, [X8 + 0xC0]
	0x035D5C40 LDR X2, [X8 + 0x70]
	0x035D5C44 BL 0x301BF90
	0x035D5C48 LDR X26, [X31 + 0x38]
	0x035D5C4C ADRP X8, 0xB1E000
	0x035D5C50 LDR X8, [X8 + 0x6C0]
	0x035D5C54 LDR X0, [X8]
	0x035D5C58 LDR W8, [X0 + 0xE0]
	0x035D5C5C CBNZ W8, 0x35D5C64
	0x035D5C60 BL 0x1C16DFC
	0x035D5C64 MOV X0, X26
	0x035D5C68 MOV X1, X31

ISIL:
	001 Multiply S16, S3, S4
	002 Multiply S17, S0, S7
	003 Multiply S18, S1, S6
	004 Multiply S19, S2, S5
	005 Multiply S20, S3, S5
	006 Multiply S21, S1, S7
	007 Multiply S22, S2, S4
	008 Multiply S23, S0, S6
	009 Multiply S24, S0, S5
	010 Multiply S0, S0, S4
	011 Multiply S4, S1, S4
	012 Multiply S1, S1, S5
	013 Multiply S5, S3, S6
	014 Multiply S3, S3, S7
	015 Multiply S7, S2, S7
	016 Multiply S6, S2, S6
	017 Add S2, S16, S17
	018 Add S16, S20, S21
	019 Add S5, S5, S7
	020 Subtract S0, S3, S0
	021 Add S2, S18, S2
	022 Add S3, S22, S16
	023 Add S5, S24, S5
	024 Subtract S7, S0, S1
	025 Subtract S0, S2, S19
	026 Subtract S1, S3, S23
	027 Subtract S2, S5, S4
	028 Subtract S3, S7, S6
	029 Return X0

Method: System.Boolean <.cctor>b__2_44(UnityEngine.Quaternion a, UnityEngine.Quaternion b)

Disassembly:
	0x035D5C6C MOV X2, X31
	0x035D5C70 BL 0x3395F0C
	0x035D5C74 TBZ X0, 0x0, 0x35D5D6C
	0x035D5C78 CBZ X26, 0x35D62C0
	0x035D5C7C LDR X8, [X26]
	0x035D5C80 MOV X0, X26
	0x035D5C84 LDR X9, [X8 + 0x588]
	0x035D5C88 LDR X1, [X8 + 0x590]
	0x035D5C8C BLR X9
	0x035D5C90 TBZ X0, 0x0, 0x35D5D6C
	0x035D5C94 LDR X0, [X31 + 0x48]
	0x035D5C98 CBZ X0, 0x35D62C0

ISIL:
	001 Multiply S0, S0, S4
	002 Multiply S1, S1, S5
	003 Move X8, -44998656
	004 Add S0, S0, S1
	005 Move V1, [X8+436]
	006 Multiply S2, S2, S6
	007 Add S0, S2, S0
	008 Multiply S2, S3, S7
	009 Add S0, S2, S0
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Return X0

Method: UnityEngine.Color <.cctor>b__2_45(UnityEngine.Color a, UnityEngine.Color b)

Disassembly:
	0x035D5C9C ADRP X9, 0xB28000
	0x035D5CA0 LDR W10, [X0 + 0x1C]
	0x035D5CA4 LDR X8, [X0 + 0x10]
	0x035D5CA8 LDR X9, [X9 + 0x938]
	0x035D5CAC ADD W10, W10, 0x1

ISIL:
	001 Add S0, S0, S4
	002 Add S1, S1, S5
	003 Add S2, S2, S6
	004 Add S3, S3, S7
	005 Return X0

Method: System.Boolean <.cctor>b__2_46(UnityEngine.Color a, UnityEngine.Color b)

Disassembly:
	0x035D5CB0 LDR X9, [X9]
	0x035D5CB4 STR W10, [X0 + 0x1C]
	0x035D5CB8 CBZ X8, 0x35D62C0
	0x035D5CBC LDRSW X10, [X0 + 0x18]
	0x035D5CC0 LDR W11, [X8 + 0x18]
	0x035D5CC4 CMP W10, W11
	0x035D5CC8 B.CS 0x35D5D58
	0x035D5CCC ADD W9, W10, 0x1
	0x035D5CD0 ADD X8, X8, X10, 0x3, LSL
	0x035D5CD4 STR W9, [X0 + 0x18]
	0x035D5CD8 STR X26, [X8 + 0x20]
	0x035D5CDC B 0x35D5D6C
	0x035D5CE0 LDR X8, [X9 + 0x20]
	0x035D5CE4 MOV X1, X23
	0x035D5CE8 LDR X8, [X8 + 0xC0]
	0x035D5CEC LDR X2, [X8 + 0x70]

ISIL:
	001 Subtract S0, S0, S4
	002 Subtract S1, S1, S5
	003 Move X8, -45002752
	004 Subtract S2, S2, S6
	005 Multiply S0, S0, S0
	006 Multiply S1, S1, S1
	007 Move V4, [X8+3872]
	008 Subtract S3, S3, S7
	009 Multiply S2, S2, S2
	010 Add S0, S0, S1
	011 Add S0, S2, S0
	012 Multiply S1, S3, S3
	013 Add S0, S1, S0
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0

Method: System.Boolean <.cctor>b__2_47(UnityEngine.Color32 a, UnityEngine.Color32 b)

Disassembly:
	0x035D5CF0 BL 0x301BF90
	0x035D5CF4 ADRP X23, 0xB63000
	0x035D5CF8 LDR W8, [X31 + 0x6C]
	0x035D5CFC LDR X23, [X23 + 0x670]

ISIL:
	001 Xor W8, W2, W1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean <.cctor>b__2_48(UnityEngine.Rect a, UnityEngine.Rect b)

Disassembly:
	0x035D5D00 TBNZ X8, 0x0, 0x35D5F08
	0x035D5D04 LDR X0, [X31 + 0x60]
	0x035D5D08 CBZ X0, 0x35D62C0
	0x035D5D0C ADRP X9, 0xB1F000
	0x035D5D10 LDR W10, [X0 + 0x1C]
	0x035D5D14 LDR X8, [X0 + 0x10]
	0x035D5D18 LDR X9, [X9 + 0x1B8]
	0x035D5D1C ADD W10, W10, 0x1
	0x035D5D20 LDR X9, [X9]
	0x035D5D24 STR W10, [X0 + 0x1C]

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 Move W0, W31
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0

Method: System.Boolean <.cctor>b__2_49(UnityEngine.Bounds a, UnityEngine.Bounds b)

Disassembly:
	0x035D5D28 CBZ X8, 0x35D62C0
	0x035D5D2C LDRSW X10, [X0 + 0x18]
	0x035D5D30 LDR W11, [X8 + 0x18]
	0x035D5D34 CMP W10, W11
	0x035D5D38 B.CS 0x35D5EF4
	0x035D5D3C ADD W9, W10, 0x1
	0x035D5D40 STR W9, [X0 + 0x18]
	0x035D5D44 LDR X9, [X31 + 0x20]
	0x035D5D48 ADD X8, X8, X10, 0x3, LSL
	0x035D5D4C STR W31, [X31 + 0x38]
	0x035D5D50 STR X9, [X8 + 0x20]
	0x035D5D54 B 0x35D56B8
	0x035D5D58 LDR X8, [X9 + 0x20]
	0x035D5D5C MOV X1, X26
	0x035D5D60 LDR X8, [X8 + 0xC0]
	0x035D5D64 LDR X2, [X8 + 0x70]
	0x035D5D68 BL 0x301BF90
	0x035D5D6C ADRP X8, 0xB1E000
	0x035D5D70 LDR X8, [X8 + 0x6C0]
	0x035D5D74 LDR X23, [X31 + 0xD0]
	0x035D5D78 LDR X0, [X8]
	0x035D5D7C LDR W8, [X0 + 0xE0]
	0x035D5D80 CBNZ W8, 0x35D5D88
	0x035D5D84 BL 0x1C16DFC
	0x035D5D88 MOV X0, X23
	0x035D5D8C MOV X1, X31
	0x035D5D90 MOV X2, X31
	0x035D5D94 BL 0x3395F0C
	0x035D5D98 TBZ X0, 0x0, 0x35D5E18
	0x035D5D9C LDR X0, [X31 + 0xD0]
	0x035D5DA0 CBZ X0, 0x35D62C0
	0x035D5DA4 LDR X8, [X0]
	0x035D5DA8 LDR X9, [X8 + 0x588]
	0x035D5DAC LDR X1, [X8 + 0x590]
	0x035D5DB0 BLR X9

ISIL:
	001 Move V0, [X1]
	002 Move V1, [X2]
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 Move X8, -45002752
	006 Subtract S1, S0, S1
	007 Move V0, [X8+3872]
	008 Subtract V2, V2, V3
	009 Multiply S1, S1, S1
	010 NotImplemented "Instruction INVALID not yet implemented."
	011 Add S1, S1, S2
	012 Move S2, V2.S[1]
	013 Add S1, S2, S1
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 Move V1, [X1+12]
	016 Move V2, [X1+16]
	017 Move V3, [X2+12]
	018 Move V4, [X2+16]
	019 Add S1, S1, S1
	020 Add V2, V2, V2
	021 Add S3, S3, S3
	022 Add V4, V4, V4
	023 Subtract S1, S1, S3
	024 Subtract V2, V2, V4
	025 Multiply S1, S1, S1
	026 NotImplemented "Instruction INVALID not yet implemented."
	027 Add S1, S1, S2
	028 Move S2, V2.S[1]
	029 Add S1, S2, S1
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Return X0
	033 Move W0, W31
	034 Return X0

