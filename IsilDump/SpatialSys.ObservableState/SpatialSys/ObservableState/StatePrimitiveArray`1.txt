Type: SpatialSys.ObservableState.StatePrimitiveArray`1

Method: System.Int32 get_childCount()

Disassembly:
	0x0261D3A8 LDR X8, [X8 + 0xC0]
	0x0261D3AC LDR X1, [X8 + 0x90]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<SpatialSys.ObservableState.IStateObject> get_childStateObjects()

Disassembly:
	0x0261D3B0 LDRB W8, [X1 + 0x135]
	0x0261D3B4 TBNZ X8, 0x0, 0x261D3C4
	0x0261D3B8 MOV X0, X1
	0x0261D3BC BL 0x1C5C684
	0x0261D3C0 MOV X1, X0
	0x0261D3C4 LDR X8, [X23]
	0x0261D3C8 LDRH W9, [X8 + 0x12E]
	0x0261D3CC CBZ X9, 0x261D3F0
	0x0261D3D0 LDR X10, [X8 + 0xB0]
	0x0261D3D4 ADD X10, X10, 0x8
	0x0261D3D8 LDUR X11, [X10 - 0x8]
	0x0261D3DC CMP X11, X1
	0x0261D3E0 B.EQ 0x261D400
	0x0261D3E4 SUBS X9, X9, 0x1
	0x0261D3E8 ADD X10, X10, 0x10
	0x0261D3EC B.NE 0x261D3D8
	0x0261D3F0 MOV X0, X23
	0x0261D3F4 MOV W2, W31
	0x0261D3F8 BL 0x1C5C788
	0x0261D3FC B 0x261D40C
	0x0261D400 LDRSW X9, [X10]
	0x0261D404 ADD X8, X8, X9, 0x4, LSL
	0x0261D408 ADD X0, X8, 0x138
	0x0261D40C LDP X8, X1, [X0]
	0x0261D410 MOV X0, X23
	0x0261D414 BLR X8
	0x0261D418 CMP W21, W0
	0x0261D41C B.GE 0x261D738
	0x0261D420 LDR X0, [X19 + 0x50]
	0x0261D424 CBZ X0, 0x261D894
	0x0261D428 LDR X8, [X20]
	0x0261D42C LDR X8, [X8 + 0xC0]
	0x0261D430 LDR X1, [X8 + 0x30]
	0x0261D434 LDR X8, [X1]
	0x0261D438 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1DBE000
	005 Move X20, 0x1B01000
	006 Move W8, [X19+66]
	007 Move X20, [X20+976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x1B01000
	013 Move X0, [X0+976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+66], W8
	017 Move X19, [X20]
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X8, [X19+56]
	024 Move X0, [X8+16]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X19+56]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X0, [X8]
	047 Move X30, [X31+32]
	048 Return X0

Method: System.Boolean get_isLeafObject()

Disassembly:
	0x0261D43C LDR X28, [X19 + 0x50]
	0x0261D440 CMP W21, W0

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_isIndexedCollection()

Disassembly:
	0x0261D444 B.GE 0x261D4E8
	0x0261D448 CBZ X28, 0x261D894

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_isDerivedState()

Disassembly:
	0x0261D44C LDR X8, [X20]
	0x0261D450 SUB X3, X29, 0x20

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Collections.Generic.IReadOnlyList`1<T> get_value()

Disassembly:
	0x0261D454 MOV X2, X28
	0x0261D458 MOV X4, X24

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_value(System.Collections.Generic.IReadOnlyList`1<T> value)

Disassembly:
	0x0261D45C LDR X8, [X8 + 0xC0]
	0x0261D460 LDR X1, [X8 + 0x20]
	0x0261D464 LDR X0, [X1]
	0x0261D468 STUR W21, [X29 - 0xC]
	0x0261D46C STP X27, X24, [X29 - 0x20]

ISIL:
	001 Move X8, [X2+32]
	002 Move X8, [X8+192]
	003 Move X2, [X8+24]
	004 Move X3, [X2]
	005 CallNoReturn X3

Method: System.Type get_valueType()

Disassembly:
	0x0261D470 LDR X8, [X1 + 0x10]
	0x0261D474 BLR X8

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Int32 get_valueTypeID()

Disassembly:
	0x0261D478 LDUR X2, [X29 - 0x30]
	0x0261D47C MOV X0, X22

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_valueTypeID(System.Int32 value)

Disassembly:
	0x0261D480 MOV X1, X24
	0x0261D484 BL 0x3EB1AC0

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.Byte get_syncRate()

Disassembly:
	0x0261D488 LDR X8, [X20]
	0x0261D48C LDR X8, [X8 + 0xC0]

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Void set_syncRate(System.Byte value)

Disassembly:
	0x0261D490 LDR X1, [X8 + 0x10]
	0x0261D494 LDRB W8, [X1 + 0x135]
	0x0261D498 TBNZ X8, 0x0, 0x261D4A8
	0x0261D49C MOV X0, X1
	0x0261D4A0 BL 0x1C5C684
	0x0261D4A4 MOV X1, X0
	0x0261D4A8 STUR W21, [X29 - 0xC]
	0x0261D4AC LDR X8, [X23]
	0x0261D4B0 LDRH W9, [X8 + 0x12E]
	0x0261D4B4 CBZ X9, 0x261D4D8
	0x0261D4B8 LDR X10, [X8 + 0xB0]
	0x0261D4BC ADD X10, X10, 0x8
	0x0261D4C0 LDUR X11, [X10 - 0x8]
	0x0261D4C4 CMP X11, X1
	0x0261D4C8 B.EQ 0x261D5B0
	0x0261D4CC SUBS X9, X9, 0x1
	0x0261D4D0 ADD X10, X10, 0x10
	0x0261D4D4 B.NE 0x261D4C0
	0x0261D4D8 MOV X0, X23
	0x0261D4DC MOV W2, W31
	0x0261D4E0 BL 0x1C5C788
	0x0261D4E4 B 0x261D5BC
	0x0261D4E8 LDR X8, [X20]
	0x0261D4EC LDR X8, [X8 + 0xC0]
	0x0261D4F0 LDR X1, [X8 + 0x10]
	0x0261D4F4 LDRB W8, [X1 + 0x135]
	0x0261D4F8 TBNZ X8, 0x0, 0x261D508
	0x0261D4FC MOV X0, X1
	0x0261D500 BL 0x1C5C684
	0x0261D504 MOV X1, X0
	0x0261D508 STUR W21, [X29 - 0xC]
	0x0261D50C LDR X8, [X23]
	0x0261D510 LDRH W9, [X8 + 0x12E]
	0x0261D514 CBZ X9, 0x261D538
	0x0261D518 LDR X10, [X8 + 0xB0]
	0x0261D51C ADD X10, X10, 0x8
	0x0261D520 LDUR X11, [X10 - 0x8]
	0x0261D524 CMP X11, X1
	0x0261D528 B.EQ 0x261D548
	0x0261D52C SUBS X9, X9, 0x1
	0x0261D530 ADD X10, X10, 0x10
	0x0261D534 B.NE 0x261D520
	0x0261D538 MOV X0, X23
	0x0261D53C MOV W2, W31
	0x0261D540 BL 0x1C5C788
	0x0261D544 B 0x261D554
	0x0261D548 LDRSW X9, [X10]
	0x0261D54C ADD X8, X8, X9, 0x4, LSL
	0x0261D550 ADD X0, X8, 0x138
	0x0261D554 STP X27, X24, [X29 - 0x20]
	0x0261D558 LDR X1, [X0 + 0x8]
	0x0261D55C SUB X3, X29, 0x20
	0x0261D560 MOV X2, X23
	0x0261D564 MOV X4, X24
	0x0261D568 LDP X0, X8, [X1 + 0x8]
	0x0261D56C BLR X8
	0x0261D570 CBZ X28, 0x261D894
	0x0261D574 LDR X8, [X20]
	0x0261D578 MOV X4, X24
	0x0261D57C LDR X8, [X8 + 0xC0]
	0x0261D580 LDR X9, [X8 + 0x28]
	0x0261D584 LDR W9, [X9 + 0x28]
	0x0261D588 TBNZ X9, 0x1F, 0x261D590
	0x0261D58C LDR X4, [X24]
	0x0261D590 LDR X1, [X8 + 0xC8]
	0x0261D594 SUB X3, X29, 0x20
	0x0261D598 MOV X2, X28
	0x0261D59C LDR X0, [X1]
	0x0261D5A0 STUR X4, [X29 - 0x20]
	0x0261D5A4 LDR X8, [X1 + 0x10]
	0x0261D5A8 BLR X8
	0x0261D5AC B 0x261D730
	0x0261D5B0 LDRSW X9, [X10]
	0x0261D5B4 ADD X8, X8, X9, 0x4, LSL
	0x0261D5B8 ADD X0, X8, 0x138
	0x0261D5BC STP X27, X25, [X29 - 0x20]
	0x0261D5C0 LDR X1, [X0 + 0x8]
	0x0261D5C4 SUB X3, X29, 0x20
	0x0261D5C8 MOV X2, X23
	0x0261D5CC MOV X4, X25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1DBE000
	006 Move W8, [X21+67]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x1AD7000
	014 Move X0, [X0+1704]
	015 Call 0x1C17CF4
	016 Move X0, 0x1B01000
	017 Move X0, [X0+792]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+67], W8
	021 Move W8, [X20+88]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 
	028 Move X21, [X20+48]
	029 Move [X20+88], W19
	030 Compare X21, 0
	031 JumpIfEqual {88}
	032 Move X10, 0x1B01000
	033 Move X8, [X21]
	034 Move X10, [X10+792]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X21
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X21
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {88}
	057 Move X10, 0x1AD7000
	058 Move X8, [X0]
	059 Move X10, [X10+1704]
	060 Move X21, X0
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 10
	072 Move X0, X21
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 10
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X4, [X0]
	079 Move X3, [X0+8]
	080 Move X1, X20
	081 Move W2, W19
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X0, X21
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 CallNoReturn X4
	088 Call 0x1C17F20

Method: T get_Item(System.Int32 index)

Disassembly:
	0x0261D5D0 LDP X0, X8, [X1 + 0x8]
	0x0261D5D4 BLR X8
	0x0261D5D8 LDR X8, [X20]
	0x0261D5DC LDR X9, [X8 + 0xC0]
	0x0261D5E0 LDR X8, [X9 + 0x28]
	0x0261D5E4 LDRB W10, [X8 + 0x135]
	0x0261D5E8 TBNZ X10, 0x0, 0x261D604
	0x0261D5EC MOV X0, X8
	0x0261D5F0 BL 0x1C5C684
	0x0261D5F4 LDR X8, [X20]
	0x0261D5F8 LDR X9, [X8 + 0xC0]
	0x0261D5FC LDR X8, [X9 + 0x28]
	0x0261D600 B 0x261D608
	0x0261D604 MOV X0, X8
	0x0261D608 LDR W10, [X8 + 0x28]
	0x0261D60C LDR X1, [X9 + 0xB8]
	0x0261D610 MOV X8, X25
	0x0261D614 TBNZ X10, 0x1F, 0x261D61C
	0x0261D618 LDR X8, [X25]
	0x0261D61C LDUR X2, [X29 - 0x38]
	0x0261D620 SUB X4, X29, 0x20
	0x0261D624 SUB X5, X29, 0xC
	0x0261D628 MOV X3, X22
	0x0261D62C MOV X26, X25
	0x0261D630 STUR X8, [X29 - 0x20]
	0x0261D634 MOV X25, X22
	0x0261D638 BL 0x1C17728
	0x0261D63C LDR X8, [X20]
	0x0261D640 LDR X28, [X19 + 0x50]
	0x0261D644 LDR X8, [X8 + 0xC0]
	0x0261D648 LDR X1, [X8 + 0x10]
	0x0261D64C LDURB W8, [X29 - 0xC]
	0x0261D650 LDRB W9, [X1 + 0x135]
	0x0261D654 CMP W8, 0x0
	0x0261D658 CSET W22, EQ
	0x0261D65C TBNZ X9, 0x0, 0x261D66C
	0x0261D660 MOV X0, X1
	0x0261D664 BL 0x1C5C684
	0x0261D668 MOV X1, X0
	0x0261D66C STUR W21, [X29 - 0xC]
	0x0261D670 LDR X8, [X23]
	0x0261D674 LDRH W9, [X8 + 0x12E]
	0x0261D678 CBZ X9, 0x261D69C
	0x0261D67C LDR X10, [X8 + 0xB0]
	0x0261D680 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 32
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X19, X2
	012 Move [X29-8], X8
	013 Move X8, [X3+32]
	014 Move X8, [X8+192]
	015 Move X9, [X8+40]
	016 Move W20, [X9+252]
	017 Add X9, X31, 0
	018 Add X10, X20, 15
	019 And X10, X10, 0x1FFFFFFFF
	020 Subtract X21, X9, X10
	021 Add X31, X21, 0
	022 Move X2, [X0+80]
	023 Compare X2, 0
	024 JumpIfEqual {51}
	025 Move X8, [X8+32]
	026 Subtract X9, X29, 12
	027 Subtract X3, X29, 32
	028 Move X4, X21
	029 Move X0, [X8]
	030 Move [X29-12], W1
	031 Move [X29-32], X9
	032 Move [X29-24], X21
	033 Move X9, [X8+16]
	034 Move X1, X8
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X0, X19
	037 Move X1, X21
	038 Move X2, X20
	039 Call 0x3EB2AC0
	040 Move X8, [X22+40]
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X31, X29, 0
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X29, [X31+48]
	049 Move X30, [X31+56]
	050 Return X0
	051 Call 0x1C17F20
	052 Call 0x3EB2B20

Method: System.Int32 get_Length()

Disassembly:
	0x0261D684 LDUR X11, [X10 - 0x8]
	0x0261D688 CMP X11, X1
	0x0261D68C B.EQ 0x261D6AC
	0x0261D690 SUBS X9, X9, 0x1
	0x0261D694 ADD X10, X10, 0x10
	0x0261D698 B.NE 0x261D684
	0x0261D69C MOV X0, X23
	0x0261D6A0 MOV W2, W31
	0x0261D6A4 BL 0x1C5C788
	0x0261D6A8 B 0x261D6B8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+48]
	008 Move X2, [X1]
	009 Move X30, [X31+16]
	010 CallNoReturn X2
	011 Call 0x1C17F20

Method: System.Object SpatialSys.ObservableState.IStatePrimitiveArray.get_Item(System.Int32 index)

Disassembly:
	0x0261D6AC LDRSW X9, [X10]
	0x0261D6B0 ADD X8, X8, X9, 0x4, LSL
	0x0261D6B4 ADD X0, X8, 0x138
	0x0261D6B8 LDUR X19, [X29 - 0x40]
	0x0261D6BC SUB X3, X29, 0x20
	0x0261D6C0 MOV X2, X23
	0x0261D6C4 STP X27, X19, [X29 - 0x20]
	0x0261D6C8 LDR X1, [X0 + 0x8]
	0x0261D6CC MOV X4, X19
	0x0261D6D0 LDP X0, X8, [X1 + 0x8]
	0x0261D6D4 BLR X8
	0x0261D6D8 CBZ X28, 0x261D894
	0x0261D6DC LDR X8, [X20]
	0x0261D6E0 MOV X4, X19
	0x0261D6E4 LDR X8, [X8 + 0xC0]
	0x0261D6E8 LDR X9, [X8 + 0x28]
	0x0261D6EC LDR W9, [X9 + 0x28]
	0x0261D6F0 TBNZ X9, 0x1F, 0x261D6F8
	0x0261D6F4 LDR X4, [X19]
	0x0261D6F8 LDR X1, [X8 + 0xC0]
	0x0261D6FC LDUR W9, [X29 - 0x24]
	0x0261D700 SUB X3, X29, 0x20
	0x0261D704 MOV X2, X28
	0x0261D708 LDR X0, [X1]
	0x0261D70C STUR W21, [X29 - 0xC]
	0x0261D710 STP X27, X4, [X29 - 0x20]
	0x0261D714 LDR X8, [X1 + 0x10]
	0x0261D718 ORR W9, W9, W22, 0x0
	0x0261D71C STUR W9, [X29 - 0x24]
	0x0261D720 BLR X8
	0x0261D724 LDUR X19, [X29 - 0x48]
	0x0261D728 MOV X22, X25
	0x0261D72C MOV X25, X26
	0x0261D730 ADD W21, W21, 0x1
	0x0261D734 B 0x261D3A4
	0x0261D738 LDUR X27, [X29 - 0x50]
	0x0261D73C LDUR W8, [X29 - 0x24]
	0x0261D740 TBZ X8, 0x0, 0x261D864
	0x0261D744 CBZ X19, 0x261D894
	0x0261D748 LDR X21, [X19 + 0x30]
	0x0261D74C MOVZ W8, 0x1
	0x0261D750 STRB W8, [X19 + 0x20]
	0x0261D754 CBZ X21, 0x261D894
	0x0261D758 ADRP X10, 0x1B00000
	0x0261D75C LDR X8, [X21]
	0x0261D760 LDR X10, [X10 + 0x318]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add X29, X31, 0
	007 Subtract X31, X31, 32
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Add X10, X31, 0
	011 Move X19, X2
	012 Move [X29-8], X8
	013 Move X8, [X2+32]
	014 Move X8, [X8+192]
	015 Move X9, [X8+40]
	016 Move W9, [X9+252]
	017 Add X9, X9, 15
	018 And X9, X9, 0x1FFFFFFFF
	019 Subtract X20, X10, X9
	020 Add X31, X20, 0
	021 Move X2, [X0+80]
	022 Compare X2, 0
	023 JumpIfEqual {50}
	024 Move X8, [X8+32]
	025 Subtract X9, X29, 12
	026 Subtract X3, X29, 32
	027 Move X4, X20
	028 Move X0, [X8]
	029 Move [X29-12], W1
	030 Move [X29-32], X9
	031 Move [X29-24], X20
	032 Move X9, [X8+16]
	033 Move X1, X8
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, [X19+32]
	036 Move X1, X20
	037 Move X8, [X8+192]
	038 Move X0, [X8+40]
	039 Call 0x1C17E04
	040 Move X8, [X21+40]
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X31, X29, 0
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X21, [X31+16]
	047 Move X29, [X31+48]
	048 Move X30, [X31+56]
	049 Return X0
	050 Call 0x1C17F20
	051 Call 0x3EB2B20

Method: System.Void .ctor()

Disassembly:
	0x0261D764 LDRH W9, [X8 + 0x12E]
	0x0261D768 LDR X1, [X10]
	0x0261D76C CBZ X9, 0x261D790
	0x0261D770 LDR X10, [X8 + 0xB0]
	0x0261D774 ADD X10, X10, 0x8
	0x0261D778 LDUR X11, [X10 - 0x8]
	0x0261D77C CMP X11, X1
	0x0261D780 B.EQ 0x261D7A0
	0x0261D784 SUBS X9, X9, 0x1
	0x0261D788 ADD X10, X10, 0x10
	0x0261D78C B.NE 0x261D778
	0x0261D790 MOV X0, X21
	0x0261D794 MOV W2, W31
	0x0261D798 BL 0x1C5C788
	0x0261D79C B 0x261D7AC
	0x0261D7A0 LDRSW X9, [X10]
	0x0261D7A4 ADD X8, X8, X9, 0x4, LSL
	0x0261D7A8 ADD X0, X8, 0x138
	0x0261D7AC LDP X8, X1, [X0]
	0x0261D7B0 MOV X0, X21
	0x0261D7B4 BLR X8
	0x0261D7B8 LDR X8, [X20]
	0x0261D7BC LDR X21, [X19 + 0x50]
	0x0261D7C0 MOV X22, X0
	0x0261D7C4 MOV X0, X19
	0x0261D7C8 LDR X8, [X8 + 0xC0]
	0x0261D7CC LDR X1, [X8 + 0x70]
	0x0261D7D0 LDR X8, [X1]
	0x0261D7D4 BLR X8
	0x0261D7D8 CBZ X22, 0x261D894
	0x0261D7DC LDR X8, [X20]
	0x0261D7E0 MOV W23, W0
	0x0261D7E4 LDR X9, [X8 + 0xC0]
	0x0261D7E8 LDR X8, [X22]
	0x0261D7EC LDR X20, [X9 + 0xD0]
	0x0261D7F0 LDRH W9, [X8 + 0x12E]
	0x0261D7F4 LDR X1, [X20 + 0x20]
	0x0261D7F8 LDRH W2, [X20 + 0x50]
	0x0261D7FC CBZ X9, 0x261D820
	0x0261D800 LDR X10, [X8 + 0xB0]
	0x0261D804 ADD X10, X10, 0x8
	0x0261D808 LDUR X11, [X10 - 0x8]
	0x0261D80C CMP X11, X1
	0x0261D810 B.EQ 0x261D82C
	0x0261D814 SUBS X9, X9, 0x1
	0x0261D818 ADD X10, X10, 0x10
	0x0261D81C B.NE 0x261D808
	0x0261D820 MOV X0, X22
	0x0261D824 BL 0x1C5C788
	0x0261D828 B 0x261D83C
	0x0261D82C LDR W9, [X10]
	0x0261D830 ADD W9, W9, W2
	0x0261D834 ADD X8, X8, W9, 0x4, SXTW
	0x0261D838 ADD X0, X8, 0x138
	0x0261D83C LDR X0, [X0 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1DBE000
	007 Move X21, 0x1AD7000
	008 Move W8, [X22+68]
	009 Move X21, [X21+1728]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x1B01000
	017 Move X0, [X0+784]
	018 Call 0x1C17CF4
	019 Move X0, 0x1AD7000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+68], W8
	024 Move X8, [X20+32]
	025 Move X0, [X21]
	026 Move X8, [X8+192]
	027 Move W9, [X0+224]
	028 Move X21, [X8+56]
	029 Compare W9, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X22, 0x1B01000
	033 Move X22, [X22+784]
	034 Move X0, X21
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Move [X19+64], X0
	038 Move X8, [X20+32]
	039 Move X8, [X8+192]
	040 Move X0, [X8+8]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Call 0x1C17F10
	048 Move X8, [X20+32]
	049 Move X20, X0
	050 Move X8, [X8+192]
	051 Move X1, [X8+64]
	052 Move X8, [X1]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move [X19+80], X20
	055 Move X0, [X22]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X1, X31
	066 Move X30, [X31+48]
	067 Call StateObjectBase..ctor, X0
	068 Return 

Method: System.Void .ctor(SpatialSys.ObservableState.IStateObject parent, System.String stateName)

Disassembly:
	0x0261D840 MOV X1, X20
	0x0261D844 BL 0x1C16DF8
	0x0261D848 LDR X8, [X0 + 0x8]
	0x0261D84C MOV X4, X0
	0x0261D850 MOV X0, X22
	0x0261D854 MOV X1, X19
	0x0261D858 MOV X2, X21
	0x0261D85C MOV W3, W23
	0x0261D860 BLR X8
	0x0261D864 LDR X8, [X27 + 0x28]
	0x0261D868 LDUR X9, [X29 - 0x8]
	0x0261D86C CMP X8, X9
	0x0261D870 B.NE 0x261D898
	0x0261D874 ADD X31, X29, 0x0
	0x0261D878 LDP X20, X19, [X31 + 0x50]
	0x0261D87C LDP X22, X21, [X31 + 0x40]
	0x0261D880 LDP X24, X23, [X31 + 0x30]
	0x0261D884 LDP X26, X25, [X31 + 0x20]
	0x0261D888 LDP X28, X27, [X31 + 0x10]
	0x0261D88C LDP X29, X30, [X31], #0x60
	0x0261D890 RET
	0x0261D894 BL 0x1C16F20
	0x0261D898 BL 0x3EB1B20
	0x0261D89C LDR X0, [X0 + 0x50]
	0x0261D8A0 RET
	0x0261D8A4 STR X30, [X31 - 0x30]!
	0x0261D8A8 STP X22, X21, [X31 + 0x10]
	0x0261D8AC STP X20, X19, [X31 + 0x20]
	0x0261D8B0 LDR X8, [X2 + 0x20]
	0x0261D8B4 MOV X20, X2
	0x0261D8B8 MOV X19, X0
	0x0261D8BC LDR X8, [X8 + 0xC0]
	0x0261D8C0 CBZ X1, 0x261D914
	0x0261D8C4 LDP X22, X8, [X8 + 0x10]
	0x0261D8C8 MOV X21, X1
	0x0261D8CC LDRB W9, [X22 + 0x135]
	0x0261D8D0 LDR X0, [X8]
	0x0261D8D4 STR X0, [X31 + 0x8]
	0x0261D8D8 TBNZ X9, 0x0, 0x261D8E8
	0x0261D8DC MOV X0, X22
	0x0261D8E0 BL 0x1C5C684
	0x0261D8E4 MOV X22, X0
	0x0261D8E8 MOV X0, X21
	0x0261D8EC MOV X1, X22
	0x0261D8F0 BL 0x1C16E00
	0x0261D8F4 CBZ X0, 0x261D974
	0x0261D8F8 LDR X8, [X20 + 0x20]
	0x0261D8FC LDR X3, [X31 + 0x8]
	0x0261D900 MOV X1, X0
	0x0261D904 MOV X0, X19
	0x0261D908 LDR X8, [X8 + 0xC0]
	0x0261D90C LDR X2, [X8 + 0x18]
	0x0261D910 B 0x261D964
	0x0261D914 LDR X0, [X8 + 0x88]
	0x0261D918 LDRB W8, [X0 + 0x135]
	0x0261D91C TBNZ X8, 0x0, 0x261D924
	0x0261D920 BL 0x1C5C684
	0x0261D924 LDR W8, [X0 + 0xE0]
	0x0261D928 CBNZ W8, 0x261D930
	0x0261D92C BL 0x1C16DFC
	0x0261D930 LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1DBE000
	009 Move X23, 0x1AD7000
	010 Move W8, [X24+69]
	011 Move X23, [X23+1728]
	012 Move X22, X3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x1B01000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move X0, 0x1AD7000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+69], W8
	028 Move X8, [X22+32]
	029 Move X0, [X23]
	030 Move X8, [X8+192]
	031 Move W9, [X0+224]
	032 Move X23, [X8+56]
	033 Compare W9, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X24, 0x1B01000
	037 Move X24, [X24+784]
	038 Move X0, X23
	039 Move X1, X31
	040 Call Type.GetTypeFromHandle, X0
	041 Move [X21+64], X0
	042 Move X8, [X22+32]
	043 Move X8, [X8+192]
	044 Move X0, [X8+8]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Call 0x1C17F10
	052 Move X8, [X22+32]
	053 Move X22, X0
	054 Move X8, [X8+192]
	055 Move X1, [X8+64]
	056 Move X8, [X1]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move [X21+80], X22
	059 Move X0, [X24]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X20
	066 Move X2, X19
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X3, X31
	074 Move X30, [X31+64]
	075 Call StateObjectBase..ctor, X0, X1, X2
	076 Return 

Method: System.Void InternalInitialize(SpatialSys.ObservableState.IStateObject parent, System.String stateName, System.Boolean serialize)

Disassembly:
	0x0261D934 LDR X8, [X8 + 0xC0]
	0x0261D938 LDR X0, [X8 + 0x88]
	0x0261D93C LDRB W9, [X0 + 0x135]
	0x0261D940 TBNZ X9, 0x0, 0x261D950
	0x0261D944 BL 0x1C5C684
	0x0261D948 LDR X8, [X20 + 0x20]
	0x0261D94C LDR X8, [X8 + 0xC0]
	0x0261D950 LDR X9, [X0 + 0xB8]
	0x0261D954 LDR X2, [X8 + 0x18]
	0x0261D958 MOV X0, X19
	0x0261D95C LDR X1, [X9]
	0x0261D960 LDR X3, [X2]
	0x0261D964 LDP X20, X19, [X31 + 0x20]
	0x0261D968 LDP X22, X21, [X31 + 0x10]
	0x0261D96C LDR X30, [X31], #0x30
	0x0261D970 BR X3
	0x0261D974 MOV X0, X21
	0x0261D978 MOV X1, X22
	0x0261D97C BL 0x1C171E0
	0x0261D980 STR X30, [X31 - 0x10]!
	0x0261D984 LDR X0, [X0 + 0x50]
	0x0261D988 CBZ X0, 0x261D9A4
	0x0261D98C LDR X8, [X1 + 0x20]
	0x0261D990 LDR X8, [X8 + 0xC0]
	0x0261D994 LDR X1, [X8 + 0xD8]
	0x0261D998 LDR X2, [X1]
	0x0261D99C LDR X30, [X31], #0x10
	0x0261D9A0 BR X2
	0x0261D9A4 BL 0x1C16F20
	0x0261D9A8 STP X29, X30, [X31 - 0x60]!
	0x0261D9AC STP X28, X27, [X31 + 0x10]
	0x0261D9B0 STP X26, X25, [X31 + 0x20]
	0x0261D9B4 STP X24, X23, [X31 + 0x30]
	0x0261D9B8 STP X22, X21, [X31 + 0x40]
	0x0261D9BC STP X20, X19, [X31 + 0x50]
	0x0261D9C0 ADD X29, X31, 0x0
	0x0261D9C4 SUB X31, X31, 0x40
	0x0261D9C8 STUR W2, [X29 - 0x3C]
	0x0261D9CC MRS X8, 0xC000
	0x0261D9D0 STUR X8, [X29 - 0x38]
	0x0261D9D4 LDR X8, [X8 + 0x28]
	0x0261D9D8 ADRP X20, 0x1DBD000
	0x0261D9DC MOV X19, X3
	0x0261D9E0 STUR X8, [X29 - 0x8]
	0x0261D9E4 LDRB W8, [X20 + 0x49]
	0x0261D9E8 STUR X0, [X29 - 0x20]
	0x0261D9EC TBNZ X8, 0x0, 0x261DA34
	0x0261D9F0 ADRP X0, 0x1B00000
	0x0261D9F4 LDR X0, [X0 + 0x370]
	0x0261D9F8 BL 0x1C16CF4
	0x0261D9FC ADRP X0, 0x1B00000
	0x0261DA00 LDR X0, [X0 + 0x400]
	0x0261DA04 BL 0x1C16CF4
	0x0261DA08 ADRP X0, 0x1AFE000
	0x0261DA0C LDR X0, [X0 + 0xBC0]
	0x0261DA10 BL 0x1C16CF4
	0x0261DA14 ADRP X0, 0x1B00000
	0x0261DA18 LDR X0, [X0 + 0x408]
	0x0261DA1C BL 0x1C16CF4
	0x0261DA20 ADRP X0, 0x1AE0000
	0x0261DA24 LDR X0, [X0 + 0xEC8]
	0x0261DA28 BL 0x1C16CF4
	0x0261DA2C MOVZ W8, 0x1
	0x0261DA30 STRB W8, [X20 + 0x49]
	0x0261DA34 LDR X8, [X19 + 0x20]
	0x0261DA38 ADRP X20, 0x1B00000
	0x0261DA3C LDR X8, [X8 + 0xC0]
	0x0261DA40 LDR X0, [X8 + 0xF8]
	0x0261DA44 LDR X8, [X8 + 0x28]
	0x0261DA48 LDR W24, [X0 + 0xFC]
	0x0261DA4C LDRB W9, [X0 + 0x135]
	0x0261DA50 LDR W25, [X8 + 0xFC]
	0x0261DA54 LDR X20, [X20 + 0x370]
	0x0261DA58 MOV W8, W24
	0x0261DA5C TBNZ X9, 0x0, 0x261DA68
	0x0261DA60 BL 0x1C5C684
	0x0261DA64 LDR W8, [X0 + 0xFC]
	0x0261DA68 ADD W8, W8, 0x10
	0x0261DA6C ADD X8, X8, 0xF
	0x0261DA70 ADD X9, X31, 0x0
	0x0261DA74 AND X8, X8, 0x1FFFFFFFF
	0x0261DA78 SUB X8, X9, X8
	0x0261DA7C STP X8, X24, [X29 - 0x30]
	0x0261DA80 ADD X31, X8, 0x0
	0x0261DA84 ADD X9, X25, 0xF
	0x0261DA88 ADD X8, X31, 0x0
	0x0261DA8C AND X21, X9, 0x1FFFFFFFF
	0x0261DA90 SUB X26, X8, X21
	0x0261DA94 ADD X31, X26, 0x0
	0x0261DA98 ADD X8, X31, 0x0
	0x0261DA9C SUB X27, X8, X21
	0x0261DAA0 ADD X31, X27, 0x0
	0x0261DAA4 ADD X9, X24, 0xF
	0x0261DAA8 ADD X8, X31, 0x0
	0x0261DAAC AND X9, X9, 0x1FFFFFFFF
	0x0261DAB0 SUB X22, X8, X9
	0x0261DAB4 ADD X31, X22, 0x0
	0x0261DAB8 ADD X8, X31, 0x0
	0x0261DABC SUB X23, X8, X9
	0x0261DAC0 ADD X31, X23, 0x0
	0x0261DAC4 MOV X0, X23
	0x0261DAC8 MOV W1, W31
	0x0261DACC MOV X2, X24
	0x0261DAD0 BL 0x3EB1B10
	0x0261DAD4 ADD X8, X31, 0x0
	0x0261DAD8 SUB X28, X8, X21
	0x0261DADC ADD X31, X28, 0x0
	0x0261DAE0 MOV X0, X28
	0x0261DAE4 MOV W1, W31
	0x0261DAE8 MOV X2, X25
	0x0261DAEC BL 0x3EB1B10
	0x0261DAF0 LDR X0, [X20]
	0x0261DAF4 BL 0x1C16F10
	0x0261DAF8 MOV X24, X0
	0x0261DAFC MOV X1, X31
	0x0261DB00 BL 0x35AE904
	0x0261DB04 LDUR X0, [X29 - 0x20]
	0x0261DB08 CBZ X0, 0x261DDCC
	0x0261DB0C LDR X8, [X0]
	0x0261DB10 LDR X1, [X8 + 0x330]
	0x0261DB14 LDR X9, [X8 + 0x328]
	0x0261DB18 BLR X9
	0x0261DB1C MOV X20, X0
	0x0261DB20 CBZ X0, 0x261DDD0
	0x0261DB24 LDR X8, [X19 + 0x20]
	0x0261DB28 LDR X9, [X8 + 0xC0]
	0x0261DB2C LDR X8, [X20]
	0x0261DB30 LDR X21, [X9 + 0xE0]
	0x0261DB34 LDRH W9, [X8 + 0x12E]
	0x0261DB38 LDR X1, [X21 + 0x20]
	0x0261DB3C LDRH W2, [X21 + 0x50]
	0x0261DB40 CBZ X9, 0x261DB64
	0x0261DB44 LDR X10, [X8 + 0xB0]
	0x0261DB48 ADD X10, X10, 0x8
	0x0261DB4C LDUR X11, [X10 - 0x8]
	0x0261DB50 CMP X11, X1
	0x0261DB54 B.EQ 0x261DB70
	0x0261DB58 SUBS X9, X9, 0x1
	0x0261DB5C ADD X10, X10, 0x10
	0x0261DB60 B.NE 0x261DB4C
	0x0261DB64 MOV X0, X20
	0x0261DB68 BL 0x1C5C788
	0x0261DB6C B 0x261DB80
	0x0261DB70 LDR W9, [X10]
	0x0261DB74 ADD W9, W9, W2
	0x0261DB78 ADD X8, X8, W9, 0x4, SXTW
	0x0261DB7C ADD X0, X8, 0x138
	0x0261DB80 LDR X0, [X0 + 0x8]
	0x0261DB84 MOV X1, X21
	0x0261DB88 BL 0x1C16DF8
	0x0261DB8C MOV X1, X0
	0x0261DB90 LDR X8, [X1 + 0x8]
	0x0261DB94 MOV X0, X20
	0x0261DB98 BLR X8
	0x0261DB9C LDUR X8, [X29 - 0x20]
	0x0261DBA0 LDR X2, [X8 + 0x50]
	0x0261DBA4 CBZ X2, 0x261DDD4
	0x0261DBA8 LDR X8, [X19 + 0x20]
	0x0261DBAC MOV X20, X0
	0x0261DBB0 LDR X8, [X8 + 0xC0]
	0x0261DBB4 LDR X1, [X8 + 0xF0]
	0x0261DBB8 LDR X0, [X1]
	0x0261DBBC STUR X22, [X29 - 0x18]
	0x0261DBC0 LDR X8, [X1 + 0x10]
	0x0261DBC4 SUB X3, X29, 0x18
	0x0261DBC8 MOV X4, X22
	0x0261DBCC BLR X8
	0x0261DBD0 LDUR X2, [X29 - 0x28]
	0x0261DBD4 MOV X0, X23
	0x0261DBD8 MOV X1, X22
	0x0261DBDC BL 0x3EB1AC0
	0x0261DBE0 LDR X8, [X19 + 0x20]
	0x0261DBE4 LDR X8, [X8 + 0xC0]
	0x0261DBE8 LDR X1, [X8 + 0x118]
	0x0261DBEC LDR X8, [X1]
	0x0261DBF0 MOV X0, X23
	0x0261DBF4 BLR X8
	0x0261DBF8 TBZ X0, 0x0, 0x261DCA4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x1DBE000
	011 Move X26, 0x1AD7000
	012 Move W8, [X24+70]
	013 Move X26, [X26+1728]
	014 Move X19, X4
	015 Move W23, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x1B01000
	024 Move X0, [X0+792]
	025 Call 0x1C17CF4
	026 Move X0, 0x1B01000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0x1AFF000
	030 Move X0, [X0+2912]
	031 Call 0x1C17CF4
	032 Move X0, 0x1AD7000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+70], W8
	037 Move X8, [X19+32]
	038 Move X0, [X26]
	039 Move X8, [X8+192]
	040 Move W9, [X0+224]
	041 Move X24, [X8+56]
	042 Compare W9, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X24
	046 Move X1, X31
	047 Call Type.GetTypeFromHandle, X0
	048 Compare X0, 0
	049 JumpIfEqual {168}
	050 Move X1, X31
	051 Move X24, X0
	052 Call Type.get_IsValueType, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {76}
	057 Move X8, 0x1AFF000
	058 Move X0, [X26]
	059 Move X8, [X8+2912]
	060 Move W9, [X0+224]
	061 Move X25, [X8]
	062 Compare W9, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X25
	066 Move X1, X31
	067 Call Type.GetTypeFromHandle, X0
	068 Move X1, X0
	069 Move X0, X24
	070 Move X2, X31
	071 Call Type.op_Inequality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {169}
	076 Compare X20, 0
	077 JumpIfEqual {168}
	078 And W3, W23, 1
	079 Move X0, X20
	080 Move X1, X22
	081 Move X2, X21
	082 Move X4, X31
	083 Call StateObjectBase.InternalInitialize, X0, X1, X2, X3
	084 Move X21, [X20+48]
	085 Compare X21, 0
	086 JumpIfEqual {168}
	087 Move X10, 0x1B01000
	088 Move X8, [X21]
	089 Move X10, [X10+792]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move W2, 1
	101 Move X0, X21
	102 Call 0x1C5D788
	103 Move W9, [X10]
	104 Add W9, W9, 1
	105 Add X8, X8, W9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X21
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X9, [X19+32]
	112 Move X8, [X26]
	113 Move X21, X0
	114 Move X9, [X9+192]
	115 Move W10, [X8+224]
	116 Move X22, [X9+72]
	117 Compare W10, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X8
	120 Call 0x1C17DFC
	121 Move X0, X22
	122 Move X1, X31
	123 Call Type.GetTypeFromHandle, X0
	124 Compare X21, 0
	125 JumpIfEqual {168}
	126 Move X10, 0x1B01000
	127 Move X8, [X21]
	128 Move X10, [X10+800]
	129 Move X22, X0
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move X1, [X10]
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move W2, 4
	141 Move X0, X21
	142 Call 0x1C5D788
	143 Move W9, [X10]
	144 Add W9, W9, 4
	145 Add X8, X8, W9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X2, [X0+8]
	149 Move X0, X21
	150 Move X1, X22
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, [X19+32]
	153 Move W1, W0
	154 Move X0, X20
	155 Move X20, [X31+64]
	156 Move X19, [X31+72]
	157 Move X8, [X8+192]
	158 Move X22, [X31+48]
	159 Move X21, [X31+56]
	160 Move X24, [X31+32]
	161 Move X23, [X31+40]
	162 Move X26, [X31+16]
	163 Move X25, [X31+24]
	164 Move X2, [X8+80]
	165 Move X3, [X2]
	166 Move X30, [X31+80]
	167 CallNoReturn X3
	168 Call 0x1C17F20
	169 Move X0, X24
	170 Call 0x19913C0
	171 Move X8, [X24]
	172 Move X0, X24
	173 Move X9, [X8+744]
	174 Move X1, [X8+752]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X20, X0
	177 Move X0, 0x1B01000
	178 Move X0, [X0+984]
	179 Call 0x1C17D08
	180 Move X21, X0
	181 Move X0, 0x1AD8000
	182 Move X0, [X0+1544]
	183 Call 0x1C17D08
	184 Move X2, X0
	185 Move X0, X21
	186 Move X1, X20
	187 Move X3, X31
	188 Call String.Concat, X0, X1, X2
	189 Move X20, X0
	190 Move X0, 0x1ADF000
	191 Move X0, [X0+1400]
	192 Call 0x1C17D08
	193 Call 0x1C17F10
	194 Move X1, X20
	195 Move X2, X31
	196 Move X21, X0
	197 Call ArgumentException..ctor, X0, X1
	198 Move X0, X21
	199 Move X1, X19
	200 Call 0x1C17DEC

Method: System.Void ApplyOperation(SpatialSys.ObservableState.IStateOperation operation)

Disassembly:
	0x0261DBFC LDR X8, [X19 + 0x20]
	0x0261DC00 LDR X8, [X8 + 0xC0]
	0x0261DC04 LDR X1, [X8 + 0x100]
	0x0261DC08 LDR X0, [X1]
	0x0261DC0C STUR X26, [X29 - 0x18]
	0x0261DC10 LDR X8, [X1 + 0x10]
	0x0261DC14 SUB X3, X29, 0x18
	0x0261DC18 MOV X2, X23
	0x0261DC1C MOV X4, X26
	0x0261DC20 BLR X8
	0x0261DC24 MOV X0, X28
	0x0261DC28 MOV X1, X26
	0x0261DC2C MOV X2, X25
	0x0261DC30 BL 0x3EB1AC0
	0x0261DC34 MOV X0, X27
	0x0261DC38 MOV X1, X28
	0x0261DC3C MOV X2, X25
	0x0261DC40 BL 0x3EB1AC0
	0x0261DC44 CBZ X20, 0x261DDC4
	0x0261DC48 LDR X8, [X19 + 0x20]
	0x0261DC4C LDR X8, [X8 + 0xC0]
	0x0261DC50 LDR X9, [X8 + 0x28]
	0x0261DC54 LDR W10, [X9 + 0x28]
	0x0261DC58 MOV X9, X27
	0x0261DC5C TBNZ X10, 0x1F, 0x261DC64
	0x0261DC60 LDR X9, [X27]
	0x0261DC64 LDR X1, [X8 + 0x110]
	0x0261DC68 LDR X0, [X1]
	0x0261DC6C STUR X9, [X29 - 0x18]
	0x0261DC70 LDR X8, [X1 + 0x10]
	0x0261DC74 SUB X3, X29, 0x18
	0x0261DC78 SUB X4, X29, 0x10
	0x0261DC7C MOV X2, X20
	0x0261DC80 BLR X8
	0x0261DC84 CBZ X24, 0x261DDC8
	0x0261DC88 LDR X8, [X24]
	0x0261DC8C LDUR X1, [X29 - 0x10]
	0x0261DC90 LDR X9, [X8 + 0x288]
	0x0261DC94 LDR X2, [X8 + 0x290]
	0x0261DC98 MOV X0, X24
	0x0261DC9C BLR X9
	0x0261DCA0 B 0x261DBE0
	0x0261DCA4 LDUR X25, [X29 - 0x20]
	0x0261DCA8 MOV X20, X31
	0x0261DCAC LDR X8, [X19 + 0x20]
	0x0261DCB0 LDR X8, [X8 + 0xC0]
	0x0261DCB4 LDR X0, [X8 + 0xF8]
	0x0261DCB8 LDRB W9, [X0 + 0x135]
	0x0261DCBC TBNZ X9, 0x0, 0x261DCCC
	0x0261DCC0 BL 0x1C5C684
	0x0261DCC4 LDR X8, [X19 + 0x20]
	0x0261DCC8 LDR X8, [X8 + 0xC0]
	0x0261DCCC LDR X1, [X8 + 0x120]
	0x0261DCD0 LDUR X2, [X29 - 0x30]
	0x0261DCD4 MOV X3, X23
	0x0261DCD8 MOV X4, X31
	0x0261DCDC MOV X5, X31
	0x0261DCE0 BL 0x1C17728
	0x0261DCE4 CBNZ X20, 0x261DDD8
	0x0261DCE8 LDRB W8, [X25 + 0x58]
	0x0261DCEC CBZ W8, 0x261DD88
	0x0261DCF0 LDUR W8, [X29 - 0x3C]
	0x0261DCF4 TBZ X8, 0x0, 0x261DD88
	0x0261DCF8 ADRP X8, 0x1AFE000
	0x0261DCFC LDR X8, [X8 + 0xBC0]
	0x0261DD00 LDR X0, [X8]
	0x0261DD04 BL 0x1C16F10
	0x0261DD08 MOV X20, X0
	0x0261DD0C MOV X1, X31
	0x0261DD10 BL 0x35AE864
	0x0261DD14 CBZ X20, 0x261DDE0
	0x0261DD18 ADRP X9, 0x1AE0000
	0x0261DD1C LDR X8, [X20]
	0x0261DD20 LDR X9, [X9 + 0xEC8]
	0x0261DD24 LDR X3, [X8 + 0x280]
	0x0261DD28 LDR X1, [X9]
	0x0261DD2C LDR X9, [X8 + 0x278]
	0x0261DD30 MOV X0, X20
	0x0261DD34 MOV X2, X24
	0x0261DD38 BLR X9
	0x0261DD3C ADRP X8, 0x1B00000
	0x0261DD40 LDRB W22, [X25 + 0x58]
	0x0261DD44 LDR X8, [X8 + 0x400]
	0x0261DD48 LDR X0, [X8]
	0x0261DD4C BL 0x1C16F10
	0x0261DD50 MOV X21, X0
	0x0261DD54 UCVTF D0, W22
	0x0261DD58 MOV X1, X31
	0x0261DD5C BL 0x35AD340
	0x0261DD60 ADRP X9, 0x1B00000
	0x0261DD64 LDR X8, [X20]
	0x0261DD68 LDR X9, [X9 + 0x408]
	0x0261DD6C LDR X3, [X8 + 0x280]
	0x0261DD70 LDR X1, [X9]
	0x0261DD74 LDR X9, [X8 + 0x278]
	0x0261DD78 MOV X0, X20
	0x0261DD7C MOV X2, X21
	0x0261DD80 BLR X9
	0x0261DD84 B 0x261DD8C
	0x0261DD88 MOV X20, X24
	0x0261DD8C LDUR X8, [X29 - 0x38]
	0x0261DD90 LDR X8, [X8 + 0x28]
	0x0261DD94 LDUR X9, [X29 - 0x8]
	0x0261DD98 CMP X8, X9
	0x0261DD9C B.NE 0x261DDE4
	0x0261DDA0 MOV X0, X20
	0x0261DDA4 ADD X31, X29, 0x0
	0x0261DDA8 LDP X20, X19, [X31 + 0x50]
	0x0261DDAC LDP X22, X21, [X31 + 0x40]
	0x0261DDB0 LDP X24, X23, [X31 + 0x30]
	0x0261DDB4 LDP X26, X25, [X31 + 0x20]
	0x0261DDB8 LDP X28, X27, [X31 + 0x10]
	0x0261DDBC LDP X29, X30, [X31], #0x60
	0x0261DDC0 RET
	0x0261DDC4 BL 0x1C16F20
	0x0261DDC8 BL 0x1C16F20
	0x0261DDCC BL 0x1C16F20
	0x0261DDD0 BL 0x1C16F20
	0x0261DDD4 BL 0x1C16F20
	0x0261DDD8 MOV X0, X20
	0x0261DDDC BL 0x1C16F18
	0x0261DDE0 BL 0x1C16F20
	0x0261DDE4 BL 0x3EB1B20
	0x0261DDE8 B 0x261DE04
	0x0261DDEC B 0x261DE04
	0x0261DDF0 B 0x261DE04
	0x0261DDF4 B 0x261DE04
	0x0261DDF8 B 0x261DE04
	0x0261DDFC B 0x261DE04
	0x0261DE00 B 0x261DE04
	0x0261DE04 MOV X22, X1
	0x0261DE08 MOV X21, X0
	0x0261DE0C CMP W22, 0x1
	0x0261DE10 B.NE 0x261DF2C
	0x0261DE14 MOV X0, X21
	0x0261DE18 BL 0x3EB1AD0
	0x0261DE1C MOV X20, X0
	0x0261DE20 ADRP X0, 0x1AD6000
	0x0261DE24 LDR X0, [X0 + 0x7D0]
	0x0261DE28 BL 0x1C16D08
	0x0261DE2C LDR X8, [X20]
	0x0261DE30 LDR X1, [X8]
	0x0261DE34 BL 0x1C17270
	0x0261DE38 TBZ X0, 0x0, 0x261DF04
	0x0261DE3C LDR X20, [X20]
	0x0261DE40 BL 0x3EB1AE0
	0x0261DE44 LDUR X21, [X29 - 0x20]
	0x0261DE48 MOV X0, X21
	0x0261DE4C BL 0x19903C0
	0x0261DE50 LDR X8, [X19 + 0x20]
	0x0261DE54 ADRP X0, 0x1AD6000
	0x0261DE58 LDR X21, [X21 + 0x18]
	0x0261DE5C LDR X8, [X8 + 0xC0]
	0x0261DE60 LDR X22, [X8 + 0x128]
	0x0261DE64 LDR X0, [X0 + 0x6C0]
	0x0261DE68 BL 0x1C16D08
	0x0261DE6C BL 0x19903D0
	0x0261DE70 MOV X0, X22
	0x0261DE74 MOV X1, X31
	0x0261DE78 BL 0x338C698
	0x0261DE7C MOV X22, X0
	0x0261DE80 BL 0x19903C0
	0x0261DE84 LDR X8, [X22]
	0x0261DE88 MOV X0, X22
	0x0261DE8C LDR X9, [X8 + 0x2E8]
	0x0261DE90 LDR X1, [X8 + 0x2F0]
	0x0261DE94 BLR X9
	0x0261DE98 MOV X22, X0
	0x0261DE9C ADRP X0, 0x1B00000
	0x0261DEA0 LDR X0, [X0 + 0x410]
	0x0261DEA4 BL 0x1C16D08
	0x0261DEA8 MOV X23, X0
	0x0261DEAC ADRP X0, 0x1B00000
	0x0261DEB0 LDR X0, [X0 + 0x418]
	0x0261DEB4 BL 0x1C16D08
	0x0261DEB8 MOV X2, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1DBE000
	009 Move W8, [X22+71]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x1AD7000
	018 Move X0, [X0+1872]
	019 Call 0x1C17CF4
	020 Move X0, 0x1B01000
	021 Move X0, [X0+992]
	022 Call 0x1C17CF4
	023 Move X0, 0x1B01000
	024 Move X0, [X0+1000]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+71], W8
	028 Compare X21, 0
	029 JumpIfEqual {142}
	030 Move X10, 0x1AD7000
	031 Move X8, [X21]
	032 Move X10, [X10+1872]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 2
	044 Move X0, X21
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 2
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X21
	053 NotImplemented "Instruction BLR not yet implemented."
	054 And W8, W0, 255
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X19+32]
	059 Move X8, [X8+192]
	060 Move X0, [X8+88]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X21]
	068 Move W10, [X0+304]
	069 Move W9, [X8+304]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X11, [X8+200]
	072 Add X10, X11, X10
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X10, [X19+32]
	076 Move X10, [X10+192]
	077 Move X0, [X10+88]
	078 Move X22, [X10+96]
	079 Move W10, [X0+309]
	080 Move X23, [X22]
	081 Move TEMP, X10
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {88}
	085 Call 0x1C5D684
	086 Move X8, [X21]
	087 Move W9, [X8+304]
	088 Move W10, [X0+304]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X2, X31
	091 Move X8, 0x1B01000
	092 Move X8, [X8+1000]
	093 Move X9, [X21]
	094 Move X8, [X8]
	095 Move W11, [X9+304]
	096 Move W10, [X8+304]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, [X9+200]
	099 Add X9, X9, X10
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X19+32]
	103 Move W1, [X21+25]
	104 Move X0, X20
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X8, [X8+192]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X30, [X31+16]
	111 Move X23, [X31+24]
	112 Move X2, [X8+104]
	113 Move X3, [X2]
	114 Add X31, X31, 64
	115 CallNoReturn X3
	116 Move X8, [X8+200]
	117 Add X8, X8, X10
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 Move X8, [X22+16]
	122 Add X4, X31, 8
	123 Move X0, X23
	124 Move X1, X22
	125 Move X3, X31
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X8, [X19+32]
	128 Move X1, [X31+8]
	129 Move X0, X20
	130 Move X8, [X8+192]
	131 Move X2, [X8+24]
	132 Move X8, [X2]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X30, [X31+16]
	139 Move X23, [X31+24]
	140 Add X31, X31, 64
	141 Return 
	142 Call 0x1C17F20
	143 Move X0, X21
	144 Call 0x19913C0
	145 Move X0, 0x1AD7000
	146 Move X0, [X0+1872]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move W0, 2
	150 Move X2, X21
	151 Call 0x19973F0
	152 Move [X31+4], W0
	153 Move X0, 0x1B01000
	154 Move X0, [X0+808]
	155 Call 0x1C17D08
	156 Add X1, X31, 4
	157 Call 0x1C17E04
	158 Move X21, X0
	159 Move X0, X20
	160 Call 0x19913C0
	161 Move X0, 0x1B01000
	162 Move X20, [X20+24]
	163 Move X0, [X0+1008]
	164 Call 0x1C17D08
	165 Move X22, X0
	166 Move X0, 0x1B01000
	167 Move X0, [X0+1016]
	168 Call 0x1C17D08
	169 Move X2, X0
	170 Move X0, X22
	171 Move X1, X21
	172 Move X3, X20
	173 Move X4, X31
	174 Call String.Format, X0, X1, X2, X3
	175 Move X20, X0
	176 Move X0, 0x1AD7000
	177 Move X0, [X0+1456]
	178 Call 0x1C17D08
	179 Call 0x1C17F10
	180 Move X1, X20
	181 Move X2, X31
	182 Move X21, X0
	183 Call InvalidOperationException..ctor, X0, X1
	184 Move X0, X21
	185 Move X1, X19
	186 Call 0x1C17DEC

Method: SpatialSys.ObservableState.IStateOperation AllocateSetOperationWithCurrentValue(SpatialSys.ObservableState.StateOperationPool pool)

Disassembly:
	0x0261DEBC MOV X0, X23
	0x0261DEC0 MOV X1, X21
	0x0261DEC4 MOV X3, X22
	0x0261DEC8 MOV X4, X31
	0x0261DECC BL 0x32277C4
	0x0261DED0 MOV X21, X0
	0x0261DED4 ADRP X0, 0x1AFF000
	0x0261DED8 LDR X0, [X0 + 0x660]
	0x0261DEDC BL 0x1C16D08
	0x0261DEE0 BL 0x1C16F10
	0x0261DEE4 MOV X1, X21
	0x0261DEE8 MOV X2, X20
	0x0261DEEC MOV X3, X31
	0x0261DEF0 MOV X22, X0
	0x0261DEF4 BL 0x35C99E4
	0x0261DEF8 MOV X0, X22
	0x0261DEFC MOV X1, X19
	0x0261DF00 BL 0x1C16DEC
	0x0261DF04 MOVZ W0, 0x8
	0x0261DF08 BL 0x3EB1AF0
	0x0261DF0C LDR X8, [X20]
	0x0261DF10 STR X8, [X0]
	0x0261DF14 ADRP X1, 0x1897000
	0x0261DF18 ADD X1, X1, 0xE58
	0x0261DF1C MOV X2, X31
	0x0261DF20 BL 0x3EB1B00
	0x0261DF24 MOV X21, X0
	0x0261DF28 BL 0x3EB1AE0
	0x0261DF2C MOV X0, X21
	0x0261DF30 BL 0x1D2C690
	0x0261DF34 B 0x261DF44
	0x0261DF38 B 0x261DF44
	0x0261DF3C B 0x261DF44
	0x0261DF40 B 0x261DF44
	0x0261DF44 LDUR X25, [X29 - 0x20]
	0x0261DF48 MOV X22, X1
	0x0261DF4C MOV X21, X0
	0x0261DF50 CMP W22, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X8, [X2+32]
	008 Move X22, [X0+80]
	009 Move X19, X1
	010 Move X21, X2
	011 Move X8, [X8+192]
	012 Move X20, X0
	013 Move X8, [X8+112]
	014 Move X9, [X8]
	015 Move X1, X8
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X8, [X21+32]
	020 Move W9, 1
	021 Add X10, X31, 60
	022 Add X11, X31, 56
	023 Move X8, [X8+192]
	024 Add X3, X31, 8
	025 Add X4, X31, 40
	026 Move X2, X19
	027 Move X1, [X8+120]
	028 Move X8, [X1]
	029 Move [X31+60], W9
	030 Move [X31+56], W0
	031 Move [X31+8], X20
	032 Move [X31+16], X10
	033 Move [X31+24], X22
	034 Move [X31+32], X11
	035 Move X9, [X1+16]
	036 Move X0, X8
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X0, [X31+40]
	039 Move X30, [X31+48]
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Add X31, X31, 96
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void SetValueInternal(System.Collections.Generic.IReadOnlyList`1<T> newValue)

Disassembly:
	0x0261DF54 B.NE 0x261DF6C
	0x0261DF58 MOV X0, X21
	0x0261DF5C BL 0x3EB1AD0
	0x0261DF60 LDR X20, [X0]
	0x0261DF64 BL 0x3EB1AE0
	0x0261DF68 B 0x261DCAC
	0x0261DF6C MOV X20, X31
	0x0261DF70 B 0x261DF7C
	0x0261DF74 MOV X22, X1
	0x0261DF78 MOV X21, X0
	0x0261DF7C LDR X8, [X19 + 0x20]
	0x0261DF80 LDR X8, [X8 + 0xC0]
	0x0261DF84 LDR X0, [X8 + 0xF8]
	0x0261DF88 LDRB W9, [X0 + 0x135]
	0x0261DF8C TBNZ X9, 0x0, 0x261DF9C
	0x0261DF90 BL 0x1C5C684
	0x0261DF94 LDR X8, [X19 + 0x20]
	0x0261DF98 LDR X8, [X8 + 0xC0]
	0x0261DF9C LDR X1, [X8 + 0x120]
	0x0261DFA0 LDUR X2, [X29 - 0x30]
	0x0261DFA4 MOV X3, X23
	0x0261DFA8 MOV X4, X31
	0x0261DFAC MOV X5, X31
	0x0261DFB0 BL 0x1C17728
	0x0261DFB4 CBZ X20, 0x261DE0C
	0x0261DFB8 MOV X0, X20
	0x0261DFBC BL 0x1C16F18
	0x0261DFC0 BL 0x1990590
	0x0261DFC4 STP X29, X30, [X31 - 0x60]!
	0x0261DFC8 STP X28, X27, [X31 + 0x10]
	0x0261DFCC STP X26, X25, [X31 + 0x20]
	0x0261DFD0 STP X24, X23, [X31 + 0x30]
	0x0261DFD4 STP X22, X21, [X31 + 0x40]
	0x0261DFD8 STP X20, X19, [X31 + 0x50]
	0x0261DFDC ADD X29, X31, 0x0
	0x0261DFE0 SUB X31, X31, 0xA0
	0x0261DFE4 MRS X25, 0xC000
	0x0261DFE8 LDR X8, [X25 + 0x28]
	0x0261DFEC ADRP X21, 0x1DBD000
	0x0261DFF0 MOV X19, X2
	0x0261DFF4 MOV X23, X1
	0x0261DFF8 STUR X8, [X29 - 0x8]
	0x0261DFFC LDRB W8, [X21 + 0x4A]
	0x0261E000 MOV X20, X0
	0x0261E004 TBNZ X8, 0x0, 0x261E034
	0x0261E008 ADRP X0, 0x1AD6000
	0x0261E00C LDR X0, [X0 + 0x460]
	0x0261E010 BL 0x1C16CF4
	0x0261E014 ADRP X0, 0x1AFF000
	0x0261E018 LDR X0, [X0 + 0x408]
	0x0261E01C BL 0x1C16CF4
	0x0261E020 ADRP X0, 0x1ADF000
	0x0261E024 LDR X0, [X0 + 0xEC8]
	0x0261E028 BL 0x1C16CF4
	0x0261E02C MOVZ W8, 0x1
	0x0261E030 STRB W8, [X21 + 0x4A]
	0x0261E034 LDR X8, [X19 + 0x20]
	0x0261E038 LDR X8, [X8 + 0xC0]
	0x0261E03C LDR X8, [X8 + 0x28]
	0x0261E040 LDR W21, [X8 + 0xFC]
	0x0261E044 ADD X8, X31, 0x0
	0x0261E048 ADD X9, X21, 0xF
	0x0261E04C AND X9, X9, 0x1FFFFFFFF
	0x0261E050 SUB X22, X8, X9
	0x0261E054 ADD X31, X22, 0x0
	0x0261E058 MOVI V0.2D, 0x0
	0x0261E05C STUR X31, [X29 - 0x10]
	0x0261E060 STP V0, V0, [X29 - 0x30]
	0x0261E064 STP V0, V0, [X29 - 0x50]
	0x0261E068 CBZ X23, 0x261E32C
	0x0261E06C LDR X8, [X23]
	0x0261E070 LDR X1, [X8 + 0x250]
	0x0261E074 LDR X9, [X8 + 0x248]
	0x0261E078 MOV X0, X23
	0x0261E07C BLR X9
	0x0261E080 TBZ X0, 0x0, 0x261E0E0
	0x0261E084 ADRP X9, 0x1ADF000
	0x0261E088 LDR X8, [X23]
	0x0261E08C LDR X9, [X9 + 0xEC8]
	0x0261E090 LDR X1, [X9]
	0x0261E094 LDP X9, X2, [X8 + 0x1A8]
	0x0261E098 MOV X0, X23
	0x0261E09C BLR X9
	0x0261E0A0 ADRP X9, 0x1AFF000
	0x0261E0A4 LDR X8, [X23]
	0x0261E0A8 LDR X9, [X9 + 0x408]
	0x0261E0AC MOV X24, X0
	0x0261E0B0 LDR X1, [X9]
	0x0261E0B4 LDP X9, X2, [X8 + 0x1A8]
	0x0261E0B8 MOV X0, X23
	0x0261E0BC BLR X9
	0x0261E0C0 CBZ X0, 0x261E33C
	0x0261E0C4 LDR X8, [X0]
	0x0261E0C8 LDR X1, [X8 + 0x370]
	0x0261E0CC LDR X9, [X8 + 0x368]
	0x0261E0D0 BLR X9
	0x0261E0D4 MOV X23, X24
	0x0261E0D8 STRB W0, [X20 + 0x58]
	0x0261E0DC B 0x261E0E4
	0x0261E0E0 CBZ X20, 0x261E338
	0x0261E0E4 LDR X8, [X20]
	0x0261E0E8 LDR X1, [X8 + 0x330]
	0x0261E0EC LDR X9, [X8 + 0x328]
	0x0261E0F0 MOV X0, X20
	0x0261E0F4 BLR X9
	0x0261E0F8 MOV X24, X0
	0x0261E0FC STUR X25, [X29 - 0xA0]
	0x0261E100 CBZ X0, 0x261E330
	0x0261E104 LDR X8, [X19 + 0x20]
	0x0261E108 LDR X9, [X8 + 0xC0]
	0x0261E10C LDR X8, [X24]
	0x0261E110 LDR X25, [X9 + 0x130]
	0x0261E114 LDRH W9, [X8 + 0x12E]
	0x0261E118 LDR X1, [X25 + 0x20]
	0x0261E11C LDRH W2, [X25 + 0x50]
	0x0261E120 CBZ X9, 0x261E144
	0x0261E124 LDR X10, [X8 + 0xB0]
	0x0261E128 ADD X10, X10, 0x8
	0x0261E12C LDUR X11, [X10 - 0x8]
	0x0261E130 CMP X11, X1
	0x0261E134 B.EQ 0x261E150
	0x0261E138 SUBS X9, X9, 0x1
	0x0261E13C ADD X10, X10, 0x10
	0x0261E140 B.NE 0x261E12C
	0x0261E144 MOV X0, X24
	0x0261E148 BL 0x1C5C788
	0x0261E14C B 0x261E160
	0x0261E150 LDR W9, [X10]
	0x0261E154 ADD W9, W9, W2
	0x0261E158 ADD X8, X8, W9, 0x4, SXTW
	0x0261E15C ADD X0, X8, 0x138
	0x0261E160 LDR X0, [X0 + 0x8]
	0x0261E164 MOV X1, X25
	0x0261E168 BL 0x1C16DF8
	0x0261E16C MOV X1, X0
	0x0261E170 LDR X8, [X1 + 0x8]
	0x0261E174 MOV X0, X24
	0x0261E178 BLR X8
	0x0261E17C CBZ X23, 0x261E334
	0x0261E180 LDR X8, [X23]
	0x0261E184 MOV X24, X0
	0x0261E188 LDP X9, X1, [X8 + 0x1E8]
	0x0261E18C MOV X0, X23
	0x0261E190 BLR X9
	0x0261E194 LDR X8, [X19 + 0x20]
	0x0261E198 MOV W25, W0
	0x0261E19C LDR X8, [X8 + 0xC0]
	0x0261E1A0 LDR X0, [X8 + 0x140]
	0x0261E1A4 LDRB W8, [X0 + 0x135]
	0x0261E1A8 TBNZ X8, 0x0, 0x261E1B0
	0x0261E1AC BL 0x1C5C684
	0x0261E1B0 MOV W1, W25
	0x0261E1B4 BL 0x1C16D6C
	0x0261E1B8 LDR X8, [X23]
	0x0261E1BC MOV X25, X0
	0x0261E1C0 LDR X1, [X8 + 0x340]
	0x0261E1C4 LDR X9, [X8 + 0x338]
	0x0261E1C8 SUB X8, X29, 0x98
	0x0261E1CC MOV X0, X23
	0x0261E1D0 BLR X9
	0x0261E1D4 ADRP X28, 0x1AD6000
	0x0261E1D8 LDR X28, [X28 + 0x460]
	0x0261E1DC SUB X0, X29, 0x50
	0x0261E1E0 SUB X1, X29, 0x98
	0x0261E1E4 MOVZ W2, 0x48
	0x0261E1E8 BL 0x3EB1AC0
	0x0261E1EC MOVN W27, 0x0
	0x0261E1F0 SUB X0, X29, 0x50
	0x0261E1F4 MOV X1, X31
	0x0261E1F8 BL 0x35B4900
	0x0261E1FC TBZ X0, 0x0, 0x261E2C8
	0x0261E200 SUB X0, X29, 0x50
	0x0261E204 MOV X1, X31
	0x0261E208 BL 0x35B4830
	0x0261E20C MOV X23, X0
	0x0261E210 LDR X0, [X28]
	0x0261E214 MOV X26, X1
	0x0261E218 LDR W8, [X0 + 0xE0]
	0x0261E21C CBNZ W8, 0x261E224
	0x0261E220 BL 0x1C16DFC
	0x0261E224 MOV X0, X23
	0x0261E228 MOV X1, X26
	0x0261E22C MOV X2, X31
	0x0261E230 BL 0x35ADA20
	0x0261E234 CBZ X24, 0x261E320
	0x0261E238 LDR X8, [X19 + 0x20]
	0x0261E23C LDR X8, [X8 + 0xC0]
	0x0261E240 LDR X1, [X8 + 0x148]
	0x0261E244 LDR X8, [X1]
	0x0261E248 STP X0, X22, [X29 - 0x98]
	0x0261E24C LDR X9, [X1 + 0x10]
	0x0261E250 SUB X3, X29, 0x98
	0x0261E254 MOV X0, X8
	0x0261E258 MOV X2, X24
	0x0261E25C MOV X4, X22
	0x0261E260 BLR X9
	0x0261E264 CBZ X25, 0x261E324
	0x0261E268 LDR W9, [X25 + 0x18]
	0x0261E26C ADD W8, W27, 0x1
	0x0261E270 CMP W8, W9
	0x0261E274 B.CS 0x261E328
	0x0261E278 LDR X9, [X25]
	0x0261E27C SXTW X8, W8
	0x0261E280 MOV X1, X22
	0x0261E284 MOV X2, X21
	0x0261E288 LDR W9, [X9 + 0x104]
	0x0261E28C NOP
	0x0261E290 MADD X8, X9, X8, X25
	0x0261E294 ADD X0, X8, 0x20
	0x0261E298 BL 0x3EB1AC0
	0x0261E29C LDR X8, [X19 + 0x20]
	0x0261E2A0 LDR X8, [X8 + 0xC0]
	0x0261E2A4 LDR X0, [X8 + 0x28]
	0x0261E2A8 LDRB W8, [X0 + 0x135]
	0x0261E2AC TBNZ X8, 0x0, 0x261E2B4
	0x0261E2B0 BL 0x1C5C684
	0x0261E2B4 LDR W8, [X25 + 0x18]
	0x0261E2B8 ADD W27, W27, 0x1
	0x0261E2BC CMP W27, W8
	0x0261E2C0 B.CC 0x261E1F0
	0x0261E2C4 BL 0x1C16F28
	0x0261E2C8 LDR X8, [X19 + 0x20]
	0x0261E2CC LDR X8, [X8 + 0xC0]
	0x0261E2D0 LDR X2, [X8 + 0x18]
	0x0261E2D4 LDR X8, [X2]
	0x0261E2D8 MOV X0, X20
	0x0261E2DC MOV X1, X25
	0x0261E2E0 BLR X8
	0x0261E2E4 MOVZ W8, 0x1
	0x0261E2E8 STRB W8, [X20 + 0x20]
	0x0261E2EC LDUR X8, [X29 - 0xA0]
	0x0261E2F0 LDR X8, [X8 + 0x28]
	0x0261E2F4 LDUR X9, [X29 - 0x8]
	0x0261E2F8 CMP X8, X9
	0x0261E2FC B.NE 0x261E340
	0x0261E300 ADD X31, X29, 0x0
	0x0261E304 LDP X20, X19, [X31 + 0x50]
	0x0261E308 LDP X22, X21, [X31 + 0x40]
	0x0261E30C LDP X24, X23, [X31 + 0x30]
	0x0261E310 LDP X26, X25, [X31 + 0x20]
	0x0261E314 LDP X28, X27, [X31 + 0x10]
	0x0261E318 LDP X29, X30, [X31], #0x60
	0x0261E31C RET
	0x0261E320 BL 0x1C16F20
	0x0261E324 BL 0x1C16F20
	0x0261E328 BL 0x1C16F28
	0x0261E32C BL 0x1C16F20
	0x0261E330 BL 0x1C16F20
	0x0261E334 BL 0x1C16F20
	0x0261E338 BL 0x1C16F20
	0x0261E33C BL 0x1C16F20
	0x0261E340 BL 0x3EB1B20
	0x0261E344 B 0x261E38C
	0x0261E348 B 0x261E38C
	0x0261E34C B 0x261E38C
	0x0261E350 B 0x261E38C
	0x0261E354 B 0x261E38C
	0x0261E358 B 0x261E38C
	0x0261E35C B 0x261E38C
	0x0261E360 B 0x261E38C
	0x0261E364 B 0x261E38C
	0x0261E368 B 0x261E38C
	0x0261E36C B 0x261E38C
	0x0261E370 B 0x261E38C
	0x0261E374 B 0x261E38C
	0x0261E378 B 0x261E38C
	0x0261E37C B 0x261E38C
	0x0261E380 B 0x261E38C
	0x0261E384 B 0x261E38C
	0x0261E388 B 0x261E38C
	0x0261E38C MOV X21, X0
	0x0261E390 CMP W1, 0x1
	0x0261E394 B.NE 0x261E4AC
	0x0261E398 MOV X0, X21
	0x0261E39C BL 0x3EB1AD0
	0x0261E3A0 MOV X21, X0
	0x0261E3A4 ADRP X0, 0x1AD5000
	0x0261E3A8 LDR X0, [X0 + 0x7D0]
	0x0261E3AC BL 0x1C16D08
	0x0261E3B0 LDR X8, [X21]
	0x0261E3B4 LDR X1, [X8]
	0x0261E3B8 BL 0x1C17270
	0x0261E3BC TBZ X0, 0x0, 0x261E484
	0x0261E3C0 LDR X21, [X21]
	0x0261E3C4 BL 0x3EB1AE0
	0x0261E3C8 MOV X0, X20
	0x0261E3CC BL 0x19903C0
	0x0261E3D0 LDR X8, [X19 + 0x20]
	0x0261E3D4 ADRP X0, 0x1AD5000
	0x0261E3D8 LDR X20, [X20 + 0x18]
	0x0261E3DC LDR X8, [X8 + 0xC0]
	0x0261E3E0 LDR X22, [X8 + 0x128]
	0x0261E3E4 LDR X0, [X0 + 0x6C0]
	0x0261E3E8 BL 0x1C16D08
	0x0261E3EC BL 0x19903D0
	0x0261E3F0 MOV X0, X22
	0x0261E3F4 MOV X1, X31
	0x0261E3F8 BL 0x338C698
	0x0261E3FC MOV X22, X0
	0x0261E400 BL 0x19903C0
	0x0261E404 LDR X8, [X22]
	0x0261E408 MOV X0, X22
	0x0261E40C LDR X9, [X8 + 0x2E8]
	0x0261E410 LDR X1, [X8 + 0x2F0]
	0x0261E414 BLR X9
	0x0261E418 MOV X22, X0
	0x0261E41C ADRP X0, 0x1AFF000
	0x0261E420 LDR X0, [X0 + 0x420]
	0x0261E424 BL 0x1C16D08
	0x0261E428 MOV X23, X0
	0x0261E42C ADRP X0, 0x1AFF000
	0x0261E430 LDR X0, [X0 + 0x418]
	0x0261E434 BL 0x1C16D08
	0x0261E438 MOV X2, X0
	0x0261E43C MOV X0, X23
	0x0261E440 MOV X1, X20
	0x0261E444 MOV X3, X22
	0x0261E448 MOV X4, X31
	0x0261E44C BL 0x32277C4
	0x0261E450 MOV X20, X0
	0x0261E454 ADRP X0, 0x1AFE000
	0x0261E458 LDR X0, [X0 + 0x660]
	0x0261E45C BL 0x1C16D08
	0x0261E460 BL 0x1C16F10
	0x0261E464 MOV X1, X20
	0x0261E468 MOV X2, X21
	0x0261E46C MOV X3, X31
	0x0261E470 MOV X22, X0
	0x0261E474 BL 0x35C99E4
	0x0261E478 MOV X0, X22
	0x0261E47C MOV X1, X19
	0x0261E480 BL 0x1C16DEC
	0x0261E484 MOVZ W0, 0x8
	0x0261E488 BL 0x3EB1AF0
	0x0261E48C LDR X8, [X21]
	0x0261E490 STR X8, [X0]
	0x0261E494 ADRP X1, 0x1896000
	0x0261E498 ADD X1, X1, 0xE58
	0x0261E49C MOV X2, X31
	0x0261E4A0 BL 0x3EB1B00
	0x0261E4A4 MOV X21, X0
	0x0261E4A8 BL 0x3EB1AE0
	0x0261E4AC MOV X0, X21
	0x0261E4B0 BL 0x1D2C690
	0x0261E4B4 BL 0x1990590
	0x0261E4B8 STR X30, [X31 - 0x30]!
	0x0261E4BC STP X22, X21, [X31 + 0x10]
	0x0261E4C0 STP X20, X19, [X31 + 0x20]
	0x0261E4C4 ADRP X21, 0x1DBC000
	0x0261E4C8 LDRB W8, [X21 + 0x4B]
	0x0261E4CC MOV X19, X1
	0x0261E4D0 MOV X20, X0
	0x0261E4D4 TBNZ X8, 0x0, 0x261E510
	0x0261E4D8 ADRP X0, 0x1AFF000
	0x0261E4DC LDR X0, [X0 + 0x428]
	0x0261E4E0 BL 0x1C16CF4
	0x0261E4E4 ADRP X0, 0x1AFF000
	0x0261E4E8 LDR X0, [X0 + 0x430]
	0x0261E4EC BL 0x1C16CF4
	0x0261E4F0 ADRP X0, 0x1AD7000
	0x0261E4F4 LDR X0, [X0 + 0x3A0]
	0x0261E4F8 BL 0x1C16CF4
	0x0261E4FC ADRP X0, 0x1AFF000
	0x0261E500 LDR X0, [X0 + 0x438]
	0x0261E504 BL 0x1C16CF4
	0x0261E508 MOVZ W8, 0x1
	0x0261E50C STRB W8, [X21 + 0x4B]
	0x0261E510 CBZ X20, 0x261E5C4
	0x0261E514 MOV X0, X20
	0x0261E518 MOV X1, X31
	0x0261E51C BL 0x35D0294
	0x0261E520 MOV W22, W0
	0x0261E524 MOV X0, X20
	0x0261E528 MOV X1, X31
	0x0261E52C BL 0x33BE520
	0x0261E530 CBZ X0, 0x261E5C4
	0x0261E534 LDR X8, [X0]
	0x0261E538 LDP X9, X1, [X8 + 0x1A8]
	0x0261E53C BLR X9
	0x0261E540 MOV X21, X0
	0x0261E544 TBZ X22, 0x0, 0x261E56C
	0x0261E548 ADRP X8, 0x1AFF000
	0x0261E54C LDR X8, [X8 + 0x438]
	0x0261E550 MOV X0, X21
	0x0261E554 LDP X20, X19, [X31 + 0x20]
	0x0261E558 LDP X22, X21, [X31 + 0x10]
	0x0261E55C LDR X1, [X8]
	0x0261E560 MOV X2, X31
	0x0261E564 LDR X30, [X31], #0x30
	0x0261E568 B 0x321B938
	0x0261E56C LDR X8, [X19 + 0x20]
	0x0261E570 LDR X1, [X20 + 0x50]
	0x0261E574 LDR X8, [X8 + 0xC0]
	0x0261E578 LDR X2, [X8 + 0x150]
	0x0261E57C ADRP X8, 0x1AD7000
	0x0261E580 LDR X8, [X8 + 0x3A0]
	0x0261E584 LDR X9, [X2]
	0x0261E588 LDR X0, [X8]
	0x0261E58C BLR X9
	0x0261E590 ADRP X8, 0x1AFF000
	0x0261E594 ADRP X9, 0x1AFF000
	0x0261E598 LDR X8, [X8 + 0x428]
	0x0261E59C LDR X9, [X9 + 0x430]
	0x0261E5A0 MOV X2, X0
	0x0261E5A4 MOV X0, X21
	0x0261E5A8 LDR X1, [X8]
	0x0261E5AC LDR X3, [X9]
	0x0261E5B0 LDP X20, X19, [X31 + 0x20]
	0x0261E5B4 LDP X22, X21, [X31 + 0x10]
	0x0261E5B8 MOV X4, X31
	0x0261E5BC LDR X30, [X31], #0x30
	0x0261E5C0 B 0x32277C4
	0x0261E5C4 BL 0x1C16F20
	0x0261E5C8 STP X30, X23, [X31 - 0x30]!
	0x0261E5CC STP X22, X21, [X31 + 0x10]
	0x0261E5D0 STP X20, X19, [X31 + 0x20]
	0x0261E5D4 ADRP X22, 0x1DBC000
	0x0261E5D8 ADRP X21, 0x1AD7000
	0x0261E5DC LDRB W8, [X22 + 0x4C]
	0x0261E5E0 LDR X21, [X21 + 0x3A0]
	0x0261E5E4 MOV X19, X2
	0x0261E5E8 MOV X20, X1
	0x0261E5EC TBNZ X8, 0x0, 0x261E61C
	0x0261E5F0 ADRP X0, 0x1AD7000
	0x0261E5F4 LDR X0, [X0 + 0x3A0]
	0x0261E5F8 BL 0x1C16CF4
	0x0261E5FC ADRP X0, 0x1AD5000
	0x0261E600 LDR X0, [X0 + 0xEC8]
	0x0261E604 BL 0x1C16CF4
	0x0261E608 ADRP X0, 0x1AD5000
	0x0261E60C LDR X0, [X0 + 0x848]
	0x0261E610 BL 0x1C16CF4
	0x0261E614 MOVZ W8, 0x1
	0x0261E618 STRB W8, [X22 + 0x4C]
	0x0261E61C LDR X8, [X19 + 0x20]
	0x0261E620 LDR X21, [X21]
	0x0261E624 LDR X8, [X8 + 0xC0]
	0x0261E628 LDR X9, [X8 + 0x150]
	0x0261E62C LDR X22, [X8 + 0x10]
	0x0261E630 LDR X23, [X9]
	0x0261E634 LDRB W8, [X22 + 0x135]
	0x0261E638 TBNZ X8, 0x0, 0x261E648
	0x0261E63C MOV X0, X22
	0x0261E640 BL 0x1C5C684
	0x0261E644 MOV X22, X0
	0x0261E648 CBZ X20, 0x261E66C
	0x0261E64C MOV X0, X20
	0x0261E650 MOV X1, X22
	0x0261E654 BL 0x1C16E00
	0x0261E658 MOV X1, X0
	0x0261E65C CBNZ X0, 0x261E670
	0x0261E660 MOV X0, X20
	0x0261E664 MOV X1, X22
	0x0261E668 BL 0x1C171E0
	0x0261E66C MOV X1, X31
	0x0261E670 LDR X8, [X19 + 0x20]
	0x0261E674 ADRP X19, 0x1AD5000
	0x0261E678 ADRP X20, 0x1AD5000
	0x0261E67C MOV X0, X21
	0x0261E680 LDR X8, [X8 + 0xC0]
	0x0261E684 LDR X2, [X8 + 0x150]
	0x0261E688 LDR X19, [X19 + 0xEC8]
	0x0261E68C LDR X20, [X20 + 0x848]
	0x0261E690 BLR X23
	0x0261E694 LDR X8, [X19]
	0x0261E698 LDR X2, [X20]
	0x0261E69C LDP X20, X19, [X31 + 0x20]
	0x0261E6A0 LDP X22, X21, [X31 + 0x10]
	0x0261E6A4 MOV X1, X0
	0x0261E6A8 MOV X0, X8
	0x0261E6AC MOV X3, X31
	0x0261E6B0 LDP X30, X23, [X31], #0x30
	0x0261E6B4 B 0x32274B8
	0x0261E6B8 STR X30, [X31 - 0x40]!
	0x0261E6BC STP X24, X23, [X31 + 0x10]
	0x0261E6C0 STP X22, X21, [X31 + 0x20]
	0x0261E6C4 STP X20, X19, [X31 + 0x30]
	0x0261E6C8 ADRP X24, 0x1DBC000
	0x0261E6CC ADRP X23, 0x1AD7000
	0x0261E6D0 ADRP X21, 0x1AD5000
	0x0261E6D4 ADRP X22, 0x1AD5000
	0x0261E6D8 LDRB W8, [X24 + 0x4D]
	0x0261E6DC LDR X23, [X23 + 0x3A0]
	0x0261E6E0 LDR X21, [X21 + 0xEC8]
	0x0261E6E4 LDR X22, [X22 + 0x848]
	0x0261E6E8 MOV X20, X1
	0x0261E6EC MOV X19, X0
	0x0261E6F0 TBNZ X8, 0x0, 0x261E720
	0x0261E6F4 ADRP X0, 0x1AD7000
	0x0261E6F8 LDR X0, [X0 + 0x3A0]
	0x0261E6FC BL 0x1C16CF4
	0x0261E700 ADRP X0, 0x1AD5000
	0x0261E704 LDR X0, [X0 + 0xEC8]
	0x0261E708 BL 0x1C16CF4
	0x0261E70C ADRP X0, 0x1AD5000
	0x0261E710 LDR X0, [X0 + 0x848]
	0x0261E714 BL 0x1C16CF4
	0x0261E718 MOVZ W8, 0x1
	0x0261E71C STRB W8, [X24 + 0x4D]
	0x0261E720 LDR X8, [X20 + 0x20]
	0x0261E724 LDR X1, [X19 + 0x50]
	0x0261E728 LDR X0, [X23]
	0x0261E72C LDR X8, [X8 + 0xC0]
	0x0261E730 LDR X2, [X8 + 0x150]
	0x0261E734 LDR X8, [X2]
	0x0261E738 BLR X8
	0x0261E73C LDR X8, [X21]
	0x0261E740 LDR X2, [X22]
	0x0261E744 LDP X20, X19, [X31 + 0x30]
	0x0261E748 LDP X22, X21, [X31 + 0x20]
	0x0261E74C LDP X24, X23, [X31 + 0x10]
	0x0261E750 MOV X1, X0
	0x0261E754 MOV X0, X8
	0x0261E758 MOV X3, X31
	0x0261E75C LDR X30, [X31], #0x40
	0x0261E760 B 0x32274B8
	0x0261E764 MOV W0, W31
	0x0261E768 STR X31, [X2]
	0x0261E76C RET
	0x0261E770 STR X30, [X31 - 0x20]!
	0x0261E774 STP X20, X19, [X31 + 0x10]
	0x0261E778 LDR X8, [X2 + 0x20]
	0x0261E77C MOV X20, X2
	0x0261E780 MOV W1, W31
	0x0261E784 MOV X19, X0
	0x0261E788 LDR X8, [X8 + 0xC0]
	0x0261E78C LDR X2, [X8 + 0x68]
	0x0261E790 LDR X8, [X2]
	0x0261E794 BLR X8
	0x0261E798 LDR X8, [X20 + 0x20]
	0x0261E79C LDR X8, [X8 + 0xC0]
	0x0261E7A0 LDR X0, [X8 + 0x88]
	0x0261E7A4 LDRB W8, [X0 + 0x135]
	0x0261E7A8 TBNZ X8, 0x0, 0x261E7B0
	0x0261E7AC BL 0x1C5C684
	0x0261E7B0 LDR W8, [X0 + 0xE0]
	0x0261E7B4 CBNZ W8, 0x261E7BC
	0x0261E7B8 BL 0x1C16DFC
	0x0261E7BC LDR X8, [X20 + 0x20]
	0x0261E7C0 LDR X8, [X8 + 0xC0]
	0x0261E7C4 LDR X0, [X8 + 0x88]
	0x0261E7C8 LDRB W9, [X0 + 0x135]
	0x0261E7CC TBNZ X9, 0x0, 0x261E7DC
	0x0261E7D0 BL 0x1C5C684
	0x0261E7D4 LDR X8, [X20 + 0x20]
	0x0261E7D8 LDR X8, [X8 + 0xC0]
	0x0261E7DC LDR X9, [X0 + 0xB8]
	0x0261E7E0 LDR X2, [X8 + 0x18]
	0x0261E7E4 MOV X0, X19
	0x0261E7E8 LDP X20, X19, [X31 + 0x10]
	0x0261E7EC LDR X1, [X9]
	0x0261E7F0 LDR X3, [X2]
	0x0261E7F4 LDR X30, [X31], #0x20
	0x0261E7F8 BR X3
	0x0261E7FC STP X29, X30, [X31 - 0x60]!
	0x0261E800 STP X28, X27, [X31 + 0x10]
	0x0261E804 STP X26, X25, [X31 + 0x20]
	0x0261E808 STP X24, X23, [X31 + 0x30]
	0x0261E80C STP X22, X21, [X31 + 0x40]
	0x0261E810 STP X20, X19, [X31 + 0x50]
	0x0261E814 ADD X29, X31, 0x0
	0x0261E818 SUB X31, X31, 0x30
	0x0261E81C MRS X28, 0xC000
	0x0261E820 LDR X8, [X28 + 0x28]
	0x0261E824 MOV X19, X2
	0x0261E828 MOV X26, X1
	0x0261E82C MOV X21, X0
	0x0261E830 STUR X8, [X29 - 0x8]
	0x0261E834 LDR X27, [X2 + 0x20]
	0x0261E838 LDR X8, [X27 + 0xC0]
	0x0261E83C LDR X8, [X8 + 0x28]
	0x0261E840 LDRB W9, [X8 + 0x135]
	0x0261E844 LDR W20, [X8 + 0xFC]
	0x0261E848 TBNZ X9, 0x0, 0x261E860
	0x0261E84C MOV X0, X8
	0x0261E850 BL 0x1C5C684
	0x0261E854 LDR W8, [X0 + 0xFC]
	0x0261E858 LDR X27, [X19 + 0x20]
	0x0261E85C B 0x261E864
	0x0261E860 MOV W8, W20
	0x0261E864 ADD W8, W8, 0x10
	0x0261E868 ADD X8, X8, 0xF
	0x0261E86C ADD X9, X31, 0x0
	0x0261E870 AND X8, X8, 0x1FFFFFFFF
	0x0261E874 SUB X22, X9, X8
	0x0261E878 ADD X31, X22, 0x0
	0x0261E87C ADD X9, X20, 0xF
	0x0261E880 ADD X8, X31, 0x0
	0x0261E884 AND X9, X9, 0x1FFFFFFFF
	0x0261E888 SUB X23, X8, X9
	0x0261E88C ADD X31, X23, 0x0
	0x0261E890 ADD X8, X31, 0x0
	0x0261E894 SUB X24, X8, X9
	0x0261E898 ADD X31, X24, 0x0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 80
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X27+40]
	017 Move X21, 0x1DBE000
	018 Move X20, X2
	019 Move X23, X1
	020 Move [X29-8], X8
	021 Move W8, [X21+72]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x1B01000
	028 Move X0, [X0+792]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+72], W8
	032 Add X20, X20, 32
	033 Move X8, [X20]
	034 Move X8, [X8+192]
	035 Move X0, [X8+40]
	036 Move W8, [X0+252]
	037 Move W9, [X0+309]
	038 Move [X29-48], X8
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {45}
	043 Call 0x1C5D684
	044 Move W8, [X0+252]
	045 Add W8, W8, 16
	046 Add X8, X8, 15
	047 Add X9, X31, 0
	048 And X8, X8, 0x1FFFFFFFF
	049 Subtract X8, X9, X8
	050 Move [X29-56], X8
	051 Add X31, X8, 0
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Add X8, X31, 0
	054 Add X9, X2, 15
	055 And X9, X9, 0x1FFFFFFFF
	056 Subtract X24, X8, X9
	057 Add X31, X24, 0
	058 Add X8, X31, 0
	059 Subtract X25, X8, X9
	060 Add X31, X25, 0
	061 Add X8, X31, 0
	062 Subtract X8, X8, X9
	063 Move [X29-64], X8
	064 Add X31, X8, 0
	065 Add X8, X31, 0
	066 Subtract X22, X8, X9
	067 Add X31, X22, 0
	068 Move X0, X22
	069 Move W1, W31
	070 Call 0x3EB2B10
	071 Compare X23, 0
	072 JumpIfNotEqual {99}
	073 Move X8, [X20]
	074 Move X8, [X8+192]
	075 Move X0, [X8+136]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X8, [X20]
	087 Move X8, [X8+192]
	088 Move X0, [X8+136]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move X8, [X0+184]
	096 Move X23, [X8]
	097 Compare X23, 0
	098 JumpIfEqual {664}
	099 Move X8, [X20]
	100 Move X8, [X8+192]
	101 Move X1, [X8+144]
	102 Move W8, [X1+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {110}
	107 Move X0, X1
	108 Call 0x1C5D684
	109 Move X1, X0
	110 Move X8, [X23]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move X0, X23
	121 Move W2, W31
	122 Call 0x1C5D788
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X23
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Compare W0, 0
	131 JumpIfNotEqual {142}
	132 Move X0, [X19+80]
	133 Compare X0, 0
	134 JumpIfEqual {664}
	135 Move X8, [X20]
	136 Move X8, [X8+192]
	137 Move X1, [X8+48]
	138 Move X8, [X1]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare W0, 0
	141 JumpIfEqual {647}
	142 Move X8, [X20]
	143 Move X8, [X8+192]
	144 Move X1, [X8+144]
	145 Move W8, [X1+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {153}
	150 Move X0, X1
	151 Call 0x1C5D684
	152 Move X1, X0
	153 Move X8, [X23]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X23
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X23
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X8, [X19+80]
	174 Compare X8, 0
	175 JumpIfEqual {664}
	176 Move X9, [X20]
	177 Move W28, W0
	178 Move X0, X8
	179 Move X9, [X9+192]
	180 Move X1, [X9+48]
	181 Move X9, [X1]
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X8, [X20]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction CSET not yet implemented."
	186 Move X8, [X8+192]
	187 Move X1, [X8+144]
	188 Move W8, [X1+309]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {196}
	193 Move X0, X1
	194 Call 0x1C5D684
	195 Move X1, X0
	196 Move X8, [X23]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move X0, X23
	207 Move W2, W31
	208 Call 0x1C5D788
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Add X8, X8, X9
	211 Add X0, X8, 312
	212 Move X8, [X0]
	213 Move X1, [X0+8]
	214 Move X0, X23
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X8, [X19+80]
	217 Compare X8, 0
	218 JumpIfEqual {664}
	219 Move X9, [X20]
	220 Move W28, W0
	221 Move X0, X8
	222 Move X9, [X9+192]
	223 Move X1, [X9+48]
	224 Move X9, [X1]
	225 NotImplemented "Instruction BLR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X8, [X20]
	228 Move X26, [X19+80]
	229 Move X8, [X8+192]
	230 Move X1, [X8+144]
	231 Move W8, [X1+309]
	232 Move TEMP, X8
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {239}
	236 Move X0, X1
	237 Call 0x1C5D684
	238 Move X1, X0
	239 Move X8, [X23]
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Compare X9, 0
	242 JumpIfEqual {249}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 Move X0, X23
	250 Move W2, W31
	251 Call 0x1C5D788
	252 NotImplemented "Instruction LDRSW not yet implemented."
	253 Add X8, X8, X9
	254 Add X0, X8, 312
	255 Move X8, [X0]
	256 Move X1, [X0+8]
	257 Move X0, X23
	258 NotImplemented "Instruction BLR not yet implemented."
	259 Move X8, [X19+80]
	260 Move [X29-36], W0
	261 Compare X8, 0
	262 JumpIfEqual {664}
	263 Move X9, [X20]
	264 Move X0, X8
	265 Move X9, [X9+192]
	266 Move X1, [X9+48]
	267 Move X9, [X1]
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move X8, [X20]
	270 Move W28, W0
	271 Move X8, [X8+192]
	272 Move X1, [X8+144]
	273 Move W8, [X1+309]
	274 Move TEMP, X8
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfEqual {281}
	278 Move X0, X1
	279 Call 0x1C5D684
	280 Move X1, X0
	281 Move X8, [X23]
	282 NotImplemented "Instruction LDRH not yet implemented."
	283 Compare X9, 0
	284 JumpIfEqual {291}
	285 Move X10, [X8+176]
	286 Add X10, X10, 8
	287 NotImplemented "Instruction LDUR not yet implemented."
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Subtract X9, X9, 1
	290 Add X10, X10, 16
	291 Move X0, X23
	292 Move W2, W31
	293 Call 0x1C5D788
	294 NotImplemented "Instruction LDRSW not yet implemented."
	295 Add X8, X8, X9
	296 Add X0, X8, 312
	297 Move X8, [X0]
	298 Move X1, [X0+8]
	299 Move X0, X23
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Compare X26, 0
	302 JumpIfEqual {664}
	303 Move X8, [X20]
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 Subtract W2, W28, W0
	306 Move X0, X26
	307 Move X8, [X8+192]
	308 Move X3, [X8+160]
	309 Move X8, [X3]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move [X29-36], W21
	312 Move [X29-80], X27
	313 Move [X29-72], X19
	314 Move W21, W31
	315 Subtract X27, X29, 12
	316 Move X8, [X20]
	317 Move X8, [X8+192]
	318 Move X1, [X8+144]
	319 Move W8, [X1+309]
	320 Move TEMP, X8
	321 And TEMP, TEMP, 1
	322 Compare TEMP, 1
	323 JumpIfEqual {327}
	324 Move X0, X1
	325 Call 0x1C5D684
	326 Move X1, X0
	327 Move X8, [X23]
	328 NotImplemented "Instruction LDRH not yet implemented."
	329 Compare X9, 0
	330 JumpIfEqual {337}
	331 Move X10, [X8+176]
	332 Add X10, X10, 8
	333 NotImplemented "Instruction LDUR not yet implemented."
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Subtract X9, X9, 1
	336 Add X10, X10, 16
	337 Move X0, X23
	338 Move W2, W31
	339 Call 0x1C5D788
	340 NotImplemented "Instruction LDRSW not yet implemented."
	341 Add X8, X8, X9
	342 Add X0, X8, 312
	343 Move X8, [X0]
	344 Move X1, [X0+8]
	345 Move X0, X23
	346 NotImplemented "Instruction BLR not yet implemented."
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X0, [X19+80]
	349 Compare X0, 0
	350 JumpIfEqual {664}
	351 Move X8, [X20]
	352 Move X8, [X8+192]
	353 Move X1, [X8+48]
	354 Move X8, [X1]
	355 NotImplemented "Instruction BLR not yet implemented."
	356 Move X28, [X19+80]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Compare X28, 0
	359 JumpIfEqual {664}
	360 Move X8, [X20]
	361 Subtract X3, X29, 32
	362 Move X2, X28
	363 Move X4, X24
	364 Move X8, [X8+192]
	365 Move X1, [X8+32]
	366 Move X0, [X1]
	367 Move [X29-12], W21
	368 Move [X29-32], X27
	369 Move [X29-24], X24
	370 Move X8, [X1+16]
	371 NotImplemented "Instruction BLR not yet implemented."
	372 NotImplemented "Instruction LDUR not yet implemented."
	373 Move X0, X22
	374 Move X1, X24
	375 Call 0x3EB2AC0
	376 Move X8, [X20]
	377 Move X8, [X8+192]
	378 Move X1, [X8+16]
	379 Move W8, [X1+309]
	380 Move TEMP, X8
	381 And TEMP, TEMP, 1
	382 Compare TEMP, 1
	383 JumpIfEqual {387}
	384 Move X0, X1
	385 Call 0x1C5D684
	386 Move X1, X0
	387 Move [X29-12], W21
	388 Move X8, [X23]
	389 NotImplemented "Instruction LDRH not yet implemented."
	390 Compare X9, 0
	391 JumpIfEqual {398}
	392 Move X10, [X8+176]
	393 Add X10, X10, 8
	394 NotImplemented "Instruction LDUR not yet implemented."
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Subtract X9, X9, 1
	397 Add X10, X10, 16
	398 Move X0, X23
	399 Move W2, W31
	400 Call 0x1C5D788
	401 Move X8, [X20]
	402 Move X8, [X8+192]
	403 Move X1, [X8+16]
	404 Move W8, [X1+309]
	405 Move TEMP, X8
	406 And TEMP, TEMP, 1
	407 Compare TEMP, 1
	408 JumpIfEqual {412}
	409 Move X0, X1
	410 Call 0x1C5D684
	411 Move X1, X0
	412 Move [X29-12], W21
	413 Move X8, [X23]
	414 NotImplemented "Instruction LDRH not yet implemented."
	415 Compare X9, 0
	416 JumpIfEqual {423}
	417 Move X10, [X8+176]
	418 Add X10, X10, 8
	419 NotImplemented "Instruction LDUR not yet implemented."
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Subtract X9, X9, 1
	422 Add X10, X10, 16
	423 Move X0, X23
	424 Move W2, W31
	425 Call 0x1C5D788
	426 NotImplemented "Instruction LDRSW not yet implemented."
	427 Add X8, X8, X9
	428 Add X0, X8, 312
	429 Move [X29-32], X27
	430 Move [X29-24], X24
	431 Move X1, [X0+8]
	432 Subtract X3, X29, 32
	433 Move X2, X23
	434 Move X4, X24
	435 Move X0, [X1+8]
	436 Move X8, [X1+16]
	437 NotImplemented "Instruction BLR not yet implemented."
	438 Compare X28, 0
	439 JumpIfEqual {664}
	440 Move X8, [X20]
	441 Move X4, X24
	442 Move X8, [X8+192]
	443 Move X9, [X8+40]
	444 Move W9, [X9+40]
	445 Move TEMP, X9
	446 And TEMP, TEMP, -2147483648
	447 Compare TEMP, -2147483648
	448 JumpIfEqual {450}
	449 Move X4, [X24]
	450 Move X1, [X8+200]
	451 Subtract X3, X29, 32
	452 Move X2, X28
	453 Move X0, [X1]
	454 Move [X29-32], X4
	455 Move X8, [X1+16]
	456 NotImplemented "Instruction BLR not yet implemented."
	457 NotImplemented "Instruction LDRSW not yet implemented."
	458 Add X8, X8, X9
	459 Add X0, X8, 312
	460 Move [X29-32], X27
	461 Move [X29-24], X25
	462 Move X1, [X0+8]
	463 Subtract X3, X29, 32
	464 Move X2, X23
	465 Move X4, X25
	466 Move X0, [X1+8]
	467 Move X8, [X1+16]
	468 NotImplemented "Instruction BLR not yet implemented."
	469 Move X8, [X20]
	470 Move X9, [X8+192]
	471 Move X8, [X9+40]
	472 Move W10, [X8+309]
	473 Move TEMP, X10
	474 And TEMP, TEMP, 1
	475 Compare TEMP, 1
	476 JumpIfEqual {482}
	477 Move X0, X8
	478 Call 0x1C5D684
	479 Move X8, [X20]
	480 Move X9, [X8+192]
	481 Move X8, [X9+40]
	482 Move X0, X8
	483 Move W10, [X8+40]
	484 Move X1, [X9+184]
	485 Move X8, X25
	486 Move TEMP, X10
	487 And TEMP, TEMP, -2147483648
	488 Compare TEMP, -2147483648
	489 JumpIfEqual {491}
	490 Move X8, [X25]
	491 NotImplemented "Instruction LDUR not yet implemented."
	492 Subtract X4, X29, 32
	493 Subtract X5, X29, 12
	494 Move X3, X22
	495 Move X26, X25
	496 Move [X29-32], X8
	497 Move X25, X22
	498 Call 0x1C18728
	499 Move X8, [X20]
	500 Move X28, [X19+80]
	501 Move X8, [X8+192]
	502 Move X1, [X8+16]
	503 NotImplemented "Instruction LDURB not yet implemented."
	504 Move W9, [X1+309]
	505 NotImplemented "Instruction CMP not yet implemented."
	506 NotImplemented "Instruction CSET not yet implemented."
	507 Move TEMP, X9
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfEqual {514}
	511 Move X0, X1
	512 Call 0x1C5D684
	513 Move X1, X0
	514 Move [X29-12], W21
	515 Move X8, [X23]
	516 NotImplemented "Instruction LDRH not yet implemented."
	517 Compare X9, 0
	518 JumpIfEqual {525}
	519 Move X10, [X8+176]
	520 Add X10, X10, 8
	521 NotImplemented "Instruction LDUR not yet implemented."
	522 NotImplemented "Instruction CMP not yet implemented."
	523 Subtract X9, X9, 1
	524 Add X10, X10, 16
	525 Move X0, X23
	526 Move W2, W31
	527 Call 0x1C5D788
	528 NotImplemented "Instruction LDRSW not yet implemented."
	529 Add X8, X8, X9
	530 Add X0, X8, 312
	531 NotImplemented "Instruction LDUR not yet implemented."
	532 Subtract X3, X29, 32
	533 Move X2, X23
	534 Move [X29-32], X27
	535 Move [X29-24], X19
	536 Move X1, [X0+8]
	537 Move X4, X19
	538 Move X0, [X1+8]
	539 Move X8, [X1+16]
	540 NotImplemented "Instruction BLR not yet implemented."
	541 Compare X28, 0
	542 JumpIfEqual {664}
	543 Move X8, [X20]
	544 Move X4, X19
	545 Move X8, [X8+192]
	546 Move X9, [X8+40]
	547 Move W9, [X9+40]
	548 Move TEMP, X9
	549 And TEMP, TEMP, -2147483648
	550 Compare TEMP, -2147483648
	551 JumpIfEqual {553}
	552 Move X4, [X19]
	553 Move X1, [X8+192]
	554 NotImplemented "Instruction LDUR not yet implemented."
	555 Subtract X3, X29, 32
	556 Move X2, X28
	557 Move X0, [X1]
	558 Move [X29-12], W21
	559 Move [X29-32], X27
	560 Move [X29-24], X4
	561 Move X8, [X1+16]
	562 Or W9, W9, W22
	563 Move [X29-36], W9
	564 NotImplemented "Instruction BLR not yet implemented."
	565 NotImplemented "Instruction LDUR not yet implemented."
	566 Move X22, X25
	567 Move X25, X26
	568 Add W21, W21, 1
	569 NotImplemented "Instruction LDUR not yet implemented."
	570 NotImplemented "Instruction LDUR not yet implemented."
	571 Move TEMP, X8
	572 And TEMP, TEMP, 1
	573 Compare TEMP, 1
	574 JumpIfNotEqual {647}
	575 Compare X19, 0
	576 JumpIfEqual {664}
	577 Move X21, [X19+48]
	578 Move W8, 1
	579 Move [X19+32], W8
	580 Compare X21, 0
	581 JumpIfEqual {664}
	582 Move X10, 0x1B00000
	583 Move X8, [X21]
	584 Move X10, [X10+792]
	585 NotImplemented "Instruction LDRH not yet implemented."
	586 Move X1, [X10]
	587 Compare X9, 0
	588 JumpIfEqual {595}
	589 Move X10, [X8+176]
	590 Add X10, X10, 8
	591 NotImplemented "Instruction LDUR not yet implemented."
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Subtract X9, X9, 1
	594 Add X10, X10, 16
	595 Move X0, X21
	596 Move W2, W31
	597 Call 0x1C5D788
	598 NotImplemented "Instruction LDRSW not yet implemented."
	599 Add X8, X8, X9
	600 Add X0, X8, 312
	601 Move X8, [X0]
	602 Move X1, [X0+8]
	603 Move X0, X21
	604 NotImplemented "Instruction BLR not yet implemented."
	605 Move X8, [X20]
	606 Move X21, [X19+80]
	607 Move X22, X0
	608 Move X0, X19
	609 Move X8, [X8+192]
	610 Move X1, [X8+112]
	611 Move X8, [X1]
	612 NotImplemented "Instruction BLR not yet implemented."
	613 Compare X22, 0
	614 JumpIfEqual {664}
	615 Move X8, [X20]
	616 Move W23, W0
	617 Move X9, [X8+192]
	618 Move X8, [X22]
	619 Move X20, [X9+208]
	620 NotImplemented "Instruction LDRH not yet implemented."
	621 Move X1, [X20+32]
	622 NotImplemented "Instruction LDRH not yet implemented."
	623 Compare X9, 0
	624 JumpIfEqual {631}
	625 Move X10, [X8+176]
	626 Add X10, X10, 8
	627 NotImplemented "Instruction LDUR not yet implemented."
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Subtract X9, X9, 1
	630 Add X10, X10, 16
	631 Move X0, X22
	632 Call 0x1C5D788
	633 Move W9, [X10]
	634 Add W9, W9, W2
	635 Add X8, X8, W9
	636 Add X0, X8, 312
	637 Move X0, [X0+8]
	638 Move X1, X20
	639 Call 0x1C17DF8
	640 Move X8, [X0+8]
	641 Move X4, X0
	642 Move X0, X22
	643 Move X1, X19
	644 Move X2, X21
	645 Move W3, W23
	646 NotImplemented "Instruction BLR not yet implemented."
	647 Move X8, [X27+40]
	648 NotImplemented "Instruction LDUR not yet implemented."
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Add X31, X29, 0
	651 Move X20, [X31+80]
	652 Move X19, [X31+88]
	653 Move X22, [X31+64]
	654 Move X21, [X31+72]
	655 Move X24, [X31+48]
	656 Move X23, [X31+56]
	657 Move X26, [X31+32]
	658 Move X25, [X31+40]
	659 Move X28, [X31+16]
	660 Move X27, [X31+24]
	661 Move X29, [X31+96]
	662 Move X30, [X31+104]
	663 Return 
	664 Call 0x1C17F20
	665 Call 0x3EB2B20

Method: System.Object SpatialSys.ObservableState.IStatePrimitive.GetValue()

Disassembly:
	0x0261E89C ADD X8, X31, 0x0
	0x0261E8A0 SUB X25, X8, X9

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void SpatialSys.ObservableState.IStatePrimitive.SetValue(System.Object value)

Disassembly:
	0x0261E8A4 ADD X31, X25, 0x0
	0x0261E8A8 MOV X0, X25
	0x0261E8AC MOV W1, W31
	0x0261E8B0 MOV X2, X20
	0x0261E8B4 BL 0x3EB1B10
	0x0261E8B8 LDR X8, [X27 + 0xC0]
	0x0261E8BC LDR X0, [X8]
	0x0261E8C0 LDRB W8, [X0 + 0x135]
	0x0261E8C4 TBNZ X8, 0x0, 0x261E8CC
	0x0261E8C8 BL 0x1C5C684
	0x0261E8CC CBZ X26, 0x261EA50
	0x0261E8D0 LDR X8, [X26]
	0x0261E8D4 CMP X8, X0
	0x0261E8D8 CSEL X26, X26, X31, EQ
	0x0261E8DC B.NE 0x261EA50
	0x0261E8E0 LDR X8, [X19 + 0x20]
	0x0261E8E4 MOV X0, X21
	0x0261E8E8 LDR X8, [X8 + 0xC0]
	0x0261E8EC LDR X1, [X8 + 0x160]
	0x0261E8F0 LDR X8, [X1]
	0x0261E8F4 BLR X8
	0x0261E8F8 CBZ X26, 0x261EA8C
	0x0261E8FC LDR X8, [X19 + 0x20]
	0x0261E900 MOV W27, W0
	0x0261E904 MOV X0, X26
	0x0261E908 LDR X8, [X8 + 0xC0]
	0x0261E90C LDR X1, [X8 + 0x160]
	0x0261E910 LDR X8, [X1]
	0x0261E914 BLR X8
	0x0261E918 CMP W27, W0
	0x0261E91C B.NE 0x261EA50
	0x0261E920 LDR X8, [X19 + 0x20]
	0x0261E924 MOV X0, X21
	0x0261E928 LDR X8, [X8 + 0xC0]
	0x0261E92C LDR X1, [X8 + 0x160]
	0x0261E930 LDR X8, [X1]
	0x0261E934 BLR X8
	0x0261E938 CMP W0, 0x1
	0x0261E93C B.LT 0x261EA84
	0x0261E940 MOV W27, W31
	0x0261E944 STUR X28, [X29 - 0x28]
	0x0261E948 LDR X2, [X21 + 0x50]
	0x0261E94C CBZ X2, 0x261EA8C
	0x0261E950 LDR X8, [X19 + 0x20]
	0x0261E954 SUB X28, X29, 0xC
	0x0261E958 SUB X3, X29, 0x20
	0x0261E95C MOV X4, X23
	0x0261E960 LDR X8, [X8 + 0xC0]
	0x0261E964 LDR X1, [X8 + 0x20]
	0x0261E968 LDR X0, [X1]
	0x0261E96C STUR W27, [X29 - 0xC]
	0x0261E970 STP X28, X23, [X29 - 0x20]
	0x0261E974 LDR X8, [X1 + 0x10]
	0x0261E978 BLR X8
	0x0261E97C MOV X0, X25

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Compare X1, 0
	011 JumpIfEqual {36}
	012 Move X22, [X8+16]
	013 Move X8, [X8+24]
	014 Move X21, X1
	015 Move W9, [X22+309]
	016 Move X0, [X8]
	017 Move [X31+8], X0
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X22
	023 Call 0x1C5D684
	024 Move X22, X0
	025 Move X0, X21
	026 Move X1, X22
	027 Call 0x1C17E00
	028 Compare X0, 0
	029 JumpIfEqual {69}
	030 Move X8, [X20+32]
	031 Move X3, [X31+8]
	032 Move X1, X0
	033 Move X0, X19
	034 Move X8, [X8+192]
	035 Move X2, [X8+24]
	036 Move X0, [X8+136]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X8, [X20+32]
	048 Move X8, [X8+192]
	049 Move X0, [X8+136]
	050 Move W9, [X0+309]
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {58}
	055 Call 0x1C5D684
	056 Move X8, [X20+32]
	057 Move X8, [X8+192]
	058 Move X9, [X0+184]
	059 Move X2, [X8+24]
	060 Move X0, X19
	061 Move X1, [X9]
	062 Move X3, [X2]
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 CallNoReturn X3
	069 Move X0, X21
	070 Move X1, X22
	071 Call 0x1C181E0

Method: System.Object SpatialSys.ObservableState.IStatePrimitiveArray.GetValueAsArray()

Disassembly:
	0x0261E980 MOV X1, X23
	0x0261E984 MOV X2, X20
	0x0261E988 BL 0x3EB1AC0
	0x0261E98C LDR X8, [X19 + 0x20]
	0x0261E990 SUB X3, X29, 0x20
	0x0261E994 MOV X2, X26
	0x0261E998 MOV X4, X24
	0x0261E99C LDR X8, [X8 + 0xC0]
	0x0261E9A0 LDR X1, [X8 + 0x168]
	0x0261E9A4 LDR X0, [X1]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+216]
	008 Move X2, [X1]
	009 Move X30, [X31+16]
	010 CallNoReturn X2
	011 Call 0x1C17F20

Method: SimpleJSON.JSONNode ToJSON(System.Predicate`1<SpatialSys.ObservableState.IStateObject> filter = null, System.Boolean includeSyncRate = True)

Disassembly:
	0x0261E9A8 STUR W27, [X29 - 0xC]
	0x0261E9AC STP X28, X24, [X29 - 0x20]
	0x0261E9B0 LDR X8, [X1 + 0x10]
	0x0261E9B4 BLR X8
	0x0261E9B8 LDR X8, [X19 + 0x20]
	0x0261E9BC LDR X9, [X8 + 0xC0]
	0x0261E9C0 LDR X8, [X9 + 0x28]
	0x0261E9C4 LDRB W10, [X8 + 0x135]
	0x0261E9C8 TBNZ X10, 0x0, 0x261E9E4
	0x0261E9CC MOV X0, X8
	0x0261E9D0 BL 0x1C5C684
	0x0261E9D4 LDR X8, [X19 + 0x20]
	0x0261E9D8 LDR X9, [X8 + 0xC0]
	0x0261E9DC LDR X8, [X9 + 0x28]
	0x0261E9E0 B 0x261E9E8
	0x0261E9E4 MOV X0, X8
	0x0261E9E8 LDR W10, [X8 + 0x28]
	0x0261E9EC LDR X1, [X9 + 0xB8]
	0x0261E9F0 MOV X8, X24
	0x0261E9F4 TBNZ X10, 0x1F, 0x261E9FC
	0x0261E9F8 LDR X8, [X24]
	0x0261E9FC SUB X4, X29, 0x20
	0x0261EA00 SUB X5, X29, 0xC
	0x0261EA04 MOV X2, X22
	0x0261EA08 MOV X3, X25
	0x0261EA0C STUR X8, [X29 - 0x20]
	0x0261EA10 BL 0x1C17728
	0x0261EA14 LDURB W28, [X29 - 0xC]
	0x0261EA18 CBZ W28, 0x261EA40
	0x0261EA1C LDR X8, [X19 + 0x20]
	0x0261EA20 MOV X0, X21
	0x0261EA24 ADD W27, W27, 0x1
	0x0261EA28 LDR X8, [X8 + 0xC0]
	0x0261EA2C LDR X1, [X8 + 0x160]
	0x0261EA30 LDR X8, [X1]
	0x0261EA34 BLR X8
	0x0261EA38 CMP W27, W0
	0x0261EA3C B.LT 0x261E948
	0x0261EA40 CMP W28, 0x0
	0x0261EA44 LDUR X28, [X29 - 0x28]
	0x0261EA48 CSET W0, NE
	0x0261EA4C B 0x261EA54
	0x0261EA50 MOV W0, W31
	0x0261EA54 LDR X8, [X28 + 0x28]
	0x0261EA58 LDUR X9, [X29 - 0x8]
	0x0261EA5C CMP X8, X9
	0x0261EA60 B.NE 0x261EA90
	0x0261EA64 ADD X31, X29, 0x0
	0x0261EA68 LDP X20, X19, [X31 + 0x50]
	0x0261EA6C LDP X22, X21, [X31 + 0x40]
	0x0261EA70 LDP X24, X23, [X31 + 0x30]
	0x0261EA74 LDP X26, X25, [X31 + 0x20]
	0x0261EA78 LDP X28, X27, [X31 + 0x10]
	0x0261EA7C LDP X29, X30, [X31], #0x60
	0x0261EA80 RET
	0x0261EA84 MOVZ W0, 0x1
	0x0261EA88 B 0x261EA54
	0x0261EA8C BL 0x1C16F20
	0x0261EA90 BL 0x3EB1B20
	0x0261EA94 STR X30, [X31 - 0x10]!
	0x0261EA98 LDR X0, [X0 + 0x50]
	0x0261EA9C CBZ X0, 0x261EAB8
	0x0261EAA0 LDR X8, [X1 + 0x20]
	0x0261EAA4 LDR X8, [X8 + 0xC0]
	0x0261EAA8 LDR X1, [X8 + 0x30]
	0x0261EAAC LDR X2, [X1]
	0x0261EAB0 LDR X30, [X31], #0x10
	0x0261EAB4 BR X2
	0x0261EAB8 BL 0x1C16F20
	0x0261EABC STR X30, [X31 - 0x20]!
	0x0261EAC0 STP X20, X19, [X31 + 0x10]
	0x0261EAC4 LDR X8, [X1 + 0x20]
	0x0261EAC8 MOV X19, X1
	0x0261EACC MOV X20, X0
	0x0261EAD0 LDR X8, [X8 + 0xC0]
	0x0261EAD4 LDR X8, [X8 + 0x170]
	0x0261EAD8 LDRB W9, [X8 + 0x135]
	0x0261EADC TBNZ X9, 0x0, 0x261EAEC
	0x0261EAE0 MOV X0, X8
	0x0261EAE4 BL 0x1C5C684
	0x0261EAE8 MOV X8, X0
	0x0261EAEC MOV X0, X8
	0x0261EAF0 BL 0x1C16F10
	0x0261EAF4 LDR X8, [X19 + 0x20]
	0x0261EAF8 MOV X1, X20
	0x0261EAFC MOV X19, X0
	0x0261EB00 LDR X8, [X8 + 0xC0]
	0x0261EB04 LDR X2, [X8 + 0x178]
	0x0261EB08 LDR X8, [X2]
	0x0261EB0C BLR X8
	0x0261EB10 MOV X0, X19
	0x0261EB14 LDP X20, X19, [X31 + 0x10]
	0x0261EB18 LDR X30, [X31], #0x20
	0x0261EB1C RET
	0x0261EB20 STR X30, [X31 - 0x20]!
	0x0261EB24 STP X20, X19, [X31 + 0x10]
	0x0261EB28 LDR X8, [X1 + 0x20]
	0x0261EB2C MOV X19, X1
	0x0261EB30 MOV X20, X0
	0x0261EB34 LDR X8, [X8 + 0xC0]
	0x0261EB38 LDR X8, [X8 + 0x170]
	0x0261EB3C LDRB W9, [X8 + 0x135]
	0x0261EB40 TBNZ X9, 0x0, 0x261EB50
	0x0261EB44 MOV X0, X8
	0x0261EB48 BL 0x1C5C684
	0x0261EB4C MOV X8, X0
	0x0261EB50 MOV X0, X8
	0x0261EB54 BL 0x1C16F10
	0x0261EB58 LDR X8, [X19 + 0x20]
	0x0261EB5C MOV X1, X20
	0x0261EB60 MOV X19, X0
	0x0261EB64 LDR X8, [X8 + 0xC0]
	0x0261EB68 LDR X2, [X8 + 0x178]
	0x0261EB6C LDR X8, [X2]
	0x0261EB70 BLR X8
	0x0261EB74 MOV X0, X19
	0x0261EB78 LDP X20, X19, [X31 + 0x10]
	0x0261EB7C LDR X30, [X31], #0x20
	0x0261EB80 RET
	0x0261EB84 SUB X31, X31, 0x30
	0x0261EB88 STP X30, X21, [X31 + 0x10]
	0x0261EB8C STP X20, X19, [X31 + 0x20]
	0x0261EB90 LDR X8, [X2 + 0x20]
	0x0261EB94 MOV X19, X1
	0x0261EB98 MOV X20, X2
	0x0261EB9C LDR X8, [X8 + 0xC0]
	0x0261EBA0 LDR X1, [X8 + 0x188]
	0x0261EBA4 LDR X8, [X1]
	0x0261EBA8 BLR X8
	0x0261EBAC LDR X8, [X20 + 0x20]
	0x0261EBB0 MOV X21, X0
	0x0261EBB4 LDR X8, [X8 + 0xC0]
	0x0261EBB8 LDR X1, [X8]
	0x0261EBBC LDRB W8, [X1 + 0x135]
	0x0261EBC0 TBNZ X8, 0x0, 0x261EBD0
	0x0261EBC4 MOV X0, X1
	0x0261EBC8 BL 0x1C5C684
	0x0261EBCC MOV X1, X0
	0x0261EBD0 CBZ X19, 0x261EC48
	0x0261EBD4 LDR X8, [X19]
	0x0261EBD8 CMP X8, X1
	0x0261EBDC B.NE 0x261EC40
	0x0261EBE0 LDR X8, [X20 + 0x20]
	0x0261EBE4 LDR X8, [X8 + 0xC0]
	0x0261EBE8 LDR X1, [X8]
	0x0261EBEC LDR X8, [X8 + 0x190]
	0x0261EBF0 LDRB W9, [X1 + 0x135]
	0x0261EBF4 LDR X3, [X8]
	0x0261EBF8 TBNZ X9, 0x0, 0x261EC10
	0x0261EBFC MOV X0, X1
	0x0261EC00 STR X3, [X31 + 0x8]
	0x0261EC04 BL 0x1C5C684
	0x0261EC08 LDR X3, [X31 + 0x8]
	0x0261EC0C MOV X1, X0
	0x0261EC10 LDR X8, [X19]
	0x0261EC14 CMP X8, X1
	0x0261EC18 B.NE 0x261EC40
	0x0261EC1C LDR X8, [X20 + 0x20]
	0x0261EC20 MOV X0, X19
	0x0261EC24 MOV X1, X21
	0x0261EC28 LDP X20, X19, [X31 + 0x20]
	0x0261EC2C LDR X8, [X8 + 0xC0]
	0x0261EC30 LDP X30, X21, [X31 + 0x10]
	0x0261EC34 LDR X2, [X8 + 0x190]
	0x0261EC38 ADD X31, X31, 0x30
	0x0261EC3C BR X3
	0x0261EC40 MOV X0, X19
	0x0261EC44 BL 0x1C171E0
	0x0261EC48 BL 0x1C16F20
	0x0261EC4C STR X30, [X31 - 0x20]!
	0x0261EC50 STP X20, X19, [X31 + 0x10]
	0x0261EC54 MOV X19, X0
	0x0261EC58 LDR X0, [X0 + 0x20]
	0x0261EC5C LDRB W8, [X0 + 0x135]
	0x0261EC60 TBNZ X8, 0x0, 0x261EC68
	0x0261EC64 BL 0x1C5C684
	0x0261EC68 LDR X8, [X0 + 0xC0]
	0x0261EC6C LDR X0, [X8 + 0x140]
	0x0261EC70 LDRB W8, [X0 + 0x135]
	0x0261EC74 TBNZ X8, 0x0, 0x261EC7C
	0x0261EC78 BL 0x1C5C684
	0x0261EC7C MOV W1, W31
	0x0261EC80 BL 0x1C16D6C
	0x0261EC84 LDR X8, [X19 + 0x20]
	0x0261EC88 MOV X20, X0
	0x0261EC8C LDRB W9, [X8 + 0x135]
	0x0261EC90 TBNZ X9, 0x0, 0x261ECA0
	0x0261EC94 MOV X0, X8
	0x0261EC98 BL 0x1C5C684
	0x0261EC9C MOV X8, X0
	0x0261ECA0 LDR X8, [X8 + 0xC0]
	0x0261ECA4 LDR X0, [X8 + 0x88]
	0x0261ECA8 LDRB W8, [X0 + 0x135]
	0x0261ECAC TBNZ X8, 0x0, 0x261ECB4
	0x0261ECB0 BL 0x1C5C684
	0x0261ECB4 LDR X8, [X0 + 0xB8]
	0x0261ECB8 STR X20, [X8]
	0x0261ECBC LDR X0, [X19 + 0x20]
	0x0261ECC0 LDRB W8, [X0 + 0x135]
	0x0261ECC4 TBNZ X8, 0x0, 0x261ECCC
	0x0261ECC8 BL 0x1C5C684
	0x0261ECCC LDR X8, [X0 + 0xC0]
	0x0261ECD0 LDR X0, [X8 + 0x88]
	0x0261ECD4 LDRB W8, [X0 + 0x135]
	0x0261ECD8 TBNZ X8, 0x0, 0x261ECE8
	0x0261ECDC LDP X20, X19, [X31 + 0x10]
	0x0261ECE0 LDR X30, [X31], #0x20
	0x0261ECE4 B 0x1C5C684
	0x0261ECE8 LDP X20, X19, [X31 + 0x10]
	0x0261ECEC LDR X30, [X31], #0x20
	0x0261ECF0 RET
	0x0261ECF4 STR X30, [X31 - 0x10]!
	0x0261ECF8 LDR X8, [X0 + 0x50]
	0x0261ECFC CBZ X8, 0x261ED0C
	0x0261ED00 LDR W0, [X8 + 0x20]
	0x0261ED04 LDR X30, [X31], #0x10
	0x0261ED08 RET
	0x0261ED0C BL 0x1C16F20
	0x0261ED10 STR X30, [X31 - 0x20]!
	0x0261ED14 STP X20, X19, [X31 + 0x10]
	0x0261ED18 ADRP X19, 0x1DBC000
	0x0261ED1C ADRP X20, 0x1AFF000
	0x0261ED20 LDRB W8, [X19 + 0x4E]
	0x0261ED24 LDR X20, [X20 + 0x3D0]
	0x0261ED28 TBNZ X8, 0x0, 0x261ED40
	0x0261ED2C ADRP X0, 0x1AFF000
	0x0261ED30 LDR X0, [X0 + 0x3D0]
	0x0261ED34 BL 0x1C16CF4
	0x0261ED38 MOVZ W8, 0x1
	0x0261ED3C STRB W8, [X19 + 0x4E]
	0x0261ED40 LDR X19, [X20]
	0x0261ED44 LDR X8, [X19 + 0x38]
	0x0261ED48 CBNZ X8, 0x261ED58
	0x0261ED4C MOV X0, X19
	0x0261ED50 BL 0x1C5C6E0
	0x0261ED54 LDR X8, [X19 + 0x38]
	0x0261ED58 LDR X0, [X8 + 0x10]
	0x0261ED5C LDRB W8, [X0 + 0x135]
	0x0261ED60 TBNZ X8, 0x0, 0x261ED68
	0x0261ED64 BL 0x1C5C684
	0x0261ED68 LDR W8, [X0 + 0xE0]
	0x0261ED6C CBNZ W8, 0x261ED74
	0x0261ED70 BL 0x1C16DFC
	0x0261ED74 LDR X8, [X19 + 0x38]
	0x0261ED78 LDR X0, [X8 + 0x10]
	0x0261ED7C LDRB W8, [X0 + 0x135]
	0x0261ED80 TBNZ X8, 0x0, 0x261ED88
	0x0261ED84 BL 0x1C5C684
	0x0261ED88 LDR X8, [X0 + 0xB8]
	0x0261ED8C LDP X20, X19, [X31 + 0x10]
	0x0261ED90 LDR X0, [X8]
	0x0261ED94 LDR X30, [X31], #0x20
	0x0261ED98 RET
	0x0261ED9C MOVZ W0, 0x1
	0x0261EDA0 RET
	0x0261EDA4 MOV W0, W31
	0x0261EDA8 RET
	0x0261EDAC MOV W0, W31
	0x0261EDB0 RET
	0x0261EDB4 STR X30, [X31 - 0x10]!
	0x0261EDB8 LDR X8, [X0 + 0x50]
	0x0261EDBC CBZ X8, 0x261EDCC
	0x0261EDC0 LDR W0, [X8 + 0x20]
	0x0261EDC4 LDR X30, [X31], #0x10
	0x0261EDC8 RET
	0x0261EDCC BL 0x1C16F20
	0x0261EDD0 LDR X0, [X0 + 0x40]
	0x0261EDD4 RET
	0x0261EDD8 LDR W0, [X0 + 0x48]
	0x0261EDDC RET
	0x0261EDE0 STR W1, [X0 + 0x48]
	0x0261EDE4 RET
	0x0261EDE8 STR X30, [X31 - 0x30]!
	0x0261EDEC STP X22, X21, [X31 + 0x10]
	0x0261EDF0 STP X20, X19, [X31 + 0x20]
	0x0261EDF4 ADRP X22, 0x1DBC000
	0x0261EDF8 ADRP X21, 0x1AD5000
	0x0261EDFC LDRB W8, [X22 + 0x4F]
	0x0261EE00 LDR X21, [X21 + 0x6C0]
	0x0261EE04 MOV X20, X1
	0x0261EE08 MOV X19, X0
	0x0261EE0C TBNZ X8, 0x0, 0x261EE30
	0x0261EE10 ADRP X0, 0x1AFF000
	0x0261EE14 LDR X0, [X0 + 0x310]
	0x0261EE18 BL 0x1C16CF4
	0x0261EE1C ADRP X0, 0x1AD5000
	0x0261EE20 LDR X0, [X0 + 0x6C0]
	0x0261EE24 BL 0x1C16CF4
	0x0261EE28 MOVZ W8, 0x1
	0x0261EE2C STRB W8, [X22 + 0x4F]
	0x0261EE30 LDR X8, [X20 + 0x20]
	0x0261EE34 LDR X0, [X21]
	0x0261EE38 LDR X8, [X8 + 0xC0]
	0x0261EE3C LDR W9, [X0 + 0xE0]
	0x0261EE40 LDR X21, [X8 + 0x18]
	0x0261EE44 CBNZ W9, 0x261EE4C
	0x0261EE48 BL 0x1C16DFC
	0x0261EE4C ADRP X22, 0x1AFF000
	0x0261EE50 LDR X22, [X22 + 0x310]
	0x0261EE54 MOV X0, X21
	0x0261EE58 MOV X1, X31
	0x0261EE5C BL 0x338C698
	0x0261EE60 STR X0, [X19 + 0x40]
	0x0261EE64 LDR X8, [X20 + 0x20]
	0x0261EE68 LDR X8, [X8 + 0xC0]
	0x0261EE6C LDR X0, [X8 + 0x8]
	0x0261EE70 LDRB W8, [X0 + 0x135]
	0x0261EE74 TBNZ X8, 0x0, 0x261EE7C
	0x0261EE78 BL 0x1C5C684
	0x0261EE7C BL 0x1C16F10
	0x0261EE80 LDR X8, [X20 + 0x20]
	0x0261EE84 MOV X20, X0
	0x0261EE88 LDR X8, [X8 + 0xC0]
	0x0261EE8C LDR X1, [X8 + 0x20]
	0x0261EE90 BL 0x2D5E3C4
	0x0261EE94 STR X20, [X19 + 0x50]
	0x0261EE98 LDR X0, [X22]
	0x0261EE9C LDR W8, [X0 + 0xE0]
	0x0261EEA0 CBNZ W8, 0x261EEA8
	0x0261EEA4 BL 0x1C16DFC
	0x0261EEA8 MOV X0, X19
	0x0261EEAC LDP X20, X19, [X31 + 0x20]
	0x0261EEB0 LDP X22, X21, [X31 + 0x10]
	0x0261EEB4 MOV X1, X31
	0x0261EEB8 LDR X30, [X31], #0x30
	0x0261EEBC B 0x35CDA2C
	0x0261EEC0 STR X30, [X31 - 0x40]!
	0x0261EEC4 STP X24, X23, [X31 + 0x10]
	0x0261EEC8 STP X22, X21, [X31 + 0x20]
	0x0261EECC STP X20, X19, [X31 + 0x30]
	0x0261EED0 ADRP X24, 0x1DBC000
	0x0261EED4 ADRP X23, 0x1AD5000
	0x0261EED8 LDRB W8, [X24 + 0x50]
	0x0261EEDC LDR X23, [X23 + 0x6C0]
	0x0261EEE0 MOV X22, X3
	0x0261EEE4 MOV X19, X2
	0x0261EEE8 MOV X20, X1
	0x0261EEEC MOV X21, X0
	0x0261EEF0 TBNZ X8, 0x0, 0x261EF14
	0x0261EEF4 ADRP X0, 0x1AFF000
	0x0261EEF8 LDR X0, [X0 + 0x310]
	0x0261EEFC BL 0x1C16CF4
	0x0261EF00 ADRP X0, 0x1AD5000
	0x0261EF04 LDR X0, [X0 + 0x6C0]
	0x0261EF08 BL 0x1C16CF4
	0x0261EF0C MOVZ W8, 0x1
	0x0261EF10 STRB W8, [X24 + 0x50]
	0x0261EF14 LDR X8, [X22 + 0x20]
	0x0261EF18 LDR X0, [X23]
	0x0261EF1C LDR X8, [X8 + 0xC0]
	0x0261EF20 LDR W9, [X0 + 0xE0]
	0x0261EF24 LDR X23, [X8 + 0x18]
	0x0261EF28 CBNZ W9, 0x261EF30
	0x0261EF2C BL 0x1C16DFC
	0x0261EF30 ADRP X24, 0x1AFF000
	0x0261EF34 LDR X24, [X24 + 0x310]
	0x0261EF38 MOV X0, X23
	0x0261EF3C MOV X1, X31
	0x0261EF40 BL 0x338C698
	0x0261EF44 STR X0, [X21 + 0x40]
	0x0261EF48 LDR X8, [X22 + 0x20]
	0x0261EF4C LDR X8, [X8 + 0xC0]
	0x0261EF50 LDR X0, [X8 + 0x8]
	0x0261EF54 LDRB W8, [X0 + 0x135]
	0x0261EF58 TBNZ X8, 0x0, 0x261EF60
	0x0261EF5C BL 0x1C5C684
	0x0261EF60 BL 0x1C16F10
	0x0261EF64 LDR X8, [X22 + 0x20]
	0x0261EF68 MOV X22, X0
	0x0261EF6C LDR X8, [X8 + 0xC0]
	0x0261EF70 LDR X1, [X8 + 0x20]
	0x0261EF74 BL 0x2D5E3C4
	0x0261EF78 STR X22, [X21 + 0x50]
	0x0261EF7C LDR X0, [X24]
	0x0261EF80 LDR W8, [X0 + 0xE0]
	0x0261EF84 CBNZ W8, 0x261EF8C
	0x0261EF88 BL 0x1C16DFC
	0x0261EF8C MOV X0, X21
	0x0261EF90 MOV X1, X20
	0x0261EF94 MOV X2, X19
	0x0261EF98 LDP X20, X19, [X31 + 0x30]
	0x0261EF9C LDP X22, X21, [X31 + 0x20]
	0x0261EFA0 LDP X24, X23, [X31 + 0x10]
	0x0261EFA4 MOV X3, X31
	0x0261EFA8 LDR X30, [X31], #0x40
	0x0261EFAC B 0x35CDABC
	0x0261EFB0 STP X30, X25, [X31 - 0x40]!
	0x0261EFB4 STP X24, X23, [X31 + 0x10]
	0x0261EFB8 STP X22, X21, [X31 + 0x20]
	0x0261EFBC STP X20, X19, [X31 + 0x30]
	0x0261EFC0 ADRP X24, 0x1DBC000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 64
	015 Move [X29-60], W2
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move [X29-56], X8
	018 Move X8, [X8+40]
	019 Move X20, 0x1DBD000
	020 Move X19, X3
	021 Move [X29-8], X8
	022 Move W8, [X20+73]
	023 Move [X29-32], X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {45}
	028 Move X0, 0x1B00000
	029 Move X0, [X0+880]
	030 Call 0x1C17CF4
	031 Move X0, 0x1B00000
	032 Move X0, [X0+1024]
	033 Call 0x1C17CF4
	034 Move X0, 0x1AFE000
	035 Move X0, [X0+3008]
	036 Call 0x1C17CF4
	037 Move X0, 0x1B00000
	038 Move X0, [X0+1032]
	039 Call 0x1C17CF4
	040 Move X0, 0x1AE0000
	041 Move X0, [X0+3784]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+73], W8
	045 Move X8, [X19+32]
	046 Move X20, 0x1B00000
	047 Move X8, [X8+192]
	048 Move X0, [X8+248]
	049 Move X8, [X8+40]
	050 Move W24, [X0+252]
	051 Move W9, [X0+309]
	052 Move W25, [X8+252]
	053 Move X20, [X20+880]
	054 Move W8, W24
	055 Move TEMP, X9
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {61}
	059 Call 0x1C5D684
	060 Move W8, [X0+252]
	061 Add W8, W8, 16
	062 Add X8, X8, 15
	063 Add X9, X31, 0
	064 And X8, X8, 0x1FFFFFFFF
	065 Subtract X8, X9, X8
	066 Move [X29-48], X8
	067 Move [X29-40], X24
	068 Add X31, X8, 0
	069 Add X9, X25, 15
	070 Add X8, X31, 0
	071 And X21, X9, 0x1FFFFFFFF
	072 Subtract X26, X8, X21
	073 Add X31, X26, 0
	074 Add X8, X31, 0
	075 Subtract X27, X8, X21
	076 Add X31, X27, 0
	077 Add X9, X24, 15
	078 Add X8, X31, 0
	079 And X9, X9, 0x1FFFFFFFF
	080 Subtract X22, X8, X9
	081 Add X31, X22, 0
	082 Add X8, X31, 0
	083 Subtract X23, X8, X9
	084 Add X31, X23, 0
	085 Move X0, X23
	086 Move W1, W31
	087 Move X2, X24
	088 Call 0x3EB2B10
	089 Add X8, X31, 0
	090 Subtract X28, X8, X21
	091 Add X31, X28, 0
	092 Move X0, X28
	093 Move W1, W31
	094 Move X2, X25
	095 Call 0x3EB2B10
	096 Move X0, [X20]
	097 Call 0x1C17F10
	098 Move X24, X0
	099 Move X1, X31
	100 Call JSONArray..ctor, X0
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Compare X0, 0
	103 JumpIfEqual {300}
	104 Move X8, [X0]
	105 Move X1, [X8+816]
	106 Move X9, [X8+808]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X20, X0
	109 Compare X0, 0
	110 JumpIfEqual {301}
	111 Move X8, [X19+32]
	112 Move X9, [X8+192]
	113 Move X8, [X20]
	114 Move X21, [X9+224]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Move X1, [X21+32]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X20
	127 Call 0x1C5D788
	128 Move W9, [X10]
	129 Add W9, W9, W2
	130 Add X8, X8, W9
	131 Add X0, X8, 312
	132 Move X0, [X0+8]
	133 Move X1, X21
	134 Call 0x1C17DF8
	135 Move X1, X0
	136 Move X8, [X1+8]
	137 Move X0, X20
	138 NotImplemented "Instruction BLR not yet implemented."
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 Move X2, [X8+80]
	141 Compare X2, 0
	142 JumpIfEqual {302}
	143 Move X8, [X19+32]
	144 Move X20, X0
	145 Move X8, [X8+192]
	146 Move X1, [X8+240]
	147 Move X0, [X1]
	148 Move [X29-24], X22
	149 Move X8, [X1+16]
	150 Subtract X3, X29, 24
	151 Move X4, X22
	152 NotImplemented "Instruction BLR not yet implemented."
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 Move X0, X23
	155 Move X1, X22
	156 Call 0x3EB2AC0
	157 Move X8, [X19+32]
	158 Move X8, [X8+192]
	159 Move X1, [X8+280]
	160 Move X8, [X1]
	161 Move X0, X23
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {213}
	167 Move X8, [X19+32]
	168 Move X8, [X8+192]
	169 Move X1, [X8+256]
	170 Move X0, [X1]
	171 Move [X29-24], X26
	172 Move X8, [X1+16]
	173 Subtract X3, X29, 24
	174 Move X2, X23
	175 Move X4, X26
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X0, X28
	178 Move X1, X26
	179 Move X2, X25
	180 Call 0x3EB2AC0
	181 Move X0, X27
	182 Move X1, X28
	183 Move X2, X25
	184 Call 0x3EB2AC0
	185 Compare X20, 0
	186 JumpIfEqual {298}
	187 Move X8, [X19+32]
	188 Move X8, [X8+192]
	189 Move X9, [X8+40]
	190 Move W10, [X9+40]
	191 Move X9, X27
	192 Move TEMP, X10
	193 And TEMP, TEMP, -2147483648
	194 Compare TEMP, -2147483648
	195 JumpIfEqual {197}
	196 Move X9, [X27]
	197 Move X1, [X8+272]
	198 Move X0, [X1]
	199 Move [X29-24], X9
	200 Move X8, [X1+16]
	201 Subtract X3, X29, 24
	202 Subtract X4, X29, 16
	203 Move X2, X20
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Compare X24, 0
	206 JumpIfEqual {299}
	207 Move X8, [X24]
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 Move X9, [X8+648]
	210 Move X2, [X8+656]
	211 Move X0, X24
	212 NotImplemented "Instruction BLR not yet implemented."
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 Move X20, X31
	215 Move X8, [X19+32]
	216 Move X8, [X8+192]
	217 Move X0, [X8+248]
	218 Move W9, [X0+309]
	219 Move TEMP, X9
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfEqual {226}
	223 Call 0x1C5D684
	224 Move X8, [X19+32]
	225 Move X8, [X8+192]
	226 Move X1, [X8+288]
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 Move X3, X23
	229 Move X4, X31
	230 Move X5, X31
	231 Call 0x1C18728
	232 Compare X20, 0
	233 JumpIfNotEqual {303}
	234 Move W8, [X25+88]
	235 Compare W8, 0
	236 JumpIfEqual {278}
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 Move TEMP, X8
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfNotEqual {278}
	242 Move X8, 0x1AFE000
	243 Move X8, [X8+3008]
	244 Move X0, [X8]
	245 Call 0x1C17F10
	246 Move X20, X0
	247 Move X1, X31
	248 Call JSONObject..ctor, X0
	249 Compare X20, 0
	250 JumpIfEqual {305}
	251 Move X9, 0x1AE0000
	252 Move X8, [X20]
	253 Move X9, [X9+3784]
	254 Move X3, [X8+640]
	255 Move X1, [X9]
	256 Move X9, [X8+632]
	257 Move X0, X20
	258 Move X2, X24
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move X8, 0x1B00000
	261 Move W22, [X25+88]
	262 Move X8, [X8+1024]
	263 Move X0, [X8]
	264 Call 0x1C17F10
	265 Move X21, X0
	266 NotImplemented "Instruction UCVTF not yet implemented."
	267 Move X1, X31
	268 Call JSONNumber..ctor, X0, V0
	269 Move X9, 0x1B00000
	270 Move X8, [X20]
	271 Move X9, [X9+1032]
	272 Move X3, [X8+640]
	273 Move X1, [X9]
	274 Move X9, [X8+632]
	275 Move X0, X20
	276 Move X2, X21
	277 NotImplemented "Instruction BLR not yet implemented."
	278 Move X20, X24
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 Move X8, [X8+40]
	281 NotImplemented "Instruction LDUR not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X0, X20
	284 Add X31, X29, 0
	285 Move X20, [X31+80]
	286 Move X19, [X31+88]
	287 Move X22, [X31+64]
	288 Move X21, [X31+72]
	289 Move X24, [X31+48]
	290 Move X23, [X31+56]
	291 Move X26, [X31+32]
	292 Move X25, [X31+40]
	293 Move X28, [X31+16]
	294 Move X27, [X31+24]
	295 Move X29, [X31+96]
	296 Move X30, [X31+104]
	297 Return X0
	298 Call 0x1C17F20
	299 Call 0x1C17F20
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Move X0, X20
	304 Call 0x1C17F18
	305 Call 0x1C17F20
	306 Call 0x3EB2B20
	307 Move X22, X1
	308 Move X21, X0
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X0, X21
	311 Call 0x3EB2AD0
	312 Move X20, X0
	313 Move X0, 0x1AD6000
	314 Move X0, [X0+2000]
	315 Call 0x1C17D08
	316 Move X8, [X20]
	317 Move X1, [X8]
	318 Call 0x1C18270
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfNotEqual {373}
	323 Move X20, [X20]
	324 Call 0x3EB2AE0
	325 NotImplemented "Instruction LDUR not yet implemented."
	326 Move X0, X21
	327 Call 0x19913C0
	328 Move X8, [X19+32]
	329 Move X0, 0x1AD6000
	330 Move X21, [X21+24]
	331 Move X8, [X8+192]
	332 Move X22, [X8+296]
	333 Move X0, [X0+1728]
	334 Call 0x1C17D08
	335 Call 0x19913D0
	336 Move X0, X22
	337 Move X1, X31
	338 Call Type.GetTypeFromHandle, X0
	339 Move X22, X0
	340 Call 0x19913C0
	341 Move X8, [X22]
	342 Move X0, X22
	343 Move X9, [X8+744]
	344 Move X1, [X8+752]
	345 NotImplemented "Instruction BLR not yet implemented."
	346 Move X22, X0
	347 Move X0, 0x1B00000
	348 Move X0, [X0+1040]
	349 Call 0x1C17D08
	350 Move X23, X0
	351 Move X0, 0x1B00000
	352 Move X0, [X0+1048]
	353 Call 0x1C17D08
	354 Move X2, X0
	355 Move X0, X23
	356 Move X1, X21
	357 Move X3, X22
	358 Move X4, X31
	359 Call String.Concat, X0, X1, X2, X3
	360 Move X21, X0
	361 Move X0, 0x1AFF000
	362 Move X0, [X0+1632]
	363 Call 0x1C17D08
	364 Call 0x1C17F10
	365 Move X1, X21
	366 Move X2, X20
	367 Move X3, X31
	368 Move X22, X0
	369 Call StateSerializationException..ctor, X0, X1, X2
	370 Move X0, X22
	371 Move X1, X19
	372 Call 0x1C17DEC
	373 Move W0, 8
	374 Call 0x3EB2AF0
	375 Move X8, [X20]
	376 Move [X0], X8
	377 Move X1, 0x1897000
	378 Add X1, X1, 3672
	379 Move X2, X31
	380 Call 0x3EB2B00
	381 Move X21, X0
	382 Call 0x3EB2AE0
	383 Move X0, X21
	384 Call 0x1D2D690
	385 NotImplemented "Instruction LDUR not yet implemented."
	386 Move X22, X1
	387 Move X21, X0
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move X0, X21
	390 Call 0x3EB2AD0
	391 Move X20, [X0]
	392 Call 0x3EB2AE0
	393 Move X20, X31
	394 Move X22, X1
	395 Move X21, X0
	396 Move X8, [X19+32]
	397 Move X8, [X8+192]
	398 Move X0, [X8+248]
	399 Move W9, [X0+309]
	400 Move TEMP, X9
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfEqual {407}
	404 Call 0x1C5D684
	405 Move X8, [X19+32]
	406 Move X8, [X8+192]
	407 Move X1, [X8+288]
	408 NotImplemented "Instruction LDUR not yet implemented."
	409 Move X3, X23
	410 Move X4, X31
	411 Move X5, X31
	412 Call 0x1C18728
	413 Compare X20, 0
	414 JumpIfEqual {309}
	415 Move X0, X20
	416 Call 0x1C17F18
	417 Call 0x1991590

Method: System.Void FromJSON(SimpleJSON.JSONNode json)

Disassembly:
	0x0261EFC4 ADRP X25, 0x1AD5000
	0x0261EFC8 LDRB W8, [X24 + 0x51]
	0x0261EFCC LDR X25, [X25 + 0x6C0]
	0x0261EFD0 MOV X20, X4
	0x0261EFD4 MOV W23, W3
	0x0261EFD8 MOV X21, X2
	0x0261EFDC MOV X22, X1
	0x0261EFE0 MOV X19, X0
	0x0261EFE4 TBNZ X8, 0x0, 0x261F020
	0x0261EFE8 ADRP X0, 0x1AFF000
	0x0261EFEC LDR X0, [X0 + 0x318]
	0x0261EFF0 BL 0x1C16CF4
	0x0261EFF4 ADRP X0, 0x1AFF000
	0x0261EFF8 LDR X0, [X0 + 0x320]
	0x0261EFFC BL 0x1C16CF4
	0x0261F000 ADRP X0, 0x1AFC000
	0x0261F004 LDR X0, [X0 + 0xB60]
	0x0261F008 BL 0x1C16CF4
	0x0261F00C ADRP X0, 0x1AD4000
	0x0261F010 LDR X0, [X0 + 0x6C0]
	0x0261F014 BL 0x1C16CF4
	0x0261F018 MOVZ W8, 0x1
	0x0261F01C STRB W8, [X24 + 0x51]
	0x0261F020 LDR X8, [X20 + 0x20]
	0x0261F024 LDR X0, [X25]
	0x0261F028 LDR X8, [X8 + 0xC0]
	0x0261F02C LDR W9, [X0 + 0xE0]
	0x0261F030 LDR X24, [X8 + 0x18]
	0x0261F034 CBNZ W9, 0x261F03C
	0x0261F038 BL 0x1C16DFC
	0x0261F03C MOV X0, X24
	0x0261F040 MOV X1, X31
	0x0261F044 BL 0x338C698
	0x0261F048 CBZ X0, 0x261F1AC
	0x0261F04C MOV X1, X31
	0x0261F050 MOV X24, X0
	0x0261F054 BL 0x33970C4
	0x0261F058 TBNZ X0, 0x0, 0x261F098
	0x0261F05C ADRP X8, 0x1AFC000
	0x0261F060 LDR X0, [X25]
	0x0261F064 LDR X8, [X8 + 0xB60]
	0x0261F068 LDR W9, [X0 + 0xE0]
	0x0261F06C LDR X25, [X8]
	0x0261F070 CBNZ W9, 0x261F078
	0x0261F074 BL 0x1C16DFC
	0x0261F078 MOV X0, X25
	0x0261F07C MOV X1, X31
	0x0261F080 BL 0x338C698
	0x0261F084 MOV X1, X0
	0x0261F088 MOV X0, X24
	0x0261F08C MOV X2, X31
	0x0261F090 BL 0x3395F0C
	0x0261F094 TBNZ X0, 0x0, 0x261F1B0
	0x0261F098 CBZ X19, 0x261F1AC
	0x0261F09C AND W3, W23, 0x1
	0x0261F0A0 MOV X0, X19
	0x0261F0A4 MOV X1, X22
	0x0261F0A8 MOV X2, X21
	0x0261F0AC MOV X4, X31
	0x0261F0B0 BL 0x35CDD8C
	0x0261F0B4 LDR X20, [X19 + 0x30]
	0x0261F0B8 CBZ X20, 0x261F1AC
	0x0261F0BC ADRP X10, 0x1AFE000
	0x0261F0C0 LDR X8, [X20]
	0x0261F0C4 LDR X10, [X10 + 0x318]
	0x0261F0C8 LDRH W9, [X8 + 0x12E]
	0x0261F0CC LDR X1, [X10]
	0x0261F0D0 CBZ X9, 0x261F0F4
	0x0261F0D4 LDR X10, [X8 + 0xB0]
	0x0261F0D8 ADD X10, X10, 0x8
	0x0261F0DC LDUR X11, [X10 - 0x8]
	0x0261F0E0 CMP X11, X1
	0x0261F0E4 B.EQ 0x261F104
	0x0261F0E8 SUBS X9, X9, 0x1
	0x0261F0EC ADD X10, X10, 0x10
	0x0261F0F0 B.NE 0x261F0DC
	0x0261F0F4 MOVZ W2, 0x1
	0x0261F0F8 MOV X0, X20
	0x0261F0FC BL 0x1C5C788
	0x0261F100 B 0x261F114
	0x0261F104 LDR W9, [X10]
	0x0261F108 ADD W9, W9, 0x1
	0x0261F10C ADD X8, X8, W9, 0x4, SXTW
	0x0261F110 ADD X0, X8, 0x138
	0x0261F114 LDP X8, X1, [X0]
	0x0261F118 MOV X0, X20
	0x0261F11C BLR X8
	0x0261F120 CBZ X0, 0x261F1AC
	0x0261F124 ADRP X10, 0x1AFE000
	0x0261F128 LDR X8, [X0]
	0x0261F12C LDR X10, [X10 + 0x320]
	0x0261F130 LDR X21, [X19 + 0x40]
	0x0261F134 MOV X20, X0
	0x0261F138 LDRH W9, [X8 + 0x12E]
	0x0261F13C LDR X1, [X10]
	0x0261F140 CBZ X9, 0x261F164
	0x0261F144 LDR X10, [X8 + 0xB0]
	0x0261F148 ADD X10, X10, 0x8
	0x0261F14C LDUR X11, [X10 - 0x8]
	0x0261F150 CMP X11, X1
	0x0261F154 B.EQ 0x261F174
	0x0261F158 SUBS X9, X9, 0x1
	0x0261F15C ADD X10, X10, 0x10
	0x0261F160 B.NE 0x261F14C
	0x0261F164 MOVZ W2, 0x4
	0x0261F168 MOV X0, X20
	0x0261F16C BL 0x1C5C788
	0x0261F170 B 0x261F184
	0x0261F174 LDR W9, [X10]
	0x0261F178 ADD W9, W9, 0x4
	0x0261F17C ADD X8, X8, W9, 0x4, SXTW
	0x0261F180 ADD X0, X8, 0x138
	0x0261F184 LDP X8, X2, [X0]
	0x0261F188 MOV X0, X20
	0x0261F18C MOV X1, X21
	0x0261F190 BLR X8
	0x0261F194 STR W0, [X19 + 0x48]
	0x0261F198 LDP X20, X19, [X31 + 0x30]
	0x0261F19C LDP X22, X21, [X31 + 0x20]
	0x0261F1A0 LDP X24, X23, [X31 + 0x10]
	0x0261F1A4 LDP X30, X25, [X31], #0x40
	0x0261F1A8 RET
	0x0261F1AC BL 0x1C16F20
	0x0261F1B0 LDR X8, [X20 + 0x20]
	0x0261F1B4 ADRP X0, 0x1AD4000
	0x0261F1B8 LDR X8, [X8 + 0xC0]
	0x0261F1BC LDR X19, [X8 + 0x18]
	0x0261F1C0 LDR X0, [X0 + 0x6C0]
	0x0261F1C4 BL 0x1C16D08
	0x0261F1C8 BL 0x19903D0
	0x0261F1CC MOV X0, X19
	0x0261F1D0 MOV X1, X31
	0x0261F1D4 BL 0x338C698
	0x0261F1D8 MOV X19, X0
	0x0261F1DC BL 0x19903C0
	0x0261F1E0 LDR X8, [X19]
	0x0261F1E4 MOV X0, X19
	0x0261F1E8 LDR X9, [X8 + 0x2E8]
	0x0261F1EC LDR X1, [X8 + 0x2F0]
	0x0261F1F0 BLR X9
	0x0261F1F4 MOV X19, X0
	0x0261F1F8 ADRP X0, 0x1AFE000
	0x0261F1FC LDR X0, [X0 + 0x440]
	0x0261F200 BL 0x1C16D08
	0x0261F204 MOV X21, X0
	0x0261F208 ADRP X0, 0x1AD5000
	0x0261F20C LDR X0, [X0 + 0x608]
	0x0261F210 BL 0x1C16D08
	0x0261F214 MOV X2, X0
	0x0261F218 MOV X0, X21
	0x0261F21C MOV X1, X19
	0x0261F220 MOV X3, X31
	0x0261F224 BL 0x32274B8
	0x0261F228 MOV X19, X0
	0x0261F22C ADRP X0, 0x1ADC000
	0x0261F230 LDR X0, [X0 + 0x578]
	0x0261F234 BL 0x1C16D08
	0x0261F238 BL 0x1C16F10
	0x0261F23C MOV X1, X19
	0x0261F240 MOV X2, X31
	0x0261F244 MOV X21, X0
	0x0261F248 BL 0x3314A68
	0x0261F24C MOV X0, X21
	0x0261F250 MOV X1, X20
	0x0261F254 BL 0x1C16DEC
	0x0261F258 STR X30, [X31 - 0x30]!
	0x0261F25C STP X22, X21, [X31 + 0x10]
	0x0261F260 STP X20, X19, [X31 + 0x20]
	0x0261F264 ADRP X22, 0x1DBB000
	0x0261F268 LDRB W8, [X22 + 0x52]
	0x0261F26C MOV X19, X2
	0x0261F270 MOV X20, X1
	0x0261F274 MOV X21, X0
	0x0261F278 TBNZ X8, 0x0, 0x261F290
	0x0261F27C ADRP X0, 0x1AD4000
	0x0261F280 LDR X0, [X0 + 0x750]
	0x0261F284 BL 0x1C16CF4
	0x0261F288 MOVZ W8, 0x1
	0x0261F28C STRB W8, [X22 + 0x52]
	0x0261F290 CBZ X20, 0x261F454
	0x0261F294 ADRP X10, 0x1AD4000
	0x0261F298 LDR X8, [X20]
	0x0261F29C LDR X10, [X10 + 0x750]
	0x0261F2A0 LDRH W9, [X8 + 0x12E]
	0x0261F2A4 LDR X1, [X10]
	0x0261F2A8 CBZ X9, 0x261F2CC
	0x0261F2AC LDR X10, [X8 + 0xB0]
	0x0261F2B0 ADD X10, X10, 0x8
	0x0261F2B4 LDUR X11, [X10 - 0x8]
	0x0261F2B8 CMP X11, X1
	0x0261F2BC B.EQ 0x261F2DC
	0x0261F2C0 SUBS X9, X9, 0x1
	0x0261F2C4 ADD X10, X10, 0x10
	0x0261F2C8 B.NE 0x261F2B4
	0x0261F2CC MOVZ W2, 0x2
	0x0261F2D0 MOV X0, X20
	0x0261F2D4 BL 0x1C5C788
	0x0261F2D8 B 0x261F2EC
	0x0261F2DC LDR W9, [X10]
	0x0261F2E0 ADD W9, W9, 0x2
	0x0261F2E4 ADD X8, X8, W9, 0x4, SXTW
	0x0261F2E8 ADD X0, X8, 0x138
	0x0261F2EC LDP X8, X1, [X0]
	0x0261F2F0 MOV X0, X20
	0x0261F2F4 BLR X8
	0x0261F2F8 AND W8, W0, 0xFF
	0x0261F2FC CMP W8, 0x6
	0x0261F300 B.EQ 0x261F3AC
	0x0261F304 CMP W8, 0x3
	0x0261F308 B.EQ 0x261F3BC
	0x0261F30C CMP W8, 0x2
	0x0261F310 B.NE 0x261F458
	0x0261F314 LDR X8, [X19 + 0x20]
	0x0261F318 LDR X8, [X8 + 0xC0]
	0x0261F31C LDR X0, [X8 + 0x38]
	0x0261F320 LDRB W8, [X0 + 0x135]
	0x0261F324 TBNZ X8, 0x0, 0x261F32C
	0x0261F328 BL 0x1C5C684
	0x0261F32C LDR X8, [X20]
	0x0261F330 LDRB W9, [X0 + 0x130]
	0x0261F334 LDRB W10, [X8 + 0x130]
	0x0261F338 CMP W10, W9
	0x0261F33C B.CC 0x261F454
	0x0261F340 LDR X8, [X8 + 0xC8]
	0x0261F344 ADD X9, X8, X9, 0x3, LSL
	0x0261F348 LDUR X9, [X9 - 0x8]
	0x0261F34C CMP X9, X0
	0x0261F350 B.NE 0x261F454
	0x0261F354 LDR X9, [X19 + 0x20]
	0x0261F358 LDR X9, [X9 + 0xC0]
	0x0261F35C LDR X0, [X9 + 0x38]
	0x0261F360 LDRB W10, [X0 + 0x135]
	0x0261F364 TBNZ X10, 0x0, 0x261F37C
	0x0261F368 BL 0x1C5C684
	0x0261F36C LDR X8, [X20]
	0x0261F370 LDR X9, [X19 + 0x20]
	0x0261F374 LDR X8, [X8 + 0xC8]
	0x0261F378 LDR X9, [X9 + 0xC0]
	0x0261F37C LDRB W10, [X0 + 0x130]
	0x0261F380 LDR X2, [X9 + 0x50]
	0x0261F384 ADD X8, X8, X10, 0x3, LSL
	0x0261F388 LDUR X8, [X8 - 0x8]
	0x0261F38C CMP X8, X0
	0x0261F390 CSEL X8, X20, X31, EQ
	0x0261F394 LDRB W1, [X8 + 0x19]
	0x0261F398 MOV X0, X21
	0x0261F39C LDP X20, X19, [X31 + 0x20]
	0x0261F3A0 LDP X22, X21, [X31 + 0x10]
	0x0261F3A4 LDR X30, [X31], #0x30
	0x0261F3A8 B 0x261F4F8
	0x0261F3AC LDP X20, X19, [X31 + 0x20]
	0x0261F3B0 LDP X22, X21, [X31 + 0x10]
	0x0261F3B4 LDR X30, [X31], #0x30
	0x0261F3B8 RET
	0x0261F3BC LDR X8, [X19 + 0x20]
	0x0261F3C0 LDR X8, [X8 + 0xC0]
	0x0261F3C4 LDR X0, [X8 + 0x38]
	0x0261F3C8 LDRB W8, [X0 + 0x135]
	0x0261F3CC TBNZ X8, 0x0, 0x261F3D4
	0x0261F3D0 BL 0x1C5C684
	0x0261F3D4 LDR X8, [X20]
	0x0261F3D8 LDRB W9, [X0 + 0x130]
	0x0261F3DC LDRB W10, [X8 + 0x130]
	0x0261F3E0 CMP W10, W9
	0x0261F3E4 B.CC 0x261F454
	0x0261F3E8 LDR X8, [X8 + 0xC8]
	0x0261F3EC ADD X9, X8, X9, 0x3, LSL
	0x0261F3F0 LDUR X9, [X9 - 0x8]
	0x0261F3F4 CMP X9, X0
	0x0261F3F8 B.NE 0x261F454
	0x0261F3FC LDR X9, [X19 + 0x20]
	0x0261F400 LDR X9, [X9 + 0xC0]
	0x0261F404 LDR X0, [X9 + 0x38]
	0x0261F408 LDRB W10, [X0 + 0x135]
	0x0261F40C TBNZ X10, 0x0, 0x261F424
	0x0261F410 BL 0x1C5C684
	0x0261F414 LDR X8, [X20]
	0x0261F418 LDR X9, [X19 + 0x20]
	0x0261F41C LDR X8, [X8 + 0xC8]
	0x0261F420 LDR X9, [X9 + 0xC0]
	0x0261F424 LDRB W10, [X0 + 0x130]
	0x0261F428 LDR X2, [X9 + 0x58]
	0x0261F42C ADD X8, X8, X10, 0x3, LSL
	0x0261F430 LDUR X8, [X8 - 0x8]
	0x0261F434 CMP X8, X0
	0x0261F438 CSEL X8, X20, X31, EQ
	0x0261F43C LDRB W1, [X8 + 0x19]
	0x0261F440 MOV X0, X21
	0x0261F444 LDP X20, X19, [X31 + 0x20]
	0x0261F448 LDP X22, X21, [X31 + 0x10]
	0x0261F44C LDR X30, [X31], #0x30
	0x0261F450 B 0x261FEE0
	0x0261F454 BL 0x1C16F20
	0x0261F458 MOV X0, X20
	0x0261F45C BL 0x19903C0
	0x0261F460 ADRP X0, 0x1AD4000
	0x0261F464 LDR X0, [X0 + 0x750]
	0x0261F468 BL 0x1C16D08
	0x0261F46C MOV X1, X0
	0x0261F470 MOVZ W0, 0x2
	0x0261F474 MOV X2, X20
	0x0261F478 BL 0x19963F0
	0x0261F47C STRB W0, [X31 + 0xC]
	0x0261F480 ADRP X0, 0x1AFE000
	0x0261F484 LDR X0, [X0 + 0x328]
	0x0261F488 BL 0x1C16D08
	0x0261F48C ADD X1, X31, 0xC
	0x0261F490 BL 0x1C16E04
	0x0261F494 MOV X20, X0
	0x0261F498 ADRP X0, 0x1AFE000
	0x0261F49C LDR X0, [X0 + 0x330]
	0x0261F4A0 BL 0x1C16D08
	0x0261F4A4 MOV X21, X0
	0x0261F4A8 ADRP X0, 0x1AFE000
	0x0261F4AC LDR X0, [X0 + 0x448]
	0x0261F4B0 BL 0x1C16D08
	0x0261F4B4 MOV X2, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 160
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X21, 0x1DBD000
	018 Move X19, X2
	019 Move X23, X1
	020 Move [X29-8], X8
	021 Move W8, [X21+74]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0x1AD6000
	028 Move X0, [X0+1120]
	029 Call 0x1C17CF4
	030 Move X0, 0x1AFF000
	031 Move X0, [X0+1032]
	032 Call 0x1C17CF4
	033 Move X0, 0x1ADF000
	034 Move X0, [X0+3784]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+74], W8
	038 Move X8, [X19+32]
	039 Move X8, [X8+192]
	040 Move X8, [X8+40]
	041 Move W21, [X8+252]
	042 Add X8, X31, 0
	043 Add X9, X21, 15
	044 And X9, X9, 0x1FFFFFFFF
	045 Subtract X22, X8, X9
	046 Add X31, X22, 0
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X29-16], X31
	049 Move [X29-48], V0
	050 Move [X29-40], V0
	051 Move [X29-80], V0
	052 Move [X29-72], V0
	053 Compare X23, 0
	054 JumpIfEqual {256}
	055 Move X8, [X23]
	056 Move X1, [X8+592]
	057 Move X9, [X8+584]
	058 Move X0, X23
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {89}
	064 Move X9, 0x1ADF000
	065 Move X8, [X23]
	066 Move X9, [X9+3784]
	067 Move X1, [X9]
	068 Move X9, [X8+424]
	069 Move X2, [X8+432]
	070 Move X0, X23
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X9, 0x1AFF000
	073 Move X8, [X23]
	074 Move X9, [X9+1032]
	075 Move X24, X0
	076 Move X1, [X9]
	077 Move X9, [X8+424]
	078 Move X2, [X8+432]
	079 Move X0, X23
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Compare X0, 0
	082 JumpIfEqual {260}
	083 Move X8, [X0]
	084 Move X1, [X8+880]
	085 Move X9, [X8+872]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X23, X24
	088 Move [X20+88], W0
	089 Compare X20, 0
	090 JumpIfEqual {259}
	091 Move X8, [X20]
	092 Move X1, [X8+816]
	093 Move X9, [X8+808]
	094 Move X0, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X24, X0
	097 Move [X29-160], X25
	098 Compare X0, 0
	099 JumpIfEqual {257}
	100 Move X8, [X19+32]
	101 Move X9, [X8+192]
	102 Move X8, [X24]
	103 Move X25, [X9+304]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Move X1, [X25+32]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X24
	116 Call 0x1C5D788
	117 Move W9, [X10]
	118 Add W9, W9, W2
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X0, [X0+8]
	122 Move X1, X25
	123 Call 0x1C17DF8
	124 Move X1, X0
	125 Move X8, [X1+8]
	126 Move X0, X24
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Compare X23, 0
	129 JumpIfEqual {258}
	130 Move X8, [X23]
	131 Move X24, X0
	132 Move X9, [X8+488]
	133 Move X1, [X8+496]
	134 Move X0, X23
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X8, [X19+32]
	137 Move W25, W0
	138 Move X8, [X8+192]
	139 Move X0, [X8+320]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move W1, W25
	147 Call 0x1C17D6C
	148 Move X8, [X23]
	149 Move X25, X0
	150 Move X1, [X8+832]
	151 Move X9, [X8+824]
	152 Subtract X8, X29, 152
	153 Move X0, X23
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X28, 0x1AD6000
	156 Move X28, [X28+1120]
	157 Subtract X0, X29, 80
	158 Subtract X1, X29, 152
	159 Move W2, 72
	160 Call 0x3EB2AC0
	161 Move TEMP, 0
	162 Not TEMP
	163 Move W27, TEMP
	164 Subtract X0, X29, 80
	165 Move X1, X31
	166 Call Enumerator.MoveNext, X0
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {226}
	171 Subtract X0, X29, 80
	172 Move X1, X31
	173 Call Enumerator.get_Current, X0
	174 Move X23, X0
	175 Move X0, [X28]
	176 Move X26, X1
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X0, X23
	182 Move X1, X26
	183 Move X2, X31
	184 Call JSONNode.op_Implicit, X0
	185 Compare X24, 0
	186 JumpIfEqual {253}
	187 Move X8, [X19+32]
	188 Move X8, [X8+192]
	189 Move X1, [X8+328]
	190 Move X8, [X1]
	191 Move [X29-152], X0
	192 Move [X29-144], X22
	193 Move X9, [X1+16]
	194 Subtract X3, X29, 152
	195 Move X0, X8
	196 Move X2, X24
	197 Move X4, X22
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Compare X25, 0
	200 JumpIfEqual {254}
	201 Move W9, [X25+24]
	202 Add W8, W27, 1
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X9, [X25]
	205 Move X8, W8
	206 Move X1, X22
	207 Move X2, X21
	208 Move W9, [X9+260]
	209 NotImplemented "Instruction NOP not yet implemented."
	210 NotImplemented "Instruction MADD not yet implemented."
	211 Add X0, X8, 32
	212 Call 0x3EB2AC0
	213 Move X8, [X19+32]
	214 Move X8, [X8+192]
	215 Move X0, [X8+40]
	216 Move W8, [X0+309]
	217 Move TEMP, X8
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfEqual {222}
	221 Call 0x1C5D684
	222 Move W8, [X25+24]
	223 Add W27, W27, 1
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Call 0x1C17F28
	226 Move X8, [X19+32]
	227 Move X8, [X8+192]
	228 Move X2, [X8+24]
	229 Move X8, [X2]
	230 Move X0, X20
	231 Move X1, X25
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move W8, 1
	234 Move [X20+32], W8
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 Move X8, [X8+40]
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Add X31, X29, 0
	240 Move X20, [X31+80]
	241 Move X19, [X31+88]
	242 Move X22, [X31+64]
	243 Move X21, [X31+72]
	244 Move X24, [X31+48]
	245 Move X23, [X31+56]
	246 Move X26, [X31+32]
	247 Move X25, [X31+40]
	248 Move X28, [X31+16]
	249 Move X27, [X31+24]
	250 Move X29, [X31+96]
	251 Move X30, [X31+104]
	252 Return 
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 Call 0x1C17F28
	256 Call 0x1C17F20
	257 Call 0x1C17F20
	258 Call 0x1C17F20
	259 Call 0x1C17F20
	260 Call 0x1C17F20
	261 Call 0x3EB2B20
	262 Move X21, X0
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X0, X21
	265 Call 0x3EB2AD0
	266 Move X21, X0
	267 Move X0, 0x1AD5000
	268 Move X0, [X0+2000]
	269 Call 0x1C17D08
	270 Move X8, [X21]
	271 Move X1, [X8]
	272 Call 0x1C18270
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {326}
	277 Move X21, [X21]
	278 Call 0x3EB2AE0
	279 Move X0, X20
	280 Call 0x19913C0
	281 Move X8, [X19+32]
	282 Move X0, 0x1AD5000
	283 Move X20, [X20+24]
	284 Move X8, [X8+192]
	285 Move X22, [X8+296]
	286 Move X0, [X0+1728]
	287 Call 0x1C17D08
	288 Call 0x19913D0
	289 Move X0, X22
	290 Move X1, X31
	291 Call Type.GetTypeFromHandle, X0
	292 Move X22, X0
	293 Call 0x19913C0
	294 Move X8, [X22]
	295 Move X0, X22
	296 Move X9, [X8+744]
	297 Move X1, [X8+752]
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Move X22, X0
	300 Move X0, 0x1AFF000
	301 Move X0, [X0+1056]
	302 Call 0x1C17D08
	303 Move X23, X0
	304 Move X0, 0x1AFF000
	305 Move X0, [X0+1048]
	306 Call 0x1C17D08
	307 Move X2, X0
	308 Move X0, X23
	309 Move X1, X20
	310 Move X3, X22
	311 Move X4, X31
	312 Call String.Concat, X0, X1, X2, X3
	313 Move X20, X0
	314 Move X0, 0x1AFE000
	315 Move X0, [X0+1632]
	316 Call 0x1C17D08
	317 Call 0x1C17F10
	318 Move X1, X20
	319 Move X2, X21
	320 Move X3, X31
	321 Move X22, X0
	322 Call StateSerializationException..ctor, X0, X1, X2
	323 Move X0, X22
	324 Move X1, X19
	325 Call 0x1C17DEC
	326 Move W0, 8
	327 Call 0x3EB2AF0
	328 Move X8, [X21]
	329 Move [X0], X8
	330 Move X1, 0x1896000
	331 Add X1, X1, 3672
	332 Move X2, X31
	333 Call 0x3EB2B00
	334 Move X21, X0
	335 Call 0x3EB2AE0
	336 Move X0, X21
	337 Call 0x1D2D690
	338 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x0261F4B8 MOV X0, X21
	0x0261F4BC MOV X1, X20
	0x0261F4C0 MOV X3, X31
	0x0261F4C4 BL 0x3227BD4
	0x0261F4C8 MOV X20, X0
	0x0261F4CC ADRP X0, 0x1AD4000
	0x0261F4D0 LDR X0, [X0 + 0x5B0]
	0x0261F4D4 BL 0x1C16D08
	0x0261F4D8 BL 0x1C16F10
	0x0261F4DC MOV X1, X20
	0x0261F4E0 MOV X2, X31
	0x0261F4E4 MOV X21, X0
	0x0261F4E8 BL 0x337DF1C
	0x0261F4EC MOV X0, X21
	0x0261F4F0 MOV X1, X19
	0x0261F4F4 BL 0x1C16DEC
	0x0261F4F8 STR X30, [X31 - 0x40]!
	0x0261F4FC STP X24, X23, [X31 + 0x10]
	0x0261F500 STP X22, X21, [X31 + 0x20]
	0x0261F504 STP X20, X19, [X31 + 0x30]
	0x0261F508 ADRP X21, 0x1DBB000
	0x0261F50C LDRB W8, [X21 + 0x53]
	0x0261F510 MOV X22, X2
	0x0261F514 MOV W19, W1
	0x0261F518 MOV X20, X0
	0x0261F51C TBNZ X8, 0x0, 0x261F534
	0x0261F520 ADRP X0, 0x1AFE000
	0x0261F524 LDR X0, [X0 + 0x318]
	0x0261F528 BL 0x1C16CF4
	0x0261F52C MOVZ W8, 0x1
	0x0261F530 STRB W8, [X21 + 0x53]
	0x0261F534 LDR X0, [X20 + 0x50]
	0x0261F538 CBZ X0, 0x261F670
	0x0261F53C LDR X8, [X22 + 0x20]
	0x0261F540 AND W1, W19, 0x1
	0x0261F544 LDR X8, [X8 + 0xC0]
	0x0261F548 LDR X2, [X8 + 0x60]
	0x0261F54C BL 0x2D5F524
	0x0261F550 MOV W21, W0
	0x0261F554 TBZ X0, 0x0, 0x261F658
	0x0261F558 LDR X23, [X20 + 0x30]
	0x0261F55C MOVZ W8, 0x1
	0x0261F560 STRB W8, [X20 + 0x20]
	0x0261F564 CBZ X23, 0x261F670
	0x0261F568 ADRP X10, 0x1AFE000
	0x0261F56C LDR X8, [X23]
	0x0261F570 LDR X10, [X10 + 0x318]
	0x0261F574 LDRH W9, [X8 + 0x12E]
	0x0261F578 LDR X1, [X10]
	0x0261F57C CBZ X9, 0x261F5A0
	0x0261F580 LDR X10, [X8 + 0xB0]
	0x0261F584 ADD X10, X10, 0x8
	0x0261F588 LDUR X11, [X10 - 0x8]
	0x0261F58C CMP X11, X1
	0x0261F590 B.EQ 0x261F5B0
	0x0261F594 SUBS X9, X9, 0x1
	0x0261F598 ADD X10, X10, 0x10
	0x0261F59C B.NE 0x261F588
	0x0261F5A0 MOV X0, X23
	0x0261F5A4 MOV W2, W31
	0x0261F5A8 BL 0x1C5C788
	0x0261F5AC B 0x261F5BC
	0x0261F5B0 LDRSW X9, [X10]
	0x0261F5B4 ADD X8, X8, X9, 0x4, LSL
	0x0261F5B8 ADD X0, X8, 0x138
	0x0261F5BC LDP X8, X1, [X0]
	0x0261F5C0 MOV X0, X23
	0x0261F5C4 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1DBC000
	007 Move W8, [X21+75]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x1AFF000
	015 Move X0, [X0+1064]
	016 Call 0x1C17CF4
	017 Move X0, 0x1AFF000
	018 Move X0, [X0+1072]
	019 Call 0x1C17CF4
	020 Move X0, 0x1AD7000
	021 Move X0, [X0+928]
	022 Call 0x1C17CF4
	023 Move X0, 0x1AFF000
	024 Move X0, [X0+1080]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+75], W8
	028 Compare X20, 0
	029 JumpIfEqual {85}
	030 Move X0, X20
	031 Move X1, X31
	032 Call StateObjectBase.get_isSensitiveData, X0
	033 Move W22, W0
	034 Move X0, X20
	035 Move X1, X31
	036 Call "il2cpp_vm_object_is_inst", X0
	037 Compare X0, 0
	038 JumpIfEqual {85}
	039 Move X8, [X0]
	040 Move X9, [X8+424]
	041 Move X1, [X8+432]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X21, X0
	044 Move TEMP, X22
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {60}
	048 Move X8, 0x1AFF000
	049 Move X8, [X8+1080]
	050 Move X0, X21
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X1, [X8]
	056 Move X2, X31
	057 Move X30, [X31+48]
	058 Call String.Concat, X0, X1
	059 Return X0
	060 Move X8, [X19+32]
	061 Move X1, [X20+80]
	062 Move X8, [X8+192]
	063 Move X2, [X8+336]
	064 Move X8, 0x1AD7000
	065 Move X8, [X8+928]
	066 Move X9, [X2]
	067 Move X0, [X8]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, 0x1AFF000
	070 Move X9, 0x1AFF000
	071 Move X8, [X8+1064]
	072 Move X9, [X9+1072]
	073 Move X2, X0
	074 Move X0, X21
	075 Move X1, [X8]
	076 Move X3, [X9]
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X4, X31
	082 Move X30, [X31+48]
	083 Call String.Concat, X0, X1, X2, X3
	084 Return X0
	085 Call 0x1C17F20

Method: System.String ContentsToString(System.Object value)

Disassembly:
	0x0261F5C8 CBZ X0, 0x261F670
	0x0261F5CC LDR X8, [X22 + 0x20]
	0x0261F5D0 LDR W22, [X20 + 0x48]
	0x0261F5D4 MOV X23, X0
	0x0261F5D8 LDR X9, [X8 + 0xC0]
	0x0261F5DC LDR X8, [X0]
	0x0261F5E0 LDR X24, [X9 + 0x70]
	0x0261F5E4 LDRH W9, [X8 + 0x12E]
	0x0261F5E8 LDR X1, [X24 + 0x20]
	0x0261F5EC LDRH W2, [X24 + 0x50]
	0x0261F5F0 CBZ X9, 0x261F614
	0x0261F5F4 LDR X10, [X8 + 0xB0]
	0x0261F5F8 ADD X10, X10, 0x8
	0x0261F5FC LDUR X11, [X10 - 0x8]
	0x0261F600 CMP X11, X1
	0x0261F604 B.EQ 0x261F620
	0x0261F608 SUBS X9, X9, 0x1
	0x0261F60C ADD X10, X10, 0x10
	0x0261F610 B.NE 0x261F5FC
	0x0261F614 MOV X0, X23
	0x0261F618 BL 0x1C5C788
	0x0261F61C B 0x261F630
	0x0261F620 LDR W9, [X10]
	0x0261F624 ADD W9, W9, W2
	0x0261F628 ADD X8, X8, W9, 0x4, SXTW
	0x0261F62C ADD X0, X8, 0x138
	0x0261F630 LDR X0, [X0 + 0x8]
	0x0261F634 MOV X1, X24
	0x0261F638 BL 0x1C16DF8
	0x0261F63C LDR X8, [X0 + 0x8]
	0x0261F640 MOV X4, X0
	0x0261F644 AND W2, W19, 0x1
	0x0261F648 MOV X0, X23
	0x0261F64C MOV X1, X20
	0x0261F650 MOV W3, W22
	0x0261F654 BLR X8
	0x0261F658 AND W0, W21, 0x1
	0x0261F65C LDP X20, X19, [X31 + 0x30]
	0x0261F660 LDP X22, X21, [X31 + 0x20]
	0x0261F664 LDP X24, X23, [X31 + 0x10]
	0x0261F668 LDR X30, [X31], #0x40
	0x0261F66C RET
	0x0261F670 BL 0x1C16F20
	0x0261F674 STP X30, X25, [X31 - 0x40]!
	0x0261F678 STP X24, X23, [X31 + 0x10]
	0x0261F67C STP X22, X21, [X31 + 0x20]
	0x0261F680 STP X20, X19, [X31 + 0x30]
	0x0261F684 ADRP X22, 0x1DBB000
	0x0261F688 LDRB W8, [X22 + 0x54]
	0x0261F68C MOV X19, X2
	0x0261F690 MOV X21, X1
	0x0261F694 MOV X20, X0
	0x0261F698 TBNZ X8, 0x0, 0x261F6BC
	0x0261F69C ADRP X0, 0x1AD4000
	0x0261F6A0 LDR X0, [X0 + 0xE00]
	0x0261F6A4 BL 0x1C16CF4
	0x0261F6A8 ADRP X0, 0x1AD4000
	0x0261F6AC LDR X0, [X0 + 0xE18]
	0x0261F6B0 BL 0x1C16CF4
	0x0261F6B4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1DBC000
	008 Move X21, 0x1AD7000
	009 Move W8, [X22+76]
	010 Move X21, [X21+928]
	011 Move X19, X2
	012 Move X20, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x1AD7000
	018 Move X0, [X0+928]
	019 Call 0x1C17CF4
	020 Move X0, 0x1AD5000
	021 Move X0, [X0+3784]
	022 Call 0x1C17CF4
	023 Move X0, 0x1AD5000
	024 Move X0, [X0+2120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+76], W8
	028 Move X8, [X19+32]
	029 Move X21, [X21]
	030 Move X8, [X8+192]
	031 Move X9, [X8+336]
	032 Move X22, [X8+16]
	033 Move X23, [X9]
	034 Move W8, [X22+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move X0, X22
	040 Call 0x1C5D684
	041 Move X22, X0
	042 Compare X20, 0
	043 JumpIfEqual {53}
	044 Move X0, X20
	045 Move X1, X22
	046 Call 0x1C17E00
	047 Move X1, X0
	048 Compare X0, 0
	049 JumpIfNotEqual {54}
	050 Move X0, X20
	051 Move X1, X22
	052 Call 0x1C181E0
	053 Move X1, X31
	054 Move X8, [X19+32]
	055 Move X19, 0x1AD5000
	056 Move X20, 0x1AD5000
	057 Move X0, X21
	058 Move X8, [X8+192]
	059 Move X2, [X8+336]
	060 Move X19, [X19+3784]
	061 Move X20, [X20+2120]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X19]
	064 Move X2, [X20]
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X1, X0
	070 Move X0, X8
	071 Move X3, X31
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Call String.Concat, X0, X1, X2
	075 Return X0

Method: System.String ContentsToString()

Disassembly:
	0x0261F6B8 STRB W8, [X22 + 0x54]
	0x0261F6BC CBZ X21, 0x261F80C
	0x0261F6C0 LDR X8, [X19 + 0x20]
	0x0261F6C4 LDR X8, [X8 + 0xC0]
	0x0261F6C8 LDR X1, [X8 + 0x80]
	0x0261F6CC LDRB W8, [X1 + 0x135]
	0x0261F6D0 TBNZ X8, 0x0, 0x261F6E0
	0x0261F6D4 MOV X0, X1
	0x0261F6D8 BL 0x1C5C684
	0x0261F6DC MOV X1, X0
	0x0261F6E0 LDR X8, [X21]
	0x0261F6E4 LDRH W9, [X8 + 0x12E]
	0x0261F6E8 CBZ X9, 0x261F70C
	0x0261F6EC LDR X10, [X8 + 0xB0]
	0x0261F6F0 ADD X10, X10, 0x8
	0x0261F6F4 LDUR X11, [X10 - 0x8]
	0x0261F6F8 CMP X11, X1
	0x0261F6FC B.EQ 0x261F71C
	0x0261F700 SUBS X9, X9, 0x1
	0x0261F704 ADD X10, X10, 0x10
	0x0261F708 B.NE 0x261F6F4
	0x0261F70C MOV X0, X21
	0x0261F710 MOV W2, W31
	0x0261F714 BL 0x1C5C788
	0x0261F718 B 0x261F728
	0x0261F71C LDRSW X9, [X10]
	0x0261F720 ADD X8, X8, X9, 0x4, LSL
	0x0261F724 ADD X0, X8, 0x138
	0x0261F728 LDP X8, X1, [X0]
	0x0261F72C MOV X0, X21
	0x0261F730 BLR X8
	0x0261F734 CBZ W0, 0x261F80C
	0x0261F738 LDR X8, [X19 + 0x20]
	0x0261F73C LDR X0, [X20 + 0x50]
	0x0261F740 MOV X1, X21
	0x0261F744 LDR X8, [X8 + 0xC0]
	0x0261F748 LDR X2, [X8 + 0x98]
	0x0261F74C BL 0x21C1970
	0x0261F750 LDR X8, [X19 + 0x20]
	0x0261F754 LDR X8, [X8 + 0xC0]
	0x0261F758 LDR X1, [X8 + 0xA8]
	0x0261F75C BL 0x21D51A4
	0x0261F760 CBZ X0, 0x261F9D0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1DBC000
	009 Move X23, 0x1AD7000
	010 Move X21, 0x1AD5000
	011 Move X22, 0x1AD5000
	012 Move W8, [X24+77]
	013 Move X23, [X23+928]
	014 Move X21, [X21+3784]
	015 Move X22, [X22+2120]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x1AD7000
	023 Move X0, [X0+928]
	024 Call 0x1C17CF4
	025 Move X0, 0x1AD5000
	026 Move X0, [X0+3784]
	027 Call 0x1C17CF4
	028 Move X0, 0x1AD5000
	029 Move X0, [X0+2120]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+77], W8
	033 Move X8, [X20+32]
	034 Move X1, [X19+80]
	035 Move X0, [X23]
	036 Move X8, [X8+192]
	037 Move X2, [X8+336]
	038 Move X8, [X2]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X21]
	041 Move X2, [X22]
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move X1, X0
	049 Move X0, X8
	050 Move X3, X31
	051 Move X30, [X31+64]
	052 Call String.Concat, X0, X1, X2
	053 Return X0

Method: System.Boolean TryFindChild(System.Object childObjectKey, out SpatialSys.ObservableState.IStateObject result)

Disassembly:
	0x0261F764 LDR X23, [X0 + 0x18]
	0x0261F768 MOV X22, X0
	0x0261F76C CMP W23, 0x1

ISIL:
	001 Move W0, W31
	002 Move [X2], X31
	003 Return X0

Method: System.Void Reset(System.Boolean recursively = True)

Disassembly:
	0x0261F770 B.LT 0x261F7B0
	0x0261F774 MOV X24, X31
	0x0261F778 AND X8, X23, 0x0
	0x0261F77C ADD X25, X22, 0x20
	0x0261F780 CMP X24, W8, UXTW
	0x0261F784 B.CS 0x261F9CC
	0x0261F788 LDR X8, [X19 + 0x20]
	0x0261F78C LDRB W1, [X25, X24, LSL]
	0x0261F790 MOV X0, X20
	0x0261F794 LDR X8, [X8 + 0xC0]
	0x0261F798 LDR X2, [X8 + 0x58]
	0x0261F79C BL 0x261FEE0
	0x0261F7A0 LDR W8, [X22 + 0x18]
	0x0261F7A4 ADD X24, X24, 0x1
	0x0261F7A8 CMP X24, W8, SXTW
	0x0261F7AC B.LT 0x261F780
	0x0261F7B0 LDR X8, [X19 + 0x20]
	0x0261F7B4 LDR X8, [X8 + 0xC0]
	0x0261F7B8 LDR X1, [X8 + 0xA0]
	0x0261F7BC LDRB W8, [X1 + 0x135]
	0x0261F7C0 TBNZ X8, 0x0, 0x261F7D0
	0x0261F7C4 MOV X0, X1
	0x0261F7C8 BL 0x1C5C684
	0x0261F7CC MOV X1, X0
	0x0261F7D0 LDR X8, [X21]
	0x0261F7D4 LDRH W9, [X8 + 0x12E]
	0x0261F7D8 CBZ X9, 0x261F7FC
	0x0261F7DC LDR X10, [X8 + 0xB0]
	0x0261F7E0 ADD X10, X10, 0x8
	0x0261F7E4 LDUR X11, [X10 - 0x8]
	0x0261F7E8 CMP X11, X1
	0x0261F7EC B.EQ 0x261F828
	0x0261F7F0 SUBS X9, X9, 0x1
	0x0261F7F4 ADD X10, X10, 0x10
	0x0261F7F8 B.NE 0x261F7E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X20, X2
	006 Move W1, W31
	007 Move X19, X0
	008 Move X8, [X8+192]
	009 Move X2, [X8+104]
	010 Move X8, [X2]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X8, [X20+32]
	013 Move X8, [X8+192]
	014 Move X0, [X8+136]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X8, [X20+32]
	026 Move X8, [X8+192]
	027 Move X0, [X8+136]
	028 Move W9, [X0+309]
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Call 0x1C5D684
	034 Move X8, [X20+32]
	035 Move X8, [X8+192]
	036 Move X9, [X0+184]
	037 Move X2, [X8+24]
	038 Move X0, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X1, [X9]
	042 Move X3, [X2]
	043 Move X30, [X31+32]
	044 CallNoReturn X3

Method: System.Boolean ValueEquals(SpatialSys.ObservableState.IStatePrimitiveArray other)

Disassembly:
	0x0261F7FC MOV X0, X21
	0x0261F800 MOV W2, W31
	0x0261F804 BL 0x1C5C788
	0x0261F808 B 0x261F834
	0x0261F80C LDR X8, [X19 + 0x20]
	0x0261F810 MOV X0, X20
	0x0261F814 LDR X8, [X8 + 0xC0]
	0x0261F818 LDR X1, [X8 + 0x90]
	0x0261F81C BL 0x261FA94
	0x0261F820 MOVZ W22, 0x1
	0x0261F824 B 0x261F9B4
	0x0261F828 LDRSW X9, [X10]
	0x0261F82C ADD X8, X8, X9, 0x4, LSL
	0x0261F830 ADD X0, X8, 0x138
	0x0261F834 LDP X8, X1, [X0]
	0x0261F838 MOV X0, X21
	0x0261F83C BLR X8
	0x0261F840 CMP W23, 0x0
	0x0261F844 MOV X21, X0
	0x0261F848 CSET W22, NE
	0x0261F84C CBZ X0, 0x261F9D4
	0x0261F850 ADRP X23, 0x1AD4000
	0x0261F854 LDR X23, [X23 + 0xE18]
	0x0261F858 LDR X8, [X21]
	0x0261F85C LDR X1, [X23]
	0x0261F860 LDRH W9, [X8 + 0x12E]
	0x0261F864 CBZ X9, 0x261F888
	0x0261F868 LDR X10, [X8 + 0xB0]
	0x0261F86C ADD X10, X10, 0x8
	0x0261F870 LDUR X11, [X10 - 0x8]
	0x0261F874 CMP X11, X1
	0x0261F878 B.EQ 0x261F898
	0x0261F87C SUBS X9, X9, 0x1
	0x0261F880 ADD X10, X10, 0x10
	0x0261F884 B.NE 0x261F870
	0x0261F888 MOV X0, X21
	0x0261F88C MOV W2, W31
	0x0261F890 BL 0x1C5C788
	0x0261F894 B 0x261F8A4
	0x0261F898 LDRSW X9, [X10]
	0x0261F89C ADD X8, X8, X9, 0x4, LSL
	0x0261F8A0 ADD X0, X8, 0x138
	0x0261F8A4 LDP X8, X1, [X0]
	0x0261F8A8 MOV X0, X21
	0x0261F8AC BLR X8
	0x0261F8B0 TBZ X0, 0x0, 0x261F948
	0x0261F8B4 LDR X8, [X19 + 0x20]
	0x0261F8B8 LDR X8, [X8 + 0xC0]
	0x0261F8BC LDR X1, [X8 + 0xC0]
	0x0261F8C0 LDRB W8, [X1 + 0x135]
	0x0261F8C4 TBNZ X8, 0x0, 0x261F8D4
	0x0261F8C8 MOV X0, X1
	0x0261F8CC BL 0x1C5C684
	0x0261F8D0 MOV X1, X0
	0x0261F8D4 LDR X8, [X21]
	0x0261F8D8 LDRH W9, [X8 + 0x12E]
	0x0261F8DC CBZ X9, 0x261F900
	0x0261F8E0 LDR X10, [X8 + 0xB0]
	0x0261F8E4 ADD X10, X10, 0x8
	0x0261F8E8 LDUR X11, [X10 - 0x8]
	0x0261F8EC CMP X11, X1
	0x0261F8F0 B.EQ 0x261F910
	0x0261F8F4 SUBS X9, X9, 0x1
	0x0261F8F8 ADD X10, X10, 0x10
	0x0261F8FC B.NE 0x261F8E8
	0x0261F900 MOV X0, X21
	0x0261F904 MOV W2, W31
	0x0261F908 BL 0x1C5C788
	0x0261F90C B 0x261F91C
	0x0261F910 LDRSW X9, [X10]
	0x0261F914 ADD X8, X8, X9, 0x4, LSL
	0x0261F918 ADD X0, X8, 0x138
	0x0261F91C LDP X8, X1, [X0]
	0x0261F920 MOV X0, X21
	0x0261F924 BLR X8
	0x0261F928 LDR X8, [X19 + 0x20]
	0x0261F92C LDR X8, [X8 + 0xC0]
	0x0261F930 LDR X2, [X8 + 0x50]
	0x0261F934 AND W1, W0, 0x1
	0x0261F938 MOV X0, X20
	0x0261F93C BL 0x261F4F8
	0x0261F940 ORR W22, W22, W0, 0x0
	0x0261F944 B 0x261F858
	0x0261F948 MOV X19, X31
	0x0261F94C CBZ X21, 0x261F9B0
	0x0261F950 ADRP X10, 0x1AD4000
	0x0261F954 LDR X8, [X21]
	0x0261F958 LDR X10, [X10 + 0xE00]
	0x0261F95C LDRH W9, [X8 + 0x12E]
	0x0261F960 LDR X1, [X10]
	0x0261F964 CBZ X9, 0x261F988
	0x0261F968 LDR X10, [X8 + 0xB0]
	0x0261F96C ADD X10, X10, 0x8
	0x0261F970 LDUR X11, [X10 - 0x8]
	0x0261F974 CMP X11, X1
	0x0261F978 B.EQ 0x261F998
	0x0261F97C SUBS X9, X9, 0x1
	0x0261F980 ADD X10, X10, 0x10
	0x0261F984 B.NE 0x261F970
	0x0261F988 MOV X0, X21
	0x0261F98C MOV W2, W31
	0x0261F990 BL 0x1C5C788
	0x0261F994 B 0x261F9A4
	0x0261F998 LDRSW X9, [X10]
	0x0261F99C ADD X8, X8, X9, 0x4, LSL
	0x0261F9A0 ADD X0, X8, 0x138
	0x0261F9A4 LDP X8, X1, [X0]
	0x0261F9A8 MOV X0, X21
	0x0261F9AC BLR X8
	0x0261F9B0 CBNZ X19, 0x261F9D8
	0x0261F9B4 AND W0, W22, 0x1
	0x0261F9B8 LDP X20, X19, [X31 + 0x30]
	0x0261F9BC LDP X22, X21, [X31 + 0x20]
	0x0261F9C0 LDP X24, X23, [X31 + 0x10]
	0x0261F9C4 LDP X30, X25, [X31], #0x40
	0x0261F9C8 RET
	0x0261F9CC BL 0x1C16F28
	0x0261F9D0 BL 0x1C16F20
	0x0261F9D4 BL 0x1C16F20
	0x0261F9D8 MOV X0, X19
	0x0261F9DC BL 0x1C16F18
	0x0261F9E0 B 0x261F9EC
	0x0261F9E4 B 0x261F9EC
	0x0261F9E8 B 0x261F9EC
	0x0261F9EC MOV X20, X0
	0x0261F9F0 CMP W1, 0x1
	0x0261F9F4 B.NE 0x261FA0C
	0x0261F9F8 MOV X0, X20
	0x0261F9FC BL 0x3EB1AD0
	0x0261FA00 LDR X19, [X0]
	0x0261FA04 BL 0x3EB1AE0
	0x0261FA08 B 0x261F94C
	0x0261FA0C MOV X19, X31
	0x0261FA10 B 0x261FA18
	0x0261FA14 MOV X20, X0
	0x0261FA18 CBZ X21, 0x261FA7C
	0x0261FA1C ADRP X10, 0x1AD4000
	0x0261FA20 LDR X8, [X21]
	0x0261FA24 LDR X10, [X10 + 0xE00]
	0x0261FA28 LDRH W9, [X8 + 0x12E]
	0x0261FA2C LDR X1, [X10]
	0x0261FA30 CBZ X9, 0x261FA54
	0x0261FA34 LDR X10, [X8 + 0xB0]
	0x0261FA38 ADD X10, X10, 0x8
	0x0261FA3C LDUR X11, [X10 - 0x8]
	0x0261FA40 CMP X11, X1
	0x0261FA44 B.EQ 0x261FA64
	0x0261FA48 SUBS X9, X9, 0x1
	0x0261FA4C ADD X10, X10, 0x10
	0x0261FA50 B.NE 0x261FA3C
	0x0261FA54 MOV X0, X21
	0x0261FA58 MOV W2, W31
	0x0261FA5C BL 0x1C5C788
	0x0261FA60 B 0x261FA70
	0x0261FA64 LDRSW X9, [X10]
	0x0261FA68 ADD X8, X8, X9, 0x4, LSL
	0x0261FA6C ADD X0, X8, 0x138
	0x0261FA70 LDP X8, X1, [X0]
	0x0261FA74 MOV X0, X21
	0x0261FA78 BLR X8
	0x0261FA7C CBNZ X19, 0x261FA88
	0x0261FA80 MOV X0, X20
	0x0261FA84 BL 0x1D2C690
	0x0261FA88 MOV X0, X19
	0x0261FA8C BL 0x1C16F18
	0x0261FA90 BL 0x1990590

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X19, X2
	018 Move X26, X1
	019 Move X21, X0
	020 Move [X29-8], X8
	021 Move X27, [X2+32]
	022 Move X8, [X27+192]
	023 Move X8, [X8+40]
	024 Move W9, [X8+309]
	025 Move W20, [X8+252]
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {34}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move W8, [X0+252]
	033 Move X27, [X19+32]
	034 Move W8, W20
	035 Add W8, W8, 16
	036 Add X8, X8, 15
	037 Add X9, X31, 0
	038 And X8, X8, 0x1FFFFFFFF
	039 Subtract X22, X9, X8
	040 Add X31, X22, 0
	041 Add X9, X20, 15
	042 Add X8, X31, 0
	043 And X9, X9, 0x1FFFFFFFF
	044 Subtract X23, X8, X9
	045 Add X31, X23, 0
	046 Add X8, X31, 0
	047 Subtract X24, X8, X9
	048 Add X31, X24, 0
	049 Add X8, X31, 0
	050 Subtract X25, X8, X9
	051 Add X31, X25, 0
	052 Move X0, X25
	053 Move W1, W31
	054 Move X2, X20
	055 Call 0x3EB2B10
	056 Move X8, [X27+192]
	057 Move X0, [X8]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {64}
	063 Call 0x1C5D684
	064 Compare X26, 0
	065 JumpIfEqual {167}
	066 Move X8, [X26]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move X8, [X19+32]
	070 Move X0, X21
	071 Move X8, [X8+192]
	072 Move X1, [X8+352]
	073 Move X8, [X1]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X26, 0
	076 JumpIfEqual {186}
	077 Move X8, [X19+32]
	078 Move W27, W0
	079 Move X0, X26
	080 Move X8, [X8+192]
	081 Move X1, [X8+352]
	082 Move X8, [X1]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, [X19+32]
	086 Move X0, X21
	087 Move X8, [X8+192]
	088 Move X1, [X8+352]
	089 Move X8, [X1]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W27, W31
	093 Move [X29-40], X28
	094 Move X2, [X21+80]
	095 Compare X2, 0
	096 JumpIfEqual {186}
	097 Move X8, [X19+32]
	098 Subtract X28, X29, 12
	099 Subtract X3, X29, 32
	100 Move X4, X23
	101 Move X8, [X8+192]
	102 Move X1, [X8+32]
	103 Move X0, [X1]
	104 Move [X29-12], W27
	105 Move [X29-32], X28
	106 Move [X29-24], X23
	107 Move X8, [X1+16]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X0, X25
	110 Move X1, X23
	111 Move X2, X20
	112 Call 0x3EB2AC0
	113 Move X8, [X19+32]
	114 Subtract X3, X29, 32
	115 Move X2, X26
	116 Move X4, X24
	117 Move X8, [X8+192]
	118 Move X1, [X8+360]
	119 Move X0, [X1]
	120 Move [X29-12], W27
	121 Move [X29-32], X28
	122 Move [X29-24], X24
	123 Move X8, [X1+16]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X8, [X19+32]
	126 Move X9, [X8+192]
	127 Move X8, [X9+40]
	128 Move W10, [X8+309]
	129 Move TEMP, X10
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {138}
	133 Move X0, X8
	134 Call 0x1C5D684
	135 Move X8, [X19+32]
	136 Move X9, [X8+192]
	137 Move X8, [X9+40]
	138 Move X0, X8
	139 Move W10, [X8+40]
	140 Move X1, [X9+184]
	141 Move X8, X24
	142 Move TEMP, X10
	143 And TEMP, TEMP, -2147483648
	144 Compare TEMP, -2147483648
	145 JumpIfEqual {147}
	146 Move X8, [X24]
	147 Subtract X4, X29, 32
	148 Subtract X5, X29, 12
	149 Move X2, X22
	150 Move X3, X25
	151 Move [X29-32], X8
	152 Call 0x1C18728
	153 NotImplemented "Instruction LDURB not yet implemented."
	154 Compare W28, 0
	155 JumpIfEqual {164}
	156 Move X8, [X19+32]
	157 Move X0, X21
	158 Add W27, W27, 1
	159 Move X8, [X8+192]
	160 Move X1, [X8+352]
	161 Move X8, [X1]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CSET not yet implemented."
	167 Move W0, W31
	168 Move X8, [X28+40]
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X31, X29, 0
	172 Move X20, [X31+80]
	173 Move X19, [X31+88]
	174 Move X22, [X31+64]
	175 Move X21, [X31+72]
	176 Move X24, [X31+48]
	177 Move X23, [X31+56]
	178 Move X26, [X31+32]
	179 Move X25, [X31+40]
	180 Move X28, [X31+16]
	181 Move X27, [X31+24]
	182 Move X29, [X31+96]
	183 Move X30, [X31+104]
	184 Return X0
	185 Move W0, 1
	186 Call 0x1C17F20
	187 Call 0x3EB2B20

Method: System.Int32 System.Collections.Generic.IReadOnlyCollection<T>.get_Count()

Disassembly:
	0x0261FA94 SUB X31, X31, 0x80
	0x0261FA98 STP X30, X25, [X31 + 0x40]
	0x0261FA9C STP X24, X23, [X31 + 0x50]
	0x0261FAA0 STP X22, X21, [X31 + 0x60]
	0x0261FAA4 STP X20, X19, [X31 + 0x70]
	0x0261FAA8 ADRP X21, 0x1DBB000
	0x0261FAAC LDRB W8, [X21 + 0x55]
	0x0261FAB0 MOV X19, X1
	0x0261FAB4 MOV X20, X0
	0x0261FAB8 TBNZ X8, 0x0, 0x261FAD0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X1+32]
	006 Move X8, [X8+192]
	007 Move X1, [X8+48]
	008 Move X2, [X1]
	009 Move X30, [X31+16]
	010 CallNoReturn X2
	011 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x0261FABC ADRP X0, 0x1AFE000
	0x0261FAC0 LDR X0, [X0 + 0x318]
	0x0261FAC4 BL 0x1C16CF4
	0x0261FAC8 MOVZ W8, 0x1
	0x0261FACC STRB W8, [X21 + 0x55]
	0x0261FAD0 STP X31, X31, [X31 + 0x20]
	0x0261FAD4 STR X31, [X31 + 0x30]
	0x0261FAD8 LDR X22, [X20 + 0x50]
	0x0261FADC CBZ X22, 0x261FCC8
	0x0261FAE0 LDR X8, [X19 + 0x20]
	0x0261FAE4 LDR W23, [X22 + 0x20]
	0x0261FAE8 LDR X8, [X8 + 0xC0]
	0x0261FAEC LDR X0, [X8 + 0x8]
	0x0261FAF0 LDRB W8, [X0 + 0x135]
	0x0261FAF4 TBNZ X8, 0x0, 0x261FAFC
	0x0261FAF8 BL 0x1C5C684
	0x0261FAFC BL 0x1C16F10
	0x0261FB00 LDR X8, [X19 + 0x20]
	0x0261FB04 MOV X1, X22
	0x0261FB08 MOV X21, X0
	0x0261FB0C LDR X8, [X8 + 0xC0]
	0x0261FB10 LDR X2, [X8 + 0xD0]
	0x0261FB14 BL 0x2D5E4A8
	0x0261FB18 LDR X0, [X20 + 0x50]
	0x0261FB1C CBZ X0, 0x261FCC8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+368]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X0, X8
	018 Call 0x1C17F10
	019 Move X8, [X19+32]
	020 Move X1, X20
	021 Move X19, X0
	022 Move X8, [X8+192]
	023 Move X2, [X8+376]
	024 Move X8, [X2]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0261FB20 LDR X8, [X19 + 0x20]
	0x0261FB24 CMP W23, 0x0
	0x0261FB28 CSET W22, GT
	0x0261FB2C LDR X8, [X8 + 0xC0]
	0x0261FB30 LDR X1, [X8 + 0xD8]
	0x0261FB34 BL 0x2D5EA10
	0x0261FB38 LDRB W8, [X20 + 0x20]
	0x0261FB3C ORR W8, W8, W22, 0x0
	0x0261FB40 STRB W8, [X20 + 0x20]
	0x0261FB44 CBZ X21, 0x261FCC8
	0x0261FB48 LDR X8, [X19 + 0x20]
	0x0261FB4C ADRP X24, 0x1AFE000
	0x0261FB50 MOV X0, X21
	0x0261FB54 LDR X8, [X8 + 0xC0]
	0x0261FB58 LDR X1, [X8 + 0xE0]
	0x0261FB5C LDR X24, [X24 + 0x318]
	0x0261FB60 ADD X8, X31, 0x8
	0x0261FB64 BL 0x2D5EF18
	0x0261FB68 LDUR V0, [X31 + 0x8]
	0x0261FB6C LDR X8, [X31 + 0x18]
	0x0261FB70 STR V0, [X31 + 0x2]
	0x0261FB74 STR X8, [X31 + 0x30]
	0x0261FB78 LDR X8, [X19 + 0x20]
	0x0261FB7C LDR X8, [X8 + 0xC0]
	0x0261FB80 LDR X1, [X8 + 0x108]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+368]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X0, X8
	018 Call 0x1C17F10
	019 Move X8, [X19+32]
	020 Move X1, X20
	021 Move X19, X0
	022 Move X8, [X8+192]
	023 Move X2, [X8+376]
	024 Move X8, [X2]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Void CopyTo(SpatialSys.ObservableState.IStateObject other)

Disassembly:
	0x0261FB84 ADD X0, X31, 0x20
	0x0261FB88 BL 0x2BB6150
	0x0261FB8C TBZ X0, 0x0, 0x261FC8C
	0x0261FB90 LDR X21, [X20 + 0x30]
	0x0261FB94 CBZ X21, 0x261FCC0
	0x0261FB98 LDR X8, [X21]
	0x0261FB9C LDRB W25, [X31 + 0x30]
	0x0261FBA0 LDR X1, [X24]
	0x0261FBA4 LDRH W9, [X8 + 0x12E]
	0x0261FBA8 CBZ X9, 0x261FBCC
	0x0261FBAC LDR X10, [X8 + 0xB0]
	0x0261FBB0 ADD X10, X10, 0x8
	0x0261FBB4 LDUR X11, [X10 - 0x8]
	0x0261FBB8 CMP X11, X1
	0x0261FBBC B.EQ 0x261FBDC
	0x0261FBC0 SUBS X9, X9, 0x1
	0x0261FBC4 ADD X10, X10, 0x10
	0x0261FBC8 B.NE 0x261FBB4
	0x0261FBCC MOV X0, X21
	0x0261FBD0 MOV W2, W31
	0x0261FBD4 BL 0x1C5C788
	0x0261FBD8 B 0x261FBE8
	0x0261FBDC LDRSW X9, [X10]
	0x0261FBE0 ADD X8, X8, X9, 0x4, LSL
	0x0261FBE4 ADD X0, X8, 0x138
	0x0261FBE8 LDP X8, X1, [X0]
	0x0261FBEC MOV X0, X21
	0x0261FBF0 BLR X8
	0x0261FBF4 MOV X21, X0
	0x0261FBF8 CBZ X0, 0x261FCC4
	0x0261FBFC LDR X8, [X19 + 0x20]
	0x0261FC00 LDR W22, [X20 + 0x48]
	0x0261FC04 LDR X9, [X8 + 0xC0]
	0x0261FC08 LDR X8, [X21]
	0x0261FC0C LDR X23, [X9 + 0x100]
	0x0261FC10 LDRH W9, [X8 + 0x12E]
	0x0261FC14 LDR X1, [X23 + 0x20]
	0x0261FC18 LDRH W2, [X23 + 0x50]
	0x0261FC1C CBZ X9, 0x261FC40
	0x0261FC20 LDR X10, [X8 + 0xB0]
	0x0261FC24 ADD X10, X10, 0x8
	0x0261FC28 LDUR X11, [X10 - 0x8]
	0x0261FC2C CMP X11, X1
	0x0261FC30 B.EQ 0x261FC4C
	0x0261FC34 SUBS X9, X9, 0x1
	0x0261FC38 ADD X10, X10, 0x10
	0x0261FC3C B.NE 0x261FC28
	0x0261FC40 MOV X0, X21
	0x0261FC44 BL 0x1C5C788
	0x0261FC48 B 0x261FC5C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X1
	008 Move X20, X2
	009 Move X8, [X8+192]
	010 Move X1, [X8+392]
	011 Move X8, [X1]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X20+32]
	014 Move X21, X0
	015 Move X8, [X8+192]
	016 Move X1, [X8]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Compare X19, 0
	026 JumpIfEqual {59}
	027 Move X8, [X19]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X20+32]
	030 Move X8, [X8+192]
	031 Move X1, [X8]
	032 Move X8, [X8+400]
	033 Move W9, [X1+309]
	034 Move X3, [X8]
	035 Move TEMP, X9
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {44}
	039 Move X0, X1
	040 Move [X31+8], X3
	041 Call 0x1C5D684
	042 Move X3, [X31+8]
	043 Move X1, X0
	044 Move X8, [X19]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X20+32]
	047 Move X0, X19
	048 Move X1, X21
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X8, [X8+192]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Move X2, [X8+400]
	055 Add X31, X31, 48
	056 CallNoReturn X3
	057 Move X0, X19
	058 Call 0x1C181E0
	059 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0261FC4C LDR W9, [X10]
	0x0261FC50 ADD W9, W9, W2
	0x0261FC54 ADD X8, X8, W9, 0x4, SXTW
	0x0261FC58 ADD X0, X8, 0x138
	0x0261FC5C LDR X0, [X0 + 0x8]
	0x0261FC60 MOV X1, X23
	0x0261FC64 BL 0x1C16DF8
	0x0261FC68 LDR X8, [X0 + 0x8]
	0x0261FC6C CMP W25, 0x0
	0x0261FC70 MOV X4, X0
	0x0261FC74 CSET W2, NE
	0x0261FC78 MOV X0, X21
	0x0261FC7C MOV X1, X20
	0x0261FC80 MOV W3, W22
	0x0261FC84 BLR X8
	0x0261FC88 B 0x261FB78
	0x0261FC8C MOV X21, X31
	0x0261FC90 LDR X8, [X19 + 0x20]
	0x0261FC94 ADD X0, X31, 0x20
	0x0261FC98 LDR X8, [X8 + 0xC0]
	0x0261FC9C LDR X1, [X8 + 0x110]
	0x0261FCA0 BL 0x2BB614C
	0x0261FCA4 CBNZ X21, 0x261FCCC
	0x0261FCA8 LDP X20, X19, [X31 + 0x70]
	0x0261FCAC LDP X22, X21, [X31 + 0x60]
	0x0261FCB0 LDP X24, X23, [X31 + 0x50]
	0x0261FCB4 LDP X30, X25, [X31 + 0x40]
	0x0261FCB8 ADD X31, X31, 0x80
	0x0261FCBC RET
	0x0261FCC0 BL 0x1C16F20
	0x0261FCC4 BL 0x1C16F20
	0x0261FCC8 BL 0x1C16F20
	0x0261FCCC MOV X0, X21
	0x0261FCD0 BL 0x1C16F18
	0x0261FCD4 B 0x261FCE4
	0x0261FCD8 B 0x261FCE4
	0x0261FCDC B 0x261FCE4
	0x0261FCE0 B 0x261FCE4
	0x0261FCE4 MOV X20, X0
	0x0261FCE8 CMP W1, 0x1
	0x0261FCEC B.NE 0x261FD04
	0x0261FCF0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+320]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W1, W31
	021 Call 0x1C17D6C
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Move W9, [X8+309]
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X8
	030 Call 0x1C5D684
	031 Move X8, X0
	032 Move X8, [X8+192]
	033 Move X0, [X8+136]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+184]
	041 Move [X8], X20
	042 Move X0, [X19+32]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X8, [X0+192]
	050 Move X0, [X8+136]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {61}
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Call 0x1C5D684
	060 Return 
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return 

