Type: SpatialSys.ObservableState.StateDictionary`2/<>c

Method: System.Void .cctor()

Disassembly:
	0x0236F34C STR X20, [X8]
	0x0236F350 LDR X0, [X19 + 0x20]
	0x0236F354 LDRB W8, [X0 + 0x135]
	0x0236F358 TBNZ X8, 0x0, 0x236F360
	0x0236F35C BL 0x1C5C684
	0x0236F360 LDR X8, [X0 + 0xC0]
	0x0236F364 LDR X0, [X8 + 0x10]
	0x0236F368 LDRB W8, [X0 + 0x135]
	0x0236F36C TBNZ X8, 0x0, 0x236F37C
	0x0236F370 LDP X20, X19, [X31 + 0x10]
	0x0236F374 LDR X30, [X31], #0x20
	0x0236F378 B 0x1C5C684
	0x0236F37C LDP X20, X19, [X31 + 0x10]
	0x0236F380 LDR X30, [X31], #0x20
	0x0236F384 RET
	0x0236F388 MOV X1, X31
	0x0236F38C B 0x33BDD8C
	0x0236F390 LDR X8, [X1 + 0x20]
	0x0236F394 LDR X8, [X8 + 0xC0]
	0x0236F398 LDR X0, [X8 + 0x18]
	0x0236F39C B 0x2278924
	0x0236F3A0 STP X30, X19, [X31 - 0x10]!
	0x0236F3A4 CBZ X1, 0x236F428
	0x0236F3A8 LDR X8, [X2 + 0x20]
	0x0236F3AC MOV X19, X1
	0x0236F3B0 LDR X8, [X8 + 0xC0]
	0x0236F3B4 LDR X1, [X8 + 0x28]
	0x0236F3B8 LDRB W8, [X1 + 0x135]
	0x0236F3BC TBNZ X8, 0x0, 0x236F3CC
	0x0236F3C0 MOV X0, X1
	0x0236F3C4 BL 0x1C5C684
	0x0236F3C8 MOV X1, X0
	0x0236F3CC LDR X8, [X19]
	0x0236F3D0 LDRH W9, [X8 + 0x12E]
	0x0236F3D4 CBZ X9, 0x236F3F8
	0x0236F3D8 LDR X10, [X8 + 0xB0]
	0x0236F3DC ADD X10, X10, 0x8
	0x0236F3E0 LDUR X11, [X10 - 0x8]
	0x0236F3E4 CMP X11, X1
	0x0236F3E8 B.EQ 0x236F408
	0x0236F3EC SUBS X9, X9, 0x1
	0x0236F3F0 ADD X10, X10, 0x10
	0x0236F3F4 B.NE 0x236F3E0
	0x0236F3F8 MOVZ W2, 0x3
	0x0236F3FC MOV X0, X19
	0x0236F400 BL 0x1C5C788
	0x0236F404 B 0x236F418

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move [X8], X20
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {69}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call 0x1C5D684
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x0236F408 LDR W9, [X10]
	0x0236F40C ADD W9, W9, 0x3

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: TValue <.ctor>b__38_0()

Disassembly:
	0x0236F410 ADD X8, X8, W9, 0x4, SXTW
	0x0236F414 ADD X0, X8, 0x138
	0x0236F418 LDP X2, X1, [X0]
	0x0236F41C MOV X0, X19

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X0, [X8+24]
	004 Call Activator.CreateInstance
	005 Return X0

Method: TValue <.ctor>b__39_0()

Disassembly:
	0x0236F420 LDP X30, X19, [X31], #0x10
	0x0236F424 BR X2
	0x0236F428 BL 0x1C16F20
	0x0236F42C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X0, [X8+24]
	004 Call Activator.CreateInstance
	005 Return X0

