Type: SpatialSys.ObservableState.Utilities.DictionaryObserverHelper`2/<>c

Method: System.Void .cctor()

Disassembly:
	0x02370584 LDRB W8, [X0 + 0x135]
	0x02370588 TBNZ X8, 0x0, 0x2370590
	0x0237058C BL 0x1C5C684
	0x02370590 LDR X8, [X0 + 0xC0]
	0x02370594 LDR X0, [X8]
	0x02370598 LDRB W8, [X0 + 0x135]
	0x0237059C TBNZ X8, 0x0, 0x23705A4
	0x023705A0 BL 0x1C5C684
	0x023705A4 BL 0x1C16F10
	0x023705A8 LDR X8, [X19 + 0x20]
	0x023705AC MOV X20, X0
	0x023705B0 LDRB W9, [X8 + 0x135]
	0x023705B4 TBNZ X9, 0x0, 0x23705C0
	0x023705B8 MOV X0, X8
	0x023705BC BL 0x1C5C684
	0x023705C0 MOV X0, X20
	0x023705C4 MOV X1, X31
	0x023705C8 BL 0x33BDD8C
	0x023705CC LDR X0, [X19 + 0x20]
	0x023705D0 LDRB W8, [X0 + 0x135]
	0x023705D4 TBNZ X8, 0x0, 0x23705DC
	0x023705D8 BL 0x1C5C684
	0x023705DC LDR X8, [X0 + 0xC0]
	0x023705E0 LDR X0, [X8 + 0x10]
	0x023705E4 LDRB W8, [X0 + 0x135]
	0x023705E8 TBNZ X8, 0x0, 0x23705F0
	0x023705EC BL 0x1C5C684
	0x023705F0 LDR X8, [X0 + 0xB8]
	0x023705F4 STR X20, [X8]
	0x023705F8 LDR X0, [X19 + 0x20]
	0x023705FC LDRB W8, [X0 + 0x135]
	0x02370600 TBNZ X8, 0x0, 0x2370608
	0x02370604 BL 0x1C5C684
	0x02370608 LDR X8, [X0 + 0xC0]
	0x0237060C LDR X0, [X8 + 0x10]
	0x02370610 LDRB W8, [X0 + 0x135]
	0x02370614 TBNZ X8, 0x0, 0x2370624
	0x02370618 LDP X20, X19, [X31 + 0x10]
	0x0237061C LDR X30, [X31], #0x20
	0x02370620 B 0x1C5C684
	0x02370624 LDP X20, X19, [X31 + 0x10]
	0x02370628 LDR X30, [X31], #0x20
	0x0237062C RET
	0x02370630 MOV X1, X31
	0x02370634 B 0x33BDD8C
	0x02370638 STR X30, [X31 - 0x10]!
	0x0237063C STR W1, [X31 + 0xC]
	0x02370640 LDR X8, [X2 + 0x20]
	0x02370644 ADD X0, X31, 0xC
	0x02370648 LDR X8, [X8 + 0xC0]
	0x0237064C LDR X1, [X8 + 0x20]
	0x02370650 BL 0x337B6E0
	0x02370654 LDR X30, [X31], #0x10
	0x02370658 RET
	0x0237065C STR X30, [X31 - 0x20]!
	0x02370660 STP X20, X19, [X31 + 0x10]
	0x02370664 MOV X19, X0
	0x02370668 LDR X0, [X0 + 0x20]
	0x0237066C LDRB W8, [X0 + 0x135]
	0x02370670 TBNZ X8, 0x0, 0x2370678
	0x02370674 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Add X9, X8, 309
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, [X19+32]
	033 Add X9, X8, 309
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X8
	036 Move X10, [X0+192]
	037 Move X10, [X10+8]
	038 Move X21, [X10]
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move X8, [X8+192]
	047 Move X0, X20
	048 Move X1, [X8+8]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+184]
	066 Move [X8], X20
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+192]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {87}
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call 0x1C5D684
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 

Method: System.Void .ctor()

Disassembly:
	0x02370678 LDR X8, [X0 + 0xC0]
	0x0237067C LDR X0, [X8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: SpatialSys.ObservableState.IStateObject[] <.ctor>b__6_0(TValue x)

Disassembly:
	0x02370680 LDRB W8, [X0 + 0x135]
	0x02370684 TBNZ X8, 0x0, 0x237068C
	0x02370688 BL 0x1C5C684
	0x0237068C BL 0x1C16F10
	0x02370690 LDR X8, [X19 + 0x20]
	0x02370694 MOV X20, X0
	0x02370698 LDRB W9, [X8 + 0x135]
	0x0237069C TBNZ X9, 0x0, 0x23706A8
	0x023706A0 MOV X0, X8
	0x023706A4 BL 0x1C5C684
	0x023706A8 MOV X0, X20
	0x023706AC MOV X1, X31
	0x023706B0 BL 0x33BDD8C
	0x023706B4 LDR X0, [X19 + 0x20]
	0x023706B8 LDRB W8, [X0 + 0x135]
	0x023706BC TBNZ X8, 0x0, 0x23706C4
	0x023706C0 BL 0x1C5C684
	0x023706C4 LDR X8, [X0 + 0xC0]
	0x023706C8 LDR X0, [X8 + 0x10]
	0x023706CC LDRB W8, [X0 + 0x135]
	0x023706D0 TBNZ X8, 0x0, 0x23706D8
	0x023706D4 BL 0x1C5C684
	0x023706D8 LDR X8, [X0 + 0xB8]
	0x023706DC STR X20, [X8]
	0x023706E0 LDR X0, [X19 + 0x20]
	0x023706E4 LDRB W8, [X0 + 0x135]
	0x023706E8 TBNZ X8, 0x0, 0x23706F0
	0x023706EC BL 0x1C5C684
	0x023706F0 LDR X8, [X0 + 0xC0]
	0x023706F4 LDR X0, [X8 + 0x10]
	0x023706F8 LDRB W8, [X0 + 0x135]
	0x023706FC TBNZ X8, 0x0, 0x237070C
	0x02370700 LDP X20, X19, [X31 + 0x10]
	0x02370704 LDR X30, [X31], #0x20
	0x02370708 B 0x1C5C684
	0x0237070C LDP X20, X19, [X31 + 0x10]
	0x02370710 LDR X30, [X31], #0x20
	0x02370714 RET
	0x02370718 MOV X1, X31
	0x0237071C B 0x33BDD8C
	0x02370720 STR X30, [X31 - 0x10]!
	0x02370724 CBZ X1, 0x2370740
	0x02370728 LDR X8, [X1]
	0x0237072C MOV X0, X1
	0x02370730 LDP X2, X8, [X8 + 0x168]
	0x02370734 MOV X1, X8
	0x02370738 LDR X30, [X31], #0x10
	0x0237073C BR X2
	0x02370740 BL 0x1C16F20
	0x02370744 STP X30, X21, [X31 - 0x20]!
	0x02370748 STP X20, X19, [X31 + 0x10]
	0x0237074C MOV X19, X0
	0x02370750 LDR X0, [X0 + 0x20]
	0x02370754 LDRB W8, [X0 + 0x135]
	0x02370758 TBNZ X8, 0x0, 0x2370760
	0x0237075C BL 0x1C5C684
	0x02370760 LDR X8, [X0 + 0xC0]
	0x02370764 LDR X0, [X8]
	0x02370768 LDRB W8, [X0 + 0x135]
	0x0237076C TBNZ X8, 0x0, 0x2370774
	0x02370770 BL 0x1C5C684
	0x02370774 BL 0x1C16F10
	0x02370778 LDR X8, [X19 + 0x20]
	0x0237077C MOV X20, X0
	0x02370780 ADD X9, X8, 0x135
	0x02370784 LDRH W9, [X9]
	0x02370788 TBNZ X9, 0x0, 0x23707A4
	0x0237078C MOV X0, X8
	0x02370790 BL 0x1C5C684
	0x02370794 LDR X8, [X19 + 0x20]
	0x02370798 ADD X9, X8, 0x135
	0x0237079C LDRH W9, [X9]
	0x023707A0 B 0x23707A8
	0x023707A4 MOV X0, X8
	0x023707A8 LDR X10, [X0 + 0xC0]
	0x023707AC LDR X10, [X10 + 0x8]
	0x023707B0 LDR X21, [X10]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X22, 0x206A000
	014 Move X19, 0x1D84000
	015 Move X21, X2
	016 Move [X29-8], X8
	017 Move [X29-16], X1
	018 Move W8, [X22+2254]
	019 Move X19, [X19+3504]
	020 Move X20, X1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x1D84000
	026 Move X0, [X0+3504]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2254], W8
	030 Move X8, [X21+32]
	031 Move X8, [X8+192]
	032 Move X8, [X8+24]
	033 Move W22, [X8+252]
	034 Add X8, X31, 0
	035 Add X9, X22, 15
	036 And X9, X9, 0x1FFFFFFFF
	037 Subtract X23, X8, X9
	038 Add X31, X23, 0
	039 Move X0, [X19]
	040 Move W1, 1
	041 Call 0x1C17D6C
	042 Move X21, [X21+32]
	043 Move X19, X0
	044 Move X0, X23
	045 Move X2, X22
	046 Move X8, [X21+192]
	047 Move X8, [X8+24]
	048 Move W8, [X8+40]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X8, X29, 16
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Call 0x3EB2AC0
	053 Move X8, [X21+192]
	054 Move X1, X23
	055 Move X0, [X8+24]
	056 Call 0x1C17E04
	057 Compare X19, 0
	058 JumpIfEqual {86}
	059 Move X20, X0
	060 Compare X0, 0
	061 JumpIfEqual {68}
	062 Move X8, [X19]
	063 Move X0, X20
	064 Move X1, [X8+64]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {88}
	068 Move W8, [X19+24]
	069 Compare W8, 0
	070 JumpIfEqual {87}
	071 Move [X19+32], X20
	072 Move X8, [X24+40]
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X19
	076 Add X31, X29, 0
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X29, [X31+64]
	084 Move X30, [X31+72]
	085 Return X0
	086 Call 0x1C17F20
	087 Call 0x1C17F28
	088 Call 0x1C17F44
	089 Move X1, X31
	090 Call 0x1C17DEC
	091 Call 0x3EB2B20

