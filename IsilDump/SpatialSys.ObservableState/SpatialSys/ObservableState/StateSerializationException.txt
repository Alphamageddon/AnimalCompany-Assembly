Type: SpatialSys.ObservableState.StateSerializationException

Method: System.Void .ctor()

Disassembly:
	0x035CA924 BL 0x1C16F10
	0x035CA928 ADRP X8, 0xB6E000
	0x035CA92C LDR X8, [X8 + 0x3C8]
	0x035CA930 MOV X1, X23
	0x035CA934 MOV X3, X31
	0x035CA938 MOV X22, X0
	0x035CA93C LDR X2, [X8]
	0x035CA940 BL 0x2D30F2C
	0x035CA944 LDR X8, [X24]
	0x035CA948 LDR X8, [X8 + 0xB8]
	0x035CA94C STR X22, [X8 + 0x90]
	0x035CA950 LDR X3, [X20]
	0x035CA954 MOV X0, X19
	0x035CA958 MOV X1, X21
	0x035CA95C MOV X2, X22
	0x035CA960 BL 0x226AAAC
	0x035CA964 LDR X0, [X24]
	0x035CA968 LDR W8, [X0 + 0xE0]
	0x035CA96C CBNZ W8, 0x35CA978
	0x035CA970 BL 0x1C16DFC
	0x035CA974 LDR X0, [X24]
	0x035CA978 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xE17000
	006 Move X21, 0xB2A000
	007 Move W8, [X20+462]
	008 Move X21, [X21+2000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB2A000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+462], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Exception..ctor, X0
	031 Return 

Method: System.Void .ctor(System.String message)

Disassembly:
	0x035CA97C LDR X21, [X8 + 0x98]
	0x035CA980 CBNZ X21, 0x35CA9D4
	0x035CA984 LDR W8, [X0 + 0xE0]
	0x035CA988 CBNZ W8, 0x35CA994
	0x035CA98C BL 0x1C16DFC
	0x035CA990 LDR X0, [X24]
	0x035CA994 ADRP X9, 0xB6E000
	0x035CA998 LDR X8, [X0 + 0xB8]
	0x035CA99C LDR X9, [X9 + 0x1A8]
	0x035CA9A0 LDR X22, [X8]
	0x035CA9A4 LDR X0, [X9]
	0x035CA9A8 BL 0x1C16F10
	0x035CA9AC ADRP X8, 0xB6E000
	0x035CA9B0 LDR X8, [X8 + 0x3D0]
	0x035CA9B4 MOV X1, X22
	0x035CA9B8 MOV X3, X31
	0x035CA9BC MOV X21, X0
	0x035CA9C0 LDR X2, [X8]
	0x035CA9C4 BL 0x2D2B888
	0x035CA9C8 LDR X0, [X24]
	0x035CA9CC LDR X8, [X0 + 0xB8]
	0x035CA9D0 STR X21, [X8 + 0x98]
	0x035CA9D4 LDR W8, [X0 + 0xE0]
	0x035CA9D8 CBNZ W8, 0x35CA9E4
	0x035CA9DC BL 0x1C16DFC
	0x035CA9E0 LDR X0, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE17000
	007 Move X22, 0xB2A000
	008 Move W8, [X21+463]
	009 Move X22, [X22+2000]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB2A000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+463], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call Exception..ctor, X0, X1
	035 Return 

Method: System.Void .ctor(System.String message, System.Exception inner)

Disassembly:
	0x035CA9E4 LDR X8, [X0 + 0xB8]
	0x035CA9E8 ADRP X20, 0xB6E000
	0x035CA9EC LDR X22, [X8 + 0xA0]
	0x035CA9F0 LDR X20, [X20 + 0x2E0]
	0x035CA9F4 CBNZ X22, 0x35CAA48
	0x035CA9F8 LDR W8, [X0 + 0xE0]
	0x035CA9FC CBNZ W8, 0x35CAA08
	0x035CAA00 BL 0x1C16DFC
	0x035CAA04 LDR X0, [X24]
	0x035CAA08 ADRP X9, 0xB6E000
	0x035CAA0C LDR X8, [X0 + 0xB8]
	0x035CAA10 LDR X9, [X9 + 0x2C0]
	0x035CAA14 LDR X23, [X8]
	0x035CAA18 LDR X0, [X9]
	0x035CAA1C BL 0x1C16F10
	0x035CAA20 ADRP X8, 0xB6E000
	0x035CAA24 LDR X8, [X8 + 0x3D8]
	0x035CAA28 MOV X1, X23
	0x035CAA2C MOV X3, X31
	0x035CAA30 MOV X22, X0
	0x035CAA34 LDR X2, [X8]
	0x035CAA38 BL 0x2D2F650
	0x035CAA3C LDR X8, [X24]
	0x035CAA40 LDR X8, [X8 + 0xB8]
	0x035CAA44 STR X22, [X8 + 0xA0]
	0x035CAA48 LDR X3, [X20]
	0x035CAA4C MOV X0, X19
	0x035CAA50 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xE17000
	008 Move X23, 0xB2A000
	009 Move W8, [X22+464]
	010 Move X23, [X23+2000]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xB2A000
	019 Move X0, [X0+2000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+464], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Move X2, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X3, X31
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call Exception..ctor, X0, X1, X2
	039 Return 

