Type: SpatialSys.ObservableState.StateDictionary`2/<get_childStateObjects>d__3

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0297E498 STR X9, [X19 + 0x40]
	0x0297E49C ADRP X8, 0xFFFFFFFFFF04F000
	0x0297E4A0 ADD X8, X8, 0x1D8
	0x0297E4A4 STR X8, [X19 + 0x38]
	0x0297E4A8 LDP X20, X19, [X31 + 0x10]
	0x0297E4AC LDP X30, X21, [X31], #0x20
	0x0297E4B0 RET
	0x0297E4B4 ADRP X1, 0xFFFFFFFFFE19D000
	0x0297E4B8 ADD X1, X1, 0xEE3
	0x0297E4BC MOV X0, X31
	0x0297E4C0 BL 0x1C16F3C
	0x0297E4C4 MOV X1, X31
	0x0297E4C8 BL 0x1C16DEC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0297E4CC LDR X8, [X0 + 0x40]
	0x0297E4D0 LDR X3, [X0 + 0x18]
	0x0297E4D4 LDR X2, [X0 + 0x28]
	0x0297E4D8 MOV X0, X8
	0x0297E4DC BR X3
	0x0297E4E0 SUB X31, X31, 0x50
	0x0297E4E4 STP X30, X23, [X31 + 0x20]
	0x0297E4E8 STP X22, X21, [X31 + 0x30]
	0x0297E4EC STP X20, X19, [X31 + 0x40]
	0x0297E4F0 ADRP X23, 0x1A5C000
	0x0297E4F4 STR X1, [X31 + 0x18]
	0x0297E4F8 ADRP X22, 0x17A0000
	0x0297E4FC LDRB W8, [X23 + 0xE91]
	0x0297E500 LDR X22, [X22 + 0x350]
	0x0297E504 MOV X19, X3
	0x0297E508 MOV X20, X2

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Move X8, [X1+32]
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W9, TEMP
	008 Move X8, [X8+192]
	009 Move X8, [X8+8]
	010 Move [X0+16], W9
	011 Add X0, X0, 48
	012 Move X8, [X8+32]
	013 Move X8, [X8+192]
	014 Move X1, [X8+104]
	015 Call Enumerator<Int32, Object>.Dispose, X0
	016 Return 
	017 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0297E50C MOV X21, X0
	0x0297E510 TBNZ X8, 0x0, 0x297E528
	0x0297E514 ADRP X0, 0x17A0000
	0x0297E518 LDR X0, [X0 + 0x350]
	0x0297E51C BL 0x1C16CF4
	0x0297E520 MOVZ W8, 0x1
	0x0297E524 STRB W8, [X23 + 0xE91]
	0x0297E528 LDR X0, [X22]
	0x0297E52C ADD X1, X31, 0x18
	0x0297E530 STP X31, X31, [X31 + 0x8]
	0x0297E534 BL 0x1C16E04
	0x0297E538 STR X0, [X31 + 0x8]
	0x0297E53C ADD X1, X31, 0x8
	0x0297E540 MOV X0, X21
	0x0297E544 MOV X2, X20
	0x0297E548 MOV X3, X19
	0x0297E54C BL 0x1C16CB0
	0x0297E550 LDP X20, X19, [X31 + 0x40]
	0x0297E554 LDP X22, X21, [X31 + 0x30]
	0x0297E558 LDP X30, X23, [X31 + 0x20]
	0x0297E55C ADD X31, X31, 0x50
	0x0297E560 RET
	0x0297E564 MOV X0, X1
	0x0297E568 MOV X1, X31
	0x0297E56C B 0x1C16CB4
	0x0297E570 STP X30, X21, [X31 - 0x20]!
	0x0297E574 STP X20, X19, [X31 + 0x10]
	0x0297E578 LDR X8, [X2 + 0x8]
	0x0297E57C STP X1, X2, [X0 + 0x20]
	0x0297E580 MOV X19, X0
	0x0297E584 MOV X20, X1
	0x0297E588 STR X8, [X0 + 0x10]
	0x0297E58C LDRB W21, [X2 + 0x52]
	0x0297E590 STR X0, [X0 + 0x40]
	0x0297E594 MOV X0, X2
	0x0297E598 BL 0x1C16D84
	0x0297E59C TBZ X0, 0x0, 0x297E5B8
	0x0297E5A0 CMP W21, 0x1
	0x0297E5A4 B.NE 0x297E5BC
	0x0297E5A8 ADRP X8, 0xFFFFFFFFFF04F000
	0x0297E5AC ADD X8, X8, 0x288
	0x0297E5B0 STR X8, [X19 + 0x18]
	0x0297E5B4 B 0x297E5CC
	0x0297E5B8 CBZ X20, 0x297E5E4
	0x0297E5BC LDR X8, [X19 + 0x10]
	0x0297E5C0 LDR X9, [X19 + 0x20]
	0x0297E5C4 STR X8, [X19 + 0x18]
	0x0297E5C8 STR X9, [X19 + 0x40]
	0x0297E5CC ADRP X8, 0xFFFFFFFFFF04F000
	0x0297E5D0 ADD X8, X8, 0x230
	0x0297E5D4 STR X8, [X19 + 0x38]
	0x0297E5D8 LDP X20, X19, [X31 + 0x10]
	0x0297E5DC LDP X30, X21, [X31], #0x20
	0x0297E5E0 RET
	0x0297E5E4 ADRP X1, 0xFFFFFFFFFE19D000
	0x0297E5E8 ADD X1, X1, 0xEE3
	0x0297E5EC MOV X0, X31
	0x0297E5F0 BL 0x1C16F3C
	0x0297E5F4 MOV X1, X31
	0x0297E5F8 BL 0x1C16DEC
	0x0297E5FC LDR X8, [X0 + 0x40]
	0x0297E600 LDR X4, [X0 + 0x18]
	0x0297E604 LDR X3, [X0 + 0x28]
	0x0297E608 MOV X0, X8
	0x0297E60C BR X4
	0x0297E610 SUB X31, X31, 0x50
	0x0297E614 STP X30, X23, [X31 + 0x20]
	0x0297E618 STP X22, X21, [X31 + 0x30]
	0x0297E61C STP X20, X19, [X31 + 0x40]
	0x0297E620 ADRP X23, 0x1A5C000
	0x0297E624 STP X1, X2, [X31 + 0x10]
	0x0297E628 ADRP X22, 0x179D000
	0x0297E62C LDRB W8, [X23 + 0xE92]
	0x0297E630 LDR X22, [X22 + 0x5B0]
	0x0297E634 MOV X19, X4
	0x0297E638 MOV X20, X3
	0x0297E63C MOV X21, X0
	0x0297E640 TBNZ X8, 0x0, 0x297E658
	0x0297E644 ADRP X0, 0x179D000
	0x0297E648 LDR X0, [X0 + 0x5B0]
	0x0297E64C BL 0x1C16CF4
	0x0297E650 MOVZ W8, 0x1
	0x0297E654 STRB W8, [X23 + 0xE92]
	0x0297E658 LDR X0, [X22]
	0x0297E65C ADD X1, X31, 0x10
	0x0297E660 STP X31, X31, [X31]
	0x0297E664 BL 0x1C16E04
	0x0297E668 STR X0, [X31]
	0x0297E66C ADD X1, X31, 0x0
	0x0297E670 MOV X0, X21
	0x0297E674 MOV X2, X20
	0x0297E678 MOV X3, X19
	0x0297E67C BL 0x1C16CB0
	0x0297E680 LDP X20, X19, [X31 + 0x40]
	0x0297E684 LDP X22, X21, [X31 + 0x30]
	0x0297E688 LDP X30, X23, [X31 + 0x20]
	0x0297E68C ADD X31, X31, 0x50
	0x0297E690 RET
	0x0297E694 MOV X0, X1
	0x0297E698 MOV X1, X31
	0x0297E69C B 0x1C16CB4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Add X8, X31, 88
	005 Add X9, X31, 80
	006 Move [X31+80], X1
	007 Move [X31+88], X0
	008 Move [X31+64], X8
	009 Move [X31+72], X9
	010 Move W8, [X0+16]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Compare W8, 0
	013 JumpIfNotEqual {94}
	014 Move X8, [X0+40]
	015 Move TEMP, 0
	016 Not TEMP
	017 Move W9, TEMP
	018 Move [X0+16], W9
	019 Compare X8, 0
	020 JumpIfEqual {84}
	021 Move X0, [X8+96]
	022 Compare X0, 0
	023 JumpIfEqual {85}
	024 Move X8, [X1+32]
	025 Move X8, [X8+192]
	026 Move X1, [X8+32]
	027 Call Dictionary`2<Int32, Object>.get_Values, X0
	028 Compare X0, 0
	029 JumpIfEqual {86}
	030 Move X8, [X31+80]
	031 Move X8, [X8+32]
	032 Move X8, [X8+192]
	033 Move X1, [X8+48]
	034 Add X8, X31, 8
	035 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move X8, [X31+24]
	038 Move X1, [X31+80]
	039 Move X0, [X31+88]
	040 Move TEMP, 2
	041 Not TEMP
	042 Move W9, TEMP
	043 Move [X31+2], V0
	044 Move [X31+48], X8
	045 Move [X0+64], X8
	046 Move [X0+3], V0
	047 Move [X0+16], W9
	048 Move TEMP, 2
	049 Not TEMP
	050 Move W8, TEMP
	051 Move [X0+16], W8
	052 Move X8, [X1+32]
	053 Add X0, X0, 48
	054 Move X8, [X8+192]
	055 Move X1, [X8+88]
	056 Call Enumerator<Int32, Object>.MoveNext, X0
	057 Move X8, [X31+88]
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {66}
	062 Move X9, [X8+64]
	063 Move W0, 1
	064 Move [X8+16], W0
	065 Move [X8+24], X9
	066 Move X9, [X31+80]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W10, TEMP
	070 Add X0, X8, 48
	071 Move X9, [X9+32]
	072 Move X9, [X9+192]
	073 Move X9, [X9+8]
	074 Move [X8+16], W10
	075 Move X9, [X9+32]
	076 Move X9, [X9+192]
	077 Move X1, [X9+104]
	078 Call Enumerator<Int32, Object>.Dispose, X0
	079 Move X8, [X31+88]
	080 Move W0, W31
	081 Move [X8+48], X31
	082 Move [X8+56], X31
	083 Move [X8+64], X31
	084 Call 0x1C17F20
	085 Call 0x1C17F20
	086 Call 0x1C17F20
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Call 0x3EB2AD0
	089 Move X19, [X0]
	090 Move [X31+56], X19
	091 Call 0x3EB2AE0
	092 Compare X19, 0
	093 JumpIfNotEqual {99}
	094 Move W0, W31
	095 Move X30, [X31+96]
	096 Move X19, [X31+104]
	097 Add X31, X31, 112
	098 Return X0
	099 Add X8, X31, 56
	100 Add X0, X8, 8
	101 Call 0x19D0898
	102 Move X0, X19
	103 Call 0x1C17F18
	104 Compare X19, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1D2D690
	107 Move X8, [X31+80]
	108 Move X0, [X31+88]
	109 Move X8, [X8+32]
	110 Move X8, [X8+192]
	111 Move X1, [X8+96]
	112 Call 0x297E4CC, X0
	113 Move X0, X19
	114 Call 0x1C17F18
	115 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x0297E6A0 STP X30, X21, [X31 - 0x20]!
	0x0297E6A4 STP X20, X19, [X31 + 0x10]
	0x0297E6A8 LDR X8, [X2 + 0x8]
	0x0297E6AC STP X1, X2, [X0 + 0x20]
	0x0297E6B0 MOV X19, X0
	0x0297E6B4 MOV X20, X1
	0x0297E6B8 STR X8, [X0 + 0x10]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+16], W8
	005 Move X8, [X1+32]
	006 Add X0, X0, 48
	007 Move X8, [X8+192]
	008 Move X1, [X8+104]
	009 Call Enumerator<Int32, Object>.Dispose, X0
	010 Return 

Method: SpatialSys.ObservableState.IStateObject System.Collections.Generic.IEnumerator<SpatialSys.ObservableState.IStateObject>.get_Current()

Disassembly:
	0x0297E6BC LDRB W21, [X2 + 0x52]
	0x0297E6C0 STR X0, [X0 + 0x40]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0297E6C4 MOV X0, X2
	0x0297E6C8 BL 0x1C16D84
	0x0297E6CC TBZ X0, 0x0, 0x297E6E8
	0x0297E6D0 CMP W21, 0x1
	0x0297E6D4 B.NE 0x297E6EC
	0x0297E6D8 ADRP X8, 0xFFFFFFFFFF04F000
	0x0297E6DC ADD X8, X8, 0x2FC
	0x0297E6E0 STR X8, [X19 + 0x18]
	0x0297E6E4 B 0x297E6FC
	0x0297E6E8 CBZ X20, 0x297E714
	0x0297E6EC LDR X8, [X19 + 0x10]
	0x0297E6F0 LDR X9, [X19 + 0x20]
	0x0297E6F4 STR X8, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1776000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0297E6F8 STR X9, [X19 + 0x40]
	0x0297E6FC ADRP X8, 0xFFFFFFFFFF04F000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<SpatialSys.ObservableState.IStateObject> System.Collections.Generic.IEnumerable<SpatialSys.ObservableState.IStateObject>.GetEnumerator()

Disassembly:
	0x0297E700 ADD X8, X8, 0x29C
	0x0297E704 STR X8, [X19 + 0x38]
	0x0297E708 LDP X20, X19, [X31 + 0x10]
	0x0297E70C LDP X30, X21, [X31], #0x20
	0x0297E710 RET
	0x0297E714 ADRP X1, 0xFFFFFFFFFE19D000
	0x0297E718 ADD X1, X1, 0xEE3
	0x0297E71C MOV X0, X31
	0x0297E720 BL 0x1C16F3C
	0x0297E724 MOV X1, X31
	0x0297E728 BL 0x1C16DEC
	0x0297E72C SUB X31, X31, 0x30
	0x0297E730 STR X30, [X31 + 0x20]
	0x0297E734 LDR X9, [X1 + 0x10]
	0x0297E738 LDR V0, [X1]
	0x0297E73C LDR X10, [X0 + 0x18]
	0x0297E740 LDR X8, [X0 + 0x40]
	0x0297E744 STR X9, [X31 + 0x10]
	0x0297E748 STR V0, [X31]
	0x0297E74C LDR X2, [X0 + 0x28]
	0x0297E750 ADD X1, X31, 0x0
	0x0297E754 MOV X0, X8
	0x0297E758 BLR X10
	0x0297E75C LDR X30, [X31 + 0x20]
	0x0297E760 ADD X31, X31, 0x30
	0x0297E764 RET
	0x0297E768 SUB X31, X31, 0x50
	0x0297E76C STR X30, [X31 + 0x10]
	0x0297E770 STP X24, X23, [X31 + 0x20]
	0x0297E774 STP X22, X21, [X31 + 0x30]
	0x0297E778 STP X20, X19, [X31 + 0x40]
	0x0297E77C ADRP X24, 0x1A5C000
	0x0297E780 ADRP X23, 0x17A0000
	0x0297E784 LDRB W8, [X24 + 0xE93]
	0x0297E788 LDR X23, [X23 + 0x358]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Add W31, W8, 2
	009 Move W21, [X19+32]
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X8, [X20+32]
	015 Move X8, [X8+192]
	016 Move X0, [X8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 Move X0, X31
	028 Move [X20+16], W31
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X20+32], W0
	031 Move X8, [X19+40]
	032 Move X19, X20
	033 Move [X20+40], X8
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0297E78C MOV X19, X3
	0x0297E790 MOV X20, X2
	0x0297E794 MOV X22, X1
	0x0297E798 MOV X21, X0

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+120]
	004 Call 0x297E700, X0
	005 Return X0

