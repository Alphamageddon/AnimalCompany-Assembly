Type: SpatialSys.ObservableState.StatePrimitive`1/<>c

Method: System.Void .cctor()

Disassembly:
	0x02365BE4 BL 0x1C5C684
	0x02365BE8 LDR X8, [X0 + 0xB8]
	0x02365BEC STR X20, [X8]
	0x02365BF0 LDR X0, [X19 + 0x20]
	0x02365BF4 LDRB W8, [X0 + 0x135]
	0x02365BF8 TBNZ X8, 0x0, 0x2365C00
	0x02365BFC BL 0x1C5C684
	0x02365C00 LDR X8, [X0 + 0xC0]
	0x02365C04 LDR X0, [X8 + 0x10]
	0x02365C08 LDRB W8, [X0 + 0x135]
	0x02365C0C TBNZ X8, 0x0, 0x2365C1C
	0x02365C10 LDP X20, X19, [X31 + 0x10]
	0x02365C14 LDR X30, [X31], #0x20
	0x02365C18 B 0x1C5C684
	0x02365C1C LDP X20, X19, [X31 + 0x10]
	0x02365C20 LDR X30, [X31], #0x20
	0x02365C24 RET
	0x02365C28 MOV X1, X31
	0x02365C2C B 0x33BDD8C
	0x02365C30 STP X30, X19, [X31 - 0x10]!
	0x02365C34 LDR X8, [X1 + 0x20]
	0x02365C38 MOV X19, X1
	0x02365C3C LDR X8, [X8 + 0xC0]
	0x02365C40 LDR X0, [X8 + 0x18]
	0x02365C44 LDRB W8, [X0 + 0x135]
	0x02365C48 TBNZ X8, 0x0, 0x2365C50
	0x02365C4C BL 0x1C5C684
	0x02365C50 BL 0x1C16F10
	0x02365C54 LDR X8, [X19 + 0x20]
	0x02365C58 MOV X19, X0
	0x02365C5C LDR X8, [X8 + 0xC0]
	0x02365C60 LDR X1, [X8 + 0x20]
	0x02365C64 BL 0x28F40FC
	0x02365C68 MOV X0, X19
	0x02365C6C LDP X30, X19, [X31], #0x10
	0x02365C70 RET
	0x02365C74 STR X30, [X31 - 0x20]!
	0x02365C78 STP X20, X19, [X31 + 0x10]
	0x02365C7C MOV X19, X0
	0x02365C80 LDR X0, [X0 + 0x20]
	0x02365C84 LDRB W8, [X0 + 0x135]
	0x02365C88 TBNZ X8, 0x0, 0x2365C90
	0x02365C8C BL 0x1C5C684
	0x02365C90 LDR X8, [X0 + 0xC0]
	0x02365C94 LDR X0, [X8]
	0x02365C98 LDRB W8, [X0 + 0x135]
	0x02365C9C TBNZ X8, 0x0, 0x2365CA4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move [X8], X20
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {69}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call 0x1C5D684
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x02365CA0 BL 0x1C5C684
	0x02365CA4 BL 0x1C16F10

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <InternalInitialize>b__30_0(T a, T b)

Disassembly:
	0x02365CA8 LDR X8, [X19 + 0x20]
	0x02365CAC MOV X20, X0
	0x02365CB0 LDRB W9, [X8 + 0x135]
	0x02365CB4 TBNZ X9, 0x0, 0x2365CC0
	0x02365CB8 MOV X0, X8
	0x02365CBC BL 0x1C5C684
	0x02365CC0 MOV X0, X20
	0x02365CC4 MOV X1, X31
	0x02365CC8 BL 0x33BDD8C
	0x02365CCC LDR X0, [X19 + 0x20]
	0x02365CD0 LDRB W8, [X0 + 0x135]
	0x02365CD4 TBNZ X8, 0x0, 0x2365CDC
	0x02365CD8 BL 0x1C5C684
	0x02365CDC LDR X8, [X0 + 0xC0]
	0x02365CE0 LDR X0, [X8 + 0x10]
	0x02365CE4 LDRB W8, [X0 + 0x135]
	0x02365CE8 TBNZ X8, 0x0, 0x2365CF0
	0x02365CEC BL 0x1C5C684
	0x02365CF0 LDR X8, [X0 + 0xB8]
	0x02365CF4 STR X20, [X8]
	0x02365CF8 LDR X0, [X19 + 0x20]
	0x02365CFC LDRB W8, [X0 + 0x135]
	0x02365D00 TBNZ X8, 0x0, 0x2365D08
	0x02365D04 BL 0x1C5C684
	0x02365D08 LDR X8, [X0 + 0xC0]
	0x02365D0C LDR X0, [X8 + 0x10]
	0x02365D10 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 And W8, W1, 1
	005 Move [X31+12], W8
	006 Move X8, [X3+32]
	007 Add X1, X31, 12
	008 Move X19, X3
	009 And W20, W2, 1
	010 Move X8, [X8+192]
	011 Move X0, [X8+24]
	012 Call 0x1C17E04
	013 Move [X31+8], W20
	014 Move X8, [X19+32]
	015 Move X19, X0
	016 Add X1, X31, 8
	017 Move X8, [X8+192]
	018 Move X8, [X8+24]
	019 Move X0, X8
	020 Call 0x1C17E04
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call Object.Equals, X0, X1
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 And W0, W0, 1
	028 Move X30, [X31+32]
	029 Return X0

