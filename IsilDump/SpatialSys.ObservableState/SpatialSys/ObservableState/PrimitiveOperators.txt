Type: SpatialSys.ObservableState.PrimitiveOperators

Method: System.Void .cctor()

Disassembly:
	0x035D3F68 CBZ X19, 0x35D47E4
	0x035D3F6C STR X20, [X19 + 0x10]
	0x035D3F70 LDR X8, [X22]
	0x035D3F74 ADRP X21, 0xB65000
	0x035D3F78 ADRP X24, 0xB65000
	0x035D3F7C LDR X21, [X21 + 0xBA0]
	0x035D3F80 LDR X24, [X24 + 0x8C0]
	0x035D3F84 LDR X8, [X8 + 0xB8]
	0x035D3F88 ADRP X25, 0xB65000
	0x035D3F8C ADRP X26, 0xB65000
	0x035D3F90 ADRP X27, 0xB65000
	0x035D3F94 LDR X25, [X25 + 0xBA8]
	0x035D3F98 LDR X26, [X26 + 0xA98]
	0x035D3F9C LDR X27, [X27 + 0x9C0]
	0x035D3FA0 LDR X0, [X23]
	0x035D3FA4 ADRP X28, 0xB65000
	0x035D3FA8 ADRP X23, 0xB65000
	0x035D3FAC ADRP X29, 0xB65000
	0x035D3FB0 LDR X20, [X8]
	0x035D3FB4 LDR X28, [X28 + 0x940]
	0x035D3FB8 LDR X23, [X23 + 0x890]
	0x035D3FBC LDR X29, [X29 + 0xBB0]
	0x035D3FC0 BL 0x1C16F10
	0x035D3FC4 LDR X2, [X21]
	0x035D3FC8 MOV X1, X20
	0x035D3FCC MOV X3, X31
	0x035D3FD0 MOV X21, X0
	0x035D3FD4 BL 0x2D37740
	0x035D3FD8 STR X21, [X19 + 0x18]
	0x035D3FDC LDR X8, [X22]
	0x035D3FE0 LDR X0, [X24]
	0x035D3FE4 LDR X8, [X8 + 0xB8]
	0x035D3FE8 LDR X20, [X8]
	0x035D3FEC BL 0x1C16F10
	0x035D3FF0 LDR X2, [X25]
	0x035D3FF4 MOV X1, X20
	0x035D3FF8 MOV X3, X31
	0x035D3FFC MOV X21, X0
	0x035D4000 BL 0x2D375B0
	0x035D4004 STR X21, [X19 + 0x20]
	0x035D4008 LDR X1, [X26]
	0x035D400C MOV X0, X19
	0x035D4010 BL 0x2233664
	0x035D4014 LDR X0, [X27]
	0x035D4018 BL 0x1C16F10
	0x035D401C LDR X1, [X28]
	0x035D4020 MOV X19, X0
	0x035D4024 BL 0x249B544
	0x035D4028 LDR X8, [X22]
	0x035D402C LDR X0, [X23]
	0x035D4030 LDR X8, [X8 + 0xB8]
	0x035D4034 LDR X21, [X8]
	0x035D4038 BL 0x1C16F10
	0x035D403C LDR X2, [X29]
	0x035D4040 MOV X1, X21
	0x035D4044 MOV X3, X31
	0x035D4048 MOV X20, X0
	0x035D404C BL 0x2D3ED10
	0x035D4050 CBZ X19, 0x35D47E4
	0x035D4054 STR X20, [X19 + 0x10]
	0x035D4058 LDR X8, [X22]
	0x035D405C ADRP X21, 0xB64000
	0x035D4060 ADRP X24, 0xB64000
	0x035D4064 LDR X21, [X21 + 0xBB8]
	0x035D4068 LDR X24, [X24 + 0x878]
	0x035D406C LDR X8, [X8 + 0xB8]
	0x035D4070 ADRP X25, 0xB64000
	0x035D4074 ADRP X26, 0xB64000
	0x035D4078 ADRP X27, 0xB64000
	0x035D407C LDR X25, [X25 + 0xBC0]
	0x035D4080 LDR X26, [X26 + 0xAE8]
	0x035D4084 LDR X27, [X27 + 0x9E8]
	0x035D4088 LDR X0, [X23]
	0x035D408C ADRP X28, 0xB64000
	0x035D4090 ADRP X23, 0xB64000
	0x035D4094 ADRP X29, 0xB64000
	0x035D4098 LDR X20, [X8]
	0x035D409C LDR X28, [X28 + 0x960]
	0x035D40A0 LDR X23, [X23 + 0x850]
	0x035D40A4 LDR X29, [X29 + 0xBD0]
	0x035D40A8 BL 0x1C16F10
	0x035D40AC LDR X2, [X21]
	0x035D40B0 MOV X1, X20
	0x035D40B4 MOV X3, X31
	0x035D40B8 MOV X21, X0
	0x035D40BC BL 0x2D3ED10
	0x035D40C0 STR X21, [X19 + 0x18]
	0x035D40C4 LDR X8, [X22]
	0x035D40C8 LDR X0, [X24]
	0x035D40CC LDR X8, [X8 + 0xB8]
	0x035D40D0 LDR X20, [X8]
	0x035D40D4 BL 0x1C16F10
	0x035D40D8 LDR X2, [X25]
	0x035D40DC MOV X1, X20
	0x035D40E0 MOV X3, X31
	0x035D40E4 MOV X21, X0
	0x035D40E8 BL 0x2D3EBA8
	0x035D40EC STR X21, [X19 + 0x20]
	0x035D40F0 LDR X1, [X26]
	0x035D40F4 MOV X0, X19
	0x035D40F8 BL 0x2233E34
	0x035D40FC LDR X0, [X27]
	0x035D4100 BL 0x1C16F10
	0x035D4104 LDR X1, [X28]
	0x035D4108 MOV X19, X0
	0x035D410C BL 0x249B54C
	0x035D4110 LDR X8, [X22]
	0x035D4114 LDR X0, [X23]
	0x035D4118 LDR X8, [X8 + 0xB8]
	0x035D411C LDR X21, [X8]
	0x035D4120 BL 0x1C16F10
	0x035D4124 LDR X2, [X29]
	0x035D4128 MOV X1, X21
	0x035D412C MOV X3, X31
	0x035D4130 MOV X20, X0
	0x035D4134 BL 0x2D3EFDC
	0x035D4138 CBZ X19, 0x35D47E4
	0x035D413C STR X20, [X19 + 0x10]
	0x035D4140 LDR X8, [X22]
	0x035D4144 ADRP X21, 0xB64000
	0x035D4148 ADRP X24, 0xB64000
	0x035D414C LDR X21, [X21 + 0xBD8]
	0x035D4150 LDR X24, [X24 + 0x868]
	0x035D4154 LDR X8, [X8 + 0xB8]
	0x035D4158 ADRP X25, 0xB64000
	0x035D415C ADRP X26, 0xB64000
	0x035D4160 ADRP X27, 0xB64000
	0x035D4164 LDR X25, [X25 + 0xBE0]
	0x035D4168 LDR X26, [X26 + 0xAF0]
	0x035D416C LDR X27, [X27 + 0x9F0]
	0x035D4170 LDR X0, [X23]
	0x035D4174 ADRP X28, 0xB64000
	0x035D4178 ADRP X23, 0xB64000
	0x035D417C ADRP X29, 0xB64000
	0x035D4180 LDR X20, [X8]
	0x035D4184 LDR X28, [X28 + 0x930]
	0x035D4188 LDR X23, [X23 + 0x880]
	0x035D418C LDR X29, [X29 + 0xBE8]
	0x035D4190 BL 0x1C16F10
	0x035D4194 LDR X2, [X21]
	0x035D4198 MOV X1, X20
	0x035D419C MOV X3, X31
	0x035D41A0 MOV X21, X0
	0x035D41A4 BL 0x2D3EFDC
	0x035D41A8 STR X21, [X19 + 0x18]
	0x035D41AC LDR X8, [X22]
	0x035D41B0 LDR X0, [X24]
	0x035D41B4 LDR X8, [X8 + 0xB8]
	0x035D41B8 LDR X20, [X8]
	0x035D41BC BL 0x1C16F10
	0x035D41C0 LDR X2, [X25]
	0x035D41C4 MOV X1, X20
	0x035D41C8 MOV X3, X31
	0x035D41CC MOV X21, X0
	0x035D41D0 BL 0x2D3EE78
	0x035D41D4 STR X21, [X19 + 0x20]
	0x035D41D8 LDR X1, [X26]
	0x035D41DC MOV X0, X19
	0x035D41E0 BL 0x2233EFC
	0x035D41E4 LDR X0, [X27]
	0x035D41E8 BL 0x1C16F10
	0x035D41EC LDR X1, [X28]
	0x035D41F0 MOV X19, X0
	0x035D41F4 BL 0x249B554
	0x035D41F8 LDR X8, [X22]
	0x035D41FC LDR X0, [X23]
	0x035D4200 LDR X8, [X8 + 0xB8]
	0x035D4204 LDR X21, [X8]
	0x035D4208 BL 0x1C16F10
	0x035D420C LDR X2, [X29]
	0x035D4210 MOV X1, X21
	0x035D4214 MOV X3, X31
	0x035D4218 MOV X20, X0
	0x035D421C BL 0x2D3F2A4
	0x035D4220 CBZ X19, 0x35D47E4
	0x035D4224 STR X20, [X19 + 0x10]
	0x035D4228 LDR X8, [X22]
	0x035D422C ADRP X21, 0xB64000
	0x035D4230 ADRP X24, 0xB64000
	0x035D4234 LDR X21, [X21 + 0xBF0]
	0x035D4238 LDR X24, [X24 + 0x810]
	0x035D423C LDR X8, [X8 + 0xB8]
	0x035D4240 ADRP X25, 0xB64000
	0x035D4244 ADRP X26, 0xB64000
	0x035D4248 ADRP X27, 0xB64000
	0x035D424C LDR X25, [X25 + 0xBF8]
	0x035D4250 LDR X26, [X26 + 0xAF8]
	0x035D4254 LDR X27, [X27 + 0xA20]
	0x035D4258 LDR X0, [X23]
	0x035D425C ADRP X28, 0xB64000
	0x035D4260 ADRP X23, 0xB64000
	0x035D4264 ADRP X29, 0xB64000
	0x035D4268 LDR X20, [X8]
	0x035D426C LDR X28, [X28 + 0x998]
	0x035D4270 LDR X23, [X23 + 0x8D0]
	0x035D4274 LDR X29, [X29 + 0xC00]
	0x035D4278 BL 0x1C16F10
	0x035D427C LDR X2, [X21]
	0x035D4280 MOV X1, X20
	0x035D4284 MOV X3, X31
	0x035D4288 MOV X21, X0
	0x035D428C BL 0x2D3F2A4
	0x035D4290 STR X21, [X19 + 0x18]
	0x035D4294 LDR X8, [X22]
	0x035D4298 LDR X0, [X24]
	0x035D429C LDR X8, [X8 + 0xB8]
	0x035D42A0 LDR X20, [X8]
	0x035D42A4 BL 0x1C16F10
	0x035D42A8 LDR X2, [X25]
	0x035D42AC MOV X1, X20
	0x035D42B0 MOV X3, X31
	0x035D42B4 MOV X21, X0
	0x035D42B8 BL 0x2D3F140
	0x035D42BC STR X21, [X19 + 0x20]
	0x035D42C0 LDR X1, [X26]
	0x035D42C4 MOV X0, X19
	0x035D42C8 BL 0x2233FC4
	0x035D42CC LDR X0, [X27]
	0x035D42D0 BL 0x1C16F10
	0x035D42D4 LDR X1, [X28]
	0x035D42D8 MOV X19, X0
	0x035D42DC BL 0x249B55C
	0x035D42E0 LDR X8, [X22]
	0x035D42E4 LDR X0, [X23]
	0x035D42E8 LDR X8, [X8 + 0xB8]
	0x035D42EC LDR X21, [X8]
	0x035D42F0 BL 0x1C16F10
	0x035D42F4 LDR X2, [X29]
	0x035D42F8 MOV X1, X21
	0x035D42FC MOV X3, X31
	0x035D4300 MOV X20, X0
	0x035D4304 BL 0x2D3F570
	0x035D4308 CBZ X19, 0x35D47E4
	0x035D430C STR X20, [X19 + 0x10]
	0x035D4310 LDR X8, [X22]
	0x035D4314 ADRP X21, 0xB64000
	0x035D4318 ADRP X24, 0xB64000
	0x035D431C LDR X21, [X21 + 0xC08]
	0x035D4320 LDR X24, [X24 + 0x858]
	0x035D4324 LDR X8, [X8 + 0xB8]
	0x035D4328 ADRP X25, 0xB64000
	0x035D432C ADRP X26, 0xB64000
	0x035D4330 ADRP X27, 0xB64000
	0x035D4334 LDR X25, [X25 + 0xC10]
	0x035D4338 LDR X26, [X26 + 0xB00]
	0x035D433C LDR X27, [X27 + 0x9C8]
	0x035D4340 LDR X0, [X23]
	0x035D4344 ADRP X23, 0xB64000
	0x035D4348 ADRP X28, 0xB64000
	0x035D434C ADRP X29, 0xB64000
	0x035D4350 LDR X20, [X8]
	0x035D4354 LDR X23, [X23 + 0x990]
	0x035D4358 LDR X28, [X28 + 0x8C8]
	0x035D435C LDR X29, [X29 + 0xC18]
	0x035D4360 BL 0x1C16F10
	0x035D4364 LDR X2, [X21]
	0x035D4368 MOV X1, X20
	0x035D436C MOV X3, X31
	0x035D4370 MOV X21, X0
	0x035D4374 BL 0x2D3F570
	0x035D4378 STR X21, [X19 + 0x18]
	0x035D437C LDR X8, [X22]
	0x035D4380 LDR X0, [X24]
	0x035D4384 LDR X8, [X8 + 0xB8]
	0x035D4388 LDR X20, [X8]
	0x035D438C BL 0x1C16F10
	0x035D4390 LDR X2, [X25]
	0x035D4394 MOV X1, X20
	0x035D4398 MOV X3, X31
	0x035D439C MOV X21, X0
	0x035D43A0 BL 0x2D3F408
	0x035D43A4 STR X21, [X19 + 0x20]
	0x035D43A8 LDR X1, [X26]
	0x035D43AC MOV X0, X19
	0x035D43B0 BL 0x223408C
	0x035D43B4 LDR X0, [X27]
	0x035D43B8 BL 0x1C16F10
	0x035D43BC LDR X1, [X23]
	0x035D43C0 MOV X19, X0
	0x035D43C4 BL 0x249B564
	0x035D43C8 LDR X8, [X22]
	0x035D43CC LDR X0, [X28]
	0x035D43D0 LDR X8, [X8 + 0xB8]
	0x035D43D4 LDR X21, [X8]
	0x035D43D8 BL 0x1C16F10
	0x035D43DC LDR X2, [X29]
	0x035D43E0 MOV X1, X21
	0x035D43E4 MOV X3, X31
	0x035D43E8 MOV X20, X0
	0x035D43EC BL 0x2D3F848
	0x035D43F0 CBZ X19, 0x35D47E4
	0x035D43F4 STR X20, [X19 + 0x10]
	0x035D43F8 LDR X8, [X22]
	0x035D43FC ADRP X9, 0xB64000
	0x035D4400 LDR X9, [X9 + 0x888]
	0x035D4404 ADRP X21, 0xB64000
	0x035D4408 LDR X8, [X8 + 0xB8]
	0x035D440C ADRP X23, 0xB64000
	0x035D4410 ADRP X24, 0xB64000
	0x035D4414 LDR X21, [X21 + 0xC28]
	0x035D4418 LDR X23, [X23 + 0xB08]
	0x035D441C LDR X24, [X24 + 0xA08]
	0x035D4420 LDR X0, [X9]
	0x035D4424 ADRP X25, 0xB64000
	0x035D4428 ADRP X26, 0xB64000
	0x035D442C ADRP X27, 0xB64000
	0x035D4430 LDR X20, [X8]
	0x035D4434 LDR X25, [X25 + 0x970]
	0x035D4438 LDR X26, [X26 + 0x838]
	0x035D443C LDR X27, [X27 + 0xC30]
	0x035D4440 BL 0x1C16F10
	0x035D4444 LDR X2, [X21]
	0x035D4448 MOV X1, X20
	0x035D444C MOV X3, X31
	0x035D4450 MOV X21, X0
	0x035D4454 BL 0x2D3F6D8
	0x035D4458 STR X21, [X19 + 0x20]
	0x035D445C LDR X1, [X23]
	0x035D4460 MOV X0, X19
	0x035D4464 BL 0x2234154
	0x035D4468 LDR X0, [X24]
	0x035D446C BL 0x1C16F10
	0x035D4470 LDR X1, [X25]
	0x035D4474 MOV X19, X0
	0x035D4478 BL 0x249B56C
	0x035D447C LDR X8, [X22]
	0x035D4480 LDR X0, [X26]
	0x035D4484 LDR X8, [X8 + 0xB8]
	0x035D4488 LDR X21, [X8]
	0x035D448C BL 0x1C16F10
	0x035D4490 LDR X2, [X27]
	0x035D4494 MOV X1, X21
	0x035D4498 MOV X3, X31
	0x035D449C MOV X20, X0
	0x035D44A0 BL 0x2D3FC9C
	0x035D44A4 CBZ X19, 0x35D47E4
	0x035D44A8 STR X20, [X19 + 0x10]
	0x035D44AC LDR X8, [X22]
	0x035D44B0 ADRP X9, 0xB64000
	0x035D44B4 LDR X9, [X9 + 0x900]
	0x035D44B8 ADRP X21, 0xB64000
	0x035D44BC LDR X8, [X8 + 0xB8]
	0x035D44C0 ADRP X23, 0xB64000
	0x035D44C4 ADRP X24, 0xB64000
	0x035D44C8 LDR X21, [X21 + 0xC38]
	0x035D44CC LDR X23, [X23 + 0xB10]
	0x035D44D0 LDR X24, [X24 + 0x9E0]
	0x035D44D4 LDR X0, [X9]
	0x035D44D8 ADRP X25, 0xB64000
	0x035D44DC ADRP X26, 0xB64000
	0x035D44E0 ADRP X27, 0xB64000
	0x035D44E4 LDR X20, [X8]
	0x035D44E8 LDR X25, [X25 + 0x9A0]
	0x035D44EC LDR X26, [X26 + 0x828]
	0x035D44F0 LDR X27, [X27 + 0xC40]
	0x035D44F4 BL 0x1C16F10
	0x035D44F8 LDR X2, [X21]
	0x035D44FC MOV X1, X20
	0x035D4500 MOV X3, X31
	0x035D4504 MOV X21, X0
	0x035D4508 BL 0x2D3F9BC
	0x035D450C STR X21, [X19 + 0x20]
	0x035D4510 LDR X1, [X23]
	0x035D4514 MOV X0, X19
	0x035D4518 BL 0x223421C
	0x035D451C LDR X0, [X24]
	0x035D4520 BL 0x1C16F10
	0x035D4524 LDR X1, [X25]
	0x035D4528 MOV X19, X0
	0x035D452C BL 0x249B524
	0x035D4530 LDR X8, [X22]
	0x035D4534 LDR X0, [X26]
	0x035D4538 LDR X8, [X8 + 0xB8]
	0x035D453C LDR X21, [X8]
	0x035D4540 BL 0x1C16F10
	0x035D4544 LDR X2, [X27]
	0x035D4548 MOV X1, X21
	0x035D454C MOV X3, X31
	0x035D4550 MOV X20, X0
	0x035D4554 BL 0x2D3D9A0
	0x035D4558 CBZ X19, 0x35D47E4
	0x035D455C STR X20, [X19 + 0x10]
	0x035D4560 LDR X8, [X22]
	0x035D4564 ADRP X9, 0xB64000
	0x035D4568 LDR X9, [X9 + 0x8F0]
	0x035D456C ADRP X21, 0xB64000
	0x035D4570 LDR X8, [X8 + 0xB8]
	0x035D4574 ADRP X23, 0xB64000
	0x035D4578 ADRP X24, 0xB64000
	0x035D457C LDR X21, [X21 + 0xC48]
	0x035D4580 LDR X23, [X23 + 0xAC0]
	0x035D4584 LDR X24, [X24 + 0x9D0]
	0x035D4588 LDR X0, [X9]
	0x035D458C ADRP X25, 0xB64000
	0x035D4590 ADRP X26, 0xB64000
	0x035D4594 ADRP X27, 0xB64000
	0x035D4598 LDR X20, [X8]
	0x035D459C LDR X25, [X25 + 0x938]
	0x035D45A0 LDR X26, [X26 + 0x8B0]
	0x035D45A4 LDR X27, [X27 + 0xC50]
	0x035D45A8 BL 0x1C16F10
	0x035D45AC LDR X2, [X21]
	0x035D45B0 MOV X1, X20
	0x035D45B4 MOV X3, X31
	0x035D45B8 MOV X21, X0
	0x035D45BC BL 0x2D3D830
	0x035D45C0 STR X21, [X19 + 0x20]
	0x035D45C4 LDR X1, [X23]
	0x035D45C8 MOV X0, X19
	0x035D45CC BL 0x2233B14
	0x035D45D0 LDR X0, [X24]
	0x035D45D4 BL 0x1C16F10
	0x035D45D8 LDR X1, [X25]
	0x035D45DC MOV X19, X0
	0x035D45E0 BL 0x249B4D4
	0x035D45E4 LDR X8, [X22]
	0x035D45E8 LDR X0, [X26]
	0x035D45EC LDR X8, [X8 + 0xB8]
	0x035D45F0 LDR X21, [X8]
	0x035D45F4 BL 0x1C16F10
	0x035D45F8 LDR X2, [X27]
	0x035D45FC MOV X1, X21
	0x035D4600 MOV X3, X31
	0x035D4604 MOV X20, X0
	0x035D4608 BL 0x2D36E84
	0x035D460C CBZ X19, 0x35D47E4
	0x035D4610 STR X20, [X19 + 0x10]
	0x035D4614 LDR X8, [X22]
	0x035D4618 ADRP X9, 0xB64000
	0x035D461C LDR X9, [X9 + 0x860]
	0x035D4620 ADRP X21, 0xB64000
	0x035D4624 LDR X8, [X8 + 0xB8]
	0x035D4628 ADRP X23, 0xB64000
	0x035D462C ADRP X24, 0xB64000
	0x035D4630 LDR X21, [X21 + 0xC58]
	0x035D4634 LDR X23, [X23 + 0xA90]
	0x035D4638 LDR X24, [X24 + 0xA18]
	0x035D463C LDR X0, [X9]
	0x035D4640 ADRP X25, 0xB64000
	0x035D4644 ADRP X26, 0xB64000
	0x035D4648 ADRP X27, 0xB64000
	0x035D464C LDR X20, [X8]
	0x035D4650 LDR X25, [X25 + 0x948]
	0x035D4654 LDR X26, [X26 + 0x808]
	0x035D4658 LDR X27, [X27 + 0xC60]
	0x035D465C BL 0x1C16F10
	0x035D4660 LDR X2, [X21]
	0x035D4664 MOV X1, X20
	0x035D4668 MOV X3, X31
	0x035D466C MOV X21, X0
	0x035D4670 BL 0x2D36D14
	0x035D4674 STR X21, [X19 + 0x20]
	0x035D4678 LDR X1, [X23]
	0x035D467C MOV X0, X19
	0x035D4680 BL 0x22334D4
	0x035D4684 LDR X0, [X24]
	0x035D4688 BL 0x1C16F10
	0x035D468C LDR X1, [X25]
	0x035D4690 MOV X19, X0
	0x035D4694 BL 0x249B4DC
	0x035D4698 LDR X8, [X22]
	0x035D469C LDR X0, [X26]
	0x035D46A0 LDR X8, [X8 + 0xB8]
	0x035D46A4 LDR X21, [X8]
	0x035D46A8 BL 0x1C16F10
	0x035D46AC LDR X2, [X27]
	0x035D46B0 MOV X1, X21
	0x035D46B4 MOV X3, X31
	0x035D46B8 MOV X20, X0
	0x035D46BC BL 0x2D36FF8
	0x035D46C0 CBZ X19, 0x35D47E4
	0x035D46C4 ADRP X8, 0xB64000
	0x035D46C8 LDR X8, [X8 + 0xA88]
	0x035D46CC ADRP X21, 0xB64000
	0x035D46D0 LDR X21, [X21 + 0x9F8]
	0x035D46D4 STR X20, [X19 + 0x20]
	0x035D46D8 LDR X1, [X8]
	0x035D46DC ADRP X20, 0xB64000
	0x035D46E0 ADRP X23, 0xB64000
	0x035D46E4 ADRP X24, 0xB64000
	0x035D46E8 LDR X20, [X20 + 0x950]
	0x035D46EC LDR X23, [X23 + 0x800]
	0x035D46F0 LDR X24, [X24 + 0xC68]
	0x035D46F4 MOV X0, X19
	0x035D46F8 BL 0x223359C
	0x035D46FC LDR X0, [X21]
	0x035D4700 BL 0x1C16F10
	0x035D4704 LDR X1, [X20]
	0x035D4708 MOV X19, X0
	0x035D470C BL 0x249B52C
	0x035D4710 LDR X8, [X22]
	0x035D4714 LDR X0, [X23]
	0x035D4718 LDR X8, [X8 + 0xB8]
	0x035D471C LDR X21, [X8]
	0x035D4720 BL 0x1C16F10
	0x035D4724 LDR X2, [X24]
	0x035D4728 MOV X1, X21
	0x035D472C MOV X3, X31
	0x035D4730 MOV X20, X0
	0x035D4734 BL 0x2D3DB14
	0x035D4738 CBZ X19, 0x35D47E4
	0x035D473C ADRP X8, 0xB64000
	0x035D4740 LDR X8, [X8 + 0xAC8]
	0x035D4744 ADRP X21, 0xB64000
	0x035D4748 LDR X21, [X21 + 0xA30]
	0x035D474C STR X20, [X19 + 0x20]
	0x035D4750 LDR X1, [X8]
	0x035D4754 ADRP X20, 0xB64000
	0x035D4758 ADRP X23, 0xB64000
	0x035D475C ADRP X24, 0xB64000
	0x035D4760 LDR X20, [X20 + 0x9B8]
	0x035D4764 LDR X23, [X23 + 0x908]
	0x035D4768 LDR X24, [X24 + 0xC70]
	0x035D476C MOV X0, X19
	0x035D4770 BL 0x2233BDC
	0x035D4774 LDR X0, [X21]
	0x035D4778 BL 0x1C16F10
	0x035D477C LDR X1, [X20]
	0x035D4780 MOV X19, X0
	0x035D4784 BL 0x249B4BC
	0x035D4788 LDR X8, [X22]
	0x035D478C LDR X0, [X23]
	0x035D4790 LDR X8, [X8 + 0xB8]
	0x035D4794 LDR X21, [X8]
	0x035D4798 BL 0x1C16F10
	0x035D479C LDR X2, [X24]
	0x035D47A0 MOV X1, X21
	0x035D47A4 MOV X3, X31
	0x035D47A8 MOV X20, X0
	0x035D47AC BL 0x2D3614C
	0x035D47B0 CBZ X19, 0x35D47E4
	0x035D47B4 ADRP X8, 0xB64000
	0x035D47B8 LDR X8, [X8 + 0xA70]
	0x035D47BC STR X20, [X19 + 0x20]
	0x035D47C0 MOV X0, X19
	0x035D47C4 LDP X20, X19, [X31 + 0x50]
	0x035D47C8 LDR X1, [X8]
	0x035D47CC LDP X22, X21, [X31 + 0x40]
	0x035D47D0 LDP X24, X23, [X31 + 0x30]
	0x035D47D4 LDP X26, X25, [X31 + 0x20]
	0x035D47D8 LDP X28, X27, [X31 + 0x10]
	0x035D47DC LDP X29, X30, [X31], #0x60
	0x035D47E0 B 0x223327C
	0x035D47E4 BL 0x1C16F20
	0x035D47E8 STR X30, [X31 - 0x20]!
	0x035D47EC STP X20, X19, [X31 + 0x10]
	0x035D47F0 ADRP X19, 0xE0C000
	0x035D47F4 ADRP X20, 0xB64000
	0x035D47F8 LDRB W8, [X19 + 0x221]
	0x035D47FC LDR X20, [X20 + 0x7E0]
	0x035D4800 TBNZ X8, 0x0, 0x35D4818
	0x035D4804 ADRP X0, 0xB64000
	0x035D4808 LDR X0, [X0 + 0x7E0]
	0x035D480C BL 0x1C16CF4
	0x035D4810 MOVZ W8, 0x1
	0x035D4814 STRB W8, [X19 + 0x221]
	0x035D4818 LDR X0, [X20]
	0x035D481C BL 0x1C16F10
	0x035D4820 MOV X1, X31
	0x035D4824 MOV X19, X0
	0x035D4828 BL 0x33BDD8C
	0x035D482C LDR X8, [X20]
	0x035D4830 LDR X8, [X8 + 0xB8]
	0x035D4834 STR X19, [X8]
	0x035D4838 LDP X20, X19, [X31 + 0x10]
	0x035D483C LDR X30, [X31], #0x20
	0x035D4840 RET
	0x035D4844 MOV X1, X31
	0x035D4848 B 0x33BDD8C
	0x035D484C MOV X0, X1
	0x035D4850 MOV X1, X2
	0x035D4854 MOV X2, X31
	0x035D4858 B 0x321BA08
	0x035D485C AND W8, W1, 0xFFFF
	0x035D4860 CMP W8, W2, UXTH
	0x035D4864 CSET W0, EQ
	0x035D4868 RET
	0x035D486C EON W8, W1, W2, 0x0
	0x035D4870 AND W0, W8, 0x1
	0x035D4874 RET
	0x035D4878 ADD W0, W2, W1
	0x035D487C RET
	0x035D4880 MUL W0, W2, W1
	0x035D4884 RET
	0x035D4888 AND W8, W1, 0xFF
	0x035D488C CMP W8, W2, UXTB
	0x035D4890 CSET W0, EQ
	0x035D4894 RET
	0x035D4898 ADD W0, W2, W1
	0x035D489C RET
	0x035D48A0 MUL W0, W2, W1
	0x035D48A4 RET
	0x035D48A8 AND W8, W1, 0xFF
	0x035D48AC CMP W8, W2, UXTB
	0x035D48B0 CSET W0, EQ
	0x035D48B4 RET
	0x035D48B8 ADD W0, W2, W1
	0x035D48BC RET
	0x035D48C0 MUL W0, W2, W1
	0x035D48C4 RET
	0x035D48C8 AND W8, W1, 0xFFFF
	0x035D48CC CMP W8, W2, UXTH
	0x035D48D0 CSET W0, EQ
	0x035D48D4 RET
	0x035D48D8 ADD W0, W2, W1
	0x035D48DC RET
	0x035D48E0 MUL W0, W2, W1
	0x035D48E4 RET
	0x035D48E8 CMP W1, W2
	0x035D48EC CSET W0, EQ
	0x035D48F0 RET
	0x035D48F4 ADD X0, X2, X1
	0x035D48F8 RET
	0x035D48FC MUL X0, X2, X1
	0x035D4900 RET
	0x035D4904 CMP X1, X2
	0x035D4908 CSET W0, EQ
	0x035D490C RET
	0x035D4910 FADD S0, S0, S1
	0x035D4914 RET
	0x035D4918 FMUL S0, S0, S1
	0x035D491C RET
	0x035D4920 FCMP S0, S1
	0x035D4924 CSET W0, EQ
	0x035D4928 RET
	0x035D492C FADD D0, D0, D1
	0x035D4930 RET
	0x035D4934 FMUL D0, D0, D1
	0x035D4938 RET
	0x035D493C FCMP D0, D1
	0x035D4940 CSET W0, EQ
	0x035D4944 RET
	0x035D4948 STR X30, [X31 - 0x40]!
	0x035D494C STP X24, X23, [X31 + 0x10]
	0x035D4950 STP X22, X21, [X31 + 0x20]
	0x035D4954 STP X20, X19, [X31 + 0x30]
	0x035D4958 ADRP X24, 0xE0C000
	0x035D495C ADRP X23, 0xB47000
	0x035D4960 LDRB W8, [X24 + 0x222]
	0x035D4964 LDR X23, [X23 + 0x5F0]
	0x035D4968 MOV X19, X4
	0x035D496C MOV X20, X3
	0x035D4970 MOV X21, X2
	0x035D4974 MOV X22, X1
	0x035D4978 TBNZ X8, 0x0, 0x35D4990
	0x035D497C ADRP X0, 0xB47000
	0x035D4980 LDR X0, [X0 + 0x5F0]
	0x035D4984 BL 0x1C16CF4
	0x035D4988 MOVZ W8, 0x1
	0x035D498C STRB W8, [X24 + 0x222]
	0x035D4990 LDR X0, [X23]
	0x035D4994 LDR W8, [X0 + 0xE0]
	0x035D4998 CBNZ W8, 0x35D49A0
	0x035D499C BL 0x1C16DFC
	0x035D49A0 MOV X0, X22
	0x035D49A4 MOV X1, X21
	0x035D49A8 MOV X2, X20
	0x035D49AC MOV X3, X19
	0x035D49B0 LDP X20, X19, [X31 + 0x30]
	0x035D49B4 LDP X22, X21, [X31 + 0x20]
	0x035D49B8 LDP X24, X23, [X31 + 0x10]
	0x035D49BC MOV X4, X31
	0x035D49C0 LDR X30, [X31], #0x40
	0x035D49C4 B 0x33D9144
	0x035D49C8 STR X30, [X31 - 0x40]!
	0x035D49CC STP X24, X23, [X31 + 0x10]
	0x035D49D0 STP X22, X21, [X31 + 0x20]
	0x035D49D4 STP X20, X19, [X31 + 0x30]
	0x035D49D8 ADRP X24, 0xE0C000
	0x035D49DC ADRP X23, 0xB47000
	0x035D49E0 LDRB W8, [X24 + 0x223]
	0x035D49E4 LDR X23, [X23 + 0x5F0]
	0x035D49E8 MOV X19, X4
	0x035D49EC MOV X20, X3
	0x035D49F0 MOV X21, X2
	0x035D49F4 MOV X22, X1
	0x035D49F8 TBNZ X8, 0x0, 0x35D4A10
	0x035D49FC ADRP X0, 0xB47000
	0x035D4A00 LDR X0, [X0 + 0x5F0]
	0x035D4A04 BL 0x1C16CF4
	0x035D4A08 MOVZ W8, 0x1
	0x035D4A0C STRB W8, [X24 + 0x223]
	0x035D4A10 LDR X0, [X23]
	0x035D4A14 LDR W8, [X0 + 0xE0]
	0x035D4A18 CBNZ W8, 0x35D4A20
	0x035D4A1C BL 0x1C16DFC
	0x035D4A20 MOV X0, X22
	0x035D4A24 MOV X1, X21
	0x035D4A28 MOV X2, X20
	0x035D4A2C MOV X3, X19
	0x035D4A30 LDP X20, X19, [X31 + 0x30]
	0x035D4A34 LDP X22, X21, [X31 + 0x20]
	0x035D4A38 LDP X24, X23, [X31 + 0x10]
	0x035D4A3C MOV X4, X31
	0x035D4A40 LDR X30, [X31], #0x40
	0x035D4A44 B 0x33D9914
	0x035D4A48 STR X30, [X31 - 0x40]!
	0x035D4A4C STP X24, X23, [X31 + 0x10]
	0x035D4A50 STP X22, X21, [X31 + 0x20]
	0x035D4A54 STP X20, X19, [X31 + 0x30]
	0x035D4A58 ADRP X24, 0xE0C000
	0x035D4A5C ADRP X23, 0xB47000
	0x035D4A60 LDRB W8, [X24 + 0x224]
	0x035D4A64 LDR X23, [X23 + 0x5F0]
	0x035D4A68 MOV X19, X4
	0x035D4A6C MOV X20, X3
	0x035D4A70 MOV X21, X2
	0x035D4A74 MOV X22, X1
	0x035D4A78 TBNZ X8, 0x0, 0x35D4A90
	0x035D4A7C ADRP X0, 0xB47000
	0x035D4A80 LDR X0, [X0 + 0x5F0]
	0x035D4A84 BL 0x1C16CF4
	0x035D4A88 MOVZ W8, 0x1
	0x035D4A8C STRB W8, [X24 + 0x224]
	0x035D4A90 LDR X0, [X23]
	0x035D4A94 LDR W8, [X0 + 0xE0]
	0x035D4A98 CBNZ W8, 0x35D4AA0
	0x035D4A9C BL 0x1C16DFC
	0x035D4AA0 MOV X0, X22
	0x035D4AA4 MOV X1, X21
	0x035D4AA8 MOV X2, X20
	0x035D4AAC MOV X3, X19
	0x035D4AB0 LDP X20, X19, [X31 + 0x30]
	0x035D4AB4 LDP X22, X21, [X31 + 0x20]
	0x035D4AB8 LDP X24, X23, [X31 + 0x10]
	0x035D4ABC MOV X4, X31
	0x035D4AC0 LDR X30, [X31], #0x40
	0x035D4AC4 B 0x33DA6D0
	0x035D4AC8 ADD W0, W2, W1
	0x035D4ACC RET
	0x035D4AD0 MUL W0, W2, W1
	0x035D4AD4 RET
	0x035D4AD8 AND W8, W1, 0xFFFF
	0x035D4ADC CMP W8, W2, UXTH
	0x035D4AE0 CSET W0, EQ
	0x035D4AE4 RET
	0x035D4AE8 ADD W0, W2, W1
	0x035D4AEC RET
	0x035D4AF0 MUL W0, W2, W1
	0x035D4AF4 RET
	0x035D4AF8 CMP W1, W2
	0x035D4AFC CSET W0, EQ
	0x035D4B00 RET
	0x035D4B04 ADD X0, X2, X1
	0x035D4B08 RET
	0x035D4B0C MUL X0, X2, X1
	0x035D4B10 RET
	0x035D4B14 CMP X1, X2
	0x035D4B18 CSET W0, EQ
	0x035D4B1C RET
	0x035D4B20 FADD S0, S0, S2
	0x035D4B24 FADD S1, S1, S3
	0x035D4B28 RET
	0x035D4B2C FMUL S0, S0, S2
	0x035D4B30 FMUL S1, S1, S3
	0x035D4B34 RET
	0x035D4B38 ADRP X8, 0xFFFFFFFFFD515000
	0x035D4B3C FSUB S0, S0, S2
	0x035D4B40 LDR V2, [X8 + 0xF20]
	0x035D4B44 FSUB S1, S1, S3
	0x035D4B48 FMUL S0, S0, S0
	0x035D4B4C FMUL S1, S1, S1
	0x035D4B50 FADD S0, S0, S1
	0x035D4B54 FCMP S0, S2
	0x035D4B58 CSET W0, MI
	0x035D4B5C RET
	0x035D4B60 FADD S0, S0, S3
	0x035D4B64 FADD S1, S1, S4
	0x035D4B68 FADD S2, S2, S5
	0x035D4B6C RET
	0x035D4B70 ADRP X8, 0xFFFFFFFFFD515000
	0x035D4B74 FSUB S0, S0, S3
	0x035D4B78 FSUB S1, S1, S4
	0x035D4B7C LDR V3, [X8 + 0xF20]
	0x035D4B80 FSUB S2, S2, S5
	0x035D4B84 FMUL S0, S0, S0
	0x035D4B88 FMUL S1, S1, S1
	0x035D4B8C FADD S0, S0, S1
	0x035D4B90 FMUL S1, S2, S2
	0x035D4B94 FADD S0, S1, S0
	0x035D4B98 FCMP S0, S3
	0x035D4B9C CSET W0, MI
	0x035D4BA0 RET
	0x035D4BA4 FADD S0, S0, S4
	0x035D4BA8 FADD S1, S1, S5
	0x035D4BAC FADD S2, S2, S6
	0x035D4BB0 FADD S3, S3, S7
	0x035D4BB4 RET
	0x035D4BB8 FSUB S0, S0, S4
	0x035D4BBC FSUB S1, S1, S5
	0x035D4BC0 ADRP X8, 0xFFFFFFFFFD515000
	0x035D4BC4 FSUB S2, S2, S6
	0x035D4BC8 FMUL S0, S0, S0
	0x035D4BCC FMUL S1, S1, S1
	0x035D4BD0 LDR V4, [X8 + 0xF20]
	0x035D4BD4 FSUB S3, S3, S7
	0x035D4BD8 FMUL S2, S2, S2
	0x035D4BDC FADD S0, S0, S1
	0x035D4BE0 FADD S0, S2, S0
	0x035D4BE4 FMUL S1, S3, S3
	0x035D4BE8 FADD S0, S1, S0
	0x035D4BEC FCMP S0, S4
	0x035D4BF0 CSET W0, MI
	0x035D4BF4 RET
	0x035D4BF8 FMUL S16, S3, S4
	0x035D4BFC FMUL S17, S0, S7
	0x035D4C00 FMUL S18, S1, S6
	0x035D4C04 FMUL S19, S2, S5
	0x035D4C08 FMUL S20, S3, S5
	0x035D4C0C FMUL S21, S1, S7
	0x035D4C10 FMUL S22, S2, S4
	0x035D4C14 FMUL S23, S0, S6
	0x035D4C18 FMUL S24, S0, S5
	0x035D4C1C FMUL S0, S0, S4
	0x035D4C20 FMUL S4, S1, S4
	0x035D4C24 FMUL S1, S1, S5
	0x035D4C28 FMUL S5, S3, S6
	0x035D4C2C FMUL S3, S3, S7
	0x035D4C30 FMUL S7, S2, S7
	0x035D4C34 FMUL S6, S2, S6
	0x035D4C38 FADD S2, S16, S17
	0x035D4C3C FADD S16, S20, S21
	0x035D4C40 FADD S5, S5, S7
	0x035D4C44 FSUB S0, S3, S0
	0x035D4C48 FADD S2, S18, S2
	0x035D4C4C FADD S3, S22, S16
	0x035D4C50 FADD S5, S24, S5
	0x035D4C54 FSUB S7, S0, S1
	0x035D4C58 FSUB S0, S2, S19
	0x035D4C5C FSUB S1, S3, S23
	0x035D4C60 FSUB S2, S5, S4
	0x035D4C64 FSUB S3, S7, S6
	0x035D4C68 RET
	0x035D4C6C FMUL S0, S0, S4
	0x035D4C70 FMUL S1, S1, S5
	0x035D4C74 ADRP X8, 0xFFFFFFFFFD516000
	0x035D4C78 FADD S0, S0, S1
	0x035D4C7C LDR V1, [X8 + 0x1B4]
	0x035D4C80 FMUL S2, S2, S6
	0x035D4C84 FADD S0, S2, S0
	0x035D4C88 FMUL S2, S3, S7
	0x035D4C8C FADD S0, S2, S0
	0x035D4C90 FCMP S0, S1
	0x035D4C94 CSET W0, GT
	0x035D4C98 RET
	0x035D4C9C FADD S0, S0, S4
	0x035D4CA0 FADD S1, S1, S5
	0x035D4CA4 FADD S2, S2, S6
	0x035D4CA8 FADD S3, S3, S7
	0x035D4CAC RET
	0x035D4CB0 FSUB S0, S0, S4
	0x035D4CB4 FSUB S1, S1, S5
	0x035D4CB8 ADRP X8, 0xFFFFFFFFFD515000
	0x035D4CBC FSUB S2, S2, S6
	0x035D4CC0 FMUL S0, S0, S0
	0x035D4CC4 FMUL S1, S1, S1
	0x035D4CC8 LDR V4, [X8 + 0xF20]
	0x035D4CCC FSUB S3, S3, S7
	0x035D4CD0 FMUL S2, S2, S2
	0x035D4CD4 FADD S0, S0, S1
	0x035D4CD8 FADD S0, S2, S0
	0x035D4CDC FMUL S1, S3, S3
	0x035D4CE0 FADD S0, S1, S0
	0x035D4CE4 FCMP S0, S4
	0x035D4CE8 CSET W0, MI
	0x035D4CEC RET
	0x035D4CF0 EOR W8, W2, W1, 0x0
	0x035D4CF4 CMP W8, 0x0
	0x035D4CF8 CSET W0, EQ
	0x035D4CFC RET
	0x035D4D00 FCMP S2, S6
	0x035D4D04 MOV W0, W31
	0x035D4D08 B.NE 0x35D4D24
	0x035D4D0C FCMP S0, S4
	0x035D4D10 B.NE 0x35D4D24
	0x035D4D14 FCMP S1, S5
	0x035D4D18 B.NE 0x35D4D24
	0x035D4D1C FCMP S3, S7
	0x035D4D20 CSET W0, EQ
	0x035D4D24 RET
	0x035D4D28 LDR V0, [X1]
	0x035D4D2C LDR V1, [X2]
	0x035D4D30 LDUR V2, [X1 + 0x4]
	0x035D4D34 LDUR V3, [X2 + 0x4]
	0x035D4D38 ADRP X8, 0xFFFFFFFFFD515000
	0x035D4D3C FSUB S1, S0, S1
	0x035D4D40 LDR V0, [X8 + 0xF20]
	0x035D4D44 FSUB V2.2S, V2.2S, V3.2S
	0x035D4D48 FMUL S1, S1, S1
	0x00000000 INVALID
	0x035D4D50 FADD S1, S1, S2
	0x035D4D54 MOV S2, V2.S[1]
	0x035D4D58 FADD S1, S2, S1
	0x035D4D5C FCMP S1, S0
	0x035D4D60 B.PL 0x35D4DAC
	0x035D4D64 LDR V1, [X1 + 0xC]
	0x035D4D68 LDR V2, [X1 + 0x10]
	0x035D4D6C LDR V3, [X2 + 0xC]
	0x035D4D70 LDR V4, [X2 + 0x10]
	0x035D4D74 FADD S1, S1, S1
	0x035D4D78 FADD V2.2S, V2.2S, V2.2S
	0x035D4D7C FADD S3, S3, S3
	0x035D4D80 FADD V4.2S, V4.2S, V4.2S
	0x035D4D84 FSUB S1, S1, S3
	0x035D4D88 FSUB V2.2S, V2.2S, V4.2S
	0x035D4D8C FMUL S1, S1, S1
	0x00000000 INVALID
	0x035D4D94 FADD S1, S1, S2
	0x035D4D98 MOV S2, V2.S[1]
	0x035D4D9C FADD S1, S2, S1
	0x035D4DA0 FCMP S1, S0
	0x035D4DA4 CSET W0, MI
	0x035D4DA8 RET
	0x035D4DAC MOV W0, W31
	0x035D4DB0 RET
	0x035D4DB4 SUB X31, X31, 0xB0
	0x035D4DB8 STP X29, X30, [X31 + 0x50]
	0x035D4DBC STP X28, X27, [X31 + 0x60]
	0x035D4DC0 STP X26, X25, [X31 + 0x70]
	0x035D4DC4 STP X24, X23, [X31 + 0x80]
	0x035D4DC8 STP X22, X21, [X31 + 0x90]
	0x035D4DCC STP X20, X19, [X31 + 0xA0]
	0x035D4DD0 ADRP X20, 0xE0C000
	0x035D4DD4 LDRB W8, [X20 + 0x225]
	0x035D4DD8 MOV X29, X6
	0x035D4DDC MOV X27, X5
	0x035D4DE0 MOV X22, X4
	0x035D4DE4 MOV X23, X3
	0x035D4DE8 MOV X24, X2
	0x035D4DEC MOV X21, X1
	0x035D4DF0 MOV X28, X0
	0x035D4DF4 TBNZ X8, 0x0, 0x35D4E78
	0x035D4DF8 ADRP X0, 0xB1F000
	0x035D4DFC LDR X0, [X0 + 0xA28]
	0x035D4E00 BL 0x1C16CF4
	0x035D4E04 ADRP X0, 0xB20000
	0x035D4E08 LDR X0, [X0 + 0xC28]
	0x035D4E0C BL 0x1C16CF4
	0x035D4E10 ADRP X0, 0xB20000
	0x035D4E14 LDR X0, [X0 + 0xC30]
	0x035D4E18 BL 0x1C16CF4
	0x035D4E1C ADRP X0, 0xB20000
	0x035D4E20 LDR X0, [X0 + 0x1C0]
	0x035D4E24 BL 0x1C16CF4
	0x035D4E28 ADRP X0, 0xB20000
	0x035D4E2C LDR X0, [X0 + 0x1D0]
	0x035D4E30 BL 0x1C16CF4
	0x035D4E34 ADRP X0, 0xB1F000
	0x035D4E38 LDR X0, [X0 + 0x8F0]
	0x035D4E3C BL 0x1C16CF4
	0x035D4E40 ADRP X0, 0xB64000
	0x035D4E44 LDR X0, [X0 + 0xCA8]
	0x035D4E48 BL 0x1C16CF4
	0x035D4E4C ADRP X0, 0xB64000
	0x035D4E50 LDR X0, [X0 + 0xCB0]
	0x035D4E54 BL 0x1C16CF4
	0x035D4E58 ADRP X0, 0xB20000
	0x035D4E5C LDR X0, [X0 + 0xEC8]
	0x035D4E60 BL 0x1C16CF4
	0x035D4E64 ADRP X0, 0xB1F000
	0x035D4E68 LDR X0, [X0 + 0x988]
	0x035D4E6C BL 0x1C16CF4
	0x035D4E70 MOVZ W8, 0x1
	0x035D4E74 STRB W8, [X20 + 0x225]
	0x035D4E78 MOV X0, X21
	0x035D4E7C MOV X1, X31
	0x035D4E80 BL 0x32EC360
	0x035D4E84 TBZ X0, 0x0, 0x35D5128
	0x035D4E88 ADRP X19, 0xB1F000
	0x035D4E8C LDR X19, [X19 + 0x8F0]
	0x035D4E90 LDR X0, [X19]
	0x035D4E94 BL 0x1C16F10
	0x035D4E98 MOV X1, X31
	0x035D4E9C MOV X26, X0
	0x035D4EA0 BL 0x3231AC4
	0x035D4EA4 LDR X0, [X19]
	0x035D4EA8 STR X26, [X31 + 0x48]
	0x035D4EAC BL 0x1C16F10
	0x035D4EB0 MOV X1, X31
	0x035D4EB4 MOV X25, X0
	0x035D4EB8 BL 0x3231AC4
	0x035D4EBC LDR X0, [X19]
	0x035D4EC0 STR X25, [X31 + 0x40]
	0x035D4EC4 BL 0x1C16F10
	0x035D4EC8 MOV X1, X31
	0x035D4ECC MOV X19, X0
	0x035D4ED0 BL 0x3231AC4
	0x035D4ED4 STR X19, [X31 + 0x38]
	0x035D4ED8 CBZ X26, 0x35D5190
	0x035D4EDC MOV X0, X26
	0x035D4EE0 MOV X1, X28
	0x035D4EE4 MOV X2, X31
	0x035D4EE8 BL 0x32338A8
	0x035D4EEC CBZ X25, 0x35D5190
	0x035D4EF0 MOV X0, X25
	0x035D4EF4 MOV X1, X28
	0x035D4EF8 MOV X2, X31
	0x035D4EFC STR X29, [X31 + 0x30]
	0x035D4F00 BL 0x32338A8
	0x035D4F04 CBZ X19, 0x35D5190
	0x035D4F08 MOV X0, X19
	0x035D4F0C MOV X1, X28
	0x035D4F10 MOV X2, X31
	0x035D4F14 STP X24, X23, [X31 + 0x18]
	0x035D4F18 STP X19, X22, [X31 + 0x8]
	0x035D4F1C STR X21, [X31 + 0x28]
	0x035D4F20 BL 0x32338A8
	0x035D4F24 ADRP X19, 0xB20000
	0x035D4F28 LDR X19, [X19 + 0xC30]
	0x035D4F2C LDR X0, [X19]
	0x035D4F30 BL 0x1C16F10
	0x035D4F34 ADRP X20, 0xB20000
	0x035D4F38 LDR X20, [X20 + 0xC28]
	0x035D4F3C MOV X29, X0
	0x035D4F40 LDR X1, [X20]
	0x035D4F44 BL 0x2DBDE08
	0x035D4F48 LDR X0, [X19]
	0x035D4F4C BL 0x1C16F10
	0x035D4F50 LDR X1, [X20]
	0x035D4F54 MOV X20, X0
	0x035D4F58 BL 0x2DBDE08
	0x035D4F5C ADRP X8, 0xB20000
	0x035D4F60 LDR X8, [X8 + 0x1D0]
	0x035D4F64 LDR X0, [X8]
	0x035D4F68 BL 0x1C16F10
	0x035D4F6C ADRP X8, 0xB20000
	0x035D4F70 LDR X8, [X8 + 0x1C0]
	0x035D4F74 MOV X28, X0
	0x035D4F78 LDR X1, [X8]
	0x035D4F7C BL 0x301B7C4
	0x035D4F80 CBZ X27, 0x35D5190
	0x035D4F84 LDR X8, [X27 + 0x18]
	0x035D4F88 CMP W8, 0x1
	0x035D4F8C B.LT 0x35D4FF8
	0x035D4F90 ADRP X19, 0xB64000
	0x035D4F94 ADRP X24, 0xB1F000
	0x035D4F98 LDR X19, [X19 + 0xCA8]
	0x035D4F9C LDR X24, [X24 + 0x988]
	0x035D4FA0 MOV X22, X31
	0x035D4FA4 AND X8, X8, 0x0
	0x035D4FA8 ADD X23, X27, 0x20
	0x035D4FAC CMP X22, W8, UXTW
	0x035D4FB0 B.CS 0x35D518C
	0x035D4FB4 LDR X0, [X19]
	0x035D4FB8 LDR X21, [X23, X22, LSL #3]
	0x035D4FBC LDR W8, [X0 + 0xE0]
	0x035D4FC0 CBNZ W8, 0x35D4FC8
	0x035D4FC4 BL 0x1C16DFC
	0x035D4FC8 LDR X2, [X24]
	0x035D4FCC ADD X0, X31, 0x48
	0x035D4FD0 MOV X1, X21
	0x035D4FD4 MOV W3, W31
	0x035D4FD8 MOV X4, X29
	0x035D4FDC MOV X5, X20
	0x035D4FE0 MOV X6, X28
	0x035D4FE4 BL 0x35D5194
	0x035D4FE8 LDR W8, [X27 + 0x18]
	0x035D4FEC ADD X22, X22, 0x1
	0x035D4FF0 CMP X22, W8, SXTW
	0x035D4FF4 B.LT 0x35D4FAC
	0x035D4FF8 ADRP X8, 0xB64000
	0x035D4FFC LDR X8, [X8 + 0xCA8]
	0x035D5000 LDR X0, [X8]
	0x035D5004 LDR W8, [X0 + 0xE0]
	0x035D5008 CBNZ W8, 0x35D5010
	0x035D500C BL 0x1C16DFC
	0x035D5010 ADD X0, X31, 0x48
	0x035D5014 BL 0x35D641C
	0x035D5018 ADD X0, X31, 0x48
	0x035D501C BL 0x35D64F8
	0x035D5020 LDP X21, X22, [X31 + 0x20]
	0x035D5024 LDR X20, [X31 + 0x18]
	0x035D5028 LDR X19, [X31 + 0x30]
	0x035D502C CBZ X19, 0x35D5190
	0x035D5030 MOV X0, X19
	0x035D5034 MOV X1, X31
	0x035D5038 BL 0x33BE520
	0x035D503C CBZ X0, 0x35D5190
	0x035D5040 LDR X8, [X0]
	0x035D5044 LDP X9, X1, [X8 + 0x1A8]
	0x035D5048 BLR X9
	0x035D504C BL 0x35D6624
	0x035D5050 MOV X1, X0
	0x035D5054 ADD X0, X31, 0x40
	0x035D5058 MOV X2, X28
	0x035D505C BL 0x35D6678
	0x035D5060 ADD X0, X31, 0x38
	0x035D5064 MOV X1, X20
	0x035D5068 MOV X2, X28
	0x035D506C MOV X3, X19
	0x035D5070 BL 0x35D68AC
	0x035D5074 ADRP X19, 0xB1F000
	0x035D5078 LDR X19, [X19 + 0xEC8]
	0x035D507C MOV X0, X22
	0x035D5080 MOV X2, X20
	0x035D5084 MOV X3, X31
	0x035D5088 LDR X1, [X19]
	0x035D508C BL 0x32274B8
	0x035D5090 LDR X1, [X19]
	0x035D5094 MOV X20, X0
	0x035D5098 MOV X0, X22
	0x035D509C MOV X2, X21
	0x035D50A0 MOV X3, X31
	0x035D50A4 BL 0x32274B8
	0x035D50A8 LDR X1, [X19]
	0x035D50AC LDR X2, [X31 + 0x10]
	0x035D50B0 MOV X21, X0
	0x035D50B4 MOV X0, X22
	0x035D50B8 MOV X3, X31
	0x035D50BC BL 0x32274B8
	0x035D50C0 LDR X8, [X26]
	0x035D50C4 MOV X19, X0
	0x035D50C8 MOV X0, X26
	0x035D50CC LDP X9, X1, [X8 + 0x168]
	0x035D50D0 BLR X9
	0x035D50D4 MOV X1, X0
	0x035D50D8 MOV X0, X20
	0x035D50DC MOV X2, X31
	0x035D50E0 BL 0x32ED528
	0x035D50E4 LDR X8, [X25]
	0x035D50E8 MOV X0, X25
	0x035D50EC LDP X9, X1, [X8 + 0x168]
	0x035D50F0 BLR X9
	0x035D50F4 MOV X1, X0
	0x035D50F8 MOV X0, X21
	0x035D50FC MOV X2, X31
	0x035D5100 BL 0x32ED528
	0x035D5104 LDR X0, [X31 + 0x8]
	0x035D5108 LDR X8, [X0]
	0x035D510C LDP X9, X1, [X8 + 0x168]
	0x035D5110 BLR X9
	0x035D5114 MOV X1, X0
	0x035D5118 MOV X0, X19
	0x035D511C MOV X2, X31
	0x035D5120 BL 0x32ED528
	0x035D5124 B 0x35D516C
	0x035D5128 ADRP X8, 0xB63000
	0x035D512C LDR X8, [X8 + 0xCB0]
	0x035D5130 MOV X1, X21
	0x035D5134 MOV X2, X31
	0x035D5138 LDR X0, [X8]
	0x035D513C BL 0x321B938
	0x035D5140 ADRP X8, 0xB1E000
	0x035D5144 LDR X8, [X8 + 0xA28]
	0x035D5148 MOV X19, X0
	0x035D514C LDR X8, [X8]
	0x035D5150 LDR W9, [X8 + 0xE0]
	0x035D5154 CBNZ W9, 0x35D5160
	0x035D5158 MOV X0, X8
	0x035D515C BL 0x1C16DFC
	0x035D5160 MOV X0, X19
	0x035D5164 MOV X1, X31
	0x035D5168 BL 0x3C06048
	0x035D516C LDP X20, X19, [X31 + 0xA0]
	0x035D5170 LDP X22, X21, [X31 + 0x90]
	0x035D5174 LDP X24, X23, [X31 + 0x80]
	0x035D5178 LDP X26, X25, [X31 + 0x70]
	0x035D517C LDP X28, X27, [X31 + 0x60]
	0x035D5180 LDP X29, X30, [X31 + 0x50]
	0x035D5184 ADD X31, X31, 0xB0
	0x035D5188 RET
	0x035D518C BL 0x1C16F28
	0x035D5190 BL 0x1C16F20
	0x035D5194 SUB X31, X31, 0x140
	0x035D5198 STP X29, X30, [X31 + 0xE0]
	0x035D519C STP X28, X27, [X31 + 0xF0]
	0x035D51A0 STP X26, X25, [X31 + 0x100]
	0x035D51A4 STP X24, X23, [X31 + 0x110]
	0x035D51A8 STP X22, X21, [X31 + 0x120]
	0x035D51AC STP X20, X19, [X31 + 0x130]
	0x035D51B0 STR X6, [X31 + 0x60]
	0x035D51B4 STR W3, [X31 + 0x6C]
	0x035D51B8 STR X2, [X31 + 0x70]
	0x035D51BC STR X1, [X31 + 0x40]
	0x035D51C0 ADRP X28, 0xE0B000
	0x035D51C4 ADRP X27, 0xB63000
	0x035D51C8 ADRP X26, 0xB63000
	0x035D51CC ADRP X25, 0xB28000
	0x035D51D0 ADRP X24, 0xB28000
	0x035D51D4 ADRP X23, 0xB1F000
	0x035D51D8 ADRP X21, 0xB1F000
	0x035D51DC LDR X27, [X27 + 0xCB8]
	0x035D51E0 LDRB W8, [X28 + 0x227]
	0x035D51E4 LDR X26, [X26 + 0xCC0]
	0x035D51E8 LDR X25, [X25 + 0x920]
	0x035D51EC LDR X24, [X24 + 0x928]
	0x035D51F0 LDR X23, [X23 + 0xC30]
	0x035D51F4 LDR X21, [X21 + 0xC28]
	0x035D51F8 MOV X19, X5
	0x035D51FC MOV X22, X4
	0x035D5200 MOV X20, X0
	0x035D5204 TBNZ X8, 0x0, 0x35D53D8
	0x035D5208 ADRP X0, 0xB1E000
	0x035D520C LDR X0, [X0 + 0xA28]
	0x035D5210 BL 0x1C16CF4
	0x035D5214 ADRP X0, 0xB63000
	0x035D5218 LDR X0, [X0 + 0xCC8]
	0x035D521C BL 0x1C16CF4
	0x035D5220 ADRP X0, 0xB28000
	0x035D5224 LDR X0, [X0 + 0x998]
	0x035D5228 BL 0x1C16CF4
	0x035D522C ADRP X0, 0xB63000
	0x035D5230 LDR X0, [X0 + 0xCD0]
	0x035D5234 BL 0x1C16CF4
	0x035D5238 ADRP X0, 0xB63000
	0x035D523C LDR X0, [X0 + 0xCD8]
	0x035D5240 BL 0x1C16CF4
	0x035D5244 ADRP X0, 0xB28000
	0x035D5248 LDR X0, [X0 + 0x9A0]
	0x035D524C BL 0x1C16CF4
	0x035D5250 ADRP X0, 0xB63000
	0x035D5254 LDR X0, [X0 + 0xCE0]
	0x035D5258 BL 0x1C16CF4
	0x035D525C ADRP X0, 0xB28000
	0x035D5260 LDR X0, [X0 + 0x9A8]
	0x035D5264 BL 0x1C16CF4
	0x035D5268 ADRP X0, 0xB63000
	0x035D526C LDR X0, [X0 + 0x680]
	0x035D5270 BL 0x1C16CF4
	0x035D5274 ADRP X0, 0xB1F000
	0x035D5278 LDR X0, [X0 + 0xC20]
	0x035D527C BL 0x1C16CF4
	0x035D5280 ADRP X0, 0xB63000
	0x035D5284 LDR X0, [X0 + 0xCE8]
	0x035D5288 BL 0x1C16CF4
	0x035D528C ADRP X0, 0xB1F000
	0x035D5290 LDR X0, [X0 + 0xC28]
	0x035D5294 BL 0x1C16CF4
	0x035D5298 ADRP X0, 0xB1F000
	0x035D529C LDR X0, [X0 + 0xC30]
	0x035D52A0 BL 0x1C16CF4
	0x035D52A4 ADRP X0, 0xB63000
	0x035D52A8 LDR X0, [X0 + 0xCF0]
	0x035D52AC BL 0x1C16CF4
	0x035D52B0 ADRP X0, 0xB28000
	0x035D52B4 LDR X0, [X0 + 0x938]
	0x035D52B8 BL 0x1C16CF4
	0x035D52BC ADRP X0, 0xB1F000
	0x035D52C0 LDR X0, [X0 + 0x1B8]
	0x035D52C4 BL 0x1C16CF4
	0x035D52C8 ADRP X0, 0xB63000
	0x035D52CC LDR X0, [X0 + 0xCF8]
	0x035D52D0 BL 0x1C16CF4
	0x035D52D4 ADRP X0, 0xB28000
	0x035D52D8 LDR X0, [X0 + 0x9D8]
	0x035D52DC BL 0x1C16CF4
	0x035D52E0 ADRP X0, 0xB63000
	0x035D52E4 LDR X0, [X0 + 0xCC0]
	0x035D52E8 BL 0x1C16CF4
	0x035D52EC ADRP X0, 0xB28000
	0x035D52F0 LDR X0, [X0 + 0x928]
	0x035D52F4 BL 0x1C16CF4
	0x035D52F8 ADRP X0, 0xB28000
	0x035D52FC LDR X0, [X0 + 0x920]
	0x035D5300 BL 0x1C16CF4
	0x035D5304 ADRP X0, 0xB63000
	0x035D5308 LDR X0, [X0 + 0xCB8]
	0x035D530C BL 0x1C16CF4
	0x035D5310 ADRP X0, 0xB63000
	0x035D5314 LDR X0, [X0 + 0xD00]
	0x035D5318 BL 0x1C16CF4
	0x035D531C ADRP X0, 0xB63000
	0x035D5320 LDR X0, [X0 + 0xD08]
	0x035D5324 BL 0x1C16CF4
	0x035D5328 ADRP X0, 0xB63000
	0x035D532C LDR X0, [X0 + 0xD10]
	0x035D5330 BL 0x1C16CF4
	0x035D5334 ADRP X0, 0xB63000
	0x035D5338 LDR X0, [X0 + 0xD18]
	0x035D533C BL 0x1C16CF4
	0x035D5340 ADRP X0, 0xB63000
	0x035D5344 LDR X0, [X0 + 0xCA8]
	0x035D5348 BL 0x1C16CF4
	0x035D534C ADRP X0, 0xB1E000
	0x035D5350 LDR X0, [X0 + 0x6C0]
	0x035D5354 BL 0x1C16CF4
	0x035D5358 ADRP X0, 0xB63000
	0x035D535C LDR X0, [X0 + 0xD20]
	0x035D5360 BL 0x1C16CF4
	0x035D5364 ADRP X0, 0xB63000
	0x035D5368 LDR X0, [X0 + 0xD28]
	0x035D536C BL 0x1C16CF4
	0x035D5370 ADRP X0, 0xB22000
	0x035D5374 LDR X0, [X0 + 0x928]
	0x035D5378 BL 0x1C16CF4
	0x035D537C ADRP X0, 0xB63000
	0x035D5380 LDR X0, [X0 + 0x670]
	0x035D5384 BL 0x1C16CF4
	0x035D5388 ADRP X0, 0xB63000
	0x035D538C LDR X0, [X0 + 0xD30]
	0x035D5390 BL 0x1C16CF4
	0x035D5394 ADRP X0, 0xB29000
	0x035D5398 LDR X0, [X0 + 0x6D8]
	0x035D539C BL 0x1C16CF4
	0x035D53A0 ADRP X0, 0xB1F000
	0x035D53A4 LDR X0, [X0 + 0xEC8]
	0x035D53A8 BL 0x1C16CF4
	0x035D53AC ADRP X0, 0xB63000
	0x035D53B0 LDR X0, [X0 + 0xD38]
	0x035D53B4 BL 0x1C16CF4
	0x035D53B8 ADRP X0, 0xB63000
	0x035D53BC LDR X0, [X0 + 0xD40]
	0x035D53C0 BL 0x1C16CF4
	0x035D53C4 ADRP X0, 0xB1E000
	0x035D53C8 LDR X0, [X0 + 0x988]
	0x035D53CC BL 0x1C16CF4
	0x035D53D0 MOVZ W8, 0x1
	0x035D53D4 STRB W8, [X28 + 0x227]
	0x035D53D8 MOVZ W1, 0x20
	0x035D53DC MOVZ W2, 0x2
	0x035D53E0 MOV X0, X31
	0x035D53E4 MOV X3, X31
	0x035D53E8 STP X31, X31, [X31 + 0xD0]
	0x035D53EC STP X31, X31, [X31 + 0xB0]
	0x035D53F0 STR X31, [X31 + 0xC0]
	0x035D53F4 STP X31, X31, [X31 + 0x90]
	0x035D53F8 STR X31, [X31 + 0xA0]
	0x035D53FC BL 0x322EAF4
	0x035D5400 LDR X8, [X27]
	0x035D5404 STR X0, [X31 + 0x28]
	0x035D5408 MOV X0, X8
	0x035D540C BL 0x1C16F10
	0x035D5410 LDR X1, [X26]
	0x035D5414 STR X0, [X31 + 0x50]
	0x035D5418 BL 0x301B7C4
	0x035D541C LDR X0, [X25]
	0x035D5420 BL 0x1C16F10
	0x035D5424 LDR X1, [X24]
	0x035D5428 STR X0, [X31 + 0x48]
	0x035D542C BL 0x301B7C4
	0x035D5430 LDR X0, [X23]
	0x035D5434 BL 0x1C16F10
	0x035D5438 LDR X1, [X21]
	0x035D543C STR X0, [X31 + 0x58]
	0x035D5440 BL 0x2DBDE08
	0x035D5444 LDR X24, [X31 + 0x40]
	0x035D5448 CBZ X24, 0x35D62C0
	0x035D544C LDR X8, [X24]
	0x035D5450 ADRP X21, 0xB63000
	0x035D5454 MOV X0, X24
	0x035D5458 LDR X9, [X8 + 0x2E8]
	0x035D545C LDR X1, [X8 + 0x2F0]
	0x035D5460 LDR X21, [X21 + 0xCA8]
	0x035D5464 BLR X9
	0x035D5468 LDR X8, [X21]
	0x035D546C MOV X21, X0
	0x035D5470 LDR W9, [X8 + 0xE0]
	0x035D5474 CBNZ W9, 0x35D5480
	0x035D5478 MOV X0, X8
	0x035D547C BL 0x1C16DFC
	0x035D5480 MOV X0, X21
	0x035D5484 BL 0x35D6624
	0x035D5488 MOV X26, X0
	0x035D548C MOV X0, X24
	0x035D5490 MOV X1, X31
	0x035D5494 BL 0x339707C
	0x035D5498 TBZ X0, 0x0, 0x35D54D8
	0x035D549C ADRP X8, 0xB63000
	0x035D54A0 ADRP X9, 0xB63000
	0x035D54A4 LDR X23, [X20]
	0x035D54A8 LDR X8, [X8 + 0xD38]
	0x035D54AC LDR X9, [X9 + 0xD40]
	0x035D54B0 MOV X1, X26
	0x035D54B4 MOV X3, X31
	0x035D54B8 LDR X0, [X8]
	0x035D54BC LDR X2, [X9]
	0x035D54C0 BL 0x32274B8
	0x035D54C4 CBZ X23, 0x35D62C0
	0x035D54C8 MOV X1, X0
	0x035D54CC MOV X0, X23
	0x035D54D0 MOV X2, X31
	0x035D54D4 BL 0x32338A8
	0x035D54D8 LDR X8, [X24]
	0x035D54DC MOVZ W1, 0x16
	0x035D54E0 MOV X0, X24
	0x035D54E4 LDR X9, [X8 + 0x7E8]
	0x035D54E8 LDR X2, [X8 + 0x7F0]
	0x035D54EC BLR X9
	0x035D54F0 CBZ X0, 0x35D62C0
	0x035D54F4 LDR W8, [X0 + 0x18]
	0x035D54F8 MOV X29, X0
	0x035D54FC CMP W8, 0x1
	0x035D5500 B.LT 0x35D5F20
	0x035D5504 STR X26, [X31 + 0x10]
	0x035D5508 STR X31, [X31 + 0x30]
	0x035D550C ADRP X23, 0xB63000
	0x035D5510 ADRP X28, 0xB63000
	0x035D5514 LDR X23, [X23 + 0x670]
	0x035D5518 LDR X28, [X28 + 0xCC8]
	0x035D551C MOV X24, X31
	0x035D5520 MOV W27, W31
	0x035D5524 MOVZ W9, 0x1
	0x035D5528 STR W9, [X31 + 0x38]
	0x035D552C STR X20, [X31 + 0x18]
	0x035D5530 CMP W27, W8
	0x035D5534 B.CS 0x35D62D8
	0x035D5538 ADD X8, X29, W27, 0x3, SXTW
	0x035D553C LDR X25, [X8 + 0x20]
	0x035D5540 CBZ X25, 0x35D62C0
	0x035D5544 LDR X8, [X25]
	0x035D5548 MOV X0, X25
	0x035D554C LDR X9, [X8 + 0x2A8]
	0x035D5550 LDR X1, [X8 + 0x2B0]
	0x035D5554 BLR X9
	0x035D5558 MOV X1, X31
	0x035D555C MOV X2, X31
	0x035D5560 BL 0x32C2354
	0x035D5564 TBNZ X0, 0x0, 0x35D56B4
	0x035D5568 LDR X8, [X25]
	0x035D556C MOV X0, X25
	0x035D5570 LDP X9, X1, [X8 + 0x1A8]
	0x035D5574 BLR X9
	0x035D5578 LDR X1, [X23]
	0x035D557C MOV X2, X31
	0x035D5580 BL 0x321BA08
	0x035D5584 TBNZ X0, 0x0, 0x35D56B4
	0x035D5588 ADRP X21, 0xB63000
	0x035D558C LDR X21, [X21 + 0xCA8]
	0x035D5590 LDR X0, [X21]
	0x035D5594 LDR W8, [X0 + 0xE0]
	0x035D5598 CBNZ W8, 0x35D55A4
	0x035D559C BL 0x1C16DFC
	0x035D55A0 LDR X0, [X21]
	0x035D55A4 LDR X8, [X0 + 0xB8]
	0x035D55A8 LDR X9, [X25]
	0x035D55AC MOV X0, X25
	0x035D55B0 LDR X23, [X8 + 0x8]
	0x035D55B4 LDR X8, [X9 + 0x248]
	0x035D55B8 LDR X1, [X9 + 0x250]
	0x035D55BC BLR X8
	0x035D55C0 CBZ X23, 0x35D62C0
	0x035D55C4 LDR X8, [X23]
	0x035D55C8 MOV X1, X0
	0x035D55CC MOV X0, X23
	0x035D55D0 LDR X9, [X8 + 0x2A8]
	0x035D55D4 LDR X2, [X8 + 0x2B0]
	0x035D55D8 BLR X9
	0x035D55DC TBZ X0, 0x0, 0x35D56AC
	0x035D55E0 LDR X8, [X25]
	0x035D55E4 MOV X0, X25
	0x035D55E8 LDR X9, [X8 + 0x218]
	0x035D55EC LDR X1, [X8 + 0x220]
	0x035D55F0 BLR X9
	0x035D55F4 ADRP X21, 0xB63000
	0x035D55F8 LDR X21, [X21 + 0xD28]
	0x035D55FC MOV X26, X0
	0x035D5600 LDR X8, [X21]
	0x035D5604 LDR W9, [X8 + 0xE0]
	0x035D5608 CBNZ W9, 0x35D5618
	0x035D560C MOV X0, X8
	0x035D5610 BL 0x1C16DFC
	0x035D5614 LDR X8, [X21]
	0x035D5618 LDR X9, [X8 + 0xB8]
	0x035D561C LDR X23, [X9 + 0x8]
	0x035D5620 CBNZ X23, 0x35D5698
	0x035D5624 LDR W9, [X8 + 0xE0]
	0x035D5628 MOV X20, X28
	0x035D562C CBZ W9, 0x35D563C
	0x035D5630 ADRP X28, 0xB63000
	0x035D5634 LDR X28, [X28 + 0xD28]
	0x035D5638 B 0x35D5650
	0x035D563C MOV X0, X8
	0x035D5640 BL 0x1C16DFC
	0x035D5644 ADRP X28, 0xB63000
	0x035D5648 LDR X28, [X28 + 0xD28]
	0x035D564C LDR X8, [X28]
	0x035D5650 LDR X8, [X8 + 0xB8]
	0x035D5654 LDR X21, [X8]
	0x035D5658 ADRP X8, 0xB63000
	0x035D565C LDR X8, [X8 + 0x680]
	0x035D5660 LDR X0, [X8]
	0x035D5664 BL 0x1C16F10
	0x035D5668 ADRP X8, 0xB63000
	0x035D566C LDR X8, [X8 + 0xD20]
	0x035D5670 MOV X1, X21
	0x035D5674 MOV X3, X31
	0x035D5678 MOV X23, X0
	0x035D567C LDR X2, [X8]
	0x035D5680 BL 0x2D2F428
	0x035D5684 LDR X8, [X28]
	0x035D5688 MOV X28, X20
	0x035D568C LDR X20, [X31 + 0x18]
	0x035D5690 LDR X8, [X8 + 0xB8]
	0x035D5694 STR X23, [X8 + 0x8]
	0x035D5698 LDR X2, [X28]
	0x035D569C MOV X0, X26
	0x035D56A0 MOV X1, X23
	0x035D56A4 BL 0x21B36AC
	0x035D56A8 TBZ X0, 0x0, 0x35D56D0
	0x035D56AC ADRP X23, 0xB63000
	0x035D56B0 LDR X23, [X23 + 0x670]
	0x035D56B4 MOV X26, X24
	0x035D56B8 LDR W8, [X29 + 0x18]
	0x035D56BC ADD W27, W27, 0x1
	0x035D56C0 MOV X24, X26
	0x035D56C4 CMP W27, W8
	0x035D56C8 B.LT 0x35D5530
	0x035D56CC B 0x35D5F10
	0x035D56D0 LDR X23, [X31 + 0x70]
	0x035D56D4 CBZ X23, 0x35D62C0
	0x035D56D8 LDR X8, [X25]
	0x035D56DC LDR W21, [X23 + 0x10]
	0x035D56E0 MOV X0, X25
	0x035D56E4 LDP X9, X1, [X8 + 0x1A8]
	0x035D56E8 BLR X9
	0x035D56EC MOV X2, X0
	0x035D56F0 CBZ W21, 0x35D5714
	0x035D56F4 ADRP X8, 0xB1F000
	0x035D56F8 LDR X8, [X8 + 0xEC8]
	0x035D56FC MOV X0, X23
	0x035D5700 MOV X3, X31
	0x035D5704 LDR X1, [X8]
	0x035D5708 BL 0x32274B8
	0x035D570C STR X0, [X31 + 0x20]
	0x035D5710 B 0x35D5718
	0x035D5714 STR X2, [X31 + 0x20]
	0x035D5718 LDR X8, [X25]
	0x035D571C MOV X0, X25
	0x035D5720 LDR X9, [X8 + 0x248]
	0x035D5724 LDR X1, [X8 + 0x250]
	0x035D5728 BLR X9
	0x035D572C CBZ X0, 0x35D62C0
	0x035D5730 LDR X8, [X0]
	0x035D5734 LDR X9, [X8 + 0x3C8]
	0x035D5738 LDR X1, [X8 + 0x3D0]
	0x035D573C BLR X9
	0x035D5740 TBNZ X0, 0x0, 0x35D579C
	0x035D5744 LDR X8, [X25]
	0x035D5748 MOV X0, X25
	0x035D574C LDR X9, [X8 + 0x248]
	0x035D5750 LDR X1, [X8 + 0x250]
	0x035D5754 BLR X9
	0x035D5758 CBZ X0, 0x35D62C0
	0x035D575C LDR X8, [X0]
	0x035D5760 LDR X9, [X8 + 0x818]
	0x035D5764 LDR X1, [X8 + 0x820]
	0x035D5768 BLR X9
	0x035D576C CMP X0, 0x0
	0x035D5770 CSEL X26, X24, X0, EQ
	0x035D5774 CBZ X0, 0x35D57F8
	0x035D5778 CBZ X26, 0x35D62C0
	0x035D577C LDR X8, [X26]
	0x035D5780 MOV X23, X0
	0x035D5784 MOV X0, X26
	0x035D5788 LDR X9, [X8 + 0x3C8]
	0x035D578C LDR X1, [X8 + 0x3D0]
	0x035D5790 BLR X9
	0x035D5794 MOV X24, X23
	0x035D5798 TBZ X0, 0x0, 0x35D57F8
	0x035D579C LDR X8, [X25]
	0x035D57A0 MOV X0, X25
	0x035D57A4 LDR X9, [X8 + 0x248]
	0x035D57A8 LDR X1, [X8 + 0x250]
	0x035D57AC BLR X9
	0x035D57B0 CBZ X0, 0x35D62C0
	0x035D57B4 LDR X8, [X0]
	0x035D57B8 LDR X9, [X8 + 0x818]
	0x035D57BC LDR X1, [X8 + 0x820]
	0x035D57C0 BLR X9
	0x035D57C4 LDR X8, [X31 + 0x30]
	0x035D57C8 CMP X0, 0x0
	0x035D57CC CSEL X8, X8, X0, EQ
	0x035D57D0 STR X8, [X31 + 0x30]
	0x035D57D4 CBZ X0, 0x35D5984
	0x035D57D8 CBZ X8, 0x35D62C0
	0x035D57DC MOV X0, X8
	0x035D57E0 LDR X8, [X8]
	0x035D57E4 LDR X9, [X8 + 0x3C8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0xE0E000
	014 Move X24, 0xB4A000
	015 Move X19, 0xB4A000
	016 Move X23, 0xB4A000
	017 Move X21, 0xB66000
	018 Move X20, 0xB66000
	019 Move X22, 0xB66000
	020 Move X24, [X24+856]
	021 Move W8, [X25+544]
	022 Move X19, [X19+848]
	023 Move X23, [X23+672]
	024 Move X21, [X21+2000]
	025 Move X20, [X20+2008]
	026 Move X22, [X22+2016]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {507}
	031 Move X0, 0xB4A000
	032 Move X0, [X0+848]
	033 Call 0x1C17CF4
	034 Move X0, 0xB4A000
	035 Move X0, [X0+856]
	036 Call 0x1C17CF4
	037 Move X0, 0xB66000
	038 Move X0, [X0+2024]
	039 Call 0x1C17CF4
	040 Move X0, 0xB66000
	041 Move X0, [X0+2032]
	042 Call 0x1C17CF4
	043 Move X0, 0xB66000
	044 Move X0, [X0+2040]
	045 Call 0x1C17CF4
	046 Move X0, 0xB66000
	047 Move X0, [X0+2048]
	048 Call 0x1C17CF4
	049 Move X0, 0xB65000
	050 Move X0, [X0+2056]
	051 Call 0x1C17CF4
	052 Move X0, 0xB65000
	053 Move X0, [X0+2064]
	054 Call 0x1C17CF4
	055 Move X0, 0xB65000
	056 Move X0, [X0+2072]
	057 Call 0x1C17CF4
	058 Move X0, 0xB65000
	059 Move X0, [X0+2080]
	060 Call 0x1C17CF4
	061 Move X0, 0xB65000
	062 Move X0, [X0+2088]
	063 Call 0x1C17CF4
	064 Move X0, 0xB65000
	065 Move X0, [X0+2096]
	066 Call 0x1C17CF4
	067 Move X0, 0xB65000
	068 Move X0, [X0+2104]
	069 Call 0x1C17CF4
	070 Move X0, 0xB65000
	071 Move X0, [X0+2112]
	072 Call 0x1C17CF4
	073 Move X0, 0xB65000
	074 Move X0, [X0+2120]
	075 Call 0x1C17CF4
	076 Move X0, 0xB65000
	077 Move X0, [X0+2128]
	078 Call 0x1C17CF4
	079 Move X0, 0xB65000
	080 Move X0, [X0+2136]
	081 Call 0x1C17CF4
	082 Move X0, 0xB65000
	083 Move X0, [X0+2144]
	084 Call 0x1C17CF4
	085 Move X0, 0xB65000
	086 Move X0, [X0+2152]
	087 Call 0x1C17CF4
	088 Move X0, 0xB65000
	089 Move X0, [X0+2160]
	090 Call 0x1C17CF4
	091 Move X0, 0xB65000
	092 Move X0, [X0+2168]
	093 Call 0x1C17CF4
	094 Move X0, 0xB65000
	095 Move X0, [X0+2176]
	096 Call 0x1C17CF4
	097 Move X0, 0xB65000
	098 Move X0, [X0+2184]
	099 Call 0x1C17CF4
	100 Move X0, 0xB65000
	101 Move X0, [X0+2192]
	102 Call 0x1C17CF4
	103 Move X0, 0xB65000
	104 Move X0, [X0+2200]
	105 Call 0x1C17CF4
	106 Move X0, 0xB65000
	107 Move X0, [X0+2208]
	108 Call 0x1C17CF4
	109 Move X0, 0xB65000
	110 Move X0, [X0+2216]
	111 Call 0x1C17CF4
	112 Move X0, 0xB65000
	113 Move X0, [X0+2224]
	114 Call 0x1C17CF4
	115 Move X0, 0xB65000
	116 Move X0, [X0+2232]
	117 Call 0x1C17CF4
	118 Move X0, 0xB65000
	119 Move X0, [X0+2240]
	120 Call 0x1C17CF4
	121 Move X0, 0xB65000
	122 Move X0, [X0+2248]
	123 Call 0x1C17CF4
	124 Move X0, 0xB65000
	125 Move X0, [X0+2256]
	126 Call 0x1C17CF4
	127 Move X0, 0xB65000
	128 Move X0, [X0+2264]
	129 Call 0x1C17CF4
	130 Move X0, 0xB65000
	131 Move X0, [X0+2272]
	132 Call 0x1C17CF4
	133 Move X0, 0xB65000
	134 Move X0, [X0+2280]
	135 Call 0x1C17CF4
	136 Move X0, 0xB65000
	137 Move X0, [X0+2288]
	138 Call 0x1C17CF4
	139 Move X0, 0xB65000
	140 Move X0, [X0+2296]
	141 Call 0x1C17CF4
	142 Move X0, 0xB65000
	143 Move X0, [X0+2304]
	144 Call 0x1C17CF4
	145 Move X0, 0xB65000
	146 Move X0, [X0+2312]
	147 Call 0x1C17CF4
	148 Move X0, 0xB65000
	149 Move X0, [X0+2320]
	150 Call 0x1C17CF4
	151 Move X0, 0xB65000
	152 Move X0, [X0+2328]
	153 Call 0x1C17CF4
	154 Move X0, 0xB65000
	155 Move X0, [X0+2336]
	156 Call 0x1C17CF4
	157 Move X0, 0xB65000
	158 Move X0, [X0+2344]
	159 Call 0x1C17CF4
	160 Move X0, 0xB65000
	161 Move X0, [X0+2352]
	162 Call 0x1C17CF4
	163 Move X0, 0xB65000
	164 Move X0, [X0+2360]
	165 Call 0x1C17CF4
	166 Move X0, 0xB65000
	167 Move X0, [X0+2368]
	168 Call 0x1C17CF4
	169 Move X0, 0xB65000
	170 Move X0, [X0+2376]
	171 Call 0x1C17CF4
	172 Move X0, 0xB65000
	173 Move X0, [X0+2384]
	174 Call 0x1C17CF4
	175 Move X0, 0xB65000
	176 Move X0, [X0+2392]
	177 Call 0x1C17CF4
	178 Move X0, 0xB65000
	179 Move X0, [X0+2400]
	180 Call 0x1C17CF4
	181 Move X0, 0xB65000
	182 Move X0, [X0+2408]
	183 Call 0x1C17CF4
	184 Move X0, 0xB65000
	185 Move X0, [X0+2416]
	186 Call 0x1C17CF4
	187 Move X0, 0xB65000
	188 Move X0, [X0+2424]
	189 Call 0x1C17CF4
	190 Move X0, 0xB65000
	191 Move X0, [X0+2432]
	192 Call 0x1C17CF4
	193 Move X0, 0xB65000
	194 Move X0, [X0+2440]
	195 Call 0x1C17CF4
	196 Move X0, 0xB65000
	197 Move X0, [X0+2448]
	198 Call 0x1C17CF4
	199 Move X0, 0xB65000
	200 Move X0, [X0+2456]
	201 Call 0x1C17CF4
	202 Move X0, 0xB65000
	203 Move X0, [X0+2464]
	204 Call 0x1C17CF4
	205 Move X0, 0xB65000
	206 Move X0, [X0+2472]
	207 Call 0x1C17CF4
	208 Move X0, 0xB65000
	209 Move X0, [X0+2008]
	210 Call 0x1C17CF4
	211 Move X0, 0xB65000
	212 Move X0, [X0+2480]
	213 Call 0x1C17CF4
	214 Move X0, 0xB65000
	215 Move X0, [X0+2488]
	216 Call 0x1C17CF4
	217 Move X0, 0xB65000
	218 Move X0, [X0+2496]
	219 Call 0x1C17CF4
	220 Move X0, 0xB65000
	221 Move X0, [X0+2504]
	222 Call 0x1C17CF4
	223 Move X0, 0xB65000
	224 Move X0, [X0+2512]
	225 Call 0x1C17CF4
	226 Move X0, 0xB65000
	227 Move X0, [X0+2000]
	228 Call 0x1C17CF4
	229 Move X0, 0xB65000
	230 Move X0, [X0+2520]
	231 Call 0x1C17CF4
	232 Move X0, 0xB65000
	233 Move X0, [X0+2528]
	234 Call 0x1C17CF4
	235 Move X0, 0xB65000
	236 Move X0, [X0+2536]
	237 Call 0x1C17CF4
	238 Move X0, 0xB65000
	239 Move X0, [X0+2544]
	240 Call 0x1C17CF4
	241 Move X0, 0xB65000
	242 Move X0, [X0+2552]
	243 Call 0x1C17CF4
	244 Move X0, 0xB65000
	245 Move X0, [X0+2560]
	246 Call 0x1C17CF4
	247 Move X0, 0xB65000
	248 Move X0, [X0+2568]
	249 Call 0x1C17CF4
	250 Move X0, 0xB65000
	251 Move X0, [X0+2576]
	252 Call 0x1C17CF4
	253 Move X0, 0xB65000
	254 Move X0, [X0+2584]
	255 Call 0x1C17CF4
	256 Move X0, 0xB65000
	257 Move X0, [X0+2592]
	258 Call 0x1C17CF4
	259 Move X0, 0xB65000
	260 Move X0, [X0+2600]
	261 Call 0x1C17CF4
	262 Move X0, 0xB65000
	263 Move X0, [X0+2608]
	264 Call 0x1C17CF4
	265 Move X0, 0xB65000
	266 Move X0, [X0+2616]
	267 Call 0x1C17CF4
	268 Move X0, 0xB65000
	269 Move X0, [X0+2624]
	270 Call 0x1C17CF4
	271 Move X0, 0xB65000
	272 Move X0, [X0+2632]
	273 Call 0x1C17CF4
	274 Move X0, 0xB65000
	275 Move X0, [X0+2640]
	276 Call 0x1C17CF4
	277 Move X0, 0xB65000
	278 Move X0, [X0+2648]
	279 Call 0x1C17CF4
	280 Move X0, 0xB65000
	281 Move X0, [X0+2656]
	282 Call 0x1C17CF4
	283 Move X0, 0xB65000
	284 Move X0, [X0+2664]
	285 Call 0x1C17CF4
	286 Move X0, 0xB65000
	287 Move X0, [X0+2672]
	288 Call 0x1C17CF4
	289 Move X0, 0xB65000
	290 Move X0, [X0+2680]
	291 Call 0x1C17CF4
	292 Move X0, 0xB65000
	293 Move X0, [X0+2688]
	294 Call 0x1C17CF4
	295 Move X0, 0xB65000
	296 Move X0, [X0+2696]
	297 Call 0x1C17CF4
	298 Move X0, 0xB65000
	299 Move X0, [X0+2704]
	300 Call 0x1C17CF4
	301 Move X0, 0xB65000
	302 Move X0, [X0+2712]
	303 Call 0x1C17CF4
	304 Move X0, 0xB65000
	305 Move X0, [X0+2720]
	306 Call 0x1C17CF4
	307 Move X0, 0xB65000
	308 Move X0, [X0+2728]
	309 Call 0x1C17CF4
	310 Move X0, 0xB65000
	311 Move X0, [X0+2736]
	312 Call 0x1C17CF4
	313 Move X0, 0xB65000
	314 Move X0, [X0+2744]
	315 Call 0x1C17CF4
	316 Move X0, 0xB65000
	317 Move X0, [X0+2752]
	318 Call 0x1C17CF4
	319 Move X0, 0xB65000
	320 Move X0, [X0+2760]
	321 Call 0x1C17CF4
	322 Move X0, 0xB65000
	323 Move X0, [X0+2768]
	324 Call 0x1C17CF4
	325 Move X0, 0xB65000
	326 Move X0, [X0+2776]
	327 Call 0x1C17CF4
	328 Move X0, 0xB65000
	329 Move X0, [X0+2784]
	330 Call 0x1C17CF4
	331 Move X0, 0xB65000
	332 Move X0, [X0+2792]
	333 Call 0x1C17CF4
	334 Move X0, 0xB65000
	335 Move X0, [X0+2800]
	336 Call 0x1C17CF4
	337 Move X0, 0xB65000
	338 Move X0, [X0+2808]
	339 Call 0x1C17CF4
	340 Move X0, 0xB65000
	341 Move X0, [X0+2816]
	342 Call 0x1C17CF4
	343 Move X0, 0xB65000
	344 Move X0, [X0+2824]
	345 Call 0x1C17CF4
	346 Move X0, 0xB65000
	347 Move X0, [X0+2832]
	348 Call 0x1C17CF4
	349 Move X0, 0xB49000
	350 Move X0, [X0+672]
	351 Call 0x1C17CF4
	352 Move X0, 0xB65000
	353 Move X0, [X0+2840]
	354 Call 0x1C17CF4
	355 Move X0, 0xB65000
	356 Move X0, [X0+2848]
	357 Call 0x1C17CF4
	358 Move X0, 0xB65000
	359 Move X0, [X0+2856]
	360 Call 0x1C17CF4
	361 Move X0, 0xB65000
	362 Move X0, [X0+2864]
	363 Call 0x1C17CF4
	364 Move X0, 0xB65000
	365 Move X0, [X0+2872]
	366 Call 0x1C17CF4
	367 Move X0, 0xB65000
	368 Move X0, [X0+2880]
	369 Call 0x1C17CF4
	370 Move X0, 0xB65000
	371 Move X0, [X0+2888]
	372 Call 0x1C17CF4
	373 Move X0, 0xB65000
	374 Move X0, [X0+2896]
	375 Call 0x1C17CF4
	376 Move X0, 0xB65000
	377 Move X0, [X0+2904]
	378 Call 0x1C17CF4
	379 Move X0, 0xB65000
	380 Move X0, [X0+2912]
	381 Call 0x1C17CF4
	382 Move X0, 0xB65000
	383 Move X0, [X0+2920]
	384 Call 0x1C17CF4
	385 Move X0, 0xB65000
	386 Move X0, [X0+2928]
	387 Call 0x1C17CF4
	388 Move X0, 0xB65000
	389 Move X0, [X0+2936]
	390 Call 0x1C17CF4
	391 Move X0, 0xB65000
	392 Move X0, [X0+2944]
	393 Call 0x1C17CF4
	394 Move X0, 0xB65000
	395 Move X0, [X0+2952]
	396 Call 0x1C17CF4
	397 Move X0, 0xB65000
	398 Move X0, [X0+2960]
	399 Call 0x1C17CF4
	400 Move X0, 0xB65000
	401 Move X0, [X0+2968]
	402 Call 0x1C17CF4
	403 Move X0, 0xB65000
	404 Move X0, [X0+2976]
	405 Call 0x1C17CF4
	406 Move X0, 0xB65000
	407 Move X0, [X0+2984]
	408 Call 0x1C17CF4
	409 Move X0, 0xB65000
	410 Move X0, [X0+2992]
	411 Call 0x1C17CF4
	412 Move X0, 0xB65000
	413 Move X0, [X0+3000]
	414 Call 0x1C17CF4
	415 Move X0, 0xB65000
	416 Move X0, [X0+3008]
	417 Call 0x1C17CF4
	418 Move X0, 0xB65000
	419 Move X0, [X0+3016]
	420 Call 0x1C17CF4
	421 Move X0, 0xB65000
	422 Move X0, [X0+3024]
	423 Call 0x1C17CF4
	424 Move X0, 0xB65000
	425 Move X0, [X0+3032]
	426 Call 0x1C17CF4
	427 Move X0, 0xB65000
	428 Move X0, [X0+3040]
	429 Call 0x1C17CF4
	430 Move X0, 0xB65000
	431 Move X0, [X0+3048]
	432 Call 0x1C17CF4
	433 Move X0, 0xB65000
	434 Move X0, [X0+3056]
	435 Call 0x1C17CF4
	436 Move X0, 0xB65000
	437 Move X0, [X0+3064]
	438 Call 0x1C17CF4
	439 Move X0, 0xB65000
	440 Move X0, [X0+3072]
	441 Call 0x1C17CF4
	442 Move X0, 0xB65000
	443 Move X0, [X0+3080]
	444 Call 0x1C17CF4
	445 Move X0, 0xB65000
	446 Move X0, [X0+3088]
	447 Call 0x1C17CF4
	448 Move X0, 0xB65000
	449 Move X0, [X0+3096]
	450 Call 0x1C17CF4
	451 Move X0, 0xB65000
	452 Move X0, [X0+3104]
	453 Call 0x1C17CF4
	454 Move X0, 0xB65000
	455 Move X0, [X0+3112]
	456 Call 0x1C17CF4
	457 Move X0, 0xB65000
	458 Move X0, [X0+3120]
	459 Call 0x1C17CF4
	460 Move X0, 0xB65000
	461 Move X0, [X0+3128]
	462 Call 0x1C17CF4
	463 Move X0, 0xB65000
	464 Move X0, [X0+3136]
	465 Call 0x1C17CF4
	466 Move X0, 0xB65000
	467 Move X0, [X0+3144]
	468 Call 0x1C17CF4
	469 Move X0, 0xB65000
	470 Move X0, [X0+3152]
	471 Call 0x1C17CF4
	472 Move X0, 0xB65000
	473 Move X0, [X0+3160]
	474 Call 0x1C17CF4
	475 Move X0, 0xB65000
	476 Move X0, [X0+3168]
	477 Call 0x1C17CF4
	478 Move X0, 0xB65000
	479 Move X0, [X0+3176]
	480 Call 0x1C17CF4
	481 Move X0, 0xB65000
	482 Move X0, [X0+3184]
	483 Call 0x1C17CF4
	484 Move X0, 0xB65000
	485 Move X0, [X0+3192]
	486 Call 0x1C17CF4
	487 Move X0, 0xB65000
	488 Move X0, [X0+3200]
	489 Call 0x1C17CF4
	490 Move X0, 0xB65000
	491 Move X0, [X0+3208]
	492 Call 0x1C17CF4
	493 Move X0, 0xB65000
	494 Move X0, [X0+3216]
	495 Call 0x1C17CF4
	496 Move X0, 0xB65000
	497 Move X0, [X0+3224]
	498 Call 0x1C17CF4
	499 Move X0, 0xB65000
	500 Move X0, [X0+3232]
	501 Call 0x1C17CF4
	502 Move X0, 0xB65000
	503 Move X0, [X0+2016]
	504 Call 0x1C17CF4
	505 Move W8, 1
	506 Move [X25+544], W8
	507 Move X0, [X24]
	508 Move X25, 0xB65000
	509 Move X24, 0xB65000
	510 Move X25, [X25+2032]
	511 Move X24, [X24+2840]
	512 Call 0x1C17F10
	513 Move X1, [X19]
	514 Move X19, X0
	515 Call Dictionary`2<Object, Object>..ctor, X0
	516 Move X8, [X23]
	517 Move X8, [X8+184]
	518 Move [X8], X19
	519 Move X0, [X21]
	520 Call 0x1C17F10
	521 Move X1, [X20]
	522 Move X19, X0
	523 Call Operators`1<Object>..ctor, X0
	524 Move X0, [X22]
	525 Move W8, [X0+224]
	526 Compare W8, 0
	527 JumpIfNotEqual {530}
	528 Call 0x1C17DFC
	529 Move X0, [X22]
	530 Move X8, [X0+184]
	531 Move X0, [X25]
	532 Move X21, [X8]
	533 Call 0x1C17F10
	534 Move X2, [X24]
	535 Move X1, X21
	536 Move X3, X31
	537 Move X20, X0
	538 Call Func`3<Object, Object, Boolean>..ctor, X0, X1, X2
	539 Compare X19, 0
	540 JumpIfEqual {1607}
	541 Move X8, 0xB65000
	542 Move X8, [X8+2784]
	543 Move X21, 0xB65000
	544 Move X21, [X21+2560]
	545 Move [X19+32], X20
	546 Move X1, [X8]
	547 Move X20, 0xB65000
	548 Move X23, 0xB65000
	549 Move X24, 0xB65000
	550 Move X20, [X20+2432]
	551 Move X23, [X23+2264]
	552 Move X24, [X24+2928]
	553 Move X0, X19
	554 Call PrimitiveOperators.Register, X0
	555 Move X0, [X21]
	556 Call 0x1C17F10
	557 Move X1, [X20]
	558 Move X19, X0
	559 Call Operators`1<Char>..ctor, X0
	560 Move X8, [X22]
	561 Move X0, [X23]
	562 Move X8, [X8+184]
	563 Move X21, [X8]
	564 Call 0x1C17F10
	565 Move X2, [X24]
	566 Move X1, X21
	567 Move X3, X31
	568 Move X20, X0
	569 Call Func`3<Char, Char, Boolean>..ctor, X0, X1, X2
	570 Compare X19, 0
	571 JumpIfEqual {1607}
	572 Move X8, 0xB65000
	573 Move X8, [X8+2688]
	574 Move X21, 0xB65000
	575 Move X21, [X21+2640]
	576 Move [X19+32], X20
	577 Move X1, [X8]
	578 Move X20, 0xB65000
	579 Move X23, 0xB65000
	580 Move X24, 0xB65000
	581 Move X20, [X20+2344]
	582 Move X23, [X23+2160]
	583 Move X24, [X24+3016]
	584 Move X0, X19
	585 Call PrimitiveOperators.Register, X0
	586 Move X0, [X21]
	587 Call 0x1C17F10
	588 Move X1, [X20]
	589 Move X19, X0
	590 Call 0x249C4B4, X0
	591 Move X8, [X22]
	592 Move X0, [X23]
	593 Move X8, [X8+184]
	594 Move X21, [X8]
	595 Call 0x1C17F10
	596 Move X2, [X24]
	597 Move X1, X21
	598 Move X3, X31
	599 Move X20, X0
	600 Call Func`3<Boolean, Boolean, Boolean>..ctor, X0, X1, X2
	601 Compare X19, 0
	602 JumpIfEqual {1607}
	603 Move X8, 0xB65000
	604 Move X8, [X8+2664]
	605 Move X21, 0xB65000
	606 Move X21, [X21+2624]
	607 Move [X19+32], X20
	608 Move X1, [X8]
	609 Move X20, 0xB65000
	610 Move X23, 0xB65000
	611 Move X24, 0xB65000
	612 Move X20, [X20+2472]
	613 Move X23, [X23+2200]
	614 Move X24, [X24+3104]
	615 Move X0, X19
	616 Call 0x22341B4, X0
	617 Move X0, [X21]
	618 Call 0x1C17F10
	619 Move X1, [X20]
	620 Move X19, X0
	621 Call Operators`1<Byte>..ctor, X0
	622 Move X8, [X22]
	623 Move X0, [X23]
	624 Move X8, [X8+184]
	625 Move X21, [X8]
	626 Call 0x1C17F10
	627 Move X2, [X24]
	628 Move X1, X21
	629 Move X3, X31
	630 Move X20, X0
	631 Call Func`3<Byte, Byte, Byte>..ctor, X0, X1, X2
	632 Compare X19, 0
	633 JumpIfEqual {1607}
	634 Move [X19+16], X20
	635 Move X8, [X22]
	636 Move X21, 0xB65000
	637 Move X24, 0xB65000
	638 Move X21, [X21+3192]
	639 Move X24, [X24+2272]
	640 Move X8, [X8+184]
	641 Move X25, 0xB65000
	642 Move X26, 0xB65000
	643 Move X27, 0xB65000
	644 Move X25, [X25+3200]
	645 Move X26, [X26+2680]
	646 Move X27, [X27+2656]
	647 Move X0, [X23]
	648 Move X28, 0xB65000
	649 Move X23, 0xB65000
	650 Move X29, 0xB65000
	651 Move X20, [X8]
	652 Move X28, [X28+2392]
	653 Move X23, [X23+2120]
	654 Move X29, [X29+3208]
	655 Call 0x1C17F10
	656 Move X2, [X21]
	657 Move X1, X20
	658 Move X3, X31
	659 Move X21, X0
	660 Call Func`3<Byte, Byte, Byte>..ctor, X0, X1, X2
	661 Move [X19+24], X21
	662 Move X8, [X22]
	663 Move X0, [X24]
	664 Move X8, [X8+184]
	665 Move X20, [X8]
	666 Call 0x1C17F10
	667 Move X2, [X25]
	668 Move X1, X20
	669 Move X3, X31
	670 Move X21, X0
	671 Call Func`3<Byte, Byte, Boolean>..ctor, X0, X1, X2
	672 Move [X19+32], X21
	673 Move X1, [X26]
	674 Move X0, X19
	675 Call PrimitiveOperators.Register, X0
	676 Move X0, [X27]
	677 Call 0x1C17F10
	678 Move X1, [X28]
	679 Move X19, X0
	680 Call Operators`1<SByte>..ctor, X0
	681 Move X8, [X22]
	682 Move X0, [X23]
	683 Move X8, [X8+184]
	684 Move X21, [X8]
	685 Call 0x1C17F10
	686 Move X2, [X29]
	687 Move X1, X21
	688 Move X3, X31
	689 Move X20, X0
	690 Call Func`3<SByte, SByte, SByte>..ctor, X0, X1, X2
	691 Compare X19, 0
	692 JumpIfEqual {1607}
	693 Move [X19+16], X20
	694 Move X8, [X22]
	695 Move X21, 0xB65000
	696 Move X24, 0xB65000
	697 Move X21, [X21+3216]
	698 Move X24, [X24+2024]
	699 Move X8, [X8+184]
	700 Move X25, 0xB65000
	701 Move X26, 0xB65000
	702 Move X27, 0xB65000
	703 Move X25, [X25+3224]
	704 Move X26, [X26+2768]
	705 Move X27, [X27+2576]
	706 Move X0, [X23]
	707 Move X28, 0xB65000
	708 Move X23, 0xB65000
	709 Move X29, 0xB65000
	710 Move X20, [X8]
	711 Move X28, [X28+2336]
	712 Move X23, [X23+2112]
	713 Move X29, [X29+3232]
	714 Call 0x1C17F10
	715 Move X2, [X21]
	716 Move X1, X20
	717 Move X3, X31
	718 Move X21, X0
	719 Call Func`3<SByte, SByte, SByte>..ctor, X0, X1, X2
	720 Move [X19+24], X21
	721 Move X8, [X22]
	722 Move X0, [X24]
	723 Move X8, [X8+184]
	724 Move X20, [X8]
	725 Call 0x1C17F10
	726 Move X2, [X25]
	727 Move X1, X20
	728 Move X3, X31
	729 Move X21, X0
	730 Call Func`3<SByte, SByte, Boolean>..ctor, X0, X1, X2
	731 Move [X19+32], X21
	732 Move X1, [X26]
	733 Move X0, X19
	734 Call PrimitiveOperators.Register, X0
	735 Move X0, [X27]
	736 Call 0x1C17F10
	737 Move X1, [X28]
	738 Move X19, X0
	739 Call Operators`1<Int16>..ctor, X0
	740 Move X8, [X22]
	741 Move X0, [X23]
	742 Move X8, [X8+184]
	743 Move X21, [X8]
	744 Call 0x1C17F10
	745 Move X2, [X29]
	746 Move X1, X21
	747 Move X3, X31
	748 Move X20, X0
	749 Call Func`3<Int16, Int16, Int16>..ctor, X0, X1, X2
	750 Compare X19, 0
	751 JumpIfEqual {1607}
	752 Move [X19+16], X20
	753 Move X8, [X22]
	754 Move X21, 0xB65000
	755 Move X24, 0xB65000
	756 Move X21, [X21+2848]
	757 Move X24, [X24+2320]
	758 Move X8, [X8+184]
	759 Move X25, 0xB65000
	760 Move X26, 0xB65000
	761 Move X27, 0xB65000
	762 Move X25, [X25+2856]
	763 Move X26, [X26+2728]
	764 Move X27, [X27+2616]
	765 Move X0, [X23]
	766 Move X28, 0xB65000
	767 Move X23, 0xB65000
	768 Move X29, 0xB65000
	769 Move X20, [X8]
	770 Move X28, [X28+2440]
	771 Move X23, [X23+2072]
	772 Move X29, [X29+2864]
	773 Call 0x1C17F10
	774 Move X2, [X21]
	775 Move X1, X20
	776 Move X3, X31
	777 Move X21, X0
	778 Call Func`3<Int16, Int16, Int16>..ctor, X0, X1, X2
	779 Move [X19+24], X21
	780 Move X8, [X22]
	781 Move X0, [X24]
	782 Move X8, [X8+184]
	783 Move X20, [X8]
	784 Call 0x1C17F10
	785 Move X2, [X25]
	786 Move X1, X20
	787 Move X3, X31
	788 Move X21, X0
	789 Call Func`3<Int16, Int16, Boolean>..ctor, X0, X1, X2
	790 Move [X19+32], X21
	791 Move X1, [X26]
	792 Move X0, X19
	793 Call PrimitiveOperators.Register, X0
	794 Move X0, [X27]
	795 Call 0x1C17F10
	796 Move X1, [X28]
	797 Move X19, X0
	798 Call Operators`1<Int32>..ctor, X0
	799 Move X8, [X22]
	800 Move X0, [X23]
	801 Move X8, [X8+184]
	802 Move X21, [X8]
	803 Call 0x1C17F10
	804 Move X2, [X29]
	805 Move X1, X21
	806 Move X3, X31
	807 Move X20, X0
	808 Call Func`3<Int32, Int32, Int32>..ctor, X0, X1, X2
	809 Compare X19, 0
	810 JumpIfEqual {1607}
	811 Move [X19+16], X20
	812 Move X8, [X22]
	813 Move X21, 0xB65000
	814 Move X24, 0xB65000
	815 Move X21, [X21+2872]
	816 Move X24, [X24+2296]
	817 Move X8, [X8+184]
	818 Move X25, 0xB65000
	819 Move X26, 0xB65000
	820 Move X27, 0xB65000
	821 Move X25, [X25+2880]
	822 Move X26, [X26+2736]
	823 Move X27, [X27+2648]
	824 Move X0, [X23]
	825 Move X28, 0xB65000
	826 Move X23, 0xB65000
	827 Move X29, 0xB65000
	828 Move X20, [X8]
	829 Move X28, [X28+2408]
	830 Move X23, [X23+2216]
	831 Move X29, [X29+2888]
	832 Call 0x1C17F10
	833 Move X2, [X21]
	834 Move X1, X20
	835 Move X3, X31
	836 Move X21, X0
	837 Call Func`3<Int32, Int32, Int32>..ctor, X0, X1, X2
	838 Move [X19+24], X21
	839 Move X8, [X22]
	840 Move X0, [X24]
	841 Move X8, [X8+184]
	842 Move X20, [X8]
	843 Call 0x1C17F10
	844 Move X2, [X25]
	845 Move X1, X20
	846 Move X3, X31
	847 Move X21, X0
	848 Call Func`3<Int32, Int32, Boolean>..ctor, X0, X1, X2
	849 Move [X19+32], X21
	850 Move X1, [X26]
	851 Move X0, X19
	852 Call PrimitiveOperators.Register, X0
	853 Move X0, [X27]
	854 Call 0x1C17F10
	855 Move X1, [X28]
	856 Move X19, X0
	857 Call Operators`1<Int64>..ctor, X0
	858 Move X8, [X22]
	859 Move X0, [X23]
	860 Move X8, [X8+184]
	861 Move X21, [X8]
	862 Call 0x1C17F10
	863 Move X2, [X29]
	864 Move X1, X21
	865 Move X3, X31
	866 Move X20, X0
	867 Call Func`3<Int64, Int64, Int64>..ctor, X0, X1, X2
	868 Compare X19, 0
	869 JumpIfEqual {1607}
	870 Move [X19+16], X20
	871 Move X8, [X22]
	872 Move X21, 0xB65000
	873 Move X24, 0xB65000
	874 Move X21, [X21+2896]
	875 Move X24, [X24+2232]
	876 Move X8, [X8+184]
	877 Move X25, 0xB65000
	878 Move X26, 0xB65000
	879 Move X27, 0xB65000
	880 Move X25, [X25+2904]
	881 Move X26, [X26+2744]
	882 Move X27, [X27+2520]
	883 Move X0, [X23]
	884 Move X28, 0xB65000
	885 Move X23, 0xB65000
	886 Move X29, 0xB65000
	887 Move X20, [X8]
	888 Move X28, [X28+2328]
	889 Move X23, [X23+2040]
	890 Move X29, [X29+2912]
	891 Call 0x1C17F10
	892 Move X2, [X21]
	893 Move X1, X20
	894 Move X3, X31
	895 Move X21, X0
	896 Call Func`3<Int64, Int64, Int64>..ctor, X0, X1, X2
	897 Move [X19+24], X21
	898 Move X8, [X22]
	899 Move X0, [X24]
	900 Move X8, [X8+184]
	901 Move X20, [X8]
	902 Call 0x1C17F10
	903 Move X2, [X25]
	904 Move X1, X20
	905 Move X3, X31
	906 Move X21, X0
	907 Call Func`3<Int64, Int64, Boolean>..ctor, X0, X1, X2
	908 Move [X19+32], X21
	909 Move X1, [X26]
	910 Move X0, X19
	911 Call PrimitiveOperators.Register, X0
	912 Move X0, [X27]
	913 Call 0x1C17F10
	914 Move X1, [X28]
	915 Move X19, X0
	916 Call Operators`1<Single>..ctor, X0
	917 Move X8, [X22]
	918 Move X0, [X23]
	919 Move X8, [X8+184]
	920 Move X21, [X8]
	921 Call 0x1C17F10
	922 Move X2, [X29]
	923 Move X1, X21
	924 Move X3, X31
	925 Move X20, X0
	926 Call Func`3<Single, Single, Single>..ctor, X0, X1, X2
	927 Compare X19, 0
	928 JumpIfEqual {1607}
	929 Move [X19+16], X20
	930 Move X8, [X22]
	931 Move X21, 0xB65000
	932 Move X24, 0xB65000
	933 Move X21, [X21+2920]
	934 Move X24, [X24+2208]
	935 Move X8, [X8+184]
	936 Move X25, 0xB65000
	937 Move X26, 0xB65000
	938 Move X27, 0xB65000
	939 Move X25, [X25+2936]
	940 Move X26, [X26+2776]
	941 Move X27, [X27+2632]
	942 Move X0, [X23]
	943 Move X28, 0xB65000
	944 Move X23, 0xB65000
	945 Move X29, 0xB65000
	946 Move X20, [X8]
	947 Move X28, [X28+2424]
	948 Move X23, [X23+2096]
	949 Move X29, [X29+2944]
	950 Call 0x1C17F10
	951 Move X2, [X21]
	952 Move X1, X20
	953 Move X3, X31
	954 Move X21, X0
	955 Call Func`3<Single, Single, Single>..ctor, X0, X1, X2
	956 Move [X19+24], X21
	957 Move X8, [X22]
	958 Move X0, [X24]
	959 Move X8, [X8+184]
	960 Move X20, [X8]
	961 Call 0x1C17F10
	962 Move X2, [X25]
	963 Move X1, X20
	964 Move X3, X31
	965 Move X21, X0
	966 Call Func`3<Single, Single, Boolean>..ctor, X0, X1, X2
	967 Move [X19+32], X21
	968 Move X1, [X26]
	969 Move X0, X19
	970 Call PrimitiveOperators.Register, X0
	971 Move X0, [X27]
	972 Call 0x1C17F10
	973 Move X1, [X28]
	974 Move X19, X0
	975 Call Operators`1<Double>..ctor, X0
	976 Move X8, [X22]
	977 Move X0, [X23]
	978 Move X8, [X8+184]
	979 Move X21, [X8]
	980 Call 0x1C17F10
	981 Move X2, [X29]
	982 Move X1, X21
	983 Move X3, X31
	984 Move X20, X0
	985 Call Func`3<Double, Double, Double>..ctor, X0, X1, X2
	986 Compare X19, 0
	987 JumpIfEqual {1607}
	988 Move [X19+16], X20
	989 Move X8, [X22]
	990 Move X21, 0xB65000
	991 Move X24, 0xB65000
	992 Move X21, [X21+2952]
	993 Move X24, [X24+2280]
	994 Move X8, [X8+184]
	995 Move X25, 0xB65000
	996 Move X26, 0xB65000
	997 Move X27, 0xB65000
	998 Move X25, [X25+2960]
	999 Move X26, [X26+2720]
	1000 Move X27, [X27+2600]
	1001 Move X0, [X23]
	1002 Move X28, 0xB65000
	1003 Move X23, 0xB65000
	1004 Move X29, 0xB65000
	1005 Move X20, [X8]
	1006 Move X28, [X28+2480]
	1007 Move X23, [X23+2080]
	1008 Move X29, [X29+2968]
	1009 Call 0x1C17F10
	1010 Move X2, [X21]
	1011 Move X1, X20
	1012 Move X3, X31
	1013 Move X21, X0
	1014 Call Func`3<Double, Double, Double>..ctor, X0, X1, X2
	1015 Move [X19+24], X21
	1016 Move X8, [X22]
	1017 Move X0, [X24]
	1018 Move X8, [X8+184]
	1019 Move X20, [X8]
	1020 Call 0x1C17F10
	1021 Move X2, [X25]
	1022 Move X1, X20
	1023 Move X3, X31
	1024 Move X21, X0
	1025 Call Func`3<Double, Double, Boolean>..ctor, X0, X1, X2
	1026 Move [X19+32], X21
	1027 Move X1, [X26]
	1028 Move X0, X19
	1029 Call PrimitiveOperators.Register, X0
	1030 Move X0, [X27]
	1031 Call 0x1C17F10
	1032 Move X1, [X28]
	1033 Move X19, X0
	1034 Call Operators`1<Decimal>..ctor, X0
	1035 Move X8, [X22]
	1036 Move X0, [X23]
	1037 Move X8, [X8+184]
	1038 Move X21, [X8]
	1039 Call 0x1C17F10
	1040 Move X2, [X29]
	1041 Move X1, X21
	1042 Move X3, X31
	1043 Move X20, X0
	1044 Call Func`3<Decimal, Decimal, Decimal>..ctor, X0, X1, X2
	1045 Compare X19, 0
	1046 JumpIfEqual {1607}
	1047 Move [X19+16], X20
	1048 Move X8, [X22]
	1049 Move X21, 0xB65000
	1050 Move X24, 0xB65000
	1051 Move X21, [X21+2976]
	1052 Move X24, [X24+2240]
	1053 Move X8, [X8+184]
	1054 Move X25, 0xB65000
	1055 Move X26, 0xB65000
	1056 Move X27, 0xB65000
	1057 Move X25, [X25+2984]
	1058 Move X26, [X26+2712]
	1059 Move X27, [X27+2496]
	1060 Move X0, [X23]
	1061 Move X28, 0xB65000
	1062 Move X23, 0xB65000
	1063 Move X29, 0xB65000
	1064 Move X20, [X8]
	1065 Move X28, [X28+2368]
	1066 Move X23, [X23+2192]
	1067 Move X29, [X29+2992]
	1068 Call 0x1C17F10
	1069 Move X2, [X21]
	1070 Move X1, X20
	1071 Move X3, X31
	1072 Move X21, X0
	1073 Call Func`3<Decimal, Decimal, Decimal>..ctor, X0, X1, X2
	1074 Move [X19+24], X21
	1075 Move X8, [X22]
	1076 Move X0, [X24]
	1077 Move X8, [X8+184]
	1078 Move X20, [X8]
	1079 Call 0x1C17F10
	1080 Move X2, [X25]
	1081 Move X1, X20
	1082 Move X3, X31
	1083 Move X21, X0
	1084 Call Func`3<Decimal, Decimal, Boolean>..ctor, X0, X1, X2
	1085 Move [X19+32], X21
	1086 Move X1, [X26]
	1087 Move X0, X19
	1088 Call PrimitiveOperators.Register, X0
	1089 Move X0, [X27]
	1090 Call 0x1C17F10
	1091 Move X1, [X28]
	1092 Move X19, X0
	1093 Call Operators`1<UInt16>..ctor, X0
	1094 Move X8, [X22]
	1095 Move X0, [X23]
	1096 Move X8, [X8+184]
	1097 Move X21, [X8]
	1098 Call 0x1C17F10
	1099 Move X2, [X29]
	1100 Move X1, X21
	1101 Move X3, X31
	1102 Move X20, X0
	1103 Call Func`3<UInt16, UInt16, UInt16>..ctor, X0, X1, X2
	1104 Compare X19, 0
	1105 JumpIfEqual {1607}
	1106 Move [X19+16], X20
	1107 Move X8, [X22]
	1108 Move X21, 0xB64000
	1109 Move X24, 0xB64000
	1110 Move X21, [X21+3000]
	1111 Move X24, [X24+2168]
	1112 Move X8, [X8+184]
	1113 Move X25, 0xB64000
	1114 Move X26, 0xB64000
	1115 Move X27, 0xB64000
	1116 Move X25, [X25+3008]
	1117 Move X26, [X26+2792]
	1118 Move X27, [X27+2536]
	1119 Move X0, [X23]
	1120 Move X28, 0xB64000
	1121 Move X23, 0xB64000
	1122 Move X29, 0xB64000
	1123 Move X20, [X8]
	1124 Move X28, [X28+2400]
	1125 Move X23, [X23+2128]
	1126 Move X29, [X29+3024]
	1127 Call 0x1C17F10
	1128 Move X2, [X21]
	1129 Move X1, X20
	1130 Move X3, X31
	1131 Move X21, X0
	1132 Call Func`3<UInt16, UInt16, UInt16>..ctor, X0, X1, X2
	1133 Move [X19+24], X21
	1134 Move X8, [X22]
	1135 Move X0, [X24]
	1136 Move X8, [X8+184]
	1137 Move X20, [X8]
	1138 Call 0x1C17F10
	1139 Move X2, [X25]
	1140 Move X1, X20
	1141 Move X3, X31
	1142 Move X21, X0
	1143 Call Func`3<UInt16, UInt16, Boolean>..ctor, X0, X1, X2
	1144 Move [X19+32], X21
	1145 Move X1, [X26]
	1146 Move X0, X19
	1147 Call PrimitiveOperators.Register, X0
	1148 Move X0, [X27]
	1149 Call 0x1C17F10
	1150 Move X1, [X28]
	1151 Move X19, X0
	1152 Call Operators`1<UInt32>..ctor, X0
	1153 Move X8, [X22]
	1154 Move X0, [X23]
	1155 Move X8, [X8+184]
	1156 Move X21, [X8]
	1157 Call 0x1C17F10
	1158 Move X2, [X29]
	1159 Move X1, X21
	1160 Move X3, X31
	1161 Move X20, X0
	1162 Call Func`3<UInt32, UInt32, UInt32>..ctor, X0, X1, X2
	1163 Compare X19, 0
	1164 JumpIfEqual {1607}
	1165 Move [X19+16], X20
	1166 Move X8, [X22]
	1167 Move X21, 0xB64000
	1168 Move X24, 0xB64000
	1169 Move X21, [X21+3032]
	1170 Move X24, [X24+2152]
	1171 Move X8, [X8+184]
	1172 Move X25, 0xB64000
	1173 Move X26, 0xB64000
	1174 Move X27, 0xB64000
	1175 Move X25, [X25+3040]
	1176 Move X26, [X26+2800]
	1177 Move X27, [X27+2544]
	1178 Move X0, [X23]
	1179 Move X28, 0xB64000
	1180 Move X23, 0xB64000
	1181 Move X29, 0xB64000
	1182 Move X20, [X8]
	1183 Move X28, [X28+2352]
	1184 Move X23, [X23+2176]
	1185 Move X29, [X29+3048]
	1186 Call 0x1C17F10
	1187 Move X2, [X21]
	1188 Move X1, X20
	1189 Move X3, X31
	1190 Move X21, X0
	1191 Call Func`3<UInt32, UInt32, UInt32>..ctor, X0, X1, X2
	1192 Move [X19+24], X21
	1193 Move X8, [X22]
	1194 Move X0, [X24]
	1195 Move X8, [X8+184]
	1196 Move X20, [X8]
	1197 Call 0x1C17F10
	1198 Move X2, [X25]
	1199 Move X1, X20
	1200 Move X3, X31
	1201 Move X21, X0
	1202 Call Func`3<UInt32, UInt32, Boolean>..ctor, X0, X1, X2
	1203 Move [X19+32], X21
	1204 Move X1, [X26]
	1205 Move X0, X19
	1206 Call PrimitiveOperators.Register, X0
	1207 Move X0, [X27]
	1208 Call 0x1C17F10
	1209 Move X1, [X28]
	1210 Move X19, X0
	1211 Call Operators`1<UInt64>..ctor, X0
	1212 Move X8, [X22]
	1213 Move X0, [X23]
	1214 Move X8, [X8+184]
	1215 Move X21, [X8]
	1216 Call 0x1C17F10
	1217 Move X2, [X29]
	1218 Move X1, X21
	1219 Move X3, X31
	1220 Move X20, X0
	1221 Call Func`3<UInt64, UInt64, UInt64>..ctor, X0, X1, X2
	1222 Compare X19, 0
	1223 JumpIfEqual {1607}
	1224 Move [X19+16], X20
	1225 Move X8, [X22]
	1226 Move X21, 0xB64000
	1227 Move X24, 0xB64000
	1228 Move X21, [X21+3056]
	1229 Move X24, [X24+2064]
	1230 Move X8, [X8+184]
	1231 Move X25, 0xB64000
	1232 Move X26, 0xB64000
	1233 Move X27, 0xB64000
	1234 Move X25, [X25+3064]
	1235 Move X26, [X26+2808]
	1236 Move X27, [X27+2592]
	1237 Move X0, [X23]
	1238 Move X28, 0xB64000
	1239 Move X23, 0xB64000
	1240 Move X29, 0xB64000
	1241 Move X20, [X8]
	1242 Move X28, [X28+2456]
	1243 Move X23, [X23+2256]
	1244 Move X29, [X29+3072]
	1245 Call 0x1C17F10
	1246 Move X2, [X21]
	1247 Move X1, X20
	1248 Move X3, X31
	1249 Move X21, X0
	1250 Call Func`3<UInt64, UInt64, UInt64>..ctor, X0, X1, X2
	1251 Move [X19+24], X21
	1252 Move X8, [X22]
	1253 Move X0, [X24]
	1254 Move X8, [X8+184]
	1255 Move X20, [X8]
	1256 Call 0x1C17F10
	1257 Move X2, [X25]
	1258 Move X1, X20
	1259 Move X3, X31
	1260 Move X21, X0
	1261 Call Func`3<UInt64, UInt64, Boolean>..ctor, X0, X1, X2
	1262 Move [X19+32], X21
	1263 Move X1, [X26]
	1264 Move X0, X19
	1265 Call PrimitiveOperators.Register, X0
	1266 Move X0, [X27]
	1267 Call 0x1C17F10
	1268 Move X1, [X28]
	1269 Move X19, X0
	1270 Call Operators`1<Vector2>..ctor, X0
	1271 Move X8, [X22]
	1272 Move X0, [X23]
	1273 Move X8, [X8+184]
	1274 Move X21, [X8]
	1275 Call 0x1C17F10
	1276 Move X2, [X29]
	1277 Move X1, X21
	1278 Move X3, X31
	1279 Move X20, X0
	1280 Call Func`3<Vector2, Vector2, Vector2>..ctor, X0, X1, X2
	1281 Compare X19, 0
	1282 JumpIfEqual {1607}
	1283 Move [X19+16], X20
	1284 Move X8, [X22]
	1285 Move X21, 0xB64000
	1286 Move X24, 0xB64000
	1287 Move X21, [X21+3080]
	1288 Move X24, [X24+2136]
	1289 Move X8, [X8+184]
	1290 Move X25, 0xB64000
	1291 Move X26, 0xB64000
	1292 Move X27, 0xB64000
	1293 Move X25, [X25+3088]
	1294 Move X26, [X26+2816]
	1295 Move X27, [X27+2504]
	1296 Move X0, [X23]
	1297 Move X23, 0xB64000
	1298 Move X28, 0xB64000
	1299 Move X29, 0xB64000
	1300 Move X20, [X8]
	1301 Move X23, [X23+2448]
	1302 Move X28, [X28+2248]
	1303 Move X29, [X29+3096]
	1304 Call 0x1C17F10
	1305 Move X2, [X21]
	1306 Move X1, X20
	1307 Move X3, X31
	1308 Move X21, X0
	1309 Call Func`3<Vector2, Vector2, Vector2>..ctor, X0, X1, X2
	1310 Move [X19+24], X21
	1311 Move X8, [X22]
	1312 Move X0, [X24]
	1313 Move X8, [X8+184]
	1314 Move X20, [X8]
	1315 Call 0x1C17F10
	1316 Move X2, [X25]
	1317 Move X1, X20
	1318 Move X3, X31
	1319 Move X21, X0
	1320 Call Func`3<Vector2, Vector2, Boolean>..ctor, X0, X1, X2
	1321 Move [X19+32], X21
	1322 Move X1, [X26]
	1323 Move X0, X19
	1324 Call PrimitiveOperators.Register, X0
	1325 Move X0, [X27]
	1326 Call 0x1C17F10
	1327 Move X1, [X23]
	1328 Move X19, X0
	1329 Call Operators`1<Vector3>..ctor, X0
	1330 Move X8, [X22]
	1331 Move X0, [X28]
	1332 Move X8, [X8+184]
	1333 Move X21, [X8]
	1334 Call 0x1C17F10
	1335 Move X2, [X29]
	1336 Move X1, X21
	1337 Move X3, X31
	1338 Move X20, X0
	1339 Call Func`3<Vector3, Vector3, Vector3>..ctor, X0, X1, X2
	1340 Compare X19, 0
	1341 JumpIfEqual {1607}
	1342 Move [X19+16], X20
	1343 Move X8, [X22]
	1344 Move X9, 0xB64000
	1345 Move X9, [X9+2184]
	1346 Move X21, 0xB64000
	1347 Move X8, [X8+184]
	1348 Move X23, 0xB64000
	1349 Move X24, 0xB64000
	1350 Move X21, [X21+3112]
	1351 Move X23, [X23+2824]
	1352 Move X24, [X24+2568]
	1353 Move X0, [X9]
	1354 Move X25, 0xB64000
	1355 Move X26, 0xB64000
	1356 Move X27, 0xB64000
	1357 Move X20, [X8]
	1358 Move X25, [X25+2416]
	1359 Move X26, [X26+2104]
	1360 Move X27, [X27+3120]
	1361 Call 0x1C17F10
	1362 Move X2, [X21]
	1363 Move X1, X20
	1364 Move X3, X31
	1365 Move X21, X0
	1366 Call Func`3<Vector3, Vector3, Boolean>..ctor, X0, X1, X2
	1367 Move [X19+32], X21
	1368 Move X1, [X23]
	1369 Move X0, X19
	1370 Call PrimitiveOperators.Register, X0
	1371 Move X0, [X24]
	1372 Call 0x1C17F10
	1373 Move X1, [X25]
	1374 Move X19, X0
	1375 Call Operators`1<Vector4>..ctor, X0
	1376 Move X8, [X22]
	1377 Move X0, [X26]
	1378 Move X8, [X8+184]
	1379 Move X21, [X8]
	1380 Call 0x1C17F10
	1381 Move X2, [X27]
	1382 Move X1, X21
	1383 Move X3, X31
	1384 Move X20, X0
	1385 Call Func`3<Vector4, Vector4, Vector4>..ctor, X0, X1, X2
	1386 Compare X19, 0
	1387 JumpIfEqual {1607}
	1388 Move [X19+16], X20
	1389 Move X8, [X22]
	1390 Move X9, 0xB64000
	1391 Move X9, [X9+2304]
	1392 Move X21, 0xB64000
	1393 Move X8, [X8+184]
	1394 Move X23, 0xB64000
	1395 Move X24, 0xB64000
	1396 Move X21, [X21+3128]
	1397 Move X23, [X23+2832]
	1398 Move X24, [X24+2528]
	1399 Move X0, [X9]
	1400 Move X25, 0xB64000
	1401 Move X26, 0xB64000
	1402 Move X27, 0xB64000
	1403 Move X20, [X8]
	1404 Move X25, [X25+2464]
	1405 Move X26, [X26+2088]
	1406 Move X27, [X27+3136]
	1407 Call 0x1C17F10
	1408 Move X2, [X21]
	1409 Move X1, X20
	1410 Move X3, X31
	1411 Move X21, X0
	1412 Call Func`3<Vector4, Vector4, Boolean>..ctor, X0, X1, X2
	1413 Move [X19+32], X21
	1414 Move X1, [X23]
	1415 Move X0, X19
	1416 Call PrimitiveOperators.Register, X0
	1417 Move X0, [X24]
	1418 Call 0x1C17F10
	1419 Move X1, [X25]
	1420 Move X19, X0
	1421 Call Operators`1<Quaternion>..ctor, X0
	1422 Move X8, [X22]
	1423 Move X0, [X26]
	1424 Move X8, [X8+184]
	1425 Move X21, [X8]
	1426 Call 0x1C17F10
	1427 Move X2, [X27]
	1428 Move X1, X21
	1429 Move X3, X31
	1430 Move X20, X0
	1431 Call Func`3<Quaternion, Quaternion, Quaternion>..ctor, X0, X1, X2
	1432 Compare X19, 0
	1433 JumpIfEqual {1607}
	1434 Move [X19+16], X20
	1435 Move X8, [X22]
	1436 Move X9, 0xB64000
	1437 Move X9, [X9+2288]
	1438 Move X21, 0xB64000
	1439 Move X8, [X8+184]
	1440 Move X23, 0xB64000
	1441 Move X24, 0xB64000
	1442 Move X21, [X21+3144]
	1443 Move X23, [X23+2752]
	1444 Move X24, [X24+2512]
	1445 Move X0, [X9]
	1446 Move X25, 0xB64000
	1447 Move X26, 0xB64000
	1448 Move X27, 0xB64000
	1449 Move X20, [X8]
	1450 Move X25, [X25+2360]
	1451 Move X26, [X26+2224]
	1452 Move X27, [X27+3152]
	1453 Call 0x1C17F10
	1454 Move X2, [X21]
	1455 Move X1, X20
	1456 Move X3, X31
	1457 Move X21, X0
	1458 Call Func`3<Quaternion, Quaternion, Boolean>..ctor, X0, X1, X2
	1459 Move [X19+32], X21
	1460 Move X1, [X23]
	1461 Move X0, X19
	1462 Call PrimitiveOperators.Register, X0
	1463 Move X0, [X24]
	1464 Call 0x1C17F10
	1465 Move X1, [X25]
	1466 Move X19, X0
	1467 Call Operators`1<Color>..ctor, X0
	1468 Move X8, [X22]
	1469 Move X0, [X26]
	1470 Move X8, [X8+184]
	1471 Move X21, [X8]
	1472 Call 0x1C17F10
	1473 Move X2, [X27]
	1474 Move X1, X21
	1475 Move X3, X31
	1476 Move X20, X0
	1477 Call Func`3<Color, Color, Color>..ctor, X0, X1, X2
	1478 Compare X19, 0
	1479 JumpIfEqual {1607}
	1480 Move [X19+16], X20
	1481 Move X8, [X22]
	1482 Move X9, 0xB64000
	1483 Move X9, [X9+2144]
	1484 Move X21, 0xB64000
	1485 Move X8, [X8+184]
	1486 Move X23, 0xB64000
	1487 Move X24, 0xB64000
	1488 Move X21, [X21+3160]
	1489 Move X23, [X23+2704]
	1490 Move X24, [X24+2584]
	1491 Move X0, [X9]
	1492 Move X25, 0xB64000
	1493 Move X26, 0xB64000
	1494 Move X27, 0xB64000
	1495 Move X20, [X8]
	1496 Move X25, [X25+2376]
	1497 Move X26, [X26+2056]
	1498 Move X27, [X27+3168]
	1499 Call 0x1C17F10
	1500 Move X2, [X21]
	1501 Move X1, X20
	1502 Move X3, X31
	1503 Move X21, X0
	1504 Call Func`3<Color, Color, Boolean>..ctor, X0, X1, X2
	1505 Move [X19+32], X21
	1506 Move X1, [X23]
	1507 Move X0, X19
	1508 Call PrimitiveOperators.Register, X0
	1509 Move X0, [X24]
	1510 Call 0x1C17F10
	1511 Move X1, [X25]
	1512 Move X19, X0
	1513 Call Operators`1<Color32>..ctor, X0
	1514 Move X8, [X22]
	1515 Move X0, [X26]
	1516 Move X8, [X8+184]
	1517 Move X21, [X8]
	1518 Call 0x1C17F10
	1519 Move X2, [X27]
	1520 Move X1, X21
	1521 Move X3, X31
	1522 Move X20, X0
	1523 Call Func`3<Color32, Color32, Boolean>..ctor, X0, X1, X2
	1524 Compare X19, 0
	1525 JumpIfEqual {1607}
	1526 Move X8, 0xB64000
	1527 Move X8, [X8+2696]
	1528 Move X21, 0xB64000
	1529 Move X21, [X21+2552]
	1530 Move [X19+32], X20
	1531 Move X1, [X8]
	1532 Move X20, 0xB64000
	1533 Move X23, 0xB64000
	1534 Move X24, 0xB64000
	1535 Move X20, [X20+2384]
	1536 Move X23, [X23+2048]
	1537 Move X24, [X24+3176]
	1538 Move X0, X19
	1539 Call PrimitiveOperators.Register, X0
	1540 Move X0, [X21]
	1541 Call 0x1C17F10
	1542 Move X1, [X20]
	1543 Move X19, X0
	1544 Call Operators`1<Rect>..ctor, X0
	1545 Move X8, [X22]
	1546 Move X0, [X23]
	1547 Move X8, [X8+184]
	1548 Move X21, [X8]
	1549 Call 0x1C17F10
	1550 Move X2, [X24]
	1551 Move X1, X21
	1552 Move X3, X31
	1553 Move X20, X0
	1554 Call Func`3<Rect, Rect, Boolean>..ctor, X0, X1, X2
	1555 Compare X19, 0
	1556 JumpIfEqual {1607}
	1557 Move X8, 0xB64000
	1558 Move X8, [X8+2760]
	1559 Move X21, 0xB64000
	1560 Move X21, [X21+2608]
	1561 Move [X19+32], X20
	1562 Move X1, [X8]
	1563 Move X20, 0xB64000
	1564 Move X23, 0xB64000
	1565 Move X24, 0xB64000
	1566 Move X20, [X20+2488]
	1567 Move X23, [X23+2312]
	1568 Move X24, [X24+3184]
	1569 Move X0, X19
	1570 Call PrimitiveOperators.Register, X0
	1571 Move X0, [X21]
	1572 Call 0x1C17F10
	1573 Move X1, [X20]
	1574 Move X19, X0
	1575 Call Operators`1<Bounds>..ctor, X0
	1576 Move X8, [X22]
	1577 Move X0, [X23]
	1578 Move X8, [X8+184]
	1579 Move X21, [X8]
	1580 Call 0x1C17F10
	1581 Move X2, [X24]
	1582 Move X1, X21
	1583 Move X3, X31
	1584 Move X20, X0
	1585 Call Func`3<Bounds, Bounds, Boolean>..ctor, X0, X1, X2
	1586 Compare X19, 0
	1587 JumpIfEqual {1607}
	1588 Move X8, 0xB64000
	1589 Move X8, [X8+2672]
	1590 Move [X19+32], X20
	1591 Move X0, X19
	1592 Move X20, [X31+80]
	1593 Move X19, [X31+88]
	1594 Move X1, [X8]
	1595 Move X22, [X31+64]
	1596 Move X21, [X31+72]
	1597 Move X24, [X31+48]
	1598 Move X23, [X31+56]
	1599 Move X26, [X31+32]
	1600 Move X25, [X31+40]
	1601 Move X28, [X31+16]
	1602 Move X27, [X31+24]
	1603 Move X29, [X31+96]
	1604 Move X30, [X31+104]
	1605 Call PrimitiveOperators.Register, X0
	1606 Return 
	1607 Call 0x1C17F20

Method: System.Void Register(SpatialSys.ObservableState.PrimitiveOperators/Operators`1<T> operators)

Disassembly:
	0x022341B4 BL 0x1C16DFC
	0x022341B8 LDR X0, [X21]
	0x022341BC ADRP X9, 0x1EBF000
	0x022341C0 LDR X8, [X0 + 0xB8]
	0x022341C4 LDR X9, [X9 + 0x6C0]
	0x022341C8 LDR X0, [X9]
	0x022341CC LDR X9, [X20 + 0x38]
	0x022341D0 LDR X20, [X8]
	0x022341D4 LDR W8, [X0 + 0xE0]
	0x022341D8 LDR X21, [X9]
	0x022341DC CBNZ W8, 0x22341E4
	0x022341E0 BL 0x1C16DFC
	0x022341E4 MOV X0, X21
	0x022341E8 MOV X1, X31
	0x022341EC BL 0x338C698
	0x022341F0 CBZ X20, 0x2234218
	0x022341F4 ADRP X8, 0x1EE8000
	0x022341F8 LDR X8, [X8 + 0x298]
	0x022341FC MOV X1, X0
	0x02234200 MOV X0, X20
	0x02234204 MOV X2, X19
	0x02234208 LDR X3, [X8]
	0x0223420C LDP X20, X19, [X31 + 0x10]
	0x02234210 LDP X30, X21, [X31], #0x20
	0x02234214 B 0x2AA5084
	0x02234218 BL 0x1C16F20
	0x0223421C STP X30, X21, [X31 - 0x20]!
	0x02234220 STP X20, X19, [X31 + 0x10]
	0x02234224 LDR X8, [X1 + 0x38]
	0x02234228 MOV X20, X1
	0x0223422C MOV X19, X0
	0x02234230 CBNZ X8, 0x2234268
	0x02234234 ADRP X0, 0x1EE8000
	0x02234238 LDR X0, [X0 + 0x298]
	0x0223423C BL 0x1C16CF4
	0x02234240 ADRP X0, 0x1EE8000
	0x02234244 LDR X0, [X0 + 0x2A0]
	0x02234248 BL 0x1C16CF4
	0x0223424C ADRP X0, 0x1EBF000
	0x02234250 LDR X0, [X0 + 0x6C0]
	0x02234254 BL 0x1C16CF4
	0x02234258 LDR X8, [X20 + 0x38]
	0x0223425C CBNZ X8, 0x2234268
	0x02234260 MOV X0, X20
	0x02234264 BL 0x1C5C6E0
	0x02234268 ADRP X21, 0x1EE8000
	0x0223426C LDR X21, [X21 + 0x2A0]
	0x02234270 LDR X0, [X21]
	0x02234274 LDR W8, [X0 + 0xE0]
	0x02234278 CBNZ W8, 0x2234284

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X20, X1
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {24}
	010 Move X0, 0x1EE9000
	011 Move X0, [X0+664]
	012 Call 0x1C17CF4
	013 Move X0, 0x1EE9000
	014 Move X0, [X0+672]
	015 Call 0x1C17CF4
	016 Move X0, 0x1EC0000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Move X21, 0x1EE9000
	025 Move X21, [X21+672]
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X9, 0x1EC0000
	033 Move X8, [X0+184]
	034 Move X9, [X9+1728]
	035 Move X0, [X9]
	036 Move X9, [X20+56]
	037 Move X20, [X8]
	038 Move W8, [X0+224]
	039 Move X21, [X9]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move X1, X31
	045 Call Type.GetTypeFromHandle, X0
	046 Compare X20, 0
	047 JumpIfEqual {60}
	048 Move X8, 0x1EE9000
	049 Move X8, [X8+664]
	050 Move X1, X0
	051 Move X0, X20
	052 Move X2, X19
	053 Move X3, [X8]
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	059 Return 
	060 Call 0x1C17F20

Method: System.Boolean TryGet(out SpatialSys.ObservableState.PrimitiveOperators/Operators`1<T> operators)

Disassembly:
	0x022353AC CBNZ W9, 0x22353B8
	0x022353B0 MOV X0, X8
	0x022353B4 BL 0x1C16DFC
	0x022353B8 MOV X0, X19
	0x022353BC MOV X1, X31
	0x022353C0 BL 0x33205FC
	0x022353C4 MOV W1, W0
	0x022353C8 SUB X0, X29, 0x18
	0x022353CC MOV X2, X31
	0x022353D0 STP X31, X31, [X29 - 0x18]
	0x022353D4 BL 0x37658C4
	0x022353D8 B 0x22355C8
	0x022353DC MOV X0, X20
	0x022353E0 MOV X1, X21
	0x022353E4 MOV X2, X22
	0x022353E8 BL 0x3EB1AC0
	0x022353EC LDR X8, [X19 + 0x38]
	0x022353F0 MOV X1, X20
	0x022353F4 LDR X0, [X8 + 0x8]
	0x022353F8 BL 0x1C16E04
	0x022353FC ADRP X8, 0x1EC7000
	0x02235400 LDR X8, [X8 + 0x9E8]
	0x02235404 MOV X19, X0
	0x02235408 LDR X8, [X8]
	0x0223540C LDR W9, [X8 + 0xE0]
	0x02235410 CBNZ W9, 0x223541C
	0x02235414 MOV X0, X8
	0x02235418 BL 0x1C16DFC
	0x0223541C MOV X0, X19
	0x02235420 MOV X1, X31
	0x02235424 BL 0x331E5E8
	0x02235428 MOV W1, W0
	0x0223542C SUB X0, X29, 0x18
	0x02235430 MOV X2, X31
	0x02235434 STP X31, X31, [X29 - 0x18]
	0x02235438 BL 0x376583C
	0x0223543C B 0x22355C8
	0x02235440 MOV X0, X20
	0x02235444 MOV X1, X21
	0x02235448 MOV X2, X22
	0x0223544C BL 0x3EB1AC0
	0x02235450 LDR X8, [X19 + 0x38]
	0x02235454 MOV X1, X20
	0x02235458 LDR X0, [X8 + 0x8]
	0x0223545C BL 0x1C16E04
	0x02235460 ADRP X8, 0x1EC7000
	0x02235464 LDR X8, [X8 + 0x9E8]
	0x02235468 MOV X19, X0
	0x0223546C LDR X8, [X8]
	0x02235470 LDR W9, [X8 + 0xE0]
	0x02235474 CBNZ W9, 0x2235480
	0x02235478 MOV X0, X8
	0x0223547C BL 0x1C16DFC
	0x02235480 MOV X0, X19
	0x02235484 MOV X1, X31
	0x02235488 BL 0x331FC48
	0x0223548C MOV W1, W0
	0x02235490 SUB X0, X29, 0x18
	0x02235494 MOV X2, X31
	0x02235498 STP X31, X31, [X29 - 0x18]
	0x0223549C BL 0x376589C
	0x022354A0 B 0x22355C8
	0x022354A4 MOV X0, X20
	0x022354A8 MOV X1, X21
	0x022354AC MOV X2, X22
	0x022354B0 BL 0x3EB1AC0
	0x022354B4 LDR X8, [X19 + 0x38]
	0x022354B8 MOV X1, X20
	0x022354BC LDR X0, [X8 + 0x8]
	0x022354C0 BL 0x1C16E04
	0x022354C4 ADRP X8, 0x1EC7000
	0x022354C8 LDR X8, [X8 + 0x9E8]
	0x022354CC MOV X19, X0
	0x022354D0 LDR X8, [X8]
	0x022354D4 LDR W9, [X8 + 0xE0]
	0x022354D8 CBNZ W9, 0x22354E4
	0x022354DC MOV X0, X8
	0x022354E0 BL 0x1C16DFC
	0x022354E4 MOV X0, X19
	0x022354E8 MOV X1, X31
	0x022354EC BL 0x3320190
	0x022354F0 MOV W1, W0
	0x022354F4 SUB X0, X29, 0x18
	0x022354F8 MOV X2, X31
	0x022354FC STP X31, X31, [X29 - 0x18]
	0x02235500 BL 0x37658B4
	0x02235504 B 0x22355C8
	0x02235508 MOV X0, X20
	0x0223550C MOV X1, X21
	0x02235510 MOV X2, X22
	0x02235514 BL 0x3EB1AC0
	0x02235518 LDR X8, [X19 + 0x38]
	0x0223551C MOV X1, X20
	0x02235520 LDR X0, [X8 + 0x8]
	0x02235524 BL 0x1C16E04
	0x02235528 ADRP X8, 0x1EC7000
	0x0223552C LDR X8, [X8 + 0x9E8]
	0x02235530 MOV X19, X0
	0x02235534 LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {25}
	011 Move X0, 0x1EE8000
	012 Move X0, [X0+680]
	013 Call 0x1C17CF4
	014 Move X0, 0x1EE8000
	015 Move X0, [X0+672]
	016 Call 0x1C17CF4
	017 Move X0, 0x1EBF000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X8, [X19+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 Move X21, 0x1EE8000
	026 Move X21, [X21+672]
	027 Move [X31+8], X31
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X21]
	034 Move X9, 0x1EBF000
	035 Move X8, [X0+184]
	036 Move X9, [X9+1728]
	037 Move X21, [X8]
	038 Move X0, [X9]
	039 Move X9, [X19+56]
	040 Move W8, [X0+224]
	041 Move X22, [X9]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X22
	046 Move X1, X31
	047 Call Type.GetTypeFromHandle, X0
	048 Compare X21, 0
	049 JumpIfEqual {114}
	050 Move X8, 0x1EE8000
	051 Move X8, [X8+680]
	052 Move X1, X0
	053 Add X2, X31, 8
	054 Move X0, X21
	055 Move X3, [X8]
	056 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {104}
	061 Move X8, [X19+56]
	062 Move X21, [X31+8]
	063 Move X1, [X8+16]
	064 Move W8, [X1+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {72}
	069 Move X0, X1
	070 Call 0x1C5D684
	071 Move X1, X0
	072 Compare X21, 0
	073 JumpIfEqual {82}
	074 Move X8, [X21]
	075 Move W9, [X1+304]
	076 Move W10, [X8+304]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X8+200]
	079 Add X8, X8, X9
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X20], X21
	083 Move X8, [X19+56]
	084 Move X1, [X8+16]
	085 Move W8, [X1+309]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {93}
	090 Move X0, X1
	091 Call 0x1C5D684
	092 Move X1, X0
	093 Compare X21, 0
	094 JumpIfEqual {103}
	095 Move X8, [X21]
	096 Move W9, [X1+304]
	097 Move W10, [X8+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X8+200]
	100 Add X8, X8, X9
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W0, 1
	104 Move W0, W31
	105 Move [X20], X31
	106 Move X20, [X31+32]
	107 Move X19, [X31+40]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move X30, [X31+48]
	111 Return X0
	112 Move X0, X21
	113 Call 0x1C181E0
	114 Call 0x1C17F20

