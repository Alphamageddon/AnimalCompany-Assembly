Type: SpatialSys.ObservableState.StateOperationPool

Method: System.Void .ctor(SpatialSys.ObservableState.IStateTypeIDManifest typeIDManifest)

Disassembly:
	0x035C6A98 MOV X2, X22
	0x035C6A9C BLR X8
	0x035C6AA0 LDR X8, [X21]
	0x035C6AA4 MOV X0, X21
	0x035C6AA8 LDP X9, X1, [X8 + 0x198]
	0x035C6AAC BLR X9
	0x035C6AB0 MOV X22, X0
	0x035C6AB4 ADRP X0, 0xB71000
	0x035C6AB8 LDR X0, [X0 + 0xF50]
	0x035C6ABC BL 0x1C16D08
	0x035C6AC0 LDR W8, [X0 + 0xE0]
	0x035C6AC4 CBNZ W8, 0x35C6ACC
	0x035C6AC8 BL 0x1C16DFC
	0x035C6ACC ADRP X0, 0xB71000
	0x035C6AD0 LDR X0, [X0 + 0xF50]
	0x035C6AD4 BL 0x1C16D08
	0x035C6AD8 LDR X8, [X0 + 0xB8]
	0x035C6ADC ADRP X0, 0xB2D000
	0x035C6AE0 LDR X25, [X8 + 0x20]
	0x035C6AE4 LDR X0, [X0 + 0x838]
	0x035C6AE8 BL 0x1C16D08
	0x035C6AEC MOV X24, X0
	0x035C6AF0 ADRP X0, 0xB71000
	0x035C6AF4 LDR X0, [X0 + 0xF58]
	0x035C6AF8 BL 0x1C16D08
	0x035C6AFC MOV X23, X0
	0x035C6B00 CBNZ X25, 0x35C6B80
	0x035C6B04 ADRP X0, 0xB71000
	0x035C6B08 LDR X0, [X0 + 0xF50]
	0x035C6B0C BL 0x1C16D08
	0x035C6B10 LDR W8, [X0 + 0xE0]
	0x035C6B14 CBNZ W8, 0x35C6B1C
	0x035C6B18 BL 0x1C16DFC
	0x035C6B1C ADRP X26, 0xB71000
	0x035C6B20 LDR X26, [X26 + 0xF50]
	0x035C6B24 MOV X0, X26
	0x035C6B28 BL 0x1C16D08
	0x035C6B2C LDR X8, [X0 + 0xB8]
	0x035C6B30 ADRP X0, 0xB71000
	0x035C6B34 LDR X27, [X8]
	0x035C6B38 LDR X0, [X0 + 0xF68]
	0x035C6B3C BL 0x1C16D08
	0x035C6B40 BL 0x1C16F10
	0x035C6B44 MOV X25, X0
	0x035C6B48 ADRP X0, 0xB71000
	0x035C6B4C LDR X0, [X0 + 0xFB8]
	0x035C6B50 BL 0x1C16D08
	0x035C6B54 MOV X2, X0
	0x035C6B58 MOV X0, X25
	0x035C6B5C MOV X1, X27
	0x035C6B60 MOV X3, X31
	0x035C6B64 BL 0x2D2F428
	0x035C6B68 MOV X0, X26
	0x035C6B6C BL 0x1C16D08
	0x035C6B70 LDR X8, [X0 + 0xB8]
	0x035C6B74 MOV X0, X26
	0x035C6B78 STR X25, [X8 + 0x20]
	0x035C6B7C BL 0x1C16D08
	0x035C6B80 ADRP X0, 0xB71000
	0x035C6B84 LDR X0, [X0 + 0xF78]
	0x035C6B88 BL 0x1C16D08
	0x035C6B8C MOV X2, X0
	0x035C6B90 MOV X0, X20
	0x035C6B94 MOV X1, X25
	0x035C6B98 BL 0x21DA490
	0x035C6B9C MOV X20, X0
	0x035C6BA0 ADRP X0, 0xB71000
	0x035C6BA4 LDR X0, [X0 + 0xF50]
	0x035C6BA8 BL 0x1C16D08
	0x035C6BAC LDR W8, [X0 + 0xE0]
	0x035C6BB0 CBNZ W8, 0x35C6BB8
	0x035C6BB4 BL 0x1C16DFC
	0x035C6BB8 ADRP X0, 0xB71000
	0x035C6BBC LDR X0, [X0 + 0xF50]
	0x035C6BC0 BL 0x1C16D08
	0x035C6BC4 LDR X8, [X0 + 0xB8]
	0x035C6BC8 LDR X25, [X8 + 0x28]
	0x035C6BCC CBNZ X25, 0x35C6C4C
	0x035C6BD0 ADRP X0, 0xB71000
	0x035C6BD4 LDR X0, [X0 + 0xF50]
	0x035C6BD8 BL 0x1C16D08
	0x035C6BDC LDR W8, [X0 + 0xE0]
	0x035C6BE0 CBNZ W8, 0x35C6BE8
	0x035C6BE4 BL 0x1C16DFC
	0x035C6BE8 ADRP X26, 0xB71000
	0x035C6BEC LDR X26, [X26 + 0xF50]
	0x035C6BF0 MOV X0, X26
	0x035C6BF4 BL 0x1C16D08
	0x035C6BF8 LDR X8, [X0 + 0xB8]
	0x035C6BFC ADRP X0, 0xB71000
	0x035C6C00 LDR X27, [X8]
	0x035C6C04 LDR X0, [X0 + 0xF80]
	0x035C6C08 BL 0x1C16D08
	0x035C6C0C BL 0x1C16F10
	0x035C6C10 MOV X25, X0
	0x035C6C14 ADRP X0, 0xB71000
	0x035C6C18 LDR X0, [X0 + 0xFC0]
	0x035C6C1C BL 0x1C16D08
	0x035C6C20 MOV X2, X0
	0x035C6C24 MOV X0, X25
	0x035C6C28 MOV X1, X27
	0x035C6C2C MOV X3, X31
	0x035C6C30 BL 0x2D30578
	0x035C6C34 MOV X0, X26
	0x035C6C38 BL 0x1C16D08
	0x035C6C3C LDR X8, [X0 + 0xB8]
	0x035C6C40 MOV X0, X26
	0x035C6C44 STR X25, [X8 + 0x28]
	0x035C6C48 BL 0x1C16D08
	0x035C6C4C ADRP X0, 0xB71000
	0x035C6C50 LDR X0, [X0 + 0xF90]
	0x035C6C54 BL 0x1C16D08
	0x035C6C58 MOV X2, X0
	0x035C6C5C MOV X0, X20
	0x035C6C60 MOV X1, X25
	0x035C6C64 BL 0x21CF224
	0x035C6C68 MOV X1, X0
	0x035C6C6C MOV X0, X24
	0x035C6C70 MOV X2, X31
	0x035C6C74 BL 0x32280D8
	0x035C6C78 CBNZ X22, 0x35C6C80
	0x035C6C7C BL 0x1C16F20
	0x035C6C80 MOV X20, X0
	0x035C6C84 ADRP X0, 0xB2D000
	0x035C6C88 LDR X0, [X0 + 0x818]
	0x035C6C8C BL 0x1C16D08
	0x035C6C90 LDR X8, [X22]
	0x035C6C94 MOV X1, X0
	0x035C6C98 LDRH W9, [X8 + 0x12E]
	0x035C6C9C CBZ X9, 0x35C6CC0
	0x035C6CA0 LDR X10, [X8 + 0xB0]
	0x035C6CA4 ADD X10, X10, 0x8
	0x035C6CA8 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xE1B000
	011 Move X22, 0xB72000
	012 Move X21, 0xB72000
	013 Move X23, 0xB72000
	014 Move X24, 0xB72000
	015 Move W8, [X25+457]
	016 Move X22, [X22+3760]
	017 Move X21, [X21+3768]
	018 Move X23, [X23+3776]
	019 Move X24, [X24+3784]
	020 Move X20, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0xB58000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xB72000
	030 Move X0, [X0+3792]
	031 Call 0x1C17CF4
	032 Move X0, 0xB72000
	033 Move X0, [X0+3784]
	034 Call 0x1C17CF4
	035 Move X0, 0xB72000
	036 Move X0, [X0+3800]
	037 Call 0x1C17CF4
	038 Move X0, 0xB72000
	039 Move X0, [X0+3768]
	040 Call 0x1C17CF4
	041 Move X0, 0xB72000
	042 Move X0, [X0+3760]
	043 Call 0x1C17CF4
	044 Move X0, 0xB72000
	045 Move X0, [X0+3776]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+457], W8
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X21, X0
	053 Call List`1<Object>..ctor, X0
	054 Move [X19+16], X21
	055 Move X0, [X23]
	056 Call 0x1C17F10
	057 Move X1, [X24]
	058 Move X21, X0
	059 Call List`1<Object>..ctor, X0
	060 Move X0, X19
	061 Move X1, X31
	062 Move [X19+24], X21
	063 Call Object..ctor, X0
	064 Move [X19+32], X20
	065 Compare X20, 0
	066 JumpIfEqual {143}
	067 Move X25, 0xB58000
	068 Move X8, [X20]
	069 Move X25, [X25+800]
	070 Move X26, 0xB72000
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X25]
	073 Move X26, [X26+3792]
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X20
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X24, 0xB72000
	091 Move X24, [X24+3800]
	092 Move X0, X20
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X8, [X22]
	095 Move W21, W0
	096 Move X0, X8
	097 Call 0x1C17F10
	098 Move X2, [X26]
	099 Move W1, W21
	100 Move X22, X0
	101 Call List`1<Object>..ctor, X0, X1
	102 Move [X19+16], X22
	103 Move X8, [X20]
	104 Move X1, [X25]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X20
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X20
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, [X23]
	125 Move W20, W0
	126 Move X0, X8
	127 Call 0x1C17F10
	128 Move X2, [X24]
	129 Move W1, W20
	130 Move X21, X0
	131 Call List`1<Object>..ctor, X0, X1
	132 Move [X19+24], X21
	133 Move X20, [X31+64]
	134 Move X19, [X31+72]
	135 Move X22, [X31+48]
	136 Move X21, [X31+56]
	137 Move X24, [X31+32]
	138 Move X23, [X31+40]
	139 Move X26, [X31+16]
	140 Move X25, [X31+24]
	141 Move X30, [X31+80]
	142 Return 
	143 Call 0x1C17F20

Method: System.Void GetPoolForType(System.Int32 typeID, out System.Collections.Generic.Queue`1<SpatialSys.ObservableState.IStateOperation> unallocatedQueue)

Disassembly:
	0x035CA140 LDR X0, [X24]
	0x035CA144 ADRP X9, 0xB6E000
	0x035CA148 LDR X8, [X0 + 0xB8]
	0x035CA14C LDR X9, [X9 + 0x290]
	0x035CA150 LDR X23, [X8]
	0x035CA154 LDR X0, [X9]
	0x035CA158 BL 0x1C16F10
	0x035CA15C ADRP X8, 0xB6E000
	0x035CA160 LDR X8, [X8 + 0x3E0]
	0x035CA164 MOV X1, X23
	0x035CA168 MOV X3, X31
	0x035CA16C MOV X22, X0
	0x035CA170 LDR X2, [X8]
	0x035CA174 BL 0x2D30578
	0x035CA178 LDR X8, [X24]
	0x035CA17C LDR X8, [X8 + 0xB8]
	0x035CA180 STR X22, [X8 + 0x10]
	0x035CA184 CBZ X19, 0x35CB6B0
	0x035CA188 ADRP X8, 0xB6E000
	0x035CA18C LDR X8, [X8 + 0x350]
	0x035CA190 MOV X0, X19
	0x035CA194 MOV X1, X21
	0x035CA198 MOV X2, X22
	0x035CA19C LDR X3, [X8]
	0x035CA1A0 BL 0x226A470
	0x035CA1A4 LDR X0, [X24]
	0x035CA1A8 LDR W8, [X0 + 0xE0]
	0x035CA1AC CBNZ W8, 0x35CA1B8
	0x035CA1B0 BL 0x1C16DFC
	0x035CA1B4 LDR X0, [X24]
	0x035CA1B8 LDR X8, [X0 + 0xB8]
	0x035CA1BC LDR X21, [X8 + 0x18]
	0x035CA1C0 CBNZ X21, 0x35CA214
	0x035CA1C4 LDR W8, [X0 + 0xE0]
	0x035CA1C8 CBNZ W8, 0x35CA1D4
	0x035CA1CC BL 0x1C16DFC
	0x035CA1D0 LDR X0, [X24]
	0x035CA1D4 ADRP X9, 0xB6E000
	0x035CA1D8 LDR X8, [X0 + 0xB8]
	0x035CA1DC LDR X9, [X9 + 0x1E8]
	0x035CA1E0 LDR X22, [X8]
	0x035CA1E4 LDR X0, [X9]
	0x035CA1E8 BL 0x1C16F10
	0x035CA1EC ADRP X8, 0xB6E000
	0x035CA1F0 LDR X8, [X8 + 0x438]
	0x035CA1F4 MOV X1, X22
	0x035CA1F8 MOV X3, X31
	0x035CA1FC MOV X21, X0
	0x035CA200 LDR X2, [X8]
	0x035CA204 BL 0x2D2BB34
	0x035CA208 LDR X0, [X24]
	0x035CA20C LDR X8, [X0 + 0xB8]
	0x035CA210 STR X21, [X8 + 0x18]
	0x035CA214 LDR W8, [X0 + 0xE0]
	0x035CA218 CBNZ W8, 0x35CA224
	0x035CA21C BL 0x1C16DFC
	0x035CA220 LDR X0, [X24]
	0x035CA224 LDR X8, [X0 + 0xB8]
	0x035CA228 ADRP X20, 0xB6E000
	0x035CA22C LDR X22, [X8 + 0x20]
	0x035CA230 LDR X20, [X20 + 0x2E8]
	0x035CA234 CBNZ X22, 0x35CA288
	0x035CA238 LDR W8, [X0 + 0xE0]
	0x035CA23C CBNZ W8, 0x35CA248
	0x035CA240 BL 0x1C16DFC
	0x035CA244 LDR X0, [X24]
	0x035CA248 ADRP X9, 0xB6E000
	0x035CA24C LDR X8, [X0 + 0xB8]
	0x035CA250 LDR X9, [X9 + 0x180]
	0x035CA254 LDR X23, [X8]
	0x035CA258 LDR X0, [X9]
	0x035CA25C BL 0x1C16F10
	0x035CA260 ADRP X8, 0xB6E000
	0x035CA264 LDR X8, [X8 + 0x490]
	0x035CA268 MOV X1, X23
	0x035CA26C MOV X3, X31
	0x035CA270 MOV X22, X0
	0x035CA274 LDR X2, [X8]
	0x035CA278 BL 0x2D2F764
	0x035CA27C LDR X8, [X24]
	0x035CA280 LDR X8, [X8 + 0xB8]
	0x035CA284 STR X22, [X8 + 0x20]
	0x035CA288 LDR X3, [X20]
	0x035CA28C MOV X0, X19
	0x035CA290 MOV X1, X21
	0x035CA294 MOV X2, X22
	0x035CA298 BL 0x2269B88
	0x035CA29C LDR X0, [X24]
	0x035CA2A0 LDR W8, [X0 + 0xE0]
	0x035CA2A4 CBNZ W8, 0x35CA2B0
	0x035CA2A8 BL 0x1C16DFC
	0x035CA2AC LDR X0, [X24]
	0x035CA2B0 LDR X8, [X0 + 0xB8]
	0x035CA2B4 LDR X21, [X8 + 0x28]
	0x035CA2B8 CBNZ X21, 0x35CA30C
	0x035CA2BC LDR W8, [X0 + 0xE0]
	0x035CA2C0 CBNZ W8, 0x35CA2CC
	0x035CA2C4 BL 0x1C16DFC
	0x035CA2C8 LDR X0, [X24]
	0x035CA2CC ADRP X9, 0xB6E000
	0x035CA2D0 LDR X8, [X0 + 0xB8]
	0x035CA2D4 LDR X9, [X9 + 0x210]
	0x035CA2D8 LDR X22, [X8]
	0x035CA2DC LDR X0, [X9]
	0x035CA2E0 BL 0x1C16F10
	0x035CA2E4 ADRP X8, 0xB6E000
	0x035CA2E8 LDR X8, [X8 + 0x4B8]
	0x035CA2EC MOV X1, X22
	0x035CA2F0 MOV X3, X31
	0x035CA2F4 MOV X21, X0
	0x035CA2F8 LDR X2, [X8]
	0x035CA2FC BL 0x2D2B4EC
	0x035CA300 LDR X0, [X24]
	0x035CA304 LDR X8, [X0 + 0xB8]
	0x035CA308 STR X21, [X8 + 0x28]
	0x035CA30C LDR W8, [X0 + 0xE0]
	0x035CA310 CBNZ W8, 0x35CA31C
	0x035CA314 BL 0x1C16DFC
	0x035CA318 LDR X0, [X24]
	0x035CA31C LDR X8, [X0 + 0xB8]
	0x035CA320 ADRP X20, 0xB6E000
	0x035CA324 LDR X22, [X8 + 0x30]
	0x035CA328 LDR X20, [X20 + 0x2D0]
	0x035CA32C CBNZ X22, 0x35CA380
	0x035CA330 LDR W8, [X0 + 0xE0]
	0x035CA334 CBNZ W8, 0x35CA340
	0x035CA338 BL 0x1C16DFC
	0x035CA33C LDR X0, [X24]
	0x035CA340 ADRP X9, 0xB6E000
	0x035CA344 LDR X8, [X0 + 0xB8]
	0x035CA348 LDR X9, [X9 + 0x178]
	0x035CA34C LDR X23, [X8]
	0x035CA350 LDR X0, [X9]
	0x035CA354 BL 0x1C16F10
	0x035CA358 ADRP X8, 0xB6E000
	0x035CA35C LDR X8, [X8 + 0x4C0]
	0x035CA360 MOV X1, X23
	0x035CA364 MOV X3, X31
	0x035CA368 MOV X22, X0
	0x035CA36C LDR X2, [X8]
	0x035CA370 BL 0x2D2F428
	0x035CA374 LDR X8, [X24]
	0x035CA378 LDR X8, [X8 + 0xB8]
	0x035CA37C STR X22, [X8 + 0x30]
	0x035CA380 LDR X3, [X20]
	0x035CA384 MOV X0, X19
	0x035CA388 MOV X1, X21
	0x035CA38C MOV X2, X22
	0x035CA390 BL 0x22698DC
	0x035CA394 LDR X0, [X24]
	0x035CA398 LDR W8, [X0 + 0xE0]
	0x035CA39C CBNZ W8, 0x35CA3A8
	0x035CA3A0 BL 0x1C16DFC
	0x035CA3A4 LDR X0, [X24]
	0x035CA3A8 LDR X8, [X0 + 0xB8]
	0x035CA3AC LDR X21, [X8 + 0x38]
	0x035CA3B0 CBNZ X21, 0x35CA404
	0x035CA3B4 LDR W8, [X0 + 0xE0]
	0x035CA3B8 CBNZ W8, 0x35CA3C4
	0x035CA3BC BL 0x1C16DFC
	0x035CA3C0 LDR X0, [X24]
	0x035CA3C4 ADRP X9, 0xB6E000
	0x035CA3C8 LDR X8, [X0 + 0xB8]
	0x035CA3CC LDR X9, [X9 + 0x208]
	0x035CA3D0 LDR X22, [X8]
	0x035CA3D4 LDR X0, [X9]
	0x035CA3D8 BL 0x1C16F10
	0x035CA3DC ADRP X8, 0xB6E000
	0x035CA3E0 LDR X8, [X8 + 0x4C8]
	0x035CA3E4 MOV X1, X22
	0x035CA3E8 MOV X3, X31
	0x035CA3EC MOV X21, X0
	0x035CA3F0 LDR X2, [X8]
	0x035CA3F4 BL 0x2D2CCF4
	0x035CA3F8 LDR X0, [X24]
	0x035CA3FC LDR X8, [X0 + 0xB8]
	0x035CA400 STR X21, [X8 + 0x38]
	0x035CA404 LDR W8, [X0 + 0xE0]
	0x035CA408 CBNZ W8, 0x35CA414
	0x035CA40C BL 0x1C16DFC
	0x035CA410 LDR X0, [X24]
	0x035CA414 LDR X8, [X0 + 0xB8]
	0x035CA418 ADRP X20, 0xB6E000
	0x035CA41C LDR X22, [X8 + 0x40]
	0x035CA420 LDR X20, [X20 + 0x318]
	0x035CA424 CBNZ X22, 0x35CA478
	0x035CA428 LDR W8, [X0 + 0xE0]
	0x035CA42C CBNZ W8, 0x35CA438
	0x035CA430 BL 0x1C16DFC
	0x035CA434 LDR X0, [X24]
	0x035CA438 ADRP X9, 0xB6E000
	0x035CA43C LDR X8, [X0 + 0xB8]
	0x035CA440 LDR X9, [X9 + 0x2C8]
	0x035CA444 LDR X23, [X8]
	0x035CA448 LDR X0, [X9]
	0x035CA44C BL 0x1C16F10
	0x035CA450 ADRP X8, 0xB6E000
	0x035CA454 LDR X8, [X8 + 0x4D0]
	0x035CA458 MOV X1, X23
	0x035CA45C MOV X3, X31
	0x035CA460 MOV X22, X0
	0x035CA464 LDR X2, [X8]
	0x035CA468 BL 0x2D30014
	0x035CA46C LDR X8, [X24]
	0x035CA470 LDR X8, [X8 + 0xB8]
	0x035CA474 STR X22, [X8 + 0x40]
	0x035CA478 LDR X3, [X20]
	0x035CA47C MOV X0, X19
	0x035CA480 MOV X1, X21
	0x035CA484 MOV X2, X22
	0x035CA488 BL 0x226A0E0
	0x035CA48C LDR X0, [X24]
	0x035CA490 LDR W8, [X0 + 0xE0]
	0x035CA494 CBNZ W8, 0x35CA4A0
	0x035CA498 BL 0x1C16DFC
	0x035CA49C LDR X0, [X24]
	0x035CA4A0 LDR X8, [X0 + 0xB8]
	0x035CA4A4 LDR X21, [X8 + 0x48]
	0x035CA4A8 CBNZ X21, 0x35CA4FC
	0x035CA4AC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xE17000
	011 Move W8, [X22+458]
	012 Move X21, X2
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0xB6F000
	020 Move X0, [X0+240]
	021 Call 0x1C17CF4
	022 Move X0, 0xB6F000
	023 Move X0, [X0+248]
	024 Call 0x1C17CF4
	025 Move X0, 0xB54000
	026 Move X0, [X0+800]
	027 Call 0x1C17CF4
	028 Move X0, 0xB6F000
	029 Move X0, [X0+256]
	030 Call 0x1C17CF4
	031 Move X0, 0xB6F000
	032 Move X0, [X0+264]
	033 Call 0x1C17CF4
	034 Move X0, 0xB6F000
	035 Move X0, [X0+216]
	036 Call 0x1C17CF4
	037 Move X0, 0xB6F000
	038 Move X0, [X0+272]
	039 Call 0x1C17CF4
	040 Move X0, 0xB6F000
	041 Move X0, [X0+224]
	042 Call 0x1C17CF4
	043 Move X0, 0xB6F000
	044 Move X0, [X0+280]
	045 Call 0x1C17CF4
	046 Move X0, 0xB6F000
	047 Move X0, [X0+288]
	048 Call 0x1C17CF4
	049 Move X0, 0xB6F000
	050 Move X0, [X0+296]
	051 Call 0x1C17CF4
	052 Move X0, 0xB6F000
	053 Move X0, [X0+304]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+458], W8
	057 Move X9, [X20+16]
	058 Compare X9, 0
	059 JumpIfEqual {240}
	060 Move X23, 0xB6F000
	061 Move X24, 0xB54000
	062 Move X25, 0xB6F000
	063 Move X23, [X23+224]
	064 Move X24, [X24+800]
	065 Move X25, [X25+264]
	066 Move X22, [X20+32]
	067 Compare X22, 0
	068 JumpIfEqual {240}
	069 Move X8, [X22]
	070 Move W26, [X9+24]
	071 Move X1, [X24]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X22
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X22
	090 NotImplemented "Instruction BLR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, [X20+16]
	093 Compare X0, 0
	094 JumpIfEqual {240}
	095 Move W10, [X0+28]
	096 Move X8, [X0+16]
	097 Move X9, [X25]
	098 Add W10, W10, 1
	099 Move [X0+28], W10
	100 Compare X8, 0
	101 JumpIfEqual {240}
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Move W11, [X8+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add W9, W10, 1
	106 Add X8, X8, X10
	107 Move [X0+24], W9
	108 Move [X8+32], X31
	109 Move X8, [X9+32]
	110 Move X1, X31
	111 Move X8, [X8+192]
	112 Move X2, [X8+112]
	113 Call List`1<Object>.AddWithResize, X0, X1
	114 Move X9, [X20+16]
	115 Compare X9, 0
	116 JumpIfNotEqual {66}
	117 Move X9, [X20+24]
	118 Compare X9, 0
	119 JumpIfEqual {240}
	120 Move X25, 0xB6F000
	121 Move X25, [X25+256]
	122 Move X22, [X20+32]
	123 Compare X22, 0
	124 JumpIfEqual {240}
	125 Move X8, [X22]
	126 Move W26, [X9+24]
	127 Move X1, [X24]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move X0, X22
	138 Move W2, W31
	139 Call 0x1C5D788
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Add X8, X8, X9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X1, [X0+8]
	145 Move X0, X22
	146 NotImplemented "Instruction BLR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X0, [X20+24]
	149 Compare X0, 0
	150 JumpIfEqual {240}
	151 Move W10, [X0+28]
	152 Move X8, [X0+16]
	153 Move X9, [X25]
	154 Add W10, W10, 1
	155 Move [X0+28], W10
	156 Compare X8, 0
	157 JumpIfEqual {240}
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Move W11, [X8+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add W9, W10, 1
	162 Add X8, X8, X10
	163 Move [X0+24], W9
	164 Move [X8+32], X31
	165 Move X8, [X9+32]
	166 Move X1, X31
	167 Move X8, [X8+192]
	168 Move X2, [X8+112]
	169 Call List`1<Object>.AddWithResize, X0, X1
	170 Move X9, [X20+24]
	171 Compare X9, 0
	172 JumpIfNotEqual {122}
	173 Move X0, [X20+16]
	174 Compare X0, 0
	175 JumpIfEqual {240}
	176 Move X2, [X23]
	177 Move W1, W19
	178 Call List`1<Object>.get_Item, X0, X1
	179 Move [X21], X0
	180 Compare X0, 0
	181 JumpIfEqual {192}
	182 Move X20, [X31+64]
	183 Move X19, [X31+72]
	184 Move X22, [X31+48]
	185 Move X21, [X31+56]
	186 Move X24, [X31+32]
	187 Move X23, [X31+40]
	188 Move X26, [X31+16]
	189 Move X25, [X31+24]
	190 Move X30, [X31+80]
	191 Return 
	192 Move X8, 0xB6F000
	193 Move X8, [X8+304]
	194 Move X0, [X8]
	195 Call 0x1C17F10
	196 Move X8, 0xB6F000
	197 Move X8, [X8+296]
	198 Move X22, X0
	199 Move X1, [X8]
	200 Call Queue`1<Object>..ctor, X0
	201 Move [X21], X22
	202 Move X0, [X20+16]
	203 Compare X0, 0
	204 JumpIfEqual {240}
	205 Move X8, 0xB6F000
	206 Move X8, [X8+280]
	207 Move W1, W19
	208 Move X2, X22
	209 Move X3, [X8]
	210 Call List`1<Object>.set_Item, X0, X1, X2
	211 Move X8, 0xB6F000
	212 Move X20, [X20+24]
	213 Move X8, [X8+248]
	214 Move X0, [X8]
	215 Call 0x1C17F10
	216 Move X8, 0xB6F000
	217 Move X8, [X8+240]
	218 Move X21, X0
	219 Move X1, [X8]
	220 Call HashSet`1<Object>..ctor, X0
	221 Compare X20, 0
	222 JumpIfEqual {240}
	223 Move X8, 0xB6F000
	224 Move X8, [X8+288]
	225 Move X0, X20
	226 Move W1, W19
	227 Move X2, X21
	228 Move X3, [X8]
	229 Move X20, [X31+64]
	230 Move X19, [X31+72]
	231 Move X22, [X31+48]
	232 Move X21, [X31+56]
	233 Move X24, [X31+32]
	234 Move X23, [X31+40]
	235 Move X26, [X31+16]
	236 Move X25, [X31+24]
	237 Move X30, [X31+80]
	238 Call List`1<Object>.set_Item, X0, X1, X2
	239 Return 
	240 Call 0x1C17F20

Method: SpatialSys.ObservableState.IStateOperation AllocateInstance(SpatialSys.ObservableState.IStateObject state, SpatialSys.ObservableState.OperationType opType, T param1, System.Int32 param1TypeID)

Disassembly:
	0x02267334 LDR X0, [X0 + 0x28]
	0x02267338 LDP X20, X19, [X31 + 0x10]
	0x0226733C LDR X30, [X31], #0x20
	0x02267340 RET
	0x02267344 BL 0x1C16F20
	0x02267348 STR X30, [X31 - 0x20]!
	0x0226734C STP X20, X19, [X31 + 0x10]
	0x02267350 LDR X8, [X1 + 0x38]
	0x02267354 MOV X19, X0
	0x02267358 CBNZ X8, 0x226736C
	0x0226735C MOV X0, X1
	0x02267360 MOV X20, X1
	0x02267364 BL 0x1C5C6E0
	0x02267368 LDR X8, [X20 + 0x38]
	0x0226736C LDR X1, [X8]
	0x02267370 MOV X0, X19
	0x02267374 BL 0x2268270
	0x02267378 CBZ X0, 0x226738C
	0x0226737C LDR X0, [X0 + 0x28]
	0x02267380 LDP X20, X19, [X31 + 0x10]
	0x02267384 LDR X30, [X31], #0x20
	0x02267388 RET
	0x0226738C BL 0x1C16F20
	0x02267390 STR X30, [X31 - 0x20]!
	0x02267394 STP X20, X19, [X31 + 0x10]
	0x02267398 LDR X8, [X1 + 0x38]
	0x0226739C MOV X19, X0
	0x022673A0 CBNZ X8, 0x22673B4
	0x022673A4 MOV X0, X1
	0x022673A8 MOV X20, X1
	0x022673AC BL 0x1C5C6E0
	0x022673B0 LDR X8, [X20 + 0x38]
	0x022673B4 LDR X1, [X8]
	0x022673B8 MOV X0, X19
	0x022673BC BL 0x2268538
	0x022673C0 CBZ X0, 0x22673D4
	0x022673C4 LDR X0, [X0 + 0x28]
	0x022673C8 LDP X20, X19, [X31 + 0x10]
	0x022673CC LDR X30, [X31], #0x20
	0x022673D0 RET
	0x022673D4 BL 0x1C16F20
	0x022673D8 STR X30, [X31 - 0x20]!
	0x022673DC STP X20, X19, [X31 + 0x10]
	0x022673E0 LDR X8, [X1 + 0x38]
	0x022673E4 MOV X19, X0
	0x022673E8 CBNZ X8, 0x22673FC
	0x022673EC MOV X0, X1
	0x022673F0 MOV X20, X1
	0x022673F4 BL 0x1C5C6E0
	0x022673F8 LDR X8, [X20 + 0x38]
	0x022673FC LDR X1, [X8]
	0x02267400 MOV X0, X19
	0x02267404 BL 0x2268800
	0x02267408 CBZ X0, 0x226741C
	0x0226740C LDR X0, [X0 + 0x28]
	0x02267410 LDP X20, X19, [X31 + 0x10]
	0x02267414 LDR X30, [X31], #0x20
	0x02267418 RET
	0x0226741C BL 0x1C16F20
	0x02267420 STR X30, [X31 - 0x20]!
	0x02267424 STP X20, X19, [X31 + 0x10]
	0x02267428 LDR X8, [X1 + 0x38]
	0x0226742C MOV X19, X0
	0x02267430 CBNZ X8, 0x2267444
	0x02267434 MOV X0, X1
	0x02267438 MOV X20, X1
	0x0226743C BL 0x1C5C6E0
	0x02267440 LDR X8, [X20 + 0x38]
	0x02267444 LDR X1, [X8]
	0x02267448 MOV X0, X19
	0x0226744C BL 0x2268AC8
	0x02267450 CBZ X0, 0x2267464
	0x02267454 LDR X0, [X0 + 0x28]
	0x02267458 LDP X20, X19, [X31 + 0x10]
	0x0226745C LDR X30, [X31], #0x20
	0x02267460 RET
	0x02267464 BL 0x1C16F20
	0x02267468 STR X30, [X31 - 0x20]!
	0x0226746C STP X20, X19, [X31 + 0x10]
	0x02267470 LDR X8, [X1 + 0x38]
	0x02267474 MOV X19, X1
	0x02267478 MOV X20, X0
	0x0226747C CBNZ X8, 0x226748C
	0x02267480 MOV X0, X19
	0x02267484 BL 0x1C5C6E0
	0x02267488 LDR X8, [X19 + 0x38]
	0x0226748C LDR X1, [X8]
	0x02267490 MOV X0, X20
	0x02267494 LDR X8, [X1]
	0x02267498 BLR X8
	0x0226749C CBZ X0, 0x22674B8
	0x022674A0 LDR X8, [X19 + 0x38]
	0x022674A4 LDP X20, X19, [X31 + 0x10]
	0x022674A8 LDR X1, [X8 + 0x10]
	0x022674AC LDR X2, [X1]
	0x022674B0 LDR X30, [X31], #0x20
	0x022674B4 BR X2
	0x022674B8 BL 0x1C16F20
	0x022674BC STR X30, [X31 - 0x20]!
	0x022674C0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X5+56]
	009 Move X24, X5
	010 Move W19, W4
	011 Move W20, W3
	012 Move W22, W2
	013 Move X23, X1
	014 Move X21, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {34}
	017 Move X0, 0x1EB6000
	018 Move X0, [X0+1576]
	019 Call 0x1C17CF4
	020 Move X0, 0x1EB6000
	021 Move X0, [X0+1584]
	022 Call 0x1C17CF4
	023 Move X0, 0x1EB6000
	024 Move X0, [X0+1592]
	025 Call 0x1C17CF4
	026 Move X0, 0x1EB6000
	027 Move X0, [X0+1600]
	028 Call 0x1C17CF4
	029 Move X8, [X24+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X24
	033 Call 0x1C5D6E0
	034 Add X2, X31, 8
	035 Move X0, X21
	036 Move W1, W19
	037 Move X3, X31
	038 Move [X31+8], X31
	039 Call StateOperationPool.GetPoolForType, X0, X1, X2
	040 Move X0, [X31+8]
	041 Compare X0, 0
	042 JumpIfEqual {116}
	043 Move W8, [X0+32]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0x1EB6000
	046 Move X8, [X8+1592]
	047 Move X1, [X8]
	048 Call Queue`1<Object>.Dequeue, X0
	049 Move X8, [X24+56]
	050 Move X24, X0
	051 Move X1, [X8]
	052 Move W8, [X1+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {60}
	057 Move X0, X1
	058 Call 0x1C5D684
	059 Move X1, X0
	060 Compare X24, 0
	061 JumpIfEqual {85}
	062 Move X8, [X24]
	063 Move W9, [X1+304]
	064 Move W10, [X8+304]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X8+200]
	067 Add X8, X8, X9
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X24
	071 Call 0x1C181E0
	072 Move X8, [X24+56]
	073 Move X0, [X8]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Call 0x1C17F10
	081 Move X8, [X24+56]
	082 Move X24, X0
	083 Move X1, [X8+8]
	084 Call 0x2615F80, X0
	085 Compare X24, 0
	086 JumpIfEqual {116}
	087 And W8, W20, 1
	088 Move [X24+16], X23
	089 Move [X24+24], W22
	090 Move [X24+25], W8
	091 Move [X24+28], W19
	092 Move X0, [X21+24]
	093 Compare X0, 0
	094 JumpIfEqual {116}
	095 Move X8, 0x1EB6000
	096 Move X8, [X8+1584]
	097 Move W1, W19
	098 Move X2, [X8]
	099 Call List`1<Object>.get_Item, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {116}
	102 Move X8, 0x1EB6000
	103 Move X8, [X8+1576]
	104 Move X1, X24
	105 Move X2, [X8]
	106 Call HashSet`1<Object>.Add, X0, X1
	107 Move X0, X24
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X24, [X31+16]
	113 Move X23, [X31+24]
	114 Move X30, [X31+64]
	115 Return X0
	116 Call 0x1C17F20

Method: SpatialSys.ObservableState.IStateOperation AllocateCopy(SpatialSys.ObservableState.IStateOperation operation)

Disassembly:
	0x035CA4B0 CBNZ W8, 0x35CA4BC
	0x035CA4B4 BL 0x1C16DFC
	0x035CA4B8 LDR X0, [X24]
	0x035CA4BC ADRP X9, 0xB6E000
	0x035CA4C0 LDR X8, [X0 + 0xB8]
	0x035CA4C4 LDR X9, [X9 + 0x240]
	0x035CA4C8 LDR X22, [X8]
	0x035CA4CC LDR X0, [X9]
	0x035CA4D0 BL 0x1C16F10
	0x035CA4D4 ADRP X8, 0xB6E000
	0x035CA4D8 LDR X8, [X8 + 0x4D8]
	0x035CA4DC MOV X1, X22
	0x035CA4E0 MOV X3, X31
	0x035CA4E4 MOV X21, X0
	0x035CA4E8 LDR X2, [X8]
	0x035CA4EC BL 0x2D2D154
	0x035CA4F0 LDR X0, [X24]
	0x035CA4F4 LDR X8, [X0 + 0xB8]
	0x035CA4F8 STR X21, [X8 + 0x48]
	0x035CA4FC LDR W8, [X0 + 0xE0]
	0x035CA500 CBNZ W8, 0x35CA50C
	0x035CA504 BL 0x1C16DFC
	0x035CA508 LDR X0, [X24]
	0x035CA50C LDR X8, [X0 + 0xB8]
	0x035CA510 ADRP X20, 0xB6E000
	0x035CA514 LDR X22, [X8 + 0x50]
	0x035CA518 LDR X20, [X20 + 0x320]
	0x035CA51C CBNZ X22, 0x35CA570
	0x035CA520 LDR W8, [X0 + 0xE0]
	0x035CA524 CBNZ W8, 0x35CA530
	0x035CA528 BL 0x1C16DFC
	0x035CA52C LDR X0, [X24]
	0x035CA530 ADRP X9, 0xB6E000
	0x035CA534 LDR X8, [X0 + 0xB8]
	0x035CA538 LDR X9, [X9 + 0x280]
	0x035CA53C LDR X23, [X8]
	0x035CA540 LDR X0, [X9]
	0x035CA544 BL 0x1C16F10
	0x035CA548 ADRP X8, 0xB6E000
	0x035CA54C LDR X8, [X8 + 0x4E0]
	0x035CA550 MOV X1, X23
	0x035CA554 MOV X3, X31
	0x035CA558 MOV X22, X0
	0x035CA55C LDR X2, [X8]
	0x035CA560 BL 0x2D30128
	0x035CA564 LDR X8, [X24]
	0x035CA568 LDR X8, [X8 + 0xB8]
	0x035CA56C STR X22, [X8 + 0x50]
	0x035CA570 LDR X3, [X20]
	0x035CA574 MOV X0, X19
	0x035CA578 MOV X1, X21
	0x035CA57C MOV X2, X22
	0x035CA580 BL 0x226A1C4
	0x035CA584 LDR X0, [X24]
	0x035CA588 LDR W8, [X0 + 0xE0]
	0x035CA58C CBNZ W8, 0x35CA598
	0x035CA590 BL 0x1C16DFC
	0x035CA594 LDR X0, [X24]
	0x035CA598 LDR X8, [X0 + 0xB8]
	0x035CA59C LDR X21, [X8 + 0x58]
	0x035CA5A0 CBNZ X21, 0x35CA5F4
	0x035CA5A4 LDR W8, [X0 + 0xE0]
	0x035CA5A8 CBNZ W8, 0x35CA5B4
	0x035CA5AC BL 0x1C16DFC
	0x035CA5B0 LDR X0, [X24]
	0x035CA5B4 ADRP X9, 0xB6E000
	0x035CA5B8 LDR X8, [X0 + 0xB8]
	0x035CA5BC LDR X9, [X9 + 0x1D8]
	0x035CA5C0 LDR X22, [X8]
	0x035CA5C4 LDR X0, [X9]
	0x035CA5C8 BL 0x1C16F10
	0x035CA5CC ADRP X8, 0xB6E000
	0x035CA5D0 LDR X8, [X8 + 0x390]
	0x035CA5D4 MOV X1, X22
	0x035CA5D8 MOV X3, X31
	0x035CA5DC MOV X21, X0
	0x035CA5E0 LDR X2, [X8]
	0x035CA5E4 BL 0x2D2D8D4
	0x035CA5E8 LDR X0, [X24]
	0x035CA5EC LDR X8, [X0 + 0xB8]
	0x035CA5F0 STR X21, [X8 + 0x58]
	0x035CA5F4 LDR W8, [X0 + 0xE0]
	0x035CA5F8 CBNZ W8, 0x35CA604
	0x035CA5FC BL 0x1C16DFC
	0x035CA600 LDR X0, [X24]
	0x035CA604 LDR X8, [X0 + 0xB8]
	0x035CA608 ADRP X20, 0xB6E000
	0x035CA60C LDR X22, [X8 + 0x60]
	0x035CA610 LDR X20, [X20 + 0x328]
	0x035CA614 CBNZ X22, 0x35CA668
	0x035CA618 LDR W8, [X0 + 0xE0]
	0x035CA61C CBNZ W8, 0x35CA628
	0x035CA620 BL 0x1C16DFC
	0x035CA624 LDR X0, [X24]
	0x035CA628 ADRP X9, 0xB6E000
	0x035CA62C LDR X8, [X0 + 0xB8]
	0x035CA630 LDR X9, [X9 + 0x298]
	0x035CA634 LDR X23, [X8]
	0x035CA638 LDR X0, [X9]
	0x035CA63C BL 0x1C16F10
	0x035CA640 ADRP X8, 0xB6E000
	0x035CA644 LDR X8, [X8 + 0x398]
	0x035CA648 MOV X1, X23
	0x035CA64C MOV X3, X31
	0x035CA650 MOV X22, X0
	0x035CA654 LDR X2, [X8]
	0x035CA658 BL 0x2D30350
	0x035CA65C LDR X8, [X24]
	0x035CA660 LDR X8, [X8 + 0xB8]
	0x035CA664 STR X22, [X8 + 0x60]
	0x035CA668 LDR X3, [X20]
	0x035CA66C MOV X0, X19
	0x035CA670 MOV X1, X21
	0x035CA674 MOV X2, X22
	0x035CA678 BL 0x226A38C
	0x035CA67C LDR X0, [X24]
	0x035CA680 LDR W8, [X0 + 0xE0]
	0x035CA684 CBNZ W8, 0x35CA690
	0x035CA688 BL 0x1C16DFC
	0x035CA68C LDR X0, [X24]
	0x035CA690 LDR X8, [X0 + 0xB8]
	0x035CA694 LDR X21, [X8 + 0x68]
	0x035CA698 CBNZ X21, 0x35CA6EC
	0x035CA69C LDR W8, [X0 + 0xE0]
	0x035CA6A0 CBNZ W8, 0x35CA6AC
	0x035CA6A4 BL 0x1C16DFC
	0x035CA6A8 LDR X0, [X24]
	0x035CA6AC ADRP X9, 0xB6E000
	0x035CA6B0 LDR X8, [X0 + 0xB8]
	0x035CA6B4 LDR X9, [X9 + 0x250]
	0x035CA6B8 LDR X22, [X8]
	0x035CA6BC LDR X0, [X9]
	0x035CA6C0 BL 0x1C16F10
	0x035CA6C4 ADRP X8, 0xB6E000
	0x035CA6C8 LDR X8, [X8 + 0x3A0]
	0x035CA6CC MOV X1, X22
	0x035CA6D0 MOV X3, X31
	0x035CA6D4 MOV X21, X0
	0x035CA6D8 LDR X2, [X8]
	0x035CA6DC BL 0x2D33B34
	0x035CA6E0 LDR X0, [X24]
	0x035CA6E4 LDR X8, [X0 + 0xB8]
	0x035CA6E8 STR X21, [X8 + 0x68]
	0x035CA6EC LDR W8, [X0 + 0xE0]
	0x035CA6F0 CBNZ W8, 0x35CA6FC
	0x035CA6F4 BL 0x1C16DFC
	0x035CA6F8 LDR X0, [X24]
	0x035CA6FC LDR X8, [X0 + 0xB8]
	0x035CA700 ADRP X20, 0xB6E000
	0x035CA704 LDR X22, [X8 + 0x70]
	0x035CA708 LDR X20, [X20 + 0x358]
	0x035CA70C CBNZ X22, 0x35CA760
	0x035CA710 LDR W8, [X0 + 0xE0]
	0x035CA714 CBNZ W8, 0x35CA720
	0x035CA718 BL 0x1C16DFC
	0x035CA71C LDR X0, [X24]
	0x035CA720 ADRP X9, 0xB6E000
	0x035CA724 LDR X8, [X0 + 0xB8]
	0x035CA728 LDR X9, [X9 + 0x2A8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE17000
	007 Move W8, [X21+459]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xB53000
	015 Move X0, [X0+1576]
	016 Call 0x1C17CF4
	017 Move X0, 0xB2A000
	018 Move X0, [X0+1872]
	019 Call 0x1C17CF4
	020 Move X0, 0xB53000
	021 Move X0, [X0+1584]
	022 Call 0x1C17CF4
	023 Move X0, 0xB53000
	024 Move X0, [X0+1592]
	025 Call 0x1C17CF4
	026 Move X0, 0xB53000
	027 Move X0, [X0+1600]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+459], W8
	031 Move [X31+8], X31
	032 Compare X19, 0
	033 JumpIfEqual {165}
	034 Move X22, 0xB2A000
	035 Move X8, [X19]
	036 Move X22, [X22+1872]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X22]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 4
	048 Move X0, X19
	049 Call 0x1C5D788
	050 Move W9, [X10]
	051 Add W9, W9, 4
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X19
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move W1, W0
	059 Add X2, X31, 8
	060 Move X0, X20
	061 Call StateOperationPool.GetPoolForType, X0, X1, X2
	062 Move X0, [X31+8]
	063 Compare X0, 0
	064 JumpIfEqual {165}
	065 Move W8, [X0+32]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, 0xB53000
	068 Move X8, [X8+1592]
	069 Move X1, [X8]
	070 Call Queue`1<Object>.Dequeue, X0
	071 Compare X0, 0
	072 JumpIfEqual {165}
	073 Move X8, [X0]
	074 Move X1, [X22]
	075 Move X21, X0
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move W2, 8
	086 Move X0, X21
	087 Call 0x1C5D788
	088 Move X8, [X19]
	089 Move X1, [X22]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move W2, 7
	100 Move X0, X19
	101 Call 0x1C5D788
	102 Move W9, [X10]
	103 Add W9, W9, 8
	104 Add X8, X8, W9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X2, [X0+8]
	108 Move X0, X21
	109 Move X1, X19
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move W9, [X10]
	112 Add W9, W9, 7
	113 Add X8, X8, W9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X21, X0
	120 Move X8, [X19]
	121 Move X20, [X20+24]
	122 Move X1, [X22]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 4
	133 Move X0, X19
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 4
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X19
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Compare X20, 0
	144 JumpIfEqual {165}
	145 Move X8, 0xB53000
	146 Move X8, [X8+1584]
	147 Move W1, W0
	148 Move X0, X20
	149 Move X2, [X8]
	150 Call List`1<Object>.get_Item, X0, X1
	151 Compare X0, 0
	152 JumpIfEqual {165}
	153 Move X8, 0xB53000
	154 Move X8, [X8+1576]
	155 Move X1, X21
	156 Move X2, [X8]
	157 Call HashSet`1<Object>.Add, X0, X1
	158 Move X0, X21
	159 Move X20, [X31+32]
	160 Move X19, [X31+40]
	161 Move X22, [X31+16]
	162 Move X21, [X31+24]
	163 Move X30, [X31+48]
	164 Return X0
	165 Call 0x1C17F20

Method: System.Void DeallocateInstance(SpatialSys.ObservableState.IStateOperation operation)

Disassembly:
	0x035CA72C LDR X23, [X8]
	0x035CA730 LDR X0, [X9]
	0x035CA734 BL 0x1C16F10
	0x035CA738 ADRP X8, 0xB6E000
	0x035CA73C LDR X8, [X8 + 0x3A8]
	0x035CA740 MOV X1, X23
	0x035CA744 MOV X3, X31
	0x035CA748 MOV X22, X0
	0x035CA74C LDR X2, [X8]
	0x035CA750 BL 0x2D30D04
	0x035CA754 LDR X8, [X24]
	0x035CA758 LDR X8, [X8 + 0xB8]
	0x035CA75C STR X22, [X8 + 0x70]
	0x035CA760 LDR X3, [X20]
	0x035CA764 MOV X0, X19
	0x035CA768 MOV X1, X21
	0x035CA76C MOV X2, X22
	0x035CA770 BL 0x226A8E4
	0x035CA774 LDR X0, [X24]
	0x035CA778 LDR W8, [X0 + 0xE0]
	0x035CA77C CBNZ W8, 0x35CA788
	0x035CA780 BL 0x1C16DFC
	0x035CA784 LDR X0, [X24]
	0x035CA788 LDR X8, [X0 + 0xB8]
	0x035CA78C LDR X21, [X8 + 0x78]
	0x035CA790 CBNZ X21, 0x35CA7E4
	0x035CA794 LDR W8, [X0 + 0xE0]
	0x035CA798 CBNZ W8, 0x35CA7A4
	0x035CA79C BL 0x1C16DFC
	0x035CA7A0 LDR X0, [X24]
	0x035CA7A4 ADRP X9, 0xB6E000
	0x035CA7A8 LDR X8, [X0 + 0xB8]
	0x035CA7AC LDR X9, [X9 + 0x2B8]
	0x035CA7B0 LDR X22, [X8]
	0x035CA7B4 LDR X0, [X9]
	0x035CA7B8 BL 0x1C16F10
	0x035CA7BC ADRP X8, 0xB6E000
	0x035CA7C0 LDR X8, [X8 + 0x3B0]
	0x035CA7C4 MOV X1, X22
	0x035CA7C8 MOV X3, X31
	0x035CA7CC MOV X21, X0
	0x035CA7D0 LDR X2, [X8]
	0x035CA7D4 BL 0x2D33BD4
	0x035CA7D8 LDR X0, [X24]
	0x035CA7DC LDR X8, [X0 + 0xB8]
	0x035CA7E0 STR X21, [X8 + 0x78]
	0x035CA7E4 LDR W8, [X0 + 0xE0]
	0x035CA7E8 CBNZ W8, 0x35CA7F4
	0x035CA7EC BL 0x1C16DFC
	0x035CA7F0 LDR X0, [X24]
	0x035CA7F4 LDR X8, [X0 + 0xB8]
	0x035CA7F8 ADRP X20, 0xB6E000
	0x035CA7FC LDR X22, [X8 + 0x80]
	0x035CA800 LDR X20, [X20 + 0x360]
	0x035CA804 CBNZ X22, 0x35CA858
	0x035CA808 LDR W8, [X0 + 0xE0]
	0x035CA80C CBNZ W8, 0x35CA818
	0x035CA810 BL 0x1C16DFC
	0x035CA814 LDR X0, [X24]
	0x035CA818 ADRP X9, 0xB6E000
	0x035CA81C LDR X8, [X0 + 0xB8]
	0x035CA820 LDR X9, [X9 + 0x1A0]
	0x035CA824 LDR X23, [X8]
	0x035CA828 LDR X0, [X9]
	0x035CA82C BL 0x1C16F10
	0x035CA830 ADRP X8, 0xB6E000
	0x035CA834 LDR X8, [X8 + 0x3B8]
	0x035CA838 MOV X1, X23
	0x035CA83C MOV X3, X31
	0x035CA840 MOV X22, X0
	0x035CA844 LDR X2, [X8]
	0x035CA848 BL 0x2D30E18
	0x035CA84C LDR X8, [X24]
	0x035CA850 LDR X8, [X8 + 0xB8]
	0x035CA854 STR X22, [X8 + 0x80]
	0x035CA858 LDR X3, [X20]
	0x035CA85C MOV X0, X19
	0x035CA860 MOV X1, X21
	0x035CA864 MOV X2, X22
	0x035CA868 BL 0x226A9C8
	0x035CA86C LDR X0, [X24]
	0x035CA870 LDR W8, [X0 + 0xE0]
	0x035CA874 CBNZ W8, 0x35CA880
	0x035CA878 BL 0x1C16DFC
	0x035CA87C LDR X0, [X24]
	0x035CA880 LDR X8, [X0 + 0xB8]
	0x035CA884 LDR X21, [X8 + 0x88]
	0x035CA888 CBNZ X21, 0x35CA8DC
	0x035CA88C LDR W8, [X0 + 0xE0]
	0x035CA890 CBNZ W8, 0x35CA89C
	0x035CA894 BL 0x1C16DFC
	0x035CA898 LDR X0, [X24]
	0x035CA89C ADRP X9, 0xB6E000
	0x035CA8A0 LDR X8, [X0 + 0xB8]
	0x035CA8A4 LDR X9, [X9 + 0x228]
	0x035CA8A8 LDR X22, [X8]
	0x035CA8AC LDR X0, [X9]
	0x035CA8B0 BL 0x1C16F10
	0x035CA8B4 ADRP X8, 0xB6E000
	0x035CA8B8 LDR X8, [X8 + 0x3C0]
	0x035CA8BC MOV X1, X22
	0x035CA8C0 MOV X3, X31
	0x035CA8C4 MOV X21, X0
	0x035CA8C8 LDR X2, [X8]
	0x035CA8CC BL 0x2D33D14
	0x035CA8D0 LDR X0, [X24]
	0x035CA8D4 LDR X8, [X0 + 0xB8]
	0x035CA8D8 STR X21, [X8 + 0x88]
	0x035CA8DC LDR W8, [X0 + 0xE0]
	0x035CA8E0 CBNZ W8, 0x35CA8EC
	0x035CA8E4 BL 0x1C16DFC
	0x035CA8E8 LDR X0, [X24]
	0x035CA8EC LDR X8, [X0 + 0xB8]
	0x035CA8F0 ADRP X20, 0xB6E000
	0x035CA8F4 LDR X22, [X8 + 0x90]
	0x035CA8F8 LDR X20, [X20 + 0x368]
	0x035CA8FC CBNZ X22, 0x35CA950
	0x035CA900 LDR W8, [X0 + 0xE0]
	0x035CA904 CBNZ W8, 0x35CA910
	0x035CA908 BL 0x1C16DFC
	0x035CA90C LDR X0, [X24]
	0x035CA910 ADRP X9, 0xB6E000
	0x035CA914 LDR X8, [X0 + 0xB8]
	0x035CA918 LDR X9, [X9 + 0x1E0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xE17000
	007 Move W8, [X21+460]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB6F000
	015 Move X0, [X0+312]
	016 Call 0x1C17CF4
	017 Move X0, 0xB2A000
	018 Move X0, [X0+1872]
	019 Call 0x1C17CF4
	020 Move X0, 0xB53000
	021 Move X0, [X0+1584]
	022 Call 0x1C17CF4
	023 Move X0, 0xB6F000
	024 Move X0, [X0+232]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+460], W8
	028 Move [X31+8], X31
	029 Compare X19, 0
	030 JumpIfEqual {133}
	031 Move X21, 0xB2A000
	032 Move X8, [X19]
	033 Move X21, [X21+1872]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X21]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 6
	045 Move X0, X19
	046 Call 0x1C5D788
	047 Move W9, [X10]
	048 Add W9, W9, 6
	049 Add X8, X8, W9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X19
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X19]
	056 Move X1, [X21]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 4
	067 Move X0, X19
	068 Call 0x1C5D788
	069 Move W9, [X10]
	070 Add W9, W9, 4
	071 Add X8, X8, W9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X19
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move W1, W0
	078 Add X2, X31, 8
	079 Move X0, X20
	080 Call StateOperationPool.GetPoolForType, X0, X1, X2
	081 Move X0, [X31+8]
	082 Compare X0, 0
	083 JumpIfEqual {133}
	084 Move X8, 0xB6F000
	085 Move X8, [X8+232]
	086 Move X1, X19
	087 Move X2, [X8]
	088 Call Queue`1<Object>.Enqueue, X0, X1
	089 Move X8, [X19]
	090 Move X20, [X20+24]
	091 Move X1, [X21]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move W2, 4
	102 Move X0, X19
	103 Call 0x1C5D788
	104 Move W9, [X10]
	105 Add W9, W9, 4
	106 Add X8, X8, W9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X19
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X20, 0
	113 JumpIfEqual {133}
	114 Move X8, 0xB53000
	115 Move X8, [X8+1584]
	116 Move W1, W0
	117 Move X0, X20
	118 Move X2, [X8]
	119 Call List`1<Object>.get_Item, X0, X1
	120 Compare X0, 0
	121 JumpIfEqual {133}
	122 Move X8, 0xB6F000
	123 Move X8, [X8+312]
	124 Move X1, X19
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X30, [X31+16]
	128 Move X21, [X31+24]
	129 Move X2, [X8]
	130 Add X31, X31, 48
	131 Call HashSet`1<Object>.Remove, X0, X1
	132 Return 
	133 Call 0x1C17F20

Method: System.Void DeallocateAll()

Disassembly:
	0x035C9B40 ADRP X0, 0xB6F000
	0x035C9B44 LDR X0, [X0 + 0x180]
	0x035C9B48 BL 0x1C16CF4
	0x035C9B4C ADRP X0, 0xB6F000
	0x035C9B50 LDR X0, [X0 + 0x188]
	0x035C9B54 BL 0x1C16CF4
	0x035C9B58 ADRP X0, 0xB6F000
	0x035C9B5C LDR X0, [X0 + 0x190]
	0x035C9B60 BL 0x1C16CF4
	0x035C9B64 ADRP X0, 0xB6F000
	0x035C9B68 LDR X0, [X0 + 0x198]
	0x035C9B6C BL 0x1C16CF4
	0x035C9B70 ADRP X0, 0xB6F000
	0x035C9B74 LDR X0, [X0 + 0x1A0]
	0x035C9B78 BL 0x1C16CF4
	0x035C9B7C ADRP X0, 0xB6F000
	0x035C9B80 LDR X0, [X0 + 0x1A8]
	0x035C9B84 BL 0x1C16CF4
	0x035C9B88 ADRP X0, 0xB6F000
	0x035C9B8C LDR X0, [X0 + 0x1B0]
	0x035C9B90 BL 0x1C16CF4
	0x035C9B94 ADRP X0, 0xB6F000
	0x035C9B98 LDR X0, [X0 + 0x1B8]
	0x035C9B9C BL 0x1C16CF4
	0x035C9BA0 ADRP X0, 0xB6F000
	0x035C9BA4 LDR X0, [X0 + 0x1C0]
	0x035C9BA8 BL 0x1C16CF4
	0x035C9BAC ADRP X0, 0xB6F000
	0x035C9BB0 LDR X0, [X0 + 0x1C8]
	0x035C9BB4 BL 0x1C16CF4
	0x035C9BB8 ADRP X0, 0xB6F000
	0x035C9BBC LDR X0, [X0 + 0x1D0]
	0x035C9BC0 BL 0x1C16CF4
	0x035C9BC4 ADRP X0, 0xB6F000
	0x035C9BC8 LDR X0, [X0 + 0x1D8]
	0x035C9BCC BL 0x1C16CF4
	0x035C9BD0 ADRP X0, 0xB6F000
	0x035C9BD4 LDR X0, [X0 + 0x1E0]
	0x035C9BD8 BL 0x1C16CF4
	0x035C9BDC ADRP X0, 0xB6F000
	0x035C9BE0 LDR X0, [X0 + 0x1E8]
	0x035C9BE4 BL 0x1C16CF4
	0x035C9BE8 ADRP X0, 0xB6F000
	0x035C9BEC LDR X0, [X0 + 0x1F0]
	0x035C9BF0 BL 0x1C16CF4
	0x035C9BF4 ADRP X0, 0xB6F000
	0x035C9BF8 LDR X0, [X0 + 0x1F8]
	0x035C9BFC BL 0x1C16CF4
	0x035C9C00 ADRP X0, 0xB6F000
	0x035C9C04 LDR X0, [X0 + 0x200]
	0x035C9C08 BL 0x1C16CF4
	0x035C9C0C ADRP X0, 0xB6F000
	0x035C9C10 LDR X0, [X0 + 0x208]
	0x035C9C14 BL 0x1C16CF4
	0x035C9C18 ADRP X0, 0xB6F000
	0x035C9C1C LDR X0, [X0 + 0x210]
	0x035C9C20 BL 0x1C16CF4
	0x035C9C24 ADRP X0, 0xB6F000
	0x035C9C28 LDR X0, [X0 + 0x218]
	0x035C9C2C BL 0x1C16CF4
	0x035C9C30 ADRP X0, 0xB6F000
	0x035C9C34 LDR X0, [X0 + 0x220]
	0x035C9C38 BL 0x1C16CF4
	0x035C9C3C ADRP X0, 0xB6F000
	0x035C9C40 LDR X0, [X0 + 0x228]
	0x035C9C44 BL 0x1C16CF4
	0x035C9C48 ADRP X0, 0xB6F000
	0x035C9C4C LDR X0, [X0 + 0x230]
	0x035C9C50 BL 0x1C16CF4
	0x035C9C54 ADRP X0, 0xB6F000
	0x035C9C58 LDR X0, [X0 + 0x238]
	0x035C9C5C BL 0x1C16CF4
	0x035C9C60 ADRP X0, 0xB6F000
	0x035C9C64 LDR X0, [X0 + 0x240]
	0x035C9C68 BL 0x1C16CF4
	0x035C9C6C ADRP X0, 0xB6F000
	0x035C9C70 LDR X0, [X0 + 0x248]
	0x035C9C74 BL 0x1C16CF4
	0x035C9C78 ADRP X0, 0xB6F000
	0x035C9C7C LDR X0, [X0 + 0x250]
	0x035C9C80 BL 0x1C16CF4
	0x035C9C84 ADRP X0, 0xB6F000
	0x035C9C88 LDR X0, [X0 + 0x258]
	0x035C9C8C BL 0x1C16CF4
	0x035C9C90 ADRP X0, 0xB6F000
	0x035C9C94 LDR X0, [X0 + 0x260]
	0x035C9C98 BL 0x1C16CF4
	0x035C9C9C ADRP X0, 0xB6F000
	0x035C9CA0 LDR X0, [X0 + 0x268]
	0x035C9CA4 BL 0x1C16CF4
	0x035C9CA8 ADRP X0, 0xB6F000
	0x035C9CAC LDR X0, [X0 + 0x270]
	0x035C9CB0 BL 0x1C16CF4
	0x035C9CB4 ADRP X0, 0xB6F000
	0x035C9CB8 LDR X0, [X0 + 0x278]
	0x035C9CBC BL 0x1C16CF4
	0x035C9CC0 ADRP X0, 0xB6F000
	0x035C9CC4 LDR X0, [X0 + 0x280]
	0x035C9CC8 BL 0x1C16CF4
	0x035C9CCC ADRP X0, 0xB6F000
	0x035C9CD0 LDR X0, [X0 + 0x288]
	0x035C9CD4 BL 0x1C16CF4
	0x035C9CD8 ADRP X0, 0xB6F000
	0x035C9CDC LDR X0, [X0 + 0x290]
	0x035C9CE0 BL 0x1C16CF4
	0x035C9CE4 ADRP X0, 0xB6F000
	0x035C9CE8 LDR X0, [X0 + 0x298]
	0x035C9CEC BL 0x1C16CF4
	0x035C9CF0 ADRP X0, 0xB6F000
	0x035C9CF4 LDR X0, [X0 + 0x2A0]
	0x035C9CF8 BL 0x1C16CF4
	0x035C9CFC ADRP X0, 0xB6F000
	0x035C9D00 LDR X0, [X0 + 0x2A8]
	0x035C9D04 BL 0x1C16CF4
	0x035C9D08 ADRP X0, 0xB6F000
	0x035C9D0C LDR X0, [X0 + 0x2B0]
	0x035C9D10 BL 0x1C16CF4
	0x035C9D14 ADRP X0, 0xB6F000
	0x035C9D18 LDR X0, [X0 + 0x2B8]
	0x035C9D1C BL 0x1C16CF4
	0x035C9D20 ADRP X0, 0xB6F000
	0x035C9D24 LDR X0, [X0 + 0x2C0]
	0x035C9D28 BL 0x1C16CF4
	0x035C9D2C ADRP X0, 0xB6F000
	0x035C9D30 LDR X0, [X0 + 0x2C8]
	0x035C9D34 BL 0x1C16CF4
	0x035C9D38 ADRP X0, 0xB6F000
	0x035C9D3C LDR X0, [X0 + 0x2D0]
	0x035C9D40 BL 0x1C16CF4
	0x035C9D44 ADRP X0, 0xB6F000
	0x035C9D48 LDR X0, [X0 + 0x2D8]
	0x035C9D4C BL 0x1C16CF4
	0x035C9D50 ADRP X0, 0xB6F000
	0x035C9D54 LDR X0, [X0 + 0x2E0]
	0x035C9D58 BL 0x1C16CF4
	0x035C9D5C ADRP X0, 0xB6F000
	0x035C9D60 LDR X0, [X0 + 0x2E8]
	0x035C9D64 BL 0x1C16CF4
	0x035C9D68 ADRP X0, 0xB6F000
	0x035C9D6C LDR X0, [X0 + 0x2F0]
	0x035C9D70 BL 0x1C16CF4
	0x035C9D74 ADRP X0, 0xB6F000
	0x035C9D78 LDR X0, [X0 + 0x2F8]
	0x035C9D7C BL 0x1C16CF4
	0x035C9D80 ADRP X0, 0xB6F000
	0x035C9D84 LDR X0, [X0 + 0x300]
	0x035C9D88 BL 0x1C16CF4
	0x035C9D8C ADRP X0, 0xB6F000
	0x035C9D90 LDR X0, [X0 + 0x308]
	0x035C9D94 BL 0x1C16CF4
	0x035C9D98 ADRP X0, 0xB6F000
	0x035C9D9C LDR X0, [X0 + 0x310]
	0x035C9DA0 BL 0x1C16CF4
	0x035C9DA4 ADRP X0, 0xB6F000
	0x035C9DA8 LDR X0, [X0 + 0x318]
	0x035C9DAC BL 0x1C16CF4
	0x035C9DB0 ADRP X0, 0xB6F000
	0x035C9DB4 LDR X0, [X0 + 0x320]
	0x035C9DB8 BL 0x1C16CF4
	0x035C9DBC ADRP X0, 0xB6F000
	0x035C9DC0 LDR X0, [X0 + 0x328]
	0x035C9DC4 BL 0x1C16CF4
	0x035C9DC8 ADRP X0, 0xB6F000
	0x035C9DCC LDR X0, [X0 + 0x330]
	0x035C9DD0 BL 0x1C16CF4
	0x035C9DD4 ADRP X0, 0xB6F000
	0x035C9DD8 LDR X0, [X0 + 0x338]
	0x035C9DDC BL 0x1C16CF4
	0x035C9DE0 ADRP X0, 0xB6F000
	0x035C9DE4 LDR X0, [X0 + 0x340]
	0x035C9DE8 BL 0x1C16CF4
	0x035C9DEC ADRP X0, 0xB6F000
	0x035C9DF0 LDR X0, [X0 + 0x348]
	0x035C9DF4 BL 0x1C16CF4
	0x035C9DF8 ADRP X0, 0xB6F000
	0x035C9DFC LDR X0, [X0 + 0x350]
	0x035C9E00 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0xE18000
	015 Move W8, [X20+461]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0xB70000
	022 Move X0, [X0+176]
	023 Call 0x1C17CF4
	024 Move X0, 0xB70000
	025 Move X0, [X0+184]
	026 Call 0x1C17CF4
	027 Move X0, 0xB70000
	028 Move X0, [X0+192]
	029 Call 0x1C17CF4
	030 Move X0, 0xB70000
	031 Move X0, [X0+200]
	032 Call 0x1C17CF4
	033 Move X0, 0xB70000
	034 Move X0, [X0+208]
	035 Call 0x1C17CF4
	036 Move X0, 0xB2B000
	037 Move X0, [X0+1872]
	038 Call 0x1C17CF4
	039 Move X0, 0xB70000
	040 Move X0, [X0+216]
	041 Call 0x1C17CF4
	042 Move X0, 0xB54000
	043 Move X0, [X0+1584]
	044 Call 0x1C17CF4
	045 Move X0, 0xB70000
	046 Move X0, [X0+224]
	047 Call 0x1C17CF4
	048 Move X0, 0xB70000
	049 Move X0, [X0+232]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+461], W8
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Move [X31+48], X31
	056 Move X0, [X19+24]
	057 Compare X0, 0
	058 JumpIfEqual {178}
	059 Move X25, 0xB54000
	060 Move X27, 0xB70000
	061 Move X28, 0xB70000
	062 Move X29, 0xB2B000
	063 Move X24, 0xB70000
	064 Move X26, 0xB70000
	065 Move X25, [X25+1584]
	066 Move X27, [X27+208]
	067 Move X28, [X28+184]
	068 Move X29, [X29+1872]
	069 Move X24, [X24+232]
	070 Move X26, [X26+200]
	071 Move W20, W31
	072 Move W8, [X0+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X2, [X25]
	075 Move W1, W20
	076 Call List`1<Object>.get_Item, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {143}
	079 Move X21, X0
	080 Move X0, [X19+16]
	081 Compare X0, 0
	082 JumpIfEqual {178}
	083 Move X8, 0xB70000
	084 Move X8, [X8+224]
	085 Move W1, W20
	086 Move X2, [X8]
	087 Call List`1<Object>.get_Item, X0, X1
	088 Move X1, [X27]
	089 Move X22, X0
	090 Add X8, X31, 8
	091 Move X0, X21
	092 Call HashSet`1<Object>.GetEnumerator, X0
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 Move X8, [X31+24]
	095 Move [X31+2], V0
	096 Move [X31+48], X8
	097 Move X1, [X28]
	098 Add X0, X31, 32
	099 Call Enumerator<Object>.MoveNext, X0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {135}
	104 Move X23, [X31+48]
	105 Compare X23, 0
	106 JumpIfEqual {147}
	107 Move X8, [X23]
	108 Move X1, [X29]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 6
	119 Move X0, X23
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 6
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X23
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Compare X22, 0
	130 JumpIfEqual {148}
	131 Move X2, [X24]
	132 Move X0, X22
	133 Move X1, X23
	134 Call Queue`1<Object>.Enqueue, X0, X1
	135 Move X8, 0xB70000
	136 Move X8, [X8+176]
	137 Add X0, X31, 32
	138 Move X1, [X8]
	139 Call Enumerator<Object>.Dispose, X0
	140 Move X1, [X26]
	141 Move X0, X21
	142 Call HashSet`1<Object>.Clear, X0
	143 Move X0, [X19+24]
	144 Add W20, W20, 1
	145 Compare X0, 0
	146 JumpIfNotEqual {72}
	147 Call 0x1C17F20
	148 Call 0x1C17F20
	149 Move X22, X0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X22
	152 Call 0x3EB2AD0
	153 Move X23, [X0]
	154 Call 0x3EB2AE0
	155 Move X8, 0xB70000
	156 Move X8, [X8+176]
	157 Add X0, X31, 32
	158 Move X1, [X8]
	159 Call Enumerator<Object>.Dispose, X0
	160 Compare X23, 0
	161 JumpIfEqual {140}
	162 Move X0, X23
	163 Call 0x1C17F18
	164 Move X20, [X31+144]
	165 Move X19, [X31+152]
	166 Move X22, [X31+128]
	167 Move X21, [X31+136]
	168 Move X24, [X31+112]
	169 Move X23, [X31+120]
	170 Move X26, [X31+96]
	171 Move X25, [X31+104]
	172 Move X28, [X31+80]
	173 Move X27, [X31+88]
	174 Move X29, [X31+64]
	175 Move X30, [X31+72]
	176 Add X31, X31, 160
	177 Return 
	178 Call 0x1C17F20
	179 Move X23, X31
	180 Move X22, X0
	181 Move X8, 0xB70000
	182 Move X8, [X8+176]
	183 Move X1, [X8]
	184 Add X0, X31, 32
	185 Call Enumerator<Object>.Dispose, X0
	186 Compare X23, 0
	187 JumpIfNotEqual {190}
	188 Move X0, X22
	189 Call 0x1D2D690
	190 Move X0, X23
	191 Call 0x1C17F18
	192 Call 0x1991590

