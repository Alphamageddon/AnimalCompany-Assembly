Type: SpatialSys.ObservableState.StateObject/<>c__DisplayClass16_0

Method: System.Void .ctor()

Disassembly:
	0x035CFDC4 BL 0x2D29F50
	0x035CFDC8 ADRP X8, 0xB69000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <FromJSON>b__0(System.Collections.Generic.KeyValuePair`2<System.String, SpatialSys.ObservableState.IStateObject> x)

Disassembly:
	0x035D0C78 LDRH W9, [X8 + 0x12E]
	0x035D0C7C CBZ X9, 0x35D0CA0
	0x035D0C80 LDR X10, [X8 + 0xB0]
	0x035D0C84 ADD X10, X10, 0x8
	0x035D0C88 LDUR X11, [X10 - 0x8]
	0x035D0C8C CMP X11, X1
	0x035D0C90 B.EQ 0x35D0CD8
	0x035D0C94 SUBS X9, X9, 0x1
	0x035D0C98 ADD X10, X10, 0x10
	0x035D0C9C B.NE 0x35D0C88
	0x035D0CA0 MOV X0, X25
	0x035D0CA4 MOV W2, W31
	0x035D0CA8 BL 0x1C5C788
	0x035D0CAC B 0x35D0CE4
	0x035D0CB0 LDR X8, [X20]
	0x035D0CB4 MOV X0, X20
	0x035D0CB8 MOV X1, X31
	0x035D0CBC LDR X9, [X8 + 0x3B8]
	0x035D0CC0 LDR X3, [X8 + 0x3C0]
	0x035D0CC4 LDR W8, [X31 + 0x18]
	0x035D0CC8 AND W2, W8, 0x1
	0x035D0CCC BLR X9
	0x035D0CD0 MOV X21, X0
	0x035D0CD4 B 0x35D1164
	0x035D0CD8 LDRSW X9, [X10]
	0x035D0CDC ADD X8, X8, X9, 0x4, LSL
	0x035D0CE0 ADD X0, X8, 0x138
	0x035D0CE4 LDP X8, X1, [X0]
	0x035D0CE8 MOV X0, X25
	0x035D0CEC BLR X8
	0x035D0CF0 CMP W0, 0x1
	0x035D0CF4 STR W0, [X31 + 0x1C]
	0x035D0CF8 B.LT 0x35D1164
	0x035D0CFC STR X21, [X31 + 0x10]
	0x035D0D00 ADRP X29, 0xB4D000
	0x035D0D04 ADRP X19, 0xB24000
	0x035D0D08 ADRP X22, 0xB68000
	0x035D0D0C ADRP X23, 0xB68000
	0x035D0D10 LDR X29, [X29 + 0x310]
	0x035D0D14 LDR X19, [X19 + 0x1B0]
	0x035D0D18 LDR X22, [X22 + 0x6F0]
	0x035D0D1C LDR X23, [X23 + 0x6F8]
	0x035D0D20 MOV W24, W31
	0x035D0D24 STR X25, [X31 + 0x8]
	0x035D0D28 LDR X8, [X25]
	0x035D0D2C ADRP X10, 0xB68000
	0x035D0D30 LDRH W9, [X8 + 0x12E]
	0x035D0D34 LDR X10, [X10 + 0x6E0]
	0x035D0D38 LDR X1, [X10]
	0x035D0D3C CBZ X9, 0x35D0D60
	0x035D0D40 LDR X10, [X8 + 0xB0]
	0x035D0D44 ADD X10, X10, 0x8
	0x035D0D48 LDUR X11, [X10 - 0x8]
	0x035D0D4C CMP X11, X1
	0x035D0D50 B.EQ 0x35D0D70
	0x035D0D54 SUBS X9, X9, 0x1
	0x035D0D58 ADD X10, X10, 0x10
	0x035D0D5C B.NE 0x35D0D48
	0x035D0D60 MOV X0, X25
	0x035D0D64 MOV W2, W31
	0x035D0D68 BL 0x1C5C788
	0x035D0D6C B 0x35D0D7C
	0x035D0D70 LDRSW X9, [X10]
	0x035D0D74 ADD X8, X8, X9, 0x4, LSL
	0x035D0D78 ADD X0, X8, 0x138
	0x035D0D7C LDP X8, X2, [X0]
	0x035D0D80 MOV X0, X25
	0x035D0D84 MOV W1, W24
	0x035D0D88 BLR X8
	0x035D0D8C LDR X8, [X29]
	0x035D0D90 MOV X26, X0
	0x035D0D94 LDR W9, [X8 + 0xE0]
	0x035D0D98 CBNZ W9, 0x35D0DA8
	0x035D0D9C MOV X0, X8
	0x035D0DA0 BL 0x1C16DFC
	0x035D0DA4 LDR X8, [X29]
	0x035D0DA8 LDR X8, [X8 + 0xB8]
	0x035D0DAC LDR X21, [X8 + 0x8]
	0x035D0DB0 STRB W31, [X31 + 0x2C]
	0x035D0DB4 ADD X1, X31, 0x2C
	0x035D0DB8 MOV X0, X21
	0x035D0DBC MOV X2, X31
	0x035D0DC0 STR X21, [X31 + 0x20]
	0x035D0DC4 BL 0x33DE64C
	0x035D0DC8 LDR X0, [X29]
	0x035D0DCC LDR W8, [X0 + 0xE0]
	0x035D0DD0 CBNZ W8, 0x35D0DDC
	0x035D0DD4 BL 0x1C16DFC
	0x035D0DD8 LDR X0, [X29]
	0x035D0DDC LDR X8, [X0 + 0xB8]
	0x035D0DE0 LDR X0, [X8 + 0x8]
	0x035D0DE4 CBZ X0, 0x35D10D0
	0x035D0DE8 ADRP X8, 0xB68000
	0x035D0DEC LDR X8, [X8 + 0x6E8]
	0x035D0DF0 LDR X1, [X8]
	0x035D0DF4 BL 0x2601ECC
	0x035D0DF8 MOV X27, X26

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xE11000
	008 Move X23, 0xB69000
	009 Move W8, [X21+514]
	010 Move X23, [X23+1688]
	011 Move X20, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0xB69000
	019 Move X0, [X0+1696]
	020 Call 0x1C17CF4
	021 Move X0, 0xB68000
	022 Move X0, [X0+2168]
	023 Call 0x1C17CF4
	024 Move X0, 0xB25000
	025 Move X0, [X0+432]
	026 Call 0x1C17CF4
	027 Move X0, 0xB69000
	028 Move X0, [X0+1552]
	029 Call 0x1C17CF4
	030 Move X0, 0xB69000
	031 Move X0, [X0+1704]
	032 Call 0x1C17CF4
	033 Move X0, 0xB69000
	034 Move X0, [X0+1688]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+514], W8
	038 Move X0, [X23]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X21, X0
	042 Call Object..ctor, X0
	043 Compare X21, 0
	044 JumpIfEqual {111}
	045 Move [X21+16], X22
	046 Move [X21+24], X20
	047 Compare X20, 0
	048 JumpIfEqual {111}
	049 Move X10, 0xB25000
	050 Move X8, [X20]
	051 Move X10, [X10+432]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 15
	063 Move X0, X20
	064 Call 0x1C5D788
	065 Move W9, [X10]
	066 Add W9, W9, 15
	067 Add X8, X8, W9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X20
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {78}
	077 Move W8, W31
	078 Move X0, [X19+16]
	079 Compare X0, 0
	080 JumpIfEqual {111}
	081 Move X1, X31
	082 Call JSONNode.get_Linq, X0
	083 Move X8, 0xB68000
	084 Move X8, [X8+2168]
	085 Move X19, X0
	086 Move X8, [X8]
	087 Move X0, X8
	088 Call 0x1C17F10
	089 Move X8, 0xB69000
	090 Move X8, [X8+1704]
	091 Move X1, X21
	092 Move X3, X31
	093 Move X20, X0
	094 Move X2, [X8]
	095 Call Func`2<KeyValuePair`2<Object, Object>, Boolean>..ctor, X0, X1, X2
	096 Move X8, 0xB69000
	097 Move X8, [X8+1696]
	098 Move X0, X19
	099 Move X1, X20
	100 Move X2, [X8]
	101 Call 0x21B4370, X0, X1
	102 Xor W8, W0, 1
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 And W0, W8, 1
	108 Move X30, [X31+48]
	109 Move X23, [X31+56]
	110 Return X0
	111 Call 0x1C17F20

