Type: Nakama.Client/<AuthenticateAppleAsync>d__44

Method: System.Void MoveNext()

Disassembly:
	0x0344DD38 MOVZ W0, 0x8
	0x0344DD3C BL 0x3EB1AF0
	0x0344DD40 LDR X8, [X20]
	0x0344DD44 STR X8, [X0]
	0x0344DD48 ADRP X1, 0xA67000
	0x0344DD4C ADD X1, X1, 0xE58
	0x0344DD50 MOV X2, X31
	0x0344DD54 BL 0x3EB1B00
	0x0344DD58 MOV X20, X0
	0x0344DD5C BL 0x3EB1AE0
	0x0344DD60 MOV X0, X20
	0x0344DD64 BL 0x1D2C690
	0x0344DD68 BL 0x1990590
	0x0344DD6C STR X30, [X31 - 0x30]!
	0x0344DD70 STP X22, X21, [X31 + 0x10]
	0x0344DD74 STP X20, X19, [X31 + 0x20]
	0x0344DD78 ADRP X22, 0xF90000
	0x0344DD7C ADRP X21, 0xCE2000
	0x0344DD80 LDRB W8, [X22 + 0x75C]
	0x0344DD84 LDR X21, [X21 + 0x630]
	0x0344DD88 MOV X19, X1
	0x0344DD8C MOV X20, X0
	0x0344DD90 TBNZ X8, 0x0, 0x344DDB4
	0x0344DD94 ADRP X0, 0xCE2000
	0x0344DD98 LDR X0, [X0 + 0xAA8]
	0x0344DD9C BL 0x1C16CF4
	0x0344DDA0 ADRP X0, 0xCE2000
	0x0344DDA4 LDR X0, [X0 + 0x630]
	0x0344DDA8 BL 0x1C16CF4
	0x0344DDAC MOVZ W8, 0x1
	0x0344DDB0 STRB W8, [X22 + 0x75C]
	0x0344DDB4 LDR X0, [X21]
	0x0344DDB8 ADRP X21, 0xCE2000
	0x0344DDBC LDR W8, [X0 + 0xE0]
	0x0344DDC0 LDR X21, [X21 + 0xAA8]
	0x0344DDC4 CBNZ W8, 0x344DDCC
	0x0344DDC8 BL 0x1C16DFC
	0x0344DDCC LDR X2, [X21]
	0x0344DDD0 ADD X0, X20, 0x8
	0x0344DDD4 MOV X1, X19
	0x0344DDD8 LDP X20, X19, [X31 + 0x20]
	0x0344DDDC LDP X22, X21, [X31 + 0x10]
	0x0344DDE0 LDR X30, [X31], #0x30
	0x0344DDE4 B 0x2632228
	0x0344DDE8 SUB X31, X31, 0x60
	0x0344DDEC STP X30, X25, [X31 + 0x20]
	0x0344DDF0 STP X24, X23, [X31 + 0x30]
	0x0344DDF4 STP X22, X21, [X31 + 0x40]
	0x0344DDF8 STP X20, X19, [X31 + 0x50]
	0x0344DDFC ADRP X20, 0xF90000
	0x0344DE00 LDRB W8, [X20 + 0x75D]
	0x0344DE04 MOV X19, X0
	0x0344DE08 TBNZ X8, 0x0, 0x344DEBC
	0x0344DE0C ADRP X0, 0xCE2000
	0x0344DE10 LDR X0, [X0 + 0xAE0]
	0x0344DE14 BL 0x1C16CF4
	0x0344DE18 ADRP X0, 0xCE2000
	0x0344DE1C LDR X0, [X0 + 0xA50]
	0x0344DE20 BL 0x1C16CF4
	0x0344DE24 ADRP X0, 0xCE2000
	0x0344DE28 LDR X0, [X0 + 0x630]
	0x0344DE2C BL 0x1C16CF4
	0x0344DE30 ADRP X0, 0xCE2000
	0x0344DE34 LDR X0, [X0 + 0xA58]
	0x0344DE38 BL 0x1C16CF4
	0x0344DE3C ADRP X0, 0xCE2000
	0x0344DE40 LDR X0, [X0 + 0xA60]
	0x0344DE44 BL 0x1C16CF4
	0x0344DE48 ADRP X0, 0xCE2000
	0x0344DE4C LDR X0, [X0 + 0x7C8]
	0x0344DE50 BL 0x1C16CF4
	0x0344DE54 ADRP X0, 0xCE2000
	0x0344DE58 LDR X0, [X0 + 0x7D0]
	0x0344DE5C BL 0x1C16CF4
	0x0344DE60 ADRP X0, 0xCE2000
	0x0344DE64 LDR X0, [X0 + 0xA68]
	0x0344DE68 BL 0x1C16CF4
	0x0344DE6C ADRP X0, 0xCE2000
	0x0344DE70 LDR X0, [X0 + 0xA70]
	0x0344DE74 BL 0x1C16CF4
	0x0344DE78 ADRP X0, 0xCE2000
	0x0344DE7C LDR X0, [X0 + 0xA78]
	0x0344DE80 BL 0x1C16CF4
	0x0344DE84 ADRP X0, 0xCE2000
	0x0344DE88 LDR X0, [X0 + 0xA80]
	0x0344DE8C BL 0x1C16CF4
	0x0344DE90 ADRP X0, 0xCE2000
	0x0344DE94 LDR X0, [X0 + 0xA88]
	0x0344DE98 BL 0x1C16CF4
	0x0344DE9C ADRP X0, 0xCE2000
	0x0344DEA0 LDR X0, [X0 + 0xAE8]
	0x0344DEA4 BL 0x1C16CF4
	0x0344DEA8 ADRP X0, 0xCE2000
	0x0344DEAC LDR X0, [X0 + 0xAF0]
	0x0344DEB0 BL 0x1C16CF4
	0x0344DEB4 MOVZ W8, 0x1
	0x0344DEB8 STRB W8, [X20 + 0x75D]
	0x0344DEBC STR X31, [X31 + 0x18]
	0x0344DEC0 ADRP X25, 0xCE2000
	0x0344DEC4 LDR W8, [X19]
	0x0344DEC8 LDR X25, [X25 + 0x630]
	0x0344DECC CBZ W8, 0x344E038
	0x0344DED0 ADRP X8, 0xCE2000
	0x0344DED4 LDR X8, [X8 + 0xAF0]
	0x0344DED8 LDR X24, [X19 + 0x20]
	0x0344DEDC LDR X0, [X8]
	0x0344DEE0 BL 0x1C16F10
	0x0344DEE4 MOV X22, X0
	0x0344DEE8 MOV X1, X31
	0x0344DEEC BL 0x33BDD8C
	0x0344DEF0 CBZ X22, 0x344E200
	0x0344DEF4 LDR X8, [X19 + 0x20]
	0x0344DEF8 STR X8, [X22 + 0x10]
	0x0344DEFC LDUR V0, [X19 + 0x28]
	0x0344DF00 STUR V0, [X22 + 0x18]
	0x0344DF04 LDR X8, [X19 + 0x38]
	0x0344DF08 STR X8, [X22 + 0x28]
	0x0344DF0C LDRB W8, [X19 + 0x40]
	0x0344DF10 STRB W8, [X22 + 0x30]
	0x0344DF14 LDR X8, [X19 + 0x48]
	0x0344DF18 STR X8, [X22 + 0x38]
	0x0344DF1C LDR X8, [X19 + 0x50]
	0x0344DF20 STR X8, [X22 + 0x40]
	0x0344DF24 CBZ X24, 0x344E204
	0x0344DF28 ADRP X8, 0xCE2000
	0x0344DF2C LDR X8, [X8 + 0xA58]
	0x0344DF30 LDR X20, [X24 + 0x58]
	0x0344DF34 LDR X0, [X8]
	0x0344DF38 BL 0x1C16F10
	0x0344DF3C ADRP X8, 0xCE2000
	0x0344DF40 LDR X8, [X8 + 0xAE8]
	0x0344DF44 MOV X21, X0
	0x0344DF48 LDR X2, [X8]
	0x0344DF4C MOV X1, X22
	0x0344DF50 MOV X3, X31
	0x0344DF54 BL 0x2D27AA8
	0x0344DF58 ADRP X8, 0xCE2000
	0x0344DF5C LDR X23, [X19 + 0x58]
	0x0344DF60 LDR X8, [X8 + 0x7C8]
	0x0344DF64 CBNZ X23, 0x344DF6C
	0x0344DF68 LDR X23, [X24 + 0x18]
	0x0344DF6C LDR X24, [X22 + 0x18]
	0x0344DF70 LDR X1, [X22 + 0x40]
	0x0344DF74 LDR X2, [X8]
	0x0344DF78 STP X31, X31, [X31 + 0x8]
	0x0344DF7C ADD X0, X31, 0x8
	0x0344DF80 BL 0x242E368
	0x0344DF84 ADRP X8, 0xCE2000
	0x0344DF88 LDR X8, [X8 + 0x7D0]
	0x0344DF8C LDR X0, [X8]
	0x0344DF90 BL 0x1C16F10
	0x0344DF94 LDP X3, X4, [X31 + 0x8]
	0x0344DF98 MOV X22, X0
	0x0344DF9C MOV X1, X24
	0x0344DFA0 MOV X2, X23
	0x0344DFA4 MOV X5, X31
	0x0344DFA8 BL 0x3478040
	0x0344DFAC CBZ X20, 0x344E208
	0x0344DFB0 ADRP X8, 0xCE2000
	0x0344DFB4 LDR X8, [X8 + 0xA68]
	0x0344DFB8 LDR X3, [X8]
	0x0344DFBC MOV X0, X20
	0x0344DFC0 MOV X1, X21
	0x0344DFC4 MOV X2, X22
	0x0344DFC8 BL 0x2243230
	0x0344DFCC CBZ X0, 0x344E20C
	0x0344DFD0 ADRP X8, 0xCE2000
	0x0344DFD4 LDR X8, [X8 + 0xA88]
	0x0344DFD8 LDR X1, [X8]
	0x0344DFDC BL 0x269F5D0
	0x0344DFE0 ADRP X8, 0xCE2000
	0x0344DFE4 LDR X8, [X8 + 0xA80]
	0x0344DFE8 STR X0, [X31 + 0x18]
	0x0344DFEC LDR X1, [X8]
	0x0344DFF0 ADD X0, X31, 0x18
	0x0344DFF4 BL 0x2677430
	0x0344DFF8 TBNZ X0, 0x0, 0x344E04C
	0x0344DFFC STR W31, [X19]
	0x0344E000 LDR X8, [X31 + 0x18]
	0x0344E004 STR X8, [X19 + 0x60]
	0x0344E008 LDR X0, [X25]
	0x0344E00C LDR W8, [X0 + 0xE0]
	0x0344E010 CBNZ W8, 0x344E018
	0x0344E014 BL 0x1C16DFC
	0x0344E018 ADRP X8, 0xCE1000
	0x0344E01C LDR X8, [X8 + 0xAE0]
	0x0344E020 ADD X0, X19, 0x8
	0x0344E024 LDR X3, [X8]
	0x0344E028 ADD X1, X31, 0x18
	0x0344E02C MOV X2, X19
	0x0344E030 BL 0x1FB9F84
	0x0344E034 B 0x344E1E4
	0x0344E038 LDR X8, [X19 + 0x60]
	0x0344E03C MOVN W9, 0x0
	0x0344E040 STR X8, [X31 + 0x18]
	0x0344E044 STR X31, [X19 + 0x60]
	0x0344E048 STR W9, [X19]
	0x0344E04C ADRP X8, 0xCE1000
	0x0344E050 LDR X8, [X8 + 0xA78]
	0x0344E054 ADD X0, X31, 0x18
	0x0344E058 LDR X1, [X8]
	0x0344E05C BL 0x2677474
	0x0344E060 MOV X20, X0
	0x0344E064 CBZ X0, 0x344E1FC
	0x0344E068 ADRP X23, 0xCE1000
	0x0344E06C LDR X8, [X20]
	0x0344E070 LDR X23, [X23 + 0xA60]
	0x0344E074 LDRH W9, [X8 + 0x12E]
	0x0344E078 LDR X1, [X23]
	0x0344E07C CBZ X9, 0x344E0A0
	0x0344E080 LDR X10, [X8 + 0xB0]
	0x0344E084 ADD X10, X10, 0x8
	0x0344E088 LDUR X11, [X10 - 0x8]
	0x0344E08C CMP X11, X1
	0x0344E090 B.EQ 0x344E0B0
	0x0344E094 SUBS X9, X9, 0x1
	0x0344E098 ADD X10, X10, 0x10
	0x0344E09C B.NE 0x344E088
	0x0344E0A0 MOVZ W2, 0x2
	0x0344E0A4 MOV X0, X20
	0x0344E0A8 BL 0x1C5C788
	0x0344E0AC B 0x344E0C0
	0x0344E0B0 LDR W9, [X10]
	0x0344E0B4 ADD W9, W9, 0x2
	0x0344E0B8 ADD X8, X8, W9, 0x4, SXTW
	0x0344E0BC ADD X0, X8, 0x138
	0x0344E0C0 LDP X8, X1, [X0]
	0x0344E0C4 MOV X0, X20
	0x0344E0C8 BLR X8
	0x0344E0CC LDR X8, [X20]
	0x0344E0D0 LDR X1, [X23]
	0x0344E0D4 MOV X21, X0
	0x0344E0D8 LDRH W9, [X8 + 0x12E]
	0x0344E0DC CBZ X9, 0x344E100
	0x0344E0E0 LDR X10, [X8 + 0xB0]
	0x0344E0E4 ADD X10, X10, 0x8
	0x0344E0E8 LDUR X11, [X10 - 0x8]
	0x0344E0EC CMP X11, X1
	0x0344E0F0 B.EQ 0x344E110
	0x0344E0F4 SUBS X9, X9, 0x1
	0x0344E0F8 ADD X10, X10, 0x10
	0x0344E0FC B.NE 0x344E0E8
	0x0344E100 MOVZ W2, 0x1
	0x0344E104 MOV X0, X20
	0x0344E108 BL 0x1C5C788
	0x0344E10C B 0x344E120
	0x0344E110 LDR W9, [X10]
	0x0344E114 ADD W9, W9, 0x1
	0x0344E118 ADD X8, X8, W9, 0x4, SXTW
	0x0344E11C ADD X0, X8, 0x138
	0x0344E120 LDP X8, X1, [X0]
	0x0344E124 MOV X0, X20
	0x0344E128 BLR X8
	0x0344E12C LDR X8, [X20]
	0x0344E130 LDR X1, [X23]
	0x0344E134 MOV X22, X0
	0x0344E138 LDRH W9, [X8 + 0x12E]
	0x0344E13C CBZ X9, 0x344E160
	0x0344E140 LDR X10, [X8 + 0xB0]
	0x0344E144 ADD X10, X10, 0x8
	0x0344E148 LDUR X11, [X10 - 0x8]
	0x0344E14C CMP X11, X1
	0x0344E150 B.EQ 0x344E170
	0x0344E154 SUBS X9, X9, 0x1
	0x0344E158 ADD X10, X10, 0x10
	0x0344E15C B.NE 0x344E148
	0x0344E160 MOV X0, X20
	0x0344E164 MOV W2, W31
	0x0344E168 BL 0x1C5C788
	0x0344E16C B 0x344E17C
	0x0344E170 LDRSW X9, [X10]
	0x0344E174 ADD X8, X8, X9, 0x4, LSL
	0x0344E178 ADD X0, X8, 0x138
	0x0344E17C LDP X8, X1, [X0]
	0x0344E180 MOV X0, X20
	0x0344E184 BLR X8
	0x0344E188 ADRP X8, 0xCE1000
	0x0344E18C LDR X8, [X8 + 0xA70]
	0x0344E190 MOV W23, W0
	0x0344E194 LDR X0, [X8]
	0x0344E198 BL 0x1C16F10
	0x0344E19C MOV X20, X0
	0x0344E1A0 AND W3, W23, 0x1
	0x0344E1A4 MOV X1, X21
	0x0344E1A8 MOV X2, X22
	0x0344E1AC MOV X4, X31
	0x0344E1B0 BL 0x34684B8
	0x0344E1B4 MOVN W8, 0x1
	0x0344E1B8 STR W8, [X19], #0x8
	0x0344E1BC LDR X0, [X25]
	0x0344E1C0 ADRP X21, 0xCE1000
	0x0344E1C4 LDR W8, [X0 + 0xE0]
	0x0344E1C8 LDR X21, [X21 + 0xA50]
	0x0344E1CC CBNZ W8, 0x344E1D4
	0x0344E1D0 BL 0x1C16DFC
	0x0344E1D4 LDR X2, [X21]
	0x0344E1D8 MOV X0, X19
	0x0344E1DC MOV X1, X20
	0x0344E1E0 BL 0x26322B0
	0x0344E1E4 LDP X20, X19, [X31 + 0x50]
	0x0344E1E8 LDP X22, X21, [X31 + 0x40]
	0x0344E1EC LDP X24, X23, [X31 + 0x30]
	0x0344E1F0 LDP X30, X25, [X31 + 0x20]
	0x0344E1F4 ADD X31, X31, 0x60
	0x0344E1F8 RET
	0x0344E1FC BL 0x1C16F20
	0x0344E200 BL 0x1C16F20
	0x0344E204 BL 0x1C16F20
	0x0344E208 BL 0x1C16F20
	0x0344E20C BL 0x1C16F20
	0x0344E210 B 0x344E24C
	0x0344E214 B 0x344E24C
	0x0344E218 B 0x344E24C
	0x0344E21C B 0x344E24C
	0x0344E220 B 0x344E24C
	0x0344E224 B 0x344E24C
	0x0344E228 B 0x344E24C
	0x0344E22C B 0x344E24C
	0x0344E230 B 0x344E24C
	0x0344E234 B 0x344E24C
	0x0344E238 B 0x344E24C
	0x0344E23C B 0x344E24C
	0x0344E240 B 0x344E24C
	0x0344E244 B 0x344E24C
	0x0344E248 B 0x344E24C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0xF91000
	011 Move W8, [X20+1879]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE3000
	018 Move X0, [X0+2632]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE3000
	021 Move X0, [X0+2640]
	022 Call 0x1C17CF4
	023 Move X0, 0xCE3000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE3000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE3000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE3000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE3000
	036 Move X0, [X0+2000]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE3000
	039 Move X0, [X0+2664]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE3000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0xCE3000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0xCE3000
	048 Move X0, [X0+2688]
	049 Call 0x1C17CF4
	050 Move X0, 0xCE3000
	051 Move X0, [X0+2696]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE3000
	054 Move X0, [X0+2704]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE3000
	057 Move X0, [X0+2712]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1879], W8
	061 Move [X31+24], X31
	062 Move X25, 0xCE3000
	063 Move W8, [X19]
	064 Move X25, [X25+1584]
	065 Compare W8, 0
	066 JumpIfEqual {167}
	067 Move X8, 0xCE3000
	068 Move X8, [X8+2712]
	069 Move X24, [X19+32]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X22, X0
	073 Move X1, X31
	074 Call Object..ctor, X0
	075 Compare X22, 0
	076 JumpIfEqual {288}
	077 Move X8, [X19+32]
	078 Move [X22+16], X8
	079 Move X8, [X19+40]
	080 Move [X22+24], X8
	081 Move X8, [X19+48]
	082 Move [X22+32], X8
	083 Move W8, [X19+56]
	084 Move [X22+40], W8
	085 Move X8, [X19+64]
	086 Move [X22+48], X8
	087 Move X8, [X19+72]
	088 Move [X22+56], X8
	089 Compare X24, 0
	090 JumpIfEqual {289}
	091 Move X8, 0xCE3000
	092 Move X8, [X8+2648]
	093 Move X20, [X24+88]
	094 Move X0, [X8]
	095 Call 0x1C17F10
	096 Move X8, 0xCE3000
	097 Move X8, [X8+2704]
	098 Move X21, X0
	099 Move X2, [X8]
	100 Move X1, X22
	101 Move X3, X31
	102 Call Func`1<Object>..ctor, X0, X1, X2
	103 Move X8, 0xCE3000
	104 Move X23, [X19+80]
	105 Move X8, [X8+1992]
	106 Compare X23, 0
	107 JumpIfNotEqual {109}
	108 Move X23, [X24+24]
	109 Move X24, [X22+24]
	110 Move X1, [X22+56]
	111 Move X2, [X8]
	112 Move [X31+8], X31
	113 Move [X31+16], X31
	114 Add X0, X31, 8
	115 Call Nullable`1<CancellationToken>..ctor, X0, X1
	116 Move X8, 0xCE3000
	117 Move X8, [X8+2000]
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move X3, [X31+8]
	121 Move X4, [X31+16]
	122 Move X22, X0
	123 Move X1, X24
	124 Move X2, X23
	125 Move X5, X31
	126 Call RetryHistory..ctor, X0, X1, X2, X3
	127 Compare X20, 0
	128 JumpIfEqual {290}
	129 Move X8, 0xCE3000
	130 Move X8, [X8+2664]
	131 Move X3, [X8]
	132 Move X0, X20
	133 Move X1, X21
	134 Move X2, X22
	135 Call 0x2244230, X0, X1, X2
	136 Compare X0, 0
	137 JumpIfEqual {291}
	138 Move X8, 0xCE3000
	139 Move X8, [X8+2696]
	140 Move X1, [X8]
	141 Call Task`1<Object>.GetAwaiter, X0
	142 Move X8, 0xCE3000
	143 Move X8, [X8+2688]
	144 Move [X31+24], X0
	145 Move X1, [X8]
	146 Add X0, X31, 24
	147 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {174}
	152 Move [X19], W31
	153 Move X8, [X31+24]
	154 Move [X19+88], X8
	155 Move X0, [X25]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X8, 0xCE3000
	161 Move X8, [X8+2632]
	162 Add X0, X19, 8
	163 Move X3, [X8]
	164 Add X1, X31, 24
	165 Move X2, X19
	166 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	167 Move X8, [X19+88]
	168 Move TEMP, 0
	169 Not TEMP
	170 Move W9, TEMP
	171 Move [X31+24], X8
	172 Move [X19+88], X31
	173 Move [X19], W9
	174 Move X8, 0xCE3000
	175 Move X8, [X8+2680]
	176 Add X0, X31, 24
	177 Move X1, [X8]
	178 Call TaskAwaiter`1<Object>.GetResult, X0
	179 Move X20, X0
	180 Compare X0, 0
	181 JumpIfEqual {287}
	182 Move X23, 0xCE3000
	183 Move X8, [X20]
	184 Move X23, [X23+2656]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X1, [X23]
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 2
	196 Move X0, X20
	197 Call 0x1C5D788
	198 Move W9, [X10]
	199 Add W9, W9, 2
	200 Add X8, X8, W9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X20
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X8, [X20]
	207 Move X1, [X23]
	208 Move X21, X0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 1
	219 Move X0, X20
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 1
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X20
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X8, [X20]
	230 Move X1, [X23]
	231 Move X22, X0
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move X0, X20
	242 Move W2, W31
	243 Call 0x1C5D788
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Add X8, X8, X9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X1, [X0+8]
	249 Move X0, X20
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move X8, 0xCE2000
	252 Move X8, [X8+2672]
	253 Move W23, W0
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X20, X0
	257 And W3, W23, 1
	258 Move X1, X21
	259 Move X2, X22
	260 Move X4, X31
	261 Call Session..ctor, X0, X1, X2, X3
	262 Move TEMP, 1
	263 Not TEMP
	264 Move W8, TEMP
	265 Move [X19+8], W8
	266 Move X0, [X25]
	267 Move X21, 0xCE2000
	268 Move W8, [X0+224]
	269 Move X21, [X21+2640]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X2, [X21]
	274 Move X0, X19
	275 Move X1, X20
	276 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	277 Move X20, [X31+80]
	278 Move X19, [X31+88]
	279 Move X22, [X31+64]
	280 Move X21, [X31+72]
	281 Move X24, [X31+48]
	282 Move X23, [X31+56]
	283 Move X30, [X31+32]
	284 Move X25, [X31+40]
	285 Add X31, X31, 96
	286 Return 
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Move X20, X0
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X20
	295 Call 0x3EB2AD0
	296 Move X20, X0
	297 Move X0, 0xCA6000
	298 Move X0, [X0+2000]
	299 Call 0x1C17D08
	300 Move X8, [X20]
	301 Move X1, [X8]
	302 Call 0x1C18270
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {327}
	307 Move X20, [X20]
	308 Call 0x3EB2AE0
	309 Move TEMP, 1
	310 Not TEMP
	311 Move W8, TEMP
	312 Move [X19+8], W8
	313 Move X0, 0xCE2000
	314 Move X0, [X0+1584]
	315 Call 0x1C17D08
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X0, 0xCE2000
	321 Move X0, [X0+2720]
	322 Call 0x1C17D08
	323 Move X2, X0
	324 Move X0, X19
	325 Move X1, X20
	326 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	327 Move W0, 8
	328 Call 0x3EB2AF0
	329 Move X8, [X20]
	330 Move [X0], X8
	331 Move X1, 0xA67000
	332 Add X1, X1, 3672
	333 Move X2, X31
	334 Call 0x3EB2B00
	335 Move X20, X0
	336 Call 0x3EB2AE0
	337 Move X0, X20
	338 Call 0x1D2D690
	339 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0344E24C MOV X20, X0
	0x0344E250 CMP W1, 0x1
	0x0344E254 B.NE 0x344E2F0
	0x0344E258 MOV X0, X20
	0x0344E25C BL 0x3EB1AD0
	0x0344E260 MOV X20, X0
	0x0344E264 ADRP X0, 0xCA5000
	0x0344E268 LDR X0, [X0 + 0x7D0]
	0x0344E26C BL 0x1C16D08
	0x0344E270 LDR X8, [X20]
	0x0344E274 LDR X1, [X8]
	0x0344E278 BL 0x1C17270
	0x0344E27C TBZ X0, 0x0, 0x344E2C8
	0x0344E280 LDR X20, [X20]
	0x0344E284 BL 0x3EB1AE0
	0x0344E288 MOVN W8, 0x1
	0x0344E28C STR W8, [X19], #0x8
	0x0344E290 ADRP X0, 0xCE1000
	0x0344E294 LDR X0, [X0 + 0x630]
	0x0344E298 BL 0x1C16D08
	0x0344E29C LDR W8, [X0 + 0xE0]
	0x0344E2A0 CBNZ W8, 0x344E2A8
	0x0344E2A4 BL 0x1C16DFC
	0x0344E2A8 ADRP X0, 0xCE1000
	0x0344E2AC LDR X0, [X0 + 0xAA0]
	0x0344E2B0 BL 0x1C16D08
	0x0344E2B4 MOV X2, X0
	0x0344E2B8 MOV X0, X19
	0x0344E2BC MOV X1, X20
	0x0344E2C0 BL 0x26324C8
	0x0344E2C4 B 0x344E1E4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF90000
	007 Move X21, 0xCE2000
	008 Move W8, [X22+1880]
	009 Move X21, [X21+1584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCE2000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0xCE2000
	020 Move X0, [X0+1584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1880], W8
	024 Move X0, [X21]
	025 Move X21, 0xCE2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2728]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

