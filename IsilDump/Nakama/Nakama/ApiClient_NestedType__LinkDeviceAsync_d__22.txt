Type: Nakama.ApiClient/<LinkDeviceAsync>d__22

Method: System.Void MoveNext()

Disassembly:
	0x03428F04 LDR X3, [X8]
	0x03428F08 ADD X1, X31, 0x18
	0x03428F0C MOV X2, X19
	0x03428F10 BL 0x2186940
	0x03428F14 LDP X20, X19, [X31 + 0x60]
	0x03428F18 LDP X22, X21, [X31 + 0x50]
	0x03428F1C LDP X24, X23, [X31 + 0x40]
	0x03428F20 LDP X26, X25, [X31 + 0x30]
	0x03428F24 LDP X28, X27, [X31 + 0x20]
	0x03428F28 LDR X30, [X31 + 0x10]
	0x03428F2C ADD X31, X31, 0x70
	0x03428F30 RET
	0x03428F34 ADRP X0, 0xCD3000
	0x03428F38 LDR X0, [X0 + 0x578]
	0x03428F3C BL 0x1C16D08
	0x03428F40 BL 0x1C16F10
	0x03428F44 MOV X20, X0
	0x03428F48 ADRP X0, 0xD06000
	0x03428F4C LDR X0, [X0 + 0x858]
	0x03428F50 BL 0x1C16D08
	0x03428F54 MOV X1, X0
	0x03428F58 MOV X0, X20
	0x03428F5C MOV X2, X31
	0x03428F60 BL 0x3314A68
	0x03428F64 ADRP X0, 0xD06000
	0x03428F68 LDR X0, [X0 + 0xE80]
	0x03428F6C BL 0x1C16D08
	0x03428F70 MOV X1, X0
	0x03428F74 MOV X0, X20
	0x03428F78 BL 0x1C16DEC
	0x03428F7C BL 0x1C16F20
	0x03428F80 BL 0x1C16F20
	0x03428F84 BL 0x1C16F20
	0x03428F88 BL 0x1C16F28
	0x03428F8C BL 0x1C16F20
	0x03428F90 BL 0x1C16F20
	0x03428F94 BL 0x1C16F20
	0x03428F98 BL 0x1C16F20
	0x03428F9C BL 0x1C16F20
	0x03428FA0 BL 0x1C16F20
	0x03428FA4 BL 0x1C16F20
	0x03428FA8 B 0x3429014
	0x03428FAC B 0x3429014
	0x03428FB0 B 0x3429014
	0x03428FB4 B 0x3429014
	0x03428FB8 B 0x3429014
	0x03428FBC B 0x3429014
	0x03428FC0 B 0x3429014
	0x03428FC4 B 0x3429014
	0x03428FC8 B 0x3429014
	0x03428FCC B 0x3429014
	0x03428FD0 B 0x3429014
	0x03428FD4 B 0x3429014
	0x03428FD8 B 0x3429014
	0x03428FDC B 0x3429014
	0x03428FE0 B 0x3429014
	0x03428FE4 B 0x3429014
	0x03428FE8 B 0x3429014
	0x03428FEC B 0x3429014
	0x03428FF0 B 0x3429014
	0x03428FF4 B 0x3429014
	0x03428FF8 B 0x3429014
	0x03428FFC B 0x3429014
	0x03429000 B 0x3429014
	0x03429004 B 0x3429014
	0x03429008 B 0x3429014
	0x0342900C B 0x3429014
	0x03429010 B 0x3429014
	0x03429014 MOV X20, X0
	0x03429018 CMP W1, 0x1
	0x0342901C B.NE 0x34290AC
	0x03429020 MOV X0, X20
	0x03429024 BL 0x3EB1AD0
	0x03429028 MOV X20, X0
	0x0342902C ADRP X0, 0xCCA000
	0x03429030 LDR X0, [X0 + 0x7D0]
	0x03429034 BL 0x1C16D08
	0x03429038 LDR X8, [X20]
	0x0342903C LDR X1, [X8]
	0x03429040 BL 0x1C17270
	0x03429044 TBZ X0, 0x0, 0x3429084
	0x03429048 LDR X20, [X20]
	0x0342904C BL 0x3EB1AE0
	0x03429050 MOVN W8, 0x1
	0x03429054 STR W8, [X19], #0x8
	0x03429058 ADRP X0, 0xCCD000
	0x0342905C LDR X0, [X0 + 0x280]
	0x03429060 BL 0x1C16D08
	0x03429064 LDR W8, [X0 + 0xE0]
	0x03429068 CBNZ W8, 0x3429070
	0x0342906C BL 0x1C16DFC
	0x03429070 MOV X0, X19
	0x03429074 MOV X1, X20
	0x03429078 MOV X2, X31
	0x0342907C BL 0x32C4908
	0x03429080 B 0x3428F14
	0x03429084 MOVZ W0, 0x8
	0x03429088 BL 0x3EB1AF0
	0x0342908C LDR X8, [X20]
	0x03429090 STR X8, [X0]
	0x03429094 ADRP X1, 0xA8B000
	0x03429098 ADD X1, X1, 0xE58
	0x0342909C MOV X2, X31
	0x034290A0 BL 0x3EB1B00
	0x034290A4 MOV X20, X0
	0x034290A8 BL 0x3EB1AE0
	0x034290AC MOV X0, X20
	0x034290B0 BL 0x1D2C690
	0x034290B4 BL 0x1990590
	0x034290B8 STR X30, [X31 - 0x30]!
	0x034290BC STP X22, X21, [X31 + 0x10]
	0x034290C0 STP X20, X19, [X31 + 0x20]
	0x034290C4 ADRP X21, 0xFB4000
	0x034290C8 ADRP X22, 0xCCD000
	0x034290CC LDRB W8, [X21 + 0x642]
	0x034290D0 LDR X22, [X22 + 0x280]
	0x034290D4 MOV X19, X1
	0x034290D8 MOV X20, X0
	0x034290DC TBNZ X8, 0x0, 0x34290F4
	0x034290E0 ADRP X0, 0xCCD000
	0x034290E4 LDR X0, [X0 + 0x280]
	0x034290E8 BL 0x1C16CF4
	0x034290EC MOVZ W8, 0x1
	0x034290F0 STRB W8, [X21 + 0x642]
	0x034290F4 LDR X0, [X22]
	0x034290F8 LDR W8, [X0 + 0xE0]
	0x034290FC CBNZ W8, 0x3429104
	0x03429100 BL 0x1C16DFC
	0x03429104 ADD X0, X20, 0x8
	0x03429108 MOV X1, X19
	0x0342910C LDP X20, X19, [X31 + 0x20]
	0x03429110 LDP X22, X21, [X31 + 0x10]
	0x03429114 MOV X2, X31
	0x03429118 LDR X30, [X31], #0x30
	0x0342911C B 0x32C477C
	0x03429120 SUB X31, X31, 0x70
	0x03429124 STR X30, [X31 + 0x10]
	0x03429128 STP X28, X27, [X31 + 0x20]
	0x0342912C STP X26, X25, [X31 + 0x30]
	0x03429130 STP X24, X23, [X31 + 0x40]
	0x03429134 STP X22, X21, [X31 + 0x50]
	0x03429138 STP X20, X19, [X31 + 0x60]
	0x0342913C ADRP X20, 0xFB4000
	0x03429140 LDRB W8, [X20 + 0x643]
	0x03429144 MOV X19, X0
	0x03429148 TBNZ X8, 0x0, 0x3429214
	0x0342914C ADRP X0, 0xD05000
	0x03429150 LDR X0, [X0 + 0xE88]
	0x03429154 BL 0x1C16CF4
	0x03429158 ADRP X0, 0xCCD000
	0x0342915C LDR X0, [X0 + 0x280]
	0x03429160 BL 0x1C16CF4
	0x03429164 ADRP X0, 0xCD3000
	0x03429168 LDR X0, [X0 + 0x8D8]
	0x0342916C BL 0x1C16CF4
	0x03429170 ADRP X0, 0xCCB000
	0x03429174 LDR X0, [X0 + 0x810]
	0x03429178 BL 0x1C16CF4
	0x0342917C ADRP X0, 0xCCB000
	0x03429180 LDR X0, [X0 + 0x6C0]
	0x03429184 BL 0x1C16CF4
	0x03429188 ADRP X0, 0xCCB000
	0x0342918C LDR X0, [X0 + 0x6D0]
	0x03429190 BL 0x1C16CF4
	0x03429194 ADRP X0, 0xD05000
	0x03429198 LDR X0, [X0 + 0x7B8]
	0x0342919C BL 0x1C16CF4
	0x034291A0 ADRP X0, 0xCCD000
	0x034291A4 LDR X0, [X0 + 0x1E0]
	0x034291A8 BL 0x1C16CF4
	0x034291AC ADRP X0, 0xCCD000
	0x034291B0 LDR X0, [X0 + 0x1F0]
	0x034291B4 BL 0x1C16CF4
	0x034291B8 ADRP X0, 0xCCD000
	0x034291BC LDR X0, [X0 + 0x1F8]
	0x034291C0 BL 0x1C16CF4
	0x034291C4 ADRP X0, 0xCD3000
	0x034291C8 LDR X0, [X0 + 0x3A0]
	0x034291CC BL 0x1C16CF4
	0x034291D0 ADRP X0, 0xCF3000
	0x034291D4 LDR X0, [X0 + 0x4D8]
	0x034291D8 BL 0x1C16CF4
	0x034291DC ADRP X0, 0xD05000
	0x034291E0 LDR X0, [X0 + 0xE90]
	0x034291E4 BL 0x1C16CF4
	0x034291E8 ADRP X0, 0xD05000
	0x034291EC LDR X0, [X0 + 0x7D0]
	0x034291F0 BL 0x1C16CF4
	0x034291F4 ADRP X0, 0xD05000
	0x034291F8 LDR X0, [X0 + 0x7D8]
	0x034291FC BL 0x1C16CF4
	0x03429200 ADRP X0, 0xCCA000
	0x03429204 LDR X0, [X0 + 0x988]
	0x03429208 BL 0x1C16CF4
	0x0342920C MOVZ W8, 0x1
	0x03429210 STRB W8, [X20 + 0x643]
	0x03429214 STR X31, [X31 + 0x18]
	0x03429218 ADRP X28, 0xCCD000
	0x0342921C LDR W8, [X19]
	0x03429220 LDR X28, [X28 + 0x280]
	0x03429224 CBZ W8, 0x3429404
	0x03429228 LDR X8, [X19 + 0x20]
	0x0342922C CBZ X8, 0x342951C
	0x03429230 LDR X25, [X19 + 0x28]
	0x03429234 CBZ X25, 0x3429564
	0x03429238 LDR X0, [X25 + 0x20]
	0x0342923C CBZ X0, 0x3429568
	0x03429240 ADRP X8, 0xD05000
	0x03429244 ADRP X9, 0xCCA000
	0x03429248 LDR X8, [X8 + 0xE90]
	0x0342924C LDR X9, [X9 + 0x988]
	0x03429250 LDR X21, [X8]
	0x03429254 LDR X20, [X9]
	0x03429258 MOV X1, X31
	0x0342925C BL 0x361B448
	0x03429260 ADRP X8, 0xCD3000
	0x03429264 LDR X8, [X8 + 0x8D8]
	0x03429268 MOV X22, X0
	0x0342926C LDR X0, [X8]
	0x03429270 MOVZ W1, 0x1
	0x03429274 BL 0x1C16D6C
	0x03429278 MOV X1, X0
	0x0342927C CBZ X1, 0x342956C
	0x03429280 LDR W8, [X1 + 0x18]
	0x03429284 CBZ W8, 0x3429570
	0x03429288 MOVZ W8, 0x2F
	0x0342928C STRH W8, [X1 + 0x20]
	0x03429290 CBZ X22, 0x3429574
	0x03429294 MOV X0, X22
	0x03429298 MOV X2, X31
	0x0342929C BL 0x322BC58
	0x034292A0 MOV X1, X21
	0x034292A4 MOV X2, X31
	0x034292A8 BL 0x321B938
	0x034292AC ADRP X8, 0xCD3000
	0x034292B0 LDR X8, [X8 + 0x3A0]
	0x034292B4 MOV X22, X0
	0x034292B8 LDR X23, [X25 + 0x20]
	0x034292BC LDR X0, [X8]
	0x034292C0 BL 0x1C16F10
	0x034292C4 MOV X21, X0
	0x034292C8 MOV X1, X23
	0x034292CC MOV X2, X31
	0x034292D0 BL 0x36281F8
	0x034292D4 CBZ X21, 0x3429578
	0x034292D8 MOV X0, X21
	0x034292DC MOV X1, X22
	0x034292E0 MOV X2, X31
	0x034292E4 BL 0x36288CC
	0x034292E8 MOV X0, X21
	0x034292EC MOV X1, X20
	0x034292F0 MOV X2, X31
	0x034292F4 BL 0x3628980
	0x034292F8 MOV X0, X21
	0x034292FC MOV X1, X31
	0x03429300 BL 0x3628A38
	0x03429304 ADRP X8, 0xCF3000
	0x03429308 ADRP X9, 0xCCB000
	0x0342930C LDR X8, [X8 + 0x4D8]
	0x03429310 LDR X9, [X9 + 0x6D0]
	0x03429314 MOV X20, X0
	0x03429318 LDR X21, [X8]
	0x0342931C LDR X0, [X9]
	0x03429320 BL 0x1C16F10
	0x03429324 ADRP X8, 0xCCB000
	0x03429328 LDR X8, [X8 + 0x6C0]
	0x0342932C MOV X22, X0
	0x03429330 LDR X1, [X8]
	0x03429334 BL 0x2AA4804
	0x03429338 ADRP X8, 0xD05000
	0x0342933C LDR X8, [X8 + 0x7D8]
	0x03429340 LDR X1, [X19 + 0x30]
	0x03429344 LDR X0, [X8]
	0x03429348 MOV X2, X31
	0x0342934C BL 0x321B938
	0x03429350 CBZ X22, 0x342957C
	0x03429354 ADRP X8, 0xD05000
	0x03429358 LDR X8, [X8 + 0x7D0]
	0x0342935C ADRP X9, 0xCCB000
	0x03429360 LDR X9, [X9 + 0x810]
	0x03429364 MOV X2, X0
	0x03429368 LDR X1, [X8]
	0x0342936C LDR X3, [X9]
	0x03429370 MOV X0, X22
	0x03429374 BL 0x2AA5098
	0x03429378 LDR X0, [X19 + 0x20]
	0x0342937C MOV X1, X31
	0x03429380 BL 0x3483BE4
	0x03429384 MOV X23, X0
	0x03429388 MOV X0, X31
	0x0342938C BL 0x3241948
	0x03429390 CBZ X0, 0x3429580
	0x03429394 LDR X8, [X0]
	0x03429398 LDR X9, [X8 + 0x268]
	0x0342939C LDR X2, [X8 + 0x270]
	0x034293A0 MOV X1, X23
	0x034293A4 BLR X9
	0x034293A8 LDR X24, [X25 + 0x10]
	0x034293AC CBZ X24, 0x3429584
	0x034293B0 ADRP X10, 0xD05000
	0x034293B4 LDR X10, [X10 + 0x7B8]
	0x034293B8 LDR X8, [X24]
	0x034293BC LDR W26, [X25 + 0x18]
	0x034293C0 LDP X27, X25, [X19 + 0x38]
	0x034293C4 LDR X1, [X10]
	0x034293C8 LDRH W9, [X8 + 0x12E]
	0x034293CC MOV X23, X0
	0x034293D0 CBZ X9, 0x34293F4
	0x034293D4 LDR X10, [X8 + 0xB0]
	0x034293D8 ADD X10, X10, 0x8
	0x034293DC LDUR X11, [X10 - 0x8]
	0x034293E0 CMP X11, X1
	0x034293E4 B.EQ 0x342941C
	0x034293E8 SUBS X9, X9, 0x1
	0x034293EC ADD X10, X10, 0x10
	0x034293F0 B.NE 0x34293DC
	0x034293F4 MOVZ W2, 0x3
	0x034293F8 MOV X0, X24
	0x034293FC BL 0x1C5C788
	0x03429400 B 0x342942C
	0x03429404 LDR X8, [X19 + 0x48]
	0x03429408 MOVN W9, 0x0
	0x0342940C STR X8, [X31 + 0x18]
	0x03429410 STR X31, [X19 + 0x48]
	0x03429414 STR W9, [X19]
	0x03429418 B 0x3429488
	0x0342941C LDR W9, [X10]
	0x03429420 ADD W9, W9, 0x3
	0x03429424 ADD X8, X8, W9, 0x4, SXTW
	0x03429428 ADD X0, X8, 0x138
	0x0342942C LDP X8, X9, [X0]
	0x03429430 MOV X0, X24
	0x03429434 MOV X1, X21
	0x03429438 MOV X2, X20
	0x0342943C MOV X3, X22
	0x03429440 MOV X4, X23
	0x03429444 MOV W5, W26
	0x03429448 MOV X6, X27
	0x0342944C MOV X7, X25
	0x03429450 STR X9, [X31]
	0x03429454 BLR X8
	0x03429458 CBZ X0, 0x3429588
	0x0342945C ADRP X8, 0xCCD000
	0x03429460 LDR X8, [X8 + 0x1F8]
	0x03429464 LDR X1, [X8]
	0x03429468 BL 0x269F5D0
	0x0342946C ADRP X8, 0xCCD000
	0x03429470 LDR X8, [X8 + 0x1F0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB6000
	014 Move W8, [X20+1597]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xD07000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCF000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD5000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCD000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCCD000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCD000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD07000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCF000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCF000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCF000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD5000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCF5000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xD07000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xD07000
	060 Move X0, [X0+3656]
	061 Call 0x1C17CF4
	062 Move X0, 0xD07000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCCC000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1597], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCCF000
	072 Move W8, [X19]
	073 Call 0x3EB28B4
	074 Return 
	075 Compare W8, 0
	076 JumpIfEqual {205}
	077 Move X8, [X19+32]
	078 Compare X8, 0
	079 JumpIfEqual {289}
	080 Move X25, [X19+40]
	081 Compare X25, 0
	082 JumpIfEqual {307}
	083 Move X0, [X25+32]
	084 Compare X0, 0
	085 JumpIfEqual {308}
	086 Move X8, 0xD06000
	087 Move X9, 0xCCB000
	088 Move X8, [X8+3656]
	089 Move X9, [X9+2440]
	090 Move X21, [X8]
	091 Move X20, [X9]
	092 Move X1, X31
	093 Call Uri.get_AbsolutePath, X0
	094 Move X8, 0xCD4000
	095 Move X8, [X8+2264]
	096 Move X22, X0
	097 Move X0, [X8]
	098 Move W1, 1
	099 Call 0x1C17D6C
	100 Move X1, X0
	101 Compare X1, 0
	102 JumpIfEqual {309}
	103 Move W8, [X1+24]
	104 Compare W8, 0
	105 JumpIfEqual {310}
	106 Move W8, 47
	107 NotImplemented "Instruction STRH not yet implemented."
	108 Compare X22, 0
	109 JumpIfEqual {311}
	110 Move X0, X22
	111 Move X2, X31
	112 Call String.TrimEnd, X0, X1
	113 Move X1, X21
	114 Move X2, X31
	115 Call String.Concat, X0, X1
	116 Move X8, 0xCD4000
	117 Move X8, [X8+928]
	118 Move X22, X0
	119 Move X23, [X25+32]
	120 Move X0, [X8]
	121 Call 0x1C17F10
	122 Move X21, X0
	123 Move X1, X23
	124 Move X2, X31
	125 Call UriBuilder..ctor, X0, X1
	126 Compare X21, 0
	127 JumpIfEqual {312}
	128 Move X0, X21
	129 Move X1, X22
	130 Move X2, X31
	131 Call UriBuilder.set_Path, X0, X1
	132 Move X0, X21
	133 Move X1, X20
	134 Move X2, X31
	135 Call UriBuilder.set_Query, X0, X1
	136 Move X0, X21
	137 Move X1, X31
	138 Call UriBuilder.get_Uri, X0
	139 Move X8, 0xCF4000
	140 Move X9, 0xCCC000
	141 Move X8, [X8+1240]
	142 Move X9, [X9+1744]
	143 Move X20, X0
	144 Move X21, [X8]
	145 Move X0, [X9]
	146 Call 0x1C17F10
	147 Move X8, 0xCCC000
	148 Move X8, [X8+1728]
	149 Move X22, X0
	150 Move X1, [X8]
	151 Call Dictionary`2<Object, Object>..ctor, X0
	152 Move X8, 0xD06000
	153 Move X8, [X8+2008]
	154 Move X1, [X19+48]
	155 Move X0, [X8]
	156 Move X2, X31
	157 Call String.Concat, X0, X1
	158 Compare X22, 0
	159 JumpIfEqual {313}
	160 Move X8, 0xD06000
	161 Move X8, [X8+2000]
	162 Move X9, 0xCCC000
	163 Move X9, [X9+2064]
	164 Move X2, X0
	165 Move X1, [X8]
	166 Move X3, [X9]
	167 Move X0, X22
	168 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	169 Move X0, [X19+32]
	170 Move X1, X31
	171 Call JsonWriter.ToJson, X0
	172 Move X23, X0
	173 Move X0, X31
	174 Call Encoding.get_UTF8
	175 Compare X0, 0
	176 JumpIfEqual {314}
	177 Move X8, [X0]
	178 Move X9, [X8+616]
	179 Move X2, [X8+624]
	180 Move X1, X23
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X24, [X25+16]
	183 Compare X24, 0
	184 JumpIfEqual {315}
	185 Move X10, 0xD06000
	186 Move X10, [X10+1976]
	187 Move X8, [X24]
	188 Move W26, [X25+24]
	189 Move X27, [X19+56]
	190 Move X25, [X19+64]
	191 Move X1, [X10]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X23, X0
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move W2, 3
	203 Move X0, X24
	204 Call 0x1C5D788
	205 Move X8, [X19+72]
	206 Move TEMP, 0
	207 Not TEMP
	208 Move W9, TEMP
	209 Move [X31+24], X8
	210 Move [X19+72], X31
	211 Move [X19], W9
	212 Move W9, [X10]
	213 Add W9, W9, 3
	214 Add X8, X8, W9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X9, [X0+8]
	218 Move X0, X24
	219 Move X1, X21
	220 Move X2, X20
	221 Move X3, X22
	222 Move X4, X23
	223 Move W5, W26
	224 Move X6, X27
	225 Move X7, X25
	226 Move [X31], X9
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Compare X0, 0
	229 JumpIfEqual {316}
	230 Move X8, 0xCCE000
	231 Move X8, [X8+504]
	232 Move X1, [X8]
	233 Call Task`1<Object>.GetAwaiter, X0
	234 Move X8, 0xCCE000
	235 Move X8, [X8+496]
	236 Move [X31+24], X0
	237 Move X1, [X8]
	238 Add X0, X31, 24
	239 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {261}
	244 Move X8, 0xCCE000
	245 Move X8, [X8+480]
	246 Add X0, X31, 24
	247 Move X1, [X8]
	248 Call TaskAwaiter`1<Object>.GetResult, X0
	249 Move TEMP, 1
	250 Not TEMP
	251 Move W8, TEMP
	252 Move [X19+8], W8
	253 Move X0, [X28]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X0, X19
	259 Move X1, X31
	260 Call AsyncTaskMethodBuilder.SetResult, X0
	261 Move [X19], W31
	262 Move X8, [X31+24]
	263 Move [X19+72], X8
	264 Move X0, [X28]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X8, 0xD06000
	270 Move X8, [X8+3648]
	271 Add X0, X19, 8
	272 Move X3, [X8]
	273 Add X1, X31, 24
	274 Move X2, X19
	275 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	276 Move X20, [X31+96]
	277 Move X19, [X31+104]
	278 Move X22, [X31+80]
	279 Move X21, [X31+88]
	280 Move X24, [X31+64]
	281 Move X23, [X31+72]
	282 Move X26, [X31+48]
	283 Move X25, [X31+56]
	284 Move X28, [X31+32]
	285 Move X27, [X31+40]
	286 Move X30, [X31+16]
	287 Add X31, X31, 112
	288 Return 
	289 Move X0, 0xCD3000
	290 Move X0, [X0+1400]
	291 Call 0x1C17D08
	292 Call 0x1C17F10
	293 Move X20, X0
	294 Move X0, 0xD06000
	295 Move X0, [X0+3016]
	296 Call 0x1C17D08
	297 Move X1, X0
	298 Move X0, X20
	299 Move X2, X31
	300 Call ArgumentException..ctor, X0, X1
	301 Move X0, 0xD06000
	302 Move X0, [X0+3664]
	303 Call 0x1C17D08
	304 Move X1, X0
	305 Move X0, X20
	306 Call 0x1C17DEC
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F20
	310 Call 0x1C17F28
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Call 0x1C17F20
	317 Move X20, X0
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X0, X20
	320 Call 0x3EB2AD0
	321 Move X20, X0
	322 Move X0, 0xCCB000
	323 Move X0, [X0+2000]
	324 Call 0x1C17D08
	325 Move X8, [X20]
	326 Move X1, [X8]
	327 Call 0x1C18270
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {349}
	332 Move X20, [X20]
	333 Call 0x3EB2AE0
	334 Move TEMP, 1
	335 Not TEMP
	336 Move W8, TEMP
	337 Move [X19+8], W8
	338 Move X0, 0xCCE000
	339 Move X0, [X0+640]
	340 Call 0x1C17D08
	341 Move W8, [X0+224]
	342 Compare W8, 0
	343 JumpIfNotEqual {345}
	344 Call 0x1C17DFC
	345 Move X0, X19
	346 Move X1, X20
	347 Move X2, X31
	348 Call AsyncTaskMethodBuilder.SetException, X0, X1
	349 Move W0, 8
	350 Call 0x3EB2AF0
	351 Move X8, [X20]
	352 Move [X0], X8
	353 Move X1, 0xA8C000
	354 Add X1, X1, 3672
	355 Move X2, X31
	356 Call 0x3EB2B00
	357 Move X20, X0
	358 Call 0x3EB2AE0
	359 Move X0, X20
	360 Call 0x1D2D690
	361 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03429474 STR X0, [X31 + 0x18]
	0x03429478 LDR X1, [X8]
	0x0342947C ADD X0, X31, 0x18
	0x03429480 BL 0x2677430
	0x03429484 TBZ X0, 0x0, 0x34294C4
	0x03429488 ADRP X8, 0xCCD000
	0x0342948C LDR X8, [X8 + 0x1E0]
	0x03429490 ADD X0, X31, 0x18
	0x03429494 LDR X1, [X8]
	0x03429498 BL 0x2677474
	0x0342949C MOVN W8, 0x1
	0x034294A0 STR W8, [X19], #0x8
	0x034294A4 LDR X0, [X28]
	0x034294A8 LDR W8, [X0 + 0xE0]
	0x034294AC CBNZ W8, 0x34294B4
	0x034294B0 BL 0x1C16DFC
	0x034294B4 MOV X0, X19
	0x034294B8 MOV X1, X31
	0x034294BC BL 0x32C4864
	0x034294C0 B 0x34294FC
	0x034294C4 STR W31, [X19]
	0x034294C8 LDR X8, [X31 + 0x18]
	0x034294CC STR X8, [X19 + 0x48]
	0x034294D0 LDR X0, [X28]
	0x034294D4 LDR W8, [X0 + 0xE0]
	0x034294D8 CBNZ W8, 0x34294E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB5000
	007 Move X22, 0xCCE000
	008 Move W8, [X21+1598]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCCE000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1598], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

