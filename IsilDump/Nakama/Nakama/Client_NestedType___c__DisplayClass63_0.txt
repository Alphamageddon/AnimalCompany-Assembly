Type: Nakama.Client/<>c__DisplayClass63_0

Method: System.Void .ctor()

Disassembly:
	0x0344A1AC ADD X10, X10, 0x10
	0x0344A1B0 B.NE 0x344A19C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.Task <EventAsync>b__0()

Disassembly:
	0x0344A1B4 MOV X0, X21
	0x0344A1B8 MOV W2, W31
	0x0344A1BC BL 0x1C5C788
	0x0344A1C0 B 0x344A1D0
	0x0344A1C4 LDRSW X9, [X10]
	0x0344A1C8 ADD X8, X8, X9, 0x4, LSL
	0x0344A1CC ADD X0, X8, 0x138
	0x0344A1D0 LDP X8, X1, [X0]
	0x0344A1D4 MOV X0, X21
	0x0344A1D8 BLR X8
	0x0344A1DC LDR X8, [X22]
	0x0344A1E0 MOV X21, X0
	0x0344A1E4 MOV X0, X8
	0x0344A1E8 BL 0x1C16F10
	0x0344A1EC MOV X1, X31
	0x0344A1F0 MOV X22, X0
	0x0344A1F4 BL 0x3402A34
	0x0344A1F8 CBZ X22, 0x344A250
	0x0344A1FC LDR V0, [X19 + 0x2]
	0x0344A200 ADRP X8, 0xCE5000
	0x0344A204 LDR X8, [X8 + 0x7C8]
	0x0344A208 ADD X0, X31, 0x0
	0x0344A20C STR V0, [X22 + 0x1]
	0x0344A210 LDR X1, [X19 + 0x30]
	0x0344A214 LDR X2, [X8]
	0x0344A218 STP X31, X31, [X31]
	0x0344A21C BL 0x242E368
	0x0344A220 CBZ X20, 0x344A250
	0x0344A224 LDP X3, X4, [X31]
	0x0344A228 MOV X0, X20
	0x0344A22C MOV X1, X21
	0x0344A230 MOV X2, X22
	0x0344A234 MOV X5, X31
	0x0344A238 BL 0x340ECB4
	0x0344A23C LDP X20, X19, [X31 + 0x30]
	0x0344A240 LDP X22, X21, [X31 + 0x20]
	0x0344A244 LDR X30, [X31 + 0x10]
	0x0344A248 ADD X31, X31, 0x40
	0x0344A24C RET
	0x0344A250 BL 0x1C16F20
	0x0344A254 MOV X1, X31
	0x0344A258 B 0x33BDD8C
	0x0344A25C SUB X31, X31, 0x40
	0x0344A260 STP X30, X23, [X31 + 0x10]
	0x0344A264 STP X22, X21, [X31 + 0x20]
	0x0344A268 STP X20, X19, [X31 + 0x30]
	0x0344A26C ADRP X20, 0xF93000
	0x0344A270 LDRB W8, [X20 + 0x73E]
	0x0344A274 MOV X19, X0
	0x0344A278 TBNZ X8, 0x0, 0x344A2A8
	0x0344A27C ADRP X0, 0xCE5000
	0x0344A280 LDR X0, [X0 + 0x960]
	0x0344A284 BL 0x1C16CF4
	0x0344A288 ADRP X0, 0xCAA000
	0x0344A28C LDR X0, [X0 + 0x818]
	0x0344A290 BL 0x1C16CF4
	0x0344A294 ADRP X0, 0xCE5000
	0x0344A298 LDR X0, [X0 + 0x7C8]
	0x0344A29C BL 0x1C16CF4
	0x0344A2A0 MOVZ W8, 0x1
	0x0344A2A4 STRB W8, [X20 + 0x73E]
	0x0344A2A8 LDR X9, [X19 + 0x10]
	0x0344A2AC CBZ X9, 0x344A3A0
	0x0344A2B0 LDR X21, [X19 + 0x18]
	0x0344A2B4 CBZ X21, 0x344A3A0
	0x0344A2B8 ADRP X10, 0xCAA000
	0x0344A2BC LDR X8, [X21]
	0x0344A2C0 LDR X10, [X10 + 0x818]
	0x0344A2C4 ADRP X22, 0xCE5000
	0x0344A2C8 LDR X20, [X9 + 0x48]
	0x0344A2CC LDRH W9, [X8 + 0x12E]
	0x0344A2D0 LDR X1, [X10]
	0x0344A2D4 LDR X22, [X22 + 0x960]
	0x0344A2D8 CBZ X9, 0x344A2FC
	0x0344A2DC LDR X10, [X8 + 0xB0]
	0x0344A2E0 ADD X10, X10, 0x8
	0x0344A2E4 LDUR X11, [X10 - 0x8]
	0x0344A2E8 CMP X11, X1
	0x0344A2EC B.EQ 0x344A30C
	0x0344A2F0 SUBS X9, X9, 0x1
	0x0344A2F4 ADD X10, X10, 0x10
	0x0344A2F8 B.NE 0x344A2E4
	0x0344A2FC MOV X0, X21
	0x0344A300 MOV W2, W31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xF94000
	008 Move W8, [X20+1840]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xCE6000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move X0, 0xCAB000
	018 Move X0, [X0+2072]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE6000
	021 Move X0, [X0+1992]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1840], W8
	025 Move X9, [X19+16]
	026 Compare X9, 0
	027 JumpIfEqual {96}
	028 Move X21, [X19+24]
	029 Compare X21, 0
	030 JumpIfEqual {96}
	031 Move X10, 0xCAB000
	032 Move X8, [X21]
	033 Move X10, [X10+2072]
	034 Move X22, 0xCE6000
	035 Move X20, [X9+72]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Move X22, [X22+2536]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X21
	048 Move W2, W31
	049 Call 0x1C5D788
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X0, X21
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X22]
	058 Move X21, X0
	059 Move X0, X8
	060 Call 0x1C17F10
	061 Move X1, X31
	062 Move X22, X0
	063 Call ApiEvent..ctor, X0
	064 Compare X22, 0
	065 JumpIfEqual {96}
	066 Move W8, 1
	067 Move [X22+16], W8
	068 Move X8, [X19+32]
	069 Move X9, 0xCE6000
	070 Add X0, X31, 0
	071 Move [X22+24], X8
	072 Move X8, [X19+40]
	073 Move X9, [X9+1992]
	074 Move [X22+32], X8
	075 Move X1, [X19+48]
	076 Move X2, [X9]
	077 Move [X31], X31
	078 Move [X31+8], X31
	079 Call Nullable`1<CancellationToken>..ctor, X0, X1
	080 Compare X20, 0
	081 JumpIfEqual {96}
	082 Move X3, [X31]
	083 Move X4, [X31+8]
	084 Move X0, X20
	085 Move X1, X21
	086 Move X2, X22
	087 Move X5, X31
	088 Call ApiClient.EventAsync, X0, X1, X2, X3
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X30, [X31+16]
	094 Add X31, X31, 64
	095 Return X0
	096 Call 0x1C17F20

