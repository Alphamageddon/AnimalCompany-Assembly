Type: Nakama.HttpRequestAdapter/<SendAsync>d__8

Method: System.Void MoveNext()

Disassembly:
	0x03472A5C B.CS 0x3472A78
	0x03472A60 ADRP X9, 0xC83000
	0x03472A64 LDR X9, [X9 + 0x278]
	0x03472A68 LDR X9, [X9]
	0x03472A6C CMP X8, X9
	0x03472A70 B.NE 0x3472C20
	0x03472A74 B 0x3472B74
	0x03472A78 LDR X11, [X8 + 0xC8]
	0x03472A7C ADD X10, X11, X10, 0x3, LSL
	0x03472A80 ADRP X11, 0xC83000
	0x03472A84 LDUR X10, [X10 - 0x8]
	0x03472A88 LDR X11, [X11 + 0x278]
	0x03472A8C CMP X10, X9
	0x03472A90 LDR X11, [X11]
	0x03472A94 CSEL X0, X20, X31, EQ
	0x03472A98 CMP X8, X11
	0x03472A9C B.EQ 0x3472B74
	0x03472AA0 CBZ X0, 0x3472C20
	0x03472AA4 ADRP X8, 0xC86000
	0x03472AA8 LDR X8, [X8 + 0x700]
	0x03472AAC LDR X1, [X8]
	0x03472AB0 ADD X8, X31, 0x8
	0x03472AB4 BL 0x2AA54BC
	0x03472AB8 LDUR V0, [X31 + 0x8]
	0x03472ABC LDUR V1, [X31 + 0x18]
	0x03472AC0 LDR X8, [X31 + 0x28]
	0x03472AC4 ADRP X23, 0xC86000
	0x03472AC8 LDR X23, [X23 + 0x710]
	0x03472ACC STP V0, V1, [X31 + 0x30]
	0x03472AD0 STR X8, [X31 + 0x50]
	0x03472AD4 ADRP X24, 0xC81000
	0x03472AD8 LDR X24, [X24 + 0x818]
	0x03472ADC LDR X1, [X23]
	0x03472AE0 ADD X0, X31, 0x30
	0x03472AE4 BL 0x2C0A728
	0x03472AE8 TBZ X0, 0x0, 0x3472BE4
	0x03472AEC CBZ X19, 0x3472C38
	0x03472AF0 LDR X8, [X19]
	0x03472AF4 LDP X21, X20, [X31 + 0x40]
	0x03472AF8 LDP X9, X1, [X8 + 0x198]
	0x03472AFC MOV X0, X19
	0x03472B00 BLR X9
	0x03472B04 MOV X22, X0
	0x03472B08 CBZ X0, 0x3472C3C
	0x03472B0C LDR X8, [X22]
	0x03472B10 LDR X1, [X24]
	0x03472B14 LDRH W9, [X8 + 0x12E]
	0x03472B18 CBZ X9, 0x3472B3C
	0x03472B1C LDR X10, [X8 + 0xB0]
	0x03472B20 ADD X10, X10, 0x8
	0x03472B24 LDUR X11, [X10 - 0x8]
	0x03472B28 CMP X11, X1
	0x03472B2C B.EQ 0x3472B4C
	0x03472B30 SUBS X9, X9, 0x1
	0x03472B34 ADD X10, X10, 0x10
	0x03472B38 B.NE 0x3472B24
	0x03472B3C MOVZ W2, 0x1
	0x03472B40 MOV X0, X22
	0x03472B44 BL 0x1C5C788
	0x03472B48 B 0x3472B5C
	0x03472B4C LDR W9, [X10]
	0x03472B50 ADD W9, W9, 0x1
	0x03472B54 ADD X8, X8, W9, 0x4, SXTW
	0x03472B58 ADD X0, X8, 0x138
	0x03472B5C LDP X8, X3, [X0]
	0x03472B60 MOV X0, X22
	0x03472B64 MOV X1, X21
	0x03472B68 MOV X2, X20
	0x03472B6C BLR X8
	0x03472B70 B 0x3472ADC
	0x03472B74 CBZ X19, 0x3472C40
	0x03472B78 LDR X8, [X19]
	0x03472B7C MOV X0, X19
	0x03472B80 LDP X9, X1, [X8 + 0x198]
	0x03472B84 BLR X9
	0x03472B88 CBZ X0, 0x3472C40
	0x03472B8C ADRP X9, 0xC81000
	0x03472B90 LDR X8, [X0]
	0x03472B94 LDR X9, [X9 + 0x818]
	0x03472B98 ADRP X10, 0xC84000
	0x03472B9C MOV X19, X0
	0x03472BA0 LDR X1, [X9]
	0x03472BA4 LDR X10, [X10 + 0x238]
	0x03472BA8 LDRH W9, [X8 + 0x12E]
	0x03472BAC LDR X21, [X10]
	0x03472BB0 CBZ X9, 0x3472BD4
	0x03472BB4 LDR X10, [X8 + 0xB0]
	0x03472BB8 ADD X10, X10, 0x8
	0x03472BBC LDUR X11, [X10 - 0x8]
	0x03472BC0 CMP X11, X1
	0x03472BC4 B.EQ 0x3472BFC
	0x03472BC8 SUBS X9, X9, 0x1
	0x03472BCC ADD X10, X10, 0x10
	0x03472BD0 B.NE 0x3472BBC
	0x03472BD4 MOVZ W2, 0x1
	0x03472BD8 MOV X0, X19
	0x03472BDC BL 0x1C5C788
	0x03472BE0 B 0x3472C0C
	0x03472BE4 ADRP X8, 0xC86000
	0x03472BE8 LDR X8, [X8 + 0x708]
	0x03472BEC ADD X0, X31, 0x30
	0x03472BF0 LDR X1, [X8]
	0x03472BF4 BL 0x2C0A83C
	0x03472BF8 B 0x3472C20
	0x03472BFC LDR W9, [X10]
	0x03472C00 ADD W9, W9, 0x1
	0x03472C04 ADD X8, X8, W9, 0x4, SXTW
	0x03472C08 ADD X0, X8, 0x138
	0x03472C0C LDP X8, X3, [X0]
	0x03472C10 MOV X0, X19
	0x03472C14 MOV X1, X21
	0x03472C18 MOV X2, X20
	0x03472C1C BLR X8
	0x03472C20 LDP X20, X19, [X31 + 0x90]
	0x03472C24 LDP X22, X21, [X31 + 0x80]
	0x03472C28 LDP X24, X23, [X31 + 0x70]
	0x03472C2C LDR X30, [X31 + 0x60]
	0x03472C30 ADD X31, X31, 0xA0
	0x03472C34 RET
	0x03472C38 BL 0x1C16F20
	0x03472C3C BL 0x1C16F20
	0x03472C40 BL 0x1C16F20
	0x03472C44 B 0x3472C54
	0x03472C48 B 0x3472C54
	0x03472C4C B 0x3472C54
	0x03472C50 B 0x3472C54
	0x03472C54 MOV X19, X0
	0x03472C58 CMP W1, 0x1
	0x03472C5C B.NE 0x3472C90
	0x03472C60 MOV X0, X19
	0x03472C64 BL 0x3EB1AD0
	0x03472C68 LDR X20, [X0]
	0x03472C6C BL 0x3EB1AE0
	0x03472C70 ADRP X8, 0xC86000
	0x03472C74 LDR X8, [X8 + 0x708]
	0x03472C78 ADD X0, X31, 0x30
	0x03472C7C LDR X1, [X8]
	0x03472C80 BL 0x2C0A83C
	0x03472C84 CBZ X20, 0x3472C20
	0x03472C88 MOV X0, X20
	0x03472C8C BL 0x1C16F18
	0x03472C90 MOV X20, X31
	0x03472C94 B 0x3472C9C
	0x03472C98 MOV X19, X0
	0x03472C9C ADRP X8, 0xC86000
	0x03472CA0 LDR X8, [X8 + 0x708]
	0x03472CA4 LDR X1, [X8]
	0x03472CA8 ADD X0, X31, 0x30
	0x03472CAC BL 0x2C0A83C
	0x03472CB0 CBNZ X20, 0x3472CBC
	0x03472CB4 MOV X0, X19
	0x03472CB8 BL 0x1D2C690
	0x03472CBC MOV X0, X20
	0x03472CC0 BL 0x1C16F18
	0x03472CC4 BL 0x1990590
	0x03472CC8 STR X30, [X31 - 0x30]!
	0x03472CCC STP X22, X21, [X31 + 0x10]
	0x03472CD0 STP X20, X19, [X31 + 0x20]
	0x03472CD4 ADRP X22, 0xF6B000
	0x03472CD8 ADRP X21, 0xC84000
	0x03472CDC LDRB W8, [X22 + 0x7FA]
	0x03472CE0 LDR X21, [X21 + 0x130]
	0x03472CE4 MOV X19, X1
	0x03472CE8 MOV X20, X0
	0x03472CEC TBNZ X8, 0x0, 0x3472D10
	0x03472CF0 ADRP X0, 0xC84000
	0x03472CF4 LDR X0, [X0 + 0x248]
	0x03472CF8 BL 0x1C16CF4
	0x03472CFC ADRP X0, 0xC84000
	0x03472D00 LDR X0, [X0 + 0x130]
	0x03472D04 BL 0x1C16CF4
	0x03472D08 MOVZ W8, 0x1
	0x03472D0C STRB W8, [X22 + 0x7FA]
	0x03472D10 LDR X0, [X21]
	0x03472D14 ADRP X21, 0xC84000
	0x03472D18 LDR W8, [X0 + 0xE0]
	0x03472D1C LDR X21, [X21 + 0x248]
	0x03472D20 CBNZ W8, 0x3472D28
	0x03472D24 BL 0x1C16DFC
	0x03472D28 LDR X2, [X21]
	0x03472D2C ADD X0, X20, 0x8
	0x03472D30 MOV X1, X19
	0x03472D34 LDP X20, X19, [X31 + 0x20]
	0x03472D38 LDP X22, X21, [X31 + 0x10]
	0x03472D3C LDR X30, [X31], #0x30
	0x03472D40 B 0x2632228
	0x03472D44 LDR X0, [X0 + 0x10]
	0x03472D48 RET
	0x03472D4C STR X1, [X0 + 0x10]
	0x03472D50 RET
	0x03472D54 STR X30, [X31 - 0x20]!
	0x03472D58 STP X20, X19, [X31 + 0x10]
	0x03472D5C ADRP X20, 0xF6B000
	0x03472D60 LDRB W8, [X20 + 0x7FB]
	0x03472D64 MOV X19, X0
	0x03472D68 TBNZ X8, 0x0, 0x3472D80
	0x03472D6C ADRP X0, 0xCBE000
	0x03472D70 LDR X0, [X0 + 0x808]
	0x03472D74 BL 0x1C16CF4
	0x03472D78 MOVZ W8, 0x1
	0x03472D7C STRB W8, [X20 + 0x7FB]
	0x03472D80 LDR X0, [X19 + 0x18]
	0x03472D84 CBNZ X0, 0x3472DAC
	0x03472D88 ADRP X19, 0xCBE000
	0x03472D8C LDR X19, [X19 + 0x808]
	0x03472D90 LDR X0, [X19]
	0x03472D94 LDR W8, [X0 + 0xE0]
	0x03472D98 CBNZ W8, 0x3472DA4
	0x03472D9C BL 0x1C16DFC
	0x03472DA0 LDR X0, [X19]
	0x03472DA4 LDR X8, [X0 + 0xB8]
	0x03472DA8 LDR X0, [X8]
	0x03472DAC LDP X20, X19, [X31 + 0x10]
	0x03472DB0 LDR X30, [X31], #0x20
	0x03472DB4 RET
	0x03472DB8 LDR X0, [X0 + 0x18]
	0x03472DBC RET
	0x03472DC0 STR X1, [X0 + 0x18]
	0x03472DC4 RET
	0x03472DC8 LDR X0, [X0 + 0x20]
	0x03472DCC RET
	0x03472DD0 LDR X0, [X0 + 0x20]
	0x03472DD4 RET
	0x03472DD8 STR X1, [X0 + 0x20]
	0x03472DDC RET
	0x03472DE0 LDR X0, [X0 + 0x28]
	0x03472DE4 RET
	0x03472DE8 STR X1, [X0 + 0x28]
	0x03472DEC RET
	0x03472DF0 LDR X0, [X0 + 0x30]
	0x03472DF4 RET
	0x03472DF8 STR X1, [X0 + 0x30]
	0x03472DFC RET
	0x03472E00 LDR X0, [X0 + 0x38]
	0x03472E04 RET
	0x03472E08 STR X1, [X0 + 0x38]
	0x03472E0C RET
	0x03472E10 LDR X0, [X0 + 0x40]
	0x03472E14 RET
	0x03472E18 STR X1, [X0 + 0x40]
	0x03472E1C RET
	0x03472E20 STP X30, X21, [X31 - 0x20]!
	0x03472E24 STP X20, X19, [X31 + 0x10]
	0x03472E28 ADRP X21, 0xF6B000
	0x03472E2C LDRB W8, [X21 + 0x7FC]
	0x03472E30 MOV X19, X1
	0x03472E34 MOV X20, X0
	0x03472E38 TBNZ X8, 0x0, 0x3472E50
	0x03472E3C ADRP X0, 0xCBE000
	0x03472E40 LDR X0, [X0 + 0x810]
	0x03472E44 BL 0x1C16CF4
	0x03472E48 MOVZ W8, 0x1
	0x03472E4C STRB W8, [X21 + 0x7FC]
	0x03472E50 CBZ X19, 0x3472E88
	0x03472E54 ADRP X8, 0xCBE000
	0x03472E58 LDR X8, [X8 + 0x810]
	0x03472E5C LDR X9, [X19]
	0x03472E60 LDR X8, [X8]
	0x03472E64 LDRB W11, [X9 + 0x130]
	0x03472E68 LDRB W10, [X8 + 0x130]
	0x03472E6C CMP W11, W10
	0x03472E70 B.CC 0x3472E88
	0x03472E74 LDR X9, [X9 + 0xC8]
	0x03472E78 ADD X9, X9, X10, 0x3, LSL
	0x03472E7C LDUR X9, [X9 - 0x8]
	0x03472E80 CMP X9, X8
	0x03472E84 B.EQ 0x3472E98
	0x03472E88 LDP X20, X19, [X31 + 0x10]
	0x03472E8C MOV W0, W31
	0x03472E90 LDP X30, X21, [X31], #0x20
	0x03472E94 RET
	0x03472E98 MOV X0, X20
	0x03472E9C MOV X1, X19
	0x03472EA0 LDP X20, X19, [X31 + 0x10]
	0x03472EA4 LDP X30, X21, [X31], #0x20
	0x03472EA8 B 0x3472EAC
	0x03472EAC STP X30, X21, [X31 - 0x20]!
	0x03472EB0 STP X20, X19, [X31 + 0x10]
	0x03472EB4 ADRP X21, 0xF6B000
	0x03472EB8 LDRB W8, [X21 + 0x7FD]
	0x03472EBC MOV X19, X1
	0x03472EC0 MOV X20, X0
	0x03472EC4 TBNZ X8, 0x0, 0x3472EDC
	0x03472EC8 ADRP X0, 0xCBD000
	0x03472ECC LDR X0, [X0 + 0x770]
	0x03472ED0 BL 0x1C16CF4
	0x03472ED4 MOVZ W8, 0x1
	0x03472ED8 STRB W8, [X21 + 0x7FD]
	0x03472EDC CBZ X19, 0x3472F5C
	0x03472EE0 ADRP X10, 0xCBD000
	0x03472EE4 LDR X8, [X19]
	0x03472EE8 LDR X10, [X10 + 0x770]
	0x03472EEC LDR X20, [X20 + 0x10]
	0x03472EF0 LDRH W9, [X8 + 0x12E]
	0x03472EF4 LDR X1, [X10]
	0x03472EF8 CBZ X9, 0x3472F1C
	0x03472EFC LDR X10, [X8 + 0xB0]
	0x03472F00 ADD X10, X10, 0x8
	0x03472F04 LDUR X11, [X10 - 0x8]
	0x03472F08 CMP X11, X1
	0x03472F0C B.EQ 0x3472F2C
	0x03472F10 SUBS X9, X9, 0x1
	0x03472F14 ADD X10, X10, 0x10
	0x03472F18 B.NE 0x3472F04
	0x03472F1C MOV X0, X19
	0x03472F20 MOV W2, W31
	0x03472F24 BL 0x1C5C788
	0x03472F28 B 0x3472F38
	0x03472F2C LDRSW X9, [X10]
	0x03472F30 ADD X8, X8, X9, 0x4, LSL
	0x03472F34 ADD X0, X8, 0x138
	0x03472F38 LDP X8, X1, [X0]
	0x03472F3C MOV X0, X19
	0x03472F40 BLR X8
	0x03472F44 MOV X1, X0
	0x03472F48 MOV X0, X20
	0x03472F4C LDP X20, X19, [X31 + 0x10]
	0x03472F50 MOV X2, X31
	0x03472F54 LDP X30, X21, [X31], #0x20
	0x03472F58 B 0x3226C14
	0x03472F5C BL 0x1C16F20
	0x03472F60 LDR X0, [X0 + 0x10]
	0x03472F64 CBZ X0, 0x3472F74
	0x03472F68 LDR X8, [X0]
	0x03472F6C LDP X2, X1, [X8 + 0x158]
	0x03472F70 BR X2
	0x03472F74 RET
	0x03472F78 STP X30, X23, [X31 - 0x30]!
	0x03472F7C STP X22, X21, [X31 + 0x10]
	0x03472F80 STP X20, X19, [X31 + 0x20]
	0x03472F84 ADRP X23, 0xF6B000
	0x03472F88 ADRP X21, 0xC81000
	0x03472F8C ADRP X22, 0xCBE000
	0x03472F90 ADRP X20, 0xC81000
	0x03472F94 LDRB W8, [X23 + 0x7FE]
	0x03472F98 LDR X21, [X21 + 0x838]
	0x03472F9C LDR X22, [X22 + 0x818]
	0x03472FA0 LDR X20, [X20 + 0x9D0]
	0x03472FA4 MOV X19, X0
	0x03472FA8 TBNZ X8, 0x0, 0x3472FE4
	0x03472FAC ADRP X0, 0xC81000
	0x03472FB0 LDR X0, [X0 + 0x9D0]
	0x03472FB4 BL 0x1C16CF4
	0x03472FB8 ADRP X0, 0xCBE000
	0x03472FBC LDR X0, [X0 + 0x818]
	0x03472FC0 BL 0x1C16CF4
	0x03472FC4 ADRP X0, 0xCBE000
	0x03472FC8 LDR X0, [X0 + 0x820]
	0x03472FCC BL 0x1C16CF4
	0x03472FD0 ADRP X0, 0xC81000
	0x03472FD4 LDR X0, [X0 + 0x838]
	0x03472FD8 BL 0x1C16CF4
	0x03472FDC MOVZ W8, 0x1
	0x03472FE0 STRB W8, [X23 + 0x7FE]
	0x03472FE4 MOV X0, X19
	0x03472FE8 BL 0x3472D54
	0x03472FEC LDR X8, [X21]
	0x03472FF0 LDR X2, [X22]
	0x03472FF4 MOV X1, X0
	0x03472FF8 MOV X0, X8
	0x03472FFC BL 0x226B7E8
	0x03473000 LDR X8, [X20]
	0x03473004 MOV X21, X0
	0x03473008 MOVZ W1, 0x7
	0x0347300C MOV X0, X8
	0x03473010 BL 0x1C16D6C
	0x03473014 CBZ X0, 0x347317C
	0x03473018 LDR X22, [X19 + 0x10]
	0x0347301C MOV X20, X0
	0x03473020 CBZ X22, 0x3473038
	0x03473024 LDR X8, [X20]
	0x03473028 MOV X0, X22
	0x0347302C LDR X1, [X8 + 0x40]
	0x03473030 BL 0x1C16E00
	0x03473034 CBZ X0, 0x3473170
	0x03473038 LDR W8, [X20 + 0x18]
	0x0347303C CBZ W8, 0x347316C
	0x03473040 STR X22, [X20 + 0x20]
	0x03473044 CBZ X21, 0x3473060
	0x03473048 LDR X8, [X20]
	0x0347304C MOV X0, X21
	0x03473050 LDR X1, [X8 + 0x40]
	0x03473054 BL 0x1C16E00
	0x03473058 CBZ X0, 0x3473170
	0x0347305C LDR W8, [X20 + 0x18]
	0x03473060 CMP W8, 0x1
	0x03473064 B.LS 0x347316C
	0x03473068 STR X21, [X20 + 0x28]
	0x0347306C LDR X21, [X19 + 0x20]
	0x03473070 CBZ X21, 0x347308C
	0x03473074 LDR X8, [X20]
	0x03473078 MOV X0, X21
	0x0347307C LDR X1, [X8 + 0x40]
	0x03473080 BL 0x1C16E00
	0x03473084 CBZ X0, 0x3473170
	0x03473088 LDR W8, [X20 + 0x18]
	0x0347308C CMP W8, 0x2
	0x03473090 B.LS 0x347316C
	0x03473094 STR X21, [X20 + 0x30]
	0x03473098 LDR X21, [X19 + 0x28]
	0x0347309C CBZ X21, 0x34730B8
	0x034730A0 LDR X8, [X20]
	0x034730A4 MOV X0, X21
	0x034730A8 LDR X1, [X8 + 0x40]
	0x034730AC BL 0x1C16E00
	0x034730B0 CBZ X0, 0x3473170
	0x034730B4 LDR W8, [X20 + 0x18]
	0x034730B8 CMP W8, 0x3
	0x034730BC B.LS 0x347316C
	0x034730C0 STR X21, [X20 + 0x38]
	0x034730C4 LDR X21, [X19 + 0x30]
	0x034730C8 CBZ X21, 0x34730E4
	0x034730CC LDR X8, [X20]
	0x034730D0 MOV X0, X21
	0x034730D4 LDR X1, [X8 + 0x40]
	0x034730D8 BL 0x1C16E00
	0x034730DC CBZ X0, 0x3473170
	0x034730E0 LDR W8, [X20 + 0x18]
	0x034730E4 CMP W8, 0x4
	0x034730E8 B.LS 0x347316C
	0x034730EC STR X21, [X20 + 0x40]
	0x034730F0 LDR X21, [X19 + 0x38]
	0x034730F4 CBZ X21, 0x3473110
	0x034730F8 LDR X8, [X20]
	0x034730FC MOV X0, X21
	0x03473100 LDR X1, [X8 + 0x40]
	0x03473104 BL 0x1C16E00
	0x03473108 CBZ X0, 0x3473170
	0x0347310C LDR W8, [X20 + 0x18]
	0x03473110 CMP W8, 0x5
	0x03473114 B.LS 0x347316C
	0x03473118 STR X21, [X20 + 0x48]
	0x0347311C LDR X19, [X19 + 0x40]
	0x03473120 CBZ X19, 0x347313C
	0x03473124 LDR X8, [X20]
	0x03473128 MOV X0, X19
	0x0347312C LDR X1, [X8 + 0x40]
	0x03473130 BL 0x1C16E00
	0x03473134 CBZ X0, 0x3473170
	0x03473138 LDR W8, [X20 + 0x18]
	0x0347313C CMP W8, 0x6
	0x03473140 B.LS 0x347316C
	0x03473144 ADRP X8, 0xCBD000
	0x03473148 LDR X8, [X8 + 0x820]
	0x0347314C STR X19, [X20 + 0x50]
	0x03473150 MOV X1, X20
	0x03473154 LDP X20, X19, [X31 + 0x20]
	0x03473158 LDR X0, [X8]
	0x0347315C LDP X22, X21, [X31 + 0x10]
	0x03473160 MOV X2, X31
	0x03473164 LDP X30, X23, [X31], #0x30
	0x03473168 B 0x3227C5C
	0x0347316C BL 0x1C16F28
	0x03473170 BL 0x1C16F44
	0x03473174 MOV X1, X31
	0x03473178 BL 0x1C16DEC
	0x0347317C BL 0x1C16F20
	0x03473180 MOV X1, X31
	0x03473184 B 0x33BDD8C
	0x03473188 LDR X0, [X0 + 0x10]
	0x0347318C RET
	0x03473190 STR X1, [X0 + 0x10]
	0x03473194 RET
	0x03473198 LDR W0, [X0 + 0x18]
	0x0347319C RET
	0x034731A0 STR W1, [X0 + 0x18]
	0x034731A4 RET
	0x034731A8 LDR X0, [X0 + 0x20]
	0x034731AC RET
	0x034731B0 STR X1, [X0 + 0x20]
	0x034731B4 RET
	0x034731B8 LDR X0, [X0 + 0x28]
	0x034731BC RET
	0x034731C0 STR X1, [X0 + 0x28]
	0x034731C4 RET
	0x034731C8 LDRB W0, [X0 + 0x30]
	0x034731CC RET
	0x034731D0 AND W8, W1, 0x1
	0x034731D4 STRB W8, [X0 + 0x30]
	0x034731D8 RET
	0x034731DC LDR X0, [X0 + 0x38]
	0x034731E0 RET
	0x034731E4 STR X1, [X0 + 0x38]
	0x034731E8 RET
	0x034731EC LDR X0, [X0 + 0x40]
	0x034731F0 RET
	0x034731F4 STR X1, [X0 + 0x40]
	0x034731F8 RET
	0x034731FC LDR X0, [X0 + 0x48]
	0x03473200 RET
	0x03473204 STR X1, [X0 + 0x48]
	0x03473208 RET
	0x0347320C LDR X0, [X0 + 0x50]
	0x03473210 RET
	0x03473214 STR X1, [X0 + 0x50]
	0x03473218 RET
	0x0347321C LDR X0, [X0 + 0x58]
	0x03473220 RET
	0x03473224 STR X1, [X0 + 0x58]
	0x03473228 RET
	0x0347322C LDR X0, [X0 + 0x60]
	0x03473230 RET
	0x03473234 STR X1, [X0 + 0x60]
	0x03473238 RET
	0x0347323C SUB X31, X31, 0x30
	0x03473240 STP X30, X21, [X31 + 0x10]
	0x03473244 STP X20, X19, [X31 + 0x20]
	0x03473248 ADRP X20, 0xF6A000
	0x0347324C ADRP X21, 0xC80000
	0x03473250 LDRB W8, [X20 + 0x7FF]
	0x03473254 LDR X21, [X21 + 0x9D0]
	0x03473258 MOV X19, X0
	0x0347325C TBNZ X8, 0x0, 0x3473298
	0x03473260 ADRP X0, 0xC80000
	0x03473264 LDR X0, [X0 + 0xB58]
	0x03473268 BL 0x1C16CF4
	0x0347326C ADRP X0, 0xC80000
	0x03473270 LDR X0, [X0 + 0x758]
	0x03473274 BL 0x1C16CF4
	0x03473278 ADRP X0, 0xC80000
	0x0347327C LDR X0, [X0 + 0x9D0]
	0x03473280 BL 0x1C16CF4
	0x03473284 ADRP X0, 0xCBD000
	0x03473288 LDR X0, [X0 + 0x828]
	0x0347328C BL 0x1C16CF4
	0x03473290 MOVZ W8, 0x1
	0x03473294 STRB W8, [X20 + 0x7FF]
	0x03473298 LDR X0, [X21]
	0x0347329C MOVZ W1, 0xB
	0x034732A0 BL 0x1C16D6C
	0x034732A4 CBZ X0, 0x34734FC
	0x034732A8 LDR X21, [X19 + 0x10]
	0x034732AC MOV X20, X0
	0x034732B0 CBZ X21, 0x34732C8
	0x034732B4 LDR X8, [X20]
	0x034732B8 MOV X0, X21
	0x034732BC LDR X1, [X8 + 0x40]
	0x034732C0 BL 0x1C16E00
	0x034732C4 CBZ X0, 0x34734F0
	0x034732C8 LDR W8, [X20 + 0x18]
	0x034732CC CBZ W8, 0x34734EC
	0x034732D0 ADRP X8, 0xC80000
	0x034732D4 LDR X8, [X8 + 0x758]
	0x034732D8 STR X21, [X20 + 0x20]
	0x034732DC LDR W9, [X19 + 0x18]
	0x034732E0 ADD X1, X31, 0xC
	0x034732E4 LDR X0, [X8]
	0x034732E8 STR W9, [X31 + 0xC]
	0x034732EC BL 0x1C16E04
	0x034732F0 MOV X21, X0
	0x034732F4 CBZ X0, 0x347330C
	0x034732F8 LDR X8, [X20]
	0x034732FC MOV X0, X21
	0x03473300 LDR X1, [X8 + 0x40]
	0x03473304 BL 0x1C16E00
	0x03473308 CBZ X0, 0x34734F0
	0x0347330C LDR W8, [X20 + 0x18]
	0x03473310 CMP W8, 0x1
	0x03473314 B.LS 0x34734EC
	0x03473318 STR X21, [X20 + 0x28]
	0x0347331C LDR X21, [X19 + 0x20]
	0x03473320 CBZ X21, 0x347333C
	0x03473324 LDR X8, [X20]
	0x03473328 MOV X0, X21
	0x0347332C LDR X1, [X8 + 0x40]
	0x03473330 BL 0x1C16E00
	0x03473334 CBZ X0, 0x34734F0
	0x03473338 LDR W8, [X20 + 0x18]
	0x0347333C CMP W8, 0x2
	0x03473340 B.LS 0x34734EC
	0x03473344 STR X21, [X20 + 0x30]
	0x03473348 LDR X21, [X19 + 0x28]
	0x0347334C CBZ X21, 0x3473368
	0x03473350 LDR X8, [X20]
	0x03473354 MOV X0, X21
	0x03473358 LDR X1, [X8 + 0x40]
	0x0347335C BL 0x1C16E00
	0x03473360 CBZ X0, 0x34734F0
	0x03473364 LDR W8, [X20 + 0x18]
	0x03473368 CMP W8, 0x3
	0x0347336C B.LS 0x34734EC
	0x03473370 ADRP X8, 0xC80000
	0x03473374 LDR X8, [X8 + 0xB58]
	0x03473378 STR X21, [X20 + 0x38]
	0x0347337C LDRB W9, [X19 + 0x30]
	0x03473380 ADD X1, X31, 0x8
	0x03473384 LDR X0, [X8]
	0x03473388 STRB W9, [X31 + 0x8]
	0x0347338C BL 0x1C16E04
	0x03473390 MOV X21, X0
	0x03473394 CBZ X0, 0x34733AC
	0x03473398 LDR X8, [X20]
	0x0347339C MOV X0, X21
	0x034733A0 LDR X1, [X8 + 0x40]
	0x034733A4 BL 0x1C16E00
	0x034733A8 CBZ X0, 0x34734F0
	0x034733AC LDR W8, [X20 + 0x18]
	0x034733B0 CMP W8, 0x4
	0x034733B4 B.LS 0x34734EC
	0x034733B8 STR X21, [X20 + 0x40]
	0x034733BC LDR X21, [X19 + 0x38]
	0x034733C0 CBZ X21, 0x34733DC
	0x034733C4 LDR X8, [X20]
	0x034733C8 MOV X0, X21
	0x034733CC LDR X1, [X8 + 0x40]
	0x034733D0 BL 0x1C16E00
	0x034733D4 CBZ X0, 0x34734F0
	0x034733D8 LDR W8, [X20 + 0x18]
	0x034733DC CMP W8, 0x5
	0x034733E0 B.LS 0x34734EC
	0x034733E4 STR X21, [X20 + 0x48]
	0x034733E8 LDR X21, [X19 + 0x40]
	0x034733EC CBZ X21, 0x3473408
	0x034733F0 LDR X8, [X20]
	0x034733F4 MOV X0, X21
	0x034733F8 LDR X1, [X8 + 0x40]
	0x034733FC BL 0x1C16E00
	0x03473400 CBZ X0, 0x34734F0
	0x03473404 LDR W8, [X20 + 0x18]
	0x03473408 CMP W8, 0x6
	0x0347340C B.LS 0x34734EC
	0x03473410 STR X21, [X20 + 0x50]
	0x03473414 LDR X21, [X19 + 0x48]
	0x03473418 CBZ X21, 0x3473434
	0x0347341C LDR X8, [X20]
	0x03473420 MOV X0, X21
	0x03473424 LDR X1, [X8 + 0x40]
	0x03473428 BL 0x1C16E00
	0x0347342C CBZ X0, 0x34734F0
	0x03473430 LDR W8, [X20 + 0x18]
	0x03473434 CMP W8, 0x7
	0x03473438 B.LS 0x34734EC
	0x0347343C STR X21, [X20 + 0x58]
	0x03473440 LDR X21, [X19 + 0x50]
	0x03473444 CBZ X21, 0x3473460
	0x03473448 LDR X8, [X20]
	0x0347344C MOV X0, X21
	0x03473450 LDR X1, [X8 + 0x40]
	0x03473454 BL 0x1C16E00
	0x03473458 CBZ X0, 0x34734F0
	0x0347345C LDR W8, [X20 + 0x18]
	0x03473460 CMP W8, 0x8
	0x03473464 B.LS 0x34734EC
	0x03473468 STR X21, [X20 + 0x60]
	0x0347346C LDR X21, [X19 + 0x58]
	0x03473470 CBZ X21, 0x347348C
	0x03473474 LDR X8, [X20]
	0x03473478 MOV X0, X21
	0x0347347C LDR X1, [X8 + 0x40]
	0x03473480 BL 0x1C16E00
	0x03473484 CBZ X0, 0x34734F0
	0x03473488 LDR W8, [X20 + 0x18]
	0x0347348C CMP W8, 0x9
	0x03473490 B.LS 0x34734EC
	0x03473494 STR X21, [X20 + 0x68]
	0x03473498 LDR X19, [X19 + 0x60]
	0x0347349C CBZ X19, 0x34734B8
	0x034734A0 LDR X8, [X20]
	0x034734A4 MOV X0, X19
	0x034734A8 LDR X1, [X8 + 0x40]
	0x034734AC BL 0x1C16E00
	0x034734B0 CBZ X0, 0x34734F0
	0x034734B4 LDR W8, [X20 + 0x18]
	0x034734B8 CMP W8, 0xA
	0x034734BC B.LS 0x34734EC
	0x034734C0 ADRP X8, 0xCBD000
	0x034734C4 LDR X8, [X8 + 0x828]
	0x034734C8 STR X19, [X20 + 0x70]
	0x034734CC MOV X1, X20
	0x034734D0 MOV X2, X31
	0x034734D4 LDR X0, [X8]
	0x034734D8 BL 0x3227C5C
	0x034734DC LDP X20, X19, [X31 + 0x20]
	0x034734E0 LDP X30, X21, [X31 + 0x10]
	0x034734E4 ADD X31, X31, 0x30
	0x034734E8 RET
	0x034734EC BL 0x1C16F28
	0x034734F0 BL 0x1C16F44
	0x034734F4 MOV X1, X31
	0x034734F8 BL 0x1C16DEC
	0x034734FC BL 0x1C16F20
	0x03473500 MOV X1, X31
	0x03473504 B 0x33BDD8C
	0x03473508 LDR X0, [X0 + 0x10]
	0x0347350C RET
	0x03473510 STR X1, [X0 + 0x10]
	0x03473514 RET
	0x03473518 STR X30, [X31 - 0x20]!
	0x0347351C STP X20, X19, [X31 + 0x10]
	0x03473520 ADRP X20, 0xF6A000
	0x03473524 LDRB W8, [X20 + 0x800]
	0x03473528 MOV X19, X0
	0x0347352C TBNZ X8, 0x0, 0x3473550
	0x03473530 ADRP X0, 0xCBD000
	0x03473534 LDR X0, [X0 + 0x830]
	0x03473538 BL 0x1C16CF4
	0x0347353C ADRP X0, 0xCBD000
	0x03473540 LDR X0, [X0 + 0x838]
	0x03473544 BL 0x1C16CF4
	0x03473548 MOVZ W8, 0x1
	0x0347354C STRB W8, [X20 + 0x800]
	0x03473550 LDR X19, [X19 + 0x18]
	0x03473554 CBNZ X19, 0x3473580
	0x03473558 ADRP X8, 0xCBD000
	0x0347355C LDR X8, [X8 + 0x838]
	0x03473560 LDR X0, [X8]
	0x03473564 BL 0x1C16F10
	0x03473568 ADRP X8, 0xCBD000
	0x0347356C LDR X8, [X8 + 0x830]
	0x03473570 MOV W1, W31
	0x03473574 MOV X19, X0
	0x03473578 LDR X2, [X8]
	0x0347357C BL 0x301B830
	0x03473580 MOV X0, X19
	0x03473584 LDP X20, X19, [X31 + 0x10]
	0x03473588 LDR X30, [X31], #0x20
	0x0347358C RET
	0x03473590 LDR X0, [X0 + 0x18]
	0x03473594 RET
	0x03473598 STR X1, [X0 + 0x18]
	0x0347359C RET
	0x034735A0 STR X30, [X31 - 0x20]!
	0x034735A4 STP X20, X19, [X31 + 0x10]
	0x034735A8 ADRP X20, 0xF6A000
	0x034735AC LDRB W8, [X20 + 0x801]
	0x034735B0 MOV X19, X0
	0x034735B4 TBNZ X8, 0x0, 0x34735D8
	0x034735B8 ADRP X0, 0xCBD000
	0x034735BC LDR X0, [X0 + 0x830]
	0x034735C0 BL 0x1C16CF4
	0x034735C4 ADRP X0, 0xCBD000
	0x034735C8 LDR X0, [X0 + 0x838]
	0x034735CC BL 0x1C16CF4
	0x034735D0 MOVZ W8, 0x1
	0x034735D4 STRB W8, [X20 + 0x801]
	0x034735D8 LDR X19, [X19 + 0x20]
	0x034735DC CBNZ X19, 0x3473608
	0x034735E0 ADRP X8, 0xCBD000
	0x034735E4 LDR X8, [X8 + 0x838]
	0x034735E8 LDR X0, [X8]
	0x034735EC BL 0x1C16F10
	0x034735F0 ADRP X8, 0xCBD000
	0x034735F4 LDR X8, [X8 + 0x830]
	0x034735F8 MOV W1, W31
	0x034735FC MOV X19, X0
	0x03473600 LDR X2, [X8]
	0x03473604 BL 0x301B830
	0x03473608 MOV X0, X19
	0x0347360C LDP X20, X19, [X31 + 0x10]
	0x03473610 LDR X30, [X31], #0x20
	0x03473614 RET
	0x03473618 LDR X0, [X0 + 0x20]
	0x0347361C RET
	0x03473620 STR X1, [X0 + 0x20]
	0x03473624 RET
	0x03473628 LDR X0, [X0 + 0x28]
	0x0347362C RET
	0x03473630 STR X1, [X0 + 0x28]
	0x03473634 RET
	0x03473638 LDR X0, [X0 + 0x30]
	0x0347363C RET
	0x03473640 STR X1, [X0 + 0x30]
	0x03473644 RET
	0x03473648 LDR X0, [X0 + 0x38]
	0x0347364C RET
	0x03473650 STR X1, [X0 + 0x38]
	0x03473654 RET
	0x03473658 LDR X0, [X0 + 0x40]
	0x0347365C RET
	0x03473660 STR X1, [X0 + 0x40]
	0x03473664 RET
	0x03473668 STP X30, X23, [X31 - 0x30]!
	0x0347366C STP X22, X21, [X31 + 0x10]
	0x03473670 STP X20, X19, [X31 + 0x20]
	0x03473674 ADRP X20, 0xF6A000
	0x03473678 ADRP X22, 0xC82000
	0x0347367C ADRP X23, 0xCBD000
	0x03473680 ADRP X21, 0xC80000
	0x03473684 LDRB W8, [X20 + 0x802]
	0x03473688 LDR X22, [X22 + 0x3A0]
	0x0347368C LDR X23, [X23 + 0x818]
	0x03473690 LDR X21, [X21 + 0xAC8]
	0x03473694 MOV X19, X0
	0x03473698 TBNZ X8, 0x0, 0x3473728
	0x0347369C ADRP X0, 0xC80000
	0x034736A0 LDR X0, [X0 + 0xAC8]
	0x034736A4 BL 0x1C16CF4
	0x034736A8 ADRP X0, 0xCBD000
	0x034736AC LDR X0, [X0 + 0x818]
	0x034736B0 BL 0x1C16CF4
	0x034736B4 ADRP X0, 0xCBD000
	0x034736B8 LDR X0, [X0 + 0x840]
	0x034736BC BL 0x1C16CF4
	0x034736C0 ADRP X0, 0xCBD000
	0x034736C4 LDR X0, [X0 + 0x848]
	0x034736C8 BL 0x1C16CF4
	0x034736CC ADRP X0, 0xCBC000
	0x034736D0 LDR X0, [X0 + 0x5B8]
	0x034736D4 BL 0x1C16CF4
	0x034736D8 ADRP X0, 0xCBD000
	0x034736DC LDR X0, [X0 + 0x850]
	0x034736E0 BL 0x1C16CF4
	0x034736E4 ADRP X0, 0xCBD000
	0x034736E8 LDR X0, [X0 + 0x858]
	0x034736EC BL 0x1C16CF4
	0x034736F0 ADRP X0, 0xCBD000
	0x034736F4 LDR X0, [X0 + 0x860]
	0x034736F8 BL 0x1C16CF4
	0x034736FC ADRP X0, 0xC82000
	0x03473700 LDR X0, [X0 + 0x3A0]
	0x03473704 BL 0x1C16CF4
	0x03473708 ADRP X0, 0xCBD000
	0x0347370C LDR X0, [X0 + 0x868]
	0x03473710 BL 0x1C16CF4
	0x03473714 ADRP X0, 0xCBD000
	0x03473718 LDR X0, [X0 + 0x870]
	0x0347371C BL 0x1C16CF4
	0x03473720 MOVZ W8, 0x1
	0x03473724 STRB W8, [X20 + 0x802]
	0x03473728 MOV X0, X19
	0x0347372C BL 0x3473518
	0x03473730 LDR X8, [X22]
	0x03473734 LDR X2, [X23]
	0x03473738 MOV X1, X0
	0x0347373C MOV X0, X8
	0x03473740 BL 0x226B7E8
	0x03473744 MOV X20, X0
	0x03473748 MOV X0, X19
	0x0347374C BL 0x34735A0
	0x03473750 LDR X8, [X22]
	0x03473754 LDR X2, [X23]
	0x03473758 MOV X1, X0
	0x0347375C MOV X0, X8
	0x03473760 BL 0x226B7E8
	0x03473764 LDR X8, [X21]
	0x03473768 MOV X21, X0
	0x0347376C MOVZ W1, 0xF
	0x03473770 MOV X0, X8
	0x03473774 BL 0x1C16D6C
	0x03473778 CBZ X0, 0x34738BC
	0x0347377C LDR W8, [X0 + 0x18]
	0x03473780 CBZ W8, 0x34738B8
	0x03473784 ADRP X9, 0xCBD000
	0x03473788 LDR X9, [X9 + 0x868]
	0x0347378C CMP W8, 0x1
	0x03473790 LDR X9, [X9]
	0x03473794 STR X9, [X0 + 0x20]
	0x03473798 B.EQ 0x34738B8
	0x0347379C LDR X9, [X19 + 0x10]
	0x034737A0 CMP W8, 0x2
	0x034737A4 STR X9, [X0 + 0x28]
	0x034737A8 B.LS 0x34738B8
	0x034737AC ADRP X9, 0xCBD000
	0x034737B0 LDR X9, [X9 + 0x848]
	0x034737B4 CMP W8, 0x3
	0x034737B8 LDR X9, [X9]
	0x034737BC STR X9, [X0 + 0x30]
	0x034737C0 B.EQ 0x34738B8
	0x034737C4 CMP W8, 0x4
	0x034737C8 STR X20, [X0 + 0x38]
	0x034737CC B.LS 0x34738B8
	0x034737D0 ADRP X9, 0xCBD000
	0x034737D4 LDR X9, [X9 + 0x850]
	0x034737D8 CMP W8, 0x5
	0x034737DC LDR X9, [X9]
	0x034737E0 STR X9, [X0 + 0x40]
	0x034737E4 B.EQ 0x34738B8
	0x034737E8 CMP W8, 0x6
	0x034737EC STR X21, [X0 + 0x48]
	0x034737F0 B.LS 0x34738B8
	0x034737F4 ADRP X9, 0xCBD000
	0x034737F8 LDR X9, [X9 + 0x870]
	0x034737FC CMP W8, 0x7
	0x03473800 LDR X9, [X9]
	0x03473804 STR X9, [X0 + 0x50]
	0x03473808 B.EQ 0x34738B8
	0x0347380C LDR X9, [X19 + 0x28]
	0x03473810 CMP W8, 0x8
	0x03473814 STR X9, [X0 + 0x58]
	0x03473818 B.LS 0x34738B8
	0x0347381C ADRP X9, 0xCBD000
	0x03473820 LDR X9, [X9 + 0x860]
	0x03473824 CMP W8, 0x9
	0x03473828 LDR X9, [X9]
	0x0347382C STR X9, [X0 + 0x60]
	0x03473830 B.EQ 0x34738B8
	0x03473834 LDR X9, [X19 + 0x30]
	0x03473838 CMP W8, 0xA
	0x0347383C STR X9, [X0 + 0x68]
	0x03473840 B.LS 0x34738B8
	0x03473844 ADRP X9, 0xCBD000
	0x03473848 LDR X9, [X9 + 0x840]
	0x0347384C CMP W8, 0xB
	0x03473850 LDR X9, [X9]
	0x03473854 STR X9, [X0 + 0x70]
	0x03473858 B.EQ 0x34738B8
	0x0347385C LDR X9, [X19 + 0x38]
	0x03473860 CMP W8, 0xC
	0x03473864 STR X9, [X0 + 0x78]
	0x03473868 B.LS 0x34738B8
	0x0347386C ADRP X9, 0xCBD000
	0x03473870 LDR X9, [X9 + 0x858]
	0x03473874 CMP W8, 0xD
	0x03473878 LDR X9, [X9]
	0x0347387C STR X9, [X0 + 0x80]
	0x03473880 B.EQ 0x34738B8
	0x03473884 LDR X9, [X19 + 0x40]
	0x03473888 CMP W8, 0xE
	0x0347388C STR X9, [X0 + 0x88]
	0x03473890 B.LS 0x34738B8
	0x03473894 ADRP X8, 0xCBC000
	0x03473898 LDR X8, [X8 + 0x5B8]
	0x0347389C LDP X20, X19, [X31 + 0x20]
	0x034738A0 LDP X22, X21, [X31 + 0x10]
	0x034738A4 MOV X1, X31
	0x034738A8 LDR X8, [X8]
	0x034738AC STR X8, [X0 + 0x90]
	0x034738B0 LDP X30, X23, [X31], #0x30
	0x034738B4 B 0x32278CC
	0x034738B8 BL 0x1C16F28
	0x034738BC BL 0x1C16F20
	0x034738C0 MOV X1, X31
	0x034738C4 B 0x33BDD8C
	0x034738C8 LDRB W0, [X0 + 0x10]
	0x034738CC RET
	0x034738D0 AND W8, W1, 0x1
	0x034738D4 STRB W8, [X0 + 0x10]
	0x034738D8 RET
	0x034738DC LDR X0, [X0 + 0x18]
	0x034738E0 RET
	0x034738E4 STR X1, [X0 + 0x18]
	0x034738E8 RET
	0x034738EC LDR X0, [X0 + 0x20]
	0x034738F0 RET
	0x034738F4 STR X1, [X0 + 0x20]
	0x034738F8 RET
	0x034738FC STR X30, [X31 - 0x20]!
	0x03473900 STP X20, X19, [X31 + 0x10]
	0x03473904 ADRP X20, 0xF6A000
	0x03473908 LDRB W8, [X20 + 0x804]
	0x0347390C MOV X19, X0
	0x03473910 TBNZ X8, 0x0, 0x3473928
	0x03473914 ADRP X0, 0xCBD000
	0x03473918 LDR X0, [X0 + 0x808]
	0x0347391C BL 0x1C16CF4
	0x03473920 MOVZ W8, 0x1
	0x03473924 STRB W8, [X20 + 0x804]
	0x03473928 LDR X0, [X19 + 0x28]
	0x0347392C CBNZ X0, 0x3473954
	0x03473930 ADRP X19, 0xCBD000
	0x03473934 LDR X19, [X19 + 0x808]
	0x03473938 LDR X0, [X19]
	0x0347393C LDR W8, [X0 + 0xE0]
	0x03473940 CBNZ W8, 0x347394C
	0x03473944 BL 0x1C16DFC
	0x03473948 LDR X0, [X19]
	0x0347394C LDR X8, [X0 + 0xB8]
	0x03473950 LDR X0, [X8]
	0x03473954 LDP X20, X19, [X31 + 0x10]
	0x03473958 LDR X30, [X31], #0x20
	0x0347395C RET
	0x03473960 LDR X0, [X0 + 0x28]
	0x03473964 RET
	0x03473968 STR X1, [X0 + 0x28]
	0x0347396C RET
	0x03473970 LDR W0, [X0 + 0x30]
	0x03473974 RET
	0x03473978 STR W1, [X0 + 0x30]
	0x0347397C RET
	0x03473980 LDR X0, [X0 + 0x38]
	0x03473984 RET

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X20, 0xF6C000
	014 Move W8, [X20+2041]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {124}
	020 Move X0, 0xCBF000
	021 Move X0, [X0+2032]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBF000
	024 Move X0, [X0+2040]
	025 Call 0x1C17CF4
	026 Move X0, 0xC85000
	027 Move X0, [X0+352]
	028 Call 0x1C17CF4
	029 Move X0, 0xC85000
	030 Move X0, [X0+304]
	031 Call 0x1C17CF4
	032 Move X0, 0xC85000
	033 Move X0, [X0+360]
	034 Call 0x1C17CF4
	035 Move X0, 0xC84000
	036 Move X0, [X0+2640]
	037 Call 0x1C17CF4
	038 Move X0, 0xC84000
	039 Move X0, [X0+544]
	040 Call 0x1C17CF4
	041 Move X0, 0xC85000
	042 Move X0, [X0+368]
	043 Call 0x1C17CF4
	044 Move X0, 0xC85000
	045 Move X0, [X0+376]
	046 Call 0x1C17CF4
	047 Move X0, 0xC85000
	048 Move X0, [X0+384]
	049 Call 0x1C17CF4
	050 Move X0, 0xC85000
	051 Move X0, [X0+392]
	052 Call 0x1C17CF4
	053 Move X0, 0xC82000
	054 Move X0, [X0+3584]
	055 Call 0x1C17CF4
	056 Move X0, 0xC85000
	057 Move X0, [X0+400]
	058 Call 0x1C17CF4
	059 Move X0, 0xC85000
	060 Move X0, [X0+408]
	061 Call 0x1C17CF4
	062 Move X0, 0xC82000
	063 Move X0, [X0+3608]
	064 Call 0x1C17CF4
	065 Move X0, 0xC85000
	066 Move X0, [X0+416]
	067 Call 0x1C17CF4
	068 Move X0, 0xC85000
	069 Move X0, [X0+424]
	070 Call 0x1C17CF4
	071 Move X0, 0xC85000
	072 Move X0, [X0+432]
	073 Call 0x1C17CF4
	074 Move X0, 0xC85000
	075 Move X0, [X0+440]
	076 Call 0x1C17CF4
	077 Move X0, 0xC85000
	078 Move X0, [X0+448]
	079 Call 0x1C17CF4
	080 Move X0, 0xC85000
	081 Move X0, [X0+456]
	082 Call 0x1C17CF4
	083 Move X0, 0xC85000
	084 Move X0, [X0+464]
	085 Call 0x1C17CF4
	086 Move X0, 0xC82000
	087 Move X0, [X0+2512]
	088 Call 0x1C17CF4
	089 Move X0, 0xC85000
	090 Move X0, [X0+472]
	091 Call 0x1C17CF4
	092 Move X0, 0xC85000
	093 Move X0, [X0+480]
	094 Call 0x1C17CF4
	095 Move X0, 0xC85000
	096 Move X0, [X0+488]
	097 Call 0x1C17CF4
	098 Move X0, 0xC85000
	099 Move X0, [X0+496]
	100 Call 0x1C17CF4
	101 Move X0, 0xC85000
	102 Move X0, [X0+504]
	103 Call 0x1C17CF4
	104 Move X0, 0xC85000
	105 Move X0, [X0+512]
	106 Call 0x1C17CF4
	107 Move X0, 0xC84000
	108 Move X0, [X0+1392]
	109 Call 0x1C17CF4
	110 Move X0, 0xC85000
	111 Move X0, [X0+520]
	112 Call 0x1C17CF4
	113 Move X0, 0xC85000
	114 Move X0, [X0+528]
	115 Call 0x1C17CF4
	116 Move X0, 0xC85000
	117 Move X0, [X0+536]
	118 Call 0x1C17CF4
	119 Move X0, 0xC85000
	120 Move X0, [X0+544]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move [X20+2041], W8
	124 Move [X31+40], X31
	125 Move [X31+24], X31
	126 Move X26, 0xC85000
	127 Move W24, [X19]
	128 Move X27, [X19+88]
	129 Move X26, [X26+304]
	130 Compare W24, 0
	131 JumpIfEqual {140}
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X19+112]
	134 Move TEMP, 0
	135 Not TEMP
	136 Move W9, TEMP
	137 Move [X31+24], X8
	138 Move [X19+112], X31
	139 Move [X19], W9
	140 Move X8, [X19+104]
	141 Move TEMP, 0
	142 Not TEMP
	143 Move W9, TEMP
	144 Move [X31+40], X8
	145 Move [X19+104], X31
	146 Move [X19], W9
	147 Move X8, 0xC85000
	148 Move X8, [X8+384]
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X20, X0
	152 Move X1, X31
	153 Call HttpRequestMessage..ctor, X0
	154 Compare X20, 0
	155 JumpIfEqual {734}
	156 Move X1, [X19+32]
	157 Move X0, X20
	158 Move X2, X31
	159 Call HttpRequestMessage.set_RequestUri, X0, X1
	160 Move X8, 0xC85000
	161 Move X22, [X19+40]
	162 Move X8, [X8+376]
	163 Move X0, [X8]
	164 Call 0x1C17F10
	165 Move X21, X0
	166 Move X1, X22
	167 Move X2, X31
	168 Call HttpMethod..ctor, X0, X1
	169 Move X0, X20
	170 Move X1, X21
	171 Move X2, X31
	172 Call HttpRequestMessage.set_Method, X0, X1
	173 Move X0, X20
	174 Move X1, X31
	175 Call HttpRequestMessage.get_Headers, X0
	176 Compare X0, 0
	177 JumpIfEqual {735}
	178 Move X1, X31
	179 Call HttpRequestHeaders.get_Accept, X0
	180 Move X8, 0xC85000
	181 Move X8, [X8+448]
	182 Move X21, X0
	183 Move X0, [X8]
	184 Call 0x1C17F10
	185 Move X8, 0xC85000
	186 Move X8, [X8+520]
	187 Move X22, X0
	188 Move X1, [X8]
	189 Move X2, X31
	190 Call MediaTypeWithQualityHeaderValue..ctor, X0, X1
	191 Compare X21, 0
	192 JumpIfEqual {736}
	193 Move X8, 0xC85000
	194 Move X8, [X8+368]
	195 Move X2, [X8]
	196 Move X0, X21
	197 Move X1, X22
	198 Call 0x2DE164C, X0, X1
	199 Move X21, [X19+48]
	200 Compare X21, 0
	201 JumpIfEqual {737}
	202 Move X10, 0xC85000
	203 Move X8, [X21]
	204 Move X10, [X10+400]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move X1, [X10]
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move X0, X21
	216 Move W2, W31
	217 Call 0x1C5D788
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Add X8, X8, X9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X1, [X0+8]
	223 Move X0, X21
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X22, X0
	226 Compare X0, 0
	227 JumpIfEqual {738}
	228 Move X25, 0xC82000
	229 Move X28, 0xC85000
	230 Move X25, [X25+3608]
	231 Move X28, [X28+408]
	232 Move X8, [X22]
	233 Move X1, [X25]
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Compare X9, 0
	236 JumpIfEqual {243}
	237 Move X10, [X8+176]
	238 Add X10, X10, 8
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract X9, X9, 1
	242 Add X10, X10, 16
	243 Move X0, X22
	244 Move W2, W31
	245 Call 0x1C5D788
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Add X8, X8, X9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X1, [X0+8]
	251 Move X0, X22
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfNotEqual {289}
	257 Move X8, [X22]
	258 Move X1, [X28]
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Compare X9, 0
	261 JumpIfEqual {268}
	262 Move X10, [X8+176]
	263 Add X10, X10, 8
	264 NotImplemented "Instruction LDUR not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Subtract X9, X9, 1
	267 Add X10, X10, 16
	268 Move X0, X22
	269 Move W2, W31
	270 Call 0x1C5D788
	271 NotImplemented "Instruction LDRSW not yet implemented."
	272 Add X8, X8, X9
	273 Add X0, X8, 312
	274 Move X8, [X0]
	275 Move X1, [X0+8]
	276 Move X0, X22
	277 NotImplemented "Instruction BLR not yet implemented."
	278 Move X21, X0
	279 Move X23, X1
	280 Move X0, X20
	281 Move X1, X31
	282 Call HttpRequestMessage.get_Headers, X0
	283 Compare X0, 0
	284 JumpIfEqual {695}
	285 Move X1, X21
	286 Move X2, X23
	287 Move X3, X31
	288 Call HttpHeaders.Add, X0, X1, X2
	289 Move X23, X31
	290 Move W21, 6
	291 Move TEMP, X24
	292 And TEMP, TEMP, -2147483648
	293 Compare TEMP, -2147483648
	294 JumpIfNotEqual {320}
	295 Compare X22, 0
	296 JumpIfEqual {320}
	297 Move X10, 0xC82000
	298 Move X8, [X22]
	299 Move X10, [X10+3584]
	300 NotImplemented "Instruction LDRH not yet implemented."
	301 Move X1, [X10]
	302 Compare X9, 0
	303 JumpIfEqual {310}
	304 Move X10, [X8+176]
	305 Add X10, X10, 8
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Subtract X9, X9, 1
	309 Add X10, X10, 16
	310 Move X0, X22
	311 Move W2, W31
	312 Call 0x1C5D788
	313 NotImplemented "Instruction LDRSW not yet implemented."
	314 Add X8, X8, X9
	315 Add X0, X8, 312
	316 Move X8, [X0]
	317 Move X1, [X0+8]
	318 Move X0, X22
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Compare X23, 0
	321 JumpIfNotEqual {739}
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Compare W21, 0
	324 JumpIfNotEqual {682}
	325 Move X21, [X19+56]
	326 Compare X21, 0
	327 JumpIfEqual {337}
	328 Move X8, 0xC85000
	329 Move X8, [X8+360]
	330 Move X0, [X8]
	331 Call 0x1C17F10
	332 Move X22, X0
	333 Move X1, X21
	334 Move X2, X31
	335 Call ByteArrayContent..ctor, X0, X1
	336 Move [X20+56], X22
	337 Move X23, 0xC84000
	338 Move X23, [X23+2640]
	339 Move X0, [X23]
	340 Call 0x1C17F10
	341 Move X22, X0
	342 Move X1, X31
	343 Call CancellationTokenSource..ctor, X0
	344 Compare X22, 0
	345 JumpIfEqual {741}
	346 Move X0, X22
	347 Move X1, X31
	348 Call CancellationTokenSource.get_Token, X0
	349 Move X8, 0xC84000
	350 Move X8, [X8+1392]
	351 Move X21, X0
	352 Move W24, [X19+64]
	353 Move X0, [X8]
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 NotImplemented "Instruction SCVTF not yet implemented."
	359 Move X0, X31
	360 Call TimeSpan.FromSeconds, V0
	361 Move X1, X0
	362 Move X0, X22
	363 Move X2, X31
	364 Call CancellationTokenSource.CancelAfter, X0, X1
	365 Move X0, X19
	366 Add X0, X0, 72
	367 Move W8, [X0]
	368 Compare W8, 0
	369 JumpIfEqual {454}
	370 Move X8, 0xC85000
	371 Move X8, [X8+464]
	372 Move X1, [X8]
	373 Call Nullable`1<CancellationToken>.get_Value, X0
	374 Move X22, X0
	375 Move X0, [X23]
	376 Move W8, [X0+224]
	377 Compare W8, 0
	378 JumpIfNotEqual {380}
	379 Call 0x1C17DFC
	380 Move X0, X21
	381 Move X1, X22
	382 Move X2, X31
	383 Call CancellationTokenSource.CreateLinkedTokenSource, X0, X1
	384 Move X22, X0
	385 Compare X27, 0
	386 JumpIfEqual {457}
	387 Move X23, [X27+16]
	388 Compare X23, 0
	389 JumpIfEqual {468}
	390 Move X8, 0xC81000
	391 Move X8, [X8+2512]
	392 Move X0, [X8]
	393 Move W1, 3
	394 Call 0x1C17D6C
	395 Move X24, X0
	396 Compare X0, 0
	397 JumpIfEqual {776}
	398 Move X25, [X19+40]
	399 Compare X25, 0
	400 JumpIfEqual {407}
	401 Move X8, [X24]
	402 Move X1, [X8+64]
	403 Move X0, X25
	404 Call 0x1C17E00
	405 Compare X0, 0
	406 JumpIfEqual {780}
	407 Move W8, [X24+24]
	408 Compare W8, 0
	409 JumpIfEqual {777}
	410 Move [X24+32], X25
	411 Move X25, [X19+32]
	412 Compare X25, 0
	413 JumpIfEqual {421}
	414 Move X8, [X24]
	415 Move X1, [X8+64]
	416 Move X0, X25
	417 Call 0x1C17E00
	418 Compare X0, 0
	419 JumpIfEqual {783}
	420 Move W8, [X24+24]
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move [X24+40], X25
	423 Move X25, [X19+56]
	424 Compare X25, 0
	425 JumpIfEqual {433}
	426 Move X8, [X24]
	427 Move X1, [X8+64]
	428 Move X0, X25
	429 Call 0x1C17E00
	430 Compare X0, 0
	431 JumpIfEqual {786}
	432 Move W8, [X24+24]
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move [X24+48], X25
	435 Move X9, 0xC84000
	436 Move X8, [X23]
	437 Move X9, [X9+416]
	438 Move X10, 0xC84000
	439 Move X1, [X9]
	440 Move X10, [X10+528]
	441 NotImplemented "Instruction LDRH not yet implemented."
	442 Move X25, [X10]
	443 Compare X9, 0
	444 JumpIfEqual {451}
	445 Move X10, [X8+176]
	446 Add X10, X10, 8
	447 NotImplemented "Instruction LDUR not yet implemented."
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Subtract X9, X9, 1
	450 Add X10, X10, 16
	451 Move W2, 2
	452 Move X0, X23
	453 Call 0x1C5D788
	454 Move X22, X31
	455 Compare X27, 0
	456 JumpIfNotEqual {387}
	457 Call 0x1C17F20
	458 Move W9, [X10]
	459 Add W9, W9, 2
	460 Add X8, X8, W9
	461 Add X0, X8, 312
	462 Move X8, [X0]
	463 Move X3, [X0+8]
	464 Move X0, X23
	465 Move X1, X25
	466 Move X2, X24
	467 NotImplemented "Instruction BLR not yet implemented."
	468 Move X23, [X27+24]
	469 Compare X22, 0
	470 JumpIfEqual {475}
	471 Move X0, X22
	472 Move X1, X31
	473 Call CancellationTokenSource.get_Token, X0
	474 Move X21, X0
	475 Compare X23, 0
	476 JumpIfEqual {742}
	477 Move X8, [X23]
	478 Move X9, [X8+408]
	479 Move X3, [X8+416]
	480 Move X0, X23
	481 Move X1, X20
	482 Move X2, X21
	483 NotImplemented "Instruction BLR not yet implemented."
	484 Compare X0, 0
	485 JumpIfEqual {743}
	486 Move X8, 0xC84000
	487 Move X8, [X8+512]
	488 Move X1, [X8]
	489 Call Task`1<Object>.GetAwaiter, X0
	490 Move X8, 0xC84000
	491 Move X8, [X8+488]
	492 Move [X31+40], X0
	493 Move X1, [X8]
	494 Add X0, X31, 40
	495 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	496 Move TEMP, X0
	497 And TEMP, TEMP, 1
	498 Compare TEMP, 1
	499 JumpIfNotEqual {630}
	500 Move X8, 0xC84000
	501 Move X8, [X8+472]
	502 Add X0, X31, 40
	503 Move X1, [X8]
	504 Call TaskAwaiter`1<Object>.GetResult, X0
	505 Move [X19+96], X0
	506 Compare X0, 0
	507 JumpIfEqual {725}
	508 Move X0, [X0+56]
	509 Compare X0, 0
	510 JumpIfEqual {726}
	511 Move X1, X31
	512 Call HttpContent.ReadAsStringAsync, X0
	513 Compare X0, 0
	514 JumpIfEqual {727}
	515 Move X8, 0xC84000
	516 Move X8, [X8+504]
	517 Move X1, [X8]
	518 Call Task`1<Object>.GetAwaiter, X0
	519 Move X8, 0xC84000
	520 Move X8, [X8+496]
	521 Move [X31+24], X0
	522 Move X1, [X8]
	523 Add X0, X31, 24
	524 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	525 Move TEMP, X0
	526 And TEMP, TEMP, 1
	527 Compare TEMP, 1
	528 JumpIfNotEqual {614}
	529 Move X8, 0xC84000
	530 Move X8, [X8+480]
	531 Add X0, X31, 24
	532 Move X1, [X8]
	533 Call TaskAwaiter`1<Object>.GetResult, X0
	534 Move X8, [X19+96]
	535 Compare X8, 0
	536 JumpIfEqual {696}
	537 Move X20, X0
	538 Move X0, [X8+56]
	539 Compare X0, 0
	540 JumpIfEqual {546}
	541 Move X1, X31
	542 Call HttpContent.Dispose, X0
	543 Move X8, [X19+96]
	544 Compare X8, 0
	545 JumpIfEqual {728}
	546 Move W21, [X8+32]
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Compare X27, 0
	549 JumpIfEqual {715}
	550 Move X21, [X27+16]
	551 Compare X21, 0
	552 JumpIfEqual {658}
	553 Move X8, 0xC81000
	554 Move X8, [X8+2512]
	555 Move X0, [X8]
	556 Move W1, 2
	557 Call 0x1C17D6C
	558 Move X8, [X19+96]
	559 Compare X8, 0
	560 JumpIfEqual {729}
	561 Move X9, 0xC84000
	562 Move W8, [X8+32]
	563 Move X9, [X9+392]
	564 Move X22, X0
	565 Move [X31+20], W8
	566 Move X0, [X9]
	567 Add X1, X31, 20
	568 Call 0x1C17E04
	569 Compare X22, 0
	570 JumpIfEqual {730}
	571 Move X23, X0
	572 Compare X0, 0
	573 JumpIfEqual {580}
	574 Move X8, [X22]
	575 Move X1, [X8+64]
	576 Move X0, X23
	577 Call 0x1C17E00
	578 Compare X0, 0
	579 JumpIfEqual {744}
	580 Move W8, [X22+24]
	581 Compare W8, 0
	582 JumpIfEqual {731}
	583 Move [X22+32], X23
	584 Compare X20, 0
	585 JumpIfEqual {593}
	586 Move X8, [X22]
	587 Move X1, [X8+64]
	588 Move X0, X20
	589 Call 0x1C17E00
	590 Compare X0, 0
	591 JumpIfEqual {747}
	592 Move W8, [X22+24]
	593 NotImplemented "Instruction CMP not yet implemented."
	594 Move [X22+40], X20
	595 Move X9, 0xC84000
	596 Move X8, [X21]
	597 Move X9, [X9+416]
	598 Move X10, 0xC84000
	599 Move X1, [X9]
	600 Move X10, [X10+536]
	601 NotImplemented "Instruction LDRH not yet implemented."
	602 Move X23, [X10]
	603 Compare X9, 0
	604 JumpIfEqual {611}
	605 Move X10, [X8+176]
	606 Add X10, X10, 8
	607 NotImplemented "Instruction LDUR not yet implemented."
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Subtract X9, X9, 1
	610 Add X10, X10, 16
	611 Move W2, 2
	612 Move X0, X21
	613 Call 0x1C5D788
	614 Move W8, 1
	615 Move [X19], W8
	616 Move X8, [X31+24]
	617 Move [X19+112], X8
	618 Move X0, [X26]
	619 Move W8, [X0+224]
	620 Compare W8, 0
	621 JumpIfNotEqual {623}
	622 Call 0x1C17DFC
	623 Move X8, 0xCBE000
	624 Move X8, [X8+2032]
	625 Add X0, X19, 8
	626 Move X3, [X8]
	627 Add X1, X31, 24
	628 Move X2, X19
	629 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	630 Move [X19], W31
	631 Move X8, [X31+40]
	632 Move [X19+104], X8
	633 Move X0, [X26]
	634 Move W8, [X0+224]
	635 Compare W8, 0
	636 JumpIfNotEqual {638}
	637 Call 0x1C17DFC
	638 Move X8, 0xCBE000
	639 Move X8, [X8+2040]
	640 Add X0, X19, 8
	641 Move X3, [X8]
	642 Add X1, X31, 40
	643 Move X2, X19
	644 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	645 Move W9, [X10]
	646 Add W9, W9, 2
	647 Add X8, X8, W9
	648 Add X0, X8, 312
	649 Move X8, [X0]
	650 Move X3, [X0+8]
	651 Move X0, X21
	652 Move X1, X23
	653 Move X2, X22
	654 NotImplemented "Instruction BLR not yet implemented."
	655 Move X8, [X19+96]
	656 Compare X8, 0
	657 JumpIfEqual {733}
	658 Move X0, X8
	659 Move X1, X31
	660 Call HttpResponseMessage.get_IsSuccessStatusCode, X0
	661 Move TEMP, X0
	662 And TEMP, TEMP, 1
	663 Compare TEMP, 1
	664 JumpIfNotEqual {716}
	665 Move TEMP, 1
	666 Not TEMP
	667 Move W8, TEMP
	668 Move [X19], W8
	669 Move [X19+96], X31
	670 Move X0, [X26]
	671 Move X21, 0xC84000
	672 Add X19, X19, 8
	673 Move W8, [X0+224]
	674 Move X21, [X21+352]
	675 Compare W8, 0
	676 JumpIfNotEqual {678}
	677 Call 0x1C17DFC
	678 Move X2, [X21]
	679 Move X0, X19
	680 Move X1, X20
	681 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	682 Move X20, [X31+112]
	683 Move X19, [X31+120]
	684 Move X22, [X31+96]
	685 Move X21, [X31+104]
	686 Move X24, [X31+80]
	687 Move X23, [X31+88]
	688 Move X26, [X31+64]
	689 Move X25, [X31+72]
	690 Move X28, [X31+48]
	691 Move X27, [X31+56]
	692 Move X30, [X31+32]
	693 Add X31, X31, 128
	694 Return 
	695 Call 0x1C17F20
	696 Call 0x1C17F20
	697 Move X0, 0xC82000
	698 Move X0, [X0+1776]
	699 Call 0x1C17D08
	700 Call 0x1C17F10
	701 Move X22, X0
	702 Move TEMP, 0
	703 Not TEMP
	704 Move W3, TEMP
	705 Move X1, X21
	706 Move X2, X20
	707 Move X4, X31
	708 Call ApiResponseException..ctor, X0, X1, X2, X3
	709 Move X0, 0xCBE000
	710 Move X0, [X0+2048]
	711 Call 0x1C17D08
	712 Move X1, X0
	713 Move X0, X22
	714 Call 0x1C17DEC
	715 Call 0x1C17F20
	716 Move X8, 0xC84000
	717 Move X8, [X8+424]
	718 Move X1, [X8]
	719 Move X0, X20
	720 Call JsonParser.FromJson, X0
	721 Move X20, X0
	722 Compare X0, 0
	723 JumpIfNotEqual {750}
	724 Call 0x1C17F20
	725 Call 0x1C17F20
	726 Call 0x1C17F20
	727 Call 0x1C17F20
	728 Call 0x1C17F20
	729 Call 0x1C17F20
	730 Call 0x1C17F20
	731 Call 0x1C17F28
	732 Call 0x1C17F28
	733 Call 0x1C17F20
	734 Call 0x1C17F20
	735 Call 0x1C17F20
	736 Call 0x1C17F20
	737 Call 0x1C17F20
	738 Call 0x1C17F20
	739 Move X0, X23
	740 Call 0x1C17F18
	741 Call 0x1C17F20
	742 Call 0x1C17F20
	743 Call 0x1C17F20
	744 Call 0x1C17F44
	745 Move X1, X31
	746 Call 0x1C17DEC
	747 Call 0x1C17F44
	748 Move X1, X31
	749 Call 0x1C17DEC
	750 Move X8, 0xC84000
	751 Move X8, [X8+544]
	752 Move X9, 0xC83000
	753 Move X9, [X9+544]
	754 Move X1, [X8]
	755 Move X2, [X9]
	756 Move X0, X20
	757 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	758 Move TEMP, X0
	759 And TEMP, TEMP, 1
	760 Compare TEMP, 1
	761 JumpIfNotEqual {789}
	762 Move X0, 0xC84000
	763 Move X0, [X0+544]
	764 Call 0x1C17D08
	765 Move X21, X0
	766 Move X0, 0xC83000
	767 Move X0, [X0+616]
	768 Call 0x1C17D08
	769 Move X2, X0
	770 Move X0, X20
	771 Move X1, X21
	772 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	773 Compare X0, 0
	774 JumpIfNotEqual {828}
	775 Call 0x1C17F20
	776 Call 0x1C17F20
	777 Call 0x1C17F28
	778 Call 0x1C17F28
	779 Call 0x1C17F28
	780 Call 0x1C17F44
	781 Move X1, X31
	782 Call 0x1C17DEC
	783 Call 0x1C17F44
	784 Move X1, X31
	785 Call 0x1C17DEC
	786 Call 0x1C17F44
	787 Move X1, X31
	788 Call 0x1C17DEC
	789 Move X0, 0xC83000
	790 Move X0, [X0+632]
	791 Call 0x1C17D08
	792 Move X8, [X0+184]
	793 Move X21, [X8]
	794 Move X0, 0xC82000
	795 Move X0, [X0+1848]
	796 Call 0x1C17D08
	797 Move X22, X0
	798 Move X0, 0xC83000
	799 Move X0, [X0+544]
	800 Call 0x1C17D08
	801 Move X2, X0
	802 Move X0, X20
	803 Move X1, X22
	804 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	805 Move TEMP, X0
	806 And TEMP, TEMP, 1
	807 Compare TEMP, 1
	808 JumpIfNotEqual {833}
	809 Move X0, 0xC82000
	810 Move X0, [X0+1848]
	811 Call 0x1C17D08
	812 Move X22, X0
	813 Move X0, 0xC83000
	814 Move X0, [X0+616]
	815 Call 0x1C17D08
	816 Move X2, X0
	817 Move X0, X20
	818 Move X1, X22
	819 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	820 Move X22, X0
	821 Move X0, 0xC81000
	822 Move X0, [X0+1880]
	823 Call 0x1C17D08
	824 Move X1, X0
	825 Compare X22, 0
	826 JumpIfNotEqual {886}
	827 Call 0x1C17F20
	828 Move X8, [X0]
	829 Move X9, [X8+360]
	830 Move X1, [X8+368]
	831 NotImplemented "Instruction BLR not yet implemented."
	832 Move X21, X0
	833 Move TEMP, 0
	834 Not TEMP
	835 Move W23, TEMP
	836 Move X8, [X19+96]
	837 Compare X8, 0
	838 JumpIfNotEqual {840}
	839 Call 0x1C17F20
	840 NotImplemented "Instruction LDRSW not yet implemented."
	841 Move X0, 0xC82000
	842 Move X0, [X0+1776]
	843 Call 0x1C17D08
	844 Call 0x1C17F10
	845 Move X22, X0
	846 Move X1, X24
	847 Move X2, X21
	848 Move W3, W23
	849 Move X4, X31
	850 Call ApiResponseException..ctor, X0, X1, X2, X3
	851 Move X0, 0xC84000
	852 Move X0, [X0+568]
	853 Call 0x1C17D08
	854 Move X21, X0
	855 Move X0, 0xC83000
	856 Move X0, [X0+544]
	857 Call 0x1C17D08
	858 Move X2, X0
	859 Move X0, X20
	860 Move X1, X21
	861 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	862 Move TEMP, X0
	863 And TEMP, TEMP, 1
	864 Compare TEMP, 1
	865 JumpIfNotEqual {880}
	866 Move X0, 0xC84000
	867 Move X0, [X0+568]
	868 Call 0x1C17D08
	869 Move X21, X0
	870 Move X0, 0xC83000
	871 Move X0, [X0+616]
	872 Call 0x1C17D08
	873 Move X2, X0
	874 Move X0, X20
	875 Move X1, X21
	876 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	877 Move X1, X0
	878 Move X2, X22
	879 Call IHttpAdapterUtil.CopyResponseError, X0, X1, X2
	880 Move X0, 0xCBE000
	881 Move X0, [X0+2048]
	882 Call 0x1C17D08
	883 Move X1, X0
	884 Move X0, X22
	885 Call 0x1C17DEC
	886 Move X8, [X22]
	887 Move X9, [X1+64]
	888 Move X8, [X8+64]
	889 NotImplemented "Instruction CMP not yet implemented."
	890 Move X0, X22
	891 Call 0x1C17E08
	892 Move W23, [X0]
	893 Move X0, X22
	894 Call 0x1C181E0
	895 Move X21, X0
	896 Move [X31+8], X1
	897 Move X21, X0
	898 NotImplemented "Instruction CMP not yet implemented."
	899 Move [X31+8], X1
	900 Move X0, X21
	901 Call 0x3EB2AD0
	902 Move X23, [X0]
	903 Call 0x3EB2AE0
	904 Move W21, W31
	905 Move TEMP, X24
	906 And TEMP, TEMP, -2147483648
	907 Compare TEMP, -2147483648
	908 JumpIfEqual {295}
	909 Move X23, X31
	910 Move TEMP, X24
	911 And TEMP, TEMP, -2147483648
	912 Compare TEMP, -2147483648
	913 JumpIfNotEqual {939}
	914 Compare X22, 0
	915 JumpIfEqual {939}
	916 Move X10, 0xC81000
	917 Move X8, [X22]
	918 Move X10, [X10+3584]
	919 NotImplemented "Instruction LDRH not yet implemented."
	920 Move X1, [X10]
	921 Compare X9, 0
	922 JumpIfEqual {929}
	923 Move X10, [X8+176]
	924 Add X10, X10, 8
	925 NotImplemented "Instruction LDUR not yet implemented."
	926 NotImplemented "Instruction CMP not yet implemented."
	927 Subtract X9, X9, 1
	928 Add X10, X10, 16
	929 Move X0, X22
	930 Move W2, W31
	931 Call 0x1C5D788
	932 NotImplemented "Instruction LDRSW not yet implemented."
	933 Add X8, X8, X9
	934 Add X0, X8, 312
	935 Move X8, [X0]
	936 Move X1, [X0+8]
	937 Move X0, X22
	938 NotImplemented "Instruction BLR not yet implemented."
	939 Compare X23, 0
	940 JumpIfNotEqual {985}
	941 Move X8, [X31+8]
	942 NotImplemented "Instruction CMP not yet implemented."
	943 Move X0, X21
	944 Call 0x3EB2AD0
	945 Move X20, X0
	946 Move X0, 0xC81000
	947 Move X0, [X0+2000]
	948 Call 0x1C17D08
	949 Move X8, [X20]
	950 Move X1, [X8]
	951 Call 0x1C18270
	952 Move TEMP, X0
	953 And TEMP, TEMP, 1
	954 Compare TEMP, 1
	955 JumpIfNotEqual {977}
	956 Move X20, [X20]
	957 Call 0x3EB2AE0
	958 Move TEMP, 1
	959 Not TEMP
	960 Move W8, TEMP
	961 Move [X19+96], X31
	962 Move [X19+8], W8
	963 Move X0, 0xC84000
	964 Move X0, [X0+304]
	965 Call 0x1C17D08
	966 Move W8, [X0+224]
	967 Compare W8, 0
	968 JumpIfNotEqual {970}
	969 Call 0x1C17DFC
	970 Move X0, 0xC84000
	971 Move X0, [X0+576]
	972 Call 0x1C17D08
	973 Move X2, X0
	974 Move X0, X19
	975 Move X1, X20
	976 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	977 Move W0, 8
	978 Call 0x3EB2AF0
	979 Move X8, [X20]
	980 Move [X0], X8
	981 Move X1, 0xA42000
	982 Add X1, X1, 3672
	983 Move X2, X31
	984 Call 0x3EB2B00
	985 Move X0, X23
	986 Call 0x1C17F18
	987 Move X21, X0
	988 Move [X31+8], X1
	989 Move TEMP, X24
	990 And TEMP, TEMP, -2147483648
	991 Compare TEMP, -2147483648
	992 JumpIfEqual {914}
	993 Move X21, X0
	994 Call 0x3EB2AE0
	995 Move X0, X21
	996 Call 0x1D2D690
	997 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03473CC8 ADD X0, X8, 0x138
	0x03473CCC LDP X8, X1, [X0]
	0x03473CD0 MOV X0, X20
	0x03473CD4 BLR X8
	0x03473CD8 LDR X8, [X20]
	0x03473CDC LDR X1, [X22]
	0x03473CE0 MOV X22, X0
	0x03473CE4 LDRH W9, [X8 + 0x12E]
	0x03473CE8 CBZ X9, 0x3473D0C
	0x03473CEC LDR X10, [X8 + 0xB0]
	0x03473CF0 ADD X10, X10, 0x8
	0x03473CF4 LDUR X11, [X10 - 0x8]
	0x03473CF8 CMP X11, X1
	0x03473CFC B.EQ 0x3473D1C
	0x03473D00 SUBS X9, X9, 0x1
	0x03473D04 ADD X10, X10, 0x10
	0x03473D08 B.NE 0x3473CF4
	0x03473D0C MOVZ W2, 0x1
	0x03473D10 MOV X0, X20
	0x03473D14 BL 0x1C5C788
	0x03473D18 B 0x3473D2C
	0x03473D1C LDR W9, [X10]
	0x03473D20 ADD W9, W9, 0x1
	0x03473D24 ADD X8, X8, W9, 0x4, SXTW
	0x03473D28 ADD X0, X8, 0x138
	0x03473D2C LDP X8, X1, [X0]
	0x03473D30 MOV X0, X20
	0x03473D34 BLR X8
	0x03473D38 MOV X2, X0
	0x03473D3C MOV X0, X21
	0x03473D40 MOV X1, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF6B000
	007 Move X21, 0xC84000
	008 Move W8, [X22+2042]
	009 Move X21, [X21+304]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC84000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0xC84000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2042], W8
	024 Move X0, [X21]
	025 Move X21, 0xC84000
	026 Move W8, [X0+224]
	027 Move X21, [X21+584]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

