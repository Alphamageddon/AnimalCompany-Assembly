Type: Nakama.Socket/<RpcAsync>d__103

Method: System.Void MoveNext()

Disassembly:
	0x03483A70 MOV X21, X0
	0x03483A74 CMP W20, 0x1
	0x03483A78 B.NE 0x3483AA0
	0x03483A7C MOV X0, X21
	0x03483A80 BL 0x3EB1AD0
	0x03483A84 LDR X8, [X0]
	0x03483A88 STR X8, [X31]
	0x03483A8C BL 0x3EB1AE0
	0x03483A90 LDR X20, [X31]
	0x03483A94 MOV W21, W31
	0x03483A98 TBNZ X27, 0x1F, 0x3483780
	0x03483A9C B 0x3483794
	0x03483AA0 STR X31, [X31]
	0x03483AA4 TBZ X27, 0x1F, 0x3483ABC
	0x03483AA8 LDRB W8, [X31 + 0x34]
	0x03483AAC CBZ W8, 0x3483ABC
	0x03483AB0 MOV X0, X24
	0x03483AB4 MOV X1, X31
	0x03483AB8 BL 0x33E14E4
	0x03483ABC LDR X8, [X31]
	0x03483AC0 CBZ X8, 0x3483B34
	0x03483AC4 LDR X0, [X31]
	0x03483AC8 BL 0x1C16F18
	0x03483ACC MOV X20, X1
	0x03483AD0 MOV X21, X0
	0x03483AD4 TBNZ X27, 0x1F, 0x3483AA8
	0x03483AD8 B 0x3483ABC
	0x03483ADC B 0x3483B2C
	0x03483AE0 B 0x3483B2C
	0x03483AE4 B 0x3483B2C
	0x03483AE8 B 0x3483B2C
	0x03483AEC B 0x3483B2C
	0x03483AF0 B 0x3483B2C
	0x03483AF4 B 0x3483B2C
	0x03483AF8 B 0x3483B2C
	0x03483AFC B 0x3483B2C
	0x03483B00 B 0x3483B2C
	0x03483B04 B 0x3483B2C
	0x03483B08 B 0x3483B2C
	0x03483B0C B 0x3483B2C
	0x03483B10 B 0x3483B2C
	0x03483B14 B 0x3483B2C
	0x03483B18 B 0x3483B2C
	0x03483B1C B 0x3483B2C
	0x03483B20 B 0x3483B2C
	0x03483B24 B 0x3483B2C
	0x03483B28 B 0x3483B2C
	0x03483B2C MOV X20, X1
	0x03483B30 MOV X21, X0
	0x03483B34 CMP W20, 0x1
	0x03483B38 B.NE 0x3483BD8
	0x03483B3C MOV X0, X21
	0x03483B40 BL 0x3EB1AD0
	0x03483B44 MOV X20, X0
	0x03483B48 ADRP X0, 0xC70000
	0x03483B4C LDR X0, [X0 + 0x7D0]
	0x03483B50 BL 0x1C16D08
	0x03483B54 LDR X8, [X20]
	0x03483B58 LDR X1, [X8]
	0x03483B5C BL 0x1C17270
	0x03483B60 TBZ X0, 0x0, 0x3483BB0
	0x03483B64 LDR X20, [X20]
	0x03483B68 BL 0x3EB1AE0
	0x03483B6C MOVN W8, 0x1
	0x03483B70 STR X31, [X19 + 0x30]
	0x03483B74 STR W8, [X19], #0x8
	0x03483B78 ADRP X0, 0xCAD000
	0x03483B7C LDR X0, [X0 + 0xBD8]
	0x03483B80 BL 0x1C16D08
	0x03483B84 LDR W8, [X0 + 0xE0]
	0x03483B88 CBNZ W8, 0x3483B90
	0x03483B8C BL 0x1C16DFC
	0x03483B90 ADRP X0, 0xCAE000
	0x03483B94 LDR X0, [X0 + 0x50]
	0x03483B98 BL 0x1C16D08
	0x03483B9C MOV X2, X0
	0x03483BA0 MOV X0, X19
	0x03483BA4 MOV X1, X20
	0x03483BA8 BL 0x26324C8
	0x03483BAC B 0x34834B4
	0x03483BB0 MOVZ W0, 0x8
	0x03483BB4 BL 0x3EB1AF0
	0x03483BB8 LDR X8, [X20]
	0x03483BBC STR X8, [X0]
	0x03483BC0 ADRP X1, 0xA31000
	0x03483BC4 ADD X1, X1, 0xE58
	0x03483BC8 MOV X2, X31
	0x03483BCC BL 0x3EB1B00
	0x03483BD0 MOV X21, X0
	0x03483BD4 BL 0x3EB1AE0
	0x03483BD8 MOV X0, X21
	0x03483BDC BL 0x1D2C690
	0x03483BE0 BL 0x1990590
	0x03483BE4 STP X30, X21, [X31 - 0x20]!
	0x03483BE8 STP X20, X19, [X31 + 0x10]
	0x03483BEC ADRP X20, 0xF5A000
	0x03483BF0 ADRP X21, 0xC70000
	0x03483BF4 LDRB W8, [X20 + 0x90A]
	0x03483BF8 LDR X21, [X21 + 0x8F0]
	0x03483BFC MOV X19, X0
	0x03483C00 TBNZ X8, 0x0, 0x3483C18
	0x03483C04 ADRP X0, 0xC70000
	0x03483C08 LDR X0, [X0 + 0x8F0]
	0x03483C0C BL 0x1C16CF4
	0x03483C10 MOVZ W8, 0x1
	0x03483C14 STRB W8, [X20 + 0x90A]
	0x03483C18 LDR X0, [X21]
	0x03483C1C BL 0x1C16F10
	0x03483C20 MOV X1, X31
	0x03483C24 MOV X20, X0
	0x03483C28 BL 0x3231AC4
	0x03483C2C MOV X0, X20
	0x03483C30 MOV X1, X19
	0x03483C34 BL 0x348A6B4
	0x03483C38 CBZ X20, 0x3483C54
	0x03483C3C LDR X8, [X20]
	0x03483C40 MOV X0, X20
	0x03483C44 LDP X20, X19, [X31 + 0x10]
	0x03483C48 LDP X2, X1, [X8 + 0x168]
	0x03483C4C LDP X30, X21, [X31], #0x20
	0x03483C50 BR X2
	0x03483C54 BL 0x1C16F20
	0x03483C58 STR X30, [X31 - 0x30]!
	0x03483C5C STP X22, X21, [X31 + 0x10]
	0x03483C60 STP X20, X19, [X31 + 0x20]
	0x03483C64 ADRP X22, 0xF5A000
	0x03483C68 ADRP X21, 0xCAD000
	0x03483C6C LDRB W8, [X22 + 0x8D1]
	0x03483C70 LDR X21, [X21 + 0xBD8]
	0x03483C74 MOV X19, X1
	0x03483C78 MOV X20, X0
	0x03483C7C TBNZ X8, 0x0, 0x3483CA0
	0x03483C80 ADRP X0, 0xCAE000
	0x03483C84 LDR X0, [X0 + 0x58]
	0x03483C88 BL 0x1C16CF4
	0x03483C8C ADRP X0, 0xCAD000
	0x03483C90 LDR X0, [X0 + 0xBD8]
	0x03483C94 BL 0x1C16CF4
	0x03483C98 MOVZ W8, 0x1
	0x03483C9C STRB W8, [X22 + 0x8D1]
	0x03483CA0 LDR X0, [X21]
	0x03483CA4 ADRP X21, 0xCAE000
	0x03483CA8 LDR W8, [X0 + 0xE0]
	0x03483CAC LDR X21, [X21 + 0x58]
	0x03483CB0 CBNZ W8, 0x3483CB8
	0x03483CB4 BL 0x1C16DFC
	0x03483CB8 LDR X2, [X21]
	0x03483CBC ADD X0, X20, 0x8
	0x03483CC0 MOV X1, X19
	0x03483CC4 LDP X20, X19, [X31 + 0x20]
	0x03483CC8 LDP X22, X21, [X31 + 0x10]
	0x03483CCC LDR X30, [X31], #0x30
	0x03483CD0 B 0x2632228
	0x03483CD4 SUB X31, X31, 0x40
	0x03483CD8 STP X30, X23, [X31 + 0x10]
	0x03483CDC STP X22, X21, [X31 + 0x20]
	0x03483CE0 STP X20, X19, [X31 + 0x30]
	0x03483CE4 ADRP X20, 0xF5A000
	0x03483CE8 LDRB W8, [X20 + 0x8D2]
	0x03483CEC MOV X19, X0
	0x03483CF0 TBNZ X8, 0x0, 0x3483D74
	0x03483CF4 ADRP X0, 0xCAE000
	0x03483CF8 LDR X0, [X0 + 0x60]
	0x03483CFC BL 0x1C16CF4
	0x03483D00 ADRP X0, 0xCAD000
	0x03483D04 LDR X0, [X0 + 0xFC8]
	0x03483D08 BL 0x1C16CF4
	0x03483D0C ADRP X0, 0xCAD000
	0x03483D10 LDR X0, [X0 + 0xD40]
	0x03483D14 BL 0x1C16CF4
	0x03483D18 ADRP X0, 0xCAE000
	0x03483D1C LDR X0, [X0 + 0x68]
	0x03483D20 BL 0x1C16CF4
	0x03483D24 ADRP X0, 0xC70000
	0x03483D28 LDR X0, [X0 + 0x758]
	0x03483D2C BL 0x1C16CF4
	0x03483D30 ADRP X0, 0xCAD000
	0x03483D34 LDR X0, [X0 + 0xE88]
	0x03483D38 BL 0x1C16CF4
	0x03483D3C ADRP X0, 0xCAD000
	0x03483D40 LDR X0, [X0 + 0xE90]
	0x03483D44 BL 0x1C16CF4
	0x03483D48 ADRP X0, 0xCAD000
	0x03483D4C LDR X0, [X0 + 0xE98]
	0x03483D50 BL 0x1C16CF4
	0x03483D54 ADRP X0, 0xCAD000
	0x03483D58 LDR X0, [X0 + 0xBC8]
	0x03483D5C BL 0x1C16CF4
	0x03483D60 ADRP X0, 0xC74000
	0x03483D64 LDR X0, [X0 + 0x110]
	0x03483D68 BL 0x1C16CF4
	0x03483D6C MOVZ W8, 0x1
	0x03483D70 STRB W8, [X20 + 0x8D2]
	0x03483D74 STR X31, [X31 + 0x8]
	0x03483D78 ADRP X23, 0xCAD000
	0x03483D7C LDR W8, [X19]
	0x03483D80 LDR X23, [X23 + 0xD40]
	0x03483D84 CBZ W8, 0x3483EA4
	0x03483D88 LDR X20, [X19 + 0x20]
	0x03483D8C CBZ X20, 0x3483F1C
	0x03483D90 ADD X0, X20, 0x10
	0x03483D94 MOV X1, X31
	0x03483D98 BL 0x33EB14C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF5B000
	009 Move W8, [X20+2252]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xCAE000
	016 Move X0, [X0+4072]
	017 Call 0x1C17CF4
	018 Move X0, 0xCAE000
	019 Move X0, [X0+4080]
	020 Call 0x1C17CF4
	021 Move X0, 0xCAD000
	022 Move X0, [X0+704]
	023 Call 0x1C17CF4
	024 Move X0, 0xCAC000
	025 Move X0, [X0+1640]
	026 Call 0x1C17CF4
	027 Move X0, 0xC71000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0xCAE000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move X0, 0xCAE000
	034 Move X0, [X0+3728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCAE000
	037 Move X0, [X0+3736]
	038 Call 0x1C17CF4
	039 Move X0, 0xCAE000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0xC75000
	043 Move X0, [X0+272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2252], W8
	047 Move [X31+8], X31
	048 Move X23, 0xCAC000
	049 Move W8, [X19]
	050 Move X23, [X23+1640]
	051 Compare W8, 0
	052 JumpIfEqual {129}
	053 Move X20, [X19+32]
	054 Compare X20, 0
	055 JumpIfEqual {168}
	056 Add X0, X20, 16
	057 Move X1, X31
	058 Call Interlocked.Increment, X0
	059 Move X8, 0xCAE000
	060 Move X8, [X8+3016]
	061 Move W22, W0
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X21, X0
	065 Move X1, X31
	066 Call Object..ctor, X0
	067 Move X8, 0xC71000
	068 Move X8, [X8+1880]
	069 Move [X31+4], W22
	070 Move X0, [X8]
	071 Add X1, X31, 4
	072 Call 0x1C17E04
	073 Move X1, X0
	074 Move X8, 0xC75000
	075 Move X8, [X8+272]
	076 Move X0, [X8]
	077 Move X2, X31
	078 Call String.Format, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {169}
	081 Move X8, 0xCAE000
	082 Move X8, [X8+4072]
	083 Move [X21+16], X0
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X22, X0
	087 Move X1, X31
	088 Call ApiRpc..ctor, X0
	089 Compare X22, 0
	090 JumpIfEqual {170}
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Move [X22+24], V0
	093 Move [X21+200], X22
	094 Move X0, X20
	095 Move X1, X21
	096 Move X2, X31
	097 Call Socket.SendAsync, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {171}
	100 Move X8, 0xCAE000
	101 Move X8, [X8+3736]
	102 Move X1, [X8]
	103 Call Task`1<Object>.GetAwaiter, X0
	104 Move X8, 0xCAE000
	105 Move X8, [X8+3728]
	106 Move [X31+8], X0
	107 Move X1, [X8]
	108 Add X0, X31, 8
	109 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {136}
	114 Move [X19], W31
	115 Move X8, [X31+8]
	116 Move [X19+56], X8
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X8, 0xCAE000
	123 Move X8, [X8+4080]
	124 Add X0, X19, 8
	125 Move X3, [X8]
	126 Add X1, X31, 8
	127 Move X2, X19
	128 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	129 Move X8, [X19+56]
	130 Move TEMP, 0
	131 Not TEMP
	132 Move W9, TEMP
	133 Move [X31+8], X8
	134 Move [X19+56], X31
	135 Move [X19], W9
	136 Move X8, 0xCAE000
	137 Move X8, [X8+3720]
	138 Add X0, X31, 8
	139 Move X1, [X8]
	140 Call TaskAwaiter`1<Object>.GetResult, X0
	141 Compare X0, 0
	142 JumpIfEqual {167}
	143 Move TEMP, 1
	144 Not TEMP
	145 Move W8, TEMP
	146 Move X20, [X0+200]
	147 Move [X19+8], W8
	148 Move X0, [X23]
	149 Move X21, 0xCAD000
	150 Move W8, [X0+224]
	151 Move X21, [X21+704]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X2, [X21]
	156 Move X0, X19
	157 Move X1, X20
	158 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X30, [X31+16]
	164 Move X23, [X31+24]
	165 Add X31, X31, 64
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Move X20, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X20
	175 Call 0x3EB2AD0
	176 Move X20, X0
	177 Move X0, 0xC71000
	178 Move X0, [X0+2000]
	179 Call 0x1C17D08
	180 Move X8, [X20]
	181 Move X1, [X8]
	182 Call 0x1C18270
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {207}
	187 Move X20, [X20]
	188 Call 0x3EB2AE0
	189 Move TEMP, 1
	190 Not TEMP
	191 Move W8, TEMP
	192 Move [X19+8], W8
	193 Move X0, 0xCAC000
	194 Move X0, [X0+1640]
	195 Call 0x1C17D08
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, 0xCAD000
	201 Move X0, [X0+768]
	202 Call 0x1C17D08
	203 Move X2, X0
	204 Move X0, X19
	205 Move X1, X20
	206 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	207 Move W0, 8
	208 Call 0x3EB2AF0
	209 Move X8, [X20]
	210 Move [X0], X8
	211 Move X1, 0xA32000
	212 Add X1, X1, 3672
	213 Move X2, X31
	214 Call 0x3EB2B00
	215 Move X20, X0
	216 Call 0x3EB2AE0
	217 Move X0, X20
	218 Call 0x1D2D690
	219 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03483D9C ADRP X8, 0xCAD000
	0x03483DA0 LDR X8, [X8 + 0xBC8]
	0x03483DA4 MOV W22, W0
	0x03483DA8 LDR X0, [X8]
	0x03483DAC BL 0x1C16F10
	0x03483DB0 MOV X21, X0
	0x03483DB4 MOV X1, X31
	0x03483DB8 BL 0x33BDD8C
	0x03483DBC ADRP X8, 0xC70000
	0x03483DC0 LDR X8, [X8 + 0x758]
	0x03483DC4 STR W22, [X31 + 0x4]
	0x03483DC8 LDR X0, [X8]
	0x03483DCC ADD X1, X31, 0x4
	0x03483DD0 BL 0x1C16E04
	0x03483DD4 MOV X1, X0
	0x03483DD8 ADRP X8, 0xC74000
	0x03483DDC LDR X8, [X8 + 0x110]
	0x03483DE0 LDR X0, [X8]
	0x03483DE4 MOV X2, X31
	0x03483DE8 BL 0x321EFD0
	0x03483DEC CBZ X21, 0x3483F20
	0x03483DF0 ADRP X8, 0xCAE000
	0x03483DF4 LDR X8, [X8 + 0x68]
	0x03483DF8 STR X0, [X21 + 0x10]
	0x03483DFC LDR X0, [X8]
	0x03483E00 BL 0x1C16F10
	0x03483E04 MOV X22, X0
	0x03483E08 MOV X1, X31
	0x03483E0C BL 0x343F098
	0x03483E10 CBZ X22, 0x3483F24
	0x03483E14 LDUR V0, [X19 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF5B000
	007 Move X21, 0xCAC000
	008 Move W8, [X22+2253]
	009 Move X21, [X21+1640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCAD000
	017 Move X0, [X0+776]
	018 Call 0x1C17CF4
	019 Move X0, 0xCAC000
	020 Move X0, [X0+1640]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2253], W8
	024 Move X0, [X21]
	025 Move X21, 0xCAD000
	026 Move W8, [X0+224]
	027 Move X21, [X21+776]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

