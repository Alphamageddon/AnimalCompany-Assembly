Type: Nakama.ApiClient/<UpdateGroupAsync>d__50

Method: System.Void MoveNext()

Disassembly:
	0x0343B3BC MOV X2, X20
	0x0343B3C0 MOV X3, X22
	0x0343B3C4 MOV X4, X23
	0x0343B3C8 MOV W5, W26
	0x0343B3CC MOV X6, X27
	0x0343B3D0 MOV X7, X25
	0x0343B3D4 STR X9, [X31]
	0x0343B3D8 BLR X8
	0x0343B3DC CBZ X0, 0x343B52C
	0x0343B3E0 ADRP X8, 0xCBB000
	0x0343B3E4 LDR X8, [X8 + 0x1F8]
	0x0343B3E8 LDR X1, [X8]
	0x0343B3EC BL 0x269F5D0
	0x0343B3F0 ADRP X8, 0xCBB000
	0x0343B3F4 LDR X8, [X8 + 0x1F0]
	0x0343B3F8 STR X0, [X31 + 0x18]
	0x0343B3FC LDR X1, [X8]
	0x0343B400 ADD X0, X31, 0x18
	0x0343B404 BL 0x2677430
	0x0343B408 TBZ X0, 0x0, 0x343B468
	0x0343B40C ADRP X8, 0xCBB000
	0x0343B410 LDR X8, [X8 + 0x1E0]
	0x0343B414 ADD X0, X31, 0x18
	0x0343B418 LDR X1, [X8]
	0x0343B41C BL 0x2677474
	0x0343B420 ADRP X8, 0xCF4000
	0x0343B424 LDR X8, [X8 + 0x460]
	0x0343B428 LDR X1, [X8]
	0x0343B42C BL 0x220E6DC
	0x0343B430 MOVN W8, 0x1
	0x0343B434 STR W8, [X19], #0x8
	0x0343B438 MOV X20, X0
	0x0343B43C LDR X0, [X28]
	0x0343B440 ADRP X21, 0xCF4000
	0x0343B444 LDR W8, [X0 + 0xE0]
	0x0343B448 LDR X21, [X21 + 0x458]
	0x0343B44C CBNZ W8, 0x343B454
	0x0343B450 BL 0x1C16DFC
	0x0343B454 LDR X2, [X21]
	0x0343B458 MOV X0, X19
	0x0343B45C MOV X1, X20
	0x0343B460 BL 0x26322B0
	0x0343B464 B 0x343B4A0
	0x0343B468 STR W31, [X19]
	0x0343B46C LDR X8, [X31 + 0x18]
	0x0343B470 STR X8, [X19 + 0x48]
	0x0343B474 LDR X0, [X28]
	0x0343B478 LDR W8, [X0 + 0xE0]
	0x0343B47C CBNZ W8, 0x343B484
	0x0343B480 BL 0x1C16DFC
	0x0343B484 ADRP X8, 0xCF4000
	0x0343B488 LDR X8, [X8 + 0x488]
	0x0343B48C ADD X0, X19, 0x8
	0x0343B490 LDR X3, [X8]
	0x0343B494 ADD X1, X31, 0x18
	0x0343B498 MOV X2, X19
	0x0343B49C BL 0x1FB5CEC
	0x0343B4A0 LDP X20, X19, [X31 + 0x60]
	0x0343B4A4 LDP X22, X21, [X31 + 0x50]
	0x0343B4A8 LDP X24, X23, [X31 + 0x40]
	0x0343B4AC LDP X26, X25, [X31 + 0x30]
	0x0343B4B0 LDP X28, X27, [X31 + 0x20]
	0x0343B4B4 LDR X30, [X31 + 0x10]
	0x0343B4B8 ADD X31, X31, 0x70
	0x0343B4BC RET
	0x0343B4C0 ADRP X0, 0xCC0000
	0x0343B4C4 LDR X0, [X0 + 0x578]
	0x0343B4C8 BL 0x1C16D08
	0x0343B4CC BL 0x1C16F10
	0x0343B4D0 MOV X20, X0
	0x0343B4D4 ADRP X0, 0xCF3000
	0x0343B4D8 LDR X0, [X0 + 0xBC8]
	0x0343B4DC BL 0x1C16D08
	0x0343B4E0 MOV X1, X0
	0x0343B4E4 MOV X0, X20
	0x0343B4E8 MOV X2, X31
	0x0343B4EC BL 0x3314A68
	0x0343B4F0 ADRP X0, 0xCF4000
	0x0343B4F4 LDR X0, [X0 + 0x498]
	0x0343B4F8 BL 0x1C16D08
	0x0343B4FC MOV X1, X0
	0x0343B500 MOV X0, X20
	0x0343B504 BL 0x1C16DEC
	0x0343B508 BL 0x1C16F20
	0x0343B50C BL 0x1C16F20
	0x0343B510 BL 0x1C16F20
	0x0343B514 BL 0x1C16F28
	0x0343B518 BL 0x1C16F20
	0x0343B51C BL 0x1C16F20
	0x0343B520 BL 0x1C16F20
	0x0343B524 BL 0x1C16F20
	0x0343B528 BL 0x1C16F20
	0x0343B52C BL 0x1C16F20
	0x0343B530 B 0x343B594
	0x0343B534 B 0x343B594
	0x0343B538 B 0x343B594
	0x0343B53C B 0x343B594
	0x0343B540 B 0x343B594
	0x0343B544 B 0x343B594
	0x0343B548 B 0x343B594
	0x0343B54C B 0x343B594
	0x0343B550 B 0x343B594
	0x0343B554 B 0x343B594
	0x0343B558 B 0x343B594
	0x0343B55C B 0x343B594
	0x0343B560 B 0x343B594
	0x0343B564 B 0x343B594
	0x0343B568 B 0x343B594
	0x0343B56C B 0x343B594
	0x0343B570 B 0x343B594
	0x0343B574 B 0x343B594
	0x0343B578 B 0x343B594
	0x0343B57C B 0x343B594
	0x0343B580 B 0x343B594
	0x0343B584 B 0x343B594
	0x0343B588 B 0x343B594
	0x0343B58C B 0x343B594
	0x0343B590 B 0x343B594
	0x0343B594 MOV X20, X0
	0x0343B598 CMP W1, 0x1
	0x0343B59C B.NE 0x343B638
	0x0343B5A0 MOV X0, X20
	0x0343B5A4 BL 0x3EB1AD0
	0x0343B5A8 MOV X20, X0
	0x0343B5AC ADRP X0, 0xCB8000
	0x0343B5B0 LDR X0, [X0 + 0x7D0]
	0x0343B5B4 BL 0x1C16D08
	0x0343B5B8 LDR X8, [X20]
	0x0343B5BC LDR X1, [X8]
	0x0343B5C0 BL 0x1C17270
	0x0343B5C4 TBZ X0, 0x0, 0x343B610
	0x0343B5C8 LDR X20, [X20]
	0x0343B5CC BL 0x3EB1AE0
	0x0343B5D0 MOVN W8, 0x1
	0x0343B5D4 STR W8, [X19], #0x8
	0x0343B5D8 ADRP X0, 0xCF3000
	0x0343B5DC LDR X0, [X0 + 0x530]
	0x0343B5E0 BL 0x1C16D08
	0x0343B5E4 LDR W8, [X0 + 0xE0]
	0x0343B5E8 CBNZ W8, 0x343B5F0
	0x0343B5EC BL 0x1C16DFC
	0x0343B5F0 ADRP X0, 0xCF4000
	0x0343B5F4 LDR X0, [X0 + 0x478]
	0x0343B5F8 BL 0x1C16D08
	0x0343B5FC MOV X2, X0
	0x0343B600 MOV X0, X19
	0x0343B604 MOV X1, X20
	0x0343B608 BL 0x26324C8
	0x0343B60C B 0x343B4A0
	0x0343B610 MOVZ W0, 0x8
	0x0343B614 BL 0x3EB1AF0
	0x0343B618 LDR X8, [X20]
	0x0343B61C STR X8, [X0]
	0x0343B620 ADRP X1, 0xA79000
	0x0343B624 ADD X1, X1, 0xE58
	0x0343B628 MOV X2, X31
	0x0343B62C BL 0x3EB1B00
	0x0343B630 MOV X20, X0
	0x0343B634 BL 0x3EB1AE0
	0x0343B638 MOV X0, X20
	0x0343B63C BL 0x1D2C690
	0x0343B640 BL 0x1990590
	0x0343B644 STR X30, [X31 - 0x30]!
	0x0343B648 STP X22, X21, [X31 + 0x10]
	0x0343B64C STP X20, X19, [X31 + 0x20]
	0x0343B650 ADRP X22, 0xFA2000
	0x0343B654 ADRP X21, 0xCF3000
	0x0343B658 LDRB W8, [X22 + 0x68E]
	0x0343B65C LDR X21, [X21 + 0x530]
	0x0343B660 MOV X19, X1
	0x0343B664 MOV X20, X0
	0x0343B668 TBNZ X8, 0x0, 0x343B68C
	0x0343B66C ADRP X0, 0xCF4000
	0x0343B670 LDR X0, [X0 + 0x480]
	0x0343B674 BL 0x1C16CF4
	0x0343B678 ADRP X0, 0xCF3000
	0x0343B67C LDR X0, [X0 + 0x530]
	0x0343B680 BL 0x1C16CF4
	0x0343B684 MOVZ W8, 0x1
	0x0343B688 STRB W8, [X22 + 0x68E]
	0x0343B68C LDR X0, [X21]
	0x0343B690 ADRP X21, 0xCF4000
	0x0343B694 LDR W8, [X0 + 0xE0]
	0x0343B698 LDR X21, [X21 + 0x480]
	0x0343B69C CBNZ W8, 0x343B6A4
	0x0343B6A0 BL 0x1C16DFC
	0x0343B6A4 LDR X2, [X21]
	0x0343B6A8 ADD X0, X20, 0x8
	0x0343B6AC MOV X1, X19
	0x0343B6B0 LDP X20, X19, [X31 + 0x20]
	0x0343B6B4 LDP X22, X21, [X31 + 0x10]
	0x0343B6B8 LDR X30, [X31], #0x30
	0x0343B6BC B 0x2632228
	0x0343B6C0 SUB X31, X31, 0x70
	0x0343B6C4 STR X30, [X31 + 0x10]
	0x0343B6C8 STP X28, X27, [X31 + 0x20]
	0x0343B6CC STP X26, X25, [X31 + 0x30]
	0x0343B6D0 STP X24, X23, [X31 + 0x40]
	0x0343B6D4 STP X22, X21, [X31 + 0x50]
	0x0343B6D8 STP X20, X19, [X31 + 0x60]
	0x0343B6DC ADRP X20, 0xFA2000
	0x0343B6E0 LDRB W8, [X20 + 0x68F]
	0x0343B6E4 MOV X19, X0
	0x0343B6E8 TBNZ X8, 0x0, 0x343B7CC
	0x0343B6EC ADRP X0, 0xCF4000
	0x0343B6F0 LDR X0, [X0 + 0x4A0]
	0x0343B6F4 BL 0x1C16CF4
	0x0343B6F8 ADRP X0, 0xCF4000
	0x0343B6FC LDR X0, [X0 + 0x458]
	0x0343B700 BL 0x1C16CF4
	0x0343B704 ADRP X0, 0xCF3000
	0x0343B708 LDR X0, [X0 + 0x530]
	0x0343B70C BL 0x1C16CF4
	0x0343B710 ADRP X0, 0xCC1000
	0x0343B714 LDR X0, [X0 + 0x8D8]
	0x0343B718 BL 0x1C16CF4
	0x0343B71C ADRP X0, 0xCB9000
	0x0343B720 LDR X0, [X0 + 0x810]
	0x0343B724 BL 0x1C16CF4
	0x0343B728 ADRP X0, 0xCB9000
	0x0343B72C LDR X0, [X0 + 0x6C0]
	0x0343B730 BL 0x1C16CF4
	0x0343B734 ADRP X0, 0xCB9000
	0x0343B738 LDR X0, [X0 + 0x6D0]
	0x0343B73C BL 0x1C16CF4
	0x0343B740 ADRP X0, 0xCF3000
	0x0343B744 LDR X0, [X0 + 0x7B8]
	0x0343B748 BL 0x1C16CF4
	0x0343B74C ADRP X0, 0xCF4000
	0x0343B750 LDR X0, [X0 + 0x460]
	0x0343B754 BL 0x1C16CF4
	0x0343B758 ADRP X0, 0xCBB000
	0x0343B75C LDR X0, [X0 + 0x1E0]
	0x0343B760 BL 0x1C16CF4
	0x0343B764 ADRP X0, 0xCBB000
	0x0343B768 LDR X0, [X0 + 0x1F0]
	0x0343B76C BL 0x1C16CF4
	0x0343B770 ADRP X0, 0xCBB000
	0x0343B774 LDR X0, [X0 + 0x1F8]
	0x0343B778 BL 0x1C16CF4
	0x0343B77C ADRP X0, 0xCC1000
	0x0343B780 LDR X0, [X0 + 0x3A0]
	0x0343B784 BL 0x1C16CF4
	0x0343B788 ADRP X0, 0xCE1000
	0x0343B78C LDR X0, [X0 + 0x4D8]
	0x0343B790 BL 0x1C16CF4
	0x0343B794 ADRP X0, 0xCF4000
	0x0343B798 LDR X0, [X0 + 0x4A8]
	0x0343B79C BL 0x1C16CF4
	0x0343B7A0 ADRP X0, 0xCF3000
	0x0343B7A4 LDR X0, [X0 + 0x7D0]
	0x0343B7A8 BL 0x1C16CF4
	0x0343B7AC ADRP X0, 0xCF3000
	0x0343B7B0 LDR X0, [X0 + 0x7D8]
	0x0343B7B4 BL 0x1C16CF4
	0x0343B7B8 ADRP X0, 0xCB8000
	0x0343B7BC LDR X0, [X0 + 0x988]
	0x0343B7C0 BL 0x1C16CF4
	0x0343B7C4 MOVZ W8, 0x1
	0x0343B7C8 STRB W8, [X20 + 0x68F]
	0x0343B7CC STR X31, [X31 + 0x18]
	0x0343B7D0 ADRP X28, 0xCF3000
	0x0343B7D4 LDR W8, [X19]
	0x0343B7D8 LDR X28, [X28 + 0x530]
	0x0343B7DC CBZ W8, 0x343B9BC
	0x0343B7E0 LDR X8, [X19 + 0x20]
	0x0343B7E4 CBZ X8, 0x343BAF4
	0x0343B7E8 LDR X25, [X19 + 0x28]
	0x0343B7EC CBZ X25, 0x343BB3C
	0x0343B7F0 LDR X0, [X25 + 0x20]
	0x0343B7F4 CBZ X0, 0x343BB40
	0x0343B7F8 ADRP X8, 0xCF4000
	0x0343B7FC ADRP X9, 0xCB8000
	0x0343B800 LDR X8, [X8 + 0x4A8]
	0x0343B804 LDR X9, [X9 + 0x988]
	0x0343B808 LDR X21, [X8]
	0x0343B80C LDR X20, [X9]
	0x0343B810 MOV X1, X31
	0x0343B814 BL 0x361B448
	0x0343B818 ADRP X8, 0xCC1000
	0x0343B81C LDR X8, [X8 + 0x8D8]
	0x0343B820 MOV X22, X0
	0x0343B824 LDR X0, [X8]
	0x0343B828 MOVZ W1, 0x1
	0x0343B82C BL 0x1C16D6C
	0x0343B830 MOV X1, X0
	0x0343B834 CBZ X1, 0x343BB44
	0x0343B838 LDR W8, [X1 + 0x18]
	0x0343B83C CBZ W8, 0x343BB48
	0x0343B840 MOVZ W8, 0x2F
	0x0343B844 STRH W8, [X1 + 0x20]
	0x0343B848 CBZ X22, 0x343BB4C
	0x0343B84C MOV X0, X22
	0x0343B850 MOV X2, X31
	0x0343B854 BL 0x322BC58
	0x0343B858 MOV X1, X21
	0x0343B85C MOV X2, X31
	0x0343B860 BL 0x321B938
	0x0343B864 ADRP X8, 0xCC1000
	0x0343B868 LDR X8, [X8 + 0x3A0]
	0x0343B86C MOV X22, X0
	0x0343B870 LDR X23, [X25 + 0x20]
	0x0343B874 LDR X0, [X8]
	0x0343B878 BL 0x1C16F10
	0x0343B87C MOV X21, X0
	0x0343B880 MOV X1, X23
	0x0343B884 MOV X2, X31
	0x0343B888 BL 0x36281F8
	0x0343B88C CBZ X21, 0x343BB50
	0x0343B890 MOV X0, X21
	0x0343B894 MOV X1, X22
	0x0343B898 MOV X2, X31
	0x0343B89C BL 0x36288CC
	0x0343B8A0 MOV X0, X21
	0x0343B8A4 MOV X1, X20
	0x0343B8A8 MOV X2, X31
	0x0343B8AC BL 0x3628980
	0x0343B8B0 MOV X0, X21
	0x0343B8B4 MOV X1, X31
	0x0343B8B8 BL 0x3628A38
	0x0343B8BC ADRP X8, 0xCE1000
	0x0343B8C0 ADRP X9, 0xCB9000
	0x0343B8C4 LDR X8, [X8 + 0x4D8]
	0x0343B8C8 LDR X9, [X9 + 0x6D0]
	0x0343B8CC MOV X20, X0
	0x0343B8D0 LDR X21, [X8]
	0x0343B8D4 LDR X0, [X9]
	0x0343B8D8 BL 0x1C16F10
	0x0343B8DC ADRP X8, 0xCB9000
	0x0343B8E0 LDR X8, [X8 + 0x6C0]
	0x0343B8E4 MOV X22, X0
	0x0343B8E8 LDR X1, [X8]
	0x0343B8EC BL 0x2AA4804
	0x0343B8F0 ADRP X8, 0xCF3000
	0x0343B8F4 LDR X8, [X8 + 0x7D8]
	0x0343B8F8 LDR X1, [X19 + 0x30]
	0x0343B8FC LDR X0, [X8]
	0x0343B900 MOV X2, X31
	0x0343B904 BL 0x321B938
	0x0343B908 CBZ X22, 0x343BB54
	0x0343B90C ADRP X8, 0xCF3000
	0x0343B910 LDR X8, [X8 + 0x7D0]
	0x0343B914 ADRP X9, 0xCB9000
	0x0343B918 LDR X9, [X9 + 0x810]
	0x0343B91C MOV X2, X0
	0x0343B920 LDR X1, [X8]
	0x0343B924 LDR X3, [X9]
	0x0343B928 MOV X0, X22
	0x0343B92C BL 0x2AA5098
	0x0343B930 LDR X0, [X19 + 0x20]
	0x0343B934 MOV X1, X31
	0x0343B938 BL 0x3483BE4
	0x0343B93C MOV X23, X0
	0x0343B940 MOV X0, X31
	0x0343B944 BL 0x3241948
	0x0343B948 CBZ X0, 0x343BB58
	0x0343B94C LDR X8, [X0]
	0x0343B950 LDR X9, [X8 + 0x268]
	0x0343B954 LDR X2, [X8 + 0x270]
	0x0343B958 MOV X1, X23
	0x0343B95C BLR X9
	0x0343B960 LDR X24, [X25 + 0x10]
	0x0343B964 CBZ X24, 0x343BB5C
	0x0343B968 ADRP X10, 0xCF3000
	0x0343B96C LDR X10, [X10 + 0x7B8]
	0x0343B970 LDR X8, [X24]
	0x0343B974 LDR W26, [X25 + 0x18]
	0x0343B978 LDP X27, X25, [X19 + 0x38]
	0x0343B97C LDR X1, [X10]
	0x0343B980 LDRH W9, [X8 + 0x12E]
	0x0343B984 MOV X23, X0
	0x0343B988 CBZ X9, 0x343B9AC
	0x0343B98C LDR X10, [X8 + 0xB0]
	0x0343B990 ADD X10, X10, 0x8
	0x0343B994 LDUR X11, [X10 - 0x8]
	0x0343B998 CMP X11, X1
	0x0343B99C B.EQ 0x343B9D4
	0x0343B9A0 SUBS X9, X9, 0x1
	0x0343B9A4 ADD X10, X10, 0x10
	0x0343B9A8 B.NE 0x343B994
	0x0343B9AC MOVZ W2, 0x3
	0x0343B9B0 MOV X0, X24
	0x0343B9B4 BL 0x1C5C788
	0x0343B9B8 B 0x343B9E4
	0x0343B9BC LDR X8, [X19 + 0x48]
	0x0343B9C0 MOVN W9, 0x0
	0x0343B9C4 STR X8, [X31 + 0x18]
	0x0343B9C8 STR X31, [X19 + 0x48]
	0x0343B9CC STR W9, [X19]
	0x0343B9D0 B 0x343BA40
	0x0343B9D4 LDR W9, [X10]
	0x0343B9D8 ADD W9, W9, 0x3
	0x0343B9DC ADD X8, X8, W9, 0x4, SXTW
	0x0343B9E0 ADD X0, X8, 0x138
	0x0343B9E4 LDP X8, X9, [X0]
	0x0343B9E8 MOV X0, X24
	0x0343B9EC MOV X1, X21

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA3000
	014 Move W8, [X20+1673]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xCF5000
	021 Move X0, [X0+1088]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBC000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC2000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBA000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBA000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBA000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF4000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBC000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCBC000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBC000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC2000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCBB000
	054 Move X0, [X0+2600]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE2000
	057 Move X0, [X0+1248]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF4000
	060 Move X0, [X0+3080]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF4000
	063 Move X0, [X0+2048]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF4000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xCF4000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xCB9000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1673], W8
	076 Move [X31+24], X31
	077 Move X28, 0xCBC000
	078 Move W8, [X19]
	079 Move X28, [X28+640]
	080 Compare W8, 0
	081 JumpIfEqual {233}
	082 Move X21, [X19+32]
	083 Compare X21, 0
	084 JumpIfEqual {317}
	085 Move X8, [X19+40]
	086 Compare X8, 0
	087 JumpIfEqual {335}
	088 Move X8, 0xCBB000
	089 Move X8, [X8+2600]
	090 Move X0, [X8]
	091 Move X8, 0xCF4000
	092 Move X8, [X8+3080]
	093 Move X25, [X19+48]
	094 Move W9, [X0+224]
	095 Move X20, [X8]
	096 Compare W9, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X21
	100 Move X1, X31
	101 Call Uri.EscapeDataString, X0
	102 Compare X20, 0
	103 JumpIfEqual {353}
	104 Move X8, 0xCF4000
	105 Move X8, [X8+2048]
	106 Move X2, X0
	107 Move X1, [X8]
	108 Move X0, X20
	109 Move X3, X31
	110 Call String.Replace, X0, X1, X2
	111 Compare X25, 0
	112 JumpIfEqual {354}
	113 Move X21, X0
	114 Move X0, [X25+32]
	115 Compare X0, 0
	116 JumpIfEqual {355}
	117 Move X8, 0xCB9000
	118 Move X8, [X8+2440]
	119 Move X20, [X8]
	120 Move X1, X31
	121 Call Uri.get_AbsolutePath, X0
	122 Move X8, 0xCC2000
	123 Move X8, [X8+2264]
	124 Move X22, X0
	125 Move X0, [X8]
	126 Move W1, 1
	127 Call 0x1C17D6C
	128 Move X1, X0
	129 Compare X1, 0
	130 JumpIfEqual {356}
	131 Move W8, [X1+24]
	132 Compare W8, 0
	133 JumpIfEqual {357}
	134 Move W8, 47
	135 NotImplemented "Instruction STRH not yet implemented."
	136 Compare X22, 0
	137 JumpIfEqual {358}
	138 Move X0, X22
	139 Move X2, X31
	140 Call String.TrimEnd, X0, X1
	141 Move X1, X21
	142 Move X2, X31
	143 Call String.Concat, X0, X1
	144 Move X8, 0xCC2000
	145 Move X8, [X8+928]
	146 Move X22, X0
	147 Move X23, [X25+32]
	148 Move X0, [X8]
	149 Call 0x1C17F10
	150 Move X21, X0
	151 Move X1, X23
	152 Move X2, X31
	153 Call UriBuilder..ctor, X0, X1
	154 Compare X21, 0
	155 JumpIfEqual {359}
	156 Move X0, X21
	157 Move X1, X22
	158 Move X2, X31
	159 Call UriBuilder.set_Path, X0, X1
	160 Move X0, X21
	161 Move X1, X20
	162 Move X2, X31
	163 Call UriBuilder.set_Query, X0, X1
	164 Move X0, X21
	165 Move X1, X31
	166 Call UriBuilder.get_Uri, X0
	167 Move X8, 0xCE2000
	168 Move X9, 0xCBA000
	169 Move X8, [X8+1248]
	170 Move X9, [X9+1744]
	171 Move X20, X0
	172 Move X21, [X8]
	173 Move X0, [X9]
	174 Call 0x1C17F10
	175 Move X8, 0xCBA000
	176 Move X8, [X8+1728]
	177 Move X22, X0
	178 Move X1, [X8]
	179 Call Dictionary`2<Object, Object>..ctor, X0
	180 Move X8, 0xCF4000
	181 Move X8, [X8+2008]
	182 Move X1, [X19+56]
	183 Move X0, [X8]
	184 Move X2, X31
	185 Call String.Concat, X0, X1
	186 Compare X22, 0
	187 JumpIfEqual {360}
	188 Move X8, 0xCF4000
	189 Move X8, [X8+2000]
	190 Move X9, 0xCBA000
	191 Move X9, [X9+2064]
	192 Move X2, X0
	193 Move X1, [X8]
	194 Move X3, [X9]
	195 Move X0, X22
	196 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	197 Move X0, [X19+40]
	198 Move X1, X31
	199 Call JsonWriter.ToJson, X0
	200 Move X23, X0
	201 Move X0, X31
	202 Call Encoding.get_UTF8
	203 Compare X0, 0
	204 JumpIfEqual {361}
	205 Move X8, [X0]
	206 Move X9, [X8+616]
	207 Move X2, [X8+624]
	208 Move X1, X23
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Move X24, [X25+16]
	211 Compare X24, 0
	212 JumpIfEqual {362}
	213 Move X10, 0xCF4000
	214 Move X10, [X10+1976]
	215 Move X8, [X24]
	216 Move W26, [X25+24]
	217 Move X27, [X19+64]
	218 Move X25, [X19+72]
	219 Move X1, [X10]
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Move X23, X0
	222 Compare X9, 0
	223 JumpIfEqual {230}
	224 Move X10, [X8+176]
	225 Add X10, X10, 8
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Subtract X9, X9, 1
	229 Add X10, X10, 16
	230 Move W2, 3
	231 Move X0, X24
	232 Call 0x1C5D788
	233 Move X8, [X19+80]
	234 Move TEMP, 0
	235 Not TEMP
	236 Move W9, TEMP
	237 Move [X31+24], X8
	238 Move [X19+80], X31
	239 Move [X19], W9
	240 Move W9, [X10]
	241 Add W9, W9, 3
	242 Add X8, X8, W9
	243 Add X0, X8, 312
	244 Move X8, [X0]
	245 Move X9, [X0+8]
	246 Move X0, X24
	247 Move X1, X21
	248 Move X2, X20
	249 Move X3, X22
	250 Move X4, X23
	251 Move W5, W26
	252 Move X6, X27
	253 Move X7, X25
	254 Move [X31], X9
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Compare X0, 0
	257 JumpIfEqual {363}
	258 Move X8, 0xCBC000
	259 Move X8, [X8+504]
	260 Move X1, [X8]
	261 Call Task`1<Object>.GetAwaiter, X0
	262 Move X8, 0xCBC000
	263 Move X8, [X8+496]
	264 Move [X31+24], X0
	265 Move X1, [X8]
	266 Add X0, X31, 24
	267 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {289}
	272 Move X8, 0xCBC000
	273 Move X8, [X8+480]
	274 Add X0, X31, 24
	275 Move X1, [X8]
	276 Call TaskAwaiter`1<Object>.GetResult, X0
	277 Move TEMP, 1
	278 Not TEMP
	279 Move W8, TEMP
	280 Move [X19+8], W8
	281 Move X0, [X28]
	282 Move W8, [X0+224]
	283 Compare W8, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move X0, X19
	287 Move X1, X31
	288 Call AsyncTaskMethodBuilder.SetResult, X0
	289 Move [X19], W31
	290 Move X8, [X31+24]
	291 Move [X19+80], X8
	292 Move X0, [X28]
	293 Move W8, [X0+224]
	294 Compare W8, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 Move X8, 0xCF5000
	298 Move X8, [X8+1088]
	299 Add X0, X19, 8
	300 Move X3, [X8]
	301 Add X1, X31, 24
	302 Move X2, X19
	303 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	304 Move X20, [X31+96]
	305 Move X19, [X31+104]
	306 Move X22, [X31+80]
	307 Move X21, [X31+88]
	308 Move X24, [X31+64]
	309 Move X23, [X31+72]
	310 Move X26, [X31+48]
	311 Move X25, [X31+56]
	312 Move X28, [X31+32]
	313 Move X27, [X31+40]
	314 Move X30, [X31+16]
	315 Add X31, X31, 112
	316 Return 
	317 Move X0, 0xCC1000
	318 Move X0, [X0+1400]
	319 Call 0x1C17D08
	320 Call 0x1C17F10
	321 Move X20, X0
	322 Move X0, 0xCF4000
	323 Move X0, [X0+2056]
	324 Call 0x1C17D08
	325 Move X1, X0
	326 Move X0, X20
	327 Move X2, X31
	328 Call ArgumentException..ctor, X0, X1
	329 Move X0, 0xCF5000
	330 Move X0, [X0+1096]
	331 Call 0x1C17D08
	332 Move X1, X0
	333 Move X0, X20
	334 Call 0x1C17DEC
	335 Move X0, 0xCC1000
	336 Move X0, [X0+1400]
	337 Call 0x1C17D08
	338 Call 0x1C17F10
	339 Move X20, X0
	340 Move X0, 0xCF4000
	341 Move X0, [X0+3016]
	342 Call 0x1C17D08
	343 Move X1, X0
	344 Move X0, X20
	345 Move X2, X31
	346 Call ArgumentException..ctor, X0, X1
	347 Move X0, 0xCF5000
	348 Move X0, [X0+1096]
	349 Call 0x1C17D08
	350 Move X1, X0
	351 Move X0, X20
	352 Call 0x1C17DEC
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F28
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xCB9000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {396}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+8], W8
	385 Move X0, 0xCBC000
	386 Move X0, [X0+640]
	387 Call 0x1C17D08
	388 Move W8, [X0+224]
	389 Compare W8, 0
	390 JumpIfNotEqual {392}
	391 Call 0x1C17DFC
	392 Move X0, X19
	393 Move X1, X20
	394 Move X2, X31
	395 Call AsyncTaskMethodBuilder.SetException, X0, X1
	396 Move W0, 8
	397 Call 0x3EB2AF0
	398 Move X8, [X20]
	399 Move [X0], X8
	400 Move X1, 0xA7A000
	401 Add X1, X1, 3672
	402 Move X2, X31
	403 Call 0x3EB2B00
	404 Move X20, X0
	405 Call 0x3EB2AE0
	406 Move X0, X20
	407 Call 0x1D2D690
	408 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343B9F0 MOV X2, X20
	0x0343B9F4 MOV X3, X22
	0x0343B9F8 MOV X4, X23
	0x0343B9FC MOV W5, W26
	0x0343BA00 MOV X6, X27
	0x0343BA04 MOV X7, X25
	0x0343BA08 STR X9, [X31]
	0x0343BA0C BLR X8
	0x0343BA10 CBZ X0, 0x343BB60
	0x0343BA14 ADRP X8, 0xCBB000
	0x0343BA18 LDR X8, [X8 + 0x1F8]
	0x0343BA1C LDR X1, [X8]
	0x0343BA20 BL 0x269F5D0
	0x0343BA24 ADRP X8, 0xCBB000
	0x0343BA28 LDR X8, [X8 + 0x1F0]
	0x0343BA2C STR X0, [X31 + 0x18]
	0x0343BA30 LDR X1, [X8]
	0x0343BA34 ADD X0, X31, 0x18
	0x0343BA38 BL 0x2677430
	0x0343BA3C TBZ X0, 0x0, 0x343BA9C
	0x0343BA40 ADRP X8, 0xCBB000
	0x0343BA44 LDR X8, [X8 + 0x1E0]
	0x0343BA48 ADD X0, X31, 0x18
	0x0343BA4C LDR X1, [X8]
	0x0343BA50 BL 0x2677474
	0x0343BA54 ADRP X8, 0xCF4000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA3000
	007 Move X22, 0xCBC000
	008 Move W8, [X21+1674]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCBC000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1674], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

