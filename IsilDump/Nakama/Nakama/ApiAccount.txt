Type: Nakama.ApiAccount

Method: System.String get_CustomId()

Disassembly:
	0x03402110 LDR X27, [X19]
	0x03402114 STR X0, [X31 + 0x8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_CustomId(System.String value)

Disassembly:
	0x03402118 MOV X0, X20
	0x0340211C BL 0x3401F74

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.IApiAccountDevice> get_Devices()

Disassembly:
	0x03402120 CBZ X0, 0x34023D0
	0x03402124 ADRP X10, 0xCF4000
	0x03402128 LDR X8, [X0]
	0x0340212C LDR X10, [X10 + 0x190]
	0x03402130 MOV X20, X0
	0x03402134 LDRH W9, [X8 + 0x12E]
	0x03402138 LDR X1, [X10]
	0x0340213C CBZ X9, 0x3402160
	0x03402140 LDR X10, [X8 + 0xB0]
	0x03402144 ADD X10, X10, 0x8
	0x03402148 LDUR X11, [X10 - 0x8]
	0x0340214C CMP X11, X1
	0x03402150 B.EQ 0x3402170
	0x03402154 SUBS X9, X9, 0x1
	0x03402158 ADD X10, X10, 0x10
	0x0340215C B.NE 0x3402148
	0x03402160 MOV X0, X20
	0x03402164 MOV W2, W31
	0x03402168 BL 0x1C5C788
	0x0340216C B 0x340217C
	0x03402170 LDRSW X9, [X10]
	0x03402174 ADD X8, X8, X9, 0x4, LSL
	0x03402178 ADD X0, X8, 0x138
	0x0340217C ADRP X28, 0xCF1000
	0x03402180 ADRP X29, 0xCF4000
	0x03402184 ADRP X26, 0xCF1000
	0x03402188 ADRP X24, 0xD1E000
	0x0340218C ADRP X25, 0xD1E000
	0x03402190 ADRP X19, 0xCFC000
	0x03402194 LDR X28, [X28 + 0xE18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFDC000
	005 Move W8, [X20+1293]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD2C000
	012 Move X0, [X0+3368]
	013 Call 0x1C17CF4
	014 Move X0, 0xD2C000
	015 Move X0, [X0+3376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1293], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xD2C000
	023 Move X8, [X8+3376]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xD2C000
	027 Move X8, [X8+3368]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.ApiAccountDevice> get__devices()

Disassembly:
	0x03402198 LDR X29, [X29 + 0x198]
	0x0340219C LDR X26, [X26 + 0xAC8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__devices(System.Collections.Generic.List`1<Nakama.ApiAccountDevice> value)

Disassembly:
	0x034021A0 LDR X24, [X24 + 0x360]
	0x034021A4 LDR X25, [X25 + 0xFB8]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_DisableTime()

Disassembly:
	0x034021A8 LDR X19, [X19 + 0x6D8]
	0x034021AC LDP X8, X1, [X0]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_DisableTime(System.String value)

Disassembly:
	0x034021B0 MOV X0, X20
	0x034021B4 BLR X8

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Email()

Disassembly:
	0x034021B8 MOV X20, X0
	0x034021BC MOV X0, X27

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Email(System.String value)

Disassembly:
	0x034021C0 CBZ X20, 0x34023B4
	0x034021C4 LDR X8, [X20]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: Nakama.IApiUser get_User()

Disassembly:
	0x034021C8 LDR X1, [X28]
	0x034021CC MOV X21, X0

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: Nakama.ApiUser get__user()

Disassembly:
	0x034021D0 LDRH W9, [X8 + 0x12E]
	0x034021D4 CBZ X9, 0x34021F8

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set__user(Nakama.ApiUser value)

Disassembly:
	0x034021D8 LDR X10, [X8 + 0xB0]
	0x034021DC ADD X10, X10, 0x8

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_VerifyTime()

Disassembly:
	0x034021E0 LDUR X11, [X10 - 0x8]
	0x034021E4 CMP X11, X1

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_VerifyTime(System.String value)

Disassembly:
	0x034021E8 B.EQ 0x3402208
	0x034021EC SUBS X9, X9, 0x1

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String get_Wallet()

Disassembly:
	0x034021F0 ADD X10, X10, 0x10
	0x034021F4 B.NE 0x34021E0

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Wallet(System.String value)

Disassembly:
	0x034021F8 MOV X0, X20
	0x034021FC MOV W2, W31

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03402200 BL 0x1C5C788
	0x03402204 B 0x3402214
	0x03402208 LDRSW X9, [X10]
	0x0340220C ADD X8, X8, X9, 0x4, LSL
	0x03402210 ADD X0, X8, 0x138
	0x03402214 LDP X8, X1, [X0]
	0x03402218 MOV X0, X20
	0x0340221C BLR X8
	0x03402220 TBZ X0, 0x0, 0x34022F8
	0x03402224 LDR X8, [X20]
	0x03402228 LDR X1, [X29]
	0x0340222C LDRH W9, [X8 + 0x12E]
	0x03402230 CBZ X9, 0x3402254
	0x03402234 LDR X10, [X8 + 0xB0]
	0x03402238 ADD X10, X10, 0x8
	0x0340223C LDUR X11, [X10 - 0x8]
	0x03402240 CMP X11, X1
	0x03402244 B.EQ 0x3402264
	0x03402248 SUBS X9, X9, 0x1
	0x0340224C ADD X10, X10, 0x10
	0x03402250 B.NE 0x340223C
	0x03402254 MOV X0, X20
	0x03402258 MOV W2, W31
	0x0340225C BL 0x1C5C788
	0x03402260 B 0x3402270
	0x03402264 LDRSW X9, [X10]
	0x03402268 ADD X8, X8, X9, 0x4, LSL
	0x0340226C ADD X0, X8, 0x138
	0x03402270 LDP X8, X1, [X0]
	0x03402274 MOV X0, X20
	0x03402278 BLR X8
	0x0340227C MOV X23, X0
	0x03402280 LDR X0, [X26]
	0x03402284 MOV X22, X1
	0x03402288 MOVZ W1, 0x5
	0x0340228C BL 0x1C16D6C
	0x03402290 CBZ X0, 0x34023BC
	0x03402294 LDR W8, [X0 + 0x18]
	0x03402298 CBZ W8, 0x34023C4
	0x0340229C LDR X9, [X24]
	0x034022A0 CMP W8, 0x1
	0x034022A4 STR X9, [X0 + 0x20]
	0x034022A8 B.EQ 0x34023B8
	0x034022AC CMP W8, 0x2
	0x034022B0 STR X23, [X0 + 0x28]
	0x034022B4 B.LS 0x34023C8
	0x034022B8 LDR X9, [X25]
	0x034022BC CMP W8, 0x3
	0x034022C0 STR X9, [X0 + 0x30]
	0x034022C4 B.EQ 0x34023CC
	0x034022C8 CMP W8, 0x4
	0x034022CC STR X22, [X0 + 0x38]
	0x034022D0 B.LS 0x34023C0
	0x034022D4 LDR X8, [X19]
	0x034022D8 STR X8, [X0 + 0x40]
	0x034022DC MOV X1, X31
	0x034022E0 BL 0x32278CC
	0x034022E4 MOV X1, X0
	0x034022E8 MOV X0, X21
	0x034022EC MOV X2, X31
	0x034022F0 BL 0x321B938
	0x034022F4 B 0x34021C0
	0x034022F8 MOV X22, X31
	0x034022FC CBZ X20, 0x3402360
	0x03402300 LDR X8, [X20]
	0x03402304 ADRP X10, 0xCF1000
	0x03402308 LDRH W9, [X8 + 0x12E]
	0x0340230C LDR X10, [X10 + 0xE00]
	0x03402310 LDR X1, [X10]
	0x03402314 CBZ X9, 0x3402338
	0x03402318 LDR X10, [X8 + 0xB0]
	0x0340231C ADD X10, X10, 0x8
	0x03402320 LDUR X11, [X10 - 0x8]
	0x03402324 CMP X11, X1
	0x03402328 B.EQ 0x3402348
	0x0340232C SUBS X9, X9, 0x1
	0x03402330 ADD X10, X10, 0x10
	0x03402334 B.NE 0x3402320
	0x03402338 MOV X0, X20
	0x0340233C MOV W2, W31
	0x03402340 BL 0x1C5C788
	0x03402344 B 0x3402354
	0x03402348 LDRSW X9, [X10]
	0x0340234C ADD X8, X8, X9, 0x4, LSL
	0x03402350 ADD X0, X8, 0x138
	0x03402354 LDP X8, X1, [X0]
	0x03402358 MOV X0, X20
	0x0340235C BLR X8
	0x03402360 CBNZ X22, 0x34023D4
	0x03402364 ADRP X8, 0xD2B000
	0x03402368 LDR X8, [X8 + 0xD80]
	0x0340236C MOV X1, X21
	0x03402370 MOV X3, X31
	0x03402374 LDR X0, [X8]
	0x03402378 ADRP X8, 0xCF1000
	0x0340237C LDR X8, [X8 + 0x848]
	0x03402380 LDR X2, [X8]
	0x03402384 BL 0x32274B8
	0x03402388 MOV X1, X0
	0x0340238C LDR X0, [X31 + 0x8]
	0x03402390 LDP X20, X19, [X31 + 0x60]
	0x03402394 LDP X22, X21, [X31 + 0x50]
	0x03402398 LDP X24, X23, [X31 + 0x40]
	0x0340239C LDP X26, X25, [X31 + 0x30]
	0x034023A0 LDP X28, X27, [X31 + 0x20]
	0x034023A4 LDP X29, X30, [X31 + 0x10]
	0x034023A8 MOV X2, X31
	0x034023AC ADD X31, X31, 0x70
	0x034023B0 B 0x321B938
	0x034023B4 BL 0x1C16F20
	0x034023B8 BL 0x1C16F28
	0x034023BC BL 0x1C16F20
	0x034023C0 BL 0x1C16F28
	0x034023C4 BL 0x1C16F28
	0x034023C8 BL 0x1C16F28
	0x034023CC BL 0x1C16F28
	0x034023D0 BL 0x1C16F20
	0x034023D4 MOV X0, X22
	0x034023D8 BL 0x1C16F18
	0x034023DC B 0x3402408
	0x034023E0 B 0x3402408
	0x034023E4 B 0x3402408
	0x034023E8 B 0x3402408
	0x034023EC B 0x3402408
	0x034023F0 B 0x3402408
	0x034023F4 B 0x3402408
	0x034023F8 MOV X21, X27
	0x034023FC B 0x3402408
	0x03402400 B 0x3402408
	0x03402404 B 0x3402408
	0x03402408 CMP W1, 0x1
	0x0340240C B.NE 0x3402420
	0x03402410 BL 0x3EB1AD0
	0x03402414 LDR X22, [X0]
	0x03402418 BL 0x3EB1AE0
	0x0340241C B 0x34022FC
	0x03402420 MOV X19, X0
	0x03402424 MOV X22, X31
	0x03402428 B 0x3402430
	0x0340242C MOV X19, X0
	0x03402430 CBZ X20, 0x3402494
	0x03402434 LDR X8, [X20]
	0x03402438 ADRP X10, 0xCF1000
	0x0340243C LDRH W9, [X8 + 0x12E]
	0x03402440 LDR X10, [X10 + 0xE00]
	0x03402444 LDR X1, [X10]
	0x03402448 CBZ X9, 0x340246C
	0x0340244C LDR X10, [X8 + 0xB0]
	0x03402450 ADD X10, X10, 0x8
	0x03402454 LDUR X11, [X10 - 0x8]
	0x03402458 CMP X11, X1
	0x0340245C B.EQ 0x340247C
	0x03402460 SUBS X9, X9, 0x1
	0x03402464 ADD X10, X10, 0x10
	0x03402468 B.NE 0x3402454
	0x0340246C MOV X0, X20
	0x03402470 MOV W2, W31
	0x03402474 BL 0x1C5C788
	0x03402478 B 0x3402488
	0x0340247C LDRSW X9, [X10]
	0x03402480 ADD X8, X8, X9, 0x4, LSL
	0x03402484 ADD X0, X8, 0x138
	0x03402488 LDP X8, X1, [X0]
	0x0340248C MOV X0, X20
	0x03402490 BLR X8
	0x03402494 CBNZ X22, 0x34024A0
	0x03402498 MOV X0, X19
	0x0340249C BL 0x1D2C690
	0x034024A0 MOV X0, X22
	0x034024A4 BL 0x1C16F18
	0x034024A8 BL 0x1990590
	0x034024AC MOV X1, X31
	0x034024B0 B 0x33BDD8C
	0x034024B4 LDR X0, [X0 + 0x10]
	0x034024B8 RET

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0xFDC000
	014 Move X29, 0xCF2000
	015 Move X20, 0xD2C000
	016 Move X22, 0xCF2000
	017 Move X27, 0xD2C000
	018 Move X25, 0xD2C000
	019 Move X26, 0xD2C000
	020 Move X24, 0xD2C000
	021 Move X23, 0xD2C000
	022 Move X21, 0xCF2000
	023 Move X29, [X29+2440]
	024 Move X20, [X20+3384]
	025 Move X22, [X22+2104]
	026 Move X27, [X27+3392]
	027 Move W8, [X28+1294]
	028 Move X25, [X25+3400]
	029 Move X26, [X26+3408]
	030 Move X24, [X24+3416]
	031 Move X23, [X23+3424]
	032 Move X21, [X21+2512]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {76}
	038 Move X0, 0xCF2000
	039 Move X0, [X0+2512]
	040 Call 0x1C17CF4
	041 Move X0, 0xD2C000
	042 Move X0, [X0+3392]
	043 Call 0x1C17CF4
	044 Move X0, 0xD2C000
	045 Move X0, [X0+3432]
	046 Call 0x1C17CF4
	047 Move X0, 0xD2C000
	048 Move X0, [X0+3312]
	049 Call 0x1C17CF4
	050 Move X0, 0xCF2000
	051 Move X0, [X0+2104]
	052 Call 0x1C17CF4
	053 Move X0, 0xD2C000
	054 Move X0, [X0+3440]
	055 Call 0x1C17CF4
	056 Move X0, 0xD2C000
	057 Move X0, [X0+3408]
	058 Call 0x1C17CF4
	059 Move X0, 0xD2C000
	060 Move X0, [X0+3400]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF2000
	063 Move X0, [X0+2440]
	064 Call 0x1C17CF4
	065 Move X0, 0xD2C000
	066 Move X0, [X0+3416]
	067 Call 0x1C17CF4
	068 Move X0, 0xD2C000
	069 Move X0, [X0+3384]
	070 Call 0x1C17CF4
	071 Move X0, 0xD2C000
	072 Move X0, [X0+3424]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X28+1294], W8
	076 Move X0, [X29]
	077 Move X2, [X19+16]
	078 Move X1, [X20]
	079 Move X3, [X22]
	080 Move X4, X31
	081 Call String.Concat, X0, X1, X2, X3
	082 Move X20, X0
	083 Move X0, X19
	084 Call ApiAccount.get_Devices, X0
	085 Move X8, [X22]
	086 Move X2, [X27]
	087 Move X1, X0
	088 Move X0, X8
	089 Call String.Join, X0, X1
	090 Move X1, [X25]
	091 Move X3, [X26]
	092 Move X2, X0
	093 Move X0, X20
	094 Move X4, X31
	095 Call String.Concat, X0, X1, X2, X3
	096 Move X2, [X19+32]
	097 Move X1, [X24]
	098 Move X3, [X22]
	099 Move X4, X31
	100 Call String.Concat, X0, X1, X2, X3
	101 Move X2, [X19+40]
	102 Move X1, [X23]
	103 Move X3, [X22]
	104 Move X4, X31
	105 Call String.Concat, X0, X1, X2, X3
	106 Move X8, [X21]
	107 Move X21, X0
	108 Move W1, 4
	109 Move X0, X8
	110 Call 0x1C17D6C
	111 Compare X0, 0
	112 JumpIfEqual {198}
	113 Move X20, X0
	114 Compare X21, 0
	115 JumpIfEqual {122}
	116 Move X8, [X20]
	117 Move X0, X21
	118 Move X1, [X8+64]
	119 Call 0x1C17E00
	120 Compare X0, 0
	121 JumpIfEqual {195}
	122 Move W8, [X20+24]
	123 Compare W8, 0
	124 JumpIfEqual {194}
	125 Move X23, 0xD2C000
	126 Move X23, [X23+3312]
	127 Move [X20+32], X21
	128 Move X0, [X23]
	129 Compare X0, 0
	130 JumpIfEqual {137}
	131 Move X8, [X20]
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {195}
	136 Move W8, [X20+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X9, [X23]
	139 Move [X20+40], X9
	140 Move X21, [X19+48]
	141 Compare X21, 0
	142 JumpIfEqual {150}
	143 Move X8, [X20]
	144 Move X0, X21
	145 Move X1, [X8+64]
	146 Call 0x1C17E00
	147 Compare X0, 0
	148 JumpIfEqual {195}
	149 Move W8, [X20+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move [X20+48], X21
	152 Move X0, [X22]
	153 Compare X0, 0
	154 JumpIfEqual {161}
	155 Move X8, [X20]
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {195}
	160 Move W8, [X20+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X8, [X22]
	163 Move X21, 0xD2C000
	164 Move X23, 0xD2C000
	165 Move X21, [X21+3432]
	166 Move X23, [X23+3440]
	167 Move X0, X20
	168 Move X1, X31
	169 Move [X20+56], X8
	170 Call String.Concat, X0
	171 Move X2, [X19+56]
	172 Move X1, [X21]
	173 Move X3, [X22]
	174 Move X4, X31
	175 Call String.Concat, X0, X1, X2, X3
	176 Move X2, [X19+64]
	177 Move X1, [X23]
	178 Move X3, [X22]
	179 Move X20, [X31+80]
	180 Move X19, [X31+88]
	181 Move X22, [X31+64]
	182 Move X21, [X31+72]
	183 Move X24, [X31+48]
	184 Move X23, [X31+56]
	185 Move X26, [X31+32]
	186 Move X25, [X31+40]
	187 Move X28, [X31+16]
	188 Move X27, [X31+24]
	189 Move X4, X31
	190 Move X29, [X31+96]
	191 Move X30, [X31+104]
	192 Call String.Concat, X0, X1, X2, X3
	193 Return X0
	194 Call 0x1C17F28
	195 Call 0x1C17F44
	196 Move X1, X31
	197 Call 0x1C17DEC
	198 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034024BC STR X1, [X0 + 0x10]
	0x034024C0 RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

