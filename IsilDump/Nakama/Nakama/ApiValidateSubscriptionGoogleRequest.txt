Type: Nakama.ApiValidateSubscriptionGoogleRequest

Method: System.Boolean get_Persist()

Disassembly:
	0x0340D328 LDR X25, [X25 + 0x988]
	0x0340D32C LDR X21, [X21 + 0xE78]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Persist(System.Boolean value)

Disassembly:
	0x0340D330 LDR X22, [X22 + 0x838]
	0x0340D334 LDR X20, [X20 + 0xE80]
	0x0340D338 LDR X23, [X23 + 0x9D0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.String get_Receipt()

Disassembly:
	0x0340D33C MOV X19, X0
	0x0340D340 TBNZ X8, 0x0, 0x340D3C4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Receipt(System.String value)

Disassembly:
	0x0340D344 ADRP X0, 0xCE6000
	0x0340D348 LDR X0, [X0 + 0x758]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0340D34C BL 0x1C16CF4
	0x0340D350 ADRP X0, 0xCE6000
	0x0340D354 LDR X0, [X0 + 0x9D0]
	0x0340D358 BL 0x1C16CF4
	0x0340D35C ADRP X0, 0xD13000
	0x0340D360 LDR X0, [X0 + 0xBB8]
	0x0340D364 BL 0x1C16CF4
	0x0340D368 ADRP X0, 0xD20000
	0x0340D36C LDR X0, [X0 + 0xE80]
	0x0340D370 BL 0x1C16CF4
	0x0340D374 ADRP X0, 0xD21000
	0x0340D378 LDR X0, [X0 + 0x70]
	0x0340D37C BL 0x1C16CF4
	0x0340D380 ADRP X0, 0xCE6000
	0x0340D384 LDR X0, [X0 + 0x838]
	0x0340D388 BL 0x1C16CF4
	0x0340D38C ADRP X0, 0xD21000
	0x0340D390 LDR X0, [X0 + 0x78]
	0x0340D394 BL 0x1C16CF4
	0x0340D398 ADRP X0, 0xD20000
	0x0340D39C LDR X0, [X0 + 0xE88]
	0x0340D3A0 BL 0x1C16CF4
	0x0340D3A4 ADRP X0, 0xCE6000
	0x0340D3A8 LDR X0, [X0 + 0x988]
	0x0340D3AC BL 0x1C16CF4
	0x0340D3B0 ADRP X0, 0xD20000
	0x0340D3B4 LDR X0, [X0 + 0xE78]
	0x0340D3B8 BL 0x1C16CF4
	0x0340D3BC MOVZ W8, 0x1
	0x0340D3C0 STRB W8, [X24 + 0x567]
	0x0340D3C4 LDR X0, [X25]
	0x0340D3C8 LDR X2, [X19 + 0x10]
	0x0340D3CC LDR X1, [X21]
	0x0340D3D0 LDR X3, [X22]
	0x0340D3D4 MOV X4, X31
	0x0340D3D8 BL 0x32277C4
	0x0340D3DC LDR X2, [X19 + 0x18]
	0x0340D3E0 LDR X1, [X20]
	0x0340D3E4 LDR X3, [X22]
	0x0340D3E8 MOV X4, X31
	0x0340D3EC BL 0x32277C4
	0x0340D3F0 LDR X8, [X23]
	0x0340D3F4 MOV X21, X0
	0x0340D3F8 MOVZ W1, 0x4
	0x0340D3FC MOV X0, X8
	0x0340D400 BL 0x1C16D6C
	0x0340D404 CBZ X0, 0x340D630
	0x0340D408 MOV X20, X0
	0x0340D40C CBZ X21, 0x340D424
	0x0340D410 LDR X8, [X20]
	0x0340D414 MOV X0, X21
	0x0340D418 LDR X1, [X8 + 0x40]
	0x0340D41C BL 0x1C16E00
	0x0340D420 CBZ X0, 0x340D624
	0x0340D424 LDR W8, [X20 + 0x18]
	0x0340D428 CBZ W8, 0x340D620
	0x0340D42C ADRP X24, 0xD21000
	0x0340D430 LDR X24, [X24 + 0x78]
	0x0340D434 STR X21, [X20 + 0x20]
	0x0340D438 LDR X0, [X24]
	0x0340D43C CBZ X0, 0x340D454
	0x0340D440 LDR X8, [X20]
	0x0340D444 LDR X1, [X8 + 0x40]
	0x0340D448 BL 0x1C16E00
	0x0340D44C CBZ X0, 0x340D624
	0x0340D450 LDR W8, [X20 + 0x18]
	0x0340D454 CMP W8, 0x1
	0x0340D458 B.LS 0x340D620
	0x0340D45C LDR X8, [X24]
	0x0340D460 ADRP X24, 0xCE6000
	0x0340D464 LDR X24, [X24 + 0x758]
	0x0340D468 ADD X1, X31, 0xC
	0x0340D46C STR X8, [X20 + 0x28]
	0x0340D470 LDR W8, [X19 + 0x20]
	0x0340D474 LDR X0, [X24]
	0x0340D478 STR W8, [X31 + 0xC]
	0x0340D47C BL 0x1C16E04
	0x0340D480 MOV X21, X0
	0x0340D484 CBZ X0, 0x340D49C
	0x0340D488 LDR X8, [X20]
	0x0340D48C MOV X0, X21
	0x0340D490 LDR X1, [X8 + 0x40]
	0x0340D494 BL 0x1C16E00
	0x0340D498 CBZ X0, 0x340D624
	0x0340D49C LDR W8, [X20 + 0x18]
	0x0340D4A0 CMP W8, 0x2
	0x0340D4A4 B.LS 0x340D620
	0x0340D4A8 STR X21, [X20 + 0x30]
	0x0340D4AC LDR X0, [X22]
	0x0340D4B0 CBZ X0, 0x340D4C8
	0x0340D4B4 LDR X8, [X20]
	0x0340D4B8 LDR X1, [X8 + 0x40]
	0x0340D4BC BL 0x1C16E00
	0x0340D4C0 CBZ X0, 0x340D624
	0x0340D4C4 LDR W8, [X20 + 0x18]
	0x0340D4C8 CMP W8, 0x3
	0x0340D4CC B.LS 0x340D620
	0x0340D4D0 LDR X8, [X22]
	0x0340D4D4 MOV X0, X20
	0x0340D4D8 MOV X1, X31
	0x0340D4DC STR X8, [X20 + 0x38]
	0x0340D4E0 BL 0x3227578
	0x0340D4E4 LDR X8, [X23]
	0x0340D4E8 MOV X21, X0
	0x0340D4EC MOVZ W1, 0x4
	0x0340D4F0 MOV X0, X8
	0x0340D4F4 BL 0x1C16D6C
	0x0340D4F8 CBZ X0, 0x340D630
	0x0340D4FC MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFD1000
	007 Move X21, 0xCE7000
	008 Move X22, 0xCE7000
	009 Move W8, [X20+1379]
	010 Move X21, [X21+2440]
	011 Move X22, [X22+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xCE7000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE7000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xD22000
	024 Move X0, [X0+496]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE7000
	027 Move X0, [X0+2104]
	028 Call 0x1C17CF4
	029 Move X0, 0xD22000
	030 Move X0, [X0+504]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE7000
	033 Move X0, [X0+2440]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+1379], W8
	037 Move X0, [X22]
	038 Move X21, [X21]
	039 Move W1, 4
	040 Call 0x1C17D6C
	041 Compare X0, 0
	042 JumpIfEqual {123}
	043 Move X20, X0
	044 Compare X21, 0
	045 JumpIfEqual {52}
	046 Move X8, [X20]
	047 Move X0, X21
	048 Move X1, [X8+64]
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfEqual {120}
	052 Move W8, [X20+24]
	053 Compare W8, 0
	054 JumpIfEqual {119}
	055 Move X22, 0xD22000
	056 Move X22, [X22+504]
	057 Move [X20+32], X21
	058 Move X0, [X22]
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X8, [X20]
	062 Move X1, [X8+64]
	063 Call 0x1C17E00
	064 Compare X0, 0
	065 JumpIfEqual {120}
	066 Move W8, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X22]
	069 Move X9, 0xCE7000
	070 Move X9, [X9+2904]
	071 Add X1, X31, 12
	072 Move [X20+40], X8
	073 Move W8, [X19+16]
	074 Move X0, [X9]
	075 Move [X31+12], W8
	076 Call 0x1C17E04
	077 Move X21, X0
	078 Compare X0, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X0, X21
	082 Move X1, [X8+64]
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {120}
	086 Move W8, [X20+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X22, 0xCE7000
	089 Move X22, [X22+2104]
	090 Move [X20+48], X21
	091 Move X0, [X22]
	092 Compare X0, 0
	093 JumpIfEqual {100}
	094 Move X8, [X20]
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {120}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X22]
	102 Move X21, 0xD22000
	103 Move X21, [X21+496]
	104 Move X0, X20
	105 Move X1, X31
	106 Move [X20+56], X8
	107 Call String.Concat, X0
	108 Move X2, [X19+24]
	109 Move X1, [X21]
	110 Move X3, [X22]
	111 Move X4, X31
	112 Call String.Concat, X0, X1, X2, X3
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move X30, [X31+48]
	118 Return X0
	119 Call 0x1C17F28
	120 Call 0x1C17F44
	121 Move X1, X31
	122 Call 0x1C17DEC
	123 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0340D500 CBZ X21, 0x340D518
	0x0340D504 LDR X8, [X20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

