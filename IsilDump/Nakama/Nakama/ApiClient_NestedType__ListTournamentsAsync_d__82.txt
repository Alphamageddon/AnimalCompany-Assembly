Type: Nakama.ApiClient/<ListTournamentsAsync>d__82

Method: System.Void MoveNext()

Disassembly:
	0x034334E8 LDR X8, [X22]
	0x034334EC LDR X1, [X8 + 0x40]
	0x034334F0 MOV X0, X21
	0x034334F4 BL 0x1C16E00
	0x034334F8 CBZ X0, 0x3433A10
	0x034334FC LDR W8, [X22 + 0x18]
	0x03433500 CMP W8, 0x2
	0x03433504 B.LS 0x34339DC
	0x03433508 STR X21, [X22 + 0x30]
	0x0343350C ADRP X21, 0xCC9000
	0x03433510 LDR X21, [X21 + 0x720]
	0x03433514 LDR X0, [X21]
	0x03433518 CBZ X0, 0x3433530
	0x0343351C LDR X8, [X22]
	0x03433520 LDR X1, [X8 + 0x40]
	0x03433524 BL 0x1C16E00
	0x03433528 CBZ X0, 0x3433A1C
	0x0343352C LDR W8, [X22 + 0x18]
	0x03433530 CMP W8, 0x3
	0x03433534 B.LS 0x34339E4
	0x03433538 LDR X8, [X21]
	0x0343353C STR X8, [X22 + 0x38]
	0x03433540 MOV X0, X22
	0x03433544 MOV X1, X31
	0x03433548 BL 0x3227578
	0x0343354C MOV X21, X0
	0x03433550 LDRB W8, [X19 + 0x30]
	0x03433554 CBZ W8, 0x3433658
	0x03433558 ADRP X8, 0xCC0000
	0x0343355C LDR X8, [X8 + 0x9D0]
	0x03433560 LDR X0, [X8]
	0x03433564 MOVZ W1, 0x4
	0x03433568 BL 0x1C16D6C
	0x0343356C MOV X22, X0
	0x03433570 CBZ X0, 0x34339E0
	0x03433574 CBZ X21, 0x343358C
	0x03433578 LDR X8, [X22]
	0x0343357C LDR X1, [X8 + 0x40]
	0x03433580 MOV X0, X21
	0x03433584 BL 0x1C16E00
	0x03433588 CBZ X0, 0x3433A28
	0x0343358C LDR W8, [X22 + 0x18]
	0x03433590 CBZ W8, 0x34339E8
	0x03433594 STR X21, [X22 + 0x20]
	0x03433598 ADRP X21, 0xCFB000
	0x0343359C LDR X21, [X21 + 0xF60]
	0x034335A0 LDR X0, [X21]
	0x034335A4 CBZ X0, 0x34335BC
	0x034335A8 LDR X8, [X22]
	0x034335AC LDR X1, [X8 + 0x40]
	0x034335B0 BL 0x1C16E00
	0x034335B4 CBZ X0, 0x3433A34
	0x034335B8 LDR W8, [X22 + 0x18]
	0x034335BC CMP W8, 0x1
	0x034335C0 B.LS 0x34339EC
	0x034335C4 LDR X8, [X21]
	0x034335C8 ADRP X9, 0xCC1000
	0x034335CC STR X8, [X22 + 0x28]
	0x034335D0 LDR X8, [X19 + 0x30]
	0x034335D4 LDR X9, [X9 + 0x478]
	0x034335D8 STR X8, [X31 + 0x10]
	0x034335DC LDR X0, [X9]
	0x034335E0 ADD X1, X31, 0x10
	0x034335E4 BL 0x1C16E04
	0x034335E8 MOV X21, X0
	0x034335EC CBZ X0, 0x3433604
	0x034335F0 LDR X8, [X22]
	0x034335F4 LDR X1, [X8 + 0x40]
	0x034335F8 MOV X0, X21
	0x034335FC BL 0x1C16E00
	0x03433600 CBZ X0, 0x3433A40
	0x03433604 LDR W8, [X22 + 0x18]
	0x03433608 CMP W8, 0x2
	0x0343360C B.LS 0x34339F0
	0x03433610 STR X21, [X22 + 0x30]
	0x03433614 ADRP X21, 0xCC9000
	0x03433618 LDR X21, [X21 + 0x720]
	0x0343361C LDR X0, [X21]
	0x03433620 CBZ X0, 0x3433638
	0x03433624 LDR X8, [X22]
	0x03433628 LDR X1, [X8 + 0x40]
	0x0343362C BL 0x1C16E00
	0x03433630 CBZ X0, 0x3433A4C
	0x03433634 LDR W8, [X22 + 0x18]
	0x03433638 CMP W8, 0x3
	0x0343363C B.LS 0x34339F4
	0x03433640 LDR X8, [X21]
	0x03433644 STR X8, [X22 + 0x38]
	0x03433648 MOV X0, X22
	0x0343364C MOV X1, X31
	0x03433650 BL 0x3227578
	0x03433654 MOV X21, X0
	0x03433658 LDR X22, [X19 + 0x38]
	0x0343365C CBZ X22, 0x34336A8
	0x03433660 LDR X0, [X23]
	0x03433664 LDR W8, [X0 + 0xE0]
	0x03433668 CBNZ W8, 0x3433670
	0x0343366C BL 0x1C16DFC
	0x03433670 MOV X0, X22
	0x03433674 MOV X1, X31
	0x03433678 BL 0x3624D20
	0x0343367C ADRP X8, 0xCFB000
	0x03433680 LDR X8, [X8 + 0xF20]
	0x03433684 ADRP X9, 0xCC9000
	0x03433688 LDR X9, [X9 + 0x720]
	0x0343368C MOV X2, X0
	0x03433690 LDR X1, [X8]
	0x03433694 LDR X3, [X9]
	0x03433698 MOV X0, X21
	0x0343369C MOV X4, X31
	0x034336A0 BL 0x32277C4
	0x034336A4 MOV X21, X0
	0x034336A8 CBZ X24, 0x34339AC
	0x034336AC LDR X0, [X24 + 0x20]
	0x034336B0 CBZ X0, 0x34339B0
	0x034336B4 MOV X1, X31
	0x034336B8 BL 0x361B448
	0x034336BC ADRP X8, 0xCC9000
	0x034336C0 LDR X8, [X8 + 0x8D8]
	0x034336C4 MOV X22, X0
	0x034336C8 LDR X0, [X8]
	0x034336CC MOVZ W1, 0x1
	0x034336D0 BL 0x1C16D6C
	0x034336D4 MOV X1, X0
	0x034336D8 CBZ X1, 0x34339B4
	0x034336DC LDR W8, [X1 + 0x18]
	0x034336E0 CBZ W8, 0x34339B8
	0x034336E4 MOVZ W8, 0x2F
	0x034336E8 STRH W8, [X1 + 0x20]
	0x034336EC CBZ X22, 0x34339BC
	0x034336F0 MOV X0, X22
	0x034336F4 MOV X2, X31
	0x034336F8 BL 0x322BC58
	0x034336FC MOV X1, X20
	0x03433700 MOV X2, X31
	0x03433704 BL 0x321B938
	0x03433708 ADRP X8, 0xCC9000
	0x0343370C LDR X8, [X8 + 0x3A0]
	0x03433710 MOV X22, X0
	0x03433714 LDR X23, [X24 + 0x20]
	0x03433718 LDR X0, [X8]
	0x0343371C BL 0x1C16F10
	0x03433720 MOV X20, X0
	0x03433724 MOV X1, X23
	0x03433728 MOV X2, X31
	0x0343372C BL 0x36281F8
	0x03433730 CBZ X20, 0x34339C0
	0x03433734 MOV X0, X20
	0x03433738 MOV X1, X22
	0x0343373C MOV X2, X31
	0x03433740 BL 0x36288CC
	0x03433744 MOV X0, X20
	0x03433748 MOV X1, X21
	0x0343374C MOV X2, X31
	0x03433750 BL 0x3628980
	0x03433754 MOV X0, X20
	0x03433758 MOV X1, X31
	0x0343375C BL 0x3628A38
	0x03433760 ADRP X8, 0xCE9000
	0x03433764 ADRP X9, 0xCC1000
	0x03433768 LDR X8, [X8 + 0x4D0]
	0x0343376C LDR X9, [X9 + 0x6D0]
	0x03433770 MOV X20, X0
	0x03433774 LDR X21, [X8]
	0x03433778 LDR X0, [X9]
	0x0343377C BL 0x1C16F10
	0x03433780 ADRP X8, 0xCC1000
	0x03433784 LDR X8, [X8 + 0x6C0]
	0x03433788 MOV X22, X0
	0x0343378C LDR X1, [X8]
	0x03433790 BL 0x2AA4804
	0x03433794 ADRP X8, 0xCFB000
	0x03433798 LDR X8, [X8 + 0x7D8]
	0x0343379C LDR X1, [X19 + 0x48]
	0x034337A0 LDR X0, [X8]
	0x034337A4 MOV X2, X31
	0x034337A8 BL 0x321B938
	0x034337AC CBZ X22, 0x34339C4
	0x034337B0 ADRP X8, 0xCFB000
	0x034337B4 LDR X8, [X8 + 0x7D0]
	0x034337B8 ADRP X9, 0xCC1000
	0x034337BC LDR X9, [X9 + 0x810]
	0x034337C0 MOV X2, X0
	0x034337C4 LDR X1, [X8]
	0x034337C8 LDR X3, [X9]
	0x034337CC MOV X0, X22
	0x034337D0 BL 0x2AA5098
	0x034337D4 LDR X23, [X24 + 0x10]
	0x034337D8 CBZ X23, 0x34339C8
	0x034337DC ADRP X10, 0xCFB000
	0x034337E0 LDR X10, [X10 + 0x7B8]
	0x034337E4 LDR X8, [X23]
	0x034337E8 LDR W25, [X24 + 0x18]
	0x034337EC LDP X26, X24, [X19 + 0x50]
	0x034337F0 LDR X1, [X10]
	0x034337F4 LDRH W9, [X8 + 0x12E]
	0x034337F8 CBZ X9, 0x343381C
	0x034337FC LDR X10, [X8 + 0xB0]
	0x03433800 ADD X10, X10, 0x8
	0x03433804 LDUR X11, [X10 - 0x8]
	0x03433808 CMP X11, X1
	0x0343380C B.EQ 0x3433844
	0x03433810 SUBS X9, X9, 0x1
	0x03433814 ADD X10, X10, 0x10
	0x03433818 B.NE 0x3433804
	0x0343381C MOVZ W2, 0x3
	0x03433820 MOV X0, X23
	0x03433824 BL 0x1C5C788
	0x03433828 B 0x3433854
	0x0343382C LDR X8, [X19 + 0x60]
	0x03433830 MOVN W9, 0x0
	0x03433834 STR X8, [X31 + 0x18]
	0x03433838 STR X31, [X19 + 0x60]
	0x0343383C STR W9, [X19]
	0x03433840 B 0x34338B0
	0x03433844 LDR W9, [X10]
	0x03433848 ADD W9, W9, 0x3
	0x0343384C ADD X8, X8, W9, 0x4, SXTW
	0x03433850 ADD X0, X8, 0x138
	0x03433854 LDP X8, X9, [X0]
	0x03433858 MOV X0, X23
	0x0343385C MOV X1, X21
	0x03433860 MOV X2, X20
	0x03433864 MOV X3, X22
	0x03433868 MOV X4, X31
	0x0343386C MOV W5, W25
	0x03433870 MOV X6, X26
	0x03433874 MOV X7, X24
	0x03433878 STR X9, [X31]
	0x0343387C BLR X8
	0x03433880 CBZ X0, 0x34339CC
	0x03433884 ADRP X8, 0xCC3000
	0x03433888 LDR X8, [X8 + 0x1F8]
	0x0343388C LDR X1, [X8]
	0x03433890 BL 0x269F5D0
	0x03433894 ADRP X8, 0xCC3000
	0x03433898 LDR X8, [X8 + 0x1F0]
	0x0343389C STR X0, [X31 + 0x18]
	0x034338A0 LDR X1, [X8]
	0x034338A4 ADD X0, X31, 0x18
	0x034338A8 BL 0x2677430
	0x034338AC TBZ X0, 0x0, 0x343390C
	0x034338B0 ADRP X8, 0xCC3000
	0x034338B4 LDR X8, [X8 + 0x1E0]
	0x034338B8 ADD X0, X31, 0x18
	0x034338BC LDR X1, [X8]
	0x034338C0 BL 0x2677474
	0x034338C4 ADRP X8, 0xCFC000
	0x034338C8 LDR X8, [X8 + 0x240]
	0x034338CC LDR X1, [X8]
	0x034338D0 BL 0x220E6DC
	0x034338D4 MOVN W8, 0x1
	0x034338D8 STR W8, [X19], #0x8
	0x034338DC MOV X20, X0
	0x034338E0 LDR X0, [X27]
	0x034338E4 ADRP X21, 0xCFC000
	0x034338E8 LDR W8, [X0 + 0xE0]
	0x034338EC LDR X21, [X21 + 0x238]
	0x034338F0 CBNZ W8, 0x34338F8
	0x034338F4 BL 0x1C16DFC
	0x034338F8 LDR X2, [X21]
	0x034338FC MOV X0, X19
	0x03433900 MOV X1, X20
	0x03433904 BL 0x26322B0
	0x03433908 B 0x3433944
	0x0343390C STR W31, [X19]
	0x03433910 LDR X8, [X31 + 0x18]
	0x03433914 STR X8, [X19 + 0x60]
	0x03433918 LDR X0, [X27]
	0x0343391C LDR W8, [X0 + 0xE0]
	0x03433920 CBNZ W8, 0x3433928
	0x03433924 BL 0x1C16DFC
	0x03433928 ADRP X8, 0xCFC000
	0x0343392C LDR X8, [X8 + 0x230]
	0x03433930 ADD X0, X19, 0x8
	0x03433934 LDR X3, [X8]
	0x03433938 ADD X1, X31, 0x18
	0x0343393C MOV X2, X19
	0x03433940 BL 0x1FB5074
	0x03433944 LDP X20, X19, [X31 + 0x60]
	0x03433948 LDP X22, X21, [X31 + 0x50]
	0x0343394C LDP X24, X23, [X31 + 0x40]
	0x03433950 LDP X26, X25, [X31 + 0x30]
	0x03433954 LDP X30, X27, [X31 + 0x20]
	0x03433958 ADD X31, X31, 0x70
	0x0343395C RET
	0x03433960 ADRP X0, 0xCC8000
	0x03433964 LDR X0, [X0 + 0x578]
	0x03433968 BL 0x1C16D08
	0x0343396C BL 0x1C16F10
	0x03433970 MOV X20, X0
	0x03433974 ADRP X0, 0xCFC000
	0x03433978 LDR X0, [X0 + 0x128]
	0x0343397C BL 0x1C16D08
	0x03433980 MOV X1, X0
	0x03433984 MOV X0, X20
	0x03433988 MOV X2, X31
	0x0343398C BL 0x3314A68
	0x03433990 ADRP X0, 0xCFC000
	0x03433994 LDR X0, [X0 + 0x250]
	0x03433998 BL 0x1C16D08
	0x0343399C MOV X1, X0
	0x034339A0 MOV X0, X20
	0x034339A4 BL 0x1C16DEC
	0x034339A8 BL 0x1C16F20
	0x034339AC BL 0x1C16F20
	0x034339B0 BL 0x1C16F20
	0x034339B4 BL 0x1C16F20
	0x034339B8 BL 0x1C16F28
	0x034339BC BL 0x1C16F20
	0x034339C0 BL 0x1C16F20
	0x034339C4 BL 0x1C16F20
	0x034339C8 BL 0x1C16F20
	0x034339CC BL 0x1C16F20
	0x034339D0 BL 0x1C16F20
	0x034339D4 BL 0x1C16F28
	0x034339D8 BL 0x1C16F28
	0x034339DC BL 0x1C16F28
	0x034339E0 BL 0x1C16F20
	0x034339E4 BL 0x1C16F28
	0x034339E8 BL 0x1C16F28
	0x034339EC BL 0x1C16F28
	0x034339F0 BL 0x1C16F28
	0x034339F4 BL 0x1C16F28
	0x034339F8 BL 0x1C16F44
	0x034339FC MOV X1, X31
	0x03433A00 BL 0x1C16DEC
	0x03433A04 BL 0x1C16F44
	0x03433A08 MOV X1, X31
	0x03433A0C BL 0x1C16DEC
	0x03433A10 BL 0x1C16F44
	0x03433A14 MOV X1, X31
	0x03433A18 BL 0x1C16DEC
	0x03433A1C BL 0x1C16F44
	0x03433A20 MOV X1, X31
	0x03433A24 BL 0x1C16DEC
	0x03433A28 BL 0x1C16F44
	0x03433A2C MOV X1, X31
	0x03433A30 BL 0x1C16DEC
	0x03433A34 BL 0x1C16F44
	0x03433A38 MOV X1, X31
	0x03433A3C BL 0x1C16DEC
	0x03433A40 BL 0x1C16F44
	0x03433A44 MOV X1, X31
	0x03433A48 BL 0x1C16DEC
	0x03433A4C BL 0x1C16F44
	0x03433A50 MOV X1, X31
	0x03433A54 BL 0x1C16DEC
	0x03433A58 B 0x3433AF4
	0x03433A5C B 0x3433AF4
	0x03433A60 B 0x3433AF4
	0x03433A64 B 0x3433AF4
	0x03433A68 B 0x3433AF4
	0x03433A6C B 0x3433AF4
	0x03433A70 B 0x3433AF4
	0x03433A74 B 0x3433AF4
	0x03433A78 B 0x3433AF4
	0x03433A7C B 0x3433AF4
	0x03433A80 B 0x3433AF4
	0x03433A84 B 0x3433AF4
	0x03433A88 B 0x3433AF4
	0x03433A8C B 0x3433AF4
	0x03433A90 B 0x3433AF4
	0x03433A94 B 0x3433AF4
	0x03433A98 B 0x3433AF4
	0x03433A9C B 0x3433AF4
	0x03433AA0 B 0x3433AF4
	0x03433AA4 B 0x3433AF4
	0x03433AA8 B 0x3433AF4
	0x03433AAC B 0x3433AF4
	0x03433AB0 B 0x3433AF4
	0x03433AB4 B 0x3433AF4
	0x03433AB8 B 0x3433AF4
	0x03433ABC B 0x3433AF4
	0x03433AC0 B 0x3433AF4
	0x03433AC4 B 0x3433AF4
	0x03433AC8 B 0x3433AF4
	0x03433ACC B 0x3433AF4
	0x03433AD0 B 0x3433AF4
	0x03433AD4 B 0x3433AF4
	0x03433AD8 B 0x3433AF4
	0x03433ADC B 0x3433AF4
	0x03433AE0 B 0x3433AF4
	0x03433AE4 B 0x3433AF4
	0x03433AE8 B 0x3433AF4
	0x03433AEC B 0x3433AF4
	0x03433AF0 B 0x3433AF4
	0x03433AF4 MOV X20, X0
	0x03433AF8 CMP W1, 0x1
	0x03433AFC B.NE 0x3433B98
	0x03433B00 MOV X0, X20
	0x03433B04 BL 0x3EB1AD0
	0x03433B08 MOV X20, X0
	0x03433B0C ADRP X0, 0xCC0000
	0x03433B10 LDR X0, [X0 + 0x7D0]
	0x03433B14 BL 0x1C16D08
	0x03433B18 LDR X8, [X20]
	0x03433B1C LDR X1, [X8]
	0x03433B20 BL 0x1C17270
	0x03433B24 TBZ X0, 0x0, 0x3433B70
	0x03433B28 LDR X20, [X20]
	0x03433B2C BL 0x3EB1AE0
	0x03433B30 MOVN W8, 0x1
	0x03433B34 STR W8, [X19], #0x8
	0x03433B38 ADRP X0, 0xCFB000
	0x03433B3C LDR X0, [X0 + 0x790]
	0x03433B40 BL 0x1C16D08
	0x03433B44 LDR W8, [X0 + 0xE0]
	0x03433B48 CBNZ W8, 0x3433B50
	0x03433B4C BL 0x1C16DFC
	0x03433B50 ADRP X0, 0xCFC000
	0x03433B54 LDR X0, [X0 + 0x258]
	0x03433B58 BL 0x1C16D08
	0x03433B5C MOV X2, X0
	0x03433B60 MOV X0, X19
	0x03433B64 MOV X1, X20
	0x03433B68 BL 0x26324C8
	0x03433B6C B 0x3433944
	0x03433B70 MOVZ W0, 0x8
	0x03433B74 BL 0x3EB1AF0
	0x03433B78 LDR X8, [X20]
	0x03433B7C STR X8, [X0]
	0x03433B80 ADRP X1, 0xA81000
	0x03433B84 ADD X1, X1, 0xE58
	0x03433B88 MOV X2, X31
	0x03433B8C BL 0x3EB1B00
	0x03433B90 MOV X20, X0
	0x03433B94 BL 0x3EB1AE0
	0x03433B98 MOV X0, X20
	0x03433B9C BL 0x1D2C690
	0x03433BA0 BL 0x1990590
	0x03433BA4 STR X30, [X31 - 0x30]!
	0x03433BA8 STP X22, X21, [X31 + 0x10]
	0x03433BAC STP X20, X19, [X31 + 0x20]
	0x03433BB0 ADRP X22, 0xFAA000
	0x03433BB4 ADRP X21, 0xCFB000
	0x03433BB8 LDRB W8, [X22 + 0x668]
	0x03433BBC LDR X21, [X21 + 0x790]
	0x03433BC0 MOV X19, X1
	0x03433BC4 MOV X20, X0
	0x03433BC8 TBNZ X8, 0x0, 0x3433BEC
	0x03433BCC ADRP X0, 0xCFC000
	0x03433BD0 LDR X0, [X0 + 0x260]
	0x03433BD4 BL 0x1C16CF4
	0x03433BD8 ADRP X0, 0xCFB000
	0x03433BDC LDR X0, [X0 + 0x790]
	0x03433BE0 BL 0x1C16CF4
	0x03433BE4 MOVZ W8, 0x1
	0x03433BE8 STRB W8, [X22 + 0x668]
	0x03433BEC LDR X0, [X21]
	0x03433BF0 ADRP X21, 0xCFC000
	0x03433BF4 LDR W8, [X0 + 0xE0]
	0x03433BF8 LDR X21, [X21 + 0x260]
	0x03433BFC CBNZ W8, 0x3433C04
	0x03433C00 BL 0x1C16DFC
	0x03433C04 LDR X2, [X21]
	0x03433C08 ADD X0, X20, 0x8
	0x03433C0C MOV X1, X19
	0x03433C10 LDP X20, X19, [X31 + 0x20]
	0x03433C14 LDP X22, X21, [X31 + 0x10]
	0x03433C18 LDR X30, [X31], #0x30
	0x03433C1C B 0x2632228
	0x03433C20 SUB X31, X31, 0x80
	0x03433C24 STP X29, X30, [X31 + 0x20]
	0x03433C28 STP X28, X27, [X31 + 0x30]
	0x03433C2C STP X26, X25, [X31 + 0x40]
	0x03433C30 STP X24, X23, [X31 + 0x50]
	0x03433C34 STP X22, X21, [X31 + 0x60]
	0x03433C38 STP X20, X19, [X31 + 0x70]
	0x03433C3C ADRP X20, 0xFAA000
	0x03433C40 LDRB W8, [X20 + 0x669]
	0x03433C44 MOV X19, X0
	0x03433C48 TBNZ X8, 0x0, 0x3433D80
	0x03433C4C ADRP X0, 0xCFC000
	0x03433C50 LDR X0, [X0 + 0x268]
	0x03433C54 BL 0x1C16CF4
	0x03433C58 ADRP X0, 0xCC3000
	0x03433C5C LDR X0, [X0 + 0x280]
	0x03433C60 BL 0x1C16CF4
	0x03433C64 ADRP X0, 0xCC9000
	0x03433C68 LDR X0, [X0 + 0x8D8]
	0x03433C6C BL 0x1C16CF4
	0x03433C70 ADRP X0, 0xCC1000
	0x03433C74 LDR X0, [X0 + 0x810]
	0x03433C78 BL 0x1C16CF4
	0x03433C7C ADRP X0, 0xCC1000
	0x03433C80 LDR X0, [X0 + 0x6C0]
	0x03433C84 BL 0x1C16CF4
	0x03433C88 ADRP X0, 0xCC1000
	0x03433C8C LDR X0, [X0 + 0x6D0]
	0x03433C90 BL 0x1C16CF4
	0x03433C94 ADRP X0, 0xCC0000
	0x03433C98 LDR X0, [X0 + 0xE00]
	0x03433C9C BL 0x1C16CF4
	0x03433CA0 ADRP X0, 0xCC0000
	0x03433CA4 LDR X0, [X0 + 0xF70]
	0x03433CA8 BL 0x1C16CF4
	0x03433CAC ADRP X0, 0xCC0000
	0x03433CB0 LDR X0, [X0 + 0xF78]
	0x03433CB4 BL 0x1C16CF4
	0x03433CB8 ADRP X0, 0xCC0000
	0x03433CBC LDR X0, [X0 + 0xE18]
	0x03433CC0 BL 0x1C16CF4
	0x03433CC4 ADRP X0, 0xCFB000
	0x03433CC8 LDR X0, [X0 + 0x7B8]
	0x03433CCC BL 0x1C16CF4
	0x03433CD0 ADRP X0, 0xCC0000
	0x03433CD4 LDR X0, [X0 + 0xAC8]
	0x03433CD8 BL 0x1C16CF4
	0x03433CDC ADRP X0, 0xCC3000
	0x03433CE0 LDR X0, [X0 + 0x1E0]
	0x03433CE4 BL 0x1C16CF4
	0x03433CE8 ADRP X0, 0xCC3000
	0x03433CEC LDR X0, [X0 + 0x1F0]
	0x03433CF0 BL 0x1C16CF4
	0x03433CF4 ADRP X0, 0xCC3000
	0x03433CF8 LDR X0, [X0 + 0x1F8]
	0x03433CFC BL 0x1C16CF4
	0x03433D00 ADRP X0, 0xCC9000
	0x03433D04 LDR X0, [X0 + 0x3A0]
	0x03433D08 BL 0x1C16CF4
	0x03433D0C ADRP X0, 0xCC2000
	0x03433D10 LDR X0, [X0 + 0xA28]
	0x03433D14 BL 0x1C16CF4
	0x03433D18 ADRP X0, 0xCFC000
	0x03433D1C LDR X0, [X0 + 0x270]
	0x03433D20 BL 0x1C16CF4
	0x03433D24 ADRP X0, 0xCE9000
	0x03433D28 LDR X0, [X0 + 0x4D8]
	0x03433D2C BL 0x1C16CF4
	0x03433D30 ADRP X0, 0xCFB000
	0x03433D34 LDR X0, [X0 + 0x7F0]
	0x03433D38 BL 0x1C16CF4
	0x03433D3C ADRP X0, 0xCFB000
	0x03433D40 LDR X0, [X0 + 0x800]
	0x03433D44 BL 0x1C16CF4
	0x03433D48 ADRP X0, 0xCC9000
	0x03433D4C LDR X0, [X0 + 0x720]
	0x03433D50 BL 0x1C16CF4
	0x03433D54 ADRP X0, 0xCFB000
	0x03433D58 LDR X0, [X0 + 0x7D0]
	0x03433D5C BL 0x1C16CF4
	0x03433D60 ADRP X0, 0xCFB000
	0x03433D64 LDR X0, [X0 + 0x7D8]
	0x03433D68 BL 0x1C16CF4
	0x03433D6C ADRP X0, 0xCC0000
	0x03433D70 LDR X0, [X0 + 0x988]
	0x03433D74 BL 0x1C16CF4
	0x03433D78 MOVZ W8, 0x1
	0x03433D7C STRB W8, [X20 + 0x669]
	0x03433D80 STR X31, [X31 + 0x18]
	0x03433D84 ADRP X27, 0xCC3000
	0x03433D88 LDR W24, [X19]
	0x03433D8C LDR X27, [X27 + 0x280]
	0x03433D90 CBZ W24, 0x3433E6C
	0x03433D94 LDR X21, [X19 + 0x20]
	0x03433D98 CBZ X21, 0x34342D4
	0x03433D9C ADRP X26, 0xCC2000
	0x03433DA0 LDR X26, [X26 + 0xA28]
	0x03433DA4 ADRP X8, 0xCFC000
	0x03433DA8 LDR X0, [X26]
	0x03433DAC LDR X8, [X8 + 0x270]
	0x03433DB0 LDR X23, [X19 + 0x30]
	0x03433DB4 LDR W9, [X0 + 0xE0]
	0x03433DB8 LDR X20, [X8]
	0x03433DBC CBNZ W9, 0x3433DC4
	0x03433DC0 BL 0x1C16DFC
	0x03433DC4 MOV X0, X21
	0x03433DC8 MOV X1, X31
	0x03433DCC BL 0x3624D20
	0x03433DD0 CBZ X20, 0x343431C
	0x03433DD4 ADRP X8, 0xCFB000
	0x03433DD8 LDR X8, [X8 + 0x800]
	0x03433DDC MOV X2, X0
	0x03433DE0 LDR X1, [X8]
	0x03433DE4 MOV X0, X20
	0x03433DE8 MOV X3, X31
	0x03433DEC BL 0x32293BC
	0x03433DF0 ADRP X8, 0xCC0000
	0x03433DF4 LDR X8, [X8 + 0x988]
	0x03433DF8 LDR X21, [X19 + 0x28]
	0x03433DFC MOV X20, X0
	0x03433E00 LDR X28, [X8]
	0x03433E04 CBNZ X21, 0x3433E24
	0x03433E08 ADRP X8, 0xCC0000
	0x03433E0C LDR X8, [X8 + 0xAC8]
	0x03433E10 LDR X0, [X8]
	0x03433E14 MOV W1, W31
	0x03433E18 BL 0x1C16D6C
	0x03433E1C MOV X21, X0
	0x03433E20 CBZ X0, 0x343434C
	0x03433E24 ADRP X10, 0xCC0000
	0x03433E28 LDR X8, [X21]
	0x03433E2C LDR X10, [X10 + 0xF70]
	0x03433E30 LDRH W9, [X8 + 0x12E]
	0x03433E34 LDR X1, [X10]
	0x03433E38 CBZ X9, 0x3433E5C
	0x03433E3C LDR X10, [X8 + 0xB0]
	0x03433E40 ADD X10, X10, 0x8
	0x03433E44 LDUR X11, [X10 - 0x8]
	0x03433E48 CMP X11, X1
	0x03433E4C B.EQ 0x3433E84
	0x03433E50 SUBS X9, X9, 0x1
	0x03433E54 ADD X10, X10, 0x10
	0x03433E58 B.NE 0x3433E44
	0x03433E5C MOV X0, X21
	0x03433E60 MOV W2, W31
	0x03433E64 BL 0x1C5C788
	0x03433E68 B 0x3433E90
	0x03433E6C LDR X8, [X19 + 0x50]
	0x03433E70 MOVN W9, 0x0
	0x03433E74 STR X8, [X31 + 0x18]
	0x03433E78 STR X31, [X19 + 0x50]
	0x03433E7C STR W9, [X19]
	0x03433E80 B 0x343423C
	0x03433E84 LDRSW X9, [X10]
	0x03433E88 ADD X8, X8, X9, 0x4, LSL
	0x03433E8C ADD X0, X8, 0x138
	0x03433E90 LDP X8, X1, [X0]
	0x03433E94 MOV X0, X21
	0x03433E98 BLR X8
	0x03433E9C STP X20, X23, [X31 + 0x8]
	0x03433EA0 ADRP X29, 0xCC0000
	0x03433EA4 ADRP X27, 0xCC0000
	0x03433EA8 ADRP X20, 0xCFB000
	0x03433EAC ADRP X25, 0xCC9000
	0x03433EB0 LDR X29, [X29 + 0xE18]
	0x03433EB4 LDR X27, [X27 + 0xF78]
	0x03433EB8 LDR X20, [X20 + 0x7F0]
	0x03433EBC LDR X25, [X25 + 0x720]
	0x03433EC0 MOV X22, X0
	0x03433EC4 MOV X0, X28
	0x03433EC8 CBZ X22, 0x34342D0
	0x03433ECC LDR X8, [X22]
	0x03433ED0 LDR X1, [X29]
	0x03433ED4 MOV X21, X0
	0x03433ED8 LDRH W9, [X8 + 0x12E]
	0x03433EDC CBZ X9, 0x3433F00
	0x03433EE0 LDR X10, [X8 + 0xB0]
	0x03433EE4 ADD X10, X10, 0x8
	0x03433EE8 LDUR X11, [X10 - 0x8]
	0x03433EEC CMP X11, X1
	0x03433EF0 B.EQ 0x3433F10
	0x03433EF4 SUBS X9, X9, 0x1
	0x03433EF8 ADD X10, X10, 0x10
	0x03433EFC B.NE 0x3433EE8
	0x03433F00 MOV X0, X22
	0x03433F04 MOV W2, W31
	0x03433F08 BL 0x1C5C788
	0x03433F0C B 0x3433F1C
	0x03433F10 LDRSW X9, [X10]
	0x03433F14 ADD X8, X8, X9, 0x4, LSL
	0x03433F18 ADD X0, X8, 0x138
	0x03433F1C LDP X8, X1, [X0]
	0x03433F20 MOV X0, X22
	0x03433F24 BLR X8
	0x03433F28 TBZ X0, 0x0, 0x3433FC0
	0x03433F2C LDR X8, [X22]
	0x03433F30 LDR X1, [X27]
	0x03433F34 LDRH W9, [X8 + 0x12E]
	0x03433F38 CBZ X9, 0x3433F5C
	0x03433F3C LDR X10, [X8 + 0xB0]
	0x03433F40 ADD X10, X10, 0x8
	0x03433F44 LDUR X11, [X10 - 0x8]
	0x03433F48 CMP X11, X1
	0x03433F4C B.EQ 0x3433F6C
	0x03433F50 SUBS X9, X9, 0x1
	0x03433F54 ADD X10, X10, 0x10
	0x03433F58 B.NE 0x3433F44
	0x03433F5C MOV X0, X22
	0x03433F60 MOV W2, W31
	0x03433F64 BL 0x1C5C788
	0x03433F68 B 0x3433F78
	0x03433F6C LDRSW X9, [X10]
	0x03433F70 ADD X8, X8, X9, 0x4, LSL
	0x03433F74 ADD X0, X8, 0x138
	0x03433F78 LDP X8, X1, [X0]
	0x03433F7C MOV X0, X22
	0x03433F80 BLR X8
	0x03433F84 MOV X23, X0
	0x03433F88 LDR X0, [X26]
	0x03433F8C LDR W8, [X0 + 0xE0]
	0x03433F90 CBNZ W8, 0x3433F98
	0x03433F94 BL 0x1C16DFC
	0x03433F98 MOV X0, X23
	0x03433F9C MOV X1, X31
	0x03433FA0 BL 0x3624D20
	0x03433FA4 LDR X1, [X20]
	0x03433FA8 LDR X3, [X25]
	0x03433FAC MOV X2, X0
	0x03433FB0 MOV X0, X21
	0x03433FB4 MOV X4, X31
	0x03433FB8 BL 0x32277C4
	0x03433FBC B 0x3433EC8
	0x03433FC0 MOV X23, X31
	0x03433FC4 MOVZ W20, 0x9
	0x03433FC8 ADRP X27, 0xCC3000
	0x03433FCC LDR X27, [X27 + 0x280]
	0x03433FD0 LDR X25, [X31 + 0x10]
	0x03433FD4 TBZ X24, 0x1F, 0x343403C
	0x03433FD8 CBZ X22, 0x343403C
	0x03433FDC ADRP X10, 0xCC0000
	0x03433FE0 LDR X8, [X22]
	0x03433FE4 LDR X10, [X10 + 0xE00]
	0x03433FE8 LDRH W9, [X8 + 0x12E]
	0x03433FEC LDR X1, [X10]
	0x03433FF0 CBZ X9, 0x3434014
	0x03433FF4 LDR X10, [X8 + 0xB0]
	0x03433FF8 ADD X10, X10, 0x8
	0x03433FFC LDUR X11, [X10 - 0x8]
	0x03434000 CMP X11, X1
	0x03434004 B.EQ 0x3434024
	0x03434008 SUBS X9, X9, 0x1
	0x0343400C ADD X10, X10, 0x10
	0x03434010 B.NE 0x3433FFC
	0x03434014 MOV X0, X22
	0x03434018 MOV W2, W31
	0x0343401C BL 0x1C5C788
	0x03434020 B 0x3434030
	0x03434024 LDRSW X9, [X10]
	0x03434028 ADD X8, X8, X9, 0x4, LSL
	0x0343402C ADD X0, X8, 0x138
	0x03434030 LDP X8, X1, [X0]
	0x03434034 MOV X0, X22
	0x03434038 BLR X8
	0x0343403C CBNZ X23, 0x3434320
	0x03434040 CMP W20, 0x9
	0x03434044 B.EQ 0x343404C
	0x03434048 CBNZ W20, 0x34342B0
	0x0343404C CBZ X25, 0x3434328
	0x03434050 LDR X0, [X25 + 0x20]
	0x03434054 CBZ X0, 0x343432C
	0x03434058 MOV X1, X31
	0x0343405C BL 0x361B448
	0x03434060 ADRP X8, 0xCC8000
	0x03434064 LDR X8, [X8 + 0x8D8]
	0x03434068 MOV X22, X0
	0x0343406C LDR X0, [X8]
	0x03434070 MOVZ W1, 0x1
	0x03434074 BL 0x1C16D6C
	0x03434078 MOV X1, X0
	0x0343407C CBZ X1, 0x3434330
	0x03434080 LDR W8, [X1 + 0x18]
	0x03434084 CBZ W8, 0x3434334
	0x03434088 MOVZ W8, 0x2F
	0x0343408C STRH W8, [X1 + 0x20]
	0x03434090 CBZ X22, 0x3434338
	0x03434094 MOV X0, X22
	0x03434098 MOV X2, X31
	0x0343409C BL 0x322BC58
	0x034340A0 LDR X1, [X31 + 0x8]
	0x034340A4 MOV X2, X31
	0x034340A8 BL 0x321B938
	0x034340AC ADRP X8, 0xCC8000
	0x034340B0 LDR X23, [X25 + 0x20]
	0x034340B4 LDR X8, [X8 + 0x3A0]
	0x034340B8 MOV X22, X0
	0x034340BC LDR X0, [X8]
	0x034340C0 BL 0x1C16F10
	0x034340C4 MOV X20, X0
	0x034340C8 MOV X1, X23
	0x034340CC MOV X2, X31
	0x034340D0 BL 0x36281F8
	0x034340D4 CBZ X20, 0x343433C
	0x034340D8 MOV X0, X20
	0x034340DC MOV X1, X22
	0x034340E0 MOV X2, X31
	0x034340E4 BL 0x36288CC
	0x034340E8 MOV X0, X20
	0x034340EC MOV X1, X21
	0x034340F0 MOV X2, X31
	0x034340F4 BL 0x3628980
	0x034340F8 MOV X0, X20
	0x034340FC MOV X1, X31
	0x03434100 BL 0x3628A38
	0x03434104 ADRP X8, 0xCE8000
	0x03434108 ADRP X9, 0xCC0000
	0x0343410C LDR X8, [X8 + 0x4D8]
	0x03434110 LDR X9, [X9 + 0x6D0]
	0x03434114 MOV X20, X0
	0x03434118 LDR X21, [X8]
	0x0343411C LDR X0, [X9]
	0x03434120 BL 0x1C16F10
	0x03434124 ADRP X8, 0xCC0000
	0x03434128 LDR X8, [X8 + 0x6C0]
	0x0343412C MOV X22, X0
	0x03434130 LDR X1, [X8]
	0x03434134 BL 0x2AA4804
	0x03434138 ADRP X8, 0xCFA000
	0x0343413C LDR X1, [X19 + 0x38]
	0x03434140 LDR X8, [X8 + 0x7D8]
	0x03434144 LDR X0, [X8]
	0x03434148 MOV X2, X31
	0x0343414C BL 0x321B938
	0x03434150 CBZ X22, 0x3434340
	0x03434154 ADRP X8, 0xCFA000
	0x03434158 LDR X8, [X8 + 0x7D0]
	0x0343415C ADRP X9, 0xCC0000
	0x03434160 LDR X9, [X9 + 0x810]
	0x03434164 MOV X2, X0
	0x03434168 LDR X1, [X8]
	0x0343416C LDR X3, [X9]
	0x03434170 MOV X0, X22
	0x03434174 BL 0x2AA5098
	0x03434178 LDR X24, [X25 + 0x10]
	0x0343417C CBZ X24, 0x3434344
	0x03434180 ADRP X10, 0xCFA000
	0x03434184 LDR W23, [X25 + 0x18]
	0x03434188 LDR X8, [X24]
	0x0343418C LDP X26, X25, [X19 + 0x40]
	0x03434190 LDR X10, [X10 + 0x7B8]
	0x03434194 LDRH W9, [X8 + 0x12E]
	0x03434198 LDR X1, [X10]
	0x0343419C CBZ X9, 0x34341C0
	0x034341A0 LDR X10, [X8 + 0xB0]
	0x034341A4 ADD X10, X10, 0x8
	0x034341A8 LDUR X11, [X10 - 0x8]
	0x034341AC CMP X11, X1
	0x034341B0 B.EQ 0x34341D0
	0x034341B4 SUBS X9, X9, 0x1
	0x034341B8 ADD X10, X10, 0x10
	0x034341BC B.NE 0x34341A8
	0x034341C0 MOVZ W2, 0x3
	0x034341C4 MOV X0, X24
	0x034341C8 BL 0x1C5C788
	0x034341CC B 0x34341E0
	0x034341D0 LDR W9, [X10]
	0x034341D4 ADD W9, W9, 0x3

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xFAB000
	013 Move W8, [X20+1637]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {108}
	019 Move X0, 0xCFD000
	020 Move X0, [X0+480]
	021 Call 0x1C17CF4
	022 Move X0, 0xCFD000
	023 Move X0, [X0+488]
	024 Call 0x1C17CF4
	025 Move X0, 0xCFC000
	026 Move X0, [X0+1800]
	027 Call 0x1C17CF4
	028 Move X0, 0xCCA000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC2000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC2000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCC2000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xCFC000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xCFD000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xCC4000
	047 Move X0, [X0+3832]
	048 Call 0x1C17CF4
	049 Move X0, 0xCC2000
	050 Move X0, [X0+1144]
	051 Call 0x1C17CF4
	052 Move X0, 0xCC1000
	053 Move X0, [X0+2512]
	054 Call 0x1C17CF4
	055 Move X0, 0xCC4000
	056 Move X0, [X0+480]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC4000
	059 Move X0, [X0+496]
	060 Call 0x1C17CF4
	061 Move X0, 0xCC4000
	062 Move X0, [X0+504]
	063 Call 0x1C17CF4
	064 Move X0, 0xCCA000
	065 Move X0, [X0+928]
	066 Call 0x1C17CF4
	067 Move X0, 0xCC3000
	068 Move X0, [X0+2600]
	069 Call 0x1C17CF4
	070 Move X0, 0xCFD000
	071 Move X0, [X0+504]
	072 Call 0x1C17CF4
	073 Move X0, 0xCEA000
	074 Move X0, [X0+1232]
	075 Call 0x1C17CF4
	076 Move X0, 0xCFD000
	077 Move X0, [X0+512]
	078 Call 0x1C17CF4
	079 Move X0, 0xCFD000
	080 Move X0, [X0+520]
	081 Call 0x1C17CF4
	082 Move X0, 0xCFD000
	083 Move X0, [X0+528]
	084 Call 0x1C17CF4
	085 Move X0, 0xCCA000
	086 Move X0, [X0+1824]
	087 Call 0x1C17CF4
	088 Move X0, 0xCFC000
	089 Move X0, [X0+2000]
	090 Call 0x1C17CF4
	091 Move X0, 0xCFC000
	092 Move X0, [X0+3864]
	093 Call 0x1C17CF4
	094 Move X0, 0xCFC000
	095 Move X0, [X0+2008]
	096 Call 0x1C17CF4
	097 Move X0, 0xCC1000
	098 Move X0, [X0+2440]
	099 Call 0x1C17CF4
	100 Move X0, 0xCFC000
	101 Move X0, [X0+3872]
	102 Call 0x1C17CF4
	103 Move X0, 0xCFD000
	104 Move X0, [X0+536]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X20+1637], W8
	108 Move [X31+24], X31
	109 Move X27, 0xCFC000
	110 Move W8, [X19]
	111 Move X27, [X27+1800]
	112 Compare W8, 0
	113 JumpIfEqual {619}
	114 Move X8, 0xCFD000
	115 Move X9, 0xCC1000
	116 Move X8, [X8+528]
	117 Move X9, [X9+2440]
	118 Move X24, [X19+80]
	119 Move W10, [X19+32]
	120 Move X20, [X8]
	121 Move X21, [X9]
	122 Compare W10, 0
	123 JumpIfEqual {195}
	124 Move X8, 0xCC1000
	125 Move X8, [X8+2512]
	126 Move X0, [X8]
	127 Move W1, 4
	128 Call 0x1C17D6C
	129 Move X22, X0
	130 Compare X0, 0
	131 JumpIfEqual {719}
	132 Compare X21, 0
	133 JumpIfEqual {140}
	134 Move X8, [X22]
	135 Move X1, [X8+64]
	136 Move X0, X21
	137 Call 0x1C17E00
	138 Compare X0, 0
	139 JumpIfEqual {744}
	140 Move W8, [X22+24]
	141 Compare W8, 0
	142 JumpIfEqual {720}
	143 Move [X22+32], X21
	144 Move X21, 0xCFD000
	145 Move X21, [X21+512]
	146 Move X0, [X21]
	147 Compare X0, 0
	148 JumpIfEqual {155}
	149 Move X8, [X22]
	150 Move X1, [X8+64]
	151 Call 0x1C17E00
	152 Compare X0, 0
	153 JumpIfEqual {747}
	154 Move W8, [X22+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X8, [X21]
	157 Move X9, 0xCC2000
	158 Move [X22+40], X8
	159 Move X8, [X19+32]
	160 Move X9, [X9+1144]
	161 Move [X31+16], X8
	162 Move X0, [X9]
	163 Add X1, X31, 16
	164 Call 0x1C17E04
	165 Move X21, X0
	166 Compare X0, 0
	167 JumpIfEqual {174}
	168 Move X8, [X22]
	169 Move X1, [X8+64]
	170 Move X0, X21
	171 Call 0x1C17E00
	172 Compare X0, 0
	173 JumpIfEqual {750}
	174 Move W8, [X22+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move [X22+48], X21
	177 Move X21, 0xCCA000
	178 Move X21, [X21+1824]
	179 Move X0, [X21]
	180 Compare X0, 0
	181 JumpIfEqual {188}
	182 Move X8, [X22]
	183 Move X1, [X8+64]
	184 Call 0x1C17E00
	185 Compare X0, 0
	186 JumpIfEqual {753}
	187 Move W8, [X22+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, [X21]
	190 Move [X22+56], X8
	191 Move X0, X22
	192 Move X1, X31
	193 Call String.Concat, X0
	194 Move X21, X0
	195 Move W8, [X19+40]
	196 Compare W8, 0
	197 JumpIfEqual {269}
	198 Move X8, 0xCC1000
	199 Move X8, [X8+2512]
	200 Move X0, [X8]
	201 Move W1, 4
	202 Call 0x1C17D6C
	203 Move X22, X0
	204 Compare X0, 0
	205 JumpIfEqual {723}
	206 Compare X21, 0
	207 JumpIfEqual {214}
	208 Move X8, [X22]
	209 Move X1, [X8+64]
	210 Move X0, X21
	211 Call 0x1C17E00
	212 Compare X0, 0
	213 JumpIfEqual {756}
	214 Move W8, [X22+24]
	215 Compare W8, 0
	216 JumpIfEqual {725}
	217 Move [X22+32], X21
	218 Move X21, 0xCFD000
	219 Move X21, [X21+520]
	220 Move X0, [X21]
	221 Compare X0, 0
	222 JumpIfEqual {229}
	223 Move X8, [X22]
	224 Move X1, [X8+64]
	225 Call 0x1C17E00
	226 Compare X0, 0
	227 JumpIfEqual {759}
	228 Move W8, [X22+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X8, [X21]
	231 Move X9, 0xCC2000
	232 Move [X22+40], X8
	233 Move X8, [X19+40]
	234 Move X9, [X9+1144]
	235 Move [X31+16], X8
	236 Move X0, [X9]
	237 Add X1, X31, 16
	238 Call 0x1C17E04
	239 Move X21, X0
	240 Compare X0, 0
	241 JumpIfEqual {248}
	242 Move X8, [X22]
	243 Move X1, [X8+64]
	244 Move X0, X21
	245 Call 0x1C17E00
	246 Compare X0, 0
	247 JumpIfEqual {762}
	248 Move W8, [X22+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move [X22+48], X21
	251 Move X21, 0xCCA000
	252 Move X21, [X21+1824]
	253 Move X0, [X21]
	254 Compare X0, 0
	255 JumpIfEqual {262}
	256 Move X8, [X22]
	257 Move X1, [X8+64]
	258 Call 0x1C17E00
	259 Compare X0, 0
	260 JumpIfEqual {765}
	261 Move W8, [X22+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X8, [X21]
	264 Move [X22+56], X8
	265 Move X0, X22
	266 Move X1, X31
	267 Call String.Concat, X0
	268 Move X21, X0
	269 Move W8, [X19+48]
	270 Compare W8, 0
	271 JumpIfEqual {343}
	272 Move X8, 0xCC1000
	273 Move X8, [X8+2512]
	274 Move X0, [X8]
	275 Move W1, 4
	276 Call 0x1C17D6C
	277 Move X22, X0
	278 Compare X0, 0
	279 JumpIfEqual {728}
	280 Compare X21, 0
	281 JumpIfEqual {288}
	282 Move X8, [X22]
	283 Move X1, [X8+64]
	284 Move X0, X21
	285 Call 0x1C17E00
	286 Compare X0, 0
	287 JumpIfEqual {768}
	288 Move W8, [X22+24]
	289 Compare W8, 0
	290 JumpIfEqual {730}
	291 Move [X22+32], X21
	292 Move X21, 0xCFD000
	293 Move X21, [X21+504]
	294 Move X0, [X21]
	295 Compare X0, 0
	296 JumpIfEqual {303}
	297 Move X8, [X22]
	298 Move X1, [X8+64]
	299 Call 0x1C17E00
	300 Compare X0, 0
	301 JumpIfEqual {771}
	302 Move W8, [X22+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X8, [X21]
	305 Move X9, 0xCC2000
	306 Move [X22+40], X8
	307 Move X8, [X19+48]
	308 Move X9, [X9+1144]
	309 Move [X31+16], X8
	310 Move X0, [X9]
	311 Add X1, X31, 16
	312 Call 0x1C17E04
	313 Move X21, X0
	314 Compare X0, 0
	315 JumpIfEqual {322}
	316 Move X8, [X22]
	317 Move X1, [X8+64]
	318 Move X0, X21
	319 Call 0x1C17E00
	320 Compare X0, 0
	321 JumpIfEqual {774}
	322 Move W8, [X22+24]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move [X22+48], X21
	325 Move X21, 0xCCA000
	326 Move X21, [X21+1824]
	327 Move X0, [X21]
	328 Compare X0, 0
	329 JumpIfEqual {336}
	330 Move X8, [X22]
	331 Move X1, [X8+64]
	332 Call 0x1C17E00
	333 Compare X0, 0
	334 JumpIfEqual {777}
	335 Move W8, [X22+24]
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Move X8, [X21]
	338 Move [X22+56], X8
	339 Move X0, X22
	340 Move X1, X31
	341 Call String.Concat, X0
	342 Move X21, X0
	343 Move W8, [X19+56]
	344 Compare W8, 0
	345 JumpIfEqual {417}
	346 Move X8, 0xCC1000
	347 Move X8, [X8+2512]
	348 Move X0, [X8]
	349 Move W1, 4
	350 Call 0x1C17D6C
	351 Move X22, X0
	352 Compare X0, 0
	353 JumpIfEqual {733}
	354 Compare X21, 0
	355 JumpIfEqual {362}
	356 Move X8, [X22]
	357 Move X1, [X8+64]
	358 Move X0, X21
	359 Call 0x1C17E00
	360 Compare X0, 0
	361 JumpIfEqual {780}
	362 Move W8, [X22+24]
	363 Compare W8, 0
	364 JumpIfEqual {735}
	365 Move [X22+32], X21
	366 Move X21, 0xCFD000
	367 Move X21, [X21+536]
	368 Move X0, [X21]
	369 Compare X0, 0
	370 JumpIfEqual {377}
	371 Move X8, [X22]
	372 Move X1, [X8+64]
	373 Call 0x1C17E00
	374 Compare X0, 0
	375 JumpIfEqual {783}
	376 Move W8, [X22+24]
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X8, [X21]
	379 Move X9, 0xCC2000
	380 Move [X22+40], X8
	381 Move X8, [X19+56]
	382 Move X9, [X9+1144]
	383 Move [X31+16], X8
	384 Move X0, [X9]
	385 Add X1, X31, 16
	386 Call 0x1C17E04
	387 Move X21, X0
	388 Compare X0, 0
	389 JumpIfEqual {396}
	390 Move X8, [X22]
	391 Move X1, [X8+64]
	392 Move X0, X21
	393 Call 0x1C17E00
	394 Compare X0, 0
	395 JumpIfEqual {786}
	396 Move W8, [X22+24]
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Move [X22+48], X21
	399 Move X21, 0xCCA000
	400 Move X21, [X21+1824]
	401 Move X0, [X21]
	402 Compare X0, 0
	403 JumpIfEqual {410}
	404 Move X8, [X22]
	405 Move X1, [X8+64]
	406 Call 0x1C17E00
	407 Compare X0, 0
	408 JumpIfEqual {789}
	409 Move W8, [X22+24]
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Move X8, [X21]
	412 Move [X22+56], X8
	413 Move X0, X22
	414 Move X1, X31
	415 Call String.Concat, X0
	416 Move X21, X0
	417 Move W8, [X19+64]
	418 Compare W8, 0
	419 JumpIfEqual {491}
	420 Move X8, 0xCC1000
	421 Move X8, [X8+2512]
	422 Move X0, [X8]
	423 Move W1, 4
	424 Call 0x1C17D6C
	425 Move X22, X0
	426 Compare X0, 0
	427 JumpIfEqual {738}
	428 Compare X21, 0
	429 JumpIfEqual {436}
	430 Move X8, [X22]
	431 Move X1, [X8+64]
	432 Move X0, X21
	433 Call 0x1C17E00
	434 Compare X0, 0
	435 JumpIfEqual {792}
	436 Move W8, [X22+24]
	437 Compare W8, 0
	438 JumpIfEqual {740}
	439 Move [X22+32], X21
	440 Move X21, 0xCFC000
	441 Move X21, [X21+3864]
	442 Move X0, [X21]
	443 Compare X0, 0
	444 JumpIfEqual {451}
	445 Move X8, [X22]
	446 Move X1, [X8+64]
	447 Call 0x1C17E00
	448 Compare X0, 0
	449 JumpIfEqual {795}
	450 Move W8, [X22+24]
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move X8, [X21]
	453 Move X9, 0xCC2000
	454 Move [X22+40], X8
	455 Move X8, [X19+64]
	456 Move X9, [X9+1144]
	457 Move [X31+16], X8
	458 Move X0, [X9]
	459 Add X1, X31, 16
	460 Call 0x1C17E04
	461 Move X21, X0
	462 Compare X0, 0
	463 JumpIfEqual {470}
	464 Move X8, [X22]
	465 Move X1, [X8+64]
	466 Move X0, X21
	467 Call 0x1C17E00
	468 Compare X0, 0
	469 JumpIfEqual {798}
	470 Move W8, [X22+24]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move [X22+48], X21
	473 Move X21, 0xCCA000
	474 Move X21, [X21+1824]
	475 Move X0, [X21]
	476 Compare X0, 0
	477 JumpIfEqual {484}
	478 Move X8, [X22]
	479 Move X1, [X8+64]
	480 Call 0x1C17E00
	481 Compare X0, 0
	482 JumpIfEqual {801}
	483 Move W8, [X22+24]
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move X8, [X21]
	486 Move [X22+56], X8
	487 Move X0, X22
	488 Move X1, X31
	489 Call String.Concat, X0
	490 Move X21, X0
	491 Move X22, [X19+72]
	492 Compare X22, 0
	493 JumpIfEqual {515}
	494 Move X8, 0xCC3000
	495 Move X8, [X8+2600]
	496 Move X0, [X8]
	497 Move W8, [X0+224]
	498 Compare W8, 0
	499 JumpIfNotEqual {501}
	500 Call 0x1C17DFC
	501 Move X0, X22
	502 Move X1, X31
	503 Call Uri.EscapeDataString, X0
	504 Move X8, 0xCFC000
	505 Move X8, [X8+3872]
	506 Move X9, 0xCCA000
	507 Move X9, [X9+1824]
	508 Move X2, X0
	509 Move X1, [X8]
	510 Move X3, [X9]
	511 Move X0, X21
	512 Move X4, X31
	513 Call String.Concat, X0, X1, X2, X3
	514 Move X21, X0
	515 Compare X24, 0
	516 JumpIfEqual {710}
	517 Move X0, [X24+32]
	518 Compare X0, 0
	519 JumpIfEqual {711}
	520 Move X1, X31
	521 Call Uri.get_AbsolutePath, X0
	522 Move X8, 0xCCA000
	523 Move X8, [X8+2264]
	524 Move X22, X0
	525 Move X0, [X8]
	526 Move W1, 1
	527 Call 0x1C17D6C
	528 Move X1, X0
	529 Compare X1, 0
	530 JumpIfEqual {712}
	531 Move W8, [X1+24]
	532 Compare W8, 0
	533 JumpIfEqual {713}
	534 Move W8, 47
	535 NotImplemented "Instruction STRH not yet implemented."
	536 Compare X22, 0
	537 JumpIfEqual {714}
	538 Move X0, X22
	539 Move X2, X31
	540 Call String.TrimEnd, X0, X1
	541 Move X1, X20
	542 Move X2, X31
	543 Call String.Concat, X0, X1
	544 Move X8, 0xCCA000
	545 Move X8, [X8+928]
	546 Move X22, X0
	547 Move X23, [X24+32]
	548 Move X0, [X8]
	549 Call 0x1C17F10
	550 Move X20, X0
	551 Move X1, X23
	552 Move X2, X31
	553 Call UriBuilder..ctor, X0, X1
	554 Compare X20, 0
	555 JumpIfEqual {715}
	556 Move X0, X20
	557 Move X1, X22
	558 Move X2, X31
	559 Call UriBuilder.set_Path, X0, X1
	560 Move X0, X20
	561 Move X1, X21
	562 Move X2, X31
	563 Call UriBuilder.set_Query, X0, X1
	564 Move X0, X20
	565 Move X1, X31
	566 Call UriBuilder.get_Uri, X0
	567 Move X8, 0xCEA000
	568 Move X9, 0xCC2000
	569 Move X8, [X8+1232]
	570 Move X9, [X9+1744]
	571 Move X20, X0
	572 Move X21, [X8]
	573 Move X0, [X9]
	574 Call 0x1C17F10
	575 Move X8, 0xCC2000
	576 Move X8, [X8+1728]
	577 Move X22, X0
	578 Move X1, [X8]
	579 Call Dictionary`2<Object, Object>..ctor, X0
	580 Move X8, 0xCFC000
	581 Move X8, [X8+2008]
	582 Move X1, [X19+88]
	583 Move X0, [X8]
	584 Move X2, X31
	585 Call String.Concat, X0, X1
	586 Compare X22, 0
	587 JumpIfEqual {716}
	588 Move X8, 0xCFC000
	589 Move X8, [X8+2000]
	590 Move X9, 0xCC2000
	591 Move X9, [X9+2064]
	592 Move X2, X0
	593 Move X1, [X8]
	594 Move X3, [X9]
	595 Move X0, X22
	596 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	597 Move X23, [X24+16]
	598 Compare X23, 0
	599 JumpIfEqual {717}
	600 Move X10, 0xCFC000
	601 Move X10, [X10+1976]
	602 Move X8, [X23]
	603 Move W25, [X24+24]
	604 Move X26, [X19+96]
	605 Move X24, [X19+104]
	606 Move X1, [X10]
	607 NotImplemented "Instruction LDRH not yet implemented."
	608 Compare X9, 0
	609 JumpIfEqual {616}
	610 Move X10, [X8+176]
	611 Add X10, X10, 8
	612 NotImplemented "Instruction LDUR not yet implemented."
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Subtract X9, X9, 1
	615 Add X10, X10, 16
	616 Move W2, 3
	617 Move X0, X23
	618 Call 0x1C5D788
	619 Move X8, [X19+112]
	620 Move TEMP, 0
	621 Not TEMP
	622 Move W9, TEMP
	623 Move [X31+24], X8
	624 Move [X19+112], X31
	625 Move [X19], W9
	626 Move W9, [X10]
	627 Add W9, W9, 3
	628 Add X8, X8, W9
	629 Add X0, X8, 312
	630 Move X8, [X0]
	631 Move X9, [X0+8]
	632 Move X0, X23
	633 Move X1, X21
	634 Move X2, X20
	635 Move X3, X22
	636 Move X4, X31
	637 Move W5, W25
	638 Move X6, X26
	639 Move X7, X24
	640 Move [X31], X9
	641 NotImplemented "Instruction BLR not yet implemented."
	642 Compare X0, 0
	643 JumpIfEqual {718}
	644 Move X8, 0xCC4000
	645 Move X8, [X8+504]
	646 Move X1, [X8]
	647 Call Task`1<Object>.GetAwaiter, X0
	648 Move X8, 0xCC4000
	649 Move X8, [X8+496]
	650 Move [X31+24], X0
	651 Move X1, [X8]
	652 Add X0, X31, 24
	653 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	654 Move TEMP, X0
	655 And TEMP, TEMP, 1
	656 Compare TEMP, 1
	657 JumpIfNotEqual {683}
	658 Move X8, 0xCC4000
	659 Move X8, [X8+480]
	660 Add X0, X31, 24
	661 Move X1, [X8]
	662 Call TaskAwaiter`1<Object>.GetResult, X0
	663 Move X8, 0xCFD000
	664 Move X8, [X8+496]
	665 Move X1, [X8]
	666 Call JsonParser.FromJson, X0
	667 Move TEMP, 1
	668 Not TEMP
	669 Move W8, TEMP
	670 Move [X19+8], W8
	671 Move X20, X0
	672 Move X0, [X27]
	673 Move X21, 0xCFD000
	674 Move W8, [X0+224]
	675 Move X21, [X21+488]
	676 Compare W8, 0
	677 JumpIfNotEqual {679}
	678 Call 0x1C17DFC
	679 Move X2, [X21]
	680 Move X0, X19
	681 Move X1, X20
	682 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	683 Move [X19], W31
	684 Move X8, [X31+24]
	685 Move [X19+112], X8
	686 Move X0, [X27]
	687 Move W8, [X0+224]
	688 Compare W8, 0
	689 JumpIfNotEqual {691}
	690 Call 0x1C17DFC
	691 Move X8, 0xCFD000
	692 Move X8, [X8+480]
	693 Add X0, X19, 8
	694 Move X3, [X8]
	695 Add X1, X31, 24
	696 Move X2, X19
	697 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	698 Move X20, [X31+96]
	699 Move X19, [X31+104]
	700 Move X22, [X31+80]
	701 Move X21, [X31+88]
	702 Move X24, [X31+64]
	703 Move X23, [X31+72]
	704 Move X26, [X31+48]
	705 Move X25, [X31+56]
	706 Move X30, [X31+32]
	707 Move X27, [X31+40]
	708 Add X31, X31, 112
	709 Return 
	710 Call 0x1C17F20
	711 Call 0x1C17F20
	712 Call 0x1C17F20
	713 Call 0x1C17F28
	714 Call 0x1C17F20
	715 Call 0x1C17F20
	716 Call 0x1C17F20
	717 Call 0x1C17F20
	718 Call 0x1C17F20
	719 Call 0x1C17F20
	720 Call 0x1C17F28
	721 Call 0x1C17F28
	722 Call 0x1C17F28
	723 Call 0x1C17F20
	724 Call 0x1C17F28
	725 Call 0x1C17F28
	726 Call 0x1C17F28
	727 Call 0x1C17F28
	728 Call 0x1C17F20
	729 Call 0x1C17F28
	730 Call 0x1C17F28
	731 Call 0x1C17F28
	732 Call 0x1C17F28
	733 Call 0x1C17F20
	734 Call 0x1C17F28
	735 Call 0x1C17F28
	736 Call 0x1C17F28
	737 Call 0x1C17F28
	738 Call 0x1C17F20
	739 Call 0x1C17F28
	740 Call 0x1C17F28
	741 Call 0x1C17F28
	742 Call 0x1C17F28
	743 Call 0x1C17F28
	744 Call 0x1C17F44
	745 Move X1, X31
	746 Call 0x1C17DEC
	747 Call 0x1C17F44
	748 Move X1, X31
	749 Call 0x1C17DEC
	750 Call 0x1C17F44
	751 Move X1, X31
	752 Call 0x1C17DEC
	753 Call 0x1C17F44
	754 Move X1, X31
	755 Call 0x1C17DEC
	756 Call 0x1C17F44
	757 Move X1, X31
	758 Call 0x1C17DEC
	759 Call 0x1C17F44
	760 Move X1, X31
	761 Call 0x1C17DEC
	762 Call 0x1C17F44
	763 Move X1, X31
	764 Call 0x1C17DEC
	765 Call 0x1C17F44
	766 Move X1, X31
	767 Call 0x1C17DEC
	768 Call 0x1C17F44
	769 Move X1, X31
	770 Call 0x1C17DEC
	771 Call 0x1C17F44
	772 Move X1, X31
	773 Call 0x1C17DEC
	774 Call 0x1C17F44
	775 Move X1, X31
	776 Call 0x1C17DEC
	777 Call 0x1C17F44
	778 Move X1, X31
	779 Call 0x1C17DEC
	780 Call 0x1C17F44
	781 Move X1, X31
	782 Call 0x1C17DEC
	783 Call 0x1C17F44
	784 Move X1, X31
	785 Call 0x1C17DEC
	786 Call 0x1C17F44
	787 Move X1, X31
	788 Call 0x1C17DEC
	789 Call 0x1C17F44
	790 Move X1, X31
	791 Call 0x1C17DEC
	792 Call 0x1C17F44
	793 Move X1, X31
	794 Call 0x1C17DEC
	795 Call 0x1C17F44
	796 Move X1, X31
	797 Call 0x1C17DEC
	798 Call 0x1C17F44
	799 Move X1, X31
	800 Call 0x1C17DEC
	801 Call 0x1C17F44
	802 Move X1, X31
	803 Call 0x1C17DEC
	804 Move X20, X0
	805 NotImplemented "Instruction CMP not yet implemented."
	806 Move X0, X20
	807 Call 0x3EB2AD0
	808 Move X20, X0
	809 Move X0, 0xCC0000
	810 Move X0, [X0+2000]
	811 Call 0x1C17D08
	812 Move X8, [X20]
	813 Move X1, [X8]
	814 Call 0x1C18270
	815 Move TEMP, X0
	816 And TEMP, TEMP, 1
	817 Compare TEMP, 1
	818 JumpIfNotEqual {839}
	819 Move X20, [X20]
	820 Call 0x3EB2AE0
	821 Move TEMP, 1
	822 Not TEMP
	823 Move W8, TEMP
	824 Move [X19+8], W8
	825 Move X0, 0xCFB000
	826 Move X0, [X0+1800]
	827 Call 0x1C17D08
	828 Move W8, [X0+224]
	829 Compare W8, 0
	830 JumpIfNotEqual {832}
	831 Call 0x1C17DFC
	832 Move X0, 0xCFC000
	833 Move X0, [X0+544]
	834 Call 0x1C17D08
	835 Move X2, X0
	836 Move X0, X19
	837 Move X1, X20
	838 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	839 Move W0, 8
	840 Call 0x3EB2AF0
	841 Move X8, [X20]
	842 Move [X0], X8
	843 Move X1, 0xA81000
	844 Add X1, X1, 3672
	845 Move X2, X31
	846 Call 0x3EB2B00
	847 Move X20, X0
	848 Call 0x3EB2AE0
	849 Move X0, X20
	850 Call 0x1D2D690
	851 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034341D8 ADD X8, X8, W9, 0x4, SXTW
	0x034341DC ADD X0, X8, 0x138
	0x034341E0 LDP X8, X9, [X0]
	0x034341E4 MOV X0, X24
	0x034341E8 MOV X1, X21
	0x034341EC MOV X2, X20
	0x034341F0 MOV X3, X22
	0x034341F4 MOV X4, X31
	0x034341F8 MOV W5, W23
	0x034341FC MOV X6, X26
	0x03434200 MOV X7, X25
	0x03434204 STR X9, [X31]
	0x03434208 BLR X8
	0x0343420C CBZ X0, 0x3434348
	0x03434210 ADRP X8, 0xCC2000
	0x03434214 LDR X8, [X8 + 0x1F8]
	0x03434218 LDR X1, [X8]
	0x0343421C BL 0x269F5D0
	0x03434220 ADRP X8, 0xCC2000
	0x03434224 LDR X8, [X8 + 0x1F0]
	0x03434228 STR X0, [X31 + 0x18]
	0x0343422C LDR X1, [X8]
	0x03434230 ADD X0, X31, 0x18
	0x03434234 BL 0x2677430
	0x03434238 TBZ X0, 0x0, 0x3434278
	0x0343423C ADRP X8, 0xCC2000
	0x03434240 LDR X8, [X8 + 0x1E0]
	0x03434244 ADD X0, X31, 0x18
	0x03434248 LDR X1, [X8]
	0x0343424C BL 0x2677474
	0x03434250 MOVN W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFAA000
	007 Move X21, 0xCFB000
	008 Move W8, [X22+1638]
	009 Move X21, [X21+1800]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCFC000
	017 Move X0, [X0+552]
	018 Call 0x1C17CF4
	019 Move X0, 0xCFB000
	020 Move X0, [X0+1800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1638], W8
	024 Move X0, [X21]
	025 Move X21, 0xCFC000
	026 Move W8, [X0+224]
	027 Move X21, [X21+552]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

