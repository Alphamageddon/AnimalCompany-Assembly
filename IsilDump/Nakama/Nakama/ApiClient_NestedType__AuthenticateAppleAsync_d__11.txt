Type: Nakama.ApiClient/<AuthenticateAppleAsync>d__11

Method: System.Void MoveNext()

Disassembly:
	0x0341584C LDRB W8, [X20 + 0x5C9]
	0x03415850 MOV X19, X0
	0x03415854 TBNZ X8, 0x0, 0x3415998
	0x03415858 ADRP X0, 0xD19000
	0x0341585C LDR X0, [X0 + 0x890]
	0x03415860 BL 0x1C16CF4
	0x03415864 ADRP X0, 0xD19000
	0x03415868 LDR X0, [X0 + 0x820]
	0x0341586C BL 0x1C16CF4
	0x03415870 ADRP X0, 0xD19000
	0x03415874 LDR X0, [X0 + 0x320]
	0x03415878 BL 0x1C16CF4
	0x0341587C ADRP X0, 0xCE7000
	0x03415880 LDR X0, [X0 + 0x8D8]
	0x03415884 BL 0x1C16CF4
	0x03415888 ADRP X0, 0xCE7000
	0x0341588C LDR X0, [X0 + 0x9E8]
	0x03415890 BL 0x1C16CF4
	0x03415894 ADRP X0, 0xCDF000
	0x03415898 LDR X0, [X0 + 0x810]
	0x0341589C BL 0x1C16CF4
	0x034158A0 ADRP X0, 0xCDF000
	0x034158A4 LDR X0, [X0 + 0x6C0]
	0x034158A8 BL 0x1C16CF4
	0x034158AC ADRP X0, 0xCDF000
	0x034158B0 LDR X0, [X0 + 0x6D0]
	0x034158B4 BL 0x1C16CF4
	0x034158B8 ADRP X0, 0xD19000
	0x034158BC LDR X0, [X0 + 0x7B8]
	0x034158C0 BL 0x1C16CF4
	0x034158C4 ADRP X0, 0xD19000
	0x034158C8 LDR X0, [X0 + 0x828]
	0x034158CC BL 0x1C16CF4
	0x034158D0 ADRP X0, 0xD19000
	0x034158D4 LDR X0, [X0 + 0x830]
	0x034158D8 BL 0x1C16CF4
	0x034158DC ADRP X0, 0xCE2000
	0x034158E0 LDR X0, [X0 + 0xBF0]
	0x034158E4 BL 0x1C16CF4
	0x034158E8 ADRP X0, 0xCE1000
	0x034158EC LDR X0, [X0 + 0x1E0]
	0x034158F0 BL 0x1C16CF4
	0x034158F4 ADRP X0, 0xCE1000
	0x034158F8 LDR X0, [X0 + 0x1F0]
	0x034158FC BL 0x1C16CF4
	0x03415900 ADRP X0, 0xCE1000
	0x03415904 LDR X0, [X0 + 0x1F8]
	0x03415908 BL 0x1C16CF4
	0x0341590C ADRP X0, 0xCE7000
	0x03415910 LDR X0, [X0 + 0x3A0]
	0x03415914 BL 0x1C16CF4
	0x03415918 ADRP X0, 0xCE0000
	0x0341591C LDR X0, [X0 + 0xA28]
	0x03415920 BL 0x1C16CF4
	0x03415924 ADRP X0, 0xD19000
	0x03415928 LDR X0, [X0 + 0x840]
	0x0341592C BL 0x1C16CF4
	0x03415930 ADRP X0, 0xD07000
	0x03415934 LDR X0, [X0 + 0x4D8]
	0x03415938 BL 0x1C16CF4
	0x0341593C ADRP X0, 0xD19000
	0x03415940 LDR X0, [X0 + 0x848]
	0x03415944 BL 0x1C16CF4
	0x03415948 ADRP X0, 0xCE7000
	0x0341594C LDR X0, [X0 + 0x988]
	0x03415950 BL 0x1C16CF4
	0x03415954 ADRP X0, 0xCE7000
	0x03415958 LDR X0, [X0 + 0x720]
	0x0341595C BL 0x1C16CF4
	0x03415960 ADRP X0, 0xD19000
	0x03415964 LDR X0, [X0 + 0x7D0]
	0x03415968 BL 0x1C16CF4
	0x0341596C ADRP X0, 0xD19000
	0x03415970 LDR X0, [X0 + 0x850]
	0x03415974 BL 0x1C16CF4
	0x03415978 ADRP X0, 0xD19000
	0x0341597C LDR X0, [X0 + 0x898]
	0x03415980 BL 0x1C16CF4
	0x03415984 ADRP X0, 0xCDE000
	0x03415988 LDR X0, [X0 + 0x988]
	0x0341598C BL 0x1C16CF4
	0x03415990 MOVZ W8, 0x1
	0x03415994 STRB W8, [X20 + 0x5C9]
	0x03415998 STR X31, [X31 + 0x18]
	0x0341599C ADRP X28, 0xD19000
	0x034159A0 LDR W8, [X19]
	0x034159A4 LDR X28, [X28 + 0x320]
	0x034159A8 CBZ W8, 0x3415CAC
	0x034159AC LDR X8, [X19 + 0x20]
	0x034159B0 CBZ X8, 0x3415DE4
	0x034159B4 ADRP X8, 0xD19000
	0x034159B8 ADRP X9, 0xCDE000
	0x034159BC LDR X8, [X8 + 0x898]
	0x034159C0 LDR X9, [X9 + 0x988]
	0x034159C4 MOV X0, X19
	0x034159C8 LDR X25, [X19 + 0x38]
	0x034159CC LDR X21, [X8]
	0x034159D0 LDR X20, [X9]
	0x034159D4 LDRB W8, [X0 + 0x28]!
	0x034159D8 CBZ W8, 0x3415A24
	0x034159DC ADRP X8, 0xD19000
	0x034159E0 LDR X8, [X8 + 0x830]
	0x034159E4 LDR X1, [X8]
	0x034159E8 BL 0x242D714
	0x034159EC CBZ X0, 0x3415E50
	0x034159F0 MOV X1, X31
	0x034159F4 BL 0x322B5E4
	0x034159F8 ADRP X8, 0xD19000
	0x034159FC LDR X8, [X8 + 0x840]
	0x03415A00 ADRP X9, 0xCE7000
	0x03415A04 LDR X9, [X9 + 0x720]
	0x03415A08 MOV X2, X0
	0x03415A0C LDR X1, [X8]
	0x03415A10 LDR X3, [X9]
	0x03415A14 MOV X0, X20
	0x03415A18 MOV X4, X31
	0x03415A1C BL 0x32277C4
	0x03415A20 MOV X20, X0
	0x03415A24 LDR X22, [X19 + 0x30]
	0x03415A28 CBZ X22, 0x3415A7C
	0x03415A2C ADRP X8, 0xCE0000
	0x03415A30 LDR X8, [X8 + 0xA28]
	0x03415A34 LDR X0, [X8]
	0x03415A38 LDR W8, [X0 + 0xE0]
	0x03415A3C CBNZ W8, 0x3415A44
	0x03415A40 BL 0x1C16DFC
	0x03415A44 MOV X0, X22
	0x03415A48 MOV X1, X31
	0x03415A4C BL 0x3624D20
	0x03415A50 ADRP X8, 0xD19000
	0x03415A54 LDR X8, [X8 + 0x848]
	0x03415A58 ADRP X9, 0xCE7000
	0x03415A5C LDR X9, [X9 + 0x720]
	0x03415A60 MOV X2, X0
	0x03415A64 LDR X1, [X8]
	0x03415A68 LDR X3, [X9]
	0x03415A6C MOV X0, X20
	0x03415A70 MOV X4, X31
	0x03415A74 BL 0x32277C4
	0x03415A78 MOV X20, X0
	0x03415A7C CBZ X25, 0x3415E2C
	0x03415A80 LDR X0, [X25 + 0x20]
	0x03415A84 CBZ X0, 0x3415E30
	0x03415A88 MOV X1, X31
	0x03415A8C BL 0x361B448
	0x03415A90 ADRP X8, 0xCE7000
	0x03415A94 LDR X8, [X8 + 0x8D8]
	0x03415A98 MOV X22, X0
	0x03415A9C LDR X0, [X8]
	0x03415AA0 MOVZ W1, 0x1
	0x03415AA4 BL 0x1C16D6C
	0x03415AA8 MOV X1, X0
	0x03415AAC CBZ X1, 0x3415E34
	0x03415AB0 LDR W8, [X1 + 0x18]
	0x03415AB4 CBZ W8, 0x3415E38
	0x03415AB8 MOVZ W8, 0x2F
	0x03415ABC STRH W8, [X1 + 0x20]
	0x03415AC0 CBZ X22, 0x3415E3C
	0x03415AC4 MOV X0, X22
	0x03415AC8 MOV X2, X31
	0x03415ACC BL 0x322BC58
	0x03415AD0 MOV X1, X21
	0x03415AD4 MOV X2, X31
	0x03415AD8 BL 0x321B938
	0x03415ADC ADRP X8, 0xCE7000
	0x03415AE0 LDR X8, [X8 + 0x3A0]
	0x03415AE4 MOV X22, X0
	0x03415AE8 LDR X23, [X25 + 0x20]
	0x03415AEC LDR X0, [X8]
	0x03415AF0 BL 0x1C16F10
	0x03415AF4 MOV X21, X0
	0x03415AF8 MOV X1, X23
	0x03415AFC MOV X2, X31
	0x03415B00 BL 0x36281F8
	0x03415B04 CBZ X21, 0x3415E40
	0x03415B08 MOV X0, X21
	0x03415B0C MOV X1, X22
	0x03415B10 MOV X2, X31
	0x03415B14 BL 0x36288CC
	0x03415B18 MOV X0, X21
	0x03415B1C MOV X1, X20
	0x03415B20 MOV X2, X31
	0x03415B24 BL 0x3628980
	0x03415B28 MOV X0, X21
	0x03415B2C MOV X1, X31
	0x03415B30 BL 0x3628A38
	0x03415B34 ADRP X8, 0xD07000
	0x03415B38 ADRP X9, 0xCDF000
	0x03415B3C LDR X8, [X8 + 0x4D8]
	0x03415B40 LDR X9, [X9 + 0x6D0]
	0x03415B44 MOV X20, X0
	0x03415B48 LDR X21, [X8]
	0x03415B4C LDR X0, [X9]
	0x03415B50 BL 0x1C16F10
	0x03415B54 ADRP X8, 0xCDF000
	0x03415B58 LDR X8, [X8 + 0x6C0]
	0x03415B5C MOV X22, X0
	0x03415B60 LDR X1, [X8]
	0x03415B64 BL 0x2AA4804
	0x03415B68 LDR X0, [X19 + 0x40]
	0x03415B6C MOV X1, X31
	0x03415B70 BL 0x32277A8
	0x03415B74 TBNZ X0, 0x0, 0x3415C20
	0x03415B78 MOV X0, X31
	0x03415B7C BL 0x3241948
	0x03415B80 ADRP X8, 0xCE7000
	0x03415B84 MOV X23, X0
	0x03415B88 LDP X0, X2, [X19 + 0x40]
	0x03415B8C LDR X8, [X8 + 0x988]
	0x03415B90 LDR X1, [X8]
	0x03415B94 MOV X3, X31
	0x03415B98 BL 0x32274B8
	0x03415B9C MOV X1, X0
	0x03415BA0 CBZ X23, 0x3415E54
	0x03415BA4 LDR X8, [X23]
	0x03415BA8 LDR X9, [X8 + 0x268]
	0x03415BAC LDR X2, [X8 + 0x270]
	0x03415BB0 MOV X0, X23
	0x03415BB4 BLR X9
	0x03415BB8 ADRP X8, 0xCE7000
	0x03415BBC LDR X8, [X8 + 0x9E8]
	0x03415BC0 MOV X23, X0
	0x03415BC4 LDR X0, [X8]
	0x03415BC8 LDR W8, [X0 + 0xE0]
	0x03415BCC CBNZ W8, 0x3415BD4
	0x03415BD0 BL 0x1C16DFC
	0x03415BD4 MOV X0, X23
	0x03415BD8 MOV X1, X31
	0x03415BDC BL 0x33225A0
	0x03415BE0 MOV X1, X0
	0x03415BE4 ADRP X8, 0xD19000
	0x03415BE8 LDR X8, [X8 + 0x850]
	0x03415BEC LDR X0, [X8]
	0x03415BF0 MOV X2, X31
	0x03415BF4 BL 0x321B938
	0x03415BF8 CBZ X22, 0x3415E58
	0x03415BFC ADRP X8, 0xD19000
	0x03415C00 LDR X8, [X8 + 0x7D0]
	0x03415C04 ADRP X9, 0xCDF000
	0x03415C08 LDR X9, [X9 + 0x810]
	0x03415C0C MOV X2, X0
	0x03415C10 LDR X1, [X8]
	0x03415C14 LDR X3, [X9]
	0x03415C18 MOV X0, X22
	0x03415C1C BL 0x2AA5098
	0x03415C20 LDR X0, [X19 + 0x20]
	0x03415C24 MOV X1, X31
	0x03415C28 BL 0x3483BE4
	0x03415C2C MOV X23, X0
	0x03415C30 MOV X0, X31
	0x03415C34 BL 0x3241948
	0x03415C38 CBZ X0, 0x3415E44
	0x03415C3C LDR X8, [X0]
	0x03415C40 LDR X9, [X8 + 0x268]
	0x03415C44 LDR X2, [X8 + 0x270]
	0x03415C48 MOV X1, X23
	0x03415C4C BLR X9
	0x03415C50 LDR X24, [X25 + 0x10]
	0x03415C54 CBZ X24, 0x3415E48
	0x03415C58 ADRP X10, 0xD19000
	0x03415C5C LDR X10, [X10 + 0x7B8]
	0x03415C60 LDR X8, [X24]
	0x03415C64 LDR W26, [X25 + 0x18]
	0x03415C68 LDP X27, X25, [X19 + 0x50]
	0x03415C6C LDR X1, [X10]
	0x03415C70 LDRH W9, [X8 + 0x12E]
	0x03415C74 MOV X23, X0
	0x03415C78 CBZ X9, 0x3415C9C
	0x03415C7C LDR X10, [X8 + 0xB0]
	0x03415C80 ADD X10, X10, 0x8
	0x03415C84 LDUR X11, [X10 - 0x8]
	0x03415C88 CMP X11, X1
	0x03415C8C B.EQ 0x3415CC4
	0x03415C90 SUBS X9, X9, 0x1
	0x03415C94 ADD X10, X10, 0x10
	0x03415C98 B.NE 0x3415C84
	0x03415C9C MOVZ W2, 0x3
	0x03415CA0 MOV X0, X24
	0x03415CA4 BL 0x1C5C788
	0x03415CA8 B 0x3415CD4
	0x03415CAC LDR X8, [X19 + 0x60]
	0x03415CB0 MOVN W9, 0x0
	0x03415CB4 STR X8, [X31 + 0x18]
	0x03415CB8 STR X31, [X19 + 0x60]
	0x03415CBC STR W9, [X19]
	0x03415CC0 B 0x3415D30
	0x03415CC4 LDR W9, [X10]
	0x03415CC8 ADD W9, W9, 0x3
	0x03415CCC ADD X8, X8, W9, 0x4, SXTW
	0x03415CD0 ADD X0, X8, 0x138
	0x03415CD4 LDP X8, X9, [X0]
	0x03415CD8 MOV X0, X24
	0x03415CDC MOV X1, X21
	0x03415CE0 MOV X2, X20
	0x03415CE4 MOV X3, X22
	0x03415CE8 MOV X4, X23
	0x03415CEC MOV W5, W26
	0x03415CF0 MOV X6, X27
	0x03415CF4 MOV X7, X25
	0x03415CF8 STR X9, [X31]
	0x03415CFC BLR X8
	0x03415D00 CBZ X0, 0x3415E4C
	0x03415D04 ADRP X8, 0xCE1000
	0x03415D08 LDR X8, [X8 + 0x1F8]
	0x03415D0C LDR X1, [X8]
	0x03415D10 BL 0x269F5D0
	0x03415D14 ADRP X8, 0xCE1000
	0x03415D18 LDR X8, [X8 + 0x1F0]
	0x03415D1C STR X0, [X31 + 0x18]
	0x03415D20 LDR X1, [X8]
	0x03415D24 ADD X0, X31, 0x18
	0x03415D28 BL 0x2677430
	0x03415D2C TBZ X0, 0x0, 0x3415D8C
	0x03415D30 ADRP X8, 0xCE1000
	0x03415D34 LDR X8, [X8 + 0x1E0]
	0x03415D38 ADD X0, X31, 0x18
	0x03415D3C LDR X1, [X8]
	0x03415D40 BL 0x2677474
	0x03415D44 ADRP X8, 0xD19000
	0x03415D48 LDR X8, [X8 + 0x828]
	0x03415D4C LDR X1, [X8]
	0x03415D50 BL 0x220E6DC
	0x03415D54 MOVN W8, 0x1
	0x03415D58 STR W8, [X19], #0x8
	0x03415D5C MOV X20, X0
	0x03415D60 LDR X0, [X28]
	0x03415D64 ADRP X21, 0xD19000
	0x03415D68 LDR W8, [X0 + 0xE0]
	0x03415D6C LDR X21, [X21 + 0x820]
	0x03415D70 CBNZ W8, 0x3415D78
	0x03415D74 BL 0x1C16DFC
	0x03415D78 LDR X2, [X21]
	0x03415D7C MOV X0, X19
	0x03415D80 MOV X1, X20
	0x03415D84 BL 0x26322B0
	0x03415D88 B 0x3415DC4
	0x03415D8C STR W31, [X19]
	0x03415D90 LDR X8, [X31 + 0x18]
	0x03415D94 STR X8, [X19 + 0x60]
	0x03415D98 LDR X0, [X28]
	0x03415D9C LDR W8, [X0 + 0xE0]
	0x03415DA0 CBNZ W8, 0x3415DA8
	0x03415DA4 BL 0x1C16DFC
	0x03415DA8 ADRP X8, 0xD19000
	0x03415DAC LDR X8, [X8 + 0x890]
	0x03415DB0 ADD X0, X19, 0x8
	0x03415DB4 LDR X3, [X8]
	0x03415DB8 ADD X1, X31, 0x18
	0x03415DBC MOV X2, X19
	0x03415DC0 BL 0x1FB1C80
	0x03415DC4 LDP X20, X19, [X31 + 0x60]
	0x03415DC8 LDP X22, X21, [X31 + 0x50]
	0x03415DCC LDP X24, X23, [X31 + 0x40]
	0x03415DD0 LDP X26, X25, [X31 + 0x30]
	0x03415DD4 LDP X28, X27, [X31 + 0x20]
	0x03415DD8 LDR X30, [X31 + 0x10]
	0x03415DDC ADD X31, X31, 0x70
	0x03415DE0 RET
	0x03415DE4 ADRP X0, 0xCE6000
	0x03415DE8 LDR X0, [X0 + 0x578]
	0x03415DEC BL 0x1C16D08
	0x03415DF0 BL 0x1C16F10
	0x03415DF4 MOV X20, X0
	0x03415DF8 ADRP X0, 0xD19000
	0x03415DFC LDR X0, [X0 + 0x858]
	0x03415E00 BL 0x1C16D08
	0x03415E04 MOV X1, X0
	0x03415E08 MOV X0, X20
	0x03415E0C MOV X2, X31
	0x03415E10 BL 0x3314A68
	0x03415E14 ADRP X0, 0xD19000
	0x03415E18 LDR X0, [X0 + 0x8A0]
	0x03415E1C BL 0x1C16D08
	0x03415E20 MOV X1, X0
	0x03415E24 MOV X0, X20
	0x03415E28 BL 0x1C16DEC
	0x03415E2C BL 0x1C16F20
	0x03415E30 BL 0x1C16F20
	0x03415E34 BL 0x1C16F20
	0x03415E38 BL 0x1C16F28
	0x03415E3C BL 0x1C16F20
	0x03415E40 BL 0x1C16F20
	0x03415E44 BL 0x1C16F20
	0x03415E48 BL 0x1C16F20
	0x03415E4C BL 0x1C16F20
	0x03415E50 BL 0x1C16F20
	0x03415E54 BL 0x1C16F20
	0x03415E58 BL 0x1C16F20
	0x03415E5C B 0x3415EF0
	0x03415E60 B 0x3415EF0
	0x03415E64 B 0x3415EF0
	0x03415E68 B 0x3415EF0
	0x03415E6C B 0x3415EF0
	0x03415E70 B 0x3415EF0
	0x03415E74 B 0x3415EF0
	0x03415E78 B 0x3415EF0
	0x03415E7C B 0x3415EF0
	0x03415E80 B 0x3415EF0
	0x03415E84 B 0x3415EF0
	0x03415E88 B 0x3415EF0
	0x03415E8C B 0x3415EF0
	0x03415E90 B 0x3415EF0
	0x03415E94 B 0x3415EF0
	0x03415E98 B 0x3415EF0
	0x03415E9C B 0x3415EF0
	0x03415EA0 B 0x3415EF0
	0x03415EA4 B 0x3415EF0
	0x03415EA8 B 0x3415EF0
	0x03415EAC B 0x3415EF0
	0x03415EB0 B 0x3415EF0
	0x03415EB4 B 0x3415EF0
	0x03415EB8 B 0x3415EF0
	0x03415EBC B 0x3415EF0
	0x03415EC0 B 0x3415EF0
	0x03415EC4 B 0x3415EF0
	0x03415EC8 B 0x3415EF0
	0x03415ECC B 0x3415EF0
	0x03415ED0 B 0x3415EF0
	0x03415ED4 B 0x3415EF0
	0x03415ED8 B 0x3415EF0
	0x03415EDC B 0x3415EF0
	0x03415EE0 B 0x3415EF0
	0x03415EE4 B 0x3415EF0
	0x03415EE8 B 0x3415EF0
	0x03415EEC B 0x3415EF0
	0x03415EF0 MOV X20, X0
	0x03415EF4 CMP W1, 0x1
	0x03415EF8 B.NE 0x3415F94
	0x03415EFC MOV X0, X20
	0x03415F00 BL 0x3EB1AD0
	0x03415F04 MOV X20, X0
	0x03415F08 ADRP X0, 0xCDE000
	0x03415F0C LDR X0, [X0 + 0x7D0]
	0x03415F10 BL 0x1C16D08
	0x03415F14 LDR X8, [X20]
	0x03415F18 LDR X1, [X8]
	0x03415F1C BL 0x1C17270
	0x03415F20 TBZ X0, 0x0, 0x3415F6C
	0x03415F24 LDR X20, [X20]
	0x03415F28 BL 0x3EB1AE0
	0x03415F2C MOVN W8, 0x1
	0x03415F30 STR W8, [X19], #0x8
	0x03415F34 ADRP X0, 0xD19000
	0x03415F38 LDR X0, [X0 + 0x320]
	0x03415F3C BL 0x1C16D08
	0x03415F40 LDR W8, [X0 + 0xE0]
	0x03415F44 CBNZ W8, 0x3415F4C
	0x03415F48 BL 0x1C16DFC
	0x03415F4C ADRP X0, 0xD19000
	0x03415F50 LDR X0, [X0 + 0x868]
	0x03415F54 BL 0x1C16D08
	0x03415F58 MOV X2, X0
	0x03415F5C MOV X0, X19
	0x03415F60 MOV X1, X20
	0x03415F64 BL 0x26324C8
	0x03415F68 B 0x3415DC4
	0x03415F6C MOVZ W0, 0x8
	0x03415F70 BL 0x3EB1AF0
	0x03415F74 LDR X8, [X20]
	0x03415F78 STR X8, [X0]
	0x03415F7C ADRP X1, 0xA9F000
	0x03415F80 ADD X1, X1, 0xE58
	0x03415F84 MOV X2, X31
	0x03415F88 BL 0x3EB1B00
	0x03415F8C MOV X20, X0
	0x03415F90 BL 0x3EB1AE0
	0x03415F94 MOV X0, X20
	0x03415F98 BL 0x1D2C690
	0x03415F9C BL 0x1990590
	0x03415FA0 STR X30, [X31 - 0x30]!
	0x03415FA4 STP X22, X21, [X31 + 0x10]
	0x03415FA8 STP X20, X19, [X31 + 0x20]
	0x03415FAC ADRP X22, 0xFC8000
	0x03415FB0 ADRP X21, 0xD19000
	0x03415FB4 LDRB W8, [X22 + 0x5CA]
	0x03415FB8 LDR X21, [X21 + 0x320]
	0x03415FBC MOV X19, X1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFC9000
	014 Move W8, [X20+1477]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {100}
	020 Move X0, 0xD1A000
	021 Move X0, [X0+2072]
	022 Call 0x1C17CF4
	023 Move X0, 0xD1A000
	024 Move X0, [X0+2080]
	025 Call 0x1C17CF4
	026 Move X0, 0xD1A000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE8000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE8000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE0000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE0000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE0000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xD1A000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0xD1A000
	048 Move X0, [X0+2088]
	049 Call 0x1C17CF4
	050 Move X0, 0xD1A000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE3000
	054 Move X0, [X0+3056]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE2000
	057 Move X0, [X0+480]
	058 Call 0x1C17CF4
	059 Move X0, 0xCE2000
	060 Move X0, [X0+496]
	061 Call 0x1C17CF4
	062 Move X0, 0xCE2000
	063 Move X0, [X0+504]
	064 Call 0x1C17CF4
	065 Move X0, 0xCE8000
	066 Move X0, [X0+928]
	067 Call 0x1C17CF4
	068 Move X0, 0xCE1000
	069 Move X0, [X0+2600]
	070 Call 0x1C17CF4
	071 Move X0, 0xD1A000
	072 Move X0, [X0+2104]
	073 Call 0x1C17CF4
	074 Move X0, 0xD1A000
	075 Move X0, [X0+2112]
	076 Call 0x1C17CF4
	077 Move X0, 0xD08000
	078 Move X0, [X0+1240]
	079 Call 0x1C17CF4
	080 Move X0, 0xD1A000
	081 Move X0, [X0+2120]
	082 Call 0x1C17CF4
	083 Move X0, 0xCE8000
	084 Move X0, [X0+2440]
	085 Call 0x1C17CF4
	086 Move X0, 0xCE8000
	087 Move X0, [X0+1824]
	088 Call 0x1C17CF4
	089 Move X0, 0xD1A000
	090 Move X0, [X0+2000]
	091 Call 0x1C17CF4
	092 Move X0, 0xD1A000
	093 Move X0, [X0+2128]
	094 Call 0x1C17CF4
	095 Move X0, 0xCDF000
	096 Move X0, [X0+2440]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X20+1477], W8
	100 Move [X31+24], X31
	101 Move X28, 0xD1A000
	102 Move W8, [X19]
	103 Move X28, [X28+800]
	104 Compare W8, 0
	105 JumpIfEqual {318}
	106 Move X8, [X19+32]
	107 Compare X8, 0
	108 JumpIfEqual {410}
	109 Move X8, 0xD1A000
	110 Move X9, 0xCDF000
	111 Move X8, [X8+2104]
	112 Move X9, [X9+2440]
	113 Move X0, X19
	114 Move X25, [X19+56]
	115 Move X21, [X8]
	116 Move X20, [X9]
	117 Add X0, X0, 40
	118 Move W8, [X0]
	119 Compare W8, 0
	120 JumpIfEqual {140}
	121 Move X8, 0xD1A000
	122 Move X8, [X8+2096]
	123 Move X1, [X8]
	124 Call Nullable`1<Boolean>.ToString, X0
	125 Compare X0, 0
	126 JumpIfEqual {437}
	127 Move X1, X31
	128 Call String.ToLower, X0
	129 Move X8, 0xD1A000
	130 Move X8, [X8+2112]
	131 Move X9, 0xCE8000
	132 Move X9, [X9+1824]
	133 Move X2, X0
	134 Move X1, [X8]
	135 Move X3, [X9]
	136 Move X0, X20
	137 Move X4, X31
	138 Call String.Concat, X0, X1, X2, X3
	139 Move X20, X0
	140 Move X22, [X19+48]
	141 Compare X22, 0
	142 JumpIfEqual {164}
	143 Move X8, 0xCE1000
	144 Move X8, [X8+2600]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X22
	151 Move X1, X31
	152 Call Uri.EscapeDataString, X0
	153 Move X8, 0xD1A000
	154 Move X8, [X8+2120]
	155 Move X9, 0xCE8000
	156 Move X9, [X9+1824]
	157 Move X2, X0
	158 Move X1, [X8]
	159 Move X3, [X9]
	160 Move X0, X20
	161 Move X4, X31
	162 Call String.Concat, X0, X1, X2, X3
	163 Move X20, X0
	164 Compare X25, 0
	165 JumpIfEqual {428}
	166 Move X0, [X25+32]
	167 Compare X0, 0
	168 JumpIfEqual {429}
	169 Move X1, X31
	170 Call Uri.get_AbsolutePath, X0
	171 Move X8, 0xCE8000
	172 Move X8, [X8+2264]
	173 Move X22, X0
	174 Move X0, [X8]
	175 Move W1, 1
	176 Call 0x1C17D6C
	177 Move X1, X0
	178 Compare X1, 0
	179 JumpIfEqual {430}
	180 Move W8, [X1+24]
	181 Compare W8, 0
	182 JumpIfEqual {431}
	183 Move W8, 47
	184 NotImplemented "Instruction STRH not yet implemented."
	185 Compare X22, 0
	186 JumpIfEqual {432}
	187 Move X0, X22
	188 Move X2, X31
	189 Call String.TrimEnd, X0, X1
	190 Move X1, X21
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Move X8, 0xCE8000
	194 Move X8, [X8+928]
	195 Move X22, X0
	196 Move X23, [X25+32]
	197 Move X0, [X8]
	198 Call 0x1C17F10
	199 Move X21, X0
	200 Move X1, X23
	201 Move X2, X31
	202 Call UriBuilder..ctor, X0, X1
	203 Compare X21, 0
	204 JumpIfEqual {433}
	205 Move X0, X21
	206 Move X1, X22
	207 Move X2, X31
	208 Call UriBuilder.set_Path, X0, X1
	209 Move X0, X21
	210 Move X1, X20
	211 Move X2, X31
	212 Call UriBuilder.set_Query, X0, X1
	213 Move X0, X21
	214 Move X1, X31
	215 Call UriBuilder.get_Uri, X0
	216 Move X8, 0xD08000
	217 Move X9, 0xCE0000
	218 Move X8, [X8+1240]
	219 Move X9, [X9+1744]
	220 Move X20, X0
	221 Move X21, [X8]
	222 Move X0, [X9]
	223 Call 0x1C17F10
	224 Move X8, 0xCE0000
	225 Move X8, [X8+1728]
	226 Move X22, X0
	227 Move X1, [X8]
	228 Call Dictionary`2<Object, Object>..ctor, X0
	229 Move X0, [X19+64]
	230 Move X1, X31
	231 Call String.IsNullOrEmpty, X0
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {282}
	236 Move X0, X31
	237 Call Encoding.get_UTF8
	238 Move X8, 0xCE8000
	239 Move X23, X0
	240 Move X0, [X19+64]
	241 Move X2, [X19+72]
	242 Move X8, [X8+2440]
	243 Move X1, [X8]
	244 Move X3, X31
	245 Call String.Concat, X0, X1, X2
	246 Move X1, X0
	247 Compare X23, 0
	248 JumpIfEqual {438}
	249 Move X8, [X23]
	250 Move X9, [X8+616]
	251 Move X2, [X8+624]
	252 Move X0, X23
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Move X8, 0xCE8000
	255 Move X8, [X8+2536]
	256 Move X23, X0
	257 Move X0, [X8]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X0, X23
	263 Move X1, X31
	264 Call Convert.ToBase64String, X0
	265 Move X1, X0
	266 Move X8, 0xD1A000
	267 Move X8, [X8+2128]
	268 Move X0, [X8]
	269 Move X2, X31
	270 Call String.Concat, X0, X1
	271 Compare X22, 0
	272 JumpIfEqual {439}
	273 Move X8, 0xD1A000
	274 Move X8, [X8+2000]
	275 Move X9, 0xCE0000
	276 Move X9, [X9+2064]
	277 Move X2, X0
	278 Move X1, [X8]
	279 Move X3, [X9]
	280 Move X0, X22
	281 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	282 Move X0, [X19+32]
	283 Move X1, X31
	284 Call JsonWriter.ToJson, X0
	285 Move X23, X0
	286 Move X0, X31
	287 Call Encoding.get_UTF8
	288 Compare X0, 0
	289 JumpIfEqual {434}
	290 Move X8, [X0]
	291 Move X9, [X8+616]
	292 Move X2, [X8+624]
	293 Move X1, X23
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X24, [X25+16]
	296 Compare X24, 0
	297 JumpIfEqual {435}
	298 Move X10, 0xD1A000
	299 Move X10, [X10+1976]
	300 Move X8, [X24]
	301 Move W26, [X25+24]
	302 Move X27, [X19+80]
	303 Move X25, [X19+88]
	304 Move X1, [X10]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Move X23, X0
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move W2, 3
	316 Move X0, X24
	317 Call 0x1C5D788
	318 Move X8, [X19+96]
	319 Move TEMP, 0
	320 Not TEMP
	321 Move W9, TEMP
	322 Move [X31+24], X8
	323 Move [X19+96], X31
	324 Move [X19], W9
	325 Move W9, [X10]
	326 Add W9, W9, 3
	327 Add X8, X8, W9
	328 Add X0, X8, 312
	329 Move X8, [X0]
	330 Move X9, [X0+8]
	331 Move X0, X24
	332 Move X1, X21
	333 Move X2, X20
	334 Move X3, X22
	335 Move X4, X23
	336 Move W5, W26
	337 Move X6, X27
	338 Move X7, X25
	339 Move [X31], X9
	340 NotImplemented "Instruction BLR not yet implemented."
	341 Compare X0, 0
	342 JumpIfEqual {436}
	343 Move X8, 0xCE2000
	344 Move X8, [X8+504]
	345 Move X1, [X8]
	346 Call Task`1<Object>.GetAwaiter, X0
	347 Move X8, 0xCE2000
	348 Move X8, [X8+496]
	349 Move [X31+24], X0
	350 Move X1, [X8]
	351 Add X0, X31, 24
	352 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {382}
	357 Move X8, 0xCE2000
	358 Move X8, [X8+480]
	359 Add X0, X31, 24
	360 Move X1, [X8]
	361 Call TaskAwaiter`1<Object>.GetResult, X0
	362 Move X8, 0xD1A000
	363 Move X8, [X8+2088]
	364 Move X1, [X8]
	365 Call JsonParser.FromJson, X0
	366 Move TEMP, 1
	367 Not TEMP
	368 Move W8, TEMP
	369 Move [X19+8], W8
	370 Move X20, X0
	371 Move X0, [X28]
	372 Move X21, 0xD1A000
	373 Move W8, [X0+224]
	374 Move X21, [X21+2080]
	375 Compare W8, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1C17DFC
	378 Move X2, [X21]
	379 Move X0, X19
	380 Move X1, X20
	381 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	382 Move [X19], W31
	383 Move X8, [X31+24]
	384 Move [X19+96], X8
	385 Move X0, [X28]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Move X8, 0xD1A000
	391 Move X8, [X8+2072]
	392 Add X0, X19, 8
	393 Move X3, [X8]
	394 Add X1, X31, 24
	395 Move X2, X19
	396 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	397 Move X20, [X31+96]
	398 Move X19, [X31+104]
	399 Move X22, [X31+80]
	400 Move X21, [X31+88]
	401 Move X24, [X31+64]
	402 Move X23, [X31+72]
	403 Move X26, [X31+48]
	404 Move X25, [X31+56]
	405 Move X28, [X31+32]
	406 Move X27, [X31+40]
	407 Move X30, [X31+16]
	408 Add X31, X31, 112
	409 Return 
	410 Move X0, 0xCE7000
	411 Move X0, [X0+1400]
	412 Call 0x1C17D08
	413 Call 0x1C17F10
	414 Move X20, X0
	415 Move X0, 0xD1A000
	416 Move X0, [X0+2136]
	417 Call 0x1C17D08
	418 Move X1, X0
	419 Move X0, X20
	420 Move X2, X31
	421 Call ArgumentException..ctor, X0, X1
	422 Move X0, 0xD1A000
	423 Move X0, [X0+2144]
	424 Call 0x1C17D08
	425 Move X1, X0
	426 Move X0, X20
	427 Call 0x1C17DEC
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F20
	431 Call 0x1C17F28
	432 Call 0x1C17F20
	433 Call 0x1C17F20
	434 Call 0x1C17F20
	435 Call 0x1C17F20
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Move X20, X0
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X0, X20
	443 Call 0x3EB2AD0
	444 Move X20, X0
	445 Move X0, 0xCDF000
	446 Move X0, [X0+2000]
	447 Call 0x1C17D08
	448 Move X8, [X20]
	449 Move X1, [X8]
	450 Call 0x1C18270
	451 Move TEMP, X0
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfNotEqual {475}
	455 Move X20, [X20]
	456 Call 0x3EB2AE0
	457 Move TEMP, 1
	458 Not TEMP
	459 Move W8, TEMP
	460 Move [X19+8], W8
	461 Move X0, 0xD1A000
	462 Move X0, [X0+800]
	463 Call 0x1C17D08
	464 Move W8, [X0+224]
	465 Compare W8, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Move X0, 0xD1A000
	469 Move X0, [X0+2152]
	470 Call 0x1C17D08
	471 Move X2, X0
	472 Move X0, X19
	473 Move X1, X20
	474 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	475 Move W0, 8
	476 Call 0x3EB2AF0
	477 Move X8, [X20]
	478 Move [X0], X8
	479 Move X1, 0xAA0000
	480 Add X1, X1, 3672
	481 Move X2, X31
	482 Call 0x3EB2B00
	483 Move X20, X0
	484 Call 0x3EB2AE0
	485 Move X0, X20
	486 Call 0x1D2D690
	487 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03415FC0 MOV X20, X0
	0x03415FC4 TBNZ X8, 0x0, 0x3415FE8
	0x03415FC8 ADRP X0, 0xD19000
	0x03415FCC LDR X0, [X0 + 0x870]
	0x03415FD0 BL 0x1C16CF4
	0x03415FD4 ADRP X0, 0xD19000
	0x03415FD8 LDR X0, [X0 + 0x320]
	0x03415FDC BL 0x1C16CF4
	0x03415FE0 MOVZ W8, 0x1
	0x03415FE4 STRB W8, [X22 + 0x5CA]
	0x03415FE8 LDR X0, [X21]
	0x03415FEC ADRP X21, 0xD19000
	0x03415FF0 LDR W8, [X0 + 0xE0]
	0x03415FF4 LDR X21, [X21 + 0x870]
	0x03415FF8 CBNZ W8, 0x3416000
	0x03415FFC BL 0x1C16DFC
	0x03416000 LDR X2, [X21]
	0x03416004 ADD X0, X20, 0x8
	0x03416008 MOV X1, X19
	0x0341600C LDP X20, X19, [X31 + 0x20]
	0x03416010 LDP X22, X21, [X31 + 0x10]
	0x03416014 LDR X30, [X31], #0x30
	0x03416018 B 0x2632228
	0x0341601C SUB X31, X31, 0x70
	0x03416020 STR X30, [X31 + 0x10]
	0x03416024 STP X28, X27, [X31 + 0x20]
	0x03416028 STP X26, X25, [X31 + 0x30]
	0x0341602C STP X24, X23, [X31 + 0x40]
	0x03416030 STP X22, X21, [X31 + 0x50]
	0x03416034 STP X20, X19, [X31 + 0x60]
	0x03416038 ADRP X20, 0xFC7000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFC9000
	007 Move X21, 0xD1A000
	008 Move W8, [X22+1478]
	009 Move X21, [X21+800]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD1A000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0xD1A000
	020 Move X0, [X0+800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1478], W8
	024 Move X0, [X21]
	025 Move X21, 0xD19000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2160]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

