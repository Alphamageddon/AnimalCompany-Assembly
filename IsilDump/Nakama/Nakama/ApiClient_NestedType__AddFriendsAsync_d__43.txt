Type: Nakama.ApiClient/<AddFriendsAsync>d__43

Method: System.Void MoveNext()

Disassembly:
	0x03414300 CBNZ W20, 0x3414568
	0x03414304 CBZ X25, 0x34145E0
	0x03414308 LDR X0, [X25 + 0x20]
	0x0341430C CBZ X0, 0x34145E4
	0x03414310 MOV X1, X31
	0x03414314 BL 0x361B448
	0x03414318 ADRP X8, 0xCE8000
	0x0341431C LDR X8, [X8 + 0x8D8]
	0x03414320 MOV X22, X0
	0x03414324 LDR X0, [X8]
	0x03414328 MOVZ W1, 0x1
	0x0341432C BL 0x1C16D6C
	0x03414330 MOV X1, X0
	0x03414334 CBZ X1, 0x34145E8
	0x03414338 LDR W8, [X1 + 0x18]
	0x0341433C CBZ W8, 0x34145EC
	0x03414340 MOVZ W8, 0x2F
	0x03414344 STRH W8, [X1 + 0x20]
	0x03414348 CBZ X22, 0x34145F0
	0x0341434C MOV X0, X22
	0x03414350 MOV X2, X31
	0x03414354 BL 0x322BC58
	0x03414358 LDR X1, [X31 + 0x8]
	0x0341435C MOV X2, X31
	0x03414360 BL 0x321B938
	0x03414364 ADRP X8, 0xCE8000
	0x03414368 LDR X23, [X25 + 0x20]
	0x0341436C LDR X8, [X8 + 0x3A0]
	0x03414370 MOV X22, X0
	0x03414374 LDR X0, [X8]
	0x03414378 BL 0x1C16F10
	0x0341437C MOV X20, X0
	0x03414380 MOV X1, X23
	0x03414384 MOV X2, X31
	0x03414388 BL 0x36281F8
	0x0341438C CBZ X20, 0x34145F4
	0x03414390 MOV X0, X20
	0x03414394 MOV X1, X22
	0x03414398 MOV X2, X31
	0x0341439C BL 0x36288CC
	0x034143A0 MOV X0, X20
	0x034143A4 MOV X1, X21
	0x034143A8 MOV X2, X31
	0x034143AC BL 0x3628980
	0x034143B0 MOV X0, X20
	0x034143B4 MOV X1, X31
	0x034143B8 BL 0x3628A38
	0x034143BC ADRP X8, 0xD08000
	0x034143C0 ADRP X9, 0xCE0000
	0x034143C4 LDR X8, [X8 + 0x4D8]
	0x034143C8 LDR X9, [X9 + 0x6D0]
	0x034143CC MOV X20, X0
	0x034143D0 LDR X21, [X8]
	0x034143D4 LDR X0, [X9]
	0x034143D8 BL 0x1C16F10
	0x034143DC ADRP X8, 0xCE0000
	0x034143E0 LDR X8, [X8 + 0x6C0]
	0x034143E4 MOV X22, X0
	0x034143E8 LDR X1, [X8]
	0x034143EC BL 0x2AA4804
	0x034143F0 ADRP X8, 0xD1A000
	0x034143F4 LDR X1, [X19 + 0x38]
	0x034143F8 LDR X8, [X8 + 0x7D8]
	0x034143FC LDR X0, [X8]
	0x03414400 MOV X2, X31
	0x03414404 BL 0x321B938
	0x03414408 CBZ X22, 0x34145F8
	0x0341440C ADRP X8, 0xD1A000
	0x03414410 LDR X8, [X8 + 0x7D0]
	0x03414414 ADRP X9, 0xCE0000
	0x03414418 LDR X9, [X9 + 0x810]
	0x0341441C MOV X2, X0
	0x03414420 LDR X1, [X8]
	0x03414424 LDR X3, [X9]
	0x03414428 MOV X0, X22
	0x0341442C BL 0x2AA5098
	0x03414430 LDR X24, [X25 + 0x10]
	0x03414434 CBZ X24, 0x34145FC
	0x03414438 ADRP X10, 0xD1A000
	0x0341443C LDR W23, [X25 + 0x18]
	0x03414440 LDR X8, [X24]
	0x03414444 LDP X26, X25, [X19 + 0x40]
	0x03414448 LDR X10, [X10 + 0x7B8]
	0x0341444C LDRH W9, [X8 + 0x12E]
	0x03414450 LDR X1, [X10]
	0x03414454 CBZ X9, 0x3414478
	0x03414458 LDR X10, [X8 + 0xB0]
	0x0341445C ADD X10, X10, 0x8
	0x03414460 LDUR X11, [X10 - 0x8]
	0x03414464 CMP X11, X1
	0x03414468 B.EQ 0x3414488
	0x0341446C SUBS X9, X9, 0x1
	0x03414470 ADD X10, X10, 0x10
	0x03414474 B.NE 0x3414460
	0x03414478 MOVZ W2, 0x3
	0x0341447C MOV X0, X24
	0x03414480 BL 0x1C5C788
	0x03414484 B 0x3414498
	0x03414488 LDR W9, [X10]
	0x0341448C ADD W9, W9, 0x3
	0x03414490 ADD X8, X8, W9, 0x4, SXTW
	0x03414494 ADD X0, X8, 0x138
	0x03414498 LDP X8, X9, [X0]
	0x0341449C MOV X0, X24
	0x034144A0 MOV X1, X21
	0x034144A4 MOV X2, X20
	0x034144A8 MOV X3, X22
	0x034144AC MOV X4, X31
	0x034144B0 MOV W5, W23
	0x034144B4 MOV X6, X26
	0x034144B8 MOV X7, X25
	0x034144BC STR X9, [X31]
	0x034144C0 BLR X8
	0x034144C4 CBZ X0, 0x3414600
	0x034144C8 ADRP X8, 0xCE2000
	0x034144CC LDR X8, [X8 + 0x1F8]
	0x034144D0 LDR X1, [X8]
	0x034144D4 BL 0x269F5D0
	0x034144D8 ADRP X8, 0xCE2000
	0x034144DC LDR X8, [X8 + 0x1F0]
	0x034144E0 STR X0, [X31 + 0x18]
	0x034144E4 LDR X1, [X8]
	0x034144E8 ADD X0, X31, 0x18
	0x034144EC BL 0x2677430
	0x034144F0 TBZ X0, 0x0, 0x3414530
	0x034144F4 ADRP X8, 0xCE2000
	0x034144F8 LDR X8, [X8 + 0x1E0]
	0x034144FC ADD X0, X31, 0x18
	0x03414500 LDR X1, [X8]
	0x03414504 BL 0x2677474
	0x03414508 MOVN W8, 0x1
	0x0341450C STR W8, [X19], #0x8
	0x03414510 LDR X0, [X27]
	0x03414514 LDR W8, [X0 + 0xE0]
	0x03414518 CBNZ W8, 0x3414520
	0x0341451C BL 0x1C16DFC
	0x03414520 MOV X0, X19
	0x03414524 MOV X1, X31
	0x03414528 BL 0x32C4864
	0x0341452C B 0x3414568
	0x03414530 STR W31, [X19]
	0x03414534 LDR X8, [X31 + 0x18]
	0x03414538 STR X8, [X19 + 0x50]
	0x0341453C LDR X0, [X27]
	0x03414540 LDR W8, [X0 + 0xE0]
	0x03414544 CBNZ W8, 0x341454C
	0x03414548 BL 0x1C16DFC
	0x0341454C ADRP X8, 0xD1A000
	0x03414550 LDR X8, [X8 + 0x7E8]
	0x03414554 ADD X0, X19, 0x8
	0x03414558 LDR X3, [X8]
	0x0341455C ADD X1, X31, 0x18
	0x03414560 MOV X2, X19
	0x03414564 BL 0x2185E1C
	0x03414568 LDP X20, X19, [X31 + 0x70]
	0x0341456C LDP X22, X21, [X31 + 0x60]
	0x03414570 LDP X24, X23, [X31 + 0x50]
	0x03414574 LDP X26, X25, [X31 + 0x40]
	0x03414578 LDP X28, X27, [X31 + 0x30]
	0x0341457C LDP X29, X30, [X31 + 0x20]
	0x03414580 ADD X31, X31, 0x80
	0x03414584 RET
	0x03414588 BL 0x1C16F20
	0x0341458C ADRP X0, 0xCE7000
	0x03414590 LDR X0, [X0 + 0x578]
	0x03414594 BL 0x1C16D08
	0x03414598 BL 0x1C16F10
	0x0341459C MOV X20, X0
	0x034145A0 ADRP X0, 0xD1A000
	0x034145A4 LDR X0, [X0 + 0x808]
	0x034145A8 BL 0x1C16D08
	0x034145AC MOV X1, X0
	0x034145B0 MOV X0, X20
	0x034145B4 MOV X2, X31
	0x034145B8 BL 0x3314A68
	0x034145BC ADRP X0, 0xD1A000
	0x034145C0 LDR X0, [X0 + 0x810]
	0x034145C4 BL 0x1C16D08
	0x034145C8 MOV X1, X0
	0x034145CC MOV X0, X20
	0x034145D0 BL 0x1C16DEC
	0x034145D4 BL 0x1C16F20
	0x034145D8 MOV X0, X23
	0x034145DC BL 0x1C16F18
	0x034145E0 BL 0x1C16F20
	0x034145E4 BL 0x1C16F20
	0x034145E8 BL 0x1C16F20
	0x034145EC BL 0x1C16F28
	0x034145F0 BL 0x1C16F20
	0x034145F4 BL 0x1C16F20
	0x034145F8 BL 0x1C16F20
	0x034145FC BL 0x1C16F20
	0x03414600 BL 0x1C16F20
	0x03414604 BL 0x1C16F20
	0x03414608 B 0x3414674
	0x0341460C B 0x3414674
	0x03414610 B 0x3414674
	0x03414614 B 0x3414674
	0x03414618 B 0x3414674
	0x0341461C B 0x3414674
	0x03414620 B 0x3414674
	0x03414624 B 0x3414674
	0x03414628 B 0x3414674
	0x0341462C B 0x3414674
	0x03414630 B 0x3414674
	0x03414634 B 0x3414674
	0x03414638 B 0x3414674
	0x0341463C B 0x3414674
	0x03414640 B 0x3414674
	0x03414644 B 0x3414674
	0x03414648 B 0x3414674
	0x0341464C B 0x3414674
	0x03414650 B 0x3414674
	0x03414654 B 0x3414674
	0x03414658 B 0x3414674
	0x0341465C B 0x3414674
	0x03414660 B 0x3414674
	0x03414664 B 0x3414674
	0x03414668 B 0x3414674
	0x0341466C B 0x3414674
	0x03414670 B 0x3414674
	0x03414674 MOV X20, X1
	0x03414678 MOV X21, X0
	0x0341467C B 0x341472C
	0x03414680 B 0x3414698
	0x03414684 B 0x3414698
	0x03414688 B 0x3414698
	0x0341468C MOV X21, X28
	0x03414690 B 0x3414698
	0x03414694 B 0x3414698
	0x03414698 CMP W1, 0x1
	0x0341469C B.NE 0x34146B4
	0x034146A0 BL 0x3EB1AD0
	0x034146A4 LDR X23, [X0]
	0x034146A8 BL 0x3EB1AE0
	0x034146AC MOV W20, W31
	0x034146B0 B 0x3414280
	0x034146B4 MOV X21, X0
	0x034146B8 MOV X20, X1
	0x034146BC MOV X23, X31
	0x034146C0 TBZ X24, 0x1F, 0x3414728
	0x034146C4 CBZ X22, 0x3414728
	0x034146C8 ADRP X10, 0xCDF000
	0x034146CC LDR X8, [X22]
	0x034146D0 LDR X10, [X10 + 0xE00]
	0x034146D4 LDRH W9, [X8 + 0x12E]
	0x034146D8 LDR X1, [X10]
	0x034146DC CBZ X9, 0x3414700
	0x034146E0 LDR X10, [X8 + 0xB0]
	0x034146E4 ADD X10, X10, 0x8
	0x034146E8 LDUR X11, [X10 - 0x8]
	0x034146EC CMP X11, X1
	0x034146F0 B.EQ 0x3414710
	0x034146F4 SUBS X9, X9, 0x1
	0x034146F8 ADD X10, X10, 0x10
	0x034146FC B.NE 0x34146E8
	0x03414700 MOV X0, X22
	0x03414704 MOV W2, W31
	0x03414708 BL 0x1C5C788
	0x0341470C B 0x341471C
	0x03414710 LDRSW X9, [X10]
	0x03414714 ADD X8, X8, X9, 0x4, LSL
	0x03414718 ADD X0, X8, 0x138
	0x0341471C LDP X8, X1, [X0]
	0x03414720 MOV X0, X22
	0x03414724 BLR X8
	0x03414728 CBNZ X23, 0x34147B8
	0x0341472C CMP W20, 0x1
	0x03414730 B.NE 0x34147D8
	0x03414734 MOV X0, X21
	0x03414738 BL 0x3EB1AD0
	0x0341473C MOV X20, X0
	0x03414740 ADRP X0, 0xCDF000
	0x03414744 LDR X0, [X0 + 0x7D0]
	0x03414748 BL 0x1C16D08
	0x0341474C LDR X8, [X20]
	0x03414750 LDR X1, [X8]
	0x03414754 BL 0x1C17270
	0x03414758 TBZ X0, 0x0, 0x3414798
	0x0341475C LDR X20, [X20]
	0x03414760 BL 0x3EB1AE0
	0x03414764 MOVN W8, 0x1
	0x03414768 STR W8, [X19], #0x8
	0x0341476C ADRP X0, 0xCE2000
	0x03414770 LDR X0, [X0 + 0x280]
	0x03414774 BL 0x1C16D08
	0x03414778 LDR W8, [X0 + 0xE0]
	0x0341477C CBNZ W8, 0x3414784
	0x03414780 BL 0x1C16DFC
	0x03414784 MOV X0, X19
	0x03414788 MOV X1, X20
	0x0341478C MOV X2, X31
	0x03414790 BL 0x32C4908
	0x03414794 B 0x3414568
	0x03414798 MOVZ W0, 0x8
	0x0341479C BL 0x3EB1AF0
	0x034147A0 LDR X8, [X20]
	0x034147A4 STR X8, [X0]
	0x034147A8 ADRP X1, 0xAA0000
	0x034147AC ADD X1, X1, 0xE58
	0x034147B0 MOV X2, X31
	0x034147B4 BL 0x3EB1B00
	0x034147B8 MOV X0, X23
	0x034147BC BL 0x1C16F18
	0x034147C0 MOV X20, X1
	0x034147C4 MOV X21, X0
	0x034147C8 TBNZ X24, 0x1F, 0x34146C4
	0x034147CC B 0x3414728
	0x034147D0 MOV X21, X0
	0x034147D4 BL 0x3EB1AE0
	0x034147D8 MOV X0, X21
	0x034147DC BL 0x1D2C690
	0x034147E0 BL 0x1990590
	0x034147E4 STR X30, [X31 - 0x30]!
	0x034147E8 STP X22, X21, [X31 + 0x10]
	0x034147EC STP X20, X19, [X31 + 0x20]
	0x034147F0 ADRP X21, 0xFC9000
	0x034147F4 ADRP X22, 0xCE2000
	0x034147F8 LDRB W8, [X21 + 0x5C4]
	0x034147FC LDR X22, [X22 + 0x280]
	0x03414800 MOV X19, X1
	0x03414804 MOV X20, X0
	0x03414808 TBNZ X8, 0x0, 0x3414820
	0x0341480C ADRP X0, 0xCE2000
	0x03414810 LDR X0, [X0 + 0x280]
	0x03414814 BL 0x1C16CF4
	0x03414818 MOVZ W8, 0x1
	0x0341481C STRB W8, [X21 + 0x5C4]
	0x03414820 LDR X0, [X22]
	0x03414824 LDR W8, [X0 + 0xE0]
	0x03414828 CBNZ W8, 0x3414830
	0x0341482C BL 0x1C16DFC
	0x03414830 ADD X0, X20, 0x8
	0x03414834 MOV X1, X19
	0x03414838 LDP X20, X19, [X31 + 0x20]
	0x0341483C LDP X22, X21, [X31 + 0x10]
	0x03414840 MOV X2, X31
	0x03414844 LDR X30, [X31], #0x30
	0x03414848 B 0x32C477C
	0x0341484C SUB X31, X31, 0x70
	0x03414850 STR X30, [X31 + 0x10]
	0x03414854 STP X28, X27, [X31 + 0x20]
	0x03414858 STP X26, X25, [X31 + 0x30]
	0x0341485C STP X24, X23, [X31 + 0x40]
	0x03414860 STP X22, X21, [X31 + 0x50]
	0x03414864 STP X20, X19, [X31 + 0x60]
	0x03414868 ADRP X20, 0xFC9000
	0x0341486C LDRB W8, [X20 + 0x5C5]
	0x03414870 MOV X19, X0
	0x03414874 TBNZ X8, 0x0, 0x34149B8
	0x03414878 ADRP X0, 0xD1A000
	0x0341487C LDR X0, [X0 + 0x818]
	0x03414880 BL 0x1C16CF4
	0x03414884 ADRP X0, 0xD1A000
	0x03414888 LDR X0, [X0 + 0x820]
	0x0341488C BL 0x1C16CF4
	0x03414890 ADRP X0, 0xD1A000
	0x03414894 LDR X0, [X0 + 0x320]
	0x03414898 BL 0x1C16CF4
	0x0341489C ADRP X0, 0xCE8000
	0x034148A0 LDR X0, [X0 + 0x8D8]
	0x034148A4 BL 0x1C16CF4
	0x034148A8 ADRP X0, 0xCE8000
	0x034148AC LDR X0, [X0 + 0x9E8]
	0x034148B0 BL 0x1C16CF4
	0x034148B4 ADRP X0, 0xCE0000
	0x034148B8 LDR X0, [X0 + 0x810]
	0x034148BC BL 0x1C16CF4
	0x034148C0 ADRP X0, 0xCE0000
	0x034148C4 LDR X0, [X0 + 0x6C0]
	0x034148C8 BL 0x1C16CF4
	0x034148CC ADRP X0, 0xCE0000
	0x034148D0 LDR X0, [X0 + 0x6D0]
	0x034148D4 BL 0x1C16CF4
	0x034148D8 ADRP X0, 0xD1A000
	0x034148DC LDR X0, [X0 + 0x7B8]
	0x034148E0 BL 0x1C16CF4
	0x034148E4 ADRP X0, 0xD1A000
	0x034148E8 LDR X0, [X0 + 0x828]
	0x034148EC BL 0x1C16CF4
	0x034148F0 ADRP X0, 0xD1A000
	0x034148F4 LDR X0, [X0 + 0x830]
	0x034148F8 BL 0x1C16CF4
	0x034148FC ADRP X0, 0xCE3000
	0x03414900 LDR X0, [X0 + 0xBF0]
	0x03414904 BL 0x1C16CF4
	0x03414908 ADRP X0, 0xCE2000
	0x0341490C LDR X0, [X0 + 0x1E0]
	0x03414910 BL 0x1C16CF4
	0x03414914 ADRP X0, 0xCE2000
	0x03414918 LDR X0, [X0 + 0x1F0]
	0x0341491C BL 0x1C16CF4
	0x03414920 ADRP X0, 0xCE2000
	0x03414924 LDR X0, [X0 + 0x1F8]
	0x03414928 BL 0x1C16CF4
	0x0341492C ADRP X0, 0xCE8000
	0x03414930 LDR X0, [X0 + 0x3A0]
	0x03414934 BL 0x1C16CF4
	0x03414938 ADRP X0, 0xCE1000
	0x0341493C LDR X0, [X0 + 0xA28]
	0x03414940 BL 0x1C16CF4
	0x03414944 ADRP X0, 0xD1A000
	0x03414948 LDR X0, [X0 + 0x838]
	0x0341494C BL 0x1C16CF4
	0x03414950 ADRP X0, 0xD1A000
	0x03414954 LDR X0, [X0 + 0x840]
	0x03414958 BL 0x1C16CF4
	0x0341495C ADRP X0, 0xD08000
	0x03414960 LDR X0, [X0 + 0x4D8]
	0x03414964 BL 0x1C16CF4
	0x03414968 ADRP X0, 0xD1A000
	0x0341496C LDR X0, [X0 + 0x848]
	0x03414970 BL 0x1C16CF4
	0x03414974 ADRP X0, 0xCE8000
	0x03414978 LDR X0, [X0 + 0x988]
	0x0341497C BL 0x1C16CF4
	0x03414980 ADRP X0, 0xCE8000
	0x03414984 LDR X0, [X0 + 0x720]
	0x03414988 BL 0x1C16CF4
	0x0341498C ADRP X0, 0xD1A000
	0x03414990 LDR X0, [X0 + 0x7D0]
	0x03414994 BL 0x1C16CF4
	0x03414998 ADRP X0, 0xD1A000
	0x0341499C LDR X0, [X0 + 0x850]
	0x034149A0 BL 0x1C16CF4
	0x034149A4 ADRP X0, 0xCDF000
	0x034149A8 LDR X0, [X0 + 0x988]
	0x034149AC BL 0x1C16CF4
	0x034149B0 MOVZ W8, 0x1
	0x034149B4 STRB W8, [X20 + 0x5C5]
	0x034149B8 STR X31, [X31 + 0x18]
	0x034149BC ADRP X28, 0xD1A000
	0x034149C0 LDR W8, [X19]
	0x034149C4 LDR X28, [X28 + 0x320]
	0x034149C8 CBZ W8, 0x3414CCC
	0x034149CC LDR X8, [X19 + 0x20]
	0x034149D0 CBZ X8, 0x3414E04
	0x034149D4 ADRP X8, 0xD1A000
	0x034149D8 ADRP X9, 0xCDF000
	0x034149DC LDR X8, [X8 + 0x838]
	0x034149E0 LDR X9, [X9 + 0x988]
	0x034149E4 MOV X0, X19
	0x034149E8 LDR X25, [X19 + 0x38]
	0x034149EC LDR X21, [X8]
	0x034149F0 LDR X20, [X9]
	0x034149F4 LDRB W8, [X0 + 0x28]!
	0x034149F8 CBZ W8, 0x3414A44
	0x034149FC ADRP X8, 0xD1A000
	0x03414A00 LDR X8, [X8 + 0x830]
	0x03414A04 LDR X1, [X8]
	0x03414A08 BL 0x242D714
	0x03414A0C CBZ X0, 0x3414E70
	0x03414A10 MOV X1, X31
	0x03414A14 BL 0x322B5E4
	0x03414A18 ADRP X8, 0xD1A000
	0x03414A1C LDR X8, [X8 + 0x840]
	0x03414A20 ADRP X9, 0xCE8000
	0x03414A24 LDR X9, [X9 + 0x720]
	0x03414A28 MOV X2, X0
	0x03414A2C LDR X1, [X8]
	0x03414A30 LDR X3, [X9]
	0x03414A34 MOV X0, X20
	0x03414A38 MOV X4, X31
	0x03414A3C BL 0x32277C4
	0x03414A40 MOV X20, X0
	0x03414A44 LDR X22, [X19 + 0x30]
	0x03414A48 CBZ X22, 0x3414A9C
	0x03414A4C ADRP X8, 0xCE1000
	0x03414A50 LDR X8, [X8 + 0xA28]
	0x03414A54 LDR X0, [X8]
	0x03414A58 LDR W8, [X0 + 0xE0]
	0x03414A5C CBNZ W8, 0x3414A64
	0x03414A60 BL 0x1C16DFC
	0x03414A64 MOV X0, X22
	0x03414A68 MOV X1, X31
	0x03414A6C BL 0x3624D20
	0x03414A70 ADRP X8, 0xD1A000
	0x03414A74 LDR X8, [X8 + 0x848]
	0x03414A78 ADRP X9, 0xCE8000
	0x03414A7C LDR X9, [X9 + 0x720]
	0x03414A80 MOV X2, X0
	0x03414A84 LDR X1, [X8]
	0x03414A88 LDR X3, [X9]
	0x03414A8C MOV X0, X20
	0x03414A90 MOV X4, X31
	0x03414A94 BL 0x32277C4
	0x03414A98 MOV X20, X0
	0x03414A9C CBZ X25, 0x3414E4C
	0x03414AA0 LDR X0, [X25 + 0x20]
	0x03414AA4 CBZ X0, 0x3414E50
	0x03414AA8 MOV X1, X31
	0x03414AAC BL 0x361B448
	0x03414AB0 ADRP X8, 0xCE8000
	0x03414AB4 LDR X8, [X8 + 0x8D8]
	0x03414AB8 MOV X22, X0
	0x03414ABC LDR X0, [X8]
	0x03414AC0 MOVZ W1, 0x1
	0x03414AC4 BL 0x1C16D6C
	0x03414AC8 MOV X1, X0
	0x03414ACC CBZ X1, 0x3414E54
	0x03414AD0 LDR W8, [X1 + 0x18]
	0x03414AD4 CBZ W8, 0x3414E58
	0x03414AD8 MOVZ W8, 0x2F
	0x03414ADC STRH W8, [X1 + 0x20]
	0x03414AE0 CBZ X22, 0x3414E5C
	0x03414AE4 MOV X0, X22
	0x03414AE8 MOV X2, X31
	0x03414AEC BL 0x322BC58
	0x03414AF0 MOV X1, X21
	0x03414AF4 MOV X2, X31
	0x03414AF8 BL 0x321B938
	0x03414AFC ADRP X8, 0xCE8000
	0x03414B00 LDR X8, [X8 + 0x3A0]
	0x03414B04 MOV X22, X0
	0x03414B08 LDR X23, [X25 + 0x20]
	0x03414B0C LDR X0, [X8]
	0x03414B10 BL 0x1C16F10
	0x03414B14 MOV X21, X0
	0x03414B18 MOV X1, X23
	0x03414B1C MOV X2, X31
	0x03414B20 BL 0x36281F8
	0x03414B24 CBZ X21, 0x3414E60
	0x03414B28 MOV X0, X21
	0x03414B2C MOV X1, X22
	0x03414B30 MOV X2, X31
	0x03414B34 BL 0x36288CC
	0x03414B38 MOV X0, X21
	0x03414B3C MOV X1, X20
	0x03414B40 MOV X2, X31
	0x03414B44 BL 0x3628980
	0x03414B48 MOV X0, X21
	0x03414B4C MOV X1, X31
	0x03414B50 BL 0x3628A38
	0x03414B54 ADRP X8, 0xD08000
	0x03414B58 ADRP X9, 0xCE0000
	0x03414B5C LDR X8, [X8 + 0x4D8]
	0x03414B60 LDR X9, [X9 + 0x6D0]
	0x03414B64 MOV X20, X0
	0x03414B68 LDR X21, [X8]
	0x03414B6C LDR X0, [X9]
	0x03414B70 BL 0x1C16F10
	0x03414B74 ADRP X8, 0xCE0000
	0x03414B78 LDR X8, [X8 + 0x6C0]
	0x03414B7C MOV X22, X0
	0x03414B80 LDR X1, [X8]
	0x03414B84 BL 0x2AA4804
	0x03414B88 LDR X0, [X19 + 0x40]
	0x03414B8C MOV X1, X31
	0x03414B90 BL 0x32277A8
	0x03414B94 TBNZ X0, 0x0, 0x3414C40
	0x03414B98 MOV X0, X31
	0x03414B9C BL 0x3241948
	0x03414BA0 ADRP X8, 0xCE8000
	0x03414BA4 MOV X23, X0
	0x03414BA8 LDP X0, X2, [X19 + 0x40]
	0x03414BAC LDR X8, [X8 + 0x988]
	0x03414BB0 LDR X1, [X8]
	0x03414BB4 MOV X3, X31
	0x03414BB8 BL 0x32274B8
	0x03414BBC MOV X1, X0
	0x03414BC0 CBZ X23, 0x3414E74
	0x03414BC4 LDR X8, [X23]
	0x03414BC8 LDR X9, [X8 + 0x268]
	0x03414BCC LDR X2, [X8 + 0x270]
	0x03414BD0 MOV X0, X23
	0x03414BD4 BLR X9
	0x03414BD8 ADRP X8, 0xCE8000
	0x03414BDC LDR X8, [X8 + 0x9E8]
	0x03414BE0 MOV X23, X0
	0x03414BE4 LDR X0, [X8]
	0x03414BE8 LDR W8, [X0 + 0xE0]
	0x03414BEC CBNZ W8, 0x3414BF4
	0x03414BF0 BL 0x1C16DFC
	0x03414BF4 MOV X0, X23
	0x03414BF8 MOV X1, X31
	0x03414BFC BL 0x33225A0
	0x03414C00 MOV X1, X0
	0x03414C04 ADRP X8, 0xD1A000
	0x03414C08 LDR X8, [X8 + 0x850]
	0x03414C0C LDR X0, [X8]
	0x03414C10 MOV X2, X31
	0x03414C14 BL 0x321B938
	0x03414C18 CBZ X22, 0x3414E78
	0x03414C1C ADRP X8, 0xD1A000
	0x03414C20 LDR X8, [X8 + 0x7D0]
	0x03414C24 ADRP X9, 0xCE0000
	0x03414C28 LDR X9, [X9 + 0x810]
	0x03414C2C MOV X2, X0
	0x03414C30 LDR X1, [X8]
	0x03414C34 LDR X3, [X9]
	0x03414C38 MOV X0, X22
	0x03414C3C BL 0x2AA5098
	0x03414C40 LDR X0, [X19 + 0x20]
	0x03414C44 MOV X1, X31
	0x03414C48 BL 0x3483BE4
	0x03414C4C MOV X23, X0
	0x03414C50 MOV X0, X31
	0x03414C54 BL 0x3241948
	0x03414C58 CBZ X0, 0x3414E64
	0x03414C5C LDR X8, [X0]
	0x03414C60 LDR X9, [X8 + 0x268]
	0x03414C64 LDR X2, [X8 + 0x270]
	0x03414C68 MOV X1, X23
	0x03414C6C BLR X9
	0x03414C70 LDR X24, [X25 + 0x10]
	0x03414C74 CBZ X24, 0x3414E68
	0x03414C78 ADRP X10, 0xD1A000
	0x03414C7C LDR X10, [X10 + 0x7B8]
	0x03414C80 LDR X8, [X24]
	0x03414C84 LDR W26, [X25 + 0x18]
	0x03414C88 LDP X27, X25, [X19 + 0x50]
	0x03414C8C LDR X1, [X10]
	0x03414C90 LDRH W9, [X8 + 0x12E]
	0x03414C94 MOV X23, X0
	0x03414C98 CBZ X9, 0x3414CBC
	0x03414C9C LDR X10, [X8 + 0xB0]
	0x03414CA0 ADD X10, X10, 0x8
	0x03414CA4 LDUR X11, [X10 - 0x8]
	0x03414CA8 CMP X11, X1
	0x03414CAC B.EQ 0x3414CE4
	0x03414CB0 SUBS X9, X9, 0x1
	0x03414CB4 ADD X10, X10, 0x10
	0x03414CB8 B.NE 0x3414CA4
	0x03414CBC MOVZ W2, 0x3
	0x03414CC0 MOV X0, X24
	0x03414CC4 BL 0x1C5C788
	0x03414CC8 B 0x3414CF4
	0x03414CCC LDR X8, [X19 + 0x60]
	0x03414CD0 MOVN W9, 0x0
	0x03414CD4 STR X8, [X31 + 0x18]
	0x03414CD8 STR X31, [X19 + 0x60]
	0x03414CDC STR W9, [X19]
	0x03414CE0 B 0x3414D50
	0x03414CE4 LDR W9, [X10]
	0x03414CE8 ADD W9, W9, 0x3
	0x03414CEC ADD X8, X8, W9, 0x4, SXTW
	0x03414CF0 ADD X0, X8, 0x138
	0x03414CF4 LDP X8, X9, [X0]
	0x03414CF8 MOV X0, X24
	0x03414CFC MOV X1, X21
	0x03414D00 MOV X2, X20
	0x03414D04 MOV X3, X22
	0x03414D08 MOV X4, X23
	0x03414D0C MOV W5, W26
	0x03414D10 MOV X6, X27
	0x03414D14 MOV X7, X25
	0x03414D18 STR X9, [X31]
	0x03414D1C BLR X8
	0x03414D20 CBZ X0, 0x3414E6C
	0x03414D24 ADRP X8, 0xCE2000
	0x03414D28 LDR X8, [X8 + 0x1F8]
	0x03414D2C LDR X1, [X8]
	0x03414D30 BL 0x269F5D0
	0x03414D34 ADRP X8, 0xCE2000
	0x03414D38 LDR X8, [X8 + 0x1F0]
	0x03414D3C STR X0, [X31 + 0x18]
	0x03414D40 LDR X1, [X8]
	0x03414D44 ADD X0, X31, 0x18
	0x03414D48 BL 0x2677430
	0x03414D4C TBZ X0, 0x0, 0x3414DAC
	0x03414D50 ADRP X8, 0xCE2000
	0x03414D54 LDR X8, [X8 + 0x1E0]
	0x03414D58 ADD X0, X31, 0x18
	0x03414D5C LDR X1, [X8]
	0x03414D60 BL 0x2677474
	0x03414D64 ADRP X8, 0xD1A000
	0x03414D68 LDR X8, [X8 + 0x828]
	0x03414D6C LDR X1, [X8]
	0x03414D70 BL 0x220E6DC
	0x03414D74 MOVN W8, 0x1
	0x03414D78 STR W8, [X19], #0x8
	0x03414D7C MOV X20, X0
	0x03414D80 LDR X0, [X28]
	0x03414D84 ADRP X21, 0xD1A000
	0x03414D88 LDR W8, [X0 + 0xE0]
	0x03414D8C LDR X21, [X21 + 0x820]
	0x03414D90 CBNZ W8, 0x3414D98
	0x03414D94 BL 0x1C16DFC
	0x03414D98 LDR X2, [X21]
	0x03414D9C MOV X0, X19
	0x03414DA0 MOV X1, X20
	0x03414DA4 BL 0x26322B0
	0x03414DA8 B 0x3414DE4
	0x03414DAC STR W31, [X19]
	0x03414DB0 LDR X8, [X31 + 0x18]
	0x03414DB4 STR X8, [X19 + 0x60]
	0x03414DB8 LDR X0, [X28]
	0x03414DBC LDR W8, [X0 + 0xE0]
	0x03414DC0 CBNZ W8, 0x3414DC8
	0x03414DC4 BL 0x1C16DFC
	0x03414DC8 ADRP X8, 0xD1A000
	0x03414DCC LDR X8, [X8 + 0x818]
	0x03414DD0 ADD X0, X19, 0x8
	0x03414DD4 LDR X3, [X8]
	0x03414DD8 ADD X1, X31, 0x18
	0x03414DDC MOV X2, X19
	0x03414DE0 BL 0x1FB1858
	0x03414DE4 LDP X20, X19, [X31 + 0x60]
	0x03414DE8 LDP X22, X21, [X31 + 0x50]
	0x03414DEC LDP X24, X23, [X31 + 0x40]
	0x03414DF0 LDP X26, X25, [X31 + 0x30]
	0x03414DF4 LDP X28, X27, [X31 + 0x20]
	0x03414DF8 LDR X30, [X31 + 0x10]
	0x03414DFC ADD X31, X31, 0x70
	0x03414E00 RET
	0x03414E04 ADRP X0, 0xCE7000
	0x03414E08 LDR X0, [X0 + 0x578]
	0x03414E0C BL 0x1C16D08
	0x03414E10 BL 0x1C16F10
	0x03414E14 MOV X20, X0
	0x03414E18 ADRP X0, 0xD1A000
	0x03414E1C LDR X0, [X0 + 0x858]
	0x03414E20 BL 0x1C16D08
	0x03414E24 MOV X1, X0
	0x03414E28 MOV X0, X20
	0x03414E2C MOV X2, X31
	0x03414E30 BL 0x3314A68
	0x03414E34 ADRP X0, 0xD1A000
	0x03414E38 LDR X0, [X0 + 0x860]
	0x03414E3C BL 0x1C16D08
	0x03414E40 MOV X1, X0
	0x03414E44 MOV X0, X20
	0x03414E48 BL 0x1C16DEC
	0x03414E4C BL 0x1C16F20
	0x03414E50 BL 0x1C16F20
	0x03414E54 BL 0x1C16F20
	0x03414E58 BL 0x1C16F28
	0x03414E5C BL 0x1C16F20
	0x03414E60 BL 0x1C16F20
	0x03414E64 BL 0x1C16F20
	0x03414E68 BL 0x1C16F20
	0x03414E6C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xFCA000
	015 Move W8, [X20+1473]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {98}
	021 Move X0, 0xD1B000
	022 Move X0, [X0+1968]
	023 Call 0x1C17CF4
	024 Move X0, 0xCE3000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move X0, 0xCE9000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0xCE1000
	031 Move X0, [X0+2064]
	032 Call 0x1C17CF4
	033 Move X0, 0xCE1000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCE1000
	037 Move X0, [X0+1744]
	038 Call 0x1C17CF4
	039 Move X0, 0xCE0000
	040 Move X0, [X0+3584]
	041 Call 0x1C17CF4
	042 Move X0, 0xCE0000
	043 Move X0, [X0+3952]
	044 Call 0x1C17CF4
	045 Move X0, 0xCE0000
	046 Move X0, [X0+3960]
	047 Call 0x1C17CF4
	048 Move X0, 0xCE0000
	049 Move X0, [X0+3608]
	050 Call 0x1C17CF4
	051 Move X0, 0xD1B000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move X0, 0xCE0000
	055 Move X0, [X0+2760]
	056 Call 0x1C17CF4
	057 Move X0, 0xCE3000
	058 Move X0, [X0+480]
	059 Call 0x1C17CF4
	060 Move X0, 0xCE3000
	061 Move X0, [X0+496]
	062 Call 0x1C17CF4
	063 Move X0, 0xCE3000
	064 Move X0, [X0+504]
	065 Call 0x1C17CF4
	066 Move X0, 0xCE9000
	067 Move X0, [X0+928]
	068 Call 0x1C17CF4
	069 Move X0, 0xCE2000
	070 Move X0, [X0+2600]
	071 Call 0x1C17CF4
	072 Move X0, 0xD09000
	073 Move X0, [X0+1240]
	074 Call 0x1C17CF4
	075 Move X0, 0xD1B000
	076 Move X0, [X0+1984]
	077 Call 0x1C17CF4
	078 Move X0, 0xD1B000
	079 Move X0, [X0+1992]
	080 Call 0x1C17CF4
	081 Move X0, 0xCE9000
	082 Move X0, [X0+1824]
	083 Call 0x1C17CF4
	084 Move X0, 0xD1B000
	085 Move X0, [X0+2000]
	086 Call 0x1C17CF4
	087 Move X0, 0xD1B000
	088 Move X0, [X0+2008]
	089 Call 0x1C17CF4
	090 Move X0, 0xD1B000
	091 Move X0, [X0+2016]
	092 Call 0x1C17CF4
	093 Move X0, 0xCE0000
	094 Move X0, [X0+2440]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X20+1473], W8
	098 Move [X31+40], X31
	099 Move X27, 0xCE3000
	100 Move W26, [X19]
	101 Move X27, [X27+640]
	102 Compare W26, 0
	103 JumpIfEqual {138}
	104 Move X8, 0xD1B000
	105 Move X9, 0xCE0000
	106 Move X8, [X8+2016]
	107 Move X9, [X9+2440]
	108 Move X20, [X19+48]
	109 Move X21, [X19+32]
	110 Move X22, [X8]
	111 Move X24, [X9]
	112 Compare X21, 0
	113 JumpIfNotEqual {122}
	114 Move X8, 0xCE0000
	115 Move X8, [X8+2760]
	116 Move X0, [X8]
	117 Move W1, W31
	118 Call 0x1C17D6C
	119 Move X21, X0
	120 Compare X0, 0
	121 JumpIfEqual {604}
	122 Move X10, 0xCE0000
	123 Move X8, [X21]
	124 Move X10, [X10+3952]
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Move X1, [X10]
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X21
	136 Move W2, W31
	137 Call 0x1C5D788
	138 Move X8, [X19+80]
	139 Move TEMP, 0
	140 Not TEMP
	141 Move W9, TEMP
	142 Move [X31+40], X8
	143 Move [X19+80], X31
	144 Move [X19], W9
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X21
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move [X31+24], X22
	153 Move [X31+32], X20
	154 Move X28, 0xCE0000
	155 Move X29, 0xCE0000
	156 Move X27, 0xCE2000
	157 Move X25, 0xD1B000
	158 Move X20, 0xCE9000
	159 Move X28, [X28+3608]
	160 Move X29, [X29+3960]
	161 Move X27, [X27+2600]
	162 Move X25, [X25+1984]
	163 Move X20, [X20+1824]
	164 Move X23, X0
	165 Move X0, X24
	166 Compare X23, 0
	167 JumpIfEqual {589}
	168 Move X8, [X23]
	169 Move X1, [X28]
	170 Move X21, X0
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X23
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X23
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {230}
	194 Move X8, [X23]
	195 Move X1, [X29]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X23
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X0, X23
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X22, X0
	216 Move X0, [X27]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X22
	222 Move X1, X31
	223 Call Uri.EscapeDataString, X0
	224 Move X1, [X25]
	225 Move X3, [X20]
	226 Move X2, X0
	227 Move X0, X21
	228 Move X4, X31
	229 Call String.Concat, X0, X1, X2, X3
	230 Move X24, X31
	231 Move W22, 6
	232 Move TEMP, X26
	233 And TEMP, TEMP, -2147483648
	234 Compare TEMP, -2147483648
	235 JumpIfNotEqual {261}
	236 Compare X23, 0
	237 JumpIfEqual {261}
	238 Move X10, 0xCE0000
	239 Move X8, [X23]
	240 Move X10, [X10+3584]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X1, [X10]
	243 Compare X9, 0
	244 JumpIfEqual {251}
	245 Move X10, [X8+176]
	246 Add X10, X10, 8
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract X9, X9, 1
	250 Add X10, X10, 16
	251 Move X0, X23
	252 Move W2, W31
	253 Call 0x1C5D788
	254 NotImplemented "Instruction LDRSW not yet implemented."
	255 Add X8, X8, X9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X1, [X0+8]
	259 Move X0, X23
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Compare X24, 0
	262 JumpIfNotEqual {591}
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Compare W22, 0
	265 JumpIfNotEqual {575}
	266 Move X22, [X19+40]
	267 Compare X22, 0
	268 JumpIfNotEqual {277}
	269 Move X8, 0xCE0000
	270 Move X8, [X8+2760]
	271 Move X0, [X8]
	272 Move W1, W31
	273 Call 0x1C17D6C
	274 Move X22, X0
	275 Compare X0, 0
	276 JumpIfEqual {605}
	277 Move X8, [X22]
	278 Move X10, 0xCE0000
	279 NotImplemented "Instruction LDRH not yet implemented."
	280 Move X10, [X10+3952]
	281 Move X1, [X10]
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move X0, X22
	291 Move W2, W31
	292 Call 0x1C5D788
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Add X8, X8, X9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X1, [X0+8]
	298 Move X0, X22
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Move X25, 0xD1B000
	301 Move X25, [X25+1992]
	302 Move X24, X0
	303 Move X0, X21
	304 Compare X24, 0
	305 JumpIfEqual {590}
	306 Move X8, [X24]
	307 Move X1, [X28]
	308 Move X23, X0
	309 NotImplemented "Instruction LDRH not yet implemented."
	310 Compare X9, 0
	311 JumpIfEqual {318}
	312 Move X10, [X8+176]
	313 Add X10, X10, 8
	314 NotImplemented "Instruction LDUR not yet implemented."
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Subtract X9, X9, 1
	317 Add X10, X10, 16
	318 Move X0, X24
	319 Move W2, W31
	320 Call 0x1C5D788
	321 NotImplemented "Instruction LDRSW not yet implemented."
	322 Add X8, X8, X9
	323 Add X0, X8, 312
	324 Move X8, [X0]
	325 Move X1, [X0+8]
	326 Move X0, X24
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {368}
	332 Move X8, [X24]
	333 Move X1, [X29]
	334 NotImplemented "Instruction LDRH not yet implemented."
	335 Compare X9, 0
	336 JumpIfEqual {343}
	337 Move X10, [X8+176]
	338 Add X10, X10, 8
	339 NotImplemented "Instruction LDUR not yet implemented."
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Subtract X9, X9, 1
	342 Add X10, X10, 16
	343 Move X0, X24
	344 Move W2, W31
	345 Call 0x1C5D788
	346 NotImplemented "Instruction LDRSW not yet implemented."
	347 Add X8, X8, X9
	348 Add X0, X8, 312
	349 Move X8, [X0]
	350 Move X1, [X0+8]
	351 Move X0, X24
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move X22, X0
	354 Move X0, [X27]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Move X0, X22
	360 Move X1, X31
	361 Call Uri.EscapeDataString, X0
	362 Move X1, [X25]
	363 Move X3, [X20]
	364 Move X2, X0
	365 Move X0, X23
	366 Move X4, X31
	367 Call String.Concat, X0, X1, X2, X3
	368 Move X21, X31
	369 Move W20, 10
	370 Move TEMP, X26
	371 And TEMP, TEMP, -2147483648
	372 Compare TEMP, -2147483648
	373 JumpIfNotEqual {399}
	374 Compare X24, 0
	375 JumpIfEqual {399}
	376 Move X10, 0xCE0000
	377 Move X8, [X24]
	378 Move X10, [X10+3584]
	379 NotImplemented "Instruction LDRH not yet implemented."
	380 Move X1, [X10]
	381 Compare X9, 0
	382 JumpIfEqual {389}
	383 Move X10, [X8+176]
	384 Add X10, X10, 8
	385 NotImplemented "Instruction LDUR not yet implemented."
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Subtract X9, X9, 1
	388 Add X10, X10, 16
	389 Move X0, X24
	390 Move W2, W31
	391 Call 0x1C5D788
	392 NotImplemented "Instruction LDRSW not yet implemented."
	393 Add X8, X8, X9
	394 Add X0, X8, 312
	395 Move X8, [X0]
	396 Move X1, [X0+8]
	397 Move X0, X24
	398 NotImplemented "Instruction BLR not yet implemented."
	399 Compare X21, 0
	400 JumpIfNotEqual {593}
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Compare W20, 0
	403 JumpIfNotEqual {575}
	404 Move X25, [X31+32]
	405 Compare X25, 0
	406 JumpIfEqual {595}
	407 Move X27, 0xCE3000
	408 Move X0, [X25+32]
	409 Move X27, [X27+640]
	410 Compare X0, 0
	411 JumpIfEqual {596}
	412 Move X1, X31
	413 Call Uri.get_AbsolutePath, X0
	414 Move X8, 0xCE9000
	415 Move X8, [X8+2264]
	416 Move X21, X0
	417 Move X0, [X8]
	418 Move W1, 1
	419 Call 0x1C17D6C
	420 Move X1, X0
	421 Compare X1, 0
	422 JumpIfEqual {597}
	423 Move W8, [X1+24]
	424 Compare W8, 0
	425 JumpIfEqual {598}
	426 Move W8, 47
	427 NotImplemented "Instruction STRH not yet implemented."
	428 Compare X21, 0
	429 JumpIfEqual {599}
	430 Move X0, X21
	431 Move X2, X31
	432 Call String.TrimEnd, X0, X1
	433 Move X1, [X31+24]
	434 Move X2, X31
	435 Call String.Concat, X0, X1
	436 Move X8, 0xCE9000
	437 Move X22, [X25+32]
	438 Move X8, [X8+928]
	439 Move X21, X0
	440 Move X0, [X8]
	441 Call 0x1C17F10
	442 Move X20, X0
	443 Move X1, X22
	444 Move X2, X31
	445 Call UriBuilder..ctor, X0, X1
	446 Compare X20, 0
	447 JumpIfEqual {600}
	448 Move X0, X20
	449 Move X1, X21
	450 Move X2, X31
	451 Call UriBuilder.set_Path, X0, X1
	452 Move X0, X20
	453 Move X1, X23
	454 Move X2, X31
	455 Call UriBuilder.set_Query, X0, X1
	456 Move X0, X20
	457 Move X1, X31
	458 Call UriBuilder.get_Uri, X0
	459 Move X8, 0xD09000
	460 Move X9, 0xCE1000
	461 Move X8, [X8+1240]
	462 Move X9, [X9+1744]
	463 Move X20, X0
	464 Move X21, [X8]
	465 Move X0, [X9]
	466 Call 0x1C17F10
	467 Move X8, 0xCE1000
	468 Move X8, [X8+1728]
	469 Move X22, X0
	470 Move X1, [X8]
	471 Call Dictionary`2<Object, Object>..ctor, X0
	472 Move X8, 0xD1B000
	473 Move X1, [X19+56]
	474 Move X8, [X8+2008]
	475 Move X0, [X8]
	476 Move X2, X31
	477 Call String.Concat, X0, X1
	478 Compare X22, 0
	479 JumpIfEqual {601}
	480 Move X8, 0xD1B000
	481 Move X8, [X8+2000]
	482 Move X9, 0xCE1000
	483 Move X9, [X9+2064]
	484 Move X2, X0
	485 Move X1, [X8]
	486 Move X3, [X9]
	487 Move X0, X22
	488 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	489 Move X24, [X25+16]
	490 Compare X24, 0
	491 JumpIfEqual {602}
	492 Move X10, 0xD1B000
	493 Move W23, [X25+24]
	494 Move X8, [X24]
	495 Move X26, [X19+64]
	496 Move X25, [X19+72]
	497 Move X10, [X10+1976]
	498 NotImplemented "Instruction LDRH not yet implemented."
	499 Move X1, [X10]
	500 Compare X9, 0
	501 JumpIfEqual {508}
	502 Move X10, [X8+176]
	503 Add X10, X10, 8
	504 NotImplemented "Instruction LDUR not yet implemented."
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Subtract X9, X9, 1
	507 Add X10, X10, 16
	508 Move W2, 3
	509 Move X0, X24
	510 Call 0x1C5D788
	511 Move W9, [X10]
	512 Add W9, W9, 3
	513 Add X8, X8, W9
	514 Add X0, X8, 312
	515 Move X8, [X0]
	516 Move X9, [X0+8]
	517 Move X0, X24
	518 Move X1, X21
	519 Move X2, X20
	520 Move X3, X22
	521 Move X4, X31
	522 Move W5, W23
	523 Move X6, X26
	524 Move X7, X25
	525 Move [X31], X9
	526 NotImplemented "Instruction BLR not yet implemented."
	527 Compare X0, 0
	528 JumpIfEqual {603}
	529 Move X8, 0xCE3000
	530 Move X8, [X8+504]
	531 Move X1, [X8]
	532 Call Task`1<Object>.GetAwaiter, X0
	533 Move X8, 0xCE3000
	534 Move X8, [X8+496]
	535 Move [X31+40], X0
	536 Move X1, [X8]
	537 Add X0, X31, 40
	538 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	539 Move TEMP, X0
	540 And TEMP, TEMP, 1
	541 Compare TEMP, 1
	542 JumpIfNotEqual {560}
	543 Move X8, 0xCE3000
	544 Move X8, [X8+480]
	545 Add X0, X31, 40
	546 Move X1, [X8]
	547 Call TaskAwaiter`1<Object>.GetResult, X0
	548 Move TEMP, 1
	549 Not TEMP
	550 Move W8, TEMP
	551 Move [X19+8], W8
	552 Move X0, [X27]
	553 Move W8, [X0+224]
	554 Compare W8, 0
	555 JumpIfNotEqual {557}
	556 Call 0x1C17DFC
	557 Move X0, X19
	558 Move X1, X31
	559 Call AsyncTaskMethodBuilder.SetResult, X0
	560 Move [X19], W31
	561 Move X8, [X31+40]
	562 Move [X19+80], X8
	563 Move X0, [X27]
	564 Move W8, [X0+224]
	565 Compare W8, 0
	566 JumpIfNotEqual {568}
	567 Call 0x1C17DFC
	568 Move X8, 0xD1B000
	569 Move X8, [X8+1968]
	570 Add X0, X19, 8
	571 Move X3, [X8]
	572 Add X1, X31, 40
	573 Move X2, X19
	574 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	575 Move X20, [X31+128]
	576 Move X19, [X31+136]
	577 Move X22, [X31+112]
	578 Move X21, [X31+120]
	579 Move X24, [X31+96]
	580 Move X23, [X31+104]
	581 Move X26, [X31+80]
	582 Move X25, [X31+88]
	583 Move X28, [X31+64]
	584 Move X27, [X31+72]
	585 Move X29, [X31+48]
	586 Move X30, [X31+56]
	587 Add X31, X31, 144
	588 Return 
	589 Call 0x1C17F20
	590 Call 0x1C17F20
	591 Move X0, X24
	592 Call 0x1C17F18
	593 Move X0, X21
	594 Call 0x1C17F18
	595 Call 0x1C17F20
	596 Call 0x1C17F20
	597 Call 0x1C17F20
	598 Call 0x1C17F28
	599 Call 0x1C17F20
	600 Call 0x1C17F20
	601 Call 0x1C17F20
	602 Call 0x1C17F20
	603 Call 0x1C17F20
	604 Call 0x1C17F20
	605 Call 0x1C17F20
	606 Move X22, X0
	607 Move [X31+16], X1
	608 Move X22, X0
	609 Move X23, X21
	610 Move X22, X0
	611 Move X21, X24
	612 Move X22, X0
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move [X31+16], X1
	615 Move X0, X22
	616 Call 0x3EB2AD0
	617 Move X21, [X0]
	618 Call 0x3EB2AE0
	619 Move W20, W31
	620 Move TEMP, X26
	621 And TEMP, TEMP, -2147483648
	622 Compare TEMP, -2147483648
	623 JumpIfEqual {374}
	624 Move X21, X31
	625 Move TEMP, X26
	626 And TEMP, TEMP, -2147483648
	627 Compare TEMP, -2147483648
	628 JumpIfNotEqual {654}
	629 Compare X24, 0
	630 JumpIfEqual {654}
	631 Move X10, 0xCE0000
	632 Move X8, [X24]
	633 Move X10, [X10+3584]
	634 NotImplemented "Instruction LDRH not yet implemented."
	635 Move X1, [X10]
	636 Compare X9, 0
	637 JumpIfEqual {644}
	638 Move X10, [X8+176]
	639 Add X10, X10, 8
	640 NotImplemented "Instruction LDUR not yet implemented."
	641 NotImplemented "Instruction CMP not yet implemented."
	642 Subtract X9, X9, 1
	643 Add X10, X10, 16
	644 Move X0, X24
	645 Move W2, W31
	646 Call 0x1C5D788
	647 NotImplemented "Instruction LDRSW not yet implemented."
	648 Add X8, X8, X9
	649 Add X0, X8, 312
	650 Move X8, [X0]
	651 Move X1, [X0+8]
	652 Move X0, X24
	653 NotImplemented "Instruction BLR not yet implemented."
	654 Compare X21, 0
	655 JumpIfEqual {708}
	656 Move X0, X21
	657 Call 0x1C17F18
	658 Move X22, X0
	659 Move [X31+16], X1
	660 Move TEMP, X26
	661 And TEMP, TEMP, -2147483648
	662 Compare TEMP, -2147483648
	663 JumpIfEqual {629}
	664 Move X22, X0
	665 NotImplemented "Instruction CMP not yet implemented."
	666 Move X0, X22
	667 Call 0x3EB2AD0
	668 Move X24, [X0]
	669 Call 0x3EB2AE0
	670 Move W22, W31
	671 Move TEMP, X26
	672 And TEMP, TEMP, -2147483648
	673 Compare TEMP, -2147483648
	674 JumpIfEqual {236}
	675 Move [X31+16], X1
	676 Move X24, X31
	677 Move TEMP, X26
	678 And TEMP, TEMP, -2147483648
	679 Compare TEMP, -2147483648
	680 JumpIfNotEqual {706}
	681 Compare X23, 0
	682 JumpIfEqual {706}
	683 Move X10, 0xCE0000
	684 Move X8, [X23]
	685 Move X10, [X10+3584]
	686 NotImplemented "Instruction LDRH not yet implemented."
	687 Move X1, [X10]
	688 Compare X9, 0
	689 JumpIfEqual {696}
	690 Move X10, [X8+176]
	691 Add X10, X10, 8
	692 NotImplemented "Instruction LDUR not yet implemented."
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Subtract X9, X9, 1
	695 Add X10, X10, 16
	696 Move X0, X23
	697 Move W2, W31
	698 Call 0x1C5D788
	699 NotImplemented "Instruction LDRSW not yet implemented."
	700 Add X8, X8, X9
	701 Add X0, X8, 312
	702 Move X8, [X0]
	703 Move X1, [X0+8]
	704 Move X0, X23
	705 NotImplemented "Instruction BLR not yet implemented."
	706 Compare X24, 0
	707 JumpIfNotEqual {748}
	708 Move X8, [X31+16]
	709 NotImplemented "Instruction CMP not yet implemented."
	710 Move X0, X22
	711 Call 0x3EB2AD0
	712 Move X20, X0
	713 Move X0, 0xCE0000
	714 Move X0, [X0+2000]
	715 Call 0x1C17D08
	716 Move X8, [X20]
	717 Move X1, [X8]
	718 Call 0x1C18270
	719 Move TEMP, X0
	720 And TEMP, TEMP, 1
	721 Compare TEMP, 1
	722 JumpIfNotEqual {740}
	723 Move X20, [X20]
	724 Call 0x3EB2AE0
	725 Move TEMP, 1
	726 Not TEMP
	727 Move W8, TEMP
	728 Move [X19+8], W8
	729 Move X0, 0xCE3000
	730 Move X0, [X0+640]
	731 Call 0x1C17D08
	732 Move W8, [X0+224]
	733 Compare W8, 0
	734 JumpIfNotEqual {736}
	735 Call 0x1C17DFC
	736 Move X0, X19
	737 Move X1, X20
	738 Move X2, X31
	739 Call AsyncTaskMethodBuilder.SetException, X0, X1
	740 Move W0, 8
	741 Call 0x3EB2AF0
	742 Move X8, [X20]
	743 Move [X0], X8
	744 Move X1, 0xAA1000
	745 Add X1, X1, 3672
	746 Move X2, X31
	747 Call 0x3EB2B00
	748 Move X0, X24
	749 Call 0x1C17F18
	750 Move X22, X0
	751 Move [X31+16], X1
	752 Move TEMP, X26
	753 And TEMP, TEMP, -2147483648
	754 Compare TEMP, -2147483648
	755 JumpIfEqual {681}
	756 Move X22, X0
	757 Call 0x3EB2AE0
	758 Move X0, X22
	759 Call 0x1D2D690
	760 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03414E70 BL 0x1C16F20
	0x03414E74 BL 0x1C16F20
	0x03414E78 BL 0x1C16F20
	0x03414E7C B 0x3414F10
	0x03414E80 B 0x3414F10
	0x03414E84 B 0x3414F10
	0x03414E88 B 0x3414F10
	0x03414E8C B 0x3414F10
	0x03414E90 B 0x3414F10
	0x03414E94 B 0x3414F10
	0x03414E98 B 0x3414F10
	0x03414E9C B 0x3414F10
	0x03414EA0 B 0x3414F10
	0x03414EA4 B 0x3414F10
	0x03414EA8 B 0x3414F10
	0x03414EAC B 0x3414F10
	0x03414EB0 B 0x3414F10
	0x03414EB4 B 0x3414F10
	0x03414EB8 B 0x3414F10
	0x03414EBC B 0x3414F10
	0x03414EC0 B 0x3414F10
	0x03414EC4 B 0x3414F10
	0x03414EC8 B 0x3414F10
	0x03414ECC B 0x3414F10
	0x03414ED0 B 0x3414F10
	0x03414ED4 B 0x3414F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFCA000
	007 Move X22, 0xCE3000
	008 Move W8, [X21+1474]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCE3000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1474], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

