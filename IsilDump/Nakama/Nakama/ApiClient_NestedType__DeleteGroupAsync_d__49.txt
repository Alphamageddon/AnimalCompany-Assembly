Type: Nakama.ApiClient/<DeleteGroupAsync>d__49

Method: System.Void MoveNext()

Disassembly:
	0x03420AFC MOVZ W8, 0x2F
	0x03420B00 STRH W8, [X1 + 0x20]
	0x03420B04 CBZ X22, 0x3420D60
	0x03420B08 MOV X0, X22
	0x03420B0C MOV X2, X31
	0x03420B10 BL 0x322BC58
	0x03420B14 LDR X1, [X31 + 0x8]
	0x03420B18 MOV X2, X31
	0x03420B1C BL 0x321B938
	0x03420B20 ADRP X8, 0xCDC000
	0x03420B24 LDR X23, [X25 + 0x20]
	0x03420B28 LDR X8, [X8 + 0x3A0]
	0x03420B2C MOV X22, X0
	0x03420B30 LDR X0, [X8]
	0x03420B34 BL 0x1C16F10
	0x03420B38 MOV X20, X0
	0x03420B3C MOV X1, X23
	0x03420B40 MOV X2, X31
	0x03420B44 BL 0x36281F8
	0x03420B48 CBZ X20, 0x3420D64
	0x03420B4C MOV X0, X20
	0x03420B50 MOV X1, X22
	0x03420B54 MOV X2, X31
	0x03420B58 BL 0x36288CC
	0x03420B5C MOV X0, X20
	0x03420B60 MOV X1, X21
	0x03420B64 MOV X2, X31
	0x03420B68 BL 0x3628980
	0x03420B6C MOV X0, X20
	0x03420B70 MOV X1, X31
	0x03420B74 BL 0x3628A38
	0x03420B78 ADRP X8, 0xCFC000
	0x03420B7C ADRP X9, 0xCD4000
	0x03420B80 LDR X8, [X8 + 0x4C8]
	0x03420B84 LDR X9, [X9 + 0x6D0]
	0x03420B88 MOV X20, X0
	0x03420B8C LDR X21, [X8]
	0x03420B90 LDR X0, [X9]
	0x03420B94 BL 0x1C16F10
	0x03420B98 ADRP X8, 0xCD4000
	0x03420B9C LDR X8, [X8 + 0x6C0]
	0x03420BA0 MOV X22, X0
	0x03420BA4 LDR X1, [X8]
	0x03420BA8 BL 0x2AA4804
	0x03420BAC ADRP X8, 0xD0E000
	0x03420BB0 LDR X1, [X19 + 0x30]
	0x03420BB4 LDR X8, [X8 + 0x7D8]
	0x03420BB8 LDR X0, [X8]
	0x03420BBC MOV X2, X31
	0x03420BC0 BL 0x321B938
	0x03420BC4 CBZ X22, 0x3420D68
	0x03420BC8 ADRP X8, 0xD0E000
	0x03420BCC LDR X8, [X8 + 0x7D0]
	0x03420BD0 ADRP X9, 0xCD4000
	0x03420BD4 LDR X9, [X9 + 0x810]
	0x03420BD8 MOV X2, X0
	0x03420BDC LDR X1, [X8]
	0x03420BE0 LDR X3, [X9]
	0x03420BE4 MOV X0, X22
	0x03420BE8 BL 0x2AA5098
	0x03420BEC LDR X24, [X25 + 0x10]
	0x03420BF0 CBZ X24, 0x3420D6C
	0x03420BF4 ADRP X10, 0xD0E000
	0x03420BF8 LDR W23, [X25 + 0x18]
	0x03420BFC LDR X8, [X24]
	0x03420C00 LDP X26, X25, [X19 + 0x38]
	0x03420C04 LDR X10, [X10 + 0x7B8]
	0x03420C08 LDRH W9, [X8 + 0x12E]
	0x03420C0C LDR X1, [X10]
	0x03420C10 CBZ X9, 0x3420C34
	0x03420C14 LDR X10, [X8 + 0xB0]
	0x03420C18 ADD X10, X10, 0x8
	0x03420C1C LDUR X11, [X10 - 0x8]
	0x03420C20 CMP X11, X1
	0x03420C24 B.EQ 0x3420C44
	0x03420C28 SUBS X9, X9, 0x1
	0x03420C2C ADD X10, X10, 0x10
	0x03420C30 B.NE 0x3420C1C
	0x03420C34 MOVZ W2, 0x3
	0x03420C38 MOV X0, X24
	0x03420C3C BL 0x1C5C788
	0x03420C40 B 0x3420C54
	0x03420C44 LDR W9, [X10]
	0x03420C48 ADD W9, W9, 0x3
	0x03420C4C ADD X8, X8, W9, 0x4, SXTW
	0x03420C50 ADD X0, X8, 0x138
	0x03420C54 LDP X8, X9, [X0]
	0x03420C58 MOV X0, X24
	0x03420C5C MOV X1, X21
	0x03420C60 MOV X2, X20
	0x03420C64 MOV X3, X22
	0x03420C68 MOV X4, X31
	0x03420C6C MOV W5, W23
	0x03420C70 MOV X6, X26
	0x03420C74 MOV X7, X25
	0x03420C78 STR X9, [X31]
	0x03420C7C BLR X8
	0x03420C80 CBZ X0, 0x3420D70
	0x03420C84 ADRP X8, 0xCD6000
	0x03420C88 LDR X8, [X8 + 0x1F8]
	0x03420C8C LDR X1, [X8]
	0x03420C90 BL 0x269F5D0
	0x03420C94 ADRP X8, 0xCD6000
	0x03420C98 LDR X8, [X8 + 0x1F0]
	0x03420C9C STR X0, [X31 + 0x18]
	0x03420CA0 LDR X1, [X8]
	0x03420CA4 ADD X0, X31, 0x18
	0x03420CA8 BL 0x2677430
	0x03420CAC TBZ X0, 0x0, 0x3420CEC
	0x03420CB0 ADRP X8, 0xCD6000
	0x03420CB4 LDR X8, [X8 + 0x1E0]
	0x03420CB8 ADD X0, X31, 0x18
	0x03420CBC LDR X1, [X8]
	0x03420CC0 BL 0x2677474
	0x03420CC4 MOVN W8, 0x1
	0x03420CC8 STR W8, [X19], #0x8
	0x03420CCC LDR X0, [X27]
	0x03420CD0 LDR W8, [X0 + 0xE0]
	0x03420CD4 CBNZ W8, 0x3420CDC
	0x03420CD8 BL 0x1C16DFC
	0x03420CDC MOV X0, X19
	0x03420CE0 MOV X1, X31
	0x03420CE4 BL 0x32C4864
	0x03420CE8 B 0x3420D24
	0x03420CEC STR W31, [X19]
	0x03420CF0 LDR X8, [X31 + 0x18]
	0x03420CF4 STR X8, [X19 + 0x48]
	0x03420CF8 LDR X0, [X27]
	0x03420CFC LDR W8, [X0 + 0xE0]
	0x03420D00 CBNZ W8, 0x3420D08
	0x03420D04 BL 0x1C16DFC
	0x03420D08 ADRP X8, 0xD0E000
	0x03420D0C LDR X8, [X8 + 0xC40]
	0x03420D10 ADD X0, X19, 0x8
	0x03420D14 LDR X3, [X8]
	0x03420D18 ADD X1, X31, 0x18
	0x03420D1C MOV X2, X19
	0x03420D20 BL 0x2186180
	0x03420D24 LDP X20, X19, [X31 + 0x70]
	0x03420D28 LDP X22, X21, [X31 + 0x60]
	0x03420D2C LDP X24, X23, [X31 + 0x50]
	0x03420D30 LDP X26, X25, [X31 + 0x40]
	0x03420D34 LDP X28, X27, [X31 + 0x30]
	0x03420D38 LDP X29, X30, [X31 + 0x20]
	0x03420D3C ADD X31, X31, 0x80
	0x03420D40 RET
	0x03420D44 BL 0x1C16F20
	0x03420D48 MOV X0, X23
	0x03420D4C BL 0x1C16F18
	0x03420D50 BL 0x1C16F20
	0x03420D54 BL 0x1C16F20
	0x03420D58 BL 0x1C16F20
	0x03420D5C BL 0x1C16F28
	0x03420D60 BL 0x1C16F20
	0x03420D64 BL 0x1C16F20
	0x03420D68 BL 0x1C16F20
	0x03420D6C BL 0x1C16F20
	0x03420D70 BL 0x1C16F20
	0x03420D74 BL 0x1C16F20
	0x03420D78 B 0x3420DD4
	0x03420D7C B 0x3420DD4
	0x03420D80 B 0x3420DD4
	0x03420D84 B 0x3420DD4
	0x03420D88 B 0x3420DD4
	0x03420D8C B 0x3420DD4
	0x03420D90 B 0x3420DD4
	0x03420D94 B 0x3420DD4
	0x03420D98 B 0x3420DD4
	0x03420D9C B 0x3420DD4
	0x03420DA0 B 0x3420DD4
	0x03420DA4 B 0x3420DD4
	0x03420DA8 B 0x3420DD4
	0x03420DAC B 0x3420DD4
	0x03420DB0 B 0x3420DD4
	0x03420DB4 B 0x3420DD4
	0x03420DB8 B 0x3420DD4
	0x03420DBC B 0x3420DD4
	0x03420DC0 B 0x3420DD4
	0x03420DC4 B 0x3420DD4
	0x03420DC8 B 0x3420DD4
	0x03420DCC B 0x3420DD4
	0x03420DD0 B 0x3420DD4
	0x03420DD4 MOV X20, X1
	0x03420DD8 MOV X21, X0
	0x03420DDC B 0x3420E8C
	0x03420DE0 B 0x3420DF8
	0x03420DE4 B 0x3420DF8
	0x03420DE8 B 0x3420DF8
	0x03420DEC MOV X21, X26
	0x03420DF0 B 0x3420DF8
	0x03420DF4 B 0x3420DF8
	0x03420DF8 CMP W1, 0x1
	0x03420DFC B.NE 0x3420E14
	0x03420E00 BL 0x3EB1AD0
	0x03420E04 LDR X23, [X0]
	0x03420E08 BL 0x3EB1AE0
	0x03420E0C MOV W20, W31
	0x03420E10 B 0x3420A3C
	0x03420E14 MOV X21, X0
	0x03420E18 MOV X20, X1
	0x03420E1C MOV X23, X31
	0x03420E20 TBZ X24, 0x1F, 0x3420E88
	0x03420E24 CBZ X22, 0x3420E88
	0x03420E28 ADRP X10, 0xCD3000
	0x03420E2C LDR X8, [X22]
	0x03420E30 LDR X10, [X10 + 0xE00]
	0x03420E34 LDRH W9, [X8 + 0x12E]
	0x03420E38 LDR X1, [X10]
	0x03420E3C CBZ X9, 0x3420E60
	0x03420E40 LDR X10, [X8 + 0xB0]
	0x03420E44 ADD X10, X10, 0x8
	0x03420E48 LDUR X11, [X10 - 0x8]
	0x03420E4C CMP X11, X1
	0x03420E50 B.EQ 0x3420E70
	0x03420E54 SUBS X9, X9, 0x1
	0x03420E58 ADD X10, X10, 0x10
	0x03420E5C B.NE 0x3420E48
	0x03420E60 MOV X0, X22
	0x03420E64 MOV W2, W31
	0x03420E68 BL 0x1C5C788
	0x03420E6C B 0x3420E7C
	0x03420E70 LDRSW X9, [X10]
	0x03420E74 ADD X8, X8, X9, 0x4, LSL
	0x03420E78 ADD X0, X8, 0x138
	0x03420E7C LDP X8, X1, [X0]
	0x03420E80 MOV X0, X22
	0x03420E84 BLR X8
	0x03420E88 CBNZ X23, 0x3420F18
	0x03420E8C CMP W20, 0x1
	0x03420E90 B.NE 0x3420F38
	0x03420E94 MOV X0, X21
	0x03420E98 BL 0x3EB1AD0
	0x03420E9C MOV X20, X0
	0x03420EA0 ADRP X0, 0xCD3000
	0x03420EA4 LDR X0, [X0 + 0x7D0]
	0x03420EA8 BL 0x1C16D08
	0x03420EAC LDR X8, [X20]
	0x03420EB0 LDR X1, [X8]
	0x03420EB4 BL 0x1C17270
	0x03420EB8 TBZ X0, 0x0, 0x3420EF8
	0x03420EBC LDR X20, [X20]
	0x03420EC0 BL 0x3EB1AE0
	0x03420EC4 MOVN W8, 0x1
	0x03420EC8 STR W8, [X19], #0x8
	0x03420ECC ADRP X0, 0xCD6000
	0x03420ED0 LDR X0, [X0 + 0x280]
	0x03420ED4 BL 0x1C16D08
	0x03420ED8 LDR W8, [X0 + 0xE0]
	0x03420EDC CBNZ W8, 0x3420EE4
	0x03420EE0 BL 0x1C16DFC
	0x03420EE4 MOV X0, X19
	0x03420EE8 MOV X1, X20
	0x03420EEC MOV X2, X31
	0x03420EF0 BL 0x32C4908
	0x03420EF4 B 0x3420D24
	0x03420EF8 MOVZ W0, 0x8
	0x03420EFC BL 0x3EB1AF0
	0x03420F00 LDR X8, [X20]
	0x03420F04 STR X8, [X0]
	0x03420F08 ADRP X1, 0xA94000
	0x03420F0C ADD X1, X1, 0xE58
	0x03420F10 MOV X2, X31
	0x03420F14 BL 0x3EB1B00
	0x03420F18 MOV X0, X23
	0x03420F1C BL 0x1C16F18
	0x03420F20 MOV X20, X1
	0x03420F24 MOV X21, X0
	0x03420F28 TBNZ X24, 0x1F, 0x3420E24
	0x03420F2C B 0x3420E88
	0x03420F30 MOV X21, X0
	0x03420F34 BL 0x3EB1AE0
	0x03420F38 MOV X0, X21
	0x03420F3C BL 0x1D2C690
	0x03420F40 BL 0x1990590
	0x03420F44 STR X30, [X31 - 0x30]!
	0x03420F48 STP X22, X21, [X31 + 0x10]
	0x03420F4C STP X20, X19, [X31 + 0x20]
	0x03420F50 ADRP X21, 0xFBD000
	0x03420F54 ADRP X22, 0xCD6000
	0x03420F58 LDRB W8, [X21 + 0x61C]
	0x03420F5C LDR X22, [X22 + 0x280]
	0x03420F60 MOV X19, X1
	0x03420F64 MOV X20, X0
	0x03420F68 TBNZ X8, 0x0, 0x3420F80
	0x03420F6C ADRP X0, 0xCD6000
	0x03420F70 LDR X0, [X0 + 0x280]
	0x03420F74 BL 0x1C16CF4
	0x03420F78 MOVZ W8, 0x1
	0x03420F7C STRB W8, [X21 + 0x61C]
	0x03420F80 LDR X0, [X22]
	0x03420F84 LDR W8, [X0 + 0xE0]
	0x03420F88 CBNZ W8, 0x3420F90
	0x03420F8C BL 0x1C16DFC
	0x03420F90 ADD X0, X20, 0x8
	0x03420F94 MOV X1, X19
	0x03420F98 LDP X20, X19, [X31 + 0x20]
	0x03420F9C LDP X22, X21, [X31 + 0x10]
	0x03420FA0 MOV X2, X31
	0x03420FA4 LDR X30, [X31], #0x30
	0x03420FA8 B 0x32C477C
	0x03420FAC SUB X31, X31, 0x70
	0x03420FB0 STR X30, [X31 + 0x10]
	0x03420FB4 STP X28, X27, [X31 + 0x20]
	0x03420FB8 STP X26, X25, [X31 + 0x30]
	0x03420FBC STP X24, X23, [X31 + 0x40]
	0x03420FC0 STP X22, X21, [X31 + 0x50]
	0x03420FC4 STP X20, X19, [X31 + 0x60]
	0x03420FC8 ADRP X20, 0xFBD000
	0x03420FCC LDRB W8, [X20 + 0x61D]
	0x03420FD0 MOV X19, X0
	0x03420FD4 TBNZ X8, 0x0, 0x34210A0
	0x03420FD8 ADRP X0, 0xD0E000
	0x03420FDC LDR X0, [X0 + 0xC50]
	0x03420FE0 BL 0x1C16CF4
	0x03420FE4 ADRP X0, 0xCD6000
	0x03420FE8 LDR X0, [X0 + 0x280]
	0x03420FEC BL 0x1C16CF4
	0x03420FF0 ADRP X0, 0xCDC000
	0x03420FF4 LDR X0, [X0 + 0x8D8]
	0x03420FF8 BL 0x1C16CF4
	0x03420FFC ADRP X0, 0xCD4000
	0x03421000 LDR X0, [X0 + 0x810]
	0x03421004 BL 0x1C16CF4
	0x03421008 ADRP X0, 0xCD3000
	0x0342100C LDR X0, [X0 + 0x6C0]
	0x03421010 BL 0x1C16CF4
	0x03421014 ADRP X0, 0xCD3000
	0x03421018 LDR X0, [X0 + 0x6D0]
	0x0342101C BL 0x1C16CF4
	0x03421020 ADRP X0, 0xD0D000
	0x03421024 LDR X0, [X0 + 0x7B8]
	0x03421028 BL 0x1C16CF4
	0x0342102C ADRP X0, 0xCD5000
	0x03421030 LDR X0, [X0 + 0x1E0]
	0x03421034 BL 0x1C16CF4
	0x03421038 ADRP X0, 0xCD5000
	0x0342103C LDR X0, [X0 + 0x1F0]
	0x03421040 BL 0x1C16CF4
	0x03421044 ADRP X0, 0xCD5000
	0x03421048 LDR X0, [X0 + 0x1F8]
	0x0342104C BL 0x1C16CF4
	0x03421050 ADRP X0, 0xCDB000
	0x03421054 LDR X0, [X0 + 0x3A0]
	0x03421058 BL 0x1C16CF4
	0x0342105C ADRP X0, 0xCFB000
	0x03421060 LDR X0, [X0 + 0x4E0]
	0x03421064 BL 0x1C16CF4
	0x03421068 ADRP X0, 0xD0D000
	0x0342106C LDR X0, [X0 + 0xC58]
	0x03421070 BL 0x1C16CF4
	0x03421074 ADRP X0, 0xD0D000
	0x03421078 LDR X0, [X0 + 0x7D0]
	0x0342107C BL 0x1C16CF4
	0x03421080 ADRP X0, 0xD0D000
	0x03421084 LDR X0, [X0 + 0x7D8]
	0x03421088 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFBE000
	013 Move W8, [X20+1559]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {75}
	019 Move X0, 0xD0F000
	020 Move X0, [X0+3072]
	021 Call 0x1C17CF4
	022 Move X0, 0xCD7000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xCDD000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xCD5000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xCD5000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xCD5000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xD0F000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0xCD7000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xCD7000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xCD7000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xCDD000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xCD6000
	053 Move X0, [X0+2600]
	054 Call 0x1C17CF4
	055 Move X0, 0xD0F000
	056 Move X0, [X0+3080]
	057 Call 0x1C17CF4
	058 Move X0, 0xD0F000
	059 Move X0, [X0+2048]
	060 Call 0x1C17CF4
	061 Move X0, 0xD0F000
	062 Move X0, [X0+2000]
	063 Call 0x1C17CF4
	064 Move X0, 0xD0F000
	065 Move X0, [X0+2008]
	066 Call 0x1C17CF4
	067 Move X0, 0xCD4000
	068 Move X0, [X0+2440]
	069 Call 0x1C17CF4
	070 Move X0, 0xCFD000
	071 Move X0, [X0+1224]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+1559], W8
	075 Move [X31+8], X31
	076 Move X27, 0xCD7000
	077 Move W8, [X19]
	078 Move X27, [X27+640]
	079 Compare W8, 0
	080 JumpIfEqual {215}
	081 Move X21, [X19+32]
	082 Compare X21, 0
	083 JumpIfEqual {298}
	084 Move X8, 0xCD6000
	085 Move X8, [X8+2600]
	086 Move X0, [X8]
	087 Move X8, 0xD0F000
	088 Move X8, [X8+3080]
	089 Move X24, [X19+40]
	090 Move W9, [X0+224]
	091 Move X20, [X8]
	092 Compare W9, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X31
	097 Call Uri.EscapeDataString, X0
	098 Compare X20, 0
	099 JumpIfEqual {316}
	100 Move X8, 0xD0F000
	101 Move X8, [X8+2048]
	102 Move X2, X0
	103 Move X1, [X8]
	104 Move X0, X20
	105 Move X3, X31
	106 Call String.Replace, X0, X1, X2
	107 Compare X24, 0
	108 JumpIfEqual {317}
	109 Move X21, X0
	110 Move X0, [X24+32]
	111 Compare X0, 0
	112 JumpIfEqual {318}
	113 Move X8, 0xCD4000
	114 Move X8, [X8+2440]
	115 Move X20, [X8]
	116 Move X1, X31
	117 Call Uri.get_AbsolutePath, X0
	118 Move X8, 0xCDD000
	119 Move X8, [X8+2264]
	120 Move X22, X0
	121 Move X0, [X8]
	122 Move W1, 1
	123 Call 0x1C17D6C
	124 Move X1, X0
	125 Compare X1, 0
	126 JumpIfEqual {319}
	127 Move W8, [X1+24]
	128 Compare W8, 0
	129 JumpIfEqual {320}
	130 Move W8, 47
	131 NotImplemented "Instruction STRH not yet implemented."
	132 Compare X22, 0
	133 JumpIfEqual {321}
	134 Move X0, X22
	135 Move X2, X31
	136 Call String.TrimEnd, X0, X1
	137 Move X1, X21
	138 Move X2, X31
	139 Call String.Concat, X0, X1
	140 Move X8, 0xCDD000
	141 Move X8, [X8+928]
	142 Move X22, X0
	143 Move X23, [X24+32]
	144 Move X0, [X8]
	145 Call 0x1C17F10
	146 Move X21, X0
	147 Move X1, X23
	148 Move X2, X31
	149 Call UriBuilder..ctor, X0, X1
	150 Compare X21, 0
	151 JumpIfEqual {322}
	152 Move X0, X21
	153 Move X1, X22
	154 Move X2, X31
	155 Call UriBuilder.set_Path, X0, X1
	156 Move X0, X21
	157 Move X1, X20
	158 Move X2, X31
	159 Call UriBuilder.set_Query, X0, X1
	160 Move X0, X21
	161 Move X1, X31
	162 Call UriBuilder.get_Uri, X0
	163 Move X8, 0xCFD000
	164 Move X9, 0xCD5000
	165 Move X8, [X8+1224]
	166 Move X9, [X9+1744]
	167 Move X20, X0
	168 Move X21, [X8]
	169 Move X0, [X9]
	170 Call 0x1C17F10
	171 Move X8, 0xCD5000
	172 Move X8, [X8+1728]
	173 Move X22, X0
	174 Move X1, [X8]
	175 Call Dictionary`2<Object, Object>..ctor, X0
	176 Move X8, 0xD0F000
	177 Move X8, [X8+2008]
	178 Move X1, [X19+48]
	179 Move X0, [X8]
	180 Move X2, X31
	181 Call String.Concat, X0, X1
	182 Compare X22, 0
	183 JumpIfEqual {323}
	184 Move X8, 0xD0F000
	185 Move X8, [X8+2000]
	186 Move X9, 0xCD5000
	187 Move X9, [X9+2064]
	188 Move X2, X0
	189 Move X1, [X8]
	190 Move X3, [X9]
	191 Move X0, X22
	192 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	193 Move X23, [X24+16]
	194 Compare X23, 0
	195 JumpIfEqual {324}
	196 Move X10, 0xD0F000
	197 Move X10, [X10+1976]
	198 Move X8, [X23]
	199 Move W25, [X24+24]
	200 Move X26, [X19+56]
	201 Move X24, [X19+64]
	202 Move X1, [X10]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move W2, 3
	213 Move X0, X23
	214 Call 0x1C5D788
	215 Move X8, [X19+72]
	216 Move TEMP, 0
	217 Not TEMP
	218 Move W9, TEMP
	219 Move [X31+8], X8
	220 Move [X19+72], X31
	221 Move [X19], W9
	222 Move W9, [X10]
	223 Add W9, W9, 3
	224 Add X8, X8, W9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X9, [X0+8]
	228 Move X0, X23
	229 Move X1, X21
	230 Move X2, X20
	231 Move X3, X22
	232 Move X4, X31
	233 Move W5, W25
	234 Move X6, X26
	235 Move X7, X24
	236 Move [X31], X9
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X0, 0
	239 JumpIfEqual {325}
	240 Move X8, 0xCD7000
	241 Move X8, [X8+504]
	242 Move X1, [X8]
	243 Call Task`1<Object>.GetAwaiter, X0
	244 Move X8, 0xCD7000
	245 Move X8, [X8+496]
	246 Move [X31+8], X0
	247 Move X1, [X8]
	248 Add X0, X31, 8
	249 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {271}
	254 Move X8, 0xCD7000
	255 Move X8, [X8+480]
	256 Add X0, X31, 8
	257 Move X1, [X8]
	258 Call TaskAwaiter`1<Object>.GetResult, X0
	259 Move TEMP, 1
	260 Not TEMP
	261 Move W8, TEMP
	262 Move [X19+8], W8
	263 Move X0, [X27]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, X19
	269 Move X1, X31
	270 Call AsyncTaskMethodBuilder.SetResult, X0
	271 Move [X19], W31
	272 Move X8, [X31+8]
	273 Move [X19+72], X8
	274 Move X0, [X27]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X8, 0xD0F000
	280 Move X8, [X8+3072]
	281 Add X0, X19, 8
	282 Move X3, [X8]
	283 Add X1, X31, 8
	284 Move X2, X19
	285 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	286 Move X20, [X31+80]
	287 Move X19, [X31+88]
	288 Move X22, [X31+64]
	289 Move X21, [X31+72]
	290 Move X24, [X31+48]
	291 Move X23, [X31+56]
	292 Move X26, [X31+32]
	293 Move X25, [X31+40]
	294 Move X30, [X31+16]
	295 Move X27, [X31+24]
	296 Add X31, X31, 96
	297 Return 
	298 Move X0, 0xCDC000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xD0F000
	304 Move X0, [X0+2056]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xD0F000
	311 Move X0, [X0+3088]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F28
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Move X20, X0
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, X20
	329 Call 0x3EB2AD0
	330 Move X20, X0
	331 Move X0, 0xCD3000
	332 Move X0, [X0+2000]
	333 Call 0x1C17D08
	334 Move X8, [X20]
	335 Move X1, [X8]
	336 Call 0x1C18270
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {358}
	341 Move X20, [X20]
	342 Call 0x3EB2AE0
	343 Move TEMP, 1
	344 Not TEMP
	345 Move W8, TEMP
	346 Move [X19+8], W8
	347 Move X0, 0xCD6000
	348 Move X0, [X0+640]
	349 Call 0x1C17D08
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move X0, X19
	355 Move X1, X20
	356 Move X2, X31
	357 Call AsyncTaskMethodBuilder.SetException, X0, X1
	358 Move W0, 8
	359 Call 0x3EB2AF0
	360 Move X8, [X20]
	361 Move [X0], X8
	362 Move X1, 0xA94000
	363 Add X1, X1, 3672
	364 Move X2, X31
	365 Call 0x3EB2B00
	366 Move X20, X0
	367 Call 0x3EB2AE0
	368 Move X0, X20
	369 Call 0x1D2D690
	370 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342108C ADRP X0, 0xCD2000
	0x03421090 LDR X0, [X0 + 0x988]
	0x03421094 BL 0x1C16CF4
	0x03421098 MOVZ W8, 0x1
	0x0342109C STRB W8, [X20 + 0x61D]
	0x034210A0 STR X31, [X31 + 0x18]
	0x034210A4 ADRP X28, 0xCD5000
	0x034210A8 LDR W8, [X19]
	0x034210AC LDR X28, [X28 + 0x280]
	0x034210B0 CBZ W8, 0x3421290
	0x034210B4 LDR X8, [X19 + 0x20]
	0x034210B8 CBZ X8, 0x34213A8
	0x034210BC LDR X25, [X19 + 0x28]
	0x034210C0 CBZ X25, 0x34213F0
	0x034210C4 LDR X0, [X25 + 0x20]
	0x034210C8 CBZ X0, 0x34213F4
	0x034210CC ADRP X8, 0xD0D000
	0x034210D0 ADRP X9, 0xCD2000
	0x034210D4 LDR X8, [X8 + 0xC58]
	0x034210D8 LDR X9, [X9 + 0x988]
	0x034210DC LDR X21, [X8]
	0x034210E0 LDR X20, [X9]
	0x034210E4 MOV X1, X31
	0x034210E8 BL 0x361B448
	0x034210EC ADRP X8, 0xCDB000
	0x034210F0 LDR X8, [X8 + 0x8D8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFBD000
	007 Move X22, 0xCD6000
	008 Move W8, [X21+1560]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD6000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1560], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

