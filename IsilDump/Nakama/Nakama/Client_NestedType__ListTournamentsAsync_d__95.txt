Type: Nakama.Client/<ListTournamentsAsync>d__95

Method: System.Void MoveNext()

Disassembly:
	0x03464EF4 MOV X21, X0
	0x03464EF8 MOV X1, X31
	0x03464EFC BL 0x344BDD0
	0x03464F00 STR X21, [X19 + 0x60]
	0x03464F04 CBZ X21, 0x34652BC
	0x03464F08 LDR X8, [X19 + 0x20]
	0x03464F0C STR X8, [X21 + 0x10]
	0x03464F10 LDR X8, [X19 + 0x28]
	0x03464F14 STR X8, [X21 + 0x18]
	0x03464F18 LDR V0, [X19 + 0x3]
	0x03464F1C STR V0, [X21 + 0x2]
	0x03464F20 LDR W8, [X19 + 0x40]
	0x03464F24 STR W8, [X21 + 0x30]
	0x03464F28 LDR X8, [X19 + 0x48]
	0x03464F2C STR X8, [X21 + 0x38]
	0x03464F30 LDR X8, [X19 + 0x50]
	0x03464F34 STR X8, [X21 + 0x40]
	0x03464F38 CBZ X20, 0x34652C0
	0x03464F3C LDRB W8, [X20 + 0x10]
	0x03464F40 CBZ W8, 0x3465128
	0x03464F44 LDR X8, [X19 + 0x60]
	0x03464F48 CBZ X8, 0x34652C4
	0x03464F4C LDR X21, [X8 + 0x18]
	0x03464F50 CBZ X21, 0x34652C8
	0x03464F54 ADRP X23, 0xC90000
	0x03464F58 LDR X8, [X21]
	0x03464F5C LDR X23, [X23 + 0x818]
	0x03464F60 LDRH W9, [X8 + 0x12E]
	0x03464F64 LDR X1, [X23]
	0x03464F68 CBZ X9, 0x3464F8C
	0x03464F6C LDR X10, [X8 + 0xB0]
	0x03464F70 ADD X10, X10, 0x8
	0x03464F74 LDUR X11, [X10 - 0x8]
	0x03464F78 CMP X11, X1
	0x03464F7C B.EQ 0x3464F9C
	0x03464F80 SUBS X9, X9, 0x1
	0x03464F84 ADD X10, X10, 0x10
	0x03464F88 B.NE 0x3464F74
	0x03464F8C MOVZ W2, 0x7
	0x03464F90 MOV X0, X21
	0x03464F94 BL 0x1C5C788
	0x03464F98 B 0x3464FAC
	0x03464F9C LDR W9, [X10]
	0x03464FA0 ADD W9, W9, 0x7
	0x03464FA4 ADD X8, X8, W9, 0x4, SXTW
	0x03464FA8 ADD X0, X8, 0x138
	0x03464FAC LDP X8, X1, [X0]
	0x03464FB0 MOV X0, X21
	0x03464FB4 BLR X8
	0x03464FB8 MOV X1, X31
	0x03464FBC BL 0x32277A8
	0x03464FC0 TBNZ X0, 0x0, 0x3465124
	0x03464FC4 LDR X8, [X19 + 0x60]
	0x03464FC8 CBZ X8, 0x34652CC
	0x03464FCC ADRP X9, 0xC90000
	0x03464FD0 LDR X9, [X9 + 0x9F0]
	0x03464FD4 LDR X21, [X8 + 0x18]
	0x03464FD8 LDR X0, [X9]
	0x03464FDC LDR W9, [X0 + 0xE0]
	0x03464FE0 CBNZ W9, 0x3464FE8
	0x03464FE4 BL 0x1C16DFC
	0x03464FE8 MOV X0, X31
	0x03464FEC BL 0x33616A4
	0x03464FF0 ADRP X22, 0xC91000
	0x03464FF4 LDR X22, [X22 + 0xA10]
	0x03464FF8 MOV X8, X0
	0x03464FFC STR X8, [X31 + 0x28]
	0x03465000 LDR X0, [X22]
	0x03465004 LDR W8, [X0 + 0xE0]
	0x03465008 CBNZ W8, 0x3465014
	0x0346500C BL 0x1C16DFC
	0x03465010 LDR X0, [X22]
	0x03465014 LDR X8, [X0 + 0xB8]
	0x03465018 LDR X1, [X8]
	0x0346501C ADD X0, X31, 0x28
	0x03465020 MOV X2, X31
	0x03465024 BL 0x335FC68
	0x03465028 CBZ X21, 0x34652D0
	0x0346502C LDR X8, [X21]
	0x03465030 LDR X1, [X23]
	0x03465034 MOV X22, X0
	0x03465038 LDRH W9, [X8 + 0x12E]
	0x0346503C CBZ X9, 0x3465060
	0x03465040 LDR X10, [X8 + 0xB0]
	0x03465044 ADD X10, X10, 0x8
	0x03465048 LDUR X11, [X10 - 0x8]
	0x0346504C CMP X11, X1
	0x03465050 B.EQ 0x3465070
	0x03465054 SUBS X9, X9, 0x1
	0x03465058 ADD X10, X10, 0x10
	0x0346505C B.NE 0x3465048
	0x03465060 MOVZ W2, 0xB
	0x03465064 MOV X0, X21
	0x03465068 BL 0x1C5C788
	0x0346506C B 0x3465080
	0x03465070 LDR W9, [X10]
	0x03465074 ADD W9, W9, 0xB
	0x03465078 ADD X8, X8, W9, 0x4, SXTW
	0x0346507C ADD X0, X8, 0x138
	0x03465080 LDP X8, X2, [X0]
	0x03465084 MOV X0, X21
	0x03465088 MOV X1, X22
	0x0346508C BLR X8
	0x03465090 TBZ X0, 0x0, 0x3465124
	0x03465094 LDR X8, [X19 + 0x60]
	0x03465098 CBZ X8, 0x34652D4
	0x0346509C LDR X1, [X8 + 0x18]
	0x034650A0 LDR X3, [X19 + 0x58]
	0x034650A4 LDR X4, [X8 + 0x40]
	0x034650A8 MOV X0, X20
	0x034650AC MOV X2, X31
	0x034650B0 MOV X5, X31
	0x034650B4 BL 0x34440A8
	0x034650B8 CBZ X0, 0x34652D8
	0x034650BC ADRP X8, 0xC8F000
	0x034650C0 LDR X8, [X8 + 0x840]
	0x034650C4 LDR X1, [X8]
	0x034650C8 BL 0x269F5D0
	0x034650CC ADRP X8, 0xC8F000
	0x034650D0 LDR X8, [X8 + 0x838]
	0x034650D4 STR X0, [X31 + 0x20]
	0x034650D8 LDR X1, [X8]
	0x034650DC ADD X0, X31, 0x20
	0x034650E0 BL 0x2677430
	0x034650E4 TBNZ X0, 0x0, 0x3464ECC
	0x034650E8 STR W31, [X19]
	0x034650EC LDR X8, [X31 + 0x20]
	0x034650F0 STR X8, [X19 + 0x68]
	0x034650F4 LDR X0, [X25]
	0x034650F8 LDR W8, [X0 + 0xE0]
	0x034650FC CBNZ W8, 0x3465104
	0x03465100 BL 0x1C16DFC
	0x03465104 ADRP X8, 0xCCB000
	0x03465108 LDR X8, [X8 + 0x370]
	0x0346510C ADD X0, X19, 0x8
	0x03465110 LDR X3, [X8]
	0x03465114 ADD X1, X31, 0x20
	0x03465118 MOV X2, X19
	0x0346511C BL 0x1FBCF50
	0x03465120 B 0x3465294
	0x03465124 CBZ X20, 0x34652B8
	0x03465128 ADRP X8, 0xCCA000
	0x0346512C LDR X8, [X8 + 0x7C0]
	0x03465130 LDR X21, [X20 + 0x58]
	0x03465134 LDR X23, [X19 + 0x60]
	0x03465138 LDR X0, [X8]
	0x0346513C BL 0x1C16F10
	0x03465140 ADRP X8, 0xCCB000
	0x03465144 LDR X8, [X8 + 0x378]
	0x03465148 MOV X22, X0
	0x0346514C LDR X2, [X8]
	0x03465150 MOV X1, X23
	0x03465154 MOV X3, X31
	0x03465158 BL 0x2D27AA8
	0x0346515C LDR X8, [X19 + 0x60]
	0x03465160 CBZ X8, 0x34652AC
	0x03465164 ADRP X9, 0xCCA000
	0x03465168 LDR X23, [X19 + 0x58]
	0x0346516C LDR X9, [X9 + 0x7C8]
	0x03465170 CBNZ X23, 0x3465178
	0x03465174 LDR X23, [X20 + 0x18]
	0x03465178 LDR X20, [X8 + 0x18]
	0x0346517C LDR X1, [X8 + 0x40]
	0x03465180 LDR X2, [X9]
	0x03465184 STP X31, X31, [X31 + 0x8]
	0x03465188 ADD X0, X31, 0x8
	0x0346518C BL 0x242E368
	0x03465190 ADRP X8, 0xCCA000
	0x03465194 LDR X8, [X8 + 0x7D0]
	0x03465198 LDR X0, [X8]
	0x0346519C BL 0x1C16F10
	0x034651A0 LDP X3, X4, [X31 + 0x8]
	0x034651A4 MOV X24, X0
	0x034651A8 MOV X1, X20
	0x034651AC MOV X2, X23
	0x034651B0 BL 0x3465404
	0x034651B4 CBZ X21, 0x34652B0
	0x034651B8 ADRP X8, 0xCCA000
	0x034651BC LDR X8, [X8 + 0x7D8]
	0x034651C0 LDR X3, [X8]
	0x034651C4 MOV X0, X21
	0x034651C8 MOV X1, X22
	0x034651CC MOV X2, X24
	0x034651D0 BL 0x2243230
	0x034651D4 CBZ X0, 0x34652B4
	0x034651D8 ADRP X8, 0xC90000
	0x034651DC LDR X8, [X8 + 0xDC0]
	0x034651E0 LDR X1, [X8]
	0x034651E4 BL 0x269F5D0
	0x034651E8 ADRP X8, 0xC90000
	0x034651EC LDR X8, [X8 + 0xDB8]
	0x034651F0 STR X0, [X31 + 0x18]
	0x034651F4 LDR X1, [X8]
	0x034651F8 ADD X0, X31, 0x18
	0x034651FC BL 0x2677430
	0x03465200 TBZ X0, 0x0, 0x3465258
	0x03465204 ADRP X8, 0xC90000
	0x03465208 LDR X8, [X8 + 0xDB0]
	0x0346520C ADD X0, X31, 0x18
	0x03465210 LDR X1, [X8]
	0x03465214 BL 0x2677474
	0x03465218 MOVN W8, 0x1
	0x0346521C STR W8, [X19]
	0x03465220 STR X31, [X19 + 0x60]
	0x03465224 MOV X20, X0
	0x03465228 LDR X0, [X25]
	0x0346522C ADRP X21, 0xCCA000
	0x03465230 ADD X19, X19, 0x8
	0x03465234 LDR W8, [X0 + 0xE0]
	0x03465238 LDR X21, [X21 + 0xF0]
	0x0346523C CBNZ W8, 0x3465244
	0x03465240 BL 0x1C16DFC
	0x03465244 LDR X2, [X21]
	0x03465248 MOV X0, X19
	0x0346524C MOV X1, X20
	0x03465250 BL 0x26322B0
	0x03465254 B 0x3465294
	0x03465258 MOVZ W8, 0x1
	0x0346525C STR W8, [X19]
	0x03465260 LDR X8, [X31 + 0x18]
	0x03465264 STR X8, [X19 + 0x70]
	0x03465268 LDR X0, [X25]
	0x0346526C LDR W8, [X0 + 0xE0]
	0x03465270 CBNZ W8, 0x3465278
	0x03465274 BL 0x1C16DFC
	0x03465278 ADRP X8, 0xCCB000
	0x0346527C LDR X8, [X8 + 0x368]
	0x03465280 ADD X0, X19, 0x8
	0x03465284 LDR X3, [X8]
	0x03465288 ADD X1, X31, 0x18
	0x0346528C MOV X2, X19
	0x03465290 BL 0x1FBCF50
	0x03465294 LDP X20, X19, [X31 + 0x60]
	0x03465298 LDP X22, X21, [X31 + 0x50]
	0x0346529C LDP X24, X23, [X31 + 0x40]
	0x034652A0 LDP X30, X25, [X31 + 0x30]
	0x034652A4 ADD X31, X31, 0x70
	0x034652A8 RET
	0x034652AC BL 0x1C16F20
	0x034652B0 BL 0x1C16F20
	0x034652B4 BL 0x1C16F20
	0x034652B8 BL 0x1C16F20
	0x034652BC BL 0x1C16F20
	0x034652C0 BL 0x1C16F20
	0x034652C4 BL 0x1C16F20
	0x034652C8 BL 0x1C16F20
	0x034652CC BL 0x1C16F20
	0x034652D0 BL 0x1C16F20
	0x034652D4 BL 0x1C16F20
	0x034652D8 BL 0x1C16F20
	0x034652DC B 0x3465350
	0x034652E0 B 0x3465350
	0x034652E4 B 0x3465350
	0x034652E8 B 0x3465350
	0x034652EC B 0x3465350
	0x034652F0 B 0x3465350
	0x034652F4 B 0x3465350
	0x034652F8 B 0x3465350
	0x034652FC B 0x3465350
	0x03465300 B 0x3465350
	0x03465304 B 0x3465350
	0x03465308 B 0x3465350
	0x0346530C B 0x3465350
	0x03465310 B 0x3465350
	0x03465314 B 0x3465350
	0x03465318 B 0x3465350
	0x0346531C B 0x3465350
	0x03465320 B 0x3465350
	0x03465324 B 0x3465350
	0x03465328 B 0x3465350
	0x0346532C B 0x3465350
	0x03465330 B 0x3465350
	0x03465334 B 0x3465350
	0x03465338 B 0x3465350
	0x0346533C B 0x3465350
	0x03465340 B 0x3465350
	0x03465344 B 0x3465350
	0x03465348 B 0x3465350
	0x0346534C B 0x3465350
	0x03465350 MOV X20, X0
	0x03465354 CMP W1, 0x1
	0x03465358 B.NE 0x34653F8
	0x0346535C MOV X0, X20
	0x03465360 BL 0x3EB1AD0
	0x03465364 MOV X20, X0
	0x03465368 ADRP X0, 0xC8E000
	0x0346536C LDR X0, [X0 + 0x7D0]
	0x03465370 BL 0x1C16D08
	0x03465374 LDR X8, [X20]
	0x03465378 LDR X1, [X8]
	0x0346537C BL 0x1C17270
	0x03465380 TBZ X0, 0x0, 0x34653D0
	0x03465384 LDR X20, [X20]
	0x03465388 BL 0x3EB1AE0
	0x0346538C MOVN W8, 0x1
	0x03465390 STR X31, [X19 + 0x60]
	0x03465394 STR W8, [X19], #0x8
	0x03465398 ADRP X0, 0xCC9000
	0x0346539C LDR X0, [X0 + 0x6E0]
	0x034653A0 BL 0x1C16D08
	0x034653A4 LDR W8, [X0 + 0xE0]
	0x034653A8 CBNZ W8, 0x34653B0
	0x034653AC BL 0x1C16DFC
	0x034653B0 ADRP X0, 0xCCA000
	0x034653B4 LDR X0, [X0 + 0x130]
	0x034653B8 BL 0x1C16D08
	0x034653BC MOV X2, X0
	0x034653C0 MOV X0, X19
	0x034653C4 MOV X1, X20
	0x034653C8 BL 0x26324C8
	0x034653CC B 0x3465294
	0x034653D0 MOVZ W0, 0x8
	0x034653D4 BL 0x3EB1AF0
	0x034653D8 LDR X8, [X20]
	0x034653DC STR X8, [X0]
	0x034653E0 ADRP X1, 0xA4F000
	0x034653E4 ADD X1, X1, 0xE58
	0x034653E8 MOV X2, X31
	0x034653EC BL 0x3EB1B00
	0x034653F0 MOV X20, X0
	0x034653F4 BL 0x3EB1AE0
	0x034653F8 MOV X0, X20
	0x034653FC BL 0x1D2C690
	0x03465400 BL 0x1990590
	0x03465404 STR X30, [X31 - 0x40]!
	0x03465408 STP X24, X23, [X31 + 0x10]
	0x0346540C STP X22, X21, [X31 + 0x20]
	0x03465410 STP X20, X19, [X31 + 0x30]
	0x03465414 ADRP X24, 0xF78000
	0x03465418 LDRB W8, [X24 + 0x845]
	0x0346541C MOV X19, X4
	0x03465420 MOV X20, X3
	0x03465424 MOV X21, X2
	0x03465428 MOV X23, X1
	0x0346542C MOV X22, X0
	0x03465430 TBNZ X8, 0x0, 0x3465448
	0x03465434 ADRP X0, 0xC8F000
	0x03465438 LDR X0, [X0 + 0x818]
	0x0346543C BL 0x1C16CF4
	0x03465440 MOVZ W8, 0x1
	0x03465444 STRB W8, [X24 + 0x845]
	0x03465448 CBZ X23, 0x34654D4
	0x0346544C ADRP X10, 0xC8F000
	0x03465450 LDR X8, [X23]
	0x03465454 LDR X10, [X10 + 0x818]
	0x03465458 LDRH W9, [X8 + 0x12E]
	0x0346545C LDR X1, [X10]
	0x03465460 CBZ X9, 0x3465484
	0x03465464 LDR X10, [X8 + 0xB0]
	0x03465468 ADD X10, X10, 0x8
	0x0346546C LDUR X11, [X10 - 0x8]
	0x03465470 CMP X11, X1
	0x03465474 B.EQ 0x3465494
	0x03465478 SUBS X9, X9, 0x1
	0x0346547C ADD X10, X10, 0x10
	0x03465480 B.NE 0x346546C
	0x03465484 MOV X0, X23
	0x03465488 MOV W2, W31
	0x0346548C BL 0x1C5C788
	0x03465490 B 0x34654A0
	0x03465494 LDRSW X9, [X10]
	0x03465498 ADD X8, X8, X9, 0x4, LSL
	0x0346549C ADD X0, X8, 0x138
	0x034654A0 LDP X8, X1, [X0]
	0x034654A4 MOV X0, X23
	0x034654A8 BLR X8
	0x034654AC MOV X1, X0
	0x034654B0 MOV X0, X22
	0x034654B4 MOV X2, X21
	0x034654B8 MOV X3, X20
	0x034654BC MOV X4, X19
	0x034654C0 LDP X20, X19, [X31 + 0x30]
	0x034654C4 LDP X22, X21, [X31 + 0x20]
	0x034654C8 LDP X24, X23, [X31 + 0x10]
	0x034654CC LDR X30, [X31], #0x40
	0x034654D0 B 0x3478040
	0x034654D4 BL 0x1C16F20
	0x034654D8 STR X30, [X31 - 0x30]!
	0x034654DC STP X22, X21, [X31 + 0x10]
	0x034654E0 STP X20, X19, [X31 + 0x20]
	0x034654E4 ADRP X22, 0xF78000
	0x034654E8 ADRP X21, 0xCC9000
	0x034654EC LDRB W8, [X22 + 0x7BE]
	0x034654F0 LDR X21, [X21 + 0x6E0]
	0x034654F4 MOV X19, X1
	0x034654F8 MOV X20, X0
	0x034654FC TBNZ X8, 0x0, 0x3465520
	0x03465500 ADRP X0, 0xCCA000
	0x03465504 LDR X0, [X0 + 0x138]
	0x03465508 BL 0x1C16CF4
	0x0346550C ADRP X0, 0xCC9000
	0x03465510 LDR X0, [X0 + 0x6E0]
	0x03465514 BL 0x1C16CF4
	0x03465518 MOVZ W8, 0x1
	0x0346551C STRB W8, [X22 + 0x7BE]
	0x03465520 LDR X0, [X21]
	0x03465524 ADRP X21, 0xCCA000
	0x03465528 LDR W8, [X0 + 0xE0]
	0x0346552C LDR X21, [X21 + 0x138]
	0x03465530 CBNZ W8, 0x3465538
	0x03465534 BL 0x1C16DFC
	0x03465538 LDR X2, [X21]
	0x0346553C ADD X0, X20, 0x8
	0x03465540 MOV X1, X19
	0x03465544 LDP X20, X19, [X31 + 0x20]
	0x03465548 LDP X22, X21, [X31 + 0x10]
	0x0346554C LDR X30, [X31], #0x30
	0x03465550 B 0x2632228
	0x03465554 SUB X31, X31, 0x70
	0x03465558 STP X30, X25, [X31 + 0x30]
	0x0346555C STP X24, X23, [X31 + 0x40]
	0x03465560 STP X22, X21, [X31 + 0x50]
	0x03465564 STP X20, X19, [X31 + 0x60]
	0x03465568 ADRP X20, 0xF78000
	0x0346556C LDRB W8, [X20 + 0x7BF]
	0x03465570 MOV X19, X0
	0x03465574 TBNZ X8, 0x0, 0x3465628
	0x03465578 ADRP X0, 0xCCB000
	0x0346557C LDR X0, [X0 + 0x388]
	0x03465580 BL 0x1C16CF4
	0x03465584 ADRP X0, 0xCCB000
	0x03465588 LDR X0, [X0 + 0x390]
	0x0346558C BL 0x1C16CF4
	0x03465590 ADRP X0, 0xC91000
	0x03465594 LDR X0, [X0 + 0x280]
	0x03465598 BL 0x1C16CF4
	0x0346559C ADRP X0, 0xC90000
	0x034655A0 LDR X0, [X0 + 0xA10]
	0x034655A4 BL 0x1C16CF4
	0x034655A8 ADRP X0, 0xC8F000
	0x034655AC LDR X0, [X0 + 0x9F0]
	0x034655B0 BL 0x1C16CF4
	0x034655B4 ADRP X0, 0xC96000
	0x034655B8 LDR X0, [X0 + 0x818]
	0x034655BC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF7A000
	011 Move W8, [X20+1977]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCCD000
	018 Move X0, [X0+728]
	019 Call 0x1C17CF4
	020 Move X0, 0xCCD000
	021 Move X0, [X0+736]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCC000
	024 Move X0, [X0+488]
	025 Call 0x1C17CF4
	026 Move X0, 0xCCB000
	027 Move X0, [X0+1800]
	028 Call 0x1C17CF4
	029 Move X0, 0xC92000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC91000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCD000
	036 Move X0, [X0+744]
	037 Call 0x1C17CF4
	038 Move X0, 0xC91000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCC000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCC000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCD000
	048 Move X0, [X0+752]
	049 Call 0x1C17CF4
	050 Move X0, 0xC91000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCCD000
	054 Move X0, [X0+760]
	055 Call 0x1C17CF4
	056 Move X0, 0xCCD000
	057 Move X0, [X0+768]
	058 Call 0x1C17CF4
	059 Move X0, 0xC91000
	060 Move X0, [X0+2104]
	061 Call 0x1C17CF4
	062 Move X0, 0xC91000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCCD000
	066 Move X0, [X0+776]
	067 Call 0x1C17CF4
	068 Move X0, 0xCCD000
	069 Move X0, [X0+784]
	070 Call 0x1C17CF4
	071 Move X0, 0xCCD000
	072 Move X0, [X0+792]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1977], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCCA000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1800]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+120]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+120], X31
	092 Move [X19], W9
	093 Move X8, [X19+112]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+112], X31
	099 Move [X19], W9
	100 Move X8, 0xC90000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCCC000
	106 Move X8, [X8+792]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass95_0..ctor, X0
	112 Move [X19+104], X21
	113 Compare X21, 0
	114 JumpIfEqual {397}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move V0, [X19+48]
	120 Move [X21+32], D0
	121 Move X8, [X19+56]
	122 Move [X21+40], X8
	123 Move X8, [X19+104]
	124 Compare X8, 0
	125 JumpIfEqual {398}
	126 Move X9, [X19+64]
	127 Move [X8+48], X9
	128 Move X8, [X19+104]
	129 Compare X8, 0
	130 JumpIfEqual {399}
	131 Move W9, [X19+72]
	132 Move [X8+56], W9
	133 Move X9, [X19+80]
	134 Move [X8+64], X9
	135 Move X9, [X19+88]
	136 Move [X8+72], X9
	137 Compare X20, 0
	138 JumpIfEqual {400}
	139 Move W8, [X20+16]
	140 Compare W8, 0
	141 JumpIfEqual {279}
	142 Move X8, [X19+104]
	143 Compare X8, 0
	144 JumpIfEqual {401}
	145 Move X21, [X8+24]
	146 Compare X21, 0
	147 JumpIfEqual {402}
	148 Move X23, 0xC90000
	149 Move X8, [X21]
	150 Move X23, [X23+2072]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Move X1, [X23]
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move W2, 7
	162 Move X0, X21
	163 Call 0x1C5D788
	164 Move W9, [X10]
	165 Add W9, W9, 7
	166 Add X8, X8, W9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X21
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X1, X31
	173 Call String.IsNullOrEmpty, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {277}
	178 Move X8, [X19+104]
	179 Compare X8, 0
	180 JumpIfEqual {403}
	181 Move X9, 0xC90000
	182 Move X9, [X9+2544]
	183 Move X21, [X8+24]
	184 Move X0, [X9]
	185 Move W9, [X0+224]
	186 Compare W9, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X0, X31
	190 Call DateTime.get_UtcNow
	191 Move X22, 0xC91000
	192 Move X22, [X22+2576]
	193 Move X8, X0
	194 Move [X31+40], X8
	195 Move X0, [X22]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {201}
	199 Call 0x1C17DFC
	200 Move X0, [X22]
	201 Move X8, [X0+184]
	202 Move X1, [X8]
	203 Add X0, X31, 40
	204 Move X2, X31
	205 Call DateTime.Add, X0, X1
	206 Compare X21, 0
	207 JumpIfEqual {404}
	208 Move X8, [X21]
	209 Move X1, [X23]
	210 Move X22, X0
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move W2, 11
	221 Move X0, X21
	222 Call 0x1C5D788
	223 Move W9, [X10]
	224 Add W9, W9, 11
	225 Add X8, X8, W9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X2, [X0+8]
	229 Move X0, X21
	230 Move X1, X22
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {277}
	236 Move X8, [X19+104]
	237 Compare X8, 0
	238 JumpIfEqual {405}
	239 Move X1, [X8+24]
	240 Move X3, [X19+96]
	241 Move X4, [X8+72]
	242 Move X0, X20
	243 Move X2, X31
	244 Move X5, X31
	245 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	246 Compare X0, 0
	247 JumpIfEqual {406}
	248 Move X8, 0xC90000
	249 Move X8, [X8+2112]
	250 Move X1, [X8]
	251 Call Task`1<Object>.GetAwaiter, X0
	252 Move X8, 0xC90000
	253 Move X8, [X8+2104]
	254 Move [X31+32], X0
	255 Move X1, [X8]
	256 Add X0, X31, 32
	257 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	258 Move TEMP, X0
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfEqual {100}
	262 Move [X19], W31
	263 Move X8, [X31+32]
	264 Move [X19+112], X8
	265 Move X0, [X25]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X8, 0xCCC000
	271 Move X8, [X8+736]
	272 Add X0, X19, 8
	273 Move X3, [X8]
	274 Add X1, X31, 32
	275 Move X2, X19
	276 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	277 Compare X20, 0
	278 JumpIfEqual {396}
	279 Move X8, 0xCCC000
	280 Move X8, [X8+744]
	281 Move X21, [X20+88]
	282 Move X23, [X19+104]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X8, 0xCCC000
	286 Move X8, [X8+784]
	287 Move X22, X0
	288 Move X2, [X8]
	289 Move X1, X23
	290 Move X3, X31
	291 Call Func`1<Object>..ctor, X0, X1, X2
	292 Move X8, [X19+104]
	293 Compare X8, 0
	294 JumpIfEqual {393}
	295 Move X9, 0xCCB000
	296 Move X23, [X19+96]
	297 Move X9, [X9+1992]
	298 Compare X23, 0
	299 JumpIfNotEqual {301}
	300 Move X23, [X20+24]
	301 Move X20, [X8+24]
	302 Move X1, [X8+72]
	303 Move X2, [X9]
	304 Move [X31+8], X31
	305 Move [X31+16], X31
	306 Add X0, X31, 8
	307 Call Nullable`1<CancellationToken>..ctor, X0, X1
	308 Move X8, 0xCCB000
	309 Move X8, [X8+2000]
	310 Move X0, [X8]
	311 Call 0x1C17F10
	312 Move X3, [X31+8]
	313 Move X4, [X31+16]
	314 Move X24, X0
	315 Move X1, X20
	316 Move X2, X23
	317 Move X5, X31
	318 Call RetryHistory..ctor, X0, X1, X2, X3
	319 Compare X21, 0
	320 JumpIfEqual {394}
	321 Move X8, 0xCCC000
	322 Move X8, [X8+752]
	323 Move X3, [X8]
	324 Move X0, X21
	325 Move X1, X22
	326 Move X2, X24
	327 Call 0x2244230, X0, X1, X2
	328 Compare X0, 0
	329 JumpIfEqual {395}
	330 Move X8, 0xCCC000
	331 Move X8, [X8+776]
	332 Move X1, [X8]
	333 Call Task`1<Object>.GetAwaiter, X0
	334 Move X8, 0xCCC000
	335 Move X8, [X8+768]
	336 Move [X31+24], X0
	337 Move X1, [X8]
	338 Add X0, X31, 24
	339 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {367}
	344 Move X8, 0xCCC000
	345 Move X8, [X8+760]
	346 Add X0, X31, 24
	347 Move X1, [X8]
	348 Call TaskAwaiter`1<Object>.GetResult, X0
	349 Move TEMP, 1
	350 Not TEMP
	351 Move W8, TEMP
	352 Move [X19], W8
	353 Move [X19+104], X31
	354 Move X20, X0
	355 Move X0, [X25]
	356 Move X21, 0xCCB000
	357 Add X19, X19, 8
	358 Move W8, [X0+224]
	359 Move X21, [X21+488]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X2, [X21]
	364 Move X0, X19
	365 Move X1, X20
	366 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	367 Move W8, 1
	368 Move [X19], W8
	369 Move X8, [X31+24]
	370 Move [X19+120], X8
	371 Move X0, [X25]
	372 Move W8, [X0+224]
	373 Compare W8, 0
	374 JumpIfNotEqual {376}
	375 Call 0x1C17DFC
	376 Move X8, 0xCCC000
	377 Move X8, [X8+728]
	378 Add X0, X19, 8
	379 Move X3, [X8]
	380 Add X1, X31, 24
	381 Move X2, X19
	382 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	383 Move X20, [X31+96]
	384 Move X19, [X31+104]
	385 Move X22, [X31+80]
	386 Move X21, [X31+88]
	387 Move X24, [X31+64]
	388 Move X23, [X31+72]
	389 Move X30, [X31+48]
	390 Move X25, [X31+56]
	391 Add X31, X31, 112
	392 Return 
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Call 0x1C17F20
	406 Call 0x1C17F20
	407 Move X20, X0
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move X0, X20
	410 Call 0x3EB2AD0
	411 Move X20, X0
	412 Move X0, 0xC8F000
	413 Move X0, [X0+2000]
	414 Call 0x1C17D08
	415 Move X8, [X20]
	416 Move X1, [X8]
	417 Call 0x1C18270
	418 Move TEMP, X0
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfNotEqual {443}
	422 Move X20, [X20]
	423 Call 0x3EB2AE0
	424 Move TEMP, 1
	425 Not TEMP
	426 Move W8, TEMP
	427 Move [X19+104], X31
	428 Move [X19+8], W8
	429 Move X0, 0xCCA000
	430 Move X0, [X0+1800]
	431 Call 0x1C17D08
	432 Move W8, [X0+224]
	433 Compare W8, 0
	434 JumpIfNotEqual {436}
	435 Call 0x1C17DFC
	436 Move X0, 0xCCB000
	437 Move X0, [X0+544]
	438 Call 0x1C17D08
	439 Move X2, X0
	440 Move X0, X19
	441 Move X1, X20
	442 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	443 Move W0, 8
	444 Call 0x3EB2AF0
	445 Move X8, [X20]
	446 Move [X0], X8
	447 Move X1, 0xA50000
	448 Add X1, X1, 3672
	449 Move X2, X31
	450 Call 0x3EB2B00
	451 Move X20, X0
	452 Call 0x3EB2AE0
	453 Move X0, X20
	454 Call 0x1D2D690
	455 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034655C0 ADRP X0, 0xC8F000
	0x034655C4 LDR X0, [X0 + 0x818]
	0x034655C8 BL 0x1C16CF4
	0x034655CC ADRP X0, 0xCCA000
	0x034655D0 LDR X0, [X0 + 0x7C8]
	0x034655D4 BL 0x1C16CF4
	0x034655D8 ADRP X0, 0xCCA000
	0x034655DC LDR X0, [X0 + 0x7D0]
	0x034655E0 BL 0x1C16CF4
	0x034655E4 ADRP X0, 0xC8F000
	0x034655E8 LDR X0, [X0 + 0x830]
	0x034655EC BL 0x1C16CF4
	0x034655F0 ADRP X0, 0xC8F000
	0x034655F4 LDR X0, [X0 + 0x838]
	0x034655F8 BL 0x1C16CF4
	0x034655FC ADRP X0, 0xC8F000
	0x03465600 LDR X0, [X0 + 0x840]
	0x03465604 BL 0x1C16CF4
	0x03465608 ADRP X0, 0xCCB000
	0x0346560C LDR X0, [X0 + 0x398]
	0x03465610 BL 0x1C16CF4
	0x03465614 ADRP X0, 0xCCB000
	0x03465618 LDR X0, [X0 + 0x3A0]
	0x0346561C BL 0x1C16CF4
	0x03465620 MOVZ W8, 0x1
	0x03465624 STRB W8, [X20 + 0x7BF]
	0x03465628 STP X31, X31, [X31 + 0x20]
	0x0346562C STR X31, [X31 + 0x18]
	0x03465630 ADRP X25, 0xC91000
	0x03465634 LDR W8, [X19]
	0x03465638 LDR X20, [X19 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF79000
	007 Move X21, 0xCCA000
	008 Move W8, [X22+1978]
	009 Move X21, [X21+1800]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCCB000
	017 Move X0, [X0+552]
	018 Call 0x1C17CF4
	019 Move X0, 0xCCA000
	020 Move X0, [X0+1800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1978], W8
	024 Move X0, [X21]
	025 Move X21, 0xCCB000
	026 Move W8, [X0+224]
	027 Move X21, [X21+552]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

