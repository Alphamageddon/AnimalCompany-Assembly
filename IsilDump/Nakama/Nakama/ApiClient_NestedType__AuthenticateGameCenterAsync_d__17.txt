Type: Nakama.ApiClient/<AuthenticateGameCenterAsync>d__17

Method: System.Void MoveNext()

Disassembly:
	0x0341C630 LDRB W8, [X20 + 0x60B]
	0x0341C634 MOV X19, X0
	0x0341C638 TBNZ X8, 0x0, 0x341C788
	0x0341C63C ADRP X0, 0xD12000
	0x0341C640 LDR X0, [X0 + 0xB68]
	0x0341C644 BL 0x1C16CF4
	0x0341C648 ADRP X0, 0xD12000
	0x0341C64C LDR X0, [X0 + 0x820]
	0x0341C650 BL 0x1C16CF4
	0x0341C654 ADRP X0, 0xD12000
	0x0341C658 LDR X0, [X0 + 0x320]
	0x0341C65C BL 0x1C16CF4
	0x0341C660 ADRP X0, 0xCE0000
	0x0341C664 LDR X0, [X0 + 0x8D8]
	0x0341C668 BL 0x1C16CF4
	0x0341C66C ADRP X0, 0xCE0000
	0x0341C670 LDR X0, [X0 + 0x9E8]
	0x0341C674 BL 0x1C16CF4
	0x0341C678 ADRP X0, 0xCD8000
	0x0341C67C LDR X0, [X0 + 0x810]
	0x0341C680 BL 0x1C16CF4
	0x0341C684 ADRP X0, 0xCD8000
	0x0341C688 LDR X0, [X0 + 0x6C0]
	0x0341C68C BL 0x1C16CF4
	0x0341C690 ADRP X0, 0xCD8000
	0x0341C694 LDR X0, [X0 + 0x6D0]
	0x0341C698 BL 0x1C16CF4
	0x0341C69C ADRP X0, 0xD12000
	0x0341C6A0 LDR X0, [X0 + 0x7B8]
	0x0341C6A4 BL 0x1C16CF4
	0x0341C6A8 ADRP X0, 0xD12000
	0x0341C6AC LDR X0, [X0 + 0x828]
	0x0341C6B0 BL 0x1C16CF4
	0x0341C6B4 ADRP X0, 0xD12000
	0x0341C6B8 LDR X0, [X0 + 0x830]
	0x0341C6BC BL 0x1C16CF4
	0x0341C6C0 ADRP X0, 0xCDB000
	0x0341C6C4 LDR X0, [X0 + 0xBF0]
	0x0341C6C8 BL 0x1C16CF4
	0x0341C6CC ADRP X0, 0xCDA000
	0x0341C6D0 LDR X0, [X0 + 0x1E0]
	0x0341C6D4 BL 0x1C16CF4
	0x0341C6D8 ADRP X0, 0xCDA000
	0x0341C6DC LDR X0, [X0 + 0x1F0]
	0x0341C6E0 BL 0x1C16CF4
	0x0341C6E4 ADRP X0, 0xCDA000
	0x0341C6E8 LDR X0, [X0 + 0x1F8]
	0x0341C6EC BL 0x1C16CF4
	0x0341C6F0 ADRP X0, 0xCE0000
	0x0341C6F4 LDR X0, [X0 + 0x3A0]
	0x0341C6F8 BL 0x1C16CF4
	0x0341C6FC ADRP X0, 0xCD9000
	0x0341C700 LDR X0, [X0 + 0xA28]
	0x0341C704 BL 0x1C16CF4
	0x0341C708 ADRP X0, 0xD12000
	0x0341C70C LDR X0, [X0 + 0x840]
	0x0341C710 BL 0x1C16CF4
	0x0341C714 ADRP X0, 0xD00000
	0x0341C718 LDR X0, [X0 + 0x4D8]
	0x0341C71C BL 0x1C16CF4
	0x0341C720 ADRP X0, 0xD12000
	0x0341C724 LDR X0, [X0 + 0x8C8]
	0x0341C728 BL 0x1C16CF4
	0x0341C72C ADRP X0, 0xD12000
	0x0341C730 LDR X0, [X0 + 0xB70]
	0x0341C734 BL 0x1C16CF4
	0x0341C738 ADRP X0, 0xD12000
	0x0341C73C LDR X0, [X0 + 0x848]
	0x0341C740 BL 0x1C16CF4
	0x0341C744 ADRP X0, 0xCE0000
	0x0341C748 LDR X0, [X0 + 0x988]
	0x0341C74C BL 0x1C16CF4
	0x0341C750 ADRP X0, 0xCE0000
	0x0341C754 LDR X0, [X0 + 0x720]
	0x0341C758 BL 0x1C16CF4
	0x0341C75C ADRP X0, 0xD12000
	0x0341C760 LDR X0, [X0 + 0x7D0]
	0x0341C764 BL 0x1C16CF4
	0x0341C768 ADRP X0, 0xD12000
	0x0341C76C LDR X0, [X0 + 0x850]
	0x0341C770 BL 0x1C16CF4
	0x0341C774 ADRP X0, 0xCD7000
	0x0341C778 LDR X0, [X0 + 0x988]
	0x0341C77C BL 0x1C16CF4
	0x0341C780 MOVZ W8, 0x1
	0x0341C784 STRB W8, [X20 + 0x60B]
	0x0341C788 STR X31, [X31 + 0x18]
	0x0341C78C ADRP X28, 0xD12000
	0x0341C790 LDR W8, [X19]
	0x0341C794 LDR X28, [X28 + 0x320]
	0x0341C798 CBZ W8, 0x341CAF0
	0x0341C79C LDR X8, [X19 + 0x20]
	0x0341C7A0 CBZ X8, 0x341CC28
	0x0341C7A4 ADRP X8, 0xD12000
	0x0341C7A8 ADRP X9, 0xCD7000
	0x0341C7AC LDR X8, [X8 + 0xB70]
	0x0341C7B0 LDR X9, [X9 + 0x988]
	0x0341C7B4 MOV X0, X19
	0x0341C7B8 LDR X25, [X19 + 0x40]
	0x0341C7BC LDR X21, [X8]
	0x0341C7C0 LDR X20, [X9]
	0x0341C7C4 LDRB W8, [X0 + 0x28]!
	0x0341C7C8 CBZ W8, 0x341C814
	0x0341C7CC ADRP X8, 0xD12000
	0x0341C7D0 LDR X8, [X8 + 0x830]
	0x0341C7D4 LDR X1, [X8]
	0x0341C7D8 BL 0x242D714
	0x0341C7DC CBZ X0, 0x341CC94
	0x0341C7E0 MOV X1, X31
	0x0341C7E4 BL 0x322B5E4
	0x0341C7E8 ADRP X8, 0xD12000
	0x0341C7EC LDR X8, [X8 + 0x840]
	0x0341C7F0 ADRP X9, 0xCE0000
	0x0341C7F4 LDR X9, [X9 + 0x720]
	0x0341C7F8 MOV X2, X0
	0x0341C7FC LDR X1, [X8]
	0x0341C800 LDR X3, [X9]
	0x0341C804 MOV X0, X20
	0x0341C808 MOV X4, X31
	0x0341C80C BL 0x32277C4
	0x0341C810 MOV X20, X0
	0x0341C814 LDR X22, [X19 + 0x30]
	0x0341C818 CBZ X22, 0x341C86C
	0x0341C81C ADRP X8, 0xCD9000
	0x0341C820 LDR X8, [X8 + 0xA28]
	0x0341C824 LDR X0, [X8]
	0x0341C828 LDR W8, [X0 + 0xE0]
	0x0341C82C CBNZ W8, 0x341C834
	0x0341C830 BL 0x1C16DFC
	0x0341C834 MOV X0, X22
	0x0341C838 MOV X1, X31
	0x0341C83C BL 0x3624D20
	0x0341C840 ADRP X8, 0xD12000
	0x0341C844 LDR X8, [X8 + 0x848]
	0x0341C848 ADRP X9, 0xCE0000
	0x0341C84C LDR X9, [X9 + 0x720]
	0x0341C850 MOV X2, X0
	0x0341C854 LDR X1, [X8]
	0x0341C858 LDR X3, [X9]
	0x0341C85C MOV X0, X20
	0x0341C860 MOV X4, X31
	0x0341C864 BL 0x32277C4
	0x0341C868 MOV X20, X0
	0x0341C86C MOV X0, X19
	0x0341C870 LDRB W8, [X0 + 0x38]!
	0x0341C874 CBZ W8, 0x341C8C0
	0x0341C878 ADRP X8, 0xD12000
	0x0341C87C LDR X8, [X8 + 0x830]
	0x0341C880 LDR X1, [X8]
	0x0341C884 BL 0x242D714
	0x0341C888 CBZ X0, 0x341CC98
	0x0341C88C MOV X1, X31
	0x0341C890 BL 0x322B5E4
	0x0341C894 ADRP X8, 0xD12000
	0x0341C898 LDR X8, [X8 + 0x8C8]
	0x0341C89C ADRP X9, 0xCE0000
	0x0341C8A0 LDR X9, [X9 + 0x720]
	0x0341C8A4 MOV X2, X0
	0x0341C8A8 LDR X1, [X8]
	0x0341C8AC LDR X3, [X9]
	0x0341C8B0 MOV X0, X20
	0x0341C8B4 MOV X4, X31
	0x0341C8B8 BL 0x32277C4
	0x0341C8BC MOV X20, X0
	0x0341C8C0 CBZ X25, 0x341CC70
	0x0341C8C4 LDR X0, [X25 + 0x20]
	0x0341C8C8 CBZ X0, 0x341CC74
	0x0341C8CC MOV X1, X31
	0x0341C8D0 BL 0x361B448
	0x0341C8D4 ADRP X8, 0xCE0000
	0x0341C8D8 LDR X8, [X8 + 0x8D8]
	0x0341C8DC MOV X22, X0
	0x0341C8E0 LDR X0, [X8]
	0x0341C8E4 MOVZ W1, 0x1
	0x0341C8E8 BL 0x1C16D6C
	0x0341C8EC MOV X1, X0
	0x0341C8F0 CBZ X1, 0x341CC78
	0x0341C8F4 LDR W8, [X1 + 0x18]
	0x0341C8F8 CBZ W8, 0x341CC7C
	0x0341C8FC MOVZ W8, 0x2F
	0x0341C900 STRH W8, [X1 + 0x20]
	0x0341C904 CBZ X22, 0x341CC80
	0x0341C908 MOV X0, X22
	0x0341C90C MOV X2, X31
	0x0341C910 BL 0x322BC58
	0x0341C914 MOV X1, X21
	0x0341C918 MOV X2, X31
	0x0341C91C BL 0x321B938
	0x0341C920 ADRP X8, 0xCE0000
	0x0341C924 LDR X8, [X8 + 0x3A0]
	0x0341C928 MOV X22, X0
	0x0341C92C LDR X23, [X25 + 0x20]
	0x0341C930 LDR X0, [X8]
	0x0341C934 BL 0x1C16F10
	0x0341C938 MOV X21, X0
	0x0341C93C MOV X1, X23
	0x0341C940 MOV X2, X31
	0x0341C944 BL 0x36281F8
	0x0341C948 CBZ X21, 0x341CC84
	0x0341C94C MOV X0, X21
	0x0341C950 MOV X1, X22
	0x0341C954 MOV X2, X31
	0x0341C958 BL 0x36288CC
	0x0341C95C MOV X0, X21
	0x0341C960 MOV X1, X20
	0x0341C964 MOV X2, X31
	0x0341C968 BL 0x3628980
	0x0341C96C MOV X0, X21
	0x0341C970 MOV X1, X31
	0x0341C974 BL 0x3628A38
	0x0341C978 ADRP X8, 0xD00000
	0x0341C97C ADRP X9, 0xCD8000
	0x0341C980 LDR X8, [X8 + 0x4D8]
	0x0341C984 LDR X9, [X9 + 0x6D0]
	0x0341C988 MOV X20, X0
	0x0341C98C LDR X21, [X8]
	0x0341C990 LDR X0, [X9]
	0x0341C994 BL 0x1C16F10
	0x0341C998 ADRP X8, 0xCD8000
	0x0341C99C LDR X8, [X8 + 0x6C0]
	0x0341C9A0 MOV X22, X0
	0x0341C9A4 LDR X1, [X8]
	0x0341C9A8 BL 0x2AA4804
	0x0341C9AC LDR X0, [X19 + 0x48]
	0x0341C9B0 MOV X1, X31
	0x0341C9B4 BL 0x32277A8
	0x0341C9B8 TBNZ X0, 0x0, 0x341CA64
	0x0341C9BC MOV X0, X31
	0x0341C9C0 BL 0x3241948
	0x0341C9C4 ADRP X8, 0xCE0000
	0x0341C9C8 MOV X23, X0
	0x0341C9CC LDP X0, X2, [X19 + 0x48]
	0x0341C9D0 LDR X8, [X8 + 0x988]
	0x0341C9D4 LDR X1, [X8]
	0x0341C9D8 MOV X3, X31
	0x0341C9DC BL 0x32274B8
	0x0341C9E0 MOV X1, X0
	0x0341C9E4 CBZ X23, 0x341CC9C
	0x0341C9E8 LDR X8, [X23]
	0x0341C9EC LDR X9, [X8 + 0x268]
	0x0341C9F0 LDR X2, [X8 + 0x270]
	0x0341C9F4 MOV X0, X23
	0x0341C9F8 BLR X9
	0x0341C9FC ADRP X8, 0xCE0000
	0x0341CA00 LDR X8, [X8 + 0x9E8]
	0x0341CA04 MOV X23, X0
	0x0341CA08 LDR X0, [X8]
	0x0341CA0C LDR W8, [X0 + 0xE0]
	0x0341CA10 CBNZ W8, 0x341CA18
	0x0341CA14 BL 0x1C16DFC
	0x0341CA18 MOV X0, X23
	0x0341CA1C MOV X1, X31
	0x0341CA20 BL 0x33225A0
	0x0341CA24 MOV X1, X0
	0x0341CA28 ADRP X8, 0xD12000
	0x0341CA2C LDR X8, [X8 + 0x850]
	0x0341CA30 LDR X0, [X8]
	0x0341CA34 MOV X2, X31
	0x0341CA38 BL 0x321B938
	0x0341CA3C CBZ X22, 0x341CCA0
	0x0341CA40 ADRP X8, 0xD12000
	0x0341CA44 LDR X8, [X8 + 0x7D0]
	0x0341CA48 ADRP X9, 0xCD8000
	0x0341CA4C LDR X9, [X9 + 0x810]
	0x0341CA50 MOV X2, X0
	0x0341CA54 LDR X1, [X8]
	0x0341CA58 LDR X3, [X9]
	0x0341CA5C MOV X0, X22
	0x0341CA60 BL 0x2AA5098
	0x0341CA64 LDR X0, [X19 + 0x20]
	0x0341CA68 MOV X1, X31
	0x0341CA6C BL 0x3483BE4
	0x0341CA70 MOV X23, X0
	0x0341CA74 MOV X0, X31
	0x0341CA78 BL 0x3241948
	0x0341CA7C CBZ X0, 0x341CC88
	0x0341CA80 LDR X8, [X0]
	0x0341CA84 LDR X9, [X8 + 0x268]
	0x0341CA88 LDR X2, [X8 + 0x270]
	0x0341CA8C MOV X1, X23
	0x0341CA90 BLR X9
	0x0341CA94 LDR X24, [X25 + 0x10]
	0x0341CA98 CBZ X24, 0x341CC8C
	0x0341CA9C ADRP X10, 0xD12000
	0x0341CAA0 LDR X10, [X10 + 0x7B8]
	0x0341CAA4 LDR X8, [X24]
	0x0341CAA8 LDR W26, [X25 + 0x18]
	0x0341CAAC LDP X27, X25, [X19 + 0x58]
	0x0341CAB0 LDR X1, [X10]
	0x0341CAB4 LDRH W9, [X8 + 0x12E]
	0x0341CAB8 MOV X23, X0
	0x0341CABC CBZ X9, 0x341CAE0
	0x0341CAC0 LDR X10, [X8 + 0xB0]
	0x0341CAC4 ADD X10, X10, 0x8
	0x0341CAC8 LDUR X11, [X10 - 0x8]
	0x0341CACC CMP X11, X1
	0x0341CAD0 B.EQ 0x341CB08
	0x0341CAD4 SUBS X9, X9, 0x1
	0x0341CAD8 ADD X10, X10, 0x10
	0x0341CADC B.NE 0x341CAC8
	0x0341CAE0 MOVZ W2, 0x3
	0x0341CAE4 MOV X0, X24
	0x0341CAE8 BL 0x1C5C788
	0x0341CAEC B 0x341CB18
	0x0341CAF0 LDR X8, [X19 + 0x68]
	0x0341CAF4 MOVN W9, 0x0
	0x0341CAF8 STR X8, [X31 + 0x18]
	0x0341CAFC STR X31, [X19 + 0x68]
	0x0341CB00 STR W9, [X19]
	0x0341CB04 B 0x341CB74
	0x0341CB08 LDR W9, [X10]
	0x0341CB0C ADD W9, W9, 0x3
	0x0341CB10 ADD X8, X8, W9, 0x4, SXTW
	0x0341CB14 ADD X0, X8, 0x138
	0x0341CB18 LDP X8, X9, [X0]
	0x0341CB1C MOV X0, X24
	0x0341CB20 MOV X1, X21
	0x0341CB24 MOV X2, X20
	0x0341CB28 MOV X3, X22
	0x0341CB2C MOV X4, X23
	0x0341CB30 MOV W5, W26
	0x0341CB34 MOV X6, X27
	0x0341CB38 MOV X7, X25
	0x0341CB3C STR X9, [X31]
	0x0341CB40 BLR X8
	0x0341CB44 CBZ X0, 0x341CC90
	0x0341CB48 ADRP X8, 0xCDA000
	0x0341CB4C LDR X8, [X8 + 0x1F8]
	0x0341CB50 LDR X1, [X8]
	0x0341CB54 BL 0x269F5D0
	0x0341CB58 ADRP X8, 0xCDA000
	0x0341CB5C LDR X8, [X8 + 0x1F0]
	0x0341CB60 STR X0, [X31 + 0x18]
	0x0341CB64 LDR X1, [X8]
	0x0341CB68 ADD X0, X31, 0x18
	0x0341CB6C BL 0x2677430
	0x0341CB70 TBZ X0, 0x0, 0x341CBD0
	0x0341CB74 ADRP X8, 0xCDA000
	0x0341CB78 LDR X8, [X8 + 0x1E0]
	0x0341CB7C ADD X0, X31, 0x18
	0x0341CB80 LDR X1, [X8]
	0x0341CB84 BL 0x2677474
	0x0341CB88 ADRP X8, 0xD12000
	0x0341CB8C LDR X8, [X8 + 0x828]
	0x0341CB90 LDR X1, [X8]
	0x0341CB94 BL 0x220E6DC
	0x0341CB98 MOVN W8, 0x1
	0x0341CB9C STR W8, [X19], #0x8
	0x0341CBA0 MOV X20, X0
	0x0341CBA4 LDR X0, [X28]
	0x0341CBA8 ADRP X21, 0xD12000
	0x0341CBAC LDR W8, [X0 + 0xE0]
	0x0341CBB0 LDR X21, [X21 + 0x820]
	0x0341CBB4 CBNZ W8, 0x341CBBC
	0x0341CBB8 BL 0x1C16DFC
	0x0341CBBC LDR X2, [X21]
	0x0341CBC0 MOV X0, X19
	0x0341CBC4 MOV X1, X20
	0x0341CBC8 BL 0x26322B0
	0x0341CBCC B 0x341CC08
	0x0341CBD0 STR W31, [X19]
	0x0341CBD4 LDR X8, [X31 + 0x18]
	0x0341CBD8 STR X8, [X19 + 0x68]
	0x0341CBDC LDR X0, [X28]
	0x0341CBE0 LDR W8, [X0 + 0xE0]
	0x0341CBE4 CBNZ W8, 0x341CBEC
	0x0341CBE8 BL 0x1C16DFC
	0x0341CBEC ADRP X8, 0xD12000
	0x0341CBF0 LDR X8, [X8 + 0xB68]
	0x0341CBF4 ADD X0, X19, 0x8
	0x0341CBF8 LDR X3, [X8]
	0x0341CBFC ADD X1, X31, 0x18
	0x0341CC00 MOV X2, X19
	0x0341CC04 BL 0x1FB28F8
	0x0341CC08 LDP X20, X19, [X31 + 0x60]
	0x0341CC0C LDP X22, X21, [X31 + 0x50]
	0x0341CC10 LDP X24, X23, [X31 + 0x40]
	0x0341CC14 LDP X26, X25, [X31 + 0x30]
	0x0341CC18 LDP X28, X27, [X31 + 0x20]
	0x0341CC1C LDR X30, [X31 + 0x10]
	0x0341CC20 ADD X31, X31, 0x70
	0x0341CC24 RET
	0x0341CC28 ADRP X0, 0xCDF000
	0x0341CC2C LDR X0, [X0 + 0x578]
	0x0341CC30 BL 0x1C16D08
	0x0341CC34 BL 0x1C16F10
	0x0341CC38 MOV X20, X0
	0x0341CC3C ADRP X0, 0xD12000
	0x0341CC40 LDR X0, [X0 + 0x858]
	0x0341CC44 BL 0x1C16D08
	0x0341CC48 MOV X1, X0
	0x0341CC4C MOV X0, X20
	0x0341CC50 MOV X2, X31
	0x0341CC54 BL 0x3314A68
	0x0341CC58 ADRP X0, 0xD12000
	0x0341CC5C LDR X0, [X0 + 0xB78]
	0x0341CC60 BL 0x1C16D08
	0x0341CC64 MOV X1, X0
	0x0341CC68 MOV X0, X20
	0x0341CC6C BL 0x1C16DEC
	0x0341CC70 BL 0x1C16F20
	0x0341CC74 BL 0x1C16F20
	0x0341CC78 BL 0x1C16F20
	0x0341CC7C BL 0x1C16F28
	0x0341CC80 BL 0x1C16F20
	0x0341CC84 BL 0x1C16F20
	0x0341CC88 BL 0x1C16F20
	0x0341CC8C BL 0x1C16F20
	0x0341CC90 BL 0x1C16F20
	0x0341CC94 BL 0x1C16F20
	0x0341CC98 BL 0x1C16F20
	0x0341CC9C BL 0x1C16F20
	0x0341CCA0 BL 0x1C16F20
	0x0341CCA4 B 0x341CD44
	0x0341CCA8 B 0x341CD44
	0x0341CCAC B 0x341CD44
	0x0341CCB0 B 0x341CD44
	0x0341CCB4 B 0x341CD44
	0x0341CCB8 B 0x341CD44
	0x0341CCBC B 0x341CD44
	0x0341CCC0 B 0x341CD44
	0x0341CCC4 B 0x341CD44
	0x0341CCC8 B 0x341CD44
	0x0341CCCC B 0x341CD44
	0x0341CCD0 B 0x341CD44
	0x0341CCD4 B 0x341CD44
	0x0341CCD8 B 0x341CD44
	0x0341CCDC B 0x341CD44
	0x0341CCE0 B 0x341CD44
	0x0341CCE4 B 0x341CD44
	0x0341CCE8 B 0x341CD44
	0x0341CCEC B 0x341CD44
	0x0341CCF0 B 0x341CD44
	0x0341CCF4 B 0x341CD44
	0x0341CCF8 B 0x341CD44
	0x0341CCFC B 0x341CD44
	0x0341CD00 B 0x341CD44
	0x0341CD04 B 0x341CD44
	0x0341CD08 B 0x341CD44
	0x0341CD0C B 0x341CD44
	0x0341CD10 B 0x341CD44
	0x0341CD14 B 0x341CD44
	0x0341CD18 B 0x341CD44
	0x0341CD1C B 0x341CD44
	0x0341CD20 B 0x341CD44
	0x0341CD24 B 0x341CD44
	0x0341CD28 B 0x341CD44
	0x0341CD2C B 0x341CD44
	0x0341CD30 B 0x341CD44
	0x0341CD34 B 0x341CD44
	0x0341CD38 B 0x341CD44
	0x0341CD3C B 0x341CD44
	0x0341CD40 B 0x341CD44
	0x0341CD44 MOV X20, X0
	0x0341CD48 CMP W1, 0x1
	0x0341CD4C B.NE 0x341CDE8
	0x0341CD50 MOV X0, X20
	0x0341CD54 BL 0x3EB1AD0
	0x0341CD58 MOV X20, X0
	0x0341CD5C ADRP X0, 0xCD7000
	0x0341CD60 LDR X0, [X0 + 0x7D0]
	0x0341CD64 BL 0x1C16D08
	0x0341CD68 LDR X8, [X20]
	0x0341CD6C LDR X1, [X8]
	0x0341CD70 BL 0x1C17270
	0x0341CD74 TBZ X0, 0x0, 0x341CDC0
	0x0341CD78 LDR X20, [X20]
	0x0341CD7C BL 0x3EB1AE0
	0x0341CD80 MOVN W8, 0x1
	0x0341CD84 STR W8, [X19], #0x8
	0x0341CD88 ADRP X0, 0xD12000
	0x0341CD8C LDR X0, [X0 + 0x320]
	0x0341CD90 BL 0x1C16D08
	0x0341CD94 LDR W8, [X0 + 0xE0]
	0x0341CD98 CBNZ W8, 0x341CDA0
	0x0341CD9C BL 0x1C16DFC
	0x0341CDA0 ADRP X0, 0xD12000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFC2000
	014 Move W8, [X20+1543]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {100}
	020 Move X0, 0xD13000
	021 Move X0, [X0+2872]
	022 Call 0x1C17CF4
	023 Move X0, 0xD13000
	024 Move X0, [X0+2080]
	025 Call 0x1C17CF4
	026 Move X0, 0xD13000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE1000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE1000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD9000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD9000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD9000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xD13000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0xD13000
	048 Move X0, [X0+2088]
	049 Call 0x1C17CF4
	050 Move X0, 0xD13000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDC000
	054 Move X0, [X0+3056]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDB000
	057 Move X0, [X0+480]
	058 Call 0x1C17CF4
	059 Move X0, 0xCDB000
	060 Move X0, [X0+496]
	061 Call 0x1C17CF4
	062 Move X0, 0xCDB000
	063 Move X0, [X0+504]
	064 Call 0x1C17CF4
	065 Move X0, 0xCE1000
	066 Move X0, [X0+928]
	067 Call 0x1C17CF4
	068 Move X0, 0xCDA000
	069 Move X0, [X0+2600]
	070 Call 0x1C17CF4
	071 Move X0, 0xD13000
	072 Move X0, [X0+2112]
	073 Call 0x1C17CF4
	074 Move X0, 0xD01000
	075 Move X0, [X0+1240]
	076 Call 0x1C17CF4
	077 Move X0, 0xD13000
	078 Move X0, [X0+2880]
	079 Call 0x1C17CF4
	080 Move X0, 0xD13000
	081 Move X0, [X0+2120]
	082 Call 0x1C17CF4
	083 Move X0, 0xCE1000
	084 Move X0, [X0+2440]
	085 Call 0x1C17CF4
	086 Move X0, 0xCE1000
	087 Move X0, [X0+1824]
	088 Call 0x1C17CF4
	089 Move X0, 0xD13000
	090 Move X0, [X0+2000]
	091 Call 0x1C17CF4
	092 Move X0, 0xD13000
	093 Move X0, [X0+2128]
	094 Call 0x1C17CF4
	095 Move X0, 0xCD8000
	096 Move X0, [X0+2440]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X20+1543], W8
	100 Move [X31+24], X31
	101 Move X28, 0xD13000
	102 Move W8, [X19]
	103 Move X28, [X28+800]
	104 Compare W8, 0
	105 JumpIfEqual {318}
	106 Move X8, [X19+32]
	107 Compare X8, 0
	108 JumpIfEqual {410}
	109 Move X8, 0xD13000
	110 Move X9, 0xCD8000
	111 Move X8, [X8+2880]
	112 Move X9, [X9+2440]
	113 Move X0, X19
	114 Move X25, [X19+56]
	115 Move X21, [X8]
	116 Move X20, [X9]
	117 Add X0, X0, 40
	118 Move W8, [X0]
	119 Compare W8, 0
	120 JumpIfEqual {140}
	121 Move X8, 0xD13000
	122 Move X8, [X8+2096]
	123 Move X1, [X8]
	124 Call Nullable`1<Boolean>.ToString, X0
	125 Compare X0, 0
	126 JumpIfEqual {437}
	127 Move X1, X31
	128 Call String.ToLower, X0
	129 Move X8, 0xD13000
	130 Move X8, [X8+2112]
	131 Move X9, 0xCE1000
	132 Move X9, [X9+1824]
	133 Move X2, X0
	134 Move X1, [X8]
	135 Move X3, [X9]
	136 Move X0, X20
	137 Move X4, X31
	138 Call String.Concat, X0, X1, X2, X3
	139 Move X20, X0
	140 Move X22, [X19+48]
	141 Compare X22, 0
	142 JumpIfEqual {164}
	143 Move X8, 0xCDA000
	144 Move X8, [X8+2600]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X22
	151 Move X1, X31
	152 Call Uri.EscapeDataString, X0
	153 Move X8, 0xD13000
	154 Move X8, [X8+2120]
	155 Move X9, 0xCE1000
	156 Move X9, [X9+1824]
	157 Move X2, X0
	158 Move X1, [X8]
	159 Move X3, [X9]
	160 Move X0, X20
	161 Move X4, X31
	162 Call String.Concat, X0, X1, X2, X3
	163 Move X20, X0
	164 Compare X25, 0
	165 JumpIfEqual {428}
	166 Move X0, [X25+32]
	167 Compare X0, 0
	168 JumpIfEqual {429}
	169 Move X1, X31
	170 Call Uri.get_AbsolutePath, X0
	171 Move X8, 0xCE1000
	172 Move X8, [X8+2264]
	173 Move X22, X0
	174 Move X0, [X8]
	175 Move W1, 1
	176 Call 0x1C17D6C
	177 Move X1, X0
	178 Compare X1, 0
	179 JumpIfEqual {430}
	180 Move W8, [X1+24]
	181 Compare W8, 0
	182 JumpIfEqual {431}
	183 Move W8, 47
	184 NotImplemented "Instruction STRH not yet implemented."
	185 Compare X22, 0
	186 JumpIfEqual {432}
	187 Move X0, X22
	188 Move X2, X31
	189 Call String.TrimEnd, X0, X1
	190 Move X1, X21
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Move X8, 0xCE1000
	194 Move X8, [X8+928]
	195 Move X22, X0
	196 Move X23, [X25+32]
	197 Move X0, [X8]
	198 Call 0x1C17F10
	199 Move X21, X0
	200 Move X1, X23
	201 Move X2, X31
	202 Call UriBuilder..ctor, X0, X1
	203 Compare X21, 0
	204 JumpIfEqual {433}
	205 Move X0, X21
	206 Move X1, X22
	207 Move X2, X31
	208 Call UriBuilder.set_Path, X0, X1
	209 Move X0, X21
	210 Move X1, X20
	211 Move X2, X31
	212 Call UriBuilder.set_Query, X0, X1
	213 Move X0, X21
	214 Move X1, X31
	215 Call UriBuilder.get_Uri, X0
	216 Move X8, 0xD01000
	217 Move X9, 0xCD9000
	218 Move X8, [X8+1240]
	219 Move X9, [X9+1744]
	220 Move X20, X0
	221 Move X21, [X8]
	222 Move X0, [X9]
	223 Call 0x1C17F10
	224 Move X8, 0xCD9000
	225 Move X8, [X8+1728]
	226 Move X22, X0
	227 Move X1, [X8]
	228 Call Dictionary`2<Object, Object>..ctor, X0
	229 Move X0, [X19+64]
	230 Move X1, X31
	231 Call String.IsNullOrEmpty, X0
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {282}
	236 Move X0, X31
	237 Call Encoding.get_UTF8
	238 Move X8, 0xCE1000
	239 Move X23, X0
	240 Move X0, [X19+64]
	241 Move X2, [X19+72]
	242 Move X8, [X8+2440]
	243 Move X1, [X8]
	244 Move X3, X31
	245 Call String.Concat, X0, X1, X2
	246 Move X1, X0
	247 Compare X23, 0
	248 JumpIfEqual {438}
	249 Move X8, [X23]
	250 Move X9, [X8+616]
	251 Move X2, [X8+624]
	252 Move X0, X23
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Move X8, 0xCE1000
	255 Move X8, [X8+2536]
	256 Move X23, X0
	257 Move X0, [X8]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X0, X23
	263 Move X1, X31
	264 Call Convert.ToBase64String, X0
	265 Move X1, X0
	266 Move X8, 0xD13000
	267 Move X8, [X8+2128]
	268 Move X0, [X8]
	269 Move X2, X31
	270 Call String.Concat, X0, X1
	271 Compare X22, 0
	272 JumpIfEqual {439}
	273 Move X8, 0xD13000
	274 Move X8, [X8+2000]
	275 Move X9, 0xCD9000
	276 Move X9, [X9+2064]
	277 Move X2, X0
	278 Move X1, [X8]
	279 Move X3, [X9]
	280 Move X0, X22
	281 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	282 Move X0, [X19+32]
	283 Move X1, X31
	284 Call JsonWriter.ToJson, X0
	285 Move X23, X0
	286 Move X0, X31
	287 Call Encoding.get_UTF8
	288 Compare X0, 0
	289 JumpIfEqual {434}
	290 Move X8, [X0]
	291 Move X9, [X8+616]
	292 Move X2, [X8+624]
	293 Move X1, X23
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X24, [X25+16]
	296 Compare X24, 0
	297 JumpIfEqual {435}
	298 Move X10, 0xD13000
	299 Move X10, [X10+1976]
	300 Move X8, [X24]
	301 Move W26, [X25+24]
	302 Move X27, [X19+80]
	303 Move X25, [X19+88]
	304 Move X1, [X10]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Move X23, X0
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move W2, 3
	316 Move X0, X24
	317 Call 0x1C5D788
	318 Move X8, [X19+96]
	319 Move TEMP, 0
	320 Not TEMP
	321 Move W9, TEMP
	322 Move [X31+24], X8
	323 Move [X19+96], X31
	324 Move [X19], W9
	325 Move W9, [X10]
	326 Add W9, W9, 3
	327 Add X8, X8, W9
	328 Add X0, X8, 312
	329 Move X8, [X0]
	330 Move X9, [X0+8]
	331 Move X0, X24
	332 Move X1, X21
	333 Move X2, X20
	334 Move X3, X22
	335 Move X4, X23
	336 Move W5, W26
	337 Move X6, X27
	338 Move X7, X25
	339 Move [X31], X9
	340 NotImplemented "Instruction BLR not yet implemented."
	341 Compare X0, 0
	342 JumpIfEqual {436}
	343 Move X8, 0xCDB000
	344 Move X8, [X8+504]
	345 Move X1, [X8]
	346 Call Task`1<Object>.GetAwaiter, X0
	347 Move X8, 0xCDB000
	348 Move X8, [X8+496]
	349 Move [X31+24], X0
	350 Move X1, [X8]
	351 Add X0, X31, 24
	352 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {382}
	357 Move X8, 0xCDB000
	358 Move X8, [X8+480]
	359 Add X0, X31, 24
	360 Move X1, [X8]
	361 Call TaskAwaiter`1<Object>.GetResult, X0
	362 Move X8, 0xD13000
	363 Move X8, [X8+2088]
	364 Move X1, [X8]
	365 Call JsonParser.FromJson, X0
	366 Move TEMP, 1
	367 Not TEMP
	368 Move W8, TEMP
	369 Move [X19+8], W8
	370 Move X20, X0
	371 Move X0, [X28]
	372 Move X21, 0xD13000
	373 Move W8, [X0+224]
	374 Move X21, [X21+2080]
	375 Compare W8, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1C17DFC
	378 Move X2, [X21]
	379 Move X0, X19
	380 Move X1, X20
	381 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	382 Move [X19], W31
	383 Move X8, [X31+24]
	384 Move [X19+96], X8
	385 Move X0, [X28]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Move X8, 0xD13000
	391 Move X8, [X8+2872]
	392 Add X0, X19, 8
	393 Move X3, [X8]
	394 Add X1, X31, 24
	395 Move X2, X19
	396 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	397 Move X20, [X31+96]
	398 Move X19, [X31+104]
	399 Move X22, [X31+80]
	400 Move X21, [X31+88]
	401 Move X24, [X31+64]
	402 Move X23, [X31+72]
	403 Move X26, [X31+48]
	404 Move X25, [X31+56]
	405 Move X28, [X31+32]
	406 Move X27, [X31+40]
	407 Move X30, [X31+16]
	408 Add X31, X31, 112
	409 Return 
	410 Move X0, 0xCE0000
	411 Move X0, [X0+1400]
	412 Call 0x1C17D08
	413 Call 0x1C17F10
	414 Move X20, X0
	415 Move X0, 0xD13000
	416 Move X0, [X0+2136]
	417 Call 0x1C17D08
	418 Move X1, X0
	419 Move X0, X20
	420 Move X2, X31
	421 Call ArgumentException..ctor, X0, X1
	422 Move X0, 0xD13000
	423 Move X0, [X0+2888]
	424 Call 0x1C17D08
	425 Move X1, X0
	426 Move X0, X20
	427 Call 0x1C17DEC
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F20
	431 Call 0x1C17F28
	432 Call 0x1C17F20
	433 Call 0x1C17F20
	434 Call 0x1C17F20
	435 Call 0x1C17F20
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Move X20, X0
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X0, X20
	443 Call 0x3EB2AD0
	444 Move X20, X0
	445 Move X0, 0xCD8000
	446 Move X0, [X0+2000]
	447 Call 0x1C17D08
	448 Move X8, [X20]
	449 Move X1, [X8]
	450 Call 0x1C18270
	451 Move TEMP, X0
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfNotEqual {475}
	455 Move X20, [X20]
	456 Call 0x3EB2AE0
	457 Move TEMP, 1
	458 Not TEMP
	459 Move W8, TEMP
	460 Move [X19+8], W8
	461 Move X0, 0xD13000
	462 Move X0, [X0+800]
	463 Call 0x1C17D08
	464 Move W8, [X0+224]
	465 Compare W8, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Move X0, 0xD13000
	469 Move X0, [X0+2152]
	470 Call 0x1C17D08
	471 Move X2, X0
	472 Move X0, X19
	473 Move X1, X20
	474 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	475 Move W0, 8
	476 Call 0x3EB2AF0
	477 Move X8, [X20]
	478 Move [X0], X8
	479 Move X1, 0xA99000
	480 Add X1, X1, 3672
	481 Move X2, X31
	482 Call 0x3EB2B00
	483 Move X20, X0
	484 Call 0x3EB2AE0
	485 Move X0, X20
	486 Call 0x1D2D690
	487 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0341CDA4 LDR X0, [X0 + 0x868]
	0x0341CDA8 BL 0x1C16D08
	0x0341CDAC MOV X2, X0
	0x0341CDB0 MOV X0, X19
	0x0341CDB4 MOV X1, X20
	0x0341CDB8 BL 0x26324C8
	0x0341CDBC B 0x341CC08
	0x0341CDC0 MOVZ W0, 0x8
	0x0341CDC4 BL 0x3EB1AF0
	0x0341CDC8 LDR X8, [X20]
	0x0341CDCC STR X8, [X0]
	0x0341CDD0 ADRP X1, 0xA98000
	0x0341CDD4 ADD X1, X1, 0xE58
	0x0341CDD8 MOV X2, X31
	0x0341CDDC BL 0x3EB1B00
	0x0341CDE0 MOV X20, X0
	0x0341CDE4 BL 0x3EB1AE0
	0x0341CDE8 MOV X0, X20
	0x0341CDEC BL 0x1D2C690
	0x0341CDF0 BL 0x1990590
	0x0341CDF4 STR X30, [X31 - 0x30]!
	0x0341CDF8 STP X22, X21, [X31 + 0x10]
	0x0341CDFC STP X20, X19, [X31 + 0x20]
	0x0341CE00 ADRP X22, 0xFC1000
	0x0341CE04 ADRP X21, 0xD12000
	0x0341CE08 LDRB W8, [X22 + 0x60C]
	0x0341CE0C LDR X21, [X21 + 0x320]
	0x0341CE10 MOV X19, X1
	0x0341CE14 MOV X20, X0
	0x0341CE18 TBNZ X8, 0x0, 0x341CE3C
	0x0341CE1C ADRP X0, 0xD12000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFC2000
	007 Move X21, 0xD13000
	008 Move W8, [X22+1544]
	009 Move X21, [X21+800]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD13000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0xD13000
	020 Move X0, [X0+800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1544], W8
	024 Move X0, [X21]
	025 Move X21, 0xD13000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2160]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

