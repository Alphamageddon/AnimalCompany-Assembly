Type: Nakama.ApiSubscriptionList

Method: System.String get_Cursor()

Disassembly:
	0x0340A688 LDR X8, [X20]
	0x0340A68C MOV X0, X21

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Cursor(System.String value)

Disassembly:
	0x0340A690 LDR X1, [X8 + 0x40]
	0x0340A694 BL 0x1C16E00

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_PrevCursor()

Disassembly:
	0x0340A698 CBZ X0, 0x340A824
	0x0340A69C LDR W8, [X20 + 0x18]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_PrevCursor(System.String value)

Disassembly:
	0x0340A6A0 CMP W8, 0x2
	0x0340A6A4 B.LS 0x340A820

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.IApiValidatedSubscription> get_ValidatedSubscriptions()

Disassembly:
	0x0340A6A8 STR X21, [X20 + 0x30]
	0x0340A6AC LDR X0, [X23]
	0x0340A6B0 CBZ X0, 0x340A6C8
	0x0340A6B4 LDR X8, [X20]
	0x0340A6B8 LDR X1, [X8 + 0x40]
	0x0340A6BC BL 0x1C16E00
	0x0340A6C0 CBZ X0, 0x340A824
	0x0340A6C4 LDR W8, [X20 + 0x18]
	0x0340A6C8 CMP W8, 0x3
	0x0340A6CC B.LS 0x340A820
	0x0340A6D0 LDR X8, [X23]
	0x0340A6D4 MOV X0, X20
	0x0340A6D8 MOV X1, X31
	0x0340A6DC STR X8, [X20 + 0x38]
	0x0340A6E0 BL 0x3227578
	0x0340A6E4 LDR X8, [X22]
	0x0340A6E8 MOV X21, X0
	0x0340A6EC MOVZ W1, 0x4
	0x0340A6F0 MOV X0, X8
	0x0340A6F4 BL 0x1C16D6C
	0x0340A6F8 CBZ X0, 0x340A830
	0x0340A6FC MOV X20, X0
	0x0340A700 CBZ X21, 0x340A718
	0x0340A704 LDR X8, [X20]
	0x0340A708 MOV X0, X21
	0x0340A70C LDR X1, [X8 + 0x40]
	0x0340A710 BL 0x1C16E00
	0x0340A714 CBZ X0, 0x340A824
	0x0340A718 LDR W8, [X20 + 0x18]
	0x0340A71C CBZ W8, 0x340A820

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD4000
	005 Move W8, [X20+1358]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD25000
	012 Move X0, [X0+192]
	013 Call 0x1C17CF4
	014 Move X0, 0xD25000
	015 Move X0, [X0+200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1358], W8
	019 Move X19, [X19+32]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xD25000
	023 Move X8, [X8+200]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xD25000
	027 Move X8, [X8+192]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.ApiValidatedSubscription> get__validatedSubscriptions()

Disassembly:
	0x0340A720 ADRP X22, 0xD24000
	0x0340A724 LDR X22, [X22 + 0x118]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set__validatedSubscriptions(System.Collections.Generic.List`1<Nakama.ApiValidatedSubscription> value)

Disassembly:
	0x0340A728 STR X21, [X20 + 0x20]
	0x0340A72C LDR X0, [X22]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0340A730 CBZ X0, 0x340A748
	0x0340A734 LDR X8, [X20]
	0x0340A738 LDR X1, [X8 + 0x40]
	0x0340A73C BL 0x1C16E00
	0x0340A740 CBZ X0, 0x340A824
	0x0340A744 LDR W8, [X20 + 0x18]
	0x0340A748 CMP W8, 0x1
	0x0340A74C B.LS 0x340A820
	0x0340A750 LDR X8, [X22]
	0x0340A754 ADD X1, X31, 0xC
	0x0340A758 STR X8, [X20 + 0x28]
	0x0340A75C LDR W8, [X19 + 0x64]
	0x0340A760 LDR X0, [X24]
	0x0340A764 STR W8, [X31 + 0xC]
	0x0340A768 BL 0x1C16E04
	0x0340A76C MOV X21, X0
	0x0340A770 CBZ X0, 0x340A788
	0x0340A774 LDR X8, [X20]
	0x0340A778 MOV X0, X21
	0x0340A77C LDR X1, [X8 + 0x40]
	0x0340A780 BL 0x1C16E00
	0x0340A784 CBZ X0, 0x340A824
	0x0340A788 LDR W8, [X20 + 0x18]
	0x0340A78C CMP W8, 0x2
	0x0340A790 B.LS 0x340A820
	0x0340A794 STR X21, [X20 + 0x30]
	0x0340A798 LDR X0, [X23]
	0x0340A79C CBZ X0, 0x340A7B4
	0x0340A7A0 LDR X8, [X20]
	0x0340A7A4 LDR X1, [X8 + 0x40]
	0x0340A7A8 BL 0x1C16E00
	0x0340A7AC CBZ X0, 0x340A824
	0x0340A7B0 LDR W8, [X20 + 0x18]
	0x0340A7B4 CMP W8, 0x3
	0x0340A7B8 B.LS 0x340A820
	0x0340A7BC LDR X8, [X23]
	0x0340A7C0 ADRP X21, 0xD24000
	0x0340A7C4 ADRP X22, 0xD24000
	0x0340A7C8 LDR X21, [X21 + 0x138]
	0x0340A7CC LDR X22, [X22 + 0x100]
	0x0340A7D0 MOV X0, X20
	0x0340A7D4 MOV X1, X31
	0x0340A7D8 STR X8, [X20 + 0x38]
	0x0340A7DC BL 0x3227578
	0x0340A7E0 LDR X2, [X19 + 0x68]
	0x0340A7E4 LDR X1, [X21]
	0x0340A7E8 LDR X3, [X23]
	0x0340A7EC MOV X4, X31
	0x0340A7F0 BL 0x32277C4
	0x0340A7F4 LDR X2, [X19 + 0x70]
	0x0340A7F8 LDR X1, [X22]
	0x0340A7FC LDR X3, [X23]
	0x0340A800 MOV X4, X31
	0x0340A804 BL 0x32277C4
	0x0340A808 LDP X20, X19, [X31 + 0x70]
	0x0340A80C LDP X22, X21, [X31 + 0x60]
	0x0340A810 LDP X24, X23, [X31 + 0x50]
	0x0340A814 LDP X30, X25, [X31 + 0x40]
	0x0340A818 ADD X31, X31, 0x80
	0x0340A81C RET
	0x0340A820 BL 0x1C16F28
	0x0340A824 BL 0x1C16F44
	0x0340A828 MOV X1, X31
	0x0340A82C BL 0x1C16DEC
	0x0340A830 BL 0x1C16F20
	0x0340A834 MOV X1, X31
	0x0340A838 B 0x33BDD8C
	0x0340A83C LDR X0, [X0 + 0x10]
	0x0340A840 RET
	0x0340A844 STR X1, [X0 + 0x10]
	0x0340A848 RET
	0x0340A84C STR X30, [X31 - 0x20]!
	0x0340A850 STP X20, X19, [X31 + 0x10]
	0x0340A854 ADRP X20, 0xFD3000
	0x0340A858 LDRB W8, [X20 + 0x551]
	0x0340A85C MOV X19, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0xFD4000
	012 Move X25, 0xCEA000
	013 Move X26, 0xD24000
	014 Move X23, 0xCEA000
	015 Move X20, 0xD24000
	016 Move X24, 0xD25000
	017 Move X21, 0xD25000
	018 Move X22, 0xD24000
	019 Move X25, [X25+2440]
	020 Move X26, [X26+3800]
	021 Move W8, [X27+1359]
	022 Move X23, [X23+2104]
	023 Move X20, [X20+3688]
	024 Move X24, [X24+208]
	025 Move X21, [X21+216]
	026 Move X22, [X22+3408]
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {55}
	032 Move X0, 0xD25000
	033 Move X0, [X0+208]
	034 Call 0x1C17CF4
	035 Move X0, 0xCEA000
	036 Move X0, [X0+2104]
	037 Call 0x1C17CF4
	038 Move X0, 0xD24000
	039 Move X0, [X0+3688]
	040 Call 0x1C17CF4
	041 Move X0, 0xD24000
	042 Move X0, [X0+3408]
	043 Call 0x1C17CF4
	044 Move X0, 0xD25000
	045 Move X0, [X0+216]
	046 Call 0x1C17CF4
	047 Move X0, 0xD24000
	048 Move X0, [X0+3800]
	049 Call 0x1C17CF4
	050 Move X0, 0xCEA000
	051 Move X0, [X0+2440]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X27+1359], W8
	055 Move X2, [X19+16]
	056 Move X0, [X25]
	057 Move X1, [X26]
	058 Move X3, [X23]
	059 Move X4, X31
	060 Call String.Concat, X0, X1, X2, X3
	061 Move X2, [X19+24]
	062 Move X1, [X20]
	063 Move X3, [X23]
	064 Move X4, X31
	065 Call String.Concat, X0, X1, X2, X3
	066 Move X20, X0
	067 Move X0, X19
	068 Call ApiSubscriptionList.get_ValidatedSubscriptions, X0
	069 Move X8, [X23]
	070 Move X2, [X24]
	071 Move X1, X0
	072 Move X0, X8
	073 Call String.Join, X0, X1
	074 Move X1, [X21]
	075 Move X3, [X22]
	076 Move X2, X0
	077 Move X0, X20
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X4, X31
	087 Move X30, [X31+80]
	088 Move X27, [X31+88]
	089 Call String.Concat, X0, X1, X2, X3
	090 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0340A860 TBNZ X8, 0x0, 0x340A884
	0x0340A864 ADRP X0, 0xD24000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

