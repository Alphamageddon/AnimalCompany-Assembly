Type: Nakama.ApiClient/<LinkSteamAsync>d__28

Method: System.Void MoveNext()

Disassembly:
	0x0342B2A8 BL 0x1C16CF4
	0x0342B2AC ADRP X0, 0xCC8000
	0x0342B2B0 LDR X0, [X0 + 0x988]
	0x0342B2B4 BL 0x1C16CF4
	0x0342B2B8 ADRP X0, 0xD03000
	0x0342B2BC LDR X0, [X0 + 0xF20]
	0x0342B2C0 BL 0x1C16CF4
	0x0342B2C4 MOVZ W8, 0x1
	0x0342B2C8 STRB W8, [X20 + 0x64D]
	0x0342B2CC STR X31, [X31 + 0x18]
	0x0342B2D0 ADRP X27, 0xD03000
	0x0342B2D4 LDR W8, [X19]
	0x0342B2D8 LDR X27, [X27 + 0x448]
	0x0342B2DC CBZ W8, 0x342B6E8
	0x0342B2E0 ADRP X8, 0xD03000
	0x0342B2E4 ADRP X9, 0xCC8000
	0x0342B2E8 LDR X8, [X8 + 0x7E0]
	0x0342B2EC LDR X9, [X9 + 0x988]
	0x0342B2F0 LDR X24, [X19 + 0x38]
	0x0342B2F4 LDRB W10, [X19 + 0x20]
	0x0342B2F8 LDR X20, [X8]
	0x0342B2FC LDR X21, [X9]
	0x0342B300 CBZ W10, 0x342B404
	0x0342B304 ADRP X8, 0xCC8000
	0x0342B308 LDR X8, [X8 + 0x9D0]
	0x0342B30C LDR X0, [X8]
	0x0342B310 MOVZ W1, 0x4
	0x0342B314 BL 0x1C16D6C
	0x0342B318 MOV X22, X0
	0x0342B31C CBZ X0, 0x342B840
	0x0342B320 CBZ X21, 0x342B338
	0x0342B324 LDR X8, [X22]
	0x0342B328 LDR X1, [X8 + 0x40]
	0x0342B32C MOV X0, X21
	0x0342B330 BL 0x1C16E00
	0x0342B334 CBZ X0, 0x342B868
	0x0342B338 LDR W8, [X22 + 0x18]
	0x0342B33C CBZ W8, 0x342B844
	0x0342B340 STR X21, [X22 + 0x20]
	0x0342B344 ADRP X21, 0xD03000
	0x0342B348 LDR X21, [X21 + 0xF18]
	0x0342B34C LDR X0, [X21]
	0x0342B350 CBZ X0, 0x342B368
	0x0342B354 LDR X8, [X22]
	0x0342B358 LDR X1, [X8 + 0x40]
	0x0342B35C BL 0x1C16E00
	0x0342B360 CBZ X0, 0x342B874
	0x0342B364 LDR W8, [X22 + 0x18]
	0x0342B368 CMP W8, 0x1
	0x0342B36C B.LS 0x342B848
	0x0342B370 LDR X8, [X21]
	0x0342B374 ADRP X9, 0xCC9000
	0x0342B378 STR X8, [X22 + 0x28]
	0x0342B37C LDR X8, [X19 + 0x20]
	0x0342B380 LDR X9, [X9 + 0x478]
	0x0342B384 STR X8, [X31 + 0x10]
	0x0342B388 LDR X0, [X9]
	0x0342B38C ADD X1, X31, 0x10
	0x0342B390 BL 0x1C16E04
	0x0342B394 MOV X21, X0
	0x0342B398 CBZ X0, 0x342B3B0
	0x0342B39C LDR X8, [X22]
	0x0342B3A0 LDR X1, [X8 + 0x40]
	0x0342B3A4 MOV X0, X21
	0x0342B3A8 BL 0x1C16E00
	0x0342B3AC CBZ X0, 0x342B880
	0x0342B3B0 LDR W8, [X22 + 0x18]
	0x0342B3B4 CMP W8, 0x2
	0x0342B3B8 B.LS 0x342B84C
	0x0342B3BC STR X21, [X22 + 0x30]
	0x0342B3C0 ADRP X21, 0xCD1000
	0x0342B3C4 LDR X21, [X21 + 0x720]
	0x0342B3C8 LDR X0, [X21]
	0x0342B3CC CBZ X0, 0x342B3E4
	0x0342B3D0 LDR X8, [X22]
	0x0342B3D4 LDR X1, [X8 + 0x40]
	0x0342B3D8 BL 0x1C16E00
	0x0342B3DC CBZ X0, 0x342B88C
	0x0342B3E0 LDR W8, [X22 + 0x18]
	0x0342B3E4 CMP W8, 0x3
	0x0342B3E8 B.LS 0x342B854
	0x0342B3EC LDR X8, [X21]
	0x0342B3F0 STR X8, [X22 + 0x38]
	0x0342B3F4 MOV X0, X22
	0x0342B3F8 MOV X1, X31
	0x0342B3FC BL 0x3227578
	0x0342B400 MOV X21, X0
	0x0342B404 LDRB W8, [X19 + 0x28]
	0x0342B408 CBZ W8, 0x342B50C
	0x0342B40C ADRP X8, 0xCC8000
	0x0342B410 LDR X8, [X8 + 0x9D0]
	0x0342B414 LDR X0, [X8]
	0x0342B418 MOVZ W1, 0x4
	0x0342B41C BL 0x1C16D6C
	0x0342B420 MOV X22, X0
	0x0342B424 CBZ X0, 0x342B850
	0x0342B428 CBZ X21, 0x342B440
	0x0342B42C LDR X8, [X22]
	0x0342B430 LDR X1, [X8 + 0x40]
	0x0342B434 MOV X0, X21
	0x0342B438 BL 0x1C16E00
	0x0342B43C CBZ X0, 0x342B898
	0x0342B440 LDR W8, [X22 + 0x18]
	0x0342B444 CBZ W8, 0x342B858
	0x0342B448 STR X21, [X22 + 0x20]
	0x0342B44C ADRP X21, 0xD03000
	0x0342B450 LDR X21, [X21 + 0xF60]
	0x0342B454 LDR X0, [X21]
	0x0342B458 CBZ X0, 0x342B470
	0x0342B45C LDR X8, [X22]
	0x0342B460 LDR X1, [X8 + 0x40]
	0x0342B464 BL 0x1C16E00
	0x0342B468 CBZ X0, 0x342B8A4
	0x0342B46C LDR W8, [X22 + 0x18]
	0x0342B470 CMP W8, 0x1
	0x0342B474 B.LS 0x342B85C
	0x0342B478 LDR X8, [X21]
	0x0342B47C ADRP X9, 0xCC9000
	0x0342B480 STR X8, [X22 + 0x28]
	0x0342B484 LDR X8, [X19 + 0x28]
	0x0342B488 LDR X9, [X9 + 0x478]
	0x0342B48C STR X8, [X31 + 0x10]
	0x0342B490 LDR X0, [X9]
	0x0342B494 ADD X1, X31, 0x10
	0x0342B498 BL 0x1C16E04
	0x0342B49C MOV X21, X0
	0x0342B4A0 CBZ X0, 0x342B4B8
	0x0342B4A4 LDR X8, [X22]
	0x0342B4A8 LDR X1, [X8 + 0x40]
	0x0342B4AC MOV X0, X21
	0x0342B4B0 BL 0x1C16E00
	0x0342B4B4 CBZ X0, 0x342B8B0
	0x0342B4B8 LDR W8, [X22 + 0x18]
	0x0342B4BC CMP W8, 0x2
	0x0342B4C0 B.LS 0x342B860
	0x0342B4C4 STR X21, [X22 + 0x30]
	0x0342B4C8 ADRP X21, 0xCD1000
	0x0342B4CC LDR X21, [X21 + 0x720]
	0x0342B4D0 LDR X0, [X21]
	0x0342B4D4 CBZ X0, 0x342B4EC
	0x0342B4D8 LDR X8, [X22]
	0x0342B4DC LDR X1, [X8 + 0x40]
	0x0342B4E0 BL 0x1C16E00
	0x0342B4E4 CBZ X0, 0x342B8BC
	0x0342B4E8 LDR W8, [X22 + 0x18]
	0x0342B4EC CMP W8, 0x3
	0x0342B4F0 B.LS 0x342B864
	0x0342B4F4 LDR X8, [X21]
	0x0342B4F8 STR X8, [X22 + 0x38]
	0x0342B4FC MOV X0, X22
	0x0342B500 MOV X1, X31
	0x0342B504 BL 0x3227578
	0x0342B508 MOV X21, X0
	0x0342B50C LDR X22, [X19 + 0x30]
	0x0342B510 CBZ X22, 0x342B564
	0x0342B514 ADRP X8, 0xCCA000
	0x0342B518 LDR X8, [X8 + 0xA28]
	0x0342B51C LDR X0, [X8]
	0x0342B520 LDR W8, [X0 + 0xE0]
	0x0342B524 CBNZ W8, 0x342B52C
	0x0342B528 BL 0x1C16DFC
	0x0342B52C MOV X0, X22
	0x0342B530 MOV X1, X31
	0x0342B534 BL 0x3624D20
	0x0342B538 ADRP X8, 0xD03000
	0x0342B53C LDR X8, [X8 + 0xF20]
	0x0342B540 ADRP X9, 0xCD1000
	0x0342B544 LDR X9, [X9 + 0x720]
	0x0342B548 MOV X2, X0
	0x0342B54C LDR X1, [X8]
	0x0342B550 LDR X3, [X9]
	0x0342B554 MOV X0, X21
	0x0342B558 MOV X4, X31
	0x0342B55C BL 0x32277C4
	0x0342B560 MOV X21, X0
	0x0342B564 CBZ X24, 0x342B81C
	0x0342B568 LDR X0, [X24 + 0x20]
	0x0342B56C CBZ X0, 0x342B820
	0x0342B570 MOV X1, X31
	0x0342B574 BL 0x361B448
	0x0342B578 ADRP X8, 0xCD1000
	0x0342B57C LDR X8, [X8 + 0x8D8]
	0x0342B580 MOV X22, X0
	0x0342B584 LDR X0, [X8]
	0x0342B588 MOVZ W1, 0x1
	0x0342B58C BL 0x1C16D6C
	0x0342B590 MOV X1, X0
	0x0342B594 CBZ X1, 0x342B824
	0x0342B598 LDR W8, [X1 + 0x18]
	0x0342B59C CBZ W8, 0x342B828
	0x0342B5A0 MOVZ W8, 0x2F
	0x0342B5A4 STRH W8, [X1 + 0x20]
	0x0342B5A8 CBZ X22, 0x342B82C
	0x0342B5AC MOV X0, X22
	0x0342B5B0 MOV X2, X31
	0x0342B5B4 BL 0x322BC58
	0x0342B5B8 MOV X1, X20
	0x0342B5BC MOV X2, X31
	0x0342B5C0 BL 0x321B938
	0x0342B5C4 ADRP X8, 0xCD1000
	0x0342B5C8 LDR X8, [X8 + 0x3A0]
	0x0342B5CC MOV X22, X0
	0x0342B5D0 LDR X23, [X24 + 0x20]
	0x0342B5D4 LDR X0, [X8]
	0x0342B5D8 BL 0x1C16F10
	0x0342B5DC MOV X20, X0
	0x0342B5E0 MOV X1, X23
	0x0342B5E4 MOV X2, X31
	0x0342B5E8 BL 0x36281F8
	0x0342B5EC CBZ X20, 0x342B830
	0x0342B5F0 MOV X0, X20
	0x0342B5F4 MOV X1, X22
	0x0342B5F8 MOV X2, X31
	0x0342B5FC BL 0x36288CC
	0x0342B600 MOV X0, X20
	0x0342B604 MOV X1, X21
	0x0342B608 MOV X2, X31
	0x0342B60C BL 0x3628980
	0x0342B610 MOV X0, X20
	0x0342B614 MOV X1, X31
	0x0342B618 BL 0x3628A38
	0x0342B61C ADRP X8, 0xCF1000
	0x0342B620 ADRP X9, 0xCC9000
	0x0342B624 LDR X8, [X8 + 0x4D0]
	0x0342B628 LDR X9, [X9 + 0x6D0]
	0x0342B62C MOV X20, X0
	0x0342B630 LDR X21, [X8]
	0x0342B634 LDR X0, [X9]
	0x0342B638 BL 0x1C16F10
	0x0342B63C ADRP X8, 0xCC9000
	0x0342B640 LDR X8, [X8 + 0x6C0]
	0x0342B644 MOV X22, X0
	0x0342B648 LDR X1, [X8]
	0x0342B64C BL 0x2AA4804
	0x0342B650 ADRP X8, 0xD03000
	0x0342B654 LDR X8, [X8 + 0x7D8]
	0x0342B658 LDR X1, [X19 + 0x40]
	0x0342B65C LDR X0, [X8]
	0x0342B660 MOV X2, X31
	0x0342B664 BL 0x321B938
	0x0342B668 CBZ X22, 0x342B834
	0x0342B66C ADRP X8, 0xD03000
	0x0342B670 LDR X8, [X8 + 0x7D0]
	0x0342B674 ADRP X9, 0xCC9000
	0x0342B678 LDR X9, [X9 + 0x810]
	0x0342B67C MOV X2, X0
	0x0342B680 LDR X1, [X8]
	0x0342B684 LDR X3, [X9]
	0x0342B688 MOV X0, X22
	0x0342B68C BL 0x2AA5098
	0x0342B690 LDR X23, [X24 + 0x10]
	0x0342B694 CBZ X23, 0x342B838
	0x0342B698 ADRP X10, 0xD03000
	0x0342B69C LDR X10, [X10 + 0x7B8]
	0x0342B6A0 LDR X8, [X23]
	0x0342B6A4 LDR W25, [X24 + 0x18]
	0x0342B6A8 LDP X26, X24, [X19 + 0x48]
	0x0342B6AC LDR X1, [X10]
	0x0342B6B0 LDRH W9, [X8 + 0x12E]
	0x0342B6B4 CBZ X9, 0x342B6D8
	0x0342B6B8 LDR X10, [X8 + 0xB0]
	0x0342B6BC ADD X10, X10, 0x8
	0x0342B6C0 LDUR X11, [X10 - 0x8]
	0x0342B6C4 CMP X11, X1
	0x0342B6C8 B.EQ 0x342B700
	0x0342B6CC SUBS X9, X9, 0x1
	0x0342B6D0 ADD X10, X10, 0x10
	0x0342B6D4 B.NE 0x342B6C0
	0x0342B6D8 MOVZ W2, 0x3
	0x0342B6DC MOV X0, X23
	0x0342B6E0 BL 0x1C5C788
	0x0342B6E4 B 0x342B710
	0x0342B6E8 LDR X8, [X19 + 0x58]
	0x0342B6EC MOVN W9, 0x0
	0x0342B6F0 STR X8, [X31 + 0x18]
	0x0342B6F4 STR X31, [X19 + 0x58]
	0x0342B6F8 STR W9, [X19]
	0x0342B6FC B 0x342B76C
	0x0342B700 LDR W9, [X10]
	0x0342B704 ADD W9, W9, 0x3
	0x0342B708 ADD X8, X8, W9, 0x4, SXTW
	0x0342B70C ADD X0, X8, 0x138
	0x0342B710 LDP X8, X9, [X0]
	0x0342B714 MOV X0, X23
	0x0342B718 MOV X1, X21
	0x0342B71C MOV X2, X20
	0x0342B720 MOV X3, X22
	0x0342B724 MOV X4, X31
	0x0342B728 MOV W5, W25
	0x0342B72C MOV X6, X26
	0x0342B730 MOV X7, X24
	0x0342B734 STR X9, [X31]
	0x0342B738 BLR X8
	0x0342B73C CBZ X0, 0x342B83C
	0x0342B740 ADRP X8, 0xCCB000
	0x0342B744 LDR X8, [X8 + 0x1F8]
	0x0342B748 LDR X1, [X8]
	0x0342B74C BL 0x269F5D0
	0x0342B750 ADRP X8, 0xCCB000
	0x0342B754 LDR X8, [X8 + 0x1F0]
	0x0342B758 STR X0, [X31 + 0x18]
	0x0342B75C LDR X1, [X8]
	0x0342B760 ADD X0, X31, 0x18
	0x0342B764 BL 0x2677430
	0x0342B768 TBZ X0, 0x0, 0x342B7C8
	0x0342B76C ADRP X8, 0xCCB000
	0x0342B770 LDR X8, [X8 + 0x1E0]
	0x0342B774 ADD X0, X31, 0x18
	0x0342B778 LDR X1, [X8]
	0x0342B77C BL 0x2677474
	0x0342B780 ADRP X8, 0xD03000
	0x0342B784 LDR X8, [X8 + 0xF58]
	0x0342B788 LDR X1, [X8]
	0x0342B78C BL 0x220E6DC
	0x0342B790 MOVN W8, 0x1
	0x0342B794 STR W8, [X19], #0x8
	0x0342B798 MOV X20, X0
	0x0342B79C LDR X0, [X27]
	0x0342B7A0 ADRP X21, 0xD03000
	0x0342B7A4 LDR W8, [X0 + 0xE0]
	0x0342B7A8 LDR X21, [X21 + 0xF50]
	0x0342B7AC CBNZ W8, 0x342B7B4
	0x0342B7B0 BL 0x1C16DFC
	0x0342B7B4 LDR X2, [X21]
	0x0342B7B8 MOV X0, X19
	0x0342B7BC MOV X1, X20
	0x0342B7C0 BL 0x26322B0
	0x0342B7C4 B 0x342B800
	0x0342B7C8 STR W31, [X19]
	0x0342B7CC LDR X8, [X31 + 0x18]
	0x0342B7D0 STR X8, [X19 + 0x58]
	0x0342B7D4 LDR X0, [X27]
	0x0342B7D8 LDR W8, [X0 + 0xE0]
	0x0342B7DC CBNZ W8, 0x342B7E4
	0x0342B7E0 BL 0x1C16DFC
	0x0342B7E4 ADRP X8, 0xD03000
	0x0342B7E8 LDR X8, [X8 + 0xF48]
	0x0342B7EC ADD X0, X19, 0x8
	0x0342B7F0 LDR X3, [X8]
	0x0342B7F4 ADD X1, X31, 0x18
	0x0342B7F8 MOV X2, X19
	0x0342B7FC BL 0x1FB3570
	0x0342B800 LDP X20, X19, [X31 + 0x60]
	0x0342B804 LDP X22, X21, [X31 + 0x50]
	0x0342B808 LDP X24, X23, [X31 + 0x40]
	0x0342B80C LDP X26, X25, [X31 + 0x30]
	0x0342B810 LDP X30, X27, [X31 + 0x20]
	0x0342B814 ADD X31, X31, 0x70

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB3000
	014 Move W8, [X20+1609]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xD04000
	021 Move X0, [X0+3792]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCC000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD2000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCA000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCCA000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCA000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD04000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCC000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCC000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCC000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD2000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCF2000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xD04000
	057 Move X0, [X0+3800]
	058 Call 0x1C17CF4
	059 Move X0, 0xD04000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xD04000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCC9000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1609], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCCC000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xD04000
	086 Move X9, 0xCC9000
	087 Move X8, [X8+3800]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCD2000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCD2000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCF2000
	139 Move X9, 0xCCA000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCCA000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xD04000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xD04000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCCA000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xD04000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCCC000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCCC000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCCC000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xD04000
	269 Move X8, [X8+3792]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCD1000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xD04000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xD04000
	301 Move X0, [X0+3808]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCC9000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCCC000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA8A000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342B818 RET
	0x0342B81C BL 0x1C16F20
	0x0342B820 BL 0x1C16F20
	0x0342B824 BL 0x1C16F20
	0x0342B828 BL 0x1C16F28
	0x0342B82C BL 0x1C16F20
	0x0342B830 BL 0x1C16F20
	0x0342B834 BL 0x1C16F20
	0x0342B838 BL 0x1C16F20
	0x0342B83C BL 0x1C16F20
	0x0342B840 BL 0x1C16F20
	0x0342B844 BL 0x1C16F28
	0x0342B848 BL 0x1C16F28
	0x0342B84C BL 0x1C16F28
	0x0342B850 BL 0x1C16F20
	0x0342B854 BL 0x1C16F28
	0x0342B858 BL 0x1C16F28
	0x0342B85C BL 0x1C16F28
	0x0342B860 BL 0x1C16F28
	0x0342B864 BL 0x1C16F28
	0x0342B868 BL 0x1C16F44
	0x0342B86C MOV X1, X31
	0x0342B870 BL 0x1C16DEC
	0x0342B874 BL 0x1C16F44
	0x0342B878 MOV X1, X31
	0x0342B87C BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB3000
	007 Move X22, 0xCCC000
	008 Move W8, [X21+1610]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCCC000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1610], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

