Type: Nakama.Client/<ListTournamentRecordsAroundOwnerAsync>d__93

Method: System.Void MoveNext()

Disassembly:
	0x03462C34 ADD X8, X8, X9, 0x4, LSL
	0x03462C38 ADD X0, X8, 0x138
	0x03462C3C LDP X8, X1, [X0]
	0x03462C40 MOV X0, X21
	0x03462C44 BLR X8
	0x03462C48 CBNZ X24, 0x3462CE8
	0x03462C4C CMP W22, 0x1
	0x03462C50 B.NE 0x3462D08
	0x03462C54 MOV X0, X23
	0x03462C58 BL 0x3EB1AD0
	0x03462C5C MOV X20, X0
	0x03462C60 ADRP X0, 0xC91000
	0x03462C64 LDR X0, [X0 + 0x7D0]
	0x03462C68 BL 0x1C16D08
	0x03462C6C LDR X8, [X20]
	0x03462C70 LDR X1, [X8]
	0x03462C74 BL 0x1C17270
	0x03462C78 TBZ X0, 0x0, 0x3462CC8
	0x03462C7C LDR X20, [X20]
	0x03462C80 BL 0x3EB1AE0
	0x03462C84 MOVN W8, 0x1
	0x03462C88 STR X31, [X19 + 0x70]
	0x03462C8C STR W8, [X19], #0x8
	0x03462C90 ADRP X0, 0xCCC000
	0x03462C94 LDR X0, [X0 + 0x730]
	0x03462C98 BL 0x1C16D08
	0x03462C9C LDR W8, [X0 + 0xE0]
	0x03462CA0 CBNZ W8, 0x3462CA8
	0x03462CA4 BL 0x1C16DFC
	0x03462CA8 ADRP X0, 0xCCD000
	0x03462CAC LDR X0, [X0 + 0x1C0]
	0x03462CB0 BL 0x1C16D08
	0x03462CB4 MOV X2, X0
	0x03462CB8 MOV X0, X19
	0x03462CBC MOV X1, X20
	0x03462CC0 BL 0x26324C8
	0x03462CC4 B 0x3462954
	0x03462CC8 MOVZ W0, 0x8
	0x03462CCC BL 0x3EB1AF0
	0x03462CD0 LDR X8, [X20]
	0x03462CD4 STR X8, [X0]
	0x03462CD8 ADRP X1, 0xA52000
	0x03462CDC ADD X1, X1, 0xE58
	0x03462CE0 MOV X2, X31
	0x03462CE4 BL 0x3EB1B00
	0x03462CE8 MOV X0, X24
	0x03462CEC BL 0x1C16F18
	0x03462CF0 MOV X22, X1
	0x03462CF4 MOV X23, X0
	0x03462CF8 TBNZ X25, 0x1F, 0x3462BE4
	0x03462CFC B 0x3462C48
	0x03462D00 MOV X23, X0
	0x03462D04 BL 0x3EB1AE0
	0x03462D08 MOV X0, X23
	0x03462D0C BL 0x1D2C690
	0x03462D10 BL 0x1990590
	0x03462D14 STR X30, [X31 - 0x30]!
	0x03462D18 STP X22, X21, [X31 + 0x10]
	0x03462D1C STP X20, X19, [X31 + 0x20]
	0x03462D20 ADRP X22, 0xF7B000
	0x03462D24 ADRP X21, 0xCCC000
	0x03462D28 LDRB W8, [X22 + 0x7B6]
	0x03462D2C LDR X21, [X21 + 0x730]
	0x03462D30 MOV X19, X1
	0x03462D34 MOV X20, X0
	0x03462D38 TBNZ X8, 0x0, 0x3462D5C
	0x03462D3C ADRP X0, 0xCCD000
	0x03462D40 LDR X0, [X0 + 0x1C8]
	0x03462D44 BL 0x1C16CF4
	0x03462D48 ADRP X0, 0xCCC000
	0x03462D4C LDR X0, [X0 + 0x730]
	0x03462D50 BL 0x1C16CF4
	0x03462D54 MOVZ W8, 0x1
	0x03462D58 STRB W8, [X22 + 0x7B6]
	0x03462D5C LDR X0, [X21]
	0x03462D60 ADRP X21, 0xCCD000
	0x03462D64 LDR W8, [X0 + 0xE0]
	0x03462D68 LDR X21, [X21 + 0x1C8]
	0x03462D6C CBNZ W8, 0x3462D74
	0x03462D70 BL 0x1C16DFC
	0x03462D74 LDR X2, [X21]
	0x03462D78 ADD X0, X20, 0x8
	0x03462D7C MOV X1, X19
	0x03462D80 LDP X20, X19, [X31 + 0x20]
	0x03462D84 LDP X22, X21, [X31 + 0x10]
	0x03462D88 LDR X30, [X31], #0x30
	0x03462D8C B 0x2632228
	0x03462D90 SUB X31, X31, 0x90
	0x03462D94 STP X29, X30, [X31 + 0x30]
	0x03462D98 STP X28, X27, [X31 + 0x40]
	0x03462D9C STP X26, X25, [X31 + 0x50]
	0x03462DA0 STP X24, X23, [X31 + 0x60]
	0x03462DA4 STP X22, X21, [X31 + 0x70]
	0x03462DA8 STP X20, X19, [X31 + 0x80]
	0x03462DAC ADRP X20, 0xF7B000
	0x03462DB0 LDRB W8, [X20 + 0x7B7]
	0x03462DB4 MOV X19, X0
	0x03462DB8 TBNZ X8, 0x0, 0x3462EFC
	0x03462DBC ADRP X0, 0xCCE000
	0x03462DC0 LDR X0, [X0 + 0xE0]
	0x03462DC4 BL 0x1C16CF4
	0x03462DC8 ADRP X0, 0xCCE000
	0x03462DCC LDR X0, [X0 + 0x2B8]
	0x03462DD0 BL 0x1C16CF4
	0x03462DD4 ADRP X0, 0xCCE000
	0x03462DD8 LDR X0, [X0 + 0x2C0]
	0x03462DDC BL 0x1C16CF4
	0x03462DE0 ADRP X0, 0xCCD000
	0x03462DE4 LDR X0, [X0 + 0x1A0]
	0x03462DE8 BL 0x1C16CF4
	0x03462DEC ADRP X0, 0xCCC000
	0x03462DF0 LDR X0, [X0 + 0x730]
	0x03462DF4 BL 0x1C16CF4
	0x03462DF8 ADRP X0, 0xC93000
	0x03462DFC LDR X0, [X0 + 0xA10]
	0x03462E00 BL 0x1C16CF4
	0x03462E04 ADRP X0, 0xC92000
	0x03462E08 LDR X0, [X0 + 0x9F0]
	0x03462E0C BL 0x1C16CF4
	0x03462E10 ADRP X0, 0xCCE000
	0x03462E14 LDR X0, [X0 + 0x278]
	0x03462E18 BL 0x1C16CF4
	0x03462E1C ADRP X0, 0xCCE000
	0x03462E20 LDR X0, [X0 + 0x108]
	0x03462E24 BL 0x1C16CF4
	0x03462E28 ADRP X0, 0xCCE000
	0x03462E2C LDR X0, [X0 + 0x280]
	0x03462E30 BL 0x1C16CF4
	0x03462E34 ADRP X0, 0xC91000
	0x03462E38 LDR X0, [X0 + 0xE00]
	0x03462E3C BL 0x1C16CF4
	0x03462E40 ADRP X0, 0xCCE000
	0x03462E44 LDR X0, [X0 + 0x110]
	0x03462E48 BL 0x1C16CF4
	0x03462E4C ADRP X0, 0xCCE000
	0x03462E50 LDR X0, [X0 + 0x118]
	0x03462E54 BL 0x1C16CF4
	0x03462E58 ADRP X0, 0xC91000
	0x03462E5C LDR X0, [X0 + 0xE18]
	0x03462E60 BL 0x1C16CF4
	0x03462E64 ADRP X0, 0xC92000
	0x03462E68 LDR X0, [X0 + 0x818]
	0x03462E6C BL 0x1C16CF4
	0x03462E70 ADRP X0, 0xCCD000
	0x03462E74 LDR X0, [X0 + 0x7C8]
	0x03462E78 BL 0x1C16CF4
	0x03462E7C ADRP X0, 0xCCD000
	0x03462E80 LDR X0, [X0 + 0x7D0]
	0x03462E84 BL 0x1C16CF4
	0x03462E88 ADRP X0, 0xCCE000
	0x03462E8C LDR X0, [X0 + 0x288]
	0x03462E90 BL 0x1C16CF4
	0x03462E94 ADRP X0, 0xCCE000
	0x03462E98 LDR X0, [X0 + 0x290]
	0x03462E9C BL 0x1C16CF4
	0x03462EA0 ADRP X0, 0xC92000
	0x03462EA4 LDR X0, [X0 + 0x830]
	0x03462EA8 BL 0x1C16CF4
	0x03462EAC ADRP X0, 0xC92000
	0x03462EB0 LDR X0, [X0 + 0x838]
	0x03462EB4 BL 0x1C16CF4
	0x03462EB8 ADRP X0, 0xCCE000
	0x03462EBC LDR X0, [X0 + 0x298]
	0x03462EC0 BL 0x1C16CF4
	0x03462EC4 ADRP X0, 0xC92000
	0x03462EC8 LDR X0, [X0 + 0x840]
	0x03462ECC BL 0x1C16CF4
	0x03462ED0 ADRP X0, 0xCCE000
	0x03462ED4 LDR X0, [X0 + 0x2A0]
	0x03462ED8 BL 0x1C16CF4
	0x03462EDC ADRP X0, 0xCCE000
	0x03462EE0 LDR X0, [X0 + 0x2C8]
	0x03462EE4 BL 0x1C16CF4
	0x03462EE8 ADRP X0, 0xCCE000
	0x03462EEC LDR X0, [X0 + 0x2D0]
	0x03462EF0 BL 0x1C16CF4
	0x03462EF4 MOVZ W8, 0x1
	0x03462EF8 STRB W8, [X20 + 0x7B7]
	0x03462EFC STP X31, X31, [X31 + 0x20]
	0x03462F00 STR X31, [X31 + 0x18]
	0x03462F04 LDR W25, [X19]
	0x03462F08 LDR X20, [X19 + 0x20]
	0x03462F0C CBZ W25, 0x3462F30
	0x03462F10 CMP W25, 0x1
	0x03462F14 B.NE 0x3462F5C
	0x03462F18 LDR X8, [X19 + 0x80]
	0x03462F1C MOVN W25, 0x0
	0x03462F20 STR X8, [X31 + 0x18]
	0x03462F24 STR X31, [X19 + 0x80]
	0x03462F28 STR W25, [X19]
	0x03462F2C B 0x34632A0
	0x03462F30 LDR X8, [X19 + 0x78]
	0x03462F34 MOVN W25, 0x0
	0x03462F38 STR X8, [X31 + 0x20]
	0x03462F3C STR X31, [X19 + 0x78]
	0x03462F40 STR W25, [X19]
	0x03462F44 ADRP X8, 0xC92000
	0x03462F48 LDR X8, [X8 + 0x830]
	0x03462F4C ADD X0, X31, 0x20
	0x03462F50 LDR X1, [X8]
	0x03462F54 BL 0x2677474
	0x03462F58 B 0x34631BC
	0x03462F5C ADRP X8, 0xCCE000
	0x03462F60 LDR X8, [X8 + 0x2D0]
	0x03462F64 LDR X0, [X8]
	0x03462F68 BL 0x1C16F10
	0x03462F6C MOV X21, X0
	0x03462F70 MOV X1, X31
	0x03462F74 BL 0x344B950
	0x03462F78 STR X21, [X19 + 0x70]
	0x03462F7C CBZ X21, 0x3463B3C
	0x03462F80 LDR X8, [X19 + 0x20]
	0x03462F84 STR X8, [X21 + 0x10]
	0x03462F88 LDR X8, [X19 + 0x28]
	0x03462F8C STR X8, [X21 + 0x18]
	0x03462F90 LDR X8, [X19 + 0x30]
	0x03462F94 STR X8, [X21 + 0x20]
	0x03462F98 LDR X8, [X19 + 0x38]
	0x03462F9C STR X8, [X21 + 0x28]
	0x03462FA0 LDR W8, [X19 + 0x40]
	0x03462FA4 STR W8, [X21 + 0x30]
	0x03462FA8 LDR X8, [X19 + 0x48]
	0x03462FAC STR X8, [X21 + 0x38]
	0x03462FB0 LDR V0, [X19 + 0x5]
	0x03462FB4 STR V0, [X21 + 0x4]
	0x03462FB8 LDR X8, [X19 + 0x70]
	0x03462FBC CBZ X8, 0x3463B40
	0x03462FC0 LDR X9, [X19 + 0x60]
	0x03462FC4 STR X9, [X8 + 0x50]
	0x03462FC8 CBZ X20, 0x3463B44
	0x03462FCC LDRB W8, [X20 + 0x10]
	0x03462FD0 CBZ W8, 0x34631C0
	0x03462FD4 LDR X8, [X19 + 0x70]
	0x03462FD8 CBZ X8, 0x3463B48
	0x03462FDC LDR X21, [X8 + 0x18]
	0x03462FE0 CBZ X21, 0x3463B4C
	0x03462FE4 ADRP X23, 0xC92000
	0x03462FE8 LDR X8, [X21]
	0x03462FEC LDR X23, [X23 + 0x818]
	0x03462FF0 LDRH W9, [X8 + 0x12E]
	0x03462FF4 LDR X1, [X23]
	0x03462FF8 CBZ X9, 0x346301C
	0x03462FFC LDR X10, [X8 + 0xB0]
	0x03463000 ADD X10, X10, 0x8
	0x03463004 LDUR X11, [X10 - 0x8]
	0x03463008 CMP X11, X1
	0x0346300C B.EQ 0x346302C
	0x03463010 SUBS X9, X9, 0x1
	0x03463014 ADD X10, X10, 0x10
	0x03463018 B.NE 0x3463004
	0x0346301C MOVZ W2, 0x7
	0x03463020 MOV X0, X21
	0x03463024 BL 0x1C5C788
	0x03463028 B 0x346303C
	0x0346302C LDR W9, [X10]
	0x03463030 ADD W9, W9, 0x7
	0x03463034 ADD X8, X8, W9, 0x4, SXTW
	0x03463038 ADD X0, X8, 0x138
	0x0346303C LDP X8, X1, [X0]
	0x03463040 MOV X0, X21
	0x03463044 BLR X8
	0x03463048 MOV X1, X31
	0x0346304C BL 0x32277A8
	0x03463050 TBNZ X0, 0x0, 0x34631BC
	0x03463054 LDR X8, [X19 + 0x70]
	0x03463058 CBZ X8, 0x3463B50
	0x0346305C ADRP X9, 0xC91000
	0x03463060 LDR X9, [X9 + 0x9F0]
	0x03463064 LDR X21, [X8 + 0x18]
	0x03463068 LDR X0, [X9]
	0x0346306C LDR W9, [X0 + 0xE0]
	0x03463070 CBNZ W9, 0x3463078
	0x03463074 BL 0x1C16DFC
	0x03463078 MOV X0, X31
	0x0346307C BL 0x33616A4
	0x03463080 ADRP X22, 0xC92000
	0x03463084 LDR X22, [X22 + 0xA10]
	0x03463088 MOV X8, X0
	0x0346308C STR X8, [X31 + 0x28]
	0x03463090 LDR X0, [X22]
	0x03463094 LDR W8, [X0 + 0xE0]
	0x03463098 CBNZ W8, 0x34630A4
	0x0346309C BL 0x1C16DFC
	0x034630A0 LDR X0, [X22]
	0x034630A4 LDR X8, [X0 + 0xB8]
	0x034630A8 LDR X1, [X8]
	0x034630AC ADD X0, X31, 0x28
	0x034630B0 MOV X2, X31
	0x034630B4 BL 0x335FC68
	0x034630B8 CBZ X21, 0x3463B54
	0x034630BC LDR X8, [X21]
	0x034630C0 LDR X1, [X23]
	0x034630C4 MOV X22, X0
	0x034630C8 LDRH W9, [X8 + 0x12E]
	0x034630CC CBZ X9, 0x34630F0
	0x034630D0 LDR X10, [X8 + 0xB0]
	0x034630D4 ADD X10, X10, 0x8
	0x034630D8 LDUR X11, [X10 - 0x8]
	0x034630DC CMP X11, X1
	0x034630E0 B.EQ 0x3463100
	0x034630E4 SUBS X9, X9, 0x1
	0x034630E8 ADD X10, X10, 0x10
	0x034630EC B.NE 0x34630D8
	0x034630F0 MOVZ W2, 0xB
	0x034630F4 MOV X0, X21
	0x034630F8 BL 0x1C5C788
	0x034630FC B 0x3463110
	0x03463100 LDR W9, [X10]
	0x03463104 ADD W9, W9, 0xB
	0x03463108 ADD X8, X8, W9, 0x4, SXTW
	0x0346310C ADD X0, X8, 0x138
	0x03463110 LDP X8, X2, [X0]
	0x03463114 MOV X0, X21
	0x03463118 MOV X1, X22
	0x0346311C BLR X8
	0x03463120 TBZ X0, 0x0, 0x34631BC
	0x03463124 LDR X8, [X19 + 0x70]
	0x03463128 CBZ X8, 0x3463B58
	0x0346312C LDR X1, [X8 + 0x18]
	0x03463130 LDR X3, [X19 + 0x68]
	0x03463134 LDR X4, [X8 + 0x50]
	0x03463138 MOV X0, X20
	0x0346313C MOV X2, X31
	0x03463140 MOV X5, X31
	0x03463144 BL 0x34440A8
	0x03463148 CBZ X0, 0x3463B5C
	0x0346314C ADRP X8, 0xC91000
	0x03463150 LDR X8, [X8 + 0x840]
	0x03463154 LDR X1, [X8]
	0x03463158 BL 0x269F5D0
	0x0346315C ADRP X8, 0xC91000
	0x03463160 LDR X8, [X8 + 0x838]
	0x03463164 STR X0, [X31 + 0x20]
	0x03463168 LDR X1, [X8]
	0x0346316C ADD X0, X31, 0x20
	0x03463170 BL 0x2677430
	0x03463174 TBNZ X0, 0x0, 0x3462F44
	0x03463178 STR W31, [X19]
	0x0346317C LDR X8, [X31 + 0x20]
	0x03463180 STR X8, [X19 + 0x78]
	0x03463184 ADRP X8, 0xCCB000
	0x03463188 LDR X8, [X8 + 0x730]
	0x0346318C LDR X0, [X8]
	0x03463190 LDR W8, [X0 + 0xE0]
	0x03463194 CBNZ W8, 0x346319C
	0x03463198 BL 0x1C16DFC
	0x0346319C ADRP X8, 0xCCD000
	0x034631A0 LDR X8, [X8 + 0x2C0]
	0x034631A4 ADD X0, X19, 0x8
	0x034631A8 LDR X3, [X8]
	0x034631AC ADD X1, X31, 0x20
	0x034631B0 MOV X2, X19
	0x034631B4 BL 0x1FBC914
	0x034631B8 B 0x3463AB8
	0x034631BC CBZ X20, 0x3463B28
	0x034631C0 ADRP X8, 0xCCD000
	0x034631C4 LDR X8, [X8 + 0x278]
	0x034631C8 LDR X21, [X20 + 0x58]
	0x034631CC LDR X23, [X19 + 0x70]
	0x034631D0 LDR X0, [X8]
	0x034631D4 BL 0x1C16F10
	0x034631D8 ADRP X8, 0xCCD000
	0x034631DC LDR X8, [X8 + 0x2C8]
	0x034631E0 MOV X22, X0
	0x034631E4 LDR X2, [X8]
	0x034631E8 MOV X1, X23
	0x034631EC MOV X3, X31
	0x034631F0 BL 0x2D27AA8
	0x034631F4 LDR X8, [X19 + 0x70]
	0x034631F8 CBZ X8, 0x3463B1C
	0x034631FC ADRP X9, 0xCCC000
	0x03463200 LDR X23, [X19 + 0x68]
	0x03463204 LDR X24, [X8 + 0x18]
	0x03463208 LDR X9, [X9 + 0x7C8]
	0x0346320C CBNZ X23, 0x3463214
	0x03463210 LDR X23, [X20 + 0x18]
	0x03463214 LDR X1, [X8 + 0x50]
	0x03463218 LDR X2, [X9]
	0x0346321C STP X31, X31, [X31 + 0x8]
	0x03463220 ADD X0, X31, 0x8
	0x03463224 BL 0x242E368
	0x03463228 ADRP X8, 0xCCC000
	0x0346322C LDR X8, [X8 + 0x7D0]
	0x03463230 LDR X0, [X8]
	0x03463234 BL 0x1C16F10
	0x03463238 LDP X3, X4, [X31 + 0x8]
	0x0346323C MOV X20, X0
	0x03463240 MOV X1, X24
	0x03463244 MOV X2, X23
	0x03463248 MOV X5, X31
	0x0346324C BL 0x3465404
	0x03463250 CBZ X21, 0x3463B20
	0x03463254 ADRP X8, 0xCCD000
	0x03463258 LDR X8, [X8 + 0x288]
	0x0346325C LDR X3, [X8]
	0x03463260 MOV X0, X21
	0x03463264 MOV X1, X22
	0x03463268 MOV X2, X20
	0x0346326C BL 0x2243230
	0x03463270 CBZ X0, 0x3463B24
	0x03463274 ADRP X8, 0xCCD000
	0x03463278 LDR X8, [X8 + 0x2A0]
	0x0346327C LDR X1, [X8]
	0x03463280 BL 0x269F5D0
	0x03463284 ADRP X8, 0xCCD000
	0x03463288 LDR X8, [X8 + 0x298]
	0x0346328C STR X0, [X31 + 0x18]
	0x03463290 LDR X1, [X8]
	0x03463294 ADD X0, X31, 0x18
	0x03463298 BL 0x2677430
	0x0346329C TBZ X0, 0x0, 0x3463304
	0x034632A0 ADRP X8, 0xCCD000
	0x034632A4 LDR X8, [X8 + 0x290]
	0x034632A8 ADD X0, X31, 0x18
	0x034632AC LDR X1, [X8]
	0x034632B0 BL 0x2677474
	0x034632B4 MOV X20, X0
	0x034632B8 CBZ X0, 0x3463B08
	0x034632BC ADRP X10, 0xCCD000
	0x034632C0 LDR X8, [X20]
	0x034632C4 LDR X10, [X10 + 0x280]
	0x034632C8 LDRH W9, [X8 + 0x12E]
	0x034632CC LDR X1, [X10]
	0x034632D0 CBZ X9, 0x34632F4
	0x034632D4 LDR X10, [X8 + 0xB0]
	0x034632D8 ADD X10, X10, 0x8
	0x034632DC LDUR X11, [X10 - 0x8]
	0x034632E0 CMP X11, X1
	0x034632E4 B.EQ 0x346334C
	0x034632E8 SUBS X9, X9, 0x1
	0x034632EC ADD X10, X10, 0x10
	0x034632F0 B.NE 0x34632DC
	0x034632F4 MOVZ W2, 0x4
	0x034632F8 MOV X0, X20
	0x034632FC BL 0x1C5C788
	0x03463300 B 0x346335C
	0x03463304 MOVZ W8, 0x1
	0x03463308 STR W8, [X19]
	0x0346330C LDR X8, [X31 + 0x18]
	0x03463310 STR X8, [X19 + 0x80]
	0x03463314 ADRP X8, 0xCCB000
	0x03463318 LDR X8, [X8 + 0x730]
	0x0346331C LDR X0, [X8]
	0x03463320 LDR W8, [X0 + 0xE0]
	0x03463324 CBNZ W8, 0x346332C
	0x03463328 BL 0x1C16DFC
	0x0346332C ADRP X8, 0xCCD000
	0x03463330 LDR X8, [X8 + 0x2B8]
	0x03463334 ADD X0, X19, 0x8
	0x03463338 LDR X3, [X8]
	0x0346333C ADD X1, X31, 0x18
	0x03463340 MOV X2, X19
	0x03463344 BL 0x1FBC914
	0x03463348 B 0x3463AB8
	0x0346334C LDR W9, [X10]
	0x03463350 ADD W9, W9, 0x4
	0x03463354 ADD X8, X8, W9, 0x4, SXTW
	0x03463358 ADD X0, X8, 0x138
	0x0346335C LDP X8, X1, [X0]
	0x03463360 MOV X0, X20
	0x03463364 BLR X8
	0x03463368 MOV X21, X0
	0x0346336C CBZ X0, 0x3463B0C
	0x03463370 ADRP X10, 0xCCD000
	0x03463374 LDR X8, [X21]
	0x03463378 LDR X10, [X10 + 0x110]
	0x0346337C LDRH W9, [X8 + 0x12E]
	0x03463380 LDR X1, [X10]
	0x03463384 CBZ X9, 0x34633A8
	0x03463388 LDR X10, [X8 + 0xB0]
	0x0346338C ADD X10, X10, 0x8
	0x03463390 LDUR X11, [X10 - 0x8]
	0x03463394 CMP X11, X1
	0x03463398 B.EQ 0x34633B8
	0x0346339C SUBS X9, X9, 0x1
	0x034633A0 ADD X10, X10, 0x10
	0x034633A4 B.NE 0x3463390
	0x034633A8 MOV X0, X21
	0x034633AC MOV W2, W31
	0x034633B0 BL 0x1C5C788
	0x034633B4 B 0x34633C4
	0x034633B8 LDRSW X9, [X10]
	0x034633BC ADD X8, X8, X9, 0x4, LSL
	0x034633C0 ADD X0, X8, 0x138
	0x034633C4 LDP X8, X1, [X0]
	0x034633C8 MOV X0, X21
	0x034633CC BLR X8
	0x034633D0 MOV X21, X0
	0x034633D4 CBZ X0, 0x3463B10
	0x034633D8 ADRP X24, 0xC90000
	0x034633DC ADRP X28, 0xCCD000
	0x034633E0 ADRP X29, 0xC91000
	0x034633E4 ADRP X26, 0xCCD000
	0x034633E8 ADRP X27, 0xCCD000
	0x034633EC LDR X24, [X24 + 0xE18]
	0x034633F0 LDR X28, [X28 + 0x118]
	0x034633F4 LDR X29, [X29 + 0x818]
	0x034633F8 LDR X26, [X26 + 0x108]
	0x034633FC LDR X27, [X27 + 0xE0]
	0x03463400 LDR X8, [X21]
	0x03463404 LDR X1, [X24]
	0x03463408 LDRH W9, [X8 + 0x12E]
	0x0346340C CBZ X9, 0x3463430
	0x03463410 LDR X10, [X8 + 0xB0]
	0x03463414 ADD X10, X10, 0x8
	0x03463418 LDUR X11, [X10 - 0x8]
	0x0346341C CMP X11, X1
	0x03463420 B.EQ 0x3463440
	0x03463424 SUBS X9, X9, 0x1
	0x03463428 ADD X10, X10, 0x10
	0x0346342C B.NE 0x3463418
	0x03463430 MOV X0, X21
	0x03463434 MOV W2, W31
	0x03463438 BL 0x1C5C788
	0x0346343C B 0x346344C
	0x03463440 LDRSW X9, [X10]
	0x03463444 ADD X8, X8, X9, 0x4, LSL
	0x03463448 ADD X0, X8, 0x138
	0x0346344C LDP X8, X1, [X0]
	0x03463450 MOV X0, X21
	0x03463454 BLR X8
	0x03463458 TBZ X0, 0x0, 0x3463640
	0x0346345C LDR X8, [X21]
	0x03463460 LDR X1, [X28]
	0x03463464 LDRH W9, [X8 + 0x12E]
	0x03463468 CBZ X9, 0x346348C
	0x0346346C LDR X10, [X8 + 0xB0]
	0x03463470 ADD X10, X10, 0x8
	0x03463474 LDUR X11, [X10 - 0x8]
	0x03463478 CMP X11, X1
	0x0346347C B.EQ 0x346349C
	0x03463480 SUBS X9, X9, 0x1
	0x03463484 ADD X10, X10, 0x10
	0x03463488 B.NE 0x3463474
	0x0346348C MOV X0, X21
	0x03463490 MOV W2, W31
	0x03463494 BL 0x1C5C788
	0x03463498 B 0x34634A8
	0x0346349C LDRSW X9, [X10]
	0x034634A0 ADD X8, X8, X9, 0x4, LSL
	0x034634A4 ADD X0, X8, 0x138
	0x034634A8 LDP X8, X1, [X0]
	0x034634AC MOV X0, X21
	0x034634B0 BLR X8
	0x034634B4 LDR X8, [X19 + 0x70]
	0x034634B8 CBZ X8, 0x3463AE0
	0x034634BC LDR X23, [X8 + 0x18]
	0x034634C0 CBZ X23, 0x3463AE4
	0x034634C4 LDR X8, [X23]
	0x034634C8 LDR X1, [X29]
	0x034634CC MOV X22, X0
	0x034634D0 LDRH W9, [X8 + 0x12E]
	0x034634D4 CBZ X9, 0x34634F8
	0x034634D8 LDR X10, [X8 + 0xB0]
	0x034634DC ADD X10, X10, 0x8
	0x034634E0 LDUR X11, [X10 - 0x8]
	0x034634E4 CMP X11, X1
	0x034634E8 B.EQ 0x3463508
	0x034634EC SUBS X9, X9, 0x1
	0x034634F0 ADD X10, X10, 0x10
	0x034634F4 B.NE 0x34634E0
	0x034634F8 MOVZ W2, 0xA
	0x034634FC MOV X0, X23
	0x03463500 BL 0x1C5C788
	0x03463504 B 0x3463518
	0x03463508 LDR W9, [X10]
	0x0346350C ADD W9, W9, 0xA
	0x03463510 ADD X8, X8, W9, 0x4, SXTW
	0x03463514 ADD X0, X8, 0x138
	0x03463518 LDP X8, X1, [X0]
	0x0346351C MOV X0, X23
	0x03463520 BLR X8
	0x03463524 CBZ X22, 0x3463AD8
	0x03463528 LDR X8, [X22]
	0x0346352C LDR X1, [X26]
	0x03463530 MOV X23, X0
	0x03463534 LDRH W9, [X8 + 0x12E]
	0x03463538 CBZ X9, 0x346355C
	0x0346353C LDR X10, [X8 + 0xB0]
	0x03463540 ADD X10, X10, 0x8
	0x03463544 LDUR X11, [X10 - 0x8]
	0x03463548 CMP X11, X1
	0x0346354C B.EQ 0x346356C
	0x03463550 SUBS X9, X9, 0x1
	0x03463554 ADD X10, X10, 0x10
	0x03463558 B.NE 0x3463544
	0x0346355C MOVZ W2, 0x6
	0x03463560 MOV X0, X22
	0x03463564 BL 0x1C5C788
	0x03463568 B 0x346357C
	0x0346356C LDR W9, [X10]
	0x03463570 ADD W9, W9, 0x6
	0x03463574 ADD X8, X8, W9, 0x4, SXTW
	0x03463578 ADD X0, X8, 0x138
	0x0346357C LDP X8, X1, [X0]
	0x03463580 MOV X0, X22
	0x03463584 BLR X8
	0x03463588 MOV X1, X0
	0x0346358C CBZ X23, 0x3463ADC
	0x03463590 MOV X0, X23
	0x03463594 MOV X2, X31
	0x03463598 BL 0x322693C
	0x0346359C TBZ X0, 0x0, 0x3463400
	0x034635A0 LDR X9, [X22]
	0x034635A4 LDR X8, [X27]
	0x034635A8 LDRB W11, [X9 + 0x130]
	0x034635AC LDRB W10, [X8 + 0x130]
	0x034635B0 CMP W11, W10
	0x034635B4 B.CC 0x3463400
	0x034635B8 LDR X9, [X9 + 0xC8]
	0x034635BC ADD X9, X9, X10, 0x3, LSL
	0x034635C0 LDUR X9, [X9 - 0x8]
	0x034635C4 CMP X9, X8
	0x034635C8 B.NE 0x3463400
	0x034635CC LDR X8, [X19 + 0x70]
	0x034635D0 CBZ X8, 0x3463AF8
	0x034635D4 LDR X23, [X8 + 0x18]
	0x034635D8 CBZ X23, 0x3463AFC
	0x034635DC LDR X8, [X23]
	0x034635E0 LDR X1, [X29]
	0x034635E4 LDRH W9, [X8 + 0x12E]
	0x034635E8 CBZ X9, 0x346360C
	0x034635EC LDR X10, [X8 + 0xB0]
	0x034635F0 ADD X10, X10, 0x8
	0x034635F4 LDUR X11, [X10 - 0x8]
	0x034635F8 CMP X11, X1
	0x034635FC B.EQ 0x346361C
	0x03463600 SUBS X9, X9, 0x1
	0x03463604 ADD X10, X10, 0x10
	0x03463608 B.NE 0x34635F4
	0x0346360C MOVZ W2, 0x9
	0x03463610 MOV X0, X23
	0x03463614 BL 0x1C5C788
	0x03463618 B 0x346362C
	0x0346361C LDR W9, [X10]
	0x03463620 ADD W9, W9, 0x9
	0x03463624 ADD X8, X8, W9, 0x4, SXTW
	0x03463628 ADD X0, X8, 0x138
	0x0346362C LDP X8, X1, [X0]
	0x03463630 MOV X0, X23
	0x03463634 BLR X8
	0x03463638 STR X0, [X22 + 0x68]
	0x0346363C B 0x3463400
	0x03463640 MOV X24, X31
	0x03463644 MOVZ W22, 0xB
	0x03463648 TBZ X25, 0x1F, 0x34636B0
	0x0346364C CBZ X21, 0x34636B0
	0x03463650 ADRP X10, 0xC90000
	0x03463654 LDR X8, [X21]
	0x03463658 LDR X10, [X10 + 0xE00]
	0x0346365C LDRH W9, [X8 + 0x12E]
	0x03463660 LDR X1, [X10]
	0x03463664 CBZ X9, 0x3463688
	0x03463668 LDR X10, [X8 + 0xB0]
	0x0346366C ADD X10, X10, 0x8
	0x03463670 LDUR X11, [X10 - 0x8]
	0x03463674 CMP X11, X1
	0x03463678 B.EQ 0x3463698
	0x0346367C SUBS X9, X9, 0x1
	0x03463680 ADD X10, X10, 0x10
	0x03463684 B.NE 0x3463670
	0x03463688 MOV X0, X21
	0x0346368C MOV W2, W31
	0x03463690 BL 0x1C5C788
	0x03463694 B 0x34636A4
	0x03463698 LDRSW X9, [X10]
	0x0346369C ADD X8, X8, X9, 0x4, LSL
	0x034636A0 ADD X0, X8, 0x138
	0x034636A4 LDP X8, X1, [X0]
	0x034636A8 MOV X0, X21
	0x034636AC BLR X8
	0x034636B0 CBNZ X24, 0x3463B14
	0x034636B4 CMP W22, 0xB
	0x034636B8 B.EQ 0x34636C0
	0x034636BC CBNZ W22, 0x3463AB8
	0x034636C0 LDR X8, [X20]
	0x034636C4 ADRP X10, 0xCCD000
	0x034636C8 LDRH W9, [X8 + 0x12E]
	0x034636CC LDR X10, [X10 + 0x280]
	0x034636D0 LDR X1, [X10]
	0x034636D4 CBZ X9, 0x34636F8
	0x034636D8 LDR X10, [X8 + 0xB0]
	0x034636DC ADD X10, X10, 0x8
	0x034636E0 LDUR X11, [X10 - 0x8]
	0x034636E4 CMP X11, X1
	0x034636E8 B.EQ 0x3463708
	0x034636EC SUBS X9, X9, 0x1
	0x034636F0 ADD X10, X10, 0x10
	0x034636F4 B.NE 0x34636E0
	0x034636F8 MOVZ W2, 0x1
	0x034636FC MOV X0, X20
	0x03463700 BL 0x1C5C788
	0x03463704 B 0x3463718
	0x03463708 LDR W9, [X10]
	0x0346370C ADD W9, W9, 0x1
	0x03463710 ADD X8, X8, W9, 0x4, SXTW
	0x03463714 ADD X0, X8, 0x138
	0x03463718 LDP X8, X1, [X0]
	0x0346371C MOV X0, X20
	0x03463720 BLR X8
	0x03463724 MOV X21, X0
	0x03463728 CBZ X0, 0x3463B2C
	0x0346372C LDR X8, [X21]
	0x03463730 ADRP X10, 0xCCD000
	0x03463734 LDRH W9, [X8 + 0x12E]
	0x03463738 LDR X10, [X10 + 0x110]
	0x0346373C LDR X1, [X10]
	0x03463740 CBZ X9, 0x3463764
	0x03463744 LDR X10, [X8 + 0xB0]
	0x03463748 ADD X10, X10, 0x8
	0x0346374C LDUR X11, [X10 - 0x8]
	0x03463750 CMP X11, X1
	0x03463754 B.EQ 0x3463774
	0x03463758 SUBS X9, X9, 0x1
	0x0346375C ADD X10, X10, 0x10
	0x03463760 B.NE 0x346374C
	0x03463764 MOV X0, X21
	0x03463768 MOV W2, W31
	0x0346376C BL 0x1C5C788
	0x03463770 B 0x3463780
	0x03463774 LDRSW X9, [X10]
	0x03463778 ADD X8, X8, X9, 0x4, LSL
	0x0346377C ADD X0, X8, 0x138
	0x03463780 LDP X8, X1, [X0]
	0x03463784 MOV X0, X21
	0x03463788 BLR X8
	0x0346378C MOV X21, X0
	0x03463790 CBZ X0, 0x3463B30
	0x03463794 ADRP X24, 0xC90000
	0x03463798 ADRP X26, 0xCCD000
	0x0346379C ADRP X27, 0xC91000
	0x034637A0 ADRP X28, 0xCCD000
	0x034637A4 ADRP X29, 0xCCD000
	0x034637A8 LDR X24, [X24 + 0xE18]
	0x034637AC LDR X26, [X26 + 0x118]
	0x034637B0 LDR X27, [X27 + 0x818]
	0x034637B4 LDR X28, [X28 + 0x108]
	0x034637B8 LDR X29, [X29 + 0xE0]
	0x034637BC LDR X8, [X21]
	0x034637C0 LDR X1, [X24]
	0x034637C4 LDRH W9, [X8 + 0x12E]
	0x034637C8 CBZ X9, 0x34637EC
	0x034637CC LDR X10, [X8 + 0xB0]
	0x034637D0 ADD X10, X10, 0x8
	0x034637D4 LDUR X11, [X10 - 0x8]
	0x034637D8 CMP X11, X1
	0x034637DC B.EQ 0x34637FC
	0x034637E0 SUBS X9, X9, 0x1
	0x034637E4 ADD X10, X10, 0x10
	0x034637E8 B.NE 0x34637D4
	0x034637EC MOV X0, X21
	0x034637F0 MOV W2, W31
	0x034637F4 BL 0x1C5C788
	0x034637F8 B 0x3463808
	0x034637FC LDRSW X9, [X10]
	0x03463800 ADD X8, X8, X9, 0x4, LSL
	0x03463804 ADD X0, X8, 0x138
	0x03463808 LDP X8, X1, [X0]
	0x0346380C MOV X0, X21
	0x03463810 BLR X8
	0x03463814 TBZ X0, 0x0, 0x34639FC
	0x03463818 LDR X8, [X21]
	0x0346381C LDR X1, [X26]
	0x03463820 LDRH W9, [X8 + 0x12E]
	0x03463824 CBZ X9, 0x3463848
	0x03463828 LDR X10, [X8 + 0xB0]
	0x0346382C ADD X10, X10, 0x8
	0x03463830 LDUR X11, [X10 - 0x8]
	0x03463834 CMP X11, X1
	0x03463838 B.EQ 0x3463858
	0x0346383C SUBS X9, X9, 0x1
	0x03463840 ADD X10, X10, 0x10
	0x03463844 B.NE 0x3463830
	0x03463848 MOV X0, X21
	0x0346384C MOV W2, W31
	0x03463850 BL 0x1C5C788
	0x03463854 B 0x3463864
	0x03463858 LDRSW X9, [X10]
	0x0346385C ADD X8, X8, X9, 0x4, LSL
	0x03463860 ADD X0, X8, 0x138
	0x03463864 LDP X8, X1, [X0]
	0x03463868 MOV X0, X21
	0x0346386C BLR X8
	0x03463870 LDR X8, [X19 + 0x70]
	0x03463874 CBZ X8, 0x3463AF0
	0x03463878 LDR X23, [X8 + 0x18]
	0x0346387C CBZ X23, 0x3463AF4
	0x03463880 LDR X8, [X23]
	0x03463884 LDR X1, [X27]
	0x03463888 MOV X22, X0
	0x0346388C LDRH W9, [X8 + 0x12E]
	0x03463890 CBZ X9, 0x34638B4
	0x03463894 LDR X10, [X8 + 0xB0]
	0x03463898 ADD X10, X10, 0x8
	0x0346389C LDUR X11, [X10 - 0x8]
	0x034638A0 CMP X11, X1
	0x034638A4 B.EQ 0x34638C4
	0x034638A8 SUBS X9, X9, 0x1
	0x034638AC ADD X10, X10, 0x10
	0x034638B0 B.NE 0x346389C
	0x034638B4 MOVZ W2, 0xA
	0x034638B8 MOV X0, X23
	0x034638BC BL 0x1C5C788
	0x034638C0 B 0x34638D4
	0x034638C4 LDR W9, [X10]
	0x034638C8 ADD W9, W9, 0xA
	0x034638CC ADD X8, X8, W9, 0x4, SXTW
	0x034638D0 ADD X0, X8, 0x138
	0x034638D4 LDP X8, X1, [X0]
	0x034638D8 MOV X0, X23
	0x034638DC BLR X8
	0x034638E0 CBZ X22, 0x3463AE8
	0x034638E4 LDR X8, [X22]
	0x034638E8 LDR X1, [X28]
	0x034638EC MOV X23, X0
	0x034638F0 LDRH W9, [X8 + 0x12E]
	0x034638F4 CBZ X9, 0x3463918
	0x034638F8 LDR X10, [X8 + 0xB0]
	0x034638FC ADD X10, X10, 0x8
	0x03463900 LDUR X11, [X10 - 0x8]
	0x03463904 CMP X11, X1
	0x03463908 B.EQ 0x3463928
	0x0346390C SUBS X9, X9, 0x1
	0x03463910 ADD X10, X10, 0x10
	0x03463914 B.NE 0x3463900
	0x03463918 MOVZ W2, 0x6
	0x0346391C MOV X0, X22
	0x03463920 BL 0x1C5C788
	0x03463924 B 0x3463938
	0x03463928 LDR W9, [X10]
	0x0346392C ADD W9, W9, 0x6
	0x03463930 ADD X8, X8, W9, 0x4, SXTW
	0x03463934 ADD X0, X8, 0x138
	0x03463938 LDP X8, X1, [X0]
	0x0346393C MOV X0, X22
	0x03463940 BLR X8
	0x03463944 MOV X1, X0
	0x03463948 CBZ X23, 0x3463AEC
	0x0346394C MOV X0, X23
	0x03463950 MOV X2, X31
	0x03463954 BL 0x322693C
	0x03463958 TBZ X0, 0x0, 0x34637BC
	0x0346395C LDR X9, [X22]
	0x03463960 LDR X8, [X29]
	0x03463964 LDRB W11, [X9 + 0x130]
	0x03463968 LDRB W10, [X8 + 0x130]
	0x0346396C CMP W11, W10
	0x03463970 B.CC 0x34637BC
	0x03463974 LDR X9, [X9 + 0xC8]
	0x03463978 ADD X9, X9, X10, 0x3, LSL
	0x0346397C LDUR X9, [X9 - 0x8]
	0x03463980 CMP X9, X8
	0x03463984 B.NE 0x34637BC
	0x03463988 LDR X8, [X19 + 0x70]
	0x0346398C CBZ X8, 0x3463B00
	0x03463990 LDR X23, [X8 + 0x18]
	0x03463994 CBZ X23, 0x3463B04
	0x03463998 LDR X8, [X23]
	0x0346399C LDR X1, [X27]
	0x034639A0 LDRH W9, [X8 + 0x12E]
	0x034639A4 CBZ X9, 0x34639C8
	0x034639A8 LDR X10, [X8 + 0xB0]
	0x034639AC ADD X10, X10, 0x8
	0x034639B0 LDUR X11, [X10 - 0x8]
	0x034639B4 CMP X11, X1
	0x034639B8 B.EQ 0x34639D8
	0x034639BC SUBS X9, X9, 0x1
	0x034639C0 ADD X10, X10, 0x10
	0x034639C4 B.NE 0x34639B0
	0x034639C8 MOVZ W2, 0x9
	0x034639CC MOV X0, X23
	0x034639D0 BL 0x1C5C788
	0x034639D4 B 0x34639E8
	0x034639D8 LDR W9, [X10]
	0x034639DC ADD W9, W9, 0x9
	0x034639E0 ADD X8, X8, W9, 0x4, SXTW
	0x034639E4 ADD X0, X8, 0x138
	0x034639E8 LDP X8, X1, [X0]
	0x034639EC MOV X0, X23
	0x034639F0 BLR X8
	0x034639F4 STR X0, [X22 + 0x68]
	0x034639F8 B 0x34637BC
	0x034639FC MOV X24, X31
	0x03463A00 MOVZ W22, 0xE
	0x03463A04 TBZ X25, 0x1F, 0x3463A6C
	0x03463A08 CBZ X21, 0x3463A6C
	0x03463A0C ADRP X10, 0xC90000
	0x03463A10 LDR X8, [X21]
	0x03463A14 LDR X10, [X10 + 0xE00]
	0x03463A18 LDRH W9, [X8 + 0x12E]
	0x03463A1C LDR X1, [X10]
	0x03463A20 CBZ X9, 0x3463A44
	0x03463A24 LDR X10, [X8 + 0xB0]
	0x03463A28 ADD X10, X10, 0x8
	0x03463A2C LDUR X11, [X10 - 0x8]
	0x03463A30 CMP X11, X1
	0x03463A34 B.EQ 0x3463A54
	0x03463A38 SUBS X9, X9, 0x1
	0x03463A3C ADD X10, X10, 0x10
	0x03463A40 B.NE 0x3463A2C
	0x03463A44 MOV X0, X21
	0x03463A48 MOV W2, W31
	0x03463A4C BL 0x1C5C788
	0x03463A50 B 0x3463A60
	0x03463A54 LDRSW X9, [X10]
	0x03463A58 ADD X8, X8, X9, 0x4, LSL
	0x03463A5C ADD X0, X8, 0x138
	0x03463A60 LDP X8, X1, [X0]
	0x03463A64 MOV X0, X21
	0x03463A68 BLR X8
	0x03463A6C CBNZ X24, 0x3463B34
	0x03463A70 CBZ W22, 0x3463A7C
	0x03463A74 CMP W22, 0xE
	0x03463A78 B.NE 0x3463AB8
	0x03463A7C MOVN W8, 0x1
	0x03463A80 STR X31, [X19 + 0x70]
	0x03463A84 STR W8, [X19], #0x8
	0x03463A88 ADRP X8, 0xCCB000
	0x03463A8C LDR X8, [X8 + 0x730]
	0x03463A90 LDR X0, [X8]
	0x03463A94 LDR W8, [X0 + 0xE0]
	0x03463A98 CBNZ W8, 0x3463AA0
	0x03463A9C BL 0x1C16DFC
	0x03463AA0 ADRP X8, 0xCCC000
	0x03463AA4 LDR X8, [X8 + 0x1A0]
	0x03463AA8 MOV X0, X19
	0x03463AAC MOV X1, X20
	0x03463AB0 LDR X2, [X8]
	0x03463AB4 BL 0x26322B0
	0x03463AB8 LDP X20, X19, [X31 + 0x80]
	0x03463ABC LDP X22, X21, [X31 + 0x70]
	0x03463AC0 LDP X24, X23, [X31 + 0x60]
	0x03463AC4 LDP X26, X25, [X31 + 0x50]
	0x03463AC8 LDP X28, X27, [X31 + 0x40]
	0x03463ACC LDP X29, X30, [X31 + 0x30]
	0x03463AD0 ADD X31, X31, 0x90
	0x03463AD4 RET
	0x03463AD8 BL 0x1C16F20
	0x03463ADC BL 0x1C16F20
	0x03463AE0 BL 0x1C16F20
	0x03463AE4 BL 0x1C16F20
	0x03463AE8 BL 0x1C16F20
	0x03463AEC BL 0x1C16F20
	0x03463AF0 BL 0x1C16F20
	0x03463AF4 BL 0x1C16F20
	0x03463AF8 BL 0x1C16F20
	0x03463AFC BL 0x1C16F20
	0x03463B00 BL 0x1C16F20
	0x03463B04 BL 0x1C16F20
	0x03463B08 BL 0x1C16F20
	0x03463B0C BL 0x1C16F20
	0x03463B10 BL 0x1C16F20
	0x03463B14 MOV X0, X24
	0x03463B18 BL 0x1C16F18
	0x03463B1C BL 0x1C16F20
	0x03463B20 BL 0x1C16F20
	0x03463B24 BL 0x1C16F20
	0x03463B28 BL 0x1C16F20
	0x03463B2C BL 0x1C16F20
	0x03463B30 BL 0x1C16F20
	0x03463B34 MOV X0, X24
	0x03463B38 BL 0x1C16F18
	0x03463B3C BL 0x1C16F20
	0x03463B40 BL 0x1C16F20
	0x03463B44 BL 0x1C16F20
	0x03463B48 BL 0x1C16F20
	0x03463B4C BL 0x1C16F20
	0x03463B50 BL 0x1C16F20
	0x03463B54 BL 0x1C16F20
	0x03463B58 BL 0x1C16F20
	0x03463B5C BL 0x1C16F20
	0x03463B60 B 0x3463C0C
	0x03463B64 B 0x3463C0C
	0x03463B68 B 0x3463C0C
	0x03463B6C B 0x3463C0C
	0x03463B70 B 0x3463C0C
	0x03463B74 B 0x3463C0C
	0x03463B78 B 0x3463C0C
	0x03463B7C B 0x3463C0C
	0x03463B80 B 0x3463C0C
	0x03463B84 B 0x3463C0C
	0x03463B88 B 0x3463C0C
	0x03463B8C B 0x3463C0C
	0x03463B90 B 0x3463C0C
	0x03463B94 B 0x3463C0C
	0x03463B98 B 0x3463C0C
	0x03463B9C B 0x3463C0C
	0x03463BA0 B 0x3463C0C
	0x03463BA4 B 0x3463C0C
	0x03463BA8 B 0x3463C0C
	0x03463BAC B 0x3463C0C
	0x03463BB0 B 0x3463C54
	0x03463BB4 B 0x3463C0C
	0x03463BB8 B 0x3463C0C
	0x03463BBC B 0x3463C0C
	0x03463BC0 B 0x3463C0C
	0x03463BC4 B 0x3463C0C
	0x03463BC8 B 0x3463C0C
	0x03463BCC B 0x3463D14
	0x03463BD0 B 0x3463C0C
	0x03463BD4 B 0x3463C0C
	0x03463BD8 B 0x3463C0C
	0x03463BDC B 0x3463C0C
	0x03463BE0 B 0x3463C0C
	0x03463BE4 B 0x3463C0C
	0x03463BE8 B 0x3463C0C
	0x03463BEC B 0x3463C0C
	0x03463BF0 B 0x3463C54
	0x03463BF4 B 0x3463C54
	0x03463BF8 B 0x3463C0C
	0x03463BFC B 0x3463C0C
	0x03463C00 B 0x3463C0C
	0x03463C04 B 0x3463D14
	0x03463C08 B 0x3463D14
	0x03463C0C MOV X22, X1
	0x03463C10 MOV X23, X0
	0x03463C14 B 0x3463DB0
	0x03463C18 B 0x3463C54
	0x03463C1C B 0x3463D14
	0x03463C20 B 0x3463C54
	0x03463C24 B 0x3463C54
	0x03463C28 B 0x3463C54
	0x03463C2C B 0x3463C54
	0x03463C30 B 0x3463C54
	0x03463C34 B 0x3463D14
	0x03463C38 B 0x3463D14
	0x03463C3C B 0x3463D14
	0x03463C40 B 0x3463D14
	0x03463C44 B 0x3463D14
	0x03463C48 B 0x3463C54
	0x03463C4C B 0x3463C54
	0x03463C50 B 0x3463C54
	0x03463C54 MOV X22, X1
	0x03463C58 MOV X23, X0
	0x03463C5C CMP W22, 0x1
	0x03463C60 B.NE 0x3463C80
	0x03463C64 MOV X0, X23
	0x03463C68 BL 0x3EB1AD0
	0x03463C6C LDR X24, [X0]
	0x03463C70 BL 0x3EB1AE0
	0x03463C74 MOV W22, W31
	0x03463C78 TBNZ X25, 0x1F, 0x3463A08
	0x03463C7C B 0x3463A6C
	0x03463C80 MOV X24, X31
	0x03463C84 TBZ X25, 0x1F, 0x3463CEC
	0x03463C88 CBZ X21, 0x3463CEC
	0x03463C8C ADRP X10, 0xC90000
	0x03463C90 LDR X8, [X21]
	0x03463C94 LDR X10, [X10 + 0xE00]
	0x03463C98 LDRH W9, [X8 + 0x12E]
	0x03463C9C LDR X1, [X10]
	0x03463CA0 CBZ X9, 0x3463CC4
	0x03463CA4 LDR X10, [X8 + 0xB0]
	0x03463CA8 ADD X10, X10, 0x8
	0x03463CAC LDUR X11, [X10 - 0x8]
	0x03463CB0 CMP X11, X1
	0x03463CB4 B.EQ 0x3463CD4
	0x03463CB8 SUBS X9, X9, 0x1
	0x03463CBC ADD X10, X10, 0x10
	0x03463CC0 B.NE 0x3463CAC
	0x03463CC4 MOV X0, X21
	0x03463CC8 MOV W2, W31
	0x03463CCC BL 0x1C5C788
	0x03463CD0 B 0x3463CE0
	0x03463CD4 LDRSW X9, [X10]
	0x03463CD8 ADD X8, X8, X9, 0x4, LSL
	0x03463CDC ADD X0, X8, 0x138
	0x03463CE0 LDP X8, X1, [X0]
	0x03463CE4 MOV X0, X21
	0x03463CE8 BLR X8
	0x03463CEC CBZ X24, 0x3463DB0
	0x03463CF0 MOV X0, X24
	0x03463CF4 BL 0x1C16F18
	0x03463CF8 MOV X22, X1
	0x03463CFC MOV X23, X0
	0x03463D00 TBNZ X25, 0x1F, 0x3463C88
	0x03463D04 B 0x3463CEC
	0x03463D08 B 0x3463D14
	0x03463D0C B 0x3463D14
	0x03463D10 B 0x3463D14

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xF7C000
	015 Move W8, [X20+1973]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {101}
	021 Move X0, 0xCCF000
	022 Move X0, [X0+224]
	023 Call 0x1C17CF4
	024 Move X0, 0xCCF000
	025 Move X0, [X0+616]
	026 Call 0x1C17CF4
	027 Move X0, 0xCCF000
	028 Move X0, [X0+624]
	029 Call 0x1C17CF4
	030 Move X0, 0xCCE000
	031 Move X0, [X0+416]
	032 Call 0x1C17CF4
	033 Move X0, 0xCCD000
	034 Move X0, [X0+1840]
	035 Call 0x1C17CF4
	036 Move X0, 0xC94000
	037 Move X0, [X0+2576]
	038 Call 0x1C17CF4
	039 Move X0, 0xC93000
	040 Move X0, [X0+2544]
	041 Call 0x1C17CF4
	042 Move X0, 0xCCF000
	043 Move X0, [X0+632]
	044 Call 0x1C17CF4
	045 Move X0, 0xCCF000
	046 Move X0, [X0+264]
	047 Call 0x1C17CF4
	048 Move X0, 0xCCF000
	049 Move X0, [X0+640]
	050 Call 0x1C17CF4
	051 Move X0, 0xC92000
	052 Move X0, [X0+3584]
	053 Call 0x1C17CF4
	054 Move X0, 0xCCF000
	055 Move X0, [X0+272]
	056 Call 0x1C17CF4
	057 Move X0, 0xCCF000
	058 Move X0, [X0+280]
	059 Call 0x1C17CF4
	060 Move X0, 0xC92000
	061 Move X0, [X0+3608]
	062 Call 0x1C17CF4
	063 Move X0, 0xC93000
	064 Move X0, [X0+2072]
	065 Call 0x1C17CF4
	066 Move X0, 0xCCE000
	067 Move X0, [X0+1992]
	068 Call 0x1C17CF4
	069 Move X0, 0xCCE000
	070 Move X0, [X0+2000]
	071 Call 0x1C17CF4
	072 Move X0, 0xCCF000
	073 Move X0, [X0+648]
	074 Call 0x1C17CF4
	075 Move X0, 0xCCF000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move X0, 0xC93000
	079 Move X0, [X0+2096]
	080 Call 0x1C17CF4
	081 Move X0, 0xC93000
	082 Move X0, [X0+2104]
	083 Call 0x1C17CF4
	084 Move X0, 0xCCF000
	085 Move X0, [X0+664]
	086 Call 0x1C17CF4
	087 Move X0, 0xC93000
	088 Move X0, [X0+2112]
	089 Call 0x1C17CF4
	090 Move X0, 0xCCF000
	091 Move X0, [X0+672]
	092 Call 0x1C17CF4
	093 Move X0, 0xCCF000
	094 Move X0, [X0+680]
	095 Call 0x1C17CF4
	096 Move X0, 0xCCF000
	097 Move X0, [X0+688]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X20+1973], W8
	101 Move [X31+32], X31
	102 Move [X31+40], X31
	103 Move [X31+24], X31
	104 Move W25, [X19]
	105 Move X20, [X19+32]
	106 Compare W25, 0
	107 JumpIfEqual {116}
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X19+128]
	110 Move TEMP, 0
	111 Not TEMP
	112 Move W25, TEMP
	113 Move [X31+24], X8
	114 Move [X19+128], X31
	115 Move [X19], W25
	116 Move X8, [X19+120]
	117 Move TEMP, 0
	118 Not TEMP
	119 Move W25, TEMP
	120 Move [X31+32], X8
	121 Move [X19+120], X31
	122 Move [X19], W25
	123 Move X8, 0xC93000
	124 Move X8, [X8+2096]
	125 Add X0, X31, 32
	126 Move X1, [X8]
	127 Call TaskAwaiter`1<Object>.GetResult, X0
	128 Move X8, 0xCCF000
	129 Move X8, [X8+688]
	130 Move X0, [X8]
	131 Call 0x1C17F10
	132 Move X21, X0
	133 Move X1, X31
	134 Call <>c__DisplayClass93_0..ctor, X0
	135 Move [X19+112], X21
	136 Compare X21, 0
	137 JumpIfEqual {941}
	138 Move X8, [X19+32]
	139 Move [X21+16], X8
	140 Move X8, [X19+40]
	141 Move [X21+24], X8
	142 Move V0, [X19+3]
	143 Move [X21+2], V0
	144 Move W8, [X19+64]
	145 Move [X21+48], W8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 Move [X21+56], V0
	148 Move X8, [X19+112]
	149 Compare X8, 0
	150 JumpIfEqual {942}
	151 Move X9, [X19+88]
	152 Move [X8+72], X9
	153 Move X9, [X19+96]
	154 Move [X8+80], X9
	155 Compare X20, 0
	156 JumpIfEqual {943}
	157 Move W8, [X20+16]
	158 Compare W8, 0
	159 JumpIfEqual {299}
	160 Move X8, [X19+112]
	161 Compare X8, 0
	162 JumpIfEqual {944}
	163 Move X21, [X8+24]
	164 Compare X21, 0
	165 JumpIfEqual {945}
	166 Move X23, 0xC93000
	167 Move X8, [X21]
	168 Move X23, [X23+2072]
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Move X1, [X23]
	171 Compare X9, 0
	172 JumpIfEqual {179}
	173 Move X10, [X8+176]
	174 Add X10, X10, 8
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract X9, X9, 1
	178 Add X10, X10, 16
	179 Move W2, 7
	180 Move X0, X21
	181 Call 0x1C5D788
	182 Move W9, [X10]
	183 Add W9, W9, 7
	184 Add X8, X8, W9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X21
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X1, X31
	191 Call String.IsNullOrEmpty, X0
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {297}
	196 Move X8, [X19+112]
	197 Compare X8, 0
	198 JumpIfEqual {946}
	199 Move X9, 0xC93000
	200 Move X9, [X9+2544]
	201 Move X21, [X8+24]
	202 Move X0, [X9]
	203 Move W9, [X0+224]
	204 Compare W9, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X31
	208 Call DateTime.get_UtcNow
	209 Move X22, 0xC94000
	210 Move X22, [X22+2576]
	211 Move X8, X0
	212 Move [X31+40], X8
	213 Move X0, [X22]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {219}
	217 Call 0x1C17DFC
	218 Move X0, [X22]
	219 Move X8, [X0+184]
	220 Move X1, [X8]
	221 Add X0, X31, 40
	222 Move X2, X31
	223 Call DateTime.Add, X0, X1
	224 Compare X21, 0
	225 JumpIfEqual {947}
	226 Move X8, [X21]
	227 Move X1, [X23]
	228 Move X22, X0
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move W2, 11
	239 Move X0, X21
	240 Call 0x1C5D788
	241 Move W9, [X10]
	242 Add W9, W9, 11
	243 Add X8, X8, W9
	244 Add X0, X8, 312
	245 Move X8, [X0]
	246 Move X2, [X0+8]
	247 Move X0, X21
	248 Move X1, X22
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {297}
	254 Move X8, [X19+112]
	255 Compare X8, 0
	256 JumpIfEqual {948}
	257 Move X1, [X8+24]
	258 Move X3, [X19+104]
	259 Move X4, [X8+80]
	260 Move X0, X20
	261 Move X2, X31
	262 Move X5, X31
	263 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	264 Compare X0, 0
	265 JumpIfEqual {949}
	266 Move X8, 0xC93000
	267 Move X8, [X8+2112]
	268 Move X1, [X8]
	269 Call Task`1<Object>.GetAwaiter, X0
	270 Move X8, 0xC93000
	271 Move X8, [X8+2104]
	272 Move [X31+32], X0
	273 Move X1, [X8]
	274 Add X0, X31, 32
	275 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {123}
	280 Move [X19], W31
	281 Move X8, [X31+32]
	282 Move [X19+120], X8
	283 Move X8, 0xCCC000
	284 Move X8, [X8+1840]
	285 Move X0, [X8]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move X8, 0xCCE000
	291 Move X8, [X8+624]
	292 Add X0, X19, 8
	293 Move X3, [X8]
	294 Add X1, X31, 32
	295 Move X2, X19
	296 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	297 Compare X20, 0
	298 JumpIfEqual {936}
	299 Move X8, 0xCCE000
	300 Move X8, [X8+632]
	301 Move X21, [X20+88]
	302 Move X23, [X19+112]
	303 Move X0, [X8]
	304 Call 0x1C17F10
	305 Move X8, 0xCCE000
	306 Move X8, [X8+680]
	307 Move X22, X0
	308 Move X2, [X8]
	309 Move X1, X23
	310 Move X3, X31
	311 Call Func`1<Object>..ctor, X0, X1, X2
	312 Move X8, [X19+112]
	313 Compare X8, 0
	314 JumpIfEqual {933}
	315 Move X9, 0xCCD000
	316 Move X23, [X19+104]
	317 Move X24, [X8+24]
	318 Move X9, [X9+1992]
	319 Compare X23, 0
	320 JumpIfNotEqual {322}
	321 Move X23, [X20+24]
	322 Move X1, [X8+80]
	323 Move X2, [X9]
	324 Move [X31+8], X31
	325 Move [X31+16], X31
	326 Add X0, X31, 8
	327 Call Nullable`1<CancellationToken>..ctor, X0, X1
	328 Move X8, 0xCCD000
	329 Move X8, [X8+2000]
	330 Move X0, [X8]
	331 Call 0x1C17F10
	332 Move X3, [X31+8]
	333 Move X4, [X31+16]
	334 Move X20, X0
	335 Move X1, X24
	336 Move X2, X23
	337 Move X5, X31
	338 Call RetryHistory..ctor, X0, X1, X2, X3
	339 Compare X21, 0
	340 JumpIfEqual {934}
	341 Move X8, 0xCCE000
	342 Move X8, [X8+648]
	343 Move X3, [X8]
	344 Move X0, X21
	345 Move X1, X22
	346 Move X2, X20
	347 Call 0x2244230, X0, X1, X2
	348 Compare X0, 0
	349 JumpIfEqual {935}
	350 Move X8, 0xCCE000
	351 Move X8, [X8+672]
	352 Move X1, [X8]
	353 Call Task`1<Object>.GetAwaiter, X0
	354 Move X8, 0xCCE000
	355 Move X8, [X8+664]
	356 Move [X31+24], X0
	357 Move X1, [X8]
	358 Add X0, X31, 24
	359 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {388}
	364 Move X8, 0xCCE000
	365 Move X8, [X8+656]
	366 Add X0, X31, 24
	367 Move X1, [X8]
	368 Call TaskAwaiter`1<Object>.GetResult, X0
	369 Move X20, X0
	370 Compare X0, 0
	371 JumpIfEqual {928}
	372 Move X10, 0xCCE000
	373 Move X8, [X20]
	374 Move X10, [X10+640]
	375 NotImplemented "Instruction LDRH not yet implemented."
	376 Move X1, [X10]
	377 Compare X9, 0
	378 JumpIfEqual {385}
	379 Move X10, [X8+176]
	380 Add X10, X10, 8
	381 NotImplemented "Instruction LDUR not yet implemented."
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Subtract X9, X9, 1
	384 Add X10, X10, 16
	385 Move W2, 4
	386 Move X0, X20
	387 Call 0x1C5D788
	388 Move W8, 1
	389 Move [X19], W8
	390 Move X8, [X31+24]
	391 Move [X19+128], X8
	392 Move X8, 0xCCC000
	393 Move X8, [X8+1840]
	394 Move X0, [X8]
	395 Move W8, [X0+224]
	396 Compare W8, 0
	397 JumpIfNotEqual {399}
	398 Call 0x1C17DFC
	399 Move X8, 0xCCE000
	400 Move X8, [X8+616]
	401 Add X0, X19, 8
	402 Move X3, [X8]
	403 Add X1, X31, 24
	404 Move X2, X19
	405 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	406 Move W9, [X10]
	407 Add W9, W9, 4
	408 Add X8, X8, W9
	409 Add X0, X8, 312
	410 Move X8, [X0]
	411 Move X1, [X0+8]
	412 Move X0, X20
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Move X21, X0
	415 Compare X0, 0
	416 JumpIfEqual {929}
	417 Move X10, 0xCCE000
	418 Move X8, [X21]
	419 Move X10, [X10+272]
	420 NotImplemented "Instruction LDRH not yet implemented."
	421 Move X1, [X10]
	422 Compare X9, 0
	423 JumpIfEqual {430}
	424 Move X10, [X8+176]
	425 Add X10, X10, 8
	426 NotImplemented "Instruction LDUR not yet implemented."
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Subtract X9, X9, 1
	429 Add X10, X10, 16
	430 Move X0, X21
	431 Move W2, W31
	432 Call 0x1C5D788
	433 NotImplemented "Instruction LDRSW not yet implemented."
	434 Add X8, X8, X9
	435 Add X0, X8, 312
	436 Move X8, [X0]
	437 Move X1, [X0+8]
	438 Move X0, X21
	439 NotImplemented "Instruction BLR not yet implemented."
	440 Move X21, X0
	441 Compare X0, 0
	442 JumpIfEqual {930}
	443 Move X24, 0xC91000
	444 Move X28, 0xCCE000
	445 Move X29, 0xC92000
	446 Move X26, 0xCCE000
	447 Move X27, 0xCCE000
	448 Move X24, [X24+3608]
	449 Move X28, [X28+280]
	450 Move X29, [X29+2072]
	451 Move X26, [X26+264]
	452 Move X27, [X27+224]
	453 Move X8, [X21]
	454 Move X1, [X24]
	455 NotImplemented "Instruction LDRH not yet implemented."
	456 Compare X9, 0
	457 JumpIfEqual {464}
	458 Move X10, [X8+176]
	459 Add X10, X10, 8
	460 NotImplemented "Instruction LDUR not yet implemented."
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Subtract X9, X9, 1
	463 Add X10, X10, 16
	464 Move X0, X21
	465 Move W2, W31
	466 Call 0x1C5D788
	467 NotImplemented "Instruction LDRSW not yet implemented."
	468 Add X8, X8, X9
	469 Add X0, X8, 312
	470 Move X8, [X0]
	471 Move X1, [X0+8]
	472 Move X0, X21
	473 NotImplemented "Instruction BLR not yet implemented."
	474 Move TEMP, X0
	475 And TEMP, TEMP, 1
	476 Compare TEMP, 1
	477 JumpIfNotEqual {601}
	478 Move X8, [X21]
	479 Move X1, [X28]
	480 NotImplemented "Instruction LDRH not yet implemented."
	481 Compare X9, 0
	482 JumpIfEqual {489}
	483 Move X10, [X8+176]
	484 Add X10, X10, 8
	485 NotImplemented "Instruction LDUR not yet implemented."
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Subtract X9, X9, 1
	488 Add X10, X10, 16
	489 Move X0, X21
	490 Move W2, W31
	491 Call 0x1C5D788
	492 NotImplemented "Instruction LDRSW not yet implemented."
	493 Add X8, X8, X9
	494 Add X0, X8, 312
	495 Move X8, [X0]
	496 Move X1, [X0+8]
	497 Move X0, X21
	498 NotImplemented "Instruction BLR not yet implemented."
	499 Move X8, [X19+112]
	500 Compare X8, 0
	501 JumpIfEqual {918}
	502 Move X23, [X8+24]
	503 Compare X23, 0
	504 JumpIfEqual {919}
	505 Move X8, [X23]
	506 Move X1, [X29]
	507 Move X22, X0
	508 NotImplemented "Instruction LDRH not yet implemented."
	509 Compare X9, 0
	510 JumpIfEqual {517}
	511 Move X10, [X8+176]
	512 Add X10, X10, 8
	513 NotImplemented "Instruction LDUR not yet implemented."
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Subtract X9, X9, 1
	516 Add X10, X10, 16
	517 Move W2, 10
	518 Move X0, X23
	519 Call 0x1C5D788
	520 Move W9, [X10]
	521 Add W9, W9, 10
	522 Add X8, X8, W9
	523 Add X0, X8, 312
	524 Move X8, [X0]
	525 Move X1, [X0+8]
	526 Move X0, X23
	527 NotImplemented "Instruction BLR not yet implemented."
	528 Compare X22, 0
	529 JumpIfEqual {916}
	530 Move X8, [X22]
	531 Move X1, [X26]
	532 Move X23, X0
	533 NotImplemented "Instruction LDRH not yet implemented."
	534 Compare X9, 0
	535 JumpIfEqual {542}
	536 Move X10, [X8+176]
	537 Add X10, X10, 8
	538 NotImplemented "Instruction LDUR not yet implemented."
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Subtract X9, X9, 1
	541 Add X10, X10, 16
	542 Move W2, 6
	543 Move X0, X22
	544 Call 0x1C5D788
	545 Move W9, [X10]
	546 Add W9, W9, 6
	547 Add X8, X8, W9
	548 Add X0, X8, 312
	549 Move X8, [X0]
	550 Move X1, [X0+8]
	551 Move X0, X22
	552 NotImplemented "Instruction BLR not yet implemented."
	553 Move X1, X0
	554 Compare X23, 0
	555 JumpIfEqual {917}
	556 Move X0, X23
	557 Move X2, X31
	558 Call String.Equals, X0, X1
	559 Move TEMP, X0
	560 And TEMP, TEMP, 1
	561 Compare TEMP, 1
	562 JumpIfNotEqual {453}
	563 Move X9, [X22]
	564 Move X8, [X27]
	565 Move W11, [X9+304]
	566 Move W10, [X8+304]
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Move X9, [X9+200]
	569 Add X9, X9, X10
	570 NotImplemented "Instruction LDUR not yet implemented."
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Move X8, [X19+112]
	573 Compare X8, 0
	574 JumpIfEqual {924}
	575 Move X23, [X8+24]
	576 Compare X23, 0
	577 JumpIfEqual {925}
	578 Move X8, [X23]
	579 Move X1, [X29]
	580 NotImplemented "Instruction LDRH not yet implemented."
	581 Compare X9, 0
	582 JumpIfEqual {589}
	583 Move X10, [X8+176]
	584 Add X10, X10, 8
	585 NotImplemented "Instruction LDUR not yet implemented."
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Subtract X9, X9, 1
	588 Add X10, X10, 16
	589 Move W2, 9
	590 Move X0, X23
	591 Call 0x1C5D788
	592 Move W9, [X10]
	593 Add W9, W9, 9
	594 Add X8, X8, W9
	595 Add X0, X8, 312
	596 Move X8, [X0]
	597 Move X1, [X0+8]
	598 Move X0, X23
	599 NotImplemented "Instruction BLR not yet implemented."
	600 Move [X22+104], X0
	601 Move X24, X31
	602 Move W22, 11
	603 Move TEMP, X25
	604 And TEMP, TEMP, -2147483648
	605 Compare TEMP, -2147483648
	606 JumpIfNotEqual {632}
	607 Compare X21, 0
	608 JumpIfEqual {632}
	609 Move X10, 0xC91000
	610 Move X8, [X21]
	611 Move X10, [X10+3584]
	612 NotImplemented "Instruction LDRH not yet implemented."
	613 Move X1, [X10]
	614 Compare X9, 0
	615 JumpIfEqual {622}
	616 Move X10, [X8+176]
	617 Add X10, X10, 8
	618 NotImplemented "Instruction LDUR not yet implemented."
	619 NotImplemented "Instruction CMP not yet implemented."
	620 Subtract X9, X9, 1
	621 Add X10, X10, 16
	622 Move X0, X21
	623 Move W2, W31
	624 Call 0x1C5D788
	625 NotImplemented "Instruction LDRSW not yet implemented."
	626 Add X8, X8, X9
	627 Add X0, X8, 312
	628 Move X8, [X0]
	629 Move X1, [X0+8]
	630 Move X0, X21
	631 NotImplemented "Instruction BLR not yet implemented."
	632 Compare X24, 0
	633 JumpIfNotEqual {931}
	634 NotImplemented "Instruction CMP not yet implemented."
	635 Compare W22, 0
	636 JumpIfNotEqual {902}
	637 Move X8, [X20]
	638 Move X10, 0xCCE000
	639 NotImplemented "Instruction LDRH not yet implemented."
	640 Move X10, [X10+640]
	641 Move X1, [X10]
	642 Compare X9, 0
	643 JumpIfEqual {650}
	644 Move X10, [X8+176]
	645 Add X10, X10, 8
	646 NotImplemented "Instruction LDUR not yet implemented."
	647 NotImplemented "Instruction CMP not yet implemented."
	648 Subtract X9, X9, 1
	649 Add X10, X10, 16
	650 Move W2, 1
	651 Move X0, X20
	652 Call 0x1C5D788
	653 Move W9, [X10]
	654 Add W9, W9, 1
	655 Add X8, X8, W9
	656 Add X0, X8, 312
	657 Move X8, [X0]
	658 Move X1, [X0+8]
	659 Move X0, X20
	660 NotImplemented "Instruction BLR not yet implemented."
	661 Move X21, X0
	662 Compare X0, 0
	663 JumpIfEqual {937}
	664 Move X8, [X21]
	665 Move X10, 0xCCE000
	666 NotImplemented "Instruction LDRH not yet implemented."
	667 Move X10, [X10+272]
	668 Move X1, [X10]
	669 Compare X9, 0
	670 JumpIfEqual {677}
	671 Move X10, [X8+176]
	672 Add X10, X10, 8
	673 NotImplemented "Instruction LDUR not yet implemented."
	674 NotImplemented "Instruction CMP not yet implemented."
	675 Subtract X9, X9, 1
	676 Add X10, X10, 16
	677 Move X0, X21
	678 Move W2, W31
	679 Call 0x1C5D788
	680 NotImplemented "Instruction LDRSW not yet implemented."
	681 Add X8, X8, X9
	682 Add X0, X8, 312
	683 Move X8, [X0]
	684 Move X1, [X0+8]
	685 Move X0, X21
	686 NotImplemented "Instruction BLR not yet implemented."
	687 Move X21, X0
	688 Compare X0, 0
	689 JumpIfEqual {938}
	690 Move X24, 0xC91000
	691 Move X26, 0xCCE000
	692 Move X27, 0xC92000
	693 Move X28, 0xCCE000
	694 Move X29, 0xCCE000
	695 Move X24, [X24+3608]
	696 Move X26, [X26+280]
	697 Move X27, [X27+2072]
	698 Move X28, [X28+264]
	699 Move X29, [X29+224]
	700 Move X8, [X21]
	701 Move X1, [X24]
	702 NotImplemented "Instruction LDRH not yet implemented."
	703 Compare X9, 0
	704 JumpIfEqual {711}
	705 Move X10, [X8+176]
	706 Add X10, X10, 8
	707 NotImplemented "Instruction LDUR not yet implemented."
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Subtract X9, X9, 1
	710 Add X10, X10, 16
	711 Move X0, X21
	712 Move W2, W31
	713 Call 0x1C5D788
	714 NotImplemented "Instruction LDRSW not yet implemented."
	715 Add X8, X8, X9
	716 Add X0, X8, 312
	717 Move X8, [X0]
	718 Move X1, [X0+8]
	719 Move X0, X21
	720 NotImplemented "Instruction BLR not yet implemented."
	721 Move TEMP, X0
	722 And TEMP, TEMP, 1
	723 Compare TEMP, 1
	724 JumpIfNotEqual {848}
	725 Move X8, [X21]
	726 Move X1, [X26]
	727 NotImplemented "Instruction LDRH not yet implemented."
	728 Compare X9, 0
	729 JumpIfEqual {736}
	730 Move X10, [X8+176]
	731 Add X10, X10, 8
	732 NotImplemented "Instruction LDUR not yet implemented."
	733 NotImplemented "Instruction CMP not yet implemented."
	734 Subtract X9, X9, 1
	735 Add X10, X10, 16
	736 Move X0, X21
	737 Move W2, W31
	738 Call 0x1C5D788
	739 NotImplemented "Instruction LDRSW not yet implemented."
	740 Add X8, X8, X9
	741 Add X0, X8, 312
	742 Move X8, [X0]
	743 Move X1, [X0+8]
	744 Move X0, X21
	745 NotImplemented "Instruction BLR not yet implemented."
	746 Move X8, [X19+112]
	747 Compare X8, 0
	748 JumpIfEqual {922}
	749 Move X23, [X8+24]
	750 Compare X23, 0
	751 JumpIfEqual {923}
	752 Move X8, [X23]
	753 Move X1, [X27]
	754 Move X22, X0
	755 NotImplemented "Instruction LDRH not yet implemented."
	756 Compare X9, 0
	757 JumpIfEqual {764}
	758 Move X10, [X8+176]
	759 Add X10, X10, 8
	760 NotImplemented "Instruction LDUR not yet implemented."
	761 NotImplemented "Instruction CMP not yet implemented."
	762 Subtract X9, X9, 1
	763 Add X10, X10, 16
	764 Move W2, 10
	765 Move X0, X23
	766 Call 0x1C5D788
	767 Move W9, [X10]
	768 Add W9, W9, 10
	769 Add X8, X8, W9
	770 Add X0, X8, 312
	771 Move X8, [X0]
	772 Move X1, [X0+8]
	773 Move X0, X23
	774 NotImplemented "Instruction BLR not yet implemented."
	775 Compare X22, 0
	776 JumpIfEqual {920}
	777 Move X8, [X22]
	778 Move X1, [X28]
	779 Move X23, X0
	780 NotImplemented "Instruction LDRH not yet implemented."
	781 Compare X9, 0
	782 JumpIfEqual {789}
	783 Move X10, [X8+176]
	784 Add X10, X10, 8
	785 NotImplemented "Instruction LDUR not yet implemented."
	786 NotImplemented "Instruction CMP not yet implemented."
	787 Subtract X9, X9, 1
	788 Add X10, X10, 16
	789 Move W2, 6
	790 Move X0, X22
	791 Call 0x1C5D788
	792 Move W9, [X10]
	793 Add W9, W9, 6
	794 Add X8, X8, W9
	795 Add X0, X8, 312
	796 Move X8, [X0]
	797 Move X1, [X0+8]
	798 Move X0, X22
	799 NotImplemented "Instruction BLR not yet implemented."
	800 Move X1, X0
	801 Compare X23, 0
	802 JumpIfEqual {921}
	803 Move X0, X23
	804 Move X2, X31
	805 Call String.Equals, X0, X1
	806 Move TEMP, X0
	807 And TEMP, TEMP, 1
	808 Compare TEMP, 1
	809 JumpIfNotEqual {700}
	810 Move X9, [X22]
	811 Move X8, [X29]
	812 Move W11, [X9+304]
	813 Move W10, [X8+304]
	814 NotImplemented "Instruction CMP not yet implemented."
	815 Move X9, [X9+200]
	816 Add X9, X9, X10
	817 NotImplemented "Instruction LDUR not yet implemented."
	818 NotImplemented "Instruction CMP not yet implemented."
	819 Move X8, [X19+112]
	820 Compare X8, 0
	821 JumpIfEqual {926}
	822 Move X23, [X8+24]
	823 Compare X23, 0
	824 JumpIfEqual {927}
	825 Move X8, [X23]
	826 Move X1, [X27]
	827 NotImplemented "Instruction LDRH not yet implemented."
	828 Compare X9, 0
	829 JumpIfEqual {836}
	830 Move X10, [X8+176]
	831 Add X10, X10, 8
	832 NotImplemented "Instruction LDUR not yet implemented."
	833 NotImplemented "Instruction CMP not yet implemented."
	834 Subtract X9, X9, 1
	835 Add X10, X10, 16
	836 Move W2, 9
	837 Move X0, X23
	838 Call 0x1C5D788
	839 Move W9, [X10]
	840 Add W9, W9, 9
	841 Add X8, X8, W9
	842 Add X0, X8, 312
	843 Move X8, [X0]
	844 Move X1, [X0+8]
	845 Move X0, X23
	846 NotImplemented "Instruction BLR not yet implemented."
	847 Move [X22+104], X0
	848 Move X24, X31
	849 Move W22, 14
	850 Move TEMP, X25
	851 And TEMP, TEMP, -2147483648
	852 Compare TEMP, -2147483648
	853 JumpIfNotEqual {879}
	854 Compare X21, 0
	855 JumpIfEqual {879}
	856 Move X10, 0xC91000
	857 Move X8, [X21]
	858 Move X10, [X10+3584]
	859 NotImplemented "Instruction LDRH not yet implemented."
	860 Move X1, [X10]
	861 Compare X9, 0
	862 JumpIfEqual {869}
	863 Move X10, [X8+176]
	864 Add X10, X10, 8
	865 NotImplemented "Instruction LDUR not yet implemented."
	866 NotImplemented "Instruction CMP not yet implemented."
	867 Subtract X9, X9, 1
	868 Add X10, X10, 16
	869 Move X0, X21
	870 Move W2, W31
	871 Call 0x1C5D788
	872 NotImplemented "Instruction LDRSW not yet implemented."
	873 Add X8, X8, X9
	874 Add X0, X8, 312
	875 Move X8, [X0]
	876 Move X1, [X0+8]
	877 Move X0, X21
	878 NotImplemented "Instruction BLR not yet implemented."
	879 Compare X24, 0
	880 JumpIfNotEqual {939}
	881 Compare W22, 0
	882 JumpIfEqual {884}
	883 NotImplemented "Instruction CMP not yet implemented."
	884 Move TEMP, 1
	885 Not TEMP
	886 Move W8, TEMP
	887 Move [X19+112], X31
	888 Move [X19+8], W8
	889 Move X8, 0xCCC000
	890 Move X8, [X8+1840]
	891 Move X0, [X8]
	892 Move W8, [X0+224]
	893 Compare W8, 0
	894 JumpIfNotEqual {896}
	895 Call 0x1C17DFC
	896 Move X8, 0xCCD000
	897 Move X8, [X8+416]
	898 Move X0, X19
	899 Move X1, X20
	900 Move X2, [X8]
	901 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	902 Move X20, [X31+128]
	903 Move X19, [X31+136]
	904 Move X22, [X31+112]
	905 Move X21, [X31+120]
	906 Move X24, [X31+96]
	907 Move X23, [X31+104]
	908 Move X26, [X31+80]
	909 Move X25, [X31+88]
	910 Move X28, [X31+64]
	911 Move X27, [X31+72]
	912 Move X29, [X31+48]
	913 Move X30, [X31+56]
	914 Add X31, X31, 144
	915 Return 
	916 Call 0x1C17F20
	917 Call 0x1C17F20
	918 Call 0x1C17F20
	919 Call 0x1C17F20
	920 Call 0x1C17F20
	921 Call 0x1C17F20
	922 Call 0x1C17F20
	923 Call 0x1C17F20
	924 Call 0x1C17F20
	925 Call 0x1C17F20
	926 Call 0x1C17F20
	927 Call 0x1C17F20
	928 Call 0x1C17F20
	929 Call 0x1C17F20
	930 Call 0x1C17F20
	931 Move X0, X24
	932 Call 0x1C17F18
	933 Call 0x1C17F20
	934 Call 0x1C17F20
	935 Call 0x1C17F20
	936 Call 0x1C17F20
	937 Call 0x1C17F20
	938 Call 0x1C17F20
	939 Move X0, X24
	940 Call 0x1C17F18
	941 Call 0x1C17F20
	942 Call 0x1C17F20
	943 Call 0x1C17F20
	944 Call 0x1C17F20
	945 Call 0x1C17F20
	946 Call 0x1C17F20
	947 Call 0x1C17F20
	948 Call 0x1C17F20
	949 Call 0x1C17F20
	950 Move X22, X1
	951 Move X23, X0
	952 Move X22, X1
	953 Move X23, X0
	954 NotImplemented "Instruction CMP not yet implemented."
	955 Move X0, X23
	956 Call 0x3EB2AD0
	957 Move X24, [X0]
	958 Call 0x3EB2AE0
	959 Move W22, W31
	960 Move TEMP, X25
	961 And TEMP, TEMP, -2147483648
	962 Compare TEMP, -2147483648
	963 JumpIfEqual {854}
	964 Move X24, X31
	965 Move TEMP, X25
	966 And TEMP, TEMP, -2147483648
	967 Compare TEMP, -2147483648
	968 JumpIfNotEqual {994}
	969 Compare X21, 0
	970 JumpIfEqual {994}
	971 Move X10, 0xC91000
	972 Move X8, [X21]
	973 Move X10, [X10+3584]
	974 NotImplemented "Instruction LDRH not yet implemented."
	975 Move X1, [X10]
	976 Compare X9, 0
	977 JumpIfEqual {984}
	978 Move X10, [X8+176]
	979 Add X10, X10, 8
	980 NotImplemented "Instruction LDUR not yet implemented."
	981 NotImplemented "Instruction CMP not yet implemented."
	982 Subtract X9, X9, 1
	983 Add X10, X10, 16
	984 Move X0, X21
	985 Move W2, W31
	986 Call 0x1C5D788
	987 NotImplemented "Instruction LDRSW not yet implemented."
	988 Add X8, X8, X9
	989 Add X0, X8, 312
	990 Move X8, [X0]
	991 Move X1, [X0+8]
	992 Move X0, X21
	993 NotImplemented "Instruction BLR not yet implemented."
	994 Compare X24, 0
	995 JumpIfEqual {1048}
	996 Move X0, X24
	997 Call 0x1C17F18
	998 Move X22, X1
	999 Move X23, X0
	1000 Move TEMP, X25
	1001 And TEMP, TEMP, -2147483648
	1002 Compare TEMP, -2147483648
	1003 JumpIfEqual {969}
	1004 Move X22, X1
	1005 Move X23, X0
	1006 NotImplemented "Instruction CMP not yet implemented."
	1007 Move X0, X23
	1008 Call 0x3EB2AD0
	1009 Move X24, [X0]
	1010 Call 0x3EB2AE0
	1011 Move W22, W31
	1012 Move TEMP, X25
	1013 And TEMP, TEMP, -2147483648
	1014 Compare TEMP, -2147483648
	1015 JumpIfEqual {607}
	1016 Move X24, X31
	1017 Move TEMP, X25
	1018 And TEMP, TEMP, -2147483648
	1019 Compare TEMP, -2147483648
	1020 JumpIfNotEqual {1046}
	1021 Compare X21, 0
	1022 JumpIfEqual {1046}
	1023 Move X10, 0xC91000
	1024 Move X8, [X21]
	1025 Move X10, [X10+3584]
	1026 NotImplemented "Instruction LDRH not yet implemented."
	1027 Move X1, [X10]
	1028 Compare X9, 0
	1029 JumpIfEqual {1036}
	1030 Move X10, [X8+176]
	1031 Add X10, X10, 8
	1032 NotImplemented "Instruction LDUR not yet implemented."
	1033 NotImplemented "Instruction CMP not yet implemented."
	1034 Subtract X9, X9, 1
	1035 Add X10, X10, 16
	1036 Move X0, X21
	1037 Move W2, W31
	1038 Call 0x1C5D788
	1039 NotImplemented "Instruction LDRSW not yet implemented."
	1040 Add X8, X8, X9
	1041 Add X0, X8, 312
	1042 Move X8, [X0]
	1043 Move X1, [X0+8]
	1044 Move X0, X21
	1045 NotImplemented "Instruction BLR not yet implemented."
	1046 Compare X24, 0
	1047 JumpIfNotEqual {1091}
	1048 NotImplemented "Instruction CMP not yet implemented."
	1049 Move X0, X23
	1050 Call 0x3EB2AD0
	1051 Move X20, X0
	1052 Move X0, 0xC91000
	1053 Move X0, [X0+2000]
	1054 Call 0x1C17D08
	1055 Move X8, [X20]
	1056 Move X1, [X8]
	1057 Call 0x1C18270
	1058 Move TEMP, X0
	1059 And TEMP, TEMP, 1
	1060 Compare TEMP, 1
	1061 JumpIfNotEqual {1083}
	1062 Move X20, [X20]
	1063 Call 0x3EB2AE0
	1064 Move TEMP, 1
	1065 Not TEMP
	1066 Move W8, TEMP
	1067 Move [X19+112], X31
	1068 Move [X19+8], W8
	1069 Move X0, 0xCCC000
	1070 Move X0, [X0+1840]
	1071 Call 0x1C17D08
	1072 Move W8, [X0+224]
	1073 Compare W8, 0
	1074 JumpIfNotEqual {1076}
	1075 Call 0x1C17DFC
	1076 Move X0, 0xCCD000
	1077 Move X0, [X0+448]
	1078 Call 0x1C17D08
	1079 Move X2, X0
	1080 Move X0, X19
	1081 Move X1, X20
	1082 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	1083 Move W0, 8
	1084 Call 0x3EB2AF0
	1085 Move X8, [X20]
	1086 Move [X0], X8
	1087 Move X1, 0xA52000
	1088 Add X1, X1, 3672
	1089 Move X2, X31
	1090 Call 0x3EB2B00
	1091 Move X0, X24
	1092 Call 0x1C17F18
	1093 Move X22, X1
	1094 Move X23, X0
	1095 Move TEMP, X25
	1096 And TEMP, TEMP, -2147483648
	1097 Compare TEMP, -2147483648
	1098 JumpIfEqual {1021}
	1099 Move X23, X0
	1100 Call 0x3EB2AE0
	1101 Move X0, X23
	1102 Call 0x1D2D690
	1103 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03463D14 MOV X22, X1
	0x03463D18 MOV X23, X0
	0x03463D1C CMP W22, 0x1
	0x03463D20 B.NE 0x3463D40
	0x03463D24 MOV X0, X23
	0x03463D28 BL 0x3EB1AD0
	0x03463D2C LDR X24, [X0]
	0x03463D30 BL 0x3EB1AE0
	0x03463D34 MOV W22, W31
	0x03463D38 TBNZ X25, 0x1F, 0x346364C
	0x03463D3C B 0x34636B0
	0x03463D40 MOV X24, X31
	0x03463D44 TBZ X25, 0x1F, 0x3463DAC
	0x03463D48 CBZ X21, 0x3463DAC
	0x03463D4C ADRP X10, 0xC90000
	0x03463D50 LDR X8, [X21]
	0x03463D54 LDR X10, [X10 + 0xE00]
	0x03463D58 LDRH W9, [X8 + 0x12E]
	0x03463D5C LDR X1, [X10]
	0x03463D60 CBZ X9, 0x3463D84
	0x03463D64 LDR X10, [X8 + 0xB0]
	0x03463D68 ADD X10, X10, 0x8
	0x03463D6C LDUR X11, [X10 - 0x8]
	0x03463D70 CMP X11, X1
	0x03463D74 B.EQ 0x3463D94
	0x03463D78 SUBS X9, X9, 0x1
	0x03463D7C ADD X10, X10, 0x10
	0x03463D80 B.NE 0x3463D6C
	0x03463D84 MOV X0, X21
	0x03463D88 MOV W2, W31
	0x03463D8C BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF7B000
	007 Move X21, 0xCCC000
	008 Move W8, [X22+1974]
	009 Move X21, [X21+1840]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCCD000
	017 Move X0, [X0+456]
	018 Call 0x1C17CF4
	019 Move X0, 0xCCC000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1974], W8
	024 Move X0, [X21]
	025 Move X21, 0xCCD000
	026 Move W8, [X0+224]
	027 Move X21, [X21+456]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

