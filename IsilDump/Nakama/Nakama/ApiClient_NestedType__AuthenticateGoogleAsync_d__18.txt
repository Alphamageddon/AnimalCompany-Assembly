Type: Nakama.ApiClient/<AuthenticateGoogleAsync>d__18

Method: System.Void MoveNext()

Disassembly:
	0x0341CE20 LDR X0, [X0 + 0x870]
	0x0341CE24 BL 0x1C16CF4
	0x0341CE28 ADRP X0, 0xD12000
	0x0341CE2C LDR X0, [X0 + 0x320]
	0x0341CE30 BL 0x1C16CF4
	0x0341CE34 MOVZ W8, 0x1
	0x0341CE38 STRB W8, [X22 + 0x60C]
	0x0341CE3C LDR X0, [X21]
	0x0341CE40 ADRP X21, 0xD12000
	0x0341CE44 LDR W8, [X0 + 0xE0]
	0x0341CE48 LDR X21, [X21 + 0x870]
	0x0341CE4C CBNZ W8, 0x341CE54
	0x0341CE50 BL 0x1C16DFC
	0x0341CE54 LDR X2, [X21]
	0x0341CE58 ADD X0, X20, 0x8
	0x0341CE5C MOV X1, X19
	0x0341CE60 LDP X20, X19, [X31 + 0x20]
	0x0341CE64 LDP X22, X21, [X31 + 0x10]
	0x0341CE68 LDR X30, [X31], #0x30
	0x0341CE6C B 0x2632228
	0x0341CE70 SUB X31, X31, 0x80
	0x0341CE74 STP X29, X30, [X31 + 0x20]
	0x0341CE78 STP X28, X27, [X31 + 0x30]
	0x0341CE7C STP X26, X25, [X31 + 0x40]
	0x0341CE80 STP X24, X23, [X31 + 0x50]
	0x0341CE84 STP X22, X21, [X31 + 0x60]
	0x0341CE88 STP X20, X19, [X31 + 0x70]
	0x0341CE8C ADRP X20, 0xFC1000
	0x0341CE90 LDRB W8, [X20 + 0x60D]
	0x0341CE94 MOV X19, X0
	0x0341CE98 TBNZ X8, 0x0, 0x341CFD0
	0x0341CE9C ADRP X0, 0xD12000
	0x0341CEA0 LDR X0, [X0 + 0xB80]
	0x0341CEA4 BL 0x1C16CF4
	0x0341CEA8 ADRP X0, 0xCDA000
	0x0341CEAC LDR X0, [X0 + 0x280]
	0x0341CEB0 BL 0x1C16CF4
	0x0341CEB4 ADRP X0, 0xCE0000
	0x0341CEB8 LDR X0, [X0 + 0x8D8]
	0x0341CEBC BL 0x1C16CF4
	0x0341CEC0 ADRP X0, 0xCD8000
	0x0341CEC4 LDR X0, [X0 + 0x810]
	0x0341CEC8 BL 0x1C16CF4
	0x0341CECC ADRP X0, 0xCD8000
	0x0341CED0 LDR X0, [X0 + 0x6C0]
	0x0341CED4 BL 0x1C16CF4
	0x0341CED8 ADRP X0, 0xCD8000
	0x0341CEDC LDR X0, [X0 + 0x6D0]
	0x0341CEE0 BL 0x1C16CF4
	0x0341CEE4 ADRP X0, 0xCD7000
	0x0341CEE8 LDR X0, [X0 + 0xE00]
	0x0341CEEC BL 0x1C16CF4
	0x0341CEF0 ADRP X0, 0xCD7000
	0x0341CEF4 LDR X0, [X0 + 0xF70]
	0x0341CEF8 BL 0x1C16CF4
	0x0341CEFC ADRP X0, 0xCD7000
	0x0341CF00 LDR X0, [X0 + 0xF78]
	0x0341CF04 BL 0x1C16CF4
	0x0341CF08 ADRP X0, 0xCD7000
	0x0341CF0C LDR X0, [X0 + 0xE18]
	0x0341CF10 BL 0x1C16CF4
	0x0341CF14 ADRP X0, 0xD12000
	0x0341CF18 LDR X0, [X0 + 0x7B8]
	0x0341CF1C BL 0x1C16CF4
	0x0341CF20 ADRP X0, 0xCD7000
	0x0341CF24 LDR X0, [X0 + 0xAC8]
	0x0341CF28 BL 0x1C16CF4
	0x0341CF2C ADRP X0, 0xCDA000
	0x0341CF30 LDR X0, [X0 + 0x1E0]
	0x0341CF34 BL 0x1C16CF4
	0x0341CF38 ADRP X0, 0xCDA000
	0x0341CF3C LDR X0, [X0 + 0x1F0]
	0x0341CF40 BL 0x1C16CF4
	0x0341CF44 ADRP X0, 0xCDA000
	0x0341CF48 LDR X0, [X0 + 0x1F8]
	0x0341CF4C BL 0x1C16CF4
	0x0341CF50 ADRP X0, 0xCE0000
	0x0341CF54 LDR X0, [X0 + 0x3A0]
	0x0341CF58 BL 0x1C16CF4
	0x0341CF5C ADRP X0, 0xCD9000
	0x0341CF60 LDR X0, [X0 + 0xA28]
	0x0341CF64 BL 0x1C16CF4
	0x0341CF68 ADRP X0, 0xD00000
	0x0341CF6C LDR X0, [X0 + 0x4D8]
	0x0341CF70 BL 0x1C16CF4
	0x0341CF74 ADRP X0, 0xD12000
	0x0341CF78 LDR X0, [X0 + 0x7F0]
	0x0341CF7C BL 0x1C16CF4
	0x0341CF80 ADRP X0, 0xD12000
	0x0341CF84 LDR X0, [X0 + 0x800]
	0x0341CF88 BL 0x1C16CF4
	0x0341CF8C ADRP X0, 0xCE0000
	0x0341CF90 LDR X0, [X0 + 0x720]
	0x0341CF94 BL 0x1C16CF4
	0x0341CF98 ADRP X0, 0xD12000
	0x0341CF9C LDR X0, [X0 + 0x7D0]
	0x0341CFA0 BL 0x1C16CF4
	0x0341CFA4 ADRP X0, 0xD12000
	0x0341CFA8 LDR X0, [X0 + 0xB88]
	0x0341CFAC BL 0x1C16CF4
	0x0341CFB0 ADRP X0, 0xD12000
	0x0341CFB4 LDR X0, [X0 + 0x7D8]
	0x0341CFB8 BL 0x1C16CF4
	0x0341CFBC ADRP X0, 0xCD7000
	0x0341CFC0 LDR X0, [X0 + 0x988]
	0x0341CFC4 BL 0x1C16CF4
	0x0341CFC8 MOVZ W8, 0x1
	0x0341CFCC STRB W8, [X20 + 0x60D]
	0x0341CFD0 STR X31, [X31 + 0x18]
	0x0341CFD4 ADRP X27, 0xCDA000
	0x0341CFD8 LDR W24, [X19]
	0x0341CFDC LDR X27, [X27 + 0x280]
	0x0341CFE0 CBZ W24, 0x341D0BC
	0x0341CFE4 LDR X21, [X19 + 0x20]
	0x0341CFE8 CBZ X21, 0x341D524
	0x0341CFEC ADRP X26, 0xCD9000
	0x0341CFF0 LDR X26, [X26 + 0xA28]
	0x0341CFF4 ADRP X8, 0xD12000
	0x0341CFF8 LDR X0, [X26]
	0x0341CFFC LDR X8, [X8 + 0xB88]
	0x0341D000 LDR X23, [X19 + 0x30]
	0x0341D004 LDR W9, [X0 + 0xE0]
	0x0341D008 LDR X20, [X8]
	0x0341D00C CBNZ W9, 0x341D014
	0x0341D010 BL 0x1C16DFC
	0x0341D014 MOV X0, X21
	0x0341D018 MOV X1, X31
	0x0341D01C BL 0x3624D20
	0x0341D020 CBZ X20, 0x341D56C
	0x0341D024 ADRP X8, 0xD11000
	0x0341D028 LDR X8, [X8 + 0x800]
	0x0341D02C MOV X2, X0
	0x0341D030 LDR X1, [X8]
	0x0341D034 MOV X0, X20
	0x0341D038 MOV X3, X31
	0x0341D03C BL 0x32293BC
	0x0341D040 ADRP X8, 0xCD6000
	0x0341D044 LDR X8, [X8 + 0x988]
	0x0341D048 LDR X21, [X19 + 0x28]
	0x0341D04C MOV X20, X0
	0x0341D050 LDR X28, [X8]
	0x0341D054 CBNZ X21, 0x341D074
	0x0341D058 ADRP X8, 0xCD6000
	0x0341D05C LDR X8, [X8 + 0xAC8]
	0x0341D060 LDR X0, [X8]
	0x0341D064 MOV W1, W31
	0x0341D068 BL 0x1C16D6C
	0x0341D06C MOV X21, X0
	0x0341D070 CBZ X0, 0x341D59C
	0x0341D074 ADRP X10, 0xCD6000
	0x0341D078 LDR X8, [X21]
	0x0341D07C LDR X10, [X10 + 0xF70]
	0x0341D080 LDRH W9, [X8 + 0x12E]
	0x0341D084 LDR X1, [X10]
	0x0341D088 CBZ X9, 0x341D0AC
	0x0341D08C LDR X10, [X8 + 0xB0]
	0x0341D090 ADD X10, X10, 0x8
	0x0341D094 LDUR X11, [X10 - 0x8]
	0x0341D098 CMP X11, X1
	0x0341D09C B.EQ 0x341D0D4
	0x0341D0A0 SUBS X9, X9, 0x1
	0x0341D0A4 ADD X10, X10, 0x10
	0x0341D0A8 B.NE 0x341D094
	0x0341D0AC MOV X0, X21
	0x0341D0B0 MOV W2, W31
	0x0341D0B4 BL 0x1C5C788
	0x0341D0B8 B 0x341D0E0
	0x0341D0BC LDR X8, [X19 + 0x50]
	0x0341D0C0 MOVN W9, 0x0
	0x0341D0C4 STR X8, [X31 + 0x18]
	0x0341D0C8 STR X31, [X19 + 0x50]
	0x0341D0CC STR W9, [X19]
	0x0341D0D0 B 0x341D48C
	0x0341D0D4 LDRSW X9, [X10]
	0x0341D0D8 ADD X8, X8, X9, 0x4, LSL
	0x0341D0DC ADD X0, X8, 0x138
	0x0341D0E0 LDP X8, X1, [X0]
	0x0341D0E4 MOV X0, X21
	0x0341D0E8 BLR X8
	0x0341D0EC STP X20, X23, [X31 + 0x8]
	0x0341D0F0 ADRP X29, 0xCD6000
	0x0341D0F4 ADRP X27, 0xCD6000
	0x0341D0F8 ADRP X20, 0xD11000
	0x0341D0FC ADRP X25, 0xCDF000
	0x0341D100 LDR X29, [X29 + 0xE18]
	0x0341D104 LDR X27, [X27 + 0xF78]
	0x0341D108 LDR X20, [X20 + 0x7F0]
	0x0341D10C LDR X25, [X25 + 0x720]
	0x0341D110 MOV X22, X0
	0x0341D114 MOV X0, X28
	0x0341D118 CBZ X22, 0x341D520
	0x0341D11C LDR X8, [X22]
	0x0341D120 LDR X1, [X29]
	0x0341D124 MOV X21, X0
	0x0341D128 LDRH W9, [X8 + 0x12E]
	0x0341D12C CBZ X9, 0x341D150
	0x0341D130 LDR X10, [X8 + 0xB0]
	0x0341D134 ADD X10, X10, 0x8
	0x0341D138 LDUR X11, [X10 - 0x8]
	0x0341D13C CMP X11, X1
	0x0341D140 B.EQ 0x341D160
	0x0341D144 SUBS X9, X9, 0x1
	0x0341D148 ADD X10, X10, 0x10
	0x0341D14C B.NE 0x341D138
	0x0341D150 MOV X0, X22
	0x0341D154 MOV W2, W31
	0x0341D158 BL 0x1C5C788
	0x0341D15C B 0x341D16C
	0x0341D160 LDRSW X9, [X10]
	0x0341D164 ADD X8, X8, X9, 0x4, LSL
	0x0341D168 ADD X0, X8, 0x138
	0x0341D16C LDP X8, X1, [X0]
	0x0341D170 MOV X0, X22
	0x0341D174 BLR X8
	0x0341D178 TBZ X0, 0x0, 0x341D210
	0x0341D17C LDR X8, [X22]
	0x0341D180 LDR X1, [X27]
	0x0341D184 LDRH W9, [X8 + 0x12E]
	0x0341D188 CBZ X9, 0x341D1AC
	0x0341D18C LDR X10, [X8 + 0xB0]
	0x0341D190 ADD X10, X10, 0x8
	0x0341D194 LDUR X11, [X10 - 0x8]
	0x0341D198 CMP X11, X1
	0x0341D19C B.EQ 0x341D1BC
	0x0341D1A0 SUBS X9, X9, 0x1
	0x0341D1A4 ADD X10, X10, 0x10
	0x0341D1A8 B.NE 0x341D194
	0x0341D1AC MOV X0, X22
	0x0341D1B0 MOV W2, W31
	0x0341D1B4 BL 0x1C5C788
	0x0341D1B8 B 0x341D1C8
	0x0341D1BC LDRSW X9, [X10]
	0x0341D1C0 ADD X8, X8, X9, 0x4, LSL
	0x0341D1C4 ADD X0, X8, 0x138
	0x0341D1C8 LDP X8, X1, [X0]
	0x0341D1CC MOV X0, X22
	0x0341D1D0 BLR X8
	0x0341D1D4 MOV X23, X0
	0x0341D1D8 LDR X0, [X26]
	0x0341D1DC LDR W8, [X0 + 0xE0]
	0x0341D1E0 CBNZ W8, 0x341D1E8
	0x0341D1E4 BL 0x1C16DFC
	0x0341D1E8 MOV X0, X23
	0x0341D1EC MOV X1, X31
	0x0341D1F0 BL 0x3624D20
	0x0341D1F4 LDR X1, [X20]
	0x0341D1F8 LDR X3, [X25]
	0x0341D1FC MOV X2, X0
	0x0341D200 MOV X0, X21
	0x0341D204 MOV X4, X31
	0x0341D208 BL 0x32277C4
	0x0341D20C B 0x341D118
	0x0341D210 MOV X23, X31
	0x0341D214 MOVZ W20, 0x9
	0x0341D218 ADRP X27, 0xCD9000
	0x0341D21C LDR X27, [X27 + 0x280]
	0x0341D220 LDR X25, [X31 + 0x10]
	0x0341D224 TBZ X24, 0x1F, 0x341D28C
	0x0341D228 CBZ X22, 0x341D28C
	0x0341D22C ADRP X10, 0xCD6000
	0x0341D230 LDR X8, [X22]
	0x0341D234 LDR X10, [X10 + 0xE00]
	0x0341D238 LDRH W9, [X8 + 0x12E]
	0x0341D23C LDR X1, [X10]
	0x0341D240 CBZ X9, 0x341D264
	0x0341D244 LDR X10, [X8 + 0xB0]
	0x0341D248 ADD X10, X10, 0x8
	0x0341D24C LDUR X11, [X10 - 0x8]
	0x0341D250 CMP X11, X1
	0x0341D254 B.EQ 0x341D274
	0x0341D258 SUBS X9, X9, 0x1
	0x0341D25C ADD X10, X10, 0x10
	0x0341D260 B.NE 0x341D24C
	0x0341D264 MOV X0, X22
	0x0341D268 MOV W2, W31
	0x0341D26C BL 0x1C5C788
	0x0341D270 B 0x341D280
	0x0341D274 LDRSW X9, [X10]
	0x0341D278 ADD X8, X8, X9, 0x4, LSL
	0x0341D27C ADD X0, X8, 0x138
	0x0341D280 LDP X8, X1, [X0]
	0x0341D284 MOV X0, X22
	0x0341D288 BLR X8
	0x0341D28C CBNZ X23, 0x341D570
	0x0341D290 CMP W20, 0x9
	0x0341D294 B.EQ 0x341D29C
	0x0341D298 CBNZ W20, 0x341D500
	0x0341D29C CBZ X25, 0x341D578
	0x0341D2A0 LDR X0, [X25 + 0x20]
	0x0341D2A4 CBZ X0, 0x341D57C
	0x0341D2A8 MOV X1, X31
	0x0341D2AC BL 0x361B448
	0x0341D2B0 ADRP X8, 0xCDF000
	0x0341D2B4 LDR X8, [X8 + 0x8D8]
	0x0341D2B8 MOV X22, X0
	0x0341D2BC LDR X0, [X8]
	0x0341D2C0 MOVZ W1, 0x1
	0x0341D2C4 BL 0x1C16D6C
	0x0341D2C8 MOV X1, X0
	0x0341D2CC CBZ X1, 0x341D580
	0x0341D2D0 LDR W8, [X1 + 0x18]
	0x0341D2D4 CBZ W8, 0x341D584
	0x0341D2D8 MOVZ W8, 0x2F
	0x0341D2DC STRH W8, [X1 + 0x20]
	0x0341D2E0 CBZ X22, 0x341D588
	0x0341D2E4 MOV X0, X22
	0x0341D2E8 MOV X2, X31
	0x0341D2EC BL 0x322BC58
	0x0341D2F0 LDR X1, [X31 + 0x8]
	0x0341D2F4 MOV X2, X31
	0x0341D2F8 BL 0x321B938
	0x0341D2FC ADRP X8, 0xCDF000
	0x0341D300 LDR X23, [X25 + 0x20]
	0x0341D304 LDR X8, [X8 + 0x3A0]
	0x0341D308 MOV X22, X0
	0x0341D30C LDR X0, [X8]
	0x0341D310 BL 0x1C16F10
	0x0341D314 MOV X20, X0
	0x0341D318 MOV X1, X23
	0x0341D31C MOV X2, X31
	0x0341D320 BL 0x36281F8
	0x0341D324 CBZ X20, 0x341D58C
	0x0341D328 MOV X0, X20
	0x0341D32C MOV X1, X22
	0x0341D330 MOV X2, X31
	0x0341D334 BL 0x36288CC
	0x0341D338 MOV X0, X20
	0x0341D33C MOV X1, X21
	0x0341D340 MOV X2, X31
	0x0341D344 BL 0x3628980
	0x0341D348 MOV X0, X20
	0x0341D34C MOV X1, X31
	0x0341D350 BL 0x3628A38
	0x0341D354 ADRP X8, 0xCFF000
	0x0341D358 ADRP X9, 0xCD7000
	0x0341D35C LDR X8, [X8 + 0x4D8]
	0x0341D360 LDR X9, [X9 + 0x6D0]
	0x0341D364 MOV X20, X0
	0x0341D368 LDR X21, [X8]
	0x0341D36C LDR X0, [X9]
	0x0341D370 BL 0x1C16F10
	0x0341D374 ADRP X8, 0xCD7000
	0x0341D378 LDR X8, [X8 + 0x6C0]
	0x0341D37C MOV X22, X0
	0x0341D380 LDR X1, [X8]
	0x0341D384 BL 0x2AA4804
	0x0341D388 ADRP X8, 0xD11000
	0x0341D38C LDR X1, [X19 + 0x38]
	0x0341D390 LDR X8, [X8 + 0x7D8]
	0x0341D394 LDR X0, [X8]
	0x0341D398 MOV X2, X31
	0x0341D39C BL 0x321B938
	0x0341D3A0 CBZ X22, 0x341D590
	0x0341D3A4 ADRP X8, 0xD11000
	0x0341D3A8 LDR X8, [X8 + 0x7D0]
	0x0341D3AC ADRP X9, 0xCD7000
	0x0341D3B0 LDR X9, [X9 + 0x810]
	0x0341D3B4 MOV X2, X0
	0x0341D3B8 LDR X1, [X8]
	0x0341D3BC LDR X3, [X9]
	0x0341D3C0 MOV X0, X22
	0x0341D3C4 BL 0x2AA5098
	0x0341D3C8 LDR X24, [X25 + 0x10]
	0x0341D3CC CBZ X24, 0x341D594
	0x0341D3D0 ADRP X10, 0xD11000
	0x0341D3D4 LDR W23, [X25 + 0x18]
	0x0341D3D8 LDR X8, [X24]
	0x0341D3DC LDP X26, X25, [X19 + 0x40]
	0x0341D3E0 LDR X10, [X10 + 0x7B8]
	0x0341D3E4 LDRH W9, [X8 + 0x12E]
	0x0341D3E8 LDR X1, [X10]
	0x0341D3EC CBZ X9, 0x341D410
	0x0341D3F0 LDR X10, [X8 + 0xB0]
	0x0341D3F4 ADD X10, X10, 0x8
	0x0341D3F8 LDUR X11, [X10 - 0x8]
	0x0341D3FC CMP X11, X1
	0x0341D400 B.EQ 0x341D420
	0x0341D404 SUBS X9, X9, 0x1
	0x0341D408 ADD X10, X10, 0x10
	0x0341D40C B.NE 0x341D3F8
	0x0341D410 MOVZ W2, 0x3
	0x0341D414 MOV X0, X24
	0x0341D418 BL 0x1C5C788
	0x0341D41C B 0x341D430
	0x0341D420 LDR W9, [X10]
	0x0341D424 ADD W9, W9, 0x3
	0x0341D428 ADD X8, X8, W9, 0x4, SXTW
	0x0341D42C ADD X0, X8, 0x138
	0x0341D430 LDP X8, X9, [X0]
	0x0341D434 MOV X0, X24
	0x0341D438 MOV X1, X21
	0x0341D43C MOV X2, X20
	0x0341D440 MOV X3, X22
	0x0341D444 MOV X4, X31
	0x0341D448 MOV W5, W23
	0x0341D44C MOV X6, X26
	0x0341D450 MOV X7, X25
	0x0341D454 STR X9, [X31]
	0x0341D458 BLR X8
	0x0341D45C CBZ X0, 0x341D598
	0x0341D460 ADRP X8, 0xCD9000
	0x0341D464 LDR X8, [X8 + 0x1F8]
	0x0341D468 LDR X1, [X8]
	0x0341D46C BL 0x269F5D0
	0x0341D470 ADRP X8, 0xCD9000
	0x0341D474 LDR X8, [X8 + 0x1F0]
	0x0341D478 STR X0, [X31 + 0x18]
	0x0341D47C LDR X1, [X8]
	0x0341D480 ADD X0, X31, 0x18
	0x0341D484 BL 0x2677430
	0x0341D488 TBZ X0, 0x0, 0x341D4C8
	0x0341D48C ADRP X8, 0xCD9000
	0x0341D490 LDR X8, [X8 + 0x1E0]
	0x0341D494 ADD X0, X31, 0x18
	0x0341D498 LDR X1, [X8]
	0x0341D49C BL 0x2677474
	0x0341D4A0 MOVN W8, 0x1
	0x0341D4A4 STR W8, [X19], #0x8
	0x0341D4A8 LDR X0, [X27]
	0x0341D4AC LDR W8, [X0 + 0xE0]
	0x0341D4B0 CBNZ W8, 0x341D4B8
	0x0341D4B4 BL 0x1C16DFC
	0x0341D4B8 MOV X0, X19
	0x0341D4BC MOV X1, X31
	0x0341D4C0 BL 0x32C4864
	0x0341D4C4 B 0x341D500
	0x0341D4C8 STR W31, [X19]
	0x0341D4CC LDR X8, [X31 + 0x18]
	0x0341D4D0 STR X8, [X19 + 0x50]
	0x0341D4D4 LDR X0, [X27]
	0x0341D4D8 LDR W8, [X0 + 0xE0]
	0x0341D4DC CBNZ W8, 0x341D4E4
	0x0341D4E0 BL 0x1C16DFC
	0x0341D4E4 ADRP X8, 0xD11000
	0x0341D4E8 LDR X8, [X8 + 0xB80]
	0x0341D4EC ADD X0, X19, 0x8
	0x0341D4F0 LDR X3, [X8]
	0x0341D4F4 ADD X1, X31, 0x18
	0x0341D4F8 MOV X2, X19
	0x0341D4FC BL 0x2185E98
	0x0341D500 LDP X20, X19, [X31 + 0x70]
	0x0341D504 LDP X22, X21, [X31 + 0x60]
	0x0341D508 LDP X24, X23, [X31 + 0x50]
	0x0341D50C LDP X26, X25, [X31 + 0x40]
	0x0341D510 LDP X28, X27, [X31 + 0x30]
	0x0341D514 LDP X29, X30, [X31 + 0x20]
	0x0341D518 ADD X31, X31, 0x80
	0x0341D51C RET
	0x0341D520 BL 0x1C16F20
	0x0341D524 ADRP X0, 0xCDE000
	0x0341D528 LDR X0, [X0 + 0x578]
	0x0341D52C BL 0x1C16D08
	0x0341D530 BL 0x1C16F10
	0x0341D534 MOV X20, X0
	0x0341D538 ADRP X0, 0xD11000
	0x0341D53C LDR X0, [X0 + 0x808]
	0x0341D540 BL 0x1C16D08
	0x0341D544 MOV X1, X0
	0x0341D548 MOV X0, X20
	0x0341D54C MOV X2, X31
	0x0341D550 BL 0x3314A68
	0x0341D554 ADRP X0, 0xD11000
	0x0341D558 LDR X0, [X0 + 0xB90]
	0x0341D55C BL 0x1C16D08
	0x0341D560 MOV X1, X0
	0x0341D564 MOV X0, X20
	0x0341D568 BL 0x1C16DEC
	0x0341D56C BL 0x1C16F20
	0x0341D570 MOV X0, X23
	0x0341D574 BL 0x1C16F18
	0x0341D578 BL 0x1C16F20
	0x0341D57C BL 0x1C16F20
	0x0341D580 BL 0x1C16F20
	0x0341D584 BL 0x1C16F28
	0x0341D588 BL 0x1C16F20
	0x0341D58C BL 0x1C16F20
	0x0341D590 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFC2000
	014 Move W8, [X20+1545]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {100}
	020 Move X0, 0xD13000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move X0, 0xD13000
	024 Move X0, [X0+2080]
	025 Call 0x1C17CF4
	026 Move X0, 0xD13000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE1000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE1000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD9000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD9000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD9000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xD13000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0xD13000
	048 Move X0, [X0+2088]
	049 Call 0x1C17CF4
	050 Move X0, 0xD13000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDC000
	054 Move X0, [X0+3056]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDB000
	057 Move X0, [X0+480]
	058 Call 0x1C17CF4
	059 Move X0, 0xCDB000
	060 Move X0, [X0+496]
	061 Call 0x1C17CF4
	062 Move X0, 0xCDB000
	063 Move X0, [X0+504]
	064 Call 0x1C17CF4
	065 Move X0, 0xCE1000
	066 Move X0, [X0+928]
	067 Call 0x1C17CF4
	068 Move X0, 0xCDA000
	069 Move X0, [X0+2600]
	070 Call 0x1C17CF4
	071 Move X0, 0xD13000
	072 Move X0, [X0+2112]
	073 Call 0x1C17CF4
	074 Move X0, 0xD01000
	075 Move X0, [X0+1240]
	076 Call 0x1C17CF4
	077 Move X0, 0xD13000
	078 Move X0, [X0+2120]
	079 Call 0x1C17CF4
	080 Move X0, 0xCE1000
	081 Move X0, [X0+2440]
	082 Call 0x1C17CF4
	083 Move X0, 0xCE1000
	084 Move X0, [X0+1824]
	085 Call 0x1C17CF4
	086 Move X0, 0xD13000
	087 Move X0, [X0+2000]
	088 Call 0x1C17CF4
	089 Move X0, 0xD13000
	090 Move X0, [X0+2128]
	091 Call 0x1C17CF4
	092 Move X0, 0xD13000
	093 Move X0, [X0+2904]
	094 Call 0x1C17CF4
	095 Move X0, 0xCD8000
	096 Move X0, [X0+2440]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X20+1545], W8
	100 Move [X31+24], X31
	101 Move X28, 0xD13000
	102 Move W8, [X19]
	103 Move X28, [X28+800]
	104 Compare W8, 0
	105 JumpIfEqual {318}
	106 Move X8, [X19+32]
	107 Compare X8, 0
	108 JumpIfEqual {410}
	109 Move X8, 0xD13000
	110 Move X9, 0xCD8000
	111 Move X8, [X8+2904]
	112 Move X9, [X9+2440]
	113 Move X0, X19
	114 Move X25, [X19+56]
	115 Move X21, [X8]
	116 Move X20, [X9]
	117 Add X0, X0, 40
	118 Move W8, [X0]
	119 Compare W8, 0
	120 JumpIfEqual {140}
	121 Move X8, 0xD13000
	122 Move X8, [X8+2096]
	123 Move X1, [X8]
	124 Call Nullable`1<Boolean>.ToString, X0
	125 Compare X0, 0
	126 JumpIfEqual {437}
	127 Move X1, X31
	128 Call String.ToLower, X0
	129 Move X8, 0xD13000
	130 Move X8, [X8+2112]
	131 Move X9, 0xCE1000
	132 Move X9, [X9+1824]
	133 Move X2, X0
	134 Move X1, [X8]
	135 Move X3, [X9]
	136 Move X0, X20
	137 Move X4, X31
	138 Call String.Concat, X0, X1, X2, X3
	139 Move X20, X0
	140 Move X22, [X19+48]
	141 Compare X22, 0
	142 JumpIfEqual {164}
	143 Move X8, 0xCD9000
	144 Move X8, [X8+2600]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X22
	151 Move X1, X31
	152 Call Uri.EscapeDataString, X0
	153 Move X8, 0xD12000
	154 Move X8, [X8+2120]
	155 Move X9, 0xCE0000
	156 Move X9, [X9+1824]
	157 Move X2, X0
	158 Move X1, [X8]
	159 Move X3, [X9]
	160 Move X0, X20
	161 Move X4, X31
	162 Call String.Concat, X0, X1, X2, X3
	163 Move X20, X0
	164 Compare X25, 0
	165 JumpIfEqual {428}
	166 Move X0, [X25+32]
	167 Compare X0, 0
	168 JumpIfEqual {429}
	169 Move X1, X31
	170 Call Uri.get_AbsolutePath, X0
	171 Move X8, 0xCE0000
	172 Move X8, [X8+2264]
	173 Move X22, X0
	174 Move X0, [X8]
	175 Move W1, 1
	176 Call 0x1C17D6C
	177 Move X1, X0
	178 Compare X1, 0
	179 JumpIfEqual {430}
	180 Move W8, [X1+24]
	181 Compare W8, 0
	182 JumpIfEqual {431}
	183 Move W8, 47
	184 NotImplemented "Instruction STRH not yet implemented."
	185 Compare X22, 0
	186 JumpIfEqual {432}
	187 Move X0, X22
	188 Move X2, X31
	189 Call String.TrimEnd, X0, X1
	190 Move X1, X21
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Move X8, 0xCE0000
	194 Move X8, [X8+928]
	195 Move X22, X0
	196 Move X23, [X25+32]
	197 Move X0, [X8]
	198 Call 0x1C17F10
	199 Move X21, X0
	200 Move X1, X23
	201 Move X2, X31
	202 Call UriBuilder..ctor, X0, X1
	203 Compare X21, 0
	204 JumpIfEqual {433}
	205 Move X0, X21
	206 Move X1, X22
	207 Move X2, X31
	208 Call UriBuilder.set_Path, X0, X1
	209 Move X0, X21
	210 Move X1, X20
	211 Move X2, X31
	212 Call UriBuilder.set_Query, X0, X1
	213 Move X0, X21
	214 Move X1, X31
	215 Call UriBuilder.get_Uri, X0
	216 Move X8, 0xD00000
	217 Move X9, 0xCD8000
	218 Move X8, [X8+1240]
	219 Move X9, [X9+1744]
	220 Move X20, X0
	221 Move X21, [X8]
	222 Move X0, [X9]
	223 Call 0x1C17F10
	224 Move X8, 0xCD8000
	225 Move X8, [X8+1728]
	226 Move X22, X0
	227 Move X1, [X8]
	228 Call Dictionary`2<Object, Object>..ctor, X0
	229 Move X0, [X19+64]
	230 Move X1, X31
	231 Call String.IsNullOrEmpty, X0
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {282}
	236 Move X0, X31
	237 Call Encoding.get_UTF8
	238 Move X8, 0xCE0000
	239 Move X23, X0
	240 Move X0, [X19+64]
	241 Move X2, [X19+72]
	242 Move X8, [X8+2440]
	243 Move X1, [X8]
	244 Move X3, X31
	245 Call String.Concat, X0, X1, X2
	246 Move X1, X0
	247 Compare X23, 0
	248 JumpIfEqual {438}
	249 Move X8, [X23]
	250 Move X9, [X8+616]
	251 Move X2, [X8+624]
	252 Move X0, X23
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Move X8, 0xCE0000
	255 Move X8, [X8+2536]
	256 Move X23, X0
	257 Move X0, [X8]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X0, X23
	263 Move X1, X31
	264 Call Convert.ToBase64String, X0
	265 Move X1, X0
	266 Move X8, 0xD12000
	267 Move X8, [X8+2128]
	268 Move X0, [X8]
	269 Move X2, X31
	270 Call String.Concat, X0, X1
	271 Compare X22, 0
	272 JumpIfEqual {439}
	273 Move X8, 0xD12000
	274 Move X8, [X8+2000]
	275 Move X9, 0xCD8000
	276 Move X9, [X9+2064]
	277 Move X2, X0
	278 Move X1, [X8]
	279 Move X3, [X9]
	280 Move X0, X22
	281 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	282 Move X0, [X19+32]
	283 Move X1, X31
	284 Call JsonWriter.ToJson, X0
	285 Move X23, X0
	286 Move X0, X31
	287 Call Encoding.get_UTF8
	288 Compare X0, 0
	289 JumpIfEqual {434}
	290 Move X8, [X0]
	291 Move X9, [X8+616]
	292 Move X2, [X8+624]
	293 Move X1, X23
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X24, [X25+16]
	296 Compare X24, 0
	297 JumpIfEqual {435}
	298 Move X10, 0xD12000
	299 Move X10, [X10+1976]
	300 Move X8, [X24]
	301 Move W26, [X25+24]
	302 Move X27, [X19+80]
	303 Move X25, [X19+88]
	304 Move X1, [X10]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Move X23, X0
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move W2, 3
	316 Move X0, X24
	317 Call 0x1C5D788
	318 Move X8, [X19+96]
	319 Move TEMP, 0
	320 Not TEMP
	321 Move W9, TEMP
	322 Move [X31+24], X8
	323 Move [X19+96], X31
	324 Move [X19], W9
	325 Move W9, [X10]
	326 Add W9, W9, 3
	327 Add X8, X8, W9
	328 Add X0, X8, 312
	329 Move X8, [X0]
	330 Move X9, [X0+8]
	331 Move X0, X24
	332 Move X1, X21
	333 Move X2, X20
	334 Move X3, X22
	335 Move X4, X23
	336 Move W5, W26
	337 Move X6, X27
	338 Move X7, X25
	339 Move [X31], X9
	340 NotImplemented "Instruction BLR not yet implemented."
	341 Compare X0, 0
	342 JumpIfEqual {436}
	343 Move X8, 0xCDA000
	344 Move X8, [X8+504]
	345 Move X1, [X8]
	346 Call Task`1<Object>.GetAwaiter, X0
	347 Move X8, 0xCDA000
	348 Move X8, [X8+496]
	349 Move [X31+24], X0
	350 Move X1, [X8]
	351 Add X0, X31, 24
	352 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {382}
	357 Move X8, 0xCDA000
	358 Move X8, [X8+480]
	359 Add X0, X31, 24
	360 Move X1, [X8]
	361 Call TaskAwaiter`1<Object>.GetResult, X0
	362 Move X8, 0xD12000
	363 Move X8, [X8+2088]
	364 Move X1, [X8]
	365 Call JsonParser.FromJson, X0
	366 Move TEMP, 1
	367 Not TEMP
	368 Move W8, TEMP
	369 Move [X19+8], W8
	370 Move X20, X0
	371 Move X0, [X28]
	372 Move X21, 0xD12000
	373 Move W8, [X0+224]
	374 Move X21, [X21+2080]
	375 Compare W8, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1C17DFC
	378 Move X2, [X21]
	379 Move X0, X19
	380 Move X1, X20
	381 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	382 Move [X19], W31
	383 Move X8, [X31+24]
	384 Move [X19+96], X8
	385 Move X0, [X28]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Move X8, 0xD12000
	391 Move X8, [X8+2896]
	392 Add X0, X19, 8
	393 Move X3, [X8]
	394 Add X1, X31, 24
	395 Move X2, X19
	396 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	397 Move X20, [X31+96]
	398 Move X19, [X31+104]
	399 Move X22, [X31+80]
	400 Move X21, [X31+88]
	401 Move X24, [X31+64]
	402 Move X23, [X31+72]
	403 Move X26, [X31+48]
	404 Move X25, [X31+56]
	405 Move X28, [X31+32]
	406 Move X27, [X31+40]
	407 Move X30, [X31+16]
	408 Add X31, X31, 112
	409 Return 
	410 Move X0, 0xCDF000
	411 Move X0, [X0+1400]
	412 Call 0x1C17D08
	413 Call 0x1C17F10
	414 Move X20, X0
	415 Move X0, 0xD12000
	416 Move X0, [X0+2136]
	417 Call 0x1C17D08
	418 Move X1, X0
	419 Move X0, X20
	420 Move X2, X31
	421 Call ArgumentException..ctor, X0, X1
	422 Move X0, 0xD12000
	423 Move X0, [X0+2912]
	424 Call 0x1C17D08
	425 Move X1, X0
	426 Move X0, X20
	427 Call 0x1C17DEC
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F20
	431 Call 0x1C17F28
	432 Call 0x1C17F20
	433 Call 0x1C17F20
	434 Call 0x1C17F20
	435 Call 0x1C17F20
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Move X20, X0
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X0, X20
	443 Call 0x3EB2AD0
	444 Move X20, X0
	445 Move X0, 0xCD7000
	446 Move X0, [X0+2000]
	447 Call 0x1C17D08
	448 Move X8, [X20]
	449 Move X1, [X8]
	450 Call 0x1C18270
	451 Move TEMP, X0
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfNotEqual {475}
	455 Move X20, [X20]
	456 Call 0x3EB2AE0
	457 Move TEMP, 1
	458 Not TEMP
	459 Move W8, TEMP
	460 Move [X19+8], W8
	461 Move X0, 0xD12000
	462 Move X0, [X0+800]
	463 Call 0x1C17D08
	464 Move W8, [X0+224]
	465 Compare W8, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Move X0, 0xD12000
	469 Move X0, [X0+2152]
	470 Call 0x1C17D08
	471 Move X2, X0
	472 Move X0, X19
	473 Move X1, X20
	474 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	475 Move W0, 8
	476 Call 0x3EB2AF0
	477 Move X8, [X20]
	478 Move [X0], X8
	479 Move X1, 0xA98000
	480 Add X1, X1, 3672
	481 Move X2, X31
	482 Call 0x3EB2B00
	483 Move X20, X0
	484 Call 0x3EB2AE0
	485 Move X0, X20
	486 Call 0x1D2D690
	487 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0341D594 BL 0x1C16F20
	0x0341D598 BL 0x1C16F20
	0x0341D59C BL 0x1C16F20
	0x0341D5A0 B 0x341D60C
	0x0341D5A4 B 0x341D60C
	0x0341D5A8 B 0x341D60C
	0x0341D5AC B 0x341D60C
	0x0341D5B0 B 0x341D60C
	0x0341D5B4 B 0x341D60C
	0x0341D5B8 B 0x341D60C
	0x0341D5BC B 0x341D60C
	0x0341D5C0 B 0x341D60C
	0x0341D5C4 B 0x341D60C
	0x0341D5C8 B 0x341D60C
	0x0341D5CC B 0x341D60C
	0x0341D5D0 B 0x341D60C
	0x0341D5D4 B 0x341D60C
	0x0341D5D8 B 0x341D60C
	0x0341D5DC B 0x341D60C
	0x0341D5E0 B 0x341D60C
	0x0341D5E4 B 0x341D60C
	0x0341D5E8 B 0x341D60C
	0x0341D5EC B 0x341D60C
	0x0341D5F0 B 0x341D60C
	0x0341D5F4 B 0x341D60C
	0x0341D5F8 B 0x341D60C
	0x0341D5FC B 0x341D60C
	0x0341D600 B 0x341D60C
	0x0341D604 B 0x341D60C
	0x0341D608 B 0x341D60C
	0x0341D60C MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFC1000
	007 Move X21, 0xD12000
	008 Move W8, [X22+1546]
	009 Move X21, [X21+800]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD12000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0xD12000
	020 Move X0, [X0+800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1546], W8
	024 Move X0, [X21]
	025 Move X21, 0xD12000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2160]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

