Type: Nakama.Client/<LinkEmailAsync>d__76

Method: System.Void MoveNext()

Disassembly:
	0x0345A964 CBZ X8, 0x345AB74
	0x0345A968 LDR X1, [X8 + 0x18]
	0x0345A96C LDR X3, [X19 + 0x68]
	0x0345A970 LDR X4, [X8 + 0x50]
	0x0345A974 MOV X0, X20
	0x0345A978 MOV X2, X31
	0x0345A97C MOV X5, X31
	0x0345A980 BL 0x34440A8
	0x0345A984 CBZ X0, 0x345AB78
	0x0345A988 ADRP X8, 0xC9A000
	0x0345A98C LDR X8, [X8 + 0x840]
	0x0345A990 LDR X1, [X8]
	0x0345A994 BL 0x269F5D0
	0x0345A998 ADRP X8, 0xC9A000
	0x0345A99C LDR X8, [X8 + 0x838]
	0x0345A9A0 STR X0, [X31 + 0x20]
	0x0345A9A4 LDR X1, [X8]
	0x0345A9A8 ADD X0, X31, 0x20
	0x0345A9AC BL 0x2677430
	0x0345A9B0 TBNZ X0, 0x0, 0x345A798
	0x0345A9B4 STR W31, [X19]
	0x0345A9B8 LDR X8, [X31 + 0x20]
	0x0345A9BC STR X8, [X19 + 0x78]
	0x0345A9C0 LDR X0, [X25]
	0x0345A9C4 LDR W8, [X0 + 0xE0]
	0x0345A9C8 CBNZ W8, 0x345A9D0
	0x0345A9CC BL 0x1C16DFC
	0x0345A9D0 ADRP X8, 0xCD5000
	0x0345A9D4 LDR X8, [X8 + 0xF38]
	0x0345A9D8 ADD X0, X19, 0x8
	0x0345A9DC LDR X3, [X8]
	0x0345A9E0 ADD X1, X31, 0x20
	0x0345A9E4 MOV X2, X19
	0x0345A9E8 BL 0x2188AAC
	0x0345A9EC B 0x345AB34
	0x0345A9F0 CBZ X20, 0x345AB58
	0x0345A9F4 ADRP X8, 0xCA1000
	0x0345A9F8 LDR X8, [X8 + 0x818]
	0x0345A9FC LDR X21, [X20 + 0x58]
	0x0345AA00 LDR X23, [X19 + 0x70]
	0x0345AA04 LDR X0, [X8]
	0x0345AA08 BL 0x1C16F10
	0x0345AA0C ADRP X8, 0xCD5000
	0x0345AA10 LDR X8, [X8 + 0xF48]
	0x0345AA14 MOV X22, X0
	0x0345AA18 LDR X2, [X8]
	0x0345AA1C MOV X1, X23
	0x0345AA20 MOV X3, X31
	0x0345AA24 BL 0x2D27AA8
	0x0345AA28 LDR X8, [X19 + 0x70]
	0x0345AA2C CBZ X8, 0x345AB4C
	0x0345AA30 ADRP X9, 0xCD5000
	0x0345AA34 LDR X23, [X19 + 0x68]
	0x0345AA38 LDR X9, [X9 + 0x7C8]
	0x0345AA3C CBNZ X23, 0x345AA44
	0x0345AA40 LDR X23, [X20 + 0x18]
	0x0345AA44 LDR X20, [X8 + 0x18]
	0x0345AA48 LDR X1, [X8 + 0x50]
	0x0345AA4C LDR X2, [X9]
	0x0345AA50 STP X31, X31, [X31 + 0x8]
	0x0345AA54 ADD X0, X31, 0x8
	0x0345AA58 BL 0x242E368
	0x0345AA5C ADRP X8, 0xCD5000
	0x0345AA60 LDR X8, [X8 + 0x7D0]
	0x0345AA64 LDR X0, [X8]
	0x0345AA68 BL 0x1C16F10
	0x0345AA6C LDP X3, X4, [X31 + 0x8]
	0x0345AA70 MOV X24, X0
	0x0345AA74 MOV X1, X20
	0x0345AA78 MOV X2, X23
	0x0345AA7C MOV X5, X31
	0x0345AA80 BL 0x3465404
	0x0345AA84 CBZ X21, 0x345AB50
	0x0345AA88 MOV X0, X21
	0x0345AA8C MOV X1, X22
	0x0345AA90 MOV X2, X24
	0x0345AA94 MOV X3, X31
	0x0345AA98 BL 0x3465B68
	0x0345AA9C CBZ X0, 0x345AB54
	0x0345AAA0 MOV X1, X31
	0x0345AAA4 BL 0x33ED394
	0x0345AAA8 STR X0, [X31 + 0x18]
	0x0345AAAC ADD X0, X31, 0x18
	0x0345AAB0 MOV X1, X31
	0x0345AAB4 BL 0x32C3A80
	0x0345AAB8 TBZ X0, 0x0, 0x345AAF8
	0x0345AABC ADD X0, X31, 0x18
	0x0345AAC0 MOV X1, X31
	0x0345AAC4 BL 0x32C3B4C
	0x0345AAC8 MOVN W8, 0x1
	0x0345AACC STR W8, [X19]
	0x0345AAD0 STR X31, [X19 + 0x70]
	0x0345AAD4 LDR X0, [X25]
	0x0345AAD8 ADD X19, X19, 0x8
	0x0345AADC LDR W8, [X0 + 0xE0]
	0x0345AAE0 CBNZ W8, 0x345AAE8
	0x0345AAE4 BL 0x1C16DFC
	0x0345AAE8 MOV X0, X19
	0x0345AAEC MOV X1, X31
	0x0345AAF0 BL 0x32C4864
	0x0345AAF4 B 0x345AB34
	0x0345AAF8 MOVZ W8, 0x1
	0x0345AAFC STR W8, [X19]
	0x0345AB00 LDR X8, [X31 + 0x18]
	0x0345AB04 STR X8, [X19 + 0x80]
	0x0345AB08 LDR X0, [X25]
	0x0345AB0C LDR W8, [X0 + 0xE0]
	0x0345AB10 CBNZ W8, 0x345AB18
	0x0345AB14 BL 0x1C16DFC
	0x0345AB18 ADRP X8, 0xCD5000
	0x0345AB1C LDR X8, [X8 + 0xF40]
	0x0345AB20 ADD X0, X19, 0x8
	0x0345AB24 LDR X3, [X8]
	0x0345AB28 ADD X1, X31, 0x18
	0x0345AB2C MOV X2, X19
	0x0345AB30 BL 0x218A170
	0x0345AB34 LDP X20, X19, [X31 + 0x60]
	0x0345AB38 LDP X22, X21, [X31 + 0x50]
	0x0345AB3C LDP X24, X23, [X31 + 0x40]
	0x0345AB40 LDP X30, X25, [X31 + 0x30]
	0x0345AB44 ADD X31, X31, 0x70
	0x0345AB48 RET
	0x0345AB4C BL 0x1C16F20
	0x0345AB50 BL 0x1C16F20
	0x0345AB54 BL 0x1C16F20
	0x0345AB58 BL 0x1C16F20
	0x0345AB5C BL 0x1C16F20
	0x0345AB60 BL 0x1C16F20
	0x0345AB64 BL 0x1C16F20
	0x0345AB68 BL 0x1C16F20
	0x0345AB6C BL 0x1C16F20
	0x0345AB70 BL 0x1C16F20
	0x0345AB74 BL 0x1C16F20
	0x0345AB78 BL 0x1C16F20
	0x0345AB7C B 0x345ABF0
	0x0345AB80 B 0x345ABF0
	0x0345AB84 B 0x345ABF0
	0x0345AB88 B 0x345ABF0
	0x0345AB8C B 0x345ABF0
	0x0345AB90 B 0x345ABF0
	0x0345AB94 B 0x345ABF0
	0x0345AB98 B 0x345ABF0
	0x0345AB9C B 0x345ABF0
	0x0345ABA0 B 0x345ABF0
	0x0345ABA4 B 0x345ABF0
	0x0345ABA8 B 0x345ABF0
	0x0345ABAC B 0x345ABF0
	0x0345ABB0 B 0x345ABF0
	0x0345ABB4 B 0x345ABF0
	0x0345ABB8 B 0x345ABF0
	0x0345ABBC B 0x345ABF0
	0x0345ABC0 B 0x345ABF0
	0x0345ABC4 B 0x345ABF0
	0x0345ABC8 B 0x345ABF0
	0x0345ABCC B 0x345ABF0
	0x0345ABD0 B 0x345ABF0
	0x0345ABD4 B 0x345ABF0
	0x0345ABD8 B 0x345ABF0
	0x0345ABDC B 0x345ABF0
	0x0345ABE0 B 0x345ABF0
	0x0345ABE4 B 0x345ABF0
	0x0345ABE8 B 0x345ABF0
	0x0345ABEC B 0x345ABF0
	0x0345ABF0 MOV X20, X0
	0x0345ABF4 CMP W1, 0x1
	0x0345ABF8 B.NE 0x345AC8C
	0x0345ABFC MOV X0, X20
	0x0345AC00 BL 0x3EB1AD0
	0x0345AC04 MOV X20, X0
	0x0345AC08 ADRP X0, 0xC99000
	0x0345AC0C LDR X0, [X0 + 0x7D0]
	0x0345AC10 BL 0x1C16D08
	0x0345AC14 LDR X8, [X20]
	0x0345AC18 LDR X1, [X8]
	0x0345AC1C BL 0x1C17270
	0x0345AC20 TBZ X0, 0x0, 0x345AC64
	0x0345AC24 LDR X20, [X20]
	0x0345AC28 BL 0x3EB1AE0
	0x0345AC2C MOVN W8, 0x1
	0x0345AC30 STR X31, [X19 + 0x70]
	0x0345AC34 STR W8, [X19], #0x8
	0x0345AC38 ADRP X0, 0xC9C000
	0x0345AC3C LDR X0, [X0 + 0x280]
	0x0345AC40 BL 0x1C16D08
	0x0345AC44 LDR W8, [X0 + 0xE0]
	0x0345AC48 CBNZ W8, 0x345AC50
	0x0345AC4C BL 0x1C16DFC
	0x0345AC50 MOV X0, X19
	0x0345AC54 MOV X1, X20
	0x0345AC58 MOV X2, X31
	0x0345AC5C BL 0x32C4908
	0x0345AC60 B 0x345AB34
	0x0345AC64 MOVZ W0, 0x8
	0x0345AC68 BL 0x3EB1AF0
	0x0345AC6C LDR X8, [X20]
	0x0345AC70 STR X8, [X0]
	0x0345AC74 ADRP X1, 0xA5A000
	0x0345AC78 ADD X1, X1, 0xE58
	0x0345AC7C MOV X2, X31
	0x0345AC80 BL 0x3EB1B00
	0x0345AC84 MOV X20, X0
	0x0345AC88 BL 0x3EB1AE0
	0x0345AC8C MOV X0, X20
	0x0345AC90 BL 0x1D2C690
	0x0345AC94 BL 0x1990590
	0x0345AC98 STR X30, [X31 - 0x30]!
	0x0345AC9C STP X22, X21, [X31 + 0x10]
	0x0345ACA0 STP X20, X19, [X31 + 0x20]
	0x0345ACA4 ADRP X21, 0xF83000
	0x0345ACA8 ADRP X22, 0xC9C000
	0x0345ACAC LDRB W8, [X21 + 0x79C]
	0x0345ACB0 LDR X22, [X22 + 0x280]
	0x0345ACB4 MOV X19, X1
	0x0345ACB8 MOV X20, X0
	0x0345ACBC TBNZ X8, 0x0, 0x345ACD4
	0x0345ACC0 ADRP X0, 0xC9C000
	0x0345ACC4 LDR X0, [X0 + 0x280]
	0x0345ACC8 BL 0x1C16CF4
	0x0345ACCC MOVZ W8, 0x1
	0x0345ACD0 STRB W8, [X21 + 0x79C]
	0x0345ACD4 LDR X0, [X22]
	0x0345ACD8 LDR W8, [X0 + 0xE0]
	0x0345ACDC CBNZ W8, 0x345ACE4
	0x0345ACE0 BL 0x1C16DFC
	0x0345ACE4 ADD X0, X20, 0x8
	0x0345ACE8 MOV X1, X19
	0x0345ACEC LDP X20, X19, [X31 + 0x20]
	0x0345ACF0 LDP X22, X21, [X31 + 0x10]
	0x0345ACF4 MOV X2, X31
	0x0345ACF8 LDR X30, [X31], #0x30
	0x0345ACFC B 0x32C477C
	0x0345AD00 SUB X31, X31, 0x70
	0x0345AD04 STP X30, X25, [X31 + 0x30]
	0x0345AD08 STP X24, X23, [X31 + 0x40]
	0x0345AD0C STP X22, X21, [X31 + 0x50]
	0x0345AD10 STP X20, X19, [X31 + 0x60]
	0x0345AD14 ADRP X20, 0xF83000
	0x0345AD18 LDRB W8, [X20 + 0x79D]
	0x0345AD1C MOV X19, X0
	0x0345AD20 TBNZ X8, 0x0, 0x345ADD4
	0x0345AD24 ADRP X0, 0xCD5000
	0x0345AD28 LDR X0, [X0 + 0xF58]
	0x0345AD2C BL 0x1C16CF4
	0x0345AD30 ADRP X0, 0xCD5000
	0x0345AD34 LDR X0, [X0 + 0xF60]
	0x0345AD38 BL 0x1C16CF4
	0x0345AD3C ADRP X0, 0xC9C000
	0x0345AD40 LDR X0, [X0 + 0x280]
	0x0345AD44 BL 0x1C16CF4
	0x0345AD48 ADRP X0, 0xC9B000
	0x0345AD4C LDR X0, [X0 + 0xA10]
	0x0345AD50 BL 0x1C16CF4
	0x0345AD54 ADRP X0, 0xC9A000
	0x0345AD58 LDR X0, [X0 + 0x9F0]
	0x0345AD5C BL 0x1C16CF4
	0x0345AD60 ADRP X0, 0xCA1000
	0x0345AD64 LDR X0, [X0 + 0x818]
	0x0345AD68 BL 0x1C16CF4
	0x0345AD6C ADRP X0, 0xC9A000
	0x0345AD70 LDR X0, [X0 + 0x818]
	0x0345AD74 BL 0x1C16CF4
	0x0345AD78 ADRP X0, 0xCD5000
	0x0345AD7C LDR X0, [X0 + 0x7C8]
	0x0345AD80 BL 0x1C16CF4
	0x0345AD84 ADRP X0, 0xCD5000
	0x0345AD88 LDR X0, [X0 + 0x7D0]
	0x0345AD8C BL 0x1C16CF4
	0x0345AD90 ADRP X0, 0xC9A000
	0x0345AD94 LDR X0, [X0 + 0x830]
	0x0345AD98 BL 0x1C16CF4
	0x0345AD9C ADRP X0, 0xC9A000
	0x0345ADA0 LDR X0, [X0 + 0x838]
	0x0345ADA4 BL 0x1C16CF4
	0x0345ADA8 ADRP X0, 0xC9A000
	0x0345ADAC LDR X0, [X0 + 0x840]
	0x0345ADB0 BL 0x1C16CF4
	0x0345ADB4 ADRP X0, 0xCD5000
	0x0345ADB8 LDR X0, [X0 + 0xF68]
	0x0345ADBC BL 0x1C16CF4
	0x0345ADC0 ADRP X0, 0xCD5000
	0x0345ADC4 LDR X0, [X0 + 0xF70]
	0x0345ADC8 BL 0x1C16CF4
	0x0345ADCC MOVZ W8, 0x1
	0x0345ADD0 STRB W8, [X20 + 0x79D]
	0x0345ADD4 STP X31, X31, [X31 + 0x20]
	0x0345ADD8 STR X31, [X31 + 0x18]
	0x0345ADDC ADRP X25, 0xC9C000
	0x0345ADE0 LDR W8, [X19]
	0x0345ADE4 LDR X20, [X19 + 0x20]
	0x0345ADE8 LDR X25, [X25 + 0x280]
	0x0345ADEC CBZ W8, 0x345AE10
	0x0345ADF0 CMP W8, 0x1
	0x0345ADF4 B.NE 0x345AE3C
	0x0345ADF8 LDR X8, [X19 + 0x58]
	0x0345ADFC MOVN W9, 0x0
	0x0345AE00 STR X8, [X31 + 0x18]
	0x0345AE04 STR X31, [X19 + 0x58]
	0x0345AE08 STR W9, [X19]
	0x0345AE0C B 0x345B138
	0x0345AE10 LDR X8, [X19 + 0x50]
	0x0345AE14 MOVN W9, 0x0
	0x0345AE18 STR X8, [X31 + 0x20]
	0x0345AE1C STR X31, [X19 + 0x50]
	0x0345AE20 STR W9, [X19]
	0x0345AE24 ADRP X8, 0xC9A000
	0x0345AE28 LDR X8, [X8 + 0x830]
	0x0345AE2C ADD X0, X31, 0x20
	0x0345AE30 LDR X1, [X8]
	0x0345AE34 BL 0x2677474
	0x0345AE38 B 0x345B06C
	0x0345AE3C ADRP X8, 0xCD5000
	0x0345AE40 LDR X8, [X8 + 0xF70]
	0x0345AE44 LDR X0, [X8]
	0x0345AE48 BL 0x1C16F10
	0x0345AE4C MOV X21, X0
	0x0345AE50 MOV X1, X31
	0x0345AE54 BL 0x344A4FC
	0x0345AE58 STR X21, [X19 + 0x48]
	0x0345AE5C CBZ X21, 0x345B1D8
	0x0345AE60 LDR X8, [X19 + 0x20]
	0x0345AE64 STR X8, [X21 + 0x10]
	0x0345AE68 LDR X8, [X19 + 0x28]
	0x0345AE6C STR X8, [X21 + 0x18]
	0x0345AE70 LDR X8, [X19 + 0x30]
	0x0345AE74 STR X8, [X21 + 0x20]
	0x0345AE78 LDR X8, [X19 + 0x38]
	0x0345AE7C STR X8, [X21 + 0x28]
	0x0345AE80 CBZ X20, 0x345B1DC
	0x0345AE84 LDRB W8, [X20 + 0x10]
	0x0345AE88 CBZ W8, 0x345B070
	0x0345AE8C LDR X8, [X19 + 0x48]
	0x0345AE90 CBZ X8, 0x345B1E0
	0x0345AE94 LDR X21, [X8 + 0x18]
	0x0345AE98 CBZ X21, 0x345B1E4
	0x0345AE9C ADRP X23, 0xC9A000
	0x0345AEA0 LDR X8, [X21]
	0x0345AEA4 LDR X23, [X23 + 0x818]
	0x0345AEA8 LDRH W9, [X8 + 0x12E]
	0x0345AEAC LDR X1, [X23]
	0x0345AEB0 CBZ X9, 0x345AED4
	0x0345AEB4 LDR X10, [X8 + 0xB0]
	0x0345AEB8 ADD X10, X10, 0x8
	0x0345AEBC LDUR X11, [X10 - 0x8]
	0x0345AEC0 CMP X11, X1
	0x0345AEC4 B.EQ 0x345AEE4
	0x0345AEC8 SUBS X9, X9, 0x1
	0x0345AECC ADD X10, X10, 0x10
	0x0345AED0 B.NE 0x345AEBC
	0x0345AED4 MOVZ W2, 0x7
	0x0345AED8 MOV X0, X21
	0x0345AEDC BL 0x1C5C788
	0x0345AEE0 B 0x345AEF4
	0x0345AEE4 LDR W9, [X10]
	0x0345AEE8 ADD W9, W9, 0x7
	0x0345AEEC ADD X8, X8, W9, 0x4, SXTW
	0x0345AEF0 ADD X0, X8, 0x138
	0x0345AEF4 LDP X8, X1, [X0]
	0x0345AEF8 MOV X0, X21
	0x0345AEFC BLR X8
	0x0345AF00 MOV X1, X31
	0x0345AF04 BL 0x32277A8
	0x0345AF08 TBNZ X0, 0x0, 0x345B06C
	0x0345AF0C LDR X8, [X19 + 0x48]
	0x0345AF10 CBZ X8, 0x345B1E8
	0x0345AF14 ADRP X9, 0xC9A000
	0x0345AF18 LDR X9, [X9 + 0x9F0]
	0x0345AF1C LDR X21, [X8 + 0x18]
	0x0345AF20 LDR X0, [X9]
	0x0345AF24 LDR W9, [X0 + 0xE0]
	0x0345AF28 CBNZ W9, 0x345AF30
	0x0345AF2C BL 0x1C16DFC
	0x0345AF30 MOV X0, X31
	0x0345AF34 BL 0x33616A4
	0x0345AF38 ADRP X22, 0xC9B000
	0x0345AF3C LDR X22, [X22 + 0xA10]
	0x0345AF40 MOV X8, X0
	0x0345AF44 STR X8, [X31 + 0x28]
	0x0345AF48 LDR X0, [X22]
	0x0345AF4C LDR W8, [X0 + 0xE0]
	0x0345AF50 CBNZ W8, 0x345AF5C
	0x0345AF54 BL 0x1C16DFC
	0x0345AF58 LDR X0, [X22]
	0x0345AF5C LDR X8, [X0 + 0xB8]
	0x0345AF60 LDR X1, [X8]
	0x0345AF64 ADD X0, X31, 0x28
	0x0345AF68 MOV X2, X31
	0x0345AF6C BL 0x335FC68
	0x0345AF70 CBZ X21, 0x345B1EC
	0x0345AF74 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF84000
	011 Move W8, [X20+1943]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD6000
	018 Move X0, [X0+3832]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD6000
	021 Move X0, [X0+3840]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9D000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9C000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9B000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA2000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9B000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD6000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD6000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9B000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9B000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9B000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD6000
	054 Move X0, [X0+3848]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD6000
	057 Move X0, [X0+3856]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1943], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9D000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xC9B000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD6000
	091 Move X8, [X8+3856]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass76_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move V0, [X19+3]
	105 Move [X21+2], V0
	106 Move X8, [X19+64]
	107 Move [X21+48], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+80]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xC9B000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+80]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xC9B000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC9C000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+80]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+72]
	212 Move X4, [X8+48]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xC9B000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC9B000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+88], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCD6000
	242 Move X8, [X8+3832]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCA2000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+80]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCD6000
	257 Move X8, [X8+3848]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+80]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCD6000
	267 Move X23, [X19+72]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+48]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCD6000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+80], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+96], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCD6000
	336 Move X8, [X8+3840]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xC9A000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+80], X31
	385 Move [X19+8], W8
	386 Move X0, 0xC9D000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA5B000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345AF78 LDR X1, [X23]
	0x0345AF7C MOV X22, X0
	0x0345AF80 LDRH W9, [X8 + 0x12E]
	0x0345AF84 CBZ X9, 0x345AFA8
	0x0345AF88 LDR X10, [X8 + 0xB0]
	0x0345AF8C ADD X10, X10, 0x8
	0x0345AF90 LDUR X11, [X10 - 0x8]
	0x0345AF94 CMP X11, X1
	0x0345AF98 B.EQ 0x345AFB8
	0x0345AF9C SUBS X9, X9, 0x1
	0x0345AFA0 ADD X10, X10, 0x10
	0x0345AFA4 B.NE 0x345AF90
	0x0345AFA8 MOVZ W2, 0xB
	0x0345AFAC MOV X0, X21
	0x0345AFB0 BL 0x1C5C788
	0x0345AFB4 B 0x345AFC8
	0x0345AFB8 LDR W9, [X10]
	0x0345AFBC ADD W9, W9, 0xB
	0x0345AFC0 ADD X8, X8, W9, 0x4, SXTW
	0x0345AFC4 ADD X0, X8, 0x138
	0x0345AFC8 LDP X8, X2, [X0]
	0x0345AFCC MOV X0, X21
	0x0345AFD0 MOV X1, X22
	0x0345AFD4 BLR X8
	0x0345AFD8 TBZ X0, 0x0, 0x345B06C
	0x0345AFDC LDR X8, [X19 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF84000
	007 Move X22, 0xC9D000
	008 Move W8, [X21+1944]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9D000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1944], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

