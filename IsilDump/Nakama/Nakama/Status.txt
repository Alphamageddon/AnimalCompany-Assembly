Type: Nakama.Status

Method: System.Collections.Generic.IEnumerable`1<Nakama.IUserPresence> get_Presences()

Disassembly:
	0x034762A8 MOV X2, X31
	0x034762AC LDR X0, [X8]
	0x034762B0 BL 0x3227C5C
	0x034762B4 LDP X20, X19, [X31 + 0x30]
	0x034762B8 LDP X22, X21, [X31 + 0x20]
	0x034762BC LDR X30, [X31 + 0x10]
	0x034762C0 ADD X31, X31, 0x40
	0x034762C4 RET
	0x034762C8 BL 0x1C16F28
	0x034762CC BL 0x1C16F44
	0x034762D0 MOV X1, X31
	0x034762D4 BL 0x1C16DEC
	0x034762D8 BL 0x1C16F20
	0x034762DC MOV X1, X31
	0x034762E0 B 0x33BDD8C
	0x034762E4 LDR X0, [X0 + 0x10]
	0x034762E8 RET
	0x034762EC STR X1, [X0 + 0x10]
	0x034762F0 RET
	0x034762F4 STR X30, [X31 - 0x30]!
	0x034762F8 STP X22, X21, [X31 + 0x10]
	0x034762FC STP X20, X19, [X31 + 0x20]
	0x03476300 ADRP X22, 0xF67000
	0x03476304 ADRP X20, 0xCBA000
	0x03476308 ADRP X21, 0xCB9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF68000
	005 Move W8, [X20+2068]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCBB000
	012 Move X0, [X0+2056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2068], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfNotEqual {29}
	019 Move X19, 0xCBB000
	020 Move X19, [X19+2056]
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move X0, [X8]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Collections.Generic.List`1<Nakama.UserPresence> get_PresencesField()

Disassembly:
	0x0347630C LDRB W8, [X22 + 0x826]
	0x03476310 LDR X20, [X20 + 0x9C0]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_PresencesField(System.Collections.Generic.List`1<Nakama.UserPresence> value)

Disassembly:
	0x03476314 LDR X21, [X21 + 0x5B8]
	0x03476318 MOV X19, X0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0347631C TBNZ X8, 0x0, 0x3476340
	0x03476320 ADRP X0, 0xCB9000
	0x03476324 LDR X0, [X0 + 0x5B8]
	0x03476328 BL 0x1C16CF4
	0x0347632C ADRP X0, 0xCBA000
	0x03476330 LDR X0, [X0 + 0x9C0]
	0x03476334 BL 0x1C16CF4
	0x03476338 MOVZ W8, 0x1
	0x0347633C STRB W8, [X22 + 0x826]
	0x03476340 LDR X1, [X19 + 0x10]
	0x03476344 LDR X0, [X20]
	0x03476348 LDR X2, [X21]
	0x0347634C LDP X20, X19, [X31 + 0x20]
	0x03476350 LDP X22, X21, [X31 + 0x10]
	0x03476354 MOV X3, X31
	0x03476358 LDR X30, [X31], #0x30
	0x0347635C B 0x32274B8
	0x03476360 MOV X1, X31
	0x03476364 B 0x33BDD8C
	0x03476368 LDR X0, [X0 + 0x10]
	0x0347636C RET
	0x03476370 STR X1, [X0 + 0x10]
	0x03476374 RET
	0x03476378 LDR X0, [X0 + 0x18]
	0x0347637C RET
	0x03476380 STR X1, [X0 + 0x18]
	0x03476384 RET
	0x03476388 LDR X0, [X0 + 0x20]
	0x0347638C RET
	0x03476390 STR X1, [X0 + 0x20]
	0x03476394 RET
	0x03476398 LDR X0, [X0 + 0x28]
	0x0347639C RET
	0x034763A0 STR X1, [X0 + 0x28]
	0x034763A4 RET
	0x034763A8 STP X30, X23, [X31 - 0x30]!
	0x034763AC STP X22, X21, [X31 + 0x10]
	0x034763B0 STP X20, X19, [X31 + 0x20]
	0x034763B4 ADRP X23, 0xF67000
	0x034763B8 ADRP X21, 0xC7D000
	0x034763BC ADRP X22, 0xCBA000
	0x034763C0 ADRP X20, 0xC7D000
	0x034763C4 LDRB W8, [X23 + 0x827]
	0x034763C8 LDR X21, [X21 + 0x838]
	0x034763CC LDR X22, [X22 + 0x9C8]
	0x034763D0 LDR X20, [X20 + 0xAC8]
	0x034763D4 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xF68000
	009 Move X22, 0xC7E000
	010 Move X23, 0xCBB000
	011 Move X20, 0xCBB000
	012 Move X21, 0xCBB000
	013 Move W8, [X24+2069]
	014 Move X22, [X22+2104]
	015 Move X23, [X23+2072]
	016 Move X20, [X20+2400]
	017 Move X21, [X21+2408]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xCBB000
	024 Move X0, [X0+2072]
	025 Call 0x1C17CF4
	026 Move X0, 0xCBB000
	027 Move X0, [X0+2400]
	028 Call 0x1C17CF4
	029 Move X0, 0xC7E000
	030 Move X0, [X0+2104]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBB000
	033 Move X0, [X0+2408]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+2069], W8
	037 Move X0, X19
	038 Call Status.get_Presences, X0
	039 Move X8, [X22]
	040 Move X2, [X23]
	041 Move X1, X0
	042 Move X0, X8
	043 Call String.Join, X0, X1
	044 Move X8, [X20]
	045 Move X2, [X21]
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X1, X0
	053 Move X0, X8
	054 Move X3, X31
	055 Move X30, [X31+64]
	056 Call String.Concat, X0, X1, X2
	057 Return X0

Method: System.Void .ctor()

Disassembly:
	0x034763D8 TBNZ X8, 0x0, 0x3476444
	0x034763DC ADRP X0, 0xC7D000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

