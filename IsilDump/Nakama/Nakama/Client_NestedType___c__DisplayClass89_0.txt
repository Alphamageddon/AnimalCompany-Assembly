Type: Nakama.Client/<>c__DisplayClass89_0

Method: System.Void .ctor()

Disassembly:
	0x0344C244 BL 0x32277A8
	0x0344C248 TBNZ X0, 0x0, 0x344C3A8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.Task`1<Nakama.IApiNotificationList> <ListNotificationsAsync>b__0()

Disassembly:
	0x0344C24C LDR X8, [X19 + 0x50]
	0x0344C250 CBZ X8, 0x344C524
	0x0344C254 ADRP X9, 0xCA8000
	0x0344C258 LDR X9, [X9 + 0x9F0]
	0x0344C25C LDR X21, [X8 + 0x18]
	0x0344C260 LDR X0, [X9]
	0x0344C264 LDR W9, [X0 + 0xE0]
	0x0344C268 CBNZ W9, 0x344C270
	0x0344C26C BL 0x1C16DFC
	0x0344C270 MOV X0, X31
	0x0344C274 BL 0x33616A4
	0x0344C278 ADRP X22, 0xCA9000
	0x0344C27C LDR X22, [X22 + 0xA10]
	0x0344C280 MOV X8, X0
	0x0344C284 STR X8, [X31 + 0x28]
	0x0344C288 LDR X0, [X22]
	0x0344C28C LDR W8, [X0 + 0xE0]
	0x0344C290 CBNZ W8, 0x344C29C
	0x0344C294 BL 0x1C16DFC
	0x0344C298 LDR X0, [X22]
	0x0344C29C LDR X8, [X0 + 0xB8]
	0x0344C2A0 LDR X1, [X8]
	0x0344C2A4 ADD X0, X31, 0x28
	0x0344C2A8 MOV X2, X31
	0x0344C2AC BL 0x335FC68
	0x0344C2B0 CBZ X21, 0x344C528
	0x0344C2B4 LDR X8, [X21]
	0x0344C2B8 LDR X1, [X23]
	0x0344C2BC MOV X22, X0
	0x0344C2C0 LDRH W9, [X8 + 0x12E]
	0x0344C2C4 CBZ X9, 0x344C2E8
	0x0344C2C8 LDR X10, [X8 + 0xB0]
	0x0344C2CC ADD X10, X10, 0x8
	0x0344C2D0 LDUR X11, [X10 - 0x8]
	0x0344C2D4 CMP X11, X1
	0x0344C2D8 B.EQ 0x344C2F8
	0x0344C2DC SUBS X9, X9, 0x1
	0x0344C2E0 ADD X10, X10, 0x10
	0x0344C2E4 B.NE 0x344C2D0
	0x0344C2E8 MOVZ W2, 0xB
	0x0344C2EC MOV X0, X21
	0x0344C2F0 BL 0x1C5C788
	0x0344C2F4 B 0x344C308
	0x0344C2F8 LDR W9, [X10]
	0x0344C2FC ADD W9, W9, 0xB
	0x0344C300 ADD X8, X8, W9, 0x4, SXTW
	0x0344C304 ADD X0, X8, 0x138
	0x0344C308 LDP X8, X2, [X0]
	0x0344C30C MOV X0, X21
	0x0344C310 MOV X1, X22
	0x0344C314 BLR X8
	0x0344C318 TBZ X0, 0x0, 0x344C3A8
	0x0344C31C LDR X8, [X19 + 0x50]
	0x0344C320 CBZ X8, 0x344C52C
	0x0344C324 LDR X1, [X8 + 0x18]
	0x0344C328 LDR X3, [X19 + 0x48]
	0x0344C32C LDR X4, [X8 + 0x30]
	0x0344C330 MOV X0, X20
	0x0344C334 MOV X2, X31
	0x0344C338 BL 0x34440A8
	0x0344C33C CBZ X0, 0x344C530
	0x0344C340 ADRP X8, 0xCA8000
	0x0344C344 LDR X8, [X8 + 0x840]
	0x0344C348 LDR X1, [X8]
	0x0344C34C BL 0x269F5D0
	0x0344C350 ADRP X8, 0xCA8000
	0x0344C354 LDR X8, [X8 + 0x838]
	0x0344C358 STR X0, [X31 + 0x20]
	0x0344C35C LDR X1, [X8]
	0x0344C360 ADD X0, X31, 0x20
	0x0344C364 BL 0x2677430
	0x0344C368 TBNZ X0, 0x0, 0x344C164
	0x0344C36C STR W31, [X19]
	0x0344C370 LDR X8, [X31 + 0x20]
	0x0344C374 STR X8, [X19 + 0x58]
	0x0344C378 LDR X0, [X25]
	0x0344C37C LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xF92000
	009 Move W8, [X20+1865]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xCA9000
	016 Move X0, [X0+2072]
	017 Call 0x1C17CF4
	018 Move X0, 0xCE4000
	019 Move X0, [X0+1992]
	020 Call 0x1C17CF4
	021 Move X0, 0xCA9000
	022 Move X0, [X0+1136]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1865], W8
	026 Move X9, [X19+16]
	027 Compare X9, 0
	028 JumpIfEqual {91}
	029 Move X21, [X19+24]
	030 Compare X21, 0
	031 JumpIfEqual {91}
	032 Move X10, 0xCA9000
	033 Move X8, [X21]
	034 Move X10, [X10+2072]
	035 Move X22, 0xCA9000
	036 Move X23, 0xCE4000
	037 Move X20, [X9+72]
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X10]
	040 Move X22, [X22+1136]
	041 Move X23, [X23+1992]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X21
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X21
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move W1, [X19+32]
	061 Move X2, [X22]
	062 Move X21, X0
	063 Add X0, X31, 24
	064 Move [X31+24], X31
	065 Call Nullable`1<Int32>..ctor, X0, X1
	066 Move X22, [X19+40]
	067 Move X1, [X19+48]
	068 Move X2, [X23]
	069 Add X0, X31, 8
	070 Move [X31+8], X31
	071 Move [X31+16], X31
	072 Call Nullable`1<CancellationToken>..ctor, X0, X1
	073 Compare X20, 0
	074 JumpIfEqual {91}
	075 Move X5, [X31+16]
	076 Move X2, [X31+24]
	077 Move X4, [X31+8]
	078 Move X0, X20
	079 Move X1, X21
	080 Move X3, X22
	081 Move X6, X31
	082 Call ApiClient.ListNotificationsAsync, X0, X1, X2, X3, X4
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X30, [X31+32]
	088 Move X23, [X31+40]
	089 Add X31, X31, 80
	090 Return X0
	091 Call 0x1C17F20

