Type: Nakama.ApiEvent

Method: System.Boolean get_External()

Disassembly:
	0x03406384 MOV X4, X31
	0x03406388 BL 0x32277C4

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_External(System.Boolean value)

Disassembly:
	0x0340638C LDR X8, [X23]
	0x03406390 MOV X21, X0
	0x03406394 MOVZ W1, 0x4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.String get_Name()

Disassembly:
	0x03406398 MOV X0, X8
	0x0340639C BL 0x1C16D6C

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x034063A0 CBZ X0, 0x34064C8
	0x034063A4 MOV X20, X0

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Properties()

Disassembly:
	0x034063A8 CBZ X21, 0x34063C0
	0x034063AC LDR X8, [X20]
	0x034063B0 MOV X0, X21
	0x034063B4 LDR X1, [X8 + 0x40]
	0x034063B8 BL 0x1C16E00
	0x034063BC CBZ X0, 0x34064BC
	0x034063C0 LDR W8, [X20 + 0x18]
	0x034063C4 CBZ W8, 0x34064B8
	0x034063C8 ADRP X23, 0xD27000
	0x034063CC LDR X23, [X23 + 0xCE0]
	0x034063D0 STR X21, [X20 + 0x20]
	0x034063D4 LDR X0, [X23]
	0x034063D8 CBZ X0, 0x34063F0
	0x034063DC LDR X8, [X20]
	0x034063E0 LDR X1, [X8 + 0x40]
	0x034063E4 BL 0x1C16E00
	0x034063E8 CBZ X0, 0x34064BC
	0x034063EC LDR W8, [X20 + 0x18]
	0x034063F0 CMP W8, 0x1
	0x034063F4 B.LS 0x34064B8
	0x034063F8 LDR X8, [X23]
	0x034063FC ADRP X9, 0xCED000
	0x03406400 LDR X9, [X9 + 0xB58]
	0x03406404 ADD X1, X31, 0x4
	0x03406408 STR X8, [X20 + 0x28]
	0x0340640C LDRB W8, [X19 + 0x60]
	0x03406410 LDR X0, [X9]
	0x03406414 STRB W8, [X31 + 0x4]
	0x03406418 BL 0x1C16E04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD8000
	005 Move W8, [X20+1320]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCEF000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCEF000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1320], W8
	019 Move X19, [X19+32]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCEF000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCEF000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__properties()

Disassembly:
	0x0340641C MOV X21, X0
	0x03406420 CBZ X0, 0x3406438

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set__properties(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03406424 LDR X8, [X20]
	0x03406428 MOV X0, X21

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Timestamp()

Disassembly:
	0x0340642C LDR X1, [X8 + 0x40]
	0x03406430 BL 0x1C16E00

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Timestamp(System.String value)

Disassembly:
	0x03406434 CBZ X0, 0x34064BC
	0x03406438 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0340643C CMP W8, 0x2
	0x03406440 B.LS 0x34064B8
	0x03406444 STR X21, [X20 + 0x30]
	0x03406448 LDR X0, [X22]
	0x0340644C CBZ X0, 0x3406464
	0x03406450 LDR X8, [X20]
	0x03406454 LDR X1, [X8 + 0x40]
	0x03406458 BL 0x1C16E00
	0x0340645C CBZ X0, 0x34064BC
	0x03406460 LDR W8, [X20 + 0x18]
	0x03406464 CMP W8, 0x3
	0x03406468 B.LS 0x34064B8
	0x0340646C LDR X8, [X22]
	0x03406470 ADRP X21, 0xD27000
	0x03406474 LDR X21, [X21 + 0xDE8]
	0x03406478 MOV X0, X20
	0x0340647C MOV X1, X31
	0x03406480 STR X8, [X20 + 0x38]
	0x03406484 BL 0x3227578
	0x03406488 LDR X2, [X19 + 0x68]
	0x0340648C LDR X1, [X21]
	0x03406490 LDR X3, [X22]
	0x03406494 MOV X4, X31
	0x03406498 BL 0x32277C4
	0x0340649C LDP X20, X19, [X31 + 0x50]
	0x034064A0 LDP X22, X21, [X31 + 0x40]
	0x034064A4 LDP X24, X23, [X31 + 0x30]
	0x034064A8 LDP X26, X25, [X31 + 0x20]
	0x034064AC LDP X30, X27, [X31 + 0x10]
	0x034064B0 ADD X31, X31, 0x60
	0x034064B4 RET
	0x034064B8 BL 0x1C16F28
	0x034064BC BL 0x1C16F44
	0x034064C0 MOV X1, X31
	0x034064C4 BL 0x1C16DEC
	0x034064C8 BL 0x1C16F20
	0x034064CC MOV X1, X31
	0x034064D0 B 0x33BDD8C
	0x034064D4 LDR X0, [X0 + 0x10]
	0x034064D8 RET
	0x034064DC STR X1, [X0 + 0x10]
	0x034064E0 RET
	0x034064E4 STR X30, [X31 - 0x20]!
	0x034064E8 STP X20, X19, [X31 + 0x10]
	0x034064EC ADRP X20, 0xFD7000
	0x034064F0 LDRB W8, [X20 + 0x52E]
	0x034064F4 MOV X19, X0
	0x034064F8 TBNZ X8, 0x0, 0x340651C
	0x034064FC ADRP X0, 0xD27000
	0x03406500 LDR X0, [X0 + 0xF00]
	0x03406504 BL 0x1C16CF4
	0x03406508 ADRP X0, 0xD27000
	0x0340650C LDR X0, [X0 + 0xF08]
	0x03406510 BL 0x1C16CF4
	0x03406514 MOVZ W8, 0x1
	0x03406518 STRB W8, [X20 + 0x52E]
	0x0340651C LDR X19, [X19 + 0x18]
	0x03406520 CBNZ X19, 0x340654C
	0x03406524 ADRP X8, 0xD27000
	0x03406528 LDR X8, [X8 + 0xF08]
	0x0340652C LDR X0, [X8]
	0x03406530 BL 0x1C16F10
	0x03406534 ADRP X8, 0xD27000
	0x03406538 LDR X8, [X8 + 0xF00]
	0x0340653C MOV W1, W31
	0x03406540 MOV X19, X0
	0x03406544 LDR X2, [X8]
	0x03406548 BL 0x301B830
	0x0340654C MOV X0, X19
	0x03406550 LDP X20, X19, [X31 + 0x10]
	0x03406554 LDR X30, [X31], #0x20
	0x03406558 RET
	0x0340655C LDR X0, [X0 + 0x18]
	0x03406560 RET
	0x03406564 STR X1, [X0 + 0x18]
	0x03406568 RET
	0x0340656C STR X30, [X31 - 0x50]!
	0x03406570 STP X26, X25, [X31 + 0x10]
	0x03406574 STP X24, X23, [X31 + 0x20]
	0x03406578 STP X22, X21, [X31 + 0x30]
	0x0340657C STP X20, X19, [X31 + 0x40]
	0x03406580 ADRP X26, 0xFD7000
	0x03406584 ADRP X20, 0xCED000
	0x03406588 ADRP X25, 0xD27000
	0x0340658C ADRP X23, 0xCED000
	0x03406590 ADRP X24, 0xD27000
	0x03406594 ADRP X21, 0xD27000
	0x03406598 ADRP X22, 0xD27000
	0x0340659C LDR X20, [X20 + 0x988]
	0x034065A0 LDRB W8, [X26 + 0x52F]
	0x034065A4 LDR X25, [X25 + 0xED8]
	0x034065A8 LDR X23, [X23 + 0x838]
	0x034065AC LDR X24, [X24 + 0xF10]
	0x034065B0 LDR X21, [X21 + 0xF18]
	0x034065B4 LDR X22, [X22 + 0xD50]
	0x034065B8 MOV X19, X0
	0x034065BC TBNZ X8, 0x0, 0x3406610
	0x034065C0 ADRP X0, 0xD27000
	0x034065C4 LDR X0, [X0 + 0xF10]
	0x034065C8 BL 0x1C16CF4
	0x034065CC ADRP X0, 0xCED000
	0x034065D0 LDR X0, [X0 + 0x838]
	0x034065D4 BL 0x1C16CF4
	0x034065D8 ADRP X0, 0xD27000
	0x034065DC LDR X0, [X0 + 0xD50]
	0x034065E0 BL 0x1C16CF4
	0x034065E4 ADRP X0, 0xD27000
	0x034065E8 LDR X0, [X0 + 0xF18]
	0x034065EC BL 0x1C16CF4
	0x034065F0 ADRP X0, 0xD27000
	0x034065F4 LDR X0, [X0 + 0xED8]
	0x034065F8 BL 0x1C16CF4
	0x034065FC ADRP X0, 0xCED000
	0x03406600 LDR X0, [X0 + 0x988]
	0x03406604 BL 0x1C16CF4
	0x03406608 MOVZ W8, 0x1
	0x0340660C STRB W8, [X26 + 0x52F]
	0x03406610 LDR X2, [X19 + 0x10]
	0x03406614 LDR X0, [X20]
	0x03406618 LDR X1, [X25]
	0x0340661C LDR X3, [X23]
	0x03406620 MOV X4, X31
	0x03406624 BL 0x32277C4
	0x03406628 MOV X20, X0
	0x0340662C MOV X0, X19
	0x03406630 BL 0x34064E4
	0x03406634 LDR X8, [X23]
	0x03406638 LDR X2, [X24]
	0x0340663C MOV X1, X0
	0x03406640 MOV X0, X8
	0x03406644 BL 0x226B7E8
	0x03406648 LDR X1, [X21]
	0x0340664C LDR X3, [X22]
	0x03406650 MOV X2, X0
	0x03406654 MOV X0, X20
	0x03406658 LDP X20, X19, [X31 + 0x40]
	0x0340665C LDP X22, X21, [X31 + 0x30]
	0x03406660 LDP X24, X23, [X31 + 0x20]
	0x03406664 LDP X26, X25, [X31 + 0x10]
	0x03406668 MOV X4, X31
	0x0340666C LDR X30, [X31], #0x50
	0x03406670 B 0x32277C4
	0x03406674 MOV X1, X31
	0x03406678 B 0x33BDD8C
	0x0340667C LDR X0, [X0 + 0x10]
	0x03406680 RET
	0x03406684 STR X1, [X0 + 0x10]
	0x03406688 RET
	0x0340668C STR X30, [X31 - 0x20]!
	0x03406690 STP X20, X19, [X31 + 0x10]
	0x03406694 ADRP X20, 0xFD7000
	0x03406698 LDRB W8, [X20 + 0x530]
	0x0340669C MOV X19, X0
	0x034066A0 TBNZ X8, 0x0, 0x34066C4
	0x034066A4 ADRP X0, 0xD27000
	0x034066A8 LDR X0, [X0 + 0xF20]
	0x034066AC BL 0x1C16CF4
	0x034066B0 ADRP X0, 0xD27000
	0x034066B4 LDR X0, [X0 + 0xF28]
	0x034066B8 BL 0x1C16CF4
	0x034066BC MOVZ W8, 0x1
	0x034066C0 STRB W8, [X20 + 0x530]
	0x034066C4 LDR X19, [X19 + 0x18]
	0x034066C8 CBNZ X19, 0x34066F4
	0x034066CC ADRP X8, 0xD27000
	0x034066D0 LDR X8, [X8 + 0xF28]
	0x034066D4 LDR X0, [X8]
	0x034066D8 BL 0x1C16F10
	0x034066DC ADRP X8, 0xD27000
	0x034066E0 LDR X8, [X8 + 0xF20]
	0x034066E4 MOV W1, W31
	0x034066E8 MOV X19, X0
	0x034066EC LDR X2, [X8]
	0x034066F0 BL 0x301B830
	0x034066F4 MOV X0, X19
	0x034066F8 LDP X20, X19, [X31 + 0x10]
	0x034066FC LDR X30, [X31], #0x20
	0x03406700 RET
	0x03406704 LDR X0, [X0 + 0x18]
	0x03406708 RET
	0x0340670C STR X1, [X0 + 0x18]
	0x03406710 RET
	0x03406714 STR X30, [X31 - 0x50]!
	0x03406718 STP X26, X25, [X31 + 0x10]
	0x0340671C STP X24, X23, [X31 + 0x20]
	0x03406720 STP X22, X21, [X31 + 0x30]
	0x03406724 STP X20, X19, [X31 + 0x40]
	0x03406728 ADRP X26, 0xFD7000
	0x0340672C ADRP X20, 0xCED000
	0x03406730 ADRP X25, 0xD27000
	0x03406734 ADRP X23, 0xCED000
	0x03406738 ADRP X24, 0xD27000
	0x0340673C ADRP X21, 0xD27000
	0x03406740 ADRP X22, 0xD27000
	0x03406744 LDR X20, [X20 + 0x988]
	0x03406748 LDRB W8, [X26 + 0x531]
	0x0340674C LDR X25, [X25 + 0xED8]
	0x03406750 LDR X23, [X23 + 0x838]
	0x03406754 LDR X24, [X24 + 0xF30]
	0x03406758 LDR X21, [X21 + 0xF38]
	0x0340675C LDR X22, [X22 + 0xD50]
	0x03406760 MOV X19, X0
	0x03406764 TBNZ X8, 0x0, 0x34067B8
	0x03406768 ADRP X0, 0xD27000
	0x0340676C LDR X0, [X0 + 0xF30]
	0x03406770 BL 0x1C16CF4
	0x03406774 ADRP X0, 0xCED000
	0x03406778 LDR X0, [X0 + 0x838]
	0x0340677C BL 0x1C16CF4
	0x03406780 ADRP X0, 0xD27000
	0x03406784 LDR X0, [X0 + 0xF38]
	0x03406788 BL 0x1C16CF4
	0x0340678C ADRP X0, 0xD27000
	0x03406790 LDR X0, [X0 + 0xD50]
	0x03406794 BL 0x1C16CF4
	0x03406798 ADRP X0, 0xD27000
	0x0340679C LDR X0, [X0 + 0xED8]
	0x034067A0 BL 0x1C16CF4
	0x034067A4 ADRP X0, 0xCED000
	0x034067A8 LDR X0, [X0 + 0x988]
	0x034067AC BL 0x1C16CF4
	0x034067B0 MOVZ W8, 0x1
	0x034067B4 STRB W8, [X26 + 0x531]
	0x034067B8 LDR X2, [X19 + 0x10]
	0x034067BC LDR X0, [X20]
	0x034067C0 LDR X1, [X25]
	0x034067C4 LDR X3, [X23]
	0x034067C8 MOV X4, X31
	0x034067CC BL 0x32277C4
	0x034067D0 MOV X20, X0
	0x034067D4 MOV X0, X19
	0x034067D8 BL 0x340668C
	0x034067DC LDR X8, [X23]
	0x034067E0 LDR X2, [X24]
	0x034067E4 MOV X1, X0
	0x034067E8 MOV X0, X8
	0x034067EC BL 0x226B7E8
	0x034067F0 LDR X1, [X21]
	0x034067F4 LDR X3, [X22]
	0x034067F8 MOV X2, X0
	0x034067FC MOV X0, X20
	0x03406800 LDP X20, X19, [X31 + 0x40]
	0x03406804 LDP X22, X21, [X31 + 0x30]
	0x03406808 LDP X24, X23, [X31 + 0x20]
	0x0340680C LDP X26, X25, [X31 + 0x10]
	0x03406810 MOV X4, X31
	0x03406814 LDR X30, [X31], #0x50
	0x03406818 B 0x32277C4
	0x0340681C MOV X1, X31
	0x03406820 B 0x33BDD8C
	0x03406824 LDR X0, [X0 + 0x10]
	0x03406828 RET
	0x0340682C STR X1, [X0 + 0x10]
	0x03406830 RET
	0x03406834 LDR X0, [X0 + 0x18]
	0x03406838 RET
	0x0340683C STR X1, [X0 + 0x18]
	0x03406840 RET
	0x03406844 LDR X0, [X0 + 0x20]
	0x03406848 RET
	0x0340684C STR X1, [X0 + 0x20]
	0x03406850 RET
	0x03406854 LDR W0, [X0 + 0x28]
	0x03406858 RET
	0x0340685C STR W1, [X0 + 0x28]
	0x03406860 RET
	0x03406864 LDR X0, [X0 + 0x30]
	0x03406868 RET
	0x0340686C STR X1, [X0 + 0x30]
	0x03406870 RET
	0x03406874 LDR W0, [X0 + 0x38]
	0x03406878 RET
	0x0340687C STR W1, [X0 + 0x38]
	0x03406880 RET
	0x03406884 LDR X0, [X0 + 0x40]
	0x03406888 RET
	0x0340688C STR X1, [X0 + 0x40]
	0x03406890 RET
	0x03406894 LDR X0, [X0 + 0x48]
	0x03406898 RET
	0x0340689C STR X1, [X0 + 0x48]
	0x034068A0 RET
	0x034068A4 LDR X0, [X0 + 0x50]
	0x034068A8 RET
	0x034068AC STR X1, [X0 + 0x50]
	0x034068B0 RET
	0x034068B4 LDR X0, [X0 + 0x58]
	0x034068B8 RET
	0x034068BC STR X1, [X0 + 0x58]
	0x034068C0 RET
	0x034068C4 LDR X0, [X0 + 0x60]
	0x034068C8 RET
	0x034068CC STR X1, [X0 + 0x60]
	0x034068D0 RET
	0x034068D4 LDR X0, [X0 + 0x68]
	0x034068D8 RET
	0x034068DC STR X1, [X0 + 0x68]
	0x034068E0 RET
	0x034068E4 SUB X31, X31, 0x60
	0x034068E8 STP X30, X27, [X31 + 0x10]
	0x034068EC STP X26, X25, [X31 + 0x20]
	0x034068F0 STP X24, X23, [X31 + 0x30]
	0x034068F4 STP X22, X21, [X31 + 0x40]
	0x034068F8 STP X20, X19, [X31 + 0x50]
	0x034068FC ADRP X25, 0xFD7000
	0x03406900 ADRP X26, 0xCED000
	0x03406904 ADRP X24, 0xD27000
	0x03406908 ADRP X22, 0xCED000
	0x0340690C ADRP X21, 0xD27000
	0x03406910 ADRP X20, 0xD27000
	0x03406914 ADRP X23, 0xCED000
	0x03406918 LDR X26, [X26 + 0x988]
	0x0340691C LDRB W8, [X25 + 0x532]
	0x03406920 LDR X24, [X24 + 0xDE0]
	0x03406924 LDR X22, [X22 + 0x838]
	0x03406928 LDR X21, [X21 + 0xF40]
	0x0340692C LDR X20, [X20 + 0xF48]
	0x03406930 LDR X23, [X23 + 0x9D0]
	0x03406934 MOV X19, X0
	0x03406938 TBNZ X8, 0x0, 0x3406A04
	0x0340693C ADRP X0, 0xCED000
	0x03406940 LDR X0, [X0 + 0x758]
	0x03406944 BL 0x1C16CF4
	0x03406948 ADRP X0, 0xCED000
	0x0340694C LDR X0, [X0 + 0x9D0]
	0x03406950 BL 0x1C16CF4
	0x03406954 ADRP X0, 0xD27000
	0x03406958 LDR X0, [X0 + 0xF48]
	0x0340695C BL 0x1C16CF4
	0x03406960 ADRP X0, 0xD27000
	0x03406964 LDR X0, [X0 + 0xD10]
	0x03406968 BL 0x1C16CF4
	0x0340696C ADRP X0, 0xD27000
	0x03406970 LDR X0, [X0 + 0xD18]
	0x03406974 BL 0x1C16CF4
	0x03406978 ADRP X0, 0xD27000
	0x0340697C LDR X0, [X0 + 0xF50]
	0x03406980 BL 0x1C16CF4
	0x03406984 ADRP X0, 0xD27000
	0x03406988 LDR X0, [X0 + 0xDE0]
	0x0340698C BL 0x1C16CF4
	0x03406990 ADRP X0, 0xCED000
	0x03406994 LDR X0, [X0 + 0x838]
	0x03406998 BL 0x1C16CF4
	0x0340699C ADRP X0, 0xD27000
	0x034069A0 LDR X0, [X0 + 0xD00]
	0x034069A4 BL 0x1C16CF4
	0x034069A8 ADRP X0, 0xD27000
	0x034069AC LDR X0, [X0 + 0xDE8]
	0x034069B0 BL 0x1C16CF4
	0x034069B4 ADRP X0, 0xD27000
	0x034069B8 LDR X0, [X0 + 0xF58]
	0x034069BC BL 0x1C16CF4
	0x034069C0 ADRP X0, 0xD27000
	0x034069C4 LDR X0, [X0 + 0xF40]
	0x034069C8 BL 0x1C16CF4
	0x034069CC ADRP X0, 0xCED000
	0x034069D0 LDR X0, [X0 + 0x988]
	0x034069D4 BL 0x1C16CF4
	0x034069D8 ADRP X0, 0xD27000
	0x034069DC LDR X0, [X0 + 0xF60]
	0x034069E0 BL 0x1C16CF4
	0x034069E4 ADRP X0, 0xD27000
	0x034069E8 LDR X0, [X0 + 0xF68]
	0x034069EC BL 0x1C16CF4
	0x034069F0 ADRP X0, 0xD27000
	0x034069F4 LDR X0, [X0 + 0xE30]
	0x034069F8 BL 0x1C16CF4
	0x034069FC MOVZ W8, 0x1
	0x03406A00 STRB W8, [X25 + 0x532]
	0x03406A04 LDR X0, [X26]
	0x03406A08 LDR X2, [X19 + 0x10]
	0x03406A0C LDR X1, [X24]
	0x03406A10 LDR X3, [X22]
	0x03406A14 MOV X4, X31
	0x03406A18 BL 0x32277C4
	0x03406A1C LDR X2, [X19 + 0x18]
	0x03406A20 LDR X1, [X21]
	0x03406A24 LDR X3, [X22]
	0x03406A28 MOV X4, X31
	0x03406A2C BL 0x32277C4
	0x03406A30 LDR X2, [X19 + 0x20]
	0x03406A34 LDR X1, [X20]
	0x03406A38 LDR X3, [X22]
	0x03406A3C MOV X4, X31
	0x03406A40 BL 0x32277C4
	0x03406A44 LDR X8, [X23]
	0x03406A48 MOV X21, X0
	0x03406A4C MOVZ W1, 0x4
	0x03406A50 MOV X0, X8
	0x03406A54 BL 0x1C16D6C
	0x03406A58 CBZ X0, 0x3406D14
	0x03406A5C MOV X20, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xFD8000
	015 Move X22, 0xCEE000
	016 Move X20, 0xCEE000
	017 Move W8, [X19+1321]
	018 Move X22, [X22+2440]
	019 Move X20, [X20+2512]
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {84}
	025 Move X0, 0xCEE000
	026 Move X0, [X0+2904]
	027 Call 0x1C17CF4
	028 Move X0, 0xCEE000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0xCF1000
	032 Move X0, [X0+400]
	033 Call 0x1C17CF4
	034 Move X0, 0xCF1000
	035 Move X0, [X0+408]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEE000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0xCF1000
	041 Move X0, [X0+432]
	042 Call 0x1C17CF4
	043 Move X0, 0xCF1000
	044 Move X0, [X0+440]
	045 Call 0x1C17CF4
	046 Move X0, 0xCEE000
	047 Move X0, [X0+2512]
	048 Call 0x1C17CF4
	049 Move X0, 0xCEE000
	050 Move X0, [X0+2760]
	051 Call 0x1C17CF4
	052 Move X0, 0xD1B000
	053 Move X0, [X0+864]
	054 Call 0x1C17CF4
	055 Move X0, 0xD1B000
	056 Move X0, [X0+4024]
	057 Call 0x1C17CF4
	058 Move X0, 0xCF9000
	059 Move X0, [X0+1752]
	060 Call 0x1C17CF4
	061 Move X0, 0xCEF000
	062 Move X0, [X0+3808]
	063 Call 0x1C17CF4
	064 Move X0, 0xCEE000
	065 Move X0, [X0+2104]
	066 Call 0x1C17CF4
	067 Move X0, 0xD28000
	068 Move X0, [X0+3760]
	069 Call 0x1C17CF4
	070 Move X0, 0xD28000
	071 Move X0, [X0+3768]
	072 Call 0x1C17CF4
	073 Move X0, 0xD28000
	074 Move X0, [X0+3776]
	075 Call 0x1C17CF4
	076 Move X0, 0xCEE000
	077 Move X0, [X0+2440]
	078 Call 0x1C17CF4
	079 Move X0, 0xCEE000
	080 Move X0, [X0+2120]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X19+1321], W8
	084 Move X0, [X20]
	085 Move X21, [X22]
	086 Move W1, 4
	087 Call 0x1C17D6C
	088 Compare X0, 0
	089 JumpIfEqual {359}
	090 Move X20, X0
	091 Compare X21, 0
	092 JumpIfEqual {99}
	093 Move X8, [X20]
	094 Move X0, X21
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {356}
	099 Move W8, [X20+24]
	100 Compare W8, 0
	101 JumpIfEqual {355}
	102 Move X19, 0xD28000
	103 Move X19, [X19+3760]
	104 Move [X20+32], X21
	105 Move X0, [X19]
	106 Compare X0, 0
	107 JumpIfEqual {114}
	108 Move X8, [X20]
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {356}
	113 Move W8, [X20+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, [X19]
	116 Move X9, 0xCEE000
	117 Move X9, [X9+2904]
	118 Add X1, X31, 28
	119 Move [X20+40], X8
	120 Move W8, [X23+16]
	121 Move X0, [X9]
	122 Move [X31+28], W8
	123 Call 0x1C17E04
	124 Move X21, X0
	125 Compare X0, 0
	126 JumpIfEqual {133}
	127 Move X8, [X20]
	128 Move X0, X21
	129 Move X1, [X8+64]
	130 Call 0x1C17E00
	131 Compare X0, 0
	132 JumpIfEqual {356}
	133 Move W8, [X20+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X24, 0xCEE000
	136 Move X24, [X24+2104]
	137 Move [X20+48], X21
	138 Move X0, [X24]
	139 Compare X0, 0
	140 JumpIfEqual {147}
	141 Move X8, [X20]
	142 Move X1, [X8+64]
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {356}
	146 Move W8, [X20+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, [X24]
	149 Move X19, 0xCEF000
	150 Move X19, [X19+3808]
	151 Move X0, X20
	152 Move X1, X31
	153 Move [X20+56], X8
	154 Call String.Concat, X0
	155 Move X2, [X23+24]
	156 Move X1, [X19]
	157 Move X3, [X24]
	158 Move X4, X31
	159 Call String.Concat, X0, X1, X2, X3
	160 Move X29, [X22]
	161 Move X19, X0
	162 Move X0, X23
	163 Call ApiEvent.get_Properties, X0
	164 Compare X0, 0
	165 JumpIfEqual {359}
	166 Move X10, 0xCF1000
	167 Move X8, [X0]
	168 Move X10, [X10+400]
	169 Move X21, X0
	170 Move [X31+8], X19
	171 Move [X31+16], X23
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X1, [X10]
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move X0, X21
	183 Move W2, W31
	184 Call 0x1C5D788
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Add X8, X8, X9
	187 Add X0, X8, 312
	188 Move X26, 0xCEE000
	189 Move X27, 0xCF1000
	190 Move X28, 0xCEE000
	191 Move X20, 0xD1B000
	192 Move X25, 0xD1B000
	193 Move X19, 0xCF9000
	194 Move X26, [X26+3608]
	195 Move X27, [X27+408]
	196 Move X28, [X28+2760]
	197 Move X20, [X20+864]
	198 Move X25, [X25+4024]
	199 Move X19, [X19+1752]
	200 Move X8, [X0]
	201 Move X1, [X0+8]
	202 Move X0, X21
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move X21, X0
	205 Move X0, X29
	206 Compare X21, 0
	207 JumpIfEqual {348}
	208 Move X8, [X21]
	209 Move X1, [X26]
	210 Move X22, X0
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move X0, X21
	221 Move W2, W31
	222 Call 0x1C5D788
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Add X8, X8, X9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X1, [X0+8]
	228 Move X0, X21
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {283}
	234 Move X8, [X21]
	235 Move X1, [X27]
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move X0, X21
	246 Move W2, W31
	247 Call 0x1C5D788
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 Add X8, X8, X9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X1, [X0+8]
	253 Move X0, X21
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move X24, X0
	256 Move X0, [X28]
	257 Move X23, X1
	258 Move W1, 5
	259 Call 0x1C17D6C
	260 Compare X0, 0
	261 JumpIfEqual {350}
	262 Move W8, [X0+24]
	263 Compare W8, 0
	264 JumpIfEqual {352}
	265 Move X9, [X20]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move [X0+32], X9
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move [X0+40], X24
	270 Move X9, [X25]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move [X0+48], X9
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move [X0+56], X23
	275 Move X8, [X19]
	276 Move [X0+64], X8
	277 Move X1, X31
	278 Call String.Concat, X0
	279 Move X1, X0
	280 Move X0, X22
	281 Move X2, X31
	282 Call String.Concat, X0, X1
	283 Move X20, 0xCEE000
	284 Move X19, [X31+16]
	285 Move X20, [X20+2104]
	286 Move X23, X31
	287 Compare X21, 0
	288 JumpIfEqual {312}
	289 Move X8, [X21]
	290 Move X10, 0xCEE000
	291 NotImplemented "Instruction LDRH not yet implemented."
	292 Move X10, [X10+3584]
	293 Move X1, [X10]
	294 Compare X9, 0
	295 JumpIfEqual {302}
	296 Move X10, [X8+176]
	297 Add X10, X10, 8
	298 NotImplemented "Instruction LDUR not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Subtract X9, X9, 1
	301 Add X10, X10, 16
	302 Move X0, X21
	303 Move W2, W31
	304 Call 0x1C5D788
	305 NotImplemented "Instruction LDRSW not yet implemented."
	306 Add X8, X8, X9
	307 Add X0, X8, 312
	308 Move X8, [X0]
	309 Move X1, [X0+8]
	310 Move X0, X21
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Compare X23, 0
	313 JumpIfNotEqual {360}
	314 Move X8, 0xD28000
	315 Move X8, [X8+3768]
	316 Move X1, X22
	317 Move X3, X31
	318 Move X0, [X8]
	319 Move X8, 0xCEE000
	320 Move X8, [X8+2120]
	321 Move X2, [X8]
	322 Call String.Concat, X0, X1, X2
	323 Move X1, X0
	324 Move X0, [X31+8]
	325 Move X2, X31
	326 Call String.Concat, X0, X1
	327 Move X8, 0xD28000
	328 Move X2, [X19+40]
	329 Move X8, [X8+3776]
	330 Move X3, [X20]
	331 Move X4, X31
	332 Move X1, [X8]
	333 Call String.Concat, X0, X1, X2, X3
	334 Move X20, [X31+112]
	335 Move X19, [X31+120]
	336 Move X22, [X31+96]
	337 Move X21, [X31+104]
	338 Move X24, [X31+80]
	339 Move X23, [X31+88]
	340 Move X26, [X31+64]
	341 Move X25, [X31+72]
	342 Move X28, [X31+48]
	343 Move X27, [X31+56]
	344 Move X29, [X31+32]
	345 Move X30, [X31+40]
	346 Add X31, X31, 128
	347 Return X0
	348 Call 0x1C17F20
	349 Call 0x1C17F28
	350 Call 0x1C17F20
	351 Call 0x1C17F28
	352 Call 0x1C17F28
	353 Call 0x1C17F28
	354 Call 0x1C17F28
	355 Call 0x1C17F28
	356 Call 0x1C17F44
	357 Move X1, X31
	358 Call 0x1C17DEC
	359 Call 0x1C17F20
	360 Move X0, X23
	361 Call 0x1C17F18
	362 Move X22, X29
	363 Move X20, 0xCEE000
	364 Move X19, [X31+16]
	365 Move X20, [X20+2104]
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Call 0x3EB2AD0
	368 Move X23, [X0]
	369 Call 0x3EB2AE0
	370 Move X19, X0
	371 Move X23, X31
	372 Move X19, X0
	373 Compare X21, 0
	374 JumpIfEqual {398}
	375 Move X8, [X21]
	376 Move X10, 0xCEE000
	377 NotImplemented "Instruction LDRH not yet implemented."
	378 Move X10, [X10+3584]
	379 Move X1, [X10]
	380 Compare X9, 0
	381 JumpIfEqual {388}
	382 Move X10, [X8+176]
	383 Add X10, X10, 8
	384 NotImplemented "Instruction LDUR not yet implemented."
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Subtract X9, X9, 1
	387 Add X10, X10, 16
	388 Move X0, X21
	389 Move W2, W31
	390 Call 0x1C5D788
	391 NotImplemented "Instruction LDRSW not yet implemented."
	392 Add X8, X8, X9
	393 Add X0, X8, 312
	394 Move X8, [X0]
	395 Move X1, [X0+8]
	396 Move X0, X21
	397 NotImplemented "Instruction BLR not yet implemented."
	398 Compare X23, 0
	399 JumpIfNotEqual {402}
	400 Move X0, X19
	401 Call 0x1D2D690
	402 Move X0, X23
	403 Call 0x1C17F18
	404 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03406A60 CBZ X21, 0x3406A78
	0x03406A64 LDR X8, [X20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

