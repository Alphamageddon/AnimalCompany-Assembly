Type: Nakama.ApiClient/<DeleteLeaderboardRecordAsync>d__67

Method: System.Void MoveNext()

Disassembly:
	0x034210F4 MOV X22, X0
	0x034210F8 LDR X0, [X8]
	0x034210FC MOVZ W1, 0x1
	0x03421100 BL 0x1C16D6C
	0x03421104 MOV X1, X0
	0x03421108 CBZ X1, 0x34213F8
	0x0342110C LDR W8, [X1 + 0x18]
	0x03421110 CBZ W8, 0x34213FC
	0x03421114 MOVZ W8, 0x2F
	0x03421118 STRH W8, [X1 + 0x20]
	0x0342111C CBZ X22, 0x3421400
	0x03421120 MOV X0, X22
	0x03421124 MOV X2, X31
	0x03421128 BL 0x322BC58
	0x0342112C MOV X1, X21
	0x03421130 MOV X2, X31
	0x03421134 BL 0x321B938
	0x03421138 ADRP X8, 0xCDB000
	0x0342113C LDR X8, [X8 + 0x3A0]
	0x03421140 MOV X22, X0
	0x03421144 LDR X23, [X25 + 0x20]
	0x03421148 LDR X0, [X8]
	0x0342114C BL 0x1C16F10
	0x03421150 MOV X21, X0
	0x03421154 MOV X1, X23
	0x03421158 MOV X2, X31
	0x0342115C BL 0x36281F8
	0x03421160 CBZ X21, 0x3421404
	0x03421164 MOV X0, X21
	0x03421168 MOV X1, X22
	0x0342116C MOV X2, X31
	0x03421170 BL 0x36288CC
	0x03421174 MOV X0, X21
	0x03421178 MOV X1, X20
	0x0342117C MOV X2, X31
	0x03421180 BL 0x3628980
	0x03421184 MOV X0, X21
	0x03421188 MOV X1, X31
	0x0342118C BL 0x3628A38
	0x03421190 ADRP X8, 0xCFB000
	0x03421194 ADRP X9, 0xCD3000
	0x03421198 LDR X8, [X8 + 0x4E0]
	0x0342119C LDR X9, [X9 + 0x6D0]
	0x034211A0 MOV X20, X0
	0x034211A4 LDR X21, [X8]
	0x034211A8 LDR X0, [X9]
	0x034211AC BL 0x1C16F10
	0x034211B0 ADRP X8, 0xCD3000
	0x034211B4 LDR X8, [X8 + 0x6C0]
	0x034211B8 MOV X22, X0
	0x034211BC LDR X1, [X8]
	0x034211C0 BL 0x2AA4804
	0x034211C4 ADRP X8, 0xD0D000
	0x034211C8 LDR X8, [X8 + 0x7D8]
	0x034211CC LDR X1, [X19 + 0x30]
	0x034211D0 LDR X0, [X8]
	0x034211D4 MOV X2, X31
	0x034211D8 BL 0x321B938
	0x034211DC CBZ X22, 0x3421408
	0x034211E0 ADRP X8, 0xD0D000
	0x034211E4 LDR X8, [X8 + 0x7D0]
	0x034211E8 ADRP X9, 0xCD3000
	0x034211EC LDR X9, [X9 + 0x810]
	0x034211F0 MOV X2, X0
	0x034211F4 LDR X1, [X8]
	0x034211F8 LDR X3, [X9]
	0x034211FC MOV X0, X22
	0x03421200 BL 0x2AA5098
	0x03421204 LDR X0, [X19 + 0x20]
	0x03421208 MOV X1, X31
	0x0342120C BL 0x3483BE4
	0x03421210 MOV X23, X0
	0x03421214 MOV X0, X31
	0x03421218 BL 0x3241948
	0x0342121C CBZ X0, 0x342140C
	0x03421220 LDR X8, [X0]
	0x03421224 LDR X9, [X8 + 0x268]
	0x03421228 LDR X2, [X8 + 0x270]
	0x0342122C MOV X1, X23
	0x03421230 BLR X9
	0x03421234 LDR X24, [X25 + 0x10]
	0x03421238 CBZ X24, 0x3421410
	0x0342123C ADRP X10, 0xD0D000
	0x03421240 LDR X10, [X10 + 0x7B8]
	0x03421244 LDR X8, [X24]
	0x03421248 LDR W26, [X25 + 0x18]
	0x0342124C LDP X27, X25, [X19 + 0x38]
	0x03421250 LDR X1, [X10]
	0x03421254 LDRH W9, [X8 + 0x12E]
	0x03421258 MOV X23, X0
	0x0342125C CBZ X9, 0x3421280
	0x03421260 LDR X10, [X8 + 0xB0]
	0x03421264 ADD X10, X10, 0x8
	0x03421268 LDUR X11, [X10 - 0x8]
	0x0342126C CMP X11, X1
	0x03421270 B.EQ 0x34212A8
	0x03421274 SUBS X9, X9, 0x1
	0x03421278 ADD X10, X10, 0x10
	0x0342127C B.NE 0x3421268
	0x03421280 MOVZ W2, 0x3
	0x03421284 MOV X0, X24
	0x03421288 BL 0x1C5C788
	0x0342128C B 0x34212B8
	0x03421290 LDR X8, [X19 + 0x48]
	0x03421294 MOVN W9, 0x0
	0x03421298 STR X8, [X31 + 0x18]
	0x0342129C STR X31, [X19 + 0x48]
	0x034212A0 STR W9, [X19]
	0x034212A4 B 0x3421314
	0x034212A8 LDR W9, [X10]
	0x034212AC ADD W9, W9, 0x3
	0x034212B0 ADD X8, X8, W9, 0x4, SXTW
	0x034212B4 ADD X0, X8, 0x138
	0x034212B8 LDP X8, X9, [X0]
	0x034212BC MOV X0, X24
	0x034212C0 MOV X1, X21
	0x034212C4 MOV X2, X20
	0x034212C8 MOV X3, X22
	0x034212CC MOV X4, X23
	0x034212D0 MOV W5, W26
	0x034212D4 MOV X6, X27
	0x034212D8 MOV X7, X25
	0x034212DC STR X9, [X31]
	0x034212E0 BLR X8
	0x034212E4 CBZ X0, 0x3421414
	0x034212E8 ADRP X8, 0xCD5000
	0x034212EC LDR X8, [X8 + 0x1F8]
	0x034212F0 LDR X1, [X8]
	0x034212F4 BL 0x269F5D0
	0x034212F8 ADRP X8, 0xCD5000
	0x034212FC LDR X8, [X8 + 0x1F0]
	0x03421300 STR X0, [X31 + 0x18]
	0x03421304 LDR X1, [X8]
	0x03421308 ADD X0, X31, 0x18
	0x0342130C BL 0x2677430
	0x03421310 TBZ X0, 0x0, 0x3421350
	0x03421314 ADRP X8, 0xCD5000
	0x03421318 LDR X8, [X8 + 0x1E0]
	0x0342131C ADD X0, X31, 0x18
	0x03421320 LDR X1, [X8]
	0x03421324 BL 0x2677474
	0x03421328 MOVN W8, 0x1
	0x0342132C STR W8, [X19], #0x8
	0x03421330 LDR X0, [X28]
	0x03421334 LDR W8, [X0 + 0xE0]
	0x03421338 CBNZ W8, 0x3421340
	0x0342133C BL 0x1C16DFC
	0x03421340 MOV X0, X19
	0x03421344 MOV X1, X31
	0x03421348 BL 0x32C4864
	0x0342134C B 0x3421388
	0x03421350 STR W31, [X19]
	0x03421354 LDR X8, [X31 + 0x18]
	0x03421358 STR X8, [X19 + 0x48]
	0x0342135C LDR X0, [X28]
	0x03421360 LDR W8, [X0 + 0xE0]
	0x03421364 CBNZ W8, 0x342136C
	0x03421368 BL 0x1C16DFC
	0x0342136C ADRP X8, 0xD0D000
	0x03421370 LDR X8, [X8 + 0xC50]
	0x03421374 ADD X0, X19, 0x8
	0x03421378 LDR X3, [X8]
	0x0342137C ADD X1, X31, 0x18
	0x03421380 MOV X2, X19
	0x03421384 BL 0x21861FC
	0x03421388 LDP X20, X19, [X31 + 0x60]
	0x0342138C LDP X22, X21, [X31 + 0x50]
	0x03421390 LDP X24, X23, [X31 + 0x40]
	0x03421394 LDP X26, X25, [X31 + 0x30]
	0x03421398 LDP X28, X27, [X31 + 0x20]
	0x0342139C LDR X30, [X31 + 0x10]
	0x034213A0 ADD X31, X31, 0x70
	0x034213A4 RET
	0x034213A8 ADRP X0, 0xCDA000
	0x034213AC LDR X0, [X0 + 0x578]
	0x034213B0 BL 0x1C16D08
	0x034213B4 BL 0x1C16F10
	0x034213B8 MOV X20, X0
	0x034213BC ADRP X0, 0xD0D000
	0x034213C0 LDR X0, [X0 + 0xBC8]
	0x034213C4 BL 0x1C16D08
	0x034213C8 MOV X1, X0
	0x034213CC MOV X0, X20
	0x034213D0 MOV X2, X31
	0x034213D4 BL 0x3314A68
	0x034213D8 ADRP X0, 0xD0D000
	0x034213DC LDR X0, [X0 + 0xC60]
	0x034213E0 BL 0x1C16D08
	0x034213E4 MOV X1, X0
	0x034213E8 MOV X0, X20
	0x034213EC BL 0x1C16DEC
	0x034213F0 BL 0x1C16F20
	0x034213F4 BL 0x1C16F20
	0x034213F8 BL 0x1C16F20
	0x034213FC BL 0x1C16F28
	0x03421400 BL 0x1C16F20
	0x03421404 BL 0x1C16F20
	0x03421408 BL 0x1C16F20
	0x0342140C BL 0x1C16F20
	0x03421410 BL 0x1C16F20
	0x03421414 BL 0x1C16F20
	0x03421418 B 0x3421478
	0x0342141C B 0x3421478
	0x03421420 B 0x3421478
	0x03421424 B 0x3421478
	0x03421428 B 0x3421478
	0x0342142C B 0x3421478
	0x03421430 B 0x3421478
	0x03421434 B 0x3421478
	0x03421438 B 0x3421478
	0x0342143C B 0x3421478
	0x03421440 B 0x3421478
	0x03421444 B 0x3421478
	0x03421448 B 0x3421478
	0x0342144C B 0x3421478
	0x03421450 B 0x3421478
	0x03421454 B 0x3421478
	0x03421458 B 0x3421478
	0x0342145C B 0x3421478
	0x03421460 B 0x3421478
	0x03421464 B 0x3421478
	0x03421468 B 0x3421478
	0x0342146C B 0x3421478
	0x03421470 B 0x3421478
	0x03421474 B 0x3421478
	0x03421478 MOV X20, X0
	0x0342147C CMP W1, 0x1
	0x03421480 B.NE 0x3421510
	0x03421484 MOV X0, X20
	0x03421488 BL 0x3EB1AD0
	0x0342148C MOV X20, X0
	0x03421490 ADRP X0, 0xCD2000
	0x03421494 LDR X0, [X0 + 0x7D0]
	0x03421498 BL 0x1C16D08
	0x0342149C LDR X8, [X20]
	0x034214A0 LDR X1, [X8]
	0x034214A4 BL 0x1C17270
	0x034214A8 TBZ X0, 0x0, 0x34214E8
	0x034214AC LDR X20, [X20]
	0x034214B0 BL 0x3EB1AE0
	0x034214B4 MOVN W8, 0x1
	0x034214B8 STR W8, [X19], #0x8
	0x034214BC ADRP X0, 0xCD5000
	0x034214C0 LDR X0, [X0 + 0x280]
	0x034214C4 BL 0x1C16D08
	0x034214C8 LDR W8, [X0 + 0xE0]
	0x034214CC CBNZ W8, 0x34214D4
	0x034214D0 BL 0x1C16DFC
	0x034214D4 MOV X0, X19
	0x034214D8 MOV X1, X20
	0x034214DC MOV X2, X31
	0x034214E0 BL 0x32C4908
	0x034214E4 B 0x3421388
	0x034214E8 MOVZ W0, 0x8
	0x034214EC BL 0x3EB1AF0
	0x034214F0 LDR X8, [X20]
	0x034214F4 STR X8, [X0]
	0x034214F8 ADRP X1, 0xA93000
	0x034214FC ADD X1, X1, 0xE58
	0x03421500 MOV X2, X31
	0x03421504 BL 0x3EB1B00
	0x03421508 MOV X20, X0
	0x0342150C BL 0x3EB1AE0
	0x03421510 MOV X0, X20
	0x03421514 BL 0x1D2C690
	0x03421518 BL 0x1990590
	0x0342151C STR X30, [X31 - 0x30]!
	0x03421520 STP X22, X21, [X31 + 0x10]
	0x03421524 STP X20, X19, [X31 + 0x20]
	0x03421528 ADRP X21, 0xFBC000
	0x0342152C ADRP X22, 0xCD5000
	0x03421530 LDRB W8, [X21 + 0x61E]
	0x03421534 LDR X22, [X22 + 0x280]
	0x03421538 MOV X19, X1
	0x0342153C MOV X20, X0
	0x03421540 TBNZ X8, 0x0, 0x3421558
	0x03421544 ADRP X0, 0xCD5000
	0x03421548 LDR X0, [X0 + 0x280]
	0x0342154C BL 0x1C16CF4
	0x03421550 MOVZ W8, 0x1
	0x03421554 STRB W8, [X21 + 0x61E]
	0x03421558 LDR X0, [X22]
	0x0342155C LDR W8, [X0 + 0xE0]
	0x03421560 CBNZ W8, 0x3421568
	0x03421564 BL 0x1C16DFC
	0x03421568 ADD X0, X20, 0x8
	0x0342156C MOV X1, X19
	0x03421570 LDP X20, X19, [X31 + 0x20]
	0x03421574 LDP X22, X21, [X31 + 0x10]
	0x03421578 MOV X2, X31
	0x0342157C LDR X30, [X31], #0x30
	0x03421580 B 0x32C477C
	0x03421584 SUB X31, X31, 0x60
	0x03421588 STP X30, X27, [X31 + 0x10]
	0x0342158C STP X26, X25, [X31 + 0x20]
	0x03421590 STP X24, X23, [X31 + 0x30]
	0x03421594 STP X22, X21, [X31 + 0x40]
	0x03421598 STP X20, X19, [X31 + 0x50]
	0x0342159C ADRP X20, 0xFBC000
	0x034215A0 LDRB W8, [X20 + 0x61F]
	0x034215A4 MOV X19, X0
	0x034215A8 TBNZ X8, 0x0, 0x342168C
	0x034215AC ADRP X0, 0xD0D000
	0x034215B0 LDR X0, [X0 + 0xC68]
	0x034215B4 BL 0x1C16CF4
	0x034215B8 ADRP X0, 0xCD5000
	0x034215BC LDR X0, [X0 + 0x280]
	0x034215C0 BL 0x1C16CF4
	0x034215C4 ADRP X0, 0xCDB000
	0x034215C8 LDR X0, [X0 + 0x8D8]
	0x034215CC BL 0x1C16CF4
	0x034215D0 ADRP X0, 0xCD3000
	0x034215D4 LDR X0, [X0 + 0x810]
	0x034215D8 BL 0x1C16CF4
	0x034215DC ADRP X0, 0xCD3000
	0x034215E0 LDR X0, [X0 + 0x6C0]
	0x034215E4 BL 0x1C16CF4
	0x034215E8 ADRP X0, 0xCD3000
	0x034215EC LDR X0, [X0 + 0x6D0]
	0x034215F0 BL 0x1C16CF4
	0x034215F4 ADRP X0, 0xD0D000
	0x034215F8 LDR X0, [X0 + 0x7B8]
	0x034215FC BL 0x1C16CF4
	0x03421600 ADRP X0, 0xCD5000
	0x03421604 LDR X0, [X0 + 0x1E0]
	0x03421608 BL 0x1C16CF4
	0x0342160C ADRP X0, 0xCD5000
	0x03421610 LDR X0, [X0 + 0x1F0]
	0x03421614 BL 0x1C16CF4
	0x03421618 ADRP X0, 0xCD5000
	0x0342161C LDR X0, [X0 + 0x1F8]
	0x03421620 BL 0x1C16CF4
	0x03421624 ADRP X0, 0xCDB000
	0x03421628 LDR X0, [X0 + 0x3A0]
	0x0342162C BL 0x1C16CF4
	0x03421630 ADRP X0, 0xCD4000
	0x03421634 LDR X0, [X0 + 0xA28]
	0x03421638 BL 0x1C16CF4
	0x0342163C ADRP X0, 0xD0D000
	0x03421640 LDR X0, [X0 + 0x7D0]
	0x03421644 BL 0x1C16CF4
	0x03421648 ADRP X0, 0xD0D000
	0x0342164C LDR X0, [X0 + 0x7D8]
	0x03421650 BL 0x1C16CF4
	0x03421654 ADRP X0, 0xD0D000
	0x03421658 LDR X0, [X0 + 0xC70]
	0x0342165C BL 0x1C16CF4
	0x03421660 ADRP X0, 0xCD2000
	0x03421664 LDR X0, [X0 + 0x988]
	0x03421668 BL 0x1C16CF4
	0x0342166C ADRP X0, 0xCFB000
	0x03421670 LDR X0, [X0 + 0x4C8]
	0x03421674 BL 0x1C16CF4
	0x03421678 ADRP X0, 0xD0D000
	0x0342167C LDR X0, [X0 + 0xC78]
	0x03421680 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFBD000
	013 Move W8, [X20+1561]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {75}
	019 Move X0, 0xD0E000
	020 Move X0, [X0+3096]
	021 Call 0x1C17CF4
	022 Move X0, 0xCD6000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xCDC000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xCD4000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xCD4000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xCD4000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xD0E000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0xCD6000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xCD6000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xCD6000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xCDC000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xCD5000
	053 Move X0, [X0+2600]
	054 Call 0x1C17CF4
	055 Move X0, 0xD0E000
	056 Move X0, [X0+2000]
	057 Call 0x1C17CF4
	058 Move X0, 0xD0E000
	059 Move X0, [X0+3104]
	060 Call 0x1C17CF4
	061 Move X0, 0xD0E000
	062 Move X0, [X0+3112]
	063 Call 0x1C17CF4
	064 Move X0, 0xD0E000
	065 Move X0, [X0+2008]
	066 Call 0x1C17CF4
	067 Move X0, 0xCD3000
	068 Move X0, [X0+2440]
	069 Call 0x1C17CF4
	070 Move X0, 0xCFC000
	071 Move X0, [X0+1224]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+1561], W8
	075 Move [X31+8], X31
	076 Move X27, 0xCD6000
	077 Move W8, [X19]
	078 Move X27, [X27+640]
	079 Compare W8, 0
	080 JumpIfEqual {215}
	081 Move X21, [X19+32]
	082 Compare X21, 0
	083 JumpIfEqual {298}
	084 Move X8, 0xCD5000
	085 Move X8, [X8+2600]
	086 Move X0, [X8]
	087 Move X8, 0xD0E000
	088 Move X8, [X8+3112]
	089 Move X24, [X19+40]
	090 Move W9, [X0+224]
	091 Move X20, [X8]
	092 Compare W9, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X31
	097 Call Uri.EscapeDataString, X0
	098 Compare X20, 0
	099 JumpIfEqual {316}
	100 Move X8, 0xD0E000
	101 Move X8, [X8+3104]
	102 Move X2, X0
	103 Move X1, [X8]
	104 Move X0, X20
	105 Move X3, X31
	106 Call String.Replace, X0, X1, X2
	107 Compare X24, 0
	108 JumpIfEqual {317}
	109 Move X21, X0
	110 Move X0, [X24+32]
	111 Compare X0, 0
	112 JumpIfEqual {318}
	113 Move X8, 0xCD3000
	114 Move X8, [X8+2440]
	115 Move X20, [X8]
	116 Move X1, X31
	117 Call Uri.get_AbsolutePath, X0
	118 Move X8, 0xCDC000
	119 Move X8, [X8+2264]
	120 Move X22, X0
	121 Move X0, [X8]
	122 Move W1, 1
	123 Call 0x1C17D6C
	124 Move X1, X0
	125 Compare X1, 0
	126 JumpIfEqual {319}
	127 Move W8, [X1+24]
	128 Compare W8, 0
	129 JumpIfEqual {320}
	130 Move W8, 47
	131 NotImplemented "Instruction STRH not yet implemented."
	132 Compare X22, 0
	133 JumpIfEqual {321}
	134 Move X0, X22
	135 Move X2, X31
	136 Call String.TrimEnd, X0, X1
	137 Move X1, X21
	138 Move X2, X31
	139 Call String.Concat, X0, X1
	140 Move X8, 0xCDC000
	141 Move X8, [X8+928]
	142 Move X22, X0
	143 Move X23, [X24+32]
	144 Move X0, [X8]
	145 Call 0x1C17F10
	146 Move X21, X0
	147 Move X1, X23
	148 Move X2, X31
	149 Call UriBuilder..ctor, X0, X1
	150 Compare X21, 0
	151 JumpIfEqual {322}
	152 Move X0, X21
	153 Move X1, X22
	154 Move X2, X31
	155 Call UriBuilder.set_Path, X0, X1
	156 Move X0, X21
	157 Move X1, X20
	158 Move X2, X31
	159 Call UriBuilder.set_Query, X0, X1
	160 Move X0, X21
	161 Move X1, X31
	162 Call UriBuilder.get_Uri, X0
	163 Move X8, 0xCFC000
	164 Move X9, 0xCD4000
	165 Move X8, [X8+1224]
	166 Move X9, [X9+1744]
	167 Move X20, X0
	168 Move X21, [X8]
	169 Move X0, [X9]
	170 Call 0x1C17F10
	171 Move X8, 0xCD4000
	172 Move X8, [X8+1728]
	173 Move X22, X0
	174 Move X1, [X8]
	175 Call Dictionary`2<Object, Object>..ctor, X0
	176 Move X8, 0xD0E000
	177 Move X8, [X8+2008]
	178 Move X1, [X19+48]
	179 Move X0, [X8]
	180 Move X2, X31
	181 Call String.Concat, X0, X1
	182 Compare X22, 0
	183 JumpIfEqual {323}
	184 Move X8, 0xD0E000
	185 Move X8, [X8+2000]
	186 Move X9, 0xCD4000
	187 Move X9, [X9+2064]
	188 Move X2, X0
	189 Move X1, [X8]
	190 Move X3, [X9]
	191 Move X0, X22
	192 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	193 Move X23, [X24+16]
	194 Compare X23, 0
	195 JumpIfEqual {324}
	196 Move X10, 0xD0E000
	197 Move X10, [X10+1976]
	198 Move X8, [X23]
	199 Move W25, [X24+24]
	200 Move X26, [X19+56]
	201 Move X24, [X19+64]
	202 Move X1, [X10]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move W2, 3
	213 Move X0, X23
	214 Call 0x1C5D788
	215 Move X8, [X19+72]
	216 Move TEMP, 0
	217 Not TEMP
	218 Move W9, TEMP
	219 Move [X31+8], X8
	220 Move [X19+72], X31
	221 Move [X19], W9
	222 Move W9, [X10]
	223 Add W9, W9, 3
	224 Add X8, X8, W9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X9, [X0+8]
	228 Move X0, X23
	229 Move X1, X21
	230 Move X2, X20
	231 Move X3, X22
	232 Move X4, X31
	233 Move W5, W25
	234 Move X6, X26
	235 Move X7, X24
	236 Move [X31], X9
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X0, 0
	239 JumpIfEqual {325}
	240 Move X8, 0xCD6000
	241 Move X8, [X8+504]
	242 Move X1, [X8]
	243 Call Task`1<Object>.GetAwaiter, X0
	244 Move X8, 0xCD6000
	245 Move X8, [X8+496]
	246 Move [X31+8], X0
	247 Move X1, [X8]
	248 Add X0, X31, 8
	249 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {271}
	254 Move X8, 0xCD6000
	255 Move X8, [X8+480]
	256 Add X0, X31, 8
	257 Move X1, [X8]
	258 Call TaskAwaiter`1<Object>.GetResult, X0
	259 Move TEMP, 1
	260 Not TEMP
	261 Move W8, TEMP
	262 Move [X19+8], W8
	263 Move X0, [X27]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, X19
	269 Move X1, X31
	270 Call AsyncTaskMethodBuilder.SetResult, X0
	271 Move [X19], W31
	272 Move X8, [X31+8]
	273 Move [X19+72], X8
	274 Move X0, [X27]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X8, 0xD0E000
	280 Move X8, [X8+3096]
	281 Add X0, X19, 8
	282 Move X3, [X8]
	283 Add X1, X31, 8
	284 Move X2, X19
	285 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	286 Move X20, [X31+80]
	287 Move X19, [X31+88]
	288 Move X22, [X31+64]
	289 Move X21, [X31+72]
	290 Move X24, [X31+48]
	291 Move X23, [X31+56]
	292 Move X26, [X31+32]
	293 Move X25, [X31+40]
	294 Move X30, [X31+16]
	295 Move X27, [X31+24]
	296 Add X31, X31, 96
	297 Return 
	298 Move X0, 0xCDB000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xD0E000
	304 Move X0, [X0+3120]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xD0E000
	311 Move X0, [X0+3128]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F28
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Move X20, X0
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, X20
	329 Call 0x3EB2AD0
	330 Move X20, X0
	331 Move X0, 0xCD3000
	332 Move X0, [X0+2000]
	333 Call 0x1C17D08
	334 Move X8, [X20]
	335 Move X1, [X8]
	336 Call 0x1C18270
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {358}
	341 Move X20, [X20]
	342 Call 0x3EB2AE0
	343 Move TEMP, 1
	344 Not TEMP
	345 Move W8, TEMP
	346 Move [X19+8], W8
	347 Move X0, 0xCD6000
	348 Move X0, [X0+640]
	349 Call 0x1C17D08
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move X0, X19
	355 Move X1, X20
	356 Move X2, X31
	357 Call AsyncTaskMethodBuilder.SetException, X0, X1
	358 Move W0, 8
	359 Call 0x3EB2AF0
	360 Move X8, [X20]
	361 Move [X0], X8
	362 Move X1, 0xA94000
	363 Add X1, X1, 3672
	364 Move X2, X31
	365 Call 0x3EB2B00
	366 Move X20, X0
	367 Call 0x3EB2AE0
	368 Move X0, X20
	369 Call 0x1D2D690
	370 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03421684 MOVZ W8, 0x1
	0x03421688 STRB W8, [X20 + 0x61F]
	0x0342168C STR X31, [X31 + 0x8]
	0x03421690 ADRP X27, 0xCD5000
	0x03421694 LDR W8, [X19]
	0x03421698 LDR X27, [X27 + 0x280]
	0x0342169C CBZ W8, 0x3421890
	0x034216A0 LDR X21, [X19 + 0x20]
	0x034216A4 CBZ X21, 0x34219A4
	0x034216A8 ADRP X8, 0xCD4000
	0x034216AC LDR X8, [X8 + 0xA28]
	0x034216B0 LDR X0, [X8]
	0x034216B4 ADRP X8, 0xD0D000
	0x034216B8 LDR X8, [X8 + 0xC70]
	0x034216BC LDR X24, [X19 + 0x28]
	0x034216C0 LDR W9, [X0 + 0xE0]
	0x034216C4 LDR X20, [X8]
	0x034216C8 CBNZ W9, 0x34216D0
	0x034216CC BL 0x1C16DFC
	0x034216D0 MOV X0, X21
	0x034216D4 MOV X1, X31
	0x034216D8 BL 0x3624D20
	0x034216DC CBZ X20, 0x34219EC
	0x034216E0 ADRP X8, 0xD0D000
	0x034216E4 LDR X8, [X8 + 0xC78]
	0x034216E8 MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFBD000
	007 Move X22, 0xCD6000
	008 Move W8, [X21+1562]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD6000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1562], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

