Type: Nakama.ApiClient/<WriteStorageObjectsAsync>d__78

Method: System.Void MoveNext()

Disassembly:
	0x0343E688 BL 0x2AA5098
	0x0343E68C LDR X0, [X19 + 0x28]
	0x0343E690 MOV X1, X31
	0x0343E694 BL 0x3483BE4
	0x0343E698 MOV X23, X0
	0x0343E69C MOV X0, X31
	0x0343E6A0 BL 0x3241948
	0x0343E6A4 CBZ X0, 0x343E900
	0x0343E6A8 LDR X8, [X0]
	0x0343E6AC LDR X9, [X8 + 0x268]
	0x0343E6B0 LDR X2, [X8 + 0x270]
	0x0343E6B4 MOV X1, X23
	0x0343E6B8 BLR X9
	0x0343E6BC LDR X24, [X25 + 0x10]
	0x0343E6C0 CBZ X24, 0x343E904
	0x0343E6C4 ADRP X10, 0xCF0000
	0x0343E6C8 LDR X10, [X10 + 0x7B8]
	0x0343E6CC LDR X8, [X24]
	0x0343E6D0 LDR W26, [X25 + 0x18]
	0x0343E6D4 LDP X27, X25, [X19 + 0x40]
	0x0343E6D8 LDR X1, [X10]
	0x0343E6DC LDRH W9, [X8 + 0x12E]
	0x0343E6E0 MOV X23, X0
	0x0343E6E4 CBZ X9, 0x343E708
	0x0343E6E8 LDR X10, [X8 + 0xB0]
	0x0343E6EC ADD X10, X10, 0x8
	0x0343E6F0 LDUR X11, [X10 - 0x8]
	0x0343E6F4 CMP X11, X1
	0x0343E6F8 B.EQ 0x343E730
	0x0343E6FC SUBS X9, X9, 0x1
	0x0343E700 ADD X10, X10, 0x10
	0x0343E704 B.NE 0x343E6F0
	0x0343E708 MOVZ W2, 0x3
	0x0343E70C MOV X0, X24
	0x0343E710 BL 0x1C5C788
	0x0343E714 B 0x343E740
	0x0343E718 LDR X8, [X19 + 0x50]
	0x0343E71C MOVN W9, 0x0
	0x0343E720 STR X8, [X31 + 0x18]
	0x0343E724 STR X31, [X19 + 0x50]
	0x0343E728 STR W9, [X19]
	0x0343E72C B 0x343E79C
	0x0343E730 LDR W9, [X10]
	0x0343E734 ADD W9, W9, 0x3
	0x0343E738 ADD X8, X8, W9, 0x4, SXTW
	0x0343E73C ADD X0, X8, 0x138
	0x0343E740 LDP X8, X9, [X0]
	0x0343E744 MOV X0, X24
	0x0343E748 MOV X1, X21
	0x0343E74C MOV X2, X20
	0x0343E750 MOV X3, X22
	0x0343E754 MOV X4, X23
	0x0343E758 MOV W5, W26
	0x0343E75C MOV X6, X27
	0x0343E760 MOV X7, X25
	0x0343E764 STR X9, [X31]
	0x0343E768 BLR X8
	0x0343E76C CBZ X0, 0x343E908
	0x0343E770 ADRP X8, 0xCB8000
	0x0343E774 LDR X8, [X8 + 0x1F8]
	0x0343E778 LDR X1, [X8]
	0x0343E77C BL 0x269F5D0
	0x0343E780 ADRP X8, 0xCB8000
	0x0343E784 LDR X8, [X8 + 0x1F0]
	0x0343E788 STR X0, [X31 + 0x18]
	0x0343E78C LDR X1, [X8]
	0x0343E790 ADD X0, X31, 0x18
	0x0343E794 BL 0x2677430
	0x0343E798 TBZ X0, 0x0, 0x343E7F8
	0x0343E79C ADRP X8, 0xCB8000
	0x0343E7A0 LDR X8, [X8 + 0x1E0]
	0x0343E7A4 ADD X0, X31, 0x18
	0x0343E7A8 LDR X1, [X8]
	0x0343E7AC BL 0x2677474
	0x0343E7B0 ADRP X8, 0xCF1000
	0x0343E7B4 LDR X8, [X8 + 0x530]
	0x0343E7B8 LDR X1, [X8]
	0x0343E7BC BL 0x220E6DC
	0x0343E7C0 MOVN W8, 0x1
	0x0343E7C4 STR W8, [X19], #0x8
	0x0343E7C8 MOV X20, X0
	0x0343E7CC LDR X0, [X28]
	0x0343E7D0 ADRP X21, 0xCF1000
	0x0343E7D4 LDR W8, [X0 + 0xE0]
	0x0343E7D8 LDR X21, [X21 + 0x528]
	0x0343E7DC CBNZ W8, 0x343E7E4
	0x0343E7E0 BL 0x1C16DFC
	0x0343E7E4 LDR X2, [X21]
	0x0343E7E8 MOV X0, X19
	0x0343E7EC MOV X1, X20
	0x0343E7F0 BL 0x26322B0
	0x0343E7F4 B 0x343E830
	0x0343E7F8 STR W31, [X19]
	0x0343E7FC LDR X8, [X31 + 0x18]
	0x0343E800 STR X8, [X19 + 0x50]
	0x0343E804 LDR X0, [X28]
	0x0343E808 LDR W8, [X0 + 0xE0]
	0x0343E80C CBNZ W8, 0x343E814
	0x0343E810 BL 0x1C16DFC
	0x0343E814 ADRP X8, 0xCF1000
	0x0343E818 LDR X8, [X8 + 0x598]
	0x0343E81C ADD X0, X19, 0x8
	0x0343E820 LDR X3, [X8]
	0x0343E824 ADD X1, X31, 0x18
	0x0343E828 MOV X2, X19
	0x0343E82C BL 0x1FB6D8C
	0x0343E830 LDP X20, X19, [X31 + 0x60]
	0x0343E834 LDP X22, X21, [X31 + 0x50]
	0x0343E838 LDP X24, X23, [X31 + 0x40]
	0x0343E83C LDP X26, X25, [X31 + 0x30]
	0x0343E840 LDP X28, X27, [X31 + 0x20]
	0x0343E844 LDR X30, [X31 + 0x10]
	0x0343E848 ADD X31, X31, 0x70
	0x0343E84C RET
	0x0343E850 ADRP X0, 0xCBD000
	0x0343E854 LDR X0, [X0 + 0x578]
	0x0343E858 BL 0x1C16D08
	0x0343E85C BL 0x1C16F10
	0x0343E860 MOV X20, X0
	0x0343E864 ADRP X0, 0xCF0000
	0x0343E868 LDR X0, [X0 + 0xC80]
	0x0343E86C BL 0x1C16D08
	0x0343E870 MOV X1, X0
	0x0343E874 MOV X0, X20
	0x0343E878 MOV X2, X31
	0x0343E87C BL 0x3314A68
	0x0343E880 ADRP X0, 0xCF1000
	0x0343E884 LDR X0, [X0 + 0x5A0]
	0x0343E888 BL 0x1C16D08
	0x0343E88C MOV X1, X0
	0x0343E890 MOV X0, X20
	0x0343E894 BL 0x1C16DEC
	0x0343E898 ADRP X0, 0xCBD000
	0x0343E89C LDR X0, [X0 + 0x578]
	0x0343E8A0 BL 0x1C16D08
	0x0343E8A4 BL 0x1C16F10
	0x0343E8A8 MOV X20, X0
	0x0343E8AC ADRP X0, 0xCF1000
	0x0343E8B0 LDR X0, [X0 + 0x540]
	0x0343E8B4 BL 0x1C16D08
	0x0343E8B8 MOV X1, X0
	0x0343E8BC MOV X0, X20
	0x0343E8C0 MOV X2, X31
	0x0343E8C4 BL 0x3314A68
	0x0343E8C8 ADRP X0, 0xCF1000
	0x0343E8CC LDR X0, [X0 + 0x5A0]
	0x0343E8D0 BL 0x1C16D08
	0x0343E8D4 MOV X1, X0
	0x0343E8D8 MOV X0, X20
	0x0343E8DC BL 0x1C16DEC
	0x0343E8E0 BL 0x1C16F20
	0x0343E8E4 BL 0x1C16F20
	0x0343E8E8 BL 0x1C16F20
	0x0343E8EC BL 0x1C16F20
	0x0343E8F0 BL 0x1C16F28
	0x0343E8F4 BL 0x1C16F20
	0x0343E8F8 BL 0x1C16F20
	0x0343E8FC BL 0x1C16F20
	0x0343E900 BL 0x1C16F20
	0x0343E904 BL 0x1C16F20
	0x0343E908 BL 0x1C16F20
	0x0343E90C B 0x343E980
	0x0343E910 B 0x343E980
	0x0343E914 B 0x343E980
	0x0343E918 B 0x343E980
	0x0343E91C B 0x343E980
	0x0343E920 B 0x343E980
	0x0343E924 B 0x343E980
	0x0343E928 B 0x343E980
	0x0343E92C B 0x343E980
	0x0343E930 B 0x343E980
	0x0343E934 B 0x343E980
	0x0343E938 B 0x343E980
	0x0343E93C B 0x343E980
	0x0343E940 B 0x343E980
	0x0343E944 B 0x343E980
	0x0343E948 B 0x343E980
	0x0343E94C B 0x343E980
	0x0343E950 B 0x343E980
	0x0343E954 B 0x343E980
	0x0343E958 B 0x343E980
	0x0343E95C B 0x343E980
	0x0343E960 B 0x343E980
	0x0343E964 B 0x343E980
	0x0343E968 B 0x343E980
	0x0343E96C B 0x343E980
	0x0343E970 B 0x343E980
	0x0343E974 B 0x343E980
	0x0343E978 B 0x343E980
	0x0343E97C B 0x343E980
	0x0343E980 MOV X20, X0
	0x0343E984 CMP W1, 0x1
	0x0343E988 B.NE 0x343EA24
	0x0343E98C MOV X0, X20
	0x0343E990 BL 0x3EB1AD0
	0x0343E994 MOV X20, X0
	0x0343E998 ADRP X0, 0xCB5000
	0x0343E99C LDR X0, [X0 + 0x7D0]
	0x0343E9A0 BL 0x1C16D08
	0x0343E9A4 LDR X8, [X20]
	0x0343E9A8 LDR X1, [X8]
	0x0343E9AC BL 0x1C17270
	0x0343E9B0 TBZ X0, 0x0, 0x343E9FC
	0x0343E9B4 LDR X20, [X20]
	0x0343E9B8 BL 0x3EB1AE0
	0x0343E9BC MOVN W8, 0x1
	0x0343E9C0 STR W8, [X19], #0x8
	0x0343E9C4 ADRP X0, 0xCF0000
	0x0343E9C8 LDR X0, [X0 + 0x5F8]
	0x0343E9CC BL 0x1C16D08
	0x0343E9D0 LDR W8, [X0 + 0xE0]
	0x0343E9D4 CBNZ W8, 0x343E9DC
	0x0343E9D8 BL 0x1C16DFC
	0x0343E9DC ADRP X0, 0xCF1000
	0x0343E9E0 LDR X0, [X0 + 0x548]
	0x0343E9E4 BL 0x1C16D08
	0x0343E9E8 MOV X2, X0
	0x0343E9EC MOV X0, X19
	0x0343E9F0 MOV X1, X20
	0x0343E9F4 BL 0x26324C8
	0x0343E9F8 B 0x343E830
	0x0343E9FC MOVZ W0, 0x8
	0x0343EA00 BL 0x3EB1AF0
	0x0343EA04 LDR X8, [X20]
	0x0343EA08 STR X8, [X0]
	0x0343EA0C ADRP X1, 0xA76000
	0x0343EA10 ADD X1, X1, 0xE58
	0x0343EA14 MOV X2, X31
	0x0343EA18 BL 0x3EB1B00
	0x0343EA1C MOV X20, X0
	0x0343EA20 BL 0x3EB1AE0
	0x0343EA24 MOV X0, X20
	0x0343EA28 BL 0x1D2C690
	0x0343EA2C BL 0x1990590
	0x0343EA30 STR X30, [X31 - 0x30]!
	0x0343EA34 STP X22, X21, [X31 + 0x10]
	0x0343EA38 STP X20, X19, [X31 + 0x20]
	0x0343EA3C ADRP X22, 0xF9F000
	0x0343EA40 ADRP X21, 0xCF0000
	0x0343EA44 LDRB W8, [X22 + 0x69E]
	0x0343EA48 LDR X21, [X21 + 0x5F8]
	0x0343EA4C MOV X19, X1
	0x0343EA50 MOV X20, X0
	0x0343EA54 TBNZ X8, 0x0, 0x343EA78
	0x0343EA58 ADRP X0, 0xCF1000
	0x0343EA5C LDR X0, [X0 + 0x550]
	0x0343EA60 BL 0x1C16CF4
	0x0343EA64 ADRP X0, 0xCF0000
	0x0343EA68 LDR X0, [X0 + 0x5F8]
	0x0343EA6C BL 0x1C16CF4
	0x0343EA70 MOVZ W8, 0x1
	0x0343EA74 STRB W8, [X22 + 0x69E]
	0x0343EA78 LDR X0, [X21]
	0x0343EA7C ADRP X21, 0xCF1000
	0x0343EA80 LDR W8, [X0 + 0xE0]
	0x0343EA84 LDR X21, [X21 + 0x550]
	0x0343EA88 CBNZ W8, 0x343EA90
	0x0343EA8C BL 0x1C16DFC
	0x0343EA90 LDR X2, [X21]
	0x0343EA94 ADD X0, X20, 0x8
	0x0343EA98 MOV X1, X19
	0x0343EA9C LDP X20, X19, [X31 + 0x20]
	0x0343EAA0 LDP X22, X21, [X31 + 0x10]
	0x0343EAA4 LDR X30, [X31], #0x30
	0x0343EAA8 B 0x2632228
	0x0343EAAC LDRB W0, [X0 + 0x10]
	0x0343EAB0 RET
	0x0343EAB4 AND W8, W1, 0x1
	0x0343EAB8 STRB W8, [X0 + 0x10]
	0x0343EABC RET
	0x0343EAC0 LDRB W0, [X0 + 0x11]
	0x0343EAC4 RET
	0x0343EAC8 AND W8, W1, 0x1
	0x0343EACC STRB W8, [X0 + 0x11]
	0x0343EAD0 RET
	0x0343EAD4 LDR X0, [X0 + 0x18]
	0x0343EAD8 RET
	0x0343EADC STR X1, [X0 + 0x18]
	0x0343EAE0 RET
	0x0343EAE4 LDR W0, [X0 + 0x20]
	0x0343EAE8 RET
	0x0343EAEC STR W1, [X0 + 0x20]
	0x0343EAF0 RET
	0x0343EAF4 SUB X31, X31, 0x40
	0x0343EAF8 STR X30, [X31 + 0x10]
	0x0343EAFC STP X22, X21, [X31 + 0x20]
	0x0343EB00 STP X20, X19, [X31 + 0x30]
	0x0343EB04 ADRP X20, 0xF9F000
	0x0343EB08 ADRP X21, 0xCB5000
	0x0343EB0C ADRP X22, 0xCB5000
	0x0343EB10 LDRB W8, [X20 + 0x69F]
	0x0343EB14 LDR X21, [X21 + 0x9D0]
	0x0343EB18 LDR X22, [X22 + 0xB58]
	0x0343EB1C MOV X19, X0
	0x0343EB20 TBNZ X8, 0x0, 0x343EB5C
	0x0343EB24 ADRP X0, 0xCB5000
	0x0343EB28 LDR X0, [X0 + 0xB58]
	0x0343EB2C BL 0x1C16CF4
	0x0343EB30 ADRP X0, 0xCB5000
	0x0343EB34 LDR X0, [X0 + 0x758]
	0x0343EB38 BL 0x1C16CF4
	0x0343EB3C ADRP X0, 0xCB5000
	0x0343EB40 LDR X0, [X0 + 0x9D0]
	0x0343EB44 BL 0x1C16CF4
	0x0343EB48 ADRP X0, 0xCF1000
	0x0343EB4C LDR X0, [X0 + 0x5A8]
	0x0343EB50 BL 0x1C16CF4
	0x0343EB54 MOVZ W8, 0x1
	0x0343EB58 STRB W8, [X20 + 0x69F]
	0x0343EB5C LDR X0, [X21]
	0x0343EB60 MOVZ W1, 0x4
	0x0343EB64 BL 0x1C16D6C
	0x0343EB68 MOV X20, X0
	0x0343EB6C LDRB W8, [X19 + 0x10]
	0x0343EB70 LDR X0, [X22]
	0x0343EB74 ADD X1, X31, 0x1C
	0x0343EB78 STRB W8, [X31 + 0x1C]
	0x0343EB7C BL 0x1C16E04
	0x0343EB80 CBZ X20, 0x343EC9C
	0x0343EB84 MOV X21, X0
	0x0343EB88 CBZ X0, 0x343EBA0
	0x0343EB8C LDR X8, [X20]
	0x0343EB90 MOV X0, X21
	0x0343EB94 LDR X1, [X8 + 0x40]
	0x0343EB98 BL 0x1C16E00
	0x0343EB9C CBZ X0, 0x343EC90
	0x0343EBA0 LDR W8, [X20 + 0x18]
	0x0343EBA4 CBZ W8, 0x343EC8C
	0x0343EBA8 STR X21, [X20 + 0x20]
	0x0343EBAC LDRB W8, [X19 + 0x11]
	0x0343EBB0 LDR X0, [X22]
	0x0343EBB4 ADD X1, X31, 0x18
	0x0343EBB8 STRB W8, [X31 + 0x18]
	0x0343EBBC BL 0x1C16E04
	0x0343EBC0 MOV X21, X0
	0x0343EBC4 CBZ X0, 0x343EBDC
	0x0343EBC8 LDR X8, [X20]
	0x0343EBCC MOV X0, X21
	0x0343EBD0 LDR X1, [X8 + 0x40]
	0x0343EBD4 BL 0x1C16E00
	0x0343EBD8 CBZ X0, 0x343EC90
	0x0343EBDC LDR W8, [X20 + 0x18]
	0x0343EBE0 CMP W8, 0x1
	0x0343EBE4 B.LS 0x343EC8C
	0x0343EBE8 STR X21, [X20 + 0x28]
	0x0343EBEC LDR X21, [X19 + 0x18]
	0x0343EBF0 CBZ X21, 0x343EC0C
	0x0343EBF4 LDR X8, [X20]
	0x0343EBF8 MOV X0, X21
	0x0343EBFC LDR X1, [X8 + 0x40]
	0x0343EC00 BL 0x1C16E00
	0x0343EC04 CBZ X0, 0x343EC90
	0x0343EC08 LDR W8, [X20 + 0x18]
	0x0343EC0C CMP W8, 0x2
	0x0343EC10 B.LS 0x343EC8C
	0x0343EC14 ADRP X8, 0xCB5000
	0x0343EC18 LDR X8, [X8 + 0x758]
	0x0343EC1C STR X21, [X20 + 0x30]
	0x0343EC20 LDR W9, [X19 + 0x20]
	0x0343EC24 ADD X1, X31, 0xC
	0x0343EC28 LDR X0, [X8]
	0x0343EC2C STR W9, [X31 + 0xC]
	0x0343EC30 BL 0x1C16E04
	0x0343EC34 MOV X19, X0
	0x0343EC38 CBZ X0, 0x343EC50
	0x0343EC3C LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA0000
	014 Move W8, [X20+1689]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xCF2000
	021 Move X0, [X0+1368]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF2000
	024 Move X0, [X0+1376]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF1000
	027 Move X0, [X0+1720]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBF000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCB7000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB7000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB7000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF1000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF2000
	045 Move X0, [X0+1384]
	046 Call 0x1C17CF4
	047 Move X0, 0xCB9000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCB9000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCB9000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCBF000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCDF000
	060 Move X0, [X0+1248]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF1000
	063 Move X0, [X0+2000]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF1000
	066 Move X0, [X0+2008]
	067 Call 0x1C17CF4
	068 Move X0, 0xCB6000
	069 Move X0, [X0+2440]
	070 Call 0x1C17CF4
	071 Move X0, 0xCF2000
	072 Move X0, [X0+664]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1689], W8
	076 Move [X31+24], X31
	077 Move X28, 0xCF1000
	078 Move W8, [X19]
	079 Move X28, [X28+1720]
	080 Compare W8, 0
	081 JumpIfEqual {210}
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {302}
	085 Move X25, [X19+40]
	086 Compare X25, 0
	087 JumpIfEqual {320}
	088 Move X0, [X25+32]
	089 Compare X0, 0
	090 JumpIfEqual {321}
	091 Move X8, 0xCF2000
	092 Move X9, 0xCB6000
	093 Move X8, [X8+664]
	094 Move X9, [X9+2440]
	095 Move X21, [X8]
	096 Move X20, [X9]
	097 Move X1, X31
	098 Call Uri.get_AbsolutePath, X0
	099 Move X8, 0xCBF000
	100 Move X8, [X8+2264]
	101 Move X22, X0
	102 Move X0, [X8]
	103 Move W1, 1
	104 Call 0x1C17D6C
	105 Move X1, X0
	106 Compare X1, 0
	107 JumpIfEqual {322}
	108 Move W8, [X1+24]
	109 Compare W8, 0
	110 JumpIfEqual {323}
	111 Move W8, 47
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Compare X22, 0
	114 JumpIfEqual {324}
	115 Move X0, X22
	116 Move X2, X31
	117 Call String.TrimEnd, X0, X1
	118 Move X1, X21
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X8, 0xCBF000
	122 Move X8, [X8+928]
	123 Move X22, X0
	124 Move X23, [X25+32]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move X1, X23
	129 Move X2, X31
	130 Call UriBuilder..ctor, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {325}
	133 Move X0, X21
	134 Move X1, X22
	135 Move X2, X31
	136 Call UriBuilder.set_Path, X0, X1
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Call UriBuilder.set_Query, X0, X1
	141 Move X0, X21
	142 Move X1, X31
	143 Call UriBuilder.get_Uri, X0
	144 Move X8, 0xCDF000
	145 Move X9, 0xCB7000
	146 Move X8, [X8+1248]
	147 Move X9, [X9+1744]
	148 Move X20, X0
	149 Move X21, [X8]
	150 Move X0, [X9]
	151 Call 0x1C17F10
	152 Move X8, 0xCB7000
	153 Move X8, [X8+1728]
	154 Move X22, X0
	155 Move X1, [X8]
	156 Call Dictionary`2<Object, Object>..ctor, X0
	157 Move X8, 0xCF1000
	158 Move X8, [X8+2008]
	159 Move X1, [X19+48]
	160 Move X0, [X8]
	161 Move X2, X31
	162 Call String.Concat, X0, X1
	163 Compare X22, 0
	164 JumpIfEqual {326}
	165 Move X8, 0xCF1000
	166 Move X8, [X8+2000]
	167 Move X9, 0xCB7000
	168 Move X9, [X9+2064]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X22
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X19+32]
	175 Move X1, X31
	176 Call JsonWriter.ToJson, X0
	177 Move X23, X0
	178 Move X0, X31
	179 Call Encoding.get_UTF8
	180 Compare X0, 0
	181 JumpIfEqual {327}
	182 Move X8, [X0]
	183 Move X9, [X8+616]
	184 Move X2, [X8+624]
	185 Move X1, X23
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X24, [X25+16]
	188 Compare X24, 0
	189 JumpIfEqual {328}
	190 Move X10, 0xCF1000
	191 Move X10, [X10+1976]
	192 Move X8, [X24]
	193 Move W26, [X25+24]
	194 Move X27, [X19+56]
	195 Move X25, [X19+64]
	196 Move X1, [X10]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X23, X0
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 3
	208 Move X0, X24
	209 Call 0x1C5D788
	210 Move X8, [X19+72]
	211 Move TEMP, 0
	212 Not TEMP
	213 Move W9, TEMP
	214 Move [X31+24], X8
	215 Move [X19+72], X31
	216 Move [X19], W9
	217 Move W9, [X10]
	218 Add W9, W9, 3
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X9, [X0+8]
	223 Move X0, X24
	224 Move X1, X21
	225 Move X2, X20
	226 Move X3, X22
	227 Move X4, X23
	228 Move W5, W26
	229 Move X6, X27
	230 Move X7, X25
	231 Move [X31], X9
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X0, 0
	234 JumpIfEqual {329}
	235 Move X8, 0xCB9000
	236 Move X8, [X8+504]
	237 Move X1, [X8]
	238 Call Task`1<Object>.GetAwaiter, X0
	239 Move X8, 0xCB9000
	240 Move X8, [X8+496]
	241 Move [X31+24], X0
	242 Move X1, [X8]
	243 Add X0, X31, 24
	244 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {274}
	249 Move X8, 0xCB9000
	250 Move X8, [X8+480]
	251 Add X0, X31, 24
	252 Move X1, [X8]
	253 Call TaskAwaiter`1<Object>.GetResult, X0
	254 Move X8, 0xCF2000
	255 Move X8, [X8+1384]
	256 Move X1, [X8]
	257 Call JsonParser.FromJson, X0
	258 Move TEMP, 1
	259 Not TEMP
	260 Move W8, TEMP
	261 Move [X19+8], W8
	262 Move X20, X0
	263 Move X0, [X28]
	264 Move X21, 0xCF2000
	265 Move W8, [X0+224]
	266 Move X21, [X21+1376]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X2, [X21]
	271 Move X0, X19
	272 Move X1, X20
	273 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	274 Move [X19], W31
	275 Move X8, [X31+24]
	276 Move [X19+72], X8
	277 Move X0, [X28]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, 0xCF2000
	283 Move X8, [X8+1368]
	284 Add X0, X19, 8
	285 Move X3, [X8]
	286 Add X1, X31, 24
	287 Move X2, X19
	288 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	289 Move X20, [X31+96]
	290 Move X19, [X31+104]
	291 Move X22, [X31+80]
	292 Move X21, [X31+88]
	293 Move X24, [X31+64]
	294 Move X23, [X31+72]
	295 Move X26, [X31+48]
	296 Move X25, [X31+56]
	297 Move X28, [X31+32]
	298 Move X27, [X31+40]
	299 Move X30, [X31+16]
	300 Add X31, X31, 112
	301 Return 
	302 Move X0, 0xCBE000
	303 Move X0, [X0+1400]
	304 Call 0x1C17D08
	305 Call 0x1C17F10
	306 Move X20, X0
	307 Move X0, 0xCF1000
	308 Move X0, [X0+3016]
	309 Call 0x1C17D08
	310 Move X1, X0
	311 Move X0, X20
	312 Move X2, X31
	313 Call ArgumentException..ctor, X0, X1
	314 Move X0, 0xCF2000
	315 Move X0, [X0+1392]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X0, X20
	319 Call 0x1C17DEC
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F28
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X20, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X20
	333 Call 0x3EB2AD0
	334 Move X20, X0
	335 Move X0, 0xCB6000
	336 Move X0, [X0+2000]
	337 Call 0x1C17D08
	338 Move X8, [X20]
	339 Move X1, [X8]
	340 Call 0x1C18270
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {365}
	345 Move X20, [X20]
	346 Call 0x3EB2AE0
	347 Move TEMP, 1
	348 Not TEMP
	349 Move W8, TEMP
	350 Move [X19+8], W8
	351 Move X0, 0xCF1000
	352 Move X0, [X0+1720]
	353 Call 0x1C17D08
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, 0xCF2000
	359 Move X0, [X0+1400]
	360 Call 0x1C17D08
	361 Move X2, X0
	362 Move X0, X19
	363 Move X1, X20
	364 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	365 Move W0, 8
	366 Call 0x3EB2AF0
	367 Move X8, [X20]
	368 Move [X0], X8
	369 Move X1, 0xA77000
	370 Add X1, X1, 3672
	371 Move X2, X31
	372 Call 0x3EB2B00
	373 Move X20, X0
	374 Call 0x3EB2AE0
	375 Move X0, X20
	376 Call 0x1D2D690
	377 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343EC40 MOV X0, X19
	0x0343EC44 LDR X1, [X8 + 0x40]
	0x0343EC48 BL 0x1C16E00
	0x0343EC4C CBZ X0, 0x343EC90
	0x0343EC50 LDR W8, [X20 + 0x18]
	0x0343EC54 CMP W8, 0x3
	0x0343EC58 B.LS 0x343EC8C
	0x0343EC5C ADRP X8, 0xCF1000
	0x0343EC60 LDR X8, [X8 + 0x5A8]
	0x0343EC64 STR X19, [X20 + 0x38]
	0x0343EC68 MOV X1, X20
	0x0343EC6C MOV X2, X31
	0x0343EC70 LDR X0, [X8]
	0x0343EC74 BL 0x3227C5C
	0x0343EC78 LDP X20, X19, [X31 + 0x30]
	0x0343EC7C LDP X22, X21, [X31 + 0x20]
	0x0343EC80 LDR X30, [X31 + 0x10]
	0x0343EC84 ADD X31, X31, 0x40
	0x0343EC88 RET
	0x0343EC8C BL 0x1C16F28
	0x0343EC90 BL 0x1C16F44
	0x0343EC94 MOV X1, X31
	0x0343EC98 BL 0x1C16DEC
	0x0343EC9C BL 0x1C16F20
	0x0343ECA0 MOV X1, X31
	0x0343ECA4 B 0x33BDD8C
	0x0343ECA8 LDR X0, [X0 + 0x10]
	0x0343ECAC RET
	0x0343ECB0 STR X1, [X0 + 0x10]
	0x0343ECB4 RET
	0x0343ECB8 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA0000
	007 Move X21, 0xCF1000
	008 Move W8, [X22+1690]
	009 Move X21, [X21+1720]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF2000
	017 Move X0, [X0+1408]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF1000
	020 Move X0, [X0+1720]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1690], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1408]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

