Type: Nakama.Client/<UpdateGroupAsync>d__118

Method: System.Void MoveNext()

Disassembly:
	0x0346D2A0 LDR W9, [X0 + 0xE0]
	0x0346D2A4 CBNZ W9, 0x346D2AC
	0x0346D2A8 BL 0x1C16DFC
	0x0346D2AC MOV X0, X31
	0x0346D2B0 BL 0x33616A4
	0x0346D2B4 ADRP X22, 0xC88000
	0x0346D2B8 LDR X22, [X22 + 0xA10]
	0x0346D2BC MOV X8, X0
	0x0346D2C0 STR X8, [X31 + 0x28]
	0x0346D2C4 LDR X0, [X22]
	0x0346D2C8 LDR W8, [X0 + 0xE0]
	0x0346D2CC CBNZ W8, 0x346D2D8
	0x0346D2D0 BL 0x1C16DFC
	0x0346D2D4 LDR X0, [X22]
	0x0346D2D8 LDR X8, [X0 + 0xB8]
	0x0346D2DC LDR X1, [X8]
	0x0346D2E0 ADD X0, X31, 0x28
	0x0346D2E4 MOV X2, X31
	0x0346D2E8 BL 0x335FC68
	0x0346D2EC CBZ X21, 0x346D594
	0x0346D2F0 LDR X8, [X21]
	0x0346D2F4 LDR X1, [X23]
	0x0346D2F8 MOV X22, X0
	0x0346D2FC LDRH W9, [X8 + 0x12E]
	0x0346D300 CBZ X9, 0x346D324
	0x0346D304 LDR X10, [X8 + 0xB0]
	0x0346D308 ADD X10, X10, 0x8
	0x0346D30C LDUR X11, [X10 - 0x8]
	0x0346D310 CMP X11, X1
	0x0346D314 B.EQ 0x346D334
	0x0346D318 SUBS X9, X9, 0x1
	0x0346D31C ADD X10, X10, 0x10
	0x0346D320 B.NE 0x346D30C
	0x0346D324 MOVZ W2, 0xB
	0x0346D328 MOV X0, X21
	0x0346D32C BL 0x1C5C788
	0x0346D330 B 0x346D344
	0x0346D334 LDR W9, [X10]
	0x0346D338 ADD W9, W9, 0xB
	0x0346D33C ADD X8, X8, W9, 0x4, SXTW
	0x0346D340 ADD X0, X8, 0x138
	0x0346D344 LDP X8, X2, [X0]
	0x0346D348 MOV X0, X21
	0x0346D34C MOV X1, X22
	0x0346D350 BLR X8
	0x0346D354 TBZ X0, 0x0, 0x346D3E8
	0x0346D358 LDR X8, [X19 + 0x50]
	0x0346D35C CBZ X8, 0x346D598
	0x0346D360 LDR X1, [X8 + 0x18]
	0x0346D364 LDR X3, [X19 + 0x48]
	0x0346D368 LDR X4, [X8 + 0x30]
	0x0346D36C MOV X0, X20
	0x0346D370 MOV X2, X31
	0x0346D374 MOV X5, X31
	0x0346D378 BL 0x34440A8
	0x0346D37C CBZ X0, 0x346D59C
	0x0346D380 ADRP X8, 0xC87000
	0x0346D384 LDR X8, [X8 + 0x840]
	0x0346D388 LDR X1, [X8]
	0x0346D38C BL 0x269F5D0
	0x0346D390 ADRP X8, 0xC87000
	0x0346D394 LDR X8, [X8 + 0x838]
	0x0346D398 STR X0, [X31 + 0x20]
	0x0346D39C LDR X1, [X8]
	0x0346D3A0 ADD X0, X31, 0x20
	0x0346D3A4 BL 0x2677430
	0x0346D3A8 TBNZ X0, 0x0, 0x346D198
	0x0346D3AC STR W31, [X19]
	0x0346D3B0 LDR X8, [X31 + 0x20]
	0x0346D3B4 STR X8, [X19 + 0x58]
	0x0346D3B8 LDR X0, [X25]
	0x0346D3BC LDR W8, [X0 + 0xE0]
	0x0346D3C0 CBNZ W8, 0x346D3C8
	0x0346D3C4 BL 0x1C16DFC
	0x0346D3C8 ADRP X8, 0xCC3000
	0x0346D3CC LDR X8, [X8 + 0x630]
	0x0346D3D0 ADD X0, X19, 0x8
	0x0346D3D4 LDR X3, [X8]
	0x0346D3D8 ADD X1, X31, 0x20
	0x0346D3DC MOV X2, X19
	0x0346D3E0 BL 0x1FBDBC8
	0x0346D3E4 B 0x346D558
	0x0346D3E8 CBZ X20, 0x346D57C
	0x0346D3EC ADRP X8, 0xCC3000
	0x0346D3F0 LDR X8, [X8 + 0x5F0]
	0x0346D3F4 LDR X21, [X20 + 0x58]
	0x0346D3F8 LDR X23, [X19 + 0x50]
	0x0346D3FC LDR X0, [X8]
	0x0346D400 BL 0x1C16F10
	0x0346D404 ADRP X8, 0xCC3000
	0x0346D408 LDR X8, [X8 + 0x638]
	0x0346D40C MOV X22, X0
	0x0346D410 LDR X2, [X8]
	0x0346D414 MOV X1, X23
	0x0346D418 MOV X3, X31
	0x0346D41C BL 0x2D27AA8
	0x0346D420 LDR X8, [X19 + 0x50]
	0x0346D424 CBZ X8, 0x346D570
	0x0346D428 ADRP X9, 0xCC2000
	0x0346D42C LDR X23, [X19 + 0x48]
	0x0346D430 LDR X9, [X9 + 0x7C8]
	0x0346D434 CBNZ X23, 0x346D43C
	0x0346D438 LDR X23, [X20 + 0x18]
	0x0346D43C LDR X20, [X8 + 0x18]
	0x0346D440 LDR X1, [X8 + 0x30]
	0x0346D444 LDR X2, [X9]
	0x0346D448 STP X31, X31, [X31 + 0x8]
	0x0346D44C ADD X0, X31, 0x8
	0x0346D450 BL 0x242E368
	0x0346D454 ADRP X8, 0xCC2000
	0x0346D458 LDR X8, [X8 + 0x7D0]
	0x0346D45C LDR X0, [X8]
	0x0346D460 BL 0x1C16F10
	0x0346D464 LDP X3, X4, [X31 + 0x8]
	0x0346D468 MOV X24, X0
	0x0346D46C MOV X1, X20
	0x0346D470 MOV X2, X23
	0x0346D474 BL 0x3465404
	0x0346D478 CBZ X21, 0x346D574
	0x0346D47C ADRP X8, 0xCC3000
	0x0346D480 LDR X8, [X8 + 0x5F8]
	0x0346D484 LDR X3, [X8]
	0x0346D488 MOV X0, X21
	0x0346D48C MOV X1, X22
	0x0346D490 MOV X2, X24
	0x0346D494 BL 0x2243230
	0x0346D498 CBZ X0, 0x346D578
	0x0346D49C ADRP X8, 0xCC3000
	0x0346D4A0 LDR X8, [X8 + 0x610]
	0x0346D4A4 LDR X1, [X8]
	0x0346D4A8 BL 0x269F5D0
	0x0346D4AC ADRP X8, 0xCC3000
	0x0346D4B0 LDR X8, [X8 + 0x608]
	0x0346D4B4 STR X0, [X31 + 0x18]
	0x0346D4B8 LDR X1, [X8]
	0x0346D4BC ADD X0, X31, 0x18
	0x0346D4C0 BL 0x2677430
	0x0346D4C4 TBZ X0, 0x0, 0x346D51C
	0x0346D4C8 ADRP X8, 0xCC3000
	0x0346D4CC LDR X8, [X8 + 0x600]
	0x0346D4D0 ADD X0, X31, 0x18
	0x0346D4D4 LDR X1, [X8]
	0x0346D4D8 BL 0x2677474
	0x0346D4DC MOVN W8, 0x1
	0x0346D4E0 STR W8, [X19]
	0x0346D4E4 STR X31, [X19 + 0x50]
	0x0346D4E8 MOV X20, X0
	0x0346D4EC LDR X0, [X25]
	0x0346D4F0 ADRP X21, 0xCC2000
	0x0346D4F4 ADD X19, X19, 0x8
	0x0346D4F8 LDR W8, [X0 + 0xE0]
	0x0346D4FC LDR X21, [X21 + 0x458]
	0x0346D500 CBNZ W8, 0x346D508
	0x0346D504 BL 0x1C16DFC
	0x0346D508 LDR X2, [X21]
	0x0346D50C MOV X0, X19
	0x0346D510 MOV X1, X20
	0x0346D514 BL 0x26322B0
	0x0346D518 B 0x346D558
	0x0346D51C MOVZ W8, 0x1
	0x0346D520 STR W8, [X19]
	0x0346D524 LDR X8, [X31 + 0x18]
	0x0346D528 STR X8, [X19 + 0x60]
	0x0346D52C LDR X0, [X25]
	0x0346D530 LDR W8, [X0 + 0xE0]
	0x0346D534 CBNZ W8, 0x346D53C
	0x0346D538 BL 0x1C16DFC
	0x0346D53C ADRP X8, 0xCC3000
	0x0346D540 LDR X8, [X8 + 0x628]
	0x0346D544 ADD X0, X19, 0x8
	0x0346D548 LDR X3, [X8]
	0x0346D54C ADD X1, X31, 0x18
	0x0346D550 MOV X2, X19
	0x0346D554 BL 0x1FBDBC8
	0x0346D558 LDP X20, X19, [X31 + 0x60]
	0x0346D55C LDP X22, X21, [X31 + 0x50]
	0x0346D560 LDP X24, X23, [X31 + 0x40]
	0x0346D564 LDP X30, X25, [X31 + 0x30]
	0x0346D568 ADD X31, X31, 0x70
	0x0346D56C RET
	0x0346D570 BL 0x1C16F20
	0x0346D574 BL 0x1C16F20
	0x0346D578 BL 0x1C16F20
	0x0346D57C BL 0x1C16F20
	0x0346D580 BL 0x1C16F20
	0x0346D584 BL 0x1C16F20
	0x0346D588 BL 0x1C16F20
	0x0346D58C BL 0x1C16F20
	0x0346D590 BL 0x1C16F20
	0x0346D594 BL 0x1C16F20
	0x0346D598 BL 0x1C16F20
	0x0346D59C BL 0x1C16F20
	0x0346D5A0 B 0x346D614
	0x0346D5A4 B 0x346D614
	0x0346D5A8 B 0x346D614
	0x0346D5AC B 0x346D614
	0x0346D5B0 B 0x346D614
	0x0346D5B4 B 0x346D614
	0x0346D5B8 B 0x346D614
	0x0346D5BC B 0x346D614
	0x0346D5C0 B 0x346D614
	0x0346D5C4 B 0x346D614
	0x0346D5C8 B 0x346D614
	0x0346D5CC B 0x346D614
	0x0346D5D0 B 0x346D614
	0x0346D5D4 B 0x346D614
	0x0346D5D8 B 0x346D614
	0x0346D5DC B 0x346D614
	0x0346D5E0 B 0x346D614
	0x0346D5E4 B 0x346D614
	0x0346D5E8 B 0x346D614
	0x0346D5EC B 0x346D614
	0x0346D5F0 B 0x346D614
	0x0346D5F4 B 0x346D614
	0x0346D5F8 B 0x346D614
	0x0346D5FC B 0x346D614
	0x0346D600 B 0x346D614
	0x0346D604 B 0x346D614
	0x0346D608 B 0x346D614
	0x0346D60C B 0x346D614
	0x0346D610 B 0x346D614
	0x0346D614 MOV X20, X0
	0x0346D618 CMP W1, 0x1
	0x0346D61C B.NE 0x346D6BC
	0x0346D620 MOV X0, X20
	0x0346D624 BL 0x3EB1AD0
	0x0346D628 MOV X20, X0
	0x0346D62C ADRP X0, 0xC86000
	0x0346D630 LDR X0, [X0 + 0x7D0]
	0x0346D634 BL 0x1C16D08
	0x0346D638 LDR X8, [X20]
	0x0346D63C LDR X1, [X8]
	0x0346D640 BL 0x1C17270
	0x0346D644 TBZ X0, 0x0, 0x346D694
	0x0346D648 LDR X20, [X20]
	0x0346D64C BL 0x3EB1AE0
	0x0346D650 MOVN W8, 0x1
	0x0346D654 STR X31, [X19 + 0x50]
	0x0346D658 STR W8, [X19], #0x8
	0x0346D65C ADRP X0, 0xCC1000
	0x0346D660 LDR X0, [X0 + 0x530]
	0x0346D664 BL 0x1C16D08
	0x0346D668 LDR W8, [X0 + 0xE0]
	0x0346D66C CBNZ W8, 0x346D674
	0x0346D670 BL 0x1C16DFC
	0x0346D674 ADRP X0, 0xCC2000
	0x0346D678 LDR X0, [X0 + 0x478]
	0x0346D67C BL 0x1C16D08
	0x0346D680 MOV X2, X0
	0x0346D684 MOV X0, X19
	0x0346D688 MOV X1, X20
	0x0346D68C BL 0x26324C8
	0x0346D690 B 0x346D558
	0x0346D694 MOVZ W0, 0x8
	0x0346D698 BL 0x3EB1AF0
	0x0346D69C LDR X8, [X20]
	0x0346D6A0 STR X8, [X0]
	0x0346D6A4 ADRP X1, 0xA47000
	0x0346D6A8 ADD X1, X1, 0xE58
	0x0346D6AC MOV X2, X31
	0x0346D6B0 BL 0x3EB1B00
	0x0346D6B4 MOV X20, X0
	0x0346D6B8 BL 0x3EB1AE0
	0x0346D6BC MOV X0, X20
	0x0346D6C0 BL 0x1D2C690
	0x0346D6C4 BL 0x1990590
	0x0346D6C8 STR X30, [X31 - 0x30]!
	0x0346D6CC STP X22, X21, [X31 + 0x10]
	0x0346D6D0 STP X20, X19, [X31 + 0x20]
	0x0346D6D4 ADRP X22, 0xF70000
	0x0346D6D8 ADRP X21, 0xCC1000
	0x0346D6DC LDRB W8, [X22 + 0x7E0]
	0x0346D6E0 LDR X21, [X21 + 0x530]
	0x0346D6E4 MOV X19, X1
	0x0346D6E8 MOV X20, X0
	0x0346D6EC TBNZ X8, 0x0, 0x346D710
	0x0346D6F0 ADRP X0, 0xCC2000
	0x0346D6F4 LDR X0, [X0 + 0x480]
	0x0346D6F8 BL 0x1C16CF4
	0x0346D6FC ADRP X0, 0xCC1000
	0x0346D700 LDR X0, [X0 + 0x530]
	0x0346D704 BL 0x1C16CF4
	0x0346D708 MOVZ W8, 0x1
	0x0346D70C STRB W8, [X22 + 0x7E0]
	0x0346D710 LDR X0, [X21]
	0x0346D714 ADRP X21, 0xCC2000
	0x0346D718 LDR W8, [X0 + 0xE0]
	0x0346D71C LDR X21, [X21 + 0x480]
	0x0346D720 CBNZ W8, 0x346D728
	0x0346D724 BL 0x1C16DFC
	0x0346D728 LDR X2, [X21]
	0x0346D72C ADD X0, X20, 0x8
	0x0346D730 MOV X1, X19
	0x0346D734 LDP X20, X19, [X31 + 0x20]
	0x0346D738 LDP X22, X21, [X31 + 0x10]
	0x0346D73C LDR X30, [X31], #0x30
	0x0346D740 B 0x2632228
	0x0346D744 SUB X31, X31, 0x70
	0x0346D748 STP X30, X25, [X31 + 0x30]
	0x0346D74C STP X24, X23, [X31 + 0x40]
	0x0346D750 STP X22, X21, [X31 + 0x50]
	0x0346D754 STP X20, X19, [X31 + 0x60]
	0x0346D758 ADRP X20, 0xF70000
	0x0346D75C LDRB W8, [X20 + 0x7E1]
	0x0346D760 MOV X19, X0
	0x0346D764 TBNZ X8, 0x0, 0x346D854
	0x0346D768 ADRP X0, 0xCC3000
	0x0346D76C LDR X0, [X0 + 0x648]
	0x0346D770 BL 0x1C16CF4
	0x0346D774 ADRP X0, 0xCC3000
	0x0346D778 LDR X0, [X0 + 0x650]
	0x0346D77C BL 0x1C16CF4
	0x0346D780 ADRP X0, 0xCC2000
	0x0346D784 LDR X0, [X0 + 0x458]
	0x0346D788 BL 0x1C16CF4
	0x0346D78C ADRP X0, 0xCC1000
	0x0346D790 LDR X0, [X0 + 0x530]
	0x0346D794 BL 0x1C16CF4
	0x0346D798 ADRP X0, 0xC88000
	0x0346D79C LDR X0, [X0 + 0xA10]
	0x0346D7A0 BL 0x1C16CF4
	0x0346D7A4 ADRP X0, 0xC87000
	0x0346D7A8 LDR X0, [X0 + 0x9F0]
	0x0346D7AC BL 0x1C16CF4
	0x0346D7B0 ADRP X0, 0xCC3000
	0x0346D7B4 LDR X0, [X0 + 0x5F0]
	0x0346D7B8 BL 0x1C16CF4
	0x0346D7BC ADRP X0, 0xC87000
	0x0346D7C0 LDR X0, [X0 + 0x818]
	0x0346D7C4 BL 0x1C16CF4
	0x0346D7C8 ADRP X0, 0xCC2000
	0x0346D7CC LDR X0, [X0 + 0x7C8]
	0x0346D7D0 BL 0x1C16CF4
	0x0346D7D4 ADRP X0, 0xCC2000
	0x0346D7D8 LDR X0, [X0 + 0x7D0]
	0x0346D7DC BL 0x1C16CF4
	0x0346D7E0 ADRP X0, 0xCC3000
	0x0346D7E4 LDR X0, [X0 + 0x5F8]
	0x0346D7E8 BL 0x1C16CF4
	0x0346D7EC ADRP X0, 0xCC3000
	0x0346D7F0 LDR X0, [X0 + 0x600]
	0x0346D7F4 BL 0x1C16CF4
	0x0346D7F8 ADRP X0, 0xC87000
	0x0346D7FC LDR X0, [X0 + 0x830]
	0x0346D800 BL 0x1C16CF4
	0x0346D804 ADRP X0, 0xC87000
	0x0346D808 LDR X0, [X0 + 0x838]
	0x0346D80C BL 0x1C16CF4
	0x0346D810 ADRP X0, 0xCC3000
	0x0346D814 LDR X0, [X0 + 0x608]
	0x0346D818 BL 0x1C16CF4
	0x0346D81C ADRP X0, 0xC87000
	0x0346D820 LDR X0, [X0 + 0x840]
	0x0346D824 BL 0x1C16CF4
	0x0346D828 ADRP X0, 0xCC3000
	0x0346D82C LDR X0, [X0 + 0x610]
	0x0346D830 BL 0x1C16CF4
	0x0346D834 ADRP X0, 0xCC3000
	0x0346D838 LDR X0, [X0 + 0x658]
	0x0346D83C BL 0x1C16CF4
	0x0346D840 ADRP X0, 0xCC3000
	0x0346D844 LDR X0, [X0 + 0x660]
	0x0346D848 BL 0x1C16CF4
	0x0346D84C MOVZ W8, 0x1
	0x0346D850 STRB W8, [X20 + 0x7E1]
	0x0346D854 STP X31, X31, [X31 + 0x20]
	0x0346D858 STR X31, [X31 + 0x18]
	0x0346D85C ADRP X25, 0xCC1000
	0x0346D860 LDR W8, [X19]
	0x0346D864 LDR X20, [X19 + 0x20]
	0x0346D868 LDR X25, [X25 + 0x530]
	0x0346D86C CBZ W8, 0x346D890
	0x0346D870 CMP W8, 0x1
	0x0346D874 B.NE 0x346D8BC
	0x0346D878 LDR X8, [X19 + 0x60]
	0x0346D87C MOVN W9, 0x0
	0x0346D880 STR X8, [X31 + 0x18]
	0x0346D884 STR X31, [X19 + 0x60]
	0x0346D888 STR W9, [X19]
	0x0346D88C B 0x346DBD4
	0x0346D890 LDR X8, [X19 + 0x58]
	0x0346D894 MOVN W9, 0x0
	0x0346D898 STR X8, [X31 + 0x20]
	0x0346D89C STR X31, [X19 + 0x58]
	0x0346D8A0 STR W9, [X19]
	0x0346D8A4 ADRP X8, 0xC87000
	0x0346D8A8 LDR X8, [X8 + 0x830]
	0x0346D8AC ADD X0, X31, 0x20
	0x0346D8B0 LDR X1, [X8]
	0x0346D8B4 BL 0x2677474
	0x0346D8B8 B 0x346DAF4
	0x0346D8BC ADRP X8, 0xCC3000
	0x0346D8C0 LDR X8, [X8 + 0x660]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF71000
	011 Move W8, [X20+2011]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCC4000
	018 Move X0, [X0+1472]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC4000
	021 Move X0, [X0+1480]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8A000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC89000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC88000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xC8F000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC88000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCC3000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC3000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC88000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC88000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC88000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC4000
	054 Move X0, [X0+1488]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC4000
	057 Move X0, [X0+1496]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+2011], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC8A000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+128]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+128], X31
	077 Move [X19], W9
	078 Move X8, [X19+120]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+120], X31
	084 Move [X19], W9
	085 Move X8, 0xC88000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCC4000
	091 Move X8, [X8+1496]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass118_0..ctor, X0
	097 Move [X19+112], X21
	098 Compare X21, 0
	099 JumpIfEqual {360}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move V0, [X19+3]
	105 Move [X21+2], V0
	106 Move W8, [X19+64]
	107 Move [X21+48], W8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 Move [X21+56], V0
	110 Move X8, [X19+88]
	111 Move [X21+72], X8
	112 Move X8, [X19+96]
	113 Move [X21+80], X8
	114 Compare X20, 0
	115 JumpIfEqual {361}
	116 Move W8, [X20+16]
	117 Compare W8, 0
	118 JumpIfEqual {256}
	119 Move X8, [X19+112]
	120 Compare X8, 0
	121 JumpIfEqual {362}
	122 Move X21, [X8+24]
	123 Compare X21, 0
	124 JumpIfEqual {363}
	125 Move X23, 0xC88000
	126 Move X8, [X21]
	127 Move X23, [X23+2072]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X1, [X23]
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 7
	139 Move X0, X21
	140 Call 0x1C5D788
	141 Move W9, [X10]
	142 Add W9, W9, 7
	143 Add X8, X8, W9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X21
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X1, X31
	150 Call String.IsNullOrEmpty, X0
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {254}
	155 Move X8, [X19+112]
	156 Compare X8, 0
	157 JumpIfEqual {364}
	158 Move X9, 0xC88000
	159 Move X9, [X9+2544]
	160 Move X21, [X8+24]
	161 Move X0, [X9]
	162 Move W9, [X0+224]
	163 Compare W9, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X0, X31
	167 Call DateTime.get_UtcNow
	168 Move X22, 0xC89000
	169 Move X22, [X22+2576]
	170 Move X8, X0
	171 Move [X31+40], X8
	172 Move X0, [X22]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {178}
	176 Call 0x1C17DFC
	177 Move X0, [X22]
	178 Move X8, [X0+184]
	179 Move X1, [X8]
	180 Add X0, X31, 40
	181 Move X2, X31
	182 Call DateTime.Add, X0, X1
	183 Compare X21, 0
	184 JumpIfEqual {365}
	185 Move X8, [X21]
	186 Move X1, [X23]
	187 Move X22, X0
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move W2, 11
	198 Move X0, X21
	199 Call 0x1C5D788
	200 Move W9, [X10]
	201 Add W9, W9, 11
	202 Add X8, X8, W9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X2, [X0+8]
	206 Move X0, X21
	207 Move X1, X22
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {254}
	213 Move X8, [X19+112]
	214 Compare X8, 0
	215 JumpIfEqual {366}
	216 Move X1, [X8+24]
	217 Move X3, [X19+104]
	218 Move X4, [X8+80]
	219 Move X0, X20
	220 Move X2, X31
	221 Move X5, X31
	222 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	223 Compare X0, 0
	224 JumpIfEqual {367}
	225 Move X8, 0xC88000
	226 Move X8, [X8+2112]
	227 Move X1, [X8]
	228 Call Task`1<Object>.GetAwaiter, X0
	229 Move X8, 0xC88000
	230 Move X8, [X8+2104]
	231 Move [X31+32], X0
	232 Move X1, [X8]
	233 Add X0, X31, 32
	234 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {85}
	239 Move [X19], W31
	240 Move X8, [X31+32]
	241 Move [X19+120], X8
	242 Move X0, [X25]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {247}
	246 Call 0x1C17DFC
	247 Move X8, 0xCC4000
	248 Move X8, [X8+1472]
	249 Add X0, X19, 8
	250 Move X3, [X8]
	251 Add X1, X31, 32
	252 Move X2, X19
	253 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	254 Compare X20, 0
	255 JumpIfEqual {359}
	256 Move X8, 0xC8F000
	257 Move X8, [X8+2072]
	258 Move X21, [X20+88]
	259 Move X23, [X19+112]
	260 Move X0, [X8]
	261 Call 0x1C17F10
	262 Move X8, 0xCC4000
	263 Move X8, [X8+1488]
	264 Move X22, X0
	265 Move X2, [X8]
	266 Move X1, X23
	267 Move X3, X31
	268 Call Func`1<Object>..ctor, X0, X1, X2
	269 Move X8, [X19+112]
	270 Compare X8, 0
	271 JumpIfEqual {356}
	272 Move X9, 0xCC3000
	273 Move X23, [X19+104]
	274 Move X9, [X9+1992]
	275 Compare X23, 0
	276 JumpIfNotEqual {278}
	277 Move X23, [X20+24]
	278 Move X20, [X8+24]
	279 Move X1, [X8+80]
	280 Move X2, [X9]
	281 Move [X31+8], X31
	282 Move [X31+16], X31
	283 Add X0, X31, 8
	284 Call Nullable`1<CancellationToken>..ctor, X0, X1
	285 Move X8, 0xCC3000
	286 Move X8, [X8+2000]
	287 Move X0, [X8]
	288 Call 0x1C17F10
	289 Move X3, [X31+8]
	290 Move X4, [X31+16]
	291 Move X24, X0
	292 Move X1, X20
	293 Move X2, X23
	294 Call RetryHistory..ctor, X0, X1, X2, X3
	295 Compare X21, 0
	296 JumpIfEqual {357}
	297 Move X0, X21
	298 Move X1, X22
	299 Move X2, X24
	300 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	301 Compare X0, 0
	302 JumpIfEqual {358}
	303 Move X1, X31
	304 Call Task.GetAwaiter, X0
	305 Move [X31+24], X0
	306 Add X0, X31, 24
	307 Move X1, X31
	308 Call TaskAwaiter.get_IsCompleted, X0
	309 Move TEMP, X0
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfNotEqual {330}
	313 Add X0, X31, 24
	314 Move X1, X31
	315 Call TaskAwaiter.GetResult, X0
	316 Move TEMP, 1
	317 Not TEMP
	318 Move W8, TEMP
	319 Move [X19], W8
	320 Move [X19+112], X31
	321 Move X0, [X25]
	322 Add X19, X19, 8
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Move X0, X19
	328 Move X1, X31
	329 Call AsyncTaskMethodBuilder.SetResult, X0
	330 Move W8, 1
	331 Move [X19], W8
	332 Move X8, [X31+24]
	333 Move [X19+128], X8
	334 Move X0, [X25]
	335 Move W8, [X0+224]
	336 Compare W8, 0
	337 JumpIfNotEqual {339}
	338 Call 0x1C17DFC
	339 Move X8, 0xCC4000
	340 Move X8, [X8+1480]
	341 Add X0, X19, 8
	342 Move X3, [X8]
	343 Add X1, X31, 24
	344 Move X2, X19
	345 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	346 Move X20, [X31+96]
	347 Move X19, [X31+104]
	348 Move X22, [X31+80]
	349 Move X21, [X31+88]
	350 Move X24, [X31+64]
	351 Move X23, [X31+72]
	352 Move X30, [X31+48]
	353 Move X25, [X31+56]
	354 Add X31, X31, 112
	355 Return 
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Move X20, X0
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X0, X20
	371 Call 0x3EB2AD0
	372 Move X20, X0
	373 Move X0, 0xC87000
	374 Move X0, [X0+2000]
	375 Call 0x1C17D08
	376 Move X8, [X20]
	377 Move X1, [X8]
	378 Call 0x1C18270
	379 Move TEMP, X0
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfNotEqual {401}
	383 Move X20, [X20]
	384 Call 0x3EB2AE0
	385 Move TEMP, 1
	386 Not TEMP
	387 Move W8, TEMP
	388 Move [X19+112], X31
	389 Move [X19+8], W8
	390 Move X0, 0xC8A000
	391 Move X0, [X0+640]
	392 Call 0x1C17D08
	393 Move W8, [X0+224]
	394 Compare W8, 0
	395 JumpIfNotEqual {397}
	396 Call 0x1C17DFC
	397 Move X0, X19
	398 Move X1, X20
	399 Move X2, X31
	400 Call AsyncTaskMethodBuilder.SetException, X0, X1
	401 Move W0, 8
	402 Call 0x3EB2AF0
	403 Move X8, [X20]
	404 Move [X0], X8
	405 Move X1, 0xA48000
	406 Add X1, X1, 3672
	407 Move X2, X31
	408 Call 0x3EB2B00
	409 Move X20, X0
	410 Call 0x3EB2AE0
	411 Move X0, X20
	412 Call 0x1D2D690
	413 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346D8C4 LDR X0, [X8]
	0x0346D8C8 BL 0x1C16F10
	0x0346D8CC MOV X21, X0
	0x0346D8D0 MOV X1, X31
	0x0346D8D4 BL 0x3446F64
	0x0346D8D8 STR X21, [X19 + 0x50]
	0x0346D8DC CBZ X21, 0x346DC8C
	0x0346D8E0 LDR X8, [X19 + 0x20]
	0x0346D8E4 STR X8, [X21 + 0x10]
	0x0346D8E8 LDR X8, [X19 + 0x28]
	0x0346D8EC STR X8, [X21 + 0x18]
	0x0346D8F0 LDR X8, [X19 + 0x30]
	0x0346D8F4 STR X8, [X21 + 0x20]
	0x0346D8F8 LDRB W8, [X19 + 0x38]
	0x0346D8FC STRB W8, [X21 + 0x28]
	0x0346D900 LDR X8, [X19 + 0x40]
	0x0346D904 STR X8, [X21 + 0x30]
	0x0346D908 CBZ X20, 0x346DC90
	0x0346D90C LDRB W8, [X20 + 0x10]
	0x0346D910 CBZ W8, 0x346DAF8
	0x0346D914 LDR X8, [X19 + 0x50]
	0x0346D918 CBZ X8, 0x346DC94
	0x0346D91C LDR X21, [X8 + 0x18]
	0x0346D920 CBZ X21, 0x346DC98
	0x0346D924 ADRP X23, 0xC87000
	0x0346D928 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF71000
	007 Move X22, 0xC8A000
	008 Move W8, [X21+2012]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC8A000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2012], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

