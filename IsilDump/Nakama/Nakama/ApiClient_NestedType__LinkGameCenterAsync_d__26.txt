Type: Nakama.ApiClient/<LinkGameCenterAsync>d__26

Method: System.Void MoveNext()

Disassembly:
	0x0342A6F8 BL 0x1C16F28
	0x0342A6FC BL 0x1C16F20
	0x0342A700 BL 0x1C16F20
	0x0342A704 BL 0x1C16F20
	0x0342A708 BL 0x1C16F20
	0x0342A70C BL 0x1C16F20
	0x0342A710 BL 0x1C16F20
	0x0342A714 B 0x342A774
	0x0342A718 B 0x342A774
	0x0342A71C B 0x342A774
	0x0342A720 B 0x342A774
	0x0342A724 B 0x342A774
	0x0342A728 B 0x342A774
	0x0342A72C B 0x342A774
	0x0342A730 B 0x342A774
	0x0342A734 B 0x342A774
	0x0342A738 B 0x342A774
	0x0342A73C B 0x342A774
	0x0342A740 B 0x342A774
	0x0342A744 B 0x342A774
	0x0342A748 B 0x342A774
	0x0342A74C B 0x342A774
	0x0342A750 B 0x342A774
	0x0342A754 B 0x342A774
	0x0342A758 B 0x342A774
	0x0342A75C B 0x342A774
	0x0342A760 B 0x342A774
	0x0342A764 B 0x342A774
	0x0342A768 B 0x342A774
	0x0342A76C B 0x342A774
	0x0342A770 B 0x342A774
	0x0342A774 MOV X20, X0
	0x0342A778 CMP W1, 0x1
	0x0342A77C B.NE 0x342A80C
	0x0342A780 MOV X0, X20
	0x0342A784 BL 0x3EB1AD0
	0x0342A788 MOV X20, X0
	0x0342A78C ADRP X0, 0xCC9000
	0x0342A790 LDR X0, [X0 + 0x7D0]
	0x0342A794 BL 0x1C16D08
	0x0342A798 LDR X8, [X20]
	0x0342A79C LDR X1, [X8]
	0x0342A7A0 BL 0x1C17270
	0x0342A7A4 TBZ X0, 0x0, 0x342A7E4
	0x0342A7A8 LDR X20, [X20]
	0x0342A7AC BL 0x3EB1AE0
	0x0342A7B0 MOVN W8, 0x1
	0x0342A7B4 STR W8, [X19], #0x8
	0x0342A7B8 ADRP X0, 0xCCC000
	0x0342A7BC LDR X0, [X0 + 0x280]
	0x0342A7C0 BL 0x1C16D08
	0x0342A7C4 LDR W8, [X0 + 0xE0]
	0x0342A7C8 CBNZ W8, 0x342A7D0
	0x0342A7CC BL 0x1C16DFC
	0x0342A7D0 MOV X0, X19
	0x0342A7D4 MOV X1, X20
	0x0342A7D8 MOV X2, X31
	0x0342A7DC BL 0x32C4908
	0x0342A7E0 B 0x342A684
	0x0342A7E4 MOVZ W0, 0x8
	0x0342A7E8 BL 0x3EB1AF0
	0x0342A7EC LDR X8, [X20]
	0x0342A7F0 STR X8, [X0]
	0x0342A7F4 ADRP X1, 0xA8A000
	0x0342A7F8 ADD X1, X1, 0xE58
	0x0342A7FC MOV X2, X31
	0x0342A800 BL 0x3EB1B00
	0x0342A804 MOV X20, X0
	0x0342A808 BL 0x3EB1AE0
	0x0342A80C MOV X0, X20
	0x0342A810 BL 0x1D2C690
	0x0342A814 BL 0x1990590
	0x0342A818 STR X30, [X31 - 0x30]!
	0x0342A81C STP X22, X21, [X31 + 0x10]
	0x0342A820 STP X20, X19, [X31 + 0x20]
	0x0342A824 ADRP X21, 0xFB3000
	0x0342A828 ADRP X22, 0xCCC000
	0x0342A82C LDRB W8, [X21 + 0x64A]
	0x0342A830 LDR X22, [X22 + 0x280]
	0x0342A834 MOV X19, X1
	0x0342A838 MOV X20, X0
	0x0342A83C TBNZ X8, 0x0, 0x342A854
	0x0342A840 ADRP X0, 0xCCC000
	0x0342A844 LDR X0, [X0 + 0x280]
	0x0342A848 BL 0x1C16CF4
	0x0342A84C MOVZ W8, 0x1
	0x0342A850 STRB W8, [X21 + 0x64A]
	0x0342A854 LDR X0, [X22]
	0x0342A858 LDR W8, [X0 + 0xE0]
	0x0342A85C CBNZ W8, 0x342A864
	0x0342A860 BL 0x1C16DFC
	0x0342A864 ADD X0, X20, 0x8
	0x0342A868 MOV X1, X19
	0x0342A86C LDP X20, X19, [X31 + 0x20]
	0x0342A870 LDP X22, X21, [X31 + 0x10]
	0x0342A874 MOV X2, X31
	0x0342A878 LDR X30, [X31], #0x30
	0x0342A87C B 0x32C477C
	0x0342A880 SUB X31, X31, 0x70
	0x0342A884 STP X30, X27, [X31 + 0x20]
	0x0342A888 STP X26, X25, [X31 + 0x30]
	0x0342A88C STP X24, X23, [X31 + 0x40]
	0x0342A890 STP X22, X21, [X31 + 0x50]
	0x0342A894 STP X20, X19, [X31 + 0x60]
	0x0342A898 ADRP X20, 0xFB3000
	0x0342A89C LDRB W8, [X20 + 0x64B]
	0x0342A8A0 MOV X19, X0
	0x0342A8A4 TBNZ X8, 0x0, 0x342AA0C
	0x0342A8A8 ADRP X0, 0xD04000
	0x0342A8AC LDR X0, [X0 + 0xEE8]
	0x0342A8B0 BL 0x1C16CF4
	0x0342A8B4 ADRP X0, 0xD04000
	0x0342A8B8 LDR X0, [X0 + 0xEF0]
	0x0342A8BC BL 0x1C16CF4
	0x0342A8C0 ADRP X0, 0xD04000
	0x0342A8C4 LDR X0, [X0 + 0x418]
	0x0342A8C8 BL 0x1C16CF4
	0x0342A8CC ADRP X0, 0xCD2000
	0x0342A8D0 LDR X0, [X0 + 0x8D8]
	0x0342A8D4 BL 0x1C16CF4
	0x0342A8D8 ADRP X0, 0xCCA000
	0x0342A8DC LDR X0, [X0 + 0x810]
	0x0342A8E0 BL 0x1C16CF4
	0x0342A8E4 ADRP X0, 0xCCA000
	0x0342A8E8 LDR X0, [X0 + 0x6C0]
	0x0342A8EC BL 0x1C16CF4
	0x0342A8F0 ADRP X0, 0xCCA000
	0x0342A8F4 LDR X0, [X0 + 0x6D0]
	0x0342A8F8 BL 0x1C16CF4
	0x0342A8FC ADRP X0, 0xD04000
	0x0342A900 LDR X0, [X0 + 0x7B8]
	0x0342A904 BL 0x1C16CF4
	0x0342A908 ADRP X0, 0xD04000
	0x0342A90C LDR X0, [X0 + 0xEF8]
	0x0342A910 BL 0x1C16CF4
	0x0342A914 ADRP X0, 0xD04000
	0x0342A918 LDR X0, [X0 + 0x830]
	0x0342A91C BL 0x1C16CF4
	0x0342A920 ADRP X0, 0xCCD000
	0x0342A924 LDR X0, [X0 + 0xBF0]
	0x0342A928 BL 0x1C16CF4
	0x0342A92C ADRP X0, 0xCCC000
	0x0342A930 LDR X0, [X0 + 0xEF8]
	0x0342A934 BL 0x1C16CF4
	0x0342A938 ADRP X0, 0xCCA000
	0x0342A93C LDR X0, [X0 + 0x478]
	0x0342A940 BL 0x1C16CF4
	0x0342A944 ADRP X0, 0xCC9000
	0x0342A948 LDR X0, [X0 + 0x9D0]
	0x0342A94C BL 0x1C16CF4
	0x0342A950 ADRP X0, 0xCCC000
	0x0342A954 LDR X0, [X0 + 0x1E0]
	0x0342A958 BL 0x1C16CF4
	0x0342A95C ADRP X0, 0xCCC000
	0x0342A960 LDR X0, [X0 + 0x1F0]
	0x0342A964 BL 0x1C16CF4
	0x0342A968 ADRP X0, 0xCCC000
	0x0342A96C LDR X0, [X0 + 0x1F8]
	0x0342A970 BL 0x1C16CF4
	0x0342A974 ADRP X0, 0xCD2000
	0x0342A978 LDR X0, [X0 + 0x3A0]
	0x0342A97C BL 0x1C16CF4
	0x0342A980 ADRP X0, 0xCCB000
	0x0342A984 LDR X0, [X0 + 0xA28]
	0x0342A988 BL 0x1C16CF4
	0x0342A98C ADRP X0, 0xD04000
	0x0342A990 LDR X0, [X0 + 0xF00]
	0x0342A994 BL 0x1C16CF4
	0x0342A998 ADRP X0, 0xCF2000
	0x0342A99C LDR X0, [X0 + 0x4D0]
	0x0342A9A0 BL 0x1C16CF4
	0x0342A9A4 ADRP X0, 0xD04000
	0x0342A9A8 LDR X0, [X0 + 0xF08]
	0x0342A9AC BL 0x1C16CF4
	0x0342A9B0 ADRP X0, 0xD04000
	0x0342A9B4 LDR X0, [X0 + 0xF10]
	0x0342A9B8 BL 0x1C16CF4
	0x0342A9BC ADRP X0, 0xCD2000
	0x0342A9C0 LDR X0, [X0 + 0x720]
	0x0342A9C4 BL 0x1C16CF4
	0x0342A9C8 ADRP X0, 0xD04000
	0x0342A9CC LDR X0, [X0 + 0x7D0]
	0x0342A9D0 BL 0x1C16CF4
	0x0342A9D4 ADRP X0, 0xD04000
	0x0342A9D8 LDR X0, [X0 + 0xF18]
	0x0342A9DC BL 0x1C16CF4
	0x0342A9E0 ADRP X0, 0xD04000
	0x0342A9E4 LDR X0, [X0 + 0x7D8]
	0x0342A9E8 BL 0x1C16CF4
	0x0342A9EC ADRP X0, 0xCC9000
	0x0342A9F0 LDR X0, [X0 + 0x988]
	0x0342A9F4 BL 0x1C16CF4
	0x0342A9F8 ADRP X0, 0xD04000
	0x0342A9FC LDR X0, [X0 + 0xF20]
	0x0342AA00 BL 0x1C16CF4
	0x0342AA04 MOVZ W8, 0x1
	0x0342AA08 STRB W8, [X20 + 0x64B]
	0x0342AA0C STR X31, [X31 + 0x18]
	0x0342AA10 ADRP X27, 0xD04000
	0x0342AA14 LDR W8, [X19]
	0x0342AA18 LDR X27, [X27 + 0x418]
	0x0342AA1C CBZ W8, 0x342ADBC
	0x0342AA20 LDR X21, [X19 + 0x20]
	0x0342AA24 CBZ X21, 0x342AEF0
	0x0342AA28 ADRP X23, 0xCCB000
	0x0342AA2C LDR X23, [X23 + 0xA28]
	0x0342AA30 ADRP X8, 0xD04000
	0x0342AA34 LDR X0, [X23]
	0x0342AA38 LDR X8, [X8 + 0xF00]
	0x0342AA3C LDR X24, [X19 + 0x40]
	0x0342AA40 LDR W9, [X0 + 0xE0]
	0x0342AA44 LDR X20, [X8]
	0x0342AA48 CBNZ W9, 0x342AA50
	0x0342AA4C BL 0x1C16DFC
	0x0342AA50 MOV X0, X21
	0x0342AA54 MOV X1, X31
	0x0342AA58 BL 0x3624D20
	0x0342AA5C CBZ X20, 0x342AF38
	0x0342AA60 ADRP X8, 0xD04000
	0x0342AA64 LDR X8, [X8 + 0xF10]
	0x0342AA68 MOV X2, X0
	0x0342AA6C LDR X1, [X8]
	0x0342AA70 MOV X0, X20
	0x0342AA74 MOV X3, X31
	0x0342AA78 BL 0x32293BC
	0x0342AA7C ADRP X8, 0xCC9000
	0x0342AA80 LDR X8, [X8 + 0x988]
	0x0342AA84 LDRB W9, [X19 + 0x28]
	0x0342AA88 MOV X20, X0
	0x0342AA8C LDR X21, [X8]
	0x0342AA90 CBZ W9, 0x342AB94
	0x0342AA94 ADRP X8, 0xCC9000
	0x0342AA98 LDR X8, [X8 + 0x9D0]
	0x0342AA9C LDR X0, [X8]
	0x0342AAA0 MOVZ W1, 0x4
	0x0342AAA4 BL 0x1C16D6C
	0x0342AAA8 MOV X22, X0
	0x0342AAAC CBZ X0, 0x342AF60
	0x0342AAB0 CBZ X21, 0x342AAC8
	0x0342AAB4 LDR X8, [X22]
	0x0342AAB8 LDR X1, [X8 + 0x40]
	0x0342AABC MOV X0, X21
	0x0342AAC0 BL 0x1C16E00
	0x0342AAC4 CBZ X0, 0x342AF78
	0x0342AAC8 LDR W8, [X22 + 0x18]
	0x0342AACC CBZ W8, 0x342AF64
	0x0342AAD0 STR X21, [X22 + 0x20]
	0x0342AAD4 ADRP X21, 0xD04000
	0x0342AAD8 LDR X21, [X21 + 0xF18]
	0x0342AADC LDR X0, [X21]
	0x0342AAE0 CBZ X0, 0x342AAF8
	0x0342AAE4 LDR X8, [X22]
	0x0342AAE8 LDR X1, [X8 + 0x40]
	0x0342AAEC BL 0x1C16E00
	0x0342AAF0 CBZ X0, 0x342AF84
	0x0342AAF4 LDR W8, [X22 + 0x18]
	0x0342AAF8 CMP W8, 0x1
	0x0342AAFC B.LS 0x342AF68
	0x0342AB00 LDR X8, [X21]
	0x0342AB04 ADRP X9, 0xCCA000
	0x0342AB08 STR X8, [X22 + 0x28]
	0x0342AB0C LDR X8, [X19 + 0x28]
	0x0342AB10 LDR X9, [X9 + 0x478]
	0x0342AB14 STR X8, [X31 + 0x10]
	0x0342AB18 LDR X0, [X9]
	0x0342AB1C ADD X1, X31, 0x10
	0x0342AB20 BL 0x1C16E04
	0x0342AB24 MOV X21, X0
	0x0342AB28 CBZ X0, 0x342AB40
	0x0342AB2C LDR X8, [X22]
	0x0342AB30 LDR X1, [X8 + 0x40]
	0x0342AB34 MOV X0, X21
	0x0342AB38 BL 0x1C16E00
	0x0342AB3C CBZ X0, 0x342AF90
	0x0342AB40 LDR W8, [X22 + 0x18]
	0x0342AB44 CMP W8, 0x2
	0x0342AB48 B.LS 0x342AF6C
	0x0342AB4C STR X21, [X22 + 0x30]
	0x0342AB50 ADRP X21, 0xCD2000
	0x0342AB54 LDR X21, [X21 + 0x720]
	0x0342AB58 LDR X0, [X21]
	0x0342AB5C CBZ X0, 0x342AB74
	0x0342AB60 LDR X8, [X22]
	0x0342AB64 LDR X1, [X8 + 0x40]
	0x0342AB68 BL 0x1C16E00
	0x0342AB6C CBZ X0, 0x342AF9C
	0x0342AB70 LDR W8, [X22 + 0x18]
	0x0342AB74 CMP W8, 0x3
	0x0342AB78 B.LS 0x342AF74
	0x0342AB7C LDR X8, [X21]
	0x0342AB80 STR X8, [X22 + 0x38]
	0x0342AB84 MOV X0, X22
	0x0342AB88 MOV X1, X31
	0x0342AB8C BL 0x3227578
	0x0342AB90 MOV X21, X0
	0x0342AB94 MOV X0, X19
	0x0342AB98 LDRB W8, [X0 + 0x30]!
	0x0342AB9C CBZ W8, 0x342ABE8
	0x0342ABA0 ADRP X8, 0xD04000
	0x0342ABA4 LDR X8, [X8 + 0x830]
	0x0342ABA8 LDR X1, [X8]
	0x0342ABAC BL 0x242D714
	0x0342ABB0 CBZ X0, 0x342AF70
	0x0342ABB4 MOV X1, X31
	0x0342ABB8 BL 0x322B5E4
	0x0342ABBC ADRP X8, 0xD04000
	0x0342ABC0 LDR X8, [X8 + 0xF08]
	0x0342ABC4 ADRP X9, 0xCD2000
	0x0342ABC8 LDR X9, [X9 + 0x720]
	0x0342ABCC MOV X2, X0
	0x0342ABD0 LDR X1, [X8]
	0x0342ABD4 LDR X3, [X9]
	0x0342ABD8 MOV X0, X21
	0x0342ABDC MOV X4, X31
	0x0342ABE0 BL 0x32277C4
	0x0342ABE4 MOV X21, X0
	0x0342ABE8 LDR X22, [X19 + 0x38]
	0x0342ABEC CBZ X22, 0x342AC38
	0x0342ABF0 LDR X0, [X23]
	0x0342ABF4 LDR W8, [X0 + 0xE0]
	0x0342ABF8 CBNZ W8, 0x342AC00
	0x0342ABFC BL 0x1C16DFC
	0x0342AC00 MOV X0, X22
	0x0342AC04 MOV X1, X31
	0x0342AC08 BL 0x3624D20
	0x0342AC0C ADRP X8, 0xD04000
	0x0342AC10 LDR X8, [X8 + 0xF20]
	0x0342AC14 ADRP X9, 0xCD2000
	0x0342AC18 LDR X9, [X9 + 0x720]
	0x0342AC1C MOV X2, X0
	0x0342AC20 LDR X1, [X8]
	0x0342AC24 LDR X3, [X9]
	0x0342AC28 MOV X0, X21
	0x0342AC2C MOV X4, X31
	0x0342AC30 BL 0x32277C4
	0x0342AC34 MOV X21, X0
	0x0342AC38 CBZ X24, 0x342AF3C
	0x0342AC3C LDR X0, [X24 + 0x20]
	0x0342AC40 CBZ X0, 0x342AF40
	0x0342AC44 MOV X1, X31
	0x0342AC48 BL 0x361B448
	0x0342AC4C ADRP X8, 0xCD2000
	0x0342AC50 LDR X8, [X8 + 0x8D8]
	0x0342AC54 MOV X22, X0
	0x0342AC58 LDR X0, [X8]
	0x0342AC5C MOVZ W1, 0x1
	0x0342AC60 BL 0x1C16D6C
	0x0342AC64 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB4000
	014 Move W8, [X20+1605]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xD05000
	021 Move X0, [X0+3744]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCD000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD3000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCB000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCCB000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCB000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD05000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCD000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCD000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCD000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD3000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCF3000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xD05000
	057 Move X0, [X0+3752]
	058 Call 0x1C17CF4
	059 Move X0, 0xD05000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xD05000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCCA000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1605], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCCD000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xD05000
	086 Move X9, 0xCCA000
	087 Move X8, [X8+3752]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCD3000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCD3000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCF3000
	139 Move X9, 0xCCB000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCCB000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xD05000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xD05000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCCB000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xD05000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCCD000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCCD000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCCD000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xD05000
	269 Move X8, [X8+3744]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCD2000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xD05000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xD05000
	301 Move X0, [X0+3760]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCCA000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCCD000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA8B000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342AC68 CBZ X1, 0x342AF44
	0x0342AC6C LDR W8, [X1 + 0x18]
	0x0342AC70 CBZ W8, 0x342AF48
	0x0342AC74 MOVZ W8, 0x2F
	0x0342AC78 STRH W8, [X1 + 0x20]
	0x0342AC7C CBZ X22, 0x342AF4C
	0x0342AC80 MOV X0, X22
	0x0342AC84 MOV X2, X31
	0x0342AC88 BL 0x322BC58
	0x0342AC8C MOV X1, X20
	0x0342AC90 MOV X2, X31
	0x0342AC94 BL 0x321B938
	0x0342AC98 ADRP X8, 0xCD2000
	0x0342AC9C LDR X8, [X8 + 0x3A0]
	0x0342ACA0 MOV X22, X0
	0x0342ACA4 LDR X23, [X24 + 0x20]
	0x0342ACA8 LDR X0, [X8]
	0x0342ACAC BL 0x1C16F10
	0x0342ACB0 MOV X20, X0
	0x0342ACB4 MOV X1, X23
	0x0342ACB8 MOV X2, X31
	0x0342ACBC BL 0x36281F8
	0x0342ACC0 CBZ X20, 0x342AF50
	0x0342ACC4 MOV X0, X20
	0x0342ACC8 MOV X1, X22
	0x0342ACCC MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB4000
	007 Move X22, 0xCCD000
	008 Move W8, [X21+1606]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCCD000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1606], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

