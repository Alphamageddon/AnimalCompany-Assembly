Type: Nakama.ApiMatchList

Method: System.Collections.Generic.IEnumerable`1<Nakama.IApiMatch> get_Matches()

Disassembly:
	0x03408930 CMP X11, X1
	0x03408934 B.EQ 0x3408954
	0x03408938 SUBS X9, X9, 0x1
	0x0340893C ADD X10, X10, 0x10
	0x03408940 B.NE 0x340892C
	0x03408944 MOV X0, X20
	0x03408948 MOV W2, W31
	0x0340894C BL 0x1C5C788
	0x03408950 B 0x3408960
	0x03408954 LDRSW X9, [X10]
	0x03408958 ADD X8, X8, X9, 0x4, LSL
	0x0340895C ADD X0, X8, 0x138
	0x03408960 LDP X8, X1, [X0]
	0x03408964 MOV X0, X20
	0x03408968 BLR X8
	0x0340896C TBZ X0, 0x0, 0x3408A44
	0x03408970 LDR X8, [X20]
	0x03408974 LDR X1, [X29]
	0x03408978 LDRH W9, [X8 + 0x12E]
	0x0340897C CBZ X9, 0x34089A0
	0x03408980 LDR X10, [X8 + 0xB0]
	0x03408984 ADD X10, X10, 0x8
	0x03408988 LDUR X11, [X10 - 0x8]
	0x0340898C CMP X11, X1
	0x03408990 B.EQ 0x34089B0
	0x03408994 SUBS X9, X9, 0x1
	0x03408998 ADD X10, X10, 0x10
	0x0340899C B.NE 0x3408988
	0x034089A0 MOV X0, X20
	0x034089A4 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD6000
	005 Move W8, [X20+1337]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD26000
	012 Move X0, [X0+4072]
	013 Call 0x1C17CF4
	014 Move X0, 0xD26000
	015 Move X0, [X0+4080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1337], W8
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xD26000
	023 Move X8, [X8+4080]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xD26000
	027 Move X8, [X8+4072]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.ApiMatch> get__matches()

Disassembly:
	0x034089A8 BL 0x1C5C788
	0x034089AC B 0x34089BC

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__matches(System.Collections.Generic.List`1<Nakama.ApiMatch> value)

Disassembly:
	0x034089B0 LDRSW X9, [X10]
	0x034089B4 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034089B8 ADD X0, X8, 0x138
	0x034089BC LDP X8, X1, [X0]
	0x034089C0 MOV X0, X20
	0x034089C4 BLR X8
	0x034089C8 MOV X23, X0
	0x034089CC LDR X0, [X26]
	0x034089D0 MOV X22, X1
	0x034089D4 MOVZ W1, 0x5
	0x034089D8 BL 0x1C16D6C
	0x034089DC CBZ X0, 0x3408B08
	0x034089E0 LDR W8, [X0 + 0x18]
	0x034089E4 CBZ W8, 0x3408B10
	0x034089E8 LDR X9, [X24]
	0x034089EC CMP W8, 0x1
	0x034089F0 STR X9, [X0 + 0x20]
	0x034089F4 B.EQ 0x3408B04
	0x034089F8 CMP W8, 0x2
	0x034089FC STR X23, [X0 + 0x28]
	0x03408A00 B.LS 0x3408B14
	0x03408A04 LDR X9, [X25]
	0x03408A08 CMP W8, 0x3
	0x03408A0C STR X9, [X0 + 0x30]
	0x03408A10 B.EQ 0x3408B18
	0x03408A14 CMP W8, 0x4
	0x03408A18 STR X22, [X0 + 0x38]
	0x03408A1C B.LS 0x3408B0C
	0x03408A20 LDR X8, [X19]
	0x03408A24 STR X8, [X0 + 0x40]
	0x03408A28 MOV X1, X31
	0x03408A2C BL 0x32278CC
	0x03408A30 MOV X1, X0
	0x03408A34 MOV X0, X21
	0x03408A38 MOV X2, X31
	0x03408A3C BL 0x321B938
	0x03408A40 B 0x340890C
	0x03408A44 MOV X22, X31
	0x03408A48 CBZ X20, 0x3408AAC
	0x03408A4C LDR X8, [X20]
	0x03408A50 ADRP X10, 0xCEB000
	0x03408A54 LDRH W9, [X8 + 0x12E]
	0x03408A58 LDR X10, [X10 + 0xE00]
	0x03408A5C LDR X1, [X10]
	0x03408A60 CBZ X9, 0x3408A84
	0x03408A64 LDR X10, [X8 + 0xB0]
	0x03408A68 ADD X10, X10, 0x8
	0x03408A6C LDUR X11, [X10 - 0x8]
	0x03408A70 CMP X11, X1
	0x03408A74 B.EQ 0x3408A94
	0x03408A78 SUBS X9, X9, 0x1
	0x03408A7C ADD X10, X10, 0x10
	0x03408A80 B.NE 0x3408A6C
	0x03408A84 MOV X0, X20
	0x03408A88 MOV W2, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xFD6000
	010 Move X23, 0xCEC000
	011 Move X24, 0xD26000
	012 Move X20, 0xCEC000
	013 Move X21, 0xD27000
	014 Move X22, 0xD26000
	015 Move W8, [X25+1338]
	016 Move X23, [X23+2104]
	017 Move X24, [X24+4088]
	018 Move X20, [X20+2440]
	019 Move X21, [X21]
	020 Move X22, [X22+3408]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0xD26000
	027 Move X0, [X0+4088]
	028 Call 0x1C17CF4
	029 Move X0, 0xCEC000
	030 Move X0, [X0+2104]
	031 Call 0x1C17CF4
	032 Move X0, 0xD26000
	033 Move X0, [X0+3408]
	034 Call 0x1C17CF4
	035 Move X0, 0xD27000
	036 Move X0, [X0]
	037 Call 0x1C17CF4
	038 Move X0, 0xCEC000
	039 Move X0, [X0+2440]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+1338], W8
	043 Move X0, X19
	044 Call ApiMatchList.get_Matches, X0
	045 Move X8, [X23]
	046 Move X2, [X24]
	047 Move X1, X0
	048 Move X0, X8
	049 Call String.Join, X0, X1
	050 Move X8, [X20]
	051 Move X1, [X21]
	052 Move X3, [X22]
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X2, X0
	060 Move X0, X8
	061 Move X4, X31
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Call String.Concat, X0, X1, X2, X3
	065 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03408A8C BL 0x1C5C788
	0x03408A90 B 0x3408AA0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

