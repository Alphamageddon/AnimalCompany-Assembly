Type: Nakama.ApiUsers

Method: System.Collections.Generic.IEnumerable`1<Nakama.IApiUser> get_Users()

Disassembly:
	0x0340C6C0 LDR X0, [X0 + 0x28]
	0x0340C6C4 RET
	0x0340C6C8 STR X1, [X0 + 0x28]
	0x0340C6CC RET
	0x0340C6D0 LDR X0, [X0 + 0x30]
	0x0340C6D4 RET
	0x0340C6D8 STR X1, [X0 + 0x30]
	0x0340C6DC RET
	0x0340C6E0 LDR X0, [X0 + 0x38]
	0x0340C6E4 RET
	0x0340C6E8 STR X1, [X0 + 0x38]
	0x0340C6EC RET
	0x0340C6F0 LDRB W0, [X0 + 0x40]
	0x0340C6F4 RET
	0x0340C6F8 AND W8, W1, 0x1
	0x0340C6FC STRB W8, [X0 + 0x40]
	0x0340C700 RET
	0x0340C704 LDR W0, [X0 + 0x44]
	0x0340C708 RET
	0x0340C70C LDR W0, [X0 + 0x44]
	0x0340C710 RET
	0x0340C714 STR W1, [X0 + 0x44]
	0x0340C718 RET
	0x0340C71C LDR X0, [X0 + 0x48]
	0x0340C720 RET
	0x0340C724 STR X1, [X0 + 0x48]
	0x0340C728 RET
	0x0340C72C LDR X0, [X0 + 0x50]
	0x0340C730 RET
	0x0340C734 STR X1, [X0 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD2000
	005 Move W8, [X20+1370]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD23000
	012 Move X0, [X0+464]
	013 Call 0x1C17CF4
	014 Move X0, 0xD23000
	015 Move X0, [X0+472]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1370], W8
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xD23000
	023 Move X8, [X8+472]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xD23000
	027 Move X8, [X8+464]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.ApiUser> get__users()

Disassembly:
	0x0340C738 RET
	0x0340C73C LDR X0, [X0 + 0x58]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__users(System.Collections.Generic.List`1<Nakama.ApiUser> value)

Disassembly:
	0x0340C740 RET
	0x0340C744 STR X1, [X0 + 0x58]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0340C748 RET
	0x0340C74C SUB X31, X31, 0x60
	0x0340C750 STR X30, [X31 + 0x10]
	0x0340C754 STP X26, X25, [X31 + 0x20]
	0x0340C758 STP X24, X23, [X31 + 0x30]
	0x0340C75C STP X22, X21, [X31 + 0x40]
	0x0340C760 STP X20, X19, [X31 + 0x50]
	0x0340C764 ADRP X21, 0xFD1000
	0x0340C768 ADRP X24, 0xCE7000
	0x0340C76C ADRP X20, 0xD21000
	0x0340C770 ADRP X22, 0xCE7000
	0x0340C774 ADRP X23, 0xCE7000
	0x0340C778 LDRB W8, [X21 + 0x565]
	0x0340C77C LDR X24, [X24 + 0x988]
	0x0340C780 LDR X20, [X20 + 0xDE0]
	0x0340C784 LDR X22, [X22 + 0x838]
	0x0340C788 LDR X23, [X23 + 0x9D0]
	0x0340C78C MOV X19, X0
	0x0340C790 TBNZ X8, 0x0, 0x340C868
	0x0340C794 ADRP X0, 0xD22000
	0x0340C798 LDR X0, [X0 + 0x238]
	0x0340C79C BL 0x1C16CF4
	0x0340C7A0 ADRP X0, 0xD22000
	0x0340C7A4 LDR X0, [X0 + 0x240]
	0x0340C7A8 BL 0x1C16CF4
	0x0340C7AC ADRP X0, 0xCE7000
	0x0340C7B0 LDR X0, [X0 + 0xB58]
	0x0340C7B4 BL 0x1C16CF4
	0x0340C7B8 ADRP X0, 0xCE7000
	0x0340C7BC LDR X0, [X0 + 0x9D0]
	0x0340C7C0 BL 0x1C16CF4
	0x0340C7C4 ADRP X0, 0xD22000
	0x0340C7C8 LDR X0, [X0 + 0x248]
	0x0340C7CC BL 0x1C16CF4
	0x0340C7D0 ADRP X0, 0xD22000
	0x0340C7D4 LDR X0, [X0 + 0x250]
	0x0340C7D8 BL 0x1C16CF4
	0x0340C7DC ADRP X0, 0xD21000
	0x0340C7E0 LDR X0, [X0 + 0xDE0]
	0x0340C7E4 BL 0x1C16CF4
	0x0340C7E8 ADRP X0, 0xCE7000
	0x0340C7EC LDR X0, [X0 + 0x838]
	0x0340C7F0 BL 0x1C16CF4
	0x0340C7F4 ADRP X0, 0xD22000
	0x0340C7F8 LDR X0, [X0 + 0x258]
	0x0340C7FC BL 0x1C16CF4
	0x0340C800 ADRP X0, 0xD21000
	0x0340C804 LDR X0, [X0 + 0xDE8]
	0x0340C808 BL 0x1C16CF4
	0x0340C80C ADRP X0, 0xD22000
	0x0340C810 LDR X0, [X0 + 0x260]
	0x0340C814 BL 0x1C16CF4
	0x0340C818 ADRP X0, 0xD22000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xFD2000
	010 Move X23, 0xCE8000
	011 Move X24, 0xD23000
	012 Move X20, 0xCE8000
	013 Move X21, 0xD23000
	014 Move X22, 0xD22000
	015 Move W8, [X25+1371]
	016 Move X23, [X23+2104]
	017 Move X24, [X24+480]
	018 Move X20, [X20+2440]
	019 Move X21, [X21+488]
	020 Move X22, [X22+3408]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0xD23000
	027 Move X0, [X0+480]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE8000
	030 Move X0, [X0+2104]
	031 Call 0x1C17CF4
	032 Move X0, 0xD23000
	033 Move X0, [X0+488]
	034 Call 0x1C17CF4
	035 Move X0, 0xD22000
	036 Move X0, [X0+3408]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE8000
	039 Move X0, [X0+2440]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+1371], W8
	043 Move X0, X19
	044 Call ApiUsers.get_Users, X0
	045 Move X8, [X23]
	046 Move X2, [X24]
	047 Move X1, X0
	048 Move X0, X8
	049 Call String.Join, X0, X1
	050 Move X8, [X20]
	051 Move X1, [X21]
	052 Move X3, [X22]
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X2, X0
	060 Move X0, X8
	061 Move X4, X31
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Call String.Concat, X0, X1, X2, X3
	065 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0340C81C LDR X0, [X0 + 0x268]
	0x0340C820 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

