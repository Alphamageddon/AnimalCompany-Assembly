Type: Nakama.Client/<AuthenticateFacebookAsync>d__48

Method: System.Void MoveNext()

Disassembly:
	0x0344F378 BL 0x1C16D08
	0x0344F37C MOV X2, X0
	0x0344F380 MOV X0, X19
	0x0344F384 MOV X1, X20
	0x0344F388 BL 0x26324C8
	0x0344F38C B 0x344F2AC
	0x0344F390 MOVZ W0, 0x8
	0x0344F394 BL 0x3EB1AF0
	0x0344F398 LDR X8, [X20]
	0x0344F39C STR X8, [X0]
	0x0344F3A0 ADRP X1, 0xA65000
	0x0344F3A4 ADD X1, X1, 0xE58
	0x0344F3A8 MOV X2, X31
	0x0344F3AC BL 0x3EB1B00
	0x0344F3B0 MOV X20, X0
	0x0344F3B4 BL 0x3EB1AE0
	0x0344F3B8 MOV X0, X20
	0x0344F3BC BL 0x1D2C690
	0x0344F3C0 BL 0x1990590
	0x0344F3C4 STR X30, [X31 - 0x30]!
	0x0344F3C8 STP X22, X21, [X31 + 0x10]
	0x0344F3CC STP X20, X19, [X31 + 0x20]
	0x0344F3D0 ADRP X22, 0xF8E000
	0x0344F3D4 ADRP X21, 0xCE0000
	0x0344F3D8 LDRB W8, [X22 + 0x764]
	0x0344F3DC LDR X21, [X21 + 0x630]
	0x0344F3E0 MOV X19, X1
	0x0344F3E4 MOV X20, X0
	0x0344F3E8 TBNZ X8, 0x0, 0x344F40C
	0x0344F3EC ADRP X0, 0xCE0000
	0x0344F3F0 LDR X0, [X0 + 0xAA8]
	0x0344F3F4 BL 0x1C16CF4
	0x0344F3F8 ADRP X0, 0xCE0000
	0x0344F3FC LDR X0, [X0 + 0x630]
	0x0344F400 BL 0x1C16CF4
	0x0344F404 MOVZ W8, 0x1
	0x0344F408 STRB W8, [X22 + 0x764]
	0x0344F40C LDR X0, [X21]
	0x0344F410 ADRP X21, 0xCE0000
	0x0344F414 LDR W8, [X0 + 0xE0]
	0x0344F418 LDR X21, [X21 + 0xAA8]
	0x0344F41C CBNZ W8, 0x344F424
	0x0344F420 BL 0x1C16DFC
	0x0344F424 LDR X2, [X21]
	0x0344F428 ADD X0, X20, 0x8
	0x0344F42C MOV X1, X19
	0x0344F430 LDP X20, X19, [X31 + 0x20]
	0x0344F434 LDP X22, X21, [X31 + 0x10]
	0x0344F438 LDR X30, [X31], #0x30
	0x0344F43C B 0x2632228
	0x0344F440 SUB X31, X31, 0x60
	0x0344F444 STP X30, X25, [X31 + 0x20]
	0x0344F448 STP X24, X23, [X31 + 0x30]
	0x0344F44C STP X22, X21, [X31 + 0x40]
	0x0344F450 STP X20, X19, [X31 + 0x50]
	0x0344F454 ADRP X20, 0xF8E000
	0x0344F458 LDRB W8, [X20 + 0x765]
	0x0344F45C MOV X19, X0
	0x0344F460 TBNZ X8, 0x0, 0x344F514
	0x0344F464 ADRP X0, 0xCE0000
	0x0344F468 LDR X0, [X0 + 0xB40]
	0x0344F46C BL 0x1C16CF4
	0x0344F470 ADRP X0, 0xCE0000
	0x0344F474 LDR X0, [X0 + 0xA50]
	0x0344F478 BL 0x1C16CF4
	0x0344F47C ADRP X0, 0xCE0000
	0x0344F480 LDR X0, [X0 + 0x630]
	0x0344F484 BL 0x1C16CF4
	0x0344F488 ADRP X0, 0xCE0000
	0x0344F48C LDR X0, [X0 + 0xA58]
	0x0344F490 BL 0x1C16CF4
	0x0344F494 ADRP X0, 0xCE0000
	0x0344F498 LDR X0, [X0 + 0xA60]
	0x0344F49C BL 0x1C16CF4
	0x0344F4A0 ADRP X0, 0xCE0000
	0x0344F4A4 LDR X0, [X0 + 0x7C8]
	0x0344F4A8 BL 0x1C16CF4
	0x0344F4AC ADRP X0, 0xCE0000
	0x0344F4B0 LDR X0, [X0 + 0x7D0]
	0x0344F4B4 BL 0x1C16CF4
	0x0344F4B8 ADRP X0, 0xCE0000
	0x0344F4BC LDR X0, [X0 + 0xA68]
	0x0344F4C0 BL 0x1C16CF4
	0x0344F4C4 ADRP X0, 0xCE0000
	0x0344F4C8 LDR X0, [X0 + 0xA70]
	0x0344F4CC BL 0x1C16CF4
	0x0344F4D0 ADRP X0, 0xCE0000
	0x0344F4D4 LDR X0, [X0 + 0xA78]
	0x0344F4D8 BL 0x1C16CF4
	0x0344F4DC ADRP X0, 0xCE0000
	0x0344F4E0 LDR X0, [X0 + 0xA80]
	0x0344F4E4 BL 0x1C16CF4
	0x0344F4E8 ADRP X0, 0xCE0000
	0x0344F4EC LDR X0, [X0 + 0xA88]
	0x0344F4F0 BL 0x1C16CF4
	0x0344F4F4 ADRP X0, 0xCE0000
	0x0344F4F8 LDR X0, [X0 + 0xB48]
	0x0344F4FC BL 0x1C16CF4
	0x0344F500 ADRP X0, 0xCE0000
	0x0344F504 LDR X0, [X0 + 0xB50]
	0x0344F508 BL 0x1C16CF4
	0x0344F50C MOVZ W8, 0x1
	0x0344F510 STRB W8, [X20 + 0x765]
	0x0344F514 STR X31, [X31 + 0x18]
	0x0344F518 ADRP X25, 0xCE0000
	0x0344F51C LDR W8, [X19]
	0x0344F520 LDR X25, [X25 + 0x630]
	0x0344F524 CBZ W8, 0x344F698
	0x0344F528 ADRP X8, 0xCE0000
	0x0344F52C LDR X8, [X8 + 0xB50]
	0x0344F530 LDR X24, [X19 + 0x20]
	0x0344F534 LDR X0, [X8]
	0x0344F538 BL 0x1C16F10
	0x0344F53C MOV X22, X0
	0x0344F540 MOV X1, X31
	0x0344F544 BL 0x34483D0
	0x0344F548 CBZ X22, 0x344F860
	0x0344F54C LDR X8, [X19 + 0x20]
	0x0344F550 STR X8, [X22 + 0x10]
	0x0344F554 LDR X8, [X19 + 0x28]
	0x0344F558 STR X8, [X22 + 0x18]
	0x0344F55C LDR X8, [X19 + 0x30]
	0x0344F560 STR X8, [X22 + 0x20]
	0x0344F564 LDRB W8, [X19 + 0x38]
	0x0344F568 STRB W8, [X22 + 0x28]
	0x0344F56C LDR X8, [X19 + 0x40]
	0x0344F570 STR X8, [X22 + 0x30]
	0x0344F574 LDRB W8, [X19 + 0x48]
	0x0344F578 STRB W8, [X22 + 0x38]
	0x0344F57C LDR X8, [X19 + 0x50]
	0x0344F580 STR X8, [X22 + 0x40]
	0x0344F584 CBZ X24, 0x344F864
	0x0344F588 ADRP X8, 0xCE0000
	0x0344F58C LDR X8, [X8 + 0xA58]
	0x0344F590 LDR X20, [X24 + 0x58]
	0x0344F594 LDR X0, [X8]
	0x0344F598 BL 0x1C16F10
	0x0344F59C ADRP X8, 0xCE0000
	0x0344F5A0 LDR X8, [X8 + 0xB48]
	0x0344F5A4 MOV X21, X0
	0x0344F5A8 LDR X2, [X8]
	0x0344F5AC MOV X1, X22
	0x0344F5B0 MOV X3, X31
	0x0344F5B4 BL 0x2D27AA8
	0x0344F5B8 ADRP X8, 0xCE0000
	0x0344F5BC LDR X23, [X19 + 0x58]
	0x0344F5C0 LDR X8, [X8 + 0x7C8]
	0x0344F5C4 CBNZ X23, 0x344F5CC
	0x0344F5C8 LDR X23, [X24 + 0x18]
	0x0344F5CC LDR X24, [X22 + 0x18]
	0x0344F5D0 LDR X1, [X22 + 0x40]
	0x0344F5D4 LDR X2, [X8]
	0x0344F5D8 STP X31, X31, [X31 + 0x8]
	0x0344F5DC ADD X0, X31, 0x8
	0x0344F5E0 BL 0x242E368
	0x0344F5E4 ADRP X8, 0xCE0000
	0x0344F5E8 LDR X8, [X8 + 0x7D0]
	0x0344F5EC LDR X0, [X8]
	0x0344F5F0 BL 0x1C16F10
	0x0344F5F4 LDP X3, X4, [X31 + 0x8]
	0x0344F5F8 MOV X22, X0
	0x0344F5FC MOV X1, X24
	0x0344F600 MOV X2, X23
	0x0344F604 MOV X5, X31
	0x0344F608 BL 0x3478040
	0x0344F60C CBZ X20, 0x344F868
	0x0344F610 ADRP X8, 0xCE0000
	0x0344F614 LDR X8, [X8 + 0xA68]
	0x0344F618 LDR X3, [X8]
	0x0344F61C MOV X0, X20
	0x0344F620 MOV X1, X21
	0x0344F624 MOV X2, X22
	0x0344F628 BL 0x2243230
	0x0344F62C CBZ X0, 0x344F86C
	0x0344F630 ADRP X8, 0xCE0000
	0x0344F634 LDR X8, [X8 + 0xA88]
	0x0344F638 LDR X1, [X8]
	0x0344F63C BL 0x269F5D0
	0x0344F640 ADRP X8, 0xCE0000
	0x0344F644 LDR X8, [X8 + 0xA80]
	0x0344F648 STR X0, [X31 + 0x18]
	0x0344F64C LDR X1, [X8]
	0x0344F650 ADD X0, X31, 0x18
	0x0344F654 BL 0x2677430
	0x0344F658 TBNZ X0, 0x0, 0x344F6AC
	0x0344F65C STR W31, [X19]
	0x0344F660 LDR X8, [X31 + 0x18]
	0x0344F664 STR X8, [X19 + 0x60]
	0x0344F668 LDR X0, [X25]
	0x0344F66C LDR W8, [X0 + 0xE0]
	0x0344F670 CBNZ W8, 0x344F678
	0x0344F674 BL 0x1C16DFC
	0x0344F678 ADRP X8, 0xCE0000
	0x0344F67C LDR X8, [X8 + 0xB40]
	0x0344F680 ADD X0, X19, 0x8
	0x0344F684 LDR X3, [X8]
	0x0344F688 ADD X1, X31, 0x18
	0x0344F68C MOV X2, X19
	0x0344F690 BL 0x1FBA7D4
	0x0344F694 B 0x344F844
	0x0344F698 LDR X8, [X19 + 0x60]
	0x0344F69C MOVN W9, 0x0
	0x0344F6A0 STR X8, [X31 + 0x18]
	0x0344F6A4 STR X31, [X19 + 0x60]
	0x0344F6A8 STR W9, [X19]
	0x0344F6AC ADRP X8, 0xCE0000
	0x0344F6B0 LDR X8, [X8 + 0xA78]
	0x0344F6B4 ADD X0, X31, 0x18
	0x0344F6B8 LDR X1, [X8]
	0x0344F6BC BL 0x2677474
	0x0344F6C0 MOV X20, X0
	0x0344F6C4 CBZ X0, 0x344F85C
	0x0344F6C8 ADRP X23, 0xCE0000
	0x0344F6CC LDR X8, [X20]
	0x0344F6D0 LDR X23, [X23 + 0xA60]
	0x0344F6D4 LDRH W9, [X8 + 0x12E]
	0x0344F6D8 LDR X1, [X23]
	0x0344F6DC CBZ X9, 0x344F700
	0x0344F6E0 LDR X10, [X8 + 0xB0]
	0x0344F6E4 ADD X10, X10, 0x8
	0x0344F6E8 LDUR X11, [X10 - 0x8]
	0x0344F6EC CMP X11, X1
	0x0344F6F0 B.EQ 0x344F710
	0x0344F6F4 SUBS X9, X9, 0x1
	0x0344F6F8 ADD X10, X10, 0x10
	0x0344F6FC B.NE 0x344F6E8
	0x0344F700 MOVZ W2, 0x2
	0x0344F704 MOV X0, X20
	0x0344F708 BL 0x1C5C788
	0x0344F70C B 0x344F720
	0x0344F710 LDR W9, [X10]
	0x0344F714 ADD W9, W9, 0x2
	0x0344F718 ADD X8, X8, W9, 0x4, SXTW
	0x0344F71C ADD X0, X8, 0x138
	0x0344F720 LDP X8, X1, [X0]
	0x0344F724 MOV X0, X20
	0x0344F728 BLR X8
	0x0344F72C LDR X8, [X20]
	0x0344F730 LDR X1, [X23]
	0x0344F734 MOV X21, X0
	0x0344F738 LDRH W9, [X8 + 0x12E]
	0x0344F73C CBZ X9, 0x344F760
	0x0344F740 LDR X10, [X8 + 0xB0]
	0x0344F744 ADD X10, X10, 0x8
	0x0344F748 LDUR X11, [X10 - 0x8]
	0x0344F74C CMP X11, X1
	0x0344F750 B.EQ 0x344F770
	0x0344F754 SUBS X9, X9, 0x1
	0x0344F758 ADD X10, X10, 0x10
	0x0344F75C B.NE 0x344F748
	0x0344F760 MOVZ W2, 0x1
	0x0344F764 MOV X0, X20
	0x0344F768 BL 0x1C5C788
	0x0344F76C B 0x344F780
	0x0344F770 LDR W9, [X10]
	0x0344F774 ADD W9, W9, 0x1
	0x0344F778 ADD X8, X8, W9, 0x4, SXTW
	0x0344F77C ADD X0, X8, 0x138
	0x0344F780 LDP X8, X1, [X0]
	0x0344F784 MOV X0, X20
	0x0344F788 BLR X8
	0x0344F78C LDR X8, [X20]
	0x0344F790 LDR X1, [X23]
	0x0344F794 MOV X22, X0
	0x0344F798 LDRH W9, [X8 + 0x12E]
	0x0344F79C CBZ X9, 0x344F7C0
	0x0344F7A0 LDR X10, [X8 + 0xB0]
	0x0344F7A4 ADD X10, X10, 0x8
	0x0344F7A8 LDUR X11, [X10 - 0x8]
	0x0344F7AC CMP X11, X1
	0x0344F7B0 B.EQ 0x344F7D0
	0x0344F7B4 SUBS X9, X9, 0x1
	0x0344F7B8 ADD X10, X10, 0x10
	0x0344F7BC B.NE 0x344F7A8
	0x0344F7C0 MOV X0, X20
	0x0344F7C4 MOV W2, W31
	0x0344F7C8 BL 0x1C5C788
	0x0344F7CC B 0x344F7DC
	0x0344F7D0 LDRSW X9, [X10]
	0x0344F7D4 ADD X8, X8, X9, 0x4, LSL
	0x0344F7D8 ADD X0, X8, 0x138
	0x0344F7DC LDP X8, X1, [X0]
	0x0344F7E0 MOV X0, X20
	0x0344F7E4 BLR X8
	0x0344F7E8 ADRP X8, 0xCE0000
	0x0344F7EC LDR X8, [X8 + 0xA70]
	0x0344F7F0 MOV W23, W0
	0x0344F7F4 LDR X0, [X8]
	0x0344F7F8 BL 0x1C16F10
	0x0344F7FC MOV X20, X0
	0x0344F800 AND W3, W23, 0x1
	0x0344F804 MOV X1, X21
	0x0344F808 MOV X2, X22
	0x0344F80C MOV X4, X31
	0x0344F810 BL 0x34684B8
	0x0344F814 MOVN W8, 0x1
	0x0344F818 STR W8, [X19], #0x8
	0x0344F81C LDR X0, [X25]
	0x0344F820 ADRP X21, 0xCE0000
	0x0344F824 LDR W8, [X0 + 0xE0]
	0x0344F828 LDR X21, [X21 + 0xA50]
	0x0344F82C CBNZ W8, 0x344F834
	0x0344F830 BL 0x1C16DFC
	0x0344F834 LDR X2, [X21]
	0x0344F838 MOV X0, X19
	0x0344F83C MOV X1, X20
	0x0344F840 BL 0x26322B0
	0x0344F844 LDP X20, X19, [X31 + 0x50]
	0x0344F848 LDP X22, X21, [X31 + 0x40]
	0x0344F84C LDP X24, X23, [X31 + 0x30]
	0x0344F850 LDP X30, X25, [X31 + 0x20]
	0x0344F854 ADD X31, X31, 0x60
	0x0344F858 RET
	0x0344F85C BL 0x1C16F20
	0x0344F860 BL 0x1C16F20
	0x0344F864 BL 0x1C16F20
	0x0344F868 BL 0x1C16F20
	0x0344F86C BL 0x1C16F20
	0x0344F870 B 0x344F8AC
	0x0344F874 B 0x344F8AC
	0x0344F878 B 0x344F8AC
	0x0344F87C B 0x344F8AC
	0x0344F880 B 0x344F8AC
	0x0344F884 B 0x344F8AC
	0x0344F888 B 0x344F8AC
	0x0344F88C B 0x344F8AC
	0x0344F890 B 0x344F8AC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0xF8F000
	011 Move W8, [X20+1887]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE1000
	018 Move X0, [X0+2808]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE1000
	021 Move X0, [X0+2640]
	022 Call 0x1C17CF4
	023 Move X0, 0xCE1000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE1000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE1000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE1000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE1000
	036 Move X0, [X0+2000]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE1000
	039 Move X0, [X0+2664]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE1000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0xCE1000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0xCE1000
	048 Move X0, [X0+2688]
	049 Call 0x1C17CF4
	050 Move X0, 0xCE1000
	051 Move X0, [X0+2696]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE1000
	054 Move X0, [X0+2816]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE1000
	057 Move X0, [X0+2824]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1887], W8
	061 Move [X31+24], X31
	062 Move X25, 0xCE1000
	063 Move W8, [X19]
	064 Move X25, [X25+1584]
	065 Compare W8, 0
	066 JumpIfEqual {169}
	067 Move X8, 0xCE1000
	068 Move X8, [X8+2824]
	069 Move X24, [X19+32]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X22, X0
	073 Move X1, X31
	074 Call Object..ctor, X0
	075 Compare X22, 0
	076 JumpIfEqual {290}
	077 Move X8, [X19+32]
	078 Move [X22+16], X8
	079 Move X8, [X19+40]
	080 Move [X22+24], X8
	081 Move X8, [X19+48]
	082 Move [X22+32], X8
	083 Move W8, [X19+56]
	084 Move [X22+40], W8
	085 Move X8, [X19+64]
	086 Move [X22+48], X8
	087 Move W8, [X19+72]
	088 Move [X22+56], W8
	089 Move X8, [X19+80]
	090 Move [X22+64], X8
	091 Compare X24, 0
	092 JumpIfEqual {291}
	093 Move X8, 0xCE1000
	094 Move X8, [X8+2648]
	095 Move X20, [X24+88]
	096 Move X0, [X8]
	097 Call 0x1C17F10
	098 Move X8, 0xCE1000
	099 Move X8, [X8+2816]
	100 Move X21, X0
	101 Move X2, [X8]
	102 Move X1, X22
	103 Move X3, X31
	104 Call Func`1<Object>..ctor, X0, X1, X2
	105 Move X8, 0xCE1000
	106 Move X23, [X19+88]
	107 Move X8, [X8+1992]
	108 Compare X23, 0
	109 JumpIfNotEqual {111}
	110 Move X23, [X24+24]
	111 Move X24, [X22+24]
	112 Move X1, [X22+64]
	113 Move X2, [X8]
	114 Move [X31+8], X31
	115 Move [X31+16], X31
	116 Add X0, X31, 8
	117 Call Nullable`1<CancellationToken>..ctor, X0, X1
	118 Move X8, 0xCE1000
	119 Move X8, [X8+2000]
	120 Move X0, [X8]
	121 Call 0x1C17F10
	122 Move X3, [X31+8]
	123 Move X4, [X31+16]
	124 Move X22, X0
	125 Move X1, X24
	126 Move X2, X23
	127 Move X5, X31
	128 Call RetryHistory..ctor, X0, X1, X2, X3
	129 Compare X20, 0
	130 JumpIfEqual {292}
	131 Move X8, 0xCE1000
	132 Move X8, [X8+2664]
	133 Move X3, [X8]
	134 Move X0, X20
	135 Move X1, X21
	136 Move X2, X22
	137 Call 0x2244230, X0, X1, X2
	138 Compare X0, 0
	139 JumpIfEqual {293}
	140 Move X8, 0xCE1000
	141 Move X8, [X8+2696]
	142 Move X1, [X8]
	143 Call Task`1<Object>.GetAwaiter, X0
	144 Move X8, 0xCE1000
	145 Move X8, [X8+2688]
	146 Move [X31+24], X0
	147 Move X1, [X8]
	148 Add X0, X31, 24
	149 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {176}
	154 Move [X19], W31
	155 Move X8, [X31+24]
	156 Move [X19+96], X8
	157 Move X0, [X25]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X8, 0xCE1000
	163 Move X8, [X8+2808]
	164 Add X0, X19, 8
	165 Move X3, [X8]
	166 Add X1, X31, 24
	167 Move X2, X19
	168 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	169 Move X8, [X19+96]
	170 Move TEMP, 0
	171 Not TEMP
	172 Move W9, TEMP
	173 Move [X31+24], X8
	174 Move [X19+96], X31
	175 Move [X19], W9
	176 Move X8, 0xCE1000
	177 Move X8, [X8+2680]
	178 Add X0, X31, 24
	179 Move X1, [X8]
	180 Call TaskAwaiter`1<Object>.GetResult, X0
	181 Move X20, X0
	182 Compare X0, 0
	183 JumpIfEqual {289}
	184 Move X23, 0xCE1000
	185 Move X8, [X20]
	186 Move X23, [X23+2656]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Move X1, [X23]
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move W2, 2
	198 Move X0, X20
	199 Call 0x1C5D788
	200 Move W9, [X10]
	201 Add W9, W9, 2
	202 Add X8, X8, W9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X1, [X0+8]
	206 Move X0, X20
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X8, [X20]
	209 Move X1, [X23]
	210 Move X21, X0
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move W2, 1
	221 Move X0, X20
	222 Call 0x1C5D788
	223 Move W9, [X10]
	224 Add W9, W9, 1
	225 Add X8, X8, W9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X1, [X0+8]
	229 Move X0, X20
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X8, [X20]
	232 Move X1, [X23]
	233 Move X22, X0
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Compare X9, 0
	236 JumpIfEqual {243}
	237 Move X10, [X8+176]
	238 Add X10, X10, 8
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract X9, X9, 1
	242 Add X10, X10, 16
	243 Move X0, X20
	244 Move W2, W31
	245 Call 0x1C5D788
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Add X8, X8, X9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X1, [X0+8]
	251 Move X0, X20
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X8, 0xCE1000
	254 Move X8, [X8+2672]
	255 Move W23, W0
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X20, X0
	259 And W3, W23, 1
	260 Move X1, X21
	261 Move X2, X22
	262 Move X4, X31
	263 Call Session..ctor, X0, X1, X2, X3
	264 Move TEMP, 1
	265 Not TEMP
	266 Move W8, TEMP
	267 Move [X19+8], W8
	268 Move X0, [X25]
	269 Move X21, 0xCE1000
	270 Move W8, [X0+224]
	271 Move X21, [X21+2640]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X2, [X21]
	276 Move X0, X19
	277 Move X1, X20
	278 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	279 Move X20, [X31+80]
	280 Move X19, [X31+88]
	281 Move X22, [X31+64]
	282 Move X21, [X31+72]
	283 Move X24, [X31+48]
	284 Move X23, [X31+56]
	285 Move X30, [X31+32]
	286 Move X25, [X31+40]
	287 Add X31, X31, 96
	288 Return 
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Move X20, X0
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X0, X20
	297 Call 0x3EB2AD0
	298 Move X20, X0
	299 Move X0, 0xCA5000
	300 Move X0, [X0+2000]
	301 Call 0x1C17D08
	302 Move X8, [X20]
	303 Move X1, [X8]
	304 Call 0x1C18270
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {329}
	309 Move X20, [X20]
	310 Call 0x3EB2AE0
	311 Move TEMP, 1
	312 Not TEMP
	313 Move W8, TEMP
	314 Move [X19+8], W8
	315 Move X0, 0xCE1000
	316 Move X0, [X0+1584]
	317 Call 0x1C17D08
	318 Move W8, [X0+224]
	319 Compare W8, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Move X0, 0xCE1000
	323 Move X0, [X0+2720]
	324 Call 0x1C17D08
	325 Move X2, X0
	326 Move X0, X19
	327 Move X1, X20
	328 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	329 Move W0, 8
	330 Call 0x3EB2AF0
	331 Move X8, [X20]
	332 Move [X0], X8
	333 Move X1, 0xA66000
	334 Add X1, X1, 3672
	335 Move X2, X31
	336 Call 0x3EB2B00
	337 Move X20, X0
	338 Call 0x3EB2AE0
	339 Move X0, X20
	340 Call 0x1D2D690
	341 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0344F894 B 0x344F8AC
	0x0344F898 B 0x344F8AC
	0x0344F89C B 0x344F8AC
	0x0344F8A0 B 0x344F8AC
	0x0344F8A4 B 0x344F8AC
	0x0344F8A8 B 0x344F8AC
	0x0344F8AC MOV X20, X0
	0x0344F8B0 CMP W1, 0x1
	0x0344F8B4 B.NE 0x344F950
	0x0344F8B8 MOV X0, X20
	0x0344F8BC BL 0x3EB1AD0
	0x0344F8C0 MOV X20, X0
	0x0344F8C4 ADRP X0, 0xCA4000
	0x0344F8C8 LDR X0, [X0 + 0x7D0]
	0x0344F8CC BL 0x1C16D08
	0x0344F8D0 LDR X8, [X20]
	0x0344F8D4 LDR X1, [X8]
	0x0344F8D8 BL 0x1C17270
	0x0344F8DC TBZ X0, 0x0, 0x344F928
	0x0344F8E0 LDR X20, [X20]
	0x0344F8E4 BL 0x3EB1AE0
	0x0344F8E8 MOVN W8, 0x1
	0x0344F8EC STR W8, [X19], #0x8
	0x0344F8F0 ADRP X0, 0xCE0000
	0x0344F8F4 LDR X0, [X0 + 0x630]
	0x0344F8F8 BL 0x1C16D08
	0x0344F8FC LDR W8, [X0 + 0xE0]
	0x0344F900 CBNZ W8, 0x344F908
	0x0344F904 BL 0x1C16DFC
	0x0344F908 ADRP X0, 0xCE0000
	0x0344F90C LDR X0, [X0 + 0xAA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF8F000
	007 Move X21, 0xCE1000
	008 Move W8, [X22+1888]
	009 Move X21, [X21+1584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCE1000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0xCE1000
	020 Move X0, [X0+1584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1888], W8
	024 Move X0, [X21]
	025 Move X21, 0xCE1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2728]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

