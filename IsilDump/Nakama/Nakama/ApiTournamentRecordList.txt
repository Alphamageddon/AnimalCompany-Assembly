Type: Nakama.ApiTournamentRecordList

Method: System.String get_NextCursor()

Disassembly:
	0x0340B9E4 RET
	0x0340B9E8 BL 0x1C16F28

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_NextCursor(System.String value)

Disassembly:
	0x0340B9EC BL 0x1C16F44
	0x0340B9F0 MOV X1, X31

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.IApiLeaderboardRecord> get_OwnerRecords()

Disassembly:
	0x0340B9F4 BL 0x1C16DEC
	0x0340B9F8 BL 0x1C16F20
	0x0340B9FC MOV X1, X31
	0x0340BA00 B 0x33BDD8C
	0x0340BA04 LDRB W0, [X0 + 0x10]
	0x0340BA08 RET
	0x0340BA0C AND W8, W1, 0x1
	0x0340BA10 STRB W8, [X0 + 0x10]
	0x0340BA14 RET
	0x0340BA18 LDR X0, [X0 + 0x18]
	0x0340BA1C RET
	0x0340BA20 STR X1, [X0 + 0x18]
	0x0340BA24 RET
	0x0340BA28 STR X30, [X31 - 0x30]!
	0x0340BA2C STP X22, X21, [X31 + 0x10]
	0x0340BA30 STP X20, X19, [X31 + 0x20]
	0x0340BA34 ADRP X20, 0xFD2000
	0x0340BA38 ADRP X21, 0xCE8000
	0x0340BA3C ADRP X22, 0xCE8000
	0x0340BA40 LDRB W8, [X20 + 0x55D]
	0x0340BA44 LDR X21, [X21 + 0x988]
	0x0340BA48 LDR X22, [X22 + 0x9D0]
	0x0340BA4C MOV X19, X0
	0x0340BA50 TBNZ X8, 0x0, 0x340BAA4
	0x0340BA54 ADRP X0, 0xCE8000
	0x0340BA58 LDR X0, [X0 + 0xB58]
	0x0340BA5C BL 0x1C16CF4
	0x0340BA60 ADRP X0, 0xCE8000
	0x0340BA64 LDR X0, [X0 + 0x9D0]
	0x0340BA68 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD3000
	005 Move W8, [X20+1363]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD23000
	012 Move X0, [X0+3952]
	013 Call 0x1C17CF4
	014 Move X0, 0xD23000
	015 Move X0, [X0+3960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1363], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xD23000
	023 Move X8, [X8+3960]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xD23000
	027 Move X8, [X8+3952]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.ApiLeaderboardRecord> get__ownerRecords()

Disassembly:
	0x0340BA6C ADRP X0, 0xCE8000
	0x0340BA70 LDR X0, [X0 + 0x838]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__ownerRecords(System.Collections.Generic.List`1<Nakama.ApiLeaderboardRecord> value)

Disassembly:
	0x0340BA74 BL 0x1C16CF4
	0x0340BA78 ADRP X0, 0xD23000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_PrevCursor()

Disassembly:
	0x0340BA7C LDR X0, [X0 + 0x1F8]
	0x0340BA80 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_PrevCursor(System.String value)

Disassembly:
	0x0340BA84 ADRP X0, 0xD23000
	0x0340BA88 LDR X0, [X0 + 0x200]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_RankCount()

Disassembly:
	0x0340BA8C BL 0x1C16CF4
	0x0340BA90 ADRP X0, 0xCE8000

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_RankCount(System.String value)

Disassembly:
	0x0340BA94 LDR X0, [X0 + 0x988]
	0x0340BA98 BL 0x1C16CF4

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.IApiLeaderboardRecord> get_Records()

Disassembly:
	0x0340BA9C MOVZ W8, 0x1
	0x0340BAA0 STRB W8, [X20 + 0x55D]
	0x0340BAA4 LDR X0, [X22]
	0x0340BAA8 LDR X21, [X21]
	0x0340BAAC MOVZ W1, 0x4
	0x0340BAB0 BL 0x1C16D6C
	0x0340BAB4 CBZ X0, 0x340BBD8
	0x0340BAB8 MOV X20, X0
	0x0340BABC CBZ X21, 0x340BAD4
	0x0340BAC0 LDR X8, [X20]
	0x0340BAC4 MOV X0, X21
	0x0340BAC8 LDR X1, [X8 + 0x40]
	0x0340BACC BL 0x1C16E00
	0x0340BAD0 CBZ X0, 0x340BBCC
	0x0340BAD4 LDR W8, [X20 + 0x18]
	0x0340BAD8 CBZ W8, 0x340BBC8
	0x0340BADC ADRP X22, 0xD23000
	0x0340BAE0 LDR X22, [X22 + 0x1F8]
	0x0340BAE4 STR X21, [X20 + 0x20]
	0x0340BAE8 LDR X0, [X22]
	0x0340BAEC CBZ X0, 0x340BB04
	0x0340BAF0 LDR X8, [X20]
	0x0340BAF4 LDR X1, [X8 + 0x40]
	0x0340BAF8 BL 0x1C16E00
	0x0340BAFC CBZ X0, 0x340BBCC
	0x0340BB00 LDR W8, [X20 + 0x18]
	0x0340BB04 CMP W8, 0x1
	0x0340BB08 B.LS 0x340BBC8
	0x0340BB0C LDR X8, [X22]
	0x0340BB10 ADRP X9, 0xCE8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD3000
	005 Move W8, [X20+1364]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD23000
	012 Move X0, [X0+3952]
	013 Call 0x1C17CF4
	014 Move X0, 0xD23000
	015 Move X0, [X0+3960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1364], W8
	019 Move X19, [X19+48]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xD23000
	023 Move X8, [X8+3960]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xD23000
	027 Move X8, [X8+3952]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.ApiLeaderboardRecord> get__records()

Disassembly:
	0x0340BB14 LDR X9, [X9 + 0xB58]
	0x0340BB18 ADD X1, X31, 0xC

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set__records(System.Collections.Generic.List`1<Nakama.ApiLeaderboardRecord> value)

Disassembly:
	0x0340BB1C STR X8, [X20 + 0x28]
	0x0340BB20 LDRB W8, [X19 + 0x10]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0340BB24 LDR X0, [X9]
	0x0340BB28 STRB W8, [X31 + 0xC]
	0x0340BB2C BL 0x1C16E04
	0x0340BB30 MOV X21, X0
	0x0340BB34 CBZ X0, 0x340BB4C
	0x0340BB38 LDR X8, [X20]
	0x0340BB3C MOV X0, X21
	0x0340BB40 LDR X1, [X8 + 0x40]
	0x0340BB44 BL 0x1C16E00
	0x0340BB48 CBZ X0, 0x340BBCC
	0x0340BB4C LDR W8, [X20 + 0x18]
	0x0340BB50 CMP W8, 0x2
	0x0340BB54 B.LS 0x340BBC8
	0x0340BB58 ADRP X22, 0xCE8000
	0x0340BB5C LDR X22, [X22 + 0x838]
	0x0340BB60 STR X21, [X20 + 0x30]
	0x0340BB64 LDR X0, [X22]
	0x0340BB68 CBZ X0, 0x340BB80
	0x0340BB6C LDR X8, [X20]
	0x0340BB70 LDR X1, [X8 + 0x40]
	0x0340BB74 BL 0x1C16E00
	0x0340BB78 CBZ X0, 0x340BBCC
	0x0340BB7C LDR W8, [X20 + 0x18]
	0x0340BB80 CMP W8, 0x3
	0x0340BB84 B.LS 0x340BBC8
	0x0340BB88 LDR X8, [X22]
	0x0340BB8C ADRP X21, 0xD23000
	0x0340BB90 LDR X21, [X21 + 0x200]
	0x0340BB94 MOV X0, X20
	0x0340BB98 MOV X1, X31
	0x0340BB9C STR X8, [X20 + 0x38]
	0x0340BBA0 BL 0x3227578
	0x0340BBA4 LDR X2, [X19 + 0x18]
	0x0340BBA8 LDR X1, [X21]
	0x0340BBAC LDR X3, [X22]
	0x0340BBB0 MOV X4, X31
	0x0340BBB4 BL 0x32277C4
	0x0340BBB8 LDP X20, X19, [X31 + 0x20]
	0x0340BBBC LDP X22, X21, [X31 + 0x10]
	0x0340BBC0 LDR X30, [X31], #0x30
	0x0340BBC4 RET
	0x0340BBC8 BL 0x1C16F28
	0x0340BBCC BL 0x1C16F44
	0x0340BBD0 MOV X1, X31
	0x0340BBD4 BL 0x1C16DEC
	0x0340BBD8 BL 0x1C16F20
	0x0340BBDC MOV X1, X31
	0x0340BBE0 B 0x33BDD8C
	0x0340BBE4 LDRB W0, [X0 + 0x10]
	0x0340BBE8 RET
	0x0340BBEC AND W8, W1, 0x1
	0x0340BBF0 STRB W8, [X0 + 0x10]
	0x0340BBF4 RET
	0x0340BBF8 LDR X0, [X0 + 0x18]
	0x0340BBFC RET
	0x0340BC00 STR X1, [X0 + 0x18]
	0x0340BC04 RET
	0x0340BC08 STR X30, [X31 - 0x30]!
	0x0340BC0C STP X22, X21, [X31 + 0x10]
	0x0340BC10 STP X20, X19, [X31 + 0x20]
	0x0340BC14 ADRP X20, 0xFD2000
	0x0340BC18 ADRP X21, 0xCE8000
	0x0340BC1C ADRP X22, 0xCE8000
	0x0340BC20 LDRB W8, [X20 + 0x55E]
	0x0340BC24 LDR X21, [X21 + 0x988]
	0x0340BC28 LDR X22, [X22 + 0x9D0]
	0x0340BC2C MOV X19, X0
	0x0340BC30 TBNZ X8, 0x0, 0x340BC84
	0x0340BC34 ADRP X0, 0xCE8000
	0x0340BC38 LDR X0, [X0 + 0xB58]
	0x0340BC3C BL 0x1C16CF4
	0x0340BC40 ADRP X0, 0xCE8000
	0x0340BC44 LDR X0, [X0 + 0x9D0]
	0x0340BC48 BL 0x1C16CF4
	0x0340BC4C ADRP X0, 0xCE8000
	0x0340BC50 LDR X0, [X0 + 0x838]
	0x0340BC54 BL 0x1C16CF4
	0x0340BC58 ADRP X0, 0xD23000
	0x0340BC5C LDR X0, [X0 + 0x1F8]
	0x0340BC60 BL 0x1C16CF4
	0x0340BC64 ADRP X0, 0xD23000
	0x0340BC68 LDR X0, [X0 + 0x208]
	0x0340BC6C BL 0x1C16CF4
	0x0340BC70 ADRP X0, 0xCE8000
	0x0340BC74 LDR X0, [X0 + 0x988]
	0x0340BC78 BL 0x1C16CF4
	0x0340BC7C MOVZ W8, 0x1
	0x0340BC80 STRB W8, [X20 + 0x55E]
	0x0340BC84 LDR X0, [X22]
	0x0340BC88 LDR X21, [X21]
	0x0340BC8C MOVZ W1, 0x4
	0x0340BC90 BL 0x1C16D6C
	0x0340BC94 CBZ X0, 0x340BDB8
	0x0340BC98 MOV X20, X0
	0x0340BC9C CBZ X21, 0x340BCB4
	0x0340BCA0 LDR X8, [X20]
	0x0340BCA4 MOV X0, X21
	0x0340BCA8 LDR X1, [X8 + 0x40]
	0x0340BCAC BL 0x1C16E00
	0x0340BCB0 CBZ X0, 0x340BDAC
	0x0340BCB4 LDR W8, [X20 + 0x18]
	0x0340BCB8 CBZ W8, 0x340BDA8
	0x0340BCBC ADRP X22, 0xD23000
	0x0340BCC0 LDR X22, [X22 + 0x1F8]
	0x0340BCC4 STR X21, [X20 + 0x20]
	0x0340BCC8 LDR X0, [X22]
	0x0340BCCC CBZ X0, 0x340BCE4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0xFD3000
	014 Move X20, 0xCE9000
	015 Move X28, 0xD23000
	016 Move X23, 0xCE9000
	017 Move X24, 0xD23000
	018 Move X27, 0xD23000
	019 Move X21, 0xD23000
	020 Move X26, 0xD23000
	021 Move X25, 0xD23000
	022 Move X22, 0xD23000
	023 Move X20, [X20+2440]
	024 Move X28, [X28+3680]
	025 Move X23, [X23+2104]
	026 Move X24, [X24+3968]
	027 Move W8, [X29+1365]
	028 Move X27, [X27+3976]
	029 Move X21, [X21+3408]
	030 Move X26, [X26+3688]
	031 Move X25, [X25+3984]
	032 Move X22, [X22+3992]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {67}
	038 Move X0, 0xD23000
	039 Move X0, [X0+3968]
	040 Call 0x1C17CF4
	041 Move X0, 0xD23000
	042 Move X0, [X0+3976]
	043 Call 0x1C17CF4
	044 Move X0, 0xD23000
	045 Move X0, [X0+3992]
	046 Call 0x1C17CF4
	047 Move X0, 0xD23000
	048 Move X0, [X0+3984]
	049 Call 0x1C17CF4
	050 Move X0, 0xCE9000
	051 Move X0, [X0+2104]
	052 Call 0x1C17CF4
	053 Move X0, 0xD23000
	054 Move X0, [X0+3688]
	055 Call 0x1C17CF4
	056 Move X0, 0xD23000
	057 Move X0, [X0+3680]
	058 Call 0x1C17CF4
	059 Move X0, 0xD23000
	060 Move X0, [X0+3408]
	061 Call 0x1C17CF4
	062 Move X0, 0xCE9000
	063 Move X0, [X0+2440]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X29+1365], W8
	067 Move X2, [X19+16]
	068 Move X0, [X20]
	069 Move X1, [X28]
	070 Move X3, [X23]
	071 Move X4, X31
	072 Call String.Concat, X0, X1, X2, X3
	073 Move X20, X0
	074 Move X0, X19
	075 Call ApiTournamentRecordList.get_OwnerRecords, X0
	076 Move X8, [X23]
	077 Move X2, [X24]
	078 Move X1, X0
	079 Move X0, X8
	080 Call String.Join, X0, X1
	081 Move X1, [X27]
	082 Move X3, [X21]
	083 Move X2, X0
	084 Move X0, X20
	085 Move X4, X31
	086 Call String.Concat, X0, X1, X2, X3
	087 Move X2, [X19+32]
	088 Move X1, [X26]
	089 Move X3, [X23]
	090 Move X4, X31
	091 Call String.Concat, X0, X1, X2, X3
	092 Move X2, [X19+40]
	093 Move X1, [X25]
	094 Move X3, [X23]
	095 Move X4, X31
	096 Call String.Concat, X0, X1, X2, X3
	097 Move X20, X0
	098 Move X0, X19
	099 Call ApiTournamentRecordList.get_Records, X0
	100 Move X8, [X23]
	101 Move X2, [X24]
	102 Move X1, X0
	103 Move X0, X8
	104 Call String.Join, X0, X1
	105 Move X1, [X22]
	106 Move X3, [X21]
	107 Move X2, X0
	108 Move X0, X20
	109 Move X20, [X31+80]
	110 Move X19, [X31+88]
	111 Move X22, [X31+64]
	112 Move X21, [X31+72]
	113 Move X24, [X31+48]
	114 Move X23, [X31+56]
	115 Move X26, [X31+32]
	116 Move X25, [X31+40]
	117 Move X28, [X31+16]
	118 Move X27, [X31+24]
	119 Move X4, X31
	120 Move X29, [X31+96]
	121 Move X30, [X31+104]
	122 Call String.Concat, X0, X1, X2, X3
	123 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0340BCD0 LDR X8, [X20]
	0x0340BCD4 LDR X1, [X8 + 0x40]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

