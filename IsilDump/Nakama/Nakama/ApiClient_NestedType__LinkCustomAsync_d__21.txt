Type: Nakama.ApiClient/<LinkCustomAsync>d__21

Method: System.Void MoveNext()

Disassembly:
	0x0342892C BL 0x1C16F28
	0x03428930 BL 0x1C16F20
	0x03428934 BL 0x1C16F20
	0x03428938 BL 0x1C16F20
	0x0342893C BL 0x1C16F20
	0x03428940 BL 0x1C16F20
	0x03428944 BL 0x1C16F20
	0x03428948 B 0x34289A8
	0x0342894C B 0x34289A8
	0x03428950 B 0x34289A8
	0x03428954 B 0x34289A8
	0x03428958 B 0x34289A8
	0x0342895C B 0x34289A8
	0x03428960 B 0x34289A8
	0x03428964 B 0x34289A8
	0x03428968 B 0x34289A8
	0x0342896C B 0x34289A8
	0x03428970 B 0x34289A8
	0x03428974 B 0x34289A8
	0x03428978 B 0x34289A8
	0x0342897C B 0x34289A8
	0x03428980 B 0x34289A8
	0x03428984 B 0x34289A8
	0x03428988 B 0x34289A8
	0x0342898C B 0x34289A8
	0x03428990 B 0x34289A8
	0x03428994 B 0x34289A8
	0x03428998 B 0x34289A8
	0x0342899C B 0x34289A8
	0x034289A0 B 0x34289A8
	0x034289A4 B 0x34289A8
	0x034289A8 MOV X20, X0
	0x034289AC CMP W1, 0x1
	0x034289B0 B.NE 0x3428A40
	0x034289B4 MOV X0, X20
	0x034289B8 BL 0x3EB1AD0
	0x034289BC MOV X20, X0
	0x034289C0 ADRP X0, 0xCCB000
	0x034289C4 LDR X0, [X0 + 0x7D0]
	0x034289C8 BL 0x1C16D08
	0x034289CC LDR X8, [X20]
	0x034289D0 LDR X1, [X8]
	0x034289D4 BL 0x1C17270
	0x034289D8 TBZ X0, 0x0, 0x3428A18
	0x034289DC LDR X20, [X20]
	0x034289E0 BL 0x3EB1AE0
	0x034289E4 MOVN W8, 0x1
	0x034289E8 STR W8, [X19], #0x8
	0x034289EC ADRP X0, 0xCCE000
	0x034289F0 LDR X0, [X0 + 0x280]
	0x034289F4 BL 0x1C16D08
	0x034289F8 LDR W8, [X0 + 0xE0]
	0x034289FC CBNZ W8, 0x3428A04
	0x03428A00 BL 0x1C16DFC
	0x03428A04 MOV X0, X19
	0x03428A08 MOV X1, X20
	0x03428A0C MOV X2, X31
	0x03428A10 BL 0x32C4908
	0x03428A14 B 0x34288B8
	0x03428A18 MOVZ W0, 0x8
	0x03428A1C BL 0x3EB1AF0
	0x03428A20 LDR X8, [X20]
	0x03428A24 STR X8, [X0]
	0x03428A28 ADRP X1, 0xA8C000
	0x03428A2C ADD X1, X1, 0xE58
	0x03428A30 MOV X2, X31
	0x03428A34 BL 0x3EB1B00
	0x03428A38 MOV X20, X0
	0x03428A3C BL 0x3EB1AE0
	0x03428A40 MOV X0, X20
	0x03428A44 BL 0x1D2C690
	0x03428A48 BL 0x1990590
	0x03428A4C STR X30, [X31 - 0x30]!
	0x03428A50 STP X22, X21, [X31 + 0x10]
	0x03428A54 STP X20, X19, [X31 + 0x20]
	0x03428A58 ADRP X21, 0xFB5000
	0x03428A5C ADRP X22, 0xCCE000
	0x03428A60 LDRB W8, [X21 + 0x640]
	0x03428A64 LDR X22, [X22 + 0x280]
	0x03428A68 MOV X19, X1
	0x03428A6C MOV X20, X0
	0x03428A70 TBNZ X8, 0x0, 0x3428A88
	0x03428A74 ADRP X0, 0xCCE000
	0x03428A78 LDR X0, [X0 + 0x280]
	0x03428A7C BL 0x1C16CF4
	0x03428A80 MOVZ W8, 0x1
	0x03428A84 STRB W8, [X21 + 0x640]
	0x03428A88 LDR X0, [X22]
	0x03428A8C LDR W8, [X0 + 0xE0]
	0x03428A90 CBNZ W8, 0x3428A98
	0x03428A94 BL 0x1C16DFC
	0x03428A98 ADD X0, X20, 0x8
	0x03428A9C MOV X1, X19
	0x03428AA0 LDP X20, X19, [X31 + 0x20]
	0x03428AA4 LDP X22, X21, [X31 + 0x10]
	0x03428AA8 MOV X2, X31
	0x03428AAC LDR X30, [X31], #0x30
	0x03428AB0 B 0x32C477C
	0x03428AB4 SUB X31, X31, 0x70
	0x03428AB8 STR X30, [X31 + 0x10]
	0x03428ABC STP X28, X27, [X31 + 0x20]
	0x03428AC0 STP X26, X25, [X31 + 0x30]
	0x03428AC4 STP X24, X23, [X31 + 0x40]
	0x03428AC8 STP X22, X21, [X31 + 0x50]
	0x03428ACC STP X20, X19, [X31 + 0x60]
	0x03428AD0 ADRP X20, 0xFB5000
	0x03428AD4 LDRB W8, [X20 + 0x641]
	0x03428AD8 MOV X19, X0
	0x03428ADC TBNZ X8, 0x0, 0x3428BD8
	0x03428AE0 ADRP X0, 0xD06000
	0x03428AE4 LDR X0, [X0 + 0xE70]
	0x03428AE8 BL 0x1C16CF4
	0x03428AEC ADRP X0, 0xCCE000
	0x03428AF0 LDR X0, [X0 + 0x280]
	0x03428AF4 BL 0x1C16CF4
	0x03428AF8 ADRP X0, 0xCD4000
	0x03428AFC LDR X0, [X0 + 0x8D8]
	0x03428B00 BL 0x1C16CF4
	0x03428B04 ADRP X0, 0xCCC000
	0x03428B08 LDR X0, [X0 + 0x810]
	0x03428B0C BL 0x1C16CF4
	0x03428B10 ADRP X0, 0xCCC000
	0x03428B14 LDR X0, [X0 + 0x6C0]
	0x03428B18 BL 0x1C16CF4
	0x03428B1C ADRP X0, 0xCCC000
	0x03428B20 LDR X0, [X0 + 0x6D0]
	0x03428B24 BL 0x1C16CF4
	0x03428B28 ADRP X0, 0xD06000
	0x03428B2C LDR X0, [X0 + 0x7B8]
	0x03428B30 BL 0x1C16CF4
	0x03428B34 ADRP X0, 0xD06000
	0x03428B38 LDR X0, [X0 + 0x830]
	0x03428B3C BL 0x1C16CF4
	0x03428B40 ADRP X0, 0xCCF000
	0x03428B44 LDR X0, [X0 + 0xBF0]
	0x03428B48 BL 0x1C16CF4
	0x03428B4C ADRP X0, 0xCCE000
	0x03428B50 LDR X0, [X0 + 0x1E0]
	0x03428B54 BL 0x1C16CF4
	0x03428B58 ADRP X0, 0xCCE000
	0x03428B5C LDR X0, [X0 + 0x1F0]
	0x03428B60 BL 0x1C16CF4
	0x03428B64 ADRP X0, 0xCCE000
	0x03428B68 LDR X0, [X0 + 0x1F8]
	0x03428B6C BL 0x1C16CF4
	0x03428B70 ADRP X0, 0xCD4000
	0x03428B74 LDR X0, [X0 + 0x3A0]
	0x03428B78 BL 0x1C16CF4
	0x03428B7C ADRP X0, 0xCF4000
	0x03428B80 LDR X0, [X0 + 0x4D8]
	0x03428B84 BL 0x1C16CF4
	0x03428B88 ADRP X0, 0xD06000
	0x03428B8C LDR X0, [X0 + 0x8C8]
	0x03428B90 BL 0x1C16CF4
	0x03428B94 ADRP X0, 0xCD4000
	0x03428B98 LDR X0, [X0 + 0x720]
	0x03428B9C BL 0x1C16CF4
	0x03428BA0 ADRP X0, 0xD06000
	0x03428BA4 LDR X0, [X0 + 0x7D0]
	0x03428BA8 BL 0x1C16CF4
	0x03428BAC ADRP X0, 0xD06000
	0x03428BB0 LDR X0, [X0 + 0xE78]
	0x03428BB4 BL 0x1C16CF4
	0x03428BB8 ADRP X0, 0xD06000
	0x03428BBC LDR X0, [X0 + 0x7D8]
	0x03428BC0 BL 0x1C16CF4
	0x03428BC4 ADRP X0, 0xCCB000
	0x03428BC8 LDR X0, [X0 + 0x988]
	0x03428BCC BL 0x1C16CF4
	0x03428BD0 MOVZ W8, 0x1
	0x03428BD4 STRB W8, [X20 + 0x641]
	0x03428BD8 STR X31, [X31 + 0x18]
	0x03428BDC ADRP X28, 0xCCE000
	0x03428BE0 LDR W8, [X19]
	0x03428BE4 LDR X28, [X28 + 0x280]
	0x03428BE8 CBZ W8, 0x3428E1C
	0x03428BEC LDR X8, [X19 + 0x20]
	0x03428BF0 CBZ X8, 0x3428F34
	0x03428BF4 ADRP X8, 0xD06000
	0x03428BF8 ADRP X9, 0xCCB000
	0x03428BFC LDR X8, [X8 + 0xE78]
	0x03428C00 LDR X9, [X9 + 0x988]
	0x03428C04 MOV X0, X19
	0x03428C08 LDR X25, [X19 + 0x30]
	0x03428C0C LDR X21, [X8]
	0x03428C10 LDR X20, [X9]
	0x03428C14 LDRB W8, [X0 + 0x28]!
	0x03428C18 CBZ W8, 0x3428C64
	0x03428C1C ADRP X8, 0xD06000
	0x03428C20 LDR X8, [X8 + 0x830]
	0x03428C24 LDR X1, [X8]
	0x03428C28 BL 0x242D714
	0x03428C2C CBZ X0, 0x3428FA4
	0x03428C30 MOV X1, X31
	0x03428C34 BL 0x322B5E4
	0x03428C38 ADRP X8, 0xD06000
	0x03428C3C LDR X8, [X8 + 0x8C8]
	0x03428C40 ADRP X9, 0xCD4000
	0x03428C44 LDR X9, [X9 + 0x720]
	0x03428C48 MOV X2, X0
	0x03428C4C LDR X1, [X8]
	0x03428C50 LDR X3, [X9]
	0x03428C54 MOV X0, X20
	0x03428C58 MOV X4, X31
	0x03428C5C BL 0x32277C4
	0x03428C60 MOV X20, X0
	0x03428C64 CBZ X25, 0x3428F7C
	0x03428C68 LDR X0, [X25 + 0x20]
	0x03428C6C CBZ X0, 0x3428F80
	0x03428C70 MOV X1, X31
	0x03428C74 BL 0x361B448
	0x03428C78 ADRP X8, 0xCD4000
	0x03428C7C LDR X8, [X8 + 0x8D8]
	0x03428C80 MOV X22, X0
	0x03428C84 LDR X0, [X8]
	0x03428C88 MOVZ W1, 0x1
	0x03428C8C BL 0x1C16D6C
	0x03428C90 MOV X1, X0
	0x03428C94 CBZ X1, 0x3428F84
	0x03428C98 LDR W8, [X1 + 0x18]
	0x03428C9C CBZ W8, 0x3428F88
	0x03428CA0 MOVZ W8, 0x2F
	0x03428CA4 STRH W8, [X1 + 0x20]
	0x03428CA8 CBZ X22, 0x3428F8C
	0x03428CAC MOV X0, X22
	0x03428CB0 MOV X2, X31
	0x03428CB4 BL 0x322BC58
	0x03428CB8 MOV X1, X21
	0x03428CBC MOV X2, X31
	0x03428CC0 BL 0x321B938
	0x03428CC4 ADRP X8, 0xCD4000
	0x03428CC8 LDR X8, [X8 + 0x3A0]
	0x03428CCC MOV X22, X0
	0x03428CD0 LDR X23, [X25 + 0x20]
	0x03428CD4 LDR X0, [X8]
	0x03428CD8 BL 0x1C16F10
	0x03428CDC MOV X21, X0
	0x03428CE0 MOV X1, X23
	0x03428CE4 MOV X2, X31
	0x03428CE8 BL 0x36281F8
	0x03428CEC CBZ X21, 0x3428F90
	0x03428CF0 MOV X0, X21
	0x03428CF4 MOV X1, X22
	0x03428CF8 MOV X2, X31
	0x03428CFC BL 0x36288CC
	0x03428D00 MOV X0, X21
	0x03428D04 MOV X1, X20
	0x03428D08 MOV X2, X31
	0x03428D0C BL 0x3628980
	0x03428D10 MOV X0, X21
	0x03428D14 MOV X1, X31
	0x03428D18 BL 0x3628A38
	0x03428D1C ADRP X8, 0xCF4000
	0x03428D20 ADRP X9, 0xCCC000
	0x03428D24 LDR X8, [X8 + 0x4D8]
	0x03428D28 LDR X9, [X9 + 0x6D0]
	0x03428D2C MOV X20, X0
	0x03428D30 LDR X21, [X8]
	0x03428D34 LDR X0, [X9]
	0x03428D38 BL 0x1C16F10
	0x03428D3C ADRP X8, 0xCCC000
	0x03428D40 LDR X8, [X8 + 0x6C0]
	0x03428D44 MOV X22, X0
	0x03428D48 LDR X1, [X8]
	0x03428D4C BL 0x2AA4804
	0x03428D50 ADRP X8, 0xD06000
	0x03428D54 LDR X8, [X8 + 0x7D8]
	0x03428D58 LDR X1, [X19 + 0x38]
	0x03428D5C LDR X0, [X8]
	0x03428D60 MOV X2, X31
	0x03428D64 BL 0x321B938
	0x03428D68 CBZ X22, 0x3428F94
	0x03428D6C ADRP X8, 0xD06000
	0x03428D70 LDR X8, [X8 + 0x7D0]
	0x03428D74 ADRP X9, 0xCCC000
	0x03428D78 LDR X9, [X9 + 0x810]
	0x03428D7C MOV X2, X0
	0x03428D80 LDR X1, [X8]
	0x03428D84 LDR X3, [X9]
	0x03428D88 MOV X0, X22
	0x03428D8C BL 0x2AA5098
	0x03428D90 LDR X0, [X19 + 0x20]
	0x03428D94 MOV X1, X31
	0x03428D98 BL 0x3483BE4
	0x03428D9C MOV X23, X0
	0x03428DA0 MOV X0, X31
	0x03428DA4 BL 0x3241948
	0x03428DA8 CBZ X0, 0x3428F98
	0x03428DAC LDR X8, [X0]
	0x03428DB0 LDR X9, [X8 + 0x268]
	0x03428DB4 LDR X2, [X8 + 0x270]
	0x03428DB8 MOV X1, X23
	0x03428DBC BLR X9
	0x03428DC0 LDR X24, [X25 + 0x10]
	0x03428DC4 CBZ X24, 0x3428F9C
	0x03428DC8 ADRP X10, 0xD06000
	0x03428DCC LDR X10, [X10 + 0x7B8]
	0x03428DD0 LDR X8, [X24]
	0x03428DD4 LDR W26, [X25 + 0x18]
	0x03428DD8 LDP X27, X25, [X19 + 0x40]
	0x03428DDC LDR X1, [X10]
	0x03428DE0 LDRH W9, [X8 + 0x12E]
	0x03428DE4 MOV X23, X0
	0x03428DE8 CBZ X9, 0x3428E0C
	0x03428DEC LDR X10, [X8 + 0xB0]
	0x03428DF0 ADD X10, X10, 0x8
	0x03428DF4 LDUR X11, [X10 - 0x8]
	0x03428DF8 CMP X11, X1
	0x03428DFC B.EQ 0x3428E34
	0x03428E00 SUBS X9, X9, 0x1
	0x03428E04 ADD X10, X10, 0x10
	0x03428E08 B.NE 0x3428DF4
	0x03428E0C MOVZ W2, 0x3
	0x03428E10 MOV X0, X24
	0x03428E14 BL 0x1C5C788
	0x03428E18 B 0x3428E44
	0x03428E1C LDR X8, [X19 + 0x50]
	0x03428E20 MOVN W9, 0x0
	0x03428E24 STR X8, [X31 + 0x18]
	0x03428E28 STR X31, [X19 + 0x50]
	0x03428E2C STR W9, [X19]
	0x03428E30 B 0x3428EA0
	0x03428E34 LDR W9, [X10]
	0x03428E38 ADD W9, W9, 0x3
	0x03428E3C ADD X8, X8, W9, 0x4, SXTW
	0x03428E40 ADD X0, X8, 0x138
	0x03428E44 LDP X8, X9, [X0]
	0x03428E48 MOV X0, X24
	0x03428E4C MOV X1, X21
	0x03428E50 MOV X2, X20
	0x03428E54 MOV X3, X22
	0x03428E58 MOV X4, X23
	0x03428E5C MOV W5, W26
	0x03428E60 MOV X6, X27
	0x03428E64 MOV X7, X25
	0x03428E68 STR X9, [X31]
	0x03428E6C BLR X8
	0x03428E70 CBZ X0, 0x3428FA0
	0x03428E74 ADRP X8, 0xCCE000
	0x03428E78 LDR X8, [X8 + 0x1F8]
	0x03428E7C LDR X1, [X8]
	0x03428E80 BL 0x269F5D0
	0x03428E84 ADRP X8, 0xCCE000
	0x03428E88 LDR X8, [X8 + 0x1F0]
	0x03428E8C STR X0, [X31 + 0x18]
	0x03428E90 LDR X1, [X8]
	0x03428E94 ADD X0, X31, 0x18
	0x03428E98 BL 0x2677430

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB6000
	014 Move W8, [X20+1595]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xD07000
	021 Move X0, [X0+3624]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCF000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD5000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCD000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCCD000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCD000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD07000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCF000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCF000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCF000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD5000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCF5000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xD07000
	057 Move X0, [X0+3632]
	058 Call 0x1C17CF4
	059 Move X0, 0xD07000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xD07000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCCC000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1595], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCCF000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xD07000
	086 Move X9, 0xCCC000
	087 Move X8, [X8+3632]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCD5000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCD5000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCF5000
	139 Move X9, 0xCCD000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCCD000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xD07000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xD07000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCCD000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xD07000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCCF000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCCF000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCCF000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xD07000
	269 Move X8, [X8+3624]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCD4000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xD07000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xD07000
	301 Move X0, [X0+3640]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCCC000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCCF000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA8D000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03428E9C TBZ X0, 0x0, 0x3428EDC
	0x03428EA0 ADRP X8, 0xCCE000
	0x03428EA4 LDR X8, [X8 + 0x1E0]
	0x03428EA8 ADD X0, X31, 0x18
	0x03428EAC LDR X1, [X8]
	0x03428EB0 BL 0x2677474
	0x03428EB4 MOVN W8, 0x1
	0x03428EB8 STR W8, [X19], #0x8
	0x03428EBC LDR X0, [X28]
	0x03428EC0 LDR W8, [X0 + 0xE0]
	0x03428EC4 CBNZ W8, 0x3428ECC
	0x03428EC8 BL 0x1C16DFC
	0x03428ECC MOV X0, X19
	0x03428ED0 MOV X1, X31
	0x03428ED4 BL 0x32C4864
	0x03428ED8 B 0x3428F14
	0x03428EDC STR W31, [X19]
	0x03428EE0 LDR X8, [X31 + 0x18]
	0x03428EE4 STR X8, [X19 + 0x50]
	0x03428EE8 LDR X0, [X28]
	0x03428EEC LDR W8, [X0 + 0xE0]
	0x03428EF0 CBNZ W8, 0x3428EF8
	0x03428EF4 BL 0x1C16DFC
	0x03428EF8 ADRP X8, 0xD06000
	0x03428EFC LDR X8, [X8 + 0xE70]
	0x03428F00 ADD X0, X19, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB6000
	007 Move X22, 0xCCF000
	008 Move W8, [X21+1596]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCCF000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1596], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

