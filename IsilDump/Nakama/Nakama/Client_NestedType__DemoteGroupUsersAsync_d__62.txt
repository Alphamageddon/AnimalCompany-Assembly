Type: Nakama.Client/<DemoteGroupUsersAsync>d__62

Method: System.Void MoveNext()

Disassembly:
	0x03454CC0 ADD X0, X8, 0x138
	0x03454CC4 LDP X8, X2, [X0]
	0x03454CC8 MOV X0, X21
	0x03454CCC MOV X1, X22
	0x03454CD0 BLR X8
	0x03454CD4 TBZ X0, 0x0, 0x3454D64
	0x03454CD8 LDR X8, [X19 + 0x40]
	0x03454CDC CBZ X8, 0x3454F14
	0x03454CE0 LDP X1, X4, [X8 + 0x18]
	0x03454CE4 LDR X3, [X19 + 0x38]
	0x03454CE8 MOV X0, X20
	0x03454CEC MOV X2, X31
	0x03454CF0 MOV X5, X31
	0x03454CF4 BL 0x34440A8
	0x03454CF8 CBZ X0, 0x3454F18
	0x03454CFC ADRP X8, 0xCA0000
	0x03454D00 LDR X8, [X8 + 0x840]
	0x03454D04 LDR X1, [X8]
	0x03454D08 BL 0x269F5D0
	0x03454D0C ADRP X8, 0xCA0000
	0x03454D10 LDR X8, [X8 + 0x838]
	0x03454D14 STR X0, [X31 + 0x20]
	0x03454D18 LDR X1, [X8]
	0x03454D1C ADD X0, X31, 0x20
	0x03454D20 BL 0x2677430
	0x03454D24 TBNZ X0, 0x0, 0x3454B28
	0x03454D28 STR W31, [X19]
	0x03454D2C LDR X8, [X31 + 0x20]
	0x03454D30 STR X8, [X19 + 0x48]
	0x03454D34 LDR X0, [X25]
	0x03454D38 LDR W8, [X0 + 0xE0]
	0x03454D3C CBNZ W8, 0x3454D44
	0x03454D40 BL 0x1C16DFC
	0x03454D44 ADRP X8, 0xCDB000
	0x03454D48 LDR X8, [X8 + 0xD20]
	0x03454D4C ADD X0, X19, 0x8
	0x03454D50 LDR X3, [X8]
	0x03454D54 ADD X1, X31, 0x20
	0x03454D58 MOV X2, X19
	0x03454D5C BL 0x1FBABFC
	0x03454D60 B 0x3454ED4
	0x03454D64 CBZ X20, 0x3454EF8
	0x03454D68 ADRP X8, 0xCDB000
	0x03454D6C LDR X8, [X8 + 0xD28]
	0x03454D70 LDR X21, [X20 + 0x58]
	0x03454D74 LDR X23, [X19 + 0x40]
	0x03454D78 LDR X0, [X8]
	0x03454D7C BL 0x1C16F10
	0x03454D80 ADRP X8, 0xCDB000
	0x03454D84 LDR X8, [X8 + 0xD38]
	0x03454D88 MOV X22, X0
	0x03454D8C LDR X2, [X8]
	0x03454D90 MOV X1, X23
	0x03454D94 MOV X3, X31
	0x03454D98 BL 0x2D27AA8
	0x03454D9C LDR X8, [X19 + 0x40]
	0x03454DA0 CBZ X8, 0x3454EEC
	0x03454DA4 ADRP X9, 0xCDB000
	0x03454DA8 LDR X23, [X19 + 0x38]
	0x03454DAC LDR X9, [X9 + 0x7C8]
	0x03454DB0 CBNZ X23, 0x3454DB8
	0x03454DB4 LDR X23, [X20 + 0x18]
	0x03454DB8 LDP X20, X1, [X8 + 0x18]
	0x03454DBC LDR X2, [X9]
	0x03454DC0 STP X31, X31, [X31 + 0x8]
	0x03454DC4 ADD X0, X31, 0x8
	0x03454DC8 BL 0x242E368
	0x03454DCC ADRP X8, 0xCDB000
	0x03454DD0 LDR X8, [X8 + 0x7D0]
	0x03454DD4 LDR X0, [X8]
	0x03454DD8 BL 0x1C16F10
	0x03454DDC LDP X3, X4, [X31 + 0x8]
	0x03454DE0 MOV X24, X0
	0x03454DE4 MOV X1, X20
	0x03454DE8 MOV X2, X23
	0x03454DEC MOV X5, X31
	0x03454DF0 BL 0x3465404
	0x03454DF4 CBZ X21, 0x3454EF0
	0x03454DF8 ADRP X8, 0xCDB000
	0x03454DFC LDR X8, [X8 + 0xD30]
	0x03454E00 LDR X3, [X8]
	0x03454E04 MOV X0, X21
	0x03454E08 MOV X1, X22
	0x03454E0C MOV X2, X24
	0x03454E10 BL 0x2243230
	0x03454E14 CBZ X0, 0x3454EF4
	0x03454E18 ADRP X8, 0xCA0000
	0x03454E1C LDR X8, [X8 + 0x960]
	0x03454E20 LDR X1, [X8]
	0x03454E24 BL 0x269F5D0
	0x03454E28 ADRP X8, 0xCA0000
	0x03454E2C LDR X8, [X8 + 0x940]
	0x03454E30 STR X0, [X31 + 0x18]
	0x03454E34 LDR X1, [X8]
	0x03454E38 ADD X0, X31, 0x18
	0x03454E3C BL 0x2677430
	0x03454E40 TBZ X0, 0x0, 0x3454E98
	0x03454E44 ADRP X8, 0xCA0000
	0x03454E48 LDR X8, [X8 + 0x920]
	0x03454E4C ADD X0, X31, 0x18
	0x03454E50 LDR X1, [X8]
	0x03454E54 BL 0x2677474
	0x03454E58 MOVN W8, 0x1
	0x03454E5C STR W8, [X19]
	0x03454E60 STR X31, [X19 + 0x40]
	0x03454E64 MOV X20, X0
	0x03454E68 LDR X0, [X25]
	0x03454E6C ADRP X21, 0xCDA000
	0x03454E70 ADD X19, X19, 0x8
	0x03454E74 LDR W8, [X0 + 0xE0]
	0x03454E78 LDR X21, [X21 + 0xCC8]
	0x03454E7C CBNZ W8, 0x3454E84
	0x03454E80 BL 0x1C16DFC
	0x03454E84 LDR X2, [X21]
	0x03454E88 MOV X0, X19
	0x03454E8C MOV X1, X20
	0x03454E90 BL 0x26322B0
	0x03454E94 B 0x3454ED4
	0x03454E98 MOVZ W8, 0x1
	0x03454E9C STR W8, [X19]
	0x03454EA0 LDR X8, [X31 + 0x18]
	0x03454EA4 STR X8, [X19 + 0x50]
	0x03454EA8 LDR X0, [X25]
	0x03454EAC LDR W8, [X0 + 0xE0]
	0x03454EB0 CBNZ W8, 0x3454EB8
	0x03454EB4 BL 0x1C16DFC
	0x03454EB8 ADRP X8, 0xCDB000
	0x03454EBC LDR X8, [X8 + 0xD18]
	0x03454EC0 ADD X0, X19, 0x8
	0x03454EC4 LDR X3, [X8]
	0x03454EC8 ADD X1, X31, 0x18
	0x03454ECC MOV X2, X19
	0x03454ED0 BL 0x1FBABFC
	0x03454ED4 LDP X20, X19, [X31 + 0x60]
	0x03454ED8 LDP X22, X21, [X31 + 0x50]
	0x03454EDC LDP X24, X23, [X31 + 0x40]
	0x03454EE0 LDP X30, X25, [X31 + 0x30]
	0x03454EE4 ADD X31, X31, 0x70
	0x03454EE8 RET
	0x03454EEC BL 0x1C16F20
	0x03454EF0 BL 0x1C16F20
	0x03454EF4 BL 0x1C16F20
	0x03454EF8 BL 0x1C16F20
	0x03454EFC BL 0x1C16F20
	0x03454F00 BL 0x1C16F20
	0x03454F04 BL 0x1C16F20
	0x03454F08 BL 0x1C16F20
	0x03454F0C BL 0x1C16F20
	0x03454F10 BL 0x1C16F20
	0x03454F14 BL 0x1C16F20
	0x03454F18 BL 0x1C16F20
	0x03454F1C B 0x3454F90
	0x03454F20 B 0x3454F90
	0x03454F24 B 0x3454F90
	0x03454F28 B 0x3454F90
	0x03454F2C B 0x3454F90
	0x03454F30 B 0x3454F90
	0x03454F34 B 0x3454F90
	0x03454F38 B 0x3454F90
	0x03454F3C B 0x3454F90
	0x03454F40 B 0x3454F90
	0x03454F44 B 0x3454F90
	0x03454F48 B 0x3454F90
	0x03454F4C B 0x3454F90
	0x03454F50 B 0x3454F90
	0x03454F54 B 0x3454F90
	0x03454F58 B 0x3454F90
	0x03454F5C B 0x3454F90
	0x03454F60 B 0x3454F90
	0x03454F64 B 0x3454F90
	0x03454F68 B 0x3454F90
	0x03454F6C B 0x3454F90
	0x03454F70 B 0x3454F90
	0x03454F74 B 0x3454F90
	0x03454F78 B 0x3454F90
	0x03454F7C B 0x3454F90
	0x03454F80 B 0x3454F90
	0x03454F84 B 0x3454F90
	0x03454F88 B 0x3454F90
	0x03454F8C B 0x3454F90
	0x03454F90 MOV X20, X0
	0x03454F94 CMP W1, 0x1
	0x03454F98 B.NE 0x3455038
	0x03454F9C MOV X0, X20
	0x03454FA0 BL 0x3EB1AD0
	0x03454FA4 MOV X20, X0
	0x03454FA8 ADRP X0, 0xC9F000
	0x03454FAC LDR X0, [X0 + 0x7D0]
	0x03454FB0 BL 0x1C16D08
	0x03454FB4 LDR X8, [X20]
	0x03454FB8 LDR X1, [X8]
	0x03454FBC BL 0x1C17270
	0x03454FC0 TBZ X0, 0x0, 0x3455010
	0x03454FC4 LDR X20, [X20]
	0x03454FC8 BL 0x3EB1AE0
	0x03454FCC MOVN W8, 0x1
	0x03454FD0 STR X31, [X19 + 0x40]
	0x03454FD4 STR W8, [X19], #0x8
	0x03454FD8 ADRP X0, 0xCDA000
	0x03454FDC LDR X0, [X0 + 0x2F8]
	0x03454FE0 BL 0x1C16D08
	0x03454FE4 LDR W8, [X0 + 0xE0]
	0x03454FE8 CBNZ W8, 0x3454FF0
	0x03454FEC BL 0x1C16DFC
	0x03454FF0 ADRP X0, 0xCDA000
	0x03454FF4 LDR X0, [X0 + 0xCD8]
	0x03454FF8 BL 0x1C16D08
	0x03454FFC MOV X2, X0
	0x03455000 MOV X0, X19
	0x03455004 MOV X1, X20
	0x03455008 BL 0x26324C8
	0x0345500C B 0x3454ED4
	0x03455010 MOVZ W0, 0x8
	0x03455014 BL 0x3EB1AF0
	0x03455018 LDR X8, [X20]
	0x0345501C STR X8, [X0]
	0x03455020 ADRP X1, 0xA5F000
	0x03455024 ADD X1, X1, 0xE58
	0x03455028 MOV X2, X31
	0x0345502C BL 0x3EB1B00
	0x03455030 MOV X20, X0
	0x03455034 BL 0x3EB1AE0
	0x03455038 MOV X0, X20
	0x0345503C BL 0x1D2C690
	0x03455040 BL 0x1990590
	0x03455044 STR X30, [X31 - 0x30]!
	0x03455048 STP X22, X21, [X31 + 0x10]
	0x0345504C STP X20, X19, [X31 + 0x20]
	0x03455050 ADRP X22, 0xF88000
	0x03455054 ADRP X21, 0xCD9000
	0x03455058 LDRB W8, [X22 + 0x780]
	0x0345505C LDR X21, [X21 + 0x2F8]
	0x03455060 MOV X19, X1
	0x03455064 MOV X20, X0
	0x03455068 TBNZ X8, 0x0, 0x345508C
	0x0345506C ADRP X0, 0xCD9000
	0x03455070 LDR X0, [X0 + 0xCE0]
	0x03455074 BL 0x1C16CF4
	0x03455078 ADRP X0, 0xCD9000
	0x0345507C LDR X0, [X0 + 0x2F8]
	0x03455080 BL 0x1C16CF4
	0x03455084 MOVZ W8, 0x1
	0x03455088 STRB W8, [X22 + 0x780]
	0x0345508C LDR X0, [X21]
	0x03455090 ADRP X21, 0xCD9000
	0x03455094 LDR W8, [X0 + 0xE0]
	0x03455098 LDR X21, [X21 + 0xCE0]
	0x0345509C CBNZ W8, 0x34550A4
	0x034550A0 BL 0x1C16DFC
	0x034550A4 LDR X2, [X21]
	0x034550A8 ADD X0, X20, 0x8
	0x034550AC MOV X1, X19
	0x034550B0 LDP X20, X19, [X31 + 0x20]
	0x034550B4 LDP X22, X21, [X31 + 0x10]
	0x034550B8 LDR X30, [X31], #0x30
	0x034550BC B 0x2632228
	0x034550C0 SUB X31, X31, 0x70
	0x034550C4 STP X30, X25, [X31 + 0x30]
	0x034550C8 STP X24, X23, [X31 + 0x40]
	0x034550CC STP X22, X21, [X31 + 0x50]
	0x034550D0 STP X20, X19, [X31 + 0x60]
	0x034550D4 ADRP X20, 0xF88000
	0x034550D8 LDRB W8, [X20 + 0x781]
	0x034550DC MOV X19, X0
	0x034550E0 TBNZ X8, 0x0, 0x34551D0
	0x034550E4 ADRP X0, 0xCDA000
	0x034550E8 LDR X0, [X0 + 0xD48]
	0x034550EC BL 0x1C16CF4
	0x034550F0 ADRP X0, 0xCDA000
	0x034550F4 LDR X0, [X0 + 0xD50]
	0x034550F8 BL 0x1C16CF4
	0x034550FC ADRP X0, 0xCD9000
	0x03455100 LDR X0, [X0 + 0xCF0]
	0x03455104 BL 0x1C16CF4
	0x03455108 ADRP X0, 0xCD9000
	0x0345510C LDR X0, [X0 + 0x5B0]
	0x03455110 BL 0x1C16CF4
	0x03455114 ADRP X0, 0xCA0000
	0x03455118 LDR X0, [X0 + 0xA10]
	0x0345511C BL 0x1C16CF4
	0x03455120 ADRP X0, 0xC9F000
	0x03455124 LDR X0, [X0 + 0x9F0]
	0x03455128 BL 0x1C16CF4
	0x0345512C ADRP X0, 0xCDA000
	0x03455130 LDR X0, [X0 + 0xD58]
	0x03455134 BL 0x1C16CF4
	0x03455138 ADRP X0, 0xC9F000
	0x0345513C LDR X0, [X0 + 0x818]
	0x03455140 BL 0x1C16CF4
	0x03455144 ADRP X0, 0xCDA000
	0x03455148 LDR X0, [X0 + 0x7C8]
	0x0345514C BL 0x1C16CF4
	0x03455150 ADRP X0, 0xCDA000
	0x03455154 LDR X0, [X0 + 0x7D0]
	0x03455158 BL 0x1C16CF4
	0x0345515C ADRP X0, 0xCDA000
	0x03455160 LDR X0, [X0 + 0xD60]
	0x03455164 BL 0x1C16CF4
	0x03455168 ADRP X0, 0xCDA000
	0x0345516C LDR X0, [X0 + 0xD68]
	0x03455170 BL 0x1C16CF4
	0x03455174 ADRP X0, 0xC9F000
	0x03455178 LDR X0, [X0 + 0x830]
	0x0345517C BL 0x1C16CF4
	0x03455180 ADRP X0, 0xC9F000
	0x03455184 LDR X0, [X0 + 0x838]
	0x03455188 BL 0x1C16CF4
	0x0345518C ADRP X0, 0xCDA000
	0x03455190 LDR X0, [X0 + 0xD70]
	0x03455194 BL 0x1C16CF4
	0x03455198 ADRP X0, 0xC9F000
	0x0345519C LDR X0, [X0 + 0x840]
	0x034551A0 BL 0x1C16CF4
	0x034551A4 ADRP X0, 0xCDA000
	0x034551A8 LDR X0, [X0 + 0xD78]
	0x034551AC BL 0x1C16CF4
	0x034551B0 ADRP X0, 0xCDA000
	0x034551B4 LDR X0, [X0 + 0xD80]
	0x034551B8 BL 0x1C16CF4
	0x034551BC ADRP X0, 0xCDA000
	0x034551C0 LDR X0, [X0 + 0xD88]
	0x034551C4 BL 0x1C16CF4
	0x034551C8 MOVZ W8, 0x1
	0x034551CC STRB W8, [X20 + 0x781]
	0x034551D0 STP X31, X31, [X31 + 0x20]
	0x034551D4 STR X31, [X31 + 0x18]
	0x034551D8 ADRP X25, 0xCD9000
	0x034551DC LDR W8, [X19]
	0x034551E0 LDR X20, [X19 + 0x20]
	0x034551E4 LDR X25, [X25 + 0x5B0]
	0x034551E8 CBZ W8, 0x345520C
	0x034551EC CMP W8, 0x1
	0x034551F0 B.NE 0x3455238
	0x034551F4 LDR X8, [X19 + 0x58]
	0x034551F8 MOVN W9, 0x0
	0x034551FC STR X8, [X31 + 0x18]
	0x03455200 STR X31, [X19 + 0x58]
	0x03455204 STR W9, [X19]
	0x03455208 B 0x345554C
	0x0345520C LDR X8, [X19 + 0x50]
	0x03455210 MOVN W9, 0x0
	0x03455214 STR X8, [X31 + 0x20]
	0x03455218 STR X31, [X19 + 0x50]
	0x0345521C STR W9, [X19]
	0x03455220 ADRP X8, 0xC9F000
	0x03455224 LDR X8, [X8 + 0x830]
	0x03455228 ADD X0, X31, 0x20
	0x0345522C LDR X1, [X8]
	0x03455230 BL 0x2677474
	0x03455234 B 0x3455468
	0x03455238 ADRP X8, 0xCDA000
	0x0345523C LDR X8, [X8 + 0xD88]
	0x03455240 LDR X0, [X8]
	0x03455244 BL 0x1C16F10
	0x03455248 MOV X21, X0
	0x0345524C MOV X1, X31
	0x03455250 BL 0x3449410
	0x03455254 STR X21, [X19 + 0x48]
	0x03455258 CBZ X21, 0x3455604
	0x0345525C LDR X8, [X19 + 0x20]
	0x03455260 STR X8, [X21 + 0x10]
	0x03455264 LDR X8, [X19 + 0x28]
	0x03455268 STR X8, [X21 + 0x18]
	0x0345526C LDR X8, [X19 + 0x30]
	0x03455270 STR X8, [X21 + 0x20]
	0x03455274 LDR X8, [X19 + 0x38]
	0x03455278 STR X8, [X21 + 0x28]
	0x0345527C CBZ X20, 0x3455608
	0x03455280 LDRB W8, [X20 + 0x10]
	0x03455284 CBZ W8, 0x345546C
	0x03455288 LDR X8, [X19 + 0x48]
	0x0345528C CBZ X8, 0x345560C
	0x03455290 LDR X21, [X8 + 0x18]
	0x03455294 CBZ X21, 0x3455610
	0x03455298 ADRP X23, 0xC9F000
	0x0345529C LDR X8, [X21]
	0x034552A0 LDR X23, [X23 + 0x818]
	0x034552A4 LDRH W9, [X8 + 0x12E]
	0x034552A8 LDR X1, [X23]
	0x034552AC CBZ X9, 0x34552D0
	0x034552B0 LDR X10, [X8 + 0xB0]
	0x034552B4 ADD X10, X10, 0x8
	0x034552B8 LDUR X11, [X10 - 0x8]
	0x034552BC CMP X11, X1
	0x034552C0 B.EQ 0x34552E0
	0x034552C4 SUBS X9, X9, 0x1
	0x034552C8 ADD X10, X10, 0x10
	0x034552CC B.NE 0x34552B8
	0x034552D0 MOVZ W2, 0x7
	0x034552D4 MOV X0, X21
	0x034552D8 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF8A000
	011 Move W8, [X20+1915]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCDC000
	018 Move X0, [X0+3288]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDC000
	021 Move X0, [X0+3296]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA3000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA2000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA1000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA8000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA1000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDC000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDC000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA1000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA1000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA1000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDC000
	054 Move X0, [X0+3304]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDC000
	057 Move X0, [X0+3312]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1915], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA3000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xCA1000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCDC000
	091 Move X8, [X8+3312]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass62_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {358}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Move X8, [X19+64]
	109 Move [X21+48], X8
	110 Compare X20, 0
	111 JumpIfEqual {359}
	112 Move W8, [X20+16]
	113 Compare W8, 0
	114 JumpIfEqual {252}
	115 Move X8, [X19+80]
	116 Compare X8, 0
	117 JumpIfEqual {360}
	118 Move X21, [X8+24]
	119 Compare X21, 0
	120 JumpIfEqual {361}
	121 Move X23, 0xCA1000
	122 Move X8, [X21]
	123 Move X23, [X23+2072]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X23]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 7
	135 Move X0, X21
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 7
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X21
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X1, X31
	146 Call String.IsNullOrEmpty, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {250}
	151 Move X8, [X19+80]
	152 Compare X8, 0
	153 JumpIfEqual {362}
	154 Move X9, 0xCA1000
	155 Move X9, [X9+2544]
	156 Move X21, [X8+24]
	157 Move X0, [X9]
	158 Move W9, [X0+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X31
	163 Call DateTime.get_UtcNow
	164 Move X22, 0xCA2000
	165 Move X22, [X22+2576]
	166 Move X8, X0
	167 Move [X31+40], X8
	168 Move X0, [X22]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X22]
	174 Move X8, [X0+184]
	175 Move X1, [X8]
	176 Add X0, X31, 40
	177 Move X2, X31
	178 Call DateTime.Add, X0, X1
	179 Compare X21, 0
	180 JumpIfEqual {363}
	181 Move X8, [X21]
	182 Move X1, [X23]
	183 Move X22, X0
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move W2, 11
	194 Move X0, X21
	195 Call 0x1C5D788
	196 Move W9, [X10]
	197 Add W9, W9, 11
	198 Add X8, X8, W9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X2, [X0+8]
	202 Move X0, X21
	203 Move X1, X22
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {250}
	209 Move X8, [X19+80]
	210 Compare X8, 0
	211 JumpIfEqual {364}
	212 Move X1, [X8+24]
	213 Move X3, [X19+72]
	214 Move X4, [X8+48]
	215 Move X0, X20
	216 Move X2, X31
	217 Move X5, X31
	218 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	219 Compare X0, 0
	220 JumpIfEqual {365}
	221 Move X8, 0xCA1000
	222 Move X8, [X8+2112]
	223 Move X1, [X8]
	224 Call Task`1<Object>.GetAwaiter, X0
	225 Move X8, 0xCA1000
	226 Move X8, [X8+2104]
	227 Move [X31+32], X0
	228 Move X1, [X8]
	229 Add X0, X31, 32
	230 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {85}
	235 Move [X19], W31
	236 Move X8, [X31+32]
	237 Move [X19+88], X8
	238 Move X0, [X25]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, 0xCDB000
	244 Move X8, [X8+3288]
	245 Add X0, X19, 8
	246 Move X3, [X8]
	247 Add X1, X31, 32
	248 Move X2, X19
	249 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	250 Compare X20, 0
	251 JumpIfEqual {357}
	252 Move X8, 0xCA7000
	253 Move X8, [X8+2072]
	254 Move X21, [X20+88]
	255 Move X23, [X19+80]
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X8, 0xCDB000
	259 Move X8, [X8+3304]
	260 Move X22, X0
	261 Move X2, [X8]
	262 Move X1, X23
	263 Move X3, X31
	264 Call Func`1<Object>..ctor, X0, X1, X2
	265 Move X8, [X19+80]
	266 Compare X8, 0
	267 JumpIfEqual {354}
	268 Move X9, 0xCDB000
	269 Move X23, [X19+72]
	270 Move X9, [X9+1992]
	271 Compare X23, 0
	272 JumpIfNotEqual {274}
	273 Move X23, [X20+24]
	274 Move X20, [X8+24]
	275 Move X1, [X8+48]
	276 Move X2, [X9]
	277 Move [X31+8], X31
	278 Move [X31+16], X31
	279 Add X0, X31, 8
	280 Call Nullable`1<CancellationToken>..ctor, X0, X1
	281 Move X8, 0xCDB000
	282 Move X8, [X8+2000]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X3, [X31+8]
	286 Move X4, [X31+16]
	287 Move X24, X0
	288 Move X1, X20
	289 Move X2, X23
	290 Move X5, X31
	291 Call RetryHistory..ctor, X0, X1, X2, X3
	292 Compare X21, 0
	293 JumpIfEqual {355}
	294 Move X0, X21
	295 Move X1, X22
	296 Move X2, X24
	297 Move X3, X31
	298 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	299 Compare X0, 0
	300 JumpIfEqual {356}
	301 Move X1, X31
	302 Call Task.GetAwaiter, X0
	303 Move [X31+24], X0
	304 Add X0, X31, 24
	305 Move X1, X31
	306 Call TaskAwaiter.get_IsCompleted, X0
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {328}
	311 Add X0, X31, 24
	312 Move X1, X31
	313 Call TaskAwaiter.GetResult, X0
	314 Move TEMP, 1
	315 Not TEMP
	316 Move W8, TEMP
	317 Move [X19], W8
	318 Move [X19+80], X31
	319 Move X0, [X25]
	320 Add X19, X19, 8
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X0, X19
	326 Move X1, X31
	327 Call AsyncTaskMethodBuilder.SetResult, X0
	328 Move W8, 1
	329 Move [X19], W8
	330 Move X8, [X31+24]
	331 Move [X19+96], X8
	332 Move X0, [X25]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X8, 0xCDB000
	338 Move X8, [X8+3296]
	339 Add X0, X19, 8
	340 Move X3, [X8]
	341 Add X1, X31, 24
	342 Move X2, X19
	343 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	344 Move X20, [X31+96]
	345 Move X19, [X31+104]
	346 Move X22, [X31+80]
	347 Move X21, [X31+88]
	348 Move X24, [X31+64]
	349 Move X23, [X31+72]
	350 Move X30, [X31+48]
	351 Move X25, [X31+56]
	352 Add X31, X31, 112
	353 Return 
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Move X20, X0
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X0, X20
	369 Call 0x3EB2AD0
	370 Move X20, X0
	371 Move X0, 0xC9F000
	372 Move X0, [X0+2000]
	373 Call 0x1C17D08
	374 Move X8, [X20]
	375 Move X1, [X8]
	376 Call 0x1C18270
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {399}
	381 Move X20, [X20]
	382 Call 0x3EB2AE0
	383 Move TEMP, 1
	384 Not TEMP
	385 Move W8, TEMP
	386 Move [X19+80], X31
	387 Move [X19+8], W8
	388 Move X0, 0xCA2000
	389 Move X0, [X0+640]
	390 Call 0x1C17D08
	391 Move W8, [X0+224]
	392 Compare W8, 0
	393 JumpIfNotEqual {395}
	394 Call 0x1C17DFC
	395 Move X0, X19
	396 Move X1, X20
	397 Move X2, X31
	398 Call AsyncTaskMethodBuilder.SetException, X0, X1
	399 Move W0, 8
	400 Call 0x3EB2AF0
	401 Move X8, [X20]
	402 Move [X0], X8
	403 Move X1, 0xA60000
	404 Add X1, X1, 3672
	405 Move X2, X31
	406 Call 0x3EB2B00
	407 Move X20, X0
	408 Call 0x3EB2AE0
	409 Move X0, X20
	410 Call 0x1D2D690
	411 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034552DC B 0x34552F0
	0x034552E0 LDR W9, [X10]
	0x034552E4 ADD W9, W9, 0x7
	0x034552E8 ADD X8, X8, W9, 0x4, SXTW
	0x034552EC ADD X0, X8, 0x138
	0x034552F0 LDP X8, X1, [X0]
	0x034552F4 MOV X0, X21
	0x034552F8 BLR X8
	0x034552FC MOV X1, X31
	0x03455300 BL 0x32277A8
	0x03455304 TBNZ X0, 0x0, 0x3455468
	0x03455308 LDR X8, [X19 + 0x48]
	0x0345530C CBZ X8, 0x3455614
	0x03455310 ADRP X9, 0xC9F000
	0x03455314 LDR X9, [X9 + 0x9F0]
	0x03455318 LDR X21, [X8 + 0x18]
	0x0345531C LDR X0, [X9]
	0x03455320 LDR W9, [X0 + 0xE0]
	0x03455324 CBNZ W9, 0x345532C
	0x03455328 BL 0x1C16DFC
	0x0345532C MOV X0, X31
	0x03455330 BL 0x33616A4
	0x03455334 ADRP X22, 0xCA0000
	0x03455338 LDR X22, [X22 + 0xA10]
	0x0345533C MOV X8, X0
	0x03455340 STR X8, [X31 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF89000
	007 Move X22, 0xCA2000
	008 Move W8, [X21+1916]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA2000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1916], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

