Type: Nakama.ApiClient/<ListGroupUsersAsync>d__58

Method: System.Void MoveNext()

Disassembly:
	0x0342CA80 LDR X1, [X19 + 0x58]
	0x0342CA84 LDR X0, [X8]
	0x0342CA88 MOV X2, X31
	0x0342CA8C BL 0x321B938
	0x0342CA90 CBZ X22, 0x342CC5C
	0x0342CA94 ADRP X8, 0xD02000
	0x0342CA98 LDR X8, [X8 + 0x7D0]
	0x0342CA9C ADRP X9, 0xCC8000
	0x0342CAA0 LDR X9, [X9 + 0x810]
	0x0342CAA4 MOV X2, X0
	0x0342CAA8 LDR X1, [X8]
	0x0342CAAC LDR X3, [X9]
	0x0342CAB0 MOV X0, X22
	0x0342CAB4 BL 0x2AA5098
	0x0342CAB8 LDR X23, [X24 + 0x10]
	0x0342CABC CBZ X23, 0x342CC60
	0x0342CAC0 ADRP X10, 0xD02000
	0x0342CAC4 LDR X10, [X10 + 0x7B8]
	0x0342CAC8 LDR X8, [X23]
	0x0342CACC LDR W25, [X24 + 0x18]
	0x0342CAD0 LDP X26, X24, [X19 + 0x60]
	0x0342CAD4 LDR X1, [X10]
	0x0342CAD8 LDRH W9, [X8 + 0x12E]
	0x0342CADC CBZ X9, 0x342CB00
	0x0342CAE0 LDR X10, [X8 + 0xB0]
	0x0342CAE4 ADD X10, X10, 0x8
	0x0342CAE8 LDUR X11, [X10 - 0x8]
	0x0342CAEC CMP X11, X1
	0x0342CAF0 B.EQ 0x342CB28
	0x0342CAF4 SUBS X9, X9, 0x1
	0x0342CAF8 ADD X10, X10, 0x10
	0x0342CAFC B.NE 0x342CAE8
	0x0342CB00 MOVZ W2, 0x3
	0x0342CB04 MOV X0, X23
	0x0342CB08 BL 0x1C5C788
	0x0342CB0C B 0x342CB38
	0x0342CB10 LDR X8, [X19 + 0x70]
	0x0342CB14 MOVN W9, 0x0
	0x0342CB18 STR X8, [X31 + 0x18]
	0x0342CB1C STR X31, [X19 + 0x70]
	0x0342CB20 STR W9, [X19]
	0x0342CB24 B 0x342CB94
	0x0342CB28 LDR W9, [X10]
	0x0342CB2C ADD W9, W9, 0x3
	0x0342CB30 ADD X8, X8, W9, 0x4, SXTW
	0x0342CB34 ADD X0, X8, 0x138
	0x0342CB38 LDP X8, X9, [X0]
	0x0342CB3C MOV X0, X23
	0x0342CB40 MOV X1, X21
	0x0342CB44 MOV X2, X20
	0x0342CB48 MOV X3, X22
	0x0342CB4C MOV X4, X31
	0x0342CB50 MOV W5, W25
	0x0342CB54 MOV X6, X26
	0x0342CB58 MOV X7, X24
	0x0342CB5C STR X9, [X31]
	0x0342CB60 BLR X8
	0x0342CB64 CBZ X0, 0x342CC64
	0x0342CB68 ADRP X8, 0xCCA000
	0x0342CB6C LDR X8, [X8 + 0x1F8]
	0x0342CB70 LDR X1, [X8]
	0x0342CB74 BL 0x269F5D0
	0x0342CB78 ADRP X8, 0xCCA000
	0x0342CB7C LDR X8, [X8 + 0x1F0]
	0x0342CB80 STR X0, [X31 + 0x18]
	0x0342CB84 LDR X1, [X8]
	0x0342CB88 ADD X0, X31, 0x18
	0x0342CB8C BL 0x2677430
	0x0342CB90 TBZ X0, 0x0, 0x342CBF0
	0x0342CB94 ADRP X8, 0xCCA000
	0x0342CB98 LDR X8, [X8 + 0x1E0]
	0x0342CB9C ADD X0, X31, 0x18
	0x0342CBA0 LDR X1, [X8]
	0x0342CBA4 BL 0x2677474
	0x0342CBA8 ADRP X8, 0xD02000
	0x0342CBAC LDR X8, [X8 + 0xFC0]
	0x0342CBB0 LDR X1, [X8]
	0x0342CBB4 BL 0x220E6DC
	0x0342CBB8 MOVN W8, 0x1
	0x0342CBBC STR W8, [X19], #0x8
	0x0342CBC0 MOV X20, X0
	0x0342CBC4 LDR X0, [X27]
	0x0342CBC8 ADRP X21, 0xD02000
	0x0342CBCC LDR W8, [X0 + 0xE0]
	0x0342CBD0 LDR X21, [X21 + 0xFB8]
	0x0342CBD4 CBNZ W8, 0x342CBDC
	0x0342CBD8 BL 0x1C16DFC
	0x0342CBDC LDR X2, [X21]
	0x0342CBE0 MOV X0, X19
	0x0342CBE4 MOV X1, X20
	0x0342CBE8 BL 0x26322B0
	0x0342CBEC B 0x342CC28
	0x0342CBF0 STR W31, [X19]
	0x0342CBF4 LDR X8, [X31 + 0x18]
	0x0342CBF8 STR X8, [X19 + 0x70]
	0x0342CBFC LDR X0, [X27]
	0x0342CC00 LDR W8, [X0 + 0xE0]
	0x0342CC04 CBNZ W8, 0x342CC0C
	0x0342CC08 BL 0x1C16DFC
	0x0342CC0C ADRP X8, 0xD02000
	0x0342CC10 LDR X8, [X8 + 0xFB0]
	0x0342CC14 ADD X0, X19, 0x8
	0x0342CC18 LDR X3, [X8]
	0x0342CC1C ADD X1, X31, 0x18
	0x0342CC20 MOV X2, X19
	0x0342CC24 BL 0x1FB3998
	0x0342CC28 LDP X20, X19, [X31 + 0x60]
	0x0342CC2C LDP X22, X21, [X31 + 0x50]
	0x0342CC30 LDP X24, X23, [X31 + 0x40]
	0x0342CC34 LDP X26, X25, [X31 + 0x30]
	0x0342CC38 LDP X30, X27, [X31 + 0x20]
	0x0342CC3C ADD X31, X31, 0x70
	0x0342CC40 RET
	0x0342CC44 BL 0x1C16F20
	0x0342CC48 BL 0x1C16F20
	0x0342CC4C BL 0x1C16F20
	0x0342CC50 BL 0x1C16F28
	0x0342CC54 BL 0x1C16F20
	0x0342CC58 BL 0x1C16F20
	0x0342CC5C BL 0x1C16F20
	0x0342CC60 BL 0x1C16F20
	0x0342CC64 BL 0x1C16F20
	0x0342CC68 BL 0x1C16F20
	0x0342CC6C BL 0x1C16F28
	0x0342CC70 BL 0x1C16F28
	0x0342CC74 BL 0x1C16F28
	0x0342CC78 BL 0x1C16F20
	0x0342CC7C BL 0x1C16F28
	0x0342CC80 BL 0x1C16F28
	0x0342CC84 BL 0x1C16F28
	0x0342CC88 BL 0x1C16F28
	0x0342CC8C BL 0x1C16F20
	0x0342CC90 BL 0x1C16F28
	0x0342CC94 BL 0x1C16F44
	0x0342CC98 MOV X1, X31
	0x0342CC9C BL 0x1C16DEC
	0x0342CCA0 BL 0x1C16F44
	0x0342CCA4 MOV X1, X31
	0x0342CCA8 BL 0x1C16DEC
	0x0342CCAC BL 0x1C16F44
	0x0342CCB0 MOV X1, X31
	0x0342CCB4 BL 0x1C16DEC
	0x0342CCB8 BL 0x1C16F44
	0x0342CCBC MOV X1, X31
	0x0342CCC0 BL 0x1C16DEC
	0x0342CCC4 BL 0x1C16F44
	0x0342CCC8 MOV X1, X31
	0x0342CCCC BL 0x1C16DEC
	0x0342CCD0 BL 0x1C16F44
	0x0342CCD4 MOV X1, X31
	0x0342CCD8 BL 0x1C16DEC
	0x0342CCDC BL 0x1C16F44
	0x0342CCE0 MOV X1, X31
	0x0342CCE4 BL 0x1C16DEC
	0x0342CCE8 BL 0x1C16F44
	0x0342CCEC MOV X1, X31
	0x0342CCF0 BL 0x1C16DEC
	0x0342CCF4 B 0x342CDA4
	0x0342CCF8 B 0x342CDA4
	0x0342CCFC B 0x342CDA4
	0x0342CD00 B 0x342CDA4
	0x0342CD04 B 0x342CDA4
	0x0342CD08 B 0x342CDA4
	0x0342CD0C B 0x342CDA4
	0x0342CD10 B 0x342CDA4
	0x0342CD14 B 0x342CDA4
	0x0342CD18 B 0x342CDA4
	0x0342CD1C B 0x342CDA4
	0x0342CD20 B 0x342CDA4
	0x0342CD24 B 0x342CDA4
	0x0342CD28 B 0x342CDA4
	0x0342CD2C B 0x342CDA4
	0x0342CD30 B 0x342CDA4
	0x0342CD34 B 0x342CDA4
	0x0342CD38 B 0x342CDA4
	0x0342CD3C B 0x342CDA4
	0x0342CD40 B 0x342CDA4
	0x0342CD44 B 0x342CDA4
	0x0342CD48 B 0x342CDA4
	0x0342CD4C B 0x342CDA4
	0x0342CD50 B 0x342CDA4
	0x0342CD54 B 0x342CDA4
	0x0342CD58 B 0x342CDA4
	0x0342CD5C B 0x342CDA4
	0x0342CD60 B 0x342CDA4
	0x0342CD64 B 0x342CDA4
	0x0342CD68 B 0x342CDA4
	0x0342CD6C B 0x342CDA4
	0x0342CD70 B 0x342CDA4
	0x0342CD74 B 0x342CDA4
	0x0342CD78 B 0x342CDA4
	0x0342CD7C B 0x342CDA4
	0x0342CD80 B 0x342CDA4
	0x0342CD84 B 0x342CDA4
	0x0342CD88 B 0x342CDA4
	0x0342CD8C B 0x342CDA4
	0x0342CD90 B 0x342CDA4
	0x0342CD94 B 0x342CDA4
	0x0342CD98 B 0x342CDA4
	0x0342CD9C B 0x342CDA4
	0x0342CDA0 B 0x342CDA4
	0x0342CDA4 MOV X20, X0
	0x0342CDA8 CMP W1, 0x1
	0x0342CDAC B.NE 0x342CE48
	0x0342CDB0 MOV X0, X20
	0x0342CDB4 BL 0x3EB1AD0
	0x0342CDB8 MOV X20, X0
	0x0342CDBC ADRP X0, 0xCC7000
	0x0342CDC0 LDR X0, [X0 + 0x7D0]
	0x0342CDC4 BL 0x1C16D08
	0x0342CDC8 LDR X8, [X20]
	0x0342CDCC LDR X1, [X8]
	0x0342CDD0 BL 0x1C17270
	0x0342CDD4 TBZ X0, 0x0, 0x342CE20
	0x0342CDD8 LDR X20, [X20]
	0x0342CDDC BL 0x3EB1AE0
	0x0342CDE0 MOVN W8, 0x1
	0x0342CDE4 STR W8, [X19], #0x8
	0x0342CDE8 ADRP X0, 0xD02000
	0x0342CDEC LDR X0, [X0 + 0x488]
	0x0342CDF0 BL 0x1C16D08
	0x0342CDF4 LDR W8, [X0 + 0xE0]
	0x0342CDF8 CBNZ W8, 0x342CE00
	0x0342CDFC BL 0x1C16DFC
	0x0342CE00 ADRP X0, 0xD02000
	0x0342CE04 LDR X0, [X0 + 0xFE8]
	0x0342CE08 BL 0x1C16D08
	0x0342CE0C MOV X2, X0
	0x0342CE10 MOV X0, X19
	0x0342CE14 MOV X1, X20
	0x0342CE18 BL 0x26324C8
	0x0342CE1C B 0x342CC28
	0x0342CE20 MOVZ W0, 0x8
	0x0342CE24 BL 0x3EB1AF0
	0x0342CE28 LDR X8, [X20]
	0x0342CE2C STR X8, [X0]
	0x0342CE30 ADRP X1, 0xA88000
	0x0342CE34 ADD X1, X1, 0xE58
	0x0342CE38 MOV X2, X31
	0x0342CE3C BL 0x3EB1B00
	0x0342CE40 MOV X20, X0
	0x0342CE44 BL 0x3EB1AE0
	0x0342CE48 MOV X0, X20
	0x0342CE4C BL 0x1D2C690
	0x0342CE50 BL 0x1990590
	0x0342CE54 STR X30, [X31 - 0x30]!
	0x0342CE58 STP X22, X21, [X31 + 0x10]
	0x0342CE5C STP X20, X19, [X31 + 0x20]
	0x0342CE60 ADRP X22, 0xFB1000
	0x0342CE64 ADRP X21, 0xD02000
	0x0342CE68 LDRB W8, [X22 + 0x652]
	0x0342CE6C LDR X21, [X21 + 0x488]
	0x0342CE70 MOV X19, X1
	0x0342CE74 MOV X20, X0
	0x0342CE78 TBNZ X8, 0x0, 0x342CE9C
	0x0342CE7C ADRP X0, 0xD02000
	0x0342CE80 LDR X0, [X0 + 0xFF0]
	0x0342CE84 BL 0x1C16CF4
	0x0342CE88 ADRP X0, 0xD02000
	0x0342CE8C LDR X0, [X0 + 0x488]
	0x0342CE90 BL 0x1C16CF4
	0x0342CE94 MOVZ W8, 0x1
	0x0342CE98 STRB W8, [X22 + 0x652]
	0x0342CE9C LDR X0, [X21]
	0x0342CEA0 ADRP X21, 0xD02000
	0x0342CEA4 LDR W8, [X0 + 0xE0]
	0x0342CEA8 LDR X21, [X21 + 0xFF0]
	0x0342CEAC CBNZ W8, 0x342CEB4
	0x0342CEB0 BL 0x1C16DFC
	0x0342CEB4 LDR X2, [X21]
	0x0342CEB8 ADD X0, X20, 0x8
	0x0342CEBC MOV X1, X19
	0x0342CEC0 LDP X20, X19, [X31 + 0x20]
	0x0342CEC4 LDP X22, X21, [X31 + 0x10]
	0x0342CEC8 LDR X30, [X31], #0x30
	0x0342CECC B 0x2632228
	0x0342CED0 SUB X31, X31, 0x70
	0x0342CED4 STP X30, X27, [X31 + 0x20]
	0x0342CED8 STP X26, X25, [X31 + 0x30]
	0x0342CEDC STP X24, X23, [X31 + 0x40]
	0x0342CEE0 STP X22, X21, [X31 + 0x50]
	0x0342CEE4 STP X20, X19, [X31 + 0x60]
	0x0342CEE8 ADRP X20, 0xFB1000
	0x0342CEEC LDRB W8, [X20 + 0x653]
	0x0342CEF0 MOV X19, X0
	0x0342CEF4 TBNZ X8, 0x0, 0x342D050
	0x0342CEF8 ADRP X0, 0xD02000
	0x0342CEFC LDR X0, [X0 + 0xFF8]
	0x0342CF00 BL 0x1C16CF4
	0x0342CF04 ADRP X0, 0xD03000
	0x0342CF08 LDR X0, [X0]
	0x0342CF0C BL 0x1C16CF4
	0x0342CF10 ADRP X0, 0xD02000
	0x0342CF14 LDR X0, [X0 + 0x5D8]
	0x0342CF18 BL 0x1C16CF4
	0x0342CF1C ADRP X0, 0xCD0000
	0x0342CF20 LDR X0, [X0 + 0x8D8]
	0x0342CF24 BL 0x1C16CF4
	0x0342CF28 ADRP X0, 0xCC8000
	0x0342CF2C LDR X0, [X0 + 0x810]
	0x0342CF30 BL 0x1C16CF4
	0x0342CF34 ADRP X0, 0xCC8000
	0x0342CF38 LDR X0, [X0 + 0x6C0]
	0x0342CF3C BL 0x1C16CF4
	0x0342CF40 ADRP X0, 0xCC8000
	0x0342CF44 LDR X0, [X0 + 0x6D0]
	0x0342CF48 BL 0x1C16CF4
	0x0342CF4C ADRP X0, 0xD02000
	0x0342CF50 LDR X0, [X0 + 0x7B8]
	0x0342CF54 BL 0x1C16CF4
	0x0342CF58 ADRP X0, 0xD03000
	0x0342CF5C LDR X0, [X0 + 0x8]
	0x0342CF60 BL 0x1C16CF4
	0x0342CF64 ADRP X0, 0xCCA000
	0x0342CF68 LDR X0, [X0 + 0xEF8]
	0x0342CF6C BL 0x1C16CF4
	0x0342CF70 ADRP X0, 0xCC8000
	0x0342CF74 LDR X0, [X0 + 0x478]
	0x0342CF78 BL 0x1C16CF4
	0x0342CF7C ADRP X0, 0xCC7000
	0x0342CF80 LDR X0, [X0 + 0x9D0]
	0x0342CF84 BL 0x1C16CF4
	0x0342CF88 ADRP X0, 0xCCA000
	0x0342CF8C LDR X0, [X0 + 0x1E0]
	0x0342CF90 BL 0x1C16CF4
	0x0342CF94 ADRP X0, 0xCCA000
	0x0342CF98 LDR X0, [X0 + 0x1F0]
	0x0342CF9C BL 0x1C16CF4
	0x0342CFA0 ADRP X0, 0xCCA000
	0x0342CFA4 LDR X0, [X0 + 0x1F8]
	0x0342CFA8 BL 0x1C16CF4
	0x0342CFAC ADRP X0, 0xCD0000
	0x0342CFB0 LDR X0, [X0 + 0x3A0]
	0x0342CFB4 BL 0x1C16CF4
	0x0342CFB8 ADRP X0, 0xCC9000
	0x0342CFBC LDR X0, [X0 + 0xA28]
	0x0342CFC0 BL 0x1C16CF4
	0x0342CFC4 ADRP X0, 0xD03000
	0x0342CFC8 LDR X0, [X0 + 0x10]
	0x0342CFCC BL 0x1C16CF4
	0x0342CFD0 ADRP X0, 0xCF0000
	0x0342CFD4 LDR X0, [X0 + 0x4D0]
	0x0342CFD8 BL 0x1C16CF4
	0x0342CFDC ADRP X0, 0xD03000
	0x0342CFE0 LDR X0, [X0 + 0x18]
	0x0342CFE4 BL 0x1C16CF4
	0x0342CFE8 ADRP X0, 0xD03000
	0x0342CFEC LDR X0, [X0 + 0x20]
	0x0342CFF0 BL 0x1C16CF4
	0x0342CFF4 ADRP X0, 0xCD0000
	0x0342CFF8 LDR X0, [X0 + 0x720]
	0x0342CFFC BL 0x1C16CF4
	0x0342D000 ADRP X0, 0xD01000
	0x0342D004 LDR X0, [X0 + 0x7D0]
	0x0342D008 BL 0x1C16CF4
	0x0342D00C ADRP X0, 0xD01000
	0x0342D010 LDR X0, [X0 + 0xF18]
	0x0342D014 BL 0x1C16CF4
	0x0342D018 ADRP X0, 0xD01000
	0x0342D01C LDR X0, [X0 + 0xC20]
	0x0342D020 BL 0x1C16CF4
	0x0342D024 ADRP X0, 0xD01000
	0x0342D028 LDR X0, [X0 + 0x7D8]
	0x0342D02C BL 0x1C16CF4
	0x0342D030 ADRP X0, 0xCC6000
	0x0342D034 LDR X0, [X0 + 0x988]
	0x0342D038 BL 0x1C16CF4
	0x0342D03C ADRP X0, 0xD01000
	0x0342D040 LDR X0, [X0 + 0xF20]
	0x0342D044 BL 0x1C16CF4
	0x0342D048 MOVZ W8, 0x1
	0x0342D04C STRB W8, [X20 + 0x653]
	0x0342D050 STR X31, [X31 + 0x18]
	0x0342D054 ADRP X27, 0xD01000
	0x0342D058 LDR W8, [X19]
	0x0342D05C LDR X27, [X27 + 0x5D8]
	0x0342D060 CBZ W8, 0x342D434
	0x0342D064 LDR X21, [X19 + 0x20]
	0x0342D068 CBZ X21, 0x342D568
	0x0342D06C LDR X8, [X19 + 0x28]
	0x0342D070 CBZ X8, 0x342D5B0
	0x0342D074 ADRP X23, 0xCC8000
	0x0342D078 LDR X23, [X23 + 0xA28]
	0x0342D07C ADRP X8, 0xD02000
	0x0342D080 LDR X0, [X23]
	0x0342D084 LDR X8, [X8 + 0x10]
	0x0342D088 LDR X24, [X19 + 0x48]
	0x0342D08C LDR W9, [X0 + 0xE0]
	0x0342D090 LDR X20, [X8]
	0x0342D094 CBNZ W9, 0x342D09C
	0x0342D098 BL 0x1C16DFC
	0x0342D09C MOV X0, X21
	0x0342D0A0 MOV X1, X31
	0x0342D0A4 BL 0x3624D20
	0x0342D0A8 CBZ X20, 0x342D5F8
	0x0342D0AC ADRP X8, 0xD01000
	0x0342D0B0 LDR X8, [X8 + 0xC20]
	0x0342D0B4 MOV X2, X0
	0x0342D0B8 LDR X1, [X8]
	0x0342D0BC MOV X0, X20
	0x0342D0C0 MOV X3, X31
	0x0342D0C4 BL 0x32293BC
	0x0342D0C8 MOV X20, X0
	0x0342D0CC LDR X0, [X19 + 0x28]
	0x0342D0D0 MOV X1, X31
	0x0342D0D4 BL 0x3624D20
	0x0342D0D8 CBZ X20, 0x342D5FC
	0x0342D0DC ADRP X8, 0xD02000
	0x0342D0E0 LDR X8, [X8 + 0x18]
	0x0342D0E4 MOV X2, X0
	0x0342D0E8 LDR X1, [X8]
	0x0342D0EC MOV X0, X20
	0x0342D0F0 MOV X3, X31
	0x0342D0F4 BL 0x32293BC
	0x0342D0F8 ADRP X8, 0xCC6000
	0x0342D0FC LDR X8, [X8 + 0x988]
	0x0342D100 LDRB W9, [X19 + 0x30]
	0x0342D104 MOV X20, X0
	0x0342D108 LDR X21, [X8]
	0x0342D10C CBZ W9, 0x342D210
	0x0342D110 ADRP X8, 0xCC6000
	0x0342D114 LDR X8, [X8 + 0x9D0]
	0x0342D118 LDR X0, [X8]
	0x0342D11C MOVZ W1, 0x4
	0x0342D120 BL 0x1C16D6C
	0x0342D124 MOV X22, X0
	0x0342D128 CBZ X0, 0x342D624
	0x0342D12C CBZ X21, 0x342D144
	0x0342D130 LDR X8, [X22]
	0x0342D134 LDR X1, [X8 + 0x40]
	0x0342D138 MOV X0, X21
	0x0342D13C BL 0x1C16E00
	0x0342D140 CBZ X0, 0x342D638
	0x0342D144 LDR W8, [X22 + 0x18]
	0x0342D148 CBZ W8, 0x342D628
	0x0342D14C STR X21, [X22 + 0x20]
	0x0342D150 ADRP X21, 0xD01000
	0x0342D154 LDR X21, [X21 + 0xF18]
	0x0342D158 LDR X0, [X21]
	0x0342D15C CBZ X0, 0x342D174
	0x0342D160 LDR X8, [X22]
	0x0342D164 LDR X1, [X8 + 0x40]
	0x0342D168 BL 0x1C16E00
	0x0342D16C CBZ X0, 0x342D644
	0x0342D170 LDR W8, [X22 + 0x18]
	0x0342D174 CMP W8, 0x1
	0x0342D178 B.LS 0x342D62C
	0x0342D17C LDR X8, [X21]
	0x0342D180 ADRP X9, 0xCC7000
	0x0342D184 STR X8, [X22 + 0x28]
	0x0342D188 LDR X8, [X19 + 0x30]
	0x0342D18C LDR X9, [X9 + 0x478]
	0x0342D190 STR X8, [X31 + 0x10]
	0x0342D194 LDR X0, [X9]
	0x0342D198 ADD X1, X31, 0x10
	0x0342D19C BL 0x1C16E04
	0x0342D1A0 MOV X21, X0
	0x0342D1A4 CBZ X0, 0x342D1BC
	0x0342D1A8 LDR X8, [X22]
	0x0342D1AC LDR X1, [X8 + 0x40]
	0x0342D1B0 MOV X0, X21
	0x0342D1B4 BL 0x1C16E00
	0x0342D1B8 CBZ X0, 0x342D650
	0x0342D1BC LDR W8, [X22 + 0x18]
	0x0342D1C0 CMP W8, 0x2
	0x0342D1C4 B.LS 0x342D630
	0x0342D1C8 STR X21, [X22 + 0x30]
	0x0342D1CC ADRP X21, 0xCCF000
	0x0342D1D0 LDR X21, [X21 + 0x720]
	0x0342D1D4 LDR X0, [X21]
	0x0342D1D8 CBZ X0, 0x342D1F0
	0x0342D1DC LDR X8, [X22]
	0x0342D1E0 LDR X1, [X8 + 0x40]
	0x0342D1E4 BL 0x1C16E00
	0x0342D1E8 CBZ X0, 0x342D65C
	0x0342D1EC LDR W8, [X22 + 0x18]
	0x0342D1F0 CMP W8, 0x3
	0x0342D1F4 B.LS 0x342D634
	0x0342D1F8 LDR X8, [X21]
	0x0342D1FC STR X8, [X22 + 0x38]
	0x0342D200 MOV X0, X22
	0x0342D204 MOV X1, X31
	0x0342D208 BL 0x3227578
	0x0342D20C MOV X21, X0
	0x0342D210 LDR X22, [X19 + 0x38]
	0x0342D214 CBZ X22, 0x342D260
	0x0342D218 LDR X0, [X23]
	0x0342D21C LDR W8, [X0 + 0xE0]
	0x0342D220 CBNZ W8, 0x342D228
	0x0342D224 BL 0x1C16DFC
	0x0342D228 MOV X0, X22
	0x0342D22C MOV X1, X31
	0x0342D230 BL 0x3624D20
	0x0342D234 ADRP X8, 0xD02000
	0x0342D238 LDR X8, [X8 + 0x20]
	0x0342D23C ADRP X9, 0xCCF000
	0x0342D240 LDR X9, [X9 + 0x720]
	0x0342D244 MOV X2, X0
	0x0342D248 LDR X1, [X8]
	0x0342D24C LDR X3, [X9]
	0x0342D250 MOV X0, X21
	0x0342D254 MOV X4, X31
	0x0342D258 BL 0x32277C4
	0x0342D25C MOV X21, X0
	0x0342D260 LDR X22, [X19 + 0x40]
	0x0342D264 CBZ X22, 0x342D2B0
	0x0342D268 LDR X0, [X23]
	0x0342D26C LDR W8, [X0 + 0xE0]
	0x0342D270 CBNZ W8, 0x342D278
	0x0342D274 BL 0x1C16DFC
	0x0342D278 MOV X0, X22
	0x0342D27C MOV X1, X31
	0x0342D280 BL 0x3624D20
	0x0342D284 ADRP X8, 0xD01000
	0x0342D288 LDR X8, [X8 + 0xF20]
	0x0342D28C ADRP X9, 0xCCF000
	0x0342D290 LDR X9, [X9 + 0x720]
	0x0342D294 MOV X2, X0
	0x0342D298 LDR X1, [X8]
	0x0342D29C LDR X3, [X9]
	0x0342D2A0 MOV X0, X21
	0x0342D2A4 MOV X4, X31
	0x0342D2A8 BL 0x32277C4
	0x0342D2AC MOV X21, X0
	0x0342D2B0 CBZ X24, 0x342D600
	0x0342D2B4 LDR X0, [X24 + 0x20]
	0x0342D2B8 CBZ X0, 0x342D604
	0x0342D2BC MOV X1, X31
	0x0342D2C0 BL 0x361B448
	0x0342D2C4 ADRP X8, 0xCCF000
	0x0342D2C8 LDR X8, [X8 + 0x8D8]
	0x0342D2CC MOV X22, X0
	0x0342D2D0 LDR X0, [X8]
	0x0342D2D4 MOVZ W1, 0x1
	0x0342D2D8 BL 0x1C16D6C
	0x0342D2DC MOV X1, X0
	0x0342D2E0 CBZ X1, 0x342D608
	0x0342D2E4 LDR W8, [X1 + 0x18]
	0x0342D2E8 CBZ W8, 0x342D60C
	0x0342D2EC MOVZ W8, 0x2F
	0x0342D2F0 STRH W8, [X1 + 0x20]
	0x0342D2F4 CBZ X22, 0x342D610
	0x0342D2F8 MOV X0, X22
	0x0342D2FC MOV X2, X31
	0x0342D300 BL 0x322BC58
	0x0342D304 MOV X1, X20
	0x0342D308 MOV X2, X31
	0x0342D30C BL 0x321B938
	0x0342D310 ADRP X8, 0xCCF000
	0x0342D314 LDR X8, [X8 + 0x3A0]
	0x0342D318 MOV X22, X0
	0x0342D31C LDR X23, [X24 + 0x20]
	0x0342D320 LDR X0, [X8]
	0x0342D324 BL 0x1C16F10
	0x0342D328 MOV X20, X0
	0x0342D32C MOV X1, X23
	0x0342D330 MOV X2, X31
	0x0342D334 BL 0x36281F8
	0x0342D338 CBZ X20, 0x342D614
	0x0342D33C MOV X0, X20
	0x0342D340 MOV X1, X22
	0x0342D344 MOV X2, X31
	0x0342D348 BL 0x36288CC
	0x0342D34C MOV X0, X20
	0x0342D350 MOV X1, X21
	0x0342D354 MOV X2, X31
	0x0342D358 BL 0x3628980
	0x0342D35C MOV X0, X20
	0x0342D360 MOV X1, X31
	0x0342D364 BL 0x3628A38
	0x0342D368 ADRP X8, 0xCEF000
	0x0342D36C ADRP X9, 0xCC7000
	0x0342D370 LDR X8, [X8 + 0x4D0]
	0x0342D374 LDR X9, [X9 + 0x6D0]
	0x0342D378 MOV X20, X0
	0x0342D37C LDR X21, [X8]
	0x0342D380 LDR X0, [X9]
	0x0342D384 BL 0x1C16F10
	0x0342D388 ADRP X8, 0xCC7000
	0x0342D38C LDR X8, [X8 + 0x6C0]
	0x0342D390 MOV X22, X0
	0x0342D394 LDR X1, [X8]
	0x0342D398 BL 0x2AA4804
	0x0342D39C ADRP X8, 0xD01000
	0x0342D3A0 LDR X8, [X8 + 0x7D8]
	0x0342D3A4 LDR X1, [X19 + 0x50]
	0x0342D3A8 LDR X0, [X8]
	0x0342D3AC MOV X2, X31
	0x0342D3B0 BL 0x321B938
	0x0342D3B4 CBZ X22, 0x342D618
	0x0342D3B8 ADRP X8, 0xD01000
	0x0342D3BC LDR X8, [X8 + 0x7D0]
	0x0342D3C0 ADRP X9, 0xCC7000
	0x0342D3C4 LDR X9, [X9 + 0x810]
	0x0342D3C8 MOV X2, X0
	0x0342D3CC LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xFB2000
	013 Move W8, [X20+1615]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {102}
	019 Move X0, 0xD03000
	020 Move X0, [X0+3960]
	021 Call 0x1C17CF4
	022 Move X0, 0xD03000
	023 Move X0, [X0+3968]
	024 Call 0x1C17CF4
	025 Move X0, 0xD03000
	026 Move X0, [X0+1296]
	027 Call 0x1C17CF4
	028 Move X0, 0xCD1000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC9000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC9000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCC9000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xD03000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xD03000
	044 Move X0, [X0+3976]
	045 Call 0x1C17CF4
	046 Move X0, 0xCCB000
	047 Move X0, [X0+3832]
	048 Call 0x1C17CF4
	049 Move X0, 0xCC9000
	050 Move X0, [X0+1144]
	051 Call 0x1C17CF4
	052 Move X0, 0xCC8000
	053 Move X0, [X0+2512]
	054 Call 0x1C17CF4
	055 Move X0, 0xCCB000
	056 Move X0, [X0+480]
	057 Call 0x1C17CF4
	058 Move X0, 0xCCB000
	059 Move X0, [X0+496]
	060 Call 0x1C17CF4
	061 Move X0, 0xCCB000
	062 Move X0, [X0+504]
	063 Call 0x1C17CF4
	064 Move X0, 0xCD1000
	065 Move X0, [X0+928]
	066 Call 0x1C17CF4
	067 Move X0, 0xCCA000
	068 Move X0, [X0+2600]
	069 Call 0x1C17CF4
	070 Move X0, 0xCF1000
	071 Move X0, [X0+1232]
	072 Call 0x1C17CF4
	073 Move X0, 0xD03000
	074 Move X0, [X0+2048]
	075 Call 0x1C17CF4
	076 Move X0, 0xD03000
	077 Move X0, [X0+3936]
	078 Call 0x1C17CF4
	079 Move X0, 0xCD1000
	080 Move X0, [X0+1824]
	081 Call 0x1C17CF4
	082 Move X0, 0xD03000
	083 Move X0, [X0+2000]
	084 Call 0x1C17CF4
	085 Move X0, 0xD03000
	086 Move X0, [X0+3864]
	087 Call 0x1C17CF4
	088 Move X0, 0xD03000
	089 Move X0, [X0+2008]
	090 Call 0x1C17CF4
	091 Move X0, 0xCC8000
	092 Move X0, [X0+2440]
	093 Call 0x1C17CF4
	094 Move X0, 0xD03000
	095 Move X0, [X0+3872]
	096 Call 0x1C17CF4
	097 Move X0, 0xD03000
	098 Move X0, [X0+3984]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X20+1615], W8
	102 Move [X31+24], X31
	103 Move X27, 0xD03000
	104 Move W8, [X19]
	105 Move X27, [X27+1296]
	106 Compare W8, 0
	107 JumpIfEqual {412}
	108 Move X21, [X19+32]
	109 Compare X21, 0
	110 JumpIfEqual {503}
	111 Move X23, 0xCCA000
	112 Move X23, [X23+2600]
	113 Move X8, 0xD03000
	114 Move X0, [X23]
	115 Move X8, [X8+3984]
	116 Move X24, [X19+64]
	117 Move W9, [X0+224]
	118 Move X20, [X8]
	119 Compare W9, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X21
	123 Move X1, X31
	124 Call Uri.EscapeDataString, X0
	125 Compare X20, 0
	126 JumpIfEqual {521}
	127 Move X8, 0xD03000
	128 Move X8, [X8+2048]
	129 Move X2, X0
	130 Move X1, [X8]
	131 Move X0, X20
	132 Move X3, X31
	133 Call String.Replace, X0, X1, X2
	134 Move X8, 0xCC8000
	135 Move X8, [X8+2440]
	136 Move W9, [X19+40]
	137 Move X20, X0
	138 Move X21, [X8]
	139 Compare W9, 0
	140 JumpIfEqual {212}
	141 Move X8, 0xCC8000
	142 Move X8, [X8+2512]
	143 Move X0, [X8]
	144 Move W1, 4
	145 Call 0x1C17D6C
	146 Move X22, X0
	147 Compare X0, 0
	148 JumpIfEqual {531}
	149 Compare X21, 0
	150 JumpIfEqual {157}
	151 Move X8, [X22]
	152 Move X1, [X8+64]
	153 Move X0, X21
	154 Call 0x1C17E00
	155 Compare X0, 0
	156 JumpIfEqual {541}
	157 Move W8, [X22+24]
	158 Compare W8, 0
	159 JumpIfEqual {532}
	160 Move [X22+32], X21
	161 Move X21, 0xD03000
	162 Move X21, [X21+3864]
	163 Move X0, [X21]
	164 Compare X0, 0
	165 JumpIfEqual {172}
	166 Move X8, [X22]
	167 Move X1, [X8+64]
	168 Call 0x1C17E00
	169 Compare X0, 0
	170 JumpIfEqual {544}
	171 Move W8, [X22+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, [X21]
	174 Move X9, 0xCC9000
	175 Move [X22+40], X8
	176 Move X8, [X19+40]
	177 Move X9, [X9+1144]
	178 Move [X31+16], X8
	179 Move X0, [X9]
	180 Add X1, X31, 16
	181 Call 0x1C17E04
	182 Move X21, X0
	183 Compare X0, 0
	184 JumpIfEqual {191}
	185 Move X8, [X22]
	186 Move X1, [X8+64]
	187 Move X0, X21
	188 Call 0x1C17E00
	189 Compare X0, 0
	190 JumpIfEqual {547}
	191 Move W8, [X22+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X22+48], X21
	194 Move X21, 0xCD1000
	195 Move X21, [X21+1824]
	196 Move X0, [X21]
	197 Compare X0, 0
	198 JumpIfEqual {205}
	199 Move X8, [X22]
	200 Move X1, [X8+64]
	201 Call 0x1C17E00
	202 Compare X0, 0
	203 JumpIfEqual {550}
	204 Move W8, [X22+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X8, [X21]
	207 Move [X22+56], X8
	208 Move X0, X22
	209 Move X1, X31
	210 Call String.Concat, X0
	211 Move X21, X0
	212 Move W8, [X19+48]
	213 Compare W8, 0
	214 JumpIfEqual {286}
	215 Move X8, 0xCC8000
	216 Move X8, [X8+2512]
	217 Move X0, [X8]
	218 Move W1, 4
	219 Call 0x1C17D6C
	220 Move X22, X0
	221 Compare X0, 0
	222 JumpIfEqual {535}
	223 Compare X21, 0
	224 JumpIfEqual {231}
	225 Move X8, [X22]
	226 Move X1, [X8+64]
	227 Move X0, X21
	228 Call 0x1C17E00
	229 Compare X0, 0
	230 JumpIfEqual {553}
	231 Move W8, [X22+24]
	232 Compare W8, 0
	233 JumpIfEqual {537}
	234 Move [X22+32], X21
	235 Move X21, 0xD03000
	236 Move X21, [X21+3936]
	237 Move X0, [X21]
	238 Compare X0, 0
	239 JumpIfEqual {246}
	240 Move X8, [X22]
	241 Move X1, [X8+64]
	242 Call 0x1C17E00
	243 Compare X0, 0
	244 JumpIfEqual {556}
	245 Move W8, [X22+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X8, [X21]
	248 Move X9, 0xCC9000
	249 Move [X22+40], X8
	250 Move X8, [X19+48]
	251 Move X9, [X9+1144]
	252 Move [X31+16], X8
	253 Move X0, [X9]
	254 Add X1, X31, 16
	255 Call 0x1C17E04
	256 Move X21, X0
	257 Compare X0, 0
	258 JumpIfEqual {265}
	259 Move X8, [X22]
	260 Move X1, [X8+64]
	261 Move X0, X21
	262 Call 0x1C17E00
	263 Compare X0, 0
	264 JumpIfEqual {559}
	265 Move W8, [X22+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move [X22+48], X21
	268 Move X21, 0xCD1000
	269 Move X21, [X21+1824]
	270 Move X0, [X21]
	271 Compare X0, 0
	272 JumpIfEqual {279}
	273 Move X8, [X22]
	274 Move X1, [X8+64]
	275 Call 0x1C17E00
	276 Compare X0, 0
	277 JumpIfEqual {562}
	278 Move W8, [X22+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X8, [X21]
	281 Move [X22+56], X8
	282 Move X0, X22
	283 Move X1, X31
	284 Call String.Concat, X0
	285 Move X21, X0
	286 Move X22, [X19+56]
	287 Compare X22, 0
	288 JumpIfEqual {308}
	289 Move X0, [X23]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X0, X22
	295 Move X1, X31
	296 Call Uri.EscapeDataString, X0
	297 Move X8, 0xD03000
	298 Move X8, [X8+3872]
	299 Move X9, 0xCD1000
	300 Move X9, [X9+1824]
	301 Move X2, X0
	302 Move X1, [X8]
	303 Move X3, [X9]
	304 Move X0, X21
	305 Move X4, X31
	306 Call String.Concat, X0, X1, X2, X3
	307 Move X21, X0
	308 Compare X24, 0
	309 JumpIfEqual {522}
	310 Move X0, [X24+32]
	311 Compare X0, 0
	312 JumpIfEqual {523}
	313 Move X1, X31
	314 Call Uri.get_AbsolutePath, X0
	315 Move X8, 0xCD1000
	316 Move X8, [X8+2264]
	317 Move X22, X0
	318 Move X0, [X8]
	319 Move W1, 1
	320 Call 0x1C17D6C
	321 Move X1, X0
	322 Compare X1, 0
	323 JumpIfEqual {524}
	324 Move W8, [X1+24]
	325 Compare W8, 0
	326 JumpIfEqual {525}
	327 Move W8, 47
	328 NotImplemented "Instruction STRH not yet implemented."
	329 Compare X22, 0
	330 JumpIfEqual {526}
	331 Move X0, X22
	332 Move X2, X31
	333 Call String.TrimEnd, X0, X1
	334 Move X1, X20
	335 Move X2, X31
	336 Call String.Concat, X0, X1
	337 Move X8, 0xCD1000
	338 Move X8, [X8+928]
	339 Move X22, X0
	340 Move X23, [X24+32]
	341 Move X0, [X8]
	342 Call 0x1C17F10
	343 Move X20, X0
	344 Move X1, X23
	345 Move X2, X31
	346 Call UriBuilder..ctor, X0, X1
	347 Compare X20, 0
	348 JumpIfEqual {527}
	349 Move X0, X20
	350 Move X1, X22
	351 Move X2, X31
	352 Call UriBuilder.set_Path, X0, X1
	353 Move X0, X20
	354 Move X1, X21
	355 Move X2, X31
	356 Call UriBuilder.set_Query, X0, X1
	357 Move X0, X20
	358 Move X1, X31
	359 Call UriBuilder.get_Uri, X0
	360 Move X8, 0xCF1000
	361 Move X9, 0xCC9000
	362 Move X8, [X8+1232]
	363 Move X9, [X9+1744]
	364 Move X20, X0
	365 Move X21, [X8]
	366 Move X0, [X9]
	367 Call 0x1C17F10
	368 Move X8, 0xCC9000
	369 Move X8, [X8+1728]
	370 Move X22, X0
	371 Move X1, [X8]
	372 Call Dictionary`2<Object, Object>..ctor, X0
	373 Move X8, 0xD03000
	374 Move X8, [X8+2008]
	375 Move X1, [X19+72]
	376 Move X0, [X8]
	377 Move X2, X31
	378 Call String.Concat, X0, X1
	379 Compare X22, 0
	380 JumpIfEqual {528}
	381 Move X8, 0xD03000
	382 Move X8, [X8+2000]
	383 Move X9, 0xCC9000
	384 Move X9, [X9+2064]
	385 Move X2, X0
	386 Move X1, [X8]
	387 Move X3, [X9]
	388 Move X0, X22
	389 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	390 Move X23, [X24+16]
	391 Compare X23, 0
	392 JumpIfEqual {529}
	393 Move X10, 0xD02000
	394 Move X10, [X10+1976]
	395 Move X8, [X23]
	396 Move W25, [X24+24]
	397 Move X26, [X19+80]
	398 Move X24, [X19+88]
	399 Move X1, [X10]
	400 NotImplemented "Instruction LDRH not yet implemented."
	401 Compare X9, 0
	402 JumpIfEqual {409}
	403 Move X10, [X8+176]
	404 Add X10, X10, 8
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Subtract X9, X9, 1
	408 Add X10, X10, 16
	409 Move W2, 3
	410 Move X0, X23
	411 Call 0x1C5D788
	412 Move X8, [X19+96]
	413 Move TEMP, 0
	414 Not TEMP
	415 Move W9, TEMP
	416 Move [X31+24], X8
	417 Move [X19+96], X31
	418 Move [X19], W9
	419 Move W9, [X10]
	420 Add W9, W9, 3
	421 Add X8, X8, W9
	422 Add X0, X8, 312
	423 Move X8, [X0]
	424 Move X9, [X0+8]
	425 Move X0, X23
	426 Move X1, X21
	427 Move X2, X20
	428 Move X3, X22
	429 Move X4, X31
	430 Move W5, W25
	431 Move X6, X26
	432 Move X7, X24
	433 Move [X31], X9
	434 NotImplemented "Instruction BLR not yet implemented."
	435 Compare X0, 0
	436 JumpIfEqual {530}
	437 Move X8, 0xCCA000
	438 Move X8, [X8+504]
	439 Move X1, [X8]
	440 Call Task`1<Object>.GetAwaiter, X0
	441 Move X8, 0xCCA000
	442 Move X8, [X8+496]
	443 Move [X31+24], X0
	444 Move X1, [X8]
	445 Add X0, X31, 24
	446 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	447 Move TEMP, X0
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfNotEqual {476}
	451 Move X8, 0xCCA000
	452 Move X8, [X8+480]
	453 Add X0, X31, 24
	454 Move X1, [X8]
	455 Call TaskAwaiter`1<Object>.GetResult, X0
	456 Move X8, 0xD02000
	457 Move X8, [X8+3976]
	458 Move X1, [X8]
	459 Call JsonParser.FromJson, X0
	460 Move TEMP, 1
	461 Not TEMP
	462 Move W8, TEMP
	463 Move [X19+8], W8
	464 Move X20, X0
	465 Move X0, [X27]
	466 Move X21, 0xD02000
	467 Move W8, [X0+224]
	468 Move X21, [X21+3968]
	469 Compare W8, 0
	470 JumpIfNotEqual {472}
	471 Call 0x1C17DFC
	472 Move X2, [X21]
	473 Move X0, X19
	474 Move X1, X20
	475 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	476 Move [X19], W31
	477 Move X8, [X31+24]
	478 Move [X19+96], X8
	479 Move X0, [X27]
	480 Move W8, [X0+224]
	481 Compare W8, 0
	482 JumpIfNotEqual {484}
	483 Call 0x1C17DFC
	484 Move X8, 0xD02000
	485 Move X8, [X8+3960]
	486 Add X0, X19, 8
	487 Move X3, [X8]
	488 Add X1, X31, 24
	489 Move X2, X19
	490 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	491 Move X20, [X31+96]
	492 Move X19, [X31+104]
	493 Move X22, [X31+80]
	494 Move X21, [X31+88]
	495 Move X24, [X31+64]
	496 Move X23, [X31+72]
	497 Move X26, [X31+48]
	498 Move X25, [X31+56]
	499 Move X30, [X31+32]
	500 Move X27, [X31+40]
	501 Add X31, X31, 112
	502 Return 
	503 Move X0, 0xCCF000
	504 Move X0, [X0+1400]
	505 Call 0x1C17D08
	506 Call 0x1C17F10
	507 Move X20, X0
	508 Move X0, 0xD02000
	509 Move X0, [X0+2056]
	510 Call 0x1C17D08
	511 Move X1, X0
	512 Move X0, X20
	513 Move X2, X31
	514 Call ArgumentException..ctor, X0, X1
	515 Move X0, 0xD02000
	516 Move X0, [X0+3992]
	517 Call 0x1C17D08
	518 Move X1, X0
	519 Move X0, X20
	520 Call 0x1C17DEC
	521 Call 0x1C17F20
	522 Call 0x1C17F20
	523 Call 0x1C17F20
	524 Call 0x1C17F20
	525 Call 0x1C17F28
	526 Call 0x1C17F20
	527 Call 0x1C17F20
	528 Call 0x1C17F20
	529 Call 0x1C17F20
	530 Call 0x1C17F20
	531 Call 0x1C17F20
	532 Call 0x1C17F28
	533 Call 0x1C17F28
	534 Call 0x1C17F28
	535 Call 0x1C17F20
	536 Call 0x1C17F28
	537 Call 0x1C17F28
	538 Call 0x1C17F28
	539 Call 0x1C17F28
	540 Call 0x1C17F28
	541 Call 0x1C17F44
	542 Move X1, X31
	543 Call 0x1C17DEC
	544 Call 0x1C17F44
	545 Move X1, X31
	546 Call 0x1C17DEC
	547 Call 0x1C17F44
	548 Move X1, X31
	549 Call 0x1C17DEC
	550 Call 0x1C17F44
	551 Move X1, X31
	552 Call 0x1C17DEC
	553 Call 0x1C17F44
	554 Move X1, X31
	555 Call 0x1C17DEC
	556 Call 0x1C17F44
	557 Move X1, X31
	558 Call 0x1C17DEC
	559 Call 0x1C17F44
	560 Move X1, X31
	561 Call 0x1C17DEC
	562 Call 0x1C17F44
	563 Move X1, X31
	564 Call 0x1C17DEC
	565 Move X20, X0
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Move X0, X20
	568 Call 0x3EB2AD0
	569 Move X20, X0
	570 Move X0, 0xCC7000
	571 Move X0, [X0+2000]
	572 Call 0x1C17D08
	573 Move X8, [X20]
	574 Move X1, [X8]
	575 Call 0x1C18270
	576 Move TEMP, X0
	577 And TEMP, TEMP, 1
	578 Compare TEMP, 1
	579 JumpIfNotEqual {600}
	580 Move X20, [X20]
	581 Call 0x3EB2AE0
	582 Move TEMP, 1
	583 Not TEMP
	584 Move W8, TEMP
	585 Move [X19+8], W8
	586 Move X0, 0xD02000
	587 Move X0, [X0+1296]
	588 Call 0x1C17D08
	589 Move W8, [X0+224]
	590 Compare W8, 0
	591 JumpIfNotEqual {593}
	592 Call 0x1C17DFC
	593 Move X0, 0xD02000
	594 Move X0, [X0+4000]
	595 Call 0x1C17D08
	596 Move X2, X0
	597 Move X0, X19
	598 Move X1, X20
	599 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	600 Move W0, 8
	601 Call 0x3EB2AF0
	602 Move X8, [X20]
	603 Move [X0], X8
	604 Move X1, 0xA88000
	605 Add X1, X1, 3672
	606 Move X2, X31
	607 Call 0x3EB2B00
	608 Move X20, X0
	609 Call 0x3EB2AE0
	610 Move X0, X20
	611 Call 0x1D2D690
	612 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342D3D0 LDR X3, [X9]
	0x0342D3D4 MOV X0, X22
	0x0342D3D8 BL 0x2AA5098
	0x0342D3DC LDR X23, [X24 + 0x10]
	0x0342D3E0 CBZ X23, 0x342D61C
	0x0342D3E4 ADRP X10, 0xD01000
	0x0342D3E8 LDR X10, [X10 + 0x7B8]
	0x0342D3EC LDR X8, [X23]
	0x0342D3F0 LDR W25, [X24 + 0x18]
	0x0342D3F4 LDP X26, X24, [X19 + 0x58]
	0x0342D3F8 LDR X1, [X10]
	0x0342D3FC LDRH W9, [X8 + 0x12E]
	0x0342D400 CBZ X9, 0x342D424
	0x0342D404 LDR X10, [X8 + 0xB0]
	0x0342D408 ADD X10, X10, 0x8
	0x0342D40C LDUR X11, [X10 - 0x8]
	0x0342D410 CMP X11, X1
	0x0342D414 B.EQ 0x342D44C
	0x0342D418 SUBS X9, X9, 0x1
	0x0342D41C ADD X10, X10, 0x10
	0x0342D420 B.NE 0x342D40C
	0x0342D424 MOVZ W2, 0x3
	0x0342D428 MOV X0, X23
	0x0342D42C BL 0x1C5C788
	0x0342D430 B 0x342D45C
	0x0342D434 LDR X8, [X19 + 0x68]
	0x0342D438 MOVN W9, 0x0
	0x0342D43C STR X8, [X31 + 0x18]
	0x0342D440 STR X31, [X19 + 0x68]
	0x0342D444 STR W9, [X19]
	0x0342D448 B 0x342D4B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFB1000
	007 Move X21, 0xD02000
	008 Move W8, [X22+1616]
	009 Move X21, [X21+1296]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD02000
	017 Move X0, [X0+4008]
	018 Call 0x1C17CF4
	019 Move X0, 0xD02000
	020 Move X0, [X0+1296]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1616], W8
	024 Move X0, [X21]
	025 Move X21, 0xD02000
	026 Move W8, [X0+224]
	027 Move X21, [X21+4008]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

