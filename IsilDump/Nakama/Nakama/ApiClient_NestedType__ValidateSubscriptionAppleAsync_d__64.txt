Type: Nakama.ApiClient/<ValidateSubscriptionAppleAsync>d__64

Method: System.Void MoveNext()

Disassembly:
	0x0343D328 MOV X2, X20
	0x0343D32C MOV X3, X22
	0x0343D330 MOV X4, X23
	0x0343D334 MOV W5, W26
	0x0343D338 MOV X6, X27
	0x0343D33C MOV X7, X25
	0x0343D340 STR X9, [X31]
	0x0343D344 BLR X8
	0x0343D348 CBZ X0, 0x343D4E4
	0x0343D34C ADRP X8, 0xCB9000
	0x0343D350 LDR X8, [X8 + 0x1F8]
	0x0343D354 LDR X1, [X8]
	0x0343D358 BL 0x269F5D0
	0x0343D35C ADRP X8, 0xCB9000
	0x0343D360 LDR X8, [X8 + 0x1F0]
	0x0343D364 STR X0, [X31 + 0x18]
	0x0343D368 LDR X1, [X8]
	0x0343D36C ADD X0, X31, 0x18
	0x0343D370 BL 0x2677430
	0x0343D374 TBZ X0, 0x0, 0x343D3D4
	0x0343D378 ADRP X8, 0xCB9000
	0x0343D37C LDR X8, [X8 + 0x1E0]
	0x0343D380 ADD X0, X31, 0x18
	0x0343D384 LDR X1, [X8]
	0x0343D388 BL 0x2677474
	0x0343D38C ADRP X8, 0xCF2000
	0x0343D390 LDR X8, [X8 + 0x530]
	0x0343D394 LDR X1, [X8]
	0x0343D398 BL 0x220E6DC
	0x0343D39C MOVN W8, 0x1
	0x0343D3A0 STR W8, [X19], #0x8
	0x0343D3A4 MOV X20, X0
	0x0343D3A8 LDR X0, [X28]
	0x0343D3AC ADRP X21, 0xCF2000
	0x0343D3B0 LDR W8, [X0 + 0xE0]
	0x0343D3B4 LDR X21, [X21 + 0x528]
	0x0343D3B8 CBNZ W8, 0x343D3C0
	0x0343D3BC BL 0x1C16DFC
	0x0343D3C0 LDR X2, [X21]
	0x0343D3C4 MOV X0, X19
	0x0343D3C8 MOV X1, X20
	0x0343D3CC BL 0x26322B0
	0x0343D3D0 B 0x343D40C
	0x0343D3D4 STR W31, [X19]
	0x0343D3D8 LDR X8, [X31 + 0x18]
	0x0343D3DC STR X8, [X19 + 0x50]
	0x0343D3E0 LDR X0, [X28]
	0x0343D3E4 LDR W8, [X0 + 0xE0]
	0x0343D3E8 CBNZ W8, 0x343D3F0
	0x0343D3EC BL 0x1C16DFC
	0x0343D3F0 ADRP X8, 0xCF2000
	0x0343D3F4 LDR X8, [X8 + 0x520]
	0x0343D3F8 ADD X0, X19, 0x8
	0x0343D3FC LDR X3, [X8]
	0x0343D400 ADD X1, X31, 0x18
	0x0343D404 MOV X2, X19
	0x0343D408 BL 0x1FB6750
	0x0343D40C LDP X20, X19, [X31 + 0x60]
	0x0343D410 LDP X22, X21, [X31 + 0x50]
	0x0343D414 LDP X24, X23, [X31 + 0x40]
	0x0343D418 LDP X26, X25, [X31 + 0x30]
	0x0343D41C LDP X28, X27, [X31 + 0x20]
	0x0343D420 LDR X30, [X31 + 0x10]
	0x0343D424 ADD X31, X31, 0x70
	0x0343D428 RET
	0x0343D42C ADRP X0, 0xCBE000
	0x0343D430 LDR X0, [X0 + 0x578]
	0x0343D434 BL 0x1C16D08
	0x0343D438 BL 0x1C16F10
	0x0343D43C MOV X20, X0
	0x0343D440 ADRP X0, 0xCF1000
	0x0343D444 LDR X0, [X0 + 0xC30]
	0x0343D448 BL 0x1C16D08
	0x0343D44C MOV X1, X0
	0x0343D450 MOV X0, X20
	0x0343D454 MOV X2, X31
	0x0343D458 BL 0x3314A68
	0x0343D45C ADRP X0, 0xCF2000
	0x0343D460 LDR X0, [X0 + 0x538]
	0x0343D464 BL 0x1C16D08
	0x0343D468 MOV X1, X0
	0x0343D46C MOV X0, X20
	0x0343D470 BL 0x1C16DEC
	0x0343D474 ADRP X0, 0xCBE000
	0x0343D478 LDR X0, [X0 + 0x578]
	0x0343D47C BL 0x1C16D08
	0x0343D480 BL 0x1C16F10
	0x0343D484 MOV X20, X0
	0x0343D488 ADRP X0, 0xCF2000
	0x0343D48C LDR X0, [X0 + 0x540]
	0x0343D490 BL 0x1C16D08
	0x0343D494 MOV X1, X0
	0x0343D498 MOV X0, X20
	0x0343D49C MOV X2, X31
	0x0343D4A0 BL 0x3314A68
	0x0343D4A4 ADRP X0, 0xCF2000
	0x0343D4A8 LDR X0, [X0 + 0x538]
	0x0343D4AC BL 0x1C16D08
	0x0343D4B0 MOV X1, X0
	0x0343D4B4 MOV X0, X20
	0x0343D4B8 BL 0x1C16DEC
	0x0343D4BC BL 0x1C16F20
	0x0343D4C0 BL 0x1C16F20
	0x0343D4C4 BL 0x1C16F20
	0x0343D4C8 BL 0x1C16F20
	0x0343D4CC BL 0x1C16F28
	0x0343D4D0 BL 0x1C16F20
	0x0343D4D4 BL 0x1C16F20
	0x0343D4D8 BL 0x1C16F20
	0x0343D4DC BL 0x1C16F20
	0x0343D4E0 BL 0x1C16F20
	0x0343D4E4 BL 0x1C16F20
	0x0343D4E8 B 0x343D55C
	0x0343D4EC B 0x343D55C
	0x0343D4F0 B 0x343D55C
	0x0343D4F4 B 0x343D55C
	0x0343D4F8 B 0x343D55C
	0x0343D4FC B 0x343D55C
	0x0343D500 B 0x343D55C
	0x0343D504 B 0x343D55C
	0x0343D508 B 0x343D55C
	0x0343D50C B 0x343D55C
	0x0343D510 B 0x343D55C
	0x0343D514 B 0x343D55C
	0x0343D518 B 0x343D55C
	0x0343D51C B 0x343D55C
	0x0343D520 B 0x343D55C
	0x0343D524 B 0x343D55C
	0x0343D528 B 0x343D55C
	0x0343D52C B 0x343D55C
	0x0343D530 B 0x343D55C
	0x0343D534 B 0x343D55C
	0x0343D538 B 0x343D55C
	0x0343D53C B 0x343D55C
	0x0343D540 B 0x343D55C
	0x0343D544 B 0x343D55C
	0x0343D548 B 0x343D55C
	0x0343D54C B 0x343D55C
	0x0343D550 B 0x343D55C
	0x0343D554 B 0x343D55C
	0x0343D558 B 0x343D55C
	0x0343D55C MOV X20, X0
	0x0343D560 CMP W1, 0x1
	0x0343D564 B.NE 0x343D600
	0x0343D568 MOV X0, X20
	0x0343D56C BL 0x3EB1AD0
	0x0343D570 MOV X20, X0
	0x0343D574 ADRP X0, 0xCB6000
	0x0343D578 LDR X0, [X0 + 0x7D0]
	0x0343D57C BL 0x1C16D08
	0x0343D580 LDR X8, [X20]
	0x0343D584 LDR X1, [X8]
	0x0343D588 BL 0x1C17270
	0x0343D58C TBZ X0, 0x0, 0x343D5D8
	0x0343D590 LDR X20, [X20]
	0x0343D594 BL 0x3EB1AE0
	0x0343D598 MOVN W8, 0x1
	0x0343D59C STR W8, [X19], #0x8
	0x0343D5A0 ADRP X0, 0xCF1000
	0x0343D5A4 LDR X0, [X0 + 0x5F8]
	0x0343D5A8 BL 0x1C16D08
	0x0343D5AC LDR W8, [X0 + 0xE0]
	0x0343D5B0 CBNZ W8, 0x343D5B8
	0x0343D5B4 BL 0x1C16DFC
	0x0343D5B8 ADRP X0, 0xCF2000
	0x0343D5BC LDR X0, [X0 + 0x548]
	0x0343D5C0 BL 0x1C16D08
	0x0343D5C4 MOV X2, X0
	0x0343D5C8 MOV X0, X19
	0x0343D5CC MOV X1, X20
	0x0343D5D0 BL 0x26324C8
	0x0343D5D4 B 0x343D40C
	0x0343D5D8 MOVZ W0, 0x8
	0x0343D5DC BL 0x3EB1AF0
	0x0343D5E0 LDR X8, [X20]
	0x0343D5E4 STR X8, [X0]
	0x0343D5E8 ADRP X1, 0xA77000
	0x0343D5EC ADD X1, X1, 0xE58
	0x0343D5F0 MOV X2, X31
	0x0343D5F4 BL 0x3EB1B00
	0x0343D5F8 MOV X20, X0
	0x0343D5FC BL 0x3EB1AE0
	0x0343D600 MOV X0, X20
	0x0343D604 BL 0x1D2C690
	0x0343D608 BL 0x1990590
	0x0343D60C STR X30, [X31 - 0x30]!
	0x0343D610 STP X22, X21, [X31 + 0x10]
	0x0343D614 STP X20, X19, [X31 + 0x20]
	0x0343D618 ADRP X22, 0xFA0000
	0x0343D61C ADRP X21, 0xCF1000
	0x0343D620 LDRB W8, [X22 + 0x698]
	0x0343D624 LDR X21, [X21 + 0x5F8]
	0x0343D628 MOV X19, X1
	0x0343D62C MOV X20, X0
	0x0343D630 TBNZ X8, 0x0, 0x343D654
	0x0343D634 ADRP X0, 0xCF2000
	0x0343D638 LDR X0, [X0 + 0x550]
	0x0343D63C BL 0x1C16CF4
	0x0343D640 ADRP X0, 0xCF1000
	0x0343D644 LDR X0, [X0 + 0x5F8]
	0x0343D648 BL 0x1C16CF4
	0x0343D64C MOVZ W8, 0x1
	0x0343D650 STRB W8, [X22 + 0x698]
	0x0343D654 LDR X0, [X21]
	0x0343D658 ADRP X21, 0xCF2000
	0x0343D65C LDR W8, [X0 + 0xE0]
	0x0343D660 LDR X21, [X21 + 0x550]
	0x0343D664 CBNZ W8, 0x343D66C
	0x0343D668 BL 0x1C16DFC
	0x0343D66C LDR X2, [X21]
	0x0343D670 ADD X0, X20, 0x8
	0x0343D674 MOV X1, X19
	0x0343D678 LDP X20, X19, [X31 + 0x20]
	0x0343D67C LDP X22, X21, [X31 + 0x10]
	0x0343D680 LDR X30, [X31], #0x30
	0x0343D684 B 0x2632228
	0x0343D688 SUB X31, X31, 0x70
	0x0343D68C STR X30, [X31 + 0x10]
	0x0343D690 STP X28, X27, [X31 + 0x20]
	0x0343D694 STP X26, X25, [X31 + 0x30]
	0x0343D698 STP X24, X23, [X31 + 0x40]
	0x0343D69C STP X22, X21, [X31 + 0x50]
	0x0343D6A0 STP X20, X19, [X31 + 0x60]
	0x0343D6A4 ADRP X20, 0xFA0000
	0x0343D6A8 LDRB W8, [X20 + 0x699]
	0x0343D6AC MOV X19, X0
	0x0343D6B0 TBNZ X8, 0x0, 0x343D794
	0x0343D6B4 ADRP X0, 0xCF2000
	0x0343D6B8 LDR X0, [X0 + 0x558]
	0x0343D6BC BL 0x1C16CF4
	0x0343D6C0 ADRP X0, 0xCF2000
	0x0343D6C4 LDR X0, [X0 + 0x560]
	0x0343D6C8 BL 0x1C16CF4
	0x0343D6CC ADRP X0, 0xCF1000
	0x0343D6D0 LDR X0, [X0 + 0x6B8]
	0x0343D6D4 BL 0x1C16CF4
	0x0343D6D8 ADRP X0, 0xCBF000
	0x0343D6DC LDR X0, [X0 + 0x8D8]
	0x0343D6E0 BL 0x1C16CF4
	0x0343D6E4 ADRP X0, 0xCB7000
	0x0343D6E8 LDR X0, [X0 + 0x810]
	0x0343D6EC BL 0x1C16CF4
	0x0343D6F0 ADRP X0, 0xCB7000
	0x0343D6F4 LDR X0, [X0 + 0x6C0]
	0x0343D6F8 BL 0x1C16CF4
	0x0343D6FC ADRP X0, 0xCB7000
	0x0343D700 LDR X0, [X0 + 0x6D0]
	0x0343D704 BL 0x1C16CF4
	0x0343D708 ADRP X0, 0xCF1000
	0x0343D70C LDR X0, [X0 + 0x7B8]
	0x0343D710 BL 0x1C16CF4
	0x0343D714 ADRP X0, 0xCF2000
	0x0343D718 LDR X0, [X0 + 0x568]
	0x0343D71C BL 0x1C16CF4
	0x0343D720 ADRP X0, 0xCB9000
	0x0343D724 LDR X0, [X0 + 0x1E0]
	0x0343D728 BL 0x1C16CF4
	0x0343D72C ADRP X0, 0xCB9000
	0x0343D730 LDR X0, [X0 + 0x1F0]
	0x0343D734 BL 0x1C16CF4
	0x0343D738 ADRP X0, 0xCB9000
	0x0343D73C LDR X0, [X0 + 0x1F8]
	0x0343D740 BL 0x1C16CF4
	0x0343D744 ADRP X0, 0xCBF000
	0x0343D748 LDR X0, [X0 + 0x3A0]
	0x0343D74C BL 0x1C16CF4
	0x0343D750 ADRP X0, 0xCDF000
	0x0343D754 LDR X0, [X0 + 0x4E0]
	0x0343D758 BL 0x1C16CF4
	0x0343D75C ADRP X0, 0xCF1000
	0x0343D760 LDR X0, [X0 + 0x7D0]
	0x0343D764 BL 0x1C16CF4
	0x0343D768 ADRP X0, 0xCF1000
	0x0343D76C LDR X0, [X0 + 0x7D8]
	0x0343D770 BL 0x1C16CF4
	0x0343D774 ADRP X0, 0xCB6000
	0x0343D778 LDR X0, [X0 + 0x988]
	0x0343D77C BL 0x1C16CF4
	0x0343D780 ADRP X0, 0xCF2000
	0x0343D784 LDR X0, [X0 + 0x298]
	0x0343D788 BL 0x1C16CF4
	0x0343D78C MOVZ W8, 0x1
	0x0343D790 STRB W8, [X20 + 0x699]
	0x0343D794 STR X31, [X31 + 0x18]
	0x0343D798 ADRP X28, 0xCF1000
	0x0343D79C LDR W8, [X19]
	0x0343D7A0 LDR X28, [X28 + 0x6B8]
	0x0343D7A4 CBZ W8, 0x343D984
	0x0343D7A8 LDR X8, [X19 + 0x20]
	0x0343D7AC CBZ X8, 0x343DABC
	0x0343D7B0 LDR X25, [X19 + 0x28]
	0x0343D7B4 CBZ X25, 0x343DB04
	0x0343D7B8 LDR X0, [X25 + 0x20]
	0x0343D7BC CBZ X0, 0x343DB08
	0x0343D7C0 ADRP X8, 0xCF2000
	0x0343D7C4 ADRP X9, 0xCB6000
	0x0343D7C8 LDR X8, [X8 + 0x298]
	0x0343D7CC LDR X9, [X9 + 0x988]
	0x0343D7D0 LDR X21, [X8]
	0x0343D7D4 LDR X20, [X9]
	0x0343D7D8 MOV X1, X31
	0x0343D7DC BL 0x361B448
	0x0343D7E0 ADRP X8, 0xCBF000
	0x0343D7E4 LDR X8, [X8 + 0x8D8]
	0x0343D7E8 MOV X22, X0
	0x0343D7EC LDR X0, [X8]
	0x0343D7F0 MOVZ W1, 0x1
	0x0343D7F4 BL 0x1C16D6C
	0x0343D7F8 MOV X1, X0
	0x0343D7FC CBZ X1, 0x343DB0C
	0x0343D800 LDR W8, [X1 + 0x18]
	0x0343D804 CBZ W8, 0x343DB10
	0x0343D808 MOVZ W8, 0x2F
	0x0343D80C STRH W8, [X1 + 0x20]
	0x0343D810 CBZ X22, 0x343DB14
	0x0343D814 MOV X0, X22
	0x0343D818 MOV X2, X31
	0x0343D81C BL 0x322BC58
	0x0343D820 MOV X1, X21
	0x0343D824 MOV X2, X31
	0x0343D828 BL 0x321B938
	0x0343D82C ADRP X8, 0xCBF000
	0x0343D830 LDR X8, [X8 + 0x3A0]
	0x0343D834 MOV X22, X0
	0x0343D838 LDR X23, [X25 + 0x20]
	0x0343D83C LDR X0, [X8]
	0x0343D840 BL 0x1C16F10
	0x0343D844 MOV X21, X0
	0x0343D848 MOV X1, X23
	0x0343D84C MOV X2, X31
	0x0343D850 BL 0x36281F8
	0x0343D854 CBZ X21, 0x343DB18
	0x0343D858 MOV X0, X21
	0x0343D85C MOV X1, X22
	0x0343D860 MOV X2, X31
	0x0343D864 BL 0x36288CC
	0x0343D868 MOV X0, X21
	0x0343D86C MOV X1, X20
	0x0343D870 MOV X2, X31
	0x0343D874 BL 0x3628980
	0x0343D878 MOV X0, X21
	0x0343D87C MOV X1, X31
	0x0343D880 BL 0x3628A38
	0x0343D884 ADRP X8, 0xCDF000
	0x0343D888 ADRP X9, 0xCB7000
	0x0343D88C LDR X8, [X8 + 0x4E0]
	0x0343D890 LDR X9, [X9 + 0x6D0]
	0x0343D894 MOV X20, X0
	0x0343D898 LDR X21, [X8]
	0x0343D89C LDR X0, [X9]
	0x0343D8A0 BL 0x1C16F10
	0x0343D8A4 ADRP X8, 0xCB7000
	0x0343D8A8 LDR X8, [X8 + 0x6C0]
	0x0343D8AC MOV X22, X0
	0x0343D8B0 LDR X1, [X8]
	0x0343D8B4 BL 0x2AA4804
	0x0343D8B8 ADRP X8, 0xCF1000
	0x0343D8BC LDR X8, [X8 + 0x7D8]
	0x0343D8C0 LDR X1, [X19 + 0x30]
	0x0343D8C4 LDR X0, [X8]
	0x0343D8C8 MOV X2, X31
	0x0343D8CC BL 0x321B938
	0x0343D8D0 CBZ X22, 0x343DB1C
	0x0343D8D4 ADRP X8, 0xCF1000
	0x0343D8D8 LDR X8, [X8 + 0x7D0]
	0x0343D8DC ADRP X9, 0xCB7000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA1000
	014 Move W8, [X20+1683]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xCF3000
	021 Move X0, [X0+1232]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF3000
	024 Move X0, [X0+1240]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF2000
	027 Move X0, [X0+1416]
	028 Call 0x1C17CF4
	029 Move X0, 0xCC0000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCB8000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB8000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB8000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF2000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF3000
	045 Move X0, [X0+1248]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBA000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCBA000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCBA000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC0000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCE0000
	060 Move X0, [X0+1240]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF3000
	063 Move X0, [X0+1256]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF2000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xCF2000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xCB7000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1683], W8
	076 Move [X31+24], X31
	077 Move X28, 0xCF2000
	078 Move W8, [X19]
	079 Move X28, [X28+1416]
	080 Compare W8, 0
	081 JumpIfEqual {210}
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {302}
	085 Move X25, [X19+40]
	086 Compare X25, 0
	087 JumpIfEqual {320}
	088 Move X0, [X25+32]
	089 Compare X0, 0
	090 JumpIfEqual {321}
	091 Move X8, 0xCF3000
	092 Move X9, 0xCB7000
	093 Move X8, [X8+1256]
	094 Move X9, [X9+2440]
	095 Move X21, [X8]
	096 Move X20, [X9]
	097 Move X1, X31
	098 Call Uri.get_AbsolutePath, X0
	099 Move X8, 0xCC0000
	100 Move X8, [X8+2264]
	101 Move X22, X0
	102 Move X0, [X8]
	103 Move W1, 1
	104 Call 0x1C17D6C
	105 Move X1, X0
	106 Compare X1, 0
	107 JumpIfEqual {322}
	108 Move W8, [X1+24]
	109 Compare W8, 0
	110 JumpIfEqual {323}
	111 Move W8, 47
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Compare X22, 0
	114 JumpIfEqual {324}
	115 Move X0, X22
	116 Move X2, X31
	117 Call String.TrimEnd, X0, X1
	118 Move X1, X21
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X8, 0xCC0000
	122 Move X8, [X8+928]
	123 Move X22, X0
	124 Move X23, [X25+32]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move X1, X23
	129 Move X2, X31
	130 Call UriBuilder..ctor, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {325}
	133 Move X0, X21
	134 Move X1, X22
	135 Move X2, X31
	136 Call UriBuilder.set_Path, X0, X1
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Call UriBuilder.set_Query, X0, X1
	141 Move X0, X21
	142 Move X1, X31
	143 Call UriBuilder.get_Uri, X0
	144 Move X8, 0xCE0000
	145 Move X9, 0xCB8000
	146 Move X8, [X8+1240]
	147 Move X9, [X9+1744]
	148 Move X20, X0
	149 Move X21, [X8]
	150 Move X0, [X9]
	151 Call 0x1C17F10
	152 Move X8, 0xCB8000
	153 Move X8, [X8+1728]
	154 Move X22, X0
	155 Move X1, [X8]
	156 Call Dictionary`2<Object, Object>..ctor, X0
	157 Move X8, 0xCF2000
	158 Move X8, [X8+2008]
	159 Move X1, [X19+48]
	160 Move X0, [X8]
	161 Move X2, X31
	162 Call String.Concat, X0, X1
	163 Compare X22, 0
	164 JumpIfEqual {326}
	165 Move X8, 0xCF2000
	166 Move X8, [X8+2000]
	167 Move X9, 0xCB8000
	168 Move X9, [X9+2064]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X22
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X19+32]
	175 Move X1, X31
	176 Call JsonWriter.ToJson, X0
	177 Move X23, X0
	178 Move X0, X31
	179 Call Encoding.get_UTF8
	180 Compare X0, 0
	181 JumpIfEqual {327}
	182 Move X8, [X0]
	183 Move X9, [X8+616]
	184 Move X2, [X8+624]
	185 Move X1, X23
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X24, [X25+16]
	188 Compare X24, 0
	189 JumpIfEqual {328}
	190 Move X10, 0xCF2000
	191 Move X10, [X10+1976]
	192 Move X8, [X24]
	193 Move W26, [X25+24]
	194 Move X27, [X19+56]
	195 Move X25, [X19+64]
	196 Move X1, [X10]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X23, X0
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 3
	208 Move X0, X24
	209 Call 0x1C5D788
	210 Move X8, [X19+72]
	211 Move TEMP, 0
	212 Not TEMP
	213 Move W9, TEMP
	214 Move [X31+24], X8
	215 Move [X19+72], X31
	216 Move [X19], W9
	217 Move W9, [X10]
	218 Add W9, W9, 3
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X9, [X0+8]
	223 Move X0, X24
	224 Move X1, X21
	225 Move X2, X20
	226 Move X3, X22
	227 Move X4, X23
	228 Move W5, W26
	229 Move X6, X27
	230 Move X7, X25
	231 Move [X31], X9
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X0, 0
	234 JumpIfEqual {329}
	235 Move X8, 0xCBA000
	236 Move X8, [X8+504]
	237 Move X1, [X8]
	238 Call Task`1<Object>.GetAwaiter, X0
	239 Move X8, 0xCBA000
	240 Move X8, [X8+496]
	241 Move [X31+24], X0
	242 Move X1, [X8]
	243 Add X0, X31, 24
	244 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {274}
	249 Move X8, 0xCBA000
	250 Move X8, [X8+480]
	251 Add X0, X31, 24
	252 Move X1, [X8]
	253 Call TaskAwaiter`1<Object>.GetResult, X0
	254 Move X8, 0xCF3000
	255 Move X8, [X8+1248]
	256 Move X1, [X8]
	257 Call JsonParser.FromJson, X0
	258 Move TEMP, 1
	259 Not TEMP
	260 Move W8, TEMP
	261 Move [X19+8], W8
	262 Move X20, X0
	263 Move X0, [X28]
	264 Move X21, 0xCF3000
	265 Move W8, [X0+224]
	266 Move X21, [X21+1240]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X2, [X21]
	271 Move X0, X19
	272 Move X1, X20
	273 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	274 Move [X19], W31
	275 Move X8, [X31+24]
	276 Move [X19+72], X8
	277 Move X0, [X28]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, 0xCF3000
	283 Move X8, [X8+1232]
	284 Add X0, X19, 8
	285 Move X3, [X8]
	286 Add X1, X31, 24
	287 Move X2, X19
	288 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	289 Move X20, [X31+96]
	290 Move X19, [X31+104]
	291 Move X22, [X31+80]
	292 Move X21, [X31+88]
	293 Move X24, [X31+64]
	294 Move X23, [X31+72]
	295 Move X26, [X31+48]
	296 Move X25, [X31+56]
	297 Move X28, [X31+32]
	298 Move X27, [X31+40]
	299 Move X30, [X31+16]
	300 Add X31, X31, 112
	301 Return 
	302 Move X0, 0xCBF000
	303 Move X0, [X0+1400]
	304 Call 0x1C17D08
	305 Call 0x1C17F10
	306 Move X20, X0
	307 Move X0, 0xCF2000
	308 Move X0, [X0+3016]
	309 Call 0x1C17D08
	310 Move X1, X0
	311 Move X0, X20
	312 Move X2, X31
	313 Call ArgumentException..ctor, X0, X1
	314 Move X0, 0xCF3000
	315 Move X0, [X0+1264]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X0, X20
	319 Call 0x1C17DEC
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F28
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X20, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X20
	333 Call 0x3EB2AD0
	334 Move X20, X0
	335 Move X0, 0xCB7000
	336 Move X0, [X0+2000]
	337 Call 0x1C17D08
	338 Move X8, [X20]
	339 Move X1, [X8]
	340 Call 0x1C18270
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {365}
	345 Move X20, [X20]
	346 Call 0x3EB2AE0
	347 Move TEMP, 1
	348 Not TEMP
	349 Move W8, TEMP
	350 Move [X19+8], W8
	351 Move X0, 0xCF2000
	352 Move X0, [X0+1416]
	353 Call 0x1C17D08
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, 0xCF3000
	359 Move X0, [X0+1272]
	360 Call 0x1C17D08
	361 Move X2, X0
	362 Move X0, X19
	363 Move X1, X20
	364 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	365 Move W0, 8
	366 Call 0x3EB2AF0
	367 Move X8, [X20]
	368 Move [X0], X8
	369 Move X1, 0xA78000
	370 Add X1, X1, 3672
	371 Move X2, X31
	372 Call 0x3EB2B00
	373 Move X20, X0
	374 Call 0x3EB2AE0
	375 Move X0, X20
	376 Call 0x1D2D690
	377 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343D8E0 LDR X9, [X9 + 0x810]
	0x0343D8E4 MOV X2, X0
	0x0343D8E8 LDR X1, [X8]
	0x0343D8EC LDR X3, [X9]
	0x0343D8F0 MOV X0, X22
	0x0343D8F4 BL 0x2AA5098
	0x0343D8F8 LDR X0, [X19 + 0x20]
	0x0343D8FC MOV X1, X31
	0x0343D900 BL 0x3483BE4
	0x0343D904 MOV X23, X0
	0x0343D908 MOV X0, X31
	0x0343D90C BL 0x3241948
	0x0343D910 CBZ X0, 0x343DB20
	0x0343D914 LDR X8, [X0]
	0x0343D918 LDR X9, [X8 + 0x268]
	0x0343D91C LDR X2, [X8 + 0x270]
	0x0343D920 MOV X1, X23
	0x0343D924 BLR X9
	0x0343D928 LDR X24, [X25 + 0x10]
	0x0343D92C CBZ X24, 0x343DB24
	0x0343D930 ADRP X10, 0xCF1000
	0x0343D934 LDR X10, [X10 + 0x7B8]
	0x0343D938 LDR X8, [X24]
	0x0343D93C LDR W26, [X25 + 0x18]
	0x0343D940 LDP X27, X25, [X19 + 0x38]
	0x0343D944 LDR X1, [X10]
	0x0343D948 LDRH W9, [X8 + 0x12E]
	0x0343D94C MOV X23, X0
	0x0343D950 CBZ X9, 0x343D974
	0x0343D954 LDR X10, [X8 + 0xB0]
	0x0343D958 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA1000
	007 Move X21, 0xCF2000
	008 Move W8, [X22+1684]
	009 Move X21, [X21+1416]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF3000
	017 Move X0, [X0+1280]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF2000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1684], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF3000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1280]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

