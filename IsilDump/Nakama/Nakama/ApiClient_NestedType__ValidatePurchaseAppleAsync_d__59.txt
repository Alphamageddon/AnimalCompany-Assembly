Type: Nakama.ApiClient/<ValidatePurchaseAppleAsync>d__59

Method: System.Void MoveNext()

Disassembly:
	0x0343BA58 LDR X8, [X8 + 0x460]
	0x0343BA5C LDR X1, [X8]
	0x0343BA60 BL 0x220E6DC
	0x0343BA64 MOVN W8, 0x1
	0x0343BA68 STR W8, [X19], #0x8
	0x0343BA6C MOV X20, X0
	0x0343BA70 LDR X0, [X28]
	0x0343BA74 ADRP X21, 0xCF4000
	0x0343BA78 LDR W8, [X0 + 0xE0]
	0x0343BA7C LDR X21, [X21 + 0x458]
	0x0343BA80 CBNZ W8, 0x343BA88
	0x0343BA84 BL 0x1C16DFC
	0x0343BA88 LDR X2, [X21]
	0x0343BA8C MOV X0, X19
	0x0343BA90 MOV X1, X20
	0x0343BA94 BL 0x26322B0
	0x0343BA98 B 0x343BAD4
	0x0343BA9C STR W31, [X19]
	0x0343BAA0 LDR X8, [X31 + 0x18]
	0x0343BAA4 STR X8, [X19 + 0x48]
	0x0343BAA8 LDR X0, [X28]
	0x0343BAAC LDR W8, [X0 + 0xE0]
	0x0343BAB0 CBNZ W8, 0x343BAB8
	0x0343BAB4 BL 0x1C16DFC
	0x0343BAB8 ADRP X8, 0xCF4000
	0x0343BABC LDR X8, [X8 + 0x4A0]
	0x0343BAC0 ADD X0, X19, 0x8
	0x0343BAC4 LDR X3, [X8]
	0x0343BAC8 ADD X1, X31, 0x18
	0x0343BACC MOV X2, X19
	0x0343BAD0 BL 0x1FB5F00
	0x0343BAD4 LDP X20, X19, [X31 + 0x60]
	0x0343BAD8 LDP X22, X21, [X31 + 0x50]
	0x0343BADC LDP X24, X23, [X31 + 0x40]
	0x0343BAE0 LDP X26, X25, [X31 + 0x30]
	0x0343BAE4 LDP X28, X27, [X31 + 0x20]
	0x0343BAE8 LDR X30, [X31 + 0x10]
	0x0343BAEC ADD X31, X31, 0x70
	0x0343BAF0 RET
	0x0343BAF4 ADRP X0, 0xCC0000
	0x0343BAF8 LDR X0, [X0 + 0x578]
	0x0343BAFC BL 0x1C16D08
	0x0343BB00 BL 0x1C16F10
	0x0343BB04 MOV X20, X0
	0x0343BB08 ADRP X0, 0xCF3000
	0x0343BB0C LDR X0, [X0 + 0xBC8]
	0x0343BB10 BL 0x1C16D08
	0x0343BB14 MOV X1, X0
	0x0343BB18 MOV X0, X20
	0x0343BB1C MOV X2, X31
	0x0343BB20 BL 0x3314A68
	0x0343BB24 ADRP X0, 0xCF4000
	0x0343BB28 LDR X0, [X0 + 0x4B0]
	0x0343BB2C BL 0x1C16D08
	0x0343BB30 MOV X1, X0
	0x0343BB34 MOV X0, X20
	0x0343BB38 BL 0x1C16DEC
	0x0343BB3C BL 0x1C16F20
	0x0343BB40 BL 0x1C16F20
	0x0343BB44 BL 0x1C16F20
	0x0343BB48 BL 0x1C16F28
	0x0343BB4C BL 0x1C16F20
	0x0343BB50 BL 0x1C16F20
	0x0343BB54 BL 0x1C16F20
	0x0343BB58 BL 0x1C16F20
	0x0343BB5C BL 0x1C16F20
	0x0343BB60 BL 0x1C16F20
	0x0343BB64 B 0x343BBC8
	0x0343BB68 B 0x343BBC8
	0x0343BB6C B 0x343BBC8
	0x0343BB70 B 0x343BBC8
	0x0343BB74 B 0x343BBC8
	0x0343BB78 B 0x343BBC8
	0x0343BB7C B 0x343BBC8
	0x0343BB80 B 0x343BBC8
	0x0343BB84 B 0x343BBC8
	0x0343BB88 B 0x343BBC8
	0x0343BB8C B 0x343BBC8
	0x0343BB90 B 0x343BBC8
	0x0343BB94 B 0x343BBC8
	0x0343BB98 B 0x343BBC8
	0x0343BB9C B 0x343BBC8
	0x0343BBA0 B 0x343BBC8
	0x0343BBA4 B 0x343BBC8
	0x0343BBA8 B 0x343BBC8
	0x0343BBAC B 0x343BBC8
	0x0343BBB0 B 0x343BBC8
	0x0343BBB4 B 0x343BBC8
	0x0343BBB8 B 0x343BBC8
	0x0343BBBC B 0x343BBC8
	0x0343BBC0 B 0x343BBC8
	0x0343BBC4 B 0x343BBC8
	0x0343BBC8 MOV X20, X0
	0x0343BBCC CMP W1, 0x1
	0x0343BBD0 B.NE 0x343BC6C
	0x0343BBD4 MOV X0, X20
	0x0343BBD8 BL 0x3EB1AD0
	0x0343BBDC MOV X20, X0
	0x0343BBE0 ADRP X0, 0xCB8000
	0x0343BBE4 LDR X0, [X0 + 0x7D0]
	0x0343BBE8 BL 0x1C16D08
	0x0343BBEC LDR X8, [X20]
	0x0343BBF0 LDR X1, [X8]
	0x0343BBF4 BL 0x1C17270
	0x0343BBF8 TBZ X0, 0x0, 0x343BC44
	0x0343BBFC LDR X20, [X20]
	0x0343BC00 BL 0x3EB1AE0
	0x0343BC04 MOVN W8, 0x1
	0x0343BC08 STR W8, [X19], #0x8
	0x0343BC0C ADRP X0, 0xCF3000
	0x0343BC10 LDR X0, [X0 + 0x530]
	0x0343BC14 BL 0x1C16D08
	0x0343BC18 LDR W8, [X0 + 0xE0]
	0x0343BC1C CBNZ W8, 0x343BC24
	0x0343BC20 BL 0x1C16DFC
	0x0343BC24 ADRP X0, 0xCF4000
	0x0343BC28 LDR X0, [X0 + 0x478]
	0x0343BC2C BL 0x1C16D08
	0x0343BC30 MOV X2, X0
	0x0343BC34 MOV X0, X19
	0x0343BC38 MOV X1, X20
	0x0343BC3C BL 0x26324C8
	0x0343BC40 B 0x343BAD4
	0x0343BC44 MOVZ W0, 0x8
	0x0343BC48 BL 0x3EB1AF0
	0x0343BC4C LDR X8, [X20]
	0x0343BC50 STR X8, [X0]
	0x0343BC54 ADRP X1, 0xA79000
	0x0343BC58 ADD X1, X1, 0xE58
	0x0343BC5C MOV X2, X31
	0x0343BC60 BL 0x3EB1B00
	0x0343BC64 MOV X20, X0
	0x0343BC68 BL 0x3EB1AE0
	0x0343BC6C MOV X0, X20
	0x0343BC70 BL 0x1D2C690
	0x0343BC74 BL 0x1990590
	0x0343BC78 STR X30, [X31 - 0x30]!
	0x0343BC7C STP X22, X21, [X31 + 0x10]
	0x0343BC80 STP X20, X19, [X31 + 0x20]
	0x0343BC84 ADRP X22, 0xFA2000
	0x0343BC88 ADRP X21, 0xCF3000
	0x0343BC8C LDRB W8, [X22 + 0x690]
	0x0343BC90 LDR X21, [X21 + 0x530]
	0x0343BC94 MOV X19, X1
	0x0343BC98 MOV X20, X0
	0x0343BC9C TBNZ X8, 0x0, 0x343BCC0
	0x0343BCA0 ADRP X0, 0xCF4000
	0x0343BCA4 LDR X0, [X0 + 0x480]
	0x0343BCA8 BL 0x1C16CF4
	0x0343BCAC ADRP X0, 0xCF3000
	0x0343BCB0 LDR X0, [X0 + 0x530]
	0x0343BCB4 BL 0x1C16CF4
	0x0343BCB8 MOVZ W8, 0x1
	0x0343BCBC STRB W8, [X22 + 0x690]
	0x0343BCC0 LDR X0, [X21]
	0x0343BCC4 ADRP X21, 0xCF4000
	0x0343BCC8 LDR W8, [X0 + 0xE0]
	0x0343BCCC LDR X21, [X21 + 0x480]
	0x0343BCD0 CBNZ W8, 0x343BCD8
	0x0343BCD4 BL 0x1C16DFC
	0x0343BCD8 LDR X2, [X21]
	0x0343BCDC ADD X0, X20, 0x8
	0x0343BCE0 MOV X1, X19
	0x0343BCE4 LDP X20, X19, [X31 + 0x20]
	0x0343BCE8 LDP X22, X21, [X31 + 0x10]
	0x0343BCEC LDR X30, [X31], #0x30
	0x0343BCF0 B 0x2632228
	0x0343BCF4 SUB X31, X31, 0x70
	0x0343BCF8 STR X30, [X31 + 0x10]
	0x0343BCFC STP X28, X27, [X31 + 0x20]
	0x0343BD00 STP X26, X25, [X31 + 0x30]
	0x0343BD04 STP X24, X23, [X31 + 0x40]
	0x0343BD08 STP X22, X21, [X31 + 0x50]
	0x0343BD0C STP X20, X19, [X31 + 0x60]
	0x0343BD10 ADRP X20, 0xFA2000
	0x0343BD14 LDRB W8, [X20 + 0x691]
	0x0343BD18 MOV X19, X0
	0x0343BD1C TBNZ X8, 0x0, 0x343BE00
	0x0343BD20 ADRP X0, 0xCF4000
	0x0343BD24 LDR X0, [X0 + 0x4B8]
	0x0343BD28 BL 0x1C16CF4
	0x0343BD2C ADRP X0, 0xCF4000
	0x0343BD30 LDR X0, [X0 + 0x458]
	0x0343BD34 BL 0x1C16CF4
	0x0343BD38 ADRP X0, 0xCF3000
	0x0343BD3C LDR X0, [X0 + 0x530]
	0x0343BD40 BL 0x1C16CF4
	0x0343BD44 ADRP X0, 0xCC1000
	0x0343BD48 LDR X0, [X0 + 0x8D8]
	0x0343BD4C BL 0x1C16CF4
	0x0343BD50 ADRP X0, 0xCB9000
	0x0343BD54 LDR X0, [X0 + 0x810]
	0x0343BD58 BL 0x1C16CF4
	0x0343BD5C ADRP X0, 0xCB9000
	0x0343BD60 LDR X0, [X0 + 0x6C0]
	0x0343BD64 BL 0x1C16CF4
	0x0343BD68 ADRP X0, 0xCB9000
	0x0343BD6C LDR X0, [X0 + 0x6D0]
	0x0343BD70 BL 0x1C16CF4
	0x0343BD74 ADRP X0, 0xCF3000
	0x0343BD78 LDR X0, [X0 + 0x7B8]
	0x0343BD7C BL 0x1C16CF4
	0x0343BD80 ADRP X0, 0xCF4000
	0x0343BD84 LDR X0, [X0 + 0x460]
	0x0343BD88 BL 0x1C16CF4
	0x0343BD8C ADRP X0, 0xCBB000
	0x0343BD90 LDR X0, [X0 + 0x1E0]
	0x0343BD94 BL 0x1C16CF4
	0x0343BD98 ADRP X0, 0xCBB000
	0x0343BD9C LDR X0, [X0 + 0x1F0]
	0x0343BDA0 BL 0x1C16CF4
	0x0343BDA4 ADRP X0, 0xCBB000
	0x0343BDA8 LDR X0, [X0 + 0x1F8]
	0x0343BDAC BL 0x1C16CF4
	0x0343BDB0 ADRP X0, 0xCC1000
	0x0343BDB4 LDR X0, [X0 + 0x3A0]
	0x0343BDB8 BL 0x1C16CF4
	0x0343BDBC ADRP X0, 0xCE1000
	0x0343BDC0 LDR X0, [X0 + 0x4D8]
	0x0343BDC4 BL 0x1C16CF4
	0x0343BDC8 ADRP X0, 0xCF3000
	0x0343BDCC LDR X0, [X0 + 0x7D0]
	0x0343BDD0 BL 0x1C16CF4
	0x0343BDD4 ADRP X0, 0xCF4000
	0x0343BDD8 LDR X0, [X0 + 0x4C0]
	0x0343BDDC BL 0x1C16CF4
	0x0343BDE0 ADRP X0, 0xCF3000
	0x0343BDE4 LDR X0, [X0 + 0x7D8]
	0x0343BDE8 BL 0x1C16CF4
	0x0343BDEC ADRP X0, 0xCB8000
	0x0343BDF0 LDR X0, [X0 + 0x988]
	0x0343BDF4 BL 0x1C16CF4
	0x0343BDF8 MOVZ W8, 0x1
	0x0343BDFC STRB W8, [X20 + 0x691]
	0x0343BE00 STR X31, [X31 + 0x18]
	0x0343BE04 ADRP X28, 0xCF3000
	0x0343BE08 LDR W8, [X19]
	0x0343BE0C LDR X28, [X28 + 0x530]
	0x0343BE10 CBZ W8, 0x343BFF0
	0x0343BE14 LDR X8, [X19 + 0x20]
	0x0343BE18 CBZ X8, 0x343C128
	0x0343BE1C LDR X25, [X19 + 0x28]
	0x0343BE20 CBZ X25, 0x343C170
	0x0343BE24 LDR X0, [X25 + 0x20]
	0x0343BE28 CBZ X0, 0x343C174
	0x0343BE2C ADRP X8, 0xCF4000
	0x0343BE30 ADRP X9, 0xCB8000
	0x0343BE34 LDR X8, [X8 + 0x4C0]
	0x0343BE38 LDR X9, [X9 + 0x988]
	0x0343BE3C LDR X21, [X8]
	0x0343BE40 LDR X20, [X9]
	0x0343BE44 MOV X1, X31
	0x0343BE48 BL 0x361B448
	0x0343BE4C ADRP X8, 0xCC1000
	0x0343BE50 LDR X8, [X8 + 0x8D8]
	0x0343BE54 MOV X22, X0
	0x0343BE58 LDR X0, [X8]
	0x0343BE5C MOVZ W1, 0x1
	0x0343BE60 BL 0x1C16D6C
	0x0343BE64 MOV X1, X0
	0x0343BE68 CBZ X1, 0x343C178
	0x0343BE6C LDR W8, [X1 + 0x18]
	0x0343BE70 CBZ W8, 0x343C17C
	0x0343BE74 MOVZ W8, 0x2F
	0x0343BE78 STRH W8, [X1 + 0x20]
	0x0343BE7C CBZ X22, 0x343C180
	0x0343BE80 MOV X0, X22
	0x0343BE84 MOV X2, X31
	0x0343BE88 BL 0x322BC58
	0x0343BE8C MOV X1, X21
	0x0343BE90 MOV X2, X31
	0x0343BE94 BL 0x321B938
	0x0343BE98 ADRP X8, 0xCC1000
	0x0343BE9C LDR X8, [X8 + 0x3A0]
	0x0343BEA0 MOV X22, X0
	0x0343BEA4 LDR X23, [X25 + 0x20]
	0x0343BEA8 LDR X0, [X8]
	0x0343BEAC BL 0x1C16F10
	0x0343BEB0 MOV X21, X0
	0x0343BEB4 MOV X1, X23
	0x0343BEB8 MOV X2, X31
	0x0343BEBC BL 0x36281F8
	0x0343BEC0 CBZ X21, 0x343C184
	0x0343BEC4 MOV X0, X21
	0x0343BEC8 MOV X1, X22
	0x0343BECC MOV X2, X31
	0x0343BED0 BL 0x36288CC
	0x0343BED4 MOV X0, X21
	0x0343BED8 MOV X1, X20
	0x0343BEDC MOV X2, X31
	0x0343BEE0 BL 0x3628980
	0x0343BEE4 MOV X0, X21
	0x0343BEE8 MOV X1, X31
	0x0343BEEC BL 0x3628A38
	0x0343BEF0 ADRP X8, 0xCE1000
	0x0343BEF4 ADRP X9, 0xCB9000
	0x0343BEF8 LDR X8, [X8 + 0x4D8]
	0x0343BEFC LDR X9, [X9 + 0x6D0]
	0x0343BF00 MOV X20, X0
	0x0343BF04 LDR X21, [X8]
	0x0343BF08 LDR X0, [X9]
	0x0343BF0C BL 0x1C16F10
	0x0343BF10 ADRP X8, 0xCB9000
	0x0343BF14 LDR X8, [X8 + 0x6C0]
	0x0343BF18 MOV X22, X0
	0x0343BF1C LDR X1, [X8]
	0x0343BF20 BL 0x2AA4804
	0x0343BF24 ADRP X8, 0xCF3000
	0x0343BF28 LDR X8, [X8 + 0x7D8]
	0x0343BF2C LDR X1, [X19 + 0x30]
	0x0343BF30 LDR X0, [X8]
	0x0343BF34 MOV X2, X31
	0x0343BF38 BL 0x321B938
	0x0343BF3C CBZ X22, 0x343C188
	0x0343BF40 ADRP X8, 0xCF3000
	0x0343BF44 LDR X8, [X8 + 0x7D0]
	0x0343BF48 ADRP X9, 0xCB9000
	0x0343BF4C LDR X9, [X9 + 0x810]
	0x0343BF50 MOV X2, X0
	0x0343BF54 LDR X1, [X8]
	0x0343BF58 LDR X3, [X9]
	0x0343BF5C MOV X0, X22
	0x0343BF60 BL 0x2AA5098
	0x0343BF64 LDR X0, [X19 + 0x20]
	0x0343BF68 MOV X1, X31
	0x0343BF6C BL 0x3483BE4
	0x0343BF70 MOV X23, X0
	0x0343BF74 MOV X0, X31
	0x0343BF78 BL 0x3241948
	0x0343BF7C CBZ X0, 0x343C18C
	0x0343BF80 LDR X8, [X0]
	0x0343BF84 LDR X9, [X8 + 0x268]
	0x0343BF88 LDR X2, [X8 + 0x270]
	0x0343BF8C MOV X1, X23
	0x0343BF90 BLR X9
	0x0343BF94 LDR X24, [X25 + 0x10]
	0x0343BF98 CBZ X24, 0x343C190
	0x0343BF9C ADRP X10, 0xCF3000
	0x0343BFA0 LDR X10, [X10 + 0x7B8]
	0x0343BFA4 LDR X8, [X24]
	0x0343BFA8 LDR W26, [X25 + 0x18]
	0x0343BFAC LDP X27, X25, [X19 + 0x38]
	0x0343BFB0 LDR X1, [X10]
	0x0343BFB4 LDRH W9, [X8 + 0x12E]
	0x0343BFB8 MOV X23, X0
	0x0343BFBC CBZ X9, 0x343BFE0
	0x0343BFC0 LDR X10, [X8 + 0xB0]
	0x0343BFC4 ADD X10, X10, 0x8
	0x0343BFC8 LDUR X11, [X10 - 0x8]
	0x0343BFCC CMP X11, X1
	0x0343BFD0 B.EQ 0x343C008
	0x0343BFD4 SUBS X9, X9, 0x1
	0x0343BFD8 ADD X10, X10, 0x10
	0x0343BFDC B.NE 0x343BFC8
	0x0343BFE0 MOVZ W2, 0x3
	0x0343BFE4 MOV X0, X24
	0x0343BFE8 BL 0x1C5C788
	0x0343BFEC B 0x343C018
	0x0343BFF0 LDR X8, [X19 + 0x48]
	0x0343BFF4 MOVN W9, 0x0
	0x0343BFF8 STR X8, [X31 + 0x18]
	0x0343BFFC STR X31, [X19 + 0x48]
	0x0343C000 STR W9, [X19]
	0x0343C004 B 0x343C074
	0x0343C008 LDR W9, [X10]
	0x0343C00C ADD W9, W9, 0x3

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA3000
	014 Move W8, [X20+1675]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xCF5000
	021 Move X0, [X0+1104]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF5000
	024 Move X0, [X0+1112]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF4000
	027 Move X0, [X0+1328]
	028 Call 0x1C17CF4
	029 Move X0, 0xCC2000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBA000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBA000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCBA000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF4000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF5000
	045 Move X0, [X0+1120]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBC000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCBC000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCBC000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC2000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCE2000
	060 Move X0, [X0+1240]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF4000
	063 Move X0, [X0+2000]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF4000
	066 Move X0, [X0+2008]
	067 Call 0x1C17CF4
	068 Move X0, 0xCF5000
	069 Move X0, [X0+1128]
	070 Call 0x1C17CF4
	071 Move X0, 0xCB9000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1675], W8
	076 Move [X31+24], X31
	077 Move X28, 0xCF4000
	078 Move W8, [X19]
	079 Move X28, [X28+1328]
	080 Compare W8, 0
	081 JumpIfEqual {210}
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {302}
	085 Move X25, [X19+40]
	086 Compare X25, 0
	087 JumpIfEqual {320}
	088 Move X0, [X25+32]
	089 Compare X0, 0
	090 JumpIfEqual {321}
	091 Move X8, 0xCF5000
	092 Move X9, 0xCB9000
	093 Move X8, [X8+1128]
	094 Move X9, [X9+2440]
	095 Move X21, [X8]
	096 Move X20, [X9]
	097 Move X1, X31
	098 Call Uri.get_AbsolutePath, X0
	099 Move X8, 0xCC2000
	100 Move X8, [X8+2264]
	101 Move X22, X0
	102 Move X0, [X8]
	103 Move W1, 1
	104 Call 0x1C17D6C
	105 Move X1, X0
	106 Compare X1, 0
	107 JumpIfEqual {322}
	108 Move W8, [X1+24]
	109 Compare W8, 0
	110 JumpIfEqual {323}
	111 Move W8, 47
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Compare X22, 0
	114 JumpIfEqual {324}
	115 Move X0, X22
	116 Move X2, X31
	117 Call String.TrimEnd, X0, X1
	118 Move X1, X21
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X8, 0xCC2000
	122 Move X8, [X8+928]
	123 Move X22, X0
	124 Move X23, [X25+32]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move X1, X23
	129 Move X2, X31
	130 Call UriBuilder..ctor, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {325}
	133 Move X0, X21
	134 Move X1, X22
	135 Move X2, X31
	136 Call UriBuilder.set_Path, X0, X1
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Call UriBuilder.set_Query, X0, X1
	141 Move X0, X21
	142 Move X1, X31
	143 Call UriBuilder.get_Uri, X0
	144 Move X8, 0xCE2000
	145 Move X9, 0xCBA000
	146 Move X8, [X8+1240]
	147 Move X9, [X9+1744]
	148 Move X20, X0
	149 Move X21, [X8]
	150 Move X0, [X9]
	151 Call 0x1C17F10
	152 Move X8, 0xCBA000
	153 Move X8, [X8+1728]
	154 Move X22, X0
	155 Move X1, [X8]
	156 Call Dictionary`2<Object, Object>..ctor, X0
	157 Move X8, 0xCF4000
	158 Move X8, [X8+2008]
	159 Move X1, [X19+48]
	160 Move X0, [X8]
	161 Move X2, X31
	162 Call String.Concat, X0, X1
	163 Compare X22, 0
	164 JumpIfEqual {326}
	165 Move X8, 0xCF4000
	166 Move X8, [X8+2000]
	167 Move X9, 0xCBA000
	168 Move X9, [X9+2064]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X22
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X19+32]
	175 Move X1, X31
	176 Call JsonWriter.ToJson, X0
	177 Move X23, X0
	178 Move X0, X31
	179 Call Encoding.get_UTF8
	180 Compare X0, 0
	181 JumpIfEqual {327}
	182 Move X8, [X0]
	183 Move X9, [X8+616]
	184 Move X2, [X8+624]
	185 Move X1, X23
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X24, [X25+16]
	188 Compare X24, 0
	189 JumpIfEqual {328}
	190 Move X10, 0xCF4000
	191 Move X10, [X10+1976]
	192 Move X8, [X24]
	193 Move W26, [X25+24]
	194 Move X27, [X19+56]
	195 Move X25, [X19+64]
	196 Move X1, [X10]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X23, X0
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 3
	208 Move X0, X24
	209 Call 0x1C5D788
	210 Move X8, [X19+72]
	211 Move TEMP, 0
	212 Not TEMP
	213 Move W9, TEMP
	214 Move [X31+24], X8
	215 Move [X19+72], X31
	216 Move [X19], W9
	217 Move W9, [X10]
	218 Add W9, W9, 3
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X9, [X0+8]
	223 Move X0, X24
	224 Move X1, X21
	225 Move X2, X20
	226 Move X3, X22
	227 Move X4, X23
	228 Move W5, W26
	229 Move X6, X27
	230 Move X7, X25
	231 Move [X31], X9
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X0, 0
	234 JumpIfEqual {329}
	235 Move X8, 0xCBC000
	236 Move X8, [X8+504]
	237 Move X1, [X8]
	238 Call Task`1<Object>.GetAwaiter, X0
	239 Move X8, 0xCBC000
	240 Move X8, [X8+496]
	241 Move [X31+24], X0
	242 Move X1, [X8]
	243 Add X0, X31, 24
	244 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {274}
	249 Move X8, 0xCBC000
	250 Move X8, [X8+480]
	251 Add X0, X31, 24
	252 Move X1, [X8]
	253 Call TaskAwaiter`1<Object>.GetResult, X0
	254 Move X8, 0xCF5000
	255 Move X8, [X8+1120]
	256 Move X1, [X8]
	257 Call JsonParser.FromJson, X0
	258 Move TEMP, 1
	259 Not TEMP
	260 Move W8, TEMP
	261 Move [X19+8], W8
	262 Move X20, X0
	263 Move X0, [X28]
	264 Move X21, 0xCF5000
	265 Move W8, [X0+224]
	266 Move X21, [X21+1112]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X2, [X21]
	271 Move X0, X19
	272 Move X1, X20
	273 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	274 Move [X19], W31
	275 Move X8, [X31+24]
	276 Move [X19+72], X8
	277 Move X0, [X28]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, 0xCF5000
	283 Move X8, [X8+1104]
	284 Add X0, X19, 8
	285 Move X3, [X8]
	286 Add X1, X31, 24
	287 Move X2, X19
	288 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	289 Move X20, [X31+96]
	290 Move X19, [X31+104]
	291 Move X22, [X31+80]
	292 Move X21, [X31+88]
	293 Move X24, [X31+64]
	294 Move X23, [X31+72]
	295 Move X26, [X31+48]
	296 Move X25, [X31+56]
	297 Move X28, [X31+32]
	298 Move X27, [X31+40]
	299 Move X30, [X31+16]
	300 Add X31, X31, 112
	301 Return 
	302 Move X0, 0xCC1000
	303 Move X0, [X0+1400]
	304 Call 0x1C17D08
	305 Call 0x1C17F10
	306 Move X20, X0
	307 Move X0, 0xCF4000
	308 Move X0, [X0+3016]
	309 Call 0x1C17D08
	310 Move X1, X0
	311 Move X0, X20
	312 Move X2, X31
	313 Call ArgumentException..ctor, X0, X1
	314 Move X0, 0xCF5000
	315 Move X0, [X0+1136]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X0, X20
	319 Call 0x1C17DEC
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F28
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X20, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X20
	333 Call 0x3EB2AD0
	334 Move X20, X0
	335 Move X0, 0xCB9000
	336 Move X0, [X0+2000]
	337 Call 0x1C17D08
	338 Move X8, [X20]
	339 Move X1, [X8]
	340 Call 0x1C18270
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {365}
	345 Move X20, [X20]
	346 Call 0x3EB2AE0
	347 Move TEMP, 1
	348 Not TEMP
	349 Move W8, TEMP
	350 Move [X19+8], W8
	351 Move X0, 0xCF4000
	352 Move X0, [X0+1328]
	353 Call 0x1C17D08
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, 0xCF5000
	359 Move X0, [X0+1144]
	360 Call 0x1C17D08
	361 Move X2, X0
	362 Move X0, X19
	363 Move X1, X20
	364 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	365 Move W0, 8
	366 Call 0x3EB2AF0
	367 Move X8, [X20]
	368 Move [X0], X8
	369 Move X1, 0xA7A000
	370 Add X1, X1, 3672
	371 Move X2, X31
	372 Call 0x3EB2B00
	373 Move X20, X0
	374 Call 0x3EB2AE0
	375 Move X0, X20
	376 Call 0x1D2D690
	377 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343C010 ADD X8, X8, W9, 0x4, SXTW
	0x0343C014 ADD X0, X8, 0x138
	0x0343C018 LDP X8, X9, [X0]
	0x0343C01C MOV X0, X24
	0x0343C020 MOV X1, X21
	0x0343C024 MOV X2, X20
	0x0343C028 MOV X3, X22
	0x0343C02C MOV X4, X23
	0x0343C030 MOV W5, W26
	0x0343C034 MOV X6, X27
	0x0343C038 MOV X7, X25
	0x0343C03C STR X9, [X31]
	0x0343C040 BLR X8
	0x0343C044 CBZ X0, 0x343C194
	0x0343C048 ADRP X8, 0xCBA000
	0x0343C04C LDR X8, [X8 + 0x1F8]
	0x0343C050 LDR X1, [X8]
	0x0343C054 BL 0x269F5D0
	0x0343C058 ADRP X8, 0xCBA000
	0x0343C05C LDR X8, [X8 + 0x1F0]
	0x0343C060 STR X0, [X31 + 0x18]
	0x0343C064 LDR X1, [X8]
	0x0343C068 ADD X0, X31, 0x18
	0x0343C06C BL 0x2677430
	0x0343C070 TBZ X0, 0x0, 0x343C0D0
	0x0343C074 ADRP X8, 0xCBA000
	0x0343C078 LDR X8, [X8 + 0x1E0]
	0x0343C07C ADD X0, X31, 0x18
	0x0343C080 LDR X1, [X8]
	0x0343C084 BL 0x2677474
	0x0343C088 ADRP X8, 0xCF3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA2000
	007 Move X21, 0xCF3000
	008 Move W8, [X22+1676]
	009 Move X21, [X21+1328]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF4000
	017 Move X0, [X0+1152]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF3000
	020 Move X0, [X0+1328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1676], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF4000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1152]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

