Type: Nakama.ApiClient/<ListTournamentRecordsAroundOwnerAsync>d__88

Method: System.Void MoveNext()

Disassembly:
	0x03431F6C BL 0x36281F8
	0x03431F70 CBZ X20, 0x34321F8
	0x03431F74 MOV X0, X20
	0x03431F78 MOV X1, X22
	0x03431F7C MOV X2, X31
	0x03431F80 BL 0x36288CC
	0x03431F84 MOV X0, X20
	0x03431F88 MOV X1, X21
	0x03431F8C MOV X2, X31
	0x03431F90 BL 0x3628980
	0x03431F94 MOV X0, X20
	0x03431F98 MOV X1, X31
	0x03431F9C BL 0x3628A38
	0x03431FA0 ADRP X8, 0xCEB000
	0x03431FA4 ADRP X9, 0xCC3000
	0x03431FA8 LDR X8, [X8 + 0x4D0]
	0x03431FAC LDR X9, [X9 + 0x6D0]
	0x03431FB0 MOV X20, X0
	0x03431FB4 LDR X21, [X8]
	0x03431FB8 LDR X0, [X9]
	0x03431FBC BL 0x1C16F10
	0x03431FC0 ADRP X8, 0xCC3000
	0x03431FC4 LDR X8, [X8 + 0x6C0]
	0x03431FC8 MOV X22, X0
	0x03431FCC LDR X1, [X8]
	0x03431FD0 BL 0x2AA4804
	0x03431FD4 ADRP X8, 0xCFD000
	0x03431FD8 LDR X1, [X19 + 0x50]
	0x03431FDC LDR X8, [X8 + 0x7D8]
	0x03431FE0 LDR X0, [X8]
	0x03431FE4 MOV X2, X31
	0x03431FE8 BL 0x321B938
	0x03431FEC CBZ X22, 0x34321FC
	0x03431FF0 ADRP X8, 0xCFD000
	0x03431FF4 LDR X8, [X8 + 0x7D0]
	0x03431FF8 ADRP X9, 0xCC3000
	0x03431FFC LDR X9, [X9 + 0x810]
	0x03432000 MOV X2, X0
	0x03432004 LDR X1, [X8]
	0x03432008 LDR X3, [X9]
	0x0343200C MOV X0, X22
	0x03432010 BL 0x2AA5098
	0x03432014 LDR X24, [X25 + 0x10]
	0x03432018 CBZ X24, 0x3432200
	0x0343201C ADRP X10, 0xCFC000
	0x03432020 LDR W23, [X25 + 0x18]
	0x03432024 LDR X8, [X24]
	0x03432028 LDP X26, X25, [X19 + 0x58]
	0x0343202C LDR X10, [X10 + 0x7B8]
	0x03432030 LDRH W9, [X8 + 0x12E]
	0x03432034 LDR X1, [X10]
	0x03432038 CBZ X9, 0x343205C
	0x0343203C LDR X10, [X8 + 0xB0]
	0x03432040 ADD X10, X10, 0x8
	0x03432044 LDUR X11, [X10 - 0x8]
	0x03432048 CMP X11, X1
	0x0343204C B.EQ 0x343206C
	0x03432050 SUBS X9, X9, 0x1
	0x03432054 ADD X10, X10, 0x10
	0x03432058 B.NE 0x3432044
	0x0343205C MOVZ W2, 0x3
	0x03432060 MOV X0, X24
	0x03432064 BL 0x1C5C788
	0x03432068 B 0x343207C
	0x0343206C LDR W9, [X10]
	0x03432070 ADD W9, W9, 0x3
	0x03432074 ADD X8, X8, W9, 0x4, SXTW
	0x03432078 ADD X0, X8, 0x138
	0x0343207C LDP X8, X9, [X0]
	0x03432080 MOV X0, X24
	0x03432084 MOV X1, X21
	0x03432088 MOV X2, X20
	0x0343208C MOV X3, X22
	0x03432090 MOV X4, X31
	0x03432094 MOV W5, W23
	0x03432098 MOV X6, X26
	0x0343209C MOV X7, X25
	0x034320A0 STR X9, [X31]
	0x034320A4 BLR X8
	0x034320A8 CBZ X0, 0x3432204
	0x034320AC ADRP X8, 0xCC4000
	0x034320B0 LDR X8, [X8 + 0x1F8]
	0x034320B4 LDR X1, [X8]
	0x034320B8 BL 0x269F5D0
	0x034320BC ADRP X8, 0xCC4000
	0x034320C0 LDR X8, [X8 + 0x1F0]
	0x034320C4 STR X0, [X31 + 0x28]
	0x034320C8 LDR X1, [X8]
	0x034320CC ADD X0, X31, 0x28
	0x034320D0 BL 0x2677430
	0x034320D4 TBZ X0, 0x0, 0x3432134
	0x034320D8 ADRP X8, 0xCC4000
	0x034320DC LDR X8, [X8 + 0x1E0]
	0x034320E0 ADD X0, X31, 0x28
	0x034320E4 LDR X1, [X8]
	0x034320E8 BL 0x2677474
	0x034320EC ADRP X8, 0xCFD000
	0x034320F0 LDR X8, [X8 + 0x1A8]
	0x034320F4 LDR X1, [X8]
	0x034320F8 BL 0x220E6DC
	0x034320FC MOVN W8, 0x1
	0x03432100 STR W8, [X19], #0x8
	0x03432104 MOV X20, X0
	0x03432108 LDR X0, [X27]
	0x0343210C ADRP X21, 0xCFD000
	0x03432110 LDR W8, [X0 + 0xE0]
	0x03432114 LDR X21, [X21 + 0x1A0]
	0x03432118 CBNZ W8, 0x3432120
	0x0343211C BL 0x1C16DFC
	0x03432120 LDR X2, [X21]
	0x03432124 MOV X0, X19
	0x03432128 MOV X1, X20
	0x0343212C BL 0x26322B0
	0x03432130 B 0x343216C
	0x03432134 STR W31, [X19]
	0x03432138 LDR X8, [X31 + 0x28]
	0x0343213C STR X8, [X19 + 0x68]
	0x03432140 LDR X0, [X27]
	0x03432144 LDR W8, [X0 + 0xE0]
	0x03432148 CBNZ W8, 0x3432150
	0x0343214C BL 0x1C16DFC
	0x03432150 ADRP X8, 0xCFD000
	0x03432154 LDR X8, [X8 + 0x1D0]
	0x03432158 ADD X0, X19, 0x8
	0x0343215C LDR X3, [X8]
	0x03432160 ADD X1, X31, 0x28
	0x03432164 MOV X2, X19
	0x03432168 BL 0x1FB4C4C
	0x0343216C LDP X20, X19, [X31 + 0x80]
	0x03432170 LDP X22, X21, [X31 + 0x70]
	0x03432174 LDP X24, X23, [X31 + 0x60]
	0x03432178 LDP X26, X25, [X31 + 0x50]
	0x0343217C LDP X28, X27, [X31 + 0x40]
	0x03432180 LDP X29, X30, [X31 + 0x30]
	0x03432184 ADD X31, X31, 0x90
	0x03432188 RET
	0x0343218C BL 0x1C16F20
	0x03432190 ADRP X0, 0xCC9000
	0x03432194 LDR X0, [X0 + 0x578]
	0x03432198 BL 0x1C16D08
	0x0343219C BL 0x1C16F10
	0x034321A0 MOV X20, X0
	0x034321A4 ADRP X0, 0xCFC000
	0x034321A8 LDR X0, [X0 + 0xC80]
	0x034321AC BL 0x1C16D08
	0x034321B0 MOV X1, X0
	0x034321B4 MOV X0, X20
	0x034321B8 MOV X2, X31
	0x034321BC BL 0x3314A68
	0x034321C0 ADRP X0, 0xCFD000
	0x034321C4 LDR X0, [X0 + 0x1D8]
	0x034321C8 BL 0x1C16D08
	0x034321CC MOV X1, X0
	0x034321D0 MOV X0, X20
	0x034321D4 BL 0x1C16DEC
	0x034321D8 BL 0x1C16F20
	0x034321DC MOV X0, X23
	0x034321E0 BL 0x1C16F18
	0x034321E4 BL 0x1C16F20
	0x034321E8 BL 0x1C16F20
	0x034321EC BL 0x1C16F20
	0x034321F0 BL 0x1C16F28
	0x034321F4 BL 0x1C16F20
	0x034321F8 BL 0x1C16F20
	0x034321FC BL 0x1C16F20
	0x03432200 BL 0x1C16F20
	0x03432204 BL 0x1C16F20
	0x03432208 BL 0x1C16F20
	0x0343220C BL 0x1C16F28
	0x03432210 BL 0x1C16F28
	0x03432214 BL 0x1C16F28
	0x03432218 BL 0x1C16F28
	0x0343221C BL 0x1C16F20
	0x03432220 BL 0x1C16F44
	0x03432224 MOV X1, X31
	0x03432228 BL 0x1C16DEC
	0x0343222C BL 0x1C16F44
	0x03432230 MOV X1, X31
	0x03432234 BL 0x1C16DEC
	0x03432238 BL 0x1C16F44
	0x0343223C MOV X1, X31
	0x03432240 BL 0x1C16DEC
	0x03432244 BL 0x1C16F44
	0x03432248 MOV X1, X31
	0x0343224C BL 0x1C16DEC
	0x03432250 B 0x34322F0
	0x03432254 B 0x34322F0
	0x03432258 B 0x34322F0
	0x0343225C B 0x34322F0
	0x03432260 B 0x34322F0
	0x03432264 B 0x34322F0
	0x03432268 B 0x34322F0
	0x0343226C B 0x34322F0
	0x03432270 B 0x34322F0
	0x03432274 B 0x34322F0
	0x03432278 B 0x34322F0
	0x0343227C B 0x34322F0
	0x03432280 B 0x34322F0
	0x03432284 B 0x34322F0
	0x03432288 B 0x34322F0
	0x0343228C B 0x34322F0
	0x03432290 B 0x34322F0
	0x03432294 B 0x34322F0
	0x03432298 B 0x34322F0
	0x0343229C B 0x34322F0
	0x034322A0 B 0x34322F0
	0x034322A4 B 0x34322F0
	0x034322A8 B 0x34322F0
	0x034322AC B 0x34322F0
	0x034322B0 B 0x34322F0
	0x034322B4 B 0x34322F0
	0x034322B8 B 0x34322F0
	0x034322BC B 0x34322F0
	0x034322C0 B 0x34322F0
	0x034322C4 B 0x34322F0
	0x034322C8 B 0x34322F0
	0x034322CC B 0x34322F0
	0x034322D0 B 0x34322F0
	0x034322D4 B 0x34322F0
	0x034322D8 B 0x34322F0
	0x034322DC B 0x34322F0
	0x034322E0 B 0x34322F0
	0x034322E4 B 0x34322F0
	0x034322E8 B 0x34322F0
	0x034322EC B 0x34322F0
	0x034322F0 MOV X20, X1
	0x034322F4 MOV X21, X0
	0x034322F8 B 0x34323A8
	0x034322FC B 0x3432314
	0x03432300 B 0x3432314
	0x03432304 B 0x3432314
	0x03432308 MOV X21, X29
	0x0343230C B 0x3432314
	0x03432310 B 0x3432314
	0x03432314 CMP W1, 0x1
	0x03432318 B.NE 0x3432330
	0x0343231C BL 0x3EB1AD0
	0x03432320 LDR X23, [X0]
	0x03432324 BL 0x3EB1AE0
	0x03432328 MOV W20, W31
	0x0343232C B 0x3431CD4
	0x03432330 MOV X21, X0
	0x03432334 MOV X20, X1
	0x03432338 MOV X23, X31
	0x0343233C TBZ X28, 0x1F, 0x34323A4
	0x03432340 CBZ X22, 0x34323A4
	0x03432344 ADRP X10, 0xCC1000
	0x03432348 LDR X8, [X22]
	0x0343234C LDR X10, [X10 + 0xE00]
	0x03432350 LDRH W9, [X8 + 0x12E]
	0x03432354 LDR X1, [X10]
	0x03432358 CBZ X9, 0x343237C
	0x0343235C LDR X10, [X8 + 0xB0]
	0x03432360 ADD X10, X10, 0x8
	0x03432364 LDUR X11, [X10 - 0x8]
	0x03432368 CMP X11, X1
	0x0343236C B.EQ 0x343238C
	0x03432370 SUBS X9, X9, 0x1
	0x03432374 ADD X10, X10, 0x10
	0x03432378 B.NE 0x3432364
	0x0343237C MOV X0, X22
	0x03432380 MOV W2, W31
	0x03432384 BL 0x1C5C788
	0x03432388 B 0x3432398
	0x0343238C LDRSW X9, [X10]
	0x03432390 ADD X8, X8, X9, 0x4, LSL
	0x03432394 ADD X0, X8, 0x138
	0x03432398 LDP X8, X1, [X0]
	0x0343239C MOV X0, X22
	0x034323A0 BLR X8
	0x034323A4 CBNZ X23, 0x3432440
	0x034323A8 CMP W20, 0x1
	0x034323AC B.NE 0x3432460
	0x034323B0 MOV X0, X21
	0x034323B4 BL 0x3EB1AD0
	0x034323B8 MOV X20, X0
	0x034323BC ADRP X0, 0xCC1000
	0x034323C0 LDR X0, [X0 + 0x7D0]
	0x034323C4 BL 0x1C16D08
	0x034323C8 LDR X8, [X20]
	0x034323CC LDR X1, [X8]
	0x034323D0 BL 0x1C17270
	0x034323D4 TBZ X0, 0x0, 0x3432420
	0x034323D8 LDR X20, [X20]
	0x034323DC BL 0x3EB1AE0
	0x034323E0 MOVN W8, 0x1
	0x034323E4 STR W8, [X19], #0x8
	0x034323E8 ADRP X0, 0xCFC000
	0x034323EC LDR X0, [X0 + 0x730]
	0x034323F0 BL 0x1C16D08
	0x034323F4 LDR W8, [X0 + 0xE0]
	0x034323F8 CBNZ W8, 0x3432400
	0x034323FC BL 0x1C16DFC
	0x03432400 ADRP X0, 0xCFD000
	0x03432404 LDR X0, [X0 + 0x1C0]
	0x03432408 BL 0x1C16D08
	0x0343240C MOV X2, X0
	0x03432410 MOV X0, X19
	0x03432414 MOV X1, X20
	0x03432418 BL 0x26324C8
	0x0343241C B 0x343216C
	0x03432420 MOVZ W0, 0x8
	0x03432424 BL 0x3EB1AF0
	0x03432428 LDR X8, [X20]
	0x0343242C STR X8, [X0]
	0x03432430 ADRP X1, 0xA82000
	0x03432434 ADD X1, X1, 0xE58
	0x03432438 MOV X2, X31
	0x0343243C BL 0x3EB1B00
	0x03432440 MOV X0, X23
	0x03432444 BL 0x1C16F18
	0x03432448 MOV X20, X1
	0x0343244C MOV X21, X0
	0x03432450 TBNZ X28, 0x1F, 0x3432340
	0x03432454 B 0x34323A4
	0x03432458 MOV X21, X0
	0x0343245C BL 0x3EB1AE0
	0x03432460 MOV X0, X21
	0x03432464 BL 0x1D2C690
	0x03432468 BL 0x1990590
	0x0343246C STR X30, [X31 - 0x30]!
	0x03432470 STP X22, X21, [X31 + 0x10]
	0x03432474 STP X20, X19, [X31 + 0x20]
	0x03432478 ADRP X22, 0xFAB000
	0x0343247C ADRP X21, 0xCFC000
	0x03432480 LDRB W8, [X22 + 0x664]
	0x03432484 LDR X21, [X21 + 0x730]
	0x03432488 MOV X19, X1
	0x0343248C MOV X20, X0
	0x03432490 TBNZ X8, 0x0, 0x34324B4
	0x03432494 ADRP X0, 0xCFD000
	0x03432498 LDR X0, [X0 + 0x1C8]
	0x0343249C BL 0x1C16CF4
	0x034324A0 ADRP X0, 0xCFC000
	0x034324A4 LDR X0, [X0 + 0x730]
	0x034324A8 BL 0x1C16CF4
	0x034324AC MOVZ W8, 0x1
	0x034324B0 STRB W8, [X22 + 0x664]
	0x034324B4 LDR X0, [X21]
	0x034324B8 ADRP X21, 0xCFD000
	0x034324BC LDR W8, [X0 + 0xE0]
	0x034324C0 LDR X21, [X21 + 0x1C8]
	0x034324C4 CBNZ W8, 0x34324CC
	0x034324C8 BL 0x1C16DFC
	0x034324CC LDR X2, [X21]
	0x034324D0 ADD X0, X20, 0x8
	0x034324D4 MOV X1, X19
	0x034324D8 LDP X20, X19, [X31 + 0x20]
	0x034324DC LDP X22, X21, [X31 + 0x10]
	0x034324E0 LDR X30, [X31], #0x30
	0x034324E4 B 0x2632228
	0x034324E8 SUB X31, X31, 0x70
	0x034324EC STP X30, X27, [X31 + 0x20]
	0x034324F0 STP X26, X25, [X31 + 0x30]
	0x034324F4 STP X24, X23, [X31 + 0x40]
	0x034324F8 STP X22, X21, [X31 + 0x50]
	0x034324FC STP X20, X19, [X31 + 0x60]
	0x03432500 ADRP X20, 0xFAB000
	0x03432504 LDRB W8, [X20 + 0x665]
	0x03432508 MOV X19, X0
	0x0343250C TBNZ X8, 0x0, 0x3432674
	0x03432510 ADRP X0, 0xCFD000
	0x03432514 LDR X0, [X0 + 0x1E0]
	0x03432518 BL 0x1C16CF4
	0x0343251C ADRP X0, 0xCFD000
	0x03432520 LDR X0, [X0 + 0x1E8]
	0x03432524 BL 0x1C16CF4
	0x03432528 ADRP X0, 0xCFC000
	0x0343252C LDR X0, [X0 + 0x708]
	0x03432530 BL 0x1C16CF4
	0x03432534 ADRP X0, 0xCCA000
	0x03432538 LDR X0, [X0 + 0x8D8]
	0x0343253C BL 0x1C16CF4
	0x03432540 ADRP X0, 0xCC2000
	0x03432544 LDR X0, [X0 + 0x810]
	0x03432548 BL 0x1C16CF4
	0x0343254C ADRP X0, 0xCC2000
	0x03432550 LDR X0, [X0 + 0x6C0]
	0x03432554 BL 0x1C16CF4
	0x03432558 ADRP X0, 0xCC2000
	0x0343255C LDR X0, [X0 + 0x6D0]
	0x03432560 BL 0x1C16CF4
	0x03432564 ADRP X0, 0xCFC000
	0x03432568 LDR X0, [X0 + 0x7B8]
	0x0343256C BL 0x1C16CF4
	0x03432570 ADRP X0, 0xCFD000
	0x03432574 LDR X0, [X0 + 0x1F0]
	0x03432578 BL 0x1C16CF4
	0x0343257C ADRP X0, 0xCC4000
	0x03432580 LDR X0, [X0 + 0xEF8]
	0x03432584 BL 0x1C16CF4
	0x03432588 ADRP X0, 0xCC2000
	0x0343258C LDR X0, [X0 + 0x478]
	0x03432590 BL 0x1C16CF4
	0x03432594 ADRP X0, 0xCC1000
	0x03432598 LDR X0, [X0 + 0x9D0]
	0x0343259C BL 0x1C16CF4
	0x034325A0 ADRP X0, 0xCC4000
	0x034325A4 LDR X0, [X0 + 0x1E0]
	0x034325A8 BL 0x1C16CF4
	0x034325AC ADRP X0, 0xCC4000
	0x034325B0 LDR X0, [X0 + 0x1F0]
	0x034325B4 BL 0x1C16CF4
	0x034325B8 ADRP X0, 0xCC4000
	0x034325BC LDR X0, [X0 + 0x1F8]
	0x034325C0 BL 0x1C16CF4
	0x034325C4 ADRP X0, 0xCCA000
	0x034325C8 LDR X0, [X0 + 0x3A0]
	0x034325CC BL 0x1C16CF4
	0x034325D0 ADRP X0, 0xCC3000
	0x034325D4 LDR X0, [X0 + 0xA28]
	0x034325D8 BL 0x1C16CF4
	0x034325DC ADRP X0, 0xCFD000
	0x034325E0 LDR X0, [X0 + 0x1F8]
	0x034325E4 BL 0x1C16CF4
	0x034325E8 ADRP X0, 0xCEA000
	0x034325EC LDR X0, [X0 + 0x4D0]
	0x034325F0 BL 0x1C16CF4
	0x034325F4 ADRP X0, 0xCFD000
	0x034325F8 LDR X0, [X0 + 0x200]
	0x034325FC BL 0x1C16CF4
	0x03432600 ADRP X0, 0xCFD000
	0x03432604 LDR X0, [X0 + 0x208]
	0x03432608 BL 0x1C16CF4
	0x0343260C ADRP X0, 0xCFD000
	0x03432610 LDR X0, [X0 + 0x210]
	0x03432614 BL 0x1C16CF4
	0x03432618 ADRP X0, 0xCCA000
	0x0343261C LDR X0, [X0 + 0x720]
	0x03432620 BL 0x1C16CF4
	0x03432624 ADRP X0, 0xCFC000
	0x03432628 LDR X0, [X0 + 0x7D0]
	0x0343262C BL 0x1C16CF4
	0x03432630 ADRP X0, 0xCFC000
	0x03432634 LDR X0, [X0 + 0xF18]
	0x03432638 BL 0x1C16CF4
	0x0343263C ADRP X0, 0xCFC000
	0x03432640 LDR X0, [X0 + 0x7D8]
	0x03432644 BL 0x1C16CF4
	0x03432648 ADRP X0, 0xCC1000
	0x0343264C LDR X0, [X0 + 0x988]
	0x03432650 BL 0x1C16CF4
	0x03432654 ADRP X0, 0xCFC000
	0x03432658 LDR X0, [X0 + 0xF20]
	0x0343265C BL 0x1C16CF4
	0x03432660 ADRP X0, 0xCFD000
	0x03432664 LDR X0, [X0 + 0x218]
	0x03432668 BL 0x1C16CF4
	0x0343266C MOVZ W8, 0x1
	0x03432670 STRB W8, [X20 + 0x665]
	0x03432674 STR X31, [X31 + 0x18]
	0x03432678 ADRP X27, 0xCFC000
	0x0343267C LDR W8, [X19]
	0x03432680 LDR X27, [X27 + 0x708]
	0x03432684 CBZ W8, 0x3432DA8
	0x03432688 ADRP X8, 0xCFD000
	0x0343268C ADRP X9, 0xCC1000
	0x03432690 LDR X8, [X8 + 0x210]
	0x03432694 LDR X9, [X9 + 0x988]
	0x03432698 LDR X24, [X19 + 0x50]
	0x0343269C LDRB W10, [X19 + 0x20]
	0x034326A0 LDR X20, [X8]
	0x034326A4 LDR X21, [X9]
	0x034326A8 CBZ W10, 0x34327AC
	0x034326AC ADRP X8, 0xCC1000
	0x034326B0 LDR X8, [X8 + 0x9D0]
	0x034326B4 LDR X0, [X8]
	0x034326B8 MOVZ W1, 0x4
	0x034326BC BL 0x1C16D6C
	0x034326C0 MOV X22, X0
	0x034326C4 CBZ X0, 0x3432F00
	0x034326C8 CBZ X21, 0x34326E0
	0x034326CC LDR X8, [X22]
	0x034326D0 LDR X1, [X8 + 0x40]
	0x034326D4 MOV X0, X21
	0x034326D8 BL 0x1C16E00
	0x034326DC CBZ X0, 0x3432F64
	0x034326E0 LDR W8, [X22 + 0x18]
	0x034326E4 CBZ W8, 0x3432F04
	0x034326E8 STR X21, [X22 + 0x20]
	0x034326EC ADRP X21, 0xCFD000
	0x034326F0 LDR X21, [X21 + 0x200]
	0x034326F4 LDR X0, [X21]
	0x034326F8 CBZ X0, 0x3432710
	0x034326FC LDR X8, [X22]
	0x03432700 LDR X1, [X8 + 0x40]
	0x03432704 BL 0x1C16E00
	0x03432708 CBZ X0, 0x3432F70
	0x0343270C LDR W8, [X22 + 0x18]
	0x03432710 CMP W8, 0x1
	0x03432714 B.LS 0x3432F08
	0x03432718 LDR X8, [X21]
	0x0343271C ADRP X9, 0xCC2000
	0x03432720 STR X8, [X22 + 0x28]
	0x03432724 LDR X8, [X19 + 0x20]
	0x03432728 LDR X9, [X9 + 0x478]
	0x0343272C STR X8, [X31 + 0x10]
	0x03432730 LDR X0, [X9]
	0x03432734 ADD X1, X31, 0x10
	0x03432738 BL 0x1C16E04
	0x0343273C MOV X21, X0
	0x03432740 CBZ X0, 0x3432758
	0x03432744 LDR X8, [X22]
	0x03432748 LDR X1, [X8 + 0x40]
	0x0343274C MOV X0, X21
	0x03432750 BL 0x1C16E00
	0x03432754 CBZ X0, 0x3432F7C
	0x03432758 LDR W8, [X22 + 0x18]
	0x0343275C CMP W8, 0x2
	0x03432760 B.LS 0x3432F0C
	0x03432764 STR X21, [X22 + 0x30]
	0x03432768 ADRP X21, 0xCCA000
	0x0343276C LDR X21, [X21 + 0x720]
	0x03432770 LDR X0, [X21]
	0x03432774 CBZ X0, 0x343278C
	0x03432778 LDR X8, [X22]
	0x0343277C LDR X1, [X8 + 0x40]
	0x03432780 BL 0x1C16E00
	0x03432784 CBZ X0, 0x3432F88
	0x03432788 LDR W8, [X22 + 0x18]
	0x0343278C CMP W8, 0x3
	0x03432790 B.LS 0x3432F14
	0x03432794 LDR X8, [X21]
	0x03432798 STR X8, [X22 + 0x38]
	0x0343279C MOV X0, X22
	0x034327A0 MOV X1, X31
	0x034327A4 BL 0x3227578
	0x034327A8 MOV X21, X0
	0x034327AC LDRB W8, [X19 + 0x28]
	0x034327B0 CBZ W8, 0x34328B4
	0x034327B4 ADRP X8, 0xCC1000
	0x034327B8 LDR X8, [X8 + 0x9D0]
	0x034327BC LDR X0, [X8]
	0x034327C0 MOVZ W1, 0x4
	0x034327C4 BL 0x1C16D6C
	0x034327C8 MOV X22, X0
	0x034327CC CBZ X0, 0x3432F10
	0x034327D0 CBZ X21, 0x34327E8
	0x034327D4 LDR X8, [X22]
	0x034327D8 LDR X1, [X8 + 0x40]
	0x034327DC MOV X0, X21
	0x034327E0 BL 0x1C16E00
	0x034327E4 CBZ X0, 0x3432F94
	0x034327E8 LDR W8, [X22 + 0x18]
	0x034327EC CBZ W8, 0x3432F18
	0x034327F0 STR X21, [X22 + 0x20]
	0x034327F4 ADRP X21, 0xCFD000
	0x034327F8 LDR X21, [X21 + 0x208]
	0x034327FC LDR X0, [X21]
	0x03432800 CBZ X0, 0x3432818
	0x03432804 LDR X8, [X22]
	0x03432808 LDR X1, [X8 + 0x40]
	0x0343280C BL 0x1C16E00
	0x03432810 CBZ X0, 0x3432FA0
	0x03432814 LDR W8, [X22 + 0x18]
	0x03432818 CMP W8, 0x1
	0x0343281C B.LS 0x3432F1C
	0x03432820 LDR X8, [X21]
	0x03432824 ADRP X9, 0xCC2000
	0x03432828 STR X8, [X22 + 0x28]
	0x0343282C LDR X8, [X19 + 0x28]
	0x03432830 LDR X9, [X9 + 0x478]
	0x03432834 STR X8, [X31 + 0x10]
	0x03432838 LDR X0, [X9]
	0x0343283C ADD X1, X31, 0x10
	0x03432840 BL 0x1C16E04
	0x03432844 MOV X21, X0
	0x03432848 CBZ X0, 0x3432860
	0x0343284C LDR X8, [X22]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xFAD000
	013 Move W8, [X20+1633]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {105}
	019 Move X0, 0xCFF000
	020 Move X0, [X0+408]
	021 Call 0x1C17CF4
	022 Move X0, 0xCFF000
	023 Move X0, [X0+416]
	024 Call 0x1C17CF4
	025 Move X0, 0xCFE000
	026 Move X0, [X0+1840]
	027 Call 0x1C17CF4
	028 Move X0, 0xCCC000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC4000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC4000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCC4000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xCFE000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xCFF000
	044 Move X0, [X0+424]
	045 Call 0x1C17CF4
	046 Move X0, 0xCC5000
	047 Move X0, [X0+3832]
	048 Call 0x1C17CF4
	049 Move X0, 0xCC3000
	050 Move X0, [X0+1144]
	051 Call 0x1C17CF4
	052 Move X0, 0xCC2000
	053 Move X0, [X0+2512]
	054 Call 0x1C17CF4
	055 Move X0, 0xCC5000
	056 Move X0, [X0+480]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC5000
	059 Move X0, [X0+496]
	060 Call 0x1C17CF4
	061 Move X0, 0xCC5000
	062 Move X0, [X0+504]
	063 Call 0x1C17CF4
	064 Move X0, 0xCCB000
	065 Move X0, [X0+928]
	066 Call 0x1C17CF4
	067 Move X0, 0xCC4000
	068 Move X0, [X0+2600]
	069 Call 0x1C17CF4
	070 Move X0, 0xCEB000
	071 Move X0, [X0+1232]
	072 Call 0x1C17CF4
	073 Move X0, 0xCFE000
	074 Move X0, [X0+24]
	075 Call 0x1C17CF4
	076 Move X0, 0xCFE000
	077 Move X0, [X0+32]
	078 Call 0x1C17CF4
	079 Move X0, 0xCCB000
	080 Move X0, [X0+1824]
	081 Call 0x1C17CF4
	082 Move X0, 0xCFD000
	083 Move X0, [X0+2000]
	084 Call 0x1C17CF4
	085 Move X0, 0xCFD000
	086 Move X0, [X0+3864]
	087 Call 0x1C17CF4
	088 Move X0, 0xCFE000
	089 Move X0, [X0+432]
	090 Call 0x1C17CF4
	091 Move X0, 0xCFD000
	092 Move X0, [X0+2008]
	093 Call 0x1C17CF4
	094 Move X0, 0xCC2000
	095 Move X0, [X0+2440]
	096 Call 0x1C17CF4
	097 Move X0, 0xCFD000
	098 Move X0, [X0+3192]
	099 Call 0x1C17CF4
	100 Move X0, 0xCFD000
	101 Move X0, [X0+3872]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X20+1633], W8
	105 Move [X31+24], X31
	106 Move X27, 0xCFD000
	107 Move W8, [X19]
	108 Move X27, [X27+1840]
	109 Compare W8, 0
	110 JumpIfEqual {379}
	111 Move X21, [X19+32]
	112 Compare X21, 0
	113 JumpIfEqual {470}
	114 Move X8, [X19+40]
	115 Compare X8, 0
	116 JumpIfEqual {488}
	117 Move X23, 0xCC4000
	118 Move X23, [X23+2600]
	119 Move X8, 0xCFE000
	120 Move X0, [X23]
	121 Move X8, [X8+432]
	122 Move X24, [X19+72]
	123 Move W9, [X0+224]
	124 Move X20, [X8]
	125 Compare W9, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X21
	129 Move X1, X31
	130 Call Uri.EscapeDataString, X0
	131 Compare X20, 0
	132 JumpIfEqual {506}
	133 Move X8, 0xCFD000
	134 Move X8, [X8+3192]
	135 Move X2, X0
	136 Move X1, [X8]
	137 Move X0, X20
	138 Move X3, X31
	139 Call String.Replace, X0, X1, X2
	140 Move X20, X0
	141 Move X0, [X19+40]
	142 Move X1, X31
	143 Call Uri.EscapeDataString, X0
	144 Compare X20, 0
	145 JumpIfEqual {507}
	146 Move X8, 0xCFE000
	147 Move X8, [X8+24]
	148 Move X2, X0
	149 Move X1, [X8]
	150 Move X0, X20
	151 Move X3, X31
	152 Call String.Replace, X0, X1, X2
	153 Move X8, 0xCC2000
	154 Move X8, [X8+2440]
	155 Move W9, [X19+48]
	156 Move X20, X0
	157 Move X21, [X8]
	158 Compare W9, 0
	159 JumpIfEqual {231}
	160 Move X8, 0xCC2000
	161 Move X8, [X8+2512]
	162 Move X0, [X8]
	163 Move W1, 4
	164 Call 0x1C17D6C
	165 Move X22, X0
	166 Compare X0, 0
	167 JumpIfEqual {517}
	168 Compare X21, 0
	169 JumpIfEqual {176}
	170 Move X8, [X22]
	171 Move X1, [X8+64]
	172 Move X0, X21
	173 Call 0x1C17E00
	174 Compare X0, 0
	175 JumpIfEqual {522}
	176 Move W8, [X22+24]
	177 Compare W8, 0
	178 JumpIfEqual {518}
	179 Move [X22+32], X21
	180 Move X21, 0xCFD000
	181 Move X21, [X21+3864]
	182 Move X0, [X21]
	183 Compare X0, 0
	184 JumpIfEqual {191}
	185 Move X8, [X22]
	186 Move X1, [X8+64]
	187 Call 0x1C17E00
	188 Compare X0, 0
	189 JumpIfEqual {525}
	190 Move W8, [X22+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X8, [X21]
	193 Move X9, 0xCC3000
	194 Move [X22+40], X8
	195 Move X8, [X19+48]
	196 Move X9, [X9+1144]
	197 Move [X31+16], X8
	198 Move X0, [X9]
	199 Add X1, X31, 16
	200 Call 0x1C17E04
	201 Move X21, X0
	202 Compare X0, 0
	203 JumpIfEqual {210}
	204 Move X8, [X22]
	205 Move X1, [X8+64]
	206 Move X0, X21
	207 Call 0x1C17E00
	208 Compare X0, 0
	209 JumpIfEqual {528}
	210 Move W8, [X22+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move [X22+48], X21
	213 Move X21, 0xCCB000
	214 Move X21, [X21+1824]
	215 Move X0, [X21]
	216 Compare X0, 0
	217 JumpIfEqual {224}
	218 Move X8, [X22]
	219 Move X1, [X8+64]
	220 Call 0x1C17E00
	221 Compare X0, 0
	222 JumpIfEqual {531}
	223 Move W8, [X22+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X8, [X21]
	226 Move [X22+56], X8
	227 Move X0, X22
	228 Move X1, X31
	229 Call String.Concat, X0
	230 Move X21, X0
	231 Move X22, [X19+56]
	232 Compare X22, 0
	233 JumpIfEqual {253}
	234 Move X0, [X23]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X22
	240 Move X1, X31
	241 Call Uri.EscapeDataString, X0
	242 Move X8, 0xCFE000
	243 Move X8, [X8+32]
	244 Move X9, 0xCCB000
	245 Move X9, [X9+1824]
	246 Move X2, X0
	247 Move X1, [X8]
	248 Move X3, [X9]
	249 Move X0, X21
	250 Move X4, X31
	251 Call String.Concat, X0, X1, X2, X3
	252 Move X21, X0
	253 Move X22, [X19+64]
	254 Compare X22, 0
	255 JumpIfEqual {275}
	256 Move X0, [X23]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move X0, X22
	262 Move X1, X31
	263 Call Uri.EscapeDataString, X0
	264 Move X8, 0xCFD000
	265 Move X8, [X8+3872]
	266 Move X9, 0xCCB000
	267 Move X9, [X9+1824]
	268 Move X2, X0
	269 Move X1, [X8]
	270 Move X3, [X9]
	271 Move X0, X21
	272 Move X4, X31
	273 Call String.Concat, X0, X1, X2, X3
	274 Move X21, X0
	275 Compare X24, 0
	276 JumpIfEqual {508}
	277 Move X0, [X24+32]
	278 Compare X0, 0
	279 JumpIfEqual {509}
	280 Move X1, X31
	281 Call Uri.get_AbsolutePath, X0
	282 Move X8, 0xCCB000
	283 Move X8, [X8+2264]
	284 Move X22, X0
	285 Move X0, [X8]
	286 Move W1, 1
	287 Call 0x1C17D6C
	288 Move X1, X0
	289 Compare X1, 0
	290 JumpIfEqual {510}
	291 Move W8, [X1+24]
	292 Compare W8, 0
	293 JumpIfEqual {511}
	294 Move W8, 47
	295 NotImplemented "Instruction STRH not yet implemented."
	296 Compare X22, 0
	297 JumpIfEqual {512}
	298 Move X0, X22
	299 Move X2, X31
	300 Call String.TrimEnd, X0, X1
	301 Move X1, X20
	302 Move X2, X31
	303 Call String.Concat, X0, X1
	304 Move X8, 0xCCB000
	305 Move X8, [X8+928]
	306 Move X22, X0
	307 Move X23, [X24+32]
	308 Move X0, [X8]
	309 Call 0x1C17F10
	310 Move X20, X0
	311 Move X1, X23
	312 Move X2, X31
	313 Call UriBuilder..ctor, X0, X1
	314 Compare X20, 0
	315 JumpIfEqual {513}
	316 Move X0, X20
	317 Move X1, X22
	318 Move X2, X31
	319 Call UriBuilder.set_Path, X0, X1
	320 Move X0, X20
	321 Move X1, X21
	322 Move X2, X31
	323 Call UriBuilder.set_Query, X0, X1
	324 Move X0, X20
	325 Move X1, X31
	326 Call UriBuilder.get_Uri, X0
	327 Move X8, 0xCEB000
	328 Move X9, 0xCC3000
	329 Move X8, [X8+1232]
	330 Move X9, [X9+1744]
	331 Move X20, X0
	332 Move X21, [X8]
	333 Move X0, [X9]
	334 Call 0x1C17F10
	335 Move X8, 0xCC3000
	336 Move X8, [X8+1728]
	337 Move X22, X0
	338 Move X1, [X8]
	339 Call Dictionary`2<Object, Object>..ctor, X0
	340 Move X8, 0xCFD000
	341 Move X8, [X8+2008]
	342 Move X1, [X19+80]
	343 Move X0, [X8]
	344 Move X2, X31
	345 Call String.Concat, X0, X1
	346 Compare X22, 0
	347 JumpIfEqual {514}
	348 Move X8, 0xCFD000
	349 Move X8, [X8+2000]
	350 Move X9, 0xCC3000
	351 Move X9, [X9+2064]
	352 Move X2, X0
	353 Move X1, [X8]
	354 Move X3, [X9]
	355 Move X0, X22
	356 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	357 Move X23, [X24+16]
	358 Compare X23, 0
	359 JumpIfEqual {515}
	360 Move X10, 0xCFD000
	361 Move X10, [X10+1976]
	362 Move X8, [X23]
	363 Move W25, [X24+24]
	364 Move X26, [X19+88]
	365 Move X24, [X19+96]
	366 Move X1, [X10]
	367 NotImplemented "Instruction LDRH not yet implemented."
	368 Compare X9, 0
	369 JumpIfEqual {376}
	370 Move X10, [X8+176]
	371 Add X10, X10, 8
	372 NotImplemented "Instruction LDUR not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Subtract X9, X9, 1
	375 Add X10, X10, 16
	376 Move W2, 3
	377 Move X0, X23
	378 Call 0x1C5D788
	379 Move X8, [X19+104]
	380 Move TEMP, 0
	381 Not TEMP
	382 Move W9, TEMP
	383 Move [X31+24], X8
	384 Move [X19+104], X31
	385 Move [X19], W9
	386 Move W9, [X10]
	387 Add W9, W9, 3
	388 Add X8, X8, W9
	389 Add X0, X8, 312
	390 Move X8, [X0]
	391 Move X9, [X0+8]
	392 Move X0, X23
	393 Move X1, X21
	394 Move X2, X20
	395 Move X3, X22
	396 Move X4, X31
	397 Move W5, W25
	398 Move X6, X26
	399 Move X7, X24
	400 Move [X31], X9
	401 NotImplemented "Instruction BLR not yet implemented."
	402 Compare X0, 0
	403 JumpIfEqual {516}
	404 Move X8, 0xCC5000
	405 Move X8, [X8+504]
	406 Move X1, [X8]
	407 Call Task`1<Object>.GetAwaiter, X0
	408 Move X8, 0xCC5000
	409 Move X8, [X8+496]
	410 Move [X31+24], X0
	411 Move X1, [X8]
	412 Add X0, X31, 24
	413 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	414 Move TEMP, X0
	415 And TEMP, TEMP, 1
	416 Compare TEMP, 1
	417 JumpIfNotEqual {443}
	418 Move X8, 0xCC5000
	419 Move X8, [X8+480]
	420 Add X0, X31, 24
	421 Move X1, [X8]
	422 Call TaskAwaiter`1<Object>.GetResult, X0
	423 Move X8, 0xCFE000
	424 Move X8, [X8+424]
	425 Move X1, [X8]
	426 Call JsonParser.FromJson, X0
	427 Move TEMP, 1
	428 Not TEMP
	429 Move W8, TEMP
	430 Move [X19+8], W8
	431 Move X20, X0
	432 Move X0, [X27]
	433 Move X21, 0xCFE000
	434 Move W8, [X0+224]
	435 Move X21, [X21+416]
	436 Compare W8, 0
	437 JumpIfNotEqual {439}
	438 Call 0x1C17DFC
	439 Move X2, [X21]
	440 Move X0, X19
	441 Move X1, X20
	442 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	443 Move [X19], W31
	444 Move X8, [X31+24]
	445 Move [X19+104], X8
	446 Move X0, [X27]
	447 Move W8, [X0+224]
	448 Compare W8, 0
	449 JumpIfNotEqual {451}
	450 Call 0x1C17DFC
	451 Move X8, 0xCFE000
	452 Move X8, [X8+408]
	453 Add X0, X19, 8
	454 Move X3, [X8]
	455 Add X1, X31, 24
	456 Move X2, X19
	457 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	458 Move X20, [X31+96]
	459 Move X19, [X31+104]
	460 Move X22, [X31+80]
	461 Move X21, [X31+88]
	462 Move X24, [X31+64]
	463 Move X23, [X31+72]
	464 Move X26, [X31+48]
	465 Move X25, [X31+56]
	466 Move X30, [X31+32]
	467 Move X27, [X31+40]
	468 Add X31, X31, 112
	469 Return 
	470 Move X0, 0xCCA000
	471 Move X0, [X0+1400]
	472 Call 0x1C17D08
	473 Call 0x1C17F10
	474 Move X20, X0
	475 Move X0, 0xCFD000
	476 Move X0, [X0+3200]
	477 Call 0x1C17D08
	478 Move X1, X0
	479 Move X0, X20
	480 Move X2, X31
	481 Call ArgumentException..ctor, X0, X1
	482 Move X0, 0xCFE000
	483 Move X0, [X0+440]
	484 Call 0x1C17D08
	485 Move X1, X0
	486 Move X0, X20
	487 Call 0x1C17DEC
	488 Move X0, 0xCCA000
	489 Move X0, [X0+1400]
	490 Call 0x1C17D08
	491 Call 0x1C17F10
	492 Move X20, X0
	493 Move X0, 0xCFE000
	494 Move X0, [X0+48]
	495 Call 0x1C17D08
	496 Move X1, X0
	497 Move X0, X20
	498 Move X2, X31
	499 Call ArgumentException..ctor, X0, X1
	500 Move X0, 0xCFE000
	501 Move X0, [X0+440]
	502 Call 0x1C17D08
	503 Move X1, X0
	504 Move X0, X20
	505 Call 0x1C17DEC
	506 Call 0x1C17F20
	507 Call 0x1C17F20
	508 Call 0x1C17F20
	509 Call 0x1C17F20
	510 Call 0x1C17F20
	511 Call 0x1C17F28
	512 Call 0x1C17F20
	513 Call 0x1C17F20
	514 Call 0x1C17F20
	515 Call 0x1C17F20
	516 Call 0x1C17F20
	517 Call 0x1C17F20
	518 Call 0x1C17F28
	519 Call 0x1C17F28
	520 Call 0x1C17F28
	521 Call 0x1C17F28
	522 Call 0x1C17F44
	523 Move X1, X31
	524 Call 0x1C17DEC
	525 Call 0x1C17F44
	526 Move X1, X31
	527 Call 0x1C17DEC
	528 Call 0x1C17F44
	529 Move X1, X31
	530 Call 0x1C17DEC
	531 Call 0x1C17F44
	532 Move X1, X31
	533 Call 0x1C17DEC
	534 Move X20, X0
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Move X0, X20
	537 Call 0x3EB2AD0
	538 Move X20, X0
	539 Move X0, 0xCC2000
	540 Move X0, [X0+2000]
	541 Call 0x1C17D08
	542 Move X8, [X20]
	543 Move X1, [X8]
	544 Call 0x1C18270
	545 Move TEMP, X0
	546 And TEMP, TEMP, 1
	547 Compare TEMP, 1
	548 JumpIfNotEqual {569}
	549 Move X20, [X20]
	550 Call 0x3EB2AE0
	551 Move TEMP, 1
	552 Not TEMP
	553 Move W8, TEMP
	554 Move [X19+8], W8
	555 Move X0, 0xCFD000
	556 Move X0, [X0+1840]
	557 Call 0x1C17D08
	558 Move W8, [X0+224]
	559 Compare W8, 0
	560 JumpIfNotEqual {562}
	561 Call 0x1C17DFC
	562 Move X0, 0xCFE000
	563 Move X0, [X0+448]
	564 Call 0x1C17D08
	565 Move X2, X0
	566 Move X0, X19
	567 Move X1, X20
	568 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	569 Move W0, 8
	570 Call 0x3EB2AF0
	571 Move X8, [X20]
	572 Move [X0], X8
	573 Move X1, 0xA83000
	574 Add X1, X1, 3672
	575 Move X2, X31
	576 Call 0x3EB2B00
	577 Move X20, X0
	578 Call 0x3EB2AE0
	579 Move X0, X20
	580 Call 0x1D2D690
	581 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03432850 LDR X1, [X8 + 0x40]
	0x03432854 MOV X0, X21
	0x03432858 BL 0x1C16E00
	0x0343285C CBZ X0, 0x3432FAC
	0x03432860 LDR W8, [X22 + 0x18]
	0x03432864 CMP W8, 0x2
	0x03432868 B.LS 0x3432F20
	0x0343286C STR X21, [X22 + 0x30]
	0x03432870 ADRP X21, 0xCCA000
	0x03432874 LDR X21, [X21 + 0x720]
	0x03432878 LDR X0, [X21]
	0x0343287C CBZ X0, 0x3432894
	0x03432880 LDR X8, [X22]
	0x03432884 LDR X1, [X8 + 0x40]
	0x03432888 BL 0x1C16E00
	0x0343288C CBZ X0, 0x3432FB8
	0x03432890 LDR W8, [X22 + 0x18]
	0x03432894 CMP W8, 0x3
	0x03432898 B.LS 0x3432F28
	0x0343289C LDR X8, [X21]
	0x034328A0 STR X8, [X22 + 0x38]
	0x034328A4 MOV X0, X22
	0x034328A8 MOV X1, X31
	0x034328AC BL 0x3227578
	0x034328B0 MOV X21, X0
	0x034328B4 LDRB W8, [X19 + 0x30]
	0x034328B8 CBZ W8, 0x34329BC
	0x034328BC ADRP X8, 0xCC1000
	0x034328C0 LDR X8, [X8 + 0x9D0]
	0x034328C4 LDR X0, [X8]
	0x034328C8 MOVZ W1, 0x4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFAC000
	007 Move X21, 0xCFD000
	008 Move W8, [X22+1634]
	009 Move X21, [X21+1840]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCFE000
	017 Move X0, [X0+456]
	018 Call 0x1C17CF4
	019 Move X0, 0xCFD000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1634], W8
	024 Move X0, [X21]
	025 Move X21, 0xCFE000
	026 Move W8, [X0+224]
	027 Move X21, [X21+456]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

