Type: Nakama.Client/<WriteStorageObjectsAsync>d__126

Method: System.Void MoveNext()

Disassembly:
	0x03470A88 LDR X8, [X8 + 0x798]
	0x03470A8C ADD X0, X19, 0x8
	0x03470A90 LDR X3, [X8]
	0x03470A94 ADD X1, X31, 0x18
	0x03470A98 MOV X2, X19
	0x03470A9C BL 0x1FBEA54
	0x03470AA0 LDP X20, X19, [X31 + 0x60]
	0x03470AA4 LDP X22, X21, [X31 + 0x50]
	0x03470AA8 LDP X24, X23, [X31 + 0x40]
	0x03470AAC LDP X30, X25, [X31 + 0x30]
	0x03470AB0 ADD X31, X31, 0x70
	0x03470AB4 RET
	0x03470AB8 BL 0x1C16F20
	0x03470ABC BL 0x1C16F20
	0x03470AC0 BL 0x1C16F20
	0x03470AC4 BL 0x1C16F20
	0x03470AC8 BL 0x1C16F20
	0x03470ACC BL 0x1C16F20
	0x03470AD0 BL 0x1C16F20
	0x03470AD4 BL 0x1C16F20
	0x03470AD8 BL 0x1C16F20
	0x03470ADC BL 0x1C16F20
	0x03470AE0 BL 0x1C16F20
	0x03470AE4 BL 0x1C16F20
	0x03470AE8 B 0x3470B5C
	0x03470AEC B 0x3470B5C
	0x03470AF0 B 0x3470B5C
	0x03470AF4 B 0x3470B5C
	0x03470AF8 B 0x3470B5C
	0x03470AFC B 0x3470B5C
	0x03470B00 B 0x3470B5C
	0x03470B04 B 0x3470B5C
	0x03470B08 B 0x3470B5C
	0x03470B0C B 0x3470B5C
	0x03470B10 B 0x3470B5C
	0x03470B14 B 0x3470B5C
	0x03470B18 B 0x3470B5C
	0x03470B1C B 0x3470B5C
	0x03470B20 B 0x3470B5C
	0x03470B24 B 0x3470B5C
	0x03470B28 B 0x3470B5C
	0x03470B2C B 0x3470B5C
	0x03470B30 B 0x3470B5C
	0x03470B34 B 0x3470B5C
	0x03470B38 B 0x3470B5C
	0x03470B3C B 0x3470B5C
	0x03470B40 B 0x3470B5C
	0x03470B44 B 0x3470B5C
	0x03470B48 B 0x3470B5C
	0x03470B4C B 0x3470B5C
	0x03470B50 B 0x3470B5C
	0x03470B54 B 0x3470B5C
	0x03470B58 B 0x3470B5C
	0x03470B5C MOV X20, X0
	0x03470B60 CMP W1, 0x1
	0x03470B64 B.NE 0x3470C04
	0x03470B68 MOV X0, X20
	0x03470B6C BL 0x3EB1AD0
	0x03470B70 MOV X20, X0
	0x03470B74 ADRP X0, 0xC83000
	0x03470B78 LDR X0, [X0 + 0x7D0]
	0x03470B7C BL 0x1C16D08
	0x03470B80 LDR X8, [X20]
	0x03470B84 LDR X1, [X8]
	0x03470B88 BL 0x1C17270
	0x03470B8C TBZ X0, 0x0, 0x3470BDC
	0x03470B90 LDR X20, [X20]
	0x03470B94 BL 0x3EB1AE0
	0x03470B98 MOVN W8, 0x1
	0x03470B9C STR X31, [X19 + 0x68]
	0x03470BA0 STR W8, [X19], #0x8
	0x03470BA4 ADRP X0, 0xCBE000
	0x03470BA8 LDR X0, [X0 + 0x5F8]
	0x03470BAC BL 0x1C16D08
	0x03470BB0 LDR W8, [X0 + 0xE0]
	0x03470BB4 CBNZ W8, 0x3470BBC
	0x03470BB8 BL 0x1C16DFC
	0x03470BBC ADRP X0, 0xCBF000
	0x03470BC0 LDR X0, [X0 + 0x548]
	0x03470BC4 BL 0x1C16D08
	0x03470BC8 MOV X2, X0
	0x03470BCC MOV X0, X19
	0x03470BD0 MOV X1, X20
	0x03470BD4 BL 0x26324C8
	0x03470BD8 B 0x3470AA0
	0x03470BDC MOVZ W0, 0x8
	0x03470BE0 BL 0x3EB1AF0
	0x03470BE4 LDR X8, [X20]
	0x03470BE8 STR X8, [X0]
	0x03470BEC ADRP X1, 0xA44000
	0x03470BF0 ADD X1, X1, 0xE58
	0x03470BF4 MOV X2, X31
	0x03470BF8 BL 0x3EB1B00
	0x03470BFC MOV X20, X0
	0x03470C00 BL 0x3EB1AE0
	0x03470C04 MOV X0, X20
	0x03470C08 BL 0x1D2C690
	0x03470C0C BL 0x1990590
	0x03470C10 STR X30, [X31 - 0x30]!
	0x03470C14 STP X22, X21, [X31 + 0x10]
	0x03470C18 STP X20, X19, [X31 + 0x20]
	0x03470C1C ADRP X22, 0xF6D000
	0x03470C20 ADRP X21, 0xCBE000
	0x03470C24 LDRB W8, [X22 + 0x7EE]
	0x03470C28 LDR X21, [X21 + 0x5F8]
	0x03470C2C MOV X19, X1
	0x03470C30 MOV X20, X0
	0x03470C34 TBNZ X8, 0x0, 0x3470C58
	0x03470C38 ADRP X0, 0xCBF000
	0x03470C3C LDR X0, [X0 + 0x550]
	0x03470C40 BL 0x1C16CF4
	0x03470C44 ADRP X0, 0xCBE000
	0x03470C48 LDR X0, [X0 + 0x5F8]
	0x03470C4C BL 0x1C16CF4
	0x03470C50 MOVZ W8, 0x1
	0x03470C54 STRB W8, [X22 + 0x7EE]
	0x03470C58 LDR X0, [X21]
	0x03470C5C ADRP X21, 0xCBF000
	0x03470C60 LDR W8, [X0 + 0xE0]
	0x03470C64 LDR X21, [X21 + 0x550]
	0x03470C68 CBNZ W8, 0x3470C70
	0x03470C6C BL 0x1C16DFC
	0x03470C70 LDR X2, [X21]
	0x03470C74 ADD X0, X20, 0x8
	0x03470C78 MOV X1, X19
	0x03470C7C LDP X20, X19, [X31 + 0x20]
	0x03470C80 LDP X22, X21, [X31 + 0x10]
	0x03470C84 LDR X30, [X31], #0x30
	0x03470C88 B 0x2632228
	0x03470C8C STR X30, [X31 - 0x20]!
	0x03470C90 STP X20, X19, [X31 + 0x10]
	0x03470C94 MOV X19, X1
	0x03470C98 MOV X1, X31
	0x03470C9C MOV X20, X0
	0x03470CA0 BL 0x35F97CC
	0x03470CA4 MOV X0, X20
	0x03470CA8 MOV X1, X19
	0x03470CAC LDP X20, X19, [X31 + 0x10]
	0x03470CB0 MOV X2, X31
	0x03470CB4 LDR X30, [X31], #0x20
	0x03470CB8 B 0x35F97DC
	0x03470CBC STR X30, [X31 - 0x40]!
	0x03470CC0 STP X24, X23, [X31 + 0x10]
	0x03470CC4 STP X22, X21, [X31 + 0x20]
	0x03470CC8 STP X20, X19, [X31 + 0x30]
	0x03470CCC ADRP X22, 0xF6D000
	0x03470CD0 LDRB W8, [X22 + 0x7EF]
	0x03470CD4 MOV X19, X2
	0x03470CD8 MOV X20, X1
	0x03470CDC MOV X21, X0
	0x03470CE0 TBNZ X8, 0x0, 0x3470D04
	0x03470CE4 ADRP X0, 0xCC0000
	0x03470CE8 LDR X0, [X0 + 0x7B8]
	0x03470CEC BL 0x1C16CF4
	0x03470CF0 ADRP X0, 0xC86000
	0x03470CF4 LDR X0, [X0 + 0x178]
	0x03470CF8 BL 0x1C16CF4
	0x03470CFC MOVZ W8, 0x1
	0x03470D00 STRB W8, [X22 + 0x7EF]
	0x03470D04 CBZ X20, 0x3470E1C
	0x03470D08 ADRP X23, 0xC86000
	0x03470D0C LDR X23, [X23 + 0x178]
	0x03470D10 LDR X22, [X20 + 0x18]
	0x03470D14 LDR X0, [X23]
	0x03470D18 LDR W8, [X0 + 0xE0]
	0x03470D1C CBNZ W8, 0x3470D24
	0x03470D20 BL 0x1C16DFC
	0x03470D24 ADRP X24, 0xF68000
	0x03470D28 LDRB W8, [X24 + 0x939]
	0x03470D2C CBNZ W8, 0x3470D44
	0x03470D30 ADRP X0, 0xC86000
	0x03470D34 LDR X0, [X0 + 0x178]
	0x03470D38 BL 0x1C16CF4
	0x03470D3C MOVZ W8, 0x1
	0x03470D40 STRB W8, [X24 + 0x939]
	0x03470D44 LDR X0, [X23]
	0x03470D48 LDR W8, [X0 + 0xE0]
	0x03470D4C CBNZ W8, 0x3470D58
	0x03470D50 BL 0x1C16DFC
	0x03470D54 LDR X0, [X23]
	0x03470D58 LDR X8, [X0 + 0xB8]
	0x03470D5C MOV X0, X22
	0x03470D60 MOV X2, X31
	0x03470D64 LDR X1, [X8 + 0x20]
	0x03470D68 BL 0x35FBBD0
	0x03470D6C TBNZ X0, 0x0, 0x3470DD0
	0x03470D70 LDR X0, [X23]
	0x03470D74 LDR X22, [X20 + 0x18]
	0x03470D78 LDR W8, [X0 + 0xE0]
	0x03470D7C CBNZ W8, 0x3470D84
	0x03470D80 BL 0x1C16DFC
	0x03470D84 ADRP X24, 0xF68000
	0x03470D88 LDRB W8, [X24 + 0x93A]
	0x03470D8C CBNZ W8, 0x3470DA4
	0x03470D90 ADRP X0, 0xC86000
	0x03470D94 LDR X0, [X0 + 0x178]
	0x03470D98 BL 0x1C16CF4
	0x03470D9C MOVZ W8, 0x1
	0x03470DA0 STRB W8, [X24 + 0x93A]
	0x03470DA4 LDR X0, [X23]
	0x03470DA8 LDR W8, [X0 + 0xE0]
	0x03470DAC CBNZ W8, 0x3470DB8
	0x03470DB0 BL 0x1C16DFC
	0x03470DB4 LDR X0, [X23]
	0x03470DB8 LDR X8, [X0 + 0xB8]
	0x03470DBC MOV X0, X22
	0x03470DC0 MOV X2, X31
	0x03470DC4 LDR X1, [X8 + 0x28]
	0x03470DC8 BL 0x35FBBD0
	0x03470DCC TBZ X0, 0x0, 0x3470DF8
	0x03470DD0 LDR X22, [X20 + 0x38]
	0x03470DD4 CBZ X22, 0x3470DF8
	0x03470DD8 ADRP X8, 0xCC0000
	0x03470DDC LDR X8, [X8 + 0x7B8]
	0x03470DE0 LDR X0, [X8]
	0x03470DE4 BL 0x1C16F10
	0x03470DE8 MOV X1, X22
	0x03470DEC MOV X23, X0
	0x03470DF0 BL 0x3470E20
	0x03470DF4 STR X23, [X20 + 0x38]
	0x03470DF8 MOV X0, X21
	0x03470DFC MOV X1, X20
	0x03470E00 MOV X2, X19
	0x03470E04 LDP X20, X19, [X31 + 0x30]
	0x03470E08 LDP X22, X21, [X31 + 0x20]
	0x03470E0C LDP X24, X23, [X31 + 0x10]
	0x03470E10 MOV X3, X31
	0x03470E14 LDR X30, [X31], #0x40
	0x03470E18 B 0x35F987C
	0x03470E1C BL 0x1C16F20
	0x03470E20 STP X30, X25, [X31 - 0x40]!
	0x03470E24 STP X24, X23, [X31 + 0x10]
	0x03470E28 STP X22, X21, [X31 + 0x20]
	0x03470E2C STP X20, X19, [X31 + 0x30]
	0x03470E30 ADRP X21, 0xF6D000
	0x03470E34 LDRB W8, [X21 + 0x7F0]
	0x03470E38 MOV X20, X1
	0x03470E3C MOV X19, X0
	0x03470E40 TBNZ X8, 0x0, 0x3470EA0
	0x03470E44 ADRP X0, 0xC86000
	0x03470E48 LDR X0, [X0 + 0x258]
	0x03470E4C BL 0x1C16CF4
	0x03470E50 ADRP X0, 0xC83000
	0x03470E54 LDR X0, [X0 + 0xE00]
	0x03470E58 BL 0x1C16CF4
	0x03470E5C ADRP X0, 0xC86000
	0x03470E60 LDR X0, [X0 + 0x260]
	0x03470E64 BL 0x1C16CF4
	0x03470E68 ADRP X0, 0xC83000
	0x03470E6C LDR X0, [X0 + 0xE18]
	0x03470E70 BL 0x1C16CF4
	0x03470E74 ADRP X0, 0xC86000
	0x03470E78 LDR X0, [X0 + 0x268]
	0x03470E7C BL 0x1C16CF4
	0x03470E80 ADRP X0, 0xC86000
	0x03470E84 LDR X0, [X0 + 0x270]
	0x03470E88 BL 0x1C16CF4
	0x03470E8C ADRP X0, 0xC86000
	0x03470E90 LDR X0, [X0 + 0x278]
	0x03470E94 BL 0x1C16CF4
	0x03470E98 MOVZ W8, 0x1
	0x03470E9C STRB W8, [X21 + 0x7F0]
	0x03470EA0 MOV X0, X19
	0x03470EA4 MOV X1, X31
	0x03470EA8 BL 0x35F978C
	0x03470EAC STR X20, [X19 + 0x28]
	0x03470EB0 CBZ X20, 0x34710D8
	0x03470EB4 MOV X0, X20
	0x03470EB8 MOV X1, X31
	0x03470EBC BL 0x35F6E80
	0x03470EC0 CBZ X0, 0x34710D8
	0x03470EC4 ADRP X23, 0xC83000
	0x03470EC8 LDR X23, [X23 + 0xE00]
	0x03470ECC MOV X1, X31
	0x03470ED0 BL 0x35F6A98
	0x03470ED4 MOV X20, X0
	0x03470ED8 CBZ X0, 0x34710DC
	0x03470EDC ADRP X24, 0xC83000
	0x03470EE0 ADRP X25, 0xC86000
	0x03470EE4 LDR X24, [X24 + 0xE18]
	0x03470EE8 LDR X25, [X25 + 0x260]
	0x03470EEC LDR X8, [X20]
	0x03470EF0 LDR X1, [X24]
	0x03470EF4 LDRH W9, [X8 + 0x12E]
	0x03470EF8 CBZ X9, 0x3470F1C
	0x03470EFC LDR X10, [X8 + 0xB0]
	0x03470F00 ADD X10, X10, 0x8
	0x03470F04 LDUR X11, [X10 - 0x8]
	0x03470F08 CMP X11, X1
	0x03470F0C B.EQ 0x3470F2C
	0x03470F10 SUBS X9, X9, 0x1
	0x03470F14 ADD X10, X10, 0x10
	0x03470F18 B.NE 0x3470F04
	0x03470F1C MOV X0, X20
	0x03470F20 MOV W2, W31
	0x03470F24 BL 0x1C5C788
	0x03470F28 B 0x3470F38
	0x03470F2C LDRSW X9, [X10]
	0x03470F30 ADD X8, X8, X9, 0x4, LSL
	0x03470F34 ADD X0, X8, 0x138
	0x03470F38 LDP X8, X1, [X0]
	0x03470F3C MOV X0, X20
	0x03470F40 BLR X8
	0x03470F44 TBZ X0, 0x0, 0x3470FCC
	0x03470F48 LDR X8, [X20]
	0x03470F4C LDR X1, [X25]
	0x03470F50 LDRH W9, [X8 + 0x12E]
	0x03470F54 CBZ X9, 0x3470F78
	0x03470F58 LDR X10, [X8 + 0xB0]
	0x03470F5C ADD X10, X10, 0x8
	0x03470F60 LDUR X11, [X10 - 0x8]
	0x03470F64 CMP X11, X1
	0x03470F68 B.EQ 0x3470F88
	0x03470F6C SUBS X9, X9, 0x1
	0x03470F70 ADD X10, X10, 0x10
	0x03470F74 B.NE 0x3470F60
	0x03470F78 MOV X0, X20
	0x03470F7C MOV W2, W31
	0x03470F80 BL 0x1C5C788
	0x03470F84 B 0x3470F94
	0x03470F88 LDRSW X9, [X10]
	0x03470F8C ADD X8, X8, X9, 0x4, LSL
	0x03470F90 ADD X0, X8, 0x138
	0x03470F94 LDP X8, X1, [X0]
	0x03470F98 MOV X0, X20
	0x03470F9C BLR X8
	0x03470FA0 MOV X21, X0
	0x03470FA4 MOV X22, X1
	0x03470FA8 MOV X0, X19
	0x03470FAC MOV X1, X31
	0x03470FB0 BL 0x35F6E80
	0x03470FB4 CBZ X0, 0x34710D4
	0x03470FB8 MOV X1, X21
	0x03470FBC MOV X2, X22
	0x03470FC0 MOV X3, X31
	0x03470FC4 BL 0x35F6F44
	0x03470FC8 B 0x3470EEC
	0x03470FCC MOV X21, X31
	0x03470FD0 CBZ X20, 0x347102C
	0x03470FD4 LDR X8, [X20]
	0x03470FD8 LDR X1, [X23]
	0x03470FDC LDRH W9, [X8 + 0x12E]
	0x03470FE0 CBZ X9, 0x3471004
	0x03470FE4 LDR X10, [X8 + 0xB0]
	0x03470FE8 ADD X10, X10, 0x8
	0x03470FEC LDUR X11, [X10 - 0x8]
	0x03470FF0 CMP X11, X1
	0x03470FF4 B.EQ 0x3471014
	0x03470FF8 SUBS X9, X9, 0x1
	0x03470FFC ADD X10, X10, 0x10
	0x03471000 B.NE 0x3470FEC
	0x03471004 MOV X0, X20
	0x03471008 MOV W2, W31
	0x0347100C BL 0x1C5C788
	0x03471010 B 0x3471020
	0x03471014 LDRSW X9, [X10]
	0x03471018 ADD X8, X8, X9, 0x4, LSL
	0x0347101C ADD X0, X8, 0x138
	0x03471020 LDP X8, X1, [X0]
	0x03471024 MOV X0, X20
	0x03471028 BLR X8
	0x0347102C CBNZ X21, 0x34710E0
	0x03471030 MOV X0, X19
	0x03471034 MOV X1, X31
	0x03471038 BL 0x35F6E80
	0x0347103C CBZ X0, 0x34710D8
	0x03471040 MOV X1, X31
	0x03471044 BL 0x36010B4
	0x03471048 CBZ X0, 0x34710D8
	0x0347104C ADRP X9, 0xC85000
	0x03471050 ADRP X10, 0xC85000
	0x03471054 LDR X8, [X0]
	0x03471058 LDR X9, [X9 + 0x258]
	0x0347105C LDR X10, [X10 + 0x278]
	0x03471060 MOV X19, X0
	0x03471064 LDR X1, [X9]
	0x03471068 LDRH W9, [X8 + 0x12E]
	0x0347106C LDR X20, [X10]
	0x03471070 CBZ X9, 0x3471094
	0x03471074 LDR X10, [X8 + 0xB0]
	0x03471078 ADD X10, X10, 0x8
	0x0347107C LDUR X11, [X10 - 0x8]
	0x03471080 CMP X11, X1
	0x03471084 B.EQ 0x34710A4
	0x03471088 SUBS X9, X9, 0x1
	0x0347108C ADD X10, X10, 0x10
	0x03471090 B.NE 0x347107C
	0x03471094 MOVZ W2, 0x2
	0x03471098 MOV X0, X19
	0x0347109C BL 0x1C5C788
	0x034710A0 B 0x34710B4
	0x034710A4 LDR W9, [X10]
	0x034710A8 ADD W9, W9, 0x2
	0x034710AC ADD X8, X8, W9, 0x4, SXTW
	0x034710B0 ADD X0, X8, 0x138
	0x034710B4 LDP X3, X2, [X0]
	0x034710B8 MOV X0, X19
	0x034710BC MOV X1, X20
	0x034710C0 LDP X20, X19, [X31 + 0x30]
	0x034710C4 LDP X22, X21, [X31 + 0x20]
	0x034710C8 LDP X24, X23, [X31 + 0x10]
	0x034710CC LDP X30, X25, [X31], #0x40
	0x034710D0 BR X3
	0x034710D4 BL 0x1C16F20
	0x034710D8 BL 0x1C16F20
	0x034710DC BL 0x1C16F20
	0x034710E0 MOV X0, X21
	0x034710E4 BL 0x1C16F18
	0x034710E8 B 0x34710FC
	0x034710EC B 0x34710FC
	0x034710F0 B 0x34710FC
	0x034710F4 B 0x34710FC
	0x034710F8 B 0x34710FC
	0x034710FC CMP W1, 0x1
	0x03471100 B.NE 0x3471114
	0x03471104 BL 0x3EB1AD0
	0x03471108 LDR X21, [X0]
	0x0347110C BL 0x3EB1AE0
	0x03471110 B 0x3470FD0
	0x03471114 MOV X19, X0
	0x03471118 MOV X21, X31
	0x0347111C B 0x3471124
	0x03471120 MOV X19, X0
	0x03471124 CBZ X20, 0x3471180
	0x03471128 LDR X8, [X20]
	0x0347112C LDR X1, [X23]
	0x03471130 LDRH W9, [X8 + 0x12E]
	0x03471134 CBZ X9, 0x3471158
	0x03471138 LDR X10, [X8 + 0xB0]
	0x0347113C ADD X10, X10, 0x8
	0x03471140 LDUR X11, [X10 - 0x8]
	0x03471144 CMP X11, X1
	0x03471148 B.EQ 0x3471168
	0x0347114C SUBS X9, X9, 0x1
	0x03471150 ADD X10, X10, 0x10
	0x03471154 B.NE 0x3471140
	0x03471158 MOV X0, X20
	0x0347115C MOV W2, W31
	0x03471160 BL 0x1C5C788
	0x03471164 B 0x3471174
	0x03471168 LDRSW X9, [X10]
	0x0347116C ADD X8, X8, X9, 0x4, LSL
	0x03471170 ADD X0, X8, 0x138
	0x03471174 LDP X8, X1, [X0]
	0x03471178 MOV X0, X20
	0x0347117C BLR X8
	0x03471180 CBNZ X21, 0x347118C
	0x03471184 MOV X0, X19
	0x03471188 BL 0x1D2C690
	0x0347118C MOV X0, X21
	0x03471190 BL 0x1C16F18
	0x03471194 BL 0x1990590
	0x03471198 SUB X31, X31, 0x90
	0x0347119C STR X30, [X31 + 0x60]
	0x034711A0 STP X22, X21, [X31 + 0x70]
	0x034711A4 STP X20, X19, [X31 + 0x80]
	0x034711A8 ADRP X22, 0xF6C000
	0x034711AC ADRP X21, 0xC85000
	0x034711B0 LDRB W8, [X22 + 0x7F1]
	0x034711B4 LDR X21, [X21 + 0x280]
	0x034711B8 MOV X19, X1
	0x034711BC MOV X20, X0
	0x034711C0 TBNZ X8, 0x0, 0x34711E4
	0x034711C4 ADRP X0, 0xCBF000
	0x034711C8 LDR X0, [X0 + 0x7C0]
	0x034711CC BL 0x1C16CF4
	0x034711D0 ADRP X0, 0xC85000
	0x034711D4 LDR X0, [X0 + 0x280]
	0x034711D8 BL 0x1C16CF4
	0x034711DC MOVZ W8, 0x1
	0x034711E0 STRB W8, [X22 + 0x7F1]
	0x034711E4 LDR X0, [X21]
	0x034711E8 MOVI V0.2D, 0x0
	0x034711EC STP V0, V0, [X31 + 0x40]
	0x034711F0 STP V0, V0, [X31 + 0x20]
	0x034711F4 ADRP X21, 0xCBF000
	0x034711F8 LDR W8, [X0 + 0xE0]
	0x034711FC LDR X21, [X21 + 0x7C0]
	0x03471200 CBNZ W8, 0x3471208
	0x03471204 BL 0x1C16DFC
	0x03471208 ADD X8, X31, 0x8
	0x0347120C MOV X0, X31
	0x03471210 BL 0x32C4770
	0x03471214 LDUR V0, [X31 + 0x8]
	0x03471218 LDR X9, [X31 + 0x18]
	0x0347121C LDR X2, [X21]
	0x03471220 ADD X8, X31, 0x20
	0x03471224 STP X19, X20, [X31 + 0x40]
	0x03471228 ORR X20, X8, 0xF
	0x0347122C MOVN W10, 0x0
	0x03471230 ADD X1, X31, 0x20
	0x03471234 MOV X0, X20
	0x03471238 STUR V0, [X31 + 0x28]
	0x0347123C STR X9, [X31 + 0x38]
	0x03471240 STR W10, [X31 + 0x20]
	0x03471244 BL 0x21946B8
	0x03471248 MOV X0, X20
	0x0347124C MOV X1, X31
	0x03471250 BL 0x32C47F8
	0x03471254 LDP X20, X19, [X31 + 0x80]
	0x03471258 LDP X22, X21, [X31 + 0x70]
	0x0347125C LDR X30, [X31 + 0x60]
	0x03471260 ADD X31, X31, 0x90
	0x03471264 RET
	0x03471268 MOVN X8, 0x0
	0x0347126C MOV W0, W31
	0x03471270 STR X8, [X1]
	0x03471274 RET
	0x03471278 SUB X31, X31, 0x40
	0x0347127C STP X30, X23, [X31 + 0x10]
	0x03471280 STP X22, X21, [X31 + 0x20]
	0x03471284 STP X20, X19, [X31 + 0x30]
	0x03471288 ADRP X20, 0xF6C000
	0x0347128C LDRB W8, [X20 + 0x7F2]
	0x03471290 MOV X19, X0
	0x03471294 TBNZ X8, 0x0, 0x34712D0
	0x03471298 ADRP X0, 0xCBF000
	0x0347129C LDR X0, [X0 + 0x7C8]
	0x034712A0 BL 0x1C16CF4
	0x034712A4 ADRP X0, 0xC85000
	0x034712A8 LDR X0, [X0 + 0x280]
	0x034712AC BL 0x1C16CF4
	0x034712B0 ADRP X0, 0xC85000
	0x034712B4 LDR X0, [X0 + 0x298]
	0x034712B8 BL 0x1C16CF4
	0x034712BC ADRP X0, 0xC82000
	0x034712C0 LDR X0, [X0 + 0xE00]
	0x034712C4 BL 0x1C16CF4
	0x034712C8 MOVZ W8, 0x1
	0x034712CC STRB W8, [X20 + 0x7F2]
	0x034712D0 STR X31, [X31 + 0x8]
	0x034712D4 LDR W23, [X19]
	0x034712D8 CBZ W23, 0x3471388
	0x034712DC ADRP X8, 0xC85000
	0x034712E0 LDR X8, [X8 + 0x298]
	0x034712E4 LDP X21, X22, [X19 + 0x20]
	0x034712E8 LDR X0, [X8]
	0x034712EC BL 0x1C16F10
	0x034712F0 MOV X20, X0
	0x034712F4 MOVZ W2, 0x1
	0x034712F8 MOVZ W3, 0x1
	0x034712FC MOV X1, X21
	0x03471300 MOV X4, X31
	0x03471304 BL 0x3666F4C
	0x03471308 STR X20, [X19 + 0x30]
	0x0347130C CBZ X22, 0x3471478
	0x03471310 LDR X0, [X22 + 0x28]
	0x03471314 CBZ X0, 0x347147C
	0x03471318 MOV X1, X20
	0x0347131C MOV X2, X31
	0x03471320 BL 0x35F9084
	0x03471324 CBZ X0, 0x3471480
	0x03471328 MOV X1, X31
	0x0347132C BL 0x33ED394
	0x03471330 STR X0, [X31 + 0x8]
	0x03471334 ADD X0, X31, 0x8
	0x03471338 MOV X1, X31
	0x0347133C BL 0x32C3A80
	0x03471340 TBNZ X0, 0x0, 0x347139C
	0x03471344 STR W31, [X19]
	0x03471348 LDR X8, [X31 + 0x8]
	0x0347134C STR X8, [X19 + 0x38]
	0x03471350 ADRP X8, 0xC85000
	0x03471354 LDR X8, [X8 + 0x280]
	0x03471358 LDR X0, [X8]
	0x0347135C LDR W8, [X0 + 0xE0]
	0x03471360 CBNZ W8, 0x3471368
	0x03471364 BL 0x1C16DFC
	0x03471368 ADRP X8, 0xCBF000
	0x0347136C LDR X8, [X8 + 0x7C8]
	0x03471370 ADD X0, X19, 0x8
	0x03471374 LDR X3, [X8]
	0x03471378 ADD X1, X31, 0x8
	0x0347137C MOV X2, X19
	0x03471380 BL 0x218AD8C
	0x03471384 B 0x347145C
	0x03471388 LDR X8, [X19 + 0x38]
	0x0347138C MOVN W23, 0x0
	0x03471390 STR X8, [X31 + 0x8]
	0x03471394 STR X31, [X19 + 0x38]
	0x03471398 STR W23, [X19]
	0x0347139C ADD X0, X31, 0x8
	0x034713A0 MOV X1, X31
	0x034713A4 BL 0x32C3B4C
	0x034713A8 MOV X20, X31
	0x034713AC MOVZ W22, 0x6
	0x034713B0 TBZ X23, 0x1F, 0x347141C
	0x034713B4 LDR X21, [X19 + 0x30]
	0x034713B8 CBZ X21, 0x347141C
	0x034713BC ADRP X10, 0xC82000
	0x034713C0 LDR X8, [X21]
	0x034713C4 LDR X10, [X10 + 0xE00]
	0x034713C8 LDRH W9, [X8 + 0x12E]
	0x034713CC LDR X1, [X10]
	0x034713D0 CBZ X9, 0x34713F4
	0x034713D4 LDR X10, [X8 + 0xB0]
	0x034713D8 ADD X10, X10, 0x8
	0x034713DC LDUR X11, [X10 - 0x8]
	0x034713E0 CMP X11, X1
	0x034713E4 B.EQ 0x3471404
	0x034713E8 SUBS X9, X9, 0x1
	0x034713EC ADD X10, X10, 0x10
	0x034713F0 B.NE 0x34713DC
	0x034713F4 MOV X0, X21
	0x034713F8 MOV W2, W31
	0x034713FC BL 0x1C5C788
	0x03471400 B 0x3471410
	0x03471404 LDRSW X9, [X10]
	0x03471408 ADD X8, X8, X9, 0x4, LSL
	0x0347140C ADD X0, X8, 0x138
	0x03471410 LDP X8, X1, [X0]
	0x03471414 MOV X0, X21
	0x03471418 BLR X8
	0x0347141C CBNZ X20, 0x3471470
	0x03471420 CMP W22, 0x6
	0x03471424 B.EQ 0x347142C
	0x03471428 CBNZ W22, 0x347145C
	0x0347142C MOVN W8, 0x1
	0x03471430 STR X31, [X19 + 0x30]
	0x03471434 STR W8, [X19], #0x8
	0x03471438 ADRP X8, 0xC85000
	0x0347143C LDR X8, [X8 + 0x280]
	0x03471440 LDR X0, [X8]
	0x03471444 LDR W8, [X0 + 0xE0]
	0x03471448 CBNZ W8, 0x3471450
	0x0347144C BL 0x1C16DFC
	0x03471450 MOV X0, X19
	0x03471454 MOV X1, X31
	0x03471458 BL 0x32C4864
	0x0347145C LDP X20, X19, [X31 + 0x30]
	0x03471460 LDP X22, X21, [X31 + 0x20]
	0x03471464 LDP X30, X23, [X31 + 0x10]
	0x03471468 ADD X31, X31, 0x40
	0x0347146C RET
	0x03471470 MOV X0, X20
	0x03471474 BL 0x1C16F18
	0x03471478 BL 0x1C16F20
	0x0347147C BL 0x1C16F20
	0x03471480 BL 0x1C16F20
	0x03471484 MOV X22, X1
	0x03471488 MOV X21, X0
	0x0347148C MOV W23, W31
	0x03471490 B 0x34714B4
	0x03471494 B 0x34714AC
	0x03471498 B 0x34714AC
	0x0347149C B 0x34714AC
	0x034714A0 B 0x34714AC
	0x034714A4 B 0x34714AC
	0x034714A8 B 0x3471564
	0x034714AC MOV X22, X1
	0x034714B0 MOV X21, X0
	0x034714B4 CMP W22, 0x1
	0x034714B8 B.NE 0x34714D8
	0x034714BC MOV X0, X21
	0x034714C0 BL 0x3EB1AD0
	0x034714C4 LDR X20, [X0]
	0x034714C8 BL 0x3EB1AE0
	0x034714CC MOV W22, W31
	0x034714D0 TBZ X23, 0x1F, 0x347141C
	0x034714D4 B 0x34713B4
	0x034714D8 MOV X20, X31
	0x034714DC TBZ X23, 0x1F, 0x3471548
	0x034714E0 LDR X23, [X19 + 0x30]
	0x034714E4 CBZ X23, 0x3471548
	0x034714E8 ADRP X10, 0xC82000
	0x034714EC LDR X8, [X23]
	0x034714F0 LDR X10, [X10 + 0xE00]
	0x034714F4 LDRH W9, [X8 + 0x12E]
	0x034714F8 LDR X1, [X10]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xF6E000
	015 Move W8, [X20+2027]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {95}
	021 Move X0, 0xCC1000
	022 Move X0, [X0+1848]
	023 Call 0x1C17CF4
	024 Move X0, 0xCC1000
	025 Move X0, [X0+1856]
	026 Call 0x1C17CF4
	027 Move X0, 0xCC1000
	028 Move X0, [X0+1864]
	029 Call 0x1C17CF4
	030 Move X0, 0xCC0000
	031 Move X0, [X0+1376]
	032 Call 0x1C17CF4
	033 Move X0, 0xCBF000
	034 Move X0, [X0+1720]
	035 Call 0x1C17CF4
	036 Move X0, 0xC86000
	037 Move X0, [X0+2576]
	038 Call 0x1C17CF4
	039 Move X0, 0xC85000
	040 Move X0, [X0+2544]
	041 Call 0x1C17CF4
	042 Move X0, 0xCC1000
	043 Move X0, [X0+1872]
	044 Call 0x1C17CF4
	045 Move X0, 0xCC1000
	046 Move X0, [X0+1880]
	047 Call 0x1C17CF4
	048 Move X0, 0xC85000
	049 Move X0, [X0+2072]
	050 Call 0x1C17CF4
	051 Move X0, 0xCC1000
	052 Move X0, [X0+1888]
	053 Call 0x1C17CF4
	054 Move X0, 0xCBF000
	055 Move X0, [X0+672]
	056 Call 0x1C17CF4
	057 Move X0, 0xCBF000
	058 Move X0, [X0+680]
	059 Call 0x1C17CF4
	060 Move X0, 0xCC0000
	061 Move X0, [X0+1992]
	062 Call 0x1C17CF4
	063 Move X0, 0xCC0000
	064 Move X0, [X0+2000]
	065 Call 0x1C17CF4
	066 Move X0, 0xCC1000
	067 Move X0, [X0+1896]
	068 Call 0x1C17CF4
	069 Move X0, 0xCC1000
	070 Move X0, [X0+1904]
	071 Call 0x1C17CF4
	072 Move X0, 0xC85000
	073 Move X0, [X0+2096]
	074 Call 0x1C17CF4
	075 Move X0, 0xC85000
	076 Move X0, [X0+2104]
	077 Call 0x1C17CF4
	078 Move X0, 0xCC1000
	079 Move X0, [X0+1912]
	080 Call 0x1C17CF4
	081 Move X0, 0xC85000
	082 Move X0, [X0+2112]
	083 Call 0x1C17CF4
	084 Move X0, 0xCC1000
	085 Move X0, [X0+1920]
	086 Call 0x1C17CF4
	087 Move X0, 0xCC1000
	088 Move X0, [X0+1928]
	089 Call 0x1C17CF4
	090 Move X0, 0xCC1000
	091 Move X0, [X0+1936]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X20+2027], W8
	095 Move [X31+32], X31
	096 Move [X31+40], X31
	097 Move [X31+24], X31
	098 Move X25, 0xCBF000
	099 Move W8, [X19]
	100 Move X20, [X19+32]
	101 Move X25, [X25+1720]
	102 Compare W8, 0
	103 JumpIfEqual {112}
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, [X19+88]
	106 Move TEMP, 0
	107 Not TEMP
	108 Move W9, TEMP
	109 Move [X31+24], X8
	110 Move [X19+88], X31
	111 Move [X19], W9
	112 Move X8, [X19+80]
	113 Move TEMP, 0
	114 Not TEMP
	115 Move W9, TEMP
	116 Move [X31+32], X8
	117 Move [X19+80], X31
	118 Move [X19], W9
	119 Move X8, 0xC85000
	120 Move X8, [X8+2096]
	121 Add X0, X31, 32
	122 Move X1, [X8]
	123 Call TaskAwaiter`1<Object>.GetResult, X0
	124 Move X8, 0xCC1000
	125 Move X8, [X8+1936]
	126 Move X0, [X8]
	127 Call 0x1C17F10
	128 Move X21, X0
	129 Move X1, X31
	130 Call <>c__DisplayClass126_0..ctor, X0
	131 Move [X19+64], X21
	132 Compare X21, 0
	133 JumpIfEqual {619}
	134 Move X8, [X19+32]
	135 Move [X21+16], X8
	136 Move X8, [X19+40]
	137 Move [X21+24], X8
	138 Move X8, [X19+48]
	139 Move [X21+40], X8
	140 Compare X20, 0
	141 JumpIfEqual {620}
	142 Move W8, [X20+16]
	143 Compare W8, 0
	144 JumpIfEqual {280}
	145 Move X8, [X19+64]
	146 Compare X8, 0
	147 JumpIfEqual {621}
	148 Move X21, [X8+24]
	149 Compare X21, 0
	150 JumpIfEqual {622}
	151 Move X23, 0xC85000
	152 Move X8, [X21]
	153 Move X23, [X23+2072]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Move X1, [X23]
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move W2, 7
	165 Move X0, X21
	166 Call 0x1C5D788
	167 Move W9, [X10]
	168 Add W9, W9, 7
	169 Add X8, X8, W9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X1, [X0+8]
	173 Move X0, X21
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move X1, X31
	176 Call String.IsNullOrEmpty, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {280}
	181 Move X8, [X19+64]
	182 Compare X8, 0
	183 JumpIfEqual {623}
	184 Move X9, 0xC85000
	185 Move X9, [X9+2544]
	186 Move X21, [X8+24]
	187 Move X0, [X9]
	188 Move W9, [X0+224]
	189 Compare W9, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X0, X31
	193 Call DateTime.get_UtcNow
	194 Move X22, 0xC86000
	195 Move X22, [X22+2576]
	196 Move X8, X0
	197 Move [X31+40], X8
	198 Move X0, [X22]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {204}
	202 Call 0x1C17DFC
	203 Move X0, [X22]
	204 Move X8, [X0+184]
	205 Move X1, [X8]
	206 Add X0, X31, 40
	207 Move X2, X31
	208 Call DateTime.Add, X0, X1
	209 Compare X21, 0
	210 JumpIfEqual {624}
	211 Move X8, [X21]
	212 Move X1, [X23]
	213 Move X22, X0
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 11
	224 Move X0, X21
	225 Call 0x1C5D788
	226 Move W9, [X10]
	227 Add W9, W9, 11
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X2, [X0+8]
	232 Move X0, X21
	233 Move X1, X22
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {280}
	239 Move X8, [X19+64]
	240 Compare X8, 0
	241 JumpIfEqual {625}
	242 Move X1, [X8+24]
	243 Move X3, [X19+56]
	244 Move X4, [X8+40]
	245 Move X0, X20
	246 Move X2, X31
	247 Move X5, X31
	248 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	249 Compare X0, 0
	250 JumpIfEqual {626}
	251 Move X8, 0xC85000
	252 Move X8, [X8+2112]
	253 Move X1, [X8]
	254 Call Task`1<Object>.GetAwaiter, X0
	255 Move X8, 0xC85000
	256 Move X8, [X8+2104]
	257 Move [X31+32], X0
	258 Move X1, [X8]
	259 Add X0, X31, 32
	260 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {119}
	265 Move [X19], W31
	266 Move X8, [X31+32]
	267 Move [X19+80], X8
	268 Move X0, [X25]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X8, 0xCC1000
	274 Move X8, [X8+1864]
	275 Add X0, X19, 8
	276 Move X3, [X8]
	277 Add X1, X31, 32
	278 Move X2, X19
	279 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	280 Move X23, [X19+72]
	281 Compare X23, 0
	282 JumpIfEqual {612}
	283 Move X8, 0xCBF000
	284 Move X8, [X8+680]
	285 Move X22, [X19+64]
	286 Move X0, [X8]
	287 Call 0x1C17F10
	288 Move X8, 0xCBF000
	289 Move X8, [X8+672]
	290 Move W1, [X23+24]
	291 Move X21, X0
	292 Move X2, [X8]
	293 Call List`1<Object>..ctor, X0, X1
	294 Compare X22, 0
	295 JumpIfEqual {613}
	296 Move [X22+32], X21
	297 Move X24, [X19+72]
	298 Compare X24, 0
	299 JumpIfEqual {614}
	300 Move W8, [X24+24]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X27, 0xCC1000
	303 Move X28, 0xCC1000
	304 Move X29, 0xCC1000
	305 Move X27, [X27+1848]
	306 Move X28, [X28+1880]
	307 Move X29, [X29+1888]
	308 Move W26, W31
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X8, [X19+64]
	311 Compare X8, 0
	312 JumpIfEqual {607}
	313 Add X9, X24, W26
	314 Move X21, [X8+32]
	315 Move X23, [X9+32]
	316 Move X0, [X27]
	317 Call 0x1C17F10
	318 Move X22, X0
	319 Move X1, X31
	320 Call ApiWriteStorageObject..ctor, X0
	321 Compare X23, 0
	322 JumpIfEqual {608}
	323 Move X8, [X23]
	324 Move X1, [X28]
	325 NotImplemented "Instruction LDRH not yet implemented."
	326 Compare X9, 0
	327 JumpIfEqual {334}
	328 Move X10, [X8+176]
	329 Add X10, X10, 8
	330 NotImplemented "Instruction LDUR not yet implemented."
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Subtract X9, X9, 1
	333 Add X10, X10, 16
	334 Move X0, X23
	335 Move W2, W31
	336 Call 0x1C5D788
	337 NotImplemented "Instruction LDRSW not yet implemented."
	338 Add X8, X8, X9
	339 Add X0, X8, 312
	340 Move X8, [X0]
	341 Move X1, [X0+8]
	342 Move X0, X23
	343 NotImplemented "Instruction BLR not yet implemented."
	344 Compare X22, 0
	345 JumpIfEqual {606}
	346 Move [X22+16], X0
	347 Move X8, [X23]
	348 Move X1, [X28]
	349 NotImplemented "Instruction LDRH not yet implemented."
	350 Compare X9, 0
	351 JumpIfEqual {358}
	352 Move X10, [X8+176]
	353 Add X10, X10, 8
	354 NotImplemented "Instruction LDUR not yet implemented."
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Subtract X9, X9, 1
	357 Add X10, X10, 16
	358 Move W2, 1
	359 Move X0, X23
	360 Call 0x1C5D788
	361 Move W9, [X10]
	362 Add W9, W9, 1
	363 Add X8, X8, W9
	364 Add X0, X8, 312
	365 Move X8, [X0]
	366 Move X1, [X0+8]
	367 Move X0, X23
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Move [X22+24], X0
	370 Move X8, [X23]
	371 Move X1, [X28]
	372 NotImplemented "Instruction LDRH not yet implemented."
	373 Compare X9, 0
	374 JumpIfEqual {381}
	375 Move X10, [X8+176]
	376 Add X10, X10, 8
	377 NotImplemented "Instruction LDUR not yet implemented."
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Subtract X9, X9, 1
	380 Add X10, X10, 16
	381 Move W2, 2
	382 Move X0, X23
	383 Call 0x1C5D788
	384 Move W9, [X10]
	385 Add W9, W9, 2
	386 Add X8, X8, W9
	387 Add X0, X8, 312
	388 Move X8, [X0]
	389 Move X1, [X0+8]
	390 Move X0, X23
	391 NotImplemented "Instruction BLR not yet implemented."
	392 Move [X22+32], W0
	393 Move X8, [X23]
	394 Move X1, [X28]
	395 NotImplemented "Instruction LDRH not yet implemented."
	396 Compare X9, 0
	397 JumpIfEqual {404}
	398 Move X10, [X8+176]
	399 Add X10, X10, 8
	400 NotImplemented "Instruction LDUR not yet implemented."
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Subtract X9, X9, 1
	403 Add X10, X10, 16
	404 Move W2, 3
	405 Move X0, X23
	406 Call 0x1C5D788
	407 Move W9, [X10]
	408 Add W9, W9, 3
	409 Add X8, X8, W9
	410 Add X0, X8, 312
	411 Move X8, [X0]
	412 Move X1, [X0+8]
	413 Move X0, X23
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Move [X22+36], W0
	416 Move X8, [X23]
	417 Move X1, [X28]
	418 NotImplemented "Instruction LDRH not yet implemented."
	419 Compare X9, 0
	420 JumpIfEqual {427}
	421 Move X10, [X8+176]
	422 Add X10, X10, 8
	423 NotImplemented "Instruction LDUR not yet implemented."
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Subtract X9, X9, 1
	426 Add X10, X10, 16
	427 Move W2, 4
	428 Move X0, X23
	429 Call 0x1C5D788
	430 Move W9, [X10]
	431 Add W9, W9, 4
	432 Add X8, X8, W9
	433 Add X0, X8, 312
	434 Move X8, [X0]
	435 Move X1, [X0+8]
	436 Move X0, X23
	437 NotImplemented "Instruction BLR not yet implemented."
	438 Move [X22+40], X0
	439 Move X8, [X23]
	440 Move X1, [X28]
	441 NotImplemented "Instruction LDRH not yet implemented."
	442 Compare X9, 0
	443 JumpIfEqual {450}
	444 Move X10, [X8+176]
	445 Add X10, X10, 8
	446 NotImplemented "Instruction LDUR not yet implemented."
	447 NotImplemented "Instruction CMP not yet implemented."
	448 Subtract X9, X9, 1
	449 Add X10, X10, 16
	450 Move W2, 5
	451 Move X0, X23
	452 Call 0x1C5D788
	453 Move W9, [X10]
	454 Add W9, W9, 5
	455 Add X8, X8, W9
	456 Add X0, X8, 312
	457 Move X8, [X0]
	458 Move X1, [X0+8]
	459 Move X0, X23
	460 NotImplemented "Instruction BLR not yet implemented."
	461 Move [X22+48], X0
	462 Compare X21, 0
	463 JumpIfEqual {610}
	464 Move W10, [X21+28]
	465 Move X8, [X21+16]
	466 Move X9, [X29]
	467 Add W10, W10, 1
	468 Move [X21+28], W10
	469 Compare X8, 0
	470 JumpIfEqual {611}
	471 NotImplemented "Instruction LDRSW not yet implemented."
	472 Move W11, [X8+24]
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Add W9, W10, 1
	475 Add X8, X8, X10
	476 Move [X21+24], W9
	477 Move [X8+32], X22
	478 Move X8, [X9+32]
	479 Move X8, [X8+192]
	480 Move X2, [X8+112]
	481 Move X0, X21
	482 Move X1, X22
	483 Call List`1<Object>.AddWithResize, X0, X1
	484 Move W8, [X24+24]
	485 Add W26, W26, 1
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Compare X20, 0
	488 JumpIfEqual {615}
	489 Move X8, 0xCC0000
	490 Move X8, [X8+1872]
	491 Move X21, [X20+88]
	492 Move X23, [X19+64]
	493 Move X0, [X8]
	494 Call 0x1C17F10
	495 Move X8, 0xCC0000
	496 Move X8, [X8+1928]
	497 Move X22, X0
	498 Move X2, [X8]
	499 Move X1, X23
	500 Move X3, X31
	501 Call Func`1<Object>..ctor, X0, X1, X2
	502 Move X8, [X19+64]
	503 Compare X8, 0
	504 JumpIfEqual {616}
	505 Move X9, 0xCBF000
	506 Move X23, [X19+56]
	507 Move X9, [X9+1992]
	508 Compare X23, 0
	509 JumpIfNotEqual {511}
	510 Move X23, [X20+24]
	511 Move X20, [X8+24]
	512 Move X1, [X8+40]
	513 Move X2, [X9]
	514 Move [X31+8], X31
	515 Move [X31+16], X31
	516 Add X0, X31, 8
	517 Call Nullable`1<CancellationToken>..ctor, X0, X1
	518 Move X8, 0xCBF000
	519 Move X8, [X8+2000]
	520 Move X0, [X8]
	521 Call 0x1C17F10
	522 Move X3, [X31+8]
	523 Move X4, [X31+16]
	524 Move X24, X0
	525 Move X1, X20
	526 Move X2, X23
	527 Call RetryHistory..ctor, X0, X1, X2, X3
	528 Compare X21, 0
	529 JumpIfEqual {617}
	530 Move X8, 0xCC0000
	531 Move X8, [X8+1896]
	532 Move X3, [X8]
	533 Move X0, X21
	534 Move X1, X22
	535 Move X2, X24
	536 Call 0x2244230, X0, X1, X2
	537 Compare X0, 0
	538 JumpIfEqual {618}
	539 Move X8, 0xCC0000
	540 Move X8, [X8+1920]
	541 Move X1, [X8]
	542 Call Task`1<Object>.GetAwaiter, X0
	543 Move X8, 0xCC0000
	544 Move X8, [X8+1912]
	545 Move [X31+24], X0
	546 Move X1, [X8]
	547 Add X0, X31, 24
	548 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	549 Move TEMP, X0
	550 And TEMP, TEMP, 1
	551 Compare TEMP, 1
	552 JumpIfNotEqual {576}
	553 Move X8, 0xCC0000
	554 Move X8, [X8+1904]
	555 Add X0, X31, 24
	556 Move X1, [X8]
	557 Call TaskAwaiter`1<Object>.GetResult, X0
	558 Move TEMP, 1
	559 Not TEMP
	560 Move W8, TEMP
	561 Move [X19], W8
	562 Move [X19+64], X31
	563 Move X20, X0
	564 Move X0, [X25]
	565 Move X21, 0xCBF000
	566 Add X19, X19, 8
	567 Move W8, [X0+224]
	568 Move X21, [X21+1376]
	569 Compare W8, 0
	570 JumpIfNotEqual {572}
	571 Call 0x1C17DFC
	572 Move X2, [X21]
	573 Move X0, X19
	574 Move X1, X20
	575 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	576 Move W8, 1
	577 Move [X19], W8
	578 Move X8, [X31+24]
	579 Move [X19+88], X8
	580 Move X0, [X25]
	581 Move W8, [X0+224]
	582 Compare W8, 0
	583 JumpIfNotEqual {585}
	584 Call 0x1C17DFC
	585 Move X8, 0xCC0000
	586 Move X8, [X8+1856]
	587 Add X0, X19, 8
	588 Move X3, [X8]
	589 Add X1, X31, 24
	590 Move X2, X19
	591 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	592 Move X20, [X31+128]
	593 Move X19, [X31+136]
	594 Move X22, [X31+112]
	595 Move X21, [X31+120]
	596 Move X24, [X31+96]
	597 Move X23, [X31+104]
	598 Move X26, [X31+80]
	599 Move X25, [X31+88]
	600 Move X28, [X31+64]
	601 Move X27, [X31+72]
	602 Move X29, [X31+48]
	603 Move X30, [X31+56]
	604 Add X31, X31, 144
	605 Return 
	606 Call 0x1C17F20
	607 Call 0x1C17F20
	608 Call 0x1C17F20
	609 Call 0x1C17F28
	610 Call 0x1C17F20
	611 Call 0x1C17F20
	612 Call 0x1C17F20
	613 Call 0x1C17F20
	614 Call 0x1C17F20
	615 Call 0x1C17F20
	616 Call 0x1C17F20
	617 Call 0x1C17F20
	618 Call 0x1C17F20
	619 Call 0x1C17F20
	620 Call 0x1C17F20
	621 Call 0x1C17F20
	622 Call 0x1C17F20
	623 Call 0x1C17F20
	624 Call 0x1C17F20
	625 Call 0x1C17F20
	626 Call 0x1C17F20
	627 Move X20, X0
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Move X0, X20
	630 Call 0x3EB2AD0
	631 Move X20, X0
	632 Move X0, 0xC83000
	633 Move X0, [X0+2000]
	634 Call 0x1C17D08
	635 Move X8, [X20]
	636 Move X1, [X8]
	637 Call 0x1C18270
	638 Move TEMP, X0
	639 And TEMP, TEMP, 1
	640 Compare TEMP, 1
	641 JumpIfNotEqual {663}
	642 Move X20, [X20]
	643 Call 0x3EB2AE0
	644 Move TEMP, 1
	645 Not TEMP
	646 Move W8, TEMP
	647 Move [X19+64], X31
	648 Move [X19+8], W8
	649 Move X0, 0xCBE000
	650 Move X0, [X0+1720]
	651 Call 0x1C17D08
	652 Move W8, [X0+224]
	653 Compare W8, 0
	654 JumpIfNotEqual {656}
	655 Call 0x1C17DFC
	656 Move X0, 0xCBF000
	657 Move X0, [X0+1400]
	658 Call 0x1C17D08
	659 Move X2, X0
	660 Move X0, X19
	661 Move X1, X20
	662 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	663 Move W0, 8
	664 Call 0x3EB2AF0
	665 Move X8, [X20]
	666 Move [X0], X8
	667 Move X1, 0xA44000
	668 Add X1, X1, 3672
	669 Move X2, X31
	670 Call 0x3EB2B00
	671 Move X20, X0
	672 Call 0x3EB2AE0
	673 Move X0, X20
	674 Call 0x1D2D690
	675 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034714FC CBZ X9, 0x3471520
	0x03471500 LDR X10, [X8 + 0xB0]
	0x03471504 ADD X10, X10, 0x8
	0x03471508 LDUR X11, [X10 - 0x8]
	0x0347150C CMP X11, X1
	0x03471510 B.EQ 0x3471530
	0x03471514 SUBS X9, X9, 0x1
	0x03471518 ADD X10, X10, 0x10
	0x0347151C B.NE 0x3471508
	0x03471520 MOV X0, X23
	0x03471524 MOV W2, W31
	0x03471528 BL 0x1C5C788
	0x0347152C B 0x347153C
	0x03471530 LDRSW X9, [X10]
	0x03471534 ADD X8, X8, X9, 0x4, LSL
	0x03471538 ADD X0, X8, 0x138
	0x0347153C LDP X8, X1, [X0]
	0x03471540 MOV X0, X23
	0x03471544 BLR X8
	0x03471548 CBZ X20, 0x347156C
	0x0347154C MOV X0, X20
	0x03471550 BL 0x1C16F18
	0x03471554 MOV X22, X1
	0x03471558 MOV X21, X0
	0x0347155C TBZ X23, 0x1F, 0x3471548
	0x03471560 B 0x34714E0
	0x03471564 MOV X22, X1
	0x03471568 MOV X21, X0
	0x0347156C CMP W22, 0x1
	0x03471570 B.NE 0x3471600
	0x03471574 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF6D000
	007 Move X21, 0xCBE000
	008 Move W8, [X22+2028]
	009 Move X21, [X21+1720]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCBF000
	017 Move X0, [X0+1408]
	018 Call 0x1C17CF4
	019 Move X0, 0xCBE000
	020 Move X0, [X0+1720]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2028], W8
	024 Move X0, [X21]
	025 Move X21, 0xCBF000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1408]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

