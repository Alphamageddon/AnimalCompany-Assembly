Type: Nakama.RetryInvoker/<InvokeWithRetry>d__3

Method: System.Void MoveNext()

Disassembly:
	0x034794E0 LDR W8, [X20 + 0x18]
	0x034794E4 CMP W8, 0x8
	0x034794E8 B.LS 0x3479548
	0x034794EC STR X19, [X20 + 0x60]
	0x034794F0 ADRP X8, 0xCB7000
	0x034794F4 LDR X8, [X8 + 0xB20]
	0x034794F8 MOV X1, X20
	0x034794FC MOV X2, X31
	0x03479500 LDR X0, [X8]
	0x03479504 BL 0x3227C5C
	0x03479508 LDP X20, X19, [X31 + 0x80]
	0x0347950C LDP X22, X21, [X31 + 0x70]
	0x03479510 LDP X24, X23, [X31 + 0x60]
	0x03479514 LDP X26, X25, [X31 + 0x50]
	0x03479518 LDP X28, X27, [X31 + 0x40]
	0x0347951C LDP X29, X30, [X31 + 0x30]
	0x03479520 ADD X31, X31, 0x90
	0x03479524 RET
	0x03479528 BL 0x1C16F20
	0x0347952C BL 0x1C16F28
	0x03479530 BL 0x1C16F20
	0x03479534 BL 0x1C16F28
	0x03479538 BL 0x1C16F28
	0x0347953C BL 0x1C16F28
	0x03479540 BL 0x1C16F28
	0x03479544 BL 0x1C16F28
	0x03479548 BL 0x1C16F28
	0x0347954C BL 0x1C16F44
	0x03479550 MOV X1, X31
	0x03479554 BL 0x1C16DEC
	0x03479558 BL 0x1C16F20
	0x0347955C MOV X0, X22
	0x03479560 BL 0x1C16F18
	0x03479564 B 0x3479590
	0x03479568 B 0x3479590
	0x0347956C B 0x3479590
	0x03479570 B 0x3479590
	0x03479574 B 0x3479590
	0x03479578 B 0x3479590
	0x0347957C B 0x3479590
	0x03479580 LDR X21, [X31 + 0x8]
	0x03479584 B 0x3479590
	0x03479588 B 0x3479590
	0x0347958C B 0x3479590
	0x03479590 ADRP X23, 0xC7C000
	0x03479594 LDR X23, [X23 + 0xA60]
	0x03479598 CMP W1, 0x1
	0x0347959C B.NE 0x34795B0
	0x034795A0 BL 0x3EB1AD0
	0x034795A4 LDR X22, [X0]
	0x034795A8 BL 0x3EB1AE0
	0x034795AC B 0x3479270
	0x034795B0 MOV X19, X0
	0x034795B4 MOV X22, X31
	0x034795B8 B 0x34795C0
	0x034795BC MOV X19, X0
	0x034795C0 CBZ X20, 0x3479624
	0x034795C4 LDR X8, [X20]
	0x034795C8 ADRP X10, 0xC7A000
	0x034795CC LDRH W9, [X8 + 0x12E]
	0x034795D0 LDR X10, [X10 + 0xE00]
	0x034795D4 LDR X1, [X10]
	0x034795D8 CBZ X9, 0x34795FC
	0x034795DC LDR X10, [X8 + 0xB0]
	0x034795E0 ADD X10, X10, 0x8
	0x034795E4 LDUR X11, [X10 - 0x8]
	0x034795E8 CMP X11, X1
	0x034795EC B.EQ 0x347960C
	0x034795F0 SUBS X9, X9, 0x1
	0x034795F4 ADD X10, X10, 0x10
	0x034795F8 B.NE 0x34795E4
	0x034795FC MOV X0, X20
	0x03479600 MOV W2, W31
	0x03479604 BL 0x1C5C788
	0x03479608 B 0x3479618
	0x0347960C LDRSW X9, [X10]
	0x03479610 ADD X8, X8, X9, 0x4, LSL
	0x03479614 ADD X0, X8, 0x138
	0x03479618 LDP X8, X1, [X0]
	0x0347961C MOV X0, X20
	0x03479620 BLR X8
	0x03479624 CBNZ X22, 0x3479630
	0x03479628 MOV X0, X19
	0x0347962C BL 0x1D2C690
	0x03479630 MOV X0, X22
	0x03479634 BL 0x1C16F18
	0x03479638 BL 0x1990590
	0x0347963C STR D8, [X31 - 0x30]!
	0x03479640 STP X30, X21, [X31 + 0x10]
	0x03479644 STP X20, X19, [X31 + 0x20]
	0x03479648 ADRP X20, 0xF64000
	0x0347964C ADRP X21, 0xC83000
	0x03479650 LDRB W8, [X20 + 0x857]
	0x03479654 LDR X21, [X21 + 0x8D8]
	0x03479658 MOV X19, X0
	0x0347965C TBNZ X8, 0x0, 0x347968C
	0x03479660 ADRP X0, 0xC83000
	0x03479664 LDR X0, [X0 + 0x8D8]
	0x03479668 BL 0x1C16CF4
	0x0347966C ADRP X0, 0xC83000
	0x03479670 LDR X0, [X0 + 0x9E8]
	0x03479674 BL 0x1C16CF4
	0x03479678 ADRP X0, 0xC7A000
	0x0347967C LDR X0, [X0 + 0x5A8]
	0x03479680 BL 0x1C16CF4
	0x03479684 MOVZ W8, 0x1
	0x03479688 STRB W8, [X20 + 0x857]
	0x0347968C LDR X0, [X21]
	0x03479690 MOVZ W1, 0x1
	0x03479694 BL 0x1C16D6C
	0x03479698 CBZ X0, 0x34797B0
	0x0347969C LDR W8, [X0 + 0x18]
	0x034796A0 MOV X1, X0
	0x034796A4 CBZ W8, 0x34797B4
	0x034796A8 MOVZ W8, 0x2E
	0x034796AC STRH W8, [X1 + 0x20]
	0x034796B0 CBZ X19, 0x34797B0
	0x034796B4 MOV X0, X19
	0x034796B8 MOV X2, X31
	0x034796BC BL 0x3229E68
	0x034796C0 CBZ X0, 0x34797B0
	0x034796C4 LDR W8, [X0 + 0x18]
	0x034796C8 CMP W8, 0x1
	0x034796CC B.LS 0x34797B4
	0x034796D0 LDR X19, [X0 + 0x28]
	0x034796D4 CBZ X19, 0x34797B0
	0x034796D8 ADRP X8, 0xC7A000
	0x034796DC LDR X8, [X8 + 0x5A8]
	0x034796E0 ADRP X21, 0xC83000
	0x034796E4 LDR W20, [X19 + 0x10]
	0x034796E8 LDR X0, [X8]
	0x034796EC LDR W8, [X0 + 0xE0]
	0x034796F0 LDR X21, [X21 + 0x9E8]
	0x034796F4 CBNZ W8, 0x34796FC
	0x034796F8 BL 0x1C16DFC
	0x034796FC LDR X0, [X21]
	0x03479700 SCVTF D0, W20
	0x03479704 FMOV D1, 0.25
	0x03479708 FMUL D0, D0, D1
	0x0347970C LDR W8, [X0 + 0xE0]
	0x03479710 FRINTP D0, D0
	0x03479714 FMOV D1, 4
	0x03479718 FMUL D8, D0, D1
	0x0347971C CBNZ W8, 0x3479724
	0x03479720 BL 0x1C16DFC
	0x03479724 MOV V0.16B, V8.16B
	0x03479728 MOV X0, X31
	0x0347972C BL 0x331EFAC
	0x03479730 MOV W1, W0
	0x03479734 MOVZ W2, 0x3D
	0x03479738 MOV X0, X19
	0x0347973C MOV X3, X31
	0x03479740 BL 0x3228A68
	0x03479744 CBZ X0, 0x34797B0
	0x03479748 MOVZ W1, 0x2D
	0x0347974C MOVZ W2, 0x2B
	0x03479750 MOV X3, X31
	0x03479754 BL 0x32296D0
	0x03479758 CBZ X0, 0x34797B0
	0x0347975C MOVZ W1, 0x5F
	0x03479760 MOVZ W2, 0x2F
	0x03479764 MOV X3, X31
	0x03479768 BL 0x32296D0
	0x0347976C MOV X20, X0
	0x03479770 MOV X0, X31
	0x03479774 BL 0x3241948
	0x03479778 MOV X19, X0
	0x0347977C MOV X0, X20
	0x03479780 MOV X1, X31
	0x03479784 BL 0x3322D04
	0x03479788 CBZ X19, 0x34797B0
	0x0347978C LDR X8, [X19]
	0x03479790 MOV X1, X0
	0x03479794 MOV X0, X19
	0x03479798 LDP X20, X19, [X31 + 0x20]
	0x0347979C LDR X3, [X8 + 0x378]
	0x034797A0 LDR X2, [X8 + 0x380]
	0x034797A4 LDP X30, X21, [X31 + 0x10]
	0x034797A8 LDR V8, [X31], #0x30
	0x034797AC BR X3
	0x034797B0 BL 0x1C16F20
	0x034797B4 BL 0x1C16F28
	0x034797B8 STP X30, X21, [X31 - 0x20]!
	0x034797BC STP X20, X19, [X31 + 0x10]
	0x034797C0 ADRP X21, 0xF64000
	0x034797C4 LDRB W8, [X21 + 0x856]
	0x034797C8 MOV X19, X1
	0x034797CC MOV X20, X0
	0x034797D0 TBNZ X8, 0x0, 0x34797E8
	0x034797D4 ADRP X0, 0xCB6000
	0x034797D8 LDR X0, [X0 + 0xA70]
	0x034797DC BL 0x1C16CF4
	0x034797E0 MOVZ W8, 0x1
	0x034797E4 STRB W8, [X21 + 0x856]
	0x034797E8 MOV X0, X20
	0x034797EC MOV X1, X31
	0x034797F0 BL 0x32277A8
	0x034797F4 MOV X21, X31
	0x034797F8 TBNZ X0, 0x0, 0x3479820
	0x034797FC ADRP X8, 0xCB6000
	0x03479800 LDR X8, [X8 + 0xA70]
	0x03479804 LDR X0, [X8]
	0x03479808 BL 0x1C16F10
	0x0347980C MOV X1, X20
	0x03479810 MOV X2, X19
	0x03479814 MOV W3, W31
	0x03479818 MOV X21, X0
	0x0347981C BL 0x34684B8
	0x03479820 LDP X20, X19, [X31 + 0x10]
	0x03479824 MOV X0, X21
	0x03479828 LDP X30, X21, [X31], #0x20
	0x0347982C RET
	0x03479830 SUB X31, X31, 0x30
	0x03479834 STR X30, [X31 + 0x10]
	0x03479838 STP X20, X19, [X31 + 0x20]
	0x0347983C ADRP X20, 0xF64000
	0x03479840 ADRP X19, 0xCB6000
	0x03479844 LDRB W8, [X20 + 0x858]
	0x03479848 LDR X19, [X19 + 0xA70]
	0x0347984C TBNZ X8, 0x0, 0x3479864
	0x03479850 ADRP X0, 0xCB6000
	0x03479854 LDR X0, [X0 + 0xA70]
	0x03479858 BL 0x1C16CF4
	0x0347985C MOVZ W8, 0x1
	0x03479860 STRB W8, [X20 + 0x858]
	0x03479864 ADD X0, X31, 0x18
	0x03479868 MOVZ W1, 0x7B2
	0x0347986C MOVZ W2, 0x1
	0x03479870 MOVZ W3, 0x1
	0x03479874 MOVZ W7, 0x1
	0x03479878 MOV W4, W31
	0x0347987C MOV W5, W31
	0x03479880 MOV W6, W31
	0x03479884 STR X31, [X31 + 0x18]
	0x03479888 STR X31, [X31]
	0x0347988C BL 0x335F47C
	0x03479890 LDR X8, [X19]
	0x03479894 LDP X30, X9, [X31 + 0x10]
	0x03479898 LDP X20, X19, [X31 + 0x20]
	0x0347989C LDR X8, [X8 + 0xB8]
	0x034798A0 STR X9, [X8]
	0x034798A4 ADD X31, X31, 0x30
	0x034798A8 RET
	0x034798AC STR X30, [X31 - 0x30]!
	0x034798B0 STP X22, X21, [X31 + 0x10]
	0x034798B4 STP X20, X19, [X31 + 0x20]
	0x034798B8 ADRP X21, 0xF64000
	0x034798BC LDRB W8, [X21 + 0x859]
	0x034798C0 MOV X19, X1
	0x034798C4 MOV X20, X0
	0x034798C8 TBNZ X8, 0x0, 0x34798E0
	0x034798CC ADRP X0, 0xC7B000
	0x034798D0 LDR X0, [X0 + 0xE70]
	0x034798D4 BL 0x1C16CF4
	0x034798D8 MOVZ W8, 0x1
	0x034798DC STRB W8, [X21 + 0x859]
	0x034798E0 ADRP X22, 0xC7B000
	0x034798E4 LDR X21, [X20 + 0x18]!
	0x034798E8 LDR X22, [X22 + 0xE70]
	0x034798EC MOV X0, X21
	0x034798F0 MOV X1, X19
	0x034798F4 MOV X2, X31
	0x034798F8 BL 0x33C0DE4
	0x034798FC MOV X8, X0
	0x03479900 CBZ X0, 0x3479914
	0x03479904 LDR X1, [X22]
	0x03479908 LDR X9, [X8]
	0x0347990C CMP X9, X1
	0x03479910 B.NE 0x3479940
	0x03479914 MOV X0, X20
	0x03479918 MOV X1, X8
	0x0347991C MOV X2, X21
	0x03479920 BL 0x1C24138
	0x03479924 CMP X21, X0
	0x03479928 MOV X21, X0
	0x0347992C B.NE 0x34798EC
	0x03479930 LDP X20, X19, [X31 + 0x20]
	0x03479934 LDP X22, X21, [X31 + 0x10]
	0x03479938 LDR X30, [X31], #0x30
	0x0347993C RET
	0x03479940 MOV X0, X8
	0x03479944 BL 0x1C171E0
	0x03479948 STR X30, [X31 - 0x30]!
	0x0347994C STP X22, X21, [X31 + 0x10]
	0x03479950 STP X20, X19, [X31 + 0x20]
	0x03479954 ADRP X21, 0xF64000
	0x03479958 LDRB W8, [X21 + 0x85A]
	0x0347995C MOV X19, X1
	0x03479960 MOV X20, X0
	0x03479964 TBNZ X8, 0x0, 0x347997C
	0x03479968 ADRP X0, 0xC7B000
	0x0347996C LDR X0, [X0 + 0xE70]
	0x03479970 BL 0x1C16CF4
	0x03479974 MOVZ W8, 0x1
	0x03479978 STRB W8, [X21 + 0x85A]
	0x0347997C ADRP X22, 0xC7B000
	0x03479980 LDR X21, [X20 + 0x18]!
	0x03479984 LDR X22, [X22 + 0xE70]
	0x03479988 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF65000
	009 Move W8, [X20+2122]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xCB8000
	016 Move X0, [X0+2808]
	017 Call 0x1C17CF4
	018 Move X0, 0xC7E000
	019 Move X0, [X0+640]
	020 Call 0x1C17CF4
	021 Move X0, 0xC7B000
	022 Move X0, [X0+2000]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2122], W8
	026 Move [X31+8], X31
	027 Move X23, 0xC7E000
	028 Move W8, [X19]
	029 Move X20, [X19+48]
	030 Move X23, [X23+640]
	031 Compare W8, 0
	032 JumpIfEqual {49}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X19+72]
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W9, TEMP
	039 Move [X31+8], X8
	040 Move [X19+72], X31
	041 Move [X19], W9
	042 Move X8, [X19+72]
	043 Move TEMP, 0
	044 Not TEMP
	045 Move W9, TEMP
	046 Move [X31+8], X8
	047 Move [X19+72], X31
	048 Move [X19], W9
	049 Move X8, [X19+72]
	050 Move TEMP, 0
	051 Not TEMP
	052 Move W9, TEMP
	053 Move [X31+8], X8
	054 Move [X19+72], X31
	055 Move [X19], W9
	056 Move X8, [X19+32]
	057 Move [X19+64], W31
	058 Compare X8, 0
	059 JumpIfEqual {230}
	060 Move X0, [X8+64]
	061 Move X1, [X8+40]
	062 Move X9, [X8+24]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X0, 0
	065 JumpIfEqual {231}
	066 Move X1, X31
	067 Call Task.GetAwaiter, X0
	068 Move [X31+8], X0
	069 Add X0, X31, 8
	070 Move X1, X31
	071 Call TaskAwaiter.get_IsCompleted, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {183}
	076 Add X0, X31, 8
	077 Move X1, X31
	078 Call TaskAwaiter.GetResult, X0
	079 Move W8, [X19+64]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X21, [X19+56]
	082 Compare X21, 0
	083 JumpIfEqual {95}
	084 Move X9, 0xC7B000
	085 Move X9, [X9+2000]
	086 Move X8, [X21]
	087 Move X1, [X9]
	088 Move W10, [X8+304]
	089 Move W9, [X1+304]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, [X8+200]
	092 Add X8, X8, X9
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X19+40]
	096 Compare X8, 0
	097 JumpIfEqual {234}
	098 Move X8, [X8+16]
	099 Compare X8, 0
	100 JumpIfEqual {222}
	101 Compare X20, 0
	102 JumpIfEqual {235}
	103 Move X8, [X20+16]
	104 Compare X8, 0
	105 JumpIfEqual {236}
	106 Move X0, [X8+64]
	107 Move X9, [X8+24]
	108 Move X2, [X8+40]
	109 Move X1, X21
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {222}
	115 Move X1, [X19+40]
	116 Move X2, X21
	117 Call RetryInvoker.Backoff, X0, X1, X2
	118 Compare X0, 0
	119 JumpIfEqual {237}
	120 Move X1, X31
	121 Call Task.GetAwaiter, X0
	122 Move [X31+8], X0
	123 Add X0, X31, 8
	124 Move X1, X31
	125 Call TaskAwaiter.get_IsCompleted, X0
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {198}
	130 Add X0, X31, 8
	131 Move X1, X31
	132 Call TaskAwaiter.GetResult, X0
	133 Compare X20, 0
	134 JumpIfEqual {228}
	135 Move X1, [X19+32]
	136 Move X2, [X19+40]
	137 Move X0, X20
	138 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	139 Compare X0, 0
	140 JumpIfEqual {229}
	141 Move X1, X31
	142 Call Task.GetAwaiter, X0
	143 Move [X31+8], X0
	144 Add X0, X31, 8
	145 Move X1, X31
	146 Call TaskAwaiter.get_IsCompleted, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {167}
	151 Add X0, X31, 8
	152 Move X1, X31
	153 Call TaskAwaiter.GetResult, X0
	154 Move TEMP, 1
	155 Not TEMP
	156 Move W8, TEMP
	157 Move [X19+56], X31
	158 Move [X19+8], W8
	159 Move X0, [X23]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, X19
	165 Move X1, X31
	166 Call AsyncTaskMethodBuilder.SetResult, X0
	167 Move W8, 2
	168 Move [X19], W8
	169 Move X8, [X31+8]
	170 Move [X19+72], X8
	171 Move X0, [X23]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Move X8, 0xCB8000
	177 Move X8, [X8+2808]
	178 Add X0, X19, 8
	179 Move X3, [X8]
	180 Add X1, X31, 8
	181 Move X2, X19
	182 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	183 Move [X19], W31
	184 Move X8, [X31+8]
	185 Move [X19+72], X8
	186 Move X0, [X23]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move X8, 0xCB8000
	192 Move X8, [X8+2808]
	193 Add X0, X19, 8
	194 Move X3, [X8]
	195 Add X1, X31, 8
	196 Move X2, X19
	197 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	198 Move W8, 1
	199 Move [X19], W8
	200 Move X8, [X31+8]
	201 Move [X19+72], X8
	202 Move X0, [X23]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X8, 0xCB8000
	208 Move X8, [X8+2808]
	209 Add X0, X19, 8
	210 Move X3, [X8]
	211 Add X1, X31, 8
	212 Move X2, X19
	213 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	214 Move X20, [X31+48]
	215 Move X19, [X31+56]
	216 Move X22, [X31+32]
	217 Move X21, [X31+40]
	218 Move X30, [X31+16]
	219 Move X23, [X31+24]
	220 Add X31, X31, 64
	221 Return 
	222 Move X0, 0xCB8000
	223 Move X0, [X0+2816]
	224 Call 0x1C17D08
	225 Move X1, X0
	226 Move X0, X21
	227 Call 0x1C17DEC
	228 Call 0x1C17F20
	229 Call 0x1C17F20
	230 Call 0x1C17F20
	231 Call 0x1C17F20
	232 Move X0, X21
	233 Call 0x1C181E0
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 Move X22, X1
	239 Move X21, X0
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X0, X21
	242 Call 0x3EB2AD0
	243 Move X21, X0
	244 Move X0, 0xC7B000
	245 Move X0, [X0+2000]
	246 Call 0x1C17D08
	247 Move X8, [X21]
	248 Move X1, [X8]
	249 Call 0x1C18270
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {259}
	254 Move X21, [X21]
	255 Call 0x3EB2AE0
	256 Move W8, 1
	257 Move [X19+56], X21
	258 Move [X19+64], W8
	259 Move W0, 8
	260 Call 0x3EB2AF0
	261 Move X8, [X21]
	262 Move [X0], X8
	263 Move X1, 0xA3C000
	264 Add X1, X1, 3672
	265 Move X2, X31
	266 Call 0x3EB2B00
	267 Move X22, X1
	268 Move X21, X0
	269 Call 0x3EB2AE0
	270 Move X22, X1
	271 Move X21, X0
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X0, X21
	274 Call 0x3EB2AD0
	275 Move X20, X0
	276 Move X0, 0xC7B000
	277 Move X0, [X0+2000]
	278 Call 0x1C17D08
	279 Move X8, [X20]
	280 Move X1, [X8]
	281 Call 0x1C18270
	282 Move TEMP, X0
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfNotEqual {303}
	286 Move X20, [X20]
	287 Call 0x3EB2AE0
	288 Move TEMP, 1
	289 Not TEMP
	290 Move W8, TEMP
	291 Move [X19+8], W8
	292 Move X0, 0xC7E000
	293 Move X0, [X0+640]
	294 Call 0x1C17D08
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move X0, X19
	300 Move X1, X20
	301 Move X2, X31
	302 Call AsyncTaskMethodBuilder.SetException, X0, X1
	303 Move W0, 8
	304 Call 0x3EB2AF0
	305 Move X8, [X20]
	306 Move [X0], X8
	307 Move X1, 0xA3C000
	308 Add X1, X1, 3672
	309 Move X2, X31
	310 Call 0x3EB2B00
	311 Move X21, X0
	312 Call 0x3EB2AE0
	313 Move X0, X21
	314 Call 0x1D2D690
	315 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0347998C MOV X1, X19
	0x03479990 MOV X2, X31
	0x03479994 BL 0x33C0FDC
	0x03479998 MOV X8, X0
	0x0347999C CBZ X0, 0x34799B0
	0x034799A0 LDR X1, [X22]
	0x034799A4 LDR X9, [X8]
	0x034799A8 CMP X9, X1
	0x034799AC B.NE 0x34799DC
	0x034799B0 MOV X0, X20
	0x034799B4 MOV X1, X8
	0x034799B8 MOV X2, X21
	0x034799BC BL 0x1C24138
	0x034799C0 CMP X21, X0
	0x034799C4 MOV X21, X0
	0x034799C8 B.NE 0x3479988
	0x034799CC LDP X20, X19, [X31 + 0x20]
	0x034799D0 LDP X22, X21, [X31 + 0x10]
	0x034799D4 LDR X30, [X31], #0x30
	0x034799D8 RET
	0x034799DC MOV X0, X8
	0x034799E0 BL 0x1C171E0
	0x034799E4 STR X30, [X31 - 0x30]!
	0x034799E8 STP X22, X21, [X31 + 0x10]
	0x034799EC STP X20, X19, [X31 + 0x20]
	0x034799F0 ADRP X21, 0xF64000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF65000
	007 Move X22, 0xC7E000
	008 Move W8, [X21+2123]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC7E000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2123], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

