Type: Nakama.Client/<LinkFacebookAsync>d__77

Method: System.Void MoveNext()

Disassembly:
	0x0345AFE0 CBZ X8, 0x345B1F0
	0x0345AFE4 LDR X1, [X8 + 0x18]
	0x0345AFE8 LDR X3, [X19 + 0x40]
	0x0345AFEC LDR X4, [X8 + 0x28]
	0x0345AFF0 MOV X0, X20
	0x0345AFF4 MOV X2, X31
	0x0345AFF8 MOV X5, X31
	0x0345AFFC BL 0x34440A8
	0x0345B000 CBZ X0, 0x345B1F4
	0x0345B004 ADRP X8, 0xC99000
	0x0345B008 LDR X8, [X8 + 0x840]
	0x0345B00C LDR X1, [X8]
	0x0345B010 BL 0x269F5D0
	0x0345B014 ADRP X8, 0xC99000
	0x0345B018 LDR X8, [X8 + 0x838]
	0x0345B01C STR X0, [X31 + 0x20]
	0x0345B020 LDR X1, [X8]
	0x0345B024 ADD X0, X31, 0x20
	0x0345B028 BL 0x2677430
	0x0345B02C TBNZ X0, 0x0, 0x345AE24
	0x0345B030 STR W31, [X19]
	0x0345B034 LDR X8, [X31 + 0x20]
	0x0345B038 STR X8, [X19 + 0x50]
	0x0345B03C LDR X0, [X25]
	0x0345B040 LDR W8, [X0 + 0xE0]
	0x0345B044 CBNZ W8, 0x345B04C
	0x0345B048 BL 0x1C16DFC
	0x0345B04C ADRP X8, 0xCD4000
	0x0345B050 LDR X8, [X8 + 0xF58]
	0x0345B054 ADD X0, X19, 0x8
	0x0345B058 LDR X3, [X8]
	0x0345B05C ADD X1, X31, 0x20
	0x0345B060 MOV X2, X19
	0x0345B064 BL 0x2188B28
	0x0345B068 B 0x345B1B0
	0x0345B06C CBZ X20, 0x345B1D4
	0x0345B070 ADRP X8, 0xCA0000
	0x0345B074 LDR X8, [X8 + 0x818]
	0x0345B078 LDR X21, [X20 + 0x58]
	0x0345B07C LDR X23, [X19 + 0x48]
	0x0345B080 LDR X0, [X8]
	0x0345B084 BL 0x1C16F10
	0x0345B088 ADRP X8, 0xCD4000
	0x0345B08C LDR X8, [X8 + 0xF68]
	0x0345B090 MOV X22, X0
	0x0345B094 LDR X2, [X8]
	0x0345B098 MOV X1, X23
	0x0345B09C MOV X3, X31
	0x0345B0A0 BL 0x2D27AA8
	0x0345B0A4 LDR X8, [X19 + 0x48]
	0x0345B0A8 CBZ X8, 0x345B1C8
	0x0345B0AC ADRP X9, 0xCD4000
	0x0345B0B0 LDR X23, [X19 + 0x40]
	0x0345B0B4 LDR X9, [X9 + 0x7C8]
	0x0345B0B8 CBNZ X23, 0x345B0C0
	0x0345B0BC LDR X23, [X20 + 0x18]
	0x0345B0C0 LDR X20, [X8 + 0x18]
	0x0345B0C4 LDR X1, [X8 + 0x28]
	0x0345B0C8 LDR X2, [X9]
	0x0345B0CC STP X31, X31, [X31 + 0x8]
	0x0345B0D0 ADD X0, X31, 0x8
	0x0345B0D4 BL 0x242E368
	0x0345B0D8 ADRP X8, 0xCD4000
	0x0345B0DC LDR X8, [X8 + 0x7D0]
	0x0345B0E0 LDR X0, [X8]
	0x0345B0E4 BL 0x1C16F10
	0x0345B0E8 LDP X3, X4, [X31 + 0x8]
	0x0345B0EC MOV X24, X0
	0x0345B0F0 MOV X1, X20
	0x0345B0F4 MOV X2, X23
	0x0345B0F8 MOV X5, X31
	0x0345B0FC BL 0x3465404
	0x0345B100 CBZ X21, 0x345B1CC
	0x0345B104 MOV X0, X21
	0x0345B108 MOV X1, X22
	0x0345B10C MOV X2, X24
	0x0345B110 MOV X3, X31
	0x0345B114 BL 0x3465B68
	0x0345B118 CBZ X0, 0x345B1D0
	0x0345B11C MOV X1, X31
	0x0345B120 BL 0x33ED394
	0x0345B124 STR X0, [X31 + 0x18]
	0x0345B128 ADD X0, X31, 0x18
	0x0345B12C MOV X1, X31
	0x0345B130 BL 0x32C3A80
	0x0345B134 TBZ X0, 0x0, 0x345B174
	0x0345B138 ADD X0, X31, 0x18
	0x0345B13C MOV X1, X31
	0x0345B140 BL 0x32C3B4C
	0x0345B144 MOVN W8, 0x1
	0x0345B148 STR W8, [X19]
	0x0345B14C STR X31, [X19 + 0x48]
	0x0345B150 LDR X0, [X25]
	0x0345B154 ADD X19, X19, 0x8
	0x0345B158 LDR W8, [X0 + 0xE0]
	0x0345B15C CBNZ W8, 0x345B164
	0x0345B160 BL 0x1C16DFC
	0x0345B164 MOV X0, X19
	0x0345B168 MOV X1, X31
	0x0345B16C BL 0x32C4864
	0x0345B170 B 0x345B1B0
	0x0345B174 MOVZ W8, 0x1
	0x0345B178 STR W8, [X19]
	0x0345B17C LDR X8, [X31 + 0x18]
	0x0345B180 STR X8, [X19 + 0x58]
	0x0345B184 LDR X0, [X25]
	0x0345B188 LDR W8, [X0 + 0xE0]
	0x0345B18C CBNZ W8, 0x345B194
	0x0345B190 BL 0x1C16DFC
	0x0345B194 ADRP X8, 0xCD4000
	0x0345B198 LDR X8, [X8 + 0xF60]
	0x0345B19C ADD X0, X19, 0x8
	0x0345B1A0 LDR X3, [X8]
	0x0345B1A4 ADD X1, X31, 0x18
	0x0345B1A8 MOV X2, X19
	0x0345B1AC BL 0x218A1EC
	0x0345B1B0 LDP X20, X19, [X31 + 0x60]
	0x0345B1B4 LDP X22, X21, [X31 + 0x50]
	0x0345B1B8 LDP X24, X23, [X31 + 0x40]
	0x0345B1BC LDP X30, X25, [X31 + 0x30]
	0x0345B1C0 ADD X31, X31, 0x70
	0x0345B1C4 RET
	0x0345B1C8 BL 0x1C16F20
	0x0345B1CC BL 0x1C16F20
	0x0345B1D0 BL 0x1C16F20
	0x0345B1D4 BL 0x1C16F20
	0x0345B1D8 BL 0x1C16F20
	0x0345B1DC BL 0x1C16F20
	0x0345B1E0 BL 0x1C16F20
	0x0345B1E4 BL 0x1C16F20
	0x0345B1E8 BL 0x1C16F20
	0x0345B1EC BL 0x1C16F20
	0x0345B1F0 BL 0x1C16F20
	0x0345B1F4 BL 0x1C16F20
	0x0345B1F8 B 0x345B26C
	0x0345B1FC B 0x345B26C
	0x0345B200 B 0x345B26C
	0x0345B204 B 0x345B26C
	0x0345B208 B 0x345B26C
	0x0345B20C B 0x345B26C
	0x0345B210 B 0x345B26C
	0x0345B214 B 0x345B26C
	0x0345B218 B 0x345B26C
	0x0345B21C B 0x345B26C
	0x0345B220 B 0x345B26C
	0x0345B224 B 0x345B26C
	0x0345B228 B 0x345B26C
	0x0345B22C B 0x345B26C
	0x0345B230 B 0x345B26C
	0x0345B234 B 0x345B26C
	0x0345B238 B 0x345B26C
	0x0345B23C B 0x345B26C
	0x0345B240 B 0x345B26C
	0x0345B244 B 0x345B26C
	0x0345B248 B 0x345B26C
	0x0345B24C B 0x345B26C
	0x0345B250 B 0x345B26C
	0x0345B254 B 0x345B26C
	0x0345B258 B 0x345B26C
	0x0345B25C B 0x345B26C
	0x0345B260 B 0x345B26C
	0x0345B264 B 0x345B26C
	0x0345B268 B 0x345B26C
	0x0345B26C MOV X20, X0
	0x0345B270 CMP W1, 0x1
	0x0345B274 B.NE 0x345B308
	0x0345B278 MOV X0, X20
	0x0345B27C BL 0x3EB1AD0
	0x0345B280 MOV X20, X0
	0x0345B284 ADRP X0, 0xC98000
	0x0345B288 LDR X0, [X0 + 0x7D0]
	0x0345B28C BL 0x1C16D08
	0x0345B290 LDR X8, [X20]
	0x0345B294 LDR X1, [X8]
	0x0345B298 BL 0x1C17270
	0x0345B29C TBZ X0, 0x0, 0x345B2E0
	0x0345B2A0 LDR X20, [X20]
	0x0345B2A4 BL 0x3EB1AE0
	0x0345B2A8 MOVN W8, 0x1
	0x0345B2AC STR X31, [X19 + 0x48]
	0x0345B2B0 STR W8, [X19], #0x8
	0x0345B2B4 ADRP X0, 0xC9B000
	0x0345B2B8 LDR X0, [X0 + 0x280]
	0x0345B2BC BL 0x1C16D08
	0x0345B2C0 LDR W8, [X0 + 0xE0]
	0x0345B2C4 CBNZ W8, 0x345B2CC
	0x0345B2C8 BL 0x1C16DFC
	0x0345B2CC MOV X0, X19
	0x0345B2D0 MOV X1, X20
	0x0345B2D4 MOV X2, X31
	0x0345B2D8 BL 0x32C4908
	0x0345B2DC B 0x345B1B0
	0x0345B2E0 MOVZ W0, 0x8
	0x0345B2E4 BL 0x3EB1AF0
	0x0345B2E8 LDR X8, [X20]
	0x0345B2EC STR X8, [X0]
	0x0345B2F0 ADRP X1, 0xA59000
	0x0345B2F4 ADD X1, X1, 0xE58
	0x0345B2F8 MOV X2, X31
	0x0345B2FC BL 0x3EB1B00
	0x0345B300 MOV X20, X0
	0x0345B304 BL 0x3EB1AE0
	0x0345B308 MOV X0, X20
	0x0345B30C BL 0x1D2C690
	0x0345B310 BL 0x1990590
	0x0345B314 STR X30, [X31 - 0x30]!
	0x0345B318 STP X22, X21, [X31 + 0x10]
	0x0345B31C STP X20, X19, [X31 + 0x20]
	0x0345B320 ADRP X21, 0xF82000
	0x0345B324 ADRP X22, 0xC9B000
	0x0345B328 LDRB W8, [X21 + 0x79E]
	0x0345B32C LDR X22, [X22 + 0x280]
	0x0345B330 MOV X19, X1
	0x0345B334 MOV X20, X0
	0x0345B338 TBNZ X8, 0x0, 0x345B350
	0x0345B33C ADRP X0, 0xC9B000
	0x0345B340 LDR X0, [X0 + 0x280]
	0x0345B344 BL 0x1C16CF4
	0x0345B348 MOVZ W8, 0x1
	0x0345B34C STRB W8, [X21 + 0x79E]
	0x0345B350 LDR X0, [X22]
	0x0345B354 LDR W8, [X0 + 0xE0]
	0x0345B358 CBNZ W8, 0x345B360
	0x0345B35C BL 0x1C16DFC
	0x0345B360 ADD X0, X20, 0x8
	0x0345B364 MOV X1, X19
	0x0345B368 LDP X20, X19, [X31 + 0x20]
	0x0345B36C LDP X22, X21, [X31 + 0x10]
	0x0345B370 MOV X2, X31
	0x0345B374 LDR X30, [X31], #0x30
	0x0345B378 B 0x32C477C
	0x0345B37C SUB X31, X31, 0x70
	0x0345B380 STP X30, X25, [X31 + 0x30]
	0x0345B384 STP X24, X23, [X31 + 0x40]
	0x0345B388 STP X22, X21, [X31 + 0x50]
	0x0345B38C STP X20, X19, [X31 + 0x60]
	0x0345B390 ADRP X20, 0xF82000
	0x0345B394 LDRB W8, [X20 + 0x79F]
	0x0345B398 MOV X19, X0
	0x0345B39C TBNZ X8, 0x0, 0x345B450
	0x0345B3A0 ADRP X0, 0xCD4000
	0x0345B3A4 LDR X0, [X0 + 0xF78]
	0x0345B3A8 BL 0x1C16CF4
	0x0345B3AC ADRP X0, 0xCD4000
	0x0345B3B0 LDR X0, [X0 + 0xF80]
	0x0345B3B4 BL 0x1C16CF4
	0x0345B3B8 ADRP X0, 0xC9B000
	0x0345B3BC LDR X0, [X0 + 0x280]
	0x0345B3C0 BL 0x1C16CF4
	0x0345B3C4 ADRP X0, 0xC9A000
	0x0345B3C8 LDR X0, [X0 + 0xA10]
	0x0345B3CC BL 0x1C16CF4
	0x0345B3D0 ADRP X0, 0xC99000
	0x0345B3D4 LDR X0, [X0 + 0x9F0]
	0x0345B3D8 BL 0x1C16CF4
	0x0345B3DC ADRP X0, 0xCA0000
	0x0345B3E0 LDR X0, [X0 + 0x818]
	0x0345B3E4 BL 0x1C16CF4
	0x0345B3E8 ADRP X0, 0xC99000
	0x0345B3EC LDR X0, [X0 + 0x818]
	0x0345B3F0 BL 0x1C16CF4
	0x0345B3F4 ADRP X0, 0xCD4000
	0x0345B3F8 LDR X0, [X0 + 0x7C8]
	0x0345B3FC BL 0x1C16CF4
	0x0345B400 ADRP X0, 0xCD4000
	0x0345B404 LDR X0, [X0 + 0x7D0]
	0x0345B408 BL 0x1C16CF4
	0x0345B40C ADRP X0, 0xC99000
	0x0345B410 LDR X0, [X0 + 0x830]
	0x0345B414 BL 0x1C16CF4
	0x0345B418 ADRP X0, 0xC99000
	0x0345B41C LDR X0, [X0 + 0x838]
	0x0345B420 BL 0x1C16CF4
	0x0345B424 ADRP X0, 0xC99000
	0x0345B428 LDR X0, [X0 + 0x840]
	0x0345B42C BL 0x1C16CF4
	0x0345B430 ADRP X0, 0xCD4000
	0x0345B434 LDR X0, [X0 + 0xF88]
	0x0345B438 BL 0x1C16CF4
	0x0345B43C ADRP X0, 0xCD4000
	0x0345B440 LDR X0, [X0 + 0xF90]
	0x0345B444 BL 0x1C16CF4
	0x0345B448 MOVZ W8, 0x1
	0x0345B44C STRB W8, [X20 + 0x79F]
	0x0345B450 STP X31, X31, [X31 + 0x20]
	0x0345B454 STR X31, [X31 + 0x18]
	0x0345B458 ADRP X25, 0xC9B000
	0x0345B45C LDR W8, [X19]
	0x0345B460 LDR X20, [X19 + 0x20]
	0x0345B464 LDR X25, [X25 + 0x280]
	0x0345B468 CBZ W8, 0x345B48C
	0x0345B46C CMP W8, 0x1
	0x0345B470 B.NE 0x345B4B8
	0x0345B474 LDR X8, [X19 + 0x60]
	0x0345B478 MOVN W9, 0x0
	0x0345B47C STR X8, [X31 + 0x18]
	0x0345B480 STR X31, [X19 + 0x60]
	0x0345B484 STR W9, [X19]
	0x0345B488 B 0x345B7BC
	0x0345B48C LDR X8, [X19 + 0x58]
	0x0345B490 MOVN W9, 0x0
	0x0345B494 STR X8, [X31 + 0x20]
	0x0345B498 STR X31, [X19 + 0x58]
	0x0345B49C STR W9, [X19]
	0x0345B4A0 ADRP X8, 0xC99000
	0x0345B4A4 LDR X8, [X8 + 0x830]
	0x0345B4A8 ADD X0, X31, 0x20
	0x0345B4AC LDR X1, [X8]
	0x0345B4B0 BL 0x2677474
	0x0345B4B4 B 0x345B6F0
	0x0345B4B8 ADRP X8, 0xCD4000
	0x0345B4BC LDR X8, [X8 + 0xF90]
	0x0345B4C0 LDR X0, [X8]
	0x0345B4C4 BL 0x1C16F10
	0x0345B4C8 MOV X21, X0
	0x0345B4CC MOV X1, X31
	0x0345B4D0 BL 0x344A644
	0x0345B4D4 STR X21, [X19 + 0x50]
	0x0345B4D8 CBZ X21, 0x345B85C
	0x0345B4DC LDR X8, [X19 + 0x20]
	0x0345B4E0 STR X8, [X21 + 0x10]
	0x0345B4E4 LDR X8, [X19 + 0x28]
	0x0345B4E8 STR X8, [X21 + 0x18]
	0x0345B4EC LDRB W8, [X19 + 0x30]
	0x0345B4F0 STRB W8, [X21 + 0x20]
	0x0345B4F4 LDR X8, [X19 + 0x38]
	0x0345B4F8 STR X8, [X21 + 0x28]
	0x0345B4FC LDR X8, [X19 + 0x40]
	0x0345B500 STR X8, [X21 + 0x30]
	0x0345B504 CBZ X20, 0x345B860
	0x0345B508 LDRB W8, [X20 + 0x10]
	0x0345B50C CBZ W8, 0x345B6F4
	0x0345B510 LDR X8, [X19 + 0x50]
	0x0345B514 CBZ X8, 0x345B864
	0x0345B518 LDR X21, [X8 + 0x18]
	0x0345B51C CBZ X21, 0x345B868
	0x0345B520 ADRP X23, 0xC99000
	0x0345B524 LDR X8, [X21]
	0x0345B528 LDR X23, [X23 + 0x818]
	0x0345B52C LDRH W9, [X8 + 0x12E]
	0x0345B530 LDR X1, [X23]
	0x0345B534 CBZ X9, 0x345B558
	0x0345B538 LDR X10, [X8 + 0xB0]
	0x0345B53C ADD X10, X10, 0x8
	0x0345B540 LDUR X11, [X10 - 0x8]
	0x0345B544 CMP X11, X1
	0x0345B548 B.EQ 0x345B568
	0x0345B54C SUBS X9, X9, 0x1
	0x0345B550 ADD X10, X10, 0x10
	0x0345B554 B.NE 0x345B540
	0x0345B558 MOVZ W2, 0x7
	0x0345B55C MOV X0, X21
	0x0345B560 BL 0x1C5C788
	0x0345B564 B 0x345B578
	0x0345B568 LDR W9, [X10]
	0x0345B56C ADD W9, W9, 0x7
	0x0345B570 ADD X8, X8, W9, 0x4, SXTW
	0x0345B574 ADD X0, X8, 0x138
	0x0345B578 LDP X8, X1, [X0]
	0x0345B57C MOV X0, X21
	0x0345B580 BLR X8
	0x0345B584 MOV X1, X31
	0x0345B588 BL 0x32277A8
	0x0345B58C TBNZ X0, 0x0, 0x345B6F0
	0x0345B590 LDR X8, [X19 + 0x50]
	0x0345B594 CBZ X8, 0x345B86C
	0x0345B598 ADRP X9, 0xC99000
	0x0345B59C LDR X9, [X9 + 0x9F0]
	0x0345B5A0 LDR X21, [X8 + 0x18]
	0x0345B5A4 LDR X0, [X9]
	0x0345B5A8 LDR W9, [X0 + 0xE0]
	0x0345B5AC CBNZ W9, 0x345B5B4
	0x0345B5B0 BL 0x1C16DFC
	0x0345B5B4 MOV X0, X31
	0x0345B5B8 BL 0x33616A4
	0x0345B5BC ADRP X22, 0xC9A000
	0x0345B5C0 LDR X22, [X22 + 0xA10]
	0x0345B5C4 MOV X8, X0
	0x0345B5C8 STR X8, [X31 + 0x28]
	0x0345B5CC LDR X0, [X22]
	0x0345B5D0 LDR W8, [X0 + 0xE0]
	0x0345B5D4 CBNZ W8, 0x345B5E0
	0x0345B5D8 BL 0x1C16DFC
	0x0345B5DC LDR X0, [X22]
	0x0345B5E0 LDR X8, [X0 + 0xB8]
	0x0345B5E4 LDR X1, [X8]
	0x0345B5E8 ADD X0, X31, 0x28
	0x0345B5EC MOV X2, X31
	0x0345B5F0 BL 0x335FC68
	0x0345B5F4 CBZ X21, 0x345B870
	0x0345B5F8 LDR X8, [X21]
	0x0345B5FC LDR X1, [X23]
	0x0345B600 MOV X22, X0
	0x0345B604 LDRH W9, [X8 + 0x12E]
	0x0345B608 CBZ X9, 0x345B62C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF84000
	011 Move W8, [X20+1945]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD5000
	018 Move X0, [X0+3864]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD5000
	021 Move X0, [X0+3872]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9C000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9B000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9A000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA1000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9A000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD5000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD5000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9A000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9A000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9A000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD5000
	054 Move X0, [X0+3880]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD5000
	057 Move X0, [X0+3888]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1945], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9C000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xC9A000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD5000
	091 Move X8, [X8+3888]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass77_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {361}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 NotImplemented "Instruction STRH not yet implemented."
	108 Move X8, [X19+80]
	109 Compare X8, 0
	110 JumpIfEqual {362}
	111 Move X9, [X19+64]
	112 Move [X8+48], X9
	113 Compare X20, 0
	114 JumpIfEqual {363}
	115 Move W8, [X20+16]
	116 Compare W8, 0
	117 JumpIfEqual {255}
	118 Move X8, [X19+80]
	119 Compare X8, 0
	120 JumpIfEqual {364}
	121 Move X21, [X8+24]
	122 Compare X21, 0
	123 JumpIfEqual {365}
	124 Move X23, 0xC9A000
	125 Move X8, [X21]
	126 Move X23, [X23+2072]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Move X1, [X23]
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 7
	138 Move X0, X21
	139 Call 0x1C5D788
	140 Move W9, [X10]
	141 Add W9, W9, 7
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X21
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X1, X31
	149 Call String.IsNullOrEmpty, X0
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {253}
	154 Move X8, [X19+80]
	155 Compare X8, 0
	156 JumpIfEqual {366}
	157 Move X9, 0xC9A000
	158 Move X9, [X9+2544]
	159 Move X21, [X8+24]
	160 Move X0, [X9]
	161 Move W9, [X0+224]
	162 Compare W9, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, X31
	166 Call DateTime.get_UtcNow
	167 Move X22, 0xC9B000
	168 Move X22, [X22+2576]
	169 Move X8, X0
	170 Move [X31+40], X8
	171 Move X0, [X22]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X22]
	177 Move X8, [X0+184]
	178 Move X1, [X8]
	179 Add X0, X31, 40
	180 Move X2, X31
	181 Call DateTime.Add, X0, X1
	182 Compare X21, 0
	183 JumpIfEqual {367}
	184 Move X8, [X21]
	185 Move X1, [X23]
	186 Move X22, X0
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 11
	197 Move X0, X21
	198 Call 0x1C5D788
	199 Move W9, [X10]
	200 Add W9, W9, 11
	201 Add X8, X8, W9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X2, [X0+8]
	205 Move X0, X21
	206 Move X1, X22
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {253}
	212 Move X8, [X19+80]
	213 Compare X8, 0
	214 JumpIfEqual {368}
	215 Move X1, [X8+24]
	216 Move X3, [X19+72]
	217 Move X4, [X8+48]
	218 Move X0, X20
	219 Move X2, X31
	220 Move X5, X31
	221 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	222 Compare X0, 0
	223 JumpIfEqual {369}
	224 Move X8, 0xC9A000
	225 Move X8, [X8+2112]
	226 Move X1, [X8]
	227 Call Task`1<Object>.GetAwaiter, X0
	228 Move X8, 0xC9A000
	229 Move X8, [X8+2104]
	230 Move [X31+32], X0
	231 Move X1, [X8]
	232 Add X0, X31, 32
	233 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfEqual {85}
	238 Move [X19], W31
	239 Move X8, [X31+32]
	240 Move [X19+88], X8
	241 Move X0, [X25]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X8, 0xCD5000
	247 Move X8, [X8+3864]
	248 Add X0, X19, 8
	249 Move X3, [X8]
	250 Add X1, X31, 32
	251 Move X2, X19
	252 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	253 Compare X20, 0
	254 JumpIfEqual {360}
	255 Move X8, 0xCA1000
	256 Move X8, [X8+2072]
	257 Move X21, [X20+88]
	258 Move X23, [X19+80]
	259 Move X0, [X8]
	260 Call 0x1C17F10
	261 Move X8, 0xCD5000
	262 Move X8, [X8+3880]
	263 Move X22, X0
	264 Move X2, [X8]
	265 Move X1, X23
	266 Move X3, X31
	267 Call Func`1<Object>..ctor, X0, X1, X2
	268 Move X8, [X19+80]
	269 Compare X8, 0
	270 JumpIfEqual {357}
	271 Move X9, 0xCD5000
	272 Move X23, [X19+72]
	273 Move X9, [X9+1992]
	274 Compare X23, 0
	275 JumpIfNotEqual {277}
	276 Move X23, [X20+24]
	277 Move X20, [X8+24]
	278 Move X1, [X8+48]
	279 Move X2, [X9]
	280 Move [X31+8], X31
	281 Move [X31+16], X31
	282 Add X0, X31, 8
	283 Call Nullable`1<CancellationToken>..ctor, X0, X1
	284 Move X8, 0xCD5000
	285 Move X8, [X8+2000]
	286 Move X0, [X8]
	287 Call 0x1C17F10
	288 Move X3, [X31+8]
	289 Move X4, [X31+16]
	290 Move X24, X0
	291 Move X1, X20
	292 Move X2, X23
	293 Move X5, X31
	294 Call RetryHistory..ctor, X0, X1, X2, X3
	295 Compare X21, 0
	296 JumpIfEqual {358}
	297 Move X0, X21
	298 Move X1, X22
	299 Move X2, X24
	300 Move X3, X31
	301 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	302 Compare X0, 0
	303 JumpIfEqual {359}
	304 Move X1, X31
	305 Call Task.GetAwaiter, X0
	306 Move [X31+24], X0
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.get_IsCompleted, X0
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {331}
	314 Add X0, X31, 24
	315 Move X1, X31
	316 Call TaskAwaiter.GetResult, X0
	317 Move TEMP, 1
	318 Not TEMP
	319 Move W8, TEMP
	320 Move [X19], W8
	321 Move [X19+80], X31
	322 Move X0, [X25]
	323 Add X19, X19, 8
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move X0, X19
	329 Move X1, X31
	330 Call AsyncTaskMethodBuilder.SetResult, X0
	331 Move W8, 1
	332 Move [X19], W8
	333 Move X8, [X31+24]
	334 Move [X19+96], X8
	335 Move X0, [X25]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move X8, 0xCD5000
	341 Move X8, [X8+3872]
	342 Add X0, X19, 8
	343 Move X3, [X8]
	344 Add X1, X31, 24
	345 Move X2, X19
	346 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	347 Move X20, [X31+96]
	348 Move X19, [X31+104]
	349 Move X22, [X31+80]
	350 Move X21, [X31+88]
	351 Move X24, [X31+64]
	352 Move X23, [X31+72]
	353 Move X30, [X31+48]
	354 Move X25, [X31+56]
	355 Add X31, X31, 112
	356 Return 
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Move X20, X0
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X0, X20
	373 Call 0x3EB2AD0
	374 Move X20, X0
	375 Move X0, 0xC99000
	376 Move X0, [X0+2000]
	377 Call 0x1C17D08
	378 Move X8, [X20]
	379 Move X1, [X8]
	380 Call 0x1C18270
	381 Move TEMP, X0
	382 And TEMP, TEMP, 1
	383 Compare TEMP, 1
	384 JumpIfNotEqual {403}
	385 Move X20, [X20]
	386 Call 0x3EB2AE0
	387 Move TEMP, 1
	388 Not TEMP
	389 Move W8, TEMP
	390 Move [X19+80], X31
	391 Move [X19+8], W8
	392 Move X0, 0xC9C000
	393 Move X0, [X0+640]
	394 Call 0x1C17D08
	395 Move W8, [X0+224]
	396 Compare W8, 0
	397 JumpIfNotEqual {399}
	398 Call 0x1C17DFC
	399 Move X0, X19
	400 Move X1, X20
	401 Move X2, X31
	402 Call AsyncTaskMethodBuilder.SetException, X0, X1
	403 Move W0, 8
	404 Call 0x3EB2AF0
	405 Move X8, [X20]
	406 Move [X0], X8
	407 Move X1, 0xA5A000
	408 Add X1, X1, 3672
	409 Move X2, X31
	410 Call 0x3EB2B00
	411 Move X20, X0
	412 Call 0x3EB2AE0
	413 Move X0, X20
	414 Call 0x1D2D690
	415 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345B60C LDR X10, [X8 + 0xB0]
	0x0345B610 ADD X10, X10, 0x8
	0x0345B614 LDUR X11, [X10 - 0x8]
	0x0345B618 CMP X11, X1
	0x0345B61C B.EQ 0x345B63C
	0x0345B620 SUBS X9, X9, 0x1
	0x0345B624 ADD X10, X10, 0x10
	0x0345B628 B.NE 0x345B614
	0x0345B62C MOVZ W2, 0xB
	0x0345B630 MOV X0, X21
	0x0345B634 BL 0x1C5C788
	0x0345B638 B 0x345B64C
	0x0345B63C LDR W9, [X10]
	0x0345B640 ADD W9, W9, 0xB
	0x0345B644 ADD X8, X8, W9, 0x4, SXTW
	0x0345B648 ADD X0, X8, 0x138
	0x0345B64C LDP X8, X2, [X0]
	0x0345B650 MOV X0, X21
	0x0345B654 MOV X1, X22
	0x0345B658 BLR X8
	0x0345B65C TBZ X0, 0x0, 0x345B6F0
	0x0345B660 LDR X8, [X19 + 0x50]
	0x0345B664 CBZ X8, 0x345B874
	0x0345B668 LDR X1, [X8 + 0x18]
	0x0345B66C LDR X3, [X19 + 0x48]
	0x0345B670 LDR X4, [X8 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF83000
	007 Move X22, 0xC9C000
	008 Move W8, [X21+1946]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9C000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1946], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

