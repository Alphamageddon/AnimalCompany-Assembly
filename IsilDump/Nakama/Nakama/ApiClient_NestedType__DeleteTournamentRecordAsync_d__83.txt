Type: Nakama.ApiClient/<DeleteTournamentRecordAsync>d__83

Method: System.Void MoveNext()

Disassembly:
	0x03422584 BL 0x1C16CF4
	0x03422588 ADRP X0, 0xCD4000
	0x0342258C LDR X0, [X0 + 0x1F8]
	0x03422590 BL 0x1C16CF4
	0x03422594 ADRP X0, 0xCDA000
	0x03422598 LDR X0, [X0 + 0x3A0]
	0x0342259C BL 0x1C16CF4
	0x034225A0 ADRP X0, 0xD0C000
	0x034225A4 LDR X0, [X0 + 0xCB0]
	0x034225A8 BL 0x1C16CF4
	0x034225AC ADRP X0, 0xCFA000
	0x034225B0 LDR X0, [X0 + 0x4D8]
	0x034225B4 BL 0x1C16CF4
	0x034225B8 ADRP X0, 0xD0C000
	0x034225BC LDR X0, [X0 + 0x7D0]
	0x034225C0 BL 0x1C16CF4
	0x034225C4 ADRP X0, 0xD0C000
	0x034225C8 LDR X0, [X0 + 0x7D8]
	0x034225CC BL 0x1C16CF4
	0x034225D0 ADRP X0, 0xCD1000
	0x034225D4 LDR X0, [X0 + 0x988]
	0x034225D8 BL 0x1C16CF4
	0x034225DC MOVZ W8, 0x1
	0x034225E0 STRB W8, [X20 + 0x623]
	0x034225E4 STR X31, [X31 + 0x18]
	0x034225E8 ADRP X28, 0xCD4000
	0x034225EC LDR W8, [X19]
	0x034225F0 LDR X28, [X28 + 0x280]
	0x034225F4 CBZ W8, 0x34227D4
	0x034225F8 LDR X8, [X19 + 0x20]
	0x034225FC CBZ X8, 0x34228EC
	0x03422600 LDR X25, [X19 + 0x28]
	0x03422604 CBZ X25, 0x3422934
	0x03422608 LDR X0, [X25 + 0x20]
	0x0342260C CBZ X0, 0x3422938
	0x03422610 ADRP X8, 0xD0C000
	0x03422614 ADRP X9, 0xCD1000
	0x03422618 LDR X8, [X8 + 0xCB0]
	0x0342261C LDR X9, [X9 + 0x988]
	0x03422620 LDR X21, [X8]
	0x03422624 LDR X20, [X9]
	0x03422628 MOV X1, X31
	0x0342262C BL 0x361B448
	0x03422630 ADRP X8, 0xCDA000
	0x03422634 LDR X8, [X8 + 0x8D8]
	0x03422638 MOV X22, X0
	0x0342263C LDR X0, [X8]
	0x03422640 MOVZ W1, 0x1
	0x03422644 BL 0x1C16D6C
	0x03422648 MOV X1, X0
	0x0342264C CBZ X1, 0x342293C
	0x03422650 LDR W8, [X1 + 0x18]
	0x03422654 CBZ W8, 0x3422940
	0x03422658 MOVZ W8, 0x2F
	0x0342265C STRH W8, [X1 + 0x20]
	0x03422660 CBZ X22, 0x3422944
	0x03422664 MOV X0, X22
	0x03422668 MOV X2, X31
	0x0342266C BL 0x322BC58
	0x03422670 MOV X1, X21
	0x03422674 MOV X2, X31
	0x03422678 BL 0x321B938
	0x0342267C ADRP X8, 0xCDA000
	0x03422680 LDR X8, [X8 + 0x3A0]
	0x03422684 MOV X22, X0
	0x03422688 LDR X23, [X25 + 0x20]
	0x0342268C LDR X0, [X8]
	0x03422690 BL 0x1C16F10
	0x03422694 MOV X21, X0
	0x03422698 MOV X1, X23
	0x0342269C MOV X2, X31
	0x034226A0 BL 0x36281F8
	0x034226A4 CBZ X21, 0x3422948
	0x034226A8 MOV X0, X21
	0x034226AC MOV X1, X22
	0x034226B0 MOV X2, X31
	0x034226B4 BL 0x36288CC
	0x034226B8 MOV X0, X21
	0x034226BC MOV X1, X20
	0x034226C0 MOV X2, X31
	0x034226C4 BL 0x3628980
	0x034226C8 MOV X0, X21
	0x034226CC MOV X1, X31
	0x034226D0 BL 0x3628A38
	0x034226D4 ADRP X8, 0xCFA000
	0x034226D8 ADRP X9, 0xCD2000
	0x034226DC LDR X8, [X8 + 0x4D8]
	0x034226E0 LDR X9, [X9 + 0x6D0]
	0x034226E4 MOV X20, X0
	0x034226E8 LDR X21, [X8]
	0x034226EC LDR X0, [X9]
	0x034226F0 BL 0x1C16F10
	0x034226F4 ADRP X8, 0xCD2000
	0x034226F8 LDR X8, [X8 + 0x6C0]
	0x034226FC MOV X22, X0
	0x03422700 LDR X1, [X8]
	0x03422704 BL 0x2AA4804
	0x03422708 ADRP X8, 0xD0C000
	0x0342270C LDR X8, [X8 + 0x7D8]
	0x03422710 LDR X1, [X19 + 0x30]
	0x03422714 LDR X0, [X8]
	0x03422718 MOV X2, X31
	0x0342271C BL 0x321B938
	0x03422720 CBZ X22, 0x342294C
	0x03422724 ADRP X8, 0xD0C000
	0x03422728 LDR X8, [X8 + 0x7D0]
	0x0342272C ADRP X9, 0xCD2000
	0x03422730 LDR X9, [X9 + 0x810]
	0x03422734 MOV X2, X0
	0x03422738 LDR X1, [X8]
	0x0342273C LDR X3, [X9]
	0x03422740 MOV X0, X22
	0x03422744 BL 0x2AA5098
	0x03422748 LDR X0, [X19 + 0x20]
	0x0342274C MOV X1, X31
	0x03422750 BL 0x3483BE4
	0x03422754 MOV X23, X0
	0x03422758 MOV X0, X31
	0x0342275C BL 0x3241948
	0x03422760 CBZ X0, 0x3422950
	0x03422764 LDR X8, [X0]
	0x03422768 LDR X9, [X8 + 0x268]
	0x0342276C LDR X2, [X8 + 0x270]
	0x03422770 MOV X1, X23
	0x03422774 BLR X9
	0x03422778 LDR X24, [X25 + 0x10]
	0x0342277C CBZ X24, 0x3422954
	0x03422780 ADRP X10, 0xD0C000
	0x03422784 LDR X10, [X10 + 0x7B8]
	0x03422788 LDR X8, [X24]
	0x0342278C LDR W26, [X25 + 0x18]
	0x03422790 LDP X27, X25, [X19 + 0x38]
	0x03422794 LDR X1, [X10]
	0x03422798 LDRH W9, [X8 + 0x12E]
	0x0342279C MOV X23, X0
	0x034227A0 CBZ X9, 0x34227C4
	0x034227A4 LDR X10, [X8 + 0xB0]
	0x034227A8 ADD X10, X10, 0x8
	0x034227AC LDUR X11, [X10 - 0x8]
	0x034227B0 CMP X11, X1
	0x034227B4 B.EQ 0x34227EC
	0x034227B8 SUBS X9, X9, 0x1
	0x034227BC ADD X10, X10, 0x10
	0x034227C0 B.NE 0x34227AC
	0x034227C4 MOVZ W2, 0x3
	0x034227C8 MOV X0, X24
	0x034227CC BL 0x1C5C788
	0x034227D0 B 0x34227FC
	0x034227D4 LDR X8, [X19 + 0x48]
	0x034227D8 MOVN W9, 0x0
	0x034227DC STR X8, [X31 + 0x18]
	0x034227E0 STR X31, [X19 + 0x48]
	0x034227E4 STR W9, [X19]
	0x034227E8 B 0x3422858
	0x034227EC LDR W9, [X10]
	0x034227F0 ADD W9, W9, 0x3
	0x034227F4 ADD X8, X8, W9, 0x4, SXTW
	0x034227F8 ADD X0, X8, 0x138
	0x034227FC LDP X8, X9, [X0]
	0x03422800 MOV X0, X24
	0x03422804 MOV X1, X21
	0x03422808 MOV X2, X20
	0x0342280C MOV X3, X22
	0x03422810 MOV X4, X23
	0x03422814 MOV W5, W26
	0x03422818 MOV X6, X27
	0x0342281C MOV X7, X25
	0x03422820 STR X9, [X31]
	0x03422824 BLR X8
	0x03422828 CBZ X0, 0x3422958
	0x0342282C ADRP X8, 0xCD4000
	0x03422830 LDR X8, [X8 + 0x1F8]
	0x03422834 LDR X1, [X8]
	0x03422838 BL 0x269F5D0
	0x0342283C ADRP X8, 0xCD4000
	0x03422840 LDR X8, [X8 + 0x1F0]
	0x03422844 STR X0, [X31 + 0x18]
	0x03422848 LDR X1, [X8]
	0x0342284C ADD X0, X31, 0x18
	0x03422850 BL 0x2677430
	0x03422854 TBZ X0, 0x0, 0x3422894
	0x03422858 ADRP X8, 0xCD4000
	0x0342285C LDR X8, [X8 + 0x1E0]
	0x03422860 ADD X0, X31, 0x18
	0x03422864 LDR X1, [X8]
	0x03422868 BL 0x2677474
	0x0342286C MOVN W8, 0x1
	0x03422870 STR W8, [X19], #0x8
	0x03422874 LDR X0, [X28]
	0x03422878 LDR W8, [X0 + 0xE0]
	0x0342287C CBNZ W8, 0x3422884
	0x03422880 BL 0x1C16DFC
	0x03422884 MOV X0, X19
	0x03422888 MOV X1, X31
	0x0342288C BL 0x32C4864
	0x03422890 B 0x34228CC
	0x03422894 STR W31, [X19]
	0x03422898 LDR X8, [X31 + 0x18]
	0x0342289C STR X8, [X19 + 0x48]
	0x034228A0 LDR X0, [X28]
	0x034228A4 LDR W8, [X0 + 0xE0]
	0x034228A8 CBNZ W8, 0x34228B0
	0x034228AC BL 0x1C16DFC
	0x034228B0 ADRP X8, 0xD0C000
	0x034228B4 LDR X8, [X8 + 0xCA8]
	0x034228B8 ADD X0, X19, 0x8
	0x034228BC LDR X3, [X8]
	0x034228C0 ADD X1, X31, 0x18
	0x034228C4 MOV X2, X19
	0x034228C8 BL 0x2186370
	0x034228CC LDP X20, X19, [X31 + 0x60]
	0x034228D0 LDP X22, X21, [X31 + 0x50]
	0x034228D4 LDP X24, X23, [X31 + 0x40]
	0x034228D8 LDP X26, X25, [X31 + 0x30]
	0x034228DC LDP X28, X27, [X31 + 0x20]
	0x034228E0 LDR X30, [X31 + 0x10]
	0x034228E4 ADD X31, X31, 0x70
	0x034228E8 RET
	0x034228EC ADRP X0, 0xCD9000
	0x034228F0 LDR X0, [X0 + 0x578]
	0x034228F4 BL 0x1C16D08
	0x034228F8 BL 0x1C16F10
	0x034228FC MOV X20, X0
	0x03422900 ADRP X0, 0xD0C000
	0x03422904 LDR X0, [X0 + 0xBC8]
	0x03422908 BL 0x1C16D08
	0x0342290C MOV X1, X0
	0x03422910 MOV X0, X20
	0x03422914 MOV X2, X31
	0x03422918 BL 0x3314A68
	0x0342291C ADRP X0, 0xD0C000
	0x03422920 LDR X0, [X0 + 0xCB8]
	0x03422924 BL 0x1C16D08
	0x03422928 MOV X1, X0
	0x0342292C MOV X0, X20
	0x03422930 BL 0x1C16DEC
	0x03422934 BL 0x1C16F20
	0x03422938 BL 0x1C16F20
	0x0342293C BL 0x1C16F20
	0x03422940 BL 0x1C16F28
	0x03422944 BL 0x1C16F20
	0x03422948 BL 0x1C16F20
	0x0342294C BL 0x1C16F20
	0x03422950 BL 0x1C16F20
	0x03422954 BL 0x1C16F20
	0x03422958 BL 0x1C16F20
	0x0342295C B 0x34229BC
	0x03422960 B 0x34229BC
	0x03422964 B 0x34229BC
	0x03422968 B 0x34229BC
	0x0342296C B 0x34229BC
	0x03422970 B 0x34229BC
	0x03422974 B 0x34229BC
	0x03422978 B 0x34229BC
	0x0342297C B 0x34229BC
	0x03422980 B 0x34229BC
	0x03422984 B 0x34229BC
	0x03422988 B 0x34229BC
	0x0342298C B 0x34229BC
	0x03422990 B 0x34229BC
	0x03422994 B 0x34229BC
	0x03422998 B 0x34229BC
	0x0342299C B 0x34229BC
	0x034229A0 B 0x34229BC
	0x034229A4 B 0x34229BC
	0x034229A8 B 0x34229BC
	0x034229AC B 0x34229BC
	0x034229B0 B 0x34229BC
	0x034229B4 B 0x34229BC
	0x034229B8 B 0x34229BC
	0x034229BC MOV X20, X0
	0x034229C0 CMP W1, 0x1
	0x034229C4 B.NE 0x3422A54
	0x034229C8 MOV X0, X20
	0x034229CC BL 0x3EB1AD0
	0x034229D0 MOV X20, X0
	0x034229D4 ADRP X0, 0xCD1000
	0x034229D8 LDR X0, [X0 + 0x7D0]
	0x034229DC BL 0x1C16D08
	0x034229E0 LDR X8, [X20]
	0x034229E4 LDR X1, [X8]
	0x034229E8 BL 0x1C17270
	0x034229EC TBZ X0, 0x0, 0x3422A2C
	0x034229F0 LDR X20, [X20]
	0x034229F4 BL 0x3EB1AE0
	0x034229F8 MOVN W8, 0x1
	0x034229FC STR W8, [X19], #0x8
	0x03422A00 ADRP X0, 0xCD4000
	0x03422A04 LDR X0, [X0 + 0x280]
	0x03422A08 BL 0x1C16D08
	0x03422A0C LDR W8, [X0 + 0xE0]
	0x03422A10 CBNZ W8, 0x3422A18
	0x03422A14 BL 0x1C16DFC
	0x03422A18 MOV X0, X19
	0x03422A1C MOV X1, X20
	0x03422A20 MOV X2, X31
	0x03422A24 BL 0x32C4908
	0x03422A28 B 0x34228CC
	0x03422A2C MOVZ W0, 0x8
	0x03422A30 BL 0x3EB1AF0
	0x03422A34 LDR X8, [X20]
	0x03422A38 STR X8, [X0]
	0x03422A3C ADRP X1, 0xA92000
	0x03422A40 ADD X1, X1, 0xE58
	0x03422A44 MOV X2, X31
	0x03422A48 BL 0x3EB1B00
	0x03422A4C MOV X20, X0
	0x03422A50 BL 0x3EB1AE0
	0x03422A54 MOV X0, X20
	0x03422A58 BL 0x1D2C690
	0x03422A5C BL 0x1990590
	0x03422A60 STR X30, [X31 - 0x30]!
	0x03422A64 STP X22, X21, [X31 + 0x10]
	0x03422A68 STP X20, X19, [X31 + 0x20]
	0x03422A6C ADRP X21, 0xFBB000
	0x03422A70 ADRP X22, 0xCD4000
	0x03422A74 LDRB W8, [X21 + 0x624]
	0x03422A78 LDR X22, [X22 + 0x280]
	0x03422A7C MOV X19, X1
	0x03422A80 MOV X20, X0
	0x03422A84 TBNZ X8, 0x0, 0x3422A9C
	0x03422A88 ADRP X0, 0xCD4000
	0x03422A8C LDR X0, [X0 + 0x280]
	0x03422A90 BL 0x1C16CF4
	0x03422A94 MOVZ W8, 0x1
	0x03422A98 STRB W8, [X21 + 0x624]
	0x03422A9C LDR X0, [X22]
	0x03422AA0 LDR W8, [X0 + 0xE0]
	0x03422AA4 CBNZ W8, 0x3422AAC
	0x03422AA8 BL 0x1C16DFC
	0x03422AAC ADD X0, X20, 0x8
	0x03422AB0 MOV X1, X19
	0x03422AB4 LDP X20, X19, [X31 + 0x20]
	0x03422AB8 LDP X22, X21, [X31 + 0x10]
	0x03422ABC MOV X2, X31
	0x03422AC0 LDR X30, [X31], #0x30
	0x03422AC4 B 0x32C477C
	0x03422AC8 SUB X31, X31, 0x60
	0x03422ACC STP X30, X27, [X31 + 0x10]
	0x03422AD0 STP X26, X25, [X31 + 0x20]
	0x03422AD4 STP X24, X23, [X31 + 0x30]
	0x03422AD8 STP X22, X21, [X31 + 0x40]
	0x03422ADC STP X20, X19, [X31 + 0x50]
	0x03422AE0 ADRP X20, 0xFBB000
	0x03422AE4 LDRB W8, [X20 + 0x625]
	0x03422AE8 MOV X19, X0
	0x03422AEC TBNZ X8, 0x0, 0x3422BD0
	0x03422AF0 ADRP X0, 0xD0C000
	0x03422AF4 LDR X0, [X0 + 0xCC0]
	0x03422AF8 BL 0x1C16CF4
	0x03422AFC ADRP X0, 0xD0C000
	0x03422B00 LDR X0, [X0 + 0xCC8]
	0x03422B04 BL 0x1C16CF4
	0x03422B08 ADRP X0, 0xD0C000
	0x03422B0C LDR X0, [X0 + 0x2F8]
	0x03422B10 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFBC000
	013 Move W8, [X20+1567]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {75}
	019 Move X0, 0xD0D000
	020 Move X0, [X0+3176]
	021 Call 0x1C17CF4
	022 Move X0, 0xCD5000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xCDB000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xCD3000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xCD3000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xCD3000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xD0D000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0xCD5000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xCD5000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xCD5000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xCDB000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xCD4000
	053 Move X0, [X0+2600]
	054 Call 0x1C17CF4
	055 Move X0, 0xD0D000
	056 Move X0, [X0+2000]
	057 Call 0x1C17CF4
	058 Move X0, 0xD0D000
	059 Move X0, [X0+2008]
	060 Call 0x1C17CF4
	061 Move X0, 0xD0D000
	062 Move X0, [X0+3184]
	063 Call 0x1C17CF4
	064 Move X0, 0xCD2000
	065 Move X0, [X0+2440]
	066 Call 0x1C17CF4
	067 Move X0, 0xCFB000
	068 Move X0, [X0+1224]
	069 Call 0x1C17CF4
	070 Move X0, 0xD0D000
	071 Move X0, [X0+3192]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+1567], W8
	075 Move [X31+8], X31
	076 Move X27, 0xCD5000
	077 Move W8, [X19]
	078 Move X27, [X27+640]
	079 Compare W8, 0
	080 JumpIfEqual {215}
	081 Move X21, [X19+32]
	082 Compare X21, 0
	083 JumpIfEqual {298}
	084 Move X8, 0xCD4000
	085 Move X8, [X8+2600]
	086 Move X0, [X8]
	087 Move X8, 0xD0D000
	088 Move X8, [X8+3184]
	089 Move X24, [X19+40]
	090 Move W9, [X0+224]
	091 Move X20, [X8]
	092 Compare W9, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X31
	097 Call Uri.EscapeDataString, X0
	098 Compare X20, 0
	099 JumpIfEqual {316}
	100 Move X8, 0xD0D000
	101 Move X8, [X8+3192]
	102 Move X2, X0
	103 Move X1, [X8]
	104 Move X0, X20
	105 Move X3, X31
	106 Call String.Replace, X0, X1, X2
	107 Compare X24, 0
	108 JumpIfEqual {317}
	109 Move X21, X0
	110 Move X0, [X24+32]
	111 Compare X0, 0
	112 JumpIfEqual {318}
	113 Move X8, 0xCD2000
	114 Move X8, [X8+2440]
	115 Move X20, [X8]
	116 Move X1, X31
	117 Call Uri.get_AbsolutePath, X0
	118 Move X8, 0xCDB000
	119 Move X8, [X8+2264]
	120 Move X22, X0
	121 Move X0, [X8]
	122 Move W1, 1
	123 Call 0x1C17D6C
	124 Move X1, X0
	125 Compare X1, 0
	126 JumpIfEqual {319}
	127 Move W8, [X1+24]
	128 Compare W8, 0
	129 JumpIfEqual {320}
	130 Move W8, 47
	131 NotImplemented "Instruction STRH not yet implemented."
	132 Compare X22, 0
	133 JumpIfEqual {321}
	134 Move X0, X22
	135 Move X2, X31
	136 Call String.TrimEnd, X0, X1
	137 Move X1, X21
	138 Move X2, X31
	139 Call String.Concat, X0, X1
	140 Move X8, 0xCDB000
	141 Move X8, [X8+928]
	142 Move X22, X0
	143 Move X23, [X24+32]
	144 Move X0, [X8]
	145 Call 0x1C17F10
	146 Move X21, X0
	147 Move X1, X23
	148 Move X2, X31
	149 Call UriBuilder..ctor, X0, X1
	150 Compare X21, 0
	151 JumpIfEqual {322}
	152 Move X0, X21
	153 Move X1, X22
	154 Move X2, X31
	155 Call UriBuilder.set_Path, X0, X1
	156 Move X0, X21
	157 Move X1, X20
	158 Move X2, X31
	159 Call UriBuilder.set_Query, X0, X1
	160 Move X0, X21
	161 Move X1, X31
	162 Call UriBuilder.get_Uri, X0
	163 Move X8, 0xCFB000
	164 Move X9, 0xCD3000
	165 Move X8, [X8+1224]
	166 Move X9, [X9+1744]
	167 Move X20, X0
	168 Move X21, [X8]
	169 Move X0, [X9]
	170 Call 0x1C17F10
	171 Move X8, 0xCD3000
	172 Move X8, [X8+1728]
	173 Move X22, X0
	174 Move X1, [X8]
	175 Call Dictionary`2<Object, Object>..ctor, X0
	176 Move X8, 0xD0D000
	177 Move X8, [X8+2008]
	178 Move X1, [X19+48]
	179 Move X0, [X8]
	180 Move X2, X31
	181 Call String.Concat, X0, X1
	182 Compare X22, 0
	183 JumpIfEqual {323}
	184 Move X8, 0xD0D000
	185 Move X8, [X8+2000]
	186 Move X9, 0xCD3000
	187 Move X9, [X9+2064]
	188 Move X2, X0
	189 Move X1, [X8]
	190 Move X3, [X9]
	191 Move X0, X22
	192 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	193 Move X23, [X24+16]
	194 Compare X23, 0
	195 JumpIfEqual {324}
	196 Move X10, 0xD0D000
	197 Move X10, [X10+1976]
	198 Move X8, [X23]
	199 Move W25, [X24+24]
	200 Move X26, [X19+56]
	201 Move X24, [X19+64]
	202 Move X1, [X10]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move W2, 3
	213 Move X0, X23
	214 Call 0x1C5D788
	215 Move X8, [X19+72]
	216 Move TEMP, 0
	217 Not TEMP
	218 Move W9, TEMP
	219 Move [X31+8], X8
	220 Move [X19+72], X31
	221 Move [X19], W9
	222 Move W9, [X10]
	223 Add W9, W9, 3
	224 Add X8, X8, W9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X9, [X0+8]
	228 Move X0, X23
	229 Move X1, X21
	230 Move X2, X20
	231 Move X3, X22
	232 Move X4, X31
	233 Move W5, W25
	234 Move X6, X26
	235 Move X7, X24
	236 Move [X31], X9
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X0, 0
	239 JumpIfEqual {325}
	240 Move X8, 0xCD5000
	241 Move X8, [X8+504]
	242 Move X1, [X8]
	243 Call Task`1<Object>.GetAwaiter, X0
	244 Move X8, 0xCD5000
	245 Move X8, [X8+496]
	246 Move [X31+8], X0
	247 Move X1, [X8]
	248 Add X0, X31, 8
	249 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {271}
	254 Move X8, 0xCD5000
	255 Move X8, [X8+480]
	256 Add X0, X31, 8
	257 Move X1, [X8]
	258 Call TaskAwaiter`1<Object>.GetResult, X0
	259 Move TEMP, 1
	260 Not TEMP
	261 Move W8, TEMP
	262 Move [X19+8], W8
	263 Move X0, [X27]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, X19
	269 Move X1, X31
	270 Call AsyncTaskMethodBuilder.SetResult, X0
	271 Move [X19], W31
	272 Move X8, [X31+8]
	273 Move [X19+72], X8
	274 Move X0, [X27]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X8, 0xD0D000
	280 Move X8, [X8+3176]
	281 Add X0, X19, 8
	282 Move X3, [X8]
	283 Add X1, X31, 8
	284 Move X2, X19
	285 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	286 Move X20, [X31+80]
	287 Move X19, [X31+88]
	288 Move X22, [X31+64]
	289 Move X21, [X31+72]
	290 Move X24, [X31+48]
	291 Move X23, [X31+56]
	292 Move X26, [X31+32]
	293 Move X25, [X31+40]
	294 Move X30, [X31+16]
	295 Move X27, [X31+24]
	296 Add X31, X31, 96
	297 Return 
	298 Move X0, 0xCDA000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xD0D000
	304 Move X0, [X0+3200]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xD0D000
	311 Move X0, [X0+3208]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F28
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Move X20, X0
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, X20
	329 Call 0x3EB2AD0
	330 Move X20, X0
	331 Move X0, 0xCD2000
	332 Move X0, [X0+2000]
	333 Call 0x1C17D08
	334 Move X8, [X20]
	335 Move X1, [X8]
	336 Call 0x1C18270
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {358}
	341 Move X20, [X20]
	342 Call 0x3EB2AE0
	343 Move TEMP, 1
	344 Not TEMP
	345 Move W8, TEMP
	346 Move [X19+8], W8
	347 Move X0, 0xCD5000
	348 Move X0, [X0+640]
	349 Call 0x1C17D08
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move X0, X19
	355 Move X1, X20
	356 Move X2, X31
	357 Call AsyncTaskMethodBuilder.SetException, X0, X1
	358 Move W0, 8
	359 Call 0x3EB2AF0
	360 Move X8, [X20]
	361 Move [X0], X8
	362 Move X1, 0xA93000
	363 Add X1, X1, 3672
	364 Move X2, X31
	365 Call 0x3EB2B00
	366 Move X20, X0
	367 Call 0x3EB2AE0
	368 Move X0, X20
	369 Call 0x1D2D690
	370 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03422B14 ADRP X0, 0xCDA000
	0x03422B18 LDR X0, [X0 + 0x8D8]
	0x03422B1C BL 0x1C16CF4
	0x03422B20 ADRP X0, 0xCD2000
	0x03422B24 LDR X0, [X0 + 0x810]
	0x03422B28 BL 0x1C16CF4
	0x03422B2C ADRP X0, 0xCD2000
	0x03422B30 LDR X0, [X0 + 0x6C0]
	0x03422B34 BL 0x1C16CF4
	0x03422B38 ADRP X0, 0xCD2000
	0x03422B3C LDR X0, [X0 + 0x6D0]
	0x03422B40 BL 0x1C16CF4
	0x03422B44 ADRP X0, 0xD0C000
	0x03422B48 LDR X0, [X0 + 0x7B8]
	0x03422B4C BL 0x1C16CF4
	0x03422B50 ADRP X0, 0xD0C000
	0x03422B54 LDR X0, [X0 + 0xCD0]
	0x03422B58 BL 0x1C16CF4
	0x03422B5C ADRP X0, 0xCD4000
	0x03422B60 LDR X0, [X0 + 0x1E0]
	0x03422B64 BL 0x1C16CF4
	0x03422B68 ADRP X0, 0xCD4000
	0x03422B6C LDR X0, [X0 + 0x1F0]
	0x03422B70 BL 0x1C16CF4
	0x03422B74 ADRP X0, 0xCD4000
	0x03422B78 LDR X0, [X0 + 0x1F8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFBC000
	007 Move X22, 0xCD5000
	008 Move W8, [X21+1568]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD5000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1568], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

