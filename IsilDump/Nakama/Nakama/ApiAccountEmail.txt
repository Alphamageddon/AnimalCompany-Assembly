Type: Nakama.ApiAccountEmail

Method: System.String get_Email()

Disassembly:
	0x034034B4 MOV X0, X20
	0x034034B8 BLR X8

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Email(System.String value)

Disassembly:
	0x034034BC CBNZ X22, 0x34034C8
	0x034034C0 MOV X0, X19

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Password()

Disassembly:
	0x034034C4 BL 0x1D2C690
	0x034034C8 MOV X0, X22

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Password(System.String value)

Disassembly:
	0x034034CC BL 0x1C16F18
	0x034034D0 BL 0x1990590

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x034034D4 MOV X1, X31
	0x034034D8 B 0x33BDD8C
	0x034034DC LDR X0, [X0 + 0x10]
	0x034034E0 RET
	0x034034E4 STR X1, [X0 + 0x10]
	0x034034E8 RET
	0x034034EC LDR X0, [X0 + 0x18]
	0x034034F0 RET
	0x034034F4 STR X1, [X0 + 0x18]
	0x034034F8 RET
	0x034034FC LDR X0, [X0 + 0x20]
	0x03403500 RET
	0x03403504 STR X1, [X0 + 0x20]
	0x03403508 RET
	0x0340350C LDR X0, [X0 + 0x28]
	0x03403510 RET
	0x03403514 STR X1, [X0 + 0x28]
	0x03403518 RET
	0x0340351C LDR X0, [X0 + 0x30]
	0x03403520 RET
	0x03403524 STR X1, [X0 + 0x30]
	0x03403528 RET
	0x0340352C LDR X0, [X0 + 0x38]
	0x03403530 RET
	0x03403534 STR X1, [X0 + 0x38]
	0x03403538 RET
	0x0340353C STR X30, [X31 - 0x20]!
	0x03403540 STP X20, X19, [X31 + 0x10]
	0x03403544 ADRP X20, 0xFDA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFDB000
	005 Move W8, [X20+1301]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCF2000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCF2000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1301], W8
	019 Move X19, [X19+32]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCF2000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCF2000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x03403548 LDRB W8, [X20 + 0x51B]
	0x0340354C MOV X19, X0

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03403550 TBNZ X8, 0x0, 0x3403574
	0x03403554 ADRP X0, 0xCF1000

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03403558 LDR X0, [X0 + 0x6C0]
	0x0340355C BL 0x1C16CF4
	0x03403560 ADRP X0, 0xCF1000
	0x03403564 LDR X0, [X0 + 0x6D0]
	0x03403568 BL 0x1C16CF4
	0x0340356C MOVZ W8, 0x1
	0x03403570 STRB W8, [X20 + 0x51B]
	0x03403574 LDR X19, [X19 + 0x40]
	0x03403578 CBNZ X19, 0x34035A0
	0x0340357C ADRP X8, 0xCF1000
	0x03403580 LDR X8, [X8 + 0x6D0]
	0x03403584 LDR X0, [X8]
	0x03403588 BL 0x1C16F10
	0x0340358C ADRP X8, 0xCF1000
	0x03403590 LDR X8, [X8 + 0x6C0]
	0x03403594 MOV X19, X0
	0x03403598 LDR X1, [X8]
	0x0340359C BL 0x2AA4804
	0x034035A0 MOV X0, X19
	0x034035A4 LDP X20, X19, [X31 + 0x10]
	0x034035A8 LDR X30, [X31], #0x20
	0x034035AC RET
	0x034035B0 LDR X0, [X0 + 0x40]
	0x034035B4 RET
	0x034035B8 STR X1, [X0 + 0x40]
	0x034035BC RET
	0x034035C0 SUB X31, X31, 0x70
	0x034035C4 STP X29, X30, [X31 + 0x10]
	0x034035C8 STP X28, X27, [X31 + 0x20]
	0x034035CC STP X26, X25, [X31 + 0x30]
	0x034035D0 STP X24, X23, [X31 + 0x40]
	0x034035D4 STP X22, X21, [X31 + 0x50]
	0x034035D8 STP X20, X19, [X31 + 0x60]
	0x034035DC ADRP X28, 0xFDA000
	0x034035E0 ADRP X19, 0xCF0000
	0x034035E4 ADRP X27, 0xD2A000
	0x034035E8 ADRP X21, 0xCF0000
	0x034035EC ADRP X26, 0xD2A000
	0x034035F0 ADRP X25, 0xD2A000
	0x034035F4 ADRP X24, 0xD2A000
	0x034035F8 ADRP X23, 0xD2A000
	0x034035FC ADRP X22, 0xD2A000
	0x03403600 LDR X19, [X19 + 0x988]
	0x03403604 LDR X27, [X27 + 0xDA0]
	0x03403608 LDR X21, [X21 + 0x838]
	0x0340360C LDRB W8, [X28 + 0x51C]
	0x03403610 LDR X26, [X26 + 0xDA8]
	0x03403614 LDR X25, [X25 + 0xDB0]
	0x03403618 LDR X24, [X24 + 0xDB8]
	0x0340361C LDR X23, [X23 + 0xDC0]
	0x03403620 LDR X22, [X22 + 0xDC8]
	0x03403624 MOV X20, X0
	0x03403628 TBNZ X8, 0x0, 0x3403724
	0x0340362C ADRP X0, 0xCF0000
	0x03403630 LDR X0, [X0 + 0xE00]
	0x03403634 BL 0x1C16CF4
	0x03403638 ADRP X0, 0xCF3000
	0x0340363C LDR X0, [X0 + 0x190]
	0x03403640 BL 0x1C16CF4
	0x03403644 ADRP X0, 0xCF3000
	0x03403648 LDR X0, [X0 + 0x198]
	0x0340364C BL 0x1C16CF4
	0x03403650 ADRP X0, 0xCF0000
	0x03403654 LDR X0, [X0 + 0xE18]
	0x03403658 BL 0x1C16CF4
	0x0340365C ADRP X0, 0xCF3000
	0x03403660 LDR X0, [X0 + 0x1B0]
	0x03403664 BL 0x1C16CF4
	0x03403668 ADRP X0, 0xCF3000
	0x0340366C LDR X0, [X0 + 0x1B8]
	0x03403670 BL 0x1C16CF4
	0x03403674 ADRP X0, 0xCF0000
	0x03403678 LDR X0, [X0 + 0xAC8]
	0x0340367C BL 0x1C16CF4
	0x03403680 ADRP X0, 0xD2A000
	0x03403684 LDR X0, [X0 + 0xDB0]
	0x03403688 BL 0x1C16CF4
	0x0340368C ADRP X0, 0xD1D000
	0x03403690 LDR X0, [X0 + 0x360]
	0x03403694 BL 0x1C16CF4
	0x03403698 ADRP X0, 0xD1D000
	0x0340369C LDR X0, [X0 + 0xFB8]
	0x034036A0 BL 0x1C16CF4
	0x034036A4 ADRP X0, 0xD2A000
	0x034036A8 LDR X0, [X0 + 0xDA8]
	0x034036AC BL 0x1C16CF4
	0x034036B0 ADRP X0, 0xD2A000
	0x034036B4 LDR X0, [X0 + 0xDB8]
	0x034036B8 BL 0x1C16CF4
	0x034036BC ADRP X0, 0xCFB000
	0x034036C0 LDR X0, [X0 + 0x6D8]
	0x034036C4 BL 0x1C16CF4
	0x034036C8 ADRP X0, 0xD2A000
	0x034036CC LDR X0, [X0 + 0xD80]
	0x034036D0 BL 0x1C16CF4
	0x034036D4 ADRP X0, 0xCF0000
	0x034036D8 LDR X0, [X0 + 0x838]
	0x034036DC BL 0x1C16CF4
	0x034036E0 ADRP X0, 0xD2A000
	0x034036E4 LDR X0, [X0 + 0xDC8]
	0x034036E8 BL 0x1C16CF4
	0x034036EC ADRP X0, 0xD2A000
	0x034036F0 LDR X0, [X0 + 0xDA0]
	0x034036F4 BL 0x1C16CF4
	0x034036F8 ADRP X0, 0xD2A000
	0x034036FC LDR X0, [X0 + 0xDC0]
	0x03403700 BL 0x1C16CF4
	0x03403704 ADRP X0, 0xCF0000
	0x03403708 LDR X0, [X0 + 0x988]
	0x0340370C BL 0x1C16CF4
	0x03403710 ADRP X0, 0xCF0000
	0x03403714 LDR X0, [X0 + 0x848]
	0x03403718 BL 0x1C16CF4
	0x0340371C MOVZ W8, 0x1
	0x03403720 STRB W8, [X28 + 0x51C]
	0x03403724 LDR X0, [X19]
	0x03403728 LDR X2, [X20 + 0x10]
	0x0340372C LDR X1, [X27]
	0x03403730 LDR X3, [X21]
	0x03403734 MOV X4, X31
	0x03403738 BL 0x32277C4
	0x0340373C LDR X2, [X20 + 0x18]
	0x03403740 LDR X1, [X26]
	0x03403744 LDR X3, [X21]
	0x03403748 MOV X4, X31
	0x0340374C BL 0x32277C4
	0x03403750 LDR X2, [X20 + 0x20]
	0x03403754 LDR X1, [X25]
	0x03403758 LDR X3, [X21]
	0x0340375C MOV X4, X31
	0x03403760 BL 0x32277C4
	0x03403764 LDR X2, [X20 + 0x28]
	0x03403768 LDR X1, [X24]
	0x0340376C LDR X3, [X21]
	0x03403770 MOV X4, X31
	0x03403774 BL 0x32277C4
	0x03403778 LDR X2, [X20 + 0x30]
	0x0340377C LDR X1, [X23]
	0x03403780 LDR X3, [X21]
	0x03403784 MOV X4, X31
	0x03403788 BL 0x32277C4
	0x0340378C LDR X2, [X20 + 0x38]
	0x03403790 LDR X1, [X22]
	0x03403794 LDR X3, [X21]
	0x03403798 MOV X4, X31
	0x0340379C BL 0x32277C4
	0x034037A0 LDR X27, [X19]
	0x034037A4 STR X0, [X31 + 0x8]
	0x034037A8 MOV X0, X20
	0x034037AC BL 0x340353C
	0x034037B0 CBZ X0, 0x3403A60
	0x034037B4 ADRP X10, 0xCF3000
	0x034037B8 LDR X8, [X0]
	0x034037BC LDR X10, [X10 + 0x190]
	0x034037C0 MOV X20, X0
	0x034037C4 LDRH W9, [X8 + 0x12E]
	0x034037C8 LDR X1, [X10]
	0x034037CC CBZ X9, 0x34037F0
	0x034037D0 LDR X10, [X8 + 0xB0]
	0x034037D4 ADD X10, X10, 0x8
	0x034037D8 LDUR X11, [X10 - 0x8]
	0x034037DC CMP X11, X1
	0x034037E0 B.EQ 0x3403800
	0x034037E4 SUBS X9, X9, 0x1
	0x034037E8 ADD X10, X10, 0x10
	0x034037EC B.NE 0x34037D8
	0x034037F0 MOV X0, X20
	0x034037F4 MOV W2, W31
	0x034037F8 BL 0x1C5C788
	0x034037FC B 0x340380C
	0x03403800 LDRSW X9, [X10]
	0x03403804 ADD X8, X8, X9, 0x4, LSL
	0x03403808 ADD X0, X8, 0x138
	0x0340380C ADRP X28, 0xCF0000
	0x03403810 ADRP X29, 0xCF3000
	0x03403814 ADRP X26, 0xCF0000
	0x03403818 ADRP X24, 0xD1D000
	0x0340381C ADRP X25, 0xD1D000
	0x03403820 ADRP X19, 0xCFB000
	0x03403824 LDR X28, [X28 + 0xE18]
	0x03403828 LDR X29, [X29 + 0x198]
	0x0340382C LDR X26, [X26 + 0xAC8]
	0x03403830 LDR X24, [X24 + 0x360]
	0x03403834 LDR X25, [X25 + 0xFB8]
	0x03403838 LDR X19, [X19 + 0x6D8]
	0x0340383C LDP X8, X1, [X0]
	0x03403840 MOV X0, X20
	0x03403844 BLR X8
	0x03403848 MOV X20, X0
	0x0340384C MOV X0, X27
	0x03403850 CBZ X20, 0x3403A44
	0x03403854 LDR X8, [X20]
	0x03403858 LDR X1, [X28]
	0x0340385C MOV X21, X0
	0x03403860 LDRH W9, [X8 + 0x12E]
	0x03403864 CBZ X9, 0x3403888
	0x03403868 LDR X10, [X8 + 0xB0]
	0x0340386C ADD X10, X10, 0x8
	0x03403870 LDUR X11, [X10 - 0x8]
	0x03403874 CMP X11, X1
	0x03403878 B.EQ 0x3403898
	0x0340387C SUBS X9, X9, 0x1
	0x03403880 ADD X10, X10, 0x10
	0x03403884 B.NE 0x3403870
	0x03403888 MOV X0, X20
	0x0340388C MOV W2, W31
	0x03403890 BL 0x1C5C788
	0x03403894 B 0x34038A4
	0x03403898 LDRSW X9, [X10]
	0x0340389C ADD X8, X8, X9, 0x4, LSL
	0x034038A0 ADD X0, X8, 0x138
	0x034038A4 LDP X8, X1, [X0]
	0x034038A8 MOV X0, X20
	0x034038AC BLR X8
	0x034038B0 TBZ X0, 0x0, 0x3403988
	0x034038B4 LDR X8, [X20]
	0x034038B8 LDR X1, [X29]
	0x034038BC LDRH W9, [X8 + 0x12E]
	0x034038C0 CBZ X9, 0x34038E4
	0x034038C4 LDR X10, [X8 + 0xB0]
	0x034038C8 ADD X10, X10, 0x8
	0x034038CC LDUR X11, [X10 - 0x8]
	0x034038D0 CMP X11, X1
	0x034038D4 B.EQ 0x34038F4
	0x034038D8 SUBS X9, X9, 0x1
	0x034038DC ADD X10, X10, 0x10
	0x034038E0 B.NE 0x34038CC
	0x034038E4 MOV X0, X20
	0x034038E8 MOV W2, W31
	0x034038EC BL 0x1C5C788
	0x034038F0 B 0x3403900
	0x034038F4 LDRSW X9, [X10]
	0x034038F8 ADD X8, X8, X9, 0x4, LSL
	0x034038FC ADD X0, X8, 0x138
	0x03403900 LDP X8, X1, [X0]
	0x03403904 MOV X0, X20
	0x03403908 BLR X8
	0x0340390C MOV X23, X0
	0x03403910 LDR X0, [X26]
	0x03403914 MOV X22, X1
	0x03403918 MOVZ W1, 0x5
	0x0340391C BL 0x1C16D6C
	0x03403920 CBZ X0, 0x3403A4C
	0x03403924 LDR W8, [X0 + 0x18]
	0x03403928 CBZ W8, 0x3403A54
	0x0340392C LDR X9, [X24]
	0x03403930 CMP W8, 0x1
	0x03403934 STR X9, [X0 + 0x20]
	0x03403938 B.EQ 0x3403A48
	0x0340393C CMP W8, 0x2
	0x03403940 STR X23, [X0 + 0x28]
	0x03403944 B.LS 0x3403A58
	0x03403948 LDR X9, [X25]
	0x0340394C CMP W8, 0x3
	0x03403950 STR X9, [X0 + 0x30]
	0x03403954 B.EQ 0x3403A5C
	0x03403958 CMP W8, 0x4
	0x0340395C STR X22, [X0 + 0x38]
	0x03403960 B.LS 0x3403A50
	0x03403964 LDR X8, [X19]
	0x03403968 STR X8, [X0 + 0x40]
	0x0340396C MOV X1, X31
	0x03403970 BL 0x32278CC
	0x03403974 MOV X1, X0
	0x03403978 MOV X0, X21
	0x0340397C MOV X2, X31
	0x03403980 BL 0x321B938
	0x03403984 B 0x3403850
	0x03403988 MOV X22, X31
	0x0340398C CBZ X20, 0x34039F0
	0x03403990 LDR X8, [X20]
	0x03403994 ADRP X10, 0xCF0000
	0x03403998 LDRH W9, [X8 + 0x12E]
	0x0340399C LDR X10, [X10 + 0xE00]
	0x034039A0 LDR X1, [X10]
	0x034039A4 CBZ X9, 0x34039C8
	0x034039A8 LDR X10, [X8 + 0xB0]
	0x034039AC ADD X10, X10, 0x8
	0x034039B0 LDUR X11, [X10 - 0x8]
	0x034039B4 CMP X11, X1
	0x034039B8 B.EQ 0x34039D8
	0x034039BC SUBS X9, X9, 0x1
	0x034039C0 ADD X10, X10, 0x10
	0x034039C4 B.NE 0x34039B0
	0x034039C8 MOV X0, X20
	0x034039CC MOV W2, W31
	0x034039D0 BL 0x1C5C788
	0x034039D4 B 0x34039E4
	0x034039D8 LDRSW X9, [X10]
	0x034039DC ADD X8, X8, X9, 0x4, LSL
	0x034039E0 ADD X0, X8, 0x138
	0x034039E4 LDP X8, X1, [X0]
	0x034039E8 MOV X0, X20
	0x034039EC BLR X8
	0x034039F0 CBNZ X22, 0x3403A64
	0x034039F4 ADRP X8, 0xD2A000
	0x034039F8 LDR X8, [X8 + 0xD80]
	0x034039FC MOV X1, X21
	0x03403A00 MOV X3, X31
	0x03403A04 LDR X0, [X8]
	0x03403A08 ADRP X8, 0xCF0000
	0x03403A0C LDR X8, [X8 + 0x848]
	0x03403A10 LDR X2, [X8]
	0x03403A14 BL 0x32274B8
	0x03403A18 MOV X1, X0
	0x03403A1C LDR X0, [X31 + 0x8]
	0x03403A20 LDP X20, X19, [X31 + 0x60]
	0x03403A24 LDP X22, X21, [X31 + 0x50]
	0x03403A28 LDP X24, X23, [X31 + 0x40]
	0x03403A2C LDP X26, X25, [X31 + 0x30]
	0x03403A30 LDP X28, X27, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0xFDB000
	015 Move X19, 0xCF1000
	016 Move X23, 0xD2B000
	017 Move X21, 0xCF1000
	018 Move X22, 0xD2B000
	019 Move W8, [X24+1302]
	020 Move X19, [X19+2440]
	021 Move X23, [X23+3424]
	022 Move X21, [X21+2104]
	023 Move X22, [X22+3472]
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {79}
	029 Move X0, 0xCF1000
	030 Move X0, [X0+3584]
	031 Call 0x1C17CF4
	032 Move X0, 0xCF4000
	033 Move X0, [X0+400]
	034 Call 0x1C17CF4
	035 Move X0, 0xCF4000
	036 Move X0, [X0+408]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF1000
	039 Move X0, [X0+3608]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF4000
	042 Move X0, [X0+432]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF4000
	045 Move X0, [X0+440]
	046 Call 0x1C17CF4
	047 Move X0, 0xCF1000
	048 Move X0, [X0+2760]
	049 Call 0x1C17CF4
	050 Move X0, 0xD1E000
	051 Move X0, [X0+864]
	052 Call 0x1C17CF4
	053 Move X0, 0xD1E000
	054 Move X0, [X0+4024]
	055 Call 0x1C17CF4
	056 Move X0, 0xCFC000
	057 Move X0, [X0+1752]
	058 Call 0x1C17CF4
	059 Move X0, 0xD2B000
	060 Move X0, [X0+3456]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF1000
	063 Move X0, [X0+2104]
	064 Call 0x1C17CF4
	065 Move X0, 0xD2B000
	066 Move X0, [X0+3472]
	067 Call 0x1C17CF4
	068 Move X0, 0xCF1000
	069 Move X0, [X0+2440]
	070 Call 0x1C17CF4
	071 Move X0, 0xCF1000
	072 Move X0, [X0+2120]
	073 Call 0x1C17CF4
	074 Move X0, 0xD2B000
	075 Move X0, [X0+3424]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X24+1302], W8
	079 Move X0, [X19]
	080 Move X2, [X20+16]
	081 Move X1, [X23]
	082 Move X3, [X21]
	083 Move X4, X31
	084 Call String.Concat, X0, X1, X2, X3
	085 Move X2, [X20+24]
	086 Move X1, [X22]
	087 Move X3, [X21]
	088 Move X4, X31
	089 Call String.Concat, X0, X1, X2, X3
	090 Move X27, [X19]
	091 Move [X31+8], X0
	092 Move X0, X20
	093 Call ApiAccountEmail.get_Vars, X0
	094 Compare X0, 0
	095 JumpIfEqual {273}
	096 Move X10, 0xCF4000
	097 Move X8, [X0]
	098 Move X10, [X10+400]
	099 Move X20, X0
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Move X1, [X10]
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X20
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X28, 0xCF1000
	117 Move X29, 0xCF4000
	118 Move X26, 0xCF1000
	119 Move X24, 0xD1E000
	120 Move X25, 0xD1E000
	121 Move X19, 0xCFC000
	122 Move X28, [X28+3608]
	123 Move X29, [X29+408]
	124 Move X26, [X26+2760]
	125 Move X24, [X24+864]
	126 Move X25, [X25+4024]
	127 Move X19, [X19+1752]
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X20, X0
	133 Move X0, X27
	134 Compare X20, 0
	135 JumpIfEqual {266}
	136 Move X8, [X20]
	137 Move X1, [X28]
	138 Move X21, X0
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move X0, X20
	149 Move W2, W31
	150 Call 0x1C5D788
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Add X8, X8, X9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X20
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {211}
	162 Move X8, [X20]
	163 Move X1, [X29]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move X0, X20
	174 Move W2, W31
	175 Call 0x1C5D788
	176 NotImplemented "Instruction LDRSW not yet implemented."
	177 Add X8, X8, X9
	178 Add X0, X8, 312
	179 Move X8, [X0]
	180 Move X1, [X0+8]
	181 Move X0, X20
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X23, X0
	184 Move X0, [X26]
	185 Move X22, X1
	186 Move W1, 5
	187 Call 0x1C17D6C
	188 Compare X0, 0
	189 JumpIfEqual {268}
	190 Move W8, [X0+24]
	191 Compare W8, 0
	192 JumpIfEqual {270}
	193 Move X9, [X24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move [X0+32], X9
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move [X0+40], X23
	198 Move X9, [X25]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move [X0+48], X9
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move [X0+56], X22
	203 Move X8, [X19]
	204 Move [X0+64], X8
	205 Move X1, X31
	206 Call String.Concat, X0
	207 Move X1, X0
	208 Move X0, X21
	209 Move X2, X31
	210 Call String.Concat, X0, X1
	211 Move X22, X31
	212 Compare X20, 0
	213 JumpIfEqual {237}
	214 Move X8, [X20]
	215 Move X10, 0xCF1000
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 Move X10, [X10+3584]
	218 Move X1, [X10]
	219 Compare X9, 0
	220 JumpIfEqual {227}
	221 Move X10, [X8+176]
	222 Add X10, X10, 8
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Subtract X9, X9, 1
	226 Add X10, X10, 16
	227 Move X0, X20
	228 Move W2, W31
	229 Call 0x1C5D788
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Add X8, X8, X9
	232 Add X0, X8, 312
	233 Move X8, [X0]
	234 Move X1, [X0+8]
	235 Move X0, X20
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Compare X22, 0
	238 JumpIfNotEqual {274}
	239 Move X8, 0xD2B000
	240 Move X8, [X8+3456]
	241 Move X1, X21
	242 Move X3, X31
	243 Move X0, [X8]
	244 Move X8, 0xCF1000
	245 Move X8, [X8+2120]
	246 Move X2, [X8]
	247 Call String.Concat, X0, X1, X2
	248 Move X1, X0
	249 Move X0, [X31+8]
	250 Move X20, [X31+96]
	251 Move X19, [X31+104]
	252 Move X22, [X31+80]
	253 Move X21, [X31+88]
	254 Move X24, [X31+64]
	255 Move X23, [X31+72]
	256 Move X26, [X31+48]
	257 Move X25, [X31+56]
	258 Move X28, [X31+32]
	259 Move X27, [X31+40]
	260 Move X29, [X31+16]
	261 Move X30, [X31+24]
	262 Move X2, X31
	263 Add X31, X31, 112
	264 Call String.Concat, X0, X1
	265 Return X0
	266 Call 0x1C17F20
	267 Call 0x1C17F28
	268 Call 0x1C17F20
	269 Call 0x1C17F28
	270 Call 0x1C17F28
	271 Call 0x1C17F28
	272 Call 0x1C17F28
	273 Call 0x1C17F20
	274 Move X0, X22
	275 Call 0x1C17F18
	276 Move X21, X27
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Call 0x3EB2AD0
	279 Move X22, [X0]
	280 Call 0x3EB2AE0
	281 Move X19, X0
	282 Move X22, X31
	283 Move X19, X0
	284 Compare X20, 0
	285 JumpIfEqual {309}
	286 Move X8, [X20]
	287 Move X10, 0xCF1000
	288 NotImplemented "Instruction LDRH not yet implemented."
	289 Move X10, [X10+3584]
	290 Move X1, [X10]
	291 Compare X9, 0
	292 JumpIfEqual {299}
	293 Move X10, [X8+176]
	294 Add X10, X10, 8
	295 NotImplemented "Instruction LDUR not yet implemented."
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Subtract X9, X9, 1
	298 Add X10, X10, 16
	299 Move X0, X20
	300 Move W2, W31
	301 Call 0x1C5D788
	302 NotImplemented "Instruction LDRSW not yet implemented."
	303 Add X8, X8, X9
	304 Add X0, X8, 312
	305 Move X8, [X0]
	306 Move X1, [X0+8]
	307 Move X0, X20
	308 NotImplemented "Instruction BLR not yet implemented."
	309 Compare X22, 0
	310 JumpIfNotEqual {313}
	311 Move X0, X19
	312 Call 0x1D2D690
	313 Move X0, X22
	314 Call 0x1C17F18
	315 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03403A34 LDP X29, X30, [X31 + 0x10]
	0x03403A38 MOV X2, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

