Type: Nakama.ApiUpdateGroupRequest

Method: System.String get_AvatarUrl()

Disassembly:
	0x03401450 LDR X21, [X21 + 0xD68]
	0x03401454 LDR X23, [X23 + 0xD70]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_AvatarUrl(System.String value)

Disassembly:
	0x03401458 MOV X0, X20
	0x0340145C MOV X1, X31

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Description()

Disassembly:
	0x03401460 STR X8, [X20 + 0x38]
	0x03401464 BL 0x3227578

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Description(System.String value)

Disassembly:
	0x03401468 LDR X2, [X19 + 0x38]
	0x0340146C LDR X1, [X21]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_LangTag()

Disassembly:
	0x03401470 LDR X3, [X22]
	0x03401474 MOV X4, X31

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_LangTag(System.String value)

Disassembly:
	0x03401478 BL 0x32277C4
	0x0340147C LDR X2, [X19 + 0x40]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Name()

Disassembly:
	0x03401480 LDR X1, [X23]
	0x03401484 LDR X3, [X22]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x03401488 LDP X20, X19, [X31 + 0x50]
	0x0340148C LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Boolean get_Open()

Disassembly:
	0x03401490 LDP X24, X23, [X31 + 0x30]
	0x03401494 LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_Open(System.Boolean value)

Disassembly:
	0x03401498 LDP X28, X27, [X31 + 0x10]
	0x0340149C MOV X4, X31
	0x034014A0 LDP X29, X30, [X31], #0x60

ISIL:
	001 And W8, W1, 1
	002 Move [X0+48], W8
	003 Return 

Method: System.String ToString()

Disassembly:
	0x034014A4 B 0x32277C4
	0x034014A8 BL 0x1C16F28
	0x034014AC BL 0x1C16F44
	0x034014B0 MOV X1, X31
	0x034014B4 BL 0x1C16DEC
	0x034014B8 BL 0x1C16F20
	0x034014BC MOV X1, X31
	0x034014C0 B 0x33BDD8C
	0x034014C4 LDR X0, [X0 + 0x10]
	0x034014C8 RET
	0x034014CC STR X1, [X0 + 0x10]
	0x034014D0 RET
	0x034014D4 STR X30, [X31 - 0x20]!
	0x034014D8 STP X20, X19, [X31 + 0x10]
	0x034014DC ADRP X20, 0xFDC000
	0x034014E0 LDRB W8, [X20 + 0x50F]
	0x034014E4 MOV X19, X0
	0x034014E8 TBNZ X8, 0x0, 0x340150C
	0x034014EC ADRP X0, 0xCF3000
	0x034014F0 LDR X0, [X0 + 0x6C0]
	0x034014F4 BL 0x1C16CF4
	0x034014F8 ADRP X0, 0xCF3000
	0x034014FC LDR X0, [X0 + 0x6D0]
	0x03401500 BL 0x1C16CF4
	0x03401504 MOVZ W8, 0x1
	0x03401508 STRB W8, [X20 + 0x50F]
	0x0340150C LDR X19, [X19 + 0x18]
	0x03401510 CBNZ X19, 0x3401538
	0x03401514 ADRP X8, 0xCF3000
	0x03401518 LDR X8, [X8 + 0x6D0]
	0x0340151C LDR X0, [X8]
	0x03401520 BL 0x1C16F10
	0x03401524 ADRP X8, 0xCF3000
	0x03401528 LDR X8, [X8 + 0x6C0]
	0x0340152C MOV X19, X0
	0x03401530 LDR X1, [X8]
	0x03401534 BL 0x2AA4804
	0x03401538 MOV X0, X19
	0x0340153C LDP X20, X19, [X31 + 0x10]
	0x03401540 LDR X30, [X31], #0x20
	0x03401544 RET
	0x03401548 LDR X0, [X0 + 0x18]
	0x0340154C RET
	0x03401550 STR X1, [X0 + 0x18]
	0x03401554 RET
	0x03401558 SUB X31, X31, 0x70
	0x0340155C STP X29, X30, [X31 + 0x10]
	0x03401560 STP X28, X27, [X31 + 0x20]
	0x03401564 STP X26, X25, [X31 + 0x30]
	0x03401568 STP X24, X23, [X31 + 0x40]
	0x0340156C STP X22, X21, [X31 + 0x50]
	0x03401570 STP X20, X19, [X31 + 0x60]
	0x03401574 ADRP X23, 0xFDC000
	0x03401578 ADRP X19, 0xCF2000
	0x0340157C ADRP X21, 0xD2C000
	0x03401580 ADRP X22, 0xCF2000
	0x03401584 LDRB W8, [X23 + 0x510]
	0x03401588 LDR X19, [X19 + 0x988]
	0x0340158C LDR X21, [X21 + 0xD78]
	0x03401590 LDR X22, [X22 + 0x838]
	0x03401594 MOV X20, X0
	0x03401598 TBNZ X8, 0x0, 0x3401658
	0x0340159C ADRP X0, 0xCF2000
	0x034015A0 LDR X0, [X0 + 0xE00]
	0x034015A4 BL 0x1C16CF4
	0x034015A8 ADRP X0, 0xCF5000
	0x034015AC LDR X0, [X0 + 0x190]
	0x034015B0 BL 0x1C16CF4
	0x034015B4 ADRP X0, 0xCF5000
	0x034015B8 LDR X0, [X0 + 0x198]
	0x034015BC BL 0x1C16CF4
	0x034015C0 ADRP X0, 0xCF2000
	0x034015C4 LDR X0, [X0 + 0xE18]
	0x034015C8 BL 0x1C16CF4
	0x034015CC ADRP X0, 0xCF5000
	0x034015D0 LDR X0, [X0 + 0x1B0]
	0x034015D4 BL 0x1C16CF4
	0x034015D8 ADRP X0, 0xCF5000
	0x034015DC LDR X0, [X0 + 0x1B8]
	0x034015E0 BL 0x1C16CF4
	0x034015E4 ADRP X0, 0xCF2000
	0x034015E8 LDR X0, [X0 + 0xAC8]
	0x034015EC BL 0x1C16CF4
	0x034015F0 ADRP X0, 0xD1F000
	0x034015F4 LDR X0, [X0 + 0x360]
	0x034015F8 BL 0x1C16CF4
	0x034015FC ADRP X0, 0xD1F000
	0x03401600 LDR X0, [X0 + 0xFB8]
	0x03401604 BL 0x1C16CF4
	0x03401608 ADRP X0, 0xCFD000
	0x0340160C LDR X0, [X0 + 0x6D8]
	0x03401610 BL 0x1C16CF4
	0x03401614 ADRP X0, 0xD2C000
	0x03401618 LDR X0, [X0 + 0xD80]
	0x0340161C BL 0x1C16CF4
	0x03401620 ADRP X0, 0xCF2000
	0x03401624 LDR X0, [X0 + 0x838]
	0x03401628 BL 0x1C16CF4
	0x0340162C ADRP X0, 0xD2C000
	0x03401630 LDR X0, [X0 + 0xD78]
	0x03401634 BL 0x1C16CF4
	0x03401638 ADRP X0, 0xCF2000
	0x0340163C LDR X0, [X0 + 0x988]
	0x03401640 BL 0x1C16CF4
	0x03401644 ADRP X0, 0xCF2000
	0x03401648 LDR X0, [X0 + 0x848]
	0x0340164C BL 0x1C16CF4
	0x03401650 MOVZ W8, 0x1
	0x03401654 STRB W8, [X23 + 0x510]
	0x03401658 LDR X0, [X19]
	0x0340165C LDR X2, [X20 + 0x10]
	0x03401660 LDR X1, [X21]
	0x03401664 LDR X3, [X22]
	0x03401668 MOV X4, X31
	0x0340166C BL 0x32277C4
	0x03401670 LDR X27, [X19]
	0x03401674 STR X0, [X31 + 0x8]
	0x03401678 MOV X0, X20
	0x0340167C BL 0x34014D4
	0x03401680 CBZ X0, 0x3401930
	0x03401684 ADRP X10, 0xCF5000
	0x03401688 LDR X8, [X0]
	0x0340168C LDR X10, [X10 + 0x190]
	0x03401690 MOV X20, X0
	0x03401694 LDRH W9, [X8 + 0x12E]
	0x03401698 LDR X1, [X10]
	0x0340169C CBZ X9, 0x34016C0
	0x034016A0 LDR X10, [X8 + 0xB0]
	0x034016A4 ADD X10, X10, 0x8
	0x034016A8 LDUR X11, [X10 - 0x8]
	0x034016AC CMP X11, X1
	0x034016B0 B.EQ 0x34016D0
	0x034016B4 SUBS X9, X9, 0x1
	0x034016B8 ADD X10, X10, 0x10
	0x034016BC B.NE 0x34016A8
	0x034016C0 MOV X0, X20
	0x034016C4 MOV W2, W31
	0x034016C8 BL 0x1C5C788
	0x034016CC B 0x34016DC
	0x034016D0 LDRSW X9, [X10]
	0x034016D4 ADD X8, X8, X9, 0x4, LSL
	0x034016D8 ADD X0, X8, 0x138
	0x034016DC ADRP X28, 0xCF2000
	0x034016E0 ADRP X29, 0xCF5000
	0x034016E4 ADRP X26, 0xCF2000
	0x034016E8 ADRP X24, 0xD1F000
	0x034016EC ADRP X25, 0xD1F000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0xFDD000
	013 Move X27, 0xCF3000
	014 Move X25, 0xD2D000
	015 Move X22, 0xCF3000
	016 Move X24, 0xD2D000
	017 Move X23, 0xD2D000
	018 Move X21, 0xCF4000
	019 Move X20, 0xCF3000
	020 Move X27, [X27+2440]
	021 Move X25, [X25+3272]
	022 Move W8, [X26+1288]
	023 Move X22, [X22+2104]
	024 Move X24, [X24+3280]
	025 Move X23, [X23+3288]
	026 Move X21, [X21+3808]
	027 Move X20, [X20+2512]
	028 Move X19, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {62}
	033 Move X0, 0xCF3000
	034 Move X0, [X0+2904]
	035 Call 0x1C17CF4
	036 Move X0, 0xCF3000
	037 Move X0, [X0+2512]
	038 Call 0x1C17CF4
	039 Move X0, 0xD2D000
	040 Move X0, [X0+3288]
	041 Call 0x1C17CF4
	042 Move X0, 0xCF4000
	043 Move X0, [X0+3808]
	044 Call 0x1C17CF4
	045 Move X0, 0xCF3000
	046 Move X0, [X0+2104]
	047 Call 0x1C17CF4
	048 Move X0, 0xD2D000
	049 Move X0, [X0+3296]
	050 Call 0x1C17CF4
	051 Move X0, 0xD2D000
	052 Move X0, [X0+3272]
	053 Call 0x1C17CF4
	054 Move X0, 0xCF3000
	055 Move X0, [X0+2440]
	056 Call 0x1C17CF4
	057 Move X0, 0xD2D000
	058 Move X0, [X0+3280]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X26+1288], W8
	062 Move X0, [X27]
	063 Move X2, [X19+16]
	064 Move X1, [X25]
	065 Move X3, [X22]
	066 Move X4, X31
	067 Call String.Concat, X0, X1, X2, X3
	068 Move X2, [X19+24]
	069 Move X1, [X24]
	070 Move X3, [X22]
	071 Move X4, X31
	072 Call String.Concat, X0, X1, X2, X3
	073 Move X2, [X19+32]
	074 Move X1, [X23]
	075 Move X3, [X22]
	076 Move X4, X31
	077 Call String.Concat, X0, X1, X2, X3
	078 Move X2, [X19+40]
	079 Move X1, [X21]
	080 Move X3, [X22]
	081 Move X4, X31
	082 Call String.Concat, X0, X1, X2, X3
	083 Move X8, [X20]
	084 Move X21, X0
	085 Move W1, 4
	086 Move X0, X8
	087 Call 0x1C17D6C
	088 Compare X0, 0
	089 JumpIfEqual {167}
	090 Move X20, X0
	091 Compare X21, 0
	092 JumpIfEqual {99}
	093 Move X8, [X20]
	094 Move X0, X21
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {164}
	099 Move W8, [X20+24]
	100 Compare W8, 0
	101 JumpIfEqual {163}
	102 Move X23, 0xD2D000
	103 Move X23, [X23+3296]
	104 Move [X20+32], X21
	105 Move X0, [X23]
	106 Compare X0, 0
	107 JumpIfEqual {114}
	108 Move X8, [X20]
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {164}
	113 Move W8, [X20+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, [X23]
	116 Move X9, 0xCF3000
	117 Move X9, [X9+2904]
	118 Add X1, X31, 12
	119 Move [X20+40], X8
	120 Move W8, [X19+48]
	121 Move X0, [X9]
	122 Move [X31+12], W8
	123 Call 0x1C17E04
	124 Move X19, X0
	125 Compare X0, 0
	126 JumpIfEqual {133}
	127 Move X8, [X20]
	128 Move X0, X19
	129 Move X1, [X8+64]
	130 Call 0x1C17E00
	131 Compare X0, 0
	132 JumpIfEqual {164}
	133 Move W8, [X20+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move [X20+48], X19
	136 Move X0, [X22]
	137 Compare X0, 0
	138 JumpIfEqual {145}
	139 Move X8, [X20]
	140 Move X1, [X8+64]
	141 Call 0x1C17E00
	142 Compare X0, 0
	143 JumpIfEqual {164}
	144 Move W8, [X20+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, [X22]
	147 Move X0, X20
	148 Move X1, X31
	149 Move [X20+56], X8
	150 Call String.Concat, X0
	151 Move X20, [X31+80]
	152 Move X19, [X31+88]
	153 Move X22, [X31+64]
	154 Move X21, [X31+72]
	155 Move X24, [X31+48]
	156 Move X23, [X31+56]
	157 Move X26, [X31+32]
	158 Move X25, [X31+40]
	159 Move X30, [X31+16]
	160 Move X27, [X31+24]
	161 Add X31, X31, 96
	162 Return X0
	163 Call 0x1C17F28
	164 Call 0x1C17F44
	165 Move X1, X31
	166 Call 0x1C17DEC
	167 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034016F0 ADRP X19, 0xCFD000
	0x034016F4 LDR X28, [X28 + 0xE18]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

