Type: Nakama.Client/<JoinTournamentAsync>d__70

Method: System.Void MoveNext()

Disassembly:
	0x03458274 CBZ X0, 0x3458468
	0x03458278 ADRP X8, 0xC9C000
	0x0345827C LDR X8, [X8 + 0x840]
	0x03458280 LDR X1, [X8]
	0x03458284 BL 0x269F5D0
	0x03458288 ADRP X8, 0xC9C000
	0x0345828C LDR X8, [X8 + 0x838]
	0x03458290 STR X0, [X31 + 0x20]
	0x03458294 LDR X1, [X8]
	0x03458298 ADD X0, X31, 0x20
	0x0345829C BL 0x2677430
	0x034582A0 TBNZ X0, 0x0, 0x3458098
	0x034582A4 STR W31, [X19]
	0x034582A8 LDR X8, [X31 + 0x20]
	0x034582AC STR X8, [X19 + 0x50]
	0x034582B0 LDR X0, [X25]
	0x034582B4 LDR W8, [X0 + 0xE0]
	0x034582B8 CBNZ W8, 0x34582C0
	0x034582BC BL 0x1C16DFC
	0x034582C0 ADRP X8, 0xCD7000
	0x034582C4 LDR X8, [X8 + 0xE78]
	0x034582C8 ADD X0, X19, 0x8
	0x034582CC LDR X3, [X8]
	0x034582D0 ADD X1, X31, 0x20
	0x034582D4 MOV X2, X19
	0x034582D8 BL 0x21887C4
	0x034582DC B 0x3458424
	0x034582E0 CBZ X20, 0x3458448
	0x034582E4 ADRP X8, 0xCA3000
	0x034582E8 LDR X8, [X8 + 0x818]
	0x034582EC LDR X21, [X20 + 0x58]
	0x034582F0 LDR X23, [X19 + 0x48]
	0x034582F4 LDR X0, [X8]
	0x034582F8 BL 0x1C16F10
	0x034582FC ADRP X8, 0xCD7000
	0x03458300 LDR X8, [X8 + 0xE88]
	0x03458304 MOV X22, X0
	0x03458308 LDR X2, [X8]
	0x0345830C MOV X1, X23
	0x03458310 MOV X3, X31
	0x03458314 BL 0x2D27AA8
	0x03458318 LDR X8, [X19 + 0x48]
	0x0345831C CBZ X8, 0x345843C
	0x03458320 ADRP X9, 0xCD7000
	0x03458324 LDR X23, [X19 + 0x40]
	0x03458328 LDR X9, [X9 + 0x7C8]
	0x0345832C CBNZ X23, 0x3458334
	0x03458330 LDR X23, [X20 + 0x18]
	0x03458334 LDR X20, [X8 + 0x18]
	0x03458338 LDR X1, [X8 + 0x28]
	0x0345833C LDR X2, [X9]
	0x03458340 STP X31, X31, [X31 + 0x8]
	0x03458344 ADD X0, X31, 0x8
	0x03458348 BL 0x242E368
	0x0345834C ADRP X8, 0xCD7000
	0x03458350 LDR X8, [X8 + 0x7D0]
	0x03458354 LDR X0, [X8]
	0x03458358 BL 0x1C16F10
	0x0345835C LDP X3, X4, [X31 + 0x8]
	0x03458360 MOV X24, X0
	0x03458364 MOV X1, X20
	0x03458368 MOV X2, X23
	0x0345836C MOV X5, X31
	0x03458370 BL 0x3465404
	0x03458374 CBZ X21, 0x3458440
	0x03458378 MOV X0, X21
	0x0345837C MOV X1, X22
	0x03458380 MOV X2, X24
	0x03458384 MOV X3, X31
	0x03458388 BL 0x3465B68
	0x0345838C CBZ X0, 0x3458444
	0x03458390 MOV X1, X31
	0x03458394 BL 0x33ED394
	0x03458398 STR X0, [X31 + 0x18]
	0x0345839C ADD X0, X31, 0x18
	0x034583A0 MOV X1, X31
	0x034583A4 BL 0x32C3A80
	0x034583A8 TBZ X0, 0x0, 0x34583E8
	0x034583AC ADD X0, X31, 0x18
	0x034583B0 MOV X1, X31
	0x034583B4 BL 0x32C3B4C
	0x034583B8 MOVN W8, 0x1
	0x034583BC STR W8, [X19]
	0x034583C0 STR X31, [X19 + 0x48]
	0x034583C4 LDR X0, [X25]
	0x034583C8 ADD X19, X19, 0x8
	0x034583CC LDR W8, [X0 + 0xE0]
	0x034583D0 CBNZ W8, 0x34583D8
	0x034583D4 BL 0x1C16DFC
	0x034583D8 MOV X0, X19
	0x034583DC MOV X1, X31
	0x034583E0 BL 0x32C4864
	0x034583E4 B 0x3458424
	0x034583E8 MOVZ W8, 0x1
	0x034583EC STR W8, [X19]
	0x034583F0 LDR X8, [X31 + 0x18]
	0x034583F4 STR X8, [X19 + 0x58]
	0x034583F8 LDR X0, [X25]
	0x034583FC LDR W8, [X0 + 0xE0]
	0x03458400 CBNZ W8, 0x3458408
	0x03458404 BL 0x1C16DFC
	0x03458408 ADRP X8, 0xCD7000
	0x0345840C LDR X8, [X8 + 0xE80]
	0x03458410 ADD X0, X19, 0x8
	0x03458414 LDR X3, [X8]
	0x03458418 ADD X1, X31, 0x18
	0x0345841C MOV X2, X19
	0x03458420 BL 0x2189E88
	0x03458424 LDP X20, X19, [X31 + 0x60]
	0x03458428 LDP X22, X21, [X31 + 0x50]
	0x0345842C LDP X24, X23, [X31 + 0x40]
	0x03458430 LDP X30, X25, [X31 + 0x30]
	0x03458434 ADD X31, X31, 0x70
	0x03458438 RET
	0x0345843C BL 0x1C16F20
	0x03458440 BL 0x1C16F20
	0x03458444 BL 0x1C16F20
	0x03458448 BL 0x1C16F20
	0x0345844C BL 0x1C16F20
	0x03458450 BL 0x1C16F20
	0x03458454 BL 0x1C16F20
	0x03458458 BL 0x1C16F20
	0x0345845C BL 0x1C16F20
	0x03458460 BL 0x1C16F20
	0x03458464 BL 0x1C16F20
	0x03458468 BL 0x1C16F20
	0x0345846C B 0x34584E0
	0x03458470 B 0x34584E0
	0x03458474 B 0x34584E0
	0x03458478 B 0x34584E0
	0x0345847C B 0x34584E0
	0x03458480 B 0x34584E0
	0x03458484 B 0x34584E0
	0x03458488 B 0x34584E0
	0x0345848C B 0x34584E0
	0x03458490 B 0x34584E0
	0x03458494 B 0x34584E0
	0x03458498 B 0x34584E0
	0x0345849C B 0x34584E0
	0x034584A0 B 0x34584E0
	0x034584A4 B 0x34584E0
	0x034584A8 B 0x34584E0
	0x034584AC B 0x34584E0
	0x034584B0 B 0x34584E0
	0x034584B4 B 0x34584E0
	0x034584B8 B 0x34584E0
	0x034584BC B 0x34584E0
	0x034584C0 B 0x34584E0
	0x034584C4 B 0x34584E0
	0x034584C8 B 0x34584E0
	0x034584CC B 0x34584E0
	0x034584D0 B 0x34584E0
	0x034584D4 B 0x34584E0
	0x034584D8 B 0x34584E0
	0x034584DC B 0x34584E0
	0x034584E0 MOV X20, X0
	0x034584E4 CMP W1, 0x1
	0x034584E8 B.NE 0x345857C
	0x034584EC MOV X0, X20
	0x034584F0 BL 0x3EB1AD0
	0x034584F4 MOV X20, X0
	0x034584F8 ADRP X0, 0xC9B000
	0x034584FC LDR X0, [X0 + 0x7D0]
	0x03458500 BL 0x1C16D08
	0x03458504 LDR X8, [X20]
	0x03458508 LDR X1, [X8]
	0x0345850C BL 0x1C17270
	0x03458510 TBZ X0, 0x0, 0x3458554
	0x03458514 LDR X20, [X20]
	0x03458518 BL 0x3EB1AE0
	0x0345851C MOVN W8, 0x1
	0x03458520 STR X31, [X19 + 0x48]
	0x03458524 STR W8, [X19], #0x8
	0x03458528 ADRP X0, 0xC9E000
	0x0345852C LDR X0, [X0 + 0x280]
	0x03458530 BL 0x1C16D08
	0x03458534 LDR W8, [X0 + 0xE0]
	0x03458538 CBNZ W8, 0x3458540
	0x0345853C BL 0x1C16DFC
	0x03458540 MOV X0, X19
	0x03458544 MOV X1, X20
	0x03458548 MOV X2, X31
	0x0345854C BL 0x32C4908
	0x03458550 B 0x3458424
	0x03458554 MOVZ W0, 0x8
	0x03458558 BL 0x3EB1AF0
	0x0345855C LDR X8, [X20]
	0x03458560 STR X8, [X0]
	0x03458564 ADRP X1, 0xA5C000
	0x03458568 ADD X1, X1, 0xE58
	0x0345856C MOV X2, X31
	0x03458570 BL 0x3EB1B00
	0x03458574 MOV X20, X0
	0x03458578 BL 0x3EB1AE0
	0x0345857C MOV X0, X20
	0x03458580 BL 0x1D2C690
	0x03458584 BL 0x1990590
	0x03458588 STR X30, [X31 - 0x30]!
	0x0345858C STP X22, X21, [X31 + 0x10]
	0x03458590 STP X20, X19, [X31 + 0x20]
	0x03458594 ADRP X21, 0xF85000
	0x03458598 ADRP X22, 0xC9E000
	0x0345859C LDRB W8, [X21 + 0x790]
	0x034585A0 LDR X22, [X22 + 0x280]
	0x034585A4 MOV X19, X1
	0x034585A8 MOV X20, X0
	0x034585AC TBNZ X8, 0x0, 0x34585C4
	0x034585B0 ADRP X0, 0xC9E000
	0x034585B4 LDR X0, [X0 + 0x280]
	0x034585B8 BL 0x1C16CF4
	0x034585BC MOVZ W8, 0x1
	0x034585C0 STRB W8, [X21 + 0x790]
	0x034585C4 LDR X0, [X22]
	0x034585C8 LDR W8, [X0 + 0xE0]
	0x034585CC CBNZ W8, 0x34585D4
	0x034585D0 BL 0x1C16DFC
	0x034585D4 ADD X0, X20, 0x8
	0x034585D8 MOV X1, X19
	0x034585DC LDP X20, X19, [X31 + 0x20]
	0x034585E0 LDP X22, X21, [X31 + 0x10]
	0x034585E4 MOV X2, X31
	0x034585E8 LDR X30, [X31], #0x30
	0x034585EC B 0x32C477C
	0x034585F0 SUB X31, X31, 0x70
	0x034585F4 STP X30, X25, [X31 + 0x30]
	0x034585F8 STP X24, X23, [X31 + 0x40]
	0x034585FC STP X22, X21, [X31 + 0x50]
	0x03458600 STP X20, X19, [X31 + 0x60]
	0x03458604 ADRP X20, 0xF85000
	0x03458608 LDRB W8, [X20 + 0x791]
	0x0345860C MOV X19, X0
	0x03458610 TBNZ X8, 0x0, 0x34586C4
	0x03458614 ADRP X0, 0xCD7000
	0x03458618 LDR X0, [X0 + 0xE98]
	0x0345861C BL 0x1C16CF4
	0x03458620 ADRP X0, 0xCD7000
	0x03458624 LDR X0, [X0 + 0xEA0]
	0x03458628 BL 0x1C16CF4
	0x0345862C ADRP X0, 0xC9E000
	0x03458630 LDR X0, [X0 + 0x280]
	0x03458634 BL 0x1C16CF4
	0x03458638 ADRP X0, 0xC9D000
	0x0345863C LDR X0, [X0 + 0xA10]
	0x03458640 BL 0x1C16CF4
	0x03458644 ADRP X0, 0xC9C000
	0x03458648 LDR X0, [X0 + 0x9F0]
	0x0345864C BL 0x1C16CF4
	0x03458650 ADRP X0, 0xCA3000
	0x03458654 LDR X0, [X0 + 0x818]
	0x03458658 BL 0x1C16CF4
	0x0345865C ADRP X0, 0xC9C000
	0x03458660 LDR X0, [X0 + 0x818]
	0x03458664 BL 0x1C16CF4
	0x03458668 ADRP X0, 0xCD7000
	0x0345866C LDR X0, [X0 + 0x7C8]
	0x03458670 BL 0x1C16CF4
	0x03458674 ADRP X0, 0xCD7000
	0x03458678 LDR X0, [X0 + 0x7D0]
	0x0345867C BL 0x1C16CF4
	0x03458680 ADRP X0, 0xC9C000
	0x03458684 LDR X0, [X0 + 0x830]
	0x03458688 BL 0x1C16CF4
	0x0345868C ADRP X0, 0xC9C000
	0x03458690 LDR X0, [X0 + 0x838]
	0x03458694 BL 0x1C16CF4
	0x03458698 ADRP X0, 0xC9C000
	0x0345869C LDR X0, [X0 + 0x840]
	0x034586A0 BL 0x1C16CF4
	0x034586A4 ADRP X0, 0xCD7000
	0x034586A8 LDR X0, [X0 + 0xEA8]
	0x034586AC BL 0x1C16CF4
	0x034586B0 ADRP X0, 0xCD7000
	0x034586B4 LDR X0, [X0 + 0xEB0]
	0x034586B8 BL 0x1C16CF4
	0x034586BC MOVZ W8, 0x1
	0x034586C0 STRB W8, [X20 + 0x791]
	0x034586C4 STP X31, X31, [X31 + 0x20]
	0x034586C8 STR X31, [X31 + 0x18]
	0x034586CC ADRP X25, 0xC9E000
	0x034586D0 LDR W8, [X19]
	0x034586D4 LDR X20, [X19 + 0x20]
	0x034586D8 LDR X25, [X25 + 0x280]
	0x034586DC CBZ W8, 0x3458700
	0x034586E0 CMP W8, 0x1
	0x034586E4 B.NE 0x345872C
	0x034586E8 LDR X8, [X19 + 0x58]
	0x034586EC MOVN W9, 0x0
	0x034586F0 STR X8, [X31 + 0x18]
	0x034586F4 STR X31, [X19 + 0x58]
	0x034586F8 STR W9, [X19]
	0x034586FC B 0x3458A28
	0x03458700 LDR X8, [X19 + 0x50]
	0x03458704 MOVN W9, 0x0
	0x03458708 STR X8, [X31 + 0x20]
	0x0345870C STR X31, [X19 + 0x50]
	0x03458710 STR W9, [X19]
	0x03458714 ADRP X8, 0xC9C000
	0x03458718 LDR X8, [X8 + 0x830]
	0x0345871C ADD X0, X31, 0x20
	0x03458720 LDR X1, [X8]
	0x03458724 BL 0x2677474
	0x03458728 B 0x345895C
	0x0345872C ADRP X8, 0xCD7000
	0x03458730 LDR X8, [X8 + 0xEB0]
	0x03458734 LDR X0, [X8]
	0x03458738 BL 0x1C16F10
	0x0345873C MOV X21, X0
	0x03458740 MOV X1, X31
	0x03458744 BL 0x3449D34
	0x03458748 STR X21, [X19 + 0x48]
	0x0345874C CBZ X21, 0x3458AC8
	0x03458750 LDR X8, [X19 + 0x20]
	0x03458754 STR X8, [X21 + 0x10]
	0x03458758 LDR X8, [X19 + 0x28]
	0x0345875C STR X8, [X21 + 0x18]
	0x03458760 LDR X8, [X19 + 0x30]
	0x03458764 STR X8, [X21 + 0x20]
	0x03458768 LDR X8, [X19 + 0x38]
	0x0345876C STR X8, [X21 + 0x28]
	0x03458770 CBZ X20, 0x3458ACC
	0x03458774 LDRB W8, [X20 + 0x10]
	0x03458778 CBZ W8, 0x3458960
	0x0345877C LDR X8, [X19 + 0x48]
	0x03458780 CBZ X8, 0x3458AD0
	0x03458784 LDR X21, [X8 + 0x18]
	0x03458788 CBZ X21, 0x3458AD4
	0x0345878C ADRP X23, 0xC9C000
	0x03458790 LDR X8, [X21]
	0x03458794 LDR X23, [X23 + 0x818]
	0x03458798 LDRH W9, [X8 + 0x12E]
	0x0345879C LDR X1, [X23]
	0x034587A0 CBZ X9, 0x34587C4
	0x034587A4 LDR X10, [X8 + 0xB0]
	0x034587A8 ADD X10, X10, 0x8
	0x034587AC LDUR X11, [X10 - 0x8]
	0x034587B0 CMP X11, X1
	0x034587B4 B.EQ 0x34587D4
	0x034587B8 SUBS X9, X9, 0x1
	0x034587BC ADD X10, X10, 0x10
	0x034587C0 B.NE 0x34587AC
	0x034587C4 MOVZ W2, 0x7
	0x034587C8 MOV X0, X21
	0x034587CC BL 0x1C5C788
	0x034587D0 B 0x34587E4
	0x034587D4 LDR W9, [X10]
	0x034587D8 ADD W9, W9, 0x7
	0x034587DC ADD X8, X8, W9, 0x4, SXTW
	0x034587E0 ADD X0, X8, 0x138
	0x034587E4 LDP X8, X1, [X0]
	0x034587E8 MOV X0, X21
	0x034587EC BLR X8
	0x034587F0 MOV X1, X31
	0x034587F4 BL 0x32277A8
	0x034587F8 TBNZ X0, 0x0, 0x345895C
	0x034587FC LDR X8, [X19 + 0x48]
	0x03458800 CBZ X8, 0x3458AD8
	0x03458804 ADRP X9, 0xC9C000
	0x03458808 LDR X9, [X9 + 0x9F0]
	0x0345880C LDR X21, [X8 + 0x18]
	0x03458810 LDR X0, [X9]
	0x03458814 LDR W9, [X0 + 0xE0]
	0x03458818 CBNZ W9, 0x3458820
	0x0345881C BL 0x1C16DFC
	0x03458820 MOV X0, X31
	0x03458824 BL 0x33616A4
	0x03458828 ADRP X22, 0xC9D000
	0x0345882C LDR X22, [X22 + 0xA10]
	0x03458830 MOV X8, X0
	0x03458834 STR X8, [X31 + 0x28]
	0x03458838 LDR X0, [X22]
	0x0345883C LDR W8, [X0 + 0xE0]
	0x03458840 CBNZ W8, 0x345884C
	0x03458844 BL 0x1C16DFC
	0x03458848 LDR X0, [X22]
	0x0345884C LDR X8, [X0 + 0xB8]
	0x03458850 LDR X1, [X8]
	0x03458854 ADD X0, X31, 0x28
	0x03458858 MOV X2, X31
	0x0345885C BL 0x335FC68
	0x03458860 CBZ X21, 0x3458ADC
	0x03458864 LDR X8, [X21]
	0x03458868 LDR X1, [X23]
	0x0345886C MOV X22, X0
	0x03458870 LDRH W9, [X8 + 0x12E]
	0x03458874 CBZ X9, 0x3458898
	0x03458878 LDR X10, [X8 + 0xB0]
	0x0345887C ADD X10, X10, 0x8
	0x03458880 LDUR X11, [X10 - 0x8]
	0x03458884 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF86000
	011 Move W8, [X20+1931]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD8000
	018 Move X0, [X0+3640]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD8000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9F000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9E000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9D000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA4000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9D000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD8000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD8000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9D000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9D000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9D000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD8000
	054 Move X0, [X0+3656]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD8000
	057 Move X0, [X0+3664]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1931], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9F000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC9D000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD8000
	091 Move X8, [X8+3664]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass70_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xC9D000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xC9D000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC9E000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xC9D000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC9D000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCD8000
	242 Move X8, [X8+3640]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCA4000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCD8000
	257 Move X8, [X8+3656]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCD8000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCD8000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+72], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+88], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCD8000
	336 Move X8, [X8+3648]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xC9C000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+72], X31
	385 Move [X19+8], W8
	386 Move X0, 0xC9F000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA5D000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03458888 B.EQ 0x34588A8
	0x0345888C SUBS X9, X9, 0x1
	0x03458890 ADD X10, X10, 0x10
	0x03458894 B.NE 0x3458880
	0x03458898 MOVZ W2, 0xB
	0x0345889C MOV X0, X21
	0x034588A0 BL 0x1C5C788
	0x034588A4 B 0x34588B8
	0x034588A8 LDR W9, [X10]
	0x034588AC ADD W9, W9, 0xB
	0x034588B0 ADD X8, X8, W9, 0x4, SXTW
	0x034588B4 ADD X0, X8, 0x138
	0x034588B8 LDP X8, X2, [X0]
	0x034588BC MOV X0, X21
	0x034588C0 MOV X1, X22
	0x034588C4 BLR X8
	0x034588C8 TBZ X0, 0x0, 0x345895C
	0x034588CC LDR X8, [X19 + 0x48]
	0x034588D0 CBZ X8, 0x3458AE0
	0x034588D4 LDR X1, [X8 + 0x18]
	0x034588D8 LDR X3, [X19 + 0x40]
	0x034588DC LDR X4, [X8 + 0x28]
	0x034588E0 MOV X0, X20
	0x034588E4 MOV X2, X31
	0x034588E8 MOV X5, X31
	0x034588EC BL 0x34440A8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF86000
	007 Move X22, 0xC9F000
	008 Move W8, [X21+1932]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9F000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1932], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

