Type: Nakama.Client/<GetAccountAsync>d__64

Method: System.Void MoveNext()

Disassembly:
	0x034559C8 B.EQ 0x34559E8
	0x034559CC SUBS X9, X9, 0x1
	0x034559D0 ADD X10, X10, 0x10
	0x034559D4 B.NE 0x34559C0
	0x034559D8 MOVZ W2, 0x7
	0x034559DC MOV X0, X21
	0x034559E0 BL 0x1C5C788
	0x034559E4 B 0x34559F8
	0x034559E8 LDR W9, [X10]
	0x034559EC ADD W9, W9, 0x7
	0x034559F0 ADD X8, X8, W9, 0x4, SXTW
	0x034559F4 ADD X0, X8, 0x138
	0x034559F8 LDP X8, X1, [X0]
	0x034559FC MOV X0, X21
	0x03455A00 BLR X8
	0x03455A04 MOV X1, X31
	0x03455A08 BL 0x32277A8
	0x03455A0C TBNZ X0, 0x0, 0x3455B70
	0x03455A10 LDR X8, [X19 + 0x58]
	0x03455A14 CBZ X8, 0x3455D1C
	0x03455A18 ADRP X9, 0xC9F000
	0x03455A1C LDR X9, [X9 + 0x9F0]
	0x03455A20 LDR X21, [X8 + 0x18]
	0x03455A24 LDR X0, [X9]
	0x03455A28 LDR W9, [X0 + 0xE0]
	0x03455A2C CBNZ W9, 0x3455A34
	0x03455A30 BL 0x1C16DFC
	0x03455A34 MOV X0, X31
	0x03455A38 BL 0x33616A4
	0x03455A3C ADRP X22, 0xCA0000
	0x03455A40 LDR X22, [X22 + 0xA10]
	0x03455A44 MOV X8, X0
	0x03455A48 STR X8, [X31 + 0x28]
	0x03455A4C LDR X0, [X22]
	0x03455A50 LDR W8, [X0 + 0xE0]
	0x03455A54 CBNZ W8, 0x3455A60
	0x03455A58 BL 0x1C16DFC
	0x03455A5C LDR X0, [X22]
	0x03455A60 LDR X8, [X0 + 0xB8]
	0x03455A64 LDR X1, [X8]
	0x03455A68 ADD X0, X31, 0x28
	0x03455A6C MOV X2, X31
	0x03455A70 BL 0x335FC68
	0x03455A74 CBZ X21, 0x3455D20
	0x03455A78 LDR X8, [X21]
	0x03455A7C LDR X1, [X23]
	0x03455A80 MOV X22, X0
	0x03455A84 LDRH W9, [X8 + 0x12E]
	0x03455A88 CBZ X9, 0x3455AAC
	0x03455A8C LDR X10, [X8 + 0xB0]
	0x03455A90 ADD X10, X10, 0x8
	0x03455A94 LDUR X11, [X10 - 0x8]
	0x03455A98 CMP X11, X1
	0x03455A9C B.EQ 0x3455ABC
	0x03455AA0 SUBS X9, X9, 0x1
	0x03455AA4 ADD X10, X10, 0x10
	0x03455AA8 B.NE 0x3455A94
	0x03455AAC MOVZ W2, 0xB
	0x03455AB0 MOV X0, X21
	0x03455AB4 BL 0x1C5C788
	0x03455AB8 B 0x3455ACC
	0x03455ABC LDR W9, [X10]
	0x03455AC0 ADD W9, W9, 0xB
	0x03455AC4 ADD X8, X8, W9, 0x4, SXTW
	0x03455AC8 ADD X0, X8, 0x138
	0x03455ACC LDP X8, X2, [X0]
	0x03455AD0 MOV X0, X21
	0x03455AD4 MOV X1, X22
	0x03455AD8 BLR X8
	0x03455ADC TBZ X0, 0x0, 0x3455B70
	0x03455AE0 LDR X8, [X19 + 0x58]
	0x03455AE4 CBZ X8, 0x3455D24
	0x03455AE8 LDR X1, [X8 + 0x18]
	0x03455AEC LDR X3, [X19 + 0x50]
	0x03455AF0 LDR X4, [X8 + 0x38]
	0x03455AF4 MOV X0, X20
	0x03455AF8 MOV X2, X31
	0x03455AFC MOV X5, X31
	0x03455B00 BL 0x34440A8
	0x03455B04 CBZ X0, 0x3455D28
	0x03455B08 ADRP X8, 0xC9F000
	0x03455B0C LDR X8, [X8 + 0x840]
	0x03455B10 LDR X1, [X8]
	0x03455B14 BL 0x269F5D0
	0x03455B18 ADRP X8, 0xC9F000
	0x03455B1C LDR X8, [X8 + 0x838]
	0x03455B20 STR X0, [X31 + 0x20]
	0x03455B24 LDR X1, [X8]
	0x03455B28 ADD X0, X31, 0x20
	0x03455B2C BL 0x2677430
	0x03455B30 TBNZ X0, 0x0, 0x3455928
	0x03455B34 STR W31, [X19]
	0x03455B38 LDR X8, [X31 + 0x20]
	0x03455B3C STR X8, [X19 + 0x60]
	0x03455B40 LDR X0, [X25]
	0x03455B44 LDR W8, [X0 + 0xE0]
	0x03455B48 CBNZ W8, 0x3455B50
	0x03455B4C BL 0x1C16DFC
	0x03455B50 ADRP X8, 0xCDA000
	0x03455B54 LDR X8, [X8 + 0xD98]
	0x03455B58 ADD X0, X19, 0x8
	0x03455B5C LDR X3, [X8]
	0x03455B60 ADD X1, X31, 0x20
	0x03455B64 MOV X2, X19
	0x03455B68 BL 0x1FBB024
	0x03455B6C B 0x3455CE4
	0x03455B70 CBZ X20, 0x3455D08
	0x03455B74 ADRP X8, 0xCDA000
	0x03455B78 LDR X8, [X8 + 0xDA0]
	0x03455B7C LDR X21, [X20 + 0x58]
	0x03455B80 LDR X23, [X19 + 0x58]
	0x03455B84 LDR X0, [X8]
	0x03455B88 BL 0x1C16F10
	0x03455B8C ADRP X8, 0xCDA000
	0x03455B90 LDR X8, [X8 + 0xDC8]
	0x03455B94 MOV X22, X0
	0x03455B98 LDR X2, [X8]
	0x03455B9C MOV X1, X23
	0x03455BA0 MOV X3, X31
	0x03455BA4 BL 0x2D27AA8
	0x03455BA8 LDR X8, [X19 + 0x58]
	0x03455BAC CBZ X8, 0x3455CFC
	0x03455BB0 ADRP X9, 0xCDA000
	0x03455BB4 LDR X23, [X19 + 0x50]
	0x03455BB8 LDR X9, [X9 + 0x7C8]
	0x03455BBC CBNZ X23, 0x3455BC4
	0x03455BC0 LDR X23, [X20 + 0x18]
	0x03455BC4 LDR X20, [X8 + 0x18]
	0x03455BC8 LDR X1, [X8 + 0x38]
	0x03455BCC LDR X2, [X9]
	0x03455BD0 STP X31, X31, [X31 + 0x8]
	0x03455BD4 ADD X0, X31, 0x8
	0x03455BD8 BL 0x242E368
	0x03455BDC ADRP X8, 0xCDA000
	0x03455BE0 LDR X8, [X8 + 0x7D0]
	0x03455BE4 LDR X0, [X8]
	0x03455BE8 BL 0x1C16F10
	0x03455BEC LDP X3, X4, [X31 + 0x8]
	0x03455BF0 MOV X24, X0
	0x03455BF4 MOV X1, X20
	0x03455BF8 MOV X2, X23
	0x03455BFC MOV X5, X31
	0x03455C00 BL 0x3465404
	0x03455C04 CBZ X21, 0x3455D00
	0x03455C08 ADRP X8, 0xCDA000
	0x03455C0C LDR X8, [X8 + 0xDA8]
	0x03455C10 LDR X3, [X8]
	0x03455C14 MOV X0, X21
	0x03455C18 MOV X1, X22
	0x03455C1C MOV X2, X24
	0x03455C20 BL 0x2243230
	0x03455C24 CBZ X0, 0x3455D04
	0x03455C28 ADRP X8, 0xCDA000
	0x03455C2C LDR X8, [X8 + 0xDC0]
	0x03455C30 LDR X1, [X8]
	0x03455C34 BL 0x269F5D0
	0x03455C38 ADRP X8, 0xCDA000
	0x03455C3C LDR X8, [X8 + 0xDB8]
	0x03455C40 STR X0, [X31 + 0x18]
	0x03455C44 LDR X1, [X8]
	0x03455C48 ADD X0, X31, 0x18
	0x03455C4C BL 0x2677430
	0x03455C50 TBZ X0, 0x0, 0x3455CA8
	0x03455C54 ADRP X8, 0xCDA000
	0x03455C58 LDR X8, [X8 + 0xDB0]
	0x03455C5C ADD X0, X31, 0x18
	0x03455C60 LDR X1, [X8]
	0x03455C64 BL 0x2677474
	0x03455C68 MOVN W8, 0x1
	0x03455C6C STR W8, [X19]
	0x03455C70 STR X31, [X19 + 0x58]
	0x03455C74 MOV X20, X0
	0x03455C78 LDR X0, [X25]
	0x03455C7C ADRP X21, 0xCD9000
	0x03455C80 ADD X19, X19, 0x8
	0x03455C84 LDR W8, [X0 + 0xE0]
	0x03455C88 LDR X21, [X21 + 0xD38]
	0x03455C8C CBNZ W8, 0x3455C94
	0x03455C90 BL 0x1C16DFC
	0x03455C94 LDR X2, [X21]
	0x03455C98 MOV X0, X19
	0x03455C9C MOV X1, X20
	0x03455CA0 BL 0x26322B0
	0x03455CA4 B 0x3455CE4
	0x03455CA8 MOVZ W8, 0x1
	0x03455CAC STR W8, [X19]
	0x03455CB0 LDR X8, [X31 + 0x18]
	0x03455CB4 STR X8, [X19 + 0x68]
	0x03455CB8 LDR X0, [X25]
	0x03455CBC LDR W8, [X0 + 0xE0]
	0x03455CC0 CBNZ W8, 0x3455CC8
	0x03455CC4 BL 0x1C16DFC
	0x03455CC8 ADRP X8, 0xCDA000
	0x03455CCC LDR X8, [X8 + 0xD90]
	0x03455CD0 ADD X0, X19, 0x8
	0x03455CD4 LDR X3, [X8]
	0x03455CD8 ADD X1, X31, 0x18
	0x03455CDC MOV X2, X19
	0x03455CE0 BL 0x1FBB024
	0x03455CE4 LDP X20, X19, [X31 + 0x60]
	0x03455CE8 LDP X22, X21, [X31 + 0x50]
	0x03455CEC LDP X24, X23, [X31 + 0x40]
	0x03455CF0 LDP X30, X25, [X31 + 0x30]
	0x03455CF4 ADD X31, X31, 0x70
	0x03455CF8 RET
	0x03455CFC BL 0x1C16F20
	0x03455D00 BL 0x1C16F20
	0x03455D04 BL 0x1C16F20
	0x03455D08 BL 0x1C16F20
	0x03455D0C BL 0x1C16F20
	0x03455D10 BL 0x1C16F20
	0x03455D14 BL 0x1C16F20
	0x03455D18 BL 0x1C16F20
	0x03455D1C BL 0x1C16F20
	0x03455D20 BL 0x1C16F20
	0x03455D24 BL 0x1C16F20
	0x03455D28 BL 0x1C16F20
	0x03455D2C B 0x3455DA0
	0x03455D30 B 0x3455DA0
	0x03455D34 B 0x3455DA0
	0x03455D38 B 0x3455DA0
	0x03455D3C B 0x3455DA0
	0x03455D40 B 0x3455DA0
	0x03455D44 B 0x3455DA0
	0x03455D48 B 0x3455DA0
	0x03455D4C B 0x3455DA0
	0x03455D50 B 0x3455DA0
	0x03455D54 B 0x3455DA0
	0x03455D58 B 0x3455DA0
	0x03455D5C B 0x3455DA0
	0x03455D60 B 0x3455DA0
	0x03455D64 B 0x3455DA0
	0x03455D68 B 0x3455DA0
	0x03455D6C B 0x3455DA0
	0x03455D70 B 0x3455DA0
	0x03455D74 B 0x3455DA0
	0x03455D78 B 0x3455DA0
	0x03455D7C B 0x3455DA0
	0x03455D80 B 0x3455DA0
	0x03455D84 B 0x3455DA0
	0x03455D88 B 0x3455DA0
	0x03455D8C B 0x3455DA0
	0x03455D90 B 0x3455DA0
	0x03455D94 B 0x3455DA0
	0x03455D98 B 0x3455DA0
	0x03455D9C B 0x3455DA0
	0x03455DA0 MOV X20, X0
	0x03455DA4 CMP W1, 0x1
	0x03455DA8 B.NE 0x3455E48
	0x03455DAC MOV X0, X20
	0x03455DB0 BL 0x3EB1AD0
	0x03455DB4 MOV X20, X0
	0x03455DB8 ADRP X0, 0xC9E000
	0x03455DBC LDR X0, [X0 + 0x7D0]
	0x03455DC0 BL 0x1C16D08
	0x03455DC4 LDR X8, [X20]
	0x03455DC8 LDR X1, [X8]
	0x03455DCC BL 0x1C17270
	0x03455DD0 TBZ X0, 0x0, 0x3455E20
	0x03455DD4 LDR X20, [X20]
	0x03455DD8 BL 0x3EB1AE0
	0x03455DDC MOVN W8, 0x1
	0x03455DE0 STR X31, [X19 + 0x58]
	0x03455DE4 STR W8, [X19], #0x8
	0x03455DE8 ADRP X0, 0xCD9000
	0x03455DEC LDR X0, [X0 + 0x770]
	0x03455DF0 BL 0x1C16D08
	0x03455DF4 LDR W8, [X0 + 0xE0]
	0x03455DF8 CBNZ W8, 0x3455E00
	0x03455DFC BL 0x1C16DFC
	0x03455E00 ADRP X0, 0xCD9000
	0x03455E04 LDR X0, [X0 + 0xD58]
	0x03455E08 BL 0x1C16D08
	0x03455E0C MOV X2, X0
	0x03455E10 MOV X0, X19
	0x03455E14 MOV X1, X20
	0x03455E18 BL 0x26324C8
	0x03455E1C B 0x3455CE4
	0x03455E20 MOVZ W0, 0x8
	0x03455E24 BL 0x3EB1AF0
	0x03455E28 LDR X8, [X20]
	0x03455E2C STR X8, [X0]
	0x03455E30 ADRP X1, 0xA5F000
	0x03455E34 ADD X1, X1, 0xE58
	0x03455E38 MOV X2, X31
	0x03455E3C BL 0x3EB1B00
	0x03455E40 MOV X20, X0
	0x03455E44 BL 0x3EB1AE0
	0x03455E48 MOV X0, X20
	0x03455E4C BL 0x1D2C690
	0x03455E50 BL 0x1990590
	0x03455E54 STR X30, [X31 - 0x30]!
	0x03455E58 STP X22, X21, [X31 + 0x10]
	0x03455E5C STP X20, X19, [X31 + 0x20]
	0x03455E60 ADRP X22, 0xF88000
	0x03455E64 ADRP X21, 0xCD9000
	0x03455E68 LDRB W8, [X22 + 0x784]
	0x03455E6C LDR X21, [X21 + 0x770]
	0x03455E70 MOV X19, X1
	0x03455E74 MOV X20, X0
	0x03455E78 TBNZ X8, 0x0, 0x3455E9C
	0x03455E7C ADRP X0, 0xCD9000
	0x03455E80 LDR X0, [X0 + 0xD60]
	0x03455E84 BL 0x1C16CF4
	0x03455E88 ADRP X0, 0xCD9000
	0x03455E8C LDR X0, [X0 + 0x770]
	0x03455E90 BL 0x1C16CF4
	0x03455E94 MOVZ W8, 0x1
	0x03455E98 STRB W8, [X22 + 0x784]
	0x03455E9C LDR X0, [X21]
	0x03455EA0 ADRP X21, 0xCD9000
	0x03455EA4 LDR W8, [X0 + 0xE0]
	0x03455EA8 LDR X21, [X21 + 0xD60]
	0x03455EAC CBNZ W8, 0x3455EB4
	0x03455EB0 BL 0x1C16DFC
	0x03455EB4 LDR X2, [X21]
	0x03455EB8 ADD X0, X20, 0x8
	0x03455EBC MOV X1, X19
	0x03455EC0 LDP X20, X19, [X31 + 0x20]
	0x03455EC4 LDP X22, X21, [X31 + 0x10]
	0x03455EC8 LDR X30, [X31], #0x30
	0x03455ECC B 0x2632228
	0x03455ED0 SUB X31, X31, 0x70
	0x03455ED4 STP X30, X25, [X31 + 0x30]
	0x03455ED8 STP X24, X23, [X31 + 0x40]
	0x03455EDC STP X22, X21, [X31 + 0x50]
	0x03455EE0 STP X20, X19, [X31 + 0x60]
	0x03455EE4 ADRP X20, 0xF88000
	0x03455EE8 LDRB W8, [X20 + 0x785]
	0x03455EEC MOV X19, X0
	0x03455EF0 TBNZ X8, 0x0, 0x3455FA4
	0x03455EF4 ADRP X0, 0xCDA000
	0x03455EF8 LDR X0, [X0 + 0xDD8]
	0x03455EFC BL 0x1C16CF4
	0x03455F00 ADRP X0, 0xCDA000
	0x03455F04 LDR X0, [X0 + 0xDE0]
	0x03455F08 BL 0x1C16CF4
	0x03455F0C ADRP X0, 0xCA1000
	0x03455F10 LDR X0, [X0 + 0x280]
	0x03455F14 BL 0x1C16CF4
	0x03455F18 ADRP X0, 0xCA0000
	0x03455F1C LDR X0, [X0 + 0xA10]
	0x03455F20 BL 0x1C16CF4
	0x03455F24 ADRP X0, 0xC9F000
	0x03455F28 LDR X0, [X0 + 0x9F0]
	0x03455F2C BL 0x1C16CF4
	0x03455F30 ADRP X0, 0xCA6000
	0x03455F34 LDR X0, [X0 + 0x818]
	0x03455F38 BL 0x1C16CF4
	0x03455F3C ADRP X0, 0xC9F000
	0x03455F40 LDR X0, [X0 + 0x818]
	0x03455F44 BL 0x1C16CF4
	0x03455F48 ADRP X0, 0xCDA000
	0x03455F4C LDR X0, [X0 + 0x7C8]
	0x03455F50 BL 0x1C16CF4
	0x03455F54 ADRP X0, 0xCDA000
	0x03455F58 LDR X0, [X0 + 0x7D0]
	0x03455F5C BL 0x1C16CF4
	0x03455F60 ADRP X0, 0xC9F000
	0x03455F64 LDR X0, [X0 + 0x830]
	0x03455F68 BL 0x1C16CF4
	0x03455F6C ADRP X0, 0xC9F000
	0x03455F70 LDR X0, [X0 + 0x838]
	0x03455F74 BL 0x1C16CF4
	0x03455F78 ADRP X0, 0xC9F000
	0x03455F7C LDR X0, [X0 + 0x840]
	0x03455F80 BL 0x1C16CF4
	0x03455F84 ADRP X0, 0xCDA000
	0x03455F88 LDR X0, [X0 + 0xDE8]
	0x03455F8C BL 0x1C16CF4
	0x03455F90 ADRP X0, 0xCDA000
	0x03455F94 LDR X0, [X0 + 0xDF0]
	0x03455F98 BL 0x1C16CF4
	0x03455F9C MOVZ W8, 0x1
	0x03455FA0 STRB W8, [X20 + 0x785]
	0x03455FA4 STP X31, X31, [X31 + 0x20]
	0x03455FA8 STR X31, [X31 + 0x18]
	0x03455FAC ADRP X25, 0xCA1000
	0x03455FB0 LDR W8, [X19]
	0x03455FB4 LDR X20, [X19 + 0x20]
	0x03455FB8 LDR X25, [X25 + 0x280]
	0x03455FBC CBZ W8, 0x3455FE0
	0x03455FC0 CMP W8, 0x1
	0x03455FC4 B.NE 0x345600C
	0x03455FC8 LDR X8, [X19 + 0x60]
	0x03455FCC MOVN W9, 0x0
	0x03455FD0 STR X8, [X31 + 0x18]
	0x03455FD4 STR X31, [X19 + 0x60]
	0x03455FD8 STR W9, [X19]
	0x03455FDC B 0x3456318
	0x03455FE0 LDR X8, [X19 + 0x58]
	0x03455FE4 MOVN W9, 0x0
	0x03455FE8 STR X8, [X31 + 0x20]
	0x03455FEC STR X31, [X19 + 0x58]
	0x03455FF0 STR W9, [X19]
	0x03455FF4 ADRP X8, 0xC9F000
	0x03455FF8 LDR X8, [X8 + 0x830]
	0x03455FFC ADD X0, X31, 0x20
	0x03456000 LDR X1, [X8]
	0x03456004 BL 0x2677474
	0x03456008 B 0x345624C
	0x0345600C ADRP X8, 0xCD9000
	0x03456010 LDR X8, [X8 + 0xDF0]
	0x03456014 LDR X0, [X8]
	0x03456018 BL 0x1C16F10
	0x0345601C MOV X21, X0
	0x03456020 MOV X1, X31
	0x03456024 BL 0x3449644
	0x03456028 STR X21, [X19 + 0x50]
	0x0345602C CBZ X21, 0x34563B8
	0x03456030 LDR X8, [X19 + 0x20]
	0x03456034 STR X8, [X21 + 0x10]
	0x03456038 LDR X8, [X19 + 0x28]
	0x0345603C STR X8, [X21 + 0x18]
	0x03456040 LDR X8, [X19 + 0x30]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF89000
	011 Move W8, [X20+1919]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCDB000
	018 Move X0, [X0+3352]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDB000
	021 Move X0, [X0+3360]
	022 Call 0x1C17CF4
	023 Move X0, 0xCDA000
	024 Move X0, [X0+3272]
	025 Call 0x1C17CF4
	026 Move X0, 0xCDA000
	027 Move X0, [X0+760]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA1000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA0000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCDB000
	036 Move X0, [X0+3368]
	037 Call 0x1C17CF4
	038 Move X0, 0xCA0000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDB000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCDB000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCDB000
	048 Move X0, [X0+3376]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA0000
	051 Move X0, [X0+2336]
	052 Call 0x1C17CF4
	053 Move X0, 0xCA0000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xCA0000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCA0000
	060 Move X0, [X0+2368]
	061 Call 0x1C17CF4
	062 Move X0, 0xCA0000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCA0000
	066 Move X0, [X0+2400]
	067 Call 0x1C17CF4
	068 Move X0, 0xCDB000
	069 Move X0, [X0+3384]
	070 Call 0x1C17CF4
	071 Move X0, 0xCDB000
	072 Move X0, [X0+3392]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1919], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCDA000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+760]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+80]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+80], X31
	092 Move [X19], W9
	093 Move X8, [X19+72]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+72], X31
	099 Move [X19], W9
	100 Move X8, 0xCA0000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCDB000
	106 Move X8, [X8+3392]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass64_0..ctor, X0
	112 Move [X19+64], X21
	113 Compare X21, 0
	114 JumpIfEqual {381}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Compare X20, 0
	122 JumpIfEqual {382}
	123 Move W8, [X20+16]
	124 Compare W8, 0
	125 JumpIfEqual {263}
	126 Move X8, [X19+64]
	127 Compare X8, 0
	128 JumpIfEqual {383}
	129 Move X21, [X8+24]
	130 Compare X21, 0
	131 JumpIfEqual {384}
	132 Move X23, 0xCA0000
	133 Move X8, [X21]
	134 Move X23, [X23+2072]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X1, [X23]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 7
	146 Move X0, X21
	147 Call 0x1C5D788
	148 Move W9, [X10]
	149 Add W9, W9, 7
	150 Add X8, X8, W9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X1, [X0+8]
	154 Move X0, X21
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X1, X31
	157 Call String.IsNullOrEmpty, X0
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {261}
	162 Move X8, [X19+64]
	163 Compare X8, 0
	164 JumpIfEqual {385}
	165 Move X9, 0xCA0000
	166 Move X9, [X9+2544]
	167 Move X21, [X8+24]
	168 Move X0, [X9]
	169 Move W9, [X0+224]
	170 Compare W9, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, X31
	174 Call DateTime.get_UtcNow
	175 Move X22, 0xCA1000
	176 Move X22, [X22+2576]
	177 Move X8, X0
	178 Move [X31+40], X8
	179 Move X0, [X22]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {185}
	183 Call 0x1C17DFC
	184 Move X0, [X22]
	185 Move X8, [X0+184]
	186 Move X1, [X8]
	187 Add X0, X31, 40
	188 Move X2, X31
	189 Call DateTime.Add, X0, X1
	190 Compare X21, 0
	191 JumpIfEqual {386}
	192 Move X8, [X21]
	193 Move X1, [X23]
	194 Move X22, X0
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move W2, 11
	205 Move X0, X21
	206 Call 0x1C5D788
	207 Move W9, [X10]
	208 Add W9, W9, 11
	209 Add X8, X8, W9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X2, [X0+8]
	213 Move X0, X21
	214 Move X1, X22
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {261}
	220 Move X8, [X19+64]
	221 Compare X8, 0
	222 JumpIfEqual {387}
	223 Move X1, [X8+24]
	224 Move X4, [X8+32]
	225 Move X3, [X19+56]
	226 Move X0, X20
	227 Move X2, X31
	228 Move X5, X31
	229 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	230 Compare X0, 0
	231 JumpIfEqual {388}
	232 Move X8, 0xCA0000
	233 Move X8, [X8+2112]
	234 Move X1, [X8]
	235 Call Task`1<Object>.GetAwaiter, X0
	236 Move X8, 0xCA0000
	237 Move X8, [X8+2104]
	238 Move [X31+32], X0
	239 Move X1, [X8]
	240 Add X0, X31, 32
	241 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {100}
	246 Move [X19], W31
	247 Move X8, [X31+32]
	248 Move [X19+72], X8
	249 Move X0, [X25]
	250 Move W8, [X0+224]
	251 Compare W8, 0
	252 JumpIfNotEqual {254}
	253 Call 0x1C17DFC
	254 Move X8, 0xCDB000
	255 Move X8, [X8+3360]
	256 Add X0, X19, 8
	257 Move X3, [X8]
	258 Add X1, X31, 32
	259 Move X2, X19
	260 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	261 Compare X20, 0
	262 JumpIfEqual {380}
	263 Move X8, 0xCDB000
	264 Move X8, [X8+3368]
	265 Move X21, [X20+88]
	266 Move X23, [X19+64]
	267 Move X0, [X8]
	268 Call 0x1C17F10
	269 Move X8, 0xCDB000
	270 Move X8, [X8+3384]
	271 Move X22, X0
	272 Move X2, [X8]
	273 Move X1, X23
	274 Move X3, X31
	275 Call Func`1<Object>..ctor, X0, X1, X2
	276 Move X8, [X19+64]
	277 Compare X8, 0
	278 JumpIfEqual {377}
	279 Move X9, 0xCDB000
	280 Move X23, [X19+56]
	281 Move X9, [X9+1992]
	282 Compare X23, 0
	283 JumpIfNotEqual {285}
	284 Move X23, [X20+24]
	285 Move X20, [X8+24]
	286 Move X1, [X8+32]
	287 Move X2, [X9]
	288 Move [X31+8], X31
	289 Move [X31+16], X31
	290 Add X0, X31, 8
	291 Call Nullable`1<CancellationToken>..ctor, X0, X1
	292 Move X8, 0xCDB000
	293 Move X8, [X8+2000]
	294 Move X0, [X8]
	295 Call 0x1C17F10
	296 Move X3, [X31+8]
	297 Move X4, [X31+16]
	298 Move X24, X0
	299 Move X1, X20
	300 Move X2, X23
	301 Move X5, X31
	302 Call RetryHistory..ctor, X0, X1, X2, X3
	303 Compare X21, 0
	304 JumpIfEqual {378}
	305 Move X8, 0xCDB000
	306 Move X8, [X8+3376]
	307 Move X3, [X8]
	308 Move X0, X21
	309 Move X1, X22
	310 Move X2, X24
	311 Call 0x2244230, X0, X1, X2
	312 Compare X0, 0
	313 JumpIfEqual {379}
	314 Move X8, 0xCA0000
	315 Move X8, [X8+2400]
	316 Move X1, [X8]
	317 Call Task`1<Object>.GetAwaiter, X0
	318 Move X8, 0xCA0000
	319 Move X8, [X8+2368]
	320 Move [X31+24], X0
	321 Move X1, [X8]
	322 Add X0, X31, 24
	323 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {351}
	328 Move X8, 0xCA0000
	329 Move X8, [X8+2336]
	330 Add X0, X31, 24
	331 Move X1, [X8]
	332 Call TaskAwaiter`1<Object>.GetResult, X0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19], W8
	337 Move [X19+64], X31
	338 Move X20, X0
	339 Move X0, [X25]
	340 Move X21, 0xCDA000
	341 Add X19, X19, 8
	342 Move W8, [X0+224]
	343 Move X21, [X21+3272]
	344 Compare W8, 0
	345 JumpIfNotEqual {347}
	346 Call 0x1C17DFC
	347 Move X2, [X21]
	348 Move X0, X19
	349 Move X1, X20
	350 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	351 Move W8, 1
	352 Move [X19], W8
	353 Move X8, [X31+24]
	354 Move [X19+80], X8
	355 Move X0, [X25]
	356 Move W8, [X0+224]
	357 Compare W8, 0
	358 JumpIfNotEqual {360}
	359 Call 0x1C17DFC
	360 Move X8, 0xCDB000
	361 Move X8, [X8+3352]
	362 Add X0, X19, 8
	363 Move X3, [X8]
	364 Add X1, X31, 24
	365 Move X2, X19
	366 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	367 Move X20, [X31+96]
	368 Move X19, [X31+104]
	369 Move X22, [X31+80]
	370 Move X21, [X31+88]
	371 Move X24, [X31+64]
	372 Move X23, [X31+72]
	373 Move X30, [X31+48]
	374 Move X25, [X31+56]
	375 Add X31, X31, 112
	376 Return 
	377 Call 0x1C17F20
	378 Call 0x1C17F20
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Move X20, X0
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X0, X20
	392 Call 0x3EB2AD0
	393 Move X20, X0
	394 Move X0, 0xC9F000
	395 Move X0, [X0+2000]
	396 Call 0x1C17D08
	397 Move X8, [X20]
	398 Move X1, [X8]
	399 Call 0x1C18270
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfNotEqual {425}
	404 Move X20, [X20]
	405 Call 0x3EB2AE0
	406 Move TEMP, 1
	407 Not TEMP
	408 Move W8, TEMP
	409 Move [X19+64], X31
	410 Move [X19+8], W8
	411 Move X0, 0xCDA000
	412 Move X0, [X0+760]
	413 Call 0x1C17D08
	414 Move W8, [X0+224]
	415 Compare W8, 0
	416 JumpIfNotEqual {418}
	417 Call 0x1C17DFC
	418 Move X0, 0xCDA000
	419 Move X0, [X0+3288]
	420 Call 0x1C17D08
	421 Move X2, X0
	422 Move X0, X19
	423 Move X1, X20
	424 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	425 Move W0, 8
	426 Call 0x3EB2AF0
	427 Move X8, [X20]
	428 Move [X0], X8
	429 Move X1, 0xA5F000
	430 Add X1, X1, 3672
	431 Move X2, X31
	432 Call 0x3EB2B00
	433 Move X20, X0
	434 Call 0x3EB2AE0
	435 Move X0, X20
	436 Call 0x1D2D690
	437 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03456044 STR X8, [X21 + 0x20]
	0x03456048 LDRH W8, [X19 + 0x38]
	0x0345604C STRH W8, [X21 + 0x28]
	0x03456050 LDR X8, [X19 + 0x50]
	0x03456054 CBZ X8, 0x34563BC
	0x03456058 LDR X9, [X19 + 0x40]
	0x0345605C STR X9, [X8 + 0x30]
	0x03456060 CBZ X20, 0x34563C0
	0x03456064 LDRB W8, [X20 + 0x10]
	0x03456068 CBZ W8, 0x3456250
	0x0345606C LDR X8, [X19 + 0x50]
	0x03456070 CBZ X8, 0x34563C4
	0x03456074 LDR X21, [X8 + 0x18]
	0x03456078 CBZ X21, 0x34563C8
	0x0345607C ADRP X23, 0xC9E000
	0x03456080 LDR X8, [X21]
	0x03456084 LDR X23, [X23 + 0x818]
	0x03456088 LDRH W9, [X8 + 0x12E]
	0x0345608C LDR X1, [X23]
	0x03456090 CBZ X9, 0x34560B4
	0x03456094 LDR X10, [X8 + 0xB0]
	0x03456098 ADD X10, X10, 0x8
	0x0345609C LDUR X11, [X10 - 0x8]
	0x034560A0 CMP X11, X1
	0x034560A4 B.EQ 0x34560C4
	0x034560A8 SUBS X9, X9, 0x1
	0x034560AC ADD X10, X10, 0x10
	0x034560B0 B.NE 0x345609C
	0x034560B4 MOVZ W2, 0x7
	0x034560B8 MOV X0, X21
	0x034560BC BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF88000
	007 Move X21, 0xCD9000
	008 Move W8, [X22+1920]
	009 Move X21, [X21+760]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCD9000
	017 Move X0, [X0+3296]
	018 Call 0x1C17CF4
	019 Move X0, 0xCD9000
	020 Move X0, [X0+760]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1920], W8
	024 Move X0, [X21]
	025 Move X21, 0xCD9000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3296]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

