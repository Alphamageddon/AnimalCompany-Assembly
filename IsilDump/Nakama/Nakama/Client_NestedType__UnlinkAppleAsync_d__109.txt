Type: Nakama.Client/<UnlinkAppleAsync>d__109

Method: System.Void MoveNext()

Disassembly:
	0x034696A0 LDR X8, [X8 + 0x838]
	0x034696A4 STR X0, [X31 + 0x20]
	0x034696A8 LDR X1, [X8]
	0x034696AC ADD X0, X31, 0x20
	0x034696B0 BL 0x2677430
	0x034696B4 TBNZ X0, 0x0, 0x34694AC
	0x034696B8 STR W31, [X19]
	0x034696BC LDR X8, [X31 + 0x20]
	0x034696C0 STR X8, [X19 + 0x50]
	0x034696C4 LDR X0, [X25]
	0x034696C8 LDR W8, [X0 + 0xE0]
	0x034696CC CBNZ W8, 0x34696D4
	0x034696D0 BL 0x1C16DFC
	0x034696D4 ADRP X8, 0xCC7000
	0x034696D8 LDR X8, [X8 + 0x4E0]
	0x034696DC ADD X0, X19, 0x8
	0x034696E0 LDR X3, [X8]
	0x034696E4 ADD X1, X31, 0x20
	0x034696E8 MOV X2, X19
	0x034696EC BL 0x2188D94
	0x034696F0 B 0x3469830
	0x034696F4 CBZ X20, 0x3469854
	0x034696F8 ADRP X8, 0xC92000
	0x034696FC LDR X8, [X8 + 0x818]
	0x03469700 LDR X21, [X20 + 0x58]
	0x03469704 LDR X23, [X19 + 0x48]
	0x03469708 LDR X0, [X8]
	0x0346970C BL 0x1C16F10
	0x03469710 ADRP X8, 0xCC7000
	0x03469714 LDR X8, [X8 + 0x4F0]
	0x03469718 MOV X22, X0
	0x0346971C LDR X2, [X8]
	0x03469720 MOV X1, X23
	0x03469724 MOV X3, X31
	0x03469728 BL 0x2D27AA8
	0x0346972C LDR X8, [X19 + 0x48]
	0x03469730 CBZ X8, 0x3469848
	0x03469734 ADRP X9, 0xCC6000
	0x03469738 LDR X23, [X19 + 0x40]
	0x0346973C LDR X9, [X9 + 0x7C8]
	0x03469740 CBNZ X23, 0x3469748
	0x03469744 LDR X23, [X20 + 0x18]
	0x03469748 LDR X20, [X8 + 0x18]
	0x0346974C LDR X1, [X8 + 0x28]
	0x03469750 LDR X2, [X9]
	0x03469754 STP X31, X31, [X31 + 0x8]
	0x03469758 ADD X0, X31, 0x8
	0x0346975C BL 0x242E368
	0x03469760 ADRP X8, 0xCC6000
	0x03469764 LDR X8, [X8 + 0x7D0]
	0x03469768 LDR X0, [X8]
	0x0346976C BL 0x1C16F10
	0x03469770 LDP X3, X4, [X31 + 0x8]
	0x03469774 MOV X24, X0
	0x03469778 MOV X1, X20
	0x0346977C MOV X2, X23
	0x03469780 BL 0x3465404
	0x03469784 CBZ X21, 0x346984C
	0x03469788 MOV X0, X21
	0x0346978C MOV X1, X22
	0x03469790 MOV X2, X24
	0x03469794 BL 0x3465B68
	0x03469798 CBZ X0, 0x3469850
	0x0346979C MOV X1, X31
	0x034697A0 BL 0x33ED394
	0x034697A4 STR X0, [X31 + 0x18]
	0x034697A8 ADD X0, X31, 0x18
	0x034697AC MOV X1, X31
	0x034697B0 BL 0x32C3A80
	0x034697B4 TBZ X0, 0x0, 0x34697F4
	0x034697B8 ADD X0, X31, 0x18
	0x034697BC MOV X1, X31
	0x034697C0 BL 0x32C3B4C
	0x034697C4 MOVN W8, 0x1
	0x034697C8 STR W8, [X19]
	0x034697CC STR X31, [X19 + 0x48]
	0x034697D0 LDR X0, [X25]
	0x034697D4 ADD X19, X19, 0x8
	0x034697D8 LDR W8, [X0 + 0xE0]
	0x034697DC CBNZ W8, 0x34697E4
	0x034697E0 BL 0x1C16DFC
	0x034697E4 MOV X0, X19
	0x034697E8 MOV X1, X31
	0x034697EC BL 0x32C4864
	0x034697F0 B 0x3469830
	0x034697F4 MOVZ W8, 0x1
	0x034697F8 STR W8, [X19]
	0x034697FC LDR X8, [X31 + 0x18]
	0x03469800 STR X8, [X19 + 0x58]
	0x03469804 LDR X0, [X25]
	0x03469808 LDR W8, [X0 + 0xE0]
	0x0346980C CBNZ W8, 0x3469814
	0x03469810 BL 0x1C16DFC
	0x03469814 ADRP X8, 0xCC7000
	0x03469818 LDR X8, [X8 + 0x4E8]
	0x0346981C ADD X0, X19, 0x8
	0x03469820 LDR X3, [X8]
	0x03469824 ADD X1, X31, 0x18
	0x03469828 MOV X2, X19
	0x0346982C BL 0x218A458
	0x03469830 LDP X20, X19, [X31 + 0x60]
	0x03469834 LDP X22, X21, [X31 + 0x50]
	0x03469838 LDP X24, X23, [X31 + 0x40]
	0x0346983C LDP X30, X25, [X31 + 0x30]
	0x03469840 ADD X31, X31, 0x70
	0x03469844 RET
	0x03469848 BL 0x1C16F20
	0x0346984C BL 0x1C16F20
	0x03469850 BL 0x1C16F20
	0x03469854 BL 0x1C16F20
	0x03469858 BL 0x1C16F20
	0x0346985C BL 0x1C16F20
	0x03469860 BL 0x1C16F20
	0x03469864 BL 0x1C16F20
	0x03469868 BL 0x1C16F20
	0x0346986C BL 0x1C16F20
	0x03469870 BL 0x1C16F20
	0x03469874 BL 0x1C16F20
	0x03469878 B 0x34698EC
	0x0346987C B 0x34698EC
	0x03469880 B 0x34698EC
	0x03469884 B 0x34698EC
	0x03469888 B 0x34698EC
	0x0346988C B 0x34698EC
	0x03469890 B 0x34698EC
	0x03469894 B 0x34698EC
	0x03469898 B 0x34698EC
	0x0346989C B 0x34698EC
	0x034698A0 B 0x34698EC
	0x034698A4 B 0x34698EC
	0x034698A8 B 0x34698EC
	0x034698AC B 0x34698EC
	0x034698B0 B 0x34698EC
	0x034698B4 B 0x34698EC
	0x034698B8 B 0x34698EC
	0x034698BC B 0x34698EC
	0x034698C0 B 0x34698EC
	0x034698C4 B 0x34698EC
	0x034698C8 B 0x34698EC
	0x034698CC B 0x34698EC
	0x034698D0 B 0x34698EC
	0x034698D4 B 0x34698EC
	0x034698D8 B 0x34698EC
	0x034698DC B 0x34698EC
	0x034698E0 B 0x34698EC
	0x034698E4 B 0x34698EC
	0x034698E8 B 0x34698EC
	0x034698EC MOV X20, X0
	0x034698F0 CMP W1, 0x1
	0x034698F4 B.NE 0x3469988
	0x034698F8 MOV X0, X20
	0x034698FC BL 0x3EB1AD0
	0x03469900 MOV X20, X0
	0x03469904 ADRP X0, 0xC8A000
	0x03469908 LDR X0, [X0 + 0x7D0]
	0x0346990C BL 0x1C16D08
	0x03469910 LDR X8, [X20]
	0x03469914 LDR X1, [X8]
	0x03469918 BL 0x1C17270
	0x0346991C TBZ X0, 0x0, 0x3469960
	0x03469920 LDR X20, [X20]
	0x03469924 BL 0x3EB1AE0
	0x03469928 MOVN W8, 0x1
	0x0346992C STR X31, [X19 + 0x48]
	0x03469930 STR W8, [X19], #0x8
	0x03469934 ADRP X0, 0xC8D000
	0x03469938 LDR X0, [X0 + 0x280]
	0x0346993C BL 0x1C16D08
	0x03469940 LDR W8, [X0 + 0xE0]
	0x03469944 CBNZ W8, 0x346994C
	0x03469948 BL 0x1C16DFC
	0x0346994C MOV X0, X19
	0x03469950 MOV X1, X20
	0x03469954 MOV X2, X31
	0x03469958 BL 0x32C4908
	0x0346995C B 0x3469830
	0x03469960 MOVZ W0, 0x8
	0x03469964 BL 0x3EB1AF0
	0x03469968 LDR X8, [X20]
	0x0346996C STR X8, [X0]
	0x03469970 ADRP X1, 0xA4B000
	0x03469974 ADD X1, X1, 0xE58
	0x03469978 MOV X2, X31
	0x0346997C BL 0x3EB1B00
	0x03469980 MOV X20, X0
	0x03469984 BL 0x3EB1AE0
	0x03469988 MOV X0, X20
	0x0346998C BL 0x1D2C690
	0x03469990 BL 0x1990590
	0x03469994 STR X30, [X31 - 0x30]!
	0x03469998 STP X22, X21, [X31 + 0x10]
	0x0346999C STP X20, X19, [X31 + 0x20]
	0x034699A0 ADRP X21, 0xF74000
	0x034699A4 ADRP X22, 0xC8D000
	0x034699A8 LDRB W8, [X21 + 0x7CE]
	0x034699AC LDR X22, [X22 + 0x280]
	0x034699B0 MOV X19, X1
	0x034699B4 MOV X20, X0
	0x034699B8 TBNZ X8, 0x0, 0x34699D0
	0x034699BC ADRP X0, 0xC8D000
	0x034699C0 LDR X0, [X0 + 0x280]
	0x034699C4 BL 0x1C16CF4
	0x034699C8 MOVZ W8, 0x1
	0x034699CC STRB W8, [X21 + 0x7CE]
	0x034699D0 LDR X0, [X22]
	0x034699D4 LDR W8, [X0 + 0xE0]
	0x034699D8 CBNZ W8, 0x34699E0
	0x034699DC BL 0x1C16DFC
	0x034699E0 ADD X0, X20, 0x8
	0x034699E4 MOV X1, X19
	0x034699E8 LDP X20, X19, [X31 + 0x20]
	0x034699EC LDP X22, X21, [X31 + 0x10]
	0x034699F0 MOV X2, X31
	0x034699F4 LDR X30, [X31], #0x30
	0x034699F8 B 0x32C477C
	0x034699FC SUB X31, X31, 0x70
	0x03469A00 STP X30, X25, [X31 + 0x30]
	0x03469A04 STP X24, X23, [X31 + 0x40]
	0x03469A08 STP X22, X21, [X31 + 0x50]
	0x03469A0C STP X20, X19, [X31 + 0x60]
	0x03469A10 ADRP X20, 0xF74000
	0x03469A14 LDRB W8, [X20 + 0x7CF]
	0x03469A18 MOV X19, X0
	0x03469A1C TBNZ X8, 0x0, 0x3469AD0
	0x03469A20 ADRP X0, 0xCC7000
	0x03469A24 LDR X0, [X0 + 0x500]
	0x03469A28 BL 0x1C16CF4
	0x03469A2C ADRP X0, 0xCC7000
	0x03469A30 LDR X0, [X0 + 0x508]
	0x03469A34 BL 0x1C16CF4
	0x03469A38 ADRP X0, 0xC8D000
	0x03469A3C LDR X0, [X0 + 0x280]
	0x03469A40 BL 0x1C16CF4
	0x03469A44 ADRP X0, 0xC8C000
	0x03469A48 LDR X0, [X0 + 0xA10]
	0x03469A4C BL 0x1C16CF4
	0x03469A50 ADRP X0, 0xC8B000
	0x03469A54 LDR X0, [X0 + 0x9F0]
	0x03469A58 BL 0x1C16CF4
	0x03469A5C ADRP X0, 0xC92000
	0x03469A60 LDR X0, [X0 + 0x818]
	0x03469A64 BL 0x1C16CF4
	0x03469A68 ADRP X0, 0xC8B000
	0x03469A6C LDR X0, [X0 + 0x818]
	0x03469A70 BL 0x1C16CF4
	0x03469A74 ADRP X0, 0xCC6000
	0x03469A78 LDR X0, [X0 + 0x7C8]
	0x03469A7C BL 0x1C16CF4
	0x03469A80 ADRP X0, 0xCC6000
	0x03469A84 LDR X0, [X0 + 0x7D0]
	0x03469A88 BL 0x1C16CF4
	0x03469A8C ADRP X0, 0xC8B000
	0x03469A90 LDR X0, [X0 + 0x830]
	0x03469A94 BL 0x1C16CF4
	0x03469A98 ADRP X0, 0xC8B000
	0x03469A9C LDR X0, [X0 + 0x838]
	0x03469AA0 BL 0x1C16CF4
	0x03469AA4 ADRP X0, 0xC8B000
	0x03469AA8 LDR X0, [X0 + 0x840]
	0x03469AAC BL 0x1C16CF4
	0x03469AB0 ADRP X0, 0xCC7000
	0x03469AB4 LDR X0, [X0 + 0x510]
	0x03469AB8 BL 0x1C16CF4
	0x03469ABC ADRP X0, 0xCC7000
	0x03469AC0 LDR X0, [X0 + 0x518]
	0x03469AC4 BL 0x1C16CF4
	0x03469AC8 MOVZ W8, 0x1
	0x03469ACC STRB W8, [X20 + 0x7CF]
	0x03469AD0 STP X31, X31, [X31 + 0x20]
	0x03469AD4 STR X31, [X31 + 0x18]
	0x03469AD8 ADRP X25, 0xC8D000
	0x03469ADC LDR W8, [X19]
	0x03469AE0 LDR X20, [X19 + 0x20]
	0x03469AE4 LDR X25, [X25 + 0x280]
	0x03469AE8 CBZ W8, 0x3469B0C
	0x03469AEC CMP W8, 0x1
	0x03469AF0 B.NE 0x3469B38
	0x03469AF4 LDR X8, [X19 + 0x60]
	0x03469AF8 MOVN W9, 0x0
	0x03469AFC STR X8, [X31 + 0x18]
	0x03469B00 STR X31, [X19 + 0x60]
	0x03469B04 STR W9, [X19]
	0x03469B08 B 0x3469E2C
	0x03469B0C LDR X8, [X19 + 0x58]
	0x03469B10 MOVN W9, 0x0
	0x03469B14 STR X8, [X31 + 0x20]
	0x03469B18 STR X31, [X19 + 0x58]
	0x03469B1C STR W9, [X19]
	0x03469B20 ADRP X8, 0xC8B000
	0x03469B24 LDR X8, [X8 + 0x830]
	0x03469B28 ADD X0, X31, 0x20
	0x03469B2C LDR X1, [X8]
	0x03469B30 BL 0x2677474
	0x03469B34 B 0x3469D68
	0x03469B38 ADRP X8, 0xCC7000
	0x03469B3C LDR X8, [X8 + 0x518]
	0x03469B40 LDR X0, [X8]
	0x03469B44 BL 0x1C16F10
	0x03469B48 MOV X21, X0
	0x03469B4C MOV X1, X31
	0x03469B50 BL 0x344638C
	0x03469B54 STR X21, [X19 + 0x50]
	0x03469B58 CBZ X21, 0x3469ECC
	0x03469B5C LDR X8, [X19 + 0x20]
	0x03469B60 STR X8, [X21 + 0x10]
	0x03469B64 LDR X8, [X19 + 0x28]
	0x03469B68 STR X8, [X21 + 0x18]
	0x03469B6C LDR V0, [X19 + 0x3]
	0x03469B70 STR V0, [X21 + 0x2]
	0x03469B74 LDR X8, [X19 + 0x40]
	0x03469B78 STR X8, [X21 + 0x30]
	0x03469B7C CBZ X20, 0x3469ED0
	0x03469B80 LDRB W8, [X20 + 0x10]
	0x03469B84 CBZ W8, 0x3469D6C
	0x03469B88 LDR X8, [X19 + 0x50]
	0x03469B8C CBZ X8, 0x3469ED4
	0x03469B90 LDR X21, [X8 + 0x18]
	0x03469B94 CBZ X21, 0x3469ED8
	0x03469B98 ADRP X23, 0xC8B000
	0x03469B9C LDR X8, [X21]
	0x03469BA0 LDR X23, [X23 + 0x818]
	0x03469BA4 LDRH W9, [X8 + 0x12E]
	0x03469BA8 LDR X1, [X23]
	0x03469BAC CBZ X9, 0x3469BD0
	0x03469BB0 LDR X10, [X8 + 0xB0]
	0x03469BB4 ADD X10, X10, 0x8
	0x03469BB8 LDUR X11, [X10 - 0x8]
	0x03469BBC CMP X11, X1
	0x03469BC0 B.EQ 0x3469BE0
	0x03469BC4 SUBS X9, X9, 0x1
	0x03469BC8 ADD X10, X10, 0x10
	0x03469BCC B.NE 0x3469BB8
	0x03469BD0 MOVZ W2, 0x7
	0x03469BD4 MOV X0, X21
	0x03469BD8 BL 0x1C5C788
	0x03469BDC B 0x3469BF0
	0x03469BE0 LDR W9, [X10]
	0x03469BE4 ADD W9, W9, 0x7
	0x03469BE8 ADD X8, X8, W9, 0x4, SXTW
	0x03469BEC ADD X0, X8, 0x138
	0x03469BF0 LDP X8, X1, [X0]
	0x03469BF4 MOV X0, X21
	0x03469BF8 BLR X8
	0x03469BFC MOV X1, X31
	0x03469C00 BL 0x32277A8
	0x03469C04 TBNZ X0, 0x0, 0x3469D68
	0x03469C08 LDR X8, [X19 + 0x50]
	0x03469C0C CBZ X8, 0x3469EDC
	0x03469C10 ADRP X9, 0xC8B000
	0x03469C14 LDR X9, [X9 + 0x9F0]
	0x03469C18 LDR X21, [X8 + 0x18]
	0x03469C1C LDR X0, [X9]
	0x03469C20 LDR W9, [X0 + 0xE0]
	0x03469C24 CBNZ W9, 0x3469C2C
	0x03469C28 BL 0x1C16DFC
	0x03469C2C MOV X0, X31
	0x03469C30 BL 0x33616A4
	0x03469C34 ADRP X22, 0xC8C000
	0x03469C38 LDR X22, [X22 + 0xA10]
	0x03469C3C MOV X8, X0
	0x03469C40 STR X8, [X31 + 0x28]
	0x03469C44 LDR X0, [X22]
	0x03469C48 LDR W8, [X0 + 0xE0]
	0x03469C4C CBNZ W8, 0x3469C58
	0x03469C50 BL 0x1C16DFC
	0x03469C54 LDR X0, [X22]
	0x03469C58 LDR X8, [X0 + 0xB8]
	0x03469C5C LDR X1, [X8]
	0x03469C60 ADD X0, X31, 0x28
	0x03469C64 MOV X2, X31
	0x03469C68 BL 0x335FC68
	0x03469C6C CBZ X21, 0x3469EE0
	0x03469C70 LDR X8, [X21]
	0x03469C74 LDR X1, [X23]
	0x03469C78 MOV X22, X0
	0x03469C7C LDRH W9, [X8 + 0x12E]
	0x03469C80 CBZ X9, 0x3469CA4
	0x03469C84 LDR X10, [X8 + 0xB0]
	0x03469C88 ADD X10, X10, 0x8
	0x03469C8C LDUR X11, [X10 - 0x8]
	0x03469C90 CMP X11, X1
	0x03469C94 B.EQ 0x3469CB4
	0x03469C98 SUBS X9, X9, 0x1
	0x03469C9C ADD X10, X10, 0x10
	0x03469CA0 B.NE 0x3469C8C
	0x03469CA4 MOVZ W2, 0xB
	0x03469CA8 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF75000
	011 Move W8, [X20+1993]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCC8000
	018 Move X0, [X0+1184]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC8000
	021 Move X0, [X0+1192]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8E000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8D000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8C000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xC93000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC8C000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCC7000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC7000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC8C000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC8C000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8C000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC8000
	054 Move X0, [X0+1200]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC8000
	057 Move X0, [X0+1208]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1993], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC8E000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC8C000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCC8000
	091 Move X8, [X8+1208]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass109_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {354}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {355}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {356}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {357}
	119 Move X23, 0xC8C000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {358}
	152 Move X9, 0xC8C000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC8D000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {359}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {360}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {361}
	219 Move X8, 0xC8C000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC8C000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCC8000
	242 Move X8, [X8+1184]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {353}
	250 Move X8, 0xC93000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCC8000
	257 Move X8, [X8+1200]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {350}
	266 Move X9, 0xCC7000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCC7000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Call RetryHistory..ctor, X0, X1, X2, X3
	289 Compare X21, 0
	290 JumpIfEqual {351}
	291 Move X0, X21
	292 Move X1, X22
	293 Move X2, X24
	294 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	295 Compare X0, 0
	296 JumpIfEqual {352}
	297 Move X1, X31
	298 Call Task.GetAwaiter, X0
	299 Move [X31+24], X0
	300 Add X0, X31, 24
	301 Move X1, X31
	302 Call TaskAwaiter.get_IsCompleted, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {324}
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.GetResult, X0
	310 Move TEMP, 1
	311 Not TEMP
	312 Move W8, TEMP
	313 Move [X19], W8
	314 Move [X19+72], X31
	315 Move X0, [X25]
	316 Add X19, X19, 8
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call AsyncTaskMethodBuilder.SetResult, X0
	324 Move W8, 1
	325 Move [X19], W8
	326 Move X8, [X31+24]
	327 Move [X19+88], X8
	328 Move X0, [X25]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X8, 0xCC8000
	334 Move X8, [X8+1192]
	335 Add X0, X19, 8
	336 Move X3, [X8]
	337 Add X1, X31, 24
	338 Move X2, X19
	339 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	340 Move X20, [X31+96]
	341 Move X19, [X31+104]
	342 Move X22, [X31+80]
	343 Move X21, [X31+88]
	344 Move X24, [X31+64]
	345 Move X23, [X31+72]
	346 Move X30, [X31+48]
	347 Move X25, [X31+56]
	348 Add X31, X31, 112
	349 Return 
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X20, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X20
	365 Call 0x3EB2AD0
	366 Move X20, X0
	367 Move X0, 0xC8B000
	368 Move X0, [X0+2000]
	369 Call 0x1C17D08
	370 Move X8, [X20]
	371 Move X1, [X8]
	372 Call 0x1C18270
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {395}
	377 Move X20, [X20]
	378 Call 0x3EB2AE0
	379 Move TEMP, 1
	380 Not TEMP
	381 Move W8, TEMP
	382 Move [X19+72], X31
	383 Move [X19+8], W8
	384 Move X0, 0xC8E000
	385 Move X0, [X0+640]
	386 Call 0x1C17D08
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X19
	392 Move X1, X20
	393 Move X2, X31
	394 Call AsyncTaskMethodBuilder.SetException, X0, X1
	395 Move W0, 8
	396 Call 0x3EB2AF0
	397 Move X8, [X20]
	398 Move [X0], X8
	399 Move X1, 0xA4C000
	400 Add X1, X1, 3672
	401 Move X2, X31
	402 Call 0x3EB2B00
	403 Move X20, X0
	404 Call 0x3EB2AE0
	405 Move X0, X20
	406 Call 0x1D2D690
	407 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03469CAC BL 0x1C5C788
	0x03469CB0 B 0x3469CC4
	0x03469CB4 LDR W9, [X10]
	0x03469CB8 ADD W9, W9, 0xB
	0x03469CBC ADD X8, X8, W9, 0x4, SXTW
	0x03469CC0 ADD X0, X8, 0x138
	0x03469CC4 LDP X8, X2, [X0]
	0x03469CC8 MOV X0, X21
	0x03469CCC MOV X1, X22
	0x03469CD0 BLR X8
	0x03469CD4 TBZ X0, 0x0, 0x3469D68
	0x03469CD8 LDR X8, [X19 + 0x50]
	0x03469CDC CBZ X8, 0x3469EE4
	0x03469CE0 LDR X1, [X8 + 0x18]
	0x03469CE4 LDR X3, [X19 + 0x48]
	0x03469CE8 LDR X4, [X8 + 0x30]
	0x03469CEC MOV X0, X20
	0x03469CF0 MOV X2, X31
	0x03469CF4 MOV X5, X31
	0x03469CF8 BL 0x34440A8
	0x03469CFC CBZ X0, 0x3469EE8
	0x03469D00 ADRP X8, 0xC8B000
	0x03469D04 LDR X8, [X8 + 0x840]
	0x03469D08 LDR X1, [X8]
	0x03469D0C BL 0x269F5D0
	0x03469D10 ADRP X8, 0xC8B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF75000
	007 Move X22, 0xC8E000
	008 Move W8, [X21+1994]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC8E000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1994], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

