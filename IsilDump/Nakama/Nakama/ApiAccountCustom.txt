Type: Nakama.ApiAccountCustom

Method: System.String get_Id()

Disassembly:
	0x03402A14 MOV X0, X20
	0x03402A18 BLR X8

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x03402A1C CBNZ X22, 0x3402A28
	0x03402A20 MOV X0, X19

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x03402A24 BL 0x1D2C690
	0x03402A28 MOV X0, X22
	0x03402A2C BL 0x1C16F18
	0x03402A30 BL 0x1990590
	0x03402A34 MOV X1, X31
	0x03402A38 B 0x33BDD8C
	0x03402A3C LDR X0, [X0 + 0x10]
	0x03402A40 RET
	0x03402A44 STR X1, [X0 + 0x10]
	0x03402A48 RET
	0x03402A4C STR X30, [X31 - 0x20]!
	0x03402A50 STP X20, X19, [X31 + 0x10]
	0x03402A54 ADRP X20, 0xFDB000
	0x03402A58 LDRB W8, [X20 + 0x517]
	0x03402A5C MOV X19, X0
	0x03402A60 TBNZ X8, 0x0, 0x3402A84
	0x03402A64 ADRP X0, 0xCF2000
	0x03402A68 LDR X0, [X0 + 0x6C0]
	0x03402A6C BL 0x1C16CF4
	0x03402A70 ADRP X0, 0xCF2000
	0x03402A74 LDR X0, [X0 + 0x6D0]
	0x03402A78 BL 0x1C16CF4
	0x03402A7C MOVZ W8, 0x1
	0x03402A80 STRB W8, [X20 + 0x517]
	0x03402A84 LDR X19, [X19 + 0x18]
	0x03402A88 CBNZ X19, 0x3402AB0
	0x03402A8C ADRP X8, 0xCF2000
	0x03402A90 LDR X8, [X8 + 0x6D0]
	0x03402A94 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFDC000
	005 Move W8, [X20+1297]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCF3000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCF3000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1297], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCF3000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCF3000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x03402A98 BL 0x1C16F10
	0x03402A9C ADRP X8, 0xCF2000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03402AA0 LDR X8, [X8 + 0x6C0]
	0x03402AA4 MOV X19, X0

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03402AA8 LDR X1, [X8]
	0x03402AAC BL 0x2AA4804
	0x03402AB0 MOV X0, X19
	0x03402AB4 LDP X20, X19, [X31 + 0x10]
	0x03402AB8 LDR X30, [X31], #0x20
	0x03402ABC RET
	0x03402AC0 LDR X0, [X0 + 0x18]
	0x03402AC4 RET
	0x03402AC8 STR X1, [X0 + 0x18]
	0x03402ACC RET
	0x03402AD0 SUB X31, X31, 0x70
	0x03402AD4 STP X29, X30, [X31 + 0x10]
	0x03402AD8 STP X28, X27, [X31 + 0x20]
	0x03402ADC STP X26, X25, [X31 + 0x30]
	0x03402AE0 STP X24, X23, [X31 + 0x40]
	0x03402AE4 STP X22, X21, [X31 + 0x50]
	0x03402AE8 STP X20, X19, [X31 + 0x60]
	0x03402AEC ADRP X23, 0xFDB000
	0x03402AF0 ADRP X19, 0xCF1000
	0x03402AF4 ADRP X21, 0xD2B000
	0x03402AF8 ADRP X22, 0xCF1000
	0x03402AFC LDRB W8, [X23 + 0x518]
	0x03402B00 LDR X19, [X19 + 0x988]
	0x03402B04 LDR X21, [X21 + 0xD78]
	0x03402B08 LDR X22, [X22 + 0x838]
	0x03402B0C MOV X20, X0
	0x03402B10 TBNZ X8, 0x0, 0x3402BD0
	0x03402B14 ADRP X0, 0xCF1000
	0x03402B18 LDR X0, [X0 + 0xE00]
	0x03402B1C BL 0x1C16CF4
	0x03402B20 ADRP X0, 0xCF4000
	0x03402B24 LDR X0, [X0 + 0x190]
	0x03402B28 BL 0x1C16CF4
	0x03402B2C ADRP X0, 0xCF4000
	0x03402B30 LDR X0, [X0 + 0x198]
	0x03402B34 BL 0x1C16CF4
	0x03402B38 ADRP X0, 0xCF1000
	0x03402B3C LDR X0, [X0 + 0xE18]
	0x03402B40 BL 0x1C16CF4
	0x03402B44 ADRP X0, 0xCF4000
	0x03402B48 LDR X0, [X0 + 0x1B0]
	0x03402B4C BL 0x1C16CF4
	0x03402B50 ADRP X0, 0xCF4000
	0x03402B54 LDR X0, [X0 + 0x1B8]
	0x03402B58 BL 0x1C16CF4
	0x03402B5C ADRP X0, 0xCF1000
	0x03402B60 LDR X0, [X0 + 0xAC8]
	0x03402B64 BL 0x1C16CF4
	0x03402B68 ADRP X0, 0xD1E000
	0x03402B6C LDR X0, [X0 + 0x360]
	0x03402B70 BL 0x1C16CF4
	0x03402B74 ADRP X0, 0xD1E000
	0x03402B78 LDR X0, [X0 + 0xFB8]
	0x03402B7C BL 0x1C16CF4
	0x03402B80 ADRP X0, 0xCFC000
	0x03402B84 LDR X0, [X0 + 0x6D8]
	0x03402B88 BL 0x1C16CF4
	0x03402B8C ADRP X0, 0xD2B000
	0x03402B90 LDR X0, [X0 + 0xD80]
	0x03402B94 BL 0x1C16CF4
	0x03402B98 ADRP X0, 0xCF1000
	0x03402B9C LDR X0, [X0 + 0x838]
	0x03402BA0 BL 0x1C16CF4
	0x03402BA4 ADRP X0, 0xD2B000
	0x03402BA8 LDR X0, [X0 + 0xD78]
	0x03402BAC BL 0x1C16CF4
	0x03402BB0 ADRP X0, 0xCF1000
	0x03402BB4 LDR X0, [X0 + 0x988]
	0x03402BB8 BL 0x1C16CF4
	0x03402BBC ADRP X0, 0xCF1000
	0x03402BC0 LDR X0, [X0 + 0x848]
	0x03402BC4 BL 0x1C16CF4
	0x03402BC8 MOVZ W8, 0x1
	0x03402BCC STRB W8, [X23 + 0x518]
	0x03402BD0 LDR X0, [X19]
	0x03402BD4 LDR X2, [X20 + 0x10]
	0x03402BD8 LDR X1, [X21]
	0x03402BDC LDR X3, [X22]
	0x03402BE0 MOV X4, X31
	0x03402BE4 BL 0x32277C4
	0x03402BE8 LDR X27, [X19]
	0x03402BEC STR X0, [X31 + 0x8]
	0x03402BF0 MOV X0, X20
	0x03402BF4 BL 0x3402A4C
	0x03402BF8 CBZ X0, 0x3402EA8
	0x03402BFC ADRP X10, 0xCF4000
	0x03402C00 LDR X8, [X0]
	0x03402C04 LDR X10, [X10 + 0x190]
	0x03402C08 MOV X20, X0
	0x03402C0C LDRH W9, [X8 + 0x12E]
	0x03402C10 LDR X1, [X10]
	0x03402C14 CBZ X9, 0x3402C38
	0x03402C18 LDR X10, [X8 + 0xB0]
	0x03402C1C ADD X10, X10, 0x8
	0x03402C20 LDUR X11, [X10 - 0x8]
	0x03402C24 CMP X11, X1
	0x03402C28 B.EQ 0x3402C48
	0x03402C2C SUBS X9, X9, 0x1
	0x03402C30 ADD X10, X10, 0x10
	0x03402C34 B.NE 0x3402C20
	0x03402C38 MOV X0, X20
	0x03402C3C MOV W2, W31
	0x03402C40 BL 0x1C5C788
	0x03402C44 B 0x3402C54
	0x03402C48 LDRSW X9, [X10]
	0x03402C4C ADD X8, X8, X9, 0x4, LSL
	0x03402C50 ADD X0, X8, 0x138
	0x03402C54 ADRP X28, 0xCF1000
	0x03402C58 ADRP X29, 0xCF4000
	0x03402C5C ADRP X26, 0xCF1000
	0x03402C60 ADRP X24, 0xD1E000
	0x03402C64 ADRP X25, 0xD1E000
	0x03402C68 ADRP X19, 0xCFC000
	0x03402C6C LDR X28, [X28 + 0xE18]
	0x03402C70 LDR X29, [X29 + 0x198]
	0x03402C74 LDR X26, [X26 + 0xAC8]
	0x03402C78 LDR X24, [X24 + 0x360]
	0x03402C7C LDR X25, [X25 + 0xFB8]
	0x03402C80 LDR X19, [X19 + 0x6D8]
	0x03402C84 LDP X8, X1, [X0]
	0x03402C88 MOV X0, X20
	0x03402C8C BLR X8
	0x03402C90 MOV X20, X0
	0x03402C94 MOV X0, X27
	0x03402C98 CBZ X20, 0x3402E8C
	0x03402C9C LDR X8, [X20]
	0x03402CA0 LDR X1, [X28]
	0x03402CA4 MOV X21, X0
	0x03402CA8 LDRH W9, [X8 + 0x12E]
	0x03402CAC CBZ X9, 0x3402CD0
	0x03402CB0 LDR X10, [X8 + 0xB0]
	0x03402CB4 ADD X10, X10, 0x8
	0x03402CB8 LDUR X11, [X10 - 0x8]
	0x03402CBC CMP X11, X1
	0x03402CC0 B.EQ 0x3402CE0
	0x03402CC4 SUBS X9, X9, 0x1
	0x03402CC8 ADD X10, X10, 0x10
	0x03402CCC B.NE 0x3402CB8
	0x03402CD0 MOV X0, X20
	0x03402CD4 MOV W2, W31
	0x03402CD8 BL 0x1C5C788
	0x03402CDC B 0x3402CEC
	0x03402CE0 LDRSW X9, [X10]
	0x03402CE4 ADD X8, X8, X9, 0x4, LSL
	0x03402CE8 ADD X0, X8, 0x138
	0x03402CEC LDP X8, X1, [X0]
	0x03402CF0 MOV X0, X20
	0x03402CF4 BLR X8
	0x03402CF8 TBZ X0, 0x0, 0x3402DD0
	0x03402CFC LDR X8, [X20]
	0x03402D00 LDR X1, [X29]
	0x03402D04 LDRH W9, [X8 + 0x12E]
	0x03402D08 CBZ X9, 0x3402D2C
	0x03402D0C LDR X10, [X8 + 0xB0]
	0x03402D10 ADD X10, X10, 0x8
	0x03402D14 LDUR X11, [X10 - 0x8]
	0x03402D18 CMP X11, X1
	0x03402D1C B.EQ 0x3402D3C
	0x03402D20 SUBS X9, X9, 0x1
	0x03402D24 ADD X10, X10, 0x10
	0x03402D28 B.NE 0x3402D14
	0x03402D2C MOV X0, X20
	0x03402D30 MOV W2, W31
	0x03402D34 BL 0x1C5C788
	0x03402D38 B 0x3402D48
	0x03402D3C LDRSW X9, [X10]
	0x03402D40 ADD X8, X8, X9, 0x4, LSL
	0x03402D44 ADD X0, X8, 0x138
	0x03402D48 LDP X8, X1, [X0]
	0x03402D4C MOV X0, X20
	0x03402D50 BLR X8
	0x03402D54 MOV X23, X0
	0x03402D58 LDR X0, [X26]
	0x03402D5C MOV X22, X1
	0x03402D60 MOVZ W1, 0x5
	0x03402D64 BL 0x1C16D6C
	0x03402D68 CBZ X0, 0x3402E94
	0x03402D6C LDR W8, [X0 + 0x18]
	0x03402D70 CBZ W8, 0x3402E9C
	0x03402D74 LDR X9, [X24]
	0x03402D78 CMP W8, 0x1
	0x03402D7C STR X9, [X0 + 0x20]
	0x03402D80 B.EQ 0x3402E90
	0x03402D84 CMP W8, 0x2
	0x03402D88 STR X23, [X0 + 0x28]
	0x03402D8C B.LS 0x3402EA0
	0x03402D90 LDR X9, [X25]
	0x03402D94 CMP W8, 0x3
	0x03402D98 STR X9, [X0 + 0x30]
	0x03402D9C B.EQ 0x3402EA4
	0x03402DA0 CMP W8, 0x4
	0x03402DA4 STR X22, [X0 + 0x38]
	0x03402DA8 B.LS 0x3402E98
	0x03402DAC LDR X8, [X19]
	0x03402DB0 STR X8, [X0 + 0x40]
	0x03402DB4 MOV X1, X31
	0x03402DB8 BL 0x32278CC
	0x03402DBC MOV X1, X0
	0x03402DC0 MOV X0, X21
	0x03402DC4 MOV X2, X31
	0x03402DC8 BL 0x321B938
	0x03402DCC B 0x3402C98
	0x03402DD0 MOV X22, X31
	0x03402DD4 CBZ X20, 0x3402E38
	0x03402DD8 LDR X8, [X20]
	0x03402DDC ADRP X10, 0xCF1000
	0x03402DE0 LDRH W9, [X8 + 0x12E]
	0x03402DE4 LDR X10, [X10 + 0xE00]
	0x03402DE8 LDR X1, [X10]
	0x03402DEC CBZ X9, 0x3402E10
	0x03402DF0 LDR X10, [X8 + 0xB0]
	0x03402DF4 ADD X10, X10, 0x8
	0x03402DF8 LDUR X11, [X10 - 0x8]
	0x03402DFC CMP X11, X1
	0x03402E00 B.EQ 0x3402E20
	0x03402E04 SUBS X9, X9, 0x1
	0x03402E08 ADD X10, X10, 0x10
	0x03402E0C B.NE 0x3402DF8
	0x03402E10 MOV X0, X20
	0x03402E14 MOV W2, W31
	0x03402E18 BL 0x1C5C788
	0x03402E1C B 0x3402E2C
	0x03402E20 LDRSW X9, [X10]
	0x03402E24 ADD X8, X8, X9, 0x4, LSL
	0x03402E28 ADD X0, X8, 0x138
	0x03402E2C LDP X8, X1, [X0]
	0x03402E30 MOV X0, X20
	0x03402E34 BLR X8
	0x03402E38 CBNZ X22, 0x3402EAC
	0x03402E3C ADRP X8, 0xD2B000
	0x03402E40 LDR X8, [X8 + 0xD80]
	0x03402E44 MOV X1, X21
	0x03402E48 MOV X3, X31
	0x03402E4C LDR X0, [X8]
	0x03402E50 ADRP X8, 0xCF1000
	0x03402E54 LDR X8, [X8 + 0x848]
	0x03402E58 LDR X2, [X8]
	0x03402E5C BL 0x32274B8
	0x03402E60 MOV X1, X0
	0x03402E64 LDR X0, [X31 + 0x8]
	0x03402E68 LDP X20, X19, [X31 + 0x60]
	0x03402E6C LDP X22, X21, [X31 + 0x50]
	0x03402E70 LDP X24, X23, [X31 + 0x40]
	0x03402E74 LDP X26, X25, [X31 + 0x30]
	0x03402E78 LDP X28, X27, [X31 + 0x20]
	0x03402E7C LDP X29, X30, [X31 + 0x10]
	0x03402E80 MOV X2, X31
	0x03402E84 ADD X31, X31, 0x70
	0x03402E88 B 0x321B938
	0x03402E8C BL 0x1C16F20
	0x03402E90 BL 0x1C16F28
	0x03402E94 BL 0x1C16F20
	0x03402E98 BL 0x1C16F28
	0x03402E9C BL 0x1C16F28
	0x03402EA0 BL 0x1C16F28
	0x03402EA4 BL 0x1C16F28
	0x03402EA8 BL 0x1C16F20
	0x03402EAC MOV X0, X22
	0x03402EB0 BL 0x1C16F18
	0x03402EB4 B 0x3402EE0
	0x03402EB8 B 0x3402EE0
	0x03402EBC B 0x3402EE0
	0x03402EC0 B 0x3402EE0
	0x03402EC4 B 0x3402EE0
	0x03402EC8 B 0x3402EE0
	0x03402ECC B 0x3402EE0
	0x03402ED0 MOV X21, X27
	0x03402ED4 B 0x3402EE0
	0x03402ED8 B 0x3402EE0
	0x03402EDC B 0x3402EE0
	0x03402EE0 CMP W1, 0x1
	0x03402EE4 B.NE 0x3402EF8
	0x03402EE8 BL 0x3EB1AD0
	0x03402EEC LDR X22, [X0]
	0x03402EF0 BL 0x3EB1AE0
	0x03402EF4 B 0x3402DD4
	0x03402EF8 MOV X19, X0
	0x03402EFC MOV X22, X31
	0x03402F00 B 0x3402F08
	0x03402F04 MOV X19, X0
	0x03402F08 CBZ X20, 0x3402F6C
	0x03402F0C LDR X8, [X20]
	0x03402F10 ADRP X10, 0xCF1000
	0x03402F14 LDRH W9, [X8 + 0x12E]
	0x03402F18 LDR X10, [X10 + 0xE00]
	0x03402F1C LDR X1, [X10]
	0x03402F20 CBZ X9, 0x3402F44
	0x03402F24 LDR X10, [X8 + 0xB0]
	0x03402F28 ADD X10, X10, 0x8
	0x03402F2C LDUR X11, [X10 - 0x8]
	0x03402F30 CMP X11, X1
	0x03402F34 B.EQ 0x3402F54
	0x03402F38 SUBS X9, X9, 0x1
	0x03402F3C ADD X10, X10, 0x10
	0x03402F40 B.NE 0x3402F2C
	0x03402F44 MOV X0, X20
	0x03402F48 MOV W2, W31
	0x03402F4C BL 0x1C5C788
	0x03402F50 B 0x3402F60
	0x03402F54 LDRSW X9, [X10]
	0x03402F58 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xFDC000
	015 Move X19, 0xCF2000
	016 Move X21, 0xD2C000
	017 Move X22, 0xCF2000
	018 Move W8, [X23+1298]
	019 Move X19, [X19+2440]
	020 Move X21, [X21+3464]
	021 Move X22, [X22+2104]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xCF2000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xCF5000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0xCF5000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0xCF2000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCF5000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xCF5000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xCF2000
	046 Move X0, [X0+2760]
	047 Call 0x1C17CF4
	048 Move X0, 0xD1F000
	049 Move X0, [X0+864]
	050 Call 0x1C17CF4
	051 Move X0, 0xD1F000
	052 Move X0, [X0+4024]
	053 Call 0x1C17CF4
	054 Move X0, 0xD2C000
	055 Move X0, [X0+3464]
	056 Call 0x1C17CF4
	057 Move X0, 0xCFD000
	058 Move X0, [X0+1752]
	059 Call 0x1C17CF4
	060 Move X0, 0xD2C000
	061 Move X0, [X0+3456]
	062 Call 0x1C17CF4
	063 Move X0, 0xCF2000
	064 Move X0, [X0+2104]
	065 Call 0x1C17CF4
	066 Move X0, 0xCF2000
	067 Move X0, [X0+2440]
	068 Call 0x1C17CF4
	069 Move X0, 0xCF2000
	070 Move X0, [X0+2120]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+1298], W8
	074 Move X0, [X19]
	075 Move X2, [X20+16]
	076 Move X1, [X21]
	077 Move X3, [X22]
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X27, [X19]
	081 Move [X31+8], X0
	082 Move X0, X20
	083 Call ApiAccountCustom.get_Vars, X0
	084 Compare X0, 0
	085 JumpIfEqual {263}
	086 Move X10, 0xCF5000
	087 Move X8, [X0]
	088 Move X10, [X10+400]
	089 Move X20, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X28, 0xCF2000
	107 Move X29, 0xCF5000
	108 Move X26, 0xCF2000
	109 Move X24, 0xD1F000
	110 Move X25, 0xD1F000
	111 Move X19, 0xCFD000
	112 Move X28, [X28+3608]
	113 Move X29, [X29+408]
	114 Move X26, [X26+2760]
	115 Move X24, [X24+864]
	116 Move X25, [X25+4024]
	117 Move X19, [X19+1752]
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, X0
	123 Move X0, X27
	124 Compare X20, 0
	125 JumpIfEqual {256}
	126 Move X8, [X20]
	127 Move X1, [X28]
	128 Move X21, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {201}
	152 Move X8, [X20]
	153 Move X1, [X29]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X23, X0
	174 Move X0, [X26]
	175 Move X22, X1
	176 Move W1, 5
	177 Call 0x1C17D6C
	178 Compare X0, 0
	179 JumpIfEqual {258}
	180 Move W8, [X0+24]
	181 Compare W8, 0
	182 JumpIfEqual {260}
	183 Move X9, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+32], X9
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X0+40], X23
	188 Move X9, [X25]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X0+48], X9
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X0+56], X22
	193 Move X8, [X19]
	194 Move [X0+64], X8
	195 Move X1, X31
	196 Call String.Concat, X0
	197 Move X1, X0
	198 Move X0, X21
	199 Move X2, X31
	200 Call String.Concat, X0, X1
	201 Move X22, X31
	202 Compare X20, 0
	203 JumpIfEqual {227}
	204 Move X8, [X20]
	205 Move X10, 0xCF2000
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X10, [X10+3584]
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X20
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X22, 0
	228 JumpIfNotEqual {264}
	229 Move X8, 0xD2C000
	230 Move X8, [X8+3456]
	231 Move X1, X21
	232 Move X3, X31
	233 Move X0, [X8]
	234 Move X8, 0xCF2000
	235 Move X8, [X8+2120]
	236 Move X2, [X8]
	237 Call String.Concat, X0, X1, X2
	238 Move X1, X0
	239 Move X0, [X31+8]
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Move X2, X31
	253 Add X31, X31, 112
	254 Call String.Concat, X0, X1
	255 Return X0
	256 Call 0x1C17F20
	257 Call 0x1C17F28
	258 Call 0x1C17F20
	259 Call 0x1C17F28
	260 Call 0x1C17F28
	261 Call 0x1C17F28
	262 Call 0x1C17F28
	263 Call 0x1C17F20
	264 Move X0, X22
	265 Call 0x1C17F18
	266 Move X21, X27
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X22, [X0]
	270 Call 0x3EB2AE0
	271 Move X19, X0
	272 Move X22, X31
	273 Move X19, X0
	274 Compare X20, 0
	275 JumpIfEqual {299}
	276 Move X8, [X20]
	277 Move X10, 0xCF2000
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X10, [X10+3584]
	280 Move X1, [X10]
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X20
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X22, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X19
	302 Call 0x1D2D690
	303 Move X0, X22
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03402F5C ADD X0, X8, 0x138
	0x03402F60 LDP X8, X1, [X0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

