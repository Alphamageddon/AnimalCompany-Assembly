Type: Nakama.Client/<ListUserGroupsAsync>d__97

Method: System.Void MoveNext()

Disassembly:
	0x0346563C LDR X25, [X25 + 0x280]
	0x03465640 CBZ W8, 0x3465664
	0x03465644 CMP W8, 0x1
	0x03465648 B.NE 0x3465690
	0x0346564C LDR X8, [X19 + 0x60]
	0x03465650 MOVN W9, 0x0
	0x03465654 STR X8, [X31 + 0x18]
	0x03465658 STR X31, [X19 + 0x60]
	0x0346565C STR W9, [X19]
	0x03465660 B 0x346598C
	0x03465664 LDR X8, [X19 + 0x58]
	0x03465668 MOVN W9, 0x0
	0x0346566C STR X8, [X31 + 0x20]
	0x03465670 STR X31, [X19 + 0x58]
	0x03465674 STR W9, [X19]
	0x03465678 ADRP X8, 0xC8F000
	0x0346567C LDR X8, [X8 + 0x830]
	0x03465680 ADD X0, X31, 0x20
	0x03465684 LDR X1, [X8]
	0x03465688 BL 0x2677474
	0x0346568C B 0x34658C8
	0x03465690 ADRP X8, 0xCCB000
	0x03465694 LDR X8, [X8 + 0x3A0]
	0x03465698 LDR X0, [X8]
	0x0346569C BL 0x1C16F10
	0x034656A0 MOV X21, X0
	0x034656A4 MOV X1, X31
	0x034656A8 BL 0x344BF20
	0x034656AC STR X21, [X19 + 0x50]
	0x034656B0 CBZ X21, 0x3465A2C
	0x034656B4 LDR X8, [X19 + 0x20]
	0x034656B8 STR X8, [X21 + 0x10]
	0x034656BC LDR X8, [X19 + 0x28]
	0x034656C0 STR X8, [X21 + 0x18]
	0x034656C4 LDR X8, [X19 + 0x30]
	0x034656C8 STR X8, [X21 + 0x20]
	0x034656CC LDR X8, [X19 + 0x38]
	0x034656D0 STR X8, [X21 + 0x28]
	0x034656D4 LDR X8, [X19 + 0x40]
	0x034656D8 STR X8, [X21 + 0x30]
	0x034656DC CBZ X20, 0x3465A30
	0x034656E0 LDRB W8, [X20 + 0x10]
	0x034656E4 CBZ W8, 0x34658CC
	0x034656E8 LDR X8, [X19 + 0x50]
	0x034656EC CBZ X8, 0x3465A34
	0x034656F0 LDR X21, [X8 + 0x18]
	0x034656F4 CBZ X21, 0x3465A38
	0x034656F8 ADRP X23, 0xC8F000
	0x034656FC LDR X8, [X21]
	0x03465700 LDR X23, [X23 + 0x818]
	0x03465704 LDRH W9, [X8 + 0x12E]
	0x03465708 LDR X1, [X23]
	0x0346570C CBZ X9, 0x3465730
	0x03465710 LDR X10, [X8 + 0xB0]
	0x03465714 ADD X10, X10, 0x8
	0x03465718 LDUR X11, [X10 - 0x8]
	0x0346571C CMP X11, X1
	0x03465720 B.EQ 0x3465740
	0x03465724 SUBS X9, X9, 0x1
	0x03465728 ADD X10, X10, 0x10
	0x0346572C B.NE 0x3465718
	0x03465730 MOVZ W2, 0x7
	0x03465734 MOV X0, X21
	0x03465738 BL 0x1C5C788
	0x0346573C B 0x3465750
	0x03465740 LDR W9, [X10]
	0x03465744 ADD W9, W9, 0x7
	0x03465748 ADD X8, X8, W9, 0x4, SXTW
	0x0346574C ADD X0, X8, 0x138
	0x03465750 LDP X8, X1, [X0]
	0x03465754 MOV X0, X21
	0x03465758 BLR X8
	0x0346575C MOV X1, X31
	0x03465760 BL 0x32277A8
	0x03465764 TBNZ X0, 0x0, 0x34658C8
	0x03465768 LDR X8, [X19 + 0x50]
	0x0346576C CBZ X8, 0x3465A3C
	0x03465770 ADRP X9, 0xC8F000
	0x03465774 LDR X9, [X9 + 0x9F0]
	0x03465778 LDR X21, [X8 + 0x18]
	0x0346577C LDR X0, [X9]
	0x03465780 LDR W9, [X0 + 0xE0]
	0x03465784 CBNZ W9, 0x346578C
	0x03465788 BL 0x1C16DFC
	0x0346578C MOV X0, X31
	0x03465790 BL 0x33616A4
	0x03465794 ADRP X22, 0xC90000
	0x03465798 LDR X22, [X22 + 0xA10]
	0x0346579C MOV X8, X0
	0x034657A0 STR X8, [X31 + 0x28]
	0x034657A4 LDR X0, [X22]
	0x034657A8 LDR W8, [X0 + 0xE0]
	0x034657AC CBNZ W8, 0x34657B8
	0x034657B0 BL 0x1C16DFC
	0x034657B4 LDR X0, [X22]
	0x034657B8 LDR X8, [X0 + 0xB8]
	0x034657BC LDR X1, [X8]
	0x034657C0 ADD X0, X31, 0x28
	0x034657C4 MOV X2, X31
	0x034657C8 BL 0x335FC68
	0x034657CC CBZ X21, 0x3465A40
	0x034657D0 LDR X8, [X21]
	0x034657D4 LDR X1, [X23]
	0x034657D8 MOV X22, X0
	0x034657DC LDRH W9, [X8 + 0x12E]
	0x034657E0 CBZ X9, 0x3465804
	0x034657E4 LDR X10, [X8 + 0xB0]
	0x034657E8 ADD X10, X10, 0x8
	0x034657EC LDUR X11, [X10 - 0x8]
	0x034657F0 CMP X11, X1
	0x034657F4 B.EQ 0x3465814
	0x034657F8 SUBS X9, X9, 0x1
	0x034657FC ADD X10, X10, 0x10
	0x03465800 B.NE 0x34657EC
	0x03465804 MOVZ W2, 0xB
	0x03465808 MOV X0, X21
	0x0346580C BL 0x1C5C788
	0x03465810 B 0x3465824
	0x03465814 LDR W9, [X10]
	0x03465818 ADD W9, W9, 0xB
	0x0346581C ADD X8, X8, W9, 0x4, SXTW
	0x03465820 ADD X0, X8, 0x138
	0x03465824 LDP X8, X2, [X0]
	0x03465828 MOV X0, X21
	0x0346582C MOV X1, X22
	0x03465830 BLR X8
	0x03465834 TBZ X0, 0x0, 0x34658C8
	0x03465838 LDR X8, [X19 + 0x50]
	0x0346583C CBZ X8, 0x3465A44
	0x03465840 LDR X1, [X8 + 0x18]
	0x03465844 LDR X3, [X19 + 0x48]
	0x03465848 LDR X4, [X8 + 0x30]
	0x0346584C MOV X0, X20
	0x03465850 MOV X2, X31
	0x03465854 MOV X5, X31
	0x03465858 BL 0x34440A8
	0x0346585C CBZ X0, 0x3465A48
	0x03465860 ADRP X8, 0xC8F000
	0x03465864 LDR X8, [X8 + 0x840]
	0x03465868 LDR X1, [X8]
	0x0346586C BL 0x269F5D0
	0x03465870 ADRP X8, 0xC8F000
	0x03465874 LDR X8, [X8 + 0x838]
	0x03465878 STR X0, [X31 + 0x20]
	0x0346587C LDR X1, [X8]
	0x03465880 ADD X0, X31, 0x20
	0x03465884 BL 0x2677430
	0x03465888 TBNZ X0, 0x0, 0x3465678
	0x0346588C STR W31, [X19]
	0x03465890 LDR X8, [X31 + 0x20]
	0x03465894 STR X8, [X19 + 0x58]
	0x03465898 LDR X0, [X25]
	0x0346589C LDR W8, [X0 + 0xE0]
	0x034658A0 CBNZ W8, 0x34658A8
	0x034658A4 BL 0x1C16DFC
	0x034658A8 ADRP X8, 0xCCB000
	0x034658AC LDR X8, [X8 + 0x388]
	0x034658B0 ADD X0, X19, 0x8
	0x034658B4 LDR X3, [X8]
	0x034658B8 ADD X1, X31, 0x20
	0x034658BC MOV X2, X19
	0x034658C0 BL 0x2188C20
	0x034658C4 B 0x3465A04
	0x034658C8 CBZ X20, 0x3465A28
	0x034658CC ADRP X8, 0xC96000
	0x034658D0 LDR X8, [X8 + 0x818]
	0x034658D4 LDR X21, [X20 + 0x58]
	0x034658D8 LDR X23, [X19 + 0x50]
	0x034658DC LDR X0, [X8]
	0x034658E0 BL 0x1C16F10
	0x034658E4 ADRP X8, 0xCCB000
	0x034658E8 LDR X8, [X8 + 0x398]
	0x034658EC MOV X22, X0
	0x034658F0 LDR X2, [X8]
	0x034658F4 MOV X1, X23
	0x034658F8 MOV X3, X31
	0x034658FC BL 0x2D27AA8
	0x03465900 LDR X8, [X19 + 0x50]
	0x03465904 CBZ X8, 0x3465A1C
	0x03465908 ADRP X9, 0xCCA000
	0x0346590C LDR X23, [X19 + 0x48]
	0x03465910 LDR X9, [X9 + 0x7C8]
	0x03465914 CBNZ X23, 0x346591C
	0x03465918 LDR X23, [X20 + 0x18]
	0x0346591C LDR X20, [X8 + 0x18]
	0x03465920 LDR X1, [X8 + 0x30]
	0x03465924 LDR X2, [X9]
	0x03465928 STP X31, X31, [X31 + 0x8]
	0x0346592C ADD X0, X31, 0x8
	0x03465930 BL 0x242E368
	0x03465934 ADRP X8, 0xCCA000
	0x03465938 LDR X8, [X8 + 0x7D0]
	0x0346593C LDR X0, [X8]
	0x03465940 BL 0x1C16F10
	0x03465944 LDP X3, X4, [X31 + 0x8]
	0x03465948 MOV X24, X0
	0x0346594C MOV X1, X20
	0x03465950 MOV X2, X23
	0x03465954 BL 0x3465404
	0x03465958 CBZ X21, 0x3465A20
	0x0346595C MOV X0, X21
	0x03465960 MOV X1, X22
	0x03465964 MOV X2, X24
	0x03465968 BL 0x3465B68
	0x0346596C CBZ X0, 0x3465A24
	0x03465970 MOV X1, X31
	0x03465974 BL 0x33ED394
	0x03465978 STR X0, [X31 + 0x18]
	0x0346597C ADD X0, X31, 0x18
	0x03465980 MOV X1, X31
	0x03465984 BL 0x32C3A80
	0x03465988 TBZ X0, 0x0, 0x34659C8
	0x0346598C ADD X0, X31, 0x18
	0x03465990 MOV X1, X31
	0x03465994 BL 0x32C3B4C
	0x03465998 MOVN W8, 0x1
	0x0346599C STR W8, [X19]
	0x034659A0 STR X31, [X19 + 0x50]
	0x034659A4 LDR X0, [X25]
	0x034659A8 ADD X19, X19, 0x8
	0x034659AC LDR W8, [X0 + 0xE0]
	0x034659B0 CBNZ W8, 0x34659B8
	0x034659B4 BL 0x1C16DFC
	0x034659B8 MOV X0, X19
	0x034659BC MOV X1, X31
	0x034659C0 BL 0x32C4864
	0x034659C4 B 0x3465A04
	0x034659C8 MOVZ W8, 0x1
	0x034659CC STR W8, [X19]
	0x034659D0 LDR X8, [X31 + 0x18]
	0x034659D4 STR X8, [X19 + 0x60]
	0x034659D8 LDR X0, [X25]
	0x034659DC LDR W8, [X0 + 0xE0]
	0x034659E0 CBNZ W8, 0x34659E8
	0x034659E4 BL 0x1C16DFC
	0x034659E8 ADRP X8, 0xCCB000
	0x034659EC LDR X8, [X8 + 0x390]
	0x034659F0 ADD X0, X19, 0x8
	0x034659F4 LDR X3, [X8]
	0x034659F8 ADD X1, X31, 0x18
	0x034659FC MOV X2, X19
	0x03465A00 BL 0x218A2E4
	0x03465A04 LDP X20, X19, [X31 + 0x60]
	0x03465A08 LDP X22, X21, [X31 + 0x50]
	0x03465A0C LDP X24, X23, [X31 + 0x40]
	0x03465A10 LDP X30, X25, [X31 + 0x30]
	0x03465A14 ADD X31, X31, 0x70
	0x03465A18 RET
	0x03465A1C BL 0x1C16F20
	0x03465A20 BL 0x1C16F20
	0x03465A24 BL 0x1C16F20
	0x03465A28 BL 0x1C16F20
	0x03465A2C BL 0x1C16F20
	0x03465A30 BL 0x1C16F20
	0x03465A34 BL 0x1C16F20
	0x03465A38 BL 0x1C16F20
	0x03465A3C BL 0x1C16F20
	0x03465A40 BL 0x1C16F20
	0x03465A44 BL 0x1C16F20
	0x03465A48 BL 0x1C16F20
	0x03465A4C B 0x3465AC0
	0x03465A50 B 0x3465AC0
	0x03465A54 B 0x3465AC0
	0x03465A58 B 0x3465AC0
	0x03465A5C B 0x3465AC0
	0x03465A60 B 0x3465AC0
	0x03465A64 B 0x3465AC0
	0x03465A68 B 0x3465AC0
	0x03465A6C B 0x3465AC0
	0x03465A70 B 0x3465AC0
	0x03465A74 B 0x3465AC0
	0x03465A78 B 0x3465AC0
	0x03465A7C B 0x3465AC0
	0x03465A80 B 0x3465AC0
	0x03465A84 B 0x3465AC0
	0x03465A88 B 0x3465AC0
	0x03465A8C B 0x3465AC0
	0x03465A90 B 0x3465AC0
	0x03465A94 B 0x3465AC0
	0x03465A98 B 0x3465AC0
	0x03465A9C B 0x3465AC0
	0x03465AA0 B 0x3465AC0
	0x03465AA4 B 0x3465AC0
	0x03465AA8 B 0x3465AC0
	0x03465AAC B 0x3465AC0
	0x03465AB0 B 0x3465AC0
	0x03465AB4 B 0x3465AC0
	0x03465AB8 B 0x3465AC0
	0x03465ABC B 0x3465AC0
	0x03465AC0 MOV X20, X0
	0x03465AC4 CMP W1, 0x1
	0x03465AC8 B.NE 0x3465B5C
	0x03465ACC MOV X0, X20
	0x03465AD0 BL 0x3EB1AD0
	0x03465AD4 MOV X20, X0
	0x03465AD8 ADRP X0, 0xC8E000
	0x03465ADC LDR X0, [X0 + 0x7D0]
	0x03465AE0 BL 0x1C16D08
	0x03465AE4 LDR X8, [X20]
	0x03465AE8 LDR X1, [X8]
	0x03465AEC BL 0x1C17270
	0x03465AF0 TBZ X0, 0x0, 0x3465B34
	0x03465AF4 LDR X20, [X20]
	0x03465AF8 BL 0x3EB1AE0
	0x03465AFC MOVN W8, 0x1
	0x03465B00 STR X31, [X19 + 0x50]
	0x03465B04 STR W8, [X19], #0x8
	0x03465B08 ADRP X0, 0xC91000
	0x03465B0C LDR X0, [X0 + 0x280]
	0x03465B10 BL 0x1C16D08
	0x03465B14 LDR W8, [X0 + 0xE0]
	0x03465B18 CBNZ W8, 0x3465B20
	0x03465B1C BL 0x1C16DFC
	0x03465B20 MOV X0, X19
	0x03465B24 MOV X1, X20
	0x03465B28 MOV X2, X31
	0x03465B2C BL 0x32C4908
	0x03465B30 B 0x3465A04
	0x03465B34 MOVZ W0, 0x8
	0x03465B38 BL 0x3EB1AF0
	0x03465B3C LDR X8, [X20]
	0x03465B40 STR X8, [X0]
	0x03465B44 ADRP X1, 0xA4F000
	0x03465B48 ADD X1, X1, 0xE58
	0x03465B4C MOV X2, X31
	0x03465B50 BL 0x3EB1B00
	0x03465B54 MOV X20, X0
	0x03465B58 BL 0x3EB1AE0
	0x03465B5C MOV X0, X20
	0x03465B60 BL 0x1D2C690
	0x03465B64 BL 0x1990590
	0x03465B68 SUB X31, X31, 0xA0
	0x03465B6C STP X30, X23, [X31 + 0x70]
	0x03465B70 STP X22, X21, [X31 + 0x80]
	0x03465B74 STP X20, X19, [X31 + 0x90]
	0x03465B78 ADRP X23, 0xF78000
	0x03465B7C ADRP X22, 0xC91000
	0x03465B80 LDRB W8, [X23 + 0x847]
	0x03465B84 LDR X22, [X22 + 0x280]
	0x03465B88 MOV X20, X2
	0x03465B8C MOV X19, X1
	0x03465B90 MOV X21, X0
	0x03465B94 TBNZ X8, 0x0, 0x3465BB8
	0x03465B98 ADRP X0, 0xCCB000
	0x03465B9C LDR X0, [X0 + 0x3A8]
	0x03465BA0 BL 0x1C16CF4
	0x03465BA4 ADRP X0, 0xC91000
	0x03465BA8 LDR X0, [X0 + 0x280]
	0x03465BAC BL 0x1C16CF4
	0x03465BB0 MOVZ W8, 0x1
	0x03465BB4 STRB W8, [X23 + 0x847]
	0x03465BB8 LDR X0, [X22]
	0x03465BBC MOVI V0.2D, 0x0
	0x03465BC0 STP V0, V0, [X31 + 0x50]
	0x03465BC4 STP V0, V0, [X31 + 0x30]
	0x03465BC8 STR V0, [X31 + 0x2]
	0x03465BCC ADRP X22, 0xCCB000
	0x03465BD0 LDR W8, [X0 + 0xE0]
	0x03465BD4 LDR X22, [X22 + 0x3A8]
	0x03465BD8 CBNZ W8, 0x3465BE0
	0x03465BDC BL 0x1C16DFC
	0x03465BE0 ADD X8, X31, 0x8
	0x03465BE4 MOV X0, X31
	0x03465BE8 BL 0x32C4770
	0x03465BEC LDUR V0, [X31 + 0x8]
	0x03465BF0 LDR X9, [X31 + 0x18]
	0x03465BF4 LDR X2, [X22]
	0x03465BF8 ADD X8, X31, 0x20
	0x03465BFC STP X20, X21, [X31 + 0x48]
	0x03465C00 ORR X20, X8, 0xF
	0x03465C04 MOVN W10, 0x0
	0x03465C08 ADD X1, X31, 0x20
	0x03465C0C MOV X0, X20
	0x03465C10 STUR V0, [X31 + 0x28]
	0x03465C14 STP X9, X19, [X31 + 0x38]
	0x03465C18 STR W10, [X31 + 0x20]
	0x03465C1C BL 0x2195AB8
	0x03465C20 MOV X0, X20
	0x03465C24 MOV X1, X31
	0x03465C28 BL 0x32C47F8
	0x03465C2C LDP X20, X19, [X31 + 0x90]
	0x03465C30 LDP X22, X21, [X31 + 0x80]
	0x03465C34 LDP X30, X23, [X31 + 0x70]
	0x03465C38 ADD X31, X31, 0xA0
	0x03465C3C RET
	0x03465C40 STR X30, [X31 - 0x30]!
	0x03465C44 STP X22, X21, [X31 + 0x10]
	0x03465C48 STP X20, X19, [X31 + 0x20]
	0x03465C4C ADRP X21, 0xF78000
	0x03465C50 ADRP X22, 0xC91000
	0x03465C54 LDRB W8, [X21 + 0x7C0]
	0x03465C58 LDR X22, [X22 + 0x280]
	0x03465C5C MOV X19, X1
	0x03465C60 MOV X20, X0
	0x03465C64 TBNZ X8, 0x0, 0x3465C7C
	0x03465C68 ADRP X0, 0xC91000
	0x03465C6C LDR X0, [X0 + 0x280]
	0x03465C70 BL 0x1C16CF4
	0x03465C74 MOVZ W8, 0x1
	0x03465C78 STRB W8, [X21 + 0x7C0]
	0x03465C7C LDR X0, [X22]
	0x03465C80 LDR W8, [X0 + 0xE0]
	0x03465C84 CBNZ W8, 0x3465C8C
	0x03465C88 BL 0x1C16DFC
	0x03465C8C ADD X0, X20, 0x8
	0x03465C90 MOV X1, X19
	0x03465C94 LDP X20, X19, [X31 + 0x20]
	0x03465C98 LDP X22, X21, [X31 + 0x10]
	0x03465C9C MOV X2, X31
	0x03465CA0 LDR X30, [X31], #0x30
	0x03465CA4 B 0x32C477C
	0x03465CA8 SUB X31, X31, 0x90
	0x03465CAC STP X29, X30, [X31 + 0x30]
	0x03465CB0 STP X28, X27, [X31 + 0x40]
	0x03465CB4 STP X26, X25, [X31 + 0x50]
	0x03465CB8 STP X24, X23, [X31 + 0x60]
	0x03465CBC STP X22, X21, [X31 + 0x70]
	0x03465CC0 STP X20, X19, [X31 + 0x80]
	0x03465CC4 ADRP X20, 0xF78000
	0x03465CC8 LDRB W8, [X20 + 0x7C1]
	0x03465CCC MOV X19, X0
	0x03465CD0 TBNZ X8, 0x0, 0x3465DFC
	0x03465CD4 ADRP X0, 0xCCB000
	0x03465CD8 LDR X0, [X0 + 0x3B0]
	0x03465CDC BL 0x1C16CF4
	0x03465CE0 ADRP X0, 0xCCB000
	0x03465CE4 LDR X0, [X0 + 0x3B8]
	0x03465CE8 BL 0x1C16CF4
	0x03465CEC ADRP X0, 0xCCB000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF79000
	011 Move W8, [X20+1979]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCCC000
	018 Move X0, [X0+800]
	019 Call 0x1C17CF4
	020 Move X0, 0xCCC000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCB000
	024 Move X0, [X0+568]
	025 Call 0x1C17CF4
	026 Move X0, 0xCCA000
	027 Move X0, [X0+1936]
	028 Call 0x1C17CF4
	029 Move X0, 0xC91000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC90000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCC000
	036 Move X0, [X0+816]
	037 Call 0x1C17CF4
	038 Move X0, 0xC90000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCB000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCB000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCC000
	048 Move X0, [X0+824]
	049 Call 0x1C17CF4
	050 Move X0, 0xC90000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCCC000
	054 Move X0, [X0+832]
	055 Call 0x1C17CF4
	056 Move X0, 0xC90000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCCC000
	060 Move X0, [X0+840]
	061 Call 0x1C17CF4
	062 Move X0, 0xC90000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCCC000
	066 Move X0, [X0+848]
	067 Call 0x1C17CF4
	068 Move X0, 0xCCC000
	069 Move X0, [X0+856]
	070 Call 0x1C17CF4
	071 Move X0, 0xCCC000
	072 Move X0, [X0+864]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1979], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCCA000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1936]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+112]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+112], X31
	092 Move [X19], W9
	093 Move X8, [X19+104]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+104], X31
	099 Move [X19], W9
	100 Move X8, 0xC90000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCCC000
	106 Move X8, [X8+864]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass97_0..ctor, X0
	112 Move [X19+96], X21
	113 Compare X21, 0
	114 JumpIfEqual {392}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move W8, [X19+56]
	122 Move [X21+40], W8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 Move [X21+44], X8
	125 Move X8, [X19+96]
	126 Compare X8, 0
	127 JumpIfEqual {393}
	128 Move X9, [X19+72]
	129 Move [X8+56], X9
	130 Move X9, [X19+80]
	131 Move [X8+64], X9
	132 Compare X20, 0
	133 JumpIfEqual {394}
	134 Move W8, [X20+16]
	135 Compare W8, 0
	136 JumpIfEqual {274}
	137 Move X8, [X19+96]
	138 Compare X8, 0
	139 JumpIfEqual {395}
	140 Move X21, [X8+24]
	141 Compare X21, 0
	142 JumpIfEqual {396}
	143 Move X23, 0xC90000
	144 Move X8, [X21]
	145 Move X23, [X23+2072]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, [X23]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move W2, 7
	157 Move X0, X21
	158 Call 0x1C5D788
	159 Move W9, [X10]
	160 Add W9, W9, 7
	161 Add X8, X8, W9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X1, [X0+8]
	165 Move X0, X21
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X1, X31
	168 Call String.IsNullOrEmpty, X0
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {272}
	173 Move X8, [X19+96]
	174 Compare X8, 0
	175 JumpIfEqual {397}
	176 Move X9, 0xC90000
	177 Move X9, [X9+2544]
	178 Move X21, [X8+24]
	179 Move X0, [X9]
	180 Move W9, [X0+224]
	181 Compare W9, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X0, X31
	185 Call DateTime.get_UtcNow
	186 Move X22, 0xC91000
	187 Move X22, [X22+2576]
	188 Move X8, X0
	189 Move [X31+40], X8
	190 Move X0, [X22]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {196}
	194 Call 0x1C17DFC
	195 Move X0, [X22]
	196 Move X8, [X0+184]
	197 Move X1, [X8]
	198 Add X0, X31, 40
	199 Move X2, X31
	200 Call DateTime.Add, X0, X1
	201 Compare X21, 0
	202 JumpIfEqual {398}
	203 Move X8, [X21]
	204 Move X1, [X23]
	205 Move X22, X0
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move W2, 11
	216 Move X0, X21
	217 Call 0x1C5D788
	218 Move W9, [X10]
	219 Add W9, W9, 11
	220 Add X8, X8, W9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X2, [X0+8]
	224 Move X0, X21
	225 Move X1, X22
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {272}
	231 Move X8, [X19+96]
	232 Compare X8, 0
	233 JumpIfEqual {399}
	234 Move X1, [X8+24]
	235 Move X3, [X19+88]
	236 Move X4, [X8+64]
	237 Move X0, X20
	238 Move X2, X31
	239 Move X5, X31
	240 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	241 Compare X0, 0
	242 JumpIfEqual {400}
	243 Move X8, 0xC90000
	244 Move X8, [X8+2112]
	245 Move X1, [X8]
	246 Call Task`1<Object>.GetAwaiter, X0
	247 Move X8, 0xC90000
	248 Move X8, [X8+2104]
	249 Move [X31+32], X0
	250 Move X1, [X8]
	251 Add X0, X31, 32
	252 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfEqual {100}
	257 Move [X19], W31
	258 Move X8, [X31+32]
	259 Move [X19+104], X8
	260 Move X0, [X25]
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {265}
	264 Call 0x1C17DFC
	265 Move X8, 0xCCC000
	266 Move X8, [X8+808]
	267 Add X0, X19, 8
	268 Move X3, [X8]
	269 Add X1, X31, 32
	270 Move X2, X19
	271 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	272 Compare X20, 0
	273 JumpIfEqual {391}
	274 Move X8, 0xCCC000
	275 Move X8, [X8+816]
	276 Move X21, [X20+88]
	277 Move X23, [X19+96]
	278 Move X0, [X8]
	279 Call 0x1C17F10
	280 Move X8, 0xCCC000
	281 Move X8, [X8+856]
	282 Move X22, X0
	283 Move X2, [X8]
	284 Move X1, X23
	285 Move X3, X31
	286 Call Func`1<Object>..ctor, X0, X1, X2
	287 Move X8, [X19+96]
	288 Compare X8, 0
	289 JumpIfEqual {388}
	290 Move X9, 0xCCB000
	291 Move X23, [X19+88]
	292 Move X9, [X9+1992]
	293 Compare X23, 0
	294 JumpIfNotEqual {296}
	295 Move X23, [X20+24]
	296 Move X20, [X8+24]
	297 Move X1, [X8+64]
	298 Move X2, [X9]
	299 Move [X31+8], X31
	300 Move [X31+16], X31
	301 Add X0, X31, 8
	302 Call Nullable`1<CancellationToken>..ctor, X0, X1
	303 Move X8, 0xCCB000
	304 Move X8, [X8+2000]
	305 Move X0, [X8]
	306 Call 0x1C17F10
	307 Move X3, [X31+8]
	308 Move X4, [X31+16]
	309 Move X24, X0
	310 Move X1, X20
	311 Move X2, X23
	312 Move X5, X31
	313 Call RetryHistory..ctor, X0, X1, X2, X3
	314 Compare X21, 0
	315 JumpIfEqual {389}
	316 Move X8, 0xCCC000
	317 Move X8, [X8+824]
	318 Move X3, [X8]
	319 Move X0, X21
	320 Move X1, X22
	321 Move X2, X24
	322 Call 0x2244230, X0, X1, X2
	323 Compare X0, 0
	324 JumpIfEqual {390}
	325 Move X8, 0xCCC000
	326 Move X8, [X8+848]
	327 Move X1, [X8]
	328 Call Task`1<Object>.GetAwaiter, X0
	329 Move X8, 0xCCC000
	330 Move X8, [X8+840]
	331 Move [X31+24], X0
	332 Move X1, [X8]
	333 Add X0, X31, 24
	334 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	335 Move TEMP, X0
	336 And TEMP, TEMP, 1
	337 Compare TEMP, 1
	338 JumpIfNotEqual {362}
	339 Move X8, 0xCCC000
	340 Move X8, [X8+832]
	341 Add X0, X31, 24
	342 Move X1, [X8]
	343 Call TaskAwaiter`1<Object>.GetResult, X0
	344 Move TEMP, 1
	345 Not TEMP
	346 Move W8, TEMP
	347 Move [X19], W8
	348 Move [X19+96], X31
	349 Move X20, X0
	350 Move X0, [X25]
	351 Move X21, 0xCCB000
	352 Add X19, X19, 8
	353 Move W8, [X0+224]
	354 Move X21, [X21+568]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X2, [X21]
	359 Move X0, X19
	360 Move X1, X20
	361 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	362 Move W8, 1
	363 Move [X19], W8
	364 Move X8, [X31+24]
	365 Move [X19+112], X8
	366 Move X0, [X25]
	367 Move W8, [X0+224]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move X8, 0xCCC000
	372 Move X8, [X8+800]
	373 Add X0, X19, 8
	374 Move X3, [X8]
	375 Add X1, X31, 24
	376 Move X2, X19
	377 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	378 Move X20, [X31+96]
	379 Move X19, [X31+104]
	380 Move X22, [X31+80]
	381 Move X21, [X31+88]
	382 Move X24, [X31+64]
	383 Move X23, [X31+72]
	384 Move X30, [X31+48]
	385 Move X25, [X31+56]
	386 Add X31, X31, 112
	387 Return 
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Move X20, X0
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move X0, X20
	404 Call 0x3EB2AD0
	405 Move X20, X0
	406 Move X0, 0xC8F000
	407 Move X0, [X0+2000]
	408 Call 0x1C17D08
	409 Move X8, [X20]
	410 Move X1, [X8]
	411 Call 0x1C18270
	412 Move TEMP, X0
	413 And TEMP, TEMP, 1
	414 Compare TEMP, 1
	415 JumpIfNotEqual {437}
	416 Move X20, [X20]
	417 Call 0x3EB2AE0
	418 Move TEMP, 1
	419 Not TEMP
	420 Move W8, TEMP
	421 Move [X19+96], X31
	422 Move [X19+8], W8
	423 Move X0, 0xCCA000
	424 Move X0, [X0+1936]
	425 Call 0x1C17D08
	426 Move W8, [X0+224]
	427 Compare W8, 0
	428 JumpIfNotEqual {430}
	429 Call 0x1C17DFC
	430 Move X0, 0xCCB000
	431 Move X0, [X0+600]
	432 Call 0x1C17D08
	433 Move X2, X0
	434 Move X0, X19
	435 Move X1, X20
	436 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	437 Move W0, 8
	438 Call 0x3EB2AF0
	439 Move X8, [X20]
	440 Move [X0], X8
	441 Move X1, 0xA50000
	442 Add X1, X1, 3672
	443 Move X2, X31
	444 Call 0x3EB2B00
	445 Move X20, X0
	446 Call 0x3EB2AE0
	447 Move X0, X20
	448 Call 0x1D2D690
	449 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03465CF0 LDR X0, [X0 + 0x3C0]
	0x03465CF4 BL 0x1C16CF4
	0x03465CF8 ADRP X0, 0xCCA000
	0x03465CFC LDR X0, [X0 + 0x288]
	0x03465D00 BL 0x1C16CF4
	0x03465D04 ADRP X0, 0xCC9000
	0x03465D08 LDR X0, [X0 + 0x698]
	0x03465D0C BL 0x1C16CF4
	0x03465D10 ADRP X0, 0xC90000
	0x03465D14 LDR X0, [X0 + 0xA10]
	0x03465D18 BL 0x1C16CF4
	0x03465D1C ADRP X0, 0xC8F000
	0x03465D20 LDR X0, [X0 + 0x9F0]
	0x03465D24 BL 0x1C16CF4
	0x03465D28 ADRP X0, 0xCCB000
	0x03465D2C LDR X0, [X0 + 0x3C8]
	0x03465D30 BL 0x1C16CF4
	0x03465D34 ADRP X0, 0xCCB000
	0x03465D38 LDR X0, [X0 + 0x3D0]
	0x03465D3C BL 0x1C16CF4
	0x03465D40 ADRP X0, 0xC8F000
	0x03465D44 LDR X0, [X0 + 0x818]
	0x03465D48 BL 0x1C16CF4
	0x03465D4C ADRP X0, 0xCCB000
	0x03465D50 LDR X0, [X0 + 0x3D8]
	0x03465D54 BL 0x1C16CF4
	0x03465D58 ADRP X0, 0xCCB000
	0x03465D5C LDR X0, [X0 + 0x3E0]
	0x03465D60 BL 0x1C16CF4
	0x03465D64 ADRP X0, 0xCC9000
	0x03465D68 LDR X0, [X0 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF79000
	007 Move X21, 0xCCA000
	008 Move W8, [X22+1980]
	009 Move X21, [X21+1936]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCCB000
	017 Move X0, [X0+608]
	018 Call 0x1C17CF4
	019 Move X0, 0xCCA000
	020 Move X0, [X0+1936]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1980], W8
	024 Move X0, [X21]
	025 Move X21, 0xCCB000
	026 Move W8, [X0+224]
	027 Move X21, [X21+608]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

