Type: Nakama.ApiChannelMessageList

Method: System.String get_CacheableCursor()

Disassembly:
	0x03405B30 LDR X21, [X21]
	0x03405B34 MOVZ W1, 0x4

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_CacheableCursor(System.String value)

Disassembly:
	0x03405B38 BL 0x1C16D6C
	0x03405B3C CBZ X0, 0x3405D3C

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.IApiChannelMessage> get_Messages()

Disassembly:
	0x03405B40 MOV X20, X0
	0x03405B44 CBZ X21, 0x3405B5C
	0x03405B48 LDR X8, [X20]
	0x03405B4C MOV X0, X21
	0x03405B50 LDR X1, [X8 + 0x40]
	0x03405B54 BL 0x1C16E00
	0x03405B58 CBZ X0, 0x3405D30
	0x03405B5C LDR W8, [X20 + 0x18]
	0x03405B60 CBZ W8, 0x3405D2C
	0x03405B64 ADRP X23, 0xD28000
	0x03405B68 LDR X23, [X23 + 0xCE8]
	0x03405B6C STR X21, [X20 + 0x20]
	0x03405B70 LDR X0, [X23]
	0x03405B74 CBZ X0, 0x3405B8C
	0x03405B78 LDR X8, [X20]
	0x03405B7C LDR X1, [X8 + 0x40]
	0x03405B80 BL 0x1C16E00
	0x03405B84 CBZ X0, 0x3405D30
	0x03405B88 LDR W8, [X20 + 0x18]
	0x03405B8C CMP W8, 0x1
	0x03405B90 B.LS 0x3405D2C
	0x03405B94 LDR X8, [X23]
	0x03405B98 ADRP X9, 0xCEE000
	0x03405B9C LDR X9, [X9 + 0x758]
	0x03405BA0 ADD X1, X31, 0xC
	0x03405BA4 STR X8, [X20 + 0x28]
	0x03405BA8 LDR W8, [X19 + 0x10]
	0x03405BAC LDR X0, [X9]
	0x03405BB0 STR W8, [X31 + 0xC]
	0x03405BB4 BL 0x1C16E04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD9000
	005 Move W8, [X20+1314]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD29000
	012 Move X0, [X0+3640]
	013 Call 0x1C17CF4
	014 Move X0, 0xD29000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1314], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xD29000
	023 Move X8, [X8+3648]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xD29000
	027 Move X8, [X8+3640]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.ApiChannelMessage> get__messages()

Disassembly:
	0x03405BB8 MOV X21, X0
	0x03405BBC CBZ X0, 0x3405BD4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__messages(System.Collections.Generic.List`1<Nakama.ApiChannelMessage> value)

Disassembly:
	0x03405BC0 LDR X8, [X20]
	0x03405BC4 MOV X0, X21

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_NextCursor()

Disassembly:
	0x03405BC8 LDR X1, [X8 + 0x40]
	0x03405BCC BL 0x1C16E00

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_NextCursor(System.String value)

Disassembly:
	0x03405BD0 CBZ X0, 0x3405D30
	0x03405BD4 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_PrevCursor()

Disassembly:
	0x03405BD8 CMP W8, 0x2
	0x03405BDC B.LS 0x3405D2C

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_PrevCursor(System.String value)

Disassembly:
	0x03405BE0 ADRP X23, 0xCEE000
	0x03405BE4 LDR X23, [X23 + 0x838]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03405BE8 STR X21, [X20 + 0x30]
	0x03405BEC LDR X0, [X23]
	0x03405BF0 CBZ X0, 0x3405C08
	0x03405BF4 LDR X8, [X20]
	0x03405BF8 LDR X1, [X8 + 0x40]
	0x03405BFC BL 0x1C16E00
	0x03405C00 CBZ X0, 0x3405D30
	0x03405C04 LDR W8, [X20 + 0x18]
	0x03405C08 CMP W8, 0x3
	0x03405C0C B.LS 0x3405D2C
	0x03405C10 LDR X8, [X23]
	0x03405C14 ADRP X21, 0xD28000
	0x03405C18 LDR X21, [X21 + 0xDE8]
	0x03405C1C MOV X0, X20
	0x03405C20 MOV X1, X31
	0x03405C24 STR X8, [X20 + 0x38]
	0x03405C28 BL 0x3227578
	0x03405C2C LDR X2, [X19 + 0x18]
	0x03405C30 LDR X1, [X21]
	0x03405C34 LDR X3, [X23]
	0x03405C38 MOV X4, X31
	0x03405C3C BL 0x32277C4
	0x03405C40 LDR X8, [X22]
	0x03405C44 MOV X21, X0
	0x03405C48 MOVZ W1, 0x4
	0x03405C4C MOV X0, X8
	0x03405C50 BL 0x1C16D6C
	0x03405C54 CBZ X0, 0x3405D3C
	0x03405C58 MOV X20, X0
	0x03405C5C CBZ X21, 0x3405C74
	0x03405C60 LDR X8, [X20]
	0x03405C64 MOV X0, X21
	0x03405C68 LDR X1, [X8 + 0x40]
	0x03405C6C BL 0x1C16E00
	0x03405C70 CBZ X0, 0x3405D30
	0x03405C74 LDR W8, [X20 + 0x18]
	0x03405C78 CBZ W8, 0x3405D2C
	0x03405C7C ADRP X22, 0xD28000
	0x03405C80 LDR X22, [X22 + 0xCF0]
	0x03405C84 STR X21, [X20 + 0x20]
	0x03405C88 LDR X0, [X22]
	0x03405C8C CBZ X0, 0x3405CA4
	0x03405C90 LDR X8, [X20]
	0x03405C94 LDR X1, [X8 + 0x40]
	0x03405C98 BL 0x1C16E00
	0x03405C9C CBZ X0, 0x3405D30
	0x03405CA0 LDR W8, [X20 + 0x18]
	0x03405CA4 CMP W8, 0x1
	0x03405CA8 B.LS 0x3405D2C
	0x03405CAC LDR X9, [X22]
	0x03405CB0 STR X9, [X20 + 0x28]
	0x03405CB4 LDR X19, [X19 + 0x20]
	0x03405CB8 CBZ X19, 0x3405CD4
	0x03405CBC LDR X8, [X20]
	0x03405CC0 MOV X0, X19
	0x03405CC4 LDR X1, [X8 + 0x40]
	0x03405CC8 BL 0x1C16E00
	0x03405CCC CBZ X0, 0x3405D30
	0x03405CD0 LDR W8, [X20 + 0x18]
	0x03405CD4 CMP W8, 0x2
	0x03405CD8 B.LS 0x3405D2C
	0x03405CDC STR X19, [X20 + 0x30]
	0x03405CE0 LDR X0, [X23]
	0x03405CE4 CBZ X0, 0x3405CFC
	0x03405CE8 LDR X8, [X20]
	0x03405CEC LDR X1, [X8 + 0x40]
	0x03405CF0 BL 0x1C16E00
	0x03405CF4 CBZ X0, 0x3405D30
	0x03405CF8 LDR W8, [X20 + 0x18]
	0x03405CFC CMP W8, 0x3
	0x03405D00 B.LS 0x3405D2C
	0x03405D04 LDR X8, [X23]
	0x03405D08 MOV X0, X20
	0x03405D0C MOV X1, X31
	0x03405D10 STR X8, [X20 + 0x38]
	0x03405D14 BL 0x3227578
	0x03405D18 LDP X20, X19, [X31 + 0x30]
	0x03405D1C LDP X22, X21, [X31 + 0x20]
	0x03405D20 LDP X30, X23, [X31 + 0x10]
	0x03405D24 ADD X31, X31, 0x40
	0x03405D28 RET
	0x03405D2C BL 0x1C16F28
	0x03405D30 BL 0x1C16F44
	0x03405D34 MOV X1, X31
	0x03405D38 BL 0x1C16DEC
	0x03405D3C BL 0x1C16F20
	0x03405D40 MOV X1, X31
	0x03405D44 B 0x33BDD8C

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0xFD9000
	013 Move X20, 0xCEF000
	014 Move X27, 0xD29000
	015 Move X21, 0xCEF000
	016 Move X26, 0xD29000
	017 Move X24, 0xD29000
	018 Move X25, 0xD29000
	019 Move X23, 0xD29000
	020 Move X22, 0xD29000
	021 Move X20, [X20+2440]
	022 Move X27, [X27+3656]
	023 Move X21, [X21+2104]
	024 Move W8, [X28+1315]
	025 Move X26, [X26+3664]
	026 Move X24, [X24+3672]
	027 Move X25, [X25+3408]
	028 Move X23, [X23+3680]
	029 Move X22, [X22+3688]
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, 0xD29000
	036 Move X0, [X0+3664]
	037 Call 0x1C17CF4
	038 Move X0, 0xD29000
	039 Move X0, [X0+3672]
	040 Call 0x1C17CF4
	041 Move X0, 0xD29000
	042 Move X0, [X0+3656]
	043 Call 0x1C17CF4
	044 Move X0, 0xCEF000
	045 Move X0, [X0+2104]
	046 Call 0x1C17CF4
	047 Move X0, 0xD29000
	048 Move X0, [X0+3688]
	049 Call 0x1C17CF4
	050 Move X0, 0xD29000
	051 Move X0, [X0+3680]
	052 Call 0x1C17CF4
	053 Move X0, 0xD29000
	054 Move X0, [X0+3408]
	055 Call 0x1C17CF4
	056 Move X0, 0xCEF000
	057 Move X0, [X0+2440]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X28+1315], W8
	061 Move X2, [X19+16]
	062 Move X0, [X20]
	063 Move X1, [X27]
	064 Move X3, [X21]
	065 Move X4, X31
	066 Call String.Concat, X0, X1, X2, X3
	067 Move X20, X0
	068 Move X0, X19
	069 Call ApiChannelMessageList.get_Messages, X0
	070 Move X8, [X21]
	071 Move X2, [X26]
	072 Move X1, X0
	073 Move X0, X8
	074 Call String.Join, X0, X1
	075 Move X1, [X24]
	076 Move X3, [X25]
	077 Move X2, X0
	078 Move X0, X20
	079 Move X4, X31
	080 Call String.Concat, X0, X1, X2, X3
	081 Move X2, [X19+32]
	082 Move X1, [X23]
	083 Move X3, [X21]
	084 Move X4, X31
	085 Call String.Concat, X0, X1, X2, X3
	086 Move X2, [X19+40]
	087 Move X1, [X22]
	088 Move X3, [X21]
	089 Move X20, [X31+80]
	090 Move X19, [X31+88]
	091 Move X22, [X31+64]
	092 Move X21, [X31+72]
	093 Move X24, [X31+48]
	094 Move X23, [X31+56]
	095 Move X26, [X31+32]
	096 Move X25, [X31+40]
	097 Move X28, [X31+16]
	098 Move X27, [X31+24]
	099 Move X4, X31
	100 Move X30, [X31+96]
	101 Call String.Concat, X0, X1, X2, X3
	102 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03405D48 LDR X0, [X0 + 0x10]
	0x03405D4C RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

