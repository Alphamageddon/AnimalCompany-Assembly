Type: Nakama.Client/<AuthenticateCustomAsync>d__45

Method: System.Void MoveNext()

Disassembly:
	0x0344E2C8 MOVZ W0, 0x8
	0x0344E2CC BL 0x3EB1AF0
	0x0344E2D0 LDR X8, [X20]
	0x0344E2D4 STR X8, [X0]
	0x0344E2D8 ADRP X1, 0xA66000
	0x0344E2DC ADD X1, X1, 0xE58
	0x0344E2E0 MOV X2, X31
	0x0344E2E4 BL 0x3EB1B00
	0x0344E2E8 MOV X20, X0
	0x0344E2EC BL 0x3EB1AE0
	0x0344E2F0 MOV X0, X20
	0x0344E2F4 BL 0x1D2C690
	0x0344E2F8 BL 0x1990590
	0x0344E2FC STR X30, [X31 - 0x30]!
	0x0344E300 STP X22, X21, [X31 + 0x10]
	0x0344E304 STP X20, X19, [X31 + 0x20]
	0x0344E308 ADRP X22, 0xF8F000
	0x0344E30C ADRP X21, 0xCE1000
	0x0344E310 LDRB W8, [X22 + 0x75E]
	0x0344E314 LDR X21, [X21 + 0x630]
	0x0344E318 MOV X19, X1
	0x0344E31C MOV X20, X0
	0x0344E320 TBNZ X8, 0x0, 0x344E344
	0x0344E324 ADRP X0, 0xCE1000
	0x0344E328 LDR X0, [X0 + 0xAA8]
	0x0344E32C BL 0x1C16CF4
	0x0344E330 ADRP X0, 0xCE1000
	0x0344E334 LDR X0, [X0 + 0x630]
	0x0344E338 BL 0x1C16CF4
	0x0344E33C MOVZ W8, 0x1
	0x0344E340 STRB W8, [X22 + 0x75E]
	0x0344E344 LDR X0, [X21]
	0x0344E348 ADRP X21, 0xCE1000
	0x0344E34C LDR W8, [X0 + 0xE0]
	0x0344E350 LDR X21, [X21 + 0xAA8]
	0x0344E354 CBNZ W8, 0x344E35C
	0x0344E358 BL 0x1C16DFC
	0x0344E35C LDR X2, [X21]
	0x0344E360 ADD X0, X20, 0x8
	0x0344E364 MOV X1, X19
	0x0344E368 LDP X20, X19, [X31 + 0x20]
	0x0344E36C LDP X22, X21, [X31 + 0x10]
	0x0344E370 LDR X30, [X31], #0x30
	0x0344E374 B 0x2632228
	0x0344E378 SUB X31, X31, 0x60
	0x0344E37C STP X30, X25, [X31 + 0x20]
	0x0344E380 STP X24, X23, [X31 + 0x30]
	0x0344E384 STP X22, X21, [X31 + 0x40]
	0x0344E388 STP X20, X19, [X31 + 0x50]
	0x0344E38C ADRP X20, 0xF8F000
	0x0344E390 LDRB W8, [X20 + 0x75F]
	0x0344E394 MOV X19, X0
	0x0344E398 TBNZ X8, 0x0, 0x344E44C
	0x0344E39C ADRP X0, 0xCE1000
	0x0344E3A0 LDR X0, [X0 + 0xAF8]
	0x0344E3A4 BL 0x1C16CF4
	0x0344E3A8 ADRP X0, 0xCE1000
	0x0344E3AC LDR X0, [X0 + 0xA50]
	0x0344E3B0 BL 0x1C16CF4
	0x0344E3B4 ADRP X0, 0xCE1000
	0x0344E3B8 LDR X0, [X0 + 0x630]
	0x0344E3BC BL 0x1C16CF4
	0x0344E3C0 ADRP X0, 0xCE1000
	0x0344E3C4 LDR X0, [X0 + 0xA58]
	0x0344E3C8 BL 0x1C16CF4
	0x0344E3CC ADRP X0, 0xCE1000
	0x0344E3D0 LDR X0, [X0 + 0xA60]
	0x0344E3D4 BL 0x1C16CF4
	0x0344E3D8 ADRP X0, 0xCE1000
	0x0344E3DC LDR X0, [X0 + 0x7C8]
	0x0344E3E0 BL 0x1C16CF4
	0x0344E3E4 ADRP X0, 0xCE1000
	0x0344E3E8 LDR X0, [X0 + 0x7D0]
	0x0344E3EC BL 0x1C16CF4
	0x0344E3F0 ADRP X0, 0xCE1000
	0x0344E3F4 LDR X0, [X0 + 0xA68]
	0x0344E3F8 BL 0x1C16CF4
	0x0344E3FC ADRP X0, 0xCE1000
	0x0344E400 LDR X0, [X0 + 0xA70]
	0x0344E404 BL 0x1C16CF4
	0x0344E408 ADRP X0, 0xCE1000
	0x0344E40C LDR X0, [X0 + 0xA78]
	0x0344E410 BL 0x1C16CF4
	0x0344E414 ADRP X0, 0xCE1000
	0x0344E418 LDR X0, [X0 + 0xA80]
	0x0344E41C BL 0x1C16CF4
	0x0344E420 ADRP X0, 0xCE1000
	0x0344E424 LDR X0, [X0 + 0xA88]
	0x0344E428 BL 0x1C16CF4
	0x0344E42C ADRP X0, 0xCE1000
	0x0344E430 LDR X0, [X0 + 0xB00]
	0x0344E434 BL 0x1C16CF4
	0x0344E438 ADRP X0, 0xCE1000
	0x0344E43C LDR X0, [X0 + 0xB08]
	0x0344E440 BL 0x1C16CF4
	0x0344E444 MOVZ W8, 0x1
	0x0344E448 STRB W8, [X20 + 0x75F]
	0x0344E44C STR X31, [X31 + 0x18]
	0x0344E450 ADRP X25, 0xCE1000
	0x0344E454 LDR W8, [X19]
	0x0344E458 LDR X25, [X25 + 0x630]
	0x0344E45C CBZ W8, 0x344E5D0
	0x0344E460 ADRP X8, 0xCE1000
	0x0344E464 LDR X8, [X8 + 0xB08]
	0x0344E468 LDR X24, [X19 + 0x20]
	0x0344E46C LDR X0, [X8]
	0x0344E470 BL 0x1C16F10
	0x0344E474 MOV X22, X0
	0x0344E478 MOV X1, X31
	0x0344E47C BL 0x33BDD8C
	0x0344E480 CBZ X22, 0x344E798
	0x0344E484 LDR X8, [X19 + 0x20]
	0x0344E488 STR X8, [X22 + 0x10]
	0x0344E48C LDR X8, [X19 + 0x28]
	0x0344E490 STR X8, [X22 + 0x18]
	0x0344E494 LDR X8, [X19 + 0x30]
	0x0344E498 STR X8, [X22 + 0x20]
	0x0344E49C LDRB W8, [X19 + 0x38]
	0x0344E4A0 STRB W8, [X22 + 0x28]
	0x0344E4A4 LDR X8, [X19 + 0x40]
	0x0344E4A8 STR X8, [X22 + 0x30]
	0x0344E4AC LDRB W8, [X19 + 0x48]
	0x0344E4B0 STRB W8, [X22 + 0x38]
	0x0344E4B4 LDR X8, [X19 + 0x50]
	0x0344E4B8 STR X8, [X22 + 0x40]
	0x0344E4BC CBZ X24, 0x344E79C
	0x0344E4C0 ADRP X8, 0xCE1000
	0x0344E4C4 LDR X8, [X8 + 0xA58]
	0x0344E4C8 LDR X20, [X24 + 0x58]
	0x0344E4CC LDR X0, [X8]
	0x0344E4D0 BL 0x1C16F10
	0x0344E4D4 ADRP X8, 0xCE1000
	0x0344E4D8 LDR X8, [X8 + 0xB00]
	0x0344E4DC MOV X21, X0
	0x0344E4E0 LDR X2, [X8]
	0x0344E4E4 MOV X1, X22
	0x0344E4E8 MOV X3, X31
	0x0344E4EC BL 0x2D27AA8
	0x0344E4F0 ADRP X8, 0xCE1000
	0x0344E4F4 LDR X23, [X19 + 0x58]
	0x0344E4F8 LDR X8, [X8 + 0x7C8]
	0x0344E4FC CBNZ X23, 0x344E504
	0x0344E500 LDR X23, [X24 + 0x18]
	0x0344E504 LDR X24, [X22 + 0x18]
	0x0344E508 LDR X1, [X22 + 0x40]
	0x0344E50C LDR X2, [X8]
	0x0344E510 STP X31, X31, [X31 + 0x8]
	0x0344E514 ADD X0, X31, 0x8
	0x0344E518 BL 0x242E368
	0x0344E51C ADRP X8, 0xCE1000
	0x0344E520 LDR X8, [X8 + 0x7D0]
	0x0344E524 LDR X0, [X8]
	0x0344E528 BL 0x1C16F10
	0x0344E52C LDP X3, X4, [X31 + 0x8]
	0x0344E530 MOV X22, X0
	0x0344E534 MOV X1, X24
	0x0344E538 MOV X2, X23
	0x0344E53C MOV X5, X31
	0x0344E540 BL 0x3478040
	0x0344E544 CBZ X20, 0x344E7A0
	0x0344E548 ADRP X8, 0xCE1000
	0x0344E54C LDR X8, [X8 + 0xA68]
	0x0344E550 LDR X3, [X8]
	0x0344E554 MOV X0, X20
	0x0344E558 MOV X1, X21
	0x0344E55C MOV X2, X22
	0x0344E560 BL 0x2243230
	0x0344E564 CBZ X0, 0x344E7A4
	0x0344E568 ADRP X8, 0xCE1000
	0x0344E56C LDR X8, [X8 + 0xA88]
	0x0344E570 LDR X1, [X8]
	0x0344E574 BL 0x269F5D0
	0x0344E578 ADRP X8, 0xCE1000
	0x0344E57C LDR X8, [X8 + 0xA80]
	0x0344E580 STR X0, [X31 + 0x18]
	0x0344E584 LDR X1, [X8]
	0x0344E588 ADD X0, X31, 0x18
	0x0344E58C BL 0x2677430
	0x0344E590 TBNZ X0, 0x0, 0x344E5E4
	0x0344E594 STR W31, [X19]
	0x0344E598 LDR X8, [X31 + 0x18]
	0x0344E59C STR X8, [X19 + 0x60]
	0x0344E5A0 LDR X0, [X25]
	0x0344E5A4 LDR W8, [X0 + 0xE0]
	0x0344E5A8 CBNZ W8, 0x344E5B0
	0x0344E5AC BL 0x1C16DFC
	0x0344E5B0 ADRP X8, 0xCE1000
	0x0344E5B4 LDR X8, [X8 + 0xAF8]
	0x0344E5B8 ADD X0, X19, 0x8
	0x0344E5BC LDR X3, [X8]
	0x0344E5C0 ADD X1, X31, 0x18
	0x0344E5C4 MOV X2, X19
	0x0344E5C8 BL 0x1FBA198
	0x0344E5CC B 0x344E77C
	0x0344E5D0 LDR X8, [X19 + 0x60]
	0x0344E5D4 MOVN W9, 0x0
	0x0344E5D8 STR X8, [X31 + 0x18]
	0x0344E5DC STR X31, [X19 + 0x60]
	0x0344E5E0 STR W9, [X19]
	0x0344E5E4 ADRP X8, 0xCE1000
	0x0344E5E8 LDR X8, [X8 + 0xA78]
	0x0344E5EC ADD X0, X31, 0x18
	0x0344E5F0 LDR X1, [X8]
	0x0344E5F4 BL 0x2677474
	0x0344E5F8 MOV X20, X0
	0x0344E5FC CBZ X0, 0x344E794
	0x0344E600 ADRP X23, 0xCE1000
	0x0344E604 LDR X8, [X20]
	0x0344E608 LDR X23, [X23 + 0xA60]
	0x0344E60C LDRH W9, [X8 + 0x12E]
	0x0344E610 LDR X1, [X23]
	0x0344E614 CBZ X9, 0x344E638
	0x0344E618 LDR X10, [X8 + 0xB0]
	0x0344E61C ADD X10, X10, 0x8
	0x0344E620 LDUR X11, [X10 - 0x8]
	0x0344E624 CMP X11, X1
	0x0344E628 B.EQ 0x344E648
	0x0344E62C SUBS X9, X9, 0x1
	0x0344E630 ADD X10, X10, 0x10
	0x0344E634 B.NE 0x344E620
	0x0344E638 MOVZ W2, 0x2
	0x0344E63C MOV X0, X20
	0x0344E640 BL 0x1C5C788
	0x0344E644 B 0x344E658
	0x0344E648 LDR W9, [X10]
	0x0344E64C ADD W9, W9, 0x2
	0x0344E650 ADD X8, X8, W9, 0x4, SXTW
	0x0344E654 ADD X0, X8, 0x138
	0x0344E658 LDP X8, X1, [X0]
	0x0344E65C MOV X0, X20
	0x0344E660 BLR X8
	0x0344E664 LDR X8, [X20]
	0x0344E668 LDR X1, [X23]
	0x0344E66C MOV X21, X0
	0x0344E670 LDRH W9, [X8 + 0x12E]
	0x0344E674 CBZ X9, 0x344E698
	0x0344E678 LDR X10, [X8 + 0xB0]
	0x0344E67C ADD X10, X10, 0x8
	0x0344E680 LDUR X11, [X10 - 0x8]
	0x0344E684 CMP X11, X1
	0x0344E688 B.EQ 0x344E6A8
	0x0344E68C SUBS X9, X9, 0x1
	0x0344E690 ADD X10, X10, 0x10
	0x0344E694 B.NE 0x344E680
	0x0344E698 MOVZ W2, 0x1
	0x0344E69C MOV X0, X20
	0x0344E6A0 BL 0x1C5C788
	0x0344E6A4 B 0x344E6B8
	0x0344E6A8 LDR W9, [X10]
	0x0344E6AC ADD W9, W9, 0x1
	0x0344E6B0 ADD X8, X8, W9, 0x4, SXTW
	0x0344E6B4 ADD X0, X8, 0x138
	0x0344E6B8 LDP X8, X1, [X0]
	0x0344E6BC MOV X0, X20
	0x0344E6C0 BLR X8
	0x0344E6C4 LDR X8, [X20]
	0x0344E6C8 LDR X1, [X23]
	0x0344E6CC MOV X22, X0
	0x0344E6D0 LDRH W9, [X8 + 0x12E]
	0x0344E6D4 CBZ X9, 0x344E6F8
	0x0344E6D8 LDR X10, [X8 + 0xB0]
	0x0344E6DC ADD X10, X10, 0x8
	0x0344E6E0 LDUR X11, [X10 - 0x8]
	0x0344E6E4 CMP X11, X1
	0x0344E6E8 B.EQ 0x344E708
	0x0344E6EC SUBS X9, X9, 0x1
	0x0344E6F0 ADD X10, X10, 0x10
	0x0344E6F4 B.NE 0x344E6E0
	0x0344E6F8 MOV X0, X20
	0x0344E6FC MOV W2, W31
	0x0344E700 BL 0x1C5C788
	0x0344E704 B 0x344E714
	0x0344E708 LDRSW X9, [X10]
	0x0344E70C ADD X8, X8, X9, 0x4, LSL
	0x0344E710 ADD X0, X8, 0x138
	0x0344E714 LDP X8, X1, [X0]
	0x0344E718 MOV X0, X20
	0x0344E71C BLR X8
	0x0344E720 ADRP X8, 0xCE1000
	0x0344E724 LDR X8, [X8 + 0xA70]
	0x0344E728 MOV W23, W0
	0x0344E72C LDR X0, [X8]
	0x0344E730 BL 0x1C16F10
	0x0344E734 MOV X20, X0
	0x0344E738 AND W3, W23, 0x1
	0x0344E73C MOV X1, X21
	0x0344E740 MOV X2, X22
	0x0344E744 MOV X4, X31
	0x0344E748 BL 0x34684B8
	0x0344E74C MOVN W8, 0x1
	0x0344E750 STR W8, [X19], #0x8
	0x0344E754 LDR X0, [X25]
	0x0344E758 ADRP X21, 0xCE1000
	0x0344E75C LDR W8, [X0 + 0xE0]
	0x0344E760 LDR X21, [X21 + 0xA50]
	0x0344E764 CBNZ W8, 0x344E76C
	0x0344E768 BL 0x1C16DFC
	0x0344E76C LDR X2, [X21]
	0x0344E770 MOV X0, X19
	0x0344E774 MOV X1, X20
	0x0344E778 BL 0x26322B0
	0x0344E77C LDP X20, X19, [X31 + 0x50]
	0x0344E780 LDP X22, X21, [X31 + 0x40]
	0x0344E784 LDP X24, X23, [X31 + 0x30]
	0x0344E788 LDP X30, X25, [X31 + 0x20]
	0x0344E78C ADD X31, X31, 0x60
	0x0344E790 RET
	0x0344E794 BL 0x1C16F20
	0x0344E798 BL 0x1C16F20
	0x0344E79C BL 0x1C16F20
	0x0344E7A0 BL 0x1C16F20
	0x0344E7A4 BL 0x1C16F20
	0x0344E7A8 B 0x344E7E4
	0x0344E7AC B 0x344E7E4
	0x0344E7B0 B 0x344E7E4
	0x0344E7B4 B 0x344E7E4
	0x0344E7B8 B 0x344E7E4
	0x0344E7BC B 0x344E7E4
	0x0344E7C0 B 0x344E7E4
	0x0344E7C4 B 0x344E7E4
	0x0344E7C8 B 0x344E7E4
	0x0344E7CC B 0x344E7E4
	0x0344E7D0 B 0x344E7E4
	0x0344E7D4 B 0x344E7E4
	0x0344E7D8 B 0x344E7E4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0xF90000
	011 Move W8, [X20+1881]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE2000
	018 Move X0, [X0+2736]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE2000
	021 Move X0, [X0+2640]
	022 Call 0x1C17CF4
	023 Move X0, 0xCE2000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE2000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE2000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE2000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE2000
	036 Move X0, [X0+2000]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE2000
	039 Move X0, [X0+2664]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE2000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0xCE2000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0xCE2000
	048 Move X0, [X0+2688]
	049 Call 0x1C17CF4
	050 Move X0, 0xCE2000
	051 Move X0, [X0+2696]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE2000
	054 Move X0, [X0+2744]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE2000
	057 Move X0, [X0+2752]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1881], W8
	061 Move [X31+24], X31
	062 Move X25, 0xCE2000
	063 Move W8, [X19]
	064 Move X25, [X25+1584]
	065 Compare W8, 0
	066 JumpIfEqual {167}
	067 Move X8, 0xCE2000
	068 Move X8, [X8+2752]
	069 Move X24, [X19+32]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X22, X0
	073 Move X1, X31
	074 Call Object..ctor, X0
	075 Compare X22, 0
	076 JumpIfEqual {288}
	077 Move X8, [X19+32]
	078 Move [X22+16], X8
	079 Move X8, [X19+40]
	080 Move [X22+24], X8
	081 Move X8, [X19+48]
	082 Move [X22+32], X8
	083 Move W8, [X19+56]
	084 Move [X22+40], W8
	085 Move X8, [X19+64]
	086 Move [X22+48], X8
	087 Move X8, [X19+72]
	088 Move [X22+56], X8
	089 Compare X24, 0
	090 JumpIfEqual {289}
	091 Move X8, 0xCE2000
	092 Move X8, [X8+2648]
	093 Move X20, [X24+88]
	094 Move X0, [X8]
	095 Call 0x1C17F10
	096 Move X8, 0xCE2000
	097 Move X8, [X8+2744]
	098 Move X21, X0
	099 Move X2, [X8]
	100 Move X1, X22
	101 Move X3, X31
	102 Call Func`1<Object>..ctor, X0, X1, X2
	103 Move X8, 0xCE2000
	104 Move X23, [X19+80]
	105 Move X8, [X8+1992]
	106 Compare X23, 0
	107 JumpIfNotEqual {109}
	108 Move X23, [X24+24]
	109 Move X24, [X22+24]
	110 Move X1, [X22+56]
	111 Move X2, [X8]
	112 Move [X31+8], X31
	113 Move [X31+16], X31
	114 Add X0, X31, 8
	115 Call Nullable`1<CancellationToken>..ctor, X0, X1
	116 Move X8, 0xCE2000
	117 Move X8, [X8+2000]
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move X3, [X31+8]
	121 Move X4, [X31+16]
	122 Move X22, X0
	123 Move X1, X24
	124 Move X2, X23
	125 Move X5, X31
	126 Call RetryHistory..ctor, X0, X1, X2, X3
	127 Compare X20, 0
	128 JumpIfEqual {290}
	129 Move X8, 0xCE2000
	130 Move X8, [X8+2664]
	131 Move X3, [X8]
	132 Move X0, X20
	133 Move X1, X21
	134 Move X2, X22
	135 Call 0x2244230, X0, X1, X2
	136 Compare X0, 0
	137 JumpIfEqual {291}
	138 Move X8, 0xCE2000
	139 Move X8, [X8+2696]
	140 Move X1, [X8]
	141 Call Task`1<Object>.GetAwaiter, X0
	142 Move X8, 0xCE2000
	143 Move X8, [X8+2688]
	144 Move [X31+24], X0
	145 Move X1, [X8]
	146 Add X0, X31, 24
	147 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {174}
	152 Move [X19], W31
	153 Move X8, [X31+24]
	154 Move [X19+88], X8
	155 Move X0, [X25]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X8, 0xCE2000
	161 Move X8, [X8+2736]
	162 Add X0, X19, 8
	163 Move X3, [X8]
	164 Add X1, X31, 24
	165 Move X2, X19
	166 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	167 Move X8, [X19+88]
	168 Move TEMP, 0
	169 Not TEMP
	170 Move W9, TEMP
	171 Move [X31+24], X8
	172 Move [X19+88], X31
	173 Move [X19], W9
	174 Move X8, 0xCE2000
	175 Move X8, [X8+2680]
	176 Add X0, X31, 24
	177 Move X1, [X8]
	178 Call TaskAwaiter`1<Object>.GetResult, X0
	179 Move X20, X0
	180 Compare X0, 0
	181 JumpIfEqual {287}
	182 Move X23, 0xCE2000
	183 Move X8, [X20]
	184 Move X23, [X23+2656]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X1, [X23]
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 2
	196 Move X0, X20
	197 Call 0x1C5D788
	198 Move W9, [X10]
	199 Add W9, W9, 2
	200 Add X8, X8, W9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X20
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X8, [X20]
	207 Move X1, [X23]
	208 Move X21, X0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 1
	219 Move X0, X20
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 1
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X20
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X8, [X20]
	230 Move X1, [X23]
	231 Move X22, X0
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move X0, X20
	242 Move W2, W31
	243 Call 0x1C5D788
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Add X8, X8, X9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X1, [X0+8]
	249 Move X0, X20
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move X8, 0xCE2000
	252 Move X8, [X8+2672]
	253 Move W23, W0
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X20, X0
	257 And W3, W23, 1
	258 Move X1, X21
	259 Move X2, X22
	260 Move X4, X31
	261 Call Session..ctor, X0, X1, X2, X3
	262 Move TEMP, 1
	263 Not TEMP
	264 Move W8, TEMP
	265 Move [X19+8], W8
	266 Move X0, [X25]
	267 Move X21, 0xCE2000
	268 Move W8, [X0+224]
	269 Move X21, [X21+2640]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X2, [X21]
	274 Move X0, X19
	275 Move X1, X20
	276 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	277 Move X20, [X31+80]
	278 Move X19, [X31+88]
	279 Move X22, [X31+64]
	280 Move X21, [X31+72]
	281 Move X24, [X31+48]
	282 Move X23, [X31+56]
	283 Move X30, [X31+32]
	284 Move X25, [X31+40]
	285 Add X31, X31, 96
	286 Return 
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Move X20, X0
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X20
	295 Call 0x3EB2AD0
	296 Move X20, X0
	297 Move X0, 0xCA6000
	298 Move X0, [X0+2000]
	299 Call 0x1C17D08
	300 Move X8, [X20]
	301 Move X1, [X8]
	302 Call 0x1C18270
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {327}
	307 Move X20, [X20]
	308 Call 0x3EB2AE0
	309 Move TEMP, 1
	310 Not TEMP
	311 Move W8, TEMP
	312 Move [X19+8], W8
	313 Move X0, 0xCE2000
	314 Move X0, [X0+1584]
	315 Call 0x1C17D08
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X0, 0xCE2000
	321 Move X0, [X0+2720]
	322 Call 0x1C17D08
	323 Move X2, X0
	324 Move X0, X19
	325 Move X1, X20
	326 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	327 Move W0, 8
	328 Call 0x3EB2AF0
	329 Move X8, [X20]
	330 Move [X0], X8
	331 Move X1, 0xA67000
	332 Add X1, X1, 3672
	333 Move X2, X31
	334 Call 0x3EB2B00
	335 Move X20, X0
	336 Call 0x3EB2AE0
	337 Move X0, X20
	338 Call 0x1D2D690
	339 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0344E7DC B 0x344E7E4
	0x0344E7E0 B 0x344E7E4
	0x0344E7E4 MOV X20, X0
	0x0344E7E8 CMP W1, 0x1
	0x0344E7EC B.NE 0x344E888
	0x0344E7F0 MOV X0, X20
	0x0344E7F4 BL 0x3EB1AD0
	0x0344E7F8 MOV X20, X0
	0x0344E7FC ADRP X0, 0xCA5000
	0x0344E800 LDR X0, [X0 + 0x7D0]
	0x0344E804 BL 0x1C16D08
	0x0344E808 LDR X8, [X20]
	0x0344E80C LDR X1, [X8]
	0x0344E810 BL 0x1C17270
	0x0344E814 TBZ X0, 0x0, 0x344E860
	0x0344E818 LDR X20, [X20]
	0x0344E81C BL 0x3EB1AE0
	0x0344E820 MOVN W8, 0x1
	0x0344E824 STR W8, [X19], #0x8
	0x0344E828 ADRP X0, 0xCE1000
	0x0344E82C LDR X0, [X0 + 0x630]
	0x0344E830 BL 0x1C16D08
	0x0344E834 LDR W8, [X0 + 0xE0]
	0x0344E838 CBNZ W8, 0x344E840
	0x0344E83C BL 0x1C16DFC
	0x0344E840 ADRP X0, 0xCE1000
	0x0344E844 LDR X0, [X0 + 0xAA0]
	0x0344E848 BL 0x1C16D08
	0x0344E84C MOV X2, X0
	0x0344E850 MOV X0, X19
	0x0344E854 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF90000
	007 Move X21, 0xCE2000
	008 Move W8, [X22+1882]
	009 Move X21, [X21+1584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCE2000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0xCE2000
	020 Move X0, [X0+1584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1882], W8
	024 Move X0, [X21]
	025 Move X21, 0xCE2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2728]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

