Type: Nakama.Client/<UnlinkSteamAsync>d__116

Method: System.Void MoveNext()

Disassembly:
	0x0346C3DC ADRP X8, 0xCC4000
	0x0346C3E0 LDR X8, [X8 + 0x5D8]
	0x0346C3E4 LDR X0, [X8]
	0x0346C3E8 BL 0x1C16F10
	0x0346C3EC MOV X21, X0
	0x0346C3F0 MOV X1, X31
	0x0346C3F4 BL 0x3446B5C
	0x0346C3F8 STR X21, [X19 + 0x70]
	0x0346C3FC CBZ X21, 0x346C788
	0x0346C400 LDR X8, [X19 + 0x20]
	0x0346C404 STR X8, [X21 + 0x10]
	0x0346C408 LDR X8, [X19 + 0x28]
	0x0346C40C STR X8, [X21 + 0x18]
	0x0346C410 LDR V0, [X19 + 0x3]
	0x0346C414 STR V0, [X21 + 0x2]
	0x0346C418 LDRB W8, [X19 + 0x40]
	0x0346C41C STRB W8, [X21 + 0x30]
	0x0346C420 LDUR V0, [X19 + 0x48]
	0x0346C424 STUR V0, [X21 + 0x38]
	0x0346C428 LDR X8, [X19 + 0x58]
	0x0346C42C STR X8, [X21 + 0x48]
	0x0346C430 LDR X8, [X19 + 0x60]
	0x0346C434 STR X8, [X21 + 0x50]
	0x0346C438 CBZ X20, 0x346C78C
	0x0346C43C LDRB W8, [X20 + 0x10]
	0x0346C440 CBZ W8, 0x346C628
	0x0346C444 LDR X8, [X19 + 0x70]
	0x0346C448 CBZ X8, 0x346C790
	0x0346C44C LDR X21, [X8 + 0x18]
	0x0346C450 CBZ X21, 0x346C794
	0x0346C454 ADRP X23, 0xC88000
	0x0346C458 LDR X8, [X21]
	0x0346C45C LDR X23, [X23 + 0x818]
	0x0346C460 LDRH W9, [X8 + 0x12E]
	0x0346C464 LDR X1, [X23]
	0x0346C468 CBZ X9, 0x346C48C
	0x0346C46C LDR X10, [X8 + 0xB0]
	0x0346C470 ADD X10, X10, 0x8
	0x0346C474 LDUR X11, [X10 - 0x8]
	0x0346C478 CMP X11, X1
	0x0346C47C B.EQ 0x346C49C
	0x0346C480 SUBS X9, X9, 0x1
	0x0346C484 ADD X10, X10, 0x10
	0x0346C488 B.NE 0x346C474
	0x0346C48C MOVZ W2, 0x7
	0x0346C490 MOV X0, X21
	0x0346C494 BL 0x1C5C788
	0x0346C498 B 0x346C4AC
	0x0346C49C LDR W9, [X10]
	0x0346C4A0 ADD W9, W9, 0x7
	0x0346C4A4 ADD X8, X8, W9, 0x4, SXTW
	0x0346C4A8 ADD X0, X8, 0x138
	0x0346C4AC LDP X8, X1, [X0]
	0x0346C4B0 MOV X0, X21
	0x0346C4B4 BLR X8
	0x0346C4B8 MOV X1, X31
	0x0346C4BC BL 0x32277A8
	0x0346C4C0 TBNZ X0, 0x0, 0x346C624
	0x0346C4C4 LDR X8, [X19 + 0x70]
	0x0346C4C8 CBZ X8, 0x346C798
	0x0346C4CC ADRP X9, 0xC88000
	0x0346C4D0 LDR X9, [X9 + 0x9F0]
	0x0346C4D4 LDR X21, [X8 + 0x18]
	0x0346C4D8 LDR X0, [X9]
	0x0346C4DC LDR W9, [X0 + 0xE0]
	0x0346C4E0 CBNZ W9, 0x346C4E8
	0x0346C4E4 BL 0x1C16DFC
	0x0346C4E8 MOV X0, X31
	0x0346C4EC BL 0x33616A4
	0x0346C4F0 ADRP X22, 0xC89000
	0x0346C4F4 LDR X22, [X22 + 0xA10]
	0x0346C4F8 MOV X8, X0
	0x0346C4FC STR X8, [X31 + 0x28]
	0x0346C500 LDR X0, [X22]
	0x0346C504 LDR W8, [X0 + 0xE0]
	0x0346C508 CBNZ W8, 0x346C514
	0x0346C50C BL 0x1C16DFC
	0x0346C510 LDR X0, [X22]
	0x0346C514 LDR X8, [X0 + 0xB8]
	0x0346C518 LDR X1, [X8]
	0x0346C51C ADD X0, X31, 0x28
	0x0346C520 MOV X2, X31
	0x0346C524 BL 0x335FC68
	0x0346C528 CBZ X21, 0x346C79C
	0x0346C52C LDR X8, [X21]
	0x0346C530 LDR X1, [X23]
	0x0346C534 MOV X22, X0
	0x0346C538 LDRH W9, [X8 + 0x12E]
	0x0346C53C CBZ X9, 0x346C560
	0x0346C540 LDR X10, [X8 + 0xB0]
	0x0346C544 ADD X10, X10, 0x8
	0x0346C548 LDUR X11, [X10 - 0x8]
	0x0346C54C CMP X11, X1
	0x0346C550 B.EQ 0x346C570
	0x0346C554 SUBS X9, X9, 0x1
	0x0346C558 ADD X10, X10, 0x10
	0x0346C55C B.NE 0x346C548
	0x0346C560 MOVZ W2, 0xB
	0x0346C564 MOV X0, X21
	0x0346C568 BL 0x1C5C788
	0x0346C56C B 0x346C580
	0x0346C570 LDR W9, [X10]
	0x0346C574 ADD W9, W9, 0xB
	0x0346C578 ADD X8, X8, W9, 0x4, SXTW
	0x0346C57C ADD X0, X8, 0x138
	0x0346C580 LDP X8, X2, [X0]
	0x0346C584 MOV X0, X21
	0x0346C588 MOV X1, X22
	0x0346C58C BLR X8
	0x0346C590 TBZ X0, 0x0, 0x346C624
	0x0346C594 LDR X8, [X19 + 0x70]
	0x0346C598 CBZ X8, 0x346C7A0
	0x0346C59C LDR X1, [X8 + 0x18]
	0x0346C5A0 LDR X3, [X19 + 0x68]
	0x0346C5A4 LDR X4, [X8 + 0x50]
	0x0346C5A8 MOV X0, X20
	0x0346C5AC MOV X2, X31
	0x0346C5B0 MOV X5, X31
	0x0346C5B4 BL 0x34440A8
	0x0346C5B8 CBZ X0, 0x346C7A4
	0x0346C5BC ADRP X8, 0xC88000
	0x0346C5C0 LDR X8, [X8 + 0x840]
	0x0346C5C4 LDR X1, [X8]
	0x0346C5C8 BL 0x269F5D0
	0x0346C5CC ADRP X8, 0xC88000
	0x0346C5D0 LDR X8, [X8 + 0x838]
	0x0346C5D4 STR X0, [X31 + 0x20]
	0x0346C5D8 LDR X1, [X8]
	0x0346C5DC ADD X0, X31, 0x20
	0x0346C5E0 BL 0x2677430
	0x0346C5E4 TBNZ X0, 0x0, 0x346C3C4
	0x0346C5E8 STR W31, [X19]
	0x0346C5EC LDR X8, [X31 + 0x20]
	0x0346C5F0 STR X8, [X19 + 0x78]
	0x0346C5F4 LDR X0, [X25]
	0x0346C5F8 LDR W8, [X0 + 0xE0]
	0x0346C5FC CBNZ W8, 0x346C604
	0x0346C600 BL 0x1C16DFC
	0x0346C604 ADRP X8, 0xCC4000
	0x0346C608 LDR X8, [X8 + 0x5C0]
	0x0346C60C ADD X0, X19, 0x8
	0x0346C610 LDR X3, [X8]
	0x0346C614 ADD X1, X31, 0x20
	0x0346C618 MOV X2, X19
	0x0346C61C BL 0x21890F8
	0x0346C620 B 0x346C760
	0x0346C624 CBZ X20, 0x346C784
	0x0346C628 ADRP X8, 0xC8F000
	0x0346C62C LDR X8, [X8 + 0x818]
	0x0346C630 LDR X21, [X20 + 0x58]
	0x0346C634 LDR X23, [X19 + 0x70]
	0x0346C638 LDR X0, [X8]
	0x0346C63C BL 0x1C16F10
	0x0346C640 ADRP X8, 0xCC4000
	0x0346C644 LDR X8, [X8 + 0x5D0]
	0x0346C648 MOV X22, X0
	0x0346C64C LDR X2, [X8]
	0x0346C650 MOV X1, X23
	0x0346C654 MOV X3, X31
	0x0346C658 BL 0x2D27AA8
	0x0346C65C LDR X8, [X19 + 0x70]
	0x0346C660 CBZ X8, 0x346C778
	0x0346C664 ADRP X9, 0xCC3000
	0x0346C668 LDR X23, [X19 + 0x68]
	0x0346C66C LDR X9, [X9 + 0x7C8]
	0x0346C670 CBNZ X23, 0x346C678
	0x0346C674 LDR X23, [X20 + 0x18]
	0x0346C678 LDR X20, [X8 + 0x18]
	0x0346C67C LDR X1, [X8 + 0x50]
	0x0346C680 LDR X2, [X9]
	0x0346C684 STP X31, X31, [X31 + 0x8]
	0x0346C688 ADD X0, X31, 0x8
	0x0346C68C BL 0x242E368
	0x0346C690 ADRP X8, 0xCC3000
	0x0346C694 LDR X8, [X8 + 0x7D0]
	0x0346C698 LDR X0, [X8]
	0x0346C69C BL 0x1C16F10
	0x0346C6A0 LDP X3, X4, [X31 + 0x8]
	0x0346C6A4 MOV X24, X0
	0x0346C6A8 MOV X1, X20
	0x0346C6AC MOV X2, X23
	0x0346C6B0 BL 0x3465404
	0x0346C6B4 CBZ X21, 0x346C77C
	0x0346C6B8 MOV X0, X21
	0x0346C6BC MOV X1, X22
	0x0346C6C0 MOV X2, X24
	0x0346C6C4 BL 0x3465B68
	0x0346C6C8 CBZ X0, 0x346C780
	0x0346C6CC MOV X1, X31
	0x0346C6D0 BL 0x33ED394
	0x0346C6D4 STR X0, [X31 + 0x18]
	0x0346C6D8 ADD X0, X31, 0x18
	0x0346C6DC MOV X1, X31
	0x0346C6E0 BL 0x32C3A80
	0x0346C6E4 TBZ X0, 0x0, 0x346C724
	0x0346C6E8 ADD X0, X31, 0x18
	0x0346C6EC MOV X1, X31
	0x0346C6F0 BL 0x32C3B4C
	0x0346C6F4 MOVN W8, 0x1
	0x0346C6F8 STR W8, [X19]
	0x0346C6FC STR X31, [X19 + 0x70]
	0x0346C700 LDR X0, [X25]
	0x0346C704 ADD X19, X19, 0x8
	0x0346C708 LDR W8, [X0 + 0xE0]
	0x0346C70C CBNZ W8, 0x346C714
	0x0346C710 BL 0x1C16DFC
	0x0346C714 MOV X0, X19
	0x0346C718 MOV X1, X31
	0x0346C71C BL 0x32C4864
	0x0346C720 B 0x346C760
	0x0346C724 MOVZ W8, 0x1
	0x0346C728 STR W8, [X19]
	0x0346C72C LDR X8, [X31 + 0x18]
	0x0346C730 STR X8, [X19 + 0x80]
	0x0346C734 LDR X0, [X25]
	0x0346C738 LDR W8, [X0 + 0xE0]
	0x0346C73C CBNZ W8, 0x346C744
	0x0346C740 BL 0x1C16DFC
	0x0346C744 ADRP X8, 0xCC4000
	0x0346C748 LDR X8, [X8 + 0x5C8]
	0x0346C74C ADD X0, X19, 0x8
	0x0346C750 LDR X3, [X8]
	0x0346C754 ADD X1, X31, 0x18
	0x0346C758 MOV X2, X19
	0x0346C75C BL 0x218A7BC
	0x0346C760 LDP X20, X19, [X31 + 0x60]
	0x0346C764 LDP X22, X21, [X31 + 0x50]
	0x0346C768 LDP X24, X23, [X31 + 0x40]
	0x0346C76C LDP X30, X25, [X31 + 0x30]
	0x0346C770 ADD X31, X31, 0x70
	0x0346C774 RET
	0x0346C778 BL 0x1C16F20
	0x0346C77C BL 0x1C16F20
	0x0346C780 BL 0x1C16F20
	0x0346C784 BL 0x1C16F20
	0x0346C788 BL 0x1C16F20
	0x0346C78C BL 0x1C16F20
	0x0346C790 BL 0x1C16F20
	0x0346C794 BL 0x1C16F20
	0x0346C798 BL 0x1C16F20
	0x0346C79C BL 0x1C16F20
	0x0346C7A0 BL 0x1C16F20
	0x0346C7A4 BL 0x1C16F20
	0x0346C7A8 B 0x346C81C
	0x0346C7AC B 0x346C81C
	0x0346C7B0 B 0x346C81C
	0x0346C7B4 B 0x346C81C
	0x0346C7B8 B 0x346C81C
	0x0346C7BC B 0x346C81C
	0x0346C7C0 B 0x346C81C
	0x0346C7C4 B 0x346C81C
	0x0346C7C8 B 0x346C81C
	0x0346C7CC B 0x346C81C
	0x0346C7D0 B 0x346C81C
	0x0346C7D4 B 0x346C81C
	0x0346C7D8 B 0x346C81C
	0x0346C7DC B 0x346C81C
	0x0346C7E0 B 0x346C81C
	0x0346C7E4 B 0x346C81C
	0x0346C7E8 B 0x346C81C
	0x0346C7EC B 0x346C81C
	0x0346C7F0 B 0x346C81C
	0x0346C7F4 B 0x346C81C
	0x0346C7F8 B 0x346C81C
	0x0346C7FC B 0x346C81C
	0x0346C800 B 0x346C81C
	0x0346C804 B 0x346C81C
	0x0346C808 B 0x346C81C
	0x0346C80C B 0x346C81C
	0x0346C810 B 0x346C81C
	0x0346C814 B 0x346C81C
	0x0346C818 B 0x346C81C
	0x0346C81C MOV X20, X0
	0x0346C820 CMP W1, 0x1
	0x0346C824 B.NE 0x346C8B8
	0x0346C828 MOV X0, X20
	0x0346C82C BL 0x3EB1AD0
	0x0346C830 MOV X20, X0
	0x0346C834 ADRP X0, 0xC87000
	0x0346C838 LDR X0, [X0 + 0x7D0]
	0x0346C83C BL 0x1C16D08
	0x0346C840 LDR X8, [X20]
	0x0346C844 LDR X1, [X8]
	0x0346C848 BL 0x1C17270
	0x0346C84C TBZ X0, 0x0, 0x346C890
	0x0346C850 LDR X20, [X20]
	0x0346C854 BL 0x3EB1AE0
	0x0346C858 MOVN W8, 0x1
	0x0346C85C STR X31, [X19 + 0x70]
	0x0346C860 STR W8, [X19], #0x8
	0x0346C864 ADRP X0, 0xC8A000
	0x0346C868 LDR X0, [X0 + 0x280]
	0x0346C86C BL 0x1C16D08
	0x0346C870 LDR W8, [X0 + 0xE0]
	0x0346C874 CBNZ W8, 0x346C87C
	0x0346C878 BL 0x1C16DFC
	0x0346C87C MOV X0, X19
	0x0346C880 MOV X1, X20
	0x0346C884 MOV X2, X31
	0x0346C888 BL 0x32C4908
	0x0346C88C B 0x346C760
	0x0346C890 MOVZ W0, 0x8
	0x0346C894 BL 0x3EB1AF0
	0x0346C898 LDR X8, [X20]
	0x0346C89C STR X8, [X0]
	0x0346C8A0 ADRP X1, 0xA48000
	0x0346C8A4 ADD X1, X1, 0xE58
	0x0346C8A8 MOV X2, X31
	0x0346C8AC BL 0x3EB1B00
	0x0346C8B0 MOV X20, X0
	0x0346C8B4 BL 0x3EB1AE0
	0x0346C8B8 MOV X0, X20
	0x0346C8BC BL 0x1D2C690
	0x0346C8C0 BL 0x1990590
	0x0346C8C4 STR X30, [X31 - 0x30]!
	0x0346C8C8 STP X22, X21, [X31 + 0x10]
	0x0346C8CC STP X20, X19, [X31 + 0x20]
	0x0346C8D0 ADRP X21, 0xF71000
	0x0346C8D4 ADRP X22, 0xC8A000
	0x0346C8D8 LDRB W8, [X21 + 0x7DC]
	0x0346C8DC LDR X22, [X22 + 0x280]
	0x0346C8E0 MOV X19, X1
	0x0346C8E4 MOV X20, X0
	0x0346C8E8 TBNZ X8, 0x0, 0x346C900
	0x0346C8EC ADRP X0, 0xC8A000
	0x0346C8F0 LDR X0, [X0 + 0x280]
	0x0346C8F4 BL 0x1C16CF4
	0x0346C8F8 MOVZ W8, 0x1
	0x0346C8FC STRB W8, [X21 + 0x7DC]
	0x0346C900 LDR X0, [X22]
	0x0346C904 LDR W8, [X0 + 0xE0]
	0x0346C908 CBNZ W8, 0x346C910
	0x0346C90C BL 0x1C16DFC
	0x0346C910 ADD X0, X20, 0x8
	0x0346C914 MOV X1, X19
	0x0346C918 LDP X20, X19, [X31 + 0x20]
	0x0346C91C LDP X22, X21, [X31 + 0x10]
	0x0346C920 MOV X2, X31
	0x0346C924 LDR X30, [X31], #0x30
	0x0346C928 B 0x32C477C
	0x0346C92C SUB X31, X31, 0x70
	0x0346C930 STP X30, X25, [X31 + 0x30]
	0x0346C934 STP X24, X23, [X31 + 0x40]
	0x0346C938 STP X22, X21, [X31 + 0x50]
	0x0346C93C STP X20, X19, [X31 + 0x60]
	0x0346C940 ADRP X20, 0xF71000
	0x0346C944 LDRB W8, [X20 + 0x7DD]
	0x0346C948 MOV X19, X0
	0x0346C94C TBNZ X8, 0x0, 0x346CA3C
	0x0346C950 ADRP X0, 0xCC4000
	0x0346C954 LDR X0, [X0 + 0x5E0]
	0x0346C958 BL 0x1C16CF4
	0x0346C95C ADRP X0, 0xCC4000
	0x0346C960 LDR X0, [X0 + 0x5E8]
	0x0346C964 BL 0x1C16CF4
	0x0346C968 ADRP X0, 0xCC3000
	0x0346C96C LDR X0, [X0 + 0x458]
	0x0346C970 BL 0x1C16CF4
	0x0346C974 ADRP X0, 0xCC2000
	0x0346C978 LDR X0, [X0 + 0x530]
	0x0346C97C BL 0x1C16CF4
	0x0346C980 ADRP X0, 0xC89000
	0x0346C984 LDR X0, [X0 + 0xA10]
	0x0346C988 BL 0x1C16CF4
	0x0346C98C ADRP X0, 0xC88000
	0x0346C990 LDR X0, [X0 + 0x9F0]
	0x0346C994 BL 0x1C16CF4
	0x0346C998 ADRP X0, 0xCC4000
	0x0346C99C LDR X0, [X0 + 0x5F0]
	0x0346C9A0 BL 0x1C16CF4
	0x0346C9A4 ADRP X0, 0xC88000
	0x0346C9A8 LDR X0, [X0 + 0x818]
	0x0346C9AC BL 0x1C16CF4
	0x0346C9B0 ADRP X0, 0xCC3000
	0x0346C9B4 LDR X0, [X0 + 0x7C8]
	0x0346C9B8 BL 0x1C16CF4
	0x0346C9BC ADRP X0, 0xCC3000
	0x0346C9C0 LDR X0, [X0 + 0x7D0]
	0x0346C9C4 BL 0x1C16CF4
	0x0346C9C8 ADRP X0, 0xCC4000
	0x0346C9CC LDR X0, [X0 + 0x5F8]
	0x0346C9D0 BL 0x1C16CF4
	0x0346C9D4 ADRP X0, 0xCC4000
	0x0346C9D8 LDR X0, [X0 + 0x600]
	0x0346C9DC BL 0x1C16CF4
	0x0346C9E0 ADRP X0, 0xC88000
	0x0346C9E4 LDR X0, [X0 + 0x830]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF72000
	011 Move W8, [X20+2007]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCC5000
	018 Move X0, [X0+1408]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC5000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8B000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8A000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC89000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xC90000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC89000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCC4000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC4000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC89000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC89000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC89000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC5000
	054 Move X0, [X0+1424]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC5000
	057 Move X0, [X0+1432]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+2007], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC8B000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC89000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCC5000
	091 Move X8, [X8+1432]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass116_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {354}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {355}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {356}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {357}
	119 Move X23, 0xC89000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {358}
	152 Move X9, 0xC89000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC8A000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {359}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {360}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {361}
	219 Move X8, 0xC89000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC89000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCC5000
	242 Move X8, [X8+1408]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {353}
	250 Move X8, 0xC90000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCC5000
	257 Move X8, [X8+1424]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {350}
	266 Move X9, 0xCC4000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCC4000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Call RetryHistory..ctor, X0, X1, X2, X3
	289 Compare X21, 0
	290 JumpIfEqual {351}
	291 Move X0, X21
	292 Move X1, X22
	293 Move X2, X24
	294 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	295 Compare X0, 0
	296 JumpIfEqual {352}
	297 Move X1, X31
	298 Call Task.GetAwaiter, X0
	299 Move [X31+24], X0
	300 Add X0, X31, 24
	301 Move X1, X31
	302 Call TaskAwaiter.get_IsCompleted, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {324}
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.GetResult, X0
	310 Move TEMP, 1
	311 Not TEMP
	312 Move W8, TEMP
	313 Move [X19], W8
	314 Move [X19+72], X31
	315 Move X0, [X25]
	316 Add X19, X19, 8
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call AsyncTaskMethodBuilder.SetResult, X0
	324 Move W8, 1
	325 Move [X19], W8
	326 Move X8, [X31+24]
	327 Move [X19+88], X8
	328 Move X0, [X25]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X8, 0xCC5000
	334 Move X8, [X8+1416]
	335 Add X0, X19, 8
	336 Move X3, [X8]
	337 Add X1, X31, 24
	338 Move X2, X19
	339 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	340 Move X20, [X31+96]
	341 Move X19, [X31+104]
	342 Move X22, [X31+80]
	343 Move X21, [X31+88]
	344 Move X24, [X31+64]
	345 Move X23, [X31+72]
	346 Move X30, [X31+48]
	347 Move X25, [X31+56]
	348 Add X31, X31, 112
	349 Return 
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X20, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X20
	365 Call 0x3EB2AD0
	366 Move X20, X0
	367 Move X0, 0xC88000
	368 Move X0, [X0+2000]
	369 Call 0x1C17D08
	370 Move X8, [X20]
	371 Move X1, [X8]
	372 Call 0x1C18270
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {395}
	377 Move X20, [X20]
	378 Call 0x3EB2AE0
	379 Move TEMP, 1
	380 Not TEMP
	381 Move W8, TEMP
	382 Move [X19+72], X31
	383 Move [X19+8], W8
	384 Move X0, 0xC8B000
	385 Move X0, [X0+640]
	386 Call 0x1C17D08
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X19
	392 Move X1, X20
	393 Move X2, X31
	394 Call AsyncTaskMethodBuilder.SetException, X0, X1
	395 Move W0, 8
	396 Call 0x3EB2AF0
	397 Move X8, [X20]
	398 Move [X0], X8
	399 Move X1, 0xA49000
	400 Add X1, X1, 3672
	401 Move X2, X31
	402 Call 0x3EB2B00
	403 Move X20, X0
	404 Call 0x3EB2AE0
	405 Move X0, X20
	406 Call 0x1D2D690
	407 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346C9E8 BL 0x1C16CF4
	0x0346C9EC ADRP X0, 0xC88000
	0x0346C9F0 LDR X0, [X0 + 0x838]
	0x0346C9F4 BL 0x1C16CF4
	0x0346C9F8 ADRP X0, 0xCC4000
	0x0346C9FC LDR X0, [X0 + 0x608]
	0x0346CA00 BL 0x1C16CF4
	0x0346CA04 ADRP X0, 0xC88000
	0x0346CA08 LDR X0, [X0 + 0x840]
	0x0346CA0C BL 0x1C16CF4
	0x0346CA10 ADRP X0, 0xCC4000
	0x0346CA14 LDR X0, [X0 + 0x610]
	0x0346CA18 BL 0x1C16CF4
	0x0346CA1C ADRP X0, 0xCC4000
	0x0346CA20 LDR X0, [X0 + 0x618]
	0x0346CA24 BL 0x1C16CF4
	0x0346CA28 ADRP X0, 0xCC4000
	0x0346CA2C LDR X0, [X0 + 0x620]
	0x0346CA30 BL 0x1C16CF4
	0x0346CA34 MOVZ W8, 0x1
	0x0346CA38 STRB W8, [X20 + 0x7DD]
	0x0346CA3C STP X31, X31, [X31 + 0x20]
	0x0346CA40 STR X31, [X31 + 0x18]
	0x0346CA44 ADRP X25, 0xCC2000
	0x0346CA48 LDR W8, [X19]
	0x0346CA4C LDR X20, [X19 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF72000
	007 Move X22, 0xC8B000
	008 Move W8, [X21+2008]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC8B000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2008], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

