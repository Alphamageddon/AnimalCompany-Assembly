Type: Nakama.ApiAccountGoogle

Method: System.String get_Token()

Disassembly:
	0x03404B44 STP X20, X19, [X31 + 0x10]
	0x03404B48 ADRP X20, 0xFD9000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Token(System.String value)

Disassembly:
	0x03404B4C LDRB W8, [X20 + 0x522]
	0x03404B50 MOV X19, X0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x03404B54 TBNZ X8, 0x0, 0x3404B78
	0x03404B58 ADRP X0, 0xD29000
	0x03404B5C LDR X0, [X0 + 0xE38]
	0x03404B60 BL 0x1C16CF4
	0x03404B64 ADRP X0, 0xD29000
	0x03404B68 LDR X0, [X0 + 0xE40]
	0x03404B6C BL 0x1C16CF4
	0x03404B70 MOVZ W8, 0x1
	0x03404B74 STRB W8, [X20 + 0x522]
	0x03404B78 LDR X19, [X19 + 0x18]
	0x03404B7C CBNZ X19, 0x3404BA8
	0x03404B80 ADRP X8, 0xD29000
	0x03404B84 LDR X8, [X8 + 0xE40]
	0x03404B88 LDR X0, [X8]
	0x03404B8C BL 0x1C16F10
	0x03404B90 ADRP X8, 0xD29000
	0x03404B94 LDR X8, [X8 + 0xE38]
	0x03404B98 MOV W1, W31
	0x03404B9C MOV X19, X0
	0x03404BA0 LDR X2, [X8]
	0x03404BA4 BL 0x301B830
	0x03404BA8 MOV X0, X19
	0x03404BAC LDP X20, X19, [X31 + 0x10]
	0x03404BB0 LDR X30, [X31], #0x20
	0x03404BB4 RET
	0x03404BB8 LDR X0, [X0 + 0x18]
	0x03404BBC RET
	0x03404BC0 STR X1, [X0 + 0x18]
	0x03404BC4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFDA000
	005 Move W8, [X20+1309]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCF1000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCF1000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1309], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCF1000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCF1000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x03404BC8 LDR X0, [X0 + 0x20]
	0x03404BCC RET

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03404BD0 STR X1, [X0 + 0x20]
	0x03404BD4 RET

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03404BD8 LDR X0, [X0 + 0x28]
	0x03404BDC RET
	0x03404BE0 STR X1, [X0 + 0x28]
	0x03404BE4 RET
	0x03404BE8 STR X30, [X31 - 0x60]!
	0x03404BEC STP X28, X27, [X31 + 0x10]
	0x03404BF0 STP X26, X25, [X31 + 0x20]
	0x03404BF4 STP X24, X23, [X31 + 0x30]
	0x03404BF8 STP X22, X21, [X31 + 0x40]
	0x03404BFC STP X20, X19, [X31 + 0x50]
	0x03404C00 ADRP X28, 0xFD9000
	0x03404C04 ADRP X20, 0xCEF000
	0x03404C08 ADRP X27, 0xD29000
	0x03404C0C ADRP X21, 0xCEF000
	0x03404C10 ADRP X26, 0xD29000
	0x03404C14 ADRP X24, 0xD29000
	0x03404C18 ADRP X25, 0xD29000
	0x03404C1C ADRP X23, 0xD29000
	0x03404C20 ADRP X22, 0xD29000
	0x03404C24 LDR X20, [X20 + 0x988]
	0x03404C28 LDR X27, [X27 + 0xE48]
	0x03404C2C LDR X21, [X21 + 0x838]
	0x03404C30 LDRB W8, [X28 + 0x523]
	0x03404C34 LDR X26, [X26 + 0xE50]
	0x03404C38 LDR X24, [X24 + 0xE58]
	0x03404C3C LDR X25, [X25 + 0xD50]
	0x03404C40 LDR X23, [X23 + 0xE60]
	0x03404C44 LDR X22, [X22 + 0xE68]
	0x03404C48 MOV X19, X0
	0x03404C4C TBNZ X8, 0x0, 0x3404CB8
	0x03404C50 ADRP X0, 0xD29000
	0x03404C54 LDR X0, [X0 + 0xE50]
	0x03404C58 BL 0x1C16CF4
	0x03404C5C ADRP X0, 0xD29000
	0x03404C60 LDR X0, [X0 + 0xE58]
	0x03404C64 BL 0x1C16CF4
	0x03404C68 ADRP X0, 0xD29000
	0x03404C6C LDR X0, [X0 + 0xE48]
	0x03404C70 BL 0x1C16CF4
	0x03404C74 ADRP X0, 0xCEF000
	0x03404C78 LDR X0, [X0 + 0x838]
	0x03404C7C BL 0x1C16CF4
	0x03404C80 ADRP X0, 0xD29000
	0x03404C84 LDR X0, [X0 + 0xE68]
	0x03404C88 BL 0x1C16CF4
	0x03404C8C ADRP X0, 0xD29000
	0x03404C90 LDR X0, [X0 + 0xE60]
	0x03404C94 BL 0x1C16CF4
	0x03404C98 ADRP X0, 0xD29000
	0x03404C9C LDR X0, [X0 + 0xD50]
	0x03404CA0 BL 0x1C16CF4
	0x03404CA4 ADRP X0, 0xCEF000
	0x03404CA8 LDR X0, [X0 + 0x988]
	0x03404CAC BL 0x1C16CF4
	0x03404CB0 MOVZ W8, 0x1
	0x03404CB4 STRB W8, [X28 + 0x523]
	0x03404CB8 LDR X2, [X19 + 0x10]
	0x03404CBC LDR X0, [X20]
	0x03404CC0 LDR X1, [X27]
	0x03404CC4 LDR X3, [X21]
	0x03404CC8 MOV X4, X31
	0x03404CCC BL 0x32277C4
	0x03404CD0 MOV X20, X0
	0x03404CD4 MOV X0, X19
	0x03404CD8 BL 0x3404B40
	0x03404CDC LDR X8, [X21]
	0x03404CE0 LDR X2, [X26]
	0x03404CE4 MOV X1, X0
	0x03404CE8 MOV X0, X8
	0x03404CEC BL 0x226B7E8
	0x03404CF0 LDR X1, [X24]
	0x03404CF4 LDR X3, [X25]
	0x03404CF8 MOV X2, X0
	0x03404CFC MOV X0, X20
	0x03404D00 MOV X4, X31
	0x03404D04 BL 0x32277C4
	0x03404D08 LDR X2, [X19 + 0x20]
	0x03404D0C LDR X1, [X23]
	0x03404D10 LDR X3, [X21]
	0x03404D14 MOV X4, X31
	0x03404D18 BL 0x32277C4
	0x03404D1C LDR X2, [X19 + 0x28]
	0x03404D20 LDR X1, [X22]
	0x03404D24 LDR X3, [X21]
	0x03404D28 LDP X20, X19, [X31 + 0x50]
	0x03404D2C LDP X22, X21, [X31 + 0x40]
	0x03404D30 LDP X24, X23, [X31 + 0x30]
	0x03404D34 LDP X26, X25, [X31 + 0x20]
	0x03404D38 LDP X28, X27, [X31 + 0x10]
	0x03404D3C MOV X4, X31
	0x03404D40 LDR X30, [X31], #0x60
	0x03404D44 B 0x32277C4
	0x03404D48 MOV X1, X31
	0x03404D4C B 0x33BDD8C
	0x03404D50 LDR X0, [X0 + 0x10]
	0x03404D54 RET
	0x03404D58 STR X1, [X0 + 0x10]
	0x03404D5C RET
	0x03404D60 LDR X0, [X0 + 0x18]
	0x03404D64 RET
	0x03404D68 STR X1, [X0 + 0x18]
	0x03404D6C RET
	0x03404D70 LDR X0, [X0 + 0x20]
	0x03404D74 RET
	0x03404D78 STR X1, [X0 + 0x20]
	0x03404D7C RET
	0x03404D80 LDR W0, [X0 + 0x28]
	0x03404D84 RET
	0x03404D88 STR W1, [X0 + 0x28]
	0x03404D8C RET
	0x03404D90 LDR X0, [X0 + 0x30]
	0x03404D94 RET
	0x03404D98 STR X1, [X0 + 0x30]
	0x03404D9C RET
	0x03404DA0 LDRB W0, [X0 + 0x38]
	0x03404DA4 RET
	0x03404DA8 AND W8, W1, 0x1
	0x03404DAC STRB W8, [X0 + 0x38]
	0x03404DB0 RET
	0x03404DB4 STR X30, [X31 - 0x50]!
	0x03404DB8 STP X26, X25, [X31 + 0x10]
	0x03404DBC STP X24, X23, [X31 + 0x20]
	0x03404DC0 STP X22, X21, [X31 + 0x30]
	0x03404DC4 STP X20, X19, [X31 + 0x40]
	0x03404DC8 ADRP X25, 0xFD9000
	0x03404DCC ADRP X26, 0xCEF000
	0x03404DD0 ADRP X24, 0xD29000
	0x03404DD4 ADRP X22, 0xCEF000
	0x03404DD8 ADRP X21, 0xD29000
	0x03404DDC ADRP X20, 0xD29000
	0x03404DE0 ADRP X23, 0xCEF000
	0x03404DE4 LDR X26, [X26 + 0x988]
	0x03404DE8 LDRB W8, [X25 + 0x524]
	0x03404DEC LDR X24, [X24 + 0xCC8]
	0x03404DF0 LDR X22, [X22 + 0x838]
	0x03404DF4 LDR X21, [X21 + 0xCD0]
	0x03404DF8 LDR X20, [X20 + 0xCD8]
	0x03404DFC LDR X23, [X23 + 0x9D0]
	0x03404E00 MOV X19, X0
	0x03404E04 TBNZ X8, 0x0, 0x3404E94
	0x03404E08 ADRP X0, 0xCEF000
	0x03404E0C LDR X0, [X0 + 0xB58]
	0x03404E10 BL 0x1C16CF4
	0x03404E14 ADRP X0, 0xCEF000
	0x03404E18 LDR X0, [X0 + 0x758]
	0x03404E1C BL 0x1C16CF4
	0x03404E20 ADRP X0, 0xCEF000
	0x03404E24 LDR X0, [X0 + 0x9D0]
	0x03404E28 BL 0x1C16CF4
	0x03404E2C ADRP X0, 0xD29000
	0x03404E30 LDR X0, [X0 + 0xCD8]
	0x03404E34 BL 0x1C16CF4
	0x03404E38 ADRP X0, 0xCF0000
	0x03404E3C LDR X0, [X0 + 0xEE0]
	0x03404E40 BL 0x1C16CF4
	0x03404E44 ADRP X0, 0xCEF000
	0x03404E48 LDR X0, [X0 + 0x838]
	0x03404E4C BL 0x1C16CF4
	0x03404E50 ADRP X0, 0xD29000
	0x03404E54 LDR X0, [X0 + 0xE70]
	0x03404E58 BL 0x1C16CF4
	0x03404E5C ADRP X0, 0xD29000
	0x03404E60 LDR X0, [X0 + 0xCE0]
	0x03404E64 BL 0x1C16CF4
	0x03404E68 ADRP X0, 0xD29000
	0x03404E6C LDR X0, [X0 + 0xCC8]
	0x03404E70 BL 0x1C16CF4
	0x03404E74 ADRP X0, 0xCEF000
	0x03404E78 LDR X0, [X0 + 0x988]
	0x03404E7C BL 0x1C16CF4
	0x03404E80 ADRP X0, 0xD29000
	0x03404E84 LDR X0, [X0 + 0xCD0]
	0x03404E88 BL 0x1C16CF4
	0x03404E8C MOVZ W8, 0x1
	0x03404E90 STRB W8, [X25 + 0x524]
	0x03404E94 LDR X0, [X26]
	0x03404E98 LDR X2, [X19 + 0x10]
	0x03404E9C LDR X1, [X24]
	0x03404EA0 LDR X3, [X22]
	0x03404EA4 MOV X4, X31
	0x03404EA8 BL 0x32277C4
	0x03404EAC LDR X2, [X19 + 0x18]
	0x03404EB0 LDR X1, [X21]
	0x03404EB4 LDR X3, [X22]
	0x03404EB8 MOV X4, X31
	0x03404EBC BL 0x32277C4
	0x03404EC0 LDR X2, [X19 + 0x20]
	0x03404EC4 LDR X1, [X20]
	0x03404EC8 LDR X3, [X22]
	0x03404ECC MOV X4, X31
	0x03404ED0 BL 0x32277C4
	0x03404ED4 LDR X8, [X23]
	0x03404ED8 MOV X21, X0
	0x03404EDC MOVZ W1, 0x4
	0x03404EE0 MOV X0, X8
	0x03404EE4 BL 0x1C16D6C
	0x03404EE8 CBZ X0, 0x3405100
	0x03404EEC MOV X20, X0
	0x03404EF0 CBZ X21, 0x3404F08
	0x03404EF4 LDR X8, [X20]
	0x03404EF8 MOV X0, X21
	0x03404EFC LDR X1, [X8 + 0x40]
	0x03404F00 BL 0x1C16E00
	0x03404F04 CBZ X0, 0x34050F4
	0x03404F08 LDR W8, [X20 + 0x18]
	0x03404F0C CBZ W8, 0x34050F0
	0x03404F10 ADRP X24, 0xD29000
	0x03404F14 LDR X24, [X24 + 0xE70]
	0x03404F18 STR X21, [X20 + 0x20]
	0x03404F1C LDR X0, [X24]
	0x03404F20 CBZ X0, 0x3404F38
	0x03404F24 LDR X8, [X20]
	0x03404F28 LDR X1, [X8 + 0x40]
	0x03404F2C BL 0x1C16E00
	0x03404F30 CBZ X0, 0x34050F4
	0x03404F34 LDR W8, [X20 + 0x18]
	0x03404F38 CMP W8, 0x1
	0x03404F3C B.LS 0x34050F0
	0x03404F40 LDR X8, [X24]
	0x03404F44 ADRP X9, 0xCEF000
	0x03404F48 LDR X9, [X9 + 0x758]
	0x03404F4C ADD X1, X31, 0xC
	0x03404F50 STR X8, [X20 + 0x28]
	0x03404F54 LDR W8, [X19 + 0x28]
	0x03404F58 LDR X0, [X9]
	0x03404F5C STR W8, [X31 + 0xC]
	0x03404F60 BL 0x1C16E04
	0x03404F64 MOV X21, X0
	0x03404F68 CBZ X0, 0x3404F80
	0x03404F6C LDR X8, [X20]
	0x03404F70 MOV X0, X21
	0x03404F74 LDR X1, [X8 + 0x40]
	0x03404F78 BL 0x1C16E00
	0x03404F7C CBZ X0, 0x34050F4
	0x03404F80 LDR W8, [X20 + 0x18]
	0x03404F84 CMP W8, 0x2
	0x03404F88 B.LS 0x34050F0
	0x03404F8C STR X21, [X20 + 0x30]
	0x03404F90 LDR X0, [X22]
	0x03404F94 CBZ X0, 0x3404FAC
	0x03404F98 LDR X8, [X20]
	0x03404F9C LDR X1, [X8 + 0x40]
	0x03404FA0 BL 0x1C16E00
	0x03404FA4 CBZ X0, 0x34050F4
	0x03404FA8 LDR W8, [X20 + 0x18]
	0x03404FAC CMP W8, 0x3
	0x03404FB0 B.LS 0x34050F0
	0x03404FB4 LDR X8, [X22]
	0x03404FB8 ADRP X21, 0xCF0000
	0x03404FBC LDR X21, [X21 + 0xEE0]
	0x03404FC0 MOV X0, X20
	0x03404FC4 MOV X1, X31
	0x03404FC8 STR X8, [X20 + 0x38]
	0x03404FCC BL 0x3227578
	0x03404FD0 LDR X2, [X19 + 0x30]
	0x03404FD4 LDR X1, [X21]
	0x03404FD8 LDR X3, [X22]
	0x03404FDC MOV X4, X31
	0x03404FE0 BL 0x32277C4
	0x03404FE4 LDR X8, [X23]
	0x03404FE8 MOV X21, X0
	0x03404FEC MOVZ W1, 0x4
	0x03404FF0 MOV X0, X8
	0x03404FF4 BL 0x1C16D6C
	0x03404FF8 CBZ X0, 0x3405100
	0x03404FFC MOV X20, X0
	0x03405000 CBZ X21, 0x3405018
	0x03405004 LDR X8, [X20]
	0x03405008 MOV X0, X21
	0x0340500C LDR X1, [X8 + 0x40]
	0x03405010 BL 0x1C16E00
	0x03405014 CBZ X0, 0x34050F4
	0x03405018 LDR W8, [X20 + 0x18]
	0x0340501C CBZ W8, 0x34050F0
	0x03405020 ADRP X23, 0xD28000
	0x03405024 LDR X23, [X23 + 0xCE0]
	0x03405028 STR X21, [X20 + 0x20]
	0x0340502C LDR X0, [X23]
	0x03405030 CBZ X0, 0x3405048
	0x03405034 LDR X8, [X20]
	0x03405038 LDR X1, [X8 + 0x40]
	0x0340503C BL 0x1C16E00
	0x03405040 CBZ X0, 0x34050F4
	0x03405044 LDR W8, [X20 + 0x18]
	0x03405048 CMP W8, 0x1
	0x0340504C B.LS 0x34050F0
	0x03405050 LDR X8, [X23]
	0x03405054 ADRP X9, 0xCEE000
	0x03405058 LDR X9, [X9 + 0xB58]
	0x0340505C ADD X1, X31, 0x8
	0x03405060 STR X8, [X20 + 0x28]
	0x03405064 LDRB W8, [X19 + 0x38]
	0x03405068 LDR X0, [X9]
	0x0340506C STRB W8, [X31 + 0x8]
	0x03405070 BL 0x1C16E04
	0x03405074 MOV X19, X0
	0x03405078 CBZ X0, 0x3405090
	0x0340507C LDR X8, [X20]
	0x03405080 MOV X0, X19
	0x03405084 LDR X1, [X8 + 0x40]
	0x03405088 BL 0x1C16E00

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xFDA000
	015 Move X19, 0xCF0000
	016 Move X21, 0xD2A000
	017 Move X22, 0xCF0000
	018 Move W8, [X23+1310]
	019 Move X19, [X19+2440]
	020 Move X21, [X21+3448]
	021 Move X22, [X22+2104]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xCF0000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xCF3000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0xCF3000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0xCF0000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCF3000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xCF3000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xCF0000
	046 Move X0, [X0+2760]
	047 Call 0x1C17CF4
	048 Move X0, 0xD1D000
	049 Move X0, [X0+864]
	050 Call 0x1C17CF4
	051 Move X0, 0xD1D000
	052 Move X0, [X0+4024]
	053 Call 0x1C17CF4
	054 Move X0, 0xCFB000
	055 Move X0, [X0+1752]
	056 Call 0x1C17CF4
	057 Move X0, 0xD2A000
	058 Move X0, [X0+3456]
	059 Call 0x1C17CF4
	060 Move X0, 0xCF0000
	061 Move X0, [X0+2104]
	062 Call 0x1C17CF4
	063 Move X0, 0xD2A000
	064 Move X0, [X0+3448]
	065 Call 0x1C17CF4
	066 Move X0, 0xCF0000
	067 Move X0, [X0+2440]
	068 Call 0x1C17CF4
	069 Move X0, 0xCF0000
	070 Move X0, [X0+2120]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+1310], W8
	074 Move X0, [X19]
	075 Move X2, [X20+16]
	076 Move X1, [X21]
	077 Move X3, [X22]
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X27, [X19]
	081 Move [X31+8], X0
	082 Move X0, X20
	083 Call ApiAccountGoogle.get_Vars, X0
	084 Compare X0, 0
	085 JumpIfEqual {263}
	086 Move X10, 0xCF3000
	087 Move X8, [X0]
	088 Move X10, [X10+400]
	089 Move X20, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X28, 0xCF0000
	107 Move X29, 0xCF3000
	108 Move X26, 0xCF0000
	109 Move X24, 0xD1D000
	110 Move X25, 0xD1D000
	111 Move X19, 0xCFB000
	112 Move X28, [X28+3608]
	113 Move X29, [X29+408]
	114 Move X26, [X26+2760]
	115 Move X24, [X24+864]
	116 Move X25, [X25+4024]
	117 Move X19, [X19+1752]
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, X0
	123 Move X0, X27
	124 Compare X20, 0
	125 JumpIfEqual {256}
	126 Move X8, [X20]
	127 Move X1, [X28]
	128 Move X21, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {201}
	152 Move X8, [X20]
	153 Move X1, [X29]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X23, X0
	174 Move X0, [X26]
	175 Move X22, X1
	176 Move W1, 5
	177 Call 0x1C17D6C
	178 Compare X0, 0
	179 JumpIfEqual {258}
	180 Move W8, [X0+24]
	181 Compare W8, 0
	182 JumpIfEqual {260}
	183 Move X9, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+32], X9
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X0+40], X23
	188 Move X9, [X25]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X0+48], X9
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X0+56], X22
	193 Move X8, [X19]
	194 Move [X0+64], X8
	195 Move X1, X31
	196 Call String.Concat, X0
	197 Move X1, X0
	198 Move X0, X21
	199 Move X2, X31
	200 Call String.Concat, X0, X1
	201 Move X22, X31
	202 Compare X20, 0
	203 JumpIfEqual {227}
	204 Move X8, [X20]
	205 Move X10, 0xCF0000
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X10, [X10+3584]
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X20
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X22, 0
	228 JumpIfNotEqual {264}
	229 Move X8, 0xD2A000
	230 Move X8, [X8+3456]
	231 Move X1, X21
	232 Move X3, X31
	233 Move X0, [X8]
	234 Move X8, 0xCF0000
	235 Move X8, [X8+2120]
	236 Move X2, [X8]
	237 Call String.Concat, X0, X1, X2
	238 Move X1, X0
	239 Move X0, [X31+8]
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Move X2, X31
	253 Add X31, X31, 112
	254 Call String.Concat, X0, X1
	255 Return X0
	256 Call 0x1C17F20
	257 Call 0x1C17F28
	258 Call 0x1C17F20
	259 Call 0x1C17F28
	260 Call 0x1C17F28
	261 Call 0x1C17F28
	262 Call 0x1C17F28
	263 Call 0x1C17F20
	264 Move X0, X22
	265 Call 0x1C17F18
	266 Move X21, X27
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X22, [X0]
	270 Call 0x3EB2AE0
	271 Move X19, X0
	272 Move X22, X31
	273 Move X19, X0
	274 Compare X20, 0
	275 JumpIfEqual {299}
	276 Move X8, [X20]
	277 Move X10, 0xCEF000
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X10, [X10+3584]
	280 Move X1, [X10]
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X20
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X22, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X19
	302 Call 0x1D2D690
	303 Move X0, X22
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0340508C CBZ X0, 0x34050F4
	0x03405090 LDR W8, [X20 + 0x18]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

