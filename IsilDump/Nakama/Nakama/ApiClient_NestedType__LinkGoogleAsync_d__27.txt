Type: Nakama.ApiClient/<LinkGoogleAsync>d__27

Method: System.Void MoveNext()

Disassembly:
	0x0342ACD0 BL 0x36288CC
	0x0342ACD4 MOV X0, X20
	0x0342ACD8 MOV X1, X21
	0x0342ACDC MOV X2, X31
	0x0342ACE0 BL 0x3628980
	0x0342ACE4 MOV X0, X20
	0x0342ACE8 MOV X1, X31
	0x0342ACEC BL 0x3628A38
	0x0342ACF0 ADRP X8, 0xCF2000
	0x0342ACF4 ADRP X9, 0xCCA000
	0x0342ACF8 LDR X8, [X8 + 0x4D0]
	0x0342ACFC LDR X9, [X9 + 0x6D0]
	0x0342AD00 MOV X20, X0
	0x0342AD04 LDR X21, [X8]
	0x0342AD08 LDR X0, [X9]
	0x0342AD0C BL 0x1C16F10
	0x0342AD10 ADRP X8, 0xCCA000
	0x0342AD14 LDR X8, [X8 + 0x6C0]
	0x0342AD18 MOV X22, X0
	0x0342AD1C LDR X1, [X8]
	0x0342AD20 BL 0x2AA4804
	0x0342AD24 ADRP X8, 0xD04000
	0x0342AD28 LDR X8, [X8 + 0x7D8]
	0x0342AD2C LDR X1, [X19 + 0x48]
	0x0342AD30 LDR X0, [X8]
	0x0342AD34 MOV X2, X31
	0x0342AD38 BL 0x321B938
	0x0342AD3C CBZ X22, 0x342AF54
	0x0342AD40 ADRP X8, 0xD04000
	0x0342AD44 LDR X8, [X8 + 0x7D0]
	0x0342AD48 ADRP X9, 0xCCA000
	0x0342AD4C LDR X9, [X9 + 0x810]
	0x0342AD50 MOV X2, X0
	0x0342AD54 LDR X1, [X8]
	0x0342AD58 LDR X3, [X9]
	0x0342AD5C MOV X0, X22
	0x0342AD60 BL 0x2AA5098
	0x0342AD64 LDR X23, [X24 + 0x10]
	0x0342AD68 CBZ X23, 0x342AF58
	0x0342AD6C ADRP X10, 0xD04000
	0x0342AD70 LDR X10, [X10 + 0x7B8]
	0x0342AD74 LDR X8, [X23]
	0x0342AD78 LDR W25, [X24 + 0x18]
	0x0342AD7C LDP X26, X24, [X19 + 0x50]
	0x0342AD80 LDR X1, [X10]
	0x0342AD84 LDRH W9, [X8 + 0x12E]
	0x0342AD88 CBZ X9, 0x342ADAC
	0x0342AD8C LDR X10, [X8 + 0xB0]
	0x0342AD90 ADD X10, X10, 0x8
	0x0342AD94 LDUR X11, [X10 - 0x8]
	0x0342AD98 CMP X11, X1
	0x0342AD9C B.EQ 0x342ADD4
	0x0342ADA0 SUBS X9, X9, 0x1
	0x0342ADA4 ADD X10, X10, 0x10
	0x0342ADA8 B.NE 0x342AD94
	0x0342ADAC MOVZ W2, 0x3
	0x0342ADB0 MOV X0, X23
	0x0342ADB4 BL 0x1C5C788
	0x0342ADB8 B 0x342ADE4
	0x0342ADBC LDR X8, [X19 + 0x60]
	0x0342ADC0 MOVN W9, 0x0
	0x0342ADC4 STR X8, [X31 + 0x18]
	0x0342ADC8 STR X31, [X19 + 0x60]
	0x0342ADCC STR W9, [X19]
	0x0342ADD0 B 0x342AE40
	0x0342ADD4 LDR W9, [X10]
	0x0342ADD8 ADD W9, W9, 0x3
	0x0342ADDC ADD X8, X8, W9, 0x4, SXTW
	0x0342ADE0 ADD X0, X8, 0x138
	0x0342ADE4 LDP X8, X9, [X0]
	0x0342ADE8 MOV X0, X23
	0x0342ADEC MOV X1, X21
	0x0342ADF0 MOV X2, X20
	0x0342ADF4 MOV X3, X22
	0x0342ADF8 MOV X4, X31
	0x0342ADFC MOV W5, W25
	0x0342AE00 MOV X6, X26
	0x0342AE04 MOV X7, X24
	0x0342AE08 STR X9, [X31]
	0x0342AE0C BLR X8
	0x0342AE10 CBZ X0, 0x342AF5C
	0x0342AE14 ADRP X8, 0xCCC000
	0x0342AE18 LDR X8, [X8 + 0x1F8]
	0x0342AE1C LDR X1, [X8]
	0x0342AE20 BL 0x269F5D0
	0x0342AE24 ADRP X8, 0xCCC000
	0x0342AE28 LDR X8, [X8 + 0x1F0]
	0x0342AE2C STR X0, [X31 + 0x18]
	0x0342AE30 LDR X1, [X8]
	0x0342AE34 ADD X0, X31, 0x18
	0x0342AE38 BL 0x2677430
	0x0342AE3C TBZ X0, 0x0, 0x342AE9C
	0x0342AE40 ADRP X8, 0xCCC000
	0x0342AE44 LDR X8, [X8 + 0x1E0]
	0x0342AE48 ADD X0, X31, 0x18
	0x0342AE4C LDR X1, [X8]
	0x0342AE50 BL 0x2677474
	0x0342AE54 ADRP X8, 0xD04000
	0x0342AE58 LDR X8, [X8 + 0xEF8]
	0x0342AE5C LDR X1, [X8]
	0x0342AE60 BL 0x220E6DC
	0x0342AE64 MOVN W8, 0x1
	0x0342AE68 STR W8, [X19], #0x8
	0x0342AE6C MOV X20, X0
	0x0342AE70 LDR X0, [X27]
	0x0342AE74 ADRP X21, 0xD04000
	0x0342AE78 LDR W8, [X0 + 0xE0]
	0x0342AE7C LDR X21, [X21 + 0xEF0]
	0x0342AE80 CBNZ W8, 0x342AE88
	0x0342AE84 BL 0x1C16DFC
	0x0342AE88 LDR X2, [X21]
	0x0342AE8C MOV X0, X19
	0x0342AE90 MOV X1, X20
	0x0342AE94 BL 0x26322B0
	0x0342AE98 B 0x342AED4
	0x0342AE9C STR W31, [X19]
	0x0342AEA0 LDR X8, [X31 + 0x18]
	0x0342AEA4 STR X8, [X19 + 0x60]
	0x0342AEA8 LDR X0, [X27]
	0x0342AEAC LDR W8, [X0 + 0xE0]
	0x0342AEB0 CBNZ W8, 0x342AEB8
	0x0342AEB4 BL 0x1C16DFC
	0x0342AEB8 ADRP X8, 0xD04000
	0x0342AEBC LDR X8, [X8 + 0xEE8]
	0x0342AEC0 ADD X0, X19, 0x8
	0x0342AEC4 LDR X3, [X8]
	0x0342AEC8 ADD X1, X31, 0x18
	0x0342AECC MOV X2, X19
	0x0342AED0 BL 0x1FB335C
	0x0342AED4 LDP X20, X19, [X31 + 0x60]
	0x0342AED8 LDP X22, X21, [X31 + 0x50]
	0x0342AEDC LDP X24, X23, [X31 + 0x40]
	0x0342AEE0 LDP X26, X25, [X31 + 0x30]
	0x0342AEE4 LDP X30, X27, [X31 + 0x20]
	0x0342AEE8 ADD X31, X31, 0x70
	0x0342AEEC RET
	0x0342AEF0 ADRP X0, 0xCD1000
	0x0342AEF4 LDR X0, [X0 + 0x578]
	0x0342AEF8 BL 0x1C16D08
	0x0342AEFC BL 0x1C16F10
	0x0342AF00 MOV X20, X0
	0x0342AF04 ADRP X0, 0xD04000
	0x0342AF08 LDR X0, [X0 + 0xF28]
	0x0342AF0C BL 0x1C16D08
	0x0342AF10 MOV X1, X0
	0x0342AF14 MOV X0, X20
	0x0342AF18 MOV X2, X31
	0x0342AF1C BL 0x3314A68
	0x0342AF20 ADRP X0, 0xD04000
	0x0342AF24 LDR X0, [X0 + 0xF30]
	0x0342AF28 BL 0x1C16D08
	0x0342AF2C MOV X1, X0
	0x0342AF30 MOV X0, X20
	0x0342AF34 BL 0x1C16DEC
	0x0342AF38 BL 0x1C16F20
	0x0342AF3C BL 0x1C16F20
	0x0342AF40 BL 0x1C16F20
	0x0342AF44 BL 0x1C16F20
	0x0342AF48 BL 0x1C16F28
	0x0342AF4C BL 0x1C16F20
	0x0342AF50 BL 0x1C16F20
	0x0342AF54 BL 0x1C16F20
	0x0342AF58 BL 0x1C16F20
	0x0342AF5C BL 0x1C16F20
	0x0342AF60 BL 0x1C16F20
	0x0342AF64 BL 0x1C16F28
	0x0342AF68 BL 0x1C16F28
	0x0342AF6C BL 0x1C16F28
	0x0342AF70 BL 0x1C16F20
	0x0342AF74 BL 0x1C16F28
	0x0342AF78 BL 0x1C16F44
	0x0342AF7C MOV X1, X31
	0x0342AF80 BL 0x1C16DEC
	0x0342AF84 BL 0x1C16F44
	0x0342AF88 MOV X1, X31
	0x0342AF8C BL 0x1C16DEC
	0x0342AF90 BL 0x1C16F44
	0x0342AF94 MOV X1, X31
	0x0342AF98 BL 0x1C16DEC
	0x0342AF9C BL 0x1C16F44
	0x0342AFA0 MOV X1, X31
	0x0342AFA4 BL 0x1C16DEC
	0x0342AFA8 B 0x342B038
	0x0342AFAC B 0x342B038
	0x0342AFB0 B 0x342B038
	0x0342AFB4 B 0x342B038
	0x0342AFB8 B 0x342B038
	0x0342AFBC B 0x342B038
	0x0342AFC0 B 0x342B038
	0x0342AFC4 B 0x342B038
	0x0342AFC8 B 0x342B038
	0x0342AFCC B 0x342B038
	0x0342AFD0 B 0x342B038
	0x0342AFD4 B 0x342B038
	0x0342AFD8 B 0x342B038
	0x0342AFDC B 0x342B038
	0x0342AFE0 B 0x342B038
	0x0342AFE4 B 0x342B038
	0x0342AFE8 B 0x342B038
	0x0342AFEC B 0x342B038
	0x0342AFF0 B 0x342B038
	0x0342AFF4 B 0x342B038
	0x0342AFF8 B 0x342B038
	0x0342AFFC B 0x342B038
	0x0342B000 B 0x342B038
	0x0342B004 B 0x342B038
	0x0342B008 B 0x342B038
	0x0342B00C B 0x342B038
	0x0342B010 B 0x342B038
	0x0342B014 B 0x342B038
	0x0342B018 B 0x342B038
	0x0342B01C B 0x342B038
	0x0342B020 B 0x342B038
	0x0342B024 B 0x342B038
	0x0342B028 B 0x342B038
	0x0342B02C B 0x342B038
	0x0342B030 B 0x342B038
	0x0342B034 B 0x342B038
	0x0342B038 MOV X20, X0
	0x0342B03C CMP W1, 0x1
	0x0342B040 B.NE 0x342B0DC
	0x0342B044 MOV X0, X20
	0x0342B048 BL 0x3EB1AD0
	0x0342B04C MOV X20, X0
	0x0342B050 ADRP X0, 0xCC8000
	0x0342B054 LDR X0, [X0 + 0x7D0]
	0x0342B058 BL 0x1C16D08
	0x0342B05C LDR X8, [X20]
	0x0342B060 LDR X1, [X8]
	0x0342B064 BL 0x1C17270
	0x0342B068 TBZ X0, 0x0, 0x342B0B4
	0x0342B06C LDR X20, [X20]
	0x0342B070 BL 0x3EB1AE0
	0x0342B074 MOVN W8, 0x1
	0x0342B078 STR W8, [X19], #0x8
	0x0342B07C ADRP X0, 0xD03000
	0x0342B080 LDR X0, [X0 + 0x418]
	0x0342B084 BL 0x1C16D08
	0x0342B088 LDR W8, [X0 + 0xE0]
	0x0342B08C CBNZ W8, 0x342B094
	0x0342B090 BL 0x1C16DFC
	0x0342B094 ADRP X0, 0xD03000
	0x0342B098 LDR X0, [X0 + 0xF38]
	0x0342B09C BL 0x1C16D08
	0x0342B0A0 MOV X2, X0
	0x0342B0A4 MOV X0, X19
	0x0342B0A8 MOV X1, X20
	0x0342B0AC BL 0x26324C8
	0x0342B0B0 B 0x342AED4
	0x0342B0B4 MOVZ W0, 0x8
	0x0342B0B8 BL 0x3EB1AF0
	0x0342B0BC LDR X8, [X20]
	0x0342B0C0 STR X8, [X0]
	0x0342B0C4 ADRP X1, 0xA89000
	0x0342B0C8 ADD X1, X1, 0xE58
	0x0342B0CC MOV X2, X31
	0x0342B0D0 BL 0x3EB1B00
	0x0342B0D4 MOV X20, X0
	0x0342B0D8 BL 0x3EB1AE0
	0x0342B0DC MOV X0, X20
	0x0342B0E0 BL 0x1D2C690
	0x0342B0E4 BL 0x1990590
	0x0342B0E8 STR X30, [X31 - 0x30]!
	0x0342B0EC STP X22, X21, [X31 + 0x10]
	0x0342B0F0 STP X20, X19, [X31 + 0x20]
	0x0342B0F4 ADRP X22, 0xFB2000
	0x0342B0F8 ADRP X21, 0xD03000
	0x0342B0FC LDRB W8, [X22 + 0x64C]
	0x0342B100 LDR X21, [X21 + 0x418]
	0x0342B104 MOV X19, X1
	0x0342B108 MOV X20, X0
	0x0342B10C TBNZ X8, 0x0, 0x342B130
	0x0342B110 ADRP X0, 0xD03000
	0x0342B114 LDR X0, [X0 + 0xF40]
	0x0342B118 BL 0x1C16CF4
	0x0342B11C ADRP X0, 0xD03000
	0x0342B120 LDR X0, [X0 + 0x418]
	0x0342B124 BL 0x1C16CF4
	0x0342B128 MOVZ W8, 0x1
	0x0342B12C STRB W8, [X22 + 0x64C]
	0x0342B130 LDR X0, [X21]
	0x0342B134 ADRP X21, 0xD03000
	0x0342B138 LDR W8, [X0 + 0xE0]
	0x0342B13C LDR X21, [X21 + 0xF40]
	0x0342B140 CBNZ W8, 0x342B148
	0x0342B144 BL 0x1C16DFC
	0x0342B148 LDR X2, [X21]
	0x0342B14C ADD X0, X20, 0x8
	0x0342B150 MOV X1, X19
	0x0342B154 LDP X20, X19, [X31 + 0x20]
	0x0342B158 LDP X22, X21, [X31 + 0x10]
	0x0342B15C LDR X30, [X31], #0x30
	0x0342B160 B 0x2632228
	0x0342B164 SUB X31, X31, 0x70
	0x0342B168 STP X30, X27, [X31 + 0x20]
	0x0342B16C STP X26, X25, [X31 + 0x30]
	0x0342B170 STP X24, X23, [X31 + 0x40]
	0x0342B174 STP X22, X21, [X31 + 0x50]
	0x0342B178 STP X20, X19, [X31 + 0x60]
	0x0342B17C ADRP X20, 0xFB2000
	0x0342B180 LDRB W8, [X20 + 0x64D]
	0x0342B184 MOV X19, X0
	0x0342B188 TBNZ X8, 0x0, 0x342B2CC
	0x0342B18C ADRP X0, 0xD03000
	0x0342B190 LDR X0, [X0 + 0xF48]
	0x0342B194 BL 0x1C16CF4
	0x0342B198 ADRP X0, 0xD03000
	0x0342B19C LDR X0, [X0 + 0xF50]
	0x0342B1A0 BL 0x1C16CF4
	0x0342B1A4 ADRP X0, 0xD03000
	0x0342B1A8 LDR X0, [X0 + 0x448]
	0x0342B1AC BL 0x1C16CF4
	0x0342B1B0 ADRP X0, 0xCD1000
	0x0342B1B4 LDR X0, [X0 + 0x8D8]
	0x0342B1B8 BL 0x1C16CF4
	0x0342B1BC ADRP X0, 0xCC9000
	0x0342B1C0 LDR X0, [X0 + 0x810]
	0x0342B1C4 BL 0x1C16CF4
	0x0342B1C8 ADRP X0, 0xCC9000
	0x0342B1CC LDR X0, [X0 + 0x6C0]
	0x0342B1D0 BL 0x1C16CF4
	0x0342B1D4 ADRP X0, 0xCC9000
	0x0342B1D8 LDR X0, [X0 + 0x6D0]
	0x0342B1DC BL 0x1C16CF4
	0x0342B1E0 ADRP X0, 0xD03000
	0x0342B1E4 LDR X0, [X0 + 0x7B8]
	0x0342B1E8 BL 0x1C16CF4
	0x0342B1EC ADRP X0, 0xD03000
	0x0342B1F0 LDR X0, [X0 + 0xF58]
	0x0342B1F4 BL 0x1C16CF4
	0x0342B1F8 ADRP X0, 0xCCB000
	0x0342B1FC LDR X0, [X0 + 0xEF8]
	0x0342B200 BL 0x1C16CF4
	0x0342B204 ADRP X0, 0xCC9000
	0x0342B208 LDR X0, [X0 + 0x478]
	0x0342B20C BL 0x1C16CF4
	0x0342B210 ADRP X0, 0xCC8000
	0x0342B214 LDR X0, [X0 + 0x9D0]
	0x0342B218 BL 0x1C16CF4
	0x0342B21C ADRP X0, 0xCCB000
	0x0342B220 LDR X0, [X0 + 0x1E0]
	0x0342B224 BL 0x1C16CF4
	0x0342B228 ADRP X0, 0xCCB000
	0x0342B22C LDR X0, [X0 + 0x1F0]
	0x0342B230 BL 0x1C16CF4
	0x0342B234 ADRP X0, 0xCCB000
	0x0342B238 LDR X0, [X0 + 0x1F8]
	0x0342B23C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB4000
	014 Move W8, [X20+1607]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xD05000
	021 Move X0, [X0+3768]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCD000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD3000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCB000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCCB000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCB000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD05000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCD000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCD000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCD000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD3000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCF3000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xD05000
	057 Move X0, [X0+3776]
	058 Call 0x1C17CF4
	059 Move X0, 0xD05000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xD05000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCCA000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1607], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCCD000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xD05000
	086 Move X9, 0xCCA000
	087 Move X8, [X8+3776]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCD3000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCD3000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCF3000
	139 Move X9, 0xCCB000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCCB000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xD05000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xD05000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCCB000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xD05000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCCC000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCCC000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCCC000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xD04000
	269 Move X8, [X8+3768]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCD1000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xD04000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xD04000
	301 Move X0, [X0+3784]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCC9000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCCC000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA8A000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342B240 ADRP X0, 0xCD1000
	0x0342B244 LDR X0, [X0 + 0x3A0]
	0x0342B248 BL 0x1C16CF4
	0x0342B24C ADRP X0, 0xCCA000
	0x0342B250 LDR X0, [X0 + 0xA28]
	0x0342B254 BL 0x1C16CF4
	0x0342B258 ADRP X0, 0xCF1000
	0x0342B25C LDR X0, [X0 + 0x4D0]
	0x0342B260 BL 0x1C16CF4
	0x0342B264 ADRP X0, 0xD03000
	0x0342B268 LDR X0, [X0 + 0xF60]
	0x0342B26C BL 0x1C16CF4
	0x0342B270 ADRP X0, 0xCD1000
	0x0342B274 LDR X0, [X0 + 0x720]
	0x0342B278 BL 0x1C16CF4
	0x0342B27C ADRP X0, 0xD03000
	0x0342B280 LDR X0, [X0 + 0x7D0]
	0x0342B284 BL 0x1C16CF4
	0x0342B288 ADRP X0, 0xD03000
	0x0342B28C LDR X0, [X0 + 0xF18]
	0x0342B290 BL 0x1C16CF4
	0x0342B294 ADRP X0, 0xD03000
	0x0342B298 LDR X0, [X0 + 0x7D8]
	0x0342B29C BL 0x1C16CF4
	0x0342B2A0 ADRP X0, 0xD03000
	0x0342B2A4 LDR X0, [X0 + 0x7E0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB3000
	007 Move X22, 0xCCC000
	008 Move W8, [X21+1608]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCCC000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1608], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

