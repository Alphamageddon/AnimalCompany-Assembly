Type: Nakama.Client/<UnlinkGameCenterAsync>d__114

Method: System.Void MoveNext()

Disassembly:
	0x0346B6E4 LDR X8, [X8 + 0x840]
	0x0346B6E8 LDR X1, [X8]
	0x0346B6EC BL 0x269F5D0
	0x0346B6F0 ADRP X8, 0xC89000
	0x0346B6F4 LDR X8, [X8 + 0x838]
	0x0346B6F8 STR X0, [X31 + 0x20]
	0x0346B6FC LDR X1, [X8]
	0x0346B700 ADD X0, X31, 0x20
	0x0346B704 BL 0x2677430
	0x0346B708 TBNZ X0, 0x0, 0x346B500
	0x0346B70C STR W31, [X19]
	0x0346B710 LDR X8, [X31 + 0x20]
	0x0346B714 STR X8, [X19 + 0x50]
	0x0346B718 LDR X0, [X25]
	0x0346B71C LDR W8, [X0 + 0xE0]
	0x0346B720 CBNZ W8, 0x346B728
	0x0346B724 BL 0x1C16DFC
	0x0346B728 ADRP X8, 0xCC5000
	0x0346B72C LDR X8, [X8 + 0x580]
	0x0346B730 ADD X0, X19, 0x8
	0x0346B734 LDR X3, [X8]
	0x0346B738 ADD X1, X31, 0x20
	0x0346B73C MOV X2, X19
	0x0346B740 BL 0x2189000
	0x0346B744 B 0x346B884
	0x0346B748 CBZ X20, 0x346B8A8
	0x0346B74C ADRP X8, 0xC90000
	0x0346B750 LDR X8, [X8 + 0x818]
	0x0346B754 LDR X21, [X20 + 0x58]
	0x0346B758 LDR X23, [X19 + 0x48]
	0x0346B75C LDR X0, [X8]
	0x0346B760 BL 0x1C16F10
	0x0346B764 ADRP X8, 0xCC5000
	0x0346B768 LDR X8, [X8 + 0x590]
	0x0346B76C MOV X22, X0
	0x0346B770 LDR X2, [X8]
	0x0346B774 MOV X1, X23
	0x0346B778 MOV X3, X31
	0x0346B77C BL 0x2D27AA8
	0x0346B780 LDR X8, [X19 + 0x48]
	0x0346B784 CBZ X8, 0x346B89C
	0x0346B788 ADRP X9, 0xCC4000
	0x0346B78C LDR X23, [X19 + 0x40]
	0x0346B790 LDR X9, [X9 + 0x7C8]
	0x0346B794 CBNZ X23, 0x346B79C
	0x0346B798 LDR X23, [X20 + 0x18]
	0x0346B79C LDR X20, [X8 + 0x18]
	0x0346B7A0 LDR X1, [X8 + 0x28]
	0x0346B7A4 LDR X2, [X9]
	0x0346B7A8 STP X31, X31, [X31 + 0x8]
	0x0346B7AC ADD X0, X31, 0x8
	0x0346B7B0 BL 0x242E368
	0x0346B7B4 ADRP X8, 0xCC4000
	0x0346B7B8 LDR X8, [X8 + 0x7D0]
	0x0346B7BC LDR X0, [X8]
	0x0346B7C0 BL 0x1C16F10
	0x0346B7C4 LDP X3, X4, [X31 + 0x8]
	0x0346B7C8 MOV X24, X0
	0x0346B7CC MOV X1, X20
	0x0346B7D0 MOV X2, X23
	0x0346B7D4 BL 0x3465404
	0x0346B7D8 CBZ X21, 0x346B8A0
	0x0346B7DC MOV X0, X21
	0x0346B7E0 MOV X1, X22
	0x0346B7E4 MOV X2, X24
	0x0346B7E8 BL 0x3465B68
	0x0346B7EC CBZ X0, 0x346B8A4
	0x0346B7F0 MOV X1, X31
	0x0346B7F4 BL 0x33ED394
	0x0346B7F8 STR X0, [X31 + 0x18]
	0x0346B7FC ADD X0, X31, 0x18
	0x0346B800 MOV X1, X31
	0x0346B804 BL 0x32C3A80
	0x0346B808 TBZ X0, 0x0, 0x346B848
	0x0346B80C ADD X0, X31, 0x18
	0x0346B810 MOV X1, X31
	0x0346B814 BL 0x32C3B4C
	0x0346B818 MOVN W8, 0x1
	0x0346B81C STR W8, [X19]
	0x0346B820 STR X31, [X19 + 0x48]
	0x0346B824 LDR X0, [X25]
	0x0346B828 ADD X19, X19, 0x8
	0x0346B82C LDR W8, [X0 + 0xE0]
	0x0346B830 CBNZ W8, 0x346B838
	0x0346B834 BL 0x1C16DFC
	0x0346B838 MOV X0, X19
	0x0346B83C MOV X1, X31
	0x0346B840 BL 0x32C4864
	0x0346B844 B 0x346B884
	0x0346B848 MOVZ W8, 0x1
	0x0346B84C STR W8, [X19]
	0x0346B850 LDR X8, [X31 + 0x18]
	0x0346B854 STR X8, [X19 + 0x58]
	0x0346B858 LDR X0, [X25]
	0x0346B85C LDR W8, [X0 + 0xE0]
	0x0346B860 CBNZ W8, 0x346B868
	0x0346B864 BL 0x1C16DFC
	0x0346B868 ADRP X8, 0xCC5000
	0x0346B86C LDR X8, [X8 + 0x588]
	0x0346B870 ADD X0, X19, 0x8
	0x0346B874 LDR X3, [X8]
	0x0346B878 ADD X1, X31, 0x18
	0x0346B87C MOV X2, X19
	0x0346B880 BL 0x218A6C4
	0x0346B884 LDP X20, X19, [X31 + 0x60]
	0x0346B888 LDP X22, X21, [X31 + 0x50]
	0x0346B88C LDP X24, X23, [X31 + 0x40]
	0x0346B890 LDP X30, X25, [X31 + 0x30]
	0x0346B894 ADD X31, X31, 0x70
	0x0346B898 RET
	0x0346B89C BL 0x1C16F20
	0x0346B8A0 BL 0x1C16F20
	0x0346B8A4 BL 0x1C16F20
	0x0346B8A8 BL 0x1C16F20
	0x0346B8AC BL 0x1C16F20
	0x0346B8B0 BL 0x1C16F20
	0x0346B8B4 BL 0x1C16F20
	0x0346B8B8 BL 0x1C16F20
	0x0346B8BC BL 0x1C16F20
	0x0346B8C0 BL 0x1C16F20
	0x0346B8C4 BL 0x1C16F20
	0x0346B8C8 BL 0x1C16F20
	0x0346B8CC B 0x346B940
	0x0346B8D0 B 0x346B940
	0x0346B8D4 B 0x346B940
	0x0346B8D8 B 0x346B940
	0x0346B8DC B 0x346B940
	0x0346B8E0 B 0x346B940
	0x0346B8E4 B 0x346B940
	0x0346B8E8 B 0x346B940
	0x0346B8EC B 0x346B940
	0x0346B8F0 B 0x346B940
	0x0346B8F4 B 0x346B940
	0x0346B8F8 B 0x346B940
	0x0346B8FC B 0x346B940
	0x0346B900 B 0x346B940
	0x0346B904 B 0x346B940
	0x0346B908 B 0x346B940
	0x0346B90C B 0x346B940
	0x0346B910 B 0x346B940
	0x0346B914 B 0x346B940
	0x0346B918 B 0x346B940
	0x0346B91C B 0x346B940
	0x0346B920 B 0x346B940
	0x0346B924 B 0x346B940
	0x0346B928 B 0x346B940
	0x0346B92C B 0x346B940
	0x0346B930 B 0x346B940
	0x0346B934 B 0x346B940
	0x0346B938 B 0x346B940
	0x0346B93C B 0x346B940
	0x0346B940 MOV X20, X0
	0x0346B944 CMP W1, 0x1
	0x0346B948 B.NE 0x346B9DC
	0x0346B94C MOV X0, X20
	0x0346B950 BL 0x3EB1AD0
	0x0346B954 MOV X20, X0
	0x0346B958 ADRP X0, 0xC88000
	0x0346B95C LDR X0, [X0 + 0x7D0]
	0x0346B960 BL 0x1C16D08
	0x0346B964 LDR X8, [X20]
	0x0346B968 LDR X1, [X8]
	0x0346B96C BL 0x1C17270
	0x0346B970 TBZ X0, 0x0, 0x346B9B4
	0x0346B974 LDR X20, [X20]
	0x0346B978 BL 0x3EB1AE0
	0x0346B97C MOVN W8, 0x1
	0x0346B980 STR X31, [X19 + 0x48]
	0x0346B984 STR W8, [X19], #0x8
	0x0346B988 ADRP X0, 0xC8B000
	0x0346B98C LDR X0, [X0 + 0x280]
	0x0346B990 BL 0x1C16D08
	0x0346B994 LDR W8, [X0 + 0xE0]
	0x0346B998 CBNZ W8, 0x346B9A0
	0x0346B99C BL 0x1C16DFC
	0x0346B9A0 MOV X0, X19
	0x0346B9A4 MOV X1, X20
	0x0346B9A8 MOV X2, X31
	0x0346B9AC BL 0x32C4908
	0x0346B9B0 B 0x346B884
	0x0346B9B4 MOVZ W0, 0x8
	0x0346B9B8 BL 0x3EB1AF0
	0x0346B9BC LDR X8, [X20]
	0x0346B9C0 STR X8, [X0]
	0x0346B9C4 ADRP X1, 0xA49000
	0x0346B9C8 ADD X1, X1, 0xE58
	0x0346B9CC MOV X2, X31
	0x0346B9D0 BL 0x3EB1B00
	0x0346B9D4 MOV X20, X0
	0x0346B9D8 BL 0x3EB1AE0
	0x0346B9DC MOV X0, X20
	0x0346B9E0 BL 0x1D2C690
	0x0346B9E4 BL 0x1990590
	0x0346B9E8 STR X30, [X31 - 0x30]!
	0x0346B9EC STP X22, X21, [X31 + 0x10]
	0x0346B9F0 STP X20, X19, [X31 + 0x20]
	0x0346B9F4 ADRP X21, 0xF72000
	0x0346B9F8 ADRP X22, 0xC8B000
	0x0346B9FC LDRB W8, [X21 + 0x7D8]
	0x0346BA00 LDR X22, [X22 + 0x280]
	0x0346BA04 MOV X19, X1
	0x0346BA08 MOV X20, X0
	0x0346BA0C TBNZ X8, 0x0, 0x346BA24
	0x0346BA10 ADRP X0, 0xC8B000
	0x0346BA14 LDR X0, [X0 + 0x280]
	0x0346BA18 BL 0x1C16CF4
	0x0346BA1C MOVZ W8, 0x1
	0x0346BA20 STRB W8, [X21 + 0x7D8]
	0x0346BA24 LDR X0, [X22]
	0x0346BA28 LDR W8, [X0 + 0xE0]
	0x0346BA2C CBNZ W8, 0x346BA34
	0x0346BA30 BL 0x1C16DFC
	0x0346BA34 ADD X0, X20, 0x8
	0x0346BA38 MOV X1, X19
	0x0346BA3C LDP X20, X19, [X31 + 0x20]
	0x0346BA40 LDP X22, X21, [X31 + 0x10]
	0x0346BA44 MOV X2, X31
	0x0346BA48 LDR X30, [X31], #0x30
	0x0346BA4C B 0x32C477C
	0x0346BA50 SUB X31, X31, 0x70
	0x0346BA54 STR X30, [X31 + 0x20]
	0x0346BA58 STP X26, X25, [X31 + 0x30]
	0x0346BA5C STP X24, X23, [X31 + 0x40]
	0x0346BA60 STP X22, X21, [X31 + 0x50]
	0x0346BA64 STP X20, X19, [X31 + 0x60]
	0x0346BA68 ADRP X20, 0xF72000
	0x0346BA6C LDRB W8, [X20 + 0x7D9]
	0x0346BA70 MOV X19, X0
	0x0346BA74 TBNZ X8, 0x0, 0x346BB28
	0x0346BA78 ADRP X0, 0xCC5000
	0x0346BA7C LDR X0, [X0 + 0x5A0]
	0x0346BA80 BL 0x1C16CF4
	0x0346BA84 ADRP X0, 0xCC5000
	0x0346BA88 LDR X0, [X0 + 0x5A8]
	0x0346BA8C BL 0x1C16CF4
	0x0346BA90 ADRP X0, 0xC8B000
	0x0346BA94 LDR X0, [X0 + 0x280]
	0x0346BA98 BL 0x1C16CF4
	0x0346BA9C ADRP X0, 0xC8A000
	0x0346BAA0 LDR X0, [X0 + 0xA10]
	0x0346BAA4 BL 0x1C16CF4
	0x0346BAA8 ADRP X0, 0xC89000
	0x0346BAAC LDR X0, [X0 + 0x9F0]
	0x0346BAB0 BL 0x1C16CF4
	0x0346BAB4 ADRP X0, 0xC90000
	0x0346BAB8 LDR X0, [X0 + 0x818]
	0x0346BABC BL 0x1C16CF4
	0x0346BAC0 ADRP X0, 0xC89000
	0x0346BAC4 LDR X0, [X0 + 0x818]
	0x0346BAC8 BL 0x1C16CF4
	0x0346BACC ADRP X0, 0xCC4000
	0x0346BAD0 LDR X0, [X0 + 0x7C8]
	0x0346BAD4 BL 0x1C16CF4
	0x0346BAD8 ADRP X0, 0xCC4000
	0x0346BADC LDR X0, [X0 + 0x7D0]
	0x0346BAE0 BL 0x1C16CF4
	0x0346BAE4 ADRP X0, 0xC89000
	0x0346BAE8 LDR X0, [X0 + 0x830]
	0x0346BAEC BL 0x1C16CF4
	0x0346BAF0 ADRP X0, 0xC89000
	0x0346BAF4 LDR X0, [X0 + 0x838]
	0x0346BAF8 BL 0x1C16CF4
	0x0346BAFC ADRP X0, 0xC89000
	0x0346BB00 LDR X0, [X0 + 0x840]
	0x0346BB04 BL 0x1C16CF4
	0x0346BB08 ADRP X0, 0xCC5000
	0x0346BB0C LDR X0, [X0 + 0x5B0]
	0x0346BB10 BL 0x1C16CF4
	0x0346BB14 ADRP X0, 0xCC5000
	0x0346BB18 LDR X0, [X0 + 0x5B8]
	0x0346BB1C BL 0x1C16CF4
	0x0346BB20 MOVZ W8, 0x1
	0x0346BB24 STRB W8, [X20 + 0x7D9]
	0x0346BB28 STR X31, [X31 + 0x28]
	0x0346BB2C STP X31, X31, [X31 + 0x10]
	0x0346BB30 ADRP X26, 0xC8B000
	0x0346BB34 LDR W8, [X19]
	0x0346BB38 LDR X20, [X19 + 0x20]
	0x0346BB3C LDR X26, [X26 + 0x280]
	0x0346BB40 CBZ W8, 0x346BB98
	0x0346BB44 CMP W8, 0x1
	0x0346BB48 B.EQ 0x346BB80
	0x0346BB4C CMP W8, 0x2
	0x0346BB50 B.NE 0x346BBC4
	0x0346BB54 LDR X8, [X19 + 0x78]
	0x0346BB58 MOVN W9, 0x0
	0x0346BB5C STR X8, [X31 + 0x18]
	0x0346BB60 STR X31, [X19 + 0x78]
	0x0346BB64 STR W9, [X19]
	0x0346BB68 ADRP X8, 0xC89000
	0x0346BB6C LDR X8, [X8 + 0x830]
	0x0346BB70 ADD X0, X31, 0x18
	0x0346BB74 LDR X1, [X8]
	0x0346BB78 BL 0x2677474
	0x0346BB7C B 0x346BFBC
	0x0346BB80 LDR X8, [X19 + 0x80]
	0x0346BB84 MOVN W9, 0x0
	0x0346BB88 STR X8, [X31 + 0x10]
	0x0346BB8C STR X31, [X19 + 0x80]
	0x0346BB90 STR W9, [X19]
	0x0346BB94 B 0x346BEC8
	0x0346BB98 LDR X8, [X19 + 0x78]
	0x0346BB9C MOVN W9, 0x0
	0x0346BBA0 STR X8, [X31 + 0x18]
	0x0346BBA4 STR X31, [X19 + 0x78]
	0x0346BBA8 STR W9, [X19]
	0x0346BBAC ADRP X8, 0xC89000
	0x0346BBB0 LDR X8, [X8 + 0x830]
	0x0346BBB4 ADD X0, X31, 0x18
	0x0346BBB8 LDR X1, [X8]
	0x0346BBBC BL 0x2677474
	0x0346BBC0 B 0x346BE04
	0x0346BBC4 ADRP X8, 0xCC5000
	0x0346BBC8 LDR X8, [X8 + 0x5B8]
	0x0346BBCC LDR X0, [X8]
	0x0346BBD0 BL 0x1C16F10
	0x0346BBD4 MOV X21, X0
	0x0346BBD8 MOV X1, X31
	0x0346BBDC BL 0x3446A04
	0x0346BBE0 STR X21, [X19 + 0x70]
	0x0346BBE4 CBZ X21, 0x346C0B0
	0x0346BBE8 LDR X8, [X19 + 0x20]
	0x0346BBEC STR X8, [X21 + 0x10]
	0x0346BBF0 LDR X8, [X19 + 0x28]
	0x0346BBF4 STR X8, [X21 + 0x18]
	0x0346BBF8 LDR V0, [X19 + 0x3]
	0x0346BBFC STR V0, [X21 + 0x2]
	0x0346BC00 LDR V0, [X19 + 0x4]
	0x0346BC04 STR V0, [X21 + 0x3]
	0x0346BC08 LDR V0, [X19 + 0x5]
	0x0346BC0C STR V0, [X21 + 0x4]
	0x0346BC10 LDR X8, [X19 + 0x60]
	0x0346BC14 STR X8, [X21 + 0x50]
	0x0346BC18 CBZ X20, 0x346C0B4
	0x0346BC1C LDRB W8, [X20 + 0x10]
	0x0346BC20 CBZ W8, 0x346BE08
	0x0346BC24 LDR X8, [X19 + 0x70]
	0x0346BC28 CBZ X8, 0x346C0C4
	0x0346BC2C LDR X21, [X8 + 0x18]
	0x0346BC30 CBZ X21, 0x346C0C8
	0x0346BC34 ADRP X23, 0xC89000
	0x0346BC38 LDR X8, [X21]
	0x0346BC3C LDR X23, [X23 + 0x818]
	0x0346BC40 LDRH W9, [X8 + 0x12E]
	0x0346BC44 LDR X1, [X23]
	0x0346BC48 CBZ X9, 0x346BC6C
	0x0346BC4C LDR X10, [X8 + 0xB0]
	0x0346BC50 ADD X10, X10, 0x8
	0x0346BC54 LDUR X11, [X10 - 0x8]
	0x0346BC58 CMP X11, X1
	0x0346BC5C B.EQ 0x346BC7C
	0x0346BC60 SUBS X9, X9, 0x1
	0x0346BC64 ADD X10, X10, 0x10
	0x0346BC68 B.NE 0x346BC54
	0x0346BC6C MOVZ W2, 0x7
	0x0346BC70 MOV X0, X21
	0x0346BC74 BL 0x1C5C788
	0x0346BC78 B 0x346BC8C
	0x0346BC7C LDR W9, [X10]
	0x0346BC80 ADD W9, W9, 0x7
	0x0346BC84 ADD X8, X8, W9, 0x4, SXTW
	0x0346BC88 ADD X0, X8, 0x138
	0x0346BC8C LDP X8, X1, [X0]
	0x0346BC90 MOV X0, X21
	0x0346BC94 BLR X8
	0x0346BC98 MOV X1, X31
	0x0346BC9C BL 0x32277A8
	0x0346BCA0 TBNZ X0, 0x0, 0x346BE04
	0x0346BCA4 LDR X8, [X19 + 0x70]
	0x0346BCA8 CBZ X8, 0x346C0D8
	0x0346BCAC ADRP X9, 0xC89000
	0x0346BCB0 LDR X9, [X9 + 0x9F0]
	0x0346BCB4 LDR X21, [X8 + 0x18]
	0x0346BCB8 LDR X0, [X9]
	0x0346BCBC LDR W9, [X0 + 0xE0]
	0x0346BCC0 CBNZ W9, 0x346BCC8
	0x0346BCC4 BL 0x1C16DFC
	0x0346BCC8 MOV X0, X31
	0x0346BCCC BL 0x33616A4
	0x0346BCD0 ADRP X22, 0xC8A000
	0x0346BCD4 LDR X22, [X22 + 0xA10]
	0x0346BCD8 MOV X8, X0
	0x0346BCDC STR X8, [X31 + 0x28]
	0x0346BCE0 LDR X0, [X22]
	0x0346BCE4 LDR W8, [X0 + 0xE0]
	0x0346BCE8 CBNZ W8, 0x346BCF4
	0x0346BCEC BL 0x1C16DFC
	0x0346BCF0 LDR X0, [X22]
	0x0346BCF4 LDR X8, [X0 + 0xB8]
	0x0346BCF8 LDR X1, [X8]
	0x0346BCFC ADD X0, X31, 0x28

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF73000
	011 Move W8, [X20+2003]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCC6000
	018 Move X0, [X0+1344]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC6000
	021 Move X0, [X0+1352]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8C000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8B000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8A000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xC91000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC8A000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCC5000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC5000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC8A000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC8A000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8A000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC6000
	054 Move X0, [X0+1360]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC6000
	057 Move X0, [X0+1368]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+2003], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC8C000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+128]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+128], X31
	077 Move [X19], W9
	078 Move X8, [X19+120]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+120], X31
	084 Move [X19], W9
	085 Move X8, 0xC8A000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCC6000
	091 Move X8, [X8+1368]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass114_0..ctor, X0
	097 Move [X19+112], X21
	098 Compare X21, 0
	099 JumpIfEqual {358}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move V0, [X19+3]
	105 Move [X21+2], V0
	106 Move V0, [X19+4]
	107 Move [X21+3], V0
	108 Move V0, [X19+5]
	109 Move [X21+4], V0
	110 Move X8, [X19+96]
	111 Move [X21+80], X8
	112 Compare X20, 0
	113 JumpIfEqual {359}
	114 Move W8, [X20+16]
	115 Compare W8, 0
	116 JumpIfEqual {254}
	117 Move X8, [X19+112]
	118 Compare X8, 0
	119 JumpIfEqual {360}
	120 Move X21, [X8+24]
	121 Compare X21, 0
	122 JumpIfEqual {361}
	123 Move X23, 0xC8A000
	124 Move X8, [X21]
	125 Move X23, [X23+2072]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Move X1, [X23]
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move W2, 7
	137 Move X0, X21
	138 Call 0x1C5D788
	139 Move W9, [X10]
	140 Add W9, W9, 7
	141 Add X8, X8, W9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X1, [X0+8]
	145 Move X0, X21
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X1, X31
	148 Call String.IsNullOrEmpty, X0
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {252}
	153 Move X8, [X19+112]
	154 Compare X8, 0
	155 JumpIfEqual {362}
	156 Move X9, 0xC8A000
	157 Move X9, [X9+2544]
	158 Move X21, [X8+24]
	159 Move X0, [X9]
	160 Move W9, [X0+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, X31
	165 Call DateTime.get_UtcNow
	166 Move X22, 0xC8B000
	167 Move X22, [X22+2576]
	168 Move X8, X0
	169 Move [X31+40], X8
	170 Move X0, [X22]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {176}
	174 Call 0x1C17DFC
	175 Move X0, [X22]
	176 Move X8, [X0+184]
	177 Move X1, [X8]
	178 Add X0, X31, 40
	179 Move X2, X31
	180 Call DateTime.Add, X0, X1
	181 Compare X21, 0
	182 JumpIfEqual {363}
	183 Move X8, [X21]
	184 Move X1, [X23]
	185 Move X22, X0
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 11
	196 Move X0, X21
	197 Call 0x1C5D788
	198 Move W9, [X10]
	199 Add W9, W9, 11
	200 Add X8, X8, W9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X2, [X0+8]
	204 Move X0, X21
	205 Move X1, X22
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {252}
	211 Move X8, [X19+112]
	212 Compare X8, 0
	213 JumpIfEqual {364}
	214 Move X1, [X8+24]
	215 Move X3, [X19+104]
	216 Move X4, [X8+80]
	217 Move X0, X20
	218 Move X2, X31
	219 Move X5, X31
	220 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	221 Compare X0, 0
	222 JumpIfEqual {365}
	223 Move X8, 0xC8A000
	224 Move X8, [X8+2112]
	225 Move X1, [X8]
	226 Call Task`1<Object>.GetAwaiter, X0
	227 Move X8, 0xC8A000
	228 Move X8, [X8+2104]
	229 Move [X31+32], X0
	230 Move X1, [X8]
	231 Add X0, X31, 32
	232 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfEqual {85}
	237 Move [X19], W31
	238 Move X8, [X31+32]
	239 Move [X19+120], X8
	240 Move X0, [X25]
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Move X8, 0xCC6000
	246 Move X8, [X8+1344]
	247 Add X0, X19, 8
	248 Move X3, [X8]
	249 Add X1, X31, 32
	250 Move X2, X19
	251 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	252 Compare X20, 0
	253 JumpIfEqual {357}
	254 Move X8, 0xC91000
	255 Move X8, [X8+2072]
	256 Move X21, [X20+88]
	257 Move X23, [X19+112]
	258 Move X0, [X8]
	259 Call 0x1C17F10
	260 Move X8, 0xCC6000
	261 Move X8, [X8+1360]
	262 Move X22, X0
	263 Move X2, [X8]
	264 Move X1, X23
	265 Move X3, X31
	266 Call Func`1<Object>..ctor, X0, X1, X2
	267 Move X8, [X19+112]
	268 Compare X8, 0
	269 JumpIfEqual {354}
	270 Move X9, 0xCC5000
	271 Move X23, [X19+104]
	272 Move X9, [X9+1992]
	273 Compare X23, 0
	274 JumpIfNotEqual {276}
	275 Move X23, [X20+24]
	276 Move X20, [X8+24]
	277 Move X1, [X8+80]
	278 Move X2, [X9]
	279 Move [X31+8], X31
	280 Move [X31+16], X31
	281 Add X0, X31, 8
	282 Call Nullable`1<CancellationToken>..ctor, X0, X1
	283 Move X8, 0xCC5000
	284 Move X8, [X8+2000]
	285 Move X0, [X8]
	286 Call 0x1C17F10
	287 Move X3, [X31+8]
	288 Move X4, [X31+16]
	289 Move X24, X0
	290 Move X1, X20
	291 Move X2, X23
	292 Call RetryHistory..ctor, X0, X1, X2, X3
	293 Compare X21, 0
	294 JumpIfEqual {355}
	295 Move X0, X21
	296 Move X1, X22
	297 Move X2, X24
	298 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	299 Compare X0, 0
	300 JumpIfEqual {356}
	301 Move X1, X31
	302 Call Task.GetAwaiter, X0
	303 Move [X31+24], X0
	304 Add X0, X31, 24
	305 Move X1, X31
	306 Call TaskAwaiter.get_IsCompleted, X0
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {328}
	311 Add X0, X31, 24
	312 Move X1, X31
	313 Call TaskAwaiter.GetResult, X0
	314 Move TEMP, 1
	315 Not TEMP
	316 Move W8, TEMP
	317 Move [X19], W8
	318 Move [X19+112], X31
	319 Move X0, [X25]
	320 Add X19, X19, 8
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X0, X19
	326 Move X1, X31
	327 Call AsyncTaskMethodBuilder.SetResult, X0
	328 Move W8, 1
	329 Move [X19], W8
	330 Move X8, [X31+24]
	331 Move [X19+128], X8
	332 Move X0, [X25]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X8, 0xCC6000
	338 Move X8, [X8+1352]
	339 Add X0, X19, 8
	340 Move X3, [X8]
	341 Add X1, X31, 24
	342 Move X2, X19
	343 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	344 Move X20, [X31+96]
	345 Move X19, [X31+104]
	346 Move X22, [X31+80]
	347 Move X21, [X31+88]
	348 Move X24, [X31+64]
	349 Move X23, [X31+72]
	350 Move X30, [X31+48]
	351 Move X25, [X31+56]
	352 Add X31, X31, 112
	353 Return 
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Move X20, X0
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X0, X20
	369 Call 0x3EB2AD0
	370 Move X20, X0
	371 Move X0, 0xC89000
	372 Move X0, [X0+2000]
	373 Call 0x1C17D08
	374 Move X8, [X20]
	375 Move X1, [X8]
	376 Call 0x1C18270
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {399}
	381 Move X20, [X20]
	382 Call 0x3EB2AE0
	383 Move TEMP, 1
	384 Not TEMP
	385 Move W8, TEMP
	386 Move [X19+112], X31
	387 Move [X19+8], W8
	388 Move X0, 0xC8C000
	389 Move X0, [X0+640]
	390 Call 0x1C17D08
	391 Move W8, [X0+224]
	392 Compare W8, 0
	393 JumpIfNotEqual {395}
	394 Call 0x1C17DFC
	395 Move X0, X19
	396 Move X1, X20
	397 Move X2, X31
	398 Call AsyncTaskMethodBuilder.SetException, X0, X1
	399 Move W0, 8
	400 Call 0x3EB2AF0
	401 Move X8, [X20]
	402 Move [X0], X8
	403 Move X1, 0xA4A000
	404 Add X1, X1, 3672
	405 Move X2, X31
	406 Call 0x3EB2B00
	407 Move X20, X0
	408 Call 0x3EB2AE0
	409 Move X0, X20
	410 Call 0x1D2D690
	411 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346BD00 MOV X2, X31
	0x0346BD04 BL 0x335FC68
	0x0346BD08 CBZ X21, 0x346C0DC
	0x0346BD0C LDR X8, [X21]
	0x0346BD10 LDR X1, [X23]
	0x0346BD14 MOV X22, X0
	0x0346BD18 LDRH W9, [X8 + 0x12E]
	0x0346BD1C CBZ X9, 0x346BD40
	0x0346BD20 LDR X10, [X8 + 0xB0]
	0x0346BD24 ADD X10, X10, 0x8
	0x0346BD28 LDUR X11, [X10 - 0x8]
	0x0346BD2C CMP X11, X1
	0x0346BD30 B.EQ 0x346BD50
	0x0346BD34 SUBS X9, X9, 0x1
	0x0346BD38 ADD X10, X10, 0x10
	0x0346BD3C B.NE 0x346BD28
	0x0346BD40 MOVZ W2, 0xB
	0x0346BD44 MOV X0, X21
	0x0346BD48 BL 0x1C5C788
	0x0346BD4C B 0x346BD60
	0x0346BD50 LDR W9, [X10]
	0x0346BD54 ADD W9, W9, 0xB
	0x0346BD58 ADD X8, X8, W9, 0x4, SXTW
	0x0346BD5C ADD X0, X8, 0x138
	0x0346BD60 LDP X8, X2, [X0]
	0x0346BD64 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF73000
	007 Move X22, 0xC8C000
	008 Move W8, [X21+2004]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC8C000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2004], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

