Type: Nakama.ChannelPresenceEvent

Method: System.String get_ChannelId()

Disassembly:
	0x03474508 ADD X0, X8, 0x138
	0x0347450C LDP X8, X1, [X0]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_ChannelId(System.String value)

Disassembly:
	0x03474510 MOV X0, X21
	0x03474514 BLR X8

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.IUserPresence> get_Joins()

Disassembly:
	0x03474518 MOV X1, X0
	0x0347451C LDR X2, [X26]
	0x03474520 MOV X0, X19
	0x03474524 BL 0x2AA64F8
	0x03474528 B 0x347438C
	0x0347452C MOV X21, X31
	0x03474530 MOVZ W22, 0xE
	0x03474534 CBZ X20, 0x3474590
	0x03474538 LDR X8, [X20]
	0x0347453C LDR X1, [X27]
	0x03474540 LDRH W9, [X8 + 0x12E]
	0x03474544 CBZ X9, 0x3474568
	0x03474548 LDR X10, [X8 + 0xB0]
	0x0347454C ADD X10, X10, 0x8
	0x03474550 LDUR X11, [X10 - 0x8]
	0x03474554 CMP X11, X1
	0x03474558 B.EQ 0x3474578
	0x0347455C SUBS X9, X9, 0x1
	0x03474560 ADD X10, X10, 0x10
	0x03474564 B.NE 0x3474550
	0x03474568 MOV X0, X20
	0x0347456C MOV W2, W31
	0x03474570 BL 0x1C5C788
	0x03474574 B 0x3474584
	0x03474578 LDRSW X9, [X10]
	0x0347457C ADD X8, X8, X9, 0x4, LSL
	0x03474580 ADD X0, X8, 0x138
	0x03474584 LDP X8, X1, [X0]
	0x03474588 MOV X0, X20
	0x0347458C BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF6A000
	005 Move W8, [X20+2048]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCBD000
	012 Move X0, [X0+2096]
	013 Call 0x1C17CF4
	014 Move X0, 0xCBD000
	015 Move X0, [X0+2104]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2048], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xCBD000
	023 Move X8, [X8+2104]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCBD000
	027 Move X8, [X8+2096]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.UserPresence> get__joins()

Disassembly:
	0x03474590 CBNZ X21, 0x3474630
	0x03474594 CMP W22, 0xE

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__joins(System.Collections.Generic.List`1<Nakama.UserPresence> value)

Disassembly:
	0x03474598 B.EQ 0x34745A0
	0x0347459C CBNZ W22, 0x34745E8

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.IUserPresence> get_Leaves()

Disassembly:
	0x034745A0 CBZ X19, 0x3474624
	0x034745A4 ADRP X8, 0xCBC000
	0x034745A8 LDR X8, [X8 + 0x8B8]
	0x034745AC MOV X0, X19
	0x034745B0 LDR X1, [X8]
	0x034745B4 BL 0x2AA4F58
	0x034745B8 ADRP X8, 0xCBC000
	0x034745BC LDR X8, [X8 + 0x838]
	0x034745C0 MOV X19, X0
	0x034745C4 LDR X8, [X8]
	0x034745C8 MOV X0, X8
	0x034745CC BL 0x1C16F10
	0x034745D0 ADRP X8, 0xCBC000
	0x034745D4 LDR X8, [X8 + 0x8F0]
	0x034745D8 MOV X1, X19
	0x034745DC MOV X21, X0
	0x034745E0 LDR X2, [X8]
	0x034745E4 BL 0x301B8E0
	0x034745E8 MOV X0, X21
	0x034745EC LDP X20, X19, [X31 + 0x90]
	0x034745F0 LDP X22, X21, [X31 + 0x80]
	0x034745F4 LDP X24, X23, [X31 + 0x70]
	0x034745F8 LDP X26, X25, [X31 + 0x60]
	0x034745FC LDP X28, X27, [X31 + 0x50]
	0x03474600 LDP X29, X30, [X31 + 0x40]
	0x03474604 ADD X31, X31, 0xA0
	0x03474608 RET
	0x0347460C BL 0x1C16F20
	0x03474610 BL 0x1C16F20
	0x03474614 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF6A000
	005 Move W8, [X20+2049]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCBD000
	012 Move X0, [X0+2096]
	013 Call 0x1C17CF4
	014 Move X0, 0xCBD000
	015 Move X0, [X0+2104]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2049], W8
	019 Move X19, [X19+32]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xCBD000
	023 Move X8, [X8+2104]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCBD000
	027 Move X8, [X8+2096]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.UserPresence> get__leaves()

Disassembly:
	0x03474618 BL 0x1C16F20
	0x0347461C BL 0x1C16F20

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set__leaves(System.Collections.Generic.List`1<Nakama.UserPresence> value)

Disassembly:
	0x03474620 BL 0x1C16F20
	0x03474624 BL 0x1C16F20

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_RoomName()

Disassembly:
	0x03474628 BL 0x1C16F20
	0x0347462C BL 0x1C16F20

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_RoomName(System.String value)

Disassembly:
	0x03474630 MOV X0, X21
	0x03474634 BL 0x1C16F18

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String get_GroupId()

Disassembly:
	0x03474638 B 0x3474654
	0x0347463C B 0x3474790

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_GroupId(System.String value)

Disassembly:
	0x03474640 B 0x34746E8
	0x03474644 B 0x3474790

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_UserIdOne()

Disassembly:
	0x03474648 B 0x3474790
	0x0347464C B 0x34746E8

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_UserIdOne(System.String value)

Disassembly:
	0x03474650 B 0x3474654
	0x03474654 ADRP X27, 0xC7F000

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String get_UserIdTwo()

Disassembly:
	0x03474658 LDR X27, [X27 + 0xE00]
	0x0347465C B 0x34746E8

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_UserIdTwo(System.String value)

Disassembly:
	0x03474660 B 0x34746E8
	0x03474664 B 0x3474790

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03474668 B 0x3474790
	0x0347466C B 0x3474790
	0x03474670 B 0x3474790
	0x03474674 B 0x3474680
	0x03474678 B 0x3474680
	0x0347467C B 0x3474680
	0x03474680 CMP W1, 0x1
	0x03474684 STR X0, [X31]
	0x03474688 B.NE 0x34746BC
	0x0347468C LDR X0, [X31]
	0x03474690 BL 0x3EB1AD0
	0x03474694 LDR X22, [X0]
	0x03474698 BL 0x3EB1AE0
	0x0347469C LDR X1, [X23]
	0x034746A0 ADD X0, X31, 0x20
	0x034746A4 BL 0x2BC434C
	0x034746A8 ADRP X26, 0xC7F000
	0x034746AC LDR X26, [X26 + 0xF50]
	0x034746B0 CBZ X22, 0x3473FB8
	0x034746B4 MOV X0, X22
	0x034746B8 BL 0x1C16F18
	0x034746BC MOV X22, X31
	0x034746C0 B 0x34746C8
	0x034746C4 STR X0, [X31]
	0x034746C8 LDR X1, [X23]
	0x034746CC ADD X0, X31, 0x20
	0x034746D0 BL 0x2BC434C
	0x034746D4 CBZ X22, 0x3474830
	0x034746D8 MOV X0, X22
	0x034746DC BL 0x1C16F18
	0x034746E0 B 0x34746E8
	0x034746E4 B 0x34746E8
	0x034746E8 CMP W1, 0x1
	0x034746EC B.NE 0x3474708
	0x034746F0 BL 0x3EB1AD0
	0x034746F4 LDR X21, [X0]
	0x034746F8 BL 0x3EB1AE0
	0x034746FC MOV W22, W31
	0x03474700 CBNZ X20, 0x3474538
	0x03474704 B 0x3474590
	0x03474708 STR X0, [X31]
	0x0347470C MOV X21, X31
	0x03474710 B 0x3474718
	0x03474714 STR X0, [X31]
	0x03474718 CBZ X20, 0x347477C
	0x0347471C LDR X8, [X20]
	0x03474720 ADRP X10, 0xC7F000
	0x03474724 LDRH W9, [X8 + 0x12E]
	0x03474728 LDR X10, [X10 + 0xE00]
	0x0347472C LDR X1, [X10]
	0x03474730 CBZ X9, 0x3474754
	0x03474734 LDR X10, [X8 + 0xB0]
	0x03474738 ADD X10, X10, 0x8
	0x0347473C LDUR X11, [X10 - 0x8]
	0x03474740 CMP X11, X1
	0x03474744 B.EQ 0x3474764
	0x03474748 SUBS X9, X9, 0x1
	0x0347474C ADD X10, X10, 0x10
	0x03474750 B.NE 0x347473C
	0x03474754 MOV X0, X20
	0x03474758 MOV W2, W31
	0x0347475C BL 0x1C5C788
	0x03474760 B 0x3474770
	0x03474764 LDRSW X9, [X10]
	0x03474768 ADD X8, X8, X9, 0x4, LSL
	0x0347476C ADD X0, X8, 0x138
	0x03474770 LDP X8, X1, [X0]
	0x03474774 MOV X0, X20
	0x03474778 BLR X8
	0x0347477C CBZ X21, 0x3474830
	0x03474780 MOV X0, X21
	0x03474784 BL 0x1C16F18
	0x03474788 B 0x3474790
	0x0347478C B 0x3474790
	0x03474790 ADRP X27, 0xC7F000
	0x03474794 LDR X27, [X27 + 0xE00]
	0x03474798 CMP W1, 0x1
	0x0347479C B.NE 0x34747B8
	0x034747A0 BL 0x3EB1AD0
	0x034747A4 LDR X22, [X0]
	0x034747A8 BL 0x3EB1AE0
	0x034747AC MOV W23, W31
	0x034747B0 CBNZ X21, 0x3474290
	0x034747B4 B 0x34742E8
	0x034747B8 STR X0, [X31]
	0x034747BC MOV X22, X31
	0x034747C0 B 0x34747C8
	0x034747C4 STR X0, [X31]
	0x034747C8 CBZ X21, 0x347482C
	0x034747CC LDR X8, [X21]
	0x034747D0 ADRP X10, 0xC7F000
	0x034747D4 LDRH W9, [X8 + 0x12E]
	0x034747D8 LDR X10, [X10 + 0xE00]
	0x034747DC LDR X1, [X10]
	0x034747E0 CBZ X9, 0x3474804
	0x034747E4 LDR X10, [X8 + 0xB0]
	0x034747E8 ADD X10, X10, 0x8
	0x034747EC LDUR X11, [X10 - 0x8]
	0x034747F0 CMP X11, X1
	0x034747F4 B.EQ 0x3474814
	0x034747F8 SUBS X9, X9, 0x1
	0x034747FC ADD X10, X10, 0x10
	0x03474800 B.NE 0x34747EC
	0x03474804 MOV X0, X21
	0x03474808 MOV W2, W31
	0x0347480C BL 0x1C5C788
	0x03474810 B 0x3474820
	0x03474814 LDRSW X9, [X10]
	0x03474818 ADD X8, X8, X9, 0x4, LSL
	0x0347481C ADD X0, X8, 0x138
	0x03474820 LDP X8, X1, [X0]
	0x03474824 MOV X0, X21
	0x03474828 BLR X8
	0x0347482C CBNZ X22, 0x3474838
	0x03474830 LDR X0, [X31]
	0x03474834 BL 0x1D2C690
	0x03474838 MOV X0, X22
	0x0347483C BL 0x1C16F18
	0x03474840 BL 0x1990590
	0x03474844 MOV X1, X31
	0x03474848 B 0x33BDD8C
	0x0347484C LDR X0, [X0 + 0x10]
	0x03474850 RET
	0x03474854 STR X1, [X0 + 0x10]
	0x03474858 RET
	0x0347485C LDR X0, [X0 + 0x18]
	0x03474860 RET
	0x03474864 STR X1, [X0 + 0x18]
	0x03474868 RET
	0x0347486C LDR X0, [X0 + 0x20]
	0x03474870 RET
	0x03474874 STR X1, [X0 + 0x20]
	0x03474878 RET
	0x0347487C STR X30, [X31 - 0x20]!
	0x03474880 STP X20, X19, [X31 + 0x10]
	0x03474884 ADRP X20, 0xF69000
	0x03474888 LDRB W8, [X20 + 0x807]
	0x0347488C MOV X19, X0
	0x03474890 TBNZ X8, 0x0, 0x34748B4
	0x03474894 ADRP X0, 0xCBC000
	0x03474898 LDR X0, [X0 + 0x900]
	0x0347489C BL 0x1C16CF4
	0x034748A0 ADRP X0, 0xCBC000
	0x034748A4 LDR X0, [X0 + 0x908]
	0x034748A8 BL 0x1C16CF4
	0x034748AC MOVZ W8, 0x1
	0x034748B0 STRB W8, [X20 + 0x807]
	0x034748B4 LDR X19, [X19 + 0x28]
	0x034748B8 CBNZ X19, 0x34748E4
	0x034748BC ADRP X8, 0xCBC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xF6A000
	008 Move X22, 0xC82000
	009 Move X23, 0xCBD000
	010 Move X21, 0xC80000
	011 Move W8, [X20+2050]
	012 Move X22, [X22+928]
	013 Move X23, [X23+2072]
	014 Move X21, [X21+2760]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0xC80000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBD000
	024 Move X0, [X0+2072]
	025 Call 0x1C17CF4
	026 Move X0, 0xCBD000
	027 Move X0, [X0+2112]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBD000
	030 Move X0, [X0+2120]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBC000
	033 Move X0, [X0+1464]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBD000
	036 Move X0, [X0+2128]
	037 Call 0x1C17CF4
	038 Move X0, 0xCBD000
	039 Move X0, [X0+2136]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBD000
	042 Move X0, [X0+2144]
	043 Call 0x1C17CF4
	044 Move X0, 0xC82000
	045 Move X0, [X0+928]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBD000
	048 Move X0, [X0+2152]
	049 Call 0x1C17CF4
	050 Move X0, 0xCBD000
	051 Move X0, [X0+2160]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+2050], W8
	055 Move X0, X19
	056 Call ChannelPresenceEvent.get_Joins, X0
	057 Move X8, [X22]
	058 Move X2, [X23]
	059 Move X1, X0
	060 Move X0, X8
	061 Call String.Join, X0, X1
	062 Move X20, X0
	063 Move X0, X19
	064 Call ChannelPresenceEvent.get_Leaves, X0
	065 Move X8, [X22]
	066 Move X2, [X23]
	067 Move X1, X0
	068 Move X0, X8
	069 Call String.Join, X0, X1
	070 Move X8, [X21]
	071 Move X21, X0
	072 Move W1, 15
	073 Move X0, X8
	074 Call 0x1C17D6C
	075 Compare X0, 0
	076 JumpIfEqual {148}
	077 Move W8, [X0+24]
	078 Compare W8, 0
	079 JumpIfEqual {147}
	080 Move X9, 0xCBD000
	081 Move X9, [X9+2152]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X9, [X9]
	084 Move [X0+32], X9
	085 Move X9, [X19+16]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X0+40], X9
	088 Move X9, 0xCBD000
	089 Move X9, [X9+2120]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X9, [X9]
	092 Move [X0+48], X9
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X0+56], X20
	095 Move X9, 0xCBD000
	096 Move X9, [X9+2128]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, [X9]
	099 Move [X0+64], X9
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X0+72], X21
	102 Move X9, 0xCBD000
	103 Move X9, [X9+2160]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X9, [X9]
	106 Move [X0+80], X9
	107 Move X9, [X19+40]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X0+88], X9
	110 Move X9, 0xCBD000
	111 Move X9, [X9+2144]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X9, [X9]
	114 Move [X0+96], X9
	115 Move X9, [X19+48]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X0+104], X9
	118 Move X9, 0xCBD000
	119 Move X9, [X9+2112]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X9, [X9]
	122 Move [X0+112], X9
	123 Move X9, [X19+56]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X0+120], X9
	126 Move X9, 0xCBD000
	127 Move X9, [X9+2136]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X9, [X9]
	130 Move [X0+128], X9
	131 Move X9, [X19+64]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move [X0+136], X9
	134 Move X8, 0xCBC000
	135 Move X8, [X8+1464]
	136 Move X20, [X31+32]
	137 Move X19, [X31+40]
	138 Move X22, [X31+16]
	139 Move X21, [X31+24]
	140 Move X1, X31
	141 Move X8, [X8]
	142 Move [X0+144], X8
	143 Move X30, [X31+48]
	144 Move X23, [X31+56]
	145 Call String.Concat, X0
	146 Return X0
	147 Call 0x1C17F28
	148 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034748C0 LDR X8, [X8 + 0x908]
	0x034748C4 LDR X0, [X8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

