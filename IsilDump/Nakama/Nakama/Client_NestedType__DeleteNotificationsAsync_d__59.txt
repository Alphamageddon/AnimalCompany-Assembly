Type: Nakama.Client/<DeleteNotificationsAsync>d__59

Method: System.Void MoveNext()

Disassembly:
	0x034537D8 LDR X21, [X8 + 0x18]
	0x034537DC CBZ X21, 0x3453B28
	0x034537E0 ADRP X23, 0xCA1000
	0x034537E4 LDR X8, [X21]
	0x034537E8 LDR X23, [X23 + 0x818]
	0x034537EC LDRH W9, [X8 + 0x12E]
	0x034537F0 LDR X1, [X23]
	0x034537F4 CBZ X9, 0x3453818
	0x034537F8 LDR X10, [X8 + 0xB0]
	0x034537FC ADD X10, X10, 0x8
	0x03453800 LDUR X11, [X10 - 0x8]
	0x03453804 CMP X11, X1
	0x03453808 B.EQ 0x3453828
	0x0345380C SUBS X9, X9, 0x1
	0x03453810 ADD X10, X10, 0x10
	0x03453814 B.NE 0x3453800
	0x03453818 MOVZ W2, 0x7
	0x0345381C MOV X0, X21
	0x03453820 BL 0x1C5C788
	0x03453824 B 0x3453838
	0x03453828 LDR W9, [X10]
	0x0345382C ADD W9, W9, 0x7
	0x03453830 ADD X8, X8, W9, 0x4, SXTW
	0x03453834 ADD X0, X8, 0x138
	0x03453838 LDP X8, X1, [X0]
	0x0345383C MOV X0, X21
	0x03453840 BLR X8
	0x03453844 MOV X1, X31
	0x03453848 BL 0x32277A8
	0x0345384C TBNZ X0, 0x0, 0x34539B0
	0x03453850 LDR X8, [X19 + 0x48]
	0x03453854 CBZ X8, 0x3453B2C
	0x03453858 ADRP X9, 0xCA1000
	0x0345385C LDR X9, [X9 + 0x9F0]
	0x03453860 LDR X21, [X8 + 0x18]
	0x03453864 LDR X0, [X9]
	0x03453868 LDR W9, [X0 + 0xE0]
	0x0345386C CBNZ W9, 0x3453874
	0x03453870 BL 0x1C16DFC
	0x03453874 MOV X0, X31
	0x03453878 BL 0x33616A4
	0x0345387C ADRP X22, 0xCA2000
	0x03453880 LDR X22, [X22 + 0xA10]
	0x03453884 MOV X8, X0
	0x03453888 STR X8, [X31 + 0x28]
	0x0345388C LDR X0, [X22]
	0x03453890 LDR W8, [X0 + 0xE0]
	0x03453894 CBNZ W8, 0x34538A0
	0x03453898 BL 0x1C16DFC
	0x0345389C LDR X0, [X22]
	0x034538A0 LDR X8, [X0 + 0xB8]
	0x034538A4 LDR X1, [X8]
	0x034538A8 ADD X0, X31, 0x28
	0x034538AC MOV X2, X31
	0x034538B0 BL 0x335FC68
	0x034538B4 CBZ X21, 0x3453B30
	0x034538B8 LDR X8, [X21]
	0x034538BC LDR X1, [X23]
	0x034538C0 MOV X22, X0
	0x034538C4 LDRH W9, [X8 + 0x12E]
	0x034538C8 CBZ X9, 0x34538EC
	0x034538CC LDR X10, [X8 + 0xB0]
	0x034538D0 ADD X10, X10, 0x8
	0x034538D4 LDUR X11, [X10 - 0x8]
	0x034538D8 CMP X11, X1
	0x034538DC B.EQ 0x34538FC
	0x034538E0 SUBS X9, X9, 0x1
	0x034538E4 ADD X10, X10, 0x10
	0x034538E8 B.NE 0x34538D4
	0x034538EC MOVZ W2, 0xB
	0x034538F0 MOV X0, X21
	0x034538F4 BL 0x1C5C788
	0x034538F8 B 0x345390C
	0x034538FC LDR W9, [X10]
	0x03453900 ADD W9, W9, 0xB
	0x03453904 ADD X8, X8, W9, 0x4, SXTW
	0x03453908 ADD X0, X8, 0x138
	0x0345390C LDP X8, X2, [X0]
	0x03453910 MOV X0, X21
	0x03453914 MOV X1, X22
	0x03453918 BLR X8
	0x0345391C TBZ X0, 0x0, 0x34539B0
	0x03453920 LDR X8, [X19 + 0x48]
	0x03453924 CBZ X8, 0x3453B34
	0x03453928 LDR X1, [X8 + 0x18]
	0x0345392C LDR X3, [X19 + 0x40]
	0x03453930 LDR X4, [X8 + 0x28]
	0x03453934 MOV X0, X20
	0x03453938 MOV X2, X31
	0x0345393C MOV X5, X31
	0x03453940 BL 0x34440A8
	0x03453944 CBZ X0, 0x3453B38
	0x03453948 ADRP X8, 0xCA1000
	0x0345394C LDR X8, [X8 + 0x840]
	0x03453950 LDR X1, [X8]
	0x03453954 BL 0x269F5D0
	0x03453958 ADRP X8, 0xCA1000
	0x0345395C LDR X8, [X8 + 0x838]
	0x03453960 STR X0, [X31 + 0x20]
	0x03453964 LDR X1, [X8]
	0x03453968 ADD X0, X31, 0x20
	0x0345396C BL 0x2677430
	0x03453970 TBNZ X0, 0x0, 0x3453768
	0x03453974 STR W31, [X19]
	0x03453978 LDR X8, [X31 + 0x20]
	0x0345397C STR X8, [X19 + 0x50]
	0x03453980 LDR X0, [X25]
	0x03453984 LDR W8, [X0 + 0xE0]
	0x03453988 CBNZ W8, 0x3453990
	0x0345398C BL 0x1C16DFC
	0x03453990 ADRP X8, 0xCDC000
	0x03453994 LDR X8, [X8 + 0xCB8]
	0x03453998 ADD X0, X19, 0x8
	0x0345399C LDR X3, [X8]
	0x034539A0 ADD X1, X31, 0x20
	0x034539A4 MOV X2, X19
	0x034539A8 BL 0x21883E4
	0x034539AC B 0x3453AF4
	0x034539B0 CBZ X20, 0x3453B18
	0x034539B4 ADRP X8, 0xCA8000
	0x034539B8 LDR X8, [X8 + 0x818]
	0x034539BC LDR X21, [X20 + 0x58]
	0x034539C0 LDR X23, [X19 + 0x48]
	0x034539C4 LDR X0, [X8]
	0x034539C8 BL 0x1C16F10
	0x034539CC ADRP X8, 0xCDC000
	0x034539D0 LDR X8, [X8 + 0xCC8]
	0x034539D4 MOV X22, X0
	0x034539D8 LDR X2, [X8]
	0x034539DC MOV X1, X23
	0x034539E0 MOV X3, X31
	0x034539E4 BL 0x2D27AA8
	0x034539E8 LDR X8, [X19 + 0x48]
	0x034539EC CBZ X8, 0x3453B0C
	0x034539F0 ADRP X9, 0xCDC000
	0x034539F4 LDR X23, [X19 + 0x40]
	0x034539F8 LDR X9, [X9 + 0x7C8]
	0x034539FC CBNZ X23, 0x3453A04
	0x03453A00 LDR X23, [X20 + 0x18]
	0x03453A04 LDR X20, [X8 + 0x18]
	0x03453A08 LDR X1, [X8 + 0x28]
	0x03453A0C LDR X2, [X9]
	0x03453A10 STP X31, X31, [X31 + 0x8]
	0x03453A14 ADD X0, X31, 0x8
	0x03453A18 BL 0x242E368
	0x03453A1C ADRP X8, 0xCDC000
	0x03453A20 LDR X8, [X8 + 0x7D0]
	0x03453A24 LDR X0, [X8]
	0x03453A28 BL 0x1C16F10
	0x03453A2C LDP X3, X4, [X31 + 0x8]
	0x03453A30 MOV X24, X0
	0x03453A34 MOV X1, X20
	0x03453A38 MOV X2, X23
	0x03453A3C MOV X5, X31
	0x03453A40 BL 0x3465404
	0x03453A44 CBZ X21, 0x3453B10
	0x03453A48 MOV X0, X21
	0x03453A4C MOV X1, X22
	0x03453A50 MOV X2, X24
	0x03453A54 MOV X3, X31
	0x03453A58 BL 0x3465B68
	0x03453A5C CBZ X0, 0x3453B14
	0x03453A60 MOV X1, X31
	0x03453A64 BL 0x33ED394
	0x03453A68 STR X0, [X31 + 0x18]
	0x03453A6C ADD X0, X31, 0x18
	0x03453A70 MOV X1, X31
	0x03453A74 BL 0x32C3A80
	0x03453A78 TBZ X0, 0x0, 0x3453AB8
	0x03453A7C ADD X0, X31, 0x18
	0x03453A80 MOV X1, X31
	0x03453A84 BL 0x32C3B4C
	0x03453A88 MOVN W8, 0x1
	0x03453A8C STR W8, [X19]
	0x03453A90 STR X31, [X19 + 0x48]
	0x03453A94 LDR X0, [X25]
	0x03453A98 ADD X19, X19, 0x8
	0x03453A9C LDR W8, [X0 + 0xE0]
	0x03453AA0 CBNZ W8, 0x3453AA8
	0x03453AA4 BL 0x1C16DFC
	0x03453AA8 MOV X0, X19
	0x03453AAC MOV X1, X31
	0x03453AB0 BL 0x32C4864
	0x03453AB4 B 0x3453AF4
	0x03453AB8 MOVZ W8, 0x1
	0x03453ABC STR W8, [X19]
	0x03453AC0 LDR X8, [X31 + 0x18]
	0x03453AC4 STR X8, [X19 + 0x58]
	0x03453AC8 LDR X0, [X25]
	0x03453ACC LDR W8, [X0 + 0xE0]
	0x03453AD0 CBNZ W8, 0x3453AD8
	0x03453AD4 BL 0x1C16DFC
	0x03453AD8 ADRP X8, 0xCDC000
	0x03453ADC LDR X8, [X8 + 0xCC0]
	0x03453AE0 ADD X0, X19, 0x8
	0x03453AE4 LDR X3, [X8]
	0x03453AE8 ADD X1, X31, 0x18
	0x03453AEC MOV X2, X19
	0x03453AF0 BL 0x2189AA8
	0x03453AF4 LDP X20, X19, [X31 + 0x60]
	0x03453AF8 LDP X22, X21, [X31 + 0x50]
	0x03453AFC LDP X24, X23, [X31 + 0x40]
	0x03453B00 LDP X30, X25, [X31 + 0x30]
	0x03453B04 ADD X31, X31, 0x70
	0x03453B08 RET
	0x03453B0C BL 0x1C16F20
	0x03453B10 BL 0x1C16F20
	0x03453B14 BL 0x1C16F20
	0x03453B18 BL 0x1C16F20
	0x03453B1C BL 0x1C16F20
	0x03453B20 BL 0x1C16F20
	0x03453B24 BL 0x1C16F20
	0x03453B28 BL 0x1C16F20
	0x03453B2C BL 0x1C16F20
	0x03453B30 BL 0x1C16F20
	0x03453B34 BL 0x1C16F20
	0x03453B38 BL 0x1C16F20
	0x03453B3C B 0x3453BB0
	0x03453B40 B 0x3453BB0
	0x03453B44 B 0x3453BB0
	0x03453B48 B 0x3453BB0
	0x03453B4C B 0x3453BB0
	0x03453B50 B 0x3453BB0
	0x03453B54 B 0x3453BB0
	0x03453B58 B 0x3453BB0
	0x03453B5C B 0x3453BB0
	0x03453B60 B 0x3453BB0
	0x03453B64 B 0x3453BB0
	0x03453B68 B 0x3453BB0
	0x03453B6C B 0x3453BB0
	0x03453B70 B 0x3453BB0
	0x03453B74 B 0x3453BB0
	0x03453B78 B 0x3453BB0
	0x03453B7C B 0x3453BB0
	0x03453B80 B 0x3453BB0
	0x03453B84 B 0x3453BB0
	0x03453B88 B 0x3453BB0
	0x03453B8C B 0x3453BB0
	0x03453B90 B 0x3453BB0
	0x03453B94 B 0x3453BB0
	0x03453B98 B 0x3453BB0
	0x03453B9C B 0x3453BB0
	0x03453BA0 B 0x3453BB0
	0x03453BA4 B 0x3453BB0
	0x03453BA8 B 0x3453BB0
	0x03453BAC B 0x3453BB0
	0x03453BB0 MOV X20, X0
	0x03453BB4 CMP W1, 0x1
	0x03453BB8 B.NE 0x3453C4C
	0x03453BBC MOV X0, X20
	0x03453BC0 BL 0x3EB1AD0
	0x03453BC4 MOV X20, X0
	0x03453BC8 ADRP X0, 0xCA0000
	0x03453BCC LDR X0, [X0 + 0x7D0]
	0x03453BD0 BL 0x1C16D08
	0x03453BD4 LDR X8, [X20]
	0x03453BD8 LDR X1, [X8]
	0x03453BDC BL 0x1C17270
	0x03453BE0 TBZ X0, 0x0, 0x3453C24
	0x03453BE4 LDR X20, [X20]
	0x03453BE8 BL 0x3EB1AE0
	0x03453BEC MOVN W8, 0x1
	0x03453BF0 STR X31, [X19 + 0x48]
	0x03453BF4 STR W8, [X19], #0x8
	0x03453BF8 ADRP X0, 0xCA3000
	0x03453BFC LDR X0, [X0 + 0x280]
	0x03453C00 BL 0x1C16D08
	0x03453C04 LDR W8, [X0 + 0xE0]
	0x03453C08 CBNZ W8, 0x3453C10
	0x03453C0C BL 0x1C16DFC
	0x03453C10 MOV X0, X19
	0x03453C14 MOV X1, X20
	0x03453C18 MOV X2, X31
	0x03453C1C BL 0x32C4908
	0x03453C20 B 0x3453AF4
	0x03453C24 MOVZ W0, 0x8
	0x03453C28 BL 0x3EB1AF0
	0x03453C2C LDR X8, [X20]
	0x03453C30 STR X8, [X0]
	0x03453C34 ADRP X1, 0xA61000
	0x03453C38 ADD X1, X1, 0xE58
	0x03453C3C MOV X2, X31
	0x03453C40 BL 0x3EB1B00
	0x03453C44 MOV X20, X0
	0x03453C48 BL 0x3EB1AE0
	0x03453C4C MOV X0, X20
	0x03453C50 BL 0x1D2C690
	0x03453C54 BL 0x1990590
	0x03453C58 STR X30, [X31 - 0x30]!
	0x03453C5C STP X22, X21, [X31 + 0x10]
	0x03453C60 STP X20, X19, [X31 + 0x20]
	0x03453C64 ADRP X21, 0xF8A000
	0x03453C68 ADRP X22, 0xCA3000
	0x03453C6C LDRB W8, [X21 + 0x77A]
	0x03453C70 LDR X22, [X22 + 0x280]
	0x03453C74 MOV X19, X1
	0x03453C78 MOV X20, X0
	0x03453C7C TBNZ X8, 0x0, 0x3453C94
	0x03453C80 ADRP X0, 0xCA3000
	0x03453C84 LDR X0, [X0 + 0x280]
	0x03453C88 BL 0x1C16CF4
	0x03453C8C MOVZ W8, 0x1
	0x03453C90 STRB W8, [X21 + 0x77A]
	0x03453C94 LDR X0, [X22]
	0x03453C98 LDR W8, [X0 + 0xE0]
	0x03453C9C CBNZ W8, 0x3453CA4
	0x03453CA0 BL 0x1C16DFC
	0x03453CA4 ADD X0, X20, 0x8
	0x03453CA8 MOV X1, X19
	0x03453CAC LDP X20, X19, [X31 + 0x20]
	0x03453CB0 LDP X22, X21, [X31 + 0x10]
	0x03453CB4 MOV X2, X31
	0x03453CB8 LDR X30, [X31], #0x30
	0x03453CBC B 0x32C477C
	0x03453CC0 SUB X31, X31, 0x70
	0x03453CC4 STP X30, X25, [X31 + 0x30]
	0x03453CC8 STP X24, X23, [X31 + 0x40]
	0x03453CCC STP X22, X21, [X31 + 0x50]
	0x03453CD0 STP X20, X19, [X31 + 0x60]
	0x03453CD4 ADRP X20, 0xF8A000
	0x03453CD8 LDRB W8, [X20 + 0x77B]
	0x03453CDC MOV X19, X0
	0x03453CE0 TBNZ X8, 0x0, 0x3453D94
	0x03453CE4 ADRP X0, 0xCDC000
	0x03453CE8 LDR X0, [X0 + 0xCD8]
	0x03453CEC BL 0x1C16CF4
	0x03453CF0 ADRP X0, 0xCDC000
	0x03453CF4 LDR X0, [X0 + 0xCE0]
	0x03453CF8 BL 0x1C16CF4
	0x03453CFC ADRP X0, 0xCA3000
	0x03453D00 LDR X0, [X0 + 0x280]
	0x03453D04 BL 0x1C16CF4
	0x03453D08 ADRP X0, 0xCA2000
	0x03453D0C LDR X0, [X0 + 0xA10]
	0x03453D10 BL 0x1C16CF4
	0x03453D14 ADRP X0, 0xCA1000
	0x03453D18 LDR X0, [X0 + 0x9F0]
	0x03453D1C BL 0x1C16CF4
	0x03453D20 ADRP X0, 0xCA8000
	0x03453D24 LDR X0, [X0 + 0x818]
	0x03453D28 BL 0x1C16CF4
	0x03453D2C ADRP X0, 0xCA1000
	0x03453D30 LDR X0, [X0 + 0x818]
	0x03453D34 BL 0x1C16CF4
	0x03453D38 ADRP X0, 0xCDC000
	0x03453D3C LDR X0, [X0 + 0x7C8]
	0x03453D40 BL 0x1C16CF4
	0x03453D44 ADRP X0, 0xCDC000
	0x03453D48 LDR X0, [X0 + 0x7D0]
	0x03453D4C BL 0x1C16CF4
	0x03453D50 ADRP X0, 0xCA1000
	0x03453D54 LDR X0, [X0 + 0x830]
	0x03453D58 BL 0x1C16CF4
	0x03453D5C ADRP X0, 0xCA1000
	0x03453D60 LDR X0, [X0 + 0x838]
	0x03453D64 BL 0x1C16CF4
	0x03453D68 ADRP X0, 0xCA1000
	0x03453D6C LDR X0, [X0 + 0x840]
	0x03453D70 BL 0x1C16CF4
	0x03453D74 ADRP X0, 0xCDC000
	0x03453D78 LDR X0, [X0 + 0xCE8]
	0x03453D7C BL 0x1C16CF4
	0x03453D80 ADRP X0, 0xCDC000
	0x03453D84 LDR X0, [X0 + 0xCF0]
	0x03453D88 BL 0x1C16CF4
	0x03453D8C MOVZ W8, 0x1
	0x03453D90 STRB W8, [X20 + 0x77B]
	0x03453D94 STP X31, X31, [X31 + 0x20]
	0x03453D98 STR X31, [X31 + 0x18]
	0x03453D9C ADRP X25, 0xCA3000
	0x03453DA0 LDR W8, [X19]
	0x03453DA4 LDR X20, [X19 + 0x20]
	0x03453DA8 LDR X25, [X25 + 0x280]
	0x03453DAC CBZ W8, 0x3453DD0
	0x03453DB0 CMP W8, 0x1
	0x03453DB4 B.NE 0x3453DFC
	0x03453DB8 LDR X8, [X19 + 0x60]
	0x03453DBC MOVN W9, 0x0
	0x03453DC0 STR X8, [X31 + 0x18]
	0x03453DC4 STR X31, [X19 + 0x60]
	0x03453DC8 STR W9, [X19]
	0x03453DCC B 0x3454100
	0x03453DD0 LDR X8, [X19 + 0x58]
	0x03453DD4 MOVN W9, 0x0
	0x03453DD8 STR X8, [X31 + 0x20]
	0x03453DDC STR X31, [X19 + 0x58]
	0x03453DE0 STR W9, [X19]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF8B000
	011 Move W8, [X20+1909]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCDD000
	018 Move X0, [X0+3168]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDD000
	021 Move X0, [X0+3176]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA4000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA3000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA2000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA9000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA2000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDD000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDD000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA2000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA2000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA2000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDD000
	054 Move X0, [X0+3184]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDD000
	057 Move X0, [X0+3192]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1909], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA4000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xCA2000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCDD000
	091 Move X8, [X8+3192]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass59_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {354}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move [X21+24], V0
	104 Move X8, [X19+56]
	105 Move [X21+40], X8
	106 Compare X20, 0
	107 JumpIfEqual {355}
	108 Move W8, [X20+16]
	109 Compare W8, 0
	110 JumpIfEqual {248}
	111 Move X8, [X19+72]
	112 Compare X8, 0
	113 JumpIfEqual {356}
	114 Move X21, [X8+24]
	115 Compare X21, 0
	116 JumpIfEqual {357}
	117 Move X23, 0xCA2000
	118 Move X8, [X21]
	119 Move X23, [X23+2072]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Move X1, [X23]
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move W2, 7
	131 Move X0, X21
	132 Call 0x1C5D788
	133 Move W9, [X10]
	134 Add W9, W9, 7
	135 Add X8, X8, W9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X21
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X1, X31
	142 Call String.IsNullOrEmpty, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {246}
	147 Move X8, [X19+72]
	148 Compare X8, 0
	149 JumpIfEqual {358}
	150 Move X9, 0xCA2000
	151 Move X9, [X9+2544]
	152 Move X21, [X8+24]
	153 Move X0, [X9]
	154 Move W9, [X0+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X31
	159 Call DateTime.get_UtcNow
	160 Move X22, 0xCA3000
	161 Move X22, [X22+2576]
	162 Move X8, X0
	163 Move [X31+40], X8
	164 Move X0, [X22]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X22]
	170 Move X8, [X0+184]
	171 Move X1, [X8]
	172 Add X0, X31, 40
	173 Move X2, X31
	174 Call DateTime.Add, X0, X1
	175 Compare X21, 0
	176 JumpIfEqual {359}
	177 Move X8, [X21]
	178 Move X1, [X23]
	179 Move X22, X0
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move W2, 11
	190 Move X0, X21
	191 Call 0x1C5D788
	192 Move W9, [X10]
	193 Add W9, W9, 11
	194 Add X8, X8, W9
	195 Add X0, X8, 312
	196 Move X8, [X0]
	197 Move X2, [X0+8]
	198 Move X0, X21
	199 Move X1, X22
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {246}
	205 Move X8, [X19+72]
	206 Compare X8, 0
	207 JumpIfEqual {360}
	208 Move X1, [X8+24]
	209 Move X3, [X19+64]
	210 Move X4, [X8+40]
	211 Move X0, X20
	212 Move X2, X31
	213 Move X5, X31
	214 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	215 Compare X0, 0
	216 JumpIfEqual {361}
	217 Move X8, 0xCA2000
	218 Move X8, [X8+2112]
	219 Move X1, [X8]
	220 Call Task`1<Object>.GetAwaiter, X0
	221 Move X8, 0xCA2000
	222 Move X8, [X8+2104]
	223 Move [X31+32], X0
	224 Move X1, [X8]
	225 Add X0, X31, 32
	226 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {85}
	231 Move [X19], W31
	232 Move X8, [X31+32]
	233 Move [X19+80], X8
	234 Move X0, [X25]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X8, 0xCDD000
	240 Move X8, [X8+3168]
	241 Add X0, X19, 8
	242 Move X3, [X8]
	243 Add X1, X31, 32
	244 Move X2, X19
	245 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	246 Compare X20, 0
	247 JumpIfEqual {353}
	248 Move X8, 0xCA9000
	249 Move X8, [X8+2072]
	250 Move X21, [X20+88]
	251 Move X23, [X19+72]
	252 Move X0, [X8]
	253 Call 0x1C17F10
	254 Move X8, 0xCDD000
	255 Move X8, [X8+3184]
	256 Move X22, X0
	257 Move X2, [X8]
	258 Move X1, X23
	259 Move X3, X31
	260 Call Func`1<Object>..ctor, X0, X1, X2
	261 Move X8, [X19+72]
	262 Compare X8, 0
	263 JumpIfEqual {350}
	264 Move X9, 0xCDD000
	265 Move X23, [X19+64]
	266 Move X9, [X9+1992]
	267 Compare X23, 0
	268 JumpIfNotEqual {270}
	269 Move X23, [X20+24]
	270 Move X20, [X8+24]
	271 Move X1, [X8+40]
	272 Move X2, [X9]
	273 Move [X31+8], X31
	274 Move [X31+16], X31
	275 Add X0, X31, 8
	276 Call Nullable`1<CancellationToken>..ctor, X0, X1
	277 Move X8, 0xCDD000
	278 Move X8, [X8+2000]
	279 Move X0, [X8]
	280 Call 0x1C17F10
	281 Move X3, [X31+8]
	282 Move X4, [X31+16]
	283 Move X24, X0
	284 Move X1, X20
	285 Move X2, X23
	286 Move X5, X31
	287 Call RetryHistory..ctor, X0, X1, X2, X3
	288 Compare X21, 0
	289 JumpIfEqual {351}
	290 Move X0, X21
	291 Move X1, X22
	292 Move X2, X24
	293 Move X3, X31
	294 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	295 Compare X0, 0
	296 JumpIfEqual {352}
	297 Move X1, X31
	298 Call Task.GetAwaiter, X0
	299 Move [X31+24], X0
	300 Add X0, X31, 24
	301 Move X1, X31
	302 Call TaskAwaiter.get_IsCompleted, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {324}
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.GetResult, X0
	310 Move TEMP, 1
	311 Not TEMP
	312 Move W8, TEMP
	313 Move [X19], W8
	314 Move [X19+72], X31
	315 Move X0, [X25]
	316 Add X19, X19, 8
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call AsyncTaskMethodBuilder.SetResult, X0
	324 Move W8, 1
	325 Move [X19], W8
	326 Move X8, [X31+24]
	327 Move [X19+88], X8
	328 Move X0, [X25]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X8, 0xCDD000
	334 Move X8, [X8+3176]
	335 Add X0, X19, 8
	336 Move X3, [X8]
	337 Add X1, X31, 24
	338 Move X2, X19
	339 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	340 Move X20, [X31+96]
	341 Move X19, [X31+104]
	342 Move X22, [X31+80]
	343 Move X21, [X31+88]
	344 Move X24, [X31+64]
	345 Move X23, [X31+72]
	346 Move X30, [X31+48]
	347 Move X25, [X31+56]
	348 Add X31, X31, 112
	349 Return 
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X20, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X20
	365 Call 0x3EB2AD0
	366 Move X20, X0
	367 Move X0, 0xCA1000
	368 Move X0, [X0+2000]
	369 Call 0x1C17D08
	370 Move X8, [X20]
	371 Move X1, [X8]
	372 Call 0x1C18270
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {395}
	377 Move X20, [X20]
	378 Call 0x3EB2AE0
	379 Move TEMP, 1
	380 Not TEMP
	381 Move W8, TEMP
	382 Move [X19+72], X31
	383 Move [X19+8], W8
	384 Move X0, 0xCA4000
	385 Move X0, [X0+640]
	386 Call 0x1C17D08
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X19
	392 Move X1, X20
	393 Move X2, X31
	394 Call AsyncTaskMethodBuilder.SetException, X0, X1
	395 Move W0, 8
	396 Call 0x3EB2AF0
	397 Move X8, [X20]
	398 Move [X0], X8
	399 Move X1, 0xA62000
	400 Add X1, X1, 3672
	401 Move X2, X31
	402 Call 0x3EB2B00
	403 Move X20, X0
	404 Call 0x3EB2AE0
	405 Move X0, X20
	406 Call 0x1D2D690
	407 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03453DE4 ADRP X8, 0xCA1000
	0x03453DE8 LDR X8, [X8 + 0x830]
	0x03453DEC ADD X0, X31, 0x20
	0x03453DF0 LDR X1, [X8]
	0x03453DF4 BL 0x2677474
	0x03453DF8 B 0x3454034
	0x03453DFC ADRP X8, 0xCDC000
	0x03453E00 LDR X8, [X8 + 0xCF0]
	0x03453E04 LDR X0, [X8]
	0x03453E08 BL 0x1C16F10
	0x03453E0C MOV X21, X0
	0x03453E10 MOV X1, X31
	0x03453E14 BL 0x344908C
	0x03453E18 STR X21, [X19 + 0x50]
	0x03453E1C CBZ X21, 0x34541A0
	0x03453E20 LDR X8, [X19 + 0x20]
	0x03453E24 STR X8, [X21 + 0x10]
	0x03453E28 LDR X8, [X19 + 0x28]
	0x03453E2C STR X8, [X21 + 0x18]
	0x03453E30 LDR X8, [X19 + 0x30]
	0x03453E34 STR X8, [X21 + 0x20]
	0x03453E38 LDR X8, [X19 + 0x38]
	0x03453E3C STR X8, [X21 + 0x28]
	0x03453E40 LDR X8, [X19 + 0x40]
	0x03453E44 STR X8, [X21 + 0x30]
	0x03453E48 CBZ X20, 0x34541A4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF8B000
	007 Move X22, 0xCA4000
	008 Move W8, [X21+1910]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA4000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1910], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

