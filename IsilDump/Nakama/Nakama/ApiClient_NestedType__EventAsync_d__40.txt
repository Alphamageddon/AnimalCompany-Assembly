Type: Nakama.ApiClient/<EventAsync>d__40

Method: System.Void MoveNext()

Disassembly:
	0x034234F0 MOV X0, X20
	0x034234F4 BL 0x1C16DEC
	0x034234F8 BL 0x1C16F20
	0x034234FC BL 0x1C16F20
	0x03423500 BL 0x1C16F20
	0x03423504 BL 0x1C16F20
	0x03423508 BL 0x1C16F28
	0x0342350C BL 0x1C16F20
	0x03423510 BL 0x1C16F20
	0x03423514 BL 0x1C16F20
	0x03423518 BL 0x1C16F20
	0x0342351C BL 0x1C16F20
	0x03423520 B 0x3423580
	0x03423524 B 0x3423580
	0x03423528 B 0x3423580
	0x0342352C B 0x3423580
	0x03423530 B 0x3423580
	0x03423534 B 0x3423580
	0x03423538 B 0x3423580
	0x0342353C B 0x3423580
	0x03423540 B 0x3423580
	0x03423544 B 0x3423580
	0x03423548 B 0x3423580
	0x0342354C B 0x3423580
	0x03423550 B 0x3423580
	0x03423554 B 0x3423580
	0x03423558 B 0x3423580
	0x0342355C B 0x3423580
	0x03423560 B 0x3423580
	0x03423564 B 0x3423580
	0x03423568 B 0x3423580
	0x0342356C B 0x3423580
	0x03423570 B 0x3423580
	0x03423574 B 0x3423580
	0x03423578 B 0x3423580
	0x0342357C B 0x3423580
	0x03423580 MOV X20, X0
	0x03423584 CMP W1, 0x1
	0x03423588 B.NE 0x3423624
	0x0342358C MOV X0, X20
	0x03423590 BL 0x3EB1AD0
	0x03423594 MOV X20, X0
	0x03423598 ADRP X0, 0xCD0000
	0x0342359C LDR X0, [X0 + 0x7D0]
	0x034235A0 BL 0x1C16D08
	0x034235A4 LDR X8, [X20]
	0x034235A8 LDR X1, [X8]
	0x034235AC BL 0x1C17270
	0x034235B0 TBZ X0, 0x0, 0x34235FC
	0x034235B4 LDR X20, [X20]
	0x034235B8 BL 0x3EB1AE0
	0x034235BC MOVN W8, 0x1
	0x034235C0 STR W8, [X19], #0x8
	0x034235C4 ADRP X0, 0xD0B000
	0x034235C8 LDR X0, [X0 + 0x5B0]
	0x034235CC BL 0x1C16D08
	0x034235D0 LDR W8, [X0 + 0xE0]
	0x034235D4 CBNZ W8, 0x34235DC
	0x034235D8 BL 0x1C16DFC
	0x034235DC ADRP X0, 0xD0B000
	0x034235E0 LDR X0, [X0 + 0xD20]
	0x034235E4 BL 0x1C16D08
	0x034235E8 MOV X2, X0
	0x034235EC MOV X0, X19
	0x034235F0 MOV X1, X20
	0x034235F4 BL 0x26324C8
	0x034235F8 B 0x3423494
	0x034235FC MOVZ W0, 0x8
	0x03423600 BL 0x3EB1AF0
	0x03423604 LDR X8, [X20]
	0x03423608 STR X8, [X0]
	0x0342360C ADRP X1, 0xA91000
	0x03423610 ADD X1, X1, 0xE58
	0x03423614 MOV X2, X31
	0x03423618 BL 0x3EB1B00
	0x0342361C MOV X20, X0
	0x03423620 BL 0x3EB1AE0
	0x03423624 MOV X0, X20
	0x03423628 BL 0x1D2C690
	0x0342362C BL 0x1990590
	0x03423630 STR X30, [X31 - 0x30]!
	0x03423634 STP X22, X21, [X31 + 0x10]
	0x03423638 STP X20, X19, [X31 + 0x20]
	0x0342363C ADRP X22, 0xFBA000
	0x03423640 ADRP X21, 0xD0B000
	0x03423644 LDRB W8, [X22 + 0x628]
	0x03423648 LDR X21, [X21 + 0x5B0]
	0x0342364C MOV X19, X1
	0x03423650 MOV X20, X0
	0x03423654 TBNZ X8, 0x0, 0x3423678
	0x03423658 ADRP X0, 0xD0B000
	0x0342365C LDR X0, [X0 + 0xD28]
	0x03423660 BL 0x1C16CF4
	0x03423664 ADRP X0, 0xD0B000
	0x03423668 LDR X0, [X0 + 0x5B0]
	0x0342366C BL 0x1C16CF4
	0x03423670 MOVZ W8, 0x1
	0x03423674 STRB W8, [X22 + 0x628]
	0x03423678 LDR X0, [X21]
	0x0342367C ADRP X21, 0xD0B000
	0x03423680 LDR W8, [X0 + 0xE0]
	0x03423684 LDR X21, [X21 + 0xD28]
	0x03423688 CBNZ W8, 0x3423690
	0x0342368C BL 0x1C16DFC
	0x03423690 LDR X2, [X21]
	0x03423694 ADD X0, X20, 0x8
	0x03423698 MOV X1, X19
	0x0342369C LDP X20, X19, [X31 + 0x20]
	0x034236A0 LDP X22, X21, [X31 + 0x10]
	0x034236A4 LDR X30, [X31], #0x30
	0x034236A8 B 0x2632228
	0x034236AC SUB X31, X31, 0x80
	0x034236B0 STP X29, X30, [X31 + 0x20]
	0x034236B4 STP X28, X27, [X31 + 0x30]
	0x034236B8 STP X26, X25, [X31 + 0x40]
	0x034236BC STP X24, X23, [X31 + 0x50]
	0x034236C0 STP X22, X21, [X31 + 0x60]
	0x034236C4 STP X20, X19, [X31 + 0x70]
	0x034236C8 ADRP X20, 0xFBA000
	0x034236CC LDRB W8, [X20 + 0x629]
	0x034236D0 MOV X19, X0
	0x034236D4 TBNZ X8, 0x0, 0x3423830
	0x034236D8 ADRP X0, 0xD0B000
	0x034236DC LDR X0, [X0 + 0xD30]
	0x034236E0 BL 0x1C16CF4
	0x034236E4 ADRP X0, 0xD0B000
	0x034236E8 LDR X0, [X0 + 0xD38]
	0x034236EC BL 0x1C16CF4
	0x034236F0 ADRP X0, 0xD0B000
	0x034236F4 LDR X0, [X0 + 0x770]
	0x034236F8 BL 0x1C16CF4
	0x034236FC ADRP X0, 0xCD9000
	0x03423700 LDR X0, [X0 + 0x8D8]
	0x03423704 BL 0x1C16CF4
	0x03423708 ADRP X0, 0xCD1000
	0x0342370C LDR X0, [X0 + 0x810]
	0x03423710 BL 0x1C16CF4
	0x03423714 ADRP X0, 0xCD1000
	0x03423718 LDR X0, [X0 + 0x6C0]
	0x0342371C BL 0x1C16CF4
	0x03423720 ADRP X0, 0xCD1000
	0x03423724 LDR X0, [X0 + 0x6D0]
	0x03423728 BL 0x1C16CF4
	0x0342372C ADRP X0, 0xCD0000
	0x03423730 LDR X0, [X0 + 0xE00]
	0x03423734 BL 0x1C16CF4
	0x03423738 ADRP X0, 0xCD0000
	0x0342373C LDR X0, [X0 + 0xF70]
	0x03423740 BL 0x1C16CF4
	0x03423744 ADRP X0, 0xCD0000
	0x03423748 LDR X0, [X0 + 0xF78]
	0x0342374C BL 0x1C16CF4
	0x03423750 ADRP X0, 0xCD0000
	0x03423754 LDR X0, [X0 + 0xE18]
	0x03423758 BL 0x1C16CF4
	0x0342375C ADRP X0, 0xD0B000
	0x03423760 LDR X0, [X0 + 0x7B8]
	0x03423764 BL 0x1C16CF4
	0x03423768 ADRP X0, 0xD0B000
	0x0342376C LDR X0, [X0 + 0xD40]
	0x03423770 BL 0x1C16CF4
	0x03423774 ADRP X0, 0xCD0000
	0x03423778 LDR X0, [X0 + 0xAC8]
	0x0342377C BL 0x1C16CF4
	0x03423780 ADRP X0, 0xCD3000
	0x03423784 LDR X0, [X0 + 0x1E0]
	0x03423788 BL 0x1C16CF4
	0x0342378C ADRP X0, 0xCD3000
	0x03423790 LDR X0, [X0 + 0x1F0]
	0x03423794 BL 0x1C16CF4
	0x03423798 ADRP X0, 0xCD3000
	0x0342379C LDR X0, [X0 + 0x1F8]
	0x034237A0 BL 0x1C16CF4
	0x034237A4 ADRP X0, 0xCD9000
	0x034237A8 LDR X0, [X0 + 0x3A0]
	0x034237AC BL 0x1C16CF4
	0x034237B0 ADRP X0, 0xCD2000
	0x034237B4 LDR X0, [X0 + 0xA28]
	0x034237B8 BL 0x1C16CF4
	0x034237BC ADRP X0, 0xCF9000
	0x034237C0 LDR X0, [X0 + 0x4D0]
	0x034237C4 BL 0x1C16CF4
	0x034237C8 ADRP X0, 0xD0B000
	0x034237CC LDR X0, [X0 + 0xD48]
	0x034237D0 BL 0x1C16CF4
	0x034237D4 ADRP X0, 0xD0B000
	0x034237D8 LDR X0, [X0 + 0x7C0]
	0x034237DC BL 0x1C16CF4
	0x034237E0 ADRP X0, 0xD0B000
	0x034237E4 LDR X0, [X0 + 0x7C8]
	0x034237E8 BL 0x1C16CF4
	0x034237EC ADRP X0, 0xCD9000
	0x034237F0 LDR X0, [X0 + 0x720]
	0x034237F4 BL 0x1C16CF4
	0x034237F8 ADRP X0, 0xD0B000
	0x034237FC LDR X0, [X0 + 0xD50]
	0x03423800 BL 0x1C16CF4
	0x03423804 ADRP X0, 0xD0B000
	0x03423808 LDR X0, [X0 + 0x7D0]
	0x0342380C BL 0x1C16CF4
	0x03423810 ADRP X0, 0xD0B000
	0x03423814 LDR X0, [X0 + 0x7D8]
	0x03423818 BL 0x1C16CF4
	0x0342381C ADRP X0, 0xCD0000
	0x03423820 LDR X0, [X0 + 0x988]
	0x03423824 BL 0x1C16CF4
	0x03423828 MOVZ W8, 0x1
	0x0342382C STRB W8, [X20 + 0x629]
	0x03423830 STR X31, [X31 + 0x18]
	0x03423834 LDR W27, [X19]
	0x03423838 CBZ W27, 0x34238C4
	0x0342383C ADRP X8, 0xD0B000
	0x03423840 ADRP X9, 0xCD0000
	0x03423844 LDR X8, [X8 + 0xD48]
	0x03423848 LDR X9, [X9 + 0x988]
	0x0342384C LDR X20, [X19 + 0x38]
	0x03423850 LDR X21, [X19 + 0x20]
	0x03423854 LDR X22, [X8]
	0x03423858 LDR X25, [X9]
	0x0342385C CBNZ X21, 0x342387C
	0x03423860 ADRP X8, 0xCD0000
	0x03423864 LDR X8, [X8 + 0xAC8]
	0x03423868 LDR X0, [X8]
	0x0342386C MOV W1, W31
	0x03423870 BL 0x1C16D6C
	0x03423874 MOV X21, X0
	0x03423878 CBZ X0, 0x3424194
	0x0342387C ADRP X10, 0xCD0000
	0x03423880 LDR X8, [X21]
	0x03423884 LDR X10, [X10 + 0xF70]
	0x03423888 LDRH W9, [X8 + 0x12E]
	0x0342388C LDR X1, [X10]
	0x03423890 CBZ X9, 0x34238B4
	0x03423894 LDR X10, [X8 + 0xB0]
	0x03423898 ADD X10, X10, 0x8
	0x0342389C LDUR X11, [X10 - 0x8]
	0x034238A0 CMP X11, X1
	0x034238A4 B.EQ 0x342393C
	0x034238A8 SUBS X9, X9, 0x1
	0x034238AC ADD X10, X10, 0x10
	0x034238B0 B.NE 0x342389C
	0x034238B4 MOV X0, X21
	0x034238B8 MOV W2, W31
	0x034238BC BL 0x1C5C788
	0x034238C0 B 0x3423948
	0x034238C4 LDR X8, [X19 + 0x58]
	0x034238C8 MOVN W9, 0x0
	0x034238CC STR X8, [X31 + 0x18]
	0x034238D0 STR X31, [X19 + 0x58]
	0x034238D4 STR W9, [X19]
	0x034238D8 ADRP X8, 0xCD3000
	0x034238DC LDR X8, [X8 + 0x1E0]
	0x034238E0 ADD X0, X31, 0x18
	0x034238E4 LDR X1, [X8]
	0x034238E8 BL 0x2677474
	0x034238EC ADRP X8, 0xD0B000
	0x034238F0 LDR X8, [X8 + 0xD40]
	0x034238F4 LDR X1, [X8]
	0x034238F8 BL 0x220E6DC
	0x034238FC MOVN W8, 0x1
	0x03423900 STR W8, [X19], #0x8
	0x03423904 ADRP X8, 0xD0B000
	0x03423908 LDR X8, [X8 + 0x770]
	0x0342390C MOV X20, X0
	0x03423910 LDR X0, [X8]
	0x03423914 LDR W8, [X0 + 0xE0]
	0x03423918 CBNZ W8, 0x3423920
	0x0342391C BL 0x1C16DFC
	0x03423920 ADRP X8, 0xD0B000
	0x03423924 LDR X8, [X8 + 0xD38]
	0x03423928 MOV X0, X19
	0x0342392C MOV X1, X20
	0x03423930 LDR X2, [X8]
	0x03423934 BL 0x26322B0
	0x03423938 B 0x3424150
	0x0342393C LDRSW X9, [X10]
	0x03423940 ADD X8, X8, X9, 0x4, LSL
	0x03423944 ADD X0, X8, 0x138
	0x03423948 LDP X8, X1, [X0]
	0x0342394C MOV X0, X21
	0x03423950 BLR X8
	0x03423954 STP X22, X20, [X31 + 0x8]
	0x03423958 ADRP X28, 0xCD0000
	0x0342395C ADRP X29, 0xCD0000
	0x03423960 ADRP X22, 0xCD2000
	0x03423964 ADRP X26, 0xD0B000
	0x03423968 ADRP X20, 0xCD9000
	0x0342396C LDR X28, [X28 + 0xE18]
	0x03423970 LDR X29, [X29 + 0xF78]
	0x03423974 LDR X22, [X22 + 0xA28]
	0x03423978 LDR X26, [X26 + 0x7C0]
	0x0342397C LDR X20, [X20 + 0x720]
	0x03423980 MOV X24, X0
	0x03423984 MOV X0, X25
	0x03423988 CBZ X24, 0x3424170
	0x0342398C LDR X8, [X24]
	0x03423990 LDR X1, [X28]
	0x03423994 MOV X23, X0
	0x03423998 LDRH W9, [X8 + 0x12E]
	0x0342399C CBZ X9, 0x34239C0
	0x034239A0 LDR X10, [X8 + 0xB0]
	0x034239A4 ADD X10, X10, 0x8
	0x034239A8 LDUR X11, [X10 - 0x8]
	0x034239AC CMP X11, X1
	0x034239B0 B.EQ 0x34239D0
	0x034239B4 SUBS X9, X9, 0x1
	0x034239B8 ADD X10, X10, 0x10
	0x034239BC B.NE 0x34239A8
	0x034239C0 MOV X0, X24
	0x034239C4 MOV W2, W31
	0x034239C8 BL 0x1C5C788
	0x034239CC B 0x34239DC
	0x034239D0 LDRSW X9, [X10]
	0x034239D4 ADD X8, X8, X9, 0x4, LSL
	0x034239D8 ADD X0, X8, 0x138
	0x034239DC LDP X8, X1, [X0]
	0x034239E0 MOV X0, X24
	0x034239E4 BLR X8
	0x034239E8 TBZ X0, 0x0, 0x3423A80
	0x034239EC LDR X8, [X24]
	0x034239F0 LDR X1, [X29]
	0x034239F4 LDRH W9, [X8 + 0x12E]
	0x034239F8 CBZ X9, 0x3423A1C
	0x034239FC LDR X10, [X8 + 0xB0]
	0x03423A00 ADD X10, X10, 0x8
	0x03423A04 LDUR X11, [X10 - 0x8]
	0x03423A08 CMP X11, X1
	0x03423A0C B.EQ 0x3423A2C
	0x03423A10 SUBS X9, X9, 0x1
	0x03423A14 ADD X10, X10, 0x10
	0x03423A18 B.NE 0x3423A04
	0x03423A1C MOV X0, X24
	0x03423A20 MOV W2, W31
	0x03423A24 BL 0x1C5C788
	0x03423A28 B 0x3423A38
	0x03423A2C LDRSW X9, [X10]
	0x03423A30 ADD X8, X8, X9, 0x4, LSL
	0x03423A34 ADD X0, X8, 0x138
	0x03423A38 LDP X8, X1, [X0]
	0x03423A3C MOV X0, X24
	0x03423A40 BLR X8
	0x03423A44 MOV X21, X0
	0x03423A48 LDR X0, [X22]
	0x03423A4C LDR W8, [X0 + 0xE0]
	0x03423A50 CBNZ W8, 0x3423A58
	0x03423A54 BL 0x1C16DFC
	0x03423A58 MOV X0, X21
	0x03423A5C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFBB000
	014 Move W8, [X20+1571]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xD0C000
	021 Move X0, [X0+3240]
	022 Call 0x1C17CF4
	023 Move X0, 0xCD4000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCDA000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCD2000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCD2000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD2000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD0C000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD4000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCD4000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCD4000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCDA000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xD0C000
	054 Move X0, [X0+3248]
	055 Call 0x1C17CF4
	056 Move X0, 0xCFA000
	057 Move X0, [X0+1240]
	058 Call 0x1C17CF4
	059 Move X0, 0xD0C000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xD0C000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCD1000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1571], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCD4000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xD0C000
	086 Move X9, 0xCD1000
	087 Move X8, [X8+3248]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCDA000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCDA000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCFA000
	139 Move X9, 0xCD2000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCD2000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xD0C000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xD0C000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCD2000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xD0C000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCD4000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCD4000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCD4000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xD0C000
	269 Move X8, [X8+3240]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCD9000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xD0C000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xD0C000
	301 Move X0, [X0+3256]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCD1000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCD4000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA92000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03423A60 BL 0x3624D20
	0x03423A64 LDR X1, [X26]
	0x03423A68 LDR X3, [X20]
	0x03423A6C MOV X2, X0
	0x03423A70 MOV X0, X23
	0x03423A74 MOV X4, X31
	0x03423A78 BL 0x32277C4
	0x03423A7C B 0x3423988
	0x03423A80 MOV X25, X31
	0x03423A84 MOVZ W21, 0x6
	0x03423A88 TBZ X27, 0x1F, 0x3423AF0
	0x03423A8C CBZ X24, 0x3423AF0
	0x03423A90 ADRP X10, 0xCD0000
	0x03423A94 LDR X8, [X24]
	0x03423A98 LDR X10, [X10 + 0xE00]
	0x03423A9C LDRH W9, [X8 + 0x12E]
	0x03423AA0 LDR X1, [X10]
	0x03423AA4 CBZ X9, 0x3423AC8
	0x03423AA8 LDR X10, [X8 + 0xB0]
	0x03423AAC ADD X10, X10, 0x8
	0x03423AB0 LDUR X11, [X10 - 0x8]
	0x03423AB4 CMP X11, X1
	0x03423AB8 B.EQ 0x3423AD8
	0x03423ABC SUBS X9, X9, 0x1
	0x03423AC0 ADD X10, X10, 0x10
	0x03423AC4 B.NE 0x3423AB0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFBB000
	007 Move X22, 0xCD4000
	008 Move W8, [X21+1572]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD4000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1572], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

