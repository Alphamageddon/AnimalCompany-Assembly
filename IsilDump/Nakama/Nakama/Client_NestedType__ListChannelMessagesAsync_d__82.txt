Type: Nakama.Client/<ListChannelMessagesAsync>d__82

Method: System.Void MoveNext()

Disassembly:
	0x0345CA00 STR X31, [X19 + 0x68]
	0x0345CA04 STR W25, [X19]
	0x0345CA08 ADRP X8, 0xC98000
	0x0345CA0C LDR X8, [X8 + 0x830]
	0x0345CA10 ADD X0, X31, 0x30
	0x0345CA14 LDR X1, [X8]
	0x0345CA18 BL 0x2677474
	0x0345CA1C B 0x345CC78
	0x0345CA20 ADRP X8, 0xCD4000
	0x0345CA24 LDR X8, [X8 + 0x90]
	0x0345CA28 LDR X0, [X8]
	0x0345CA2C BL 0x1C16F10
	0x0345CA30 MOV X21, X0
	0x0345CA34 MOV X1, X31
	0x0345CA38 BL 0x344AA88
	0x0345CA3C STR X21, [X19 + 0x60]
	0x0345CA40 CBZ X21, 0x345D2F4
	0x0345CA44 LDR X8, [X19 + 0x20]
	0x0345CA48 STR X8, [X21 + 0x10]
	0x0345CA4C LDR X8, [X19 + 0x28]
	0x0345CA50 STR X8, [X21 + 0x18]
	0x0345CA54 LDR X8, [X19 + 0x30]
	0x0345CA58 STR X8, [X21 + 0x20]
	0x0345CA5C LDR W8, [X19 + 0x38]
	0x0345CA60 STR W8, [X21 + 0x28]
	0x0345CA64 LDUR X8, [X19 + 0x3C]
	0x0345CA68 STUR X8, [X21 + 0x2C]
	0x0345CA6C LDR X8, [X19 + 0x60]
	0x0345CA70 CBZ X8, 0x345D2F8
	0x0345CA74 LDR X9, [X19 + 0x48]
	0x0345CA78 STR X9, [X8 + 0x38]
	0x0345CA7C LDR X9, [X19 + 0x50]
	0x0345CA80 STR X9, [X8 + 0x40]
	0x0345CA84 CBZ X20, 0x345D2FC
	0x0345CA88 LDRB W8, [X20 + 0x10]
	0x0345CA8C CBZ W8, 0x345CC7C
	0x0345CA90 LDR X8, [X19 + 0x60]
	0x0345CA94 CBZ X8, 0x345D300
	0x0345CA98 LDR X21, [X8 + 0x18]
	0x0345CA9C CBZ X21, 0x345D304
	0x0345CAA0 ADRP X23, 0xC98000
	0x0345CAA4 LDR X8, [X21]
	0x0345CAA8 LDR X23, [X23 + 0x818]
	0x0345CAAC LDRH W9, [X8 + 0x12E]
	0x0345CAB0 LDR X1, [X23]
	0x0345CAB4 CBZ X9, 0x345CAD8
	0x0345CAB8 LDR X10, [X8 + 0xB0]
	0x0345CABC ADD X10, X10, 0x8
	0x0345CAC0 LDUR X11, [X10 - 0x8]
	0x0345CAC4 CMP X11, X1
	0x0345CAC8 B.EQ 0x345CAE8
	0x0345CACC SUBS X9, X9, 0x1
	0x0345CAD0 ADD X10, X10, 0x10
	0x0345CAD4 B.NE 0x345CAC0
	0x0345CAD8 MOVZ W2, 0x7
	0x0345CADC MOV X0, X21
	0x0345CAE0 BL 0x1C5C788
	0x0345CAE4 B 0x345CAF8
	0x0345CAE8 LDR W9, [X10]
	0x0345CAEC ADD W9, W9, 0x7
	0x0345CAF0 ADD X8, X8, W9, 0x4, SXTW
	0x0345CAF4 ADD X0, X8, 0x138
	0x0345CAF8 LDP X8, X1, [X0]
	0x0345CAFC MOV X0, X21
	0x0345CB00 BLR X8
	0x0345CB04 MOV X1, X31
	0x0345CB08 BL 0x32277A8
	0x0345CB0C TBNZ X0, 0x0, 0x345CC78
	0x0345CB10 LDR X8, [X19 + 0x60]
	0x0345CB14 CBZ X8, 0x345D308
	0x0345CB18 ADRP X9, 0xC98000
	0x0345CB1C LDR X9, [X9 + 0x9F0]
	0x0345CB20 LDR X21, [X8 + 0x18]
	0x0345CB24 LDR X0, [X9]
	0x0345CB28 LDR W9, [X0 + 0xE0]
	0x0345CB2C CBNZ W9, 0x345CB34
	0x0345CB30 BL 0x1C16DFC
	0x0345CB34 MOV X0, X31
	0x0345CB38 BL 0x33616A4
	0x0345CB3C ADRP X22, 0xC99000
	0x0345CB40 LDR X22, [X22 + 0xA10]
	0x0345CB44 MOV X8, X0
	0x0345CB48 STR X8, [X31 + 0x38]
	0x0345CB4C LDR X0, [X22]
	0x0345CB50 LDR W8, [X0 + 0xE0]
	0x0345CB54 CBNZ W8, 0x345CB60
	0x0345CB58 BL 0x1C16DFC
	0x0345CB5C LDR X0, [X22]
	0x0345CB60 LDR X8, [X0 + 0xB8]
	0x0345CB64 LDR X1, [X8]
	0x0345CB68 ADD X0, X31, 0x38
	0x0345CB6C MOV X2, X31
	0x0345CB70 BL 0x335FC68
	0x0345CB74 CBZ X21, 0x345D30C
	0x0345CB78 LDR X8, [X21]
	0x0345CB7C LDR X1, [X23]
	0x0345CB80 MOV X22, X0
	0x0345CB84 LDRH W9, [X8 + 0x12E]
	0x0345CB88 CBZ X9, 0x345CBAC
	0x0345CB8C LDR X10, [X8 + 0xB0]
	0x0345CB90 ADD X10, X10, 0x8
	0x0345CB94 LDUR X11, [X10 - 0x8]
	0x0345CB98 CMP X11, X1
	0x0345CB9C B.EQ 0x345CBBC
	0x0345CBA0 SUBS X9, X9, 0x1
	0x0345CBA4 ADD X10, X10, 0x10
	0x0345CBA8 B.NE 0x345CB94
	0x0345CBAC MOVZ W2, 0xB
	0x0345CBB0 MOV X0, X21
	0x0345CBB4 BL 0x1C5C788
	0x0345CBB8 B 0x345CBCC
	0x0345CBBC LDR W9, [X10]
	0x0345CBC0 ADD W9, W9, 0xB
	0x0345CBC4 ADD X8, X8, W9, 0x4, SXTW
	0x0345CBC8 ADD X0, X8, 0x138
	0x0345CBCC LDP X8, X2, [X0]
	0x0345CBD0 MOV X0, X21
	0x0345CBD4 MOV X1, X22
	0x0345CBD8 BLR X8
	0x0345CBDC TBZ X0, 0x0, 0x345CC78
	0x0345CBE0 LDR X8, [X19 + 0x60]
	0x0345CBE4 CBZ X8, 0x345D310
	0x0345CBE8 LDR X1, [X8 + 0x18]
	0x0345CBEC LDR X3, [X19 + 0x58]
	0x0345CBF0 LDR X4, [X8 + 0x40]
	0x0345CBF4 MOV X0, X20
	0x0345CBF8 MOV X2, X31
	0x0345CBFC MOV X5, X31
	0x0345CC00 BL 0x34440A8
	0x0345CC04 CBZ X0, 0x345D314
	0x0345CC08 ADRP X8, 0xC98000
	0x0345CC0C LDR X8, [X8 + 0x840]
	0x0345CC10 LDR X1, [X8]
	0x0345CC14 BL 0x269F5D0
	0x0345CC18 ADRP X8, 0xC98000
	0x0345CC1C LDR X8, [X8 + 0x838]
	0x0345CC20 STR X0, [X31 + 0x30]
	0x0345CC24 LDR X1, [X8]
	0x0345CC28 ADD X0, X31, 0x30
	0x0345CC2C BL 0x2677430
	0x0345CC30 TBNZ X0, 0x0, 0x345CA08
	0x0345CC34 STR W31, [X19]
	0x0345CC38 LDR X8, [X31 + 0x30]
	0x0345CC3C STR X8, [X19 + 0x68]
	0x0345CC40 ADRP X8, 0xCD2000
	0x0345CC44 LDR X8, [X8 + 0x510]
	0x0345CC48 LDR X0, [X8]
	0x0345CC4C LDR W8, [X0 + 0xE0]
	0x0345CC50 CBNZ W8, 0x345CC58
	0x0345CC54 BL 0x1C16DFC
	0x0345CC58 ADRP X8, 0xCD4000
	0x0345CC5C LDR X8, [X8 + 0x38]
	0x0345CC60 ADD X0, X19, 0x8
	0x0345CC64 LDR X3, [X8]
	0x0345CC68 ADD X1, X31, 0x30
	0x0345CC6C MOV X2, X19
	0x0345CC70 BL 0x1FBB660
	0x0345CC74 B 0x345D294
	0x0345CC78 CBZ X20, 0x345D2F0
	0x0345CC7C ADRP X8, 0xCD4000
	0x0345CC80 LDR X8, [X8 + 0x40]
	0x0345CC84 LDR X21, [X20 + 0x58]
	0x0345CC88 LDR X23, [X19 + 0x60]
	0x0345CC8C LDR X0, [X8]
	0x0345CC90 BL 0x1C16F10
	0x0345CC94 ADRP X8, 0xCD4000
	0x0345CC98 LDR X8, [X8 + 0x88]
	0x0345CC9C MOV X22, X0
	0x0345CCA0 LDR X2, [X8]
	0x0345CCA4 MOV X1, X23
	0x0345CCA8 MOV X3, X31
	0x0345CCAC BL 0x2D27AA8
	0x0345CCB0 LDR X8, [X19 + 0x60]
	0x0345CCB4 CBZ X8, 0x345D2E4
	0x0345CCB8 ADRP X9, 0xCD3000
	0x0345CCBC LDR X23, [X19 + 0x58]
	0x0345CCC0 LDR X9, [X9 + 0x7C8]
	0x0345CCC4 CBNZ X23, 0x345CCCC
	0x0345CCC8 LDR X23, [X20 + 0x18]
	0x0345CCCC LDR X20, [X8 + 0x18]
	0x0345CCD0 LDR X1, [X8 + 0x40]
	0x0345CCD4 LDR X2, [X9]
	0x0345CCD8 STP X31, X31, [X31 + 0x18]
	0x0345CCDC ADD X0, X31, 0x18
	0x0345CCE0 BL 0x242E368
	0x0345CCE4 ADRP X8, 0xCD3000
	0x0345CCE8 LDR X8, [X8 + 0x7D0]
	0x0345CCEC LDR X0, [X8]
	0x0345CCF0 BL 0x1C16F10
	0x0345CCF4 LDP X3, X4, [X31 + 0x18]
	0x0345CCF8 MOV X24, X0
	0x0345CCFC MOV X1, X20
	0x0345CD00 MOV X2, X23
	0x0345CD04 MOV X5, X31
	0x0345CD08 BL 0x3465404
	0x0345CD0C CBZ X21, 0x345D2E8
	0x0345CD10 ADRP X8, 0xCD4000
	0x0345CD14 LDR X8, [X8 + 0x68]
	0x0345CD18 LDR X3, [X8]
	0x0345CD1C MOV X0, X21
	0x0345CD20 MOV X1, X22
	0x0345CD24 MOV X2, X24
	0x0345CD28 BL 0x2243230
	0x0345CD2C CBZ X0, 0x345D2EC
	0x0345CD30 ADRP X8, 0xCD4000
	0x0345CD34 LDR X8, [X8 + 0x80]
	0x0345CD38 LDR X1, [X8]
	0x0345CD3C BL 0x269F5D0
	0x0345CD40 ADRP X8, 0xCD4000
	0x0345CD44 LDR X8, [X8 + 0x78]
	0x0345CD48 STR X0, [X31 + 0x28]
	0x0345CD4C LDR X1, [X8]
	0x0345CD50 ADD X0, X31, 0x28
	0x0345CD54 BL 0x2677430
	0x0345CD58 TBZ X0, 0x0, 0x345CDC0
	0x0345CD5C ADRP X8, 0xCD4000
	0x0345CD60 LDR X8, [X8 + 0x70]
	0x0345CD64 ADD X0, X31, 0x28
	0x0345CD68 LDR X1, [X8]
	0x0345CD6C BL 0x2677474
	0x0345CD70 MOV X20, X0
	0x0345CD74 CBZ X0, 0x345D2D0
	0x0345CD78 ADRP X10, 0xCD4000
	0x0345CD7C LDR X8, [X20]
	0x0345CD80 LDR X10, [X10 + 0x48]
	0x0345CD84 LDRH W9, [X8 + 0x12E]
	0x0345CD88 LDR X1, [X10]
	0x0345CD8C CBZ X9, 0x345CDB0
	0x0345CD90 LDR X10, [X8 + 0xB0]
	0x0345CD94 ADD X10, X10, 0x8
	0x0345CD98 LDUR X11, [X10 - 0x8]
	0x0345CD9C CMP X11, X1
	0x0345CDA0 B.EQ 0x345CE08
	0x0345CDA4 SUBS X9, X9, 0x1
	0x0345CDA8 ADD X10, X10, 0x10
	0x0345CDAC B.NE 0x345CD98
	0x0345CDB0 MOVZ W2, 0x1
	0x0345CDB4 MOV X0, X20
	0x0345CDB8 BL 0x1C5C788
	0x0345CDBC B 0x345CE18
	0x0345CDC0 MOVZ W8, 0x1
	0x0345CDC4 STR W8, [X19]
	0x0345CDC8 LDR X8, [X31 + 0x28]
	0x0345CDCC STR X8, [X19 + 0x70]
	0x0345CDD0 ADRP X8, 0xCD2000
	0x0345CDD4 LDR X8, [X8 + 0x510]
	0x0345CDD8 LDR X0, [X8]
	0x0345CDDC LDR W8, [X0 + 0xE0]
	0x0345CDE0 CBNZ W8, 0x345CDE8
	0x0345CDE4 BL 0x1C16DFC
	0x0345CDE8 ADRP X8, 0xCD4000
	0x0345CDEC LDR X8, [X8 + 0x30]
	0x0345CDF0 ADD X0, X19, 0x8
	0x0345CDF4 LDR X3, [X8]
	0x0345CDF8 ADD X1, X31, 0x28
	0x0345CDFC MOV X2, X19
	0x0345CE00 BL 0x1FBB660
	0x0345CE04 B 0x345D294
	0x0345CE08 LDR W9, [X10]
	0x0345CE0C ADD W9, W9, 0x1
	0x0345CE10 ADD X8, X8, W9, 0x4, SXTW
	0x0345CE14 ADD X0, X8, 0x138
	0x0345CE18 LDP X8, X1, [X0]
	0x0345CE1C MOV X0, X20
	0x0345CE20 BLR X8
	0x0345CE24 MOV X21, X0
	0x0345CE28 CBZ X0, 0x345D2D4
	0x0345CE2C ADRP X10, 0xCD4000
	0x0345CE30 LDR X8, [X21]
	0x0345CE34 LDR X10, [X10 + 0x50]
	0x0345CE38 LDRH W9, [X8 + 0x12E]
	0x0345CE3C LDR X1, [X10]
	0x0345CE40 CBZ X9, 0x345CE64
	0x0345CE44 LDR X10, [X8 + 0xB0]
	0x0345CE48 ADD X10, X10, 0x8
	0x0345CE4C LDUR X11, [X10 - 0x8]
	0x0345CE50 CMP X11, X1
	0x0345CE54 B.EQ 0x345CE74
	0x0345CE58 SUBS X9, X9, 0x1
	0x0345CE5C ADD X10, X10, 0x10
	0x0345CE60 B.NE 0x345CE4C
	0x0345CE64 MOV X0, X21
	0x0345CE68 MOV W2, W31
	0x0345CE6C BL 0x1C5C788
	0x0345CE70 B 0x345CE80
	0x0345CE74 LDRSW X9, [X10]
	0x0345CE78 ADD X8, X8, X9, 0x4, LSL
	0x0345CE7C ADD X0, X8, 0x138
	0x0345CE80 LDP X8, X1, [X0]
	0x0345CE84 MOV X0, X21
	0x0345CE88 BLR X8
	0x0345CE8C MOV X21, X0
	0x0345CE90 STR X20, [X31 + 0x8]
	0x0345CE94 STR W25, [X31 + 0x14]
	0x0345CE98 CBZ X0, 0x345D2D8
	0x0345CE9C ADRP X26, 0xC97000
	0x0345CEA0 ADRP X27, 0xCD4000
	0x0345CEA4 ADRP X28, 0xC98000
	0x0345CEA8 ADRP X29, 0xCD4000
	0x0345CEAC ADRP X25, 0xC97000
	0x0345CEB0 ADRP X20, 0xCD4000
	0x0345CEB4 LDR X26, [X26 + 0xE18]
	0x0345CEB8 LDR X27, [X27 + 0x58]
	0x0345CEBC LDR X28, [X28 + 0x818]
	0x0345CEC0 LDR X29, [X29 + 0x60]
	0x0345CEC4 LDR X25, [X25 + 0xF28]
	0x0345CEC8 LDR X20, [X20 + 0x28]
	0x0345CECC LDR X8, [X21]
	0x0345CED0 LDR X1, [X26]
	0x0345CED4 LDRH W9, [X8 + 0x12E]
	0x0345CED8 CBZ X9, 0x345CEFC
	0x0345CEDC LDR X10, [X8 + 0xB0]
	0x0345CEE0 ADD X10, X10, 0x8
	0x0345CEE4 LDUR X11, [X10 - 0x8]
	0x0345CEE8 CMP X11, X1
	0x0345CEEC B.EQ 0x345CF0C
	0x0345CEF0 SUBS X9, X9, 0x1
	0x0345CEF4 ADD X10, X10, 0x10
	0x0345CEF8 B.NE 0x345CEE4
	0x0345CEFC MOV X0, X21
	0x0345CF00 MOV W2, W31
	0x0345CF04 BL 0x1C5C788
	0x0345CF08 B 0x345CF18
	0x0345CF0C LDRSW X9, [X10]
	0x0345CF10 ADD X8, X8, X9, 0x4, LSL
	0x0345CF14 ADD X0, X8, 0x138
	0x0345CF18 LDP X8, X1, [X0]
	0x0345CF1C MOV X0, X21
	0x0345CF20 BLR X8
	0x0345CF24 TBZ X0, 0x0, 0x345D1D4
	0x0345CF28 LDR X8, [X21]
	0x0345CF2C LDR X1, [X27]
	0x0345CF30 LDRH W9, [X8 + 0x12E]
	0x0345CF34 CBZ X9, 0x345CF58
	0x0345CF38 LDR X10, [X8 + 0xB0]
	0x0345CF3C ADD X10, X10, 0x8
	0x0345CF40 LDUR X11, [X10 - 0x8]
	0x0345CF44 CMP X11, X1
	0x0345CF48 B.EQ 0x345CF68
	0x0345CF4C SUBS X9, X9, 0x1
	0x0345CF50 ADD X10, X10, 0x10
	0x0345CF54 B.NE 0x345CF40
	0x0345CF58 MOV X0, X21
	0x0345CF5C MOV W2, W31
	0x0345CF60 BL 0x1C5C788
	0x0345CF64 B 0x345CF74
	0x0345CF68 LDRSW X9, [X10]
	0x0345CF6C ADD X8, X8, X9, 0x4, LSL
	0x0345CF70 ADD X0, X8, 0x138
	0x0345CF74 LDP X8, X1, [X0]
	0x0345CF78 MOV X0, X21
	0x0345CF7C BLR X8
	0x0345CF80 LDR X8, [X19 + 0x60]
	0x0345CF84 CBZ X8, 0x345D2C0
	0x0345CF88 LDR X23, [X8 + 0x18]
	0x0345CF8C CBZ X23, 0x345D2C4
	0x0345CF90 LDR X8, [X23]
	0x0345CF94 LDR X1, [X28]
	0x0345CF98 MOV X22, X0
	0x0345CF9C LDRH W9, [X8 + 0x12E]
	0x0345CFA0 CBZ X9, 0x345CFC4
	0x0345CFA4 LDR X10, [X8 + 0xB0]
	0x0345CFA8 ADD X10, X10, 0x8
	0x0345CFAC LDUR X11, [X10 - 0x8]
	0x0345CFB0 CMP X11, X1
	0x0345CFB4 B.EQ 0x345CFD4
	0x0345CFB8 SUBS X9, X9, 0x1
	0x0345CFBC ADD X10, X10, 0x10
	0x0345CFC0 B.NE 0x345CFAC
	0x0345CFC4 MOVZ W2, 0xA
	0x0345CFC8 MOV X0, X23
	0x0345CFCC BL 0x1C5C788
	0x0345CFD0 B 0x345CFE4
	0x0345CFD4 LDR W9, [X10]
	0x0345CFD8 ADD W9, W9, 0xA
	0x0345CFDC ADD X8, X8, W9, 0x4, SXTW
	0x0345CFE0 ADD X0, X8, 0x138
	0x0345CFE4 LDP X8, X1, [X0]
	0x0345CFE8 MOV X0, X23
	0x0345CFEC BLR X8
	0x0345CFF0 CBZ X22, 0x345D2B8
	0x0345CFF4 LDR X8, [X22]
	0x0345CFF8 LDR X1, [X29]
	0x0345CFFC MOV X23, X0
	0x0345D000 LDRH W9, [X8 + 0x12E]
	0x0345D004 CBZ X9, 0x345D028
	0x0345D008 LDR X10, [X8 + 0xB0]
	0x0345D00C ADD X10, X10, 0x8
	0x0345D010 LDUR X11, [X10 - 0x8]
	0x0345D014 CMP X11, X1
	0x0345D018 B.EQ 0x345D038
	0x0345D01C SUBS X9, X9, 0x1
	0x0345D020 ADD X10, X10, 0x10
	0x0345D024 B.NE 0x345D010
	0x0345D028 MOVZ W2, 0x1
	0x0345D02C MOV X0, X22
	0x0345D030 BL 0x1C5C788
	0x0345D034 B 0x345D048
	0x0345D038 LDR W9, [X10]
	0x0345D03C ADD W9, W9, 0x1
	0x0345D040 ADD X8, X8, W9, 0x4, SXTW
	0x0345D044 ADD X0, X8, 0x138
	0x0345D048 LDP X8, X1, [X0]
	0x0345D04C MOV X0, X22
	0x0345D050 BLR X8
	0x0345D054 MOV X24, X0
	0x0345D058 CBZ X0, 0x345D2BC
	0x0345D05C LDR X8, [X24]
	0x0345D060 LDR X1, [X25]
	0x0345D064 LDRH W9, [X8 + 0x12E]
	0x0345D068 CBZ X9, 0x345D08C
	0x0345D06C LDR X10, [X8 + 0xB0]
	0x0345D070 ADD X10, X10, 0x8
	0x0345D074 LDUR X11, [X10 - 0x8]
	0x0345D078 CMP X11, X1
	0x0345D07C B.EQ 0x345D09C
	0x0345D080 SUBS X9, X9, 0x1
	0x0345D084 ADD X10, X10, 0x10
	0x0345D088 B.NE 0x345D074
	0x0345D08C MOVZ W2, 0x9
	0x0345D090 MOV X0, X24
	0x0345D094 BL 0x1C5C788
	0x0345D098 B 0x345D0AC
	0x0345D09C LDR W9, [X10]
	0x0345D0A0 ADD W9, W9, 0x9

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF82000
	011 Move W8, [X20+1953]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCD4000
	018 Move X0, [X0+3992]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD4000
	021 Move X0, [X0+4000]
	022 Call 0x1C17CF4
	023 Move X0, 0xCD3000
	024 Move X0, [X0+3824]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD3000
	027 Move X0, [X0+1048]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9A000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC99000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD4000
	036 Move X0, [X0+4008]
	037 Call 0x1C17CF4
	038 Move X0, 0xC99000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD4000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCD4000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCD4000
	048 Move X0, [X0+4016]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD4000
	051 Move X0, [X0+4024]
	052 Call 0x1C17CF4
	053 Move X0, 0xC99000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD4000
	057 Move X0, [X0+4032]
	058 Call 0x1C17CF4
	059 Move X0, 0xC99000
	060 Move X0, [X0+2104]
	061 Call 0x1C17CF4
	062 Move X0, 0xCD4000
	063 Move X0, [X0+4040]
	064 Call 0x1C17CF4
	065 Move X0, 0xC99000
	066 Move X0, [X0+2112]
	067 Call 0x1C17CF4
	068 Move X0, 0xCD4000
	069 Move X0, [X0+4048]
	070 Call 0x1C17CF4
	071 Move X0, 0xCD4000
	072 Move X0, [X0+4056]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1953], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCD3000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1048]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+104]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+104], X31
	092 Move [X19], W9
	093 Move X8, [X19+96]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+96], X31
	099 Move [X19], W9
	100 Move X8, 0xC99000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCD4000
	106 Move X8, [X8+4056]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass82_0..ctor, X0
	112 Move [X19+88], X21
	113 Compare X21, 0
	114 JumpIfEqual {389}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move W8, [X19+56]
	122 Move [X21+40], W8
	123 Move W8, [X19+60]
	124 Move [X21+44], W8
	125 Move X8, [X19+64]
	126 Move [X21+48], X8
	127 Move X8, [X19+72]
	128 Move [X21+56], X8
	129 Compare X20, 0
	130 JumpIfEqual {390}
	131 Move W8, [X20+16]
	132 Compare W8, 0
	133 JumpIfEqual {271}
	134 Move X8, [X19+88]
	135 Compare X8, 0
	136 JumpIfEqual {391}
	137 Move X21, [X8+24]
	138 Compare X21, 0
	139 JumpIfEqual {392}
	140 Move X23, 0xC99000
	141 Move X8, [X21]
	142 Move X23, [X23+2072]
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Move X1, [X23]
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move W2, 7
	154 Move X0, X21
	155 Call 0x1C5D788
	156 Move W9, [X10]
	157 Add W9, W9, 7
	158 Add X8, X8, W9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X1, [X0+8]
	162 Move X0, X21
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X1, X31
	165 Call String.IsNullOrEmpty, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {269}
	170 Move X8, [X19+88]
	171 Compare X8, 0
	172 JumpIfEqual {393}
	173 Move X9, 0xC99000
	174 Move X9, [X9+2544]
	175 Move X21, [X8+24]
	176 Move X0, [X9]
	177 Move W9, [X0+224]
	178 Compare W9, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X0, X31
	182 Call DateTime.get_UtcNow
	183 Move X22, 0xC9A000
	184 Move X22, [X22+2576]
	185 Move X8, X0
	186 Move [X31+40], X8
	187 Move X0, [X22]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {193}
	191 Call 0x1C17DFC
	192 Move X0, [X22]
	193 Move X8, [X0+184]
	194 Move X1, [X8]
	195 Add X0, X31, 40
	196 Move X2, X31
	197 Call DateTime.Add, X0, X1
	198 Compare X21, 0
	199 JumpIfEqual {394}
	200 Move X8, [X21]
	201 Move X1, [X23]
	202 Move X22, X0
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move W2, 11
	213 Move X0, X21
	214 Call 0x1C5D788
	215 Move W9, [X10]
	216 Add W9, W9, 11
	217 Add X8, X8, W9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X2, [X0+8]
	221 Move X0, X21
	222 Move X1, X22
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {269}
	228 Move X8, [X19+88]
	229 Compare X8, 0
	230 JumpIfEqual {395}
	231 Move X1, [X8+24]
	232 Move X3, [X19+80]
	233 Move X4, [X8+56]
	234 Move X0, X20
	235 Move X2, X31
	236 Move X5, X31
	237 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	238 Compare X0, 0
	239 JumpIfEqual {396}
	240 Move X8, 0xC99000
	241 Move X8, [X8+2112]
	242 Move X1, [X8]
	243 Call Task`1<Object>.GetAwaiter, X0
	244 Move X8, 0xC99000
	245 Move X8, [X8+2104]
	246 Move [X31+32], X0
	247 Move X1, [X8]
	248 Add X0, X31, 32
	249 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfEqual {100}
	254 Move [X19], W31
	255 Move X8, [X31+32]
	256 Move [X19+96], X8
	257 Move X0, [X25]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X8, 0xCD4000
	263 Move X8, [X8+4000]
	264 Add X0, X19, 8
	265 Move X3, [X8]
	266 Add X1, X31, 32
	267 Move X2, X19
	268 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	269 Compare X20, 0
	270 JumpIfEqual {388}
	271 Move X8, 0xCD4000
	272 Move X8, [X8+4008]
	273 Move X21, [X20+88]
	274 Move X23, [X19+88]
	275 Move X0, [X8]
	276 Call 0x1C17F10
	277 Move X8, 0xCD4000
	278 Move X8, [X8+4048]
	279 Move X22, X0
	280 Move X2, [X8]
	281 Move X1, X23
	282 Move X3, X31
	283 Call Func`1<Object>..ctor, X0, X1, X2
	284 Move X8, [X19+88]
	285 Compare X8, 0
	286 JumpIfEqual {385}
	287 Move X9, 0xCD4000
	288 Move X23, [X19+80]
	289 Move X9, [X9+1992]
	290 Compare X23, 0
	291 JumpIfNotEqual {293}
	292 Move X23, [X20+24]
	293 Move X20, [X8+24]
	294 Move X1, [X8+56]
	295 Move X2, [X9]
	296 Move [X31+8], X31
	297 Move [X31+16], X31
	298 Add X0, X31, 8
	299 Call Nullable`1<CancellationToken>..ctor, X0, X1
	300 Move X8, 0xCD4000
	301 Move X8, [X8+2000]
	302 Move X0, [X8]
	303 Call 0x1C17F10
	304 Move X3, [X31+8]
	305 Move X4, [X31+16]
	306 Move X24, X0
	307 Move X1, X20
	308 Move X2, X23
	309 Move X5, X31
	310 Call RetryHistory..ctor, X0, X1, X2, X3
	311 Compare X21, 0
	312 JumpIfEqual {386}
	313 Move X8, 0xCD4000
	314 Move X8, [X8+4016]
	315 Move X3, [X8]
	316 Move X0, X21
	317 Move X1, X22
	318 Move X2, X24
	319 Call 0x2244230, X0, X1, X2
	320 Compare X0, 0
	321 JumpIfEqual {387}
	322 Move X8, 0xCD4000
	323 Move X8, [X8+4040]
	324 Move X1, [X8]
	325 Call Task`1<Object>.GetAwaiter, X0
	326 Move X8, 0xCD4000
	327 Move X8, [X8+4032]
	328 Move [X31+24], X0
	329 Move X1, [X8]
	330 Add X0, X31, 24
	331 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	332 Move TEMP, X0
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfNotEqual {359}
	336 Move X8, 0xCD4000
	337 Move X8, [X8+4024]
	338 Add X0, X31, 24
	339 Move X1, [X8]
	340 Call TaskAwaiter`1<Object>.GetResult, X0
	341 Move TEMP, 1
	342 Not TEMP
	343 Move W8, TEMP
	344 Move [X19], W8
	345 Move [X19+88], X31
	346 Move X20, X0
	347 Move X0, [X25]
	348 Move X21, 0xCD3000
	349 Add X19, X19, 8
	350 Move W8, [X0+224]
	351 Move X21, [X21+3824]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 Move X2, [X21]
	356 Move X0, X19
	357 Move X1, X20
	358 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	359 Move W8, 1
	360 Move [X19], W8
	361 Move X8, [X31+24]
	362 Move [X19+104], X8
	363 Move X0, [X25]
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {368}
	367 Call 0x1C17DFC
	368 Move X8, 0xCD4000
	369 Move X8, [X8+3992]
	370 Add X0, X19, 8
	371 Move X3, [X8]
	372 Add X1, X31, 24
	373 Move X2, X19
	374 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	375 Move X20, [X31+96]
	376 Move X19, [X31+104]
	377 Move X22, [X31+80]
	378 Move X21, [X31+88]
	379 Move X24, [X31+64]
	380 Move X23, [X31+72]
	381 Move X30, [X31+48]
	382 Move X25, [X31+56]
	383 Add X31, X31, 112
	384 Return 
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Move X20, X0
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X0, X20
	400 Call 0x3EB2AD0
	401 Move X20, X0
	402 Move X0, 0xC97000
	403 Move X0, [X0+2000]
	404 Call 0x1C17D08
	405 Move X8, [X20]
	406 Move X1, [X8]
	407 Call 0x1C18270
	408 Move TEMP, X0
	409 And TEMP, TEMP, 1
	410 Compare TEMP, 1
	411 JumpIfNotEqual {433}
	412 Move X20, [X20]
	413 Call 0x3EB2AE0
	414 Move TEMP, 1
	415 Not TEMP
	416 Move W8, TEMP
	417 Move [X19+88], X31
	418 Move [X19+8], W8
	419 Move X0, 0xCD2000
	420 Move X0, [X0+1048]
	421 Call 0x1C17D08
	422 Move W8, [X0+224]
	423 Compare W8, 0
	424 JumpIfNotEqual {426}
	425 Call 0x1C17DFC
	426 Move X0, 0xCD2000
	427 Move X0, [X0+3896]
	428 Call 0x1C17D08
	429 Move X2, X0
	430 Move X0, X19
	431 Move X1, X20
	432 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	433 Move W0, 8
	434 Call 0x3EB2AF0
	435 Move X8, [X20]
	436 Move [X0], X8
	437 Move X1, 0xA58000
	438 Add X1, X1, 3672
	439 Move X2, X31
	440 Call 0x3EB2B00
	441 Move X20, X0
	442 Call 0x3EB2AE0
	443 Move X0, X20
	444 Call 0x1D2D690
	445 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345D0A4 ADD X8, X8, W9, 0x4, SXTW
	0x0345D0A8 ADD X0, X8, 0x138
	0x0345D0AC LDP X8, X1, [X0]
	0x0345D0B0 MOV X0, X24
	0x0345D0B4 BLR X8
	0x0345D0B8 MOV X1, X0
	0x0345D0BC CBZ X23, 0x345D2B4
	0x0345D0C0 MOV X0, X23
	0x0345D0C4 MOV X2, X31
	0x0345D0C8 BL 0x322693C
	0x0345D0CC TBZ X0, 0x0, 0x345CECC
	0x0345D0D0 LDR X8, [X22]
	0x0345D0D4 LDR X1, [X29]
	0x0345D0D8 LDRH W9, [X8 + 0x12E]
	0x0345D0DC CBZ X9, 0x345D100
	0x0345D0E0 LDR X10, [X8 + 0xB0]
	0x0345D0E4 ADD X10, X10, 0x8
	0x0345D0E8 LDUR X11, [X10 - 0x8]
	0x0345D0EC CMP X11, X1
	0x0345D0F0 B.EQ 0x345D110
	0x0345D0F4 SUBS X9, X9, 0x1
	0x0345D0F8 ADD X10, X10, 0x10
	0x0345D0FC B.NE 0x345D0E8
	0x0345D100 MOVZ W2, 0x1
	0x0345D104 MOV X0, X22
	0x0345D108 BL 0x1C5C788
	0x0345D10C B 0x345D120
	0x0345D110 LDR W9, [X10]
	0x0345D114 ADD W9, W9, 0x1
	0x0345D118 ADD X8, X8, W9, 0x4, SXTW
	0x0345D11C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF81000
	007 Move X21, 0xCD2000
	008 Move W8, [X22+1954]
	009 Move X21, [X21+1048]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCD2000
	017 Move X0, [X0+3904]
	018 Call 0x1C17CF4
	019 Move X0, 0xCD2000
	020 Move X0, [X0+1048]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1954], W8
	024 Move X0, [X21]
	025 Move X21, 0xCD2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3904]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

