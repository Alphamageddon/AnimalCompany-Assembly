Type: Nakama.Client/<ValidatePurchaseAppleAsync>d__119

Method: System.Void MoveNext()

Disassembly:
	0x0346D92C LDR X23, [X23 + 0x818]
	0x0346D930 LDRH W9, [X8 + 0x12E]
	0x0346D934 LDR X1, [X23]
	0x0346D938 CBZ X9, 0x346D95C
	0x0346D93C LDR X10, [X8 + 0xB0]
	0x0346D940 ADD X10, X10, 0x8
	0x0346D944 LDUR X11, [X10 - 0x8]
	0x0346D948 CMP X11, X1
	0x0346D94C B.EQ 0x346D96C
	0x0346D950 SUBS X9, X9, 0x1
	0x0346D954 ADD X10, X10, 0x10
	0x0346D958 B.NE 0x346D944
	0x0346D95C MOVZ W2, 0x7
	0x0346D960 MOV X0, X21
	0x0346D964 BL 0x1C5C788
	0x0346D968 B 0x346D97C
	0x0346D96C LDR W9, [X10]
	0x0346D970 ADD W9, W9, 0x7
	0x0346D974 ADD X8, X8, W9, 0x4, SXTW
	0x0346D978 ADD X0, X8, 0x138
	0x0346D97C LDP X8, X1, [X0]
	0x0346D980 MOV X0, X21
	0x0346D984 BLR X8
	0x0346D988 MOV X1, X31
	0x0346D98C BL 0x32277A8
	0x0346D990 TBNZ X0, 0x0, 0x346DAF4
	0x0346D994 LDR X8, [X19 + 0x50]
	0x0346D998 CBZ X8, 0x346DC9C
	0x0346D99C ADRP X9, 0xC87000
	0x0346D9A0 LDR X9, [X9 + 0x9F0]
	0x0346D9A4 LDR X21, [X8 + 0x18]
	0x0346D9A8 LDR X0, [X9]
	0x0346D9AC LDR W9, [X0 + 0xE0]
	0x0346D9B0 CBNZ W9, 0x346D9B8
	0x0346D9B4 BL 0x1C16DFC
	0x0346D9B8 MOV X0, X31
	0x0346D9BC BL 0x33616A4
	0x0346D9C0 ADRP X22, 0xC88000
	0x0346D9C4 LDR X22, [X22 + 0xA10]
	0x0346D9C8 MOV X8, X0
	0x0346D9CC STR X8, [X31 + 0x28]
	0x0346D9D0 LDR X0, [X22]
	0x0346D9D4 LDR W8, [X0 + 0xE0]
	0x0346D9D8 CBNZ W8, 0x346D9E4
	0x0346D9DC BL 0x1C16DFC
	0x0346D9E0 LDR X0, [X22]
	0x0346D9E4 LDR X8, [X0 + 0xB8]
	0x0346D9E8 LDR X1, [X8]
	0x0346D9EC ADD X0, X31, 0x28
	0x0346D9F0 MOV X2, X31
	0x0346D9F4 BL 0x335FC68
	0x0346D9F8 CBZ X21, 0x346DCA0
	0x0346D9FC LDR X8, [X21]
	0x0346DA00 LDR X1, [X23]
	0x0346DA04 MOV X22, X0
	0x0346DA08 LDRH W9, [X8 + 0x12E]
	0x0346DA0C CBZ X9, 0x346DA30
	0x0346DA10 LDR X10, [X8 + 0xB0]
	0x0346DA14 ADD X10, X10, 0x8
	0x0346DA18 LDUR X11, [X10 - 0x8]
	0x0346DA1C CMP X11, X1
	0x0346DA20 B.EQ 0x346DA40
	0x0346DA24 SUBS X9, X9, 0x1
	0x0346DA28 ADD X10, X10, 0x10
	0x0346DA2C B.NE 0x346DA18
	0x0346DA30 MOVZ W2, 0xB
	0x0346DA34 MOV X0, X21
	0x0346DA38 BL 0x1C5C788
	0x0346DA3C B 0x346DA50
	0x0346DA40 LDR W9, [X10]
	0x0346DA44 ADD W9, W9, 0xB
	0x0346DA48 ADD X8, X8, W9, 0x4, SXTW
	0x0346DA4C ADD X0, X8, 0x138
	0x0346DA50 LDP X8, X2, [X0]
	0x0346DA54 MOV X0, X21
	0x0346DA58 MOV X1, X22
	0x0346DA5C BLR X8
	0x0346DA60 TBZ X0, 0x0, 0x346DAF4
	0x0346DA64 LDR X8, [X19 + 0x50]
	0x0346DA68 CBZ X8, 0x346DCA4
	0x0346DA6C LDR X1, [X8 + 0x18]
	0x0346DA70 LDR X3, [X19 + 0x48]
	0x0346DA74 LDR X4, [X8 + 0x30]
	0x0346DA78 MOV X0, X20
	0x0346DA7C MOV X2, X31
	0x0346DA80 MOV X5, X31
	0x0346DA84 BL 0x34440A8
	0x0346DA88 CBZ X0, 0x346DCA8
	0x0346DA8C ADRP X8, 0xC87000
	0x0346DA90 LDR X8, [X8 + 0x840]
	0x0346DA94 LDR X1, [X8]
	0x0346DA98 BL 0x269F5D0
	0x0346DA9C ADRP X8, 0xC87000
	0x0346DAA0 LDR X8, [X8 + 0x838]
	0x0346DAA4 STR X0, [X31 + 0x20]
	0x0346DAA8 LDR X1, [X8]
	0x0346DAAC ADD X0, X31, 0x20
	0x0346DAB0 BL 0x2677430
	0x0346DAB4 TBNZ X0, 0x0, 0x346D8A4
	0x0346DAB8 STR W31, [X19]
	0x0346DABC LDR X8, [X31 + 0x20]
	0x0346DAC0 STR X8, [X19 + 0x58]
	0x0346DAC4 LDR X0, [X25]
	0x0346DAC8 LDR W8, [X0 + 0xE0]
	0x0346DACC CBNZ W8, 0x346DAD4
	0x0346DAD0 BL 0x1C16DFC
	0x0346DAD4 ADRP X8, 0xCC3000
	0x0346DAD8 LDR X8, [X8 + 0x650]
	0x0346DADC ADD X0, X19, 0x8
	0x0346DAE0 LDR X3, [X8]
	0x0346DAE4 ADD X1, X31, 0x20
	0x0346DAE8 MOV X2, X19
	0x0346DAEC BL 0x1FBDDDC
	0x0346DAF0 B 0x346DC64
	0x0346DAF4 CBZ X20, 0x346DC88
	0x0346DAF8 ADRP X8, 0xCC3000
	0x0346DAFC LDR X8, [X8 + 0x5F0]
	0x0346DB00 LDR X21, [X20 + 0x58]
	0x0346DB04 LDR X23, [X19 + 0x50]
	0x0346DB08 LDR X0, [X8]
	0x0346DB0C BL 0x1C16F10
	0x0346DB10 ADRP X8, 0xCC3000
	0x0346DB14 LDR X8, [X8 + 0x658]
	0x0346DB18 MOV X22, X0
	0x0346DB1C LDR X2, [X8]
	0x0346DB20 MOV X1, X23
	0x0346DB24 MOV X3, X31
	0x0346DB28 BL 0x2D27AA8
	0x0346DB2C LDR X8, [X19 + 0x50]
	0x0346DB30 CBZ X8, 0x346DC7C
	0x0346DB34 ADRP X9, 0xCC2000
	0x0346DB38 LDR X23, [X19 + 0x48]
	0x0346DB3C LDR X9, [X9 + 0x7C8]
	0x0346DB40 CBNZ X23, 0x346DB48
	0x0346DB44 LDR X23, [X20 + 0x18]
	0x0346DB48 LDR X20, [X8 + 0x18]
	0x0346DB4C LDR X1, [X8 + 0x30]
	0x0346DB50 LDR X2, [X9]
	0x0346DB54 STP X31, X31, [X31 + 0x8]
	0x0346DB58 ADD X0, X31, 0x8
	0x0346DB5C BL 0x242E368
	0x0346DB60 ADRP X8, 0xCC2000
	0x0346DB64 LDR X8, [X8 + 0x7D0]
	0x0346DB68 LDR X0, [X8]
	0x0346DB6C BL 0x1C16F10
	0x0346DB70 LDP X3, X4, [X31 + 0x8]
	0x0346DB74 MOV X24, X0
	0x0346DB78 MOV X1, X20
	0x0346DB7C MOV X2, X23
	0x0346DB80 BL 0x3465404
	0x0346DB84 CBZ X21, 0x346DC80
	0x0346DB88 ADRP X8, 0xCC3000
	0x0346DB8C LDR X8, [X8 + 0x5F8]
	0x0346DB90 LDR X3, [X8]
	0x0346DB94 MOV X0, X21
	0x0346DB98 MOV X1, X22
	0x0346DB9C MOV X2, X24
	0x0346DBA0 BL 0x2243230
	0x0346DBA4 CBZ X0, 0x346DC84
	0x0346DBA8 ADRP X8, 0xCC3000
	0x0346DBAC LDR X8, [X8 + 0x610]
	0x0346DBB0 LDR X1, [X8]
	0x0346DBB4 BL 0x269F5D0
	0x0346DBB8 ADRP X8, 0xCC3000
	0x0346DBBC LDR X8, [X8 + 0x608]
	0x0346DBC0 STR X0, [X31 + 0x18]
	0x0346DBC4 LDR X1, [X8]
	0x0346DBC8 ADD X0, X31, 0x18
	0x0346DBCC BL 0x2677430
	0x0346DBD0 TBZ X0, 0x0, 0x346DC28
	0x0346DBD4 ADRP X8, 0xCC3000
	0x0346DBD8 LDR X8, [X8 + 0x600]
	0x0346DBDC ADD X0, X31, 0x18
	0x0346DBE0 LDR X1, [X8]
	0x0346DBE4 BL 0x2677474
	0x0346DBE8 MOVN W8, 0x1
	0x0346DBEC STR W8, [X19]
	0x0346DBF0 STR X31, [X19 + 0x50]
	0x0346DBF4 MOV X20, X0
	0x0346DBF8 LDR X0, [X25]
	0x0346DBFC ADRP X21, 0xCC2000
	0x0346DC00 ADD X19, X19, 0x8
	0x0346DC04 LDR W8, [X0 + 0xE0]
	0x0346DC08 LDR X21, [X21 + 0x458]
	0x0346DC0C CBNZ W8, 0x346DC14
	0x0346DC10 BL 0x1C16DFC
	0x0346DC14 LDR X2, [X21]
	0x0346DC18 MOV X0, X19
	0x0346DC1C MOV X1, X20
	0x0346DC20 BL 0x26322B0
	0x0346DC24 B 0x346DC64
	0x0346DC28 MOVZ W8, 0x1
	0x0346DC2C STR W8, [X19]
	0x0346DC30 LDR X8, [X31 + 0x18]
	0x0346DC34 STR X8, [X19 + 0x60]
	0x0346DC38 LDR X0, [X25]
	0x0346DC3C LDR W8, [X0 + 0xE0]
	0x0346DC40 CBNZ W8, 0x346DC48
	0x0346DC44 BL 0x1C16DFC
	0x0346DC48 ADRP X8, 0xCC3000
	0x0346DC4C LDR X8, [X8 + 0x648]
	0x0346DC50 ADD X0, X19, 0x8
	0x0346DC54 LDR X3, [X8]
	0x0346DC58 ADD X1, X31, 0x18
	0x0346DC5C MOV X2, X19
	0x0346DC60 BL 0x1FBDDDC
	0x0346DC64 LDP X20, X19, [X31 + 0x60]
	0x0346DC68 LDP X22, X21, [X31 + 0x50]
	0x0346DC6C LDP X24, X23, [X31 + 0x40]
	0x0346DC70 LDP X30, X25, [X31 + 0x30]
	0x0346DC74 ADD X31, X31, 0x70
	0x0346DC78 RET
	0x0346DC7C BL 0x1C16F20
	0x0346DC80 BL 0x1C16F20
	0x0346DC84 BL 0x1C16F20
	0x0346DC88 BL 0x1C16F20
	0x0346DC8C BL 0x1C16F20
	0x0346DC90 BL 0x1C16F20
	0x0346DC94 BL 0x1C16F20
	0x0346DC98 BL 0x1C16F20
	0x0346DC9C BL 0x1C16F20
	0x0346DCA0 BL 0x1C16F20
	0x0346DCA4 BL 0x1C16F20
	0x0346DCA8 BL 0x1C16F20
	0x0346DCAC B 0x346DD20
	0x0346DCB0 B 0x346DD20
	0x0346DCB4 B 0x346DD20
	0x0346DCB8 B 0x346DD20
	0x0346DCBC B 0x346DD20
	0x0346DCC0 B 0x346DD20
	0x0346DCC4 B 0x346DD20
	0x0346DCC8 B 0x346DD20
	0x0346DCCC B 0x346DD20
	0x0346DCD0 B 0x346DD20
	0x0346DCD4 B 0x346DD20
	0x0346DCD8 B 0x346DD20
	0x0346DCDC B 0x346DD20
	0x0346DCE0 B 0x346DD20
	0x0346DCE4 B 0x346DD20
	0x0346DCE8 B 0x346DD20
	0x0346DCEC B 0x346DD20
	0x0346DCF0 B 0x346DD20
	0x0346DCF4 B 0x346DD20
	0x0346DCF8 B 0x346DD20
	0x0346DCFC B 0x346DD20
	0x0346DD00 B 0x346DD20
	0x0346DD04 B 0x346DD20
	0x0346DD08 B 0x346DD20
	0x0346DD0C B 0x346DD20
	0x0346DD10 B 0x346DD20
	0x0346DD14 B 0x346DD20
	0x0346DD18 B 0x346DD20
	0x0346DD1C B 0x346DD20
	0x0346DD20 MOV X20, X0
	0x0346DD24 CMP W1, 0x1
	0x0346DD28 B.NE 0x346DDC8
	0x0346DD2C MOV X0, X20
	0x0346DD30 BL 0x3EB1AD0
	0x0346DD34 MOV X20, X0
	0x0346DD38 ADRP X0, 0xC86000
	0x0346DD3C LDR X0, [X0 + 0x7D0]
	0x0346DD40 BL 0x1C16D08
	0x0346DD44 LDR X8, [X20]
	0x0346DD48 LDR X1, [X8]
	0x0346DD4C BL 0x1C17270
	0x0346DD50 TBZ X0, 0x0, 0x346DDA0
	0x0346DD54 LDR X20, [X20]
	0x0346DD58 BL 0x3EB1AE0
	0x0346DD5C MOVN W8, 0x1
	0x0346DD60 STR X31, [X19 + 0x50]
	0x0346DD64 STR W8, [X19], #0x8
	0x0346DD68 ADRP X0, 0xCC1000
	0x0346DD6C LDR X0, [X0 + 0x530]
	0x0346DD70 BL 0x1C16D08
	0x0346DD74 LDR W8, [X0 + 0xE0]
	0x0346DD78 CBNZ W8, 0x346DD80
	0x0346DD7C BL 0x1C16DFC
	0x0346DD80 ADRP X0, 0xCC2000
	0x0346DD84 LDR X0, [X0 + 0x478]
	0x0346DD88 BL 0x1C16D08
	0x0346DD8C MOV X2, X0
	0x0346DD90 MOV X0, X19
	0x0346DD94 MOV X1, X20
	0x0346DD98 BL 0x26324C8
	0x0346DD9C B 0x346DC64
	0x0346DDA0 MOVZ W0, 0x8
	0x0346DDA4 BL 0x3EB1AF0
	0x0346DDA8 LDR X8, [X20]
	0x0346DDAC STR X8, [X0]
	0x0346DDB0 ADRP X1, 0xA47000
	0x0346DDB4 ADD X1, X1, 0xE58
	0x0346DDB8 MOV X2, X31
	0x0346DDBC BL 0x3EB1B00
	0x0346DDC0 MOV X20, X0
	0x0346DDC4 BL 0x3EB1AE0
	0x0346DDC8 MOV X0, X20
	0x0346DDCC BL 0x1D2C690
	0x0346DDD0 BL 0x1990590
	0x0346DDD4 STR X30, [X31 - 0x30]!
	0x0346DDD8 STP X22, X21, [X31 + 0x10]
	0x0346DDDC STP X20, X19, [X31 + 0x20]
	0x0346DDE0 ADRP X22, 0xF70000
	0x0346DDE4 ADRP X21, 0xCC1000
	0x0346DDE8 LDRB W8, [X22 + 0x7E2]
	0x0346DDEC LDR X21, [X21 + 0x530]
	0x0346DDF0 MOV X19, X1
	0x0346DDF4 MOV X20, X0
	0x0346DDF8 TBNZ X8, 0x0, 0x346DE1C
	0x0346DDFC ADRP X0, 0xCC2000
	0x0346DE00 LDR X0, [X0 + 0x480]
	0x0346DE04 BL 0x1C16CF4
	0x0346DE08 ADRP X0, 0xCC1000
	0x0346DE0C LDR X0, [X0 + 0x530]
	0x0346DE10 BL 0x1C16CF4
	0x0346DE14 MOVZ W8, 0x1
	0x0346DE18 STRB W8, [X22 + 0x7E2]
	0x0346DE1C LDR X0, [X21]
	0x0346DE20 ADRP X21, 0xCC2000
	0x0346DE24 LDR W8, [X0 + 0xE0]
	0x0346DE28 LDR X21, [X21 + 0x480]
	0x0346DE2C CBNZ W8, 0x346DE34
	0x0346DE30 BL 0x1C16DFC
	0x0346DE34 LDR X2, [X21]
	0x0346DE38 ADD X0, X20, 0x8
	0x0346DE3C MOV X1, X19
	0x0346DE40 LDP X20, X19, [X31 + 0x20]
	0x0346DE44 LDP X22, X21, [X31 + 0x10]
	0x0346DE48 LDR X30, [X31], #0x30
	0x0346DE4C B 0x2632228
	0x0346DE50 SUB X31, X31, 0x70
	0x0346DE54 STP X30, X25, [X31 + 0x30]
	0x0346DE58 STP X24, X23, [X31 + 0x40]
	0x0346DE5C STP X22, X21, [X31 + 0x50]
	0x0346DE60 STP X20, X19, [X31 + 0x60]
	0x0346DE64 ADRP X20, 0xF70000
	0x0346DE68 LDRB W8, [X20 + 0x7E3]
	0x0346DE6C MOV X19, X0
	0x0346DE70 TBNZ X8, 0x0, 0x346DF60
	0x0346DE74 ADRP X0, 0xCC3000
	0x0346DE78 LDR X0, [X0 + 0x668]
	0x0346DE7C BL 0x1C16CF4
	0x0346DE80 ADRP X0, 0xCC3000
	0x0346DE84 LDR X0, [X0 + 0x670]
	0x0346DE88 BL 0x1C16CF4
	0x0346DE8C ADRP X0, 0xCC2000
	0x0346DE90 LDR X0, [X0 + 0x458]
	0x0346DE94 BL 0x1C16CF4
	0x0346DE98 ADRP X0, 0xCC1000
	0x0346DE9C LDR X0, [X0 + 0x530]
	0x0346DEA0 BL 0x1C16CF4
	0x0346DEA4 ADRP X0, 0xC88000
	0x0346DEA8 LDR X0, [X0 + 0xA10]
	0x0346DEAC BL 0x1C16CF4
	0x0346DEB0 ADRP X0, 0xC87000
	0x0346DEB4 LDR X0, [X0 + 0x9F0]
	0x0346DEB8 BL 0x1C16CF4
	0x0346DEBC ADRP X0, 0xCC3000
	0x0346DEC0 LDR X0, [X0 + 0x5F0]
	0x0346DEC4 BL 0x1C16CF4
	0x0346DEC8 ADRP X0, 0xC87000
	0x0346DECC LDR X0, [X0 + 0x818]
	0x0346DED0 BL 0x1C16CF4
	0x0346DED4 ADRP X0, 0xCC2000
	0x0346DED8 LDR X0, [X0 + 0x7C8]
	0x0346DEDC BL 0x1C16CF4
	0x0346DEE0 ADRP X0, 0xCC2000
	0x0346DEE4 LDR X0, [X0 + 0x7D0]
	0x0346DEE8 BL 0x1C16CF4
	0x0346DEEC ADRP X0, 0xCC3000
	0x0346DEF0 LDR X0, [X0 + 0x5F8]
	0x0346DEF4 BL 0x1C16CF4
	0x0346DEF8 ADRP X0, 0xCC3000
	0x0346DEFC LDR X0, [X0 + 0x600]
	0x0346DF00 BL 0x1C16CF4
	0x0346DF04 ADRP X0, 0xC87000
	0x0346DF08 LDR X0, [X0 + 0x830]
	0x0346DF0C BL 0x1C16CF4
	0x0346DF10 ADRP X0, 0xC87000
	0x0346DF14 LDR X0, [X0 + 0x838]
	0x0346DF18 BL 0x1C16CF4
	0x0346DF1C ADRP X0, 0xCC3000
	0x0346DF20 LDR X0, [X0 + 0x608]
	0x0346DF24 BL 0x1C16CF4
	0x0346DF28 ADRP X0, 0xC87000
	0x0346DF2C LDR X0, [X0 + 0x840]
	0x0346DF30 BL 0x1C16CF4
	0x0346DF34 ADRP X0, 0xCC3000
	0x0346DF38 LDR X0, [X0 + 0x610]
	0x0346DF3C BL 0x1C16CF4
	0x0346DF40 ADRP X0, 0xCC3000
	0x0346DF44 LDR X0, [X0 + 0x678]
	0x0346DF48 BL 0x1C16CF4
	0x0346DF4C ADRP X0, 0xCC3000
	0x0346DF50 LDR X0, [X0 + 0x680]
	0x0346DF54 BL 0x1C16CF4
	0x0346DF58 MOVZ W8, 0x1
	0x0346DF5C STRB W8, [X20 + 0x7E3]
	0x0346DF60 STP X31, X31, [X31 + 0x20]
	0x0346DF64 STR X31, [X31 + 0x18]
	0x0346DF68 ADRP X25, 0xCC1000
	0x0346DF6C LDR W8, [X19]
	0x0346DF70 LDR X20, [X19 + 0x20]
	0x0346DF74 LDR X25, [X25 + 0x530]
	0x0346DF78 CBZ W8, 0x346DF9C
	0x0346DF7C CMP W8, 0x1
	0x0346DF80 B.NE 0x346DFC8
	0x0346DF84 LDR X8, [X19 + 0x68]
	0x0346DF88 MOVN W9, 0x0
	0x0346DF8C STR X8, [X31 + 0x18]
	0x0346DF90 STR X31, [X19 + 0x68]
	0x0346DF94 STR W9, [X19]
	0x0346DF98 B 0x346E2E0
	0x0346DF9C LDR X8, [X19 + 0x60]
	0x0346DFA0 MOVN W9, 0x0
	0x0346DFA4 STR X8, [X31 + 0x20]
	0x0346DFA8 STR X31, [X19 + 0x60]
	0x0346DFAC STR W9, [X19]
	0x0346DFB0 ADRP X8, 0xC87000
	0x0346DFB4 LDR X8, [X8 + 0x830]
	0x0346DFB8 ADD X0, X31, 0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF71000
	011 Move W8, [X20+2013]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCC4000
	018 Move X0, [X0+1504]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC4000
	021 Move X0, [X0+1512]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC3000
	024 Move X0, [X0+1112]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC2000
	027 Move X0, [X0+1328]
	028 Call 0x1C17CF4
	029 Move X0, 0xC89000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC88000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC4000
	036 Move X0, [X0+1520]
	037 Call 0x1C17CF4
	038 Move X0, 0xC88000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC3000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC3000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC4000
	048 Move X0, [X0+1528]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC4000
	051 Move X0, [X0+1536]
	052 Call 0x1C17CF4
	053 Move X0, 0xC88000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC88000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCC4000
	060 Move X0, [X0+1544]
	061 Call 0x1C17CF4
	062 Move X0, 0xC88000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCC4000
	066 Move X0, [X0+1552]
	067 Call 0x1C17CF4
	068 Move X0, 0xCC4000
	069 Move X0, [X0+1560]
	070 Call 0x1C17CF4
	071 Move X0, 0xCC4000
	072 Move X0, [X0+1568]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2013], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCC2000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1328]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+96]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+96], X31
	092 Move [X19], W9
	093 Move X8, [X19+88]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+88], X31
	099 Move [X19], W9
	100 Move X8, 0xC88000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCC4000
	106 Move X8, [X8+1568]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass119_0..ctor, X0
	112 Move [X19+80], X21
	113 Compare X21, 0
	114 JumpIfEqual {384}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move W8, [X19+56]
	122 Move [X21+40], W8
	123 Move X8, [X19+64]
	124 Move [X21+48], X8
	125 Compare X20, 0
	126 JumpIfEqual {385}
	127 Move W8, [X20+16]
	128 Compare W8, 0
	129 JumpIfEqual {267}
	130 Move X8, [X19+80]
	131 Compare X8, 0
	132 JumpIfEqual {386}
	133 Move X21, [X8+24]
	134 Compare X21, 0
	135 JumpIfEqual {387}
	136 Move X23, 0xC88000
	137 Move X8, [X21]
	138 Move X23, [X23+2072]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X23]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 7
	150 Move X0, X21
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 7
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {265}
	166 Move X8, [X19+80]
	167 Compare X8, 0
	168 JumpIfEqual {388}
	169 Move X9, 0xC88000
	170 Move X9, [X9+2544]
	171 Move X21, [X8+24]
	172 Move X0, [X9]
	173 Move W9, [X0+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X31
	178 Call DateTime.get_UtcNow
	179 Move X22, 0xC89000
	180 Move X22, [X22+2576]
	181 Move X8, X0
	182 Move [X31+40], X8
	183 Move X0, [X22]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X22]
	189 Move X8, [X0+184]
	190 Move X1, [X8]
	191 Add X0, X31, 40
	192 Move X2, X31
	193 Call DateTime.Add, X0, X1
	194 Compare X21, 0
	195 JumpIfEqual {389}
	196 Move X8, [X21]
	197 Move X1, [X23]
	198 Move X22, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move W2, 11
	209 Move X0, X21
	210 Call 0x1C5D788
	211 Move W9, [X10]
	212 Add W9, W9, 11
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X21
	218 Move X1, X22
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {265}
	224 Move X8, [X19+80]
	225 Compare X8, 0
	226 JumpIfEqual {390}
	227 Move X1, [X8+24]
	228 Move X3, [X19+72]
	229 Move X4, [X8+48]
	230 Move X0, X20
	231 Move X2, X31
	232 Move X5, X31
	233 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	234 Compare X0, 0
	235 JumpIfEqual {391}
	236 Move X8, 0xC88000
	237 Move X8, [X8+2112]
	238 Move X1, [X8]
	239 Call Task`1<Object>.GetAwaiter, X0
	240 Move X8, 0xC88000
	241 Move X8, [X8+2104]
	242 Move [X31+32], X0
	243 Move X1, [X8]
	244 Add X0, X31, 32
	245 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {100}
	250 Move [X19], W31
	251 Move X8, [X31+32]
	252 Move [X19+88], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xCC4000
	259 Move X8, [X8+1512]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 32
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Compare X20, 0
	266 JumpIfEqual {383}
	267 Move X8, 0xCC4000
	268 Move X8, [X8+1520]
	269 Move X21, [X20+88]
	270 Move X23, [X19+80]
	271 Move X0, [X8]
	272 Call 0x1C17F10
	273 Move X8, 0xCC4000
	274 Move X8, [X8+1560]
	275 Move X22, X0
	276 Move X2, [X8]
	277 Move X1, X23
	278 Move X3, X31
	279 Call Func`1<Object>..ctor, X0, X1, X2
	280 Move X8, [X19+80]
	281 Compare X8, 0
	282 JumpIfEqual {380}
	283 Move X9, 0xCC3000
	284 Move X23, [X19+72]
	285 Move X9, [X9+1992]
	286 Compare X23, 0
	287 JumpIfNotEqual {289}
	288 Move X23, [X20+24]
	289 Move X20, [X8+24]
	290 Move X1, [X8+48]
	291 Move X2, [X9]
	292 Move [X31+8], X31
	293 Move [X31+16], X31
	294 Add X0, X31, 8
	295 Call Nullable`1<CancellationToken>..ctor, X0, X1
	296 Move X8, 0xCC3000
	297 Move X8, [X8+2000]
	298 Move X0, [X8]
	299 Call 0x1C17F10
	300 Move X3, [X31+8]
	301 Move X4, [X31+16]
	302 Move X24, X0
	303 Move X1, X20
	304 Move X2, X23
	305 Call RetryHistory..ctor, X0, X1, X2, X3
	306 Compare X21, 0
	307 JumpIfEqual {381}
	308 Move X8, 0xCC4000
	309 Move X8, [X8+1528]
	310 Move X3, [X8]
	311 Move X0, X21
	312 Move X1, X22
	313 Move X2, X24
	314 Call 0x2244230, X0, X1, X2
	315 Compare X0, 0
	316 JumpIfEqual {382}
	317 Move X8, 0xCC4000
	318 Move X8, [X8+1552]
	319 Move X1, [X8]
	320 Call Task`1<Object>.GetAwaiter, X0
	321 Move X8, 0xCC4000
	322 Move X8, [X8+1544]
	323 Move [X31+24], X0
	324 Move X1, [X8]
	325 Add X0, X31, 24
	326 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {354}
	331 Move X8, 0xCC4000
	332 Move X8, [X8+1536]
	333 Add X0, X31, 24
	334 Move X1, [X8]
	335 Call TaskAwaiter`1<Object>.GetResult, X0
	336 Move TEMP, 1
	337 Not TEMP
	338 Move W8, TEMP
	339 Move [X19], W8
	340 Move [X19+80], X31
	341 Move X20, X0
	342 Move X0, [X25]
	343 Move X21, 0xCC3000
	344 Add X19, X19, 8
	345 Move W8, [X0+224]
	346 Move X21, [X21+1112]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X2, [X21]
	351 Move X0, X19
	352 Move X1, X20
	353 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	354 Move W8, 1
	355 Move [X19], W8
	356 Move X8, [X31+24]
	357 Move [X19+96], X8
	358 Move X0, [X25]
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X8, 0xCC4000
	364 Move X8, [X8+1504]
	365 Add X0, X19, 8
	366 Move X3, [X8]
	367 Add X1, X31, 24
	368 Move X2, X19
	369 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	370 Move X20, [X31+96]
	371 Move X19, [X31+104]
	372 Move X22, [X31+80]
	373 Move X21, [X31+88]
	374 Move X24, [X31+64]
	375 Move X23, [X31+72]
	376 Move X30, [X31+48]
	377 Move X25, [X31+56]
	378 Add X31, X31, 112
	379 Return 
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Move X20, X0
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X0, X20
	395 Call 0x3EB2AD0
	396 Move X20, X0
	397 Move X0, 0xC87000
	398 Move X0, [X0+2000]
	399 Call 0x1C17D08
	400 Move X8, [X20]
	401 Move X1, [X8]
	402 Call 0x1C18270
	403 Move TEMP, X0
	404 And TEMP, TEMP, 1
	405 Compare TEMP, 1
	406 JumpIfNotEqual {428}
	407 Move X20, [X20]
	408 Call 0x3EB2AE0
	409 Move TEMP, 1
	410 Not TEMP
	411 Move W8, TEMP
	412 Move [X19+80], X31
	413 Move [X19+8], W8
	414 Move X0, 0xCC2000
	415 Move X0, [X0+1328]
	416 Call 0x1C17D08
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Move X0, 0xCC3000
	422 Move X0, [X0+1144]
	423 Call 0x1C17D08
	424 Move X2, X0
	425 Move X0, X19
	426 Move X1, X20
	427 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	428 Move W0, 8
	429 Call 0x3EB2AF0
	430 Move X8, [X20]
	431 Move [X0], X8
	432 Move X1, 0xA48000
	433 Add X1, X1, 3672
	434 Move X2, X31
	435 Call 0x3EB2B00
	436 Move X20, X0
	437 Call 0x3EB2AE0
	438 Move X0, X20
	439 Call 0x1D2D690
	440 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346DFBC LDR X1, [X8]
	0x0346DFC0 BL 0x2677474
	0x0346DFC4 B 0x346E200
	0x0346DFC8 ADRP X8, 0xCC3000
	0x0346DFCC LDR X8, [X8 + 0x680]
	0x0346DFD0 LDR X0, [X8]
	0x0346DFD4 BL 0x1C16F10
	0x0346DFD8 MOV X21, X0
	0x0346DFDC MOV X1, X31
	0x0346DFE0 BL 0x34470B4
	0x0346DFE4 STR X21, [X19 + 0x58]
	0x0346DFE8 CBZ X21, 0x346E398
	0x0346DFEC LDR X8, [X19 + 0x20]
	0x0346DFF0 STR X8, [X21 + 0x10]
	0x0346DFF4 LDR X8, [X19 + 0x28]
	0x0346DFF8 STR X8, [X21 + 0x18]
	0x0346DFFC LDR V0, [X19 + 0x3]
	0x0346E000 STR V0, [X21 + 0x2]
	0x0346E004 LDRB W8, [X19 + 0x40]
	0x0346E008 STRB W8, [X21 + 0x30]
	0x0346E00C LDR X8, [X19 + 0x48]
	0x0346E010 STR X8, [X21 + 0x38]
	0x0346E014 CBZ X20, 0x346E39C
	0x0346E018 LDRB W8, [X20 + 0x10]
	0x0346E01C CBZ W8, 0x346E204
	0x0346E020 LDR X8, [X19 + 0x58]
	0x0346E024 CBZ X8, 0x346E3A0
	0x0346E028 LDR X21, [X8 + 0x18]
	0x0346E02C CBZ X21, 0x346E3A4
	0x0346E030 ADRP X23, 0xC86000
	0x0346E034 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF71000
	007 Move X21, 0xCC2000
	008 Move W8, [X22+2014]
	009 Move X21, [X21+1328]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC3000
	017 Move X0, [X0+1152]
	018 Call 0x1C17CF4
	019 Move X0, 0xCC2000
	020 Move X0, [X0+1328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2014], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1152]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

