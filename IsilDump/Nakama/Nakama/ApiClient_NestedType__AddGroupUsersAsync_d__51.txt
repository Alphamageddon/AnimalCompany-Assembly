Type: Nakama.ApiClient/<AddGroupUsersAsync>d__51

Method: System.Void MoveNext()

Disassembly:
	0x03414ED8 B 0x3414F10
	0x03414EDC B 0x3414F10
	0x03414EE0 B 0x3414F10
	0x03414EE4 B 0x3414F10
	0x03414EE8 B 0x3414F10
	0x03414EEC B 0x3414F10
	0x03414EF0 B 0x3414F10
	0x03414EF4 B 0x3414F10
	0x03414EF8 B 0x3414F10
	0x03414EFC B 0x3414F10
	0x03414F00 B 0x3414F10
	0x03414F04 B 0x3414F10
	0x03414F08 B 0x3414F10
	0x03414F0C B 0x3414F10
	0x03414F10 MOV X20, X0
	0x03414F14 CMP W1, 0x1
	0x03414F18 B.NE 0x3414FB4
	0x03414F1C MOV X0, X20
	0x03414F20 BL 0x3EB1AD0
	0x03414F24 MOV X20, X0
	0x03414F28 ADRP X0, 0xCDF000
	0x03414F2C LDR X0, [X0 + 0x7D0]
	0x03414F30 BL 0x1C16D08
	0x03414F34 LDR X8, [X20]
	0x03414F38 LDR X1, [X8]
	0x03414F3C BL 0x1C17270
	0x03414F40 TBZ X0, 0x0, 0x3414F8C
	0x03414F44 LDR X20, [X20]
	0x03414F48 BL 0x3EB1AE0
	0x03414F4C MOVN W8, 0x1
	0x03414F50 STR W8, [X19], #0x8
	0x03414F54 ADRP X0, 0xD1A000
	0x03414F58 LDR X0, [X0 + 0x320]
	0x03414F5C BL 0x1C16D08
	0x03414F60 LDR W8, [X0 + 0xE0]
	0x03414F64 CBNZ W8, 0x3414F6C
	0x03414F68 BL 0x1C16DFC
	0x03414F6C ADRP X0, 0xD1A000
	0x03414F70 LDR X0, [X0 + 0x868]
	0x03414F74 BL 0x1C16D08
	0x03414F78 MOV X2, X0
	0x03414F7C MOV X0, X19
	0x03414F80 MOV X1, X20
	0x03414F84 BL 0x26324C8
	0x03414F88 B 0x3414DE4
	0x03414F8C MOVZ W0, 0x8
	0x03414F90 BL 0x3EB1AF0
	0x03414F94 LDR X8, [X20]
	0x03414F98 STR X8, [X0]
	0x03414F9C ADRP X1, 0xAA0000
	0x03414FA0 ADD X1, X1, 0xE58
	0x03414FA4 MOV X2, X31
	0x03414FA8 BL 0x3EB1B00
	0x03414FAC MOV X20, X0
	0x03414FB0 BL 0x3EB1AE0
	0x03414FB4 MOV X0, X20
	0x03414FB8 BL 0x1D2C690
	0x03414FBC BL 0x1990590
	0x03414FC0 STR X30, [X31 - 0x30]!
	0x03414FC4 STP X22, X21, [X31 + 0x10]
	0x03414FC8 STP X20, X19, [X31 + 0x20]
	0x03414FCC ADRP X22, 0xFC9000
	0x03414FD0 ADRP X21, 0xD1A000
	0x03414FD4 LDRB W8, [X22 + 0x5C6]
	0x03414FD8 LDR X21, [X21 + 0x320]
	0x03414FDC MOV X19, X1
	0x03414FE0 MOV X20, X0
	0x03414FE4 TBNZ X8, 0x0, 0x3415008
	0x03414FE8 ADRP X0, 0xD1A000
	0x03414FEC LDR X0, [X0 + 0x870]
	0x03414FF0 BL 0x1C16CF4
	0x03414FF4 ADRP X0, 0xD1A000
	0x03414FF8 LDR X0, [X0 + 0x320]
	0x03414FFC BL 0x1C16CF4
	0x03415000 MOVZ W8, 0x1
	0x03415004 STRB W8, [X22 + 0x5C6]
	0x03415008 LDR X0, [X21]
	0x0341500C ADRP X21, 0xD19000
	0x03415010 LDR W8, [X0 + 0xE0]
	0x03415014 LDR X21, [X21 + 0x870]
	0x03415018 CBNZ W8, 0x3415020
	0x0341501C BL 0x1C16DFC
	0x03415020 LDR X2, [X21]
	0x03415024 ADD X0, X20, 0x8
	0x03415028 MOV X1, X19
	0x0341502C LDP X20, X19, [X31 + 0x20]
	0x03415030 LDP X22, X21, [X31 + 0x10]
	0x03415034 LDR X30, [X31], #0x30
	0x03415038 B 0x2632228
	0x0341503C SUB X31, X31, 0x70
	0x03415040 STR X30, [X31 + 0x10]
	0x03415044 STP X28, X27, [X31 + 0x20]
	0x03415048 STP X26, X25, [X31 + 0x30]
	0x0341504C STP X24, X23, [X31 + 0x40]
	0x03415050 STP X22, X21, [X31 + 0x50]
	0x03415054 STP X20, X19, [X31 + 0x60]
	0x03415058 ADRP X20, 0xFC8000
	0x0341505C LDRB W8, [X20 + 0x5C7]
	0x03415060 MOV X19, X0
	0x03415064 TBNZ X8, 0x0, 0x34151A8
	0x03415068 ADRP X0, 0xD19000
	0x0341506C LDR X0, [X0 + 0x878]
	0x03415070 BL 0x1C16CF4
	0x03415074 ADRP X0, 0xD19000
	0x03415078 LDR X0, [X0 + 0x820]
	0x0341507C BL 0x1C16CF4
	0x03415080 ADRP X0, 0xD19000
	0x03415084 LDR X0, [X0 + 0x320]
	0x03415088 BL 0x1C16CF4
	0x0341508C ADRP X0, 0xCE7000
	0x03415090 LDR X0, [X0 + 0x8D8]
	0x03415094 BL 0x1C16CF4
	0x03415098 ADRP X0, 0xCE7000
	0x0341509C LDR X0, [X0 + 0x9E8]
	0x034150A0 BL 0x1C16CF4
	0x034150A4 ADRP X0, 0xCDF000
	0x034150A8 LDR X0, [X0 + 0x810]
	0x034150AC BL 0x1C16CF4
	0x034150B0 ADRP X0, 0xCDF000
	0x034150B4 LDR X0, [X0 + 0x6C0]
	0x034150B8 BL 0x1C16CF4
	0x034150BC ADRP X0, 0xCDF000
	0x034150C0 LDR X0, [X0 + 0x6D0]
	0x034150C4 BL 0x1C16CF4
	0x034150C8 ADRP X0, 0xD19000
	0x034150CC LDR X0, [X0 + 0x7B8]
	0x034150D0 BL 0x1C16CF4
	0x034150D4 ADRP X0, 0xD19000
	0x034150D8 LDR X0, [X0 + 0x828]
	0x034150DC BL 0x1C16CF4
	0x034150E0 ADRP X0, 0xD19000
	0x034150E4 LDR X0, [X0 + 0x830]
	0x034150E8 BL 0x1C16CF4
	0x034150EC ADRP X0, 0xCE2000
	0x034150F0 LDR X0, [X0 + 0xBF0]
	0x034150F4 BL 0x1C16CF4
	0x034150F8 ADRP X0, 0xCE1000
	0x034150FC LDR X0, [X0 + 0x1E0]
	0x03415100 BL 0x1C16CF4
	0x03415104 ADRP X0, 0xCE1000
	0x03415108 LDR X0, [X0 + 0x1F0]
	0x0341510C BL 0x1C16CF4
	0x03415110 ADRP X0, 0xCE1000
	0x03415114 LDR X0, [X0 + 0x1F8]
	0x03415118 BL 0x1C16CF4
	0x0341511C ADRP X0, 0xCE7000
	0x03415120 LDR X0, [X0 + 0x3A0]
	0x03415124 BL 0x1C16CF4
	0x03415128 ADRP X0, 0xCE0000
	0x0341512C LDR X0, [X0 + 0xA28]
	0x03415130 BL 0x1C16CF4
	0x03415134 ADRP X0, 0xD19000
	0x03415138 LDR X0, [X0 + 0x840]
	0x0341513C BL 0x1C16CF4
	0x03415140 ADRP X0, 0xD07000
	0x03415144 LDR X0, [X0 + 0x4D8]
	0x03415148 BL 0x1C16CF4
	0x0341514C ADRP X0, 0xD19000
	0x03415150 LDR X0, [X0 + 0x848]
	0x03415154 BL 0x1C16CF4
	0x03415158 ADRP X0, 0xCE7000
	0x0341515C LDR X0, [X0 + 0x988]
	0x03415160 BL 0x1C16CF4
	0x03415164 ADRP X0, 0xCE7000
	0x03415168 LDR X0, [X0 + 0x720]
	0x0341516C BL 0x1C16CF4
	0x03415170 ADRP X0, 0xD19000
	0x03415174 LDR X0, [X0 + 0x7D0]
	0x03415178 BL 0x1C16CF4
	0x0341517C ADRP X0, 0xD19000
	0x03415180 LDR X0, [X0 + 0x850]
	0x03415184 BL 0x1C16CF4
	0x03415188 ADRP X0, 0xD19000
	0x0341518C LDR X0, [X0 + 0x880]
	0x03415190 BL 0x1C16CF4
	0x03415194 ADRP X0, 0xCDE000
	0x03415198 LDR X0, [X0 + 0x988]
	0x0341519C BL 0x1C16CF4
	0x034151A0 MOVZ W8, 0x1
	0x034151A4 STRB W8, [X20 + 0x5C7]
	0x034151A8 STR X31, [X31 + 0x18]
	0x034151AC ADRP X28, 0xD19000
	0x034151B0 LDR W8, [X19]
	0x034151B4 LDR X28, [X28 + 0x320]
	0x034151B8 CBZ W8, 0x34154BC
	0x034151BC LDR X8, [X19 + 0x20]
	0x034151C0 CBZ X8, 0x34155F4
	0x034151C4 ADRP X8, 0xD19000
	0x034151C8 ADRP X9, 0xCDE000
	0x034151CC LDR X8, [X8 + 0x880]
	0x034151D0 LDR X9, [X9 + 0x988]
	0x034151D4 MOV X0, X19
	0x034151D8 LDR X25, [X19 + 0x38]
	0x034151DC LDR X21, [X8]
	0x034151E0 LDR X20, [X9]
	0x034151E4 LDRB W8, [X0 + 0x28]!
	0x034151E8 CBZ W8, 0x3415234
	0x034151EC ADRP X8, 0xD19000
	0x034151F0 LDR X8, [X8 + 0x830]
	0x034151F4 LDR X1, [X8]
	0x034151F8 BL 0x242D714
	0x034151FC CBZ X0, 0x3415660
	0x03415200 MOV X1, X31
	0x03415204 BL 0x322B5E4
	0x03415208 ADRP X8, 0xD19000
	0x0341520C LDR X8, [X8 + 0x840]
	0x03415210 ADRP X9, 0xCE7000
	0x03415214 LDR X9, [X9 + 0x720]
	0x03415218 MOV X2, X0
	0x0341521C LDR X1, [X8]
	0x03415220 LDR X3, [X9]
	0x03415224 MOV X0, X20
	0x03415228 MOV X4, X31
	0x0341522C BL 0x32277C4
	0x03415230 MOV X20, X0
	0x03415234 LDR X22, [X19 + 0x30]
	0x03415238 CBZ X22, 0x341528C
	0x0341523C ADRP X8, 0xCE0000
	0x03415240 LDR X8, [X8 + 0xA28]
	0x03415244 LDR X0, [X8]
	0x03415248 LDR W8, [X0 + 0xE0]
	0x0341524C CBNZ W8, 0x3415254
	0x03415250 BL 0x1C16DFC
	0x03415254 MOV X0, X22
	0x03415258 MOV X1, X31
	0x0341525C BL 0x3624D20
	0x03415260 ADRP X8, 0xD19000
	0x03415264 LDR X8, [X8 + 0x848]
	0x03415268 ADRP X9, 0xCE7000
	0x0341526C LDR X9, [X9 + 0x720]
	0x03415270 MOV X2, X0
	0x03415274 LDR X1, [X8]
	0x03415278 LDR X3, [X9]
	0x0341527C MOV X0, X20
	0x03415280 MOV X4, X31
	0x03415284 BL 0x32277C4
	0x03415288 MOV X20, X0
	0x0341528C CBZ X25, 0x341563C
	0x03415290 LDR X0, [X25 + 0x20]
	0x03415294 CBZ X0, 0x3415640
	0x03415298 MOV X1, X31
	0x0341529C BL 0x361B448
	0x034152A0 ADRP X8, 0xCE7000
	0x034152A4 LDR X8, [X8 + 0x8D8]
	0x034152A8 MOV X22, X0
	0x034152AC LDR X0, [X8]
	0x034152B0 MOVZ W1, 0x1
	0x034152B4 BL 0x1C16D6C
	0x034152B8 MOV X1, X0
	0x034152BC CBZ X1, 0x3415644
	0x034152C0 LDR W8, [X1 + 0x18]
	0x034152C4 CBZ W8, 0x3415648
	0x034152C8 MOVZ W8, 0x2F
	0x034152CC STRH W8, [X1 + 0x20]
	0x034152D0 CBZ X22, 0x341564C
	0x034152D4 MOV X0, X22
	0x034152D8 MOV X2, X31
	0x034152DC BL 0x322BC58
	0x034152E0 MOV X1, X21
	0x034152E4 MOV X2, X31
	0x034152E8 BL 0x321B938
	0x034152EC ADRP X8, 0xCE7000
	0x034152F0 LDR X8, [X8 + 0x3A0]
	0x034152F4 MOV X22, X0
	0x034152F8 LDR X23, [X25 + 0x20]
	0x034152FC LDR X0, [X8]
	0x03415300 BL 0x1C16F10
	0x03415304 MOV X21, X0
	0x03415308 MOV X1, X23
	0x0341530C MOV X2, X31
	0x03415310 BL 0x36281F8
	0x03415314 CBZ X21, 0x3415650
	0x03415318 MOV X0, X21
	0x0341531C MOV X1, X22
	0x03415320 MOV X2, X31
	0x03415324 BL 0x36288CC
	0x03415328 MOV X0, X21
	0x0341532C MOV X1, X20
	0x03415330 MOV X2, X31
	0x03415334 BL 0x3628980
	0x03415338 MOV X0, X21
	0x0341533C MOV X1, X31
	0x03415340 BL 0x3628A38
	0x03415344 ADRP X8, 0xD07000
	0x03415348 ADRP X9, 0xCDF000
	0x0341534C LDR X8, [X8 + 0x4D8]
	0x03415350 LDR X9, [X9 + 0x6D0]
	0x03415354 MOV X20, X0
	0x03415358 LDR X21, [X8]
	0x0341535C LDR X0, [X9]
	0x03415360 BL 0x1C16F10
	0x03415364 ADRP X8, 0xCDF000
	0x03415368 LDR X8, [X8 + 0x6C0]
	0x0341536C MOV X22, X0
	0x03415370 LDR X1, [X8]
	0x03415374 BL 0x2AA4804
	0x03415378 LDR X0, [X19 + 0x40]
	0x0341537C MOV X1, X31
	0x03415380 BL 0x32277A8
	0x03415384 TBNZ X0, 0x0, 0x3415430
	0x03415388 MOV X0, X31
	0x0341538C BL 0x3241948
	0x03415390 ADRP X8, 0xCE7000
	0x03415394 MOV X23, X0
	0x03415398 LDP X0, X2, [X19 + 0x40]
	0x0341539C LDR X8, [X8 + 0x988]
	0x034153A0 LDR X1, [X8]
	0x034153A4 MOV X3, X31
	0x034153A8 BL 0x32274B8
	0x034153AC MOV X1, X0
	0x034153B0 CBZ X23, 0x3415664
	0x034153B4 LDR X8, [X23]
	0x034153B8 LDR X9, [X8 + 0x268]
	0x034153BC LDR X2, [X8 + 0x270]
	0x034153C0 MOV X0, X23
	0x034153C4 BLR X9
	0x034153C8 ADRP X8, 0xCE7000
	0x034153CC LDR X8, [X8 + 0x9E8]
	0x034153D0 MOV X23, X0
	0x034153D4 LDR X0, [X8]
	0x034153D8 LDR W8, [X0 + 0xE0]
	0x034153DC CBNZ W8, 0x34153E4
	0x034153E0 BL 0x1C16DFC
	0x034153E4 MOV X0, X23
	0x034153E8 MOV X1, X31
	0x034153EC BL 0x33225A0
	0x034153F0 MOV X1, X0
	0x034153F4 ADRP X8, 0xD19000
	0x034153F8 LDR X8, [X8 + 0x850]
	0x034153FC LDR X0, [X8]
	0x03415400 MOV X2, X31
	0x03415404 BL 0x321B938
	0x03415408 CBZ X22, 0x3415668
	0x0341540C ADRP X8, 0xD19000
	0x03415410 LDR X8, [X8 + 0x7D0]
	0x03415414 ADRP X9, 0xCDF000
	0x03415418 LDR X9, [X9 + 0x810]
	0x0341541C MOV X2, X0
	0x03415420 LDR X1, [X8]
	0x03415424 LDR X3, [X9]
	0x03415428 MOV X0, X22
	0x0341542C BL 0x2AA5098
	0x03415430 LDR X0, [X19 + 0x20]
	0x03415434 MOV X1, X31
	0x03415438 BL 0x3483BE4
	0x0341543C MOV X23, X0
	0x03415440 MOV X0, X31
	0x03415444 BL 0x3241948
	0x03415448 CBZ X0, 0x3415654
	0x0341544C LDR X8, [X0]
	0x03415450 LDR X9, [X8 + 0x268]
	0x03415454 LDR X2, [X8 + 0x270]
	0x03415458 MOV X1, X23
	0x0341545C BLR X9
	0x03415460 LDR X24, [X25 + 0x10]
	0x03415464 CBZ X24, 0x3415658
	0x03415468 ADRP X10, 0xD19000
	0x0341546C LDR X10, [X10 + 0x7B8]
	0x03415470 LDR X8, [X24]
	0x03415474 LDR W26, [X25 + 0x18]
	0x03415478 LDP X27, X25, [X19 + 0x50]
	0x0341547C LDR X1, [X10]
	0x03415480 LDRH W9, [X8 + 0x12E]
	0x03415484 MOV X23, X0
	0x03415488 CBZ X9, 0x34154AC
	0x0341548C LDR X10, [X8 + 0xB0]
	0x03415490 ADD X10, X10, 0x8
	0x03415494 LDUR X11, [X10 - 0x8]
	0x03415498 CMP X11, X1
	0x0341549C B.EQ 0x34154D4
	0x034154A0 SUBS X9, X9, 0x1
	0x034154A4 ADD X10, X10, 0x10
	0x034154A8 B.NE 0x3415494
	0x034154AC MOVZ W2, 0x3
	0x034154B0 MOV X0, X24
	0x034154B4 BL 0x1C5C788
	0x034154B8 B 0x34154E4
	0x034154BC LDR X8, [X19 + 0x60]
	0x034154C0 MOVN W9, 0x0
	0x034154C4 STR X8, [X31 + 0x18]
	0x034154C8 STR X31, [X19 + 0x60]
	0x034154CC STR W9, [X19]
	0x034154D0 B 0x3415540
	0x034154D4 LDR W9, [X10]
	0x034154D8 ADD W9, W9, 0x3
	0x034154DC ADD X8, X8, W9, 0x4, SXTW
	0x034154E0 ADD X0, X8, 0x138
	0x034154E4 LDP X8, X9, [X0]
	0x034154E8 MOV X0, X24
	0x034154EC MOV X1, X21
	0x034154F0 MOV X2, X20
	0x034154F4 MOV X3, X22
	0x034154F8 MOV X4, X23
	0x034154FC MOV W5, W26
	0x03415500 MOV X6, X27
	0x03415504 MOV X7, X25
	0x03415508 STR X9, [X31]
	0x0341550C BLR X8
	0x03415510 CBZ X0, 0x341565C
	0x03415514 ADRP X8, 0xCE1000
	0x03415518 LDR X8, [X8 + 0x1F8]
	0x0341551C LDR X1, [X8]
	0x03415520 BL 0x269F5D0
	0x03415524 ADRP X8, 0xCE1000
	0x03415528 LDR X8, [X8 + 0x1F0]
	0x0341552C STR X0, [X31 + 0x18]
	0x03415530 LDR X1, [X8]
	0x03415534 ADD X0, X31, 0x18
	0x03415538 BL 0x2677430
	0x0341553C TBZ X0, 0x0, 0x341559C
	0x03415540 ADRP X8, 0xCE1000
	0x03415544 LDR X8, [X8 + 0x1E0]
	0x03415548 ADD X0, X31, 0x18
	0x0341554C LDR X1, [X8]
	0x03415550 BL 0x2677474
	0x03415554 ADRP X8, 0xD19000
	0x03415558 LDR X8, [X8 + 0x828]
	0x0341555C LDR X1, [X8]
	0x03415560 BL 0x220E6DC
	0x03415564 MOVN W8, 0x1
	0x03415568 STR W8, [X19], #0x8
	0x0341556C MOV X20, X0
	0x03415570 LDR X0, [X28]
	0x03415574 ADRP X21, 0xD19000
	0x03415578 LDR W8, [X0 + 0xE0]
	0x0341557C LDR X21, [X21 + 0x820]
	0x03415580 CBNZ W8, 0x3415588
	0x03415584 BL 0x1C16DFC
	0x03415588 LDR X2, [X21]
	0x0341558C MOV X0, X19
	0x03415590 MOV X1, X20
	0x03415594 BL 0x26322B0
	0x03415598 B 0x34155D4
	0x0341559C STR W31, [X19]
	0x034155A0 LDR X8, [X31 + 0x18]
	0x034155A4 STR X8, [X19 + 0x60]
	0x034155A8 LDR X0, [X28]
	0x034155AC LDR W8, [X0 + 0xE0]
	0x034155B0 CBNZ W8, 0x34155B8
	0x034155B4 BL 0x1C16DFC
	0x034155B8 ADRP X8, 0xD19000
	0x034155BC LDR X8, [X8 + 0x878]
	0x034155C0 ADD X0, X19, 0x8
	0x034155C4 LDR X3, [X8]
	0x034155C8 ADD X1, X31, 0x18
	0x034155CC MOV X2, X19
	0x034155D0 BL 0x1FB1A6C
	0x034155D4 LDP X20, X19, [X31 + 0x60]
	0x034155D8 LDP X22, X21, [X31 + 0x50]
	0x034155DC LDP X24, X23, [X31 + 0x40]
	0x034155E0 LDP X26, X25, [X31 + 0x30]
	0x034155E4 LDP X28, X27, [X31 + 0x20]
	0x034155E8 LDR X30, [X31 + 0x10]
	0x034155EC ADD X31, X31, 0x70
	0x034155F0 RET
	0x034155F4 ADRP X0, 0xCE6000
	0x034155F8 LDR X0, [X0 + 0x578]
	0x034155FC BL 0x1C16D08
	0x03415600 BL 0x1C16F10
	0x03415604 MOV X20, X0
	0x03415608 ADRP X0, 0xD19000
	0x0341560C LDR X0, [X0 + 0x858]
	0x03415610 BL 0x1C16D08
	0x03415614 MOV X1, X0
	0x03415618 MOV X0, X20
	0x0341561C MOV X2, X31
	0x03415620 BL 0x3314A68
	0x03415624 ADRP X0, 0xD19000
	0x03415628 LDR X0, [X0 + 0x888]
	0x0341562C BL 0x1C16D08
	0x03415630 MOV X1, X0
	0x03415634 MOV X0, X20
	0x03415638 BL 0x1C16DEC
	0x0341563C BL 0x1C16F20
	0x03415640 BL 0x1C16F20
	0x03415644 BL 0x1C16F20
	0x03415648 BL 0x1C16F28
	0x0341564C BL 0x1C16F20
	0x03415650 BL 0x1C16F20
	0x03415654 BL 0x1C16F20
	0x03415658 BL 0x1C16F20
	0x0341565C BL 0x1C16F20
	0x03415660 BL 0x1C16F20
	0x03415664 BL 0x1C16F20
	0x03415668 BL 0x1C16F20
	0x0341566C B 0x3415700
	0x03415670 B 0x3415700
	0x03415674 B 0x3415700
	0x03415678 B 0x3415700
	0x0341567C B 0x3415700
	0x03415680 B 0x3415700
	0x03415684 B 0x3415700
	0x03415688 B 0x3415700
	0x0341568C B 0x3415700
	0x03415690 B 0x3415700
	0x03415694 B 0x3415700
	0x03415698 B 0x3415700
	0x0341569C B 0x3415700
	0x034156A0 B 0x3415700
	0x034156A4 B 0x3415700
	0x034156A8 B 0x3415700
	0x034156AC B 0x3415700
	0x034156B0 B 0x3415700
	0x034156B4 B 0x3415700
	0x034156B8 B 0x3415700
	0x034156BC B 0x3415700
	0x034156C0 B 0x3415700
	0x034156C4 B 0x3415700
	0x034156C8 B 0x3415700
	0x034156CC B 0x3415700
	0x034156D0 B 0x3415700
	0x034156D4 B 0x3415700
	0x034156D8 B 0x3415700
	0x034156DC B 0x3415700
	0x034156E0 B 0x3415700
	0x034156E4 B 0x3415700
	0x034156E8 B 0x3415700
	0x034156EC B 0x3415700
	0x034156F0 B 0x3415700
	0x034156F4 B 0x3415700
	0x034156F8 B 0x3415700
	0x034156FC B 0x3415700
	0x03415700 MOV X20, X0
	0x03415704 CMP W1, 0x1
	0x03415708 B.NE 0x34157A4
	0x0341570C MOV X0, X20
	0x03415710 BL 0x3EB1AD0
	0x03415714 MOV X20, X0
	0x03415718 ADRP X0, 0xCDE000
	0x0341571C LDR X0, [X0 + 0x7D0]
	0x03415720 BL 0x1C16D08
	0x03415724 LDR X8, [X20]
	0x03415728 LDR X1, [X8]
	0x0341572C BL 0x1C17270
	0x03415730 TBZ X0, 0x0, 0x341577C
	0x03415734 LDR X20, [X20]
	0x03415738 BL 0x3EB1AE0
	0x0341573C MOVN W8, 0x1
	0x03415740 STR W8, [X19], #0x8
	0x03415744 ADRP X0, 0xD19000
	0x03415748 LDR X0, [X0 + 0x320]
	0x0341574C BL 0x1C16D08
	0x03415750 LDR W8, [X0 + 0xE0]
	0x03415754 CBNZ W8, 0x341575C
	0x03415758 BL 0x1C16DFC
	0x0341575C ADRP X0, 0xD19000
	0x03415760 LDR X0, [X0 + 0x868]
	0x03415764 BL 0x1C16D08
	0x03415768 MOV X2, X0
	0x0341576C MOV X0, X19
	0x03415770 MOV X1, X20
	0x03415774 BL 0x26324C8
	0x03415778 B 0x34155D4
	0x0341577C MOVZ W0, 0x8
	0x03415780 BL 0x3EB1AF0
	0x03415784 LDR X8, [X20]
	0x03415788 STR X8, [X0]
	0x0341578C ADRP X1, 0xA9F000
	0x03415790 ADD X1, X1, 0xE58
	0x03415794 MOV X2, X31
	0x03415798 BL 0x3EB1B00
	0x0341579C MOV X20, X0
	0x034157A0 BL 0x3EB1AE0
	0x034157A4 MOV X0, X20
	0x034157A8 BL 0x1D2C690
	0x034157AC BL 0x1990590
	0x034157B0 STR X30, [X31 - 0x30]!
	0x034157B4 STP X22, X21, [X31 + 0x10]
	0x034157B8 STP X20, X19, [X31 + 0x20]
	0x034157BC ADRP X22, 0xFC8000
	0x034157C0 ADRP X21, 0xD19000
	0x034157C4 LDRB W8, [X22 + 0x5C8]
	0x034157C8 LDR X21, [X21 + 0x320]
	0x034157CC MOV X19, X1
	0x034157D0 MOV X20, X0
	0x034157D4 TBNZ X8, 0x0, 0x34157F8
	0x034157D8 ADRP X0, 0xD19000
	0x034157DC LDR X0, [X0 + 0x870]
	0x034157E0 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0xFCA000
	015 Move W8, [X20+1475]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {98}
	021 Move X0, 0xD1B000
	022 Move X0, [X0+2024]
	023 Call 0x1C17CF4
	024 Move X0, 0xCE3000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move X0, 0xCE9000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0xCE1000
	031 Move X0, [X0+2064]
	032 Call 0x1C17CF4
	033 Move X0, 0xCE1000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCE1000
	037 Move X0, [X0+1744]
	038 Call 0x1C17CF4
	039 Move X0, 0xCE0000
	040 Move X0, [X0+3584]
	041 Call 0x1C17CF4
	042 Move X0, 0xCE0000
	043 Move X0, [X0+3952]
	044 Call 0x1C17CF4
	045 Move X0, 0xCE0000
	046 Move X0, [X0+3960]
	047 Call 0x1C17CF4
	048 Move X0, 0xCE0000
	049 Move X0, [X0+3608]
	050 Call 0x1C17CF4
	051 Move X0, 0xD1B000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move X0, 0xCE0000
	055 Move X0, [X0+2760]
	056 Call 0x1C17CF4
	057 Move X0, 0xCE3000
	058 Move X0, [X0+480]
	059 Call 0x1C17CF4
	060 Move X0, 0xCE3000
	061 Move X0, [X0+496]
	062 Call 0x1C17CF4
	063 Move X0, 0xCE3000
	064 Move X0, [X0+504]
	065 Call 0x1C17CF4
	066 Move X0, 0xCE9000
	067 Move X0, [X0+928]
	068 Call 0x1C17CF4
	069 Move X0, 0xCE2000
	070 Move X0, [X0+2600]
	071 Call 0x1C17CF4
	072 Move X0, 0xD09000
	073 Move X0, [X0+1240]
	074 Call 0x1C17CF4
	075 Move X0, 0xD1B000
	076 Move X0, [X0+2032]
	077 Call 0x1C17CF4
	078 Move X0, 0xD1B000
	079 Move X0, [X0+2040]
	080 Call 0x1C17CF4
	081 Move X0, 0xD1B000
	082 Move X0, [X0+2048]
	083 Call 0x1C17CF4
	084 Move X0, 0xCE8000
	085 Move X0, [X0+1824]
	086 Call 0x1C17CF4
	087 Move X0, 0xD1A000
	088 Move X0, [X0+2000]
	089 Call 0x1C17CF4
	090 Move X0, 0xD1A000
	091 Move X0, [X0+2008]
	092 Call 0x1C17CF4
	093 Move X0, 0xCDF000
	094 Move X0, [X0+2440]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X20+1475], W8
	098 Move [X31+24], X31
	099 Move X27, 0xCE2000
	100 Move W24, [X19]
	101 Move X27, [X27+640]
	102 Compare W24, 0
	103 JumpIfEqual {161}
	104 Move X21, [X19+32]
	105 Compare X21, 0
	106 JumpIfEqual {473}
	107 Move X26, 0xCE1000
	108 Move X26, [X26+2600]
	109 Move X8, 0xD1A000
	110 Move X0, [X26]
	111 Move X8, [X8+2040]
	112 Move X23, [X19+48]
	113 Move W9, [X0+224]
	114 Move X20, [X8]
	115 Compare W9, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X21
	119 Move X1, X31
	120 Call Uri.EscapeDataString, X0
	121 Compare X20, 0
	122 JumpIfEqual {491}
	123 Move X8, 0xD1A000
	124 Move X8, [X8+2048]
	125 Move X2, X0
	126 Move X1, [X8]
	127 Move X0, X20
	128 Move X3, X31
	129 Call String.Replace, X0, X1, X2
	130 Move X8, 0xCDF000
	131 Move X8, [X8+2440]
	132 Move X21, [X19+40]
	133 Move X20, X0
	134 Move X28, [X8]
	135 Compare X21, 0
	136 JumpIfNotEqual {145}
	137 Move X8, 0xCDF000
	138 Move X8, [X8+2760]
	139 Move X0, [X8]
	140 Move W1, W31
	141 Call 0x1C17D6C
	142 Move X21, X0
	143 Compare X0, 0
	144 JumpIfEqual {503}
	145 Move X10, 0xCDF000
	146 Move X8, [X21]
	147 Move X10, [X10+3952]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Move X1, [X10]
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X21
	159 Move W2, W31
	160 Call 0x1C5D788
	161 Move X8, [X19+80]
	162 Move TEMP, 0
	163 Not TEMP
	164 Move W9, TEMP
	165 Move [X31+24], X8
	166 Move [X19+80], X31
	167 Move [X19], W9
	168 NotImplemented "Instruction LDRSW not yet implemented."
	169 Add X8, X8, X9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X1, [X0+8]
	173 Move X0, X21
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move [X31+8], X20
	176 Move [X31+16], X23
	177 Move X29, 0xCDF000
	178 Move X27, 0xCDF000
	179 Move X20, 0xD1A000
	180 Move X25, 0xCE8000
	181 Move X29, [X29+3608]
	182 Move X27, [X27+3960]
	183 Move X20, [X20+2032]
	184 Move X25, [X25+1824]
	185 Move X22, X0
	186 Move X0, X28
	187 Compare X22, 0
	188 JumpIfEqual {472}
	189 Move X8, [X22]
	190 Move X1, [X29]
	191 Move X21, X0
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move X0, X22
	202 Move W2, W31
	203 Call 0x1C5D788
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Add X8, X8, X9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X22
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {251}
	215 Move X8, [X22]
	216 Move X1, [X27]
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move X0, X22
	227 Move W2, W31
	228 Call 0x1C5D788
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Add X8, X8, X9
	231 Add X0, X8, 312
	232 Move X8, [X0]
	233 Move X1, [X0+8]
	234 Move X0, X22
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X23, X0
	237 Move X0, [X26]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Move X0, X23
	243 Move X1, X31
	244 Call Uri.EscapeDataString, X0
	245 Move X1, [X20]
	246 Move X3, [X25]
	247 Move X2, X0
	248 Move X0, X21
	249 Move X4, X31
	250 Call String.Concat, X0, X1, X2, X3
	251 Move X23, X31
	252 Move W20, 9
	253 Move X27, 0xCE2000
	254 Move X27, [X27+640]
	255 Move X25, [X31+16]
	256 Move TEMP, X24
	257 And TEMP, TEMP, -2147483648
	258 Compare TEMP, -2147483648
	259 JumpIfNotEqual {285}
	260 Compare X22, 0
	261 JumpIfEqual {285}
	262 Move X10, 0xCDF000
	263 Move X8, [X22]
	264 Move X10, [X10+3584]
	265 NotImplemented "Instruction LDRH not yet implemented."
	266 Move X1, [X10]
	267 Compare X9, 0
	268 JumpIfEqual {275}
	269 Move X10, [X8+176]
	270 Add X10, X10, 8
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract X9, X9, 1
	274 Add X10, X10, 16
	275 Move X0, X22
	276 Move W2, W31
	277 Call 0x1C5D788
	278 NotImplemented "Instruction LDRSW not yet implemented."
	279 Add X8, X8, X9
	280 Add X0, X8, 312
	281 Move X8, [X0]
	282 Move X1, [X0+8]
	283 Move X0, X22
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Compare X23, 0
	286 JumpIfNotEqual {492}
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Compare W20, 0
	289 JumpIfNotEqual {458}
	290 Compare X25, 0
	291 JumpIfEqual {494}
	292 Move X0, [X25+32]
	293 Compare X0, 0
	294 JumpIfEqual {495}
	295 Move X1, X31
	296 Call Uri.get_AbsolutePath, X0
	297 Move X8, 0xCE8000
	298 Move X8, [X8+2264]
	299 Move X22, X0
	300 Move X0, [X8]
	301 Move W1, 1
	302 Call 0x1C17D6C
	303 Move X1, X0
	304 Compare X1, 0
	305 JumpIfEqual {496}
	306 Move W8, [X1+24]
	307 Compare W8, 0
	308 JumpIfEqual {497}
	309 Move W8, 47
	310 NotImplemented "Instruction STRH not yet implemented."
	311 Compare X22, 0
	312 JumpIfEqual {498}
	313 Move X0, X22
	314 Move X2, X31
	315 Call String.TrimEnd, X0, X1
	316 Move X1, [X31+8]
	317 Move X2, X31
	318 Call String.Concat, X0, X1
	319 Move X8, 0xCE8000
	320 Move X23, [X25+32]
	321 Move X8, [X8+928]
	322 Move X22, X0
	323 Move X0, [X8]
	324 Call 0x1C17F10
	325 Move X20, X0
	326 Move X1, X23
	327 Move X2, X31
	328 Call UriBuilder..ctor, X0, X1
	329 Compare X20, 0
	330 JumpIfEqual {499}
	331 Move X0, X20
	332 Move X1, X22
	333 Move X2, X31
	334 Call UriBuilder.set_Path, X0, X1
	335 Move X0, X20
	336 Move X1, X21
	337 Move X2, X31
	338 Call UriBuilder.set_Query, X0, X1
	339 Move X0, X20
	340 Move X1, X31
	341 Call UriBuilder.get_Uri, X0
	342 Move X8, 0xD08000
	343 Move X9, 0xCE0000
	344 Move X8, [X8+1240]
	345 Move X9, [X9+1744]
	346 Move X20, X0
	347 Move X21, [X8]
	348 Move X0, [X9]
	349 Call 0x1C17F10
	350 Move X8, 0xCE0000
	351 Move X8, [X8+1728]
	352 Move X22, X0
	353 Move X1, [X8]
	354 Call Dictionary`2<Object, Object>..ctor, X0
	355 Move X8, 0xD1A000
	356 Move X1, [X19+56]
	357 Move X8, [X8+2008]
	358 Move X0, [X8]
	359 Move X2, X31
	360 Call String.Concat, X0, X1
	361 Compare X22, 0
	362 JumpIfEqual {500}
	363 Move X8, 0xD1A000
	364 Move X8, [X8+2000]
	365 Move X9, 0xCE0000
	366 Move X9, [X9+2064]
	367 Move X2, X0
	368 Move X1, [X8]
	369 Move X3, [X9]
	370 Move X0, X22
	371 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	372 Move X24, [X25+16]
	373 Compare X24, 0
	374 JumpIfEqual {501}
	375 Move X10, 0xD1A000
	376 Move W23, [X25+24]
	377 Move X8, [X24]
	378 Move X26, [X19+64]
	379 Move X25, [X19+72]
	380 Move X10, [X10+1976]
	381 NotImplemented "Instruction LDRH not yet implemented."
	382 Move X1, [X10]
	383 Compare X9, 0
	384 JumpIfEqual {391}
	385 Move X10, [X8+176]
	386 Add X10, X10, 8
	387 NotImplemented "Instruction LDUR not yet implemented."
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Subtract X9, X9, 1
	390 Add X10, X10, 16
	391 Move W2, 3
	392 Move X0, X24
	393 Call 0x1C5D788
	394 Move W9, [X10]
	395 Add W9, W9, 3
	396 Add X8, X8, W9
	397 Add X0, X8, 312
	398 Move X8, [X0]
	399 Move X9, [X0+8]
	400 Move X0, X24
	401 Move X1, X21
	402 Move X2, X20
	403 Move X3, X22
	404 Move X4, X31
	405 Move W5, W23
	406 Move X6, X26
	407 Move X7, X25
	408 Move [X31], X9
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Compare X0, 0
	411 JumpIfEqual {502}
	412 Move X8, 0xCE2000
	413 Move X8, [X8+504]
	414 Move X1, [X8]
	415 Call Task`1<Object>.GetAwaiter, X0
	416 Move X8, 0xCE2000
	417 Move X8, [X8+496]
	418 Move [X31+24], X0
	419 Move X1, [X8]
	420 Add X0, X31, 24
	421 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	422 Move TEMP, X0
	423 And TEMP, TEMP, 1
	424 Compare TEMP, 1
	425 JumpIfNotEqual {443}
	426 Move X8, 0xCE2000
	427 Move X8, [X8+480]
	428 Add X0, X31, 24
	429 Move X1, [X8]
	430 Call TaskAwaiter`1<Object>.GetResult, X0
	431 Move TEMP, 1
	432 Not TEMP
	433 Move W8, TEMP
	434 Move [X19+8], W8
	435 Move X0, [X27]
	436 Move W8, [X0+224]
	437 Compare W8, 0
	438 JumpIfNotEqual {440}
	439 Call 0x1C17DFC
	440 Move X0, X19
	441 Move X1, X31
	442 Call AsyncTaskMethodBuilder.SetResult, X0
	443 Move [X19], W31
	444 Move X8, [X31+24]
	445 Move [X19+80], X8
	446 Move X0, [X27]
	447 Move W8, [X0+224]
	448 Compare W8, 0
	449 JumpIfNotEqual {451}
	450 Call 0x1C17DFC
	451 Move X8, 0xD1A000
	452 Move X8, [X8+2024]
	453 Add X0, X19, 8
	454 Move X3, [X8]
	455 Add X1, X31, 24
	456 Move X2, X19
	457 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	458 Move X20, [X31+112]
	459 Move X19, [X31+120]
	460 Move X22, [X31+96]
	461 Move X21, [X31+104]
	462 Move X24, [X31+80]
	463 Move X23, [X31+88]
	464 Move X26, [X31+64]
	465 Move X25, [X31+72]
	466 Move X28, [X31+48]
	467 Move X27, [X31+56]
	468 Move X29, [X31+32]
	469 Move X30, [X31+40]
	470 Add X31, X31, 128
	471 Return 
	472 Call 0x1C17F20
	473 Move X0, 0xCE7000
	474 Move X0, [X0+1400]
	475 Call 0x1C17D08
	476 Call 0x1C17F10
	477 Move X20, X0
	478 Move X0, 0xD1A000
	479 Move X0, [X0+2056]
	480 Call 0x1C17D08
	481 Move X1, X0
	482 Move X0, X20
	483 Move X2, X31
	484 Call ArgumentException..ctor, X0, X1
	485 Move X0, 0xD1A000
	486 Move X0, [X0+2064]
	487 Call 0x1C17D08
	488 Move X1, X0
	489 Move X0, X20
	490 Call 0x1C17DEC
	491 Call 0x1C17F20
	492 Move X0, X23
	493 Call 0x1C17F18
	494 Call 0x1C17F20
	495 Call 0x1C17F20
	496 Call 0x1C17F20
	497 Call 0x1C17F28
	498 Call 0x1C17F20
	499 Call 0x1C17F20
	500 Call 0x1C17F20
	501 Call 0x1C17F20
	502 Call 0x1C17F20
	503 Call 0x1C17F20
	504 Move X20, X1
	505 Move X21, X0
	506 Move X21, X28
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Call 0x3EB2AD0
	509 Move X23, [X0]
	510 Call 0x3EB2AE0
	511 Move W20, W31
	512 Move X21, X0
	513 Move X20, X1
	514 Move X23, X31
	515 Move TEMP, X24
	516 And TEMP, TEMP, -2147483648
	517 Compare TEMP, -2147483648
	518 JumpIfNotEqual {544}
	519 Compare X22, 0
	520 JumpIfEqual {544}
	521 Move X10, 0xCDF000
	522 Move X8, [X22]
	523 Move X10, [X10+3584]
	524 NotImplemented "Instruction LDRH not yet implemented."
	525 Move X1, [X10]
	526 Compare X9, 0
	527 JumpIfEqual {534}
	528 Move X10, [X8+176]
	529 Add X10, X10, 8
	530 NotImplemented "Instruction LDUR not yet implemented."
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Subtract X9, X9, 1
	533 Add X10, X10, 16
	534 Move X0, X22
	535 Move W2, W31
	536 Call 0x1C5D788
	537 NotImplemented "Instruction LDRSW not yet implemented."
	538 Add X8, X8, X9
	539 Add X0, X8, 312
	540 Move X8, [X0]
	541 Move X1, [X0+8]
	542 Move X0, X22
	543 NotImplemented "Instruction BLR not yet implemented."
	544 Compare X23, 0
	545 JumpIfNotEqual {585}
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Move X0, X21
	548 Call 0x3EB2AD0
	549 Move X20, X0
	550 Move X0, 0xCDF000
	551 Move X0, [X0+2000]
	552 Call 0x1C17D08
	553 Move X8, [X20]
	554 Move X1, [X8]
	555 Call 0x1C18270
	556 Move TEMP, X0
	557 And TEMP, TEMP, 1
	558 Compare TEMP, 1
	559 JumpIfNotEqual {577}
	560 Move X20, [X20]
	561 Call 0x3EB2AE0
	562 Move TEMP, 1
	563 Not TEMP
	564 Move W8, TEMP
	565 Move [X19+8], W8
	566 Move X0, 0xCE2000
	567 Move X0, [X0+640]
	568 Call 0x1C17D08
	569 Move W8, [X0+224]
	570 Compare W8, 0
	571 JumpIfNotEqual {573}
	572 Call 0x1C17DFC
	573 Move X0, X19
	574 Move X1, X20
	575 Move X2, X31
	576 Call AsyncTaskMethodBuilder.SetException, X0, X1
	577 Move W0, 8
	578 Call 0x3EB2AF0
	579 Move X8, [X20]
	580 Move [X0], X8
	581 Move X1, 0xAA0000
	582 Add X1, X1, 3672
	583 Move X2, X31
	584 Call 0x3EB2B00
	585 Move X0, X23
	586 Call 0x1C17F18
	587 Move X20, X1
	588 Move X21, X0
	589 Move TEMP, X24
	590 And TEMP, TEMP, -2147483648
	591 Compare TEMP, -2147483648
	592 JumpIfEqual {519}
	593 Move X21, X0
	594 Call 0x3EB2AE0
	595 Move X0, X21
	596 Call 0x1D2D690
	597 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034157E4 ADRP X0, 0xD19000
	0x034157E8 LDR X0, [X0 + 0x320]
	0x034157EC BL 0x1C16CF4
	0x034157F0 MOVZ W8, 0x1
	0x034157F4 STRB W8, [X22 + 0x5C8]
	0x034157F8 LDR X0, [X21]
	0x034157FC ADRP X21, 0xD19000
	0x03415800 LDR W8, [X0 + 0xE0]
	0x03415804 LDR X21, [X21 + 0x870]
	0x03415808 CBNZ W8, 0x3415810
	0x0341580C BL 0x1C16DFC
	0x03415810 LDR X2, [X21]
	0x03415814 ADD X0, X20, 0x8
	0x03415818 MOV X1, X19
	0x0341581C LDP X20, X19, [X31 + 0x20]
	0x03415820 LDP X22, X21, [X31 + 0x10]
	0x03415824 LDR X30, [X31], #0x30
	0x03415828 B 0x2632228
	0x0341582C SUB X31, X31, 0x70
	0x03415830 STR X30, [X31 + 0x10]
	0x03415834 STP X28, X27, [X31 + 0x20]
	0x03415838 STP X26, X25, [X31 + 0x30]
	0x0341583C STP X24, X23, [X31 + 0x40]
	0x03415840 STP X22, X21, [X31 + 0x50]
	0x03415844 STP X20, X19, [X31 + 0x60]
	0x03415848 ADRP X20, 0xFC8000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFC9000
	007 Move X22, 0xCE2000
	008 Move W8, [X21+1476]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCE2000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1476], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

