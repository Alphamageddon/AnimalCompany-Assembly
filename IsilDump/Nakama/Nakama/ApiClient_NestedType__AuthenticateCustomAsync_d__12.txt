Type: Nakama.ApiClient/<AuthenticateCustomAsync>d__12

Method: System.Void MoveNext()

Disassembly:
	0x0341603C LDRB W8, [X20 + 0x5CB]
	0x03416040 MOV X19, X0
	0x03416044 TBNZ X8, 0x0, 0x3416188
	0x03416048 ADRP X0, 0xD18000
	0x0341604C LDR X0, [X0 + 0x8A8]
	0x03416050 BL 0x1C16CF4
	0x03416054 ADRP X0, 0xD18000
	0x03416058 LDR X0, [X0 + 0x820]
	0x0341605C BL 0x1C16CF4
	0x03416060 ADRP X0, 0xD18000
	0x03416064 LDR X0, [X0 + 0x320]
	0x03416068 BL 0x1C16CF4
	0x0341606C ADRP X0, 0xCE6000
	0x03416070 LDR X0, [X0 + 0x8D8]
	0x03416074 BL 0x1C16CF4
	0x03416078 ADRP X0, 0xCE6000
	0x0341607C LDR X0, [X0 + 0x9E8]
	0x03416080 BL 0x1C16CF4
	0x03416084 ADRP X0, 0xCDE000
	0x03416088 LDR X0, [X0 + 0x810]
	0x0341608C BL 0x1C16CF4
	0x03416090 ADRP X0, 0xCDE000
	0x03416094 LDR X0, [X0 + 0x6C0]
	0x03416098 BL 0x1C16CF4
	0x0341609C ADRP X0, 0xCDE000
	0x034160A0 LDR X0, [X0 + 0x6D0]
	0x034160A4 BL 0x1C16CF4
	0x034160A8 ADRP X0, 0xD18000
	0x034160AC LDR X0, [X0 + 0x7B8]
	0x034160B0 BL 0x1C16CF4
	0x034160B4 ADRP X0, 0xD18000
	0x034160B8 LDR X0, [X0 + 0x828]
	0x034160BC BL 0x1C16CF4
	0x034160C0 ADRP X0, 0xD18000
	0x034160C4 LDR X0, [X0 + 0x830]
	0x034160C8 BL 0x1C16CF4
	0x034160CC ADRP X0, 0xCE1000
	0x034160D0 LDR X0, [X0 + 0xBF0]
	0x034160D4 BL 0x1C16CF4
	0x034160D8 ADRP X0, 0xCE0000
	0x034160DC LDR X0, [X0 + 0x1E0]
	0x034160E0 BL 0x1C16CF4
	0x034160E4 ADRP X0, 0xCE0000
	0x034160E8 LDR X0, [X0 + 0x1F0]
	0x034160EC BL 0x1C16CF4
	0x034160F0 ADRP X0, 0xCE0000
	0x034160F4 LDR X0, [X0 + 0x1F8]
	0x034160F8 BL 0x1C16CF4
	0x034160FC ADRP X0, 0xCE6000
	0x03416100 LDR X0, [X0 + 0x3A0]
	0x03416104 BL 0x1C16CF4
	0x03416108 ADRP X0, 0xCDF000
	0x0341610C LDR X0, [X0 + 0xA28]
	0x03416110 BL 0x1C16CF4
	0x03416114 ADRP X0, 0xD18000
	0x03416118 LDR X0, [X0 + 0x840]
	0x0341611C BL 0x1C16CF4
	0x03416120 ADRP X0, 0xD06000
	0x03416124 LDR X0, [X0 + 0x4D8]
	0x03416128 BL 0x1C16CF4
	0x0341612C ADRP X0, 0xD18000
	0x03416130 LDR X0, [X0 + 0x848]
	0x03416134 BL 0x1C16CF4
	0x03416138 ADRP X0, 0xD18000
	0x0341613C LDR X0, [X0 + 0x8B0]
	0x03416140 BL 0x1C16CF4
	0x03416144 ADRP X0, 0xCE6000
	0x03416148 LDR X0, [X0 + 0x988]
	0x0341614C BL 0x1C16CF4
	0x03416150 ADRP X0, 0xCE6000
	0x03416154 LDR X0, [X0 + 0x720]
	0x03416158 BL 0x1C16CF4
	0x0341615C ADRP X0, 0xD18000
	0x03416160 LDR X0, [X0 + 0x7D0]
	0x03416164 BL 0x1C16CF4
	0x03416168 ADRP X0, 0xD18000
	0x0341616C LDR X0, [X0 + 0x850]
	0x03416170 BL 0x1C16CF4
	0x03416174 ADRP X0, 0xCDD000
	0x03416178 LDR X0, [X0 + 0x988]
	0x0341617C BL 0x1C16CF4
	0x03416180 MOVZ W8, 0x1
	0x03416184 STRB W8, [X20 + 0x5CB]
	0x03416188 STR X31, [X31 + 0x18]
	0x0341618C ADRP X28, 0xD18000
	0x03416190 LDR W8, [X19]
	0x03416194 LDR X28, [X28 + 0x320]
	0x03416198 CBZ W8, 0x341649C
	0x0341619C LDR X8, [X19 + 0x20]
	0x034161A0 CBZ X8, 0x34165D4
	0x034161A4 ADRP X8, 0xD18000
	0x034161A8 ADRP X9, 0xCDD000
	0x034161AC LDR X8, [X8 + 0x8B0]
	0x034161B0 LDR X9, [X9 + 0x988]
	0x034161B4 MOV X0, X19
	0x034161B8 LDR X25, [X19 + 0x38]
	0x034161BC LDR X21, [X8]
	0x034161C0 LDR X20, [X9]
	0x034161C4 LDRB W8, [X0 + 0x28]!
	0x034161C8 CBZ W8, 0x3416214
	0x034161CC ADRP X8, 0xD18000
	0x034161D0 LDR X8, [X8 + 0x830]
	0x034161D4 LDR X1, [X8]
	0x034161D8 BL 0x242D714
	0x034161DC CBZ X0, 0x3416640
	0x034161E0 MOV X1, X31
	0x034161E4 BL 0x322B5E4
	0x034161E8 ADRP X8, 0xD18000
	0x034161EC LDR X8, [X8 + 0x840]
	0x034161F0 ADRP X9, 0xCE6000
	0x034161F4 LDR X9, [X9 + 0x720]
	0x034161F8 MOV X2, X0
	0x034161FC LDR X1, [X8]
	0x03416200 LDR X3, [X9]
	0x03416204 MOV X0, X20
	0x03416208 MOV X4, X31
	0x0341620C BL 0x32277C4
	0x03416210 MOV X20, X0
	0x03416214 LDR X22, [X19 + 0x30]
	0x03416218 CBZ X22, 0x341626C
	0x0341621C ADRP X8, 0xCDF000
	0x03416220 LDR X8, [X8 + 0xA28]
	0x03416224 LDR X0, [X8]
	0x03416228 LDR W8, [X0 + 0xE0]
	0x0341622C CBNZ W8, 0x3416234
	0x03416230 BL 0x1C16DFC
	0x03416234 MOV X0, X22
	0x03416238 MOV X1, X31
	0x0341623C BL 0x3624D20
	0x03416240 ADRP X8, 0xD18000
	0x03416244 LDR X8, [X8 + 0x848]
	0x03416248 ADRP X9, 0xCE6000
	0x0341624C LDR X9, [X9 + 0x720]
	0x03416250 MOV X2, X0
	0x03416254 LDR X1, [X8]
	0x03416258 LDR X3, [X9]
	0x0341625C MOV X0, X20
	0x03416260 MOV X4, X31
	0x03416264 BL 0x32277C4
	0x03416268 MOV X20, X0
	0x0341626C CBZ X25, 0x341661C
	0x03416270 LDR X0, [X25 + 0x20]
	0x03416274 CBZ X0, 0x3416620
	0x03416278 MOV X1, X31
	0x0341627C BL 0x361B448
	0x03416280 ADRP X8, 0xCE6000
	0x03416284 LDR X8, [X8 + 0x8D8]
	0x03416288 MOV X22, X0
	0x0341628C LDR X0, [X8]
	0x03416290 MOVZ W1, 0x1
	0x03416294 BL 0x1C16D6C
	0x03416298 MOV X1, X0
	0x0341629C CBZ X1, 0x3416624
	0x034162A0 LDR W8, [X1 + 0x18]
	0x034162A4 CBZ W8, 0x3416628
	0x034162A8 MOVZ W8, 0x2F
	0x034162AC STRH W8, [X1 + 0x20]
	0x034162B0 CBZ X22, 0x341662C
	0x034162B4 MOV X0, X22
	0x034162B8 MOV X2, X31
	0x034162BC BL 0x322BC58
	0x034162C0 MOV X1, X21
	0x034162C4 MOV X2, X31
	0x034162C8 BL 0x321B938
	0x034162CC ADRP X8, 0xCE6000
	0x034162D0 LDR X8, [X8 + 0x3A0]
	0x034162D4 MOV X22, X0
	0x034162D8 LDR X23, [X25 + 0x20]
	0x034162DC LDR X0, [X8]
	0x034162E0 BL 0x1C16F10
	0x034162E4 MOV X21, X0
	0x034162E8 MOV X1, X23
	0x034162EC MOV X2, X31
	0x034162F0 BL 0x36281F8
	0x034162F4 CBZ X21, 0x3416630
	0x034162F8 MOV X0, X21
	0x034162FC MOV X1, X22
	0x03416300 MOV X2, X31
	0x03416304 BL 0x36288CC
	0x03416308 MOV X0, X21
	0x0341630C MOV X1, X20
	0x03416310 MOV X2, X31
	0x03416314 BL 0x3628980
	0x03416318 MOV X0, X21
	0x0341631C MOV X1, X31
	0x03416320 BL 0x3628A38
	0x03416324 ADRP X8, 0xD06000
	0x03416328 ADRP X9, 0xCDE000
	0x0341632C LDR X8, [X8 + 0x4D8]
	0x03416330 LDR X9, [X9 + 0x6D0]
	0x03416334 MOV X20, X0
	0x03416338 LDR X21, [X8]
	0x0341633C LDR X0, [X9]
	0x03416340 BL 0x1C16F10
	0x03416344 ADRP X8, 0xCDE000
	0x03416348 LDR X8, [X8 + 0x6C0]
	0x0341634C MOV X22, X0
	0x03416350 LDR X1, [X8]
	0x03416354 BL 0x2AA4804
	0x03416358 LDR X0, [X19 + 0x40]
	0x0341635C MOV X1, X31
	0x03416360 BL 0x32277A8
	0x03416364 TBNZ X0, 0x0, 0x3416410
	0x03416368 MOV X0, X31
	0x0341636C BL 0x3241948
	0x03416370 ADRP X8, 0xCE6000
	0x03416374 MOV X23, X0
	0x03416378 LDP X0, X2, [X19 + 0x40]
	0x0341637C LDR X8, [X8 + 0x988]
	0x03416380 LDR X1, [X8]
	0x03416384 MOV X3, X31
	0x03416388 BL 0x32274B8
	0x0341638C MOV X1, X0
	0x03416390 CBZ X23, 0x3416644
	0x03416394 LDR X8, [X23]
	0x03416398 LDR X9, [X8 + 0x268]
	0x0341639C LDR X2, [X8 + 0x270]
	0x034163A0 MOV X0, X23
	0x034163A4 BLR X9
	0x034163A8 ADRP X8, 0xCE6000
	0x034163AC LDR X8, [X8 + 0x9E8]
	0x034163B0 MOV X23, X0
	0x034163B4 LDR X0, [X8]
	0x034163B8 LDR W8, [X0 + 0xE0]
	0x034163BC CBNZ W8, 0x34163C4
	0x034163C0 BL 0x1C16DFC
	0x034163C4 MOV X0, X23
	0x034163C8 MOV X1, X31
	0x034163CC BL 0x33225A0
	0x034163D0 MOV X1, X0
	0x034163D4 ADRP X8, 0xD18000
	0x034163D8 LDR X8, [X8 + 0x850]
	0x034163DC LDR X0, [X8]
	0x034163E0 MOV X2, X31
	0x034163E4 BL 0x321B938
	0x034163E8 CBZ X22, 0x3416648
	0x034163EC ADRP X8, 0xD18000
	0x034163F0 LDR X8, [X8 + 0x7D0]
	0x034163F4 ADRP X9, 0xCDE000
	0x034163F8 LDR X9, [X9 + 0x810]
	0x034163FC MOV X2, X0
	0x03416400 LDR X1, [X8]
	0x03416404 LDR X3, [X9]
	0x03416408 MOV X0, X22
	0x0341640C BL 0x2AA5098
	0x03416410 LDR X0, [X19 + 0x20]
	0x03416414 MOV X1, X31
	0x03416418 BL 0x3483BE4
	0x0341641C MOV X23, X0
	0x03416420 MOV X0, X31
	0x03416424 BL 0x3241948
	0x03416428 CBZ X0, 0x3416634
	0x0341642C LDR X8, [X0]
	0x03416430 LDR X9, [X8 + 0x268]
	0x03416434 LDR X2, [X8 + 0x270]
	0x03416438 MOV X1, X23
	0x0341643C BLR X9
	0x03416440 LDR X24, [X25 + 0x10]
	0x03416444 CBZ X24, 0x3416638
	0x03416448 ADRP X10, 0xD18000
	0x0341644C LDR X10, [X10 + 0x7B8]
	0x03416450 LDR X8, [X24]
	0x03416454 LDR W26, [X25 + 0x18]
	0x03416458 LDP X27, X25, [X19 + 0x50]
	0x0341645C LDR X1, [X10]
	0x03416460 LDRH W9, [X8 + 0x12E]
	0x03416464 MOV X23, X0
	0x03416468 CBZ X9, 0x341648C
	0x0341646C LDR X10, [X8 + 0xB0]
	0x03416470 ADD X10, X10, 0x8
	0x03416474 LDUR X11, [X10 - 0x8]
	0x03416478 CMP X11, X1
	0x0341647C B.EQ 0x34164B4
	0x03416480 SUBS X9, X9, 0x1
	0x03416484 ADD X10, X10, 0x10
	0x03416488 B.NE 0x3416474
	0x0341648C MOVZ W2, 0x3
	0x03416490 MOV X0, X24
	0x03416494 BL 0x1C5C788
	0x03416498 B 0x34164C4
	0x0341649C LDR X8, [X19 + 0x60]
	0x034164A0 MOVN W9, 0x0
	0x034164A4 STR X8, [X31 + 0x18]
	0x034164A8 STR X31, [X19 + 0x60]
	0x034164AC STR W9, [X19]
	0x034164B0 B 0x3416520
	0x034164B4 LDR W9, [X10]
	0x034164B8 ADD W9, W9, 0x3
	0x034164BC ADD X8, X8, W9, 0x4, SXTW
	0x034164C0 ADD X0, X8, 0x138
	0x034164C4 LDP X8, X9, [X0]
	0x034164C8 MOV X0, X24
	0x034164CC MOV X1, X21
	0x034164D0 MOV X2, X20
	0x034164D4 MOV X3, X22
	0x034164D8 MOV X4, X23
	0x034164DC MOV W5, W26
	0x034164E0 MOV X6, X27
	0x034164E4 MOV X7, X25
	0x034164E8 STR X9, [X31]
	0x034164EC BLR X8
	0x034164F0 CBZ X0, 0x341663C
	0x034164F4 ADRP X8, 0xCE0000
	0x034164F8 LDR X8, [X8 + 0x1F8]
	0x034164FC LDR X1, [X8]
	0x03416500 BL 0x269F5D0
	0x03416504 ADRP X8, 0xCE0000
	0x03416508 LDR X8, [X8 + 0x1F0]
	0x0341650C STR X0, [X31 + 0x18]
	0x03416510 LDR X1, [X8]
	0x03416514 ADD X0, X31, 0x18
	0x03416518 BL 0x2677430
	0x0341651C TBZ X0, 0x0, 0x341657C
	0x03416520 ADRP X8, 0xCE0000
	0x03416524 LDR X8, [X8 + 0x1E0]
	0x03416528 ADD X0, X31, 0x18
	0x0341652C LDR X1, [X8]
	0x03416530 BL 0x2677474
	0x03416534 ADRP X8, 0xD18000
	0x03416538 LDR X8, [X8 + 0x828]
	0x0341653C LDR X1, [X8]
	0x03416540 BL 0x220E6DC
	0x03416544 MOVN W8, 0x1
	0x03416548 STR W8, [X19], #0x8
	0x0341654C MOV X20, X0
	0x03416550 LDR X0, [X28]
	0x03416554 ADRP X21, 0xD18000
	0x03416558 LDR W8, [X0 + 0xE0]
	0x0341655C LDR X21, [X21 + 0x820]
	0x03416560 CBNZ W8, 0x3416568
	0x03416564 BL 0x1C16DFC
	0x03416568 LDR X2, [X21]
	0x0341656C MOV X0, X19
	0x03416570 MOV X1, X20
	0x03416574 BL 0x26322B0
	0x03416578 B 0x34165B4
	0x0341657C STR W31, [X19]
	0x03416580 LDR X8, [X31 + 0x18]
	0x03416584 STR X8, [X19 + 0x60]
	0x03416588 LDR X0, [X28]
	0x0341658C LDR W8, [X0 + 0xE0]
	0x03416590 CBNZ W8, 0x3416598
	0x03416594 BL 0x1C16DFC
	0x03416598 ADRP X8, 0xD18000
	0x0341659C LDR X8, [X8 + 0x8A8]
	0x034165A0 ADD X0, X19, 0x8
	0x034165A4 LDR X3, [X8]
	0x034165A8 ADD X1, X31, 0x18
	0x034165AC MOV X2, X19
	0x034165B0 BL 0x1FB1E94
	0x034165B4 LDP X20, X19, [X31 + 0x60]
	0x034165B8 LDP X22, X21, [X31 + 0x50]
	0x034165BC LDP X24, X23, [X31 + 0x40]
	0x034165C0 LDP X26, X25, [X31 + 0x30]
	0x034165C4 LDP X28, X27, [X31 + 0x20]
	0x034165C8 LDR X30, [X31 + 0x10]
	0x034165CC ADD X31, X31, 0x70
	0x034165D0 RET
	0x034165D4 ADRP X0, 0xCE5000
	0x034165D8 LDR X0, [X0 + 0x578]
	0x034165DC BL 0x1C16D08
	0x034165E0 BL 0x1C16F10
	0x034165E4 MOV X20, X0
	0x034165E8 ADRP X0, 0xD18000
	0x034165EC LDR X0, [X0 + 0x858]
	0x034165F0 BL 0x1C16D08
	0x034165F4 MOV X1, X0
	0x034165F8 MOV X0, X20
	0x034165FC MOV X2, X31
	0x03416600 BL 0x3314A68
	0x03416604 ADRP X0, 0xD18000
	0x03416608 LDR X0, [X0 + 0x8B8]
	0x0341660C BL 0x1C16D08
	0x03416610 MOV X1, X0
	0x03416614 MOV X0, X20
	0x03416618 BL 0x1C16DEC
	0x0341661C BL 0x1C16F20
	0x03416620 BL 0x1C16F20
	0x03416624 BL 0x1C16F20
	0x03416628 BL 0x1C16F28
	0x0341662C BL 0x1C16F20
	0x03416630 BL 0x1C16F20
	0x03416634 BL 0x1C16F20
	0x03416638 BL 0x1C16F20
	0x0341663C BL 0x1C16F20
	0x03416640 BL 0x1C16F20
	0x03416644 BL 0x1C16F20
	0x03416648 BL 0x1C16F20
	0x0341664C B 0x34166E0
	0x03416650 B 0x34166E0
	0x03416654 B 0x34166E0
	0x03416658 B 0x34166E0
	0x0341665C B 0x34166E0
	0x03416660 B 0x34166E0
	0x03416664 B 0x34166E0
	0x03416668 B 0x34166E0
	0x0341666C B 0x34166E0
	0x03416670 B 0x34166E0
	0x03416674 B 0x34166E0
	0x03416678 B 0x34166E0
	0x0341667C B 0x34166E0
	0x03416680 B 0x34166E0
	0x03416684 B 0x34166E0
	0x03416688 B 0x34166E0
	0x0341668C B 0x34166E0
	0x03416690 B 0x34166E0
	0x03416694 B 0x34166E0
	0x03416698 B 0x34166E0
	0x0341669C B 0x34166E0
	0x034166A0 B 0x34166E0
	0x034166A4 B 0x34166E0
	0x034166A8 B 0x34166E0
	0x034166AC B 0x34166E0
	0x034166B0 B 0x34166E0
	0x034166B4 B 0x34166E0
	0x034166B8 B 0x34166E0
	0x034166BC B 0x34166E0
	0x034166C0 B 0x34166E0
	0x034166C4 B 0x34166E0
	0x034166C8 B 0x34166E0
	0x034166CC B 0x34166E0
	0x034166D0 B 0x34166E0
	0x034166D4 B 0x34166E0
	0x034166D8 B 0x34166E0
	0x034166DC B 0x34166E0
	0x034166E0 MOV X20, X0
	0x034166E4 CMP W1, 0x1
	0x034166E8 B.NE 0x3416784
	0x034166EC MOV X0, X20
	0x034166F0 BL 0x3EB1AD0
	0x034166F4 MOV X20, X0
	0x034166F8 ADRP X0, 0xCDD000
	0x034166FC LDR X0, [X0 + 0x7D0]
	0x03416700 BL 0x1C16D08
	0x03416704 LDR X8, [X20]
	0x03416708 LDR X1, [X8]
	0x0341670C BL 0x1C17270
	0x03416710 TBZ X0, 0x0, 0x341675C
	0x03416714 LDR X20, [X20]
	0x03416718 BL 0x3EB1AE0
	0x0341671C MOVN W8, 0x1
	0x03416720 STR W8, [X19], #0x8
	0x03416724 ADRP X0, 0xD18000
	0x03416728 LDR X0, [X0 + 0x320]
	0x0341672C BL 0x1C16D08
	0x03416730 LDR W8, [X0 + 0xE0]
	0x03416734 CBNZ W8, 0x341673C
	0x03416738 BL 0x1C16DFC
	0x0341673C ADRP X0, 0xD18000
	0x03416740 LDR X0, [X0 + 0x868]
	0x03416744 BL 0x1C16D08
	0x03416748 MOV X2, X0
	0x0341674C MOV X0, X19
	0x03416750 MOV X1, X20
	0x03416754 BL 0x26324C8
	0x03416758 B 0x34165B4
	0x0341675C MOVZ W0, 0x8
	0x03416760 BL 0x3EB1AF0
	0x03416764 LDR X8, [X20]
	0x03416768 STR X8, [X0]
	0x0341676C ADRP X1, 0xA9E000
	0x03416770 ADD X1, X1, 0xE58
	0x03416774 MOV X2, X31
	0x03416778 BL 0x3EB1B00
	0x0341677C MOV X20, X0
	0x03416780 BL 0x3EB1AE0
	0x03416784 MOV X0, X20
	0x03416788 BL 0x1D2C690
	0x0341678C BL 0x1990590
	0x03416790 STR X30, [X31 - 0x30]!
	0x03416794 STP X22, X21, [X31 + 0x10]
	0x03416798 STP X20, X19, [X31 + 0x20]
	0x0341679C ADRP X22, 0xFC7000
	0x034167A0 ADRP X21, 0xD18000
	0x034167A4 LDRB W8, [X22 + 0x5CC]
	0x034167A8 LDR X21, [X21 + 0x320]
	0x034167AC MOV X19, X1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFC8000
	014 Move W8, [X20+1479]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {100}
	020 Move X0, 0xD19000
	021 Move X0, [X0+2168]
	022 Call 0x1C17CF4
	023 Move X0, 0xD19000
	024 Move X0, [X0+2080]
	025 Call 0x1C17CF4
	026 Move X0, 0xD19000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE7000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE7000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xCDF000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDF000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDF000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xD19000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0xD19000
	048 Move X0, [X0+2088]
	049 Call 0x1C17CF4
	050 Move X0, 0xD19000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE2000
	054 Move X0, [X0+3056]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE1000
	057 Move X0, [X0+480]
	058 Call 0x1C17CF4
	059 Move X0, 0xCE1000
	060 Move X0, [X0+496]
	061 Call 0x1C17CF4
	062 Move X0, 0xCE1000
	063 Move X0, [X0+504]
	064 Call 0x1C17CF4
	065 Move X0, 0xCE7000
	066 Move X0, [X0+928]
	067 Call 0x1C17CF4
	068 Move X0, 0xCE0000
	069 Move X0, [X0+2600]
	070 Call 0x1C17CF4
	071 Move X0, 0xD19000
	072 Move X0, [X0+2112]
	073 Call 0x1C17CF4
	074 Move X0, 0xD07000
	075 Move X0, [X0+1240]
	076 Call 0x1C17CF4
	077 Move X0, 0xD19000
	078 Move X0, [X0+2120]
	079 Call 0x1C17CF4
	080 Move X0, 0xCE7000
	081 Move X0, [X0+2440]
	082 Call 0x1C17CF4
	083 Move X0, 0xCE7000
	084 Move X0, [X0+1824]
	085 Call 0x1C17CF4
	086 Move X0, 0xD19000
	087 Move X0, [X0+2000]
	088 Call 0x1C17CF4
	089 Move X0, 0xD19000
	090 Move X0, [X0+2128]
	091 Call 0x1C17CF4
	092 Move X0, 0xD19000
	093 Move X0, [X0+2176]
	094 Call 0x1C17CF4
	095 Move X0, 0xCDE000
	096 Move X0, [X0+2440]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X20+1479], W8
	100 Move [X31+24], X31
	101 Move X28, 0xD19000
	102 Move W8, [X19]
	103 Move X28, [X28+800]
	104 Compare W8, 0
	105 JumpIfEqual {318}
	106 Move X8, [X19+32]
	107 Compare X8, 0
	108 JumpIfEqual {410}
	109 Move X8, 0xD19000
	110 Move X9, 0xCDE000
	111 Move X8, [X8+2176]
	112 Move X9, [X9+2440]
	113 Move X0, X19
	114 Move X25, [X19+56]
	115 Move X21, [X8]
	116 Move X20, [X9]
	117 Add X0, X0, 40
	118 Move W8, [X0]
	119 Compare W8, 0
	120 JumpIfEqual {140}
	121 Move X8, 0xD19000
	122 Move X8, [X8+2096]
	123 Move X1, [X8]
	124 Call Nullable`1<Boolean>.ToString, X0
	125 Compare X0, 0
	126 JumpIfEqual {437}
	127 Move X1, X31
	128 Call String.ToLower, X0
	129 Move X8, 0xD19000
	130 Move X8, [X8+2112]
	131 Move X9, 0xCE7000
	132 Move X9, [X9+1824]
	133 Move X2, X0
	134 Move X1, [X8]
	135 Move X3, [X9]
	136 Move X0, X20
	137 Move X4, X31
	138 Call String.Concat, X0, X1, X2, X3
	139 Move X20, X0
	140 Move X22, [X19+48]
	141 Compare X22, 0
	142 JumpIfEqual {164}
	143 Move X8, 0xCE0000
	144 Move X8, [X8+2600]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X22
	151 Move X1, X31
	152 Call Uri.EscapeDataString, X0
	153 Move X8, 0xD19000
	154 Move X8, [X8+2120]
	155 Move X9, 0xCE7000
	156 Move X9, [X9+1824]
	157 Move X2, X0
	158 Move X1, [X8]
	159 Move X3, [X9]
	160 Move X0, X20
	161 Move X4, X31
	162 Call String.Concat, X0, X1, X2, X3
	163 Move X20, X0
	164 Compare X25, 0
	165 JumpIfEqual {428}
	166 Move X0, [X25+32]
	167 Compare X0, 0
	168 JumpIfEqual {429}
	169 Move X1, X31
	170 Call Uri.get_AbsolutePath, X0
	171 Move X8, 0xCE7000
	172 Move X8, [X8+2264]
	173 Move X22, X0
	174 Move X0, [X8]
	175 Move W1, 1
	176 Call 0x1C17D6C
	177 Move X1, X0
	178 Compare X1, 0
	179 JumpIfEqual {430}
	180 Move W8, [X1+24]
	181 Compare W8, 0
	182 JumpIfEqual {431}
	183 Move W8, 47
	184 NotImplemented "Instruction STRH not yet implemented."
	185 Compare X22, 0
	186 JumpIfEqual {432}
	187 Move X0, X22
	188 Move X2, X31
	189 Call String.TrimEnd, X0, X1
	190 Move X1, X21
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Move X8, 0xCE7000
	194 Move X8, [X8+928]
	195 Move X22, X0
	196 Move X23, [X25+32]
	197 Move X0, [X8]
	198 Call 0x1C17F10
	199 Move X21, X0
	200 Move X1, X23
	201 Move X2, X31
	202 Call UriBuilder..ctor, X0, X1
	203 Compare X21, 0
	204 JumpIfEqual {433}
	205 Move X0, X21
	206 Move X1, X22
	207 Move X2, X31
	208 Call UriBuilder.set_Path, X0, X1
	209 Move X0, X21
	210 Move X1, X20
	211 Move X2, X31
	212 Call UriBuilder.set_Query, X0, X1
	213 Move X0, X21
	214 Move X1, X31
	215 Call UriBuilder.get_Uri, X0
	216 Move X8, 0xD07000
	217 Move X9, 0xCDF000
	218 Move X8, [X8+1240]
	219 Move X9, [X9+1744]
	220 Move X20, X0
	221 Move X21, [X8]
	222 Move X0, [X9]
	223 Call 0x1C17F10
	224 Move X8, 0xCDF000
	225 Move X8, [X8+1728]
	226 Move X22, X0
	227 Move X1, [X8]
	228 Call Dictionary`2<Object, Object>..ctor, X0
	229 Move X0, [X19+64]
	230 Move X1, X31
	231 Call String.IsNullOrEmpty, X0
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {282}
	236 Move X0, X31
	237 Call Encoding.get_UTF8
	238 Move X8, 0xCE7000
	239 Move X23, X0
	240 Move X0, [X19+64]
	241 Move X2, [X19+72]
	242 Move X8, [X8+2440]
	243 Move X1, [X8]
	244 Move X3, X31
	245 Call String.Concat, X0, X1, X2
	246 Move X1, X0
	247 Compare X23, 0
	248 JumpIfEqual {438}
	249 Move X8, [X23]
	250 Move X9, [X8+616]
	251 Move X2, [X8+624]
	252 Move X0, X23
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Move X8, 0xCE7000
	255 Move X8, [X8+2536]
	256 Move X23, X0
	257 Move X0, [X8]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X0, X23
	263 Move X1, X31
	264 Call Convert.ToBase64String, X0
	265 Move X1, X0
	266 Move X8, 0xD19000
	267 Move X8, [X8+2128]
	268 Move X0, [X8]
	269 Move X2, X31
	270 Call String.Concat, X0, X1
	271 Compare X22, 0
	272 JumpIfEqual {439}
	273 Move X8, 0xD19000
	274 Move X8, [X8+2000]
	275 Move X9, 0xCDF000
	276 Move X9, [X9+2064]
	277 Move X2, X0
	278 Move X1, [X8]
	279 Move X3, [X9]
	280 Move X0, X22
	281 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	282 Move X0, [X19+32]
	283 Move X1, X31
	284 Call JsonWriter.ToJson, X0
	285 Move X23, X0
	286 Move X0, X31
	287 Call Encoding.get_UTF8
	288 Compare X0, 0
	289 JumpIfEqual {434}
	290 Move X8, [X0]
	291 Move X9, [X8+616]
	292 Move X2, [X8+624]
	293 Move X1, X23
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X24, [X25+16]
	296 Compare X24, 0
	297 JumpIfEqual {435}
	298 Move X10, 0xD19000
	299 Move X10, [X10+1976]
	300 Move X8, [X24]
	301 Move W26, [X25+24]
	302 Move X27, [X19+80]
	303 Move X25, [X19+88]
	304 Move X1, [X10]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Move X23, X0
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move W2, 3
	316 Move X0, X24
	317 Call 0x1C5D788
	318 Move X8, [X19+96]
	319 Move TEMP, 0
	320 Not TEMP
	321 Move W9, TEMP
	322 Move [X31+24], X8
	323 Move [X19+96], X31
	324 Move [X19], W9
	325 Move W9, [X10]
	326 Add W9, W9, 3
	327 Add X8, X8, W9
	328 Add X0, X8, 312
	329 Move X8, [X0]
	330 Move X9, [X0+8]
	331 Move X0, X24
	332 Move X1, X21
	333 Move X2, X20
	334 Move X3, X22
	335 Move X4, X23
	336 Move W5, W26
	337 Move X6, X27
	338 Move X7, X25
	339 Move [X31], X9
	340 NotImplemented "Instruction BLR not yet implemented."
	341 Compare X0, 0
	342 JumpIfEqual {436}
	343 Move X8, 0xCE1000
	344 Move X8, [X8+504]
	345 Move X1, [X8]
	346 Call Task`1<Object>.GetAwaiter, X0
	347 Move X8, 0xCE1000
	348 Move X8, [X8+496]
	349 Move [X31+24], X0
	350 Move X1, [X8]
	351 Add X0, X31, 24
	352 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {382}
	357 Move X8, 0xCE1000
	358 Move X8, [X8+480]
	359 Add X0, X31, 24
	360 Move X1, [X8]
	361 Call TaskAwaiter`1<Object>.GetResult, X0
	362 Move X8, 0xD19000
	363 Move X8, [X8+2088]
	364 Move X1, [X8]
	365 Call JsonParser.FromJson, X0
	366 Move TEMP, 1
	367 Not TEMP
	368 Move W8, TEMP
	369 Move [X19+8], W8
	370 Move X20, X0
	371 Move X0, [X28]
	372 Move X21, 0xD19000
	373 Move W8, [X0+224]
	374 Move X21, [X21+2080]
	375 Compare W8, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1C17DFC
	378 Move X2, [X21]
	379 Move X0, X19
	380 Move X1, X20
	381 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	382 Move [X19], W31
	383 Move X8, [X31+24]
	384 Move [X19+96], X8
	385 Move X0, [X28]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Move X8, 0xD19000
	391 Move X8, [X8+2168]
	392 Add X0, X19, 8
	393 Move X3, [X8]
	394 Add X1, X31, 24
	395 Move X2, X19
	396 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	397 Move X20, [X31+96]
	398 Move X19, [X31+104]
	399 Move X22, [X31+80]
	400 Move X21, [X31+88]
	401 Move X24, [X31+64]
	402 Move X23, [X31+72]
	403 Move X26, [X31+48]
	404 Move X25, [X31+56]
	405 Move X28, [X31+32]
	406 Move X27, [X31+40]
	407 Move X30, [X31+16]
	408 Add X31, X31, 112
	409 Return 
	410 Move X0, 0xCE6000
	411 Move X0, [X0+1400]
	412 Call 0x1C17D08
	413 Call 0x1C17F10
	414 Move X20, X0
	415 Move X0, 0xD19000
	416 Move X0, [X0+2136]
	417 Call 0x1C17D08
	418 Move X1, X0
	419 Move X0, X20
	420 Move X2, X31
	421 Call ArgumentException..ctor, X0, X1
	422 Move X0, 0xD19000
	423 Move X0, [X0+2184]
	424 Call 0x1C17D08
	425 Move X1, X0
	426 Move X0, X20
	427 Call 0x1C17DEC
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F20
	431 Call 0x1C17F28
	432 Call 0x1C17F20
	433 Call 0x1C17F20
	434 Call 0x1C17F20
	435 Call 0x1C17F20
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Move X20, X0
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X0, X20
	443 Call 0x3EB2AD0
	444 Move X20, X0
	445 Move X0, 0xCDE000
	446 Move X0, [X0+2000]
	447 Call 0x1C17D08
	448 Move X8, [X20]
	449 Move X1, [X8]
	450 Call 0x1C18270
	451 Move TEMP, X0
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfNotEqual {475}
	455 Move X20, [X20]
	456 Call 0x3EB2AE0
	457 Move TEMP, 1
	458 Not TEMP
	459 Move W8, TEMP
	460 Move [X19+8], W8
	461 Move X0, 0xD19000
	462 Move X0, [X0+800]
	463 Call 0x1C17D08
	464 Move W8, [X0+224]
	465 Compare W8, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Move X0, 0xD19000
	469 Move X0, [X0+2152]
	470 Call 0x1C17D08
	471 Move X2, X0
	472 Move X0, X19
	473 Move X1, X20
	474 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	475 Move W0, 8
	476 Call 0x3EB2AF0
	477 Move X8, [X20]
	478 Move [X0], X8
	479 Move X1, 0xA9F000
	480 Add X1, X1, 3672
	481 Move X2, X31
	482 Call 0x3EB2B00
	483 Move X20, X0
	484 Call 0x3EB2AE0
	485 Move X0, X20
	486 Call 0x1D2D690
	487 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034167B0 MOV X20, X0
	0x034167B4 TBNZ X8, 0x0, 0x34167D8
	0x034167B8 ADRP X0, 0xD18000
	0x034167BC LDR X0, [X0 + 0x870]
	0x034167C0 BL 0x1C16CF4
	0x034167C4 ADRP X0, 0xD18000
	0x034167C8 LDR X0, [X0 + 0x320]
	0x034167CC BL 0x1C16CF4
	0x034167D0 MOVZ W8, 0x1
	0x034167D4 STRB W8, [X22 + 0x5CC]
	0x034167D8 LDR X0, [X21]
	0x034167DC ADRP X21, 0xD18000
	0x034167E0 LDR W8, [X0 + 0xE0]
	0x034167E4 LDR X21, [X21 + 0x870]
	0x034167E8 CBNZ W8, 0x34167F0
	0x034167EC BL 0x1C16DFC
	0x034167F0 LDR X2, [X21]
	0x034167F4 ADD X0, X20, 0x8
	0x034167F8 MOV X1, X19
	0x034167FC LDP X20, X19, [X31 + 0x20]
	0x03416800 LDP X22, X21, [X31 + 0x10]
	0x03416804 LDR X30, [X31], #0x30
	0x03416808 B 0x2632228
	0x0341680C SUB X31, X31, 0x70
	0x03416810 STR X30, [X31 + 0x10]
	0x03416814 STP X28, X27, [X31 + 0x20]
	0x03416818 STP X26, X25, [X31 + 0x30]
	0x0341681C STP X24, X23, [X31 + 0x40]
	0x03416820 STP X22, X21, [X31 + 0x50]
	0x03416824 STP X20, X19, [X31 + 0x60]
	0x03416828 ADRP X20, 0xFC7000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFC8000
	007 Move X21, 0xD19000
	008 Move W8, [X22+1480]
	009 Move X21, [X21+800]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD19000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0xD19000
	020 Move X0, [X0+800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1480], W8
	024 Move X0, [X21]
	025 Move X21, 0xD19000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2160]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

