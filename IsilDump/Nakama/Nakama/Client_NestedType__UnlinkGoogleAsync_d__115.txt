Type: Nakama.Client/<UnlinkGoogleAsync>d__115

Method: System.Void MoveNext()

Disassembly:
	0x0346BD68 MOV X1, X22
	0x0346BD6C BLR X8
	0x0346BD70 TBZ X0, 0x0, 0x346BE04
	0x0346BD74 LDR X8, [X19 + 0x70]
	0x0346BD78 CBZ X8, 0x346C0E0
	0x0346BD7C LDR X1, [X8 + 0x18]
	0x0346BD80 LDR X3, [X19 + 0x68]
	0x0346BD84 LDR X4, [X8 + 0x50]
	0x0346BD88 MOV X0, X20
	0x0346BD8C MOV X2, X31
	0x0346BD90 MOV X5, X31
	0x0346BD94 BL 0x34440A8
	0x0346BD98 CBZ X0, 0x346C0E4
	0x0346BD9C ADRP X8, 0xC89000
	0x0346BDA0 LDR X8, [X8 + 0x840]
	0x0346BDA4 LDR X1, [X8]
	0x0346BDA8 BL 0x269F5D0
	0x0346BDAC ADRP X8, 0xC89000
	0x0346BDB0 LDR X8, [X8 + 0x838]
	0x0346BDB4 STR X0, [X31 + 0x18]
	0x0346BDB8 LDR X1, [X8]
	0x0346BDBC ADD X0, X31, 0x18
	0x0346BDC0 BL 0x2677430
	0x0346BDC4 TBNZ X0, 0x0, 0x346BBAC
	0x0346BDC8 STR W31, [X19]
	0x0346BDCC LDR X8, [X31 + 0x18]
	0x0346BDD0 STR X8, [X19 + 0x78]
	0x0346BDD4 LDR X0, [X26]
	0x0346BDD8 LDR W8, [X0 + 0xE0]
	0x0346BDDC CBNZ W8, 0x346BDE4
	0x0346BDE0 BL 0x1C16DFC
	0x0346BDE4 ADRP X8, 0xCC5000
	0x0346BDE8 LDR X8, [X8 + 0x5A0]
	0x0346BDEC ADD X0, X19, 0x8
	0x0346BDF0 LDR X3, [X8]
	0x0346BDF4 ADD X1, X31, 0x18
	0x0346BDF8 MOV X2, X19
	0x0346BDFC BL 0x218907C
	0x0346BE00 B 0x346BFE8
	0x0346BE04 CBZ X20, 0x346C0AC
	0x0346BE08 ADRP X8, 0xC90000
	0x0346BE0C LDR X21, [X20 + 0x58]
	0x0346BE10 LDR X23, [X19 + 0x70]
	0x0346BE14 LDR X8, [X8 + 0x818]
	0x0346BE18 LDR X0, [X8]
	0x0346BE1C BL 0x1C16F10
	0x0346BE20 ADRP X8, 0xCC5000
	0x0346BE24 LDR X8, [X8 + 0x5B0]
	0x0346BE28 MOV X22, X0
	0x0346BE2C LDR X2, [X8]
	0x0346BE30 MOV X1, X23
	0x0346BE34 MOV X3, X31
	0x0346BE38 BL 0x2D27AA8
	0x0346BE3C LDR X8, [X19 + 0x70]
	0x0346BE40 CBZ X8, 0x346C0A0
	0x0346BE44 LDR X23, [X19 + 0x68]
	0x0346BE48 CBNZ X23, 0x346BE50
	0x0346BE4C LDR X23, [X20 + 0x18]
	0x0346BE50 LDR X24, [X8 + 0x18]
	0x0346BE54 LDR X1, [X8 + 0x50]
	0x0346BE58 ADRP X8, 0xCC4000
	0x0346BE5C LDR X8, [X8 + 0x7C8]
	0x0346BE60 STP X31, X31, [X31]
	0x0346BE64 LDR X2, [X8]
	0x0346BE68 ADD X0, X31, 0x0
	0x0346BE6C BL 0x242E368
	0x0346BE70 ADRP X8, 0xCC4000
	0x0346BE74 LDR X8, [X8 + 0x7D0]
	0x0346BE78 LDR X0, [X8]
	0x0346BE7C BL 0x1C16F10
	0x0346BE80 LDP X3, X4, [X31]
	0x0346BE84 MOV X25, X0
	0x0346BE88 MOV X1, X24
	0x0346BE8C MOV X2, X23
	0x0346BE90 BL 0x3465404
	0x0346BE94 CBZ X21, 0x346C0A4
	0x0346BE98 MOV X0, X21
	0x0346BE9C MOV X1, X22
	0x0346BEA0 MOV X2, X25
	0x0346BEA4 BL 0x3465B68
	0x0346BEA8 CBZ X0, 0x346C0A8
	0x0346BEAC MOV X1, X31
	0x0346BEB0 BL 0x33ED394
	0x0346BEB4 STR X0, [X31 + 0x10]
	0x0346BEB8 ADD X0, X31, 0x10
	0x0346BEBC MOV X1, X31
	0x0346BEC0 BL 0x32C3A80
	0x0346BEC4 TBZ X0, 0x0, 0x346BF48
	0x0346BEC8 ADD X0, X31, 0x10
	0x0346BECC MOV X1, X31
	0x0346BED0 BL 0x32C3B4C
	0x0346BED4 LDR X8, [X19 + 0x70]
	0x0346BED8 CBZ X8, 0x346C09C
	0x0346BEDC LDR X0, [X8 + 0x48]
	0x0346BEE0 MOV X1, X31
	0x0346BEE4 BL 0x32277A8
	0x0346BEE8 TBNZ X0, 0x0, 0x346BFBC
	0x0346BEEC LDR X9, [X19 + 0x70]
	0x0346BEF0 CBZ X9, 0x346C0B8
	0x0346BEF4 LDR X22, [X9 + 0x18]
	0x0346BEF8 CBZ X22, 0x346C0BC
	0x0346BEFC ADRP X10, 0xC89000
	0x0346BF00 LDR X8, [X22]
	0x0346BF04 LDR X21, [X9 + 0x48]
	0x0346BF08 LDR X10, [X10 + 0x818]
	0x0346BF0C LDRH W9, [X8 + 0x12E]
	0x0346BF10 LDR X1, [X10]
	0x0346BF14 CBZ X9, 0x346BF38
	0x0346BF18 LDR X10, [X8 + 0xB0]
	0x0346BF1C ADD X10, X10, 0x8
	0x0346BF20 LDUR X11, [X10 - 0x8]
	0x0346BF24 CMP X11, X1
	0x0346BF28 B.EQ 0x346BF88
	0x0346BF2C SUBS X9, X9, 0x1
	0x0346BF30 ADD X10, X10, 0x10
	0x0346BF34 B.NE 0x346BF20
	0x0346BF38 MOVZ W2, 0x9
	0x0346BF3C MOV X0, X22
	0x0346BF40 BL 0x1C5C788
	0x0346BF44 B 0x346BF98
	0x0346BF48 MOVZ W8, 0x1
	0x0346BF4C STR W8, [X19]
	0x0346BF50 LDR X8, [X31 + 0x10]
	0x0346BF54 STR X8, [X19 + 0x80]
	0x0346BF58 LDR X0, [X26]
	0x0346BF5C LDR W8, [X0 + 0xE0]
	0x0346BF60 CBNZ W8, 0x346BF68
	0x0346BF64 BL 0x1C16DFC
	0x0346BF68 ADRP X8, 0xCC5000
	0x0346BF6C LDR X8, [X8 + 0x5A8]
	0x0346BF70 ADD X0, X19, 0x8
	0x0346BF74 LDR X3, [X8]
	0x0346BF78 ADD X1, X31, 0x10
	0x0346BF7C MOV X2, X19
	0x0346BF80 BL 0x218A740
	0x0346BF84 B 0x346BFE8
	0x0346BF88 LDR W9, [X10]
	0x0346BF8C ADD W9, W9, 0x9
	0x0346BF90 ADD X8, X8, W9, 0x4, SXTW
	0x0346BF94 ADD X0, X8, 0x138
	0x0346BF98 LDP X8, X1, [X0]
	0x0346BF9C MOV X0, X22
	0x0346BFA0 BLR X8
	0x0346BFA4 MOV X1, X0
	0x0346BFA8 CBZ X21, 0x346C0C0
	0x0346BFAC MOV X0, X21
	0x0346BFB0 MOV X2, X31
	0x0346BFB4 BL 0x322693C
	0x0346BFB8 TBZ X0, 0x0, 0x346C004
	0x0346BFBC MOVN W8, 0x1
	0x0346BFC0 STR W8, [X19]
	0x0346BFC4 STR X31, [X19 + 0x70]
	0x0346BFC8 LDR X0, [X26]
	0x0346BFCC ADD X19, X19, 0x8
	0x0346BFD0 LDR W8, [X0 + 0xE0]
	0x0346BFD4 CBNZ W8, 0x346BFDC
	0x0346BFD8 BL 0x1C16DFC
	0x0346BFDC MOV X0, X19
	0x0346BFE0 MOV X1, X31
	0x0346BFE4 BL 0x32C4864
	0x0346BFE8 LDP X20, X19, [X31 + 0x60]
	0x0346BFEC LDP X22, X21, [X31 + 0x50]
	0x0346BFF0 LDP X24, X23, [X31 + 0x40]
	0x0346BFF4 LDP X26, X25, [X31 + 0x30]
	0x0346BFF8 LDR X30, [X31 + 0x20]
	0x0346BFFC ADD X31, X31, 0x70
	0x0346C000 RET
	0x0346C004 LDR X8, [X19 + 0x70]
	0x0346C008 CBZ X8, 0x346C0CC
	0x0346C00C CBZ X20, 0x346C0D0
	0x0346C010 LDR X1, [X8 + 0x18]
	0x0346C014 LDR X4, [X8 + 0x50]
	0x0346C018 LDR X3, [X19 + 0x68]
	0x0346C01C MOV X0, X20
	0x0346C020 MOV X2, X31
	0x0346C024 MOV X5, X31
	0x0346C028 BL 0x34440A8
	0x0346C02C CBZ X0, 0x346C0D4
	0x0346C030 ADRP X8, 0xC88000
	0x0346C034 LDR X8, [X8 + 0x840]
	0x0346C038 LDR X1, [X8]
	0x0346C03C BL 0x269F5D0
	0x0346C040 ADRP X8, 0xC88000
	0x0346C044 LDR X8, [X8 + 0x838]
	0x0346C048 STR X0, [X31 + 0x18]
	0x0346C04C LDR X1, [X8]
	0x0346C050 ADD X0, X31, 0x18
	0x0346C054 BL 0x2677430
	0x0346C058 TBNZ X0, 0x0, 0x346BB68
	0x0346C05C MOVZ W8, 0x2
	0x0346C060 STR W8, [X19]
	0x0346C064 LDR X8, [X31 + 0x18]
	0x0346C068 STR X8, [X19 + 0x78]
	0x0346C06C LDR X0, [X26]
	0x0346C070 LDR W8, [X0 + 0xE0]
	0x0346C074 CBNZ W8, 0x346C07C
	0x0346C078 BL 0x1C16DFC
	0x0346C07C ADRP X8, 0xCC4000
	0x0346C080 LDR X8, [X8 + 0x5A0]
	0x0346C084 ADD X0, X19, 0x8
	0x0346C088 LDR X3, [X8]
	0x0346C08C ADD X1, X31, 0x18
	0x0346C090 MOV X2, X19
	0x0346C094 BL 0x218907C
	0x0346C098 B 0x346BFE8
	0x0346C09C BL 0x1C16F20
	0x0346C0A0 BL 0x1C16F20
	0x0346C0A4 BL 0x1C16F20
	0x0346C0A8 BL 0x1C16F20
	0x0346C0AC BL 0x1C16F20
	0x0346C0B0 BL 0x1C16F20
	0x0346C0B4 BL 0x1C16F20
	0x0346C0B8 BL 0x1C16F20
	0x0346C0BC BL 0x1C16F20
	0x0346C0C0 BL 0x1C16F20
	0x0346C0C4 BL 0x1C16F20
	0x0346C0C8 BL 0x1C16F20
	0x0346C0CC BL 0x1C16F20
	0x0346C0D0 BL 0x1C16F20
	0x0346C0D4 BL 0x1C16F20
	0x0346C0D8 BL 0x1C16F20
	0x0346C0DC BL 0x1C16F20
	0x0346C0E0 BL 0x1C16F20
	0x0346C0E4 BL 0x1C16F20
	0x0346C0E8 B 0x346C190
	0x0346C0EC B 0x346C190
	0x0346C0F0 B 0x346C190
	0x0346C0F4 B 0x346C190
	0x0346C0F8 B 0x346C190
	0x0346C0FC B 0x346C190
	0x0346C100 B 0x346C190
	0x0346C104 B 0x346C190
	0x0346C108 B 0x346C190
	0x0346C10C B 0x346C190
	0x0346C110 B 0x346C190
	0x0346C114 B 0x346C190
	0x0346C118 B 0x346C190
	0x0346C11C B 0x346C190
	0x0346C120 B 0x346C190
	0x0346C124 B 0x346C190
	0x0346C128 B 0x346C190
	0x0346C12C B 0x346C190
	0x0346C130 B 0x346C190
	0x0346C134 B 0x346C190
	0x0346C138 B 0x346C190
	0x0346C13C B 0x346C190
	0x0346C140 B 0x346C190
	0x0346C144 B 0x346C190
	0x0346C148 B 0x346C190
	0x0346C14C B 0x346C190
	0x0346C150 B 0x346C190
	0x0346C154 B 0x346C190
	0x0346C158 B 0x346C190
	0x0346C15C B 0x346C190
	0x0346C160 B 0x346C190
	0x0346C164 B 0x346C190
	0x0346C168 B 0x346C190
	0x0346C16C B 0x346C190
	0x0346C170 B 0x346C190
	0x0346C174 B 0x346C190
	0x0346C178 B 0x346C190
	0x0346C17C B 0x346C190
	0x0346C180 B 0x346C190
	0x0346C184 B 0x346C190
	0x0346C188 B 0x346C190
	0x0346C18C B 0x346C190
	0x0346C190 MOV X20, X0
	0x0346C194 CMP W1, 0x1
	0x0346C198 B.NE 0x346C22C
	0x0346C19C MOV X0, X20
	0x0346C1A0 BL 0x3EB1AD0
	0x0346C1A4 MOV X20, X0
	0x0346C1A8 ADRP X0, 0xC87000
	0x0346C1AC LDR X0, [X0 + 0x7D0]
	0x0346C1B0 BL 0x1C16D08
	0x0346C1B4 LDR X8, [X20]
	0x0346C1B8 LDR X1, [X8]
	0x0346C1BC BL 0x1C17270
	0x0346C1C0 TBZ X0, 0x0, 0x346C204
	0x0346C1C4 LDR X20, [X20]
	0x0346C1C8 BL 0x3EB1AE0
	0x0346C1CC MOVN W8, 0x1
	0x0346C1D0 STR X31, [X19 + 0x70]
	0x0346C1D4 STR W8, [X19], #0x8
	0x0346C1D8 ADRP X0, 0xC8A000
	0x0346C1DC LDR X0, [X0 + 0x280]
	0x0346C1E0 BL 0x1C16D08
	0x0346C1E4 LDR W8, [X0 + 0xE0]
	0x0346C1E8 CBNZ W8, 0x346C1F0
	0x0346C1EC BL 0x1C16DFC
	0x0346C1F0 MOV X0, X19
	0x0346C1F4 MOV X1, X20
	0x0346C1F8 MOV X2, X31
	0x0346C1FC BL 0x32C4908
	0x0346C200 B 0x346BFE8
	0x0346C204 MOVZ W0, 0x8
	0x0346C208 BL 0x3EB1AF0
	0x0346C20C LDR X8, [X20]
	0x0346C210 STR X8, [X0]
	0x0346C214 ADRP X1, 0xA48000
	0x0346C218 ADD X1, X1, 0xE58
	0x0346C21C MOV X2, X31
	0x0346C220 BL 0x3EB1B00
	0x0346C224 MOV X20, X0
	0x0346C228 BL 0x3EB1AE0
	0x0346C22C MOV X0, X20
	0x0346C230 BL 0x1D2C690
	0x0346C234 BL 0x1990590
	0x0346C238 STR X30, [X31 - 0x30]!
	0x0346C23C STP X22, X21, [X31 + 0x10]
	0x0346C240 STP X20, X19, [X31 + 0x20]
	0x0346C244 ADRP X21, 0xF71000
	0x0346C248 ADRP X22, 0xC8A000
	0x0346C24C LDRB W8, [X21 + 0x7DA]
	0x0346C250 LDR X22, [X22 + 0x280]
	0x0346C254 MOV X19, X1
	0x0346C258 MOV X20, X0
	0x0346C25C TBNZ X8, 0x0, 0x346C274
	0x0346C260 ADRP X0, 0xC8A000
	0x0346C264 LDR X0, [X0 + 0x280]
	0x0346C268 BL 0x1C16CF4
	0x0346C26C MOVZ W8, 0x1
	0x0346C270 STRB W8, [X21 + 0x7DA]
	0x0346C274 LDR X0, [X22]
	0x0346C278 LDR W8, [X0 + 0xE0]
	0x0346C27C CBNZ W8, 0x346C284
	0x0346C280 BL 0x1C16DFC
	0x0346C284 ADD X0, X20, 0x8
	0x0346C288 MOV X1, X19
	0x0346C28C LDP X20, X19, [X31 + 0x20]
	0x0346C290 LDP X22, X21, [X31 + 0x10]
	0x0346C294 MOV X2, X31
	0x0346C298 LDR X30, [X31], #0x30
	0x0346C29C B 0x32C477C
	0x0346C2A0 SUB X31, X31, 0x70
	0x0346C2A4 STP X30, X25, [X31 + 0x30]
	0x0346C2A8 STP X24, X23, [X31 + 0x40]
	0x0346C2AC STP X22, X21, [X31 + 0x50]
	0x0346C2B0 STP X20, X19, [X31 + 0x60]
	0x0346C2B4 ADRP X20, 0xF71000
	0x0346C2B8 LDRB W8, [X20 + 0x7DB]
	0x0346C2BC MOV X19, X0
	0x0346C2C0 TBNZ X8, 0x0, 0x346C374
	0x0346C2C4 ADRP X0, 0xCC4000
	0x0346C2C8 LDR X0, [X0 + 0x5C0]
	0x0346C2CC BL 0x1C16CF4
	0x0346C2D0 ADRP X0, 0xCC4000
	0x0346C2D4 LDR X0, [X0 + 0x5C8]
	0x0346C2D8 BL 0x1C16CF4
	0x0346C2DC ADRP X0, 0xC8A000
	0x0346C2E0 LDR X0, [X0 + 0x280]
	0x0346C2E4 BL 0x1C16CF4
	0x0346C2E8 ADRP X0, 0xC89000
	0x0346C2EC LDR X0, [X0 + 0xA10]
	0x0346C2F0 BL 0x1C16CF4
	0x0346C2F4 ADRP X0, 0xC88000
	0x0346C2F8 LDR X0, [X0 + 0x9F0]
	0x0346C2FC BL 0x1C16CF4
	0x0346C300 ADRP X0, 0xC8F000
	0x0346C304 LDR X0, [X0 + 0x818]
	0x0346C308 BL 0x1C16CF4
	0x0346C30C ADRP X0, 0xC88000
	0x0346C310 LDR X0, [X0 + 0x818]
	0x0346C314 BL 0x1C16CF4
	0x0346C318 ADRP X0, 0xCC3000
	0x0346C31C LDR X0, [X0 + 0x7C8]
	0x0346C320 BL 0x1C16CF4
	0x0346C324 ADRP X0, 0xCC3000
	0x0346C328 LDR X0, [X0 + 0x7D0]
	0x0346C32C BL 0x1C16CF4
	0x0346C330 ADRP X0, 0xC88000
	0x0346C334 LDR X0, [X0 + 0x830]
	0x0346C338 BL 0x1C16CF4
	0x0346C33C ADRP X0, 0xC88000
	0x0346C340 LDR X0, [X0 + 0x838]
	0x0346C344 BL 0x1C16CF4
	0x0346C348 ADRP X0, 0xC88000
	0x0346C34C LDR X0, [X0 + 0x840]
	0x0346C350 BL 0x1C16CF4
	0x0346C354 ADRP X0, 0xCC4000
	0x0346C358 LDR X0, [X0 + 0x5D0]
	0x0346C35C BL 0x1C16CF4
	0x0346C360 ADRP X0, 0xCC4000
	0x0346C364 LDR X0, [X0 + 0x5D8]
	0x0346C368 BL 0x1C16CF4
	0x0346C36C MOVZ W8, 0x1
	0x0346C370 STRB W8, [X20 + 0x7DB]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF73000
	011 Move W8, [X20+2005]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCC6000
	018 Move X0, [X0+1376]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC6000
	021 Move X0, [X0+1384]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8C000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8B000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8A000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xC91000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC8A000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCC5000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC5000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC8A000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC8A000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8A000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC6000
	054 Move X0, [X0+1392]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC6000
	057 Move X0, [X0+1400]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+2005], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC8C000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC8A000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCC6000
	091 Move X8, [X8+1400]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass115_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {354}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {355}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {356}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {357}
	119 Move X23, 0xC8A000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {358}
	152 Move X9, 0xC8A000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC8B000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {359}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {360}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {361}
	219 Move X8, 0xC89000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC89000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCC5000
	242 Move X8, [X8+1376]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {353}
	250 Move X8, 0xC90000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCC5000
	257 Move X8, [X8+1392]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {350}
	266 Move X9, 0xCC4000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCC4000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Call RetryHistory..ctor, X0, X1, X2, X3
	289 Compare X21, 0
	290 JumpIfEqual {351}
	291 Move X0, X21
	292 Move X1, X22
	293 Move X2, X24
	294 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	295 Compare X0, 0
	296 JumpIfEqual {352}
	297 Move X1, X31
	298 Call Task.GetAwaiter, X0
	299 Move [X31+24], X0
	300 Add X0, X31, 24
	301 Move X1, X31
	302 Call TaskAwaiter.get_IsCompleted, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {324}
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.GetResult, X0
	310 Move TEMP, 1
	311 Not TEMP
	312 Move W8, TEMP
	313 Move [X19], W8
	314 Move [X19+72], X31
	315 Move X0, [X25]
	316 Add X19, X19, 8
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call AsyncTaskMethodBuilder.SetResult, X0
	324 Move W8, 1
	325 Move [X19], W8
	326 Move X8, [X31+24]
	327 Move [X19+88], X8
	328 Move X0, [X25]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X8, 0xCC5000
	334 Move X8, [X8+1384]
	335 Add X0, X19, 8
	336 Move X3, [X8]
	337 Add X1, X31, 24
	338 Move X2, X19
	339 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	340 Move X20, [X31+96]
	341 Move X19, [X31+104]
	342 Move X22, [X31+80]
	343 Move X21, [X31+88]
	344 Move X24, [X31+64]
	345 Move X23, [X31+72]
	346 Move X30, [X31+48]
	347 Move X25, [X31+56]
	348 Add X31, X31, 112
	349 Return 
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X20, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X20
	365 Call 0x3EB2AD0
	366 Move X20, X0
	367 Move X0, 0xC88000
	368 Move X0, [X0+2000]
	369 Call 0x1C17D08
	370 Move X8, [X20]
	371 Move X1, [X8]
	372 Call 0x1C18270
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {395}
	377 Move X20, [X20]
	378 Call 0x3EB2AE0
	379 Move TEMP, 1
	380 Not TEMP
	381 Move W8, TEMP
	382 Move [X19+72], X31
	383 Move [X19+8], W8
	384 Move X0, 0xC8B000
	385 Move X0, [X0+640]
	386 Call 0x1C17D08
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X19
	392 Move X1, X20
	393 Move X2, X31
	394 Call AsyncTaskMethodBuilder.SetException, X0, X1
	395 Move W0, 8
	396 Call 0x3EB2AF0
	397 Move X8, [X20]
	398 Move [X0], X8
	399 Move X1, 0xA49000
	400 Add X1, X1, 3672
	401 Move X2, X31
	402 Call 0x3EB2B00
	403 Move X20, X0
	404 Call 0x3EB2AE0
	405 Move X0, X20
	406 Call 0x1D2D690
	407 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346C374 STP X31, X31, [X31 + 0x20]
	0x0346C378 STR X31, [X31 + 0x18]
	0x0346C37C ADRP X25, 0xC8A000
	0x0346C380 LDR W8, [X19]
	0x0346C384 LDR X20, [X19 + 0x20]
	0x0346C388 LDR X25, [X25 + 0x280]
	0x0346C38C CBZ W8, 0x346C3B0
	0x0346C390 CMP W8, 0x1
	0x0346C394 B.NE 0x346C3DC
	0x0346C398 LDR X8, [X19 + 0x80]
	0x0346C39C MOVN W9, 0x0
	0x0346C3A0 STR X8, [X31 + 0x18]
	0x0346C3A4 STR X31, [X19 + 0x80]
	0x0346C3A8 STR W9, [X19]
	0x0346C3AC B 0x346C6E8
	0x0346C3B0 LDR X8, [X19 + 0x78]
	0x0346C3B4 MOVN W9, 0x0
	0x0346C3B8 STR X8, [X31 + 0x20]
	0x0346C3BC STR X31, [X19 + 0x78]
	0x0346C3C0 STR W9, [X19]
	0x0346C3C4 ADRP X8, 0xC88000
	0x0346C3C8 LDR X8, [X8 + 0x830]
	0x0346C3CC ADD X0, X31, 0x20
	0x0346C3D0 LDR X1, [X8]
	0x0346C3D4 BL 0x2677474
	0x0346C3D8 B 0x346C624

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF72000
	007 Move X22, 0xC8B000
	008 Move W8, [X21+2006]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC8B000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2006], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

