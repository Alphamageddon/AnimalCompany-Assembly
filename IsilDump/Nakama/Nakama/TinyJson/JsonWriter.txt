Type: Nakama.TinyJson.JsonWriter

Method: System.String ToJson(System.Object item)

Disassembly:
	0x03484BE4 BL 0x1C24138
	0x03484BE8 CMP X21, X0
	0x03484BEC MOV X21, X0
	0x03484BF0 B.NE 0x3484BB0
	0x03484BF4 LDP X20, X19, [X31 + 0x20]
	0x03484BF8 LDP X22, X21, [X31 + 0x10]
	0x03484BFC LDR X30, [X31], #0x30
	0x03484C00 RET
	0x03484C04 MOV X0, X8
	0x03484C08 BL 0x1C171E0
	0x03484C0C STR X30, [X31 - 0x40]!
	0x03484C10 STP X24, X23, [X31 + 0x10]
	0x03484C14 STP X22, X21, [X31 + 0x20]
	0x03484C18 STP X20, X19, [X31 + 0x30]
	0x03484C1C ADRP X21, 0xF59000
	0x03484C20 LDRB W8, [X21 + 0x8DE]
	0x03484C24 MOV X19, X1
	0x03484C28 MOV X20, X0
	0x03484C2C TBNZ X8, 0x0, 0x3484C44
	0x03484C30 ADRP X0, 0xC72000
	0x03484C34 LDR X0, [X0 + 0x2C8]
	0x03484C38 BL 0x1C16CF4
	0x03484C3C MOVZ W8, 0x1
	0x03484C40 STRB W8, [X21 + 0x8DE]
	0x03484C44 ADRP X24, 0xC72000
	0x03484C48 LDR X21, [X20 + 0x20]!
	0x03484C4C LDR X24, [X24 + 0x2C8]
	0x03484C50 MOV X0, X21
	0x03484C54 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF5A000
	006 Move X21, 0xC70000
	007 Move W8, [X20+2314]
	008 Move X21, [X21+2288]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC70000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2314], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call StringBuilder..ctor, X0
	024 Move X0, X20
	025 Move X1, X19
	026 Call JsonWriter.AppendValue, X0, X1
	027 Compare X20, 0
	028 JumpIfEqual {38}
	029 Move X8, [X20]
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X2, [X8+360]
	034 Move X1, [X8+368]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 CallNoReturn X2
	038 Call 0x1C17F20

Method: System.Void AppendValue(System.Text.StringBuilder stringBuilder, System.Object item)

Disassembly:
	0x0348B6B4 B.NE 0x348B6A0
	0x0348B6B8 MOV X0, X20
	0x0348B6BC MOV W2, W31
	0x0348B6C0 BL 0x1C5C788
	0x0348B6C4 B 0x348B6D4
	0x0348B6C8 LDRSW X9, [X10]
	0x0348B6CC ADD X8, X8, X9, 0x4, LSL
	0x0348B6D0 ADD X0, X8, 0x138
	0x0348B6D4 LDP X8, X1, [X0]
	0x0348B6D8 MOV X0, X20
	0x0348B6DC BLR X8
	0x0348B6E0 TBZ X0, 0x0, 0x348B80C
	0x0348B6E4 LDR X8, [X20]
	0x0348B6E8 LDR X1, [X24]
	0x0348B6EC LDRH W9, [X8 + 0x12E]
	0x0348B6F0 CBZ X9, 0x348B714
	0x0348B6F4 LDR X10, [X8 + 0xB0]
	0x0348B6F8 ADD X10, X10, 0x8
	0x0348B6FC LDUR X11, [X10 - 0x8]
	0x0348B700 CMP X11, X1
	0x0348B704 B.EQ 0x348B724
	0x0348B708 SUBS X9, X9, 0x1
	0x0348B70C ADD X10, X10, 0x10
	0x0348B710 B.NE 0x348B6FC
	0x0348B714 MOVZ W2, 0x1
	0x0348B718 MOV X0, X20
	0x0348B71C BL 0x1C5C788
	0x0348B720 B 0x348B734
	0x0348B724 LDR W9, [X10]
	0x0348B728 ADD W9, W9, 0x1
	0x0348B72C ADD X8, X8, W9, 0x4, SXTW
	0x0348B730 ADD X0, X8, 0x138
	0x0348B734 LDP X8, X1, [X0]
	0x0348B738 MOV X0, X20
	0x0348B73C BLR X8
	0x0348B740 MOV X22, X0
	0x0348B744 TBNZ X27, 0x0, 0x348B758
	0x0348B748 MOVZ W1, 0x2C
	0x0348B74C MOV X0, X19
	0x0348B750 MOV X2, X31
	0x0348B754 BL 0x3233D30
	0x0348B758 MOVZ W1, 0x22
	0x0348B75C MOV X0, X19
	0x0348B760 MOV X2, X31
	0x0348B764 BL 0x3233D30
	0x0348B768 CBZ X22, 0x348B77C
	0x0348B76C LDR X1, [X25]
	0x0348B770 LDR X8, [X22]
	0x0348B774 CMP X8, X1
	0x0348B778 B.NE 0x348B8AC
	0x0348B77C MOV X0, X19
	0x0348B780 MOV X1, X22
	0x0348B784 MOV X2, X31
	0x0348B788 BL 0x32333E0
	0x0348B78C LDR X1, [X26]
	0x0348B790 MOV X0, X19
	0x0348B794 MOV X2, X31
	0x0348B798 BL 0x32333E0
	0x0348B79C LDR X8, [X21]
	0x0348B7A0 LDR X1, [X23]
	0x0348B7A4 LDRH W9, [X8 + 0x12E]
	0x0348B7A8 CBZ X9, 0x348B7CC
	0x0348B7AC LDR X10, [X8 + 0xB0]
	0x0348B7B0 ADD X10, X10, 0x8
	0x0348B7B4 LDUR X11, [X10 - 0x8]
	0x0348B7B8 CMP X11, X1
	0x0348B7BC B.EQ 0x348B7DC
	0x0348B7C0 SUBS X9, X9, 0x1
	0x0348B7C4 ADD X10, X10, 0x10
	0x0348B7C8 B.NE 0x348B7B4
	0x0348B7CC MOV X0, X21
	0x0348B7D0 MOV W2, W31
	0x0348B7D4 BL 0x1C5C788
	0x0348B7D8 B 0x348B7E8
	0x0348B7DC LDRSW X9, [X10]
	0x0348B7E0 ADD X8, X8, X9, 0x4, LSL
	0x0348B7E4 ADD X0, X8, 0x138
	0x0348B7E8 LDP X8, X2, [X0]
	0x0348B7EC MOV X0, X21
	0x0348B7F0 MOV X1, X22
	0x0348B7F4 BLR X8
	0x0348B7F8 MOV X1, X0
	0x0348B7FC MOV X0, X19
	0x0348B800 BL 0x348A6B4
	0x0348B804 MOV W27, W31
	0x0348B808 B 0x348B688
	0x0348B80C MOV X22, X31
	0x0348B810 MOVZ W21, 0x26
	0x0348B814 ADRP X23, 0xC68000
	0x0348B818 LDR X23, [X23 + 0xE00]
	0x0348B81C MOV X0, X20
	0x0348B820 LDR X1, [X23]
	0x0348B824 BL 0x1C16E00
	0x0348B828 CBZ X0, 0x348B888
	0x0348B82C LDR X8, [X0]
	0x0348B830 LDR X1, [X23]
	0x0348B834 MOV X20, X0
	0x0348B838 LDRH W9, [X8 + 0x12E]
	0x0348B83C CBZ X9, 0x348B860
	0x0348B840 LDR X10, [X8 + 0xB0]
	0x0348B844 ADD X10, X10, 0x8
	0x0348B848 LDUR X11, [X10 - 0x8]
	0x0348B84C CMP X11, X1
	0x0348B850 B.EQ 0x348B870
	0x0348B854 SUBS X9, X9, 0x1
	0x0348B858 ADD X10, X10, 0x10
	0x0348B85C B.NE 0x348B848
	0x0348B860 MOV X0, X20
	0x0348B864 MOV W2, W31
	0x0348B868 BL 0x1C5C788
	0x0348B86C B 0x348B87C
	0x0348B870 LDRSW X9, [X10]
	0x0348B874 ADD X8, X8, X9, 0x4, LSL
	0x0348B878 ADD X0, X8, 0x138
	0x0348B87C LDP X8, X1, [X0]
	0x0348B880 MOV X0, X20
	0x0348B884 BLR X8
	0x0348B888 CBNZ X22, 0x348B8B4
	0x0348B88C LDR X23, [X31]
	0x0348B890 CMP W21, 0x26
	0x0348B894 B.EQ 0x348B89C
	0x0348B898 CBNZ W21, 0x348AC98
	0x0348B89C MOVZ W1, 0x7D
	0x0348B8A0 B 0x348AA74
	0x0348B8A4 BL 0x3EB1B20
	0x0348B8A8 BL 0x1C16F28
	0x0348B8AC MOV X0, X22
	0x0348B8B0 BL 0x1C171E0
	0x0348B8B4 MOV X0, X22
	0x0348B8B8 BL 0x1C16F18
	0x0348B8BC MOV X0, X20
	0x0348B8C0 MOV X1, X21
	0x0348B8C4 BL 0x1C171E0
	0x0348B8C8 MOV X0, X20
	0x0348B8CC MOV X1, X23
	0x0348B8D0 BL 0x1C171E0
	0x0348B8D4 BL 0x1C16F20
	0x0348B8D8 BL 0x1C16F20
	0x0348B8DC B 0x348B900
	0x0348B8E0 B 0x348B9BC
	0x0348B8E4 B 0x348B900
	0x0348B8E8 B 0x348B900
	0x0348B8EC B 0x348B900
	0x0348B8F0 B 0x348B900
	0x0348B8F4 B 0x348B900
	0x0348B8F8 B 0x348B900
	0x0348B8FC B 0x348B900
	0x0348B900 MOV X21, X0
	0x0348B904 CMP W1, 0x1
	0x0348B908 B.NE 0x348B924
	0x0348B90C MOV X0, X21
	0x0348B910 BL 0x3EB1AD0
	0x0348B914 LDR X22, [X0]
	0x0348B918 BL 0x3EB1AE0
	0x0348B91C MOV W21, W31
	0x0348B920 B 0x348B814
	0x0348B924 MOV X22, X31
	0x0348B928 B 0x348B930
	0x0348B92C MOV X21, X0
	0x0348B930 ADRP X23, 0xC68000
	0x0348B934 LDR X23, [X23 + 0xE00]
	0x0348B938 LDR X1, [X23]
	0x0348B93C MOV X0, X20
	0x0348B940 BL 0x1C16E00
	0x0348B944 MOV X19, X0
	0x0348B948 CBZ X0, 0x348B9A4
	0x0348B94C LDR X8, [X19]
	0x0348B950 LDR X1, [X23]
	0x0348B954 LDRH W9, [X8 + 0x12E]
	0x0348B958 CBZ X9, 0x348B97C
	0x0348B95C LDR X10, [X8 + 0xB0]
	0x0348B960 ADD X10, X10, 0x8
	0x0348B964 LDUR X11, [X10 - 0x8]
	0x0348B968 CMP X11, X1
	0x0348B96C B.EQ 0x348B98C
	0x0348B970 SUBS X9, X9, 0x1
	0x0348B974 ADD X10, X10, 0x10
	0x0348B978 B.NE 0x348B964
	0x0348B97C MOV X0, X19
	0x0348B980 MOV W2, W31
	0x0348B984 BL 0x1C5C788
	0x0348B988 B 0x348B998
	0x0348B98C LDRSW X9, [X10]
	0x0348B990 ADD X8, X8, X9, 0x4, LSL
	0x0348B994 ADD X0, X8, 0x138
	0x0348B998 LDP X8, X1, [X0]
	0x0348B99C MOV X0, X19
	0x0348B9A0 BLR X8
	0x0348B9A4 CBZ X22, 0x348BA64
	0x0348B9A8 MOV X0, X22
	0x0348B9AC BL 0x1C16F18
	0x0348B9B0 B 0x348B9BC
	0x0348B9B4 B 0x348B9BC
	0x0348B9B8 B 0x348B9BC
	0x0348B9BC MOV X21, X0
	0x0348B9C0 CMP W1, 0x1
	0x0348B9C4 B.NE 0x348B9E0
	0x0348B9C8 MOV X0, X21
	0x0348B9CC BL 0x3EB1AD0
	0x0348B9D0 LDR X22, [X0]
	0x0348B9D4 BL 0x3EB1AE0
	0x0348B9D8 MOV W21, W31
	0x0348B9DC B 0x348B384
	0x0348B9E0 MOV X22, X31
	0x0348B9E4 B 0x348B9EC
	0x0348B9E8 MOV X21, X0
	0x0348B9EC ADRP X23, 0xC68000
	0x0348B9F0 LDR X23, [X23 + 0xE00]
	0x0348B9F4 LDR X1, [X23]
	0x0348B9F8 MOV X0, X20
	0x0348B9FC BL 0x1C16E00
	0x0348BA00 MOV X19, X0
	0x0348BA04 CBZ X0, 0x348BA60
	0x0348BA08 LDR X8, [X19]
	0x0348BA0C LDR X1, [X23]
	0x0348BA10 LDRH W9, [X8 + 0x12E]
	0x0348BA14 CBZ X9, 0x348BA38
	0x0348BA18 LDR X10, [X8 + 0xB0]
	0x0348BA1C ADD X10, X10, 0x8
	0x0348BA20 LDUR X11, [X10 - 0x8]
	0x0348BA24 CMP X11, X1
	0x0348BA28 B.EQ 0x348BA48
	0x0348BA2C SUBS X9, X9, 0x1
	0x0348BA30 ADD X10, X10, 0x10
	0x0348BA34 B.NE 0x348BA20
	0x0348BA38 MOV X0, X19
	0x0348BA3C MOV W2, W31
	0x0348BA40 BL 0x1C5C788
	0x0348BA44 B 0x348BA54
	0x0348BA48 LDRSW X9, [X10]
	0x0348BA4C ADD X8, X8, X9, 0x4, LSL
	0x0348BA50 ADD X0, X8, 0x138
	0x0348BA54 LDP X8, X1, [X0]
	0x0348BA58 MOV X0, X19
	0x0348BA5C BLR X8
	0x0348BA60 CBNZ X22, 0x348BA6C
	0x0348BA64 MOV X0, X21
	0x0348BA68 BL 0x1D2C690
	0x0348BA6C MOV X0, X22
	0x0348BA70 BL 0x1C16F18
	0x0348BA74 BL 0x1990590
	0x0348BA78 STR X30, [X31 - 0x30]!
	0x0348BA7C STP X22, X21, [X31 + 0x10]
	0x0348BA80 STP X20, X19, [X31 + 0x20]
	0x0348BA84 ADRP X20, 0xF52000
	0x0348BA88 ADRP X21, 0xC90000
	0x0348BA8C ADRP X22, 0xC68000
	0x0348BA90 LDRB W8, [X20 + 0x90C]
	0x0348BA94 LDR X21, [X21 + 0xFC0]
	0x0348BA98 LDR X22, [X22 + 0x6C0]
	0x0348BA9C MOV X19, X0
	0x0348BAA0 TBNZ X8, 0x0, 0x348BAD0
	0x0348BAA4 ADRP X0, 0xC90000
	0x0348BAA8 LDR X0, [X0 + 0xFC0]
	0x0348BAAC BL 0x1C16CF4
	0x0348BAB0 ADRP X0, 0xC90000
	0x0348BAB4 LDR X0, [X0 + 0xFC8]
	0x0348BAB8 BL 0x1C16CF4
	0x0348BABC ADRP X0, 0xC68000
	0x0348BAC0 LDR X0, [X0 + 0x6C0]
	0x0348BAC4 BL 0x1C16CF4
	0x0348BAC8 MOVZ W8, 0x1
	0x0348BACC STRB W8, [X20 + 0x90C]
	0x0348BAD0 LDR X0, [X22]
	0x0348BAD4 LDR X20, [X21]
	0x0348BAD8 LDR W8, [X0 + 0xE0]
	0x0348BADC CBNZ W8, 0x348BAE4
	0x0348BAE0 BL 0x1C16DFC
	0x0348BAE4 MOV X0, X20
	0x0348BAE8 MOV X1, X31
	0x0348BAEC BL 0x338C698
	0x0348BAF0 CBZ X19, 0x348BBA4
	0x0348BAF4 LDR X8, [X19]
	0x0348BAF8 MOV X1, X0
	0x0348BAFC MOVZ W2, 0x1
	0x0348BB00 MOV X0, X19
	0x0348BB04 LDP X9, X3, [X8 + 0x1E8]
	0x0348BB08 BLR X9
	0x0348BB0C TBZ X0, 0x0, 0x348BB74
	0x0348BB10 LDR X0, [X22]
	0x0348BB14 LDR X20, [X21]
	0x0348BB18 LDR W8, [X0 + 0xE0]
	0x0348BB1C CBNZ W8, 0x348BB24
	0x0348BB20 BL 0x1C16DFC
	0x0348BB24 MOV X0, X20
	0x0348BB28 MOV X1, X31
	0x0348BB2C BL 0x338C698
	0x0348BB30 MOV X1, X0
	0x0348BB34 MOVZ W2, 0x1
	0x0348BB38 MOV X0, X19
	0x0348BB3C MOV X3, X31
	0x0348BB40 BL 0x33A7D50
	0x0348BB44 CBZ X0, 0x348BBA4
	0x0348BB48 ADRP X8, 0xC90000
	0x0348BB4C LDR X8, [X8 + 0xFC8]
	0x0348BB50 MOV X20, X0
	0x0348BB54 LDR X1, [X8]
	0x0348BB58 LDR X8, [X0]
	0x0348BB5C CMP X8, X1
	0x0348BB60 B.NE 0x348BBA8
	0x0348BB64 LDR X0, [X20 + 0x10]
	0x0348BB68 MOV X1, X31
	0x0348BB6C BL 0x32277A8
	0x0348BB70 TBZ X0, 0x0, 0x348BB90
	0x0348BB74 LDR X8, [X19]
	0x0348BB78 MOV X0, X19
	0x0348BB7C LDP X20, X19, [X31 + 0x20]
	0x0348BB80 LDP X22, X21, [X31 + 0x10]
	0x0348BB84 LDP X2, X1, [X8 + 0x1A8]
	0x0348BB88 LDR X30, [X31], #0x30
	0x0348BB8C BR X2
	0x0348BB90 LDR X0, [X20 + 0x10]
	0x0348BB94 LDP X20, X19, [X31 + 0x20]
	0x0348BB98 LDP X22, X21, [X31 + 0x10]
	0x0348BB9C LDR X30, [X31], #0x30
	0x0348BBA0 RET
	0x0348BBA4 BL 0x1C16F20
	0x0348BBA8 MOV X0, X20
	0x0348BBAC BL 0x1C171E0
	0x0348BBB0 MOVZ W1, 0x4000
	0x0348BBB4 B 0x348BBB8
	0x0348BBB8 STP X30, X23, [X31 - 0x30]!
	0x0348BBBC STP X22, X21, [X31 + 0x10]
	0x0348BBC0 STP X20, X19, [X31 + 0x20]
	0x0348BBC4 ADRP X23, 0xF52000
	0x0348BBC8 ADRP X22, 0xCA6000
	0x0348BBCC ADRP X21, 0xCA6000
	0x0348BBD0 LDRB W8, [X23 + 0x90D]
	0x0348BBD4 LDR X22, [X22 + 0x2A0]
	0x0348BBD8 LDR X21, [X21 + 0x2A8]
	0x0348BBDC MOV W20, W1
	0x0348BBE0 MOV X19, X0
	0x0348BBE4 TBNZ X8, 0x0, 0x348BC08
	0x0348BBE8 ADRP X0, 0xCA6000
	0x0348BBEC LDR X0, [X0 + 0x2A8]
	0x0348BBF0 BL 0x1C16CF4
	0x0348BBF4 ADRP X0, 0xCA6000
	0x0348BBF8 LDR X0, [X0 + 0x2A0]
	0x0348BBFC BL 0x1C16CF4
	0x0348BC00 MOVZ W8, 0x1
	0x0348BC04 STRB W8, [X23 + 0x90D]
	0x0348BC08 MOV X0, X19
	0x0348BC0C MOV X1, X31
	0x0348BC10 BL 0x33BDD8C
	0x0348BC14 STR W20, [X19 + 0x18]
	0x0348BC18 LDR X0, [X22]
	0x0348BC1C BL 0x1C16F10
	0x0348BC20 LDR X1, [X21]
	0x0348BC24 MOV X20, X0
	0x0348BC28 BL 0x2994E64
	0x0348BC2C STR X20, [X19 + 0x10]
	0x0348BC30 LDP X20, X19, [X31 + 0x20]
	0x0348BC34 LDP X22, X21, [X31 + 0x10]
	0x0348BC38 LDP X30, X23, [X31], #0x30
	0x0348BC3C RET
	0x0348BC40 SUB X31, X31, 0x30
	0x0348BC44 STP X30, X21, [X31 + 0x10]
	0x0348BC48 STP X20, X19, [X31 + 0x20]
	0x0348BC4C ADRP X20, 0xF52000
	0x0348BC50 LDRB W8, [X20 + 0x90E]
	0x0348BC54 MOV X19, X0
	0x0348BC58 TBNZ X8, 0x0, 0x348BC88
	0x0348BC5C ADRP X0, 0xC68000
	0x0348BC60 LDR X0, [X0 + 0x618]
	0x0348BC64 BL 0x1C16CF4
	0x0348BC68 ADRP X0, 0xCA6000
	0x0348BC6C LDR X0, [X0 + 0x2B0]
	0x0348BC70 BL 0x1C16CF4
	0x0348BC74 ADRP X0, 0xCA6000
	0x0348BC78 LDR X0, [X0 + 0x2B8]
	0x0348BC7C BL 0x1C16CF4
	0x0348BC80 MOVZ W8, 0x1
	0x0348BC84 STRB W8, [X20 + 0x90E]
	0x0348BC88 STR X31, [X31 + 0x8]
	0x0348BC8C LDR X0, [X19 + 0x10]
	0x0348BC90 CBZ X0, 0x348BD04
	0x0348BC94 ADRP X8, 0xCA6000
	0x0348BC98 LDR X8, [X8 + 0x2B0]
	0x0348BC9C ADRP X21, 0xCA6000
	0x0348BCA0 ADD X1, X31, 0x8
	0x0348BCA4 LDR X2, [X8]
	0x0348BCA8 LDR X21, [X21 + 0x2B8]
	0x0348BCAC BL 0x29951F8
	0x0348BCB0 TBZ X0, 0x0, 0x348BCBC
	0x0348BCB4 LDR X20, [X31 + 0x8]
	0x0348BCB8 B 0x348BCD8
	0x0348BCBC ADRP X8, 0xC68000
	0x0348BCC0 LDR W1, [X19 + 0x18]
	0x0348BCC4 LDR X8, [X8 + 0x618]
	0x0348BCC8 LDR X0, [X8]
	0x0348BCCC BL 0x1C16D6C
	0x0348BCD0 MOV X20, X0
	0x0348BCD4 STR X0, [X31 + 0x8]
	0x0348BCD8 LDR X0, [X21]
	0x0348BCDC BL 0x1C16F10
	0x0348BCE0 MOV X1, X20
	0x0348BCE4 MOV X2, X19
	0x0348BCE8 MOV X21, X0
	0x0348BCEC BL 0x348BD08
	0x0348BCF0 MOV X0, X21
	0x0348BCF4 LDP X20, X19, [X31 + 0x20]
	0x0348BCF8 LDP X30, X21, [X31 + 0x10]
	0x0348BCFC ADD X31, X31, 0x30
	0x0348BD00 RET
	0x0348BD04 BL 0x1C16F20
	0x0348BD08 STP X30, X23, [X31 - 0x30]!
	0x0348BD0C STP X22, X21, [X31 + 0x10]
	0x0348BD10 STP X20, X19, [X31 + 0x20]
	0x0348BD14 ADRP X22, 0xF52000
	0x0348BD18 ADRP X23, 0xC68000
	0x0348BD1C LDRB W8, [X22 + 0x910]
	0x0348BD20 LDR X23, [X23 + 0x618]
	0x0348BD24 MOV X21, X2
	0x0348BD28 MOV X20, X1
	0x0348BD2C MOV X19, X0
	0x0348BD30 TBNZ X8, 0x0, 0x348BD54
	0x0348BD34 ADRP X0, 0xC68000
	0x0348BD38 LDR X0, [X0 + 0x618]
	0x0348BD3C BL 0x1C16CF4
	0x0348BD40 ADRP X0, 0xC70000
	0x0348BD44 LDR X0, [X0 + 0x558]
	0x0348BD48 BL 0x1C16CF4
	0x0348BD4C MOVZ W8, 0x1
	0x0348BD50 STRB W8, [X22 + 0x910]
	0x0348BD54 LDR X0, [X23]
	0x0348BD58 MOV W1, W31
	0x0348BD5C BL 0x1C16D6C
	0x0348BD60 MOV X1, X0
	0x0348BD64 MOV X0, X19
	0x0348BD68 MOV X2, X31
	0x0348BD6C BL 0x32E2528
	0x0348BD70 STP X21, X20, [X19 + 0x50]
	0x0348BD74 CBZ X20, 0x348BDBC
	0x0348BD78 ADRP X8, 0xC70000
	0x0348BD7C LDR X8, [X8 + 0x558]
	0x0348BD80 LDR X0, [X8]
	0x0348BD84 BL 0x1C16F10
	0x0348BD88 LDR W3, [X20 + 0x18]
	0x0348BD8C MOVZ W4, 0x1
	0x0348BD90 MOVZ W5, 0x1
	0x0348BD94 MOV X1, X20
	0x0348BD98 MOV W2, W31
	0x0348BD9C MOV X6, X31
	0x0348BDA0 MOV X21, X0
	0x0348BDA4 BL 0x32E2628
	0x0348BDA8 STR X21, [X19 + 0x60]
	0x0348BDAC LDP X20, X19, [X31 + 0x20]
	0x0348BDB0 LDP X22, X21, [X31 + 0x10]
	0x0348BDB4 LDP X30, X23, [X31], #0x30
	0x0348BDB8 RET
	0x0348BDBC BL 0x1C16F20
	0x0348BDC0 STP X30, X21, [X31 - 0x20]!
	0x0348BDC4 STP X20, X19, [X31 + 0x10]
	0x0348BDC8 ADRP X21, 0xF52000
	0x0348BDCC LDRB W8, [X21 + 0x90F]
	0x0348BDD0 MOV X19, X1
	0x0348BDD4 MOV X20, X0
	0x0348BDD8 TBNZ X8, 0x0, 0x348BDF0
	0x0348BDDC ADRP X0, 0xCA6000
	0x0348BDE0 LDR X0, [X0 + 0x2C0]
	0x0348BDE4 BL 0x1C16CF4
	0x0348BDE8 MOVZ W8, 0x1
	0x0348BDEC STRB W8, [X21 + 0x90F]
	0x0348BDF0 LDR X0, [X20 + 0x10]
	0x0348BDF4 CBZ X0, 0x348BE14
	0x0348BDF8 ADRP X8, 0xCA6000
	0x0348BDFC LDR X8, [X8 + 0x2C0]
	0x0348BE00 MOV X1, X19
	0x0348BE04 LDP X20, X19, [X31 + 0x10]
	0x0348BE08 LDR X2, [X8]
	0x0348BE0C LDP X30, X21, [X31], #0x20
	0x0348BE10 B 0x2995008
	0x0348BE14 BL 0x1C16F20
	0x0348BE18 MOV X1, X31
	0x0348BE1C B 0x32E2E74
	0x0348BE20 STR X30, [X31 - 0x10]!
	0x0348BE24 LDR X0, [X0 + 0x60]
	0x0348BE28 CBZ X0, 0x348BE40
	0x0348BE2C LDR X8, [X0]
	0x0348BE30 LDR X7, [X8 + 0x2B8]
	0x0348BE34 LDR X6, [X8 + 0x2C0]
	0x0348BE38 LDR X30, [X31], #0x10
	0x0348BE3C BR X7
	0x0348BE40 BL 0x1C16F20
	0x0348BE44 STR X30, [X31 - 0x10]!
	0x0348BE48 LDR X0, [X0 + 0x60]
	0x0348BE4C CBZ X0, 0x348BE64
	0x0348BE50 LDR X8, [X0]
	0x0348BE54 LDR X7, [X8 + 0x2F8]
	0x0348BE58 LDR X6, [X8 + 0x300]
	0x0348BE5C LDR X30, [X31], #0x10
	0x0348BE60 BR X7
	0x0348BE64 BL 0x1C16F20
	0x0348BE68 STR X30, [X31 - 0x10]!
	0x0348BE6C LDR X0, [X0 + 0x60]
	0x0348BE70 CBZ X0, 0x348BE84
	0x0348BE74 LDR X8, [X0]
	0x0348BE78 LDP X2, X1, [X8 + 0x1A8]
	0x0348BE7C LDR X30, [X31], #0x10
	0x0348BE80 BR X2
	0x0348BE84 BL 0x1C16F20
	0x0348BE88 STR X30, [X31 - 0x10]!
	0x0348BE8C LDR X0, [X0 + 0x60]
	0x0348BE90 CBZ X0, 0x348BEA4
	0x0348BE94 LDR X8, [X0]
	0x0348BE98 LDP X2, X1, [X8 + 0x1B8]
	0x0348BE9C LDR X30, [X31], #0x10
	0x0348BEA0 BR X2
	0x0348BEA4 BL 0x1C16F20
	0x0348BEA8 STR X30, [X31 - 0x10]!
	0x0348BEAC LDR X0, [X0 + 0x60]
	0x0348BEB0 CBZ X0, 0x348BEC4
	0x0348BEB4 LDR X8, [X0]
	0x0348BEB8 LDP X2, X1, [X8 + 0x1C8]
	0x0348BEBC LDR X30, [X31], #0x10
	0x0348BEC0 BR X2
	0x0348BEC4 BL 0x1C16F20
	0x0348BEC8 STR X30, [X31 - 0x10]!
	0x0348BECC LDR X0, [X0 + 0x60]
	0x0348BED0 CBZ X0, 0x348BEE4
	0x0348BED4 LDR X8, [X0]
	0x0348BED8 LDP X2, X1, [X8 + 0x1D8]
	0x0348BEDC LDR X30, [X31], #0x10
	0x0348BEE0 BR X2
	0x0348BEE4 BL 0x1C16F20
	0x0348BEE8 STR X30, [X31 - 0x10]!
	0x0348BEEC LDR X0, [X0 + 0x60]
	0x0348BEF0 CBZ X0, 0x348BF08
	0x0348BEF4 LDR X8, [X0]
	0x0348BEF8 LDR X2, [X8 + 0x3D8]
	0x0348BEFC LDR X1, [X8 + 0x3E0]
	0x0348BF00 LDR X30, [X31], #0x10
	0x0348BF04 BR X2
	0x0348BF08 BL 0x1C16F20
	0x0348BF0C STR X30, [X31 - 0x10]!
	0x0348BF10 LDR X0, [X0 + 0x60]
	0x0348BF14 CBZ X0, 0x348BF2C
	0x0348BF18 LDR X8, [X0]
	0x0348BF1C LDR X3, [X8 + 0x3E8]
	0x0348BF20 LDR X2, [X8 + 0x3F0]
	0x0348BF24 LDR X30, [X31], #0x10
	0x0348BF28 BR X3
	0x0348BF2C BL 0x1C16F20
	0x0348BF30 STR X30, [X31 - 0x20]!
	0x0348BF34 STP X20, X19, [X31 + 0x10]
	0x0348BF38 MOV X19, X0
	0x0348BF3C LDR X0, [X0 + 0x60]
	0x0348BF40 CBZ X0, 0x348BF98
	0x0348BF44 LDR X8, [X0]
	0x0348BF48 LDR X20, [X19 + 0x58]
	0x0348BF4C LDP X9, X1, [X8 + 0x1F8]
	0x0348BF50 BLR X9
	0x0348BF54 MOV X2, X0
	0x0348BF58 MOV X0, X20
	0x0348BF5C MOV W1, W31
	0x0348BF60 MOV X3, X31
	0x0348BF64 BL 0x339FA34
	0x0348BF68 LDR X0, [X19 + 0x60]
	0x0348BF6C CBZ X0, 0x348BF98
	0x0348BF70 LDR X8, [X0]
	0x0348BF74 LDR X9, [X8 + 0x278]
	0x0348BF78 LDR X1, [X8 + 0x280]
	0x0348BF7C BLR X9
	0x0348BF80 LDR X0, [X19 + 0x50]
	0x0348BF84 CBZ X0, 0x348BF98
	0x0348BF88 LDR X1, [X19 + 0x58]
	0x0348BF8C LDP X20, X19, [X31 + 0x10]
	0x0348BF90 LDR X30, [X31], #0x20
	0x0348BF94 B 0x348BDC0
	0x0348BF98 BL 0x1C16F20
	0x0348BF9C STR X30, [X31 - 0x10]!
	0x0348BFA0 LDR X0, [X0 + 0x60]
	0x0348BFA4 CBZ X0, 0x348BFBC
	0x0348BFA8 LDR X8, [X0]
	0x0348BFAC LDR X5, [X8 + 0x258]
	0x0348BFB0 LDR X4, [X8 + 0x260]
	0x0348BFB4 LDR X30, [X31], #0x10
	0x0348BFB8 BR X5
	0x0348BFBC BL 0x1C16F20
	0x0348BFC0 STR X30, [X31 - 0x10]!
	0x0348BFC4 LDR X0, [X0 + 0x60]
	0x0348BFC8 CBZ X0, 0x348BFE0
	0x0348BFCC LDR X8, [X0]
	0x0348BFD0 LDR X3, [X8 + 0x2C8]
	0x0348BFD4 LDR X2, [X8 + 0x2D0]
	0x0348BFD8 LDR X30, [X31], #0x10
	0x0348BFDC BR X3
	0x0348BFE0 BL 0x1C16F20
	0x0348BFE4 STR X30, [X31 - 0x10]!
	0x0348BFE8 LDR X0, [X0 + 0x60]
	0x0348BFEC CBZ X0, 0x348C004
	0x0348BFF0 LDR X8, [X0]
	0x0348BFF4 LDR X3, [X8 + 0x308]
	0x0348BFF8 LDR X2, [X8 + 0x310]
	0x0348BFFC LDR X30, [X31], #0x10
	0x0348C000 BR X3
	0x0348C004 BL 0x1C16F20
	0x0348C008 STR X30, [X31 - 0x10]!
	0x0348C00C LDR X0, [X0 + 0x60]
	0x0348C010 CBZ X0, 0x348C028
	0x0348C014 LDR X8, [X0]
	0x0348C018 LDR X2, [X8 + 0x298]
	0x0348C01C LDR X1, [X8 + 0x2A0]
	0x0348C020 LDR X30, [X31], #0x10
	0x0348C024 BR X2
	0x0348C028 BL 0x1C16F20
	0x0348C02C STR X30, [X31 - 0x10]!
	0x0348C030 LDR X0, [X0 + 0x60]
	0x0348C034 CBZ X0, 0x348C04C
	0x0348C038 LDR X8, [X0]
	0x0348C03C LDR X3, [X8 + 0x2A8]
	0x0348C040 LDR X2, [X8 + 0x2B0]
	0x0348C044 LDR X30, [X31], #0x10
	0x0348C048 BR X3
	0x0348C04C BL 0x1C16F20
	0x0348C050 LDR X0, [X0 + 0x58]
	0x0348C054 RET
	0x0348C058 STR X30, [X31 - 0x10]!
	0x0348C05C LDR X0, [X0 + 0x60]
	0x0348C060 CBZ X0, 0x348C074
	0x0348C064 LDR X8, [X0]
	0x0348C068 LDP X2, X1, [X8 + 0x1F8]
	0x0348C06C LDR X30, [X31], #0x10
	0x0348C070 BR X2
	0x0348C074 BL 0x1C16F20
	0x0348C078 STR X30, [X31 - 0x10]!
	0x0348C07C LDR X0, [X0 + 0x60]
	0x0348C080 CBZ X0, 0x348C098
	0x0348C084 LDR X8, [X0]
	0x0348C088 LDR X3, [X8 + 0x208]
	0x0348C08C LDR X2, [X8 + 0x210]
	0x0348C090 LDR X30, [X31], #0x10
	0x0348C094 BR X3
	0x0348C098 BL 0x1C16F20
	0x0348C09C STR X30, [X31 - 0x10]!
	0x0348C0A0 LDR X0, [X0 + 0x60]
	0x0348C0A4 CBZ X0, 0x348C0BC
	0x0348C0A8 LDR X8, [X0]
	0x0348C0AC LDR X5, [X8 + 0x358]
	0x0348C0B0 LDR X4, [X8 + 0x360]
	0x0348C0B4 LDR X30, [X31], #0x10
	0x0348C0B8 BR X5
	0x0348C0BC BL 0x1C16F20
	0x0348C0C0 SUB X31, X31, 0x40
	0x0348C0C4 STR X30, [X31 + 0x10]
	0x0348C0C8 STP X22, X21, [X31 + 0x20]
	0x0348C0CC STP X20, X19, [X31 + 0x30]
	0x0348C0D0 ADRP X20, 0xF51000
	0x0348C0D4 LDRB W8, [X20 + 0x911]
	0x0348C0D8 MOV W21, W1
	0x0348C0DC MOV X19, X0
	0x0348C0E0 TBNZ X8, 0x0, 0x348C11C
	0x0348C0E4 ADRP X0, 0xC67000
	0x0348C0E8 LDR X0, [X0 + 0x618]
	0x0348C0EC BL 0x1C16CF4
	0x0348C0F0 ADRP X0, 0xC67000
	0x0348C0F4 LDR X0, [X0 + 0x5A8]
	0x0348C0F8 BL 0x1C16CF4
	0x0348C0FC ADRP X0, 0xC6F000
	0x0348C100 LDR X0, [X0 + 0x558]
	0x0348C104 BL 0x1C16CF4
	0x0348C108 ADRP X0, 0xCA5000
	0x0348C10C LDR X0, [X0 + 0x2C8]
	0x0348C110 BL 0x1C16CF4
	0x0348C114 MOVZ W8, 0x1
	0x0348C118 STRB W8, [X20 + 0x911]
	0x0348C11C LDR X20, [X19 + 0x58]
	0x0348C120 CBZ X20, 0x348C28C
	0x0348C124 LDR X0, [X19 + 0x60]
	0x0348C128 CBZ X0, 0x348C28C
	0x0348C12C LDR X8, [X0]
	0x0348C130 LDP X9, X1, [X8 + 0x1F8]
	0x0348C134 BLR X9
	0x0348C138 LDRSW X8, [X20 + 0x18]
	0x0348C13C SUB X8, X8, X0
	0x0348C140 CMP X8, W21, SXTW
	0x0348C144 B.GE 0x348C278
	0x0348C148 LDR X0, [X19 + 0x60]
	0x0348C14C CBZ X0, 0x348C28C
	0x0348C150 LDR X8, [X0]
	0x0348C154 LDP X9, X1, [X8 + 0x1F8]
	0x0348C158 BLR X9
	0x0348C15C LDR X8, [X19 + 0x58]
	0x0348C160 CBZ X8, 0x348C28C
	0x0348C164 LDR X8, [X8 + 0x18]
	0x0348C168 MOV X20, X0
	0x0348C16C SXTW X9, W21
	0x0348C170 SUB X9, X9, W20, SXTW
	0x0348C174 ADD X21, X9, W8, SXTW
	0x0348C178 MOVZ W9, 0x80000000
	0x0348C17C CMP X21, X9
	0x0348C180 B.GE 0x348C290
	0x0348C184 SBFM X1, X8, 0x3F, 0x1F
	0x0348C188 CMP X21, X1
	0x0348C18C B.LE 0x348C1F0
	0x0348C190 ADRP X8, 0xC67000
	0x0348C194 LDR X8, [X8 + 0x5A8]
	0x0348C198 LDR X0, [X8]
	0x0348C19C LDR W8, [X0 + 0xE0]
	0x0348C1A0 CBNZ W8, 0x348C1A8
	0x0348C1A4 BL 0x1C16DFC
	0x0348C1A8 SCVTF D0, X21
	0x0348C1AC BL 0x3EB1C20
	0x0348C1B0 ADRP X8, 0xFFFFFFFFFD662000
	0x0348C1B4 LDR V1, [X8 + 0x510]
	0x0348C1B8 MOV X0, X31
	0x0348C1BC FDIV D0, D0, D1
	0x0348C1C0 FRINTP D1, D0
	0x0348C1C4 FMOV D0, 2
	0x0348C1C8 BL 0x337F438
	0x0348C1CC MOVZ X9, 0x7FF00000
	0x0348C1D0 FMOV D1, X9
	0x0348C1D4 FCVTZS X8, D0
	0x0348C1D8 MOVZ X10, 0x80000000
	0x0348C1DC FCMP D0, D1
	0x0348C1E0 CSEL X8, X10, X8, EQ
	0x0348C1E4 MOVZ W9, 0x80000000
	0x0348C1E8 CMP X8, X9
	0x0348C1EC CSEL X1, X8, X21, LT
	0x0348C1F0 ADRP X8, 0xC67000
	0x0348C1F4 LDR X8, [X8 + 0x618]
	0x0348C1F8 LDR X0, [X8]
	0x0348C1FC BL 0x1C16D6C
	0x0348C200 LDR X8, [X19 + 0x58]
	0x0348C204 MOV X21, X0
	0x0348C208 MOV W1, W31
	0x0348C20C MOV X2, X21
	0x0348C210 MOV X0, X8
	0x0348C214 MOV W3, W31
	0x0348C218 MOV W4, W20
	0x0348C21C MOV X5, X31
	0x0348C220 BL 0x33A8A9C
	0x0348C224 CBZ X21, 0x348C28C
	0x0348C228 ADRP X8, 0xC6F000
	0x0348C22C LDR X8, [X8 + 0x558]
	0x0348C230 LDR X0, [X8]
	0x0348C234 BL 0x1C16F10
	0x0348C238 LDR W3, [X21 + 0x18]
	0x0348C23C MOVZ W4, 0x1
	0x0348C240 MOVZ W5, 0x1
	0x0348C244 MOV X1, X21
	0x0348C248 MOV W2, W31
	0x0348C24C MOV X6, X31
	0x0348C250 MOV X22, X0
	0x0348C254 BL 0x32E2628
	0x0348C258 CBZ X22, 0x348C28C
	0x0348C25C LDR X8, [X22]
	0x0348C260 SXTW X1, W20
	0x0348C264 MOV X0, X22
	0x0348C268 LDR X9, [X8 + 0x208]
	0x0348C26C LDR X2, [X8 + 0x210]
	0x0348C270 BLR X9
	0x0348C274 STP X21, X22, [X19 + 0x58]
	0x0348C278 LDP X20, X19, [X31 + 0x30]
	0x0348C27C LDP X22, X21, [X31 + 0x20]
	0x0348C280 LDR X30, [X31 + 0x10]
	0x0348C284 ADD X31, X31, 0x40
	0x0348C288 RET
	0x0348C28C BL 0x1C16F20
	0x0348C290 STR X21, [X31 + 0x18]
	0x0348C294 ADRP X0, 0xC69000
	0x0348C298 LDR X0, [X0 + 0xA60]
	0x0348C29C BL 0x1C16D08
	0x0348C2A0 ADD X1, X31, 0x18
	0x0348C2A4 BL 0x1C16E04
	0x0348C2A8 MOVN W8, 0x80000000
	0x0348C2AC MOV X19, X0
	0x0348C2B0 STR W8, [X31 + 0xC]
	0x0348C2B4 ADRP X0, 0xC67000
	0x0348C2B8 LDR X0, [X0 + 0x758]
	0x0348C2BC BL 0x1C16D08
	0x0348C2C0 ADD X1, X31, 0xC
	0x0348C2C4 BL 0x1C16E04
	0x0348C2C8 MOV X20, X0
	0x0348C2CC ADRP X0, 0xCA5000
	0x0348C2D0 LDR X0, [X0 + 0x2D0]
	0x0348C2D4 BL 0x1C16D08
	0x0348C2D8 MOV X1, X19
	0x0348C2DC MOV X2, X20
	0x0348C2E0 MOV X3, X31
	0x0348C2E4 BL 0x3227BD4
	0x0348C2E8 MOV X19, X0
	0x0348C2EC ADRP X0, 0xCA5000
	0x0348C2F0 LDR X0, [X0 + 0x2D8]
	0x0348C2F4 BL 0x1C16D08
	0x0348C2F8 BL 0x1C16F10
	0x0348C2FC MOV X1, X19
	0x0348C300 MOV X2, X31
	0x0348C304 MOV X20, X0
	0x0348C308 BL 0x349B7D4
	0x0348C30C ADRP X0, 0xCA5000
	0x0348C310 LDR X0, [X0 + 0x2C8]
	0x0348C314 BL 0x1C16D08
	0x0348C318 MOV X1, X0
	0x0348C31C MOV X0, X20
	0x0348C320 BL 0x1C16DEC
	0x0348C324 STR X30, [X31 - 0x20]!
	0x0348C328 STP X20, X19, [X31 + 0x10]
	0x0348C32C MOV W19, W1
	0x0348C330 MOVZ W1, 0x1
	0x0348C334 MOV X20, X0
	0x0348C338 BL 0x348C0C0
	0x0348C33C LDR X0, [X20 + 0x60]
	0x0348C340 CBZ X0, 0x348C360
	0x0348C344 LDR X8, [X0]
	0x0348C348 MOV W1, W19
	0x0348C34C LDP X20, X19, [X31 + 0x10]
	0x0348C350 LDR X3, [X8 + 0x3A8]
	0x0348C354 LDR X2, [X8 + 0x3B0]
	0x0348C358 LDR X30, [X31], #0x20
	0x0348C35C BR X3
	0x0348C360 BL 0x1C16F20
	0x0348C364 STR X30, [X31 - 0x30]!
	0x0348C368 STP X22, X21, [X31 + 0x10]
	0x0348C36C STP X20, X19, [X31 + 0x20]
	0x0348C370 MOV X21, X1
	0x0348C374 MOV W1, W3
	0x0348C378 MOV W19, W3
	0x0348C37C MOV W20, W2
	0x0348C380 MOV X22, X0
	0x0348C384 BL 0x348C0C0
	0x0348C388 LDR X0, [X22 + 0x60]
	0x0348C38C CBZ X0, 0x348C3B8
	0x0348C390 LDR X8, [X0]
	0x0348C394 MOV X1, X21
	0x0348C398 MOV W2, W20
	0x0348C39C MOV W3, W19
	0x0348C3A0 LDR X5, [X8 + 0x388]
	0x0348C3A4 LDR X4, [X8 + 0x390]
	0x0348C3A8 LDP X20, X19, [X31 + 0x20]
	0x0348C3AC LDP X22, X21, [X31 + 0x10]
	0x0348C3B0 LDR X30, [X31], #0x30
	0x0348C3B4 BR X5
	0x0348C3B8 BL 0x1C16F20
	0x0348C3BC STR X30, [X31 - 0x30]!
	0x0348C3C0 STP X22, X21, [X31 + 0x10]
	0x0348C3C4 STP X20, X19, [X31 + 0x20]
	0x0348C3C8 MOV X21, X1
	0x0348C3CC MOV W1, W3
	0x0348C3D0 MOV W19, W3
	0x0348C3D4 MOV W20, W2
	0x0348C3D8 MOV X22, X0
	0x0348C3DC BL 0x348C0C0
	0x0348C3E0 LDR X0, [X22 + 0x60]
	0x0348C3E4 CBZ X0, 0x348C408
	0x0348C3E8 MOV X1, X21
	0x0348C3EC MOV W2, W20
	0x0348C3F0 MOV W3, W19
	0x0348C3F4 LDP X20, X19, [X31 + 0x20]
	0x0348C3F8 LDP X22, X21, [X31 + 0x10]
	0x0348C3FC MOV X4, X31
	0x0348C400 LDR X30, [X31], #0x30
	0x0348C404 B 0x32F1690
	0x0348C408 BL 0x1C16F20
	0x0348C40C STR X30, [X31 - 0x10]!
	0x0348C410 LDR X0, [X0 + 0x60]
	0x0348C414 CBZ X0, 0x348C428
	0x0348C418 LDR X8, [X0]
	0x0348C41C LDP X2, X1, [X8 + 0x188]
	0x0348C420 LDR X30, [X31], #0x10
	0x0348C424 BR X2
	0x0348C428 BL 0x1C16F20
	0x0348C42C STR X30, [X31 - 0x10]!
	0x0348C430 LDR X0, [X0 + 0x60]
	0x0348C434 CBZ X0, 0x348C44C
	0x0348C438 LDR X8, [X0]
	0x0348C43C LDR X6, [X8 + 0x2D8]
	0x0348C440 LDR X5, [X8 + 0x2E0]
	0x0348C444 LDR X30, [X31], #0x10
	0x0348C448 BR X6
	0x0348C44C BL 0x1C16F20
	0x0348C450 STR X30, [X31 - 0x10]!
	0x0348C454 LDR X0, [X0 + 0x60]
	0x0348C458 CBZ X0, 0x348C470
	0x0348C45C LDR X8, [X0]
	0x0348C460 LDR X2, [X8 + 0x378]
	0x0348C464 LDR X1, [X8 + 0x380]
	0x0348C468 LDR X30, [X31], #0x10
	0x0348C46C BR X2
	0x0348C470 BL 0x1C16F20
	0x0348C474 STR X30, [X31 - 0x10]!
	0x0348C478 LDR X0, [X0 + 0x60]
	0x0348C47C CBZ X0, 0x348C494
	0x0348C480 LDR X8, [X0]
	0x0348C484 LDR X2, [X8 + 0x218]
	0x0348C488 LDR X1, [X8 + 0x220]
	0x0348C48C LDR X30, [X31], #0x10
	0x0348C490 BR X2
	0x0348C494 BL 0x1C16F20
	0x0348C498 STR X30, [X31 - 0x10]!
	0x0348C49C LDR X0, [X0 + 0x60]
	0x0348C4A0 CBZ X0, 0x348C4B8
	0x0348C4A4 LDR X8, [X0]
	0x0348C4A8 LDR X3, [X8 + 0x228]
	0x0348C4AC LDR X2, [X8 + 0x230]
	0x0348C4B0 LDR X30, [X31], #0x10
	0x0348C4B4 BR X3
	0x0348C4B8 BL 0x1C16F20
	0x0348C4BC STR X30, [X31 - 0x10]!
	0x0348C4C0 LDR X0, [X0 + 0x60]
	0x0348C4C4 CBZ X0, 0x348C4DC
	0x0348C4C8 LDR X8, [X0]
	0x0348C4CC LDR X4, [X8 + 0x338]
	0x0348C4D0 LDR X3, [X8 + 0x340]
	0x0348C4D4 LDR X30, [X31], #0x10
	0x0348C4D8 BR X4
	0x0348C4DC BL 0x1C16F20
	0x0348C4E0 B 0x348C0C0
	0x0348C4E4 STR X30, [X31 - 0x10]!
	0x0348C4E8 LDR X0, [X0 + 0x60]
	0x0348C4EC CBZ X0, 0x348C504
	0x0348C4F0 LDR X8, [X0]
	0x0348C4F4 LDR X2, [X8 + 0x3F8]
	0x0348C4F8 LDR X1, [X8 + 0x400]
	0x0348C4FC LDR X30, [X31], #0x10
	0x0348C500 BR X2
	0x0348C504 BL 0x1C16F20
	0x0348C508 STR X30, [X31 - 0x10]!
	0x0348C50C LDR X0, [X0 + 0x60]
	0x0348C510 CBZ X0, 0x348C528
	0x0348C514 LDR X8, [X0]
	0x0348C518 LDR X2, [X8 + 0x238]
	0x0348C51C LDR X1, [X8 + 0x240]
	0x0348C520 LDR X30, [X31], #0x10
	0x0348C524 BR X2
	0x0348C528 BL 0x1C16F20
	0x0348C52C STR X30, [X31 - 0x10]!
	0x0348C530 LDR X0, [X0 + 0x60]
	0x0348C534 CBZ X0, 0x348C54C
	0x0348C538 LDR X8, [X0]
	0x0348C53C LDR X3, [X8 + 0x248]
	0x0348C540 LDR X2, [X8 + 0x250]
	0x0348C544 LDR X30, [X31], #0x10
	0x0348C548 BR X3
	0x0348C54C BL 0x1C16F20
	0x0348C550 SUB X31, X31, 0x30
	0x0348C554 STP X30, X21, [X31 + 0x10]
	0x0348C558 STP X20, X19, [X31 + 0x20]
	0x0348C55C ADRP X21, 0xF51000
	0x0348C560 LDRB W8, [X21 + 0x912]
	0x0348C564 MOV X19, X1
	0x0348C568 MOV X20, X0
	0x0348C56C TBNZ X8, 0x0, 0x348C584
	0x0348C570 ADRP X0, 0xC92000
	0x0348C574 LDR X0, [X0 + 0xB88]
	0x0348C578 BL 0x1C16CF4
	0x0348C57C MOVZ W8, 0x1
	0x0348C580 STRB W8, [X21 + 0x912]
	0x0348C584 LDR X0, [X20 + 0x60]
	0x0348C588 CBZ X0, 0x348C5DC
	0x0348C58C LDR X8, [X0]
	0x0348C590 ADRP X21, 0xC92000
	0x0348C594 LDR X20, [X20 + 0x58]
	0x0348C598 LDP X9, X1, [X8 + 0x1F8]
	0x0348C59C LDR X21, [X21 + 0xB88]
	0x0348C5A0 BLR X9
	0x0348C5A4 LDR X4, [X21]
	0x0348C5A8 MOV X3, X0
	0x0348C5AC ADD X0, X31, 0x0
	0x0348C5B0 MOV X1, X20
	0x0348C5B4 MOV W2, W31
	0x0348C5B8 STP X31, X31, [X31]
	0x0348C5BC BL 0x2B87BB0
	0x0348C5C0 LDR V0, [X31]
	0x0348C5C4 LDP X30, X21, [X31 + 0x10]
	0x0348C5C8 MOVZ W0, 0x1
	0x0348C5CC STR V0, [X19]
	0x0348C5D0 LDP X20, X19, [X31 + 0x20]
	0x0348C5D4 ADD X31, X31, 0x30
	0x0348C5D8 RET
	0x0348C5DC BL 0x1C16F20
	0x0348C5E0 STR X30, [X31 - 0x10]!
	0x0348C5E4 LDR X0, [X0 + 0x60]
	0x0348C5E8 CBZ X0, 0x348C600
	0x0348C5EC LDR X8, [X0]
	0x0348C5F0 LDR X3, [X8 + 0x408]
	0x0348C5F4 LDR X2, [X8 + 0x410]
	0x0348C5F8 LDR X30, [X31], #0x10
	0x0348C5FC BR X3
	0x0348C600 BL 0x1C16F20
	0x0348C604 SUB X31, X31, 0x30
	0x0348C608 STP X30, X21, [X31 + 0x10]
	0x0348C60C STP X20, X19, [X31 + 0x20]
	0x0348C610 ADRP X20, 0xF51000
	0x0348C614 ADRP X19, 0xC68000
	0x0348C618 LDRB W8, [X20 + 0x913]
	0x0348C61C LDR X19, [X19 + 0x9F0]
	0x0348C620 TBNZ X8, 0x0, 0x348C65C
	0x0348C624 ADRP X0, 0xC67000
	0x0348C628 LDR X0, [X0 + 0x618]
	0x0348C62C BL 0x1C16CF4
	0x0348C630 ADRP X0, 0xC70000
	0x0348C634 LDR X0, [X0 + 0x9E8]
	0x0348C638 BL 0x1C16CF4
	0x0348C63C ADRP X0, 0xC68000
	0x0348C640 LDR X0, [X0 + 0x9F0]
	0x0348C644 BL 0x1C16CF4
	0x0348C648 ADRP X0, 0xC6E000
	0x0348C64C LDR X0, [X0 + 0x2E8]
	0x0348C650 BL 0x1C16CF4
	0x0348C654 MOVZ W8, 0x1
	0x0348C658 STRB W8, [X20 + 0x913]
	0x0348C65C LDR X0, [X19]
	0x0348C660 ADRP X19, 0xC6E000
	0x0348C664 ADRP X21, 0xC67000
	0x0348C668 LDR W8, [X0 + 0xE0]
	0x0348C66C LDR X19, [X19 + 0x2E8]
	0x0348C670 LDR X21, [X21 + 0x618]
	0x0348C674 CBNZ W8, 0x348C67C
	0x0348C678 BL 0x1C16DFC
	0x0348C67C MOV X0, X31
	0x0348C680 BL 0x3361584
	0x0348C684 STR X0, [X31 + 0x8]
	0x0348C688 ADD X0, X31, 0x8
	0x0348C68C MOV X1, X31
	0x0348C690 BL 0x3361708
	0x0348C694 LDR X8, [X19]
	0x0348C698 MOV X19, X0
	0x0348C69C MOV X0, X8
	0x0348C6A0 BL 0x1C16F10
	0x0348C6A4 MOV W1, W19
	0x0348C6A8 MOV X2, X31
	0x0348C6AC MOV X20, X0
	0x0348C6B0 BL 0x338E5E8
	0x0348C6B4 LDR X0, [X21]
	0x0348C6B8 MOVZ W1, 0x10
	0x0348C6BC BL 0x1C16D6C
	0x0348C6C0 CBZ X20, 0x348C710
	0x0348C6C4 LDR X8, [X20]
	0x0348C6C8 ADRP X21, 0xC70000
	0x0348C6CC MOV X19, X0
	0x0348C6D0 MOV X0, X20
	0x0348C6D4 LDP X9, X2, [X8 + 0x1C8]
	0x0348C6D8 LDR X21, [X21 + 0x9E8]
	0x0348C6DC MOV X1, X19
	0x0348C6E0 BLR X9
	0x0348C6E4 LDR X0, [X21]
	0x0348C6E8 LDR W8, [X0 + 0xE0]
	0x0348C6EC CBNZ W8, 0x348C6F4
	0x0348C6F0 BL 0x1C16DFC
	0x0348C6F4 MOV X0, X19
	0x0348C6F8 MOV X1, X31
	0x0348C6FC BL 0x33225A0
	0x0348C700 LDP X20, X19, [X31 + 0x20]
	0x0348C704 LDP X30, X21, [X31 + 0x10]
	0x0348C708 ADD X31, X31, 0x30
	0x0348C70C RET
	0x0348C710 BL 0x1C16F20
	0x0348C714 STP X30, X21, [X31 - 0x20]!
	0x0348C718 STP X20, X19, [X31 + 0x10]
	0x0348C71C ADRP X20, 0xF51000
	0x0348C720 ADRP X21, 0xCA5000
	0x0348C724 LDRB W8, [X20 + 0x914]
	0x0348C728 LDR X21, [X21 + 0x2E0]
	0x0348C72C MOV X19, X0
	0x0348C730 TBNZ X8, 0x0, 0x348C754
	0x0348C734 ADRP X0, 0xC70000
	0x0348C738 LDR X0, [X0 + 0x9E8]
	0x0348C73C BL 0x1C16CF4
	0x0348C740 ADRP X0, 0xCA5000
	0x0348C744 LDR X0, [X0 + 0x2E0]
	0x0348C748 BL 0x1C16CF4
	0x0348C74C MOVZ W8, 0x1
	0x0348C750 STRB W8, [X20 + 0x914]
	0x0348C754 LDR X1, [X21]
	0x0348C758 MOV X0, X19
	0x0348C75C MOV X2, X31
	0x0348C760 BL 0x321B938
	0x0348C764 MOV X19, X0
	0x0348C768 MOV X0, X31
	0x0348C76C BL 0x3241948
	0x0348C770 CBZ X0, 0x348C7D8
	0x0348C774 LDR X8, [X0]
	0x0348C778 MOV X1, X19
	0x0348C77C LDR X9, [X8 + 0x268]
	0x0348C780 LDR X2, [X8 + 0x270]
	0x0348C784 BLR X9
	0x0348C788 MOV X19, X0
	0x0348C78C MOV X0, X31
	0x0348C790 BL 0x325D0E8
	0x0348C794 CBZ X0, 0x348C7D8
	0x0348C798 ADRP X20, 0xC70000
	0x0348C79C LDR X20, [X20 + 0x9E8]
	0x0348C7A0 MOV X1, X19
	0x0348C7A4 MOV X2, X31
	0x0348C7A8 BL 0x32513F4
	0x0348C7AC LDR X8, [X20]
	0x0348C7B0 MOV X19, X0
	0x0348C7B4 LDR W9, [X8 + 0xE0]
	0x0348C7B8 CBNZ W9, 0x348C7C4
	0x0348C7BC MOV X0, X8
	0x0348C7C0 BL 0x1C16DFC
	0x0348C7C4 MOV X0, X19
	0x0348C7C8 LDP X20, X19, [X31 + 0x10]
	0x0348C7CC MOV X1, X31
	0x0348C7D0 LDP X30, X21, [X31], #0x20
	0x0348C7D4 B 0x33225A0
	0x0348C7D8 BL 0x1C16F20
	0x0348C7DC SUB X31, X31, 0x80
	0x0348C7E0 STP X30, X23, [X31 + 0x50]
	0x0348C7E4 STP X22, X21, [X31 + 0x60]
	0x0348C7E8 STP X20, X19, [X31 + 0x70]
	0x0348C7EC ADRP X22, 0xF51000
	0x0348C7F0 ADRP X21, 0xC6A000
	0x0348C7F4 LDRB W8, [X22 + 0x915]
	0x0348C7F8 LDR X21, [X21 + 0x130]
	0x0348C7FC MOV X19, X1
	0x0348C800 MOV X20, X0
	0x0348C804 TBNZ X8, 0x0, 0x348C840
	0x0348C808 ADRP X0, 0xC6A000
	0x0348C80C LDR X0, [X0 + 0x138]
	0x0348C810 BL 0x1C16CF4
	0x0348C814 ADRP X0, 0xCA5000
	0x0348C818 LDR X0, [X0 + 0x2E8]
	0x0348C81C BL 0x1C16CF4
	0x0348C820 ADRP X0, 0xC6A000
	0x0348C824 LDR X0, [X0 + 0x148]
	0x0348C828 BL 0x1C16CF4
	0x0348C82C ADRP X0, 0xC6A000
	0x0348C830 LDR X0, [X0 + 0x130]
	0x0348C834 BL 0x1C16CF4
	0x0348C838 MOVZ W8, 0x1
	0x0348C83C STRB W8, [X22 + 0x915]
	0x0348C840 LDR X0, [X21]
	0x0348C844 MOVI V0.2D, 0x0
	0x0348C848 STP V0, V0, [X31 + 0x30]
	0x0348C84C STP V0, V0, [X31 + 0x10]
	0x0348C850 STR V0, [X31]
	0x0348C854 ADRP X21, 0xC6A000
	0x0348C858 ADRP X23, 0xCA5000
	0x0348C85C ADRP X22, 0xC6A000
	0x0348C860 LDR W8, [X0 + 0xE0]
	0x0348C864 LDR X21, [X21 + 0x138]
	0x0348C868 LDR X23, [X23 + 0x2E8]
	0x0348C86C LDR X22, [X22 + 0x148]
	0x0348C870 CBNZ W8, 0x348C878
	0x0348C874 BL 0x1C16DFC
	0x0348C878 LDR X0, [X21]
	0x0348C87C ADD X8, X31, 0x0
	0x0348C880 ORR X21, X8, 0xF
	0x0348C884 MOV X8, X21
	0x0348C888 BL 0x263221C
	0x0348C88C LDR X2, [X23]
	0x0348C890 MOVN W8, 0x0
	0x0348C894 ADD X1, X31, 0x0
	0x0348C898 MOV X0, X21
	0x0348C89C STP X20, X19, [X31 + 0x20]
	0x0348C8A0 STR W8, [X31]
	0x0348C8A4 BL 0x1FCFB14
	0x0348C8A8 LDR X1, [X22]
	0x0348C8AC MOV X0, X21
	0x0348C8B0 BL 0x2632230
	0x0348C8B4 LDP X20, X19, [X31 + 0x70]
	0x0348C8B8 LDP X22, X21, [X31 + 0x60]
	0x0348C8BC LDP X30, X23, [X31 + 0x50]
	0x0348C8C0 ADD X31, X31, 0x80
	0x0348C8C4 RET
	0x0348C8C8 STR X30, [X31 - 0x30]!
	0x0348C8CC STP X22, X21, [X31 + 0x10]
	0x0348C8D0 STP X20, X19, [X31 + 0x20]
	0x0348C8D4 ADRP X22, 0xF51000
	0x0348C8D8 ADRP X21, 0xC6F000
	0x0348C8DC ADRP X20, 0xCA5000
	0x0348C8E0 LDRB W8, [X22 + 0x916]
	0x0348C8E4 LDR X21, [X21 + 0x600]
	0x0348C8E8 LDR X20, [X20 + 0x2F0]
	0x0348C8EC MOV X19, X0
	0x0348C8F0 TBNZ X8, 0x0, 0x348C920
	0x0348C8F4 ADRP X0, 0xC6F000
	0x0348C8F8 LDR X0, [X0 + 0x600]
	0x0348C8FC BL 0x1C16CF4
	0x0348C900 ADRP X0, 0xCA5000
	0x0348C904 LDR X0, [X0 + 0x2F0]
	0x0348C908 BL 0x1C16CF4
	0x0348C90C ADRP X0, 0xCA5000
	0x0348C910 LDR X0, [X0 + 0x2F8]
	0x0348C914 BL 0x1C16CF4
	0x0348C918 MOVZ W8, 0x1
	0x0348C91C STRB W8, [X22 + 0x916]
	0x0348C920 LDR X0, [X21]
	0x0348C924 BL 0x1C16F10
	0x0348C928 LDR X1, [X20]
	0x0348C92C MOVZ W2, 0x1
	0x0348C930 MOV X3, X31
	0x0348C934 MOV X20, X0
	0x0348C938 BL 0x3633518
	0x0348C93C CBZ X20, 0x348C9C4
	0x0348C940 MOV X0, X20
	0x0348C944 MOV X1, X19
	0x0348C948 MOV X2, X31
	0x0348C94C BL 0x3632C2C
	0x0348C950 CBZ X0, 0x348C9C4
	0x0348C954 MOV X1, X31
	0x0348C958 BL 0x362F808
	0x0348C95C TBZ X0, 0x0, 0x348C9B0
	0x0348C960 LDR X0, [X21]
	0x0348C964 BL 0x1C16F10
	0x0348C968 ADRP X8, 0xCA5000
	0x0348C96C LDR X8, [X8 + 0x2F8]
	0x0348C970 MOVZ W2, 0x1
	0x0348C974 MOV X3, X31
	0x0348C978 MOV X20, X0
	0x0348C97C LDR X1, [X8]
	0x0348C980 BL 0x3633518
	0x0348C984 CBZ X20, 0x348C9C4
	0x0348C988 MOV X0, X20
	0x0348C98C MOV X1, X19
	0x0348C990 MOV X2, X31
	0x0348C994 BL 0x3632C2C
	0x0348C998 CBZ X0, 0x348C9C4
	0x0348C99C LDP X20, X19, [X31 + 0x20]
	0x0348C9A0 LDP X22, X21, [X31 + 0x10]
	0x0348C9A4 MOV X1, X31
	0x0348C9A8 LDR X30, [X31], #0x30
	0x0348C9AC B 0x362F808
	0x0348C9B0 LDP X20, X19, [X31 + 0x20]
	0x0348C9B4 LDP X22, X21, [X31 + 0x10]
	0x0348C9B8 MOV W0, W31
	0x0348C9BC LDR X30, [X31], #0x30
	0x0348C9C0 RET
	0x0348C9C4 BL 0x1C16F20
	0x0348C9C8 STR X30, [X31 - 0x30]!
	0x0348C9CC STP X22, X21, [X31 + 0x10]
	0x0348C9D0 STP X20, X19, [X31 + 0x20]
	0x0348C9D4 ADRP X21, 0xF51000
	0x0348C9D8 ADRP X22, 0xC6F000
	0x0348C9DC ADRP X20, 0xCA5000
	0x0348C9E0 LDRB W8, [X21 + 0x917]
	0x0348C9E4 LDR X22, [X22 + 0x600]
	0x0348C9E8 LDR X20, [X20 + 0x2F0]
	0x0348C9EC MOV X19, X0
	0x0348C9F0 TBNZ X8, 0x0, 0x348CA14
	0x0348C9F4 ADRP X0, 0xC6F000
	0x0348C9F8 LDR X0, [X0 + 0x600]
	0x0348C9FC BL 0x1C16CF4
	0x0348CA00 ADRP X0, 0xCA5000
	0x0348CA04 LDR X0, [X0 + 0x2F0]
	0x0348CA08 BL 0x1C16CF4
	0x0348CA0C MOVZ W8, 0x1
	0x0348CA10 STRB W8, [X21 + 0x917]
	0x0348CA14 LDR X0, [X22]
	0x0348CA18 BL 0x1C16F10
	0x0348CA1C LDR X1, [X20]
	0x0348CA20 MOVZ W2, 0x1
	0x0348CA24 MOV X3, X31
	0x0348CA28 MOV X20, X0
	0x0348CA2C BL 0x3633518
	0x0348CA30 CBZ X20, 0x348CAB0
	0x0348CA34 MOV X0, X20
	0x0348CA38 MOV X1, X19
	0x0348CA3C MOV X2, X31
	0x0348CA40 BL 0x3632C2C
	0x0348CA44 CBZ X0, 0x348CAB0
	0x0348CA48 MOV X1, X31
	0x0348CA4C MOV X19, X0
	0x0348CA50 BL 0x362F808
	0x0348CA54 TBZ X0, 0x0, 0x348CA9C
	0x0348CA58 LDR X8, [X19]
	0x0348CA5C MOV X0, X19
	0x0348CA60 LDP X9, X1, [X8 + 0x188]
	0x0348CA64 BLR X9
	0x0348CA68 CBZ X0, 0x348CAB0
	0x0348CA6C MOVZ W1, 0x1
	0x0348CA70 MOV X2, X31
	0x0348CA74 BL 0x362F9AC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X23+40]
	016 Move X21, 0xF53000
	017 Move X20, X1
	018 Move X19, X0
	019 Move [X31+56], X8
	020 Move W8, [X21+2315]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {138}
	025 Move X0, 0xC92000
	026 Move X0, [X0+584]
	027 Call 0x1C17CF4
	028 Move X0, 0xC69000
	029 Move X0, [X0+2904]
	030 Call 0x1C17CF4
	031 Move X0, 0xC90000
	032 Move X0, [X0+3432]
	033 Call 0x1C17CF4
	034 Move X0, 0xC90000
	035 Move X0, [X0+3440]
	036 Call 0x1C17CF4
	037 Move X0, 0xC6B000
	038 Move X0, [X0+3144]
	039 Call 0x1C17CF4
	040 Move X0, 0xC9B000
	041 Move X0, [X0+320]
	042 Call 0x1C17CF4
	043 Move X0, 0xC91000
	044 Move X0, [X0+1520]
	045 Call 0x1C17CF4
	046 Move X0, 0xC92000
	047 Move X0, [X0+904]
	048 Call 0x1C17CF4
	049 Move X0, 0xC91000
	050 Move X0, [X0+2680]
	051 Call 0x1C17CF4
	052 Move X0, 0xC6C000
	053 Move X0, [X0+2424]
	054 Call 0x1C17CF4
	055 Move X0, 0xC69000
	056 Move X0, [X0+2072]
	057 Call 0x1C17CF4
	058 Move X0, 0xC69000
	059 Move X0, [X0+3584]
	060 Call 0x1C17CF4
	061 Move X0, 0xC71000
	062 Move X0, [X0+3512]
	063 Call 0x1C17CF4
	064 Move X0, 0xC69000
	065 Move X0, [X0+3608]
	066 Call 0x1C17CF4
	067 Move X0, 0xC70000
	068 Move X0, [X0+760]
	069 Call 0x1C17CF4
	070 Move X0, 0xC91000
	071 Move X0, [X0+4048]
	072 Call 0x1C17CF4
	073 Move X0, 0xC90000
	074 Move X0, [X0+3448]
	075 Call 0x1C17CF4
	076 Move X0, 0xC90000
	077 Move X0, [X0+3456]
	078 Call 0x1C17CF4
	079 Move X0, 0xC90000
	080 Move X0, [X0+3464]
	081 Call 0x1C17CF4
	082 Move X0, 0xC90000
	083 Move X0, [X0+3472]
	084 Call 0x1C17CF4
	085 Move X0, 0xC91000
	086 Move X0, [X0+2688]
	087 Call 0x1C17CF4
	088 Move X0, 0xC69000
	089 Move X0, [X0+2704]
	090 Call 0x1C17CF4
	091 Move X0, 0xC91000
	092 Move X0, [X0+2912]
	093 Call 0x1C17CF4
	094 Move X0, 0xC6B000
	095 Move X0, [X0+632]
	096 Call 0x1C17CF4
	097 Move X0, 0xC69000
	098 Move X0, [X0+1728]
	099 Call 0x1C17CF4
	100 Move X0, 0xC90000
	101 Move X0, [X0+3480]
	102 Call 0x1C17CF4
	103 Move X0, 0xC90000
	104 Move X0, [X0+3488]
	105 Call 0x1C17CF4
	106 Move X0, 0xC71000
	107 Move X0, [X0+1824]
	108 Call 0x1C17CF4
	109 Move X0, 0xC90000
	110 Move X0, [X0+3496]
	111 Call 0x1C17CF4
	112 Move X0, 0xCA7000
	113 Move X0, [X0+640]
	114 Call 0x1C17CF4
	115 Move X0, 0xCA7000
	116 Move X0, [X0+648]
	117 Call 0x1C17CF4
	118 Move X0, 0xC69000
	119 Move X0, [X0+2096]
	120 Call 0x1C17CF4
	121 Move X0, 0xCA7000
	122 Move X0, [X0+656]
	123 Call 0x1C17CF4
	124 Move X0, 0xC73000
	125 Move X0, [X0+4088]
	126 Call 0x1C17CF4
	127 Move X0, 0xC90000
	128 Move X0, [X0+632]
	129 Call 0x1C17CF4
	130 Move X0, 0xCA7000
	131 Move X0, [X0+664]
	132 Call 0x1C17CF4
	133 Move X0, 0xC74000
	134 Move X0, [X0]
	135 Call 0x1C17CF4
	136 Move W8, 1
	137 Move [X21+2315], W8
	138 Move [X31+28], W31
	139 Move [X31+16], X31
	140 Move [X31+32], X31
	141 Move [X31+40], X31
	142 Compare X20, 0
	143 JumpIfEqual {261}
	144 Move X24, 0xC91000
	145 Move X25, 0xC69000
	146 Move X24, [X24+2912]
	147 Move X25, [X25+1728]
	148 Move X0, X20
	149 Move X1, X31
	150 Call "il2cpp_vm_object_is_inst", X0
	151 Move X8, [X25]
	152 Move X22, [X24]
	153 Move X21, X0
	154 Move W9, [X8+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X8
	158 Call 0x1C17DFC
	159 Move X0, X22
	160 Move X1, X31
	161 Call Type.GetTypeFromHandle, X0
	162 Move X1, X0
	163 Move X0, X21
	164 Move X2, X31
	165 Call Type.op_Equality, X0, X1
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {189}
	170 Move X8, 0xC90000
	171 Move X0, [X25]
	172 Move X8, [X8+3440]
	173 Move W9, [X0+224]
	174 Move X22, [X8]
	175 Compare W9, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, X22
	179 Move X1, X31
	180 Call Type.GetTypeFromHandle, X0
	181 Move X1, X0
	182 Move X0, X21
	183 Move X2, X31
	184 Call Type.op_Equality, X0, X1
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {269}
	189 Compare X19, 0
	190 JumpIfEqual {1109}
	191 Move W1, 34
	192 Move X0, X19
	193 Move X2, X31
	194 Call StringBuilder.Append, X0, X1
	195 Move X8, 0xC6B000
	196 Move X8, [X8+632]
	197 Move X1, [X8]
	198 Move X8, [X20]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move W8, [X20+16]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X24, 0xCA7000
	203 Move X25, 0xC71000
	204 Move X26, 0xCA7000
	205 Move X27, 0xCA7000
	206 Move X24, [X24+640]
	207 Move X25, [X25+1824]
	208 Move X26, [X26+656]
	209 Move X27, [X27+648]
	210 Move W21, W31
	211 Move X0, X20
	212 Move W1, W21
	213 Move X2, X31
	214 Call String.get_Chars, X0, X1
	215 And W22, W0, 0xFFFF
	216 NotImplemented "Instruction CMP not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move W1, 92
	220 Move X0, X19
	221 Move X2, X31
	222 Call StringBuilder.Append, X0, X1
	223 Move X0, [X24]
	224 Compare X0, 0
	225 JumpIfEqual {1109}
	226 Move W1, W22
	227 Move X2, X31
	228 Call String.IndexOf, X0, X1
	229 Move TEMP, X0
	230 And TEMP, TEMP, -2147483648
	231 Compare TEMP, -2147483648
	232 JumpIfEqual {241}
	233 Move W1, W0
	234 Move X0, [X27]
	235 Compare X0, 0
	236 JumpIfEqual {1109}
	237 Move X2, X31
	238 Call String.get_Chars, X0, X1
	239 Move W1, W0
	240 Move X0, X19
	241 Move X0, [X25]
	242 Add X1, X31, 12
	243 Move [X31+12], W22
	244 Call 0x1C17E04
	245 Move X1, [X26]
	246 Move X2, X0
	247 Move X0, X19
	248 Move X3, X31
	249 Call StringBuilder.AppendFormat, X0, X1, X2
	250 Move X0, X19
	251 Move W1, W22
	252 Move X2, X31
	253 Call StringBuilder.Append, X0, X1
	254 Move W8, [X20+16]
	255 Add W21, W21, 1
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move W1, 34
	258 Move X0, X19
	259 Move X2, X31
	260 Call StringBuilder.Append, X0, X1
	261 Compare X19, 0
	262 JumpIfEqual {1109}
	263 Move X8, 0xC69000
	264 Move X8, [X8+2096]
	265 Move X1, [X8]
	266 Move X0, X19
	267 Move X2, X31
	268 Call StringBuilder.Append, X0, X1
	269 Move X8, 0xC90000
	270 Move X0, [X25]
	271 Move X8, [X8+3432]
	272 Move W9, [X0+224]
	273 Move X22, [X8]
	274 Compare W9, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X0, X22
	278 Move X1, X31
	279 Call Type.GetTypeFromHandle, X0
	280 Move X1, X0
	281 Move X0, X21
	282 Move X2, X31
	283 Call Type.op_Equality, X0, X1
	284 Move TEMP, X0
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfEqual {421}
	288 Move X8, 0xC90000
	289 Move X0, [X25]
	290 Move X8, [X8+3472]
	291 Move W9, [X0+224]
	292 Move X22, [X8]
	293 Compare W9, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Move X0, X22
	297 Move X1, X31
	298 Call Type.GetTypeFromHandle, X0
	299 Move X1, X0
	300 Move X0, X21
	301 Move X2, X31
	302 Call Type.op_Equality, X0, X1
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {421}
	307 Move X8, 0xC90000
	308 Move X0, [X25]
	309 Move X8, [X8+3448]
	310 Move W9, [X0+224]
	311 Move X22, [X8]
	312 Compare W9, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Move X0, X22
	316 Move X1, X31
	317 Call Type.GetTypeFromHandle, X0
	318 Move X1, X0
	319 Move X0, X21
	320 Move X2, X31
	321 Call Type.op_Equality, X0, X1
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfEqual {421}
	326 Move X8, 0xC90000
	327 Move X0, [X25]
	328 Move X8, [X8+3480]
	329 Move W9, [X0+224]
	330 Move X22, [X8]
	331 Compare W9, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move X0, X22
	335 Move X1, X31
	336 Call Type.GetTypeFromHandle, X0
	337 Move X1, X0
	338 Move X0, X21
	339 Move X2, X31
	340 Call Type.op_Equality, X0, X1
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfEqual {421}
	345 Move X8, 0xC90000
	346 Move X0, [X25]
	347 Move X8, [X8+3456]
	348 Move W9, [X0+224]
	349 Move X22, [X8]
	350 Compare W9, 0
	351 JumpIfNotEqual {353}
	352 Call 0x1C17DFC
	353 Move X0, X22
	354 Move X1, X31
	355 Call Type.GetTypeFromHandle, X0
	356 Move X1, X0
	357 Move X0, X21
	358 Move X2, X31
	359 Call Type.op_Equality, X0, X1
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfEqual {421}
	364 Move X8, 0xC90000
	365 Move X0, [X25]
	366 Move X8, [X8+3488]
	367 Move W9, [X0+224]
	368 Move X22, [X8]
	369 Compare W9, 0
	370 JumpIfNotEqual {372}
	371 Call 0x1C17DFC
	372 Move X0, X22
	373 Move X1, X31
	374 Call Type.GetTypeFromHandle, X0
	375 Move X1, X0
	376 Move X0, X21
	377 Move X2, X31
	378 Call Type.op_Equality, X0, X1
	379 Move TEMP, X0
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfEqual {421}
	383 Move X8, 0xC90000
	384 Move X0, [X25]
	385 Move X8, [X8+3464]
	386 Move W9, [X0+224]
	387 Move X22, [X8]
	388 Compare W9, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X22
	392 Move X1, X31
	393 Call Type.GetTypeFromHandle, X0
	394 Move X1, X0
	395 Move X0, X21
	396 Move X2, X31
	397 Call Type.op_Equality, X0, X1
	398 Move TEMP, X0
	399 And TEMP, TEMP, 1
	400 Compare TEMP, 1
	401 JumpIfEqual {421}
	402 Move X8, 0xC90000
	403 Move X0, [X25]
	404 Move X8, [X8+3496]
	405 Move W9, [X0+224]
	406 Move X22, [X8]
	407 Compare W9, 0
	408 JumpIfNotEqual {410}
	409 Call 0x1C17DFC
	410 Move X0, X22
	411 Move X1, X31
	412 Call Type.GetTypeFromHandle, X0
	413 Move X1, X0
	414 Move X0, X21
	415 Move X2, X31
	416 Call Type.op_Equality, X0, X1
	417 Move TEMP, X0
	418 And TEMP, TEMP, 1
	419 Compare TEMP, 1
	420 JumpIfNotEqual {444}
	421 Compare X19, 0
	422 JumpIfEqual {1109}
	423 Move X0, X19
	424 Move X1, X20
	425 Move X2, X31
	426 Call StringBuilder.Append, X0, X1
	427 Move X8, [X23+40]
	428 Move X9, [X31+56]
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X20, [X31+144]
	431 Move X19, [X31+152]
	432 Move X22, [X31+128]
	433 Move X21, [X31+136]
	434 Move X24, [X31+112]
	435 Move X23, [X31+120]
	436 Move X26, [X31+96]
	437 Move X25, [X31+104]
	438 Move X28, [X31+80]
	439 Move X27, [X31+88]
	440 Move X29, [X31+64]
	441 Move X30, [X31+72]
	442 Add X31, X31, 160
	443 Return 
	444 Move X8, 0xC91000
	445 Move X0, [X25]
	446 Move X8, [X8+2688]
	447 Move W9, [X0+224]
	448 Move X22, [X8]
	449 Compare W9, 0
	450 JumpIfNotEqual {452}
	451 Call 0x1C17DFC
	452 Move X0, X22
	453 Move X1, X31
	454 Call Type.GetTypeFromHandle, X0
	455 Move X1, X0
	456 Move X0, X21
	457 Move X2, X31
	458 Call Type.op_Equality, X0, X1
	459 Move TEMP, X0
	460 And TEMP, TEMP, 1
	461 Compare TEMP, 1
	462 JumpIfNotEqual {489}
	463 Move X8, 0xC69000
	464 Move X8, [X8+2704]
	465 Move X9, [X20]
	466 Move X1, [X8]
	467 Move X8, [X9+64]
	468 Move X9, [X1+64]
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move X0, X20
	471 Call 0x1C17E08
	472 Move X8, 0xC6B000
	473 Move V0, [X0]
	474 Move X8, [X8+3144]
	475 Move [X31+28], S0
	476 Move X0, [X8]
	477 Move W8, [X0+224]
	478 Compare W8, 0
	479 JumpIfNotEqual {481}
	480 Call 0x1C17DFC
	481 Move X0, X31
	482 Call CultureInfo.get_InvariantCulture
	483 Move X1, X0
	484 Add X0, X31, 28
	485 Move X2, X31
	486 Call Single.ToString, X0, X1
	487 Compare X19, 0
	488 JumpIfNotEqual {586}
	489 Move X8, 0xC91000
	490 Move X0, [X25]
	491 Move X8, [X8+2680]
	492 Move W9, [X0+224]
	493 Move X22, [X8]
	494 Compare W9, 0
	495 JumpIfNotEqual {497}
	496 Call 0x1C17DFC
	497 Move X0, X22
	498 Move X1, X31
	499 Call Type.GetTypeFromHandle, X0
	500 Move X1, X0
	501 Move X0, X21
	502 Move X2, X31
	503 Call Type.op_Equality, X0, X1
	504 Move TEMP, X0
	505 And TEMP, TEMP, 1
	506 Compare TEMP, 1
	507 JumpIfNotEqual {534}
	508 Move X8, 0xC6C000
	509 Move X8, [X8+2424]
	510 Move X9, [X20]
	511 Move X1, [X8]
	512 Move X8, [X9+64]
	513 Move X9, [X1+64]
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Move X0, X20
	516 Call 0x1C17E08
	517 Move X8, 0xC6B000
	518 Move V0, [X0]
	519 Move X8, [X8+3144]
	520 Move [X31+16], D0
	521 Move X0, [X8]
	522 Move W8, [X0+224]
	523 Compare W8, 0
	524 JumpIfNotEqual {526}
	525 Call 0x1C17DFC
	526 Move X0, X31
	527 Call CultureInfo.get_InvariantCulture
	528 Move X1, X0
	529 Add X0, X31, 16
	530 Move X2, X31
	531 Call Double.ToString, X0, X1
	532 Compare X19, 0
	533 JumpIfNotEqual {586}
	534 Move X8, 0xC9B000
	535 Move X0, [X25]
	536 Move X8, [X8+320]
	537 Move W9, [X0+224]
	538 Move X22, [X8]
	539 Compare W9, 0
	540 JumpIfNotEqual {542}
	541 Call 0x1C17DFC
	542 Move X0, X22
	543 Move X1, X31
	544 Call Type.GetTypeFromHandle, X0
	545 Move X1, X0
	546 Move X0, X21
	547 Move X2, X31
	548 Call Type.op_Equality, X0, X1
	549 Move TEMP, X0
	550 And TEMP, TEMP, 1
	551 Compare TEMP, 1
	552 JumpIfNotEqual {587}
	553 Move X21, 0xC91000
	554 Move X21, [X21+1520]
	555 Move X8, [X20]
	556 Move X1, [X21]
	557 Move X8, [X8+64]
	558 Move X9, [X1+64]
	559 NotImplemented "Instruction CMP not yet implemented."
	560 Move X0, X20
	561 Call 0x1C17E08
	562 Move X8, 0xC6B000
	563 Move V0, [X0]
	564 Move X8, [X8+3144]
	565 Move [X31+2], V0
	566 Move X0, [X8]
	567 Move W8, [X0+224]
	568 Compare W8, 0
	569 JumpIfNotEqual {571}
	570 Call 0x1C17DFC
	571 Move X0, X31
	572 Call CultureInfo.get_InvariantCulture
	573 Move X8, [X21]
	574 Move X20, X0
	575 Move W9, [X8+224]
	576 Compare W9, 0
	577 JumpIfNotEqual {580}
	578 Move X0, X8
	579 Call 0x1C17DFC
	580 Add X0, X31, 32
	581 Move X1, X20
	582 Move X2, X31
	583 Call Decimal.ToString, X0, X1
	584 Compare X19, 0
	585 JumpIfEqual {1109}
	586 Move X1, X0
	587 Move [X31], X23
	588 Move X8, 0xC92000
	589 Move X0, [X25]
	590 Move X8, [X8+584]
	591 Move W9, [X0+224]
	592 Move X22, [X8]
	593 Compare W9, 0
	594 JumpIfNotEqual {596}
	595 Call 0x1C17DFC
	596 Move X0, X22
	597 Move X1, X31
	598 Call Type.GetTypeFromHandle, X0
	599 Move X1, X0
	600 Move X0, X21
	601 Move X2, X31
	602 Call Type.op_Equality, X0, X1
	603 Move TEMP, X0
	604 And TEMP, TEMP, 1
	605 Compare TEMP, 1
	606 JumpIfNotEqual {629}
	607 Move X8, 0xC69000
	608 Move X8, [X8+2904]
	609 Move X9, [X20]
	610 Move X1, [X8]
	611 Move X8, [X9+64]
	612 Move X9, [X1+64]
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move X0, X20
	615 Call 0x1C17E08
	616 Compare X19, 0
	617 JumpIfEqual {1109}
	618 Move W8, [X0]
	619 Move X9, 0xC73000
	620 Move X10, 0xC74000
	621 Move X9, [X9+4088]
	622 Move X10, [X10]
	623 NotImplemented "Instruction CMP not yet implemented."
	624 NotImplemented "Instruction CSEL not yet implemented."
	625 Move X1, [X8]
	626 Move X0, X19
	627 Move X2, X31
	628 Call StringBuilder.Append, X0, X1
	629 Compare X21, 0
	630 JumpIfEqual {1109}
	631 Move X8, [X21]
	632 Move X0, X21
	633 Move X9, [X8+1416]
	634 Move X1, [X8+1424]
	635 NotImplemented "Instruction BLR not yet implemented."
	636 Move TEMP, X0
	637 And TEMP, TEMP, 1
	638 Compare TEMP, 1
	639 JumpIfNotEqual {651}
	640 Compare X19, 0
	641 JumpIfEqual {1109}
	642 Move W1, 34
	643 Move X0, X19
	644 Move X2, X31
	645 Call StringBuilder.Append, X0, X1
	646 Move X0, X19
	647 Move X1, X20
	648 Move X2, X31
	649 Call StringBuilder.Append, X0, X1
	650 Move W1, 34
	651 Move X23, 0xC70000
	652 Move X23, [X23+760]
	653 Move X0, X20
	654 Move X1, [X23]
	655 Call 0x1C17E00
	656 Compare X0, 0
	657 JumpIfEqual {694}
	658 Compare X19, 0
	659 JumpIfEqual {1109}
	660 Move W1, 91
	661 Move X0, X19
	662 Move X2, X31
	663 Call StringBuilder.Append, X0, X1
	664 Move X21, [X23]
	665 Move X0, X20
	666 Move X1, X21
	667 Call 0x1C17E00
	668 Compare X0, 0
	669 JumpIfEqual {1270}
	670 Move X8, 0xC71000
	671 Move X8, [X8+3512]
	672 Move X23, [X23]
	673 Move X0, X20
	674 Move X22, [X8]
	675 Move X1, X23
	676 Call 0x1C17E00
	677 Compare X0, 0
	678 JumpIfEqual {1273}
	679 Move X8, [X0]
	680 Move X21, X0
	681 NotImplemented "Instruction LDRH not yet implemented."
	682 Compare X9, 0
	683 JumpIfEqual {690}
	684 Move X10, [X8+176]
	685 Add X10, X10, 8
	686 NotImplemented "Instruction LDUR not yet implemented."
	687 NotImplemented "Instruction CMP not yet implemented."
	688 Subtract X9, X9, 1
	689 Add X10, X10, 16
	690 Move X0, X21
	691 Move X1, X22
	692 Move W2, W31
	693 Call 0x1C5D788
	694 Move X8, [X21]
	695 Move X0, X21
	696 Move X9, [X8+968]
	697 Move X1, [X8+976]
	698 NotImplemented "Instruction BLR not yet implemented."
	699 Move TEMP, X0
	700 And TEMP, TEMP, 1
	701 Compare TEMP, 1
	702 JumpIfNotEqual {762}
	703 Move X8, [X21]
	704 Move X0, X21
	705 Move X9, [X8+1096]
	706 Move X1, [X8+1104]
	707 NotImplemented "Instruction BLR not yet implemented."
	708 Move X9, 0xC91000
	709 Move X8, [X25]
	710 Move X9, [X9+904]
	711 Move X22, X0
	712 Move W10, [X8+224]
	713 Move X23, [X9]
	714 Compare W10, 0
	715 JumpIfNotEqual {718}
	716 Move X0, X8
	717 Call 0x1C17DFC
	718 Move X0, X23
	719 Move X1, X31
	720 Call Type.GetTypeFromHandle, X0
	721 Move X1, X0
	722 Move X0, X22
	723 Move X2, X31
	724 Call Type.op_Equality, X0, X1
	725 Move TEMP, X0
	726 And TEMP, TEMP, 1
	727 Compare TEMP, 1
	728 JumpIfNotEqual {762}
	729 Move X8, [X21]
	730 Move X0, X21
	731 Move X9, [X8+1128]
	732 Move X1, [X8+1136]
	733 NotImplemented "Instruction BLR not yet implemented."
	734 Compare X0, 0
	735 JumpIfEqual {1109}
	736 Move W8, [X0+24]
	737 Compare W8, 0
	738 JumpIfEqual {1265}
	739 Move X8, [X25]
	740 Move X21, [X0+32]
	741 Move X22, [X24]
	742 Move W9, [X8+224]
	743 Compare W9, 0
	744 JumpIfNotEqual {747}
	745 Move X0, X8
	746 Call 0x1C17DFC
	747 Move X0, X22
	748 Move X1, X31
	749 Call Type.GetTypeFromHandle, X0
	750 Move X1, X0
	751 Move X0, X21
	752 Move X2, X31
	753 Call Type.op_Inequality, X0, X1
	754 Compare X19, 0
	755 JumpIfEqual {1109}
	756 Move TEMP, X0
	757 And TEMP, TEMP, 1
	758 Compare TEMP, 1
	759 JumpIfNotEqual {1054}
	760 Move X8, 0xC8F000
	761 Move X8, [X8+632]
	762 Compare X19, 0
	763 JumpIfEqual {1109}
	764 Move W1, 123
	765 Move X0, X19
	766 Move X2, X31
	767 Call StringBuilder.Append, X0, X1
	768 Move X8, [X21]
	769 Move W1, 84
	770 Move X0, X21
	771 Move X9, [X8+1672]
	772 Move X2, [X8+1680]
	773 NotImplemented "Instruction BLR not yet implemented."
	774 Compare X0, 0
	775 JumpIfEqual {1109}
	776 Move W8, [X0+24]
	777 Move X22, X0
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Move X28, 0xC90000
	780 Move X29, 0xCA6000
	781 Move X28, [X28+4048]
	782 Move X29, [X29+664]
	783 Move W27, W31
	784 Move W26, 1
	785 NotImplemented "Instruction CMP not yet implemented."
	786 Move X0, [X25]
	787 Add X8, X22, W27
	788 Move X23, [X8+32]
	789 Move X24, [X28]
	790 Move W8, [X0+224]
	791 Compare W8, 0
	792 JumpIfNotEqual {794}
	793 Call 0x1C17DFC
	794 Move X0, X24
	795 Move X1, X31
	796 Call Type.GetTypeFromHandle, X0
	797 Compare X23, 0
	798 JumpIfEqual {1109}
	799 Move X8, [X23]
	800 Move X1, X0
	801 Move W2, 1
	802 Move X0, X23
	803 Move X9, [X8+488]
	804 Move X3, [X8+496]
	805 NotImplemented "Instruction BLR not yet implemented."
	806 Move TEMP, X0
	807 And TEMP, TEMP, 1
	808 Compare TEMP, 1
	809 JumpIfEqual {845}
	810 Move X8, [X23]
	811 Move X0, X23
	812 Move X1, X20
	813 Move X9, [X8+712]
	814 Move X2, [X8+720]
	815 NotImplemented "Instruction BLR not yet implemented."
	816 Compare X0, 0
	817 JumpIfEqual {845}
	818 Move X24, X0
	819 Move TEMP, X26
	820 And TEMP, TEMP, 1
	821 Compare TEMP, 1
	822 JumpIfEqual {827}
	823 Move W1, 44
	824 Move X0, X19
	825 Move X2, X31
	826 Call StringBuilder.Append, X0, X1
	827 Move W1, 34
	828 Move X0, X19
	829 Move X2, X31
	830 Call StringBuilder.Append, X0, X1
	831 Move X0, X23
	832 Call JsonWriter.GetMemberName, X0
	833 Move X1, X0
	834 Move X0, X19
	835 Move X2, X31
	836 Call StringBuilder.Append, X0, X1
	837 Move X1, [X29]
	838 Move X0, X19
	839 Move X2, X31
	840 Call StringBuilder.Append, X0, X1
	841 Move X0, X19
	842 Move X1, X24
	843 Call JsonWriter.AppendValue, X0, X1
	844 Move W26, W31
	845 Move W8, [X22+24]
	846 Add W27, W27, 1
	847 NotImplemented "Instruction CMP not yet implemented."
	848 NotImplemented "Instruction LDRSW not yet implemented."
	849 Add X8, X8, X9
	850 Add X0, X8, 312
	851 Move X8, [X0]
	852 Move X1, [X0+8]
	853 Move X0, X21
	854 NotImplemented "Instruction BLR not yet implemented."
	855 Move X20, X0
	856 Compare X0, 0
	857 JumpIfEqual {1276}
	858 Move X22, 0xC68000
	859 Move X22, [X22+3608]
	860 Move W23, 1
	861 Move X8, [X20]
	862 Move X1, [X22]
	863 NotImplemented "Instruction LDRH not yet implemented."
	864 Compare X9, 0
	865 JumpIfEqual {872}
	866 Move X10, [X8+176]
	867 Add X10, X10, 8
	868 NotImplemented "Instruction LDUR not yet implemented."
	869 NotImplemented "Instruction CMP not yet implemented."
	870 Subtract X9, X9, 1
	871 Add X10, X10, 16
	872 Move X0, X20
	873 Move W2, W31
	874 Call 0x1C5D788
	875 NotImplemented "Instruction LDRSW not yet implemented."
	876 Add X8, X8, X9
	877 Add X0, X8, 312
	878 Move X8, [X0]
	879 Move X1, [X0+8]
	880 Move X0, X20
	881 NotImplemented "Instruction BLR not yet implemented."
	882 Move TEMP, X0
	883 And TEMP, TEMP, 1
	884 Compare TEMP, 1
	885 JumpIfNotEqual {921}
	886 Move X8, [X20]
	887 Move X1, [X22]
	888 NotImplemented "Instruction LDRH not yet implemented."
	889 Compare X9, 0
	890 JumpIfEqual {897}
	891 Move X10, [X8+176]
	892 Add X10, X10, 8
	893 NotImplemented "Instruction LDUR not yet implemented."
	894 NotImplemented "Instruction CMP not yet implemented."
	895 Subtract X9, X9, 1
	896 Add X10, X10, 16
	897 Move W2, 1
	898 Move X0, X20
	899 Call 0x1C5D788
	900 Move W9, [X10]
	901 Add W9, W9, 1
	902 Add X8, X8, W9
	903 Add X0, X8, 312
	904 Move X8, [X0]
	905 Move X1, [X0+8]
	906 Move X0, X20
	907 NotImplemented "Instruction BLR not yet implemented."
	908 Move X21, X0
	909 Move TEMP, X23
	910 And TEMP, TEMP, 1
	911 Compare TEMP, 1
	912 JumpIfEqual {917}
	913 Move W1, 44
	914 Move X0, X19
	915 Move X2, X31
	916 Call StringBuilder.Append, X0, X1
	917 Move X0, X19
	918 Move X1, X21
	919 Call JsonWriter.AppendValue, X0, X1
	920 Move W23, W31
	921 Move X22, X31
	922 Move W21, 31
	923 Move X23, 0xC68000
	924 Move X23, [X23+3584]
	925 Move X0, X20
	926 Move X1, [X23]
	927 Call 0x1C17E00
	928 Compare X0, 0
	929 JumpIfEqual {952}
	930 Move X8, [X0]
	931 Move X1, [X23]
	932 Move X20, X0
	933 NotImplemented "Instruction LDRH not yet implemented."
	934 Compare X9, 0
	935 JumpIfEqual {942}
	936 Move X10, [X8+176]
	937 Add X10, X10, 8
	938 NotImplemented "Instruction LDUR not yet implemented."
	939 NotImplemented "Instruction CMP not yet implemented."
	940 Subtract X9, X9, 1
	941 Add X10, X10, 16
	942 Move X0, X20
	943 Move W2, W31
	944 Call 0x1C5D788
	945 NotImplemented "Instruction LDRSW not yet implemented."
	946 Add X8, X8, X9
	947 Add X0, X8, 312
	948 Move X8, [X0]
	949 Move X1, [X0+8]
	950 Move X0, X20
	951 NotImplemented "Instruction BLR not yet implemented."
	952 Compare X22, 0
	953 JumpIfNotEqual {1268}
	954 Move X23, [X31]
	955 NotImplemented "Instruction CMP not yet implemented."
	956 Compare W21, 0
	957 JumpIfNotEqual {427}
	958 Move W1, 93
	959 Move W26, 1
	960 Move X8, [X21]
	961 Move W1, 84
	962 Move X0, X21
	963 Move X9, [X8+2024]
	964 Move X2, [X8+2032]
	965 NotImplemented "Instruction BLR not yet implemented."
	966 Compare X0, 0
	967 JumpIfEqual {1109}
	968 Move W8, [X0+24]
	969 Move X21, X0
	970 NotImplemented "Instruction CMP not yet implemented."
	971 Move X27, 0xC90000
	972 Move X28, 0xCA6000
	973 Move X27, [X27+4048]
	974 Move X28, [X28+664]
	975 Move W24, W31
	976 NotImplemented "Instruction CMP not yet implemented."
	977 Add X8, X21, W24
	978 Move X22, [X8+32]
	979 Compare X22, 0
	980 JumpIfEqual {1109}
	981 Move X8, [X22]
	982 Move X0, X22
	983 Move X9, [X8+616]
	984 Move X1, [X8+624]
	985 NotImplemented "Instruction BLR not yet implemented."
	986 Move TEMP, X0
	987 And TEMP, TEMP, 1
	988 Compare TEMP, 1
	989 JumpIfNotEqual {1046}
	990 Move X0, [X25]
	991 Move X23, [X27]
	992 Move W8, [X0+224]
	993 Compare W8, 0
	994 JumpIfNotEqual {996}
	995 Call 0x1C17DFC
	996 Move X0, X23
	997 Move X1, X31
	998 Call Type.GetTypeFromHandle, X0
	999 Move X8, [X22]
	1000 Move X1, X0
	1001 Move W2, 1
	1002 Move X0, X22
	1003 Move X9, [X8+488]
	1004 Move X3, [X8+496]
	1005 NotImplemented "Instruction BLR not yet implemented."
	1006 Move TEMP, X0
	1007 And TEMP, TEMP, 1
	1008 Compare TEMP, 1
	1009 JumpIfEqual {1046}
	1010 Move X8, [X22]
	1011 Move X0, X22
	1012 Move X1, X20
	1013 Move X2, X31
	1014 Move X9, [X8+712]
	1015 Move X3, [X8+720]
	1016 NotImplemented "Instruction BLR not yet implemented."
	1017 Compare X0, 0
	1018 JumpIfEqual {1046}
	1019 Move X23, X0
	1020 Move TEMP, X26
	1021 And TEMP, TEMP, 1
	1022 Compare TEMP, 1
	1023 JumpIfEqual {1028}
	1024 Move W1, 44
	1025 Move X0, X19
	1026 Move X2, X31
	1027 Call StringBuilder.Append, X0, X1
	1028 Move W1, 34
	1029 Move X0, X19
	1030 Move X2, X31
	1031 Call StringBuilder.Append, X0, X1
	1032 Move X0, X22
	1033 Call JsonWriter.GetMemberName, X0
	1034 Move X1, X0
	1035 Move X0, X19
	1036 Move X2, X31
	1037 Call StringBuilder.Append, X0, X1
	1038 Move X1, [X28]
	1039 Move X0, X19
	1040 Move X2, X31
	1041 Call StringBuilder.Append, X0, X1
	1042 Move X0, X19
	1043 Move X1, X23
	1044 Call JsonWriter.AppendValue, X0, X1
	1045 Move W26, W31
	1046 Move W8, [X21+24]
	1047 Add W24, W24, 1
	1048 NotImplemented "Instruction CMP not yet implemented."
	1049 Move W1, 125
	1050 Move X0, X19
	1051 Move X2, X31
	1052 Call StringBuilder.Append, X0, X1
	1053 Move X23, [X31]
	1054 Move W1, 123
	1055 Move X0, X19
	1056 Move X2, X31
	1057 Call StringBuilder.Append, X0, X1
	1058 Move X23, 0xC68000
	1059 Move X23, [X23+2072]
	1060 Move X0, X20
	1061 Move X1, [X23]
	1062 Call 0x1C17E00
	1063 Compare X0, 0
	1064 JumpIfEqual {1109}
	1065 Move X8, [X0]
	1066 Move X1, [X23]
	1067 Move X21, X0
	1068 NotImplemented "Instruction LDRH not yet implemented."
	1069 Compare X9, 0
	1070 JumpIfEqual {1077}
	1071 Move X10, [X8+176]
	1072 Add X10, X10, 8
	1073 NotImplemented "Instruction LDUR not yet implemented."
	1074 NotImplemented "Instruction CMP not yet implemented."
	1075 Subtract X9, X9, 1
	1076 Add X10, X10, 16
	1077 Move W2, 2
	1078 Move X0, X21
	1079 Call 0x1C5D788
	1080 Move X0, X20
	1081 Call 0x1C181E0
	1082 Move W9, [X10]
	1083 Add W9, W9, 2
	1084 Add X8, X8, W9
	1085 Add X0, X8, 312
	1086 Move X8, [X0]
	1087 Move X1, [X0+8]
	1088 Move X0, X21
	1089 NotImplemented "Instruction BLR not yet implemented."
	1090 Compare X0, 0
	1091 JumpIfEqual {1109}
	1092 Move X10, 0xC70000
	1093 Move X8, [X0]
	1094 Move X10, [X10+3512]
	1095 Move X20, X0
	1096 NotImplemented "Instruction LDRH not yet implemented."
	1097 Move X1, [X10]
	1098 Compare X9, 0
	1099 JumpIfEqual {1106}
	1100 Move X10, [X8+176]
	1101 Add X10, X10, 8
	1102 NotImplemented "Instruction LDUR not yet implemented."
	1103 NotImplemented "Instruction CMP not yet implemented."
	1104 Subtract X9, X9, 1
	1105 Add X10, X10, 16
	1106 Move X0, X20
	1107 Move W2, W31
	1108 Call 0x1C5D788
	1109 Call 0x1C17F20
	1110 NotImplemented "Instruction LDRSW not yet implemented."
	1111 Add X8, X8, X9
	1112 Add X0, X8, 312
	1113 Move X8, [X0]
	1114 Move X1, [X0+8]
	1115 Move X0, X20
	1116 NotImplemented "Instruction BLR not yet implemented."
	1117 Move X20, X0
	1118 Compare X0, 0
	1119 JumpIfEqual {1277}
	1120 Move X24, 0xC68000
	1121 Move X25, 0xC6A000
	1122 Move X26, 0xCA6000
	1123 Move X24, [X24+3608]
	1124 Move X25, [X25+632]
	1125 Move X26, [X26+664]
	1126 Move W27, 1
	1127 Move X8, [X20]
	1128 Move X1, [X24]
	1129 NotImplemented "Instruction LDRH not yet implemented."
	1130 Compare X9, 0
	1131 JumpIfEqual {1138}
	1132 Move X10, [X8+176]
	1133 Add X10, X10, 8
	1134 NotImplemented "Instruction LDUR not yet implemented."
	1135 NotImplemented "Instruction CMP not yet implemented."
	1136 Subtract X9, X9, 1
	1137 Add X10, X10, 16
	1138 Move X0, X20
	1139 Move W2, W31
	1140 Call 0x1C5D788
	1141 NotImplemented "Instruction LDRSW not yet implemented."
	1142 Add X8, X8, X9
	1143 Add X0, X8, 312
	1144 Move X8, [X0]
	1145 Move X1, [X0+8]
	1146 Move X0, X20
	1147 NotImplemented "Instruction BLR not yet implemented."
	1148 Move TEMP, X0
	1149 And TEMP, TEMP, 1
	1150 Compare TEMP, 1
	1151 JumpIfNotEqual {1226}
	1152 Move X8, [X20]
	1153 Move X1, [X24]
	1154 NotImplemented "Instruction LDRH not yet implemented."
	1155 Compare X9, 0
	1156 JumpIfEqual {1163}
	1157 Move X10, [X8+176]
	1158 Add X10, X10, 8
	1159 NotImplemented "Instruction LDUR not yet implemented."
	1160 NotImplemented "Instruction CMP not yet implemented."
	1161 Subtract X9, X9, 1
	1162 Add X10, X10, 16
	1163 Move W2, 1
	1164 Move X0, X20
	1165 Call 0x1C5D788
	1166 Move W9, [X10]
	1167 Add W9, W9, 1
	1168 Add X8, X8, W9
	1169 Add X0, X8, 312
	1170 Move X8, [X0]
	1171 Move X1, [X0+8]
	1172 Move X0, X20
	1173 NotImplemented "Instruction BLR not yet implemented."
	1174 Move X22, X0
	1175 Move TEMP, X27
	1176 And TEMP, TEMP, 1
	1177 Compare TEMP, 1
	1178 JumpIfEqual {1183}
	1179 Move W1, 44
	1180 Move X0, X19
	1181 Move X2, X31
	1182 Call StringBuilder.Append, X0, X1
	1183 Move W1, 34
	1184 Move X0, X19
	1185 Move X2, X31
	1186 Call StringBuilder.Append, X0, X1
	1187 Compare X22, 0
	1188 JumpIfEqual {1192}
	1189 Move X1, [X25]
	1190 Move X8, [X22]
	1191 NotImplemented "Instruction CMP not yet implemented."
	1192 Move X0, X19
	1193 Move X1, X22
	1194 Move X2, X31
	1195 Call StringBuilder.Append, X0, X1
	1196 Move X1, [X26]
	1197 Move X0, X19
	1198 Move X2, X31
	1199 Call StringBuilder.Append, X0, X1
	1200 Move X8, [X21]
	1201 Move X1, [X23]
	1202 NotImplemented "Instruction LDRH not yet implemented."
	1203 Compare X9, 0
	1204 JumpIfEqual {1211}
	1205 Move X10, [X8+176]
	1206 Add X10, X10, 8
	1207 NotImplemented "Instruction LDUR not yet implemented."
	1208 NotImplemented "Instruction CMP not yet implemented."
	1209 Subtract X9, X9, 1
	1210 Add X10, X10, 16
	1211 Move X0, X21
	1212 Move W2, W31
	1213 Call 0x1C5D788
	1214 NotImplemented "Instruction LDRSW not yet implemented."
	1215 Add X8, X8, X9
	1216 Add X0, X8, 312
	1217 Move X8, [X0]
	1218 Move X2, [X0+8]
	1219 Move X0, X21
	1220 Move X1, X22
	1221 NotImplemented "Instruction BLR not yet implemented."
	1222 Move X1, X0
	1223 Move X0, X19
	1224 Call JsonWriter.AppendValue, X0, X1
	1225 Move W27, W31
	1226 Move X22, X31
	1227 Move W21, 38
	1228 Move X23, 0xC68000
	1229 Move X23, [X23+3584]
	1230 Move X0, X20
	1231 Move X1, [X23]
	1232 Call 0x1C17E00
	1233 Compare X0, 0
	1234 JumpIfEqual {1257}
	1235 Move X8, [X0]
	1236 Move X1, [X23]
	1237 Move X20, X0
	1238 NotImplemented "Instruction LDRH not yet implemented."
	1239 Compare X9, 0
	1240 JumpIfEqual {1247}
	1241 Move X10, [X8+176]
	1242 Add X10, X10, 8
	1243 NotImplemented "Instruction LDUR not yet implemented."
	1244 NotImplemented "Instruction CMP not yet implemented."
	1245 Subtract X9, X9, 1
	1246 Add X10, X10, 16
	1247 Move X0, X20
	1248 Move W2, W31
	1249 Call 0x1C5D788
	1250 NotImplemented "Instruction LDRSW not yet implemented."
	1251 Add X8, X8, X9
	1252 Add X0, X8, 312
	1253 Move X8, [X0]
	1254 Move X1, [X0+8]
	1255 Move X0, X20
	1256 NotImplemented "Instruction BLR not yet implemented."
	1257 Compare X22, 0
	1258 JumpIfNotEqual {1268}
	1259 Move X23, [X31]
	1260 NotImplemented "Instruction CMP not yet implemented."
	1261 Compare W21, 0
	1262 JumpIfNotEqual {427}
	1263 Move W1, 125
	1264 Call 0x3EB2B20
	1265 Call 0x1C17F28
	1266 Move X0, X22
	1267 Call 0x1C181E0
	1268 Move X0, X22
	1269 Call 0x1C17F18
	1270 Move X0, X20
	1271 Move X1, X21
	1272 Call 0x1C181E0
	1273 Move X0, X20
	1274 Move X1, X23
	1275 Call 0x1C181E0
	1276 Call 0x1C17F20
	1277 Call 0x1C17F20
	1278 Move X21, X0
	1279 NotImplemented "Instruction CMP not yet implemented."
	1280 Move X0, X21
	1281 Call 0x3EB2AD0
	1282 Move X22, [X0]
	1283 Call 0x3EB2AE0
	1284 Move W21, W31
	1285 Move X22, X31
	1286 Move X21, X0
	1287 Move X23, 0xC68000
	1288 Move X23, [X23+3584]
	1289 Move X1, [X23]
	1290 Move X0, X20
	1291 Call 0x1C17E00
	1292 Move X19, X0
	1293 Compare X0, 0
	1294 JumpIfEqual {1316}
	1295 Move X8, [X19]
	1296 Move X1, [X23]
	1297 NotImplemented "Instruction LDRH not yet implemented."
	1298 Compare X9, 0
	1299 JumpIfEqual {1306}
	1300 Move X10, [X8+176]
	1301 Add X10, X10, 8
	1302 NotImplemented "Instruction LDUR not yet implemented."
	1303 NotImplemented "Instruction CMP not yet implemented."
	1304 Subtract X9, X9, 1
	1305 Add X10, X10, 16
	1306 Move X0, X19
	1307 Move W2, W31
	1308 Call 0x1C5D788
	1309 NotImplemented "Instruction LDRSW not yet implemented."
	1310 Add X8, X8, X9
	1311 Add X0, X8, 312
	1312 Move X8, [X0]
	1313 Move X1, [X0+8]
	1314 Move X0, X19
	1315 NotImplemented "Instruction BLR not yet implemented."
	1316 Compare X22, 0
	1317 JumpIfEqual {1360}
	1318 Move X0, X22
	1319 Call 0x1C17F18
	1320 Move X21, X0
	1321 NotImplemented "Instruction CMP not yet implemented."
	1322 Move X0, X21
	1323 Call 0x3EB2AD0
	1324 Move X22, [X0]
	1325 Call 0x3EB2AE0
	1326 Move W21, W31
	1327 Move X22, X31
	1328 Move X21, X0
	1329 Move X23, 0xC68000
	1330 Move X23, [X23+3584]
	1331 Move X1, [X23]
	1332 Move X0, X20
	1333 Call 0x1C17E00
	1334 Move X19, X0
	1335 Compare X0, 0
	1336 JumpIfEqual {1358}
	1337 Move X8, [X19]
	1338 Move X1, [X23]
	1339 NotImplemented "Instruction LDRH not yet implemented."
	1340 Compare X9, 0
	1341 JumpIfEqual {1348}
	1342 Move X10, [X8+176]
	1343 Add X10, X10, 8
	1344 NotImplemented "Instruction LDUR not yet implemented."
	1345 NotImplemented "Instruction CMP not yet implemented."
	1346 Subtract X9, X9, 1
	1347 Add X10, X10, 16
	1348 Move X0, X19
	1349 Move W2, W31
	1350 Call 0x1C5D788
	1351 NotImplemented "Instruction LDRSW not yet implemented."
	1352 Add X8, X8, X9
	1353 Add X0, X8, 312
	1354 Move X8, [X0]
	1355 Move X1, [X0+8]
	1356 Move X0, X19
	1357 NotImplemented "Instruction BLR not yet implemented."
	1358 Compare X22, 0
	1359 JumpIfNotEqual {1362}
	1360 Move X0, X21
	1361 Call 0x1D2D690
	1362 Move X0, X22
	1363 Call 0x1C17F18
	1364 Call 0x1991590

Method: System.String GetMemberName(System.Reflection.MemberInfo member)

Disassembly:
	0x0348CA78 CBZ X0, 0x348CAB0
	0x0348CA7C MOV X1, X31
	0x0348CA80 BL 0x362F62C
	0x0348CA84 CBZ X0, 0x348CAB0
	0x0348CA88 LDP X20, X19, [X31 + 0x20]
	0x0348CA8C LDP X22, X21, [X31 + 0x10]
	0x0348CA90 MOV X1, X31
	0x0348CA94 LDR X30, [X31], #0x30
	0x0348CA98 B 0x322B8DC
	0x0348CA9C LDP X20, X19, [X31 + 0x20]
	0x0348CAA0 LDP X22, X21, [X31 + 0x10]
	0x0348CAA4 MOV X0, X31
	0x0348CAA8 LDR X30, [X31], #0x30
	0x0348CAAC RET
	0x0348CAB0 BL 0x1C16F20
	0x0348CAB4 STR X30, [X31 - 0x30]!
	0x0348CAB8 STP X22, X21, [X31 + 0x10]
	0x0348CABC STP X20, X19, [X31 + 0x20]
	0x0348CAC0 ADRP X21, 0xF51000
	0x0348CAC4 ADRP X22, 0xC6F000
	0x0348CAC8 ADRP X20, 0xCA5000
	0x0348CACC LDRB W8, [X21 + 0x918]
	0x0348CAD0 LDR X22, [X22 + 0x600]
	0x0348CAD4 LDR X20, [X20 + 0x300]
	0x0348CAD8 MOV X19, X0
	0x0348CADC TBNZ X8, 0x0, 0x348CB6C
	0x0348CAE0 ADRP X0, 0xC70000
	0x0348CAE4 LDR X0, [X0 + 0x8D8]
	0x0348CAE8 BL 0x1C16CF4
	0x0348CAEC ADRP X0, 0xC74000
	0x0348CAF0 LDR X0, [X0 + 0xDA0]
	0x0348CAF4 BL 0x1C16CF4
	0x0348CAF8 ADRP X0, 0xCA5000
	0x0348CAFC LDR X0, [X0 + 0x308]
	0x0348CB00 BL 0x1C16CF4
	0x0348CB04 ADRP X0, 0xC74000
	0x0348CB08 LDR X0, [X0 + 0xDB0]
	0x0348CB0C BL 0x1C16CF4
	0x0348CB10 ADRP X0, 0xC68000
	0x0348CB14 LDR X0, [X0 + 0x1C0]
	0x0348CB18 BL 0x1C16CF4
	0x0348CB1C ADRP X0, 0xC68000
	0x0348CB20 LDR X0, [X0 + 0x1D0]
	0x0348CB24 BL 0x1C16CF4
	0x0348CB28 ADRP X0, 0xC6F000
	0x0348CB2C LDR X0, [X0 + 0x600]
	0x0348CB30 BL 0x1C16CF4
	0x0348CB34 ADRP X0, 0xCA5000
	0x0348CB38 LDR X0, [X0 + 0x310]
	0x0348CB3C BL 0x1C16CF4
	0x0348CB40 ADRP X0, 0xCA5000
	0x0348CB44 LDR X0, [X0 + 0x318]
	0x0348CB48 BL 0x1C16CF4
	0x0348CB4C ADRP X0, 0xCA5000
	0x0348CB50 LDR X0, [X0 + 0x320]
	0x0348CB54 BL 0x1C16CF4
	0x0348CB58 ADRP X0, 0xCA5000
	0x0348CB5C LDR X0, [X0 + 0x300]
	0x0348CB60 BL 0x1C16CF4
	0x0348CB64 MOVZ W8, 0x1
	0x0348CB68 STRB W8, [X21 + 0x918]
	0x0348CB6C LDR X0, [X22]
	0x0348CB70 BL 0x1C16F10
	0x0348CB74 LDR X1, [X20]
	0x0348CB78 MOVZ W2, 0x1
	0x0348CB7C MOV X3, X31
	0x0348CB80 MOV X20, X0
	0x0348CB84 BL 0x3633518
	0x0348CB88 CBZ X20, 0x348CD34
	0x0348CB8C MOV X0, X20
	0x0348CB90 MOV X1, X19
	0x0348CB94 MOV X2, X31
	0x0348CB98 BL 0x3632C2C
	0x0348CB9C CBZ X0, 0x348CD34
	0x0348CBA0 MOV X1, X31
	0x0348CBA4 MOV X19, X0
	0x0348CBA8 BL 0x362F808
	0x0348CBAC TBZ X0, 0x0, 0x348CCFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF52000
	007 Move X21, 0xC90000
	008 Move X22, 0xC68000
	009 Move W8, [X20+2316]
	010 Move X21, [X21+4032]
	011 Move X22, [X22+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xC90000
	018 Move X0, [X0+4032]
	019 Call 0x1C17CF4
	020 Move X0, 0xC90000
	021 Move X0, [X0+4040]
	022 Call 0x1C17CF4
	023 Move X0, 0xC68000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2316], W8
	028 Move X0, [X22]
	029 Move X20, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Compare X19, 0
	038 JumpIfEqual {96}
	039 Move X8, [X19]
	040 Move X1, X0
	041 Move W2, 1
	042 Move X0, X19
	043 Move X9, [X8+488]
	044 Move X3, [X8+496]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {79}
	050 Move X0, [X22]
	051 Move X20, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Move X1, X31
	058 Call Type.GetTypeFromHandle, X0
	059 Move X1, X0
	060 Move W2, 1
	061 Move X0, X19
	062 Move X3, X31
	063 Call Attribute.GetCustomAttribute, X0, X1, X2
	064 Compare X0, 0
	065 JumpIfEqual {96}
	066 Move X8, 0xC90000
	067 Move X8, [X8+4040]
	068 Move X20, X0
	069 Move X1, [X8]
	070 Move X8, [X0]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X20+16]
	073 Move X1, X31
	074 Call String.IsNullOrEmpty, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {89}
	079 Move X8, [X19]
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X2, [X8+424]
	086 Move X1, [X8+432]
	087 Move X30, [X31+48]
	088 CallNoReturn X2
	089 Move X0, [X20+16]
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return X0
	096 Call 0x1C17F20
	097 Move X0, X20
	098 Call 0x1C181E0

