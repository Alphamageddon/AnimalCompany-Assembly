Type: Nakama.TinyJson.JsonParser

Method: T FromJson(System.String json)

Disassembly:
	0x0220ECD0 MOV X2, X31
	0x0220ECD4 BL 0x3233D30
	0x0220ECD8 LDR W8, [X22 + 0x10]
	0x0220ECDC ADD W24, W24, 0x1
	0x0220ECE0 CMP W24, W8
	0x0220ECE4 B.LT 0x220EC60
	0x0220ECE8 ADRP X8, 0x1EE5000
	0x0220ECEC LDR X8, [X8 + 0x6C0]
	0x0220ECF0 LDR X0, [X8]
	0x0220ECF4 LDR X8, [X20 + 0x38]
	0x0220ECF8 LDR W9, [X0 + 0xE0]
	0x0220ECFC LDR X22, [X8]
	0x0220ED00 CBNZ W9, 0x220ED08
	0x0220ED04 BL 0x1C16DFC
	0x0220ED08 MOV X0, X22
	0x0220ED0C MOV X1, X31
	0x0220ED10 BL 0x338C698
	0x0220ED14 LDR X8, [X27]
	0x0220ED18 MOV X22, X0
	0x0220ED1C MOV X0, X8
	0x0220ED20 BL 0x1C16D0C
	0x0220ED24 LDR X0, [X0 + 0x8]
	0x0220ED28 CBZ X0, 0x220EDB4
	0x0220ED2C LDR X8, [X0]
	0x0220ED30 LDP X9, X1, [X8 + 0x168]
	0x0220ED34 BLR X9
	0x0220ED38 MOV X1, X0
	0x0220ED3C MOV X0, X22
	0x0220ED40 MOV X2, X31
	0x0220ED44 BL 0x3488D2C
	0x0220ED48 LDR X8, [X20 + 0x38]
	0x0220ED4C MOV X20, X0
	0x0220ED50 LDR X1, [X8 + 0x8]
	0x0220ED54 LDRB W8, [X1 + 0x135]
	0x0220ED58 TBNZ X8, 0x0, 0x220ED68
	0x0220ED5C MOV X0, X1
	0x0220ED60 BL 0x1C5C684
	0x0220ED64 MOV X1, X0
	0x0220ED68 MOV X0, X20
	0x0220ED6C MOV X2, X23
	0x0220ED70 BL 0x1C16E10
	0x0220ED74 MOV X1, X0
	0x0220ED78 MOV X0, X19
	0x0220ED7C MOV X2, X21
	0x0220ED80 BL 0x3EB1AC0
	0x0220ED84 LDR X8, [X26 + 0x28]
	0x0220ED88 LDUR X9, [X29 - 0x8]
	0x0220ED8C CMP X8, X9
	0x0220ED90 B.NE 0x220EDB8
	0x0220ED94 ADD X31, X29, 0x0
	0x0220ED98 LDP X20, X19, [X31 + 0x50]
	0x0220ED9C LDP X22, X21, [X31 + 0x40]
	0x0220EDA0 LDP X24, X23, [X31 + 0x30]
	0x0220EDA4 LDP X26, X25, [X31 + 0x20]
	0x0220EDA8 LDP X28, X27, [X31 + 0x10]
	0x0220EDAC LDP X29, X30, [X31], #0x60
	0x0220EDB0 RET
	0x0220EDB4 BL 0x1C16F20
	0x0220EDB8 BL 0x3EB1B20
	0x0220EDBC STR X30, [X31 - 0x40]!
	0x0220EDC0 STP X24, X23, [X31 + 0x10]
	0x0220EDC4 STP X22, X21, [X31 + 0x20]
	0x0220EDC8 STP X20, X19, [X31 + 0x30]
	0x0220EDCC LDR X8, [X1 + 0x38]
	0x0220EDD0 MOV X19, X1
	0x0220EDD4 MOV X20, X0
	0x0220EDD8 CBNZ X8, 0x220EE64
	0x0220EDDC ADRP X0, 0x1EE7000
	0x0220EDE0 LDR X0, [X0 + 0x170]
	0x0220EDE4 BL 0x1C16CF4
	0x0220EDE8 ADRP X0, 0x1F0D000
	0x0220EDEC LDR X0, [X0 + 0xFD8]
	0x0220EDF0 BL 0x1C16CF4
	0x0220EDF4 ADRP X0, 0x1F0D000
	0x0220EDF8 LDR X0, [X0 + 0xFE0]
	0x0220EDFC BL 0x1C16CF4
	0x0220EE00 ADRP X0, 0x1F0D000
	0x0220EE04 LDR X0, [X0 + 0xFE8]
	0x0220EE08 BL 0x1C16CF4
	0x0220EE0C ADRP X0, 0x1F0D000
	0x0220EE10 LDR X0, [X0 + 0xFF0]
	0x0220EE14 BL 0x1C16CF4
	0x0220EE18 ADRP X0, 0x1F0D000
	0x0220EE1C LDR X0, [X0 + 0xFF8]
	0x0220EE20 BL 0x1C16CF4
	0x0220EE24 ADRP X0, 0x1F0E000
	0x0220EE28 LDR X0, [X0]
	0x0220EE2C BL 0x1C16CF4
	0x0220EE30 ADRP X0, 0x1F0E000
	0x0220EE34 LDR X0, [X0 + 0x8]
	0x0220EE38 BL 0x1C16CF4
	0x0220EE3C ADRP X0, 0x1EE5000
	0x0220EE40 LDR X0, [X0 + 0x8F0]
	0x0220EE44 BL 0x1C16CF4
	0x0220EE48 ADRP X0, 0x1EE5000
	0x0220EE4C LDR X0, [X0 + 0x6C0]
	0x0220EE50 BL 0x1C16CF4
	0x0220EE54 LDR X8, [X19 + 0x38]
	0x0220EE58 CBNZ X8, 0x220EE64
	0x0220EE5C MOV X0, X19
	0x0220EE60 BL 0x1C5C6E0
	0x0220EE64 ADRP X23, 0x1F0D000
	0x0220EE68 LDR X23, [X23 + 0xFF8]
	0x0220EE6C LDR X0, [X23]
	0x0220EE70 BL 0x1C16D0C
	0x0220EE74 LDR X8, [X0 + 0x18]
	0x0220EE78 CBNZ X8, 0x220EEB4
	0x0220EE7C ADRP X8, 0x1F0D000
	0x0220EE80 LDR X8, [X8 + 0xFF0]
	0x0220EE84 LDR X0, [X8]
	0x0220EE88 BL 0x1C16F10
	0x0220EE8C ADRP X8, 0x1F0D000
	0x0220EE90 LDR X8, [X8 + 0xFD8]
	0x0220EE94 MOV X21, X0
	0x0220EE98 LDR X1, [X8]
	0x0220EE9C BL 0x2AA4804
	0x0220EEA0 LDR X0, [X23]
	0x0220EEA4 BL 0x1C16D0C
	0x0220EEA8 STR X21, [X0 + 0x18]
	0x0220EEAC LDR X0, [X23]
	0x0220EEB0 BL 0x1C16D0C
	0x0220EEB4 LDR X0, [X23]
	0x0220EEB8 BL 0x1C16D0C
	0x0220EEBC LDR X8, [X0 + 0x10]
	0x0220EEC0 CBNZ X8, 0x220EEFC
	0x0220EEC4 ADRP X8, 0x1F0D000
	0x0220EEC8 LDR X8, [X8 + 0xFE8]
	0x0220EECC LDR X0, [X8]
	0x0220EED0 BL 0x1C16F10
	0x0220EED4 ADRP X8, 0x1F0D000
	0x0220EED8 LDR X8, [X8 + 0xFE0]
	0x0220EEDC MOV X21, X0
	0x0220EEE0 LDR X1, [X8]
	0x0220EEE4 BL 0x2AA4804
	0x0220EEE8 LDR X0, [X23]
	0x0220EEEC BL 0x1C16D0C
	0x0220EEF0 STR X21, [X0 + 0x10]
	0x0220EEF4 LDR X0, [X23]
	0x0220EEF8 BL 0x1C16D0C
	0x0220EEFC LDR X0, [X23]
	0x0220EF00 BL 0x1C16D0C
	0x0220EF04 LDR X8, [X0 + 0x8]
	0x0220EF08 CBNZ X8, 0x220EF3C
	0x0220EF0C ADRP X8, 0x1EE5000
	0x0220EF10 LDR X8, [X8 + 0x8F0]
	0x0220EF14 LDR X0, [X8]
	0x0220EF18 BL 0x1C16F10
	0x0220EF1C MOV X1, X31
	0x0220EF20 MOV X21, X0
	0x0220EF24 BL 0x3231AC4
	0x0220EF28 LDR X0, [X23]
	0x0220EF2C BL 0x1C16D0C
	0x0220EF30 STR X21, [X0 + 0x8]
	0x0220EF34 LDR X0, [X23]
	0x0220EF38 BL 0x1C16D0C
	0x0220EF3C LDR X0, [X23]
	0x0220EF40 BL 0x1C16D0C
	0x0220EF44 LDR X8, [X0]
	0x0220EF48 CBNZ X8, 0x220EF84
	0x0220EF4C ADRP X8, 0x1F0E000
	0x0220EF50 LDR X8, [X8 + 0x8]
	0x0220EF54 LDR X0, [X8]
	0x0220EF58 BL 0x1C16F10
	0x0220EF5C ADRP X8, 0x1F0E000
	0x0220EF60 LDR X8, [X8]
	0x0220EF64 MOV X21, X0
	0x0220EF68 LDR X1, [X8]
	0x0220EF6C BL 0x2601D04
	0x0220EF70 LDR X0, [X23]
	0x0220EF74 BL 0x1C16D0C
	0x0220EF78 STR X21, [X0]
	0x0220EF7C LDR X0, [X23]
	0x0220EF80 BL 0x1C16D0C
	0x0220EF84 LDR X0, [X23]
	0x0220EF88 BL 0x1C16D0C
	0x0220EF8C LDR X0, [X0 + 0x8]
	0x0220EF90 CBZ X0, 0x220F0FC
	0x0220EF94 MOV W1, W31
	0x0220EF98 MOV X2, X31
	0x0220EF9C BL 0x3232ADC
	0x0220EFA0 CBZ X20, 0x220F0FC
	0x0220EFA4 LDR W8, [X20 + 0x10]
	0x0220EFA8 CMP W8, 0x1
	0x0220EFAC B.LT 0x220F044
	0x0220EFB0 ADRP X24, 0x1EE7000
	0x0220EFB4 LDR X24, [X24 + 0x170]
	0x0220EFB8 MOV W21, W31
	0x0220EFBC MOV X0, X20
	0x0220EFC0 MOV W1, W21
	0x0220EFC4 MOV X2, X31
	0x0220EFC8 BL 0x3222A1C
	0x0220EFCC AND W8, W0, 0xFFFF
	0x0220EFD0 CMP W8, 0x22
	0x0220EFD4 B.NE 0x220EFF4
	0x0220EFD8 MOVZ W0, 0x1
	0x0220EFDC MOV W1, W21
	0x0220EFE0 MOV X2, X20
	0x0220EFE4 MOV X3, X31
	0x0220EFE8 BL 0x34887D0
	0x0220EFEC MOV W21, W0
	0x0220EFF0 B 0x220F034
	0x0220EFF4 MOV W22, W0
	0x0220EFF8 LDR X0, [X24]
	0x0220EFFC LDR W8, [X0 + 0xE0]
	0x0220F000 CBNZ W8, 0x220F008
	0x0220F004 BL 0x1C16DFC
	0x0220F008 MOV W0, W22
	0x0220F00C MOV X1, X31
	0x0220F010 BL 0x3317FCC
	0x0220F014 TBNZ X0, 0x0, 0x220F034
	0x0220F018 LDR X0, [X23]
	0x0220F01C BL 0x1C16D0C
	0x0220F020 LDR X0, [X0 + 0x8]
	0x0220F024 CBZ X0, 0x220F0FC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X9, [X1+56]
	010 Move X20, X1
	011 Move X21, X0
	012 Move X19, X8
	013 Compare X9, 0
	014 JumpIfNotEqual {50}
	015 Move X0, 0x1EE8000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F0E000
	019 Move X0, [X0+4056]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F0E000
	022 Move X0, [X0+4064]
	023 Call 0x1C17CF4
	024 Move X0, 0x1F0E000
	025 Move X0, [X0+4072]
	026 Call 0x1C17CF4
	027 Move X0, 0x1F0E000
	028 Move X0, [X0+4080]
	029 Call 0x1C17CF4
	030 Move X0, 0x1F0E000
	031 Move X0, [X0+4088]
	032 Call 0x1C17CF4
	033 Move X0, 0x1F0F000
	034 Move X0, [X0]
	035 Call 0x1C17CF4
	036 Move X0, 0x1F0F000
	037 Move X0, [X0+8]
	038 Call 0x1C17CF4
	039 Move X0, 0x1EE6000
	040 Move X0, [X0+2288]
	041 Call 0x1C17CF4
	042 Move X0, 0x1EE6000
	043 Move X0, [X0+1728]
	044 Call 0x1C17CF4
	045 Move X8, [X20+56]
	046 Compare X8, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X20
	049 Call 0x1C5D6E0
	050 Move X24, 0x1F0E000
	051 Move X24, [X24+4088]
	052 Move X0, [X24]
	053 Call 0x1C17D0C
	054 Move X8, [X0+24]
	055 Compare X8, 0
	056 JumpIfNotEqual {71}
	057 Move X8, 0x1F0E000
	058 Move X8, [X8+4080]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X8, 0x1F0E000
	062 Move X8, [X8+4056]
	063 Move X22, X0
	064 Move X1, [X8]
	065 Call Dictionary`2<Object, Object>..ctor, X0
	066 Move X0, [X24]
	067 Call 0x1C17D0C
	068 Move [X0+24], X22
	069 Move X0, [X24]
	070 Call 0x1C17D0C
	071 Move X0, [X24]
	072 Call 0x1C17D0C
	073 Move X8, [X0+16]
	074 Compare X8, 0
	075 JumpIfNotEqual {90}
	076 Move X8, 0x1F0E000
	077 Move X8, [X8+4072]
	078 Move X0, [X8]
	079 Call 0x1C17F10
	080 Move X8, 0x1F0E000
	081 Move X8, [X8+4064]
	082 Move X22, X0
	083 Move X1, [X8]
	084 Call Dictionary`2<Object, Object>..ctor, X0
	085 Move X0, [X24]
	086 Call 0x1C17D0C
	087 Move [X0+16], X22
	088 Move X0, [X24]
	089 Call 0x1C17D0C
	090 Move X0, [X24]
	091 Call 0x1C17D0C
	092 Move X8, [X0+8]
	093 Compare X8, 0
	094 JumpIfNotEqual {107}
	095 Move X8, 0x1EE6000
	096 Move X8, [X8+2288]
	097 Move X0, [X8]
	098 Call 0x1C17F10
	099 Move X1, X31
	100 Move X22, X0
	101 Call StringBuilder..ctor, X0
	102 Move X0, [X24]
	103 Call 0x1C17D0C
	104 Move [X0+8], X22
	105 Move X0, [X24]
	106 Call 0x1C17D0C
	107 Move X0, [X24]
	108 Call 0x1C17D0C
	109 Move X8, [X0]
	110 Compare X8, 0
	111 JumpIfNotEqual {126}
	112 Move X8, 0x1F0F000
	113 Move X8, [X8+8]
	114 Move X0, [X8]
	115 Call 0x1C17F10
	116 Move X8, 0x1F0F000
	117 Move X8, [X8]
	118 Move X22, X0
	119 Move X1, [X8]
	120 Call Stack`1<Object>..ctor, X0
	121 Move X0, [X24]
	122 Call 0x1C17D0C
	123 Move [X0], X22
	124 Move X0, [X24]
	125 Call 0x1C17D0C
	126 Move X0, [X24]
	127 Call 0x1C17D0C
	128 Move X0, [X0+8]
	129 Compare X0, 0
	130 JumpIfEqual {238}
	131 Move W1, W31
	132 Move X2, X31
	133 Call StringBuilder.set_Length, X0, X1
	134 Compare X21, 0
	135 JumpIfEqual {238}
	136 Move W8, [X21+16]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X25, 0x1EE8000
	139 Move X25, [X25+368]
	140 Move W22, W31
	141 Move X0, X21
	142 Move W1, W22
	143 Move X2, X31
	144 Call String.get_Chars, X0, X1
	145 And W8, W0, 0xFFFF
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W0, 1
	148 Move W1, W22
	149 Move X2, X21
	150 Move X3, X31
	151 Call JsonParser.AppendUntilStringEnd, X0, X1, X2
	152 Move W22, W0
	153 Move W23, W0
	154 Move X0, [X25]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move W0, W23
	160 Move X1, X31
	161 Call Char.IsWhiteSpace, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {174}
	166 Move X0, [X24]
	167 Call 0x1C17D0C
	168 Move X0, [X0+8]
	169 Compare X0, 0
	170 JumpIfEqual {238}
	171 Move W1, W23
	172 Move X2, X31
	173 Call StringBuilder.Append, X0, X1
	174 Move W8, [X21+16]
	175 Add W22, W22, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X8, 0x1EE6000
	178 Move X8, [X8+1728]
	179 Move X0, [X8]
	180 Move X8, [X20+56]
	181 Move W9, [X0+224]
	182 Move X21, [X8]
	183 Compare W9, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X0, X21
	187 Move X1, X31
	188 Call Type.GetTypeFromHandle, X0
	189 Move X8, [X24]
	190 Move X21, X0
	191 Move X0, X8
	192 Call 0x1C17D0C
	193 Move X0, [X0+8]
	194 Compare X0, 0
	195 JumpIfEqual {238}
	196 Move X8, [X0]
	197 Move X9, [X8+360]
	198 Move X1, [X8+368]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X1, X0
	201 Move X0, X21
	202 Move X2, X31
	203 Call JsonParser.ParseValue, X0, X1
	204 Move X8, [X20+56]
	205 Move X20, X0
	206 Move X1, [X8+8]
	207 Move W8, [X1+309]
	208 Move TEMP, X8
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfEqual {215}
	212 Move X0, X1
	213 Call 0x1C5D684
	214 Move X1, X0
	215 Compare X20, 0
	216 JumpIfEqual {238}
	217 Move X8, [X20]
	218 Move X9, [X1+64]
	219 Move X0, X20
	220 Move X8, [X8+64]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Call 0x1C17E08
	223 Move V0, [X0]
	224 Move V1, [X0+16]
	225 Move V2, [X0+2]
	226 Move X22, [X31+32]
	227 Move X21, [X31+40]
	228 Move X24, [X31+16]
	229 Move X23, [X31+24]
	230 Move [X19], V0
	231 Move [X19+8], V1
	232 Move [X19+2], V2
	233 Move X20, [X31+48]
	234 Move X19, [X31+56]
	235 Move X30, [X31+64]
	236 Move X25, [X31+72]
	237 Return X0
	238 Call 0x1C17F20
	239 Call 0x1C181E0

Method: System.Int32 AppendUntilStringEnd(System.Boolean appendEscapeCharacter, System.Int32 startIdx, System.String json)

Disassembly:
	0x034897D0 MOV X21, X0
	0x034897D4 LDR W10, [X8 + 0xE0]
	0x034897D8 LDR X23, [X9]
	0x034897DC CBNZ W10, 0x34897E8
	0x034897E0 MOV X0, X8
	0x034897E4 BL 0x1C16DFC
	0x034897E8 MOV X0, X23
	0x034897EC MOV X1, X31
	0x034897F0 BL 0x338C698
	0x034897F4 CBZ X21, 0x3489BA8
	0x034897F8 MOV X23, X0
	0x034897FC CBZ X0, 0x3489814
	0x03489800 LDR X8, [X21]
	0x03489804 MOV X0, X23
	0x03489808 LDR X1, [X8 + 0x40]
	0x0348980C BL 0x1C16E00
	0x03489810 CBZ X0, 0x3489BB4
	0x03489814 LDR W8, [X21 + 0x18]
	0x03489818 CBZ W8, 0x3489BAC
	0x0348981C MOV X0, X20
	0x03489820 MOV X1, X21
	0x03489824 MOV X2, X31
	0x03489828 STR X23, [X21 + 0x20]
	0x0348982C BL 0x3397418
	0x03489830 ADRP X8, 0xC6A000
	0x03489834 LDR X8, [X8 + 0x9D0]
	0x03489838 MOV X20, X0
	0x0348983C MOVZ W1, 0x1
	0x03489840 LDR X8, [X8]
	0x03489844 MOV X0, X8
	0x03489848 BL 0x1C16D6C
	0x0348984C ADRP X9, 0xC6A000
	0x03489850 LDR W8, [X19 + 0x18]
	0x03489854 LDR X9, [X9 + 0x758]
	0x03489858 MOV X21, X0
	0x0348985C ADD X1, X31, 0x30
	0x03489860 CMP W8, 0x0
	0x03489864 LDR X0, [X9]
	0x03489868 CINC W8, W8, LT
	0x0348986C SBFM W8, W8, 0x1, 0x1F
	0x03489870 STR W8, [X31 + 0x30]
	0x03489874 BL 0x1C16E04
	0x03489878 CBZ X21, 0x3489BA8
	0x0348987C MOV X23, X0
	0x03489880 CBZ X0, 0x3489898
	0x03489884 LDR X8, [X21]
	0x03489888 MOV X0, X23
	0x0348988C LDR X1, [X8 + 0x40]
	0x03489890 BL 0x1C16E00
	0x03489894 CBZ X0, 0x3489BB4
	0x03489898 LDR W8, [X21 + 0x18]
	0x0348989C CBZ W8, 0x3489BAC
	0x034898A0 STR X23, [X21 + 0x20]
	0x034898A4 CBZ X20, 0x3489BA8
	0x034898A8 MOV X0, X20
	0x034898AC MOV X1, X21
	0x034898B0 MOV X2, X31
	0x034898B4 BL 0x32CC7E8
	0x034898B8 ADRP X26, 0xC6A000
	0x034898BC LDR X26, [X26 + 0x818]
	0x034898C0 CBZ X0, 0x3489A88
	0x034898C4 LDR X23, [X26]
	0x034898C8 MOV X20, X0
	0x034898CC MOV X1, X23
	0x034898D0 BL 0x1C16E00
	0x034898D4 MOV X21, X0
	0x034898D8 CBNZ X0, 0x3489A8C
	0x034898DC B 0x348966C
	0x034898E0 ADRP X8, 0xC74000
	0x034898E4 LDR X0, [X24]
	0x034898E8 LDR X8, [X8 + 0x968]
	0x034898EC LDR W9, [X0 + 0xE0]
	0x034898F0 LDR X21, [X8]
	0x034898F4 CBNZ W9, 0x34898FC
	0x034898F8 BL 0x1C16DFC
	0x034898FC MOV X0, X21
	0x03489900 MOV X1, X31
	0x03489904 BL 0x338C698
	0x03489908 MOV X1, X0
	0x0348990C MOV X0, X20
	0x03489910 MOV X2, X31
	0x03489914 BL 0x3395194
	0x03489918 TBZ X0, 0x0, 0x3489928
	0x0348991C MOV X0, X19
	0x03489920 BL 0x3489CC0
	0x03489924 B 0x3489338
	0x03489928 CBZ X19, 0x3489BA8
	0x0348992C MOV X0, X19
	0x03489930 MOV W1, W31
	0x03489934 MOV X2, X31
	0x03489938 BL 0x3222A1C
	0x0348993C AND W8, W0, 0xFFFF
	0x03489940 CMP W8, 0x7B
	0x03489944 MOV X21, X31
	0x03489948 B.NE 0x348933C
	0x0348994C LDR W8, [X19 + 0x10]
	0x03489950 MOV X0, X19
	0x03489954 MOV X2, X31
	0x03489958 SUB W1, W8, 0x1
	0x0348995C BL 0x3222A1C
	0x03489960 AND W8, W0, 0xFFFF

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF55000
	009 Move X24, 0xC93000
	010 Move W8, [X21+2309]
	011 Move X24, [X24+4088]
	012 Move X19, X2
	013 Move W22, W1
	014 Move W20, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xC93000
	020 Move X0, [X0+4088]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2309], W8
	024 Move X0, [X24]
	025 Call 0x1C17D0C
	026 Compare X19, 0
	027 JumpIfEqual {113}
	028 Move X21, [X0+8]
	029 Move X0, X19
	030 Move W1, W22
	031 Move X2, X31
	032 Call String.get_Chars, X0, X1
	033 Compare X21, 0
	034 JumpIfEqual {113}
	035 Move W1, W0
	036 Move X0, X21
	037 Move X2, X31
	038 Call StringBuilder.Append, X0, X1
	039 Move W8, [X19+16]
	040 Add W21, W22, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X19
	043 Move W1, W21
	044 Move X2, X31
	045 Call String.get_Chars, X0, X1
	046 And W8, W0, 0xFFFF
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move TEMP, X20
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {65}
	052 Move X0, [X24]
	053 Call 0x1C17D0C
	054 Move X23, [X0+8]
	055 Move X0, X19
	056 Move W1, W21
	057 Move X2, X31
	058 Call String.get_Chars, X0, X1
	059 Compare X23, 0
	060 JumpIfEqual {113}
	061 Move W1, W0
	062 Move X0, X23
	063 Move X2, X31
	064 Call StringBuilder.Append, X0, X1
	065 Move X0, [X24]
	066 Call 0x1C17D0C
	067 Move X23, [X0+8]
	068 Add W21, W22, 2
	069 Move X0, X19
	070 Move W1, W21
	071 Move X2, X31
	072 Call String.get_Chars, X0, X1
	073 Compare X23, 0
	074 JumpIfEqual {113}
	075 Move W1, W0
	076 Move X0, X23
	077 Move X2, X31
	078 Call StringBuilder.Append, X0, X1
	079 Move X0, X19
	080 Move W1, W21
	081 Move X2, X31
	082 Call String.get_Chars, X0, X1
	083 Move X8, [X24]
	084 Move W22, W0
	085 Move X0, X8
	086 Call 0x1C17D0C
	087 Move X23, [X0+8]
	088 Move X0, X19
	089 Move W1, W21
	090 Move X2, X31
	091 Call String.get_Chars, X0, X1
	092 Compare X23, 0
	093 JumpIfEqual {113}
	094 Move W1, W0
	095 Move X0, X23
	096 Move X2, X31
	097 And W22, W22, 0xFFFF
	098 Call StringBuilder.Append, X0, X1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W8, [X19+16]
	101 Move W22, W21
	102 Add W21, W21, 1
	103 Subtract W21, W8, 1
	104 Move W0, W21
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move X30, [X31+64]
	112 Return X0
	113 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.String> Split(System.String json)

Disassembly:
	0x03489964 CMP W8, 0x7D
	0x03489968 MOV X21, X31
	0x0348996C B.NE 0x348933C
	0x03489970 MOV X0, X20
	0x03489974 MOV X1, X19
	0x03489978 BL 0x348A2F8
	0x0348997C B 0x3489338
	0x03489980 MOV X21, X31
	0x03489984 ADRP X8, 0xC91000
	0x03489988 LDR X8, [X8 + 0xFE0]
	0x0348998C MOV X0, X19
	0x03489990 LDR X1, [X8]
	0x03489994 ADD X8, X31, 0x30
	0x03489998 BL 0x301CB58
	0x0348999C LDR V0, [X31 + 0x3]
	0x034899A0 LDR X8, [X31 + 0x40]
	0x034899A4 ADRP X23, 0xC91000
	0x034899A8 STR V0, [X31 + 0x1]
	0x034899AC STR X8, [X31 + 0x20]
	0x034899B0 LDR X23, [X23 + 0xFD0]
	0x034899B4 LDR X1, [X23]
	0x034899B8 ADD X0, X31, 0x10
	0x034899BC BL 0x2BC4350
	0x034899C0 TBZ X0, 0x0, 0x3489A3C
	0x034899C4 LDR X1, [X31 + 0x20]
	0x034899C8 MOV X0, X22
	0x034899CC BL 0x3488D2C
	0x034899D0 CBZ X21, 0x3489BB0
	0x034899D4 LDR X8, [X21]
	0x034899D8 LDR X1, [X24]
	0x034899DC MOV X20, X0
	0x034899E0 LDRH W9, [X8 + 0x12E]
	0x034899E4 CBZ X9, 0x3489A08
	0x034899E8 LDR X10, [X8 + 0xB0]
	0x034899EC ADD X10, X10, 0x8
	0x034899F0 LDUR X11, [X10 - 0x8]
	0x034899F4 CMP X11, X1
	0x034899F8 B.EQ 0x3489A18
	0x034899FC SUBS X9, X9, 0x1
	0x03489A00 ADD X10, X10, 0x10
	0x03489A04 B.NE 0x34899F0
	0x03489A08 MOVZ W2, 0x2
	0x03489A0C MOV X0, X21
	0x03489A10 BL 0x1C5C788
	0x03489A14 B 0x3489A28
	0x03489A18 LDR W9, [X10]
	0x03489A1C ADD W9, W9, 0x2
	0x03489A20 ADD X8, X8, W9, 0x4, SXTW
	0x03489A24 ADD X0, X8, 0x138
	0x03489A28 LDP X8, X2, [X0]
	0x03489A2C MOV X0, X21
	0x03489A30 MOV X1, X20
	0x03489A34 BLR X8
	0x03489A38 B 0x34899B4
	0x03489A3C ADRP X8, 0xC91000
	0x03489A40 LDR X8, [X8 + 0xFC8]
	0x03489A44 ADD X0, X31, 0x10
	0x03489A48 LDR X1, [X8]
	0x03489A4C BL 0x2BC434C
	0x03489A50 ADRP X8, 0xC92000
	0x03489A54 LDR X8, [X8 + 0xFF8]
	0x03489A58 LDR X0, [X8]
	0x03489A5C BL 0x1C16D0C
	0x03489A60 LDR X0, [X0]
	0x03489A64 CBZ X0, 0x3489BA8
	0x03489A68 ADRP X8, 0xCA8000
	0x03489A6C LDR X8, [X8 + 0x220]
	0x03489A70 MOV X1, X19
	0x03489A74 LDR X2, [X8]
	0x03489A78 BL 0x2602314
	0x03489A7C B 0x348933C
	0x03489A80 MOV X21, X31
	0x03489A84 B 0x348933C
	0x03489A88 MOV X21, X31
	0x03489A8C LDR W8, [X19 + 0x18]
	0x03489A90 CMP W8, 0x1
	0x03489A94 B.LT 0x348933C
	0x03489A98 ADRP X27, 0xC92000
	0x03489A9C LDR X27, [X27 + 0xB58]
	0x03489AA0 MOV W20, W31
	0x03489AA4 LDR X2, [X27]
	0x03489AA8 MOV X0, X19
	0x03489AAC MOV W1, W20
	0x03489AB0 BL 0x301BCCC
	0x03489AB4 CBZ X0, 0x3489BA8
	0x03489AB8 LDR W8, [X0 + 0x10]
	0x03489ABC CMP W8, 0x3
	0x03489AC0 B.LT 0x3489B94
	0x03489AC4 LDR X2, [X27]
	0x03489AC8 MOV X0, X19
	0x03489ACC MOV W1, W20
	0x03489AD0 BL 0x301BCCC
	0x03489AD4 LDR X2, [X27]
	0x03489AD8 MOV X23, X0
	0x03489ADC MOV X0, X19
	0x03489AE0 MOV W1, W20
	0x03489AE4 BL 0x301BCCC
	0x03489AE8 CBZ X0, 0x3489BA8
	0x03489AEC CBZ X23, 0x3489BA8
	0x03489AF0 LDR W8, [X0 + 0x10]
	0x03489AF4 MOVZ W1, 0x1
	0x03489AF8 MOV X0, X23
	0x03489AFC MOV X3, X31
	0x03489B00 SUB W2, W8, 0x2
	0x03489B04 BL 0x3228DE4
	0x03489B08 LDR X2, [X27]
	0x03489B0C MOV X23, X0
	0x03489B10 ORR W1, W20, 0x1
	0x03489B14 MOV X0, X19
	0x03489B18 BL 0x301BCCC
	0x03489B1C MOV X1, X0
	0x03489B20 MOV X0, X22
	0x03489B24 BL 0x3488D2C
	0x03489B28 CBZ X21, 0x3489BA8
	0x03489B2C LDR X8, [X21]
	0x03489B30 LDR X1, [X26]
	0x03489B34 MOV X24, X0
	0x03489B38 LDRH W9, [X8 + 0x12E]
	0x03489B3C CBZ X9, 0x3489B60
	0x03489B40 LDR X10, [X8 + 0xB0]
	0x03489B44 ADD X10, X10, 0x8
	0x03489B48 LDUR X11, [X10 - 0x8]
	0x03489B4C CMP X11, X1
	0x03489B50 B.EQ 0x3489B70
	0x03489B54 SUBS X9, X9, 0x1
	0x03489B58 ADD X10, X10, 0x10
	0x03489B5C B.NE 0x3489B48
	0x03489B60 MOVZ W2, 0x5
	0x03489B64 MOV X0, X21
	0x03489B68 BL 0x1C5C788
	0x03489B6C B 0x3489B80
	0x03489B70 LDR W9, [X10]
	0x03489B74 ADD W9, W9, 0x5
	0x03489B78 ADD X8, X8, W9, 0x4, SXTW
	0x03489B7C ADD X0, X8, 0x138
	0x03489B80 LDP X8, X3, [X0]
	0x03489B84 MOV X0, X21
	0x03489B88 MOV X1, X23
	0x03489B8C MOV X2, X24
	0x03489B90 BLR X8
	0x03489B94 LDR W8, [X19 + 0x18]
	0x03489B98 ADD W20, W20, 0x2
	0x03489B9C CMP W20, W8
	0x03489BA0 B.LT 0x3489AA4
	0x03489BA4 B 0x348933C
	0x03489BA8 BL 0x1C16F20
	0x03489BAC BL 0x1C16F28
	0x03489BB0 BL 0x1C16F20
	0x03489BB4 BL 0x1C16F44
	0x03489BB8 MOV X1, X31
	0x03489BBC BL 0x1C16DEC
	0x03489BC0 BL 0x3EB1B20
	0x03489BC4 B 0x3489BD4
	0x03489BC8 B 0x3489C4C
	0x03489BCC B 0x3489C4C
	0x03489BD0 B 0x3489C4C
	0x03489BD4 MOV X20, X0
	0x03489BD8 CMP W1, 0x1
	0x03489BDC B.NE 0x3489CAC
	0x03489BE0 MOV X0, X20
	0x03489BE4 BL 0x3EB1AD0
	0x03489BE8 MOV X19, X0
	0x03489BEC ADRP X0, 0xC70000
	0x03489BF0 LDR X0, [X0 + 0xCC0]
	0x03489BF4 BL 0x1C16D08
	0x03489BF8 LDR X8, [X19]
	0x03489BFC LDR X1, [X8]
	0x03489C00 BL 0x1C17270
	0x03489C04 TBZ X0, 0x0, 0x3489C20
	0x03489C08 BL 0x3EB1AE0
	0x03489C0C STR W31, [X31 + 0x30]
	0x03489C10 ADRP X0, 0xC6A000
	0x03489C14 LDR X0, [X0 + 0x758]
	0x03489C18 BL 0x1C16D08
	0x03489C1C B 0x348926C
	0x03489C20 MOVZ W0, 0x8
	0x03489C24 BL 0x3EB1AF0
	0x03489C28 LDR X8, [X19]
	0x03489C2C STR X8, [X0]
	0x03489C30 ADRP X1, 0xA2B000
	0x03489C34 ADD X1, X1, 0xE58
	0x03489C38 MOV X2, X31
	0x03489C3C BL 0x3EB1B00
	0x03489C40 MOV X20, X0
	0x03489C44 BL 0x3EB1AE0
	0x03489C48 B 0x3489CAC
	0x03489C4C MOV X20, X0
	0x03489C50 CMP W1, 0x1
	0x03489C54 B.NE 0x3489C88
	0x03489C58 MOV X0, X20
	0x03489C5C BL 0x3EB1AD0
	0x03489C60 LDR X22, [X0]
	0x03489C64 BL 0x3EB1AE0
	0x03489C68 ADRP X8, 0xC91000
	0x03489C6C LDR X8, [X8 + 0xFC8]
	0x03489C70 ADD X0, X31, 0x10
	0x03489C74 LDR X1, [X8]
	0x03489C78 BL 0x2BC434C
	0x03489C7C CBZ X22, 0x3489A50
	0x03489C80 MOV X0, X22
	0x03489C84 BL 0x1C16F18
	0x03489C88 MOV X22, X31
	0x03489C8C B 0x3489C94
	0x03489C90 MOV X20, X0
	0x03489C94 ADRP X8, 0xC91000
	0x03489C98 LDR X8, [X8 + 0xFC8]
	0x03489C9C LDR X1, [X8]
	0x03489CA0 ADD X0, X31, 0x10
	0x03489CA4 BL 0x2BC434C
	0x03489CA8 CBNZ X22, 0x3489CB4
	0x03489CAC MOV X0, X20
	0x03489CB0 BL 0x1D2C690
	0x03489CB4 MOV X0, X22
	0x03489CB8 BL 0x1C16F18
	0x03489CBC BL 0x1990590
	0x03489CC0 SUB X31, X31, 0x70
	0x03489CC4 STR X30, [X31 + 0x30]
	0x03489CC8 STP X24, X23, [X31 + 0x40]
	0x03489CCC STP X22, X21, [X31 + 0x50]
	0x03489CD0 STP X20, X19, [X31 + 0x60]
	0x03489CD4 ADRP X20, 0xF54000
	0x03489CD8 LDRB W8, [X20 + 0x908]
	0x03489CDC MOV X19, X0
	0x03489CE0 TBNZ X8, 0x0, 0x3489DF4
	0x03489CE4 ADRP X0, 0xC6A000
	0x03489CE8 LDR X0, [X0 + 0xB58]
	0x03489CEC BL 0x1C16CF4
	0x03489CF0 ADRP X0, 0xC6C000
	0x03489CF4 LDR X0, [X0 + 0x170]
	0x03489CF8 BL 0x1C16CF4
	0x03489CFC ADRP X0, 0xC6C000
	0x03489D00 LDR X0, [X0 + 0xC48]
	0x03489D04 BL 0x1C16CF4
	0x03489D08 ADRP X0, 0xC6A000
	0x03489D0C LDR X0, [X0 + 0x710]
	0x03489D10 BL 0x1C16CF4
	0x03489D14 ADRP X0, 0xCA8000
	0x03489D18 LDR X0, [X0 + 0x238]
	0x03489D1C BL 0x1C16CF4
	0x03489D20 ADRP X0, 0xC6A000
	0x03489D24 LDR X0, [X0 + 0x720]
	0x03489D28 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xF55000
	010 Move X23, 0xC93000
	011 Move W8, [X20+2310]
	012 Move X23, [X23+4088]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xC93000
	019 Move X0, [X0+4088]
	020 Call 0x1C17CF4
	021 Move X0, 0xC6C000
	022 Move X0, [X0+440]
	023 Call 0x1C17CF4
	024 Move X0, 0xC93000
	025 Move X0, [X0+2936]
	026 Call 0x1C17CF4
	027 Move X0, 0xC6C000
	028 Move X0, [X0+448]
	029 Call 0x1C17CF4
	030 Move X0, 0xC6C000
	031 Move X0, [X0+464]
	032 Call 0x1C17CF4
	033 Move X0, 0xCA9000
	034 Move X0, [X0+520]
	035 Call 0x1C17CF4
	036 Move X0, 0xCA9000
	037 Move X0, [X0+528]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2310], W8
	041 Move X0, [X23]
	042 Call 0x1C17D0C
	043 Move X8, [X0]
	044 Compare X8, 0
	045 JumpIfEqual {249}
	046 Move W8, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X23]
	049 Call 0x1C17D0C
	050 Move X0, [X0]
	051 Compare X0, 0
	052 JumpIfEqual {249}
	053 Move X8, 0xCA9000
	054 Move X8, [X8+520]
	055 Move X1, [X8]
	056 Call Stack`1<Object>.Pop, X0
	057 Move X20, X0
	058 Compare X20, 0
	059 JumpIfNotEqual {71}
	060 Move X8, 0xC6C000
	061 Move X8, [X8+464]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X8, 0xC6C000
	065 Move X8, [X8+448]
	066 Move X20, X0
	067 Move X1, [X8]
	068 Call List`1<Object>..ctor, X0
	069 Compare X20, 0
	070 JumpIfEqual {249}
	071 Move W2, [X20+24]
	072 Move W8, [X20+28]
	073 Add W8, W8, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X20+24], W31
	076 Move [X20+28], W8
	077 Move X0, [X20+16]
	078 Move W1, W31
	079 Move X3, X31
	080 Call Array.Clear, X0, X1, X2
	081 Compare X19, 0
	082 JumpIfEqual {249}
	083 Move W8, [X19+16]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X23]
	086 Call 0x1C17D0C
	087 Move X0, [X0+8]
	088 Compare X0, 0
	089 JumpIfEqual {249}
	090 Move W1, W31
	091 Move X2, X31
	092 Call StringBuilder.set_Length, X0, X1
	093 Move W8, [X19+16]
	094 Subtract W8, W8, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X24, 0xC6C000
	097 Move X24, [X24+440]
	098 Move W25, W31
	099 Move W21, 1
	100 Move X0, X19
	101 Move W1, W21
	102 Move X2, X31
	103 Call String.get_Chars, X0, X1
	104 And W8, W0, 0xFFFF
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X19
	107 Move W1, W21
	108 Move X2, X31
	109 Call String.get_Chars, X0, X1
	110 And W8, W0, 0xFFFF
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add W25, W25, 1
	113 Move X0, X19
	114 Move W1, W21
	115 Move X2, X31
	116 Call String.get_Chars, X0, X1
	117 And W8, W0, 0xFFFF
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X19
	120 Move W1, W21
	121 Move X2, X31
	122 Call String.get_Chars, X0, X1
	123 And W8, W0, 0xFFFF
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract W25, W25, 1
	126 Move X0, [X23]
	127 Call 0x1C17D0C
	128 Move X22, [X0+8]
	129 Move X0, X19
	130 Move W1, W21
	131 Move X2, X31
	132 Call String.get_Chars, X0, X1
	133 Compare X22, 0
	134 JumpIfEqual {249}
	135 Move W1, W0
	136 Move X0, X22
	137 Move X2, X31
	138 Call StringBuilder.Append, X0, X1
	139 Move W8, [X19+16]
	140 Add W21, W21, 1
	141 Subtract W8, W8, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, X19
	144 Move W1, W21
	145 Move X2, X31
	146 Call String.get_Chars, X0, X1
	147 And W8, W0, 0xFFFF
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W0, 1
	150 Move W1, W21
	151 Move X2, X19
	152 Call JsonParser.AppendUntilStringEnd, X0, X1, X2
	153 Move W21, W0
	154 Move X0, X19
	155 Move W1, W21
	156 Move X2, X31
	157 Call String.get_Chars, X0, X1
	158 And W8, W0, 0xFFFF
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Compare W25, 0
	161 JumpIfNotEqual {126}
	162 Move X0, X19
	163 Move W1, W21
	164 Move X2, X31
	165 Call String.get_Chars, X0, X1
	166 Compare W25, 0
	167 JumpIfNotEqual {126}
	168 And W8, W0, 0xFFFF
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, [X23]
	171 Call 0x1C17D0C
	172 Move X0, [X0+8]
	173 Compare X0, 0
	174 JumpIfEqual {249}
	175 Move X8, [X0]
	176 Move X9, [X8+360]
	177 Move X1, [X8+368]
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move W10, [X20+28]
	180 Move X8, [X20+16]
	181 Move X9, [X24]
	182 Add W10, W10, 1
	183 Move [X20+28], W10
	184 Compare X8, 0
	185 JumpIfEqual {249}
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Move W11, [X8+24]
	188 Move X1, X0
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Add W9, W10, 1
	191 Add X8, X8, X10
	192 Move [X20+24], W9
	193 Move [X8+32], X1
	194 Move X8, [X9+32]
	195 Move X0, X20
	196 Move X8, [X8+192]
	197 Move X2, [X8+112]
	198 Call List`1<Object>.AddWithResize, X0, X1
	199 Move X0, [X23]
	200 Call 0x1C17D0C
	201 Move X0, [X0+8]
	202 Compare X0, 0
	203 JumpIfEqual {249}
	204 Move W1, W31
	205 Move X2, X31
	206 Call StringBuilder.set_Length, X0, X1
	207 Move W25, W31
	208 Move X0, [X23]
	209 Call 0x1C17D0C
	210 Move X0, [X0+8]
	211 Compare X0, 0
	212 JumpIfEqual {249}
	213 Move X8, [X0]
	214 Move X9, [X8+360]
	215 Move X1, [X8+368]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X9, 0xC6C000
	218 Move X9, [X9+440]
	219 Move W10, [X20+28]
	220 Move X8, [X20+16]
	221 Move X9, [X9]
	222 Add W10, W10, 1
	223 Move [X20+28], W10
	224 Compare X8, 0
	225 JumpIfEqual {249}
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Move W11, [X8+24]
	228 Move X1, X0
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add W9, W10, 1
	231 Add X8, X8, X10
	232 Move [X20+24], W9
	233 Move [X8+32], X1
	234 Move X8, [X9+32]
	235 Move X0, X20
	236 Move X8, [X8+192]
	237 Move X2, [X8+112]
	238 Call List`1<Object>.AddWithResize, X0, X1
	239 Move X0, X20
	240 Move X20, [X31+48]
	241 Move X19, [X31+56]
	242 Move X22, [X31+32]
	243 Move X21, [X31+40]
	244 Move X24, [X31+16]
	245 Move X23, [X31+24]
	246 Move X30, [X31+64]
	247 Move X25, [X31+72]
	248 Return X0
	249 Call 0x1C17F20

Method: System.Object ParseValue(System.Type type, System.String json)

Disassembly:
	0x03489D2C ADRP X0, 0xC6D000
	0x03489D30 LDR X0, [X0 + 0x978]
	0x03489D34 BL 0x1C16CF4
	0x03489D38 ADRP X0, 0xC91000
	0x03489D3C LDR X0, [X0 + 0xFC8]
	0x03489D40 BL 0x1C16CF4
	0x03489D44 ADRP X0, 0xC91000
	0x03489D48 LDR X0, [X0 + 0xFD0]
	0x03489D4C BL 0x1C16CF4
	0x03489D50 ADRP X0, 0xC91000
	0x03489D54 LDR X0, [X0 + 0xFD8]
	0x03489D58 BL 0x1C16CF4
	0x03489D5C ADRP X0, 0xC6A000
	0x03489D60 LDR X0, [X0 + 0x758]
	0x03489D64 BL 0x1C16CF4
	0x03489D68 ADRP X0, 0xC72000
	0x03489D6C LDR X0, [X0 + 0xF18]
	0x03489D70 BL 0x1C16CF4
	0x03489D74 ADRP X0, 0xC91000
	0x03489D78 LDR X0, [X0 + 0xFE0]
	0x03489D7C BL 0x1C16CF4
	0x03489D80 ADRP X0, 0xCA3000
	0x03489D84 LDR X0, [X0 + 0x908]
	0x03489D88 BL 0x1C16CF4
	0x03489D8C ADRP X0, 0xC6B000
	0x03489D90 LDR X0, [X0 + 0x1C8]
	0x03489D94 BL 0x1C16CF4
	0x03489D98 ADRP X0, 0xC92000
	0x03489D9C LDR X0, [X0 + 0xB58]
	0x03489DA0 BL 0x1C16CF4
	0x03489DA4 ADRP X0, 0xC6F000
	0x03489DA8 LDR X0, [X0 + 0x740]
	0x03489DAC BL 0x1C16CF4
	0x03489DB0 ADRP X0, 0xC6C000
	0x03489DB4 LDR X0, [X0 + 0x278]
	0x03489DB8 BL 0x1C16CF4
	0x03489DBC ADRP X0, 0xC9E000
	0x03489DC0 LDR X0, [X0 + 0x7F8]
	0x03489DC4 BL 0x1C16CF4
	0x03489DC8 ADRP X0, 0xC74000
	0x03489DCC LDR X0, [X0 + 0xFF8]
	0x03489DD0 BL 0x1C16CF4
	0x03489DD4 ADRP X0, 0xC75000
	0x03489DD8 LDR X0, [X0]
	0x03489DDC BL 0x1C16CF4
	0x03489DE0 ADRP X0, 0xC73000
	0x03489DE4 LDR X0, [X0 + 0x790]
	0x03489DE8 BL 0x1C16CF4
	0x03489DEC MOVZ W8, 0x1
	0x03489DF0 STRB W8, [X20 + 0x908]
	0x03489DF4 STP X31, X31, [X31 + 0x18]
	0x03489DF8 STR X31, [X31 + 0x28]
	0x03489DFC STR X31, [X31 + 0x38]
	0x03489E00 STR W31, [X31 + 0x14]
	0x03489E04 CBZ X19, 0x348A270
	0x03489E08 LDR W8, [X19 + 0x10]
	0x03489E0C CBZ W8, 0x348A054
	0x03489E10 MOV X0, X19
	0x03489E14 MOV W1, W31
	0x03489E18 MOV X2, X31
	0x03489E1C BL 0x3222A1C
	0x03489E20 AND W8, W0, 0xFFFF
	0x03489E24 CMP W8, 0x7B
	0x03489E28 B.NE 0x3489F40
	0x03489E2C LDR W8, [X19 + 0x10]
	0x03489E30 MOV X0, X19
	0x03489E34 MOV X2, X31
	0x03489E38 SUB W1, W8, 0x1
	0x03489E3C BL 0x3222A1C
	0x03489E40 AND W8, W0, 0xFFFF
	0x03489E44 CMP W8, 0x7D
	0x03489E48 B.NE 0x3489F40
	0x03489E4C MOV X0, X19
	0x03489E50 BL 0x3488964
	0x03489E54 CBZ X0, 0x348A270
	0x03489E58 LDR W21, [X0 + 0x18]
	0x03489E5C MOV X20, X0
	0x03489E60 TBNZ X21, 0x0, 0x348A054
	0x03489E64 ADRP X8, 0xC6A000
	0x03489E68 LDR X8, [X8 + 0x720]
	0x03489E6C LDR X0, [X8]
	0x03489E70 BL 0x1C16F10
	0x03489E74 ADRP X8, 0xCA8000
	0x03489E78 LDR X8, [X8 + 0x238]
	0x03489E7C CMP W21, 0x0
	0x03489E80 MOV X19, X0
	0x03489E84 LDR X2, [X8]
	0x03489E88 CINC W8, W21, LT
	0x03489E8C SBFM W1, W8, 0x1, 0x1F
	0x03489E90 BL 0x2AA481C
	0x03489E94 LDR W8, [X20 + 0x18]
	0x03489E98 CMP W8, 0x1
	0x03489E9C B.LT 0x348A224
	0x03489EA0 ADRP X23, 0xC92000
	0x03489EA4 ADRP X24, 0xC6A000
	0x03489EA8 LDR X23, [X23 + 0xB58]
	0x03489EAC LDR X24, [X24 + 0x710]
	0x03489EB0 MOV W21, W31
	0x03489EB4 LDR X2, [X23]
	0x03489EB8 MOV X0, X20
	0x03489EBC MOV W1, W21
	0x03489EC0 BL 0x301BCCC
	0x03489EC4 LDR X2, [X23]
	0x03489EC8 MOV X22, X0
	0x03489ECC MOV X0, X20
	0x03489ED0 MOV W1, W21
	0x03489ED4 BL 0x301BCCC
	0x03489ED8 CBZ X0, 0x348A270
	0x03489EDC CBZ X22, 0x348A270
	0x03489EE0 LDR W8, [X0 + 0x10]
	0x03489EE4 MOVZ W1, 0x1
	0x03489EE8 MOV X0, X22
	0x03489EEC MOV X3, X31
	0x03489EF0 SUB W2, W8, 0x2
	0x03489EF4 BL 0x3228DE4
	0x03489EF8 LDR X2, [X23]
	0x03489EFC ADD W21, W21, 0x1
	0x03489F00 MOV X22, X0
	0x03489F04 MOV X0, X20
	0x03489F08 MOV W1, W21
	0x03489F0C BL 0x301BCCC
	0x03489F10 BL 0x3489CC0
	0x03489F14 CBZ X19, 0x348A270
	0x03489F18 LDR X3, [X24]
	0x03489F1C MOV X2, X0
	0x03489F20 MOV X0, X19
	0x03489F24 MOV X1, X22
	0x03489F28 BL 0x2AA5098
	0x03489F2C LDR W8, [X20 + 0x18]
	0x03489F30 ADD W21, W21, 0x1
	0x03489F34 CMP W21, W8
	0x03489F38 B.LT 0x3489EB4
	0x03489F3C B 0x348A224
	0x03489F40 MOV X0, X19
	0x03489F44 MOV W1, W31
	0x03489F48 MOV X2, X31
	0x03489F4C BL 0x3222A1C
	0x03489F50 AND W8, W0, 0xFFFF
	0x03489F54 CMP W8, 0x5B
	0x03489F58 B.NE 0x348A05C
	0x03489F5C LDR W8, [X19 + 0x10]
	0x03489F60 MOV X0, X19
	0x03489F64 MOV X2, X31
	0x03489F68 SUB W1, W8, 0x1
	0x03489F6C BL 0x3222A1C
	0x03489F70 AND W8, W0, 0xFFFF
	0x03489F74 CMP W8, 0x5D
	0x03489F78 B.NE 0x348A05C
	0x03489F7C MOV X0, X19
	0x03489F80 BL 0x3488964
	0x03489F84 CBZ X0, 0x348A270
	0x03489F88 ADRP X8, 0xC6F000
	0x03489F8C LDR W21, [X0 + 0x18]
	0x03489F90 LDR X8, [X8 + 0x740]
	0x03489F94 MOV X20, X0
	0x03489F98 LDR X0, [X8]
	0x03489F9C BL 0x1C16F10
	0x03489FA0 ADRP X8, 0xCA3000
	0x03489FA4 LDR X8, [X8 + 0x908]
	0x03489FA8 MOV W1, W21
	0x03489FAC MOV X19, X0
	0x03489FB0 LDR X2, [X8]
	0x03489FB4 BL 0x301B830
	0x03489FB8 ADRP X8, 0xC91000
	0x03489FBC LDR X8, [X8 + 0xFE0]
	0x03489FC0 MOV X0, X20
	0x03489FC4 LDR X1, [X8]
	0x03489FC8 ADD X8, X31, 0x18
	0x03489FCC BL 0x301CB58
	0x03489FD0 ADRP X20, 0xC91000
	0x03489FD4 ADRP X21, 0xC72000
	0x03489FD8 LDR X20, [X20 + 0xFD0]
	0x03489FDC LDR X21, [X21 + 0xF18]
	0x03489FE0 LDR X1, [X20]
	0x03489FE4 ADD X0, X31, 0x18
	0x03489FE8 BL 0x2BC4350
	0x03489FEC TBZ X0, 0x0, 0x348A1A8
	0x03489FF0 LDR X0, [X31 + 0x28]
	0x03489FF4 BL 0x3489CC0
	0x03489FF8 MOV X1, X0
	0x03489FFC CBZ X19, 0x348A274
	0x0348A000 LDR W10, [X19 + 0x1C]
	0x0348A004 LDR X8, [X19 + 0x10]
	0x0348A008 LDR X9, [X21]
	0x0348A00C ADD W10, W10, 0x1
	0x0348A010 STR W10, [X19 + 0x1C]
	0x0348A014 CBZ X8, 0x348A278
	0x0348A018 LDRSW X10, [X19 + 0x18]
	0x0348A01C LDR W11, [X8 + 0x18]
	0x0348A020 CMP W10, W11
	0x0348A024 B.CS 0x348A03C
	0x0348A028 ADD W9, W10, 0x1
	0x0348A02C ADD X8, X8, X10, 0x3, LSL
	0x0348A030 STR W9, [X19 + 0x18]
	0x0348A034 STR X1, [X8 + 0x20]
	0x0348A038 B 0x3489FE0
	0x0348A03C LDR X8, [X9 + 0x20]
	0x0348A040 LDR X8, [X8 + 0xC0]
	0x0348A044 LDR X2, [X8 + 0x70]
	0x0348A048 MOV X0, X19
	0x0348A04C BL 0x301BF90
	0x0348A050 B 0x3489FE0
	0x0348A054 MOV X19, X31
	0x0348A058 B 0x348A224
	0x0348A05C MOV X0, X19
	0x0348A060 MOV W1, W31
	0x0348A064 MOV X2, X31
	0x0348A068 BL 0x3222A1C
	0x0348A06C AND W8, W0, 0xFFFF
	0x0348A070 CMP W8, 0x22
	0x0348A074 B.NE 0x348A0E0
	0x0348A078 LDR W8, [X19 + 0x10]
	0x0348A07C MOV X0, X19
	0x0348A080 MOV X2, X31
	0x0348A084 SUB W1, W8, 0x1
	0x0348A088 BL 0x3222A1C
	0x0348A08C AND W8, W0, 0xFFFF
	0x0348A090 CMP W8, 0x22
	0x0348A094 B.NE 0x348A0E0
	0x0348A098 LDR W8, [X19 + 0x10]
	0x0348A09C MOVZ W1, 0x1
	0x0348A0A0 MOV X0, X19
	0x0348A0A4 MOV X3, X31
	0x0348A0A8 SUB W2, W8, 0x2
	0x0348A0AC BL 0x3228DE4
	0x0348A0B0 CBZ X0, 0x348A270
	0x0348A0B4 ADRP X8, 0xC6B000
	0x0348A0B8 LDR X8, [X8 + 0x278]
	0x0348A0BC ADRP X9, 0xC9D000
	0x0348A0C0 MOV X3, X31
	0x0348A0C4 LDR X8, [X8]
	0x0348A0C8 LDR X8, [X8 + 0xB8]
	0x0348A0CC LDR X9, [X9 + 0x7F8]
	0x0348A0D0 LDR X2, [X8]
	0x0348A0D4 LDR X1, [X9]
	0x0348A0D8 BL 0x32293BC
	0x0348A0DC B 0x348A220
	0x0348A0E0 MOV X0, X19
	0x0348A0E4 MOV W1, W31
	0x0348A0E8 MOV X2, X31
	0x0348A0EC BL 0x3222A1C
	0x0348A0F0 ADRP X8, 0xC6B000
	0x0348A0F4 LDR X8, [X8 + 0x170]
	0x0348A0F8 MOV W20, W0
	0x0348A0FC LDR X8, [X8]
	0x0348A100 LDR W9, [X8 + 0xE0]
	0x0348A104 CBNZ W9, 0x348A110
	0x0348A108 MOV X0, X8
	0x0348A10C BL 0x1C16DFC
	0x0348A110 MOV W0, W20
	0x0348A114 MOV X1, X31
	0x0348A118 BL 0x33141B4
	0x0348A11C TBNZ X0, 0x0, 0x348A13C
	0x0348A120 MOV X0, X19
	0x0348A124 MOV W1, W31
	0x0348A128 MOV X2, X31
	0x0348A12C BL 0x3222A1C
	0x0348A130 AND W8, W0, 0xFFFF
	0x0348A134 CMP W8, 0x2D
	0x0348A138 B.NE 0x348A1E8
	0x0348A13C ADRP X8, 0xC72000
	0x0348A140 LDR X8, [X8 + 0x790]
	0x0348A144 MOV X0, X19
	0x0348A148 MOV X2, X31
	0x0348A14C LDR X1, [X8]
	0x0348A150 BL 0x322BD1C
	0x0348A154 TBZ X0, 0x0, 0x348A1C0
	0x0348A158 ADRP X8, 0xC6B000
	0x0348A15C LDR X8, [X8 + 0xC48]
	0x0348A160 LDR X0, [X8]
	0x0348A164 LDR W8, [X0 + 0xE0]
	0x0348A168 CBNZ W8, 0x348A170
	0x0348A16C BL 0x1C16DFC
	0x0348A170 MOV X0, X31
	0x0348A174 BL 0x3338524
	0x0348A178 MOV X2, X0
	0x0348A17C ADD X3, X31, 0x38
	0x0348A180 MOVZ W1, 0xA7
	0x0348A184 MOV X0, X19
	0x0348A188 MOV X4, X31
	0x0348A18C BL 0x3366A70
	0x0348A190 ADRP X8, 0xC6C000
	0x0348A194 LDR V0, [X31 + 0x38]
	0x0348A198 LDR X8, [X8 + 0x978]
	0x0348A19C STR D0, [X31 + 0x8]
	0x0348A1A0 LDR X0, [X8]
	0x0348A1A4 B 0x348A218
	0x0348A1A8 ADRP X8, 0xC90000
	0x0348A1AC LDR X8, [X8 + 0xFC8]
	0x0348A1B0 ADD X0, X31, 0x18
	0x0348A1B4 LDR X1, [X8]
	0x0348A1B8 BL 0x2BC434C
	0x0348A1BC B 0x348A224
	0x0348A1C0 ADD X1, X31, 0x14
	0x0348A1C4 MOV X0, X19
	0x0348A1C8 MOV X2, X31
	0x0348A1CC BL 0x337BDF4
	0x0348A1D0 ADRP X9, 0xC69000
	0x0348A1D4 LDR W8, [X31 + 0x14]
	0x0348A1D8 LDR X9, [X9 + 0x758]
	0x0348A1DC STR W8, [X31 + 0x8]
	0x0348A1E0 LDR X0, [X9]
	0x0348A1E4 B 0x348A218
	0x0348A1E8 ADRP X8, 0xC74000
	0x0348A1EC LDR X8, [X8]
	0x0348A1F0 MOV X0, X19
	0x0348A1F4 MOV X2, X31
	0x0348A1F8 LDR X1, [X8]
	0x0348A1FC BL 0x321BA08
	0x0348A200 TBZ X0, 0x0, 0x348A240
	0x0348A204 ADRP X8, 0xC69000
	0x0348A208 LDR X8, [X8 + 0xB58]
	0x0348A20C LDR X0, [X8]
	0x0348A210 MOVZ W8, 0x1
	0x0348A214 STRB W8, [X31 + 0x8]
	0x0348A218 ADD X1, X31, 0x8
	0x0348A21C BL 0x1C16E04
	0x0348A220 MOV X19, X0
	0x0348A224 MOV X0, X19
	0x0348A228 LDP X20, X19, [X31 + 0x60]
	0x0348A22C LDP X22, X21, [X31 + 0x50]
	0x0348A230 LDP X24, X23, [X31 + 0x40]
	0x0348A234 LDR X30, [X31 + 0x30]
	0x0348A238 ADD X31, X31, 0x70
	0x0348A23C RET
	0x0348A240 ADRP X8, 0xC73000
	0x0348A244 LDR X8, [X8 + 0xFF8]
	0x0348A248 MOV X0, X19
	0x0348A24C MOV X2, X31
	0x0348A250 LDR X1, [X8]
	0x0348A254 BL 0x321BA08
	0x0348A258 MOV X19, X31
	0x0348A25C TBZ X0, 0x0, 0x348A224
	0x0348A260 ADRP X8, 0xC69000
	0x0348A264 LDR X8, [X8 + 0xB58]
	0x0348A268 STRB W31, [X31 + 0x8]
	0x0348A26C B 0x348A1A0
	0x0348A270 BL 0x1C16F20
	0x0348A274 BL 0x1C16F20
	0x0348A278 BL 0x1C16F20
	0x0348A27C B 0x348A284
	0x0348A280 B 0x348A284
	0x0348A284 MOV X20, X0
	0x0348A288 CMP W1, 0x1
	0x0348A28C B.NE 0x348A2C0
	0x0348A290 MOV X0, X20
	0x0348A294 BL 0x3EB1AD0
	0x0348A298 LDR X21, [X0]
	0x0348A29C BL 0x3EB1AE0
	0x0348A2A0 ADRP X8, 0xC90000
	0x0348A2A4 LDR X8, [X8 + 0xFC8]
	0x0348A2A8 ADD X0, X31, 0x18
	0x0348A2AC LDR X1, [X8]
	0x0348A2B0 BL 0x2BC434C
	0x0348A2B4 CBZ X21, 0x348A224
	0x0348A2B8 MOV X0, X21
	0x0348A2BC BL 0x1C16F18
	0x0348A2C0 MOV X21, X31
	0x0348A2C4 B 0x348A2CC
	0x0348A2C8 MOV X20, X0
	0x0348A2CC ADRP X8, 0xC90000
	0x0348A2D0 LDR X8, [X8 + 0xFC8]
	0x0348A2D4 LDR X1, [X8]
	0x0348A2D8 ADD X0, X31, 0x18
	0x0348A2DC BL 0x2BC434C
	0x0348A2E0 CBNZ X21, 0x348A2EC
	0x0348A2E4 MOV X0, X20
	0x0348A2E8 BL 0x1D2C690
	0x0348A2EC MOV X0, X21
	0x0348A2F0 BL 0x1C16F18
	0x0348A2F4 BL 0x1990590
	0x0348A2F8 SUB X31, X31, 0x70
	0x0348A2FC STR X30, [X31 + 0x20]
	0x0348A300 STP X26, X25, [X31 + 0x30]
	0x0348A304 STP X24, X23, [X31 + 0x40]
	0x0348A308 STP X22, X21, [X31 + 0x50]
	0x0348A30C STP X20, X19, [X31 + 0x60]
	0x0348A310 ADRP X22, 0xF53000
	0x0348A314 ADRP X19, 0xC9A000
	0x0348A318 LDRB W8, [X22 + 0x909]
	0x0348A31C LDR X19, [X19 + 0xB70]
	0x0348A320 MOV X20, X1
	0x0348A324 MOV X21, X0
	0x0348A328 TBNZ X8, 0x0, 0x348A3C4
	0x0348A32C ADRP X0, 0xCA7000
	0x0348A330 LDR X0, [X0 + 0x240]
	0x0348A334 BL 0x1C16CF4
	0x0348A338 ADRP X0, 0xCA7000
	0x0348A33C LDR X0, [X0 + 0x248]
	0x0348A340 BL 0x1C16CF4
	0x0348A344 ADRP X0, 0xCA7000
	0x0348A348 LDR X0, [X0 + 0x250]
	0x0348A34C BL 0x1C16CF4
	0x0348A350 ADRP X0, 0xCA7000
	0x0348A354 LDR X0, [X0 + 0x258]
	0x0348A358 BL 0x1C16CF4
	0x0348A35C ADRP X0, 0xCA7000
	0x0348A360 LDR X0, [X0 + 0x260]
	0x0348A364 BL 0x1C16CF4
	0x0348A368 ADRP X0, 0xCA7000
	0x0348A36C LDR X0, [X0 + 0x268]
	0x0348A370 BL 0x1C16CF4
	0x0348A374 ADRP X0, 0xC9A000
	0x0348A378 LDR X0, [X0 + 0xB70]
	0x0348A37C BL 0x1C16CF4
	0x0348A380 ADRP X0, 0xCA7000
	0x0348A384 LDR X0, [X0 + 0x270]
	0x0348A388 BL 0x1C16CF4
	0x0348A38C ADRP X0, 0xCA7000
	0x0348A390 LDR X0, [X0 + 0x278]
	0x0348A394 BL 0x1C16CF4
	0x0348A398 ADRP X0, 0xC91000
	0x0348A39C LDR X0, [X0 + 0xFF8]
	0x0348A3A0 BL 0x1C16CF4
	0x0348A3A4 ADRP X0, 0xC6A000
	0x0348A3A8 LDR X0, [X0 + 0x1C8]
	0x0348A3AC BL 0x1C16CF4
	0x0348A3B0 ADRP X0, 0xC91000
	0x0348A3B4 LDR X0, [X0 + 0xB58]
	0x0348A3B8 BL 0x1C16CF4
	0x0348A3BC MOVZ W8, 0x1
	0x0348A3C0 STRB W8, [X22 + 0x909]
	0x0348A3C4 LDR X0, [X19]
	0x0348A3C8 STR X31, [X31 + 0x28]
	0x0348A3CC STP X31, X31, [X31 + 0x10]
	0x0348A3D0 STR X31, [X31 + 0x8]
	0x0348A3D4 LDR W8, [X0 + 0xE0]
	0x0348A3D8 CBNZ W8, 0x348A3E0
	0x0348A3DC BL 0x1C16DFC
	0x0348A3E0 MOV X0, X21
	0x0348A3E4 MOV X1, X31
	0x0348A3E8 BL 0x32A1868
	0x0348A3EC MOV X19, X0
	0x0348A3F0 MOV X0, X20
	0x0348A3F4 BL 0x3488964
	0x0348A3F8 CBZ X0, 0x348A6B0
	0x0348A3FC LDRB W8, [X0 + 0x18]
	0x0348A400 MOV X20, X0
	0x0348A404 TBNZ X8, 0x0, 0x348A690
	0x0348A408 ADRP X22, 0xC91000
	0x0348A40C LDR X22, [X22 + 0xFF8]
	0x0348A410 LDR X0, [X22]
	0x0348A414 BL 0x1C16D0C
	0x0348A418 LDR X0, [X0 + 0x10]
	0x0348A41C CBZ X0, 0x348A6B0
	0x0348A420 ADRP X8, 0xCA7000
	0x0348A424 LDR X8, [X8 + 0x258]
	0x0348A428 ADD X2, X31, 0x28
	0x0348A42C MOV X1, X21
	0x0348A430 LDR X3, [X8]
	0x0348A434 BL 0x2AA6B2C
	0x0348A438 TBNZ X0, 0x0, 0x348A498
	0x0348A43C CBZ X21, 0x348A6B0
	0x0348A440 LDR X8, [X21]
	0x0348A444 MOVZ W1, 0x54
	0x0348A448 MOV X0, X21
	0x0348A44C LDR X9, [X8 + 0x688]
	0x0348A450 LDR X2, [X8 + 0x690]
	0x0348A454 BLR X9
	0x0348A458 ADRP X8, 0xCA7000
	0x0348A45C LDR X8, [X8 + 0x270]
	0x0348A460 LDR X1, [X8]
	0x0348A464 BL 0x220D804
	0x0348A468 LDR X8, [X22]
	0x0348A46C STR X0, [X31 + 0x28]
	0x0348A470 MOV X0, X8
	0x0348A474 BL 0x1C16D0C
	0x0348A478 LDR X0, [X0 + 0x10]
	0x0348A47C CBZ X0, 0x348A6B0
	0x0348A480 ADRP X8, 0xCA7000
	0x0348A484 LDR X2, [X31 + 0x28]
	0x0348A488 LDR X8, [X8 + 0x240]
	0x0348A48C MOV X1, X21
	0x0348A490 LDR X3, [X8]
	0x0348A494 BL 0x2AA5098
	0x0348A498 LDR X0, [X22]
	0x0348A49C BL 0x1C16D0C
	0x0348A4A0 LDR X0, [X0 + 0x18]
	0x0348A4A4 CBZ X0, 0x348A6B0
	0x0348A4A8 ADRP X8, 0xCA7000
	0x0348A4AC LDR X8, [X8 + 0x260]
	0x0348A4B0 ADD X2, X31, 0x18
	0x0348A4B4 MOV X1, X21
	0x0348A4B8 LDR X3, [X8]
	0x0348A4BC BL 0x2AA6B2C
	0x0348A4C0 TBNZ X0, 0x0, 0x348A520
	0x0348A4C4 CBZ X21, 0x348A6B0
	0x0348A4C8 LDR X8, [X21]
	0x0348A4CC MOVZ W1, 0x54
	0x0348A4D0 MOV X0, X21
	0x0348A4D4 LDR X9, [X8 + 0x7E8]
	0x0348A4D8 LDR X2, [X8 + 0x7F0]
	0x0348A4DC BLR X9
	0x0348A4E0 ADRP X8, 0xCA7000
	0x0348A4E4 LDR X8, [X8 + 0x278]
	0x0348A4E8 LDR X1, [X8]
	0x0348A4EC BL 0x220D804
	0x0348A4F0 LDR X8, [X22]
	0x0348A4F4 STR X0, [X31 + 0x18]
	0x0348A4F8 MOV X0, X8
	0x0348A4FC BL 0x1C16D0C
	0x0348A500 LDR X0, [X0 + 0x18]
	0x0348A504 CBZ X0, 0x348A6B0
	0x0348A508 ADRP X8, 0xCA7000
	0x0348A50C LDR X2, [X31 + 0x18]
	0x0348A510 LDR X8, [X8 + 0x248]
	0x0348A514 MOV X1, X21
	0x0348A518 LDR X3, [X8]
	0x0348A51C BL 0x2AA5098
	0x0348A520 LDR W8, [X20 + 0x18]
	0x0348A524 CMP W8, 0x1
	0x0348A528 B.LT 0x348A690
	0x0348A52C ADRP X24, 0xC91000
	0x0348A530 ADRP X25, 0xCA7000
	0x0348A534 ADRP X26, 0xCA7000
	0x0348A538 LDR X24, [X24 + 0xB58]
	0x0348A53C LDR X25, [X25 + 0x268]
	0x0348A540 LDR X26, [X26 + 0x250]
	0x0348A544 MOV W21, W31
	0x0348A548 LDR X2, [X24]
	0x0348A54C MOV X0, X20
	0x0348A550 MOV W1, W21
	0x0348A554 BL 0x301BCCC
	0x0348A558 CBZ X0, 0x348A6B0
	0x0348A55C LDR W8, [X0 + 0x10]
	0x0348A560 CMP W8, 0x3
	0x0348A564 B.LT 0x348A680
	0x0348A568 LDR X2, [X24]
	0x0348A56C MOV X0, X20
	0x0348A570 MOV W1, W21
	0x0348A574 BL 0x301BCCC
	0x0348A578 LDR X2, [X24]
	0x0348A57C MOV X22, X0
	0x0348A580 MOV X0, X20
	0x0348A584 MOV W1, W21
	0x0348A588 BL 0x301BCCC
	0x0348A58C CBZ X0, 0x348A6B0
	0x0348A590 CBZ X22, 0x348A6B0
	0x0348A594 LDR W8, [X0 + 0x10]
	0x0348A598 MOVZ W1, 0x1
	0x0348A59C MOV X0, X22
	0x0348A5A0 MOV X3, X31
	0x0348A5A4 SUB W2, W8, 0x2
	0x0348A5A8 BL 0x3228DE4
	0x0348A5AC LDR X2, [X24]
	0x0348A5B0 MOV X23, X0
	0x0348A5B4 ADD W1, W21, 0x1
	0x0348A5B8 MOV X0, X20
	0x0348A5BC BL 0x301BCCC
	0x0348A5C0 LDR X8, [X31 + 0x28]
	0x0348A5C4 CBZ X8, 0x348A6B0
	0x0348A5C8 LDR X3, [X25]
	0x0348A5CC MOV X22, X0
	0x0348A5D0 ADD X2, X31, 0x10
	0x0348A5D4 MOV X0, X8
	0x0348A5D8 MOV X1, X23
	0x0348A5DC BL 0x2AA6B2C
	0x0348A5E0 TBZ X0, 0x0, 0x348A620
	0x0348A5E4 LDR X23, [X31 + 0x10]
	0x0348A5E8 CBZ X23, 0x348A6B0
	0x0348A5EC LDR X8, [X23]
	0x0348A5F0 MOV X0, X23
	0x0348A5F4 LDR X9, [X8 + 0x258]
	0x0348A5F8 LDR X1, [X8 + 0x260]
	0x0348A5FC BLR X9
	0x0348A600 MOV X1, X22
	0x0348A604 BL 0x3488D2C
	0x0348A608 MOV X2, X0
	0x0348A60C MOV X0, X23
	0x0348A610 MOV X1, X19
	0x0348A614 MOV X3, X31
	0x0348A618 BL 0x32CCF10
	0x0348A61C B 0x348A680
	0x0348A620 LDR X0, [X31 + 0x18]
	0x0348A624 CBZ X0, 0x348A6B0
	0x0348A628 LDR X3, [X26]
	0x0348A62C ADD X2, X31, 0x8
	0x0348A630 MOV X1, X23
	0x0348A634 BL 0x2AA6B2C
	0x0348A638 TBZ X0, 0x0, 0x348A680
	0x0348A63C LDR X23, [X31 + 0x8]
	0x0348A640 CBZ X23, 0x348A6B0
	0x0348A644 LDR X8, [X23]
	0x0348A648 MOV X0, X23
	0x0348A64C LDR X9, [X8 + 0x248]
	0x0348A650 LDR X1, [X8 + 0x250]
	0x0348A654 BLR X9
	0x0348A658 MOV X1, X22
	0x0348A65C BL 0x3488D2C
	0x0348A660 LDR X8, [X23]
	0x0348A664 MOV X2, X0
	0x0348A668 MOV X0, X23
	0x0348A66C MOV X1, X19
	0x0348A670 LDR X9, [X8 + 0x2E8]
	0x0348A674 LDR X4, [X8 + 0x2F0]
	0x0348A678 MOV X3, X31
	0x0348A67C BLR X9
	0x0348A680 LDR W8, [X20 + 0x18]
	0x0348A684 ADD W21, W21, 0x2
	0x0348A688 CMP W21, W8
	0x0348A68C B.LT 0x348A548
	0x0348A690 MOV X0, X19
	0x0348A694 LDP X20, X19, [X31 + 0x60]
	0x0348A698 LDP X22, X21, [X31 + 0x50]
	0x0348A69C LDP X24, X23, [X31 + 0x40]
	0x0348A6A0 LDP X26, X25, [X31 + 0x30]
	0x0348A6A4 LDR X30, [X31 + 0x20]
	0x0348A6A8 ADD X31, X31, 0x70
	0x0348A6AC RET
	0x0348A6B0 BL 0x1C16F20
	0x0348A6B4 SUB X31, X31, 0xA0
	0x0348A6B8 STP X29, X30, [X31 + 0x40]
	0x0348A6BC STP X28, X27, [X31 + 0x50]
	0x0348A6C0 STP X26, X25, [X31 + 0x60]
	0x0348A6C4 STP X24, X23, [X31 + 0x70]
	0x0348A6C8 STP X22, X21, [X31 + 0x80]
	0x0348A6CC STP X20, X19, [X31 + 0x90]
	0x0348A6D0 MRS X23, 0xC000
	0x0348A6D4 LDR X8, [X23 + 0x28]
	0x0348A6D8 ADRP X21, 0xF53000
	0x0348A6DC MOV X20, X1
	0x0348A6E0 MOV X19, X0
	0x0348A6E4 STR X8, [X31 + 0x38]
	0x0348A6E8 LDRB W8, [X21 + 0x90B]
	0x0348A6EC TBNZ X8, 0x0, 0x348A8B4
	0x0348A6F0 ADRP X0, 0xC92000
	0x0348A6F4 LDR X0, [X0 + 0x248]
	0x0348A6F8 BL 0x1C16CF4
	0x0348A6FC ADRP X0, 0xC69000
	0x0348A700 LDR X0, [X0 + 0xB58]
	0x0348A704 BL 0x1C16CF4
	0x0348A708 ADRP X0, 0xC90000
	0x0348A70C LDR X0, [X0 + 0xD68]
	0x0348A710 BL 0x1C16CF4
	0x0348A714 ADRP X0, 0xC90000
	0x0348A718 LDR X0, [X0 + 0xD70]
	0x0348A71C BL 0x1C16CF4
	0x0348A720 ADRP X0, 0xC6B000
	0x0348A724 LDR X0, [X0 + 0xC48]
	0x0348A728 BL 0x1C16CF4
	0x0348A72C ADRP X0, 0xC9B000
	0x0348A730 LDR X0, [X0 + 0x140]
	0x0348A734 BL 0x1C16CF4
	0x0348A738 ADRP X0, 0xC91000
	0x0348A73C LDR X0, [X0 + 0x5F0]
	0x0348A740 BL 0x1C16CF4
	0x0348A744 ADRP X0, 0xC92000
	0x0348A748 LDR X0, [X0 + 0x388]
	0x0348A74C BL 0x1C16CF4
	0x0348A750 ADRP X0, 0xC91000
	0x0348A754 LDR X0, [X0 + 0xA78]
	0x0348A758 BL 0x1C16CF4
	0x0348A75C ADRP X0, 0xC6C000
	0x0348A760 LDR X0, [X0 + 0x978]
	0x0348A764 BL 0x1C16CF4
	0x0348A768 ADRP X0, 0xC69000
	0x0348A76C LDR X0, [X0 + 0x818]
	0x0348A770 BL 0x1C16CF4
	0x0348A774 ADRP X0, 0xC69000
	0x0348A778 LDR X0, [X0 + 0xE00]
	0x0348A77C BL 0x1C16CF4
	0x0348A780 ADRP X0, 0xC71000
	0x0348A784 LDR X0, [X0 + 0xDB8]
	0x0348A788 BL 0x1C16CF4
	0x0348A78C ADRP X0, 0xC69000
	0x0348A790 LDR X0, [X0 + 0xE18]
	0x0348A794 BL 0x1C16CF4
	0x0348A798 ADRP X0, 0xC70000
	0x0348A79C LDR X0, [X0 + 0x2F8]
	0x0348A7A0 BL 0x1C16CF4
	0x0348A7A4 ADRP X0, 0xC91000
	0x0348A7A8 LDR X0, [X0 + 0xFD0]
	0x0348A7AC BL 0x1C16CF4
	0x0348A7B0 ADRP X0, 0xC90000
	0x0348A7B4 LDR X0, [X0 + 0xD78]
	0x0348A7B8 BL 0x1C16CF4
	0x0348A7BC ADRP X0, 0xC90000
	0x0348A7C0 LDR X0, [X0 + 0xD80]
	0x0348A7C4 BL 0x1C16CF4
	0x0348A7C8 ADRP X0, 0xC90000
	0x0348A7CC LDR X0, [X0 + 0xD88]
	0x0348A7D0 BL 0x1C16CF4
	0x0348A7D4 ADRP X0, 0xC90000
	0x0348A7D8 LDR X0, [X0 + 0xD90]
	0x0348A7DC BL 0x1C16CF4
	0x0348A7E0 ADRP X0, 0xC91000
	0x0348A7E4 LDR X0, [X0 + 0xA80]
	0x0348A7E8 BL 0x1C16CF4
	0x0348A7EC ADRP X0, 0xC69000
	0x0348A7F0 LDR X0, [X0 + 0xA90]
	0x0348A7F4 BL 0x1C16CF4
	0x0348A7F8 ADRP X0, 0xC91000
	0x0348A7FC LDR X0, [X0 + 0xB60]
	0x0348A800 BL 0x1C16CF4
	0x0348A804 ADRP X0, 0xC6B000
	0x0348A808 LDR X0, [X0 + 0x278]
	0x0348A80C BL 0x1C16CF4
	0x0348A810 ADRP X0, 0xC69000
	0x0348A814 LDR X0, [X0 + 0x6C0]
	0x0348A818 BL 0x1C16CF4
	0x0348A81C ADRP X0, 0xC90000
	0x0348A820 LDR X0, [X0 + 0xD98]
	0x0348A824 BL 0x1C16CF4
	0x0348A828 ADRP X0, 0xC90000
	0x0348A82C LDR X0, [X0 + 0xDA0]
	0x0348A830 BL 0x1C16CF4
	0x0348A834 ADRP X0, 0xC71000
	0x0348A838 LDR X0, [X0 + 0x720]
	0x0348A83C BL 0x1C16CF4
	0x0348A840 ADRP X0, 0xC90000
	0x0348A844 LDR X0, [X0 + 0xDA8]
	0x0348A848 BL 0x1C16CF4
	0x0348A84C ADRP X0, 0xCA7000
	0x0348A850 LDR X0, [X0 + 0x280]
	0x0348A854 BL 0x1C16CF4
	0x0348A858 ADRP X0, 0xCA7000
	0x0348A85C LDR X0, [X0 + 0x288]
	0x0348A860 BL 0x1C16CF4
	0x0348A864 ADRP X0, 0xC69000
	0x0348A868 LDR X0, [X0 + 0x830]
	0x0348A86C BL 0x1C16CF4
	0x0348A870 ADRP X0, 0xCA7000
	0x0348A874 LDR X0, [X0 + 0x290]
	0x0348A878 BL 0x1C16CF4
	0x0348A87C ADRP X0, 0xC73000
	0x0348A880 LDR X0, [X0 + 0xFF8]
	0x0348A884 BL 0x1C16CF4
	0x0348A888 ADRP X0, 0xC90000
	0x0348A88C LDR X0, [X0 + 0x278]
	0x0348A890 BL 0x1C16CF4
	0x0348A894 ADRP X0, 0xCA7000
	0x0348A898 LDR X0, [X0 + 0x298]
	0x0348A89C BL 0x1C16CF4
	0x0348A8A0 ADRP X0, 0xC74000
	0x0348A8A4 LDR X0, [X0]
	0x0348A8A8 BL 0x1C16CF4
	0x0348A8AC MOVZ W8, 0x1
	0x0348A8B0 STRB W8, [X21 + 0x90B]
	0x0348A8B4 STR W31, [X31 + 0x1C]
	0x0348A8B8 STR X31, [X31 + 0x10]
	0x0348A8BC STP X31, X31, [X31 + 0x20]
	0x0348A8C0 CBZ X20, 0x348AA84
	0x0348A8C4 ADRP X24, 0xC91000
	0x0348A8C8 ADRP X25, 0xC69000
	0x0348A8CC LDR X24, [X24 + 0xB60]
	0x0348A8D0 LDR X25, [X25 + 0x6C0]
	0x0348A8D4 MOV X0, X20
	0x0348A8D8 MOV X1, X31
	0x0348A8DC BL 0x33BE520
	0x0348A8E0 LDR X8, [X25]
	0x0348A8E4 LDR X22, [X24]
	0x0348A8E8 MOV X21, X0
	0x0348A8EC LDR W9, [X8 + 0xE0]
	0x0348A8F0 CBNZ W9, 0x348A8FC
	0x0348A8F4 MOV X0, X8
	0x0348A8F8 BL 0x1C16DFC
	0x0348A8FC MOV X0, X22
	0x0348A900 MOV X1, X31
	0x0348A904 BL 0x338C698
	0x0348A908 MOV X1, X0
	0x0348A90C MOV X0, X21
	0x0348A910 MOV X2, X31
	0x0348A914 BL 0x3395194
	0x0348A918 TBNZ X0, 0x0, 0x348A958
	0x0348A91C ADRP X8, 0xC90000
	0x0348A920 LDR X0, [X25]
	0x0348A924 LDR X8, [X8 + 0xD70]
	0x0348A928 LDR W9, [X0 + 0xE0]
	0x0348A92C LDR X22, [X8]
	0x0348A930 CBNZ W9, 0x348A938
	0x0348A934 BL 0x1C16DFC
	0x0348A938 MOV X0, X22
	0x0348A93C MOV X1, X31
	0x0348A940 BL 0x338C698
	0x0348A944 MOV X1, X0
	0x0348A948 MOV X0, X21
	0x0348A94C MOV X2, X31
	0x0348A950 BL 0x3395194
	0x0348A954 TBZ X0, 0x0, 0x348AAA4
	0x0348A958 CBZ X19, 0x348B648
	0x0348A95C MOVZ W1, 0x22
	0x0348A960 MOV X0, X19
	0x0348A964 MOV X2, X31
	0x0348A968 BL 0x3233D30
	0x0348A96C ADRP X8, 0xC6B000
	0x0348A970 LDR X8, [X8 + 0x278]
	0x0348A974 LDR X1, [X8]
	0x0348A978 LDR X8, [X20]
	0x0348A97C CMP X8, X1
	0x0348A980 B.NE 0x348B5D4
	0x0348A984 LDR W8, [X20 + 0x10]
	0x0348A988 CMP W8, 0x1
	0x0348A98C B.LT 0x348AA70
	0x0348A990 ADRP X24, 0xCA7000
	0x0348A994 ADRP X25, 0xC71000
	0x0348A998 ADRP X26, 0xCA7000
	0x0348A99C ADRP X27, 0xCA7000
	0x0348A9A0 LDR X24, [X24 + 0x280]
	0x0348A9A4 LDR X25, [X25 + 0x720]
	0x0348A9A8 LDR X26, [X26 + 0x290]
	0x0348A9AC LDR X27, [X27 + 0x288]
	0x0348A9B0 MOV W21, W31
	0x0348A9B4 MOV X0, X20
	0x0348A9B8 MOV W1, W21
	0x0348A9BC MOV X2, X31
	0x0348A9C0 BL 0x3222A1C
	0x0348A9C4 AND W22, W0, 0xFFFF
	0x0348A9C8 CMP W22, 0x20
	0x0348A9CC B.CC 0x348A9E0
	0x0348A9D0 CMP W22, 0x5C
	0x0348A9D4 B.EQ 0x348A9E0
	0x0348A9D8 CMP W22, 0x22
	0x0348A9DC B.NE 0x348AA50
	0x0348A9E0 MOVZ W1, 0x5C
	0x0348A9E4 MOV X0, X19
	0x0348A9E8 MOV X2, X31
	0x0348A9EC BL 0x3233D30
	0x0348A9F0 LDR X0, [X24]
	0x0348A9F4 CBZ X0, 0x348B648
	0x0348A9F8 MOV W1, W22
	0x0348A9FC MOV X2, X31
	0x0348AA00 BL 0x322BD98
	0x0348AA04 TBNZ X0, 0x1F, 0x348AA28
	0x0348AA08 MOV W1, W0
	0x0348AA0C LDR X0, [X27]
	0x0348AA10 CBZ X0, 0x348B648
	0x0348AA14 MOV X2, X31
	0x0348AA18 BL 0x3222A1C
	0x0348AA1C MOV W1, W0
	0x0348AA20 MOV X0, X19
	0x0348AA24 B 0x348AA58
	0x0348AA28 LDR X0, [X25]
	0x0348AA2C ADD X1, X31, 0xC
	0x0348AA30 STR W22, [X31 + 0xC]
	0x0348AA34 BL 0x1C16E04
	0x0348AA38 LDR X1, [X26]
	0x0348AA3C MOV X2, X0
	0x0348AA40 MOV X0, X19
	0x0348AA44 MOV X3, X31
	0x0348AA48 BL 0x3234224
	0x0348AA4C B 0x348AA60
	0x0348AA50 MOV X0, X19
	0x0348AA54 MOV W1, W22
	0x0348AA58 MOV X2, X31
	0x0348AA5C BL 0x3233D30
	0x0348AA60 LDR W8, [X20 + 0x10]
	0x0348AA64 ADD W21, W21, 0x1
	0x0348AA68 CMP W21, W8
	0x0348AA6C B.LT 0x348A9B4
	0x0348AA70 MOVZ W1, 0x22
	0x0348AA74 MOV X0, X19
	0x0348AA78 MOV X2, X31
	0x0348AA7C BL 0x3233D30
	0x0348AA80 B 0x348AC98
	0x0348AA84 CBZ X19, 0x348B648
	0x0348AA88 ADRP X8, 0xC69000
	0x0348AA8C LDR X8, [X8 + 0x830]
	0x0348AA90 LDR X1, [X8]
	0x0348AA94 MOV X0, X19
	0x0348AA98 MOV X2, X31
	0x0348AA9C BL 0x32333E0
	0x0348AAA0 B 0x348AC98
	0x0348AAA4 ADRP X8, 0xC90000
	0x0348AAA8 LDR X0, [X25]
	0x0348AAAC LDR X8, [X8 + 0xD68]
	0x0348AAB0 LDR W9, [X0 + 0xE0]
	0x0348AAB4 LDR X22, [X8]
	0x0348AAB8 CBNZ W9, 0x348AAC0
	0x0348AABC BL 0x1C16DFC
	0x0348AAC0 MOV X0, X22
	0x0348AAC4 MOV X1, X31
	0x0348AAC8 BL 0x338C698
	0x0348AACC MOV X1, X0
	0x0348AAD0 MOV X0, X21
	0x0348AAD4 MOV X2, X31
	0x0348AAD8 BL 0x3395194
	0x0348AADC TBNZ X0, 0x0, 0x348AC84
	0x0348AAE0 ADRP X8, 0xC90000
	0x0348AAE4 LDR X0, [X25]
	0x0348AAE8 LDR X8, [X8 + 0xD90]
	0x0348AAEC LDR W9, [X0 + 0xE0]
	0x0348AAF0 LDR X22, [X8]
	0x0348AAF4 CBNZ W9, 0x348AAFC
	0x0348AAF8 BL 0x1C16DFC
	0x0348AAFC MOV X0, X22
	0x0348AB00 MOV X1, X31
	0x0348AB04 BL 0x338C698
	0x0348AB08 MOV X1, X0
	0x0348AB0C MOV X0, X21
	0x0348AB10 MOV X2, X31
	0x0348AB14 BL 0x3395194
	0x0348AB18 TBNZ X0, 0x0, 0x348AC84
	0x0348AB1C ADRP X8, 0xC90000
	0x0348AB20 LDR X0, [X25]
	0x0348AB24 LDR X8, [X8 + 0xD78]
	0x0348AB28 LDR W9, [X0 + 0xE0]
	0x0348AB2C LDR X22, [X8]
	0x0348AB30 CBNZ W9, 0x348AB38
	0x0348AB34 BL 0x1C16DFC
	0x0348AB38 MOV X0, X22
	0x0348AB3C MOV X1, X31
	0x0348AB40 BL 0x338C698
	0x0348AB44 MOV X1, X0
	0x0348AB48 MOV X0, X21
	0x0348AB4C MOV X2, X31
	0x0348AB50 BL 0x3395194
	0x0348AB54 TBNZ X0, 0x0, 0x348AC84
	0x0348AB58 ADRP X8, 0xC90000
	0x0348AB5C LDR X0, [X25]
	0x0348AB60 LDR X8, [X8 + 0xD98]
	0x0348AB64 LDR W9, [X0 + 0xE0]
	0x0348AB68 LDR X22, [X8]
	0x0348AB6C CBNZ W9, 0x348AB74
	0x0348AB70 BL 0x1C16DFC
	0x0348AB74 MOV X0, X22
	0x0348AB78 MOV X1, X31
	0x0348AB7C BL 0x338C698
	0x0348AB80 MOV X1, X0
	0x0348AB84 MOV X0, X21
	0x0348AB88 MOV X2, X31
	0x0348AB8C BL 0x3395194
	0x0348AB90 TBNZ X0, 0x0, 0x348AC84
	0x0348AB94 ADRP X8, 0xC90000
	0x0348AB98 LDR X0, [X25]
	0x0348AB9C LDR X8, [X8 + 0xD80]
	0x0348ABA0 LDR W9, [X0 + 0xE0]
	0x0348ABA4 LDR X22, [X8]
	0x0348ABA8 CBNZ W9, 0x348ABB0
	0x0348ABAC BL 0x1C16DFC
	0x0348ABB0 MOV X0, X22
	0x0348ABB4 MOV X1, X31
	0x0348ABB8 BL 0x338C698
	0x0348ABBC MOV X1, X0
	0x0348ABC0 MOV X0, X21
	0x0348ABC4 MOV X2, X31
	0x0348ABC8 BL 0x3395194
	0x0348ABCC TBNZ X0, 0x0, 0x348AC84
	0x0348ABD0 ADRP X8, 0xC90000
	0x0348ABD4 LDR X0, [X25]
	0x0348ABD8 LDR X8, [X8 + 0xDA0]
	0x0348ABDC LDR W9, [X0 + 0xE0]
	0x0348ABE0 LDR X22, [X8]
	0x0348ABE4 CBNZ W9, 0x348ABEC
	0x0348ABE8 BL 0x1C16DFC
	0x0348ABEC MOV X0, X22
	0x0348ABF0 MOV X1, X31
	0x0348ABF4 BL 0x338C698
	0x0348ABF8 MOV X1, X0
	0x0348ABFC MOV X0, X21
	0x0348AC00 MOV X2, X31
	0x0348AC04 BL 0x3395194
	0x0348AC08 TBNZ X0, 0x0, 0x348AC84
	0x0348AC0C ADRP X8, 0xC90000
	0x0348AC10 LDR X0, [X25]
	0x0348AC14 LDR X8, [X8 + 0xD88]
	0x0348AC18 LDR W9, [X0 + 0xE0]
	0x0348AC1C LDR X22, [X8]
	0x0348AC20 CBNZ W9, 0x348AC28
	0x0348AC24 BL 0x1C16DFC
	0x0348AC28 MOV X0, X22
	0x0348AC2C MOV X1, X31
	0x0348AC30 BL 0x338C698
	0x0348AC34 MOV X1, X0
	0x0348AC38 MOV X0, X21
	0x0348AC3C MOV X2, X31
	0x0348AC40 BL 0x3395194
	0x0348AC44 TBNZ X0, 0x0, 0x348AC84
	0x0348AC48 ADRP X8, 0xC90000
	0x0348AC4C LDR X0, [X25]
	0x0348AC50 LDR X8, [X8 + 0xDA8]
	0x0348AC54 LDR W9, [X0 + 0xE0]
	0x0348AC58 LDR X22, [X8]
	0x0348AC5C CBNZ W9, 0x348AC64
	0x0348AC60 BL 0x1C16DFC
	0x0348AC64 MOV X0, X22
	0x0348AC68 MOV X1, X31
	0x0348AC6C BL 0x338C698
	0x0348AC70 MOV X1, X0
	0x0348AC74 MOV X0, X21
	0x0348AC78 MOV X2, X31
	0x0348AC7C BL 0x3395194
	0x0348AC80 TBZ X0, 0x0, 0x348ACC8
	0x0348AC84 CBZ X19, 0x348B648
	0x0348AC88 MOV X0, X19
	0x0348AC8C MOV X1, X20
	0x0348AC90 MOV X2, X31
	0x0348AC94 BL 0x3233F90
	0x0348AC98 LDR X8, [X23 + 0x28]
	0x0348AC9C LDR X9, [X31 + 0x38]
	0x0348ACA0 CMP X8, X9
	0x0348ACA4 B.NE 0x348B8A4
	0x0348ACA8 LDP X20, X19, [X31 + 0x90]
	0x0348ACAC LDP X22, X21, [X31 + 0x80]
	0x0348ACB0 LDP X24, X23, [X31 + 0x70]
	0x0348ACB4 LDP X26, X25, [X31 + 0x60]
	0x0348ACB8 LDP X28, X27, [X31 + 0x50]
	0x0348ACBC LDP X29, X30, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X21, 0xF55000
	015 Move X23, 0xC93000
	016 Move X24, 0xC6B000
	017 Move [X31+88], X8
	018 Move W8, [X21+2311]
	019 Move X23, [X23+2912]
	020 Move X24, [X24+1728]
	021 Move X19, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {122}
	027 Move X0, 0xC74000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0xC74000
	031 Move X0, [X0+2536]
	032 Call 0x1C17CF4
	033 Move X0, 0xC6D000
	034 Move X0, [X0+3144]
	035 Call 0x1C17CF4
	036 Move X0, 0xC9D000
	037 Move X0, [X0+320]
	038 Call 0x1C17CF4
	039 Move X0, 0xC93000
	040 Move X0, [X0+1520]
	041 Call 0x1C17CF4
	042 Move X0, 0xC94000
	043 Move X0, [X0+904]
	044 Call 0x1C17CF4
	045 Move X0, 0xC6B000
	046 Move X0, [X0+3576]
	047 Call 0x1C17CF4
	048 Move X0, 0xCA9000
	049 Move X0, [X0+536]
	050 Call 0x1C17CF4
	051 Move X0, 0xC92000
	052 Move X0, [X0+4040]
	053 Call 0x1C17CF4
	054 Move X0, 0xC92000
	055 Move X0, [X0+4048]
	056 Call 0x1C17CF4
	057 Move X0, 0xC92000
	058 Move X0, [X0+4056]
	059 Call 0x1C17CF4
	060 Move X0, 0xC6B000
	061 Move X0, [X0+2072]
	062 Call 0x1C17CF4
	063 Move X0, 0xC72000
	064 Move X0, [X0+760]
	065 Call 0x1C17CF4
	066 Move X0, 0xC92000
	067 Move X0, [X0+3456]
	068 Call 0x1C17CF4
	069 Move X0, 0xC6B000
	070 Move X0, [X0+1880]
	071 Call 0x1C17CF4
	072 Move X0, 0xC93000
	073 Move X0, [X0+4088]
	074 Call 0x1C17CF4
	075 Move X0, 0xC92000
	076 Move X0, [X0+4064]
	077 Call 0x1C17CF4
	078 Move X0, 0xC6C000
	079 Move X0, [X0+456]
	080 Call 0x1C17CF4
	081 Move X0, 0xC93000
	082 Move X0, [X0+2904]
	083 Call 0x1C17CF4
	084 Move X0, 0xC94000
	085 Move X0, [X0+32]
	086 Call 0x1C17CF4
	087 Move X0, 0xC6B000
	088 Move X0, [X0+2512]
	089 Call 0x1C17CF4
	090 Move X0, 0xC75000
	091 Move X0, [X0+2408]
	092 Call 0x1C17CF4
	093 Move X0, 0xCA9000
	094 Move X0, [X0+544]
	095 Call 0x1C17CF4
	096 Move X0, 0xC6B000
	097 Move X0, [X0+2288]
	098 Call 0x1C17CF4
	099 Move X0, 0xC93000
	100 Move X0, [X0+2912]
	101 Call 0x1C17CF4
	102 Move X0, 0xC6D000
	103 Move X0, [X0+632]
	104 Call 0x1C17CF4
	105 Move X0, 0xC73000
	106 Move X0, [X0+3168]
	107 Call 0x1C17CF4
	108 Move X0, 0xC6B000
	109 Move X0, [X0+1728]
	110 Call 0x1C17CF4
	111 Move X0, 0xCA9000
	112 Move X0, [X0+552]
	113 Call 0x1C17CF4
	114 Move X0, 0xC6B000
	115 Move X0, [X0+2096]
	116 Call 0x1C17CF4
	117 Move X0, 0xCA9000
	118 Move X0, [X0+560]
	119 Call 0x1C17CF4
	120 Move W8, 1
	121 Move [X21+2311], W8
	122 Move X0, [X24]
	123 Move [X31+44], W31
	124 Move [X31+72], X31
	125 Move [X31+80], X31
	126 Move [X31+16], X31
	127 Move [X31+24], X31
	128 Move [X31+32], X31
	129 Move W8, [X0+224]
	130 Move X21, [X23]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X21
	135 Move X1, X31
	136 Call Type.GetTypeFromHandle, X0
	137 Move X1, X0
	138 Move X0, X20
	139 Move X2, X31
	140 Call Type.op_Equality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {286}
	145 Move X8, 0xC74000
	146 Move X8, [X8+2264]
	147 Move W1, 2
	148 Move X0, [X8]
	149 Call 0x1C17D6C
	150 Compare X0, 0
	151 JumpIfEqual {1020}
	152 Move W8, [X0+24]
	153 Move X20, X0
	154 Compare W8, 0
	155 JumpIfEqual {1021}
	156 Move W9, 34
	157 NotImplemented "Instruction CMP not yet implemented."
	158 NotImplemented "Instruction STRH not yet implemented."
	159 Move W8, 39
	160 NotImplemented "Instruction STRH not yet implemented."
	161 Compare X19, 0
	162 JumpIfEqual {1020}
	163 Move W8, [X19+16]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X19
	166 Move W1, W31
	167 Move X2, X31
	168 Call String.get_Chars, X0, X1
	169 Move X21, 0xCA9000
	170 Move X21, [X21+536]
	171 Move W1, W0
	172 Move X0, X20
	173 Move X2, [X21]
	174 Call 0x21BB2BC, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {192}
	179 Move W8, [X19+16]
	180 Move X0, X19
	181 Move X2, X31
	182 Subtract W1, W8, 1
	183 Call String.get_Chars, X0, X1
	184 Move X2, [X21]
	185 Move W1, W0
	186 Move X0, X20
	187 Call 0x21BB2BC, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {418}
	192 Move W21, [X19+16]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X8, 0xC6B000
	195 Move X8, [X8+2288]
	196 Move X0, [X8]
	197 Call 0x1C17F10
	198 Move W1, W21
	199 Move X2, X31
	200 Move X20, X0
	201 Call StringBuilder..ctor, X0, X1
	202 Move W8, [X19+16]
	203 Subtract W8, W8, 1
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X23, 0xCA8000
	206 Move X24, 0xCA8000
	207 Move X23, [X23+552]
	208 Move X24, [X24+560]
	209 Move W21, 1
	210 Move X0, X19
	211 Move W1, W21
	212 Move X2, X31
	213 Call String.get_Chars, X0, X1
	214 And W8, W0, 0xFFFF
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W8, [X19+16]
	217 Add W22, W21, 1
	218 Subtract W8, W8, 1
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, X19
	221 Move W1, W22
	222 Move X2, X31
	223 Call String.get_Chars, X0, X1
	224 Move X8, [X23]
	225 Compare X8, 0
	226 JumpIfEqual {1020}
	227 Move W1, W0
	228 Move X0, X8
	229 Move X2, X31
	230 Call String.IndexOf, X0, X1
	231 Move TEMP, X0
	232 And TEMP, TEMP, -2147483648
	233 Compare TEMP, -2147483648
	234 JumpIfEqual {244}
	235 Move W1, W0
	236 Move X0, [X24]
	237 Compare X0, 0
	238 JumpIfEqual {1020}
	239 Move X2, X31
	240 Call String.get_Chars, X0, X1
	241 Compare X20, 0
	242 JumpIfEqual {1020}
	243 Move W1, W0
	244 Move X0, X19
	245 Move W1, W22
	246 Move X2, X31
	247 Call String.get_Chars, X0, X1
	248 And W8, W0, 0xFFFF
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move W8, [X19+16]
	251 Add W22, W21, 5
	252 Subtract W8, W8, 1
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Add W1, W21, 2
	255 Move W2, 4
	256 Move X0, X19
	257 Move X3, X31
	258 Call String.Substring, X0, X1, X2
	259 Add X3, X31, 44
	260 Move W1, 512
	261 Move X2, X31
	262 Move X4, X31
	263 Call UInt32.TryParse, X0, X1, X2, X3
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {271}
	268 Compare X20, 0
	269 JumpIfEqual {1020}
	270 Move W1, [X31+44]
	271 Move X0, X19
	272 Move W1, W21
	273 Move X2, X31
	274 Call String.get_Chars, X0, X1
	275 Compare X20, 0
	276 JumpIfEqual {1020}
	277 Move W1, W0
	278 Move W22, W21
	279 Move X0, X20
	280 Move X2, X31
	281 Call StringBuilder.Append, X0, X1
	282 Move W8, [X19+16]
	283 Add W21, W22, 1
	284 Subtract W8, W8, 1
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Compare X20, 0
	287 JumpIfEqual {1020}
	288 Move X0, X20
	289 Move X1, X31
	290 Call Type.get_IsPrimitive, X0
	291 Move TEMP, X0
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {323}
	295 Move X8, 0xC6C000
	296 Move X8, [X8+3144]
	297 Move X0, [X8]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X0, X31
	303 Call CultureInfo.get_InvariantCulture
	304 Move X8, 0xC73000
	305 Move X8, [X8+2536]
	306 Move X21, X0
	307 Move X8, [X8]
	308 Move W9, [X8+224]
	309 Compare W9, 0
	310 JumpIfNotEqual {313}
	311 Move X0, X8
	312 Call 0x1C17DFC
	313 Move X0, X19
	314 Move X1, X20
	315 Move X2, X21
	316 Move X3, X31
	317 Call Convert.ChangeType, X0, X1, X2
	318 Move X8, 0xC6C000
	319 Move X8, [X8+632]
	320 Move X8, [X8]
	321 Move X8, [X8+184]
	322 Move X21, [X8]
	323 Move X8, 0xC9C000
	324 Move X0, [X24]
	325 Move X8, [X8+320]
	326 Move W9, [X0+224]
	327 Move X21, [X8]
	328 Compare W9, 0
	329 JumpIfNotEqual {331}
	330 Call 0x1C17DFC
	331 Move X0, X21
	332 Move X1, X31
	333 Call Type.GetTypeFromHandle, X0
	334 Move X1, X0
	335 Move X0, X20
	336 Move X2, X31
	337 Call Type.op_Equality, X0, X1
	338 Move TEMP, X0
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfNotEqual {371}
	342 Move X8, 0xC6C000
	343 Move X8, [X8+3144]
	344 Move X0, [X8]
	345 Move W8, [X0+224]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X0, X31
	350 Call CultureInfo.get_InvariantCulture
	351 Move X21, 0xC92000
	352 Move X21, [X21+1520]
	353 Move X20, X0
	354 Move X8, [X21]
	355 Move W9, [X8+224]
	356 Compare W9, 0
	357 JumpIfNotEqual {360}
	358 Move X0, X8
	359 Call 0x1C17DFC
	360 Add X3, X31, 72
	361 Move W1, 167
	362 Move X0, X19
	363 Move X2, X20
	364 Move X4, X31
	365 Call Decimal.TryParse, X0, X1, X2, X3
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 Move X0, [X21]
	368 Move [X31+3], V0
	369 Add X1, X31, 48
	370 Call 0x1C17E04
	371 Move X8, 0xC6A000
	372 Move X8, [X8+2096]
	373 Move X0, X19
	374 Move X2, X31
	375 Move X1, [X8]
	376 Call String.op_Equality, X0, X1
	377 Move X21, X31
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfEqual {427}
	382 Move X8, [X20]
	383 Move X0, X20
	384 Move X9, [X8+1416]
	385 Move X1, [X8+1424]
	386 NotImplemented "Instruction BLR not yet implemented."
	387 Move TEMP, X0
	388 And TEMP, TEMP, 1
	389 Compare TEMP, 1
	390 JumpIfNotEqual {443}
	391 Compare X19, 0
	392 JumpIfEqual {1020}
	393 Move X0, X19
	394 Move W1, W31
	395 Move X2, X31
	396 Call String.get_Chars, X0, X1
	397 And W8, W0, 0xFFFF
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move W8, [X19+16]
	400 Move W1, 1
	401 Move X0, X19
	402 Move X3, X31
	403 Subtract W2, W8, 2
	404 Call String.Substring, X0, X1, X2
	405 Move X19, X0
	406 Move X8, 0xC6A000
	407 Move X8, [X8+3576]
	408 Move X0, [X8]
	409 Move W8, [X0+224]
	410 Compare W8, 0
	411 JumpIfNotEqual {413}
	412 Call 0x1C17DFC
	413 Move X0, X20
	414 Move X1, X19
	415 Move W2, W31
	416 Move X3, X31
	417 Call Enum.Parse, X0, X1, X2
	418 Move X21, X19
	419 Compare X20, 0
	420 JumpIfEqual {1020}
	421 Move X8, [X20]
	422 Move X0, X20
	423 Move X9, [X8+360]
	424 Move X1, [X8+368]
	425 NotImplemented "Instruction BLR not yet implemented."
	426 Move X21, X0
	427 Move X8, [X25+40]
	428 Move X9, [X31+88]
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X0, X21
	431 Move X20, [X31+160]
	432 Move X19, [X31+168]
	433 Move X22, [X31+144]
	434 Move X21, [X31+152]
	435 Move X24, [X31+128]
	436 Move X23, [X31+136]
	437 Move X26, [X31+112]
	438 Move X25, [X31+120]
	439 Move X30, [X31+96]
	440 Move X27, [X31+104]
	441 Add X31, X31, 176
	442 Return X0
	443 Move X0, X20
	444 Move X1, X31
	445 Call Type.get_IsArray, X0
	446 Move X8, [X20]
	447 Move TEMP, X0
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfNotEqual {505}
	451 Move X9, [X8+1064]
	452 Move X1, [X8+1072]
	453 Move X0, X20
	454 NotImplemented "Instruction BLR not yet implemented."
	455 Compare X19, 0
	456 JumpIfEqual {1020}
	457 Move X20, X0
	458 Move X0, X19
	459 Move W1, W31
	460 Move X2, X31
	461 Call String.get_Chars, X0, X1
	462 And W8, W0, 0xFFFF
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X21, X31
	465 Move W8, [X19+16]
	466 Move X0, X19
	467 Move X2, X31
	468 Subtract W1, W8, 1
	469 Call String.get_Chars, X0, X1
	470 And W8, W0, 0xFFFF
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X21, X31
	473 Move X0, X19
	474 Call JsonParser.Split, X0
	475 Compare X0, 0
	476 JumpIfEqual {1020}
	477 Move W1, [X0+24]
	478 Move X19, X0
	479 Move X0, X20
	480 Move X2, X31
	481 Call Array.CreateInstance, X0, X1
	482 Move W8, [X19+24]
	483 Move X21, X0
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move X23, 0xC92000
	486 Move X23, [X23+2904]
	487 Move W22, W31
	488 Move X2, [X23]
	489 Move X0, X19
	490 Move W1, W22
	491 Call List`1<Object>.get_Item, X0, X1
	492 Move X1, X0
	493 Move X0, X20
	494 Call JsonParser.ParseValue, X0, X1
	495 Compare X21, 0
	496 JumpIfEqual {1020}
	497 Move X1, X0
	498 Move X0, X21
	499 Move W2, W22
	500 Move X3, X31
	501 Call Array.SetValue, X0, X1, X2
	502 Move W8, [X19+24]
	503 Add W22, W22, 1
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X9, [X8+968]
	506 Move X1, [X8+976]
	507 Move X0, X20
	508 NotImplemented "Instruction BLR not yet implemented."
	509 Move TEMP, X0
	510 And TEMP, TEMP, 1
	511 Compare TEMP, 1
	512 JumpIfNotEqual {660}
	513 Move X8, [X20]
	514 Move X0, X20
	515 Move X9, [X8+1096]
	516 Move X1, [X8+1104]
	517 NotImplemented "Instruction BLR not yet implemented."
	518 Move X9, 0xC93000
	519 Move X8, [X24]
	520 Move X9, [X9+32]
	521 Move X21, X0
	522 Move W10, [X8+224]
	523 Move X22, [X9]
	524 Compare W10, 0
	525 JumpIfNotEqual {528}
	526 Move X0, X8
	527 Call 0x1C17DFC
	528 Move X0, X22
	529 Move X1, X31
	530 Call Type.GetTypeFromHandle, X0
	531 Move X1, X0
	532 Move X0, X21
	533 Move X2, X31
	534 Call Type.op_Equality, X0, X1
	535 Move TEMP, X0
	536 And TEMP, TEMP, 1
	537 Compare TEMP, 1
	538 JumpIfNotEqual {660}
	539 Move X8, [X20]
	540 Move X0, X20
	541 Move X9, [X8+1128]
	542 Move X1, [X8+1136]
	543 NotImplemented "Instruction BLR not yet implemented."
	544 Compare X0, 0
	545 JumpIfEqual {1020}
	546 Move W8, [X0+24]
	547 Compare W8, 0
	548 JumpIfEqual {1021}
	549 Compare X19, 0
	550 JumpIfEqual {1020}
	551 Move X22, [X0+32]
	552 Move X0, X19
	553 Move W1, W31
	554 Move X2, X31
	555 Call String.get_Chars, X0, X1
	556 And W8, W0, 0xFFFF
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Move X21, X31
	559 Move W8, [X19+16]
	560 Move X0, X19
	561 Move X2, X31
	562 Subtract W1, W8, 1
	563 Call String.get_Chars, X0, X1
	564 And W8, W0, 0xFFFF
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Move X21, X31
	567 Move X0, X19
	568 Call JsonParser.Split, X0
	569 Move X8, 0xC72000
	570 Move X8, [X8+3168]
	571 Move X19, X0
	572 Move W1, 1
	573 Move X8, [X8]
	574 Move X0, X8
	575 Call 0x1C17D6C
	576 Move X9, 0xC91000
	577 Move X8, [X24]
	578 Move X9, [X9+3456]
	579 Move X21, X0
	580 Move W10, [X8+224]
	581 Move X23, [X9]
	582 Compare W10, 0
	583 JumpIfNotEqual {586}
	584 Move X0, X8
	585 Call 0x1C17DFC
	586 Move X0, X23
	587 Move X1, X31
	588 Call Type.GetTypeFromHandle, X0
	589 Compare X21, 0
	590 JumpIfEqual {1020}
	591 Move X23, X0
	592 Compare X0, 0
	593 JumpIfEqual {600}
	594 Move X8, [X21]
	595 Move X0, X23
	596 Move X1, [X8+64]
	597 Call 0x1C17E00
	598 Compare X0, 0
	599 JumpIfEqual {1023}
	600 Move W8, [X21+24]
	601 Compare W8, 0
	602 JumpIfEqual {1021}
	603 Move X0, X20
	604 Move X1, X21
	605 Move X2, X31
	606 Move [X21+32], X23
	607 Call Type.GetConstructor, X0, X1
	608 Move X8, 0xC6A000
	609 Move X8, [X8+2512]
	610 Move X20, X0
	611 Move W1, 1
	612 Move X8, [X8]
	613 Move X0, X8
	614 Call 0x1C17D6C
	615 Compare X19, 0
	616 JumpIfEqual {1020}
	617 Move X9, 0xC6A000
	618 Move W8, [X19+24]
	619 Move X9, [X9+1880]
	620 Move X21, X0
	621 Add X1, X31, 12
	622 Move [X31+12], W8
	623 Move X0, [X9]
	624 Call 0x1C17E04
	625 Compare X21, 0
	626 JumpIfEqual {1020}
	627 Move X23, X0
	628 Compare X0, 0
	629 JumpIfEqual {636}
	630 Move X8, [X21]
	631 Move X0, X23
	632 Move X1, [X8+64]
	633 Call 0x1C17E00
	634 Compare X0, 0
	635 JumpIfEqual {1023}
	636 Move W8, [X21+24]
	637 Compare W8, 0
	638 JumpIfEqual {1021}
	639 Move [X21+32], X23
	640 Compare X20, 0
	641 JumpIfEqual {1020}
	642 Move X0, X20
	643 Move X1, X21
	644 Move X2, X31
	645 Call ConstructorInfo.Invoke, X0, X1
	646 Move X24, 0xC71000
	647 Move X24, [X24+760]
	648 Compare X0, 0
	649 JumpIfEqual {882}
	650 Move X23, [X24]
	651 Move X20, X0
	652 Move X1, X23
	653 Call 0x1C17E00
	654 Move X21, X0
	655 Compare X0, 0
	656 JumpIfNotEqual {883}
	657 Move X0, X20
	658 Move X1, X23
	659 Call 0x1C181E0
	660 Move X8, [X20]
	661 Move X0, X20
	662 Move X9, [X8+968]
	663 Move X1, [X8+976]
	664 NotImplemented "Instruction BLR not yet implemented."
	665 Move TEMP, X0
	666 And TEMP, TEMP, 1
	667 Compare TEMP, 1
	668 JumpIfNotEqual {841}
	669 Move X8, [X20]
	670 Move X0, X20
	671 Move X9, [X8+1096]
	672 Move X1, [X8+1104]
	673 NotImplemented "Instruction BLR not yet implemented."
	674 Move X9, 0xC93000
	675 Move X8, [X24]
	676 Move X9, [X9+904]
	677 Move X21, X0
	678 Move W10, [X8+224]
	679 Move X22, [X9]
	680 Compare W10, 0
	681 JumpIfNotEqual {684}
	682 Move X0, X8
	683 Call 0x1C17DFC
	684 Move X0, X22
	685 Move X1, X31
	686 Call Type.GetTypeFromHandle, X0
	687 Move X1, X0
	688 Move X0, X21
	689 Move X2, X31
	690 Call Type.op_Equality, X0, X1
	691 Move TEMP, X0
	692 And TEMP, TEMP, 1
	693 Compare TEMP, 1
	694 JumpIfNotEqual {841}
	695 Move X8, [X20]
	696 Move X0, X20
	697 Move X9, [X8+1128]
	698 Move X1, [X8+1136]
	699 NotImplemented "Instruction BLR not yet implemented."
	700 Compare X0, 0
	701 JumpIfEqual {1020}
	702 Move W8, [X0+24]
	703 Compare W8, 0
	704 JumpIfEqual {1021}
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Move X8, [X24]
	707 Move X21, [X0+32]
	708 Move X22, [X0+40]
	709 Move X23, [X23]
	710 Move W9, [X8+224]
	711 Compare W9, 0
	712 JumpIfNotEqual {715}
	713 Move X0, X8
	714 Call 0x1C17DFC
	715 Move X0, X23
	716 Move X1, X31
	717 Call Type.GetTypeFromHandle, X0
	718 Move X1, X0
	719 Move X0, X21
	720 Move X2, X31
	721 Call Type.op_Inequality, X0, X1
	722 Move X21, X31
	723 Move TEMP, X0
	724 And TEMP, TEMP, 1
	725 Compare TEMP, 1
	726 JumpIfEqual {427}
	727 Compare X19, 0
	728 JumpIfEqual {1020}
	729 Move X0, X19
	730 Move W1, W31
	731 Move X2, X31
	732 Call String.get_Chars, X0, X1
	733 And W8, W0, 0xFFFF
	734 NotImplemented "Instruction CMP not yet implemented."
	735 Move X21, X31
	736 Move W8, [X19+16]
	737 Move X0, X19
	738 Move X2, X31
	739 Subtract W1, W8, 1
	740 Call String.get_Chars, X0, X1
	741 And W8, W0, 0xFFFF
	742 NotImplemented "Instruction CMP not yet implemented."
	743 Move X21, X31
	744 Move X0, X19
	745 Call JsonParser.Split, X0
	746 Compare X0, 0
	747 JumpIfEqual {1020}
	748 Move W8, [X0+24]
	749 Move X19, X0
	750 Move TEMP, X8
	751 And TEMP, TEMP, 1
	752 Compare TEMP, 1
	753 JumpIfEqual {948}
	754 Move X8, 0xC72000
	755 Move X8, [X8+3168]
	756 Move W1, 1
	757 Move X0, [X8]
	758 Call 0x1C17D6C
	759 Move X9, 0xC91000
	760 Move X8, [X24]
	761 Move X9, [X9+3456]
	762 Move X21, X0
	763 Move W10, [X8+224]
	764 Move X23, [X9]
	765 Compare W10, 0
	766 JumpIfNotEqual {769}
	767 Move X0, X8
	768 Call 0x1C17DFC
	769 Move X0, X23
	770 Move X1, X31
	771 Call Type.GetTypeFromHandle, X0
	772 Compare X21, 0
	773 JumpIfEqual {1020}
	774 Move X23, X0
	775 Compare X0, 0
	776 JumpIfEqual {783}
	777 Move X8, [X21]
	778 Move X0, X23
	779 Move X1, [X8+64]
	780 Call 0x1C17E00
	781 Compare X0, 0
	782 JumpIfEqual {1023}
	783 Move W8, [X21+24]
	784 Compare W8, 0
	785 JumpIfEqual {1021}
	786 Move X0, X20
	787 Move X1, X21
	788 Move X2, X31
	789 Move [X21+32], X23
	790 Call Type.GetConstructor, X0, X1
	791 Move X8, 0xC6A000
	792 Move X8, [X8+2512]
	793 Move X20, X0
	794 Move W1, 1
	795 Move X8, [X8]
	796 Move X0, X8
	797 Call 0x1C17D6C
	798 Move X9, 0xC6A000
	799 Move W8, [X19+24]
	800 Move X9, [X9+1880]
	801 Move X21, X0
	802 Add X1, X31, 48
	803 NotImplemented "Instruction CMP not yet implemented."
	804 Move X0, [X9]
	805 NotImplemented "Instruction CINC not yet implemented."
	806 NotImplemented "Instruction SBFM not yet implemented."
	807 Move [X31+48], W8
	808 Call 0x1C17E04
	809 Compare X21, 0
	810 JumpIfEqual {1020}
	811 Move X23, X0
	812 Compare X0, 0
	813 JumpIfEqual {820}
	814 Move X8, [X21]
	815 Move X0, X23
	816 Move X1, [X8+64]
	817 Call 0x1C17E00
	818 Compare X0, 0
	819 JumpIfEqual {1023}
	820 Move W8, [X21+24]
	821 Compare W8, 0
	822 JumpIfEqual {1021}
	823 Move [X21+32], X23
	824 Compare X20, 0
	825 JumpIfEqual {1020}
	826 Move X0, X20
	827 Move X1, X21
	828 Move X2, X31
	829 Call ConstructorInfo.Invoke, X0, X1
	830 Move X26, 0xC6A000
	831 Move X26, [X26+2072]
	832 Compare X0, 0
	833 JumpIfEqual {949}
	834 Move X23, [X26]
	835 Move X20, X0
	836 Move X1, X23
	837 Call 0x1C17E00
	838 Move X21, X0
	839 Compare X0, 0
	840 JumpIfNotEqual {950}
	841 Move X8, 0xC74000
	842 Move X0, [X24]
	843 Move X8, [X8+2408]
	844 Move W9, [X0+224]
	845 Move X21, [X8]
	846 Compare W9, 0
	847 JumpIfNotEqual {849}
	848 Call 0x1C17DFC
	849 Move X0, X21
	850 Move X1, X31
	851 Call Type.GetTypeFromHandle, X0
	852 Move X1, X0
	853 Move X0, X20
	854 Move X2, X31
	855 Call Type.op_Equality, X0, X1
	856 Move TEMP, X0
	857 And TEMP, TEMP, 1
	858 Compare TEMP, 1
	859 JumpIfNotEqual {862}
	860 Move X0, X19
	861 Call JsonParser.ParseAnonymousValue, X0
	862 Compare X19, 0
	863 JumpIfEqual {1020}
	864 Move X0, X19
	865 Move W1, W31
	866 Move X2, X31
	867 Call String.get_Chars, X0, X1
	868 And W8, W0, 0xFFFF
	869 NotImplemented "Instruction CMP not yet implemented."
	870 Move X21, X31
	871 Move W8, [X19+16]
	872 Move X0, X19
	873 Move X2, X31
	874 Subtract W1, W8, 1
	875 Call String.get_Chars, X0, X1
	876 And W8, W0, 0xFFFF
	877 NotImplemented "Instruction CMP not yet implemented."
	878 Move X21, X31
	879 Move X0, X20
	880 Move X1, X19
	881 Call JsonParser.ParseObject, X0, X1
	882 Move X21, X31
	883 Move X8, 0xC91000
	884 Move X8, [X8+4064]
	885 Move X0, X19
	886 Move X1, [X8]
	887 Add X8, X31, 48
	888 Call List`1<Object>.GetEnumerator, X0
	889 Move V0, [X31+3]
	890 Move X8, [X31+64]
	891 Move X23, 0xC91000
	892 Move [X31+1], V0
	893 Move [X31+32], X8
	894 Move X23, [X23+4048]
	895 Move X1, [X23]
	896 Add X0, X31, 16
	897 Call Enumerator<Object>.MoveNext, X0
	898 Move TEMP, X0
	899 And TEMP, TEMP, 1
	900 Compare TEMP, 1
	901 JumpIfNotEqual {931}
	902 Move X1, [X31+32]
	903 Move X0, X22
	904 Call JsonParser.ParseValue, X0, X1
	905 Compare X21, 0
	906 JumpIfEqual {1022}
	907 Move X8, [X21]
	908 Move X1, [X24]
	909 Move X20, X0
	910 NotImplemented "Instruction LDRH not yet implemented."
	911 Compare X9, 0
	912 JumpIfEqual {919}
	913 Move X10, [X8+176]
	914 Add X10, X10, 8
	915 NotImplemented "Instruction LDUR not yet implemented."
	916 NotImplemented "Instruction CMP not yet implemented."
	917 Subtract X9, X9, 1
	918 Add X10, X10, 16
	919 Move W2, 2
	920 Move X0, X21
	921 Call 0x1C5D788
	922 Move W9, [X10]
	923 Add W9, W9, 2
	924 Add X8, X8, W9
	925 Add X0, X8, 312
	926 Move X8, [X0]
	927 Move X2, [X0+8]
	928 Move X0, X21
	929 Move X1, X20
	930 NotImplemented "Instruction BLR not yet implemented."
	931 Move X8, 0xC91000
	932 Move X8, [X8+4040]
	933 Add X0, X31, 16
	934 Move X1, [X8]
	935 Call Enumerator<Object>.Dispose, X0
	936 Move X8, 0xC92000
	937 Move X8, [X8+4088]
	938 Move X0, [X8]
	939 Call 0x1C17D0C
	940 Move X0, [X0]
	941 Compare X0, 0
	942 JumpIfEqual {1020}
	943 Move X8, 0xCA8000
	944 Move X8, [X8+544]
	945 Move X1, X19
	946 Move X2, [X8]
	947 Call Stack`1<Object>.Push, X0, X1
	948 Move X21, X31
	949 Move X21, X31
	950 Move W8, [X19+24]
	951 NotImplemented "Instruction CMP not yet implemented."
	952 Move X27, 0xC92000
	953 Move X27, [X27+2904]
	954 Move W20, W31
	955 Move X2, [X27]
	956 Move X0, X19
	957 Move W1, W20
	958 Call List`1<Object>.get_Item, X0, X1
	959 Compare X0, 0
	960 JumpIfEqual {1020}
	961 Move W8, [X0+16]
	962 NotImplemented "Instruction CMP not yet implemented."
	963 Move X2, [X27]
	964 Move X0, X19
	965 Move W1, W20
	966 Call List`1<Object>.get_Item, X0, X1
	967 Move X2, [X27]
	968 Move X23, X0
	969 Move X0, X19
	970 Move W1, W20
	971 Call List`1<Object>.get_Item, X0, X1
	972 Compare X0, 0
	973 JumpIfEqual {1020}
	974 Compare X23, 0
	975 JumpIfEqual {1020}
	976 Move W8, [X0+16]
	977 Move W1, 1
	978 Move X0, X23
	979 Move X3, X31
	980 Subtract W2, W8, 2
	981 Call String.Substring, X0, X1, X2
	982 Move X2, [X27]
	983 Move X23, X0
	984 Or W1, W20, 1
	985 Move X0, X19
	986 Call List`1<Object>.get_Item, X0, X1
	987 Move X1, X0
	988 Move X0, X22
	989 Call JsonParser.ParseValue, X0, X1
	990 Compare X21, 0
	991 JumpIfEqual {1020}
	992 Move X8, [X21]
	993 Move X1, [X26]
	994 Move X24, X0
	995 NotImplemented "Instruction LDRH not yet implemented."
	996 Compare X9, 0
	997 JumpIfEqual {1004}
	998 Move X10, [X8+176]
	999 Add X10, X10, 8
	1000 NotImplemented "Instruction LDUR not yet implemented."
	1001 NotImplemented "Instruction CMP not yet implemented."
	1002 Subtract X9, X9, 1
	1003 Add X10, X10, 16
	1004 Move W2, 5
	1005 Move X0, X21
	1006 Call 0x1C5D788
	1007 Move W9, [X10]
	1008 Add W9, W9, 5
	1009 Add X8, X8, W9
	1010 Add X0, X8, 312
	1011 Move X8, [X0]
	1012 Move X3, [X0+8]
	1013 Move X0, X21
	1014 Move X1, X23
	1015 Move X2, X24
	1016 NotImplemented "Instruction BLR not yet implemented."
	1017 Move W8, [X19+24]
	1018 Add W20, W20, 2
	1019 NotImplemented "Instruction CMP not yet implemented."
	1020 Call 0x1C17F20
	1021 Call 0x1C17F28
	1022 Call 0x1C17F20
	1023 Call 0x1C17F44
	1024 Move X1, X31
	1025 Call 0x1C17DEC
	1026 Call 0x3EB2B20
	1027 Move X20, X0
	1028 NotImplemented "Instruction CMP not yet implemented."
	1029 Move X0, X20
	1030 Call 0x3EB2AD0
	1031 Move X19, X0
	1032 Move X0, 0xC70000
	1033 Move X0, [X0+3264]
	1034 Call 0x1C17D08
	1035 Move X8, [X19]
	1036 Move X1, [X8]
	1037 Call 0x1C18270
	1038 Move TEMP, X0
	1039 And TEMP, TEMP, 1
	1040 Compare TEMP, 1
	1041 JumpIfNotEqual {1047}
	1042 Call 0x3EB2AE0
	1043 Move [X31+48], W31
	1044 Move X0, 0xC6A000
	1045 Move X0, [X0+1880]
	1046 Call 0x1C17D08
	1047 Move W0, 8
	1048 Call 0x3EB2AF0
	1049 Move X8, [X19]
	1050 Move [X0], X8
	1051 Move X1, 0xA2B000
	1052 Add X1, X1, 3672
	1053 Move X2, X31
	1054 Call 0x3EB2B00
	1055 Move X20, X0
	1056 Call 0x3EB2AE0
	1057 Move X20, X0
	1058 NotImplemented "Instruction CMP not yet implemented."
	1059 Move X0, X20
	1060 Call 0x3EB2AD0
	1061 Move X22, [X0]
	1062 Call 0x3EB2AE0
	1063 Move X8, 0xC91000
	1064 Move X8, [X8+4040]
	1065 Add X0, X31, 16
	1066 Move X1, [X8]
	1067 Call Enumerator<Object>.Dispose, X0
	1068 Compare X22, 0
	1069 JumpIfEqual {936}
	1070 Move X0, X22
	1071 Call 0x1C17F18
	1072 Move X22, X31
	1073 Move X20, X0
	1074 Move X8, 0xC91000
	1075 Move X8, [X8+4040]
	1076 Move X1, [X8]
	1077 Add X0, X31, 16
	1078 Call Enumerator<Object>.Dispose, X0
	1079 Compare X22, 0
	1080 JumpIfNotEqual {1083}
	1081 Move X0, X20
	1082 Call 0x1D2D690
	1083 Move X0, X22
	1084 Call 0x1C17F18
	1085 Call 0x1991590

Method: System.Object ParseAnonymousValue(System.String json)

Disassembly:
	0x0348ACC0 ADD X31, X31, 0xA0
	0x0348ACC4 RET
	0x0348ACC8 ADRP X8, 0xC91000
	0x0348ACCC LDR X0, [X25]
	0x0348ACD0 LDR X8, [X8 + 0xA80]
	0x0348ACD4 LDR W9, [X0 + 0xE0]
	0x0348ACD8 LDR X22, [X8]
	0x0348ACDC CBNZ W9, 0x348ACE4
	0x0348ACE0 BL 0x1C16DFC
	0x0348ACE4 MOV X0, X22
	0x0348ACE8 MOV X1, X31
	0x0348ACEC BL 0x338C698
	0x0348ACF0 MOV X1, X0
	0x0348ACF4 MOV X0, X21
	0x0348ACF8 MOV X2, X31
	0x0348ACFC BL 0x3395194
	0x0348AD00 TBZ X0, 0x0, 0x348AD6C
	0x0348AD04 ADRP X8, 0xC69000
	0x0348AD08 LDR X8, [X8 + 0xA90]
	0x0348AD0C LDR X9, [X20]
	0x0348AD10 LDR X1, [X8]
	0x0348AD14 LDR X8, [X9 + 0x40]
	0x0348AD18 LDR X9, [X1 + 0x40]
	0x0348AD1C CMP X8, X9
	0x0348AD20 B.NE 0x348B5D4
	0x0348AD24 MOV X0, X20
	0x0348AD28 BL 0x1C16E08
	0x0348AD2C ADRP X8, 0xC6B000
	0x0348AD30 LDR V0, [X0]
	0x0348AD34 LDR X8, [X8 + 0xC48]
	0x0348AD38 STR S0, [X31 + 0x1C]
	0x0348AD3C LDR X0, [X8]
	0x0348AD40 LDR W8, [X0 + 0xE0]
	0x0348AD44 CBNZ W8, 0x348AD4C
	0x0348AD48 BL 0x1C16DFC
	0x0348AD4C MOV X0, X31
	0x0348AD50 BL 0x3338524
	0x0348AD54 MOV X1, X0
	0x0348AD58 ADD X0, X31, 0x1C
	0x0348AD5C MOV X2, X31
	0x0348AD60 BL 0x338FEA0
	0x0348AD64 CBNZ X19, 0x348AEC8
	0x0348AD68 B 0x348B648
	0x0348AD6C ADRP X8, 0xC91000
	0x0348AD70 LDR X0, [X25]
	0x0348AD74 LDR X8, [X8 + 0xA78]
	0x0348AD78 LDR W9, [X0 + 0xE0]
	0x0348AD7C LDR X22, [X8]
	0x0348AD80 CBNZ W9, 0x348AD88
	0x0348AD84 BL 0x1C16DFC
	0x0348AD88 MOV X0, X22
	0x0348AD8C MOV X1, X31
	0x0348AD90 BL 0x338C698
	0x0348AD94 MOV X1, X0
	0x0348AD98 MOV X0, X21
	0x0348AD9C MOV X2, X31
	0x0348ADA0 BL 0x3395194
	0x0348ADA4 TBZ X0, 0x0, 0x348AE10
	0x0348ADA8 ADRP X8, 0xC6C000
	0x0348ADAC LDR X8, [X8 + 0x978]
	0x0348ADB0 LDR X9, [X20]
	0x0348ADB4 LDR X1, [X8]
	0x0348ADB8 LDR X8, [X9 + 0x40]
	0x0348ADBC LDR X9, [X1 + 0x40]
	0x0348ADC0 CMP X8, X9
	0x0348ADC4 B.NE 0x348B5D4
	0x0348ADC8 MOV X0, X20
	0x0348ADCC BL 0x1C16E08
	0x0348ADD0 ADRP X8, 0xC6B000
	0x0348ADD4 LDR V0, [X0]
	0x0348ADD8 LDR X8, [X8 + 0xC48]
	0x0348ADDC STR D0, [X31 + 0x10]
	0x0348ADE0 LDR X0, [X8]
	0x0348ADE4 LDR W8, [X0 + 0xE0]
	0x0348ADE8 CBNZ W8, 0x348ADF0
	0x0348ADEC BL 0x1C16DFC
	0x0348ADF0 MOV X0, X31
	0x0348ADF4 BL 0x3338524
	0x0348ADF8 MOV X1, X0
	0x0348ADFC ADD X0, X31, 0x10
	0x0348AE00 MOV X2, X31
	0x0348AE04 BL 0x33662E0
	0x0348AE08 CBNZ X19, 0x348AEC8
	0x0348AE0C B 0x348B648
	0x0348AE10 ADRP X8, 0xC9B000
	0x0348AE14 LDR X0, [X25]
	0x0348AE18 LDR X8, [X8 + 0x140]
	0x0348AE1C LDR W9, [X0 + 0xE0]
	0x0348AE20 LDR X22, [X8]
	0x0348AE24 CBNZ W9, 0x348AE2C
	0x0348AE28 BL 0x1C16DFC
	0x0348AE2C MOV X0, X22
	0x0348AE30 MOV X1, X31
	0x0348AE34 BL 0x338C698
	0x0348AE38 MOV X1, X0
	0x0348AE3C MOV X0, X21
	0x0348AE40 MOV X2, X31
	0x0348AE44 BL 0x3395194
	0x0348AE48 TBZ X0, 0x0, 0x348AED0
	0x0348AE4C ADRP X21, 0xC91000
	0x0348AE50 LDR X21, [X21 + 0x5F0]
	0x0348AE54 LDR X8, [X20]
	0x0348AE58 LDR X1, [X21]
	0x0348AE5C LDR X8, [X8 + 0x40]
	0x0348AE60 LDR X9, [X1 + 0x40]
	0x0348AE64 CMP X8, X9
	0x0348AE68 B.NE 0x348B5D4
	0x0348AE6C MOV X0, X20
	0x0348AE70 BL 0x1C16E08
	0x0348AE74 ADRP X8, 0xC6B000
	0x0348AE78 LDR V0, [X0]
	0x0348AE7C LDR X8, [X8 + 0xC48]
	0x0348AE80 STR V0, [X31 + 0x2]
	0x0348AE84 LDR X0, [X8]
	0x0348AE88 LDR W8, [X0 + 0xE0]
	0x0348AE8C CBNZ W8, 0x348AE94
	0x0348AE90 BL 0x1C16DFC
	0x0348AE94 MOV X0, X31
	0x0348AE98 BL 0x3338524
	0x0348AE9C LDR X8, [X21]
	0x0348AEA0 MOV X20, X0
	0x0348AEA4 LDR W9, [X8 + 0xE0]
	0x0348AEA8 CBNZ W9, 0x348AEB4
	0x0348AEAC MOV X0, X8
	0x0348AEB0 BL 0x1C16DFC
	0x0348AEB4 ADD X0, X31, 0x20
	0x0348AEB8 MOV X1, X20
	0x0348AEBC MOV X2, X31
	0x0348AEC0 BL 0x33D74AC
	0x0348AEC4 CBZ X19, 0x348B648
	0x0348AEC8 MOV X1, X0
	0x0348AECC B 0x348AA94
	0x0348AED0 STR X23, [X31]
	0x0348AED4 ADRP X8, 0xC92000
	0x0348AED8 LDR X0, [X25]
	0x0348AEDC LDR X8, [X8 + 0x248]
	0x0348AEE0 LDR W9, [X0 + 0xE0]
	0x0348AEE4 LDR X22, [X8]
	0x0348AEE8 CBNZ W9, 0x348AEF0
	0x0348AEEC BL 0x1C16DFC
	0x0348AEF0 MOV X0, X22
	0x0348AEF4 MOV X1, X31
	0x0348AEF8 BL 0x338C698
	0x0348AEFC MOV X1, X0
	0x0348AF00 MOV X0, X21
	0x0348AF04 MOV X2, X31
	0x0348AF08 BL 0x3395194
	0x0348AF0C TBZ X0, 0x0, 0x348AF6C
	0x0348AF10 ADRP X8, 0xC69000
	0x0348AF14 LDR X8, [X8 + 0xB58]
	0x0348AF18 LDR X9, [X20]
	0x0348AF1C LDR X1, [X8]
	0x0348AF20 LDR X8, [X9 + 0x40]
	0x0348AF24 LDR X9, [X1 + 0x40]
	0x0348AF28 CMP X8, X9
	0x0348AF2C B.NE 0x348B5D4
	0x0348AF30 MOV X0, X20
	0x0348AF34 BL 0x1C16E08
	0x0348AF38 CBZ X19, 0x348B648
	0x0348AF3C LDRB W8, [X0]
	0x0348AF40 ADRP X9, 0xC73000
	0x0348AF44 ADRP X10, 0xC74000
	0x0348AF48 LDR X9, [X9 + 0xFF8]
	0x0348AF4C LDR X10, [X10]
	0x0348AF50 CMP W8, 0x0
	0x0348AF54 CSEL X8, X9, X10, EQ
	0x0348AF58 LDR X1, [X8]
	0x0348AF5C MOV X0, X19
	0x0348AF60 MOV X2, X31
	0x0348AF64 BL 0x32333E0
	0x0348AF68 B 0x348B560
	0x0348AF6C CBZ X21, 0x348B648
	0x0348AF70 LDR X8, [X21]
	0x0348AF74 MOV X0, X21
	0x0348AF78 LDR X9, [X8 + 0x588]
	0x0348AF7C LDR X1, [X8 + 0x590]
	0x0348AF80 BLR X9
	0x0348AF84 TBZ X0, 0x0, 0x348AFB4
	0x0348AF88 CBZ X19, 0x348B648
	0x0348AF8C MOVZ W1, 0x22
	0x0348AF90 MOV X0, X19
	0x0348AF94 MOV X2, X31
	0x0348AF98 BL 0x3233D30
	0x0348AF9C MOV X0, X19
	0x0348AFA0 MOV X1, X20
	0x0348AFA4 MOV X2, X31
	0x0348AFA8 BL 0x3233F90
	0x0348AFAC MOVZ W1, 0x22
	0x0348AFB0 B 0x348B554
	0x0348AFB4 ADRP X23, 0xC70000
	0x0348AFB8 LDR X23, [X23 + 0x2F8]
	0x0348AFBC MOV X0, X20
	0x0348AFC0 LDR X1, [X23]
	0x0348AFC4 BL 0x1C16E00
	0x0348AFC8 CBZ X0, 0x348B058
	0x0348AFCC CBZ X19, 0x348B648
	0x0348AFD0 MOVZ W1, 0x5B
	0x0348AFD4 MOV X0, X19
	0x0348AFD8 MOV X2, X31
	0x0348AFDC BL 0x3233D30
	0x0348AFE0 LDR X21, [X23]
	0x0348AFE4 MOV X0, X20
	0x0348AFE8 MOV X1, X21
	0x0348AFEC BL 0x1C16E00
	0x0348AFF0 CBZ X0, 0x348B8BC
	0x0348AFF4 ADRP X8, 0xC71000
	0x0348AFF8 LDR X8, [X8 + 0xDB8]
	0x0348AFFC LDR X23, [X23]
	0x0348B000 MOV X0, X20
	0x0348B004 LDR X22, [X8]
	0x0348B008 MOV X1, X23
	0x0348B00C BL 0x1C16E00
	0x0348B010 CBZ X0, 0x348B8C8
	0x0348B014 LDR X8, [X0]
	0x0348B018 MOV X21, X0
	0x0348B01C LDRH W9, [X8 + 0x12E]
	0x0348B020 CBZ X9, 0x348B044
	0x0348B024 LDR X10, [X8 + 0xB0]
	0x0348B028 ADD X10, X10, 0x8
	0x0348B02C LDUR X11, [X10 - 0x8]
	0x0348B030 CMP X11, X22
	0x0348B034 B.EQ 0x348B26C
	0x0348B038 SUBS X9, X9, 0x1
	0x0348B03C ADD X10, X10, 0x10
	0x0348B040 B.NE 0x348B02C
	0x0348B044 MOV X0, X21
	0x0348B048 MOV X1, X22
	0x0348B04C MOV W2, W31
	0x0348B050 BL 0x1C5C788
	0x0348B054 B 0x348B278
	0x0348B058 LDR X8, [X21]
	0x0348B05C MOV X0, X21
	0x0348B060 LDR X9, [X8 + 0x3C8]
	0x0348B064 LDR X1, [X8 + 0x3D0]
	0x0348B068 BLR X9
	0x0348B06C TBZ X0, 0x0, 0x348B134
	0x0348B070 LDR X8, [X21]
	0x0348B074 MOV X0, X21
	0x0348B078 LDR X9, [X8 + 0x448]
	0x0348B07C LDR X1, [X8 + 0x450]
	0x0348B080 BLR X9
	0x0348B084 ADRP X9, 0xC91000
	0x0348B088 LDR X8, [X25]
	0x0348B08C LDR X9, [X9 + 0x388]
	0x0348B090 MOV X22, X0
	0x0348B094 LDR W10, [X8 + 0xE0]
	0x0348B098 LDR X23, [X9]
	0x0348B09C CBNZ W10, 0x348B0A8
	0x0348B0A0 MOV X0, X8
	0x0348B0A4 BL 0x1C16DFC
	0x0348B0A8 MOV X0, X23
	0x0348B0AC MOV X1, X31
	0x0348B0B0 BL 0x338C698
	0x0348B0B4 MOV X1, X0
	0x0348B0B8 MOV X0, X22
	0x0348B0BC MOV X2, X31
	0x0348B0C0 BL 0x3395194
	0x0348B0C4 TBZ X0, 0x0, 0x348B134
	0x0348B0C8 LDR X8, [X21]
	0x0348B0CC MOV X0, X21
	0x0348B0D0 LDR X9, [X8 + 0x468]
	0x0348B0D4 LDR X1, [X8 + 0x470]
	0x0348B0D8 BLR X9
	0x0348B0DC CBZ X0, 0x348B648
	0x0348B0E0 LDR W8, [X0 + 0x18]
	0x0348B0E4 CBZ W8, 0x348B8A8
	0x0348B0E8 LDR X8, [X25]
	0x0348B0EC LDR X21, [X0 + 0x20]
	0x0348B0F0 LDR X22, [X24]
	0x0348B0F4 LDR W9, [X8 + 0xE0]
	0x0348B0F8 CBNZ W9, 0x348B104
	0x0348B0FC MOV X0, X8
	0x0348B100 BL 0x1C16DFC
	0x0348B104 MOV X0, X22
	0x0348B108 MOV X1, X31
	0x0348B10C BL 0x338C698
	0x0348B110 MOV X1, X0
	0x0348B114 MOV X0, X21
	0x0348B118 MOV X2, X31
	0x0348B11C BL 0x3395F0C
	0x0348B120 CBZ X19, 0x348B648
	0x0348B124 TBZ X0, 0x0, 0x348B568
	0x0348B128 ADRP X8, 0xC8F000
	0x0348B12C LDR X8, [X8 + 0x278]
	0x0348B130 B 0x348AF58
	0x0348B134 CBZ X19, 0x348B648
	0x0348B138 MOVZ W1, 0x7B
	0x0348B13C MOV X0, X19
	0x0348B140 MOV X2, X31
	0x0348B144 BL 0x3233D30
	0x0348B148 LDR X8, [X21]
	0x0348B14C MOVZ W1, 0x54
	0x0348B150 MOV X0, X21
	0x0348B154 LDR X9, [X8 + 0x688]
	0x0348B158 LDR X2, [X8 + 0x690]
	0x0348B15C BLR X9
	0x0348B160 CBZ X0, 0x348B648
	0x0348B164 LDR W8, [X0 + 0x18]
	0x0348B168 MOV X22, X0
	0x0348B16C CMP W8, 0x1
	0x0348B170 B.LT 0x348B414
	0x0348B174 ADRP X28, 0xC90000
	0x0348B178 ADRP X29, 0xCA6000
	0x0348B17C LDR X28, [X28 + 0xFD0]
	0x0348B180 LDR X29, [X29 + 0x298]
	0x0348B184 MOV W27, W31
	0x0348B188 MOVZ W26, 0x1
	0x0348B18C CMP W27, W8
	0x0348B190 B.CS 0x348B8A8
	0x0348B194 LDR X0, [X25]
	0x0348B198 ADD X8, X22, W27, 0x3, SXTW
	0x0348B19C LDR X23, [X8 + 0x20]
	0x0348B1A0 LDR X24, [X28]
	0x0348B1A4 LDR W8, [X0 + 0xE0]
	0x0348B1A8 CBNZ W8, 0x348B1B0
	0x0348B1AC BL 0x1C16DFC
	0x0348B1B0 MOV X0, X24
	0x0348B1B4 MOV X1, X31
	0x0348B1B8 BL 0x338C698
	0x0348B1BC CBZ X23, 0x348B648
	0x0348B1C0 LDR X8, [X23]
	0x0348B1C4 MOV X1, X0
	0x0348B1C8 MOVZ W2, 0x1
	0x0348B1CC MOV X0, X23
	0x0348B1D0 LDP X9, X3, [X8 + 0x1E8]
	0x0348B1D4 BLR X9
	0x0348B1D8 TBNZ X0, 0x0, 0x348B258
	0x0348B1DC LDR X8, [X23]
	0x0348B1E0 MOV X0, X23
	0x0348B1E4 MOV X1, X20
	0x0348B1E8 LDR X9, [X8 + 0x2C8]
	0x0348B1EC LDR X2, [X8 + 0x2D0]
	0x0348B1F0 BLR X9
	0x0348B1F4 CBZ X0, 0x348B258
	0x0348B1F8 MOV X24, X0
	0x0348B1FC TBNZ X26, 0x0, 0x348B210
	0x0348B200 MOVZ W1, 0x2C
	0x0348B204 MOV X0, X19
	0x0348B208 MOV X2, X31
	0x0348B20C BL 0x3233D30
	0x0348B210 MOVZ W1, 0x22
	0x0348B214 MOV X0, X19
	0x0348B218 MOV X2, X31
	0x0348B21C BL 0x3233D30
	0x0348B220 MOV X0, X23
	0x0348B224 BL 0x348BA78
	0x0348B228 MOV X1, X0
	0x0348B22C MOV X0, X19
	0x0348B230 MOV X2, X31
	0x0348B234 BL 0x32333E0
	0x0348B238 LDR X1, [X29]
	0x0348B23C MOV X0, X19
	0x0348B240 MOV X2, X31
	0x0348B244 BL 0x32333E0
	0x0348B248 MOV X0, X19
	0x0348B24C MOV X1, X24
	0x0348B250 BL 0x348A6B4
	0x0348B254 MOV W26, W31
	0x0348B258 LDR W8, [X22 + 0x18]
	0x0348B25C ADD W27, W27, 0x1
	0x0348B260 CMP W27, W8
	0x0348B264 B.LT 0x348B18C
	0x0348B268 B 0x348B418
	0x0348B26C LDRSW X9, [X10]
	0x0348B270 ADD X8, X8, X9, 0x4, LSL
	0x0348B274 ADD X0, X8, 0x138
	0x0348B278 LDP X8, X1, [X0]
	0x0348B27C MOV X0, X21
	0x0348B280 BLR X8
	0x0348B284 MOV X20, X0
	0x0348B288 CBZ X0, 0x348B8D4
	0x0348B28C ADRP X22, 0xC68000
	0x0348B290 LDR X22, [X22 + 0xE18]
	0x0348B294 MOVZ W23, 0x1
	0x0348B298 LDR X8, [X20]
	0x0348B29C LDR X1, [X22]
	0x0348B2A0 LDRH W9, [X8 + 0x12E]
	0x0348B2A4 CBZ X9, 0x348B2C8
	0x0348B2A8 LDR X10, [X8 + 0xB0]
	0x0348B2AC ADD X10, X10, 0x8
	0x0348B2B0 LDUR X11, [X10 - 0x8]
	0x0348B2B4 CMP X11, X1
	0x0348B2B8 B.EQ 0x348B2D8
	0x0348B2BC SUBS X9, X9, 0x1
	0x0348B2C0 ADD X10, X10, 0x10
	0x0348B2C4 B.NE 0x348B2B0
	0x0348B2C8 MOV X0, X20
	0x0348B2CC MOV W2, W31
	0x0348B2D0 BL 0x1C5C788
	0x0348B2D4 B 0x348B2E4
	0x0348B2D8 LDRSW X9, [X10]
	0x0348B2DC ADD X8, X8, X9, 0x4, LSL
	0x0348B2E0 ADD X0, X8, 0x138
	0x0348B2E4 LDP X8, X1, [X0]
	0x0348B2E8 MOV X0, X20
	0x0348B2EC BLR X8
	0x0348B2F0 TBZ X0, 0x0, 0x348B37C
	0x0348B2F4 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X20, 0xF54000
	010 Move W8, [X20+2312]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {84}
	016 Move X0, 0xC6A000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move X0, 0xC6C000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move X0, 0xC6C000
	023 Move X0, [X0+3144]
	024 Call 0x1C17CF4
	025 Move X0, 0xC6A000
	026 Move X0, [X0+1808]
	027 Call 0x1C17CF4
	028 Move X0, 0xCA8000
	029 Move X0, [X0+568]
	030 Call 0x1C17CF4
	031 Move X0, 0xC6A000
	032 Move X0, [X0+1824]
	033 Call 0x1C17CF4
	034 Move X0, 0xC6D000
	035 Move X0, [X0+2424]
	036 Call 0x1C17CF4
	037 Move X0, 0xC91000
	038 Move X0, [X0+4040]
	039 Call 0x1C17CF4
	040 Move X0, 0xC91000
	041 Move X0, [X0+4048]
	042 Call 0x1C17CF4
	043 Move X0, 0xC91000
	044 Move X0, [X0+4056]
	045 Call 0x1C17CF4
	046 Move X0, 0xC6A000
	047 Move X0, [X0+1880]
	048 Call 0x1C17CF4
	049 Move X0, 0xC72000
	050 Move X0, [X0+3864]
	051 Call 0x1C17CF4
	052 Move X0, 0xC91000
	053 Move X0, [X0+4064]
	054 Call 0x1C17CF4
	055 Move X0, 0xCA3000
	056 Move X0, [X0+2312]
	057 Call 0x1C17CF4
	058 Move X0, 0xC6B000
	059 Move X0, [X0+456]
	060 Call 0x1C17CF4
	061 Move X0, 0xC92000
	062 Move X0, [X0+2904]
	063 Call 0x1C17CF4
	064 Move X0, 0xC6F000
	065 Move X0, [X0+1856]
	066 Call 0x1C17CF4
	067 Move X0, 0xC6C000
	068 Move X0, [X0+632]
	069 Call 0x1C17CF4
	070 Move X0, 0xC9E000
	071 Move X0, [X0+2040]
	072 Call 0x1C17CF4
	073 Move X0, 0xC74000
	074 Move X0, [X0+4088]
	075 Call 0x1C17CF4
	076 Move X0, 0xC75000
	077 Move X0, [X0]
	078 Call 0x1C17CF4
	079 Move X0, 0xC73000
	080 Move X0, [X0+1936]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X20+2312], W8
	084 Move [X31+24], X31
	085 Move [X31+32], X31
	086 Move [X31+40], X31
	087 Move [X31+56], X31
	088 Move [X31+20], W31
	089 Compare X19, 0
	090 JumpIfEqual {386}
	091 Move W8, [X19+16]
	092 Compare W8, 0
	093 JumpIfEqual {242}
	094 Move X0, X19
	095 Move W1, W31
	096 Move X2, X31
	097 Call String.get_Chars, X0, X1
	098 And W8, W0, 0xFFFF
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W8, [X19+16]
	101 Move X0, X19
	102 Move X2, X31
	103 Subtract W1, W8, 1
	104 Call String.get_Chars, X0, X1
	105 And W8, W0, 0xFFFF
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, X19
	108 Call JsonParser.Split, X0
	109 Compare X0, 0
	110 JumpIfEqual {386}
	111 Move W21, [X0+24]
	112 Move X20, X0
	113 Move TEMP, X21
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {242}
	117 Move X8, 0xC6A000
	118 Move X8, [X8+1824]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X8, 0xCA8000
	122 Move X8, [X8+568]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X19, X0
	125 Move X2, [X8]
	126 NotImplemented "Instruction CINC not yet implemented."
	127 NotImplemented "Instruction SBFM not yet implemented."
	128 Call Dictionary`2<Object, Object>..ctor, X0, X1
	129 Move W8, [X20+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X23, 0xC92000
	132 Move X24, 0xC6A000
	133 Move X23, [X23+2904]
	134 Move X24, [X24+1808]
	135 Move W21, W31
	136 Move X2, [X23]
	137 Move X0, X20
	138 Move W1, W21
	139 Call List`1<Object>.get_Item, X0, X1
	140 Move X2, [X23]
	141 Move X22, X0
	142 Move X0, X20
	143 Move W1, W21
	144 Call List`1<Object>.get_Item, X0, X1
	145 Compare X0, 0
	146 JumpIfEqual {386}
	147 Compare X22, 0
	148 JumpIfEqual {386}
	149 Move W8, [X0+16]
	150 Move W1, 1
	151 Move X0, X22
	152 Move X3, X31
	153 Subtract W2, W8, 2
	154 Call String.Substring, X0, X1, X2
	155 Move X2, [X23]
	156 Add W21, W21, 1
	157 Move X22, X0
	158 Move X0, X20
	159 Move W1, W21
	160 Call List`1<Object>.get_Item, X0, X1
	161 Call JsonParser.ParseAnonymousValue, X0
	162 Compare X19, 0
	163 JumpIfEqual {386}
	164 Move X3, [X24]
	165 Move X2, X0
	166 Move X0, X19
	167 Move X1, X22
	168 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	169 Move W8, [X20+24]
	170 Add W21, W21, 1
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, X19
	173 Move W1, W31
	174 Move X2, X31
	175 Call String.get_Chars, X0, X1
	176 And W8, W0, 0xFFFF
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W8, [X19+16]
	179 Move X0, X19
	180 Move X2, X31
	181 Subtract W1, W8, 1
	182 Call String.get_Chars, X0, X1
	183 And W8, W0, 0xFFFF
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, X19
	186 Call JsonParser.Split, X0
	187 Compare X0, 0
	188 JumpIfEqual {386}
	189 Move X8, 0xC6F000
	190 Move W21, [X0+24]
	191 Move X8, [X8+1856]
	192 Move X20, X0
	193 Move X0, [X8]
	194 Call 0x1C17F10
	195 Move X8, 0xCA3000
	196 Move X8, [X8+2312]
	197 Move W1, W21
	198 Move X19, X0
	199 Move X2, [X8]
	200 Call List`1<Object>..ctor, X0, X1
	201 Move X8, 0xC91000
	202 Move X8, [X8+4064]
	203 Move X0, X20
	204 Move X1, [X8]
	205 Add X8, X31, 24
	206 Call List`1<Object>.GetEnumerator, X0
	207 Move X20, 0xC91000
	208 Move X21, 0xC72000
	209 Move X20, [X20+4048]
	210 Move X21, [X21+3864]
	211 Move X1, [X20]
	212 Add X0, X31, 24
	213 Call Enumerator<Object>.MoveNext, X0
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {330}
	218 Move X0, [X31+40]
	219 Call JsonParser.ParseAnonymousValue, X0
	220 Move X1, X0
	221 Compare X19, 0
	222 JumpIfEqual {387}
	223 Move W10, [X19+28]
	224 Move X8, [X19+16]
	225 Move X9, [X21]
	226 Add W10, W10, 1
	227 Move [X19+28], W10
	228 Compare X8, 0
	229 JumpIfEqual {388}
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Move W11, [X8+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Add W9, W10, 1
	234 Add X8, X8, X10
	235 Move [X19+24], W9
	236 Move [X8+32], X1
	237 Move X8, [X9+32]
	238 Move X8, [X8+192]
	239 Move X2, [X8+112]
	240 Move X0, X19
	241 Call List`1<Object>.AddWithResize, X0, X1
	242 Move X19, X31
	243 Move X0, X19
	244 Move W1, W31
	245 Move X2, X31
	246 Call String.get_Chars, X0, X1
	247 And W8, W0, 0xFFFF
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move W8, [X19+16]
	250 Move X0, X19
	251 Move X2, X31
	252 Subtract W1, W8, 1
	253 Call String.get_Chars, X0, X1
	254 And W8, W0, 0xFFFF
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move W8, [X19+16]
	257 Move W1, 1
	258 Move X0, X19
	259 Move X3, X31
	260 Subtract W2, W8, 2
	261 Call String.Substring, X0, X1, X2
	262 Compare X0, 0
	263 JumpIfEqual {386}
	264 Move X8, 0xC6B000
	265 Move X8, [X8+632]
	266 Move X9, 0xC9D000
	267 Move X3, X31
	268 Move X8, [X8]
	269 Move X8, [X8+184]
	270 Move X9, [X9+2040]
	271 Move X2, [X8]
	272 Move X1, [X9]
	273 Call String.Replace, X0, X1, X2
	274 Move X0, X19
	275 Move W1, W31
	276 Move X2, X31
	277 Call String.get_Chars, X0, X1
	278 Move X8, 0xC6B000
	279 Move X8, [X8+368]
	280 Move W20, W0
	281 Move X8, [X8]
	282 Move W9, [X8+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X8
	286 Call 0x1C17DFC
	287 Move W0, W20
	288 Move X1, X31
	289 Call Char.IsDigit, X0
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {300}
	294 Move X0, X19
	295 Move W1, W31
	296 Move X2, X31
	297 Call String.get_Chars, X0, X1
	298 And W8, W0, 0xFFFF
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X8, 0xC72000
	301 Move X8, [X8+1936]
	302 Move X0, X19
	303 Move X2, X31
	304 Move X1, [X8]
	305 Call String.Contains, X0, X1
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {335}
	310 Move X8, 0xC6B000
	311 Move X8, [X8+3144]
	312 Move X0, [X8]
	313 Move W8, [X0+224]
	314 Compare W8, 0
	315 JumpIfNotEqual {317}
	316 Call 0x1C17DFC
	317 Move X0, X31
	318 Call CultureInfo.get_InvariantCulture
	319 Move X2, X0
	320 Add X3, X31, 56
	321 Move W1, 167
	322 Move X0, X19
	323 Move X4, X31
	324 Call Double.TryParse, X0, X1, X2, X3
	325 Move X8, 0xC6C000
	326 Move V0, [X31+56]
	327 Move X8, [X8+2424]
	328 Move [X31+8], D0
	329 Move X0, [X8]
	330 Move X8, 0xC90000
	331 Move X8, [X8+4040]
	332 Add X0, X31, 24
	333 Move X1, [X8]
	334 Call Enumerator<Object>.Dispose, X0
	335 Add X1, X31, 20
	336 Move X0, X19
	337 Move X2, X31
	338 Call Int32.TryParse, X0, X1
	339 Move X9, 0xC69000
	340 Move W8, [X31+20]
	341 Move X9, [X9+1880]
	342 Move [X31+8], W8
	343 Move X0, [X9]
	344 Move X8, 0xC74000
	345 Move X8, [X8]
	346 Move X0, X19
	347 Move X2, X31
	348 Move X1, [X8]
	349 Call String.op_Equality, X0, X1
	350 Move TEMP, X0
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfNotEqual {372}
	354 Move X8, 0xC69000
	355 Move X8, [X8+2904]
	356 Move X0, [X8]
	357 Move W8, 1
	358 Move [X31+8], W8
	359 Add X1, X31, 8
	360 Call 0x1C17E04
	361 Move X19, X0
	362 Move X0, X19
	363 Move X20, [X31+96]
	364 Move X19, [X31+104]
	365 Move X22, [X31+80]
	366 Move X21, [X31+88]
	367 Move X24, [X31+64]
	368 Move X23, [X31+72]
	369 Move X30, [X31+48]
	370 Add X31, X31, 112
	371 Return X0
	372 Move X8, 0xC73000
	373 Move X8, [X8+4088]
	374 Move X0, X19
	375 Move X2, X31
	376 Move X1, [X8]
	377 Call String.op_Equality, X0, X1
	378 Move X19, X31
	379 Move TEMP, X0
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfNotEqual {362}
	383 Move X8, 0xC69000
	384 Move X8, [X8+2904]
	385 Move [X31+8], W31
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Move X20, X0
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X0, X20
	392 Call 0x3EB2AD0
	393 Move X21, [X0]
	394 Call 0x3EB2AE0
	395 Move X8, 0xC90000
	396 Move X8, [X8+4040]
	397 Add X0, X31, 24
	398 Move X1, [X8]
	399 Call Enumerator<Object>.Dispose, X0
	400 Compare X21, 0
	401 JumpIfEqual {362}
	402 Move X0, X21
	403 Call 0x1C17F18
	404 Move X21, X31
	405 Move X20, X0
	406 Move X8, 0xC90000
	407 Move X8, [X8+4040]
	408 Move X1, [X8]
	409 Add X0, X31, 24
	410 Call Enumerator<Object>.Dispose, X0
	411 Compare X21, 0
	412 JumpIfNotEqual {415}
	413 Move X0, X20
	414 Call 0x1D2D690
	415 Move X0, X21
	416 Call 0x1C17F18
	417 Call 0x1991590

Method: System.Collections.Generic.Dictionary`2<System.String, T> CreateMemberNameDictionary(System.Collections.Generic.IEnumerable`1<T> members)

Disassembly:
	0x0220E804 BL 0x2AA4804
	0x0220E808 LDR X0, [X23]
	0x0220E80C BL 0x1C16D0C
	0x0220E810 STR X21, [X0 + 0x10]
	0x0220E814 LDR X0, [X23]
	0x0220E818 BL 0x1C16D0C
	0x0220E81C LDR X0, [X23]
	0x0220E820 BL 0x1C16D0C
	0x0220E824 LDR X8, [X0 + 0x8]
	0x0220E828 CBNZ X8, 0x220E85C
	0x0220E82C ADRP X8, 0x1EE5000
	0x0220E830 LDR X8, [X8 + 0x8F0]
	0x0220E834 LDR X0, [X8]
	0x0220E838 BL 0x1C16F10
	0x0220E83C MOV X1, X31
	0x0220E840 MOV X21, X0
	0x0220E844 BL 0x3231AC4
	0x0220E848 LDR X0, [X23]
	0x0220E84C BL 0x1C16D0C
	0x0220E850 STR X21, [X0 + 0x8]
	0x0220E854 LDR X0, [X23]
	0x0220E858 BL 0x1C16D0C
	0x0220E85C LDR X0, [X23]
	0x0220E860 BL 0x1C16D0C
	0x0220E864 LDR X8, [X0]
	0x0220E868 CBNZ X8, 0x220E8A4
	0x0220E86C ADRP X8, 0x1F0E000
	0x0220E870 LDR X8, [X8 + 0x8]
	0x0220E874 LDR X0, [X8]
	0x0220E878 BL 0x1C16F10
	0x0220E87C ADRP X8, 0x1F0E000
	0x0220E880 LDR X8, [X8]
	0x0220E884 MOV X21, X0
	0x0220E888 LDR X1, [X8]
	0x0220E88C BL 0x2601D04
	0x0220E890 LDR X0, [X23]
	0x0220E894 BL 0x1C16D0C
	0x0220E898 STR X21, [X0]
	0x0220E89C LDR X0, [X23]
	0x0220E8A0 BL 0x1C16D0C
	0x0220E8A4 LDR X0, [X23]
	0x0220E8A8 BL 0x1C16D0C
	0x0220E8AC LDR X0, [X0 + 0x8]
	0x0220E8B0 CBZ X0, 0x220EA1C
	0x0220E8B4 MOV W1, W31
	0x0220E8B8 MOV X2, X31
	0x0220E8BC BL 0x3232ADC
	0x0220E8C0 CBZ X20, 0x220EA1C
	0x0220E8C4 LDR W8, [X20 + 0x10]
	0x0220E8C8 CMP W8, 0x1
	0x0220E8CC B.LT 0x220E964
	0x0220E8D0 ADRP X24, 0x1EE7000
	0x0220E8D4 LDR X24, [X24 + 0x170]
	0x0220E8D8 MOV W21, W31
	0x0220E8DC MOV X0, X20
	0x0220E8E0 MOV W1, W21
	0x0220E8E4 MOV X2, X31
	0x0220E8E8 BL 0x3222A1C
	0x0220E8EC AND W8, W0, 0xFFFF
	0x0220E8F0 CMP W8, 0x22
	0x0220E8F4 B.NE 0x220E914
	0x0220E8F8 MOVZ W0, 0x1
	0x0220E8FC MOV W1, W21
	0x0220E900 MOV X2, X20
	0x0220E904 MOV X3, X31
	0x0220E908 BL 0x34887D0
	0x0220E90C MOV W21, W0
	0x0220E910 B 0x220E954
	0x0220E914 MOV W22, W0
	0x0220E918 LDR X0, [X24]
	0x0220E91C LDR W8, [X0 + 0xE0]
	0x0220E920 CBNZ W8, 0x220E928
	0x0220E924 BL 0x1C16DFC
	0x0220E928 MOV W0, W22
	0x0220E92C MOV X1, X31
	0x0220E930 BL 0x3317FCC
	0x0220E934 TBNZ X0, 0x0, 0x220E954
	0x0220E938 LDR X0, [X23]
	0x0220E93C BL 0x1C16D0C
	0x0220E940 LDR X0, [X0 + 0x8]
	0x0220E944 CBZ X0, 0x220EA1C
	0x0220E948 MOV W1, W22
	0x0220E94C MOV X2, X31
	0x0220E950 BL 0x3233D30
	0x0220E954 LDR W8, [X20 + 0x10]
	0x0220E958 ADD W21, W21, 0x1
	0x0220E95C CMP W21, W8
	0x0220E960 B.LT 0x220E8DC
	0x0220E964 ADRP X8, 0x1EE5000
	0x0220E968 LDR X8, [X8 + 0x6C0]
	0x0220E96C LDR X0, [X8]
	0x0220E970 LDR X8, [X19 + 0x38]
	0x0220E974 LDR W9, [X0 + 0xE0]
	0x0220E978 LDR X20, [X8]
	0x0220E97C CBNZ W9, 0x220E984
	0x0220E980 BL 0x1C16DFC
	0x0220E984 MOV X0, X20
	0x0220E988 MOV X1, X31
	0x0220E98C BL 0x338C698
	0x0220E990 LDR X8, [X23]
	0x0220E994 MOV X20, X0
	0x0220E998 MOV X0, X8
	0x0220E99C BL 0x1C16D0C
	0x0220E9A0 LDR X0, [X0 + 0x8]
	0x0220E9A4 CBZ X0, 0x220EA1C
	0x0220E9A8 LDR X8, [X0]
	0x0220E9AC LDP X9, X1, [X8 + 0x168]
	0x0220E9B0 BLR X9
	0x0220E9B4 MOV X1, X0
	0x0220E9B8 MOV X0, X20
	0x0220E9BC MOV X2, X31
	0x0220E9C0 BL 0x3488D2C
	0x0220E9C4 LDR X8, [X19 + 0x38]
	0x0220E9C8 MOV X20, X0
	0x0220E9CC LDR X19, [X8 + 0x8]
	0x0220E9D0 LDRB W8, [X19 + 0x135]
	0x0220E9D4 TBNZ X8, 0x0, 0x220E9E4
	0x0220E9D8 MOV X0, X19
	0x0220E9DC BL 0x1C5C684
	0x0220E9E0 MOV X19, X0
	0x0220E9E4 CBZ X20, 0x220EA04
	0x0220E9E8 MOV X0, X20
	0x0220E9EC MOV X1, X19
	0x0220E9F0 BL 0x1C16E00
	0x0220E9F4 CBNZ X0, 0x220EA08
	0x0220E9F8 MOV X0, X20
	0x0220E9FC MOV X1, X19
	0x0220EA00 BL 0x1C171E0
	0x0220EA04 MOV X0, X31
	0x0220EA08 LDP X20, X19, [X31 + 0x30]
	0x0220EA0C LDP X22, X21, [X31 + 0x20]
	0x0220EA10 LDP X24, X23, [X31 + 0x10]
	0x0220EA14 LDR X30, [X31], #0x40
	0x0220EA18 RET
	0x0220EA1C BL 0x1C16F20
	0x0220EA20 STP X29, X30, [X31 - 0x60]!
	0x0220EA24 STP X28, X27, [X31 + 0x10]
	0x0220EA28 STP X26, X25, [X31 + 0x20]
	0x0220EA2C STP X24, X23, [X31 + 0x30]
	0x0220EA30 STP X22, X21, [X31 + 0x40]
	0x0220EA34 STP X20, X19, [X31 + 0x50]
	0x0220EA38 ADD X29, X31, 0x0
	0x0220EA3C SUB X31, X31, 0x10
	0x0220EA40 MRS X26, 0xC000
	0x0220EA44 LDR X8, [X26 + 0x28]
	0x0220EA48 MOV X20, X2
	0x0220EA4C MOV X19, X1
	0x0220EA50 MOV X22, X0
	0x0220EA54 STUR X8, [X29 - 0x8]
	0x0220EA58 LDR X8, [X2 + 0x38]
	0x0220EA5C CBNZ X8, 0x220EAEC
	0x0220EA60 ADRP X0, 0x1EE7000
	0x0220EA64 LDR X0, [X0 + 0x170]
	0x0220EA68 BL 0x1C16CF4
	0x0220EA6C ADRP X0, 0x1F0D000
	0x0220EA70 LDR X0, [X0 + 0xFD8]
	0x0220EA74 BL 0x1C16CF4
	0x0220EA78 ADRP X0, 0x1F0D000
	0x0220EA7C LDR X0, [X0 + 0xFE0]
	0x0220EA80 BL 0x1C16CF4
	0x0220EA84 ADRP X0, 0x1F0D000
	0x0220EA88 LDR X0, [X0 + 0xFE8]
	0x0220EA8C BL 0x1C16CF4
	0x0220EA90 ADRP X0, 0x1F0D000
	0x0220EA94 LDR X0, [X0 + 0xFF0]
	0x0220EA98 BL 0x1C16CF4
	0x0220EA9C ADRP X0, 0x1F0D000
	0x0220EAA0 LDR X0, [X0 + 0xFF8]
	0x0220EAA4 BL 0x1C16CF4
	0x0220EAA8 ADRP X0, 0x1F0E000
	0x0220EAAC LDR X0, [X0]
	0x0220EAB0 BL 0x1C16CF4
	0x0220EAB4 ADRP X0, 0x1F0E000
	0x0220EAB8 LDR X0, [X0 + 0x8]
	0x0220EABC BL 0x1C16CF4
	0x0220EAC0 ADRP X0, 0x1EE5000
	0x0220EAC4 LDR X0, [X0 + 0x8F0]
	0x0220EAC8 BL 0x1C16CF4
	0x0220EACC ADRP X0, 0x1EE5000
	0x0220EAD0 LDR X0, [X0 + 0x6C0]
	0x0220EAD4 BL 0x1C16CF4
	0x0220EAD8 LDR X8, [X20 + 0x38]
	0x0220EADC CBNZ X8, 0x220EAEC
	0x0220EAE0 MOV X0, X20
	0x0220EAE4 BL 0x1C5C6E0
	0x0220EAE8 LDR X8, [X20 + 0x38]
	0x0220EAEC LDR X8, [X8 + 0x8]
	0x0220EAF0 LDR W21, [X8 + 0xFC]
	0x0220EAF4 ADD X8, X31, 0x0
	0x0220EAF8 ADD X9, X21, 0xF
	0x0220EAFC AND X9, X9, 0x1FFFFFFFF
	0x0220EB00 SUB X23, X8, X9
	0x0220EB04 ADD X31, X23, 0x0
	0x0220EB08 ADRP X27, 0x1F0D000
	0x0220EB0C LDR X27, [X27 + 0xFF8]
	0x0220EB10 LDR X0, [X27]
	0x0220EB14 BL 0x1C16D0C
	0x0220EB18 LDR X8, [X0 + 0x18]
	0x0220EB1C CBNZ X8, 0x220EB58
	0x0220EB20 ADRP X8, 0x1F0D000
	0x0220EB24 LDR X8, [X8 + 0xFF0]
	0x0220EB28 LDR X0, [X8]
	0x0220EB2C BL 0x1C16F10
	0x0220EB30 ADRP X8, 0x1F0D000
	0x0220EB34 LDR X8, [X8 + 0xFD8]
	0x0220EB38 MOV X24, X0
	0x0220EB3C LDR X1, [X8]
	0x0220EB40 BL 0x2AA4804
	0x0220EB44 LDR X0, [X27]
	0x0220EB48 BL 0x1C16D0C
	0x0220EB4C STR X24, [X0 + 0x18]
	0x0220EB50 LDR X0, [X27]
	0x0220EB54 BL 0x1C16D0C
	0x0220EB58 LDR X0, [X27]
	0x0220EB5C BL 0x1C16D0C
	0x0220EB60 LDR X8, [X0 + 0x10]
	0x0220EB64 CBNZ X8, 0x220EBA0
	0x0220EB68 ADRP X8, 0x1F0D000
	0x0220EB6C LDR X8, [X8 + 0xFE8]
	0x0220EB70 LDR X0, [X8]
	0x0220EB74 BL 0x1C16F10
	0x0220EB78 ADRP X8, 0x1F0D000
	0x0220EB7C LDR X8, [X8 + 0xFE0]
	0x0220EB80 MOV X24, X0
	0x0220EB84 LDR X1, [X8]
	0x0220EB88 BL 0x2AA4804
	0x0220EB8C LDR X0, [X27]
	0x0220EB90 BL 0x1C16D0C
	0x0220EB94 STR X24, [X0 + 0x10]
	0x0220EB98 LDR X0, [X27]
	0x0220EB9C BL 0x1C16D0C
	0x0220EBA0 LDR X0, [X27]
	0x0220EBA4 BL 0x1C16D0C
	0x0220EBA8 LDR X8, [X0 + 0x8]
	0x0220EBAC CBNZ X8, 0x220EBE0
	0x0220EBB0 ADRP X8, 0x1EE5000
	0x0220EBB4 LDR X8, [X8 + 0x8F0]
	0x0220EBB8 LDR X0, [X8]
	0x0220EBBC BL 0x1C16F10
	0x0220EBC0 MOV X1, X31
	0x0220EBC4 MOV X24, X0
	0x0220EBC8 BL 0x3231AC4
	0x0220EBCC LDR X0, [X27]
	0x0220EBD0 BL 0x1C16D0C
	0x0220EBD4 STR X24, [X0 + 0x8]
	0x0220EBD8 LDR X0, [X27]
	0x0220EBDC BL 0x1C16D0C
	0x0220EBE0 LDR X0, [X27]
	0x0220EBE4 BL 0x1C16D0C
	0x0220EBE8 LDR X8, [X0]
	0x0220EBEC CBNZ X8, 0x220EC28
	0x0220EBF0 ADRP X8, 0x1F0E000
	0x0220EBF4 LDR X8, [X8 + 0x8]
	0x0220EBF8 LDR X0, [X8]
	0x0220EBFC BL 0x1C16F10
	0x0220EC00 ADRP X8, 0x1F0E000
	0x0220EC04 LDR X8, [X8]
	0x0220EC08 MOV X24, X0
	0x0220EC0C LDR X1, [X8]
	0x0220EC10 BL 0x2601D04
	0x0220EC14 LDR X0, [X27]
	0x0220EC18 BL 0x1C16D0C
	0x0220EC1C STR X24, [X0]
	0x0220EC20 LDR X0, [X27]
	0x0220EC24 BL 0x1C16D0C
	0x0220EC28 LDR X0, [X27]
	0x0220EC2C BL 0x1C16D0C
	0x0220EC30 LDR X0, [X0 + 0x8]
	0x0220EC34 CBZ X0, 0x220EDB4
	0x0220EC38 MOV W1, W31
	0x0220EC3C MOV X2, X31
	0x0220EC40 BL 0x3232ADC
	0x0220EC44 CBZ X22, 0x220EDB4
	0x0220EC48 LDR W8, [X22 + 0x10]
	0x0220EC4C CMP W8, 0x1
	0x0220EC50 B.LT 0x220ECE8
	0x0220EC54 ADRP X28, 0x1EE7000
	0x0220EC58 LDR X28, [X28 + 0x170]
	0x0220EC5C MOV W24, W31
	0x0220EC60 MOV X0, X22
	0x0220EC64 MOV W1, W24
	0x0220EC68 MOV X2, X31
	0x0220EC6C BL 0x3222A1C
	0x0220EC70 AND W8, W0, 0xFFFF
	0x0220EC74 CMP W8, 0x22
	0x0220EC78 B.NE 0x220EC98
	0x0220EC7C MOVZ W0, 0x1
	0x0220EC80 MOV W1, W24
	0x0220EC84 MOV X2, X22
	0x0220EC88 MOV X3, X31
	0x0220EC8C BL 0x34887D0
	0x0220EC90 MOV W24, W0
	0x0220EC94 B 0x220ECD8
	0x0220EC98 MOV W25, W0
	0x0220EC9C LDR X0, [X28]
	0x0220ECA0 LDR W8, [X0 + 0xE0]
	0x0220ECA4 CBNZ W8, 0x220ECAC
	0x0220ECA8 BL 0x1C16DFC
	0x0220ECAC MOV W0, W25
	0x0220ECB0 MOV X1, X31
	0x0220ECB4 BL 0x3317FCC
	0x0220ECB8 TBNZ X0, 0x0, 0x220ECD8
	0x0220ECBC LDR X0, [X27]
	0x0220ECC0 BL 0x1C16D0C
	0x0220ECC4 LDR X0, [X0 + 0x8]
	0x0220ECC8 CBZ X0, 0x220EDB4
	0x0220ECCC MOV W1, W25

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X8, [X1+56]
	014 Move X21, X1
	015 Move X20, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {42}
	018 Move X0, 0x1F0E000
	019 Move X0, [X0+4032]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F0E000
	022 Move X0, [X0+4040]
	023 Call 0x1C17CF4
	024 Move X0, 0x1EE6000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x1EE6000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0x1F0E000
	031 Move X0, [X0+4048]
	032 Call 0x1C17CF4
	033 Move X0, 0x1EE6000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X8, [X21+56]
	037 Compare X8, 0
	038 JumpIfNotEqual {42}
	039 Move X0, X21
	040 Call 0x1C5D6E0
	041 Move X8, [X21+56]
	042 Move X0, [X8]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Call 0x1C17F10
	050 Move X8, [X21+56]
	051 Move X19, X0
	052 Move X1, [X8+8]
	053 Call Dictionary`2<Object, Object>..ctor, X0
	054 Compare X20, 0
	055 JumpIfEqual {286}
	056 Move X8, [X21+56]
	057 Move X1, [X8+16]
	058 Move W8, [X1+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {66}
	063 Move X0, X1
	064 Call 0x1C5D684
	065 Move X1, X0
	066 Move X8, [X20]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X20
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X20
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X20, X0
	087 Compare X0, 0
	088 JumpIfEqual {287}
	089 Move X25, 0x1EE6000
	090 Move X26, 0x1F0E000
	091 Move X27, 0x1EE6000
	092 Move X28, 0x1F0E000
	093 Move X29, 0x1F0E000
	094 Move X25, [X25+3608]
	095 Move X26, [X26+4048]
	096 Move X27, [X27+1728]
	097 Move X28, [X28+4032]
	098 Move X29, [X29+4040]
	099 Move X8, [X20]
	100 Move X1, [X25]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X20
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X20
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {239}
	124 Move X8, [X21+56]
	125 Move X1, [X8+32]
	126 Move W8, [X1+309]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {134}
	131 Move X0, X1
	132 Call 0x1C5D684
	133 Move X1, X0
	134 Move X8, [X20]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X20
	145 Move W2, W31
	146 Call 0x1C5D788
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X20
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X22, X0
	155 Move X0, [X27]
	156 Move X23, [X26]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X0, X23
	162 Move X1, X31
	163 Call Type.GetTypeFromHandle, X0
	164 Move X1, X0
	165 Compare X22, 0
	166 JumpIfEqual {281}
	167 Move X8, [X22]
	168 Move X9, [X8+488]
	169 Move X3, [X8+496]
	170 Move W2, 1
	171 Move X0, X22
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {99}
	177 Move X8, [X22]
	178 Move X9, [X8+424]
	179 Move X1, [X8+432]
	180 Move X0, X22
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X23, X0
	183 Move X0, [X27]
	184 Move X24, [X28]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X0, X24
	190 Move X1, X31
	191 Call Type.GetTypeFromHandle, X0
	192 Move X1, X0
	193 Move X8, [X22]
	194 Move X9, [X8+488]
	195 Move X3, [X8+496]
	196 Move W2, 1
	197 Move X0, X22
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {231}
	203 Move X0, [X27]
	204 Move X24, [X28]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X24
	210 Move X1, X31
	211 Call Type.GetTypeFromHandle, X0
	212 Move X1, X0
	213 Move W2, 1
	214 Move X0, X22
	215 Move X3, X31
	216 Call Attribute.GetCustomAttribute, X0, X1, X2
	217 Move X24, X0
	218 Compare X0, 0
	219 JumpIfEqual {283}
	220 Move X1, [X29]
	221 Move X8, [X24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X0, [X24+16]
	224 Move X1, X31
	225 Call String.IsNullOrEmpty, X0
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfEqual {231}
	230 Move X23, [X24+16]
	231 Compare X19, 0
	232 JumpIfEqual {282}
	233 Move X8, [X21+56]
	234 Move X3, [X8+56]
	235 Move X0, X19
	236 Move X1, X23
	237 Move X2, X22
	238 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	239 Move X22, X31
	240 Compare X20, 0
	241 JumpIfEqual {265}
	242 Move X10, 0x1EE6000
	243 Move X8, [X20]
	244 Move X10, [X10+3584]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X1, [X10]
	247 Compare X9, 0
	248 JumpIfEqual {255}
	249 Move X10, [X8+176]
	250 Add X10, X10, 8
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Subtract X9, X9, 1
	254 Add X10, X10, 16
	255 Move X0, X20
	256 Move W2, W31
	257 Call 0x1C5D788
	258 NotImplemented "Instruction LDRSW not yet implemented."
	259 Add X8, X8, X9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X1, [X0+8]
	263 Move X0, X20
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Compare X22, 0
	266 JumpIfNotEqual {288}
	267 Move X0, X19
	268 Move X20, [X31+80]
	269 Move X19, [X31+88]
	270 Move X22, [X31+64]
	271 Move X21, [X31+72]
	272 Move X24, [X31+48]
	273 Move X23, [X31+56]
	274 Move X26, [X31+32]
	275 Move X25, [X31+40]
	276 Move X28, [X31+16]
	277 Move X27, [X31+24]
	278 Move X29, [X31+96]
	279 Move X30, [X31+104]
	280 Return X0
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Move X0, X24
	285 Call 0x1C181E0
	286 Call 0x1C17F20
	287 Call 0x1C17F20
	288 Move X0, X22
	289 Call 0x1C17F18
	290 Move X21, X0
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move X0, X21
	293 Call 0x3EB2AD0
	294 Move X22, [X0]
	295 Call 0x3EB2AE0
	296 Move X22, X31
	297 Move X21, X0
	298 Compare X20, 0
	299 JumpIfEqual {323}
	300 Move X10, 0x1EE6000
	301 Move X8, [X20]
	302 Move X10, [X10+3584]
	303 NotImplemented "Instruction LDRH not yet implemented."
	304 Move X1, [X10]
	305 Compare X9, 0
	306 JumpIfEqual {313}
	307 Move X10, [X8+176]
	308 Add X10, X10, 8
	309 NotImplemented "Instruction LDUR not yet implemented."
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Subtract X9, X9, 1
	312 Add X10, X10, 16
	313 Move X0, X20
	314 Move W2, W31
	315 Call 0x1C5D788
	316 NotImplemented "Instruction LDRSW not yet implemented."
	317 Add X8, X8, X9
	318 Add X0, X8, 312
	319 Move X8, [X0]
	320 Move X1, [X0+8]
	321 Move X0, X20
	322 NotImplemented "Instruction BLR not yet implemented."
	323 Compare X22, 0
	324 JumpIfNotEqual {327}
	325 Move X0, X21
	326 Call 0x1D2D690
	327 Move X0, X22
	328 Call 0x1C17F18
	329 Call 0x1991590

Method: System.Object ParseObject(System.Type type, System.String json)

Disassembly:
	0x0348B2F8 LDR X1, [X22]
	0x0348B2FC LDRH W9, [X8 + 0x12E]
	0x0348B300 CBZ X9, 0x348B324
	0x0348B304 LDR X10, [X8 + 0xB0]
	0x0348B308 ADD X10, X10, 0x8
	0x0348B30C LDUR X11, [X10 - 0x8]
	0x0348B310 CMP X11, X1
	0x0348B314 B.EQ 0x348B334
	0x0348B318 SUBS X9, X9, 0x1
	0x0348B31C ADD X10, X10, 0x10
	0x0348B320 B.NE 0x348B30C
	0x0348B324 MOVZ W2, 0x1
	0x0348B328 MOV X0, X20
	0x0348B32C BL 0x1C5C788
	0x0348B330 B 0x348B344
	0x0348B334 LDR W9, [X10]
	0x0348B338 ADD W9, W9, 0x1
	0x0348B33C ADD X8, X8, W9, 0x4, SXTW
	0x0348B340 ADD X0, X8, 0x138
	0x0348B344 LDP X8, X1, [X0]
	0x0348B348 MOV X0, X20
	0x0348B34C BLR X8
	0x0348B350 MOV X21, X0
	0x0348B354 TBNZ X23, 0x0, 0x348B368
	0x0348B358 MOVZ W1, 0x2C
	0x0348B35C MOV X0, X19
	0x0348B360 MOV X2, X31
	0x0348B364 BL 0x3233D30
	0x0348B368 MOV X0, X19
	0x0348B36C MOV X1, X21
	0x0348B370 BL 0x348A6B4
	0x0348B374 MOV W23, W31
	0x0348B378 B 0x348B298
	0x0348B37C MOV X22, X31
	0x0348B380 MOVZ W21, 0x1F
	0x0348B384 ADRP X23, 0xC68000
	0x0348B388 LDR X23, [X23 + 0xE00]
	0x0348B38C MOV X0, X20
	0x0348B390 LDR X1, [X23]
	0x0348B394 BL 0x1C16E00
	0x0348B398 CBZ X0, 0x348B3F8
	0x0348B39C LDR X8, [X0]
	0x0348B3A0 LDR X1, [X23]
	0x0348B3A4 MOV X20, X0
	0x0348B3A8 LDRH W9, [X8 + 0x12E]
	0x0348B3AC CBZ X9, 0x348B3D0
	0x0348B3B0 LDR X10, [X8 + 0xB0]
	0x0348B3B4 ADD X10, X10, 0x8
	0x0348B3B8 LDUR X11, [X10 - 0x8]
	0x0348B3BC CMP X11, X1
	0x0348B3C0 B.EQ 0x348B3E0
	0x0348B3C4 SUBS X9, X9, 0x1
	0x0348B3C8 ADD X10, X10, 0x10
	0x0348B3CC B.NE 0x348B3B8
	0x0348B3D0 MOV X0, X20
	0x0348B3D4 MOV W2, W31
	0x0348B3D8 BL 0x1C5C788
	0x0348B3DC B 0x348B3EC
	0x0348B3E0 LDRSW X9, [X10]
	0x0348B3E4 ADD X8, X8, X9, 0x4, LSL
	0x0348B3E8 ADD X0, X8, 0x138
	0x0348B3EC LDP X8, X1, [X0]
	0x0348B3F0 MOV X0, X20
	0x0348B3F4 BLR X8
	0x0348B3F8 CBNZ X22, 0x348B8B4
	0x0348B3FC LDR X23, [X31]
	0x0348B400 CMP W21, 0x1F
	0x0348B404 B.EQ 0x348B40C
	0x0348B408 CBNZ W21, 0x348AC98
	0x0348B40C MOVZ W1, 0x5D
	0x0348B410 B 0x348AA74
	0x0348B414 MOVZ W26, 0x1
	0x0348B418 LDR X8, [X21]
	0x0348B41C MOVZ W1, 0x54
	0x0348B420 MOV X0, X21
	0x0348B424 LDR X9, [X8 + 0x7E8]
	0x0348B428 LDR X2, [X8 + 0x7F0]
	0x0348B42C BLR X9
	0x0348B430 CBZ X0, 0x348B648
	0x0348B434 LDR W8, [X0 + 0x18]
	0x0348B438 MOV X21, X0
	0x0348B43C CMP W8, 0x1
	0x0348B440 B.LT 0x348B550
	0x0348B444 ADRP X27, 0xC90000
	0x0348B448 ADRP X28, 0xCA6000
	0x0348B44C LDR X27, [X27 + 0xFD0]
	0x0348B450 LDR X28, [X28 + 0x298]
	0x0348B454 MOV W24, W31
	0x0348B458 CMP W24, W8
	0x0348B45C B.CS 0x348B8A8
	0x0348B460 ADD X8, X21, W24, 0x3, SXTW
	0x0348B464 LDR X22, [X8 + 0x20]
	0x0348B468 CBZ X22, 0x348B648
	0x0348B46C LDR X8, [X22]
	0x0348B470 MOV X0, X22
	0x0348B474 LDR X9, [X8 + 0x268]
	0x0348B478 LDR X1, [X8 + 0x270]
	0x0348B47C BLR X9
	0x0348B480 TBZ X0, 0x0, 0x348B540
	0x0348B484 LDR X0, [X25]
	0x0348B488 LDR X23, [X27]
	0x0348B48C LDR W8, [X0 + 0xE0]
	0x0348B490 CBNZ W8, 0x348B498
	0x0348B494 BL 0x1C16DFC
	0x0348B498 MOV X0, X23
	0x0348B49C MOV X1, X31
	0x0348B4A0 BL 0x338C698
	0x0348B4A4 LDR X8, [X22]
	0x0348B4A8 MOV X1, X0
	0x0348B4AC MOVZ W2, 0x1
	0x0348B4B0 MOV X0, X22
	0x0348B4B4 LDP X9, X3, [X8 + 0x1E8]
	0x0348B4B8 BLR X9
	0x0348B4BC TBNZ X0, 0x0, 0x348B540
	0x0348B4C0 LDR X8, [X22]
	0x0348B4C4 MOV X0, X22
	0x0348B4C8 MOV X1, X20
	0x0348B4CC MOV X2, X31
	0x0348B4D0 LDR X9, [X8 + 0x2C8]
	0x0348B4D4 LDR X3, [X8 + 0x2D0]
	0x0348B4D8 BLR X9
	0x0348B4DC CBZ X0, 0x348B540
	0x0348B4E0 MOV X23, X0
	0x0348B4E4 TBNZ X26, 0x0, 0x348B4F8
	0x0348B4E8 MOVZ W1, 0x2C
	0x0348B4EC MOV X0, X19
	0x0348B4F0 MOV X2, X31
	0x0348B4F4 BL 0x3233D30
	0x0348B4F8 MOVZ W1, 0x22
	0x0348B4FC MOV X0, X19
	0x0348B500 MOV X2, X31
	0x0348B504 BL 0x3233D30
	0x0348B508 MOV X0, X22
	0x0348B50C BL 0x348BA78
	0x0348B510 MOV X1, X0
	0x0348B514 MOV X0, X19
	0x0348B518 MOV X2, X31
	0x0348B51C BL 0x32333E0
	0x0348B520 LDR X1, [X28]
	0x0348B524 MOV X0, X19
	0x0348B528 MOV X2, X31
	0x0348B52C BL 0x32333E0
	0x0348B530 MOV X0, X19
	0x0348B534 MOV X1, X23
	0x0348B538 BL 0x348A6B4
	0x0348B53C MOV W26, W31
	0x0348B540 LDR W8, [X21 + 0x18]
	0x0348B544 ADD W24, W24, 0x1
	0x0348B548 CMP W24, W8
	0x0348B54C B.LT 0x348B458
	0x0348B550 MOVZ W1, 0x7D
	0x0348B554 MOV X0, X19
	0x0348B558 MOV X2, X31
	0x0348B55C BL 0x3233D30
	0x0348B560 LDR X23, [X31]
	0x0348B564 B 0x348AC98
	0x0348B568 MOVZ W1, 0x7B
	0x0348B56C MOV X0, X19
	0x0348B570 MOV X2, X31
	0x0348B574 BL 0x3233D30
	0x0348B578 ADRP X23, 0xC68000
	0x0348B57C LDR X23, [X23 + 0x818]
	0x0348B580 MOV X0, X20
	0x0348B584 LDR X1, [X23]
	0x0348B588 BL 0x1C16E00
	0x0348B58C CBZ X0, 0x348B648
	0x0348B590 LDR X8, [X0]
	0x0348B594 LDR X1, [X23]
	0x0348B598 MOV X21, X0
	0x0348B59C LDRH W9, [X8 + 0x12E]
	0x0348B5A0 CBZ X9, 0x348B5C4
	0x0348B5A4 LDR X10, [X8 + 0xB0]
	0x0348B5A8 ADD X10, X10, 0x8
	0x0348B5AC LDUR X11, [X10 - 0x8]
	0x0348B5B0 CMP X11, X1
	0x0348B5B4 B.EQ 0x348B5DC
	0x0348B5B8 SUBS X9, X9, 0x1
	0x0348B5BC ADD X10, X10, 0x10
	0x0348B5C0 B.NE 0x348B5AC
	0x0348B5C4 MOVZ W2, 0x2
	0x0348B5C8 MOV X0, X21
	0x0348B5CC BL 0x1C5C788
	0x0348B5D0 B 0x348B5EC
	0x0348B5D4 MOV X0, X20
	0x0348B5D8 BL 0x1C171E0
	0x0348B5DC LDR W9, [X10]
	0x0348B5E0 ADD W9, W9, 0x2
	0x0348B5E4 ADD X8, X8, W9, 0x4, SXTW
	0x0348B5E8 ADD X0, X8, 0x138
	0x0348B5EC LDP X8, X1, [X0]
	0x0348B5F0 MOV X0, X21
	0x0348B5F4 BLR X8
	0x0348B5F8 CBZ X0, 0x348B648
	0x0348B5FC ADRP X10, 0xC70000
	0x0348B600 LDR X8, [X0]
	0x0348B604 LDR X10, [X10 + 0xDB8]
	0x0348B608 MOV X20, X0
	0x0348B60C LDRH W9, [X8 + 0x12E]
	0x0348B610 LDR X1, [X10]
	0x0348B614 CBZ X9, 0x348B638
	0x0348B618 LDR X10, [X8 + 0xB0]
	0x0348B61C ADD X10, X10, 0x8
	0x0348B620 LDUR X11, [X10 - 0x8]
	0x0348B624 CMP X11, X1
	0x0348B628 B.EQ 0x348B64C
	0x0348B62C SUBS X9, X9, 0x1
	0x0348B630 ADD X10, X10, 0x10
	0x0348B634 B.NE 0x348B620
	0x0348B638 MOV X0, X20
	0x0348B63C MOV W2, W31
	0x0348B640 BL 0x1C5C788
	0x0348B644 B 0x348B658
	0x0348B648 BL 0x1C16F20
	0x0348B64C LDRSW X9, [X10]
	0x0348B650 ADD X8, X8, X9, 0x4, LSL
	0x0348B654 ADD X0, X8, 0x138
	0x0348B658 LDP X8, X1, [X0]
	0x0348B65C MOV X0, X20
	0x0348B660 BLR X8
	0x0348B664 MOV X20, X0
	0x0348B668 CBZ X0, 0x348B8D8
	0x0348B66C ADRP X24, 0xC68000
	0x0348B670 ADRP X25, 0xC6A000
	0x0348B674 ADRP X26, 0xCA6000
	0x0348B678 LDR X24, [X24 + 0xE18]
	0x0348B67C LDR X25, [X25 + 0x278]
	0x0348B680 LDR X26, [X26 + 0x298]
	0x0348B684 MOVZ W27, 0x1
	0x0348B688 LDR X8, [X20]
	0x0348B68C LDR X1, [X24]
	0x0348B690 LDRH W9, [X8 + 0x12E]
	0x0348B694 CBZ X9, 0x348B6B8
	0x0348B698 LDR X10, [X8 + 0xB0]
	0x0348B69C ADD X10, X10, 0x8
	0x0348B6A0 LDUR X11, [X10 - 0x8]
	0x0348B6A4 CMP X11, X1
	0x0348B6A8 B.EQ 0x348B6C8
	0x0348B6AC SUBS X9, X9, 0x1
	0x0348B6B0 ADD X10, X10, 0x10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X22, 0xF53000
	012 Move X19, 0xC9A000
	013 Move W8, [X22+2313]
	014 Move X19, [X19+2928]
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0xCA7000
	022 Move X0, [X0+576]
	023 Call 0x1C17CF4
	024 Move X0, 0xCA7000
	025 Move X0, [X0+584]
	026 Call 0x1C17CF4
	027 Move X0, 0xCA7000
	028 Move X0, [X0+592]
	029 Call 0x1C17CF4
	030 Move X0, 0xCA7000
	031 Move X0, [X0+600]
	032 Call 0x1C17CF4
	033 Move X0, 0xCA7000
	034 Move X0, [X0+608]
	035 Call 0x1C17CF4
	036 Move X0, 0xCA7000
	037 Move X0, [X0+616]
	038 Call 0x1C17CF4
	039 Move X0, 0xC9A000
	040 Move X0, [X0+2928]
	041 Call 0x1C17CF4
	042 Move X0, 0xCA7000
	043 Move X0, [X0+624]
	044 Call 0x1C17CF4
	045 Move X0, 0xCA7000
	046 Move X0, [X0+632]
	047 Call 0x1C17CF4
	048 Move X0, 0xC91000
	049 Move X0, [X0+4088]
	050 Call 0x1C17CF4
	051 Move X0, 0xC6A000
	052 Move X0, [X0+456]
	053 Call 0x1C17CF4
	054 Move X0, 0xC91000
	055 Move X0, [X0+2904]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+2313], W8
	059 Move X0, [X19]
	060 Move [X31+40], X31
	061 Move [X31+16], X31
	062 Move [X31+24], X31
	063 Move [X31+8], X31
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X21
	069 Move X1, X31
	070 Call FormatterServices.GetUninitializedObject, X0
	071 Move X19, X0
	072 Move X0, X20
	073 Call JsonParser.Split, X0
	074 Compare X0, 0
	075 JumpIfEqual {277}
	076 Move W8, [X0+24]
	077 Move X20, X0
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {265}
	082 Move X22, 0xC91000
	083 Move X22, [X22+4088]
	084 Move X0, [X22]
	085 Call 0x1C17D0C
	086 Move X0, [X0+16]
	087 Compare X0, 0
	088 JumpIfEqual {277}
	089 Move X8, 0xCA7000
	090 Move X8, [X8+600]
	091 Add X2, X31, 40
	092 Move X1, X21
	093 Move X3, [X8]
	094 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {124}
	099 Compare X21, 0
	100 JumpIfEqual {277}
	101 Move X8, [X21]
	102 Move W1, 84
	103 Move X0, X21
	104 Move X9, [X8+1672]
	105 Move X2, [X8+1680]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, 0xCA7000
	108 Move X8, [X8+624]
	109 Move X1, [X8]
	110 Call 0x220E804, X0
	111 Move X8, [X22]
	112 Move [X31+40], X0
	113 Move X0, X8
	114 Call 0x1C17D0C
	115 Move X0, [X0+16]
	116 Compare X0, 0
	117 JumpIfEqual {277}
	118 Move X8, 0xCA7000
	119 Move X2, [X31+40]
	120 Move X8, [X8+576]
	121 Move X1, X21
	122 Move X3, [X8]
	123 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	124 Move X0, [X22]
	125 Call 0x1C17D0C
	126 Move X0, [X0+24]
	127 Compare X0, 0
	128 JumpIfEqual {277}
	129 Move X8, 0xCA7000
	130 Move X8, [X8+608]
	131 Add X2, X31, 24
	132 Move X1, X21
	133 Move X3, [X8]
	134 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {164}
	139 Compare X21, 0
	140 JumpIfEqual {277}
	141 Move X8, [X21]
	142 Move W1, 84
	143 Move X0, X21
	144 Move X9, [X8+2024]
	145 Move X2, [X8+2032]
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X8, 0xCA7000
	148 Move X8, [X8+632]
	149 Move X1, [X8]
	150 Call 0x220E804, X0
	151 Move X8, [X22]
	152 Move [X31+24], X0
	153 Move X0, X8
	154 Call 0x1C17D0C
	155 Move X0, [X0+24]
	156 Compare X0, 0
	157 JumpIfEqual {277}
	158 Move X8, 0xCA7000
	159 Move X2, [X31+24]
	160 Move X8, [X8+584]
	161 Move X1, X21
	162 Move X3, [X8]
	163 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	164 Move W8, [X20+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X24, 0xC91000
	167 Move X25, 0xCA7000
	168 Move X26, 0xCA7000
	169 Move X24, [X24+2904]
	170 Move X25, [X25+616]
	171 Move X26, [X26+592]
	172 Move W21, W31
	173 Move X2, [X24]
	174 Move X0, X20
	175 Move W1, W21
	176 Call List`1<Object>.get_Item, X0, X1
	177 Compare X0, 0
	178 JumpIfEqual {277}
	179 Move W8, [X0+16]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X2, [X24]
	182 Move X0, X20
	183 Move W1, W21
	184 Call List`1<Object>.get_Item, X0, X1
	185 Move X2, [X24]
	186 Move X22, X0
	187 Move X0, X20
	188 Move W1, W21
	189 Call List`1<Object>.get_Item, X0, X1
	190 Compare X0, 0
	191 JumpIfEqual {277}
	192 Compare X22, 0
	193 JumpIfEqual {277}
	194 Move W8, [X0+16]
	195 Move W1, 1
	196 Move X0, X22
	197 Move X3, X31
	198 Subtract W2, W8, 2
	199 Call String.Substring, X0, X1, X2
	200 Move X2, [X24]
	201 Move X23, X0
	202 Add W1, W21, 1
	203 Move X0, X20
	204 Call List`1<Object>.get_Item, X0, X1
	205 Move X8, [X31+40]
	206 Compare X8, 0
	207 JumpIfEqual {277}
	208 Move X3, [X25]
	209 Move X22, X0
	210 Add X2, X31, 16
	211 Move X0, X8
	212 Move X1, X23
	213 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {233}
	218 Move X23, [X31+16]
	219 Compare X23, 0
	220 JumpIfEqual {277}
	221 Move X8, [X23]
	222 Move X0, X23
	223 Move X9, [X8+600]
	224 Move X1, [X8+608]
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move X1, X22
	227 Call JsonParser.ParseValue, X0, X1
	228 Move X2, X0
	229 Move X0, X23
	230 Move X1, X19
	231 Move X3, X31
	232 Call FieldInfo.SetValue, X0, X1, X2
	233 Move X0, [X31+24]
	234 Compare X0, 0
	235 JumpIfEqual {277}
	236 Move X3, [X26]
	237 Add X2, X31, 8
	238 Move X1, X23
	239 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {262}
	244 Move X23, [X31+8]
	245 Compare X23, 0
	246 JumpIfEqual {277}
	247 Move X8, [X23]
	248 Move X0, X23
	249 Move X9, [X8+584]
	250 Move X1, [X8+592]
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move X1, X22
	253 Call JsonParser.ParseValue, X0, X1
	254 Move X8, [X23]
	255 Move X2, X0
	256 Move X0, X23
	257 Move X1, X19
	258 Move X9, [X8+744]
	259 Move X4, [X8+752]
	260 Move X3, X31
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Move W8, [X20+24]
	263 Add W21, W21, 2
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move X0, X19
	266 Move X20, [X31+96]
	267 Move X19, [X31+104]
	268 Move X22, [X31+80]
	269 Move X21, [X31+88]
	270 Move X24, [X31+64]
	271 Move X23, [X31+72]
	272 Move X26, [X31+48]
	273 Move X25, [X31+56]
	274 Move X30, [X31+32]
	275 Add X31, X31, 112
	276 Return X0
	277 Call 0x1C17F20

