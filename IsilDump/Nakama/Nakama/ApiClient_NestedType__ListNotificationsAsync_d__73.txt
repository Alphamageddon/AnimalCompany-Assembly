Type: Nakama.ApiClient/<ListNotificationsAsync>d__73

Method: System.Void MoveNext()

Disassembly:
	0x0342FFD0 STR X8, [X0]
	0x0342FFD4 ADRP X1, 0xA85000
	0x0342FFD8 ADD X1, X1, 0xE58
	0x0342FFDC MOV X2, X31
	0x0342FFE0 BL 0x3EB1B00
	0x0342FFE4 MOV X20, X0
	0x0342FFE8 BL 0x3EB1AE0
	0x0342FFEC MOV X0, X20
	0x0342FFF0 BL 0x1D2C690
	0x0342FFF4 BL 0x1990590
	0x0342FFF8 STR X30, [X31 - 0x30]!
	0x0342FFFC STP X22, X21, [X31 + 0x10]
	0x03430000 STP X20, X19, [X31 + 0x20]
	0x03430004 ADRP X22, 0xFAD000
	0x03430008 ADRP X21, 0xCFE000
	0x0343000C LDRB W8, [X22 + 0x65C]
	0x03430010 LDR X21, [X21 + 0x6E0]
	0x03430014 MOV X19, X1
	0x03430018 MOV X20, X0
	0x0343001C TBNZ X8, 0x0, 0x3430040
	0x03430020 ADRP X0, 0xCFF000
	0x03430024 LDR X0, [X0 + 0x138]
	0x03430028 BL 0x1C16CF4
	0x0343002C ADRP X0, 0xCFE000
	0x03430030 LDR X0, [X0 + 0x6E0]
	0x03430034 BL 0x1C16CF4
	0x03430038 MOVZ W8, 0x1
	0x0343003C STRB W8, [X22 + 0x65C]
	0x03430040 LDR X0, [X21]
	0x03430044 ADRP X21, 0xCFF000
	0x03430048 LDR W8, [X0 + 0xE0]
	0x0343004C LDR X21, [X21 + 0x138]
	0x03430050 CBNZ W8, 0x3430058
	0x03430054 BL 0x1C16DFC
	0x03430058 LDR X2, [X21]
	0x0343005C ADD X0, X20, 0x8
	0x03430060 MOV X1, X19
	0x03430064 LDP X20, X19, [X31 + 0x20]
	0x03430068 LDP X22, X21, [X31 + 0x10]
	0x0343006C LDR X30, [X31], #0x30
	0x03430070 B 0x2632228
	0x03430074 SUB X31, X31, 0x70
	0x03430078 STP X30, X27, [X31 + 0x20]
	0x0343007C STP X26, X25, [X31 + 0x30]
	0x03430080 STP X24, X23, [X31 + 0x40]
	0x03430084 STP X22, X21, [X31 + 0x50]
	0x03430088 STP X20, X19, [X31 + 0x60]
	0x0343008C ADRP X20, 0xFAD000
	0x03430090 LDRB W8, [X20 + 0x65D]
	0x03430094 MOV X19, X0
	0x03430098 TBNZ X8, 0x0, 0x34301E8
	0x0343009C ADRP X0, 0xCFF000
	0x034300A0 LDR X0, [X0 + 0x140]
	0x034300A4 BL 0x1C16CF4
	0x034300A8 ADRP X0, 0xCFF000
	0x034300AC LDR X0, [X0 + 0xF0]
	0x034300B0 BL 0x1C16CF4
	0x034300B4 ADRP X0, 0xCFE000
	0x034300B8 LDR X0, [X0 + 0x6E0]
	0x034300BC BL 0x1C16CF4
	0x034300C0 ADRP X0, 0xCCC000
	0x034300C4 LDR X0, [X0 + 0x8D8]
	0x034300C8 BL 0x1C16CF4
	0x034300CC ADRP X0, 0xCC4000
	0x034300D0 LDR X0, [X0 + 0x810]
	0x034300D4 BL 0x1C16CF4
	0x034300D8 ADRP X0, 0xCC4000
	0x034300DC LDR X0, [X0 + 0x6C0]
	0x034300E0 BL 0x1C16CF4
	0x034300E4 ADRP X0, 0xCC4000
	0x034300E8 LDR X0, [X0 + 0x6D0]
	0x034300EC BL 0x1C16CF4
	0x034300F0 ADRP X0, 0xCFE000
	0x034300F4 LDR X0, [X0 + 0x7B8]
	0x034300F8 BL 0x1C16CF4
	0x034300FC ADRP X0, 0xCFF000
	0x03430100 LDR X0, [X0 + 0xF8]
	0x03430104 BL 0x1C16CF4
	0x03430108 ADRP X0, 0xCC6000
	0x0343010C LDR X0, [X0 + 0xEF8]
	0x03430110 BL 0x1C16CF4
	0x03430114 ADRP X0, 0xCC4000
	0x03430118 LDR X0, [X0 + 0x478]
	0x0343011C BL 0x1C16CF4
	0x03430120 ADRP X0, 0xCC3000
	0x03430124 LDR X0, [X0 + 0x9D0]
	0x03430128 BL 0x1C16CF4
	0x0343012C ADRP X0, 0xCC6000
	0x03430130 LDR X0, [X0 + 0x1E0]
	0x03430134 BL 0x1C16CF4
	0x03430138 ADRP X0, 0xCC6000
	0x0343013C LDR X0, [X0 + 0x1F0]
	0x03430140 BL 0x1C16CF4
	0x03430144 ADRP X0, 0xCC6000
	0x03430148 LDR X0, [X0 + 0x1F8]
	0x0343014C BL 0x1C16CF4
	0x03430150 ADRP X0, 0xCCC000
	0x03430154 LDR X0, [X0 + 0x3A0]
	0x03430158 BL 0x1C16CF4
	0x0343015C ADRP X0, 0xCC5000
	0x03430160 LDR X0, [X0 + 0xA28]
	0x03430164 BL 0x1C16CF4
	0x03430168 ADRP X0, 0xCFF000
	0x0343016C LDR X0, [X0 + 0x100]
	0x03430170 BL 0x1C16CF4
	0x03430174 ADRP X0, 0xCEC000
	0x03430178 LDR X0, [X0 + 0x4D0]
	0x0343017C BL 0x1C16CF4
	0x03430180 ADRP X0, 0xCFF000
	0x03430184 LDR X0, [X0 + 0x148]
	0x03430188 BL 0x1C16CF4
	0x0343018C ADRP X0, 0xCCC000
	0x03430190 LDR X0, [X0 + 0x720]
	0x03430194 BL 0x1C16CF4
	0x03430198 ADRP X0, 0xCFF000
	0x0343019C LDR X0, [X0 + 0x150]
	0x034301A0 BL 0x1C16CF4
	0x034301A4 ADRP X0, 0xCFE000
	0x034301A8 LDR X0, [X0 + 0x7D0]
	0x034301AC BL 0x1C16CF4
	0x034301B0 ADRP X0, 0xCFE000
	0x034301B4 LDR X0, [X0 + 0xF18]
	0x034301B8 BL 0x1C16CF4
	0x034301BC ADRP X0, 0xCFE000
	0x034301C0 LDR X0, [X0 + 0x7D8]
	0x034301C4 BL 0x1C16CF4
	0x034301C8 ADRP X0, 0xCC3000
	0x034301CC LDR X0, [X0 + 0x988]
	0x034301D0 BL 0x1C16CF4
	0x034301D4 ADRP X0, 0xCFE000
	0x034301D8 LDR X0, [X0 + 0xF20]
	0x034301DC BL 0x1C16CF4
	0x034301E0 MOVZ W8, 0x1
	0x034301E4 STRB W8, [X20 + 0x65D]
	0x034301E8 STR X31, [X31 + 0x18]
	0x034301EC ADRP X27, 0xCFE000
	0x034301F0 LDR W8, [X19]
	0x034301F4 LDR X27, [X27 + 0x6E0]
	0x034301F8 CBZ W8, 0x3430594
	0x034301FC LDR X21, [X19 + 0x20]
	0x03430200 CBZ X21, 0x34306C8
	0x03430204 ADRP X23, 0xCC5000
	0x03430208 LDR X23, [X23 + 0xA28]
	0x0343020C ADRP X8, 0xCFF000
	0x03430210 LDR X0, [X23]
	0x03430214 LDR X8, [X8 + 0x150]
	0x03430218 LDR X24, [X19 + 0x40]
	0x0343021C LDR W9, [X0 + 0xE0]
	0x03430220 LDR X20, [X8]
	0x03430224 CBNZ W9, 0x343022C
	0x03430228 BL 0x1C16DFC
	0x0343022C MOV X0, X21
	0x03430230 MOV X1, X31
	0x03430234 BL 0x3624D20
	0x03430238 CBZ X20, 0x3430710
	0x0343023C ADRP X8, 0xCFF000
	0x03430240 LDR X8, [X8 + 0x100]
	0x03430244 MOV X2, X0
	0x03430248 LDR X1, [X8]
	0x0343024C MOV X0, X20
	0x03430250 MOV X3, X31
	0x03430254 BL 0x32293BC
	0x03430258 ADRP X8, 0xCC3000
	0x0343025C LDR X8, [X8 + 0x988]
	0x03430260 LDR X22, [X19 + 0x28]
	0x03430264 MOV X20, X0
	0x03430268 LDR X21, [X8]
	0x0343026C CBZ X22, 0x34302B8
	0x03430270 LDR X0, [X23]
	0x03430274 LDR W8, [X0 + 0xE0]
	0x03430278 CBNZ W8, 0x3430280
	0x0343027C BL 0x1C16DFC
	0x03430280 MOV X0, X22
	0x03430284 MOV X1, X31
	0x03430288 BL 0x3624D20
	0x0343028C ADRP X8, 0xCFF000
	0x03430290 LDR X8, [X8 + 0x148]
	0x03430294 ADRP X9, 0xCCC000
	0x03430298 LDR X9, [X9 + 0x720]
	0x0343029C MOV X2, X0
	0x034302A0 LDR X1, [X8]
	0x034302A4 LDR X3, [X9]
	0x034302A8 MOV X0, X21
	0x034302AC MOV X4, X31
	0x034302B0 BL 0x32277C4
	0x034302B4 MOV X21, X0
	0x034302B8 LDRB W8, [X19 + 0x30]
	0x034302BC CBZ W8, 0x34303C0
	0x034302C0 ADRP X8, 0xCC3000
	0x034302C4 LDR X8, [X8 + 0x9D0]
	0x034302C8 LDR X0, [X8]
	0x034302CC MOVZ W1, 0x4
	0x034302D0 BL 0x1C16D6C
	0x034302D4 MOV X22, X0
	0x034302D8 CBZ X0, 0x3430738
	0x034302DC CBZ X21, 0x34302F4
	0x034302E0 LDR X8, [X22]
	0x034302E4 LDR X1, [X8 + 0x40]
	0x034302E8 MOV X0, X21
	0x034302EC BL 0x1C16E00
	0x034302F0 CBZ X0, 0x343074C
	0x034302F4 LDR W8, [X22 + 0x18]
	0x034302F8 CBZ W8, 0x343073C
	0x034302FC STR X21, [X22 + 0x20]
	0x03430300 ADRP X21, 0xCFE000
	0x03430304 LDR X21, [X21 + 0xF18]
	0x03430308 LDR X0, [X21]
	0x0343030C CBZ X0, 0x3430324
	0x03430310 LDR X8, [X22]
	0x03430314 LDR X1, [X8 + 0x40]
	0x03430318 BL 0x1C16E00
	0x0343031C CBZ X0, 0x3430758
	0x03430320 LDR W8, [X22 + 0x18]
	0x03430324 CMP W8, 0x1
	0x03430328 B.LS 0x3430740
	0x0343032C LDR X8, [X21]
	0x03430330 ADRP X9, 0xCC4000
	0x03430334 STR X8, [X22 + 0x28]
	0x03430338 LDR X8, [X19 + 0x30]
	0x0343033C LDR X9, [X9 + 0x478]
	0x03430340 STR X8, [X31 + 0x10]
	0x03430344 LDR X0, [X9]
	0x03430348 ADD X1, X31, 0x10
	0x0343034C BL 0x1C16E04
	0x03430350 MOV X21, X0
	0x03430354 CBZ X0, 0x343036C
	0x03430358 LDR X8, [X22]
	0x0343035C LDR X1, [X8 + 0x40]
	0x03430360 MOV X0, X21
	0x03430364 BL 0x1C16E00
	0x03430368 CBZ X0, 0x3430764
	0x0343036C LDR W8, [X22 + 0x18]
	0x03430370 CMP W8, 0x2
	0x03430374 B.LS 0x3430744
	0x03430378 STR X21, [X22 + 0x30]
	0x0343037C ADRP X21, 0xCCC000
	0x03430380 LDR X21, [X21 + 0x720]
	0x03430384 LDR X0, [X21]
	0x03430388 CBZ X0, 0x34303A0
	0x0343038C LDR X8, [X22]
	0x03430390 LDR X1, [X8 + 0x40]
	0x03430394 BL 0x1C16E00
	0x03430398 CBZ X0, 0x3430770
	0x0343039C LDR W8, [X22 + 0x18]
	0x034303A0 CMP W8, 0x3
	0x034303A4 B.LS 0x3430748
	0x034303A8 LDR X8, [X21]
	0x034303AC STR X8, [X22 + 0x38]
	0x034303B0 MOV X0, X22
	0x034303B4 MOV X1, X31
	0x034303B8 BL 0x3227578
	0x034303BC MOV X21, X0
	0x034303C0 LDR X22, [X19 + 0x38]
	0x034303C4 CBZ X22, 0x3430410
	0x034303C8 LDR X0, [X23]
	0x034303CC LDR W8, [X0 + 0xE0]
	0x034303D0 CBNZ W8, 0x34303D8
	0x034303D4 BL 0x1C16DFC
	0x034303D8 MOV X0, X22
	0x034303DC MOV X1, X31
	0x034303E0 BL 0x3624D20
	0x034303E4 ADRP X8, 0xCFE000
	0x034303E8 LDR X8, [X8 + 0xF20]
	0x034303EC ADRP X9, 0xCCC000
	0x034303F0 LDR X9, [X9 + 0x720]
	0x034303F4 MOV X2, X0
	0x034303F8 LDR X1, [X8]
	0x034303FC LDR X3, [X9]
	0x03430400 MOV X0, X21
	0x03430404 MOV X4, X31
	0x03430408 BL 0x32277C4
	0x0343040C MOV X21, X0
	0x03430410 CBZ X24, 0x3430714
	0x03430414 LDR X0, [X24 + 0x20]
	0x03430418 CBZ X0, 0x3430718
	0x0343041C MOV X1, X31
	0x03430420 BL 0x361B448
	0x03430424 ADRP X8, 0xCCC000
	0x03430428 LDR X8, [X8 + 0x8D8]
	0x0343042C MOV X22, X0
	0x03430430 LDR X0, [X8]
	0x03430434 MOVZ W1, 0x1
	0x03430438 BL 0x1C16D6C
	0x0343043C MOV X1, X0
	0x03430440 CBZ X1, 0x343071C
	0x03430444 LDR W8, [X1 + 0x18]
	0x03430448 CBZ W8, 0x3430720
	0x0343044C MOVZ W8, 0x2F
	0x03430450 STRH W8, [X1 + 0x20]
	0x03430454 CBZ X22, 0x3430724
	0x03430458 MOV X0, X22
	0x0343045C MOV X2, X31
	0x03430460 BL 0x322BC58
	0x03430464 MOV X1, X20
	0x03430468 MOV X2, X31
	0x0343046C BL 0x321B938
	0x03430470 ADRP X8, 0xCCC000
	0x03430474 LDR X8, [X8 + 0x3A0]
	0x03430478 MOV X22, X0
	0x0343047C LDR X23, [X24 + 0x20]
	0x03430480 LDR X0, [X8]
	0x03430484 BL 0x1C16F10
	0x03430488 MOV X20, X0
	0x0343048C MOV X1, X23
	0x03430490 MOV X2, X31
	0x03430494 BL 0x36281F8
	0x03430498 CBZ X20, 0x3430728
	0x0343049C MOV X0, X20
	0x034304A0 MOV X1, X22
	0x034304A4 MOV X2, X31
	0x034304A8 BL 0x36288CC
	0x034304AC MOV X0, X20
	0x034304B0 MOV X1, X21
	0x034304B4 MOV X2, X31
	0x034304B8 BL 0x3628980
	0x034304BC MOV X0, X20
	0x034304C0 MOV X1, X31
	0x034304C4 BL 0x3628A38
	0x034304C8 ADRP X8, 0xCEC000
	0x034304CC ADRP X9, 0xCC4000
	0x034304D0 LDR X8, [X8 + 0x4D0]
	0x034304D4 LDR X9, [X9 + 0x6D0]
	0x034304D8 MOV X20, X0
	0x034304DC LDR X21, [X8]
	0x034304E0 LDR X0, [X9]
	0x034304E4 BL 0x1C16F10
	0x034304E8 ADRP X8, 0xCC4000
	0x034304EC LDR X8, [X8 + 0x6C0]
	0x034304F0 MOV X22, X0
	0x034304F4 LDR X1, [X8]
	0x034304F8 BL 0x2AA4804
	0x034304FC ADRP X8, 0xCFE000
	0x03430500 LDR X8, [X8 + 0x7D8]
	0x03430504 LDR X1, [X19 + 0x48]
	0x03430508 LDR X0, [X8]
	0x0343050C MOV X2, X31
	0x03430510 BL 0x321B938
	0x03430514 CBZ X22, 0x343072C
	0x03430518 ADRP X8, 0xCFE000
	0x0343051C LDR X8, [X8 + 0x7D0]
	0x03430520 ADRP X9, 0xCC4000
	0x03430524 LDR X9, [X9 + 0x810]
	0x03430528 MOV X2, X0
	0x0343052C LDR X1, [X8]
	0x03430530 LDR X3, [X9]
	0x03430534 MOV X0, X22
	0x03430538 BL 0x2AA5098
	0x0343053C LDR X23, [X24 + 0x10]
	0x03430540 CBZ X23, 0x3430730
	0x03430544 ADRP X10, 0xCFE000
	0x03430548 LDR X10, [X10 + 0x7B8]
	0x0343054C LDR X8, [X23]
	0x03430550 LDR W25, [X24 + 0x18]
	0x03430554 LDP X26, X24, [X19 + 0x50]
	0x03430558 LDR X1, [X10]
	0x0343055C LDRH W9, [X8 + 0x12E]
	0x03430560 CBZ X9, 0x3430584
	0x03430564 LDR X10, [X8 + 0xB0]
	0x03430568 ADD X10, X10, 0x8
	0x0343056C LDUR X11, [X10 - 0x8]
	0x03430570 CMP X11, X1
	0x03430574 B.EQ 0x34305AC
	0x03430578 SUBS X9, X9, 0x1
	0x0343057C ADD X10, X10, 0x10
	0x03430580 B.NE 0x343056C
	0x03430584 MOVZ W2, 0x3
	0x03430588 MOV X0, X23
	0x0343058C BL 0x1C5C788
	0x03430590 B 0x34305BC
	0x03430594 LDR X8, [X19 + 0x60]
	0x03430598 MOVN W9, 0x0
	0x0343059C STR X8, [X31 + 0x18]
	0x034305A0 STR X31, [X19 + 0x60]
	0x034305A4 STR W9, [X19]
	0x034305A8 B 0x3430618
	0x034305AC LDR W9, [X10]
	0x034305B0 ADD W9, W9, 0x3
	0x034305B4 ADD X8, X8, W9, 0x4, SXTW
	0x034305B8 ADD X0, X8, 0x138
	0x034305BC LDP X8, X9, [X0]
	0x034305C0 MOV X0, X23
	0x034305C4 MOV X1, X21
	0x034305C8 MOV X2, X20
	0x034305CC MOV X3, X22
	0x034305D0 MOV X4, X31
	0x034305D4 MOV W5, W25
	0x034305D8 MOV X6, X26
	0x034305DC MOV X7, X24
	0x034305E0 STR X9, [X31]
	0x034305E4 BLR X8
	0x034305E8 CBZ X0, 0x3430734
	0x034305EC ADRP X8, 0xCC6000
	0x034305F0 LDR X8, [X8 + 0x1F8]
	0x034305F4 LDR X1, [X8]
	0x034305F8 BL 0x269F5D0
	0x034305FC ADRP X8, 0xCC6000
	0x03430600 LDR X8, [X8 + 0x1F0]
	0x03430604 STR X0, [X31 + 0x18]
	0x03430608 LDR X1, [X8]
	0x0343060C ADD X0, X31, 0x18
	0x03430610 BL 0x2677430
	0x03430614 TBZ X0, 0x0, 0x3430674
	0x03430618 ADRP X8, 0xCC6000
	0x0343061C LDR X8, [X8 + 0x1E0]
	0x03430620 ADD X0, X31, 0x18
	0x03430624 LDR X1, [X8]
	0x03430628 BL 0x2677474
	0x0343062C ADRP X8, 0xCFF000
	0x03430630 LDR X8, [X8 + 0xF8]
	0x03430634 LDR X1, [X8]
	0x03430638 BL 0x220E6DC
	0x0343063C MOVN W8, 0x1
	0x03430640 STR W8, [X19], #0x8
	0x03430644 MOV X20, X0
	0x03430648 LDR X0, [X27]
	0x0343064C ADRP X21, 0xCFF000
	0x03430650 LDR W8, [X0 + 0xE0]
	0x03430654 LDR X21, [X21 + 0xF0]
	0x03430658 CBNZ W8, 0x3430660
	0x0343065C BL 0x1C16DFC
	0x03430660 LDR X2, [X21]
	0x03430664 MOV X0, X19
	0x03430668 MOV X1, X20
	0x0343066C BL 0x26322B0
	0x03430670 B 0x34306AC
	0x03430674 STR W31, [X19]
	0x03430678 LDR X8, [X31 + 0x18]
	0x0343067C STR X8, [X19 + 0x60]
	0x03430680 LDR X0, [X27]
	0x03430684 LDR W8, [X0 + 0xE0]
	0x03430688 CBNZ W8, 0x3430690
	0x0343068C BL 0x1C16DFC
	0x03430690 ADRP X8, 0xCFF000
	0x03430694 LDR X8, [X8 + 0x140]
	0x03430698 ADD X0, X19, 0x8
	0x0343069C LDR X3, [X8]
	0x034306A0 ADD X1, X31, 0x18
	0x034306A4 MOV X2, X19
	0x034306A8 BL 0x1FB4610
	0x034306AC LDP X20, X19, [X31 + 0x60]
	0x034306B0 LDP X22, X21, [X31 + 0x50]
	0x034306B4 LDP X24, X23, [X31 + 0x40]
	0x034306B8 LDP X26, X25, [X31 + 0x30]
	0x034306BC LDP X30, X27, [X31 + 0x20]
	0x034306C0 ADD X31, X31, 0x70
	0x034306C4 RET
	0x034306C8 ADRP X0, 0xCCB000
	0x034306CC LDR X0, [X0 + 0x578]
	0x034306D0 BL 0x1C16D08
	0x034306D4 BL 0x1C16F10
	0x034306D8 MOV X20, X0
	0x034306DC ADRP X0, 0xCFF000
	0x034306E0 LDR X0, [X0 + 0x118]
	0x034306E4 BL 0x1C16D08
	0x034306E8 MOV X1, X0
	0x034306EC MOV X0, X20
	0x034306F0 MOV X2, X31
	0x034306F4 BL 0x3314A68
	0x034306F8 ADRP X0, 0xCFF000
	0x034306FC LDR X0, [X0 + 0x158]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xFAF000
	013 Move W8, [X20+1625]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {96}
	019 Move X0, 0xD01000
	020 Move X0, [X0+184]
	021 Call 0x1C17CF4
	022 Move X0, 0xD00000
	023 Move X0, [X0+192]
	024 Call 0x1C17CF4
	025 Move X0, 0xCFF000
	026 Move X0, [X0+1608]
	027 Call 0x1C17CF4
	028 Move X0, 0xCCD000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC5000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC5000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCC5000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xCFF000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xD00000
	044 Move X0, [X0+200]
	045 Call 0x1C17CF4
	046 Move X0, 0xCC7000
	047 Move X0, [X0+3832]
	048 Call 0x1C17CF4
	049 Move X0, 0xCC5000
	050 Move X0, [X0+1144]
	051 Call 0x1C17CF4
	052 Move X0, 0xCC4000
	053 Move X0, [X0+2512]
	054 Call 0x1C17CF4
	055 Move X0, 0xCC7000
	056 Move X0, [X0+480]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC7000
	059 Move X0, [X0+496]
	060 Call 0x1C17CF4
	061 Move X0, 0xCC7000
	062 Move X0, [X0+504]
	063 Call 0x1C17CF4
	064 Move X0, 0xCCD000
	065 Move X0, [X0+928]
	066 Call 0x1C17CF4
	067 Move X0, 0xCC6000
	068 Move X0, [X0+2600]
	069 Call 0x1C17CF4
	070 Move X0, 0xCED000
	071 Move X0, [X0+1232]
	072 Call 0x1C17CF4
	073 Move X0, 0xD00000
	074 Move X0, [X0+208]
	075 Call 0x1C17CF4
	076 Move X0, 0xCCD000
	077 Move X0, [X0+1824]
	078 Call 0x1C17CF4
	079 Move X0, 0xCFF000
	080 Move X0, [X0+2000]
	081 Call 0x1C17CF4
	082 Move X0, 0xCFF000
	083 Move X0, [X0+3864]
	084 Call 0x1C17CF4
	085 Move X0, 0xCFF000
	086 Move X0, [X0+3144]
	087 Call 0x1C17CF4
	088 Move X0, 0xCFF000
	089 Move X0, [X0+2008]
	090 Call 0x1C17CF4
	091 Move X0, 0xCC4000
	092 Move X0, [X0+2440]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X20+1625], W8
	096 Move [X31+24], X31
	097 Move X27, 0xCFF000
	098 Move W8, [X19]
	099 Move X27, [X27+1608]
	100 Compare W8, 0
	101 JumpIfEqual {311}
	102 Move X8, 0xCFF000
	103 Move X9, 0xCC4000
	104 Move X8, [X8+3144]
	105 Move X9, [X9+2440]
	106 Move X24, [X19+48]
	107 Move W10, [X19+32]
	108 Move X20, [X8]
	109 Move X21, [X9]
	110 Compare W10, 0
	111 JumpIfEqual {183}
	112 Move X8, 0xCC4000
	113 Move X8, [X8+2512]
	114 Move X0, [X8]
	115 Move W1, 4
	116 Call 0x1C17D6C
	117 Move X22, X0
	118 Compare X0, 0
	119 JumpIfEqual {411}
	120 Compare X21, 0
	121 JumpIfEqual {128}
	122 Move X8, [X22]
	123 Move X1, [X8+64]
	124 Move X0, X21
	125 Call 0x1C17E00
	126 Compare X0, 0
	127 JumpIfEqual {416}
	128 Move W8, [X22+24]
	129 Compare W8, 0
	130 JumpIfEqual {412}
	131 Move [X22+32], X21
	132 Move X21, 0xCFF000
	133 Move X21, [X21+3864]
	134 Move X0, [X21]
	135 Compare X0, 0
	136 JumpIfEqual {143}
	137 Move X8, [X22]
	138 Move X1, [X8+64]
	139 Call 0x1C17E00
	140 Compare X0, 0
	141 JumpIfEqual {419}
	142 Move W8, [X22+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X21]
	145 Move X9, 0xCC5000
	146 Move [X22+40], X8
	147 Move X8, [X19+32]
	148 Move X9, [X9+1144]
	149 Move [X31+16], X8
	150 Move X0, [X9]
	151 Add X1, X31, 16
	152 Call 0x1C17E04
	153 Move X21, X0
	154 Compare X0, 0
	155 JumpIfEqual {162}
	156 Move X8, [X22]
	157 Move X1, [X8+64]
	158 Move X0, X21
	159 Call 0x1C17E00
	160 Compare X0, 0
	161 JumpIfEqual {422}
	162 Move W8, [X22+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move [X22+48], X21
	165 Move X21, 0xCCD000
	166 Move X21, [X21+1824]
	167 Move X0, [X21]
	168 Compare X0, 0
	169 JumpIfEqual {176}
	170 Move X8, [X22]
	171 Move X1, [X8+64]
	172 Call 0x1C17E00
	173 Compare X0, 0
	174 JumpIfEqual {425}
	175 Move W8, [X22+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X8, [X21]
	178 Move [X22+56], X8
	179 Move X0, X22
	180 Move X1, X31
	181 Call String.Concat, X0
	182 Move X21, X0
	183 Move X22, [X19+40]
	184 Compare X22, 0
	185 JumpIfEqual {207}
	186 Move X8, 0xCC6000
	187 Move X8, [X8+2600]
	188 Move X0, [X8]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X0, X22
	194 Move X1, X31
	195 Call Uri.EscapeDataString, X0
	196 Move X8, 0xD00000
	197 Move X8, [X8+208]
	198 Move X9, 0xCCD000
	199 Move X9, [X9+1824]
	200 Move X2, X0
	201 Move X1, [X8]
	202 Move X3, [X9]
	203 Move X0, X21
	204 Move X4, X31
	205 Call String.Concat, X0, X1, X2, X3
	206 Move X21, X0
	207 Compare X24, 0
	208 JumpIfEqual {402}
	209 Move X0, [X24+32]
	210 Compare X0, 0
	211 JumpIfEqual {403}
	212 Move X1, X31
	213 Call Uri.get_AbsolutePath, X0
	214 Move X8, 0xCCD000
	215 Move X8, [X8+2264]
	216 Move X22, X0
	217 Move X0, [X8]
	218 Move W1, 1
	219 Call 0x1C17D6C
	220 Move X1, X0
	221 Compare X1, 0
	222 JumpIfEqual {404}
	223 Move W8, [X1+24]
	224 Compare W8, 0
	225 JumpIfEqual {405}
	226 Move W8, 47
	227 NotImplemented "Instruction STRH not yet implemented."
	228 Compare X22, 0
	229 JumpIfEqual {406}
	230 Move X0, X22
	231 Move X2, X31
	232 Call String.TrimEnd, X0, X1
	233 Move X1, X20
	234 Move X2, X31
	235 Call String.Concat, X0, X1
	236 Move X8, 0xCCD000
	237 Move X8, [X8+928]
	238 Move X22, X0
	239 Move X23, [X24+32]
	240 Move X0, [X8]
	241 Call 0x1C17F10
	242 Move X20, X0
	243 Move X1, X23
	244 Move X2, X31
	245 Call UriBuilder..ctor, X0, X1
	246 Compare X20, 0
	247 JumpIfEqual {407}
	248 Move X0, X20
	249 Move X1, X22
	250 Move X2, X31
	251 Call UriBuilder.set_Path, X0, X1
	252 Move X0, X20
	253 Move X1, X21
	254 Move X2, X31
	255 Call UriBuilder.set_Query, X0, X1
	256 Move X0, X20
	257 Move X1, X31
	258 Call UriBuilder.get_Uri, X0
	259 Move X8, 0xCED000
	260 Move X9, 0xCC5000
	261 Move X8, [X8+1232]
	262 Move X9, [X9+1744]
	263 Move X20, X0
	264 Move X21, [X8]
	265 Move X0, [X9]
	266 Call 0x1C17F10
	267 Move X8, 0xCC5000
	268 Move X8, [X8+1728]
	269 Move X22, X0
	270 Move X1, [X8]
	271 Call Dictionary`2<Object, Object>..ctor, X0
	272 Move X8, 0xCFF000
	273 Move X8, [X8+2008]
	274 Move X1, [X19+56]
	275 Move X0, [X8]
	276 Move X2, X31
	277 Call String.Concat, X0, X1
	278 Compare X22, 0
	279 JumpIfEqual {408}
	280 Move X8, 0xCFF000
	281 Move X8, [X8+2000]
	282 Move X9, 0xCC5000
	283 Move X9, [X9+2064]
	284 Move X2, X0
	285 Move X1, [X8]
	286 Move X3, [X9]
	287 Move X0, X22
	288 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	289 Move X23, [X24+16]
	290 Compare X23, 0
	291 JumpIfEqual {409}
	292 Move X10, 0xCFF000
	293 Move X10, [X10+1976]
	294 Move X8, [X23]
	295 Move W25, [X24+24]
	296 Move X26, [X19+64]
	297 Move X24, [X19+72]
	298 Move X1, [X10]
	299 NotImplemented "Instruction LDRH not yet implemented."
	300 Compare X9, 0
	301 JumpIfEqual {308}
	302 Move X10, [X8+176]
	303 Add X10, X10, 8
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Subtract X9, X9, 1
	307 Add X10, X10, 16
	308 Move W2, 3
	309 Move X0, X23
	310 Call 0x1C5D788
	311 Move X8, [X19+80]
	312 Move TEMP, 0
	313 Not TEMP
	314 Move W9, TEMP
	315 Move [X31+24], X8
	316 Move [X19+80], X31
	317 Move [X19], W9
	318 Move W9, [X10]
	319 Add W9, W9, 3
	320 Add X8, X8, W9
	321 Add X0, X8, 312
	322 Move X8, [X0]
	323 Move X9, [X0+8]
	324 Move X0, X23
	325 Move X1, X21
	326 Move X2, X20
	327 Move X3, X22
	328 Move X4, X31
	329 Move W5, W25
	330 Move X6, X26
	331 Move X7, X24
	332 Move [X31], X9
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Compare X0, 0
	335 JumpIfEqual {410}
	336 Move X8, 0xCC7000
	337 Move X8, [X8+504]
	338 Move X1, [X8]
	339 Call Task`1<Object>.GetAwaiter, X0
	340 Move X8, 0xCC7000
	341 Move X8, [X8+496]
	342 Move [X31+24], X0
	343 Move X1, [X8]
	344 Add X0, X31, 24
	345 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	346 Move TEMP, X0
	347 And TEMP, TEMP, 1
	348 Compare TEMP, 1
	349 JumpIfNotEqual {375}
	350 Move X8, 0xCC7000
	351 Move X8, [X8+480]
	352 Add X0, X31, 24
	353 Move X1, [X8]
	354 Call TaskAwaiter`1<Object>.GetResult, X0
	355 Move X8, 0xD00000
	356 Move X8, [X8+200]
	357 Move X1, [X8]
	358 Call JsonParser.FromJson, X0
	359 Move TEMP, 1
	360 Not TEMP
	361 Move W8, TEMP
	362 Move [X19+8], W8
	363 Move X20, X0
	364 Move X0, [X27]
	365 Move X21, 0xD00000
	366 Move W8, [X0+224]
	367 Move X21, [X21+192]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move X2, [X21]
	372 Move X0, X19
	373 Move X1, X20
	374 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	375 Move [X19], W31
	376 Move X8, [X31+24]
	377 Move [X19+80], X8
	378 Move X0, [X27]
	379 Move W8, [X0+224]
	380 Compare W8, 0
	381 JumpIfNotEqual {383}
	382 Call 0x1C17DFC
	383 Move X8, 0xD00000
	384 Move X8, [X8+184]
	385 Add X0, X19, 8
	386 Move X3, [X8]
	387 Add X1, X31, 24
	388 Move X2, X19
	389 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	390 Move X20, [X31+96]
	391 Move X19, [X31+104]
	392 Move X22, [X31+80]
	393 Move X21, [X31+88]
	394 Move X24, [X31+64]
	395 Move X23, [X31+72]
	396 Move X26, [X31+48]
	397 Move X25, [X31+56]
	398 Move X30, [X31+32]
	399 Move X27, [X31+40]
	400 Add X31, X31, 112
	401 Return 
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Call 0x1C17F28
	406 Call 0x1C17F20
	407 Call 0x1C17F20
	408 Call 0x1C17F20
	409 Call 0x1C17F20
	410 Call 0x1C17F20
	411 Call 0x1C17F20
	412 Call 0x1C17F28
	413 Call 0x1C17F28
	414 Call 0x1C17F28
	415 Call 0x1C17F28
	416 Call 0x1C17F44
	417 Move X1, X31
	418 Call 0x1C17DEC
	419 Call 0x1C17F44
	420 Move X1, X31
	421 Call 0x1C17DEC
	422 Call 0x1C17F44
	423 Move X1, X31
	424 Call 0x1C17DEC
	425 Call 0x1C17F44
	426 Move X1, X31
	427 Call 0x1C17DEC
	428 Move X20, X0
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X0, X20
	431 Call 0x3EB2AD0
	432 Move X20, X0
	433 Move X0, 0xCC4000
	434 Move X0, [X0+2000]
	435 Call 0x1C17D08
	436 Move X8, [X20]
	437 Move X1, [X8]
	438 Call 0x1C18270
	439 Move TEMP, X0
	440 And TEMP, TEMP, 1
	441 Compare TEMP, 1
	442 JumpIfNotEqual {463}
	443 Move X20, [X20]
	444 Call 0x3EB2AE0
	445 Move TEMP, 1
	446 Not TEMP
	447 Move W8, TEMP
	448 Move [X19+8], W8
	449 Move X0, 0xCFF000
	450 Move X0, [X0+1608]
	451 Call 0x1C17D08
	452 Move W8, [X0+224]
	453 Compare W8, 0
	454 JumpIfNotEqual {456}
	455 Call 0x1C17DFC
	456 Move X0, 0xD00000
	457 Move X0, [X0+216]
	458 Call 0x1C17D08
	459 Move X2, X0
	460 Move X0, X19
	461 Move X1, X20
	462 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	463 Move W0, 8
	464 Call 0x3EB2AF0
	465 Move X8, [X20]
	466 Move [X0], X8
	467 Move X1, 0xA85000
	468 Add X1, X1, 3672
	469 Move X2, X31
	470 Call 0x3EB2B00
	471 Move X20, X0
	472 Call 0x3EB2AE0
	473 Move X0, X20
	474 Call 0x1D2D690
	475 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03430700 BL 0x1C16D08
	0x03430704 MOV X1, X0
	0x03430708 MOV X0, X20
	0x0343070C BL 0x1C16DEC
	0x03430710 BL 0x1C16F20
	0x03430714 BL 0x1C16F20
	0x03430718 BL 0x1C16F20
	0x0343071C BL 0x1C16F20
	0x03430720 BL 0x1C16F28
	0x03430724 BL 0x1C16F20
	0x03430728 BL 0x1C16F20
	0x0343072C BL 0x1C16F20
	0x03430730 BL 0x1C16F20
	0x03430734 BL 0x1C16F20
	0x03430738 BL 0x1C16F20
	0x0343073C BL 0x1C16F28
	0x03430740 BL 0x1C16F28
	0x03430744 BL 0x1C16F28
	0x03430748 BL 0x1C16F28
	0x0343074C BL 0x1C16F44
	0x03430750 MOV X1, X31
	0x03430754 BL 0x1C16DEC
	0x03430758 BL 0x1C16F44
	0x0343075C MOV X1, X31
	0x03430760 BL 0x1C16DEC
	0x03430764 BL 0x1C16F44
	0x03430768 MOV X1, X31
	0x0343076C BL 0x1C16DEC
	0x03430770 BL 0x1C16F44
	0x03430774 MOV X1, X31
	0x03430778 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFAE000
	007 Move X21, 0xCFF000
	008 Move W8, [X22+1626]
	009 Move X21, [X21+1608]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD00000
	017 Move X0, [X0+224]
	018 Call 0x1C17CF4
	019 Move X0, 0xCFF000
	020 Move X0, [X0+1608]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1626], W8
	024 Move X0, [X21]
	025 Move X21, 0xD00000
	026 Move W8, [X0+224]
	027 Move X21, [X21+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

