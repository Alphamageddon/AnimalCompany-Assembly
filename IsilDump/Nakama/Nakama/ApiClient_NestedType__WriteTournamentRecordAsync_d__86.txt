Type: Nakama.ApiClient/<WriteTournamentRecordAsync>d__86

Method: System.Void MoveNext()

Disassembly:
	0x0343F3B4 LDR X0, [X0 + 0x960]
	0x0343F3B8 BL 0x1C16CF4
	0x0343F3BC MOVZ W8, 0x1
	0x0343F3C0 STRB W8, [X22 + 0x6A7]
	0x0343F3C4 LDR X1, [X23]
	0x0343F3C8 LDR X2, [X24]
	0x0343F3CC MOV X0, X21
	0x0343F3D0 MOV X4, X20
	0x0343F3D4 MOV X5, X19
	0x0343F3D8 LDP X20, X19, [X31 + 0x30]
	0x0343F3DC LDP X22, X21, [X31 + 0x20]
	0x0343F3E0 LDP X24, X23, [X31 + 0x10]
	0x0343F3E4 MOVZ W3, 0x1CB6
	0x0343F3E8 MOVZ W6, 0x1
	0x0343F3EC LDR X30, [X31], #0x40
	0x0343F3F0 B 0x343F3F4
	0x0343F3F4 STP X29, X30, [X31 - 0x60]!
	0x0343F3F8 STP X28, X27, [X31 + 0x10]
	0x0343F3FC STP X26, X25, [X31 + 0x20]
	0x0343F400 STP X24, X23, [X31 + 0x30]
	0x0343F404 STP X22, X21, [X31 + 0x40]
	0x0343F408 STP X20, X19, [X31 + 0x50]
	0x0343F40C ADRP X27, 0xF9E000
	0x0343F410 ADRP X29, 0xCF0000
	0x0343F414 ADRP X28, 0xCF0000
	0x0343F418 ADRP X26, 0xCF0000
	0x0343F41C LDRB W8, [X27 + 0x6A8]
	0x0343F420 LDR X29, [X29 + 0x5F0]
	0x0343F424 LDR X28, [X28 + 0x5F8]
	0x0343F428 LDR X26, [X26 + 0x600]
	0x0343F42C MOV W25, W6
	0x0343F430 MOV X20, X5
	0x0343F434 MOV X24, X4
	0x0343F438 MOV W21, W3
	0x0343F43C MOV X22, X2
	0x0343F440 MOV X23, X1
	0x0343F444 MOV X19, X0
	0x0343F448 TBNZ X8, 0x0, 0x343F4B4
	0x0343F44C ADRP X0, 0xCF0000
	0x0343F450 LDR X0, [X0 + 0x608]
	0x0343F454 BL 0x1C16CF4
	0x0343F458 ADRP X0, 0xCEF000
	0x0343F45C LDR X0, [X0 + 0x7B8]
	0x0343F460 BL 0x1C16CF4
	0x0343F464 ADRP X0, 0xCF0000
	0x0343F468 LDR X0, [X0 + 0x5F0]
	0x0343F46C BL 0x1C16CF4
	0x0343F470 ADRP X0, 0xCF0000
	0x0343F474 LDR X0, [X0 + 0x610]
	0x0343F478 BL 0x1C16CF4
	0x0343F47C ADRP X0, 0xCF0000
	0x0343F480 LDR X0, [X0 + 0x600]
	0x0343F484 BL 0x1C16CF4
	0x0343F488 ADRP X0, 0xCF0000
	0x0343F48C LDR X0, [X0 + 0x618]
	0x0343F490 BL 0x1C16CF4
	0x0343F494 ADRP X0, 0xCF0000
	0x0343F498 LDR X0, [X0 + 0x5F8]
	0x0343F49C BL 0x1C16CF4
	0x0343F4A0 ADRP X0, 0xCBD000
	0x0343F4A4 LDR X0, [X0 + 0x3A0]
	0x0343F4A8 BL 0x1C16CF4
	0x0343F4AC MOVZ W8, 0x1
	0x0343F4B0 STRB W8, [X27 + 0x6A8]
	0x0343F4B4 LDR X0, [X29]
	0x0343F4B8 AND W27, W25, 0x1
	0x0343F4BC BL 0x1C16F10
	0x0343F4C0 LDR X2, [X28]
	0x0343F4C4 MOV X1, X31
	0x0343F4C8 MOV X3, X31
	0x0343F4CC MOV X25, X0
	0x0343F4D0 BL 0x3477E2C
	0x0343F4D4 LDR X0, [X26]
	0x0343F4D8 BL 0x1C16F10
	0x0343F4DC MOVZ W1, 0x1F4
	0x0343F4E0 MOVZ W2, 0x4
	0x0343F4E4 MOV X3, X31
	0x0343F4E8 MOV X4, X25
	0x0343F4EC MOV X5, X31
	0x0343F4F0 MOV X26, X0
	0x0343F4F4 BL 0x3477F30
	0x0343F4F8 MOV X0, X19
	0x0343F4FC MOV X1, X31
	0x0343F500 STR X26, [X19 + 0x18]
	0x0343F504 BL 0x33BDD8C
	0x0343F508 STRB W27, [X19 + 0x10]
	0x0343F50C STR X22, [X19 + 0x20]
	0x0343F510 STR W21, [X19 + 0x28]
	0x0343F514 STP X23, X24, [X19 + 0x30]
	0x0343F518 ADRP X8, 0xCBD000
	0x0343F51C LDR X8, [X8 + 0x3A0]
	0x0343F520 LDR X0, [X8]
	0x0343F524 BL 0x1C16F10
	0x0343F528 MOV X1, X23
	0x0343F52C MOV X2, X22
	0x0343F530 MOV W3, W21
	0x0343F534 MOV X4, X31
	0x0343F538 MOV X24, X0
	0x0343F53C BL 0x3628830
	0x0343F540 CBZ X24, 0x343F65C
	0x0343F544 ADRP X21, 0xCF0000
	0x0343F548 ADRP X23, 0xCF0000
	0x0343F54C LDR X21, [X21 + 0x608]
	0x0343F550 LDR X23, [X23 + 0x610]
	0x0343F554 MOV X0, X24
	0x0343F558 MOV X1, X31
	0x0343F55C BL 0x3628A38
	0x0343F560 LDR X8, [X21]
	0x0343F564 MOV X21, X0
	0x0343F568 MOV X0, X8
	0x0343F56C BL 0x1C16F10
	0x0343F570 MOVZ W3, 0xF
	0x0343F574 MOV X1, X21
	0x0343F578 MOV X2, X20
	0x0343F57C MOV X4, X31
	0x0343F580 MOV X22, X0
	0x0343F584 BL 0x340DB34
	0x0343F588 STR X22, [X19 + 0x48]
	0x0343F58C LDR X0, [X23]
	0x0343F590 LDR W8, [X0 + 0xE0]
	0x0343F594 CBNZ W8, 0x343F5A0
	0x0343F598 BL 0x1C16DFC
	0x0343F59C LDR X0, [X23]
	0x0343F5A0 LDR X8, [X0 + 0xB8]
	0x0343F5A4 MOV X0, X19
	0x0343F5A8 LDR X1, [X8]
	0x0343F5AC BL 0x343F0C8
	0x0343F5B0 CBZ X20, 0x343F65C
	0x0343F5B4 ADRP X10, 0xCEF000
	0x0343F5B8 LDR X8, [X20]
	0x0343F5BC LDR X10, [X10 + 0x7B8]
	0x0343F5C0 ADRP X21, 0xCF0000
	0x0343F5C4 LDRH W9, [X8 + 0x12E]
	0x0343F5C8 LDR X1, [X10]
	0x0343F5CC LDR X21, [X21 + 0x618]
	0x0343F5D0 CBZ X9, 0x343F5F4
	0x0343F5D4 LDR X10, [X8 + 0xB0]
	0x0343F5D8 ADD X10, X10, 0x8
	0x0343F5DC LDUR X11, [X10 - 0x8]
	0x0343F5E0 CMP X11, X1
	0x0343F5E4 B.EQ 0x343F604
	0x0343F5E8 SUBS X9, X9, 0x1
	0x0343F5EC ADD X10, X10, 0x10
	0x0343F5F0 B.NE 0x343F5DC
	0x0343F5F4 MOV X0, X20
	0x0343F5F8 MOV W2, W31
	0x0343F5FC BL 0x1C5C788
	0x0343F600 B 0x343F610
	0x0343F604 LDRSW X9, [X10]
	0x0343F608 ADD X8, X8, X9, 0x4, LSL
	0x0343F60C ADD X0, X8, 0x138
	0x0343F610 LDP X8, X1, [X0]
	0x0343F614 MOV X0, X20
	0x0343F618 BLR X8
	0x0343F61C LDR X8, [X21]
	0x0343F620 MOV X20, X0
	0x0343F624 MOV X0, X8
	0x0343F628 BL 0x1C16F10
	0x0343F62C MOV X1, X20
	0x0343F630 MOV X2, X31
	0x0343F634 MOV X21, X0
	0x0343F638 BL 0x3478138
	0x0343F63C STR X21, [X19 + 0x58]
	0x0343F640 LDP X20, X19, [X31 + 0x50]
	0x0343F644 LDP X22, X21, [X31 + 0x40]
	0x0343F648 LDP X24, X23, [X31 + 0x30]
	0x0343F64C LDP X26, X25, [X31 + 0x20]
	0x0343F650 LDP X28, X27, [X31 + 0x10]
	0x0343F654 LDP X29, X30, [X31], #0x60
	0x0343F658 RET
	0x0343F65C BL 0x1C16F20
	0x0343F660 STP X30, X23, [X31 - 0x30]!
	0x0343F664 STP X22, X21, [X31 + 0x10]
	0x0343F668 STP X20, X19, [X31 + 0x20]
	0x0343F66C MOV X21, X2
	0x0343F670 MOV X22, X1
	0x0343F674 MOV X23, X0
	0x0343F678 MOV W0, W31
	0x0343F67C MOV W1, W31
	0x0343F680 MOV X2, X31
	0x0343F684 MOV X19, X4
	0x0343F688 MOV W20, W3
	0x0343F68C BL 0x34718BC
	0x0343F690 MOV X1, X22
	0x0343F694 MOV X2, X21
	0x0343F698 MOV W3, W20
	0x0343F69C MOV X4, X19
	0x0343F6A0 LDP X20, X19, [X31 + 0x20]
	0x0343F6A4 LDP X22, X21, [X31 + 0x10]
	0x0343F6A8 MOVZ W6, 0x1
	0x0343F6AC MOV X5, X0
	0x0343F6B0 MOV X0, X23
	0x0343F6B4 LDP X30, X23, [X31], #0x30
	0x0343F6B8 B 0x343F3F4
	0x0343F6BC STP X30, X21, [X31 - 0x20]!
	0x0343F6C0 STP X20, X19, [X31 + 0x10]
	0x0343F6C4 MOV X19, X2
	0x0343F6C8 MOV X20, X1
	0x0343F6CC MOV X21, X0
	0x0343F6D0 MOV W0, W31
	0x0343F6D4 MOV W1, W31
	0x0343F6D8 MOV X2, X31
	0x0343F6DC BL 0x34718BC
	0x0343F6E0 MOV X1, X20
	0x0343F6E4 MOV X2, X19
	0x0343F6E8 LDP X20, X19, [X31 + 0x10]
	0x0343F6EC MOVZ W4, 0x1
	0x0343F6F0 MOV X3, X0
	0x0343F6F4 MOV X0, X21
	0x0343F6F8 LDP X30, X21, [X31], #0x20
	0x0343F6FC B 0x343F700
	0x0343F700 STP X30, X27, [X31 - 0x50]!
	0x0343F704 STP X26, X25, [X31 + 0x10]
	0x0343F708 STP X24, X23, [X31 + 0x20]
	0x0343F70C STP X22, X21, [X31 + 0x30]
	0x0343F710 STP X20, X19, [X31 + 0x40]
	0x0343F714 ADRP X27, 0xF9E000
	0x0343F718 ADRP X26, 0xCF0000
	0x0343F71C ADRP X25, 0xCF0000
	0x0343F720 ADRP X24, 0xCF0000
	0x0343F724 LDRB W8, [X27 + 0x6A9]
	0x0343F728 LDR X26, [X26 + 0x5F0]
	0x0343F72C LDR X25, [X25 + 0x5F8]
	0x0343F730 LDR X24, [X24 + 0x600]
	0x0343F734 MOV W23, W4
	0x0343F738 MOV X20, X3
	0x0343F73C MOV X22, X2
	0x0343F740 MOV X21, X1
	0x0343F744 MOV X19, X0
	0x0343F748 TBNZ X8, 0x0, 0x343F7A8
	0x0343F74C ADRP X0, 0xCF0000
	0x0343F750 LDR X0, [X0 + 0x608]
	0x0343F754 BL 0x1C16CF4
	0x0343F758 ADRP X0, 0xCEF000
	0x0343F75C LDR X0, [X0 + 0x7B8]
	0x0343F760 BL 0x1C16CF4
	0x0343F764 ADRP X0, 0xCF0000
	0x0343F768 LDR X0, [X0 + 0x5F0]
	0x0343F76C BL 0x1C16CF4
	0x0343F770 ADRP X0, 0xCF0000
	0x0343F774 LDR X0, [X0 + 0x610]
	0x0343F778 BL 0x1C16CF4
	0x0343F77C ADRP X0, 0xCF0000
	0x0343F780 LDR X0, [X0 + 0x600]
	0x0343F784 BL 0x1C16CF4
	0x0343F788 ADRP X0, 0xCF0000
	0x0343F78C LDR X0, [X0 + 0x618]
	0x0343F790 BL 0x1C16CF4
	0x0343F794 ADRP X0, 0xCF0000
	0x0343F798 LDR X0, [X0 + 0x5F8]
	0x0343F79C BL 0x1C16CF4
	0x0343F7A0 MOVZ W8, 0x1
	0x0343F7A4 STRB W8, [X27 + 0x6A9]
	0x0343F7A8 LDR X0, [X26]
	0x0343F7AC AND W26, W23, 0x1
	0x0343F7B0 BL 0x1C16F10
	0x0343F7B4 LDR X2, [X25]
	0x0343F7B8 MOV X1, X31
	0x0343F7BC MOV X3, X31
	0x0343F7C0 MOV X23, X0
	0x0343F7C4 BL 0x3477E2C
	0x0343F7C8 LDR X0, [X24]
	0x0343F7CC BL 0x1C16F10
	0x0343F7D0 MOVZ W1, 0x1F4
	0x0343F7D4 MOVZ W2, 0x4
	0x0343F7D8 MOV X3, X31
	0x0343F7DC MOV X4, X23
	0x0343F7E0 MOV X5, X31
	0x0343F7E4 MOV X24, X0
	0x0343F7E8 BL 0x3477F30
	0x0343F7EC MOV X0, X19
	0x0343F7F0 MOV X1, X31
	0x0343F7F4 STR X24, [X19 + 0x18]
	0x0343F7F8 BL 0x33BDD8C
	0x0343F7FC STRB W26, [X19 + 0x10]
	0x0343F800 CBZ X21, 0x343F934
	0x0343F804 ADRP X24, 0xCF0000
	0x0343F808 ADRP X23, 0xCF0000
	0x0343F80C LDR X24, [X24 + 0x608]
	0x0343F810 LDR X23, [X23 + 0x610]
	0x0343F814 MOV X0, X21
	0x0343F818 MOV X1, X31
	0x0343F81C BL 0x361C394
	0x0343F820 STR X0, [X19 + 0x20]
	0x0343F824 MOV X0, X21
	0x0343F828 MOV X1, X31
	0x0343F82C BL 0x361CC2C
	0x0343F830 STR W0, [X19 + 0x28]
	0x0343F834 MOV X0, X21
	0x0343F838 MOV X1, X31
	0x0343F83C BL 0x361CEF0
	0x0343F840 STP X0, X22, [X19 + 0x30]
	0x0343F844 LDR X0, [X24]
	0x0343F848 BL 0x1C16F10
	0x0343F84C MOVZ W3, 0xF
	0x0343F850 MOV X1, X21
	0x0343F854 MOV X2, X20
	0x0343F858 MOV X4, X31
	0x0343F85C MOV X22, X0
	0x0343F860 BL 0x340DB34
	0x0343F864 STR X22, [X19 + 0x48]
	0x0343F868 LDR X0, [X23]
	0x0343F86C LDR W8, [X0 + 0xE0]
	0x0343F870 CBNZ W8, 0x343F87C
	0x0343F874 BL 0x1C16DFC
	0x0343F878 LDR X0, [X23]
	0x0343F87C LDR X8, [X0 + 0xB8]
	0x0343F880 MOV X0, X19
	0x0343F884 LDR X1, [X8]
	0x0343F888 BL 0x343F0C8
	0x0343F88C CBZ X20, 0x343F934
	0x0343F890 ADRP X10, 0xCEF000
	0x0343F894 LDR X8, [X20]
	0x0343F898 LDR X10, [X10 + 0x7B8]
	0x0343F89C ADRP X21, 0xCF0000
	0x0343F8A0 LDRH W9, [X8 + 0x12E]
	0x0343F8A4 LDR X1, [X10]
	0x0343F8A8 LDR X21, [X21 + 0x618]
	0x0343F8AC CBZ X9, 0x343F8D0
	0x0343F8B0 LDR X10, [X8 + 0xB0]
	0x0343F8B4 ADD X10, X10, 0x8
	0x0343F8B8 LDUR X11, [X10 - 0x8]
	0x0343F8BC CMP X11, X1
	0x0343F8C0 B.EQ 0x343F8E0
	0x0343F8C4 SUBS X9, X9, 0x1
	0x0343F8C8 ADD X10, X10, 0x10
	0x0343F8CC B.NE 0x343F8B8
	0x0343F8D0 MOV X0, X20
	0x0343F8D4 MOV W2, W31
	0x0343F8D8 BL 0x1C5C788
	0x0343F8DC B 0x343F8EC
	0x0343F8E0 LDRSW X9, [X10]
	0x0343F8E4 ADD X8, X8, X9, 0x4, LSL
	0x0343F8E8 ADD X0, X8, 0x138
	0x0343F8EC LDP X8, X1, [X0]
	0x0343F8F0 MOV X0, X20
	0x0343F8F4 BLR X8
	0x0343F8F8 LDR X8, [X21]
	0x0343F8FC MOV X20, X0
	0x0343F900 MOV X0, X8
	0x0343F904 BL 0x1C16F10
	0x0343F908 MOV X1, X20
	0x0343F90C MOV X2, X31
	0x0343F910 MOV X21, X0
	0x0343F914 BL 0x3478138
	0x0343F918 STR X21, [X19 + 0x58]
	0x0343F91C LDP X20, X19, [X31 + 0x40]
	0x0343F920 LDP X22, X21, [X31 + 0x30]
	0x0343F924 LDP X24, X23, [X31 + 0x20]
	0x0343F928 LDP X26, X25, [X31 + 0x10]
	0x0343F92C LDP X30, X27, [X31], #0x50
	0x0343F930 RET
	0x0343F934 BL 0x1C16F20
	0x0343F938 SUB X31, X31, 0xE0
	0x0343F93C STR X30, [X31 + 0x90]
	0x0343F940 STP X26, X25, [X31 + 0xA0]
	0x0343F944 STP X24, X23, [X31 + 0xB0]
	0x0343F948 STP X22, X21, [X31 + 0xC0]
	0x0343F94C STP X20, X19, [X31 + 0xD0]
	0x0343F950 ADRP X26, 0xF9E000
	0x0343F954 ADRP X25, 0xCB7000
	0x0343F958 LDRB W8, [X26 + 0x6AA]
	0x0343F95C LDR X25, [X25 + 0x280]
	0x0343F960 MOV X20, X5
	0x0343F964 MOV X21, X4
	0x0343F968 MOV X22, X3
	0x0343F96C MOV X23, X2
	0x0343F970 MOV X24, X1
	0x0343F974 MOV X19, X0
	0x0343F978 TBNZ X8, 0x0, 0x343F99C
	0x0343F97C ADRP X0, 0xCF0000
	0x0343F980 LDR X0, [X0 + 0x620]
	0x0343F984 BL 0x1C16CF4
	0x0343F988 ADRP X0, 0xCB7000
	0x0343F98C LDR X0, [X0 + 0x280]
	0x0343F990 BL 0x1C16CF4
	0x0343F994 MOVZ W8, 0x1
	0x0343F998 STRB W8, [X26 + 0x6AA]
	0x0343F99C LDR X0, [X25]
	0x0343F9A0 MOVI V0.2D, 0x0
	0x0343F9A4 STR X31, [X31 + 0x80]
	0x0343F9A8 STP V0, V0, [X31 + 0x60]
	0x0343F9AC STP V0, V0, [X31 + 0x40]
	0x0343F9B0 STP V0, V0, [X31 + 0x20]
	0x0343F9B4 ADRP X25, 0xCF0000
	0x0343F9B8 LDR W8, [X0 + 0xE0]
	0x0343F9BC LDR X25, [X25 + 0x620]
	0x0343F9C0 CBNZ W8, 0x343F9C8
	0x0343F9C4 BL 0x1C16DFC
	0x0343F9C8 ADD X8, X31, 0x8
	0x0343F9CC MOV X0, X31
	0x0343F9D0 BL 0x32C4770
	0x0343F9D4 LDUR V0, [X31 + 0x8]
	0x0343F9D8 LDR X9, [X31 + 0x18]
	0x0343F9DC LDR X2, [X25]
	0x0343F9E0 ADD X8, X31, 0x20
	0x0343F9E4 STP X20, X21, [X31 + 0x60]
	0x0343F9E8 ORR X20, X8, 0xF
	0x0343F9EC MOVN W10, 0x0
	0x0343F9F0 ADD X1, X31, 0x20
	0x0343F9F4 MOV X0, X20
	0x0343F9F8 STP X24, X23, [X31 + 0x48]
	0x0343F9FC STR X22, [X31 + 0x58]
	0x0343FA00 STUR V0, [X31 + 0x28]
	0x0343FA04 STP X9, X19, [X31 + 0x38]
	0x0343FA08 STR W10, [X31 + 0x20]
	0x0343FA0C BL 0x21912B8
	0x0343FA10 MOV X0, X20
	0x0343FA14 MOV X1, X31
	0x0343FA18 BL 0x32C47F8
	0x0343FA1C LDP X20, X19, [X31 + 0xD0]
	0x0343FA20 LDP X22, X21, [X31 + 0xC0]
	0x0343FA24 LDP X24, X23, [X31 + 0xB0]
	0x0343FA28 LDP X26, X25, [X31 + 0xA0]
	0x0343FA2C LDR X30, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xF9F000
	014 Move W8, [X20+1693]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xCF1000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF1000
	024 Move X0, [X0+1320]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF0000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBE000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCB6000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB6000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB6000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF0000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF1000
	045 Move X0, [X0+1328]
	046 Call 0x1C17CF4
	047 Move X0, 0xCB8000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCB8000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCB8000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCBE000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCB7000
	060 Move X0, [X0+2600]
	061 Call 0x1C17CF4
	062 Move X0, 0xCDE000
	063 Move X0, [X0+1248]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF0000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xCF0000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xCF0000
	072 Move X0, [X0+3184]
	073 Call 0x1C17CF4
	074 Move X0, 0xCB5000
	075 Move X0, [X0+2440]
	076 Call 0x1C17CF4
	077 Move X0, 0xCF0000
	078 Move X0, [X0+3192]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+1693], W8
	082 Move [X31+24], X31
	083 Move X28, 0xCF0000
	084 Move W8, [X19]
	085 Move X28, [X28+1528]
	086 Compare W8, 0
	087 JumpIfEqual {239}
	088 Move X21, [X19+32]
	089 Compare X21, 0
	090 JumpIfEqual {331}
	091 Move X8, [X19+40]
	092 Compare X8, 0
	093 JumpIfEqual {349}
	094 Move X8, 0xCB7000
	095 Move X8, [X8+2600]
	096 Move X0, [X8]
	097 Move X8, 0xCF0000
	098 Move X8, [X8+3184]
	099 Move X25, [X19+48]
	100 Move W9, [X0+224]
	101 Move X20, [X8]
	102 Compare W9, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X21
	106 Move X1, X31
	107 Call Uri.EscapeDataString, X0
	108 Compare X20, 0
	109 JumpIfEqual {367}
	110 Move X8, 0xCF0000
	111 Move X8, [X8+3192]
	112 Move X2, X0
	113 Move X1, [X8]
	114 Move X0, X20
	115 Move X3, X31
	116 Call String.Replace, X0, X1, X2
	117 Compare X25, 0
	118 JumpIfEqual {368}
	119 Move X21, X0
	120 Move X0, [X25+32]
	121 Compare X0, 0
	122 JumpIfEqual {369}
	123 Move X8, 0xCB5000
	124 Move X8, [X8+2440]
	125 Move X20, [X8]
	126 Move X1, X31
	127 Call Uri.get_AbsolutePath, X0
	128 Move X8, 0xCBE000
	129 Move X8, [X8+2264]
	130 Move X22, X0
	131 Move X0, [X8]
	132 Move W1, 1
	133 Call 0x1C17D6C
	134 Move X1, X0
	135 Compare X1, 0
	136 JumpIfEqual {370}
	137 Move W8, [X1+24]
	138 Compare W8, 0
	139 JumpIfEqual {371}
	140 Move W8, 47
	141 NotImplemented "Instruction STRH not yet implemented."
	142 Compare X22, 0
	143 JumpIfEqual {372}
	144 Move X0, X22
	145 Move X2, X31
	146 Call String.TrimEnd, X0, X1
	147 Move X1, X21
	148 Move X2, X31
	149 Call String.Concat, X0, X1
	150 Move X8, 0xCBE000
	151 Move X8, [X8+928]
	152 Move X22, X0
	153 Move X23, [X25+32]
	154 Move X0, [X8]
	155 Call 0x1C17F10
	156 Move X21, X0
	157 Move X1, X23
	158 Move X2, X31
	159 Call UriBuilder..ctor, X0, X1
	160 Compare X21, 0
	161 JumpIfEqual {373}
	162 Move X0, X21
	163 Move X1, X22
	164 Move X2, X31
	165 Call UriBuilder.set_Path, X0, X1
	166 Move X0, X21
	167 Move X1, X20
	168 Move X2, X31
	169 Call UriBuilder.set_Query, X0, X1
	170 Move X0, X21
	171 Move X1, X31
	172 Call UriBuilder.get_Uri, X0
	173 Move X8, 0xCDE000
	174 Move X9, 0xCB6000
	175 Move X8, [X8+1248]
	176 Move X9, [X9+1744]
	177 Move X20, X0
	178 Move X21, [X8]
	179 Move X0, [X9]
	180 Call 0x1C17F10
	181 Move X8, 0xCB6000
	182 Move X8, [X8+1728]
	183 Move X22, X0
	184 Move X1, [X8]
	185 Call Dictionary`2<Object, Object>..ctor, X0
	186 Move X8, 0xCF0000
	187 Move X8, [X8+2008]
	188 Move X1, [X19+56]
	189 Move X0, [X8]
	190 Move X2, X31
	191 Call String.Concat, X0, X1
	192 Compare X22, 0
	193 JumpIfEqual {374}
	194 Move X8, 0xCF0000
	195 Move X8, [X8+2000]
	196 Move X9, 0xCB6000
	197 Move X9, [X9+2064]
	198 Move X2, X0
	199 Move X1, [X8]
	200 Move X3, [X9]
	201 Move X0, X22
	202 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	203 Move X0, [X19+40]
	204 Move X1, X31
	205 Call JsonWriter.ToJson, X0
	206 Move X23, X0
	207 Move X0, X31
	208 Call Encoding.get_UTF8
	209 Compare X0, 0
	210 JumpIfEqual {375}
	211 Move X8, [X0]
	212 Move X9, [X8+616]
	213 Move X2, [X8+624]
	214 Move X1, X23
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X24, [X25+16]
	217 Compare X24, 0
	218 JumpIfEqual {376}
	219 Move X10, 0xCF0000
	220 Move X10, [X10+1976]
	221 Move X8, [X24]
	222 Move W26, [X25+24]
	223 Move X27, [X19+64]
	224 Move X25, [X19+72]
	225 Move X1, [X10]
	226 NotImplemented "Instruction LDRH not yet implemented."
	227 Move X23, X0
	228 Compare X9, 0
	229 JumpIfEqual {236}
	230 Move X10, [X8+176]
	231 Add X10, X10, 8
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Subtract X9, X9, 1
	235 Add X10, X10, 16
	236 Move W2, 3
	237 Move X0, X24
	238 Call 0x1C5D788
	239 Move X8, [X19+80]
	240 Move TEMP, 0
	241 Not TEMP
	242 Move W9, TEMP
	243 Move [X31+24], X8
	244 Move [X19+80], X31
	245 Move [X19], W9
	246 Move W9, [X10]
	247 Add W9, W9, 3
	248 Add X8, X8, W9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X9, [X0+8]
	252 Move X0, X24
	253 Move X1, X21
	254 Move X2, X20
	255 Move X3, X22
	256 Move X4, X23
	257 Move W5, W26
	258 Move X6, X27
	259 Move X7, X25
	260 Move [X31], X9
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Compare X0, 0
	263 JumpIfEqual {377}
	264 Move X8, 0xCB8000
	265 Move X8, [X8+504]
	266 Move X1, [X8]
	267 Call Task`1<Object>.GetAwaiter, X0
	268 Move X8, 0xCB8000
	269 Move X8, [X8+496]
	270 Move [X31+24], X0
	271 Move X1, [X8]
	272 Add X0, X31, 24
	273 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {303}
	278 Move X8, 0xCB8000
	279 Move X8, [X8+480]
	280 Add X0, X31, 24
	281 Move X1, [X8]
	282 Call TaskAwaiter`1<Object>.GetResult, X0
	283 Move X8, 0xCF1000
	284 Move X8, [X8+1328]
	285 Move X1, [X8]
	286 Call JsonParser.FromJson, X0
	287 Move TEMP, 1
	288 Not TEMP
	289 Move W8, TEMP
	290 Move [X19+8], W8
	291 Move X20, X0
	292 Move X0, [X28]
	293 Move X21, 0xCF1000
	294 Move W8, [X0+224]
	295 Move X21, [X21+1320]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move X2, [X21]
	300 Move X0, X19
	301 Move X1, X20
	302 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	303 Move [X19], W31
	304 Move X8, [X31+24]
	305 Move [X19+80], X8
	306 Move X0, [X28]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move X8, 0xCF1000
	312 Move X8, [X8+1432]
	313 Add X0, X19, 8
	314 Move X3, [X8]
	315 Add X1, X31, 24
	316 Move X2, X19
	317 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	318 Move X20, [X31+96]
	319 Move X19, [X31+104]
	320 Move X22, [X31+80]
	321 Move X21, [X31+88]
	322 Move X24, [X31+64]
	323 Move X23, [X31+72]
	324 Move X26, [X31+48]
	325 Move X25, [X31+56]
	326 Move X28, [X31+32]
	327 Move X27, [X31+40]
	328 Move X30, [X31+16]
	329 Add X31, X31, 112
	330 Return 
	331 Move X0, 0xCBD000
	332 Move X0, [X0+1400]
	333 Call 0x1C17D08
	334 Call 0x1C17F10
	335 Move X20, X0
	336 Move X0, 0xCF0000
	337 Move X0, [X0+3200]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X20
	341 Move X2, X31
	342 Call ArgumentException..ctor, X0, X1
	343 Move X0, 0xCF1000
	344 Move X0, [X0+1440]
	345 Call 0x1C17D08
	346 Move X1, X0
	347 Move X0, X20
	348 Call 0x1C17DEC
	349 Move X0, 0xCBD000
	350 Move X0, [X0+1400]
	351 Call 0x1C17D08
	352 Call 0x1C17F10
	353 Move X20, X0
	354 Move X0, 0xCF1000
	355 Move X0, [X0+1344]
	356 Call 0x1C17D08
	357 Move X1, X0
	358 Move X0, X20
	359 Move X2, X31
	360 Call ArgumentException..ctor, X0, X1
	361 Move X0, 0xCF1000
	362 Move X0, [X0+1440]
	363 Call 0x1C17D08
	364 Move X1, X0
	365 Move X0, X20
	366 Call 0x1C17DEC
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F28
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Call 0x1C17F20
	375 Call 0x1C17F20
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Move X20, X0
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X0, X20
	381 Call 0x3EB2AD0
	382 Move X20, X0
	383 Move X0, 0xCB5000
	384 Move X0, [X0+2000]
	385 Call 0x1C17D08
	386 Move X8, [X20]
	387 Move X1, [X8]
	388 Call 0x1C18270
	389 Move TEMP, X0
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfNotEqual {413}
	393 Move X20, [X20]
	394 Call 0x3EB2AE0
	395 Move TEMP, 1
	396 Not TEMP
	397 Move W8, TEMP
	398 Move [X19+8], W8
	399 Move X0, 0xCF0000
	400 Move X0, [X0+1528]
	401 Call 0x1C17D08
	402 Move W8, [X0+224]
	403 Compare W8, 0
	404 JumpIfNotEqual {406}
	405 Call 0x1C17DFC
	406 Move X0, 0xCF1000
	407 Move X0, [X0+1352]
	408 Call 0x1C17D08
	409 Move X2, X0
	410 Move X0, X19
	411 Move X1, X20
	412 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	413 Move W0, 8
	414 Call 0x3EB2AF0
	415 Move X8, [X20]
	416 Move [X0], X8
	417 Move X1, 0xA76000
	418 Add X1, X1, 3672
	419 Move X2, X31
	420 Call 0x3EB2B00
	421 Move X20, X0
	422 Call 0x3EB2AE0
	423 Move X0, X20
	424 Call 0x1D2D690
	425 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343FA30 ADD X31, X31, 0xE0
	0x0343FA34 RET
	0x0343FA38 SUB X31, X31, 0xE0
	0x0343FA3C STR X30, [X31 + 0x90]
	0x0343FA40 STP X26, X25, [X31 + 0xA0]
	0x0343FA44 STP X24, X23, [X31 + 0xB0]
	0x0343FA48 STP X22, X21, [X31 + 0xC0]
	0x0343FA4C STP X20, X19, [X31 + 0xD0]
	0x0343FA50 ADRP X26, 0xF9E000
	0x0343FA54 ADRP X25, 0xCB7000
	0x0343FA58 LDRB W8, [X26 + 0x6AB]
	0x0343FA5C LDR X25, [X25 + 0x280]
	0x0343FA60 MOV X20, X5
	0x0343FA64 MOV X21, X4
	0x0343FA68 MOV X22, X3
	0x0343FA6C MOV X23, X2
	0x0343FA70 MOV X24, X1
	0x0343FA74 MOV X19, X0
	0x0343FA78 TBNZ X8, 0x0, 0x343FA9C
	0x0343FA7C ADRP X0, 0xCF0000
	0x0343FA80 LDR X0, [X0 + 0x628]
	0x0343FA84 BL 0x1C16CF4
	0x0343FA88 ADRP X0, 0xCB7000
	0x0343FA8C LDR X0, [X0 + 0x280]
	0x0343FA90 BL 0x1C16CF4
	0x0343FA94 MOVZ W8, 0x1
	0x0343FA98 STRB W8, [X26 + 0x6AB]
	0x0343FA9C LDR X0, [X25]
	0x0343FAA0 MOVI V0.2D, 0x0
	0x0343FAA4 STR X31, [X31 + 0x80]
	0x0343FAA8 STP V0, V0, [X31 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF9F000
	007 Move X21, 0xCF0000
	008 Move W8, [X22+1694]
	009 Move X21, [X21+1528]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF1000
	017 Move X0, [X0+1360]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF0000
	020 Move X0, [X0+1528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1694], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1360]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

