Type: Nakama.ApiValidatePurchaseGoogleRequest

Method: System.Boolean get_Persist()

Disassembly:
	0x0340CBE4 LDR X2, [X19 + 0x48]
	0x0340CBE8 LDR X1, [X21]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Persist(System.Boolean value)

Disassembly:
	0x0340CBEC LDR X3, [X22]
	0x0340CBF0 MOV X4, X31
	0x0340CBF4 BL 0x32277C4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.String get_Purchase()

Disassembly:
	0x0340CBF8 LDR X2, [X19 + 0x50]
	0x0340CBFC LDR X1, [X23]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Purchase(System.String value)

Disassembly:
	0x0340CC00 LDR X3, [X22]
	0x0340CC04 MOV X4, X31

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0340CC08 BL 0x32277C4
	0x0340CC0C LDR X2, [X19 + 0x58]
	0x0340CC10 LDR X1, [X24]
	0x0340CC14 LDR X3, [X22]
	0x0340CC18 MOV X4, X31
	0x0340CC1C BL 0x32277C4
	0x0340CC20 LDP X20, X19, [X31 + 0x50]
	0x0340CC24 LDP X22, X21, [X31 + 0x40]
	0x0340CC28 LDP X24, X23, [X31 + 0x30]
	0x0340CC2C LDP X26, X25, [X31 + 0x20]
	0x0340CC30 LDR X30, [X31 + 0x10]
	0x0340CC34 ADD X31, X31, 0x60
	0x0340CC38 RET
	0x0340CC3C BL 0x1C16F28
	0x0340CC40 BL 0x1C16F44
	0x0340CC44 MOV X1, X31
	0x0340CC48 BL 0x1C16DEC
	0x0340CC4C BL 0x1C16F20
	0x0340CC50 MOV X1, X31
	0x0340CC54 B 0x33BDD8C
	0x0340CC58 LDRB W0, [X0 + 0x10]
	0x0340CC5C RET
	0x0340CC60 AND W8, W1, 0x1
	0x0340CC64 STRB W8, [X0 + 0x10]
	0x0340CC68 RET
	0x0340CC6C LDR X0, [X0 + 0x18]
	0x0340CC70 RET
	0x0340CC74 STR X1, [X0 + 0x18]
	0x0340CC78 RET
	0x0340CC7C LDR W0, [X0 + 0x20]
	0x0340CC80 RET
	0x0340CC84 LDR W0, [X0 + 0x20]
	0x0340CC88 RET
	0x0340CC8C STR W1, [X0 + 0x20]
	0x0340CC90 RET
	0x0340CC94 LDR X0, [X0 + 0x28]
	0x0340CC98 RET
	0x0340CC9C STR X1, [X0 + 0x28]
	0x0340CCA0 RET
	0x0340CCA4 LDR X0, [X0 + 0x30]
	0x0340CCA8 RET
	0x0340CCAC STR X1, [X0 + 0x30]
	0x0340CCB0 RET
	0x0340CCB4 LDR X0, [X0 + 0x38]
	0x0340CCB8 RET
	0x0340CCBC STR X1, [X0 + 0x38]
	0x0340CCC0 RET
	0x0340CCC4 LDR X0, [X0 + 0x40]
	0x0340CCC8 RET
	0x0340CCCC STR X1, [X0 + 0x40]
	0x0340CCD0 RET
	0x0340CCD4 LDR X0, [X0 + 0x48]
	0x0340CCD8 RET
	0x0340CCDC STR X1, [X0 + 0x48]
	0x0340CCE0 RET
	0x0340CCE4 LDR X0, [X0 + 0x50]
	0x0340CCE8 RET
	0x0340CCEC STR X1, [X0 + 0x50]
	0x0340CCF0 RET
	0x0340CCF4 LDR X0, [X0 + 0x58]
	0x0340CCF8 RET
	0x0340CCFC STR X1, [X0 + 0x58]
	0x0340CD00 RET
	0x0340CD04 LDR W0, [X0 + 0x60]
	0x0340CD08 RET
	0x0340CD0C LDR W0, [X0 + 0x60]
	0x0340CD10 RET
	0x0340CD14 STR W1, [X0 + 0x60]
	0x0340CD18 RET
	0x0340CD1C LDR X0, [X0 + 0x68]
	0x0340CD20 RET
	0x0340CD24 STR X1, [X0 + 0x68]
	0x0340CD28 RET
	0x0340CD2C LDR X0, [X0 + 0x70]
	0x0340CD30 RET
	0x0340CD34 STR X1, [X0 + 0x70]
	0x0340CD38 RET
	0x0340CD3C SUB X31, X31, 0x70
	0x0340CD40 STP X29, X30, [X31 + 0x10]
	0x0340CD44 STP X28, X27, [X31 + 0x20]
	0x0340CD48 STP X26, X25, [X31 + 0x30]
	0x0340CD4C STP X24, X23, [X31 + 0x40]
	0x0340CD50 STP X22, X21, [X31 + 0x50]
	0x0340CD54 STP X20, X19, [X31 + 0x60]
	0x0340CD58 ADRP X20, 0xFD1000
	0x0340CD5C ADRP X21, 0xCE7000
	0x0340CD60 ADRP X22, 0xCE7000
	0x0340CD64 LDRB W8, [X20 + 0x566]
	0x0340CD68 LDR X21, [X21 + 0x988]
	0x0340CD6C LDR X22, [X22 + 0x9D0]
	0x0340CD70 MOV X19, X0
	0x0340CD74 TBNZ X8, 0x0, 0x340CE64
	0x0340CD78 ADRP X0, 0xD22000
	0x0340CD7C LDR X0, [X0 + 0x238]
	0x0340CD80 BL 0x1C16CF4
	0x0340CD84 ADRP X0, 0xD22000
	0x0340CD88 LDR X0, [X0 + 0x240]
	0x0340CD8C BL 0x1C16CF4
	0x0340CD90 ADRP X0, 0xCE7000
	0x0340CD94 LDR X0, [X0 + 0xB58]
	0x0340CD98 BL 0x1C16CF4
	0x0340CD9C ADRP X0, 0xCE7000
	0x0340CDA0 LDR X0, [X0 + 0x9D0]
	0x0340CDA4 BL 0x1C16CF4
	0x0340CDA8 ADRP X0, 0xD22000
	0x0340CDAC LDR X0, [X0 + 0x250]
	0x0340CDB0 BL 0x1C16CF4
	0x0340CDB4 ADRP X0, 0xD21000
	0x0340CDB8 LDR X0, [X0 + 0xDE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFD2000
	007 Move X21, 0xCE8000
	008 Move X22, 0xCE8000
	009 Move W8, [X20+1374]
	010 Move X21, [X21+2440]
	011 Move X22, [X22+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xCE8000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE8000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xCE8000
	024 Move X0, [X0+2104]
	025 Call 0x1C17CF4
	026 Move X0, 0xD23000
	027 Move X0, [X0+504]
	028 Call 0x1C17CF4
	029 Move X0, 0xD23000
	030 Move X0, [X0+520]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE8000
	033 Move X0, [X0+2440]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+1374], W8
	037 Move X0, [X22]
	038 Move X21, [X21]
	039 Move W1, 4
	040 Call 0x1C17D6C
	041 Compare X0, 0
	042 JumpIfEqual {123}
	043 Move X20, X0
	044 Compare X21, 0
	045 JumpIfEqual {52}
	046 Move X8, [X20]
	047 Move X0, X21
	048 Move X1, [X8+64]
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfEqual {120}
	052 Move W8, [X20+24]
	053 Compare W8, 0
	054 JumpIfEqual {119}
	055 Move X22, 0xD23000
	056 Move X22, [X22+504]
	057 Move [X20+32], X21
	058 Move X0, [X22]
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X8, [X20]
	062 Move X1, [X8+64]
	063 Call 0x1C17E00
	064 Compare X0, 0
	065 JumpIfEqual {120}
	066 Move W8, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X22]
	069 Move X9, 0xCE8000
	070 Move X9, [X9+2904]
	071 Add X1, X31, 12
	072 Move [X20+40], X8
	073 Move W8, [X19+16]
	074 Move X0, [X9]
	075 Move [X31+12], W8
	076 Call 0x1C17E04
	077 Move X21, X0
	078 Compare X0, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X0, X21
	082 Move X1, [X8+64]
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {120}
	086 Move W8, [X20+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X22, 0xCE8000
	089 Move X22, [X22+2104]
	090 Move [X20+48], X21
	091 Move X0, [X22]
	092 Compare X0, 0
	093 JumpIfEqual {100}
	094 Move X8, [X20]
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {120}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X22]
	102 Move X21, 0xD23000
	103 Move X21, [X21+520]
	104 Move X0, X20
	105 Move X1, X31
	106 Move [X20+56], X8
	107 Call String.Concat, X0
	108 Move X2, [X19+24]
	109 Move X1, [X21]
	110 Move X3, [X22]
	111 Move X4, X31
	112 Call String.Concat, X0, X1, X2, X3
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move X30, [X31+48]
	118 Return X0
	119 Call 0x1C17F28
	120 Call 0x1C17F44
	121 Move X1, X31
	122 Call 0x1C17DEC
	123 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0340CDBC BL 0x1C16CF4
	0x0340CDC0 ADRP X0, 0xCE7000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

