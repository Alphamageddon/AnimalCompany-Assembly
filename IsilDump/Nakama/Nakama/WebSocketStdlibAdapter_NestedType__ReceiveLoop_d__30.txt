Type: Nakama.WebSocketStdlibAdapter/<ReceiveLoop>d__30

Method: System.Void MoveNext()

Disassembly:
	0x03489070 MOV X0, X8
	0x03489074 MOV X2, X31
	0x03489078 BL 0x322BD98
	0x0348907C TBNZ X0, 0x1F, 0x34890A0
	0x03489080 MOV W1, W0
	0x03489084 LDR X0, [X24]
	0x03489088 CBZ X0, 0x3489BA8
	0x0348908C MOV X2, X31
	0x03489090 BL 0x3222A1C
	0x03489094 CBZ X20, 0x3489BA8
	0x03489098 MOV W1, W0
	0x0348909C B 0x3489124
	0x034890A0 MOV X0, X19
	0x034890A4 MOV W1, W22
	0x034890A8 MOV X2, X31
	0x034890AC BL 0x3222A1C
	0x034890B0 AND W8, W0, 0xFFFF
	0x034890B4 CMP W8, 0x75
	0x034890B8 B.NE 0x3489108
	0x034890BC LDR W8, [X19 + 0x10]
	0x034890C0 ADD W22, W21, 0x5
	0x034890C4 SUB W8, W8, 0x1
	0x034890C8 CMP W22, W8
	0x034890CC B.GE 0x3489108
	0x034890D0 ADD W1, W21, 0x2
	0x034890D4 MOVZ W2, 0x4
	0x034890D8 MOV X0, X19
	0x034890DC MOV X3, X31
	0x034890E0 BL 0x3228DE4
	0x034890E4 ADD X3, X31, 0x2C
	0x034890E8 MOVZ W1, 0x200
	0x034890EC MOV X2, X31
	0x034890F0 MOV X4, X31
	0x034890F4 BL 0x339A164
	0x034890F8 TBZ X0, 0x0, 0x3489108
	0x034890FC CBZ X20, 0x3489BA8
	0x03489100 LDR W1, [X31 + 0x2C]
	0x03489104 B 0x3489124
	0x03489108 MOV X0, X19
	0x0348910C MOV W1, W21
	0x03489110 MOV X2, X31
	0x03489114 BL 0x3222A1C
	0x03489118 CBZ X20, 0x3489BA8
	0x0348911C MOV W1, W0
	0x03489120 MOV W22, W21
	0x03489124 MOV X0, X20
	0x03489128 MOV X2, X31
	0x0348912C BL 0x3233D30
	0x03489130 LDR W8, [X19 + 0x10]
	0x03489134 ADD W21, W22, 0x1
	0x03489138 SUB W8, W8, 0x1
	0x0348913C CMP W21, W8
	0x03489140 B.LT 0x3489024
	0x03489144 B 0x3489328
	0x03489148 CBZ X20, 0x3489BA8
	0x0348914C MOV X0, X20
	0x03489150 MOV X1, X31
	0x03489154 BL 0x3397374
	0x03489158 TBZ X0, 0x0, 0x34891CC
	0x0348915C ADRP X8, 0xC6C000
	0x03489160 LDR X8, [X8 + 0xC48]
	0x03489164 LDR X0, [X8]
	0x03489168 LDR W8, [X0 + 0xE0]
	0x0348916C CBNZ W8, 0x3489174
	0x03489170 BL 0x1C16DFC
	0x03489174 MOV X0, X31
	0x03489178 BL 0x3338524
	0x0348917C ADRP X8, 0xC73000
	0x03489180 LDR X8, [X8 + 0x9E8]
	0x03489184 MOV X21, X0
	0x03489188 LDR X8, [X8]
	0x0348918C LDR W9, [X8 + 0xE0]
	0x03489190 CBNZ W9, 0x348919C
	0x03489194 MOV X0, X8
	0x03489198 BL 0x1C16DFC
	0x0348919C MOV X0, X19
	0x034891A0 MOV X1, X20
	0x034891A4 MOV X2, X21
	0x034891A8 MOV X3, X31
	0x034891AC BL 0x331D2EC
	0x034891B0 B 0x3489338
	0x034891B4 ADRP X8, 0xC6C000
	0x034891B8 LDR X8, [X8 + 0x278]
	0x034891BC LDR X8, [X8]
	0x034891C0 LDR X8, [X8 + 0xB8]
	0x034891C4 LDR X21, [X8]
	0x034891C8 B 0x348933C
	0x034891CC ADRP X8, 0xC9C000
	0x034891D0 LDR X0, [X24]
	0x034891D4 LDR X8, [X8 + 0x140]
	0x034891D8 LDR W9, [X0 + 0xE0]
	0x034891DC LDR X21, [X8]
	0x034891E0 CBNZ W9, 0x34891E8
	0x034891E4 BL 0x1C16DFC
	0x034891E8 MOV X0, X21
	0x034891EC MOV X1, X31
	0x034891F0 BL 0x338C698
	0x034891F4 MOV X1, X0
	0x034891F8 MOV X0, X20
	0x034891FC MOV X2, X31
	0x03489200 BL 0x3395194
	0x03489204 TBZ X0, 0x0, 0x3489278
	0x03489208 ADRP X8, 0xC6C000
	0x0348920C LDR X8, [X8 + 0xC48]
	0x03489210 LDR X0, [X8]
	0x03489214 LDR W8, [X0 + 0xE0]
	0x03489218 CBNZ W8, 0x3489220
	0x0348921C BL 0x1C16DFC
	0x03489220 MOV X0, X31
	0x03489224 BL 0x3338524
	0x03489228 ADRP X21, 0xC92000
	0x0348922C LDR X21, [X21 + 0x5F0]
	0x03489230 MOV X20, X0
	0x03489234 LDR X8, [X21]
	0x03489238 LDR W9, [X8 + 0xE0]
	0x0348923C CBNZ W9, 0x3489248
	0x03489240 MOV X0, X8
	0x03489244 BL 0x1C16DFC
	0x03489248 ADD X3, X31, 0x48
	0x0348924C MOVZ W1, 0xA7
	0x03489250 MOV X0, X19
	0x03489254 MOV X2, X20
	0x03489258 MOV X4, X31
	0x0348925C BL 0x33D7998
	0x03489260 LDUR V0, [X31 + 0x48]
	0x03489264 LDR X0, [X21]
	0x03489268 STR V0, [X31 + 0x3]
	0x0348926C ADD X1, X31, 0x30
	0x03489270 BL 0x1C16E04
	0x03489274 B 0x3489338
	0x03489278 ADRP X8, 0xC6A000
	0x0348927C LDR X8, [X8 + 0x830]
	0x03489280 MOV X0, X19
	0x03489284 MOV X2, X31
	0x03489288 LDR X1, [X8]
	0x0348928C BL 0x321BA08
	0x03489290 MOV X21, X31
	0x03489294 TBNZ X0, 0x0, 0x348933C
	0x03489298 LDR X8, [X20]
	0x0348929C MOV X0, X20
	0x034892A0 LDR X9, [X8 + 0x588]
	0x034892A4 LDR X1, [X8 + 0x590]
	0x034892A8 BLR X9
	0x034892AC TBZ X0, 0x0, 0x348936C
	0x034892B0 CBZ X19, 0x3489BA8
	0x034892B4 MOV X0, X19
	0x034892B8 MOV W1, W31
	0x034892BC MOV X2, X31
	0x034892C0 BL 0x3222A1C
	0x034892C4 AND W8, W0, 0xFFFF
	0x034892C8 CMP W8, 0x22
	0x034892CC B.NE 0x34892EC
	0x034892D0 LDR W8, [X19 + 0x10]
	0x034892D4 MOVZ W1, 0x1
	0x034892D8 MOV X0, X19
	0x034892DC MOV X3, X31
	0x034892E0 SUB W2, W8, 0x2
	0x034892E4 BL 0x3228DE4
	0x034892E8 MOV X19, X0
	0x034892EC ADRP X8, 0xC6A000
	0x034892F0 LDR X8, [X8 + 0xDF8]
	0x034892F4 LDR X0, [X8]
	0x034892F8 LDR W8, [X0 + 0xE0]
	0x034892FC CBNZ W8, 0x3489304
	0x03489300 BL 0x1C16DFC
	0x03489304 MOV X0, X20
	0x03489308 MOV X1, X19
	0x0348930C MOV W2, W31
	0x03489310 MOV X3, X31
	0x03489314 BL 0x33AF1B8
	0x03489318 B 0x3489338
	0x0348931C MOV X21, X19
	0x03489320 B 0x348933C
	0x03489324 CBZ X20, 0x3489BA8
	0x03489328 LDR X8, [X20]
	0x0348932C MOV X0, X20
	0x03489330 LDP X9, X1, [X8 + 0x168]
	0x03489334 BLR X9
	0x03489338 MOV X21, X0
	0x0348933C LDR X8, [X25 + 0x28]
	0x03489340 LDR X9, [X31 + 0x58]
	0x03489344 CMP X8, X9
	0x03489348 B.NE 0x3489BC0
	0x0348934C MOV X0, X21
	0x03489350 LDP X20, X19, [X31 + 0xA0]
	0x03489354 LDP X22, X21, [X31 + 0x90]
	0x03489358 LDP X24, X23, [X31 + 0x80]
	0x0348935C LDP X26, X25, [X31 + 0x70]
	0x03489360 LDP X30, X27, [X31 + 0x60]
	0x03489364 ADD X31, X31, 0xB0
	0x03489368 RET
	0x0348936C MOV X0, X20
	0x03489370 MOV X1, X31
	0x03489374 BL 0x3396BF8
	0x03489378 LDR X8, [X20]
	0x0348937C TBZ X0, 0x0, 0x3489460
	0x03489380 LDR X9, [X8 + 0x428]
	0x03489384 LDR X1, [X8 + 0x430]
	0x03489388 MOV X0, X20
	0x0348938C BLR X9
	0x03489390 CBZ X19, 0x3489BA8
	0x03489394 MOV X20, X0
	0x03489398 MOV X0, X19
	0x0348939C MOV W1, W31
	0x034893A0 MOV X2, X31
	0x034893A4 BL 0x3222A1C
	0x034893A8 AND W8, W0, 0xFFFF
	0x034893AC CMP W8, 0x5B
	0x034893B0 MOV X21, X31
	0x034893B4 B.NE 0x348933C
	0x034893B8 LDR W8, [X19 + 0x10]
	0x034893BC MOV X0, X19
	0x034893C0 MOV X2, X31
	0x034893C4 SUB W1, W8, 0x1
	0x034893C8 BL 0x3222A1C
	0x034893CC AND W8, W0, 0xFFFF
	0x034893D0 CMP W8, 0x5D
	0x034893D4 MOV X21, X31
	0x034893D8 B.NE 0x348933C
	0x034893DC MOV X0, X19
	0x034893E0 BL 0x3488964
	0x034893E4 CBZ X0, 0x3489BA8
	0x034893E8 LDR W1, [X0 + 0x18]
	0x034893EC MOV X19, X0
	0x034893F0 MOV X0, X20
	0x034893F4 MOV X2, X31
	0x034893F8 BL 0x33A2DF8
	0x034893FC LDR W8, [X19 + 0x18]
	0x03489400 MOV X21, X0
	0x03489404 CMP W8, 0x1
	0x03489408 B.LT 0x3489A50
	0x0348940C ADRP X23, 0xC92000
	0x03489410 LDR X23, [X23 + 0xB58]
	0x03489414 MOV W22, W31
	0x03489418 LDR X2, [X23]
	0x0348941C MOV X0, X19
	0x03489420 MOV W1, W22
	0x03489424 BL 0x301BCCC
	0x03489428 MOV X1, X0
	0x0348942C MOV X0, X20
	0x03489430 BL 0x3488D2C
	0x03489434 CBZ X21, 0x3489BA8
	0x03489438 MOV X1, X0
	0x0348943C MOV X0, X21
	0x03489440 MOV W2, W22
	0x03489444 MOV X3, X31
	0x03489448 BL 0x339F798
	0x0348944C LDR W8, [X19 + 0x18]
	0x03489450 ADD W22, W22, 0x1
	0x03489454 CMP W22, W8
	0x03489458 B.LT 0x3489418
	0x0348945C B 0x3489A50
	0x03489460 LDR X9, [X8 + 0x3C8]
	0x03489464 LDR X1, [X8 + 0x3D0]
	0x03489468 MOV X0, X20
	0x0348946C BLR X9
	0x03489470 TBZ X0, 0x0, 0x3489678
	0x03489474 LDR X8, [X20]
	0x03489478 MOV X0, X20
	0x0348947C LDR X9, [X8 + 0x448]
	0x03489480 LDR X1, [X8 + 0x450]
	0x03489484 BLR X9
	0x03489488 ADRP X9, 0xC93000
	0x0348948C LDR X8, [X24]
	0x03489490 LDR X9, [X9 + 0x20]
	0x03489494 MOV X21, X0
	0x03489498 LDR W10, [X8 + 0xE0]
	0x0348949C LDR X22, [X9]
	0x034894A0 CBNZ W10, 0x34894AC
	0x034894A4 MOV X0, X8
	0x034894A8 BL 0x1C16DFC
	0x034894AC MOV X0, X22
	0x034894B0 MOV X1, X31
	0x034894B4 BL 0x338C698
	0x034894B8 MOV X1, X0
	0x034894BC MOV X0, X21
	0x034894C0 MOV X2, X31
	0x034894C4 BL 0x3395194
	0x034894C8 TBZ X0, 0x0, 0x3489678
	0x034894CC LDR X8, [X20]
	0x034894D0 MOV X0, X20
	0x034894D4 LDR X9, [X8 + 0x468]
	0x034894D8 LDR X1, [X8 + 0x470]
	0x034894DC BLR X9
	0x034894E0 CBZ X0, 0x3489BA8
	0x034894E4 LDR W8, [X0 + 0x18]
	0x034894E8 CBZ W8, 0x3489BAC
	0x034894EC CBZ X19, 0x3489BA8
	0x034894F0 LDR X22, [X0 + 0x20]
	0x034894F4 MOV X0, X19
	0x034894F8 MOV W1, W31
	0x034894FC MOV X2, X31
	0x03489500 BL 0x3222A1C
	0x03489504 AND W8, W0, 0xFFFF
	0x03489508 CMP W8, 0x5B
	0x0348950C MOV X21, X31
	0x03489510 B.NE 0x348933C
	0x03489514 LDR W8, [X19 + 0x10]
	0x03489518 MOV X0, X19
	0x0348951C MOV X2, X31
	0x03489520 SUB W1, W8, 0x1
	0x03489524 BL 0x3222A1C
	0x03489528 AND W8, W0, 0xFFFF
	0x0348952C CMP W8, 0x5D
	0x03489530 MOV X21, X31
	0x03489534 B.NE 0x348933C
	0x03489538 MOV X0, X19
	0x0348953C BL 0x3488964
	0x03489540 ADRP X8, 0xC72000
	0x03489544 LDR X8, [X8 + 0xC60]
	0x03489548 MOV X19, X0
	0x0348954C MOVZ W1, 0x1
	0x03489550 LDR X8, [X8]
	0x03489554 MOV X0, X8
	0x03489558 BL 0x1C16D6C
	0x0348955C ADRP X9, 0xC91000
	0x03489560 LDR X8, [X24]
	0x03489564 LDR X9, [X9 + 0xD80]
	0x03489568 MOV X21, X0
	0x0348956C LDR W10, [X8 + 0xE0]
	0x03489570 LDR X23, [X9]
	0x03489574 CBNZ W10, 0x3489580
	0x03489578 MOV X0, X8
	0x0348957C BL 0x1C16DFC
	0x03489580 MOV X0, X23
	0x03489584 MOV X1, X31
	0x03489588 BL 0x338C698
	0x0348958C CBZ X21, 0x3489BA8
	0x03489590 MOV X23, X0
	0x03489594 CBZ X0, 0x34895AC
	0x03489598 LDR X8, [X21]
	0x0348959C MOV X0, X23
	0x034895A0 LDR X1, [X8 + 0x40]
	0x034895A4 BL 0x1C16E00
	0x034895A8 CBZ X0, 0x3489BB4
	0x034895AC LDR W8, [X21 + 0x18]
	0x034895B0 CBZ W8, 0x3489BAC
	0x034895B4 MOV X0, X20
	0x034895B8 MOV X1, X21
	0x034895BC MOV X2, X31
	0x034895C0 STR X23, [X21 + 0x20]
	0x034895C4 BL 0x3397418
	0x034895C8 ADRP X8, 0xC6A000
	0x034895CC LDR X8, [X8 + 0x9D0]
	0x034895D0 MOV X20, X0
	0x034895D4 MOVZ W1, 0x1
	0x034895D8 LDR X8, [X8]
	0x034895DC MOV X0, X8
	0x034895E0 BL 0x1C16D6C
	0x034895E4 CBZ X19, 0x3489BA8
	0x034895E8 ADRP X9, 0xC6A000
	0x034895EC LDR W8, [X19 + 0x18]
	0x034895F0 LDR X9, [X9 + 0x758]
	0x034895F4 MOV X21, X0
	0x034895F8 ADD X1, X31, 0xC
	0x034895FC STR W8, [X31 + 0xC]
	0x03489600 LDR X0, [X9]
	0x03489604 BL 0x1C16E04
	0x03489608 CBZ X21, 0x3489BA8
	0x0348960C MOV X23, X0
	0x03489610 CBZ X0, 0x3489628
	0x03489614 LDR X8, [X21]
	0x03489618 MOV X0, X23
	0x0348961C LDR X1, [X8 + 0x40]
	0x03489620 BL 0x1C16E00
	0x03489624 CBZ X0, 0x3489BB4
	0x03489628 LDR W8, [X21 + 0x18]
	0x0348962C CBZ W8, 0x3489BAC
	0x03489630 STR X23, [X21 + 0x20]
	0x03489634 CBZ X20, 0x3489BA8
	0x03489638 MOV X0, X20
	0x0348963C MOV X1, X21
	0x03489640 MOV X2, X31
	0x03489644 BL 0x32CC7E8
	0x03489648 ADRP X24, 0xC71000
	0x0348964C LDR X24, [X24 + 0x2F8]
	0x03489650 CBZ X0, 0x3489980
	0x03489654 LDR X23, [X24]
	0x03489658 MOV X20, X0
	0x0348965C MOV X1, X23
	0x03489660 BL 0x1C16E00
	0x03489664 MOV X21, X0
	0x03489668 CBNZ X0, 0x3489984
	0x0348966C MOV X0, X20
	0x03489670 MOV X1, X23
	0x03489674 BL 0x1C171E0
	0x03489678 LDR X8, [X20]
	0x0348967C MOV X0, X20
	0x03489680 LDR X9, [X8 + 0x3C8]
	0x03489684 LDR X1, [X8 + 0x3D0]
	0x03489688 BLR X9
	0x0348968C TBZ X0, 0x0, 0x34898E0
	0x03489690 LDR X8, [X20]
	0x03489694 MOV X0, X20
	0x03489698 LDR X9, [X8 + 0x448]
	0x0348969C LDR X1, [X8 + 0x450]
	0x034896A0 BLR X9
	0x034896A4 ADRP X9, 0xC93000
	0x034896A8 LDR X8, [X24]
	0x034896AC LDR X9, [X9 + 0x388]
	0x034896B0 MOV X21, X0
	0x034896B4 LDR W10, [X8 + 0xE0]
	0x034896B8 LDR X22, [X9]
	0x034896BC CBNZ W10, 0x34896C8
	0x034896C0 MOV X0, X8
	0x034896C4 BL 0x1C16DFC
	0x034896C8 MOV X0, X22
	0x034896CC MOV X1, X31
	0x034896D0 BL 0x338C698
	0x034896D4 MOV X1, X0
	0x034896D8 MOV X0, X21
	0x034896DC MOV X2, X31
	0x034896E0 BL 0x3395194
	0x034896E4 TBZ X0, 0x0, 0x34898E0
	0x034896E8 LDR X8, [X20]
	0x034896EC MOV X0, X20
	0x034896F0 LDR X9, [X8 + 0x468]
	0x034896F4 LDR X1, [X8 + 0x470]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xF55000
	015 Move W8, [X20+2307]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0xC96000
	022 Move X0, [X0+2952]
	023 Call 0x1C17CF4
	024 Move X0, 0xC93000
	025 Move X0, [X0+1456]
	026 Call 0x1C17CF4
	027 Move X0, 0xCA9000
	028 Move X0, [X0+512]
	029 Call 0x1C17CF4
	030 Move X0, 0xC6E000
	031 Move X0, [X0+640]
	032 Call 0x1C17CF4
	033 Move X0, 0xC6B000
	034 Move X0, [X0+1560]
	035 Call 0x1C17CF4
	036 Move X0, 0xC73000
	037 Move X0, [X0+2008]
	038 Call 0x1C17CF4
	039 Move X0, 0xCA9000
	040 Move X0, [X0+400]
	041 Call 0x1C17CF4
	042 Move X0, 0xCA9000
	043 Move X0, [X0+408]
	044 Call 0x1C17CF4
	045 Move X0, 0xCA9000
	046 Move X0, [X0+416]
	047 Call 0x1C17CF4
	048 Move X0, 0xCA9000
	049 Move X0, [X0+424]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+2307], W8
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Move [X31+16], X31
	056 Move [X31+24], X31
	057 Move X26, 0xC73000
	058 Move X27, 0xC96000
	059 Move W25, [X19]
	060 Move X24, [X19+40]
	061 Move X26, [X26+2008]
	062 Move X27, [X27+2952]
	063 Compare W25, 0
	064 JumpIfEqual {87}
	065 Move X0, [X26]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Add X0, X19, 32
	071 Move X1, X31
	072 Call CancellationToken.ThrowIfCancellationRequested, X0
	073 Compare X24, 0
	074 JumpIfEqual {98}
	075 Move X8, 0xC6B000
	076 Move X8, [X8+1560]
	077 Move W1, [X24+72]
	078 Move X0, [X8]
	079 Call 0x1C17D6C
	080 Move X20, X0
	081 Move W21, W31
	082 Move X23, X31
	083 Move X28, X31
	084 Move X22, X31
	085 Move [X19+56], X0
	086 Move [X19+64], W31
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move X23, X31
	089 Move X28, X31
	090 Move X22, X31
	091 Move TEMP, 0
	092 Not TEMP
	093 Move W25, TEMP
	094 Move [X31+1], V0
	095 Move [X19+72], X31
	096 Move [X19+80], X31
	097 Move [X19], W25
	098 Call 0x1C17F20
	099 Move X29, X0
	100 Move W21, W1
	101 Move X8, 0xC93000
	102 Move X8, [X8+1456]
	103 Move W29, [X24+72]
	104 Move X0, [X8]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X4, [X27]
	110 Subtract W3, W29, W21
	111 Add X0, X31, 32
	112 Move X1, X20
	113 Move W2, W21
	114 Call 0x2B88BB0, X0, X1, X2, X3
	115 Move X0, [X19+48]
	116 Compare X0, 0
	117 JumpIfEqual {232}
	118 Move X8, [X0]
	119 Move X1, [X31+32]
	120 Move X2, [X31+40]
	121 Move X3, [X19+32]
	122 Move X9, [X8+520]
	123 Move X4, [X8+528]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {231}
	127 Move X8, 0xCA9000
	128 Move X8, [X8+424]
	129 Move X2, [X8]
	130 Move W1, W31
	131 Call Task`1<Object>.ConfigureAwait, X0, X1
	132 Move X8, 0xCA9000
	133 Move X8, [X8+416]
	134 Move [X31+16], X0
	135 Move [X31+24], X1
	136 Move X8, [X8]
	137 Add X0, X31, 16
	138 Move X1, X8
	139 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {214}
	144 Move X8, 0xCA9000
	145 Move X8, [X8+408]
	146 Add X0, X31, 16
	147 Move X1, [X8]
	148 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	149 Compare X0, 0
	150 JumpIfEqual {314}
	151 Move W8, [X0+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W8, [X19+64]
	154 Move W9, [X0+16]
	155 Add W3, W9, W8
	156 Move [X19+64], W3
	157 Move W8, [X0+20]
	158 Compare W8, 0
	159 JumpIfEqual {185}
	160 Compare X24, 0
	161 JumpIfEqual {235}
	162 Move X21, [X24+40]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction CSEL not yet implemented."
	165 Compare X21, 0
	166 JumpIfEqual {182}
	167 Move X1, [X19+56]
	168 Move X4, [X27]
	169 Move [X31], X31
	170 Move [X31+8], X31
	171 Add X0, X31, 0
	172 Move W2, W31
	173 Call 0x2B88BB0, X0, X1, X2, X3
	174 Compare X20, 0
	175 JumpIfEqual {236}
	176 Move X1, [X31]
	177 Move X2, [X31+8]
	178 Move X0, [X20+64]
	179 Move X8, [X20+24]
	180 Move X3, [X20+40]
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X21, X22
	183 Move X22, X21
	184 Move [X19+64], W31
	185 Move X0, [X26]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Add X0, X19, 32
	191 Move X1, X31
	192 Call CancellationToken.get_IsCancellationRequested, X0
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {314}
	197 Compare X24, 0
	198 JumpIfEqual {233}
	199 Move X29, [X24+64]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction CSEL not yet implemented."
	202 Compare X29, 0
	203 JumpIfEqual {314}
	204 Compare X0, 0
	205 JumpIfEqual {234}
	206 Move X8, [X0]
	207 Move X9, [X8+440]
	208 Move X1, [X8+448]
	209 NotImplemented "Instruction BLR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X20, [X19+56]
	212 Move W21, [X19+64]
	213 Move X23, X29
	214 Move [X19], W31
	215 Move V0, [X31+1]
	216 Move X8, 0xC6E000
	217 Move [X19+72], V0
	218 Move X8, [X8+640]
	219 Move X0, [X8]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Move X8, 0xCA9000
	225 Move X8, [X8+512]
	226 Add X0, X19, 8
	227 Move X3, [X8]
	228 Add X1, X31, 16
	229 Move X2, X19
	230 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	231 Call 0x1C17F20
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Call 0x1C17F20
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Move X29, X0
	238 Move W25, W31
	239 Move X29, X0
	240 Move X21, X22
	241 Move X29, X0
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X0, X29
	244 Call 0x3EB2AD0
	245 Move X20, X0
	246 Move X0, 0xC6B000
	247 Move X0, [X0+2000]
	248 Call 0x1C17D08
	249 Move X8, [X20]
	250 Move X1, [X8]
	251 Call 0x1C18270
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {273}
	256 Move X20, [X20]
	257 Call 0x3EB2AE0
	258 Compare X24, 0
	259 JumpIfEqual {282}
	260 Move X22, [X24+32]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 NotImplemented "Instruction CSEL not yet implemented."
	263 Compare X22, 0
	264 JumpIfEqual {183}
	265 Compare X8, 0
	266 JumpIfEqual {281}
	267 Move X0, [X8+64]
	268 Move X9, [X8+24]
	269 Move X2, [X8+40]
	270 Move X1, X20
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Move X28, X22
	273 Move W0, 8
	274 Call 0x3EB2AF0
	275 Move X8, [X20]
	276 Move [X0], X8
	277 Move X1, 0xA2C000
	278 Add X1, X1, 3672
	279 Move X2, X31
	280 Call 0x3EB2B00
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Move X21, X1
	284 Move X29, X0
	285 Call 0x3EB2AE0
	286 Move X29, X0
	287 Move W21, W1
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X0, X29
	290 Call 0x3EB2AD0
	291 Move X20, X0
	292 Move X0, 0xC6B000
	293 Move X0, [X0+2000]
	294 Call 0x1C17D08
	295 Move X8, [X20]
	296 Move X1, [X8]
	297 Call 0x1C18270
	298 Move TEMP, X0
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfNotEqual {367}
	302 Move X20, [X20]
	303 Call 0x3EB2AE0
	304 Compare X24, 0
	305 JumpIfEqual {375}
	306 Move X8, [X24+32]
	307 Compare X8, 0
	308 JumpIfEqual {314}
	309 Move X0, [X8+64]
	310 Move X9, [X8+24]
	311 Move X2, [X8+40]
	312 Move X1, X20
	313 NotImplemented "Instruction BLR not yet implemented."
	314 Move X20, X31
	315 Move W21, 21
	316 Move TEMP, X25
	317 And TEMP, TEMP, -2147483648
	318 Compare TEMP, -2147483648
	319 JumpIfNotEqual {329}
	320 Compare X24, 0
	321 JumpIfEqual {366}
	322 Move X8, [X24+24]
	323 Compare X8, 0
	324 JumpIfEqual {329}
	325 Move X0, [X8+64]
	326 Move X1, [X8+40]
	327 Move X9, [X8+24]
	328 NotImplemented "Instruction BLR not yet implemented."
	329 Compare X20, 0
	330 JumpIfNotEqual {364}
	331 Compare W21, 0
	332 JumpIfEqual {334}
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move TEMP, 1
	335 Not TEMP
	336 Move W8, TEMP
	337 Move [X19], W8
	338 Move [X19+56], X31
	339 Move X8, 0xC6E000
	340 Move X8, [X8+640]
	341 Add X19, X19, 8
	342 Move X0, [X8]
	343 Move W8, [X0+224]
	344 Compare W8, 0
	345 JumpIfNotEqual {347}
	346 Call 0x1C17DFC
	347 Move X0, X19
	348 Move X1, X31
	349 Call AsyncTaskMethodBuilder.SetResult, X0
	350 Move X20, [X31+128]
	351 Move X19, [X31+136]
	352 Move X22, [X31+112]
	353 Move X21, [X31+120]
	354 Move X24, [X31+96]
	355 Move X23, [X31+104]
	356 Move X26, [X31+80]
	357 Move X25, [X31+88]
	358 Move X28, [X31+64]
	359 Move X27, [X31+72]
	360 Move X29, [X31+48]
	361 Move X30, [X31+56]
	362 Add X31, X31, 144
	363 Return 
	364 Move X0, X20
	365 Call 0x1C17F18
	366 Call 0x1C17F20
	367 Move W0, 8
	368 Call 0x3EB2AF0
	369 Move X8, [X20]
	370 Move [X0], X8
	371 Move X1, 0xA2C000
	372 Add X1, X1, 3672
	373 Move X2, X31
	374 Call 0x3EB2B00
	375 Call 0x1C17F20
	376 Move X29, X0
	377 Move W21, W1
	378 Move X21, X1
	379 Move X29, X0
	380 Call 0x3EB2AE0
	381 Move W8, 1
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move X0, X29
	384 Call 0x3EB2AD0
	385 Move X20, [X0]
	386 Call 0x3EB2AE0
	387 Move W21, W31
	388 Move TEMP, X25
	389 And TEMP, TEMP, -2147483648
	390 Compare TEMP, -2147483648
	391 JumpIfNotEqual {329}
	392 Move X20, X31
	393 Move TEMP, X25
	394 And TEMP, TEMP, -2147483648
	395 Compare TEMP, -2147483648
	396 JumpIfNotEqual {406}
	397 Compare X24, 0
	398 JumpIfEqual {450}
	399 Move X8, [X24+24]
	400 Compare X8, 0
	401 JumpIfEqual {406}
	402 Move X0, [X8+64]
	403 Move X1, [X8+40]
	404 Move X9, [X8+24]
	405 NotImplemented "Instruction BLR not yet implemented."
	406 Compare X20, 0
	407 JumpIfNotEqual {448}
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move X0, X29
	410 Call 0x3EB2AD0
	411 Move X20, X0
	412 Move X0, 0xC6B000
	413 Move X0, [X0+2000]
	414 Call 0x1C17D08
	415 Move X8, [X20]
	416 Move X1, [X8]
	417 Call 0x1C18270
	418 Move TEMP, X0
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfNotEqual {440}
	422 Move X20, [X20]
	423 Call 0x3EB2AE0
	424 Move TEMP, 1
	425 Not TEMP
	426 Move W8, TEMP
	427 Move [X19+56], X31
	428 Move [X19+8], W8
	429 Move X0, 0xC6E000
	430 Move X0, [X0+640]
	431 Call 0x1C17D08
	432 Move W8, [X0+224]
	433 Compare W8, 0
	434 JumpIfNotEqual {436}
	435 Call 0x1C17DFC
	436 Move X0, X19
	437 Move X1, X20
	438 Move X2, X31
	439 Call AsyncTaskMethodBuilder.SetException, X0, X1
	440 Move W0, 8
	441 Call 0x3EB2AF0
	442 Move X8, [X20]
	443 Move [X0], X8
	444 Move X1, 0xA2C000
	445 Add X1, X1, 3672
	446 Move X2, X31
	447 Call 0x3EB2B00
	448 Move X0, X20
	449 Call 0x1C17F18
	450 Call 0x1C17F20
	451 Move X29, X0
	452 Move W21, W1
	453 Move TEMP, X25
	454 And TEMP, TEMP, -2147483648
	455 Compare TEMP, -2147483648
	456 JumpIfNotEqual {406}
	457 Move X29, X0
	458 Call 0x3EB2AE0
	459 Move X0, X29
	460 Call 0x1D2D690
	461 Call 0x1991590
	462 Move X21, X1
	463 Move X29, X0

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034896F8 BLR X9
	0x034896FC CBZ X0, 0x3489BA8
	0x03489700 LDR W8, [X0 + 0x18]
	0x03489704 CBZ W8, 0x3489BAC
	0x03489708 CMP W8, 0x1
	0x0348970C B.EQ 0x3489BAC
	0x03489710 LDR X8, [X24]
	0x03489714 LDP X21, X22, [X0 + 0x20]
	0x03489718 LDR X23, [X23]
	0x0348971C LDR W9, [X8 + 0xE0]
	0x03489720 CBNZ W9, 0x348972C
	0x03489724 MOV X0, X8
	0x03489728 BL 0x1C16DFC
	0x0348972C MOV X0, X23
	0x03489730 MOV X1, X31
	0x03489734 BL 0x338C698
	0x03489738 MOV X1, X0
	0x0348973C MOV X0, X21
	0x03489740 MOV X2, X31
	0x03489744 BL 0x3395F0C
	0x03489748 MOV X21, X31
	0x0348974C TBNZ X0, 0x0, 0x348933C
	0x03489750 CBZ X19, 0x3489BA8
	0x03489754 MOV X0, X19
	0x03489758 MOV W1, W31
	0x0348975C MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF55000
	007 Move X22, 0xC6E000
	008 Move W8, [X21+2308]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC6E000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2308], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

