Type: Nakama.Client/<AddFriendsAsync>d__42

Method: System.Void MoveNext()

Disassembly:
	0x0344D040 B.EQ 0x344D060
	0x0344D044 SUBS X9, X9, 0x1
	0x0344D048 ADD X10, X10, 0x10
	0x0344D04C B.NE 0x344D038
	0x0344D050 MOVZ W2, 0x1
	0x0344D054 MOV X0, X20
	0x0344D058 BL 0x1C5C788
	0x0344D05C B 0x344D070
	0x0344D060 LDR W9, [X10]
	0x0344D064 ADD W9, W9, 0x1
	0x0344D068 ADD X8, X8, W9, 0x4, SXTW
	0x0344D06C ADD X0, X8, 0x138
	0x0344D070 LDP X8, X1, [X0]
	0x0344D074 MOV X0, X20
	0x0344D078 BLR X8
	0x0344D07C LDR X8, [X20]
	0x0344D080 LDR X1, [X23]
	0x0344D084 MOV X22, X0
	0x0344D088 LDRH W9, [X8 + 0x12E]
	0x0344D08C CBZ X9, 0x344D0B0
	0x0344D090 LDR X10, [X8 + 0xB0]
	0x0344D094 ADD X10, X10, 0x8
	0x0344D098 LDUR X11, [X10 - 0x8]
	0x0344D09C CMP X11, X1
	0x0344D0A0 B.EQ 0x344D0C0
	0x0344D0A4 SUBS X9, X9, 0x1
	0x0344D0A8 ADD X10, X10, 0x10
	0x0344D0AC B.NE 0x344D098
	0x0344D0B0 MOV X0, X20
	0x0344D0B4 MOV W2, W31
	0x0344D0B8 BL 0x1C5C788
	0x0344D0BC B 0x344D0CC
	0x0344D0C0 LDRSW X9, [X10]
	0x0344D0C4 ADD X8, X8, X9, 0x4, LSL
	0x0344D0C8 ADD X0, X8, 0x138
	0x0344D0CC LDP X8, X1, [X0]
	0x0344D0D0 MOV X0, X20
	0x0344D0D4 BLR X8
	0x0344D0D8 ADRP X8, 0xCE2000
	0x0344D0DC LDR X8, [X8 + 0xA70]
	0x0344D0E0 MOV W23, W0
	0x0344D0E4 LDR X0, [X8]
	0x0344D0E8 BL 0x1C16F10
	0x0344D0EC MOV X20, X0
	0x0344D0F0 AND W3, W23, 0x1
	0x0344D0F4 MOV X1, X21
	0x0344D0F8 MOV X2, X22
	0x0344D0FC MOV X4, X31
	0x0344D100 BL 0x34684B8
	0x0344D104 MOVN W8, 0x1
	0x0344D108 STR W8, [X19], #0x8
	0x0344D10C LDR X0, [X25]
	0x0344D110 ADRP X21, 0xCE2000
	0x0344D114 LDR W8, [X0 + 0xE0]
	0x0344D118 LDR X21, [X21 + 0xA50]
	0x0344D11C CBNZ W8, 0x344D124
	0x0344D120 BL 0x1C16DFC
	0x0344D124 LDR X2, [X21]
	0x0344D128 MOV X0, X19
	0x0344D12C MOV X1, X20
	0x0344D130 BL 0x26322B0
	0x0344D134 LDP X20, X19, [X31 + 0x50]
	0x0344D138 LDP X22, X21, [X31 + 0x40]
	0x0344D13C LDP X24, X23, [X31 + 0x30]
	0x0344D140 LDP X30, X25, [X31 + 0x20]
	0x0344D144 ADD X31, X31, 0x60
	0x0344D148 RET
	0x0344D14C BL 0x1C16F20
	0x0344D150 BL 0x1C16F20
	0x0344D154 BL 0x1C16F20
	0x0344D158 BL 0x1C16F20
	0x0344D15C BL 0x1C16F20
	0x0344D160 B 0x344D19C
	0x0344D164 B 0x344D19C
	0x0344D168 B 0x344D19C
	0x0344D16C B 0x344D19C
	0x0344D170 B 0x344D19C
	0x0344D174 B 0x344D19C
	0x0344D178 B 0x344D19C
	0x0344D17C B 0x344D19C
	0x0344D180 B 0x344D19C
	0x0344D184 B 0x344D19C
	0x0344D188 B 0x344D19C
	0x0344D18C B 0x344D19C
	0x0344D190 B 0x344D19C
	0x0344D194 B 0x344D19C
	0x0344D198 B 0x344D19C
	0x0344D19C MOV X20, X0
	0x0344D1A0 CMP W1, 0x1
	0x0344D1A4 B.NE 0x344D240
	0x0344D1A8 MOV X0, X20
	0x0344D1AC BL 0x3EB1AD0
	0x0344D1B0 MOV X20, X0
	0x0344D1B4 ADRP X0, 0xCA6000
	0x0344D1B8 LDR X0, [X0 + 0x7D0]
	0x0344D1BC BL 0x1C16D08
	0x0344D1C0 LDR X8, [X20]
	0x0344D1C4 LDR X1, [X8]
	0x0344D1C8 BL 0x1C17270
	0x0344D1CC TBZ X0, 0x0, 0x344D218
	0x0344D1D0 LDR X20, [X20]
	0x0344D1D4 BL 0x3EB1AE0
	0x0344D1D8 MOVN W8, 0x1
	0x0344D1DC STR W8, [X19], #0x8
	0x0344D1E0 ADRP X0, 0xCE2000
	0x0344D1E4 LDR X0, [X0 + 0x630]
	0x0344D1E8 BL 0x1C16D08
	0x0344D1EC LDR W8, [X0 + 0xE0]
	0x0344D1F0 CBNZ W8, 0x344D1F8
	0x0344D1F4 BL 0x1C16DFC
	0x0344D1F8 ADRP X0, 0xCE2000
	0x0344D1FC LDR X0, [X0 + 0xAA0]
	0x0344D200 BL 0x1C16D08
	0x0344D204 MOV X2, X0
	0x0344D208 MOV X0, X19
	0x0344D20C MOV X1, X20
	0x0344D210 BL 0x26324C8
	0x0344D214 B 0x344D134
	0x0344D218 MOVZ W0, 0x8
	0x0344D21C BL 0x3EB1AF0
	0x0344D220 LDR X8, [X20]
	0x0344D224 STR X8, [X0]
	0x0344D228 ADRP X1, 0xA67000
	0x0344D22C ADD X1, X1, 0xE58
	0x0344D230 MOV X2, X31
	0x0344D234 BL 0x3EB1B00
	0x0344D238 MOV X20, X0
	0x0344D23C BL 0x3EB1AE0
	0x0344D240 MOV X0, X20
	0x0344D244 BL 0x1D2C690
	0x0344D248 BL 0x1990590
	0x0344D24C STR X30, [X31 - 0x30]!
	0x0344D250 STP X22, X21, [X31 + 0x10]
	0x0344D254 STP X20, X19, [X31 + 0x20]
	0x0344D258 ADRP X22, 0xF90000
	0x0344D25C ADRP X21, 0xCE2000
	0x0344D260 LDRB W8, [X22 + 0x758]
	0x0344D264 LDR X21, [X21 + 0x630]
	0x0344D268 MOV X19, X1
	0x0344D26C MOV X20, X0
	0x0344D270 TBNZ X8, 0x0, 0x344D294
	0x0344D274 ADRP X0, 0xCE2000
	0x0344D278 LDR X0, [X0 + 0xAA8]
	0x0344D27C BL 0x1C16CF4
	0x0344D280 ADRP X0, 0xCE2000
	0x0344D284 LDR X0, [X0 + 0x630]
	0x0344D288 BL 0x1C16CF4
	0x0344D28C MOVZ W8, 0x1
	0x0344D290 STRB W8, [X22 + 0x758]
	0x0344D294 LDR X0, [X21]
	0x0344D298 ADRP X21, 0xCE2000
	0x0344D29C LDR W8, [X0 + 0xE0]
	0x0344D2A0 LDR X21, [X21 + 0xAA8]
	0x0344D2A4 CBNZ W8, 0x344D2AC
	0x0344D2A8 BL 0x1C16DFC
	0x0344D2AC LDR X2, [X21]
	0x0344D2B0 ADD X0, X20, 0x8
	0x0344D2B4 MOV X1, X19
	0x0344D2B8 LDP X20, X19, [X31 + 0x20]
	0x0344D2BC LDP X22, X21, [X31 + 0x10]
	0x0344D2C0 LDR X30, [X31], #0x30
	0x0344D2C4 B 0x2632228
	0x0344D2C8 SUB X31, X31, 0x60
	0x0344D2CC STP X30, X25, [X31 + 0x20]
	0x0344D2D0 STP X24, X23, [X31 + 0x30]
	0x0344D2D4 STP X22, X21, [X31 + 0x40]
	0x0344D2D8 STP X20, X19, [X31 + 0x50]
	0x0344D2DC ADRP X20, 0xF90000
	0x0344D2E0 LDRB W8, [X20 + 0x759]
	0x0344D2E4 MOV X19, X0
	0x0344D2E8 TBNZ X8, 0x0, 0x344D39C
	0x0344D2EC ADRP X0, 0xCE2000
	0x0344D2F0 LDR X0, [X0 + 0xAB0]
	0x0344D2F4 BL 0x1C16CF4
	0x0344D2F8 ADRP X0, 0xCE2000
	0x0344D2FC LDR X0, [X0 + 0xA50]
	0x0344D300 BL 0x1C16CF4
	0x0344D304 ADRP X0, 0xCE2000
	0x0344D308 LDR X0, [X0 + 0x630]
	0x0344D30C BL 0x1C16CF4
	0x0344D310 ADRP X0, 0xCE2000
	0x0344D314 LDR X0, [X0 + 0xA58]
	0x0344D318 BL 0x1C16CF4
	0x0344D31C ADRP X0, 0xCE2000
	0x0344D320 LDR X0, [X0 + 0xA60]
	0x0344D324 BL 0x1C16CF4
	0x0344D328 ADRP X0, 0xCE2000
	0x0344D32C LDR X0, [X0 + 0x7C8]
	0x0344D330 BL 0x1C16CF4
	0x0344D334 ADRP X0, 0xCE2000
	0x0344D338 LDR X0, [X0 + 0x7D0]
	0x0344D33C BL 0x1C16CF4
	0x0344D340 ADRP X0, 0xCE2000
	0x0344D344 LDR X0, [X0 + 0xA68]
	0x0344D348 BL 0x1C16CF4
	0x0344D34C ADRP X0, 0xCE2000
	0x0344D350 LDR X0, [X0 + 0xA70]
	0x0344D354 BL 0x1C16CF4
	0x0344D358 ADRP X0, 0xCE2000
	0x0344D35C LDR X0, [X0 + 0xA78]
	0x0344D360 BL 0x1C16CF4
	0x0344D364 ADRP X0, 0xCE2000
	0x0344D368 LDR X0, [X0 + 0xA80]
	0x0344D36C BL 0x1C16CF4
	0x0344D370 ADRP X0, 0xCE2000
	0x0344D374 LDR X0, [X0 + 0xA88]
	0x0344D378 BL 0x1C16CF4
	0x0344D37C ADRP X0, 0xCE2000
	0x0344D380 LDR X0, [X0 + 0xAB8]
	0x0344D384 BL 0x1C16CF4
	0x0344D388 ADRP X0, 0xCE2000
	0x0344D38C LDR X0, [X0 + 0xAC0]
	0x0344D390 BL 0x1C16CF4
	0x0344D394 MOVZ W8, 0x1
	0x0344D398 STRB W8, [X20 + 0x759]
	0x0344D39C STR X31, [X31 + 0x18]
	0x0344D3A0 ADRP X25, 0xCE2000
	0x0344D3A4 LDR W8, [X19]
	0x0344D3A8 LDR X25, [X25 + 0x630]
	0x0344D3AC CBZ W8, 0x344D518
	0x0344D3B0 ADRP X8, 0xCE2000
	0x0344D3B4 LDR X8, [X8 + 0xAC0]
	0x0344D3B8 LDR X24, [X19 + 0x20]
	0x0344D3BC LDR X0, [X8]
	0x0344D3C0 BL 0x1C16F10
	0x0344D3C4 MOV X22, X0
	0x0344D3C8 MOV X1, X31
	0x0344D3CC BL 0x33BDD8C
	0x0344D3D0 CBZ X22, 0x344D6E0
	0x0344D3D4 LDR X8, [X19 + 0x20]
	0x0344D3D8 STR X8, [X22 + 0x10]
	0x0344D3DC LDR X8, [X19 + 0x28]
	0x0344D3E0 STR X8, [X22 + 0x18]
	0x0344D3E4 LDR X8, [X19 + 0x30]
	0x0344D3E8 STR X8, [X22 + 0x20]
	0x0344D3EC LDRB W8, [X19 + 0x38]
	0x0344D3F0 STRB W8, [X22 + 0x28]
	0x0344D3F4 LDR X8, [X19 + 0x40]
	0x0344D3F8 STR X8, [X22 + 0x30]
	0x0344D3FC LDR X8, [X19 + 0x48]
	0x0344D400 STR X8, [X22 + 0x38]
	0x0344D404 CBZ X24, 0x344D6E4
	0x0344D408 ADRP X8, 0xCE2000
	0x0344D40C LDR X8, [X8 + 0xA58]
	0x0344D410 LDR X20, [X24 + 0x58]
	0x0344D414 LDR X0, [X8]
	0x0344D418 BL 0x1C16F10
	0x0344D41C ADRP X8, 0xCE2000
	0x0344D420 LDR X8, [X8 + 0xAB8]
	0x0344D424 MOV X21, X0
	0x0344D428 LDR X2, [X8]
	0x0344D42C MOV X1, X22
	0x0344D430 MOV X3, X31
	0x0344D434 BL 0x2D27AA8
	0x0344D438 ADRP X8, 0xCE2000
	0x0344D43C LDR X23, [X19 + 0x50]
	0x0344D440 LDR X8, [X8 + 0x7C8]
	0x0344D444 CBNZ X23, 0x344D44C
	0x0344D448 LDR X23, [X24 + 0x18]
	0x0344D44C LDR X24, [X22 + 0x18]
	0x0344D450 LDR X1, [X22 + 0x38]
	0x0344D454 LDR X2, [X8]
	0x0344D458 STP X31, X31, [X31 + 0x8]
	0x0344D45C ADD X0, X31, 0x8
	0x0344D460 BL 0x242E368
	0x0344D464 ADRP X8, 0xCE2000
	0x0344D468 LDR X8, [X8 + 0x7D0]
	0x0344D46C LDR X0, [X8]
	0x0344D470 BL 0x1C16F10
	0x0344D474 LDP X3, X4, [X31 + 0x8]
	0x0344D478 MOV X22, X0
	0x0344D47C MOV X1, X24
	0x0344D480 MOV X2, X23
	0x0344D484 MOV X5, X31
	0x0344D488 BL 0x3478040
	0x0344D48C CBZ X20, 0x344D6E8
	0x0344D490 ADRP X8, 0xCE2000
	0x0344D494 LDR X8, [X8 + 0xA68]
	0x0344D498 LDR X3, [X8]
	0x0344D49C MOV X0, X20
	0x0344D4A0 MOV X1, X21
	0x0344D4A4 MOV X2, X22
	0x0344D4A8 BL 0x2243230
	0x0344D4AC CBZ X0, 0x344D6EC
	0x0344D4B0 ADRP X8, 0xCE2000
	0x0344D4B4 LDR X8, [X8 + 0xA88]
	0x0344D4B8 LDR X1, [X8]
	0x0344D4BC BL 0x269F5D0
	0x0344D4C0 ADRP X8, 0xCE2000
	0x0344D4C4 LDR X8, [X8 + 0xA80]
	0x0344D4C8 STR X0, [X31 + 0x18]
	0x0344D4CC LDR X1, [X8]
	0x0344D4D0 ADD X0, X31, 0x18
	0x0344D4D4 BL 0x2677430
	0x0344D4D8 TBNZ X0, 0x0, 0x344D52C
	0x0344D4DC STR W31, [X19]
	0x0344D4E0 LDR X8, [X31 + 0x18]
	0x0344D4E4 STR X8, [X19 + 0x58]
	0x0344D4E8 LDR X0, [X25]
	0x0344D4EC LDR W8, [X0 + 0xE0]
	0x0344D4F0 CBNZ W8, 0x344D4F8
	0x0344D4F4 BL 0x1C16DFC
	0x0344D4F8 ADRP X8, 0xCE2000
	0x0344D4FC LDR X8, [X8 + 0xAB0]
	0x0344D500 ADD X0, X19, 0x8
	0x0344D504 LDR X3, [X8]
	0x0344D508 ADD X1, X31, 0x18
	0x0344D50C MOV X2, X19
	0x0344D510 BL 0x1FB9B5C
	0x0344D514 B 0x344D6C4
	0x0344D518 LDR X8, [X19 + 0x58]
	0x0344D51C MOVN W9, 0x0
	0x0344D520 STR X8, [X31 + 0x18]
	0x0344D524 STR X31, [X19 + 0x58]
	0x0344D528 STR W9, [X19]
	0x0344D52C ADRP X8, 0xCE2000
	0x0344D530 LDR X8, [X8 + 0xA78]
	0x0344D534 ADD X0, X31, 0x18
	0x0344D538 LDR X1, [X8]
	0x0344D53C BL 0x2677474
	0x0344D540 MOV X20, X0
	0x0344D544 CBZ X0, 0x344D6DC
	0x0344D548 ADRP X23, 0xCE2000
	0x0344D54C LDR X8, [X20]
	0x0344D550 LDR X23, [X23 + 0xA60]
	0x0344D554 LDRH W9, [X8 + 0x12E]
	0x0344D558 LDR X1, [X23]
	0x0344D55C CBZ X9, 0x344D580
	0x0344D560 LDR X10, [X8 + 0xB0]
	0x0344D564 ADD X10, X10, 0x8
	0x0344D568 LDUR X11, [X10 - 0x8]
	0x0344D56C CMP X11, X1
	0x0344D570 B.EQ 0x344D590
	0x0344D574 SUBS X9, X9, 0x1
	0x0344D578 ADD X10, X10, 0x10
	0x0344D57C B.NE 0x344D568
	0x0344D580 MOVZ W2, 0x2
	0x0344D584 MOV X0, X20
	0x0344D588 BL 0x1C5C788
	0x0344D58C B 0x344D5A0
	0x0344D590 LDR W9, [X10]
	0x0344D594 ADD W9, W9, 0x2
	0x0344D598 ADD X8, X8, W9, 0x4, SXTW
	0x0344D59C ADD X0, X8, 0x138
	0x0344D5A0 LDP X8, X1, [X0]
	0x0344D5A4 MOV X0, X20
	0x0344D5A8 BLR X8
	0x0344D5AC LDR X8, [X20]
	0x0344D5B0 LDR X1, [X23]
	0x0344D5B4 MOV X21, X0
	0x0344D5B8 LDRH W9, [X8 + 0x12E]
	0x0344D5BC CBZ X9, 0x344D5E0
	0x0344D5C0 LDR X10, [X8 + 0xB0]
	0x0344D5C4 ADD X10, X10, 0x8
	0x0344D5C8 LDUR X11, [X10 - 0x8]
	0x0344D5CC CMP X11, X1
	0x0344D5D0 B.EQ 0x344D5F0
	0x0344D5D4 SUBS X9, X9, 0x1
	0x0344D5D8 ADD X10, X10, 0x10
	0x0344D5DC B.NE 0x344D5C8
	0x0344D5E0 MOVZ W2, 0x1
	0x0344D5E4 MOV X0, X20
	0x0344D5E8 BL 0x1C5C788
	0x0344D5EC B 0x344D600
	0x0344D5F0 LDR W9, [X10]
	0x0344D5F4 ADD W9, W9, 0x1
	0x0344D5F8 ADD X8, X8, W9, 0x4, SXTW
	0x0344D5FC ADD X0, X8, 0x138
	0x0344D600 LDP X8, X1, [X0]
	0x0344D604 MOV X0, X20
	0x0344D608 BLR X8
	0x0344D60C LDR X8, [X20]
	0x0344D610 LDR X1, [X23]
	0x0344D614 MOV X22, X0
	0x0344D618 LDRH W9, [X8 + 0x12E]
	0x0344D61C CBZ X9, 0x344D640
	0x0344D620 LDR X10, [X8 + 0xB0]
	0x0344D624 ADD X10, X10, 0x8
	0x0344D628 LDUR X11, [X10 - 0x8]
	0x0344D62C CMP X11, X1
	0x0344D630 B.EQ 0x344D650
	0x0344D634 SUBS X9, X9, 0x1
	0x0344D638 ADD X10, X10, 0x10
	0x0344D63C B.NE 0x344D628
	0x0344D640 MOV X0, X20
	0x0344D644 MOV W2, W31
	0x0344D648 BL 0x1C5C788
	0x0344D64C B 0x344D65C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF91000
	011 Move W8, [X20+1875]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE3000
	018 Move X0, [X0+2568]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE3000
	021 Move X0, [X0+2576]
	022 Call 0x1C17CF4
	023 Move X0, 0xCAA000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA9000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA8000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCAF000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA8000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE3000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE3000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA8000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA8000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA8000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE3000
	054 Move X0, [X0+2584]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE3000
	057 Move X0, [X0+2592]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1875], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCAA000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xCA8000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCE3000
	091 Move X8, [X8+2592]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call Object..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {355}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move [X21+24], V0
	104 Move X8, [X19+56]
	105 Move [X21+40], X8
	106 Move X8, [X19+64]
	107 Move [X21+48], X8
	108 Compare X20, 0
	109 JumpIfEqual {356}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {249}
	113 Move X8, [X19+80]
	114 Compare X8, 0
	115 JumpIfEqual {357}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {358}
	119 Move X23, 0xCA8000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {247}
	149 Move X8, [X19+80]
	150 Compare X8, 0
	151 JumpIfEqual {359}
	152 Move X9, 0xCA8000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xCA9000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {360}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {247}
	207 Move X8, [X19+80]
	208 Compare X8, 0
	209 JumpIfEqual {361}
	210 Move X1, [X8+24]
	211 Move X3, [X19+72]
	212 Move X4, [X8+48]
	213 Move X0, X20
	214 Move X2, X31
	215 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	216 Compare X0, 0
	217 JumpIfEqual {362}
	218 Move X8, 0xCA8000
	219 Move X8, [X8+2112]
	220 Move X1, [X8]
	221 Call Task`1<Object>.GetAwaiter, X0
	222 Move X8, 0xCA8000
	223 Move X8, [X8+2104]
	224 Move [X31+32], X0
	225 Move X1, [X8]
	226 Add X0, X31, 32
	227 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	228 Move TEMP, X0
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfEqual {85}
	232 Move [X19], W31
	233 Move X8, [X31+32]
	234 Move [X19+88], X8
	235 Move X0, [X25]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move X8, 0xCE3000
	241 Move X8, [X8+2568]
	242 Add X0, X19, 8
	243 Move X3, [X8]
	244 Add X1, X31, 32
	245 Move X2, X19
	246 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	247 Compare X20, 0
	248 JumpIfEqual {354}
	249 Move X8, 0xCAF000
	250 Move X8, [X8+2072]
	251 Move X21, [X20+88]
	252 Move X23, [X19+80]
	253 Move X0, [X8]
	254 Call 0x1C17F10
	255 Move X8, 0xCE3000
	256 Move X8, [X8+2584]
	257 Move X22, X0
	258 Move X2, [X8]
	259 Move X1, X23
	260 Move X3, X31
	261 Call Func`1<Object>..ctor, X0, X1, X2
	262 Move X8, [X19+80]
	263 Compare X8, 0
	264 JumpIfEqual {351}
	265 Move X9, 0xCE3000
	266 Move X23, [X19+72]
	267 Move X9, [X9+1992]
	268 Compare X23, 0
	269 JumpIfNotEqual {271}
	270 Move X23, [X20+24]
	271 Move X20, [X8+24]
	272 Move X1, [X8+48]
	273 Move X2, [X9]
	274 Move [X31+8], X31
	275 Move [X31+16], X31
	276 Add X0, X31, 8
	277 Call Nullable`1<CancellationToken>..ctor, X0, X1
	278 Move X8, 0xCE3000
	279 Move X8, [X8+2000]
	280 Move X0, [X8]
	281 Call 0x1C17F10
	282 Move X3, [X31+8]
	283 Move X4, [X31+16]
	284 Move X24, X0
	285 Move X1, X20
	286 Move X2, X23
	287 Move X5, X31
	288 Call RetryHistory..ctor, X0, X1, X2, X3
	289 Compare X21, 0
	290 JumpIfEqual {352}
	291 Move X0, X21
	292 Move X1, X22
	293 Move X2, X24
	294 Move X3, X31
	295 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	296 Compare X0, 0
	297 JumpIfEqual {353}
	298 Move X1, X31
	299 Call Task.GetAwaiter, X0
	300 Move [X31+24], X0
	301 Add X0, X31, 24
	302 Move X1, X31
	303 Call TaskAwaiter.get_IsCompleted, X0
	304 Move TEMP, X0
	305 And TEMP, TEMP, 1
	306 Compare TEMP, 1
	307 JumpIfNotEqual {325}
	308 Add X0, X31, 24
	309 Move X1, X31
	310 Call TaskAwaiter.GetResult, X0
	311 Move TEMP, 1
	312 Not TEMP
	313 Move W8, TEMP
	314 Move [X19], W8
	315 Move [X19+80], X31
	316 Move X0, [X25]
	317 Add X19, X19, 8
	318 Move W8, [X0+224]
	319 Compare W8, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Move X0, X19
	323 Move X1, X31
	324 Call AsyncTaskMethodBuilder.SetResult, X0
	325 Move W8, 1
	326 Move [X19], W8
	327 Move X8, [X31+24]
	328 Move [X19+96], X8
	329 Move X0, [X25]
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move X8, 0xCE3000
	335 Move X8, [X8+2576]
	336 Add X0, X19, 8
	337 Move X3, [X8]
	338 Add X1, X31, 24
	339 Move X2, X19
	340 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	341 Move X20, [X31+96]
	342 Move X19, [X31+104]
	343 Move X22, [X31+80]
	344 Move X21, [X31+88]
	345 Move X24, [X31+64]
	346 Move X23, [X31+72]
	347 Move X30, [X31+48]
	348 Move X25, [X31+56]
	349 Add X31, X31, 112
	350 Return 
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Move X20, X0
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move X0, X20
	366 Call 0x3EB2AD0
	367 Move X20, X0
	368 Move X0, 0xCA7000
	369 Move X0, [X0+2000]
	370 Call 0x1C17D08
	371 Move X8, [X20]
	372 Move X1, [X8]
	373 Call 0x1C18270
	374 Move TEMP, X0
	375 And TEMP, TEMP, 1
	376 Compare TEMP, 1
	377 JumpIfNotEqual {396}
	378 Move X20, [X20]
	379 Call 0x3EB2AE0
	380 Move TEMP, 1
	381 Not TEMP
	382 Move W8, TEMP
	383 Move [X19+80], X31
	384 Move [X19+8], W8
	385 Move X0, 0xCAA000
	386 Move X0, [X0+640]
	387 Call 0x1C17D08
	388 Move W8, [X0+224]
	389 Compare W8, 0
	390 JumpIfNotEqual {392}
	391 Call 0x1C17DFC
	392 Move X0, X19
	393 Move X1, X20
	394 Move X2, X31
	395 Call AsyncTaskMethodBuilder.SetException, X0, X1
	396 Move W0, 8
	397 Call 0x3EB2AF0
	398 Move X8, [X20]
	399 Move [X0], X8
	400 Move X1, 0xA68000
	401 Add X1, X1, 3672
	402 Move X2, X31
	403 Call 0x3EB2B00
	404 Move X20, X0
	405 Call 0x3EB2AE0
	406 Move X0, X20
	407 Call 0x1D2D690
	408 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0344D650 LDRSW X9, [X10]
	0x0344D654 ADD X8, X8, X9, 0x4, LSL
	0x0344D658 ADD X0, X8, 0x138
	0x0344D65C LDP X8, X1, [X0]
	0x0344D660 MOV X0, X20
	0x0344D664 BLR X8
	0x0344D668 ADRP X8, 0xCE2000
	0x0344D66C LDR X8, [X8 + 0xA70]
	0x0344D670 MOV W23, W0
	0x0344D674 LDR X0, [X8]
	0x0344D678 BL 0x1C16F10
	0x0344D67C MOV X20, X0
	0x0344D680 AND W3, W23, 0x1
	0x0344D684 MOV X1, X21
	0x0344D688 MOV X2, X22
	0x0344D68C MOV X4, X31
	0x0344D690 BL 0x34684B8
	0x0344D694 MOVN W8, 0x1
	0x0344D698 STR W8, [X19], #0x8
	0x0344D69C LDR X0, [X25]
	0x0344D6A0 ADRP X21, 0xCE2000
	0x0344D6A4 LDR W8, [X0 + 0xE0]
	0x0344D6A8 LDR X21, [X21 + 0xA50]
	0x0344D6AC CBNZ W8, 0x344D6B4
	0x0344D6B0 BL 0x1C16DFC
	0x0344D6B4 LDR X2, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF91000
	007 Move X22, 0xCAA000
	008 Move W8, [X21+1876]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCAA000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1876], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

