Type: Nakama.ApiClient/<DeleteStorageObjectsAsync>d__79

Method: System.Void MoveNext()

Disassembly:
	0x03421FAC LDR X0, [X25 + 0x20]
	0x03421FB0 CBZ X0, 0x3422288
	0x03421FB4 MOV X1, X31
	0x03421FB8 BL 0x361B448
	0x03421FBC ADRP X8, 0xCDB000
	0x03421FC0 LDR X8, [X8 + 0x8D8]
	0x03421FC4 MOV X22, X0
	0x03421FC8 LDR X0, [X8]
	0x03421FCC MOVZ W1, 0x1
	0x03421FD0 BL 0x1C16D6C
	0x03421FD4 MOV X1, X0
	0x03421FD8 CBZ X1, 0x342228C
	0x03421FDC LDR W8, [X1 + 0x18]
	0x03421FE0 CBZ W8, 0x3422290
	0x03421FE4 MOVZ W8, 0x2F
	0x03421FE8 STRH W8, [X1 + 0x20]
	0x03421FEC CBZ X22, 0x3422294
	0x03421FF0 MOV X0, X22
	0x03421FF4 MOV X2, X31
	0x03421FF8 BL 0x322BC58
	0x03421FFC LDR X1, [X31 + 0x8]
	0x03422000 MOV X2, X31
	0x03422004 BL 0x321B938
	0x03422008 ADRP X8, 0xCDA000
	0x0342200C LDR X23, [X25 + 0x20]
	0x03422010 LDR X8, [X8 + 0x3A0]
	0x03422014 MOV X22, X0
	0x03422018 LDR X0, [X8]
	0x0342201C BL 0x1C16F10
	0x03422020 MOV X20, X0
	0x03422024 MOV X1, X23
	0x03422028 MOV X2, X31
	0x0342202C BL 0x36281F8
	0x03422030 CBZ X20, 0x3422298
	0x03422034 MOV X0, X20
	0x03422038 MOV X1, X22
	0x0342203C MOV X2, X31
	0x03422040 BL 0x36288CC
	0x03422044 MOV X0, X20
	0x03422048 MOV X1, X21
	0x0342204C MOV X2, X31
	0x03422050 BL 0x3628980
	0x03422054 MOV X0, X20
	0x03422058 MOV X1, X31
	0x0342205C BL 0x3628A38
	0x03422060 ADRP X8, 0xCFA000
	0x03422064 ADRP X9, 0xCD2000
	0x03422068 LDR X8, [X8 + 0x4D8]
	0x0342206C LDR X9, [X9 + 0x6D0]
	0x03422070 MOV X20, X0
	0x03422074 LDR X21, [X8]
	0x03422078 LDR X0, [X9]
	0x0342207C BL 0x1C16F10
	0x03422080 ADRP X8, 0xCD2000
	0x03422084 LDR X8, [X8 + 0x6C0]
	0x03422088 MOV X22, X0
	0x0342208C LDR X1, [X8]
	0x03422090 BL 0x2AA4804
	0x03422094 ADRP X8, 0xD0C000
	0x03422098 LDR X1, [X19 + 0x38]
	0x0342209C LDR X8, [X8 + 0x7D8]
	0x034220A0 LDR X0, [X8]
	0x034220A4 MOV X2, X31
	0x034220A8 BL 0x321B938
	0x034220AC CBZ X22, 0x342229C
	0x034220B0 ADRP X8, 0xD0C000
	0x034220B4 LDR X8, [X8 + 0x7D0]
	0x034220B8 ADRP X9, 0xCD2000
	0x034220BC LDR X9, [X9 + 0x810]
	0x034220C0 MOV X2, X0
	0x034220C4 LDR X1, [X8]
	0x034220C8 LDR X3, [X9]
	0x034220CC MOV X0, X22
	0x034220D0 BL 0x2AA5098
	0x034220D4 LDR X24, [X25 + 0x10]
	0x034220D8 CBZ X24, 0x34222A0
	0x034220DC ADRP X10, 0xD0C000
	0x034220E0 LDR W23, [X25 + 0x18]
	0x034220E4 LDR X8, [X24]
	0x034220E8 LDP X26, X25, [X19 + 0x40]
	0x034220EC LDR X10, [X10 + 0x7B8]
	0x034220F0 LDRH W9, [X8 + 0x12E]
	0x034220F4 LDR X1, [X10]
	0x034220F8 CBZ X9, 0x342211C
	0x034220FC LDR X10, [X8 + 0xB0]
	0x03422100 ADD X10, X10, 0x8
	0x03422104 LDUR X11, [X10 - 0x8]
	0x03422108 CMP X11, X1
	0x0342210C B.EQ 0x342212C
	0x03422110 SUBS X9, X9, 0x1
	0x03422114 ADD X10, X10, 0x10
	0x03422118 B.NE 0x3422104
	0x0342211C MOVZ W2, 0x3
	0x03422120 MOV X0, X24
	0x03422124 BL 0x1C5C788
	0x03422128 B 0x342213C
	0x0342212C LDR W9, [X10]
	0x03422130 ADD W9, W9, 0x3
	0x03422134 ADD X8, X8, W9, 0x4, SXTW
	0x03422138 ADD X0, X8, 0x138
	0x0342213C LDP X8, X9, [X0]
	0x03422140 MOV X0, X24
	0x03422144 MOV X1, X21
	0x03422148 MOV X2, X20
	0x0342214C MOV X3, X22
	0x03422150 MOV X4, X31
	0x03422154 MOV W5, W23
	0x03422158 MOV X6, X26
	0x0342215C MOV X7, X25
	0x03422160 STR X9, [X31]
	0x03422164 BLR X8
	0x03422168 CBZ X0, 0x34222A4
	0x0342216C ADRP X8, 0xCD4000
	0x03422170 LDR X8, [X8 + 0x1F8]
	0x03422174 LDR X1, [X8]
	0x03422178 BL 0x269F5D0
	0x0342217C ADRP X8, 0xCD4000
	0x03422180 LDR X8, [X8 + 0x1F0]
	0x03422184 STR X0, [X31 + 0x18]
	0x03422188 LDR X1, [X8]
	0x0342218C ADD X0, X31, 0x18
	0x03422190 BL 0x2677430
	0x03422194 TBZ X0, 0x0, 0x34221D4
	0x03422198 ADRP X8, 0xCD4000
	0x0342219C LDR X8, [X8 + 0x1E0]
	0x034221A0 ADD X0, X31, 0x18
	0x034221A4 LDR X1, [X8]
	0x034221A8 BL 0x2677474
	0x034221AC MOVN W8, 0x1
	0x034221B0 STR W8, [X19], #0x8
	0x034221B4 LDR X0, [X27]
	0x034221B8 LDR W8, [X0 + 0xE0]
	0x034221BC CBNZ W8, 0x34221C4
	0x034221C0 BL 0x1C16DFC
	0x034221C4 MOV X0, X19
	0x034221C8 MOV X1, X31
	0x034221CC BL 0x32C4864
	0x034221D0 B 0x342220C
	0x034221D4 STR W31, [X19]
	0x034221D8 LDR X8, [X31 + 0x18]
	0x034221DC STR X8, [X19 + 0x50]
	0x034221E0 LDR X0, [X27]
	0x034221E4 LDR W8, [X0 + 0xE0]
	0x034221E8 CBNZ W8, 0x34221F0
	0x034221EC BL 0x1C16DFC
	0x034221F0 ADRP X8, 0xD0C000
	0x034221F4 LDR X8, [X8 + 0xC90]
	0x034221F8 ADD X0, X19, 0x8
	0x034221FC LDR X3, [X8]
	0x03422200 ADD X1, X31, 0x18
	0x03422204 MOV X2, X19
	0x03422208 BL 0x21862F4
	0x0342220C LDP X20, X19, [X31 + 0x70]
	0x03422210 LDP X22, X21, [X31 + 0x60]
	0x03422214 LDP X24, X23, [X31 + 0x50]
	0x03422218 LDP X26, X25, [X31 + 0x40]
	0x0342221C LDP X28, X27, [X31 + 0x30]
	0x03422220 LDP X29, X30, [X31 + 0x20]
	0x03422224 ADD X31, X31, 0x80
	0x03422228 RET
	0x0342222C BL 0x1C16F20
	0x03422230 ADRP X0, 0xCD9000
	0x03422234 LDR X0, [X0 + 0x578]
	0x03422238 BL 0x1C16D08
	0x0342223C BL 0x1C16F10
	0x03422240 MOV X20, X0
	0x03422244 ADRP X0, 0xD0C000
	0x03422248 LDR X0, [X0 + 0x808]
	0x0342224C BL 0x1C16D08
	0x03422250 MOV X1, X0
	0x03422254 MOV X0, X20
	0x03422258 MOV X2, X31
	0x0342225C BL 0x3314A68
	0x03422260 ADRP X0, 0xD0C000
	0x03422264 LDR X0, [X0 + 0xCA0]
	0x03422268 BL 0x1C16D08
	0x0342226C MOV X1, X0
	0x03422270 MOV X0, X20
	0x03422274 BL 0x1C16DEC
	0x03422278 BL 0x1C16F20
	0x0342227C MOV X0, X23
	0x03422280 BL 0x1C16F18
	0x03422284 BL 0x1C16F20
	0x03422288 BL 0x1C16F20
	0x0342228C BL 0x1C16F20
	0x03422290 BL 0x1C16F28
	0x03422294 BL 0x1C16F20
	0x03422298 BL 0x1C16F20
	0x0342229C BL 0x1C16F20
	0x034222A0 BL 0x1C16F20
	0x034222A4 BL 0x1C16F20
	0x034222A8 BL 0x1C16F20
	0x034222AC B 0x3422318
	0x034222B0 B 0x3422318
	0x034222B4 B 0x3422318
	0x034222B8 B 0x3422318
	0x034222BC B 0x3422318
	0x034222C0 B 0x3422318
	0x034222C4 B 0x3422318
	0x034222C8 B 0x3422318
	0x034222CC B 0x3422318
	0x034222D0 B 0x3422318
	0x034222D4 B 0x3422318
	0x034222D8 B 0x3422318
	0x034222DC B 0x3422318
	0x034222E0 B 0x3422318
	0x034222E4 B 0x3422318
	0x034222E8 B 0x3422318
	0x034222EC B 0x3422318
	0x034222F0 B 0x3422318
	0x034222F4 B 0x3422318
	0x034222F8 B 0x3422318
	0x034222FC B 0x3422318
	0x03422300 B 0x3422318
	0x03422304 B 0x3422318
	0x03422308 B 0x3422318
	0x0342230C B 0x3422318
	0x03422310 B 0x3422318
	0x03422314 B 0x3422318
	0x03422318 MOV X20, X1
	0x0342231C MOV X21, X0
	0x03422320 B 0x34223D0
	0x03422324 B 0x342233C
	0x03422328 B 0x342233C
	0x0342232C B 0x342233C
	0x03422330 MOV X21, X28
	0x03422334 B 0x342233C
	0x03422338 B 0x342233C
	0x0342233C CMP W1, 0x1
	0x03422340 B.NE 0x3422358
	0x03422344 BL 0x3EB1AD0
	0x03422348 LDR X23, [X0]
	0x0342234C BL 0x3EB1AE0
	0x03422350 MOV W20, W31
	0x03422354 B 0x3421F24
	0x03422358 MOV X21, X0
	0x0342235C MOV X20, X1
	0x03422360 MOV X23, X31
	0x03422364 TBZ X24, 0x1F, 0x34223CC
	0x03422368 CBZ X22, 0x34223CC
	0x0342236C ADRP X10, 0xCD1000
	0x03422370 LDR X8, [X22]
	0x03422374 LDR X10, [X10 + 0xE00]
	0x03422378 LDRH W9, [X8 + 0x12E]
	0x0342237C LDR X1, [X10]
	0x03422380 CBZ X9, 0x34223A4
	0x03422384 LDR X10, [X8 + 0xB0]
	0x03422388 ADD X10, X10, 0x8
	0x0342238C LDUR X11, [X10 - 0x8]
	0x03422390 CMP X11, X1
	0x03422394 B.EQ 0x34223B4
	0x03422398 SUBS X9, X9, 0x1
	0x0342239C ADD X10, X10, 0x10
	0x034223A0 B.NE 0x342238C
	0x034223A4 MOV X0, X22
	0x034223A8 MOV W2, W31
	0x034223AC BL 0x1C5C788
	0x034223B0 B 0x34223C0
	0x034223B4 LDRSW X9, [X10]
	0x034223B8 ADD X8, X8, X9, 0x4, LSL
	0x034223BC ADD X0, X8, 0x138
	0x034223C0 LDP X8, X1, [X0]
	0x034223C4 MOV X0, X22
	0x034223C8 BLR X8
	0x034223CC CBNZ X23, 0x342245C
	0x034223D0 CMP W20, 0x1
	0x034223D4 B.NE 0x342247C
	0x034223D8 MOV X0, X21
	0x034223DC BL 0x3EB1AD0
	0x034223E0 MOV X20, X0
	0x034223E4 ADRP X0, 0xCD1000
	0x034223E8 LDR X0, [X0 + 0x7D0]
	0x034223EC BL 0x1C16D08
	0x034223F0 LDR X8, [X20]
	0x034223F4 LDR X1, [X8]
	0x034223F8 BL 0x1C17270
	0x034223FC TBZ X0, 0x0, 0x342243C
	0x03422400 LDR X20, [X20]
	0x03422404 BL 0x3EB1AE0
	0x03422408 MOVN W8, 0x1
	0x0342240C STR W8, [X19], #0x8
	0x03422410 ADRP X0, 0xCD4000
	0x03422414 LDR X0, [X0 + 0x280]
	0x03422418 BL 0x1C16D08
	0x0342241C LDR W8, [X0 + 0xE0]
	0x03422420 CBNZ W8, 0x3422428
	0x03422424 BL 0x1C16DFC
	0x03422428 MOV X0, X19
	0x0342242C MOV X1, X20
	0x03422430 MOV X2, X31
	0x03422434 BL 0x32C4908
	0x03422438 B 0x342220C
	0x0342243C MOVZ W0, 0x8
	0x03422440 BL 0x3EB1AF0
	0x03422444 LDR X8, [X20]
	0x03422448 STR X8, [X0]
	0x0342244C ADRP X1, 0xA92000
	0x03422450 ADD X1, X1, 0xE58
	0x03422454 MOV X2, X31
	0x03422458 BL 0x3EB1B00
	0x0342245C MOV X0, X23
	0x03422460 BL 0x1C16F18
	0x03422464 MOV X20, X1
	0x03422468 MOV X21, X0
	0x0342246C TBNZ X24, 0x1F, 0x3422368
	0x03422470 B 0x34223CC
	0x03422474 MOV X21, X0
	0x03422478 BL 0x3EB1AE0
	0x0342247C MOV X0, X21
	0x03422480 BL 0x1D2C690
	0x03422484 BL 0x1990590
	0x03422488 STR X30, [X31 - 0x30]!
	0x0342248C STP X22, X21, [X31 + 0x10]
	0x03422490 STP X20, X19, [X31 + 0x20]
	0x03422494 ADRP X21, 0xFBB000
	0x03422498 ADRP X22, 0xCD4000
	0x0342249C LDRB W8, [X21 + 0x622]
	0x034224A0 LDR X22, [X22 + 0x280]
	0x034224A4 MOV X19, X1
	0x034224A8 MOV X20, X0
	0x034224AC TBNZ X8, 0x0, 0x34224C4
	0x034224B0 ADRP X0, 0xCD4000
	0x034224B4 LDR X0, [X0 + 0x280]
	0x034224B8 BL 0x1C16CF4
	0x034224BC MOVZ W8, 0x1
	0x034224C0 STRB W8, [X21 + 0x622]
	0x034224C4 LDR X0, [X22]
	0x034224C8 LDR W8, [X0 + 0xE0]
	0x034224CC CBNZ W8, 0x34224D4
	0x034224D0 BL 0x1C16DFC
	0x034224D4 ADD X0, X20, 0x8
	0x034224D8 MOV X1, X19
	0x034224DC LDP X20, X19, [X31 + 0x20]
	0x034224E0 LDP X22, X21, [X31 + 0x10]
	0x034224E4 MOV X2, X31
	0x034224E8 LDR X30, [X31], #0x30
	0x034224EC B 0x32C477C
	0x034224F0 SUB X31, X31, 0x70
	0x034224F4 STR X30, [X31 + 0x10]
	0x034224F8 STP X28, X27, [X31 + 0x20]
	0x034224FC STP X26, X25, [X31 + 0x30]
	0x03422500 STP X24, X23, [X31 + 0x40]
	0x03422504 STP X22, X21, [X31 + 0x50]
	0x03422508 STP X20, X19, [X31 + 0x60]
	0x0342250C ADRP X20, 0xFBB000
	0x03422510 LDRB W8, [X20 + 0x623]
	0x03422514 MOV X19, X0
	0x03422518 TBNZ X8, 0x0, 0x34225E4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFBD000
	014 Move W8, [X20+1565]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xD0E000
	021 Move X0, [X0+3152]
	022 Call 0x1C17CF4
	023 Move X0, 0xCD6000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCDC000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCD4000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCD3000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD3000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD0D000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD5000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCD5000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCD5000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCDB000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCFB000
	054 Move X0, [X0+1248]
	055 Call 0x1C17CF4
	056 Move X0, 0xD0D000
	057 Move X0, [X0+3160]
	058 Call 0x1C17CF4
	059 Move X0, 0xD0D000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xD0D000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCD2000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1565], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCD5000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xD0D000
	086 Move X9, 0xCD2000
	087 Move X8, [X8+3160]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCDB000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCDB000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCFB000
	139 Move X9, 0xCD3000
	140 Move X8, [X8+1248]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCD3000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xD0D000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xD0D000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCD3000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xD0D000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCD5000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCD5000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCD5000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xD0D000
	269 Move X8, [X8+3152]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCDA000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xD0D000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xD0D000
	301 Move X0, [X0+3168]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCD2000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCD5000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA93000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342251C ADRP X0, 0xD0C000
	0x03422520 LDR X0, [X0 + 0xCA8]
	0x03422524 BL 0x1C16CF4
	0x03422528 ADRP X0, 0xCD4000
	0x0342252C LDR X0, [X0 + 0x280]
	0x03422530 BL 0x1C16CF4
	0x03422534 ADRP X0, 0xCDA000
	0x03422538 LDR X0, [X0 + 0x8D8]
	0x0342253C BL 0x1C16CF4
	0x03422540 ADRP X0, 0xCD2000
	0x03422544 LDR X0, [X0 + 0x810]
	0x03422548 BL 0x1C16CF4
	0x0342254C ADRP X0, 0xCD2000
	0x03422550 LDR X0, [X0 + 0x6C0]
	0x03422554 BL 0x1C16CF4
	0x03422558 ADRP X0, 0xCD2000
	0x0342255C LDR X0, [X0 + 0x6D0]
	0x03422560 BL 0x1C16CF4
	0x03422564 ADRP X0, 0xD0C000
	0x03422568 LDR X0, [X0 + 0x7B8]
	0x0342256C BL 0x1C16CF4
	0x03422570 ADRP X0, 0xCD4000
	0x03422574 LDR X0, [X0 + 0x1E0]
	0x03422578 BL 0x1C16CF4
	0x0342257C ADRP X0, 0xCD4000
	0x03422580 LDR X0, [X0 + 0x1F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFBC000
	007 Move X22, 0xCD5000
	008 Move W8, [X21+1566]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD5000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1566], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

