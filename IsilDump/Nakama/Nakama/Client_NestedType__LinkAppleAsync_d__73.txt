Type: Nakama.Client/<LinkAppleAsync>d__73

Method: System.Void MoveNext()

Disassembly:
	0x034595F0 LDR X8, [X8 + 0x840]
	0x034595F4 LDR X1, [X8]
	0x034595F8 BL 0x269F5D0
	0x034595FC ADRP X8, 0xC9B000
	0x03459600 LDR X8, [X8 + 0x838]
	0x03459604 STR X0, [X31 + 0x20]
	0x03459608 LDR X1, [X8]
	0x0345960C ADD X0, X31, 0x20
	0x03459610 BL 0x2677430
	0x03459614 TBNZ X0, 0x0, 0x345940C
	0x03459618 STR W31, [X19]
	0x0345961C LDR X8, [X31 + 0x20]
	0x03459620 STR X8, [X19 + 0x50]
	0x03459624 LDR X0, [X25]
	0x03459628 LDR W8, [X0 + 0xE0]
	0x0345962C CBNZ W8, 0x3459634
	0x03459630 BL 0x1C16DFC
	0x03459634 ADRP X8, 0xCD6000
	0x03459638 LDR X8, [X8 + 0xED8]
	0x0345963C ADD X0, X19, 0x8
	0x03459640 LDR X3, [X8]
	0x03459644 ADD X1, X31, 0x20
	0x03459648 MOV X2, X19
	0x0345964C BL 0x2188938
	0x03459650 B 0x3459798
	0x03459654 CBZ X20, 0x34597BC
	0x03459658 ADRP X8, 0xCA2000
	0x0345965C LDR X8, [X8 + 0x818]
	0x03459660 LDR X21, [X20 + 0x58]
	0x03459664 LDR X23, [X19 + 0x48]
	0x03459668 LDR X0, [X8]
	0x0345966C BL 0x1C16F10
	0x03459670 ADRP X8, 0xCD6000
	0x03459674 LDR X8, [X8 + 0xEE8]
	0x03459678 MOV X22, X0
	0x0345967C LDR X2, [X8]
	0x03459680 MOV X1, X23
	0x03459684 MOV X3, X31
	0x03459688 BL 0x2D27AA8
	0x0345968C LDR X8, [X19 + 0x48]
	0x03459690 CBZ X8, 0x34597B0
	0x03459694 ADRP X9, 0xCD6000
	0x03459698 LDR X23, [X19 + 0x40]
	0x0345969C LDR X9, [X9 + 0x7C8]
	0x034596A0 CBNZ X23, 0x34596A8
	0x034596A4 LDR X23, [X20 + 0x18]
	0x034596A8 LDR X20, [X8 + 0x18]
	0x034596AC LDR X1, [X8 + 0x28]
	0x034596B0 LDR X2, [X9]
	0x034596B4 STP X31, X31, [X31 + 0x8]
	0x034596B8 ADD X0, X31, 0x8
	0x034596BC BL 0x242E368
	0x034596C0 ADRP X8, 0xCD6000
	0x034596C4 LDR X8, [X8 + 0x7D0]
	0x034596C8 LDR X0, [X8]
	0x034596CC BL 0x1C16F10
	0x034596D0 LDP X3, X4, [X31 + 0x8]
	0x034596D4 MOV X24, X0
	0x034596D8 MOV X1, X20
	0x034596DC MOV X2, X23
	0x034596E0 MOV X5, X31
	0x034596E4 BL 0x3465404
	0x034596E8 CBZ X21, 0x34597B4
	0x034596EC MOV X0, X21
	0x034596F0 MOV X1, X22
	0x034596F4 MOV X2, X24
	0x034596F8 MOV X3, X31
	0x034596FC BL 0x3465B68
	0x03459700 CBZ X0, 0x34597B8
	0x03459704 MOV X1, X31
	0x03459708 BL 0x33ED394
	0x0345970C STR X0, [X31 + 0x18]
	0x03459710 ADD X0, X31, 0x18
	0x03459714 MOV X1, X31
	0x03459718 BL 0x32C3A80
	0x0345971C TBZ X0, 0x0, 0x345975C
	0x03459720 ADD X0, X31, 0x18
	0x03459724 MOV X1, X31
	0x03459728 BL 0x32C3B4C
	0x0345972C MOVN W8, 0x1
	0x03459730 STR W8, [X19]
	0x03459734 STR X31, [X19 + 0x48]
	0x03459738 LDR X0, [X25]
	0x0345973C ADD X19, X19, 0x8
	0x03459740 LDR W8, [X0 + 0xE0]
	0x03459744 CBNZ W8, 0x345974C
	0x03459748 BL 0x1C16DFC
	0x0345974C MOV X0, X19
	0x03459750 MOV X1, X31
	0x03459754 BL 0x32C4864
	0x03459758 B 0x3459798
	0x0345975C MOVZ W8, 0x1
	0x03459760 STR W8, [X19]
	0x03459764 LDR X8, [X31 + 0x18]
	0x03459768 STR X8, [X19 + 0x58]
	0x0345976C LDR X0, [X25]
	0x03459770 LDR W8, [X0 + 0xE0]
	0x03459774 CBNZ W8, 0x345977C
	0x03459778 BL 0x1C16DFC
	0x0345977C ADRP X8, 0xCD6000
	0x03459780 LDR X8, [X8 + 0xEE0]
	0x03459784 ADD X0, X19, 0x8
	0x03459788 LDR X3, [X8]
	0x0345978C ADD X1, X31, 0x18
	0x03459790 MOV X2, X19
	0x03459794 BL 0x2189FFC
	0x03459798 LDP X20, X19, [X31 + 0x60]
	0x0345979C LDP X22, X21, [X31 + 0x50]
	0x034597A0 LDP X24, X23, [X31 + 0x40]
	0x034597A4 LDP X30, X25, [X31 + 0x30]
	0x034597A8 ADD X31, X31, 0x70
	0x034597AC RET
	0x034597B0 BL 0x1C16F20
	0x034597B4 BL 0x1C16F20
	0x034597B8 BL 0x1C16F20
	0x034597BC BL 0x1C16F20
	0x034597C0 BL 0x1C16F20
	0x034597C4 BL 0x1C16F20
	0x034597C8 BL 0x1C16F20
	0x034597CC BL 0x1C16F20
	0x034597D0 BL 0x1C16F20
	0x034597D4 BL 0x1C16F20
	0x034597D8 BL 0x1C16F20
	0x034597DC BL 0x1C16F20
	0x034597E0 B 0x3459854
	0x034597E4 B 0x3459854
	0x034597E8 B 0x3459854
	0x034597EC B 0x3459854
	0x034597F0 B 0x3459854
	0x034597F4 B 0x3459854
	0x034597F8 B 0x3459854
	0x034597FC B 0x3459854
	0x03459800 B 0x3459854
	0x03459804 B 0x3459854
	0x03459808 B 0x3459854
	0x0345980C B 0x3459854
	0x03459810 B 0x3459854
	0x03459814 B 0x3459854
	0x03459818 B 0x3459854
	0x0345981C B 0x3459854
	0x03459820 B 0x3459854
	0x03459824 B 0x3459854
	0x03459828 B 0x3459854
	0x0345982C B 0x3459854
	0x03459830 B 0x3459854
	0x03459834 B 0x3459854
	0x03459838 B 0x3459854
	0x0345983C B 0x3459854
	0x03459840 B 0x3459854
	0x03459844 B 0x3459854
	0x03459848 B 0x3459854
	0x0345984C B 0x3459854
	0x03459850 B 0x3459854
	0x03459854 MOV X20, X0
	0x03459858 CMP W1, 0x1
	0x0345985C B.NE 0x34598F0
	0x03459860 MOV X0, X20
	0x03459864 BL 0x3EB1AD0
	0x03459868 MOV X20, X0
	0x0345986C ADRP X0, 0xC9A000
	0x03459870 LDR X0, [X0 + 0x7D0]
	0x03459874 BL 0x1C16D08
	0x03459878 LDR X8, [X20]
	0x0345987C LDR X1, [X8]
	0x03459880 BL 0x1C17270
	0x03459884 TBZ X0, 0x0, 0x34598C8
	0x03459888 LDR X20, [X20]
	0x0345988C BL 0x3EB1AE0
	0x03459890 MOVN W8, 0x1
	0x03459894 STR X31, [X19 + 0x48]
	0x03459898 STR W8, [X19], #0x8
	0x0345989C ADRP X0, 0xC9D000
	0x034598A0 LDR X0, [X0 + 0x280]
	0x034598A4 BL 0x1C16D08
	0x034598A8 LDR W8, [X0 + 0xE0]
	0x034598AC CBNZ W8, 0x34598B4
	0x034598B0 BL 0x1C16DFC
	0x034598B4 MOV X0, X19
	0x034598B8 MOV X1, X20
	0x034598BC MOV X2, X31
	0x034598C0 BL 0x32C4908
	0x034598C4 B 0x3459798
	0x034598C8 MOVZ W0, 0x8
	0x034598CC BL 0x3EB1AF0
	0x034598D0 LDR X8, [X20]
	0x034598D4 STR X8, [X0]
	0x034598D8 ADRP X1, 0xA5B000
	0x034598DC ADD X1, X1, 0xE58
	0x034598E0 MOV X2, X31
	0x034598E4 BL 0x3EB1B00
	0x034598E8 MOV X20, X0
	0x034598EC BL 0x3EB1AE0
	0x034598F0 MOV X0, X20
	0x034598F4 BL 0x1D2C690
	0x034598F8 BL 0x1990590
	0x034598FC STR X30, [X31 - 0x30]!
	0x03459900 STP X22, X21, [X31 + 0x10]
	0x03459904 STP X20, X19, [X31 + 0x20]
	0x03459908 ADRP X21, 0xF84000
	0x0345990C ADRP X22, 0xC9D000
	0x03459910 LDRB W8, [X21 + 0x796]
	0x03459914 LDR X22, [X22 + 0x280]
	0x03459918 MOV X19, X1
	0x0345991C MOV X20, X0
	0x03459920 TBNZ X8, 0x0, 0x3459938
	0x03459924 ADRP X0, 0xC9D000
	0x03459928 LDR X0, [X0 + 0x280]
	0x0345992C BL 0x1C16CF4
	0x03459930 MOVZ W8, 0x1
	0x03459934 STRB W8, [X21 + 0x796]
	0x03459938 LDR X0, [X22]
	0x0345993C LDR W8, [X0 + 0xE0]
	0x03459940 CBNZ W8, 0x3459948
	0x03459944 BL 0x1C16DFC
	0x03459948 ADD X0, X20, 0x8
	0x0345994C MOV X1, X19
	0x03459950 LDP X20, X19, [X31 + 0x20]
	0x03459954 LDP X22, X21, [X31 + 0x10]
	0x03459958 MOV X2, X31
	0x0345995C LDR X30, [X31], #0x30
	0x03459960 B 0x32C477C
	0x03459964 SUB X31, X31, 0x70
	0x03459968 STP X30, X25, [X31 + 0x30]
	0x0345996C STP X24, X23, [X31 + 0x40]
	0x03459970 STP X22, X21, [X31 + 0x50]
	0x03459974 STP X20, X19, [X31 + 0x60]
	0x03459978 ADRP X20, 0xF84000
	0x0345997C LDRB W8, [X20 + 0x797]
	0x03459980 MOV X19, X0
	0x03459984 TBNZ X8, 0x0, 0x3459A38
	0x03459988 ADRP X0, 0xCD6000
	0x0345998C LDR X0, [X0 + 0xEF8]
	0x03459990 BL 0x1C16CF4
	0x03459994 ADRP X0, 0xCD6000
	0x03459998 LDR X0, [X0 + 0xF00]
	0x0345999C BL 0x1C16CF4
	0x034599A0 ADRP X0, 0xC9D000
	0x034599A4 LDR X0, [X0 + 0x280]
	0x034599A8 BL 0x1C16CF4
	0x034599AC ADRP X0, 0xC9C000
	0x034599B0 LDR X0, [X0 + 0xA10]
	0x034599B4 BL 0x1C16CF4
	0x034599B8 ADRP X0, 0xC9B000
	0x034599BC LDR X0, [X0 + 0x9F0]
	0x034599C0 BL 0x1C16CF4
	0x034599C4 ADRP X0, 0xCA2000
	0x034599C8 LDR X0, [X0 + 0x818]
	0x034599CC BL 0x1C16CF4
	0x034599D0 ADRP X0, 0xC9B000
	0x034599D4 LDR X0, [X0 + 0x818]
	0x034599D8 BL 0x1C16CF4
	0x034599DC ADRP X0, 0xCD6000
	0x034599E0 LDR X0, [X0 + 0x7C8]
	0x034599E4 BL 0x1C16CF4
	0x034599E8 ADRP X0, 0xCD6000
	0x034599EC LDR X0, [X0 + 0x7D0]
	0x034599F0 BL 0x1C16CF4
	0x034599F4 ADRP X0, 0xC9B000
	0x034599F8 LDR X0, [X0 + 0x830]
	0x034599FC BL 0x1C16CF4
	0x03459A00 ADRP X0, 0xC9B000
	0x03459A04 LDR X0, [X0 + 0x838]
	0x03459A08 BL 0x1C16CF4
	0x03459A0C ADRP X0, 0xC9B000
	0x03459A10 LDR X0, [X0 + 0x840]
	0x03459A14 BL 0x1C16CF4
	0x03459A18 ADRP X0, 0xCD6000
	0x03459A1C LDR X0, [X0 + 0xF08]
	0x03459A20 BL 0x1C16CF4
	0x03459A24 ADRP X0, 0xCD6000
	0x03459A28 LDR X0, [X0 + 0xF10]
	0x03459A2C BL 0x1C16CF4
	0x03459A30 MOVZ W8, 0x1
	0x03459A34 STRB W8, [X20 + 0x797]
	0x03459A38 STP X31, X31, [X31 + 0x20]
	0x03459A3C STR X31, [X31 + 0x18]
	0x03459A40 ADRP X25, 0xC9D000
	0x03459A44 LDR W8, [X19]
	0x03459A48 LDR X20, [X19 + 0x20]
	0x03459A4C LDR X25, [X25 + 0x280]
	0x03459A50 CBZ W8, 0x3459A74
	0x03459A54 CMP W8, 0x1
	0x03459A58 B.NE 0x3459AA0
	0x03459A5C LDR X8, [X19 + 0x60]
	0x03459A60 MOVN W9, 0x0
	0x03459A64 STR X8, [X31 + 0x18]
	0x03459A68 STR X31, [X19 + 0x60]
	0x03459A6C STR W9, [X19]
	0x03459A70 B 0x3459D9C
	0x03459A74 LDR X8, [X19 + 0x58]
	0x03459A78 MOVN W9, 0x0
	0x03459A7C STR X8, [X31 + 0x20]
	0x03459A80 STR X31, [X19 + 0x58]
	0x03459A84 STR W9, [X19]
	0x03459A88 ADRP X8, 0xC9B000
	0x03459A8C LDR X8, [X8 + 0x830]
	0x03459A90 ADD X0, X31, 0x20
	0x03459A94 LDR X1, [X8]
	0x03459A98 BL 0x2677474
	0x03459A9C B 0x3459CD0
	0x03459AA0 ADRP X8, 0xCD6000
	0x03459AA4 LDR X8, [X8 + 0xF10]
	0x03459AA8 LDR X0, [X8]
	0x03459AAC BL 0x1C16F10
	0x03459AB0 MOV X21, X0
	0x03459AB4 MOV X1, X31
	0x03459AB8 BL 0x344A10C
	0x03459ABC STR X21, [X19 + 0x50]
	0x03459AC0 CBZ X21, 0x3459E3C
	0x03459AC4 LDR X8, [X19 + 0x20]
	0x03459AC8 STR X8, [X21 + 0x10]
	0x03459ACC LDR X8, [X19 + 0x28]
	0x03459AD0 STR X8, [X21 + 0x18]
	0x03459AD4 LDR V0, [X19 + 0x3]
	0x03459AD8 STR V0, [X21 + 0x2]
	0x03459ADC LDR X8, [X19 + 0x40]
	0x03459AE0 STR X8, [X21 + 0x30]
	0x03459AE4 CBZ X20, 0x3459E40
	0x03459AE8 LDRB W8, [X20 + 0x10]
	0x03459AEC CBZ W8, 0x3459CD4
	0x03459AF0 LDR X8, [X19 + 0x50]
	0x03459AF4 CBZ X8, 0x3459E44
	0x03459AF8 LDR X21, [X8 + 0x18]
	0x03459AFC CBZ X21, 0x3459E48
	0x03459B00 ADRP X23, 0xC9B000
	0x03459B04 LDR X8, [X21]
	0x03459B08 LDR X23, [X23 + 0x818]
	0x03459B0C LDRH W9, [X8 + 0x12E]
	0x03459B10 LDR X1, [X23]
	0x03459B14 CBZ X9, 0x3459B38
	0x03459B18 LDR X10, [X8 + 0xB0]
	0x03459B1C ADD X10, X10, 0x8
	0x03459B20 LDUR X11, [X10 - 0x8]
	0x03459B24 CMP X11, X1
	0x03459B28 B.EQ 0x3459B48
	0x03459B2C SUBS X9, X9, 0x1
	0x03459B30 ADD X10, X10, 0x10
	0x03459B34 B.NE 0x3459B20
	0x03459B38 MOVZ W2, 0x7
	0x03459B3C MOV X0, X21
	0x03459B40 BL 0x1C5C788
	0x03459B44 B 0x3459B58
	0x03459B48 LDR W9, [X10]
	0x03459B4C ADD W9, W9, 0x7
	0x03459B50 ADD X8, X8, W9, 0x4, SXTW
	0x03459B54 ADD X0, X8, 0x138
	0x03459B58 LDP X8, X1, [X0]
	0x03459B5C MOV X0, X21
	0x03459B60 BLR X8
	0x03459B64 MOV X1, X31
	0x03459B68 BL 0x32277A8
	0x03459B6C TBNZ X0, 0x0, 0x3459CD0
	0x03459B70 LDR X8, [X19 + 0x50]
	0x03459B74 CBZ X8, 0x3459E4C
	0x03459B78 ADRP X9, 0xC9B000
	0x03459B7C LDR X9, [X9 + 0x9F0]
	0x03459B80 LDR X21, [X8 + 0x18]
	0x03459B84 LDR X0, [X9]
	0x03459B88 LDR W9, [X0 + 0xE0]
	0x03459B8C CBNZ W9, 0x3459B94
	0x03459B90 BL 0x1C16DFC
	0x03459B94 MOV X0, X31
	0x03459B98 BL 0x33616A4
	0x03459B9C ADRP X22, 0xC9C000
	0x03459BA0 LDR X22, [X22 + 0xA10]
	0x03459BA4 MOV X8, X0
	0x03459BA8 STR X8, [X31 + 0x28]
	0x03459BAC LDR X0, [X22]
	0x03459BB0 LDR W8, [X0 + 0xE0]
	0x03459BB4 CBNZ W8, 0x3459BC0
	0x03459BB8 BL 0x1C16DFC
	0x03459BBC LDR X0, [X22]
	0x03459BC0 LDR X8, [X0 + 0xB8]
	0x03459BC4 LDR X1, [X8]
	0x03459BC8 ADD X0, X31, 0x28
	0x03459BCC MOV X2, X31
	0x03459BD0 BL 0x335FC68
	0x03459BD4 CBZ X21, 0x3459E50
	0x03459BD8 LDR X8, [X21]
	0x03459BDC LDR X1, [X23]
	0x03459BE0 MOV X22, X0
	0x03459BE4 LDRH W9, [X8 + 0x12E]
	0x03459BE8 CBZ X9, 0x3459C0C
	0x03459BEC LDR X10, [X8 + 0xB0]
	0x03459BF0 ADD X10, X10, 0x8
	0x03459BF4 LDUR X11, [X10 - 0x8]
	0x03459BF8 CMP X11, X1
	0x03459BFC B.EQ 0x3459C1C
	0x03459C00 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF85000
	011 Move W8, [X20+1937]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD7000
	018 Move X0, [X0+3736]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD7000
	021 Move X0, [X0+3744]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9E000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9D000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9C000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA3000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9C000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD7000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD7000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9C000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9C000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9C000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD7000
	054 Move X0, [X0+3752]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD7000
	057 Move X0, [X0+3760]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1937], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9E000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC9C000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD7000
	091 Move X8, [X8+3760]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass73_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xC9C000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xC9C000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC9D000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xC9C000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC9C000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCD7000
	242 Move X8, [X8+3736]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCA3000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCD7000
	257 Move X8, [X8+3752]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCD7000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCD7000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+72], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+88], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCD7000
	336 Move X8, [X8+3744]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xC9B000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+72], X31
	385 Move [X19+8], W8
	386 Move X0, 0xC9E000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA5C000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03459C04 ADD X10, X10, 0x10
	0x03459C08 B.NE 0x3459BF4
	0x03459C0C MOVZ W2, 0xB
	0x03459C10 MOV X0, X21
	0x03459C14 BL 0x1C5C788
	0x03459C18 B 0x3459C2C
	0x03459C1C LDR W9, [X10]
	0x03459C20 ADD W9, W9, 0xB
	0x03459C24 ADD X8, X8, W9, 0x4, SXTW
	0x03459C28 ADD X0, X8, 0x138
	0x03459C2C LDP X8, X2, [X0]
	0x03459C30 MOV X0, X21
	0x03459C34 MOV X1, X22
	0x03459C38 BLR X8
	0x03459C3C TBZ X0, 0x0, 0x3459CD0
	0x03459C40 LDR X8, [X19 + 0x50]
	0x03459C44 CBZ X8, 0x3459E54
	0x03459C48 LDR X1, [X8 + 0x18]
	0x03459C4C LDR X3, [X19 + 0x48]
	0x03459C50 LDR X4, [X8 + 0x30]
	0x03459C54 MOV X0, X20
	0x03459C58 MOV X2, X31
	0x03459C5C MOV X5, X31
	0x03459C60 BL 0x34440A8
	0x03459C64 CBZ X0, 0x3459E58
	0x03459C68 ADRP X8, 0xC9B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF85000
	007 Move X22, 0xC9E000
	008 Move W8, [X21+1938]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9E000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1938], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

