Type: Nakama.ApiUser

Method: System.String get_AppleId()

Disassembly:
	0x0340BEA4 MOV X0, X21
	0x0340BEA8 LDR X1, [X8 + 0x40]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_AppleId(System.String value)

Disassembly:
	0x0340BEAC BL 0x1C16E00
	0x0340BEB0 CBZ X0, 0x340BFCC

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_AvatarUrl()

Disassembly:
	0x0340BEB4 LDR W8, [X20 + 0x18]
	0x0340BEB8 CBZ W8, 0x340BFC8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_AvatarUrl(System.String value)

Disassembly:
	0x0340BEBC ADRP X22, 0xD23000
	0x0340BEC0 LDR X22, [X22 + 0x1F8]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_CreateTime()

Disassembly:
	0x0340BEC4 STR X21, [X20 + 0x20]
	0x0340BEC8 LDR X0, [X22]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x0340BECC CBZ X0, 0x340BEE4
	0x0340BED0 LDR X8, [X20]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_DisplayName()

Disassembly:
	0x0340BED4 LDR X1, [X8 + 0x40]
	0x0340BED8 BL 0x1C16E00

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_DisplayName(System.String value)

Disassembly:
	0x0340BEDC CBZ X0, 0x340BFCC
	0x0340BEE0 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Int32 get_EdgeCount()

Disassembly:
	0x0340BEE4 CMP W8, 0x1
	0x0340BEE8 B.LS 0x340BFC8

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_EdgeCount(System.Int32 value)

Disassembly:
	0x0340BEEC LDR X8, [X22]
	0x0340BEF0 ADRP X9, 0xCE8000

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.String get_FacebookId()

Disassembly:
	0x0340BEF4 LDR X9, [X9 + 0xB58]
	0x0340BEF8 ADD X1, X31, 0xC

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_FacebookId(System.String value)

Disassembly:
	0x0340BEFC STR X8, [X20 + 0x28]
	0x0340BF00 LDRB W8, [X19 + 0x10]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String get_FacebookInstantGameId()

Disassembly:
	0x0340BF04 LDR X0, [X9]
	0x0340BF08 STRB W8, [X31 + 0xC]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_FacebookInstantGameId(System.String value)

Disassembly:
	0x0340BF0C BL 0x1C16E04
	0x0340BF10 MOV X21, X0

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String get_GamecenterId()

Disassembly:
	0x0340BF14 CBZ X0, 0x340BF2C
	0x0340BF18 LDR X8, [X20]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_GamecenterId(System.String value)

Disassembly:
	0x0340BF1C MOV X0, X21
	0x0340BF20 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_GoogleId()

Disassembly:
	0x0340BF24 BL 0x1C16E00
	0x0340BF28 CBZ X0, 0x340BFCC

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_GoogleId(System.String value)

Disassembly:
	0x0340BF2C LDR W8, [X20 + 0x18]
	0x0340BF30 CMP W8, 0x2

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_Id()

Disassembly:
	0x0340BF34 B.LS 0x340BFC8
	0x0340BF38 ADRP X22, 0xCE8000

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x0340BF3C LDR X22, [X22 + 0x838]
	0x0340BF40 STR X21, [X20 + 0x30]

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.String get_LangTag()

Disassembly:
	0x0340BF44 LDR X0, [X22]
	0x0340BF48 CBZ X0, 0x340BF60

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_LangTag(System.String value)

Disassembly:
	0x0340BF4C LDR X8, [X20]
	0x0340BF50 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String get_Location()

Disassembly:
	0x0340BF54 BL 0x1C16E00
	0x0340BF58 CBZ X0, 0x340BFCC

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_Location(System.String value)

Disassembly:
	0x0340BF5C LDR W8, [X20 + 0x18]
	0x0340BF60 CMP W8, 0x3

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.String get_Metadata()

Disassembly:
	0x0340BF64 B.LS 0x340BFC8
	0x0340BF68 LDR X8, [X22]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_Metadata(System.String value)

Disassembly:
	0x0340BF6C ADRP X21, 0xD23000
	0x0340BF70 ADRP X23, 0xD22000

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.Boolean get_Online()

Disassembly:
	0x0340BF74 LDR X21, [X21 + 0x208]
	0x0340BF78 LDR X23, [X23 + 0xDC0]

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Void set_Online(System.Boolean value)

Disassembly:
	0x0340BF7C MOV X0, X20
	0x0340BF80 MOV X1, X31
	0x0340BF84 STR X8, [X20 + 0x38]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+120], W8
	003 Return 

Method: System.String get_SteamId()

Disassembly:
	0x0340BF88 BL 0x3227578
	0x0340BF8C LDR X2, [X19 + 0x18]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void set_SteamId(System.String value)

Disassembly:
	0x0340BF90 LDR X1, [X21]
	0x0340BF94 LDR X3, [X22]

ISIL:
	001 Move [X0+128], X1
	002 Return 

Method: System.String get_Timezone()

Disassembly:
	0x0340BF98 MOV X4, X31
	0x0340BF9C BL 0x32277C4

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_Timezone(System.String value)

Disassembly:
	0x0340BFA0 LDR X2, [X19 + 0x20]
	0x0340BFA4 LDR X1, [X23]

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: System.String get_UpdateTime()

Disassembly:
	0x0340BFA8 LDR X3, [X22]
	0x0340BFAC MOV X4, X31

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Void set_UpdateTime(System.String value)

Disassembly:
	0x0340BFB0 BL 0x32277C4
	0x0340BFB4 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X0+144], X1
	002 Return 

Method: System.String get_Username()

Disassembly:
	0x0340BFB8 LDP X22, X21, [X31 + 0x20]
	0x0340BFBC LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Void set_Username(System.String value)

Disassembly:
	0x0340BFC0 ADD X31, X31, 0x40
	0x0340BFC4 RET

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0340BFC8 BL 0x1C16F28
	0x0340BFCC BL 0x1C16F44
	0x0340BFD0 MOV X1, X31
	0x0340BFD4 BL 0x1C16DEC
	0x0340BFD8 BL 0x1C16F20
	0x0340BFDC MOV X1, X31
	0x0340BFE0 B 0x33BDD8C
	0x0340BFE4 STR X30, [X31 - 0x20]!
	0x0340BFE8 STP X20, X19, [X31 + 0x10]
	0x0340BFEC ADRP X20, 0xFD2000
	0x0340BFF0 LDRB W8, [X20 + 0x560]
	0x0340BFF4 MOV X19, X0
	0x0340BFF8 TBNZ X8, 0x0, 0x340C01C
	0x0340BFFC ADRP X0, 0xD23000
	0x0340C000 LDR X0, [X0 + 0x210]
	0x0340C004 BL 0x1C16CF4
	0x0340C008 ADRP X0, 0xD22000
	0x0340C00C LDR X0, [X0 + 0x218]
	0x0340C010 BL 0x1C16CF4
	0x0340C014 MOVZ W8, 0x1
	0x0340C018 STRB W8, [X20 + 0x560]
	0x0340C01C LDR X19, [X19 + 0x10]
	0x0340C020 CBNZ X19, 0x340C04C
	0x0340C024 ADRP X8, 0xD22000
	0x0340C028 LDR X8, [X8 + 0x218]
	0x0340C02C LDR X0, [X8]
	0x0340C030 BL 0x1C16F10
	0x0340C034 ADRP X8, 0xD22000
	0x0340C038 LDR X8, [X8 + 0x210]
	0x0340C03C MOV W1, W31
	0x0340C040 MOV X19, X0
	0x0340C044 LDR X2, [X8]
	0x0340C048 BL 0x301B830
	0x0340C04C MOV X0, X19
	0x0340C050 LDP X20, X19, [X31 + 0x10]
	0x0340C054 LDR X30, [X31], #0x20
	0x0340C058 RET
	0x0340C05C LDR X0, [X0 + 0x10]
	0x0340C060 RET
	0x0340C064 STR X1, [X0 + 0x10]
	0x0340C068 RET
	0x0340C06C STP X30, X25, [X31 - 0x40]!
	0x0340C070 STP X24, X23, [X31 + 0x10]
	0x0340C074 STP X22, X21, [X31 + 0x20]
	0x0340C078 STP X20, X19, [X31 + 0x30]
	0x0340C07C ADRP X25, 0xFD1000
	0x0340C080 ADRP X23, 0xCE7000
	0x0340C084 ADRP X24, 0xD22000
	0x0340C088 ADRP X20, 0xCE7000
	0x0340C08C ADRP X21, 0xD22000
	0x0340C090 ADRP X22, 0xD21000
	0x0340C094 LDRB W8, [X25 + 0x561]
	0x0340C098 LDR X23, [X23 + 0x838]
	0x0340C09C LDR X24, [X24 + 0x220]
	0x0340C0A0 LDR X20, [X20 + 0x988]
	0x0340C0A4 LDR X21, [X21 + 0x228]
	0x0340C0A8 LDR X22, [X22 + 0xD50]
	0x0340C0AC MOV X19, X0
	0x0340C0B0 TBNZ X8, 0x0, 0x340C0F8
	0x0340C0B4 ADRP X0, 0xD22000
	0x0340C0B8 LDR X0, [X0 + 0x220]
	0x0340C0BC BL 0x1C16CF4
	0x0340C0C0 ADRP X0, 0xCE7000
	0x0340C0C4 LDR X0, [X0 + 0x838]
	0x0340C0C8 BL 0x1C16CF4
	0x0340C0CC ADRP X0, 0xD21000
	0x0340C0D0 LDR X0, [X0 + 0xD50]
	0x0340C0D4 BL 0x1C16CF4
	0x0340C0D8 ADRP X0, 0xCE7000
	0x0340C0DC LDR X0, [X0 + 0x988]
	0x0340C0E0 BL 0x1C16CF4
	0x0340C0E4 ADRP X0, 0xD22000
	0x0340C0E8 LDR X0, [X0 + 0x228]
	0x0340C0EC BL 0x1C16CF4
	0x0340C0F0 MOVZ W8, 0x1
	0x0340C0F4 STRB W8, [X25 + 0x561]
	0x0340C0F8 MOV X0, X19
	0x0340C0FC BL 0x340BFE4
	0x0340C100 LDR X8, [X23]
	0x0340C104 LDR X2, [X24]
	0x0340C108 MOV X1, X0
	0x0340C10C MOV X0, X8
	0x0340C110 BL 0x226B7E8
	0x0340C114 LDR X8, [X20]
	0x0340C118 LDR X1, [X21]
	0x0340C11C LDR X3, [X22]
	0x0340C120 LDP X20, X19, [X31 + 0x30]
	0x0340C124 LDP X22, X21, [X31 + 0x20]
	0x0340C128 LDP X24, X23, [X31 + 0x10]
	0x0340C12C MOV X2, X0
	0x0340C130 MOV X0, X8
	0x0340C134 MOV X4, X31
	0x0340C138 LDP X30, X25, [X31], #0x40
	0x0340C13C B 0x32277C4
	0x0340C140 MOV X1, X31
	0x0340C144 B 0x33BDD8C
	0x0340C148 LDRB W0, [X0 + 0x10]
	0x0340C14C RET
	0x0340C150 AND W8, W1, 0x1
	0x0340C154 STRB W8, [X0 + 0x10]
	0x0340C158 RET
	0x0340C15C LDR X0, [X0 + 0x18]
	0x0340C160 RET
	0x0340C164 STR X1, [X0 + 0x18]
	0x0340C168 RET
	0x0340C16C STR X30, [X31 - 0x30]!
	0x0340C170 STP X22, X21, [X31 + 0x10]
	0x0340C174 STP X20, X19, [X31 + 0x20]
	0x0340C178 ADRP X20, 0xFD1000
	0x0340C17C ADRP X21, 0xCE7000
	0x0340C180 ADRP X22, 0xCE7000
	0x0340C184 LDRB W8, [X20 + 0x562]
	0x0340C188 LDR X21, [X21 + 0x988]
	0x0340C18C LDR X22, [X22 + 0x9D0]
	0x0340C190 MOV X19, X0
	0x0340C194 TBNZ X8, 0x0, 0x340C1E8
	0x0340C198 ADRP X0, 0xCE7000
	0x0340C19C LDR X0, [X0 + 0xB58]
	0x0340C1A0 BL 0x1C16CF4
	0x0340C1A4 ADRP X0, 0xCE7000
	0x0340C1A8 LDR X0, [X0 + 0x9D0]
	0x0340C1AC BL 0x1C16CF4
	0x0340C1B0 ADRP X0, 0xD22000
	0x0340C1B4 LDR X0, [X0 + 0x1F0]
	0x0340C1B8 BL 0x1C16CF4
	0x0340C1BC ADRP X0, 0xCE7000
	0x0340C1C0 LDR X0, [X0 + 0x838]
	0x0340C1C4 BL 0x1C16CF4
	0x0340C1C8 ADRP X0, 0xD22000
	0x0340C1CC LDR X0, [X0 + 0x1F8]
	0x0340C1D0 BL 0x1C16CF4
	0x0340C1D4 ADRP X0, 0xCE7000
	0x0340C1D8 LDR X0, [X0 + 0x988]
	0x0340C1DC BL 0x1C16CF4
	0x0340C1E0 MOVZ W8, 0x1
	0x0340C1E4 STRB W8, [X20 + 0x562]
	0x0340C1E8 LDR X0, [X22]
	0x0340C1EC LDR X21, [X21]
	0x0340C1F0 MOVZ W1, 0x4
	0x0340C1F4 BL 0x1C16D6C
	0x0340C1F8 CBZ X0, 0x340C31C
	0x0340C1FC MOV X20, X0
	0x0340C200 CBZ X21, 0x340C218
	0x0340C204 LDR X8, [X20]
	0x0340C208 MOV X0, X21
	0x0340C20C LDR X1, [X8 + 0x40]
	0x0340C210 BL 0x1C16E00
	0x0340C214 CBZ X0, 0x340C310
	0x0340C218 LDR W8, [X20 + 0x18]
	0x0340C21C CBZ W8, 0x340C30C
	0x0340C220 ADRP X22, 0xD22000
	0x0340C224 LDR X22, [X22 + 0x1F8]
	0x0340C228 STR X21, [X20 + 0x20]
	0x0340C22C LDR X0, [X22]
	0x0340C230 CBZ X0, 0x340C248
	0x0340C234 LDR X8, [X20]
	0x0340C238 LDR X1, [X8 + 0x40]
	0x0340C23C BL 0x1C16E00
	0x0340C240 CBZ X0, 0x340C310
	0x0340C244 LDR W8, [X20 + 0x18]
	0x0340C248 CMP W8, 0x1
	0x0340C24C B.LS 0x340C30C
	0x0340C250 LDR X8, [X22]
	0x0340C254 ADRP X9, 0xCE7000
	0x0340C258 LDR X9, [X9 + 0xB58]
	0x0340C25C ADD X1, X31, 0xC
	0x0340C260 STR X8, [X20 + 0x28]
	0x0340C264 LDRB W8, [X19 + 0x10]
	0x0340C268 LDR X0, [X9]
	0x0340C26C STRB W8, [X31 + 0xC]
	0x0340C270 BL 0x1C16E04
	0x0340C274 MOV X21, X0
	0x0340C278 CBZ X0, 0x340C290
	0x0340C27C LDR X8, [X20]
	0x0340C280 MOV X0, X21
	0x0340C284 LDR X1, [X8 + 0x40]
	0x0340C288 BL 0x1C16E00
	0x0340C28C CBZ X0, 0x340C310
	0x0340C290 LDR W8, [X20 + 0x18]
	0x0340C294 CMP W8, 0x2
	0x0340C298 B.LS 0x340C30C
	0x0340C29C ADRP X22, 0xCE7000
	0x0340C2A0 LDR X22, [X22 + 0x838]
	0x0340C2A4 STR X21, [X20 + 0x30]
	0x0340C2A8 LDR X0, [X22]
	0x0340C2AC CBZ X0, 0x340C2C4
	0x0340C2B0 LDR X8, [X20]
	0x0340C2B4 LDR X1, [X8 + 0x40]
	0x0340C2B8 BL 0x1C16E00
	0x0340C2BC CBZ X0, 0x340C310
	0x0340C2C0 LDR W8, [X20 + 0x18]
	0x0340C2C4 CMP W8, 0x3
	0x0340C2C8 B.LS 0x340C30C
	0x0340C2CC LDR X8, [X22]
	0x0340C2D0 ADRP X21, 0xD22000
	0x0340C2D4 LDR X21, [X21 + 0x1F0]
	0x0340C2D8 MOV X0, X20
	0x0340C2DC MOV X1, X31
	0x0340C2E0 STR X8, [X20 + 0x38]
	0x0340C2E4 BL 0x3227578
	0x0340C2E8 LDR X2, [X19 + 0x18]
	0x0340C2EC LDR X1, [X21]
	0x0340C2F0 LDR X3, [X22]
	0x0340C2F4 MOV X4, X31
	0x0340C2F8 BL 0x32277C4
	0x0340C2FC LDP X20, X19, [X31 + 0x20]
	0x0340C300 LDP X22, X21, [X31 + 0x10]
	0x0340C304 LDR X30, [X31], #0x30
	0x0340C308 RET
	0x0340C30C BL 0x1C16F28
	0x0340C310 BL 0x1C16F44
	0x0340C314 MOV X1, X31
	0x0340C318 BL 0x1C16DEC
	0x0340C31C BL 0x1C16F20
	0x0340C320 MOV X1, X31
	0x0340C324 B 0x33BDD8C
	0x0340C328 LDRB W0, [X0 + 0x10]
	0x0340C32C RET
	0x0340C330 AND W8, W1, 0x1
	0x0340C334 STRB W8, [X0 + 0x10]
	0x0340C338 RET
	0x0340C33C LDR X0, [X0 + 0x18]
	0x0340C340 RET
	0x0340C344 STR X1, [X0 + 0x18]
	0x0340C348 RET
	0x0340C34C STR X30, [X31 - 0x30]!
	0x0340C350 STP X22, X21, [X31 + 0x10]
	0x0340C354 STP X20, X19, [X31 + 0x20]
	0x0340C358 ADRP X20, 0xFD1000
	0x0340C35C ADRP X21, 0xCE7000
	0x0340C360 ADRP X22, 0xCE7000
	0x0340C364 LDRB W8, [X20 + 0x563]
	0x0340C368 LDR X21, [X21 + 0x988]
	0x0340C36C LDR X22, [X22 + 0x9D0]
	0x0340C370 MOV X19, X0
	0x0340C374 TBNZ X8, 0x0, 0x340C3C8
	0x0340C378 ADRP X0, 0xCE7000
	0x0340C37C LDR X0, [X0 + 0xB58]
	0x0340C380 BL 0x1C16CF4
	0x0340C384 ADRP X0, 0xCE7000
	0x0340C388 LDR X0, [X0 + 0x9D0]
	0x0340C38C BL 0x1C16CF4
	0x0340C390 ADRP X0, 0xD22000
	0x0340C394 LDR X0, [X0 + 0x1F0]
	0x0340C398 BL 0x1C16CF4
	0x0340C39C ADRP X0, 0xCE7000
	0x0340C3A0 LDR X0, [X0 + 0x838]
	0x0340C3A4 BL 0x1C16CF4
	0x0340C3A8 ADRP X0, 0xD22000
	0x0340C3AC LDR X0, [X0 + 0x1F8]
	0x0340C3B0 BL 0x1C16CF4
	0x0340C3B4 ADRP X0, 0xCE7000
	0x0340C3B8 LDR X0, [X0 + 0x988]
	0x0340C3BC BL 0x1C16CF4
	0x0340C3C0 MOVZ W8, 0x1
	0x0340C3C4 STRB W8, [X20 + 0x563]
	0x0340C3C8 LDR X0, [X22]
	0x0340C3CC LDR X21, [X21]
	0x0340C3D0 MOVZ W1, 0x4
	0x0340C3D4 BL 0x1C16D6C
	0x0340C3D8 CBZ X0, 0x340C4FC
	0x0340C3DC MOV X20, X0
	0x0340C3E0 CBZ X21, 0x340C3F8
	0x0340C3E4 LDR X8, [X20]
	0x0340C3E8 MOV X0, X21
	0x0340C3EC LDR X1, [X8 + 0x40]
	0x0340C3F0 BL 0x1C16E00
	0x0340C3F4 CBZ X0, 0x340C4F0
	0x0340C3F8 LDR W8, [X20 + 0x18]
	0x0340C3FC CBZ W8, 0x340C4EC
	0x0340C400 ADRP X22, 0xD22000
	0x0340C404 LDR X22, [X22 + 0x1F8]
	0x0340C408 STR X21, [X20 + 0x20]
	0x0340C40C LDR X0, [X22]
	0x0340C410 CBZ X0, 0x340C428
	0x0340C414 LDR X8, [X20]
	0x0340C418 LDR X1, [X8 + 0x40]
	0x0340C41C BL 0x1C16E00
	0x0340C420 CBZ X0, 0x340C4F0
	0x0340C424 LDR W8, [X20 + 0x18]
	0x0340C428 CMP W8, 0x1
	0x0340C42C B.LS 0x340C4EC
	0x0340C430 LDR X8, [X22]
	0x0340C434 ADRP X9, 0xCE7000
	0x0340C438 LDR X9, [X9 + 0xB58]
	0x0340C43C ADD X1, X31, 0xC
	0x0340C440 STR X8, [X20 + 0x28]
	0x0340C444 LDRB W8, [X19 + 0x10]
	0x0340C448 LDR X0, [X9]
	0x0340C44C STRB W8, [X31 + 0xC]
	0x0340C450 BL 0x1C16E04
	0x0340C454 MOV X21, X0
	0x0340C458 CBZ X0, 0x340C470
	0x0340C45C LDR X8, [X20]
	0x0340C460 MOV X0, X21
	0x0340C464 LDR X1, [X8 + 0x40]
	0x0340C468 BL 0x1C16E00
	0x0340C46C CBZ X0, 0x340C4F0
	0x0340C470 LDR W8, [X20 + 0x18]
	0x0340C474 CMP W8, 0x2
	0x0340C478 B.LS 0x340C4EC
	0x0340C47C ADRP X22, 0xCE7000
	0x0340C480 LDR X22, [X22 + 0x838]
	0x0340C484 STR X21, [X20 + 0x30]
	0x0340C488 LDR X0, [X22]
	0x0340C48C CBZ X0, 0x340C4A4
	0x0340C490 LDR X8, [X20]
	0x0340C494 LDR X1, [X8 + 0x40]
	0x0340C498 BL 0x1C16E00
	0x0340C49C CBZ X0, 0x340C4F0
	0x0340C4A0 LDR W8, [X20 + 0x18]
	0x0340C4A4 CMP W8, 0x3
	0x0340C4A8 B.LS 0x340C4EC
	0x0340C4AC LDR X8, [X22]
	0x0340C4B0 ADRP X21, 0xD22000
	0x0340C4B4 LDR X21, [X21 + 0x1F0]
	0x0340C4B8 MOV X0, X20
	0x0340C4BC MOV X1, X31
	0x0340C4C0 STR X8, [X20 + 0x38]
	0x0340C4C4 BL 0x3227578
	0x0340C4C8 LDR X2, [X19 + 0x18]
	0x0340C4CC LDR X1, [X21]
	0x0340C4D0 LDR X3, [X22]
	0x0340C4D4 MOV X4, X31
	0x0340C4D8 BL 0x32277C4
	0x0340C4DC LDP X20, X19, [X31 + 0x20]
	0x0340C4E0 LDP X22, X21, [X31 + 0x10]
	0x0340C4E4 LDR X30, [X31], #0x30
	0x0340C4E8 RET
	0x0340C4EC BL 0x1C16F28
	0x0340C4F0 BL 0x1C16F44
	0x0340C4F4 MOV X1, X31
	0x0340C4F8 BL 0x1C16DEC
	0x0340C4FC BL 0x1C16F20
	0x0340C500 MOV X1, X31
	0x0340C504 B 0x33BDD8C
	0x0340C508 LDR X0, [X0 + 0x10]
	0x0340C50C RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X26, 0xFD3000
	015 Move X27, 0xCE9000
	016 Move X25, 0xD24000
	017 Move X22, 0xCE9000
	018 Move X24, 0xD23000
	019 Move X21, 0xD23000
	020 Move X20, 0xD24000
	021 Move X23, 0xCE8000
	022 Move X27, [X27+2440]
	023 Move X25, [X25+376]
	024 Move W8, [X26+1367]
	025 Move X22, [X22+2104]
	026 Move X24, [X24+3272]
	027 Move X21, [X21+3552]
	028 Move X20, [X20+352]
	029 Move X23, [X23+2512]
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {106}
	035 Move X0, 0xCE8000
	036 Move X0, [X0+2904]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE8000
	039 Move X0, [X0+1880]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE8000
	042 Move X0, [X0+2512]
	043 Call 0x1C17CF4
	044 Move X0, 0xD23000
	045 Move X0, [X0+360]
	046 Call 0x1C17CF4
	047 Move X0, 0xD23000
	048 Move X0, [X0+384]
	049 Call 0x1C17CF4
	050 Move X0, 0xD22000
	051 Move X0, [X0+3464]
	052 Call 0x1C17CF4
	053 Move X0, 0xD23000
	054 Move X0, [X0+368]
	055 Call 0x1C17CF4
	056 Move X0, 0xD22000
	057 Move X0, [X0+3288]
	058 Call 0x1C17CF4
	059 Move X0, 0xD23000
	060 Move X0, [X0+392]
	061 Call 0x1C17CF4
	062 Move X0, 0xD23000
	063 Move X0, [X0+400]
	064 Call 0x1C17CF4
	065 Move X0, 0xD22000
	066 Move X0, [X0+3552]
	067 Call 0x1C17CF4
	068 Move X0, 0xCE8000
	069 Move X0, [X0+2104]
	070 Call 0x1C17CF4
	071 Move X0, 0xD22000
	072 Move X0, [X0+3328]
	073 Call 0x1C17CF4
	074 Move X0, 0xD22000
	075 Move X0, [X0+3560]
	076 Call 0x1C17CF4
	077 Move X0, 0xD23000
	078 Move X0, [X0+376]
	079 Call 0x1C17CF4
	080 Move X0, 0xD23000
	081 Move X0, [X0+408]
	082 Call 0x1C17CF4
	083 Move X0, 0xD22000
	084 Move X0, [X0+3272]
	085 Call 0x1C17CF4
	086 Move X0, 0xD23000
	087 Move X0, [X0+416]
	088 Call 0x1C17CF4
	089 Move X0, 0xD23000
	090 Move X0, [X0+352]
	091 Call 0x1C17CF4
	092 Move X0, 0xCE8000
	093 Move X0, [X0+2440]
	094 Call 0x1C17CF4
	095 Move X0, 0xD22000
	096 Move X0, [X0+3832]
	097 Call 0x1C17CF4
	098 Move X0, 0xD23000
	099 Move X0, [X0+424]
	100 Call 0x1C17CF4
	101 Move X0, 0xD22000
	102 Move X0, [X0+3632]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X26+1367], W8
	106 Move X0, [X27]
	107 Move X2, [X19+16]
	108 Move X1, [X25]
	109 Move X3, [X22]
	110 Move X4, X31
	111 Call String.Concat, X0, X1, X2, X3
	112 Move X2, [X19+24]
	113 Move X1, [X24]
	114 Move X3, [X22]
	115 Move X4, X31
	116 Call String.Concat, X0, X1, X2, X3
	117 Move X2, [X19+32]
	118 Move X1, [X21]
	119 Move X3, [X22]
	120 Move X4, X31
	121 Call String.Concat, X0, X1, X2, X3
	122 Move X2, [X19+40]
	123 Move X1, [X20]
	124 Move X3, [X22]
	125 Move X4, X31
	126 Call String.Concat, X0, X1, X2, X3
	127 Move X8, [X23]
	128 Move X21, X0
	129 Move W1, 4
	130 Move X0, X8
	131 Call 0x1C17D6C
	132 Compare X0, 0
	133 JumpIfEqual {367}
	134 Move X20, X0
	135 Compare X21, 0
	136 JumpIfEqual {143}
	137 Move X8, [X20]
	138 Move X0, X21
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {364}
	143 Move W8, [X20+24]
	144 Compare W8, 0
	145 JumpIfEqual {363}
	146 Move X24, 0xD22000
	147 Move X24, [X24+3832]
	148 Move [X20+32], X21
	149 Move X0, [X24]
	150 Compare X0, 0
	151 JumpIfEqual {158}
	152 Move X8, [X20]
	153 Move X1, [X8+64]
	154 Call 0x1C17E00
	155 Compare X0, 0
	156 JumpIfEqual {364}
	157 Move W8, [X20+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, [X24]
	160 Move X9, 0xCE8000
	161 Move X9, [X9+1880]
	162 Add X1, X31, 12
	163 Move [X20+40], X8
	164 Move W8, [X19+48]
	165 Move X0, [X9]
	166 Move [X31+12], W8
	167 Call 0x1C17E04
	168 Move X21, X0
	169 Compare X0, 0
	170 JumpIfEqual {177}
	171 Move X8, [X20]
	172 Move X0, X21
	173 Move X1, [X8+64]
	174 Call 0x1C17E00
	175 Compare X0, 0
	176 JumpIfEqual {364}
	177 Move W8, [X20+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X20+48], X21
	180 Move X0, [X22]
	181 Compare X0, 0
	182 JumpIfEqual {189}
	183 Move X8, [X20]
	184 Move X1, [X8+64]
	185 Call 0x1C17E00
	186 Compare X0, 0
	187 JumpIfEqual {364}
	188 Move W8, [X20+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X26, 0xD23000
	191 Move X27, 0xD23000
	192 Move X28, 0xD23000
	193 Move X29, 0xD23000
	194 Move X23, 0xD22000
	195 Move X26, [X26+416]
	196 Move X27, [X27+424]
	197 Move X28, [X28+384]
	198 Move X29, [X29+408]
	199 Move X23, [X23+3464]
	200 Move X8, [X22]
	201 Move X25, 0xD22000
	202 Move X24, 0xD23000
	203 Move X21, 0xD22000
	204 Move X25, [X25+3288]
	205 Move X24, [X24+360]
	206 Move X21, [X21+3328]
	207 Move X0, X20
	208 Move X1, X31
	209 Move [X20+56], X8
	210 Call String.Concat, X0
	211 Move X2, [X19+56]
	212 Move X1, [X26]
	213 Move X3, [X22]
	214 Move X4, X31
	215 Call String.Concat, X0, X1, X2, X3
	216 Move X2, [X19+64]
	217 Move X1, [X27]
	218 Move X3, [X22]
	219 Move X4, X31
	220 Call String.Concat, X0, X1, X2, X3
	221 Move X2, [X19+72]
	222 Move X1, [X28]
	223 Move X3, [X22]
	224 Move X4, X31
	225 Call String.Concat, X0, X1, X2, X3
	226 Move X2, [X19+80]
	227 Move X1, [X29]
	228 Move X3, [X22]
	229 Move X4, X31
	230 Call String.Concat, X0, X1, X2, X3
	231 Move X2, [X19+88]
	232 Move X1, [X23]
	233 Move X3, [X22]
	234 Move X4, X31
	235 Call String.Concat, X0, X1, X2, X3
	236 Move X2, [X19+96]
	237 Move X1, [X25]
	238 Move X3, [X22]
	239 Move X4, X31
	240 Call String.Concat, X0, X1, X2, X3
	241 Move X2, [X19+104]
	242 Move X1, [X24]
	243 Move X3, [X22]
	244 Move X4, X31
	245 Call String.Concat, X0, X1, X2, X3
	246 Move X2, [X19+112]
	247 Move X1, [X21]
	248 Move X3, [X22]
	249 Move X4, X31
	250 Call String.Concat, X0, X1, X2, X3
	251 Move X8, 0xCE8000
	252 Move X8, [X8+2512]
	253 Move X21, X0
	254 Move W1, 4
	255 Move X8, [X8]
	256 Move X0, X8
	257 Call 0x1C17D6C
	258 Compare X0, 0
	259 JumpIfEqual {367}
	260 Move X20, X0
	261 Compare X21, 0
	262 JumpIfEqual {269}
	263 Move X8, [X20]
	264 Move X0, X21
	265 Move X1, [X8+64]
	266 Call 0x1C17E00
	267 Compare X0, 0
	268 JumpIfEqual {364}
	269 Move W8, [X20+24]
	270 Compare W8, 0
	271 JumpIfEqual {363}
	272 Move X23, 0xD23000
	273 Move X23, [X23+400]
	274 Move [X20+32], X21
	275 Move X0, [X23]
	276 Compare X0, 0
	277 JumpIfEqual {284}
	278 Move X8, [X20]
	279 Move X1, [X8+64]
	280 Call 0x1C17E00
	281 Compare X0, 0
	282 JumpIfEqual {364}
	283 Move W8, [X20+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X8, [X23]
	286 Move X9, 0xCE8000
	287 Move X9, [X9+2904]
	288 Add X1, X31, 8
	289 Move [X20+40], X8
	290 Move W8, [X19+120]
	291 Move X0, [X9]
	292 Move [X31+8], W8
	293 Call 0x1C17E04
	294 Move X21, X0
	295 Compare X0, 0
	296 JumpIfEqual {303}
	297 Move X8, [X20]
	298 Move X0, X21
	299 Move X1, [X8+64]
	300 Call 0x1C17E00
	301 Compare X0, 0
	302 JumpIfEqual {364}
	303 Move W8, [X20+24]
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move [X20+48], X21
	306 Move X0, [X22]
	307 Compare X0, 0
	308 JumpIfEqual {315}
	309 Move X8, [X20]
	310 Move X1, [X8+64]
	311 Call 0x1C17E00
	312 Compare X0, 0
	313 JumpIfEqual {364}
	314 Move W8, [X20+24]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X21, 0xD23000
	317 Move X21, [X21+392]
	318 Move X8, [X22]
	319 Move X23, 0xD23000
	320 Move X24, 0xD22000
	321 Move X25, 0xD22000
	322 Move X23, [X23+368]
	323 Move X24, [X24+3560]
	324 Move X25, [X25+3632]
	325 Move X0, X20
	326 Move X1, X31
	327 Move [X20+56], X8
	328 Call String.Concat, X0
	329 Move X2, [X19+128]
	330 Move X1, [X21]
	331 Move X3, [X22]
	332 Move X4, X31
	333 Call String.Concat, X0, X1, X2, X3
	334 Move X2, [X19+136]
	335 Move X1, [X23]
	336 Move X3, [X22]
	337 Move X4, X31
	338 Call String.Concat, X0, X1, X2, X3
	339 Move X2, [X19+144]
	340 Move X1, [X24]
	341 Move X3, [X22]
	342 Move X4, X31
	343 Call String.Concat, X0, X1, X2, X3
	344 Move X2, [X19+152]
	345 Move X1, [X25]
	346 Move X3, [X22]
	347 Move X4, X31
	348 Call String.Concat, X0, X1, X2, X3
	349 Move X20, [X31+96]
	350 Move X19, [X31+104]
	351 Move X22, [X31+80]
	352 Move X21, [X31+88]
	353 Move X24, [X31+64]
	354 Move X23, [X31+72]
	355 Move X26, [X31+48]
	356 Move X25, [X31+56]
	357 Move X28, [X31+32]
	358 Move X27, [X31+40]
	359 Move X29, [X31+16]
	360 Move X30, [X31+24]
	361 Add X31, X31, 112
	362 Return X0
	363 Call 0x1C17F28
	364 Call 0x1C17F44
	365 Move X1, X31
	366 Call 0x1C17DEC
	367 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0340C510 LDR X0, [X0 + 0x10]
	0x0340C514 RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

