Type: Nakama.ApiGroup

Method: System.String get_AvatarUrl()

Disassembly:
	0x03406EF0 BL 0x1C16CF4
	0x03406EF4 ADRP X0, 0xD27000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_AvatarUrl(System.String value)

Disassembly:
	0x03406EF8 LDR X0, [X0 + 0xF90]
	0x03406EFC BL 0x1C16CF4

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_CreateTime()

Disassembly:
	0x03406F00 ADRP X0, 0xCED000
	0x03406F04 LDR X0, [X0 + 0x838]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x03406F08 BL 0x1C16CF4
	0x03406F0C ADRP X0, 0xD27000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_CreatorId()

Disassembly:
	0x03406F10 LDR X0, [X0 + 0xE68]
	0x03406F14 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_CreatorId(System.String value)

Disassembly:
	0x03406F18 ADRP X0, 0xD27000
	0x03406F1C LDR X0, [X0 + 0xE60]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Description()

Disassembly:
	0x03406F20 BL 0x1C16CF4
	0x03406F24 ADRP X0, 0xD27000

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Description(System.String value)

Disassembly:
	0x03406F28 LDR X0, [X0 + 0xD50]
	0x03406F2C BL 0x1C16CF4

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Int32 get_EdgeCount()

Disassembly:
	0x03406F30 ADRP X0, 0xCED000
	0x03406F34 LDR X0, [X0 + 0x988]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_EdgeCount(System.Int32 value)

Disassembly:
	0x03406F38 BL 0x1C16CF4
	0x03406F3C MOVZ W8, 0x1

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.String get_Id()

Disassembly:
	0x03406F40 STRB W8, [X29 + 0x535]
	0x03406F44 LDR X2, [X19 + 0x10]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x03406F48 LDR X0, [X20]
	0x03406F4C LDR X1, [X28]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String get_LangTag()

Disassembly:
	0x03406F50 LDR X3, [X23]
	0x03406F54 MOV X4, X31

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_LangTag(System.String value)

Disassembly:
	0x03406F58 BL 0x32277C4
	0x03406F5C MOV X20, X0

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Int32 get_MaxCount()

Disassembly:
	0x03406F60 MOV X0, X19
	0x03406F64 BL 0x3406D30

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_MaxCount(System.Int32 value)

Disassembly:
	0x03406F68 LDR X8, [X23]
	0x03406F6C LDR X2, [X24]

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.String get_Metadata()

Disassembly:
	0x03406F70 MOV X1, X0
	0x03406F74 MOV X0, X8

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_Metadata(System.String value)

Disassembly:
	0x03406F78 BL 0x226B7E8
	0x03406F7C LDR X1, [X27]

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_Name()

Disassembly:
	0x03406F80 LDR X3, [X21]
	0x03406F84 MOV X2, X0

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x03406F88 MOV X0, X20
	0x03406F8C MOV X4, X31

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.Boolean get_Open()

Disassembly:
	0x03406F90 BL 0x32277C4
	0x03406F94 LDR X2, [X19 + 0x20]

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_Open(System.Boolean value)

Disassembly:
	0x03406F98 LDR X1, [X26]
	0x03406F9C LDR X3, [X23]
	0x03406FA0 MOV X4, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+96], W8
	003 Return 

Method: System.String get_UpdateTime()

Disassembly:
	0x03406FA4 BL 0x32277C4
	0x03406FA8 LDR X2, [X19 + 0x28]

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_UpdateTime(System.String value)

Disassembly:
	0x03406FAC LDR X1, [X25]
	0x03406FB0 LDR X3, [X23]

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03406FB4 MOV X4, X31
	0x03406FB8 BL 0x32277C4
	0x03406FBC MOV X20, X0
	0x03406FC0 MOV X0, X19
	0x03406FC4 BL 0x3406DD8
	0x03406FC8 LDR X8, [X23]
	0x03406FCC LDR X2, [X24]
	0x03406FD0 MOV X1, X0
	0x03406FD4 MOV X0, X8
	0x03406FD8 BL 0x226B7E8
	0x03406FDC LDR X1, [X22]
	0x03406FE0 LDR X3, [X21]
	0x03406FE4 MOV X2, X0
	0x03406FE8 MOV X0, X20
	0x03406FEC LDP X20, X19, [X31 + 0x50]
	0x03406FF0 LDP X22, X21, [X31 + 0x40]
	0x03406FF4 LDP X24, X23, [X31 + 0x30]
	0x03406FF8 LDP X26, X25, [X31 + 0x20]
	0x03406FFC LDP X28, X27, [X31 + 0x10]
	0x03407000 MOV X4, X31
	0x03407004 LDP X29, X30, [X31], #0x60
	0x03407008 B 0x32277C4
	0x0340700C MOV X1, X31
	0x03407010 B 0x33BDD8C
	0x03407014 LDR X0, [X0 + 0x10]
	0x03407018 RET
	0x0340701C LDR X0, [X0 + 0x10]
	0x03407020 RET
	0x03407024 STR X1, [X0 + 0x10]
	0x03407028 RET
	0x0340702C LDRB W0, [X0 + 0x18]
	0x03407030 RET
	0x03407034 AND W8, W1, 0x1
	0x03407038 STRB W8, [X0 + 0x18]
	0x0340703C RET
	0x03407040 SUB X31, X31, 0x40
	0x03407044 STP X30, X23, [X31 + 0x10]
	0x03407048 STP X22, X21, [X31 + 0x20]
	0x0340704C STP X20, X19, [X31 + 0x30]
	0x03407050 ADRP X20, 0xFD6000
	0x03407054 ADRP X21, 0xCEC000
	0x03407058 ADRP X22, 0xCEC000
	0x0340705C LDRB W8, [X20 + 0x536]
	0x03407060 LDR X21, [X21 + 0x988]
	0x03407064 LDR X22, [X22 + 0x9D0]
	0x03407068 MOV X19, X0
	0x0340706C TBNZ X8, 0x0, 0x34070C0
	0x03407070 ADRP X0, 0xCEC000
	0x03407074 LDR X0, [X0 + 0xB58]
	0x03407078 BL 0x1C16CF4
	0x0340707C ADRP X0, 0xCEC000
	0x03407080 LDR X0, [X0 + 0x9D0]
	0x03407084 BL 0x1C16CF4
	0x03407088 ADRP X0, 0xCEC000
	0x0340708C LDR X0, [X0 + 0x838]
	0x03407090 BL 0x1C16CF4
	0x03407094 ADRP X0, 0xD26000
	0x03407098 LDR X0, [X0 + 0xFA0]
	0x0340709C BL 0x1C16CF4
	0x034070A0 ADRP X0, 0xCEC000
	0x034070A4 LDR X0, [X0 + 0x988]
	0x034070A8 BL 0x1C16CF4
	0x034070AC ADRP X0, 0xD26000
	0x034070B0 LDR X0, [X0 + 0xFA8]
	0x034070B4 BL 0x1C16CF4
	0x034070B8 MOVZ W8, 0x1
	0x034070BC STRB W8, [X20 + 0x536]
	0x034070C0 LDR X0, [X22]
	0x034070C4 LDR X21, [X21]
	0x034070C8 MOVZ W1, 0x4
	0x034070CC BL 0x1C16D6C
	0x034070D0 CBZ X0, 0x34072B4
	0x034070D4 MOV X20, X0
	0x034070D8 CBZ X21, 0x34070F0
	0x034070DC LDR X8, [X20]
	0x034070E0 MOV X0, X21
	0x034070E4 LDR X1, [X8 + 0x40]
	0x034070E8 BL 0x1C16E00
	0x034070EC CBZ X0, 0x34072A8
	0x034070F0 LDR W8, [X20 + 0x18]
	0x034070F4 CBZ W8, 0x34072A4
	0x034070F8 ADRP X23, 0xD26000
	0x034070FC LDR X23, [X23 + 0xFA0]
	0x03407100 STR X21, [X20 + 0x20]
	0x03407104 LDR X0, [X23]
	0x03407108 CBZ X0, 0x3407120
	0x0340710C LDR X8, [X20]
	0x03407110 LDR X1, [X8 + 0x40]
	0x03407114 BL 0x1C16E00
	0x03407118 CBZ X0, 0x34072A8
	0x0340711C LDR W8, [X20 + 0x18]
	0x03407120 CMP W8, 0x1
	0x03407124 B.LS 0x34072A4
	0x03407128 LDR X9, [X23]
	0x0340712C STR X9, [X20 + 0x28]
	0x03407130 LDR X21, [X19 + 0x10]
	0x03407134 CBZ X21, 0x3407150
	0x03407138 LDR X8, [X20]
	0x0340713C MOV X0, X21
	0x03407140 LDR X1, [X8 + 0x40]
	0x03407144 BL 0x1C16E00
	0x03407148 CBZ X0, 0x34072A8
	0x0340714C LDR W8, [X20 + 0x18]
	0x03407150 CMP W8, 0x2
	0x03407154 B.LS 0x34072A4
	0x03407158 ADRP X23, 0xCEC000
	0x0340715C LDR X23, [X23 + 0x838]
	0x03407160 STR X21, [X20 + 0x30]
	0x03407164 LDR X0, [X23]
	0x03407168 CBZ X0, 0x3407180
	0x0340716C LDR X8, [X20]
	0x03407170 LDR X1, [X8 + 0x40]
	0x03407174 BL 0x1C16E00
	0x03407178 CBZ X0, 0x34072A8
	0x0340717C LDR W8, [X20 + 0x18]
	0x03407180 CMP W8, 0x3
	0x03407184 B.LS 0x34072A4
	0x03407188 LDR X8, [X23]
	0x0340718C MOV X0, X20
	0x03407190 MOV X1, X31
	0x03407194 STR X8, [X20 + 0x38]
	0x03407198 BL 0x3227578
	0x0340719C LDR X8, [X22]
	0x034071A0 MOV X21, X0
	0x034071A4 MOVZ W1, 0x4
	0x034071A8 MOV X0, X8
	0x034071AC BL 0x1C16D6C
	0x034071B0 CBZ X0, 0x34072B4
	0x034071B4 MOV X20, X0
	0x034071B8 CBZ X21, 0x34071D0
	0x034071BC LDR X8, [X20]
	0x034071C0 MOV X0, X21
	0x034071C4 LDR X1, [X8 + 0x40]
	0x034071C8 BL 0x1C16E00
	0x034071CC CBZ X0, 0x34072A8
	0x034071D0 LDR W8, [X20 + 0x18]
	0x034071D4 CBZ W8, 0x34072A4
	0x034071D8 ADRP X22, 0xD26000
	0x034071DC LDR X22, [X22 + 0xFA8]
	0x034071E0 STR X21, [X20 + 0x20]
	0x034071E4 LDR X0, [X22]
	0x034071E8 CBZ X0, 0x3407200
	0x034071EC LDR X8, [X20]
	0x034071F0 LDR X1, [X8 + 0x40]
	0x034071F4 BL 0x1C16E00
	0x034071F8 CBZ X0, 0x34072A8
	0x034071FC LDR W8, [X20 + 0x18]
	0x03407200 CMP W8, 0x1
	0x03407204 B.LS 0x34072A4
	0x03407208 LDR X8, [X22]
	0x0340720C ADRP X9, 0xCEC000
	0x03407210 LDR X9, [X9 + 0xB58]
	0x03407214 ADD X1, X31, 0xC
	0x03407218 STR X8, [X20 + 0x28]
	0x0340721C LDRB W8, [X19 + 0x18]
	0x03407220 LDR X0, [X9]
	0x03407224 STRB W8, [X31 + 0xC]
	0x03407228 BL 0x1C16E04
	0x0340722C MOV X19, X0
	0x03407230 CBZ X0, 0x3407248
	0x03407234 LDR X8, [X20]
	0x03407238 MOV X0, X19
	0x0340723C LDR X1, [X8 + 0x40]
	0x03407240 BL 0x1C16E00
	0x03407244 CBZ X0, 0x34072A8
	0x03407248 LDR W8, [X20 + 0x18]
	0x0340724C CMP W8, 0x2
	0x03407250 B.LS 0x34072A4
	0x03407254 STR X19, [X20 + 0x30]
	0x03407258 LDR X0, [X23]
	0x0340725C CBZ X0, 0x3407274
	0x03407260 LDR X8, [X20]
	0x03407264 LDR X1, [X8 + 0x40]
	0x03407268 BL 0x1C16E00
	0x0340726C CBZ X0, 0x34072A8
	0x03407270 LDR W8, [X20 + 0x18]
	0x03407274 CMP W8, 0x3
	0x03407278 B.LS 0x34072A4
	0x0340727C LDR X8, [X23]
	0x03407280 MOV X0, X20
	0x03407284 MOV X1, X31
	0x03407288 STR X8, [X20 + 0x38]
	0x0340728C BL 0x3227578
	0x03407290 LDP X20, X19, [X31 + 0x30]
	0x03407294 LDP X22, X21, [X31 + 0x20]
	0x03407298 LDP X30, X23, [X31 + 0x10]
	0x0340729C ADD X31, X31, 0x40
	0x034072A0 RET
	0x034072A4 BL 0x1C16F28
	0x034072A8 BL 0x1C16F44
	0x034072AC MOV X1, X31
	0x034072B0 BL 0x1C16DEC
	0x034072B4 BL 0x1C16F20
	0x034072B8 MOV X1, X31
	0x034072BC B 0x33BDD8C
	0x034072C0 LDR X0, [X0 + 0x10]
	0x034072C4 RET
	0x034072C8 STR X1, [X0 + 0x10]
	0x034072CC RET
	0x034072D0 LDR W0, [X0 + 0x18]
	0x034072D4 RET
	0x034072D8 STR W1, [X0 + 0x18]
	0x034072DC RET
	0x034072E0 STR X30, [X31 - 0x40]!
	0x034072E4 STP X24, X23, [X31 + 0x10]
	0x034072E8 STP X22, X21, [X31 + 0x20]
	0x034072EC STP X20, X19, [X31 + 0x30]
	0x034072F0 ADRP X23, 0xFD6000
	0x034072F4 ADRP X24, 0xCEC000
	0x034072F8 ADRP X21, 0xD26000
	0x034072FC ADRP X22, 0xCEC000
	0x03407300 ADRP X19, 0xCEC000
	0x03407304 LDRB W8, [X23 + 0x537]
	0x03407308 LDR X24, [X24 + 0x988]
	0x0340730C LDR X21, [X21 + 0xED8]
	0x03407310 LDR X22, [X22 + 0x838]
	0x03407314 LDR X19, [X19 + 0x9D0]
	0x03407318 MOV X20, X0
	0x0340731C TBNZ X8, 0x0, 0x3407370
	0x03407320 ADRP X0, 0xCEC000
	0x03407324 LDR X0, [X0 + 0x758]
	0x03407328 BL 0x1C16CF4
	0x0340732C ADRP X0, 0xCEC000
	0x03407330 LDR X0, [X0 + 0x9D0]
	0x03407334 BL 0x1C16CF4
	0x03407338 ADRP X0, 0xCEC000
	0x0340733C LDR X0, [X0 + 0x838]
	0x03407340 BL 0x1C16CF4
	0x03407344 ADRP X0, 0xD26000
	0x03407348 LDR X0, [X0 + 0xFB0]
	0x0340734C BL 0x1C16CF4
	0x03407350 ADRP X0, 0xD26000
	0x03407354 LDR X0, [X0 + 0xED8]
	0x03407358 BL 0x1C16CF4
	0x0340735C ADRP X0, 0xCEC000
	0x03407360 LDR X0, [X0 + 0x988]
	0x03407364 BL 0x1C16CF4
	0x03407368 MOVZ W8, 0x1
	0x0340736C STRB W8, [X23 + 0x537]
	0x03407370 LDR X0, [X24]
	0x03407374 LDR X2, [X20 + 0x10]
	0x03407378 LDR X1, [X21]
	0x0340737C LDR X3, [X22]
	0x03407380 MOV X4, X31
	0x03407384 BL 0x32277C4
	0x03407388 LDR X8, [X19]
	0x0340738C MOV X21, X0
	0x03407390 MOVZ W1, 0x4
	0x03407394 MOV X0, X8
	0x03407398 BL 0x1C16D6C
	0x0340739C CBZ X0, 0x34074A0
	0x034073A0 MOV X19, X0
	0x034073A4 CBZ X21, 0x34073BC
	0x034073A8 LDR X8, [X19]
	0x034073AC MOV X0, X21
	0x034073B0 LDR X1, [X8 + 0x40]
	0x034073B4 BL 0x1C16E00
	0x034073B8 CBZ X0, 0x3407494
	0x034073BC LDR W8, [X19 + 0x18]
	0x034073C0 CBZ W8, 0x3407490
	0x034073C4 ADRP X23, 0xD26000
	0x034073C8 LDR X23, [X23 + 0xFB0]
	0x034073CC STR X21, [X19 + 0x20]
	0x034073D0 LDR X0, [X23]
	0x034073D4 CBZ X0, 0x34073EC
	0x034073D8 LDR X8, [X19]
	0x034073DC LDR X1, [X8 + 0x40]
	0x034073E0 BL 0x1C16E00
	0x034073E4 CBZ X0, 0x3407494
	0x034073E8 LDR W8, [X19 + 0x18]
	0x034073EC CMP W8, 0x1
	0x034073F0 B.LS 0x3407490
	0x034073F4 LDR X8, [X23]
	0x034073F8 ADRP X9, 0xCEC000
	0x034073FC LDR X9, [X9 + 0x758]
	0x03407400 ADD X1, X31, 0xC
	0x03407404 STR X8, [X19 + 0x28]
	0x03407408 LDR W8, [X20 + 0x18]
	0x0340740C LDR X0, [X9]
	0x03407410 STR W8, [X31 + 0xC]
	0x03407414 BL 0x1C16E04
	0x03407418 MOV X20, X0
	0x0340741C CBZ X0, 0x3407434
	0x03407420 LDR X8, [X19]
	0x03407424 MOV X0, X20
	0x03407428 LDR X1, [X8 + 0x40]
	0x0340742C BL 0x1C16E00
	0x03407430 CBZ X0, 0x3407494
	0x03407434 LDR W8, [X19 + 0x18]
	0x03407438 CMP W8, 0x2
	0x0340743C B.LS 0x3407490
	0x03407440 STR X20, [X19 + 0x30]
	0x03407444 LDR X0, [X22]
	0x03407448 CBZ X0, 0x3407460
	0x0340744C LDR X8, [X19]
	0x03407450 LDR X1, [X8 + 0x40]
	0x03407454 BL 0x1C16E00
	0x03407458 CBZ X0, 0x3407494
	0x0340745C LDR W8, [X19 + 0x18]
	0x03407460 CMP W8, 0x3
	0x03407464 B.LS 0x3407490
	0x03407468 LDR X8, [X22]
	0x0340746C MOV X0, X19
	0x03407470 MOV X1, X31
	0x03407474 STR X8, [X19 + 0x38]
	0x03407478 BL 0x3227578
	0x0340747C LDP X20, X19, [X31 + 0x30]
	0x03407480 LDP X22, X21, [X31 + 0x20]
	0x03407484 LDP X24, X23, [X31 + 0x10]
	0x03407488 LDR X30, [X31], #0x40
	0x0340748C RET
	0x03407490 BL 0x1C16F28
	0x03407494 BL 0x1C16F44
	0x03407498 MOV X1, X31
	0x0340749C BL 0x1C16DEC
	0x034074A0 BL 0x1C16F20
	0x034074A4 MOV X1, X31
	0x034074A8 B 0x33BDD8C
	0x034074AC LDRB W0, [X0 + 0x10]
	0x034074B0 RET
	0x034074B4 AND W8, W1, 0x1
	0x034074B8 STRB W8, [X0 + 0x10]
	0x034074BC RET
	0x034074C0 LDR X0, [X0 + 0x18]
	0x034074C4 RET
	0x034074C8 STR X1, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0xFD8000
	013 Move X27, 0xCEE000
	014 Move X25, 0xD28000
	015 Move X22, 0xCEE000
	016 Move X24, 0xD28000
	017 Move X21, 0xD28000
	018 Move X20, 0xD28000
	019 Move X23, 0xCEE000
	020 Move X27, [X27+2440]
	021 Move X25, [X25+3272]
	022 Move W8, [X26+1325]
	023 Move X22, [X22+2104]
	024 Move X24, [X24+3552]
	025 Move X21, [X21+3824]
	026 Move X20, [X20+3280]
	027 Move X23, [X23+2512]
	028 Move X19, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {86}
	033 Move X0, 0xCED000
	034 Move X0, [X0+2904]
	035 Call 0x1C17CF4
	036 Move X0, 0xCED000
	037 Move X0, [X0+1880]
	038 Call 0x1C17CF4
	039 Move X0, 0xCED000
	040 Move X0, [X0+2512]
	041 Call 0x1C17CF4
	042 Move X0, 0xD27000
	043 Move X0, [X0+3464]
	044 Call 0x1C17CF4
	045 Move X0, 0xD27000
	046 Move X0, [X0+3824]
	047 Call 0x1C17CF4
	048 Move X0, 0xD27000
	049 Move X0, [X0+3288]
	050 Call 0x1C17CF4
	051 Move X0, 0xCEE000
	052 Move X0, [X0+3808]
	053 Call 0x1C17CF4
	054 Move X0, 0xD27000
	055 Move X0, [X0+3552]
	056 Call 0x1C17CF4
	057 Move X0, 0xCED000
	058 Move X0, [X0+2104]
	059 Call 0x1C17CF4
	060 Move X0, 0xD27000
	061 Move X0, [X0+3328]
	062 Call 0x1C17CF4
	063 Move X0, 0xD27000
	064 Move X0, [X0+3560]
	065 Call 0x1C17CF4
	066 Move X0, 0xD27000
	067 Move X0, [X0+3696]
	068 Call 0x1C17CF4
	069 Move X0, 0xD27000
	070 Move X0, [X0+3296]
	071 Call 0x1C17CF4
	072 Move X0, 0xD27000
	073 Move X0, [X0+3272]
	074 Call 0x1C17CF4
	075 Move X0, 0xCED000
	076 Move X0, [X0+2440]
	077 Call 0x1C17CF4
	078 Move X0, 0xD27000
	079 Move X0, [X0+3832]
	080 Call 0x1C17CF4
	081 Move X0, 0xD27000
	082 Move X0, [X0+3280]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X26+1325], W8
	086 Move X0, [X27]
	087 Move X2, [X19+16]
	088 Move X1, [X25]
	089 Move X3, [X22]
	090 Move X4, X31
	091 Call String.Concat, X0, X1, X2, X3
	092 Move X2, [X19+24]
	093 Move X1, [X24]
	094 Move X3, [X22]
	095 Move X4, X31
	096 Call String.Concat, X0, X1, X2, X3
	097 Move X2, [X19+32]
	098 Move X1, [X21]
	099 Move X3, [X22]
	100 Move X4, X31
	101 Call String.Concat, X0, X1, X2, X3
	102 Move X2, [X19+40]
	103 Move X1, [X20]
	104 Move X3, [X22]
	105 Move X4, X31
	106 Call String.Concat, X0, X1, X2, X3
	107 Move X8, [X23]
	108 Move X21, X0
	109 Move W1, 4
	110 Move X0, X8
	111 Call 0x1C17D6C
	112 Compare X0, 0
	113 JumpIfEqual {360}
	114 Move X20, X0
	115 Compare X21, 0
	116 JumpIfEqual {123}
	117 Move X8, [X20]
	118 Move X0, X21
	119 Move X1, [X8+64]
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfEqual {357}
	123 Move W8, [X20+24]
	124 Compare W8, 0
	125 JumpIfEqual {356}
	126 Move X24, 0xD27000
	127 Move X24, [X24+3832]
	128 Move [X20+32], X21
	129 Move X0, [X24]
	130 Compare X0, 0
	131 JumpIfEqual {138}
	132 Move X8, [X20]
	133 Move X1, [X8+64]
	134 Call 0x1C17E00
	135 Compare X0, 0
	136 JumpIfEqual {357}
	137 Move W8, [X20+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, [X24]
	140 Move X24, 0xCED000
	141 Move X24, [X24+1880]
	142 Add X1, X31, 12
	143 Move [X20+40], X8
	144 Move W8, [X19+48]
	145 Move X0, [X24]
	146 Move [X31+12], W8
	147 Call 0x1C17E04
	148 Move X21, X0
	149 Compare X0, 0
	150 JumpIfEqual {157}
	151 Move X8, [X20]
	152 Move X0, X21
	153 Move X1, [X8+64]
	154 Call 0x1C17E00
	155 Compare X0, 0
	156 JumpIfEqual {357}
	157 Move W8, [X20+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move [X20+48], X21
	160 Move X0, [X22]
	161 Compare X0, 0
	162 JumpIfEqual {169}
	163 Move X8, [X20]
	164 Move X1, [X8+64]
	165 Call 0x1C17E00
	166 Compare X0, 0
	167 JumpIfEqual {357}
	168 Move W8, [X20+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X8, [X22]
	171 Move X21, 0xD27000
	172 Move X25, 0xD27000
	173 Move X21, [X21+3464]
	174 Move X25, [X25+3288]
	175 Move X0, X20
	176 Move X1, X31
	177 Move [X20+56], X8
	178 Call String.Concat, X0
	179 Move X2, [X19+56]
	180 Move X1, [X21]
	181 Move X3, [X22]
	182 Move X4, X31
	183 Call String.Concat, X0, X1, X2, X3
	184 Move X2, [X19+64]
	185 Move X1, [X25]
	186 Move X3, [X22]
	187 Move X4, X31
	188 Call String.Concat, X0, X1, X2, X3
	189 Move X8, [X23]
	190 Move X21, X0
	191 Move W1, 4
	192 Move X0, X8
	193 Call 0x1C17D6C
	194 Compare X0, 0
	195 JumpIfEqual {360}
	196 Move X20, X0
	197 Compare X21, 0
	198 JumpIfEqual {205}
	199 Move X8, [X20]
	200 Move X0, X21
	201 Move X1, [X8+64]
	202 Call 0x1C17E00
	203 Compare X0, 0
	204 JumpIfEqual {357}
	205 Move W8, [X20+24]
	206 Compare W8, 0
	207 JumpIfEqual {356}
	208 Move X25, 0xD27000
	209 Move X25, [X25+3696]
	210 Move [X20+32], X21
	211 Move X0, [X25]
	212 Compare X0, 0
	213 JumpIfEqual {220}
	214 Move X8, [X20]
	215 Move X1, [X8+64]
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {357}
	219 Move W8, [X20+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X8, [X25]
	222 Add X1, X31, 8
	223 Move [X20+40], X8
	224 Move W8, [X19+72]
	225 Move X0, [X24]
	226 Move [X31+8], W8
	227 Call 0x1C17E04
	228 Move X21, X0
	229 Compare X0, 0
	230 JumpIfEqual {237}
	231 Move X8, [X20]
	232 Move X0, X21
	233 Move X1, [X8+64]
	234 Call 0x1C17E00
	235 Compare X0, 0
	236 JumpIfEqual {357}
	237 Move W8, [X20+24]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move [X20+48], X21
	240 Move X0, [X22]
	241 Compare X0, 0
	242 JumpIfEqual {249}
	243 Move X8, [X20]
	244 Move X1, [X8+64]
	245 Call 0x1C17E00
	246 Compare X0, 0
	247 JumpIfEqual {357}
	248 Move W8, [X20+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X8, [X22]
	251 Move X21, 0xD27000
	252 Move X24, 0xCEE000
	253 Move X21, [X21+3328]
	254 Move X24, [X24+3808]
	255 Move X0, X20
	256 Move X1, X31
	257 Move [X20+56], X8
	258 Call String.Concat, X0
	259 Move X2, [X19+80]
	260 Move X1, [X21]
	261 Move X3, [X22]
	262 Move X4, X31
	263 Call String.Concat, X0, X1, X2, X3
	264 Move X2, [X19+88]
	265 Move X1, [X24]
	266 Move X3, [X22]
	267 Move X4, X31
	268 Call String.Concat, X0, X1, X2, X3
	269 Move X8, [X23]
	270 Move X21, X0
	271 Move W1, 4
	272 Move X0, X8
	273 Call 0x1C17D6C
	274 Compare X0, 0
	275 JumpIfEqual {360}
	276 Move X20, X0
	277 Compare X21, 0
	278 JumpIfEqual {285}
	279 Move X8, [X20]
	280 Move X0, X21
	281 Move X1, [X8+64]
	282 Call 0x1C17E00
	283 Compare X0, 0
	284 JumpIfEqual {357}
	285 Move W8, [X20+24]
	286 Compare W8, 0
	287 JumpIfEqual {356}
	288 Move X23, 0xD27000
	289 Move X23, [X23+3296]
	290 Move [X20+32], X21
	291 Move X0, [X23]
	292 Compare X0, 0
	293 JumpIfEqual {300}
	294 Move X8, [X20]
	295 Move X1, [X8+64]
	296 Call 0x1C17E00
	297 Compare X0, 0
	298 JumpIfEqual {357}
	299 Move W8, [X20+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X8, [X23]
	302 Move X9, 0xCED000
	303 Move X9, [X9+2904]
	304 Add X1, X31, 4
	305 Move [X20+40], X8
	306 Move W8, [X19+96]
	307 Move X0, [X9]
	308 Move [X31+4], W8
	309 Call 0x1C17E04
	310 Move X21, X0
	311 Compare X0, 0
	312 JumpIfEqual {319}
	313 Move X8, [X20]
	314 Move X0, X21
	315 Move X1, [X8+64]
	316 Call 0x1C17E00
	317 Compare X0, 0
	318 JumpIfEqual {357}
	319 Move W8, [X20+24]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move [X20+48], X21
	322 Move X0, [X22]
	323 Compare X0, 0
	324 JumpIfEqual {331}
	325 Move X8, [X20]
	326 Move X1, [X8+64]
	327 Call 0x1C17E00
	328 Compare X0, 0
	329 JumpIfEqual {357}
	330 Move W8, [X20+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X8, [X22]
	333 Move X21, 0xD27000
	334 Move X21, [X21+3560]
	335 Move X0, X20
	336 Move X1, X31
	337 Move [X20+56], X8
	338 Call String.Concat, X0
	339 Move X2, [X19+104]
	340 Move X1, [X21]
	341 Move X3, [X22]
	342 Move X4, X31
	343 Call String.Concat, X0, X1, X2, X3
	344 Move X20, [X31+80]
	345 Move X19, [X31+88]
	346 Move X22, [X31+64]
	347 Move X21, [X31+72]
	348 Move X24, [X31+48]
	349 Move X23, [X31+56]
	350 Move X26, [X31+32]
	351 Move X25, [X31+40]
	352 Move X30, [X31+16]
	353 Move X27, [X31+24]
	354 Add X31, X31, 96
	355 Return X0
	356 Call 0x1C17F28
	357 Call 0x1C17F44
	358 Move X1, X31
	359 Call 0x1C17DEC
	360 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034074CC RET
	0x034074D0 LDR X0, [X0 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

