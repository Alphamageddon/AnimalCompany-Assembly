Type: Nakama.ApiClient/<LeaveGroupAsync>d__56

Method: System.Void MoveNext()

Disassembly:
	0x03427D5C LDR X0, [X0 + 0xE38]
	0x03427D60 BL 0x1C16D08
	0x03427D64 MOV X1, X0
	0x03427D68 MOV X0, X20
	0x03427D6C BL 0x1C16DEC
	0x03427D70 BL 0x1C16F20
	0x03427D74 BL 0x1C16F20
	0x03427D78 BL 0x1C16F20
	0x03427D7C BL 0x1C16F28
	0x03427D80 BL 0x1C16F20
	0x03427D84 BL 0x1C16F20
	0x03427D88 BL 0x1C16F20
	0x03427D8C BL 0x1C16F20
	0x03427D90 BL 0x1C16F20
	0x03427D94 BL 0x1C16F20
	0x03427D98 B 0x3427DF8
	0x03427D9C B 0x3427DF8
	0x03427DA0 B 0x3427DF8
	0x03427DA4 B 0x3427DF8
	0x03427DA8 B 0x3427DF8
	0x03427DAC B 0x3427DF8
	0x03427DB0 B 0x3427DF8
	0x03427DB4 B 0x3427DF8
	0x03427DB8 B 0x3427DF8
	0x03427DBC B 0x3427DF8
	0x03427DC0 B 0x3427DF8
	0x03427DC4 B 0x3427DF8
	0x03427DC8 B 0x3427DF8
	0x03427DCC B 0x3427DF8
	0x03427DD0 B 0x3427DF8
	0x03427DD4 B 0x3427DF8
	0x03427DD8 B 0x3427DF8
	0x03427DDC B 0x3427DF8
	0x03427DE0 B 0x3427DF8
	0x03427DE4 B 0x3427DF8
	0x03427DE8 B 0x3427DF8
	0x03427DEC B 0x3427DF8
	0x03427DF0 B 0x3427DF8
	0x03427DF4 B 0x3427DF8
	0x03427DF8 MOV X20, X0
	0x03427DFC CMP W1, 0x1
	0x03427E00 B.NE 0x3427E90
	0x03427E04 MOV X0, X20
	0x03427E08 BL 0x3EB1AD0
	0x03427E0C MOV X20, X0
	0x03427E10 ADRP X0, 0xCCC000
	0x03427E14 LDR X0, [X0 + 0x7D0]
	0x03427E18 BL 0x1C16D08
	0x03427E1C LDR X8, [X20]
	0x03427E20 LDR X1, [X8]
	0x03427E24 BL 0x1C17270
	0x03427E28 TBZ X0, 0x0, 0x3427E68
	0x03427E2C LDR X20, [X20]
	0x03427E30 BL 0x3EB1AE0
	0x03427E34 MOVN W8, 0x1
	0x03427E38 STR W8, [X19], #0x8
	0x03427E3C ADRP X0, 0xCCF000
	0x03427E40 LDR X0, [X0 + 0x280]
	0x03427E44 BL 0x1C16D08
	0x03427E48 LDR W8, [X0 + 0xE0]
	0x03427E4C CBNZ W8, 0x3427E54
	0x03427E50 BL 0x1C16DFC
	0x03427E54 MOV X0, X19
	0x03427E58 MOV X1, X20
	0x03427E5C MOV X2, X31
	0x03427E60 BL 0x32C4908
	0x03427E64 B 0x3427D08
	0x03427E68 MOVZ W0, 0x8
	0x03427E6C BL 0x3EB1AF0
	0x03427E70 LDR X8, [X20]
	0x03427E74 STR X8, [X0]
	0x03427E78 ADRP X1, 0xA8D000
	0x03427E7C ADD X1, X1, 0xE58
	0x03427E80 MOV X2, X31
	0x03427E84 BL 0x3EB1B00
	0x03427E88 MOV X20, X0
	0x03427E8C BL 0x3EB1AE0
	0x03427E90 MOV X0, X20
	0x03427E94 BL 0x1D2C690
	0x03427E98 BL 0x1990590
	0x03427E9C STR X30, [X31 - 0x30]!
	0x03427EA0 STP X22, X21, [X31 + 0x10]
	0x03427EA4 STP X20, X19, [X31 + 0x20]
	0x03427EA8 ADRP X21, 0xFB6000
	0x03427EAC ADRP X22, 0xCCF000
	0x03427EB0 LDRB W8, [X21 + 0x63C]
	0x03427EB4 LDR X22, [X22 + 0x280]
	0x03427EB8 MOV X19, X1
	0x03427EBC MOV X20, X0
	0x03427EC0 TBNZ X8, 0x0, 0x3427ED8
	0x03427EC4 ADRP X0, 0xCCF000
	0x03427EC8 LDR X0, [X0 + 0x280]
	0x03427ECC BL 0x1C16CF4
	0x03427ED0 MOVZ W8, 0x1
	0x03427ED4 STRB W8, [X21 + 0x63C]
	0x03427ED8 LDR X0, [X22]
	0x03427EDC LDR W8, [X0 + 0xE0]
	0x03427EE0 CBNZ W8, 0x3427EE8
	0x03427EE4 BL 0x1C16DFC
	0x03427EE8 ADD X0, X20, 0x8
	0x03427EEC MOV X1, X19
	0x03427EF0 LDP X20, X19, [X31 + 0x20]
	0x03427EF4 LDP X22, X21, [X31 + 0x10]
	0x03427EF8 MOV X2, X31
	0x03427EFC LDR X30, [X31], #0x30
	0x03427F00 B 0x32C477C
	0x03427F04 SUB X31, X31, 0x70
	0x03427F08 STR X30, [X31 + 0x10]
	0x03427F0C STP X28, X27, [X31 + 0x20]
	0x03427F10 STP X26, X25, [X31 + 0x30]
	0x03427F14 STP X24, X23, [X31 + 0x40]
	0x03427F18 STP X22, X21, [X31 + 0x50]
	0x03427F1C STP X20, X19, [X31 + 0x60]
	0x03427F20 ADRP X20, 0xFB6000
	0x03427F24 LDRB W8, [X20 + 0x63D]
	0x03427F28 MOV X19, X0
	0x03427F2C TBNZ X8, 0x0, 0x3427FF8
	0x03427F30 ADRP X0, 0xD07000
	0x03427F34 LDR X0, [X0 + 0xE40]
	0x03427F38 BL 0x1C16CF4
	0x03427F3C ADRP X0, 0xCCF000
	0x03427F40 LDR X0, [X0 + 0x280]
	0x03427F44 BL 0x1C16CF4
	0x03427F48 ADRP X0, 0xCD5000
	0x03427F4C LDR X0, [X0 + 0x8D8]
	0x03427F50 BL 0x1C16CF4
	0x03427F54 ADRP X0, 0xCCD000
	0x03427F58 LDR X0, [X0 + 0x810]
	0x03427F5C BL 0x1C16CF4
	0x03427F60 ADRP X0, 0xCCD000
	0x03427F64 LDR X0, [X0 + 0x6C0]
	0x03427F68 BL 0x1C16CF4
	0x03427F6C ADRP X0, 0xCCD000
	0x03427F70 LDR X0, [X0 + 0x6D0]
	0x03427F74 BL 0x1C16CF4
	0x03427F78 ADRP X0, 0xD07000
	0x03427F7C LDR X0, [X0 + 0x7B8]
	0x03427F80 BL 0x1C16CF4
	0x03427F84 ADRP X0, 0xCCF000
	0x03427F88 LDR X0, [X0 + 0x1E0]
	0x03427F8C BL 0x1C16CF4
	0x03427F90 ADRP X0, 0xCCF000
	0x03427F94 LDR X0, [X0 + 0x1F0]
	0x03427F98 BL 0x1C16CF4
	0x03427F9C ADRP X0, 0xCCF000
	0x03427FA0 LDR X0, [X0 + 0x1F8]
	0x03427FA4 BL 0x1C16CF4
	0x03427FA8 ADRP X0, 0xCD5000
	0x03427FAC LDR X0, [X0 + 0x3A0]
	0x03427FB0 BL 0x1C16CF4
	0x03427FB4 ADRP X0, 0xCF5000
	0x03427FB8 LDR X0, [X0 + 0x4D8]
	0x03427FBC BL 0x1C16CF4
	0x03427FC0 ADRP X0, 0xD07000
	0x03427FC4 LDR X0, [X0 + 0x7D0]
	0x03427FC8 BL 0x1C16CF4
	0x03427FCC ADRP X0, 0xD07000
	0x03427FD0 LDR X0, [X0 + 0xE48]
	0x03427FD4 BL 0x1C16CF4
	0x03427FD8 ADRP X0, 0xD07000
	0x03427FDC LDR X0, [X0 + 0x7D8]
	0x03427FE0 BL 0x1C16CF4
	0x03427FE4 ADRP X0, 0xCCC000
	0x03427FE8 LDR X0, [X0 + 0x988]
	0x03427FEC BL 0x1C16CF4
	0x03427FF0 MOVZ W8, 0x1
	0x03427FF4 STRB W8, [X20 + 0x63D]
	0x03427FF8 STR X31, [X31 + 0x18]
	0x03427FFC ADRP X28, 0xCCF000
	0x03428000 LDR W8, [X19]
	0x03428004 B 0x3EB18B4
	0x03428008 CBZ W8, 0x34281E8
	0x0342800C LDR X8, [X19 + 0x20]
	0x03428010 CBZ X8, 0x3428300
	0x03428014 LDR X25, [X19 + 0x28]
	0x03428018 CBZ X25, 0x3428348
	0x0342801C LDR X0, [X25 + 0x20]
	0x03428020 CBZ X0, 0x342834C
	0x03428024 ADRP X8, 0xD06000
	0x03428028 ADRP X9, 0xCCB000
	0x0342802C LDR X8, [X8 + 0xE48]
	0x03428030 LDR X9, [X9 + 0x988]
	0x03428034 LDR X21, [X8]
	0x03428038 LDR X20, [X9]
	0x0342803C MOV X1, X31
	0x03428040 BL 0x361B448
	0x03428044 ADRP X8, 0xCD4000
	0x03428048 LDR X8, [X8 + 0x8D8]
	0x0342804C MOV X22, X0
	0x03428050 LDR X0, [X8]
	0x03428054 MOVZ W1, 0x1
	0x03428058 BL 0x1C16D6C
	0x0342805C MOV X1, X0
	0x03428060 CBZ X1, 0x3428350
	0x03428064 LDR W8, [X1 + 0x18]
	0x03428068 CBZ W8, 0x3428354
	0x0342806C MOVZ W8, 0x2F
	0x03428070 STRH W8, [X1 + 0x20]
	0x03428074 CBZ X22, 0x3428358
	0x03428078 MOV X0, X22
	0x0342807C MOV X2, X31
	0x03428080 BL 0x322BC58
	0x03428084 MOV X1, X21
	0x03428088 MOV X2, X31
	0x0342808C BL 0x321B938
	0x03428090 ADRP X8, 0xCD4000
	0x03428094 LDR X8, [X8 + 0x3A0]
	0x03428098 MOV X22, X0
	0x0342809C LDR X23, [X25 + 0x20]
	0x034280A0 LDR X0, [X8]
	0x034280A4 BL 0x1C16F10
	0x034280A8 MOV X21, X0
	0x034280AC MOV X1, X23
	0x034280B0 MOV X2, X31
	0x034280B4 BL 0x36281F8
	0x034280B8 CBZ X21, 0x342835C
	0x034280BC MOV X0, X21
	0x034280C0 MOV X1, X22
	0x034280C4 MOV X2, X31
	0x034280C8 BL 0x36288CC
	0x034280CC MOV X0, X21
	0x034280D0 MOV X1, X20
	0x034280D4 MOV X2, X31
	0x034280D8 BL 0x3628980
	0x034280DC MOV X0, X21
	0x034280E0 MOV X1, X31
	0x034280E4 BL 0x3628A38
	0x034280E8 ADRP X8, 0xCF4000
	0x034280EC ADRP X9, 0xCCC000
	0x034280F0 LDR X8, [X8 + 0x4D8]
	0x034280F4 LDR X9, [X9 + 0x6D0]
	0x034280F8 MOV X20, X0
	0x034280FC LDR X21, [X8]
	0x03428100 LDR X0, [X9]
	0x03428104 BL 0x1C16F10
	0x03428108 ADRP X8, 0xCCC000
	0x0342810C LDR X8, [X8 + 0x6C0]
	0x03428110 MOV X22, X0
	0x03428114 LDR X1, [X8]
	0x03428118 BL 0x2AA4804
	0x0342811C ADRP X8, 0xD06000
	0x03428120 LDR X8, [X8 + 0x7D8]
	0x03428124 LDR X1, [X19 + 0x30]
	0x03428128 LDR X0, [X8]
	0x0342812C MOV X2, X31
	0x03428130 BL 0x321B938
	0x03428134 CBZ X22, 0x3428360
	0x03428138 ADRP X8, 0xD06000
	0x0342813C LDR X8, [X8 + 0x7D0]
	0x03428140 ADRP X9, 0xCCC000
	0x03428144 LDR X9, [X9 + 0x810]
	0x03428148 MOV X2, X0
	0x0342814C LDR X1, [X8]
	0x03428150 LDR X3, [X9]
	0x03428154 MOV X0, X22
	0x03428158 BL 0x2AA5098
	0x0342815C LDR X0, [X19 + 0x20]
	0x03428160 MOV X1, X31
	0x03428164 BL 0x3483BE4
	0x03428168 MOV X23, X0
	0x0342816C MOV X0, X31
	0x03428170 BL 0x3241948
	0x03428174 CBZ X0, 0x3428364
	0x03428178 LDR X8, [X0]
	0x0342817C LDR X9, [X8 + 0x268]
	0x03428180 LDR X2, [X8 + 0x270]
	0x03428184 MOV X1, X23
	0x03428188 BLR X9
	0x0342818C LDR X24, [X25 + 0x10]
	0x03428190 CBZ X24, 0x3428368
	0x03428194 ADRP X10, 0xD06000
	0x03428198 LDR X10, [X10 + 0x7B8]
	0x0342819C LDR X8, [X24]
	0x034281A0 LDR W26, [X25 + 0x18]
	0x034281A4 LDP X27, X25, [X19 + 0x38]
	0x034281A8 LDR X1, [X10]
	0x034281AC LDRH W9, [X8 + 0x12E]
	0x034281B0 MOV X23, X0
	0x034281B4 CBZ X9, 0x34281D8
	0x034281B8 LDR X10, [X8 + 0xB0]
	0x034281BC ADD X10, X10, 0x8
	0x034281C0 LDUR X11, [X10 - 0x8]
	0x034281C4 CMP X11, X1
	0x034281C8 B.EQ 0x3428200
	0x034281CC SUBS X9, X9, 0x1
	0x034281D0 ADD X10, X10, 0x10
	0x034281D4 B.NE 0x34281C0
	0x034281D8 MOVZ W2, 0x3
	0x034281DC MOV X0, X24
	0x034281E0 BL 0x1C5C788
	0x034281E4 B 0x3428210
	0x034281E8 LDR X8, [X19 + 0x48]
	0x034281EC MOVN W9, 0x0
	0x034281F0 STR X8, [X31 + 0x18]
	0x034281F4 STR X31, [X19 + 0x48]
	0x034281F8 STR W9, [X19]
	0x034281FC B 0x342826C
	0x03428200 LDR W9, [X10]
	0x03428204 ADD W9, W9, 0x3
	0x03428208 ADD X8, X8, W9, 0x4, SXTW
	0x0342820C ADD X0, X8, 0x138
	0x03428210 LDP X8, X9, [X0]
	0x03428214 MOV X0, X24
	0x03428218 MOV X1, X21
	0x0342821C MOV X2, X20
	0x03428220 MOV X3, X22
	0x03428224 MOV X4, X23
	0x03428228 MOV W5, W26
	0x0342822C MOV X6, X27
	0x03428230 MOV X7, X25
	0x03428234 STR X9, [X31]
	0x03428238 BLR X8
	0x0342823C CBZ X0, 0x342836C
	0x03428240 ADRP X8, 0xCCE000
	0x03428244 LDR X8, [X8 + 0x1F8]
	0x03428248 LDR X1, [X8]
	0x0342824C BL 0x269F5D0
	0x03428250 ADRP X8, 0xCCE000
	0x03428254 LDR X8, [X8 + 0x1F0]
	0x03428258 STR X0, [X31 + 0x18]
	0x0342825C LDR X1, [X8]
	0x03428260 ADD X0, X31, 0x18
	0x03428264 BL 0x2677430
	0x03428268 TBZ X0, 0x0, 0x34282A8
	0x0342826C ADRP X8, 0xCCE000
	0x03428270 LDR X8, [X8 + 0x1E0]
	0x03428274 ADD X0, X31, 0x18
	0x03428278 LDR X1, [X8]
	0x0342827C BL 0x2677474
	0x03428280 MOVN W8, 0x1
	0x03428284 STR W8, [X19], #0x8
	0x03428288 LDR X0, [X28]
	0x0342828C LDR W8, [X0 + 0xE0]
	0x03428290 CBNZ W8, 0x3428298
	0x03428294 BL 0x1C16DFC
	0x03428298 MOV X0, X19
	0x0342829C MOV X1, X31
	0x034282A0 BL 0x32C4864
	0x034282A4 B 0x34282E0
	0x034282A8 STR W31, [X19]
	0x034282AC LDR X8, [X31 + 0x18]
	0x034282B0 STR X8, [X19 + 0x48]
	0x034282B4 LDR X0, [X28]
	0x034282B8 LDR W8, [X0 + 0xE0]
	0x034282BC CBNZ W8, 0x34282C4
	0x034282C0 BL 0x1C16DFC
	0x034282C4 ADRP X8, 0xD06000
	0x034282C8 LDR X8, [X8 + 0xE40]
	0x034282CC ADD X0, X19, 0x8
	0x034282D0 LDR X3, [X8]
	0x034282D4 ADD X1, X31, 0x18
	0x034282D8 MOV X2, X19
	0x034282DC BL 0x2186848
	0x034282E0 LDP X20, X19, [X31 + 0x60]
	0x034282E4 LDP X22, X21, [X31 + 0x50]
	0x034282E8 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFB7000
	013 Move W8, [X20+1591]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {75}
	019 Move X0, 0xD08000
	020 Move X0, [X0+3576]
	021 Call 0x1C17CF4
	022 Move X0, 0xCD0000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xCD6000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xCCE000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xCCE000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xCCE000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xD08000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0xCD0000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xCD0000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xCD0000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xCD6000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xCCF000
	053 Move X0, [X0+2600]
	054 Call 0x1C17CF4
	055 Move X0, 0xCF6000
	056 Move X0, [X0+1240]
	057 Call 0x1C17CF4
	058 Move X0, 0xD08000
	059 Move X0, [X0+2048]
	060 Call 0x1C17CF4
	061 Move X0, 0xD08000
	062 Move X0, [X0+3584]
	063 Call 0x1C17CF4
	064 Move X0, 0xD08000
	065 Move X0, [X0+2000]
	066 Call 0x1C17CF4
	067 Move X0, 0xD08000
	068 Move X0, [X0+2008]
	069 Call 0x1C17CF4
	070 Move X0, 0xCCD000
	071 Move X0, [X0+2440]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+1591], W8
	075 Move [X31+8], X31
	076 Move X27, 0xCD0000
	077 Move W8, [X19]
	078 Move X27, [X27+640]
	079 Compare W8, 0
	080 JumpIfEqual {215}
	081 Move X21, [X19+32]
	082 Compare X21, 0
	083 JumpIfEqual {298}
	084 Move X8, 0xCCF000
	085 Move X8, [X8+2600]
	086 Move X0, [X8]
	087 Move X8, 0xD08000
	088 Move X8, [X8+3584]
	089 Move X24, [X19+40]
	090 Move W9, [X0+224]
	091 Move X20, [X8]
	092 Compare W9, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X31
	097 Call Uri.EscapeDataString, X0
	098 Compare X20, 0
	099 JumpIfEqual {316}
	100 Move X8, 0xD08000
	101 Move X8, [X8+2048]
	102 Move X2, X0
	103 Move X1, [X8]
	104 Move X0, X20
	105 Move X3, X31
	106 Call String.Replace, X0, X1, X2
	107 Compare X24, 0
	108 JumpIfEqual {317}
	109 Move X21, X0
	110 Move X0, [X24+32]
	111 Compare X0, 0
	112 JumpIfEqual {318}
	113 Move X8, 0xCCD000
	114 Move X8, [X8+2440]
	115 Move X20, [X8]
	116 Move X1, X31
	117 Call Uri.get_AbsolutePath, X0
	118 Move X8, 0xCD6000
	119 Move X8, [X8+2264]
	120 Move X22, X0
	121 Move X0, [X8]
	122 Move W1, 1
	123 Call 0x1C17D6C
	124 Move X1, X0
	125 Compare X1, 0
	126 JumpIfEqual {319}
	127 Move W8, [X1+24]
	128 Compare W8, 0
	129 JumpIfEqual {320}
	130 Move W8, 47
	131 NotImplemented "Instruction STRH not yet implemented."
	132 Compare X22, 0
	133 JumpIfEqual {321}
	134 Move X0, X22
	135 Move X2, X31
	136 Call String.TrimEnd, X0, X1
	137 Move X1, X21
	138 Move X2, X31
	139 Call String.Concat, X0, X1
	140 Move X8, 0xCD6000
	141 Move X8, [X8+928]
	142 Move X22, X0
	143 Move X23, [X24+32]
	144 Move X0, [X8]
	145 Call 0x1C17F10
	146 Move X21, X0
	147 Move X1, X23
	148 Move X2, X31
	149 Call UriBuilder..ctor, X0, X1
	150 Compare X21, 0
	151 JumpIfEqual {322}
	152 Move X0, X21
	153 Move X1, X22
	154 Move X2, X31
	155 Call UriBuilder.set_Path, X0, X1
	156 Move X0, X21
	157 Move X1, X20
	158 Move X2, X31
	159 Call UriBuilder.set_Query, X0, X1
	160 Move X0, X21
	161 Move X1, X31
	162 Call UriBuilder.get_Uri, X0
	163 Move X8, 0xCF6000
	164 Move X9, 0xCCE000
	165 Move X8, [X8+1240]
	166 Move X9, [X9+1744]
	167 Move X20, X0
	168 Move X21, [X8]
	169 Move X0, [X9]
	170 Call 0x1C17F10
	171 Move X8, 0xCCE000
	172 Move X8, [X8+1728]
	173 Move X22, X0
	174 Move X1, [X8]
	175 Call Dictionary`2<Object, Object>..ctor, X0
	176 Move X8, 0xD08000
	177 Move X8, [X8+2008]
	178 Move X1, [X19+48]
	179 Move X0, [X8]
	180 Move X2, X31
	181 Call String.Concat, X0, X1
	182 Compare X22, 0
	183 JumpIfEqual {323}
	184 Move X8, 0xD08000
	185 Move X8, [X8+2000]
	186 Move X9, 0xCCE000
	187 Move X9, [X9+2064]
	188 Move X2, X0
	189 Move X1, [X8]
	190 Move X3, [X9]
	191 Move X0, X22
	192 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	193 Move X23, [X24+16]
	194 Compare X23, 0
	195 JumpIfEqual {324}
	196 Move X10, 0xD07000
	197 Move X10, [X10+1976]
	198 Move X8, [X23]
	199 Move W25, [X24+24]
	200 Move X26, [X19+56]
	201 Move X24, [X19+64]
	202 Move X1, [X10]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move W2, 3
	213 Move X0, X23
	214 Call 0x1C5D788
	215 Move X8, [X19+72]
	216 Move TEMP, 0
	217 Not TEMP
	218 Move W9, TEMP
	219 Move [X31+8], X8
	220 Move [X19+72], X31
	221 Move [X19], W9
	222 Move W9, [X10]
	223 Add W9, W9, 3
	224 Add X8, X8, W9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X9, [X0+8]
	228 Move X0, X23
	229 Move X1, X21
	230 Move X2, X20
	231 Move X3, X22
	232 Move X4, X31
	233 Move W5, W25
	234 Move X6, X26
	235 Move X7, X24
	236 Move [X31], X9
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X0, 0
	239 JumpIfEqual {325}
	240 Move X8, 0xCCF000
	241 Move X8, [X8+504]
	242 Move X1, [X8]
	243 Call Task`1<Object>.GetAwaiter, X0
	244 Move X8, 0xCCF000
	245 Move X8, [X8+496]
	246 Move [X31+8], X0
	247 Move X1, [X8]
	248 Add X0, X31, 8
	249 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfNotEqual {271}
	254 Move X8, 0xCCF000
	255 Move X8, [X8+480]
	256 Add X0, X31, 8
	257 Move X1, [X8]
	258 Call TaskAwaiter`1<Object>.GetResult, X0
	259 Move TEMP, 1
	260 Not TEMP
	261 Move W8, TEMP
	262 Move [X19+8], W8
	263 Move X0, [X27]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, X19
	269 Move X1, X31
	270 Call AsyncTaskMethodBuilder.SetResult, X0
	271 Move [X19], W31
	272 Move X8, [X31+8]
	273 Move [X19+72], X8
	274 Move X0, [X27]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X8, 0xD07000
	280 Move X8, [X8+3576]
	281 Add X0, X19, 8
	282 Move X3, [X8]
	283 Add X1, X31, 8
	284 Move X2, X19
	285 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	286 Move X20, [X31+80]
	287 Move X19, [X31+88]
	288 Move X22, [X31+64]
	289 Move X21, [X31+72]
	290 Move X24, [X31+48]
	291 Move X23, [X31+56]
	292 Move X26, [X31+32]
	293 Move X25, [X31+40]
	294 Move X30, [X31+16]
	295 Move X27, [X31+24]
	296 Add X31, X31, 96
	297 Return 
	298 Move X0, 0xCD4000
	299 Move X0, [X0+1400]
	300 Call 0x1C17D08
	301 Call 0x1C17F10
	302 Move X20, X0
	303 Move X0, 0xD07000
	304 Move X0, [X0+2056]
	305 Call 0x1C17D08
	306 Move X1, X0
	307 Move X0, X20
	308 Move X2, X31
	309 Call ArgumentException..ctor, X0, X1
	310 Move X0, 0xD07000
	311 Move X0, [X0+3592]
	312 Call 0x1C17D08
	313 Move X1, X0
	314 Move X0, X20
	315 Call 0x1C17DEC
	316 Call 0x1C17F20
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F28
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Move X20, X0
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, X20
	329 Call 0x3EB2AD0
	330 Move X20, X0
	331 Move X0, 0xCCC000
	332 Move X0, [X0+2000]
	333 Call 0x1C17D08
	334 Move X8, [X20]
	335 Move X1, [X8]
	336 Call 0x1C18270
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {358}
	341 Move X20, [X20]
	342 Call 0x3EB2AE0
	343 Move TEMP, 1
	344 Not TEMP
	345 Move W8, TEMP
	346 Move [X19+8], W8
	347 Move X0, 0xCCF000
	348 Move X0, [X0+640]
	349 Call 0x1C17D08
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move X0, X19
	355 Move X1, X20
	356 Move X2, X31
	357 Call AsyncTaskMethodBuilder.SetException, X0, X1
	358 Move W0, 8
	359 Call 0x3EB2AF0
	360 Move X8, [X20]
	361 Move [X0], X8
	362 Move X1, 0xA8D000
	363 Add X1, X1, 3672
	364 Move X2, X31
	365 Call 0x3EB2B00
	366 Move X20, X0
	367 Call 0x3EB2AE0
	368 Move X0, X20
	369 Call 0x1D2D690
	370 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034282EC LDP X26, X25, [X31 + 0x30]
	0x034282F0 LDP X28, X27, [X31 + 0x20]
	0x034282F4 LDR X30, [X31 + 0x10]
	0x034282F8 ADD X31, X31, 0x70
	0x034282FC RET
	0x03428300 ADRP X0, 0xCD3000
	0x03428304 LDR X0, [X0 + 0x578]
	0x03428308 BL 0x1C16D08
	0x0342830C BL 0x1C16F10
	0x03428310 MOV X20, X0
	0x03428314 ADRP X0, 0xD06000
	0x03428318 LDR X0, [X0 + 0xBC8]
	0x0342831C BL 0x1C16D08
	0x03428320 MOV X1, X0
	0x03428324 MOV X0, X20
	0x03428328 MOV X2, X31
	0x0342832C BL 0x3314A68
	0x03428330 ADRP X0, 0xD06000
	0x03428334 LDR X0, [X0 + 0xE50]
	0x03428338 BL 0x1C16D08
	0x0342833C MOV X1, X0
	0x03428340 MOV X0, X20
	0x03428344 BL 0x1C16DEC
	0x03428348 BL 0x1C16F20
	0x0342834C BL 0x1C16F20
	0x03428350 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB6000
	007 Move X22, 0xCCF000
	008 Move W8, [X21+1592]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCCF000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1592], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

