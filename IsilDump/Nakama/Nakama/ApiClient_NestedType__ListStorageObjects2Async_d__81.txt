Type: Nakama.ApiClient/<ListStorageObjects2Async>d__81

Method: System.Void MoveNext()

Disassembly:
	0x0343077C B 0x343080C
	0x03430780 B 0x343080C
	0x03430784 B 0x343080C
	0x03430788 B 0x343080C
	0x0343078C B 0x343080C
	0x03430790 B 0x343080C
	0x03430794 B 0x343080C
	0x03430798 B 0x343080C
	0x0343079C B 0x343080C
	0x034307A0 B 0x343080C
	0x034307A4 B 0x343080C
	0x034307A8 B 0x343080C
	0x034307AC B 0x343080C
	0x034307B0 B 0x343080C
	0x034307B4 B 0x343080C
	0x034307B8 B 0x343080C
	0x034307BC B 0x343080C
	0x034307C0 B 0x343080C
	0x034307C4 B 0x343080C
	0x034307C8 B 0x343080C
	0x034307CC B 0x343080C
	0x034307D0 B 0x343080C
	0x034307D4 B 0x343080C
	0x034307D8 B 0x343080C
	0x034307DC B 0x343080C
	0x034307E0 B 0x343080C
	0x034307E4 B 0x343080C
	0x034307E8 B 0x343080C
	0x034307EC B 0x343080C
	0x034307F0 B 0x343080C
	0x034307F4 B 0x343080C
	0x034307F8 B 0x343080C
	0x034307FC B 0x343080C
	0x03430800 B 0x343080C
	0x03430804 B 0x343080C
	0x03430808 B 0x343080C
	0x0343080C MOV X20, X0
	0x03430810 CMP W1, 0x1
	0x03430814 B.NE 0x34308B0
	0x03430818 MOV X0, X20
	0x0343081C BL 0x3EB1AD0
	0x03430820 MOV X20, X0
	0x03430824 ADRP X0, 0xCC3000
	0x03430828 LDR X0, [X0 + 0x7D0]
	0x0343082C BL 0x1C16D08
	0x03430830 LDR X8, [X20]
	0x03430834 LDR X1, [X8]
	0x03430838 BL 0x1C17270
	0x0343083C TBZ X0, 0x0, 0x3430888
	0x03430840 LDR X20, [X20]
	0x03430844 BL 0x3EB1AE0
	0x03430848 MOVN W8, 0x1
	0x0343084C STR W8, [X19], #0x8
	0x03430850 ADRP X0, 0xCFE000
	0x03430854 LDR X0, [X0 + 0x6E0]
	0x03430858 BL 0x1C16D08
	0x0343085C LDR W8, [X0 + 0xE0]
	0x03430860 CBNZ W8, 0x3430868
	0x03430864 BL 0x1C16DFC
	0x03430868 ADRP X0, 0xCFF000
	0x0343086C LDR X0, [X0 + 0x130]
	0x03430870 BL 0x1C16D08
	0x03430874 MOV X2, X0
	0x03430878 MOV X0, X19
	0x0343087C MOV X1, X20
	0x03430880 BL 0x26324C8
	0x03430884 B 0x34306AC
	0x03430888 MOVZ W0, 0x8
	0x0343088C BL 0x3EB1AF0
	0x03430890 LDR X8, [X20]
	0x03430894 STR X8, [X0]
	0x03430898 ADRP X1, 0xA84000
	0x0343089C ADD X1, X1, 0xE58
	0x034308A0 MOV X2, X31
	0x034308A4 BL 0x3EB1B00
	0x034308A8 MOV X20, X0
	0x034308AC BL 0x3EB1AE0
	0x034308B0 MOV X0, X20
	0x034308B4 BL 0x1D2C690
	0x034308B8 BL 0x1990590
	0x034308BC STR X30, [X31 - 0x30]!
	0x034308C0 STP X22, X21, [X31 + 0x10]
	0x034308C4 STP X20, X19, [X31 + 0x20]
	0x034308C8 ADRP X22, 0xFAD000
	0x034308CC ADRP X21, 0xCFE000
	0x034308D0 LDRB W8, [X22 + 0x65E]
	0x034308D4 LDR X21, [X21 + 0x6E0]
	0x034308D8 MOV X19, X1
	0x034308DC MOV X20, X0
	0x034308E0 TBNZ X8, 0x0, 0x3430904
	0x034308E4 ADRP X0, 0xCFF000
	0x034308E8 LDR X0, [X0 + 0x138]
	0x034308EC BL 0x1C16CF4
	0x034308F0 ADRP X0, 0xCFE000
	0x034308F4 LDR X0, [X0 + 0x6E0]
	0x034308F8 BL 0x1C16CF4
	0x034308FC MOVZ W8, 0x1
	0x03430900 STRB W8, [X22 + 0x65E]
	0x03430904 LDR X0, [X21]
	0x03430908 ADRP X21, 0xCFF000
	0x0343090C LDR W8, [X0 + 0xE0]
	0x03430910 LDR X21, [X21 + 0x138]
	0x03430914 CBNZ W8, 0x343091C
	0x03430918 BL 0x1C16DFC
	0x0343091C LDR X2, [X21]
	0x03430920 ADD X0, X20, 0x8
	0x03430924 MOV X1, X19
	0x03430928 LDP X20, X19, [X31 + 0x20]
	0x0343092C LDP X22, X21, [X31 + 0x10]
	0x03430930 LDR X30, [X31], #0x30
	0x03430934 B 0x2632228
	0x03430938 SUB X31, X31, 0x70
	0x0343093C STR X30, [X31 + 0x10]
	0x03430940 STP X28, X27, [X31 + 0x20]
	0x03430944 STP X26, X25, [X31 + 0x30]
	0x03430948 STP X24, X23, [X31 + 0x40]
	0x0343094C STP X22, X21, [X31 + 0x50]
	0x03430950 STP X20, X19, [X31 + 0x60]
	0x03430954 ADRP X20, 0xFAD000
	0x03430958 LDRB W8, [X20 + 0x65F]
	0x0343095C MOV X19, X0
	0x03430960 TBNZ X8, 0x0, 0x3430A44
	0x03430964 ADRP X0, 0xCFF000
	0x03430968 LDR X0, [X0 + 0x160]
	0x0343096C BL 0x1C16CF4
	0x03430970 ADRP X0, 0xCFF000
	0x03430974 LDR X0, [X0 + 0x168]
	0x03430978 BL 0x1C16CF4
	0x0343097C ADRP X0, 0xCFE000
	0x03430980 LDR X0, [X0 + 0x568]
	0x03430984 BL 0x1C16CF4
	0x03430988 ADRP X0, 0xCCC000
	0x0343098C LDR X0, [X0 + 0x8D8]
	0x03430990 BL 0x1C16CF4
	0x03430994 ADRP X0, 0xCC4000
	0x03430998 LDR X0, [X0 + 0x810]
	0x0343099C BL 0x1C16CF4
	0x034309A0 ADRP X0, 0xCC4000
	0x034309A4 LDR X0, [X0 + 0x6C0]
	0x034309A8 BL 0x1C16CF4
	0x034309AC ADRP X0, 0xCC4000
	0x034309B0 LDR X0, [X0 + 0x6D0]
	0x034309B4 BL 0x1C16CF4
	0x034309B8 ADRP X0, 0xCFE000
	0x034309BC LDR X0, [X0 + 0x7B8]
	0x034309C0 BL 0x1C16CF4
	0x034309C4 ADRP X0, 0xCFF000
	0x034309C8 LDR X0, [X0 + 0x170]
	0x034309CC BL 0x1C16CF4
	0x034309D0 ADRP X0, 0xCC6000
	0x034309D4 LDR X0, [X0 + 0x1E0]
	0x034309D8 BL 0x1C16CF4
	0x034309DC ADRP X0, 0xCC6000
	0x034309E0 LDR X0, [X0 + 0x1F0]
	0x034309E4 BL 0x1C16CF4
	0x034309E8 ADRP X0, 0xCC6000
	0x034309EC LDR X0, [X0 + 0x1F8]
	0x034309F0 BL 0x1C16CF4
	0x034309F4 ADRP X0, 0xCCC000
	0x034309F8 LDR X0, [X0 + 0x3A0]
	0x034309FC BL 0x1C16CF4
	0x03430A00 ADRP X0, 0xCEC000
	0x03430A04 LDR X0, [X0 + 0x4D8]
	0x03430A08 BL 0x1C16CF4
	0x03430A0C ADRP X0, 0xCFF000
	0x03430A10 LDR X0, [X0 + 0x178]
	0x03430A14 BL 0x1C16CF4
	0x03430A18 ADRP X0, 0xCFE000
	0x03430A1C LDR X0, [X0 + 0x7D0]
	0x03430A20 BL 0x1C16CF4
	0x03430A24 ADRP X0, 0xCFE000
	0x03430A28 LDR X0, [X0 + 0x7D8]
	0x03430A2C BL 0x1C16CF4
	0x03430A30 ADRP X0, 0xCC3000
	0x03430A34 LDR X0, [X0 + 0x988]
	0x03430A38 BL 0x1C16CF4
	0x03430A3C MOVZ W8, 0x1
	0x03430A40 STRB W8, [X20 + 0x65F]
	0x03430A44 STR X31, [X31 + 0x18]
	0x03430A48 ADRP X28, 0xCFE000
	0x03430A4C LDR W8, [X19]
	0x03430A50 LDR X28, [X28 + 0x568]
	0x03430A54 CBZ W8, 0x3430C34
	0x03430A58 LDR X8, [X19 + 0x20]
	0x03430A5C CBZ X8, 0x3430D6C
	0x03430A60 LDR X25, [X19 + 0x28]
	0x03430A64 CBZ X25, 0x3430DB4
	0x03430A68 LDR X0, [X25 + 0x20]
	0x03430A6C CBZ X0, 0x3430DB8
	0x03430A70 ADRP X8, 0xCFF000
	0x03430A74 ADRP X9, 0xCC3000
	0x03430A78 LDR X8, [X8 + 0x178]
	0x03430A7C LDR X9, [X9 + 0x988]
	0x03430A80 LDR X21, [X8]
	0x03430A84 LDR X20, [X9]
	0x03430A88 MOV X1, X31
	0x03430A8C BL 0x361B448
	0x03430A90 ADRP X8, 0xCCC000
	0x03430A94 LDR X8, [X8 + 0x8D8]
	0x03430A98 MOV X22, X0
	0x03430A9C LDR X0, [X8]
	0x03430AA0 MOVZ W1, 0x1
	0x03430AA4 BL 0x1C16D6C
	0x03430AA8 MOV X1, X0
	0x03430AAC CBZ X1, 0x3430DBC
	0x03430AB0 LDR W8, [X1 + 0x18]
	0x03430AB4 CBZ W8, 0x3430DC0
	0x03430AB8 MOVZ W8, 0x2F
	0x03430ABC STRH W8, [X1 + 0x20]
	0x03430AC0 CBZ X22, 0x3430DC4
	0x03430AC4 MOV X0, X22
	0x03430AC8 MOV X2, X31
	0x03430ACC BL 0x322BC58
	0x03430AD0 MOV X1, X21
	0x03430AD4 MOV X2, X31
	0x03430AD8 BL 0x321B938
	0x03430ADC ADRP X8, 0xCCC000
	0x03430AE0 LDR X8, [X8 + 0x3A0]
	0x03430AE4 MOV X22, X0
	0x03430AE8 LDR X23, [X25 + 0x20]
	0x03430AEC LDR X0, [X8]
	0x03430AF0 BL 0x1C16F10
	0x03430AF4 MOV X21, X0
	0x03430AF8 MOV X1, X23
	0x03430AFC MOV X2, X31
	0x03430B00 BL 0x36281F8
	0x03430B04 CBZ X21, 0x3430DC8
	0x03430B08 MOV X0, X21
	0x03430B0C MOV X1, X22
	0x03430B10 MOV X2, X31
	0x03430B14 BL 0x36288CC
	0x03430B18 MOV X0, X21
	0x03430B1C MOV X1, X20
	0x03430B20 MOV X2, X31
	0x03430B24 BL 0x3628980
	0x03430B28 MOV X0, X21
	0x03430B2C MOV X1, X31
	0x03430B30 BL 0x3628A38
	0x03430B34 ADRP X8, 0xCEC000
	0x03430B38 ADRP X9, 0xCC4000
	0x03430B3C LDR X8, [X8 + 0x4D8]
	0x03430B40 LDR X9, [X9 + 0x6D0]
	0x03430B44 MOV X20, X0
	0x03430B48 LDR X21, [X8]
	0x03430B4C LDR X0, [X9]
	0x03430B50 BL 0x1C16F10
	0x03430B54 ADRP X8, 0xCC4000
	0x03430B58 LDR X8, [X8 + 0x6C0]
	0x03430B5C MOV X22, X0
	0x03430B60 LDR X1, [X8]
	0x03430B64 BL 0x2AA4804
	0x03430B68 ADRP X8, 0xCFE000
	0x03430B6C LDR X8, [X8 + 0x7D8]
	0x03430B70 LDR X1, [X19 + 0x30]
	0x03430B74 LDR X0, [X8]
	0x03430B78 MOV X2, X31
	0x03430B7C BL 0x321B938
	0x03430B80 CBZ X22, 0x3430DCC
	0x03430B84 ADRP X8, 0xCFE000
	0x03430B88 LDR X8, [X8 + 0x7D0]
	0x03430B8C ADRP X9, 0xCC4000
	0x03430B90 LDR X9, [X9 + 0x810]
	0x03430B94 MOV X2, X0
	0x03430B98 LDR X1, [X8]
	0x03430B9C LDR X3, [X9]
	0x03430BA0 MOV X0, X22
	0x03430BA4 BL 0x2AA5098
	0x03430BA8 LDR X0, [X19 + 0x20]
	0x03430BAC MOV X1, X31
	0x03430BB0 BL 0x3483BE4
	0x03430BB4 MOV X23, X0
	0x03430BB8 MOV X0, X31
	0x03430BBC BL 0x3241948
	0x03430BC0 CBZ X0, 0x3430DD0
	0x03430BC4 LDR X8, [X0]
	0x03430BC8 LDR X9, [X8 + 0x268]
	0x03430BCC LDR X2, [X8 + 0x270]
	0x03430BD0 MOV X1, X23
	0x03430BD4 BLR X9
	0x03430BD8 LDR X24, [X25 + 0x10]
	0x03430BDC CBZ X24, 0x3430DD4
	0x03430BE0 ADRP X10, 0xCFE000
	0x03430BE4 LDR X10, [X10 + 0x7B8]
	0x03430BE8 LDR X8, [X24]
	0x03430BEC LDR W26, [X25 + 0x18]
	0x03430BF0 LDP X27, X25, [X19 + 0x38]
	0x03430BF4 LDR X1, [X10]
	0x03430BF8 LDRH W9, [X8 + 0x12E]
	0x03430BFC MOV X23, X0
	0x03430C00 CBZ X9, 0x3430C24
	0x03430C04 LDR X10, [X8 + 0xB0]
	0x03430C08 ADD X10, X10, 0x8
	0x03430C0C LDUR X11, [X10 - 0x8]
	0x03430C10 CMP X11, X1
	0x03430C14 B.EQ 0x3430C4C
	0x03430C18 SUBS X9, X9, 0x1
	0x03430C1C ADD X10, X10, 0x10
	0x03430C20 B.NE 0x3430C0C
	0x03430C24 MOVZ W2, 0x3
	0x03430C28 MOV X0, X24
	0x03430C2C BL 0x1C5C788
	0x03430C30 B 0x3430C5C
	0x03430C34 LDR X8, [X19 + 0x48]
	0x03430C38 MOVN W9, 0x0
	0x03430C3C STR X8, [X31 + 0x18]
	0x03430C40 STR X31, [X19 + 0x48]
	0x03430C44 STR W9, [X19]
	0x03430C48 B 0x3430CB8
	0x03430C4C LDR W9, [X10]
	0x03430C50 ADD W9, W9, 0x3
	0x03430C54 ADD X8, X8, W9, 0x4, SXTW
	0x03430C58 ADD X0, X8, 0x138
	0x03430C5C LDP X8, X9, [X0]
	0x03430C60 MOV X0, X24
	0x03430C64 MOV X1, X21
	0x03430C68 MOV X2, X20
	0x03430C6C MOV X3, X22
	0x03430C70 MOV X4, X23
	0x03430C74 MOV W5, W26
	0x03430C78 MOV X6, X27
	0x03430C7C MOV X7, X25
	0x03430C80 STR X9, [X31]
	0x03430C84 BLR X8
	0x03430C88 CBZ X0, 0x3430DD8
	0x03430C8C ADRP X8, 0xCC6000
	0x03430C90 LDR X8, [X8 + 0x1F8]
	0x03430C94 LDR X1, [X8]
	0x03430C98 BL 0x269F5D0
	0x03430C9C ADRP X8, 0xCC6000
	0x03430CA0 LDR X8, [X8 + 0x1F0]
	0x03430CA4 STR X0, [X31 + 0x18]
	0x03430CA8 LDR X1, [X8]
	0x03430CAC ADD X0, X31, 0x18
	0x03430CB0 BL 0x2677430
	0x03430CB4 TBZ X0, 0x0, 0x3430D14
	0x03430CB8 ADRP X8, 0xCC6000
	0x03430CBC LDR X8, [X8 + 0x1E0]
	0x03430CC0 ADD X0, X31, 0x18
	0x03430CC4 LDR X1, [X8]
	0x03430CC8 BL 0x2677474
	0x03430CCC ADRP X8, 0xCFF000
	0x03430CD0 LDR X8, [X8 + 0x170]
	0x03430CD4 LDR X1, [X8]
	0x03430CD8 BL 0x220E6DC
	0x03430CDC MOVN W8, 0x1
	0x03430CE0 STR W8, [X19], #0x8
	0x03430CE4 MOV X20, X0
	0x03430CE8 LDR X0, [X28]
	0x03430CEC ADRP X21, 0xCFF000
	0x03430CF0 LDR W8, [X0 + 0xE0]
	0x03430CF4 LDR X21, [X21 + 0x168]
	0x03430CF8 CBNZ W8, 0x3430D00
	0x03430CFC BL 0x1C16DFC
	0x03430D00 LDR X2, [X21]
	0x03430D04 MOV X0, X19
	0x03430D08 MOV X1, X20
	0x03430D0C BL 0x26322B0
	0x03430D10 B 0x3430D4C
	0x03430D14 STR W31, [X19]
	0x03430D18 LDR X8, [X31 + 0x18]
	0x03430D1C STR X8, [X19 + 0x48]
	0x03430D20 LDR X0, [X28]
	0x03430D24 LDR W8, [X0 + 0xE0]
	0x03430D28 CBNZ W8, 0x3430D30
	0x03430D2C BL 0x1C16DFC
	0x03430D30 ADRP X8, 0xCFF000
	0x03430D34 LDR X8, [X8 + 0x160]
	0x03430D38 ADD X0, X19, 0x8
	0x03430D3C LDR X3, [X8]
	0x03430D40 ADD X1, X31, 0x18
	0x03430D44 MOV X2, X19
	0x03430D48 BL 0x1FB4824
	0x03430D4C LDP X20, X19, [X31 + 0x60]
	0x03430D50 LDP X22, X21, [X31 + 0x50]
	0x03430D54 LDP X24, X23, [X31 + 0x40]
	0x03430D58 LDP X26, X25, [X31 + 0x30]
	0x03430D5C LDP X28, X27, [X31 + 0x20]
	0x03430D60 LDR X30, [X31 + 0x10]
	0x03430D64 ADD X31, X31, 0x70
	0x03430D68 RET
	0x03430D6C ADRP X0, 0xCCB000
	0x03430D70 LDR X0, [X0 + 0x578]
	0x03430D74 BL 0x1C16D08
	0x03430D78 BL 0x1C16F10
	0x03430D7C MOV X20, X0
	0x03430D80 ADRP X0, 0xCFE000
	0x03430D84 LDR X0, [X0 + 0xBC8]
	0x03430D88 BL 0x1C16D08
	0x03430D8C MOV X1, X0
	0x03430D90 MOV X0, X20
	0x03430D94 MOV X2, X31
	0x03430D98 BL 0x3314A68
	0x03430D9C ADRP X0, 0xCFF000
	0x03430DA0 LDR X0, [X0 + 0x180]
	0x03430DA4 BL 0x1C16D08
	0x03430DA8 MOV X1, X0
	0x03430DAC MOV X0, X20
	0x03430DB0 BL 0x1C16DEC
	0x03430DB4 BL 0x1C16F20
	0x03430DB8 BL 0x1C16F20
	0x03430DBC BL 0x1C16F20
	0x03430DC0 BL 0x1C16F28
	0x03430DC4 BL 0x1C16F20
	0x03430DC8 BL 0x1C16F20
	0x03430DCC BL 0x1C16F20
	0x03430DD0 BL 0x1C16F20
	0x03430DD4 BL 0x1C16F20
	0x03430DD8 BL 0x1C16F20
	0x03430DDC B 0x3430E40
	0x03430DE0 B 0x3430E40
	0x03430DE4 B 0x3430E40
	0x03430DE8 B 0x3430E40
	0x03430DEC B 0x3430E40
	0x03430DF0 B 0x3430E40
	0x03430DF4 B 0x3430E40
	0x03430DF8 B 0x3430E40
	0x03430DFC B 0x3430E40
	0x03430E00 B 0x3430E40
	0x03430E04 B 0x3430E40
	0x03430E08 B 0x3430E40
	0x03430E0C B 0x3430E40
	0x03430E10 B 0x3430E40
	0x03430E14 B 0x3430E40
	0x03430E18 B 0x3430E40
	0x03430E1C B 0x3430E40
	0x03430E20 B 0x3430E40
	0x03430E24 B 0x3430E40
	0x03430E28 B 0x3430E40
	0x03430E2C B 0x3430E40
	0x03430E30 B 0x3430E40
	0x03430E34 B 0x3430E40
	0x03430E38 B 0x3430E40
	0x03430E3C B 0x3430E40
	0x03430E40 MOV X20, X0
	0x03430E44 CMP W1, 0x1
	0x03430E48 B.NE 0x3430EE4
	0x03430E4C MOV X0, X20
	0x03430E50 BL 0x3EB1AD0
	0x03430E54 MOV X20, X0
	0x03430E58 ADRP X0, 0xCC3000
	0x03430E5C LDR X0, [X0 + 0x7D0]
	0x03430E60 BL 0x1C16D08
	0x03430E64 LDR X8, [X20]
	0x03430E68 LDR X1, [X8]
	0x03430E6C BL 0x1C17270
	0x03430E70 TBZ X0, 0x0, 0x3430EBC
	0x03430E74 LDR X20, [X20]
	0x03430E78 BL 0x3EB1AE0
	0x03430E7C MOVN W8, 0x1
	0x03430E80 STR W8, [X19], #0x8
	0x03430E84 ADRP X0, 0xCFE000
	0x03430E88 LDR X0, [X0 + 0x568]
	0x03430E8C BL 0x1C16D08
	0x03430E90 LDR W8, [X0 + 0xE0]
	0x03430E94 CBNZ W8, 0x3430E9C
	0x03430E98 BL 0x1C16DFC
	0x03430E9C ADRP X0, 0xCFF000
	0x03430EA0 LDR X0, [X0 + 0x188]
	0x03430EA4 BL 0x1C16D08
	0x03430EA8 MOV X2, X0
	0x03430EAC MOV X0, X19
	0x03430EB0 MOV X1, X20
	0x03430EB4 BL 0x26324C8
	0x03430EB8 B 0x3430D4C
	0x03430EBC MOVZ W0, 0x8
	0x03430EC0 BL 0x3EB1AF0
	0x03430EC4 LDR X8, [X20]
	0x03430EC8 STR X8, [X0]
	0x03430ECC ADRP X1, 0xA84000
	0x03430ED0 ADD X1, X1, 0xE58
	0x03430ED4 MOV X2, X31
	0x03430ED8 BL 0x3EB1B00
	0x03430EDC MOV X20, X0
	0x03430EE0 BL 0x3EB1AE0
	0x03430EE4 MOV X0, X20
	0x03430EE8 BL 0x1D2C690
	0x03430EEC BL 0x1990590
	0x03430EF0 STR X30, [X31 - 0x30]!
	0x03430EF4 STP X22, X21, [X31 + 0x10]
	0x03430EF8 STP X20, X19, [X31 + 0x20]
	0x03430EFC ADRP X22, 0xFAD000
	0x03430F00 ADRP X21, 0xCFE000
	0x03430F04 LDRB W8, [X22 + 0x660]
	0x03430F08 LDR X21, [X21 + 0x568]
	0x03430F0C MOV X19, X1
	0x03430F10 MOV X20, X0
	0x03430F14 TBNZ X8, 0x0, 0x3430F38
	0x03430F18 ADRP X0, 0xCFF000
	0x03430F1C LDR X0, [X0 + 0x190]
	0x03430F20 BL 0x1C16CF4
	0x03430F24 ADRP X0, 0xCFE000
	0x03430F28 LDR X0, [X0 + 0x568]
	0x03430F2C BL 0x1C16CF4
	0x03430F30 MOVZ W8, 0x1
	0x03430F34 STRB W8, [X22 + 0x660]
	0x03430F38 LDR X0, [X21]
	0x03430F3C ADRP X21, 0xCFF000
	0x03430F40 LDR W8, [X0 + 0xE0]
	0x03430F44 LDR X21, [X21 + 0x190]
	0x03430F48 CBNZ W8, 0x3430F50
	0x03430F4C BL 0x1C16DFC
	0x03430F50 LDR X2, [X21]
	0x03430F54 ADD X0, X20, 0x8
	0x03430F58 MOV X1, X19
	0x03430F5C LDP X20, X19, [X31 + 0x20]
	0x03430F60 LDP X22, X21, [X31 + 0x10]
	0x03430F64 LDR X30, [X31], #0x30
	0x03430F68 B 0x2632228
	0x03430F6C SUB X31, X31, 0x70
	0x03430F70 STP X30, X27, [X31 + 0x20]
	0x03430F74 STP X26, X25, [X31 + 0x30]
	0x03430F78 STP X24, X23, [X31 + 0x40]
	0x03430F7C STP X22, X21, [X31 + 0x50]
	0x03430F80 STP X20, X19, [X31 + 0x60]
	0x03430F84 ADRP X20, 0xFAD000
	0x03430F88 LDRB W8, [X20 + 0x661]
	0x03430F8C MOV X19, X0
	0x03430F90 TBNZ X8, 0x0, 0x34310EC
	0x03430F94 ADRP X0, 0xCFF000
	0x03430F98 LDR X0, [X0 + 0x198]
	0x03430F9C BL 0x1C16CF4
	0x03430FA0 ADRP X0, 0xCFF000
	0x03430FA4 LDR X0, [X0 + 0x1A0]
	0x03430FA8 BL 0x1C16CF4
	0x03430FAC ADRP X0, 0xCFE000
	0x03430FB0 LDR X0, [X0 + 0x730]
	0x03430FB4 BL 0x1C16CF4
	0x03430FB8 ADRP X0, 0xCCC000
	0x03430FBC LDR X0, [X0 + 0x8D8]
	0x03430FC0 BL 0x1C16CF4
	0x03430FC4 ADRP X0, 0xCC4000
	0x03430FC8 LDR X0, [X0 + 0x810]
	0x03430FCC BL 0x1C16CF4
	0x03430FD0 ADRP X0, 0xCC4000
	0x03430FD4 LDR X0, [X0 + 0x6C0]
	0x03430FD8 BL 0x1C16CF4
	0x03430FDC ADRP X0, 0xCC4000
	0x03430FE0 LDR X0, [X0 + 0x6D0]
	0x03430FE4 BL 0x1C16CF4
	0x03430FE8 ADRP X0, 0xCFE000
	0x03430FEC LDR X0, [X0 + 0x7B8]
	0x03430FF0 BL 0x1C16CF4
	0x03430FF4 ADRP X0, 0xCFF000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xFAE000
	013 Move W8, [X20+1627]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {102}
	019 Move X0, 0xD00000
	020 Move X0, [X0+232]
	021 Call 0x1C17CF4
	022 Move X0, 0xD00000
	023 Move X0, [X0+240]
	024 Call 0x1C17CF4
	025 Move X0, 0xCFF000
	026 Move X0, [X0+1760]
	027 Call 0x1C17CF4
	028 Move X0, 0xCCD000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC5000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC5000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCC5000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xCFF000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xD00000
	044 Move X0, [X0+248]
	045 Call 0x1C17CF4
	046 Move X0, 0xCC7000
	047 Move X0, [X0+3832]
	048 Call 0x1C17CF4
	049 Move X0, 0xCC5000
	050 Move X0, [X0+1144]
	051 Call 0x1C17CF4
	052 Move X0, 0xCC4000
	053 Move X0, [X0+2512]
	054 Call 0x1C17CF4
	055 Move X0, 0xCC7000
	056 Move X0, [X0+480]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC7000
	059 Move X0, [X0+496]
	060 Call 0x1C17CF4
	061 Move X0, 0xCC7000
	062 Move X0, [X0+504]
	063 Call 0x1C17CF4
	064 Move X0, 0xCCD000
	065 Move X0, [X0+928]
	066 Call 0x1C17CF4
	067 Move X0, 0xCC6000
	068 Move X0, [X0+2600]
	069 Call 0x1C17CF4
	070 Move X0, 0xD00000
	071 Move X0, [X0+256]
	072 Call 0x1C17CF4
	073 Move X0, 0xCED000
	074 Move X0, [X0+1232]
	075 Call 0x1C17CF4
	076 Move X0, 0xCCD000
	077 Move X0, [X0+1824]
	078 Call 0x1C17CF4
	079 Move X0, 0xCFF000
	080 Move X0, [X0+2000]
	081 Call 0x1C17CF4
	082 Move X0, 0xCFF000
	083 Move X0, [X0+3864]
	084 Call 0x1C17CF4
	085 Move X0, 0xD00000
	086 Move X0, [X0+264]
	087 Call 0x1C17CF4
	088 Move X0, 0xCFF000
	089 Move X0, [X0+2008]
	090 Call 0x1C17CF4
	091 Move X0, 0xCC4000
	092 Move X0, [X0+2440]
	093 Call 0x1C17CF4
	094 Move X0, 0xCFF000
	095 Move X0, [X0+3872]
	096 Call 0x1C17CF4
	097 Move X0, 0xD00000
	098 Move X0, [X0+272]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X20+1627], W8
	102 Move [X31+24], X31
	103 Move X27, 0xCFF000
	104 Move W8, [X19]
	105 Move X27, [X27+1760]
	106 Compare W8, 0
	107 JumpIfEqual {354}
	108 Move X21, [X19+32]
	109 Compare X21, 0
	110 JumpIfEqual {445}
	111 Move X8, [X19+40]
	112 Compare X8, 0
	113 JumpIfEqual {463}
	114 Move X23, 0xCC6000
	115 Move X23, [X23+2600]
	116 Move X8, 0xD00000
	117 Move X0, [X23]
	118 Move X8, [X8+264]
	119 Move X24, [X19+64]
	120 Move W9, [X0+224]
	121 Move X20, [X8]
	122 Compare W9, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X21
	126 Move X1, X31
	127 Call Uri.EscapeDataString, X0
	128 Compare X20, 0
	129 JumpIfEqual {481}
	130 Move X8, 0xD00000
	131 Move X8, [X8+256]
	132 Move X2, X0
	133 Move X1, [X8]
	134 Move X0, X20
	135 Move X3, X31
	136 Call String.Replace, X0, X1, X2
	137 Move X20, X0
	138 Move X0, [X19+40]
	139 Move X1, X31
	140 Call Uri.EscapeDataString, X0
	141 Compare X20, 0
	142 JumpIfEqual {482}
	143 Move X8, 0xD00000
	144 Move X8, [X8+272]
	145 Move X2, X0
	146 Move X1, [X8]
	147 Move X0, X20
	148 Move X3, X31
	149 Call String.Replace, X0, X1, X2
	150 Move X8, 0xCC4000
	151 Move X8, [X8+2440]
	152 Move W9, [X19+48]
	153 Move X20, X0
	154 Move X21, [X8]
	155 Compare W9, 0
	156 JumpIfEqual {228}
	157 Move X8, 0xCC4000
	158 Move X8, [X8+2512]
	159 Move X0, [X8]
	160 Move W1, 4
	161 Call 0x1C17D6C
	162 Move X22, X0
	163 Compare X0, 0
	164 JumpIfEqual {492}
	165 Compare X21, 0
	166 JumpIfEqual {173}
	167 Move X8, [X22]
	168 Move X1, [X8+64]
	169 Move X0, X21
	170 Call 0x1C17E00
	171 Compare X0, 0
	172 JumpIfEqual {497}
	173 Move W8, [X22+24]
	174 Compare W8, 0
	175 JumpIfEqual {493}
	176 Move [X22+32], X21
	177 Move X21, 0xCFF000
	178 Move X21, [X21+3864]
	179 Move X0, [X21]
	180 Compare X0, 0
	181 JumpIfEqual {188}
	182 Move X8, [X22]
	183 Move X1, [X8+64]
	184 Call 0x1C17E00
	185 Compare X0, 0
	186 JumpIfEqual {500}
	187 Move W8, [X22+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, [X21]
	190 Move X9, 0xCC5000
	191 Move [X22+40], X8
	192 Move X8, [X19+48]
	193 Move X9, [X9+1144]
	194 Move [X31+16], X8
	195 Move X0, [X9]
	196 Add X1, X31, 16
	197 Call 0x1C17E04
	198 Move X21, X0
	199 Compare X0, 0
	200 JumpIfEqual {207}
	201 Move X8, [X22]
	202 Move X1, [X8+64]
	203 Move X0, X21
	204 Call 0x1C17E00
	205 Compare X0, 0
	206 JumpIfEqual {503}
	207 Move W8, [X22+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move [X22+48], X21
	210 Move X21, 0xCCD000
	211 Move X21, [X21+1824]
	212 Move X0, [X21]
	213 Compare X0, 0
	214 JumpIfEqual {221}
	215 Move X8, [X22]
	216 Move X1, [X8+64]
	217 Call 0x1C17E00
	218 Compare X0, 0
	219 JumpIfEqual {506}
	220 Move W8, [X22+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X8, [X21]
	223 Move [X22+56], X8
	224 Move X0, X22
	225 Move X1, X31
	226 Call String.Concat, X0
	227 Move X21, X0
	228 Move X22, [X19+56]
	229 Compare X22, 0
	230 JumpIfEqual {250}
	231 Move X0, [X23]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move X0, X22
	237 Move X1, X31
	238 Call Uri.EscapeDataString, X0
	239 Move X8, 0xCFF000
	240 Move X8, [X8+3872]
	241 Move X9, 0xCCD000
	242 Move X9, [X9+1824]
	243 Move X2, X0
	244 Move X1, [X8]
	245 Move X3, [X9]
	246 Move X0, X21
	247 Move X4, X31
	248 Call String.Concat, X0, X1, X2, X3
	249 Move X21, X0
	250 Compare X24, 0
	251 JumpIfEqual {483}
	252 Move X0, [X24+32]
	253 Compare X0, 0
	254 JumpIfEqual {484}
	255 Move X1, X31
	256 Call Uri.get_AbsolutePath, X0
	257 Move X8, 0xCCD000
	258 Move X8, [X8+2264]
	259 Move X22, X0
	260 Move X0, [X8]
	261 Move W1, 1
	262 Call 0x1C17D6C
	263 Move X1, X0
	264 Compare X1, 0
	265 JumpIfEqual {485}
	266 Move W8, [X1+24]
	267 Compare W8, 0
	268 JumpIfEqual {486}
	269 Move W8, 47
	270 NotImplemented "Instruction STRH not yet implemented."
	271 Compare X22, 0
	272 JumpIfEqual {487}
	273 Move X0, X22
	274 Move X2, X31
	275 Call String.TrimEnd, X0, X1
	276 Move X1, X20
	277 Move X2, X31
	278 Call String.Concat, X0, X1
	279 Move X8, 0xCCD000
	280 Move X8, [X8+928]
	281 Move X22, X0
	282 Move X23, [X24+32]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X20, X0
	286 Move X1, X23
	287 Move X2, X31
	288 Call UriBuilder..ctor, X0, X1
	289 Compare X20, 0
	290 JumpIfEqual {488}
	291 Move X0, X20
	292 Move X1, X22
	293 Move X2, X31
	294 Call UriBuilder.set_Path, X0, X1
	295 Move X0, X20
	296 Move X1, X21
	297 Move X2, X31
	298 Call UriBuilder.set_Query, X0, X1
	299 Move X0, X20
	300 Move X1, X31
	301 Call UriBuilder.get_Uri, X0
	302 Move X8, 0xCED000
	303 Move X9, 0xCC5000
	304 Move X8, [X8+1232]
	305 Move X9, [X9+1744]
	306 Move X20, X0
	307 Move X21, [X8]
	308 Move X0, [X9]
	309 Call 0x1C17F10
	310 Move X8, 0xCC5000
	311 Move X8, [X8+1728]
	312 Move X22, X0
	313 Move X1, [X8]
	314 Call Dictionary`2<Object, Object>..ctor, X0
	315 Move X8, 0xCFF000
	316 Move X8, [X8+2008]
	317 Move X1, [X19+72]
	318 Move X0, [X8]
	319 Move X2, X31
	320 Call String.Concat, X0, X1
	321 Compare X22, 0
	322 JumpIfEqual {489}
	323 Move X8, 0xCFF000
	324 Move X8, [X8+2000]
	325 Move X9, 0xCC5000
	326 Move X9, [X9+2064]
	327 Move X2, X0
	328 Move X1, [X8]
	329 Move X3, [X9]
	330 Move X0, X22
	331 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	332 Move X23, [X24+16]
	333 Compare X23, 0
	334 JumpIfEqual {490}
	335 Move X10, 0xCFF000
	336 Move X10, [X10+1976]
	337 Move X8, [X23]
	338 Move W25, [X24+24]
	339 Move X26, [X19+80]
	340 Move X24, [X19+88]
	341 Move X1, [X10]
	342 NotImplemented "Instruction LDRH not yet implemented."
	343 Compare X9, 0
	344 JumpIfEqual {351}
	345 Move X10, [X8+176]
	346 Add X10, X10, 8
	347 NotImplemented "Instruction LDUR not yet implemented."
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Subtract X9, X9, 1
	350 Add X10, X10, 16
	351 Move W2, 3
	352 Move X0, X23
	353 Call 0x1C5D788
	354 Move X8, [X19+96]
	355 Move TEMP, 0
	356 Not TEMP
	357 Move W9, TEMP
	358 Move [X31+24], X8
	359 Move [X19+96], X31
	360 Move [X19], W9
	361 Move W9, [X10]
	362 Add W9, W9, 3
	363 Add X8, X8, W9
	364 Add X0, X8, 312
	365 Move X8, [X0]
	366 Move X9, [X0+8]
	367 Move X0, X23
	368 Move X1, X21
	369 Move X2, X20
	370 Move X3, X22
	371 Move X4, X31
	372 Move W5, W25
	373 Move X6, X26
	374 Move X7, X24
	375 Move [X31], X9
	376 NotImplemented "Instruction BLR not yet implemented."
	377 Compare X0, 0
	378 JumpIfEqual {491}
	379 Move X8, 0xCC7000
	380 Move X8, [X8+504]
	381 Move X1, [X8]
	382 Call Task`1<Object>.GetAwaiter, X0
	383 Move X8, 0xCC7000
	384 Move X8, [X8+496]
	385 Move [X31+24], X0
	386 Move X1, [X8]
	387 Add X0, X31, 24
	388 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	389 Move TEMP, X0
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfNotEqual {418}
	393 Move X8, 0xCC7000
	394 Move X8, [X8+480]
	395 Add X0, X31, 24
	396 Move X1, [X8]
	397 Call TaskAwaiter`1<Object>.GetResult, X0
	398 Move X8, 0xD00000
	399 Move X8, [X8+248]
	400 Move X1, [X8]
	401 Call JsonParser.FromJson, X0
	402 Move TEMP, 1
	403 Not TEMP
	404 Move W8, TEMP
	405 Move [X19+8], W8
	406 Move X20, X0
	407 Move X0, [X27]
	408 Move X21, 0xD00000
	409 Move W8, [X0+224]
	410 Move X21, [X21+240]
	411 Compare W8, 0
	412 JumpIfNotEqual {414}
	413 Call 0x1C17DFC
	414 Move X2, [X21]
	415 Move X0, X19
	416 Move X1, X20
	417 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	418 Move [X19], W31
	419 Move X8, [X31+24]
	420 Move [X19+96], X8
	421 Move X0, [X27]
	422 Move W8, [X0+224]
	423 Compare W8, 0
	424 JumpIfNotEqual {426}
	425 Call 0x1C17DFC
	426 Move X8, 0xD00000
	427 Move X8, [X8+232]
	428 Add X0, X19, 8
	429 Move X3, [X8]
	430 Add X1, X31, 24
	431 Move X2, X19
	432 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	433 Move X20, [X31+96]
	434 Move X19, [X31+104]
	435 Move X22, [X31+80]
	436 Move X21, [X31+88]
	437 Move X24, [X31+64]
	438 Move X23, [X31+72]
	439 Move X26, [X31+48]
	440 Move X25, [X31+56]
	441 Move X30, [X31+32]
	442 Move X27, [X31+40]
	443 Add X31, X31, 112
	444 Return 
	445 Move X0, 0xCCC000
	446 Move X0, [X0+1400]
	447 Call 0x1C17D08
	448 Call 0x1C17F10
	449 Move X20, X0
	450 Move X0, 0xD00000
	451 Move X0, [X0+280]
	452 Call 0x1C17D08
	453 Move X1, X0
	454 Move X0, X20
	455 Move X2, X31
	456 Call ArgumentException..ctor, X0, X1
	457 Move X0, 0xD00000
	458 Move X0, [X0+288]
	459 Call 0x1C17D08
	460 Move X1, X0
	461 Move X0, X20
	462 Call 0x1C17DEC
	463 Move X0, 0xCCC000
	464 Move X0, [X0+1400]
	465 Call 0x1C17D08
	466 Call 0x1C17F10
	467 Move X20, X0
	468 Move X0, 0xD00000
	469 Move X0, [X0+296]
	470 Call 0x1C17D08
	471 Move X1, X0
	472 Move X0, X20
	473 Move X2, X31
	474 Call ArgumentException..ctor, X0, X1
	475 Move X0, 0xD00000
	476 Move X0, [X0+288]
	477 Call 0x1C17D08
	478 Move X1, X0
	479 Move X0, X20
	480 Call 0x1C17DEC
	481 Call 0x1C17F20
	482 Call 0x1C17F20
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Call 0x1C17F28
	487 Call 0x1C17F20
	488 Call 0x1C17F20
	489 Call 0x1C17F20
	490 Call 0x1C17F20
	491 Call 0x1C17F20
	492 Call 0x1C17F20
	493 Call 0x1C17F28
	494 Call 0x1C17F28
	495 Call 0x1C17F28
	496 Call 0x1C17F28
	497 Call 0x1C17F44
	498 Move X1, X31
	499 Call 0x1C17DEC
	500 Call 0x1C17F44
	501 Move X1, X31
	502 Call 0x1C17DEC
	503 Call 0x1C17F44
	504 Move X1, X31
	505 Call 0x1C17DEC
	506 Call 0x1C17F44
	507 Move X1, X31
	508 Call 0x1C17DEC
	509 Move X20, X0
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Move X0, X20
	512 Call 0x3EB2AD0
	513 Move X20, X0
	514 Move X0, 0xCC4000
	515 Move X0, [X0+2000]
	516 Call 0x1C17D08
	517 Move X8, [X20]
	518 Move X1, [X8]
	519 Call 0x1C18270
	520 Move TEMP, X0
	521 And TEMP, TEMP, 1
	522 Compare TEMP, 1
	523 JumpIfNotEqual {544}
	524 Move X20, [X20]
	525 Call 0x3EB2AE0
	526 Move TEMP, 1
	527 Not TEMP
	528 Move W8, TEMP
	529 Move [X19+8], W8
	530 Move X0, 0xCFF000
	531 Move X0, [X0+1760]
	532 Call 0x1C17D08
	533 Move W8, [X0+224]
	534 Compare W8, 0
	535 JumpIfNotEqual {537}
	536 Call 0x1C17DFC
	537 Move X0, 0xD00000
	538 Move X0, [X0+304]
	539 Call 0x1C17D08
	540 Move X2, X0
	541 Move X0, X19
	542 Move X1, X20
	543 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	544 Move W0, 8
	545 Call 0x3EB2AF0
	546 Move X8, [X20]
	547 Move [X0], X8
	548 Move X1, 0xA85000
	549 Add X1, X1, 3672
	550 Move X2, X31
	551 Call 0x3EB2B00
	552 Move X20, X0
	553 Call 0x3EB2AE0
	554 Move X0, X20
	555 Call 0x1D2D690
	556 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03430FF8 LDR X0, [X0 + 0x1A8]
	0x03430FFC BL 0x1C16CF4
	0x03431000 ADRP X0, 0xCC5000
	0x03431004 LDR X0, [X0 + 0xEF8]
	0x03431008 BL 0x1C16CF4
	0x0343100C ADRP X0, 0xCC3000
	0x03431010 LDR X0, [X0 + 0x478]
	0x03431014 BL 0x1C16CF4
	0x03431018 ADRP X0, 0xCC2000
	0x0343101C LDR X0, [X0 + 0x9D0]
	0x03431020 BL 0x1C16CF4
	0x03431024 ADRP X0, 0xCC5000
	0x03431028 LDR X0, [X0 + 0x1E0]
	0x0343102C BL 0x1C16CF4
	0x03431030 ADRP X0, 0xCC5000
	0x03431034 LDR X0, [X0 + 0x1F0]
	0x03431038 BL 0x1C16CF4
	0x0343103C ADRP X0, 0xCC5000
	0x03431040 LDR X0, [X0 + 0x1F8]
	0x03431044 BL 0x1C16CF4
	0x03431048 ADRP X0, 0xCCB000
	0x0343104C LDR X0, [X0 + 0x3A0]
	0x03431050 BL 0x1C16CF4
	0x03431054 ADRP X0, 0xCC4000
	0x03431058 LDR X0, [X0 + 0xA28]
	0x0343105C BL 0x1C16CF4
	0x03431060 ADRP X0, 0xCEB000
	0x03431064 LDR X0, [X0 + 0x4D0]
	0x03431068 BL 0x1C16CF4
	0x0343106C ADRP X0, 0xCFE000
	0x03431070 LDR X0, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFAD000
	007 Move X21, 0xCFE000
	008 Move W8, [X22+1628]
	009 Move X21, [X21+1760]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCFF000
	017 Move X0, [X0+312]
	018 Call 0x1C17CF4
	019 Move X0, 0xCFE000
	020 Move X0, [X0+1760]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1628], W8
	024 Move X0, [X21]
	025 Move X21, 0xCFF000
	026 Move W8, [X0+224]
	027 Move X21, [X21+312]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

