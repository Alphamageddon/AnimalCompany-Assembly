Type: Nakama.Socket/<CreatePartyAsync>d__83

Method: System.Void MoveNext()

Disassembly:
	0x03481E8C LDR X0, [X0 + 0xC50]
	0x03481E90 BL 0x1C16D08
	0x03481E94 LDR W8, [X0 + 0xE0]
	0x03481E98 CBNZ W8, 0x3481EA0
	0x03481E9C BL 0x1C16DFC
	0x03481EA0 ADRP X0, 0xCAF000
	0x03481EA4 LDR X0, [X0 + 0xEF0]
	0x03481EA8 BL 0x1C16D08
	0x03481EAC MOV X2, X0
	0x03481EB0 MOV X0, X19
	0x03481EB4 MOV X1, X20
	0x03481EB8 BL 0x26324C8
	0x03481EBC B 0x3481DA4
	0x03481EC0 MOVZ W0, 0x8
	0x03481EC4 BL 0x3EB1AF0
	0x03481EC8 LDR X8, [X20]
	0x03481ECC STR X8, [X0]
	0x03481ED0 ADRP X1, 0xA33000
	0x03481ED4 ADD X1, X1, 0xE58
	0x03481ED8 MOV X2, X31
	0x03481EDC BL 0x3EB1B00
	0x03481EE0 MOV X20, X0
	0x03481EE4 BL 0x3EB1AE0
	0x03481EE8 MOV X0, X20
	0x03481EEC BL 0x1D2C690
	0x03481EF0 BL 0x1990590
	0x03481EF4 STR X30, [X31 - 0x30]!
	0x03481EF8 STP X22, X21, [X31 + 0x10]
	0x03481EFC STP X20, X19, [X31 + 0x20]
	0x03481F00 ADRP X22, 0xF5C000
	0x03481F04 ADRP X21, 0xCAF000
	0x03481F08 LDRB W8, [X22 + 0x8C5]
	0x03481F0C LDR X21, [X21 + 0xC50]
	0x03481F10 MOV X19, X1
	0x03481F14 MOV X20, X0
	0x03481F18 TBNZ X8, 0x0, 0x3481F3C
	0x03481F1C ADRP X0, 0xCAF000
	0x03481F20 LDR X0, [X0 + 0xEF8]
	0x03481F24 BL 0x1C16CF4
	0x03481F28 ADRP X0, 0xCAF000
	0x03481F2C LDR X0, [X0 + 0xC50]
	0x03481F30 BL 0x1C16CF4
	0x03481F34 MOVZ W8, 0x1
	0x03481F38 STRB W8, [X22 + 0x8C5]
	0x03481F3C LDR X0, [X21]
	0x03481F40 ADRP X21, 0xCAF000
	0x03481F44 LDR W8, [X0 + 0xE0]
	0x03481F48 LDR X21, [X21 + 0xEF8]
	0x03481F4C CBNZ W8, 0x3481F54
	0x03481F50 BL 0x1C16DFC
	0x03481F54 LDR X2, [X21]
	0x03481F58 ADD X0, X20, 0x8
	0x03481F5C MOV X1, X19
	0x03481F60 LDP X20, X19, [X31 + 0x20]
	0x03481F64 LDP X22, X21, [X31 + 0x10]
	0x03481F68 LDR X30, [X31], #0x30
	0x03481F6C B 0x2632228
	0x03481F70 SUB X31, X31, 0x40
	0x03481F74 STP X30, X23, [X31 + 0x10]
	0x03481F78 STP X22, X21, [X31 + 0x20]
	0x03481F7C STP X20, X19, [X31 + 0x30]
	0x03481F80 ADRP X20, 0xF5C000
	0x03481F84 LDRB W8, [X20 + 0x8C6]
	0x03481F88 MOV X19, X0
	0x03481F8C TBNZ X8, 0x0, 0x3482010
	0x03481F90 ADRP X0, 0xCAF000
	0x03481F94 LDR X0, [X0 + 0xF90]
	0x03481F98 BL 0x1C16CF4
	0x03481F9C ADRP X0, 0xCAF000
	0x03481FA0 LDR X0, [X0 + 0xEE0]
	0x03481FA4 BL 0x1C16CF4
	0x03481FA8 ADRP X0, 0xCAF000
	0x03481FAC LDR X0, [X0 + 0xC50]
	0x03481FB0 BL 0x1C16CF4
	0x03481FB4 ADRP X0, 0xC72000
	0x03481FB8 LDR X0, [X0 + 0x758]
	0x03481FBC BL 0x1C16CF4
	0x03481FC0 ADRP X0, 0xCAF000
	0x03481FC4 LDR X0, [X0 + 0xF88]
	0x03481FC8 BL 0x1C16CF4
	0x03481FCC ADRP X0, 0xCAF000
	0x03481FD0 LDR X0, [X0 + 0xE88]
	0x03481FD4 BL 0x1C16CF4
	0x03481FD8 ADRP X0, 0xCAF000
	0x03481FDC LDR X0, [X0 + 0xE90]
	0x03481FE0 BL 0x1C16CF4
	0x03481FE4 ADRP X0, 0xCAF000
	0x03481FE8 LDR X0, [X0 + 0xE98]
	0x03481FEC BL 0x1C16CF4
	0x03481FF0 ADRP X0, 0xCAF000
	0x03481FF4 LDR X0, [X0 + 0xBC8]
	0x03481FF8 BL 0x1C16CF4
	0x03481FFC ADRP X0, 0xC76000
	0x03482000 LDR X0, [X0 + 0x110]
	0x03482004 BL 0x1C16CF4
	0x03482008 MOVZ W8, 0x1
	0x0348200C STRB W8, [X20 + 0x8C6]
	0x03482010 STR X31, [X31 + 0x8]
	0x03482014 ADRP X23, 0xCAE000
	0x03482018 LDR W8, [X19]
	0x0348201C LDR X23, [X23 + 0xC50]
	0x03482020 CBZ W8, 0x3482140
	0x03482024 LDR X20, [X19 + 0x20]
	0x03482028 CBZ X20, 0x34821B8
	0x0348202C ADD X0, X20, 0x10
	0x03482030 MOV X1, X31
	0x03482034 BL 0x33EB14C
	0x03482038 ADRP X8, 0xCAE000
	0x0348203C LDR X8, [X8 + 0xBC8]
	0x03482040 MOV W22, W0
	0x03482044 LDR X0, [X8]
	0x03482048 BL 0x1C16F10
	0x0348204C MOV X21, X0
	0x03482050 MOV X1, X31
	0x03482054 BL 0x33BDD8C
	0x03482058 ADRP X8, 0xC71000
	0x0348205C LDR X8, [X8 + 0x758]
	0x03482060 STR W22, [X31 + 0x4]
	0x03482064 LDR X0, [X8]
	0x03482068 ADD X1, X31, 0x4
	0x0348206C BL 0x1C16E04
	0x03482070 MOV X1, X0
	0x03482074 ADRP X8, 0xC75000
	0x03482078 LDR X8, [X8 + 0x110]
	0x0348207C LDR X0, [X8]
	0x03482080 MOV X2, X31
	0x03482084 BL 0x321EFD0
	0x03482088 CBZ X21, 0x34821BC
	0x0348208C ADRP X8, 0xCAE000
	0x03482090 LDR X8, [X8 + 0xF88]
	0x03482094 STR X0, [X21 + 0x10]
	0x03482098 LDR X0, [X8]
	0x0348209C BL 0x1C16F10
	0x034820A0 MOV X22, X0
	0x034820A4 MOV X1, X31
	0x034820A8 BL 0x3475FEC
	0x034820AC CBZ X22, 0x34821C0
	0x034820B0 LDR X8, [X19 + 0x28]
	0x034820B4 STR X8, [X22 + 0x10]
	0x034820B8 LDR X8, [X19 + 0x30]
	0x034820BC STR X8, [X22 + 0x20]
	0x034820C0 STR X22, [X21 + 0x98]
	0x034820C4 MOV X0, X20
	0x034820C8 MOV X1, X21
	0x034820CC MOV X2, X31
	0x034820D0 BL 0x347BA8C
	0x034820D4 CBZ X0, 0x34821C4
	0x034820D8 ADRP X8, 0xCAE000
	0x034820DC LDR X8, [X8 + 0xE98]
	0x034820E0 LDR X1, [X8]
	0x034820E4 BL 0x269F5D0
	0x034820E8 ADRP X8, 0xCAE000
	0x034820EC LDR X8, [X8 + 0xE90]
	0x034820F0 STR X0, [X31 + 0x8]
	0x034820F4 LDR X1, [X8]
	0x034820F8 ADD X0, X31, 0x8
	0x034820FC BL 0x2677430
	0x03482100 TBNZ X0, 0x0, 0x3482154
	0x03482104 STR W31, [X19]
	0x03482108 LDR X8, [X31 + 0x8]
	0x0348210C STR X8, [X19 + 0x38]
	0x03482110 LDR X0, [X23]
	0x03482114 LDR W8, [X0 + 0xE0]
	0x03482118 CBNZ W8, 0x3482120
	0x0348211C BL 0x1C16DFC
	0x03482120 ADRP X8, 0xCAE000
	0x03482124 LDR X8, [X8 + 0xF90]
	0x03482128 ADD X0, X19, 0x8
	0x0348212C LDR X3, [X8]
	0x03482130 ADD X1, X31, 0x8
	0x03482134 MOV X2, X19
	0x03482138 BL 0x1FC24EC
	0x0348213C B 0x34821A0
	0x03482140 LDR X8, [X19 + 0x38]
	0x03482144 MOVN W9, 0x0
	0x03482148 STR X8, [X31 + 0x8]
	0x0348214C STR X31, [X19 + 0x38]
	0x03482150 STR W9, [X19]
	0x03482154 ADRP X8, 0xCAE000
	0x03482158 LDR X8, [X8 + 0xE88]
	0x0348215C ADD X0, X31, 0x8
	0x03482160 LDR X1, [X8]
	0x03482164 BL 0x2677474
	0x03482168 CBZ X0, 0x34821B4
	0x0348216C MOVN W8, 0x1
	0x03482170 LDR X20, [X0 + 0x88]
	0x03482174 STR W8, [X19], #0x8
	0x03482178 LDR X0, [X23]
	0x0348217C ADRP X21, 0xCAE000
	0x03482180 LDR W8, [X0 + 0xE0]
	0x03482184 LDR X21, [X21 + 0xEE0]
	0x03482188 CBNZ W8, 0x3482190
	0x0348218C BL 0x1C16DFC
	0x03482190 LDR X2, [X21]
	0x03482194 MOV X0, X19
	0x03482198 MOV X1, X20
	0x0348219C BL 0x26322B0
	0x034821A0 LDP X20, X19, [X31 + 0x30]
	0x034821A4 LDP X22, X21, [X31 + 0x20]
	0x034821A8 LDP X30, X23, [X31 + 0x10]
	0x034821AC ADD X31, X31, 0x40
	0x034821B0 RET
	0x034821B4 BL 0x1C16F20
	0x034821B8 BL 0x1C16F20
	0x034821BC BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF5D000
	009 Move W8, [X20+2238]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xCB0000
	016 Move X0, [X0+3840]
	017 Call 0x1C17CF4
	018 Move X0, 0xCB0000
	019 Move X0, [X0+3848]
	020 Call 0x1C17CF4
	021 Move X0, 0xCB0000
	022 Move X0, [X0+3184]
	023 Call 0x1C17CF4
	024 Move X0, 0xC73000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB0000
	028 Move X0, [X0+3856]
	029 Call 0x1C17CF4
	030 Move X0, 0xCB0000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move X0, 0xCB0000
	034 Move X0, [X0+3728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCB0000
	037 Move X0, [X0+3736]
	038 Call 0x1C17CF4
	039 Move X0, 0xCB0000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0xC77000
	043 Move X0, [X0+272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2238], W8
	047 Move [X31+8], X31
	048 Move X23, 0xCB0000
	049 Move W8, [X19]
	050 Move X23, [X23+3184]
	051 Compare W8, 0
	052 JumpIfEqual {131}
	053 Move X20, [X19+32]
	054 Compare X20, 0
	055 JumpIfEqual {170}
	056 Add X0, X20, 16
	057 Move X1, X31
	058 Call Interlocked.Increment, X0
	059 Move X8, 0xCB0000
	060 Move X8, [X8+3016]
	061 Move W22, W0
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X21, X0
	065 Move X1, X31
	066 Call Object..ctor, X0
	067 Move X8, 0xC73000
	068 Move X8, [X8+1880]
	069 Move [X31+4], W22
	070 Move X0, [X8]
	071 Add X1, X31, 4
	072 Call 0x1C17E04
	073 Move X1, X0
	074 Move X8, 0xC77000
	075 Move X8, [X8+272]
	076 Move X0, [X8]
	077 Move X2, X31
	078 Call String.Format, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {171}
	081 Move X8, 0xCB0000
	082 Move X8, [X8+3856]
	083 Move [X21+16], X0
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X22, X0
	087 Move X1, X31
	088 Call PartyCreate..ctor, X0
	089 Compare X22, 0
	090 JumpIfEqual {172}
	091 Move W8, [X19+40]
	092 Move [X22+16], W8
	093 Move W8, [X19+44]
	094 Move [X22+20], W8
	095 Move [X21+272], X22
	096 Move X0, X20
	097 Move X1, X21
	098 Move X2, X31
	099 Call Socket.SendAsync, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {173}
	102 Move X8, 0xCB0000
	103 Move X8, [X8+3736]
	104 Move X1, [X8]
	105 Call Task`1<Object>.GetAwaiter, X0
	106 Move X8, 0xCAF000
	107 Move X8, [X8+3728]
	108 Move [X31+8], X0
	109 Move X1, [X8]
	110 Add X0, X31, 8
	111 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {138}
	116 Move [X19], W31
	117 Move X8, [X31+8]
	118 Move [X19+48], X8
	119 Move X0, [X23]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X8, 0xCAF000
	125 Move X8, [X8+3840]
	126 Add X0, X19, 8
	127 Move X3, [X8]
	128 Add X1, X31, 8
	129 Move X2, X19
	130 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	131 Move X8, [X19+48]
	132 Move TEMP, 0
	133 Not TEMP
	134 Move W9, TEMP
	135 Move [X31+8], X8
	136 Move [X19+48], X31
	137 Move [X19], W9
	138 Move X8, 0xCAF000
	139 Move X8, [X8+3720]
	140 Add X0, X31, 8
	141 Move X1, [X8]
	142 Call TaskAwaiter`1<Object>.GetResult, X0
	143 Compare X0, 0
	144 JumpIfEqual {169}
	145 Move TEMP, 1
	146 Not TEMP
	147 Move W8, TEMP
	148 Move X20, [X0+264]
	149 Move [X19+8], W8
	150 Move X0, [X23]
	151 Move X21, 0xCAF000
	152 Move W8, [X0+224]
	153 Move X21, [X21+3848]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X2, [X21]
	158 Move X0, X19
	159 Move X1, X20
	160 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X30, [X31+16]
	166 Move X23, [X31+24]
	167 Add X31, X31, 64
	168 Return 
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 Call 0x1C17F20
	174 Move X20, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, X20
	177 Call 0x3EB2AD0
	178 Move X20, X0
	179 Move X0, 0xC72000
	180 Move X0, [X0+2000]
	181 Call 0x1C17D08
	182 Move X8, [X20]
	183 Move X1, [X8]
	184 Call 0x1C18270
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {209}
	189 Move X20, [X20]
	190 Call 0x3EB2AE0
	191 Move TEMP, 1
	192 Not TEMP
	193 Move W8, TEMP
	194 Move [X19+8], W8
	195 Move X0, 0xCAF000
	196 Move X0, [X0+3184]
	197 Call 0x1C17D08
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X0, 0xCAF000
	203 Move X0, [X0+3864]
	204 Call 0x1C17D08
	205 Move X2, X0
	206 Move X0, X19
	207 Move X1, X20
	208 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	209 Move W0, 8
	210 Call 0x3EB2AF0
	211 Move X8, [X20]
	212 Move [X0], X8
	213 Move X1, 0xA33000
	214 Add X1, X1, 3672
	215 Move X2, X31
	216 Call 0x3EB2B00
	217 Move X20, X0
	218 Call 0x3EB2AE0
	219 Move X0, X20
	220 Call 0x1D2D690
	221 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034821C0 BL 0x1C16F20
	0x034821C4 BL 0x1C16F20
	0x034821C8 B 0x34821F4
	0x034821CC B 0x34821F4
	0x034821D0 B 0x34821F4
	0x034821D4 B 0x34821F4
	0x034821D8 B 0x34821F4
	0x034821DC B 0x34821F4
	0x034821E0 B 0x34821F4
	0x034821E4 B 0x34821F4
	0x034821E8 B 0x34821F4
	0x034821EC B 0x34821F4
	0x034821F0 B 0x34821F4
	0x034821F4 MOV X20, X0
	0x034821F8 CMP W1, 0x1
	0x034821FC B.NE 0x3482298
	0x03482200 MOV X0, X20
	0x03482204 BL 0x3EB1AD0
	0x03482208 MOV X20, X0
	0x0348220C ADRP X0, 0xC71000
	0x03482210 LDR X0, [X0 + 0x7D0]
	0x03482214 BL 0x1C16D08
	0x03482218 LDR X8, [X20]
	0x0348221C LDR X1, [X8]
	0x03482220 BL 0x1C17270
	0x03482224 TBZ X0, 0x0, 0x3482270
	0x03482228 LDR X20, [X20]
	0x0348222C BL 0x3EB1AE0
	0x03482230 MOVN W8, 0x1
	0x03482234 STR W8, [X19], #0x8
	0x03482238 ADRP X0, 0xCAE000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF5C000
	007 Move X21, 0xCAF000
	008 Move W8, [X22+2239]
	009 Move X21, [X21+3184]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCAF000
	017 Move X0, [X0+3872]
	018 Call 0x1C17CF4
	019 Move X0, 0xCAF000
	020 Move X0, [X0+3184]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2239], W8
	024 Move X0, [X21]
	025 Move X21, 0xCAF000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3872]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

