Type: Nakama.Client/<RpcAsync>d__101

Method: System.Void MoveNext()

Disassembly:
	0x03467650 BLR X8
	0x03467654 TBZ X0, 0x0, 0x346781C
	0x03467658 LDR X8, [X19 + 0x48]
	0x0346765C CBZ X8, 0x3467EA4
	0x03467660 LDR X20, [X8 + 0x18]
	0x03467664 CBZ X20, 0x3467EA8
	0x03467668 LDR X8, [X20]
	0x0346766C LDR X1, [X23]
	0x03467670 LDRH W9, [X8 + 0x12E]
	0x03467674 CBZ X9, 0x3467698
	0x03467678 LDR X10, [X8 + 0xB0]
	0x0346767C ADD X10, X10, 0x8
	0x03467680 LDUR X11, [X10 - 0x8]
	0x03467684 CMP X11, X1
	0x03467688 B.EQ 0x34676A8
	0x0346768C SUBS X9, X9, 0x1
	0x03467690 ADD X10, X10, 0x10
	0x03467694 B.NE 0x3467680
	0x03467698 MOVZ W2, 0x3
	0x0346769C MOV X0, X20
	0x034676A0 BL 0x1C5C788
	0x034676A4 B 0x34676B8
	0x034676A8 LDR W9, [X10]
	0x034676AC ADD W9, W9, 0x3
	0x034676B0 ADD X8, X8, W9, 0x4, SXTW
	0x034676B4 ADD X0, X8, 0x138
	0x034676B8 LDP X8, X1, [X0]
	0x034676BC MOV X0, X20
	0x034676C0 BLR X8
	0x034676C4 LDR X8, [X19 + 0x48]
	0x034676C8 CBZ X8, 0x3467EAC
	0x034676CC LDR X21, [X8 + 0x18]
	0x034676D0 CBZ X21, 0x3467EB0
	0x034676D4 LDR X8, [X21]
	0x034676D8 LDR X1, [X23]
	0x034676DC MOV X20, X0
	0x034676E0 LDRH W9, [X8 + 0x12E]
	0x034676E4 CBZ X9, 0x3467708
	0x034676E8 LDR X10, [X8 + 0xB0]
	0x034676EC ADD X10, X10, 0x8
	0x034676F0 LDUR X11, [X10 - 0x8]
	0x034676F4 CMP X11, X1
	0x034676F8 B.EQ 0x3467718
	0x034676FC SUBS X9, X9, 0x1
	0x03467700 ADD X10, X10, 0x10
	0x03467704 B.NE 0x34676F0
	0x03467708 MOVZ W2, 0x2
	0x0346770C MOV X0, X21
	0x03467710 BL 0x1C5C788
	0x03467714 B 0x3467728
	0x03467718 LDR W9, [X10]
	0x0346771C ADD W9, W9, 0x2
	0x03467720 ADD X8, X8, W9, 0x4, SXTW
	0x03467724 ADD X0, X8, 0x138
	0x03467728 LDP X8, X1, [X0]
	0x0346772C MOV X0, X21
	0x03467730 BLR X8
	0x03467734 SUB X8, X20, X0
	0x03467738 CMP X8, 0x45
	0x0346773C B.GT 0x346781C
	0x03467740 CBZ X26, 0x3467EC4
	0x03467744 ADRP X8, 0xC8C000
	0x03467748 LDR X8, [X8 + 0x9C8]
	0x0346774C LDR X20, [X26 + 0x50]
	0x03467750 LDR X21, [X8]
	0x03467754 LDR X8, [X21 + 0x38]
	0x03467758 CBNZ X8, 0x3467768
	0x0346775C MOV X0, X21
	0x03467760 BL 0x1C5C6E0
	0x03467764 LDR X8, [X21 + 0x38]
	0x03467768 LDR X0, [X8 + 0x10]
	0x0346776C LDRB W8, [X0 + 0x135]
	0x03467770 TBNZ X8, 0x0, 0x3467778
	0x03467774 BL 0x1C5C684
	0x03467778 LDR W8, [X0 + 0xE0]
	0x0346777C CBNZ W8, 0x3467784
	0x03467780 BL 0x1C16DFC
	0x03467784 LDR X8, [X21 + 0x38]
	0x03467788 LDR X0, [X8 + 0x10]
	0x0346778C LDRB W8, [X0 + 0x135]
	0x03467790 TBNZ X8, 0x0, 0x3467798
	0x03467794 BL 0x1C5C684
	0x03467798 CBZ X20, 0x3467EC8
	0x0346779C ADRP X10, 0xC8F000
	0x034677A0 ADRP X11, 0xCC9000
	0x034677A4 LDR X9, [X0 + 0xB8]
	0x034677A8 LDR X10, [X10 + 0x1A0]
	0x034677AC LDR X8, [X20]
	0x034677B0 LDR X11, [X11 + 0x470]
	0x034677B4 LDR X21, [X9]
	0x034677B8 LDR X1, [X10]
	0x034677BC LDRH W9, [X8 + 0x12E]
	0x034677C0 LDR X22, [X11]
	0x034677C4 CBZ X9, 0x34677E8
	0x034677C8 LDR X10, [X8 + 0xB0]
	0x034677CC ADD X10, X10, 0x8
	0x034677D0 LDUR X11, [X10 - 0x8]
	0x034677D4 CMP X11, X1
	0x034677D8 B.EQ 0x34677F8
	0x034677DC SUBS X9, X9, 0x1
	0x034677E0 ADD X10, X10, 0x10
	0x034677E4 B.NE 0x34677D0
	0x034677E8 MOVZ W2, 0x3
	0x034677EC MOV X0, X20
	0x034677F0 BL 0x1C5C788
	0x034677F4 B 0x3467808
	0x034677F8 LDR W9, [X10]
	0x034677FC ADD W9, W9, 0x3
	0x03467800 ADD X8, X8, W9, 0x4, SXTW
	0x03467804 ADD X0, X8, 0x138
	0x03467808 LDP X8, X3, [X0]
	0x0346780C MOV X0, X20
	0x03467810 MOV X1, X22
	0x03467814 MOV X2, X21
	0x03467818 BLR X8
	0x0346781C LDR X8, [X19 + 0x48]
	0x03467820 CBZ X8, 0x3467E84
	0x03467824 LDR X20, [X8 + 0x18]
	0x03467828 CBZ X20, 0x3467E88
	0x0346782C LDR X8, [X20]
	0x03467830 LDR X1, [X23]
	0x03467834 LDRH W9, [X8 + 0x12E]
	0x03467838 CBZ X9, 0x346785C
	0x0346783C LDR X10, [X8 + 0xB0]
	0x03467840 ADD X10, X10, 0x8
	0x03467844 LDUR X11, [X10 - 0x8]
	0x03467848 CMP X11, X1
	0x0346784C B.EQ 0x346786C
	0x03467850 SUBS X9, X9, 0x1
	0x03467854 ADD X10, X10, 0x10
	0x03467858 B.NE 0x3467844
	0x0346785C MOVZ W2, 0x1
	0x03467860 MOV X0, X20
	0x03467864 BL 0x1C5C788
	0x03467868 B 0x346787C
	0x0346786C LDR W9, [X10]
	0x03467870 ADD W9, W9, 0x1
	0x03467874 ADD X8, X8, W9, 0x4, SXTW
	0x03467878 ADD X0, X8, 0x138
	0x0346787C LDP X8, X1, [X0]
	0x03467880 MOV X0, X20
	0x03467884 BLR X8
	0x03467888 TBZ X0, 0x0, 0x3467A50
	0x0346788C LDR X8, [X19 + 0x48]
	0x03467890 CBZ X8, 0x3467EB4
	0x03467894 LDR X20, [X8 + 0x18]
	0x03467898 CBZ X20, 0x3467EB8
	0x0346789C LDR X8, [X20]
	0x034678A0 LDR X1, [X23]
	0x034678A4 LDRH W9, [X8 + 0x12E]
	0x034678A8 CBZ X9, 0x34678CC
	0x034678AC LDR X10, [X8 + 0xB0]
	0x034678B0 ADD X10, X10, 0x8
	0x034678B4 LDUR X11, [X10 - 0x8]
	0x034678B8 CMP X11, X1
	0x034678BC B.EQ 0x34678DC
	0x034678C0 SUBS X9, X9, 0x1
	0x034678C4 ADD X10, X10, 0x10
	0x034678C8 B.NE 0x34678B4
	0x034678CC MOVZ W2, 0x6
	0x034678D0 MOV X0, X20
	0x034678D4 BL 0x1C5C788
	0x034678D8 B 0x34678EC
	0x034678DC LDR W9, [X10]
	0x034678E0 ADD W9, W9, 0x6
	0x034678E4 ADD X8, X8, W9, 0x4, SXTW
	0x034678E8 ADD X0, X8, 0x138
	0x034678EC LDP X8, X1, [X0]
	0x034678F0 MOV X0, X20
	0x034678F4 BLR X8
	0x034678F8 LDR X8, [X19 + 0x48]
	0x034678FC CBZ X8, 0x3467EBC
	0x03467900 LDR X21, [X8 + 0x18]
	0x03467904 CBZ X21, 0x3467EC0
	0x03467908 LDR X8, [X21]
	0x0346790C LDR X1, [X23]
	0x03467910 MOV X20, X0
	0x03467914 LDRH W9, [X8 + 0x12E]
	0x03467918 CBZ X9, 0x346793C
	0x0346791C LDR X10, [X8 + 0xB0]
	0x03467920 ADD X10, X10, 0x8
	0x03467924 LDUR X11, [X10 - 0x8]
	0x03467928 CMP X11, X1
	0x0346792C B.EQ 0x346794C
	0x03467930 SUBS X9, X9, 0x1
	0x03467934 ADD X10, X10, 0x10
	0x03467938 B.NE 0x3467924
	0x0346793C MOVZ W2, 0x2
	0x03467940 MOV X0, X21
	0x03467944 BL 0x1C5C788
	0x03467948 B 0x346795C
	0x0346794C LDR W9, [X10]
	0x03467950 ADD W9, W9, 0x2
	0x03467954 ADD X8, X8, W9, 0x4, SXTW
	0x03467958 ADD X0, X8, 0x138
	0x0346795C LDP X8, X1, [X0]
	0x03467960 MOV X0, X21
	0x03467964 BLR X8
	0x03467968 SUB X8, X20, X0
	0x0346796C CMP X8, 0xE73
	0x03467970 B.GT 0x3467A50
	0x03467974 CBZ X26, 0x3467ECC
	0x03467978 ADRP X8, 0xC8C000
	0x0346797C LDR X8, [X8 + 0x9C8]
	0x03467980 LDR X20, [X26 + 0x50]
	0x03467984 LDR X21, [X8]
	0x03467988 LDR X8, [X21 + 0x38]
	0x0346798C CBNZ X8, 0x346799C
	0x03467990 MOV X0, X21
	0x03467994 BL 0x1C5C6E0
	0x03467998 LDR X8, [X21 + 0x38]
	0x0346799C LDR X0, [X8 + 0x10]
	0x034679A0 LDRB W8, [X0 + 0x135]
	0x034679A4 TBNZ X8, 0x0, 0x34679AC
	0x034679A8 BL 0x1C5C684
	0x034679AC LDR W8, [X0 + 0xE0]
	0x034679B0 CBNZ W8, 0x34679B8
	0x034679B4 BL 0x1C16DFC
	0x034679B8 LDR X8, [X21 + 0x38]
	0x034679BC LDR X0, [X8 + 0x10]
	0x034679C0 LDRB W8, [X0 + 0x135]
	0x034679C4 TBNZ X8, 0x0, 0x34679CC
	0x034679C8 BL 0x1C5C684
	0x034679CC CBZ X20, 0x3467ED0
	0x034679D0 ADRP X10, 0xC8F000
	0x034679D4 ADRP X11, 0xCC9000
	0x034679D8 LDR X9, [X0 + 0xB8]
	0x034679DC LDR X10, [X10 + 0x1A0]
	0x034679E0 LDR X8, [X20]
	0x034679E4 LDR X11, [X11 + 0x478]
	0x034679E8 LDR X21, [X9]
	0x034679EC LDR X1, [X10]
	0x034679F0 LDRH W9, [X8 + 0x12E]
	0x034679F4 LDR X22, [X11]
	0x034679F8 CBZ X9, 0x3467A1C
	0x034679FC LDR X10, [X8 + 0xB0]
	0x03467A00 ADD X10, X10, 0x8
	0x03467A04 LDUR X11, [X10 - 0x8]
	0x03467A08 CMP X11, X1
	0x03467A0C B.EQ 0x3467A2C
	0x03467A10 SUBS X9, X9, 0x1
	0x03467A14 ADD X10, X10, 0x10
	0x03467A18 B.NE 0x3467A04
	0x03467A1C MOVZ W2, 0x3
	0x03467A20 MOV X0, X20
	0x03467A24 BL 0x1C5C788
	0x03467A28 B 0x3467A3C
	0x03467A2C LDR W9, [X10]
	0x03467A30 ADD W9, W9, 0x3
	0x03467A34 ADD X8, X8, W9, 0x4, SXTW
	0x03467A38 ADD X0, X8, 0x138
	0x03467A3C LDP X8, X3, [X0]
	0x03467A40 MOV X0, X20
	0x03467A44 MOV X1, X22
	0x03467A48 MOV X2, X21
	0x03467A4C BLR X8
	0x03467A50 CBZ X26, 0x3467E8C
	0x03467A54 ADRP X8, 0xCC8000
	0x03467A58 LDR X8, [X8 + 0xA58]
	0x03467A5C LDR X20, [X26 + 0x58]
	0x03467A60 LDR X22, [X19 + 0x48]
	0x03467A64 LDR X0, [X8]
	0x03467A68 BL 0x1C16F10
	0x03467A6C ADRP X8, 0xCC9000
	0x03467A70 LDR X8, [X8 + 0x460]
	0x03467A74 MOV X21, X0
	0x03467A78 LDR X2, [X8]
	0x03467A7C MOV X1, X22
	0x03467A80 MOV X3, X31
	0x03467A84 BL 0x2D27AA8
	0x03467A88 LDR X8, [X19 + 0x48]
	0x03467A8C CBZ X8, 0x3467E90
	0x03467A90 ADRP X9, 0xCC8000
	0x03467A94 LDR X22, [X19 + 0x40]
	0x03467A98 LDR X9, [X9 + 0x7C8]
	0x03467A9C CBNZ X22, 0x3467AA4
	0x03467AA0 LDR X22, [X26 + 0x18]
	0x03467AA4 LDR X23, [X8 + 0x18]
	0x03467AA8 LDR X1, [X8 + 0x28]
	0x03467AAC LDR X2, [X9]
	0x03467AB0 STP X31, X31, [X31 + 0x8]
	0x03467AB4 ADD X0, X31, 0x8
	0x03467AB8 BL 0x242E368
	0x03467ABC ADRP X8, 0xCC8000
	0x03467AC0 LDR X8, [X8 + 0x7D0]
	0x03467AC4 LDR X0, [X8]
	0x03467AC8 BL 0x1C16F10
	0x03467ACC LDP X3, X4, [X31 + 0x8]
	0x03467AD0 MOV X24, X0
	0x03467AD4 MOV X1, X23
	0x03467AD8 MOV X2, X22
	0x03467ADC BL 0x3465404
	0x03467AE0 CBZ X20, 0x3467E94
	0x03467AE4 ADRP X8, 0xCC8000
	0x03467AE8 LDR X8, [X8 + 0xA68]
	0x03467AEC LDR X3, [X8]
	0x03467AF0 MOV X0, X20
	0x03467AF4 MOV X1, X21
	0x03467AF8 MOV X2, X24
	0x03467AFC BL 0x2243230
	0x03467B00 CBZ X0, 0x3467E98
	0x03467B04 ADRP X8, 0xCC8000
	0x03467B08 LDR X8, [X8 + 0xA88]
	0x03467B0C LDR X1, [X8]
	0x03467B10 BL 0x269F5D0
	0x03467B14 ADRP X8, 0xCC8000
	0x03467B18 LDR X8, [X8 + 0xA80]
	0x03467B1C STR X0, [X31 + 0x18]
	0x03467B20 LDR X1, [X8]
	0x03467B24 ADD X0, X31, 0x18
	0x03467B28 BL 0x2677430
	0x03467B2C TBZ X0, 0x0, 0x3467BD8
	0x03467B30 ADRP X8, 0xCC8000
	0x03467B34 LDR X8, [X8 + 0xA78]
	0x03467B38 ADD X0, X31, 0x18
	0x03467B3C LDR X1, [X8]
	0x03467B40 BL 0x2677474
	0x03467B44 LDR X8, [X19 + 0x48]
	0x03467B48 CBZ X8, 0x3467E74
	0x03467B4C ADRP X27, 0xCC8000
	0x03467B50 ADRP X24, 0xCC8000
	0x03467B54 LDR X21, [X8 + 0x18]
	0x03467B58 LDR X27, [X27 + 0xA70]
	0x03467B5C LDR X24, [X24 + 0xA60]
	0x03467B60 MOV X20, X0
	0x03467B64 CBZ X21, 0x3467B94
	0x03467B68 LDR X9, [X21]
	0x03467B6C LDR X8, [X27]
	0x03467B70 LDRB W11, [X9 + 0x130]
	0x03467B74 LDRB W10, [X8 + 0x130]
	0x03467B78 CMP W11, W10
	0x03467B7C B.CC 0x3467B94
	0x03467B80 LDR X9, [X9 + 0xC8]
	0x03467B84 ADD X9, X9, X10, 0x3, LSL
	0x03467B88 LDUR X9, [X9 - 0x8]
	0x03467B8C CMP X9, X8
	0x03467B90 B.EQ 0x3467D80
	0x03467B94 CBZ X20, 0x3467E9C
	0x03467B98 LDR X8, [X20]
	0x03467B9C LDR X1, [X24]
	0x03467BA0 LDRH W9, [X8 + 0x12E]
	0x03467BA4 CBZ X9, 0x3467BC8
	0x03467BA8 LDR X10, [X8 + 0xB0]
	0x03467BAC ADD X10, X10, 0x8
	0x03467BB0 LDUR X11, [X10 - 0x8]
	0x03467BB4 CMP X11, X1
	0x03467BB8 B.EQ 0x3467C14
	0x03467BBC SUBS X9, X9, 0x1
	0x03467BC0 ADD X10, X10, 0x10
	0x03467BC4 B.NE 0x3467BB0
	0x03467BC8 MOVZ W2, 0x2
	0x03467BCC MOV X0, X20
	0x03467BD0 BL 0x1C5C788
	0x03467BD4 B 0x3467C24
	0x03467BD8 STR W31, [X19]
	0x03467BDC LDR X8, [X31 + 0x18]
	0x03467BE0 STR X8, [X19 + 0x50]
	0x03467BE4 LDR X0, [X25]
	0x03467BE8 LDR W8, [X0 + 0xE0]
	0x03467BEC CBNZ W8, 0x3467BF4
	0x03467BF0 BL 0x1C16DFC
	0x03467BF4 ADRP X8, 0xCC9000
	0x03467BF8 LDR X8, [X8 + 0x458]
	0x03467BFC ADD X0, X19, 0x8
	0x03467C00 LDR X3, [X8]
	0x03467C04 ADD X1, X31, 0x18
	0x03467C08 MOV X2, X19
	0x03467C0C BL 0x1FBD7A0
	0x03467C10 B 0x3467D64
	0x03467C14 LDR W9, [X10]
	0x03467C18 ADD W9, W9, 0x2
	0x03467C1C ADD X8, X8, W9, 0x4, SXTW
	0x03467C20 ADD X0, X8, 0x138
	0x03467C24 LDP X8, X1, [X0]
	0x03467C28 MOV X0, X20
	0x03467C2C BLR X8
	0x03467C30 LDR X8, [X20]
	0x03467C34 LDR X1, [X24]
	0x03467C38 MOV X22, X0
	0x03467C3C LDRH W9, [X8 + 0x12E]
	0x03467C40 CBZ X9, 0x3467C64
	0x03467C44 LDR X10, [X8 + 0xB0]
	0x03467C48 ADD X10, X10, 0x8
	0x03467C4C LDUR X11, [X10 - 0x8]
	0x03467C50 CMP X11, X1
	0x03467C54 B.EQ 0x3467C74
	0x03467C58 SUBS X9, X9, 0x1
	0x03467C5C ADD X10, X10, 0x10
	0x03467C60 B.NE 0x3467C4C
	0x03467C64 MOVZ W2, 0x1
	0x03467C68 MOV X0, X20
	0x03467C6C BL 0x1C5C788
	0x03467C70 B 0x3467C84
	0x03467C74 LDR W9, [X10]
	0x03467C78 ADD W9, W9, 0x1
	0x03467C7C ADD X8, X8, W9, 0x4, SXTW
	0x03467C80 ADD X0, X8, 0x138
	0x03467C84 LDP X8, X1, [X0]
	0x03467C88 MOV X0, X20
	0x03467C8C BLR X8
	0x03467C90 LDR X8, [X20]
	0x03467C94 LDR X1, [X24]
	0x03467C98 MOV X23, X0
	0x03467C9C LDRH W9, [X8 + 0x12E]
	0x03467CA0 CBZ X9, 0x3467CC4
	0x03467CA4 LDR X10, [X8 + 0xB0]
	0x03467CA8 ADD X10, X10, 0x8
	0x03467CAC LDUR X11, [X10 - 0x8]
	0x03467CB0 CMP X11, X1
	0x03467CB4 B.EQ 0x3467CD4
	0x03467CB8 SUBS X9, X9, 0x1
	0x03467CBC ADD X10, X10, 0x10
	0x03467CC0 B.NE 0x3467CAC
	0x03467CC4 MOV X0, X20
	0x03467CC8 MOV W2, W31
	0x03467CCC BL 0x1C5C788
	0x03467CD0 B 0x3467CE0
	0x03467CD4 LDRSW X9, [X10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF77000
	011 Move W8, [X20+1987]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCCA000
	018 Move X0, [X0+1024]
	019 Call 0x1C17CF4
	020 Move X0, 0xCCA000
	021 Move X0, [X0+1032]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC9000
	024 Move X0, [X0+704]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC8000
	027 Move X0, [X0+1640]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8F000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC8E000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC9000
	036 Move X0, [X0+2120]
	037 Call 0x1C17CF4
	038 Move X0, 0xC8E000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC9000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC9000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC9000
	048 Move X0, [X0+2128]
	049 Call 0x1C17CF4
	050 Move X0, 0xCCA000
	051 Move X0, [X0+1040]
	052 Call 0x1C17CF4
	053 Move X0, 0xC8E000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC8E000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCCA000
	060 Move X0, [X0+1048]
	061 Call 0x1C17CF4
	062 Move X0, 0xCCA000
	063 Move X0, [X0+1056]
	064 Call 0x1C17CF4
	065 Move X0, 0xC8E000
	066 Move X0, [X0+2112]
	067 Call 0x1C17CF4
	068 Move X0, 0xCCA000
	069 Move X0, [X0+1064]
	070 Call 0x1C17CF4
	071 Move X0, 0xCCA000
	072 Move X0, [X0+1072]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1987], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCC8000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1640]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+96]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+96], X31
	092 Move [X19], W9
	093 Move X8, [X19+88]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+88], X31
	099 Move [X19], W9
	100 Move X8, 0xC8E000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCCA000
	106 Move X8, [X8+1072]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass101_0..ctor, X0
	112 Move [X19+80], X21
	113 Compare X21, 0
	114 JumpIfEqual {382}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move V0, [X19+3]
	120 Move [X21+2], V0
	121 Move X8, [X19+64]
	122 Move [X21+48], X8
	123 Compare X20, 0
	124 JumpIfEqual {383}
	125 Move W8, [X20+16]
	126 Compare W8, 0
	127 JumpIfEqual {265}
	128 Move X8, [X19+80]
	129 Compare X8, 0
	130 JumpIfEqual {384}
	131 Move X21, [X8+24]
	132 Compare X21, 0
	133 JumpIfEqual {385}
	134 Move X23, 0xC8E000
	135 Move X8, [X21]
	136 Move X23, [X23+2072]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move X1, [X23]
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 7
	148 Move X0, X21
	149 Call 0x1C5D788
	150 Move W9, [X10]
	151 Add W9, W9, 7
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X1, X31
	159 Call String.IsNullOrEmpty, X0
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {263}
	164 Move X8, [X19+80]
	165 Compare X8, 0
	166 JumpIfEqual {386}
	167 Move X9, 0xC8E000
	168 Move X9, [X9+2544]
	169 Move X21, [X8+24]
	170 Move X0, [X9]
	171 Move W9, [X0+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X31
	176 Call DateTime.get_UtcNow
	177 Move X22, 0xC8F000
	178 Move X22, [X22+2576]
	179 Move X8, X0
	180 Move [X31+40], X8
	181 Move X0, [X22]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X22]
	187 Move X8, [X0+184]
	188 Move X1, [X8]
	189 Add X0, X31, 40
	190 Move X2, X31
	191 Call DateTime.Add, X0, X1
	192 Compare X21, 0
	193 JumpIfEqual {387}
	194 Move X8, [X21]
	195 Move X1, [X23]
	196 Move X22, X0
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move W2, 11
	207 Move X0, X21
	208 Call 0x1C5D788
	209 Move W9, [X10]
	210 Add W9, W9, 11
	211 Add X8, X8, W9
	212 Add X0, X8, 312
	213 Move X8, [X0]
	214 Move X2, [X0+8]
	215 Move X0, X21
	216 Move X1, X22
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {263}
	222 Move X8, [X19+80]
	223 Compare X8, 0
	224 JumpIfEqual {388}
	225 Move X1, [X8+24]
	226 Move X3, [X19+72]
	227 Move X4, [X8+48]
	228 Move X0, X20
	229 Move X2, X31
	230 Move X5, X31
	231 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	232 Compare X0, 0
	233 JumpIfEqual {389}
	234 Move X8, 0xC8E000
	235 Move X8, [X8+2112]
	236 Move X1, [X8]
	237 Call Task`1<Object>.GetAwaiter, X0
	238 Move X8, 0xC8E000
	239 Move X8, [X8+2104]
	240 Move [X31+32], X0
	241 Move X1, [X8]
	242 Add X0, X31, 32
	243 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {100}
	248 Move [X19], W31
	249 Move X8, [X31+32]
	250 Move [X19+88], X8
	251 Move X0, [X25]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X8, 0xCCA000
	257 Move X8, [X8+1032]
	258 Add X0, X19, 8
	259 Move X3, [X8]
	260 Add X1, X31, 32
	261 Move X2, X19
	262 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	263 Compare X20, 0
	264 JumpIfEqual {381}
	265 Move X8, 0xCC9000
	266 Move X8, [X8+2120]
	267 Move X21, [X20+88]
	268 Move X23, [X19+80]
	269 Move X0, [X8]
	270 Call 0x1C17F10
	271 Move X8, 0xCCA000
	272 Move X8, [X8+1064]
	273 Move X22, X0
	274 Move X2, [X8]
	275 Move X1, X23
	276 Move X3, X31
	277 Call Func`1<Object>..ctor, X0, X1, X2
	278 Move X8, [X19+80]
	279 Compare X8, 0
	280 JumpIfEqual {378}
	281 Move X9, 0xCC9000
	282 Move X23, [X19+72]
	283 Move X9, [X9+1992]
	284 Compare X23, 0
	285 JumpIfNotEqual {287}
	286 Move X23, [X20+24]
	287 Move X20, [X8+24]
	288 Move X1, [X8+48]
	289 Move X2, [X9]
	290 Move [X31+8], X31
	291 Move [X31+16], X31
	292 Add X0, X31, 8
	293 Call Nullable`1<CancellationToken>..ctor, X0, X1
	294 Move X8, 0xCC9000
	295 Move X8, [X8+2000]
	296 Move X0, [X8]
	297 Call 0x1C17F10
	298 Move X3, [X31+8]
	299 Move X4, [X31+16]
	300 Move X24, X0
	301 Move X1, X20
	302 Move X2, X23
	303 Call RetryHistory..ctor, X0, X1, X2, X3
	304 Compare X21, 0
	305 JumpIfEqual {379}
	306 Move X8, 0xCC9000
	307 Move X8, [X8+2128]
	308 Move X3, [X8]
	309 Move X0, X21
	310 Move X1, X22
	311 Move X2, X24
	312 Call 0x2244230, X0, X1, X2
	313 Compare X0, 0
	314 JumpIfEqual {380}
	315 Move X8, 0xCCA000
	316 Move X8, [X8+1056]
	317 Move X1, [X8]
	318 Call Task`1<Object>.GetAwaiter, X0
	319 Move X8, 0xCCA000
	320 Move X8, [X8+1048]
	321 Move [X31+24], X0
	322 Move X1, [X8]
	323 Add X0, X31, 24
	324 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	325 Move TEMP, X0
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfNotEqual {352}
	329 Move X8, 0xCCA000
	330 Move X8, [X8+1040]
	331 Add X0, X31, 24
	332 Move X1, [X8]
	333 Call TaskAwaiter`1<Object>.GetResult, X0
	334 Move TEMP, 1
	335 Not TEMP
	336 Move W8, TEMP
	337 Move [X19], W8
	338 Move [X19+80], X31
	339 Move X20, X0
	340 Move X0, [X25]
	341 Move X21, 0xCC9000
	342 Add X19, X19, 8
	343 Move W8, [X0+224]
	344 Move X21, [X21+704]
	345 Compare W8, 0
	346 JumpIfNotEqual {348}
	347 Call 0x1C17DFC
	348 Move X2, [X21]
	349 Move X0, X19
	350 Move X1, X20
	351 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	352 Move W8, 1
	353 Move [X19], W8
	354 Move X8, [X31+24]
	355 Move [X19+96], X8
	356 Move X0, [X25]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X8, 0xCCA000
	362 Move X8, [X8+1024]
	363 Add X0, X19, 8
	364 Move X3, [X8]
	365 Add X1, X31, 24
	366 Move X2, X19
	367 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	368 Move X20, [X31+96]
	369 Move X19, [X31+104]
	370 Move X22, [X31+80]
	371 Move X21, [X31+88]
	372 Move X24, [X31+64]
	373 Move X23, [X31+72]
	374 Move X30, [X31+48]
	375 Move X25, [X31+56]
	376 Add X31, X31, 112
	377 Return 
	378 Call 0x1C17F20
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Move X20, X0
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X0, X20
	393 Call 0x3EB2AD0
	394 Move X20, X0
	395 Move X0, 0xC8D000
	396 Move X0, [X0+2000]
	397 Call 0x1C17D08
	398 Move X8, [X20]
	399 Move X1, [X8]
	400 Call 0x1C18270
	401 Move TEMP, X0
	402 And TEMP, TEMP, 1
	403 Compare TEMP, 1
	404 JumpIfNotEqual {426}
	405 Move X20, [X20]
	406 Call 0x3EB2AE0
	407 Move TEMP, 1
	408 Not TEMP
	409 Move W8, TEMP
	410 Move [X19+80], X31
	411 Move [X19+8], W8
	412 Move X0, 0xCC8000
	413 Move X0, [X0+1640]
	414 Call 0x1C17D08
	415 Move W8, [X0+224]
	416 Compare W8, 0
	417 JumpIfNotEqual {419}
	418 Call 0x1C17DFC
	419 Move X0, 0xCC9000
	420 Move X0, [X0+768]
	421 Call 0x1C17D08
	422 Move X2, X0
	423 Move X0, X19
	424 Move X1, X20
	425 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	426 Move W0, 8
	427 Call 0x3EB2AF0
	428 Move X8, [X20]
	429 Move [X0], X8
	430 Move X1, 0xA4E000
	431 Add X1, X1, 3672
	432 Move X2, X31
	433 Call 0x3EB2B00
	434 Move X20, X0
	435 Call 0x3EB2AE0
	436 Move X0, X20
	437 Call 0x1D2D690
	438 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03467CD8 ADD X8, X8, X9, 0x4, LSL
	0x03467CDC ADD X0, X8, 0x138
	0x03467CE0 LDP X8, X1, [X0]
	0x03467CE4 MOV X0, X20
	0x03467CE8 BLR X8
	0x03467CEC MOV W20, W0
	0x03467CF0 LDR X0, [X27]
	0x03467CF4 BL 0x1C16F10
	0x03467CF8 MOV X21, X0
	0x03467CFC AND W3, W20, 0x1
	0x03467D00 MOV X1, X22
	0x03467D04 MOV X2, X23
	0x03467D08 BL 0x34684B8
	0x03467D0C CBZ X26, 0x3467EA0
	0x03467D10 LDR X8, [X26 + 0x40]
	0x03467D14 CBZ X8, 0x3467D2C
	0x03467D18 LDR X0, [X8 + 0x40]
	0x03467D1C LDR X9, [X8 + 0x18]
	0x03467D20 LDR X2, [X8 + 0x28]
	0x03467D24 MOV X1, X21
	0x03467D28 BLR X9
	0x03467D2C MOVN W8, 0x1
	0x03467D30 STR W8, [X19]
	0x03467D34 STR X31, [X19 + 0x48]
	0x03467D38 LDR X0, [X25]
	0x03467D3C ADRP X20, 0xCC8000
	0x03467D40 ADD X19, X19, 0x8
	0x03467D44 LDR W8, [X0 + 0xE0]
	0x03467D48 LDR X20, [X20 + 0xA50]
	0x03467D4C CBNZ W8, 0x3467D54
	0x03467D50 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF77000
	007 Move X21, 0xCC8000
	008 Move W8, [X22+1988]
	009 Move X21, [X21+1640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC9000
	017 Move X0, [X0+776]
	018 Call 0x1C17CF4
	019 Move X0, 0xCC8000
	020 Move X0, [X0+1640]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1988], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC9000
	026 Move W8, [X0+224]
	027 Move X21, [X21+776]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

