Type: Nakama.GZipContent/<SerializeToStreamAsync>d__2

Method: System.Void MoveNext()

Disassembly:
	0x03472278 CBZ X0, 0x3472290
	0x0347227C LDR X8, [X22]
	0x03472280 LDR X1, [X8 + 0x40]
	0x03472284 MOV X0, X23
	0x03472288 BL 0x1C16E00
	0x0347228C CBZ X0, 0x34724E0
	0x03472290 LDR W8, [X22 + 0x18]
	0x03472294 CBZ W8, 0x34724AC
	0x03472298 STR X23, [X22 + 0x20]
	0x0347229C CBZ X20, 0x34722B8
	0x034722A0 LDR X8, [X22]
	0x034722A4 LDR X1, [X8 + 0x40]
	0x034722A8 MOV X0, X20
	0x034722AC BL 0x1C16E00
	0x034722B0 CBZ X0, 0x34724EC
	0x034722B4 LDR W8, [X22 + 0x18]
	0x034722B8 CMP W8, 0x1
	0x034722BC B.LS 0x34724B0
	0x034722C0 STR X20, [X22 + 0x28]
	0x034722C4 ADRP X9, 0xC84000
	0x034722C8 LDR X8, [X21]
	0x034722CC LDR X9, [X9 + 0x1A0]
	0x034722D0 ADRP X10, 0xC84000
	0x034722D4 LDR X1, [X9]
	0x034722D8 LDR X10, [X10 + 0x218]
	0x034722DC LDRH W9, [X8 + 0x12E]
	0x034722E0 LDR X23, [X10]
	0x034722E4 CBZ X9, 0x3472308
	0x034722E8 LDR X10, [X8 + 0xB0]
	0x034722EC ADD X10, X10, 0x8
	0x034722F0 LDUR X11, [X10 - 0x8]
	0x034722F4 CMP X11, X1
	0x034722F8 B.EQ 0x3472394
	0x034722FC SUBS X9, X9, 0x1
	0x03472300 ADD X10, X10, 0x10
	0x03472304 B.NE 0x34722F0
	0x03472308 MOVZ W2, 0x2
	0x0347230C MOV X0, X21
	0x03472310 BL 0x1C5C788
	0x03472314 B 0x34723A4
	0x03472318 MOVZ W8, 0x1
	0x0347231C STR W8, [X19]
	0x03472320 LDR X8, [X31 + 0x18]
	0x03472324 STR X8, [X19 + 0x70]
	0x03472328 LDR X0, [X26]
	0x0347232C LDR W8, [X0 + 0xE0]
	0x03472330 CBNZ W8, 0x3472338
	0x03472334 BL 0x1C16DFC
	0x03472338 ADRP X8, 0xCBE000
	0x0347233C LDR X8, [X8 + 0x7F0]
	0x03472340 ADD X0, X19, 0x8
	0x03472344 LDR X3, [X8]
	0x03472348 ADD X1, X31, 0x18
	0x0347234C MOV X2, X19
	0x03472350 BL 0x1FC076C
	0x03472354 B 0x3472408
	0x03472358 STR W31, [X19]
	0x0347235C LDR X8, [X31 + 0x28]
	0x03472360 STR X8, [X19 + 0x68]
	0x03472364 LDR X0, [X26]
	0x03472368 LDR W8, [X0 + 0xE0]
	0x0347236C CBNZ W8, 0x3472374
	0x03472370 BL 0x1C16DFC
	0x03472374 ADRP X8, 0xCBE000
	0x03472378 LDR X8, [X8 + 0x7F8]
	0x0347237C ADD X0, X19, 0x8
	0x03472380 LDR X3, [X8]
	0x03472384 ADD X1, X31, 0x28
	0x03472388 MOV X2, X19
	0x0347238C BL 0x1FC076C
	0x03472390 B 0x3472408
	0x03472394 LDR W9, [X10]
	0x03472398 ADD W9, W9, 0x2
	0x0347239C ADD X8, X8, W9, 0x4, SXTW
	0x034723A0 ADD X0, X8, 0x138
	0x034723A4 LDP X8, X3, [X0]
	0x034723A8 MOV X0, X21
	0x034723AC MOV X1, X23
	0x034723B0 MOV X2, X22
	0x034723B4 BLR X8
	0x034723B8 LDR X8, [X19 + 0x60]
	0x034723BC CBZ X8, 0x34724B4
	0x034723C0 MOV X0, X8
	0x034723C4 MOV X1, X31
	0x034723C8 BL 0x35FC564
	0x034723CC TBZ X0, 0x0, 0x3472474
	0x034723D0 MOVN W8, 0x1
	0x034723D4 STR W8, [X19]
	0x034723D8 STR X31, [X19 + 0x60]
	0x034723DC LDR X0, [X26]
	0x034723E0 ADRP X21, 0xC84000
	0x034723E4 ADD X19, X19, 0x8
	0x034723E8 LDR W8, [X0 + 0xE0]
	0x034723EC LDR X21, [X21 + 0x160]
	0x034723F0 CBNZ W8, 0x34723F8
	0x034723F4 BL 0x1C16DFC
	0x034723F8 LDR X2, [X21]
	0x034723FC MOV X0, X19
	0x03472400 MOV X1, X20
	0x03472404 BL 0x26322B0
	0x03472408 LDP X20, X19, [X31 + 0x70]
	0x0347240C LDP X22, X21, [X31 + 0x60]
	0x03472410 LDP X24, X23, [X31 + 0x50]
	0x03472414 LDP X26, X25, [X31 + 0x40]
	0x03472418 LDP X28, X27, [X31 + 0x30]
	0x0347241C LDR X30, [X31 + 0x20]
	0x03472420 ADD X31, X31, 0x80
	0x03472424 RET
	0x03472428 BL 0x1C16F20
	0x0347242C BL 0x1C16F20
	0x03472430 ADRP X0, 0xC82000
	0x03472434 LDR X0, [X0 + 0x6F0]
	0x03472438 BL 0x1C16D08
	0x0347243C BL 0x1C16F10
	0x03472440 MOV X22, X0
	0x03472444 MOVN W3, 0x0
	0x03472448 MOV X1, X21
	0x0347244C MOV X2, X20
	0x03472450 MOV X4, X31
	0x03472454 BL 0x3400264
	0x03472458 ADRP X0, 0xCBE000
	0x0347245C LDR X0, [X0 + 0x800]
	0x03472460 BL 0x1C16D08
	0x03472464 MOV X1, X0
	0x03472468 MOV X0, X22
	0x0347246C BL 0x1C16DEC
	0x03472470 BL 0x1C16F20
	0x03472474 ADRP X8, 0xC84000
	0x03472478 LDR X8, [X8 + 0x1A8]
	0x0347247C LDR X1, [X8]
	0x03472480 MOV X0, X20
	0x03472484 BL 0x220E6DC
	0x03472488 MOV X20, X0
	0x0347248C CBNZ X0, 0x34724F8
	0x03472490 BL 0x1C16F20
	0x03472494 BL 0x1C16F20
	0x03472498 BL 0x1C16F20
	0x0347249C BL 0x1C16F20
	0x034724A0 BL 0x1C16F20
	0x034724A4 BL 0x1C16F20
	0x034724A8 BL 0x1C16F20
	0x034724AC BL 0x1C16F28
	0x034724B0 BL 0x1C16F28
	0x034724B4 BL 0x1C16F20
	0x034724B8 BL 0x1C16F20
	0x034724BC BL 0x1C16F20
	0x034724C0 BL 0x1C16F20
	0x034724C4 BL 0x1C16F20
	0x034724C8 BL 0x1C16F20
	0x034724CC MOV X0, X23
	0x034724D0 BL 0x1C16F18
	0x034724D4 BL 0x1C16F20
	0x034724D8 BL 0x1C16F20
	0x034724DC BL 0x1C16F20
	0x034724E0 BL 0x1C16F44
	0x034724E4 MOV X1, X31
	0x034724E8 BL 0x1C16DEC
	0x034724EC BL 0x1C16F44
	0x034724F0 MOV X1, X31
	0x034724F4 BL 0x1C16DEC
	0x034724F8 ADRP X8, 0xC84000
	0x034724FC LDR X8, [X8 + 0x220]
	0x03472500 ADRP X9, 0xC83000
	0x03472504 LDR X9, [X9 + 0x220]
	0x03472508 LDR X1, [X8]
	0x0347250C LDR X2, [X9]
	0x03472510 MOV X0, X20
	0x03472514 BL 0x2AA528C
	0x03472518 TBZ X0, 0x0, 0x3472584
	0x0347251C ADRP X0, 0xC84000
	0x03472520 LDR X0, [X0 + 0x220]
	0x03472524 BL 0x1C16D08
	0x03472528 MOV X21, X0
	0x0347252C ADRP X0, 0xC83000
	0x03472530 LDR X0, [X0 + 0x268]
	0x03472534 BL 0x1C16D08
	0x03472538 MOV X2, X0
	0x0347253C MOV X0, X20
	0x03472540 MOV X1, X21
	0x03472544 BL 0x2AA5018
	0x03472548 CBNZ X0, 0x3472610
	0x0347254C BL 0x1C16F20
	0x03472550 BL 0x1C16F20
	0x03472554 BL 0x1C16F28
	0x03472558 BL 0x1C16F28
	0x0347255C BL 0x1C16F28
	0x03472560 BL 0x1C16F44
	0x03472564 MOV X1, X31
	0x03472568 BL 0x1C16DEC
	0x0347256C BL 0x1C16F44
	0x03472570 MOV X1, X31
	0x03472574 BL 0x1C16DEC
	0x03472578 BL 0x1C16F44
	0x0347257C MOV X1, X31
	0x03472580 BL 0x1C16DEC
	0x03472584 ADRP X0, 0xC83000
	0x03472588 LDR X0, [X0 + 0x278]
	0x0347258C BL 0x1C16D08
	0x03472590 LDR X8, [X0 + 0xB8]
	0x03472594 LDR X21, [X8]
	0x03472598 ADRP X0, 0xC82000
	0x0347259C LDR X0, [X0 + 0x738]
	0x034725A0 BL 0x1C16D08
	0x034725A4 MOV X22, X0
	0x034725A8 ADRP X0, 0xC83000
	0x034725AC LDR X0, [X0 + 0x220]
	0x034725B0 BL 0x1C16D08
	0x034725B4 MOV X2, X0
	0x034725B8 MOV X0, X20
	0x034725BC MOV X1, X22
	0x034725C0 BL 0x2AA528C
	0x034725C4 TBZ X0, 0x0, 0x3472624
	0x034725C8 ADRP X0, 0xC82000
	0x034725CC LDR X0, [X0 + 0x738]
	0x034725D0 BL 0x1C16D08
	0x034725D4 MOV X22, X0
	0x034725D8 ADRP X0, 0xC83000
	0x034725DC LDR X0, [X0 + 0x268]
	0x034725E0 BL 0x1C16D08
	0x034725E4 MOV X2, X0
	0x034725E8 MOV X0, X20
	0x034725EC MOV X1, X22
	0x034725F0 BL 0x2AA5018
	0x034725F4 MOV X22, X0
	0x034725F8 ADRP X0, 0xC81000
	0x034725FC LDR X0, [X0 + 0x758]
	0x03472600 BL 0x1C16D08
	0x03472604 MOV X1, X0
	0x03472608 CBNZ X22, 0x34726E0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF6C000
	009 Move W8, [X20+2034]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xCBF000
	016 Move X0, [X0+1992]
	017 Call 0x1C17CF4
	018 Move X0, 0xC85000
	019 Move X0, [X0+640]
	020 Call 0x1C17CF4
	021 Move X0, 0xC85000
	022 Move X0, [X0+664]
	023 Call 0x1C17CF4
	024 Move X0, 0xC82000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2034], W8
	029 Move [X31+8], X31
	030 Move W23, [X19]
	031 Compare W23, 0
	032 JumpIfEqual {83}
	033 Move X8, 0xC85000
	034 Move X8, [X8+664]
	035 Move X21, [X19+32]
	036 Move X22, [X19+40]
	037 Move X0, [X8]
	038 Call 0x1C17F10
	039 Move X20, X0
	040 Move W2, 1
	041 Move W3, 1
	042 Move X1, X21
	043 Move X4, X31
	044 Call GZipStream..ctor, X0, X1, X2, X3
	045 Move [X19+48], X20
	046 Compare X22, 0
	047 JumpIfEqual {155}
	048 Move X0, [X22+40]
	049 Compare X0, 0
	050 JumpIfEqual {156}
	051 Move X1, X20
	052 Move X2, X31
	053 Call HttpContent.CopyToAsync, X0, X1
	054 Compare X0, 0
	055 JumpIfEqual {157}
	056 Move X1, X31
	057 Call Task.GetAwaiter, X0
	058 Move [X31+8], X0
	059 Add X0, X31, 8
	060 Move X1, X31
	061 Call TaskAwaiter.get_IsCompleted, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {90}
	066 Move [X19], W31
	067 Move X8, [X31+8]
	068 Move [X19+56], X8
	069 Move X8, 0xC85000
	070 Move X8, [X8+640]
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X8, 0xCBF000
	077 Move X8, [X8+1992]
	078 Add X0, X19, 8
	079 Move X3, [X8]
	080 Add X1, X31, 8
	081 Move X2, X19
	082 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	083 Move X8, [X19+56]
	084 Move TEMP, 0
	085 Not TEMP
	086 Move W23, TEMP
	087 Move [X31+8], X8
	088 Move [X19+56], X31
	089 Move [X19], W23
	090 Add X0, X31, 8
	091 Move X1, X31
	092 Call TaskAwaiter.GetResult, X0
	093 Move X20, X31
	094 Move W22, 6
	095 Move TEMP, X23
	096 And TEMP, TEMP, -2147483648
	097 Compare TEMP, -2147483648
	098 JumpIfNotEqual {125}
	099 Move X21, [X19+48]
	100 Compare X21, 0
	101 JumpIfEqual {125}
	102 Move X10, 0xC82000
	103 Move X8, [X21]
	104 Move X10, [X10+3584]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move X1, [X10]
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X21
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X21
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X20, 0
	126 JumpIfNotEqual {153}
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Compare W22, 0
	129 JumpIfNotEqual {145}
	130 Move TEMP, 1
	131 Not TEMP
	132 Move W8, TEMP
	133 Move [X19+48], X31
	134 Move [X19+8], W8
	135 Move X8, 0xC85000
	136 Move X8, [X8+640]
	137 Move X0, [X8]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X19
	143 Move X1, X31
	144 Call AsyncTaskMethodBuilder.SetResult, X0
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X30, [X31+16]
	150 Move X23, [X31+24]
	151 Add X31, X31, 64
	152 Return 
	153 Move X0, X20
	154 Call 0x1C17F18
	155 Call 0x1C17F20
	156 Call 0x1C17F20
	157 Call 0x1C17F20
	158 Move X22, X1
	159 Move X21, X0
	160 Move W23, W31
	161 Move X22, X1
	162 Move X21, X0
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, X21
	165 Call 0x3EB2AD0
	166 Move X20, [X0]
	167 Call 0x3EB2AE0
	168 Move W22, W31
	169 Move TEMP, X23
	170 And TEMP, TEMP, -2147483648
	171 Compare TEMP, -2147483648
	172 JumpIfNotEqual {125}
	173 Move X20, X31
	174 Move TEMP, X23
	175 And TEMP, TEMP, -2147483648
	176 Compare TEMP, -2147483648
	177 JumpIfNotEqual {204}
	178 Move X23, [X19+48]
	179 Compare X23, 0
	180 JumpIfEqual {204}
	181 Move X10, 0xC82000
	182 Move X8, [X23]
	183 Move X10, [X10+3584]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Move X1, [X10]
	186 Compare X9, 0
	187 JumpIfEqual {194}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Move X0, X23
	195 Move W2, W31
	196 Call 0x1C5D788
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Add X8, X8, X9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X1, [X0+8]
	202 Move X0, X23
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Compare X20, 0
	205 JumpIfEqual {216}
	206 Move X0, X20
	207 Call 0x1C17F18
	208 Move X22, X1
	209 Move X21, X0
	210 Move TEMP, X23
	211 And TEMP, TEMP, -2147483648
	212 Compare TEMP, -2147483648
	213 JumpIfNotEqual {204}
	214 Move X22, X1
	215 Move X21, X0
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X0, X21
	218 Call 0x3EB2AD0
	219 Move X20, X0
	220 Move X0, 0xC82000
	221 Move X0, [X0+2000]
	222 Call 0x1C17D08
	223 Move X8, [X20]
	224 Move X1, [X8]
	225 Call 0x1C18270
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {247}
	230 Move X20, [X20]
	231 Call 0x3EB2AE0
	232 Move TEMP, 1
	233 Not TEMP
	234 Move W8, TEMP
	235 Move [X19+8], W8
	236 Move X0, 0xC85000
	237 Move X0, [X0+640]
	238 Call 0x1C17D08
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X0, X19
	244 Move X1, X20
	245 Move X2, X31
	246 Call AsyncTaskMethodBuilder.SetException, X0, X1
	247 Move W0, 8
	248 Call 0x3EB2AF0
	249 Move X8, [X20]
	250 Move [X0], X8
	251 Move X1, 0xA43000
	252 Add X1, X1, 3672
	253 Move X2, X31
	254 Call 0x3EB2B00
	255 Move X21, X0
	256 Call 0x3EB2AE0
	257 Move X0, X21
	258 Call 0x1D2D690
	259 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0347260C BL 0x1C16F20
	0x03472610 LDR X8, [X0]
	0x03472614 LDP X9, X1, [X8 + 0x168]
	0x03472618 BLR X9
	0x0347261C MOV X21, X0
	0x03472620 B 0x3472598
	0x03472624 MOVN W23, 0x0
	0x03472628 LDR X8, [X19 + 0x60]
	0x0347262C CBNZ X8, 0x3472634
	0x03472630 BL 0x1C16F20
	0x03472634 LDRSW X24, [X8 + 0x20]
	0x03472638 ADRP X0, 0xC82000
	0x0347263C LDR X0, [X0 + 0x6F0]
	0x03472640 BL 0x1C16D08
	0x03472644 BL 0x1C16F10
	0x03472648 MOV X22, X0
	0x0347264C MOV X1, X24
	0x03472650 MOV X2, X21
	0x03472654 MOV W3, W23
	0x03472658 MOV X4, X31
	0x0347265C BL 0x3400264
	0x03472660 ADRP X0, 0xC84000
	0x03472664 LDR X0, [X0 + 0x238]
	0x03472668 BL 0x1C16D08
	0x0347266C MOV X21, X0
	0x03472670 ADRP X0, 0xC83000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF6C000
	007 Move X22, 0xC85000
	008 Move W8, [X21+2035]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC85000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2035], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

