Type: Nakama.ApiClient/<WriteTournamentRecord2Async>d__85

Method: System.Void MoveNext()

Disassembly:
	0x0343ECBC STP X22, X21, [X31 + 0x10]
	0x0343ECC0 STP X20, X19, [X31 + 0x20]
	0x0343ECC4 ADRP X22, 0xF9F000
	0x0343ECC8 ADRP X20, 0xCF1000
	0x0343ECCC ADRP X21, 0xCF1000
	0x0343ECD0 LDRB W8, [X22 + 0x6A0]
	0x0343ECD4 LDR X20, [X20 + 0x5B0]
	0x0343ECD8 LDR X21, [X21 + 0x5B8]
	0x0343ECDC MOV X19, X0
	0x0343ECE0 TBNZ X8, 0x0, 0x343ED04
	0x0343ECE4 ADRP X0, 0xCF1000
	0x0343ECE8 LDR X0, [X0 + 0x5B8]
	0x0343ECEC BL 0x1C16CF4
	0x0343ECF0 ADRP X0, 0xCF1000
	0x0343ECF4 LDR X0, [X0 + 0x5B0]
	0x0343ECF8 BL 0x1C16CF4
	0x0343ECFC MOVZ W8, 0x1
	0x0343ED00 STRB W8, [X22 + 0x6A0]
	0x0343ED04 LDR X1, [X19 + 0x10]
	0x0343ED08 LDR X0, [X20]
	0x0343ED0C LDR X2, [X21]
	0x0343ED10 LDP X20, X19, [X31 + 0x20]
	0x0343ED14 LDP X22, X21, [X31 + 0x10]
	0x0343ED18 MOV X3, X31
	0x0343ED1C LDR X30, [X31], #0x30
	0x0343ED20 B 0x32274B8
	0x0343ED24 MOV X1, X31
	0x0343ED28 B 0x33BDD8C
	0x0343ED2C LDR X0, [X0 + 0x10]
	0x0343ED30 RET
	0x0343ED34 STR X1, [X0 + 0x10]
	0x0343ED38 RET
	0x0343ED3C LDR X0, [X0 + 0x18]
	0x0343ED40 RET
	0x0343ED44 STR X1, [X0 + 0x18]
	0x0343ED48 RET
	0x0343ED4C STP X30, X21, [X31 - 0x20]!
	0x0343ED50 STP X20, X19, [X31 + 0x10]
	0x0343ED54 ADRP X20, 0xF9F000
	0x0343ED58 ADRP X21, 0xCB5000
	0x0343ED5C LDRB W8, [X20 + 0x6A1]
	0x0343ED60 LDR X21, [X21 + 0xAC8]
	0x0343ED64 MOV X19, X0
	0x0343ED68 TBNZ X8, 0x0, 0x343EDA4
	0x0343ED6C ADRP X0, 0xCB5000
	0x0343ED70 LDR X0, [X0 + 0xAC8]
	0x0343ED74 BL 0x1C16CF4
	0x0343ED78 ADRP X0, 0xCF1000
	0x0343ED7C LDR X0, [X0 + 0x5B8]
	0x0343ED80 BL 0x1C16CF4
	0x0343ED84 ADRP X0, 0xCF1000
	0x0343ED88 LDR X0, [X0 + 0x5C0]
	0x0343ED8C BL 0x1C16CF4
	0x0343ED90 ADRP X0, 0xCF1000
	0x0343ED94 LDR X0, [X0 + 0x5C8]
	0x0343ED98 BL 0x1C16CF4
	0x0343ED9C MOVZ W8, 0x1
	0x0343EDA0 STRB W8, [X20 + 0x6A1]
	0x0343EDA4 LDR X0, [X21]
	0x0343EDA8 MOVZ W1, 0x5
	0x0343EDAC BL 0x1C16D6C
	0x0343EDB0 CBZ X0, 0x343EE30
	0x0343EDB4 LDR W8, [X0 + 0x18]
	0x0343EDB8 CBZ W8, 0x343EE2C
	0x0343EDBC ADRP X9, 0xCF1000
	0x0343EDC0 LDR X9, [X9 + 0x5C0]
	0x0343EDC4 CMP W8, 0x1
	0x0343EDC8 LDR X9, [X9]
	0x0343EDCC STR X9, [X0 + 0x20]
	0x0343EDD0 B.EQ 0x343EE2C
	0x0343EDD4 LDR X9, [X19 + 0x10]
	0x0343EDD8 CMP W8, 0x2
	0x0343EDDC STR X9, [X0 + 0x28]
	0x0343EDE0 B.LS 0x343EE2C
	0x0343EDE4 ADRP X9, 0xCF1000
	0x0343EDE8 LDR X9, [X9 + 0x5C8]
	0x0343EDEC CMP W8, 0x3
	0x0343EDF0 LDR X9, [X9]
	0x0343EDF4 STR X9, [X0 + 0x30]
	0x0343EDF8 B.EQ 0x343EE2C
	0x0343EDFC LDR X9, [X19 + 0x18]
	0x0343EE00 CMP W8, 0x4
	0x0343EE04 STR X9, [X0 + 0x38]
	0x0343EE08 B.LS 0x343EE2C
	0x0343EE0C ADRP X8, 0xCF1000
	0x0343EE10 LDR X8, [X8 + 0x5B8]
	0x0343EE14 LDP X20, X19, [X31 + 0x10]
	0x0343EE18 MOV X1, X31
	0x0343EE1C LDR X8, [X8]
	0x0343EE20 STR X8, [X0 + 0x40]
	0x0343EE24 LDP X30, X21, [X31], #0x20
	0x0343EE28 B 0x32278CC
	0x0343EE2C BL 0x1C16F28
	0x0343EE30 BL 0x1C16F20
	0x0343EE34 MOV X1, X31
	0x0343EE38 B 0x33BDD8C
	0x0343EE3C LDR X0, [X0 + 0x10]
	0x0343EE40 RET
	0x0343EE44 STR X1, [X0 + 0x10]
	0x0343EE48 RET
	0x0343EE4C LDR X0, [X0 + 0x18]
	0x0343EE50 RET
	0x0343EE54 STR X1, [X0 + 0x18]
	0x0343EE58 RET
	0x0343EE5C STP X30, X21, [X31 - 0x20]!
	0x0343EE60 STP X20, X19, [X31 + 0x10]
	0x0343EE64 ADRP X20, 0xF9F000
	0x0343EE68 ADRP X21, 0xCB5000
	0x0343EE6C LDRB W8, [X20 + 0x6A2]
	0x0343EE70 LDR X21, [X21 + 0xAC8]
	0x0343EE74 MOV X19, X0
	0x0343EE78 TBNZ X8, 0x0, 0x343EEB4
	0x0343EE7C ADRP X0, 0xCB5000
	0x0343EE80 LDR X0, [X0 + 0xAC8]
	0x0343EE84 BL 0x1C16CF4
	0x0343EE88 ADRP X0, 0xCF1000
	0x0343EE8C LDR X0, [X0 + 0x5B8]
	0x0343EE90 BL 0x1C16CF4
	0x0343EE94 ADRP X0, 0xCF1000
	0x0343EE98 LDR X0, [X0 + 0x5D0]
	0x0343EE9C BL 0x1C16CF4
	0x0343EEA0 ADRP X0, 0xCF1000
	0x0343EEA4 LDR X0, [X0 + 0x5D8]
	0x0343EEA8 BL 0x1C16CF4
	0x0343EEAC MOVZ W8, 0x1
	0x0343EEB0 STRB W8, [X20 + 0x6A2]
	0x0343EEB4 LDR X0, [X21]
	0x0343EEB8 MOVZ W1, 0x5
	0x0343EEBC BL 0x1C16D6C
	0x0343EEC0 CBZ X0, 0x343EF40
	0x0343EEC4 LDR W8, [X0 + 0x18]
	0x0343EEC8 CBZ W8, 0x343EF3C
	0x0343EECC ADRP X9, 0xCF1000
	0x0343EED0 LDR X9, [X9 + 0x5D8]
	0x0343EED4 CMP W8, 0x1
	0x0343EED8 LDR X9, [X9]
	0x0343EEDC STR X9, [X0 + 0x20]
	0x0343EEE0 B.EQ 0x343EF3C
	0x0343EEE4 LDR X9, [X19 + 0x10]
	0x0343EEE8 CMP W8, 0x2
	0x0343EEEC STR X9, [X0 + 0x28]
	0x0343EEF0 B.LS 0x343EF3C
	0x0343EEF4 ADRP X9, 0xCF1000
	0x0343EEF8 LDR X9, [X9 + 0x5D0]
	0x0343EEFC CMP W8, 0x3
	0x0343EF00 LDR X9, [X9]
	0x0343EF04 STR X9, [X0 + 0x30]
	0x0343EF08 B.EQ 0x343EF3C
	0x0343EF0C LDR X9, [X19 + 0x18]
	0x0343EF10 CMP W8, 0x4
	0x0343EF14 STR X9, [X0 + 0x38]
	0x0343EF18 B.LS 0x343EF3C
	0x0343EF1C ADRP X8, 0xCF1000
	0x0343EF20 LDR X8, [X8 + 0x5B8]
	0x0343EF24 LDP X20, X19, [X31 + 0x10]
	0x0343EF28 MOV X1, X31
	0x0343EF2C LDR X8, [X8]
	0x0343EF30 STR X8, [X0 + 0x40]
	0x0343EF34 LDP X30, X21, [X31], #0x20
	0x0343EF38 B 0x32278CC
	0x0343EF3C BL 0x1C16F28
	0x0343EF40 BL 0x1C16F20
	0x0343EF44 MOV X1, X31
	0x0343EF48 B 0x33BDD8C
	0x0343EF4C LDR X0, [X0 + 0x10]
	0x0343EF50 RET
	0x0343EF54 STR X1, [X0 + 0x10]
	0x0343EF58 RET
	0x0343EF5C LDR X0, [X0 + 0x18]
	0x0343EF60 RET
	0x0343EF64 STR X1, [X0 + 0x18]
	0x0343EF68 RET
	0x0343EF6C LDR X0, [X0 + 0x20]
	0x0343EF70 RET
	0x0343EF74 STR X1, [X0 + 0x20]
	0x0343EF78 RET
	0x0343EF7C STP X30, X21, [X31 - 0x20]!
	0x0343EF80 STP X20, X19, [X31 + 0x10]
	0x0343EF84 ADRP X20, 0xF9F000
	0x0343EF88 ADRP X21, 0xCB5000
	0x0343EF8C LDRB W8, [X20 + 0x6A3]
	0x0343EF90 LDR X21, [X21 + 0xAC8]
	0x0343EF94 MOV X19, X0
	0x0343EF98 TBNZ X8, 0x0, 0x343EFE0
	0x0343EF9C ADRP X0, 0xCB5000
	0x0343EFA0 LDR X0, [X0 + 0xAC8]
	0x0343EFA4 BL 0x1C16CF4
	0x0343EFA8 ADRP X0, 0xCF1000
	0x0343EFAC LDR X0, [X0 + 0x5B8]
	0x0343EFB0 BL 0x1C16CF4
	0x0343EFB4 ADRP X0, 0xCF1000
	0x0343EFB8 LDR X0, [X0 + 0x5E0]
	0x0343EFBC BL 0x1C16CF4
	0x0343EFC0 ADRP X0, 0xCF1000
	0x0343EFC4 LDR X0, [X0 + 0x5D0]
	0x0343EFC8 BL 0x1C16CF4
	0x0343EFCC ADRP X0, 0xCF1000
	0x0343EFD0 LDR X0, [X0 + 0x5C8]
	0x0343EFD4 BL 0x1C16CF4
	0x0343EFD8 MOVZ W8, 0x1
	0x0343EFDC STRB W8, [X20 + 0x6A3]
	0x0343EFE0 LDR X0, [X21]
	0x0343EFE4 MOVZ W1, 0x7
	0x0343EFE8 BL 0x1C16D6C
	0x0343EFEC CBZ X0, 0x343F094
	0x0343EFF0 LDR W8, [X0 + 0x18]
	0x0343EFF4 CBZ W8, 0x343F090
	0x0343EFF8 ADRP X9, 0xCF1000
	0x0343EFFC LDR X9, [X9 + 0x5E0]
	0x0343F000 CMP W8, 0x1
	0x0343F004 LDR X9, [X9]
	0x0343F008 STR X9, [X0 + 0x20]
	0x0343F00C B.EQ 0x343F090
	0x0343F010 LDR X9, [X19 + 0x10]
	0x0343F014 CMP W8, 0x2
	0x0343F018 STR X9, [X0 + 0x28]
	0x0343F01C B.LS 0x343F090
	0x0343F020 ADRP X9, 0xCF0000
	0x0343F024 LDR X9, [X9 + 0x5C8]
	0x0343F028 CMP W8, 0x3
	0x0343F02C LDR X9, [X9]
	0x0343F030 STR X9, [X0 + 0x30]
	0x0343F034 B.EQ 0x343F090
	0x0343F038 LDR X9, [X19 + 0x18]
	0x0343F03C CMP W8, 0x4
	0x0343F040 STR X9, [X0 + 0x38]
	0x0343F044 B.LS 0x343F090
	0x0343F048 ADRP X9, 0xCF0000
	0x0343F04C LDR X9, [X9 + 0x5D0]
	0x0343F050 CMP W8, 0x5
	0x0343F054 LDR X9, [X9]
	0x0343F058 STR X9, [X0 + 0x40]
	0x0343F05C B.EQ 0x343F090
	0x0343F060 LDR X9, [X19 + 0x20]
	0x0343F064 CMP W8, 0x6
	0x0343F068 STR X9, [X0 + 0x48]
	0x0343F06C B.LS 0x343F090
	0x0343F070 ADRP X8, 0xCF0000
	0x0343F074 LDR X8, [X8 + 0x5B8]
	0x0343F078 LDP X20, X19, [X31 + 0x10]
	0x0343F07C MOV X1, X31
	0x0343F080 LDR X8, [X8]
	0x0343F084 STR X8, [X0 + 0x50]
	0x0343F088 LDP X30, X21, [X31], #0x20
	0x0343F08C B 0x32278CC
	0x0343F090 BL 0x1C16F28
	0x0343F094 BL 0x1C16F20
	0x0343F098 MOV X1, X31
	0x0343F09C B 0x33BDD8C
	0x0343F0A0 LDRB W0, [X0 + 0x10]
	0x0343F0A4 RET
	0x0343F0A8 LDR X0, [X0 + 0x18]
	0x0343F0AC RET
	0x0343F0B0 STR X1, [X0 + 0x18]
	0x0343F0B4 RET
	0x0343F0B8 LDR X0, [X0 + 0x20]
	0x0343F0BC RET
	0x0343F0C0 LDR X0, [X0 + 0x50]
	0x0343F0C4 RET
	0x0343F0C8 STP X30, X21, [X31 - 0x20]!
	0x0343F0CC STP X20, X19, [X31 + 0x10]
	0x0343F0D0 ADRP X21, 0xF9E000
	0x0343F0D4 LDRB W8, [X21 + 0x6A4]
	0x0343F0D8 MOV X19, X1
	0x0343F0DC MOV X20, X0
	0x0343F0E0 TBNZ X8, 0x0, 0x343F0F8
	0x0343F0E4 ADRP X0, 0xCEF000
	0x0343F0E8 LDR X0, [X0 + 0x7B8]
	0x0343F0EC BL 0x1C16CF4
	0x0343F0F0 MOVZ W8, 0x1
	0x0343F0F4 STRB W8, [X21 + 0x6A4]
	0x0343F0F8 LDR X8, [X20 + 0x48]
	0x0343F0FC CBZ X8, 0x343F180
	0x0343F100 LDR X21, [X8 + 0x10]
	0x0343F104 CBZ X21, 0x343F180
	0x0343F108 ADRP X10, 0xCEF000
	0x0343F10C LDR X8, [X21]
	0x0343F110 LDR X10, [X10 + 0x7B8]
	0x0343F114 LDRH W9, [X8 + 0x12E]
	0x0343F118 LDR X1, [X10]
	0x0343F11C CBZ X9, 0x343F140
	0x0343F120 LDR X10, [X8 + 0xB0]
	0x0343F124 ADD X10, X10, 0x8
	0x0343F128 LDUR X11, [X10 - 0x8]
	0x0343F12C CMP X11, X1
	0x0343F130 B.EQ 0x343F150
	0x0343F134 SUBS X9, X9, 0x1
	0x0343F138 ADD X10, X10, 0x10
	0x0343F13C B.NE 0x343F128
	0x0343F140 MOVZ W2, 0x2
	0x0343F144 MOV X0, X21
	0x0343F148 BL 0x1C5C788
	0x0343F14C B 0x343F160
	0x0343F150 LDR W9, [X10]
	0x0343F154 ADD W9, W9, 0x2
	0x0343F158 ADD X8, X8, W9, 0x4, SXTW
	0x0343F15C ADD X0, X8, 0x138
	0x0343F160 LDP X8, X2, [X0]
	0x0343F164 MOV X0, X21
	0x0343F168 MOV X1, X19
	0x0343F16C BLR X8
	0x0343F170 STR X19, [X20 + 0x50]
	0x0343F174 LDP X20, X19, [X31 + 0x10]
	0x0343F178 LDP X30, X21, [X31], #0x20
	0x0343F17C RET
	0x0343F180 BL 0x1C16F20
	0x0343F184 LDR W0, [X0 + 0x28]
	0x0343F188 RET
	0x0343F18C LDR X0, [X0 + 0x30]
	0x0343F190 RET
	0x0343F194 LDR X0, [X0 + 0x38]
	0x0343F198 RET
	0x0343F19C STR X30, [X31 - 0x40]!
	0x0343F1A0 STP X24, X23, [X31 + 0x10]
	0x0343F1A4 STP X22, X21, [X31 + 0x20]
	0x0343F1A8 STP X20, X19, [X31 + 0x30]
	0x0343F1AC ADRP X21, 0xF9E000
	0x0343F1B0 LDRB W8, [X21 + 0x6A5]
	0x0343F1B4 MOV X19, X1
	0x0343F1B8 MOV X20, X0
	0x0343F1BC TBNZ X8, 0x0, 0x343F1D4
	0x0343F1C0 ADRP X0, 0xCB6000
	0x0343F1C4 LDR X0, [X0 + 0x9F8]
	0x0343F1C8 BL 0x1C16CF4
	0x0343F1CC MOVZ W8, 0x1
	0x0343F1D0 STRB W8, [X21 + 0x6A5]
	0x0343F1D4 ADRP X24, 0xCB6000
	0x0343F1D8 LDR X21, [X20 + 0x40]!
	0x0343F1DC LDR X24, [X24 + 0x9F8]
	0x0343F1E0 MOV X0, X21
	0x0343F1E4 MOV X1, X19
	0x0343F1E8 MOV X2, X31
	0x0343F1EC BL 0x33C0DE4
	0x0343F1F0 CBZ X0, 0x343F210
	0x0343F1F4 LDR X23, [X24]
	0x0343F1F8 MOV X22, X0
	0x0343F1FC MOV X1, X23
	0x0343F200 BL 0x1C16E00
	0x0343F204 MOV X1, X0
	0x0343F208 CBNZ X0, 0x343F214
	0x0343F20C B 0x343F240
	0x0343F210 MOV X1, X31
	0x0343F214 MOV X0, X20
	0x0343F218 MOV X2, X21
	0x0343F21C BL 0x1C24138
	0x0343F220 CMP X21, X0
	0x0343F224 MOV X21, X0
	0x0343F228 B.NE 0x343F1E0
	0x0343F22C LDP X20, X19, [X31 + 0x30]
	0x0343F230 LDP X22, X21, [X31 + 0x20]
	0x0343F234 LDP X24, X23, [X31 + 0x10]
	0x0343F238 LDR X30, [X31], #0x40
	0x0343F23C RET
	0x0343F240 MOV X0, X22
	0x0343F244 MOV X1, X23
	0x0343F248 BL 0x1C171E0
	0x0343F24C STR X30, [X31 - 0x40]!
	0x0343F250 STP X24, X23, [X31 + 0x10]
	0x0343F254 STP X22, X21, [X31 + 0x20]
	0x0343F258 STP X20, X19, [X31 + 0x30]
	0x0343F25C ADRP X21, 0xF9E000
	0x0343F260 LDRB W8, [X21 + 0x6A6]
	0x0343F264 MOV X19, X1
	0x0343F268 MOV X20, X0
	0x0343F26C TBNZ X8, 0x0, 0x343F284
	0x0343F270 ADRP X0, 0xCB6000
	0x0343F274 LDR X0, [X0 + 0x9F8]
	0x0343F278 BL 0x1C16CF4
	0x0343F27C MOVZ W8, 0x1
	0x0343F280 STRB W8, [X21 + 0x6A6]
	0x0343F284 ADRP X24, 0xCB6000
	0x0343F288 LDR X21, [X20 + 0x40]!
	0x0343F28C LDR X24, [X24 + 0x9F8]
	0x0343F290 MOV X0, X21
	0x0343F294 MOV X1, X19
	0x0343F298 MOV X2, X31
	0x0343F29C BL 0x33C0FDC
	0x0343F2A0 CBZ X0, 0x343F2C0
	0x0343F2A4 LDR X23, [X24]
	0x0343F2A8 MOV X22, X0
	0x0343F2AC MOV X1, X23
	0x0343F2B0 BL 0x1C16E00
	0x0343F2B4 MOV X1, X0
	0x0343F2B8 CBNZ X0, 0x343F2C4
	0x0343F2BC B 0x343F2F0
	0x0343F2C0 MOV X1, X31
	0x0343F2C4 MOV X0, X20
	0x0343F2C8 MOV X2, X21
	0x0343F2CC BL 0x1C24138
	0x0343F2D0 CMP X21, X0
	0x0343F2D4 MOV X21, X0
	0x0343F2D8 B.NE 0x343F290
	0x0343F2DC LDP X20, X19, [X31 + 0x30]
	0x0343F2E0 LDP X22, X21, [X31 + 0x20]
	0x0343F2E4 LDP X24, X23, [X31 + 0x10]
	0x0343F2E8 LDR X30, [X31], #0x40
	0x0343F2EC RET
	0x0343F2F0 MOV X0, X22
	0x0343F2F4 MOV X1, X23
	0x0343F2F8 BL 0x1C171E0
	0x0343F2FC STR X30, [X31 - 0x10]!
	0x0343F300 LDR X8, [X0 + 0x48]
	0x0343F304 CBZ X8, 0x343F314
	0x0343F308 LDR W0, [X8 + 0x18]
	0x0343F30C LDR X30, [X31], #0x10
	0x0343F310 RET
	0x0343F314 BL 0x1C16F20
	0x0343F318 STR X30, [X31 - 0x10]!
	0x0343F31C LDR X8, [X0 + 0x48]
	0x0343F320 CBZ X8, 0x343F330
	0x0343F324 STR W1, [X8 + 0x18]
	0x0343F328 LDR X30, [X31], #0x10
	0x0343F32C RET
	0x0343F330 BL 0x1C16F20
	0x0343F334 STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA0000
	014 Move W8, [X20+1691]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xCF2000
	021 Move X0, [X0+1416]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF2000
	024 Move X0, [X0+1320]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF1000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBF000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCB7000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB7000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB7000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF1000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF2000
	045 Move X0, [X0+1328]
	046 Call 0x1C17CF4
	047 Move X0, 0xCB9000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCB9000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCB9000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCBF000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCB8000
	060 Move X0, [X0+2600]
	061 Call 0x1C17CF4
	062 Move X0, 0xCDF000
	063 Move X0, [X0+1240]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF1000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xCF1000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xCF1000
	072 Move X0, [X0+3184]
	073 Call 0x1C17CF4
	074 Move X0, 0xCB6000
	075 Move X0, [X0+2440]
	076 Call 0x1C17CF4
	077 Move X0, 0xCF1000
	078 Move X0, [X0+3192]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+1691], W8
	082 Move [X31+24], X31
	083 Move X28, 0xCF1000
	084 Move W8, [X19]
	085 Move X28, [X28+1528]
	086 Compare W8, 0
	087 JumpIfEqual {239}
	088 Move X21, [X19+32]
	089 Compare X21, 0
	090 JumpIfEqual {331}
	091 Move X8, [X19+40]
	092 Compare X8, 0
	093 JumpIfEqual {349}
	094 Move X8, 0xCB8000
	095 Move X8, [X8+2600]
	096 Move X0, [X8]
	097 Move X8, 0xCF1000
	098 Move X8, [X8+3184]
	099 Move X25, [X19+48]
	100 Move W9, [X0+224]
	101 Move X20, [X8]
	102 Compare W9, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X21
	106 Move X1, X31
	107 Call Uri.EscapeDataString, X0
	108 Compare X20, 0
	109 JumpIfEqual {367}
	110 Move X8, 0xCF1000
	111 Move X8, [X8+3192]
	112 Move X2, X0
	113 Move X1, [X8]
	114 Move X0, X20
	115 Move X3, X31
	116 Call String.Replace, X0, X1, X2
	117 Compare X25, 0
	118 JumpIfEqual {368}
	119 Move X21, X0
	120 Move X0, [X25+32]
	121 Compare X0, 0
	122 JumpIfEqual {369}
	123 Move X8, 0xCB6000
	124 Move X8, [X8+2440]
	125 Move X20, [X8]
	126 Move X1, X31
	127 Call Uri.get_AbsolutePath, X0
	128 Move X8, 0xCBF000
	129 Move X8, [X8+2264]
	130 Move X22, X0
	131 Move X0, [X8]
	132 Move W1, 1
	133 Call 0x1C17D6C
	134 Move X1, X0
	135 Compare X1, 0
	136 JumpIfEqual {370}
	137 Move W8, [X1+24]
	138 Compare W8, 0
	139 JumpIfEqual {371}
	140 Move W8, 47
	141 NotImplemented "Instruction STRH not yet implemented."
	142 Compare X22, 0
	143 JumpIfEqual {372}
	144 Move X0, X22
	145 Move X2, X31
	146 Call String.TrimEnd, X0, X1
	147 Move X1, X21
	148 Move X2, X31
	149 Call String.Concat, X0, X1
	150 Move X8, 0xCBF000
	151 Move X8, [X8+928]
	152 Move X22, X0
	153 Move X23, [X25+32]
	154 Move X0, [X8]
	155 Call 0x1C17F10
	156 Move X21, X0
	157 Move X1, X23
	158 Move X2, X31
	159 Call UriBuilder..ctor, X0, X1
	160 Compare X21, 0
	161 JumpIfEqual {373}
	162 Move X0, X21
	163 Move X1, X22
	164 Move X2, X31
	165 Call UriBuilder.set_Path, X0, X1
	166 Move X0, X21
	167 Move X1, X20
	168 Move X2, X31
	169 Call UriBuilder.set_Query, X0, X1
	170 Move X0, X21
	171 Move X1, X31
	172 Call UriBuilder.get_Uri, X0
	173 Move X8, 0xCDF000
	174 Move X9, 0xCB7000
	175 Move X8, [X8+1240]
	176 Move X9, [X9+1744]
	177 Move X20, X0
	178 Move X21, [X8]
	179 Move X0, [X9]
	180 Call 0x1C17F10
	181 Move X8, 0xCB7000
	182 Move X8, [X8+1728]
	183 Move X22, X0
	184 Move X1, [X8]
	185 Call Dictionary`2<Object, Object>..ctor, X0
	186 Move X8, 0xCF1000
	187 Move X8, [X8+2008]
	188 Move X1, [X19+56]
	189 Move X0, [X8]
	190 Move X2, X31
	191 Call String.Concat, X0, X1
	192 Compare X22, 0
	193 JumpIfEqual {374}
	194 Move X8, 0xCF1000
	195 Move X8, [X8+2000]
	196 Move X9, 0xCB7000
	197 Move X9, [X9+2064]
	198 Move X2, X0
	199 Move X1, [X8]
	200 Move X3, [X9]
	201 Move X0, X22
	202 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	203 Move X0, [X19+40]
	204 Move X1, X31
	205 Call JsonWriter.ToJson, X0
	206 Move X23, X0
	207 Move X0, X31
	208 Call Encoding.get_UTF8
	209 Compare X0, 0
	210 JumpIfEqual {375}
	211 Move X8, [X0]
	212 Move X9, [X8+616]
	213 Move X2, [X8+624]
	214 Move X1, X23
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X24, [X25+16]
	217 Compare X24, 0
	218 JumpIfEqual {376}
	219 Move X10, 0xCF1000
	220 Move X10, [X10+1976]
	221 Move X8, [X24]
	222 Move W26, [X25+24]
	223 Move X27, [X19+64]
	224 Move X25, [X19+72]
	225 Move X1, [X10]
	226 NotImplemented "Instruction LDRH not yet implemented."
	227 Move X23, X0
	228 Compare X9, 0
	229 JumpIfEqual {236}
	230 Move X10, [X8+176]
	231 Add X10, X10, 8
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Subtract X9, X9, 1
	235 Add X10, X10, 16
	236 Move W2, 3
	237 Move X0, X24
	238 Call 0x1C5D788
	239 Move X8, [X19+80]
	240 Move TEMP, 0
	241 Not TEMP
	242 Move W9, TEMP
	243 Move [X31+24], X8
	244 Move [X19+80], X31
	245 Move [X19], W9
	246 Move W9, [X10]
	247 Add W9, W9, 3
	248 Add X8, X8, W9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X9, [X0+8]
	252 Move X0, X24
	253 Move X1, X21
	254 Move X2, X20
	255 Move X3, X22
	256 Move X4, X23
	257 Move W5, W26
	258 Move X6, X27
	259 Move X7, X25
	260 Move [X31], X9
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Compare X0, 0
	263 JumpIfEqual {377}
	264 Move X8, 0xCB8000
	265 Move X8, [X8+504]
	266 Move X1, [X8]
	267 Call Task`1<Object>.GetAwaiter, X0
	268 Move X8, 0xCB8000
	269 Move X8, [X8+496]
	270 Move [X31+24], X0
	271 Move X1, [X8]
	272 Add X0, X31, 24
	273 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {303}
	278 Move X8, 0xCB8000
	279 Move X8, [X8+480]
	280 Add X0, X31, 24
	281 Move X1, [X8]
	282 Call TaskAwaiter`1<Object>.GetResult, X0
	283 Move X8, 0xCF1000
	284 Move X8, [X8+1328]
	285 Move X1, [X8]
	286 Call JsonParser.FromJson, X0
	287 Move TEMP, 1
	288 Not TEMP
	289 Move W8, TEMP
	290 Move [X19+8], W8
	291 Move X20, X0
	292 Move X0, [X28]
	293 Move X21, 0xCF1000
	294 Move W8, [X0+224]
	295 Move X21, [X21+1320]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move X2, [X21]
	300 Move X0, X19
	301 Move X1, X20
	302 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	303 Move [X19], W31
	304 Move X8, [X31+24]
	305 Move [X19+80], X8
	306 Move X0, [X28]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move X8, 0xCF1000
	312 Move X8, [X8+1416]
	313 Add X0, X19, 8
	314 Move X3, [X8]
	315 Add X1, X31, 24
	316 Move X2, X19
	317 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	318 Move X20, [X31+96]
	319 Move X19, [X31+104]
	320 Move X22, [X31+80]
	321 Move X21, [X31+88]
	322 Move X24, [X31+64]
	323 Move X23, [X31+72]
	324 Move X26, [X31+48]
	325 Move X25, [X31+56]
	326 Move X28, [X31+32]
	327 Move X27, [X31+40]
	328 Move X30, [X31+16]
	329 Add X31, X31, 112
	330 Return 
	331 Move X0, 0xCBD000
	332 Move X0, [X0+1400]
	333 Call 0x1C17D08
	334 Call 0x1C17F10
	335 Move X20, X0
	336 Move X0, 0xCF0000
	337 Move X0, [X0+3200]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X20
	341 Move X2, X31
	342 Call ArgumentException..ctor, X0, X1
	343 Move X0, 0xCF1000
	344 Move X0, [X0+1424]
	345 Call 0x1C17D08
	346 Move X1, X0
	347 Move X0, X20
	348 Call 0x1C17DEC
	349 Move X0, 0xCBD000
	350 Move X0, [X0+1400]
	351 Call 0x1C17D08
	352 Call 0x1C17F10
	353 Move X20, X0
	354 Move X0, 0xCF1000
	355 Move X0, [X0+1344]
	356 Call 0x1C17D08
	357 Move X1, X0
	358 Move X0, X20
	359 Move X2, X31
	360 Call ArgumentException..ctor, X0, X1
	361 Move X0, 0xCF1000
	362 Move X0, [X0+1424]
	363 Call 0x1C17D08
	364 Move X1, X0
	365 Move X0, X20
	366 Call 0x1C17DEC
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F28
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Call 0x1C17F20
	375 Call 0x1C17F20
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Move X20, X0
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X0, X20
	381 Call 0x3EB2AD0
	382 Move X20, X0
	383 Move X0, 0xCB5000
	384 Move X0, [X0+2000]
	385 Call 0x1C17D08
	386 Move X8, [X20]
	387 Move X1, [X8]
	388 Call 0x1C18270
	389 Move TEMP, X0
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfNotEqual {413}
	393 Move X20, [X20]
	394 Call 0x3EB2AE0
	395 Move TEMP, 1
	396 Not TEMP
	397 Move W8, TEMP
	398 Move [X19+8], W8
	399 Move X0, 0xCF0000
	400 Move X0, [X0+1528]
	401 Call 0x1C17D08
	402 Move W8, [X0+224]
	403 Compare W8, 0
	404 JumpIfNotEqual {406}
	405 Call 0x1C17DFC
	406 Move X0, 0xCF1000
	407 Move X0, [X0+1352]
	408 Call 0x1C17D08
	409 Move X2, X0
	410 Move X0, X19
	411 Move X1, X20
	412 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	413 Move W0, 8
	414 Call 0x3EB2AF0
	415 Move X8, [X20]
	416 Move [X0], X8
	417 Move X1, 0xA76000
	418 Add X1, X1, 3672
	419 Move X2, X31
	420 Call 0x3EB2B00
	421 Move X20, X0
	422 Call 0x3EB2AE0
	423 Move X0, X20
	424 Call 0x1D2D690
	425 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343F338 STP X20, X19, [X31 + 0x10]
	0x0343F33C MOV X19, X1
	0x0343F340 MOV X20, X0
	0x0343F344 MOV W0, W31
	0x0343F348 MOV W1, W31
	0x0343F34C MOV X2, X31
	0x0343F350 BL 0x34718BC
	0x0343F354 MOV X2, X0
	0x0343F358 MOV X0, X20
	0x0343F35C MOV X1, X19
	0x0343F360 LDP X20, X19, [X31 + 0x10]
	0x0343F364 LDR X30, [X31], #0x20
	0x0343F368 B 0x343F36C
	0x0343F36C STR X30, [X31 - 0x40]!
	0x0343F370 STP X24, X23, [X31 + 0x10]
	0x0343F374 STP X22, X21, [X31 + 0x20]
	0x0343F378 STP X20, X19, [X31 + 0x30]
	0x0343F37C ADRP X22, 0xF9E000
	0x0343F380 ADRP X23, 0xCF0000
	0x0343F384 ADRP X24, 0xCC1000
	0x0343F388 LDRB W8, [X22 + 0x6A7]
	0x0343F38C LDR X23, [X23 + 0x5E8]
	0x0343F390 LDR X24, [X24 + 0x960]
	0x0343F394 MOV X19, X2
	0x0343F398 MOV X20, X1
	0x0343F39C MOV X21, X0
	0x0343F3A0 TBNZ X8, 0x0, 0x343F3C4
	0x0343F3A4 ADRP X0, 0xCF0000
	0x0343F3A8 LDR X0, [X0 + 0x5E8]
	0x0343F3AC BL 0x1C16CF4
	0x0343F3B0 ADRP X0, 0xCC1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF9F000
	007 Move X21, 0xCF0000
	008 Move W8, [X22+1692]
	009 Move X21, [X21+1528]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF1000
	017 Move X0, [X0+1360]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF0000
	020 Move X0, [X0+1528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1692], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1360]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

