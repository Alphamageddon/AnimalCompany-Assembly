Type: Nakama.GroupUserListGroupUser

Method: System.Int32 get_State()

Disassembly:
	0x034016F8 LDR X29, [X29 + 0x198]
	0x034016FC LDR X26, [X26 + 0xAC8]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_State(System.Int32 value)

Disassembly:
	0x03401700 LDR X24, [X24 + 0x360]
	0x03401704 LDR X25, [X25 + 0xFB8]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: Nakama.IApiUser get_User()

Disassembly:
	0x03401708 LDR X19, [X19 + 0x6D8]
	0x0340170C LDP X8, X1, [X0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: Nakama.ApiUser get__user()

Disassembly:
	0x03401710 MOV X0, X20
	0x03401714 BLR X8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__user(Nakama.ApiUser value)

Disassembly:
	0x03401718 MOV X20, X0
	0x0340171C MOV X0, X27

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03401720 CBZ X20, 0x3401914
	0x03401724 LDR X8, [X20]
	0x03401728 LDR X1, [X28]
	0x0340172C MOV X21, X0
	0x03401730 LDRH W9, [X8 + 0x12E]
	0x03401734 CBZ X9, 0x3401758
	0x03401738 LDR X10, [X8 + 0xB0]
	0x0340173C ADD X10, X10, 0x8
	0x03401740 LDUR X11, [X10 - 0x8]
	0x03401744 CMP X11, X1
	0x03401748 B.EQ 0x3401768
	0x0340174C SUBS X9, X9, 0x1
	0x03401750 ADD X10, X10, 0x10
	0x03401754 B.NE 0x3401740
	0x03401758 MOV X0, X20
	0x0340175C MOV W2, W31
	0x03401760 BL 0x1C5C788
	0x03401764 B 0x3401774
	0x03401768 LDRSW X9, [X10]
	0x0340176C ADD X8, X8, X9, 0x4, LSL
	0x03401770 ADD X0, X8, 0x138
	0x03401774 LDP X8, X1, [X0]
	0x03401778 MOV X0, X20
	0x0340177C BLR X8
	0x03401780 TBZ X0, 0x0, 0x3401858
	0x03401784 LDR X8, [X20]
	0x03401788 LDR X1, [X29]
	0x0340178C LDRH W9, [X8 + 0x12E]
	0x03401790 CBZ X9, 0x34017B4
	0x03401794 LDR X10, [X8 + 0xB0]
	0x03401798 ADD X10, X10, 0x8
	0x0340179C LDUR X11, [X10 - 0x8]
	0x034017A0 CMP X11, X1
	0x034017A4 B.EQ 0x34017C4
	0x034017A8 SUBS X9, X9, 0x1
	0x034017AC ADD X10, X10, 0x10
	0x034017B0 B.NE 0x340179C
	0x034017B4 MOV X0, X20
	0x034017B8 MOV W2, W31
	0x034017BC BL 0x1C5C788
	0x034017C0 B 0x34017D0
	0x034017C4 LDRSW X9, [X10]
	0x034017C8 ADD X8, X8, X9, 0x4, LSL
	0x034017CC ADD X0, X8, 0x138
	0x034017D0 LDP X8, X1, [X0]
	0x034017D4 MOV X0, X20
	0x034017D8 BLR X8
	0x034017DC MOV X23, X0
	0x034017E0 LDR X0, [X26]
	0x034017E4 MOV X22, X1
	0x034017E8 MOVZ W1, 0x5
	0x034017EC BL 0x1C16D6C
	0x034017F0 CBZ X0, 0x340191C
	0x034017F4 LDR W8, [X0 + 0x18]
	0x034017F8 CBZ W8, 0x3401924
	0x034017FC LDR X9, [X24]
	0x03401800 CMP W8, 0x1
	0x03401804 STR X9, [X0 + 0x20]
	0x03401808 B.EQ 0x3401918
	0x0340180C CMP W8, 0x2
	0x03401810 STR X23, [X0 + 0x28]
	0x03401814 B.LS 0x3401928
	0x03401818 LDR X9, [X25]
	0x0340181C CMP W8, 0x3
	0x03401820 STR X9, [X0 + 0x30]
	0x03401824 B.EQ 0x340192C
	0x03401828 CMP W8, 0x4
	0x0340182C STR X22, [X0 + 0x38]
	0x03401830 B.LS 0x3401920
	0x03401834 LDR X8, [X19]
	0x03401838 STR X8, [X0 + 0x40]
	0x0340183C MOV X1, X31
	0x03401840 BL 0x32278CC
	0x03401844 MOV X1, X0
	0x03401848 MOV X0, X21
	0x0340184C MOV X2, X31
	0x03401850 BL 0x321B938
	0x03401854 B 0x3401720
	0x03401858 MOV X22, X31
	0x0340185C CBZ X20, 0x34018C0
	0x03401860 LDR X8, [X20]
	0x03401864 ADRP X10, 0xCF2000
	0x03401868 LDRH W9, [X8 + 0x12E]
	0x0340186C LDR X10, [X10 + 0xE00]
	0x03401870 LDR X1, [X10]
	0x03401874 CBZ X9, 0x3401898
	0x03401878 LDR X10, [X8 + 0xB0]
	0x0340187C ADD X10, X10, 0x8
	0x03401880 LDUR X11, [X10 - 0x8]
	0x03401884 CMP X11, X1
	0x03401888 B.EQ 0x34018A8
	0x0340188C SUBS X9, X9, 0x1
	0x03401890 ADD X10, X10, 0x10
	0x03401894 B.NE 0x3401880
	0x03401898 MOV X0, X20
	0x0340189C MOV W2, W31
	0x034018A0 BL 0x1C5C788
	0x034018A4 B 0x34018B4
	0x034018A8 LDRSW X9, [X10]
	0x034018AC ADD X8, X8, X9, 0x4, LSL
	0x034018B0 ADD X0, X8, 0x138
	0x034018B4 LDP X8, X1, [X0]
	0x034018B8 MOV X0, X20
	0x034018BC BLR X8
	0x034018C0 CBNZ X22, 0x3401934
	0x034018C4 ADRP X8, 0xD2C000
	0x034018C8 LDR X8, [X8 + 0xD80]
	0x034018CC MOV X1, X21
	0x034018D0 MOV X3, X31
	0x034018D4 LDR X0, [X8]
	0x034018D8 ADRP X8, 0xCF2000
	0x034018DC LDR X8, [X8 + 0x848]
	0x034018E0 LDR X2, [X8]
	0x034018E4 BL 0x32274B8
	0x034018E8 MOV X1, X0
	0x034018EC LDR X0, [X31 + 0x8]
	0x034018F0 LDP X20, X19, [X31 + 0x60]
	0x034018F4 LDP X22, X21, [X31 + 0x50]
	0x034018F8 LDP X24, X23, [X31 + 0x40]
	0x034018FC LDP X26, X25, [X31 + 0x30]
	0x03401900 LDP X28, X27, [X31 + 0x20]
	0x03401904 LDP X29, X30, [X31 + 0x10]
	0x03401908 MOV X2, X31
	0x0340190C ADD X31, X31, 0x70
	0x03401910 B 0x321B938
	0x03401914 BL 0x1C16F20
	0x03401918 BL 0x1C16F28
	0x0340191C BL 0x1C16F20
	0x03401920 BL 0x1C16F28
	0x03401924 BL 0x1C16F28
	0x03401928 BL 0x1C16F28
	0x0340192C BL 0x1C16F28
	0x03401930 BL 0x1C16F20
	0x03401934 MOV X0, X22
	0x03401938 BL 0x1C16F18
	0x0340193C B 0x3401968
	0x03401940 B 0x3401968
	0x03401944 B 0x3401968
	0x03401948 B 0x3401968
	0x0340194C B 0x3401968
	0x03401950 B 0x3401968
	0x03401954 B 0x3401968
	0x03401958 MOV X21, X27
	0x0340195C B 0x3401968
	0x03401960 B 0x3401968
	0x03401964 B 0x3401968
	0x03401968 CMP W1, 0x1
	0x0340196C B.NE 0x3401980
	0x03401970 BL 0x3EB1AD0
	0x03401974 LDR X22, [X0]
	0x03401978 BL 0x3EB1AE0
	0x0340197C B 0x340185C
	0x03401980 MOV X19, X0
	0x03401984 MOV X22, X31
	0x03401988 B 0x3401990
	0x0340198C MOV X19, X0
	0x03401990 CBZ X20, 0x34019F4
	0x03401994 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xFDD000
	009 Move X21, 0xCF3000
	010 Move X22, 0xCF3000
	011 Move W8, [X20+1289]
	012 Move X21, [X21+2440]
	013 Move X22, [X22+2512]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xCF3000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xCF3000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xD2D000
	026 Move X0, [X0+3304]
	027 Call 0x1C17CF4
	028 Move X0, 0xD2D000
	029 Move X0, [X0+3312]
	030 Call 0x1C17CF4
	031 Move X0, 0xCF3000
	032 Move X0, [X0+2104]
	033 Call 0x1C17CF4
	034 Move X0, 0xCF3000
	035 Move X0, [X0+2440]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1289], W8
	039 Move X0, [X22]
	040 Move X21, [X21]
	041 Move W1, 4
	042 Call 0x1C17D6C
	043 Compare X0, 0
	044 JumpIfEqual {181}
	045 Move X20, X0
	046 Compare X21, 0
	047 JumpIfEqual {54}
	048 Move X8, [X20]
	049 Move X0, X21
	050 Move X1, [X8+64]
	051 Call 0x1C17E00
	052 Compare X0, 0
	053 JumpIfEqual {178}
	054 Move W8, [X20+24]
	055 Compare W8, 0
	056 JumpIfEqual {177}
	057 Move X23, 0xD2D000
	058 Move X23, [X23+3304]
	059 Move [X20+32], X21
	060 Move X0, [X23]
	061 Compare X0, 0
	062 JumpIfEqual {69}
	063 Move X8, [X20]
	064 Move X1, [X8+64]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {178}
	068 Move W8, [X20+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X23]
	071 Move X9, 0xCF3000
	072 Move X9, [X9+1880]
	073 Add X1, X31, 12
	074 Move [X20+40], X8
	075 Move W8, [X19+16]
	076 Move X0, [X9]
	077 Move [X31+12], W8
	078 Call 0x1C17E04
	079 Move X21, X0
	080 Compare X0, 0
	081 JumpIfEqual {88}
	082 Move X8, [X20]
	083 Move X0, X21
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {178}
	088 Move W8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X23, 0xCF3000
	091 Move X23, [X23+2104]
	092 Move [X20+48], X21
	093 Move X0, [X23]
	094 Compare X0, 0
	095 JumpIfEqual {102}
	096 Move X8, [X20]
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {178}
	101 Move W8, [X20+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, [X23]
	104 Move X0, X20
	105 Move X1, X31
	106 Move [X20+56], X8
	107 Call String.Concat, X0
	108 Move X8, [X22]
	109 Move X21, X0
	110 Move W1, 4
	111 Move X0, X8
	112 Call 0x1C17D6C
	113 Compare X0, 0
	114 JumpIfEqual {181}
	115 Move X20, X0
	116 Compare X21, 0
	117 JumpIfEqual {124}
	118 Move X8, [X20]
	119 Move X0, X21
	120 Move X1, [X8+64]
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {178}
	124 Move W8, [X20+24]
	125 Compare W8, 0
	126 JumpIfEqual {177}
	127 Move X22, 0xD2D000
	128 Move X22, [X22+3312]
	129 Move [X20+32], X21
	130 Move X0, [X22]
	131 Compare X0, 0
	132 JumpIfEqual {139}
	133 Move X8, [X20]
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {178}
	138 Move W8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X9, [X22]
	141 Move [X20+40], X9
	142 Move X19, [X19+24]
	143 Compare X19, 0
	144 JumpIfEqual {152}
	145 Move X8, [X20]
	146 Move X0, X19
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {178}
	151 Move W8, [X20+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move [X20+48], X19
	154 Move X0, [X23]
	155 Compare X0, 0
	156 JumpIfEqual {163}
	157 Move X8, [X20]
	158 Move X1, [X8+64]
	159 Call 0x1C17E00
	160 Compare X0, 0
	161 JumpIfEqual {178}
	162 Move W8, [X20+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X8, [X23]
	165 Move X0, X20
	166 Move X1, X31
	167 Move [X20+56], X8
	168 Call String.Concat, X0
	169 Move X20, [X31+48]
	170 Move X19, [X31+56]
	171 Move X22, [X31+32]
	172 Move X21, [X31+40]
	173 Move X30, [X31+16]
	174 Move X23, [X31+24]
	175 Add X31, X31, 64
	176 Return X0
	177 Call 0x1C17F28
	178 Call 0x1C17F44
	179 Move X1, X31
	180 Call 0x1C17DEC
	181 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03401998 ADRP X10, 0xCF2000
	0x0340199C LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

