Type: Nakama.Client/<ListGroupUsersAsync>d__84

Method: System.Void MoveNext()

Disassembly:
	0x0345D848 CBZ X8, 0x345DB58
	0x0345D84C ADRP X9, 0xC97000
	0x0345D850 LDR X9, [X9 + 0x9F0]
	0x0345D854 LDR X21, [X8 + 0x18]
	0x0345D858 LDR X0, [X9]
	0x0345D85C LDR W9, [X0 + 0xE0]
	0x0345D860 CBNZ W9, 0x345D868
	0x0345D864 BL 0x1C16DFC
	0x0345D868 MOV X0, X31
	0x0345D86C BL 0x33616A4
	0x0345D870 ADRP X22, 0xC98000
	0x0345D874 LDR X22, [X22 + 0xA10]
	0x0345D878 MOV X8, X0
	0x0345D87C STR X8, [X31 + 0x28]
	0x0345D880 LDR X0, [X22]
	0x0345D884 LDR W8, [X0 + 0xE0]
	0x0345D888 CBNZ W8, 0x345D894
	0x0345D88C BL 0x1C16DFC
	0x0345D890 LDR X0, [X22]
	0x0345D894 LDR X8, [X0 + 0xB8]
	0x0345D898 LDR X1, [X8]
	0x0345D89C ADD X0, X31, 0x28
	0x0345D8A0 MOV X2, X31
	0x0345D8A4 BL 0x335FC68
	0x0345D8A8 CBZ X21, 0x345DB5C
	0x0345D8AC LDR X8, [X21]
	0x0345D8B0 LDR X1, [X23]
	0x0345D8B4 MOV X22, X0
	0x0345D8B8 LDRH W9, [X8 + 0x12E]
	0x0345D8BC CBZ X9, 0x345D8E0
	0x0345D8C0 LDR X10, [X8 + 0xB0]
	0x0345D8C4 ADD X10, X10, 0x8
	0x0345D8C8 LDUR X11, [X10 - 0x8]
	0x0345D8CC CMP X11, X1
	0x0345D8D0 B.EQ 0x345D8F0
	0x0345D8D4 SUBS X9, X9, 0x1
	0x0345D8D8 ADD X10, X10, 0x10
	0x0345D8DC B.NE 0x345D8C8
	0x0345D8E0 MOVZ W2, 0xB
	0x0345D8E4 MOV X0, X21
	0x0345D8E8 BL 0x1C5C788
	0x0345D8EC B 0x345D900
	0x0345D8F0 LDR W9, [X10]
	0x0345D8F4 ADD W9, W9, 0xB
	0x0345D8F8 ADD X8, X8, W9, 0x4, SXTW
	0x0345D8FC ADD X0, X8, 0x138
	0x0345D900 LDP X8, X2, [X0]
	0x0345D904 MOV X0, X21
	0x0345D908 MOV X1, X22
	0x0345D90C BLR X8
	0x0345D910 TBZ X0, 0x0, 0x345D9A4
	0x0345D914 LDR X8, [X19 + 0x70]
	0x0345D918 CBZ X8, 0x345DB60
	0x0345D91C LDR X1, [X8 + 0x18]
	0x0345D920 LDR X3, [X19 + 0x68]
	0x0345D924 LDR X4, [X8 + 0x50]
	0x0345D928 MOV X0, X20
	0x0345D92C MOV X2, X31
	0x0345D930 MOV X5, X31
	0x0345D934 BL 0x34440A8
	0x0345D938 CBZ X0, 0x345DB64
	0x0345D93C ADRP X8, 0xC97000
	0x0345D940 LDR X8, [X8 + 0x840]
	0x0345D944 LDR X1, [X8]
	0x0345D948 BL 0x269F5D0
	0x0345D94C ADRP X8, 0xC97000
	0x0345D950 LDR X8, [X8 + 0x838]
	0x0345D954 STR X0, [X31 + 0x20]
	0x0345D958 LDR X1, [X8]
	0x0345D95C ADD X0, X31, 0x20
	0x0345D960 BL 0x2677430
	0x0345D964 TBNZ X0, 0x0, 0x345D72C
	0x0345D968 STR W31, [X19]
	0x0345D96C LDR X8, [X31 + 0x20]
	0x0345D970 STR X8, [X19 + 0x78]
	0x0345D974 LDR X0, [X25]
	0x0345D978 LDR W8, [X0 + 0xE0]
	0x0345D97C CBNZ W8, 0x345D984
	0x0345D980 BL 0x1C16DFC
	0x0345D984 ADRP X8, 0xCD3000
	0x0345D988 LDR X8, [X8 + 0xA0]
	0x0345D98C ADD X0, X19, 0x8
	0x0345D990 LDR X3, [X8]
	0x0345D994 ADD X1, X31, 0x20
	0x0345D998 MOV X2, X19
	0x0345D99C BL 0x1FBB874
	0x0345D9A0 B 0x345DB18
	0x0345D9A4 CBZ X20, 0x345DB3C
	0x0345D9A8 ADRP X8, 0xCD3000
	0x0345D9AC LDR X8, [X8 + 0xA8]
	0x0345D9B0 LDR X21, [X20 + 0x58]
	0x0345D9B4 LDR X23, [X19 + 0x70]
	0x0345D9B8 LDR X0, [X8]
	0x0345D9BC BL 0x1C16F10
	0x0345D9C0 ADRP X8, 0xCD3000
	0x0345D9C4 LDR X8, [X8 + 0xD0]
	0x0345D9C8 MOV X22, X0
	0x0345D9CC LDR X2, [X8]
	0x0345D9D0 MOV X1, X23
	0x0345D9D4 MOV X3, X31
	0x0345D9D8 BL 0x2D27AA8
	0x0345D9DC LDR X8, [X19 + 0x70]
	0x0345D9E0 CBZ X8, 0x345DB30
	0x0345D9E4 ADRP X9, 0xCD2000
	0x0345D9E8 LDR X23, [X19 + 0x68]
	0x0345D9EC LDR X9, [X9 + 0x7C8]
	0x0345D9F0 CBNZ X23, 0x345D9F8
	0x0345D9F4 LDR X23, [X20 + 0x18]
	0x0345D9F8 LDR X20, [X8 + 0x18]
	0x0345D9FC LDR X1, [X8 + 0x50]
	0x0345DA00 LDR X2, [X9]
	0x0345DA04 STP X31, X31, [X31 + 0x8]
	0x0345DA08 ADD X0, X31, 0x8
	0x0345DA0C BL 0x242E368
	0x0345DA10 ADRP X8, 0xCD2000
	0x0345DA14 LDR X8, [X8 + 0x7D0]
	0x0345DA18 LDR X0, [X8]
	0x0345DA1C BL 0x1C16F10
	0x0345DA20 LDP X3, X4, [X31 + 0x8]
	0x0345DA24 MOV X24, X0
	0x0345DA28 MOV X1, X20
	0x0345DA2C MOV X2, X23
	0x0345DA30 MOV X5, X31
	0x0345DA34 BL 0x3465404
	0x0345DA38 CBZ X21, 0x345DB34
	0x0345DA3C ADRP X8, 0xCD3000
	0x0345DA40 LDR X8, [X8 + 0xB0]
	0x0345DA44 LDR X3, [X8]
	0x0345DA48 MOV X0, X21
	0x0345DA4C MOV X1, X22
	0x0345DA50 MOV X2, X24
	0x0345DA54 BL 0x2243230
	0x0345DA58 CBZ X0, 0x345DB38
	0x0345DA5C ADRP X8, 0xCD3000
	0x0345DA60 LDR X8, [X8 + 0xC8]
	0x0345DA64 LDR X1, [X8]
	0x0345DA68 BL 0x269F5D0
	0x0345DA6C ADRP X8, 0xCD3000
	0x0345DA70 LDR X8, [X8 + 0xC0]
	0x0345DA74 STR X0, [X31 + 0x18]
	0x0345DA78 LDR X1, [X8]
	0x0345DA7C ADD X0, X31, 0x18
	0x0345DA80 BL 0x2677430
	0x0345DA84 TBZ X0, 0x0, 0x345DADC
	0x0345DA88 ADRP X8, 0xCD3000
	0x0345DA8C LDR X8, [X8 + 0xB8]
	0x0345DA90 ADD X0, X31, 0x18
	0x0345DA94 LDR X1, [X8]
	0x0345DA98 BL 0x2677474
	0x0345DA9C MOVN W8, 0x1
	0x0345DAA0 STR W8, [X19]
	0x0345DAA4 STR X31, [X19 + 0x70]
	0x0345DAA8 MOV X20, X0
	0x0345DAAC LDR X0, [X25]
	0x0345DAB0 ADRP X21, 0xCD1000
	0x0345DAB4 ADD X19, X19, 0x8
	0x0345DAB8 LDR W8, [X0 + 0xE0]
	0x0345DABC LDR X21, [X21 + 0xFB8]
	0x0345DAC0 CBNZ W8, 0x345DAC8
	0x0345DAC4 BL 0x1C16DFC
	0x0345DAC8 LDR X2, [X21]
	0x0345DACC MOV X0, X19
	0x0345DAD0 MOV X1, X20
	0x0345DAD4 BL 0x26322B0
	0x0345DAD8 B 0x345DB18
	0x0345DADC MOVZ W8, 0x1
	0x0345DAE0 STR W8, [X19]
	0x0345DAE4 LDR X8, [X31 + 0x18]
	0x0345DAE8 STR X8, [X19 + 0x80]
	0x0345DAEC LDR X0, [X25]
	0x0345DAF0 LDR W8, [X0 + 0xE0]
	0x0345DAF4 CBNZ W8, 0x345DAFC
	0x0345DAF8 BL 0x1C16DFC
	0x0345DAFC ADRP X8, 0xCD3000
	0x0345DB00 LDR X8, [X8 + 0x98]
	0x0345DB04 ADD X0, X19, 0x8
	0x0345DB08 LDR X3, [X8]
	0x0345DB0C ADD X1, X31, 0x18
	0x0345DB10 MOV X2, X19
	0x0345DB14 BL 0x1FBB874
	0x0345DB18 LDP X20, X19, [X31 + 0x60]
	0x0345DB1C LDP X22, X21, [X31 + 0x50]
	0x0345DB20 LDP X24, X23, [X31 + 0x40]
	0x0345DB24 LDP X30, X25, [X31 + 0x30]
	0x0345DB28 ADD X31, X31, 0x70
	0x0345DB2C RET
	0x0345DB30 BL 0x1C16F20
	0x0345DB34 BL 0x1C16F20
	0x0345DB38 BL 0x1C16F20
	0x0345DB3C BL 0x1C16F20
	0x0345DB40 BL 0x1C16F20
	0x0345DB44 BL 0x1C16F20
	0x0345DB48 BL 0x1C16F20
	0x0345DB4C BL 0x1C16F20
	0x0345DB50 BL 0x1C16F20
	0x0345DB54 BL 0x1C16F20
	0x0345DB58 BL 0x1C16F20
	0x0345DB5C BL 0x1C16F20
	0x0345DB60 BL 0x1C16F20
	0x0345DB64 BL 0x1C16F20
	0x0345DB68 B 0x345DBE4
	0x0345DB6C B 0x345DBE4
	0x0345DB70 B 0x345DBE4
	0x0345DB74 B 0x345DBE4
	0x0345DB78 B 0x345DBE4
	0x0345DB7C B 0x345DBE4
	0x0345DB80 B 0x345DBE4
	0x0345DB84 B 0x345DBE4
	0x0345DB88 B 0x345DBE4
	0x0345DB8C B 0x345DBE4
	0x0345DB90 B 0x345DBE4
	0x0345DB94 B 0x345DBE4
	0x0345DB98 B 0x345DBE4
	0x0345DB9C B 0x345DBE4
	0x0345DBA0 B 0x345DBE4
	0x0345DBA4 B 0x345DBE4
	0x0345DBA8 B 0x345DBE4
	0x0345DBAC B 0x345DBE4
	0x0345DBB0 B 0x345DBE4
	0x0345DBB4 B 0x345DBE4
	0x0345DBB8 B 0x345DBE4
	0x0345DBBC B 0x345DBE4
	0x0345DBC0 B 0x345DBE4
	0x0345DBC4 B 0x345DBE4
	0x0345DBC8 B 0x345DBE4
	0x0345DBCC B 0x345DBE4
	0x0345DBD0 B 0x345DBE4
	0x0345DBD4 B 0x345DBE4
	0x0345DBD8 B 0x345DBE4
	0x0345DBDC B 0x345DBE4
	0x0345DBE0 B 0x345DBE4
	0x0345DBE4 MOV X20, X0
	0x0345DBE8 CMP W1, 0x1
	0x0345DBEC B.NE 0x345DC8C
	0x0345DBF0 MOV X0, X20
	0x0345DBF4 BL 0x3EB1AD0
	0x0345DBF8 MOV X20, X0
	0x0345DBFC ADRP X0, 0xC96000
	0x0345DC00 LDR X0, [X0 + 0x7D0]
	0x0345DC04 BL 0x1C16D08
	0x0345DC08 LDR X8, [X20]
	0x0345DC0C LDR X1, [X8]
	0x0345DC10 BL 0x1C17270
	0x0345DC14 TBZ X0, 0x0, 0x345DC64
	0x0345DC18 LDR X20, [X20]
	0x0345DC1C BL 0x3EB1AE0
	0x0345DC20 MOVN W8, 0x1
	0x0345DC24 STR X31, [X19 + 0x70]
	0x0345DC28 STR W8, [X19], #0x8
	0x0345DC2C ADRP X0, 0xCD1000
	0x0345DC30 LDR X0, [X0 + 0x488]
	0x0345DC34 BL 0x1C16D08
	0x0345DC38 LDR W8, [X0 + 0xE0]
	0x0345DC3C CBNZ W8, 0x345DC44
	0x0345DC40 BL 0x1C16DFC
	0x0345DC44 ADRP X0, 0xCD1000
	0x0345DC48 LDR X0, [X0 + 0xFE8]
	0x0345DC4C BL 0x1C16D08
	0x0345DC50 MOV X2, X0
	0x0345DC54 MOV X0, X19
	0x0345DC58 MOV X1, X20
	0x0345DC5C BL 0x26324C8
	0x0345DC60 B 0x345DB18
	0x0345DC64 MOVZ W0, 0x8
	0x0345DC68 BL 0x3EB1AF0
	0x0345DC6C LDR X8, [X20]
	0x0345DC70 STR X8, [X0]
	0x0345DC74 ADRP X1, 0xA57000
	0x0345DC78 ADD X1, X1, 0xE58
	0x0345DC7C MOV X2, X31
	0x0345DC80 BL 0x3EB1B00
	0x0345DC84 MOV X20, X0
	0x0345DC88 BL 0x3EB1AE0
	0x0345DC8C MOV X0, X20
	0x0345DC90 BL 0x1D2C690
	0x0345DC94 BL 0x1990590
	0x0345DC98 STR X30, [X31 - 0x30]!
	0x0345DC9C STP X22, X21, [X31 + 0x10]
	0x0345DCA0 STP X20, X19, [X31 + 0x20]
	0x0345DCA4 ADRP X22, 0xF80000
	0x0345DCA8 ADRP X21, 0xCD1000
	0x0345DCAC LDRB W8, [X22 + 0x7A8]
	0x0345DCB0 LDR X21, [X21 + 0x488]
	0x0345DCB4 MOV X19, X1
	0x0345DCB8 MOV X20, X0
	0x0345DCBC TBNZ X8, 0x0, 0x345DCE0
	0x0345DCC0 ADRP X0, 0xCD1000
	0x0345DCC4 LDR X0, [X0 + 0xFF0]
	0x0345DCC8 BL 0x1C16CF4
	0x0345DCCC ADRP X0, 0xCD1000
	0x0345DCD0 LDR X0, [X0 + 0x488]
	0x0345DCD4 BL 0x1C16CF4
	0x0345DCD8 MOVZ W8, 0x1
	0x0345DCDC STRB W8, [X22 + 0x7A8]
	0x0345DCE0 LDR X0, [X21]
	0x0345DCE4 ADRP X21, 0xCD1000
	0x0345DCE8 LDR W8, [X0 + 0xE0]
	0x0345DCEC LDR X21, [X21 + 0xFF0]
	0x0345DCF0 CBNZ W8, 0x345DCF8
	0x0345DCF4 BL 0x1C16DFC
	0x0345DCF8 LDR X2, [X21]
	0x0345DCFC ADD X0, X20, 0x8
	0x0345DD00 MOV X1, X19
	0x0345DD04 LDP X20, X19, [X31 + 0x20]
	0x0345DD08 LDP X22, X21, [X31 + 0x10]
	0x0345DD0C LDR X30, [X31], #0x30
	0x0345DD10 B 0x2632228
	0x0345DD14 SUB X31, X31, 0x90
	0x0345DD18 STP X29, X30, [X31 + 0x30]
	0x0345DD1C STP X28, X27, [X31 + 0x40]
	0x0345DD20 STP X26, X25, [X31 + 0x50]
	0x0345DD24 STP X24, X23, [X31 + 0x60]
	0x0345DD28 STP X22, X21, [X31 + 0x70]
	0x0345DD2C STP X20, X19, [X31 + 0x80]
	0x0345DD30 ADRP X20, 0xF80000
	0x0345DD34 LDRB W8, [X20 + 0x7A9]
	0x0345DD38 MOV X19, X0
	0x0345DD3C TBNZ X8, 0x0, 0x345DE80
	0x0345DD40 ADRP X0, 0xCD3000
	0x0345DD44 LDR X0, [X0 + 0xE0]
	0x0345DD48 BL 0x1C16CF4
	0x0345DD4C ADRP X0, 0xCD3000
	0x0345DD50 LDR X0, [X0 + 0xE8]
	0x0345DD54 BL 0x1C16CF4
	0x0345DD58 ADRP X0, 0xCD3000
	0x0345DD5C LDR X0, [X0 + 0xF0]
	0x0345DD60 BL 0x1C16CF4
	0x0345DD64 ADRP X0, 0xCD2000
	0x0345DD68 LDR X0, [X0]
	0x0345DD6C BL 0x1C16CF4
	0x0345DD70 ADRP X0, 0xCD1000
	0x0345DD74 LDR X0, [X0 + 0x5D8]
	0x0345DD78 BL 0x1C16CF4
	0x0345DD7C ADRP X0, 0xC98000
	0x0345DD80 LDR X0, [X0 + 0xA10]
	0x0345DD84 BL 0x1C16CF4
	0x0345DD88 ADRP X0, 0xC97000
	0x0345DD8C LDR X0, [X0 + 0x9F0]
	0x0345DD90 BL 0x1C16CF4
	0x0345DD94 ADRP X0, 0xCD3000
	0x0345DD98 LDR X0, [X0 + 0xF8]
	0x0345DD9C BL 0x1C16CF4
	0x0345DDA0 ADRP X0, 0xCD3000
	0x0345DDA4 LDR X0, [X0 + 0x100]
	0x0345DDA8 BL 0x1C16CF4
	0x0345DDAC ADRP X0, 0xCD3000
	0x0345DDB0 LDR X0, [X0 + 0x108]
	0x0345DDB4 BL 0x1C16CF4
	0x0345DDB8 ADRP X0, 0xC96000
	0x0345DDBC LDR X0, [X0 + 0xE00]
	0x0345DDC0 BL 0x1C16CF4
	0x0345DDC4 ADRP X0, 0xCD3000
	0x0345DDC8 LDR X0, [X0 + 0x110]
	0x0345DDCC BL 0x1C16CF4
	0x0345DDD0 ADRP X0, 0xCD3000
	0x0345DDD4 LDR X0, [X0 + 0x118]
	0x0345DDD8 BL 0x1C16CF4
	0x0345DDDC ADRP X0, 0xC96000
	0x0345DDE0 LDR X0, [X0 + 0xE18]
	0x0345DDE4 BL 0x1C16CF4
	0x0345DDE8 ADRP X0, 0xC97000
	0x0345DDEC LDR X0, [X0 + 0x818]
	0x0345DDF0 BL 0x1C16CF4
	0x0345DDF4 ADRP X0, 0xCD2000
	0x0345DDF8 LDR X0, [X0 + 0x7C8]
	0x0345DDFC BL 0x1C16CF4
	0x0345DE00 ADRP X0, 0xCD2000
	0x0345DE04 LDR X0, [X0 + 0x7D0]
	0x0345DE08 BL 0x1C16CF4
	0x0345DE0C ADRP X0, 0xCD3000
	0x0345DE10 LDR X0, [X0 + 0x120]
	0x0345DE14 BL 0x1C16CF4
	0x0345DE18 ADRP X0, 0xC97000
	0x0345DE1C LDR X0, [X0 + 0x830]
	0x0345DE20 BL 0x1C16CF4
	0x0345DE24 ADRP X0, 0xCD3000
	0x0345DE28 LDR X0, [X0 + 0x128]
	0x0345DE2C BL 0x1C16CF4
	0x0345DE30 ADRP X0, 0xC97000
	0x0345DE34 LDR X0, [X0 + 0x838]
	0x0345DE38 BL 0x1C16CF4
	0x0345DE3C ADRP X0, 0xCD3000
	0x0345DE40 LDR X0, [X0 + 0x130]
	0x0345DE44 BL 0x1C16CF4
	0x0345DE48 ADRP X0, 0xC97000
	0x0345DE4C LDR X0, [X0 + 0x840]
	0x0345DE50 BL 0x1C16CF4
	0x0345DE54 ADRP X0, 0xCD3000
	0x0345DE58 LDR X0, [X0 + 0x138]
	0x0345DE5C BL 0x1C16CF4
	0x0345DE60 ADRP X0, 0xCD3000
	0x0345DE64 LDR X0, [X0 + 0x140]
	0x0345DE68 BL 0x1C16CF4
	0x0345DE6C ADRP X0, 0xCD3000
	0x0345DE70 LDR X0, [X0 + 0x148]
	0x0345DE74 BL 0x1C16CF4
	0x0345DE78 MOVZ W8, 0x1
	0x0345DE7C STRB W8, [X20 + 0x7A9]
	0x0345DE80 STP X31, X31, [X31 + 0x20]
	0x0345DE84 STR X31, [X31 + 0x18]
	0x0345DE88 LDR W25, [X19]
	0x0345DE8C LDR X20, [X19 + 0x20]
	0x0345DE90 CBZ W25, 0x345DEB4
	0x0345DE94 CMP W25, 0x1
	0x0345DE98 B.NE 0x345DEE0
	0x0345DE9C LDR X8, [X19 + 0x80]
	0x0345DEA0 MOVN W25, 0x0
	0x0345DEA4 STR X8, [X31 + 0x18]
	0x0345DEA8 STR X31, [X19 + 0x80]
	0x0345DEAC STR W25, [X19]
	0x0345DEB0 B 0x345E21C
	0x0345DEB4 LDR X8, [X19 + 0x78]
	0x0345DEB8 MOVN W25, 0x0
	0x0345DEBC STR X8, [X31 + 0x20]
	0x0345DEC0 STR X31, [X19 + 0x78]
	0x0345DEC4 STR W25, [X19]
	0x0345DEC8 ADRP X8, 0xC97000
	0x0345DECC LDR X8, [X8 + 0x830]
	0x0345DED0 ADD X0, X31, 0x20
	0x0345DED4 LDR X1, [X8]
	0x0345DED8 BL 0x2677474
	0x0345DEDC B 0x345E138
	0x0345DEE0 ADRP X8, 0xCD3000
	0x0345DEE4 LDR X8, [X8 + 0x148]
	0x0345DEE8 LDR X0, [X8]
	0x0345DEEC BL 0x1C16F10
	0x0345DEF0 MOV X21, X0
	0x0345DEF4 MOV X1, X31
	0x0345DEF8 BL 0x344AEF4
	0x0345DEFC STR X21, [X19 + 0x70]
	0x0345DF00 CBZ X21, 0x345EAB8
	0x0345DF04 LDR X8, [X19 + 0x20]
	0x0345DF08 STR X8, [X21 + 0x10]
	0x0345DF0C LDR X8, [X19 + 0x28]
	0x0345DF10 STR X8, [X21 + 0x18]
	0x0345DF14 LDR V0, [X19 + 0x3]
	0x0345DF18 STR V0, [X21 + 0x2]
	0x0345DF1C LDR W8, [X19 + 0x40]
	0x0345DF20 STR W8, [X21 + 0x30]
	0x0345DF24 LDUR V0, [X19 + 0x48]
	0x0345DF28 STUR V0, [X21 + 0x38]
	0x0345DF2C LDR X8, [X19 + 0x70]
	0x0345DF30 CBZ X8, 0x345EABC
	0x0345DF34 LDR X9, [X19 + 0x58]
	0x0345DF38 STR X9, [X8 + 0x48]
	0x0345DF3C LDR X9, [X19 + 0x60]
	0x0345DF40 STR X9, [X8 + 0x50]
	0x0345DF44 CBZ X20, 0x345EAC0
	0x0345DF48 LDRB W8, [X20 + 0x10]
	0x0345DF4C CBZ W8, 0x345E13C
	0x0345DF50 LDR X8, [X19 + 0x70]
	0x0345DF54 CBZ X8, 0x345EAC4
	0x0345DF58 LDR X21, [X8 + 0x18]
	0x0345DF5C CBZ X21, 0x345EAC8
	0x0345DF60 ADRP X23, 0xC97000
	0x0345DF64 LDR X8, [X21]
	0x0345DF68 LDR X23, [X23 + 0x818]
	0x0345DF6C LDRH W9, [X8 + 0x12E]
	0x0345DF70 LDR X1, [X23]
	0x0345DF74 CBZ X9, 0x345DF98
	0x0345DF78 LDR X10, [X8 + 0xB0]
	0x0345DF7C ADD X10, X10, 0x8
	0x0345DF80 LDUR X11, [X10 - 0x8]
	0x0345DF84 CMP X11, X1
	0x0345DF88 B.EQ 0x345DFA8
	0x0345DF8C SUBS X9, X9, 0x1
	0x0345DF90 ADD X10, X10, 0x10
	0x0345DF94 B.NE 0x345DF80
	0x0345DF98 MOVZ W2, 0x7
	0x0345DF9C MOV X0, X21
	0x0345DFA0 BL 0x1C5C788
	0x0345DFA4 B 0x345DFB8
	0x0345DFA8 LDR W9, [X10]
	0x0345DFAC ADD W9, W9, 0x7
	0x0345DFB0 ADD X8, X8, W9, 0x4, SXTW
	0x0345DFB4 ADD X0, X8, 0x138
	0x0345DFB8 LDP X8, X1, [X0]
	0x0345DFBC MOV X0, X21
	0x0345DFC0 BLR X8
	0x0345DFC4 MOV X1, X31
	0x0345DFC8 BL 0x32277A8
	0x0345DFCC TBNZ X0, 0x0, 0x345E138
	0x0345DFD0 LDR X8, [X19 + 0x70]
	0x0345DFD4 CBZ X8, 0x345EACC
	0x0345DFD8 ADRP X9, 0xC97000
	0x0345DFDC LDR X9, [X9 + 0x9F0]
	0x0345DFE0 LDR X21, [X8 + 0x18]
	0x0345DFE4 LDR X0, [X9]
	0x0345DFE8 LDR W9, [X0 + 0xE0]
	0x0345DFEC CBNZ W9, 0x345DFF4
	0x0345DFF0 BL 0x1C16DFC
	0x0345DFF4 MOV X0, X31
	0x0345DFF8 BL 0x33616A4
	0x0345DFFC ADRP X22, 0xC98000
	0x0345E000 LDR X22, [X22 + 0xA10]
	0x0345E004 MOV X8, X0
	0x0345E008 STR X8, [X31 + 0x28]
	0x0345E00C LDR X0, [X22]
	0x0345E010 LDR W8, [X0 + 0xE0]
	0x0345E014 CBNZ W8, 0x345E020
	0x0345E018 BL 0x1C16DFC
	0x0345E01C LDR X0, [X22]
	0x0345E020 LDR X8, [X0 + 0xB8]
	0x0345E024 LDR X1, [X8]
	0x0345E028 ADD X0, X31, 0x28
	0x0345E02C MOV X2, X31
	0x0345E030 BL 0x335FC68
	0x0345E034 CBZ X21, 0x345EAD0
	0x0345E038 LDR X8, [X21]
	0x0345E03C LDR X1, [X23]
	0x0345E040 MOV X22, X0
	0x0345E044 LDRH W9, [X8 + 0x12E]
	0x0345E048 CBZ X9, 0x345E06C
	0x0345E04C LDR X10, [X8 + 0xB0]
	0x0345E050 ADD X10, X10, 0x8
	0x0345E054 LDUR X11, [X10 - 0x8]
	0x0345E058 CMP X11, X1
	0x0345E05C B.EQ 0x345E07C
	0x0345E060 SUBS X9, X9, 0x1
	0x0345E064 ADD X10, X10, 0x10
	0x0345E068 B.NE 0x345E054
	0x0345E06C MOVZ W2, 0xB
	0x0345E070 MOV X0, X21
	0x0345E074 BL 0x1C5C788
	0x0345E078 B 0x345E08C
	0x0345E07C LDR W9, [X10]
	0x0345E080 ADD W9, W9, 0xB
	0x0345E084 ADD X8, X8, W9, 0x4, SXTW
	0x0345E088 ADD X0, X8, 0x138
	0x0345E08C LDP X8, X2, [X0]
	0x0345E090 MOV X0, X21
	0x0345E094 MOV X1, X22
	0x0345E098 BLR X8
	0x0345E09C TBZ X0, 0x0, 0x345E138
	0x0345E0A0 LDR X8, [X19 + 0x70]
	0x0345E0A4 CBZ X8, 0x345EAD4
	0x0345E0A8 LDR X1, [X8 + 0x18]
	0x0345E0AC LDR X3, [X19 + 0x68]
	0x0345E0B0 LDR X4, [X8 + 0x50]
	0x0345E0B4 MOV X0, X20
	0x0345E0B8 MOV X2, X31
	0x0345E0BC MOV X5, X31
	0x0345E0C0 BL 0x34440A8
	0x0345E0C4 CBZ X0, 0x345EAD8
	0x0345E0C8 ADRP X8, 0xC96000
	0x0345E0CC LDR X8, [X8 + 0x840]
	0x0345E0D0 LDR X1, [X8]
	0x0345E0D4 BL 0x269F5D0
	0x0345E0D8 ADRP X8, 0xC96000
	0x0345E0DC LDR X8, [X8 + 0x838]
	0x0345E0E0 STR X0, [X31 + 0x20]
	0x0345E0E4 LDR X1, [X8]
	0x0345E0E8 ADD X0, X31, 0x20
	0x0345E0EC BL 0x2677430
	0x0345E0F0 TBNZ X0, 0x0, 0x345DEC8
	0x0345E0F4 STR W31, [X19]
	0x0345E0F8 LDR X8, [X31 + 0x20]
	0x0345E0FC STR X8, [X19 + 0x78]
	0x0345E100 ADRP X8, 0xCD0000
	0x0345E104 LDR X8, [X8 + 0x5D8]
	0x0345E108 LDR X0, [X8]
	0x0345E10C LDR W8, [X0 + 0xE0]
	0x0345E110 CBNZ W8, 0x345E118
	0x0345E114 BL 0x1C16DFC
	0x0345E118 ADRP X8, 0xCD2000
	0x0345E11C LDR X8, [X8 + 0xF0]
	0x0345E120 ADD X0, X19, 0x8
	0x0345E124 LDR X3, [X8]
	0x0345E128 ADD X1, X31, 0x20
	0x0345E12C MOV X2, X19
	0x0345E130 BL 0x1FBBA88
	0x0345E134 B 0x345EA34
	0x0345E138 CBZ X20, 0x345EAA4
	0x0345E13C ADRP X8, 0xCD2000
	0x0345E140 LDR X8, [X8 + 0xF8]
	0x0345E144 LDR X21, [X20 + 0x58]
	0x0345E148 LDR X23, [X19 + 0x70]
	0x0345E14C LDR X0, [X8]
	0x0345E150 BL 0x1C16F10
	0x0345E154 ADRP X8, 0xCD2000
	0x0345E158 LDR X8, [X8 + 0x140]
	0x0345E15C MOV X22, X0
	0x0345E160 LDR X2, [X8]
	0x0345E164 MOV X1, X23
	0x0345E168 MOV X3, X31
	0x0345E16C BL 0x2D27AA8
	0x0345E170 LDR X8, [X19 + 0x70]
	0x0345E174 CBZ X8, 0x345EA98
	0x0345E178 ADRP X9, 0xCD1000
	0x0345E17C LDR X23, [X19 + 0x68]
	0x0345E180 LDR X24, [X8 + 0x18]
	0x0345E184 LDR X9, [X9 + 0x7C8]
	0x0345E188 CBNZ X23, 0x345E190
	0x0345E18C LDR X23, [X20 + 0x18]
	0x0345E190 LDR X1, [X8 + 0x50]
	0x0345E194 LDR X2, [X9]
	0x0345E198 STP X31, X31, [X31 + 0x8]
	0x0345E19C ADD X0, X31, 0x8
	0x0345E1A0 BL 0x242E368
	0x0345E1A4 ADRP X8, 0xCD1000
	0x0345E1A8 LDR X8, [X8 + 0x7D0]
	0x0345E1AC LDR X0, [X8]
	0x0345E1B0 BL 0x1C16F10
	0x0345E1B4 LDP X3, X4, [X31 + 0x8]
	0x0345E1B8 MOV X20, X0
	0x0345E1BC MOV X1, X24
	0x0345E1C0 MOV X2, X23
	0x0345E1C4 MOV X5, X31
	0x0345E1C8 BL 0x3465404
	0x0345E1CC CBZ X21, 0x345EA9C
	0x0345E1D0 ADRP X8, 0xCD2000
	0x0345E1D4 LDR X8, [X8 + 0x120]
	0x0345E1D8 LDR X3, [X8]
	0x0345E1DC MOV X0, X21
	0x0345E1E0 MOV X1, X22
	0x0345E1E4 MOV X2, X20
	0x0345E1E8 BL 0x2243230
	0x0345E1EC CBZ X0, 0x345EAA0
	0x0345E1F0 ADRP X8, 0xCD2000
	0x0345E1F4 LDR X8, [X8 + 0x138]
	0x0345E1F8 LDR X1, [X8]
	0x0345E1FC BL 0x269F5D0
	0x0345E200 ADRP X8, 0xCD2000
	0x0345E204 LDR X8, [X8 + 0x130]
	0x0345E208 STR X0, [X31 + 0x18]
	0x0345E20C LDR X1, [X8]
	0x0345E210 ADD X0, X31, 0x18
	0x0345E214 BL 0x2677430
	0x0345E218 TBZ X0, 0x0, 0x345E280
	0x0345E21C ADRP X8, 0xCD2000
	0x0345E220 LDR X8, [X8 + 0x128]
	0x0345E224 ADD X0, X31, 0x18
	0x0345E228 LDR X1, [X8]
	0x0345E22C BL 0x2677474
	0x0345E230 MOV X20, X0
	0x0345E234 CBZ X0, 0x345EA84
	0x0345E238 ADRP X10, 0xCD2000
	0x0345E23C LDR X8, [X20]
	0x0345E240 LDR X10, [X10 + 0x100]
	0x0345E244 LDRH W9, [X8 + 0x12E]
	0x0345E248 LDR X1, [X10]
	0x0345E24C CBZ X9, 0x345E270
	0x0345E250 LDR X10, [X8 + 0xB0]
	0x0345E254 ADD X10, X10, 0x8
	0x0345E258 LDUR X11, [X10 - 0x8]
	0x0345E25C CMP X11, X1
	0x0345E260 B.EQ 0x345E2C8
	0x0345E264 SUBS X9, X9, 0x1
	0x0345E268 ADD X10, X10, 0x10
	0x0345E26C B.NE 0x345E258
	0x0345E270 MOVZ W2, 0x4
	0x0345E274 MOV X0, X20
	0x0345E278 BL 0x1C5C788
	0x0345E27C B 0x345E2D8
	0x0345E280 MOVZ W8, 0x1
	0x0345E284 STR W8, [X19]
	0x0345E288 LDR X8, [X31 + 0x18]
	0x0345E28C STR X8, [X19 + 0x80]
	0x0345E290 ADRP X8, 0xCD0000
	0x0345E294 LDR X8, [X8 + 0x5D8]
	0x0345E298 LDR X0, [X8]
	0x0345E29C LDR W8, [X0 + 0xE0]
	0x0345E2A0 CBNZ W8, 0x345E2A8
	0x0345E2A4 BL 0x1C16DFC
	0x0345E2A8 ADRP X8, 0xCD2000
	0x0345E2AC LDR X8, [X8 + 0xE8]
	0x0345E2B0 ADD X0, X19, 0x8
	0x0345E2B4 LDR X3, [X8]
	0x0345E2B8 ADD X1, X31, 0x18
	0x0345E2BC MOV X2, X19
	0x0345E2C0 BL 0x1FBBA88
	0x0345E2C4 B 0x345EA34
	0x0345E2C8 LDR W9, [X10]
	0x0345E2CC ADD W9, W9, 0x4
	0x0345E2D0 ADD X8, X8, W9, 0x4, SXTW
	0x0345E2D4 ADD X0, X8, 0x138
	0x0345E2D8 LDP X8, X1, [X0]
	0x0345E2DC MOV X0, X20
	0x0345E2E0 BLR X8
	0x0345E2E4 MOV X21, X0
	0x0345E2E8 CBZ X0, 0x345EA88
	0x0345E2EC ADRP X10, 0xCD2000
	0x0345E2F0 LDR X8, [X21]
	0x0345E2F4 LDR X10, [X10 + 0x110]
	0x0345E2F8 LDRH W9, [X8 + 0x12E]
	0x0345E2FC LDR X1, [X10]
	0x0345E300 CBZ X9, 0x345E324
	0x0345E304 LDR X10, [X8 + 0xB0]
	0x0345E308 ADD X10, X10, 0x8
	0x0345E30C LDUR X11, [X10 - 0x8]
	0x0345E310 CMP X11, X1
	0x0345E314 B.EQ 0x345E334
	0x0345E318 SUBS X9, X9, 0x1
	0x0345E31C ADD X10, X10, 0x10
	0x0345E320 B.NE 0x345E30C
	0x0345E324 MOV X0, X21
	0x0345E328 MOV W2, W31
	0x0345E32C BL 0x1C5C788
	0x0345E330 B 0x345E340
	0x0345E334 LDRSW X9, [X10]
	0x0345E338 ADD X8, X8, X9, 0x4, LSL
	0x0345E33C ADD X0, X8, 0x138
	0x0345E340 LDP X8, X1, [X0]
	0x0345E344 MOV X0, X21
	0x0345E348 BLR X8
	0x0345E34C MOV X21, X0
	0x0345E350 CBZ X0, 0x345EA8C
	0x0345E354 ADRP X24, 0xC95000
	0x0345E358 ADRP X28, 0xCD2000
	0x0345E35C ADRP X29, 0xC96000
	0x0345E360 ADRP X26, 0xCD2000
	0x0345E364 ADRP X27, 0xCD2000
	0x0345E368 LDR X24, [X24 + 0xE18]
	0x0345E36C LDR X28, [X28 + 0x118]
	0x0345E370 LDR X29, [X29 + 0x818]
	0x0345E374 LDR X26, [X26 + 0x108]
	0x0345E378 LDR X27, [X27 + 0xE0]
	0x0345E37C LDR X8, [X21]
	0x0345E380 LDR X1, [X24]
	0x0345E384 LDRH W9, [X8 + 0x12E]
	0x0345E388 CBZ X9, 0x345E3AC
	0x0345E38C LDR X10, [X8 + 0xB0]
	0x0345E390 ADD X10, X10, 0x8
	0x0345E394 LDUR X11, [X10 - 0x8]
	0x0345E398 CMP X11, X1
	0x0345E39C B.EQ 0x345E3BC
	0x0345E3A0 SUBS X9, X9, 0x1
	0x0345E3A4 ADD X10, X10, 0x10
	0x0345E3A8 B.NE 0x345E394
	0x0345E3AC MOV X0, X21
	0x0345E3B0 MOV W2, W31
	0x0345E3B4 BL 0x1C5C788
	0x0345E3B8 B 0x345E3C8
	0x0345E3BC LDRSW X9, [X10]
	0x0345E3C0 ADD X8, X8, X9, 0x4, LSL
	0x0345E3C4 ADD X0, X8, 0x138
	0x0345E3C8 LDP X8, X1, [X0]
	0x0345E3CC MOV X0, X21
	0x0345E3D0 BLR X8
	0x0345E3D4 TBZ X0, 0x0, 0x345E5BC
	0x0345E3D8 LDR X8, [X21]
	0x0345E3DC LDR X1, [X28]
	0x0345E3E0 LDRH W9, [X8 + 0x12E]
	0x0345E3E4 CBZ X9, 0x345E408
	0x0345E3E8 LDR X10, [X8 + 0xB0]
	0x0345E3EC ADD X10, X10, 0x8
	0x0345E3F0 LDUR X11, [X10 - 0x8]
	0x0345E3F4 CMP X11, X1
	0x0345E3F8 B.EQ 0x345E418
	0x0345E3FC SUBS X9, X9, 0x1
	0x0345E400 ADD X10, X10, 0x10
	0x0345E404 B.NE 0x345E3F0
	0x0345E408 MOV X0, X21
	0x0345E40C MOV W2, W31
	0x0345E410 BL 0x1C5C788
	0x0345E414 B 0x345E424
	0x0345E418 LDRSW X9, [X10]
	0x0345E41C ADD X8, X8, X9, 0x4, LSL
	0x0345E420 ADD X0, X8, 0x138
	0x0345E424 LDP X8, X1, [X0]
	0x0345E428 MOV X0, X21
	0x0345E42C BLR X8
	0x0345E430 LDR X8, [X19 + 0x70]
	0x0345E434 CBZ X8, 0x345EA5C
	0x0345E438 LDR X23, [X8 + 0x18]
	0x0345E43C CBZ X23, 0x345EA60
	0x0345E440 LDR X8, [X23]
	0x0345E444 LDR X1, [X29]
	0x0345E448 MOV X22, X0
	0x0345E44C LDRH W9, [X8 + 0x12E]
	0x0345E450 CBZ X9, 0x345E474
	0x0345E454 LDR X10, [X8 + 0xB0]
	0x0345E458 ADD X10, X10, 0x8
	0x0345E45C LDUR X11, [X10 - 0x8]
	0x0345E460 CMP X11, X1
	0x0345E464 B.EQ 0x345E484
	0x0345E468 SUBS X9, X9, 0x1
	0x0345E46C ADD X10, X10, 0x10
	0x0345E470 B.NE 0x345E45C
	0x0345E474 MOVZ W2, 0xA
	0x0345E478 MOV X0, X23
	0x0345E47C BL 0x1C5C788
	0x0345E480 B 0x345E494
	0x0345E484 LDR W9, [X10]
	0x0345E488 ADD W9, W9, 0xA
	0x0345E48C ADD X8, X8, W9, 0x4, SXTW
	0x0345E490 ADD X0, X8, 0x138
	0x0345E494 LDP X8, X1, [X0]
	0x0345E498 MOV X0, X23
	0x0345E49C BLR X8
	0x0345E4A0 CBZ X22, 0x345EA54
	0x0345E4A4 LDR X8, [X22]
	0x0345E4A8 LDR X1, [X26]
	0x0345E4AC MOV X23, X0
	0x0345E4B0 LDRH W9, [X8 + 0x12E]
	0x0345E4B4 CBZ X9, 0x345E4D8
	0x0345E4B8 LDR X10, [X8 + 0xB0]
	0x0345E4BC ADD X10, X10, 0x8
	0x0345E4C0 LDUR X11, [X10 - 0x8]
	0x0345E4C4 CMP X11, X1
	0x0345E4C8 B.EQ 0x345E4E8
	0x0345E4CC SUBS X9, X9, 0x1
	0x0345E4D0 ADD X10, X10, 0x10
	0x0345E4D4 B.NE 0x345E4C0
	0x0345E4D8 MOVZ W2, 0x6
	0x0345E4DC MOV X0, X22
	0x0345E4E0 BL 0x1C5C788
	0x0345E4E4 B 0x345E4F8
	0x0345E4E8 LDR W9, [X10]
	0x0345E4EC ADD W9, W9, 0x6
	0x0345E4F0 ADD X8, X8, W9, 0x4, SXTW
	0x0345E4F4 ADD X0, X8, 0x138
	0x0345E4F8 LDP X8, X1, [X0]
	0x0345E4FC MOV X0, X22
	0x0345E500 BLR X8
	0x0345E504 MOV X1, X0
	0x0345E508 CBZ X23, 0x345EA58
	0x0345E50C MOV X0, X23
	0x0345E510 MOV X2, X31
	0x0345E514 BL 0x322693C
	0x0345E518 TBZ X0, 0x0, 0x345E37C
	0x0345E51C LDR X9, [X22]
	0x0345E520 LDR X8, [X27]
	0x0345E524 LDRB W11, [X9 + 0x130]
	0x0345E528 LDRB W10, [X8 + 0x130]
	0x0345E52C CMP W11, W10
	0x0345E530 B.CC 0x345E37C
	0x0345E534 LDR X9, [X9 + 0xC8]
	0x0345E538 ADD X9, X9, X10, 0x3, LSL
	0x0345E53C LDUR X9, [X9 - 0x8]
	0x0345E540 CMP X9, X8
	0x0345E544 B.NE 0x345E37C
	0x0345E548 LDR X8, [X19 + 0x70]
	0x0345E54C CBZ X8, 0x345EA74

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0xF81000
	015 Move W8, [X20+1957]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {104}
	021 Move X0, 0xCD4000
	022 Move X0, [X0+40]
	023 Call 0x1C17CF4
	024 Move X0, 0xCD4000
	025 Move X0, [X0+48]
	026 Call 0x1C17CF4
	027 Move X0, 0xCD4000
	028 Move X0, [X0+56]
	029 Call 0x1C17CF4
	030 Move X0, 0xCD2000
	031 Move X0, [X0+3968]
	032 Call 0x1C17CF4
	033 Move X0, 0xCD2000
	034 Move X0, [X0+1296]
	035 Call 0x1C17CF4
	036 Move X0, 0xC99000
	037 Move X0, [X0+2576]
	038 Call 0x1C17CF4
	039 Move X0, 0xC98000
	040 Move X0, [X0+2544]
	041 Call 0x1C17CF4
	042 Move X0, 0xCD4000
	043 Move X0, [X0+64]
	044 Call 0x1C17CF4
	045 Move X0, 0xCD4000
	046 Move X0, [X0+72]
	047 Call 0x1C17CF4
	048 Move X0, 0xC97000
	049 Move X0, [X0+3880]
	050 Call 0x1C17CF4
	051 Move X0, 0xC97000
	052 Move X0, [X0+3584]
	053 Call 0x1C17CF4
	054 Move X0, 0xCD4000
	055 Move X0, [X0+80]
	056 Call 0x1C17CF4
	057 Move X0, 0xCD4000
	058 Move X0, [X0+88]
	059 Call 0x1C17CF4
	060 Move X0, 0xC97000
	061 Move X0, [X0+3608]
	062 Call 0x1C17CF4
	063 Move X0, 0xCD4000
	064 Move X0, [X0+96]
	065 Call 0x1C17CF4
	066 Move X0, 0xC98000
	067 Move X0, [X0+2072]
	068 Call 0x1C17CF4
	069 Move X0, 0xCD3000
	070 Move X0, [X0+1992]
	071 Call 0x1C17CF4
	072 Move X0, 0xCD3000
	073 Move X0, [X0+2000]
	074 Call 0x1C17CF4
	075 Move X0, 0xCD4000
	076 Move X0, [X0+104]
	077 Call 0x1C17CF4
	078 Move X0, 0xCD4000
	079 Move X0, [X0+112]
	080 Call 0x1C17CF4
	081 Move X0, 0xC98000
	082 Move X0, [X0+2096]
	083 Call 0x1C17CF4
	084 Move X0, 0xC98000
	085 Move X0, [X0+2104]
	086 Call 0x1C17CF4
	087 Move X0, 0xCD4000
	088 Move X0, [X0+120]
	089 Call 0x1C17CF4
	090 Move X0, 0xC98000
	091 Move X0, [X0+2112]
	092 Call 0x1C17CF4
	093 Move X0, 0xCD4000
	094 Move X0, [X0+128]
	095 Call 0x1C17CF4
	096 Move X0, 0xCD4000
	097 Move X0, [X0+136]
	098 Call 0x1C17CF4
	099 Move X0, 0xCD4000
	100 Move X0, [X0+144]
	101 Call 0x1C17CF4
	102 Move W8, 1
	103 Move [X20+1957], W8
	104 Move [X31+48], X31
	105 Move [X31+56], X31
	106 Move [X31+40], X31
	107 Move W25, [X19]
	108 Move X20, [X19+32]
	109 Compare W25, 0
	110 JumpIfEqual {119}
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X19+112]
	113 Move TEMP, 0
	114 Not TEMP
	115 Move W25, TEMP
	116 Move [X31+40], X8
	117 Move [X19+112], X31
	118 Move [X19], W25
	119 Move X8, [X19+104]
	120 Move TEMP, 0
	121 Not TEMP
	122 Move W25, TEMP
	123 Move [X31+48], X8
	124 Move [X19+104], X31
	125 Move [X19], W25
	126 Move X8, 0xC98000
	127 Move X8, [X8+2096]
	128 Add X0, X31, 48
	129 Move X1, [X8]
	130 Call TaskAwaiter`1<Object>.GetResult, X0
	131 Move X8, 0xCD4000
	132 Move X8, [X8+144]
	133 Move X0, [X8]
	134 Call 0x1C17F10
	135 Move X21, X0
	136 Move X1, X31
	137 Call <>c__DisplayClass84_0..ctor, X0
	138 Move [X19+96], X21
	139 Compare X21, 0
	140 JumpIfEqual {743}
	141 Move X8, [X19+32]
	142 Move [X21+16], X8
	143 Move X8, [X19+40]
	144 Move [X21+24], X8
	145 Move X8, [X19+48]
	146 Move [X21+32], X8
	147 Move W8, [X19+56]
	148 Move [X21+40], W8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 Move [X21+44], X8
	151 Move X8, [X19+96]
	152 Compare X8, 0
	153 JumpIfEqual {744}
	154 Move X9, [X19+72]
	155 Move [X8+56], X9
	156 Move X9, [X19+80]
	157 Move [X8+64], X9
	158 Compare X20, 0
	159 JumpIfEqual {745}
	160 Move W8, [X20+16]
	161 Compare W8, 0
	162 JumpIfEqual {302}
	163 Move X8, [X19+96]
	164 Compare X8, 0
	165 JumpIfEqual {746}
	166 Move X21, [X8+24]
	167 Compare X21, 0
	168 JumpIfEqual {747}
	169 Move X23, 0xC98000
	170 Move X8, [X21]
	171 Move X23, [X23+2072]
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X1, [X23]
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move W2, 7
	183 Move X0, X21
	184 Call 0x1C5D788
	185 Move W9, [X10]
	186 Add W9, W9, 7
	187 Add X8, X8, W9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X21
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move X1, X31
	194 Call String.IsNullOrEmpty, X0
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {300}
	199 Move X8, [X19+96]
	200 Compare X8, 0
	201 JumpIfEqual {748}
	202 Move X9, 0xC98000
	203 Move X9, [X9+2544]
	204 Move X21, [X8+24]
	205 Move X0, [X9]
	206 Move W9, [X0+224]
	207 Compare W9, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 Move X0, X31
	211 Call DateTime.get_UtcNow
	212 Move X22, 0xC99000
	213 Move X22, [X22+2576]
	214 Move X8, X0
	215 Move [X31+56], X8
	216 Move X0, [X22]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {222}
	220 Call 0x1C17DFC
	221 Move X0, [X22]
	222 Move X8, [X0+184]
	223 Move X1, [X8]
	224 Add X0, X31, 56
	225 Move X2, X31
	226 Call DateTime.Add, X0, X1
	227 Compare X21, 0
	228 JumpIfEqual {749}
	229 Move X8, [X21]
	230 Move X1, [X23]
	231 Move X22, X0
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move W2, 11
	242 Move X0, X21
	243 Call 0x1C5D788
	244 Move W9, [X10]
	245 Add W9, W9, 11
	246 Add X8, X8, W9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X2, [X0+8]
	250 Move X0, X21
	251 Move X1, X22
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move TEMP, X0
	254 And TEMP, TEMP, 1
	255 Compare TEMP, 1
	256 JumpIfNotEqual {300}
	257 Move X8, [X19+96]
	258 Compare X8, 0
	259 JumpIfEqual {750}
	260 Move X1, [X8+24]
	261 Move X3, [X19+88]
	262 Move X4, [X8+64]
	263 Move X0, X20
	264 Move X2, X31
	265 Move X5, X31
	266 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	267 Compare X0, 0
	268 JumpIfEqual {751}
	269 Move X8, 0xC98000
	270 Move X8, [X8+2112]
	271 Move X1, [X8]
	272 Call Task`1<Object>.GetAwaiter, X0
	273 Move X8, 0xC98000
	274 Move X8, [X8+2104]
	275 Move [X31+48], X0
	276 Move X1, [X8]
	277 Add X0, X31, 48
	278 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfEqual {126}
	283 Move [X19], W31
	284 Move X8, [X31+48]
	285 Move [X19+104], X8
	286 Move X8, 0xCD2000
	287 Move X8, [X8+1296]
	288 Move X0, [X8]
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {293}
	292 Call 0x1C17DFC
	293 Move X8, 0xCD4000
	294 Move X8, [X8+56]
	295 Add X0, X19, 8
	296 Move X3, [X8]
	297 Add X1, X31, 48
	298 Move X2, X19
	299 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	300 Compare X20, 0
	301 JumpIfEqual {742}
	302 Move X8, 0xCD4000
	303 Move X8, [X8+64]
	304 Move X21, [X20+88]
	305 Move X23, [X19+96]
	306 Move X0, [X8]
	307 Call 0x1C17F10
	308 Move X8, 0xCD4000
	309 Move X8, [X8+136]
	310 Move X22, X0
	311 Move X2, [X8]
	312 Move X1, X23
	313 Move X3, X31
	314 Call Func`1<Object>..ctor, X0, X1, X2
	315 Move X8, [X19+96]
	316 Compare X8, 0
	317 JumpIfEqual {739}
	318 Move X9, 0xCD3000
	319 Move X23, [X19+88]
	320 Move X9, [X9+1992]
	321 Compare X23, 0
	322 JumpIfNotEqual {324}
	323 Move X23, [X20+24]
	324 Move X20, [X8+24]
	325 Move X1, [X8+64]
	326 Move X2, [X9]
	327 Move [X31+24], X31
	328 Move [X31+32], X31
	329 Add X0, X31, 24
	330 Call Nullable`1<CancellationToken>..ctor, X0, X1
	331 Move X8, 0xCD3000
	332 Move X8, [X8+2000]
	333 Move X0, [X8]
	334 Call 0x1C17F10
	335 Move X3, [X31+24]
	336 Move X4, [X31+32]
	337 Move X24, X0
	338 Move X1, X20
	339 Move X2, X23
	340 Move X5, X31
	341 Call RetryHistory..ctor, X0, X1, X2, X3
	342 Compare X21, 0
	343 JumpIfEqual {740}
	344 Move X8, 0xCD4000
	345 Move X8, [X8+104]
	346 Move X3, [X8]
	347 Move X0, X21
	348 Move X1, X22
	349 Move X2, X24
	350 Call 0x2244230, X0, X1, X2
	351 Compare X0, 0
	352 JumpIfEqual {741}
	353 Move X8, 0xCD4000
	354 Move X8, [X8+128]
	355 Move X1, [X8]
	356 Call Task`1<Object>.GetAwaiter, X0
	357 Move X8, 0xCD4000
	358 Move X8, [X8+120]
	359 Move [X31+40], X0
	360 Move X1, [X8]
	361 Add X0, X31, 40
	362 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	363 Move TEMP, X0
	364 And TEMP, TEMP, 1
	365 Compare TEMP, 1
	366 JumpIfNotEqual {391}
	367 Move X8, 0xCD4000
	368 Move X8, [X8+112]
	369 Add X0, X31, 40
	370 Move X1, [X8]
	371 Call TaskAwaiter`1<Object>.GetResult, X0
	372 Move X20, X0
	373 Compare X0, 0
	374 JumpIfEqual {734}
	375 Move X10, 0xCD4000
	376 Move X8, [X20]
	377 Move X10, [X10+72]
	378 NotImplemented "Instruction LDRH not yet implemented."
	379 Move X1, [X10]
	380 Compare X9, 0
	381 JumpIfEqual {388}
	382 Move X10, [X8+176]
	383 Add X10, X10, 8
	384 NotImplemented "Instruction LDUR not yet implemented."
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Subtract X9, X9, 1
	387 Add X10, X10, 16
	388 Move W2, 1
	389 Move X0, X20
	390 Call 0x1C5D788
	391 Move W8, 1
	392 Move [X19], W8
	393 Move X8, [X31+40]
	394 Move [X19+112], X8
	395 Move X8, 0xCD2000
	396 Move X8, [X8+1296]
	397 Move X0, [X8]
	398 Move W8, [X0+224]
	399 Compare W8, 0
	400 JumpIfNotEqual {402}
	401 Call 0x1C17DFC
	402 Move X8, 0xCD4000
	403 Move X8, [X8+48]
	404 Add X0, X19, 8
	405 Move X3, [X8]
	406 Add X1, X31, 40
	407 Move X2, X19
	408 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	409 Move W9, [X10]
	410 Add W9, W9, 1
	411 Add X8, X8, W9
	412 Add X0, X8, 312
	413 Move X8, [X0]
	414 Move X1, [X0+8]
	415 Move X0, X20
	416 NotImplemented "Instruction BLR not yet implemented."
	417 Move X21, X0
	418 Compare X0, 0
	419 JumpIfEqual {735}
	420 Move X10, 0xCD4000
	421 Move X8, [X21]
	422 Move X10, [X10+80]
	423 NotImplemented "Instruction LDRH not yet implemented."
	424 Move X1, [X10]
	425 Compare X9, 0
	426 JumpIfEqual {433}
	427 Move X10, [X8+176]
	428 Add X10, X10, 8
	429 NotImplemented "Instruction LDUR not yet implemented."
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Subtract X9, X9, 1
	432 Add X10, X10, 16
	433 Move X0, X21
	434 Move W2, W31
	435 Call 0x1C5D788
	436 NotImplemented "Instruction LDRSW not yet implemented."
	437 Add X8, X8, X9
	438 Add X0, X8, 312
	439 Move X8, [X0]
	440 Move X1, [X0+8]
	441 Move X0, X21
	442 NotImplemented "Instruction BLR not yet implemented."
	443 Move X21, X0
	444 Move [X31+8], X20
	445 Move [X31+20], W25
	446 Compare X0, 0
	447 JumpIfEqual {736}
	448 Move X26, 0xC97000
	449 Move X27, 0xCD4000
	450 Move X28, 0xC98000
	451 Move X29, 0xCD4000
	452 Move X25, 0xC97000
	453 Move X20, 0xCD4000
	454 Move X26, [X26+3608]
	455 Move X27, [X27+88]
	456 Move X28, [X28+2072]
	457 Move X29, [X29+96]
	458 Move X25, [X25+3880]
	459 Move X20, [X20+40]
	460 Move X8, [X21]
	461 Move X1, [X26]
	462 NotImplemented "Instruction LDRH not yet implemented."
	463 Compare X9, 0
	464 JumpIfEqual {471}
	465 Move X10, [X8+176]
	466 Add X10, X10, 8
	467 NotImplemented "Instruction LDUR not yet implemented."
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Subtract X9, X9, 1
	470 Add X10, X10, 16
	471 Move X0, X21
	472 Move W2, W31
	473 Call 0x1C5D788
	474 NotImplemented "Instruction LDRSW not yet implemented."
	475 Add X8, X8, X9
	476 Add X0, X8, 312
	477 Move X8, [X0]
	478 Move X1, [X0+8]
	479 Move X0, X21
	480 NotImplemented "Instruction BLR not yet implemented."
	481 Move TEMP, X0
	482 And TEMP, TEMP, 1
	483 Compare TEMP, 1
	484 JumpIfNotEqual {658}
	485 Move X8, [X21]
	486 Move X1, [X27]
	487 NotImplemented "Instruction LDRH not yet implemented."
	488 Compare X9, 0
	489 JumpIfEqual {496}
	490 Move X10, [X8+176]
	491 Add X10, X10, 8
	492 NotImplemented "Instruction LDUR not yet implemented."
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Subtract X9, X9, 1
	495 Add X10, X10, 16
	496 Move X0, X21
	497 Move W2, W31
	498 Call 0x1C5D788
	499 NotImplemented "Instruction LDRSW not yet implemented."
	500 Add X8, X8, X9
	501 Add X0, X8, 312
	502 Move X8, [X0]
	503 Move X1, [X0+8]
	504 Move X0, X21
	505 NotImplemented "Instruction BLR not yet implemented."
	506 Move X8, [X19+96]
	507 Compare X8, 0
	508 JumpIfEqual {730}
	509 Move X23, [X8+24]
	510 Compare X23, 0
	511 JumpIfEqual {731}
	512 Move X8, [X23]
	513 Move X1, [X28]
	514 Move X22, X0
	515 NotImplemented "Instruction LDRH not yet implemented."
	516 Compare X9, 0
	517 JumpIfEqual {524}
	518 Move X10, [X8+176]
	519 Add X10, X10, 8
	520 NotImplemented "Instruction LDUR not yet implemented."
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Subtract X9, X9, 1
	523 Add X10, X10, 16
	524 Move W2, 10
	525 Move X0, X23
	526 Call 0x1C5D788
	527 Move W9, [X10]
	528 Add W9, W9, 10
	529 Add X8, X8, W9
	530 Add X0, X8, 312
	531 Move X8, [X0]
	532 Move X1, [X0+8]
	533 Move X0, X23
	534 NotImplemented "Instruction BLR not yet implemented."
	535 Compare X22, 0
	536 JumpIfEqual {728}
	537 Move X8, [X22]
	538 Move X1, [X29]
	539 Move X23, X0
	540 NotImplemented "Instruction LDRH not yet implemented."
	541 Compare X9, 0
	542 JumpIfEqual {549}
	543 Move X10, [X8+176]
	544 Add X10, X10, 8
	545 NotImplemented "Instruction LDUR not yet implemented."
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Subtract X9, X9, 1
	548 Add X10, X10, 16
	549 Move W2, 1
	550 Move X0, X22
	551 Call 0x1C5D788
	552 Move W9, [X10]
	553 Add W9, W9, 1
	554 Add X8, X8, W9
	555 Add X0, X8, 312
	556 Move X8, [X0]
	557 Move X1, [X0+8]
	558 Move X0, X22
	559 NotImplemented "Instruction BLR not yet implemented."
	560 Move X24, X0
	561 Compare X0, 0
	562 JumpIfEqual {729}
	563 Move X8, [X24]
	564 Move X1, [X25]
	565 NotImplemented "Instruction LDRH not yet implemented."
	566 Compare X9, 0
	567 JumpIfEqual {574}
	568 Move X10, [X8+176]
	569 Add X10, X10, 8
	570 NotImplemented "Instruction LDUR not yet implemented."
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Subtract X9, X9, 1
	573 Add X10, X10, 16
	574 Move W2, 9
	575 Move X0, X24
	576 Call 0x1C5D788
	577 Move W9, [X10]
	578 Add W9, W9, 9
	579 Add X8, X8, W9
	580 Add X0, X8, 312
	581 Move X8, [X0]
	582 Move X1, [X0+8]
	583 Move X0, X24
	584 NotImplemented "Instruction BLR not yet implemented."
	585 Move X1, X0
	586 Compare X23, 0
	587 JumpIfEqual {727}
	588 Move X0, X23
	589 Move X2, X31
	590 Call String.Equals, X0, X1
	591 Move TEMP, X0
	592 And TEMP, TEMP, 1
	593 Compare TEMP, 1
	594 JumpIfNotEqual {460}
	595 Move X8, [X22]
	596 Move X1, [X29]
	597 NotImplemented "Instruction LDRH not yet implemented."
	598 Compare X9, 0
	599 JumpIfEqual {606}
	600 Move X10, [X8+176]
	601 Add X10, X10, 8
	602 NotImplemented "Instruction LDUR not yet implemented."
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Subtract X9, X9, 1
	605 Add X10, X10, 16
	606 Move W2, 1
	607 Move X0, X22
	608 Call 0x1C5D788
	609 Move W9, [X10]
	610 Add W9, W9, 1
	611 Add X8, X8, W9
	612 Add X0, X8, 312
	613 Move X8, [X0]
	614 Move X1, [X0+8]
	615 Move X0, X22
	616 NotImplemented "Instruction BLR not yet implemented."
	617 Move X22, X0
	618 Compare X0, 0
	619 JumpIfEqual {460}
	620 Move X9, [X22]
	621 Move X8, [X20]
	622 Move W11, [X9+304]
	623 Move W10, [X8+304]
	624 NotImplemented "Instruction CMP not yet implemented."
	625 Move X9, [X9+200]
	626 Add X9, X9, X10
	627 NotImplemented "Instruction LDUR not yet implemented."
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Move X8, [X19+96]
	630 Compare X8, 0
	631 JumpIfEqual {732}
	632 Move X23, [X8+24]
	633 Compare X23, 0
	634 JumpIfEqual {733}
	635 Move X8, [X23]
	636 Move X1, [X28]
	637 NotImplemented "Instruction LDRH not yet implemented."
	638 Compare X9, 0
	639 JumpIfEqual {646}
	640 Move X10, [X8+176]
	641 Add X10, X10, 8
	642 NotImplemented "Instruction LDUR not yet implemented."
	643 NotImplemented "Instruction CMP not yet implemented."
	644 Subtract X9, X9, 1
	645 Add X10, X10, 16
	646 Move W2, 9
	647 Move X0, X23
	648 Call 0x1C5D788
	649 Move W9, [X10]
	650 Add W9, W9, 9
	651 Add X8, X8, W9
	652 Add X0, X8, 312
	653 Move X8, [X0]
	654 Move X1, [X0+8]
	655 Move X0, X23
	656 NotImplemented "Instruction BLR not yet implemented."
	657 Move [X22+152], X0
	658 Move W25, [X31+20]
	659 Move X24, X31
	660 Move W20, 11
	661 Move TEMP, X25
	662 And TEMP, TEMP, -2147483648
	663 Compare TEMP, -2147483648
	664 JumpIfNotEqual {690}
	665 Compare X21, 0
	666 JumpIfEqual {690}
	667 Move X10, 0xC96000
	668 Move X8, [X21]
	669 Move X10, [X10+3584]
	670 NotImplemented "Instruction LDRH not yet implemented."
	671 Move X1, [X10]
	672 Compare X9, 0
	673 JumpIfEqual {680}
	674 Move X10, [X8+176]
	675 Add X10, X10, 8
	676 NotImplemented "Instruction LDUR not yet implemented."
	677 NotImplemented "Instruction CMP not yet implemented."
	678 Subtract X9, X9, 1
	679 Add X10, X10, 16
	680 Move X0, X21
	681 Move W2, W31
	682 Call 0x1C5D788
	683 NotImplemented "Instruction LDRSW not yet implemented."
	684 Add X8, X8, X9
	685 Add X0, X8, 312
	686 Move X8, [X0]
	687 Move X1, [X0+8]
	688 Move X0, X21
	689 NotImplemented "Instruction BLR not yet implemented."
	690 Compare X24, 0
	691 JumpIfNotEqual {737}
	692 Compare W20, 0
	693 JumpIfEqual {695}
	694 NotImplemented "Instruction CMP not yet implemented."
	695 Move TEMP, 1
	696 Not TEMP
	697 Move W8, TEMP
	698 Move [X19+96], X31
	699 Move [X19+8], W8
	700 Move X8, 0xCD1000
	701 Move X8, [X8+1296]
	702 Move X0, [X8]
	703 Move W8, [X0+224]
	704 Compare W8, 0
	705 JumpIfNotEqual {707}
	706 Call 0x1C17DFC
	707 Move X8, 0xCD1000
	708 Move X8, [X8+3968]
	709 Move X1, [X31+8]
	710 Move X0, X19
	711 Move X2, [X8]
	712 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	713 Move X20, [X31+144]
	714 Move X19, [X31+152]
	715 Move X22, [X31+128]
	716 Move X21, [X31+136]
	717 Move X24, [X31+112]
	718 Move X23, [X31+120]
	719 Move X26, [X31+96]
	720 Move X25, [X31+104]
	721 Move X28, [X31+80]
	722 Move X27, [X31+88]
	723 Move X29, [X31+64]
	724 Move X30, [X31+72]
	725 Add X31, X31, 160
	726 Return 
	727 Call 0x1C17F20
	728 Call 0x1C17F20
	729 Call 0x1C17F20
	730 Call 0x1C17F20
	731 Call 0x1C17F20
	732 Call 0x1C17F20
	733 Call 0x1C17F20
	734 Call 0x1C17F20
	735 Call 0x1C17F20
	736 Call 0x1C17F20
	737 Move X0, X24
	738 Call 0x1C17F18
	739 Call 0x1C17F20
	740 Call 0x1C17F20
	741 Call 0x1C17F20
	742 Call 0x1C17F20
	743 Call 0x1C17F20
	744 Call 0x1C17F20
	745 Call 0x1C17F20
	746 Call 0x1C17F20
	747 Call 0x1C17F20
	748 Call 0x1C17F20
	749 Call 0x1C17F20
	750 Call 0x1C17F20
	751 Call 0x1C17F20
	752 Move X22, X1
	753 Move X23, X0
	754 Move W25, [X31+20]
	755 Move X22, X1
	756 Move X23, X0
	757 NotImplemented "Instruction CMP not yet implemented."
	758 Move X0, X23
	759 Call 0x3EB2AD0
	760 Move X24, [X0]
	761 Call 0x3EB2AE0
	762 Move W20, W31
	763 Move TEMP, X25
	764 And TEMP, TEMP, -2147483648
	765 Compare TEMP, -2147483648
	766 JumpIfEqual {665}
	767 Move X24, X31
	768 Move TEMP, X25
	769 And TEMP, TEMP, -2147483648
	770 Compare TEMP, -2147483648
	771 JumpIfNotEqual {797}
	772 Compare X21, 0
	773 JumpIfEqual {797}
	774 Move X10, 0xC96000
	775 Move X8, [X21]
	776 Move X10, [X10+3584]
	777 NotImplemented "Instruction LDRH not yet implemented."
	778 Move X1, [X10]
	779 Compare X9, 0
	780 JumpIfEqual {787}
	781 Move X10, [X8+176]
	782 Add X10, X10, 8
	783 NotImplemented "Instruction LDUR not yet implemented."
	784 NotImplemented "Instruction CMP not yet implemented."
	785 Subtract X9, X9, 1
	786 Add X10, X10, 16
	787 Move X0, X21
	788 Move W2, W31
	789 Call 0x1C5D788
	790 NotImplemented "Instruction LDRSW not yet implemented."
	791 Add X8, X8, X9
	792 Add X0, X8, 312
	793 Move X8, [X0]
	794 Move X1, [X0+8]
	795 Move X0, X21
	796 NotImplemented "Instruction BLR not yet implemented."
	797 Compare X24, 0
	798 JumpIfNotEqual {842}
	799 NotImplemented "Instruction CMP not yet implemented."
	800 Move X0, X23
	801 Call 0x3EB2AD0
	802 Move X20, X0
	803 Move X0, 0xC96000
	804 Move X0, [X0+2000]
	805 Call 0x1C17D08
	806 Move X8, [X20]
	807 Move X1, [X8]
	808 Call 0x1C18270
	809 Move TEMP, X0
	810 And TEMP, TEMP, 1
	811 Compare TEMP, 1
	812 JumpIfNotEqual {834}
	813 Move X20, [X20]
	814 Call 0x3EB2AE0
	815 Move TEMP, 1
	816 Not TEMP
	817 Move W8, TEMP
	818 Move [X19+96], X31
	819 Move [X19+8], W8
	820 Move X0, 0xCD1000
	821 Move X0, [X0+1296]
	822 Call 0x1C17D08
	823 Move W8, [X0+224]
	824 Compare W8, 0
	825 JumpIfNotEqual {827}
	826 Call 0x1C17DFC
	827 Move X0, 0xCD1000
	828 Move X0, [X0+4000]
	829 Call 0x1C17D08
	830 Move X2, X0
	831 Move X0, X19
	832 Move X1, X20
	833 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	834 Move W0, 8
	835 Call 0x3EB2AF0
	836 Move X8, [X20]
	837 Move [X0], X8
	838 Move X1, 0xA57000
	839 Add X1, X1, 3672
	840 Move X2, X31
	841 Call 0x3EB2B00
	842 Move X0, X24
	843 Call 0x1C17F18
	844 Move X22, X1
	845 Move X23, X0
	846 Move TEMP, X25
	847 And TEMP, TEMP, -2147483648
	848 Compare TEMP, -2147483648
	849 JumpIfEqual {772}
	850 Move X23, X0
	851 Call 0x3EB2AE0
	852 Move X0, X23
	853 Call 0x1D2D690
	854 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345E550 LDR X23, [X8 + 0x18]
	0x0345E554 CBZ X23, 0x345EA78
	0x0345E558 LDR X8, [X23]
	0x0345E55C LDR X1, [X29]
	0x0345E560 LDRH W9, [X8 + 0x12E]
	0x0345E564 CBZ X9, 0x345E588
	0x0345E568 LDR X10, [X8 + 0xB0]
	0x0345E56C ADD X10, X10, 0x8
	0x0345E570 LDUR X11, [X10 - 0x8]
	0x0345E574 CMP X11, X1
	0x0345E578 B.EQ 0x345E598
	0x0345E57C SUBS X9, X9, 0x1
	0x0345E580 ADD X10, X10, 0x10
	0x0345E584 B.NE 0x345E570
	0x0345E588 MOVZ W2, 0x9
	0x0345E58C MOV X0, X23
	0x0345E590 BL 0x1C5C788
	0x0345E594 B 0x345E5A8
	0x0345E598 LDR W9, [X10]
	0x0345E59C ADD W9, W9, 0x9
	0x0345E5A0 ADD X8, X8, W9, 0x4, SXTW
	0x0345E5A4 ADD X0, X8, 0x138
	0x0345E5A8 LDP X8, X1, [X0]
	0x0345E5AC MOV X0, X23
	0x0345E5B0 BLR X8
	0x0345E5B4 STR X0, [X22 + 0x68]
	0x0345E5B8 B 0x345E37C
	0x0345E5BC MOV X24, X31
	0x0345E5C0 MOVZ W22, 0xB
	0x0345E5C4 TBZ X25, 0x1F, 0x345E62C
	0x0345E5C8 CBZ X21, 0x345E62C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF80000
	007 Move X21, 0xCD1000
	008 Move W8, [X22+1958]
	009 Move X21, [X21+1296]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCD1000
	017 Move X0, [X0+4008]
	018 Call 0x1C17CF4
	019 Move X0, 0xCD1000
	020 Move X0, [X0+1296]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1958], W8
	024 Move X0, [X21]
	025 Move X21, 0xCD1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+4008]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

