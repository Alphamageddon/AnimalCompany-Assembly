Type: Nakama.Client/<JoinGroupAsync>d__69

Method: System.Void MoveNext()

Disassembly:
	0x03457BF8 CBZ X0, 0x3457DEC
	0x03457BFC ADRP X8, 0xC9D000
	0x03457C00 LDR X8, [X8 + 0x840]
	0x03457C04 LDR X1, [X8]
	0x03457C08 BL 0x269F5D0
	0x03457C0C ADRP X8, 0xC9D000
	0x03457C10 LDR X8, [X8 + 0x838]
	0x03457C14 STR X0, [X31 + 0x20]
	0x03457C18 LDR X1, [X8]
	0x03457C1C ADD X0, X31, 0x20
	0x03457C20 BL 0x2677430
	0x03457C24 TBNZ X0, 0x0, 0x3457A14
	0x03457C28 STR W31, [X19]
	0x03457C2C LDR X8, [X31 + 0x20]
	0x03457C30 STR X8, [X19 + 0x58]
	0x03457C34 LDR X0, [X25]
	0x03457C38 LDR W8, [X0 + 0xE0]
	0x03457C3C CBNZ W8, 0x3457C44
	0x03457C40 BL 0x1C16DFC
	0x03457C44 ADRP X8, 0xCD8000
	0x03457C48 LDR X8, [X8 + 0xE58]
	0x03457C4C ADD X0, X19, 0x8
	0x03457C50 LDR X3, [X8]
	0x03457C54 ADD X1, X31, 0x20
	0x03457C58 MOV X2, X19
	0x03457C5C BL 0x2188748
	0x03457C60 B 0x3457DA8
	0x03457C64 CBZ X20, 0x3457DCC
	0x03457C68 ADRP X8, 0xCA4000
	0x03457C6C LDR X8, [X8 + 0x818]
	0x03457C70 LDR X21, [X20 + 0x58]
	0x03457C74 LDR X23, [X19 + 0x50]
	0x03457C78 LDR X0, [X8]
	0x03457C7C BL 0x1C16F10
	0x03457C80 ADRP X8, 0xCD8000
	0x03457C84 LDR X8, [X8 + 0xE68]
	0x03457C88 MOV X22, X0
	0x03457C8C LDR X2, [X8]
	0x03457C90 MOV X1, X23
	0x03457C94 MOV X3, X31
	0x03457C98 BL 0x2D27AA8
	0x03457C9C LDR X8, [X19 + 0x50]
	0x03457CA0 CBZ X8, 0x3457DC0
	0x03457CA4 ADRP X9, 0xCD8000
	0x03457CA8 LDR X23, [X19 + 0x48]
	0x03457CAC LDR X9, [X9 + 0x7C8]
	0x03457CB0 CBNZ X23, 0x3457CB8
	0x03457CB4 LDR X23, [X20 + 0x18]
	0x03457CB8 LDR X20, [X8 + 0x18]
	0x03457CBC LDR X1, [X8 + 0x30]
	0x03457CC0 LDR X2, [X9]
	0x03457CC4 STP X31, X31, [X31 + 0x8]
	0x03457CC8 ADD X0, X31, 0x8
	0x03457CCC BL 0x242E368
	0x03457CD0 ADRP X8, 0xCD8000
	0x03457CD4 LDR X8, [X8 + 0x7D0]
	0x03457CD8 LDR X0, [X8]
	0x03457CDC BL 0x1C16F10
	0x03457CE0 LDP X3, X4, [X31 + 0x8]
	0x03457CE4 MOV X24, X0
	0x03457CE8 MOV X1, X20
	0x03457CEC MOV X2, X23
	0x03457CF0 MOV X5, X31
	0x03457CF4 BL 0x3465404
	0x03457CF8 CBZ X21, 0x3457DC4
	0x03457CFC MOV X0, X21
	0x03457D00 MOV X1, X22
	0x03457D04 MOV X2, X24
	0x03457D08 MOV X3, X31
	0x03457D0C BL 0x3465B68
	0x03457D10 CBZ X0, 0x3457DC8
	0x03457D14 MOV X1, X31
	0x03457D18 BL 0x33ED394
	0x03457D1C STR X0, [X31 + 0x18]
	0x03457D20 ADD X0, X31, 0x18
	0x03457D24 MOV X1, X31
	0x03457D28 BL 0x32C3A80
	0x03457D2C TBZ X0, 0x0, 0x3457D6C
	0x03457D30 ADD X0, X31, 0x18
	0x03457D34 MOV X1, X31
	0x03457D38 BL 0x32C3B4C
	0x03457D3C MOVN W8, 0x1
	0x03457D40 STR W8, [X19]
	0x03457D44 STR X31, [X19 + 0x50]
	0x03457D48 LDR X0, [X25]
	0x03457D4C ADD X19, X19, 0x8
	0x03457D50 LDR W8, [X0 + 0xE0]
	0x03457D54 CBNZ W8, 0x3457D5C
	0x03457D58 BL 0x1C16DFC
	0x03457D5C MOV X0, X19
	0x03457D60 MOV X1, X31
	0x03457D64 BL 0x32C4864
	0x03457D68 B 0x3457DA8
	0x03457D6C MOVZ W8, 0x1
	0x03457D70 STR W8, [X19]
	0x03457D74 LDR X8, [X31 + 0x18]
	0x03457D78 STR X8, [X19 + 0x60]
	0x03457D7C LDR X0, [X25]
	0x03457D80 LDR W8, [X0 + 0xE0]
	0x03457D84 CBNZ W8, 0x3457D8C
	0x03457D88 BL 0x1C16DFC
	0x03457D8C ADRP X8, 0xCD8000
	0x03457D90 LDR X8, [X8 + 0xE60]
	0x03457D94 ADD X0, X19, 0x8
	0x03457D98 LDR X3, [X8]
	0x03457D9C ADD X1, X31, 0x18
	0x03457DA0 MOV X2, X19
	0x03457DA4 BL 0x2189E0C
	0x03457DA8 LDP X20, X19, [X31 + 0x60]
	0x03457DAC LDP X22, X21, [X31 + 0x50]
	0x03457DB0 LDP X24, X23, [X31 + 0x40]
	0x03457DB4 LDP X30, X25, [X31 + 0x30]
	0x03457DB8 ADD X31, X31, 0x70
	0x03457DBC RET
	0x03457DC0 BL 0x1C16F20
	0x03457DC4 BL 0x1C16F20
	0x03457DC8 BL 0x1C16F20
	0x03457DCC BL 0x1C16F20
	0x03457DD0 BL 0x1C16F20
	0x03457DD4 BL 0x1C16F20
	0x03457DD8 BL 0x1C16F20
	0x03457DDC BL 0x1C16F20
	0x03457DE0 BL 0x1C16F20
	0x03457DE4 BL 0x1C16F20
	0x03457DE8 BL 0x1C16F20
	0x03457DEC BL 0x1C16F20
	0x03457DF0 B 0x3457E64
	0x03457DF4 B 0x3457E64
	0x03457DF8 B 0x3457E64
	0x03457DFC B 0x3457E64
	0x03457E00 B 0x3457E64
	0x03457E04 B 0x3457E64
	0x03457E08 B 0x3457E64
	0x03457E0C B 0x3457E64
	0x03457E10 B 0x3457E64
	0x03457E14 B 0x3457E64
	0x03457E18 B 0x3457E64
	0x03457E1C B 0x3457E64
	0x03457E20 B 0x3457E64
	0x03457E24 B 0x3457E64
	0x03457E28 B 0x3457E64
	0x03457E2C B 0x3457E64
	0x03457E30 B 0x3457E64
	0x03457E34 B 0x3457E64
	0x03457E38 B 0x3457E64
	0x03457E3C B 0x3457E64
	0x03457E40 B 0x3457E64
	0x03457E44 B 0x3457E64
	0x03457E48 B 0x3457E64
	0x03457E4C B 0x3457E64
	0x03457E50 B 0x3457E64
	0x03457E54 B 0x3457E64
	0x03457E58 B 0x3457E64
	0x03457E5C B 0x3457E64
	0x03457E60 B 0x3457E64
	0x03457E64 MOV X20, X0
	0x03457E68 CMP W1, 0x1
	0x03457E6C B.NE 0x3457F00
	0x03457E70 MOV X0, X20
	0x03457E74 BL 0x3EB1AD0
	0x03457E78 MOV X20, X0
	0x03457E7C ADRP X0, 0xC9C000
	0x03457E80 LDR X0, [X0 + 0x7D0]
	0x03457E84 BL 0x1C16D08
	0x03457E88 LDR X8, [X20]
	0x03457E8C LDR X1, [X8]
	0x03457E90 BL 0x1C17270
	0x03457E94 TBZ X0, 0x0, 0x3457ED8
	0x03457E98 LDR X20, [X20]
	0x03457E9C BL 0x3EB1AE0
	0x03457EA0 MOVN W8, 0x1
	0x03457EA4 STR X31, [X19 + 0x50]
	0x03457EA8 STR W8, [X19], #0x8
	0x03457EAC ADRP X0, 0xC9F000
	0x03457EB0 LDR X0, [X0 + 0x280]
	0x03457EB4 BL 0x1C16D08
	0x03457EB8 LDR W8, [X0 + 0xE0]
	0x03457EBC CBNZ W8, 0x3457EC4
	0x03457EC0 BL 0x1C16DFC
	0x03457EC4 MOV X0, X19
	0x03457EC8 MOV X1, X20
	0x03457ECC MOV X2, X31
	0x03457ED0 BL 0x32C4908
	0x03457ED4 B 0x3457DA8
	0x03457ED8 MOVZ W0, 0x8
	0x03457EDC BL 0x3EB1AF0
	0x03457EE0 LDR X8, [X20]
	0x03457EE4 STR X8, [X0]
	0x03457EE8 ADRP X1, 0xA5D000
	0x03457EEC ADD X1, X1, 0xE58
	0x03457EF0 MOV X2, X31
	0x03457EF4 BL 0x3EB1B00
	0x03457EF8 MOV X20, X0
	0x03457EFC BL 0x3EB1AE0
	0x03457F00 MOV X0, X20
	0x03457F04 BL 0x1D2C690
	0x03457F08 BL 0x1990590
	0x03457F0C STR X30, [X31 - 0x30]!
	0x03457F10 STP X22, X21, [X31 + 0x10]
	0x03457F14 STP X20, X19, [X31 + 0x20]
	0x03457F18 ADRP X21, 0xF86000
	0x03457F1C ADRP X22, 0xC9F000
	0x03457F20 LDRB W8, [X21 + 0x78E]
	0x03457F24 LDR X22, [X22 + 0x280]
	0x03457F28 MOV X19, X1
	0x03457F2C MOV X20, X0
	0x03457F30 TBNZ X8, 0x0, 0x3457F48
	0x03457F34 ADRP X0, 0xC9F000
	0x03457F38 LDR X0, [X0 + 0x280]
	0x03457F3C BL 0x1C16CF4
	0x03457F40 MOVZ W8, 0x1
	0x03457F44 STRB W8, [X21 + 0x78E]
	0x03457F48 LDR X0, [X22]
	0x03457F4C LDR W8, [X0 + 0xE0]
	0x03457F50 CBNZ W8, 0x3457F58
	0x03457F54 BL 0x1C16DFC
	0x03457F58 ADD X0, X20, 0x8
	0x03457F5C MOV X1, X19
	0x03457F60 LDP X20, X19, [X31 + 0x20]
	0x03457F64 LDP X22, X21, [X31 + 0x10]
	0x03457F68 MOV X2, X31
	0x03457F6C LDR X30, [X31], #0x30
	0x03457F70 B 0x32C477C
	0x03457F74 SUB X31, X31, 0x70
	0x03457F78 STP X30, X25, [X31 + 0x30]
	0x03457F7C STP X24, X23, [X31 + 0x40]
	0x03457F80 STP X22, X21, [X31 + 0x50]
	0x03457F84 STP X20, X19, [X31 + 0x60]
	0x03457F88 ADRP X20, 0xF86000
	0x03457F8C LDRB W8, [X20 + 0x78F]
	0x03457F90 MOV X19, X0
	0x03457F94 TBNZ X8, 0x0, 0x3458048
	0x03457F98 ADRP X0, 0xCD8000
	0x03457F9C LDR X0, [X0 + 0xE78]
	0x03457FA0 BL 0x1C16CF4
	0x03457FA4 ADRP X0, 0xCD8000
	0x03457FA8 LDR X0, [X0 + 0xE80]
	0x03457FAC BL 0x1C16CF4
	0x03457FB0 ADRP X0, 0xC9F000
	0x03457FB4 LDR X0, [X0 + 0x280]
	0x03457FB8 BL 0x1C16CF4
	0x03457FBC ADRP X0, 0xC9E000
	0x03457FC0 LDR X0, [X0 + 0xA10]
	0x03457FC4 BL 0x1C16CF4
	0x03457FC8 ADRP X0, 0xC9D000
	0x03457FCC LDR X0, [X0 + 0x9F0]
	0x03457FD0 BL 0x1C16CF4
	0x03457FD4 ADRP X0, 0xCA4000
	0x03457FD8 LDR X0, [X0 + 0x818]
	0x03457FDC BL 0x1C16CF4
	0x03457FE0 ADRP X0, 0xC9D000
	0x03457FE4 LDR X0, [X0 + 0x818]
	0x03457FE8 BL 0x1C16CF4
	0x03457FEC ADRP X0, 0xCD8000
	0x03457FF0 LDR X0, [X0 + 0x7C8]
	0x03457FF4 BL 0x1C16CF4
	0x03457FF8 ADRP X0, 0xCD8000
	0x03457FFC LDR X0, [X0 + 0x7D0]
	0x03458000 BL 0x1C16CF4
	0x03458004 ADRP X0, 0xC9C000
	0x03458008 LDR X0, [X0 + 0x830]
	0x0345800C BL 0x1C16CF4
	0x03458010 ADRP X0, 0xC9C000
	0x03458014 LDR X0, [X0 + 0x838]
	0x03458018 BL 0x1C16CF4
	0x0345801C ADRP X0, 0xC9C000
	0x03458020 LDR X0, [X0 + 0x840]
	0x03458024 BL 0x1C16CF4
	0x03458028 ADRP X0, 0xCD7000
	0x0345802C LDR X0, [X0 + 0xE88]
	0x03458030 BL 0x1C16CF4
	0x03458034 ADRP X0, 0xCD7000
	0x03458038 LDR X0, [X0 + 0xE90]
	0x0345803C BL 0x1C16CF4
	0x03458040 MOVZ W8, 0x1
	0x03458044 STRB W8, [X20 + 0x78F]
	0x03458048 STP X31, X31, [X31 + 0x20]
	0x0345804C STR X31, [X31 + 0x18]
	0x03458050 ADRP X25, 0xC9E000
	0x03458054 LDR W8, [X19]
	0x03458058 LDR X20, [X19 + 0x20]
	0x0345805C LDR X25, [X25 + 0x280]
	0x03458060 CBZ W8, 0x3458084
	0x03458064 CMP W8, 0x1
	0x03458068 B.NE 0x34580B0
	0x0345806C LDR X8, [X19 + 0x58]
	0x03458070 MOVN W9, 0x0
	0x03458074 STR X8, [X31 + 0x18]
	0x03458078 STR X31, [X19 + 0x58]
	0x0345807C STR W9, [X19]
	0x03458080 B 0x34583AC
	0x03458084 LDR X8, [X19 + 0x50]
	0x03458088 MOVN W9, 0x0
	0x0345808C STR X8, [X31 + 0x20]
	0x03458090 STR X31, [X19 + 0x50]
	0x03458094 STR W9, [X19]
	0x03458098 ADRP X8, 0xC9C000
	0x0345809C LDR X8, [X8 + 0x830]
	0x034580A0 ADD X0, X31, 0x20
	0x034580A4 LDR X1, [X8]
	0x034580A8 BL 0x2677474
	0x034580AC B 0x34582E0
	0x034580B0 ADRP X8, 0xCD7000
	0x034580B4 LDR X8, [X8 + 0xE90]
	0x034580B8 LDR X0, [X8]
	0x034580BC BL 0x1C16F10
	0x034580C0 MOV X21, X0
	0x034580C4 MOV X1, X31
	0x034580C8 BL 0x3449C24
	0x034580CC STR X21, [X19 + 0x48]
	0x034580D0 CBZ X21, 0x345844C
	0x034580D4 LDR X8, [X19 + 0x20]
	0x034580D8 STR X8, [X21 + 0x10]
	0x034580DC LDR X8, [X19 + 0x28]
	0x034580E0 STR X8, [X21 + 0x18]
	0x034580E4 LDR X8, [X19 + 0x30]
	0x034580E8 STR X8, [X21 + 0x20]
	0x034580EC LDR X8, [X19 + 0x38]
	0x034580F0 STR X8, [X21 + 0x28]
	0x034580F4 CBZ X20, 0x3458450
	0x034580F8 LDRB W8, [X20 + 0x10]
	0x034580FC CBZ W8, 0x34582E4
	0x03458100 LDR X8, [X19 + 0x48]
	0x03458104 CBZ X8, 0x3458454
	0x03458108 LDR X21, [X8 + 0x18]
	0x0345810C CBZ X21, 0x3458458
	0x03458110 ADRP X23, 0xC9C000
	0x03458114 LDR X8, [X21]
	0x03458118 LDR X23, [X23 + 0x818]
	0x0345811C LDRH W9, [X8 + 0x12E]
	0x03458120 LDR X1, [X23]
	0x03458124 CBZ X9, 0x3458148
	0x03458128 LDR X10, [X8 + 0xB0]
	0x0345812C ADD X10, X10, 0x8
	0x03458130 LDUR X11, [X10 - 0x8]
	0x03458134 CMP X11, X1
	0x03458138 B.EQ 0x3458158
	0x0345813C SUBS X9, X9, 0x1
	0x03458140 ADD X10, X10, 0x10
	0x03458144 B.NE 0x3458130
	0x03458148 MOVZ W2, 0x7
	0x0345814C MOV X0, X21
	0x03458150 BL 0x1C5C788
	0x03458154 B 0x3458168
	0x03458158 LDR W9, [X10]
	0x0345815C ADD W9, W9, 0x7
	0x03458160 ADD X8, X8, W9, 0x4, SXTW
	0x03458164 ADD X0, X8, 0x138
	0x03458168 LDP X8, X1, [X0]
	0x0345816C MOV X0, X21
	0x03458170 BLR X8
	0x03458174 MOV X1, X31
	0x03458178 BL 0x32277A8
	0x0345817C TBNZ X0, 0x0, 0x34582E0
	0x03458180 LDR X8, [X19 + 0x48]
	0x03458184 CBZ X8, 0x345845C
	0x03458188 ADRP X9, 0xC9C000
	0x0345818C LDR X9, [X9 + 0x9F0]
	0x03458190 LDR X21, [X8 + 0x18]
	0x03458194 LDR X0, [X9]
	0x03458198 LDR W9, [X0 + 0xE0]
	0x0345819C CBNZ W9, 0x34581A4
	0x034581A0 BL 0x1C16DFC
	0x034581A4 MOV X0, X31
	0x034581A8 BL 0x33616A4
	0x034581AC ADRP X22, 0xC9D000
	0x034581B0 LDR X22, [X22 + 0xA10]
	0x034581B4 MOV X8, X0
	0x034581B8 STR X8, [X31 + 0x28]
	0x034581BC LDR X0, [X22]
	0x034581C0 LDR W8, [X0 + 0xE0]
	0x034581C4 CBNZ W8, 0x34581D0
	0x034581C8 BL 0x1C16DFC
	0x034581CC LDR X0, [X22]
	0x034581D0 LDR X8, [X0 + 0xB8]
	0x034581D4 LDR X1, [X8]
	0x034581D8 ADD X0, X31, 0x28
	0x034581DC MOV X2, X31
	0x034581E0 BL 0x335FC68
	0x034581E4 CBZ X21, 0x3458460
	0x034581E8 LDR X8, [X21]
	0x034581EC LDR X1, [X23]
	0x034581F0 MOV X22, X0
	0x034581F4 LDRH W9, [X8 + 0x12E]
	0x034581F8 CBZ X9, 0x345821C
	0x034581FC LDR X10, [X8 + 0xB0]
	0x03458200 ADD X10, X10, 0x8
	0x03458204 LDUR X11, [X10 - 0x8]
	0x03458208 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF87000
	011 Move W8, [X20+1929]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD9000
	018 Move X0, [X0+3608]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD9000
	021 Move X0, [X0+3616]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA0000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9F000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9E000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA5000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9E000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD9000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD9000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9E000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9E000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9E000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD9000
	054 Move X0, [X0+3624]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD9000
	057 Move X0, [X0+3632]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1929], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA0000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC9E000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD9000
	091 Move X8, [X8+3632]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass69_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xC9E000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xC9E000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC9F000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xC9E000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC9E000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCD9000
	242 Move X8, [X8+3608]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCA5000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCD9000
	257 Move X8, [X8+3624]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCD9000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCD9000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+72], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+88], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCD8000
	336 Move X8, [X8+3616]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xC9C000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+72], X31
	385 Move [X19+8], W8
	386 Move X0, 0xC9F000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA5D000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345820C B.EQ 0x345822C
	0x03458210 SUBS X9, X9, 0x1
	0x03458214 ADD X10, X10, 0x10
	0x03458218 B.NE 0x3458204
	0x0345821C MOVZ W2, 0xB
	0x03458220 MOV X0, X21
	0x03458224 BL 0x1C5C788
	0x03458228 B 0x345823C
	0x0345822C LDR W9, [X10]
	0x03458230 ADD W9, W9, 0xB
	0x03458234 ADD X8, X8, W9, 0x4, SXTW
	0x03458238 ADD X0, X8, 0x138
	0x0345823C LDP X8, X2, [X0]
	0x03458240 MOV X0, X21
	0x03458244 MOV X1, X22
	0x03458248 BLR X8
	0x0345824C TBZ X0, 0x0, 0x34582E0
	0x03458250 LDR X8, [X19 + 0x48]
	0x03458254 CBZ X8, 0x3458464
	0x03458258 LDR X1, [X8 + 0x18]
	0x0345825C LDR X3, [X19 + 0x40]
	0x03458260 LDR X4, [X8 + 0x28]
	0x03458264 MOV X0, X20
	0x03458268 MOV X2, X31
	0x0345826C MOV X5, X31
	0x03458270 BL 0x34440A8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF86000
	007 Move X22, 0xC9F000
	008 Move W8, [X21+1930]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9F000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1930], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

