Type: Nakama.ApiClient/<UnlinkSteamAsync>d__38

Method: System.Void MoveNext()

Disassembly:
	0x0343A80C LDP X26, X25, [X31 + 0x30]
	0x0343A810 LDP X28, X27, [X31 + 0x20]
	0x0343A814 LDR X30, [X31 + 0x10]
	0x0343A818 ADD X31, X31, 0x70
	0x0343A81C RET
	0x0343A820 ADRP X0, 0xCC1000
	0x0343A824 LDR X0, [X0 + 0x578]
	0x0343A828 BL 0x1C16D08
	0x0343A82C BL 0x1C16F10
	0x0343A830 MOV X20, X0
	0x0343A834 ADRP X0, 0xCF4000
	0x0343A838 LDR X0, [X0 + 0x808]
	0x0343A83C BL 0x1C16D08
	0x0343A840 MOV X1, X0
	0x0343A844 MOV X0, X20
	0x0343A848 MOV X2, X31
	0x0343A84C BL 0x3314A68
	0x0343A850 ADRP X0, 0xCF5000
	0x0343A854 LDR X0, [X0 + 0x448]
	0x0343A858 BL 0x1C16D08
	0x0343A85C MOV X1, X0
	0x0343A860 MOV X0, X20
	0x0343A864 BL 0x1C16DEC
	0x0343A868 ADRP X0, 0xCC1000
	0x0343A86C LDR X0, [X0 + 0x578]
	0x0343A870 BL 0x1C16D08
	0x0343A874 BL 0x1C16F10
	0x0343A878 MOV X20, X0
	0x0343A87C ADRP X0, 0xCF4000
	0x0343A880 LDR X0, [X0 + 0xBC8]
	0x0343A884 BL 0x1C16D08
	0x0343A888 MOV X1, X0
	0x0343A88C MOV X0, X20
	0x0343A890 MOV X2, X31
	0x0343A894 BL 0x3314A68
	0x0343A898 ADRP X0, 0xCF5000
	0x0343A89C LDR X0, [X0 + 0x448]
	0x0343A8A0 BL 0x1C16D08
	0x0343A8A4 MOV X1, X0
	0x0343A8A8 MOV X0, X20
	0x0343A8AC BL 0x1C16DEC
	0x0343A8B0 BL 0x1C16F20
	0x0343A8B4 BL 0x1C16F20
	0x0343A8B8 BL 0x1C16F20
	0x0343A8BC BL 0x1C16F20
	0x0343A8C0 BL 0x1C16F28
	0x0343A8C4 BL 0x1C16F20
	0x0343A8C8 BL 0x1C16F20
	0x0343A8CC BL 0x1C16F20
	0x0343A8D0 BL 0x1C16F20
	0x0343A8D4 BL 0x1C16F20
	0x0343A8D8 BL 0x1C16F20
	0x0343A8DC B 0x343A94C
	0x0343A8E0 B 0x343A94C
	0x0343A8E4 B 0x343A94C
	0x0343A8E8 B 0x343A94C
	0x0343A8EC B 0x343A94C
	0x0343A8F0 B 0x343A94C
	0x0343A8F4 B 0x343A94C
	0x0343A8F8 B 0x343A94C
	0x0343A8FC B 0x343A94C
	0x0343A900 B 0x343A94C
	0x0343A904 B 0x343A94C
	0x0343A908 B 0x343A94C
	0x0343A90C B 0x343A94C
	0x0343A910 B 0x343A94C
	0x0343A914 B 0x343A94C
	0x0343A918 B 0x343A94C
	0x0343A91C B 0x343A94C
	0x0343A920 B 0x343A94C
	0x0343A924 B 0x343A94C
	0x0343A928 B 0x343A94C
	0x0343A92C B 0x343A94C
	0x0343A930 B 0x343A94C
	0x0343A934 B 0x343A94C
	0x0343A938 B 0x343A94C
	0x0343A93C B 0x343A94C
	0x0343A940 B 0x343A94C
	0x0343A944 B 0x343A94C
	0x0343A948 B 0x343A94C
	0x0343A94C MOV X20, X0
	0x0343A950 CMP W1, 0x1
	0x0343A954 B.NE 0x343A9E4
	0x0343A958 MOV X0, X20
	0x0343A95C BL 0x3EB1AD0
	0x0343A960 MOV X20, X0
	0x0343A964 ADRP X0, 0xCB9000
	0x0343A968 LDR X0, [X0 + 0x7D0]
	0x0343A96C BL 0x1C16D08
	0x0343A970 LDR X8, [X20]
	0x0343A974 LDR X1, [X8]
	0x0343A978 BL 0x1C17270
	0x0343A97C TBZ X0, 0x0, 0x343A9BC
	0x0343A980 LDR X20, [X20]
	0x0343A984 BL 0x3EB1AE0
	0x0343A988 MOVN W8, 0x1
	0x0343A98C STR W8, [X19], #0x8
	0x0343A990 ADRP X0, 0xCBC000
	0x0343A994 LDR X0, [X0 + 0x280]
	0x0343A998 BL 0x1C16D08
	0x0343A99C LDR W8, [X0 + 0xE0]
	0x0343A9A0 CBNZ W8, 0x343A9A8
	0x0343A9A4 BL 0x1C16DFC
	0x0343A9A8 MOV X0, X19
	0x0343A9AC MOV X1, X20
	0x0343A9B0 MOV X2, X31
	0x0343A9B4 BL 0x32C4908
	0x0343A9B8 B 0x343A800
	0x0343A9BC MOVZ W0, 0x8
	0x0343A9C0 BL 0x3EB1AF0
	0x0343A9C4 LDR X8, [X20]
	0x0343A9C8 STR X8, [X0]
	0x0343A9CC ADRP X1, 0xA7A000
	0x0343A9D0 ADD X1, X1, 0xE58
	0x0343A9D4 MOV X2, X31
	0x0343A9D8 BL 0x3EB1B00
	0x0343A9DC MOV X20, X0
	0x0343A9E0 BL 0x3EB1AE0
	0x0343A9E4 MOV X0, X20
	0x0343A9E8 BL 0x1D2C690
	0x0343A9EC BL 0x1990590
	0x0343A9F0 STR X30, [X31 - 0x30]!
	0x0343A9F4 STP X22, X21, [X31 + 0x10]
	0x0343A9F8 STP X20, X19, [X31 + 0x20]
	0x0343A9FC ADRP X21, 0xFA3000
	0x0343AA00 ADRP X22, 0xCBC000
	0x0343AA04 LDRB W8, [X21 + 0x68A]
	0x0343AA08 LDR X22, [X22 + 0x280]
	0x0343AA0C MOV X19, X1
	0x0343AA10 MOV X20, X0
	0x0343AA14 TBNZ X8, 0x0, 0x343AA2C
	0x0343AA18 ADRP X0, 0xCBC000
	0x0343AA1C LDR X0, [X0 + 0x280]
	0x0343AA20 BL 0x1C16CF4
	0x0343AA24 MOVZ W8, 0x1
	0x0343AA28 STRB W8, [X21 + 0x68A]
	0x0343AA2C LDR X0, [X22]
	0x0343AA30 LDR W8, [X0 + 0xE0]
	0x0343AA34 CBNZ W8, 0x343AA3C
	0x0343AA38 BL 0x1C16DFC
	0x0343AA3C ADD X0, X20, 0x8
	0x0343AA40 MOV X1, X19
	0x0343AA44 LDP X20, X19, [X31 + 0x20]
	0x0343AA48 LDP X22, X21, [X31 + 0x10]
	0x0343AA4C MOV X2, X31
	0x0343AA50 LDR X30, [X31], #0x30
	0x0343AA54 B 0x32C477C
	0x0343AA58 SUB X31, X31, 0x70
	0x0343AA5C STR X30, [X31 + 0x10]
	0x0343AA60 STP X28, X27, [X31 + 0x20]
	0x0343AA64 STP X26, X25, [X31 + 0x30]
	0x0343AA68 STP X24, X23, [X31 + 0x40]
	0x0343AA6C STP X22, X21, [X31 + 0x50]
	0x0343AA70 STP X20, X19, [X31 + 0x60]
	0x0343AA74 ADRP X20, 0xFA3000
	0x0343AA78 LDRB W8, [X20 + 0x68B]
	0x0343AA7C MOV X19, X0
	0x0343AA80 TBNZ X8, 0x0, 0x343AB64
	0x0343AA84 ADRP X0, 0xCF5000
	0x0343AA88 LDR X0, [X0 + 0x450]
	0x0343AA8C BL 0x1C16CF4
	0x0343AA90 ADRP X0, 0xCF5000
	0x0343AA94 LDR X0, [X0 + 0x458]
	0x0343AA98 BL 0x1C16CF4
	0x0343AA9C ADRP X0, 0xCF4000
	0x0343AAA0 LDR X0, [X0 + 0x530]
	0x0343AAA4 BL 0x1C16CF4
	0x0343AAA8 ADRP X0, 0xCC2000
	0x0343AAAC LDR X0, [X0 + 0x8D8]
	0x0343AAB0 BL 0x1C16CF4
	0x0343AAB4 ADRP X0, 0xCBA000
	0x0343AAB8 LDR X0, [X0 + 0x810]
	0x0343AABC BL 0x1C16CF4
	0x0343AAC0 ADRP X0, 0xCBA000
	0x0343AAC4 LDR X0, [X0 + 0x6C0]
	0x0343AAC8 BL 0x1C16CF4
	0x0343AACC ADRP X0, 0xCBA000
	0x0343AAD0 LDR X0, [X0 + 0x6D0]
	0x0343AAD4 BL 0x1C16CF4
	0x0343AAD8 ADRP X0, 0xCF4000
	0x0343AADC LDR X0, [X0 + 0x7B8]
	0x0343AAE0 BL 0x1C16CF4
	0x0343AAE4 ADRP X0, 0xCF5000
	0x0343AAE8 LDR X0, [X0 + 0x460]
	0x0343AAEC BL 0x1C16CF4
	0x0343AAF0 ADRP X0, 0xCBC000
	0x0343AAF4 LDR X0, [X0 + 0x1E0]
	0x0343AAF8 BL 0x1C16CF4
	0x0343AAFC ADRP X0, 0xCBC000
	0x0343AB00 LDR X0, [X0 + 0x1F0]
	0x0343AB04 BL 0x1C16CF4
	0x0343AB08 ADRP X0, 0xCBC000
	0x0343AB0C LDR X0, [X0 + 0x1F8]
	0x0343AB10 BL 0x1C16CF4
	0x0343AB14 ADRP X0, 0xCC2000
	0x0343AB18 LDR X0, [X0 + 0x3A0]
	0x0343AB1C BL 0x1C16CF4
	0x0343AB20 ADRP X0, 0xCE2000
	0x0343AB24 LDR X0, [X0 + 0x4D8]
	0x0343AB28 BL 0x1C16CF4
	0x0343AB2C ADRP X0, 0xCF4000
	0x0343AB30 LDR X0, [X0 + 0x7D0]
	0x0343AB34 BL 0x1C16CF4
	0x0343AB38 ADRP X0, 0xCF4000
	0x0343AB3C LDR X0, [X0 + 0x7D8]
	0x0343AB40 BL 0x1C16CF4
	0x0343AB44 ADRP X0, 0xCF5000
	0x0343AB48 LDR X0, [X0 + 0x468]
	0x0343AB4C BL 0x1C16CF4
	0x0343AB50 ADRP X0, 0xCB9000
	0x0343AB54 LDR X0, [X0 + 0x988]
	0x0343AB58 BL 0x1C16CF4
	0x0343AB5C MOVZ W8, 0x1
	0x0343AB60 STRB W8, [X20 + 0x68B]
	0x0343AB64 STR X31, [X31 + 0x18]
	0x0343AB68 ADRP X28, 0xCF4000
	0x0343AB6C LDR W8, [X19]
	0x0343AB70 LDR X28, [X28 + 0x530]
	0x0343AB74 CBZ W8, 0x343AD54
	0x0343AB78 LDR X8, [X19 + 0x20]
	0x0343AB7C CBZ X8, 0x343AE8C
	0x0343AB80 LDR X25, [X19 + 0x28]
	0x0343AB84 CBZ X25, 0x343AED4
	0x0343AB88 LDR X0, [X25 + 0x20]
	0x0343AB8C CBZ X0, 0x343AED8
	0x0343AB90 ADRP X8, 0xCF5000
	0x0343AB94 ADRP X9, 0xCB9000
	0x0343AB98 LDR X8, [X8 + 0x468]
	0x0343AB9C LDR X9, [X9 + 0x988]
	0x0343ABA0 LDR X21, [X8]
	0x0343ABA4 LDR X20, [X9]
	0x0343ABA8 MOV X1, X31
	0x0343ABAC BL 0x361B448
	0x0343ABB0 ADRP X8, 0xCC2000
	0x0343ABB4 LDR X8, [X8 + 0x8D8]
	0x0343ABB8 MOV X22, X0
	0x0343ABBC LDR X0, [X8]
	0x0343ABC0 MOVZ W1, 0x1
	0x0343ABC4 BL 0x1C16D6C
	0x0343ABC8 MOV X1, X0
	0x0343ABCC CBZ X1, 0x343AEDC
	0x0343ABD0 LDR W8, [X1 + 0x18]
	0x0343ABD4 CBZ W8, 0x343AEE0
	0x0343ABD8 MOVZ W8, 0x2F
	0x0343ABDC STRH W8, [X1 + 0x20]
	0x0343ABE0 CBZ X22, 0x343AEE4
	0x0343ABE4 MOV X0, X22
	0x0343ABE8 MOV X2, X31
	0x0343ABEC BL 0x322BC58
	0x0343ABF0 MOV X1, X21
	0x0343ABF4 MOV X2, X31
	0x0343ABF8 BL 0x321B938
	0x0343ABFC ADRP X8, 0xCC2000
	0x0343AC00 LDR X8, [X8 + 0x3A0]
	0x0343AC04 MOV X22, X0
	0x0343AC08 LDR X23, [X25 + 0x20]
	0x0343AC0C LDR X0, [X8]
	0x0343AC10 BL 0x1C16F10
	0x0343AC14 MOV X21, X0
	0x0343AC18 MOV X1, X23
	0x0343AC1C MOV X2, X31
	0x0343AC20 BL 0x36281F8
	0x0343AC24 CBZ X21, 0x343AEE8
	0x0343AC28 MOV X0, X21
	0x0343AC2C MOV X1, X22
	0x0343AC30 MOV X2, X31
	0x0343AC34 BL 0x36288CC
	0x0343AC38 MOV X0, X21
	0x0343AC3C MOV X1, X20
	0x0343AC40 MOV X2, X31
	0x0343AC44 BL 0x3628980
	0x0343AC48 MOV X0, X21
	0x0343AC4C MOV X1, X31
	0x0343AC50 BL 0x3628A38
	0x0343AC54 ADRP X8, 0xCE2000
	0x0343AC58 ADRP X9, 0xCBA000
	0x0343AC5C LDR X8, [X8 + 0x4D8]
	0x0343AC60 LDR X9, [X9 + 0x6D0]
	0x0343AC64 MOV X20, X0
	0x0343AC68 LDR X21, [X8]
	0x0343AC6C LDR X0, [X9]
	0x0343AC70 BL 0x1C16F10
	0x0343AC74 ADRP X8, 0xCBA000
	0x0343AC78 LDR X8, [X8 + 0x6C0]
	0x0343AC7C MOV X22, X0
	0x0343AC80 LDR X1, [X8]
	0x0343AC84 BL 0x2AA4804
	0x0343AC88 ADRP X8, 0xCF4000
	0x0343AC8C LDR X8, [X8 + 0x7D8]
	0x0343AC90 LDR X1, [X19 + 0x30]
	0x0343AC94 LDR X0, [X8]
	0x0343AC98 MOV X2, X31
	0x0343AC9C BL 0x321B938
	0x0343ACA0 CBZ X22, 0x343AEEC
	0x0343ACA4 ADRP X8, 0xCF4000
	0x0343ACA8 LDR X8, [X8 + 0x7D0]
	0x0343ACAC ADRP X9, 0xCBA000
	0x0343ACB0 LDR X9, [X9 + 0x810]
	0x0343ACB4 MOV X2, X0
	0x0343ACB8 LDR X1, [X8]
	0x0343ACBC LDR X3, [X9]
	0x0343ACC0 MOV X0, X22
	0x0343ACC4 BL 0x2AA5098
	0x0343ACC8 LDR X0, [X19 + 0x20]
	0x0343ACCC MOV X1, X31
	0x0343ACD0 BL 0x3483BE4
	0x0343ACD4 MOV X23, X0
	0x0343ACD8 MOV X0, X31
	0x0343ACDC BL 0x3241948
	0x0343ACE0 CBZ X0, 0x343AEF0
	0x0343ACE4 LDR X8, [X0]
	0x0343ACE8 LDR X9, [X8 + 0x268]
	0x0343ACEC LDR X2, [X8 + 0x270]
	0x0343ACF0 MOV X1, X23
	0x0343ACF4 BLR X9
	0x0343ACF8 LDR X24, [X25 + 0x10]
	0x0343ACFC CBZ X24, 0x343AEF4
	0x0343AD00 ADRP X10, 0xCF4000
	0x0343AD04 LDR X10, [X10 + 0x7B8]
	0x0343AD08 LDR X8, [X24]
	0x0343AD0C LDR W26, [X25 + 0x18]
	0x0343AD10 LDP X27, X25, [X19 + 0x38]
	0x0343AD14 LDR X1, [X10]
	0x0343AD18 LDRH W9, [X8 + 0x12E]
	0x0343AD1C MOV X23, X0
	0x0343AD20 CBZ X9, 0x343AD44
	0x0343AD24 LDR X10, [X8 + 0xB0]
	0x0343AD28 ADD X10, X10, 0x8
	0x0343AD2C LDUR X11, [X10 - 0x8]
	0x0343AD30 CMP X11, X1
	0x0343AD34 B.EQ 0x343AD6C
	0x0343AD38 SUBS X9, X9, 0x1
	0x0343AD3C ADD X10, X10, 0x10
	0x0343AD40 B.NE 0x343AD2C
	0x0343AD44 MOVZ W2, 0x3
	0x0343AD48 MOV X0, X24
	0x0343AD4C BL 0x1C5C788
	0x0343AD50 B 0x343AD7C
	0x0343AD54 LDR X8, [X19 + 0x48]
	0x0343AD58 MOVN W9, 0x0
	0x0343AD5C STR X8, [X31 + 0x18]
	0x0343AD60 STR X31, [X19 + 0x48]
	0x0343AD64 STR W9, [X19]
	0x0343AD68 B 0x343ADD8
	0x0343AD6C LDR W9, [X10]
	0x0343AD70 ADD W9, W9, 0x3
	0x0343AD74 ADD X8, X8, W9, 0x4, SXTW
	0x0343AD78 ADD X0, X8, 0x138

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA4000
	014 Move W8, [X20+1669]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xCF6000
	021 Move X0, [X0+1048]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBD000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC3000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBB000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBB000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBB000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF5000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBD000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCBD000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBD000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC3000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE3000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xCF6000
	057 Move X0, [X0+1056]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF5000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF5000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCBA000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1669], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCBD000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xCF6000
	086 Move X9, 0xCBA000
	087 Move X8, [X8+1056]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCC3000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCC3000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCE3000
	139 Move X9, 0xCBB000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCBB000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xCF5000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xCF5000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCBB000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xCF5000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCBD000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCBD000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCBD000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xCF6000
	269 Move X8, [X8+1048]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCC2000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xCF5000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xCF6000
	301 Move X0, [X0+1064]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCBA000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCBD000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA7B000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343AD7C LDP X8, X9, [X0]
	0x0343AD80 MOV X0, X24
	0x0343AD84 MOV X1, X21
	0x0343AD88 MOV X2, X20
	0x0343AD8C MOV X3, X22
	0x0343AD90 MOV X4, X23
	0x0343AD94 MOV W5, W26
	0x0343AD98 MOV X6, X27
	0x0343AD9C MOV X7, X25
	0x0343ADA0 STR X9, [X31]
	0x0343ADA4 BLR X8
	0x0343ADA8 CBZ X0, 0x343AEF8
	0x0343ADAC ADRP X8, 0xCBC000
	0x0343ADB0 LDR X8, [X8 + 0x1F8]
	0x0343ADB4 LDR X1, [X8]
	0x0343ADB8 BL 0x269F5D0
	0x0343ADBC ADRP X8, 0xCBC000
	0x0343ADC0 LDR X8, [X8 + 0x1F0]
	0x0343ADC4 STR X0, [X31 + 0x18]
	0x0343ADC8 LDR X1, [X8]
	0x0343ADCC ADD X0, X31, 0x18
	0x0343ADD0 BL 0x2677430
	0x0343ADD4 TBZ X0, 0x0, 0x343AE34
	0x0343ADD8 ADRP X8, 0xCBC000
	0x0343ADDC LDR X8, [X8 + 0x1E0]
	0x0343ADE0 ADD X0, X31, 0x18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA4000
	007 Move X22, 0xCBD000
	008 Move W8, [X21+1670]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCBD000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1670], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

