Type: Nakama.ApiLeaderboardRecordList

Method: System.String get_NextCursor()

Disassembly:
	0x03407D20 LDR X8, [X22]
	0x03407D24 MOV X21, X0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_NextCursor(System.String value)

Disassembly:
	0x03407D28 MOVZ W1, 0x4
	0x03407D2C MOV X0, X8

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.IApiLeaderboardRecord> get_OwnerRecords()

Disassembly:
	0x03407D30 BL 0x1C16D6C
	0x03407D34 CBZ X0, 0x3407E74
	0x03407D38 MOV X20, X0
	0x03407D3C CBZ X21, 0x3407D54
	0x03407D40 LDR X8, [X20]
	0x03407D44 MOV X0, X21
	0x03407D48 LDR X1, [X8 + 0x40]
	0x03407D4C BL 0x1C16E00
	0x03407D50 CBZ X0, 0x3407E68
	0x03407D54 LDR W8, [X20 + 0x18]
	0x03407D58 CBZ W8, 0x3407E64
	0x03407D5C ADRP X22, 0xD26000
	0x03407D60 LDR X22, [X22 + 0xE28]
	0x03407D64 STR X21, [X20 + 0x20]
	0x03407D68 LDR X0, [X22]
	0x03407D6C CBZ X0, 0x3407D84
	0x03407D70 LDR X8, [X20]
	0x03407D74 LDR X1, [X8 + 0x40]
	0x03407D78 BL 0x1C16E00
	0x03407D7C CBZ X0, 0x3407E68
	0x03407D80 LDR W8, [X20 + 0x18]
	0x03407D84 CMP W8, 0x1
	0x03407D88 B.LS 0x3407E64
	0x03407D8C LDR X8, [X22]
	0x03407D90 ADRP X9, 0xCEC000
	0x03407D94 LDR X9, [X9 + 0xB58]
	0x03407D98 ADD X1, X31, 0x8
	0x03407D9C STR X8, [X20 + 0x28]
	0x03407DA0 LDRB W8, [X19 + 0x30]
	0x03407DA4 LDR X0, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD7000
	005 Move W8, [X20+1331]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD27000
	012 Move X0, [X0+3952]
	013 Call 0x1C17CF4
	014 Move X0, 0xD27000
	015 Move X0, [X0+3960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1331], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xD27000
	023 Move X8, [X8+3960]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xD27000
	027 Move X8, [X8+3952]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.ApiLeaderboardRecord> get__ownerRecords()

Disassembly:
	0x03407DA8 STRB W8, [X31 + 0x8]
	0x03407DAC BL 0x1C16E04

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__ownerRecords(System.Collections.Generic.List`1<Nakama.ApiLeaderboardRecord> value)

Disassembly:
	0x03407DB0 MOV X21, X0
	0x03407DB4 CBZ X0, 0x3407DCC

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_PrevCursor()

Disassembly:
	0x03407DB8 LDR X8, [X20]
	0x03407DBC MOV X0, X21

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_PrevCursor(System.String value)

Disassembly:
	0x03407DC0 LDR X1, [X8 + 0x40]
	0x03407DC4 BL 0x1C16E00

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_RankCount()

Disassembly:
	0x03407DC8 CBZ X0, 0x3407E68
	0x03407DCC LDR W8, [X20 + 0x18]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_RankCount(System.String value)

Disassembly:
	0x03407DD0 CMP W8, 0x2
	0x03407DD4 B.LS 0x3407E64

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<Nakama.IApiLeaderboardRecord> get_Records()

Disassembly:
	0x03407DD8 STR X21, [X20 + 0x30]
	0x03407DDC LDR X0, [X23]
	0x03407DE0 CBZ X0, 0x3407DF8
	0x03407DE4 LDR X8, [X20]
	0x03407DE8 LDR X1, [X8 + 0x40]
	0x03407DEC BL 0x1C16E00
	0x03407DF0 CBZ X0, 0x3407E68
	0x03407DF4 LDR W8, [X20 + 0x18]
	0x03407DF8 CMP W8, 0x3
	0x03407DFC B.LS 0x3407E64
	0x03407E00 LDR X8, [X23]
	0x03407E04 ADRP X21, 0xD26000
	0x03407E08 ADRP X22, 0xD27000
	0x03407E0C LDR X21, [X21 + 0xE10]
	0x03407E10 LDR X22, [X22 + 0x8]
	0x03407E14 MOV X0, X20
	0x03407E18 MOV X1, X31
	0x03407E1C STR X8, [X20 + 0x38]
	0x03407E20 BL 0x3227578
	0x03407E24 LDR X2, [X19 + 0x38]
	0x03407E28 LDR X1, [X21]
	0x03407E2C LDR X3, [X23]
	0x03407E30 MOV X4, X31
	0x03407E34 BL 0x32277C4
	0x03407E38 LDR X2, [X19 + 0x40]
	0x03407E3C LDR X1, [X22]
	0x03407E40 LDR X3, [X23]
	0x03407E44 MOV X4, X31
	0x03407E48 BL 0x32277C4
	0x03407E4C LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD7000
	005 Move W8, [X20+1332]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xD27000
	012 Move X0, [X0+3952]
	013 Call 0x1C17CF4
	014 Move X0, 0xD27000
	015 Move X0, [X0+3960]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1332], W8
	019 Move X19, [X19+48]
	020 Compare X19, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xD27000
	023 Move X8, [X8+3960]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xD27000
	027 Move X8, [X8+3952]
	028 Move W1, W31
	029 Move X19, X0
	030 Move X2, [X8]
	031 Call List`1<Object>..ctor, X0, X1
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<Nakama.ApiLeaderboardRecord> get__records()

Disassembly:
	0x03407E50 LDP X22, X21, [X31 + 0x30]
	0x03407E54 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set__records(System.Collections.Generic.List`1<Nakama.ApiLeaderboardRecord> value)

Disassembly:
	0x03407E58 LDP X30, X25, [X31 + 0x10]
	0x03407E5C ADD X31, X31, 0x50

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03407E60 RET
	0x03407E64 BL 0x1C16F28
	0x03407E68 BL 0x1C16F44
	0x03407E6C MOV X1, X31
	0x03407E70 BL 0x1C16DEC
	0x03407E74 BL 0x1C16F20
	0x03407E78 MOV X1, X31
	0x03407E7C B 0x33BDD8C
	0x03407E80 LDR X0, [X0 + 0x10]
	0x03407E84 RET
	0x03407E88 STR X1, [X0 + 0x10]
	0x03407E8C RET
	0x03407E90 STR X30, [X31 - 0x20]!
	0x03407E94 STP X20, X19, [X31 + 0x10]
	0x03407E98 ADRP X20, 0xFD6000
	0x03407E9C LDRB W8, [X20 + 0x53C]
	0x03407EA0 MOV X19, X0
	0x03407EA4 TBNZ X8, 0x0, 0x3407EC8
	0x03407EA8 ADRP X0, 0xD27000
	0x03407EAC LDR X0, [X0 + 0x10]
	0x03407EB0 BL 0x1C16CF4
	0x03407EB4 ADRP X0, 0xD27000
	0x03407EB8 LDR X0, [X0 + 0x18]
	0x03407EBC BL 0x1C16CF4
	0x03407EC0 MOVZ W8, 0x1
	0x03407EC4 STRB W8, [X20 + 0x53C]
	0x03407EC8 LDR X19, [X19 + 0x18]
	0x03407ECC CBNZ X19, 0x3407EF8
	0x03407ED0 ADRP X8, 0xD27000
	0x03407ED4 LDR X8, [X8 + 0x18]
	0x03407ED8 LDR X0, [X8]
	0x03407EDC BL 0x1C16F10
	0x03407EE0 ADRP X8, 0xD27000
	0x03407EE4 LDR X8, [X8 + 0x10]
	0x03407EE8 MOV W1, W31
	0x03407EEC MOV X19, X0
	0x03407EF0 LDR X2, [X8]
	0x03407EF4 BL 0x301B830
	0x03407EF8 MOV X0, X19
	0x03407EFC LDP X20, X19, [X31 + 0x10]
	0x03407F00 LDR X30, [X31], #0x20
	0x03407F04 RET
	0x03407F08 LDR X0, [X0 + 0x18]
	0x03407F0C RET
	0x03407F10 STR X1, [X0 + 0x18]
	0x03407F14 RET
	0x03407F18 STR X30, [X31 - 0x50]!
	0x03407F1C STP X26, X25, [X31 + 0x10]
	0x03407F20 STP X24, X23, [X31 + 0x20]
	0x03407F24 STP X22, X21, [X31 + 0x30]
	0x03407F28 STP X20, X19, [X31 + 0x40]
	0x03407F2C ADRP X26, 0xFD6000
	0x03407F30 ADRP X20, 0xCEC000
	0x03407F34 ADRP X25, 0xD26000
	0x03407F38 ADRP X23, 0xCEC000
	0x03407F3C ADRP X24, 0xD27000
	0x03407F40 ADRP X21, 0xD27000
	0x03407F44 ADRP X22, 0xD26000
	0x03407F48 LDR X20, [X20 + 0x988]
	0x03407F4C LDRB W8, [X26 + 0x53D]
	0x03407F50 LDR X25, [X25 + 0xE48]
	0x03407F54 LDR X23, [X23 + 0x838]
	0x03407F58 LDR X24, [X24 + 0x20]
	0x03407F5C LDR X21, [X21 + 0x28]
	0x03407F60 LDR X22, [X22 + 0xD50]
	0x03407F64 MOV X19, X0
	0x03407F68 TBNZ X8, 0x0, 0x3407FBC
	0x03407F6C ADRP X0, 0xD27000
	0x03407F70 LDR X0, [X0 + 0x20]
	0x03407F74 BL 0x1C16CF4
	0x03407F78 ADRP X0, 0xD26000
	0x03407F7C LDR X0, [X0 + 0xE48]
	0x03407F80 BL 0x1C16CF4
	0x03407F84 ADRP X0, 0xD27000
	0x03407F88 LDR X0, [X0 + 0x28]
	0x03407F8C BL 0x1C16CF4
	0x03407F90 ADRP X0, 0xCEC000
	0x03407F94 LDR X0, [X0 + 0x838]
	0x03407F98 BL 0x1C16CF4
	0x03407F9C ADRP X0, 0xD26000
	0x03407FA0 LDR X0, [X0 + 0xD50]
	0x03407FA4 BL 0x1C16CF4
	0x03407FA8 ADRP X0, 0xCEC000
	0x03407FAC LDR X0, [X0 + 0x988]
	0x03407FB0 BL 0x1C16CF4
	0x03407FB4 MOVZ W8, 0x1
	0x03407FB8 STRB W8, [X26 + 0x53D]
	0x03407FBC LDR X2, [X19 + 0x10]
	0x03407FC0 LDR X0, [X20]
	0x03407FC4 LDR X1, [X25]
	0x03407FC8 LDR X3, [X23]
	0x03407FCC MOV X4, X31
	0x03407FD0 BL 0x32277C4
	0x03407FD4 MOV X20, X0
	0x03407FD8 MOV X0, X19
	0x03407FDC BL 0x3407E90
	0x03407FE0 LDR X8, [X23]
	0x03407FE4 LDR X2, [X24]
	0x03407FE8 MOV X1, X0
	0x03407FEC MOV X0, X8
	0x03407FF0 BL 0x226B7E8
	0x03407FF4 LDR X1, [X21]
	0x03407FF8 LDR X3, [X22]
	0x03407FFC MOV X2, X0
	0x03408000 MOV X0, X20
	0x03408004 LDP X20, X19, [X31 + 0x40]
	0x03408008 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0xFD7000
	014 Move X20, 0xCED000
	015 Move X28, 0xD27000
	016 Move X23, 0xCED000
	017 Move X24, 0xD27000
	018 Move X27, 0xD27000
	019 Move X21, 0xD27000
	020 Move X26, 0xD27000
	021 Move X25, 0xD27000
	022 Move X22, 0xD27000
	023 Move X20, [X20+2440]
	024 Move X28, [X28+3680]
	025 Move X23, [X23+2104]
	026 Move X24, [X24+3968]
	027 Move W8, [X29+1333]
	028 Move X27, [X27+3976]
	029 Move X21, [X21+3408]
	030 Move X26, [X26+3688]
	031 Move X25, [X25+3984]
	032 Move X22, [X22+3992]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {67}
	038 Move X0, 0xD27000
	039 Move X0, [X0+3968]
	040 Call 0x1C17CF4
	041 Move X0, 0xD27000
	042 Move X0, [X0+3976]
	043 Call 0x1C17CF4
	044 Move X0, 0xD27000
	045 Move X0, [X0+3992]
	046 Call 0x1C17CF4
	047 Move X0, 0xD27000
	048 Move X0, [X0+3984]
	049 Call 0x1C17CF4
	050 Move X0, 0xCED000
	051 Move X0, [X0+2104]
	052 Call 0x1C17CF4
	053 Move X0, 0xD27000
	054 Move X0, [X0+3688]
	055 Call 0x1C17CF4
	056 Move X0, 0xD27000
	057 Move X0, [X0+3680]
	058 Call 0x1C17CF4
	059 Move X0, 0xD27000
	060 Move X0, [X0+3408]
	061 Call 0x1C17CF4
	062 Move X0, 0xCED000
	063 Move X0, [X0+2440]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X29+1333], W8
	067 Move X2, [X19+16]
	068 Move X0, [X20]
	069 Move X1, [X28]
	070 Move X3, [X23]
	071 Move X4, X31
	072 Call String.Concat, X0, X1, X2, X3
	073 Move X20, X0
	074 Move X0, X19
	075 Call ApiLeaderboardRecordList.get_OwnerRecords, X0
	076 Move X8, [X23]
	077 Move X2, [X24]
	078 Move X1, X0
	079 Move X0, X8
	080 Call String.Join, X0, X1
	081 Move X1, [X27]
	082 Move X3, [X21]
	083 Move X2, X0
	084 Move X0, X20
	085 Move X4, X31
	086 Call String.Concat, X0, X1, X2, X3
	087 Move X2, [X19+32]
	088 Move X1, [X26]
	089 Move X3, [X23]
	090 Move X4, X31
	091 Call String.Concat, X0, X1, X2, X3
	092 Move X2, [X19+40]
	093 Move X1, [X25]
	094 Move X3, [X23]
	095 Move X4, X31
	096 Call String.Concat, X0, X1, X2, X3
	097 Move X20, X0
	098 Move X0, X19
	099 Call ApiLeaderboardRecordList.get_Records, X0
	100 Move X8, [X23]
	101 Move X2, [X24]
	102 Move X1, X0
	103 Move X0, X8
	104 Call String.Join, X0, X1
	105 Move X1, [X22]
	106 Move X3, [X21]
	107 Move X2, X0
	108 Move X0, X20
	109 Move X20, [X31+80]
	110 Move X19, [X31+88]
	111 Move X22, [X31+64]
	112 Move X21, [X31+72]
	113 Move X24, [X31+48]
	114 Move X23, [X31+56]
	115 Move X26, [X31+32]
	116 Move X25, [X31+40]
	117 Move X28, [X31+16]
	118 Move X27, [X31+24]
	119 Move X4, X31
	120 Move X29, [X31+96]
	121 Move X30, [X31+104]
	122 Call String.Concat, X0, X1, X2, X3
	123 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0340800C LDP X24, X23, [X31 + 0x20]
	0x03408010 LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

