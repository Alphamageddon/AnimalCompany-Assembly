Type: Nakama.Client/<LeaveGroupAsync>d__72

Method: System.Void MoveNext()

Disassembly:
	0x03458F74 LDR X8, [X8 + 0x840]
	0x03458F78 LDR X1, [X8]
	0x03458F7C BL 0x269F5D0
	0x03458F80 ADRP X8, 0xC9C000
	0x03458F84 LDR X8, [X8 + 0x838]
	0x03458F88 STR X0, [X31 + 0x20]
	0x03458F8C LDR X1, [X8]
	0x03458F90 ADD X0, X31, 0x20
	0x03458F94 BL 0x2677430
	0x03458F98 TBNZ X0, 0x0, 0x3458D90
	0x03458F9C STR W31, [X19]
	0x03458FA0 LDR X8, [X31 + 0x20]
	0x03458FA4 STR X8, [X19 + 0x50]
	0x03458FA8 LDR X0, [X25]
	0x03458FAC LDR W8, [X0 + 0xE0]
	0x03458FB0 CBNZ W8, 0x3458FB8
	0x03458FB4 BL 0x1C16DFC
	0x03458FB8 ADRP X8, 0xCD7000
	0x03458FBC LDR X8, [X8 + 0xEB8]
	0x03458FC0 ADD X0, X19, 0x8
	0x03458FC4 LDR X3, [X8]
	0x03458FC8 ADD X1, X31, 0x20
	0x03458FCC MOV X2, X19
	0x03458FD0 BL 0x21888BC
	0x03458FD4 B 0x345911C
	0x03458FD8 CBZ X20, 0x3459140
	0x03458FDC ADRP X8, 0xCA3000
	0x03458FE0 LDR X8, [X8 + 0x818]
	0x03458FE4 LDR X21, [X20 + 0x58]
	0x03458FE8 LDR X23, [X19 + 0x48]
	0x03458FEC LDR X0, [X8]
	0x03458FF0 BL 0x1C16F10
	0x03458FF4 ADRP X8, 0xCD7000
	0x03458FF8 LDR X8, [X8 + 0xEC8]
	0x03458FFC MOV X22, X0
	0x03459000 LDR X2, [X8]
	0x03459004 MOV X1, X23
	0x03459008 MOV X3, X31
	0x0345900C BL 0x2D27AA8
	0x03459010 LDR X8, [X19 + 0x48]
	0x03459014 CBZ X8, 0x3459134
	0x03459018 ADRP X9, 0xCD6000
	0x0345901C LDR X23, [X19 + 0x40]
	0x03459020 LDR X9, [X9 + 0x7C8]
	0x03459024 CBNZ X23, 0x345902C
	0x03459028 LDR X23, [X20 + 0x18]
	0x0345902C LDR X20, [X8 + 0x18]
	0x03459030 LDR X1, [X8 + 0x28]
	0x03459034 LDR X2, [X9]
	0x03459038 STP X31, X31, [X31 + 0x8]
	0x0345903C ADD X0, X31, 0x8
	0x03459040 BL 0x242E368
	0x03459044 ADRP X8, 0xCD6000
	0x03459048 LDR X8, [X8 + 0x7D0]
	0x0345904C LDR X0, [X8]
	0x03459050 BL 0x1C16F10
	0x03459054 LDP X3, X4, [X31 + 0x8]
	0x03459058 MOV X24, X0
	0x0345905C MOV X1, X20
	0x03459060 MOV X2, X23
	0x03459064 MOV X5, X31
	0x03459068 BL 0x3465404
	0x0345906C CBZ X21, 0x3459138
	0x03459070 MOV X0, X21
	0x03459074 MOV X1, X22
	0x03459078 MOV X2, X24
	0x0345907C MOV X3, X31
	0x03459080 BL 0x3465B68
	0x03459084 CBZ X0, 0x345913C
	0x03459088 MOV X1, X31
	0x0345908C BL 0x33ED394
	0x03459090 STR X0, [X31 + 0x18]
	0x03459094 ADD X0, X31, 0x18
	0x03459098 MOV X1, X31
	0x0345909C BL 0x32C3A80
	0x034590A0 TBZ X0, 0x0, 0x34590E0
	0x034590A4 ADD X0, X31, 0x18
	0x034590A8 MOV X1, X31
	0x034590AC BL 0x32C3B4C
	0x034590B0 MOVN W8, 0x1
	0x034590B4 STR W8, [X19]
	0x034590B8 STR X31, [X19 + 0x48]
	0x034590BC LDR X0, [X25]
	0x034590C0 ADD X19, X19, 0x8
	0x034590C4 LDR W8, [X0 + 0xE0]
	0x034590C8 CBNZ W8, 0x34590D0
	0x034590CC BL 0x1C16DFC
	0x034590D0 MOV X0, X19
	0x034590D4 MOV X1, X31
	0x034590D8 BL 0x32C4864
	0x034590DC B 0x345911C
	0x034590E0 MOVZ W8, 0x1
	0x034590E4 STR W8, [X19]
	0x034590E8 LDR X8, [X31 + 0x18]
	0x034590EC STR X8, [X19 + 0x58]
	0x034590F0 LDR X0, [X25]
	0x034590F4 LDR W8, [X0 + 0xE0]
	0x034590F8 CBNZ W8, 0x3459100
	0x034590FC BL 0x1C16DFC
	0x03459100 ADRP X8, 0xCD6000
	0x03459104 LDR X8, [X8 + 0xEC0]
	0x03459108 ADD X0, X19, 0x8
	0x0345910C LDR X3, [X8]
	0x03459110 ADD X1, X31, 0x18
	0x03459114 MOV X2, X19
	0x03459118 BL 0x2189F80
	0x0345911C LDP X20, X19, [X31 + 0x60]
	0x03459120 LDP X22, X21, [X31 + 0x50]
	0x03459124 LDP X24, X23, [X31 + 0x40]
	0x03459128 LDP X30, X25, [X31 + 0x30]
	0x0345912C ADD X31, X31, 0x70
	0x03459130 RET
	0x03459134 BL 0x1C16F20
	0x03459138 BL 0x1C16F20
	0x0345913C BL 0x1C16F20
	0x03459140 BL 0x1C16F20
	0x03459144 BL 0x1C16F20
	0x03459148 BL 0x1C16F20
	0x0345914C BL 0x1C16F20
	0x03459150 BL 0x1C16F20
	0x03459154 BL 0x1C16F20
	0x03459158 BL 0x1C16F20
	0x0345915C BL 0x1C16F20
	0x03459160 BL 0x1C16F20
	0x03459164 B 0x34591D8
	0x03459168 B 0x34591D8
	0x0345916C B 0x34591D8
	0x03459170 B 0x34591D8
	0x03459174 B 0x34591D8
	0x03459178 B 0x34591D8
	0x0345917C B 0x34591D8
	0x03459180 B 0x34591D8
	0x03459184 B 0x34591D8
	0x03459188 B 0x34591D8
	0x0345918C B 0x34591D8
	0x03459190 B 0x34591D8
	0x03459194 B 0x34591D8
	0x03459198 B 0x34591D8
	0x0345919C B 0x34591D8
	0x034591A0 B 0x34591D8
	0x034591A4 B 0x34591D8
	0x034591A8 B 0x34591D8
	0x034591AC B 0x34591D8
	0x034591B0 B 0x34591D8
	0x034591B4 B 0x34591D8
	0x034591B8 B 0x34591D8
	0x034591BC B 0x34591D8
	0x034591C0 B 0x34591D8
	0x034591C4 B 0x34591D8
	0x034591C8 B 0x34591D8
	0x034591CC B 0x34591D8
	0x034591D0 B 0x34591D8
	0x034591D4 B 0x34591D8
	0x034591D8 MOV X20, X0
	0x034591DC CMP W1, 0x1
	0x034591E0 B.NE 0x3459274
	0x034591E4 MOV X0, X20
	0x034591E8 BL 0x3EB1AD0
	0x034591EC MOV X20, X0
	0x034591F0 ADRP X0, 0xC9A000
	0x034591F4 LDR X0, [X0 + 0x7D0]
	0x034591F8 BL 0x1C16D08
	0x034591FC LDR X8, [X20]
	0x03459200 LDR X1, [X8]
	0x03459204 BL 0x1C17270
	0x03459208 TBZ X0, 0x0, 0x345924C
	0x0345920C LDR X20, [X20]
	0x03459210 BL 0x3EB1AE0
	0x03459214 MOVN W8, 0x1
	0x03459218 STR X31, [X19 + 0x48]
	0x0345921C STR W8, [X19], #0x8
	0x03459220 ADRP X0, 0xC9D000
	0x03459224 LDR X0, [X0 + 0x280]
	0x03459228 BL 0x1C16D08
	0x0345922C LDR W8, [X0 + 0xE0]
	0x03459230 CBNZ W8, 0x3459238
	0x03459234 BL 0x1C16DFC
	0x03459238 MOV X0, X19
	0x0345923C MOV X1, X20
	0x03459240 MOV X2, X31
	0x03459244 BL 0x32C4908
	0x03459248 B 0x345911C
	0x0345924C MOVZ W0, 0x8
	0x03459250 BL 0x3EB1AF0
	0x03459254 LDR X8, [X20]
	0x03459258 STR X8, [X0]
	0x0345925C ADRP X1, 0xA5B000
	0x03459260 ADD X1, X1, 0xE58
	0x03459264 MOV X2, X31
	0x03459268 BL 0x3EB1B00
	0x0345926C MOV X20, X0
	0x03459270 BL 0x3EB1AE0
	0x03459274 MOV X0, X20
	0x03459278 BL 0x1D2C690
	0x0345927C BL 0x1990590
	0x03459280 STR X30, [X31 - 0x30]!
	0x03459284 STP X22, X21, [X31 + 0x10]
	0x03459288 STP X20, X19, [X31 + 0x20]
	0x0345928C ADRP X21, 0xF84000
	0x03459290 ADRP X22, 0xC9D000
	0x03459294 LDRB W8, [X21 + 0x794]
	0x03459298 LDR X22, [X22 + 0x280]
	0x0345929C MOV X19, X1
	0x034592A0 MOV X20, X0
	0x034592A4 TBNZ X8, 0x0, 0x34592BC
	0x034592A8 ADRP X0, 0xC9D000
	0x034592AC LDR X0, [X0 + 0x280]
	0x034592B0 BL 0x1C16CF4
	0x034592B4 MOVZ W8, 0x1
	0x034592B8 STRB W8, [X21 + 0x794]
	0x034592BC LDR X0, [X22]
	0x034592C0 LDR W8, [X0 + 0xE0]
	0x034592C4 CBNZ W8, 0x34592CC
	0x034592C8 BL 0x1C16DFC
	0x034592CC ADD X0, X20, 0x8
	0x034592D0 MOV X1, X19
	0x034592D4 LDP X20, X19, [X31 + 0x20]
	0x034592D8 LDP X22, X21, [X31 + 0x10]
	0x034592DC MOV X2, X31
	0x034592E0 LDR X30, [X31], #0x30
	0x034592E4 B 0x32C477C
	0x034592E8 SUB X31, X31, 0x70
	0x034592EC STP X30, X25, [X31 + 0x30]
	0x034592F0 STP X24, X23, [X31 + 0x40]
	0x034592F4 STP X22, X21, [X31 + 0x50]
	0x034592F8 STP X20, X19, [X31 + 0x60]
	0x034592FC ADRP X20, 0xF84000
	0x03459300 LDRB W8, [X20 + 0x795]
	0x03459304 MOV X19, X0
	0x03459308 TBNZ X8, 0x0, 0x34593BC
	0x0345930C ADRP X0, 0xCD6000
	0x03459310 LDR X0, [X0 + 0xED8]
	0x03459314 BL 0x1C16CF4
	0x03459318 ADRP X0, 0xCD6000
	0x0345931C LDR X0, [X0 + 0xEE0]
	0x03459320 BL 0x1C16CF4
	0x03459324 ADRP X0, 0xC9D000
	0x03459328 LDR X0, [X0 + 0x280]
	0x0345932C BL 0x1C16CF4
	0x03459330 ADRP X0, 0xC9C000
	0x03459334 LDR X0, [X0 + 0xA10]
	0x03459338 BL 0x1C16CF4
	0x0345933C ADRP X0, 0xC9B000
	0x03459340 LDR X0, [X0 + 0x9F0]
	0x03459344 BL 0x1C16CF4
	0x03459348 ADRP X0, 0xCA2000
	0x0345934C LDR X0, [X0 + 0x818]
	0x03459350 BL 0x1C16CF4
	0x03459354 ADRP X0, 0xC9B000
	0x03459358 LDR X0, [X0 + 0x818]
	0x0345935C BL 0x1C16CF4
	0x03459360 ADRP X0, 0xCD6000
	0x03459364 LDR X0, [X0 + 0x7C8]
	0x03459368 BL 0x1C16CF4
	0x0345936C ADRP X0, 0xCD6000
	0x03459370 LDR X0, [X0 + 0x7D0]
	0x03459374 BL 0x1C16CF4
	0x03459378 ADRP X0, 0xC9B000
	0x0345937C LDR X0, [X0 + 0x830]
	0x03459380 BL 0x1C16CF4
	0x03459384 ADRP X0, 0xC9B000
	0x03459388 LDR X0, [X0 + 0x838]
	0x0345938C BL 0x1C16CF4
	0x03459390 ADRP X0, 0xC9B000
	0x03459394 LDR X0, [X0 + 0x840]
	0x03459398 BL 0x1C16CF4
	0x0345939C ADRP X0, 0xCD6000
	0x034593A0 LDR X0, [X0 + 0xEE8]
	0x034593A4 BL 0x1C16CF4
	0x034593A8 ADRP X0, 0xCD6000
	0x034593AC LDR X0, [X0 + 0xEF0]
	0x034593B0 BL 0x1C16CF4
	0x034593B4 MOVZ W8, 0x1
	0x034593B8 STRB W8, [X20 + 0x795]
	0x034593BC STP X31, X31, [X31 + 0x20]
	0x034593C0 STR X31, [X31 + 0x18]
	0x034593C4 ADRP X25, 0xC9D000
	0x034593C8 LDR W8, [X19]
	0x034593CC LDR X20, [X19 + 0x20]
	0x034593D0 LDR X25, [X25 + 0x280]
	0x034593D4 CBZ W8, 0x34593F8
	0x034593D8 CMP W8, 0x1
	0x034593DC B.NE 0x3459424
	0x034593E0 LDR X8, [X19 + 0x58]
	0x034593E4 MOVN W9, 0x0
	0x034593E8 STR X8, [X31 + 0x18]
	0x034593EC STR X31, [X19 + 0x58]
	0x034593F0 STR W9, [X19]
	0x034593F4 B 0x3459720
	0x034593F8 LDR X8, [X19 + 0x50]
	0x034593FC MOVN W9, 0x0
	0x03459400 STR X8, [X31 + 0x20]
	0x03459404 STR X31, [X19 + 0x50]
	0x03459408 STR W9, [X19]
	0x0345940C ADRP X8, 0xC9B000
	0x03459410 LDR X8, [X8 + 0x830]
	0x03459414 ADD X0, X31, 0x20
	0x03459418 LDR X1, [X8]
	0x0345941C BL 0x2677474
	0x03459420 B 0x3459654
	0x03459424 ADRP X8, 0xCD6000
	0x03459428 LDR X8, [X8 + 0xEF0]
	0x0345942C LDR X0, [X8]
	0x03459430 BL 0x1C16F10
	0x03459434 MOV X21, X0
	0x03459438 MOV X1, X31
	0x0345943C BL 0x3449FC4
	0x03459440 STR X21, [X19 + 0x48]
	0x03459444 CBZ X21, 0x34597C0
	0x03459448 LDR X8, [X19 + 0x20]
	0x0345944C STR X8, [X21 + 0x10]
	0x03459450 LDR X8, [X19 + 0x28]
	0x03459454 STR X8, [X21 + 0x18]
	0x03459458 LDR X8, [X19 + 0x30]
	0x0345945C STR X8, [X21 + 0x20]
	0x03459460 LDR X8, [X19 + 0x38]
	0x03459464 STR X8, [X21 + 0x28]
	0x03459468 CBZ X20, 0x34597C4
	0x0345946C LDRB W8, [X20 + 0x10]
	0x03459470 CBZ W8, 0x3459658
	0x03459474 LDR X8, [X19 + 0x48]
	0x03459478 CBZ X8, 0x34597C8
	0x0345947C LDR X21, [X8 + 0x18]
	0x03459480 CBZ X21, 0x34597CC
	0x03459484 ADRP X23, 0xC9B000
	0x03459488 LDR X8, [X21]
	0x0345948C LDR X23, [X23 + 0x818]
	0x03459490 LDRH W9, [X8 + 0x12E]
	0x03459494 LDR X1, [X23]
	0x03459498 CBZ X9, 0x34594BC
	0x0345949C LDR X10, [X8 + 0xB0]
	0x034594A0 ADD X10, X10, 0x8
	0x034594A4 LDUR X11, [X10 - 0x8]
	0x034594A8 CMP X11, X1
	0x034594AC B.EQ 0x34594CC
	0x034594B0 SUBS X9, X9, 0x1
	0x034594B4 ADD X10, X10, 0x10
	0x034594B8 B.NE 0x34594A4
	0x034594BC MOVZ W2, 0x7
	0x034594C0 MOV X0, X21
	0x034594C4 BL 0x1C5C788
	0x034594C8 B 0x34594DC
	0x034594CC LDR W9, [X10]
	0x034594D0 ADD W9, W9, 0x7
	0x034594D4 ADD X8, X8, W9, 0x4, SXTW
	0x034594D8 ADD X0, X8, 0x138
	0x034594DC LDP X8, X1, [X0]
	0x034594E0 MOV X0, X21
	0x034594E4 BLR X8
	0x034594E8 MOV X1, X31
	0x034594EC BL 0x32277A8
	0x034594F0 TBNZ X0, 0x0, 0x3459654
	0x034594F4 LDR X8, [X19 + 0x48]
	0x034594F8 CBZ X8, 0x34597D0
	0x034594FC ADRP X9, 0xC9B000
	0x03459500 LDR X9, [X9 + 0x9F0]
	0x03459504 LDR X21, [X8 + 0x18]
	0x03459508 LDR X0, [X9]
	0x0345950C LDR W9, [X0 + 0xE0]
	0x03459510 CBNZ W9, 0x3459518
	0x03459514 BL 0x1C16DFC
	0x03459518 MOV X0, X31
	0x0345951C BL 0x33616A4
	0x03459520 ADRP X22, 0xC9C000
	0x03459524 LDR X22, [X22 + 0xA10]
	0x03459528 MOV X8, X0
	0x0345952C STR X8, [X31 + 0x28]
	0x03459530 LDR X0, [X22]
	0x03459534 LDR W8, [X0 + 0xE0]
	0x03459538 CBNZ W8, 0x3459544
	0x0345953C BL 0x1C16DFC
	0x03459540 LDR X0, [X22]
	0x03459544 LDR X8, [X0 + 0xB8]
	0x03459548 LDR X1, [X8]
	0x0345954C ADD X0, X31, 0x28
	0x03459550 MOV X2, X31
	0x03459554 BL 0x335FC68
	0x03459558 CBZ X21, 0x34597D4
	0x0345955C LDR X8, [X21]
	0x03459560 LDR X1, [X23]
	0x03459564 MOV X22, X0
	0x03459568 LDRH W9, [X8 + 0x12E]
	0x0345956C CBZ X9, 0x3459590
	0x03459570 LDR X10, [X8 + 0xB0]
	0x03459574 ADD X10, X10, 0x8
	0x03459578 LDUR X11, [X10 - 0x8]
	0x0345957C CMP X11, X1
	0x03459580 B.EQ 0x34595A0
	0x03459584 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF86000
	011 Move W8, [X20+1935]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD8000
	018 Move X0, [X0+3704]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD8000
	021 Move X0, [X0+3712]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9F000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9E000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9D000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA4000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9D000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD8000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD8000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9C000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9C000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9C000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD7000
	054 Move X0, [X0+3720]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD7000
	057 Move X0, [X0+3728]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1935], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9E000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC9C000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD7000
	091 Move X8, [X8+3728]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass72_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xC9C000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xC9C000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC9D000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xC9C000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC9C000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCD7000
	242 Move X8, [X8+3704]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCA3000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCD7000
	257 Move X8, [X8+3720]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCD7000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCD7000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+72], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+88], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCD7000
	336 Move X8, [X8+3712]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xC9B000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+72], X31
	385 Move [X19+8], W8
	386 Move X0, 0xC9E000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA5C000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03459588 ADD X10, X10, 0x10
	0x0345958C B.NE 0x3459578
	0x03459590 MOVZ W2, 0xB
	0x03459594 MOV X0, X21
	0x03459598 BL 0x1C5C788
	0x0345959C B 0x34595B0
	0x034595A0 LDR W9, [X10]
	0x034595A4 ADD W9, W9, 0xB
	0x034595A8 ADD X8, X8, W9, 0x4, SXTW
	0x034595AC ADD X0, X8, 0x138
	0x034595B0 LDP X8, X2, [X0]
	0x034595B4 MOV X0, X21
	0x034595B8 MOV X1, X22
	0x034595BC BLR X8
	0x034595C0 TBZ X0, 0x0, 0x3459654
	0x034595C4 LDR X8, [X19 + 0x48]
	0x034595C8 CBZ X8, 0x34597D8
	0x034595CC LDR X1, [X8 + 0x18]
	0x034595D0 LDR X3, [X19 + 0x40]
	0x034595D4 LDR X4, [X8 + 0x28]
	0x034595D8 MOV X0, X20
	0x034595DC MOV X2, X31
	0x034595E0 MOV X5, X31
	0x034595E4 BL 0x34440A8
	0x034595E8 CBZ X0, 0x34597DC
	0x034595EC ADRP X8, 0xC9B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF85000
	007 Move X22, 0xC9E000
	008 Move W8, [X21+1936]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9E000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1936], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

