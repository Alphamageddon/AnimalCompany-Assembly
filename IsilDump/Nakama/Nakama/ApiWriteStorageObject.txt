Type: Nakama.ApiWriteStorageObject

Method: System.String get_Collection()

Disassembly:
	0x0340E298 MOV X0, X27
	0x0340E29C BL 0x2632230

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Collection(System.String value)

Disassembly:
	0x0340E2A0 LDP X20, X19, [X31 + 0xC0]
	0x0340E2A4 LDP X22, X21, [X31 + 0xB0]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Key()

Disassembly:
	0x0340E2A8 LDP X24, X23, [X31 + 0xA0]
	0x0340E2AC LDP X26, X25, [X31 + 0x90]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Key(System.String value)

Disassembly:
	0x0340E2B0 LDP X28, X27, [X31 + 0x80]
	0x0340E2B4 LDP X29, X30, [X31 + 0x70]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Int32 get_PermissionRead()

Disassembly:
	0x0340E2B8 ADD X31, X31, 0xD0
	0x0340E2BC RET

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_PermissionRead(System.Int32 value)

Disassembly:
	0x0340E2C0 SUB X31, X31, 0xD0
	0x0340E2C4 STP X29, X30, [X31 + 0x70]

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.Int32 get_PermissionWrite()

Disassembly:
	0x0340E2C8 STP X28, X27, [X31 + 0x80]
	0x0340E2CC STP X26, X25, [X31 + 0x90]

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_PermissionWrite(System.Int32 value)

Disassembly:
	0x0340E2D0 STP X24, X23, [X31 + 0xA0]
	0x0340E2D4 STP X22, X21, [X31 + 0xB0]

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.String get_Value()

Disassembly:
	0x0340E2D8 STP X20, X19, [X31 + 0xC0]
	0x0340E2DC ADRP X28, 0xFCF000

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Value(System.String value)

Disassembly:
	0x0340E2E0 ADRP X27, 0xD20000
	0x0340E2E4 LDRB W8, [X28 + 0x574]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String get_Version()

Disassembly:
	0x0340E2E8 LDR X27, [X27 + 0x320]
	0x0340E2EC MOV X19, X7

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_Version(System.String value)

Disassembly:
	0x0340E2F0 MOV X20, X6
	0x0340E2F4 MOV X21, X5

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0340E2F8 MOV X22, X4
	0x0340E2FC MOV X23, X3
	0x0340E300 MOV X25, X2
	0x0340E304 MOV X26, X1
	0x0340E308 MOV X24, X0
	0x0340E30C TBNZ X8, 0x0, 0x340E348
	0x0340E310 ADRP X0, 0xD20000
	0x0340E314 LDR X0, [X0 + 0x328]
	0x0340E318 BL 0x1C16CF4
	0x0340E31C ADRP X0, 0xD20000
	0x0340E320 LDR X0, [X0 + 0x350]
	0x0340E324 BL 0x1C16CF4
	0x0340E328 ADRP X0, 0xD20000
	0x0340E32C LDR X0, [X0 + 0x338]
	0x0340E330 BL 0x1C16CF4
	0x0340E334 ADRP X0, 0xD20000
	0x0340E338 LDR X0, [X0 + 0x320]
	0x0340E33C BL 0x1C16CF4
	0x0340E340 MOVZ W8, 0x1
	0x0340E344 STRB W8, [X28 + 0x574]
	0x0340E348 LDR X0, [X27]
	0x0340E34C MOVI V0.2D, 0x0
	0x0340E350 STR X31, [X31 + 0x60]
	0x0340E354 STP V0, V0, [X31 + 0x40]
	0x0340E358 STP V0, V0, [X31 + 0x20]
	0x0340E35C STP V0, V0, [X31]
	0x0340E360 ADRP X27, 0xD20000
	0x0340E364 ADRP X29, 0xD20000
	0x0340E368 ADRP X28, 0xD20000
	0x0340E36C LDR W8, [X0 + 0xE0]
	0x0340E370 LDR X27, [X27 + 0x328]
	0x0340E374 LDR X29, [X29 + 0x350]
	0x0340E378 LDR X28, [X28 + 0x338]
	0x0340E37C CBNZ W8, 0x340E384
	0x0340E380 BL 0x1C16DFC
	0x0340E384 LDR X0, [X27]
	0x0340E388 ADD X8, X31, 0x0
	0x0340E38C ORR X27, X8, 0xF
	0x0340E390 MOV X8, X27
	0x0340E394 BL 0x263221C
	0x0340E398 LDR X2, [X29]
	0x0340E39C MOVN W8, 0x0
	0x0340E3A0 ADD X1, X31, 0x0
	0x0340E3A4 MOV X0, X27
	0x0340E3A8 STP X26, X25, [X31 + 0x40]
	0x0340E3AC STR X23, [X31 + 0x20]
	0x0340E3B0 STRH W22, [X31 + 0x28]
	0x0340E3B4 STP X21, X24, [X31 + 0x30]
	0x0340E3B8 STP X20, X19, [X31 + 0x50]
	0x0340E3BC STR W8, [X31]
	0x0340E3C0 BL 0x1FC8814
	0x0340E3C4 LDR X1, [X28]
	0x0340E3C8 MOV X0, X27
	0x0340E3CC BL 0x2632230
	0x0340E3D0 LDP X20, X19, [X31 + 0xC0]
	0x0340E3D4 LDP X22, X21, [X31 + 0xB0]
	0x0340E3D8 LDP X24, X23, [X31 + 0xA0]
	0x0340E3DC LDP X26, X25, [X31 + 0x90]
	0x0340E3E0 LDP X28, X27, [X31 + 0x80]
	0x0340E3E4 LDP X29, X30, [X31 + 0x70]
	0x0340E3E8 ADD X31, X31, 0xD0
	0x0340E3EC RET
	0x0340E3F0 SUB X31, X31, 0xD0
	0x0340E3F4 STP X29, X30, [X31 + 0x70]
	0x0340E3F8 STP X28, X27, [X31 + 0x80]
	0x0340E3FC STP X26, X25, [X31 + 0x90]
	0x0340E400 STP X24, X23, [X31 + 0xA0]
	0x0340E404 STP X22, X21, [X31 + 0xB0]
	0x0340E408 STP X20, X19, [X31 + 0xC0]
	0x0340E40C ADRP X27, 0xFCF000
	0x0340E410 ADRP X26, 0xD20000
	0x0340E414 LDRB W8, [X27 + 0x575]
	0x0340E418 LDR X26, [X26 + 0x320]
	0x0340E41C MOV X19, X6
	0x0340E420 MOV X20, X5
	0x0340E424 MOV X22, X4
	0x0340E428 MOV X23, X3
	0x0340E42C MOV X21, X2
	0x0340E430 MOV X24, X1
	0x0340E434 MOV X25, X0
	0x0340E438 TBNZ X8, 0x0, 0x340E474
	0x0340E43C ADRP X0, 0xD20000
	0x0340E440 LDR X0, [X0 + 0x328]
	0x0340E444 BL 0x1C16CF4
	0x0340E448 ADRP X0, 0xD20000
	0x0340E44C LDR X0, [X0 + 0x358]
	0x0340E450 BL 0x1C16CF4
	0x0340E454 ADRP X0, 0xD20000
	0x0340E458 LDR X0, [X0 + 0x338]
	0x0340E45C BL 0x1C16CF4
	0x0340E460 ADRP X0, 0xD20000
	0x0340E464 LDR X0, [X0 + 0x320]
	0x0340E468 BL 0x1C16CF4
	0x0340E46C MOVZ W8, 0x1
	0x0340E470 STRB W8, [X27 + 0x575]
	0x0340E474 LDR X0, [X26]
	0x0340E478 MOVI V0.2D, 0x0
	0x0340E47C STP V0, V0, [X31 + 0x50]
	0x0340E480 STP V0, V0, [X31 + 0x30]
	0x0340E484 STP V0, V0, [X31 + 0x10]
	0x0340E488 STR V0, [X31]
	0x0340E48C ADRP X26, 0xD20000
	0x0340E490 ADRP X29, 0xD20000
	0x0340E494 LDR W8, [X0 + 0xE0]
	0x0340E498 LDP X27, X28, [X31 + 0xD0]
	0x0340E49C LDR X26, [X26 + 0x328]
	0x0340E4A0 LDR X29, [X29 + 0x358]
	0x0340E4A4 CBNZ W8, 0x340E4AC
	0x0340E4A8 BL 0x1C16DFC
	0x0340E4AC LDR X0, [X26]
	0x0340E4B0 ADD X8, X31, 0x0
	0x0340E4B4 ORR X26, X8, 0xF
	0x0340E4B8 MOV X8, X26
	0x0340E4BC BL 0x263221C
	0x0340E4C0 LDR X2, [X29]
	0x0340E4C4 MOVN W8, 0x0
	0x0340E4C8 ADD X1, X31, 0x0
	0x0340E4CC MOV X0, X26
	0x0340E4D0 STP X25, X24, [X31 + 0x40]
	0x0340E4D4 STR X23, [X31 + 0x20]
	0x0340E4D8 STRH W22, [X31 + 0x28]
	0x0340E4DC STR X20, [X31 + 0x30]
	0x0340E4E0 STRH W19, [X31 + 0x38]
	0x0340E4E4 STP X21, X27, [X31 + 0x50]
	0x0340E4E8 STR X28, [X31 + 0x60]
	0x0340E4EC STR W8, [X31]
	0x0340E4F0 BL 0x1FC8914
	0x0340E4F4 ADRP X8, 0xD20000
	0x0340E4F8 LDR X8, [X8 + 0x338]
	0x0340E4FC MOV X0, X26
	0x0340E500 LDR X1, [X8]
	0x0340E504 BL 0x2632230
	0x0340E508 LDP X20, X19, [X31 + 0xC0]
	0x0340E50C LDP X22, X21, [X31 + 0xB0]
	0x0340E510 LDP X24, X23, [X31 + 0xA0]
	0x0340E514 LDP X26, X25, [X31 + 0x90]
	0x0340E518 LDP X28, X27, [X31 + 0x80]
	0x0340E51C LDP X29, X30, [X31 + 0x70]
	0x0340E520 ADD X31, X31, 0xD0
	0x0340E524 RET
	0x0340E528 SUB X31, X31, 0xD0
	0x0340E52C STP X29, X30, [X31 + 0x70]
	0x0340E530 STP X28, X27, [X31 + 0x80]
	0x0340E534 STP X26, X25, [X31 + 0x90]
	0x0340E538 STP X24, X23, [X31 + 0xA0]
	0x0340E53C STP X22, X21, [X31 + 0xB0]
	0x0340E540 STP X20, X19, [X31 + 0xC0]
	0x0340E544 ADRP X28, 0xFCF000
	0x0340E548 ADRP X27, 0xD20000
	0x0340E54C LDRB W8, [X28 + 0x576]
	0x0340E550 LDR X27, [X27 + 0x320]
	0x0340E554 MOV X19, X7
	0x0340E558 MOV X20, X6
	0x0340E55C MOV X21, X5
	0x0340E560 MOV X22, X4
	0x0340E564 MOV X23, X3
	0x0340E568 MOV X25, X2
	0x0340E56C MOV X26, X1
	0x0340E570 MOV X24, X0
	0x0340E574 TBNZ X8, 0x0, 0x340E5B0
	0x0340E578 ADRP X0, 0xD20000
	0x0340E57C LDR X0, [X0 + 0x328]
	0x0340E580 BL 0x1C16CF4
	0x0340E584 ADRP X0, 0xD20000
	0x0340E588 LDR X0, [X0 + 0x360]
	0x0340E58C BL 0x1C16CF4
	0x0340E590 ADRP X0, 0xD20000
	0x0340E594 LDR X0, [X0 + 0x338]
	0x0340E598 BL 0x1C16CF4
	0x0340E59C ADRP X0, 0xD20000
	0x0340E5A0 LDR X0, [X0 + 0x320]
	0x0340E5A4 BL 0x1C16CF4
	0x0340E5A8 MOVZ W8, 0x1
	0x0340E5AC STRB W8, [X28 + 0x576]
	0x0340E5B0 LDR X0, [X27]
	0x0340E5B4 MOVI V0.2D, 0x0
	0x0340E5B8 STR X31, [X31 + 0x60]
	0x0340E5BC STP V0, V0, [X31 + 0x40]
	0x0340E5C0 STP V0, V0, [X31 + 0x20]
	0x0340E5C4 STP V0, V0, [X31]
	0x0340E5C8 ADRP X27, 0xD20000
	0x0340E5CC ADRP X29, 0xD20000
	0x0340E5D0 ADRP X28, 0xD20000
	0x0340E5D4 LDR W8, [X0 + 0xE0]
	0x0340E5D8 LDR X27, [X27 + 0x328]
	0x0340E5DC LDR X29, [X29 + 0x360]
	0x0340E5E0 LDR X28, [X28 + 0x338]
	0x0340E5E4 CBNZ W8, 0x340E5EC
	0x0340E5E8 BL 0x1C16DFC
	0x0340E5EC LDR X0, [X27]
	0x0340E5F0 ADD X8, X31, 0x0
	0x0340E5F4 ORR X27, X8, 0xF
	0x0340E5F8 MOV X8, X27
	0x0340E5FC BL 0x263221C
	0x0340E600 LDR X2, [X29]
	0x0340E604 MOVN W8, 0x0
	0x0340E608 ADD X1, X31, 0x0
	0x0340E60C MOV X0, X27
	0x0340E610 STP X26, X25, [X31 + 0x40]
	0x0340E614 STR X23, [X31 + 0x20]
	0x0340E618 STRH W22, [X31 + 0x28]
	0x0340E61C STP X21, X24, [X31 + 0x30]
	0x0340E620 STP X20, X19, [X31 + 0x50]
	0x0340E624 STR W8, [X31]
	0x0340E628 BL 0x1FC8A14
	0x0340E62C LDR X1, [X28]
	0x0340E630 MOV X0, X27

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xFD0000
	011 Move X25, 0xCE6000
	012 Move X21, 0xD20000
	013 Move X22, 0xCE6000
	014 Move X20, 0xD20000
	015 Move X23, 0xCE6000
	016 Move W8, [X24+1383]
	017 Move X25, [X25+2440]
	018 Move X21, [X21+3704]
	019 Move X22, [X22+2104]
	020 Move X20, [X20+3712]
	021 Move X23, [X23+2512]
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X0, 0xCE6000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0xCE6000
	031 Move X0, [X0+2512]
	032 Call 0x1C17CF4
	033 Move X0, 0xD13000
	034 Move X0, [X0+3000]
	035 Call 0x1C17CF4
	036 Move X0, 0xD20000
	037 Move X0, [X0+3712]
	038 Call 0x1C17CF4
	039 Move X0, 0xD21000
	040 Move X0, [X0+112]
	041 Call 0x1C17CF4
	042 Move X0, 0xCE6000
	043 Move X0, [X0+2104]
	044 Call 0x1C17CF4
	045 Move X0, 0xD21000
	046 Move X0, [X0+120]
	047 Call 0x1C17CF4
	048 Move X0, 0xD20000
	049 Move X0, [X0+3720]
	050 Call 0x1C17CF4
	051 Move X0, 0xCE6000
	052 Move X0, [X0+2440]
	053 Call 0x1C17CF4
	054 Move X0, 0xD20000
	055 Move X0, [X0+3704]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X24+1383], W8
	059 Move X0, [X25]
	060 Move X2, [X19+16]
	061 Move X1, [X21]
	062 Move X3, [X22]
	063 Move X4, X31
	064 Call String.Concat, X0, X1, X2, X3
	065 Move X2, [X19+24]
	066 Move X1, [X20]
	067 Move X3, [X22]
	068 Move X4, X31
	069 Call String.Concat, X0, X1, X2, X3
	070 Move X8, [X23]
	071 Move X21, X0
	072 Move W1, 4
	073 Move X0, X8
	074 Call 0x1C17D6C
	075 Compare X0, 0
	076 JumpIfEqual {232}
	077 Move X20, X0
	078 Compare X21, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X0, X21
	082 Move X1, [X8+64]
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {229}
	086 Move W8, [X20+24]
	087 Compare W8, 0
	088 JumpIfEqual {228}
	089 Move X24, 0xD21000
	090 Move X24, [X24+120]
	091 Move [X20+32], X21
	092 Move X0, [X24]
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X8, [X20]
	096 Move X1, [X8+64]
	097 Call 0x1C17E00
	098 Compare X0, 0
	099 JumpIfEqual {229}
	100 Move W8, [X20+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X24]
	103 Move X24, 0xCE6000
	104 Move X24, [X24+1880]
	105 Add X1, X31, 12
	106 Move [X20+40], X8
	107 Move W8, [X19+32]
	108 Move X0, [X24]
	109 Move [X31+12], W8
	110 Call 0x1C17E04
	111 Move X21, X0
	112 Compare X0, 0
	113 JumpIfEqual {120}
	114 Move X8, [X20]
	115 Move X0, X21
	116 Move X1, [X8+64]
	117 Call 0x1C17E00
	118 Compare X0, 0
	119 JumpIfEqual {229}
	120 Move W8, [X20+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X20+48], X21
	123 Move X0, [X22]
	124 Compare X0, 0
	125 JumpIfEqual {132}
	126 Move X8, [X20]
	127 Move X1, [X8+64]
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfEqual {229}
	131 Move W8, [X20+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X22]
	134 Move X0, X20
	135 Move X1, X31
	136 Move [X20+56], X8
	137 Call String.Concat, X0
	138 Move X8, [X23]
	139 Move X21, X0
	140 Move W1, 4
	141 Move X0, X8
	142 Call 0x1C17D6C
	143 Compare X0, 0
	144 JumpIfEqual {232}
	145 Move X20, X0
	146 Compare X21, 0
	147 JumpIfEqual {154}
	148 Move X8, [X20]
	149 Move X0, X21
	150 Move X1, [X8+64]
	151 Call 0x1C17E00
	152 Compare X0, 0
	153 JumpIfEqual {229}
	154 Move W8, [X20+24]
	155 Compare W8, 0
	156 JumpIfEqual {228}
	157 Move X23, 0xD21000
	158 Move X23, [X23+112]
	159 Move [X20+32], X21
	160 Move X0, [X23]
	161 Compare X0, 0
	162 JumpIfEqual {169}
	163 Move X8, [X20]
	164 Move X1, [X8+64]
	165 Call 0x1C17E00
	166 Compare X0, 0
	167 JumpIfEqual {229}
	168 Move W8, [X20+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X8, [X23]
	171 Add X1, X31, 8
	172 Move [X20+40], X8
	173 Move W8, [X19+36]
	174 Move X0, [X24]
	175 Move [X31+8], W8
	176 Call 0x1C17E04
	177 Move X21, X0
	178 Compare X0, 0
	179 JumpIfEqual {186}
	180 Move X8, [X20]
	181 Move X0, X21
	182 Move X1, [X8+64]
	183 Call 0x1C17E00
	184 Compare X0, 0
	185 JumpIfEqual {229}
	186 Move W8, [X20+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move [X20+48], X21
	189 Move X0, [X22]
	190 Compare X0, 0
	191 JumpIfEqual {198}
	192 Move X8, [X20]
	193 Move X1, [X8+64]
	194 Call 0x1C17E00
	195 Compare X0, 0
	196 JumpIfEqual {229}
	197 Move W8, [X20+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X8, [X22]
	200 Move X21, 0xD13000
	201 Move X23, 0xD20000
	202 Move X21, [X21+3000]
	203 Move X23, [X23+3720]
	204 Move X0, X20
	205 Move X1, X31
	206 Move [X20+56], X8
	207 Call String.Concat, X0
	208 Move X2, [X19+40]
	209 Move X1, [X21]
	210 Move X3, [X22]
	211 Move X4, X31
	212 Call String.Concat, X0, X1, X2, X3
	213 Move X2, [X19+48]
	214 Move X1, [X23]
	215 Move X3, [X22]
	216 Move X4, X31
	217 Call String.Concat, X0, X1, X2, X3
	218 Move X20, [X31+64]
	219 Move X19, [X31+72]
	220 Move X22, [X31+48]
	221 Move X21, [X31+56]
	222 Move X24, [X31+32]
	223 Move X23, [X31+40]
	224 Move X30, [X31+16]
	225 Move X25, [X31+24]
	226 Add X31, X31, 80
	227 Return X0
	228 Call 0x1C17F28
	229 Call 0x1C17F44
	230 Move X1, X31
	231 Call 0x1C17DEC
	232 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0340E634 BL 0x2632230
	0x0340E638 LDP X20, X19, [X31 + 0xC0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

