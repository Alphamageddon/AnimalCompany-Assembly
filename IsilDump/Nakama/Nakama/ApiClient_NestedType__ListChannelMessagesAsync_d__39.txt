Type: Nakama.ApiClient/<ListChannelMessagesAsync>d__39

Method: System.Void MoveNext()

Disassembly:
	0x0342B880 BL 0x1C16F44
	0x0342B884 MOV X1, X31
	0x0342B888 BL 0x1C16DEC
	0x0342B88C BL 0x1C16F44
	0x0342B890 MOV X1, X31
	0x0342B894 BL 0x1C16DEC
	0x0342B898 BL 0x1C16F44
	0x0342B89C MOV X1, X31
	0x0342B8A0 BL 0x1C16DEC
	0x0342B8A4 BL 0x1C16F44
	0x0342B8A8 MOV X1, X31
	0x0342B8AC BL 0x1C16DEC
	0x0342B8B0 BL 0x1C16F44
	0x0342B8B4 MOV X1, X31
	0x0342B8B8 BL 0x1C16DEC
	0x0342B8BC BL 0x1C16F44
	0x0342B8C0 MOV X1, X31
	0x0342B8C4 BL 0x1C16DEC
	0x0342B8C8 B 0x342B954
	0x0342B8CC B 0x342B954
	0x0342B8D0 B 0x342B954
	0x0342B8D4 B 0x342B954
	0x0342B8D8 B 0x342B954
	0x0342B8DC B 0x342B954
	0x0342B8E0 B 0x342B954
	0x0342B8E4 B 0x342B954
	0x0342B8E8 B 0x342B954
	0x0342B8EC B 0x342B954
	0x0342B8F0 B 0x342B954
	0x0342B8F4 B 0x342B954
	0x0342B8F8 B 0x342B954
	0x0342B8FC B 0x342B954
	0x0342B900 B 0x342B954
	0x0342B904 B 0x342B954
	0x0342B908 B 0x342B954
	0x0342B90C B 0x342B954
	0x0342B910 B 0x342B954
	0x0342B914 B 0x342B954
	0x0342B918 B 0x342B954
	0x0342B91C B 0x342B954
	0x0342B920 B 0x342B954
	0x0342B924 B 0x342B954
	0x0342B928 B 0x342B954
	0x0342B92C B 0x342B954
	0x0342B930 B 0x342B954
	0x0342B934 B 0x342B954
	0x0342B938 B 0x342B954
	0x0342B93C B 0x342B954
	0x0342B940 B 0x342B954
	0x0342B944 B 0x342B954
	0x0342B948 B 0x342B954
	0x0342B94C B 0x342B954
	0x0342B950 B 0x342B954
	0x0342B954 MOV X20, X0
	0x0342B958 CMP W1, 0x1
	0x0342B95C B.NE 0x342B9F8
	0x0342B960 MOV X0, X20
	0x0342B964 BL 0x3EB1AD0
	0x0342B968 MOV X20, X0
	0x0342B96C ADRP X0, 0xCC8000
	0x0342B970 LDR X0, [X0 + 0x7D0]
	0x0342B974 BL 0x1C16D08
	0x0342B978 LDR X8, [X20]
	0x0342B97C LDR X1, [X8]
	0x0342B980 BL 0x1C17270
	0x0342B984 TBZ X0, 0x0, 0x342B9D0
	0x0342B988 LDR X20, [X20]
	0x0342B98C BL 0x3EB1AE0
	0x0342B990 MOVN W8, 0x1
	0x0342B994 STR W8, [X19], #0x8
	0x0342B998 ADRP X0, 0xD03000
	0x0342B99C LDR X0, [X0 + 0x448]
	0x0342B9A0 BL 0x1C16D08
	0x0342B9A4 LDR W8, [X0 + 0xE0]
	0x0342B9A8 CBNZ W8, 0x342B9B0
	0x0342B9AC BL 0x1C16DFC
	0x0342B9B0 ADRP X0, 0xD03000
	0x0342B9B4 LDR X0, [X0 + 0xF68]
	0x0342B9B8 BL 0x1C16D08
	0x0342B9BC MOV X2, X0
	0x0342B9C0 MOV X0, X19
	0x0342B9C4 MOV X1, X20
	0x0342B9C8 BL 0x26324C8
	0x0342B9CC B 0x342B800
	0x0342B9D0 MOVZ W0, 0x8
	0x0342B9D4 BL 0x3EB1AF0
	0x0342B9D8 LDR X8, [X20]
	0x0342B9DC STR X8, [X0]
	0x0342B9E0 ADRP X1, 0xA89000
	0x0342B9E4 ADD X1, X1, 0xE58
	0x0342B9E8 MOV X2, X31
	0x0342B9EC BL 0x3EB1B00
	0x0342B9F0 MOV X20, X0
	0x0342B9F4 BL 0x3EB1AE0
	0x0342B9F8 MOV X0, X20
	0x0342B9FC BL 0x1D2C690
	0x0342BA00 BL 0x1990590
	0x0342BA04 STR X30, [X31 - 0x30]!
	0x0342BA08 STP X22, X21, [X31 + 0x10]
	0x0342BA0C STP X20, X19, [X31 + 0x20]
	0x0342BA10 ADRP X22, 0xFB2000
	0x0342BA14 ADRP X21, 0xD03000
	0x0342BA18 LDRB W8, [X22 + 0x64E]
	0x0342BA1C LDR X21, [X21 + 0x448]
	0x0342BA20 MOV X19, X1
	0x0342BA24 MOV X20, X0
	0x0342BA28 TBNZ X8, 0x0, 0x342BA4C
	0x0342BA2C ADRP X0, 0xD03000
	0x0342BA30 LDR X0, [X0 + 0xF70]
	0x0342BA34 BL 0x1C16CF4
	0x0342BA38 ADRP X0, 0xD03000
	0x0342BA3C LDR X0, [X0 + 0x448]
	0x0342BA40 BL 0x1C16CF4
	0x0342BA44 MOVZ W8, 0x1
	0x0342BA48 STRB W8, [X22 + 0x64E]
	0x0342BA4C LDR X0, [X21]
	0x0342BA50 ADRP X21, 0xD03000
	0x0342BA54 LDR W8, [X0 + 0xE0]
	0x0342BA58 LDR X21, [X21 + 0xF70]
	0x0342BA5C CBNZ W8, 0x342BA64
	0x0342BA60 BL 0x1C16DFC
	0x0342BA64 LDR X2, [X21]
	0x0342BA68 ADD X0, X20, 0x8
	0x0342BA6C MOV X1, X19
	0x0342BA70 LDP X20, X19, [X31 + 0x20]
	0x0342BA74 LDP X22, X21, [X31 + 0x10]
	0x0342BA78 LDR X30, [X31], #0x30
	0x0342BA7C B 0x2632228
	0x0342BA80 SUB X31, X31, 0x70
	0x0342BA84 STP X30, X27, [X31 + 0x20]
	0x0342BA88 STP X26, X25, [X31 + 0x30]
	0x0342BA8C STP X24, X23, [X31 + 0x40]
	0x0342BA90 STP X22, X21, [X31 + 0x50]
	0x0342BA94 STP X20, X19, [X31 + 0x60]
	0x0342BA98 ADRP X20, 0xFB2000
	0x0342BA9C LDRB W8, [X20 + 0x64F]
	0x0342BAA0 MOV X19, X0
	0x0342BAA4 TBNZ X8, 0x0, 0x342BBF4
	0x0342BAA8 ADRP X0, 0xD03000
	0x0342BAAC LDR X0, [X0 + 0xF78]
	0x0342BAB0 BL 0x1C16CF4
	0x0342BAB4 ADRP X0, 0xD03000
	0x0342BAB8 LDR X0, [X0 + 0xF80]
	0x0342BABC BL 0x1C16CF4
	0x0342BAC0 ADRP X0, 0xD03000
	0x0342BAC4 LDR X0, [X0 + 0x510]
	0x0342BAC8 BL 0x1C16CF4
	0x0342BACC ADRP X0, 0xCD1000
	0x0342BAD0 LDR X0, [X0 + 0x8D8]
	0x0342BAD4 BL 0x1C16CF4
	0x0342BAD8 ADRP X0, 0xCC9000
	0x0342BADC LDR X0, [X0 + 0x810]
	0x0342BAE0 BL 0x1C16CF4
	0x0342BAE4 ADRP X0, 0xCC9000
	0x0342BAE8 LDR X0, [X0 + 0x6C0]
	0x0342BAEC BL 0x1C16CF4
	0x0342BAF0 ADRP X0, 0xCC9000
	0x0342BAF4 LDR X0, [X0 + 0x6D0]
	0x0342BAF8 BL 0x1C16CF4
	0x0342BAFC ADRP X0, 0xD03000
	0x0342BB00 LDR X0, [X0 + 0x7B8]
	0x0342BB04 BL 0x1C16CF4
	0x0342BB08 ADRP X0, 0xD03000
	0x0342BB0C LDR X0, [X0 + 0xF88]
	0x0342BB10 BL 0x1C16CF4
	0x0342BB14 ADRP X0, 0xCCB000
	0x0342BB18 LDR X0, [X0 + 0xEF8]
	0x0342BB1C BL 0x1C16CF4
	0x0342BB20 ADRP X0, 0xCC9000
	0x0342BB24 LDR X0, [X0 + 0x478]
	0x0342BB28 BL 0x1C16CF4
	0x0342BB2C ADRP X0, 0xCC8000
	0x0342BB30 LDR X0, [X0 + 0x9D0]
	0x0342BB34 BL 0x1C16CF4
	0x0342BB38 ADRP X0, 0xCCB000
	0x0342BB3C LDR X0, [X0 + 0x1E0]
	0x0342BB40 BL 0x1C16CF4
	0x0342BB44 ADRP X0, 0xCCB000
	0x0342BB48 LDR X0, [X0 + 0x1F0]
	0x0342BB4C BL 0x1C16CF4
	0x0342BB50 ADRP X0, 0xCCB000
	0x0342BB54 LDR X0, [X0 + 0x1F8]
	0x0342BB58 BL 0x1C16CF4
	0x0342BB5C ADRP X0, 0xCD1000
	0x0342BB60 LDR X0, [X0 + 0x3A0]
	0x0342BB64 BL 0x1C16CF4
	0x0342BB68 ADRP X0, 0xCCA000
	0x0342BB6C LDR X0, [X0 + 0xA28]
	0x0342BB70 BL 0x1C16CF4
	0x0342BB74 ADRP X0, 0xCF1000
	0x0342BB78 LDR X0, [X0 + 0x4D0]
	0x0342BB7C BL 0x1C16CF4
	0x0342BB80 ADRP X0, 0xD03000
	0x0342BB84 LDR X0, [X0 + 0x800]
	0x0342BB88 BL 0x1C16CF4
	0x0342BB8C ADRP X0, 0xD03000
	0x0342BB90 LDR X0, [X0 + 0xF60]
	0x0342BB94 BL 0x1C16CF4
	0x0342BB98 ADRP X0, 0xCD1000
	0x0342BB9C LDR X0, [X0 + 0x720]
	0x0342BBA0 BL 0x1C16CF4
	0x0342BBA4 ADRP X0, 0xD03000
	0x0342BBA8 LDR X0, [X0 + 0x7D0]
	0x0342BBAC BL 0x1C16CF4
	0x0342BBB0 ADRP X0, 0xD03000
	0x0342BBB4 LDR X0, [X0 + 0xF18]
	0x0342BBB8 BL 0x1C16CF4
	0x0342BBBC ADRP X0, 0xD03000
	0x0342BBC0 LDR X0, [X0 + 0x7D8]
	0x0342BBC4 BL 0x1C16CF4
	0x0342BBC8 ADRP X0, 0xCC8000
	0x0342BBCC LDR X0, [X0 + 0x988]
	0x0342BBD0 BL 0x1C16CF4
	0x0342BBD4 ADRP X0, 0xD03000
	0x0342BBD8 LDR X0, [X0 + 0xF20]
	0x0342BBDC BL 0x1C16CF4
	0x0342BBE0 ADRP X0, 0xD03000
	0x0342BBE4 LDR X0, [X0 + 0xF90]
	0x0342BBE8 BL 0x1C16CF4
	0x0342BBEC MOVZ W8, 0x1
	0x0342BBF0 STRB W8, [X20 + 0x64F]
	0x0342BBF4 STR X31, [X31 + 0x18]
	0x0342BBF8 ADRP X27, 0xD03000
	0x0342BBFC LDR W8, [X19]
	0x0342BC00 LDR X27, [X27 + 0x510]
	0x0342BC04 CBZ W8, 0x342C058
	0x0342BC08 LDR X21, [X19 + 0x20]
	0x0342BC0C CBZ X21, 0x342C18C
	0x0342BC10 ADRP X23, 0xCCA000
	0x0342BC14 LDR X23, [X23 + 0xA28]
	0x0342BC18 ADRP X8, 0xD03000
	0x0342BC1C LDR X0, [X23]
	0x0342BC20 LDR X8, [X8 + 0xF90]
	0x0342BC24 LDR X24, [X19 + 0x40]
	0x0342BC28 LDR W9, [X0 + 0xE0]
	0x0342BC2C LDR X20, [X8]
	0x0342BC30 CBNZ W9, 0x342BC38
	0x0342BC34 BL 0x1C16DFC
	0x0342BC38 MOV X0, X21
	0x0342BC3C MOV X1, X31
	0x0342BC40 BL 0x3624D20
	0x0342BC44 CBZ X20, 0x342C1D4
	0x0342BC48 ADRP X8, 0xD03000
	0x0342BC4C LDR X8, [X8 + 0x800]
	0x0342BC50 MOV X2, X0
	0x0342BC54 LDR X1, [X8]
	0x0342BC58 MOV X0, X20
	0x0342BC5C MOV X3, X31
	0x0342BC60 BL 0x32293BC
	0x0342BC64 ADRP X8, 0xCC8000
	0x0342BC68 LDR X8, [X8 + 0x988]
	0x0342BC6C LDRB W9, [X19 + 0x28]
	0x0342BC70 MOV X20, X0
	0x0342BC74 LDR X21, [X8]
	0x0342BC78 CBZ W9, 0x342BD7C
	0x0342BC7C ADRP X8, 0xCC8000
	0x0342BC80 LDR X8, [X8 + 0x9D0]
	0x0342BC84 LDR X0, [X8]
	0x0342BC88 MOVZ W1, 0x4
	0x0342BC8C BL 0x1C16D6C
	0x0342BC90 MOV X22, X0
	0x0342BC94 CBZ X0, 0x342C1FC
	0x0342BC98 CBZ X21, 0x342BCB0
	0x0342BC9C LDR X8, [X22]
	0x0342BCA0 LDR X1, [X8 + 0x40]
	0x0342BCA4 MOV X0, X21
	0x0342BCA8 BL 0x1C16E00
	0x0342BCAC CBZ X0, 0x342C224
	0x0342BCB0 LDR W8, [X22 + 0x18]
	0x0342BCB4 CBZ W8, 0x342C200
	0x0342BCB8 STR X21, [X22 + 0x20]
	0x0342BCBC ADRP X21, 0xD03000
	0x0342BCC0 LDR X21, [X21 + 0xF18]
	0x0342BCC4 LDR X0, [X21]
	0x0342BCC8 CBZ X0, 0x342BCE0
	0x0342BCCC LDR X8, [X22]
	0x0342BCD0 LDR X1, [X8 + 0x40]
	0x0342BCD4 BL 0x1C16E00
	0x0342BCD8 CBZ X0, 0x342C230
	0x0342BCDC LDR W8, [X22 + 0x18]
	0x0342BCE0 CMP W8, 0x1
	0x0342BCE4 B.LS 0x342C204
	0x0342BCE8 LDR X8, [X21]
	0x0342BCEC ADRP X9, 0xCC9000
	0x0342BCF0 STR X8, [X22 + 0x28]
	0x0342BCF4 LDR X8, [X19 + 0x28]
	0x0342BCF8 LDR X9, [X9 + 0x478]
	0x0342BCFC STR X8, [X31 + 0x10]
	0x0342BD00 LDR X0, [X9]
	0x0342BD04 ADD X1, X31, 0x10
	0x0342BD08 BL 0x1C16E04
	0x0342BD0C MOV X21, X0
	0x0342BD10 CBZ X0, 0x342BD28
	0x0342BD14 LDR X8, [X22]
	0x0342BD18 LDR X1, [X8 + 0x40]
	0x0342BD1C MOV X0, X21
	0x0342BD20 BL 0x1C16E00
	0x0342BD24 CBZ X0, 0x342C23C
	0x0342BD28 LDR W8, [X22 + 0x18]
	0x0342BD2C CMP W8, 0x2
	0x0342BD30 B.LS 0x342C208
	0x0342BD34 STR X21, [X22 + 0x30]
	0x0342BD38 ADRP X21, 0xCD1000
	0x0342BD3C LDR X21, [X21 + 0x720]
	0x0342BD40 LDR X0, [X21]
	0x0342BD44 CBZ X0, 0x342BD5C
	0x0342BD48 LDR X8, [X22]
	0x0342BD4C LDR X1, [X8 + 0x40]
	0x0342BD50 BL 0x1C16E00
	0x0342BD54 CBZ X0, 0x342C248
	0x0342BD58 LDR W8, [X22 + 0x18]
	0x0342BD5C CMP W8, 0x3
	0x0342BD60 B.LS 0x342C210
	0x0342BD64 LDR X8, [X21]
	0x0342BD68 STR X8, [X22 + 0x38]
	0x0342BD6C MOV X0, X22
	0x0342BD70 MOV X1, X31
	0x0342BD74 BL 0x3227578
	0x0342BD78 MOV X21, X0
	0x0342BD7C LDRB W8, [X19 + 0x30]
	0x0342BD80 CBZ W8, 0x342BE84
	0x0342BD84 ADRP X8, 0xCC8000
	0x0342BD88 LDR X8, [X8 + 0x9D0]
	0x0342BD8C LDR X0, [X8]
	0x0342BD90 MOVZ W1, 0x4
	0x0342BD94 BL 0x1C16D6C
	0x0342BD98 MOV X22, X0
	0x0342BD9C CBZ X0, 0x342C20C
	0x0342BDA0 CBZ X21, 0x342BDB8
	0x0342BDA4 LDR X8, [X22]
	0x0342BDA8 LDR X1, [X8 + 0x40]
	0x0342BDAC MOV X0, X21
	0x0342BDB0 BL 0x1C16E00
	0x0342BDB4 CBZ X0, 0x342C254
	0x0342BDB8 LDR W8, [X22 + 0x18]
	0x0342BDBC CBZ W8, 0x342C214
	0x0342BDC0 STR X21, [X22 + 0x20]
	0x0342BDC4 ADRP X21, 0xD03000
	0x0342BDC8 LDR X21, [X21 + 0xF60]
	0x0342BDCC LDR X0, [X21]
	0x0342BDD0 CBZ X0, 0x342BDE8
	0x0342BDD4 LDR X8, [X22]
	0x0342BDD8 LDR X1, [X8 + 0x40]
	0x0342BDDC BL 0x1C16E00
	0x0342BDE0 CBZ X0, 0x342C260
	0x0342BDE4 LDR W8, [X22 + 0x18]
	0x0342BDE8 CMP W8, 0x1
	0x0342BDEC B.LS 0x342C218
	0x0342BDF0 LDR X8, [X21]
	0x0342BDF4 ADRP X9, 0xCC9000
	0x0342BDF8 STR X8, [X22 + 0x28]
	0x0342BDFC LDR X8, [X19 + 0x30]
	0x0342BE00 LDR X9, [X9 + 0x478]
	0x0342BE04 STR X8, [X31 + 0x10]
	0x0342BE08 LDR X0, [X9]
	0x0342BE0C ADD X1, X31, 0x10
	0x0342BE10 BL 0x1C16E04
	0x0342BE14 MOV X21, X0
	0x0342BE18 CBZ X0, 0x342BE30
	0x0342BE1C LDR X8, [X22]
	0x0342BE20 LDR X1, [X8 + 0x40]
	0x0342BE24 MOV X0, X21
	0x0342BE28 BL 0x1C16E00
	0x0342BE2C CBZ X0, 0x342C26C
	0x0342BE30 LDR W8, [X22 + 0x18]
	0x0342BE34 CMP W8, 0x2
	0x0342BE38 B.LS 0x342C21C
	0x0342BE3C STR X21, [X22 + 0x30]
	0x0342BE40 ADRP X21, 0xCD1000
	0x0342BE44 LDR X21, [X21 + 0x720]
	0x0342BE48 LDR X0, [X21]
	0x0342BE4C CBZ X0, 0x342BE64
	0x0342BE50 LDR X8, [X22]
	0x0342BE54 LDR X1, [X8 + 0x40]
	0x0342BE58 BL 0x1C16E00
	0x0342BE5C CBZ X0, 0x342C278
	0x0342BE60 LDR W8, [X22 + 0x18]
	0x0342BE64 CMP W8, 0x3
	0x0342BE68 B.LS 0x342C220
	0x0342BE6C LDR X8, [X21]
	0x0342BE70 STR X8, [X22 + 0x38]
	0x0342BE74 MOV X0, X22
	0x0342BE78 MOV X1, X31
	0x0342BE7C BL 0x3227578
	0x0342BE80 MOV X21, X0
	0x0342BE84 LDR X22, [X19 + 0x38]
	0x0342BE88 CBZ X22, 0x342BED4
	0x0342BE8C LDR X0, [X23]
	0x0342BE90 LDR W8, [X0 + 0xE0]
	0x0342BE94 CBNZ W8, 0x342BE9C
	0x0342BE98 BL 0x1C16DFC
	0x0342BE9C MOV X0, X22
	0x0342BEA0 MOV X1, X31
	0x0342BEA4 BL 0x3624D20
	0x0342BEA8 ADRP X8, 0xD03000
	0x0342BEAC LDR X8, [X8 + 0xF20]
	0x0342BEB0 ADRP X9, 0xCD1000
	0x0342BEB4 LDR X9, [X9 + 0x720]
	0x0342BEB8 MOV X2, X0
	0x0342BEBC LDR X1, [X8]
	0x0342BEC0 LDR X3, [X9]
	0x0342BEC4 MOV X0, X21
	0x0342BEC8 MOV X4, X31
	0x0342BECC BL 0x32277C4
	0x0342BED0 MOV X21, X0
	0x0342BED4 CBZ X24, 0x342C1D8
	0x0342BED8 LDR X0, [X24 + 0x20]
	0x0342BEDC CBZ X0, 0x342C1DC
	0x0342BEE0 MOV X1, X31
	0x0342BEE4 BL 0x361B448
	0x0342BEE8 ADRP X8, 0xCD1000
	0x0342BEEC LDR X8, [X8 + 0x8D8]
	0x0342BEF0 MOV X22, X0
	0x0342BEF4 LDR X0, [X8]
	0x0342BEF8 MOVZ W1, 0x1
	0x0342BEFC BL 0x1C16D6C
	0x0342BF00 MOV X1, X0
	0x0342BF04 CBZ X1, 0x342C1E0
	0x0342BF08 LDR W8, [X1 + 0x18]
	0x0342BF0C CBZ W8, 0x342C1E4
	0x0342BF10 MOVZ W8, 0x2F
	0x0342BF14 STRH W8, [X1 + 0x20]
	0x0342BF18 CBZ X22, 0x342C1E8
	0x0342BF1C MOV X0, X22
	0x0342BF20 MOV X2, X31
	0x0342BF24 BL 0x322BC58
	0x0342BF28 MOV X1, X20
	0x0342BF2C MOV X2, X31
	0x0342BF30 BL 0x321B938
	0x0342BF34 ADRP X8, 0xCD1000
	0x0342BF38 LDR X8, [X8 + 0x3A0]
	0x0342BF3C MOV X22, X0
	0x0342BF40 LDR X23, [X24 + 0x20]
	0x0342BF44 LDR X0, [X8]
	0x0342BF48 BL 0x1C16F10
	0x0342BF4C MOV X20, X0
	0x0342BF50 MOV X1, X23
	0x0342BF54 MOV X2, X31
	0x0342BF58 BL 0x36281F8
	0x0342BF5C CBZ X20, 0x342C1EC
	0x0342BF60 MOV X0, X20
	0x0342BF64 MOV X1, X22
	0x0342BF68 MOV X2, X31
	0x0342BF6C BL 0x36288CC
	0x0342BF70 MOV X0, X20
	0x0342BF74 MOV X1, X21
	0x0342BF78 MOV X2, X31
	0x0342BF7C BL 0x3628980
	0x0342BF80 MOV X0, X20
	0x0342BF84 MOV X1, X31
	0x0342BF88 BL 0x3628A38
	0x0342BF8C ADRP X8, 0xCF1000
	0x0342BF90 ADRP X9, 0xCC9000
	0x0342BF94 LDR X8, [X8 + 0x4D0]
	0x0342BF98 LDR X9, [X9 + 0x6D0]
	0x0342BF9C MOV X20, X0
	0x0342BFA0 LDR X21, [X8]
	0x0342BFA4 LDR X0, [X9]
	0x0342BFA8 BL 0x1C16F10
	0x0342BFAC ADRP X8, 0xCC9000
	0x0342BFB0 LDR X8, [X8 + 0x6C0]
	0x0342BFB4 MOV X22, X0
	0x0342BFB8 LDR X1, [X8]
	0x0342BFBC BL 0x2AA4804
	0x0342BFC0 ADRP X8, 0xD03000
	0x0342BFC4 LDR X8, [X8 + 0x7D8]
	0x0342BFC8 LDR X1, [X19 + 0x48]
	0x0342BFCC LDR X0, [X8]
	0x0342BFD0 MOV X2, X31
	0x0342BFD4 BL 0x321B938
	0x0342BFD8 CBZ X22, 0x342C1F0
	0x0342BFDC ADRP X8, 0xD03000
	0x0342BFE0 LDR X8, [X8 + 0x7D0]
	0x0342BFE4 ADRP X9, 0xCC9000
	0x0342BFE8 LDR X9, [X9 + 0x810]
	0x0342BFEC MOV X2, X0
	0x0342BFF0 LDR X1, [X8]
	0x0342BFF4 LDR X3, [X9]
	0x0342BFF8 MOV X0, X22
	0x0342BFFC BL 0x2AA5098
	0x0342C000 LDR X23, [X24 + 0x10]
	0x0342C004 CBZ X23, 0x342C1F4
	0x0342C008 ADRP X10, 0xD02000
	0x0342C00C LDR X10, [X10 + 0x7B8]
	0x0342C010 LDR X8, [X23]
	0x0342C014 LDR W25, [X24 + 0x18]
	0x0342C018 LDP X26, X24, [X19 + 0x50]
	0x0342C01C LDR X1, [X10]
	0x0342C020 LDRH W9, [X8 + 0x12E]
	0x0342C024 CBZ X9, 0x342C048
	0x0342C028 LDR X10, [X8 + 0xB0]
	0x0342C02C ADD X10, X10, 0x8
	0x0342C030 LDUR X11, [X10 - 0x8]
	0x0342C034 CMP X11, X1
	0x0342C038 B.EQ 0x342C070
	0x0342C03C SUBS X9, X9, 0x1
	0x0342C040 ADD X10, X10, 0x10
	0x0342C044 B.NE 0x342C030
	0x0342C048 MOVZ W2, 0x3
	0x0342C04C MOV X0, X23
	0x0342C050 BL 0x1C5C788
	0x0342C054 B 0x342C080
	0x0342C058 LDR X8, [X19 + 0x60]
	0x0342C05C MOVN W9, 0x0
	0x0342C060 STR X8, [X31 + 0x18]
	0x0342C064 STR X31, [X19 + 0x60]
	0x0342C068 STR W9, [X19]
	0x0342C06C B 0x342C0DC
	0x0342C070 LDR W9, [X10]
	0x0342C074 ADD W9, W9, 0x3
	0x0342C078 ADD X8, X8, W9, 0x4, SXTW
	0x0342C07C ADD X0, X8, 0x138
	0x0342C080 LDP X8, X9, [X0]
	0x0342C084 MOV X0, X23
	0x0342C088 MOV X1, X21
	0x0342C08C MOV X2, X20
	0x0342C090 MOV X3, X22
	0x0342C094 MOV X4, X31
	0x0342C098 MOV W5, W25
	0x0342C09C MOV X6, X26
	0x0342C0A0 MOV X7, X24
	0x0342C0A4 STR X9, [X31]
	0x0342C0A8 BLR X8
	0x0342C0AC CBZ X0, 0x342C1F8
	0x0342C0B0 ADRP X8, 0xCCA000
	0x0342C0B4 LDR X8, [X8 + 0x1F8]
	0x0342C0B8 LDR X1, [X8]
	0x0342C0BC BL 0x269F5D0
	0x0342C0C0 ADRP X8, 0xCCA000
	0x0342C0C4 LDR X8, [X8 + 0x1F0]
	0x0342C0C8 STR X0, [X31 + 0x18]
	0x0342C0CC LDR X1, [X8]
	0x0342C0D0 ADD X0, X31, 0x18
	0x0342C0D4 BL 0x2677430
	0x0342C0D8 TBZ X0, 0x0, 0x342C138
	0x0342C0DC ADRP X8, 0xCCA000
	0x0342C0E0 LDR X8, [X8 + 0x1E0]
	0x0342C0E4 ADD X0, X31, 0x18

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xFB3000
	013 Move W8, [X20+1611]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {108}
	019 Move X0, 0xD04000
	020 Move X0, [X0+3816]
	021 Call 0x1C17CF4
	022 Move X0, 0xD04000
	023 Move X0, [X0+3824]
	024 Call 0x1C17CF4
	025 Move X0, 0xD04000
	026 Move X0, [X0+1048]
	027 Call 0x1C17CF4
	028 Move X0, 0xCD2000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCCA000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCCA000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCCA000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xD04000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xD04000
	044 Move X0, [X0+3832]
	045 Call 0x1C17CF4
	046 Move X0, 0xD04000
	047 Move X0, [X0+2096]
	048 Call 0x1C17CF4
	049 Move X0, 0xCCD000
	050 Move X0, [X0+3056]
	051 Call 0x1C17CF4
	052 Move X0, 0xCCC000
	053 Move X0, [X0+3832]
	054 Call 0x1C17CF4
	055 Move X0, 0xCCA000
	056 Move X0, [X0+1144]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC9000
	059 Move X0, [X0+2512]
	060 Call 0x1C17CF4
	061 Move X0, 0xCCC000
	062 Move X0, [X0+480]
	063 Call 0x1C17CF4
	064 Move X0, 0xCCC000
	065 Move X0, [X0+496]
	066 Call 0x1C17CF4
	067 Move X0, 0xCCC000
	068 Move X0, [X0+504]
	069 Call 0x1C17CF4
	070 Move X0, 0xCD2000
	071 Move X0, [X0+928]
	072 Call 0x1C17CF4
	073 Move X0, 0xCCB000
	074 Move X0, [X0+2600]
	075 Call 0x1C17CF4
	076 Move X0, 0xD04000
	077 Move X0, [X0+3840]
	078 Call 0x1C17CF4
	079 Move X0, 0xCF2000
	080 Move X0, [X0+1232]
	081 Call 0x1C17CF4
	082 Move X0, 0xD04000
	083 Move X0, [X0+3848]
	084 Call 0x1C17CF4
	085 Move X0, 0xD04000
	086 Move X0, [X0+3856]
	087 Call 0x1C17CF4
	088 Move X0, 0xCD2000
	089 Move X0, [X0+1824]
	090 Call 0x1C17CF4
	091 Move X0, 0xD04000
	092 Move X0, [X0+2000]
	093 Call 0x1C17CF4
	094 Move X0, 0xD04000
	095 Move X0, [X0+3864]
	096 Call 0x1C17CF4
	097 Move X0, 0xD04000
	098 Move X0, [X0+2008]
	099 Call 0x1C17CF4
	100 Move X0, 0xCC9000
	101 Move X0, [X0+2440]
	102 Call 0x1C17CF4
	103 Move X0, 0xD04000
	104 Move X0, [X0+3872]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X20+1611], W8
	108 Move [X31+24], X31
	109 Move X27, 0xD04000
	110 Move W8, [X19]
	111 Move X27, [X27+1048]
	112 Compare W8, 0
	113 JumpIfEqual {368}
	114 Move X21, [X19+32]
	115 Compare X21, 0
	116 JumpIfEqual {459}
	117 Move X23, 0xCCB000
	118 Move X23, [X23+2600]
	119 Move X8, 0xD04000
	120 Move X0, [X23]
	121 Move X8, [X8+3840]
	122 Move X24, [X19+64]
	123 Move W9, [X0+224]
	124 Move X20, [X8]
	125 Compare W9, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X21
	129 Move X1, X31
	130 Call Uri.EscapeDataString, X0
	131 Compare X20, 0
	132 JumpIfEqual {477}
	133 Move X8, 0xD04000
	134 Move X8, [X8+3856]
	135 Move X2, X0
	136 Move X1, [X8]
	137 Move X0, X20
	138 Move X3, X31
	139 Call String.Replace, X0, X1, X2
	140 Move X8, 0xCC9000
	141 Move X8, [X8+2440]
	142 Move W9, [X19+40]
	143 Move X20, X0
	144 Move X21, [X8]
	145 Compare W9, 0
	146 JumpIfEqual {218}
	147 Move X8, 0xCC9000
	148 Move X8, [X8+2512]
	149 Move X0, [X8]
	150 Move W1, 4
	151 Call 0x1C17D6C
	152 Move X22, X0
	153 Compare X0, 0
	154 JumpIfEqual {487}
	155 Compare X21, 0
	156 JumpIfEqual {163}
	157 Move X8, [X22]
	158 Move X1, [X8+64]
	159 Move X0, X21
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {493}
	163 Move W8, [X22+24]
	164 Compare W8, 0
	165 JumpIfEqual {488}
	166 Move [X22+32], X21
	167 Move X21, 0xD04000
	168 Move X21, [X21+3864]
	169 Move X0, [X21]
	170 Compare X0, 0
	171 JumpIfEqual {178}
	172 Move X8, [X22]
	173 Move X1, [X8+64]
	174 Call 0x1C17E00
	175 Compare X0, 0
	176 JumpIfEqual {496}
	177 Move W8, [X22+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, [X21]
	180 Move X9, 0xCCA000
	181 Move [X22+40], X8
	182 Move X8, [X19+40]
	183 Move X9, [X9+1144]
	184 Move [X31+16], X8
	185 Move X0, [X9]
	186 Add X1, X31, 16
	187 Call 0x1C17E04
	188 Move X21, X0
	189 Compare X0, 0
	190 JumpIfEqual {197}
	191 Move X8, [X22]
	192 Move X1, [X8+64]
	193 Move X0, X21
	194 Call 0x1C17E00
	195 Compare X0, 0
	196 JumpIfEqual {499}
	197 Move W8, [X22+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move [X22+48], X21
	200 Move X21, 0xCD2000
	201 Move X21, [X21+1824]
	202 Move X0, [X21]
	203 Compare X0, 0
	204 JumpIfEqual {211}
	205 Move X8, [X22]
	206 Move X1, [X8+64]
	207 Call 0x1C17E00
	208 Compare X0, 0
	209 JumpIfEqual {502}
	210 Move W8, [X22+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X8, [X21]
	213 Move [X22+56], X8
	214 Move X0, X22
	215 Move X1, X31
	216 Call String.Concat, X0
	217 Move X21, X0
	218 Move X0, X19
	219 Add X0, X0, 48
	220 Move W8, [X0]
	221 Compare W8, 0
	222 JumpIfEqual {242}
	223 Move X8, 0xD04000
	224 Move X8, [X8+2096]
	225 Move X1, [X8]
	226 Call Nullable`1<Boolean>.ToString, X0
	227 Compare X0, 0
	228 JumpIfEqual {491}
	229 Move X1, X31
	230 Call String.ToLower, X0
	231 Move X8, 0xD04000
	232 Move X8, [X8+3848]
	233 Move X9, 0xCD2000
	234 Move X9, [X9+1824]
	235 Move X2, X0
	236 Move X1, [X8]
	237 Move X3, [X9]
	238 Move X0, X21
	239 Move X4, X31
	240 Call String.Concat, X0, X1, X2, X3
	241 Move X21, X0
	242 Move X22, [X19+56]
	243 Compare X22, 0
	244 JumpIfEqual {264}
	245 Move X0, [X23]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X0, X22
	251 Move X1, X31
	252 Call Uri.EscapeDataString, X0
	253 Move X8, 0xD04000
	254 Move X8, [X8+3872]
	255 Move X9, 0xCD2000
	256 Move X9, [X9+1824]
	257 Move X2, X0
	258 Move X1, [X8]
	259 Move X3, [X9]
	260 Move X0, X21
	261 Move X4, X31
	262 Call String.Concat, X0, X1, X2, X3
	263 Move X21, X0
	264 Compare X24, 0
	265 JumpIfEqual {478}
	266 Move X0, [X24+32]
	267 Compare X0, 0
	268 JumpIfEqual {479}
	269 Move X1, X31
	270 Call Uri.get_AbsolutePath, X0
	271 Move X8, 0xCD2000
	272 Move X8, [X8+2264]
	273 Move X22, X0
	274 Move X0, [X8]
	275 Move W1, 1
	276 Call 0x1C17D6C
	277 Move X1, X0
	278 Compare X1, 0
	279 JumpIfEqual {480}
	280 Move W8, [X1+24]
	281 Compare W8, 0
	282 JumpIfEqual {481}
	283 Move W8, 47
	284 NotImplemented "Instruction STRH not yet implemented."
	285 Compare X22, 0
	286 JumpIfEqual {482}
	287 Move X0, X22
	288 Move X2, X31
	289 Call String.TrimEnd, X0, X1
	290 Move X1, X20
	291 Move X2, X31
	292 Call String.Concat, X0, X1
	293 Move X8, 0xCD2000
	294 Move X8, [X8+928]
	295 Move X22, X0
	296 Move X23, [X24+32]
	297 Move X0, [X8]
	298 Call 0x1C17F10
	299 Move X20, X0
	300 Move X1, X23
	301 Move X2, X31
	302 Call UriBuilder..ctor, X0, X1
	303 Compare X20, 0
	304 JumpIfEqual {483}
	305 Move X0, X20
	306 Move X1, X22
	307 Move X2, X31
	308 Call UriBuilder.set_Path, X0, X1
	309 Move X0, X20
	310 Move X1, X21
	311 Move X2, X31
	312 Call UriBuilder.set_Query, X0, X1
	313 Move X0, X20
	314 Move X1, X31
	315 Call UriBuilder.get_Uri, X0
	316 Move X8, 0xCF2000
	317 Move X9, 0xCCA000
	318 Move X8, [X8+1232]
	319 Move X9, [X9+1744]
	320 Move X20, X0
	321 Move X21, [X8]
	322 Move X0, [X9]
	323 Call 0x1C17F10
	324 Move X8, 0xCCA000
	325 Move X8, [X8+1728]
	326 Move X22, X0
	327 Move X1, [X8]
	328 Call Dictionary`2<Object, Object>..ctor, X0
	329 Move X8, 0xD04000
	330 Move X8, [X8+2008]
	331 Move X1, [X19+72]
	332 Move X0, [X8]
	333 Move X2, X31
	334 Call String.Concat, X0, X1
	335 Compare X22, 0
	336 JumpIfEqual {484}
	337 Move X8, 0xD04000
	338 Move X8, [X8+2000]
	339 Move X9, 0xCCA000
	340 Move X9, [X9+2064]
	341 Move X2, X0
	342 Move X1, [X8]
	343 Move X3, [X9]
	344 Move X0, X22
	345 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	346 Move X23, [X24+16]
	347 Compare X23, 0
	348 JumpIfEqual {485}
	349 Move X10, 0xD04000
	350 Move X10, [X10+1976]
	351 Move X8, [X23]
	352 Move W25, [X24+24]
	353 Move X26, [X19+80]
	354 Move X24, [X19+88]
	355 Move X1, [X10]
	356 NotImplemented "Instruction LDRH not yet implemented."
	357 Compare X9, 0
	358 JumpIfEqual {365}
	359 Move X10, [X8+176]
	360 Add X10, X10, 8
	361 NotImplemented "Instruction LDUR not yet implemented."
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Subtract X9, X9, 1
	364 Add X10, X10, 16
	365 Move W2, 3
	366 Move X0, X23
	367 Call 0x1C5D788
	368 Move X8, [X19+96]
	369 Move TEMP, 0
	370 Not TEMP
	371 Move W9, TEMP
	372 Move [X31+24], X8
	373 Move [X19+96], X31
	374 Move [X19], W9
	375 Move W9, [X10]
	376 Add W9, W9, 3
	377 Add X8, X8, W9
	378 Add X0, X8, 312
	379 Move X8, [X0]
	380 Move X9, [X0+8]
	381 Move X0, X23
	382 Move X1, X21
	383 Move X2, X20
	384 Move X3, X22
	385 Move X4, X31
	386 Move W5, W25
	387 Move X6, X26
	388 Move X7, X24
	389 Move [X31], X9
	390 NotImplemented "Instruction BLR not yet implemented."
	391 Compare X0, 0
	392 JumpIfEqual {486}
	393 Move X8, 0xCCC000
	394 Move X8, [X8+504]
	395 Move X1, [X8]
	396 Call Task`1<Object>.GetAwaiter, X0
	397 Move X8, 0xCCC000
	398 Move X8, [X8+496]
	399 Move [X31+24], X0
	400 Move X1, [X8]
	401 Add X0, X31, 24
	402 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	403 Move TEMP, X0
	404 And TEMP, TEMP, 1
	405 Compare TEMP, 1
	406 JumpIfNotEqual {432}
	407 Move X8, 0xCCC000
	408 Move X8, [X8+480]
	409 Add X0, X31, 24
	410 Move X1, [X8]
	411 Call TaskAwaiter`1<Object>.GetResult, X0
	412 Move X8, 0xD04000
	413 Move X8, [X8+3832]
	414 Move X1, [X8]
	415 Call JsonParser.FromJson, X0
	416 Move TEMP, 1
	417 Not TEMP
	418 Move W8, TEMP
	419 Move [X19+8], W8
	420 Move X20, X0
	421 Move X0, [X27]
	422 Move X21, 0xD04000
	423 Move W8, [X0+224]
	424 Move X21, [X21+3824]
	425 Compare W8, 0
	426 JumpIfNotEqual {428}
	427 Call 0x1C17DFC
	428 Move X2, [X21]
	429 Move X0, X19
	430 Move X1, X20
	431 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	432 Move [X19], W31
	433 Move X8, [X31+24]
	434 Move [X19+96], X8
	435 Move X0, [X27]
	436 Move W8, [X0+224]
	437 Compare W8, 0
	438 JumpIfNotEqual {440}
	439 Call 0x1C17DFC
	440 Move X8, 0xD04000
	441 Move X8, [X8+3816]
	442 Add X0, X19, 8
	443 Move X3, [X8]
	444 Add X1, X31, 24
	445 Move X2, X19
	446 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	447 Move X20, [X31+96]
	448 Move X19, [X31+104]
	449 Move X22, [X31+80]
	450 Move X21, [X31+88]
	451 Move X24, [X31+64]
	452 Move X23, [X31+72]
	453 Move X26, [X31+48]
	454 Move X25, [X31+56]
	455 Move X30, [X31+32]
	456 Move X27, [X31+40]
	457 Add X31, X31, 112
	458 Return 
	459 Move X0, 0xCD1000
	460 Move X0, [X0+1400]
	461 Call 0x1C17D08
	462 Call 0x1C17F10
	463 Move X20, X0
	464 Move X0, 0xD04000
	465 Move X0, [X0+3880]
	466 Call 0x1C17D08
	467 Move X1, X0
	468 Move X0, X20
	469 Move X2, X31
	470 Call ArgumentException..ctor, X0, X1
	471 Move X0, 0xD04000
	472 Move X0, [X0+3888]
	473 Call 0x1C17D08
	474 Move X1, X0
	475 Move X0, X20
	476 Call 0x1C17DEC
	477 Call 0x1C17F20
	478 Call 0x1C17F20
	479 Call 0x1C17F20
	480 Call 0x1C17F20
	481 Call 0x1C17F28
	482 Call 0x1C17F20
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Call 0x1C17F20
	487 Call 0x1C17F20
	488 Call 0x1C17F28
	489 Call 0x1C17F28
	490 Call 0x1C17F28
	491 Call 0x1C17F20
	492 Call 0x1C17F28
	493 Call 0x1C17F44
	494 Move X1, X31
	495 Call 0x1C17DEC
	496 Call 0x1C17F44
	497 Move X1, X31
	498 Call 0x1C17DEC
	499 Call 0x1C17F44
	500 Move X1, X31
	501 Call 0x1C17DEC
	502 Call 0x1C17F44
	503 Move X1, X31
	504 Call 0x1C17DEC
	505 Move X20, X0
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Move X0, X20
	508 Call 0x3EB2AD0
	509 Move X20, X0
	510 Move X0, 0xCC8000
	511 Move X0, [X0+2000]
	512 Call 0x1C17D08
	513 Move X8, [X20]
	514 Move X1, [X8]
	515 Call 0x1C18270
	516 Move TEMP, X0
	517 And TEMP, TEMP, 1
	518 Compare TEMP, 1
	519 JumpIfNotEqual {540}
	520 Move X20, [X20]
	521 Call 0x3EB2AE0
	522 Move TEMP, 1
	523 Not TEMP
	524 Move W8, TEMP
	525 Move [X19+8], W8
	526 Move X0, 0xD03000
	527 Move X0, [X0+1048]
	528 Call 0x1C17D08
	529 Move W8, [X0+224]
	530 Compare W8, 0
	531 JumpIfNotEqual {533}
	532 Call 0x1C17DFC
	533 Move X0, 0xD03000
	534 Move X0, [X0+3896]
	535 Call 0x1C17D08
	536 Move X2, X0
	537 Move X0, X19
	538 Move X1, X20
	539 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	540 Move W0, 8
	541 Call 0x3EB2AF0
	542 Move X8, [X20]
	543 Move [X0], X8
	544 Move X1, 0xA89000
	545 Add X1, X1, 3672
	546 Move X2, X31
	547 Call 0x3EB2B00
	548 Move X20, X0
	549 Call 0x3EB2AE0
	550 Move X0, X20
	551 Call 0x1D2D690
	552 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342C0E8 LDR X1, [X8]
	0x0342C0EC BL 0x2677474
	0x0342C0F0 ADRP X8, 0xD02000
	0x0342C0F4 LDR X8, [X8 + 0xF88]
	0x0342C0F8 LDR X1, [X8]
	0x0342C0FC BL 0x220E6DC
	0x0342C100 MOVN W8, 0x1
	0x0342C104 STR W8, [X19], #0x8
	0x0342C108 MOV X20, X0
	0x0342C10C LDR X0, [X27]
	0x0342C110 ADRP X21, 0xD02000
	0x0342C114 LDR W8, [X0 + 0xE0]
	0x0342C118 LDR X21, [X21 + 0xF80]
	0x0342C11C CBNZ W8, 0x342C124
	0x0342C120 BL 0x1C16DFC
	0x0342C124 LDR X2, [X21]
	0x0342C128 MOV X0, X19
	0x0342C12C MOV X1, X20
	0x0342C130 BL 0x26322B0
	0x0342C134 B 0x342C170
	0x0342C138 STR W31, [X19]
	0x0342C13C LDR X8, [X31 + 0x18]
	0x0342C140 STR X8, [X19 + 0x60]
	0x0342C144 LDR X0, [X27]
	0x0342C148 LDR W8, [X0 + 0xE0]
	0x0342C14C CBNZ W8, 0x342C154
	0x0342C150 BL 0x1C16DFC
	0x0342C154 ADRP X8, 0xD02000
	0x0342C158 LDR X8, [X8 + 0xF78]
	0x0342C15C ADD X0, X19, 0x8
	0x0342C160 LDR X3, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFB2000
	007 Move X21, 0xD03000
	008 Move W8, [X22+1612]
	009 Move X21, [X21+1048]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD03000
	017 Move X0, [X0+3904]
	018 Call 0x1C17CF4
	019 Move X0, 0xD03000
	020 Move X0, [X0+1048]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1612], W8
	024 Move X0, [X21]
	025 Move X21, 0xD03000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3904]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

