Type: Nakama.Client/<DeleteStorageObjectsAsync>d__60

Method: System.Void MoveNext()

Disassembly:
	0x03453E4C LDRB W8, [X20 + 0x10]
	0x03453E50 CBZ W8, 0x3454038
	0x03453E54 LDR X8, [X19 + 0x50]
	0x03453E58 CBZ X8, 0x34541A8
	0x03453E5C LDR X21, [X8 + 0x18]
	0x03453E60 CBZ X21, 0x34541AC
	0x03453E64 ADRP X23, 0xCA1000
	0x03453E68 LDR X8, [X21]
	0x03453E6C LDR X23, [X23 + 0x818]
	0x03453E70 LDRH W9, [X8 + 0x12E]
	0x03453E74 LDR X1, [X23]
	0x03453E78 CBZ X9, 0x3453E9C
	0x03453E7C LDR X10, [X8 + 0xB0]
	0x03453E80 ADD X10, X10, 0x8
	0x03453E84 LDUR X11, [X10 - 0x8]
	0x03453E88 CMP X11, X1
	0x03453E8C B.EQ 0x3453EAC
	0x03453E90 SUBS X9, X9, 0x1
	0x03453E94 ADD X10, X10, 0x10
	0x03453E98 B.NE 0x3453E84
	0x03453E9C MOVZ W2, 0x7
	0x03453EA0 MOV X0, X21
	0x03453EA4 BL 0x1C5C788
	0x03453EA8 B 0x3453EBC
	0x03453EAC LDR W9, [X10]
	0x03453EB0 ADD W9, W9, 0x7
	0x03453EB4 ADD X8, X8, W9, 0x4, SXTW
	0x03453EB8 ADD X0, X8, 0x138
	0x03453EBC LDP X8, X1, [X0]
	0x03453EC0 MOV X0, X21
	0x03453EC4 BLR X8
	0x03453EC8 MOV X1, X31
	0x03453ECC BL 0x32277A8
	0x03453ED0 TBNZ X0, 0x0, 0x3454034
	0x03453ED4 LDR X8, [X19 + 0x50]
	0x03453ED8 CBZ X8, 0x34541B0
	0x03453EDC ADRP X9, 0xCA1000
	0x03453EE0 LDR X9, [X9 + 0x9F0]
	0x03453EE4 LDR X21, [X8 + 0x18]
	0x03453EE8 LDR X0, [X9]
	0x03453EEC LDR W9, [X0 + 0xE0]
	0x03453EF0 CBNZ W9, 0x3453EF8
	0x03453EF4 BL 0x1C16DFC
	0x03453EF8 MOV X0, X31
	0x03453EFC BL 0x33616A4
	0x03453F00 ADRP X22, 0xCA2000
	0x03453F04 LDR X22, [X22 + 0xA10]
	0x03453F08 MOV X8, X0
	0x03453F0C STR X8, [X31 + 0x28]
	0x03453F10 LDR X0, [X22]
	0x03453F14 LDR W8, [X0 + 0xE0]
	0x03453F18 CBNZ W8, 0x3453F24
	0x03453F1C BL 0x1C16DFC
	0x03453F20 LDR X0, [X22]
	0x03453F24 LDR X8, [X0 + 0xB8]
	0x03453F28 LDR X1, [X8]
	0x03453F2C ADD X0, X31, 0x28
	0x03453F30 MOV X2, X31
	0x03453F34 BL 0x335FC68
	0x03453F38 CBZ X21, 0x34541B4
	0x03453F3C LDR X8, [X21]
	0x03453F40 LDR X1, [X23]
	0x03453F44 MOV X22, X0
	0x03453F48 LDRH W9, [X8 + 0x12E]
	0x03453F4C CBZ X9, 0x3453F70
	0x03453F50 LDR X10, [X8 + 0xB0]
	0x03453F54 ADD X10, X10, 0x8
	0x03453F58 LDUR X11, [X10 - 0x8]
	0x03453F5C CMP X11, X1
	0x03453F60 B.EQ 0x3453F80
	0x03453F64 SUBS X9, X9, 0x1
	0x03453F68 ADD X10, X10, 0x10
	0x03453F6C B.NE 0x3453F58
	0x03453F70 MOVZ W2, 0xB
	0x03453F74 MOV X0, X21
	0x03453F78 BL 0x1C5C788
	0x03453F7C B 0x3453F90
	0x03453F80 LDR W9, [X10]
	0x03453F84 ADD W9, W9, 0xB
	0x03453F88 ADD X8, X8, W9, 0x4, SXTW
	0x03453F8C ADD X0, X8, 0x138
	0x03453F90 LDP X8, X2, [X0]
	0x03453F94 MOV X0, X21
	0x03453F98 MOV X1, X22
	0x03453F9C BLR X8
	0x03453FA0 TBZ X0, 0x0, 0x3454034
	0x03453FA4 LDR X8, [X19 + 0x50]
	0x03453FA8 CBZ X8, 0x34541B8
	0x03453FAC LDR X1, [X8 + 0x18]
	0x03453FB0 LDR X3, [X19 + 0x48]
	0x03453FB4 LDR X4, [X8 + 0x30]
	0x03453FB8 MOV X0, X20
	0x03453FBC MOV X2, X31
	0x03453FC0 MOV X5, X31
	0x03453FC4 BL 0x34440A8
	0x03453FC8 CBZ X0, 0x34541BC
	0x03453FCC ADRP X8, 0xCA1000
	0x03453FD0 LDR X8, [X8 + 0x840]
	0x03453FD4 LDR X1, [X8]
	0x03453FD8 BL 0x269F5D0
	0x03453FDC ADRP X8, 0xCA1000
	0x03453FE0 LDR X8, [X8 + 0x838]
	0x03453FE4 STR X0, [X31 + 0x20]
	0x03453FE8 LDR X1, [X8]
	0x03453FEC ADD X0, X31, 0x20
	0x03453FF0 BL 0x2677430
	0x03453FF4 TBNZ X0, 0x0, 0x3453DE4
	0x03453FF8 STR W31, [X19]
	0x03453FFC LDR X8, [X31 + 0x20]
	0x03454000 STR X8, [X19 + 0x58]
	0x03454004 LDR X0, [X25]
	0x03454008 LDR W8, [X0 + 0xE0]
	0x0345400C CBNZ W8, 0x3454014
	0x03454010 BL 0x1C16DFC
	0x03454014 ADRP X8, 0xCDB000
	0x03454018 LDR X8, [X8 + 0xCD8]
	0x0345401C ADD X0, X19, 0x8
	0x03454020 LDR X3, [X8]
	0x03454024 ADD X1, X31, 0x20
	0x03454028 MOV X2, X19
	0x0345402C BL 0x2188460
	0x03454030 B 0x3454178
	0x03454034 CBZ X20, 0x345419C
	0x03454038 ADRP X8, 0xCA7000
	0x0345403C LDR X8, [X8 + 0x818]
	0x03454040 LDR X21, [X20 + 0x58]
	0x03454044 LDR X23, [X19 + 0x50]
	0x03454048 LDR X0, [X8]
	0x0345404C BL 0x1C16F10
	0x03454050 ADRP X8, 0xCDB000
	0x03454054 LDR X8, [X8 + 0xCE8]
	0x03454058 MOV X22, X0
	0x0345405C LDR X2, [X8]
	0x03454060 MOV X1, X23
	0x03454064 MOV X3, X31
	0x03454068 BL 0x2D27AA8
	0x0345406C LDR X8, [X19 + 0x50]
	0x03454070 CBZ X8, 0x3454190
	0x03454074 ADRP X9, 0xCDB000
	0x03454078 LDR X23, [X19 + 0x48]
	0x0345407C LDR X9, [X9 + 0x7C8]
	0x03454080 CBNZ X23, 0x3454088
	0x03454084 LDR X23, [X20 + 0x18]
	0x03454088 LDR X20, [X8 + 0x18]
	0x0345408C LDR X1, [X8 + 0x30]
	0x03454090 LDR X2, [X9]
	0x03454094 STP X31, X31, [X31 + 0x8]
	0x03454098 ADD X0, X31, 0x8
	0x0345409C BL 0x242E368
	0x034540A0 ADRP X8, 0xCDB000
	0x034540A4 LDR X8, [X8 + 0x7D0]
	0x034540A8 LDR X0, [X8]
	0x034540AC BL 0x1C16F10
	0x034540B0 LDP X3, X4, [X31 + 0x8]
	0x034540B4 MOV X24, X0
	0x034540B8 MOV X1, X20
	0x034540BC MOV X2, X23
	0x034540C0 MOV X5, X31
	0x034540C4 BL 0x3465404
	0x034540C8 CBZ X21, 0x3454194
	0x034540CC MOV X0, X21
	0x034540D0 MOV X1, X22
	0x034540D4 MOV X2, X24
	0x034540D8 MOV X3, X31
	0x034540DC BL 0x3465B68
	0x034540E0 CBZ X0, 0x3454198
	0x034540E4 MOV X1, X31
	0x034540E8 BL 0x33ED394
	0x034540EC STR X0, [X31 + 0x18]
	0x034540F0 ADD X0, X31, 0x18
	0x034540F4 MOV X1, X31
	0x034540F8 BL 0x32C3A80
	0x034540FC TBZ X0, 0x0, 0x345413C
	0x03454100 ADD X0, X31, 0x18
	0x03454104 MOV X1, X31
	0x03454108 BL 0x32C3B4C
	0x0345410C MOVN W8, 0x1
	0x03454110 STR W8, [X19]
	0x03454114 STR X31, [X19 + 0x50]
	0x03454118 LDR X0, [X25]
	0x0345411C ADD X19, X19, 0x8
	0x03454120 LDR W8, [X0 + 0xE0]
	0x03454124 CBNZ W8, 0x345412C
	0x03454128 BL 0x1C16DFC
	0x0345412C MOV X0, X19
	0x03454130 MOV X1, X31
	0x03454134 BL 0x32C4864
	0x03454138 B 0x3454178
	0x0345413C MOVZ W8, 0x1
	0x03454140 STR W8, [X19]
	0x03454144 LDR X8, [X31 + 0x18]
	0x03454148 STR X8, [X19 + 0x60]
	0x0345414C LDR X0, [X25]
	0x03454150 LDR W8, [X0 + 0xE0]
	0x03454154 CBNZ W8, 0x345415C
	0x03454158 BL 0x1C16DFC
	0x0345415C ADRP X8, 0xCDB000
	0x03454160 LDR X8, [X8 + 0xCE0]
	0x03454164 ADD X0, X19, 0x8
	0x03454168 LDR X3, [X8]
	0x0345416C ADD X1, X31, 0x18
	0x03454170 MOV X2, X19
	0x03454174 BL 0x2189B24
	0x03454178 LDP X20, X19, [X31 + 0x60]
	0x0345417C LDP X22, X21, [X31 + 0x50]
	0x03454180 LDP X24, X23, [X31 + 0x40]
	0x03454184 LDP X30, X25, [X31 + 0x30]
	0x03454188 ADD X31, X31, 0x70
	0x0345418C RET
	0x03454190 BL 0x1C16F20
	0x03454194 BL 0x1C16F20
	0x03454198 BL 0x1C16F20
	0x0345419C BL 0x1C16F20
	0x034541A0 BL 0x1C16F20
	0x034541A4 BL 0x1C16F20
	0x034541A8 BL 0x1C16F20
	0x034541AC BL 0x1C16F20
	0x034541B0 BL 0x1C16F20
	0x034541B4 BL 0x1C16F20
	0x034541B8 BL 0x1C16F20
	0x034541BC BL 0x1C16F20
	0x034541C0 B 0x3454234
	0x034541C4 B 0x3454234
	0x034541C8 B 0x3454234
	0x034541CC B 0x3454234
	0x034541D0 B 0x3454234
	0x034541D4 B 0x3454234
	0x034541D8 B 0x3454234
	0x034541DC B 0x3454234
	0x034541E0 B 0x3454234
	0x034541E4 B 0x3454234
	0x034541E8 B 0x3454234
	0x034541EC B 0x3454234
	0x034541F0 B 0x3454234
	0x034541F4 B 0x3454234
	0x034541F8 B 0x3454234
	0x034541FC B 0x3454234
	0x03454200 B 0x3454234
	0x03454204 B 0x3454234
	0x03454208 B 0x3454234
	0x0345420C B 0x3454234
	0x03454210 B 0x3454234
	0x03454214 B 0x3454234
	0x03454218 B 0x3454234
	0x0345421C B 0x3454234
	0x03454220 B 0x3454234
	0x03454224 B 0x3454234
	0x03454228 B 0x3454234
	0x0345422C B 0x3454234
	0x03454230 B 0x3454234
	0x03454234 MOV X20, X0
	0x03454238 CMP W1, 0x1
	0x0345423C B.NE 0x34542D0
	0x03454240 MOV X0, X20
	0x03454244 BL 0x3EB1AD0
	0x03454248 MOV X20, X0
	0x0345424C ADRP X0, 0xC9F000
	0x03454250 LDR X0, [X0 + 0x7D0]
	0x03454254 BL 0x1C16D08
	0x03454258 LDR X8, [X20]
	0x0345425C LDR X1, [X8]
	0x03454260 BL 0x1C17270
	0x03454264 TBZ X0, 0x0, 0x34542A8
	0x03454268 LDR X20, [X20]
	0x0345426C BL 0x3EB1AE0
	0x03454270 MOVN W8, 0x1
	0x03454274 STR X31, [X19 + 0x50]
	0x03454278 STR W8, [X19], #0x8
	0x0345427C ADRP X0, 0xCA2000
	0x03454280 LDR X0, [X0 + 0x280]
	0x03454284 BL 0x1C16D08
	0x03454288 LDR W8, [X0 + 0xE0]
	0x0345428C CBNZ W8, 0x3454294
	0x03454290 BL 0x1C16DFC
	0x03454294 MOV X0, X19
	0x03454298 MOV X1, X20
	0x0345429C MOV X2, X31
	0x034542A0 BL 0x32C4908
	0x034542A4 B 0x3454178
	0x034542A8 MOVZ W0, 0x8
	0x034542AC BL 0x3EB1AF0
	0x034542B0 LDR X8, [X20]
	0x034542B4 STR X8, [X0]
	0x034542B8 ADRP X1, 0xA60000
	0x034542BC ADD X1, X1, 0xE58
	0x034542C0 MOV X2, X31
	0x034542C4 BL 0x3EB1B00
	0x034542C8 MOV X20, X0
	0x034542CC BL 0x3EB1AE0
	0x034542D0 MOV X0, X20
	0x034542D4 BL 0x1D2C690
	0x034542D8 BL 0x1990590
	0x034542DC STR X30, [X31 - 0x30]!
	0x034542E0 STP X22, X21, [X31 + 0x10]
	0x034542E4 STP X20, X19, [X31 + 0x20]
	0x034542E8 ADRP X21, 0xF89000
	0x034542EC ADRP X22, 0xCA2000
	0x034542F0 LDRB W8, [X21 + 0x77C]
	0x034542F4 LDR X22, [X22 + 0x280]
	0x034542F8 MOV X19, X1
	0x034542FC MOV X20, X0
	0x03454300 TBNZ X8, 0x0, 0x3454318
	0x03454304 ADRP X0, 0xCA2000
	0x03454308 LDR X0, [X0 + 0x280]
	0x0345430C BL 0x1C16CF4
	0x03454310 MOVZ W8, 0x1
	0x03454314 STRB W8, [X21 + 0x77C]
	0x03454318 LDR X0, [X22]
	0x0345431C LDR W8, [X0 + 0xE0]
	0x03454320 CBNZ W8, 0x3454328
	0x03454324 BL 0x1C16DFC
	0x03454328 ADD X0, X20, 0x8
	0x0345432C MOV X1, X19
	0x03454330 LDP X20, X19, [X31 + 0x20]
	0x03454334 LDP X22, X21, [X31 + 0x10]
	0x03454338 MOV X2, X31
	0x0345433C LDR X30, [X31], #0x30
	0x03454340 B 0x32C477C
	0x03454344 SUB X31, X31, 0x70
	0x03454348 STP X30, X25, [X31 + 0x30]
	0x0345434C STP X24, X23, [X31 + 0x40]
	0x03454350 STP X22, X21, [X31 + 0x50]
	0x03454354 STP X20, X19, [X31 + 0x60]
	0x03454358 ADRP X20, 0xF89000
	0x0345435C LDRB W8, [X20 + 0x77D]
	0x03454360 MOV X19, X0
	0x03454364 TBNZ X8, 0x0, 0x3454418
	0x03454368 ADRP X0, 0xCDB000
	0x0345436C LDR X0, [X0 + 0xCF8]
	0x03454370 BL 0x1C16CF4
	0x03454374 ADRP X0, 0xCDB000
	0x03454378 LDR X0, [X0 + 0xD00]
	0x0345437C BL 0x1C16CF4
	0x03454380 ADRP X0, 0xCA2000
	0x03454384 LDR X0, [X0 + 0x280]
	0x03454388 BL 0x1C16CF4
	0x0345438C ADRP X0, 0xCA1000
	0x03454390 LDR X0, [X0 + 0xA10]
	0x03454394 BL 0x1C16CF4
	0x03454398 ADRP X0, 0xCA0000
	0x0345439C LDR X0, [X0 + 0x9F0]
	0x034543A0 BL 0x1C16CF4
	0x034543A4 ADRP X0, 0xCA7000
	0x034543A8 LDR X0, [X0 + 0x818]
	0x034543AC BL 0x1C16CF4
	0x034543B0 ADRP X0, 0xCA0000
	0x034543B4 LDR X0, [X0 + 0x818]
	0x034543B8 BL 0x1C16CF4
	0x034543BC ADRP X0, 0xCDB000
	0x034543C0 LDR X0, [X0 + 0x7C8]
	0x034543C4 BL 0x1C16CF4
	0x034543C8 ADRP X0, 0xCDB000
	0x034543CC LDR X0, [X0 + 0x7D0]
	0x034543D0 BL 0x1C16CF4
	0x034543D4 ADRP X0, 0xCA0000
	0x034543D8 LDR X0, [X0 + 0x830]
	0x034543DC BL 0x1C16CF4
	0x034543E0 ADRP X0, 0xCA0000
	0x034543E4 LDR X0, [X0 + 0x838]
	0x034543E8 BL 0x1C16CF4
	0x034543EC ADRP X0, 0xCA0000
	0x034543F0 LDR X0, [X0 + 0x840]
	0x034543F4 BL 0x1C16CF4
	0x034543F8 ADRP X0, 0xCDB000
	0x034543FC LDR X0, [X0 + 0xD08]
	0x03454400 BL 0x1C16CF4
	0x03454404 ADRP X0, 0xCDB000
	0x03454408 LDR X0, [X0 + 0xD10]
	0x0345440C BL 0x1C16CF4
	0x03454410 MOVZ W8, 0x1
	0x03454414 STRB W8, [X20 + 0x77D]
	0x03454418 STP X31, X31, [X31 + 0x20]
	0x0345441C STR X31, [X31 + 0x18]
	0x03454420 ADRP X25, 0xCA2000
	0x03454424 LDR W8, [X19]
	0x03454428 LDR X20, [X19 + 0x20]
	0x0345442C LDR X25, [X25 + 0x280]
	0x03454430 CBZ W8, 0x3454454
	0x03454434 CMP W8, 0x1
	0x03454438 B.NE 0x3454480
	0x0345443C LDR X8, [X19 + 0x60]
	0x03454440 MOVN W9, 0x0
	0x03454444 STR X8, [X31 + 0x18]
	0x03454448 STR X31, [X19 + 0x60]
	0x0345444C STR W9, [X19]
	0x03454450 B 0x3454784
	0x03454454 LDR X8, [X19 + 0x58]
	0x03454458 MOVN W9, 0x0
	0x0345445C STR X8, [X31 + 0x20]
	0x03454460 STR X31, [X19 + 0x58]
	0x03454464 STR W9, [X19]
	0x03454468 ADRP X8, 0xCA0000
	0x0345446C LDR X8, [X8 + 0x830]
	0x03454470 ADD X0, X31, 0x20
	0x03454474 LDR X1, [X8]
	0x03454478 BL 0x2677474
	0x0345447C B 0x34546B8
	0x03454480 ADRP X8, 0xCDB000
	0x03454484 LDR X8, [X8 + 0xD10]
	0x03454488 LDR X0, [X8]
	0x0345448C BL 0x1C16F10
	0x03454490 MOV X21, X0
	0x03454494 MOV X1, X31
	0x03454498 BL 0x34491AC
	0x0345449C STR X21, [X19 + 0x50]
	0x034544A0 CBZ X21, 0x3454824
	0x034544A4 LDR X8, [X19 + 0x20]
	0x034544A8 STR X8, [X21 + 0x10]
	0x034544AC LDR X8, [X19 + 0x28]
	0x034544B0 STR X8, [X21 + 0x18]
	0x034544B4 LDR X8, [X19 + 0x30]
	0x034544B8 STR X8, [X21 + 0x20]
	0x034544BC LDR X8, [X19 + 0x38]
	0x034544C0 STR X8, [X21 + 0x28]
	0x034544C4 LDR X8, [X19 + 0x40]
	0x034544C8 STR X8, [X21 + 0x30]
	0x034544CC CBZ X20, 0x3454828
	0x034544D0 LDRB W8, [X20 + 0x10]
	0x034544D4 CBZ W8, 0x34546BC
	0x034544D8 LDR X8, [X19 + 0x50]
	0x034544DC CBZ X8, 0x345482C
	0x034544E0 LDR X21, [X8 + 0x18]
	0x034544E4 CBZ X21, 0x3454830
	0x034544E8 ADRP X23, 0xCA0000
	0x034544EC LDR X8, [X21]
	0x034544F0 LDR X23, [X23 + 0x818]
	0x034544F4 LDRH W9, [X8 + 0x12E]
	0x034544F8 LDR X1, [X23]
	0x034544FC CBZ X9, 0x3454520
	0x03454500 LDR X10, [X8 + 0xB0]
	0x03454504 ADD X10, X10, 0x8
	0x03454508 LDUR X11, [X10 - 0x8]
	0x0345450C CMP X11, X1
	0x03454510 B.EQ 0x3454530
	0x03454514 SUBS X9, X9, 0x1
	0x03454518 ADD X10, X10, 0x10
	0x0345451C B.NE 0x3454508
	0x03454520 MOVZ W2, 0x7
	0x03454524 MOV X0, X21
	0x03454528 BL 0x1C5C788
	0x0345452C B 0x3454540
	0x03454530 LDR W9, [X10]
	0x03454534 ADD W9, W9, 0x7
	0x03454538 ADD X8, X8, W9, 0x4, SXTW
	0x0345453C ADD X0, X8, 0x138
	0x03454540 LDP X8, X1, [X0]
	0x03454544 MOV X0, X21
	0x03454548 BLR X8
	0x0345454C MOV X1, X31
	0x03454550 BL 0x32277A8
	0x03454554 TBNZ X0, 0x0, 0x34546B8
	0x03454558 LDR X8, [X19 + 0x50]
	0x0345455C CBZ X8, 0x3454834
	0x03454560 ADRP X9, 0xCA0000
	0x03454564 LDR X9, [X9 + 0x9F0]
	0x03454568 LDR X21, [X8 + 0x18]
	0x0345456C LDR X0, [X9]
	0x03454570 LDR W9, [X0 + 0xE0]
	0x03454574 CBNZ W9, 0x345457C
	0x03454578 BL 0x1C16DFC
	0x0345457C MOV X0, X31
	0x03454580 BL 0x33616A4
	0x03454584 ADRP X22, 0xCA1000
	0x03454588 LDR X22, [X22 + 0xA10]
	0x0345458C MOV X8, X0
	0x03454590 STR X8, [X31 + 0x28]
	0x03454594 LDR X0, [X22]
	0x03454598 LDR W8, [X0 + 0xE0]
	0x0345459C CBNZ W8, 0x34545A8
	0x034545A0 BL 0x1C16DFC
	0x034545A4 LDR X0, [X22]
	0x034545A8 LDR X8, [X0 + 0xB8]
	0x034545AC LDR X1, [X8]
	0x034545B0 ADD X0, X31, 0x28
	0x034545B4 MOV X2, X31
	0x034545B8 BL 0x335FC68
	0x034545BC CBZ X21, 0x3454838
	0x034545C0 LDR X8, [X21]
	0x034545C4 LDR X1, [X23]
	0x034545C8 MOV X22, X0
	0x034545CC LDRH W9, [X8 + 0x12E]
	0x034545D0 CBZ X9, 0x34545F4
	0x034545D4 LDR X10, [X8 + 0xB0]
	0x034545D8 ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xF8B000
	015 Move W8, [X20+1911]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {77}
	021 Move X0, 0xCDD000
	022 Move X0, [X0+3200]
	023 Call 0x1C17CF4
	024 Move X0, 0xCDD000
	025 Move X0, [X0+3208]
	026 Call 0x1C17CF4
	027 Move X0, 0xCDD000
	028 Move X0, [X0+3216]
	029 Call 0x1C17CF4
	030 Move X0, 0xCA4000
	031 Move X0, [X0+640]
	032 Call 0x1C17CF4
	033 Move X0, 0xCA3000
	034 Move X0, [X0+2576]
	035 Call 0x1C17CF4
	036 Move X0, 0xCA2000
	037 Move X0, [X0+2544]
	038 Call 0x1C17CF4
	039 Move X0, 0xCA9000
	040 Move X0, [X0+2072]
	041 Call 0x1C17CF4
	042 Move X0, 0xCA2000
	043 Move X0, [X0+2072]
	044 Call 0x1C17CF4
	045 Move X0, 0xCDD000
	046 Move X0, [X0+3224]
	047 Call 0x1C17CF4
	048 Move X0, 0xCDD000
	049 Move X0, [X0+3232]
	050 Call 0x1C17CF4
	051 Move X0, 0xCDB000
	052 Move X0, [X0+3736]
	053 Call 0x1C17CF4
	054 Move X0, 0xCDD000
	055 Move X0, [X0+1992]
	056 Call 0x1C17CF4
	057 Move X0, 0xCDD000
	058 Move X0, [X0+2000]
	059 Call 0x1C17CF4
	060 Move X0, 0xCA2000
	061 Move X0, [X0+2096]
	062 Call 0x1C17CF4
	063 Move X0, 0xCA2000
	064 Move X0, [X0+2104]
	065 Call 0x1C17CF4
	066 Move X0, 0xCA2000
	067 Move X0, [X0+2112]
	068 Call 0x1C17CF4
	069 Move X0, 0xCDD000
	070 Move X0, [X0+3240]
	071 Call 0x1C17CF4
	072 Move X0, 0xCDD000
	073 Move X0, [X0+3248]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X20+1911], W8
	077 Move [X31+32], X31
	078 Move [X31+40], X31
	079 Move [X31+24], X31
	080 Move X25, 0xCA4000
	081 Move W8, [X19]
	082 Move X20, [X19+32]
	083 Move X25, [X25+640]
	084 Compare W8, 0
	085 JumpIfEqual {94}
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X19+88]
	088 Move TEMP, 0
	089 Not TEMP
	090 Move W9, TEMP
	091 Move [X31+24], X8
	092 Move [X19+88], X31
	093 Move [X19], W9
	094 Move X8, [X19+80]
	095 Move TEMP, 0
	096 Not TEMP
	097 Move W9, TEMP
	098 Move [X31+32], X8
	099 Move [X19+80], X31
	100 Move [X19], W9
	101 Move X8, 0xCA2000
	102 Move X8, [X8+2096]
	103 Add X0, X31, 32
	104 Move X1, [X8]
	105 Call TaskAwaiter`1<Object>.GetResult, X0
	106 Move X8, 0xCDD000
	107 Move X8, [X8+3248]
	108 Move X0, [X8]
	109 Call 0x1C17F10
	110 Move X21, X0
	111 Move X1, X31
	112 Call <>c__DisplayClass60_0..ctor, X0
	113 Move [X19+64], X21
	114 Compare X21, 0
	115 JumpIfEqual {449}
	116 Move X8, [X19+32]
	117 Move [X21+16], X8
	118 Move X8, [X19+40]
	119 Move [X21+24], X8
	120 Move X8, [X19+48]
	121 Move [X21+40], X8
	122 Compare X20, 0
	123 JumpIfEqual {450}
	124 Move W8, [X20+16]
	125 Compare W8, 0
	126 JumpIfEqual {262}
	127 Move X8, [X19+64]
	128 Compare X8, 0
	129 JumpIfEqual {451}
	130 Move X21, [X8+24]
	131 Compare X21, 0
	132 JumpIfEqual {452}
	133 Move X23, 0xCA1000
	134 Move X8, [X21]
	135 Move X23, [X23+2072]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Move X1, [X23]
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move W2, 7
	147 Move X0, X21
	148 Call 0x1C5D788
	149 Move W9, [X10]
	150 Add W9, W9, 7
	151 Add X8, X8, W9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X1, [X0+8]
	155 Move X0, X21
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X1, X31
	158 Call String.IsNullOrEmpty, X0
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {262}
	163 Move X8, [X19+64]
	164 Compare X8, 0
	165 JumpIfEqual {453}
	166 Move X9, 0xCA1000
	167 Move X9, [X9+2544]
	168 Move X21, [X8+24]
	169 Move X0, [X9]
	170 Move W9, [X0+224]
	171 Compare W9, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, X31
	175 Call DateTime.get_UtcNow
	176 Move X22, 0xCA2000
	177 Move X22, [X22+2576]
	178 Move X8, X0
	179 Move [X31+40], X8
	180 Move X0, [X22]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {186}
	184 Call 0x1C17DFC
	185 Move X0, [X22]
	186 Move X8, [X0+184]
	187 Move X1, [X8]
	188 Add X0, X31, 40
	189 Move X2, X31
	190 Call DateTime.Add, X0, X1
	191 Compare X21, 0
	192 JumpIfEqual {454}
	193 Move X8, [X21]
	194 Move X1, [X23]
	195 Move X22, X0
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move W2, 11
	206 Move X0, X21
	207 Call 0x1C5D788
	208 Move W9, [X10]
	209 Add W9, W9, 11
	210 Add X8, X8, W9
	211 Add X0, X8, 312
	212 Move X8, [X0]
	213 Move X2, [X0+8]
	214 Move X0, X21
	215 Move X1, X22
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfNotEqual {262}
	221 Move X8, [X19+64]
	222 Compare X8, 0
	223 JumpIfEqual {455}
	224 Move X1, [X8+24]
	225 Move X3, [X19+56]
	226 Move X4, [X8+40]
	227 Move X0, X20
	228 Move X2, X31
	229 Move X5, X31
	230 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	231 Compare X0, 0
	232 JumpIfEqual {456}
	233 Move X8, 0xCA1000
	234 Move X8, [X8+2112]
	235 Move X1, [X8]
	236 Call Task`1<Object>.GetAwaiter, X0
	237 Move X8, 0xCA1000
	238 Move X8, [X8+2104]
	239 Move [X31+32], X0
	240 Move X1, [X8]
	241 Add X0, X31, 32
	242 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {101}
	247 Move [X19], W31
	248 Move X8, [X31+32]
	249 Move [X19+80], X8
	250 Move X0, [X25]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 Move X8, 0xCDC000
	256 Move X8, [X8+3208]
	257 Add X0, X19, 8
	258 Move X3, [X8]
	259 Add X1, X31, 32
	260 Move X2, X19
	261 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	262 Move X8, 0xCDA000
	263 Move X8, [X8+3736]
	264 Move X22, [X19+64]
	265 Move X0, [X8]
	266 Call 0x1C17F10
	267 Move X8, 0xCDC000
	268 Move X8, [X8+3232]
	269 Move X21, X0
	270 Move X1, [X8]
	271 Call List`1<Object>..ctor, X0
	272 Compare X22, 0
	273 JumpIfEqual {444}
	274 Move [X22+32], X21
	275 Move X23, [X19+72]
	276 Compare X23, 0
	277 JumpIfEqual {330}
	278 Move W8, [X23+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X27, 0xCDC000
	281 Move X28, 0xCDC000
	282 Move X27, [X27+3200]
	283 Move X28, [X28+3224]
	284 Move X24, X31
	285 Add X26, X23, 32
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X8, [X19+64]
	288 Compare X8, 0
	289 JumpIfEqual {438}
	290 Move X29, [X26]
	291 Move X21, [X8+32]
	292 Move X0, [X27]
	293 Call 0x1C17F10
	294 Move X22, X0
	295 Move X1, X31
	296 Call ApiDeleteStorageObjectId..ctor, X0
	297 Compare X29, 0
	298 JumpIfEqual {439}
	299 Compare X22, 0
	300 JumpIfEqual {440}
	301 Move V0, [X29+1]
	302 Move [X22+1], V0
	303 Move X8, [X29+32]
	304 Move [X22+32], X8
	305 Compare X21, 0
	306 JumpIfEqual {441}
	307 Move W10, [X21+28]
	308 Move X8, [X21+16]
	309 Move X9, [X28]
	310 Add W10, W10, 1
	311 Move [X21+28], W10
	312 Compare X8, 0
	313 JumpIfEqual {442}
	314 NotImplemented "Instruction LDRSW not yet implemented."
	315 Move W11, [X8+24]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Add W9, W10, 1
	318 Add X8, X8, X10
	319 Move [X21+24], W9
	320 Move [X8+32], X22
	321 Move X8, [X9+32]
	322 Move X8, [X8+192]
	323 Move X2, [X8+112]
	324 Move X0, X21
	325 Move X1, X22
	326 Call List`1<Object>.AddWithResize, X0, X1
	327 Move W8, [X23+24]
	328 Add X24, X24, 1
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Compare X20, 0
	331 JumpIfEqual {445}
	332 Move X8, 0xCA8000
	333 Move X8, [X8+2072]
	334 Move X21, [X20+88]
	335 Move X23, [X19+64]
	336 Move X0, [X8]
	337 Call 0x1C17F10
	338 Move X8, 0xCDC000
	339 Move X8, [X8+3240]
	340 Move X22, X0
	341 Move X2, [X8]
	342 Move X1, X23
	343 Move X3, X31
	344 Call Func`1<Object>..ctor, X0, X1, X2
	345 Move X8, [X19+64]
	346 Compare X8, 0
	347 JumpIfEqual {446}
	348 Move X9, 0xCDC000
	349 Move X23, [X19+56]
	350 Move X9, [X9+1992]
	351 Compare X23, 0
	352 JumpIfNotEqual {354}
	353 Move X23, [X20+24]
	354 Move X20, [X8+24]
	355 Move X1, [X8+40]
	356 Move X2, [X9]
	357 Move [X31+8], X31
	358 Move [X31+16], X31
	359 Add X0, X31, 8
	360 Call Nullable`1<CancellationToken>..ctor, X0, X1
	361 Move X8, 0xCDC000
	362 Move X8, [X8+2000]
	363 Move X0, [X8]
	364 Call 0x1C17F10
	365 Move X3, [X31+8]
	366 Move X4, [X31+16]
	367 Move X24, X0
	368 Move X1, X20
	369 Move X2, X23
	370 Move X5, X31
	371 Call RetryHistory..ctor, X0, X1, X2, X3
	372 Compare X21, 0
	373 JumpIfEqual {447}
	374 Move X0, X21
	375 Move X1, X22
	376 Move X2, X24
	377 Move X3, X31
	378 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	379 Compare X0, 0
	380 JumpIfEqual {448}
	381 Move X1, X31
	382 Call Task.GetAwaiter, X0
	383 Move [X31+24], X0
	384 Add X0, X31, 24
	385 Move X1, X31
	386 Call TaskAwaiter.get_IsCompleted, X0
	387 Move TEMP, X0
	388 And TEMP, TEMP, 1
	389 Compare TEMP, 1
	390 JumpIfNotEqual {408}
	391 Add X0, X31, 24
	392 Move X1, X31
	393 Call TaskAwaiter.GetResult, X0
	394 Move TEMP, 1
	395 Not TEMP
	396 Move W8, TEMP
	397 Move [X19], W8
	398 Move [X19+64], X31
	399 Move X0, [X25]
	400 Add X19, X19, 8
	401 Move W8, [X0+224]
	402 Compare W8, 0
	403 JumpIfNotEqual {405}
	404 Call 0x1C17DFC
	405 Move X0, X19
	406 Move X1, X31
	407 Call AsyncTaskMethodBuilder.SetResult, X0
	408 Move W8, 1
	409 Move [X19], W8
	410 Move X8, [X31+24]
	411 Move [X19+88], X8
	412 Move X0, [X25]
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {417}
	416 Call 0x1C17DFC
	417 Move X8, 0xCDC000
	418 Move X8, [X8+3216]
	419 Add X0, X19, 8
	420 Move X3, [X8]
	421 Add X1, X31, 24
	422 Move X2, X19
	423 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	424 Move X20, [X31+128]
	425 Move X19, [X31+136]
	426 Move X22, [X31+112]
	427 Move X21, [X31+120]
	428 Move X24, [X31+96]
	429 Move X23, [X31+104]
	430 Move X26, [X31+80]
	431 Move X25, [X31+88]
	432 Move X28, [X31+64]
	433 Move X27, [X31+72]
	434 Move X29, [X31+48]
	435 Move X30, [X31+56]
	436 Add X31, X31, 144
	437 Return 
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Call 0x1C17F20
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Call 0x1C17F28
	444 Call 0x1C17F20
	445 Call 0x1C17F20
	446 Call 0x1C17F20
	447 Call 0x1C17F20
	448 Call 0x1C17F20
	449 Call 0x1C17F20
	450 Call 0x1C17F20
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Call 0x1C17F20
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Move X20, X0
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move X0, X20
	460 Call 0x3EB2AD0
	461 Move X20, X0
	462 Move X0, 0xCA0000
	463 Move X0, [X0+2000]
	464 Call 0x1C17D08
	465 Move X8, [X20]
	466 Move X1, [X8]
	467 Call 0x1C18270
	468 Move TEMP, X0
	469 And TEMP, TEMP, 1
	470 Compare TEMP, 1
	471 JumpIfNotEqual {490}
	472 Move X20, [X20]
	473 Call 0x3EB2AE0
	474 Move TEMP, 1
	475 Not TEMP
	476 Move W8, TEMP
	477 Move [X19+64], X31
	478 Move [X19+8], W8
	479 Move X0, 0xCA3000
	480 Move X0, [X0+640]
	481 Call 0x1C17D08
	482 Move W8, [X0+224]
	483 Compare W8, 0
	484 JumpIfNotEqual {486}
	485 Call 0x1C17DFC
	486 Move X0, X19
	487 Move X1, X20
	488 Move X2, X31
	489 Call AsyncTaskMethodBuilder.SetException, X0, X1
	490 Move W0, 8
	491 Call 0x3EB2AF0
	492 Move X8, [X20]
	493 Move [X0], X8
	494 Move X1, 0xA61000
	495 Add X1, X1, 3672
	496 Move X2, X31
	497 Call 0x3EB2B00
	498 Move X20, X0
	499 Call 0x3EB2AE0
	500 Move X0, X20
	501 Call 0x1D2D690
	502 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034545DC LDUR X11, [X10 - 0x8]
	0x034545E0 CMP X11, X1
	0x034545E4 B.EQ 0x3454604
	0x034545E8 SUBS X9, X9, 0x1
	0x034545EC ADD X10, X10, 0x10
	0x034545F0 B.NE 0x34545DC
	0x034545F4 MOVZ W2, 0xB
	0x034545F8 MOV X0, X21
	0x034545FC BL 0x1C5C788
	0x03454600 B 0x3454614
	0x03454604 LDR W9, [X10]
	0x03454608 ADD W9, W9, 0xB
	0x0345460C ADD X8, X8, W9, 0x4, SXTW
	0x03454610 ADD X0, X8, 0x138
	0x03454614 LDP X8, X2, [X0]
	0x03454618 MOV X0, X21
	0x0345461C MOV X1, X22
	0x03454620 BLR X8
	0x03454624 TBZ X0, 0x0, 0x34546B8
	0x03454628 LDR X8, [X19 + 0x50]
	0x0345462C CBZ X8, 0x345483C
	0x03454630 LDR X1, [X8 + 0x18]
	0x03454634 LDR X3, [X19 + 0x48]
	0x03454638 LDR X4, [X8 + 0x30]
	0x0345463C MOV X0, X20
	0x03454640 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF8A000
	007 Move X22, 0xCA3000
	008 Move W8, [X21+1912]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA3000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1912], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

