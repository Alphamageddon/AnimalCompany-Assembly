Type: Nakama.Client

Method: System.Boolean get_AutoRefreshSession()

Disassembly:
	0x034400A0 LDR X29, [X29 + 0x638]
	0x034400A4 LDR X28, [X28 + 0x668]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: Nakama.RetryConfiguration get_GlobalRetryConfiguration()

Disassembly:
	0x034400A8 LDR X27, [X27 + 0x648]
	0x034400AC CBNZ W8, 0x34400B4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_GlobalRetryConfiguration(Nakama.RetryConfiguration value)

Disassembly:
	0x034400B0 BL 0x1C16DFC
	0x034400B4 LDR X0, [X29]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Host()

Disassembly:
	0x034400B8 ADD X8, X31, 0x0
	0x034400BC AND W29, W25, 0x1

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: Nakama.ILogger get_Logger()

Disassembly:
	0x034400C0 ORR X25, X8, 0xF
	0x034400C4 MOV X8, X25

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_Logger(Nakama.ILogger value)

Disassembly:
	0x034400C8 AND W26, W26, 0x1
	0x034400CC BL 0x263221C
	0x034400D0 LDR X2, [X28]
	0x034400D4 MOVN W8, 0x0
	0x034400D8 ADD X1, X31, 0x0
	0x034400DC MOV X0, X25
	0x034400E0 STP X24, X23, [X31 + 0x20]
	0x034400E4 STR X22, [X31 + 0x40]
	0x034400E8 STRB W26, [X31 + 0x38]
	0x034400EC STRB W29, [X31 + 0x48]
	0x034400F0 STR X21, [X31 + 0x30]
	0x034400F4 STP X19, X20, [X31 + 0x50]
	0x034400F8 STR W8, [X31]
	0x034400FC BL 0x1FCC814
	0x03440100 LDR X1, [X27]
	0x03440104 MOV X0, X25
	0x03440108 BL 0x2632230
	0x0344010C LDP X20, X19, [X31 + 0xC0]
	0x03440110 LDP X22, X21, [X31 + 0xB0]
	0x03440114 LDP X24, X23, [X31 + 0xA0]
	0x03440118 LDP X26, X25, [X31 + 0x90]
	0x0344011C LDP X28, X27, [X31 + 0x80]
	0x03440120 LDP X29, X30, [X31 + 0x70]
	0x03440124 ADD X31, X31, 0xD0
	0x03440128 RET
	0x0344012C SUB X31, X31, 0x110
	0x03440130 STP X29, X30, [X31 + 0xB0]
	0x03440134 STP X28, X27, [X31 + 0xC0]
	0x03440138 STP X26, X25, [X31 + 0xD0]
	0x0344013C STP X24, X23, [X31 + 0xE0]
	0x03440140 STP X22, X21, [X31 + 0xF0]
	0x03440144 STP X20, X19, [X31 + 0x100]
	0x03440148 ADRP X19, 0xF9D000
	0x0344014C LDRB W8, [X19 + 0x6B1]
	0x03440150 MOV X22, X4
	0x03440154 MOV X23, X3
	0x03440158 MOV X24, X2
	0x0344015C MOV X25, X1
	0x03440160 MOV X26, X0
	0x03440164 STP X6, X7, [X31 + 0x18]
	0x03440168 STR X5, [X31 + 0x10]
	0x0344016C TBNZ X8, 0x0, 0x34401A8
	0x03440170 ADRP X0, 0xCEF000
	0x03440174 LDR X0, [X0 + 0x638]
	0x03440178 BL 0x1C16CF4
	0x0344017C ADRP X0, 0xCEF000
	0x03440180 LDR X0, [X0 + 0x670]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF9E000
	006 Move W8, [X21+1700]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xCEF000
	014 Move X0, [X0+1976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1700], W8
	018 Move X8, [X20+72]
	019 Compare X8, 0
	020 JumpIfEqual {55}
	021 Move X21, [X8+16]
	022 Compare X21, 0
	023 JumpIfEqual {55}
	024 Move X10, 0xCEF000
	025 Move X8, [X21]
	026 Move X10, [X10+1976]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 2
	038 Move X0, X21
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 2
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X2, [X0+8]
	046 Move X0, X21
	047 Move X1, X19
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move [X20+80], X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Call 0x1C17F20

Method: System.Int32 get_Port()

Disassembly:
	0x03440184 BL 0x1C16CF4
	0x03440188 ADRP X0, 0xCEF000

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.String get_Scheme()

Disassembly:
	0x0344018C LDR X0, [X0 + 0x648]
	0x03440190 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.String get_ServerKey()

Disassembly:
	0x03440194 ADRP X0, 0xCEF000
	0x03440198 LDR X0, [X0 + 0x630]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void add_ReceivedSessionUpdated(System.Action`1<Nakama.ISession> value)

Disassembly:
	0x0344019C BL 0x1C16CF4
	0x034401A0 MOVZ W8, 0x1
	0x034401A4 STRB W8, [X19 + 0x6B1]
	0x034401A8 ADRP X21, 0xCEF000
	0x034401AC LDP X28, X29, [X31 + 0x120]
	0x034401B0 LDR X19, [X31 + 0x118]
	0x034401B4 LDRB W27, [X31 + 0x110]
	0x034401B8 LDR X21, [X21 + 0x638]
	0x034401BC ADD X0, X31, 0x28
	0x034401C0 MOVZ W2, 0x88
	0x034401C4 MOV W1, W31
	0x034401C8 ADD X20, X31, 0x28
	0x034401CC BL 0x3EB1B10
	0x034401D0 ADRP X8, 0xCEF000
	0x034401D4 LDR X8, [X8 + 0x630]
	0x034401D8 LDR X0, [X8]
	0x034401DC LDR W8, [X0 + 0xE0]
	0x034401E0 CBNZ W8, 0x34401E8
	0x034401E4 BL 0x1C16DFC
	0x034401E8 LDR X0, [X21]
	0x034401EC AND W21, W27, 0x1
	0x034401F0 ADD X27, X20, 0x8
	0x034401F4 MOV X8, X27
	0x034401F8 BL 0x263221C
	0x034401FC LDR X8, [X31 + 0x10]
	0x03440200 STP X26, X25, [X31 + 0x48]
	0x03440204 STP X24, X23, [X31 + 0x58]
	0x03440208 STRB W21, [X31 + 0x88]
	0x0344020C STP X22, X8, [X31 + 0x68]
	0x03440210 LDR X8, [X31 + 0x18]
	0x03440214 STR X28, [X31 + 0xA0]
	0x03440218 ADD X1, X31, 0x28
	0x0344021C MOV X0, X27
	0x03440220 STP X8, X19, [X31 + 0x78]
	0x03440224 ADRP X8, 0xCEF000
	0x03440228 LDR X8, [X8 + 0x670]
	0x0344022C LDR X2, [X8]
	0x03440230 LDR X8, [X31 + 0x20]
	0x03440234 STP X8, X29, [X31 + 0x90]
	0x03440238 MOVN W8, 0x0
	0x0344023C STR W8, [X31 + 0x28]
	0x03440240 BL 0x1FCC914
	0x03440244 ADRP X8, 0xCEF000
	0x03440248 LDR X8, [X8 + 0x648]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF9E000
	009 Move W8, [X21+1701]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2552]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1701], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+2552]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedSessionUpdated(System.Action`1<Nakama.ISession> value)

Disassembly:
	0x0344024C MOV X0, X27
	0x03440250 LDR X1, [X8]
	0x03440254 BL 0x2632230
	0x03440258 LDP X20, X19, [X31 + 0x100]
	0x0344025C LDP X22, X21, [X31 + 0xF0]
	0x03440260 LDP X24, X23, [X31 + 0xE0]
	0x03440264 LDP X26, X25, [X31 + 0xD0]
	0x03440268 LDP X28, X27, [X31 + 0xC0]
	0x0344026C LDP X29, X30, [X31 + 0xB0]
	0x03440270 ADD X31, X31, 0x110
	0x03440274 RET
	0x03440278 SUB X31, X31, 0xC0
	0x0344027C STR X30, [X31 + 0x60]
	0x03440280 STP X28, X27, [X31 + 0x70]
	0x03440284 STP X26, X25, [X31 + 0x80]
	0x03440288 STP X24, X23, [X31 + 0x90]
	0x0344028C STP X22, X21, [X31 + 0xA0]
	0x03440290 STP X20, X19, [X31 + 0xB0]
	0x03440294 ADRP X27, 0xF9D000
	0x03440298 ADRP X26, 0xCEF000
	0x0344029C LDRB W8, [X27 + 0x6B2]
	0x034402A0 LDR X26, [X26 + 0x630]
	0x034402A4 MOV X19, X6
	0x034402A8 MOV X21, X5
	0x034402AC MOV X22, X4
	0x034402B0 MOV W25, W3
	0x034402B4 MOV X20, X2
	0x034402B8 MOV X23, X1
	0x034402BC MOV X24, X0
	0x034402C0 TBNZ X8, 0x0, 0x34402FC
	0x034402C4 ADRP X0, 0xCEF000
	0x034402C8 LDR X0, [X0 + 0x638]
	0x034402CC BL 0x1C16CF4
	0x034402D0 ADRP X0, 0xCEF000
	0x034402D4 LDR X0, [X0 + 0x678]
	0x034402D8 BL 0x1C16CF4
	0x034402DC ADRP X0, 0xCEF000
	0x034402E0 LDR X0, [X0 + 0x648]
	0x034402E4 BL 0x1C16CF4
	0x034402E8 ADRP X0, 0xCEF000
	0x034402EC LDR X0, [X0 + 0x630]
	0x034402F0 BL 0x1C16CF4
	0x034402F4 MOVZ W8, 0x1
	0x034402F8 STRB W8, [X27 + 0x6B2]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF9E000
	009 Move W8, [X21+1702]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2552]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1702], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+2552]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Int32 get_Timeout()

Disassembly:
	0x034402FC LDR X0, [X26]
	0x03440300 MOVI V0.2D, 0x0
	0x03440304 STP V0, V0, [X31 + 0x40]
	0x03440308 STP V0, V0, [X31 + 0x20]
	0x0344030C STP V0, V0, [X31]
	0x03440310 ADRP X28, 0xCEF000
	0x03440314 ADRP X27, 0xCEF000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+72]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_Timeout(System.Int32 value)

Disassembly:
	0x03440318 ADRP X26, 0xCEF000
	0x0344031C LDR W8, [X0 + 0xE0]
	0x03440320 LDR X28, [X28 + 0x638]
	0x03440324 LDR X27, [X27 + 0x678]
	0x03440328 LDR X26, [X26 + 0x648]
	0x0344032C CBNZ W8, 0x3440334
	0x03440330 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+72]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+24], W1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.Void .ctor(System.String serverKey)

Disassembly:
	0x03440334 LDR X0, [X28]
	0x03440338 ADD X8, X31, 0x0
	0x0344033C AND W28, W25, 0x1
	0x03440340 ORR X25, X8, 0xF
	0x03440344 MOV X8, X25
	0x03440348 BL 0x263221C
	0x0344034C LDR X2, [X27]
	0x03440350 MOVN W8, 0x0
	0x03440354 ADD X1, X31, 0x0
	0x03440358 MOV X0, X25
	0x0344035C STP X24, X23, [X31 + 0x20]
	0x03440360 STRB W28, [X31 + 0x38]
	0x03440364 STR X22, [X31 + 0x30]
	0x03440368 STP X19, X21, [X31 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Move W0, W31
	007 Move W1, W31
	008 Move X2, X31
	009 Call HttpRequestAdapter.WithGzip, X0, X1
	010 Move X2, X0
	011 Move X0, X20
	012 Move X1, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]

Method: System.Void .ctor(System.String serverKey, Nakama.IHttpAdapter adapter)

Disassembly:
	0x0344036C STR X20, [X31 + 0x40]
	0x03440370 STR W8, [X31]
	0x03440374 BL 0x1FCCA14
	0x03440378 LDR X1, [X26]
	0x0344037C MOV X0, X25
	0x03440380 BL 0x2632230
	0x03440384 LDP X20, X19, [X31 + 0xB0]
	0x03440388 LDP X22, X21, [X31 + 0xA0]
	0x0344038C LDP X24, X23, [X31 + 0x90]
	0x03440390 LDP X26, X25, [X31 + 0x80]
	0x03440394 LDP X28, X27, [X31 + 0x70]
	0x03440398 LDR X30, [X31 + 0x60]
	0x0344039C ADD X31, X31, 0xC0
	0x034403A0 RET
	0x034403A4 SUB X31, X31, 0xD0
	0x034403A8 STP X29, X30, [X31 + 0x70]
	0x034403AC STP X28, X27, [X31 + 0x80]
	0x034403B0 STP X26, X25, [X31 + 0x90]
	0x034403B4 STP X24, X23, [X31 + 0xA0]
	0x034403B8 STP X22, X21, [X31 + 0xB0]
	0x034403BC STP X20, X19, [X31 + 0xC0]
	0x034403C0 ADRP X28, 0xF9D000
	0x034403C4 ADRP X27, 0xCEF000
	0x034403C8 LDRB W8, [X28 + 0x6B3]
	0x034403CC LDR X27, [X27 + 0x630]
	0x034403D0 MOV X19, X7
	0x034403D4 MOV X20, X6
	0x034403D8 MOV X21, X5
	0x034403DC MOV W25, W4
	0x034403E0 MOV W26, W3
	0x034403E4 MOV X22, X2
	0x034403E8 MOV X23, X1
	0x034403EC MOV X24, X0
	0x034403F0 TBNZ X8, 0x0, 0x344042C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xF9E000
	009 Move X23, 0xCF0000
	010 Move X24, 0xCC1000
	011 Move W8, [X22+1703]
	012 Move X23, [X23+1512]
	013 Move X24, [X24+2400]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xCF0000
	022 Move X0, [X0+1512]
	023 Call 0x1C17CF4
	024 Move X0, 0xCC1000
	025 Move X0, [X0+2400]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+1703], W8
	029 Move X1, [X23]
	030 Move X2, [X24]
	031 Move X0, X21
	032 Move X4, X20
	033 Move X5, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move W3, 0x1CB6
	041 Move W6, 1
	042 Move X30, [X31+64]

Method: System.Void .ctor(System.String scheme, System.String host, System.Int32 port, System.String serverKey)

Disassembly:
	0x03440660 LDR W8, [X0 + 0xE0]
	0x03440664 LDR X25, [X25 + 0x690]
	0x03440668 CBNZ W8, 0x3440670
	0x0344066C BL 0x1C16DFC
	0x03440670 ADD X8, X31, 0x8
	0x03440674 MOV X0, X31
	0x03440678 BL 0x32C4770
	0x0344067C LDUR V0, [X31 + 0x8]
	0x03440680 LDR X9, [X31 + 0x18]
	0x03440684 LDR X2, [X25]
	0x03440688 ADD X8, X31, 0x20
	0x0344068C STP X20, X21, [X31 + 0x60]
	0x03440690 ORR X20, X8, 0xF
	0x03440694 MOVN W10, 0x0
	0x03440698 ADD X1, X31, 0x20
	0x0344069C MOV X0, X20
	0x034406A0 STP X24, X23, [X31 + 0x48]
	0x034406A4 STR X22, [X31 + 0x58]
	0x034406A8 STUR V0, [X31 + 0x28]
	0x034406AC STP X9, X19, [X31 + 0x38]
	0x034406B0 STR W10, [X31 + 0x20]
	0x034406B4 BL 0x21915B8
	0x034406B8 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X2
	008 Move X22, X1
	009 Move X23, X0
	010 Move W0, W31
	011 Move W1, W31
	012 Move X2, X31
	013 Move X19, X4
	014 Move W20, W3
	015 Call HttpRequestAdapter.WithGzip, X0, X1
	016 Move X1, X22
	017 Move X2, X21
	018 Move W3, W20
	019 Move X4, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move W6, 1
	025 Move X5, X0
	026 Move X0, X23
	027 Move X30, [X31+48]
	028 Move X23, [X31+56]
	029 Call Client..ctor, X0, X1, X2, X3, X4, X5, X6
	030 Return 

Method: System.Void .ctor(System.String scheme, System.String host, System.Int32 port, System.String serverKey, Nakama.IHttpAdapter adapter, System.Boolean autoRefreshSession = True)

Disassembly:
	0x034403F4 ADRP X0, 0xCEF000
	0x034403F8 LDR X0, [X0 + 0x638]
	0x034403FC BL 0x1C16CF4
	0x03440400 ADRP X0, 0xCEF000
	0x03440404 LDR X0, [X0 + 0x680]
	0x03440408 BL 0x1C16CF4
	0x0344040C ADRP X0, 0xCEF000
	0x03440410 LDR X0, [X0 + 0x648]
	0x03440414 BL 0x1C16CF4
	0x03440418 ADRP X0, 0xCEF000
	0x0344041C LDR X0, [X0 + 0x630]
	0x03440420 BL 0x1C16CF4
	0x03440424 MOVZ W8, 0x1
	0x03440428 STRB W8, [X28 + 0x6B3]
	0x0344042C LDR X0, [X27]
	0x03440430 MOVI V0.2D, 0x0
	0x03440434 STR X31, [X31 + 0x60]
	0x03440438 STP V0, V0, [X31 + 0x40]
	0x0344043C STP V0, V0, [X31 + 0x20]
	0x03440440 STP V0, V0, [X31]
	0x03440444 ADRP X29, 0xCEF000
	0x03440448 ADRP X28, 0xCEF000
	0x0344044C ADRP X27, 0xCEF000
	0x03440450 LDR W8, [X0 + 0xE0]
	0x03440454 LDR X29, [X29 + 0x638]
	0x03440458 LDR X28, [X28 + 0x680]
	0x0344045C LDR X27, [X27 + 0x648]
	0x03440460 CBNZ W8, 0x3440468
	0x03440464 BL 0x1C16DFC
	0x03440468 LDR X0, [X29]
	0x0344046C ADD X8, X31, 0x0
	0x03440470 AND W29, W25, 0x1
	0x03440474 ORR X25, X8, 0xF
	0x03440478 MOV X8, X25
	0x0344047C AND W26, W26, 0x1
	0x03440480 BL 0x263221C
	0x03440484 LDR X2, [X28]
	0x03440488 MOVN W8, 0x0
	0x0344048C ADD X1, X31, 0x0
	0x03440490 MOV X0, X25
	0x03440494 STP X24, X23, [X31 + 0x20]
	0x03440498 STR X22, [X31 + 0x40]
	0x0344049C STRB W26, [X31 + 0x38]
	0x034404A0 STRB W29, [X31 + 0x48]
	0x034404A4 STR X21, [X31 + 0x30]
	0x034404A8 STP X19, X20, [X31 + 0x50]
	0x034404AC STR W8, [X31]
	0x034404B0 BL 0x1FCCB14
	0x034404B4 LDR X1, [X27]
	0x034404B8 MOV X0, X25
	0x034404BC BL 0x2632230
	0x034404C0 LDP X20, X19, [X31 + 0xC0]
	0x034404C4 LDP X22, X21, [X31 + 0xB0]
	0x034404C8 LDP X24, X23, [X31 + 0xA0]
	0x034404CC LDP X26, X25, [X31 + 0x90]
	0x034404D0 LDP X28, X27, [X31 + 0x80]
	0x034404D4 LDP X29, X30, [X31 + 0x70]
	0x034404D8 ADD X31, X31, 0xD0
	0x034404DC RET
	0x034404E0 SUB X31, X31, 0xE0
	0x034404E4 STR X30, [X31 + 0x90]
	0x034404E8 STP X26, X25, [X31 + 0xA0]
	0x034404EC STP X24, X23, [X31 + 0xB0]
	0x034404F0 STP X22, X21, [X31 + 0xC0]
	0x034404F4 STP X20, X19, [X31 + 0xD0]
	0x034404F8 ADRP X26, 0xF9D000
	0x034404FC ADRP X25, 0xCB6000
	0x03440500 LDRB W8, [X26 + 0x6B4]
	0x03440504 LDR X25, [X25 + 0x280]
	0x03440508 MOV X20, X5
	0x0344050C MOV X21, X4
	0x03440510 MOV X22, X3
	0x03440514 MOV X23, X2
	0x03440518 MOV X24, X1
	0x0344051C MOV X19, X0
	0x03440520 TBNZ X8, 0x0, 0x3440544
	0x03440524 ADRP X0, 0xCEF000
	0x03440528 LDR X0, [X0 + 0x688]
	0x0344052C BL 0x1C16CF4
	0x03440530 ADRP X0, 0xCB6000
	0x03440534 LDR X0, [X0 + 0x280]
	0x03440538 BL 0x1C16CF4
	0x0344053C MOVZ W8, 0x1
	0x03440540 STRB W8, [X26 + 0x6B4]
	0x03440544 LDR X0, [X25]
	0x03440548 MOVI V0.2D, 0x0
	0x0344054C STR X31, [X31 + 0x80]
	0x03440550 STP V0, V0, [X31 + 0x60]
	0x03440554 STP V0, V0, [X31 + 0x40]
	0x03440558 STP V0, V0, [X31 + 0x20]
	0x0344055C ADRP X25, 0xCEF000
	0x03440560 LDR W8, [X0 + 0xE0]
	0x03440564 LDR X25, [X25 + 0x688]
	0x03440568 CBNZ W8, 0x3440570
	0x0344056C BL 0x1C16DFC
	0x03440570 ADD X8, X31, 0x8
	0x03440574 MOV X0, X31
	0x03440578 BL 0x32C4770
	0x0344057C LDUR V0, [X31 + 0x8]
	0x03440580 LDR X9, [X31 + 0x18]
	0x03440584 LDR X2, [X25]
	0x03440588 ADD X8, X31, 0x20
	0x0344058C STP X20, X21, [X31 + 0x60]
	0x03440590 ORR X20, X8, 0xF
	0x03440594 MOVN W10, 0x0
	0x03440598 ADD X1, X31, 0x20
	0x0344059C MOV X0, X20
	0x034405A0 STP X24, X23, [X31 + 0x48]
	0x034405A4 STR X22, [X31 + 0x58]
	0x034405A8 STUR V0, [X31 + 0x28]
	0x034405AC STP X9, X19, [X31 + 0x38]
	0x034405B0 STR W10, [X31 + 0x20]
	0x034405B4 BL 0x21914B8
	0x034405B8 MOV X0, X20
	0x034405BC MOV X1, X31
	0x034405C0 BL 0x32C47F8
	0x034405C4 LDP X20, X19, [X31 + 0xD0]
	0x034405C8 LDP X22, X21, [X31 + 0xC0]
	0x034405CC LDP X24, X23, [X31 + 0xB0]
	0x034405D0 LDP X26, X25, [X31 + 0xA0]
	0x034405D4 LDR X30, [X31 + 0x90]
	0x034405D8 ADD X31, X31, 0xE0
	0x034405DC RET
	0x034405E0 SUB X31, X31, 0xE0
	0x034405E4 STR X30, [X31 + 0x90]
	0x034405E8 STP X26, X25, [X31 + 0xA0]
	0x034405EC STP X24, X23, [X31 + 0xB0]
	0x034405F0 STP X22, X21, [X31 + 0xC0]
	0x034405F4 STP X20, X19, [X31 + 0xD0]
	0x034405F8 ADRP X26, 0xF9D000
	0x034405FC ADRP X25, 0xCB6000
	0x03440600 LDRB W8, [X26 + 0x6B5]
	0x03440604 LDR X25, [X25 + 0x280]
	0x03440608 MOV X20, X5
	0x0344060C MOV X21, X4
	0x03440610 MOV X22, X3
	0x03440614 MOV X23, X2
	0x03440618 MOV X24, X1
	0x0344061C MOV X19, X0
	0x03440620 TBNZ X8, 0x0, 0x3440644
	0x03440624 ADRP X0, 0xCEF000
	0x03440628 LDR X0, [X0 + 0x690]
	0x0344062C BL 0x1C16CF4
	0x03440630 ADRP X0, 0xCB6000
	0x03440634 LDR X0, [X0 + 0x280]
	0x03440638 BL 0x1C16CF4
	0x0344063C MOVZ W8, 0x1
	0x03440640 STRB W8, [X26 + 0x6B5]
	0x03440644 LDR X0, [X25]
	0x03440648 MOVI V0.2D, 0x0
	0x0344064C STR X31, [X31 + 0x80]
	0x03440650 STP V0, V0, [X31 + 0x60]
	0x03440654 STP V0, V0, [X31 + 0x40]
	0x03440658 STP V0, V0, [X31 + 0x20]
	0x0344065C ADRP X25, 0xCEF000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X27, 0xF9E000
	014 Move X29, 0xCF0000
	015 Move X28, 0xCF0000
	016 Move X26, 0xCF0000
	017 Move W8, [X27+1704]
	018 Move X29, [X29+1520]
	019 Move X28, [X28+1528]
	020 Move X26, [X26+1536]
	021 Move W25, W6
	022 Move X20, X5
	023 Move X24, X4
	024 Move W21, W3
	025 Move X22, X2
	026 Move X23, X1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {58}
	032 Move X0, 0xCF0000
	033 Move X0, [X0+1544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCEF000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF0000
	039 Move X0, [X0+1520]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF0000
	042 Move X0, [X0+1552]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF0000
	045 Move X0, [X0+1536]
	046 Call 0x1C17CF4
	047 Move X0, 0xCF0000
	048 Move X0, [X0+1560]
	049 Call 0x1C17CF4
	050 Move X0, 0xCF0000
	051 Move X0, [X0+1528]
	052 Call 0x1C17CF4
	053 Move X0, 0xCBD000
	054 Move X0, [X0+928]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X27+1704], W8
	058 Move X0, [X29]
	059 And W27, W25, 1
	060 Call 0x1C17F10
	061 Move X2, [X28]
	062 Move X1, X31
	063 Move X3, X31
	064 Move X25, X0
	065 Call Jitter..ctor, X0, X1, X2
	066 Move X0, [X26]
	067 Call 0x1C17F10
	068 Move W1, 500
	069 Move W2, 4
	070 Move X3, X31
	071 Move X4, X25
	072 Move X5, X31
	073 Move X26, X0
	074 Call RetryConfiguration..ctor, X0, X1, X2, X3, X4
	075 Move X0, X19
	076 Move X1, X31
	077 Move [X19+24], X26
	078 Call Object..ctor, X0
	079 Move [X19+16], W27
	080 Move [X19+32], X22
	081 Move [X19+40], W21
	082 Move [X19+48], X23
	083 Move [X19+56], X24
	084 Move X8, 0xCBD000
	085 Move X8, [X8+928]
	086 Move X0, [X8]
	087 Call 0x1C17F10
	088 Move X1, X23
	089 Move X2, X22
	090 Move W3, W21
	091 Move X4, X31
	092 Move X24, X0
	093 Call UriBuilder..ctor, X0, X1, X2, X3
	094 Compare X24, 0
	095 JumpIfEqual {173}
	096 Move X21, 0xCF0000
	097 Move X23, 0xCF0000
	098 Move X21, [X21+1544]
	099 Move X23, [X23+1552]
	100 Move X0, X24
	101 Move X1, X31
	102 Call UriBuilder.get_Uri, X0
	103 Move X8, [X21]
	104 Move X21, X0
	105 Move X0, X8
	106 Call 0x1C17F10
	107 Move W3, 15
	108 Move X1, X21
	109 Move X2, X20
	110 Move X4, X31
	111 Move X22, X0
	112 Call ApiClient..ctor, X0, X1, X2, X3
	113 Move [X19+72], X22
	114 Move X0, [X23]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X23]
	120 Move X8, [X0+184]
	121 Move X0, X19
	122 Move X1, [X8]
	123 Call Client.set_Logger, X0, X1
	124 Compare X20, 0
	125 JumpIfEqual {173}
	126 Move X10, 0xCEF000
	127 Move X8, [X20]
	128 Move X10, [X10+1976]
	129 Move X21, 0xCF0000
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move X1, [X10]
	132 Move X21, [X21+1560]
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X20
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X20
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X8, [X21]
	152 Move X20, X0
	153 Move X0, X8
	154 Call 0x1C17F10
	155 Move X1, X20
	156 Move X2, X31
	157 Move X21, X0
	158 Call RetryInvoker..ctor, X0, X1
	159 Move [X19+88], X21
	160 Move X20, [X31+80]
	161 Move X19, [X31+88]
	162 Move X22, [X31+64]
	163 Move X21, [X31+72]
	164 Move X24, [X31+48]
	165 Move X23, [X31+56]
	166 Move X26, [X31+32]
	167 Move X25, [X31+40]
	168 Move X28, [X31+16]
	169 Move X27, [X31+24]
	170 Move X29, [X31+96]
	171 Move X30, [X31+104]
	172 Return 
	173 Call 0x1C17F20

Method: System.Void .ctor(System.Uri uri, System.String serverKey)

Disassembly:
	0x034406BC MOV X1, X31
	0x034406C0 BL 0x32C47F8
	0x034406C4 LDP X20, X19, [X31 + 0xD0]
	0x034406C8 LDP X22, X21, [X31 + 0xC0]
	0x034406CC LDP X24, X23, [X31 + 0xB0]
	0x034406D0 LDP X26, X25, [X31 + 0xA0]
	0x034406D4 LDR X30, [X31 + 0x90]
	0x034406D8 ADD X31, X31, 0xE0
	0x034406DC RET
	0x034406E0 SUB X31, X31, 0xE0
	0x034406E4 STP X29, X30, [X31 + 0x80]
	0x034406E8 STP X28, X27, [X31 + 0x90]
	0x034406EC STP X26, X25, [X31 + 0xA0]
	0x034406F0 STP X24, X23, [X31 + 0xB0]
	0x034406F4 STP X22, X21, [X31 + 0xC0]
	0x034406F8 STP X20, X19, [X31 + 0xD0]
	0x034406FC ADRP X28, 0xF9D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Move X20, X1
	007 Move X21, X0
	008 Move W0, W31
	009 Move W1, W31
	010 Move X2, X31
	011 Call HttpRequestAdapter.WithGzip, X0, X1
	012 Move X1, X20
	013 Move X2, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W4, 1
	017 Move X3, X0
	018 Move X0, X21
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]

Method: System.Void .ctor(System.Uri uri, System.String serverKey, Nakama.IHttpAdapter adapter, System.Boolean autoRefreshSession = True)

Disassembly:
	0x03440700 ADRP X27, 0xCEE000
	0x03440704 LDRB W8, [X28 + 0x6B6]
	0x03440708 LDR X27, [X27 + 0x4A8]
	0x0344070C MOV W19, W7
	0x03440710 MOV W26, W6
	0x03440714 MOV X20, X5
	0x03440718 MOV X21, X4
	0x0344071C MOV X22, X3
	0x03440720 MOV X23, X2
	0x03440724 MOV X24, X1
	0x03440728 MOV X25, X0
	0x0344072C TBNZ X8, 0x0, 0x3440768
	0x03440730 ADRP X0, 0xCEE000
	0x03440734 LDR X0, [X0 + 0x4B0]
	0x03440738 BL 0x1C16CF4
	0x0344073C ADRP X0, 0xCEF000
	0x03440740 LDR X0, [X0 + 0x698]
	0x03440744 BL 0x1C16CF4
	0x03440748 ADRP X0, 0xCEE000
	0x0344074C LDR X0, [X0 + 0x4C0]
	0x03440750 BL 0x1C16CF4
	0x03440754 ADRP X0, 0xCEE000
	0x03440758 LDR X0, [X0 + 0x4A8]
	0x0344075C BL 0x1C16CF4
	0x03440760 MOVZ W8, 0x1
	0x03440764 STRB W8, [X28 + 0x6B6]
	0x03440768 LDR X0, [X27]
	0x0344076C MOVI V0.2D, 0x0
	0x03440770 STP V0, V0, [X31 + 0x60]
	0x03440774 STP V0, V0, [X31 + 0x40]
	0x03440778 STP V0, V0, [X31 + 0x20]
	0x0344077C STP V0, V0, [X31]
	0x03440780 ADRP X27, 0xCEE000
	0x03440784 LDR W8, [X0 + 0xE0]
	0x03440788 LDP X29, X28, [X31 + 0xE0]
	0x0344078C LDR X27, [X27 + 0x4B0]
	0x03440790 CBNZ W8, 0x3440798
	0x03440794 BL 0x1C16DFC
	0x03440798 LDR X0, [X27]
	0x0344079C ADD X8, X31, 0x0
	0x034407A0 AND W27, W26, 0x1
	0x034407A4 ORR X26, X8, 0xF
	0x034407A8 MOV X8, X26
	0x034407AC BL 0x263221C
	0x034407B0 STP X25, X24, [X31 + 0x20]
	0x034407B4 STP X23, X22, [X31 + 0x30]
	0x034407B8 STP X21, X20, [X31 + 0x40]
	0x034407BC STRB W27, [X31 + 0x50]
	0x034407C0 STR W19, [X31 + 0x54]
	0x034407C4 ADRP X8, 0xCEF000
	0x034407C8 LDR X8, [X8 + 0x698]
	0x034407CC ADD X1, X31, 0x0
	0x034407D0 MOV X0, X26
	0x034407D4 STP X28, X29, [X31 + 0x58]
	0x034407D8 LDR X2, [X8]
	0x034407DC MOVN W8, 0x0
	0x034407E0 STR W8, [X31]
	0x034407E4 BL 0x1FCCC14
	0x034407E8 ADRP X8, 0xCEE000
	0x034407EC LDR X8, [X8 + 0x4C0]
	0x034407F0 MOV X0, X26
	0x034407F4 LDR X1, [X8]
	0x034407F8 BL 0x2632230
	0x034407FC LDP X20, X19, [X31 + 0xD0]
	0x03440800 LDP X22, X21, [X31 + 0xC0]
	0x03440804 LDP X24, X23, [X31 + 0xB0]
	0x03440808 LDP X26, X25, [X31 + 0xA0]
	0x0344080C LDP X28, X27, [X31 + 0x90]
	0x03440810 LDP X29, X30, [X31 + 0x80]
	0x03440814 ADD X31, X31, 0xE0
	0x03440818 RET
	0x0344081C SUB X31, X31, 0xC0
	0x03440820 STR X30, [X31 + 0x80]
	0x03440824 STP X24, X23, [X31 + 0x90]
	0x03440828 STP X22, X21, [X31 + 0xA0]
	0x0344082C STP X20, X19, [X31 + 0xB0]
	0x03440830 ADRP X24, 0xF9D000
	0x03440834 ADRP X23, 0xCB6000
	0x03440838 LDRB W8, [X24 + 0x6B7]
	0x0344083C LDR X23, [X23 + 0x280]
	0x03440840 MOV X20, X3
	0x03440844 MOV X21, X2
	0x03440848 MOV X22, X1
	0x0344084C MOV X19, X0
	0x03440850 TBNZ X8, 0x0, 0x3440874
	0x03440854 ADRP X0, 0xCEF000
	0x03440858 LDR X0, [X0 + 0x6A0]
	0x0344085C BL 0x1C16CF4
	0x03440860 ADRP X0, 0xCB6000
	0x03440864 LDR X0, [X0 + 0x280]
	0x03440868 BL 0x1C16CF4
	0x0344086C MOVZ W8, 0x1
	0x03440870 STRB W8, [X24 + 0x6B7]
	0x03440874 LDR X0, [X23]
	0x03440878 MOVI V0.2D, 0x0
	0x0344087C STR X31, [X31 + 0x70]
	0x03440880 STP V0, V0, [X31 + 0x50]
	0x03440884 STP V0, V0, [X31 + 0x30]
	0x03440888 STR V0, [X31 + 0x2]
	0x0344088C ADRP X23, 0xCEF000
	0x03440890 LDR W8, [X0 + 0xE0]
	0x03440894 LDR X23, [X23 + 0x6A0]
	0x03440898 CBNZ W8, 0x34408A0
	0x0344089C BL 0x1C16DFC
	0x034408A0 ADD X8, X31, 0x8
	0x034408A4 MOV X0, X31
	0x034408A8 BL 0x32C4770
	0x034408AC LDUR V0, [X31 + 0x8]
	0x034408B0 LDR X9, [X31 + 0x18]
	0x034408B4 LDR X2, [X23]
	0x034408B8 ADD X8, X31, 0x20
	0x034408BC STP X20, X21, [X31 + 0x50]
	0x034408C0 ORR X20, X8, 0xF
	0x034408C4 MOVN W10, 0x0
	0x034408C8 ADD X1, X31, 0x20
	0x034408CC MOV X0, X20
	0x034408D0 STP X19, X22, [X31 + 0x40]
	0x034408D4 STUR V0, [X31 + 0x28]
	0x034408D8 STR X9, [X31 + 0x38]
	0x034408DC STR W10, [X31 + 0x20]
	0x034408E0 BL 0x21916B8
	0x034408E4 MOV X0, X20
	0x034408E8 MOV X1, X31
	0x034408EC BL 0x32C47F8
	0x034408F0 LDP X20, X19, [X31 + 0xB0]
	0x034408F4 LDP X22, X21, [X31 + 0xA0]
	0x034408F8 LDP X24, X23, [X31 + 0x90]
	0x034408FC LDR X30, [X31 + 0x80]
	0x03440900 ADD X31, X31, 0xC0
	0x03440904 RET
	0x03440908 SUB X31, X31, 0xE0
	0x0344090C STR X30, [X31 + 0x90]
	0x03440910 STP X26, X25, [X31 + 0xA0]
	0x03440914 STP X24, X23, [X31 + 0xB0]
	0x03440918 STP X22, X21, [X31 + 0xC0]
	0x0344091C STP X20, X19, [X31 + 0xD0]
	0x03440920 ADRP X26, 0xF9D000
	0x03440924 ADRP X25, 0xCB6000
	0x03440928 LDRB W8, [X26 + 0x6B8]
	0x0344092C LDR X25, [X25 + 0x280]
	0x03440930 MOV X20, X5
	0x03440934 MOV X21, X4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0xF9E000
	012 Move X26, 0xCF0000
	013 Move X25, 0xCF0000
	014 Move X24, 0xCF0000
	015 Move W8, [X27+1705]
	016 Move X26, [X26+1520]
	017 Move X25, [X25+1528]
	018 Move X24, [X24+1536]
	019 Move W23, W4
	020 Move X20, X3
	021 Move X22, X2
	022 Move X21, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {51}
	028 Move X0, 0xCF0000
	029 Move X0, [X0+1544]
	030 Call 0x1C17CF4
	031 Move X0, 0xCEF000
	032 Move X0, [X0+1976]
	033 Call 0x1C17CF4
	034 Move X0, 0xCF0000
	035 Move X0, [X0+1520]
	036 Call 0x1C17CF4
	037 Move X0, 0xCF0000
	038 Move X0, [X0+1552]
	039 Call 0x1C17CF4
	040 Move X0, 0xCF0000
	041 Move X0, [X0+1536]
	042 Call 0x1C17CF4
	043 Move X0, 0xCF0000
	044 Move X0, [X0+1560]
	045 Call 0x1C17CF4
	046 Move X0, 0xCF0000
	047 Move X0, [X0+1528]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X27+1705], W8
	051 Move X0, [X26]
	052 And W26, W23, 1
	053 Call 0x1C17F10
	054 Move X2, [X25]
	055 Move X1, X31
	056 Move X3, X31
	057 Move X23, X0
	058 Call Jitter..ctor, X0, X1, X2
	059 Move X0, [X24]
	060 Call 0x1C17F10
	061 Move W1, 500
	062 Move W2, 4
	063 Move X3, X31
	064 Move X4, X23
	065 Move X5, X31
	066 Move X24, X0
	067 Call RetryConfiguration..ctor, X0, X1, X2, X3, X4
	068 Move X0, X19
	069 Move X1, X31
	070 Move [X19+24], X24
	071 Call Object..ctor, X0
	072 Move [X19+16], W26
	073 Compare X21, 0
	074 JumpIfEqual {158}
	075 Move X24, 0xCF0000
	076 Move X23, 0xCF0000
	077 Move X24, [X24+1544]
	078 Move X23, [X23+1552]
	079 Move X0, X21
	080 Move X1, X31
	081 Call Uri.get_Host, X0
	082 Move [X19+32], X0
	083 Move X0, X21
	084 Move X1, X31
	085 Call Uri.get_Port, X0
	086 Move [X19+40], W0
	087 Move X0, X21
	088 Move X1, X31
	089 Call Uri.get_Scheme, X0
	090 Move [X19+48], X0
	091 Move [X19+56], X22
	092 Move X0, [X24]
	093 Call 0x1C17F10
	094 Move W3, 15
	095 Move X1, X21
	096 Move X2, X20
	097 Move X4, X31
	098 Move X22, X0
	099 Call ApiClient..ctor, X0, X1, X2, X3
	100 Move [X19+72], X22
	101 Move X0, [X23]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1C17DFC
	106 Move X0, [X23]
	107 Move X8, [X0+184]
	108 Move X0, X19
	109 Move X1, [X8]
	110 Call Client.set_Logger, X0, X1
	111 Compare X20, 0
	112 JumpIfEqual {158}
	113 Move X10, 0xCEF000
	114 Move X8, [X20]
	115 Move X10, [X10+1976]
	116 Move X21, 0xCF0000
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Move X1, [X10]
	119 Move X21, [X21+1560]
	120 Compare X9, 0
	121 JumpIfEqual {128}
	122 Move X10, [X8+176]
	123 Add X10, X10, 8
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Subtract X9, X9, 1
	127 Add X10, X10, 16
	128 Move X0, X20
	129 Move W2, W31
	130 Call 0x1C5D788
	131 NotImplemented "Instruction LDRSW not yet implemented."
	132 Add X8, X8, X9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X1, [X0+8]
	136 Move X0, X20
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X8, [X21]
	139 Move X20, X0
	140 Move X0, X8
	141 Call 0x1C17F10
	142 Move X1, X20
	143 Move X2, X31
	144 Move X21, X0
	145 Call RetryInvoker..ctor, X0, X1
	146 Move [X19+88], X21
	147 Move X20, [X31+64]
	148 Move X19, [X31+72]
	149 Move X22, [X31+48]
	150 Move X21, [X31+56]
	151 Move X24, [X31+32]
	152 Move X23, [X31+40]
	153 Move X26, [X31+16]
	154 Move X25, [X31+24]
	155 Move X30, [X31+80]
	156 Move X27, [X31+88]
	157 Return 
	158 Call 0x1C17F20

Method: System.Threading.Tasks.Task AddFriendsAsync(Nakama.ISession session, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03440938 MOV X22, X3
	0x0344093C MOV X23, X2
	0x03440940 MOV X24, X1
	0x03440944 MOV X19, X0
	0x03440948 TBNZ X8, 0x0, 0x344096C
	0x0344094C ADRP X0, 0xCEF000
	0x03440950 LDR X0, [X0 + 0x6A8]
	0x03440954 BL 0x1C16CF4
	0x03440958 ADRP X0, 0xCB6000
	0x0344095C LDR X0, [X0 + 0x280]
	0x03440960 BL 0x1C16CF4
	0x03440964 MOVZ W8, 0x1
	0x03440968 STRB W8, [X26 + 0x6B8]
	0x0344096C LDR X0, [X25]
	0x03440970 MOVI V0.2D, 0x0
	0x03440974 STR X31, [X31 + 0x80]
	0x03440978 STP V0, V0, [X31 + 0x60]
	0x0344097C STP V0, V0, [X31 + 0x40]
	0x03440980 STP V0, V0, [X31 + 0x20]
	0x03440984 ADRP X25, 0xCEF000
	0x03440988 LDR W8, [X0 + 0xE0]
	0x0344098C LDR X25, [X25 + 0x6A8]
	0x03440990 CBNZ W8, 0x3440998
	0x03440994 BL 0x1C16DFC
	0x03440998 ADD X8, X31, 0x8
	0x0344099C MOV X0, X31
	0x034409A0 BL 0x32C4770
	0x034409A4 LDUR V0, [X31 + 0x8]
	0x034409A8 LDR X9, [X31 + 0x18]
	0x034409AC LDR X2, [X25]
	0x034409B0 ADD X8, X31, 0x20
	0x034409B4 STP X20, X21, [X31 + 0x60]
	0x034409B8 ORR X20, X8, 0xF
	0x034409BC MOVN W10, 0x0
	0x034409C0 ADD X1, X31, 0x20
	0x034409C4 MOV X0, X20
	0x034409C8 STP X24, X23, [X31 + 0x48]
	0x034409CC STR X22, [X31 + 0x58]
	0x034409D0 STUR V0, [X31 + 0x28]
	0x034409D4 STP X9, X19, [X31 + 0x38]
	0x034409D8 STR W10, [X31 + 0x20]
	0x034409DC BL 0x21917B8
	0x034409E0 MOV X0, X20
	0x034409E4 MOV X1, X31
	0x034409E8 BL 0x32C47F8
	0x034409EC LDP X20, X19, [X31 + 0xD0]
	0x034409F0 LDP X22, X21, [X31 + 0xC0]
	0x034409F4 LDP X24, X23, [X31 + 0xB0]
	0x034409F8 LDP X26, X25, [X31 + 0xA0]
	0x034409FC LDR X30, [X31 + 0x90]
	0x03440A00 ADD X31, X31, 0xE0
	0x03440A04 RET
	0x03440A08 SUB X31, X31, 0xC0
	0x03440A0C STP X30, X25, [X31 + 0x80]
	0x03440A10 STP X24, X23, [X31 + 0x90]
	0x03440A14 STP X22, X21, [X31 + 0xA0]
	0x03440A18 STP X20, X19, [X31 + 0xB0]
	0x03440A1C ADRP X25, 0xF9D000
	0x03440A20 ADRP X24, 0xCB6000
	0x03440A24 LDRB W8, [X25 + 0x6B9]
	0x03440A28 LDR X24, [X24 + 0x280]
	0x03440A2C MOV X20, X4
	0x03440A30 MOV X21, X3
	0x03440A34 MOV X22, X2

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9E000
	012 Move X25, 0xCB7000
	013 Move W8, [X26+1706]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCF0000
	026 Move X0, [X0+1568]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB7000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1706], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCF0000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1568]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task AddGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03440A38 MOV X23, X1
	0x03440A3C MOV X19, X0
	0x03440A40 TBNZ X8, 0x0, 0x3440A64
	0x03440A44 ADRP X0, 0xCEF000
	0x03440A48 LDR X0, [X0 + 0x6B0]
	0x03440A4C BL 0x1C16CF4
	0x03440A50 ADRP X0, 0xCB6000
	0x03440A54 LDR X0, [X0 + 0x280]
	0x03440A58 BL 0x1C16CF4
	0x03440A5C MOVZ W8, 0x1
	0x03440A60 STRB W8, [X25 + 0x6B9]
	0x03440A64 LDR X0, [X24]
	0x03440A68 MOVI V0.2D, 0x0
	0x03440A6C STP V0, V0, [X31 + 0x60]
	0x03440A70 STP V0, V0, [X31 + 0x40]
	0x03440A74 STP V0, V0, [X31 + 0x20]
	0x03440A78 ADRP X24, 0xCEF000
	0x03440A7C LDR W8, [X0 + 0xE0]
	0x03440A80 LDR X24, [X24 + 0x6B0]
	0x03440A84 CBNZ W8, 0x3440A8C
	0x03440A88 BL 0x1C16DFC
	0x03440A8C ADD X8, X31, 0x8
	0x03440A90 MOV X0, X31
	0x03440A94 BL 0x32C4770
	0x03440A98 LDUR V0, [X31 + 0x8]
	0x03440A9C LDR X9, [X31 + 0x18]
	0x03440AA0 LDR X2, [X24]
	0x03440AA4 ADD X8, X31, 0x20
	0x03440AA8 STP X20, X21, [X31 + 0x58]
	0x03440AAC ORR X20, X8, 0xF
	0x03440AB0 MOVN W10, 0x0
	0x03440AB4 ADD X1, X31, 0x20
	0x03440AB8 MOV X0, X20
	0x03440ABC STP X23, X22, [X31 + 0x48]
	0x03440AC0 STUR V0, [X31 + 0x28]
	0x03440AC4 STP X9, X19, [X31 + 0x38]
	0x03440AC8 STR W10, [X31 + 0x20]
	0x03440ACC BL 0x21918B8
	0x03440AD0 MOV X0, X20
	0x03440AD4 MOV X1, X31
	0x03440AD8 BL 0x32C47F8
	0x03440ADC LDP X20, X19, [X31 + 0xB0]
	0x03440AE0 LDP X22, X21, [X31 + 0xA0]
	0x03440AE4 LDP X24, X23, [X31 + 0x90]
	0x03440AE8 LDP X30, X25, [X31 + 0x80]
	0x03440AEC ADD X31, X31, 0xC0
	0x03440AF0 RET
	0x03440AF4 SUB X31, X31, 0xC0
	0x03440AF8 STP X30, X25, [X31 + 0x80]
	0x03440AFC STP X24, X23, [X31 + 0x90]
	0x03440B00 STP X22, X21, [X31 + 0xA0]
	0x03440B04 STP X20, X19, [X31 + 0xB0]
	0x03440B08 ADRP X25, 0xF9D000
	0x03440B0C ADRP X24, 0xCB6000
	0x03440B10 LDRB W8, [X25 + 0x6BA]
	0x03440B14 LDR X24, [X24 + 0x280]
	0x03440B18 MOV X20, X4
	0x03440B1C MOV X21, X3
	0x03440B20 MOV X22, X2
	0x03440B24 MOV X23, X1
	0x03440B28 MOV X19, X0
	0x03440B2C TBNZ X8, 0x0, 0x3440B50
	0x03440B30 ADRP X0, 0xCEF000
	0x03440B34 LDR X0, [X0 + 0x6B8]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9E000
	012 Move X25, 0xCB7000
	013 Move W8, [X26+1707]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCF0000
	026 Move X0, [X0+1576]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB7000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1707], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCF0000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1576]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateAppleAsync(System.String token, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03440B38 BL 0x1C16CF4
	0x03440B3C ADRP X0, 0xCB6000
	0x03440B40 LDR X0, [X0 + 0x280]
	0x03440B44 BL 0x1C16CF4
	0x03440B48 MOVZ W8, 0x1
	0x03440B4C STRB W8, [X25 + 0x6BA]
	0x03440B50 LDR X0, [X24]
	0x03440B54 MOVI V0.2D, 0x0
	0x03440B58 STP V0, V0, [X31 + 0x60]
	0x03440B5C STP V0, V0, [X31 + 0x40]
	0x03440B60 STP V0, V0, [X31 + 0x20]
	0x03440B64 ADRP X24, 0xCEF000
	0x03440B68 LDR W8, [X0 + 0xE0]
	0x03440B6C LDR X24, [X24 + 0x6B8]
	0x03440B70 CBNZ W8, 0x3440B78
	0x03440B74 BL 0x1C16DFC
	0x03440B78 ADD X8, X31, 0x8
	0x03440B7C MOV X0, X31
	0x03440B80 BL 0x32C4770
	0x03440B84 LDUR V0, [X31 + 0x8]
	0x03440B88 LDR X9, [X31 + 0x18]
	0x03440B8C LDR X2, [X24]
	0x03440B90 ADD X8, X31, 0x20
	0x03440B94 STP X20, X21, [X31 + 0x58]
	0x03440B98 ORR X20, X8, 0xF
	0x03440B9C MOVN W10, 0x0
	0x03440BA0 ADD X1, X31, 0x20
	0x03440BA4 MOV X0, X20
	0x03440BA8 STP X23, X22, [X31 + 0x48]
	0x03440BAC STUR V0, [X31 + 0x28]
	0x03440BB0 STP X9, X19, [X31 + 0x38]
	0x03440BB4 STR W10, [X31 + 0x20]
	0x03440BB8 BL 0x21919B8
	0x03440BBC MOV X0, X20
	0x03440BC0 MOV X1, X31
	0x03440BC4 BL 0x32C47F8
	0x03440BC8 LDP X20, X19, [X31 + 0xB0]
	0x03440BCC LDP X22, X21, [X31 + 0xA0]
	0x03440BD0 LDP X24, X23, [X31 + 0x90]
	0x03440BD4 LDP X30, X25, [X31 + 0x80]
	0x03440BD8 ADD X31, X31, 0xC0
	0x03440BDC RET
	0x03440BE0 SUB X31, X31, 0xC0
	0x03440BE4 STP X30, X25, [X31 + 0x80]
	0x03440BE8 STP X24, X23, [X31 + 0x90]
	0x03440BEC STP X22, X21, [X31 + 0xA0]
	0x03440BF0 STP X20, X19, [X31 + 0xB0]
	0x03440BF4 ADRP X25, 0xF9D000
	0x03440BF8 ADRP X24, 0xCB6000
	0x03440BFC LDRB W8, [X25 + 0x6BB]
	0x03440C00 LDR X24, [X24 + 0x280]
	0x03440C04 MOV X20, X4
	0x03440C08 MOV X21, X3
	0x03440C0C MOV X22, X2
	0x03440C10 MOV X23, X1
	0x03440C14 MOV X19, X0
	0x03440C18 TBNZ X8, 0x0, 0x3440C3C
	0x03440C1C ADRP X0, 0xCEF000
	0x03440C20 LDR X0, [X0 + 0x6C0]
	0x03440C24 BL 0x1C16CF4
	0x03440C28 ADRP X0, 0xCB6000
	0x03440C2C LDR X0, [X0 + 0x280]
	0x03440C30 BL 0x1C16CF4
	0x03440C34 MOVZ W8, 0x1
	0x03440C38 STRB W8, [X25 + 0x6BB]
	0x03440C3C LDR X0, [X24]
	0x03440C40 MOVI V0.2D, 0x0
	0x03440C44 STP V0, V0, [X31 + 0x60]
	0x03440C48 STP V0, V0, [X31 + 0x40]
	0x03440C4C STP V0, V0, [X31 + 0x20]
	0x03440C50 ADRP X24, 0xCEF000
	0x03440C54 LDR W8, [X0 + 0xE0]
	0x03440C58 LDR X24, [X24 + 0x6C0]
	0x03440C5C CBNZ W8, 0x3440C64
	0x03440C60 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X27, 0xF9E000
	014 Move X26, 0xCF0000
	015 Move W8, [X27+1708]
	016 Move X26, [X26+1584]
	017 Move X19, X6
	018 Move X21, X5
	019 Move X22, X4
	020 Move W25, W3
	021 Move X20, X2
	022 Move X23, X1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCF0000
	029 Move X0, [X0+1592]
	030 Call 0x1C17CF4
	031 Move X0, 0xCF0000
	032 Move X0, [X0+1600]
	033 Call 0x1C17CF4
	034 Move X0, 0xCF0000
	035 Move X0, [X0+1608]
	036 Call 0x1C17CF4
	037 Move X0, 0xCF0000
	038 Move X0, [X0+1584]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+1708], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+64], V0
	045 Move [X31+72], V0
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31], V0
	049 Move [X31+8], V0
	050 Move X28, 0xCF0000
	051 Move X27, 0xCF0000
	052 Move X26, 0xCF0000
	053 Move W8, [X0+224]
	054 Move X28, [X28+1592]
	055 Move X27, [X27+1600]
	056 Move X26, [X26+1608]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X28]
	061 Add X8, X31, 0
	062 And W28, W25, 1
	063 Or X25, X8, 15
	064 Move X8, X25
	065 Call AsyncTaskMethodBuilder`1<Object>.Create
	066 Move X2, [X27]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Add X1, X31, 0
	071 Move X0, X25
	072 Move [X31+32], X24
	073 Move [X31+40], X23
	074 Move [X31+56], W28
	075 Move [X31+48], X22
	076 Move [X31+72], X19
	077 Move [X31+80], X21
	078 Move [X31+64], X20
	079 Move [X31], W8
	080 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	081 Move X1, [X26]
	082 Move X0, X25
	083 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	084 Move X20, [X31+176]
	085 Move X19, [X31+184]
	086 Move X22, [X31+160]
	087 Move X21, [X31+168]
	088 Move X24, [X31+144]
	089 Move X23, [X31+152]
	090 Move X26, [X31+128]
	091 Move X25, [X31+136]
	092 Move X28, [X31+112]
	093 Move X27, [X31+120]
	094 Move X30, [X31+96]
	095 Add X31, X31, 192
	096 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateCustomAsync(System.String id, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03440C64 ADD X8, X31, 0x8
	0x03440C68 MOV X0, X31
	0x03440C6C BL 0x32C4770
	0x03440C70 LDUR V0, [X31 + 0x8]
	0x03440C74 LDR X9, [X31 + 0x18]
	0x03440C78 LDR X2, [X24]
	0x03440C7C ADD X8, X31, 0x20
	0x03440C80 STP X20, X21, [X31 + 0x58]
	0x03440C84 ORR X20, X8, 0xF
	0x03440C88 MOVN W10, 0x0
	0x03440C8C ADD X1, X31, 0x20
	0x03440C90 MOV X0, X20
	0x03440C94 STP X23, X22, [X31 + 0x48]
	0x03440C98 STUR V0, [X31 + 0x28]
	0x03440C9C STP X9, X19, [X31 + 0x38]
	0x03440CA0 STR W10, [X31 + 0x20]
	0x03440CA4 BL 0x2191AB8
	0x03440CA8 MOV X0, X20
	0x03440CAC MOV X1, X31
	0x03440CB0 BL 0x32C47F8
	0x03440CB4 LDP X20, X19, [X31 + 0xB0]
	0x03440CB8 LDP X22, X21, [X31 + 0xA0]
	0x03440CBC LDP X24, X23, [X31 + 0x90]
	0x03440CC0 LDP X30, X25, [X31 + 0x80]
	0x03440CC4 ADD X31, X31, 0xC0
	0x03440CC8 RET
	0x03440CCC SUB X31, X31, 0xC0
	0x03440CD0 STP X30, X25, [X31 + 0x80]
	0x03440CD4 STP X24, X23, [X31 + 0x90]
	0x03440CD8 STP X22, X21, [X31 + 0xA0]
	0x03440CDC STP X20, X19, [X31 + 0xB0]
	0x03440CE0 ADRP X25, 0xF9D000
	0x03440CE4 ADRP X24, 0xCB6000
	0x03440CE8 LDRB W8, [X25 + 0x6BC]
	0x03440CEC LDR X24, [X24 + 0x280]
	0x03440CF0 MOV X20, X4
	0x03440CF4 MOV X21, X3
	0x03440CF8 MOV X23, X2
	0x03440CFC MOV X22, X1
	0x03440D00 MOV X19, X0
	0x03440D04 TBNZ X8, 0x0, 0x3440D28
	0x03440D08 ADRP X0, 0xCEF000
	0x03440D0C LDR X0, [X0 + 0x6C8]
	0x03440D10 BL 0x1C16CF4
	0x03440D14 ADRP X0, 0xCB6000
	0x03440D18 LDR X0, [X0 + 0x280]
	0x03440D1C BL 0x1C16CF4
	0x03440D20 MOVZ W8, 0x1
	0x03440D24 STRB W8, [X25 + 0x6BC]
	0x03440D28 LDR X0, [X24]
	0x03440D2C MOVI V0.2D, 0x0
	0x03440D30 STP V0, V0, [X31 + 0x60]
	0x03440D34 STP V0, V0, [X31 + 0x40]
	0x03440D38 STP V0, V0, [X31 + 0x20]
	0x03440D3C ADRP X24, 0xCEF000
	0x03440D40 LDR W8, [X0 + 0xE0]
	0x03440D44 LDR X24, [X24 + 0x6C8]
	0x03440D48 CBNZ W8, 0x3440D50
	0x03440D4C BL 0x1C16DFC
	0x03440D50 ADD X8, X31, 0x8
	0x03440D54 MOV X0, X31
	0x03440D58 BL 0x32C4770
	0x03440D5C LDUR V0, [X31 + 0x8]
	0x03440D60 LDR X9, [X31 + 0x18]
	0x03440D64 LDR X2, [X24]
	0x03440D68 ADD X8, X31, 0x20
	0x03440D6C STP X20, X21, [X31 + 0x50]
	0x03440D70 ORR X20, X8, 0xF
	0x03440D74 MOVN W10, 0x0
	0x03440D78 ADD X1, X31, 0x20
	0x03440D7C MOV X0, X20
	0x03440D80 STR X23, [X31 + 0x68]
	0x03440D84 STP X19, X22, [X31 + 0x40]
	0x03440D88 STUR V0, [X31 + 0x28]
	0x03440D8C STR X9, [X31 + 0x38]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X27, 0xF9E000
	014 Move X26, 0xCF0000
	015 Move W8, [X27+1709]
	016 Move X26, [X26+1584]
	017 Move X19, X6
	018 Move X21, X5
	019 Move X22, X4
	020 Move W25, W3
	021 Move X20, X2
	022 Move X23, X1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCF0000
	029 Move X0, [X0+1592]
	030 Call 0x1C17CF4
	031 Move X0, 0xCF0000
	032 Move X0, [X0+1616]
	033 Call 0x1C17CF4
	034 Move X0, 0xCF0000
	035 Move X0, [X0+1608]
	036 Call 0x1C17CF4
	037 Move X0, 0xCF0000
	038 Move X0, [X0+1584]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+1709], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+64], V0
	045 Move [X31+72], V0
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31], V0
	049 Move [X31+8], V0
	050 Move X28, 0xCF0000
	051 Move X27, 0xCF0000
	052 Move X26, 0xCF0000
	053 Move W8, [X0+224]
	054 Move X28, [X28+1592]
	055 Move X27, [X27+1616]
	056 Move X26, [X26+1608]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X28]
	061 Add X8, X31, 0
	062 And W28, W25, 1
	063 Or X25, X8, 15
	064 Move X8, X25
	065 Call AsyncTaskMethodBuilder`1<Object>.Create
	066 Move X2, [X27]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Add X1, X31, 0
	071 Move X0, X25
	072 Move [X31+32], X24
	073 Move [X31+40], X23
	074 Move [X31+56], W28
	075 Move [X31+48], X22
	076 Move [X31+72], X19
	077 Move [X31+80], X21
	078 Move [X31+64], X20
	079 Move [X31], W8
	080 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	081 Move X1, [X26]
	082 Move X0, X25
	083 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	084 Move X20, [X31+176]
	085 Move X19, [X31+184]
	086 Move X22, [X31+160]
	087 Move X21, [X31+168]
	088 Move X24, [X31+144]
	089 Move X23, [X31+152]
	090 Move X26, [X31+128]
	091 Move X25, [X31+136]
	092 Move X28, [X31+112]
	093 Move X27, [X31+120]
	094 Move X30, [X31+96]
	095 Add X31, X31, 192
	096 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateDeviceAsync(System.String id, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03440D90 STR W10, [X31 + 0x20]
	0x03440D94 BL 0x2191BB8
	0x03440D98 MOV X0, X20
	0x03440D9C MOV X1, X31
	0x03440DA0 BL 0x32C47F8
	0x03440DA4 LDP X20, X19, [X31 + 0xB0]
	0x03440DA8 LDP X22, X21, [X31 + 0xA0]
	0x03440DAC LDP X24, X23, [X31 + 0x90]
	0x03440DB0 LDP X30, X25, [X31 + 0x80]
	0x03440DB4 ADD X31, X31, 0xC0
	0x03440DB8 RET
	0x03440DBC SUB X31, X31, 0xC0
	0x03440DC0 STP X30, X25, [X31 + 0x80]
	0x03440DC4 STP X24, X23, [X31 + 0x90]
	0x03440DC8 STP X22, X21, [X31 + 0xA0]
	0x03440DCC STP X20, X19, [X31 + 0xB0]
	0x03440DD0 ADRP X25, 0xF9D000
	0x03440DD4 ADRP X24, 0xCB6000
	0x03440DD8 LDRB W8, [X25 + 0x6BD]
	0x03440DDC LDR X24, [X24 + 0x280]
	0x03440DE0 MOV X20, X4
	0x03440DE4 MOV X21, X3
	0x03440DE8 MOV X22, X2
	0x03440DEC MOV X23, X1
	0x03440DF0 MOV X19, X0
	0x03440DF4 TBNZ X8, 0x0, 0x3440E18
	0x03440DF8 ADRP X0, 0xCEF000
	0x03440DFC LDR X0, [X0 + 0x6D0]
	0x03440E00 BL 0x1C16CF4
	0x03440E04 ADRP X0, 0xCB6000
	0x03440E08 LDR X0, [X0 + 0x280]
	0x03440E0C BL 0x1C16CF4
	0x03440E10 MOVZ W8, 0x1
	0x03440E14 STRB W8, [X25 + 0x6BD]
	0x03440E18 LDR X0, [X24]
	0x03440E1C MOVI V0.2D, 0x0
	0x03440E20 STP V0, V0, [X31 + 0x60]
	0x03440E24 STP V0, V0, [X31 + 0x40]
	0x03440E28 STP V0, V0, [X31 + 0x20]
	0x03440E2C ADRP X24, 0xCEF000
	0x03440E30 LDR W8, [X0 + 0xE0]
	0x03440E34 LDR X24, [X24 + 0x6D0]
	0x03440E38 CBNZ W8, 0x3440E40
	0x03440E3C BL 0x1C16DFC
	0x03440E40 ADD X8, X31, 0x8
	0x03440E44 MOV X0, X31
	0x03440E48 BL 0x32C4770
	0x03440E4C LDUR V0, [X31 + 0x8]
	0x03440E50 LDR X9, [X31 + 0x18]
	0x03440E54 LDR X2, [X24]
	0x03440E58 ADD X8, X31, 0x20
	0x03440E5C STP X20, X21, [X31 + 0x58]
	0x03440E60 ORR X20, X8, 0xF
	0x03440E64 MOVN W10, 0x0
	0x03440E68 ADD X1, X31, 0x20
	0x03440E6C MOV X0, X20
	0x03440E70 STP X23, X22, [X31 + 0x48]
	0x03440E74 STUR V0, [X31 + 0x28]
	0x03440E78 STP X9, X19, [X31 + 0x38]
	0x03440E7C STR W10, [X31 + 0x20]
	0x03440E80 BL 0x2191CB8
	0x03440E84 MOV X0, X20
	0x03440E88 MOV X1, X31
	0x03440E8C BL 0x32C47F8
	0x03440E90 LDP X20, X19, [X31 + 0xB0]
	0x03440E94 LDP X22, X21, [X31 + 0xA0]
	0x03440E98 LDP X24, X23, [X31 + 0x90]
	0x03440E9C LDP X30, X25, [X31 + 0x80]
	0x03440EA0 ADD X31, X31, 0xC0
	0x03440EA4 RET
	0x03440EA8 SUB X31, X31, 0xE0
	0x03440EAC STR X30, [X31 + 0x90]
	0x03440EB0 STP X26, X25, [X31 + 0xA0]
	0x03440EB4 STP X24, X23, [X31 + 0xB0]
	0x03440EB8 STP X22, X21, [X31 + 0xC0]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X27, 0xF9E000
	014 Move X26, 0xCF0000
	015 Move W8, [X27+1710]
	016 Move X26, [X26+1584]
	017 Move X19, X6
	018 Move X21, X5
	019 Move X22, X4
	020 Move W25, W3
	021 Move X20, X2
	022 Move X23, X1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCF0000
	029 Move X0, [X0+1592]
	030 Call 0x1C17CF4
	031 Move X0, 0xCF0000
	032 Move X0, [X0+1624]
	033 Call 0x1C17CF4
	034 Move X0, 0xCF0000
	035 Move X0, [X0+1608]
	036 Call 0x1C17CF4
	037 Move X0, 0xCF0000
	038 Move X0, [X0+1584]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+1710], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+64], V0
	045 Move [X31+72], V0
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31], V0
	049 Move [X31+8], V0
	050 Move X28, 0xCF0000
	051 Move X27, 0xCF0000
	052 Move X26, 0xCF0000
	053 Move W8, [X0+224]
	054 Move X28, [X28+1592]
	055 Move X27, [X27+1624]
	056 Move X26, [X26+1608]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X28]
	061 Add X8, X31, 0
	062 And W28, W25, 1
	063 Or X25, X8, 15
	064 Move X8, X25
	065 Call AsyncTaskMethodBuilder`1<Object>.Create
	066 Move X2, [X27]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Add X1, X31, 0
	071 Move X0, X25
	072 Move [X31+32], X24
	073 Move [X31+40], X23
	074 Move [X31+56], W28
	075 Move [X31+48], X22
	076 Move [X31+72], X19
	077 Move [X31+80], X21
	078 Move [X31+64], X20
	079 Move [X31], W8
	080 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	081 Move X1, [X26]
	082 Move X0, X25
	083 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	084 Move X20, [X31+176]
	085 Move X19, [X31+184]
	086 Move X22, [X31+160]
	087 Move X21, [X31+168]
	088 Move X24, [X31+144]
	089 Move X23, [X31+152]
	090 Move X26, [X31+128]
	091 Move X25, [X31+136]
	092 Move X28, [X31+112]
	093 Move X27, [X31+120]
	094 Move X30, [X31+96]
	095 Add X31, X31, 192
	096 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateEmailAsync(System.String email, System.String password, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03440EBC STP X20, X19, [X31 + 0xD0]
	0x03440EC0 ADRP X26, 0xF9D000
	0x03440EC4 ADRP X25, 0xCB6000
	0x03440EC8 LDRB W8, [X26 + 0x6BE]
	0x03440ECC LDR X25, [X25 + 0x280]
	0x03440ED0 MOV X20, X5
	0x03440ED4 MOV X21, X4
	0x03440ED8 MOV X22, X3
	0x03440EDC MOV X23, X2
	0x03440EE0 MOV X24, X1
	0x03440EE4 MOV X19, X0
	0x03440EE8 TBNZ X8, 0x0, 0x3440F0C
	0x03440EEC ADRP X0, 0xCEF000
	0x03440EF0 LDR X0, [X0 + 0x6D8]
	0x03440EF4 BL 0x1C16CF4
	0x03440EF8 ADRP X0, 0xCB6000
	0x03440EFC LDR X0, [X0 + 0x280]
	0x03440F00 BL 0x1C16CF4
	0x03440F04 MOVZ W8, 0x1
	0x03440F08 STRB W8, [X26 + 0x6BE]
	0x03440F0C LDR X0, [X25]
	0x03440F10 MOVI V0.2D, 0x0
	0x03440F14 STR X31, [X31 + 0x80]
	0x03440F18 STP V0, V0, [X31 + 0x60]
	0x03440F1C STP V0, V0, [X31 + 0x40]
	0x03440F20 STP V0, V0, [X31 + 0x20]
	0x03440F24 ADRP X25, 0xCEF000
	0x03440F28 LDR W8, [X0 + 0xE0]
	0x03440F2C LDR X25, [X25 + 0x6D8]
	0x03440F30 CBNZ W8, 0x3440F38
	0x03440F34 BL 0x1C16DFC
	0x03440F38 ADD X8, X31, 0x8
	0x03440F3C MOV X0, X31
	0x03440F40 BL 0x32C4770
	0x03440F44 LDUR V0, [X31 + 0x8]
	0x03440F48 LDR X9, [X31 + 0x18]
	0x03440F4C LDR X2, [X25]
	0x03440F50 ADD X8, X31, 0x20
	0x03440F54 STP X20, X21, [X31 + 0x60]
	0x03440F58 ORR X20, X8, 0xF
	0x03440F5C MOVN W10, 0x0
	0x03440F60 ADD X1, X31, 0x20
	0x03440F64 MOV X0, X20
	0x03440F68 STP X24, X23, [X31 + 0x48]
	0x03440F6C STR X22, [X31 + 0x58]
	0x03440F70 STUR V0, [X31 + 0x28]
	0x03440F74 STP X9, X19, [X31 + 0x38]
	0x03440F78 STR W10, [X31 + 0x20]
	0x03440F7C BL 0x2191DB8
	0x03440F80 MOV X0, X20
	0x03440F84 MOV X1, X31
	0x03440F88 BL 0x32C47F8
	0x03440F8C LDP X20, X19, [X31 + 0xD0]
	0x03440F90 LDP X22, X21, [X31 + 0xC0]
	0x03440F94 LDP X24, X23, [X31 + 0xB0]
	0x03440F98 LDP X26, X25, [X31 + 0xA0]
	0x03440F9C LDR X30, [X31 + 0x90]
	0x03440FA0 ADD X31, X31, 0xE0
	0x03440FA4 RET
	0x03440FA8 SUB X31, X31, 0xE0
	0x03440FAC STR X30, [X31 + 0x90]
	0x03440FB0 STP X26, X25, [X31 + 0xA0]
	0x03440FB4 STP X24, X23, [X31 + 0xB0]
	0x03440FB8 STP X22, X21, [X31 + 0xC0]
	0x03440FBC STP X20, X19, [X31 + 0xD0]
	0x03440FC0 ADRP X26, 0xF9D000
	0x03440FC4 ADRP X25, 0xCB6000
	0x03440FC8 LDRB W8, [X26 + 0x6BF]
	0x03440FCC LDR X25, [X25 + 0x280]
	0x03440FD0 MOV X20, X5
	0x03440FD4 MOV X21, X4
	0x03440FD8 MOV X22, X3
	0x03440FDC MOV X23, X2
	0x03440FE0 MOV X24, X1
	0x03440FE4 MOV X19, X0
	0x03440FE8 TBNZ X8, 0x0, 0x344100C
	0x03440FEC ADRP X0, 0xCEF000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xF9E000
	015 Move X27, 0xCF0000
	016 Move W8, [X28+1711]
	017 Move X27, [X27+1584]
	018 Move X19, X7
	019 Move X21, X6
	020 Move X22, X5
	021 Move W26, W4
	022 Move X20, X3
	023 Move X23, X2
	024 Move X24, X1
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCF0000
	031 Move X0, [X0+1592]
	032 Call 0x1C17CF4
	033 Move X0, 0xCF0000
	034 Move X0, [X0+1632]
	035 Call 0x1C17CF4
	036 Move X0, 0xCF0000
	037 Move X0, [X0+1608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCF0000
	040 Move X0, [X0+1584]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1711], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X29, 0xCF0000
	054 Move X28, 0xCF0000
	055 Move X27, 0xCF0000
	056 Move W8, [X0+224]
	057 Move X29, [X29+1592]
	058 Move X28, [X28+1632]
	059 Move X27, [X27+1608]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X29]
	064 Add X8, X31, 0
	065 And W29, W26, 1
	066 Or X26, X8, 15
	067 Move X8, X26
	068 Call AsyncTaskMethodBuilder`1<Object>.Create
	069 Move X2, [X28]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W8, TEMP
	073 Add X1, X31, 0
	074 Move X0, X26
	075 Move [X31+32], X25
	076 Move [X31+40], X24
	077 Move [X31+64], W29
	078 Move [X31+48], X23
	079 Move [X31+56], X22
	080 Move [X31+80], X19
	081 Move [X31+88], X21
	082 Move [X31+72], X20
	083 Move [X31], W8
	084 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	085 Move X1, [X27]
	086 Move X0, X26
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+192]
	089 Move X19, [X31+200]
	090 Move X22, [X31+176]
	091 Move X21, [X31+184]
	092 Move X24, [X31+160]
	093 Move X23, [X31+168]
	094 Move X26, [X31+144]
	095 Move X25, [X31+152]
	096 Move X28, [X31+128]
	097 Move X27, [X31+136]
	098 Move X29, [X31+112]
	099 Move X30, [X31+120]
	100 Add X31, X31, 208
	101 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateFacebookAsync(System.String token, System.String username = null, System.Boolean create = True, System.Boolean import = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03440FF0 LDR X0, [X0 + 0x6E0]
	0x03440FF4 BL 0x1C16CF4
	0x03440FF8 ADRP X0, 0xCB6000
	0x03440FFC LDR X0, [X0 + 0x280]
	0x03441000 BL 0x1C16CF4
	0x03441004 MOVZ W8, 0x1
	0x03441008 STRB W8, [X26 + 0x6BF]
	0x0344100C LDR X0, [X25]
	0x03441010 MOVI V0.2D, 0x0
	0x03441014 STR X31, [X31 + 0x80]
	0x03441018 STP V0, V0, [X31 + 0x60]
	0x0344101C STP V0, V0, [X31 + 0x40]
	0x03441020 STP V0, V0, [X31 + 0x20]
	0x03441024 ADRP X25, 0xCEE000
	0x03441028 LDR W8, [X0 + 0xE0]
	0x0344102C LDR X25, [X25 + 0x6E0]
	0x03441030 CBNZ W8, 0x3441038
	0x03441034 BL 0x1C16DFC
	0x03441038 ADD X8, X31, 0x8
	0x0344103C MOV X0, X31
	0x03441040 BL 0x32C4770
	0x03441044 LDUR V0, [X31 + 0x8]
	0x03441048 LDR X9, [X31 + 0x18]
	0x0344104C LDR X2, [X25]
	0x03441050 ADD X8, X31, 0x20
	0x03441054 STP X20, X21, [X31 + 0x60]
	0x03441058 ORR X20, X8, 0xF
	0x0344105C MOVN W10, 0x0
	0x03441060 ADD X1, X31, 0x20
	0x03441064 MOV X0, X20
	0x03441068 STP X24, X23, [X31 + 0x48]
	0x0344106C STR X22, [X31 + 0x58]
	0x03441070 STUR V0, [X31 + 0x28]
	0x03441074 STP X9, X19, [X31 + 0x38]
	0x03441078 STR W10, [X31 + 0x20]
	0x0344107C BL 0x2191EB8
	0x03441080 MOV X0, X20
	0x03441084 MOV X1, X31
	0x03441088 BL 0x32C47F8
	0x0344108C LDP X20, X19, [X31 + 0xD0]
	0x03441090 LDP X22, X21, [X31 + 0xC0]
	0x03441094 LDP X24, X23, [X31 + 0xB0]
	0x03441098 LDP X26, X25, [X31 + 0xA0]
	0x0344109C LDR X30, [X31 + 0x90]
	0x034410A0 ADD X31, X31, 0xE0
	0x034410A4 RET
	0x034410A8 SUB X31, X31, 0xA0
	0x034410AC STP X30, X25, [X31 + 0x60]
	0x034410B0 STP X24, X23, [X31 + 0x70]
	0x034410B4 STP X22, X21, [X31 + 0x80]
	0x034410B8 STP X20, X19, [X31 + 0x90]
	0x034410BC ADRP X24, 0xF9C000
	0x034410C0 ADRP X23, 0xCED000
	0x034410C4 LDRB W8, [X24 + 0x6C0]
	0x034410C8 LDR X23, [X23 + 0x2F8]
	0x034410CC MOV X19, X3
	0x034410D0 MOV X20, X2
	0x034410D4 MOV X21, X1
	0x034410D8 MOV X22, X0
	0x034410DC TBNZ X8, 0x0, 0x3441118
	0x034410E0 ADRP X0, 0xCED000
	0x034410E4 LDR X0, [X0 + 0x300]
	0x034410E8 BL 0x1C16CF4
	0x034410EC ADRP X0, 0xCEE000
	0x034410F0 LDR X0, [X0 + 0x6E8]
	0x034410F4 BL 0x1C16CF4
	0x034410F8 ADRP X0, 0xCED000
	0x034410FC LDR X0, [X0 + 0x310]
	0x03441100 BL 0x1C16CF4
	0x03441104 ADRP X0, 0xCED000
	0x03441108 LDR X0, [X0 + 0x2F8]
	0x0344110C BL 0x1C16CF4
	0x03441110 MOVZ W8, 0x1
	0x03441114 STRB W8, [X24 + 0x6C0]
	0x03441118 LDR X0, [X23]
	0x0344111C MOVI V0.2D, 0x0
	0x03441120 STR X31, [X31 + 0x50]
	0x03441124 STP V0, V0, [X31 + 0x30]
	0x03441128 STP V0, V0, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xF9D000
	015 Move X27, 0xCEF000
	016 Move W8, [X28+1712]
	017 Move X27, [X27+1584]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move W25, W4
	022 Move W26, W3
	023 Move X22, X2
	024 Move X23, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCEF000
	031 Move X0, [X0+1592]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEF000
	034 Move X0, [X0+1640]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEF000
	037 Move X0, [X0+1608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEF000
	040 Move X0, [X0+1584]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1712], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X29, 0xCEF000
	054 Move X28, 0xCEF000
	055 Move X27, 0xCEF000
	056 Move W8, [X0+224]
	057 Move X29, [X29+1592]
	058 Move X28, [X28+1640]
	059 Move X27, [X27+1608]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X29]
	064 Add X8, X31, 0
	065 And W29, W25, 1
	066 Or X25, X8, 15
	067 Move X8, X25
	068 And W26, W26, 1
	069 Call AsyncTaskMethodBuilder`1<Object>.Create
	070 Move X2, [X28]
	071 Move TEMP, 0
	072 Not TEMP
	073 Move W8, TEMP
	074 Add X1, X31, 0
	075 Move X0, X25
	076 Move [X31+32], X24
	077 Move [X31+40], X23
	078 Move [X31+64], X22
	079 Move [X31+56], W26
	080 Move [X31+72], W29
	081 Move [X31+48], X21
	082 Move [X31+80], X19
	083 Move [X31+88], X20
	084 Move [X31], W8
	085 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	086 Move X1, [X27]
	087 Move X0, X25
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X26, [X31+144]
	096 Move X25, [X31+152]
	097 Move X28, [X31+128]
	098 Move X27, [X31+136]
	099 Move X29, [X31+112]
	100 Move X30, [X31+120]
	101 Add X31, X31, 208
	102 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateGameCenterAsync(System.String bundleId, System.String playerId, System.String publicKeyUrl, System.String salt, System.String signature, System.String timestamp, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x0344112C STR V0, [X31]
	0x03441130 ADRP X23, 0xCED000
	0x03441134 ADRP X25, 0xCEE000
	0x03441138 ADRP X24, 0xCED000
	0x0344113C LDR W8, [X0 + 0xE0]
	0x03441140 LDR X23, [X23 + 0x300]
	0x03441144 LDR X25, [X25 + 0x6E8]
	0x03441148 LDR X24, [X24 + 0x310]
	0x0344114C CBNZ W8, 0x3441154
	0x03441150 BL 0x1C16DFC
	0x03441154 LDR X0, [X23]
	0x03441158 ADD X8, X31, 0x0
	0x0344115C ORR X23, X8, 0xF
	0x03441160 MOV X8, X23
	0x03441164 BL 0x263221C
	0x03441168 LDR X2, [X25]
	0x0344116C MOVN W8, 0x0
	0x03441170 ADD X1, X31, 0x0
	0x03441174 MOV X0, X23
	0x03441178 STP X22, X21, [X31 + 0x20]
	0x0344117C STP X19, X20, [X31 + 0x30]
	0x03441180 STR W8, [X31]
	0x03441184 BL 0x1FCCD14
	0x03441188 LDR X1, [X24]
	0x0344118C MOV X0, X23
	0x03441190 BL 0x2632230
	0x03441194 LDP X20, X19, [X31 + 0x90]
	0x03441198 LDP X22, X21, [X31 + 0x80]
	0x0344119C LDP X24, X23, [X31 + 0x70]
	0x034411A0 LDP X30, X25, [X31 + 0x60]
	0x034411A4 ADD X31, X31, 0xA0
	0x034411A8 RET
	0x034411AC SUB X31, X31, 0xB0
	0x034411B0 STR X30, [X31 + 0x60]
	0x034411B4 STP X26, X25, [X31 + 0x70]
	0x034411B8 STP X24, X23, [X31 + 0x80]
	0x034411BC STP X22, X21, [X31 + 0x90]
	0x034411C0 STP X20, X19, [X31 + 0xA0]
	0x034411C4 ADRP X25, 0xF9C000
	0x034411C8 ADRP X24, 0xCED000
	0x034411CC LDRB W8, [X25 + 0x6C1]
	0x034411D0 LDR X24, [X24 + 0x5B0]
	0x034411D4 MOV X19, X4
	0x034411D8 MOV X21, X3
	0x034411DC MOV X20, X2
	0x034411E0 MOV X22, X1
	0x034411E4 MOV X23, X0
	0x034411E8 TBNZ X8, 0x0, 0x3441224
	0x034411EC ADRP X0, 0xCED000
	0x034411F0 LDR X0, [X0 + 0x5B8]
	0x034411F4 BL 0x1C16CF4
	0x034411F8 ADRP X0, 0xCEE000
	0x034411FC LDR X0, [X0 + 0x6F0]
	0x03441200 BL 0x1C16CF4
	0x03441204 ADRP X0, 0xCED000
	0x03441208 LDR X0, [X0 + 0x5C8]
	0x0344120C BL 0x1C16CF4
	0x03441210 ADRP X0, 0xCED000
	0x03441214 LDR X0, [X0 + 0x5B0]
	0x03441218 BL 0x1C16CF4
	0x0344121C MOVZ W8, 0x1
	0x03441220 STRB W8, [X25 + 0x6C1]
	0x03441224 LDR X0, [X24]
	0x03441228 MOVI V0.2D, 0x0
	0x0344122C STP V0, V0, [X31 + 0x40]
	0x03441230 STP V0, V0, [X31 + 0x20]
	0x03441234 STP V0, V0, [X31]
	0x03441238 ADRP X24, 0xCED000
	0x0344123C ADRP X26, 0xCEE000
	0x03441240 ADRP X25, 0xCED000
	0x03441244 LDR W8, [X0 + 0xE0]
	0x03441248 LDR X24, [X24 + 0x5B8]
	0x0344124C LDR X26, [X26 + 0x6F0]
	0x03441250 LDR X25, [X25 + 0x5C8]
	0x03441254 CBNZ W8, 0x344125C
	0x03441258 BL 0x1C16DFC
	0x0344125C LDR X0, [X24]
	0x03441260 ADD X8, X31, 0x0
	0x03441264 ORR X24, X8, 0xF
	0x03441268 MOV X8, X24
	0x0344126C BL 0x263221C
	0x03441270 LDR X2, [X26]
	0x03441274 MOVN W8, 0x0

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X19, 0xF9D000
	015 Move W8, [X19+1713]
	016 Move X22, X4
	017 Move X23, X3
	018 Move X24, X2
	019 Move X25, X1
	020 Move X26, X0
	021 Move [X31+24], X6
	022 Move [X31+32], X7
	023 Move [X31+16], X5
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCEF000
	029 Move X0, [X0+1592]
	030 Call 0x1C17CF4
	031 Move X0, 0xCEF000
	032 Move X0, [X0+1648]
	033 Call 0x1C17CF4
	034 Move X0, 0xCEF000
	035 Move X0, [X0+1608]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEF000
	038 Move X0, [X0+1584]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X19+1713], W8
	042 Move X21, 0xCEF000
	043 Move X28, [X31+288]
	044 Move X29, [X31+296]
	045 Move X19, [X31+280]
	046 Move W27, [X31+272]
	047 Move X21, [X21+1592]
	048 Add X0, X31, 40
	049 Move W2, 136
	050 Move W1, W31
	051 Add X20, X31, 40
	052 Call 0x3EB2B10
	053 Move X8, 0xCEF000
	054 Move X8, [X8+1584]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X21]
	061 And W21, W27, 1
	062 Add X27, X20, 8
	063 Move X8, X27
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X8, [X31+16]
	066 Move [X31+72], X26
	067 Move [X31+80], X25
	068 Move [X31+88], X24
	069 Move [X31+96], X23
	070 Move [X31+136], W21
	071 Move [X31+104], X22
	072 Move [X31+112], X8
	073 Move X8, [X31+24]
	074 Move [X31+160], X28
	075 Add X1, X31, 40
	076 Move X0, X27
	077 Move [X31+120], X8
	078 Move [X31+128], X19
	079 Move X8, 0xCEF000
	080 Move X8, [X8+1648]
	081 Move X2, [X8]
	082 Move X8, [X31+32]
	083 Move [X31+144], X8
	084 Move [X31+152], X29
	085 Move TEMP, 0
	086 Not TEMP
	087 Move W8, TEMP
	088 Move [X31+40], W8
	089 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	090 Move X8, 0xCEF000
	091 Move X8, [X8+1608]
	092 Move X0, X27
	093 Move X1, [X8]
	094 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	095 Move X20, [X31+256]
	096 Move X19, [X31+264]
	097 Move X22, [X31+240]
	098 Move X21, [X31+248]
	099 Move X24, [X31+224]
	100 Move X23, [X31+232]
	101 Move X26, [X31+208]
	102 Move X25, [X31+216]
	103 Move X28, [X31+192]
	104 Move X27, [X31+200]
	105 Move X29, [X31+176]
	106 Move X30, [X31+184]
	107 Add X31, X31, 272
	108 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateGoogleAsync(System.String token, System.String username = null, System.Boolean create = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03441278 ADD X1, X31, 0x0
	0x0344127C MOV X0, X24
	0x03441280 STP X23, X22, [X31 + 0x20]
	0x03441284 STP X19, X21, [X31 + 0x38]
	0x03441288 STR X20, [X31 + 0x30]
	0x0344128C STR W8, [X31]
	0x03441290 BL 0x1FCCE14
	0x03441294 LDR X1, [X25]
	0x03441298 MOV X0, X24
	0x0344129C BL 0x2632230
	0x034412A0 LDP X20, X19, [X31 + 0xA0]
	0x034412A4 LDP X22, X21, [X31 + 0x90]
	0x034412A8 LDP X24, X23, [X31 + 0x80]
	0x034412AC LDP X26, X25, [X31 + 0x70]
	0x034412B0 LDR X30, [X31 + 0x60]
	0x034412B4 ADD X31, X31, 0xB0
	0x034412B8 RET
	0x034412BC SUB X31, X31, 0xD0
	0x034412C0 STR X30, [X31 + 0x70]
	0x034412C4 STP X28, X27, [X31 + 0x80]
	0x034412C8 STP X26, X25, [X31 + 0x90]
	0x034412CC STP X24, X23, [X31 + 0xA0]
	0x034412D0 STP X22, X21, [X31 + 0xB0]
	0x034412D4 STP X20, X19, [X31 + 0xC0]
	0x034412D8 ADRP X27, 0xF9C000
	0x034412DC ADRP X26, 0xCED000
	0x034412E0 LDRB W8, [X27 + 0x6C2]
	0x034412E4 LDR X26, [X26 + 0x770]
	0x034412E8 MOV X19, X6
	0x034412EC MOV X21, X5
	0x034412F0 MOV X20, X4
	0x034412F4 MOV X22, X3
	0x034412F8 MOV X23, X2
	0x034412FC MOV X24, X1
	0x03441300 MOV X25, X0
	0x03441304 TBNZ X8, 0x0, 0x3441340
	0x03441308 ADRP X0, 0xCED000
	0x0344130C LDR X0, [X0 + 0x778]
	0x03441310 BL 0x1C16CF4
	0x03441314 ADRP X0, 0xCEE000
	0x03441318 LDR X0, [X0 + 0x6F8]
	0x0344131C BL 0x1C16CF4
	0x03441320 ADRP X0, 0xCED000
	0x03441324 LDR X0, [X0 + 0x788]
	0x03441328 BL 0x1C16CF4
	0x0344132C ADRP X0, 0xCED000
	0x03441330 LDR X0, [X0 + 0x770]
	0x03441334 BL 0x1C16CF4
	0x03441338 MOVZ W8, 0x1
	0x0344133C STRB W8, [X27 + 0x6C2]
	0x03441340 LDR X0, [X26]
	0x03441344 MOVI V0.2D, 0x0
	0x03441348 STP V0, V0, [X31 + 0x50]
	0x0344134C STP V0, V0, [X31 + 0x30]
	0x03441350 STP V0, V0, [X31 + 0x10]
	0x03441354 STR V0, [X31]
	0x03441358 ADRP X26, 0xCED000
	0x0344135C ADRP X28, 0xCEE000
	0x03441360 ADRP X27, 0xCED000
	0x03441364 LDR W8, [X0 + 0xE0]
	0x03441368 LDR X26, [X26 + 0x778]
	0x0344136C LDR X28, [X28 + 0x6F8]
	0x03441370 LDR X27, [X27 + 0x788]
	0x03441374 CBNZ W8, 0x344137C
	0x03441378 BL 0x1C16DFC
	0x0344137C LDR X0, [X26]
	0x03441380 ADD X8, X31, 0x0
	0x03441384 ORR X26, X8, 0xF
	0x03441388 MOV X8, X26
	0x0344138C BL 0x263221C
	0x03441390 LDR X2, [X28]
	0x03441394 MOVN W8, 0x0
	0x03441398 ADD X1, X31, 0x0
	0x0344139C MOV X0, X26
	0x034413A0 STP X25, X24, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X27, 0xF9D000
	014 Move X26, 0xCEF000
	015 Move W8, [X27+1714]
	016 Move X26, [X26+1584]
	017 Move X19, X6
	018 Move X21, X5
	019 Move X22, X4
	020 Move W25, W3
	021 Move X20, X2
	022 Move X23, X1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCEF000
	029 Move X0, [X0+1592]
	030 Call 0x1C17CF4
	031 Move X0, 0xCEF000
	032 Move X0, [X0+1656]
	033 Call 0x1C17CF4
	034 Move X0, 0xCEF000
	035 Move X0, [X0+1608]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEF000
	038 Move X0, [X0+1584]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+1714], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+64], V0
	045 Move [X31+72], V0
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31], V0
	049 Move [X31+8], V0
	050 Move X28, 0xCEF000
	051 Move X27, 0xCEF000
	052 Move X26, 0xCEF000
	053 Move W8, [X0+224]
	054 Move X28, [X28+1592]
	055 Move X27, [X27+1656]
	056 Move X26, [X26+1608]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X28]
	061 Add X8, X31, 0
	062 And W28, W25, 1
	063 Or X25, X8, 15
	064 Move X8, X25
	065 Call AsyncTaskMethodBuilder`1<Object>.Create
	066 Move X2, [X27]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Add X1, X31, 0
	071 Move X0, X25
	072 Move [X31+32], X24
	073 Move [X31+40], X23
	074 Move [X31+56], W28
	075 Move [X31+48], X22
	076 Move [X31+72], X19
	077 Move [X31+80], X21
	078 Move [X31+64], X20
	079 Move [X31], W8
	080 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	081 Move X1, [X26]
	082 Move X0, X25
	083 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	084 Move X20, [X31+176]
	085 Move X19, [X31+184]
	086 Move X22, [X31+160]
	087 Move X21, [X31+168]
	088 Move X24, [X31+144]
	089 Move X23, [X31+152]
	090 Move X26, [X31+128]
	091 Move X25, [X31+136]
	092 Move X28, [X31+112]
	093 Move X27, [X31+120]
	094 Move X30, [X31+96]
	095 Add X31, X31, 192
	096 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.ISession> AuthenticateSteamAsync(System.String token, System.String username = null, System.Boolean create = True, System.Boolean import = True, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034413A4 STP X23, X22, [X31 + 0x30]
	0x034413A8 STP X19, X21, [X31 + 0x48]
	0x034413AC STR X20, [X31 + 0x40]
	0x034413B0 STR W8, [X31]
	0x034413B4 BL 0x1FCCF14
	0x034413B8 LDR X1, [X27]
	0x034413BC MOV X0, X26
	0x034413C0 BL 0x2632230
	0x034413C4 LDP X20, X19, [X31 + 0xC0]
	0x034413C8 LDP X22, X21, [X31 + 0xB0]
	0x034413CC LDP X24, X23, [X31 + 0xA0]
	0x034413D0 LDP X26, X25, [X31 + 0x90]
	0x034413D4 LDP X28, X27, [X31 + 0x80]
	0x034413D8 LDR X30, [X31 + 0x70]
	0x034413DC ADD X31, X31, 0xD0
	0x034413E0 RET
	0x034413E4 SUB X31, X31, 0xE0
	0x034413E8 STR X30, [X31 + 0x90]
	0x034413EC STP X26, X25, [X31 + 0xA0]
	0x034413F0 STP X24, X23, [X31 + 0xB0]
	0x034413F4 STP X22, X21, [X31 + 0xC0]
	0x034413F8 STP X20, X19, [X31 + 0xD0]
	0x034413FC ADRP X26, 0xF9C000
	0x03441400 ADRP X25, 0xCB5000
	0x03441404 LDRB W8, [X26 + 0x6C3]
	0x03441408 LDR X25, [X25 + 0x280]
	0x0344140C MOV X20, X5
	0x03441410 MOV X21, X4
	0x03441414 MOV X22, X3
	0x03441418 MOV X23, X2
	0x0344141C MOV X24, X1
	0x03441420 MOV X19, X0
	0x03441424 TBNZ X8, 0x0, 0x3441448
	0x03441428 ADRP X0, 0xCEE000
	0x0344142C LDR X0, [X0 + 0x700]
	0x03441430 BL 0x1C16CF4
	0x03441434 ADRP X0, 0xCB5000
	0x03441438 LDR X0, [X0 + 0x280]
	0x0344143C BL 0x1C16CF4
	0x03441440 MOVZ W8, 0x1
	0x03441444 STRB W8, [X26 + 0x6C3]
	0x03441448 LDR X0, [X25]
	0x0344144C MOVI V0.2D, 0x0
	0x03441450 STR X31, [X31 + 0x80]
	0x03441454 STP V0, V0, [X31 + 0x60]
	0x03441458 STP V0, V0, [X31 + 0x40]
	0x0344145C STP V0, V0, [X31 + 0x20]
	0x03441460 ADRP X25, 0xCEE000
	0x03441464 LDR W8, [X0 + 0xE0]
	0x03441468 LDR X25, [X25 + 0x700]
	0x0344146C CBNZ W8, 0x3441474
	0x03441470 BL 0x1C16DFC
	0x03441474 ADD X8, X31, 0x8
	0x03441478 MOV X0, X31
	0x0344147C BL 0x32C4770
	0x03441480 LDUR V0, [X31 + 0x8]
	0x03441484 LDR X9, [X31 + 0x18]
	0x03441488 LDR X2, [X25]
	0x0344148C ADD X8, X31, 0x20
	0x03441490 STP X20, X21, [X31 + 0x60]
	0x03441494 ORR X20, X8, 0xF
	0x03441498 MOVN W10, 0x0
	0x0344149C ADD X1, X31, 0x20
	0x034414A0 MOV X0, X20
	0x034414A4 STP X24, X23, [X31 + 0x48]
	0x034414A8 STRH W22, [X31 + 0x58]
	0x034414AC STUR V0, [X31 + 0x28]
	0x034414B0 STP X9, X19, [X31 + 0x38]
	0x034414B4 STR W10, [X31 + 0x20]
	0x034414B8 BL 0x2191FB8
	0x034414BC MOV X0, X20
	0x034414C0 MOV X1, X31
	0x034414C4 BL 0x32C47F8
	0x034414C8 LDP X20, X19, [X31 + 0xD0]
	0x034414CC LDP X22, X21, [X31 + 0xC0]
	0x034414D0 LDP X24, X23, [X31 + 0xB0]
	0x034414D4 LDP X26, X25, [X31 + 0xA0]
	0x034414D8 LDR X30, [X31 + 0x90]
	0x034414DC ADD X31, X31, 0xE0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xF9D000
	015 Move X27, 0xCEF000
	016 Move W8, [X28+1715]
	017 Move X27, [X27+1584]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move W25, W4
	022 Move W26, W3
	023 Move X22, X2
	024 Move X23, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCEF000
	031 Move X0, [X0+1592]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEF000
	034 Move X0, [X0+1664]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEF000
	037 Move X0, [X0+1608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEF000
	040 Move X0, [X0+1584]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1715], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], X31
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Move X29, 0xCEF000
	054 Move X28, 0xCEF000
	055 Move X27, 0xCEF000
	056 Move W8, [X0+224]
	057 Move X29, [X29+1592]
	058 Move X28, [X28+1664]
	059 Move X27, [X27+1608]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X29]
	064 Add X8, X31, 0
	065 And W29, W25, 1
	066 Or X25, X8, 15
	067 Move X8, X25
	068 And W26, W26, 1
	069 Call AsyncTaskMethodBuilder`1<Object>.Create
	070 Move X2, [X28]
	071 Move TEMP, 0
	072 Not TEMP
	073 Move W8, TEMP
	074 Add X1, X31, 0
	075 Move X0, X25
	076 Move [X31+32], X24
	077 Move [X31+40], X23
	078 Move [X31+64], X22
	079 Move [X31+56], W26
	080 Move [X31+72], W29
	081 Move [X31+48], X21
	082 Move [X31+80], X19
	083 Move [X31+88], X20
	084 Move [X31], W8
	085 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	086 Move X1, [X27]
	087 Move X0, X25
	088 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X26, [X31+144]
	096 Move X25, [X31+152]
	097 Move X28, [X31+128]
	098 Move X27, [X31+136]
	099 Move X29, [X31+112]
	100 Move X30, [X31+120]
	101 Add X31, X31, 208
	102 Return X0

Method: System.Threading.Tasks.Task BanGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034414E0 RET
	0x034414E4 SUB X31, X31, 0xE0
	0x034414E8 STR X30, [X31 + 0x90]
	0x034414EC STP X26, X25, [X31 + 0xA0]
	0x034414F0 STP X24, X23, [X31 + 0xB0]
	0x034414F4 STP X22, X21, [X31 + 0xC0]
	0x034414F8 STP X20, X19, [X31 + 0xD0]
	0x034414FC ADRP X26, 0xF9C000
	0x03441500 ADRP X25, 0xCB5000
	0x03441504 LDRB W8, [X26 + 0x6C4]
	0x03441508 LDR X25, [X25 + 0x280]
	0x0344150C MOV X20, X5
	0x03441510 MOV X21, X4
	0x03441514 MOV X22, X3
	0x03441518 MOV X23, X2
	0x0344151C MOV X24, X1
	0x03441520 MOV X19, X0
	0x03441524 TBNZ X8, 0x0, 0x3441548
	0x03441528 ADRP X0, 0xCEE000
	0x0344152C LDR X0, [X0 + 0x708]
	0x03441530 BL 0x1C16CF4
	0x03441534 ADRP X0, 0xCB5000
	0x03441538 LDR X0, [X0 + 0x280]
	0x0344153C BL 0x1C16CF4
	0x03441540 MOVZ W8, 0x1
	0x03441544 STRB W8, [X26 + 0x6C4]
	0x03441548 LDR X0, [X25]
	0x0344154C MOVI V0.2D, 0x0
	0x03441550 STR X31, [X31 + 0x80]
	0x03441554 STP V0, V0, [X31 + 0x60]
	0x03441558 STP V0, V0, [X31 + 0x40]
	0x0344155C STP V0, V0, [X31 + 0x20]
	0x03441560 ADRP X25, 0xCEE000
	0x03441564 LDR W8, [X0 + 0xE0]
	0x03441568 LDR X25, [X25 + 0x708]
	0x0344156C CBNZ W8, 0x3441574
	0x03441570 BL 0x1C16DFC
	0x03441574 ADD X8, X31, 0x8
	0x03441578 MOV X0, X31
	0x0344157C BL 0x32C4770
	0x03441580 LDUR V0, [X31 + 0x8]
	0x03441584 LDR X9, [X31 + 0x18]
	0x03441588 LDR X2, [X25]
	0x0344158C ADD X8, X31, 0x20
	0x03441590 STP X20, X21, [X31 + 0x60]
	0x03441594 ORR X20, X8, 0xF
	0x03441598 MOVN W10, 0x0
	0x0344159C ADD X1, X31, 0x20
	0x034415A0 MOV X0, X20
	0x034415A4 STP X24, X23, [X31 + 0x48]
	0x034415A8 STRH W22, [X31 + 0x58]
	0x034415AC STUR V0, [X31 + 0x28]
	0x034415B0 STP X9, X19, [X31 + 0x38]
	0x034415B4 STR W10, [X31 + 0x20]
	0x034415B8 BL 0x21920B8
	0x034415BC MOV X0, X20
	0x034415C0 MOV X1, X31
	0x034415C4 BL 0x32C47F8
	0x034415C8 LDP X20, X19, [X31 + 0xD0]
	0x034415CC LDP X22, X21, [X31 + 0xC0]
	0x034415D0 LDP X24, X23, [X31 + 0xB0]
	0x034415D4 LDP X26, X25, [X31 + 0xA0]
	0x034415D8 LDR X30, [X31 + 0x90]
	0x034415DC ADD X31, X31, 0xE0

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9D000
	012 Move X25, 0xCB6000
	013 Move W8, [X26+1716]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEF000
	026 Move X0, [X0+1672]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1716], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEF000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1672]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task BlockFriendsAsync(Nakama.ISession session, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034415E0 RET
	0x034415E4 SUB X31, X31, 0xC0
	0x034415E8 STP X30, X25, [X31 + 0x80]
	0x034415EC STP X24, X23, [X31 + 0x90]
	0x034415F0 STP X22, X21, [X31 + 0xA0]
	0x034415F4 STP X20, X19, [X31 + 0xB0]
	0x034415F8 ADRP X25, 0xF9C000
	0x034415FC ADRP X24, 0xCB5000
	0x03441600 LDRB W8, [X25 + 0x6C5]
	0x03441604 LDR X24, [X24 + 0x280]
	0x03441608 MOV X20, X4
	0x0344160C MOV X21, X3
	0x03441610 MOV X22, X2
	0x03441614 MOV X23, X1
	0x03441618 MOV X19, X0
	0x0344161C TBNZ X8, 0x0, 0x3441640
	0x03441620 ADRP X0, 0xCEE000
	0x03441624 LDR X0, [X0 + 0x710]
	0x03441628 BL 0x1C16CF4
	0x0344162C ADRP X0, 0xCB5000
	0x03441630 LDR X0, [X0 + 0x280]
	0x03441634 BL 0x1C16CF4
	0x03441638 MOVZ W8, 0x1
	0x0344163C STRB W8, [X25 + 0x6C5]
	0x03441640 LDR X0, [X24]
	0x03441644 MOVI V0.2D, 0x0
	0x03441648 STP V0, V0, [X31 + 0x60]
	0x0344164C STP V0, V0, [X31 + 0x40]
	0x03441650 STP V0, V0, [X31 + 0x20]
	0x03441654 ADRP X24, 0xCEE000
	0x03441658 LDR W8, [X0 + 0xE0]
	0x0344165C LDR X24, [X24 + 0x710]
	0x03441660 CBNZ W8, 0x3441668
	0x03441664 BL 0x1C16DFC
	0x03441668 ADD X8, X31, 0x8
	0x0344166C MOV X0, X31
	0x03441670 BL 0x32C4770
	0x03441674 LDUR V0, [X31 + 0x8]
	0x03441678 LDR X9, [X31 + 0x18]
	0x0344167C LDR X2, [X24]
	0x03441680 ADD X8, X31, 0x20
	0x03441684 STP X20, X21, [X31 + 0x58]
	0x03441688 ORR X20, X8, 0xF
	0x0344168C MOVN W10, 0x0
	0x03441690 ADD X1, X31, 0x20
	0x03441694 MOV X0, X20
	0x03441698 STP X23, X22, [X31 + 0x48]
	0x0344169C STUR V0, [X31 + 0x28]
	0x034416A0 STP X9, X19, [X31 + 0x38]
	0x034416A4 STR W10, [X31 + 0x20]
	0x034416A8 BL 0x21921B8
	0x034416AC MOV X0, X20
	0x034416B0 MOV X1, X31
	0x034416B4 BL 0x32C47F8
	0x034416B8 LDP X20, X19, [X31 + 0xB0]
	0x034416BC LDP X22, X21, [X31 + 0xA0]
	0x034416C0 LDP X24, X23, [X31 + 0x90]
	0x034416C4 LDP X30, X25, [X31 + 0x80]
	0x034416C8 ADD X31, X31, 0xC0
	0x034416CC RET
	0x034416D0 SUB X31, X31, 0xC0
	0x034416D4 STP X30, X25, [X31 + 0x80]
	0x034416D8 STP X24, X23, [X31 + 0x90]
	0x034416DC STP X22, X21, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9D000
	012 Move X25, 0xCB6000
	013 Move W8, [X26+1717]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEF000
	026 Move X0, [X0+1680]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1717], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEF000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1680]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiGroup> CreateGroupAsync(Nakama.ISession session, System.String name, System.String description = , System.String avatarUrl = null, System.String langTag = null, System.Boolean open = True, System.Int32 maxCount = 100, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034416E0 STP X20, X19, [X31 + 0xB0]
	0x034416E4 ADRP X25, 0xF9C000
	0x034416E8 ADRP X24, 0xCB5000
	0x034416EC LDRB W8, [X25 + 0x6C6]
	0x034416F0 LDR X24, [X24 + 0x280]
	0x034416F4 MOV X20, X4
	0x034416F8 MOV X21, X3
	0x034416FC MOV X22, X2
	0x03441700 MOV X23, X1
	0x03441704 MOV X19, X0
	0x03441708 TBNZ X8, 0x0, 0x344172C
	0x0344170C ADRP X0, 0xCEE000
	0x03441710 LDR X0, [X0 + 0x718]
	0x03441714 BL 0x1C16CF4
	0x03441718 ADRP X0, 0xCB5000
	0x0344171C LDR X0, [X0 + 0x280]
	0x03441720 BL 0x1C16CF4
	0x03441724 MOVZ W8, 0x1
	0x03441728 STRB W8, [X25 + 0x6C6]
	0x0344172C LDR X0, [X24]
	0x03441730 MOVI V0.2D, 0x0
	0x03441734 STP V0, V0, [X31 + 0x60]
	0x03441738 STP V0, V0, [X31 + 0x40]
	0x0344173C STP V0, V0, [X31 + 0x20]
	0x03441740 ADRP X24, 0xCEE000
	0x03441744 LDR W8, [X0 + 0xE0]
	0x03441748 LDR X24, [X24 + 0x718]
	0x0344174C CBNZ W8, 0x3441754
	0x03441750 BL 0x1C16DFC
	0x03441754 ADD X8, X31, 0x8
	0x03441758 MOV X0, X31
	0x0344175C BL 0x32C4770
	0x03441760 LDUR V0, [X31 + 0x8]
	0x03441764 LDR X9, [X31 + 0x18]
	0x03441768 LDR X2, [X24]
	0x0344176C ADD X8, X31, 0x20
	0x03441770 STP X20, X21, [X31 + 0x58]
	0x03441774 ORR X20, X8, 0xF
	0x03441778 MOVN W10, 0x0
	0x0344177C ADD X1, X31, 0x20
	0x03441780 MOV X0, X20
	0x03441784 STP X23, X22, [X31 + 0x48]
	0x03441788 STUR V0, [X31 + 0x28]
	0x0344178C STP X9, X19, [X31 + 0x38]
	0x03441790 STR W10, [X31 + 0x20]
	0x03441794 BL 0x21922B8
	0x03441798 MOV X0, X20
	0x0344179C MOV X1, X31
	0x034417A0 BL 0x32C47F8
	0x034417A4 LDP X20, X19, [X31 + 0xB0]
	0x034417A8 LDP X22, X21, [X31 + 0xA0]
	0x034417AC LDP X24, X23, [X31 + 0x90]
	0x034417B0 LDP X30, X25, [X31 + 0x80]
	0x034417B4 ADD X31, X31, 0xC0
	0x034417B8 RET
	0x034417BC SUB X31, X31, 0xE0
	0x034417C0 STR X30, [X31 + 0x90]
	0x034417C4 STP X26, X25, [X31 + 0xA0]
	0x034417C8 STP X24, X23, [X31 + 0xB0]
	0x034417CC STP X22, X21, [X31 + 0xC0]
	0x034417D0 STP X20, X19, [X31 + 0xD0]
	0x034417D4 ADRP X26, 0xF9C000
	0x034417D8 ADRP X25, 0xCB5000
	0x034417DC LDRB W8, [X26 + 0x6C7]
	0x034417E0 LDR X25, [X25 + 0x280]
	0x034417E4 MOV X20, X5
	0x034417E8 MOV X21, X4
	0x034417EC MOV X22, X3
	0x034417F0 MOV X23, X2
	0x034417F4 MOV X24, X1
	0x034417F8 MOV X19, X0
	0x034417FC TBNZ X8, 0x0, 0x3441820
	0x03441800 ADRP X0, 0xCEE000
	0x03441804 LDR X0, [X0 + 0x720]
	0x03441808 BL 0x1C16CF4
	0x0344180C ADRP X0, 0xCB5000
	0x03441810 LDR X0, [X0 + 0x280]
	0x03441814 BL 0x1C16CF4
	0x03441818 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X28, 0xF9D000
	015 Move X27, 0xCEE000
	016 Move W8, [X28+1718]
	017 Move X27, [X27+1192]
	018 Move W19, W7
	019 Move W26, W6
	020 Move X20, X5
	021 Move X21, X4
	022 Move X22, X3
	023 Move X23, X2
	024 Move X24, X1
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCEE000
	031 Move X0, [X0+1200]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEF000
	034 Move X0, [X0+1688]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEE000
	037 Move X0, [X0+1216]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEE000
	040 Move X0, [X0+1192]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1718], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], V0
	047 Move [X31+104], V0
	048 Move [X31+64], V0
	049 Move [X31+72], V0
	050 Move [X31+32], V0
	051 Move [X31+40], V0
	052 Move [X31], V0
	053 Move [X31+8], V0
	054 Move X27, 0xCEE000
	055 Move W8, [X0+224]
	056 Move X29, [X31+224]
	057 Move X28, [X31+232]
	058 Move X27, [X27+1200]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X27]
	063 Add X8, X31, 0
	064 And W27, W26, 1
	065 Or X26, X8, 15
	066 Move X8, X26
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move [X31+32], X25
	069 Move [X31+40], X24
	070 Move [X31+48], X23
	071 Move [X31+56], X22
	072 Move [X31+64], X21
	073 Move [X31+72], X20
	074 Move [X31+80], W27
	075 Move [X31+84], W19
	076 Move X8, 0xCEF000
	077 Move X8, [X8+1688]
	078 Add X1, X31, 0
	079 Move X0, X26
	080 Move [X31+88], X28
	081 Move [X31+96], X29
	082 Move X2, [X8]
	083 Move TEMP, 0
	084 Not TEMP
	085 Move W8, TEMP
	086 Move [X31], W8
	087 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	088 Move X8, 0xCEE000
	089 Move X8, [X8+1216]
	090 Move X0, X26
	091 Move X1, [X8]
	092 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	093 Move X20, [X31+208]
	094 Move X19, [X31+216]
	095 Move X22, [X31+192]
	096 Move X21, [X31+200]
	097 Move X24, [X31+176]
	098 Move X23, [X31+184]
	099 Move X26, [X31+160]
	100 Move X25, [X31+168]
	101 Move X28, [X31+144]
	102 Move X27, [X31+152]
	103 Move X29, [X31+128]
	104 Move X30, [X31+136]
	105 Add X31, X31, 224
	106 Return X0

Method: System.Threading.Tasks.Task DeleteAccountAsync(Nakama.ISession session, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x0344181C STRB W8, [X26 + 0x6C7]
	0x03441820 LDR X0, [X25]
	0x03441824 MOVI V0.2D, 0x0
	0x03441828 STR X31, [X31 + 0x80]
	0x0344182C STP V0, V0, [X31 + 0x60]
	0x03441830 STP V0, V0, [X31 + 0x40]
	0x03441834 STP V0, V0, [X31 + 0x20]
	0x03441838 ADRP X25, 0xCEE000
	0x0344183C LDR W8, [X0 + 0xE0]
	0x03441840 LDR X25, [X25 + 0x720]
	0x03441844 CBNZ W8, 0x344184C
	0x03441848 BL 0x1C16DFC
	0x0344184C ADD X8, X31, 0x8
	0x03441850 MOV X0, X31
	0x03441854 BL 0x32C4770
	0x03441858 LDUR V0, [X31 + 0x8]
	0x0344185C LDR X9, [X31 + 0x18]
	0x03441860 LDR X2, [X25]
	0x03441864 ADD X8, X31, 0x20
	0x03441868 STP X20, X21, [X31 + 0x60]
	0x0344186C ORR X20, X8, 0xF
	0x03441870 MOVN W10, 0x0
	0x03441874 ADD X1, X31, 0x20
	0x03441878 MOV X0, X20
	0x0344187C STP X24, X23, [X31 + 0x48]
	0x03441880 STR X22, [X31 + 0x58]
	0x03441884 STUR V0, [X31 + 0x28]
	0x03441888 STP X9, X19, [X31 + 0x38]
	0x0344188C STR W10, [X31 + 0x20]
	0x03441890 BL 0x21923B8
	0x03441894 MOV X0, X20
	0x03441898 MOV X1, X31
	0x0344189C BL 0x32C47F8
	0x034418A0 LDP X20, X19, [X31 + 0xD0]
	0x034418A4 LDP X22, X21, [X31 + 0xC0]
	0x034418A8 LDP X24, X23, [X31 + 0xB0]
	0x034418AC LDP X26, X25, [X31 + 0xA0]
	0x034418B0 LDR X30, [X31 + 0x90]
	0x034418B4 ADD X31, X31, 0xE0
	0x034418B8 RET
	0x034418BC SUB X31, X31, 0xC0
	0x034418C0 STP X30, X25, [X31 + 0x80]
	0x034418C4 STP X24, X23, [X31 + 0x90]
	0x034418C8 STP X22, X21, [X31 + 0xA0]
	0x034418CC STP X20, X19, [X31 + 0xB0]
	0x034418D0 ADRP X25, 0xF9C000
	0x034418D4 ADRP X24, 0xCB5000
	0x034418D8 LDRB W8, [X25 + 0x6C8]
	0x034418DC LDR X24, [X24 + 0x280]
	0x034418E0 MOV X20, X4
	0x034418E4 MOV X21, X3
	0x034418E8 MOV X22, X2
	0x034418EC MOV X23, X1
	0x034418F0 MOV X19, X0
	0x034418F4 TBNZ X8, 0x0, 0x3441918
	0x034418F8 ADRP X0, 0xCEE000
	0x034418FC LDR X0, [X0 + 0x728]
	0x03441900 BL 0x1C16CF4
	0x03441904 ADRP X0, 0xCB5000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X24, 0xF9D000
	010 Move X23, 0xCB6000
	011 Move W8, [X24+1719]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xCEF000
	022 Move X0, [X0+1696]
	023 Call 0x1C17CF4
	024 Move X0, 0xCB6000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+1719], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+112], X31
	032 Move [X31+80], V0
	033 Move [X31+88], V0
	034 Move [X31+48], V0
	035 Move [X31+56], V0
	036 Move [X31+2], V0
	037 Move X23, 0xCEF000
	038 Move W8, [X0+224]
	039 Move X23, [X23+1696]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Add X8, X31, 8
	044 Move X0, X31
	045 Call AsyncTaskMethodBuilder.Create
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move X9, [X31+24]
	048 Move X2, [X23]
	049 Add X8, X31, 32
	050 Move [X31+80], X20
	051 Move [X31+88], X21
	052 Or X20, X8, 15
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W10, TEMP
	056 Add X1, X31, 32
	057 Move X0, X20
	058 Move [X31+64], X19
	059 Move [X31+72], X22
	060 Move [X31+40], V0
	061 Move [X31+56], X9
	062 Move [X31+32], W10
	063 Call AsyncTaskMethodBuilder.Start, X0, X1
	064 Move X0, X20
	065 Move X1, X31
	066 Call AsyncTaskMethodBuilder.get_Task, X0
	067 Move X20, [X31+176]
	068 Move X19, [X31+184]
	069 Move X22, [X31+160]
	070 Move X21, [X31+168]
	071 Move X24, [X31+144]
	072 Move X23, [X31+152]
	073 Move X30, [X31+128]
	074 Add X31, X31, 192
	075 Return X0

Method: System.Threading.Tasks.Task DeleteFriendsAsync(Nakama.ISession session, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03441908 LDR X0, [X0 + 0x280]
	0x0344190C BL 0x1C16CF4
	0x03441910 MOVZ W8, 0x1
	0x03441914 STRB W8, [X25 + 0x6C8]
	0x03441918 LDR X0, [X24]
	0x0344191C MOVI V0.2D, 0x0
	0x03441920 STP V0, V0, [X31 + 0x60]
	0x03441924 STP V0, V0, [X31 + 0x40]
	0x03441928 STP V0, V0, [X31 + 0x20]
	0x0344192C ADRP X24, 0xCEE000
	0x03441930 LDR W8, [X0 + 0xE0]
	0x03441934 LDR X24, [X24 + 0x728]
	0x03441938 CBNZ W8, 0x3441940
	0x0344193C BL 0x1C16DFC
	0x03441940 ADD X8, X31, 0x8
	0x03441944 MOV X0, X31
	0x03441948 BL 0x32C4770
	0x0344194C LDUR V0, [X31 + 0x8]
	0x03441950 LDR X9, [X31 + 0x18]
	0x03441954 LDR X2, [X24]
	0x03441958 ADD X8, X31, 0x20
	0x0344195C STP X20, X21, [X31 + 0x58]
	0x03441960 ORR X20, X8, 0xF
	0x03441964 MOVN W10, 0x0
	0x03441968 ADD X1, X31, 0x20
	0x0344196C MOV X0, X20
	0x03441970 STP X23, X22, [X31 + 0x48]
	0x03441974 STUR V0, [X31 + 0x28]
	0x03441978 STP X9, X19, [X31 + 0x38]
	0x0344197C STR W10, [X31 + 0x20]
	0x03441980 BL 0x21924B8
	0x03441984 MOV X0, X20
	0x03441988 MOV X1, X31
	0x0344198C BL 0x32C47F8
	0x03441990 LDP X20, X19, [X31 + 0xB0]
	0x03441994 LDP X22, X21, [X31 + 0xA0]
	0x03441998 LDP X24, X23, [X31 + 0x90]
	0x0344199C LDP X30, X25, [X31 + 0x80]
	0x034419A0 ADD X31, X31, 0xC0
	0x034419A4 RET
	0x034419A8 SUB X31, X31, 0xC0
	0x034419AC STP X30, X25, [X31 + 0x80]
	0x034419B0 STP X24, X23, [X31 + 0x90]
	0x034419B4 STP X22, X21, [X31 + 0xA0]
	0x034419B8 STP X20, X19, [X31 + 0xB0]
	0x034419BC ADRP X25, 0xF9C000
	0x034419C0 ADRP X24, 0xCB5000
	0x034419C4 LDRB W8, [X25 + 0x6C9]
	0x034419C8 LDR X24, [X24 + 0x280]
	0x034419CC MOV X20, X4
	0x034419D0 MOV X21, X3
	0x034419D4 MOV X22, X2
	0x034419D8 MOV X23, X1
	0x034419DC MOV X19, X0
	0x034419E0 TBNZ X8, 0x0, 0x3441A04
	0x034419E4 ADRP X0, 0xCEE000
	0x034419E8 LDR X0, [X0 + 0x730]
	0x034419EC BL 0x1C16CF4
	0x034419F0 ADRP X0, 0xCB5000
	0x034419F4 LDR X0, [X0 + 0x280]
	0x034419F8 BL 0x1C16CF4
	0x034419FC MOVZ W8, 0x1
	0x03441A00 STRB W8, [X25 + 0x6C9]
	0x03441A04 LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9D000
	012 Move X25, 0xCB6000
	013 Move W8, [X26+1720]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEF000
	026 Move X0, [X0+1704]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1720], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEF000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1704]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task DeleteGroupAsync(Nakama.ISession session, System.String groupId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03441A08 MOVI V0.2D, 0x0
	0x03441A0C STP V0, V0, [X31 + 0x60]
	0x03441A10 STP V0, V0, [X31 + 0x40]
	0x03441A14 STP V0, V0, [X31 + 0x20]
	0x03441A18 ADRP X24, 0xCEE000
	0x03441A1C LDR W8, [X0 + 0xE0]
	0x03441A20 LDR X24, [X24 + 0x730]
	0x03441A24 CBNZ W8, 0x3441A2C
	0x03441A28 BL 0x1C16DFC
	0x03441A2C ADD X8, X31, 0x8
	0x03441A30 MOV X0, X31
	0x03441A34 BL 0x32C4770
	0x03441A38 LDUR V0, [X31 + 0x8]
	0x03441A3C LDR X9, [X31 + 0x18]
	0x03441A40 LDR X2, [X24]
	0x03441A44 ADD X8, X31, 0x20
	0x03441A48 STP X20, X21, [X31 + 0x58]
	0x03441A4C ORR X20, X8, 0xF
	0x03441A50 MOVN W10, 0x0
	0x03441A54 ADD X1, X31, 0x20
	0x03441A58 MOV X0, X20
	0x03441A5C STP X23, X22, [X31 + 0x48]
	0x03441A60 STUR V0, [X31 + 0x28]
	0x03441A64 STP X9, X19, [X31 + 0x38]
	0x03441A68 STR W10, [X31 + 0x20]
	0x03441A6C BL 0x21925B8
	0x03441A70 MOV X0, X20
	0x03441A74 MOV X1, X31
	0x03441A78 BL 0x32C47F8
	0x03441A7C LDP X20, X19, [X31 + 0xB0]
	0x03441A80 LDP X22, X21, [X31 + 0xA0]
	0x03441A84 LDP X24, X23, [X31 + 0x90]
	0x03441A88 LDP X30, X25, [X31 + 0x80]
	0x03441A8C ADD X31, X31, 0xC0
	0x03441A90 RET
	0x03441A94 SUB X31, X31, 0xC0
	0x03441A98 STP X30, X25, [X31 + 0x80]
	0x03441A9C STP X24, X23, [X31 + 0x90]
	0x03441AA0 STP X22, X21, [X31 + 0xA0]
	0x03441AA4 STP X20, X19, [X31 + 0xB0]
	0x03441AA8 ADRP X25, 0xF9C000
	0x03441AAC ADRP X24, 0xCB5000
	0x03441AB0 LDRB W8, [X25 + 0x6CA]
	0x03441AB4 LDR X24, [X24 + 0x280]
	0x03441AB8 MOV X20, X4
	0x03441ABC MOV X21, X3
	0x03441AC0 MOV X22, X2
	0x03441AC4 MOV X23, X1
	0x03441AC8 MOV X19, X0
	0x03441ACC TBNZ X8, 0x0, 0x3441AF0
	0x03441AD0 ADRP X0, 0xCEE000
	0x03441AD4 LDR X0, [X0 + 0x738]
	0x03441AD8 BL 0x1C16CF4
	0x03441ADC ADRP X0, 0xCB5000
	0x03441AE0 LDR X0, [X0 + 0x280]
	0x03441AE4 BL 0x1C16CF4
	0x03441AE8 MOVZ W8, 0x1
	0x03441AEC STRB W8, [X25 + 0x6CA]
	0x03441AF0 LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9D000
	011 Move X24, 0xCB6000
	012 Move W8, [X25+1721]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEF000
	024 Move X0, [X0+1712]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB6000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1721], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEF000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1712]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task DeleteLeaderboardRecordAsync(Nakama.ISession session, System.String leaderboardId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03441AF4 MOVI V0.2D, 0x0
	0x03441AF8 STP V0, V0, [X31 + 0x60]
	0x03441AFC STP V0, V0, [X31 + 0x40]
	0x03441B00 STP V0, V0, [X31 + 0x20]
	0x03441B04 ADRP X24, 0xCEE000
	0x03441B08 LDR W8, [X0 + 0xE0]
	0x03441B0C LDR X24, [X24 + 0x738]
	0x03441B10 CBNZ W8, 0x3441B18
	0x03441B14 BL 0x1C16DFC
	0x03441B18 ADD X8, X31, 0x8
	0x03441B1C MOV X0, X31
	0x03441B20 BL 0x32C4770
	0x03441B24 LDUR V0, [X31 + 0x8]
	0x03441B28 LDR X9, [X31 + 0x18]
	0x03441B2C LDR X2, [X24]
	0x03441B30 ADD X8, X31, 0x20
	0x03441B34 STP X20, X21, [X31 + 0x58]
	0x03441B38 ORR X20, X8, 0xF
	0x03441B3C MOVN W10, 0x0
	0x03441B40 ADD X1, X31, 0x20
	0x03441B44 MOV X0, X20
	0x03441B48 STP X23, X22, [X31 + 0x48]
	0x03441B4C STUR V0, [X31 + 0x28]
	0x03441B50 STP X9, X19, [X31 + 0x38]
	0x03441B54 STR W10, [X31 + 0x20]
	0x03441B58 BL 0x21926B8
	0x03441B5C MOV X0, X20
	0x03441B60 MOV X1, X31
	0x03441B64 BL 0x32C47F8
	0x03441B68 LDP X20, X19, [X31 + 0xB0]
	0x03441B6C LDP X22, X21, [X31 + 0xA0]
	0x03441B70 LDP X24, X23, [X31 + 0x90]
	0x03441B74 LDP X30, X25, [X31 + 0x80]
	0x03441B78 ADD X31, X31, 0xC0
	0x03441B7C RET
	0x03441B80 SUB X31, X31, 0xC0
	0x03441B84 STP X30, X25, [X31 + 0x80]
	0x03441B88 STP X24, X23, [X31 + 0x90]
	0x03441B8C STP X22, X21, [X31 + 0xA0]
	0x03441B90 STP X20, X19, [X31 + 0xB0]
	0x03441B94 ADRP X25, 0xF9C000
	0x03441B98 ADRP X24, 0xCB5000
	0x03441B9C LDRB W8, [X25 + 0x6CB]
	0x03441BA0 LDR X24, [X24 + 0x280]
	0x03441BA4 MOV X20, X4
	0x03441BA8 MOV X21, X3
	0x03441BAC MOV X22, X2
	0x03441BB0 MOV X23, X1
	0x03441BB4 MOV X19, X0
	0x03441BB8 TBNZ X8, 0x0, 0x3441BDC
	0x03441BBC ADRP X0, 0xCEE000
	0x03441BC0 LDR X0, [X0 + 0x740]
	0x03441BC4 BL 0x1C16CF4
	0x03441BC8 ADRP X0, 0xCB5000
	0x03441BCC LDR X0, [X0 + 0x280]
	0x03441BD0 BL 0x1C16CF4
	0x03441BD4 MOVZ W8, 0x1
	0x03441BD8 STRB W8, [X25 + 0x6CB]
	0x03441BDC LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9D000
	011 Move X24, 0xCB6000
	012 Move W8, [X25+1722]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEF000
	024 Move X0, [X0+1720]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB6000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1722], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEF000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1720]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task DeleteNotificationsAsync(Nakama.ISession session, System.Collections.Generic.IEnumerable`1<System.String> ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03441BE0 MOVI V0.2D, 0x0
	0x03441BE4 STP V0, V0, [X31 + 0x60]
	0x03441BE8 STP V0, V0, [X31 + 0x40]
	0x03441BEC STP V0, V0, [X31 + 0x20]
	0x03441BF0 ADRP X24, 0xCEE000
	0x03441BF4 LDR W8, [X0 + 0xE0]
	0x03441BF8 LDR X24, [X24 + 0x740]
	0x03441BFC CBNZ W8, 0x3441C04
	0x03441C00 BL 0x1C16DFC
	0x03441C04 ADD X8, X31, 0x8
	0x03441C08 MOV X0, X31
	0x03441C0C BL 0x32C4770
	0x03441C10 LDUR V0, [X31 + 0x8]
	0x03441C14 LDR X9, [X31 + 0x18]
	0x03441C18 LDR X2, [X24]
	0x03441C1C ADD X8, X31, 0x20
	0x03441C20 STP X20, X21, [X31 + 0x58]
	0x03441C24 ORR X20, X8, 0xF
	0x03441C28 MOVN W10, 0x0
	0x03441C2C ADD X1, X31, 0x20
	0x03441C30 MOV X0, X20
	0x03441C34 STP X23, X22, [X31 + 0x48]
	0x03441C38 STUR V0, [X31 + 0x28]
	0x03441C3C STP X9, X19, [X31 + 0x38]
	0x03441C40 STR W10, [X31 + 0x20]
	0x03441C44 BL 0x21927B8
	0x03441C48 MOV X0, X20
	0x03441C4C MOV X1, X31
	0x03441C50 BL 0x32C47F8
	0x03441C54 LDP X20, X19, [X31 + 0xB0]
	0x03441C58 LDP X22, X21, [X31 + 0xA0]
	0x03441C5C LDP X24, X23, [X31 + 0x90]
	0x03441C60 LDP X30, X25, [X31 + 0x80]
	0x03441C64 ADD X31, X31, 0xC0
	0x03441C68 RET
	0x03441C6C SUB X31, X31, 0xE0
	0x03441C70 STR X30, [X31 + 0x90]
	0x03441C74 STP X26, X25, [X31 + 0xA0]
	0x03441C78 STP X24, X23, [X31 + 0xB0]
	0x03441C7C STP X22, X21, [X31 + 0xC0]
	0x03441C80 STP X20, X19, [X31 + 0xD0]
	0x03441C84 ADRP X26, 0xF9C000
	0x03441C88 ADRP X25, 0xCB5000
	0x03441C8C LDRB W8, [X26 + 0x6CC]
	0x03441C90 LDR X25, [X25 + 0x280]
	0x03441C94 MOV X20, X5
	0x03441C98 MOV X21, X4
	0x03441C9C MOV X22, X3
	0x03441CA0 MOV X23, X2
	0x03441CA4 MOV X24, X1
	0x03441CA8 MOV X19, X0
	0x03441CAC TBNZ X8, 0x0, 0x3441CD0
	0x03441CB0 ADRP X0, 0xCEE000
	0x03441CB4 LDR X0, [X0 + 0x748]
	0x03441CB8 BL 0x1C16CF4
	0x03441CBC ADRP X0, 0xCB5000
	0x03441CC0 LDR X0, [X0 + 0x280]
	0x03441CC4 BL 0x1C16CF4
	0x03441CC8 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9D000
	011 Move X24, 0xCB6000
	012 Move W8, [X25+1723]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEF000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB6000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1723], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEF000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1728]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task DeleteStorageObjectsAsync(Nakama.ISession session, Nakama.StorageObjectId[] ids = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03441CCC STRB W8, [X26 + 0x6CC]
	0x03441CD0 LDR X0, [X25]
	0x03441CD4 MOVI V0.2D, 0x0
	0x03441CD8 STR X31, [X31 + 0x80]
	0x03441CDC STP V0, V0, [X31 + 0x60]
	0x03441CE0 STP V0, V0, [X31 + 0x40]
	0x03441CE4 STP V0, V0, [X31 + 0x20]
	0x03441CE8 ADRP X25, 0xCEE000
	0x03441CEC LDR W8, [X0 + 0xE0]
	0x03441CF0 LDR X25, [X25 + 0x748]
	0x03441CF4 CBNZ W8, 0x3441CFC
	0x03441CF8 BL 0x1C16DFC
	0x03441CFC ADD X8, X31, 0x8
	0x03441D00 MOV X0, X31
	0x03441D04 BL 0x32C4770
	0x03441D08 LDUR V0, [X31 + 0x8]
	0x03441D0C LDR X9, [X31 + 0x18]
	0x03441D10 LDR X2, [X25]
	0x03441D14 ADD X8, X31, 0x20
	0x03441D18 STP X20, X21, [X31 + 0x60]
	0x03441D1C ORR X20, X8, 0xF
	0x03441D20 MOVN W10, 0x0
	0x03441D24 ADD X1, X31, 0x20
	0x03441D28 MOV X0, X20
	0x03441D2C STP X24, X23, [X31 + 0x48]
	0x03441D30 STR X22, [X31 + 0x58]
	0x03441D34 STUR V0, [X31 + 0x28]
	0x03441D38 STP X9, X19, [X31 + 0x38]
	0x03441D3C STR W10, [X31 + 0x20]
	0x03441D40 BL 0x21928B8
	0x03441D44 MOV X0, X20
	0x03441D48 MOV X1, X31
	0x03441D4C BL 0x32C47F8
	0x03441D50 LDP X20, X19, [X31 + 0xD0]
	0x03441D54 LDP X22, X21, [X31 + 0xC0]
	0x03441D58 LDP X24, X23, [X31 + 0xB0]
	0x03441D5C LDP X26, X25, [X31 + 0xA0]
	0x03441D60 LDR X30, [X31 + 0x90]
	0x03441D64 ADD X31, X31, 0xE0
	0x03441D68 RET
	0x03441D6C SUB X31, X31, 0xE0
	0x03441D70 STR X30, [X31 + 0x90]
	0x03441D74 STP X26, X25, [X31 + 0xA0]
	0x03441D78 STP X24, X23, [X31 + 0xB0]
	0x03441D7C STP X22, X21, [X31 + 0xC0]
	0x03441D80 STP X20, X19, [X31 + 0xD0]
	0x03441D84 ADRP X26, 0xF9C000
	0x03441D88 ADRP X25, 0xCB5000
	0x03441D8C LDRB W8, [X26 + 0x6CD]
	0x03441D90 LDR X25, [X25 + 0x280]
	0x03441D94 MOV X20, X5
	0x03441D98 MOV X21, X4
	0x03441D9C MOV X22, X3
	0x03441DA0 MOV X23, X2
	0x03441DA4 MOV X24, X1
	0x03441DA8 MOV X19, X0
	0x03441DAC TBNZ X8, 0x0, 0x3441DD0
	0x03441DB0 ADRP X0, 0xCEE000
	0x03441DB4 LDR X0, [X0 + 0x750]
	0x03441DB8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9D000
	011 Move X24, 0xCB6000
	012 Move W8, [X25+1724]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X23, X2
	017 Move X22, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEF000
	024 Move X0, [X0+1736]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB6000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1724], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEF000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1736]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+80], X20
	053 Move [X31+88], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+104], X23
	061 Move [X31+64], X19
	062 Move [X31+72], X22
	063 Move [X31+40], V0
	064 Move [X31+56], X9
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task DeleteTournamentRecordAsync(Nakama.ISession session, System.String tournamentId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03441DBC ADRP X0, 0xCB5000
	0x03441DC0 LDR X0, [X0 + 0x280]
	0x03441DC4 BL 0x1C16CF4
	0x03441DC8 MOVZ W8, 0x1
	0x03441DCC STRB W8, [X26 + 0x6CD]
	0x03441DD0 LDR X0, [X25]
	0x03441DD4 MOVI V0.2D, 0x0
	0x03441DD8 STR X31, [X31 + 0x80]
	0x03441DDC STP V0, V0, [X31 + 0x60]
	0x03441DE0 STP V0, V0, [X31 + 0x40]
	0x03441DE4 STP V0, V0, [X31 + 0x20]
	0x03441DE8 ADRP X25, 0xCEE000
	0x03441DEC LDR W8, [X0 + 0xE0]
	0x03441DF0 LDR X25, [X25 + 0x750]
	0x03441DF4 CBNZ W8, 0x3441DFC
	0x03441DF8 BL 0x1C16DFC
	0x03441DFC ADD X8, X31, 0x8
	0x03441E00 MOV X0, X31
	0x03441E04 BL 0x32C4770
	0x03441E08 LDUR V0, [X31 + 0x8]
	0x03441E0C LDR X9, [X31 + 0x18]
	0x03441E10 LDR X2, [X25]
	0x03441E14 ADD X8, X31, 0x20
	0x03441E18 STP X20, X21, [X31 + 0x60]
	0x03441E1C ORR X20, X8, 0xF
	0x03441E20 MOVN W10, 0x0
	0x03441E24 ADD X1, X31, 0x20
	0x03441E28 MOV X0, X20
	0x03441E2C STP X24, X23, [X31 + 0x48]
	0x03441E30 STRH W22, [X31 + 0x58]
	0x03441E34 STUR V0, [X31 + 0x28]
	0x03441E38 STP X9, X19, [X31 + 0x38]
	0x03441E3C STR W10, [X31 + 0x20]
	0x03441E40 BL 0x21929B8
	0x03441E44 MOV X0, X20
	0x03441E48 MOV X1, X31
	0x03441E4C BL 0x32C47F8
	0x03441E50 LDP X20, X19, [X31 + 0xD0]
	0x03441E54 LDP X22, X21, [X31 + 0xC0]
	0x03441E58 LDP X24, X23, [X31 + 0xB0]
	0x03441E5C LDP X26, X25, [X31 + 0xA0]
	0x03441E60 LDR X30, [X31 + 0x90]
	0x03441E64 ADD X31, X31, 0xE0
	0x03441E68 RET
	0x03441E6C SUB X31, X31, 0x110
	0x03441E70 STP X29, X30, [X31 + 0xB0]
	0x03441E74 STP X28, X27, [X31 + 0xC0]
	0x03441E78 STP X26, X25, [X31 + 0xD0]
	0x03441E7C STP X24, X23, [X31 + 0xE0]
	0x03441E80 STP X22, X21, [X31 + 0xF0]
	0x03441E84 STP X20, X19, [X31 + 0x100]
	0x03441E88 ADRP X27, 0xF9C000
	0x03441E8C LDRB W8, [X27 + 0x6CE]
	0x03441E90 MOV X19, X7
	0x03441E94 MOV X21, X6
	0x03441E98 MOV X22, X5
	0x03441E9C MOV X23, X4
	0x03441EA0 MOV X24, X3
	0x03441EA4 MOV X25, X2

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9D000
	011 Move X24, 0xCB6000
	012 Move W8, [X25+1725]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEF000
	024 Move X0, [X0+1744]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB6000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1725], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEF000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1744]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task DemoteGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> usernames, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03441EA8 MOV X26, X1
	0x03441EAC MOV X20, X0
	0x03441EB0 TBNZ X8, 0x0, 0x3441ED4
	0x03441EB4 ADRP X0, 0xCEE000
	0x03441EB8 LDR X0, [X0 + 0x758]
	0x03441EBC BL 0x1C16CF4
	0x03441EC0 ADRP X0, 0xCB5000
	0x03441EC4 LDR X0, [X0 + 0x280]
	0x03441EC8 BL 0x1C16CF4
	0x03441ECC MOVZ W8, 0x1
	0x03441ED0 STRB W8, [X27 + 0x6CE]
	0x03441ED4 LDP X28, X29, [X31 + 0x110]
	0x03441ED8 ADD X0, X31, 0x28
	0x03441EDC MOVZ W2, 0x88
	0x03441EE0 MOV W1, W31
	0x03441EE4 ADD X27, X31, 0x28
	0x03441EE8 BL 0x3EB1B10
	0x03441EEC ADRP X8, 0xCB5000
	0x03441EF0 LDR X8, [X8 + 0x280]
	0x03441EF4 LDR X0, [X8]
	0x03441EF8 LDR W8, [X0 + 0xE0]
	0x03441EFC CBNZ W8, 0x3441F04
	0x03441F00 BL 0x1C16DFC
	0x03441F04 ADD X8, X31, 0x10
	0x03441F08 MOV X0, X31
	0x03441F0C BL 0x32C4770
	0x03441F10 STP X26, X25, [X31 + 0x50]
	0x03441F14 STP X24, X23, [X31 + 0x60]
	0x03441F18 STP X22, X21, [X31 + 0x70]
	0x03441F1C STP X29, X28, [X31 + 0x88]
	0x03441F20 STR X19, [X31 + 0x80]
	0x03441F24 ADRP X10, 0xCEE000
	0x03441F28 LDR V0, [X31 + 0x1]
	0x03441F2C LDR X8, [X31 + 0x20]
	0x03441F30 LDR X10, [X10 + 0x758]
	0x03441F34 ADD X27, X27, 0x8
	0x03441F38 MOVN W9, 0x0
	0x03441F3C ADD X1, X31, 0x28
	0x03441F40 LDR X2, [X10]
	0x03441F44 MOV X0, X27
	0x03441F48 STUR V0, [X31 + 0x30]
	0x03441F4C STP X8, X20, [X31 + 0x40]
	0x03441F50 STR W9, [X31 + 0x28]
	0x03441F54 BL 0x2192AB8
	0x03441F58 MOV X0, X27
	0x03441F5C MOV X1, X31
	0x03441F60 BL 0x32C47F8
	0x03441F64 LDP X20, X19, [X31 + 0x100]
	0x03441F68 LDP X22, X21, [X31 + 0xF0]
	0x03441F6C LDP X24, X23, [X31 + 0xE0]
	0x03441F70 LDP X26, X25, [X31 + 0xD0]
	0x03441F74 LDP X28, X27, [X31 + 0xC0]
	0x03441F78 LDP X29, X30, [X31 + 0xB0]
	0x03441F7C ADD X31, X31, 0x110
	0x03441F80 RET
	0x03441F84 SUB X31, X31, 0xC0
	0x03441F88 STP X30, X25, [X31 + 0x80]
	0x03441F8C STP X24, X23, [X31 + 0x90]
	0x03441F90 STP X22, X21, [X31 + 0xA0]
	0x03441F94 STP X20, X19, [X31 + 0xB0]
	0x03441F98 ADRP X25, 0xF9C000
	0x03441F9C ADRP X24, 0xCB5000
	0x03441FA0 LDRB W8, [X25 + 0x6CF]
	0x03441FA4 LDR X24, [X24 + 0x280]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9D000
	012 Move X25, 0xCB6000
	013 Move W8, [X26+1726]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEF000
	026 Move X0, [X0+1752]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1726], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEF000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1752]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task EventAsync(Nakama.ISession session, System.String name, System.Collections.Generic.Dictionary`2<System.String, System.String> properties, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03441FA8 MOV X20, X4
	0x03441FAC MOV X21, X3
	0x03441FB0 MOV X22, X2
	0x03441FB4 MOV X23, X1
	0x03441FB8 MOV X19, X0
	0x03441FBC TBNZ X8, 0x0, 0x3441FE0
	0x03441FC0 ADRP X0, 0xCEE000
	0x03441FC4 LDR X0, [X0 + 0x760]
	0x03441FC8 BL 0x1C16CF4
	0x03441FCC ADRP X0, 0xCB5000
	0x03441FD0 LDR X0, [X0 + 0x280]
	0x03441FD4 BL 0x1C16CF4
	0x03441FD8 MOVZ W8, 0x1
	0x03441FDC STRB W8, [X25 + 0x6CF]
	0x03441FE0 LDR X0, [X24]
	0x03441FE4 MOVI V0.2D, 0x0
	0x03441FE8 STP V0, V0, [X31 + 0x60]
	0x03441FEC STP V0, V0, [X31 + 0x40]
	0x03441FF0 STP V0, V0, [X31 + 0x20]
	0x03441FF4 ADRP X24, 0xCEE000
	0x03441FF8 LDR W8, [X0 + 0xE0]
	0x03441FFC LDR X24, [X24 + 0x760]
	0x03442000 CBNZ W8, 0x3442008
	0x03442004 BL 0x1C16DFC
	0x03442008 ADD X8, X31, 0x8
	0x0344200C MOV X0, X31
	0x03442010 BL 0x32C4770
	0x03442014 LDUR V0, [X31 + 0x8]
	0x03442018 LDR X9, [X31 + 0x18]
	0x0344201C LDR X2, [X24]
	0x03442020 ADD X8, X31, 0x20
	0x03442024 STP X20, X21, [X31 + 0x58]
	0x03442028 ORR X20, X8, 0xF
	0x0344202C MOVN W10, 0x0
	0x03442030 ADD X1, X31, 0x20
	0x03442034 MOV X0, X20
	0x03442038 STP X23, X22, [X31 + 0x48]
	0x0344203C STUR V0, [X31 + 0x28]
	0x03442040 STP X9, X19, [X31 + 0x38]
	0x03442044 STR W10, [X31 + 0x20]
	0x03442048 BL 0x2192BB8
	0x0344204C MOV X0, X20
	0x03442050 MOV X1, X31
	0x03442054 BL 0x32C47F8
	0x03442058 LDP X20, X19, [X31 + 0xB0]
	0x0344205C LDP X22, X21, [X31 + 0xA0]
	0x03442060 LDP X24, X23, [X31 + 0x90]
	0x03442064 LDP X30, X25, [X31 + 0x80]
	0x03442068 ADD X31, X31, 0xC0
	0x0344206C RET
	0x03442070 SUB X31, X31, 0xE0
	0x03442074 STR X30, [X31 + 0x90]
	0x03442078 STP X26, X25, [X31 + 0xA0]
	0x0344207C STP X24, X23, [X31 + 0xB0]
	0x03442080 STP X22, X21, [X31 + 0xC0]
	0x03442084 STP X20, X19, [X31 + 0xD0]
	0x03442088 ADRP X26, 0xF9B000
	0x0344208C ADRP X25, 0xCB4000
	0x03442090 LDRB W8, [X26 + 0x6D0]
	0x03442094 LDR X25, [X25 + 0x280]
	0x03442098 MOV X20, X5
	0x0344209C MOV X21, X4
	0x034420A0 MOV W24, W3
	0x034420A4 MOV X22, X2

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9D000
	012 Move X25, 0xCB6000
	013 Move W8, [X26+1727]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEF000
	026 Move X0, [X0+1760]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB6000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1727], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEE000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1760]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiAccount> GetAccountAsync(Nakama.ISession session, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034420A8 MOV X23, X1
	0x034420AC MOV X19, X0
	0x034420B0 TBNZ X8, 0x0, 0x34420D4
	0x034420B4 ADRP X0, 0xCED000
	0x034420B8 LDR X0, [X0 + 0x768]
	0x034420BC BL 0x1C16CF4
	0x034420C0 ADRP X0, 0xCB4000
	0x034420C4 LDR X0, [X0 + 0x280]
	0x034420C8 BL 0x1C16CF4
	0x034420CC MOVZ W8, 0x1
	0x034420D0 STRB W8, [X26 + 0x6D0]
	0x034420D4 LDR X0, [X25]
	0x034420D8 MOVI V0.2D, 0x0
	0x034420DC STR X31, [X31 + 0x80]
	0x034420E0 STP V0, V0, [X31 + 0x60]
	0x034420E4 STP V0, V0, [X31 + 0x40]
	0x034420E8 STP V0, V0, [X31 + 0x20]
	0x034420EC ADRP X25, 0xCED000
	0x034420F0 LDR W8, [X0 + 0xE0]
	0x034420F4 LDR X25, [X25 + 0x768]
	0x034420F8 CBNZ W8, 0x3442100
	0x034420FC BL 0x1C16DFC
	0x03442100 ADD X8, X31, 0x8
	0x03442104 MOV X0, X31
	0x03442108 AND W24, W24, 0x1
	0x0344210C BL 0x32C4770
	0x03442110 LDUR V0, [X31 + 0x8]
	0x03442114 LDR X9, [X31 + 0x18]
	0x03442118 LDR X2, [X25]
	0x0344211C ADD X8, X31, 0x20
	0x03442120 STP X20, X21, [X31 + 0x60]
	0x03442124 ORR X20, X8, 0xF
	0x03442128 MOVN W10, 0x0
	0x0344212C ADD X1, X31, 0x20
	0x03442130 MOV X0, X20
	0x03442134 STP X19, X23, [X31 + 0x40]
	0x03442138 STRB W24, [X31 + 0x50]
	0x0344213C STR X22, [X31 + 0x58]
	0x03442140 STUR V0, [X31 + 0x28]
	0x03442144 STR X9, [X31 + 0x38]
	0x03442148 STR W10, [X31 + 0x20]
	0x0344214C BL 0x2192CB8
	0x03442150 MOV X0, X20
	0x03442154 MOV X1, X31
	0x03442158 BL 0x32C47F8
	0x0344215C LDP X20, X19, [X31 + 0xD0]
	0x03442160 LDP X22, X21, [X31 + 0xC0]
	0x03442164 LDP X24, X23, [X31 + 0xB0]
	0x03442168 LDP X26, X25, [X31 + 0xA0]
	0x0344216C LDR X30, [X31 + 0x90]
	0x03442170 ADD X31, X31, 0xE0
	0x03442174 RET
	0x03442178 STP X30, X27, [X31 - 0x50]!
	0x0344217C STP X26, X25, [X31 + 0x10]
	0x03442180 STP X24, X23, [X31 + 0x20]
	0x03442184 STP X22, X21, [X31 + 0x30]
	0x03442188 STP X20, X19, [X31 + 0x40]
	0x0344218C ADRP X27, 0xF9B000
	0x03442190 LDRB W8, [X27 + 0x6D1]
	0x03442194 MOV X19, X7
	0x03442198 MOV X20, X6
	0x0344219C MOV X21, X5
	0x034421A0 MOV W23, W4
	0x034421A4 MOV W22, W3
	0x034421A8 MOV X26, X2

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X24, 0xF9C000
	011 Move X23, 0xCED000
	012 Move W8, [X24+1728]
	013 Move X23, [X23+760]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xCED000
	023 Move X0, [X0+768]
	024 Call 0x1C17CF4
	025 Move X0, 0xCEE000
	026 Move X0, [X0+1768]
	027 Call 0x1C17CF4
	028 Move X0, 0xCED000
	029 Move X0, [X0+784]
	030 Call 0x1C17CF4
	031 Move X0, 0xCED000
	032 Move X0, [X0+760]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+1728], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+80], X31
	039 Move [X31+48], V0
	040 Move [X31+56], V0
	041 Move [X31+16], V0
	042 Move [X31+24], V0
	043 Move [X31], V0
	044 Move X23, 0xCED000
	045 Move X25, 0xCEE000
	046 Move X24, 0xCED000
	047 Move W8, [X0+224]
	048 Move X23, [X23+768]
	049 Move X25, [X25+1768]
	050 Move X24, [X24+784]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X23]
	055 Add X8, X31, 0
	056 Or X23, X8, 15
	057 Move X8, X23
	058 Call AsyncTaskMethodBuilder`1<Object>.Create
	059 Move X2, [X25]
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W8, TEMP
	063 Add X1, X31, 0
	064 Move X0, X23
	065 Move [X31+32], X22
	066 Move [X31+40], X21
	067 Move [X31+48], X19
	068 Move [X31+56], X20
	069 Move [X31], W8
	070 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	071 Move X1, [X24]
	072 Move X0, X23
	073 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	074 Move X20, [X31+144]
	075 Move X19, [X31+152]
	076 Move X22, [X31+128]
	077 Move X21, [X31+136]
	078 Move X24, [X31+112]
	079 Move X23, [X31+120]
	080 Move X30, [X31+96]
	081 Move X25, [X31+104]
	082 Add X31, X31, 160
	083 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatedSubscription> GetSubscriptionAsync(Nakama.ISession session, System.String productId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034421AC MOV X24, X1
	0x034421B0 MOV X25, X0
	0x034421B4 TBNZ X8, 0x0, 0x34421CC
	0x034421B8 ADRP X0, 0xCED000
	0x034421BC LDR X0, [X0 + 0x770]
	0x034421C0 BL 0x1C16CF4
	0x034421C4 MOVZ W8, 0x1
	0x034421C8 STRB W8, [X27 + 0x6D1]
	0x034421CC CBZ X26, 0x3442268
	0x034421D0 ADRP X10, 0xCED000
	0x034421D4 LDR X8, [X26]
	0x034421D8 LDR X10, [X10 + 0x770]
	0x034421DC LDRH W9, [X8 + 0x12E]
	0x034421E0 LDR X1, [X10]
	0x034421E4 CBZ X9, 0x3442208
	0x034421E8 LDR X10, [X8 + 0xB0]
	0x034421EC ADD X10, X10, 0x8
	0x034421F0 LDUR X11, [X10 - 0x8]
	0x034421F4 CMP X11, X1
	0x034421F8 B.EQ 0x3442218
	0x034421FC SUBS X9, X9, 0x1
	0x03442200 ADD X10, X10, 0x10
	0x03442204 B.NE 0x34421F0
	0x03442208 MOV X0, X26
	0x0344220C MOV W2, W31
	0x03442210 BL 0x1C5C788
	0x03442214 B 0x3442224
	0x03442218 LDRSW X9, [X10]
	0x0344221C ADD X8, X8, X9, 0x4, LSL
	0x03442220 ADD X0, X8, 0x138
	0x03442224 LDP X8, X1, [X0]
	0x03442228 MOV X0, X26
	0x0344222C BLR X8
	0x03442230 AND W4, W23, 0x1
	0x03442234 MOV X2, X0
	0x03442238 MOV X0, X25
	0x0344223C MOV X1, X24
	0x03442240 MOV W3, W22
	0x03442244 MOV X5, X21
	0x03442248 MOV X6, X20
	0x0344224C MOV X7, X19
	0x03442250 LDP X20, X19, [X31 + 0x40]
	0x03442254 LDP X22, X21, [X31 + 0x30]
	0x03442258 LDP X24, X23, [X31 + 0x20]
	0x0344225C LDP X26, X25, [X31 + 0x10]
	0x03442260 LDP X30, X27, [X31], #0x50
	0x03442264 B 0x344226C
	0x03442268 BL 0x1C16F20
	0x0344226C SUB X31, X31, 0xD0
	0x03442270 STP X29, X30, [X31 + 0x70]
	0x03442274 STP X28, X27, [X31 + 0x80]
	0x03442278 STP X26, X25, [X31 + 0x90]
	0x0344227C STP X24, X23, [X31 + 0xA0]
	0x03442280 STP X22, X21, [X31 + 0xB0]
	0x03442284 STP X20, X19, [X31 + 0xC0]
	0x03442288 ADRP X28, 0xF9B000
	0x0344228C ADRP X27, 0xCEC000
	0x03442290 LDRB W8, [X28 + 0x6D2]
	0x03442294 LDR X27, [X27 + 0x418]
	0x03442298 MOV X19, X7
	0x0344229C MOV X21, X6
	0x034422A0 MOV X20, X5
	0x034422A4 MOV W26, W4
	0x034422A8 MOV W22, W3
	0x034422AC MOV X23, X2
	0x034422B0 MOV X24, X1
	0x034422B4 MOV X25, X0
	0x034422B8 TBNZ X8, 0x0, 0x34422F4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X25, 0xF9C000
	012 Move X24, 0xCED000
	013 Move W8, [X25+1729]
	014 Move X24, [X24+1456]
	015 Move X19, X4
	016 Move X21, X3
	017 Move X20, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xCED000
	025 Move X0, [X0+1464]
	026 Call 0x1C17CF4
	027 Move X0, 0xCEE000
	028 Move X0, [X0+1776]
	029 Call 0x1C17CF4
	030 Move X0, 0xCED000
	031 Move X0, [X0+1480]
	032 Call 0x1C17CF4
	033 Move X0, 0xCED000
	034 Move X0, [X0+1456]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1729], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move [X31], V0
	045 Move [X31+8], V0
	046 Move X24, 0xCED000
	047 Move X26, 0xCEE000
	048 Move X25, 0xCED000
	049 Move W8, [X0+224]
	050 Move X24, [X24+1464]
	051 Move X26, [X26+1776]
	052 Move X25, [X25+1480]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Add X8, X31, 0
	058 Or X24, X8, 15
	059 Move X8, X24
	060 Call AsyncTaskMethodBuilder`1<Object>.Create
	061 Move X2, [X26]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Add X1, X31, 0
	066 Move X0, X24
	067 Move [X31+32], X23
	068 Move [X31+40], X22
	069 Move [X31+56], X19
	070 Move [X31+64], X21
	071 Move [X31+48], X20
	072 Move [X31], W8
	073 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	074 Move X1, [X25]
	075 Move X0, X24
	076 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X26, [X31+112]
	084 Move X25, [X31+120]
	085 Move X30, [X31+96]
	086 Add X31, X31, 176
	087 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiUsers> GetUsersAsync(Nakama.ISession session, System.Collections.Generic.IEnumerable`1<System.String> ids, System.Collections.Generic.IEnumerable`1<System.String> usernames = null, System.Collections.Generic.IEnumerable`1<System.String> facebookIds = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034422BC ADRP X0, 0xCEC000
	0x034422C0 LDR X0, [X0 + 0x420]
	0x034422C4 BL 0x1C16CF4
	0x034422C8 ADRP X0, 0xCED000
	0x034422CC LDR X0, [X0 + 0x778]
	0x034422D0 BL 0x1C16CF4
	0x034422D4 ADRP X0, 0xCEC000
	0x034422D8 LDR X0, [X0 + 0x430]
	0x034422DC BL 0x1C16CF4
	0x034422E0 ADRP X0, 0xCEC000
	0x034422E4 LDR X0, [X0 + 0x418]
	0x034422E8 BL 0x1C16CF4
	0x034422EC MOVZ W8, 0x1
	0x034422F0 STRB W8, [X28 + 0x6D2]
	0x034422F4 LDR X0, [X27]
	0x034422F8 MOVI V0.2D, 0x0
	0x034422FC STP V0, V0, [X31 + 0x50]
	0x03442300 STP V0, V0, [X31 + 0x30]
	0x03442304 STP V0, V0, [X31 + 0x10]
	0x03442308 STR V0, [X31]
	0x0344230C ADRP X29, 0xCEC000
	0x03442310 ADRP X28, 0xCED000
	0x03442314 ADRP X27, 0xCEC000
	0x03442318 LDR W8, [X0 + 0xE0]
	0x0344231C LDR X29, [X29 + 0x420]
	0x03442320 LDR X28, [X28 + 0x778]
	0x03442324 LDR X27, [X27 + 0x430]
	0x03442328 CBNZ W8, 0x3442330
	0x0344232C BL 0x1C16DFC
	0x03442330 LDR X0, [X29]
	0x03442334 ADD X8, X31, 0x0
	0x03442338 AND W29, W26, 0x1
	0x0344233C ORR X26, X8, 0xF
	0x03442340 MOV X8, X26
	0x03442344 BL 0x263221C
	0x03442348 LDR X2, [X28]
	0x0344234C MOVN W8, 0x0
	0x03442350 ADD X1, X31, 0x0
	0x03442354 MOV X0, X26
	0x03442358 STP X25, X24, [X31 + 0x20]
	0x0344235C STR X23, [X31 + 0x30]
	0x03442360 STR W22, [X31 + 0x38]
	0x03442364 STRB W29, [X31 + 0x3C]
	0x03442368 STP X19, X21, [X31 + 0x48]
	0x0344236C STR X20, [X31 + 0x40]
	0x03442370 STR W8, [X31]
	0x03442374 BL 0x1FCD014
	0x03442378 LDR X1, [X27]
	0x0344237C MOV X0, X26
	0x03442380 BL 0x2632230
	0x03442384 LDP X20, X19, [X31 + 0xC0]
	0x03442388 LDP X22, X21, [X31 + 0xB0]
	0x0344238C LDP X24, X23, [X31 + 0xA0]
	0x03442390 LDP X26, X25, [X31 + 0x90]
	0x03442394 LDP X28, X27, [X31 + 0x80]
	0x03442398 LDP X29, X30, [X31 + 0x70]
	0x0344239C ADD X31, X31, 0xD0
	0x034423A0 RET
	0x034423A4 SUB X31, X31, 0xD0
	0x034423A8 STR X30, [X31 + 0x70]
	0x034423AC STP X28, X27, [X31 + 0x80]
	0x034423B0 STP X26, X25, [X31 + 0x90]
	0x034423B4 STP X24, X23, [X31 + 0xA0]
	0x034423B8 STP X22, X21, [X31 + 0xB0]
	0x034423BC STP X20, X19, [X31 + 0xC0]
	0x034423C0 ADRP X27, 0xF9B000
	0x034423C4 ADRP X26, 0xCEC000
	0x034423C8 LDRB W8, [X27 + 0x6D3]
	0x034423CC LDR X26, [X26 + 0x448]
	0x034423D0 MOV X19, X6
	0x034423D4 MOV X21, X5
	0x034423D8 MOV X20, X4
	0x034423DC MOV W22, W3
	0x034423E0 MOV X23, X2

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X30
	003 Move [X31+128], X28
	004 Move [X31+136], X27
	005 Move [X31+144], X26
	006 Move [X31+152], X25
	007 Move [X31+160], X24
	008 Move [X31+168], X23
	009 Move [X31+176], X22
	010 Move [X31+184], X21
	011 Move [X31+192], X20
	012 Move [X31+200], X19
	013 Move X27, 0xF9C000
	014 Move X26, 0xCED000
	015 Move W8, [X27+1730]
	016 Move X26, [X26+1904]
	017 Move X19, X6
	018 Move X21, X5
	019 Move X20, X4
	020 Move X22, X3
	021 Move X23, X2
	022 Move X24, X1
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCED000
	029 Move X0, [X0+1912]
	030 Call 0x1C17CF4
	031 Move X0, 0xCEE000
	032 Move X0, [X0+1784]
	033 Call 0x1C17CF4
	034 Move X0, 0xCED000
	035 Move X0, [X0+1928]
	036 Call 0x1C17CF4
	037 Move X0, 0xCED000
	038 Move X0, [X0+1904]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+1730], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+80], V0
	045 Move [X31+88], V0
	046 Move [X31+48], V0
	047 Move [X31+56], V0
	048 Move [X31+16], V0
	049 Move [X31+24], V0
	050 Move [X31], V0
	051 Move X26, 0xCED000
	052 Move X28, 0xCEE000
	053 Move X27, 0xCED000
	054 Move W8, [X0+224]
	055 Move X26, [X26+1912]
	056 Move X28, [X28+1784]
	057 Move X27, [X27+1928]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, [X26]
	062 Add X8, X31, 0
	063 Or X26, X8, 15
	064 Move X8, X26
	065 Call AsyncTaskMethodBuilder`1<Object>.Create
	066 Move X2, [X28]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Add X1, X31, 0
	071 Move X0, X26
	072 Move [X31+32], X25
	073 Move [X31+40], X24
	074 Move [X31+48], X23
	075 Move [X31+56], X22
	076 Move [X31+72], X19
	077 Move [X31+80], X21
	078 Move [X31+64], X20
	079 Move [X31], W8
	080 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	081 Move X1, [X27]
	082 Move X0, X26
	083 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	084 Move X20, [X31+192]
	085 Move X19, [X31+200]
	086 Move X22, [X31+176]
	087 Move X21, [X31+184]
	088 Move X24, [X31+160]
	089 Move X23, [X31+168]
	090 Move X26, [X31+144]
	091 Move X25, [X31+152]
	092 Move X28, [X31+128]
	093 Move X27, [X31+136]
	094 Move X30, [X31+112]
	095 Add X31, X31, 208
	096 Return X0

Method: System.Threading.Tasks.Task ImportFacebookFriendsAsync(Nakama.ISession session, System.String token, System.Nullable`1<System.Boolean> reset = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034423E4 MOV X24, X1
	0x034423E8 MOV X25, X0
	0x034423EC TBNZ X8, 0x0, 0x3442428
	0x034423F0 ADRP X0, 0xCEC000
	0x034423F4 LDR X0, [X0 + 0x450]
	0x034423F8 BL 0x1C16CF4
	0x034423FC ADRP X0, 0xCED000
	0x03442400 LDR X0, [X0 + 0x780]
	0x03442404 BL 0x1C16CF4
	0x03442408 ADRP X0, 0xCEC000
	0x0344240C LDR X0, [X0 + 0x460]
	0x03442410 BL 0x1C16CF4
	0x03442414 ADRP X0, 0xCEC000
	0x03442418 LDR X0, [X0 + 0x448]
	0x0344241C BL 0x1C16CF4
	0x03442420 MOVZ W8, 0x1
	0x03442424 STRB W8, [X27 + 0x6D3]
	0x03442428 LDR X0, [X26]
	0x0344242C MOVI V0.2D, 0x0
	0x03442430 STP V0, V0, [X31 + 0x50]
	0x03442434 STP V0, V0, [X31 + 0x30]
	0x03442438 STP V0, V0, [X31 + 0x10]
	0x0344243C STR V0, [X31]
	0x03442440 ADRP X26, 0xCEC000
	0x03442444 ADRP X28, 0xCED000
	0x03442448 ADRP X27, 0xCEC000
	0x0344244C LDR W8, [X0 + 0xE0]
	0x03442450 LDR X26, [X26 + 0x450]
	0x03442454 LDR X28, [X28 + 0x780]
	0x03442458 LDR X27, [X27 + 0x460]
	0x0344245C CBNZ W8, 0x3442464
	0x03442460 BL 0x1C16DFC
	0x03442464 LDR X0, [X26]
	0x03442468 ADD X8, X31, 0x0
	0x0344246C ORR X26, X8, 0xF
	0x03442470 MOV X8, X26
	0x03442474 BL 0x263221C
	0x03442478 LDR X2, [X28]
	0x0344247C MOVN W8, 0x0
	0x03442480 ADD X1, X31, 0x0
	0x03442484 MOV X0, X26
	0x03442488 STP X25, X24, [X31 + 0x20]
	0x0344248C STUR X23, [X31 + 0x34]
	0x03442490 STR W22, [X31 + 0x30]
	0x03442494 STP X19, X21, [X31 + 0x48]
	0x03442498 STR X20, [X31 + 0x40]
	0x0344249C STR W8, [X31]
	0x034424A0 BL 0x1FCD114
	0x034424A4 LDR X1, [X27]
	0x034424A8 MOV X0, X26
	0x034424AC BL 0x2632230
	0x034424B0 LDP X20, X19, [X31 + 0xC0]
	0x034424B4 LDP X22, X21, [X31 + 0xB0]
	0x034424B8 LDP X24, X23, [X31 + 0xA0]
	0x034424BC LDP X26, X25, [X31 + 0x90]
	0x034424C0 LDP X28, X27, [X31 + 0x80]
	0x034424C4 LDR X30, [X31 + 0x70]
	0x034424C8 ADD X31, X31, 0xD0
	0x034424CC RET
	0x034424D0 SUB X31, X31, 0xE0
	0x034424D4 STP X29, X30, [X31 + 0x80]
	0x034424D8 STP X28, X27, [X31 + 0x90]
	0x034424DC STP X26, X25, [X31 + 0xA0]
	0x034424E0 STP X24, X23, [X31 + 0xB0]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9C000
	012 Move X25, 0xCB5000
	013 Move W8, [X26+1731]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEE000
	026 Move X0, [X0+1792]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB5000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1731], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEE000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1792]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 NotImplemented "Instruction STRH not yet implemented."
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task ImportSteamFriendsAsync(Nakama.ISession session, System.String token, System.Nullable`1<System.Boolean> reset = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034424E4 STP X22, X21, [X31 + 0xC0]
	0x034424E8 STP X20, X19, [X31 + 0xD0]
	0x034424EC ADRP X28, 0xF9B000
	0x034424F0 ADRP X27, 0xCEC000
	0x034424F4 LDRB W8, [X28 + 0x6D4]
	0x034424F8 LDR X27, [X27 + 0x510]
	0x034424FC MOV X19, X7
	0x03442500 MOV X21, X6
	0x03442504 MOV X20, X5
	0x03442508 MOV W22, W4
	0x0344250C MOV X23, X3
	0x03442510 MOV X24, X2
	0x03442514 MOV X25, X1
	0x03442518 MOV X26, X0
	0x0344251C TBNZ X8, 0x0, 0x3442558
	0x03442520 ADRP X0, 0xCEC000
	0x03442524 LDR X0, [X0 + 0x518]
	0x03442528 BL 0x1C16CF4
	0x0344252C ADRP X0, 0xCED000
	0x03442530 LDR X0, [X0 + 0x788]
	0x03442534 BL 0x1C16CF4
	0x03442538 ADRP X0, 0xCEC000
	0x0344253C LDR X0, [X0 + 0x528]
	0x03442540 BL 0x1C16CF4
	0x03442544 ADRP X0, 0xCEC000
	0x03442548 LDR X0, [X0 + 0x510]
	0x0344254C BL 0x1C16CF4
	0x03442550 MOVZ W8, 0x1
	0x03442554 STRB W8, [X28 + 0x6D4]
	0x03442558 LDR X0, [X27]
	0x0344255C MOVI V0.2D, 0x0
	0x03442560 STR X31, [X31 + 0x70]
	0x03442564 STP V0, V0, [X31 + 0x50]
	0x03442568 STP V0, V0, [X31 + 0x30]
	0x0344256C STP V0, V0, [X31 + 0x10]
	0x03442570 STR V0, [X31]
	0x03442574 ADRP X27, 0xCEC000
	0x03442578 ADRP X29, 0xCED000
	0x0344257C ADRP X28, 0xCEC000
	0x03442580 LDR W8, [X0 + 0xE0]
	0x03442584 LDR X27, [X27 + 0x518]
	0x03442588 LDR X29, [X29 + 0x788]
	0x0344258C LDR X28, [X28 + 0x528]
	0x03442590 CBNZ W8, 0x3442598
	0x03442594 BL 0x1C16DFC
	0x03442598 LDR X0, [X27]
	0x0344259C ADD X8, X31, 0x0
	0x034425A0 ORR X27, X8, 0xF
	0x034425A4 MOV X8, X27
	0x034425A8 BL 0x263221C
	0x034425AC LDR X2, [X29]
	0x034425B0 MOVN W8, 0x0
	0x034425B4 ADD X1, X31, 0x0
	0x034425B8 MOV X0, X27
	0x034425BC STP X26, X25, [X31 + 0x20]
	0x034425C0 STR X24, [X31 + 0x30]
	0x034425C4 STUR X23, [X31 + 0x3C]
	0x034425C8 STR W22, [X31 + 0x38]
	0x034425CC STP X19, X21, [X31 + 0x50]
	0x034425D0 STR X20, [X31 + 0x48]
	0x034425D4 STR W8, [X31]
	0x034425D8 BL 0x1FCD214
	0x034425DC LDR X1, [X28]
	0x034425E0 MOV X0, X27

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9C000
	012 Move X25, 0xCB5000
	013 Move W8, [X26+1732]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEE000
	026 Move X0, [X0+1800]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB5000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1732], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEE000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1800]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 NotImplemented "Instruction STRH not yet implemented."
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task JoinGroupAsync(Nakama.ISession session, System.String groupId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034425E4 BL 0x2632230
	0x034425E8 LDP X20, X19, [X31 + 0xD0]
	0x034425EC LDP X22, X21, [X31 + 0xC0]
	0x034425F0 LDP X24, X23, [X31 + 0xB0]
	0x034425F4 LDP X26, X25, [X31 + 0xA0]
	0x034425F8 LDP X28, X27, [X31 + 0x90]
	0x034425FC LDP X29, X30, [X31 + 0x80]
	0x03442600 ADD X31, X31, 0xE0
	0x03442604 RET
	0x03442608 SUB X31, X31, 0xF0
	0x0344260C STP X29, X30, [X31 + 0x90]
	0x03442610 STP X28, X27, [X31 + 0xA0]
	0x03442614 STP X26, X25, [X31 + 0xB0]
	0x03442618 STP X24, X23, [X31 + 0xC0]
	0x0344261C STP X22, X21, [X31 + 0xD0]
	0x03442620 STP X20, X19, [X31 + 0xE0]
	0x03442624 ADRP X28, 0xF9B000
	0x03442628 LDRB W8, [X28 + 0x6D5]
	0x0344262C MOV X20, X6
	0x03442630 MOV X21, X5
	0x03442634 MOV X22, X4
	0x03442638 MOV W23, W3
	0x0344263C MOV X24, X2
	0x03442640 MOV X25, X1
	0x03442644 MOV X26, X0
	0x03442648 STR X7, [X31]
	0x0344264C TBNZ X8, 0x0, 0x3442688
	0x03442650 ADRP X0, 0xCEC000
	0x03442654 LDR X0, [X0 + 0x490]
	0x03442658 BL 0x1C16CF4
	0x0344265C ADRP X0, 0xCED000
	0x03442660 LDR X0, [X0 + 0x790]
	0x03442664 BL 0x1C16CF4
	0x03442668 ADRP X0, 0xCEC000
	0x0344266C LDR X0, [X0 + 0x4A0]
	0x03442670 BL 0x1C16CF4
	0x03442674 ADRP X0, 0xCEC000
	0x03442678 LDR X0, [X0 + 0x488]
	0x0344267C BL 0x1C16CF4
	0x03442680 MOVZ W8, 0x1
	0x03442684 STRB W8, [X28 + 0x6D5]
	0x03442688 ADRP X27, 0xCEC000
	0x0344268C LDP X28, X29, [X31 + 0xF0]
	0x03442690 LDR X27, [X27 + 0x490]
	0x03442694 ADD X0, X31, 0x8
	0x03442698 MOVZ W2, 0x88
	0x0344269C MOV W1, W31
	0x034426A0 ADD X19, X31, 0x8
	0x034426A4 BL 0x3EB1B10
	0x034426A8 ADRP X8, 0xCEC000
	0x034426AC LDR X8, [X8 + 0x488]
	0x034426B0 LDR X0, [X8]
	0x034426B4 LDR W8, [X0 + 0xE0]
	0x034426B8 CBNZ W8, 0x34426C0
	0x034426BC BL 0x1C16DFC
	0x034426C0 LDR X0, [X27]
	0x034426C4 ADD X27, X19, 0x8
	0x034426C8 MOV X8, X27
	0x034426CC BL 0x263221C

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9C000
	011 Move X24, 0xCB5000
	012 Move W8, [X25+1733]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEE000
	024 Move X0, [X0+1808]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB5000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1733], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEE000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1808]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task JoinTournamentAsync(Nakama.ISession session, System.String tournamentId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034426D0 LDR X8, [X31]
	0x034426D4 STP X26, X25, [X31 + 0x28]
	0x034426D8 STR W23, [X31 + 0x48]
	0x034426DC STP X24, X22, [X31 + 0x38]
	0x034426E0 STP X21, X20, [X31 + 0x50]
	0x034426E4 STRH W8, [X31 + 0x60]
	0x034426E8 ADRP X8, 0xCED000
	0x034426EC LDR X8, [X8 + 0x790]
	0x034426F0 ADD X1, X31, 0x8
	0x034426F4 MOV X0, X27
	0x034426F8 STP X29, X28, [X31 + 0x68]
	0x034426FC LDR X2, [X8]
	0x03442700 MOVN W8, 0x0
	0x03442704 STR W8, [X31 + 0x8]
	0x03442708 BL 0x1FCD314
	0x0344270C ADRP X8, 0xCEC000
	0x03442710 LDR X8, [X8 + 0x4A0]
	0x03442714 MOV X0, X27
	0x03442718 LDR X1, [X8]
	0x0344271C BL 0x2632230
	0x03442720 LDP X20, X19, [X31 + 0xE0]
	0x03442724 LDP X22, X21, [X31 + 0xD0]
	0x03442728 LDP X24, X23, [X31 + 0xC0]
	0x0344272C LDP X26, X25, [X31 + 0xB0]
	0x03442730 LDP X28, X27, [X31 + 0xA0]
	0x03442734 LDP X29, X30, [X31 + 0x90]
	0x03442738 ADD X31, X31, 0xF0
	0x0344273C RET
	0x03442740 SUB X31, X31, 0xF0
	0x03442744 STP X29, X30, [X31 + 0x90]
	0x03442748 STP X28, X27, [X31 + 0xA0]
	0x0344274C STP X26, X25, [X31 + 0xB0]
	0x03442750 STP X24, X23, [X31 + 0xC0]
	0x03442754 STP X22, X21, [X31 + 0xD0]
	0x03442758 STP X20, X19, [X31 + 0xE0]
	0x0344275C ADRP X28, 0xF9B000
	0x03442760 LDRB W8, [X28 + 0x6D6]
	0x03442764 MOV X20, X7
	0x03442768 MOV W21, W6
	0x0344276C MOV X22, X4
	0x03442770 MOV X23, X3
	0x03442774 MOV X24, X2
	0x03442778 MOV X25, X1
	0x0344277C MOV X26, X0
	0x03442780 STR X5, [X31]
	0x03442784 TBNZ X8, 0x0, 0x34427C0
	0x03442788 ADRP X0, 0xCEC000
	0x0344278C LDR X0, [X0 + 0x5E0]
	0x03442790 BL 0x1C16CF4
	0x03442794 ADRP X0, 0xCED000
	0x03442798 LDR X0, [X0 + 0x798]
	0x0344279C BL 0x1C16CF4
	0x034427A0 ADRP X0, 0xCEC000
	0x034427A4 LDR X0, [X0 + 0x5F0]
	0x034427A8 BL 0x1C16CF4
	0x034427AC ADRP X0, 0xCEC000
	0x034427B0 LDR X0, [X0 + 0x5D8]
	0x034427B4 BL 0x1C16CF4
	0x034427B8 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9C000
	011 Move X24, 0xCB5000
	012 Move W8, [X25+1734]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEE000
	024 Move X0, [X0+1816]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB5000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1734], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEE000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1816]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task KickGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034427BC STRB W8, [X28 + 0x6D6]
	0x034427C0 ADRP X27, 0xCEC000
	0x034427C4 LDP X28, X29, [X31 + 0xF0]
	0x034427C8 LDR X27, [X27 + 0x5E0]
	0x034427CC ADD X0, X31, 0x8
	0x034427D0 MOVZ W2, 0x88
	0x034427D4 MOV W1, W31
	0x034427D8 ADD X19, X31, 0x8
	0x034427DC BL 0x3EB1B10
	0x034427E0 ADRP X8, 0xCEC000
	0x034427E4 LDR X8, [X8 + 0x5D8]
	0x034427E8 LDR X0, [X8]
	0x034427EC LDR W8, [X0 + 0xE0]
	0x034427F0 CBNZ W8, 0x34427F8
	0x034427F4 BL 0x1C16DFC
	0x034427F8 LDR X0, [X27]
	0x034427FC ADD X27, X19, 0x8
	0x03442800 MOV X8, X27
	0x03442804 BL 0x263221C
	0x03442808 STP X26, X25, [X31 + 0x28]
	0x0344280C STP X24, X23, [X31 + 0x38]
	0x03442810 STR W21, [X31 + 0x48]
	0x03442814 STP X20, X22, [X31 + 0x50]
	0x03442818 STR X28, [X31 + 0x70]
	0x0344281C ADRP X8, 0xCED000
	0x03442820 LDR X8, [X8 + 0x798]
	0x03442824 ADD X1, X31, 0x8
	0x03442828 MOV X0, X27
	0x0344282C LDR X2, [X8]
	0x03442830 LDR X8, [X31]
	0x03442834 STP X8, X29, [X31 + 0x60]
	0x03442838 MOVN W8, 0x0
	0x0344283C STR W8, [X31 + 0x8]
	0x03442840 BL 0x1FCD514
	0x03442844 ADRP X8, 0xCEC000
	0x03442848 LDR X8, [X8 + 0x5F0]
	0x0344284C MOV X0, X27
	0x03442850 LDR X1, [X8]
	0x03442854 BL 0x2632230
	0x03442858 LDP X20, X19, [X31 + 0xE0]
	0x0344285C LDP X22, X21, [X31 + 0xD0]
	0x03442860 LDP X24, X23, [X31 + 0xC0]
	0x03442864 LDP X26, X25, [X31 + 0xB0]
	0x03442868 LDP X28, X27, [X31 + 0xA0]
	0x0344286C LDP X29, X30, [X31 + 0x90]
	0x03442870 ADD X31, X31, 0xF0
	0x03442874 RET
	0x03442878 SUB X31, X31, 0xF0
	0x0344287C STP X29, X30, [X31 + 0x90]
	0x03442880 STP X28, X27, [X31 + 0xA0]
	0x03442884 STP X26, X25, [X31 + 0xB0]
	0x03442888 STP X24, X23, [X31 + 0xC0]
	0x0344288C STP X22, X21, [X31 + 0xD0]
	0x03442890 STP X20, X19, [X31 + 0xE0]
	0x03442894 ADRP X28, 0xF9B000
	0x03442898 LDRB W8, [X28 + 0x6D7]
	0x0344289C MOV W20, W6
	0x034428A0 MOV X21, X5
	0x034428A4 MOV X22, X4
	0x034428A8 MOV X23, X3
	0x034428AC MOV X24, X2
	0x034428B0 MOV X25, X1
	0x034428B4 MOV X26, X0
	0x034428B8 STR X7, [X31]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9C000
	012 Move X25, 0xCB5000
	013 Move W8, [X26+1735]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEE000
	026 Move X0, [X0+1824]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB5000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1735], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEE000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1824]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task LeaveGroupAsync(Nakama.ISession session, System.String groupId, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034428BC TBNZ X8, 0x0, 0x34428F8
	0x034428C0 ADRP X0, 0xCEC000
	0x034428C4 LDR X0, [X0 + 0x5E0]
	0x034428C8 BL 0x1C16CF4
	0x034428CC ADRP X0, 0xCED000
	0x034428D0 LDR X0, [X0 + 0x7A0]
	0x034428D4 BL 0x1C16CF4
	0x034428D8 ADRP X0, 0xCEC000
	0x034428DC LDR X0, [X0 + 0x5F0]
	0x034428E0 BL 0x1C16CF4
	0x034428E4 ADRP X0, 0xCEC000
	0x034428E8 LDR X0, [X0 + 0x5D8]
	0x034428EC BL 0x1C16CF4
	0x034428F0 MOVZ W8, 0x1
	0x034428F4 STRB W8, [X28 + 0x6D7]
	0x034428F8 ADRP X27, 0xCEC000
	0x034428FC LDP X28, X29, [X31 + 0xF0]
	0x03442900 LDR X27, [X27 + 0x5E0]
	0x03442904 ADD X0, X31, 0x8
	0x03442908 MOVZ W2, 0x88
	0x0344290C MOV W1, W31
	0x03442910 ADD X19, X31, 0x8
	0x03442914 BL 0x3EB1B10
	0x03442918 ADRP X8, 0xCEC000
	0x0344291C LDR X8, [X8 + 0x5D8]
	0x03442920 LDR X0, [X8]
	0x03442924 LDR W8, [X0 + 0xE0]
	0x03442928 CBNZ W8, 0x3442930
	0x0344292C BL 0x1C16DFC
	0x03442930 LDR X0, [X27]
	0x03442934 ADD X27, X19, 0x8
	0x03442938 MOV X8, X27
	0x0344293C BL 0x263221C
	0x03442940 STP X26, X25, [X31 + 0x28]
	0x03442944 STP X24, X23, [X31 + 0x38]
	0x03442948 STP X22, X21, [X31 + 0x50]
	0x0344294C STR W20, [X31 + 0x48]
	0x03442950 STR X28, [X31 + 0x70]
	0x03442954 ADRP X8, 0xCED000
	0x03442958 LDR X8, [X8 + 0x7A0]
	0x0344295C ADD X1, X31, 0x8
	0x03442960 MOV X0, X27
	0x03442964 LDR X2, [X8]
	0x03442968 LDR X8, [X31]
	0x0344296C STP X8, X29, [X31 + 0x60]
	0x03442970 MOVN W8, 0x0
	0x03442974 STR W8, [X31 + 0x8]
	0x03442978 BL 0x1FCD414
	0x0344297C ADRP X8, 0xCEC000
	0x03442980 LDR X8, [X8 + 0x5F0]
	0x03442984 MOV X0, X27
	0x03442988 LDR X1, [X8]
	0x0344298C BL 0x2632230
	0x03442990 LDP X20, X19, [X31 + 0xE0]
	0x03442994 LDP X22, X21, [X31 + 0xD0]
	0x03442998 LDP X24, X23, [X31 + 0xC0]
	0x0344299C LDP X26, X25, [X31 + 0xB0]
	0x034429A0 LDP X28, X27, [X31 + 0xA0]
	0x034429A4 LDP X29, X30, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9C000
	011 Move X24, 0xCB5000
	012 Move W8, [X25+1736]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEE000
	024 Move X0, [X0+1832]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB5000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1736], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEE000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1832]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task LinkAppleAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034429A8 ADD X31, X31, 0xF0
	0x034429AC RET
	0x034429B0 SUB X31, X31, 0xF0
	0x034429B4 STP X29, X30, [X31 + 0x90]
	0x034429B8 STP X28, X27, [X31 + 0xA0]
	0x034429BC STP X26, X25, [X31 + 0xB0]
	0x034429C0 STP X24, X23, [X31 + 0xC0]
	0x034429C4 STP X22, X21, [X31 + 0xD0]
	0x034429C8 STP X20, X19, [X31 + 0xE0]
	0x034429CC STR X7, [X31 + 0x8]
	0x034429D0 ADRP X28, 0xF9B000
	0x034429D4 ADRP X27, 0xCEC000
	0x034429D8 LDRB W8, [X28 + 0x6D8]
	0x034429DC LDR X27, [X27 + 0x620]
	0x034429E0 MOV X20, X6
	0x034429E4 MOV W26, W5
	0x034429E8 MOV W21, W4
	0x034429EC MOV W22, W3
	0x034429F0 MOV W23, W2
	0x034429F4 MOV X24, X1
	0x034429F8 MOV X25, X0
	0x034429FC TBNZ X8, 0x0, 0x3442A38
	0x03442A00 ADRP X0, 0xCEC000
	0x03442A04 LDR X0, [X0 + 0x628]
	0x03442A08 BL 0x1C16CF4
	0x03442A0C ADRP X0, 0xCED000
	0x03442A10 LDR X0, [X0 + 0x7A8]
	0x03442A14 BL 0x1C16CF4
	0x03442A18 ADRP X0, 0xCEC000
	0x03442A1C LDR X0, [X0 + 0x638]
	0x03442A20 BL 0x1C16CF4
	0x03442A24 ADRP X0, 0xCEC000
	0x03442A28 LDR X0, [X0 + 0x620]
	0x03442A2C BL 0x1C16CF4
	0x03442A30 MOVZ W8, 0x1
	0x03442A34 STRB W8, [X28 + 0x6D8]
	0x03442A38 LDR X0, [X27]
	0x03442A3C MOVI V0.2D, 0x0
	0x03442A40 STR X31, [X31 + 0x80]
	0x03442A44 STP V0, V0, [X31 + 0x60]
	0x03442A48 STP V0, V0, [X31 + 0x40]
	0x03442A4C STP V0, V0, [X31 + 0x20]
	0x03442A50 STR V0, [X31 + 0x1]
	0x03442A54 ADRP X19, 0xCEC000
	0x03442A58 ADRP X29, 0xCED000
	0x03442A5C LDR W8, [X0 + 0xE0]
	0x03442A60 LDP X27, X28, [X31 + 0xF0]
	0x03442A64 LDR X19, [X19 + 0x628]
	0x03442A68 LDR X29, [X29 + 0x7A8]
	0x03442A6C CBNZ W8, 0x3442A74
	0x03442A70 BL 0x1C16DFC
	0x03442A74 LDR X0, [X19]
	0x03442A78 ADD X8, X31, 0x10
	0x03442A7C AND W19, W26, 0x1
	0x03442A80 ORR X26, X8, 0xF
	0x03442A84 MOV X8, X26
	0x03442A88 BL 0x263221C
	0x03442A8C LDR X8, [X31 + 0x8]
	0x03442A90 LDR X2, [X29]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9C000
	011 Move X24, 0xCB5000
	012 Move W8, [X25+1737]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEE000
	024 Move X0, [X0+1840]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB5000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1737], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEE000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1840]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task LinkCustomAsync(Nakama.ISession session, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03442A94 ADD X1, X31, 0x10
	0x03442A98 MOV X0, X26
	0x03442A9C STR X8, [X31 + 0x58]
	0x03442AA0 MOVN W8, 0x0
	0x03442AA4 STP X25, X24, [X31 + 0x30]
	0x03442AA8 STP W23, W22, [X31 + 0x50]
	0x03442AAC STR W21, [X31 + 0x40]
	0x03442AB0 STRB W19, [X31 + 0x44]
	0x03442AB4 STR X20, [X31 + 0x48]
	0x03442AB8 STP X28, X27, [X31 + 0x60]
	0x03442ABC STR W8, [X31 + 0x10]
	0x03442AC0 BL 0x1FCD614
	0x03442AC4 ADRP X8, 0xCEC000
	0x03442AC8 LDR X8, [X8 + 0x638]
	0x03442ACC MOV X0, X26
	0x03442AD0 LDR X1, [X8]
	0x03442AD4 BL 0x2632230
	0x03442AD8 LDP X20, X19, [X31 + 0xE0]
	0x03442ADC LDP X22, X21, [X31 + 0xD0]
	0x03442AE0 LDP X24, X23, [X31 + 0xC0]
	0x03442AE4 LDP X26, X25, [X31 + 0xB0]
	0x03442AE8 LDP X28, X27, [X31 + 0xA0]
	0x03442AEC LDP X29, X30, [X31 + 0x90]
	0x03442AF0 ADD X31, X31, 0xF0
	0x03442AF4 RET
	0x03442AF8 SUB X31, X31, 0xC0
	0x03442AFC STP X30, X27, [X31 + 0x70]
	0x03442B00 STP X26, X25, [X31 + 0x80]
	0x03442B04 STP X24, X23, [X31 + 0x90]
	0x03442B08 STP X22, X21, [X31 + 0xA0]
	0x03442B0C STP X20, X19, [X31 + 0xB0]
	0x03442B10 ADRP X26, 0xF9B000
	0x03442B14 ADRP X25, 0xCEC000
	0x03442B18 LDRB W8, [X26 + 0x6D9]
	0x03442B1C LDR X25, [X25 + 0x648]
	0x03442B20 MOV X19, X5
	0x03442B24 MOV X21, X4
	0x03442B28 MOV X20, X3
	0x03442B2C MOV W22, W2
	0x03442B30 MOV X23, X1
	0x03442B34 MOV X24, X0
	0x03442B38 TBNZ X8, 0x0, 0x3442B74
	0x03442B3C ADRP X0, 0xCEC000
	0x03442B40 LDR X0, [X0 + 0x650]
	0x03442B44 BL 0x1C16CF4
	0x03442B48 ADRP X0, 0xCED000
	0x03442B4C LDR X0, [X0 + 0x7B0]
	0x03442B50 BL 0x1C16CF4
	0x03442B54 ADRP X0, 0xCEC000
	0x03442B58 LDR X0, [X0 + 0x660]
	0x03442B5C BL 0x1C16CF4
	0x03442B60 ADRP X0, 0xCEC000
	0x03442B64 LDR X0, [X0 + 0x648]
	0x03442B68 BL 0x1C16CF4
	0x03442B6C MOVZ W8, 0x1
	0x03442B70 STRB W8, [X26 + 0x6D9]
	0x03442B74 LDR X0, [X25]
	0x03442B78 MOVI V0.2D, 0x0
	0x03442B7C STR X31, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9C000
	011 Move X24, 0xCB5000
	012 Move W8, [X25+1738]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEE000
	024 Move X0, [X0+1848]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB5000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1738], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEE000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1848]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task LinkDeviceAsync(Nakama.ISession session, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03442B80 STP V0, V0, [X31 + 0x40]
	0x03442B84 STP V0, V0, [X31 + 0x20]
	0x03442B88 STP V0, V0, [X31]
	0x03442B8C ADRP X25, 0xCEC000
	0x03442B90 ADRP X27, 0xCED000
	0x03442B94 ADRP X26, 0xCEC000
	0x03442B98 LDR W8, [X0 + 0xE0]
	0x03442B9C LDR X25, [X25 + 0x650]
	0x03442BA0 LDR X27, [X27 + 0x7B0]
	0x03442BA4 LDR X26, [X26 + 0x660]
	0x03442BA8 CBNZ W8, 0x3442BB0
	0x03442BAC BL 0x1C16DFC
	0x03442BB0 LDR X0, [X25]
	0x03442BB4 ADD X8, X31, 0x0
	0x03442BB8 ORR X25, X8, 0xF
	0x03442BBC MOV X8, X25
	0x03442BC0 BL 0x263221C
	0x03442BC4 LDR X2, [X27]
	0x03442BC8 MOVN W8, 0x0
	0x03442BCC ADD X1, X31, 0x0
	0x03442BD0 MOV X0, X25
	0x03442BD4 STP X24, X23, [X31 + 0x20]
	0x03442BD8 STR W22, [X31 + 0x30]
	0x03442BDC STP X19, X21, [X31 + 0x40]
	0x03442BE0 STR X20, [X31 + 0x38]
	0x03442BE4 STR W8, [X31]
	0x03442BE8 BL 0x1FCD714
	0x03442BEC LDR X1, [X26]
	0x03442BF0 MOV X0, X25
	0x03442BF4 BL 0x2632230
	0x03442BF8 LDP X20, X19, [X31 + 0xB0]
	0x03442BFC LDP X22, X21, [X31 + 0xA0]
	0x03442C00 LDP X24, X23, [X31 + 0x90]
	0x03442C04 LDP X26, X25, [X31 + 0x80]
	0x03442C08 LDP X30, X27, [X31 + 0x70]
	0x03442C0C ADD X31, X31, 0xC0
	0x03442C10 RET
	0x03442C14 SUB X31, X31, 0x60
	0x03442C18 STP X30, X27, [X31 + 0x10]
	0x03442C1C STP X26, X25, [X31 + 0x20]
	0x03442C20 STP X24, X23, [X31 + 0x30]
	0x03442C24 STP X22, X21, [X31 + 0x40]
	0x03442C28 STP X20, X19, [X31 + 0x50]
	0x03442C2C ADRP X26, 0xF9B000
	0x03442C30 ADRP X27, 0xCED000
	0x03442C34 LDRB W8, [X26 + 0x6DA]
	0x03442C38 LDR X27, [X27 + 0x7B8]
	0x03442C3C MOV X21, X6
	0x03442C40 MOV X19, X5
	0x03442C44 MOV X22, X4
	0x03442C48 MOV W23, W3
	0x03442C4C MOV X24, X2
	0x03442C50 MOV X25, X1
	0x03442C54 MOV X20, X0
	0x03442C58 TBNZ X8, 0x0, 0x3442CAC
	0x03442C5C ADRP X0, 0xCED000
	0x03442C60 LDR X0, [X0 + 0x7C0]
	0x03442C64 BL 0x1C16CF4
	0x03442C68 ADRP X0, 0xCED000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9C000
	011 Move X24, 0xCB5000
	012 Move W8, [X25+1739]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEE000
	024 Move X0, [X0+1856]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB5000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1739], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEE000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1856]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task LinkEmailAsync(Nakama.ISession session, System.String email, System.String password, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03442C6C LDR X0, [X0 + 0x7C8]
	0x03442C70 BL 0x1C16CF4
	0x03442C74 ADRP X0, 0xCED000
	0x03442C78 LDR X0, [X0 + 0x7D0]
	0x03442C7C BL 0x1C16CF4
	0x03442C80 ADRP X0, 0xCED000
	0x03442C84 LDR X0, [X0 + 0x7D8]
	0x03442C88 BL 0x1C16CF4
	0x03442C8C ADRP X0, 0xCED000
	0x03442C90 LDR X0, [X0 + 0x7E0]
	0x03442C94 BL 0x1C16CF4
	0x03442C98 ADRP X0, 0xCED000
	0x03442C9C LDR X0, [X0 + 0x7B8]
	0x03442CA0 BL 0x1C16CF4
	0x03442CA4 MOVZ W8, 0x1
	0x03442CA8 STRB W8, [X26 + 0x6DA]
	0x03442CAC LDR X0, [X27]
	0x03442CB0 BL 0x1C16F10
	0x03442CB4 MOV X1, X31
	0x03442CB8 MOV X26, X0
	0x03442CBC BL 0x33BDD8C
	0x03442CC0 CBZ X26, 0x3442D90
	0x03442CC4 ADRP X8, 0xCED000
	0x03442CC8 LDR X8, [X8 + 0x7C0]
	0x03442CCC STP X20, X25, [X26 + 0x10]
	0x03442CD0 STR X24, [X26 + 0x20]
	0x03442CD4 STR W23, [X26 + 0x28]
	0x03442CD8 STP X22, X21, [X26 + 0x30]
	0x03442CDC LDR X0, [X8]
	0x03442CE0 ADRP X22, 0xCED000
	0x03442CE4 ADRP X25, 0xCED000
	0x03442CE8 ADRP X24, 0xCED000
	0x03442CEC LDR X21, [X20 + 0x58]
	0x03442CF0 LDR X22, [X22 + 0x7E0]
	0x03442CF4 LDR X25, [X25 + 0x7C8]
	0x03442CF8 LDR X24, [X24 + 0x7D0]
	0x03442CFC BL 0x1C16F10
	0x03442D00 LDR X2, [X22]
	0x03442D04 MOV X1, X26
	0x03442D08 MOV X3, X31
	0x03442D0C MOV X22, X0
	0x03442D10 BL 0x2D27AA8
	0x03442D14 LDR X23, [X26 + 0x18]
	0x03442D18 CBNZ X19, 0x3442D20
	0x03442D1C LDR X19, [X20 + 0x18]
	0x03442D20 LDR X1, [X26 + 0x38]
	0x03442D24 LDR X2, [X25]
	0x03442D28 ADD X0, X31, 0x0
	0x03442D2C STP X31, X31, [X31]
	0x03442D30 BL 0x242E368
	0x03442D34 LDR X0, [X24]
	0x03442D38 BL 0x1C16F10
	0x03442D3C LDP X3, X4, [X31]
	0x03442D40 MOV X1, X23
	0x03442D44 MOV X2, X19
	0x03442D48 MOV X5, X31
	0x03442D4C MOV X20, X0
	0x03442D50 BL 0x3465404
	0x03442D54 CBZ X21, 0x3442D90
	0x03442D58 ADRP X8, 0xCED000
	0x03442D5C LDR X8, [X8 + 0x7D8]
	0x03442D60 MOV X0, X21
	0x03442D64 MOV X1, X22
	0x03442D68 MOV X2, X20

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9C000
	012 Move X25, 0xCB5000
	013 Move W8, [X26+1740]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEE000
	026 Move X0, [X0+1864]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB5000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1740], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEE000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1864]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task LinkFacebookAsync(Nakama.ISession session, System.String token, System.Nullable`1<System.Boolean> import = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03442D6C LDR X3, [X8]
	0x03442D70 BL 0x2243230
	0x03442D74 LDP X20, X19, [X31 + 0x50]
	0x03442D78 LDP X22, X21, [X31 + 0x40]
	0x03442D7C LDP X24, X23, [X31 + 0x30]
	0x03442D80 LDP X26, X25, [X31 + 0x20]
	0x03442D84 LDP X30, X27, [X31 + 0x10]
	0x03442D88 ADD X31, X31, 0x60
	0x03442D8C RET
	0x03442D90 BL 0x1C16F20
	0x03442D94 MOV X1, X31
	0x03442D98 B 0x33BDD8C
	0x03442D9C SUB X31, X31, 0xD0
	0x03442DA0 STR X30, [X31 + 0x70]
	0x03442DA4 STP X28, X27, [X31 + 0x80]
	0x03442DA8 STP X26, X25, [X31 + 0x90]
	0x03442DAC STP X24, X23, [X31 + 0xA0]
	0x03442DB0 STP X22, X21, [X31 + 0xB0]
	0x03442DB4 STP X20, X19, [X31 + 0xC0]
	0x03442DB8 ADRP X27, 0xF9B000
	0x03442DBC ADRP X26, 0xCEC000
	0x03442DC0 LDRB W8, [X27 + 0x6DB]
	0x03442DC4 LDR X26, [X26 + 0x6E0]
	0x03442DC8 MOV X19, X6
	0x03442DCC MOV X21, X5
	0x03442DD0 MOV X20, X4
	0x03442DD4 MOV W22, W3
	0x03442DD8 MOV X23, X2
	0x03442DDC MOV X24, X1
	0x03442DE0 MOV X25, X0
	0x03442DE4 TBNZ X8, 0x0, 0x3442E20
	0x03442DE8 ADRP X0, 0xCEC000
	0x03442DEC LDR X0, [X0 + 0x6E8]
	0x03442DF0 BL 0x1C16CF4
	0x03442DF4 ADRP X0, 0xCED000
	0x03442DF8 LDR X0, [X0 + 0x7E8]
	0x03442DFC BL 0x1C16CF4
	0x03442E00 ADRP X0, 0xCEC000
	0x03442E04 LDR X0, [X0 + 0x6F8]
	0x03442E08 BL 0x1C16CF4
	0x03442E0C ADRP X0, 0xCEC000
	0x03442E10 LDR X0, [X0 + 0x6E0]
	0x03442E14 BL 0x1C16CF4
	0x03442E18 MOVZ W8, 0x1
	0x03442E1C STRB W8, [X27 + 0x6DB]
	0x03442E20 LDR X0, [X26]
	0x03442E24 MOVI V0.2D, 0x0
	0x03442E28 STP V0, V0, [X31 + 0x50]
	0x03442E2C STP V0, V0, [X31 + 0x30]
	0x03442E30 STP V0, V0, [X31 + 0x10]
	0x03442E34 STR V0, [X31]
	0x03442E38 ADRP X26, 0xCEC000
	0x03442E3C ADRP X28, 0xCED000
	0x03442E40 ADRP X27, 0xCEC000
	0x03442E44 LDR W8, [X0 + 0xE0]
	0x03442E48 LDR X26, [X26 + 0x6E8]
	0x03442E4C LDR X28, [X28 + 0x7E8]
	0x03442E50 LDR X27, [X27 + 0x6F8]
	0x03442E54 CBNZ W8, 0x3442E5C
	0x03442E58 BL 0x1C16DFC
	0x03442E5C LDR X0, [X26]
	0x03442E60 ADD X8, X31, 0x0
	0x03442E64 ORR X26, X8, 0xF
	0x03442E68 MOV X8, X26

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9C000
	012 Move X25, 0xCB5000
	013 Move W8, [X26+1741]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEE000
	026 Move X0, [X0+1872]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB5000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1741], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEE000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1872]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 NotImplemented "Instruction STRH not yet implemented."
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task LinkGameCenterAsync(Nakama.ISession session, System.String bundleId, System.String playerId, System.String publicKeyUrl, System.String salt, System.String signature, System.String timestamp, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03442E6C BL 0x263221C
	0x03442E70 LDR X2, [X28]
	0x03442E74 MOVN W8, 0x0
	0x03442E78 ADD X1, X31, 0x0
	0x03442E7C MOV X0, X26
	0x03442E80 STP X25, X24, [X31 + 0x20]
	0x03442E84 STR X23, [X31 + 0x30]
	0x03442E88 STR W22, [X31 + 0x38]
	0x03442E8C STP X19, X21, [X31 + 0x48]
	0x03442E90 STR X20, [X31 + 0x40]
	0x03442E94 STR W8, [X31]
	0x03442E98 BL 0x1FCD814
	0x03442E9C LDR X1, [X27]
	0x03442EA0 MOV X0, X26
	0x03442EA4 BL 0x2632230
	0x03442EA8 LDP X20, X19, [X31 + 0xC0]
	0x03442EAC LDP X22, X21, [X31 + 0xB0]
	0x03442EB0 LDP X24, X23, [X31 + 0xA0]
	0x03442EB4 LDP X26, X25, [X31 + 0x90]
	0x03442EB8 LDP X28, X27, [X31 + 0x80]
	0x03442EBC LDR X30, [X31 + 0x70]
	0x03442EC0 ADD X31, X31, 0xD0
	0x03442EC4 RET
	0x03442EC8 SUB X31, X31, 0xC0
	0x03442ECC STP X30, X27, [X31 + 0x70]
	0x03442ED0 STP X26, X25, [X31 + 0x80]
	0x03442ED4 STP X24, X23, [X31 + 0x90]
	0x03442ED8 STP X22, X21, [X31 + 0xA0]
	0x03442EDC STP X20, X19, [X31 + 0xB0]
	0x03442EE0 ADRP X26, 0xF9B000
	0x03442EE4 ADRP X25, 0xCEC000
	0x03442EE8 LDRB W8, [X26 + 0x6DC]
	0x03442EEC LDR X25, [X25 + 0x568]
	0x03442EF0 MOV X19, X5
	0x03442EF4 MOV X20, X4
	0x03442EF8 MOV X21, X3
	0x03442EFC MOV W22, W2
	0x03442F00 MOV X23, X1
	0x03442F04 MOV X24, X0
	0x03442F08 TBNZ X8, 0x0, 0x3442F44
	0x03442F0C ADRP X0, 0xCEC000
	0x03442F10 LDR X0, [X0 + 0x570]
	0x03442F14 BL 0x1C16CF4
	0x03442F18 ADRP X0, 0xCED000
	0x03442F1C LDR X0, [X0 + 0x7F0]
	0x03442F20 BL 0x1C16CF4
	0x03442F24 ADRP X0, 0xCEC000
	0x03442F28 LDR X0, [X0 + 0x580]
	0x03442F2C BL 0x1C16CF4
	0x03442F30 ADRP X0, 0xCEC000
	0x03442F34 LDR X0, [X0 + 0x568]
	0x03442F38 BL 0x1C16CF4
	0x03442F3C MOVZ W8, 0x1
	0x03442F40 STRB W8, [X26 + 0x6DC]
	0x03442F44 LDR X0, [X25]
	0x03442F48 MOVI V0.2D, 0x0
	0x03442F4C STR X31, [X31 + 0x60]
	0x03442F50 STP V0, V0, [X31 + 0x40]
	0x03442F54 STP V0, V0, [X31 + 0x20]
	0x03442F58 STP V0, V0, [X31]
	0x03442F5C ADRP X25, 0xCEC000
	0x03442F60 ADRP X27, 0xCED000
	0x03442F64 ADRP X26, 0xCEC000
	0x03442F68 LDR W8, [X0 + 0xE0]
	0x03442F6C LDR X25, [X25 + 0x570]
	0x03442F70 LDR X27, [X27 + 0x7F0]
	0x03442F74 LDR X26, [X26 + 0x580]
	0x03442F78 CBNZ W8, 0x3442F80
	0x03442F7C BL 0x1C16DFC
	0x03442F80 LDR X0, [X25]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X27, 0xF9C000
	015 Move W8, [X27+1742]
	016 Move X19, X7
	017 Move X21, X6
	018 Move X22, X5
	019 Move X23, X4
	020 Move X24, X3
	021 Move X25, X2
	022 Move X26, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0xCEE000
	029 Move X0, [X0+1880]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB5000
	032 Move X0, [X0+640]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X27+1742], W8
	036 Move X28, [X31+272]
	037 Move X29, [X31+280]
	038 Add X0, X31, 40
	039 Move W2, 136
	040 Move W1, W31
	041 Add X27, X31, 40
	042 Call 0x3EB2B10
	043 Move X8, 0xCB5000
	044 Move X8, [X8+640]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 16
	051 Move X0, X31
	052 Call AsyncTaskMethodBuilder.Create
	053 Move [X31+80], X26
	054 Move [X31+88], X25
	055 Move [X31+96], X24
	056 Move [X31+104], X23
	057 Move [X31+112], X22
	058 Move [X31+120], X21
	059 Move [X31+136], X29
	060 Move [X31+144], X28
	061 Move [X31+128], X19
	062 Move X10, 0xCEE000
	063 Move V0, [X31+1]
	064 Move X8, [X31+32]
	065 Move X10, [X10+1880]
	066 Add X27, X27, 8
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W9, TEMP
	070 Add X1, X31, 40
	071 Move X2, [X10]
	072 Move X0, X27
	073 Move [X31+48], V0
	074 Move [X31+64], X8
	075 Move [X31+72], X20
	076 Move [X31+40], W9
	077 Call AsyncTaskMethodBuilder.Start, X0, X1
	078 Move X0, X27
	079 Move X1, X31
	080 Call AsyncTaskMethodBuilder.get_Task, X0
	081 Move X20, [X31+256]
	082 Move X19, [X31+264]
	083 Move X22, [X31+240]
	084 Move X21, [X31+248]
	085 Move X24, [X31+224]
	086 Move X23, [X31+232]
	087 Move X26, [X31+208]
	088 Move X25, [X31+216]
	089 Move X28, [X31+192]
	090 Move X27, [X31+200]
	091 Move X29, [X31+176]
	092 Move X30, [X31+184]
	093 Add X31, X31, 272
	094 Return X0

Method: System.Threading.Tasks.Task LinkGoogleAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03442F84 ADD X8, X31, 0x0
	0x03442F88 ORR X25, X8, 0xF
	0x03442F8C MOV X8, X25
	0x03442F90 BL 0x263221C
	0x03442F94 LDR X2, [X27]
	0x03442F98 MOVN W8, 0x0
	0x03442F9C ADD X1, X31, 0x0
	0x03442FA0 MOV X0, X25
	0x03442FA4 STP X24, X23, [X31 + 0x20]
	0x03442FA8 STR W22, [X31 + 0x38]
	0x03442FAC STR X21, [X31 + 0x30]
	0x03442FB0 STP X19, X20, [X31 + 0x40]
	0x03442FB4 STR W8, [X31]
	0x03442FB8 BL 0x1FCD914
	0x03442FBC LDR X1, [X26]
	0x03442FC0 MOV X0, X25
	0x03442FC4 BL 0x2632230
	0x03442FC8 LDP X20, X19, [X31 + 0xB0]
	0x03442FCC LDP X22, X21, [X31 + 0xA0]
	0x03442FD0 LDP X24, X23, [X31 + 0x90]
	0x03442FD4 LDP X26, X25, [X31 + 0x80]
	0x03442FD8 LDP X30, X27, [X31 + 0x70]
	0x03442FDC ADD X31, X31, 0xC0
	0x03442FE0 RET
	0x03442FE4 SUB X31, X31, 0xF0
	0x03442FE8 STP X29, X30, [X31 + 0x90]
	0x03442FEC STP X28, X27, [X31 + 0xA0]
	0x03442FF0 STP X26, X25, [X31 + 0xB0]
	0x03442FF4 STP X24, X23, [X31 + 0xC0]
	0x03442FF8 STP X22, X21, [X31 + 0xD0]
	0x03442FFC STP X20, X19, [X31 + 0xE0]
	0x03443000 ADRP X28, 0xF9A000
	0x03443004 LDRB W8, [X28 + 0x6DD]
	0x03443008 MOV W20, W6
	0x0344300C MOV X21, X5
	0x03443010 MOV X22, X4
	0x03443014 MOV X23, X3
	0x03443018 MOV X24, X2
	0x0344301C MOV X25, X1
	0x03443020 MOV X26, X0
	0x03443024 STR X7, [X31]
	0x03443028 TBNZ X8, 0x0, 0x3443064
	0x0344302C ADRP X0, 0xCEB000
	0x03443030 LDR X0, [X0 + 0x738]
	0x03443034 BL 0x1C16CF4
	0x03443038 ADRP X0, 0xCEC000
	0x0344303C LDR X0, [X0 + 0x7F8]
	0x03443040 BL 0x1C16CF4
	0x03443044 ADRP X0, 0xCEB000
	0x03443048 LDR X0, [X0 + 0x748]
	0x0344304C BL 0x1C16CF4
	0x03443050 ADRP X0, 0xCEB000
	0x03443054 LDR X0, [X0 + 0x730]
	0x03443058 BL 0x1C16CF4
	0x0344305C MOVZ W8, 0x1
	0x03443060 STRB W8, [X28 + 0x6DD]
	0x03443064 ADRP X27, 0xCEB000
	0x03443068 LDP X28, X29, [X31 + 0xF0]
	0x0344306C LDR X27, [X27 + 0x738]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF9C000
	011 Move X24, 0xCB5000
	012 Move W8, [X25+1743]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEE000
	024 Move X0, [X0+1888]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB5000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1743], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEE000
	040 Move W8, [X0+224]
	041 Move X24, [X24+1888]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task LinkSteamAsync(Nakama.ISession session, System.String token, System.Boolean sync, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03443070 ADD X0, X31, 0x8
	0x03443074 MOVZ W2, 0x88
	0x03443078 MOV W1, W31
	0x0344307C ADD X19, X31, 0x8
	0x03443080 BL 0x3EB1B10
	0x03443084 ADRP X8, 0xCEB000
	0x03443088 LDR X8, [X8 + 0x730]
	0x0344308C LDR X0, [X8]
	0x03443090 LDR W8, [X0 + 0xE0]
	0x03443094 CBNZ W8, 0x344309C
	0x03443098 BL 0x1C16DFC
	0x0344309C LDR X0, [X27]
	0x034430A0 ADD X27, X19, 0x8
	0x034430A4 MOV X8, X27
	0x034430A8 BL 0x263221C
	0x034430AC STP X26, X25, [X31 + 0x28]
	0x034430B0 STP X24, X23, [X31 + 0x38]
	0x034430B4 STP X22, X21, [X31 + 0x50]
	0x034430B8 STR W20, [X31 + 0x48]
	0x034430BC STR X28, [X31 + 0x70]
	0x034430C0 ADRP X8, 0xCEC000
	0x034430C4 LDR X8, [X8 + 0x7F8]
	0x034430C8 ADD X1, X31, 0x8
	0x034430CC MOV X0, X27
	0x034430D0 LDR X2, [X8]
	0x034430D4 LDR X8, [X31]
	0x034430D8 STP X8, X29, [X31 + 0x60]
	0x034430DC MOVN W8, 0x0
	0x034430E0 STR W8, [X31 + 0x8]
	0x034430E4 BL 0x1FCDA14
	0x034430E8 ADRP X8, 0xCEB000
	0x034430EC LDR X8, [X8 + 0x748]
	0x034430F0 MOV X0, X27
	0x034430F4 LDR X1, [X8]
	0x034430F8 BL 0x2632230
	0x034430FC LDP X20, X19, [X31 + 0xE0]
	0x03443100 LDP X22, X21, [X31 + 0xD0]
	0x03443104 LDP X24, X23, [X31 + 0xC0]
	0x03443108 LDP X26, X25, [X31 + 0xB0]
	0x0344310C LDP X28, X27, [X31 + 0xA0]
	0x03443110 LDP X29, X30, [X31 + 0x90]
	0x03443114 ADD X31, X31, 0xF0
	0x03443118 RET
	0x0344311C SUB X31, X31, 0xF0
	0x03443120 STP X29, X30, [X31 + 0x90]
	0x03443124 STP X28, X27, [X31 + 0xA0]
	0x03443128 STP X26, X25, [X31 + 0xB0]
	0x0344312C STP X24, X23, [X31 + 0xC0]
	0x03443130 STP X22, X21, [X31 + 0xD0]
	0x03443134 STP X20, X19, [X31 + 0xE0]
	0x03443138 ADRP X28, 0xF9A000
	0x0344313C LDRB W8, [X28 + 0x6DE]
	0x03443140 MOV X20, X7
	0x03443144 MOV W21, W6
	0x03443148 MOV X22, X4
	0x0344314C MOV X23, X3
	0x03443150 MOV X24, X2
	0x03443154 MOV X25, X1
	0x03443158 MOV X26, X0
	0x0344315C STR X5, [X31]
	0x03443160 TBNZ X8, 0x0, 0x344319C
	0x03443164 ADRP X0, 0xCEB000
	0x03443168 LDR X0, [X0 + 0x738]
	0x0344316C BL 0x1C16CF4
	0x03443170 ADRP X0, 0xCEC000
	0x03443174 LDR X0, [X0 + 0x800]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9B000
	012 Move X25, 0xCB4000
	013 Move W8, [X26+1744]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move W24, W3
	018 Move X22, X2
	019 Move X23, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCED000
	026 Move X0, [X0+1896]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB4000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1744], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCED000
	043 Move W8, [X0+224]
	044 Move X25, [X25+1896]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 And W24, W24, 1
	051 Call AsyncTaskMethodBuilder.Create
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move X9, [X31+24]
	054 Move X2, [X25]
	055 Add X8, X31, 32
	056 Move [X31+96], X20
	057 Move [X31+104], X21
	058 Or X20, X8, 15
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W10, TEMP
	062 Add X1, X31, 32
	063 Move X0, X20
	064 Move [X31+64], X19
	065 Move [X31+72], X23
	066 Move [X31+80], W24
	067 Move [X31+88], X22
	068 Move [X31+40], V0
	069 Move [X31+56], X9
	070 Move [X31+32], W10
	071 Call AsyncTaskMethodBuilder.Start, X0, X1
	072 Move X0, X20
	073 Move X1, X31
	074 Call AsyncTaskMethodBuilder.get_Task, X0
	075 Move X20, [X31+208]
	076 Move X19, [X31+216]
	077 Move X22, [X31+192]
	078 Move X21, [X31+200]
	079 Move X24, [X31+176]
	080 Move X23, [X31+184]
	081 Move X26, [X31+160]
	082 Move X25, [X31+168]
	083 Move X30, [X31+144]
	084 Add X31, X31, 224
	085 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiChannelMessageList> ListChannelMessagesAsync(Nakama.ISession session, Nakama.IChannel channel, System.Int32 limit = 1, System.Boolean forward = True, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03443178 BL 0x1C16CF4
	0x0344317C ADRP X0, 0xCEB000
	0x03443180 LDR X0, [X0 + 0x748]
	0x03443184 BL 0x1C16CF4
	0x03443188 ADRP X0, 0xCEB000
	0x0344318C LDR X0, [X0 + 0x730]
	0x03443190 BL 0x1C16CF4
	0x03443194 MOVZ W8, 0x1
	0x03443198 STRB W8, [X28 + 0x6DE]
	0x0344319C ADRP X27, 0xCEB000
	0x034431A0 LDP X28, X29, [X31 + 0xF0]
	0x034431A4 LDR X27, [X27 + 0x738]
	0x034431A8 ADD X0, X31, 0x8
	0x034431AC MOVZ W2, 0x88
	0x034431B0 MOV W1, W31
	0x034431B4 ADD X19, X31, 0x8
	0x034431B8 BL 0x3EB1B10
	0x034431BC ADRP X8, 0xCEB000
	0x034431C0 LDR X8, [X8 + 0x730]
	0x034431C4 LDR X0, [X8]
	0x034431C8 LDR W8, [X0 + 0xE0]
	0x034431CC CBNZ W8, 0x34431D4
	0x034431D0 BL 0x1C16DFC
	0x034431D4 LDR X0, [X27]
	0x034431D8 ADD X27, X19, 0x8
	0x034431DC MOV X8, X27
	0x034431E0 BL 0x263221C
	0x034431E4 STP X26, X25, [X31 + 0x28]
	0x034431E8 STP X24, X23, [X31 + 0x38]
	0x034431EC STR W21, [X31 + 0x48]
	0x034431F0 STP X20, X22, [X31 + 0x50]
	0x034431F4 STR X28, [X31 + 0x70]
	0x034431F8 ADRP X8, 0xCEC000
	0x034431FC LDR X8, [X8 + 0x800]
	0x03443200 ADD X1, X31, 0x8
	0x03443204 MOV X0, X27
	0x03443208 LDR X2, [X8]
	0x0344320C LDR X8, [X31]
	0x03443210 STP X8, X29, [X31 + 0x60]
	0x03443214 MOVN W8, 0x0
	0x03443218 STR W8, [X31 + 0x8]
	0x0344321C BL 0x1FCDB14
	0x03443220 ADRP X8, 0xCEB000
	0x03443224 LDR X8, [X8 + 0x748]
	0x03443228 MOV X0, X27
	0x0344322C LDR X1, [X8]
	0x03443230 BL 0x2632230
	0x03443234 LDP X20, X19, [X31 + 0xE0]
	0x03443238 LDP X22, X21, [X31 + 0xD0]
	0x0344323C LDP X24, X23, [X31 + 0xC0]
	0x03443240 LDP X26, X25, [X31 + 0xB0]
	0x03443244 LDP X28, X27, [X31 + 0xA0]
	0x03443248 LDP X29, X30, [X31 + 0x90]
	0x0344324C ADD X31, X31, 0xF0
	0x03443250 RET
	0x03443254 SUB X31, X31, 0xF0
	0x03443258 STP X29, X30, [X31 + 0x90]
	0x0344325C STP X28, X27, [X31 + 0xA0]
	0x03443260 STP X26, X25, [X31 + 0xB0]
	0x03443264 STP X24, X23, [X31 + 0xC0]
	0x03443268 STP X22, X21, [X31 + 0xD0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0xF9B000
	012 Move W8, [X27+1745]
	013 Move X19, X7
	014 Move X20, X6
	015 Move X21, X5
	016 Move W23, W4
	017 Move W22, W3
	018 Move X26, X2
	019 Move X24, X1
	020 Move X25, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0xCED000
	026 Move X0, [X0+1904]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X27+1745], W8
	030 Compare X26, 0
	031 JumpIfEqual {73}
	032 Move X10, 0xCED000
	033 Move X8, [X26]
	034 Move X10, [X10+1904]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X26
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X26
	054 NotImplemented "Instruction BLR not yet implemented."
	055 And W4, W23, 1
	056 Move X2, X0
	057 Move X0, X25
	058 Move X1, X24
	059 Move W3, W22
	060 Move X5, X21
	061 Move X6, X20
	062 Move X7, X19
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Move X27, [X31+88]
	073 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiChannelMessageList> ListChannelMessagesAsync(Nakama.ISession session, System.String channelId, System.Int32 limit = 1, System.Boolean forward = True, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x0344326C STP X20, X19, [X31 + 0xE0]
	0x03443270 STR X7, [X31 + 0x8]
	0x03443274 ADRP X28, 0xF9A000
	0x03443278 ADRP X27, 0xCEB000
	0x0344327C LDRB W8, [X28 + 0x6DF]
	0x03443280 LDR X27, [X27 + 0x708]
	0x03443284 MOV W20, W6
	0x03443288 MOV X21, X5
	0x0344328C MOV X22, X4
	0x03443290 MOV W23, W3
	0x03443294 MOV W24, W2
	0x03443298 MOV X25, X1
	0x0344329C MOV X26, X0
	0x034432A0 TBNZ X8, 0x0, 0x34432DC
	0x034432A4 ADRP X0, 0xCEB000
	0x034432A8 LDR X0, [X0 + 0x710]
	0x034432AC BL 0x1C16CF4
	0x034432B0 ADRP X0, 0xCEC000
	0x034432B4 LDR X0, [X0 + 0x808]
	0x034432B8 BL 0x1C16CF4
	0x034432BC ADRP X0, 0xCEB000
	0x034432C0 LDR X0, [X0 + 0x720]
	0x034432C4 BL 0x1C16CF4
	0x034432C8 ADRP X0, 0xCEB000
	0x034432CC LDR X0, [X0 + 0x708]
	0x034432D0 BL 0x1C16CF4
	0x034432D4 MOVZ W8, 0x1
	0x034432D8 STRB W8, [X28 + 0x6DF]
	0x034432DC LDR X0, [X27]
	0x034432E0 MOVI V0.2D, 0x0
	0x034432E4 STP V0, V0, [X31 + 0x70]
	0x034432E8 STP V0, V0, [X31 + 0x50]
	0x034432EC STP V0, V0, [X31 + 0x30]
	0x034432F0 STP V0, V0, [X31 + 0x10]
	0x034432F4 ADRP X27, 0xCEB000
	0x034432F8 ADRP X28, 0xCEC000
	0x034432FC LDR W8, [X0 + 0xE0]
	0x03443300 LDP X19, X29, [X31 + 0xF0]
	0x03443304 LDR X27, [X27 + 0x710]
	0x03443308 LDR X28, [X28 + 0x808]
	0x0344330C CBNZ W8, 0x3443314
	0x03443310 BL 0x1C16DFC
	0x03443314 LDR X0, [X27]
	0x03443318 ADD X8, X31, 0x10
	0x0344331C ORR X27, X8, 0xF
	0x03443320 MOV X8, X27
	0x03443324 BL 0x263221C
	0x03443328 LDR X8, [X31 + 0x8]
	0x0344332C LDR X2, [X28]
	0x03443330 ADD X1, X31, 0x10
	0x03443334 MOV X0, X27
	0x03443338 STR X8, [X31 + 0x60]
	0x0344333C MOVN W8, 0x0
	0x03443340 STP X26, X25, [X31 + 0x30]
	0x03443344 STP W24, W23, [X31 + 0x40]
	0x03443348 STP X22, X21, [X31 + 0x48]
	0x0344334C STR W20, [X31 + 0x58]
	0x03443350 STP X29, X19, [X31 + 0x68]
	0x03443354 STR W8, [X31 + 0x10]
	0x03443358 BL 0x1FCDC14
	0x0344335C ADRP X8, 0xCEB000
	0x03443360 LDR X8, [X8 + 0x720]
	0x03443364 MOV X0, X27
	0x03443368 LDR X1, [X8]
	0x0344336C BL 0x2632230
	0x03443370 LDP X20, X19, [X31 + 0xE0]
	0x03443374 LDP X22, X21, [X31 + 0xD0]
	0x03443378 LDP X24, X23, [X31 + 0xC0]
	0x0344337C LDP X26, X25, [X31 + 0xB0]
	0x03443380 LDP X28, X27, [X31 + 0xA0]
	0x03443384 LDP X29, X30, [X31 + 0x90]
	0x03443388 ADD X31, X31, 0xF0
	0x0344338C RET
	0x03443390 SUB X31, X31, 0x50
	0x03443394 STR X30, [X31 + 0x10]
	0x03443398 STP X24, X23, [X31 + 0x20]
	0x0344339C STP X22, X21, [X31 + 0x30]
	0x034433A0 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xF9B000
	015 Move X27, 0xCEC000
	016 Move W8, [X28+1746]
	017 Move X27, [X27+1048]
	018 Move X19, X7
	019 Move X21, X6
	020 Move X20, X5
	021 Move W26, W4
	022 Move W22, W3
	023 Move X23, X2
	024 Move X24, X1
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCEC000
	031 Move X0, [X0+1056]
	032 Call 0x1C17CF4
	033 Move X0, 0xCED000
	034 Move X0, [X0+1912]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEC000
	037 Move X0, [X0+1072]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEC000
	040 Move X0, [X0+1048]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1746], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+80], V0
	047 Move [X31+88], V0
	048 Move [X31+48], V0
	049 Move [X31+56], V0
	050 Move [X31+16], V0
	051 Move [X31+24], V0
	052 Move [X31], V0
	053 Move X29, 0xCEC000
	054 Move X28, 0xCED000
	055 Move X27, 0xCEC000
	056 Move W8, [X0+224]
	057 Move X29, [X29+1056]
	058 Move X28, [X28+1912]
	059 Move X27, [X27+1072]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X29]
	064 Add X8, X31, 0
	065 And W29, W26, 1
	066 Or X26, X8, 15
	067 Move X8, X26
	068 Call AsyncTaskMethodBuilder`1<Object>.Create
	069 Move X2, [X28]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W8, TEMP
	073 Add X1, X31, 0
	074 Move X0, X26
	075 Move [X31+32], X25
	076 Move [X31+40], X24
	077 Move [X31+48], X23
	078 Move [X31+56], W22
	079 Move [X31+60], W29
	080 Move [X31+72], X19
	081 Move [X31+80], X21
	082 Move [X31+64], X20
	083 Move [X31], W8
	084 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	085 Move X1, [X27]
	086 Move X0, X26
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+192]
	089 Move X19, [X31+200]
	090 Move X22, [X31+176]
	091 Move X21, [X31+184]
	092 Move X24, [X31+160]
	093 Move X23, [X31+168]
	094 Move X26, [X31+144]
	095 Move X25, [X31+152]
	096 Move X28, [X31+128]
	097 Move X27, [X31+136]
	098 Move X29, [X31+112]
	099 Move X30, [X31+120]
	100 Add X31, X31, 208
	101 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiFriendList> ListFriendsAsync(Nakama.ISession session, System.Nullable`1<System.Int32> state, System.Int32 limit, System.String cursor, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034433A4 ADRP X24, 0xF9A000
	0x034433A8 LDRB W8, [X24 + 0x6E0]
	0x034433AC MOV X19, X4
	0x034433B0 MOV W20, W3
	0x034433B4 MOV X21, X2
	0x034433B8 MOV X22, X1
	0x034433BC MOV X23, X0
	0x034433C0 TBNZ X8, 0x0, 0x34433D8
	0x034433C4 ADRP X0, 0xCB1000
	0x034433C8 LDR X0, [X0 + 0x818]
	0x034433CC BL 0x1C16CF4
	0x034433D0 MOVZ W8, 0x1
	0x034433D4 STRB W8, [X24 + 0x6E0]
	0x034433D8 CBZ X22, 0x344347C
	0x034433DC ADRP X10, 0xCB1000
	0x034433E0 LDR X8, [X22]
	0x034433E4 LDR X10, [X10 + 0x818]
	0x034433E8 LDRH W9, [X8 + 0x12E]
	0x034433EC LDR X1, [X10]
	0x034433F0 CBZ X9, 0x3443414
	0x034433F4 LDR X10, [X8 + 0xB0]
	0x034433F8 ADD X10, X10, 0x8
	0x034433FC LDUR X11, [X10 - 0x8]
	0x03443400 CMP X11, X1
	0x03443404 B.EQ 0x3443424
	0x03443408 SUBS X9, X9, 0x1
	0x0344340C ADD X10, X10, 0x10
	0x03443410 B.NE 0x34433FC
	0x03443414 MOVZ W2, 0xA
	0x03443418 MOV X0, X22
	0x0344341C BL 0x1C5C788
	0x03443420 B 0x3443434
	0x03443424 LDR W9, [X10]
	0x03443428 ADD W9, W9, 0xA
	0x0344342C ADD X8, X8, W9, 0x4, SXTW
	0x03443430 ADD X0, X8, 0x138
	0x03443434 LDP X8, X1, [X0]
	0x03443438 MOV X0, X22
	0x0344343C BLR X8
	0x03443440 MOV X2, X0
	0x03443444 MOV X0, X23
	0x03443448 MOV X1, X22
	0x0344344C MOV X3, X21
	0x03443450 MOV W4, W20
	0x03443454 MOV X5, X19
	0x03443458 MOV X6, X31
	0x0344345C MOV X7, X31
	0x03443460 BL 0x3443480
	0x03443464 LDP X20, X19, [X31 + 0x40]
	0x03443468 LDP X22, X21, [X31 + 0x30]
	0x0344346C LDP X24, X23, [X31 + 0x20]
	0x03443470 LDR X30, [X31 + 0x10]
	0x03443474 ADD X31, X31, 0x50
	0x03443478 RET
	0x0344347C BL 0x1C16F20
	0x03443480 SUB X31, X31, 0xE0
	0x03443484 STP X29, X30, [X31 + 0x80]
	0x03443488 STP X28, X27, [X31 + 0x90]
	0x0344348C STP X26, X25, [X31 + 0xA0]
	0x03443490 STP X24, X23, [X31 + 0xB0]
	0x03443494 STP X22, X21, [X31 + 0xC0]
	0x03443498 STP X20, X19, [X31 + 0xD0]
	0x0344349C ADRP X28, 0xF9A000
	0x034434A0 ADRP X27, 0xCEB000
	0x034434A4 LDRB W8, [X28 + 0x6E1]
	0x034434A8 LDR X27, [X27 + 0x790]
	0x034434AC MOV X19, X7
	0x034434B0 MOV X21, X6
	0x034434B4 MOV X20, X5
	0x034434B8 MOV W22, W4
	0x034434BC MOV X23, X3
	0x034434C0 MOV X24, X2
	0x034434C4 MOV X25, X1
	0x034434C8 MOV X26, X0
	0x034434CC TBNZ X8, 0x0, 0x3443508

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X30
	003 Move [X31+128], X28
	004 Move [X31+136], X27
	005 Move [X31+144], X26
	006 Move [X31+152], X25
	007 Move [X31+160], X24
	008 Move [X31+168], X23
	009 Move [X31+176], X22
	010 Move [X31+184], X21
	011 Move [X31+192], X20
	012 Move [X31+200], X19
	013 Move X27, 0xF9B000
	014 Move X26, 0xCEC000
	015 Move W8, [X27+1747]
	016 Move X26, [X26+1096]
	017 Move X19, X6
	018 Move X21, X5
	019 Move X20, X4
	020 Move W22, W3
	021 Move X23, X2
	022 Move X24, X1
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCEC000
	029 Move X0, [X0+1104]
	030 Call 0x1C17CF4
	031 Move X0, 0xCED000
	032 Move X0, [X0+1920]
	033 Call 0x1C17CF4
	034 Move X0, 0xCEC000
	035 Move X0, [X0+1120]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEC000
	038 Move X0, [X0+1096]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+1747], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+80], V0
	045 Move [X31+88], V0
	046 Move [X31+48], V0
	047 Move [X31+56], V0
	048 Move [X31+16], V0
	049 Move [X31+24], V0
	050 Move [X31], V0
	051 Move X26, 0xCEC000
	052 Move X28, 0xCED000
	053 Move X27, 0xCEC000
	054 Move W8, [X0+224]
	055 Move X26, [X26+1104]
	056 Move X28, [X28+1920]
	057 Move X27, [X27+1120]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, [X26]
	062 Add X8, X31, 0
	063 Or X26, X8, 15
	064 Move X8, X26
	065 Call AsyncTaskMethodBuilder`1<Object>.Create
	066 Move X2, [X28]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Add X1, X31, 0
	071 Move X0, X26
	072 Move [X31+32], X25
	073 Move [X31+40], X24
	074 Move [X31+52], X23
	075 Move [X31+48], W22
	076 Move [X31+72], X19
	077 Move [X31+80], X21
	078 Move [X31+64], X20
	079 Move [X31], W8
	080 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	081 Move X1, [X27]
	082 Move X0, X26
	083 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	084 Move X20, [X31+192]
	085 Move X19, [X31+200]
	086 Move X22, [X31+176]
	087 Move X21, [X31+184]
	088 Move X24, [X31+160]
	089 Move X23, [X31+168]
	090 Move X26, [X31+144]
	091 Move X25, [X31+152]
	092 Move X28, [X31+128]
	093 Move X27, [X31+136]
	094 Move X30, [X31+112]
	095 Add X31, X31, 208
	096 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiGroupUserList> ListGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Nullable`1<System.Int32> state, System.Int32 limit, System.String cursor, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034434D0 ADRP X0, 0xCEB000
	0x034434D4 LDR X0, [X0 + 0x798]
	0x034434D8 BL 0x1C16CF4
	0x034434DC ADRP X0, 0xCEC000
	0x034434E0 LDR X0, [X0 + 0x810]
	0x034434E4 BL 0x1C16CF4
	0x034434E8 ADRP X0, 0xCEB000
	0x034434EC LDR X0, [X0 + 0x7A8]
	0x034434F0 BL 0x1C16CF4
	0x034434F4 ADRP X0, 0xCEB000
	0x034434F8 LDR X0, [X0 + 0x790]
	0x034434FC BL 0x1C16CF4
	0x03443500 MOVZ W8, 0x1
	0x03443504 STRB W8, [X28 + 0x6E1]
	0x03443508 LDR X0, [X27]
	0x0344350C MOVI V0.2D, 0x0
	0x03443510 STR X31, [X31 + 0x70]
	0x03443514 STP V0, V0, [X31 + 0x50]
	0x03443518 STP V0, V0, [X31 + 0x30]
	0x0344351C STP V0, V0, [X31 + 0x10]
	0x03443520 STR V0, [X31]
	0x03443524 ADRP X27, 0xCEB000
	0x03443528 ADRP X29, 0xCEC000
	0x0344352C ADRP X28, 0xCEB000
	0x03443530 LDR W8, [X0 + 0xE0]
	0x03443534 LDR X27, [X27 + 0x798]
	0x03443538 LDR X29, [X29 + 0x810]
	0x0344353C LDR X28, [X28 + 0x7A8]
	0x03443540 CBNZ W8, 0x3443548
	0x03443544 BL 0x1C16DFC
	0x03443548 LDR X0, [X27]
	0x0344354C ADD X8, X31, 0x0
	0x03443550 ORR X27, X8, 0xF
	0x03443554 MOV X8, X27
	0x03443558 BL 0x263221C
	0x0344355C LDR X2, [X29]
	0x03443560 MOVN W8, 0x0
	0x03443564 ADD X1, X31, 0x0
	0x03443568 MOV X0, X27
	0x0344356C STP X26, X25, [X31 + 0x20]
	0x03443570 STR X24, [X31 + 0x30]
	0x03443574 STUR X23, [X31 + 0x3C]
	0x03443578 STR W22, [X31 + 0x38]
	0x0344357C STP X19, X21, [X31 + 0x50]
	0x03443580 STR X20, [X31 + 0x48]
	0x03443584 STR W8, [X31]
	0x03443588 BL 0x1FCDD14
	0x0344358C LDR X1, [X28]
	0x03443590 MOV X0, X27
	0x03443594 BL 0x2632230
	0x03443598 LDP X20, X19, [X31 + 0xD0]
	0x0344359C LDP X22, X21, [X31 + 0xC0]
	0x034435A0 LDP X24, X23, [X31 + 0xB0]
	0x034435A4 LDP X26, X25, [X31 + 0xA0]
	0x034435A8 LDP X28, X27, [X31 + 0x90]
	0x034435AC LDP X29, X30, [X31 + 0x80]
	0x034435B0 ADD X31, X31, 0xE0
	0x034435B4 RET
	0x034435B8 SUB X31, X31, 0xE0
	0x034435BC STP X29, X30, [X31 + 0x80]
	0x034435C0 STP X28, X27, [X31 + 0x90]
	0x034435C4 STP X26, X25, [X31 + 0xA0]
	0x034435C8 STP X24, X23, [X31 + 0xB0]
	0x034435CC STP X22, X21, [X31 + 0xC0]
	0x034435D0 STP X20, X19, [X31 + 0xD0]
	0x034435D4 ADRP X28, 0xF9A000
	0x034435D8 ADRP X27, 0xCEB000
	0x034435DC LDRB W8, [X28 + 0x6E2]
	0x034435E0 LDR X27, [X27 + 0x6E0]
	0x034435E4 MOV X19, X7
	0x034435E8 MOV X21, X6
	0x034435EC MOV X20, X5
	0x034435F0 MOV W22, W4
	0x034435F4 MOV X23, X3
	0x034435F8 MOV X24, X2
	0x034435FC MOV X25, X1
	0x03443600 MOV X26, X0
	0x03443604 TBNZ X8, 0x0, 0x3443640

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X28, 0xF9B000
	015 Move X27, 0xCEC000
	016 Move W8, [X28+1748]
	017 Move X27, [X27+1296]
	018 Move X19, X7
	019 Move X21, X6
	020 Move X20, X5
	021 Move W22, W4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCEC000
	031 Move X0, [X0+1304]
	032 Call 0x1C17CF4
	033 Move X0, 0xCED000
	034 Move X0, [X0+1928]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEC000
	037 Move X0, [X0+1320]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEC000
	040 Move X0, [X0+1296]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1748], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+112], X31
	047 Move [X31+80], V0
	048 Move [X31+88], V0
	049 Move [X31+48], V0
	050 Move [X31+56], V0
	051 Move [X31+16], V0
	052 Move [X31+24], V0
	053 Move [X31], V0
	054 Move X27, 0xCEC000
	055 Move X29, 0xCED000
	056 Move X28, 0xCEC000
	057 Move W8, [X0+224]
	058 Move X27, [X27+1304]
	059 Move X29, [X29+1928]
	060 Move X28, [X28+1320]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X27]
	065 Add X8, X31, 0
	066 Or X27, X8, 15
	067 Move X8, X27
	068 Call AsyncTaskMethodBuilder`1<Object>.Create
	069 Move X2, [X29]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W8, TEMP
	073 Add X1, X31, 0
	074 Move X0, X27
	075 Move [X31+32], X26
	076 Move [X31+40], X25
	077 Move [X31+48], X24
	078 Move [X31+60], X23
	079 Move [X31+56], W22
	080 Move [X31+80], X19
	081 Move [X31+88], X21
	082 Move [X31+72], X20
	083 Move [X31], W8
	084 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	085 Move X1, [X28]
	086 Move X0, X27
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+208]
	089 Move X19, [X31+216]
	090 Move X22, [X31+192]
	091 Move X21, [X31+200]
	092 Move X24, [X31+176]
	093 Move X23, [X31+184]
	094 Move X26, [X31+160]
	095 Move X25, [X31+168]
	096 Move X28, [X31+144]
	097 Move X27, [X31+152]
	098 Move X29, [X31+128]
	099 Move X30, [X31+136]
	100 Add X31, X31, 224
	101 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiGroupList> ListGroupsAsync(Nakama.ISession session, System.String name = null, System.Int32 limit = 1, System.String cursor = null, System.String langTag = null, System.Nullable`1<System.Int32> members = null, System.Nullable`1<System.Boolean> open = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03443608 ADRP X0, 0xCEB000
	0x0344360C LDR X0, [X0 + 0x6E8]
	0x03443610 BL 0x1C16CF4
	0x03443614 ADRP X0, 0xCEC000
	0x03443618 LDR X0, [X0 + 0x818]
	0x0344361C BL 0x1C16CF4
	0x03443620 ADRP X0, 0xCEB000
	0x03443624 LDR X0, [X0 + 0x6F8]
	0x03443628 BL 0x1C16CF4
	0x0344362C ADRP X0, 0xCEB000
	0x03443630 LDR X0, [X0 + 0x6E0]
	0x03443634 BL 0x1C16CF4
	0x03443638 MOVZ W8, 0x1
	0x0344363C STRB W8, [X28 + 0x6E2]
	0x03443640 LDR X0, [X27]
	0x03443644 MOVI V0.2D, 0x0
	0x03443648 STR X31, [X31 + 0x70]
	0x0344364C STP V0, V0, [X31 + 0x50]
	0x03443650 STP V0, V0, [X31 + 0x30]
	0x03443654 STP V0, V0, [X31 + 0x10]
	0x03443658 STR V0, [X31]
	0x0344365C ADRP X27, 0xCEB000
	0x03443660 ADRP X29, 0xCEC000
	0x03443664 ADRP X28, 0xCEB000
	0x03443668 LDR W8, [X0 + 0xE0]
	0x0344366C LDR X27, [X27 + 0x6E8]
	0x03443670 LDR X29, [X29 + 0x818]
	0x03443674 LDR X28, [X28 + 0x6F8]
	0x03443678 CBNZ W8, 0x3443680
	0x0344367C BL 0x1C16DFC
	0x03443680 LDR X0, [X27]
	0x03443684 ADD X8, X31, 0x0
	0x03443688 ORR X27, X8, 0xF
	0x0344368C MOV X8, X27
	0x03443690 BL 0x263221C
	0x03443694 LDR X2, [X29]
	0x03443698 MOVN W8, 0x0
	0x0344369C ADD X1, X31, 0x0
	0x034436A0 MOV X0, X27
	0x034436A4 STP X26, X25, [X31 + 0x20]
	0x034436A8 STP X24, X23, [X31 + 0x30]
	0x034436AC STR W22, [X31 + 0x40]
	0x034436B0 STP X19, X21, [X31 + 0x50]
	0x034436B4 STR X20, [X31 + 0x48]
	0x034436B8 STR W8, [X31]
	0x034436BC BL 0x1FCDE14
	0x034436C0 LDR X1, [X28]
	0x034436C4 MOV X0, X27
	0x034436C8 BL 0x2632230
	0x034436CC LDP X20, X19, [X31 + 0xD0]
	0x034436D0 LDP X22, X21, [X31 + 0xC0]
	0x034436D4 LDP X24, X23, [X31 + 0xB0]
	0x034436D8 LDP X26, X25, [X31 + 0xA0]
	0x034436DC LDP X28, X27, [X31 + 0x90]
	0x034436E0 LDP X29, X30, [X31 + 0x80]
	0x034436E4 ADD X31, X31, 0xE0
	0x034436E8 RET
	0x034436EC SUB X31, X31, 0xE0
	0x034436F0 STR X30, [X31 + 0x90]
	0x034436F4 STP X26, X25, [X31 + 0xA0]
	0x034436F8 STP X24, X23, [X31 + 0xB0]
	0x034436FC STP X22, X21, [X31 + 0xC0]
	0x03443700 STP X20, X19, [X31 + 0xD0]
	0x03443704 ADRP X26, 0xF9A000
	0x03443708 ADRP X25, 0xCB3000
	0x0344370C LDRB W8, [X26 + 0x6E3]
	0x03443710 LDR X25, [X25 + 0x280]
	0x03443714 MOV X20, X5
	0x03443718 MOV X21, X4
	0x0344371C MOV X22, X3
	0x03443720 MOV X23, X2
	0x03443724 MOV X24, X1
	0x03443728 MOV X19, X0
	0x0344372C TBNZ X8, 0x0, 0x3443750
	0x03443730 ADRP X0, 0xCEC000
	0x03443734 LDR X0, [X0 + 0x820]
	0x03443738 BL 0x1C16CF4
	0x0344373C ADRP X0, 0xCB3000

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X28, 0xF9B000
	015 Move W8, [X28+1749]
	016 Move X20, X6
	017 Move X21, X5
	018 Move X22, X4
	019 Move W23, W3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X26, X0
	023 Move [X31], X7
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCEC000
	029 Move X0, [X0+1168]
	030 Call 0x1C17CF4
	031 Move X0, 0xCED000
	032 Move X0, [X0+1936]
	033 Call 0x1C17CF4
	034 Move X0, 0xCEC000
	035 Move X0, [X0+1184]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEC000
	038 Move X0, [X0+1160]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X28+1749], W8
	042 Move X27, 0xCEC000
	043 Move X28, [X31+240]
	044 Move X29, [X31+248]
	045 Move X27, [X27+1168]
	046 Add X0, X31, 8
	047 Move W2, 136
	048 Move W1, W31
	049 Add X19, X31, 8
	050 Call 0x3EB2B10
	051 Move X8, 0xCEC000
	052 Move X8, [X8+1160]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X27]
	059 Add X27, X19, 8
	060 Move X8, X27
	061 Call AsyncTaskMethodBuilder`1<Object>.Create
	062 Move X8, [X31]
	063 Move [X31+40], X26
	064 Move [X31+48], X25
	065 Move [X31+72], W23
	066 Move [X31+56], X24
	067 Move [X31+64], X22
	068 Move [X31+80], X21
	069 Move [X31+88], X20
	070 NotImplemented "Instruction STRH not yet implemented."
	071 Move X8, 0xCED000
	072 Move X8, [X8+1936]
	073 Add X1, X31, 8
	074 Move X0, X27
	075 Move [X31+104], X29
	076 Move [X31+112], X28
	077 Move X2, [X8]
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W8, TEMP
	081 Move [X31+8], W8
	082 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	083 Move X8, 0xCEC000
	084 Move X8, [X8+1184]
	085 Move X0, X27
	086 Move X1, [X8]
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+224]
	089 Move X19, [X31+232]
	090 Move X22, [X31+208]
	091 Move X21, [X31+216]
	092 Move X24, [X31+192]
	093 Move X23, [X31+200]
	094 Move X26, [X31+176]
	095 Move X25, [X31+184]
	096 Move X28, [X31+160]
	097 Move X27, [X31+168]
	098 Move X29, [X31+144]
	099 Move X30, [X31+152]
	100 Add X31, X31, 240
	101 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecordList> ListLeaderboardRecordsAsync(Nakama.ISession session, System.String leaderboardId, System.Collections.Generic.IEnumerable`1<System.String> ownerIds = null, System.Nullable`1<System.Int64> expiry = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03443740 LDR X0, [X0 + 0x280]
	0x03443744 BL 0x1C16CF4
	0x03443748 MOVZ W8, 0x1
	0x0344374C STRB W8, [X26 + 0x6E3]
	0x03443750 LDR X0, [X25]
	0x03443754 MOVI V0.2D, 0x0
	0x03443758 STR X31, [X31 + 0x80]
	0x0344375C STP V0, V0, [X31 + 0x60]
	0x03443760 STP V0, V0, [X31 + 0x40]
	0x03443764 STP V0, V0, [X31 + 0x20]
	0x03443768 ADRP X25, 0xCEC000
	0x0344376C LDR W8, [X0 + 0xE0]
	0x03443770 LDR X25, [X25 + 0x820]
	0x03443774 CBNZ W8, 0x344377C
	0x03443778 BL 0x1C16DFC
	0x0344377C ADD X8, X31, 0x8
	0x03443780 MOV X0, X31
	0x03443784 BL 0x32C4770
	0x03443788 LDUR V0, [X31 + 0x8]
	0x0344378C LDR X9, [X31 + 0x18]
	0x03443790 LDR X2, [X25]
	0x03443794 ADD X8, X31, 0x20
	0x03443798 STP X20, X21, [X31 + 0x60]
	0x0344379C ORR X20, X8, 0xF
	0x034437A0 MOVN W10, 0x0
	0x034437A4 ADD X1, X31, 0x20
	0x034437A8 MOV X0, X20
	0x034437AC STP X24, X23, [X31 + 0x48]
	0x034437B0 STR X22, [X31 + 0x58]
	0x034437B4 STUR V0, [X31 + 0x28]
	0x034437B8 STP X9, X19, [X31 + 0x38]
	0x034437BC STR W10, [X31 + 0x20]
	0x034437C0 BL 0x2192DB8
	0x034437C4 MOV X0, X20
	0x034437C8 MOV X1, X31
	0x034437CC BL 0x32C47F8
	0x034437D0 LDP X20, X19, [X31 + 0xD0]
	0x034437D4 LDP X22, X21, [X31 + 0xC0]
	0x034437D8 LDP X24, X23, [X31 + 0xB0]
	0x034437DC LDP X26, X25, [X31 + 0xA0]
	0x034437E0 LDR X30, [X31 + 0x90]
	0x034437E4 ADD X31, X31, 0xE0
	0x034437E8 RET
	0x034437EC SUB X31, X31, 0xB0
	0x034437F0 STR X30, [X31 + 0x60]
	0x034437F4 STP X26, X25, [X31 + 0x70]
	0x034437F8 STP X24, X23, [X31 + 0x80]
	0x034437FC STP X22, X21, [X31 + 0x90]
	0x03443800 STP X20, X19, [X31 + 0xA0]
	0x03443804 ADRP X25, 0xF9A000
	0x03443808 ADRP X24, 0xCEB000
	0x0344380C LDRB W8, [X25 + 0x6E4]
	0x03443810 LDR X24, [X24 + 0x698]
	0x03443814 MOV X19, X4
	0x03443818 MOV X20, X3
	0x0344381C MOV X21, X2
	0x03443820 MOV X22, X1
	0x03443824 MOV X23, X0
	0x03443828 TBNZ X8, 0x0, 0x3443864
	0x0344382C ADRP X0, 0xCEB000
	0x03443830 LDR X0, [X0 + 0x6A0]
	0x03443834 BL 0x1C16CF4
	0x03443838 ADRP X0, 0xCEC000
	0x0344383C LDR X0, [X0 + 0x828]
	0x03443840 BL 0x1C16CF4
	0x03443844 ADRP X0, 0xCEB000
	0x03443848 LDR X0, [X0 + 0x6B0]
	0x0344384C BL 0x1C16CF4
	0x03443850 ADRP X0, 0xCEB000
	0x03443854 LDR X0, [X0 + 0x698]
	0x03443858 BL 0x1C16CF4
	0x0344385C MOVZ W8, 0x1
	0x03443860 STRB W8, [X25 + 0x6E4]
	0x03443864 LDR X0, [X24]
	0x03443868 MOVI V0.2D, 0x0
	0x0344386C STP V0, V0, [X31 + 0x40]
	0x03443870 STP V0, V0, [X31 + 0x20]
	0x03443874 STP V0, V0, [X31]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X28, 0xF9B000
	015 Move W8, [X28+1750]
	016 Move X20, X7
	017 Move W21, W6
	018 Move X22, X4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X26, X0
	023 Move [X31], X5
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCEC000
	029 Move X0, [X0+1504]
	030 Call 0x1C17CF4
	031 Move X0, 0xCED000
	032 Move X0, [X0+1944]
	033 Call 0x1C17CF4
	034 Move X0, 0xCEC000
	035 Move X0, [X0+1520]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEC000
	038 Move X0, [X0+1496]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X28+1750], W8
	042 Move X27, 0xCEC000
	043 Move X28, [X31+240]
	044 Move X29, [X31+248]
	045 Move X27, [X27+1504]
	046 Add X0, X31, 8
	047 Move W2, 136
	048 Move W1, W31
	049 Add X19, X31, 8
	050 Call 0x3EB2B10
	051 Move X8, 0xCEC000
	052 Move X8, [X8+1496]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X27]
	059 Add X27, X19, 8
	060 Move X8, X27
	061 Call AsyncTaskMethodBuilder`1<Object>.Create
	062 Move [X31+40], X26
	063 Move [X31+48], X25
	064 Move [X31+56], X24
	065 Move [X31+64], X23
	066 Move [X31+72], W21
	067 Move [X31+80], X20
	068 Move [X31+88], X22
	069 Move [X31+112], X28
	070 Move X8, 0xCED000
	071 Move X8, [X8+1944]
	072 Add X1, X31, 8
	073 Move X0, X27
	074 Move X2, [X8]
	075 Move X8, [X31]
	076 Move [X31+96], X8
	077 Move [X31+104], X29
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W8, TEMP
	081 Move [X31+8], W8
	082 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	083 Move X8, 0xCEC000
	084 Move X8, [X8+1520]
	085 Move X0, X27
	086 Move X1, [X8]
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+224]
	089 Move X19, [X31+232]
	090 Move X22, [X31+208]
	091 Move X21, [X31+216]
	092 Move X24, [X31+192]
	093 Move X23, [X31+200]
	094 Move X26, [X31+176]
	095 Move X25, [X31+184]
	096 Move X28, [X31+160]
	097 Move X27, [X31+168]
	098 Move X29, [X31+144]
	099 Move X30, [X31+152]
	100 Add X31, X31, 240
	101 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecordList> ListLeaderboardRecordsAroundOwnerAsync(Nakama.ISession session, System.String leaderboardId, System.String ownerId, System.Nullable`1<System.Int64> expiry = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03443878 ADRP X24, 0xCEB000
	0x0344387C ADRP X26, 0xCEC000
	0x03443880 ADRP X25, 0xCEB000
	0x03443884 LDR W8, [X0 + 0xE0]
	0x03443888 LDR X24, [X24 + 0x6A0]
	0x0344388C LDR X26, [X26 + 0x828]
	0x03443890 LDR X25, [X25 + 0x6B0]
	0x03443894 CBNZ W8, 0x344389C
	0x03443898 BL 0x1C16DFC
	0x0344389C LDR X0, [X24]
	0x034438A0 ADD X8, X31, 0x0
	0x034438A4 ORR X24, X8, 0xF
	0x034438A8 MOV X8, X24
	0x034438AC BL 0x263221C
	0x034438B0 LDR X2, [X26]
	0x034438B4 MOVN W8, 0x0
	0x034438B8 ADD X1, X31, 0x0
	0x034438BC MOV X0, X24
	0x034438C0 STP X23, X22, [X31 + 0x20]
	0x034438C4 STR X21, [X31 + 0x48]
	0x034438C8 STP X19, X20, [X31 + 0x30]
	0x034438CC STR W8, [X31]
	0x034438D0 BL 0x1FCDF14
	0x034438D4 LDR X1, [X25]
	0x034438D8 MOV X0, X24
	0x034438DC BL 0x2632230
	0x034438E0 LDP X20, X19, [X31 + 0xA0]
	0x034438E4 LDP X22, X21, [X31 + 0x90]
	0x034438E8 LDP X24, X23, [X31 + 0x80]
	0x034438EC LDP X26, X25, [X31 + 0x70]
	0x034438F0 LDR X30, [X31 + 0x60]
	0x034438F4 ADD X31, X31, 0xB0
	0x034438F8 RET
	0x034438FC SUB X31, X31, 0xC0
	0x03443900 STP X30, X27, [X31 + 0x70]
	0x03443904 STP X26, X25, [X31 + 0x80]
	0x03443908 STP X24, X23, [X31 + 0x90]
	0x0344390C STP X22, X21, [X31 + 0xA0]
	0x03443910 STP X20, X19, [X31 + 0xB0]
	0x03443914 ADRP X26, 0xF9A000
	0x03443918 ADRP X25, 0xCEB000
	0x0344391C LDRB W8, [X26 + 0x6E5]
	0x03443920 LDR X25, [X25 + 0x668]
	0x03443924 MOV X19, X5
	0x03443928 MOV X20, X4
	0x0344392C MOV X21, X3
	0x03443930 MOV X22, X2
	0x03443934 MOV X23, X1
	0x03443938 MOV X24, X0
	0x0344393C TBNZ X8, 0x0, 0x3443978
	0x03443940 ADRP X0, 0xCEB000
	0x03443944 LDR X0, [X0 + 0x670]
	0x03443948 BL 0x1C16CF4
	0x0344394C ADRP X0, 0xCEC000
	0x03443950 LDR X0, [X0 + 0x830]
	0x03443954 BL 0x1C16CF4
	0x03443958 ADRP X0, 0xCEB000
	0x0344395C LDR X0, [X0 + 0x680]
	0x03443960 BL 0x1C16CF4
	0x03443964 ADRP X0, 0xCEB000
	0x03443968 LDR X0, [X0 + 0x668]
	0x0344396C BL 0x1C16CF4
	0x03443970 MOVZ W8, 0x1
	0x03443974 STRB W8, [X26 + 0x6E5]
	0x03443978 LDR X0, [X25]
	0x0344397C MOVI V0.2D, 0x0
	0x03443980 STR X31, [X31 + 0x60]
	0x03443984 STP V0, V0, [X31 + 0x40]
	0x03443988 STP V0, V0, [X31 + 0x20]
	0x0344398C STP V0, V0, [X31]
	0x03443990 ADRP X25, 0xCEB000
	0x03443994 ADRP X27, 0xCEC000
	0x03443998 ADRP X26, 0xCEB000
	0x0344399C LDR W8, [X0 + 0xE0]
	0x034439A0 LDR X25, [X25 + 0x670]
	0x034439A4 LDR X27, [X27 + 0x830]
	0x034439A8 LDR X26, [X26 + 0x680]
	0x034439AC CBNZ W8, 0x34439B4

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X28, 0xF9B000
	015 Move W8, [X28+1751]
	016 Move W20, W6
	017 Move X21, X5
	018 Move X22, X4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X26, X0
	023 Move [X31], X7
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCEC000
	029 Move X0, [X0+1504]
	030 Call 0x1C17CF4
	031 Move X0, 0xCED000
	032 Move X0, [X0+1952]
	033 Call 0x1C17CF4
	034 Move X0, 0xCEC000
	035 Move X0, [X0+1520]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEC000
	038 Move X0, [X0+1496]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X28+1751], W8
	042 Move X27, 0xCEC000
	043 Move X28, [X31+240]
	044 Move X29, [X31+248]
	045 Move X27, [X27+1504]
	046 Add X0, X31, 8
	047 Move W2, 136
	048 Move W1, W31
	049 Add X19, X31, 8
	050 Call 0x3EB2B10
	051 Move X8, 0xCEC000
	052 Move X8, [X8+1496]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X27]
	059 Add X27, X19, 8
	060 Move X8, X27
	061 Call AsyncTaskMethodBuilder`1<Object>.Create
	062 Move [X31+40], X26
	063 Move [X31+48], X25
	064 Move [X31+56], X24
	065 Move [X31+64], X23
	066 Move [X31+80], X22
	067 Move [X31+88], X21
	068 Move [X31+72], W20
	069 Move [X31+112], X28
	070 Move X8, 0xCED000
	071 Move X8, [X8+1952]
	072 Add X1, X31, 8
	073 Move X0, X27
	074 Move X2, [X8]
	075 Move X8, [X31]
	076 Move [X31+96], X8
	077 Move [X31+104], X29
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W8, TEMP
	081 Move [X31+8], W8
	082 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	083 Move X8, 0xCEC000
	084 Move X8, [X8+1520]
	085 Move X0, X27
	086 Move X1, [X8]
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+224]
	089 Move X19, [X31+232]
	090 Move X22, [X31+208]
	091 Move X21, [X31+216]
	092 Move X24, [X31+192]
	093 Move X23, [X31+200]
	094 Move X26, [X31+176]
	095 Move X25, [X31+184]
	096 Move X28, [X31+160]
	097 Move X27, [X31+168]
	098 Move X29, [X31+144]
	099 Move X30, [X31+152]
	100 Add X31, X31, 240
	101 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiMatchList> ListMatchesAsync(Nakama.ISession session, System.Int32 min, System.Int32 max, System.Int32 limit, System.Boolean authoritative, System.String label, System.String query, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034439B0 BL 0x1C16DFC
	0x034439B4 LDR X0, [X25]
	0x034439B8 ADD X8, X31, 0x0
	0x034439BC ORR X25, X8, 0xF
	0x034439C0 MOV X8, X25
	0x034439C4 BL 0x263221C
	0x034439C8 LDR X2, [X27]
	0x034439CC MOVN W8, 0x0
	0x034439D0 ADD X1, X31, 0x0
	0x034439D4 MOV X0, X25
	0x034439D8 STP X24, X23, [X31 + 0x20]
	0x034439DC STP X22, X21, [X31 + 0x30]
	0x034439E0 STP X19, X20, [X31 + 0x40]
	0x034439E4 STR W8, [X31]
	0x034439E8 BL 0x1FCE014
	0x034439EC LDR X1, [X26]
	0x034439F0 MOV X0, X25
	0x034439F4 BL 0x2632230
	0x034439F8 LDP X20, X19, [X31 + 0xB0]
	0x034439FC LDP X22, X21, [X31 + 0xA0]
	0x03443A00 LDP X24, X23, [X31 + 0x90]
	0x03443A04 LDP X26, X25, [X31 + 0x80]
	0x03443A08 LDP X30, X27, [X31 + 0x70]
	0x03443A0C ADD X31, X31, 0xC0
	0x03443A10 RET
	0x03443A14 SUB X31, X31, 0xB0
	0x03443A18 STR X30, [X31 + 0x60]
	0x03443A1C STP X26, X25, [X31 + 0x70]
	0x03443A20 STP X24, X23, [X31 + 0x80]
	0x03443A24 STP X22, X21, [X31 + 0x90]
	0x03443A28 STP X20, X19, [X31 + 0xA0]
	0x03443A2C ADRP X25, 0xF9A000
	0x03443A30 ADRP X24, 0xCEB000
	0x03443A34 LDRB W8, [X25 + 0x6E6]
	0x03443A38 LDR X24, [X24 + 0x668]
	0x03443A3C MOV X19, X4
	0x03443A40 MOV X21, X3
	0x03443A44 MOV X20, X2
	0x03443A48 MOV X22, X1
	0x03443A4C MOV X23, X0
	0x03443A50 TBNZ X8, 0x0, 0x3443A8C
	0x03443A54 ADRP X0, 0xCEB000
	0x03443A58 LDR X0, [X0 + 0x670]
	0x03443A5C BL 0x1C16CF4
	0x03443A60 ADRP X0, 0xCEC000
	0x03443A64 LDR X0, [X0 + 0x838]
	0x03443A68 BL 0x1C16CF4
	0x03443A6C ADRP X0, 0xCEB000
	0x03443A70 LDR X0, [X0 + 0x680]
	0x03443A74 BL 0x1C16CF4
	0x03443A78 ADRP X0, 0xCEB000
	0x03443A7C LDR X0, [X0 + 0x668]
	0x03443A80 BL 0x1C16CF4
	0x03443A84 MOVZ W8, 0x1
	0x03443A88 STRB W8, [X25 + 0x6E6]
	0x03443A8C LDR X0, [X24]
	0x03443A90 MOVI V0.2D, 0x0
	0x03443A94 STP V0, V0, [X31 + 0x40]
	0x03443A98 STP V0, V0, [X31 + 0x20]
	0x03443A9C STP V0, V0, [X31]
	0x03443AA0 ADRP X24, 0xCEB000
	0x03443AA4 ADRP X26, 0xCEC000
	0x03443AA8 ADRP X25, 0xCEB000
	0x03443AAC LDR W8, [X0 + 0xE0]
	0x03443AB0 LDR X24, [X24 + 0x670]
	0x03443AB4 LDR X26, [X26 + 0x838]
	0x03443AB8 LDR X25, [X25 + 0x680]
	0x03443ABC CBNZ W8, 0x3443AC4
	0x03443AC0 BL 0x1C16DFC
	0x03443AC4 LDR X0, [X24]
	0x03443AC8 ADD X8, X31, 0x0
	0x03443ACC ORR X24, X8, 0xF
	0x03443AD0 MOV X8, X24
	0x03443AD4 BL 0x263221C
	0x03443AD8 LDR X2, [X26]
	0x03443ADC MOVN W8, 0x0
	0x03443AE0 ADD X1, X31, 0x0
	0x03443AE4 MOV X0, X24
	0x03443AE8 STP X23, X22, [X31 + 0x20]
	0x03443AEC STP X19, X21, [X31 + 0x38]
	0x03443AF0 STR X20, [X31 + 0x30]
	0x03443AF4 STR W8, [X31]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move [X31+8], X7
	015 Move X28, 0xF9B000
	016 Move X27, 0xCEC000
	017 Move W8, [X28+1752]
	018 Move X27, [X27+1568]
	019 Move X20, X6
	020 Move W26, W5
	021 Move W21, W4
	022 Move W22, W3
	023 Move W23, W2
	024 Move X24, X1
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCEC000
	031 Move X0, [X0+1576]
	032 Call 0x1C17CF4
	033 Move X0, 0xCED000
	034 Move X0, [X0+1960]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEC000
	037 Move X0, [X0+1592]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEC000
	040 Move X0, [X0+1568]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1752], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+128], X31
	047 Move [X31+96], V0
	048 Move [X31+104], V0
	049 Move [X31+64], V0
	050 Move [X31+72], V0
	051 Move [X31+32], V0
	052 Move [X31+40], V0
	053 Move [X31+1], V0
	054 Move X19, 0xCEC000
	055 Move X29, 0xCED000
	056 Move W8, [X0+224]
	057 Move X27, [X31+240]
	058 Move X28, [X31+248]
	059 Move X19, [X19+1576]
	060 Move X29, [X29+1960]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X19]
	065 Add X8, X31, 16
	066 And W19, W26, 1
	067 Or X26, X8, 15
	068 Move X8, X26
	069 Call AsyncTaskMethodBuilder`1<Object>.Create
	070 Move X8, [X31+8]
	071 Move X2, [X29]
	072 Add X1, X31, 16
	073 Move X0, X26
	074 Move [X31+88], X8
	075 Move TEMP, 0
	076 Not TEMP
	077 Move W8, TEMP
	078 Move [X31+48], X25
	079 Move [X31+56], X24
	080 Move [X31+80], W23
	081 Move [X31+84], W22
	082 Move [X31+64], W21
	083 Move [X31+68], W19
	084 Move [X31+72], X20
	085 Move [X31+96], X28
	086 Move [X31+104], X27
	087 Move [X31+16], W8
	088 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	089 Move X8, 0xCEC000
	090 Move X8, [X8+1592]
	091 Move X0, X26
	092 Move X1, [X8]
	093 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	094 Move X20, [X31+224]
	095 Move X19, [X31+232]
	096 Move X22, [X31+208]
	097 Move X21, [X31+216]
	098 Move X24, [X31+192]
	099 Move X23, [X31+200]
	100 Move X26, [X31+176]
	101 Move X25, [X31+184]
	102 Move X28, [X31+160]
	103 Move X27, [X31+168]
	104 Move X29, [X31+144]
	105 Move X30, [X31+152]
	106 Add X31, X31, 240
	107 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiNotificationList> ListNotificationsAsync(Nakama.ISession session, System.Int32 limit = 1, System.String cacheableCursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03443AF8 BL 0x1FCE114
	0x03443AFC LDR X1, [X25]
	0x03443B00 MOV X0, X24
	0x03443B04 BL 0x2632230
	0x03443B08 LDP X20, X19, [X31 + 0xA0]
	0x03443B0C LDP X22, X21, [X31 + 0x90]
	0x03443B10 LDP X24, X23, [X31 + 0x80]
	0x03443B14 LDP X26, X25, [X31 + 0x70]
	0x03443B18 LDR X30, [X31 + 0x60]
	0x03443B1C ADD X31, X31, 0xB0
	0x03443B20 RET
	0x03443B24 SUB X31, X31, 0x60
	0x03443B28 STR X30, [X31 + 0x10]
	0x03443B2C STP X26, X25, [X31 + 0x20]
	0x03443B30 STP X24, X23, [X31 + 0x30]
	0x03443B34 STP X22, X21, [X31 + 0x40]
	0x03443B38 STP X20, X19, [X31 + 0x50]
	0x03443B3C ADRP X25, 0xF9A000
	0x03443B40 ADRP X26, 0xCEC000
	0x03443B44 LDRB W8, [X25 + 0x6E7]
	0x03443B48 LDR X26, [X26 + 0x840]
	0x03443B4C MOV X21, X5
	0x03443B50 MOV X19, X4
	0x03443B54 MOV X22, X3
	0x03443B58 MOV X24, X2
	0x03443B5C MOV X23, X1
	0x03443B60 MOV X20, X0
	0x03443B64 TBNZ X8, 0x0, 0x3443BB8
	0x03443B68 ADRP X0, 0xCEC000
	0x03443B6C LDR X0, [X0 + 0x848]
	0x03443B70 BL 0x1C16CF4
	0x03443B74 ADRP X0, 0xCEC000
	0x03443B78 LDR X0, [X0 + 0x7C8]
	0x03443B7C BL 0x1C16CF4
	0x03443B80 ADRP X0, 0xCEC000
	0x03443B84 LDR X0, [X0 + 0x7D0]
	0x03443B88 BL 0x1C16CF4
	0x03443B8C ADRP X0, 0xCEC000
	0x03443B90 LDR X0, [X0 + 0x850]
	0x03443B94 BL 0x1C16CF4
	0x03443B98 ADRP X0, 0xCEC000
	0x03443B9C LDR X0, [X0 + 0x858]
	0x03443BA0 BL 0x1C16CF4
	0x03443BA4 ADRP X0, 0xCEC000
	0x03443BA8 LDR X0, [X0 + 0x840]
	0x03443BAC BL 0x1C16CF4
	0x03443BB0 MOVZ W8, 0x1
	0x03443BB4 STRB W8, [X25 + 0x6E7]
	0x03443BB8 LDR X0, [X26]
	0x03443BBC BL 0x1C16F10
	0x03443BC0 MOV X1, X31
	0x03443BC4 MOV X25, X0
	0x03443BC8 BL 0x33BDD8C
	0x03443BCC CBZ X25, 0x3443C98
	0x03443BD0 ADRP X8, 0xCEC000
	0x03443BD4 LDR X8, [X8 + 0x848]
	0x03443BD8 STP X20, X24, [X25 + 0x10]
	0x03443BDC STP X22, X23, [X25 + 0x20]
	0x03443BE0 STR X21, [X25 + 0x30]
	0x03443BE4 LDR X0, [X8]
	0x03443BE8 ADRP X22, 0xCEC000
	0x03443BEC ADRP X26, 0xCEC000
	0x03443BF0 ADRP X24, 0xCEC000
	0x03443BF4 LDR X21, [X20 + 0x58]
	0x03443BF8 LDR X22, [X22 + 0x858]
	0x03443BFC LDR X26, [X26 + 0x7C8]
	0x03443C00 LDR X24, [X24 + 0x7D0]
	0x03443C04 BL 0x1C16F10
	0x03443C08 LDR X2, [X22]
	0x03443C0C MOV X1, X25
	0x03443C10 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+120], X27
	004 Move [X31+128], X26
	005 Move [X31+136], X25
	006 Move [X31+144], X24
	007 Move [X31+152], X23
	008 Move [X31+160], X22
	009 Move [X31+168], X21
	010 Move [X31+176], X20
	011 Move [X31+184], X19
	012 Move X26, 0xF9B000
	013 Move X25, 0xCEC000
	014 Move W8, [X26+1753]
	015 Move X25, [X25+1608]
	016 Move X19, X5
	017 Move X21, X4
	018 Move X20, X3
	019 Move W22, W2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xCEC000
	027 Move X0, [X0+1616]
	028 Call 0x1C17CF4
	029 Move X0, 0xCED000
	030 Move X0, [X0+1968]
	031 Call 0x1C17CF4
	032 Move X0, 0xCEC000
	033 Move X0, [X0+1632]
	034 Call 0x1C17CF4
	035 Move X0, 0xCEC000
	036 Move X0, [X0+1608]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1753], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+96], X31
	043 Move [X31+64], V0
	044 Move [X31+72], V0
	045 Move [X31+32], V0
	046 Move [X31+40], V0
	047 Move [X31], V0
	048 Move [X31+8], V0
	049 Move X25, 0xCEC000
	050 Move X27, 0xCED000
	051 Move X26, 0xCEC000
	052 Move W8, [X0+224]
	053 Move X25, [X25+1616]
	054 Move X27, [X27+1968]
	055 Move X26, [X26+1632]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, [X25]
	060 Add X8, X31, 0
	061 Or X25, X8, 15
	062 Move X8, X25
	063 Call AsyncTaskMethodBuilder`1<Object>.Create
	064 Move X2, [X27]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W8, TEMP
	068 Add X1, X31, 0
	069 Move X0, X25
	070 Move [X31+32], X24
	071 Move [X31+40], X23
	072 Move [X31+48], W22
	073 Move [X31+64], X19
	074 Move [X31+72], X21
	075 Move [X31+56], X20
	076 Move [X31], W8
	077 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	078 Move X1, [X26]
	079 Move X0, X25
	080 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	081 Move X20, [X31+176]
	082 Move X19, [X31+184]
	083 Move X22, [X31+160]
	084 Move X21, [X31+168]
	085 Move X24, [X31+144]
	086 Move X23, [X31+152]
	087 Move X26, [X31+128]
	088 Move X25, [X31+136]
	089 Move X30, [X31+112]
	090 Move X27, [X31+120]
	091 Add X31, X31, 192
	092 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectList> ListStorageObjects(Nakama.ISession session, System.String collection, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03443C14 MOV X22, X0
	0x03443C18 BL 0x2D27AA8
	0x03443C1C LDR X23, [X25 + 0x18]
	0x03443C20 CBNZ X19, 0x3443C28
	0x03443C24 LDR X19, [X20 + 0x18]
	0x03443C28 LDR X1, [X25 + 0x30]
	0x03443C2C LDR X2, [X26]
	0x03443C30 ADD X0, X31, 0x0
	0x03443C34 STP X31, X31, [X31]
	0x03443C38 BL 0x242E368
	0x03443C3C LDR X0, [X24]
	0x03443C40 BL 0x1C16F10
	0x03443C44 LDP X3, X4, [X31]
	0x03443C48 MOV X1, X23
	0x03443C4C MOV X2, X19
	0x03443C50 MOV X5, X31
	0x03443C54 MOV X20, X0
	0x03443C58 BL 0x3478040
	0x03443C5C CBZ X21, 0x3443C98
	0x03443C60 ADRP X8, 0xCEC000
	0x03443C64 LDR X8, [X8 + 0x850]
	0x03443C68 MOV X0, X21
	0x03443C6C MOV X1, X22
	0x03443C70 MOV X2, X20
	0x03443C74 LDR X3, [X8]
	0x03443C78 BL 0x2243230
	0x03443C7C LDP X20, X19, [X31 + 0x50]
	0x03443C80 LDP X22, X21, [X31 + 0x40]
	0x03443C84 LDP X24, X23, [X31 + 0x30]
	0x03443C88 LDP X26, X25, [X31 + 0x20]
	0x03443C8C LDR X30, [X31 + 0x10]
	0x03443C90 ADD X31, X31, 0x60
	0x03443C94 RET
	0x03443C98 BL 0x1C16F20
	0x03443C9C MOV X1, X31
	0x03443CA0 B 0x33BDD8C
	0x03443CA4 SUB X31, X31, 0x60
	0x03443CA8 STR X30, [X31 + 0x10]
	0x03443CAC STP X26, X25, [X31 + 0x20]
	0x03443CB0 STP X24, X23, [X31 + 0x30]
	0x03443CB4 STP X22, X21, [X31 + 0x40]
	0x03443CB8 STP X20, X19, [X31 + 0x50]
	0x03443CBC ADRP X24, 0xF9A000
	0x03443CC0 ADRP X25, 0xCEC000
	0x03443CC4 LDRB W8, [X24 + 0x6E8]
	0x03443CC8 LDR X25, [X25 + 0x860]
	0x03443CCC MOV X21, X4
	0x03443CD0 MOV X19, X3
	0x03443CD4 MOV X23, X2
	0x03443CD8 MOV X22, X1
	0x03443CDC MOV X20, X0
	0x03443CE0 TBNZ X8, 0x0, 0x3443D34
	0x03443CE4 ADRP X0, 0xCEC000
	0x03443CE8 LDR X0, [X0 + 0x848]
	0x03443CEC BL 0x1C16CF4
	0x03443CF0 ADRP X0, 0xCEC000
	0x03443CF4 LDR X0, [X0 + 0x7C8]
	0x03443CF8 BL 0x1C16CF4
	0x03443CFC ADRP X0, 0xCEC000
	0x03443D00 LDR X0, [X0 + 0x7D0]
	0x03443D04 BL 0x1C16CF4
	0x03443D08 ADRP X0, 0xCEC000
	0x03443D0C LDR X0, [X0 + 0x850]
	0x03443D10 BL 0x1C16CF4
	0x03443D14 ADRP X0, 0xCEC000
	0x03443D18 LDR X0, [X0 + 0x868]
	0x03443D1C BL 0x1C16CF4
	0x03443D20 ADRP X0, 0xCEC000
	0x03443D24 LDR X0, [X0 + 0x860]
	0x03443D28 BL 0x1C16CF4
	0x03443D2C MOVZ W8, 0x1
	0x03443D30 STRB W8, [X24 + 0x6E8]
	0x03443D34 LDR X0, [X25]
	0x03443D38 BL 0x1C16F10
	0x03443D3C MOV X1, X31
	0x03443D40 MOV X24, X0
	0x03443D44 BL 0x33BDD8C
	0x03443D48 CBZ X24, 0x3443E10
	0x03443D4C ADRP X8, 0xCEC000
	0x03443D50 LDR X8, [X8 + 0x848]
	0x03443D54 STP X20, X23, [X24 + 0x10]
	0x03443D58 STP X22, X21, [X24 + 0x20]
	0x03443D5C ADRP X22, 0xCEC000
	0x03443D60 LDR X0, [X8]
	0x03443D64 ADRP X26, 0xCEC000
	0x03443D68 ADRP X25, 0xCEC000
	0x03443D6C LDR X21, [X20 + 0x58]
	0x03443D70 LDR X22, [X22 + 0x868]
	0x03443D74 LDR X26, [X26 + 0x7C8]
	0x03443D78 LDR X25, [X25 + 0x7D0]
	0x03443D7C BL 0x1C16F10
	0x03443D80 LDR X2, [X22]
	0x03443D84 MOV X1, X24
	0x03443D88 MOV X3, X31
	0x03443D8C MOV X22, X0
	0x03443D90 BL 0x2D27AA8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0xF9B000
	013 Move X27, 0xCED000
	014 Move W8, [X26+1754]
	015 Move X27, [X27+1976]
	016 Move X21, X6
	017 Move X19, X5
	018 Move X22, X4
	019 Move W23, W3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0xCED000
	028 Move X0, [X0+1984]
	029 Call 0x1C17CF4
	030 Move X0, 0xCED000
	031 Move X0, [X0+1992]
	032 Call 0x1C17CF4
	033 Move X0, 0xCED000
	034 Move X0, [X0+2000]
	035 Call 0x1C17CF4
	036 Move X0, 0xCED000
	037 Move X0, [X0+2008]
	038 Call 0x1C17CF4
	039 Move X0, 0xCED000
	040 Move X0, [X0+2016]
	041 Call 0x1C17CF4
	042 Move X0, 0xCED000
	043 Move X0, [X0+1976]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X26+1754], W8
	047 Move X0, [X27]
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X26, X0
	051 Call Object..ctor, X0
	052 Compare X26, 0
	053 JumpIfEqual {116}
	054 Move X8, 0xCED000
	055 Move X8, [X8+1984]
	056 Move [X26+16], X20
	057 Move [X26+24], X25
	058 Move [X26+32], X24
	059 Move [X26+40], W23
	060 Move [X26+48], X22
	061 Move [X26+56], X21
	062 Move X0, [X8]
	063 Move X22, 0xCED000
	064 Move X25, 0xCED000
	065 Move X24, 0xCED000
	066 Move X21, [X20+88]
	067 Move X22, [X22+2016]
	068 Move X25, [X25+1992]
	069 Move X24, [X24+2000]
	070 Call 0x1C17F10
	071 Move X2, [X22]
	072 Move X1, X26
	073 Move X3, X31
	074 Move X22, X0
	075 Call Func`1<Object>..ctor, X0, X1, X2
	076 Move X23, [X26+24]
	077 Compare X19, 0
	078 JumpIfNotEqual {80}
	079 Move X19, [X20+24]
	080 Move X1, [X26+56]
	081 Move X2, [X25]
	082 Add X0, X31, 0
	083 Move [X31], X31
	084 Move [X31+8], X31
	085 Call Nullable`1<CancellationToken>..ctor, X0, X1
	086 Move X0, [X24]
	087 Call 0x1C17F10
	088 Move X3, [X31]
	089 Move X4, [X31+8]
	090 Move X1, X23
	091 Move X2, X19
	092 Move X5, X31
	093 Move X20, X0
	094 Call RetryHistory..ctor, X0, X1, X2, X3
	095 Compare X21, 0
	096 JumpIfEqual {116}
	097 Move X8, 0xCED000
	098 Move X8, [X8+2008]
	099 Move X0, X21
	100 Move X1, X22
	101 Move X2, X20
	102 Move X3, [X8]
	103 Call 0x2244230, X0, X1, X2
	104 Move X20, [X31+80]
	105 Move X19, [X31+88]
	106 Move X22, [X31+64]
	107 Move X21, [X31+72]
	108 Move X24, [X31+48]
	109 Move X23, [X31+56]
	110 Move X26, [X31+32]
	111 Move X25, [X31+40]
	112 Move X30, [X31+16]
	113 Move X27, [X31+24]
	114 Add X31, X31, 96
	115 Return X0
	116 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectList> ListStorageObjectsAsync(Nakama.ISession session, System.String collection, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03443D9C LDR X19, [X20 + 0x18]
	0x03443DA0 LDR X1, [X24 + 0x28]
	0x03443DA4 LDR X2, [X26]
	0x03443DA8 ADD X0, X31, 0x0
	0x03443DAC STP X31, X31, [X31]
	0x03443DB0 BL 0x242E368
	0x03443DB4 LDR X0, [X25]
	0x03443DB8 BL 0x1C16F10
	0x03443DBC LDP X3, X4, [X31]
	0x03443DC0 MOV X1, X23
	0x03443DC4 MOV X2, X19
	0x03443DC8 MOV X5, X31
	0x03443DCC MOV X20, X0
	0x03443DD0 BL 0x3478040
	0x03443DD4 CBZ X21, 0x3443E10
	0x03443DD8 ADRP X8, 0xCEC000
	0x03443DDC LDR X8, [X8 + 0x850]
	0x03443DE0 MOV X0, X21
	0x03443DE4 MOV X1, X22
	0x03443DE8 MOV X2, X20
	0x03443DEC LDR X3, [X8]
	0x03443DF0 BL 0x2243230
	0x03443DF4 LDP X20, X19, [X31 + 0x50]
	0x03443DF8 LDP X22, X21, [X31 + 0x40]
	0x03443DFC LDP X24, X23, [X31 + 0x30]
	0x03443E00 LDP X26, X25, [X31 + 0x20]
	0x03443E04 LDR X30, [X31 + 0x10]
	0x03443E08 ADD X31, X31, 0x60
	0x03443E0C RET
	0x03443E10 BL 0x1C16F20
	0x03443E14 MOV X1, X31
	0x03443E18 B 0x33BDD8C
	0x03443E1C STP X30, X23, [X31 - 0x30]!
	0x03443E20 STP X22, X21, [X31 + 0x10]
	0x03443E24 STP X20, X19, [X31 + 0x20]
	0x03443E28 ADRP X23, 0xF9A000
	0x03443E2C LDRB W8, [X23 + 0x6E9]
	0x03443E30 MOV X19, X3
	0x03443E34 MOV X20, X2
	0x03443E38 MOV X22, X1
	0x03443E3C MOV X21, X0
	0x03443E40 TBNZ X8, 0x0, 0x3443E58
	0x03443E44 ADRP X0, 0xCB1000
	0x03443E48 LDR X0, [X0 + 0x818]
	0x03443E4C BL 0x1C16CF4
	0x03443E50 MOVZ W8, 0x1
	0x03443E54 STRB W8, [X23 + 0x6E9]
	0x03443E58 CBZ X22, 0x3443F40
	0x03443E5C ADRP X23, 0xCB1000
	0x03443E60 LDR X8, [X22]
	0x03443E64 LDR X23, [X23 + 0x818]
	0x03443E68 LDRH W9, [X8 + 0x12E]
	0x03443E6C LDR X1, [X23]
	0x03443E70 CBZ X9, 0x3443E94
	0x03443E74 LDR X10, [X8 + 0xB0]
	0x03443E78 ADD X10, X10, 0x8
	0x03443E7C LDUR X11, [X10 - 0x8]
	0x03443E80 CMP X11, X1
	0x03443E84 B.EQ 0x3443EA4
	0x03443E88 SUBS X9, X9, 0x1
	0x03443E8C ADD X10, X10, 0x10
	0x03443E90 B.NE 0x3443E7C
	0x03443E94 MOV X0, X22
	0x03443E98 MOV W2, W31
	0x03443E9C BL 0x1C5C788
	0x03443EA0 B 0x3443EB0
	0x03443EA4 LDRSW X9, [X10]
	0x03443EA8 ADD X8, X8, X9, 0x4, LSL
	0x03443EAC ADD X0, X8, 0x138
	0x03443EB0 LDP X8, X1, [X0]
	0x03443EB4 MOV X0, X22
	0x03443EB8 BLR X8
	0x03443EBC LDR X8, [X22]
	0x03443EC0 LDR X1, [X23]
	0x03443EC4 MOV X23, X0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X30
	003 Move [X31+128], X28
	004 Move [X31+136], X27
	005 Move [X31+144], X26
	006 Move [X31+152], X25
	007 Move [X31+160], X24
	008 Move [X31+168], X23
	009 Move [X31+176], X22
	010 Move [X31+184], X21
	011 Move [X31+192], X20
	012 Move [X31+200], X19
	013 Move X27, 0xF9B000
	014 Move X26, 0xCEC000
	015 Move W8, [X27+1755]
	016 Move X26, [X26+1760]
	017 Move X19, X6
	018 Move X21, X5
	019 Move X20, X4
	020 Move W22, W3
	021 Move X23, X2
	022 Move X24, X1
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCEC000
	029 Move X0, [X0+1768]
	030 Call 0x1C17CF4
	031 Move X0, 0xCED000
	032 Move X0, [X0+2024]
	033 Call 0x1C17CF4
	034 Move X0, 0xCEC000
	035 Move X0, [X0+1784]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEC000
	038 Move X0, [X0+1760]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+1755], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+80], V0
	045 Move [X31+88], V0
	046 Move [X31+48], V0
	047 Move [X31+56], V0
	048 Move [X31+16], V0
	049 Move [X31+24], V0
	050 Move [X31], V0
	051 Move X26, 0xCEC000
	052 Move X28, 0xCED000
	053 Move X27, 0xCEC000
	054 Move W8, [X0+224]
	055 Move X26, [X26+1768]
	056 Move X28, [X28+2024]
	057 Move X27, [X27+1784]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, [X26]
	062 Add X8, X31, 0
	063 Or X26, X8, 15
	064 Move X8, X26
	065 Call AsyncTaskMethodBuilder`1<Object>.Create
	066 Move X2, [X28]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W8, TEMP
	070 Add X1, X31, 0
	071 Move X0, X26
	072 Move [X31+32], X25
	073 Move [X31+40], X24
	074 Move [X31+48], X23
	075 Move [X31+56], W22
	076 Move [X31+72], X19
	077 Move [X31+80], X21
	078 Move [X31+64], X20
	079 Move [X31], W8
	080 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	081 Move X1, [X27]
	082 Move X0, X26
	083 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	084 Move X20, [X31+192]
	085 Move X19, [X31+200]
	086 Move X22, [X31+176]
	087 Move X21, [X31+184]
	088 Move X24, [X31+160]
	089 Move X23, [X31+168]
	090 Move X26, [X31+144]
	091 Move X25, [X31+152]
	092 Move X28, [X31+128]
	093 Move X27, [X31+136]
	094 Move X30, [X31+112]
	095 Add X31, X31, 208
	096 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiSubscriptionList> ListSubscriptionsAsync(Nakama.ISession session, System.Int32 limit, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03443EC8 LDRH W9, [X8 + 0x12E]
	0x03443ECC CBZ X9, 0x3443EF0
	0x03443ED0 LDR X10, [X8 + 0xB0]
	0x03443ED4 ADD X10, X10, 0x8
	0x03443ED8 LDUR X11, [X10 - 0x8]
	0x03443EDC CMP X11, X1
	0x03443EE0 B.EQ 0x3443F00
	0x03443EE4 SUBS X9, X9, 0x1
	0x03443EE8 ADD X10, X10, 0x10
	0x03443EEC B.NE 0x3443ED8
	0x03443EF0 MOVZ W2, 0x7
	0x03443EF4 MOV X0, X22
	0x03443EF8 BL 0x1C5C788
	0x03443EFC B 0x3443F10
	0x03443F00 LDR W9, [X10]
	0x03443F04 ADD W9, W9, 0x7
	0x03443F08 ADD X8, X8, W9, 0x4, SXTW
	0x03443F0C ADD X0, X8, 0x138
	0x03443F10 LDP X8, X1, [X0]
	0x03443F14 MOV X0, X22
	0x03443F18 BLR X8
	0x03443F1C MOV X2, X0
	0x03443F20 MOV X0, X21
	0x03443F24 MOV X3, X20
	0x03443F28 MOV X4, X19
	0x03443F2C LDP X20, X19, [X31 + 0x20]
	0x03443F30 LDP X22, X21, [X31 + 0x10]
	0x03443F34 MOV X1, X23
	0x03443F38 LDP X30, X23, [X31], #0x30
	0x03443F3C B 0x3443F44
	0x03443F40 BL 0x1C16F20
	0x03443F44 SUB X31, X31, 0x60
	0x03443F48 STR X30, [X31 + 0x10]
	0x03443F4C STP X26, X25, [X31 + 0x20]
	0x03443F50 STP X24, X23, [X31 + 0x30]
	0x03443F54 STP X22, X21, [X31 + 0x40]
	0x03443F58 STP X20, X19, [X31 + 0x50]
	0x03443F5C ADRP X24, 0xF9A000
	0x03443F60 ADRP X25, 0xCEC000
	0x03443F64 LDRB W8, [X24 + 0x6EA]
	0x03443F68 LDR X25, [X25 + 0x870]
	0x03443F6C MOV X21, X4
	0x03443F70 MOV X19, X3
	0x03443F74 MOV X22, X2
	0x03443F78 MOV X23, X1
	0x03443F7C MOV X20, X0
	0x03443F80 TBNZ X8, 0x0, 0x3443FC8
	0x03443F84 ADRP X0, 0xCB8000
	0x03443F88 LDR X0, [X0 + 0x818]
	0x03443F8C BL 0x1C16CF4
	0x03443F90 ADRP X0, 0xCEC000
	0x03443F94 LDR X0, [X0 + 0x7C8]
	0x03443F98 BL 0x1C16CF4
	0x03443F9C ADRP X0, 0xCEC000
	0x03443FA0 LDR X0, [X0 + 0x7D0]
	0x03443FA4 BL 0x1C16CF4
	0x03443FA8 ADRP X0, 0xCEC000
	0x03443FAC LDR X0, [X0 + 0x878]
	0x03443FB0 BL 0x1C16CF4
	0x03443FB4 ADRP X0, 0xCEC000
	0x03443FB8 LDR X0, [X0 + 0x870]
	0x03443FBC BL 0x1C16CF4
	0x03443FC0 MOVZ W8, 0x1
	0x03443FC4 STRB W8, [X24 + 0x6EA]
	0x03443FC8 LDR X0, [X25]
	0x03443FCC BL 0x1C16F10
	0x03443FD0 MOV X1, X31
	0x03443FD4 MOV X24, X0
	0x03443FD8 BL 0x33BDD8C
	0x03443FDC CBZ X24, 0x344409C
	0x03443FE0 ADRP X8, 0xCB8000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+120], X27
	004 Move [X31+128], X26
	005 Move [X31+136], X25
	006 Move [X31+144], X24
	007 Move [X31+152], X23
	008 Move [X31+160], X22
	009 Move [X31+168], X21
	010 Move [X31+176], X20
	011 Move [X31+184], X19
	012 Move X26, 0xF9B000
	013 Move X25, 0xCEC000
	014 Move W8, [X26+1756]
	015 Move X25, [X25+1384]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move W22, W2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xCEC000
	027 Move X0, [X0+1392]
	028 Call 0x1C17CF4
	029 Move X0, 0xCED000
	030 Move X0, [X0+2032]
	031 Call 0x1C17CF4
	032 Move X0, 0xCEC000
	033 Move X0, [X0+1408]
	034 Call 0x1C17CF4
	035 Move X0, 0xCEC000
	036 Move X0, [X0+1384]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1756], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+96], X31
	043 Move [X31+64], V0
	044 Move [X31+72], V0
	045 Move [X31+32], V0
	046 Move [X31+40], V0
	047 Move [X31], V0
	048 Move [X31+8], V0
	049 Move X25, 0xCEC000
	050 Move X27, 0xCED000
	051 Move X26, 0xCEC000
	052 Move W8, [X0+224]
	053 Move X25, [X25+1392]
	054 Move X27, [X27+2032]
	055 Move X26, [X26+1408]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, [X25]
	060 Add X8, X31, 0
	061 Or X25, X8, 15
	062 Move X8, X25
	063 Call AsyncTaskMethodBuilder`1<Object>.Create
	064 Move X2, [X27]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W8, TEMP
	068 Add X1, X31, 0
	069 Move X0, X25
	070 Move [X31+32], X24
	071 Move [X31+40], X23
	072 Move [X31+56], W22
	073 Move [X31+48], X21
	074 Move [X31+64], X19
	075 Move [X31+72], X20
	076 Move [X31], W8
	077 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	078 Move X1, [X26]
	079 Move X0, X25
	080 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	081 Move X20, [X31+176]
	082 Move X19, [X31+184]
	083 Move X22, [X31+160]
	084 Move X21, [X31+168]
	085 Move X24, [X31+144]
	086 Move X23, [X31+152]
	087 Move X26, [X31+128]
	088 Move X25, [X31+136]
	089 Move X30, [X31+112]
	090 Move X27, [X31+120]
	091 Add X31, X31, 192
	092 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiTournamentRecordList> ListTournamentRecordsAroundOwnerAsync(Nakama.ISession session, System.String tournamentId, System.String ownerId, System.Nullable`1<System.Int64> expiry = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03443FE4 LDR X8, [X8 + 0x818]
	0x03443FE8 STP X20, X23, [X24 + 0x10]
	0x03443FEC STP X22, X21, [X24 + 0x20]
	0x03443FF0 ADRP X22, 0xCEC000
	0x03443FF4 LDR X0, [X8]
	0x03443FF8 ADRP X26, 0xCEC000
	0x03443FFC ADRP X25, 0xCEC000
	0x03444000 LDR X21, [X20 + 0x58]
	0x03444004 LDR X22, [X22 + 0x878]
	0x03444008 LDR X26, [X26 + 0x7C8]
	0x0344400C LDR X25, [X25 + 0x7D0]
	0x03444010 BL 0x1C16F10
	0x03444014 LDR X2, [X22]
	0x03444018 MOV X1, X24
	0x0344401C MOV X3, X31
	0x03444020 MOV X22, X0
	0x03444024 BL 0x2D27AA8
	0x03444028 LDR X23, [X24 + 0x18]
	0x0344402C CBNZ X19, 0x3444034
	0x03444030 LDR X19, [X20 + 0x18]
	0x03444034 LDR X1, [X24 + 0x28]
	0x03444038 LDR X2, [X26]
	0x0344403C ADD X0, X31, 0x0
	0x03444040 STP X31, X31, [X31]
	0x03444044 BL 0x242E368
	0x03444048 LDR X0, [X25]
	0x0344404C BL 0x1C16F10
	0x03444050 LDP X3, X4, [X31]
	0x03444054 MOV X1, X23
	0x03444058 MOV X2, X19
	0x0344405C MOV X5, X31
	0x03444060 MOV X20, X0
	0x03444064 BL 0x3478040
	0x03444068 CBZ X21, 0x344409C
	0x0344406C MOV X0, X21
	0x03444070 MOV X1, X22
	0x03444074 MOV X2, X20
	0x03444078 MOV X3, X31
	0x0344407C BL 0x3465B68
	0x03444080 LDP X20, X19, [X31 + 0x50]
	0x03444084 LDP X22, X21, [X31 + 0x40]
	0x03444088 LDP X24, X23, [X31 + 0x30]
	0x0344408C LDP X26, X25, [X31 + 0x20]
	0x03444090 LDR X30, [X31 + 0x10]
	0x03444094 ADD X31, X31, 0x60
	0x03444098 RET
	0x0344409C BL 0x1C16F20
	0x034440A0 MOV X1, X31
	0x034440A4 B 0x33BDD8C
	0x034440A8 SUB X31, X31, 0xB0
	0x034440AC STR X30, [X31 + 0x60]
	0x034440B0 STP X26, X25, [X31 + 0x70]
	0x034440B4 STP X24, X23, [X31 + 0x80]
	0x034440B8 STP X22, X21, [X31 + 0x90]
	0x034440BC STP X20, X19, [X31 + 0xA0]
	0x034440C0 ADRP X25, 0xF99000
	0x034440C4 ADRP X24, 0xCEB000
	0x034440C8 LDRB W8, [X25 + 0x6EB]
	0x034440CC LDR X24, [X24 + 0x630]
	0x034440D0 MOV X19, X4
	0x034440D4 MOV X21, X3
	0x034440D8 MOV X20, X2
	0x034440DC MOV X22, X1
	0x034440E0 MOV X23, X0
	0x034440E4 TBNZ X8, 0x0, 0x3444120
	0x034440E8 ADRP X0, 0xCEB000
	0x034440EC LDR X0, [X0 + 0x638]
	0x034440F0 BL 0x1C16CF4
	0x034440F4 ADRP X0, 0xCEB000
	0x034440F8 LDR X0, [X0 + 0x880]
	0x034440FC BL 0x1C16CF4
	0x03444100 ADRP X0, 0xCEB000
	0x03444104 LDR X0, [X0 + 0x648]
	0x03444108 BL 0x1C16CF4
	0x0344410C ADRP X0, 0xCEB000
	0x03444110 LDR X0, [X0 + 0x630]
	0x03444114 BL 0x1C16CF4
	0x03444118 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X28, 0xF9A000
	015 Move W8, [X28+1757]
	016 Move W20, W6
	017 Move X21, X5
	018 Move X22, X4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X26, X0
	023 Move [X31], X7
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCEB000
	029 Move X0, [X0+1848]
	030 Call 0x1C17CF4
	031 Move X0, 0xCEC000
	032 Move X0, [X0+2040]
	033 Call 0x1C17CF4
	034 Move X0, 0xCEB000
	035 Move X0, [X0+1864]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEB000
	038 Move X0, [X0+1840]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X28+1757], W8
	042 Move X27, 0xCEB000
	043 Move X28, [X31+240]
	044 Move X29, [X31+248]
	045 Move X27, [X27+1848]
	046 Add X0, X31, 8
	047 Move W2, 136
	048 Move W1, W31
	049 Add X19, X31, 8
	050 Call 0x3EB2B10
	051 Move X8, 0xCEB000
	052 Move X8, [X8+1840]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X27]
	059 Add X27, X19, 8
	060 Move X8, X27
	061 Call AsyncTaskMethodBuilder`1<Object>.Create
	062 Move [X31+40], X26
	063 Move [X31+48], X25
	064 Move [X31+56], X24
	065 Move [X31+64], X23
	066 Move [X31+80], X22
	067 Move [X31+88], X21
	068 Move [X31+72], W20
	069 Move [X31+112], X28
	070 Move X8, 0xCEC000
	071 Move X8, [X8+2040]
	072 Add X1, X31, 8
	073 Move X0, X27
	074 Move X2, [X8]
	075 Move X8, [X31]
	076 Move [X31+96], X8
	077 Move [X31+104], X29
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W8, TEMP
	081 Move [X31+8], W8
	082 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	083 Move X8, 0xCEB000
	084 Move X8, [X8+1864]
	085 Move X0, X27
	086 Move X1, [X8]
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+224]
	089 Move X19, [X31+232]
	090 Move X22, [X31+208]
	091 Move X21, [X31+216]
	092 Move X24, [X31+192]
	093 Move X23, [X31+200]
	094 Move X26, [X31+176]
	095 Move X25, [X31+184]
	096 Move X28, [X31+160]
	097 Move X27, [X31+168]
	098 Move X29, [X31+144]
	099 Move X30, [X31+152]
	100 Add X31, X31, 240
	101 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiTournamentRecordList> ListTournamentRecordsAsync(Nakama.ISession session, System.String tournamentId, System.Collections.Generic.IEnumerable`1<System.String> ownerIds = null, System.Nullable`1<System.Int64> expiry = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x0344411C STRB W8, [X25 + 0x6EB]
	0x03444120 LDR X0, [X24]
	0x03444124 MOVI V0.2D, 0x0
	0x03444128 STR X31, [X31 + 0x50]
	0x0344412C STP V0, V0, [X31 + 0x30]
	0x03444130 STP V0, V0, [X31 + 0x10]
	0x03444134 STR V0, [X31]
	0x03444138 ADRP X24, 0xCEB000
	0x0344413C ADRP X26, 0xCEB000
	0x03444140 ADRP X25, 0xCEB000
	0x03444144 LDR W8, [X0 + 0xE0]
	0x03444148 LDR X24, [X24 + 0x638]
	0x0344414C LDR X26, [X26 + 0x880]
	0x03444150 LDR X25, [X25 + 0x648]
	0x03444154 CBNZ W8, 0x344415C
	0x03444158 BL 0x1C16DFC
	0x0344415C LDR X0, [X24]
	0x03444160 ADD X8, X31, 0x0
	0x03444164 ORR X24, X8, 0xF
	0x03444168 MOV X8, X24
	0x0344416C BL 0x263221C
	0x03444170 LDR X2, [X26]
	0x03444174 MOVN W8, 0x0
	0x03444178 ADD X1, X31, 0x0
	0x0344417C MOV X0, X24
	0x03444180 STP X23, X22, [X31 + 0x20]
	0x03444184 STP X19, X21, [X31 + 0x38]
	0x03444188 STR X20, [X31 + 0x30]
	0x0344418C STR W8, [X31]
	0x03444190 BL 0x1FCE214
	0x03444194 LDR X1, [X25]
	0x03444198 MOV X0, X24
	0x0344419C BL 0x2632230
	0x034441A0 LDP X20, X19, [X31 + 0xA0]
	0x034441A4 LDP X22, X21, [X31 + 0x90]
	0x034441A8 LDP X24, X23, [X31 + 0x80]
	0x034441AC LDP X26, X25, [X31 + 0x70]
	0x034441B0 LDR X30, [X31 + 0x60]
	0x034441B4 ADD X31, X31, 0xB0
	0x034441B8 RET
	0x034441BC STR X30, [X31 - 0x30]!
	0x034441C0 STP X22, X21, [X31 + 0x10]
	0x034441C4 STP X20, X19, [X31 + 0x20]
	0x034441C8 ADRP X19, 0xF99000
	0x034441CC ADRP X21, 0xCAF000
	0x034441D0 LDRB W8, [X19 + 0x6EC]
	0x034441D4 LDR X21, [X21 + 0x9D0]
	0x034441D8 MOV X20, X0
	0x034441DC TBNZ X8, 0x0, 0x344420C
	0x034441E0 ADRP X0, 0xCAF000
	0x034441E4 LDR X0, [X0 + 0x758]
	0x034441E8 BL 0x1C16CF4
	0x034441EC ADRP X0, 0xCAF000
	0x034441F0 LDR X0, [X0 + 0x9D0]
	0x034441F4 BL 0x1C16CF4
	0x034441F8 ADRP X0, 0xCEB000
	0x034441FC LDR X0, [X0 + 0x888]
	0x03444200 BL 0x1C16CF4
	0x03444204 MOVZ W8, 0x1
	0x03444208 STRB W8, [X19 + 0x6EC]
	0x0344420C LDR X0, [X21]
	0x03444210 MOVZ W1, 0x5
	0x03444214 BL 0x1C16D6C
	0x03444218 CBZ X0, 0x3444368
	0x0344421C LDR X21, [X20 + 0x20]
	0x03444220 MOV X19, X0
	0x03444224 CBZ X21, 0x344423C
	0x03444228 LDR X8, [X19]
	0x0344422C MOV X0, X21
	0x03444230 LDR X1, [X8 + 0x40]
	0x03444234 BL 0x1C16E00
	0x03444238 CBZ X0, 0x344435C
	0x0344423C LDR W8, [X19 + 0x18]
	0x03444240 CBZ W8, 0x3444358
	0x03444244 ADRP X22, 0xCAF000
	0x03444248 LDR X22, [X22 + 0x758]
	0x0344424C STR X21, [X19 + 0x20]
	0x03444250 LDR W8, [X20 + 0x28]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X28, 0xF9A000
	015 Move W8, [X28+1758]
	016 Move X20, X7
	017 Move W21, W6
	018 Move X22, X4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X26, X0
	023 Move [X31], X5
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCEB000
	029 Move X0, [X0+1848]
	030 Call 0x1C17CF4
	031 Move X0, 0xCEC000
	032 Move X0, [X0+2048]
	033 Call 0x1C17CF4
	034 Move X0, 0xCEB000
	035 Move X0, [X0+1864]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEB000
	038 Move X0, [X0+1840]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X28+1758], W8
	042 Move X27, 0xCEB000
	043 Move X28, [X31+240]
	044 Move X29, [X31+248]
	045 Move X27, [X27+1848]
	046 Add X0, X31, 8
	047 Move W2, 136
	048 Move W1, W31
	049 Add X19, X31, 8
	050 Call 0x3EB2B10
	051 Move X8, 0xCEB000
	052 Move X8, [X8+1840]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X27]
	059 Add X27, X19, 8
	060 Move X8, X27
	061 Call AsyncTaskMethodBuilder`1<Object>.Create
	062 Move [X31+40], X26
	063 Move [X31+48], X25
	064 Move [X31+56], X24
	065 Move [X31+64], X23
	066 Move [X31+72], W21
	067 Move [X31+80], X20
	068 Move [X31+88], X22
	069 Move [X31+112], X28
	070 Move X8, 0xCEC000
	071 Move X8, [X8+2048]
	072 Add X1, X31, 8
	073 Move X0, X27
	074 Move X2, [X8]
	075 Move X8, [X31]
	076 Move [X31+96], X8
	077 Move [X31+104], X29
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W8, TEMP
	081 Move [X31+8], W8
	082 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	083 Move X8, 0xCEB000
	084 Move X8, [X8+1864]
	085 Move X0, X27
	086 Move X1, [X8]
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+224]
	089 Move X19, [X31+232]
	090 Move X22, [X31+208]
	091 Move X21, [X31+216]
	092 Move X24, [X31+192]
	093 Move X23, [X31+200]
	094 Move X26, [X31+176]
	095 Move X25, [X31+184]
	096 Move X28, [X31+160]
	097 Move X27, [X31+168]
	098 Move X29, [X31+144]
	099 Move X30, [X31+152]
	100 Add X31, X31, 240
	101 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiTournamentList> ListTournamentsAsync(Nakama.ISession session, System.Int32 categoryStart, System.Int32 categoryEnd, System.Nullable`1<System.Int32> startTime = null, System.Nullable`1<System.Int32> endTime = null, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03444254 ADD X1, X31, 0xC
	0x03444258 LDR X0, [X22]
	0x0344425C STR W8, [X31 + 0xC]
	0x03444260 BL 0x1C16E04
	0x03444264 MOV X21, X0
	0x03444268 CBZ X0, 0x3444280
	0x0344426C LDR X8, [X19]
	0x03444270 MOV X0, X21
	0x03444274 LDR X1, [X8 + 0x40]
	0x03444278 BL 0x1C16E00
	0x0344427C CBZ X0, 0x344435C
	0x03444280 LDR W8, [X19 + 0x18]
	0x03444284 CMP W8, 0x1
	0x03444288 B.LS 0x3444358
	0x0344428C STR X21, [X19 + 0x28]
	0x03444290 LDR X21, [X20 + 0x30]
	0x03444294 CBZ X21, 0x34442B0
	0x03444298 LDR X8, [X19]
	0x0344429C MOV X0, X21
	0x034442A0 LDR X1, [X8 + 0x40]
	0x034442A4 BL 0x1C16E00
	0x034442A8 CBZ X0, 0x344435C
	0x034442AC LDR W8, [X19 + 0x18]
	0x034442B0 CMP W8, 0x2
	0x034442B4 B.LS 0x3444358
	0x034442B8 STR X21, [X19 + 0x30]
	0x034442BC LDR X21, [X20 + 0x38]
	0x034442C0 CBZ X21, 0x34442DC
	0x034442C4 LDR X8, [X19]
	0x034442C8 MOV X0, X21
	0x034442CC LDR X1, [X8 + 0x40]
	0x034442D0 BL 0x1C16E00
	0x034442D4 CBZ X0, 0x344435C
	0x034442D8 LDR W8, [X19 + 0x18]
	0x034442DC CMP W8, 0x3
	0x034442E0 B.LS 0x3444358
	0x034442E4 STR X21, [X19 + 0x38]
	0x034442E8 LDR X8, [X20 + 0x48]
	0x034442EC CBZ X8, 0x3444368
	0x034442F0 LDR W8, [X8 + 0x18]
	0x034442F4 LDR X0, [X22]
	0x034442F8 ADD X1, X31, 0x8
	0x034442FC STR W8, [X31 + 0x8]
	0x03444300 BL 0x1C16E04
	0x03444304 MOV X20, X0
	0x03444308 CBZ X0, 0x3444320
	0x0344430C LDR X8, [X19]
	0x03444310 MOV X0, X20
	0x03444314 LDR X1, [X8 + 0x40]
	0x03444318 BL 0x1C16E00
	0x0344431C CBZ X0, 0x344435C
	0x03444320 LDR W8, [X19 + 0x18]
	0x03444324 CMP W8, 0x4
	0x03444328 B.LS 0x3444358
	0x0344432C ADRP X8, 0xCEB000
	0x03444330 LDR X8, [X8 + 0x888]
	0x03444334 STR X20, [X19 + 0x40]
	0x03444338 MOV X1, X19
	0x0344433C MOV X2, X31
	0x03444340 LDR X0, [X8]
	0x03444344 BL 0x3227C5C
	0x03444348 LDP X20, X19, [X31 + 0x20]
	0x0344434C LDP X22, X21, [X31 + 0x10]
	0x03444350 LDR X30, [X31], #0x30
	0x03444354 RET
	0x03444358 BL 0x1C16F28
	0x0344435C BL 0x1C16F44
	0x03444360 MOV X1, X31
	0x03444364 BL 0x1C16DEC
	0x03444368 BL 0x1C16F20
	0x0344436C SUB X31, X31, 0xC0
	0x03444370 STP X30, X25, [X31 + 0x80]
	0x03444374 STP X24, X23, [X31 + 0x90]
	0x03444378 STP X22, X21, [X31 + 0xA0]
	0x0344437C STP X20, X19, [X31 + 0xB0]
	0x03444380 ADRP X25, 0xF99000
	0x03444384 ADRP X24, 0xCB2000
	0x03444388 LDRB W8, [X25 + 0x6ED]
	0x0344438C LDR X24, [X24 + 0x280]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move [X31+8], X7
	015 Move X28, 0xF9A000
	016 Move X27, 0xCEB000
	017 Move W8, [X28+1759]
	018 Move X27, [X27+1800]
	019 Move W20, W6
	020 Move X21, X5
	021 Move X22, X4
	022 Move W23, W3
	023 Move W24, W2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCEB000
	031 Move X0, [X0+1808]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEC000
	034 Move X0, [X0+2056]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEB000
	037 Move X0, [X0+1824]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEB000
	040 Move X0, [X0+1800]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1759], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+112], V0
	047 Move [X31+120], V0
	048 Move [X31+80], V0
	049 Move [X31+88], V0
	050 Move [X31+48], V0
	051 Move [X31+56], V0
	052 Move [X31+16], V0
	053 Move [X31+24], V0
	054 Move X27, 0xCEB000
	055 Move X28, 0xCEC000
	056 Move W8, [X0+224]
	057 Move X19, [X31+240]
	058 Move X29, [X31+248]
	059 Move X27, [X27+1808]
	060 Move X28, [X28+2056]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X27]
	065 Add X8, X31, 16
	066 Or X27, X8, 15
	067 Move X8, X27
	068 Call AsyncTaskMethodBuilder`1<Object>.Create
	069 Move X8, [X31+8]
	070 Move X2, [X28]
	071 Add X1, X31, 16
	072 Move X0, X27
	073 Move [X31+96], X8
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W8, TEMP
	077 Move [X31+48], X26
	078 Move [X31+56], X25
	079 Move [X31+64], W24
	080 Move [X31+68], W23
	081 Move [X31+72], X22
	082 Move [X31+80], X21
	083 Move [X31+88], W20
	084 Move [X31+104], X29
	085 Move [X31+112], X19
	086 Move [X31+16], W8
	087 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	088 Move X8, 0xCEB000
	089 Move X8, [X8+1824]
	090 Move X0, X27
	091 Move X1, [X8]
	092 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	093 Move X20, [X31+224]
	094 Move X19, [X31+232]
	095 Move X22, [X31+208]
	096 Move X21, [X31+216]
	097 Move X24, [X31+192]
	098 Move X23, [X31+200]
	099 Move X26, [X31+176]
	100 Move X25, [X31+184]
	101 Move X28, [X31+160]
	102 Move X27, [X31+168]
	103 Move X29, [X31+144]
	104 Move X30, [X31+152]
	105 Add X31, X31, 240
	106 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiUserGroupList> ListUserGroupsAsync(Nakama.ISession session, System.Nullable`1<System.Int32> state, System.Int32 limit, System.String cursor, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03444390 MOV X20, X4
	0x03444394 MOV X21, X3
	0x03444398 MOV X22, X2
	0x0344439C MOV X23, X1
	0x034443A0 MOV X19, X0
	0x034443A4 TBNZ X8, 0x0, 0x34443C8
	0x034443A8 ADRP X0, 0xCEB000
	0x034443AC LDR X0, [X0 + 0x890]
	0x034443B0 BL 0x1C16CF4
	0x034443B4 ADRP X0, 0xCB2000
	0x034443B8 LDR X0, [X0 + 0x280]
	0x034443BC BL 0x1C16CF4
	0x034443C0 MOVZ W8, 0x1
	0x034443C4 STRB W8, [X25 + 0x6ED]
	0x034443C8 LDR X0, [X24]
	0x034443CC MOVI V0.2D, 0x0
	0x034443D0 STP V0, V0, [X31 + 0x60]
	0x034443D4 STP V0, V0, [X31 + 0x40]
	0x034443D8 STP V0, V0, [X31 + 0x20]
	0x034443DC ADRP X24, 0xCEB000
	0x034443E0 LDR W8, [X0 + 0xE0]
	0x034443E4 LDR X24, [X24 + 0x890]
	0x034443E8 CBNZ W8, 0x34443F0
	0x034443EC BL 0x1C16DFC
	0x034443F0 ADD X8, X31, 0x8
	0x034443F4 MOV X0, X31
	0x034443F8 BL 0x32C4770
	0x034443FC LDUR V0, [X31 + 0x8]
	0x03444400 LDR X9, [X31 + 0x18]
	0x03444404 LDR X2, [X24]
	0x03444408 ADD X8, X31, 0x20
	0x0344440C STP X20, X21, [X31 + 0x58]
	0x03444410 ORR X20, X8, 0xF
	0x03444414 MOVN W10, 0x0
	0x03444418 ADD X1, X31, 0x20
	0x0344441C MOV X0, X20
	0x03444420 STP X23, X22, [X31 + 0x48]
	0x03444424 STUR V0, [X31 + 0x28]
	0x03444428 STP X9, X19, [X31 + 0x38]
	0x0344442C STR W10, [X31 + 0x20]
	0x03444430 BL 0x2192EB8
	0x03444434 MOV X0, X20
	0x03444438 MOV X1, X31
	0x0344443C BL 0x32C47F8
	0x03444440 LDP X20, X19, [X31 + 0xB0]
	0x03444444 LDP X22, X21, [X31 + 0xA0]
	0x03444448 LDP X24, X23, [X31 + 0x90]
	0x0344444C LDP X30, X25, [X31 + 0x80]
	0x03444450 ADD X31, X31, 0xC0
	0x03444454 RET
	0x03444458 SUB X31, X31, 0xC0
	0x0344445C STP X30, X25, [X31 + 0x80]
	0x03444460 STP X24, X23, [X31 + 0x90]
	0x03444464 STP X22, X21, [X31 + 0xA0]
	0x03444468 STP X20, X19, [X31 + 0xB0]
	0x0344446C ADRP X25, 0xF99000
	0x03444470 ADRP X24, 0xCB2000
	0x03444474 LDRB W8, [X25 + 0x6EE]
	0x03444478 LDR X24, [X24 + 0x280]
	0x0344447C MOV X20, X4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0xF9A000
	010 Move W8, [X24+1760]
	011 Move X19, X4
	012 Move W20, W3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xCB1000
	021 Move X0, [X0+2072]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1760], W8
	025 Compare X22, 0
	026 JumpIfEqual {69}
	027 Move X10, 0xCB1000
	028 Move X8, [X22]
	029 Move X10, [X10+2072]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 10
	041 Move X0, X22
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 10
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X8, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X22
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X2, X0
	052 Move X0, X23
	053 Move X1, X22
	054 Move X3, X21
	055 Move W4, W20
	056 Move X5, X19
	057 Move X6, X31
	058 Move X7, X31
	059 Call Client.ListUserGroupsAsync, X0, X1, X2, X3, X4, X5, X6, X7
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X24, [X31+32]
	065 Move X23, [X31+40]
	066 Move X30, [X31+16]
	067 Add X31, X31, 80
	068 Return X0
	069 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiUserGroupList> ListUserGroupsAsync(Nakama.ISession session, System.String userId, System.Nullable`1<System.Int32> state, System.Int32 limit, System.String cursor, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03444480 MOV X21, X3
	0x03444484 MOV X22, X2
	0x03444488 MOV X23, X1
	0x0344448C MOV X19, X0
	0x03444490 TBNZ X8, 0x0, 0x34444B4
	0x03444494 ADRP X0, 0xCEB000
	0x03444498 LDR X0, [X0 + 0x898]
	0x0344449C BL 0x1C16CF4
	0x034444A0 ADRP X0, 0xCB2000
	0x034444A4 LDR X0, [X0 + 0x280]
	0x034444A8 BL 0x1C16CF4
	0x034444AC MOVZ W8, 0x1
	0x034444B0 STRB W8, [X25 + 0x6EE]
	0x034444B4 LDR X0, [X24]
	0x034444B8 MOVI V0.2D, 0x0
	0x034444BC STP V0, V0, [X31 + 0x60]
	0x034444C0 STP V0, V0, [X31 + 0x40]
	0x034444C4 STP V0, V0, [X31 + 0x20]
	0x034444C8 ADRP X24, 0xCEB000
	0x034444CC LDR W8, [X0 + 0xE0]
	0x034444D0 LDR X24, [X24 + 0x898]
	0x034444D4 CBNZ W8, 0x34444DC
	0x034444D8 BL 0x1C16DFC
	0x034444DC ADD X8, X31, 0x8
	0x034444E0 MOV X0, X31
	0x034444E4 BL 0x32C4770
	0x034444E8 LDUR V0, [X31 + 0x8]
	0x034444EC LDR X9, [X31 + 0x18]
	0x034444F0 LDR X2, [X24]
	0x034444F4 ADD X8, X31, 0x20
	0x034444F8 STP X20, X21, [X31 + 0x58]
	0x034444FC ORR X20, X8, 0xF
	0x03444500 MOVN W10, 0x0
	0x03444504 ADD X1, X31, 0x20
	0x03444508 MOV X0, X20
	0x0344450C STP X23, X22, [X31 + 0x48]
	0x03444510 STUR V0, [X31 + 0x28]
	0x03444514 STP X9, X19, [X31 + 0x38]
	0x03444518 STR W10, [X31 + 0x20]
	0x0344451C BL 0x2192FB8
	0x03444520 MOV X0, X20
	0x03444524 MOV X1, X31
	0x03444528 BL 0x32C47F8
	0x0344452C LDP X20, X19, [X31 + 0xB0]
	0x03444530 LDP X22, X21, [X31 + 0xA0]
	0x03444534 LDP X24, X23, [X31 + 0x90]
	0x03444538 LDP X30, X25, [X31 + 0x80]
	0x0344453C ADD X31, X31, 0xC0
	0x03444540 RET
	0x03444544 SUB X31, X31, 0xC0
	0x03444548 STP X30, X25, [X31 + 0x80]
	0x0344454C STP X24, X23, [X31 + 0x90]
	0x03444550 STP X22, X21, [X31 + 0xA0]
	0x03444554 STP X20, X19, [X31 + 0xB0]
	0x03444558 ADRP X25, 0xF99000
	0x0344455C ADRP X24, 0xCB2000
	0x03444560 LDRB W8, [X25 + 0x6EF]
	0x03444564 LDR X24, [X24 + 0x280]
	0x03444568 MOV X20, X4
	0x0344456C MOV X21, X3
	0x03444570 MOV X22, X2
	0x03444574 MOV X23, X1
	0x03444578 MOV X19, X0
	0x0344457C TBNZ X8, 0x0, 0x34445A0
	0x03444580 ADRP X0, 0xCEB000
	0x03444584 LDR X0, [X0 + 0x8A0]
	0x03444588 BL 0x1C16CF4
	0x0344458C ADRP X0, 0xCB2000
	0x03444590 LDR X0, [X0 + 0x280]
	0x03444594 BL 0x1C16CF4
	0x03444598 MOVZ W8, 0x1
	0x0344459C STRB W8, [X25 + 0x6EF]
	0x034445A0 LDR X0, [X24]
	0x034445A4 MOVI V0.2D, 0x0
	0x034445A8 STP V0, V0, [X31 + 0x60]
	0x034445AC STP V0, V0, [X31 + 0x40]
	0x034445B0 STP V0, V0, [X31 + 0x20]
	0x034445B4 ADRP X24, 0xCEB000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X28, 0xF9A000
	015 Move X27, 0xCEB000
	016 Move W8, [X28+1761]
	017 Move X27, [X27+1936]
	018 Move X19, X7
	019 Move X21, X6
	020 Move X20, X5
	021 Move W22, W4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCEB000
	031 Move X0, [X0+1944]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEC000
	034 Move X0, [X0+2064]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEB000
	037 Move X0, [X0+1960]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEB000
	040 Move X0, [X0+1936]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1761], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+112], X31
	047 Move [X31+80], V0
	048 Move [X31+88], V0
	049 Move [X31+48], V0
	050 Move [X31+56], V0
	051 Move [X31+16], V0
	052 Move [X31+24], V0
	053 Move [X31], V0
	054 Move X27, 0xCEB000
	055 Move X29, 0xCEC000
	056 Move X28, 0xCEB000
	057 Move W8, [X0+224]
	058 Move X27, [X27+1944]
	059 Move X29, [X29+2064]
	060 Move X28, [X28+1960]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X27]
	065 Add X8, X31, 0
	066 Or X27, X8, 15
	067 Move X8, X27
	068 Call AsyncTaskMethodBuilder`1<Object>.Create
	069 Move X2, [X29]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W8, TEMP
	073 Add X1, X31, 0
	074 Move X0, X27
	075 Move [X31+32], X26
	076 Move [X31+40], X25
	077 Move [X31+48], X24
	078 Move [X31+60], X23
	079 Move [X31+56], W22
	080 Move [X31+80], X19
	081 Move [X31+88], X21
	082 Move [X31+72], X20
	083 Move [X31], W8
	084 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	085 Move X1, [X28]
	086 Move X0, X27
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+208]
	089 Move X19, [X31+216]
	090 Move X22, [X31+192]
	091 Move X21, [X31+200]
	092 Move X24, [X31+176]
	093 Move X23, [X31+184]
	094 Move X26, [X31+160]
	095 Move X25, [X31+168]
	096 Move X28, [X31+144]
	097 Move X27, [X31+152]
	098 Move X29, [X31+128]
	099 Move X30, [X31+136]
	100 Add X31, X31, 224
	101 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectList> ListUsersStorageObjectsAsync(Nakama.ISession session, System.String collection, System.String userId, System.Int32 limit = 1, System.String cursor = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034445B8 LDR W8, [X0 + 0xE0]
	0x034445BC LDR X24, [X24 + 0x8A0]
	0x034445C0 CBNZ W8, 0x34445C8
	0x034445C4 BL 0x1C16DFC
	0x034445C8 ADD X8, X31, 0x8
	0x034445CC MOV X0, X31
	0x034445D0 BL 0x32C4770
	0x034445D4 LDUR V0, [X31 + 0x8]
	0x034445D8 LDR X9, [X31 + 0x18]
	0x034445DC LDR X2, [X24]
	0x034445E0 ADD X8, X31, 0x20
	0x034445E4 STP X20, X21, [X31 + 0x58]
	0x034445E8 ORR X20, X8, 0xF
	0x034445EC MOVN W10, 0x0
	0x034445F0 ADD X1, X31, 0x20
	0x034445F4 MOV X0, X20
	0x034445F8 STP X23, X22, [X31 + 0x48]
	0x034445FC STUR V0, [X31 + 0x28]
	0x03444600 STP X9, X19, [X31 + 0x38]
	0x03444604 STR W10, [X31 + 0x20]
	0x03444608 BL 0x21930B8
	0x0344460C MOV X0, X20
	0x03444610 MOV X1, X31
	0x03444614 BL 0x32C47F8
	0x03444618 LDP X20, X19, [X31 + 0xB0]
	0x0344461C LDP X22, X21, [X31 + 0xA0]
	0x03444620 LDP X24, X23, [X31 + 0x90]
	0x03444624 LDP X30, X25, [X31 + 0x80]
	0x03444628 ADD X31, X31, 0xC0
	0x0344462C RET
	0x03444630 SUB X31, X31, 0xE0
	0x03444634 STR X30, [X31 + 0x90]
	0x03444638 STP X26, X25, [X31 + 0xA0]
	0x0344463C STP X24, X23, [X31 + 0xB0]
	0x03444640 STP X22, X21, [X31 + 0xC0]
	0x03444644 STP X20, X19, [X31 + 0xD0]
	0x03444648 ADRP X26, 0xF99000
	0x0344464C ADRP X25, 0xCB2000
	0x03444650 LDRB W8, [X26 + 0x6F0]
	0x03444654 LDR X25, [X25 + 0x280]
	0x03444658 MOV X20, X5
	0x0344465C MOV X21, X4
	0x03444660 MOV X22, X3
	0x03444664 MOV X23, X2
	0x03444668 MOV X24, X1
	0x0344466C MOV X19, X0
	0x03444670 TBNZ X8, 0x0, 0x3444694
	0x03444674 ADRP X0, 0xCEB000
	0x03444678 LDR X0, [X0 + 0x8A8]
	0x0344467C BL 0x1C16CF4
	0x03444680 ADRP X0, 0xCB2000
	0x03444684 LDR X0, [X0 + 0x280]
	0x03444688 BL 0x1C16CF4
	0x0344468C MOVZ W8, 0x1
	0x03444690 STRB W8, [X26 + 0x6F0]
	0x03444694 LDR X0, [X25]
	0x03444698 MOVI V0.2D, 0x0
	0x0344469C STR X31, [X31 + 0x80]
	0x034446A0 STP V0, V0, [X31 + 0x60]
	0x034446A4 STP V0, V0, [X31 + 0x40]
	0x034446A8 STP V0, V0, [X31 + 0x20]
	0x034446AC ADRP X25, 0xCEB000
	0x034446B0 LDR W8, [X0 + 0xE0]
	0x034446B4 LDR X25, [X25 + 0x8A8]
	0x034446B8 CBNZ W8, 0x34446C0
	0x034446BC BL 0x1C16DFC
	0x034446C0 ADD X8, X31, 0x8
	0x034446C4 MOV X0, X31
	0x034446C8 BL 0x32C4770
	0x034446CC LDUR V0, [X31 + 0x8]
	0x034446D0 LDR X9, [X31 + 0x18]
	0x034446D4 LDR X2, [X25]
	0x034446D8 ADD X8, X31, 0x20
	0x034446DC STP X20, X21, [X31 + 0x60]
	0x034446E0 ORR X20, X8, 0xF
	0x034446E4 MOVN W10, 0x0
	0x034446E8 ADD X1, X31, 0x20

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X28, 0xF9A000
	015 Move X27, 0xCEB000
	016 Move W8, [X28+1762]
	017 Move X27, [X27+1760]
	018 Move X19, X7
	019 Move X21, X6
	020 Move X20, X5
	021 Move W22, W4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCEB000
	031 Move X0, [X0+1768]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEC000
	034 Move X0, [X0+2072]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEB000
	037 Move X0, [X0+1784]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEB000
	040 Move X0, [X0+1760]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1762], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+112], X31
	047 Move [X31+80], V0
	048 Move [X31+88], V0
	049 Move [X31+48], V0
	050 Move [X31+56], V0
	051 Move [X31+16], V0
	052 Move [X31+24], V0
	053 Move [X31], V0
	054 Move X27, 0xCEB000
	055 Move X29, 0xCEC000
	056 Move X28, 0xCEB000
	057 Move W8, [X0+224]
	058 Move X27, [X27+1768]
	059 Move X29, [X29+2072]
	060 Move X28, [X28+1784]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X27]
	065 Add X8, X31, 0
	066 Or X27, X8, 15
	067 Move X8, X27
	068 Call AsyncTaskMethodBuilder`1<Object>.Create
	069 Move X2, [X29]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W8, TEMP
	073 Add X1, X31, 0
	074 Move X0, X27
	075 Move [X31+32], X26
	076 Move [X31+40], X25
	077 Move [X31+48], X24
	078 Move [X31+56], X23
	079 Move [X31+64], W22
	080 Move [X31+80], X19
	081 Move [X31+88], X21
	082 Move [X31+72], X20
	083 Move [X31], W8
	084 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	085 Move X1, [X28]
	086 Move X0, X27
	087 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	088 Move X20, [X31+208]
	089 Move X19, [X31+216]
	090 Move X22, [X31+192]
	091 Move X21, [X31+200]
	092 Move X24, [X31+176]
	093 Move X23, [X31+184]
	094 Move X26, [X31+160]
	095 Move X25, [X31+168]
	096 Move X28, [X31+144]
	097 Move X27, [X31+152]
	098 Move X29, [X31+128]
	099 Move X30, [X31+136]
	100 Add X31, X31, 224
	101 Return X0

Method: System.Threading.Tasks.Task PromoteGroupUsersAsync(Nakama.ISession session, System.String groupId, System.Collections.Generic.IEnumerable`1<System.String> ids, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034446EC MOV X0, X20
	0x034446F0 STP X24, X23, [X31 + 0x48]
	0x034446F4 STR X22, [X31 + 0x58]
	0x034446F8 STUR V0, [X31 + 0x28]
	0x034446FC STP X9, X19, [X31 + 0x38]
	0x03444700 STR W10, [X31 + 0x20]
	0x03444704 BL 0x21931B8
	0x03444708 MOV X0, X20
	0x0344470C MOV X1, X31
	0x03444710 BL 0x32C47F8
	0x03444714 LDP X20, X19, [X31 + 0xD0]
	0x03444718 LDP X22, X21, [X31 + 0xC0]
	0x0344471C LDP X24, X23, [X31 + 0xB0]
	0x03444720 LDP X26, X25, [X31 + 0xA0]
	0x03444724 LDR X30, [X31 + 0x90]
	0x03444728 ADD X31, X31, 0xE0
	0x0344472C RET
	0x03444730 SUB X31, X31, 0xC0
	0x03444734 STP X30, X25, [X31 + 0x80]
	0x03444738 STP X24, X23, [X31 + 0x90]
	0x0344473C STP X22, X21, [X31 + 0xA0]
	0x03444740 STP X20, X19, [X31 + 0xB0]
	0x03444744 ADRP X25, 0xF99000
	0x03444748 ADRP X24, 0xCB2000
	0x0344474C LDRB W8, [X25 + 0x6F1]
	0x03444750 LDR X24, [X24 + 0x280]
	0x03444754 MOV X20, X4
	0x03444758 MOV X21, X3
	0x0344475C MOV X22, X2
	0x03444760 MOV X23, X1
	0x03444764 MOV X19, X0
	0x03444768 TBNZ X8, 0x0, 0x344478C
	0x0344476C ADRP X0, 0xCEB000
	0x03444770 LDR X0, [X0 + 0x8B0]
	0x03444774 BL 0x1C16CF4
	0x03444778 ADRP X0, 0xCB2000
	0x0344477C LDR X0, [X0 + 0x280]
	0x03444780 BL 0x1C16CF4
	0x03444784 MOVZ W8, 0x1
	0x03444788 STRB W8, [X25 + 0x6F1]
	0x0344478C LDR X0, [X24]
	0x03444790 MOVI V0.2D, 0x0
	0x03444794 STP V0, V0, [X31 + 0x60]
	0x03444798 STP V0, V0, [X31 + 0x40]
	0x0344479C STP V0, V0, [X31 + 0x20]
	0x034447A0 ADRP X24, 0xCEB000
	0x034447A4 LDR W8, [X0 + 0xE0]
	0x034447A8 LDR X24, [X24 + 0x8B0]
	0x034447AC CBNZ W8, 0x34447B4
	0x034447B0 BL 0x1C16DFC
	0x034447B4 ADD X8, X31, 0x8
	0x034447B8 MOV X0, X31
	0x034447BC BL 0x32C4770
	0x034447C0 LDUR V0, [X31 + 0x8]
	0x034447C4 LDR X9, [X31 + 0x18]
	0x034447C8 LDR X2, [X24]
	0x034447CC ADD X8, X31, 0x20
	0x034447D0 STP X20, X21, [X31 + 0x58]
	0x034447D4 ORR X20, X8, 0xF
	0x034447D8 MOVN W10, 0x0
	0x034447DC ADD X1, X31, 0x20
	0x034447E0 MOV X0, X20
	0x034447E4 STP X23, X22, [X31 + 0x48]
	0x034447E8 STUR V0, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF9A000
	012 Move X25, 0xCB3000
	013 Move W8, [X26+1763]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEC000
	026 Move X0, [X0+2080]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB3000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1763], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEC000
	043 Move W8, [X0+224]
	044 Move X25, [X25+2080]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjects> ReadStorageObjectsAsync(Nakama.ISession session, Nakama.IApiReadStorageObjectId[] ids = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034447EC STP X9, X19, [X31 + 0x38]
	0x034447F0 STR W10, [X31 + 0x20]
	0x034447F4 BL 0x21932B8
	0x034447F8 MOV X0, X20
	0x034447FC MOV X1, X31
	0x03444800 BL 0x32C47F8
	0x03444804 LDP X20, X19, [X31 + 0xB0]
	0x03444808 LDP X22, X21, [X31 + 0xA0]
	0x0344480C LDP X24, X23, [X31 + 0x90]
	0x03444810 LDP X30, X25, [X31 + 0x80]
	0x03444814 ADD X31, X31, 0xC0
	0x03444818 RET
	0x0344481C SUB X31, X31, 0x110
	0x03444820 STP X29, X30, [X31 + 0xB0]
	0x03444824 STP X28, X27, [X31 + 0xC0]
	0x03444828 STP X26, X25, [X31 + 0xD0]
	0x0344482C STP X24, X23, [X31 + 0xE0]
	0x03444830 STP X22, X21, [X31 + 0xF0]
	0x03444834 STP X20, X19, [X31 + 0x100]
	0x03444838 ADRP X27, 0xF99000
	0x0344483C LDRB W8, [X27 + 0x6F2]
	0x03444840 MOV X19, X7
	0x03444844 MOV X21, X6
	0x03444848 MOV X22, X5
	0x0344484C MOV X23, X4
	0x03444850 MOV X24, X3
	0x03444854 MOV X25, X2
	0x03444858 MOV X26, X1
	0x0344485C MOV X20, X0
	0x03444860 TBNZ X8, 0x0, 0x3444884
	0x03444864 ADRP X0, 0xCEB000
	0x03444868 LDR X0, [X0 + 0x8B8]
	0x0344486C BL 0x1C16CF4
	0x03444870 ADRP X0, 0xCB2000
	0x03444874 LDR X0, [X0 + 0x280]
	0x03444878 BL 0x1C16CF4
	0x0344487C MOVZ W8, 0x1
	0x03444880 STRB W8, [X27 + 0x6F2]
	0x03444884 LDP X28, X29, [X31 + 0x110]
	0x03444888 ADD X0, X31, 0x28
	0x0344488C MOVZ W2, 0x88
	0x03444890 MOV W1, W31
	0x03444894 ADD X27, X31, 0x28
	0x03444898 BL 0x3EB1B10
	0x0344489C ADRP X8, 0xCB2000
	0x034448A0 LDR X8, [X8 + 0x280]
	0x034448A4 LDR X0, [X8]
	0x034448A8 LDR W8, [X0 + 0xE0]
	0x034448AC CBNZ W8, 0x34448B4
	0x034448B0 BL 0x1C16DFC
	0x034448B4 ADD X8, X31, 0x10
	0x034448B8 MOV X0, X31
	0x034448BC BL 0x32C4770
	0x034448C0 STP X26, X25, [X31 + 0x50]
	0x034448C4 STP X24, X23, [X31 + 0x60]
	0x034448C8 STP X22, X21, [X31 + 0x70]
	0x034448CC STP X29, X28, [X31 + 0x88]
	0x034448D0 STR X19, [X31 + 0x80]
	0x034448D4 ADRP X10, 0xCEB000
	0x034448D8 LDR V0, [X31 + 0x1]
	0x034448DC LDR X8, [X31 + 0x20]
	0x034448E0 LDR X10, [X10 + 0x8B8]
	0x034448E4 ADD X27, X27, 0x8
	0x034448E8 MOVN W9, 0x0
	0x034448EC ADD X1, X31, 0x28
	0x034448F0 LDR X2, [X10]
	0x034448F4 MOV X0, X27
	0x034448F8 STUR V0, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X25, 0xF9A000
	012 Move X24, 0xCEB000
	013 Move W8, [X25+1764]
	014 Move X24, [X24+1688]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xCEB000
	025 Move X0, [X0+1696]
	026 Call 0x1C17CF4
	027 Move X0, 0xCEC000
	028 Move X0, [X0+2088]
	029 Call 0x1C17CF4
	030 Move X0, 0xCEB000
	031 Move X0, [X0+1712]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEB000
	034 Move X0, [X0+1688]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1764], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move [X31], V0
	045 Move [X31+8], V0
	046 Move X24, 0xCEB000
	047 Move X26, 0xCEC000
	048 Move X25, 0xCEB000
	049 Move W8, [X0+224]
	050 Move X24, [X24+1696]
	051 Move X26, [X26+2088]
	052 Move X25, [X25+1712]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Add X8, X31, 0
	058 Or X24, X8, 15
	059 Move X8, X24
	060 Call AsyncTaskMethodBuilder`1<Object>.Create
	061 Move X2, [X26]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Add X1, X31, 0
	066 Move X0, X24
	067 Move [X31+32], X23
	068 Move [X31+40], X22
	069 Move [X31+72], X21
	070 Move [X31+48], X19
	071 Move [X31+56], X20
	072 Move [X31], W8
	073 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	074 Move X1, [X25]
	075 Move X0, X24
	076 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X26, [X31+112]
	084 Move X25, [X31+120]
	085 Move X30, [X31+96]
	086 Add X31, X31, 176
	087 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcAsync(Nakama.ISession session, System.String id, System.String payload, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034448FC STP X8, X20, [X31 + 0x40]
	0x03444900 STR W9, [X31 + 0x28]
	0x03444904 BL 0x21933B8
	0x03444908 MOV X0, X27
	0x0344490C MOV X1, X31
	0x03444910 BL 0x32C47F8
	0x03444914 LDP X20, X19, [X31 + 0x100]
	0x03444918 LDP X22, X21, [X31 + 0xF0]
	0x0344491C LDP X24, X23, [X31 + 0xE0]
	0x03444920 LDP X26, X25, [X31 + 0xD0]
	0x03444924 LDP X28, X27, [X31 + 0xC0]
	0x03444928 LDP X29, X30, [X31 + 0xB0]
	0x0344492C ADD X31, X31, 0x110
	0x03444930 RET
	0x03444934 SUB X31, X31, 0xC0
	0x03444938 STP X30, X25, [X31 + 0x80]
	0x0344493C STP X24, X23, [X31 + 0x90]
	0x03444940 STP X22, X21, [X31 + 0xA0]
	0x03444944 STP X20, X19, [X31 + 0xB0]
	0x03444948 ADRP X25, 0xF99000
	0x0344494C ADRP X24, 0xCB2000
	0x03444950 LDRB W8, [X25 + 0x6F3]
	0x03444954 LDR X24, [X24 + 0x280]
	0x03444958 MOV X20, X4
	0x0344495C MOV X21, X3
	0x03444960 MOV X22, X2
	0x03444964 MOV X23, X1
	0x03444968 MOV X19, X0
	0x0344496C TBNZ X8, 0x0, 0x3444990
	0x03444970 ADRP X0, 0xCEB000
	0x03444974 LDR X0, [X0 + 0x8C0]
	0x03444978 BL 0x1C16CF4
	0x0344497C ADRP X0, 0xCB2000
	0x03444980 LDR X0, [X0 + 0x280]
	0x03444984 BL 0x1C16CF4
	0x03444988 MOVZ W8, 0x1
	0x0344498C STRB W8, [X25 + 0x6F3]
	0x03444990 LDR X0, [X24]
	0x03444994 MOVI V0.2D, 0x0
	0x03444998 STP V0, V0, [X31 + 0x60]
	0x0344499C STP V0, V0, [X31 + 0x40]
	0x034449A0 STP V0, V0, [X31 + 0x20]
	0x034449A4 ADRP X24, 0xCEB000
	0x034449A8 LDR W8, [X0 + 0xE0]
	0x034449AC LDR X24, [X24 + 0x8C0]
	0x034449B0 CBNZ W8, 0x34449B8
	0x034449B4 BL 0x1C16DFC
	0x034449B8 ADD X8, X31, 0x8
	0x034449BC MOV X0, X31
	0x034449C0 BL 0x32C4770
	0x034449C4 LDUR V0, [X31 + 0x8]
	0x034449C8 LDR X9, [X31 + 0x18]
	0x034449CC LDR X2, [X24]
	0x034449D0 ADD X8, X31, 0x20
	0x034449D4 STP X20, X21, [X31 + 0x58]
	0x034449D8 ORR X20, X8, 0xF
	0x034449DC MOVN W10, 0x0
	0x034449E0 ADD X1, X31, 0x20
	0x034449E4 MOV X0, X20
	0x034449E8 STP X23, X22, [X31 + 0x48]
	0x034449EC STUR V0, [X31 + 0x28]
	0x034449F0 STP X9, X19, [X31 + 0x38]
	0x034449F4 STR W10, [X31 + 0x20]
	0x034449F8 BL 0x21934B8
	0x034449FC MOV X0, X20
	0x03444A00 MOV X1, X31
	0x03444A04 BL 0x32C47F8
	0x03444A08 LDP X20, X19, [X31 + 0xB0]
	0x03444A0C LDP X22, X21, [X31 + 0xA0]
	0x03444A10 LDP X24, X23, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+120], X27
	004 Move [X31+128], X26
	005 Move [X31+136], X25
	006 Move [X31+144], X24
	007 Move [X31+152], X23
	008 Move [X31+160], X22
	009 Move [X31+168], X21
	010 Move [X31+176], X20
	011 Move [X31+184], X19
	012 Move X26, 0xF9A000
	013 Move X25, 0xCEB000
	014 Move W8, [X26+1765]
	015 Move X25, [X25+1640]
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xCEB000
	027 Move X0, [X0+1648]
	028 Call 0x1C17CF4
	029 Move X0, 0xCEC000
	030 Move X0, [X0+2096]
	031 Call 0x1C17CF4
	032 Move X0, 0xCEB000
	033 Move X0, [X0+1664]
	034 Call 0x1C17CF4
	035 Move X0, 0xCEB000
	036 Move X0, [X0+1640]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1765], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+96], X31
	043 Move [X31+64], V0
	044 Move [X31+72], V0
	045 Move [X31+32], V0
	046 Move [X31+40], V0
	047 Move [X31], V0
	048 Move [X31+8], V0
	049 Move X25, 0xCEB000
	050 Move X27, 0xCEC000
	051 Move X26, 0xCEB000
	052 Move W8, [X0+224]
	053 Move X25, [X25+1648]
	054 Move X27, [X27+2096]
	055 Move X26, [X26+1664]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, [X25]
	060 Add X8, X31, 0
	061 Or X25, X8, 15
	062 Move X8, X25
	063 Call AsyncTaskMethodBuilder`1<Object>.Create
	064 Move X2, [X27]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W8, TEMP
	068 Add X1, X31, 0
	069 Move X0, X25
	070 Move [X31+32], X24
	071 Move [X31+40], X23
	072 Move [X31+48], X22
	073 Move [X31+56], X21
	074 Move [X31+64], X19
	075 Move [X31+72], X20
	076 Move [X31], W8
	077 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	078 Move X1, [X26]
	079 Move X0, X25
	080 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	081 Move X20, [X31+176]
	082 Move X19, [X31+184]
	083 Move X22, [X31+160]
	084 Move X21, [X31+168]
	085 Move X24, [X31+144]
	086 Move X23, [X31+152]
	087 Move X26, [X31+128]
	088 Move X25, [X31+136]
	089 Move X30, [X31+112]
	090 Move X27, [X31+120]
	091 Add X31, X31, 192
	092 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcAsync(Nakama.ISession session, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03444A14 LDP X30, X25, [X31 + 0x80]
	0x03444A18 ADD X31, X31, 0xC0
	0x03444A1C RET
	0x03444A20 SUB X31, X31, 0xC0
	0x03444A24 STP X30, X25, [X31 + 0x80]
	0x03444A28 STP X24, X23, [X31 + 0x90]
	0x03444A2C STP X22, X21, [X31 + 0xA0]
	0x03444A30 STP X20, X19, [X31 + 0xB0]
	0x03444A34 ADRP X25, 0xF99000
	0x03444A38 ADRP X24, 0xCB2000
	0x03444A3C LDRB W8, [X25 + 0x6F4]
	0x03444A40 LDR X24, [X24 + 0x280]
	0x03444A44 MOV X20, X4
	0x03444A48 MOV X21, X3
	0x03444A4C MOV X22, X2
	0x03444A50 MOV X23, X1
	0x03444A54 MOV X19, X0
	0x03444A58 TBNZ X8, 0x0, 0x3444A7C
	0x03444A5C ADRP X0, 0xCEB000
	0x03444A60 LDR X0, [X0 + 0x8C8]
	0x03444A64 BL 0x1C16CF4
	0x03444A68 ADRP X0, 0xCB2000
	0x03444A6C LDR X0, [X0 + 0x280]
	0x03444A70 BL 0x1C16CF4
	0x03444A74 MOVZ W8, 0x1
	0x03444A78 STRB W8, [X25 + 0x6F4]
	0x03444A7C LDR X0, [X24]
	0x03444A80 MOVI V0.2D, 0x0
	0x03444A84 STP V0, V0, [X31 + 0x60]
	0x03444A88 STP V0, V0, [X31 + 0x40]
	0x03444A8C STP V0, V0, [X31 + 0x20]
	0x03444A90 ADRP X24, 0xCEB000
	0x03444A94 LDR W8, [X0 + 0xE0]
	0x03444A98 LDR X24, [X24 + 0x8C8]
	0x03444A9C CBNZ W8, 0x3444AA4
	0x03444AA0 BL 0x1C16DFC
	0x03444AA4 ADD X8, X31, 0x8
	0x03444AA8 MOV X0, X31
	0x03444AAC BL 0x32C4770
	0x03444AB0 LDUR V0, [X31 + 0x8]
	0x03444AB4 LDR X9, [X31 + 0x18]
	0x03444AB8 LDR X2, [X24]
	0x03444ABC ADD X8, X31, 0x20
	0x03444AC0 STP X20, X21, [X31 + 0x58]
	0x03444AC4 ORR X20, X8, 0xF
	0x03444AC8 MOVN W10, 0x0
	0x03444ACC ADD X1, X31, 0x20
	0x03444AD0 MOV X0, X20
	0x03444AD4 STP X23, X22, [X31 + 0x48]
	0x03444AD8 STUR V0, [X31 + 0x28]
	0x03444ADC STP X9, X19, [X31 + 0x38]
	0x03444AE0 STR W10, [X31 + 0x20]
	0x03444AE4 BL 0x21935B8
	0x03444AE8 MOV X0, X20
	0x03444AEC MOV X1, X31
	0x03444AF0 BL 0x32C47F8
	0x03444AF4 LDP X20, X19, [X31 + 0xB0]
	0x03444AF8 LDP X22, X21, [X31 + 0xA0]
	0x03444AFC LDP X24, X23, [X31 + 0x90]
	0x03444B00 LDP X30, X25, [X31 + 0x80]
	0x03444B04 ADD X31, X31, 0xC0
	0x03444B08 RET
	0x03444B0C SUB X31, X31, 0x110
	0x03444B10 STP X29, X30, [X31 + 0xB0]
	0x03444B14 STP X28, X27, [X31 + 0xC0]
	0x03444B18 STP X26, X25, [X31 + 0xD0]
	0x03444B1C STP X24, X23, [X31 + 0xE0]
	0x03444B20 STP X22, X21, [X31 + 0xF0]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X25, 0xF9A000
	012 Move X24, 0xCEB000
	013 Move W8, [X25+1766]
	014 Move X24, [X24+1640]
	015 Move X19, X4
	016 Move X21, X3
	017 Move X20, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xCEB000
	025 Move X0, [X0+1648]
	026 Call 0x1C17CF4
	027 Move X0, 0xCEC000
	028 Move X0, [X0+2104]
	029 Call 0x1C17CF4
	030 Move X0, 0xCEB000
	031 Move X0, [X0+1664]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEB000
	034 Move X0, [X0+1640]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1766], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move [X31], V0
	045 Move [X31+8], V0
	046 Move X24, 0xCEB000
	047 Move X26, 0xCEC000
	048 Move X25, 0xCEB000
	049 Move W8, [X0+224]
	050 Move X24, [X24+1648]
	051 Move X26, [X26+2104]
	052 Move X25, [X25+1664]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Add X8, X31, 0
	058 Or X24, X8, 15
	059 Move X8, X24
	060 Call AsyncTaskMethodBuilder`1<Object>.Create
	061 Move X2, [X26]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Add X1, X31, 0
	066 Move X0, X24
	067 Move [X31+32], X23
	068 Move [X31+40], X22
	069 Move [X31+56], X19
	070 Move [X31+64], X21
	071 Move [X31+48], X20
	072 Move [X31], W8
	073 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	074 Move X1, [X25]
	075 Move X0, X24
	076 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X26, [X31+112]
	084 Move X25, [X31+120]
	085 Move X30, [X31+96]
	086 Add X31, X31, 176
	087 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcAsync(System.String httpkey, System.String id, System.String payload, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03444B24 STP X20, X19, [X31 + 0x100]
	0x03444B28 ADRP X27, 0xF99000
	0x03444B2C LDRB W8, [X27 + 0x6F5]
	0x03444B30 MOV X19, X7
	0x03444B34 MOV X21, X6
	0x03444B38 MOV X23, X5
	0x03444B3C MOV X24, X4
	0x03444B40 MOV X25, X3
	0x03444B44 MOV X22, X2
	0x03444B48 MOV X26, X1
	0x03444B4C MOV X20, X0
	0x03444B50 TBNZ X8, 0x0, 0x3444B74
	0x03444B54 ADRP X0, 0xCEB000
	0x03444B58 LDR X0, [X0 + 0x8D0]
	0x03444B5C BL 0x1C16CF4
	0x03444B60 ADRP X0, 0xCB2000
	0x03444B64 LDR X0, [X0 + 0x280]
	0x03444B68 BL 0x1C16CF4
	0x03444B6C MOVZ W8, 0x1
	0x03444B70 STRB W8, [X27 + 0x6F5]
	0x03444B74 LDP X28, X29, [X31 + 0x110]
	0x03444B78 ADD X0, X31, 0x28
	0x03444B7C MOVZ W2, 0x88
	0x03444B80 MOV W1, W31
	0x03444B84 ADD X27, X31, 0x28
	0x03444B88 BL 0x3EB1B10
	0x03444B8C ADRP X8, 0xCB2000
	0x03444B90 LDR X8, [X8 + 0x280]
	0x03444B94 LDR X0, [X8]
	0x03444B98 LDR W8, [X0 + 0xE0]
	0x03444B9C CBNZ W8, 0x3444BA4
	0x03444BA0 BL 0x1C16DFC
	0x03444BA4 ADD X8, X31, 0x10
	0x03444BA8 MOV X0, X31
	0x03444BAC BL 0x32C4770
	0x03444BB0 STP X26, X24, [X31 + 0x50]
	0x03444BB4 STP X25, X23, [X31 + 0x60]
	0x03444BB8 STP X21, X19, [X31 + 0x70]
	0x03444BBC STP X29, X28, [X31 + 0x88]
	0x03444BC0 STR X22, [X31 + 0x80]
	0x03444BC4 ADRP X10, 0xCEB000
	0x03444BC8 LDR V0, [X31 + 0x1]
	0x03444BCC LDR X8, [X31 + 0x20]
	0x03444BD0 LDR X10, [X10 + 0x8D0]
	0x03444BD4 ADD X27, X27, 0x8
	0x03444BD8 MOVN W9, 0x0
	0x03444BDC ADD X1, X31, 0x28
	0x03444BE0 LDR X2, [X10]
	0x03444BE4 MOV X0, X27
	0x03444BE8 STUR V0, [X31 + 0x30]
	0x03444BEC STP X8, X20, [X31 + 0x40]
	0x03444BF0 STR W9, [X31 + 0x28]
	0x03444BF4 BL 0x21936B8
	0x03444BF8 MOV X0, X27
	0x03444BFC MOV X1, X31
	0x03444C00 BL 0x32C47F8
	0x03444C04 LDP X20, X19, [X31 + 0x100]
	0x03444C08 LDP X22, X21, [X31 + 0xF0]
	0x03444C0C LDP X24, X23, [X31 + 0xE0]
	0x03444C10 LDP X26, X25, [X31 + 0xD0]
	0x03444C14 LDP X28, X27, [X31 + 0xC0]
	0x03444C18 LDP X29, X30, [X31 + 0xB0]
	0x03444C1C ADD X31, X31, 0x110
	0x03444C20 RET
	0x03444C24 SUB X31, X31, 0x110
	0x03444C28 STP X29, X30, [X31 + 0xB0]
	0x03444C2C STP X28, X27, [X31 + 0xC0]
	0x03444C30 STP X26, X25, [X31 + 0xD0]
	0x03444C34 STP X24, X23, [X31 + 0xE0]
	0x03444C38 STP X22, X21, [X31 + 0xF0]
	0x03444C3C STP X20, X19, [X31 + 0x100]
	0x03444C40 STR X7, [X31 + 0x8]
	0x03444C44 ADRP X27, 0xF99000
	0x03444C48 ADRP X19, 0xCB2000
	0x03444C4C LDRB W8, [X27 + 0x6F6]
	0x03444C50 LDR X19, [X19 + 0x280]
	0x03444C54 MOV X21, X6
	0x03444C58 MOV X22, X5
	0x03444C5C MOV W26, W4
	0x03444C60 MOV X23, X3
	0x03444C64 MOV X24, X2
	0x03444C68 MOV X25, X1
	0x03444C6C MOV X20, X0
	0x03444C70 TBNZ X8, 0x0, 0x3444C94
	0x03444C74 ADRP X0, 0xCEB000
	0x03444C78 LDR X0, [X0 + 0x8D8]
	0x03444C7C BL 0x1C16CF4
	0x03444C80 ADRP X0, 0xCB2000
	0x03444C84 LDR X0, [X0 + 0x280]
	0x03444C88 BL 0x1C16CF4
	0x03444C8C MOVZ W8, 0x1
	0x03444C90 STRB W8, [X27 + 0x6F6]
	0x03444C94 LDP X29, X28, [X31 + 0x110]
	0x03444C98 ADD X0, X31, 0x28

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0xF9A000
	012 Move X26, 0xCEC000
	013 Move W8, [X25+1767]
	014 Move X26, [X26+2112]
	015 Move X21, X5
	016 Move X19, X4
	017 Move X22, X3
	018 Move X24, X2
	019 Move X23, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {45}
	025 Move X0, 0xCEC000
	026 Move X0, [X0+2120]
	027 Call 0x1C17CF4
	028 Move X0, 0xCEC000
	029 Move X0, [X0+1992]
	030 Call 0x1C17CF4
	031 Move X0, 0xCEC000
	032 Move X0, [X0+2000]
	033 Call 0x1C17CF4
	034 Move X0, 0xCEC000
	035 Move X0, [X0+2128]
	036 Call 0x1C17CF4
	037 Move X0, 0xCEC000
	038 Move X0, [X0+2136]
	039 Call 0x1C17CF4
	040 Move X0, 0xCEC000
	041 Move X0, [X0+2112]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X25+1767], W8
	045 Move X0, [X26]
	046 Call 0x1C17F10
	047 Move X1, X31
	048 Move X25, X0
	049 Call Object..ctor, X0
	050 Compare X25, 0
	051 JumpIfEqual {112}
	052 Move X8, 0xCEC000
	053 Move X8, [X8+2120]
	054 Move [X25+16], X20
	055 Move [X25+24], X24
	056 Move [X25+32], X22
	057 Move [X25+40], X23
	058 Move [X25+48], X21
	059 Move X0, [X8]
	060 Move X22, 0xCEC000
	061 Move X26, 0xCEC000
	062 Move X24, 0xCEC000
	063 Move X21, [X20+88]
	064 Move X22, [X22+2136]
	065 Move X26, [X26+1992]
	066 Move X24, [X24+2000]
	067 Call 0x1C17F10
	068 Move X2, [X22]
	069 Move X1, X25
	070 Move X3, X31
	071 Move X22, X0
	072 Call Func`1<Object>..ctor, X0, X1, X2
	073 Move X23, [X25+24]
	074 Compare X19, 0
	075 JumpIfNotEqual {77}
	076 Move X19, [X20+24]
	077 Move X1, [X25+48]
	078 Move X2, [X26]
	079 Add X0, X31, 0
	080 Move [X31], X31
	081 Move [X31+8], X31
	082 Call Nullable`1<CancellationToken>..ctor, X0, X1
	083 Move X0, [X24]
	084 Call 0x1C17F10
	085 Move X3, [X31]
	086 Move X4, [X31+8]
	087 Move X1, X23
	088 Move X2, X19
	089 Move X5, X31
	090 Move X20, X0
	091 Call RetryHistory..ctor, X0, X1, X2, X3
	092 Compare X21, 0
	093 JumpIfEqual {112}
	094 Move X8, 0xCEC000
	095 Move X8, [X8+2128]
	096 Move X0, X21
	097 Move X1, X22
	098 Move X2, X20
	099 Move X3, [X8]
	100 Call 0x2244230, X0, X1, X2
	101 Move X20, [X31+80]
	102 Move X19, [X31+88]
	103 Move X22, [X31+64]
	104 Move X21, [X31+72]
	105 Move X24, [X31+48]
	106 Move X23, [X31+56]
	107 Move X26, [X31+32]
	108 Move X25, [X31+40]
	109 Move X30, [X31+16]
	110 Add X31, X31, 96
	111 Return X0
	112 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcAsync(System.String httpkey, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03444CA4 ADD X27, X31, 0x28
	0x03444CA8 BL 0x3EB1B10
	0x03444CAC LDR X0, [X19]
	0x03444CB0 LDR W8, [X0 + 0xE0]
	0x03444CB4 CBNZ W8, 0x3444CBC
	0x03444CB8 BL 0x1C16DFC
	0x03444CBC ADD X8, X31, 0x10
	0x03444CC0 MOV X0, X31
	0x03444CC4 AND W19, W26, 0x1
	0x03444CC8 BL 0x32C4770
	0x03444CCC LDR X9, [X31 + 0x8]
	0x03444CD0 STP X25, X24, [X31 + 0x50]
	0x03444CD4 STR X23, [X31 + 0x60]
	0x03444CD8 STRB W19, [X31 + 0x68]
	0x03444CDC STP X21, X22, [X31 + 0x70]
	0x03444CE0 STP X28, X29, [X31 + 0x88]
	0x03444CE4 STR X9, [X31 + 0x80]
	0x03444CE8 ADRP X10, 0xCEB000
	0x03444CEC LDR V0, [X31 + 0x1]
	0x03444CF0 LDR X8, [X31 + 0x20]
	0x03444CF4 LDR X10, [X10 + 0x8D8]
	0x03444CF8 ADD X26, X27, 0x8
	0x03444CFC MOVN W9, 0x0
	0x03444D00 ADD X1, X31, 0x28
	0x03444D04 LDR X2, [X10]
	0x03444D08 MOV X0, X26
	0x03444D0C STUR V0, [X31 + 0x30]
	0x03444D10 STP X8, X20, [X31 + 0x40]
	0x03444D14 STR W9, [X31 + 0x28]
	0x03444D18 BL 0x21937B8
	0x03444D1C MOV X0, X26
	0x03444D20 MOV X1, X31
	0x03444D24 BL 0x32C47F8
	0x03444D28 LDP X20, X19, [X31 + 0x100]
	0x03444D2C LDP X22, X21, [X31 + 0xF0]
	0x03444D30 LDP X24, X23, [X31 + 0xE0]
	0x03444D34 LDP X26, X25, [X31 + 0xD0]
	0x03444D38 LDP X28, X27, [X31 + 0xC0]
	0x03444D3C LDP X29, X30, [X31 + 0xB0]
	0x03444D40 ADD X31, X31, 0x110
	0x03444D44 RET
	0x03444D48 SUB X31, X31, 0xC0
	0x03444D4C STP X30, X27, [X31 + 0x70]
	0x03444D50 STP X26, X25, [X31 + 0x80]
	0x03444D54 STP X24, X23, [X31 + 0x90]
	0x03444D58 STP X22, X21, [X31 + 0xA0]
	0x03444D5C STP X20, X19, [X31 + 0xB0]
	0x03444D60 ADRP X26, 0xF99000
	0x03444D64 ADRP X25, 0xCEA000
	0x03444D68 LDRB W8, [X26 + 0x6F7]
	0x03444D6C LDR X25, [X25 + 0x530]
	0x03444D70 MOV X19, X5
	0x03444D74 MOV X20, X4
	0x03444D78 MOV W24, W3
	0x03444D7C MOV X21, X2
	0x03444D80 MOV X22, X1
	0x03444D84 MOV X23, X0
	0x03444D88 TBNZ X8, 0x0, 0x3444DC4
	0x03444D8C ADRP X0, 0xCEA000
	0x03444D90 LDR X0, [X0 + 0x538]
	0x03444D94 BL 0x1C16CF4
	0x03444D98 ADRP X0, 0xCEB000
	0x03444D9C LDR X0, [X0 + 0x8E0]
	0x03444DA0 BL 0x1C16CF4
	0x03444DA4 ADRP X0, 0xCEA000
	0x03444DA8 LDR X0, [X0 + 0x548]
	0x03444DAC BL 0x1C16CF4
	0x03444DB0 ADRP X0, 0xCEA000
	0x03444DB4 LDR X0, [X0 + 0x530]
	0x03444DB8 BL 0x1C16CF4
	0x03444DBC MOVZ W8, 0x1
	0x03444DC0 STRB W8, [X26 + 0x6F7]
	0x03444DC4 LDR X0, [X25]
	0x03444DC8 MOVI V0.2D, 0x0
	0x03444DCC STR X31, [X31 + 0x60]
	0x03444DD0 STP V0, V0, [X31 + 0x40]
	0x03444DD4 STP V0, V0, [X31 + 0x20]
	0x03444DD8 STP V0, V0, [X31]
	0x03444DDC ADRP X27, 0xCEA000
	0x03444DE0 ADRP X26, 0xCEB000
	0x03444DE4 ADRP X25, 0xCEA000
	0x03444DE8 LDR W8, [X0 + 0xE0]
	0x03444DEC LDR X27, [X27 + 0x538]
	0x03444DF0 LDR X26, [X26 + 0x8E0]
	0x03444DF4 LDR X25, [X25 + 0x548]
	0x03444DF8 CBNZ W8, 0x3444E00
	0x03444DFC BL 0x1C16DFC
	0x03444E00 LDR X0, [X27]
	0x03444E04 ADD X8, X31, 0x0
	0x03444E08 AND W27, W24, 0x1
	0x03444E0C ORR X24, X8, 0xF
	0x03444E10 MOV X8, X24

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X24, 0xF9A000
	012 Move X25, 0xCEC000
	013 Move W8, [X24+1768]
	014 Move X25, [X25+2144]
	015 Move X21, X4
	016 Move X19, X3
	017 Move X23, X2
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0xCEC000
	025 Move X0, [X0+2120]
	026 Call 0x1C17CF4
	027 Move X0, 0xCEC000
	028 Move X0, [X0+1992]
	029 Call 0x1C17CF4
	030 Move X0, 0xCEC000
	031 Move X0, [X0+2000]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEC000
	034 Move X0, [X0+2128]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEC000
	037 Move X0, [X0+2152]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEC000
	040 Move X0, [X0+2144]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+1768], W8
	044 Move X0, [X25]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X24, X0
	048 Call Object..ctor, X0
	049 Compare X24, 0
	050 JumpIfEqual {110}
	051 Move X8, 0xCEC000
	052 Move X8, [X8+2120]
	053 Move [X24+16], X20
	054 Move [X24+24], X23
	055 Move [X24+32], X22
	056 Move [X24+40], X21
	057 Move X22, 0xCEC000
	058 Move X0, [X8]
	059 Move X26, 0xCEC000
	060 Move X25, 0xCEC000
	061 Move X21, [X20+88]
	062 Move X22, [X22+2152]
	063 Move X26, [X26+1992]
	064 Move X25, [X25+2000]
	065 Call 0x1C17F10
	066 Move X2, [X22]
	067 Move X1, X24
	068 Move X3, X31
	069 Move X22, X0
	070 Call Func`1<Object>..ctor, X0, X1, X2
	071 Move X23, [X24+24]
	072 Compare X19, 0
	073 JumpIfNotEqual {75}
	074 Move X19, [X20+24]
	075 Move X1, [X24+40]
	076 Move X2, [X26]
	077 Add X0, X31, 0
	078 Move [X31], X31
	079 Move [X31+8], X31
	080 Call Nullable`1<CancellationToken>..ctor, X0, X1
	081 Move X0, [X25]
	082 Call 0x1C17F10
	083 Move X3, [X31]
	084 Move X4, [X31+8]
	085 Move X1, X23
	086 Move X2, X19
	087 Move X5, X31
	088 Move X20, X0
	089 Call RetryHistory..ctor, X0, X1, X2, X3
	090 Compare X21, 0
	091 JumpIfEqual {110}
	092 Move X8, 0xCEC000
	093 Move X8, [X8+2128]
	094 Move X0, X21
	095 Move X1, X22
	096 Move X2, X20
	097 Move X3, [X8]
	098 Call 0x2244230, X0, X1, X2
	099 Move X20, [X31+80]
	100 Move X19, [X31+88]
	101 Move X22, [X31+64]
	102 Move X21, [X31+72]
	103 Move X24, [X31+48]
	104 Move X23, [X31+56]
	105 Move X26, [X31+32]
	106 Move X25, [X31+40]
	107 Move X30, [X31+16]
	108 Add X31, X31, 96
	109 Return X0
	110 Call 0x1C17F20

Method: System.Threading.Tasks.Task SessionLogoutAsync(Nakama.ISession session, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03444E1C MOVN W8, 0x0
	0x03444E20 ADD X1, X31, 0x0
	0x03444E24 MOV X0, X24
	0x03444E28 STP X23, X22, [X31 + 0x20]
	0x03444E2C STR X21, [X31 + 0x30]
	0x03444E30 STRB W27, [X31 + 0x38]
	0x03444E34 STP X19, X20, [X31 + 0x40]
	0x03444E38 STR W8, [X31]
	0x03444E3C BL 0x1FCE314
	0x03444E40 LDR X1, [X25]
	0x03444E44 MOV X0, X24
	0x03444E48 BL 0x2632230
	0x03444E4C LDP X20, X19, [X31 + 0xB0]
	0x03444E50 LDP X22, X21, [X31 + 0xA0]
	0x03444E54 LDP X24, X23, [X31 + 0x90]
	0x03444E58 LDP X26, X25, [X31 + 0x80]
	0x03444E5C LDP X30, X27, [X31 + 0x70]
	0x03444E60 ADD X31, X31, 0xC0
	0x03444E64 RET
	0x03444E68 SUB X31, X31, 0xC0
	0x03444E6C STP X30, X27, [X31 + 0x70]
	0x03444E70 STP X26, X25, [X31 + 0x80]
	0x03444E74 STP X24, X23, [X31 + 0x90]
	0x03444E78 STP X22, X21, [X31 + 0xA0]
	0x03444E7C STP X20, X19, [X31 + 0xB0]
	0x03444E80 ADRP X26, 0xF99000
	0x03444E84 ADRP X25, 0xCEA000
	0x03444E88 LDRB W8, [X26 + 0x6F8]
	0x03444E8C LDR X25, [X25 + 0x530]
	0x03444E90 MOV X19, X5
	0x03444E94 MOV X20, X4
	0x03444E98 MOV W24, W3
	0x03444E9C MOV X21, X2
	0x03444EA0 MOV X22, X1
	0x03444EA4 MOV X23, X0
	0x03444EA8 TBNZ X8, 0x0, 0x3444EE4
	0x03444EAC ADRP X0, 0xCEA000
	0x03444EB0 LDR X0, [X0 + 0x538]
	0x03444EB4 BL 0x1C16CF4
	0x03444EB8 ADRP X0, 0xCEB000
	0x03444EBC LDR X0, [X0 + 0x8E8]
	0x03444EC0 BL 0x1C16CF4
	0x03444EC4 ADRP X0, 0xCEA000
	0x03444EC8 LDR X0, [X0 + 0x548]
	0x03444ECC BL 0x1C16CF4
	0x03444ED0 ADRP X0, 0xCEA000
	0x03444ED4 LDR X0, [X0 + 0x530]
	0x03444ED8 BL 0x1C16CF4
	0x03444EDC MOVZ W8, 0x1
	0x03444EE0 STRB W8, [X26 + 0x6F8]
	0x03444EE4 LDR X0, [X25]
	0x03444EE8 MOVI V0.2D, 0x0
	0x03444EEC STR X31, [X31 + 0x60]
	0x03444EF0 STP V0, V0, [X31 + 0x40]
	0x03444EF4 STP V0, V0, [X31 + 0x20]
	0x03444EF8 STP V0, V0, [X31]
	0x03444EFC ADRP X27, 0xCEA000
	0x03444F00 ADRP X26, 0xCEB000
	0x03444F04 ADRP X25, 0xCEA000
	0x03444F08 LDR W8, [X0 + 0xE0]
	0x03444F0C LDR X27, [X27 + 0x538]
	0x03444F10 LDR X26, [X26 + 0x8E8]
	0x03444F14 LDR X25, [X25 + 0x548]
	0x03444F18 CBNZ W8, 0x3444F20
	0x03444F1C BL 0x1C16DFC
	0x03444F20 LDR X0, [X27]
	0x03444F24 ADD X8, X31, 0x0
	0x03444F28 AND W27, W24, 0x1
	0x03444F2C ORR X24, X8, 0xF
	0x03444F30 MOV X8, X24
	0x03444F34 BL 0x263221C
	0x03444F38 LDR X2, [X26]
	0x03444F3C MOVN W8, 0x0
	0x03444F40 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF9A000
	008 Move W8, [X23+1769]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xCB1000
	018 Move X0, [X0+2072]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1769], W8
	022 Compare X22, 0
	023 JumpIfEqual {81}
	024 Move X23, 0xCB1000
	025 Move X8, [X22]
	026 Move X23, [X23+2072]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X23]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move X0, X22
	038 Move W2, W31
	039 Call 0x1C5D788
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 Add X8, X8, X9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X22
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X22]
	048 Move X1, [X23]
	049 Move X23, X0
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 7
	060 Move X0, X22
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 7
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X0, X22
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X2, X0
	071 Move X0, X21
	072 Move X3, X20
	073 Move X4, X19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X1, X23
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task SessionLogoutAsync(System.String authToken, System.String refreshToken, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03444F44 MOV X0, X24
	0x03444F48 STP X23, X22, [X31 + 0x20]
	0x03444F4C STR X21, [X31 + 0x30]
	0x03444F50 STRB W27, [X31 + 0x38]
	0x03444F54 STP X19, X20, [X31 + 0x40]
	0x03444F58 STR W8, [X31]
	0x03444F5C BL 0x1FCE414
	0x03444F60 LDR X1, [X25]
	0x03444F64 MOV X0, X24
	0x03444F68 BL 0x2632230
	0x03444F6C LDP X20, X19, [X31 + 0xB0]
	0x03444F70 LDP X22, X21, [X31 + 0xA0]
	0x03444F74 LDP X24, X23, [X31 + 0x90]
	0x03444F78 LDP X26, X25, [X31 + 0x80]
	0x03444F7C LDP X30, X27, [X31 + 0x70]
	0x03444F80 ADD X31, X31, 0xC0
	0x03444F84 RET
	0x03444F88 SUB X31, X31, 0xC0
	0x03444F8C STP X30, X27, [X31 + 0x70]
	0x03444F90 STP X26, X25, [X31 + 0x80]
	0x03444F94 STP X24, X23, [X31 + 0x90]
	0x03444F98 STP X22, X21, [X31 + 0xA0]
	0x03444F9C STP X20, X19, [X31 + 0xB0]
	0x03444FA0 ADRP X26, 0xF99000
	0x03444FA4 ADRP X25, 0xCEA000
	0x03444FA8 LDRB W8, [X26 + 0x6F9]
	0x03444FAC LDR X25, [X25 + 0x530]
	0x03444FB0 MOV X19, X5
	0x03444FB4 MOV X20, X4
	0x03444FB8 MOV W24, W3
	0x03444FBC MOV X21, X2
	0x03444FC0 MOV X22, X1
	0x03444FC4 MOV X23, X0
	0x03444FC8 TBNZ X8, 0x0, 0x3445004
	0x03444FCC ADRP X0, 0xCEA000
	0x03444FD0 LDR X0, [X0 + 0x538]
	0x03444FD4 BL 0x1C16CF4
	0x03444FD8 ADRP X0, 0xCEB000
	0x03444FDC LDR X0, [X0 + 0x8F0]
	0x03444FE0 BL 0x1C16CF4
	0x03444FE4 ADRP X0, 0xCEA000
	0x03444FE8 LDR X0, [X0 + 0x548]
	0x03444FEC BL 0x1C16CF4
	0x03444FF0 ADRP X0, 0xCEA000
	0x03444FF4 LDR X0, [X0 + 0x530]
	0x03444FF8 BL 0x1C16CF4
	0x03444FFC MOVZ W8, 0x1
	0x03445000 STRB W8, [X26 + 0x6F9]
	0x03445004 LDR X0, [X25]
	0x03445008 MOVI V0.2D, 0x0
	0x0344500C STR X31, [X31 + 0x60]
	0x03445010 STP V0, V0, [X31 + 0x40]
	0x03445014 STP V0, V0, [X31 + 0x20]
	0x03445018 STP V0, V0, [X31]
	0x0344501C ADRP X27, 0xCE9000
	0x03445020 ADRP X26, 0xCEA000
	0x03445024 ADRP X25, 0xCE9000
	0x03445028 LDR W8, [X0 + 0xE0]
	0x0344502C LDR X27, [X27 + 0x538]
	0x03445030 LDR X26, [X26 + 0x8F0]
	0x03445034 LDR X25, [X25 + 0x548]
	0x03445038 CBNZ W8, 0x3445040
	0x0344503C BL 0x1C16DFC
	0x03445040 LDR X0, [X27]
	0x03445044 ADD X8, X31, 0x0
	0x03445048 AND W27, W24, 0x1
	0x0344504C ORR X24, X8, 0xF
	0x03445050 MOV X8, X24
	0x03445054 BL 0x263221C
	0x03445058 LDR X2, [X26]
	0x0344505C MOVN W8, 0x0
	0x03445060 ADD X1, X31, 0x0
	0x03445064 MOV X0, X24
	0x03445068 STP X23, X22, [X31 + 0x20]
	0x0344506C STR X21, [X31 + 0x30]
	0x03445070 STRB W27, [X31 + 0x38]
	0x03445074 STP X19, X20, [X31 + 0x40]
	0x03445078 STR W8, [X31]
	0x0344507C BL 0x1FCE514
	0x03445080 LDR X1, [X25]
	0x03445084 MOV X0, X24
	0x03445088 BL 0x2632230
	0x0344508C LDP X20, X19, [X31 + 0xB0]
	0x03445090 LDP X22, X21, [X31 + 0xA0]
	0x03445094 LDP X24, X23, [X31 + 0x90]
	0x03445098 LDP X26, X25, [X31 + 0x80]
	0x0344509C LDP X30, X27, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X24, 0xF9A000
	012 Move X25, 0xCEC000
	013 Move W8, [X24+1770]
	014 Move X25, [X25+2160]
	015 Move X21, X4
	016 Move X19, X3
	017 Move X22, X2
	018 Move X23, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0xCB8000
	025 Move X0, [X0+2072]
	026 Call 0x1C17CF4
	027 Move X0, 0xCEC000
	028 Move X0, [X0+1992]
	029 Call 0x1C17CF4
	030 Move X0, 0xCEC000
	031 Move X0, [X0+2000]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEC000
	034 Move X0, [X0+2168]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEC000
	037 Move X0, [X0+2160]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+1770], W8
	041 Move X0, [X25]
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X24, X0
	045 Call Object..ctor, X0
	046 Compare X24, 0
	047 JumpIfEqual {105}
	048 Move X8, 0xCB8000
	049 Move X8, [X8+2072]
	050 Move [X24+16], X20
	051 Move [X24+24], X23
	052 Move [X24+32], X22
	053 Move [X24+40], X21
	054 Move X22, 0xCEC000
	055 Move X0, [X8]
	056 Move X26, 0xCEC000
	057 Move X25, 0xCEC000
	058 Move X21, [X20+88]
	059 Move X22, [X22+2168]
	060 Move X26, [X26+1992]
	061 Move X25, [X25+2000]
	062 Call 0x1C17F10
	063 Move X2, [X22]
	064 Move X1, X24
	065 Move X3, X31
	066 Move X22, X0
	067 Call Func`1<Object>..ctor, X0, X1, X2
	068 Move X23, [X24+24]
	069 Compare X19, 0
	070 JumpIfNotEqual {72}
	071 Move X19, [X20+24]
	072 Move X1, [X24+40]
	073 Move X2, [X26]
	074 Add X0, X31, 0
	075 Move [X31], X31
	076 Move [X31+8], X31
	077 Call Nullable`1<CancellationToken>..ctor, X0, X1
	078 Move X0, [X25]
	079 Call 0x1C17F10
	080 Move X3, [X31]
	081 Move X4, [X31+8]
	082 Move X1, X23
	083 Move X2, X19
	084 Move X5, X31
	085 Move X20, X0
	086 Call RetryHistory..ctor, X0, X1, X2, X3
	087 Compare X21, 0
	088 JumpIfEqual {105}
	089 Move X0, X21
	090 Move X1, X22
	091 Move X2, X20
	092 Move X3, X31
	093 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	094 Move X20, [X31+80]
	095 Move X19, [X31+88]
	096 Move X22, [X31+64]
	097 Move X21, [X31+72]
	098 Move X24, [X31+48]
	099 Move X23, [X31+56]
	100 Move X26, [X31+32]
	101 Move X25, [X31+40]
	102 Move X30, [X31+16]
	103 Add X31, X31, 96
	104 Return X0
	105 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.ISession> SessionRefreshAsync(Nakama.ISession session, System.Collections.Generic.Dictionary`2<System.String, System.String> vars = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034450A8 SUB X31, X31, 0xD0
	0x034450AC STR X30, [X31 + 0x70]
	0x034450B0 STP X28, X27, [X31 + 0x80]
	0x034450B4 STP X26, X25, [X31 + 0x90]
	0x034450B8 STP X24, X23, [X31 + 0xA0]
	0x034450BC STP X22, X21, [X31 + 0xB0]
	0x034450C0 STP X20, X19, [X31 + 0xC0]
	0x034450C4 ADRP X27, 0xF98000
	0x034450C8 ADRP X26, 0xCE9000
	0x034450CC LDRB W8, [X27 + 0x6FA]
	0x034450D0 LDR X26, [X26 + 0x530]
	0x034450D4 MOV X19, X6
	0x034450D8 MOV X20, X5
	0x034450DC MOV W25, W4
	0x034450E0 MOV X21, X3
	0x034450E4 MOV X22, X2
	0x034450E8 MOV X23, X1
	0x034450EC MOV X24, X0
	0x034450F0 TBNZ X8, 0x0, 0x344512C
	0x034450F4 ADRP X0, 0xCE9000
	0x034450F8 LDR X0, [X0 + 0x538]
	0x034450FC BL 0x1C16CF4
	0x03445100 ADRP X0, 0xCEA000
	0x03445104 LDR X0, [X0 + 0x8F8]
	0x03445108 BL 0x1C16CF4
	0x0344510C ADRP X0, 0xCE9000
	0x03445110 LDR X0, [X0 + 0x548]
	0x03445114 BL 0x1C16CF4
	0x03445118 ADRP X0, 0xCE9000
	0x0344511C LDR X0, [X0 + 0x530]
	0x03445120 BL 0x1C16CF4
	0x03445124 MOVZ W8, 0x1
	0x03445128 STRB W8, [X27 + 0x6FA]
	0x0344512C LDR X0, [X26]
	0x03445130 MOVI V0.2D, 0x0
	0x03445134 STP V0, V0, [X31 + 0x50]
	0x03445138 STP V0, V0, [X31 + 0x30]
	0x0344513C STP V0, V0, [X31 + 0x10]
	0x03445140 STR V0, [X31]
	0x03445144 ADRP X28, 0xCE9000
	0x03445148 ADRP X27, 0xCEA000
	0x0344514C ADRP X26, 0xCE9000
	0x03445150 LDR W8, [X0 + 0xE0]
	0x03445154 LDR X28, [X28 + 0x538]
	0x03445158 LDR X27, [X27 + 0x8F8]
	0x0344515C LDR X26, [X26 + 0x548]
	0x03445160 CBNZ W8, 0x3445168
	0x03445164 BL 0x1C16DFC
	0x03445168 LDR X0, [X28]
	0x0344516C ADD X8, X31, 0x0
	0x03445170 AND W28, W25, 0x1
	0x03445174 ORR X25, X8, 0xF
	0x03445178 MOV X8, X25
	0x0344517C BL 0x263221C
	0x03445180 LDR X2, [X27]
	0x03445184 MOVN W8, 0x0
	0x03445188 ADD X1, X31, 0x0
	0x0344518C MOV X0, X25
	0x03445190 STP X24, X23, [X31 + 0x20]
	0x03445194 STP X22, X21, [X31 + 0x30]
	0x03445198 STRB W28, [X31 + 0x40]
	0x0344519C STP X19, X20, [X31 + 0x48]
	0x034451A0 STR W8, [X31]
	0x034451A4 BL 0x1FCE614
	0x034451A8 LDR X1, [X26]
	0x034451AC MOV X0, X25
	0x034451B0 BL 0x2632230
	0x034451B4 LDP X20, X19, [X31 + 0xC0]
	0x034451B8 LDP X22, X21, [X31 + 0xB0]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X25, 0xF99000
	012 Move X24, 0xCEB000
	013 Move W8, [X25+1771]
	014 Move X24, [X24+1584]
	015 Move X19, X4
	016 Move X21, X3
	017 Move X20, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xCEB000
	025 Move X0, [X0+1592]
	026 Call 0x1C17CF4
	027 Move X0, 0xCEB000
	028 Move X0, [X0+2176]
	029 Call 0x1C17CF4
	030 Move X0, 0xCEB000
	031 Move X0, [X0+1608]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEB000
	034 Move X0, [X0+1584]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1771], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+80], X31
	041 Move [X31+48], V0
	042 Move [X31+56], V0
	043 Move [X31+16], V0
	044 Move [X31+24], V0
	045 Move [X31], V0
	046 Move X24, 0xCEB000
	047 Move X26, 0xCEB000
	048 Move X25, 0xCEB000
	049 Move W8, [X0+224]
	050 Move X24, [X24+1592]
	051 Move X26, [X26+2176]
	052 Move X25, [X25+1608]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Add X8, X31, 0
	058 Or X24, X8, 15
	059 Move X8, X24
	060 Call AsyncTaskMethodBuilder`1<Object>.Create
	061 Move X2, [X26]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Add X1, X31, 0
	066 Move X0, X24
	067 Move [X31+32], X23
	068 Move [X31+40], X22
	069 Move [X31+56], X19
	070 Move [X31+64], X21
	071 Move [X31+48], X20
	072 Move [X31], W8
	073 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	074 Move X1, [X25]
	075 Move X0, X24
	076 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X26, [X31+112]
	084 Move X25, [X31+120]
	085 Move X30, [X31+96]
	086 Add X31, X31, 176
	087 Return X0

Method: System.String ToString()

Disassembly:
	0x034451BC LDP X24, X23, [X31 + 0xA0]
	0x034451C0 LDP X26, X25, [X31 + 0x90]
	0x034451C4 LDP X28, X27, [X31 + 0x80]
	0x034451C8 LDR X30, [X31 + 0x70]
	0x034451CC ADD X31, X31, 0xD0
	0x034451D0 RET
	0x034451D4 SUB X31, X31, 0xC0
	0x034451D8 STP X30, X27, [X31 + 0x70]
	0x034451DC STP X26, X25, [X31 + 0x80]
	0x034451E0 STP X24, X23, [X31 + 0x90]
	0x034451E4 STP X22, X21, [X31 + 0xA0]
	0x034451E8 STP X20, X19, [X31 + 0xB0]
	0x034451EC ADRP X26, 0xF98000
	0x034451F0 ADRP X25, 0xCE9000
	0x034451F4 LDRB W8, [X26 + 0x6FB]
	0x034451F8 LDR X25, [X25 + 0x588]
	0x034451FC MOV X19, X5
	0x03445200 MOV X20, X4
	0x03445204 MOV W24, W3
	0x03445208 MOV X21, X2
	0x0344520C MOV X22, X1
	0x03445210 MOV X23, X0
	0x03445214 TBNZ X8, 0x0, 0x3445250
	0x03445218 ADRP X0, 0xCE9000
	0x0344521C LDR X0, [X0 + 0x590]
	0x03445220 BL 0x1C16CF4
	0x03445224 ADRP X0, 0xCEA000
	0x03445228 LDR X0, [X0 + 0x900]
	0x0344522C BL 0x1C16CF4
	0x03445230 ADRP X0, 0xCE9000
	0x03445234 LDR X0, [X0 + 0x5A0]
	0x03445238 BL 0x1C16CF4
	0x0344523C ADRP X0, 0xCE9000
	0x03445240 LDR X0, [X0 + 0x588]
	0x03445244 BL 0x1C16CF4
	0x03445248 MOVZ W8, 0x1
	0x0344524C STRB W8, [X26 + 0x6FB]
	0x03445250 LDR X0, [X25]
	0x03445254 MOVI V0.2D, 0x0
	0x03445258 STR X31, [X31 + 0x60]
	0x0344525C STP V0, V0, [X31 + 0x40]
	0x03445260 STP V0, V0, [X31 + 0x20]
	0x03445264 STP V0, V0, [X31]
	0x03445268 ADRP X27, 0xCE9000
	0x0344526C ADRP X26, 0xCEA000
	0x03445270 ADRP X25, 0xCE9000
	0x03445274 LDR W8, [X0 + 0xE0]
	0x03445278 LDR X27, [X27 + 0x590]
	0x0344527C LDR X26, [X26 + 0x900]
	0x03445280 LDR X25, [X25 + 0x5A0]
	0x03445284 CBNZ W8, 0x344528C
	0x03445288 BL 0x1C16DFC
	0x0344528C LDR X0, [X27]
	0x03445290 ADD X8, X31, 0x0
	0x03445294 AND W27, W24, 0x1
	0x03445298 ORR X24, X8, 0xF
	0x0344529C MOV X8, X24
	0x034452A0 BL 0x263221C
	0x034452A4 LDR X2, [X26]
	0x034452A8 MOVN W8, 0x0
	0x034452AC ADD X1, X31, 0x0
	0x034452B0 MOV X0, X24
	0x034452B4 STP X23, X22, [X31 + 0x20]
	0x034452B8 STR X21, [X31 + 0x30]
	0x034452BC STRB W27, [X31 + 0x38]
	0x034452C0 STP X19, X20, [X31 + 0x40]
	0x034452C4 STR W8, [X31]
	0x034452C8 BL 0x1FCE714
	0x034452CC LDR X1, [X25]
	0x034452D0 MOV X0, X24
	0x034452D4 BL 0x2632230
	0x034452D8 LDP X20, X19, [X31 + 0xB0]
	0x034452DC LDP X22, X21, [X31 + 0xA0]
	0x034452E0 LDP X24, X23, [X31 + 0x90]
	0x034452E4 LDP X26, X25, [X31 + 0x80]
	0x034452E8 LDP X30, X27, [X31 + 0x70]
	0x034452EC ADD X31, X31, 0xC0
	0x034452F0 RET
	0x034452F4 SUB X31, X31, 0xC0
	0x034452F8 STP X30, X27, [X31 + 0x70]
	0x034452FC STP X26, X25, [X31 + 0x80]
	0x03445300 STP X24, X23, [X31 + 0x90]
	0x03445304 STP X22, X21, [X31 + 0xA0]
	0x03445308 STP X20, X19, [X31 + 0xB0]
	0x0344530C ADRP X26, 0xF98000
	0x03445310 ADRP X25, 0xCE9000
	0x03445314 LDRB W8, [X26 + 0x6FC]
	0x03445318 LDR X25, [X25 + 0x588]
	0x0344531C MOV X19, X5
	0x03445320 MOV X20, X4
	0x03445324 MOV W24, W3
	0x03445328 MOV X21, X2
	0x0344532C MOV X22, X1
	0x03445330 MOV X23, X0
	0x03445334 TBNZ X8, 0x0, 0x3445370
	0x03445338 ADRP X0, 0xCE9000
	0x0344533C LDR X0, [X0 + 0x590]
	0x03445340 BL 0x1C16CF4
	0x03445344 ADRP X0, 0xCEA000
	0x03445348 LDR X0, [X0 + 0x908]
	0x0344534C BL 0x1C16CF4
	0x03445350 ADRP X0, 0xCE9000
	0x03445354 LDR X0, [X0 + 0x5A0]
	0x03445358 BL 0x1C16CF4
	0x0344535C ADRP X0, 0xCE9000
	0x03445360 LDR X0, [X0 + 0x588]
	0x03445364 BL 0x1C16CF4
	0x03445368 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xF99000
	007 Move X21, 0xCAF000
	008 Move W8, [X19+1772]
	009 Move X21, [X21+2512]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xCAF000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0xCAF000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0xCEB000
	022 Move X0, [X0+2184]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+1772], W8
	026 Move X0, [X21]
	027 Move W1, 5
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {124}
	031 Move X21, [X20+32]
	032 Move X19, X0
	033 Compare X21, 0
	034 JumpIfEqual {41}
	035 Move X8, [X19]
	036 Move X0, X21
	037 Move X1, [X8+64]
	038 Call 0x1C17E00
	039 Compare X0, 0
	040 JumpIfEqual {121}
	041 Move W8, [X19+24]
	042 Compare W8, 0
	043 JumpIfEqual {120}
	044 Move X22, 0xCAF000
	045 Move X22, [X22+1880]
	046 Move [X19+32], X21
	047 Move W8, [X20+40]
	048 Add X1, X31, 12
	049 Move X0, [X22]
	050 Move [X31+12], W8
	051 Call 0x1C17E04
	052 Move X21, X0
	053 Compare X0, 0
	054 JumpIfEqual {61}
	055 Move X8, [X19]
	056 Move X0, X21
	057 Move X1, [X8+64]
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {121}
	061 Move W8, [X19+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X19+40], X21
	064 Move X21, [X20+48]
	065 Compare X21, 0
	066 JumpIfEqual {74}
	067 Move X8, [X19]
	068 Move X0, X21
	069 Move X1, [X8+64]
	070 Call 0x1C17E00
	071 Compare X0, 0
	072 JumpIfEqual {121}
	073 Move W8, [X19+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X19+48], X21
	076 Move X21, [X20+56]
	077 Compare X21, 0
	078 JumpIfEqual {86}
	079 Move X8, [X19]
	080 Move X0, X21
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {121}
	085 Move W8, [X19+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X19+56], X21
	088 Move X8, [X20+72]
	089 Compare X8, 0
	090 JumpIfEqual {124}
	091 Move W8, [X8+24]
	092 Move X0, [X22]
	093 Add X1, X31, 8
	094 Move [X31+8], W8
	095 Call 0x1C17E04
	096 Move X20, X0
	097 Compare X0, 0
	098 JumpIfEqual {105}
	099 Move X8, [X19]
	100 Move X0, X20
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {121}
	105 Move W8, [X19+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, 0xCEB000
	108 Move X8, [X8+2184]
	109 Move [X19+64], X20
	110 Move X1, X19
	111 Move X2, X31
	112 Move X0, [X8]
	113 Call String.Format, X0, X1
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Return X0
	120 Call 0x1C17F28
	121 Call 0x1C17F44
	122 Move X1, X31
	123 Call 0x1C17DEC
	124 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnlinkAppleAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x0344536C STRB W8, [X26 + 0x6FC]
	0x03445370 LDR X0, [X25]
	0x03445374 MOVI V0.2D, 0x0
	0x03445378 STR X31, [X31 + 0x60]
	0x0344537C STP V0, V0, [X31 + 0x40]
	0x03445380 STP V0, V0, [X31 + 0x20]
	0x03445384 STP V0, V0, [X31]
	0x03445388 ADRP X27, 0xCE9000
	0x0344538C ADRP X26, 0xCEA000
	0x03445390 ADRP X25, 0xCE9000
	0x03445394 LDR W8, [X0 + 0xE0]
	0x03445398 LDR X27, [X27 + 0x590]
	0x0344539C LDR X26, [X26 + 0x908]
	0x034453A0 LDR X25, [X25 + 0x5A0]
	0x034453A4 CBNZ W8, 0x34453AC
	0x034453A8 BL 0x1C16DFC
	0x034453AC LDR X0, [X27]
	0x034453B0 ADD X8, X31, 0x0
	0x034453B4 AND W27, W24, 0x1
	0x034453B8 ORR X24, X8, 0xF
	0x034453BC MOV X8, X24
	0x034453C0 BL 0x263221C
	0x034453C4 LDR X2, [X26]
	0x034453C8 MOVN W8, 0x0
	0x034453CC ADD X1, X31, 0x0
	0x034453D0 MOV X0, X24
	0x034453D4 STP X23, X22, [X31 + 0x20]
	0x034453D8 STR X21, [X31 + 0x30]
	0x034453DC STRB W27, [X31 + 0x38]
	0x034453E0 STP X19, X20, [X31 + 0x40]
	0x034453E4 STR W8, [X31]
	0x034453E8 BL 0x1FCE814
	0x034453EC LDR X1, [X25]
	0x034453F0 MOV X0, X24
	0x034453F4 BL 0x2632230
	0x034453F8 LDP X20, X19, [X31 + 0xB0]
	0x034453FC LDP X22, X21, [X31 + 0xA0]
	0x03445400 LDP X24, X23, [X31 + 0x90]
	0x03445404 LDP X26, X25, [X31 + 0x80]
	0x03445408 LDP X30, X27, [X31 + 0x70]
	0x0344540C ADD X31, X31, 0xC0
	0x03445410 RET
	0x03445414 SUB X31, X31, 0xE0
	0x03445418 STP X29, X30, [X31 + 0x80]
	0x0344541C STP X28, X27, [X31 + 0x90]
	0x03445420 STP X26, X25, [X31 + 0xA0]
	0x03445424 STP X24, X23, [X31 + 0xB0]
	0x03445428 STP X22, X21, [X31 + 0xC0]
	0x0344542C STP X20, X19, [X31 + 0xD0]
	0x03445430 ADRP X28, 0xF98000
	0x03445434 ADRP X27, 0xCE9000
	0x03445438 LDRB W8, [X28 + 0x6FD]
	0x0344543C LDR X27, [X27 + 0x5F8]
	0x03445440 MOV X19, X7
	0x03445444 MOV W20, W6
	0x03445448 MOV X21, X5
	0x0344544C MOV X22, X4
	0x03445450 MOV X24, X3
	0x03445454 MOV X23, X2

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF99000
	011 Move X24, 0xCB2000
	012 Move W8, [X25+1773]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEB000
	024 Move X0, [X0+2192]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB2000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1773], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEB000
	040 Move W8, [X0+224]
	041 Move X24, [X24+2192]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task UnlinkCustomAsync(Nakama.ISession session, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445458 MOV X25, X1
	0x0344545C MOV X26, X0
	0x03445460 TBNZ X8, 0x0, 0x344549C
	0x03445464 ADRP X0, 0xCE9000
	0x03445468 LDR X0, [X0 + 0x600]
	0x0344546C BL 0x1C16CF4
	0x03445470 ADRP X0, 0xCEA000
	0x03445474 LDR X0, [X0 + 0x910]
	0x03445478 BL 0x1C16CF4
	0x0344547C ADRP X0, 0xCE9000
	0x03445480 LDR X0, [X0 + 0x610]
	0x03445484 BL 0x1C16CF4
	0x03445488 ADRP X0, 0xCE9000
	0x0344548C LDR X0, [X0 + 0x5F8]
	0x03445490 BL 0x1C16CF4
	0x03445494 MOVZ W8, 0x1
	0x03445498 STRB W8, [X28 + 0x6FD]
	0x0344549C LDR X0, [X27]
	0x034454A0 MOVI V0.2D, 0x0
	0x034454A4 STP V0, V0, [X31 + 0x60]
	0x034454A8 STP V0, V0, [X31 + 0x40]
	0x034454AC STP V0, V0, [X31 + 0x20]
	0x034454B0 STP V0, V0, [X31]
	0x034454B4 ADRP X27, 0xCE9000
	0x034454B8 ADRP X28, 0xCEA000
	0x034454BC LDR W8, [X0 + 0xE0]
	0x034454C0 LDR X29, [X31 + 0xE0]
	0x034454C4 LDR X27, [X27 + 0x600]
	0x034454C8 LDR X28, [X28 + 0x910]
	0x034454CC CBNZ W8, 0x34454D4
	0x034454D0 BL 0x1C16DFC
	0x034454D4 LDR X0, [X27]
	0x034454D8 ADD X8, X31, 0x0
	0x034454DC ORR X27, X8, 0xF
	0x034454E0 MOV X8, X27
	0x034454E4 BL 0x263221C
	0x034454E8 LDR X2, [X28]
	0x034454EC MOVN W8, 0x0
	0x034454F0 ADD X1, X31, 0x0
	0x034454F4 MOV X0, X27
	0x034454F8 STP X26, X25, [X31 + 0x20]
	0x034454FC STP X24, X22, [X31 + 0x40]
	0x03445500 STP X23, X21, [X31 + 0x30]
	0x03445504 STR W20, [X31 + 0x50]
	0x03445508 STP X29, X19, [X31 + 0x58]
	0x0344550C STR W8, [X31]
	0x03445510 BL 0x1FCE914
	0x03445514 ADRP X8, 0xCE9000
	0x03445518 LDR X8, [X8 + 0x610]
	0x0344551C MOV X0, X27
	0x03445520 LDR X1, [X8]
	0x03445524 BL 0x2632230
	0x03445528 LDP X20, X19, [X31 + 0xD0]
	0x0344552C LDP X22, X21, [X31 + 0xC0]
	0x03445530 LDP X24, X23, [X31 + 0xB0]
	0x03445534 LDP X26, X25, [X31 + 0xA0]
	0x03445538 LDP X28, X27, [X31 + 0x90]
	0x0344553C LDP X29, X30, [X31 + 0x80]
	0x03445540 ADD X31, X31, 0xE0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF99000
	011 Move X24, 0xCB2000
	012 Move W8, [X25+1774]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEB000
	024 Move X0, [X0+2200]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB2000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1774], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEB000
	040 Move W8, [X0+224]
	041 Move X24, [X24+2200]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task UnlinkDeviceAsync(Nakama.ISession session, System.String id, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445544 RET
	0x03445548 SUB X31, X31, 0xB0
	0x0344554C STR X30, [X31 + 0x60]
	0x03445550 STP X26, X25, [X31 + 0x70]
	0x03445554 STP X24, X23, [X31 + 0x80]
	0x03445558 STP X22, X21, [X31 + 0x90]
	0x0344555C STP X20, X19, [X31 + 0xA0]
	0x03445560 ADRP X25, 0xF98000
	0x03445564 ADRP X24, 0xCE9000
	0x03445568 LDRB W8, [X25 + 0x6FE]
	0x0344556C LDR X24, [X24 + 0x6B8]
	0x03445570 MOV X19, X4
	0x03445574 MOV X20, X3
	0x03445578 MOV X21, X2
	0x0344557C MOV X22, X1
	0x03445580 MOV X23, X0
	0x03445584 TBNZ X8, 0x0, 0x34455C0
	0x03445588 ADRP X0, 0xCE9000
	0x0344558C LDR X0, [X0 + 0x6C0]
	0x03445590 BL 0x1C16CF4
	0x03445594 ADRP X0, 0xCEA000
	0x03445598 LDR X0, [X0 + 0x918]
	0x0344559C BL 0x1C16CF4
	0x034455A0 ADRP X0, 0xCE9000
	0x034455A4 LDR X0, [X0 + 0x6D0]
	0x034455A8 BL 0x1C16CF4
	0x034455AC ADRP X0, 0xCE9000
	0x034455B0 LDR X0, [X0 + 0x6B8]
	0x034455B4 BL 0x1C16CF4
	0x034455B8 MOVZ W8, 0x1
	0x034455BC STRB W8, [X25 + 0x6FE]
	0x034455C0 LDR X0, [X24]
	0x034455C4 MOVI V0.2D, 0x0
	0x034455C8 STP V0, V0, [X31 + 0x40]
	0x034455CC STP V0, V0, [X31 + 0x20]
	0x034455D0 STP V0, V0, [X31]
	0x034455D4 ADRP X24, 0xCE9000
	0x034455D8 ADRP X26, 0xCEA000
	0x034455DC ADRP X25, 0xCE9000
	0x034455E0 LDR W8, [X0 + 0xE0]
	0x034455E4 LDR X24, [X24 + 0x6C0]
	0x034455E8 LDR X26, [X26 + 0x918]
	0x034455EC LDR X25, [X25 + 0x6D0]
	0x034455F0 CBNZ W8, 0x34455F8
	0x034455F4 BL 0x1C16DFC
	0x034455F8 LDR X0, [X24]
	0x034455FC ADD X8, X31, 0x0
	0x03445600 ORR X24, X8, 0xF
	0x03445604 MOV X8, X24
	0x03445608 BL 0x263221C
	0x0344560C LDR X2, [X26]
	0x03445610 MOVN W8, 0x0
	0x03445614 ADD X1, X31, 0x0
	0x03445618 MOV X0, X24
	0x0344561C STP X23, X22, [X31 + 0x20]
	0x03445620 STR X21, [X31 + 0x48]
	0x03445624 STP X19, X20, [X31 + 0x30]
	0x03445628 STR W8, [X31]
	0x0344562C BL 0x1FCEA14

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF99000
	011 Move X24, 0xCB2000
	012 Move W8, [X25+1775]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEB000
	024 Move X0, [X0+2208]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB2000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1775], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEB000
	040 Move W8, [X0+224]
	041 Move X24, [X24+2208]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task UnlinkEmailAsync(Nakama.ISession session, System.String email, System.String password, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445630 LDR X1, [X25]
	0x03445634 MOV X0, X24
	0x03445638 BL 0x2632230
	0x0344563C LDP X20, X19, [X31 + 0xA0]
	0x03445640 LDP X22, X21, [X31 + 0x90]
	0x03445644 LDP X24, X23, [X31 + 0x80]
	0x03445648 LDP X26, X25, [X31 + 0x70]
	0x0344564C LDR X30, [X31 + 0x60]
	0x03445650 ADD X31, X31, 0xB0
	0x03445654 RET
	0x03445658 SUB X31, X31, 0xE0
	0x0344565C STP X29, X30, [X31 + 0x80]
	0x03445660 STP X28, X27, [X31 + 0x90]
	0x03445664 STP X26, X25, [X31 + 0xA0]
	0x03445668 STP X24, X23, [X31 + 0xB0]
	0x0344566C STP X22, X21, [X31 + 0xC0]
	0x03445670 STP X20, X19, [X31 + 0xD0]
	0x03445674 ADRP X28, 0xF98000
	0x03445678 ADRP X27, 0xCE9000
	0x0344567C LDRB W8, [X28 + 0x6FF]
	0x03445680 LDR X27, [X27 + 0x5F8]
	0x03445684 MOV X19, X7
	0x03445688 MOV W20, W6
	0x0344568C MOV X21, X5
	0x03445690 MOV X22, X4
	0x03445694 MOV X24, X3
	0x03445698 MOV X23, X2
	0x0344569C MOV X25, X1
	0x034456A0 MOV X26, X0
	0x034456A4 TBNZ X8, 0x0, 0x34456E0
	0x034456A8 ADRP X0, 0xCE9000
	0x034456AC LDR X0, [X0 + 0x600]
	0x034456B0 BL 0x1C16CF4
	0x034456B4 ADRP X0, 0xCEA000
	0x034456B8 LDR X0, [X0 + 0x920]
	0x034456BC BL 0x1C16CF4
	0x034456C0 ADRP X0, 0xCE9000
	0x034456C4 LDR X0, [X0 + 0x610]
	0x034456C8 BL 0x1C16CF4
	0x034456CC ADRP X0, 0xCE9000
	0x034456D0 LDR X0, [X0 + 0x5F8]
	0x034456D4 BL 0x1C16CF4
	0x034456D8 MOVZ W8, 0x1
	0x034456DC STRB W8, [X28 + 0x6FF]
	0x034456E0 LDR X0, [X27]
	0x034456E4 MOVI V0.2D, 0x0
	0x034456E8 STP V0, V0, [X31 + 0x60]
	0x034456EC STP V0, V0, [X31 + 0x40]
	0x034456F0 STP V0, V0, [X31 + 0x20]
	0x034456F4 STP V0, V0, [X31]
	0x034456F8 ADRP X27, 0xCE9000
	0x034456FC ADRP X28, 0xCEA000
	0x03445700 LDR W8, [X0 + 0xE0]
	0x03445704 LDR X29, [X31 + 0xE0]
	0x03445708 LDR X27, [X27 + 0x600]
	0x0344570C LDR X28, [X28 + 0x920]
	0x03445710 CBNZ W8, 0x3445718
	0x03445714 BL 0x1C16DFC
	0x03445718 LDR X0, [X27]
	0x0344571C ADD X8, X31, 0x0
	0x03445720 ORR X27, X8, 0xF
	0x03445724 MOV X8, X27
	0x03445728 BL 0x263221C
	0x0344572C LDR X2, [X28]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X26, 0xF99000
	012 Move X25, 0xCB2000
	013 Move W8, [X26+1776]
	014 Move X25, [X25+640]
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0xCEB000
	026 Move X0, [X0+2216]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB2000
	029 Move X0, [X0+640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1776], W8
	033 Move X0, [X25]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], X31
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move X25, 0xCEB000
	043 Move W8, [X0+224]
	044 Move X25, [X25+2216]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X8, X31, 8
	049 Move X0, X31
	050 Call AsyncTaskMethodBuilder.Create
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X9, [X31+24]
	053 Move X2, [X25]
	054 Add X8, X31, 32
	055 Move [X31+96], X20
	056 Move [X31+104], X21
	057 Or X20, X8, 15
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W10, TEMP
	061 Add X1, X31, 32
	062 Move X0, X20
	063 Move [X31+72], X24
	064 Move [X31+80], X23
	065 Move [X31+88], X22
	066 Move [X31+40], V0
	067 Move [X31+56], X9
	068 Move [X31+64], X19
	069 Move [X31+32], W10
	070 Call AsyncTaskMethodBuilder.Start, X0, X1
	071 Move X0, X20
	072 Move X1, X31
	073 Call AsyncTaskMethodBuilder.get_Task, X0
	074 Move X20, [X31+208]
	075 Move X19, [X31+216]
	076 Move X22, [X31+192]
	077 Move X21, [X31+200]
	078 Move X24, [X31+176]
	079 Move X23, [X31+184]
	080 Move X26, [X31+160]
	081 Move X25, [X31+168]
	082 Move X30, [X31+144]
	083 Add X31, X31, 224
	084 Return X0

Method: System.Threading.Tasks.Task UnlinkFacebookAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445730 MOVN W8, 0x0
	0x03445734 ADD X1, X31, 0x0
	0x03445738 MOV X0, X27
	0x0344573C STP X26, X25, [X31 + 0x20]
	0x03445740 STP X24, X22, [X31 + 0x40]
	0x03445744 STP X23, X21, [X31 + 0x30]
	0x03445748 STR W20, [X31 + 0x50]
	0x0344574C STP X29, X19, [X31 + 0x58]
	0x03445750 STR W8, [X31]
	0x03445754 BL 0x1FCEB14
	0x03445758 ADRP X8, 0xCE9000
	0x0344575C LDR X8, [X8 + 0x610]
	0x03445760 MOV X0, X27
	0x03445764 LDR X1, [X8]
	0x03445768 BL 0x2632230
	0x0344576C LDP X20, X19, [X31 + 0xD0]
	0x03445770 LDP X22, X21, [X31 + 0xC0]
	0x03445774 LDP X24, X23, [X31 + 0xB0]
	0x03445778 LDP X26, X25, [X31 + 0xA0]
	0x0344577C LDP X28, X27, [X31 + 0x90]
	0x03445780 LDP X29, X30, [X31 + 0x80]
	0x03445784 ADD X31, X31, 0xE0
	0x03445788 RET
	0x0344578C STR X30, [X31 - 0x20]!
	0x03445790 STP X20, X19, [X31 + 0x10]
	0x03445794 ADRP X20, 0xF98000
	0x03445798 ADRP X19, 0xCB0000
	0x0344579C LDRB W8, [X20 + 0x700]
	0x034457A0 LDR X19, [X19 + 0x570]
	0x034457A4 TBNZ X8, 0x0, 0x34457C8
	0x034457A8 ADRP X0, 0xCB0000
	0x034457AC LDR X0, [X0 + 0xA10]
	0x034457B0 BL 0x1C16CF4
	0x034457B4 ADRP X0, 0xCB0000
	0x034457B8 LDR X0, [X0 + 0x570]
	0x034457BC BL 0x1C16CF4
	0x034457C0 MOVZ W8, 0x1
	0x034457C4 STRB W8, [X20 + 0x700]
	0x034457C8 LDR X0, [X19]
	0x034457CC ADRP X19, 0xCB0000
	0x034457D0 LDR W8, [X0 + 0xE0]
	0x034457D4 LDR X19, [X19 + 0xA10]
	0x034457D8 CBNZ W8, 0x34457E0
	0x034457DC BL 0x1C16DFC
	0x034457E0 FMOV D0, 4.000000000232831
	0x034457E4 MOV X0, X31
	0x034457E8 BL 0x3394644
	0x034457EC LDR X8, [X19]
	0x034457F0 LDP X20, X19, [X31 + 0x10]
	0x034457F4 LDR X8, [X8 + 0xB8]
	0x034457F8 STR X0, [X8]
	0x034457FC LDR X30, [X31], #0x20
	0x03445800 RET
	0x03445804 MOV X1, X31
	0x03445808 B 0x33BDD8C
	0x0344580C SUB X31, X31, 0x40
	0x03445810 STR X30, [X31 + 0x10]
	0x03445814 STP X22, X21, [X31 + 0x20]
	0x03445818 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF99000
	011 Move X24, 0xCB2000
	012 Move W8, [X25+1777]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEB000
	024 Move X0, [X0+2224]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB2000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1777], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEB000
	040 Move W8, [X0+224]
	041 Move X24, [X24+2224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task UnlinkGameCenterAsync(Nakama.ISession session, System.String bundleId, System.String playerId, System.String publicKeyUrl, System.String salt, System.String signature, System.String timestamp, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x0344581C ADRP X20, 0xF98000
	0x03445820 LDRB W8, [X20 + 0x701]
	0x03445824 MOV X19, X0
	0x03445828 TBNZ X8, 0x0, 0x3445858
	0x0344582C ADRP X0, 0xCEA000
	0x03445830 LDR X0, [X0 + 0x928]
	0x03445834 BL 0x1C16CF4
	0x03445838 ADRP X0, 0xCAF000
	0x0344583C LDR X0, [X0 + 0x818]
	0x03445840 BL 0x1C16CF4
	0x03445844 ADRP X0, 0xCEA000
	0x03445848 LDR X0, [X0 + 0x7C8]
	0x0344584C BL 0x1C16CF4
	0x03445850 MOVZ W8, 0x1
	0x03445854 STRB W8, [X20 + 0x701]
	0x03445858 LDR X9, [X19 + 0x10]
	0x0344585C CBZ X9, 0x3445948
	0x03445860 LDR X21, [X19 + 0x18]
	0x03445864 CBZ X21, 0x3445948
	0x03445868 ADRP X10, 0xCAF000
	0x0344586C LDR X8, [X21]
	0x03445870 LDR X10, [X10 + 0x818]
	0x03445874 ADRP X22, 0xCEA000
	0x03445878 LDR X20, [X9 + 0x48]
	0x0344587C LDRH W9, [X8 + 0x12E]
	0x03445880 LDR X1, [X10]
	0x03445884 LDR X22, [X22 + 0x928]
	0x03445888 CBZ X9, 0x34458AC
	0x0344588C LDR X10, [X8 + 0xB0]
	0x03445890 ADD X10, X10, 0x8
	0x03445894 LDUR X11, [X10 - 0x8]
	0x03445898 CMP X11, X1
	0x0344589C B.EQ 0x34458BC
	0x034458A0 SUBS X9, X9, 0x1
	0x034458A4 ADD X10, X10, 0x10
	0x034458A8 B.NE 0x3445894
	0x034458AC MOV X0, X21
	0x034458B0 MOV W2, W31
	0x034458B4 BL 0x1C5C788
	0x034458B8 B 0x34458C8
	0x034458BC LDRSW X9, [X10]
	0x034458C0 ADD X8, X8, X9, 0x4, LSL
	0x034458C4 ADD X0, X8, 0x138
	0x034458C8 LDP X8, X1, [X0]
	0x034458CC MOV X0, X21
	0x034458D0 BLR X8
	0x034458D4 LDR X8, [X22]
	0x034458D8 MOV X21, X0
	0x034458DC MOV X0, X8
	0x034458E0 BL 0x1C16F10
	0x034458E4 MOV X1, X31
	0x034458E8 MOV X22, X0
	0x034458EC BL 0x3408298
	0x034458F0 CBZ X22, 0x3445948
	0x034458F4 LDR X8, [X19 + 0x20]
	0x034458F8 ADRP X9, 0xCEA000
	0x034458FC LDR X9, [X9 + 0x7C8]
	0x03445900 ADD X0, X31, 0x0
	0x03445904 STR X8, [X22 + 0x10]
	0x03445908 LDR X1, [X19 + 0x28]
	0x0344590C LDR X2, [X9]
	0x03445910 STP X31, X31, [X31]
	0x03445914 BL 0x242E368
	0x03445918 CBZ X20, 0x3445948
	0x0344591C LDP X3, X4, [X31]
	0x03445920 MOV X0, X20
	0x03445924 MOV X1, X21
	0x03445928 MOV X2, X22
	0x0344592C MOV X5, X31
	0x03445930 BL 0x34123A8

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X27, 0xF99000
	015 Move W8, [X27+1778]
	016 Move X19, X7
	017 Move X21, X6
	018 Move X22, X5
	019 Move X23, X4
	020 Move X24, X3
	021 Move X25, X2
	022 Move X26, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0xCEB000
	029 Move X0, [X0+2232]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB2000
	032 Move X0, [X0+640]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X27+1778], W8
	036 Move X28, [X31+272]
	037 Move X29, [X31+280]
	038 Add X0, X31, 40
	039 Move W2, 136
	040 Move W1, W31
	041 Add X27, X31, 40
	042 Call 0x3EB2B10
	043 Move X8, 0xCB2000
	044 Move X8, [X8+640]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 16
	051 Move X0, X31
	052 Call AsyncTaskMethodBuilder.Create
	053 Move [X31+80], X26
	054 Move [X31+88], X25
	055 Move [X31+96], X24
	056 Move [X31+104], X23
	057 Move [X31+112], X22
	058 Move [X31+120], X21
	059 Move [X31+136], X29
	060 Move [X31+144], X28
	061 Move [X31+128], X19
	062 Move X10, 0xCEB000
	063 Move V0, [X31+1]
	064 Move X8, [X31+32]
	065 Move X10, [X10+2232]
	066 Add X27, X27, 8
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W9, TEMP
	070 Add X1, X31, 40
	071 Move X2, [X10]
	072 Move X0, X27
	073 Move [X31+48], V0
	074 Move [X31+64], X8
	075 Move [X31+72], X20
	076 Move [X31+40], W9
	077 Call AsyncTaskMethodBuilder.Start, X0, X1
	078 Move X0, X27
	079 Move X1, X31
	080 Call AsyncTaskMethodBuilder.get_Task, X0
	081 Move X20, [X31+256]
	082 Move X19, [X31+264]
	083 Move X22, [X31+240]
	084 Move X21, [X31+248]
	085 Move X24, [X31+224]
	086 Move X23, [X31+232]
	087 Move X26, [X31+208]
	088 Move X25, [X31+216]
	089 Move X28, [X31+192]
	090 Move X27, [X31+200]
	091 Move X29, [X31+176]
	092 Move X30, [X31+184]
	093 Add X31, X31, 272
	094 Return X0

Method: System.Threading.Tasks.Task UnlinkGoogleAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445934 LDP X20, X19, [X31 + 0x30]
	0x03445938 LDP X22, X21, [X31 + 0x20]
	0x0344593C LDR X30, [X31 + 0x10]
	0x03445940 ADD X31, X31, 0x40
	0x03445944 RET
	0x03445948 BL 0x1C16F20
	0x0344594C MOV X1, X31
	0x03445950 B 0x33BDD8C
	0x03445954 SUB X31, X31, 0x70
	0x03445958 STR X30, [X31 + 0x30]
	0x0344595C STP X24, X23, [X31 + 0x40]
	0x03445960 STP X22, X21, [X31 + 0x50]
	0x03445964 STP X20, X19, [X31 + 0x60]
	0x03445968 ADRP X20, 0xF98000
	0x0344596C LDRB W8, [X20 + 0x702]
	0x03445970 MOV X19, X0
	0x03445974 TBNZ X8, 0x0, 0x34459A4
	0x03445978 ADRP X0, 0xCAF000
	0x0344597C LDR X0, [X0 + 0x818]
	0x03445980 BL 0x1C16CF4
	0x03445984 ADRP X0, 0xCEA000
	0x03445988 LDR X0, [X0 + 0x7C8]
	0x0344598C BL 0x1C16CF4
	0x03445990 ADRP X0, 0xCB0000
	0x03445994 LDR X0, [X0 + 0x278]
	0x03445998 BL 0x1C16CF4
	0x0344599C MOVZ W8, 0x1
	0x034459A0 STRB W8, [X20 + 0x702]
	0x034459A4 LDR X9, [X19 + 0x10]
	0x034459A8 CBZ X9, 0x3445A98
	0x034459AC LDR X21, [X19 + 0x18]
	0x034459B0 CBZ X21, 0x3445A98
	0x034459B4 ADRP X10, 0xCAF000
	0x034459B8 LDR X8, [X21]
	0x034459BC LDR X10, [X10 + 0x818]
	0x034459C0 ADRP X22, 0xCB0000
	0x034459C4 ADRP X24, 0xCEA000
	0x034459C8 LDR X20, [X9 + 0x48]
	0x034459CC LDRH W9, [X8 + 0x12E]
	0x034459D0 LDR X1, [X10]
	0x034459D4 LDR X22, [X22 + 0x278]
	0x034459D8 LDR X24, [X24 + 0x7C8]
	0x034459DC CBZ X9, 0x3445A00
	0x034459E0 LDR X10, [X8 + 0xB0]
	0x034459E4 ADD X10, X10, 0x8
	0x034459E8 LDUR X11, [X10 - 0x8]
	0x034459EC CMP X11, X1
	0x034459F0 B.EQ 0x3445A10
	0x034459F4 SUBS X9, X9, 0x1
	0x034459F8 ADD X10, X10, 0x10
	0x034459FC B.NE 0x34459E8
	0x03445A00 MOV X0, X21
	0x03445A04 MOV W2, W31
	0x03445A08 BL 0x1C5C788
	0x03445A0C B 0x3445A1C
	0x03445A10 LDRSW X9, [X10]
	0x03445A14 ADD X8, X8, X9, 0x4, LSL
	0x03445A18 ADD X0, X8, 0x138
	0x03445A1C LDP X8, X1, [X0]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF99000
	011 Move X24, 0xCB2000
	012 Move W8, [X25+1779]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEB000
	024 Move X0, [X0+2240]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB2000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1779], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEB000
	040 Move W8, [X0+224]
	041 Move X24, [X24+2240]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task UnlinkSteamAsync(Nakama.ISession session, System.String token, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445A20 MOV X0, X21
	0x03445A24 BLR X8
	0x03445A28 LDR X8, [X22]
	0x03445A2C LDR X1, [X19 + 0x30]
	0x03445A30 LDR X2, [X24]
	0x03445A34 LDP X22, X23, [X19 + 0x20]
	0x03445A38 LDR X8, [X8 + 0xB8]
	0x03445A3C MOV X21, X0
	0x03445A40 ADD X0, X31, 0x20
	0x03445A44 LDR X19, [X8]
	0x03445A48 STP X31, X31, [X31 + 0x20]
	0x03445A4C BL 0x242E368
	0x03445A50 CBZ X20, 0x3445A98
	0x03445A54 LDP X8, X9, [X31 + 0x20]
	0x03445A58 MOV X0, X20
	0x03445A5C MOV X1, X21
	0x03445A60 MOV X2, X19
	0x03445A64 MOV X3, X19
	0x03445A68 MOV X4, X22
	0x03445A6C MOV X5, X23
	0x03445A70 MOV X6, X31
	0x03445A74 STP X9, X31, [X31 + 0x8]
	0x03445A78 STR X8, [X31]
	0x03445A7C BL 0x341218C
	0x03445A80 LDP X20, X19, [X31 + 0x60]
	0x03445A84 LDP X22, X21, [X31 + 0x50]
	0x03445A88 LDP X24, X23, [X31 + 0x40]
	0x03445A8C LDR X30, [X31 + 0x30]
	0x03445A90 ADD X31, X31, 0x70
	0x03445A94 RET
	0x03445A98 BL 0x1C16F20
	0x03445A9C MOV X1, X31
	0x03445AA0 B 0x33BDD8C
	0x03445AA4 SUB X31, X31, 0x60
	0x03445AA8 STP X30, X23, [X31 + 0x30]
	0x03445AAC STP X22, X21, [X31 + 0x40]
	0x03445AB0 STP X20, X19, [X31 + 0x50]
	0x03445AB4 ADRP X20, 0xF98000
	0x03445AB8 LDRB W8, [X20 + 0x703]
	0x03445ABC MOV X19, X0
	0x03445AC0 TBNZ X8, 0x0, 0x3445AF0
	0x03445AC4 ADRP X0, 0xCAF000
	0x03445AC8 LDR X0, [X0 + 0x818]
	0x03445ACC BL 0x1C16CF4
	0x03445AD0 ADRP X0, 0xCEA000
	0x03445AD4 LDR X0, [X0 + 0x7C8]
	0x03445AD8 BL 0x1C16CF4
	0x03445ADC ADRP X0, 0xCB0000
	0x03445AE0 LDR X0, [X0 + 0x278]
	0x03445AE4 BL 0x1C16CF4
	0x03445AE8 MOVZ W8, 0x1
	0x03445AEC STRB W8, [X20 + 0x703]
	0x03445AF0 LDR X9, [X19 + 0x10]
	0x03445AF4 CBZ X9, 0x3445BDC
	0x03445AF8 LDR X21, [X19 + 0x18]
	0x03445AFC CBZ X21, 0x3445BDC
	0x03445B00 ADRP X10, 0xCAF000
	0x03445B04 LDR X8, [X21]
	0x03445B08 LDR X10, [X10 + 0x818]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0xF99000
	011 Move X24, 0xCB2000
	012 Move W8, [X25+1780]
	013 Move X24, [X24+640]
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xCEB000
	024 Move X0, [X0+2248]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB2000
	027 Move X0, [X0+640]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+1780], W8
	031 Move X0, [X24]
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+96], V0
	034 Move [X31+104], V0
	035 Move [X31+64], V0
	036 Move [X31+72], V0
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move X24, 0xCEB000
	040 Move W8, [X0+224]
	041 Move X24, [X24+2248]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 8
	046 Move X0, X31
	047 Call AsyncTaskMethodBuilder.Create
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X9, [X31+24]
	050 Move X2, [X24]
	051 Add X8, X31, 32
	052 Move [X31+88], X20
	053 Move [X31+96], X21
	054 Or X20, X8, 15
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W10, TEMP
	058 Add X1, X31, 32
	059 Move X0, X20
	060 Move [X31+72], X23
	061 Move [X31+80], X22
	062 Move [X31+40], V0
	063 Move [X31+56], X9
	064 Move [X31+64], X19
	065 Move [X31+32], W10
	066 Call AsyncTaskMethodBuilder.Start, X0, X1
	067 Move X0, X20
	068 Move X1, X31
	069 Call AsyncTaskMethodBuilder.get_Task, X0
	070 Move X20, [X31+176]
	071 Move X19, [X31+184]
	072 Move X22, [X31+160]
	073 Move X21, [X31+168]
	074 Move X24, [X31+144]
	075 Move X23, [X31+152]
	076 Move X30, [X31+128]
	077 Move X25, [X31+136]
	078 Add X31, X31, 192
	079 Return X0

Method: System.Threading.Tasks.Task UpdateAccountAsync(Nakama.ISession session, System.String username, System.String displayName = null, System.String avatarUrl = null, System.String langTag = null, System.String location = null, System.String timezone = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445B0C ADRP X22, 0xCB0000
	0x03445B10 ADRP X23, 0xCEA000
	0x03445B14 LDR X20, [X9 + 0x48]
	0x03445B18 LDRH W9, [X8 + 0x12E]
	0x03445B1C LDR X1, [X10]
	0x03445B20 LDR X22, [X22 + 0x278]
	0x03445B24 LDR X23, [X23 + 0x7C8]
	0x03445B28 CBZ X9, 0x3445B4C
	0x03445B2C LDR X10, [X8 + 0xB0]
	0x03445B30 ADD X10, X10, 0x8
	0x03445B34 LDUR X11, [X10 - 0x8]
	0x03445B38 CMP X11, X1
	0x03445B3C B.EQ 0x3445B5C
	0x03445B40 SUBS X9, X9, 0x1
	0x03445B44 ADD X10, X10, 0x10
	0x03445B48 B.NE 0x3445B34
	0x03445B4C MOV X0, X21
	0x03445B50 MOV W2, W31
	0x03445B54 BL 0x1C5C788
	0x03445B58 B 0x3445B68
	0x03445B5C LDRSW X9, [X10]
	0x03445B60 ADD X8, X8, X9, 0x4, LSL
	0x03445B64 ADD X0, X8, 0x138
	0x03445B68 LDP X8, X1, [X0]
	0x03445B6C MOV X0, X21
	0x03445B70 BLR X8
	0x03445B74 LDR X8, [X22]
	0x03445B78 LDP X22, X1, [X19 + 0x20]
	0x03445B7C LDR X2, [X23]
	0x03445B80 MOV X21, X0
	0x03445B84 LDR X8, [X8 + 0xB8]
	0x03445B88 ADD X0, X31, 0x20
	0x03445B8C LDR X19, [X8]
	0x03445B90 STP X31, X31, [X31 + 0x20]
	0x03445B94 BL 0x242E368
	0x03445B98 CBZ X20, 0x3445BDC
	0x03445B9C LDP X8, X9, [X31 + 0x20]
	0x03445BA0 MOV X0, X20
	0x03445BA4 MOV X1, X21
	0x03445BA8 MOV X2, X19
	0x03445BAC MOV X3, X19
	0x03445BB0 MOV X4, X22
	0x03445BB4 MOV X5, X31
	0x03445BB8 MOV X6, X31
	0x03445BBC STP X9, X31, [X31 + 0x8]
	0x03445BC0 STR X8, [X31]
	0x03445BC4 BL 0x341205C
	0x03445BC8 LDP X20, X19, [X31 + 0x50]
	0x03445BCC LDP X22, X21, [X31 + 0x40]
	0x03445BD0 LDP X30, X23, [X31 + 0x30]
	0x03445BD4 ADD X31, X31, 0x60
	0x03445BD8 RET
	0x03445BDC BL 0x1C16F20
	0x03445BE0 SUB X31, X31, 0x60
	0x03445BE4 STP X30, X23, [X31 + 0x30]
	0x03445BE8 STP X22, X21, [X31 + 0x40]
	0x03445BEC STP X20, X19, [X31 + 0x50]
	0x03445BF0 ADRP X19, 0xF98000
	0x03445BF4 LDRB W8, [X19 + 0x704]
	0x03445BF8 MOV X23, X0
	0x03445BFC TBNZ X8, 0x0, 0x3445C20
	0x03445C00 ADRP X0, 0xCEA000
	0x03445C04 LDR X0, [X0 + 0x7C8]
	0x03445C08 BL 0x1C16CF4
	0x03445C0C ADRP X0, 0xCB0000
	0x03445C10 LDR X0, [X0 + 0x278]
	0x03445C14 BL 0x1C16CF4
	0x03445C18 MOVZ W8, 0x1
	0x03445C1C STRB W8, [X19 + 0x704]
	0x03445C20 LDR X8, [X23 + 0x10]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X27, 0xF99000
	015 Move W8, [X27+1781]
	016 Move X19, X7
	017 Move X21, X6
	018 Move X23, X5
	019 Move X24, X4
	020 Move X25, X3
	021 Move X22, X2
	022 Move X26, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0xCEB000
	029 Move X0, [X0+2256]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB2000
	032 Move X0, [X0+640]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X27+1781], W8
	036 Move X28, [X31+272]
	037 Move X29, [X31+280]
	038 Add X0, X31, 40
	039 Move W2, 136
	040 Move W1, W31
	041 Add X27, X31, 40
	042 Call 0x3EB2B10
	043 Move X8, 0xCB2000
	044 Move X8, [X8+640]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 16
	051 Move X0, X31
	052 Call AsyncTaskMethodBuilder.Create
	053 Move [X31+80], X26
	054 Move [X31+88], X24
	055 Move [X31+96], X25
	056 Move [X31+104], X23
	057 Move [X31+112], X21
	058 Move [X31+120], X19
	059 Move [X31+136], X29
	060 Move [X31+144], X28
	061 Move [X31+128], X22
	062 Move X10, 0xCEB000
	063 Move V0, [X31+1]
	064 Move X8, [X31+32]
	065 Move X10, [X10+2256]
	066 Add X27, X27, 8
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W9, TEMP
	070 Add X1, X31, 40
	071 Move X2, [X10]
	072 Move X0, X27
	073 Move [X31+48], V0
	074 Move [X31+64], X8
	075 Move [X31+72], X20
	076 Move [X31+40], W9
	077 Call AsyncTaskMethodBuilder.Start, X0, X1
	078 Move X0, X27
	079 Move X1, X31
	080 Call AsyncTaskMethodBuilder.get_Task, X0
	081 Move X20, [X31+256]
	082 Move X19, [X31+264]
	083 Move X22, [X31+240]
	084 Move X21, [X31+248]
	085 Move X24, [X31+224]
	086 Move X23, [X31+232]
	087 Move X26, [X31+208]
	088 Move X25, [X31+216]
	089 Move X28, [X31+192]
	090 Move X27, [X31+200]
	091 Move X29, [X31+176]
	092 Move X30, [X31+184]
	093 Add X31, X31, 272
	094 Return X0

Method: System.Threading.Tasks.Task UpdateGroupAsync(Nakama.ISession session, System.String groupId, System.String name, System.Boolean open, System.String description = null, System.String avatarUrl = null, System.String langTag = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445C24 CBZ X8, 0x3445CA4
	0x03445C28 ADRP X9, 0xCB0000
	0x03445C2C LDR X9, [X9 + 0x278]
	0x03445C30 ADRP X10, 0xCEA000
	0x03445C34 ADD X0, X31, 0x20
	0x03445C38 LDR X9, [X9]
	0x03445C3C LDR X10, [X10 + 0x7C8]
	0x03445C40 LDR X22, [X8 + 0x48]
	0x03445C44 LDP X21, X1, [X23 + 0x28]
	0x03445C48 LDR X8, [X9 + 0xB8]
	0x03445C4C LDR X2, [X10]
	0x03445C50 LDP X19, X20, [X23 + 0x18]
	0x03445C54 LDR X23, [X8]
	0x03445C58 STP X31, X31, [X31 + 0x20]
	0x03445C5C BL 0x242E368
	0x03445C60 CBZ X22, 0x3445CA4
	0x03445C64 LDP X8, X9, [X31 + 0x20]
	0x03445C68 MOV X0, X22
	0x03445C6C MOV X1, X31
	0x03445C70 MOV X2, X23
	0x03445C74 MOV X3, X23
	0x03445C78 MOV X4, X19
	0x03445C7C MOV X5, X20
	0x03445C80 MOV X6, X21
	0x03445C84 STP X9, X31, [X31 + 0x8]
	0x03445C88 STR X8, [X31]
	0x03445C8C BL 0x341218C
	0x03445C90 LDP X20, X19, [X31 + 0x50]
	0x03445C94 LDP X22, X21, [X31 + 0x40]
	0x03445C98 LDP X30, X23, [X31 + 0x30]
	0x03445C9C ADD X31, X31, 0x60
	0x03445CA0 RET
	0x03445CA4 BL 0x1C16F20
	0x03445CA8 SUB X31, X31, 0x60
	0x03445CAC STR X30, [X31 + 0x30]
	0x03445CB0 STP X22, X21, [X31 + 0x40]
	0x03445CB4 STP X20, X19, [X31 + 0x50]
	0x03445CB8 ADRP X19, 0xF98000
	0x03445CBC LDRB W8, [X19 + 0x705]
	0x03445CC0 MOV X22, X0
	0x03445CC4 TBNZ X8, 0x0, 0x3445CE8
	0x03445CC8 ADRP X0, 0xCEA000
	0x03445CCC LDR X0, [X0 + 0x7C8]
	0x03445CD0 BL 0x1C16CF4
	0x03445CD4 ADRP X0, 0xCB0000
	0x03445CD8 LDR X0, [X0 + 0x278]
	0x03445CDC BL 0x1C16CF4
	0x03445CE0 MOVZ W8, 0x1
	0x03445CE4 STRB W8, [X19 + 0x705]
	0x03445CE8 LDR X8, [X22 + 0x10]
	0x03445CEC CBZ X8, 0x3445D6C
	0x03445CF0 ADRP X9, 0xCB0000
	0x03445CF4 LDR X9, [X9 + 0x278]
	0x03445CF8 ADRP X10, 0xCEA000
	0x03445CFC ADD X0, X31, 0x20
	0x03445D00 LDR X9, [X9]
	0x03445D04 LDR X10, [X10 + 0x7C8]
	0x03445D08 LDR X21, [X8 + 0x48]
	0x03445D0C LDR X1, [X22 + 0x28]
	0x03445D10 LDR X8, [X9 + 0xB8]
	0x03445D14 LDR X2, [X10]
	0x03445D18 LDP X20, X19, [X22 + 0x18]
	0x03445D1C LDR X22, [X8]
	0x03445D20 STP X31, X31, [X31 + 0x20]
	0x03445D24 BL 0x242E368
	0x03445D28 CBZ X21, 0x3445D6C
	0x03445D2C LDP X8, X9, [X31 + 0x20]
	0x03445D30 MOV X0, X21
	0x03445D34 MOV X1, X31
	0x03445D38 MOV X2, X22
	0x03445D3C MOV X3, X22
	0x03445D40 MOV X4, X20
	0x03445D44 MOV X5, X31

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move [X31+8], X7
	015 Move X27, 0xF99000
	016 Move X19, 0xCB2000
	017 Move W8, [X27+1782]
	018 Move X19, [X19+640]
	019 Move X21, X6
	020 Move X22, X5
	021 Move W26, W4
	022 Move X23, X3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0xCEB000
	031 Move X0, [X0+2264]
	032 Call 0x1C17CF4
	033 Move X0, 0xCB2000
	034 Move X0, [X0+640]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X27+1782], W8
	038 Move X29, [X31+272]
	039 Move X28, [X31+280]
	040 Add X0, X31, 40
	041 Move W2, 136
	042 Move W1, W31
	043 Add X27, X31, 40
	044 Call 0x3EB2B10
	045 Move X0, [X19]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 16
	051 Move X0, X31
	052 And W19, W26, 1
	053 Call AsyncTaskMethodBuilder.Create
	054 Move X9, [X31+8]
	055 Move [X31+80], X25
	056 Move [X31+88], X24
	057 Move [X31+96], X23
	058 Move [X31+104], W19
	059 Move [X31+112], X21
	060 Move [X31+120], X22
	061 Move [X31+136], X28
	062 Move [X31+144], X29
	063 Move [X31+128], X9
	064 Move X10, 0xCEB000
	065 Move V0, [X31+1]
	066 Move X8, [X31+32]
	067 Move X10, [X10+2264]
	068 Add X26, X27, 8
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W9, TEMP
	072 Add X1, X31, 40
	073 Move X2, [X10]
	074 Move X0, X26
	075 Move [X31+48], V0
	076 Move [X31+64], X8
	077 Move [X31+72], X20
	078 Move [X31+40], W9
	079 Call AsyncTaskMethodBuilder.Start, X0, X1
	080 Move X0, X26
	081 Move X1, X31
	082 Call AsyncTaskMethodBuilder.get_Task, X0
	083 Move X20, [X31+256]
	084 Move X19, [X31+264]
	085 Move X22, [X31+240]
	086 Move X21, [X31+248]
	087 Move X24, [X31+224]
	088 Move X23, [X31+232]
	089 Move X26, [X31+208]
	090 Move X25, [X31+216]
	091 Move X28, [X31+192]
	092 Move X27, [X31+200]
	093 Move X29, [X31+176]
	094 Move X30, [X31+184]
	095 Add X31, X31, 272
	096 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseAppleAsync(Nakama.ISession session, System.String receipt, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445D48 MOV X6, X19
	0x03445D4C STP X9, X31, [X31 + 0x8]
	0x03445D50 STR X8, [X31]
	0x03445D54 BL 0x341205C
	0x03445D58 LDP X20, X19, [X31 + 0x50]
	0x03445D5C LDP X22, X21, [X31 + 0x40]
	0x03445D60 LDR X30, [X31 + 0x30]
	0x03445D64 ADD X31, X31, 0x60
	0x03445D68 RET
	0x03445D6C BL 0x1C16F20
	0x03445D70 SUB X31, X31, 0x40
	0x03445D74 STR X30, [X31 + 0x10]
	0x03445D78 STP X22, X21, [X31 + 0x20]
	0x03445D7C STP X20, X19, [X31 + 0x30]
	0x03445D80 ADRP X20, 0xF98000
	0x03445D84 LDRB W8, [X20 + 0x706]
	0x03445D88 MOV X19, X0
	0x03445D8C TBNZ X8, 0x0, 0x3445DB0
	0x03445D90 ADRP X0, 0xCEA000
	0x03445D94 LDR X0, [X0 + 0x930]
	0x03445D98 BL 0x1C16CF4
	0x03445D9C ADRP X0, 0xCEA000
	0x03445DA0 LDR X0, [X0 + 0x7C8]
	0x03445DA4 BL 0x1C16CF4
	0x03445DA8 MOVZ W8, 0x1
	0x03445DAC STRB W8, [X20 + 0x706]
	0x03445DB0 LDR X8, [X19 + 0x10]
	0x03445DB4 CBZ X8, 0x3445E38
	0x03445DB8 ADRP X9, 0xCEA000
	0x03445DBC LDR X9, [X9 + 0x930]
	0x03445DC0 LDR X20, [X8 + 0x48]
	0x03445DC4 LDR X21, [X19 + 0x18]
	0x03445DC8 LDR X0, [X9]
	0x03445DCC BL 0x1C16F10
	0x03445DD0 MOV X1, X31
	0x03445DD4 MOV X22, X0
	0x03445DD8 BL 0x34086A8
	0x03445DDC CBZ X22, 0x3445E38
	0x03445DE0 LDUR V0, [X19 + 0x18]
	0x03445DE4 ADRP X8, 0xCEA000
	0x03445DE8 LDR X8, [X8 + 0x7C8]
	0x03445DEC ADD X0, X31, 0x0
	0x03445DF0 UNIMPLEMENTED
	0x03445DF4 STR V0, [X22 + 0x1]
	0x03445DF8 LDR X1, [X19 + 0x28]
	0x03445DFC LDR X2, [X8]
	0x03445E00 STP X31, X31, [X31]
	0x03445E04 BL 0x242E368
	0x03445E08 CBZ X20, 0x3445E38
	0x03445E0C LDP X3, X4, [X31]
	0x03445E10 MOV X0, X20
	0x03445E14 MOV X1, X21
	0x03445E18 MOV X2, X22
	0x03445E1C MOV X5, X31
	0x03445E20 BL 0x34122BC
	0x03445E24 LDP X20, X19, [X31 + 0x30]
	0x03445E28 LDP X22, X21, [X31 + 0x20]
	0x03445E2C LDR X30, [X31 + 0x10]
	0x03445E30 ADD X31, X31, 0x40
	0x03445E34 RET
	0x03445E38 BL 0x1C16F20
	0x03445E3C MOV X1, X31
	0x03445E40 B 0x33BDD8C
	0x03445E44 SUB X31, X31, 0x50
	0x03445E48 STR X30, [X31 + 0x10]
	0x03445E4C STP X24, X23, [X31 + 0x20]
	0x03445E50 STP X22, X21, [X31 + 0x30]
	0x03445E54 STP X20, X19, [X31 + 0x40]
	0x03445E58 ADRP X20, 0xF98000
	0x03445E5C LDRB W8, [X20 + 0x707]
	0x03445E60 MOV X19, X0
	0x03445E64 TBNZ X8, 0x0, 0x3445EA0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+120], X27
	004 Move [X31+128], X26
	005 Move [X31+136], X25
	006 Move [X31+144], X24
	007 Move [X31+152], X23
	008 Move [X31+160], X22
	009 Move [X31+168], X21
	010 Move [X31+176], X20
	011 Move [X31+184], X19
	012 Move X26, 0xF99000
	013 Move X25, 0xCEA000
	014 Move W8, [X26+1783]
	015 Move X25, [X25+1328]
	016 Move X19, X5
	017 Move X20, X4
	018 Move W24, W3
	019 Move X21, X2
	020 Move X22, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xCEA000
	027 Move X0, [X0+1336]
	028 Call 0x1C17CF4
	029 Move X0, 0xCEB000
	030 Move X0, [X0+2272]
	031 Call 0x1C17CF4
	032 Move X0, 0xCEA000
	033 Move X0, [X0+1352]
	034 Call 0x1C17CF4
	035 Move X0, 0xCEA000
	036 Move X0, [X0+1328]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1783], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+96], X31
	043 Move [X31+64], V0
	044 Move [X31+72], V0
	045 Move [X31+32], V0
	046 Move [X31+40], V0
	047 Move [X31], V0
	048 Move [X31+8], V0
	049 Move X27, 0xCEA000
	050 Move X26, 0xCEB000
	051 Move X25, 0xCEA000
	052 Move W8, [X0+224]
	053 Move X27, [X27+1336]
	054 Move X26, [X26+2272]
	055 Move X25, [X25+1352]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, [X27]
	060 Add X8, X31, 0
	061 And W27, W24, 1
	062 Or X24, X8, 15
	063 Move X8, X24
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X26]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X24
	071 Move [X31+32], X23
	072 Move [X31+40], X22
	073 Move [X31+48], X21
	074 Move [X31+56], W27
	075 Move [X31+64], X19
	076 Move [X31+72], X20
	077 Move [X31], W8
	078 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	079 Move X1, [X25]
	080 Move X0, X24
	081 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	082 Move X20, [X31+176]
	083 Move X19, [X31+184]
	084 Move X22, [X31+160]
	085 Move X21, [X31+168]
	086 Move X24, [X31+144]
	087 Move X23, [X31+152]
	088 Move X26, [X31+128]
	089 Move X25, [X31+136]
	090 Move X30, [X31+112]
	091 Move X27, [X31+120]
	092 Add X31, X31, 192
	093 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseFacebookInstantAsync(Nakama.ISession session, System.String signedRequest, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445E68 ADRP X0, 0xCEA000
	0x03445E6C LDR X0, [X0 + 0x938]
	0x03445E70 BL 0x1C16CF4
	0x03445E74 ADRP X0, 0xCAF000
	0x03445E78 LDR X0, [X0 + 0x818]
	0x03445E7C BL 0x1C16CF4
	0x03445E80 ADRP X0, 0xCEA000
	0x03445E84 LDR X0, [X0 + 0x7C8]
	0x03445E88 BL 0x1C16CF4
	0x03445E8C ADRP X0, 0xCB0000
	0x03445E90 LDR X0, [X0 + 0x278]
	0x03445E94 BL 0x1C16CF4
	0x03445E98 MOVZ W8, 0x1
	0x03445E9C STRB W8, [X20 + 0x707]
	0x03445EA0 LDR X8, [X19 + 0x10]
	0x03445EA4 CBZ X8, 0x3445FB0
	0x03445EA8 ADRP X9, 0xCB0000
	0x03445EAC LDR X9, [X9 + 0x278]
	0x03445EB0 ADRP X10, 0xCEA000
	0x03445EB4 LDR X9, [X9]
	0x03445EB8 LDR X9, [X9 + 0xB8]
	0x03445EBC LDR X10, [X10 + 0x938]
	0x03445EC0 LDR X22, [X8 + 0x48]
	0x03445EC4 LDR X21, [X8 + 0x38]
	0x03445EC8 LDR X20, [X9]
	0x03445ECC LDR X0, [X10]
	0x03445ED0 BL 0x1C16F10
	0x03445ED4 MOV X1, X31
	0x03445ED8 MOV X23, X0
	0x03445EDC BL 0x3408BF8
	0x03445EE0 LDR X24, [X19 + 0x18]
	0x03445EE4 CBZ X24, 0x3445FB0
	0x03445EE8 ADRP X10, 0xCAF000
	0x03445EEC LDR X8, [X24]
	0x03445EF0 LDR X10, [X10 + 0x818]
	0x03445EF4 LDRH W9, [X8 + 0x12E]
	0x03445EF8 LDR X1, [X10]
	0x03445EFC CBZ X9, 0x3445F20
	0x03445F00 LDR X10, [X8 + 0xB0]
	0x03445F04 ADD X10, X10, 0x8
	0x03445F08 LDUR X11, [X10 - 0x8]
	0x03445F0C CMP X11, X1
	0x03445F10 B.EQ 0x3445F30
	0x03445F14 SUBS X9, X9, 0x1
	0x03445F18 ADD X10, X10, 0x10
	0x03445F1C B.NE 0x3445F08
	0x03445F20 MOVZ W2, 0x7
	0x03445F24 MOV X0, X24
	0x03445F28 BL 0x1C5C788
	0x03445F2C B 0x3445F40
	0x03445F30 LDR W9, [X10]
	0x03445F34 ADD W9, W9, 0x7
	0x03445F38 ADD X8, X8, W9, 0x4, SXTW
	0x03445F3C ADD X0, X8, 0x138
	0x03445F40 LDP X8, X1, [X0]
	0x03445F44 MOV X0, X24
	0x03445F48 BLR X8
	0x03445F4C CBZ X23, 0x3445FB0
	0x03445F50 STR X0, [X23 + 0x10]
	0x03445F54 LDR X8, [X19 + 0x20]
	0x03445F58 ADRP X9, 0xCEA000
	0x03445F5C LDR X9, [X9 + 0x7C8]
	0x03445F60 ADD X0, X31, 0x0
	0x03445F64 STR X8, [X23 + 0x18]
	0x03445F68 LDR X1, [X19 + 0x28]
	0x03445F6C LDR X2, [X9]
	0x03445F70 STP X31, X31, [X31]
	0x03445F74 BL 0x242E368
	0x03445F78 CBZ X22, 0x3445FB0
	0x03445F7C LDP X4, X5, [X31]
	0x03445F80 MOV X0, X22
	0x03445F84 MOV X1, X21

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+120], X27
	004 Move [X31+128], X26
	005 Move [X31+136], X25
	006 Move [X31+144], X24
	007 Move [X31+152], X23
	008 Move [X31+160], X22
	009 Move [X31+168], X21
	010 Move [X31+176], X20
	011 Move [X31+184], X19
	012 Move X26, 0xF99000
	013 Move X25, 0xCEA000
	014 Move W8, [X26+1784]
	015 Move X25, [X25+1328]
	016 Move X19, X5
	017 Move X20, X4
	018 Move W24, W3
	019 Move X21, X2
	020 Move X22, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xCEA000
	027 Move X0, [X0+1336]
	028 Call 0x1C17CF4
	029 Move X0, 0xCEB000
	030 Move X0, [X0+2280]
	031 Call 0x1C17CF4
	032 Move X0, 0xCEA000
	033 Move X0, [X0+1352]
	034 Call 0x1C17CF4
	035 Move X0, 0xCEA000
	036 Move X0, [X0+1328]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1784], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+96], X31
	043 Move [X31+64], V0
	044 Move [X31+72], V0
	045 Move [X31+32], V0
	046 Move [X31+40], V0
	047 Move [X31], V0
	048 Move [X31+8], V0
	049 Move X27, 0xCEA000
	050 Move X26, 0xCEB000
	051 Move X25, 0xCEA000
	052 Move W8, [X0+224]
	053 Move X27, [X27+1336]
	054 Move X26, [X26+2280]
	055 Move X25, [X25+1352]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, [X27]
	060 Add X8, X31, 0
	061 And W27, W24, 1
	062 Or X24, X8, 15
	063 Move X8, X24
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X26]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X24
	071 Move [X31+32], X23
	072 Move [X31+40], X22
	073 Move [X31+48], X21
	074 Move [X31+56], W27
	075 Move [X31+64], X19
	076 Move [X31+72], X20
	077 Move [X31], W8
	078 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	079 Move X1, [X25]
	080 Move X0, X24
	081 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	082 Move X20, [X31+176]
	083 Move X19, [X31+184]
	084 Move X22, [X31+160]
	085 Move X21, [X31+168]
	086 Move X24, [X31+144]
	087 Move X23, [X31+152]
	088 Move X26, [X31+128]
	089 Move X25, [X31+136]
	090 Move X30, [X31+112]
	091 Move X27, [X31+120]
	092 Add X31, X31, 192
	093 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseGoogleAsync(Nakama.ISession session, System.String receipt, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03445F88 MOV X2, X20
	0x03445F8C MOV X3, X23
	0x03445F90 MOV X6, X31
	0x03445F94 BL 0x340F250
	0x03445F98 LDP X20, X19, [X31 + 0x40]
	0x03445F9C LDP X22, X21, [X31 + 0x30]
	0x03445FA0 LDP X24, X23, [X31 + 0x20]
	0x03445FA4 LDR X30, [X31 + 0x10]
	0x03445FA8 ADD X31, X31, 0x50
	0x03445FAC RET
	0x03445FB0 BL 0x1C16F20
	0x03445FB4 MOV X1, X31
	0x03445FB8 B 0x33BDD8C
	0x03445FBC SUB X31, X31, 0x40
	0x03445FC0 STR X30, [X31 + 0x10]
	0x03445FC4 STP X22, X21, [X31 + 0x20]
	0x03445FC8 STP X20, X19, [X31 + 0x30]
	0x03445FCC ADRP X20, 0xF98000
	0x03445FD0 LDRB W8, [X20 + 0x708]
	0x03445FD4 MOV X19, X0
	0x03445FD8 TBNZ X8, 0x0, 0x3446008
	0x03445FDC ADRP X0, 0xCEA000
	0x03445FE0 LDR X0, [X0 + 0x940]
	0x03445FE4 BL 0x1C16CF4
	0x03445FE8 ADRP X0, 0xCAF000
	0x03445FEC LDR X0, [X0 + 0x818]
	0x03445FF0 BL 0x1C16CF4
	0x03445FF4 ADRP X0, 0xCEA000
	0x03445FF8 LDR X0, [X0 + 0x7C8]
	0x03445FFC BL 0x1C16CF4
	0x03446000 MOVZ W8, 0x1
	0x03446004 STRB W8, [X20 + 0x708]
	0x03446008 LDR X9, [X19 + 0x10]
	0x0344600C CBZ X9, 0x34460F8
	0x03446010 LDR X21, [X19 + 0x18]
	0x03446014 CBZ X21, 0x34460F8
	0x03446018 ADRP X10, 0xCAE000
	0x0344601C LDR X8, [X21]
	0x03446020 LDR X10, [X10 + 0x818]
	0x03446024 ADRP X22, 0xCE9000
	0x03446028 LDR X20, [X9 + 0x48]
	0x0344602C LDRH W9, [X8 + 0x12E]
	0x03446030 LDR X1, [X10]
	0x03446034 LDR X22, [X22 + 0x940]
	0x03446038 CBZ X9, 0x344605C
	0x0344603C LDR X10, [X8 + 0xB0]
	0x03446040 ADD X10, X10, 0x8
	0x03446044 LDUR X11, [X10 - 0x8]
	0x03446048 CMP X11, X1
	0x0344604C B.EQ 0x344606C
	0x03446050 SUBS X9, X9, 0x1
	0x03446054 ADD X10, X10, 0x10
	0x03446058 B.NE 0x3446044
	0x0344605C MOV X0, X21
	0x03446060 MOV W2, W31
	0x03446064 BL 0x1C5C788
	0x03446068 B 0x3446078
	0x0344606C LDRSW X9, [X10]
	0x03446070 ADD X8, X8, X9, 0x4, LSL
	0x03446074 ADD X0, X8, 0x138
	0x03446078 LDP X8, X1, [X0]
	0x0344607C MOV X0, X21
	0x03446080 BLR X8
	0x03446084 LDR X8, [X22]
	0x03446088 MOV X21, X0
	0x0344608C MOV X0, X8
	0x03446090 BL 0x1C16F10
	0x03446094 MOV X1, X31
	0x03446098 MOV X22, X0
	0x0344609C BL 0x3401A0C
	0x034460A0 CBZ X22, 0x34460F8
	0x034460A4 LDR X8, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+120], X27
	004 Move [X31+128], X26
	005 Move [X31+136], X25
	006 Move [X31+144], X24
	007 Move [X31+152], X23
	008 Move [X31+160], X22
	009 Move [X31+168], X21
	010 Move [X31+176], X20
	011 Move [X31+184], X19
	012 Move X26, 0xF99000
	013 Move X25, 0xCEA000
	014 Move W8, [X26+1785]
	015 Move X25, [X25+1328]
	016 Move X19, X5
	017 Move X20, X4
	018 Move W24, W3
	019 Move X21, X2
	020 Move X22, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xCEA000
	027 Move X0, [X0+1336]
	028 Call 0x1C17CF4
	029 Move X0, 0xCEB000
	030 Move X0, [X0+2288]
	031 Call 0x1C17CF4
	032 Move X0, 0xCEA000
	033 Move X0, [X0+1352]
	034 Call 0x1C17CF4
	035 Move X0, 0xCEA000
	036 Move X0, [X0+1328]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1785], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+96], X31
	043 Move [X31+64], V0
	044 Move [X31+72], V0
	045 Move [X31+32], V0
	046 Move [X31+40], V0
	047 Move [X31], V0
	048 Move [X31+8], V0
	049 Move X27, 0xCE9000
	050 Move X26, 0xCEA000
	051 Move X25, 0xCE9000
	052 Move W8, [X0+224]
	053 Move X27, [X27+1336]
	054 Move X26, [X26+2288]
	055 Move X25, [X25+1352]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, [X27]
	060 Add X8, X31, 0
	061 And W27, W24, 1
	062 Or X24, X8, 15
	063 Move X8, X24
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X26]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X24
	071 Move [X31+32], X23
	072 Move [X31+40], X22
	073 Move [X31+48], X21
	074 Move [X31+56], W27
	075 Move [X31+64], X19
	076 Move [X31+72], X20
	077 Move [X31], W8
	078 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	079 Move X1, [X25]
	080 Move X0, X24
	081 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	082 Move X20, [X31+176]
	083 Move X19, [X31+184]
	084 Move X22, [X31+160]
	085 Move X21, [X31+168]
	086 Move X24, [X31+144]
	087 Move X23, [X31+152]
	088 Move X26, [X31+128]
	089 Move X25, [X31+136]
	090 Move X30, [X31+112]
	091 Move X27, [X31+120]
	092 Add X31, X31, 192
	093 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidatePurchaseResponse> ValidatePurchaseHuaweiAsync(Nakama.ISession session, System.String receipt, System.String signature, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034460A8 ADRP X9, 0xCE9000
	0x034460AC LDR X9, [X9 + 0x7C8]
	0x034460B0 ADD X0, X31, 0x0
	0x034460B4 STR X8, [X22 + 0x10]
	0x034460B8 LDR X1, [X19 + 0x28]
	0x034460BC LDR X2, [X9]
	0x034460C0 STP X31, X31, [X31]
	0x034460C4 BL 0x242E368
	0x034460C8 CBZ X20, 0x34460F8
	0x034460CC LDP X3, X4, [X31]
	0x034460D0 MOV X0, X20
	0x034460D4 MOV X1, X21
	0x034460D8 MOV X2, X22
	0x034460DC MOV X5, X31
	0x034460E0 BL 0x340F368
	0x034460E4 LDP X20, X19, [X31 + 0x30]
	0x034460E8 LDP X22, X21, [X31 + 0x20]
	0x034460EC LDR X30, [X31 + 0x10]
	0x034460F0 ADD X31, X31, 0x40
	0x034460F4 RET
	0x034460F8 BL 0x1C16F20
	0x034460FC MOV X1, X31
	0x03446100 B 0x33BDD8C
	0x03446104 SUB X31, X31, 0x40
	0x03446108 STR X30, [X31 + 0x10]
	0x0344610C STP X22, X21, [X31 + 0x20]
	0x03446110 STP X20, X19, [X31 + 0x30]
	0x03446114 ADRP X20, 0xF97000
	0x03446118 LDRB W8, [X20 + 0x709]
	0x0344611C MOV X19, X0
	0x03446120 TBNZ X8, 0x0, 0x3446150
	0x03446124 ADRP X0, 0xCE9000
	0x03446128 LDR X0, [X0 + 0x948]
	0x0344612C BL 0x1C16CF4
	0x03446130 ADRP X0, 0xCAE000
	0x03446134 LDR X0, [X0 + 0x818]
	0x03446138 BL 0x1C16CF4
	0x0344613C ADRP X0, 0xCE9000
	0x03446140 LDR X0, [X0 + 0x7C8]
	0x03446144 BL 0x1C16CF4
	0x03446148 MOVZ W8, 0x1
	0x0344614C STRB W8, [X20 + 0x709]
	0x03446150 LDR X9, [X19 + 0x10]
	0x03446154 CBZ X9, 0x3446240
	0x03446158 LDR X21, [X19 + 0x18]
	0x0344615C CBZ X21, 0x3446240
	0x03446160 ADRP X10, 0xCAE000
	0x03446164 LDR X8, [X21]
	0x03446168 LDR X10, [X10 + 0x818]
	0x0344616C ADRP X22, 0xCE9000
	0x03446170 LDR X20, [X9 + 0x48]
	0x03446174 LDRH W9, [X8 + 0x12E]
	0x03446178 LDR X1, [X10]
	0x0344617C LDR X22, [X22 + 0x948]
	0x03446180 CBZ X9, 0x34461A4
	0x03446184 LDR X10, [X8 + 0xB0]
	0x03446188 ADD X10, X10, 0x8
	0x0344618C LDUR X11, [X10 - 0x8]
	0x03446190 CMP X11, X1
	0x03446194 B.EQ 0x34461B4
	0x03446198 SUBS X9, X9, 0x1
	0x0344619C ADD X10, X10, 0x10
	0x034461A0 B.NE 0x344618C
	0x034461A4 MOV X0, X21
	0x034461A8 MOV W2, W31
	0x034461AC BL 0x1C5C788
	0x034461B0 B 0x34461C0
	0x034461B4 LDRSW X9, [X10]
	0x034461B8 ADD X8, X8, X9, 0x4, LSL
	0x034461BC ADD X0, X8, 0x138
	0x034461C0 LDP X8, X1, [X0]
	0x034461C4 MOV X0, X21
	0x034461C8 BLR X8
	0x034461CC LDR X8, [X22]
	0x034461D0 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X30
	003 Move [X31+128], X28
	004 Move [X31+136], X27
	005 Move [X31+144], X26
	006 Move [X31+152], X25
	007 Move [X31+160], X24
	008 Move [X31+168], X23
	009 Move [X31+176], X22
	010 Move [X31+184], X21
	011 Move [X31+192], X20
	012 Move [X31+200], X19
	013 Move X27, 0xF98000
	014 Move X26, 0xCE9000
	015 Move W8, [X27+1786]
	016 Move X26, [X26+1328]
	017 Move X19, X6
	018 Move X20, X5
	019 Move W25, W4
	020 Move X21, X3
	021 Move X22, X2
	022 Move X23, X1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCE9000
	029 Move X0, [X0+1336]
	030 Call 0x1C17CF4
	031 Move X0, 0xCEA000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move X0, 0xCE9000
	035 Move X0, [X0+1352]
	036 Call 0x1C17CF4
	037 Move X0, 0xCE9000
	038 Move X0, [X0+1328]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+1786], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+80], V0
	045 Move [X31+88], V0
	046 Move [X31+48], V0
	047 Move [X31+56], V0
	048 Move [X31+16], V0
	049 Move [X31+24], V0
	050 Move [X31], V0
	051 Move X28, 0xCE9000
	052 Move X27, 0xCEA000
	053 Move X26, 0xCE9000
	054 Move W8, [X0+224]
	055 Move X28, [X28+1336]
	056 Move X27, [X27+2296]
	057 Move X26, [X26+1352]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, [X28]
	062 Add X8, X31, 0
	063 And W28, W25, 1
	064 Or X25, X8, 15
	065 Move X8, X25
	066 Call AsyncTaskMethodBuilder`1<Object>.Create
	067 Move X2, [X27]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Add X1, X31, 0
	072 Move X0, X25
	073 Move [X31+32], X24
	074 Move [X31+40], X23
	075 Move [X31+48], X22
	076 Move [X31+56], X21
	077 Move [X31+64], W28
	078 Move [X31+72], X19
	079 Move [X31+80], X20
	080 Move [X31], W8
	081 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	082 Move X1, [X26]
	083 Move X0, X25
	084 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	085 Move X20, [X31+192]
	086 Move X19, [X31+200]
	087 Move X22, [X31+176]
	088 Move X21, [X31+184]
	089 Move X24, [X31+160]
	090 Move X23, [X31+168]
	091 Move X26, [X31+144]
	092 Move X25, [X31+152]
	093 Move X28, [X31+128]
	094 Move X27, [X31+136]
	095 Move X30, [X31+112]
	096 Add X31, X31, 208
	097 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidateSubscriptionResponse> ValidateSubscriptionAppleAsync(Nakama.ISession session, System.String receipt, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034461D4 MOV X0, X8
	0x034461D8 BL 0x1C16F10
	0x034461DC MOV X1, X31
	0x034461E0 MOV X22, X0
	0x034461E4 BL 0x3401F5C
	0x034461E8 CBZ X22, 0x3446240
	0x034461EC LDR X8, [X19 + 0x20]
	0x034461F0 ADRP X9, 0xCE9000
	0x034461F4 LDR X9, [X9 + 0x7C8]
	0x034461F8 ADD X0, X31, 0x0
	0x034461FC STR X8, [X22 + 0x10]
	0x03446200 LDR X1, [X19 + 0x28]
	0x03446204 LDR X2, [X9]
	0x03446208 STP X31, X31, [X31]
	0x0344620C BL 0x242E368
	0x03446210 CBZ X20, 0x3446240
	0x03446214 LDP X3, X4, [X31]
	0x03446218 MOV X0, X20
	0x0344621C MOV X1, X21
	0x03446220 MOV X2, X22
	0x03446224 MOV X5, X31
	0x03446228 BL 0x340F454
	0x0344622C LDP X20, X19, [X31 + 0x30]
	0x03446230 LDP X22, X21, [X31 + 0x20]
	0x03446234 LDR X30, [X31 + 0x10]
	0x03446238 ADD X31, X31, 0x40
	0x0344623C RET
	0x03446240 BL 0x1C16F20
	0x03446244 MOV X1, X31
	0x03446248 B 0x33BDD8C
	0x0344624C SUB X31, X31, 0x40
	0x03446250 STR X30, [X31 + 0x10]
	0x03446254 STP X22, X21, [X31 + 0x20]
	0x03446258 STP X20, X19, [X31 + 0x30]
	0x0344625C ADRP X20, 0xF97000
	0x03446260 LDRB W8, [X20 + 0x70A]
	0x03446264 MOV X19, X0
	0x03446268 TBNZ X8, 0x0, 0x3446298
	0x0344626C ADRP X0, 0xCE9000
	0x03446270 LDR X0, [X0 + 0x950]
	0x03446274 BL 0x1C16CF4
	0x03446278 ADRP X0, 0xCAE000
	0x0344627C LDR X0, [X0 + 0x818]
	0x03446280 BL 0x1C16CF4
	0x03446284 ADRP X0, 0xCE9000
	0x03446288 LDR X0, [X0 + 0x7C8]
	0x0344628C BL 0x1C16CF4
	0x03446290 MOVZ W8, 0x1
	0x03446294 STRB W8, [X20 + 0x70A]
	0x03446298 LDR X9, [X19 + 0x10]
	0x0344629C CBZ X9, 0x3446388
	0x034462A0 LDR X21, [X19 + 0x18]
	0x034462A4 CBZ X21, 0x3446388
	0x034462A8 ADRP X10, 0xCAE000
	0x034462AC LDR X8, [X21]
	0x034462B0 LDR X10, [X10 + 0x818]
	0x034462B4 ADRP X22, 0xCE9000
	0x034462B8 LDR X20, [X9 + 0x48]
	0x034462BC LDRH W9, [X8 + 0x12E]
	0x034462C0 LDR X1, [X10]
	0x034462C4 LDR X22, [X22 + 0x950]
	0x034462C8 CBZ X9, 0x34462EC
	0x034462CC LDR X10, [X8 + 0xB0]
	0x034462D0 ADD X10, X10, 0x8
	0x034462D4 LDUR X11, [X10 - 0x8]
	0x034462D8 CMP X11, X1
	0x034462DC B.EQ 0x34462FC
	0x034462E0 SUBS X9, X9, 0x1
	0x034462E4 ADD X10, X10, 0x10
	0x034462E8 B.NE 0x34462D4
	0x034462EC MOV X0, X21
	0x034462F0 MOV W2, W31

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+120], X27
	004 Move [X31+128], X26
	005 Move [X31+136], X25
	006 Move [X31+144], X24
	007 Move [X31+152], X23
	008 Move [X31+160], X22
	009 Move [X31+168], X21
	010 Move [X31+176], X20
	011 Move [X31+184], X19
	012 Move X26, 0xF98000
	013 Move X25, 0xCE9000
	014 Move W8, [X26+1787]
	015 Move X25, [X25+1416]
	016 Move X19, X5
	017 Move X20, X4
	018 Move W24, W3
	019 Move X21, X2
	020 Move X22, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xCE9000
	027 Move X0, [X0+1424]
	028 Call 0x1C17CF4
	029 Move X0, 0xCEA000
	030 Move X0, [X0+2304]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE9000
	033 Move X0, [X0+1440]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE9000
	036 Move X0, [X0+1416]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1787], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+96], X31
	043 Move [X31+64], V0
	044 Move [X31+72], V0
	045 Move [X31+32], V0
	046 Move [X31+40], V0
	047 Move [X31], V0
	048 Move [X31+8], V0
	049 Move X27, 0xCE9000
	050 Move X26, 0xCEA000
	051 Move X25, 0xCE9000
	052 Move W8, [X0+224]
	053 Move X27, [X27+1424]
	054 Move X26, [X26+2304]
	055 Move X25, [X25+1440]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, [X27]
	060 Add X8, X31, 0
	061 And W27, W24, 1
	062 Or X24, X8, 15
	063 Move X8, X24
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X26]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X24
	071 Move [X31+32], X23
	072 Move [X31+40], X22
	073 Move [X31+48], X21
	074 Move [X31+56], W27
	075 Move [X31+64], X19
	076 Move [X31+72], X20
	077 Move [X31], W8
	078 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	079 Move X1, [X25]
	080 Move X0, X24
	081 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	082 Move X20, [X31+176]
	083 Move X19, [X31+184]
	084 Move X22, [X31+160]
	085 Move X21, [X31+168]
	086 Move X24, [X31+144]
	087 Move X23, [X31+152]
	088 Move X26, [X31+128]
	089 Move X25, [X31+136]
	090 Move X30, [X31+112]
	091 Move X27, [X31+120]
	092 Add X31, X31, 192
	093 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiValidateSubscriptionResponse> ValidateSubscriptionGoogleAsync(Nakama.ISession session, System.String receipt, System.Boolean persist = True, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x034462F4 BL 0x1C5C788
	0x034462F8 B 0x3446308
	0x034462FC LDRSW X9, [X10]
	0x03446300 ADD X8, X8, X9, 0x4, LSL
	0x03446304 ADD X0, X8, 0x138
	0x03446308 LDP X8, X1, [X0]
	0x0344630C MOV X0, X21
	0x03446310 BLR X8
	0x03446314 LDR X8, [X22]
	0x03446318 MOV X21, X0
	0x0344631C MOV X0, X8
	0x03446320 BL 0x1C16F10
	0x03446324 MOV X1, X31
	0x03446328 MOV X22, X0
	0x0344632C BL 0x34024AC
	0x03446330 CBZ X22, 0x3446388
	0x03446334 LDR X8, [X19 + 0x20]
	0x03446338 ADRP X9, 0xCE9000
	0x0344633C LDR X9, [X9 + 0x7C8]
	0x03446340 ADD X0, X31, 0x0
	0x03446344 STR X8, [X22 + 0x10]
	0x03446348 LDR X1, [X19 + 0x28]
	0x0344634C LDR X2, [X9]
	0x03446350 STP X31, X31, [X31]
	0x03446354 BL 0x242E368
	0x03446358 CBZ X20, 0x3446388
	0x0344635C LDP X3, X4, [X31]
	0x03446360 MOV X0, X20
	0x03446364 MOV X1, X21
	0x03446368 MOV X2, X22
	0x0344636C MOV X5, X31
	0x03446370 BL 0x340F540
	0x03446374 LDP X20, X19, [X31 + 0x30]
	0x03446378 LDP X22, X21, [X31 + 0x20]
	0x0344637C LDR X30, [X31 + 0x10]
	0x03446380 ADD X31, X31, 0x40
	0x03446384 RET
	0x03446388 BL 0x1C16F20
	0x0344638C MOV X1, X31
	0x03446390 B 0x33BDD8C
	0x03446394 SUB X31, X31, 0x40
	0x03446398 STR X30, [X31 + 0x10]
	0x0344639C STP X22, X21, [X31 + 0x20]
	0x034463A0 STP X20, X19, [X31 + 0x30]
	0x034463A4 ADRP X20, 0xF97000
	0x034463A8 LDRB W8, [X20 + 0x70B]
	0x034463AC MOV X19, X0
	0x034463B0 TBNZ X8, 0x0, 0x34463E0
	0x034463B4 ADRP X0, 0xCE9000
	0x034463B8 LDR X0, [X0 + 0x958]
	0x034463BC BL 0x1C16CF4
	0x034463C0 ADRP X0, 0xCAE000
	0x034463C4 LDR X0, [X0 + 0x818]
	0x034463C8 BL 0x1C16CF4
	0x034463CC ADRP X0, 0xCE9000
	0x034463D0 LDR X0, [X0 + 0x7C8]
	0x034463D4 BL 0x1C16CF4
	0x034463D8 MOVZ W8, 0x1
	0x034463DC STRB W8, [X20 + 0x70B]
	0x034463E0 LDR X9, [X19 + 0x10]
	0x034463E4 CBZ X9, 0x34464D0
	0x034463E8 LDR X21, [X19 + 0x18]
	0x034463EC CBZ X21, 0x34464D0
	0x034463F0 ADRP X10, 0xCAE000
	0x034463F4 LDR X8, [X21]
	0x034463F8 LDR X10, [X10 + 0x818]
	0x034463FC ADRP X22, 0xCE9000
	0x03446400 LDR X20, [X9 + 0x48]
	0x03446404 LDRH W9, [X8 + 0x12E]
	0x03446408 LDR X1, [X10]
	0x0344640C LDR X22, [X22 + 0x958]
	0x03446410 CBZ X9, 0x3446434

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+112], X30
	003 Move [X31+120], X27
	004 Move [X31+128], X26
	005 Move [X31+136], X25
	006 Move [X31+144], X24
	007 Move [X31+152], X23
	008 Move [X31+160], X22
	009 Move [X31+168], X21
	010 Move [X31+176], X20
	011 Move [X31+184], X19
	012 Move X26, 0xF98000
	013 Move X25, 0xCE9000
	014 Move W8, [X26+1788]
	015 Move X25, [X25+1416]
	016 Move X19, X5
	017 Move X20, X4
	018 Move W24, W3
	019 Move X21, X2
	020 Move X22, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xCE9000
	027 Move X0, [X0+1424]
	028 Call 0x1C17CF4
	029 Move X0, 0xCEA000
	030 Move X0, [X0+2312]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE9000
	033 Move X0, [X0+1440]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE9000
	036 Move X0, [X0+1416]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1788], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+96], X31
	043 Move [X31+64], V0
	044 Move [X31+72], V0
	045 Move [X31+32], V0
	046 Move [X31+40], V0
	047 Move [X31], V0
	048 Move [X31+8], V0
	049 Move X27, 0xCE9000
	050 Move X26, 0xCEA000
	051 Move X25, 0xCE9000
	052 Move W8, [X0+224]
	053 Move X27, [X27+1424]
	054 Move X26, [X26+2312]
	055 Move X25, [X25+1440]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, [X27]
	060 Add X8, X31, 0
	061 And W27, W24, 1
	062 Or X24, X8, 15
	063 Move X8, X24
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X26]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X24
	071 Move [X31+32], X23
	072 Move [X31+40], X22
	073 Move [X31+48], X21
	074 Move [X31+56], W27
	075 Move [X31+64], X19
	076 Move [X31+72], X20
	077 Move [X31], W8
	078 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	079 Move X1, [X25]
	080 Move X0, X24
	081 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	082 Move X20, [X31+176]
	083 Move X19, [X31+184]
	084 Move X22, [X31+160]
	085 Move X21, [X31+168]
	086 Move X24, [X31+144]
	087 Move X23, [X31+152]
	088 Move X26, [X31+128]
	089 Move X25, [X31+136]
	090 Move X30, [X31+112]
	091 Move X27, [X31+120]
	092 Add X31, X31, 192
	093 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecord> WriteLeaderboardRecordAsync(Nakama.ISession session, System.String leaderboardId, System.Int64 score, System.Int64 subScore = 0, System.String metadata = null, Nakama.ApiOperator apiOperator = 0, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03446414 LDR X10, [X8 + 0xB0]
	0x03446418 ADD X10, X10, 0x8
	0x0344641C LDUR X11, [X10 - 0x8]
	0x03446420 CMP X11, X1
	0x03446424 B.EQ 0x3446444
	0x03446428 SUBS X9, X9, 0x1
	0x0344642C ADD X10, X10, 0x10
	0x03446430 B.NE 0x344641C
	0x03446434 MOV X0, X21
	0x03446438 MOV W2, W31
	0x0344643C BL 0x1C5C788
	0x03446440 B 0x3446450
	0x03446444 LDRSW X9, [X10]
	0x03446448 ADD X8, X8, X9, 0x4, LSL
	0x0344644C ADD X0, X8, 0x138
	0x03446450 LDP X8, X1, [X0]
	0x03446454 MOV X0, X21
	0x03446458 BLR X8
	0x0344645C LDR X8, [X22]
	0x03446460 MOV X21, X0
	0x03446464 MOV X0, X8
	0x03446468 BL 0x1C16F10
	0x0344646C MOV X1, X31
	0x03446470 MOV X22, X0
	0x03446474 BL 0x3402A34
	0x03446478 CBZ X22, 0x34464D0
	0x0344647C LDR V0, [X19 + 0x2]
	0x03446480 ADRP X8, 0xCE9000
	0x03446484 LDR X8, [X8 + 0x7C8]
	0x03446488 ADD X0, X31, 0x0
	0x0344648C STR V0, [X22 + 0x1]
	0x03446490 LDR X1, [X19 + 0x30]
	0x03446494 LDR X2, [X8]
	0x03446498 STP X31, X31, [X31]
	0x0344649C BL 0x242E368
	0x034464A0 CBZ X20, 0x34464D0
	0x034464A4 LDP X3, X4, [X31]
	0x034464A8 MOV X0, X20
	0x034464AC MOV X1, X21
	0x034464B0 MOV X2, X22
	0x034464B4 MOV X5, X31
	0x034464B8 BL 0x340F62C
	0x034464BC LDP X20, X19, [X31 + 0x30]
	0x034464C0 LDP X22, X21, [X31 + 0x20]
	0x034464C4 LDR X30, [X31 + 0x10]
	0x034464C8 ADD X31, X31, 0x40
	0x034464CC RET
	0x034464D0 BL 0x1C16F20
	0x034464D4 MOV X1, X31
	0x034464D8 B 0x33BDD8C
	0x034464DC SUB X31, X31, 0x40
	0x034464E0 STR X30, [X31 + 0x10]
	0x034464E4 STP X22, X21, [X31 + 0x20]
	0x034464E8 STP X20, X19, [X31 + 0x30]
	0x034464EC ADRP X20, 0xF97000
	0x034464F0 LDRB W8, [X20 + 0x70C]
	0x034464F4 MOV X19, X0
	0x034464F8 TBNZ X8, 0x0, 0x3446528
	0x034464FC ADRP X0, 0xCE9000
	0x03446500 LDR X0, [X0 + 0x960]
	0x03446504 BL 0x1C16CF4
	0x03446508 ADRP X0, 0xCAE000
	0x0344650C LDR X0, [X0 + 0x818]
	0x03446510 BL 0x1C16CF4
	0x03446514 ADRP X0, 0xCE9000
	0x03446518 LDR X0, [X0 + 0x7C8]
	0x0344651C BL 0x1C16CF4
	0x03446520 MOVZ W8, 0x1
	0x03446524 STRB W8, [X20 + 0x70C]
	0x03446528 LDR X9, [X19 + 0x10]
	0x0344652C CBZ X9, 0x3446618
	0x03446530 LDR X21, [X19 + 0x18]
	0x03446534 CBZ X21, 0x3446618
	0x03446538 ADRP X10, 0xCAE000
	0x0344653C LDR X8, [X21]
	0x03446540 LDR X10, [X10 + 0x818]
	0x03446544 ADRP X22, 0xCE9000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X28, 0xF98000
	015 Move X27, 0xCE9000
	016 Move W8, [X28+1789]
	017 Move X27, [X27+1528]
	018 Move X19, X7
	019 Move W20, W6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X24, X3
	023 Move X23, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCE9000
	031 Move X0, [X0+1536]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEA000
	034 Move X0, [X0+2320]
	035 Call 0x1C17CF4
	036 Move X0, 0xCE9000
	037 Move X0, [X0+1552]
	038 Call 0x1C17CF4
	039 Move X0, 0xCE9000
	040 Move X0, [X0+1528]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1789], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], V0
	047 Move [X31+104], V0
	048 Move [X31+64], V0
	049 Move [X31+72], V0
	050 Move [X31+32], V0
	051 Move [X31+40], V0
	052 Move [X31], V0
	053 Move [X31+8], V0
	054 Move X27, 0xCE9000
	055 Move X28, 0xCEA000
	056 Move W8, [X0+224]
	057 Move X29, [X31+224]
	058 Move X27, [X27+1536]
	059 Move X28, [X28+2320]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X28]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+32], X26
	075 Move [X31+40], X25
	076 Move [X31+64], X24
	077 Move [X31+72], X22
	078 Move [X31+48], X23
	079 Move [X31+56], X21
	080 Move [X31+80], W20
	081 Move [X31+88], X29
	082 Move [X31+96], X19
	083 Move [X31], W8
	084 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	085 Move X8, 0xCE9000
	086 Move X8, [X8+1552]
	087 Move X0, X27
	088 Move X1, [X8]
	089 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	090 Move X20, [X31+208]
	091 Move X19, [X31+216]
	092 Move X22, [X31+192]
	093 Move X21, [X31+200]
	094 Move X24, [X31+176]
	095 Move X23, [X31+184]
	096 Move X26, [X31+160]
	097 Move X25, [X31+168]
	098 Move X28, [X31+144]
	099 Move X27, [X31+152]
	100 Move X29, [X31+128]
	101 Move X30, [X31+136]
	102 Add X31, X31, 224
	103 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiStorageObjectAcks> WriteStorageObjectsAsync(Nakama.ISession session, Nakama.IApiWriteStorageObject[] objects = null, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03446548 LDR X20, [X9 + 0x48]
	0x0344654C LDRH W9, [X8 + 0x12E]
	0x03446550 LDR X1, [X10]
	0x03446554 LDR X22, [X22 + 0x960]
	0x03446558 CBZ X9, 0x344657C
	0x0344655C LDR X10, [X8 + 0xB0]
	0x03446560 ADD X10, X10, 0x8
	0x03446564 LDUR X11, [X10 - 0x8]
	0x03446568 CMP X11, X1
	0x0344656C B.EQ 0x344658C
	0x03446570 SUBS X9, X9, 0x1
	0x03446574 ADD X10, X10, 0x10
	0x03446578 B.NE 0x3446564
	0x0344657C MOV X0, X21
	0x03446580 MOV W2, W31
	0x03446584 BL 0x1C5C788
	0x03446588 B 0x3446598
	0x0344658C LDRSW X9, [X10]
	0x03446590 ADD X8, X8, X9, 0x4, LSL
	0x03446594 ADD X0, X8, 0x138
	0x03446598 LDP X8, X1, [X0]
	0x0344659C MOV X0, X21
	0x034465A0 BLR X8
	0x034465A4 LDR X8, [X22]
	0x034465A8 MOV X21, X0
	0x034465AC MOV X0, X8
	0x034465B0 BL 0x1C16F10
	0x034465B4 MOV X1, X31
	0x034465B8 MOV X22, X0
	0x034465BC BL 0x3402F84
	0x034465C0 CBZ X22, 0x3446618
	0x034465C4 LDR X8, [X19 + 0x20]
	0x034465C8 ADRP X9, 0xCE9000
	0x034465CC LDR X9, [X9 + 0x7C8]
	0x034465D0 ADD X0, X31, 0x0
	0x034465D4 STR X8, [X22 + 0x10]
	0x034465D8 LDR X1, [X19 + 0x28]
	0x034465DC LDR X2, [X9]
	0x034465E0 STP X31, X31, [X31]
	0x034465E4 BL 0x242E368
	0x034465E8 CBZ X20, 0x3446618
	0x034465EC LDP X3, X4, [X31]
	0x034465F0 MOV X0, X20
	0x034465F4 MOV X1, X21
	0x034465F8 MOV X2, X22
	0x034465FC MOV X5, X31
	0x03446600 BL 0x340F718
	0x03446604 LDP X20, X19, [X31 + 0x30]
	0x03446608 LDP X22, X21, [X31 + 0x20]
	0x0344660C LDR X30, [X31 + 0x10]
	0x03446610 ADD X31, X31, 0x40
	0x03446614 RET
	0x03446618 BL 0x1C16F20
	0x0344661C MOV X1, X31
	0x03446620 B 0x33BDD8C
	0x03446624 SUB X31, X31, 0x40
	0x03446628 STR X30, [X31 + 0x10]
	0x0344662C STP X22, X21, [X31 + 0x20]
	0x03446630 STP X20, X19, [X31 + 0x30]
	0x03446634 ADRP X20, 0xF97000
	0x03446638 LDRB W8, [X20 + 0x70D]
	0x0344663C MOV X19, X0
	0x03446640 TBNZ X8, 0x0, 0x3446670
	0x03446644 ADRP X0, 0xCE9000
	0x03446648 LDR X0, [X0 + 0x968]
	0x0344664C BL 0x1C16CF4
	0x03446650 ADRP X0, 0xCAE000
	0x03446654 LDR X0, [X0 + 0x818]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X25, 0xF98000
	012 Move X24, 0xCE9000
	013 Move W8, [X25+1790]
	014 Move X24, [X24+1720]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xCE9000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move X0, 0xCEA000
	028 Move X0, [X0+2328]
	029 Call 0x1C17CF4
	030 Move X0, 0xCE9000
	031 Move X0, [X0+1744]
	032 Call 0x1C17CF4
	033 Move X0, 0xCE9000
	034 Move X0, [X0+1720]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+1790], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move [X31], V0
	045 Move [X31+8], V0
	046 Move X24, 0xCE9000
	047 Move X26, 0xCEA000
	048 Move X25, 0xCE9000
	049 Move W8, [X0+224]
	050 Move X24, [X24+1728]
	051 Move X26, [X26+2328]
	052 Move X25, [X25+1744]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Add X8, X31, 0
	058 Or X24, X8, 15
	059 Move X8, X24
	060 Call AsyncTaskMethodBuilder`1<Object>.Create
	061 Move X2, [X26]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Add X1, X31, 0
	066 Move X0, X24
	067 Move [X31+32], X23
	068 Move [X31+40], X22
	069 Move [X31+72], X21
	070 Move [X31+48], X19
	071 Move [X31+56], X20
	072 Move [X31], W8
	073 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	074 Move X1, [X25]
	075 Move X0, X24
	076 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X26, [X31+112]
	084 Move X25, [X31+120]
	085 Move X30, [X31+96]
	086 Add X31, X31, 176
	087 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiLeaderboardRecord> WriteTournamentRecordAsync(Nakama.ISession session, System.String tournamentId, System.Int64 score, System.Int64 subScore = 0, System.String metadata = null, Nakama.ApiOperator apiOperator = 0, Nakama.RetryConfiguration retryConfiguration = null, System.Threading.CancellationToken canceller = null)

Disassembly:
	0x03446658 BL 0x1C16CF4
	0x0344665C ADRP X0, 0xCE9000
	0x03446660 LDR X0, [X0 + 0x7C8]
	0x03446664 BL 0x1C16CF4
	0x03446668 MOVZ W8, 0x1
	0x0344666C STRB W8, [X20 + 0x70D]
	0x03446670 LDR X9, [X19 + 0x10]
	0x03446674 CBZ X9, 0x3446770
	0x03446678 LDR X21, [X19 + 0x18]
	0x0344667C CBZ X21, 0x3446770
	0x03446680 ADRP X10, 0xCAE000
	0x03446684 LDR X8, [X21]
	0x03446688 LDR X10, [X10 + 0x818]
	0x0344668C ADRP X22, 0xCE9000
	0x03446690 LDR X20, [X9 + 0x48]
	0x03446694 LDRH W9, [X8 + 0x12E]
	0x03446698 LDR X1, [X10]
	0x0344669C LDR X22, [X22 + 0x968]
	0x034466A0 CBZ X9, 0x34466C4
	0x034466A4 LDR X10, [X8 + 0xB0]
	0x034466A8 ADD X10, X10, 0x8
	0x034466AC LDUR X11, [X10 - 0x8]
	0x034466B0 CMP X11, X1
	0x034466B4 B.EQ 0x34466D4
	0x034466B8 SUBS X9, X9, 0x1
	0x034466BC ADD X10, X10, 0x10
	0x034466C0 B.NE 0x34466AC
	0x034466C4 MOV X0, X21
	0x034466C8 MOV W2, W31
	0x034466CC BL 0x1C5C788
	0x034466D0 B 0x34466E0
	0x034466D4 LDRSW X9, [X10]
	0x034466D8 ADD X8, X8, X9, 0x4, LSL
	0x034466DC ADD X0, X8, 0x138
	0x034466E0 LDP X8, X1, [X0]
	0x034466E4 MOV X0, X21
	0x034466E8 BLR X8
	0x034466EC LDR X8, [X22]
	0x034466F0 MOV X21, X0
	0x034466F4 MOV X0, X8
	0x034466F8 BL 0x1C16F10
	0x034466FC MOV X1, X31
	0x03446700 MOV X22, X0
	0x03446704 BL 0x3403B3C
	0x03446708 CBZ X22, 0x3446770
	0x0344670C LDR V0, [X19 + 0x2]
	0x03446710 ADRP X8, 0xCE9000
	0x03446714 ADD X0, X31, 0x0
	0x03446718 STR V0, [X22 + 0x1]
	0x0344671C LDR V0, [X19 + 0x3]
	0x03446720 STR V0, [X22 + 0x2]
	0x03446724 LDR V0, [X19 + 0x4]
	0x03446728 LDR X8, [X8 + 0x7C8]
	0x0344672C STR V0, [X22 + 0x3]
	0x03446730 LDR X1, [X19 + 0x50]
	0x03446734 LDR X2, [X8]
	0x03446738 STP X31, X31, [X31]
	0x0344673C BL 0x242E368
	0x03446740 CBZ X20, 0x3446770
	0x03446744 LDP X3, X4, [X31]
	0x03446748 MOV X0, X20
	0x0344674C MOV X1, X21
	0x03446750 MOV X2, X22
	0x03446754 MOV X5, X31
	0x03446758 BL 0x340F8F0
	0x0344675C LDP X20, X19, [X31 + 0x30]
	0x03446760 LDP X22, X21, [X31 + 0x20]
	0x03446764 LDR X30, [X31 + 0x10]
	0x03446768 ADD X31, X31, 0x40
	0x0344676C RET
	0x03446770 BL 0x1C16F20
	0x03446774 MOV X1, X31
	0x03446778 B 0x33BDD8C
	0x0344677C SUB X31, X31, 0x40
	0x03446780 STR X30, [X31 + 0x10]
	0x03446784 STP X22, X21, [X31 + 0x20]
	0x03446788 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X28, 0xF98000
	015 Move X27, 0xCE9000
	016 Move W8, [X28+1791]
	017 Move X27, [X27+1528]
	018 Move X19, X7
	019 Move W20, W6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X24, X3
	023 Move X23, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCE9000
	031 Move X0, [X0+1536]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEA000
	034 Move X0, [X0+2336]
	035 Call 0x1C17CF4
	036 Move X0, 0xCE9000
	037 Move X0, [X0+1552]
	038 Call 0x1C17CF4
	039 Move X0, 0xCE9000
	040 Move X0, [X0+1528]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+1791], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], V0
	047 Move [X31+104], V0
	048 Move [X31+64], V0
	049 Move [X31+72], V0
	050 Move [X31+32], V0
	051 Move [X31+40], V0
	052 Move [X31], V0
	053 Move [X31+8], V0
	054 Move X27, 0xCE9000
	055 Move X28, 0xCEA000
	056 Move W8, [X0+224]
	057 Move X29, [X31+224]
	058 Move X27, [X27+1536]
	059 Move X28, [X28+2336]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, [X27]
	064 Add X8, X31, 0
	065 Or X27, X8, 15
	066 Move X8, X27
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X28]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X27
	074 Move [X31+32], X26
	075 Move [X31+40], X25
	076 Move [X31+64], X24
	077 Move [X31+72], X22
	078 Move [X31+48], X23
	079 Move [X31+56], X21
	080 Move [X31+80], W20
	081 Move [X31+88], X29
	082 Move [X31+96], X19
	083 Move [X31], W8
	084 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	085 Move X8, 0xCE9000
	086 Move X8, [X8+1552]
	087 Move X0, X27
	088 Move X1, [X8]
	089 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	090 Move X20, [X31+208]
	091 Move X19, [X31+216]
	092 Move X22, [X31+192]
	093 Move X21, [X31+200]
	094 Move X24, [X31+176]
	095 Move X23, [X31+184]
	096 Move X26, [X31+160]
	097 Move X25, [X31+168]
	098 Move X28, [X31+144]
	099 Move X27, [X31+152]
	100 Move X29, [X31+128]
	101 Move X30, [X31+136]
	102 Add X31, X31, 224
	103 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0344678C ADRP X20, 0xF97000
	0x03446790 LDRB W8, [X20 + 0x70E]
	0x03446794 MOV X19, X0
	0x03446798 TBNZ X8, 0x0, 0x34467C8
	0x0344679C ADRP X0, 0xCE9000
	0x034467A0 LDR X0, [X0 + 0x970]
	0x034467A4 BL 0x1C16CF4
	0x034467A8 ADRP X0, 0xCAE000
	0x034467AC LDR X0, [X0 + 0x818]
	0x034467B0 BL 0x1C16CF4
	0x034467B4 ADRP X0, 0xCE9000
	0x034467B8 LDR X0, [X0 + 0x7C8]
	0x034467BC BL 0x1C16CF4
	0x034467C0 MOVZ W8, 0x1
	0x034467C4 STRB W8, [X20 + 0x70E]
	0x034467C8 LDR X9, [X19 + 0x10]
	0x034467CC CBZ X9, 0x34468B8
	0x034467D0 LDR X21, [X19 + 0x18]
	0x034467D4 CBZ X21, 0x34468B8
	0x034467D8 ADRP X10, 0xCAE000
	0x034467DC LDR X8, [X21]
	0x034467E0 LDR X10, [X10 + 0x818]
	0x034467E4 ADRP X22, 0xCE9000
	0x034467E8 LDR X20, [X9 + 0x48]
	0x034467EC LDRH W9, [X8 + 0x12E]
	0x034467F0 LDR X1, [X10]
	0x034467F4 LDR X22, [X22 + 0x970]
	0x034467F8 CBZ X9, 0x344681C
	0x034467FC LDR X10, [X8 + 0xB0]
	0x03446800 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF98000
	005 Move X19, 0xCB0000
	006 Move W8, [X20+1792]
	007 Move X19, [X19+1392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xCB0000
	013 Move X0, [X0+2576]
	014 Call 0x1C17CF4
	015 Move X0, 0xCB0000
	016 Move X0, [X0+1392]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1792], W8
	020 Move X0, [X19]
	021 Move X19, 0xCB0000
	022 Move W8, [X0+224]
	023 Move X19, [X19+2576]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move D0, 4.000000000232831
	028 Move X0, X31
	029 Call TimeSpan.FromMinutes, V0
	030 Move X8, [X19]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X8, [X8+184]
	034 Move [X8], X0
	035 Move X30, [X31+32]
	036 Return 

