Type: Nakama.Session

Method: System.String get_AuthToken()

Disassembly:
	0x03479C8C ADRP X21, 0xF64000
	0x03479C90 LDRB W8, [X21 + 0x85F]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_AuthToken(System.String value)

Disassembly:
	0x03479C94 MOV X19, X1
	0x03479C98 MOV X20, X0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Boolean get_Created()

Disassembly:
	0x03479C9C TBNZ X8, 0x0, 0x3479CB4
	0x03479CA0 ADRP X0, 0xCB7000

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Int64 get_CreateTime()

Disassembly:
	0x03479CA4 LDR X0, [X0 + 0xB30]
	0x03479CA8 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Int64 get_ExpireTime()

Disassembly:
	0x03479CAC MOVZ W8, 0x1
	0x03479CB0 STRB W8, [X21 + 0x85F]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_ExpireTime(System.Int64 value)

Disassembly:
	0x03479CB4 ADRP X24, 0xCB7000
	0x03479CB8 LDR X21, [X20 + 0x30]!

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Boolean get_IsExpired()

Disassembly:
	0x03479CBC LDR X24, [X24 + 0xB30]
	0x03479CC0 MOV X0, X21
	0x03479CC4 MOV X1, X19
	0x03479CC8 MOV X2, X31
	0x03479CCC BL 0x33C0DE4
	0x03479CD0 CBZ X0, 0x3479CF0
	0x03479CD4 LDR X23, [X24]
	0x03479CD8 MOV X22, X0
	0x03479CDC MOV X1, X23
	0x03479CE0 BL 0x1C16E00
	0x03479CE4 MOV X1, X0
	0x03479CE8 CBNZ X0, 0x3479CF4
	0x03479CEC B 0x3479D20
	0x03479CF0 MOV X1, X31
	0x03479CF4 MOV X0, X20
	0x03479CF8 MOV X2, X21
	0x03479CFC BL 0x1C24138
	0x03479D00 CMP X21, X0
	0x03479D04 MOV X21, X0
	0x03479D08 B.NE 0x3479CC0
	0x03479D0C LDP X20, X19, [X31 + 0x30]
	0x03479D10 LDP X22, X21, [X31 + 0x20]
	0x03479D14 LDP X24, X23, [X31 + 0x10]
	0x03479D18 LDR X30, [X31], #0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF65000
	006 Move X21, 0xC7C000
	007 Move W8, [X20+2127]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC7C000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2127], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call DateTime.get_UtcNow
	026 Move X1, X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]

Method: System.Boolean get_IsRefreshExpired()

Disassembly:
	0x03479E00 ADRP X0, 0xC7D000
	0x03479E04 LDR X0, [X0 + 0x2C8]
	0x03479E08 BL 0x1C16CF4
	0x03479E0C MOVZ W8, 0x1
	0x03479E10 STRB W8, [X21 + 0x861]
	0x03479E14 ADRP X24, 0xC7D000
	0x03479E18 LDR X21, [X20 + 0x38]!
	0x03479E1C LDR X24, [X24 + 0x2C8]
	0x03479E20 MOV X0, X21
	0x03479E24 MOV X1, X19
	0x03479E28 MOV X2, X31
	0x03479E2C BL 0x33C0DE4
	0x03479E30 CBZ X0, 0x3479E50
	0x03479E34 LDR X23, [X24]
	0x03479E38 MOV X22, X0
	0x03479E3C MOV X1, X23
	0x03479E40 BL 0x1C16E00
	0x03479E44 MOV X1, X0
	0x03479E48 CBNZ X0, 0x3479E54
	0x03479E4C B 0x3479E80
	0x03479E50 MOV X1, X31
	0x03479E54 MOV X0, X20
	0x03479E58 MOV X2, X21
	0x03479E5C BL 0x1C24138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF65000
	006 Move X21, 0xC7C000
	007 Move W8, [X20+2128]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC7C000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2128], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call DateTime.get_UtcNow
	026 Move X1, X0
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]

Method: System.Int64 get_RefreshExpireTime()

Disassembly:
	0x03479F44 STP X22, X21, [X31 + 0x20]
	0x03479F48 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_RefreshExpireTime(System.Int64 value)

Disassembly:
	0x03479F4C ADRP X21, 0xF64000
	0x03479F50 LDRB W8, [X21 + 0x863]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_RefreshToken()

Disassembly:
	0x03479F54 MOV X19, X1
	0x03479F58 MOV X20, X0

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_RefreshToken(System.String value)

Disassembly:
	0x03479F5C TBNZ X8, 0x0, 0x3479F74
	0x03479F60 ADRP X0, 0xCB7000

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x03479F64 LDR X0, [X0 + 0xB38]
	0x03479F68 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.String get_Username()

Disassembly:
	0x03479F6C MOVZ W8, 0x1
	0x03479F70 STRB W8, [X21 + 0x863]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_Username(System.String value)

Disassembly:
	0x03479F74 ADRP X24, 0xCB7000
	0x03479F78 LDR X21, [X20 + 0x40]!

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_UserId()

Disassembly:
	0x03479F7C LDR X24, [X24 + 0xB38]
	0x03479F80 MOV X0, X21

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_UserId(System.String value)

Disassembly:
	0x03479F84 MOV X1, X19
	0x03479F88 MOV X2, X31

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Boolean HasExpired(System.DateTime offset)

Disassembly:
	0x03479D1C RET
	0x03479D20 MOV X0, X22
	0x03479D24 MOV X1, X23
	0x03479D28 BL 0x1C171E0
	0x03479D2C STR X30, [X31 - 0x40]!
	0x03479D30 STP X24, X23, [X31 + 0x10]
	0x03479D34 STP X22, X21, [X31 + 0x20]
	0x03479D38 STP X20, X19, [X31 + 0x30]
	0x03479D3C ADRP X21, 0xF64000
	0x03479D40 LDRB W8, [X21 + 0x860]
	0x03479D44 MOV X19, X1
	0x03479D48 MOV X20, X0
	0x03479D4C TBNZ X8, 0x0, 0x3479D64
	0x03479D50 ADRP X0, 0xCB7000
	0x03479D54 LDR X0, [X0 + 0xB30]
	0x03479D58 BL 0x1C16CF4
	0x03479D5C MOVZ W8, 0x1
	0x03479D60 STRB W8, [X21 + 0x860]
	0x03479D64 ADRP X24, 0xCB7000
	0x03479D68 LDR X21, [X20 + 0x30]!
	0x03479D6C LDR X24, [X24 + 0xB30]
	0x03479D70 MOV X0, X21
	0x03479D74 MOV X1, X19
	0x03479D78 MOV X2, X31
	0x03479D7C BL 0x33C0FDC
	0x03479D80 CBZ X0, 0x3479DA0
	0x03479D84 LDR X23, [X24]
	0x03479D88 MOV X22, X0
	0x03479D8C MOV X1, X23
	0x03479D90 BL 0x1C16E00
	0x03479D94 MOV X1, X0
	0x03479D98 CBNZ X0, 0x3479DA4
	0x03479D9C B 0x3479DD0
	0x03479DA0 MOV X1, X31
	0x03479DA4 MOV X0, X20
	0x03479DA8 MOV X2, X21
	0x03479DAC BL 0x1C24138
	0x03479DB0 CMP X21, X0
	0x03479DB4 MOV X21, X0
	0x03479DB8 B.NE 0x3479D70
	0x03479DBC LDP X20, X19, [X31 + 0x30]
	0x03479DC0 LDP X22, X21, [X31 + 0x20]
	0x03479DC4 LDP X24, X23, [X31 + 0x10]
	0x03479DC8 LDR X30, [X31], #0x40
	0x03479DCC RET
	0x03479DD0 MOV X0, X22
	0x03479DD4 MOV X1, X23
	0x03479DD8 BL 0x1C171E0
	0x03479DDC STR X30, [X31 - 0x40]!
	0x03479DE0 STP X24, X23, [X31 + 0x10]
	0x03479DE4 STP X22, X21, [X31 + 0x20]
	0x03479DE8 STP X20, X19, [X31 + 0x30]
	0x03479DEC ADRP X21, 0xF64000
	0x03479DF0 LDRB W8, [X21 + 0x861]
	0x03479DF4 MOV X19, X1
	0x03479DF8 MOV X20, X0
	0x03479DFC TBNZ X8, 0x0, 0x3479E14

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF65000
	007 Move X21, 0xCB7000
	008 Move W8, [X22+2129]
	009 Move X21, [X21+2672]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xC7C000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move X0, 0xCB7000
	020 Move X0, [X0+2672]
	021 Call 0x1C17CF4
	022 Move X0, 0xC7D000
	023 Move X0, [X0+1392]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2129], W8
	027 Move X0, [X21]
	028 Move X22, 0xC7D000
	029 Move W8, [X0+224]
	030 Move X22, [X22+1392]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 Move X8, [X0+184]
	036 Move X0, [X22]
	037 Move X22, [X20+40]
	038 Move X20, 0xC7C000
	039 Move X21, [X8]
	040 Move W8, [X0+224]
	041 Move X20, [X20+2544]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 NotImplemented "Instruction SCVTF not yet implemented."
	046 Move X0, X31
	047 Call TimeSpan.FromSeconds, V0
	048 Move X8, [X20]
	049 Move X20, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X20
	057 Move X2, X31
	058 Call DateTime.op_Addition, X0, X1
	059 Move X1, X0
	060 Move X0, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X2, X31
	066 Move X30, [X31+48]
	067 Call DateTime.op_GreaterThan, X0, X1
	068 Return X0

Method: System.Boolean HasRefreshExpired(System.DateTime offset)

Disassembly:
	0x03479E60 CMP X21, X0
	0x03479E64 MOV X21, X0
	0x03479E68 B.NE 0x3479E20
	0x03479E6C LDP X20, X19, [X31 + 0x30]
	0x03479E70 LDP X22, X21, [X31 + 0x20]
	0x03479E74 LDP X24, X23, [X31 + 0x10]
	0x03479E78 LDR X30, [X31], #0x40
	0x03479E7C RET
	0x03479E80 MOV X0, X22
	0x03479E84 MOV X1, X23
	0x03479E88 BL 0x1C171E0
	0x03479E8C STR X30, [X31 - 0x40]!
	0x03479E90 STP X24, X23, [X31 + 0x10]
	0x03479E94 STP X22, X21, [X31 + 0x20]
	0x03479E98 STP X20, X19, [X31 + 0x30]
	0x03479E9C ADRP X21, 0xF64000
	0x03479EA0 LDRB W8, [X21 + 0x862]
	0x03479EA4 MOV X19, X1
	0x03479EA8 MOV X20, X0
	0x03479EAC TBNZ X8, 0x0, 0x3479EC4
	0x03479EB0 ADRP X0, 0xC7D000
	0x03479EB4 LDR X0, [X0 + 0x2C8]
	0x03479EB8 BL 0x1C16CF4
	0x03479EBC MOVZ W8, 0x1
	0x03479EC0 STRB W8, [X21 + 0x862]
	0x03479EC4 ADRP X24, 0xC7D000
	0x03479EC8 LDR X21, [X20 + 0x38]!
	0x03479ECC LDR X24, [X24 + 0x2C8]
	0x03479ED0 MOV X0, X21
	0x03479ED4 MOV X1, X19
	0x03479ED8 MOV X2, X31
	0x03479EDC BL 0x33C0FDC
	0x03479EE0 CBZ X0, 0x3479F00
	0x03479EE4 LDR X23, [X24]
	0x03479EE8 MOV X22, X0
	0x03479EEC MOV X1, X23
	0x03479EF0 BL 0x1C16E00
	0x03479EF4 MOV X1, X0
	0x03479EF8 CBNZ X0, 0x3479F04
	0x03479EFC B 0x3479F30
	0x03479F00 MOV X1, X31
	0x03479F04 MOV X0, X20
	0x03479F08 MOV X2, X21
	0x03479F0C BL 0x1C24138
	0x03479F10 CMP X21, X0
	0x03479F14 MOV X21, X0
	0x03479F18 B.NE 0x3479ED0
	0x03479F1C LDP X20, X19, [X31 + 0x30]
	0x03479F20 LDP X22, X21, [X31 + 0x20]
	0x03479F24 LDP X24, X23, [X31 + 0x10]
	0x03479F28 LDR X30, [X31], #0x40
	0x03479F2C RET
	0x03479F30 MOV X0, X22
	0x03479F34 MOV X1, X23
	0x03479F38 BL 0x1C171E0
	0x03479F3C STR X30, [X31 - 0x40]!
	0x03479F40 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF65000
	007 Move X21, 0xCB7000
	008 Move W8, [X22+2130]
	009 Move X21, [X21+2672]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xC7C000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move X0, 0xCB7000
	020 Move X0, [X0+2672]
	021 Call 0x1C17CF4
	022 Move X0, 0xC7D000
	023 Move X0, [X0+1392]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2130], W8
	027 Move X0, [X21]
	028 Move X22, 0xC7D000
	029 Move W8, [X0+224]
	030 Move X22, [X22+1392]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 Move X8, [X0+184]
	036 Move X0, [X22]
	037 Move X22, [X20+48]
	038 Move X20, 0xC7C000
	039 Move X21, [X8]
	040 Move W8, [X0+224]
	041 Move X20, [X20+2544]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 NotImplemented "Instruction SCVTF not yet implemented."
	046 Move X0, X31
	047 Call TimeSpan.FromSeconds, V0
	048 Move X8, [X20]
	049 Move X20, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X20
	057 Move X2, X31
	058 Call DateTime.op_Addition, X0, X1
	059 Move X1, X0
	060 Move X0, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X2, X31
	066 Move X30, [X31+48]
	067 Call DateTime.op_GreaterThan, X0, X1
	068 Return X0

Method: System.String ToString()

Disassembly:
	0x03479F8C BL 0x33C0DE4
	0x03479F90 CBZ X0, 0x3479FB0
	0x03479F94 LDR X23, [X24]
	0x03479F98 MOV X22, X0
	0x03479F9C MOV X1, X23
	0x03479FA0 BL 0x1C16E00
	0x03479FA4 MOV X1, X0
	0x03479FA8 CBNZ X0, 0x3479FB4
	0x03479FAC B 0x3479FE0
	0x03479FB0 MOV X1, X31
	0x03479FB4 MOV X0, X20
	0x03479FB8 MOV X2, X21
	0x03479FBC BL 0x1C24138
	0x03479FC0 CMP X21, X0
	0x03479FC4 MOV X21, X0
	0x03479FC8 B.NE 0x3479F80
	0x03479FCC LDP X20, X19, [X31 + 0x30]
	0x03479FD0 LDP X22, X21, [X31 + 0x20]
	0x03479FD4 LDP X24, X23, [X31 + 0x10]
	0x03479FD8 LDR X30, [X31], #0x40
	0x03479FDC RET
	0x03479FE0 MOV X0, X22
	0x03479FE4 MOV X1, X23
	0x03479FE8 BL 0x1C171E0
	0x03479FEC STR X30, [X31 - 0x40]!
	0x03479FF0 STP X24, X23, [X31 + 0x10]
	0x03479FF4 STP X22, X21, [X31 + 0x20]
	0x03479FF8 STP X20, X19, [X31 + 0x30]
	0x03479FFC ADRP X21, 0xF64000
	0x0347A000 LDRB W8, [X21 + 0x864]
	0x0347A004 MOV X19, X1
	0x0347A008 MOV X20, X0
	0x0347A00C TBNZ X8, 0x0, 0x347A024
	0x0347A010 ADRP X0, 0xCB6000
	0x0347A014 LDR X0, [X0 + 0xB38]
	0x0347A018 BL 0x1C16CF4
	0x0347A01C MOVZ W8, 0x1
	0x0347A020 STRB W8, [X21 + 0x864]
	0x0347A024 ADRP X24, 0xCB6000
	0x0347A028 LDR X21, [X20 + 0x40]!
	0x0347A02C LDR X24, [X24 + 0xB38]
	0x0347A030 MOV X0, X21
	0x0347A034 MOV X1, X19
	0x0347A038 MOV X2, X31
	0x0347A03C BL 0x33C0FDC
	0x0347A040 CBZ X0, 0x347A060
	0x0347A044 LDR X23, [X24]
	0x0347A048 MOV X22, X0
	0x0347A04C MOV X1, X23
	0x0347A050 BL 0x1C16E00
	0x0347A054 MOV X1, X0
	0x0347A058 CBNZ X0, 0x347A064
	0x0347A05C B 0x347A090
	0x0347A060 MOV X1, X31
	0x0347A064 MOV X0, X20
	0x0347A068 MOV X2, X21
	0x0347A06C BL 0x1C24138
	0x0347A070 CMP X21, X0
	0x0347A074 MOV X21, X0
	0x0347A078 B.NE 0x347A030
	0x0347A07C LDP X20, X19, [X31 + 0x30]
	0x0347A080 LDP X22, X21, [X31 + 0x20]
	0x0347A084 LDP X24, X23, [X31 + 0x10]
	0x0347A088 LDR X30, [X31], #0x40
	0x0347A08C RET
	0x0347A090 MOV X0, X22
	0x0347A094 MOV X1, X23
	0x0347A098 BL 0x1C171E0
	0x0347A09C STR X30, [X31 - 0x40]!
	0x0347A0A0 STP X24, X23, [X31 + 0x10]
	0x0347A0A4 STP X22, X21, [X31 + 0x20]
	0x0347A0A8 STP X20, X19, [X31 + 0x30]
	0x0347A0AC ADRP X21, 0xF63000
	0x0347A0B0 LDRB W8, [X21 + 0x865]
	0x0347A0B4 MOV X19, X1
	0x0347A0B8 MOV X20, X0
	0x0347A0BC TBNZ X8, 0x0, 0x347A0D4
	0x0347A0C0 ADRP X0, 0xCB6000
	0x0347A0C4 LDR X0, [X0 + 0xB40]
	0x0347A0C8 BL 0x1C16CF4
	0x0347A0CC MOVZ W8, 0x1
	0x0347A0D0 STRB W8, [X21 + 0x865]
	0x0347A0D4 ADRP X24, 0xCB6000
	0x0347A0D8 LDR X21, [X20 + 0x48]!
	0x0347A0DC LDR X24, [X24 + 0xB40]
	0x0347A0E0 MOV X0, X21
	0x0347A0E4 MOV X1, X19
	0x0347A0E8 MOV X2, X31
	0x0347A0EC BL 0x33C0DE4
	0x0347A0F0 CBZ X0, 0x347A110
	0x0347A0F4 LDR X23, [X24]
	0x0347A0F8 MOV X22, X0
	0x0347A0FC MOV X1, X23
	0x0347A100 BL 0x1C16E00
	0x0347A104 MOV X1, X0
	0x0347A108 CBNZ X0, 0x347A114
	0x0347A10C B 0x347A140
	0x0347A110 MOV X1, X31
	0x0347A114 MOV X0, X20
	0x0347A118 MOV X2, X21
	0x0347A11C BL 0x1C24138
	0x0347A120 CMP X21, X0
	0x0347A124 MOV X21, X0
	0x0347A128 B.NE 0x347A0E0
	0x0347A12C LDP X20, X19, [X31 + 0x30]
	0x0347A130 LDP X22, X21, [X31 + 0x20]
	0x0347A134 LDP X24, X23, [X31 + 0x10]
	0x0347A138 LDR X30, [X31], #0x40
	0x0347A13C RET
	0x0347A140 MOV X0, X22
	0x0347A144 MOV X1, X23
	0x0347A148 BL 0x1C171E0
	0x0347A14C STR X30, [X31 - 0x40]!
	0x0347A150 STP X24, X23, [X31 + 0x10]
	0x0347A154 STP X22, X21, [X31 + 0x20]
	0x0347A158 STP X20, X19, [X31 + 0x30]
	0x0347A15C ADRP X21, 0xF63000
	0x0347A160 LDRB W8, [X21 + 0x866]
	0x0347A164 MOV X19, X1
	0x0347A168 MOV X20, X0
	0x0347A16C TBNZ X8, 0x0, 0x347A184
	0x0347A170 ADRP X0, 0xCB6000
	0x0347A174 LDR X0, [X0 + 0xB40]
	0x0347A178 BL 0x1C16CF4
	0x0347A17C MOVZ W8, 0x1
	0x0347A180 STRB W8, [X21 + 0x866]
	0x0347A184 ADRP X24, 0xCB6000
	0x0347A188 LDR X21, [X20 + 0x48]!
	0x0347A18C LDR X24, [X24 + 0xB40]
	0x0347A190 MOV X0, X21
	0x0347A194 MOV X1, X19
	0x0347A198 MOV X2, X31
	0x0347A19C BL 0x33C0FDC
	0x0347A1A0 CBZ X0, 0x347A1C0
	0x0347A1A4 LDR X23, [X24]
	0x0347A1A8 MOV X22, X0
	0x0347A1AC MOV X1, X23
	0x0347A1B0 BL 0x1C16E00
	0x0347A1B4 MOV X1, X0
	0x0347A1B8 CBNZ X0, 0x347A1C4
	0x0347A1BC B 0x347A1F0
	0x0347A1C0 MOV X1, X31
	0x0347A1C4 MOV X0, X20
	0x0347A1C8 MOV X2, X21
	0x0347A1CC BL 0x1C24138
	0x0347A1D0 CMP X21, X0
	0x0347A1D4 MOV X21, X0
	0x0347A1D8 B.NE 0x347A190
	0x0347A1DC LDP X20, X19, [X31 + 0x30]
	0x0347A1E0 LDP X22, X21, [X31 + 0x20]
	0x0347A1E4 LDP X24, X23, [X31 + 0x10]
	0x0347A1E8 LDR X30, [X31], #0x40
	0x0347A1EC RET
	0x0347A1F0 MOV X0, X22
	0x0347A1F4 MOV X1, X23
	0x0347A1F8 BL 0x1C171E0
	0x0347A1FC STR X30, [X31 - 0x40]!
	0x0347A200 STP X24, X23, [X31 + 0x10]
	0x0347A204 STP X22, X21, [X31 + 0x20]
	0x0347A208 STP X20, X19, [X31 + 0x30]
	0x0347A20C ADRP X21, 0xF63000
	0x0347A210 LDRB W8, [X21 + 0x867]
	0x0347A214 MOV X19, X1
	0x0347A218 MOV X20, X0
	0x0347A21C TBNZ X8, 0x0, 0x347A234
	0x0347A220 ADRP X0, 0xCB6000
	0x0347A224 LDR X0, [X0 + 0xB48]
	0x0347A228 BL 0x1C16CF4
	0x0347A22C MOVZ W8, 0x1
	0x0347A230 STRB W8, [X21 + 0x867]
	0x0347A234 ADRP X24, 0xCB6000
	0x0347A238 LDR X21, [X20 + 0x50]!
	0x0347A23C LDR X24, [X24 + 0xB48]
	0x0347A240 MOV X0, X21
	0x0347A244 MOV X1, X19
	0x0347A248 MOV X2, X31
	0x0347A24C BL 0x33C0DE4
	0x0347A250 CBZ X0, 0x347A270
	0x0347A254 LDR X23, [X24]
	0x0347A258 MOV X22, X0
	0x0347A25C MOV X1, X23
	0x0347A260 BL 0x1C16E00
	0x0347A264 MOV X1, X0
	0x0347A268 CBNZ X0, 0x347A274
	0x0347A26C B 0x347A2A0
	0x0347A270 MOV X1, X31
	0x0347A274 MOV X0, X20
	0x0347A278 MOV X2, X21
	0x0347A27C BL 0x1C24138
	0x0347A280 CMP X21, X0
	0x0347A284 MOV X21, X0
	0x0347A288 B.NE 0x347A240
	0x0347A28C LDP X20, X19, [X31 + 0x30]
	0x0347A290 LDP X22, X21, [X31 + 0x20]
	0x0347A294 LDP X24, X23, [X31 + 0x10]
	0x0347A298 LDR X30, [X31], #0x40
	0x0347A29C RET
	0x0347A2A0 MOV X0, X22
	0x0347A2A4 MOV X1, X23
	0x0347A2A8 BL 0x1C171E0
	0x0347A2AC STR X30, [X31 - 0x40]!
	0x0347A2B0 STP X24, X23, [X31 + 0x10]
	0x0347A2B4 STP X22, X21, [X31 + 0x20]
	0x0347A2B8 STP X20, X19, [X31 + 0x30]
	0x0347A2BC ADRP X21, 0xF63000
	0x0347A2C0 LDRB W8, [X21 + 0x868]
	0x0347A2C4 MOV X19, X1
	0x0347A2C8 MOV X20, X0
	0x0347A2CC TBNZ X8, 0x0, 0x347A2E4
	0x0347A2D0 ADRP X0, 0xCB6000
	0x0347A2D4 LDR X0, [X0 + 0xB48]
	0x0347A2D8 BL 0x1C16CF4
	0x0347A2DC MOVZ W8, 0x1
	0x0347A2E0 STRB W8, [X21 + 0x868]
	0x0347A2E4 ADRP X24, 0xCB6000
	0x0347A2E8 LDR X21, [X20 + 0x50]!
	0x0347A2EC LDR X24, [X24 + 0xB48]
	0x0347A2F0 MOV X0, X21
	0x0347A2F4 MOV X1, X19
	0x0347A2F8 MOV X2, X31
	0x0347A2FC BL 0x33C0FDC
	0x0347A300 CBZ X0, 0x347A320
	0x0347A304 LDR X23, [X24]
	0x0347A308 MOV X22, X0
	0x0347A30C MOV X1, X23
	0x0347A310 BL 0x1C16E00
	0x0347A314 MOV X1, X0
	0x0347A318 CBNZ X0, 0x347A324
	0x0347A31C B 0x347A350
	0x0347A320 MOV X1, X31
	0x0347A324 MOV X0, X20
	0x0347A328 MOV X2, X21
	0x0347A32C BL 0x1C24138
	0x0347A330 CMP X21, X0
	0x0347A334 MOV X21, X0
	0x0347A338 B.NE 0x347A2F0
	0x0347A33C LDP X20, X19, [X31 + 0x30]
	0x0347A340 LDP X22, X21, [X31 + 0x20]
	0x0347A344 LDP X24, X23, [X31 + 0x10]
	0x0347A348 LDR X30, [X31], #0x40
	0x0347A34C RET
	0x0347A350 MOV X0, X22
	0x0347A354 MOV X1, X23
	0x0347A358 BL 0x1C171E0
	0x0347A35C STR X30, [X31 - 0x40]!
	0x0347A360 STP X24, X23, [X31 + 0x10]
	0x0347A364 STP X22, X21, [X31 + 0x20]
	0x0347A368 STP X20, X19, [X31 + 0x30]
	0x0347A36C ADRP X21, 0xF63000
	0x0347A370 LDRB W8, [X21 + 0x869]
	0x0347A374 MOV X19, X1
	0x0347A378 MOV X20, X0
	0x0347A37C TBNZ X8, 0x0, 0x347A394
	0x0347A380 ADRP X0, 0xC7A000
	0x0347A384 LDR X0, [X0 + 0x370]
	0x0347A388 BL 0x1C16CF4
	0x0347A38C MOVZ W8, 0x1
	0x0347A390 STRB W8, [X21 + 0x869]
	0x0347A394 ADRP X24, 0xC7A000
	0x0347A398 LDR X21, [X20 + 0x58]!
	0x0347A39C LDR X24, [X24 + 0x370]
	0x0347A3A0 MOV X0, X21
	0x0347A3A4 MOV X1, X19
	0x0347A3A8 MOV X2, X31
	0x0347A3AC BL 0x33C0DE4
	0x0347A3B0 CBZ X0, 0x347A3D0
	0x0347A3B4 LDR X23, [X24]
	0x0347A3B8 MOV X22, X0
	0x0347A3BC MOV X1, X23
	0x0347A3C0 BL 0x1C16E00
	0x0347A3C4 MOV X1, X0
	0x0347A3C8 CBNZ X0, 0x347A3D4
	0x0347A3CC B 0x347A400
	0x0347A3D0 MOV X1, X31
	0x0347A3D4 MOV X0, X20
	0x0347A3D8 MOV X2, X21
	0x0347A3DC BL 0x1C24138
	0x0347A3E0 CMP X21, X0
	0x0347A3E4 MOV X21, X0
	0x0347A3E8 B.NE 0x347A3A0
	0x0347A3EC LDP X20, X19, [X31 + 0x30]
	0x0347A3F0 LDP X22, X21, [X31 + 0x20]
	0x0347A3F4 LDP X24, X23, [X31 + 0x10]
	0x0347A3F8 LDR X30, [X31], #0x40
	0x0347A3FC RET
	0x0347A400 MOV X0, X22
	0x0347A404 MOV X1, X23
	0x0347A408 BL 0x1C171E0
	0x0347A40C STR X30, [X31 - 0x40]!
	0x0347A410 STP X24, X23, [X31 + 0x10]
	0x0347A414 STP X22, X21, [X31 + 0x20]
	0x0347A418 STP X20, X19, [X31 + 0x30]
	0x0347A41C ADRP X21, 0xF63000
	0x0347A420 LDRB W8, [X21 + 0x86A]
	0x0347A424 MOV X19, X1
	0x0347A428 MOV X20, X0
	0x0347A42C TBNZ X8, 0x0, 0x347A444
	0x0347A430 ADRP X0, 0xC7A000
	0x0347A434 LDR X0, [X0 + 0x370]
	0x0347A438 BL 0x1C16CF4
	0x0347A43C MOVZ W8, 0x1
	0x0347A440 STRB W8, [X21 + 0x86A]
	0x0347A444 ADRP X24, 0xC7A000
	0x0347A448 LDR X21, [X20 + 0x58]!
	0x0347A44C LDR X24, [X24 + 0x370]
	0x0347A450 MOV X0, X21
	0x0347A454 MOV X1, X19
	0x0347A458 MOV X2, X31
	0x0347A45C BL 0x33C0FDC
	0x0347A460 CBZ X0, 0x347A480
	0x0347A464 LDR X23, [X24]
	0x0347A468 MOV X22, X0
	0x0347A46C MOV X1, X23
	0x0347A470 BL 0x1C16E00
	0x0347A474 MOV X1, X0
	0x0347A478 CBNZ X0, 0x347A484
	0x0347A47C B 0x347A4B0
	0x0347A480 MOV X1, X31
	0x0347A484 MOV X0, X20
	0x0347A488 MOV X2, X21
	0x0347A48C BL 0x1C24138
	0x0347A490 CMP X21, X0
	0x0347A494 MOV X21, X0
	0x0347A498 B.NE 0x347A450
	0x0347A49C LDP X20, X19, [X31 + 0x30]
	0x0347A4A0 LDP X22, X21, [X31 + 0x20]
	0x0347A4A4 LDP X24, X23, [X31 + 0x10]
	0x0347A4A8 LDR X30, [X31], #0x40
	0x0347A4AC RET
	0x0347A4B0 MOV X0, X22
	0x0347A4B4 MOV X1, X23
	0x0347A4B8 BL 0x1C171E0
	0x0347A4BC STR X30, [X31 - 0x40]!
	0x0347A4C0 STP X24, X23, [X31 + 0x10]
	0x0347A4C4 STP X22, X21, [X31 + 0x20]
	0x0347A4C8 STP X20, X19, [X31 + 0x30]
	0x0347A4CC ADRP X21, 0xF63000
	0x0347A4D0 LDRB W8, [X21 + 0x86B]
	0x0347A4D4 MOV X19, X1
	0x0347A4D8 MOV X20, X0
	0x0347A4DC TBNZ X8, 0x0, 0x347A4F4
	0x0347A4E0 ADRP X0, 0xC7A000
	0x0347A4E4 LDR X0, [X0 + 0x158]
	0x0347A4E8 BL 0x1C16CF4
	0x0347A4EC MOVZ W8, 0x1
	0x0347A4F0 STRB W8, [X21 + 0x86B]
	0x0347A4F4 ADRP X24, 0xC7A000
	0x0347A4F8 LDR X21, [X20 + 0x60]!
	0x0347A4FC LDR X24, [X24 + 0x158]
	0x0347A500 MOV X0, X21
	0x0347A504 MOV X1, X19
	0x0347A508 MOV X2, X31
	0x0347A50C BL 0x33C0DE4
	0x0347A510 CBZ X0, 0x347A530
	0x0347A514 LDR X23, [X24]
	0x0347A518 MOV X22, X0
	0x0347A51C MOV X1, X23
	0x0347A520 BL 0x1C16E00
	0x0347A524 MOV X1, X0
	0x0347A528 CBNZ X0, 0x347A534
	0x0347A52C B 0x347A560
	0x0347A530 MOV X1, X31
	0x0347A534 MOV X0, X20
	0x0347A538 MOV X2, X21
	0x0347A53C BL 0x1C24138
	0x0347A540 CMP X21, X0
	0x0347A544 MOV X21, X0
	0x0347A548 B.NE 0x347A500
	0x0347A54C LDP X20, X19, [X31 + 0x30]
	0x0347A550 LDP X22, X21, [X31 + 0x20]
	0x0347A554 LDP X24, X23, [X31 + 0x10]
	0x0347A558 LDR X30, [X31], #0x40
	0x0347A55C RET
	0x0347A560 MOV X0, X22
	0x0347A564 MOV X1, X23
	0x0347A568 BL 0x1C171E0
	0x0347A56C STR X30, [X31 - 0x40]!
	0x0347A570 STP X24, X23, [X31 + 0x10]
	0x0347A574 STP X22, X21, [X31 + 0x20]
	0x0347A578 STP X20, X19, [X31 + 0x30]
	0x0347A57C ADRP X21, 0xF63000
	0x0347A580 LDRB W8, [X21 + 0x86C]
	0x0347A584 MOV X19, X1
	0x0347A588 MOV X20, X0
	0x0347A58C TBNZ X8, 0x0, 0x347A5A4
	0x0347A590 ADRP X0, 0xC7A000
	0x0347A594 LDR X0, [X0 + 0x158]
	0x0347A598 BL 0x1C16CF4
	0x0347A59C MOVZ W8, 0x1
	0x0347A5A0 STRB W8, [X21 + 0x86C]
	0x0347A5A4 ADRP X24, 0xC7A000
	0x0347A5A8 LDR X21, [X20 + 0x60]!
	0x0347A5AC LDR X24, [X24 + 0x158]
	0x0347A5B0 MOV X0, X21
	0x0347A5B4 MOV X1, X19
	0x0347A5B8 MOV X2, X31
	0x0347A5BC BL 0x33C0FDC
	0x0347A5C0 CBZ X0, 0x347A5E0
	0x0347A5C4 LDR X23, [X24]
	0x0347A5C8 MOV X22, X0
	0x0347A5CC MOV X1, X23
	0x0347A5D0 BL 0x1C16E00
	0x0347A5D4 MOV X1, X0
	0x0347A5D8 CBNZ X0, 0x347A5E4
	0x0347A5DC B 0x347A610
	0x0347A5E0 MOV X1, X31
	0x0347A5E4 MOV X0, X20
	0x0347A5E8 MOV X2, X21
	0x0347A5EC BL 0x1C24138
	0x0347A5F0 CMP X21, X0
	0x0347A5F4 MOV X21, X0
	0x0347A5F8 B.NE 0x347A5B0
	0x0347A5FC LDP X20, X19, [X31 + 0x30]
	0x0347A600 LDP X22, X21, [X31 + 0x20]
	0x0347A604 LDP X24, X23, [X31 + 0x10]
	0x0347A608 LDR X30, [X31], #0x40
	0x0347A60C RET
	0x0347A610 MOV X0, X22
	0x0347A614 MOV X1, X23
	0x0347A618 BL 0x1C171E0
	0x0347A61C STR X30, [X31 - 0x40]!
	0x0347A620 STP X24, X23, [X31 + 0x10]
	0x0347A624 STP X22, X21, [X31 + 0x20]
	0x0347A628 STP X20, X19, [X31 + 0x30]
	0x0347A62C ADRP X21, 0xF63000
	0x0347A630 LDRB W8, [X21 + 0x86D]
	0x0347A634 MOV X19, X1
	0x0347A638 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xF65000
	015 Move W8, [X20+2131]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {71}
	021 Move X0, 0xC7B000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xC7B000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xC7E000
	028 Move X0, [X0+400]
	029 Call 0x1C17CF4
	030 Move X0, 0xC7E000
	031 Move X0, [X0+408]
	032 Call 0x1C17CF4
	033 Move X0, 0xC7B000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0xC7D000
	037 Move X0, [X0+2656]
	038 Call 0x1C17CF4
	039 Move X0, 0xC7D000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xC7D000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xC7A000
	046 Move X0, [X0+2512]
	047 Call 0x1C17CF4
	048 Move X0, 0xC7A000
	049 Move X0, [X0+2760]
	050 Call 0x1C17CF4
	051 Move X0, 0xCA7000
	052 Move X0, [X0+864]
	053 Call 0x1C17CF4
	054 Move X0, 0xCB7000
	055 Move X0, [X0+2824]
	056 Call 0x1C17CF4
	057 Move X0, 0xC85000
	058 Move X0, [X0+1752]
	059 Call 0x1C17CF4
	060 Move X0, 0xCB7000
	061 Move X0, [X0+2832]
	062 Call 0x1C17CF4
	063 Move X0, 0xCB7000
	064 Move X0, [X0+2840]
	065 Call 0x1C17CF4
	066 Move X0, 0xCB7000
	067 Move X0, [X0+2848]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+2131], W8
	071 Move X20, [X19+64]
	072 Compare X20, 0
	073 JumpIfEqual {398}
	074 Move X9, 0xCA7000
	075 Move X10, 0xC7D000
	076 Move X8, [X20]
	077 Move X9, [X9+864]
	078 Move X10, [X10+400]
	079 Move X21, [X9]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X1, [X10]
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move X0, X20
	091 Move W2, W31
	092 Call 0x1C5D788
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add X8, X8, X9
	095 Add X0, X8, 312
	096 Move X29, 0xC7A000
	097 Move X26, 0xC7D000
	098 Move X27, 0xC7A000
	099 Move X28, 0xCB7000
	100 Move X25, 0xCB7000
	101 Move X24, 0xCB7000
	102 Move X29, [X29+3608]
	103 Move X26, [X26+408]
	104 Move X27, [X27+2760]
	105 Move X28, [X28+2824]
	106 Move X25, [X25+2832]
	107 Move X24, [X24+2840]
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X20
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X20, X0
	113 Move [X31+8], X21
	114 Move X0, X21
	115 Compare X20, 0
	116 JumpIfEqual {386}
	117 Move X8, [X20]
	118 Move X1, [X29]
	119 Move X21, X0
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move X0, X20
	130 Move W2, W31
	131 Call 0x1C5D788
	132 NotImplemented "Instruction LDRSW not yet implemented."
	133 Add X8, X8, X9
	134 Add X0, X8, 312
	135 Move X8, [X0]
	136 Move X1, [X0+8]
	137 Move X0, X20
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {190}
	143 Move X8, [X20]
	144 Move X1, [X26]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move X0, X20
	155 Move W2, W31
	156 Call 0x1C5D788
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Add X8, X8, X9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X1, [X0+8]
	162 Move X0, X20
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X23, X0
	165 Move X0, [X27]
	166 Move X22, X1
	167 Move W1, 6
	168 Call 0x1C17D6C
	169 Compare X0, 0
	170 JumpIfEqual {388}
	171 Move W8, [X0+24]
	172 Compare W8, 0
	173 JumpIfEqual {391}
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move [X0+32], X21
	176 Move X9, [X28]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move [X0+40], X9
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move [X0+48], X23
	181 Move X9, [X25]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move [X0+56], X9
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+64], X22
	186 Move X8, [X24]
	187 Move [X0+72], X8
	188 Move X1, X31
	189 Call String.Concat, X0
	190 Move X23, 0xC7C000
	191 Move X23, [X23+2656]
	192 Move X22, X31
	193 Compare X20, 0
	194 JumpIfEqual {218}
	195 Move X8, [X20]
	196 Move X10, 0xC7A000
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X10, [X10+3584]
	199 Move X1, [X10]
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move X0, X20
	209 Move W2, W31
	210 Call 0x1C5D788
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Add X8, X8, X9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X20
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Compare X22, 0
	219 JumpIfNotEqual {399}
	220 Move X8, 0xC85000
	221 Move X8, [X8+1752]
	222 Move X0, X21
	223 Move X2, X31
	224 Move X1, [X8]
	225 Call String.Concat, X0, X1
	226 Move X8, 0xC7A000
	227 Move X8, [X8+2512]
	228 Move X21, X0
	229 Move W1, 9
	230 Move X8, [X8]
	231 Move X0, X8
	232 Call 0x1C17D6C
	233 Compare X0, 0
	234 JumpIfEqual {398}
	235 Move X22, [X19+16]
	236 Move X20, X0
	237 Compare X22, 0
	238 JumpIfEqual {245}
	239 Move X8, [X20]
	240 Move X0, X22
	241 Move X1, [X8+64]
	242 Call 0x1C17E00
	243 Compare X0, 0
	244 JumpIfEqual {395}
	245 Move W8, [X20+24]
	246 Compare W8, 0
	247 JumpIfEqual {394}
	248 Move [X20+32], X22
	249 Move X9, 0xC7A000
	250 Move W8, [X19+24]
	251 Move X9, [X9+2904]
	252 Add X1, X31, 44
	253 Move [X31+44], W8
	254 Move X0, [X9]
	255 Call 0x1C17E04
	256 Move X22, X0
	257 Compare X0, 0
	258 JumpIfEqual {265}
	259 Move X8, [X20]
	260 Move X0, X22
	261 Move X1, [X8+64]
	262 Call 0x1C17E00
	263 Compare X0, 0
	264 JumpIfEqual {395}
	265 Move W8, [X20+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move [X20+40], X22
	268 Move X8, [X19+32]
	269 Move X0, [X23]
	270 Add X1, X31, 32
	271 Move [X31+32], X8
	272 Call 0x1C17E04
	273 Move X22, X0
	274 Compare X0, 0
	275 JumpIfEqual {282}
	276 Move X8, [X20]
	277 Move X0, X22
	278 Move X1, [X8+64]
	279 Call 0x1C17E00
	280 Compare X0, 0
	281 JumpIfEqual {395}
	282 Move W8, [X20+24]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move [X20+48], X22
	285 Move X8, [X19+40]
	286 Move X0, [X23]
	287 Add X1, X31, 24
	288 Move [X31+24], X8
	289 Call 0x1C17E04
	290 Move X22, X0
	291 Compare X0, 0
	292 JumpIfEqual {299}
	293 Move X8, [X20]
	294 Move X0, X22
	295 Move X1, [X8+64]
	296 Call 0x1C17E00
	297 Compare X0, 0
	298 JumpIfEqual {395}
	299 Move W8, [X20+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move [X20+56], X22
	302 Move X22, [X19+56]
	303 Compare X22, 0
	304 JumpIfEqual {312}
	305 Move X8, [X20]
	306 Move X0, X22
	307 Move X1, [X8+64]
	308 Call 0x1C17E00
	309 Compare X0, 0
	310 JumpIfEqual {395}
	311 Move W8, [X20+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move [X20+64], X22
	314 Move X8, [X19+48]
	315 Move X0, [X23]
	316 Add X1, X31, 16
	317 Move [X31+16], X8
	318 Call 0x1C17E04
	319 Move X22, X0
	320 Compare X0, 0
	321 JumpIfEqual {328}
	322 Move X8, [X20]
	323 Move X0, X22
	324 Move X1, [X8+64]
	325 Call 0x1C17E00
	326 Compare X0, 0
	327 JumpIfEqual {395}
	328 Move W8, [X20+24]
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move [X20+72], X22
	331 Compare X21, 0
	332 JumpIfEqual {340}
	333 Move X8, [X20]
	334 Move X0, X21
	335 Move X1, [X8+64]
	336 Call 0x1C17E00
	337 Compare X0, 0
	338 JumpIfEqual {395}
	339 Move W8, [X20+24]
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move [X20+80], X21
	342 Move X21, [X19+72]
	343 Compare X21, 0
	344 JumpIfEqual {352}
	345 Move X8, [X20]
	346 Move X0, X21
	347 Move X1, [X8+64]
	348 Call 0x1C17E00
	349 Compare X0, 0
	350 JumpIfEqual {395}
	351 Move W8, [X20+24]
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move [X20+88], X21
	354 Move X19, [X19+80]
	355 Compare X19, 0
	356 JumpIfEqual {364}
	357 Move X8, [X20]
	358 Move X0, X19
	359 Move X1, [X8+64]
	360 Call 0x1C17E00
	361 Compare X0, 0
	362 JumpIfEqual {395}
	363 Move W8, [X20+24]
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move [X20+96], X19
	366 Move X8, 0xCB7000
	367 Move X8, [X8+2848]
	368 Move X1, X20
	369 Move X2, X31
	370 Move X0, [X8]
	371 Call String.Format, X0, X1
	372 Move X20, [X31+128]
	373 Move X19, [X31+136]
	374 Move X22, [X31+112]
	375 Move X21, [X31+120]
	376 Move X24, [X31+96]
	377 Move X23, [X31+104]
	378 Move X26, [X31+80]
	379 Move X25, [X31+88]
	380 Move X28, [X31+64]
	381 Move X27, [X31+72]
	382 Move X29, [X31+48]
	383 Move X30, [X31+56]
	384 Add X31, X31, 144
	385 Return X0
	386 Call 0x1C17F20
	387 Call 0x1C17F28
	388 Call 0x1C17F20
	389 Call 0x1C17F28
	390 Call 0x1C17F28
	391 Call 0x1C17F28
	392 Call 0x1C17F28
	393 Call 0x1C17F28
	394 Call 0x1C17F28
	395 Call 0x1C17F44
	396 Move X1, X31
	397 Call 0x1C17DEC
	398 Call 0x1C17F20
	399 Move X0, X22
	400 Call 0x1C17F18
	401 Move X21, [X31+8]
	402 Move X23, 0xC7C000
	403 Move X23, [X23+2656]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Call 0x3EB2AD0
	406 Move X22, [X0]
	407 Call 0x3EB2AE0
	408 Move X19, X0
	409 Move X22, X31
	410 Move X19, X0
	411 Compare X20, 0
	412 JumpIfEqual {436}
	413 Move X8, [X20]
	414 Move X10, 0xC7A000
	415 NotImplemented "Instruction LDRH not yet implemented."
	416 Move X10, [X10+3584]
	417 Move X1, [X10]
	418 Compare X9, 0
	419 JumpIfEqual {426}
	420 Move X10, [X8+176]
	421 Add X10, X10, 8
	422 NotImplemented "Instruction LDUR not yet implemented."
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Subtract X9, X9, 1
	425 Add X10, X10, 16
	426 Move X0, X20
	427 Move W2, W31
	428 Call 0x1C5D788
	429 NotImplemented "Instruction LDRSW not yet implemented."
	430 Add X8, X8, X9
	431 Add X0, X8, 312
	432 Move X8, [X0]
	433 Move X1, [X0+8]
	434 Move X0, X20
	435 NotImplemented "Instruction BLR not yet implemented."
	436 Compare X22, 0
	437 JumpIfNotEqual {440}
	438 Move X0, X19
	439 Call 0x1D2D690
	440 Move X0, X22
	441 Call 0x1C17F18
	442 Call 0x1991590

Method: System.Void .ctor(System.String authToken, System.String refreshToken, System.Boolean created)

Disassembly:
	0x034694B8 LDR X1, [X8]
	0x034694BC BL 0x2677474
	0x034694C0 B 0x34696F4
	0x034694C4 ADRP X8, 0xCC7000
	0x034694C8 LDR X8, [X8 + 0x4F8]
	0x034694CC LDR X0, [X8]
	0x034694D0 BL 0x1C16F10
	0x034694D4 MOV X21, X0
	0x034694D8 MOV X1, X31
	0x034694DC BL 0x3446244
	0x034694E0 STR X21, [X19 + 0x48]
	0x034694E4 CBZ X21, 0x3469858
	0x034694E8 LDR X8, [X19 + 0x20]
	0x034694EC STR X8, [X21 + 0x10]
	0x034694F0 LDR X8, [X19 + 0x28]
	0x034694F4 STR X8, [X21 + 0x18]
	0x034694F8 LDR X8, [X19 + 0x30]
	0x034694FC STR X8, [X21 + 0x20]
	0x03469500 LDR X8, [X19 + 0x38]
	0x03469504 STR X8, [X21 + 0x28]
	0x03469508 CBZ X20, 0x346985C
	0x0346950C LDRB W8, [X20 + 0x10]
	0x03469510 CBZ W8, 0x34696F8
	0x03469514 LDR X8, [X19 + 0x48]
	0x03469518 CBZ X8, 0x3469860
	0x0346951C LDR X21, [X8 + 0x18]
	0x03469520 CBZ X21, 0x3469864
	0x03469524 ADRP X23, 0xC8B000
	0x03469528 LDR X8, [X21]
	0x0346952C LDR X23, [X23 + 0x818]
	0x03469530 LDRH W9, [X8 + 0x12E]
	0x03469534 LDR X1, [X23]
	0x03469538 CBZ X9, 0x346955C
	0x0346953C LDR X10, [X8 + 0xB0]
	0x03469540 ADD X10, X10, 0x8
	0x03469544 LDUR X11, [X10 - 0x8]
	0x03469548 CMP X11, X1
	0x0346954C B.EQ 0x346956C
	0x03469550 SUBS X9, X9, 0x1
	0x03469554 ADD X10, X10, 0x10
	0x03469558 B.NE 0x3469544
	0x0346955C MOVZ W2, 0x7
	0x03469560 MOV X0, X21
	0x03469564 BL 0x1C5C788
	0x03469568 B 0x346957C
	0x0346956C LDR W9, [X10]
	0x03469570 ADD W9, W9, 0x7
	0x03469574 ADD X8, X8, W9, 0x4, SXTW
	0x03469578 ADD X0, X8, 0x138
	0x0346957C LDP X8, X1, [X0]
	0x03469580 MOV X0, X21
	0x03469584 BLR X8
	0x03469588 MOV X1, X31
	0x0346958C BL 0x32277A8
	0x03469590 TBNZ X0, 0x0, 0x34696F4
	0x03469594 LDR X8, [X19 + 0x48]
	0x03469598 CBZ X8, 0x3469868
	0x0346959C ADRP X9, 0xC8B000
	0x034695A0 LDR X9, [X9 + 0x9F0]
	0x034695A4 LDR X21, [X8 + 0x18]
	0x034695A8 LDR X0, [X9]
	0x034695AC LDR W9, [X0 + 0xE0]
	0x034695B0 CBNZ W9, 0x34695B8
	0x034695B4 BL 0x1C16DFC
	0x034695B8 MOV X0, X31
	0x034695BC BL 0x33616A4
	0x034695C0 ADRP X22, 0xC8C000
	0x034695C4 LDR X22, [X22 + 0xA10]
	0x034695C8 MOV X8, X0
	0x034695CC STR X8, [X31 + 0x28]
	0x034695D0 LDR X0, [X22]
	0x034695D4 LDR W8, [X0 + 0xE0]
	0x034695D8 CBNZ W8, 0x34695E4
	0x034695DC BL 0x1C16DFC
	0x034695E0 LDR X0, [X22]
	0x034695E4 LDR X8, [X0 + 0xB8]
	0x034695E8 LDR X1, [X8]
	0x034695EC ADD X0, X31, 0x28
	0x034695F0 MOV X2, X31
	0x034695F4 BL 0x335FC68
	0x034695F8 CBZ X21, 0x346986C
	0x034695FC LDR X8, [X21]
	0x03469600 LDR X1, [X23]
	0x03469604 MOV X22, X0
	0x03469608 LDRH W9, [X8 + 0x12E]
	0x0346960C CBZ X9, 0x3469630
	0x03469610 LDR X10, [X8 + 0xB0]
	0x03469614 ADD X10, X10, 0x8
	0x03469618 LDUR X11, [X10 - 0x8]
	0x0346961C CMP X11, X1
	0x03469620 B.EQ 0x3469640

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xF75000
	011 Move X23, 0xC8C000
	012 Move W8, [X24+2132]
	013 Move X23, [X23+2544]
	014 Move W22, W3
	015 Move X19, X2
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0xC8C000
	023 Move X0, [X0+2544]
	024 Call 0x1C17CF4
	025 Move X0, 0xC8C000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0xC8C000
	029 Move X0, [X0+1744]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC7000
	032 Move X0, [X0+2672]
	033 Call 0x1C17CF4
	034 Move X0, 0xC8D000
	035 Move X0, [X0+1392]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+2132], W8
	039 Move X24, 0xCC7000
	040 Move X24, [X24+2672]
	041 Move X0, X21
	042 Move X1, X31
	043 And W22, W22, 1
	044 Move [X31+8], X31
	045 Call Object..ctor, X0
	046 Move [X21+24], W22
	047 Move X0, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X25, 0xC8D000
	053 Move X25, [X25+1392]
	054 Move X0, X31
	055 Call DateTime.get_UtcNow
	056 Move X8, [X24]
	057 Move X22, X0
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {64}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X8, [X24]
	064 Move X8, [X8+184]
	065 Move X24, 0xC8C000
	066 Move X23, 0xC8C000
	067 Move X0, X22
	068 Move X1, [X8]
	069 Move X24, [X24+1744]
	070 Move X23, [X23+1728]
	071 Move X2, X31
	072 Call DateTime.op_Subtraction, X0, X1
	073 Move X8, [X25]
	074 Move [X31+8], X0
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Add X0, X31, 8
	081 Move X1, X31
	082 Call TimeSpan.get_Seconds, X0
	083 Move X8, W0
	084 Move [X21+32], X8
	085 Move [X21+48], X31
	086 Move X0, [X24]
	087 Call 0x1C17F10
	088 Move X1, [X23]
	089 Move X22, X0
	090 Call Dictionary`2<Object, Object>..ctor, X0
	091 Move X0, X21
	092 Move X1, X20
	093 Move X2, X19
	094 Move [X21+64], X22
	095 Call Session.Update, X0, X1, X2
	096 Move X20, [X31+64]
	097 Move X19, [X31+72]
	098 Move X22, [X31+48]
	099 Move X21, [X31+56]
	100 Move X24, [X31+32]
	101 Move X23, [X31+40]
	102 Move X30, [X31+16]
	103 Move X25, [X31+24]
	104 Add X31, X31, 80
	105 Return 

Method: System.Void Update(System.String authToken, System.String refreshToken)

Disassembly:
	0x03469048 LDR X8, [X31 + 0x20]
	0x0346904C STR X8, [X19 + 0x50]
	0x03469050 LDR X0, [X25]
	0x03469054 LDR W8, [X0 + 0xE0]
	0x03469058 CBNZ W8, 0x3469060
	0x0346905C BL 0x1C16DFC
	0x03469060 ADRP X8, 0xCC7000
	0x03469064 LDR X8, [X8 + 0x4C0]
	0x03469068 ADD X0, X19, 0x8
	0x0346906C LDR X3, [X8]
	0x03469070 ADD X1, X31, 0x20
	0x03469074 MOV X2, X19
	0x03469078 BL 0x2188D18
	0x0346907C B 0x34691BC
	0x03469080 CBZ X20, 0x34691E0
	0x03469084 ADRP X8, 0xC92000
	0x03469088 LDR X8, [X8 + 0x818]
	0x0346908C LDR X21, [X20 + 0x58]
	0x03469090 LDR X23, [X19 + 0x48]
	0x03469094 LDR X0, [X8]
	0x03469098 BL 0x1C16F10
	0x0346909C ADRP X8, 0xCC7000
	0x034690A0 LDR X8, [X8 + 0x4D0]
	0x034690A4 MOV X22, X0
	0x034690A8 LDR X2, [X8]
	0x034690AC MOV X1, X23
	0x034690B0 MOV X3, X31
	0x034690B4 BL 0x2D27AA8
	0x034690B8 LDR X8, [X19 + 0x48]
	0x034690BC CBZ X8, 0x34691D4
	0x034690C0 ADRP X9, 0xCC6000
	0x034690C4 LDR X23, [X19 + 0x40]
	0x034690C8 LDR X9, [X9 + 0x7C8]
	0x034690CC CBNZ X23, 0x34690D4
	0x034690D0 LDR X23, [X20 + 0x18]
	0x034690D4 LDR X20, [X8 + 0x18]
	0x034690D8 LDR X1, [X8 + 0x28]
	0x034690DC LDR X2, [X9]
	0x034690E0 STP X31, X31, [X31 + 0x8]
	0x034690E4 ADD X0, X31, 0x8
	0x034690E8 BL 0x242E368
	0x034690EC ADRP X8, 0xCC6000
	0x034690F0 LDR X8, [X8 + 0x7D0]
	0x034690F4 LDR X0, [X8]
	0x034690F8 BL 0x1C16F10
	0x034690FC LDP X3, X4, [X31 + 0x8]
	0x03469100 MOV X24, X0
	0x03469104 MOV X1, X20
	0x03469108 MOV X2, X23
	0x0346910C BL 0x3465404
	0x03469110 CBZ X21, 0x34691D8
	0x03469114 MOV X0, X21
	0x03469118 MOV X1, X22
	0x0346911C MOV X2, X24
	0x03469120 BL 0x3465B68
	0x03469124 CBZ X0, 0x34691DC
	0x03469128 MOV X1, X31
	0x0346912C BL 0x33ED394
	0x03469130 STR X0, [X31 + 0x18]
	0x03469134 ADD X0, X31, 0x18
	0x03469138 MOV X1, X31
	0x0346913C BL 0x32C3A80
	0x03469140 TBZ X0, 0x0, 0x3469180
	0x03469144 ADD X0, X31, 0x18
	0x03469148 MOV X1, X31
	0x0346914C BL 0x32C3B4C
	0x03469150 MOVN W8, 0x1
	0x03469154 STR W8, [X19]
	0x03469158 STR X31, [X19 + 0x48]
	0x0346915C LDR X0, [X25]
	0x03469160 ADD X19, X19, 0x8
	0x03469164 LDR W8, [X0 + 0xE0]
	0x03469168 CBNZ W8, 0x3469170
	0x0346916C BL 0x1C16DFC
	0x03469170 MOV X0, X19
	0x03469174 MOV X1, X31
	0x03469178 BL 0x32C4864
	0x0346917C B 0x34691BC
	0x03469180 MOVZ W8, 0x1
	0x03469184 STR W8, [X19]
	0x03469188 LDR X8, [X31 + 0x18]
	0x0346918C STR X8, [X19 + 0x58]
	0x03469190 LDR X0, [X25]
	0x03469194 LDR W8, [X0 + 0xE0]
	0x03469198 CBNZ W8, 0x34691A0
	0x0346919C BL 0x1C16DFC
	0x034691A0 ADRP X8, 0xCC7000
	0x034691A4 LDR X8, [X8 + 0x4C8]
	0x034691A8 ADD X0, X19, 0x8
	0x034691AC LDR X3, [X8]
	0x034691B0 ADD X1, X31, 0x18
	0x034691B4 MOV X2, X19
	0x034691B8 BL 0x218A3DC
	0x034691BC LDP X20, X19, [X31 + 0x60]
	0x034691C0 LDP X22, X21, [X31 + 0x50]
	0x034691C4 LDP X24, X23, [X31 + 0x40]
	0x034691C8 LDP X30, X25, [X31 + 0x30]
	0x034691CC ADD X31, X31, 0x70
	0x034691D0 RET
	0x034691D4 BL 0x1C16F20
	0x034691D8 BL 0x1C16F20
	0x034691DC BL 0x1C16F20
	0x034691E0 BL 0x1C16F20
	0x034691E4 BL 0x1C16F20
	0x034691E8 BL 0x1C16F20
	0x034691EC BL 0x1C16F20
	0x034691F0 BL 0x1C16F20
	0x034691F4 BL 0x1C16F20
	0x034691F8 BL 0x1C16F20
	0x034691FC BL 0x1C16F20
	0x03469200 BL 0x1C16F20
	0x03469204 B 0x3469278
	0x03469208 B 0x3469278
	0x0346920C B 0x3469278
	0x03469210 B 0x3469278
	0x03469214 B 0x3469278
	0x03469218 B 0x3469278
	0x0346921C B 0x3469278
	0x03469220 B 0x3469278
	0x03469224 B 0x3469278
	0x03469228 B 0x3469278
	0x0346922C B 0x3469278
	0x03469230 B 0x3469278
	0x03469234 B 0x3469278
	0x03469238 B 0x3469278
	0x0346923C B 0x3469278
	0x03469240 B 0x3469278
	0x03469244 B 0x3469278
	0x03469248 B 0x3469278
	0x0346924C B 0x3469278
	0x03469250 B 0x3469278
	0x03469254 B 0x3469278
	0x03469258 B 0x3469278
	0x0346925C B 0x3469278
	0x03469260 B 0x3469278
	0x03469264 B 0x3469278
	0x03469268 B 0x3469278
	0x0346926C B 0x3469278
	0x03469270 B 0x3469278
	0x03469274 B 0x3469278
	0x03469278 MOV X20, X0
	0x0346927C CMP W1, 0x1
	0x03469280 B.NE 0x3469314
	0x03469284 MOV X0, X20
	0x03469288 BL 0x3EB1AD0
	0x0346928C MOV X20, X0
	0x03469290 ADRP X0, 0xC8A000
	0x03469294 LDR X0, [X0 + 0x7D0]
	0x03469298 BL 0x1C16D08
	0x0346929C LDR X8, [X20]
	0x034692A0 LDR X1, [X8]
	0x034692A4 BL 0x1C17270
	0x034692A8 TBZ X0, 0x0, 0x34692EC
	0x034692AC LDR X20, [X20]
	0x034692B0 BL 0x3EB1AE0
	0x034692B4 MOVN W8, 0x1
	0x034692B8 STR X31, [X19 + 0x48]
	0x034692BC STR W8, [X19], #0x8
	0x034692C0 ADRP X0, 0xC8D000
	0x034692C4 LDR X0, [X0 + 0x280]
	0x034692C8 BL 0x1C16D08
	0x034692CC LDR W8, [X0 + 0xE0]
	0x034692D0 CBNZ W8, 0x34692D8
	0x034692D4 BL 0x1C16DFC
	0x034692D8 MOV X0, X19
	0x034692DC MOV X1, X20
	0x034692E0 MOV X2, X31
	0x034692E4 BL 0x32C4908
	0x034692E8 B 0x34691BC
	0x034692EC MOVZ W0, 0x8
	0x034692F0 BL 0x3EB1AF0
	0x034692F4 LDR X8, [X20]
	0x034692F8 STR X8, [X0]
	0x034692FC ADRP X1, 0xA4B000
	0x03469300 ADD X1, X1, 0xE58
	0x03469304 MOV X2, X31
	0x03469308 BL 0x3EB1B00
	0x0346930C MOV X20, X0
	0x03469310 BL 0x3EB1AE0
	0x03469314 MOV X0, X20
	0x03469318 BL 0x1D2C690
	0x0346931C BL 0x1990590
	0x03469320 STR X30, [X31 - 0x30]!
	0x03469324 STP X22, X21, [X31 + 0x10]
	0x03469328 STP X20, X19, [X31 + 0x20]
	0x0346932C ADRP X21, 0xF74000
	0x03469330 ADRP X22, 0xC8D000
	0x03469334 LDRB W8, [X21 + 0x7CC]
	0x03469338 LDR X22, [X22 + 0x280]
	0x0346933C MOV X19, X1
	0x03469340 MOV X20, X0
	0x03469344 TBNZ X8, 0x0, 0x346935C
	0x03469348 ADRP X0, 0xC8D000
	0x0346934C LDR X0, [X0 + 0x280]
	0x03469350 BL 0x1C16CF4
	0x03469354 MOVZ W8, 0x1
	0x03469358 STRB W8, [X21 + 0x7CC]
	0x0346935C LDR X0, [X22]
	0x03469360 LDR W8, [X0 + 0xE0]
	0x03469364 CBNZ W8, 0x346936C
	0x03469368 BL 0x1C16DFC
	0x0346936C ADD X0, X20, 0x8
	0x03469370 MOV X1, X19
	0x03469374 LDP X20, X19, [X31 + 0x20]
	0x03469378 LDP X22, X21, [X31 + 0x10]
	0x0346937C MOV X2, X31
	0x03469380 LDR X30, [X31], #0x30
	0x03469384 B 0x32C477C
	0x03469388 SUB X31, X31, 0x70
	0x0346938C STP X30, X25, [X31 + 0x30]
	0x03469390 STP X24, X23, [X31 + 0x40]
	0x03469394 STP X22, X21, [X31 + 0x50]
	0x03469398 STP X20, X19, [X31 + 0x60]
	0x0346939C ADRP X20, 0xF74000
	0x034693A0 LDRB W8, [X20 + 0x7CD]
	0x034693A4 MOV X19, X0
	0x034693A8 TBNZ X8, 0x0, 0x346945C
	0x034693AC ADRP X0, 0xCC7000
	0x034693B0 LDR X0, [X0 + 0x4E0]
	0x034693B4 BL 0x1C16CF4
	0x034693B8 ADRP X0, 0xCC7000
	0x034693BC LDR X0, [X0 + 0x4E8]
	0x034693C0 BL 0x1C16CF4
	0x034693C4 ADRP X0, 0xC8D000
	0x034693C8 LDR X0, [X0 + 0x280]
	0x034693CC BL 0x1C16CF4
	0x034693D0 ADRP X0, 0xC8C000
	0x034693D4 LDR X0, [X0 + 0xA10]
	0x034693D8 BL 0x1C16CF4
	0x034693DC ADRP X0, 0xC8B000
	0x034693E0 LDR X0, [X0 + 0x9F0]
	0x034693E4 BL 0x1C16CF4
	0x034693E8 ADRP X0, 0xC92000
	0x034693EC LDR X0, [X0 + 0x818]
	0x034693F0 BL 0x1C16CF4
	0x034693F4 ADRP X0, 0xC8B000
	0x034693F8 LDR X0, [X0 + 0x818]
	0x034693FC BL 0x1C16CF4
	0x03469400 ADRP X0, 0xCC6000
	0x03469404 LDR X0, [X0 + 0x7C8]
	0x03469408 BL 0x1C16CF4
	0x0346940C ADRP X0, 0xCC6000
	0x03469410 LDR X0, [X0 + 0x7D0]
	0x03469414 BL 0x1C16CF4
	0x03469418 ADRP X0, 0xC8B000
	0x0346941C LDR X0, [X0 + 0x830]
	0x03469420 BL 0x1C16CF4
	0x03469424 ADRP X0, 0xC8B000
	0x03469428 LDR X0, [X0 + 0x838]
	0x0346942C BL 0x1C16CF4
	0x03469430 ADRP X0, 0xC8B000
	0x03469434 LDR X0, [X0 + 0x840]
	0x03469438 BL 0x1C16CF4
	0x0346943C ADRP X0, 0xCC7000
	0x03469440 LDR X0, [X0 + 0x4F0]
	0x03469444 BL 0x1C16CF4
	0x03469448 ADRP X0, 0xCC7000
	0x0346944C LDR X0, [X0 + 0x4F8]
	0x03469450 BL 0x1C16CF4
	0x03469454 MOVZ W8, 0x1
	0x03469458 STRB W8, [X20 + 0x7CD]
	0x0346945C STP X31, X31, [X31 + 0x20]
	0x03469460 STR X31, [X31 + 0x18]
	0x03469464 ADRP X25, 0xC8D000
	0x03469468 LDR W8, [X19]
	0x0346946C LDR X20, [X19 + 0x20]
	0x03469470 LDR X25, [X25 + 0x280]
	0x03469474 CBZ W8, 0x3469498
	0x03469478 CMP W8, 0x1
	0x0346947C B.NE 0x34694C4
	0x03469480 LDR X8, [X19 + 0x58]
	0x03469484 MOVN W9, 0x0
	0x03469488 STR X8, [X31 + 0x18]
	0x0346948C STR X31, [X19 + 0x58]
	0x03469490 STR W9, [X19]
	0x03469494 B 0x34697B8
	0x03469498 LDR X8, [X19 + 0x50]
	0x0346949C MOVN W9, 0x0
	0x034694A0 STR X8, [X31 + 0x20]
	0x034694A4 STR X31, [X19 + 0x50]
	0x034694A8 STR W9, [X19]
	0x034694AC ADRP X8, 0xC8B000
	0x034694B0 LDR X8, [X8 + 0x830]
	0x034694B4 ADD X0, X31, 0x20

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X22, 0xF75000
	015 Move X24, 0xCC7000
	016 Move W8, [X22+2133]
	017 Move X24, [X24+2672]
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {78}
	025 Move X0, 0xC94000
	026 Move X0, [X0+2536]
	027 Call 0x1C17CF4
	028 Move X0, 0xC8D000
	029 Move X0, [X0+544]
	030 Call 0x1C17CF4
	031 Move X0, 0xC90000
	032 Move X0, [X0+1792]
	033 Call 0x1C17CF4
	034 Move X0, 0xC8D000
	035 Move X0, [X0+616]
	036 Call 0x1C17CF4
	037 Move X0, 0xC8B000
	038 Move X0, [X0+1824]
	039 Call 0x1C17CF4
	040 Move X0, 0xC90000
	041 Move X0, [X0+1800]
	042 Call 0x1C17CF4
	043 Move X0, 0xC90000
	044 Move X0, [X0+1808]
	045 Call 0x1C17CF4
	046 Move X0, 0xC90000
	047 Move X0, [X0+1816]
	048 Call 0x1C17CF4
	049 Move X0, 0xCBB000
	050 Move X0, [X0+2784]
	051 Call 0x1C17CF4
	052 Move X0, 0xC8E000
	053 Move X0, [X0+424]
	054 Call 0x1C17CF4
	055 Move X0, 0xC90000
	056 Move X0, [X0+1824]
	057 Call 0x1C17CF4
	058 Move X0, 0xC90000
	059 Move X0, [X0+1832]
	060 Call 0x1C17CF4
	061 Move X0, 0xCC7000
	062 Move X0, [X0+2672]
	063 Call 0x1C17CF4
	064 Move X0, 0xCC8000
	065 Move X0, [X0+1152]
	066 Call 0x1C17CF4
	067 Move X0, 0xCC8000
	068 Move X0, [X0+1160]
	069 Call 0x1C17CF4
	070 Move X0, 0xCC8000
	071 Move X0, [X0+1168]
	072 Call 0x1C17CF4
	073 Move X0, 0xCC8000
	074 Move X0, [X0+1176]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X22+2133], W8
	078 NotImplemented "Instruction MOVI not yet implemented."
	079 Move [X31+80], X31
	080 Move [X31+48], V0
	081 Move [X31+56], V0
	082 Move [X19+16], X21
	083 Move [X19+56], X20
	084 Move X0, [X24]
	085 Move X25, 0xC8E000
	086 Move W8, [X0+224]
	087 Move X25, [X25+424]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X21
	092 Call Session.JwtUnpack, X0
	093 Move X1, [X25]
	094 Call JsonParser.FromJson, X0
	095 Compare X0, 0
	096 JumpIfEqual {284}
	097 Move X27, 0xCC8000
	098 Move X28, 0xC8D000
	099 Move X27, [X27+1176]
	100 Move X28, [X28+616]
	101 Move X26, 0xC94000
	102 Move X23, 0xCC8000
	103 Move X1, [X27]
	104 Move X2, [X28]
	105 Move X26, [X26+2536]
	106 Move X23, [X23+1160]
	107 Move X21, X0
	108 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	109 Move X8, [X26]
	110 Move X22, X0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X0, X22
	117 Move X1, X31
	118 Call Convert.ToInt64, X0
	119 Move [X19+40], X0
	120 Move X1, [X23]
	121 Move X2, [X28]
	122 Move X0, X21
	123 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	124 Compare X0, 0
	125 JumpIfEqual {284}
	126 Move X8, [X0]
	127 Move X22, 0xCC8000
	128 Move X9, [X8+360]
	129 Move X1, [X8+368]
	130 Move X22, [X22+1152]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move [X19+72], X0
	133 Move X1, [X22]
	134 Move X2, [X28]
	135 Move X0, X21
	136 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	137 Compare X0, 0
	138 JumpIfEqual {284}
	139 Move X8, [X0]
	140 Move X22, 0xCC8000
	141 Move X23, 0xC8D000
	142 Move X9, [X8+360]
	143 Move X1, [X8+368]
	144 Move X22, [X22+1168]
	145 Move X23, [X23+544]
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move [X19+80], X0
	148 Move X1, [X22]
	149 Move X2, [X23]
	150 Move X0, X21
	151 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {238}
	156 Move X1, [X22]
	157 Move X2, [X28]
	158 Move X0, X21
	159 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	160 Compare X0, 0
	161 JumpIfEqual {238}
	162 Move X8, 0xC8B000
	163 Move X8, [X8+1824]
	164 Move X9, [X0]
	165 Move X8, [X8]
	166 Move W11, [X9+304]
	167 Move W10, [X8+304]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, [X9+200]
	170 Add X9, X9, X10
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, 0xC90000
	174 Move X8, [X8+1792]
	175 Move X1, [X8]
	176 Add X8, X31, 8
	177 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 Move X8, [X31+40]
	181 Move X29, 0xC90000
	182 Move X29, [X29+1808]
	183 Move [X31+48], V0
	184 Move [X31+56], V1
	185 Move [X31+80], X8
	186 Move X24, 0xCBB000
	187 Move X24, [X24+2784]
	188 Move X1, [X29]
	189 Add X0, X31, 48
	190 Call Enumerator<Object, Object>.MoveNext, X0
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {231}
	195 Move X0, [X31+72]
	196 Compare X0, 0
	197 JumpIfEqual {285}
	198 Move X8, [X0]
	199 Move X21, [X31+64]
	200 Move X22, [X19+64]
	201 Move X9, [X8+360]
	202 Move X1, [X8+368]
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Compare X22, 0
	205 JumpIfEqual {286}
	206 Move X8, [X22]
	207 Move X1, [X24]
	208 Move X23, X0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 1
	219 Move X0, X22
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 1
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X3, [X0+8]
	227 Move X0, X22
	228 Move X1, X21
	229 Move X2, X23
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X8, 0xC90000
	232 Move X8, [X8+1800]
	233 Add X0, X31, 48
	234 Move X1, [X8]
	235 Call Enumerator<Object, Object>.Dispose, X0
	236 Move X24, 0xCC7000
	237 Move X24, [X24+2672]
	238 Move X0, X20
	239 Move X1, X31
	240 Call String.IsNullOrEmpty, X0
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfEqual {270}
	245 Move X0, [X24]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X0, X20
	251 Call Session.JwtUnpack, X0
	252 Move X1, [X25]
	253 Call JsonParser.FromJson, X0
	254 Compare X0, 0
	255 JumpIfEqual {284}
	256 Move X1, [X27]
	257 Move X2, [X28]
	258 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	259 Move X8, [X26]
	260 Move X20, X0
	261 Move W9, [X8+224]
	262 Compare W9, 0
	263 JumpIfNotEqual {266}
	264 Move X0, X8
	265 Call 0x1C17DFC
	266 Move X0, X20
	267 Move X1, X31
	268 Call Convert.ToInt64, X0
	269 Move [X19+48], X0
	270 Move X20, [X31+176]
	271 Move X19, [X31+184]
	272 Move X22, [X31+160]
	273 Move X21, [X31+168]
	274 Move X24, [X31+144]
	275 Move X23, [X31+152]
	276 Move X26, [X31+128]
	277 Move X25, [X31+136]
	278 Move X28, [X31+112]
	279 Move X27, [X31+120]
	280 Move X29, [X31+96]
	281 Move X30, [X31+104]
	282 Add X31, X31, 192
	283 Return 
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 Move X21, X0
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X0, X21
	290 Call 0x3EB2AD0
	291 Move X22, [X0]
	292 Call 0x3EB2AE0
	293 Move X8, 0xC90000
	294 Move X8, [X8+1800]
	295 Add X0, X31, 48
	296 Move X1, [X8]
	297 Call Enumerator<Object, Object>.Dispose, X0
	298 Move X24, 0xCC7000
	299 Move X24, [X24+2672]
	300 Compare X22, 0
	301 JumpIfEqual {238}
	302 Move X0, X22
	303 Call 0x1C17F18
	304 Move X22, X31
	305 Move X21, X0
	306 Move X8, 0xC90000
	307 Move X8, [X8+1800]
	308 Move X1, [X8]
	309 Add X0, X31, 48
	310 Call Enumerator<Object, Object>.Dispose, X0
	311 Compare X22, 0
	312 JumpIfNotEqual {315}
	313 Move X0, X21
	314 Call 0x1D2D690
	315 Move X0, X22
	316 Call 0x1C17F18
	317 Call 0x1991590

Method: Nakama.ISession Restore(System.String authToken, System.String refreshToken = null)

Disassembly:
	0x0347A7B8 LDR X21, [X20 + 0x70]!
	0x0347A7BC LDR X24, [X24 + 0xB58]
	0x0347A7C0 MOV X0, X21
	0x0347A7C4 MOV X1, X19
	0x0347A7C8 MOV X2, X31
	0x0347A7CC BL 0x33C0DE4
	0x0347A7D0 CBZ X0, 0x347A7F0
	0x0347A7D4 LDR X23, [X24]
	0x0347A7D8 MOV X22, X0
	0x0347A7DC MOV X1, X23
	0x0347A7E0 BL 0x1C16E00
	0x0347A7E4 MOV X1, X0
	0x0347A7E8 CBNZ X0, 0x347A7F4
	0x0347A7EC B 0x347A820
	0x0347A7F0 MOV X1, X31
	0x0347A7F4 MOV X0, X20
	0x0347A7F8 MOV X2, X21
	0x0347A7FC BL 0x1C24138
	0x0347A800 CMP X21, X0
	0x0347A804 MOV X21, X0
	0x0347A808 B.NE 0x347A7C0
	0x0347A80C LDP X20, X19, [X31 + 0x30]
	0x0347A810 LDP X22, X21, [X31 + 0x20]
	0x0347A814 LDP X24, X23, [X31 + 0x10]
	0x0347A818 LDR X30, [X31], #0x40
	0x0347A81C RET
	0x0347A820 MOV X0, X22
	0x0347A824 MOV X1, X23
	0x0347A828 BL 0x1C171E0
	0x0347A82C STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF64000
	006 Move W8, [X21+2134]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xCB6000
	014 Move X0, [X0+2672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2134], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call String.IsNullOrEmpty, X0
	021 Move X21, X31
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {35}
	026 Move X8, 0xCB6000
	027 Move X8, [X8+2672]
	028 Move X0, [X8]
	029 Call 0x1C17F10
	030 Move X1, X20
	031 Move X2, X19
	032 Move W3, W31
	033 Move X21, X0
	034 Call Session..ctor, X0, X1, X2, X3
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X0, X21
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0

Method: System.String JwtUnpack(System.String jwt)

Disassembly:
	0x0347A63C TBNZ X8, 0x0, 0x347A654
	0x0347A640 ADRP X0, 0xCB6000
	0x0347A644 LDR X0, [X0 + 0xB50]
	0x0347A648 BL 0x1C16CF4
	0x0347A64C MOVZ W8, 0x1
	0x0347A650 STRB W8, [X21 + 0x86D]
	0x0347A654 ADRP X24, 0xCB6000
	0x0347A658 LDR X21, [X20 + 0x68]!
	0x0347A65C LDR X24, [X24 + 0xB50]
	0x0347A660 MOV X0, X21
	0x0347A664 MOV X1, X19
	0x0347A668 MOV X2, X31
	0x0347A66C BL 0x33C0DE4
	0x0347A670 CBZ X0, 0x347A690
	0x0347A674 LDR X23, [X24]
	0x0347A678 MOV X22, X0
	0x0347A67C MOV X1, X23
	0x0347A680 BL 0x1C16E00
	0x0347A684 MOV X1, X0
	0x0347A688 CBNZ X0, 0x347A694
	0x0347A68C B 0x347A6C0
	0x0347A690 MOV X1, X31
	0x0347A694 MOV X0, X20
	0x0347A698 MOV X2, X21
	0x0347A69C BL 0x1C24138
	0x0347A6A0 CMP X21, X0
	0x0347A6A4 MOV X21, X0
	0x0347A6A8 B.NE 0x347A660
	0x0347A6AC LDP X20, X19, [X31 + 0x30]
	0x0347A6B0 LDP X22, X21, [X31 + 0x20]
	0x0347A6B4 LDP X24, X23, [X31 + 0x10]
	0x0347A6B8 LDR X30, [X31], #0x40
	0x0347A6BC RET
	0x0347A6C0 MOV X0, X22
	0x0347A6C4 MOV X1, X23
	0x0347A6C8 BL 0x1C171E0
	0x0347A6CC STR X30, [X31 - 0x40]!
	0x0347A6D0 STP X24, X23, [X31 + 0x10]
	0x0347A6D4 STP X22, X21, [X31 + 0x20]
	0x0347A6D8 STP X20, X19, [X31 + 0x30]
	0x0347A6DC ADRP X21, 0xF63000
	0x0347A6E0 LDRB W8, [X21 + 0x86E]
	0x0347A6E4 MOV X19, X1
	0x0347A6E8 MOV X20, X0
	0x0347A6EC TBNZ X8, 0x0, 0x347A704
	0x0347A6F0 ADRP X0, 0xCB6000
	0x0347A6F4 LDR X0, [X0 + 0xB50]
	0x0347A6F8 BL 0x1C16CF4
	0x0347A6FC MOVZ W8, 0x1
	0x0347A700 STRB W8, [X21 + 0x86E]
	0x0347A704 ADRP X24, 0xCB6000
	0x0347A708 LDR X21, [X20 + 0x68]!
	0x0347A70C LDR X24, [X24 + 0xB50]
	0x0347A710 MOV X0, X21
	0x0347A714 MOV X1, X19
	0x0347A718 MOV X2, X31
	0x0347A71C BL 0x33C0FDC
	0x0347A720 CBZ X0, 0x347A740
	0x0347A724 LDR X23, [X24]
	0x0347A728 MOV X22, X0
	0x0347A72C MOV X1, X23
	0x0347A730 BL 0x1C16E00
	0x0347A734 MOV X1, X0
	0x0347A738 CBNZ X0, 0x347A744
	0x0347A73C B 0x347A770
	0x0347A740 MOV X1, X31
	0x0347A744 MOV X0, X20
	0x0347A748 MOV X2, X21
	0x0347A74C BL 0x1C24138
	0x0347A750 CMP X21, X0
	0x0347A754 MOV X21, X0
	0x0347A758 B.NE 0x347A710
	0x0347A75C LDP X20, X19, [X31 + 0x30]
	0x0347A760 LDP X22, X21, [X31 + 0x20]
	0x0347A764 LDP X24, X23, [X31 + 0x10]
	0x0347A768 LDR X30, [X31], #0x40
	0x0347A76C RET
	0x0347A770 MOV X0, X22
	0x0347A774 MOV X1, X23
	0x0347A778 BL 0x1C171E0
	0x0347A77C STR X30, [X31 - 0x40]!
	0x0347A780 STP X24, X23, [X31 + 0x10]
	0x0347A784 STP X22, X21, [X31 + 0x20]
	0x0347A788 STP X20, X19, [X31 + 0x30]
	0x0347A78C ADRP X21, 0xF63000
	0x0347A790 LDRB W8, [X21 + 0x86F]
	0x0347A794 MOV X19, X1
	0x0347A798 MOV X20, X0
	0x0347A79C TBNZ X8, 0x0, 0x347A7B4
	0x0347A7A0 ADRP X0, 0xCB6000
	0x0347A7A4 LDR X0, [X0 + 0xB58]
	0x0347A7A8 BL 0x1C16CF4
	0x0347A7AC MOVZ W8, 0x1
	0x0347A7B0 STRB W8, [X21 + 0x86F]
	0x0347A7B4 ADRP X24, 0xCB6000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF64000
	007 Move X21, 0xC83000
	008 Move W8, [X20+2135]
	009 Move X21, [X21+2264]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xC83000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move X0, 0xC83000
	019 Move X0, [X0+2536]
	020 Call 0x1C17CF4
	021 Move X0, 0xC7A000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2135], W8
	026 Move X0, [X21]
	027 Move W1, 1
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {110}
	031 Move W8, [X0+24]
	032 Move X1, X0
	033 Compare W8, 0
	034 JumpIfEqual {111}
	035 Move W8, 46
	036 NotImplemented "Instruction STRH not yet implemented."
	037 Compare X19, 0
	038 JumpIfEqual {110}
	039 Move X0, X19
	040 Move X2, X31
	041 Call String.Split, X0, X1
	042 Compare X0, 0
	043 JumpIfEqual {110}
	044 Move W8, [X0+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X19, [X0+40]
	047 Compare X19, 0
	048 JumpIfEqual {110}
	049 Move X8, 0xC7A000
	050 Move X8, [X8+1448]
	051 Move X21, 0xC83000
	052 Move W20, [X19+16]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Move X21, [X21+2536]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 NotImplemented "Instruction SCVTF not yet implemented."
	061 Move D1, 0.25
	062 Multiply D0, D0, D1
	063 Move W8, [X0+224]
	064 NotImplemented "Instruction FRINTP not yet implemented."
	065 Move D1, 4
	066 Multiply D8, D0, D1
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move V0, V8
	071 Move X0, X31
	072 Call Convert.ToInt32, V0
	073 Move W1, W0
	074 Move W2, 61
	075 Move X0, X19
	076 Move X3, X31
	077 Call String.PadRight, X0, X1, X2
	078 Compare X0, 0
	079 JumpIfEqual {110}
	080 Move W1, 45
	081 Move W2, 43
	082 Move X3, X31
	083 Call String.Replace, X0, X1, X2
	084 Compare X0, 0
	085 JumpIfEqual {110}
	086 Move W1, 95
	087 Move W2, 47
	088 Move X3, X31
	089 Call String.Replace, X0, X1, X2
	090 Move X20, X0
	091 Move X0, X31
	092 Call Encoding.get_UTF8
	093 Move X19, X0
	094 Move X0, X20
	095 Move X1, X31
	096 Call Convert.FromBase64String, X0
	097 Compare X19, 0
	098 JumpIfEqual {110}
	099 Move X8, [X19]
	100 Move X1, X0
	101 Move X0, X19
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X3, [X8+888]
	105 Move X2, [X8+896]
	106 Move X30, [X31+16]
	107 Move X21, [X31+24]
	108 Move V8, [X31+48]
	109 CallNoReturn X3
	110 Call 0x1C17F20
	111 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x0347A830 STP X24, X23, [X31 + 0x10]
	0x0347A834 STP X22, X21, [X31 + 0x20]
	0x0347A838 STP X20, X19, [X31 + 0x30]
	0x0347A83C ADRP X21, 0xF63000
	0x0347A840 LDRB W8, [X21 + 0x870]
	0x0347A844 MOV X19, X1
	0x0347A848 MOV X20, X0
	0x0347A84C TBNZ X8, 0x0, 0x347A864
	0x0347A850 ADRP X0, 0xCB6000
	0x0347A854 LDR X0, [X0 + 0xB58]
	0x0347A858 BL 0x1C16CF4
	0x0347A85C MOVZ W8, 0x1
	0x0347A860 STRB W8, [X21 + 0x870]
	0x0347A864 ADRP X24, 0xCB6000
	0x0347A868 LDR X21, [X20 + 0x70]!
	0x0347A86C LDR X24, [X24 + 0xB58]
	0x0347A870 MOV X0, X21
	0x0347A874 MOV X1, X19
	0x0347A878 MOV X2, X31
	0x0347A87C BL 0x33C0FDC
	0x0347A880 CBZ X0, 0x347A8A0
	0x0347A884 LDR X23, [X24]
	0x0347A888 MOV X22, X0
	0x0347A88C MOV X1, X23
	0x0347A890 BL 0x1C16E00
	0x0347A894 MOV X1, X0
	0x0347A898 CBNZ X0, 0x347A8A4
	0x0347A89C B 0x347A8D0
	0x0347A8A0 MOV X1, X31
	0x0347A8A4 MOV X0, X20
	0x0347A8A8 MOV X2, X21

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xF64000
	006 Move X19, 0xCB6000
	007 Move W8, [X20+2136]
	008 Move X19, [X19+2672]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xCB6000
	014 Move X0, [X0+2672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2136], W8
	018 Add X0, X31, 24
	019 Move W1, 1970
	020 Move W2, 1
	021 Move W3, 1
	022 Move W7, 1
	023 Move W4, W31
	024 Move W5, W31
	025 Move W6, W31
	026 Move [X31+24], X31
	027 Move [X31], X31
	028 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	029 Move X8, [X19]
	030 Move X30, [X31+16]
	031 Move X9, [X31+24]
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X8, [X8+184]
	035 Move [X8], X9
	036 Add X31, X31, 48
	037 Return 

