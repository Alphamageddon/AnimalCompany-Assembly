Type: Nakama.ApiClient/<CreateGroupAsync>d__48

Method: System.Void MoveNext()

Disassembly:
	0x0341F3BC SUBS X9, X9, 0x1
	0x0341F3C0 ADD X10, X10, 0x10
	0x0341F3C4 B.NE 0x341F3B0
	0x0341F3C8 MOV X0, X24
	0x0341F3CC MOV W2, W31
	0x0341F3D0 BL 0x1C5C788
	0x0341F3D4 B 0x341F3E4
	0x0341F3D8 LDRSW X9, [X10]
	0x0341F3DC ADD X8, X8, X9, 0x4, LSL
	0x0341F3E0 ADD X0, X8, 0x138
	0x0341F3E4 LDP X8, X1, [X0]
	0x0341F3E8 MOV X0, X24
	0x0341F3EC BLR X8
	0x0341F3F0 TBZ X0, 0x0, 0x341F488
	0x0341F3F4 LDR X8, [X24]
	0x0341F3F8 LDR X1, [X29]
	0x0341F3FC LDRH W9, [X8 + 0x12E]
	0x0341F400 CBZ X9, 0x341F424
	0x0341F404 LDR X10, [X8 + 0xB0]
	0x0341F408 ADD X10, X10, 0x8
	0x0341F40C LDUR X11, [X10 - 0x8]
	0x0341F410 CMP X11, X1
	0x0341F414 B.EQ 0x341F434
	0x0341F418 SUBS X9, X9, 0x1
	0x0341F41C ADD X10, X10, 0x10
	0x0341F420 B.NE 0x341F40C
	0x0341F424 MOV X0, X24
	0x0341F428 MOV W2, W31
	0x0341F42C BL 0x1C5C788
	0x0341F430 B 0x341F440
	0x0341F434 LDRSW X9, [X10]
	0x0341F438 ADD X8, X8, X9, 0x4, LSL
	0x0341F43C ADD X0, X8, 0x138
	0x0341F440 LDP X8, X1, [X0]
	0x0341F444 MOV X0, X24
	0x0341F448 BLR X8
	0x0341F44C MOV X22, X0
	0x0341F450 LDR X0, [X27]
	0x0341F454 LDR W8, [X0 + 0xE0]
	0x0341F458 CBNZ W8, 0x341F460
	0x0341F45C BL 0x1C16DFC
	0x0341F460 MOV X0, X22
	0x0341F464 MOV X1, X31
	0x0341F468 BL 0x3624D20
	0x0341F46C LDR X1, [X25]
	0x0341F470 LDR X3, [X20]
	0x0341F474 MOV X2, X0
	0x0341F478 MOV X0, X23
	0x0341F47C MOV X4, X31
	0x0341F480 BL 0x32277C4
	0x0341F484 B 0x341F390
	0x0341F488 MOV X21, X31
	0x0341F48C MOVZ W20, 0xA
	0x0341F490 TBZ X26, 0x1F, 0x341F4F8
	0x0341F494 CBZ X24, 0x341F4F8
	0x0341F498 ADRP X10, 0xCD4000
	0x0341F49C LDR X8, [X24]
	0x0341F4A0 LDR X10, [X10 + 0xE00]
	0x0341F4A4 LDRH W9, [X8 + 0x12E]
	0x0341F4A8 LDR X1, [X10]
	0x0341F4AC CBZ X9, 0x341F4D0
	0x0341F4B0 LDR X10, [X8 + 0xB0]
	0x0341F4B4 ADD X10, X10, 0x8
	0x0341F4B8 LDUR X11, [X10 - 0x8]
	0x0341F4BC CMP X11, X1
	0x0341F4C0 B.EQ 0x341F4E0
	0x0341F4C4 SUBS X9, X9, 0x1
	0x0341F4C8 ADD X10, X10, 0x10
	0x0341F4CC B.NE 0x341F4B8
	0x0341F4D0 MOV X0, X24
	0x0341F4D4 MOV W2, W31
	0x0341F4D8 BL 0x1C5C788
	0x0341F4DC B 0x341F4EC
	0x0341F4E0 LDRSW X9, [X10]
	0x0341F4E4 ADD X8, X8, X9, 0x4, LSL
	0x0341F4E8 ADD X0, X8, 0x138
	0x0341F4EC LDP X8, X1, [X0]
	0x0341F4F0 MOV X0, X24
	0x0341F4F4 BLR X8
	0x0341F4F8 CBNZ X21, 0x341F7A8
	0x0341F4FC CMP W20, 0xA
	0x0341F500 B.EQ 0x341F508
	0x0341F504 CBNZ W20, 0x341F778
	0x0341F508 LDR X25, [X31 + 0x20]
	0x0341F50C CBZ X25, 0x341F7B0
	0x0341F510 ADRP X27, 0xCD7000
	0x0341F514 LDR X0, [X25 + 0x20]
	0x0341F518 LDR X27, [X27 + 0x280]
	0x0341F51C CBZ X0, 0x341F7B4
	0x0341F520 MOV X1, X31
	0x0341F524 BL 0x361B448
	0x0341F528 ADRP X8, 0xCDD000
	0x0341F52C LDR X8, [X8 + 0x8D8]
	0x0341F530 MOV X21, X0
	0x0341F534 LDR X0, [X8]
	0x0341F538 MOVZ W1, 0x1
	0x0341F53C BL 0x1C16D6C
	0x0341F540 MOV X1, X0
	0x0341F544 CBZ X1, 0x341F7B8
	0x0341F548 LDR W8, [X1 + 0x18]
	0x0341F54C CBZ W8, 0x341F7BC
	0x0341F550 MOVZ W8, 0x2F
	0x0341F554 STRH W8, [X1 + 0x20]
	0x0341F558 CBZ X21, 0x341F7C0
	0x0341F55C MOV X0, X21
	0x0341F560 MOV X2, X31
	0x0341F564 BL 0x322BC58
	0x0341F568 LDR X1, [X31 + 0x18]
	0x0341F56C MOV X2, X31
	0x0341F570 BL 0x321B938
	0x0341F574 ADRP X8, 0xCDD000
	0x0341F578 LDR X22, [X25 + 0x20]
	0x0341F57C LDR X8, [X8 + 0x3A0]
	0x0341F580 MOV X21, X0
	0x0341F584 LDR X0, [X8]
	0x0341F588 BL 0x1C16F10
	0x0341F58C MOV X20, X0
	0x0341F590 MOV X1, X22
	0x0341F594 MOV X2, X31
	0x0341F598 BL 0x36281F8
	0x0341F59C CBZ X20, 0x341F7C4
	0x0341F5A0 MOV X0, X20
	0x0341F5A4 MOV X1, X21
	0x0341F5A8 MOV X2, X31
	0x0341F5AC BL 0x36288CC
	0x0341F5B0 MOV X0, X20
	0x0341F5B4 MOV X1, X23
	0x0341F5B8 MOV X2, X31
	0x0341F5BC BL 0x3628980
	0x0341F5C0 MOV X0, X20
	0x0341F5C4 MOV X1, X31
	0x0341F5C8 BL 0x3628A38
	0x0341F5CC ADRP X8, 0xCFD000
	0x0341F5D0 ADRP X9, 0xCD5000
	0x0341F5D4 LDR X8, [X8 + 0x4C8]
	0x0341F5D8 LDR X9, [X9 + 0x6D0]
	0x0341F5DC MOV X20, X0
	0x0341F5E0 LDR X21, [X8]
	0x0341F5E4 LDR X0, [X9]
	0x0341F5E8 BL 0x1C16F10
	0x0341F5EC ADRP X8, 0xCD5000
	0x0341F5F0 LDR X8, [X8 + 0x6C0]
	0x0341F5F4 MOV X22, X0
	0x0341F5F8 LDR X1, [X8]
	0x0341F5FC BL 0x2AA4804
	0x0341F600 ADRP X8, 0xD0F000
	0x0341F604 LDR X1, [X19 + 0x38]
	0x0341F608 LDR X8, [X8 + 0x7D8]
	0x0341F60C LDR X0, [X8]
	0x0341F610 MOV X2, X31
	0x0341F614 BL 0x321B938
	0x0341F618 CBZ X22, 0x341F7C8
	0x0341F61C ADRP X8, 0xD0F000
	0x0341F620 LDR X8, [X8 + 0x7D0]
	0x0341F624 ADRP X9, 0xCD5000
	0x0341F628 LDR X9, [X9 + 0x810]
	0x0341F62C MOV X2, X0
	0x0341F630 LDR X1, [X8]
	0x0341F634 LDR X3, [X9]
	0x0341F638 MOV X0, X22
	0x0341F63C BL 0x2AA5098
	0x0341F640 LDR X24, [X25 + 0x10]
	0x0341F644 CBZ X24, 0x341F7CC
	0x0341F648 ADRP X10, 0xD0F000
	0x0341F64C LDR W23, [X25 + 0x18]
	0x0341F650 LDR X8, [X24]
	0x0341F654 LDP X26, X25, [X19 + 0x40]
	0x0341F658 LDR X10, [X10 + 0x7B8]
	0x0341F65C LDRH W9, [X8 + 0x12E]
	0x0341F660 LDR X1, [X10]
	0x0341F664 CBZ X9, 0x341F688
	0x0341F668 LDR X10, [X8 + 0xB0]
	0x0341F66C ADD X10, X10, 0x8
	0x0341F670 LDUR X11, [X10 - 0x8]
	0x0341F674 CMP X11, X1
	0x0341F678 B.EQ 0x341F698
	0x0341F67C SUBS X9, X9, 0x1
	0x0341F680 ADD X10, X10, 0x10
	0x0341F684 B.NE 0x341F670
	0x0341F688 MOVZ W2, 0x3
	0x0341F68C MOV X0, X24
	0x0341F690 BL 0x1C5C788
	0x0341F694 B 0x341F6A8
	0x0341F698 LDR W9, [X10]
	0x0341F69C ADD W9, W9, 0x3
	0x0341F6A0 ADD X8, X8, W9, 0x4, SXTW
	0x0341F6A4 ADD X0, X8, 0x138
	0x0341F6A8 LDP X8, X9, [X0]
	0x0341F6AC MOV X0, X24
	0x0341F6B0 MOV X1, X21
	0x0341F6B4 MOV X2, X20
	0x0341F6B8 MOV X3, X22
	0x0341F6BC MOV X4, X31
	0x0341F6C0 MOV W5, W23
	0x0341F6C4 MOV X6, X26
	0x0341F6C8 MOV X7, X25
	0x0341F6CC STR X9, [X31]
	0x0341F6D0 BLR X8
	0x0341F6D4 CBZ X0, 0x341F7D0
	0x0341F6D8 ADRP X8, 0xCD7000
	0x0341F6DC LDR X8, [X8 + 0x1F8]
	0x0341F6E0 LDR X1, [X8]
	0x0341F6E4 BL 0x269F5D0
	0x0341F6E8 ADRP X8, 0xCD7000
	0x0341F6EC LDR X8, [X8 + 0x1F0]
	0x0341F6F0 STR X0, [X31 + 0x28]
	0x0341F6F4 LDR X1, [X8]
	0x0341F6F8 ADD X0, X31, 0x28
	0x0341F6FC BL 0x2677430
	0x0341F700 TBZ X0, 0x0, 0x341F740
	0x0341F704 ADRP X8, 0xCD7000
	0x0341F708 LDR X8, [X8 + 0x1E0]
	0x0341F70C ADD X0, X31, 0x28
	0x0341F710 LDR X1, [X8]
	0x0341F714 BL 0x2677474
	0x0341F718 MOVN W8, 0x1
	0x0341F71C STR W8, [X19], #0x8
	0x0341F720 LDR X0, [X27]
	0x0341F724 LDR W8, [X0 + 0xE0]
	0x0341F728 CBNZ W8, 0x341F730
	0x0341F72C BL 0x1C16DFC
	0x0341F730 MOV X0, X19
	0x0341F734 MOV X1, X31
	0x0341F738 BL 0x32C4864
	0x0341F73C B 0x341F778
	0x0341F740 STR W31, [X19]
	0x0341F744 LDR X8, [X31 + 0x28]
	0x0341F748 STR X8, [X19 + 0x50]
	0x0341F74C LDR X0, [X27]
	0x0341F750 LDR W8, [X0 + 0xE0]
	0x0341F754 CBNZ W8, 0x341F75C
	0x0341F758 BL 0x1C16DFC
	0x0341F75C ADRP X8, 0xD0F000
	0x0341F760 LDR X8, [X8 + 0xBF8]
	0x0341F764 ADD X0, X19, 0x8
	0x0341F768 LDR X3, [X8]
	0x0341F76C ADD X1, X31, 0x28
	0x0341F770 MOV X2, X19
	0x0341F774 BL 0x218600C
	0x0341F778 LDP X20, X19, [X31 + 0x80]
	0x0341F77C LDP X22, X21, [X31 + 0x70]
	0x0341F780 LDP X24, X23, [X31 + 0x60]
	0x0341F784 LDP X26, X25, [X31 + 0x50]
	0x0341F788 LDP X28, X27, [X31 + 0x40]
	0x0341F78C LDP X29, X30, [X31 + 0x30]
	0x0341F790 ADD X31, X31, 0x90
	0x0341F794 RET
	0x0341F798 BL 0x1C16F20
	0x0341F79C BL 0x1C16F20
	0x0341F7A0 MOV X0, X24
	0x0341F7A4 BL 0x1C16F18
	0x0341F7A8 MOV X0, X21
	0x0341F7AC BL 0x1C16F18
	0x0341F7B0 BL 0x1C16F20
	0x0341F7B4 BL 0x1C16F20
	0x0341F7B8 BL 0x1C16F20
	0x0341F7BC BL 0x1C16F28
	0x0341F7C0 BL 0x1C16F20
	0x0341F7C4 BL 0x1C16F20
	0x0341F7C8 BL 0x1C16F20
	0x0341F7CC BL 0x1C16F20
	0x0341F7D0 BL 0x1C16F20
	0x0341F7D4 BL 0x1C16F20
	0x0341F7D8 BL 0x1C16F20
	0x0341F7DC B 0x341F844
	0x0341F7E0 B 0x341F844
	0x0341F7E4 B 0x341F844
	0x0341F7E8 B 0x341F844
	0x0341F7EC B 0x341F844
	0x0341F7F0 B 0x341F844
	0x0341F7F4 B 0x341F844
	0x0341F7F8 B 0x341F844
	0x0341F7FC B 0x341F844
	0x0341F800 B 0x341F844
	0x0341F804 B 0x341F844
	0x0341F808 B 0x341F844
	0x0341F80C B 0x341F844
	0x0341F810 B 0x341F844
	0x0341F814 B 0x341F844
	0x0341F818 B 0x341F844
	0x0341F81C B 0x341F844
	0x0341F820 B 0x341F844
	0x0341F824 B 0x341F844
	0x0341F828 B 0x341F844
	0x0341F82C B 0x341F844
	0x0341F830 B 0x341F844
	0x0341F834 B 0x341F844
	0x0341F838 B 0x341F844
	0x0341F83C B 0x341F844
	0x0341F840 B 0x341F844
	0x0341F844 MOV X22, X0
	0x0341F848 STR X1, [X31 + 0x10]
	0x0341F84C B 0x341F9D8
	0x0341F850 B 0x341F884
	0x0341F854 B 0x341F93C
	0x0341F858 B 0x341F884
	0x0341F85C B 0x341F884
	0x0341F860 MOV X22, X0
	0x0341F864 MOV X23, X21
	0x0341F868 B 0x341F888
	0x0341F86C B 0x341F93C
	0x0341F870 B 0x341F93C
	0x0341F874 MOV X22, X0
	0x0341F878 MOV X21, X24
	0x0341F87C B 0x341F940
	0x0341F880 B 0x341F884
	0x0341F884 MOV X22, X0
	0x0341F888 CMP W1, 0x1
	0x0341F88C STR X1, [X31 + 0x10]
	0x0341F890 B.NE 0x341F8B0
	0x0341F894 MOV X0, X22
	0x0341F898 BL 0x3EB1AD0
	0x0341F89C LDR X21, [X0]
	0x0341F8A0 BL 0x3EB1AE0
	0x0341F8A4 MOV W20, W31
	0x0341F8A8 TBNZ X26, 0x1F, 0x341F494
	0x0341F8AC B 0x341F4F8
	0x0341F8B0 MOV X21, X31
	0x0341F8B4 TBZ X26, 0x1F, 0x341F91C
	0x0341F8B8 CBZ X24, 0x341F91C
	0x0341F8BC ADRP X10, 0xCD4000
	0x0341F8C0 LDR X8, [X24]
	0x0341F8C4 LDR X10, [X10 + 0xE00]
	0x0341F8C8 LDRH W9, [X8 + 0x12E]
	0x0341F8CC LDR X1, [X10]
	0x0341F8D0 CBZ X9, 0x341F8F4
	0x0341F8D4 LDR X10, [X8 + 0xB0]
	0x0341F8D8 ADD X10, X10, 0x8
	0x0341F8DC LDUR X11, [X10 - 0x8]
	0x0341F8E0 CMP X11, X1
	0x0341F8E4 B.EQ 0x341F904
	0x0341F8E8 SUBS X9, X9, 0x1
	0x0341F8EC ADD X10, X10, 0x10
	0x0341F8F0 B.NE 0x341F8DC
	0x0341F8F4 MOV X0, X24
	0x0341F8F8 MOV W2, W31
	0x0341F8FC BL 0x1C5C788
	0x0341F900 B 0x341F910
	0x0341F904 LDRSW X9, [X10]
	0x0341F908 ADD X8, X8, X9, 0x4, LSL
	0x0341F90C ADD X0, X8, 0x138
	0x0341F910 LDP X8, X1, [X0]
	0x0341F914 MOV X0, X24
	0x0341F918 BLR X8
	0x0341F91C CBZ X21, 0x341F9D8
	0x0341F920 MOV X0, X21
	0x0341F924 BL 0x1C16F18
	0x0341F928 MOV X22, X0
	0x0341F92C STR X1, [X31 + 0x10]
	0x0341F930 TBNZ X26, 0x1F, 0x341F8B8
	0x0341F934 B 0x341F91C
	0x0341F938 B 0x341F93C
	0x0341F93C MOV X22, X0
	0x0341F940 CMP W1, 0x1
	0x0341F944 B.NE 0x341F964
	0x0341F948 MOV X0, X22
	0x0341F94C BL 0x3EB1AD0
	0x0341F950 LDR X24, [X0]
	0x0341F954 BL 0x3EB1AE0
	0x0341F958 MOV W22, W31
	0x0341F95C TBNZ X26, 0x1F, 0x341F288
	0x0341F960 B 0x341F2EC
	0x0341F964 STR X1, [X31 + 0x10]
	0x0341F968 MOV X24, X31
	0x0341F96C TBZ X26, 0x1F, 0x341F9D4
	0x0341F970 CBZ X23, 0x341F9D4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFBF000
	014 Move W8, [X20+1553]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xD10000
	021 Move X0, [X0+2984]
	022 Call 0x1C17CF4
	023 Move X0, 0xD10000
	024 Move X0, [X0+2992]
	025 Call 0x1C17CF4
	026 Move X0, 0xD10000
	027 Move X0, [X0+1192]
	028 Call 0x1C17CF4
	029 Move X0, 0xCDE000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCD6000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD6000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD6000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xD10000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xD10000
	045 Move X0, [X0+3000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCD8000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD8000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD8000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDE000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCFE000
	060 Move X0, [X0+1240]
	061 Call 0x1C17CF4
	062 Move X0, 0xD10000
	063 Move X0, [X0+3008]
	064 Call 0x1C17CF4
	065 Move X0, 0xD10000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xD10000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xCD5000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1553], W8
	076 Move [X31+24], X31
	077 Move X28, 0xD10000
	078 Move W8, [X19]
	079 Move X28, [X28+1192]
	080 Compare W8, 0
	081 JumpIfEqual {210}
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {302}
	085 Move X25, [X19+40]
	086 Compare X25, 0
	087 JumpIfEqual {320}
	088 Move X0, [X25+32]
	089 Compare X0, 0
	090 JumpIfEqual {321}
	091 Move X8, 0xD10000
	092 Move X9, 0xCD5000
	093 Move X8, [X8+3008]
	094 Move X9, [X9+2440]
	095 Move X21, [X8]
	096 Move X20, [X9]
	097 Move X1, X31
	098 Call Uri.get_AbsolutePath, X0
	099 Move X8, 0xCDE000
	100 Move X8, [X8+2264]
	101 Move X22, X0
	102 Move X0, [X8]
	103 Move W1, 1
	104 Call 0x1C17D6C
	105 Move X1, X0
	106 Compare X1, 0
	107 JumpIfEqual {322}
	108 Move W8, [X1+24]
	109 Compare W8, 0
	110 JumpIfEqual {323}
	111 Move W8, 47
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Compare X22, 0
	114 JumpIfEqual {324}
	115 Move X0, X22
	116 Move X2, X31
	117 Call String.TrimEnd, X0, X1
	118 Move X1, X21
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X8, 0xCDE000
	122 Move X8, [X8+928]
	123 Move X22, X0
	124 Move X23, [X25+32]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move X1, X23
	129 Move X2, X31
	130 Call UriBuilder..ctor, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {325}
	133 Move X0, X21
	134 Move X1, X22
	135 Move X2, X31
	136 Call UriBuilder.set_Path, X0, X1
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Call UriBuilder.set_Query, X0, X1
	141 Move X0, X21
	142 Move X1, X31
	143 Call UriBuilder.get_Uri, X0
	144 Move X8, 0xCFE000
	145 Move X9, 0xCD6000
	146 Move X8, [X8+1240]
	147 Move X9, [X9+1744]
	148 Move X20, X0
	149 Move X21, [X8]
	150 Move X0, [X9]
	151 Call 0x1C17F10
	152 Move X8, 0xCD6000
	153 Move X8, [X8+1728]
	154 Move X22, X0
	155 Move X1, [X8]
	156 Call Dictionary`2<Object, Object>..ctor, X0
	157 Move X8, 0xD10000
	158 Move X8, [X8+2008]
	159 Move X1, [X19+48]
	160 Move X0, [X8]
	161 Move X2, X31
	162 Call String.Concat, X0, X1
	163 Compare X22, 0
	164 JumpIfEqual {326}
	165 Move X8, 0xD10000
	166 Move X8, [X8+2000]
	167 Move X9, 0xCD6000
	168 Move X9, [X9+2064]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X22
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X19+32]
	175 Move X1, X31
	176 Call JsonWriter.ToJson, X0
	177 Move X23, X0
	178 Move X0, X31
	179 Call Encoding.get_UTF8
	180 Compare X0, 0
	181 JumpIfEqual {327}
	182 Move X8, [X0]
	183 Move X9, [X8+616]
	184 Move X2, [X8+624]
	185 Move X1, X23
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X24, [X25+16]
	188 Compare X24, 0
	189 JumpIfEqual {328}
	190 Move X10, 0xD10000
	191 Move X10, [X10+1976]
	192 Move X8, [X24]
	193 Move W26, [X25+24]
	194 Move X27, [X19+56]
	195 Move X25, [X19+64]
	196 Move X1, [X10]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X23, X0
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 3
	208 Move X0, X24
	209 Call 0x1C5D788
	210 Move X8, [X19+72]
	211 Move TEMP, 0
	212 Not TEMP
	213 Move W9, TEMP
	214 Move [X31+24], X8
	215 Move [X19+72], X31
	216 Move [X19], W9
	217 Move W9, [X10]
	218 Add W9, W9, 3
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X9, [X0+8]
	223 Move X0, X24
	224 Move X1, X21
	225 Move X2, X20
	226 Move X3, X22
	227 Move X4, X23
	228 Move W5, W26
	229 Move X6, X27
	230 Move X7, X25
	231 Move [X31], X9
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X0, 0
	234 JumpIfEqual {329}
	235 Move X8, 0xCD8000
	236 Move X8, [X8+504]
	237 Move X1, [X8]
	238 Call Task`1<Object>.GetAwaiter, X0
	239 Move X8, 0xCD8000
	240 Move X8, [X8+496]
	241 Move [X31+24], X0
	242 Move X1, [X8]
	243 Add X0, X31, 24
	244 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {274}
	249 Move X8, 0xCD8000
	250 Move X8, [X8+480]
	251 Add X0, X31, 24
	252 Move X1, [X8]
	253 Call TaskAwaiter`1<Object>.GetResult, X0
	254 Move X8, 0xD10000
	255 Move X8, [X8+3000]
	256 Move X1, [X8]
	257 Call JsonParser.FromJson, X0
	258 Move TEMP, 1
	259 Not TEMP
	260 Move W8, TEMP
	261 Move [X19+8], W8
	262 Move X20, X0
	263 Move X0, [X28]
	264 Move X21, 0xD10000
	265 Move W8, [X0+224]
	266 Move X21, [X21+2992]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X2, [X21]
	271 Move X0, X19
	272 Move X1, X20
	273 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	274 Move [X19], W31
	275 Move X8, [X31+24]
	276 Move [X19+72], X8
	277 Move X0, [X28]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, 0xD10000
	283 Move X8, [X8+2984]
	284 Add X0, X19, 8
	285 Move X3, [X8]
	286 Add X1, X31, 24
	287 Move X2, X19
	288 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	289 Move X20, [X31+96]
	290 Move X19, [X31+104]
	291 Move X22, [X31+80]
	292 Move X21, [X31+88]
	293 Move X24, [X31+64]
	294 Move X23, [X31+72]
	295 Move X26, [X31+48]
	296 Move X25, [X31+56]
	297 Move X28, [X31+32]
	298 Move X27, [X31+40]
	299 Move X30, [X31+16]
	300 Add X31, X31, 112
	301 Return 
	302 Move X0, 0xCDD000
	303 Move X0, [X0+1400]
	304 Call 0x1C17D08
	305 Call 0x1C17F10
	306 Move X20, X0
	307 Move X0, 0xD10000
	308 Move X0, [X0+3016]
	309 Call 0x1C17D08
	310 Move X1, X0
	311 Move X0, X20
	312 Move X2, X31
	313 Call ArgumentException..ctor, X0, X1
	314 Move X0, 0xD10000
	315 Move X0, [X0+3024]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X0, X20
	319 Call 0x1C17DEC
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F28
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X20, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X20
	333 Call 0x3EB2AD0
	334 Move X20, X0
	335 Move X0, 0xCD5000
	336 Move X0, [X0+2000]
	337 Call 0x1C17D08
	338 Move X8, [X20]
	339 Move X1, [X8]
	340 Call 0x1C18270
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {365}
	345 Move X20, [X20]
	346 Call 0x3EB2AE0
	347 Move TEMP, 1
	348 Not TEMP
	349 Move W8, TEMP
	350 Move [X19+8], W8
	351 Move X0, 0xD10000
	352 Move X0, [X0+1192]
	353 Call 0x1C17D08
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, 0xD10000
	359 Move X0, [X0+3032]
	360 Call 0x1C17D08
	361 Move X2, X0
	362 Move X0, X19
	363 Move X1, X20
	364 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	365 Move W0, 8
	366 Call 0x3EB2AF0
	367 Move X8, [X20]
	368 Move [X0], X8
	369 Move X1, 0xA96000
	370 Add X1, X1, 3672
	371 Move X2, X31
	372 Call 0x3EB2B00
	373 Move X20, X0
	374 Call 0x3EB2AE0
	375 Move X0, X20
	376 Call 0x1D2D690
	377 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0341F974 ADRP X10, 0xCD4000
	0x0341F978 LDR X8, [X23]
	0x0341F97C LDR X10, [X10 + 0xE00]
	0x0341F980 LDRH W9, [X8 + 0x12E]
	0x0341F984 LDR X1, [X10]
	0x0341F988 CBZ X9, 0x341F9AC
	0x0341F98C LDR X10, [X8 + 0xB0]
	0x0341F990 ADD X10, X10, 0x8
	0x0341F994 LDUR X11, [X10 - 0x8]
	0x0341F998 CMP X11, X1
	0x0341F99C B.EQ 0x341F9BC
	0x0341F9A0 SUBS X9, X9, 0x1
	0x0341F9A4 ADD X10, X10, 0x10
	0x0341F9A8 B.NE 0x341F994
	0x0341F9AC MOV X0, X23
	0x0341F9B0 MOV W2, W31
	0x0341F9B4 BL 0x1C5C788
	0x0341F9B8 B 0x341F9C8
	0x0341F9BC LDRSW X9, [X10]
	0x0341F9C0 ADD X8, X8, X9, 0x4, LSL
	0x0341F9C4 ADD X0, X8, 0x138
	0x0341F9C8 LDP X8, X1, [X0]
	0x0341F9CC MOV X0, X23
	0x0341F9D0 BLR X8
	0x0341F9D4 CBNZ X24, 0x341FA68
	0x0341F9D8 LDR X8, [X31 + 0x10]
	0x0341F9DC CMP W8, 0x1
	0x0341F9E0 B.NE 0x341FA88
	0x0341F9E4 MOV X0, X22
	0x0341F9E8 BL 0x3EB1AD0
	0x0341F9EC MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFBF000
	007 Move X21, 0xD10000
	008 Move W8, [X22+1554]
	009 Move X21, [X21+1192]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD10000
	017 Move X0, [X0+3040]
	018 Call 0x1C17CF4
	019 Move X0, 0xD10000
	020 Move X0, [X0+1192]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1554], W8
	024 Move X0, [X21]
	025 Move X21, 0xD10000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3040]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

