Type: Nakama.Client/<ListTournamentRecordsAsync>d__94

Method: System.Void MoveNext()

Disassembly:
	0x03463D90 B 0x3463DA0
	0x03463D94 LDRSW X9, [X10]
	0x03463D98 ADD X8, X8, X9, 0x4, LSL
	0x03463D9C ADD X0, X8, 0x138
	0x03463DA0 LDP X8, X1, [X0]
	0x03463DA4 MOV X0, X21
	0x03463DA8 BLR X8
	0x03463DAC CBNZ X24, 0x3463E4C
	0x03463DB0 CMP W22, 0x1
	0x03463DB4 B.NE 0x3463E6C
	0x03463DB8 MOV X0, X23
	0x03463DBC BL 0x3EB1AD0
	0x03463DC0 MOV X20, X0
	0x03463DC4 ADRP X0, 0xC90000
	0x03463DC8 LDR X0, [X0 + 0x7D0]
	0x03463DCC BL 0x1C16D08
	0x03463DD0 LDR X8, [X20]
	0x03463DD4 LDR X1, [X8]
	0x03463DD8 BL 0x1C17270
	0x03463DDC TBZ X0, 0x0, 0x3463E2C
	0x03463DE0 LDR X20, [X20]
	0x03463DE4 BL 0x3EB1AE0
	0x03463DE8 MOVN W8, 0x1
	0x03463DEC STR X31, [X19 + 0x70]
	0x03463DF0 STR W8, [X19], #0x8
	0x03463DF4 ADRP X0, 0xCCB000
	0x03463DF8 LDR X0, [X0 + 0x730]
	0x03463DFC BL 0x1C16D08
	0x03463E00 LDR W8, [X0 + 0xE0]
	0x03463E04 CBNZ W8, 0x3463E0C
	0x03463E08 BL 0x1C16DFC
	0x03463E0C ADRP X0, 0xCCC000
	0x03463E10 LDR X0, [X0 + 0x1C0]
	0x03463E14 BL 0x1C16D08
	0x03463E18 MOV X2, X0
	0x03463E1C MOV X0, X19
	0x03463E20 MOV X1, X20
	0x03463E24 BL 0x26324C8
	0x03463E28 B 0x3463AB8
	0x03463E2C MOVZ W0, 0x8
	0x03463E30 BL 0x3EB1AF0
	0x03463E34 LDR X8, [X20]
	0x03463E38 STR X8, [X0]
	0x03463E3C ADRP X1, 0xA51000
	0x03463E40 ADD X1, X1, 0xE58
	0x03463E44 MOV X2, X31
	0x03463E48 BL 0x3EB1B00
	0x03463E4C MOV X0, X24
	0x03463E50 BL 0x1C16F18
	0x03463E54 MOV X22, X1
	0x03463E58 MOV X23, X0
	0x03463E5C TBNZ X25, 0x1F, 0x3463D48
	0x03463E60 B 0x3463DAC
	0x03463E64 MOV X23, X0
	0x03463E68 BL 0x3EB1AE0
	0x03463E6C MOV X0, X23
	0x03463E70 BL 0x1D2C690
	0x03463E74 BL 0x1990590
	0x03463E78 STR X30, [X31 - 0x30]!
	0x03463E7C STP X22, X21, [X31 + 0x10]
	0x03463E80 STP X20, X19, [X31 + 0x20]
	0x03463E84 ADRP X22, 0xF7A000
	0x03463E88 ADRP X21, 0xCCB000
	0x03463E8C LDRB W8, [X22 + 0x7B8]
	0x03463E90 LDR X21, [X21 + 0x730]
	0x03463E94 MOV X19, X1
	0x03463E98 MOV X20, X0
	0x03463E9C TBNZ X8, 0x0, 0x3463EC0
	0x03463EA0 ADRP X0, 0xCCC000
	0x03463EA4 LDR X0, [X0 + 0x1C8]
	0x03463EA8 BL 0x1C16CF4
	0x03463EAC ADRP X0, 0xCCB000
	0x03463EB0 LDR X0, [X0 + 0x730]
	0x03463EB4 BL 0x1C16CF4
	0x03463EB8 MOVZ W8, 0x1
	0x03463EBC STRB W8, [X22 + 0x7B8]
	0x03463EC0 LDR X0, [X21]
	0x03463EC4 ADRP X21, 0xCCC000
	0x03463EC8 LDR W8, [X0 + 0xE0]
	0x03463ECC LDR X21, [X21 + 0x1C8]
	0x03463ED0 CBNZ W8, 0x3463ED8
	0x03463ED4 BL 0x1C16DFC
	0x03463ED8 LDR X2, [X21]
	0x03463EDC ADD X0, X20, 0x8
	0x03463EE0 MOV X1, X19
	0x03463EE4 LDP X20, X19, [X31 + 0x20]
	0x03463EE8 LDP X22, X21, [X31 + 0x10]
	0x03463EEC LDR X30, [X31], #0x30
	0x03463EF0 B 0x2632228
	0x03463EF4 SUB X31, X31, 0x70
	0x03463EF8 STP X30, X25, [X31 + 0x30]
	0x03463EFC STP X24, X23, [X31 + 0x40]
	0x03463F00 STP X22, X21, [X31 + 0x50]
	0x03463F04 STP X20, X19, [X31 + 0x60]
	0x03463F08 ADRP X20, 0xF7A000
	0x03463F0C LDRB W8, [X20 + 0x7B9]
	0x03463F10 MOV X19, X0
	0x03463F14 TBNZ X8, 0x0, 0x3464004
	0x03463F18 ADRP X0, 0xCCD000
	0x03463F1C LDR X0, [X0 + 0x2D8]
	0x03463F20 BL 0x1C16CF4
	0x03463F24 ADRP X0, 0xCCD000
	0x03463F28 LDR X0, [X0 + 0x2E0]
	0x03463F2C BL 0x1C16CF4
	0x03463F30 ADRP X0, 0xCCC000
	0x03463F34 LDR X0, [X0 + 0x1E8]
	0x03463F38 BL 0x1C16CF4
	0x03463F3C ADRP X0, 0xCCB000
	0x03463F40 LDR X0, [X0 + 0x708]
	0x03463F44 BL 0x1C16CF4
	0x03463F48 ADRP X0, 0xC92000
	0x03463F4C LDR X0, [X0 + 0xA10]
	0x03463F50 BL 0x1C16CF4
	0x03463F54 ADRP X0, 0xC91000
	0x03463F58 LDR X0, [X0 + 0x9F0]
	0x03463F5C BL 0x1C16CF4
	0x03463F60 ADRP X0, 0xCCD000
	0x03463F64 LDR X0, [X0 + 0x2E8]
	0x03463F68 BL 0x1C16CF4
	0x03463F6C ADRP X0, 0xC91000
	0x03463F70 LDR X0, [X0 + 0x818]
	0x03463F74 BL 0x1C16CF4
	0x03463F78 ADRP X0, 0xCCC000
	0x03463F7C LDR X0, [X0 + 0x7C8]
	0x03463F80 BL 0x1C16CF4
	0x03463F84 ADRP X0, 0xCCC000
	0x03463F88 LDR X0, [X0 + 0x7D0]
	0x03463F8C BL 0x1C16CF4
	0x03463F90 ADRP X0, 0xCCD000
	0x03463F94 LDR X0, [X0 + 0x2F0]
	0x03463F98 BL 0x1C16CF4
	0x03463F9C ADRP X0, 0xC91000
	0x03463FA0 LDR X0, [X0 + 0x830]
	0x03463FA4 BL 0x1C16CF4
	0x03463FA8 ADRP X0, 0xCCD000
	0x03463FAC LDR X0, [X0 + 0x2F8]
	0x03463FB0 BL 0x1C16CF4
	0x03463FB4 ADRP X0, 0xCCD000
	0x03463FB8 LDR X0, [X0 + 0x300]
	0x03463FBC BL 0x1C16CF4
	0x03463FC0 ADRP X0, 0xC91000
	0x03463FC4 LDR X0, [X0 + 0x838]
	0x03463FC8 BL 0x1C16CF4
	0x03463FCC ADRP X0, 0xC91000
	0x03463FD0 LDR X0, [X0 + 0x840]
	0x03463FD4 BL 0x1C16CF4
	0x03463FD8 ADRP X0, 0xCCD000
	0x03463FDC LDR X0, [X0 + 0x308]
	0x03463FE0 BL 0x1C16CF4
	0x03463FE4 ADRP X0, 0xCCD000
	0x03463FE8 LDR X0, [X0 + 0x310]
	0x03463FEC BL 0x1C16CF4
	0x03463FF0 ADRP X0, 0xCCD000
	0x03463FF4 LDR X0, [X0 + 0x318]
	0x03463FF8 BL 0x1C16CF4
	0x03463FFC MOVZ W8, 0x1
	0x03464000 STRB W8, [X20 + 0x7B9]
	0x03464004 STP X31, X31, [X31 + 0x20]
	0x03464008 STR X31, [X31 + 0x18]
	0x0346400C ADRP X25, 0xCCA000
	0x03464010 LDR W8, [X19]
	0x03464014 LDR X20, [X19 + 0x20]
	0x03464018 LDR X25, [X25 + 0x708]
	0x0346401C CBZ W8, 0x3464040
	0x03464020 CMP W8, 0x1
	0x03464024 B.NE 0x346406C
	0x03464028 LDR X8, [X19 + 0x78]
	0x0346402C MOVN W9, 0x0
	0x03464030 STR X8, [X31 + 0x18]
	0x03464034 STR X31, [X19 + 0x78]
	0x03464038 STR W9, [X19]
	0x0346403C B 0x34643B0
	0x03464040 LDR X8, [X19 + 0x70]
	0x03464044 MOVN W9, 0x0
	0x03464048 STR X8, [X31 + 0x20]
	0x0346404C STR X31, [X19 + 0x70]
	0x03464050 STR W9, [X19]
	0x03464054 ADRP X8, 0xC90000
	0x03464058 LDR X8, [X8 + 0x830]
	0x0346405C ADD X0, X31, 0x20
	0x03464060 LDR X1, [X8]
	0x03464064 BL 0x2677474
	0x03464068 B 0x34642CC
	0x0346406C ADRP X8, 0xCCC000
	0x03464070 LDR X8, [X8 + 0x318]
	0x03464074 LDR X0, [X8]
	0x03464078 BL 0x1C16F10
	0x0346407C MOV X21, X0
	0x03464080 MOV X1, X31
	0x03464084 BL 0x344BAFC
	0x03464088 STR X21, [X19 + 0x68]
	0x0346408C CBZ X21, 0x3464468
	0x03464090 LDR X8, [X19 + 0x20]
	0x03464094 STR X8, [X21 + 0x10]
	0x03464098 LDR X8, [X19 + 0x28]
	0x0346409C STR X8, [X21 + 0x18]
	0x034640A0 LDR V0, [X19 + 0x30]
	0x034640A4 STR D0, [X21 + 0x20]
	0x034640A8 LDR X8, [X19 + 0x38]
	0x034640AC STR X8, [X21 + 0x28]
	0x034640B0 LDR X8, [X19 + 0x68]
	0x034640B4 CBZ X8, 0x346446C
	0x034640B8 LDR X9, [X19 + 0x40]
	0x034640BC STR X9, [X8 + 0x30]
	0x034640C0 LDR X8, [X19 + 0x68]
	0x034640C4 CBZ X8, 0x3464470
	0x034640C8 LDR W9, [X19 + 0x48]
	0x034640CC STR W9, [X8 + 0x38]
	0x034640D0 LDR X9, [X19 + 0x50]
	0x034640D4 STR X9, [X8 + 0x40]
	0x034640D8 LDR X9, [X19 + 0x58]
	0x034640DC STR X9, [X8 + 0x48]
	0x034640E0 CBZ X20, 0x3464474
	0x034640E4 LDRB W8, [X20 + 0x10]
	0x034640E8 CBZ W8, 0x34642D0
	0x034640EC LDR X8, [X19 + 0x68]
	0x034640F0 CBZ X8, 0x3464478
	0x034640F4 LDR X21, [X8 + 0x18]
	0x034640F8 CBZ X21, 0x346447C
	0x034640FC ADRP X23, 0xC90000
	0x03464100 LDR X8, [X21]
	0x03464104 LDR X23, [X23 + 0x818]
	0x03464108 LDRH W9, [X8 + 0x12E]
	0x0346410C LDR X1, [X23]
	0x03464110 CBZ X9, 0x3464134
	0x03464114 LDR X10, [X8 + 0xB0]
	0x03464118 ADD X10, X10, 0x8
	0x0346411C LDUR X11, [X10 - 0x8]
	0x03464120 CMP X11, X1
	0x03464124 B.EQ 0x3464144
	0x03464128 SUBS X9, X9, 0x1
	0x0346412C ADD X10, X10, 0x10
	0x03464130 B.NE 0x346411C
	0x03464134 MOVZ W2, 0x7
	0x03464138 MOV X0, X21
	0x0346413C BL 0x1C5C788
	0x03464140 B 0x3464154
	0x03464144 LDR W9, [X10]
	0x03464148 ADD W9, W9, 0x7
	0x0346414C ADD X8, X8, W9, 0x4, SXTW
	0x03464150 ADD X0, X8, 0x138
	0x03464154 LDP X8, X1, [X0]
	0x03464158 MOV X0, X21
	0x0346415C BLR X8
	0x03464160 MOV X1, X31
	0x03464164 BL 0x32277A8
	0x03464168 TBNZ X0, 0x0, 0x34642CC
	0x0346416C LDR X8, [X19 + 0x68]
	0x03464170 CBZ X8, 0x3464480
	0x03464174 ADRP X9, 0xC90000
	0x03464178 LDR X9, [X9 + 0x9F0]
	0x0346417C LDR X21, [X8 + 0x18]
	0x03464180 LDR X0, [X9]
	0x03464184 LDR W9, [X0 + 0xE0]
	0x03464188 CBNZ W9, 0x3464190
	0x0346418C BL 0x1C16DFC
	0x03464190 MOV X0, X31
	0x03464194 BL 0x33616A4
	0x03464198 ADRP X22, 0xC91000
	0x0346419C LDR X22, [X22 + 0xA10]
	0x034641A0 MOV X8, X0
	0x034641A4 STR X8, [X31 + 0x28]
	0x034641A8 LDR X0, [X22]
	0x034641AC LDR W8, [X0 + 0xE0]
	0x034641B0 CBNZ W8, 0x34641BC
	0x034641B4 BL 0x1C16DFC
	0x034641B8 LDR X0, [X22]
	0x034641BC LDR X8, [X0 + 0xB8]
	0x034641C0 LDR X1, [X8]
	0x034641C4 ADD X0, X31, 0x28
	0x034641C8 MOV X2, X31
	0x034641CC BL 0x335FC68
	0x034641D0 CBZ X21, 0x3464484
	0x034641D4 LDR X8, [X21]
	0x034641D8 LDR X1, [X23]
	0x034641DC MOV X22, X0
	0x034641E0 LDRH W9, [X8 + 0x12E]
	0x034641E4 CBZ X9, 0x3464208
	0x034641E8 LDR X10, [X8 + 0xB0]
	0x034641EC ADD X10, X10, 0x8
	0x034641F0 LDUR X11, [X10 - 0x8]
	0x034641F4 CMP X11, X1
	0x034641F8 B.EQ 0x3464218
	0x034641FC SUBS X9, X9, 0x1
	0x03464200 ADD X10, X10, 0x10
	0x03464204 B.NE 0x34641F0
	0x03464208 MOVZ W2, 0xB
	0x0346420C MOV X0, X21
	0x03464210 BL 0x1C5C788
	0x03464214 B 0x3464228
	0x03464218 LDR W9, [X10]
	0x0346421C ADD W9, W9, 0xB
	0x03464220 ADD X8, X8, W9, 0x4, SXTW
	0x03464224 ADD X0, X8, 0x138
	0x03464228 LDP X8, X2, [X0]
	0x0346422C MOV X0, X21
	0x03464230 MOV X1, X22
	0x03464234 BLR X8
	0x03464238 TBZ X0, 0x0, 0x34642CC
	0x0346423C LDR X8, [X19 + 0x68]
	0x03464240 CBZ X8, 0x3464488
	0x03464244 LDR X1, [X8 + 0x18]
	0x03464248 LDR X3, [X19 + 0x60]
	0x0346424C LDR X4, [X8 + 0x48]
	0x03464250 MOV X0, X20
	0x03464254 MOV X2, X31
	0x03464258 MOV X5, X31
	0x0346425C BL 0x34440A8
	0x03464260 CBZ X0, 0x346448C
	0x03464264 ADRP X8, 0xC90000
	0x03464268 LDR X8, [X8 + 0x840]
	0x0346426C LDR X1, [X8]
	0x03464270 BL 0x269F5D0
	0x03464274 ADRP X8, 0xC90000
	0x03464278 LDR X8, [X8 + 0x838]
	0x0346427C STR X0, [X31 + 0x20]
	0x03464280 LDR X1, [X8]
	0x03464284 ADD X0, X31, 0x20
	0x03464288 BL 0x2677430
	0x0346428C TBNZ X0, 0x0, 0x3464054
	0x03464290 STR W31, [X19]
	0x03464294 LDR X8, [X31 + 0x20]
	0x03464298 STR X8, [X19 + 0x70]
	0x0346429C LDR X0, [X25]
	0x034642A0 LDR W8, [X0 + 0xE0]
	0x034642A4 CBNZ W8, 0x34642AC
	0x034642A8 BL 0x1C16DFC
	0x034642AC ADRP X8, 0xCCC000
	0x034642B0 LDR X8, [X8 + 0x2E0]
	0x034642B4 ADD X0, X19, 0x8
	0x034642B8 LDR X3, [X8]
	0x034642BC ADD X1, X31, 0x20
	0x034642C0 MOV X2, X19
	0x034642C4 BL 0x1FBCB28
	0x034642C8 B 0x3464440
	0x034642CC CBZ X20, 0x3464464
	0x034642D0 ADRP X8, 0xCCC000
	0x034642D4 LDR X8, [X8 + 0x2E8]
	0x034642D8 LDR X21, [X20 + 0x58]
	0x034642DC LDR X23, [X19 + 0x68]
	0x034642E0 LDR X0, [X8]
	0x034642E4 BL 0x1C16F10
	0x034642E8 ADRP X8, 0xCCC000
	0x034642EC LDR X8, [X8 + 0x310]
	0x034642F0 MOV X22, X0
	0x034642F4 LDR X2, [X8]
	0x034642F8 MOV X1, X23
	0x034642FC MOV X3, X31
	0x03464300 BL 0x2D27AA8
	0x03464304 LDR X8, [X19 + 0x68]
	0x03464308 CBZ X8, 0x3464458
	0x0346430C ADRP X9, 0xCCB000
	0x03464310 LDR X23, [X19 + 0x60]
	0x03464314 LDR X9, [X9 + 0x7C8]
	0x03464318 CBNZ X23, 0x3464320
	0x0346431C LDR X23, [X20 + 0x18]
	0x03464320 LDR X20, [X8 + 0x18]
	0x03464324 LDR X1, [X8 + 0x48]
	0x03464328 LDR X2, [X9]
	0x0346432C STP X31, X31, [X31 + 0x8]
	0x03464330 ADD X0, X31, 0x8
	0x03464334 BL 0x242E368
	0x03464338 ADRP X8, 0xCCB000
	0x0346433C LDR X8, [X8 + 0x7D0]
	0x03464340 LDR X0, [X8]
	0x03464344 BL 0x1C16F10
	0x03464348 LDP X3, X4, [X31 + 0x8]
	0x0346434C MOV X24, X0
	0x03464350 MOV X1, X20
	0x03464354 MOV X2, X23
	0x03464358 MOV X5, X31
	0x0346435C BL 0x3465404
	0x03464360 CBZ X21, 0x346445C
	0x03464364 ADRP X8, 0xCCC000
	0x03464368 LDR X8, [X8 + 0x2F0]
	0x0346436C LDR X3, [X8]
	0x03464370 MOV X0, X21
	0x03464374 MOV X1, X22
	0x03464378 MOV X2, X24
	0x0346437C BL 0x2243230
	0x03464380 CBZ X0, 0x3464460
	0x03464384 ADRP X8, 0xCCC000
	0x03464388 LDR X8, [X8 + 0x308]
	0x0346438C LDR X1, [X8]
	0x03464390 BL 0x269F5D0
	0x03464394 ADRP X8, 0xCCC000
	0x03464398 LDR X8, [X8 + 0x300]
	0x0346439C STR X0, [X31 + 0x18]
	0x034643A0 LDR X1, [X8]
	0x034643A4 ADD X0, X31, 0x18
	0x034643A8 BL 0x2677430
	0x034643AC TBZ X0, 0x0, 0x3464404
	0x034643B0 ADRP X8, 0xCCC000
	0x034643B4 LDR X8, [X8 + 0x2F8]
	0x034643B8 ADD X0, X31, 0x18
	0x034643BC LDR X1, [X8]
	0x034643C0 BL 0x2677474
	0x034643C4 MOVN W8, 0x1
	0x034643C8 STR W8, [X19]
	0x034643CC STR X31, [X19 + 0x68]
	0x034643D0 MOV X20, X0
	0x034643D4 LDR X0, [X25]
	0x034643D8 ADRP X21, 0xCCB000
	0x034643DC ADD X19, X19, 0x8
	0x034643E0 LDR W8, [X0 + 0xE0]
	0x034643E4 LDR X21, [X21 + 0x1E8]
	0x034643E8 CBNZ W8, 0x34643F0
	0x034643EC BL 0x1C16DFC
	0x034643F0 LDR X2, [X21]
	0x034643F4 MOV X0, X19
	0x034643F8 MOV X1, X20
	0x034643FC BL 0x26322B0
	0x03464400 B 0x3464440
	0x03464404 MOVZ W8, 0x1
	0x03464408 STR W8, [X19]
	0x0346440C LDR X8, [X31 + 0x18]
	0x03464410 STR X8, [X19 + 0x78]
	0x03464414 LDR X0, [X25]
	0x03464418 LDR W8, [X0 + 0xE0]
	0x0346441C CBNZ W8, 0x3464424
	0x03464420 BL 0x1C16DFC
	0x03464424 ADRP X8, 0xCCC000
	0x03464428 LDR X8, [X8 + 0x2D8]
	0x0346442C ADD X0, X19, 0x8
	0x03464430 LDR X3, [X8]
	0x03464434 ADD X1, X31, 0x18
	0x03464438 MOV X2, X19
	0x0346443C BL 0x1FBCB28
	0x03464440 LDP X20, X19, [X31 + 0x60]
	0x03464444 LDP X22, X21, [X31 + 0x50]
	0x03464448 LDP X24, X23, [X31 + 0x40]
	0x0346444C LDP X30, X25, [X31 + 0x30]
	0x03464450 ADD X31, X31, 0x70
	0x03464454 RET
	0x03464458 BL 0x1C16F20
	0x0346445C BL 0x1C16F20
	0x03464460 BL 0x1C16F20
	0x03464464 BL 0x1C16F20
	0x03464468 BL 0x1C16F20
	0x0346446C BL 0x1C16F20
	0x03464470 BL 0x1C16F20
	0x03464474 BL 0x1C16F20
	0x03464478 BL 0x1C16F20
	0x0346447C BL 0x1C16F20
	0x03464480 BL 0x1C16F20
	0x03464484 BL 0x1C16F20
	0x03464488 BL 0x1C16F20
	0x0346448C BL 0x1C16F20
	0x03464490 B 0x346450C
	0x03464494 B 0x346450C
	0x03464498 B 0x346450C
	0x0346449C B 0x346450C
	0x034644A0 B 0x346450C
	0x034644A4 B 0x346450C
	0x034644A8 B 0x346450C
	0x034644AC B 0x346450C
	0x034644B0 B 0x346450C
	0x034644B4 B 0x346450C
	0x034644B8 B 0x346450C
	0x034644BC B 0x346450C
	0x034644C0 B 0x346450C
	0x034644C4 B 0x346450C
	0x034644C8 B 0x346450C
	0x034644CC B 0x346450C
	0x034644D0 B 0x346450C
	0x034644D4 B 0x346450C
	0x034644D8 B 0x346450C
	0x034644DC B 0x346450C
	0x034644E0 B 0x346450C
	0x034644E4 B 0x346450C
	0x034644E8 B 0x346450C
	0x034644EC B 0x346450C
	0x034644F0 B 0x346450C
	0x034644F4 B 0x346450C
	0x034644F8 B 0x346450C
	0x034644FC B 0x346450C
	0x03464500 B 0x346450C
	0x03464504 B 0x346450C
	0x03464508 B 0x346450C
	0x0346450C MOV X20, X0
	0x03464510 CMP W1, 0x1
	0x03464514 B.NE 0x34645B4
	0x03464518 MOV X0, X20
	0x0346451C BL 0x3EB1AD0
	0x03464520 MOV X20, X0
	0x03464524 ADRP X0, 0xC8F000
	0x03464528 LDR X0, [X0 + 0x7D0]
	0x0346452C BL 0x1C16D08
	0x03464530 LDR X8, [X20]
	0x03464534 LDR X1, [X8]
	0x03464538 BL 0x1C17270
	0x0346453C TBZ X0, 0x0, 0x346458C
	0x03464540 LDR X20, [X20]
	0x03464544 BL 0x3EB1AE0
	0x03464548 MOVN W8, 0x1
	0x0346454C STR X31, [X19 + 0x68]
	0x03464550 STR W8, [X19], #0x8
	0x03464554 ADRP X0, 0xCCA000
	0x03464558 LDR X0, [X0 + 0x708]
	0x0346455C BL 0x1C16D08
	0x03464560 LDR W8, [X0 + 0xE0]
	0x03464564 CBNZ W8, 0x346456C
	0x03464568 BL 0x1C16DFC
	0x0346456C ADRP X0, 0xCCB000
	0x03464570 LDR X0, [X0 + 0x220]
	0x03464574 BL 0x1C16D08
	0x03464578 MOV X2, X0
	0x0346457C MOV X0, X19
	0x03464580 MOV X1, X20
	0x03464584 BL 0x26324C8
	0x03464588 B 0x3464440
	0x0346458C MOVZ W0, 0x8
	0x03464590 BL 0x3EB1AF0
	0x03464594 LDR X8, [X20]
	0x03464598 STR X8, [X0]
	0x0346459C ADRP X1, 0xA50000
	0x034645A0 ADD X1, X1, 0xE58
	0x034645A4 MOV X2, X31
	0x034645A8 BL 0x3EB1B00
	0x034645AC MOV X20, X0
	0x034645B0 BL 0x3EB1AE0
	0x034645B4 MOV X0, X20
	0x034645B8 BL 0x1D2C690
	0x034645BC BL 0x1990590
	0x034645C0 STR X30, [X31 - 0x30]!
	0x034645C4 STP X22, X21, [X31 + 0x10]
	0x034645C8 STP X20, X19, [X31 + 0x20]
	0x034645CC ADRP X22, 0xF79000
	0x034645D0 ADRP X21, 0xCCA000
	0x034645D4 LDRB W8, [X22 + 0x7BA]
	0x034645D8 LDR X21, [X21 + 0x708]
	0x034645DC MOV X19, X1
	0x034645E0 MOV X20, X0
	0x034645E4 TBNZ X8, 0x0, 0x3464608
	0x034645E8 ADRP X0, 0xCCB000
	0x034645EC LDR X0, [X0 + 0x228]
	0x034645F0 BL 0x1C16CF4
	0x034645F4 ADRP X0, 0xCCA000
	0x034645F8 LDR X0, [X0 + 0x708]
	0x034645FC BL 0x1C16CF4
	0x03464600 MOVZ W8, 0x1
	0x03464604 STRB W8, [X22 + 0x7BA]
	0x03464608 LDR X0, [X21]
	0x0346460C ADRP X21, 0xCCB000
	0x03464610 LDR W8, [X0 + 0xE0]
	0x03464614 LDR X21, [X21 + 0x228]
	0x03464618 CBNZ W8, 0x3464620
	0x0346461C BL 0x1C16DFC
	0x03464620 LDR X2, [X21]
	0x03464624 ADD X0, X20, 0x8
	0x03464628 MOV X1, X19
	0x0346462C LDP X20, X19, [X31 + 0x20]
	0x03464630 LDP X22, X21, [X31 + 0x10]
	0x03464634 LDR X30, [X31], #0x30
	0x03464638 B 0x2632228
	0x0346463C SUB X31, X31, 0x70
	0x03464640 STP X30, X25, [X31 + 0x30]
	0x03464644 STP X24, X23, [X31 + 0x40]
	0x03464648 STP X22, X21, [X31 + 0x50]
	0x0346464C STP X20, X19, [X31 + 0x60]
	0x03464650 ADRP X20, 0xF79000
	0x03464654 LDRB W8, [X20 + 0x7BB]
	0x03464658 MOV X19, X0
	0x0346465C TBNZ X8, 0x0, 0x346474C
	0x03464660 ADRP X0, 0xCCC000
	0x03464664 LDR X0, [X0 + 0x320]
	0x03464668 BL 0x1C16CF4
	0x0346466C ADRP X0, 0xCCC000
	0x03464670 LDR X0, [X0 + 0x328]
	0x03464674 BL 0x1C16CF4
	0x03464678 ADRP X0, 0xCCB000
	0x0346467C LDR X0, [X0 + 0x238]
	0x03464680 BL 0x1C16CF4
	0x03464684 ADRP X0, 0xCCA000
	0x03464688 LDR X0, [X0 + 0x790]
	0x0346468C BL 0x1C16CF4
	0x03464690 ADRP X0, 0xC91000
	0x03464694 LDR X0, [X0 + 0xA10]
	0x03464698 BL 0x1C16CF4
	0x0346469C ADRP X0, 0xC90000
	0x034646A0 LDR X0, [X0 + 0x9F0]
	0x034646A4 BL 0x1C16CF4
	0x034646A8 ADRP X0, 0xCCC000
	0x034646AC LDR X0, [X0 + 0x330]
	0x034646B0 BL 0x1C16CF4
	0x034646B4 ADRP X0, 0xC90000
	0x034646B8 LDR X0, [X0 + 0x818]
	0x034646BC BL 0x1C16CF4
	0x034646C0 ADRP X0, 0xCCB000
	0x034646C4 LDR X0, [X0 + 0x7C8]
	0x034646C8 BL 0x1C16CF4
	0x034646CC ADRP X0, 0xCCB000
	0x034646D0 LDR X0, [X0 + 0x7D0]
	0x034646D4 BL 0x1C16CF4
	0x034646D8 ADRP X0, 0xCCC000
	0x034646DC LDR X0, [X0 + 0x338]
	0x034646E0 BL 0x1C16CF4
	0x034646E4 ADRP X0, 0xC90000
	0x034646E8 LDR X0, [X0 + 0x830]
	0x034646EC BL 0x1C16CF4
	0x034646F0 ADRP X0, 0xCCC000
	0x034646F4 LDR X0, [X0 + 0x340]
	0x034646F8 BL 0x1C16CF4
	0x034646FC ADRP X0, 0xC90000
	0x03464700 LDR X0, [X0 + 0x838]
	0x03464704 BL 0x1C16CF4
	0x03464708 ADRP X0, 0xCCC000
	0x0346470C LDR X0, [X0 + 0x348]
	0x03464710 BL 0x1C16CF4
	0x03464714 ADRP X0, 0xC90000
	0x03464718 LDR X0, [X0 + 0x840]
	0x0346471C BL 0x1C16CF4
	0x03464720 ADRP X0, 0xCCC000
	0x03464724 LDR X0, [X0 + 0x350]
	0x03464728 BL 0x1C16CF4
	0x0346472C ADRP X0, 0xCCC000
	0x03464730 LDR X0, [X0 + 0x358]
	0x03464734 BL 0x1C16CF4
	0x03464738 ADRP X0, 0xCCC000
	0x0346473C LDR X0, [X0 + 0x360]
	0x03464740 BL 0x1C16CF4
	0x03464744 MOVZ W8, 0x1
	0x03464748 STRB W8, [X20 + 0x7BB]
	0x0346474C STP X31, X31, [X31 + 0x20]
	0x03464750 STR X31, [X31 + 0x18]
	0x03464754 ADRP X25, 0xCCA000
	0x03464758 LDR W8, [X19]
	0x0346475C LDR X20, [X19 + 0x20]
	0x03464760 LDR X25, [X25 + 0x790]
	0x03464764 CBZ W8, 0x3464788
	0x03464768 CMP W8, 0x1
	0x0346476C B.NE 0x34647B4
	0x03464770 LDR X8, [X19 + 0x70]
	0x03464774 MOVN W9, 0x0
	0x03464778 STR X8, [X31 + 0x18]
	0x0346477C STR X31, [X19 + 0x70]
	0x03464780 STR W9, [X19]
	0x03464784 B 0x3464AE8
	0x03464788 LDR X8, [X19 + 0x68]
	0x0346478C MOVN W9, 0x0
	0x03464790 STR X8, [X31 + 0x20]
	0x03464794 STR X31, [X19 + 0x68]
	0x03464798 STR W9, [X19]
	0x0346479C ADRP X8, 0xC90000
	0x034647A0 LDR X8, [X8 + 0x830]
	0x034647A4 ADD X0, X31, 0x20
	0x034647A8 LDR X1, [X8]
	0x034647AC BL 0x2677474
	0x034647B0 B 0x3464A04
	0x034647B4 ADRP X8, 0xCCC000
	0x034647B8 LDR X8, [X8 + 0x360]
	0x034647BC LDR X0, [X8]
	0x034647C0 BL 0x1C16F10
	0x034647C4 MOV X21, X0
	0x034647C8 MOV X1, X31
	0x034647CC BL 0x344BC7C
	0x034647D0 STR X21, [X19 + 0x60]
	0x034647D4 CBZ X21, 0x3464BA0
	0x034647D8 LDR X8, [X19 + 0x20]
	0x034647DC STR X8, [X21 + 0x10]
	0x034647E0 LDR X8, [X19 + 0x28]
	0x034647E4 STR X8, [X21 + 0x18]
	0x034647E8 LDR X8, [X19 + 0x30]
	0x034647EC STR X8, [X21 + 0x20]
	0x034647F0 LDR W8, [X19 + 0x38]
	0x034647F4 STR W8, [X21 + 0x28]
	0x034647F8 LDUR X8, [X19 + 0x3C]
	0x034647FC STUR X8, [X21 + 0x2C]
	0x03464800 LDR X8, [X19 + 0x60]
	0x03464804 CBZ X8, 0x3464BA4
	0x03464808 LDR X9, [X19 + 0x48]
	0x0346480C STR X9, [X8 + 0x38]
	0x03464810 LDR X9, [X19 + 0x50]
	0x03464814 STR X9, [X8 + 0x40]
	0x03464818 CBZ X20, 0x3464BA8
	0x0346481C LDRB W8, [X20 + 0x10]
	0x03464820 CBZ W8, 0x3464A08
	0x03464824 LDR X8, [X19 + 0x60]
	0x03464828 CBZ X8, 0x3464BAC
	0x0346482C LDR X21, [X8 + 0x18]
	0x03464830 CBZ X21, 0x3464BB0
	0x03464834 ADRP X23, 0xC90000
	0x03464838 LDR X8, [X21]
	0x0346483C LDR X23, [X23 + 0x818]
	0x03464840 LDRH W9, [X8 + 0x12E]
	0x03464844 LDR X1, [X23]
	0x03464848 CBZ X9, 0x346486C
	0x0346484C LDR X10, [X8 + 0xB0]
	0x03464850 ADD X10, X10, 0x8
	0x03464854 LDUR X11, [X10 - 0x8]
	0x03464858 CMP X11, X1
	0x0346485C B.EQ 0x346487C
	0x03464860 SUBS X9, X9, 0x1
	0x03464864 ADD X10, X10, 0x10
	0x03464868 B.NE 0x3464854
	0x0346486C MOVZ W2, 0x7
	0x03464870 MOV X0, X21
	0x03464874 BL 0x1C5C788
	0x03464878 B 0x346488C
	0x0346487C LDR W9, [X10]
	0x03464880 ADD W9, W9, 0x7
	0x03464884 ADD X8, X8, W9, 0x4, SXTW
	0x03464888 ADD X0, X8, 0x138
	0x0346488C LDP X8, X1, [X0]
	0x03464890 MOV X0, X21
	0x03464894 BLR X8
	0x03464898 MOV X1, X31
	0x0346489C BL 0x32277A8
	0x034648A0 TBNZ X0, 0x0, 0x3464A04
	0x034648A4 LDR X8, [X19 + 0x60]
	0x034648A8 CBZ X8, 0x3464BB4
	0x034648AC ADRP X9, 0xC90000
	0x034648B0 LDR X9, [X9 + 0x9F0]
	0x034648B4 LDR X21, [X8 + 0x18]
	0x034648B8 LDR X0, [X9]
	0x034648BC LDR W9, [X0 + 0xE0]
	0x034648C0 CBNZ W9, 0x34648C8
	0x034648C4 BL 0x1C16DFC
	0x034648C8 MOV X0, X31
	0x034648CC BL 0x33616A4
	0x034648D0 ADRP X22, 0xC91000
	0x034648D4 LDR X22, [X22 + 0xA10]
	0x034648D8 MOV X8, X0
	0x034648DC STR X8, [X31 + 0x28]
	0x034648E0 LDR X0, [X22]
	0x034648E4 LDR W8, [X0 + 0xE0]
	0x034648E8 CBNZ W8, 0x34648F4
	0x034648EC BL 0x1C16DFC
	0x034648F0 LDR X0, [X22]
	0x034648F4 LDR X8, [X0 + 0xB8]
	0x034648F8 LDR X1, [X8]
	0x034648FC ADD X0, X31, 0x28
	0x03464900 MOV X2, X31
	0x03464904 BL 0x335FC68
	0x03464908 CBZ X21, 0x3464BB8
	0x0346490C LDR X8, [X21]
	0x03464910 LDR X1, [X23]
	0x03464914 MOV X22, X0
	0x03464918 LDRH W9, [X8 + 0x12E]
	0x0346491C CBZ X9, 0x3464940
	0x03464920 LDR X10, [X8 + 0xB0]
	0x03464924 ADD X10, X10, 0x8
	0x03464928 LDUR X11, [X10 - 0x8]
	0x0346492C CMP X11, X1
	0x03464930 B.EQ 0x3464950
	0x03464934 SUBS X9, X9, 0x1
	0x03464938 ADD X10, X10, 0x10
	0x0346493C B.NE 0x3464928
	0x03464940 MOVZ W2, 0xB
	0x03464944 MOV X0, X21
	0x03464948 BL 0x1C5C788
	0x0346494C B 0x3464960
	0x03464950 LDR W9, [X10]
	0x03464954 ADD W9, W9, 0xB
	0x03464958 ADD X8, X8, W9, 0x4, SXTW
	0x0346495C ADD X0, X8, 0x138
	0x03464960 LDP X8, X2, [X0]
	0x03464964 MOV X0, X21
	0x03464968 MOV X1, X22
	0x0346496C BLR X8
	0x03464970 TBZ X0, 0x0, 0x3464A04
	0x03464974 LDR X8, [X19 + 0x60]
	0x03464978 CBZ X8, 0x3464BBC
	0x0346497C LDR X1, [X8 + 0x18]
	0x03464980 LDR X3, [X19 + 0x58]
	0x03464984 LDR X4, [X8 + 0x40]
	0x03464988 MOV X0, X20
	0x0346498C MOV X2, X31
	0x03464990 MOV X5, X31
	0x03464994 BL 0x34440A8
	0x03464998 CBZ X0, 0x3464BC0
	0x0346499C ADRP X8, 0xC90000
	0x034649A0 LDR X8, [X8 + 0x840]
	0x034649A4 LDR X1, [X8]
	0x034649A8 BL 0x269F5D0
	0x034649AC ADRP X8, 0xC90000
	0x034649B0 LDR X8, [X8 + 0x838]
	0x034649B4 STR X0, [X31 + 0x20]
	0x034649B8 LDR X1, [X8]
	0x034649BC ADD X0, X31, 0x20
	0x034649C0 BL 0x2677430
	0x034649C4 TBNZ X0, 0x0, 0x346479C
	0x034649C8 STR W31, [X19]
	0x034649CC LDR X8, [X31 + 0x20]
	0x034649D0 STR X8, [X19 + 0x68]
	0x034649D4 LDR X0, [X25]
	0x034649D8 LDR W8, [X0 + 0xE0]
	0x034649DC CBNZ W8, 0x34649E4
	0x034649E0 BL 0x1C16DFC
	0x034649E4 ADRP X8, 0xCCC000
	0x034649E8 LDR X8, [X8 + 0x328]
	0x034649EC ADD X0, X19, 0x8
	0x034649F0 LDR X3, [X8]
	0x034649F4 ADD X1, X31, 0x20
	0x034649F8 MOV X2, X19
	0x034649FC BL 0x1FBCD3C
	0x03464A00 B 0x3464B78
	0x03464A04 CBZ X20, 0x3464B9C
	0x03464A08 ADRP X8, 0xCCC000
	0x03464A0C LDR X8, [X8 + 0x330]
	0x03464A10 LDR X21, [X20 + 0x58]
	0x03464A14 LDR X23, [X19 + 0x60]
	0x03464A18 LDR X0, [X8]
	0x03464A1C BL 0x1C16F10
	0x03464A20 ADRP X8, 0xCCC000
	0x03464A24 LDR X8, [X8 + 0x358]
	0x03464A28 MOV X22, X0
	0x03464A2C LDR X2, [X8]
	0x03464A30 MOV X1, X23
	0x03464A34 MOV X3, X31
	0x03464A38 BL 0x2D27AA8
	0x03464A3C LDR X8, [X19 + 0x60]
	0x03464A40 CBZ X8, 0x3464B90
	0x03464A44 ADRP X9, 0xCCB000
	0x03464A48 LDR X23, [X19 + 0x58]
	0x03464A4C LDR X9, [X9 + 0x7C8]
	0x03464A50 CBNZ X23, 0x3464A58
	0x03464A54 LDR X23, [X20 + 0x18]
	0x03464A58 LDR X20, [X8 + 0x18]
	0x03464A5C LDR X1, [X8 + 0x40]
	0x03464A60 LDR X2, [X9]
	0x03464A64 STP X31, X31, [X31 + 0x8]
	0x03464A68 ADD X0, X31, 0x8
	0x03464A6C BL 0x242E368
	0x03464A70 ADRP X8, 0xCCB000
	0x03464A74 LDR X8, [X8 + 0x7D0]
	0x03464A78 LDR X0, [X8]
	0x03464A7C BL 0x1C16F10
	0x03464A80 LDP X3, X4, [X31 + 0x8]
	0x03464A84 MOV X24, X0
	0x03464A88 MOV X1, X20
	0x03464A8C MOV X2, X23
	0x03464A90 MOV X5, X31
	0x03464A94 BL 0x3465404
	0x03464A98 CBZ X21, 0x3464B94
	0x03464A9C ADRP X8, 0xCCC000
	0x03464AA0 LDR X8, [X8 + 0x338]
	0x03464AA4 LDR X3, [X8]
	0x03464AA8 MOV X0, X21
	0x03464AAC MOV X1, X22
	0x03464AB0 MOV X2, X24
	0x03464AB4 BL 0x2243230
	0x03464AB8 CBZ X0, 0x3464B98
	0x03464ABC ADRP X8, 0xCCC000
	0x03464AC0 LDR X8, [X8 + 0x350]
	0x03464AC4 LDR X1, [X8]
	0x03464AC8 BL 0x269F5D0
	0x03464ACC ADRP X8, 0xCCC000
	0x03464AD0 LDR X8, [X8 + 0x348]
	0x03464AD4 STR X0, [X31 + 0x18]
	0x03464AD8 LDR X1, [X8]
	0x03464ADC ADD X0, X31, 0x18
	0x03464AE0 BL 0x2677430
	0x03464AE4 TBZ X0, 0x0, 0x3464B3C
	0x03464AE8 ADRP X8, 0xCCC000
	0x03464AEC LDR X8, [X8 + 0x340]
	0x03464AF0 ADD X0, X31, 0x18
	0x03464AF4 LDR X1, [X8]
	0x03464AF8 BL 0x2677474
	0x03464AFC MOVN W8, 0x1
	0x03464B00 STR W8, [X19]
	0x03464B04 STR X31, [X19 + 0x60]
	0x03464B08 MOV X20, X0
	0x03464B0C LDR X0, [X25]
	0x03464B10 ADRP X21, 0xCCB000
	0x03464B14 ADD X19, X19, 0x8
	0x03464B18 LDR W8, [X0 + 0xE0]
	0x03464B1C LDR X21, [X21 + 0x238]
	0x03464B20 CBNZ W8, 0x3464B28
	0x03464B24 BL 0x1C16DFC
	0x03464B28 LDR X2, [X21]
	0x03464B2C MOV X0, X19
	0x03464B30 MOV X1, X20
	0x03464B34 BL 0x26322B0
	0x03464B38 B 0x3464B78
	0x03464B3C MOVZ W8, 0x1
	0x03464B40 STR W8, [X19]
	0x03464B44 LDR X8, [X31 + 0x18]
	0x03464B48 STR X8, [X19 + 0x70]
	0x03464B4C LDR X0, [X25]
	0x03464B50 LDR W8, [X0 + 0xE0]
	0x03464B54 CBNZ W8, 0x3464B5C
	0x03464B58 BL 0x1C16DFC
	0x03464B5C ADRP X8, 0xCCC000
	0x03464B60 LDR X8, [X8 + 0x320]
	0x03464B64 ADD X0, X19, 0x8
	0x03464B68 LDR X3, [X8]
	0x03464B6C ADD X1, X31, 0x18
	0x03464B70 MOV X2, X19
	0x03464B74 BL 0x1FBCD3C
	0x03464B78 LDP X20, X19, [X31 + 0x60]
	0x03464B7C LDP X22, X21, [X31 + 0x50]
	0x03464B80 LDP X24, X23, [X31 + 0x40]
	0x03464B84 LDP X30, X25, [X31 + 0x30]
	0x03464B88 ADD X31, X31, 0x70
	0x03464B8C RET
	0x03464B90 BL 0x1C16F20
	0x03464B94 BL 0x1C16F20
	0x03464B98 BL 0x1C16F20
	0x03464B9C BL 0x1C16F20
	0x03464BA0 BL 0x1C16F20
	0x03464BA4 BL 0x1C16F20
	0x03464BA8 BL 0x1C16F20
	0x03464BAC BL 0x1C16F20
	0x03464BB0 BL 0x1C16F20
	0x03464BB4 BL 0x1C16F20
	0x03464BB8 BL 0x1C16F20
	0x03464BBC BL 0x1C16F20
	0x03464BC0 BL 0x1C16F20
	0x03464BC4 B 0x3464C3C
	0x03464BC8 B 0x3464C3C
	0x03464BCC B 0x3464C3C
	0x03464BD0 B 0x3464C3C
	0x03464BD4 B 0x3464C3C
	0x03464BD8 B 0x3464C3C
	0x03464BDC B 0x3464C3C
	0x03464BE0 B 0x3464C3C
	0x03464BE4 B 0x3464C3C
	0x03464BE8 B 0x3464C3C
	0x03464BEC B 0x3464C3C
	0x03464BF0 B 0x3464C3C
	0x03464BF4 B 0x3464C3C
	0x03464BF8 B 0x3464C3C
	0x03464BFC B 0x3464C3C
	0x03464C00 B 0x3464C3C
	0x03464C04 B 0x3464C3C
	0x03464C08 B 0x3464C3C
	0x03464C0C B 0x3464C3C
	0x03464C10 B 0x3464C3C
	0x03464C14 B 0x3464C3C
	0x03464C18 B 0x3464C3C
	0x03464C1C B 0x3464C3C
	0x03464C20 B 0x3464C3C
	0x03464C24 B 0x3464C3C
	0x03464C28 B 0x3464C3C
	0x03464C2C B 0x3464C3C
	0x03464C30 B 0x3464C3C
	0x03464C34 B 0x3464C3C
	0x03464C38 B 0x3464C3C
	0x03464C3C MOV X20, X0
	0x03464C40 CMP W1, 0x1
	0x03464C44 B.NE 0x3464CE4
	0x03464C48 MOV X0, X20
	0x03464C4C BL 0x3EB1AD0
	0x03464C50 MOV X20, X0
	0x03464C54 ADRP X0, 0xC8F000
	0x03464C58 LDR X0, [X0 + 0x7D0]
	0x03464C5C BL 0x1C16D08
	0x03464C60 LDR X8, [X20]
	0x03464C64 LDR X1, [X8]
	0x03464C68 BL 0x1C17270
	0x03464C6C TBZ X0, 0x0, 0x3464CBC
	0x03464C70 LDR X20, [X20]
	0x03464C74 BL 0x3EB1AE0
	0x03464C78 MOVN W8, 0x1
	0x03464C7C STR X31, [X19 + 0x60]
	0x03464C80 STR W8, [X19], #0x8
	0x03464C84 ADRP X0, 0xCCA000
	0x03464C88 LDR X0, [X0 + 0x790]
	0x03464C8C BL 0x1C16D08
	0x03464C90 LDR W8, [X0 + 0xE0]
	0x03464C94 CBNZ W8, 0x3464C9C
	0x03464C98 BL 0x1C16DFC
	0x03464C9C ADRP X0, 0xCCB000
	0x03464CA0 LDR X0, [X0 + 0x258]
	0x03464CA4 BL 0x1C16D08
	0x03464CA8 MOV X2, X0
	0x03464CAC MOV X0, X19
	0x03464CB0 MOV X1, X20
	0x03464CB4 BL 0x26324C8
	0x03464CB8 B 0x3464B78
	0x03464CBC MOVZ W0, 0x8
	0x03464CC0 BL 0x3EB1AF0
	0x03464CC4 LDR X8, [X20]
	0x03464CC8 STR X8, [X0]
	0x03464CCC ADRP X1, 0xA50000
	0x03464CD0 ADD X1, X1, 0xE58
	0x03464CD4 MOV X2, X31
	0x03464CD8 BL 0x3EB1B00
	0x03464CDC MOV X20, X0
	0x03464CE0 BL 0x3EB1AE0
	0x03464CE4 MOV X0, X20
	0x03464CE8 BL 0x1D2C690
	0x03464CEC BL 0x1990590
	0x03464CF0 STR X30, [X31 - 0x30]!
	0x03464CF4 STP X22, X21, [X31 + 0x10]
	0x03464CF8 STP X20, X19, [X31 + 0x20]
	0x03464CFC ADRP X22, 0xF79000
	0x03464D00 ADRP X21, 0xCCA000
	0x03464D04 LDRB W8, [X22 + 0x7BC]
	0x03464D08 LDR X21, [X21 + 0x790]
	0x03464D0C MOV X19, X1
	0x03464D10 MOV X20, X0
	0x03464D14 TBNZ X8, 0x0, 0x3464D38
	0x03464D18 ADRP X0, 0xCCB000
	0x03464D1C LDR X0, [X0 + 0x260]
	0x03464D20 BL 0x1C16CF4
	0x03464D24 ADRP X0, 0xCCA000
	0x03464D28 LDR X0, [X0 + 0x790]
	0x03464D2C BL 0x1C16CF4
	0x03464D30 MOVZ W8, 0x1
	0x03464D34 STRB W8, [X22 + 0x7BC]
	0x03464D38 LDR X0, [X21]
	0x03464D3C ADRP X21, 0xCCB000
	0x03464D40 LDR W8, [X0 + 0xE0]
	0x03464D44 LDR X21, [X21 + 0x260]
	0x03464D48 CBNZ W8, 0x3464D50
	0x03464D4C BL 0x1C16DFC
	0x03464D50 LDR X2, [X21]
	0x03464D54 ADD X0, X20, 0x8
	0x03464D58 MOV X1, X19
	0x03464D5C LDP X20, X19, [X31 + 0x20]
	0x03464D60 LDP X22, X21, [X31 + 0x10]
	0x03464D64 LDR X30, [X31], #0x30
	0x03464D68 B 0x2632228
	0x03464D6C SUB X31, X31, 0x70
	0x03464D70 STP X30, X25, [X31 + 0x30]
	0x03464D74 STP X24, X23, [X31 + 0x40]
	0x03464D78 STP X22, X21, [X31 + 0x50]
	0x03464D7C STP X20, X19, [X31 + 0x60]
	0x03464D80 ADRP X20, 0xF79000
	0x03464D84 LDRB W8, [X20 + 0x7BD]
	0x03464D88 MOV X19, X0
	0x03464D8C TBNZ X8, 0x0, 0x3464E7C
	0x03464D90 ADRP X0, 0xCCC000
	0x03464D94 LDR X0, [X0 + 0x368]
	0x03464D98 BL 0x1C16CF4
	0x03464D9C ADRP X0, 0xCCC000
	0x03464DA0 LDR X0, [X0 + 0x370]
	0x03464DA4 BL 0x1C16CF4
	0x03464DA8 ADRP X0, 0xCCB000
	0x03464DAC LDR X0, [X0 + 0xF0]
	0x03464DB0 BL 0x1C16CF4
	0x03464DB4 ADRP X0, 0xCCA000
	0x03464DB8 LDR X0, [X0 + 0x6E0]
	0x03464DBC BL 0x1C16CF4
	0x03464DC0 ADRP X0, 0xC91000
	0x03464DC4 LDR X0, [X0 + 0xA10]
	0x03464DC8 BL 0x1C16CF4
	0x03464DCC ADRP X0, 0xC90000
	0x03464DD0 LDR X0, [X0 + 0x9F0]
	0x03464DD4 BL 0x1C16CF4
	0x03464DD8 ADRP X0, 0xCCB000
	0x03464DDC LDR X0, [X0 + 0x7C0]
	0x03464DE0 BL 0x1C16CF4
	0x03464DE4 ADRP X0, 0xC90000
	0x03464DE8 LDR X0, [X0 + 0x818]
	0x03464DEC BL 0x1C16CF4
	0x03464DF0 ADRP X0, 0xCCB000
	0x03464DF4 LDR X0, [X0 + 0x7C8]
	0x03464DF8 BL 0x1C16CF4
	0x03464DFC ADRP X0, 0xCCB000
	0x03464E00 LDR X0, [X0 + 0x7D0]
	0x03464E04 BL 0x1C16CF4
	0x03464E08 ADRP X0, 0xCCB000
	0x03464E0C LDR X0, [X0 + 0x7D8]
	0x03464E10 BL 0x1C16CF4
	0x03464E14 ADRP X0, 0xC90000
	0x03464E18 LDR X0, [X0 + 0x830]
	0x03464E1C BL 0x1C16CF4
	0x03464E20 ADRP X0, 0xC91000
	0x03464E24 LDR X0, [X0 + 0xDB0]
	0x03464E28 BL 0x1C16CF4
	0x03464E2C ADRP X0, 0xC90000
	0x03464E30 LDR X0, [X0 + 0x838]
	0x03464E34 BL 0x1C16CF4
	0x03464E38 ADRP X0, 0xC91000
	0x03464E3C LDR X0, [X0 + 0xDB8]
	0x03464E40 BL 0x1C16CF4
	0x03464E44 ADRP X0, 0xC90000
	0x03464E48 LDR X0, [X0 + 0x840]
	0x03464E4C BL 0x1C16CF4
	0x03464E50 ADRP X0, 0xC91000
	0x03464E54 LDR X0, [X0 + 0xDC0]
	0x03464E58 BL 0x1C16CF4
	0x03464E5C ADRP X0, 0xCCC000
	0x03464E60 LDR X0, [X0 + 0x378]
	0x03464E64 BL 0x1C16CF4
	0x03464E68 ADRP X0, 0xCCC000
	0x03464E6C LDR X0, [X0 + 0x380]
	0x03464E70 BL 0x1C16CF4
	0x03464E74 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xF7B000
	015 Move W8, [X20+1975]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {101}
	021 Move X0, 0xCCE000
	022 Move X0, [X0+224]
	023 Call 0x1C17CF4
	024 Move X0, 0xCCE000
	025 Move X0, [X0+696]
	026 Call 0x1C17CF4
	027 Move X0, 0xCCE000
	028 Move X0, [X0+704]
	029 Call 0x1C17CF4
	030 Move X0, 0xCCD000
	031 Move X0, [X0+416]
	032 Call 0x1C17CF4
	033 Move X0, 0xCCC000
	034 Move X0, [X0+1840]
	035 Call 0x1C17CF4
	036 Move X0, 0xC93000
	037 Move X0, [X0+2576]
	038 Call 0x1C17CF4
	039 Move X0, 0xC92000
	040 Move X0, [X0+2544]
	041 Call 0x1C17CF4
	042 Move X0, 0xCCE000
	043 Move X0, [X0+632]
	044 Call 0x1C17CF4
	045 Move X0, 0xCCE000
	046 Move X0, [X0+264]
	047 Call 0x1C17CF4
	048 Move X0, 0xCCE000
	049 Move X0, [X0+640]
	050 Call 0x1C17CF4
	051 Move X0, 0xC91000
	052 Move X0, [X0+3584]
	053 Call 0x1C17CF4
	054 Move X0, 0xCCE000
	055 Move X0, [X0+272]
	056 Call 0x1C17CF4
	057 Move X0, 0xCCE000
	058 Move X0, [X0+280]
	059 Call 0x1C17CF4
	060 Move X0, 0xC91000
	061 Move X0, [X0+3608]
	062 Call 0x1C17CF4
	063 Move X0, 0xC92000
	064 Move X0, [X0+2072]
	065 Call 0x1C17CF4
	066 Move X0, 0xCCD000
	067 Move X0, [X0+1992]
	068 Call 0x1C17CF4
	069 Move X0, 0xCCD000
	070 Move X0, [X0+2000]
	071 Call 0x1C17CF4
	072 Move X0, 0xCCE000
	073 Move X0, [X0+648]
	074 Call 0x1C17CF4
	075 Move X0, 0xCCE000
	076 Move X0, [X0+656]
	077 Call 0x1C17CF4
	078 Move X0, 0xC92000
	079 Move X0, [X0+2096]
	080 Call 0x1C17CF4
	081 Move X0, 0xC92000
	082 Move X0, [X0+2104]
	083 Call 0x1C17CF4
	084 Move X0, 0xCCE000
	085 Move X0, [X0+664]
	086 Call 0x1C17CF4
	087 Move X0, 0xC92000
	088 Move X0, [X0+2112]
	089 Call 0x1C17CF4
	090 Move X0, 0xCCE000
	091 Move X0, [X0+672]
	092 Call 0x1C17CF4
	093 Move X0, 0xCCE000
	094 Move X0, [X0+712]
	095 Call 0x1C17CF4
	096 Move X0, 0xCCE000
	097 Move X0, [X0+720]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X20+1975], W8
	101 Move [X31+32], X31
	102 Move [X31+40], X31
	103 Move [X31+24], X31
	104 Move W25, [X19]
	105 Move X20, [X19+32]
	106 Compare W25, 0
	107 JumpIfEqual {116}
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X19+128]
	110 Move TEMP, 0
	111 Not TEMP
	112 Move W25, TEMP
	113 Move [X31+24], X8
	114 Move [X19+128], X31
	115 Move [X19], W25
	116 Move X8, [X19+120]
	117 Move TEMP, 0
	118 Not TEMP
	119 Move W25, TEMP
	120 Move [X31+32], X8
	121 Move [X19+120], X31
	122 Move [X19], W25
	123 Move X8, 0xC92000
	124 Move X8, [X8+2096]
	125 Add X0, X31, 32
	126 Move X1, [X8]
	127 Call TaskAwaiter`1<Object>.GetResult, X0
	128 Move X8, 0xCCE000
	129 Move X8, [X8+720]
	130 Move X0, [X8]
	131 Call 0x1C17F10
	132 Move X21, X0
	133 Move X1, X31
	134 Call <>c__DisplayClass94_0..ctor, X0
	135 Move [X19+112], X21
	136 Compare X21, 0
	137 JumpIfEqual {943}
	138 Move X8, [X19+32]
	139 Move [X21+16], X8
	140 Move X8, [X19+40]
	141 Move [X21+24], X8
	142 Move X8, [X19+48]
	143 Move [X21+32], X8
	144 Move X8, [X19+56]
	145 Move [X21+40], X8
	146 Move W8, [X19+64]
	147 Move [X21+48], W8
	148 Move X8, [X19+72]
	149 Move [X21+56], X8
	150 Move V0, [X19+5]
	151 Move [X21+4], V0
	152 Move X8, [X19+112]
	153 Compare X8, 0
	154 JumpIfEqual {944}
	155 Move X9, [X19+96]
	156 Move [X8+80], X9
	157 Compare X20, 0
	158 JumpIfEqual {945}
	159 Move W8, [X20+16]
	160 Compare W8, 0
	161 JumpIfEqual {301}
	162 Move X8, [X19+112]
	163 Compare X8, 0
	164 JumpIfEqual {946}
	165 Move X21, [X8+24]
	166 Compare X21, 0
	167 JumpIfEqual {947}
	168 Move X23, 0xC92000
	169 Move X8, [X21]
	170 Move X23, [X23+2072]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Move X1, [X23]
	173 Compare X9, 0
	174 JumpIfEqual {181}
	175 Move X10, [X8+176]
	176 Add X10, X10, 8
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Subtract X9, X9, 1
	180 Add X10, X10, 16
	181 Move W2, 7
	182 Move X0, X21
	183 Call 0x1C5D788
	184 Move W9, [X10]
	185 Add W9, W9, 7
	186 Add X8, X8, W9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X1, [X0+8]
	190 Move X0, X21
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X1, X31
	193 Call String.IsNullOrEmpty, X0
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {299}
	198 Move X8, [X19+112]
	199 Compare X8, 0
	200 JumpIfEqual {948}
	201 Move X9, 0xC91000
	202 Move X9, [X9+2544]
	203 Move X21, [X8+24]
	204 Move X0, [X9]
	205 Move W9, [X0+224]
	206 Compare W9, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X31
	210 Call DateTime.get_UtcNow
	211 Move X22, 0xC92000
	212 Move X22, [X22+2576]
	213 Move X8, X0
	214 Move [X31+40], X8
	215 Move X0, [X22]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {221}
	219 Call 0x1C17DFC
	220 Move X0, [X22]
	221 Move X8, [X0+184]
	222 Move X1, [X8]
	223 Add X0, X31, 40
	224 Move X2, X31
	225 Call DateTime.Add, X0, X1
	226 Compare X21, 0
	227 JumpIfEqual {949}
	228 Move X8, [X21]
	229 Move X1, [X23]
	230 Move X22, X0
	231 NotImplemented "Instruction LDRH not yet implemented."
	232 Compare X9, 0
	233 JumpIfEqual {240}
	234 Move X10, [X8+176]
	235 Add X10, X10, 8
	236 NotImplemented "Instruction LDUR not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Subtract X9, X9, 1
	239 Add X10, X10, 16
	240 Move W2, 11
	241 Move X0, X21
	242 Call 0x1C5D788
	243 Move W9, [X10]
	244 Add W9, W9, 11
	245 Add X8, X8, W9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X2, [X0+8]
	249 Move X0, X21
	250 Move X1, X22
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {299}
	256 Move X8, [X19+112]
	257 Compare X8, 0
	258 JumpIfEqual {950}
	259 Move X1, [X8+24]
	260 Move X3, [X19+104]
	261 Move X4, [X8+80]
	262 Move X0, X20
	263 Move X2, X31
	264 Move X5, X31
	265 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	266 Compare X0, 0
	267 JumpIfEqual {951}
	268 Move X8, 0xC91000
	269 Move X8, [X8+2112]
	270 Move X1, [X8]
	271 Call Task`1<Object>.GetAwaiter, X0
	272 Move X8, 0xC91000
	273 Move X8, [X8+2104]
	274 Move [X31+32], X0
	275 Move X1, [X8]
	276 Add X0, X31, 32
	277 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	278 Move TEMP, X0
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfEqual {123}
	282 Move [X19], W31
	283 Move X8, [X31+32]
	284 Move [X19+120], X8
	285 Move X8, 0xCCB000
	286 Move X8, [X8+1840]
	287 Move X0, [X8]
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {292}
	291 Call 0x1C17DFC
	292 Move X8, 0xCCD000
	293 Move X8, [X8+704]
	294 Add X0, X19, 8
	295 Move X3, [X8]
	296 Add X1, X31, 32
	297 Move X2, X19
	298 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	299 Compare X20, 0
	300 JumpIfEqual {938}
	301 Move X8, 0xCCD000
	302 Move X8, [X8+632]
	303 Move X21, [X20+88]
	304 Move X23, [X19+112]
	305 Move X0, [X8]
	306 Call 0x1C17F10
	307 Move X8, 0xCCD000
	308 Move X8, [X8+712]
	309 Move X22, X0
	310 Move X2, [X8]
	311 Move X1, X23
	312 Move X3, X31
	313 Call Func`1<Object>..ctor, X0, X1, X2
	314 Move X8, [X19+112]
	315 Compare X8, 0
	316 JumpIfEqual {935}
	317 Move X9, 0xCCC000
	318 Move X23, [X19+104]
	319 Move X24, [X8+24]
	320 Move X9, [X9+1992]
	321 Compare X23, 0
	322 JumpIfNotEqual {324}
	323 Move X23, [X20+24]
	324 Move X1, [X8+80]
	325 Move X2, [X9]
	326 Move [X31+8], X31
	327 Move [X31+16], X31
	328 Add X0, X31, 8
	329 Call Nullable`1<CancellationToken>..ctor, X0, X1
	330 Move X8, 0xCCC000
	331 Move X8, [X8+2000]
	332 Move X0, [X8]
	333 Call 0x1C17F10
	334 Move X3, [X31+8]
	335 Move X4, [X31+16]
	336 Move X20, X0
	337 Move X1, X24
	338 Move X2, X23
	339 Move X5, X31
	340 Call RetryHistory..ctor, X0, X1, X2, X3
	341 Compare X21, 0
	342 JumpIfEqual {936}
	343 Move X8, 0xCCD000
	344 Move X8, [X8+648]
	345 Move X3, [X8]
	346 Move X0, X21
	347 Move X1, X22
	348 Move X2, X20
	349 Call 0x2244230, X0, X1, X2
	350 Compare X0, 0
	351 JumpIfEqual {937}
	352 Move X8, 0xCCD000
	353 Move X8, [X8+672]
	354 Move X1, [X8]
	355 Call Task`1<Object>.GetAwaiter, X0
	356 Move X8, 0xCCD000
	357 Move X8, [X8+664]
	358 Move [X31+24], X0
	359 Move X1, [X8]
	360 Add X0, X31, 24
	361 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	362 Move TEMP, X0
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {390}
	366 Move X8, 0xCCD000
	367 Move X8, [X8+656]
	368 Add X0, X31, 24
	369 Move X1, [X8]
	370 Call TaskAwaiter`1<Object>.GetResult, X0
	371 Move X20, X0
	372 Compare X0, 0
	373 JumpIfEqual {930}
	374 Move X10, 0xCCD000
	375 Move X8, [X20]
	376 Move X10, [X10+640]
	377 NotImplemented "Instruction LDRH not yet implemented."
	378 Move X1, [X10]
	379 Compare X9, 0
	380 JumpIfEqual {387}
	381 Move X10, [X8+176]
	382 Add X10, X10, 8
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Subtract X9, X9, 1
	386 Add X10, X10, 16
	387 Move W2, 4
	388 Move X0, X20
	389 Call 0x1C5D788
	390 Move W8, 1
	391 Move [X19], W8
	392 Move X8, [X31+24]
	393 Move [X19+128], X8
	394 Move X8, 0xCCB000
	395 Move X8, [X8+1840]
	396 Move X0, [X8]
	397 Move W8, [X0+224]
	398 Compare W8, 0
	399 JumpIfNotEqual {401}
	400 Call 0x1C17DFC
	401 Move X8, 0xCCD000
	402 Move X8, [X8+696]
	403 Add X0, X19, 8
	404 Move X3, [X8]
	405 Add X1, X31, 24
	406 Move X2, X19
	407 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	408 Move W9, [X10]
	409 Add W9, W9, 4
	410 Add X8, X8, W9
	411 Add X0, X8, 312
	412 Move X8, [X0]
	413 Move X1, [X0+8]
	414 Move X0, X20
	415 NotImplemented "Instruction BLR not yet implemented."
	416 Move X21, X0
	417 Compare X0, 0
	418 JumpIfEqual {931}
	419 Move X10, 0xCCD000
	420 Move X8, [X21]
	421 Move X10, [X10+272]
	422 NotImplemented "Instruction LDRH not yet implemented."
	423 Move X1, [X10]
	424 Compare X9, 0
	425 JumpIfEqual {432}
	426 Move X10, [X8+176]
	427 Add X10, X10, 8
	428 NotImplemented "Instruction LDUR not yet implemented."
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Subtract X9, X9, 1
	431 Add X10, X10, 16
	432 Move X0, X21
	433 Move W2, W31
	434 Call 0x1C5D788
	435 NotImplemented "Instruction LDRSW not yet implemented."
	436 Add X8, X8, X9
	437 Add X0, X8, 312
	438 Move X8, [X0]
	439 Move X1, [X0+8]
	440 Move X0, X21
	441 NotImplemented "Instruction BLR not yet implemented."
	442 Move X21, X0
	443 Compare X0, 0
	444 JumpIfEqual {932}
	445 Move X24, 0xC90000
	446 Move X28, 0xCCD000
	447 Move X29, 0xC91000
	448 Move X26, 0xCCD000
	449 Move X27, 0xCCD000
	450 Move X24, [X24+3608]
	451 Move X28, [X28+280]
	452 Move X29, [X29+2072]
	453 Move X26, [X26+264]
	454 Move X27, [X27+224]
	455 Move X8, [X21]
	456 Move X1, [X24]
	457 NotImplemented "Instruction LDRH not yet implemented."
	458 Compare X9, 0
	459 JumpIfEqual {466}
	460 Move X10, [X8+176]
	461 Add X10, X10, 8
	462 NotImplemented "Instruction LDUR not yet implemented."
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Subtract X9, X9, 1
	465 Add X10, X10, 16
	466 Move X0, X21
	467 Move W2, W31
	468 Call 0x1C5D788
	469 NotImplemented "Instruction LDRSW not yet implemented."
	470 Add X8, X8, X9
	471 Add X0, X8, 312
	472 Move X8, [X0]
	473 Move X1, [X0+8]
	474 Move X0, X21
	475 NotImplemented "Instruction BLR not yet implemented."
	476 Move TEMP, X0
	477 And TEMP, TEMP, 1
	478 Compare TEMP, 1
	479 JumpIfNotEqual {603}
	480 Move X8, [X21]
	481 Move X1, [X28]
	482 NotImplemented "Instruction LDRH not yet implemented."
	483 Compare X9, 0
	484 JumpIfEqual {491}
	485 Move X10, [X8+176]
	486 Add X10, X10, 8
	487 NotImplemented "Instruction LDUR not yet implemented."
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Subtract X9, X9, 1
	490 Add X10, X10, 16
	491 Move X0, X21
	492 Move W2, W31
	493 Call 0x1C5D788
	494 NotImplemented "Instruction LDRSW not yet implemented."
	495 Add X8, X8, X9
	496 Add X0, X8, 312
	497 Move X8, [X0]
	498 Move X1, [X0+8]
	499 Move X0, X21
	500 NotImplemented "Instruction BLR not yet implemented."
	501 Move X8, [X19+112]
	502 Compare X8, 0
	503 JumpIfEqual {920}
	504 Move X23, [X8+24]
	505 Compare X23, 0
	506 JumpIfEqual {921}
	507 Move X8, [X23]
	508 Move X1, [X29]
	509 Move X22, X0
	510 NotImplemented "Instruction LDRH not yet implemented."
	511 Compare X9, 0
	512 JumpIfEqual {519}
	513 Move X10, [X8+176]
	514 Add X10, X10, 8
	515 NotImplemented "Instruction LDUR not yet implemented."
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Subtract X9, X9, 1
	518 Add X10, X10, 16
	519 Move W2, 10
	520 Move X0, X23
	521 Call 0x1C5D788
	522 Move W9, [X10]
	523 Add W9, W9, 10
	524 Add X8, X8, W9
	525 Add X0, X8, 312
	526 Move X8, [X0]
	527 Move X1, [X0+8]
	528 Move X0, X23
	529 NotImplemented "Instruction BLR not yet implemented."
	530 Compare X22, 0
	531 JumpIfEqual {918}
	532 Move X8, [X22]
	533 Move X1, [X26]
	534 Move X23, X0
	535 NotImplemented "Instruction LDRH not yet implemented."
	536 Compare X9, 0
	537 JumpIfEqual {544}
	538 Move X10, [X8+176]
	539 Add X10, X10, 8
	540 NotImplemented "Instruction LDUR not yet implemented."
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Subtract X9, X9, 1
	543 Add X10, X10, 16
	544 Move W2, 6
	545 Move X0, X22
	546 Call 0x1C5D788
	547 Move W9, [X10]
	548 Add W9, W9, 6
	549 Add X8, X8, W9
	550 Add X0, X8, 312
	551 Move X8, [X0]
	552 Move X1, [X0+8]
	553 Move X0, X22
	554 NotImplemented "Instruction BLR not yet implemented."
	555 Move X1, X0
	556 Compare X23, 0
	557 JumpIfEqual {919}
	558 Move X0, X23
	559 Move X2, X31
	560 Call String.Equals, X0, X1
	561 Move TEMP, X0
	562 And TEMP, TEMP, 1
	563 Compare TEMP, 1
	564 JumpIfNotEqual {455}
	565 Move X9, [X22]
	566 Move X8, [X27]
	567 Move W11, [X9+304]
	568 Move W10, [X8+304]
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move X9, [X9+200]
	571 Add X9, X9, X10
	572 NotImplemented "Instruction LDUR not yet implemented."
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X8, [X19+112]
	575 Compare X8, 0
	576 JumpIfEqual {926}
	577 Move X23, [X8+24]
	578 Compare X23, 0
	579 JumpIfEqual {927}
	580 Move X8, [X23]
	581 Move X1, [X29]
	582 NotImplemented "Instruction LDRH not yet implemented."
	583 Compare X9, 0
	584 JumpIfEqual {591}
	585 Move X10, [X8+176]
	586 Add X10, X10, 8
	587 NotImplemented "Instruction LDUR not yet implemented."
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Subtract X9, X9, 1
	590 Add X10, X10, 16
	591 Move W2, 9
	592 Move X0, X23
	593 Call 0x1C5D788
	594 Move W9, [X10]
	595 Add W9, W9, 9
	596 Add X8, X8, W9
	597 Add X0, X8, 312
	598 Move X8, [X0]
	599 Move X1, [X0+8]
	600 Move X0, X23
	601 NotImplemented "Instruction BLR not yet implemented."
	602 Move [X22+104], X0
	603 Move X24, X31
	604 Move W22, 11
	605 Move TEMP, X25
	606 And TEMP, TEMP, -2147483648
	607 Compare TEMP, -2147483648
	608 JumpIfNotEqual {634}
	609 Compare X21, 0
	610 JumpIfEqual {634}
	611 Move X10, 0xC90000
	612 Move X8, [X21]
	613 Move X10, [X10+3584]
	614 NotImplemented "Instruction LDRH not yet implemented."
	615 Move X1, [X10]
	616 Compare X9, 0
	617 JumpIfEqual {624}
	618 Move X10, [X8+176]
	619 Add X10, X10, 8
	620 NotImplemented "Instruction LDUR not yet implemented."
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Subtract X9, X9, 1
	623 Add X10, X10, 16
	624 Move X0, X21
	625 Move W2, W31
	626 Call 0x1C5D788
	627 NotImplemented "Instruction LDRSW not yet implemented."
	628 Add X8, X8, X9
	629 Add X0, X8, 312
	630 Move X8, [X0]
	631 Move X1, [X0+8]
	632 Move X0, X21
	633 NotImplemented "Instruction BLR not yet implemented."
	634 Compare X24, 0
	635 JumpIfNotEqual {933}
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Compare W22, 0
	638 JumpIfNotEqual {904}
	639 Move X8, [X20]
	640 Move X10, 0xCCD000
	641 NotImplemented "Instruction LDRH not yet implemented."
	642 Move X10, [X10+640]
	643 Move X1, [X10]
	644 Compare X9, 0
	645 JumpIfEqual {652}
	646 Move X10, [X8+176]
	647 Add X10, X10, 8
	648 NotImplemented "Instruction LDUR not yet implemented."
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Subtract X9, X9, 1
	651 Add X10, X10, 16
	652 Move W2, 1
	653 Move X0, X20
	654 Call 0x1C5D788
	655 Move W9, [X10]
	656 Add W9, W9, 1
	657 Add X8, X8, W9
	658 Add X0, X8, 312
	659 Move X8, [X0]
	660 Move X1, [X0+8]
	661 Move X0, X20
	662 NotImplemented "Instruction BLR not yet implemented."
	663 Move X21, X0
	664 Compare X0, 0
	665 JumpIfEqual {939}
	666 Move X8, [X21]
	667 Move X10, 0xCCD000
	668 NotImplemented "Instruction LDRH not yet implemented."
	669 Move X10, [X10+272]
	670 Move X1, [X10]
	671 Compare X9, 0
	672 JumpIfEqual {679}
	673 Move X10, [X8+176]
	674 Add X10, X10, 8
	675 NotImplemented "Instruction LDUR not yet implemented."
	676 NotImplemented "Instruction CMP not yet implemented."
	677 Subtract X9, X9, 1
	678 Add X10, X10, 16
	679 Move X0, X21
	680 Move W2, W31
	681 Call 0x1C5D788
	682 NotImplemented "Instruction LDRSW not yet implemented."
	683 Add X8, X8, X9
	684 Add X0, X8, 312
	685 Move X8, [X0]
	686 Move X1, [X0+8]
	687 Move X0, X21
	688 NotImplemented "Instruction BLR not yet implemented."
	689 Move X21, X0
	690 Compare X0, 0
	691 JumpIfEqual {940}
	692 Move X24, 0xC90000
	693 Move X26, 0xCCD000
	694 Move X27, 0xC91000
	695 Move X28, 0xCCD000
	696 Move X29, 0xCCD000
	697 Move X24, [X24+3608]
	698 Move X26, [X26+280]
	699 Move X27, [X27+2072]
	700 Move X28, [X28+264]
	701 Move X29, [X29+224]
	702 Move X8, [X21]
	703 Move X1, [X24]
	704 NotImplemented "Instruction LDRH not yet implemented."
	705 Compare X9, 0
	706 JumpIfEqual {713}
	707 Move X10, [X8+176]
	708 Add X10, X10, 8
	709 NotImplemented "Instruction LDUR not yet implemented."
	710 NotImplemented "Instruction CMP not yet implemented."
	711 Subtract X9, X9, 1
	712 Add X10, X10, 16
	713 Move X0, X21
	714 Move W2, W31
	715 Call 0x1C5D788
	716 NotImplemented "Instruction LDRSW not yet implemented."
	717 Add X8, X8, X9
	718 Add X0, X8, 312
	719 Move X8, [X0]
	720 Move X1, [X0+8]
	721 Move X0, X21
	722 NotImplemented "Instruction BLR not yet implemented."
	723 Move TEMP, X0
	724 And TEMP, TEMP, 1
	725 Compare TEMP, 1
	726 JumpIfNotEqual {850}
	727 Move X8, [X21]
	728 Move X1, [X26]
	729 NotImplemented "Instruction LDRH not yet implemented."
	730 Compare X9, 0
	731 JumpIfEqual {738}
	732 Move X10, [X8+176]
	733 Add X10, X10, 8
	734 NotImplemented "Instruction LDUR not yet implemented."
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Subtract X9, X9, 1
	737 Add X10, X10, 16
	738 Move X0, X21
	739 Move W2, W31
	740 Call 0x1C5D788
	741 NotImplemented "Instruction LDRSW not yet implemented."
	742 Add X8, X8, X9
	743 Add X0, X8, 312
	744 Move X8, [X0]
	745 Move X1, [X0+8]
	746 Move X0, X21
	747 NotImplemented "Instruction BLR not yet implemented."
	748 Move X8, [X19+112]
	749 Compare X8, 0
	750 JumpIfEqual {924}
	751 Move X23, [X8+24]
	752 Compare X23, 0
	753 JumpIfEqual {925}
	754 Move X8, [X23]
	755 Move X1, [X27]
	756 Move X22, X0
	757 NotImplemented "Instruction LDRH not yet implemented."
	758 Compare X9, 0
	759 JumpIfEqual {766}
	760 Move X10, [X8+176]
	761 Add X10, X10, 8
	762 NotImplemented "Instruction LDUR not yet implemented."
	763 NotImplemented "Instruction CMP not yet implemented."
	764 Subtract X9, X9, 1
	765 Add X10, X10, 16
	766 Move W2, 10
	767 Move X0, X23
	768 Call 0x1C5D788
	769 Move W9, [X10]
	770 Add W9, W9, 10
	771 Add X8, X8, W9
	772 Add X0, X8, 312
	773 Move X8, [X0]
	774 Move X1, [X0+8]
	775 Move X0, X23
	776 NotImplemented "Instruction BLR not yet implemented."
	777 Compare X22, 0
	778 JumpIfEqual {922}
	779 Move X8, [X22]
	780 Move X1, [X28]
	781 Move X23, X0
	782 NotImplemented "Instruction LDRH not yet implemented."
	783 Compare X9, 0
	784 JumpIfEqual {791}
	785 Move X10, [X8+176]
	786 Add X10, X10, 8
	787 NotImplemented "Instruction LDUR not yet implemented."
	788 NotImplemented "Instruction CMP not yet implemented."
	789 Subtract X9, X9, 1
	790 Add X10, X10, 16
	791 Move W2, 6
	792 Move X0, X22
	793 Call 0x1C5D788
	794 Move W9, [X10]
	795 Add W9, W9, 6
	796 Add X8, X8, W9
	797 Add X0, X8, 312
	798 Move X8, [X0]
	799 Move X1, [X0+8]
	800 Move X0, X22
	801 NotImplemented "Instruction BLR not yet implemented."
	802 Move X1, X0
	803 Compare X23, 0
	804 JumpIfEqual {923}
	805 Move X0, X23
	806 Move X2, X31
	807 Call String.Equals, X0, X1
	808 Move TEMP, X0
	809 And TEMP, TEMP, 1
	810 Compare TEMP, 1
	811 JumpIfNotEqual {702}
	812 Move X9, [X22]
	813 Move X8, [X29]
	814 Move W11, [X9+304]
	815 Move W10, [X8+304]
	816 NotImplemented "Instruction CMP not yet implemented."
	817 Move X9, [X9+200]
	818 Add X9, X9, X10
	819 NotImplemented "Instruction LDUR not yet implemented."
	820 NotImplemented "Instruction CMP not yet implemented."
	821 Move X8, [X19+112]
	822 Compare X8, 0
	823 JumpIfEqual {928}
	824 Move X23, [X8+24]
	825 Compare X23, 0
	826 JumpIfEqual {929}
	827 Move X8, [X23]
	828 Move X1, [X27]
	829 NotImplemented "Instruction LDRH not yet implemented."
	830 Compare X9, 0
	831 JumpIfEqual {838}
	832 Move X10, [X8+176]
	833 Add X10, X10, 8
	834 NotImplemented "Instruction LDUR not yet implemented."
	835 NotImplemented "Instruction CMP not yet implemented."
	836 Subtract X9, X9, 1
	837 Add X10, X10, 16
	838 Move W2, 9
	839 Move X0, X23
	840 Call 0x1C5D788
	841 Move W9, [X10]
	842 Add W9, W9, 9
	843 Add X8, X8, W9
	844 Add X0, X8, 312
	845 Move X8, [X0]
	846 Move X1, [X0+8]
	847 Move X0, X23
	848 NotImplemented "Instruction BLR not yet implemented."
	849 Move [X22+104], X0
	850 Move X24, X31
	851 Move W22, 14
	852 Move TEMP, X25
	853 And TEMP, TEMP, -2147483648
	854 Compare TEMP, -2147483648
	855 JumpIfNotEqual {881}
	856 Compare X21, 0
	857 JumpIfEqual {881}
	858 Move X10, 0xC90000
	859 Move X8, [X21]
	860 Move X10, [X10+3584]
	861 NotImplemented "Instruction LDRH not yet implemented."
	862 Move X1, [X10]
	863 Compare X9, 0
	864 JumpIfEqual {871}
	865 Move X10, [X8+176]
	866 Add X10, X10, 8
	867 NotImplemented "Instruction LDUR not yet implemented."
	868 NotImplemented "Instruction CMP not yet implemented."
	869 Subtract X9, X9, 1
	870 Add X10, X10, 16
	871 Move X0, X21
	872 Move W2, W31
	873 Call 0x1C5D788
	874 NotImplemented "Instruction LDRSW not yet implemented."
	875 Add X8, X8, X9
	876 Add X0, X8, 312
	877 Move X8, [X0]
	878 Move X1, [X0+8]
	879 Move X0, X21
	880 NotImplemented "Instruction BLR not yet implemented."
	881 Compare X24, 0
	882 JumpIfNotEqual {941}
	883 Compare W22, 0
	884 JumpIfEqual {886}
	885 NotImplemented "Instruction CMP not yet implemented."
	886 Move TEMP, 1
	887 Not TEMP
	888 Move W8, TEMP
	889 Move [X19+112], X31
	890 Move [X19+8], W8
	891 Move X8, 0xCCB000
	892 Move X8, [X8+1840]
	893 Move X0, [X8]
	894 Move W8, [X0+224]
	895 Compare W8, 0
	896 JumpIfNotEqual {898}
	897 Call 0x1C17DFC
	898 Move X8, 0xCCC000
	899 Move X8, [X8+416]
	900 Move X0, X19
	901 Move X1, X20
	902 Move X2, [X8]
	903 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	904 Move X20, [X31+128]
	905 Move X19, [X31+136]
	906 Move X22, [X31+112]
	907 Move X21, [X31+120]
	908 Move X24, [X31+96]
	909 Move X23, [X31+104]
	910 Move X26, [X31+80]
	911 Move X25, [X31+88]
	912 Move X28, [X31+64]
	913 Move X27, [X31+72]
	914 Move X29, [X31+48]
	915 Move X30, [X31+56]
	916 Add X31, X31, 144
	917 Return 
	918 Call 0x1C17F20
	919 Call 0x1C17F20
	920 Call 0x1C17F20
	921 Call 0x1C17F20
	922 Call 0x1C17F20
	923 Call 0x1C17F20
	924 Call 0x1C17F20
	925 Call 0x1C17F20
	926 Call 0x1C17F20
	927 Call 0x1C17F20
	928 Call 0x1C17F20
	929 Call 0x1C17F20
	930 Call 0x1C17F20
	931 Call 0x1C17F20
	932 Call 0x1C17F20
	933 Move X0, X24
	934 Call 0x1C17F18
	935 Call 0x1C17F20
	936 Call 0x1C17F20
	937 Call 0x1C17F20
	938 Call 0x1C17F20
	939 Call 0x1C17F20
	940 Call 0x1C17F20
	941 Move X0, X24
	942 Call 0x1C17F18
	943 Call 0x1C17F20
	944 Call 0x1C17F20
	945 Call 0x1C17F20
	946 Call 0x1C17F20
	947 Call 0x1C17F20
	948 Call 0x1C17F20
	949 Call 0x1C17F20
	950 Call 0x1C17F20
	951 Call 0x1C17F20
	952 Move X22, X1
	953 Move X23, X0
	954 Move X22, X1
	955 Move X23, X0
	956 NotImplemented "Instruction CMP not yet implemented."
	957 Move X0, X23
	958 Call 0x3EB2AD0
	959 Move X24, [X0]
	960 Call 0x3EB2AE0
	961 Move W22, W31
	962 Move TEMP, X25
	963 And TEMP, TEMP, -2147483648
	964 Compare TEMP, -2147483648
	965 JumpIfEqual {856}
	966 Move X24, X31
	967 Move TEMP, X25
	968 And TEMP, TEMP, -2147483648
	969 Compare TEMP, -2147483648
	970 JumpIfNotEqual {996}
	971 Compare X21, 0
	972 JumpIfEqual {996}
	973 Move X10, 0xC90000
	974 Move X8, [X21]
	975 Move X10, [X10+3584]
	976 NotImplemented "Instruction LDRH not yet implemented."
	977 Move X1, [X10]
	978 Compare X9, 0
	979 JumpIfEqual {986}
	980 Move X10, [X8+176]
	981 Add X10, X10, 8
	982 NotImplemented "Instruction LDUR not yet implemented."
	983 NotImplemented "Instruction CMP not yet implemented."
	984 Subtract X9, X9, 1
	985 Add X10, X10, 16
	986 Move X0, X21
	987 Move W2, W31
	988 Call 0x1C5D788
	989 NotImplemented "Instruction LDRSW not yet implemented."
	990 Add X8, X8, X9
	991 Add X0, X8, 312
	992 Move X8, [X0]
	993 Move X1, [X0+8]
	994 Move X0, X21
	995 NotImplemented "Instruction BLR not yet implemented."
	996 Compare X24, 0
	997 JumpIfEqual {1050}
	998 Move X0, X24
	999 Call 0x1C17F18
	1000 Move X22, X1
	1001 Move X23, X0
	1002 Move TEMP, X25
	1003 And TEMP, TEMP, -2147483648
	1004 Compare TEMP, -2147483648
	1005 JumpIfEqual {971}
	1006 Move X22, X1
	1007 Move X23, X0
	1008 NotImplemented "Instruction CMP not yet implemented."
	1009 Move X0, X23
	1010 Call 0x3EB2AD0
	1011 Move X24, [X0]
	1012 Call 0x3EB2AE0
	1013 Move W22, W31
	1014 Move TEMP, X25
	1015 And TEMP, TEMP, -2147483648
	1016 Compare TEMP, -2147483648
	1017 JumpIfEqual {609}
	1018 Move X24, X31
	1019 Move TEMP, X25
	1020 And TEMP, TEMP, -2147483648
	1021 Compare TEMP, -2147483648
	1022 JumpIfNotEqual {1048}
	1023 Compare X21, 0
	1024 JumpIfEqual {1048}
	1025 Move X10, 0xC90000
	1026 Move X8, [X21]
	1027 Move X10, [X10+3584]
	1028 NotImplemented "Instruction LDRH not yet implemented."
	1029 Move X1, [X10]
	1030 Compare X9, 0
	1031 JumpIfEqual {1038}
	1032 Move X10, [X8+176]
	1033 Add X10, X10, 8
	1034 NotImplemented "Instruction LDUR not yet implemented."
	1035 NotImplemented "Instruction CMP not yet implemented."
	1036 Subtract X9, X9, 1
	1037 Add X10, X10, 16
	1038 Move X0, X21
	1039 Move W2, W31
	1040 Call 0x1C5D788
	1041 NotImplemented "Instruction LDRSW not yet implemented."
	1042 Add X8, X8, X9
	1043 Add X0, X8, 312
	1044 Move X8, [X0]
	1045 Move X1, [X0+8]
	1046 Move X0, X21
	1047 NotImplemented "Instruction BLR not yet implemented."
	1048 Compare X24, 0
	1049 JumpIfNotEqual {1093}
	1050 NotImplemented "Instruction CMP not yet implemented."
	1051 Move X0, X23
	1052 Call 0x3EB2AD0
	1053 Move X20, X0
	1054 Move X0, 0xC90000
	1055 Move X0, [X0+2000]
	1056 Call 0x1C17D08
	1057 Move X8, [X20]
	1058 Move X1, [X8]
	1059 Call 0x1C18270
	1060 Move TEMP, X0
	1061 And TEMP, TEMP, 1
	1062 Compare TEMP, 1
	1063 JumpIfNotEqual {1085}
	1064 Move X20, [X20]
	1065 Call 0x3EB2AE0
	1066 Move TEMP, 1
	1067 Not TEMP
	1068 Move W8, TEMP
	1069 Move [X19+112], X31
	1070 Move [X19+8], W8
	1071 Move X0, 0xCCB000
	1072 Move X0, [X0+1840]
	1073 Call 0x1C17D08
	1074 Move W8, [X0+224]
	1075 Compare W8, 0
	1076 JumpIfNotEqual {1078}
	1077 Call 0x1C17DFC
	1078 Move X0, 0xCCC000
	1079 Move X0, [X0+448]
	1080 Call 0x1C17D08
	1081 Move X2, X0
	1082 Move X0, X19
	1083 Move X1, X20
	1084 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	1085 Move W0, 8
	1086 Call 0x3EB2AF0
	1087 Move X8, [X20]
	1088 Move [X0], X8
	1089 Move X1, 0xA51000
	1090 Add X1, X1, 3672
	1091 Move X2, X31
	1092 Call 0x3EB2B00
	1093 Move X0, X24
	1094 Call 0x1C17F18
	1095 Move X22, X1
	1096 Move X23, X0
	1097 Move TEMP, X25
	1098 And TEMP, TEMP, -2147483648
	1099 Compare TEMP, -2147483648
	1100 JumpIfEqual {1023}
	1101 Move X23, X0
	1102 Call 0x3EB2AE0
	1103 Move X0, X23
	1104 Call 0x1D2D690
	1105 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03464E78 STRB W8, [X20 + 0x7BD]
	0x03464E7C STP X31, X31, [X31 + 0x20]
	0x03464E80 STR X31, [X31 + 0x18]
	0x03464E84 ADRP X25, 0xCCA000
	0x03464E88 LDR W8, [X19]
	0x03464E8C LDR X20, [X19 + 0x20]
	0x03464E90 LDR X25, [X25 + 0x6E0]
	0x03464E94 CBZ W8, 0x3464EB8
	0x03464E98 CMP W8, 0x1
	0x03464E9C B.NE 0x3464EE4
	0x03464EA0 LDR X8, [X19 + 0x70]
	0x03464EA4 MOVN W9, 0x0
	0x03464EA8 STR X8, [X31 + 0x18]
	0x03464EAC STR X31, [X19 + 0x70]
	0x03464EB0 STR W9, [X19]
	0x03464EB4 B 0x3465204
	0x03464EB8 LDR X8, [X19 + 0x68]
	0x03464EBC MOVN W9, 0x0
	0x03464EC0 STR X8, [X31 + 0x20]
	0x03464EC4 STR X31, [X19 + 0x68]
	0x03464EC8 STR W9, [X19]
	0x03464ECC ADRP X8, 0xC90000
	0x03464ED0 LDR X8, [X8 + 0x830]
	0x03464ED4 ADD X0, X31, 0x20
	0x03464ED8 LDR X1, [X8]
	0x03464EDC BL 0x2677474
	0x03464EE0 B 0x3465124
	0x03464EE4 ADRP X8, 0xCCC000
	0x03464EE8 LDR X8, [X8 + 0x380]
	0x03464EEC LDR X0, [X8]
	0x03464EF0 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF7A000
	007 Move X21, 0xCCB000
	008 Move W8, [X22+1976]
	009 Move X21, [X21+1840]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCCC000
	017 Move X0, [X0+456]
	018 Call 0x1C17CF4
	019 Move X0, 0xCCB000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1976], W8
	024 Move X0, [X21]
	025 Move X21, 0xCCC000
	026 Move W8, [X0+224]
	027 Move X21, [X21+456]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

