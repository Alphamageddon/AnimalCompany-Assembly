Type: Nakama.Client/<>c__DisplayClass80_0

Method: System.Void .ctor()

Disassembly:
	0x0344B644 LDP X24, X23, [X31 + 0x30]
	0x0344B648 LDP X30, X25, [X31 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.Task <LinkSteamAsync>b__0()

Disassembly:
	0x0344B64C ADD X31, X31, 0x60
	0x0344B650 RET
	0x0344B654 BL 0x1C16F20
	0x0344B658 MOV X1, X31
	0x0344B65C B 0x33BDD8C
	0x0344B660 SUB X31, X31, 0x40
	0x0344B664 STR X30, [X31 + 0x10]
	0x0344B668 STP X22, X21, [X31 + 0x20]
	0x0344B66C STP X20, X19, [X31 + 0x30]
	0x0344B670 ADRP X20, 0xF92000
	0x0344B674 LDRB W8, [X20 + 0x74C]
	0x0344B678 MOV X19, X0
	0x0344B67C TBNZ X8, 0x0, 0x344B6AC
	0x0344B680 ADRP X0, 0xCE4000
	0x0344B684 LDR X0, [X0 + 0xA00]
	0x0344B688 BL 0x1C16CF4
	0x0344B68C ADRP X0, 0xCA9000
	0x0344B690 LDR X0, [X0 + 0x818]
	0x0344B694 BL 0x1C16CF4
	0x0344B698 ADRP X0, 0xCE4000
	0x0344B69C LDR X0, [X0 + 0x7C8]
	0x0344B6A0 BL 0x1C16CF4
	0x0344B6A4 MOVZ W8, 0x1
	0x0344B6A8 STRB W8, [X20 + 0x74C]
	0x0344B6AC LDR X9, [X19 + 0x10]
	0x0344B6B0 CBZ X9, 0x344B7A4
	0x0344B6B4 LDR X21, [X19 + 0x18]
	0x0344B6B8 CBZ X21, 0x344B7A4
	0x0344B6BC ADRP X10, 0xCA9000
	0x0344B6C0 LDR X8, [X21]
	0x0344B6C4 LDR X10, [X10 + 0x818]
	0x0344B6C8 ADRP X22, 0xCE4000
	0x0344B6CC LDR X20, [X9 + 0x48]
	0x0344B6D0 LDRH W9, [X8 + 0x12E]
	0x0344B6D4 LDR X1, [X10]
	0x0344B6D8 LDR X22, [X22 + 0xA00]
	0x0344B6DC CBZ X9, 0x344B700
	0x0344B6E0 LDR X10, [X8 + 0xB0]
	0x0344B6E4 ADD X10, X10, 0x8
	0x0344B6E8 LDUR X11, [X10 - 0x8]
	0x0344B6EC CMP X11, X1
	0x0344B6F0 B.EQ 0x344B710
	0x0344B6F4 SUBS X9, X9, 0x1
	0x0344B6F8 ADD X10, X10, 0x10
	0x0344B6FC B.NE 0x344B6E8
	0x0344B700 MOV X0, X21
	0x0344B704 MOV W2, W31
	0x0344B708 BL 0x1C5C788
	0x0344B70C B 0x344B71C
	0x0344B710 LDRSW X9, [X10]
	0x0344B714 ADD X8, X8, X9, 0x4, LSL
	0x0344B718 ADD X0, X8, 0x138
	0x0344B71C LDP X8, X1, [X0]
	0x0344B720 MOV X0, X21
	0x0344B724 BLR X8
	0x0344B728 LDR X8, [X22]
	0x0344B72C MOV X21, X0
	0x0344B730 MOV X0, X8
	0x0344B734 BL 0x1C16F10
	0x0344B738 MOV X1, X31
	0x0344B73C MOV X22, X0
	0x0344B740 BL 0x34074A4
	0x0344B744 CBZ X22, 0x344B7A4
	0x0344B748 LDR X8, [X19 + 0x20]
	0x0344B74C ADRP X9, 0xCE4000
	0x0344B750 ADD X0, X31, 0x0
	0x0344B754 STR X8, [X22 + 0x10]
	0x0344B758 LDR W8, [X19 + 0x28]
	0x0344B75C LDR X9, [X9 + 0x7C8]
	0x0344B760 STR W8, [X22 + 0x18]
	0x0344B764 LDR X1, [X19 + 0x30]
	0x0344B768 LDR X2, [X9]
	0x0344B76C STP X31, X31, [X31]
	0x0344B770 BL 0x242E368
	0x0344B774 CBZ X20, 0x344B7A4
	0x0344B778 LDP X3, X4, [X31]
	0x0344B77C MOV X0, X20
	0x0344B780 MOV X1, X21
	0x0344B784 MOV X2, X22
	0x0344B788 MOV X5, X31
	0x0344B78C BL 0x3411474
	0x0344B790 LDP X20, X19, [X31 + 0x30]
	0x0344B794 LDP X22, X21, [X31 + 0x20]
	0x0344B798 LDR X30, [X31 + 0x10]
	0x0344B79C ADD X31, X31, 0x40
	0x0344B7A0 RET
	0x0344B7A4 BL 0x1C16F20
	0x0344B7A8 MOV X1, X31
	0x0344B7AC B 0x33BDD8C
	0x0344B7B0 SUB X31, X31, 0x80
	0x0344B7B4 STP X30, X27, [X31 + 0x30]
	0x0344B7B8 STP X26, X25, [X31 + 0x40]
	0x0344B7BC STP X24, X23, [X31 + 0x50]
	0x0344B7C0 STP X22, X21, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF93000
	009 Move W8, [X20+1857]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xCE5000
	016 Move X0, [X0+2424]
	017 Call 0x1C17CF4
	018 Move X0, 0xCE5000
	019 Move X0, [X0+2544]
	020 Call 0x1C17CF4
	021 Move X0, 0xCAA000
	022 Move X0, [X0+2072]
	023 Call 0x1C17CF4
	024 Move X0, 0xCE5000
	025 Move X0, [X0+1992]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1857], W8
	029 Move X9, [X19+16]
	030 Compare X9, 0
	031 JumpIfEqual {109}
	032 Move X21, [X19+24]
	033 Compare X21, 0
	034 JumpIfEqual {109}
	035 Move X10, 0xCAA000
	036 Move X8, [X21]
	037 Move X10, [X10+2072]
	038 Move X22, 0xCE5000
	039 Move X20, [X9+72]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Move X22, [X22+2544]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X21
	052 Move W2, W31
	053 Call 0x1C5D788
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X21
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X8, [X22]
	062 Move X21, X0
	063 Move X0, X8
	064 Call 0x1C17F10
	065 Move X1, X31
	066 Move X22, X0
	067 Call ApiLinkSteamRequest..ctor, X0
	068 Compare X22, 0
	069 JumpIfEqual {109}
	070 Move W8, [X19+32]
	071 Move X9, 0xCE5000
	072 Move X9, [X9+2424]
	073 Move [X22+24], W8
	074 Move X0, [X9]
	075 Call 0x1C17F10
	076 Move X1, X31
	077 Move X23, X0
	078 Call ApiAccountSteam..ctor, X0
	079 Compare X23, 0
	080 JumpIfEqual {109}
	081 Move X8, [X19+40]
	082 Move X9, 0xCE5000
	083 Move X9, [X9+1992]
	084 Add X0, X31, 0
	085 Move [X23+16], X8
	086 Move [X22+16], X23
	087 Move X1, [X19+48]
	088 Move X2, [X9]
	089 Move [X31], X31
	090 Move [X31+8], X31
	091 Call Nullable`1<CancellationToken>..ctor, X0, X1
	092 Compare X20, 0
	093 JumpIfEqual {109}
	094 Move X3, [X31]
	095 Move X4, [X31+8]
	096 Move X0, X20
	097 Move X1, X21
	098 Move X2, X22
	099 Move X5, X31
	100 Call ApiClient.LinkSteamAsync, X0, X1, X2, X3
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X22, [X31+32]
	104 Move X21, [X31+40]
	105 Move X30, [X31+16]
	106 Move X23, [X31+24]
	107 Add X31, X31, 64
	108 Return X0
	109 Call 0x1C17F20

