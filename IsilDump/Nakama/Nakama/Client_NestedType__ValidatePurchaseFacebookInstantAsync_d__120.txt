Type: Nakama.Client/<ValidatePurchaseFacebookInstantAsync>d__120

Method: System.Void MoveNext()

Disassembly:
	0x0346E038 LDR X23, [X23 + 0x818]
	0x0346E03C LDRH W9, [X8 + 0x12E]
	0x0346E040 LDR X1, [X23]
	0x0346E044 CBZ X9, 0x346E068
	0x0346E048 LDR X10, [X8 + 0xB0]
	0x0346E04C ADD X10, X10, 0x8
	0x0346E050 LDUR X11, [X10 - 0x8]
	0x0346E054 CMP X11, X1
	0x0346E058 B.EQ 0x346E078
	0x0346E05C SUBS X9, X9, 0x1
	0x0346E060 ADD X10, X10, 0x10
	0x0346E064 B.NE 0x346E050
	0x0346E068 MOVZ W2, 0x7
	0x0346E06C MOV X0, X21
	0x0346E070 BL 0x1C5C788
	0x0346E074 B 0x346E088
	0x0346E078 LDR W9, [X10]
	0x0346E07C ADD W9, W9, 0x7
	0x0346E080 ADD X8, X8, W9, 0x4, SXTW
	0x0346E084 ADD X0, X8, 0x138
	0x0346E088 LDP X8, X1, [X0]
	0x0346E08C MOV X0, X21
	0x0346E090 BLR X8
	0x0346E094 MOV X1, X31
	0x0346E098 BL 0x32277A8
	0x0346E09C TBNZ X0, 0x0, 0x346E200
	0x0346E0A0 LDR X8, [X19 + 0x58]
	0x0346E0A4 CBZ X8, 0x346E3A8
	0x0346E0A8 ADRP X9, 0xC86000
	0x0346E0AC LDR X9, [X9 + 0x9F0]
	0x0346E0B0 LDR X21, [X8 + 0x18]
	0x0346E0B4 LDR X0, [X9]
	0x0346E0B8 LDR W9, [X0 + 0xE0]
	0x0346E0BC CBNZ W9, 0x346E0C4
	0x0346E0C0 BL 0x1C16DFC
	0x0346E0C4 MOV X0, X31
	0x0346E0C8 BL 0x33616A4
	0x0346E0CC ADRP X22, 0xC87000
	0x0346E0D0 LDR X22, [X22 + 0xA10]
	0x0346E0D4 MOV X8, X0
	0x0346E0D8 STR X8, [X31 + 0x28]
	0x0346E0DC LDR X0, [X22]
	0x0346E0E0 LDR W8, [X0 + 0xE0]
	0x0346E0E4 CBNZ W8, 0x346E0F0
	0x0346E0E8 BL 0x1C16DFC
	0x0346E0EC LDR X0, [X22]
	0x0346E0F0 LDR X8, [X0 + 0xB8]
	0x0346E0F4 LDR X1, [X8]
	0x0346E0F8 ADD X0, X31, 0x28
	0x0346E0FC MOV X2, X31
	0x0346E100 BL 0x335FC68
	0x0346E104 CBZ X21, 0x346E3AC
	0x0346E108 LDR X8, [X21]
	0x0346E10C LDR X1, [X23]
	0x0346E110 MOV X22, X0
	0x0346E114 LDRH W9, [X8 + 0x12E]
	0x0346E118 CBZ X9, 0x346E13C
	0x0346E11C LDR X10, [X8 + 0xB0]
	0x0346E120 ADD X10, X10, 0x8
	0x0346E124 LDUR X11, [X10 - 0x8]
	0x0346E128 CMP X11, X1
	0x0346E12C B.EQ 0x346E14C
	0x0346E130 SUBS X9, X9, 0x1
	0x0346E134 ADD X10, X10, 0x10
	0x0346E138 B.NE 0x346E124
	0x0346E13C MOVZ W2, 0xB
	0x0346E140 MOV X0, X21
	0x0346E144 BL 0x1C5C788
	0x0346E148 B 0x346E15C
	0x0346E14C LDR W9, [X10]
	0x0346E150 ADD W9, W9, 0xB
	0x0346E154 ADD X8, X8, W9, 0x4, SXTW
	0x0346E158 ADD X0, X8, 0x138
	0x0346E15C LDP X8, X2, [X0]
	0x0346E160 MOV X0, X21
	0x0346E164 MOV X1, X22
	0x0346E168 BLR X8
	0x0346E16C TBZ X0, 0x0, 0x346E200
	0x0346E170 LDR X8, [X19 + 0x58]
	0x0346E174 CBZ X8, 0x346E3B0
	0x0346E178 LDR X1, [X8 + 0x18]
	0x0346E17C LDR X3, [X19 + 0x50]
	0x0346E180 LDR X4, [X8 + 0x38]
	0x0346E184 MOV X0, X20
	0x0346E188 MOV X2, X31
	0x0346E18C MOV X5, X31
	0x0346E190 BL 0x34440A8
	0x0346E194 CBZ X0, 0x346E3B4
	0x0346E198 ADRP X8, 0xC86000
	0x0346E19C LDR X8, [X8 + 0x840]
	0x0346E1A0 LDR X1, [X8]
	0x0346E1A4 BL 0x269F5D0
	0x0346E1A8 ADRP X8, 0xC86000
	0x0346E1AC LDR X8, [X8 + 0x838]
	0x0346E1B0 STR X0, [X31 + 0x20]
	0x0346E1B4 LDR X1, [X8]
	0x0346E1B8 ADD X0, X31, 0x20
	0x0346E1BC BL 0x2677430
	0x0346E1C0 TBNZ X0, 0x0, 0x346DFB0
	0x0346E1C4 STR W31, [X19]
	0x0346E1C8 LDR X8, [X31 + 0x20]
	0x0346E1CC STR X8, [X19 + 0x60]
	0x0346E1D0 LDR X0, [X25]
	0x0346E1D4 LDR W8, [X0 + 0xE0]
	0x0346E1D8 CBNZ W8, 0x346E1E0
	0x0346E1DC BL 0x1C16DFC
	0x0346E1E0 ADRP X8, 0xCC2000
	0x0346E1E4 LDR X8, [X8 + 0x670]
	0x0346E1E8 ADD X0, X19, 0x8
	0x0346E1EC LDR X3, [X8]
	0x0346E1F0 ADD X1, X31, 0x20
	0x0346E1F4 MOV X2, X19
	0x0346E1F8 BL 0x1FBDFF0
	0x0346E1FC B 0x346E370
	0x0346E200 CBZ X20, 0x346E394
	0x0346E204 ADRP X8, 0xCC2000
	0x0346E208 LDR X8, [X8 + 0x5F0]
	0x0346E20C LDR X21, [X20 + 0x58]
	0x0346E210 LDR X23, [X19 + 0x58]
	0x0346E214 LDR X0, [X8]
	0x0346E218 BL 0x1C16F10
	0x0346E21C ADRP X8, 0xCC2000
	0x0346E220 LDR X8, [X8 + 0x678]
	0x0346E224 MOV X22, X0
	0x0346E228 LDR X2, [X8]
	0x0346E22C MOV X1, X23
	0x0346E230 MOV X3, X31
	0x0346E234 BL 0x2D27AA8
	0x0346E238 LDR X8, [X19 + 0x58]
	0x0346E23C CBZ X8, 0x346E388
	0x0346E240 ADRP X9, 0xCC1000
	0x0346E244 LDR X23, [X19 + 0x50]
	0x0346E248 LDR X9, [X9 + 0x7C8]
	0x0346E24C CBNZ X23, 0x346E254
	0x0346E250 LDR X23, [X20 + 0x18]
	0x0346E254 LDR X20, [X8 + 0x18]
	0x0346E258 LDR X1, [X8 + 0x38]
	0x0346E25C LDR X2, [X9]
	0x0346E260 STP X31, X31, [X31 + 0x8]
	0x0346E264 ADD X0, X31, 0x8
	0x0346E268 BL 0x242E368
	0x0346E26C ADRP X8, 0xCC1000
	0x0346E270 LDR X8, [X8 + 0x7D0]
	0x0346E274 LDR X0, [X8]
	0x0346E278 BL 0x1C16F10
	0x0346E27C LDP X3, X4, [X31 + 0x8]
	0x0346E280 MOV X24, X0
	0x0346E284 MOV X1, X20
	0x0346E288 MOV X2, X23
	0x0346E28C BL 0x3465404
	0x0346E290 CBZ X21, 0x346E38C
	0x0346E294 ADRP X8, 0xCC2000
	0x0346E298 LDR X8, [X8 + 0x5F8]
	0x0346E29C LDR X3, [X8]
	0x0346E2A0 MOV X0, X21
	0x0346E2A4 MOV X1, X22
	0x0346E2A8 MOV X2, X24
	0x0346E2AC BL 0x2243230
	0x0346E2B0 CBZ X0, 0x346E390
	0x0346E2B4 ADRP X8, 0xCC2000
	0x0346E2B8 LDR X8, [X8 + 0x610]
	0x0346E2BC LDR X1, [X8]
	0x0346E2C0 BL 0x269F5D0
	0x0346E2C4 ADRP X8, 0xCC2000
	0x0346E2C8 LDR X8, [X8 + 0x608]
	0x0346E2CC STR X0, [X31 + 0x18]
	0x0346E2D0 LDR X1, [X8]
	0x0346E2D4 ADD X0, X31, 0x18
	0x0346E2D8 BL 0x2677430
	0x0346E2DC TBZ X0, 0x0, 0x346E334
	0x0346E2E0 ADRP X8, 0xCC2000
	0x0346E2E4 LDR X8, [X8 + 0x600]
	0x0346E2E8 ADD X0, X31, 0x18
	0x0346E2EC LDR X1, [X8]
	0x0346E2F0 BL 0x2677474
	0x0346E2F4 MOVN W8, 0x1
	0x0346E2F8 STR W8, [X19]
	0x0346E2FC STR X31, [X19 + 0x58]
	0x0346E300 MOV X20, X0
	0x0346E304 LDR X0, [X25]
	0x0346E308 ADRP X21, 0xCC1000
	0x0346E30C ADD X19, X19, 0x8
	0x0346E310 LDR W8, [X0 + 0xE0]
	0x0346E314 LDR X21, [X21 + 0x458]
	0x0346E318 CBNZ W8, 0x346E320
	0x0346E31C BL 0x1C16DFC
	0x0346E320 LDR X2, [X21]
	0x0346E324 MOV X0, X19
	0x0346E328 MOV X1, X20
	0x0346E32C BL 0x26322B0
	0x0346E330 B 0x346E370
	0x0346E334 MOVZ W8, 0x1
	0x0346E338 STR W8, [X19]
	0x0346E33C LDR X8, [X31 + 0x18]
	0x0346E340 STR X8, [X19 + 0x68]
	0x0346E344 LDR X0, [X25]
	0x0346E348 LDR W8, [X0 + 0xE0]
	0x0346E34C CBNZ W8, 0x346E354
	0x0346E350 BL 0x1C16DFC
	0x0346E354 ADRP X8, 0xCC2000
	0x0346E358 LDR X8, [X8 + 0x668]
	0x0346E35C ADD X0, X19, 0x8
	0x0346E360 LDR X3, [X8]
	0x0346E364 ADD X1, X31, 0x18
	0x0346E368 MOV X2, X19
	0x0346E36C BL 0x1FBDFF0
	0x0346E370 LDP X20, X19, [X31 + 0x60]
	0x0346E374 LDP X22, X21, [X31 + 0x50]
	0x0346E378 LDP X24, X23, [X31 + 0x40]
	0x0346E37C LDP X30, X25, [X31 + 0x30]
	0x0346E380 ADD X31, X31, 0x70
	0x0346E384 RET
	0x0346E388 BL 0x1C16F20
	0x0346E38C BL 0x1C16F20
	0x0346E390 BL 0x1C16F20
	0x0346E394 BL 0x1C16F20
	0x0346E398 BL 0x1C16F20
	0x0346E39C BL 0x1C16F20
	0x0346E3A0 BL 0x1C16F20
	0x0346E3A4 BL 0x1C16F20
	0x0346E3A8 BL 0x1C16F20
	0x0346E3AC BL 0x1C16F20
	0x0346E3B0 BL 0x1C16F20
	0x0346E3B4 BL 0x1C16F20
	0x0346E3B8 B 0x346E42C
	0x0346E3BC B 0x346E42C
	0x0346E3C0 B 0x346E42C
	0x0346E3C4 B 0x346E42C
	0x0346E3C8 B 0x346E42C
	0x0346E3CC B 0x346E42C
	0x0346E3D0 B 0x346E42C
	0x0346E3D4 B 0x346E42C
	0x0346E3D8 B 0x346E42C
	0x0346E3DC B 0x346E42C
	0x0346E3E0 B 0x346E42C
	0x0346E3E4 B 0x346E42C
	0x0346E3E8 B 0x346E42C
	0x0346E3EC B 0x346E42C
	0x0346E3F0 B 0x346E42C
	0x0346E3F4 B 0x346E42C
	0x0346E3F8 B 0x346E42C
	0x0346E3FC B 0x346E42C
	0x0346E400 B 0x346E42C
	0x0346E404 B 0x346E42C
	0x0346E408 B 0x346E42C
	0x0346E40C B 0x346E42C
	0x0346E410 B 0x346E42C
	0x0346E414 B 0x346E42C
	0x0346E418 B 0x346E42C
	0x0346E41C B 0x346E42C
	0x0346E420 B 0x346E42C
	0x0346E424 B 0x346E42C
	0x0346E428 B 0x346E42C
	0x0346E42C MOV X20, X0
	0x0346E430 CMP W1, 0x1
	0x0346E434 B.NE 0x346E4D4
	0x0346E438 MOV X0, X20
	0x0346E43C BL 0x3EB1AD0
	0x0346E440 MOV X20, X0
	0x0346E444 ADRP X0, 0xC85000
	0x0346E448 LDR X0, [X0 + 0x7D0]
	0x0346E44C BL 0x1C16D08
	0x0346E450 LDR X8, [X20]
	0x0346E454 LDR X1, [X8]
	0x0346E458 BL 0x1C17270
	0x0346E45C TBZ X0, 0x0, 0x346E4AC
	0x0346E460 LDR X20, [X20]
	0x0346E464 BL 0x3EB1AE0
	0x0346E468 MOVN W8, 0x1
	0x0346E46C STR X31, [X19 + 0x58]
	0x0346E470 STR W8, [X19], #0x8
	0x0346E474 ADRP X0, 0xCC0000
	0x0346E478 LDR X0, [X0 + 0x530]
	0x0346E47C BL 0x1C16D08
	0x0346E480 LDR W8, [X0 + 0xE0]
	0x0346E484 CBNZ W8, 0x346E48C
	0x0346E488 BL 0x1C16DFC
	0x0346E48C ADRP X0, 0xCC1000
	0x0346E490 LDR X0, [X0 + 0x478]
	0x0346E494 BL 0x1C16D08
	0x0346E498 MOV X2, X0
	0x0346E49C MOV X0, X19
	0x0346E4A0 MOV X1, X20
	0x0346E4A4 BL 0x26324C8
	0x0346E4A8 B 0x346E370
	0x0346E4AC MOVZ W0, 0x8
	0x0346E4B0 BL 0x3EB1AF0
	0x0346E4B4 LDR X8, [X20]
	0x0346E4B8 STR X8, [X0]
	0x0346E4BC ADRP X1, 0xA46000
	0x0346E4C0 ADD X1, X1, 0xE58
	0x0346E4C4 MOV X2, X31
	0x0346E4C8 BL 0x3EB1B00
	0x0346E4CC MOV X20, X0
	0x0346E4D0 BL 0x3EB1AE0
	0x0346E4D4 MOV X0, X20
	0x0346E4D8 BL 0x1D2C690
	0x0346E4DC BL 0x1990590
	0x0346E4E0 STR X30, [X31 - 0x30]!
	0x0346E4E4 STP X22, X21, [X31 + 0x10]
	0x0346E4E8 STP X20, X19, [X31 + 0x20]
	0x0346E4EC ADRP X22, 0xF6F000
	0x0346E4F0 ADRP X21, 0xCC0000
	0x0346E4F4 LDRB W8, [X22 + 0x7E4]
	0x0346E4F8 LDR X21, [X21 + 0x530]
	0x0346E4FC MOV X19, X1
	0x0346E500 MOV X20, X0
	0x0346E504 TBNZ X8, 0x0, 0x346E528
	0x0346E508 ADRP X0, 0xCC1000
	0x0346E50C LDR X0, [X0 + 0x480]
	0x0346E510 BL 0x1C16CF4
	0x0346E514 ADRP X0, 0xCC0000
	0x0346E518 LDR X0, [X0 + 0x530]
	0x0346E51C BL 0x1C16CF4
	0x0346E520 MOVZ W8, 0x1
	0x0346E524 STRB W8, [X22 + 0x7E4]
	0x0346E528 LDR X0, [X21]
	0x0346E52C ADRP X21, 0xCC1000
	0x0346E530 LDR W8, [X0 + 0xE0]
	0x0346E534 LDR X21, [X21 + 0x480]
	0x0346E538 CBNZ W8, 0x346E540
	0x0346E53C BL 0x1C16DFC
	0x0346E540 LDR X2, [X21]
	0x0346E544 ADD X0, X20, 0x8
	0x0346E548 MOV X1, X19
	0x0346E54C LDP X20, X19, [X31 + 0x20]
	0x0346E550 LDP X22, X21, [X31 + 0x10]
	0x0346E554 LDR X30, [X31], #0x30
	0x0346E558 B 0x2632228
	0x0346E55C SUB X31, X31, 0x70
	0x0346E560 STP X30, X25, [X31 + 0x30]
	0x0346E564 STP X24, X23, [X31 + 0x40]
	0x0346E568 STP X22, X21, [X31 + 0x50]
	0x0346E56C STP X20, X19, [X31 + 0x60]
	0x0346E570 ADRP X20, 0xF6F000
	0x0346E574 LDRB W8, [X20 + 0x7E5]
	0x0346E578 MOV X19, X0
	0x0346E57C TBNZ X8, 0x0, 0x346E66C
	0x0346E580 ADRP X0, 0xCC2000
	0x0346E584 LDR X0, [X0 + 0x688]
	0x0346E588 BL 0x1C16CF4
	0x0346E58C ADRP X0, 0xCC2000
	0x0346E590 LDR X0, [X0 + 0x690]
	0x0346E594 BL 0x1C16CF4
	0x0346E598 ADRP X0, 0xCC1000
	0x0346E59C LDR X0, [X0 + 0x4D8]
	0x0346E5A0 BL 0x1C16CF4
	0x0346E5A4 ADRP X0, 0xCC0000
	0x0346E5A8 LDR X0, [X0 + 0x588]
	0x0346E5AC BL 0x1C16CF4
	0x0346E5B0 ADRP X0, 0xC87000
	0x0346E5B4 LDR X0, [X0 + 0xA10]
	0x0346E5B8 BL 0x1C16CF4
	0x0346E5BC ADRP X0, 0xC86000
	0x0346E5C0 LDR X0, [X0 + 0x9F0]
	0x0346E5C4 BL 0x1C16CF4
	0x0346E5C8 ADRP X0, 0xCC2000
	0x0346E5CC LDR X0, [X0 + 0x698]
	0x0346E5D0 BL 0x1C16CF4
	0x0346E5D4 ADRP X0, 0xC86000
	0x0346E5D8 LDR X0, [X0 + 0x818]
	0x0346E5DC BL 0x1C16CF4
	0x0346E5E0 ADRP X0, 0xCC1000
	0x0346E5E4 LDR X0, [X0 + 0x7C8]
	0x0346E5E8 BL 0x1C16CF4
	0x0346E5EC ADRP X0, 0xCC1000
	0x0346E5F0 LDR X0, [X0 + 0x7D0]
	0x0346E5F4 BL 0x1C16CF4
	0x0346E5F8 ADRP X0, 0xCC2000
	0x0346E5FC LDR X0, [X0 + 0x6A0]
	0x0346E600 BL 0x1C16CF4
	0x0346E604 ADRP X0, 0xCC2000
	0x0346E608 LDR X0, [X0 + 0x6A8]
	0x0346E60C BL 0x1C16CF4
	0x0346E610 ADRP X0, 0xC86000
	0x0346E614 LDR X0, [X0 + 0x830]
	0x0346E618 BL 0x1C16CF4
	0x0346E61C ADRP X0, 0xC86000
	0x0346E620 LDR X0, [X0 + 0x838]
	0x0346E624 BL 0x1C16CF4
	0x0346E628 ADRP X0, 0xCC2000
	0x0346E62C LDR X0, [X0 + 0x6B0]
	0x0346E630 BL 0x1C16CF4
	0x0346E634 ADRP X0, 0xC86000
	0x0346E638 LDR X0, [X0 + 0x840]
	0x0346E63C BL 0x1C16CF4
	0x0346E640 ADRP X0, 0xCC2000
	0x0346E644 LDR X0, [X0 + 0x6B8]
	0x0346E648 BL 0x1C16CF4
	0x0346E64C ADRP X0, 0xCC2000
	0x0346E650 LDR X0, [X0 + 0x6C0]
	0x0346E654 BL 0x1C16CF4
	0x0346E658 ADRP X0, 0xCC2000
	0x0346E65C LDR X0, [X0 + 0x6C8]
	0x0346E660 BL 0x1C16CF4
	0x0346E664 MOVZ W8, 0x1
	0x0346E668 STRB W8, [X20 + 0x7E5]
	0x0346E66C STP X31, X31, [X31 + 0x20]
	0x0346E670 STR X31, [X31 + 0x18]
	0x0346E674 ADRP X25, 0xCC0000
	0x0346E678 LDR W8, [X19]
	0x0346E67C LDR X20, [X19 + 0x20]
	0x0346E680 LDR X25, [X25 + 0x588]
	0x0346E684 CBZ W8, 0x346E6A8
	0x0346E688 CMP W8, 0x1
	0x0346E68C B.NE 0x346E6D4
	0x0346E690 LDR X8, [X19 + 0x60]
	0x0346E694 MOVN W9, 0x0
	0x0346E698 STR X8, [X31 + 0x18]
	0x0346E69C STR X31, [X19 + 0x60]
	0x0346E6A0 STR W9, [X19]
	0x0346E6A4 B 0x346E9EC
	0x0346E6A8 LDR X8, [X19 + 0x58]
	0x0346E6AC MOVN W9, 0x0
	0x0346E6B0 STR X8, [X31 + 0x20]
	0x0346E6B4 STR X31, [X19 + 0x58]
	0x0346E6B8 STR W9, [X19]
	0x0346E6BC ADRP X8, 0xC86000
	0x0346E6C0 LDR X8, [X8 + 0x830]
	0x0346E6C4 ADD X0, X31, 0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF70000
	011 Move W8, [X20+2015]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCC3000
	018 Move X0, [X0+1576]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC3000
	021 Move X0, [X0+1584]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC2000
	024 Move X0, [X0+1112]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC1000
	027 Move X0, [X0+1328]
	028 Call 0x1C17CF4
	029 Move X0, 0xC88000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC87000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC3000
	036 Move X0, [X0+1520]
	037 Call 0x1C17CF4
	038 Move X0, 0xC87000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC2000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC2000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC3000
	048 Move X0, [X0+1528]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC3000
	051 Move X0, [X0+1536]
	052 Call 0x1C17CF4
	053 Move X0, 0xC87000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC87000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCC3000
	060 Move X0, [X0+1544]
	061 Call 0x1C17CF4
	062 Move X0, 0xC87000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCC3000
	066 Move X0, [X0+1552]
	067 Call 0x1C17CF4
	068 Move X0, 0xCC3000
	069 Move X0, [X0+1592]
	070 Call 0x1C17CF4
	071 Move X0, 0xCC3000
	072 Move X0, [X0+1600]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2015], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCC1000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1328]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+96]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+96], X31
	092 Move [X19], W9
	093 Move X8, [X19+88]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+88], X31
	099 Move [X19], W9
	100 Move X8, 0xC87000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCC3000
	106 Move X8, [X8+1600]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass120_0..ctor, X0
	112 Move [X19+80], X21
	113 Compare X21, 0
	114 JumpIfEqual {384}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move W8, [X19+56]
	122 Move [X21+40], W8
	123 Move X8, [X19+64]
	124 Move [X21+48], X8
	125 Compare X20, 0
	126 JumpIfEqual {385}
	127 Move W8, [X20+16]
	128 Compare W8, 0
	129 JumpIfEqual {267}
	130 Move X8, [X19+80]
	131 Compare X8, 0
	132 JumpIfEqual {386}
	133 Move X21, [X8+24]
	134 Compare X21, 0
	135 JumpIfEqual {387}
	136 Move X23, 0xC87000
	137 Move X8, [X21]
	138 Move X23, [X23+2072]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X23]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 7
	150 Move X0, X21
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 7
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {265}
	166 Move X8, [X19+80]
	167 Compare X8, 0
	168 JumpIfEqual {388}
	169 Move X9, 0xC87000
	170 Move X9, [X9+2544]
	171 Move X21, [X8+24]
	172 Move X0, [X9]
	173 Move W9, [X0+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X31
	178 Call DateTime.get_UtcNow
	179 Move X22, 0xC88000
	180 Move X22, [X22+2576]
	181 Move X8, X0
	182 Move [X31+40], X8
	183 Move X0, [X22]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X22]
	189 Move X8, [X0+184]
	190 Move X1, [X8]
	191 Add X0, X31, 40
	192 Move X2, X31
	193 Call DateTime.Add, X0, X1
	194 Compare X21, 0
	195 JumpIfEqual {389}
	196 Move X8, [X21]
	197 Move X1, [X23]
	198 Move X22, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move W2, 11
	209 Move X0, X21
	210 Call 0x1C5D788
	211 Move W9, [X10]
	212 Add W9, W9, 11
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X21
	218 Move X1, X22
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {265}
	224 Move X8, [X19+80]
	225 Compare X8, 0
	226 JumpIfEqual {390}
	227 Move X1, [X8+24]
	228 Move X3, [X19+72]
	229 Move X4, [X8+48]
	230 Move X0, X20
	231 Move X2, X31
	232 Move X5, X31
	233 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	234 Compare X0, 0
	235 JumpIfEqual {391}
	236 Move X8, 0xC87000
	237 Move X8, [X8+2112]
	238 Move X1, [X8]
	239 Call Task`1<Object>.GetAwaiter, X0
	240 Move X8, 0xC87000
	241 Move X8, [X8+2104]
	242 Move [X31+32], X0
	243 Move X1, [X8]
	244 Add X0, X31, 32
	245 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {100}
	250 Move [X19], W31
	251 Move X8, [X31+32]
	252 Move [X19+88], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xCC3000
	259 Move X8, [X8+1584]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 32
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Compare X20, 0
	266 JumpIfEqual {383}
	267 Move X8, 0xCC3000
	268 Move X8, [X8+1520]
	269 Move X21, [X20+88]
	270 Move X23, [X19+80]
	271 Move X0, [X8]
	272 Call 0x1C17F10
	273 Move X8, 0xCC3000
	274 Move X8, [X8+1592]
	275 Move X22, X0
	276 Move X2, [X8]
	277 Move X1, X23
	278 Move X3, X31
	279 Call Func`1<Object>..ctor, X0, X1, X2
	280 Move X8, [X19+80]
	281 Compare X8, 0
	282 JumpIfEqual {380}
	283 Move X9, 0xCC2000
	284 Move X23, [X19+72]
	285 Move X9, [X9+1992]
	286 Compare X23, 0
	287 JumpIfNotEqual {289}
	288 Move X23, [X20+24]
	289 Move X20, [X8+24]
	290 Move X1, [X8+48]
	291 Move X2, [X9]
	292 Move [X31+8], X31
	293 Move [X31+16], X31
	294 Add X0, X31, 8
	295 Call Nullable`1<CancellationToken>..ctor, X0, X1
	296 Move X8, 0xCC2000
	297 Move X8, [X8+2000]
	298 Move X0, [X8]
	299 Call 0x1C17F10
	300 Move X3, [X31+8]
	301 Move X4, [X31+16]
	302 Move X24, X0
	303 Move X1, X20
	304 Move X2, X23
	305 Call RetryHistory..ctor, X0, X1, X2, X3
	306 Compare X21, 0
	307 JumpIfEqual {381}
	308 Move X8, 0xCC3000
	309 Move X8, [X8+1528]
	310 Move X3, [X8]
	311 Move X0, X21
	312 Move X1, X22
	313 Move X2, X24
	314 Call 0x2244230, X0, X1, X2
	315 Compare X0, 0
	316 JumpIfEqual {382}
	317 Move X8, 0xCC3000
	318 Move X8, [X8+1552]
	319 Move X1, [X8]
	320 Call Task`1<Object>.GetAwaiter, X0
	321 Move X8, 0xCC3000
	322 Move X8, [X8+1544]
	323 Move [X31+24], X0
	324 Move X1, [X8]
	325 Add X0, X31, 24
	326 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {354}
	331 Move X8, 0xCC3000
	332 Move X8, [X8+1536]
	333 Add X0, X31, 24
	334 Move X1, [X8]
	335 Call TaskAwaiter`1<Object>.GetResult, X0
	336 Move TEMP, 1
	337 Not TEMP
	338 Move W8, TEMP
	339 Move [X19], W8
	340 Move [X19+80], X31
	341 Move X20, X0
	342 Move X0, [X25]
	343 Move X21, 0xCC2000
	344 Add X19, X19, 8
	345 Move W8, [X0+224]
	346 Move X21, [X21+1112]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X2, [X21]
	351 Move X0, X19
	352 Move X1, X20
	353 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	354 Move W8, 1
	355 Move [X19], W8
	356 Move X8, [X31+24]
	357 Move [X19+96], X8
	358 Move X0, [X25]
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X8, 0xCC3000
	364 Move X8, [X8+1576]
	365 Add X0, X19, 8
	366 Move X3, [X8]
	367 Add X1, X31, 24
	368 Move X2, X19
	369 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	370 Move X20, [X31+96]
	371 Move X19, [X31+104]
	372 Move X22, [X31+80]
	373 Move X21, [X31+88]
	374 Move X24, [X31+64]
	375 Move X23, [X31+72]
	376 Move X30, [X31+48]
	377 Move X25, [X31+56]
	378 Add X31, X31, 112
	379 Return 
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Move X20, X0
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X0, X20
	395 Call 0x3EB2AD0
	396 Move X20, X0
	397 Move X0, 0xC86000
	398 Move X0, [X0+2000]
	399 Call 0x1C17D08
	400 Move X8, [X20]
	401 Move X1, [X8]
	402 Call 0x1C18270
	403 Move TEMP, X0
	404 And TEMP, TEMP, 1
	405 Compare TEMP, 1
	406 JumpIfNotEqual {428}
	407 Move X20, [X20]
	408 Call 0x3EB2AE0
	409 Move TEMP, 1
	410 Not TEMP
	411 Move W8, TEMP
	412 Move [X19+80], X31
	413 Move [X19+8], W8
	414 Move X0, 0xCC1000
	415 Move X0, [X0+1328]
	416 Call 0x1C17D08
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Move X0, 0xCC2000
	422 Move X0, [X0+1144]
	423 Call 0x1C17D08
	424 Move X2, X0
	425 Move X0, X19
	426 Move X1, X20
	427 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	428 Move W0, 8
	429 Call 0x3EB2AF0
	430 Move X8, [X20]
	431 Move [X0], X8
	432 Move X1, 0xA47000
	433 Add X1, X1, 3672
	434 Move X2, X31
	435 Call 0x3EB2B00
	436 Move X20, X0
	437 Call 0x3EB2AE0
	438 Move X0, X20
	439 Call 0x1D2D690
	440 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346E6C8 LDR X1, [X8]
	0x0346E6CC BL 0x2677474
	0x0346E6D0 B 0x346E90C
	0x0346E6D4 ADRP X8, 0xCC2000
	0x0346E6D8 LDR X8, [X8 + 0x6C8]
	0x0346E6DC LDR X0, [X8]
	0x0346E6E0 BL 0x1C16F10
	0x0346E6E4 MOV X21, X0
	0x0346E6E8 MOV X1, X31
	0x0346E6EC BL 0x3447204
	0x0346E6F0 STR X21, [X19 + 0x50]
	0x0346E6F4 CBZ X21, 0x346EAA4
	0x0346E6F8 LDR X8, [X19 + 0x20]
	0x0346E6FC STR X8, [X21 + 0x10]
	0x0346E700 LDR X8, [X19 + 0x28]
	0x0346E704 STR X8, [X21 + 0x18]
	0x0346E708 LDR X8, [X19 + 0x30]
	0x0346E70C STR X8, [X21 + 0x20]
	0x0346E710 LDRB W8, [X19 + 0x38]
	0x0346E714 STRB W8, [X21 + 0x28]
	0x0346E718 LDR X8, [X19 + 0x40]
	0x0346E71C STR X8, [X21 + 0x30]
	0x0346E720 CBZ X20, 0x346EAA8
	0x0346E724 LDRB W8, [X20 + 0x10]
	0x0346E728 CBZ W8, 0x346E910
	0x0346E72C LDR X8, [X19 + 0x50]
	0x0346E730 CBZ X8, 0x346EAAC
	0x0346E734 LDR X21, [X8 + 0x18]
	0x0346E738 CBZ X21, 0x346EAB0
	0x0346E73C ADRP X23, 0xC86000
	0x0346E740 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF70000
	007 Move X21, 0xCC1000
	008 Move W8, [X22+2016]
	009 Move X21, [X21+1328]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC2000
	017 Move X0, [X0+1152]
	018 Call 0x1C17CF4
	019 Move X0, 0xCC1000
	020 Move X0, [X0+1328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2016], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1152]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

