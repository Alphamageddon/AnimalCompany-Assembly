Type: Nakama.Client/<DeleteLeaderboardRecordAsync>d__58

Method: System.Void MoveNext()

Disassembly:
	0x0345315C CBZ X8, 0x3453498
	0x03453160 LDR X1, [X8 + 0x18]
	0x03453164 LDR X3, [X19 + 0x38]
	0x03453168 LDR X4, [X8 + 0x28]
	0x0345316C MOV X0, X20
	0x03453170 MOV X2, X31
	0x03453174 MOV X5, X31
	0x03453178 BL 0x34440A8
	0x0345317C CBZ X0, 0x345349C
	0x03453180 ADRP X8, 0xCA1000
	0x03453184 LDR X8, [X8 + 0x840]
	0x03453188 LDR X1, [X8]
	0x0345318C BL 0x269F5D0
	0x03453190 ADRP X8, 0xCA1000
	0x03453194 LDR X8, [X8 + 0x838]
	0x03453198 STR X0, [X31 + 0x20]
	0x0345319C LDR X1, [X8]
	0x034531A0 ADD X0, X31, 0x20
	0x034531A4 BL 0x2677430
	0x034531A8 TBNZ X0, 0x0, 0x3452FA8
	0x034531AC STR W31, [X19]
	0x034531B0 LDR X8, [X31 + 0x20]
	0x034531B4 STR X8, [X19 + 0x50]
	0x034531B8 LDR X0, [X25]
	0x034531BC LDR W8, [X0 + 0xE0]
	0x034531C0 CBNZ W8, 0x34531C8
	0x034531C4 BL 0x1C16DFC
	0x034531C8 ADRP X8, 0xCDC000
	0x034531CC LDR X8, [X8 + 0xC88]
	0x034531D0 ADD X0, X19, 0x8
	0x034531D4 LDR X3, [X8]
	0x034531D8 ADD X1, X31, 0x20
	0x034531DC MOV X2, X19
	0x034531E0 BL 0x2188368
	0x034531E4 B 0x3453434
	0x034531E8 ADRP X8, 0xCDA000
	0x034531EC LDR X8, [X8 + 0xE98]
	0x034531F0 LDR X22, [X19 + 0x40]
	0x034531F4 LDR X0, [X8]
	0x034531F8 BL 0x1C16F10
	0x034531FC ADRP X8, 0xCDC000
	0x03453200 LDR X8, [X8 + 0xCA0]
	0x03453204 MOV X21, X0
	0x03453208 LDR X1, [X8]
	0x0345320C BL 0x301B7C4
	0x03453210 CBZ X22, 0x345346C
	0x03453214 STR X21, [X22 + 0x20]
	0x03453218 LDR X23, [X19 + 0x48]
	0x0345321C CBZ X23, 0x34532F0
	0x03453220 LDR W8, [X23 + 0x18]
	0x03453224 CMP W8, 0x1
	0x03453228 B.LT 0x34532F0
	0x0345322C ADRP X27, 0xCDC000
	0x03453230 ADRP X28, 0xCDC000
	0x03453234 LDR X27, [X27 + 0xC80]
	0x03453238 LDR X28, [X28 + 0xC98]
	0x0345323C MOV X24, X31
	0x03453240 ADD X26, X23, 0x20
	0x03453244 CMP W24, W8
	0x03453248 B.CS 0x3453468
	0x0345324C LDR X8, [X19 + 0x40]
	0x03453250 CBZ X8, 0x3453454
	0x03453254 LDR X29, [X26, X24, LSL #3]
	0x03453258 LDR X21, [X8 + 0x20]
	0x0345325C LDR X0, [X27]
	0x03453260 BL 0x1C16F10
	0x03453264 MOV X22, X0
	0x03453268 MOV X1, X31
	0x0345326C BL 0x3405218
	0x03453270 CBZ X29, 0x3453458
	0x03453274 CBZ X22, 0x345345C
	0x03453278 LDR V0, [X29 + 0x1]
	0x0345327C STR V0, [X22 + 0x1]
	0x03453280 LDR X8, [X29 + 0x20]
	0x03453284 STR X8, [X22 + 0x20]
	0x03453288 CBZ X21, 0x3453460
	0x0345328C LDR W10, [X21 + 0x1C]
	0x03453290 LDR X8, [X21 + 0x10]
	0x03453294 LDR X9, [X28]
	0x03453298 ADD W10, W10, 0x1
	0x0345329C STR W10, [X21 + 0x1C]
	0x034532A0 CBZ X8, 0x3453464
	0x034532A4 LDRSW X10, [X21 + 0x18]
	0x034532A8 LDR W11, [X8 + 0x18]
	0x034532AC CMP W10, W11
	0x034532B0 B.CS 0x34532C8
	0x034532B4 ADD W9, W10, 0x1
	0x034532B8 ADD X8, X8, X10, 0x3, LSL
	0x034532BC STR W9, [X21 + 0x18]
	0x034532C0 STR X22, [X8 + 0x20]
	0x034532C4 B 0x34532E0
	0x034532C8 LDR X8, [X9 + 0x20]
	0x034532CC LDR X8, [X8 + 0xC0]
	0x034532D0 LDR X2, [X8 + 0x70]
	0x034532D4 MOV X0, X21
	0x034532D8 MOV X1, X22
	0x034532DC BL 0x301BF90
	0x034532E0 LDR W8, [X23 + 0x18]
	0x034532E4 ADD X24, X24, 0x1
	0x034532E8 CMP W24, W8
	0x034532EC B.LT 0x3453244
	0x034532F0 CBZ X20, 0x3453470
	0x034532F4 ADRP X8, 0xCA8000
	0x034532F8 LDR X8, [X8 + 0x818]
	0x034532FC LDR X21, [X20 + 0x58]
	0x03453300 LDR X23, [X19 + 0x40]
	0x03453304 LDR X0, [X8]
	0x03453308 BL 0x1C16F10
	0x0345330C ADRP X8, 0xCDC000
	0x03453310 LDR X8, [X8 + 0xCA8]
	0x03453314 MOV X22, X0
	0x03453318 LDR X2, [X8]
	0x0345331C MOV X1, X23
	0x03453320 MOV X3, X31
	0x03453324 BL 0x2D27AA8
	0x03453328 LDR X8, [X19 + 0x40]
	0x0345332C CBZ X8, 0x3453474
	0x03453330 ADRP X9, 0xCDC000
	0x03453334 LDR X23, [X19 + 0x38]
	0x03453338 LDR X9, [X9 + 0x7C8]
	0x0345333C CBNZ X23, 0x3453344
	0x03453340 LDR X23, [X20 + 0x18]
	0x03453344 LDR X20, [X8 + 0x18]
	0x03453348 LDR X1, [X8 + 0x28]
	0x0345334C LDR X2, [X9]
	0x03453350 STP X31, X31, [X31 + 0x8]
	0x03453354 ADD X0, X31, 0x8
	0x03453358 BL 0x242E368
	0x0345335C ADRP X8, 0xCDC000
	0x03453360 LDR X8, [X8 + 0x7D0]
	0x03453364 LDR X0, [X8]
	0x03453368 BL 0x1C16F10
	0x0345336C LDP X3, X4, [X31 + 0x8]
	0x03453370 MOV X24, X0
	0x03453374 MOV X1, X20
	0x03453378 MOV X2, X23
	0x0345337C MOV X5, X31
	0x03453380 BL 0x3465404
	0x03453384 CBZ X21, 0x3453478
	0x03453388 MOV X0, X21
	0x0345338C MOV X1, X22
	0x03453390 MOV X2, X24
	0x03453394 MOV X3, X31
	0x03453398 BL 0x3465B68
	0x0345339C CBZ X0, 0x345347C
	0x034533A0 MOV X1, X31
	0x034533A4 BL 0x33ED394
	0x034533A8 STR X0, [X31 + 0x18]
	0x034533AC ADD X0, X31, 0x18
	0x034533B0 MOV X1, X31
	0x034533B4 BL 0x32C3A80
	0x034533B8 TBZ X0, 0x0, 0x34533F8
	0x034533BC ADD X0, X31, 0x18
	0x034533C0 MOV X1, X31
	0x034533C4 BL 0x32C3B4C
	0x034533C8 MOVN W8, 0x1
	0x034533CC STR W8, [X19]
	0x034533D0 STR X31, [X19 + 0x40]
	0x034533D4 LDR X0, [X25]
	0x034533D8 ADD X19, X19, 0x8
	0x034533DC LDR W8, [X0 + 0xE0]
	0x034533E0 CBNZ W8, 0x34533E8
	0x034533E4 BL 0x1C16DFC
	0x034533E8 MOV X0, X19
	0x034533EC MOV X1, X31
	0x034533F0 BL 0x32C4864
	0x034533F4 B 0x3453434
	0x034533F8 MOVZ W8, 0x1
	0x034533FC STR W8, [X19]
	0x03453400 LDR X8, [X31 + 0x18]
	0x03453404 STR X8, [X19 + 0x58]
	0x03453408 LDR X0, [X25]
	0x0345340C LDR W8, [X0 + 0xE0]
	0x03453410 CBNZ W8, 0x3453418
	0x03453414 BL 0x1C16DFC
	0x03453418 ADRP X8, 0xCDC000
	0x0345341C LDR X8, [X8 + 0xC90]
	0x03453420 ADD X0, X19, 0x8
	0x03453424 LDR X3, [X8]
	0x03453428 ADD X1, X31, 0x18
	0x0345342C MOV X2, X19
	0x03453430 BL 0x2189A2C
	0x03453434 LDP X20, X19, [X31 + 0x80]
	0x03453438 LDP X22, X21, [X31 + 0x70]
	0x0345343C LDP X24, X23, [X31 + 0x60]
	0x03453440 LDP X26, X25, [X31 + 0x50]
	0x03453444 LDP X28, X27, [X31 + 0x40]
	0x03453448 LDP X29, X30, [X31 + 0x30]
	0x0345344C ADD X31, X31, 0x90
	0x03453450 RET
	0x03453454 BL 0x1C16F20
	0x03453458 BL 0x1C16F20
	0x0345345C BL 0x1C16F20
	0x03453460 BL 0x1C16F20
	0x03453464 BL 0x1C16F20
	0x03453468 BL 0x1C16F28
	0x0345346C BL 0x1C16F20
	0x03453470 BL 0x1C16F20
	0x03453474 BL 0x1C16F20
	0x03453478 BL 0x1C16F20
	0x0345347C BL 0x1C16F20
	0x03453480 BL 0x1C16F20
	0x03453484 BL 0x1C16F20
	0x03453488 BL 0x1C16F20
	0x0345348C BL 0x1C16F20
	0x03453490 BL 0x1C16F20
	0x03453494 BL 0x1C16F20
	0x03453498 BL 0x1C16F20
	0x0345349C BL 0x1C16F20
	0x034534A0 B 0x3453534
	0x034534A4 B 0x3453534
	0x034534A8 B 0x3453534
	0x034534AC B 0x3453534
	0x034534B0 B 0x3453534
	0x034534B4 B 0x3453534
	0x034534B8 B 0x3453534
	0x034534BC B 0x3453534
	0x034534C0 B 0x3453534
	0x034534C4 B 0x3453534
	0x034534C8 B 0x3453534
	0x034534CC B 0x3453534
	0x034534D0 B 0x3453534
	0x034534D4 B 0x3453534
	0x034534D8 B 0x3453534
	0x034534DC B 0x3453534
	0x034534E0 B 0x3453534
	0x034534E4 B 0x3453534
	0x034534E8 B 0x3453534
	0x034534EC B 0x3453534
	0x034534F0 B 0x3453534
	0x034534F4 B 0x3453534
	0x034534F8 B 0x3453534
	0x034534FC B 0x3453534
	0x03453500 B 0x3453534
	0x03453504 B 0x3453534
	0x03453508 B 0x3453534
	0x0345350C B 0x3453534
	0x03453510 B 0x3453534
	0x03453514 B 0x3453534
	0x03453518 B 0x3453534
	0x0345351C B 0x3453534
	0x03453520 B 0x3453534
	0x03453524 B 0x3453534
	0x03453528 B 0x3453534
	0x0345352C B 0x3453534
	0x03453530 B 0x3453534
	0x03453534 MOV X20, X0
	0x03453538 CMP W1, 0x1
	0x0345353C B.NE 0x34535D0
	0x03453540 MOV X0, X20
	0x03453544 BL 0x3EB1AD0
	0x03453548 MOV X20, X0
	0x0345354C ADRP X0, 0xCA0000
	0x03453550 LDR X0, [X0 + 0x7D0]
	0x03453554 BL 0x1C16D08
	0x03453558 LDR X8, [X20]
	0x0345355C LDR X1, [X8]
	0x03453560 BL 0x1C17270
	0x03453564 TBZ X0, 0x0, 0x34535A8
	0x03453568 LDR X20, [X20]
	0x0345356C BL 0x3EB1AE0
	0x03453570 MOVN W8, 0x1
	0x03453574 STR X31, [X19 + 0x40]
	0x03453578 STR W8, [X19], #0x8
	0x0345357C ADRP X0, 0xCA3000
	0x03453580 LDR X0, [X0 + 0x280]
	0x03453584 BL 0x1C16D08
	0x03453588 LDR W8, [X0 + 0xE0]
	0x0345358C CBNZ W8, 0x3453594
	0x03453590 BL 0x1C16DFC
	0x03453594 MOV X0, X19
	0x03453598 MOV X1, X20
	0x0345359C MOV X2, X31
	0x034535A0 BL 0x32C4908
	0x034535A4 B 0x3453434
	0x034535A8 MOVZ W0, 0x8
	0x034535AC BL 0x3EB1AF0
	0x034535B0 LDR X8, [X20]
	0x034535B4 STR X8, [X0]
	0x034535B8 ADRP X1, 0xA61000
	0x034535BC ADD X1, X1, 0xE58
	0x034535C0 MOV X2, X31
	0x034535C4 BL 0x3EB1B00
	0x034535C8 MOV X20, X0
	0x034535CC BL 0x3EB1AE0
	0x034535D0 MOV X0, X20
	0x034535D4 BL 0x1D2C690
	0x034535D8 BL 0x1990590
	0x034535DC STR X30, [X31 - 0x30]!
	0x034535E0 STP X22, X21, [X31 + 0x10]
	0x034535E4 STP X20, X19, [X31 + 0x20]
	0x034535E8 ADRP X21, 0xF8A000
	0x034535EC ADRP X22, 0xCA3000
	0x034535F0 LDRB W8, [X21 + 0x778]
	0x034535F4 LDR X22, [X22 + 0x280]
	0x034535F8 MOV X19, X1
	0x034535FC MOV X20, X0
	0x03453600 TBNZ X8, 0x0, 0x3453618
	0x03453604 ADRP X0, 0xCA3000
	0x03453608 LDR X0, [X0 + 0x280]
	0x0345360C BL 0x1C16CF4
	0x03453610 MOVZ W8, 0x1
	0x03453614 STRB W8, [X21 + 0x778]
	0x03453618 LDR X0, [X22]
	0x0345361C LDR W8, [X0 + 0xE0]
	0x03453620 CBNZ W8, 0x3453628
	0x03453624 BL 0x1C16DFC
	0x03453628 ADD X0, X20, 0x8
	0x0345362C MOV X1, X19
	0x03453630 LDP X20, X19, [X31 + 0x20]
	0x03453634 LDP X22, X21, [X31 + 0x10]
	0x03453638 MOV X2, X31
	0x0345363C LDR X30, [X31], #0x30
	0x03453640 B 0x32C477C
	0x03453644 SUB X31, X31, 0x70
	0x03453648 STP X30, X25, [X31 + 0x30]
	0x0345364C STP X24, X23, [X31 + 0x40]
	0x03453650 STP X22, X21, [X31 + 0x50]
	0x03453654 STP X20, X19, [X31 + 0x60]
	0x03453658 ADRP X20, 0xF8A000
	0x0345365C LDRB W8, [X20 + 0x779]
	0x03453660 MOV X19, X0
	0x03453664 TBNZ X8, 0x0, 0x3453718
	0x03453668 ADRP X0, 0xCDC000
	0x0345366C LDR X0, [X0 + 0xCB8]
	0x03453670 BL 0x1C16CF4
	0x03453674 ADRP X0, 0xCDC000
	0x03453678 LDR X0, [X0 + 0xCC0]
	0x0345367C BL 0x1C16CF4
	0x03453680 ADRP X0, 0xCA3000
	0x03453684 LDR X0, [X0 + 0x280]
	0x03453688 BL 0x1C16CF4
	0x0345368C ADRP X0, 0xCA2000
	0x03453690 LDR X0, [X0 + 0xA10]
	0x03453694 BL 0x1C16CF4
	0x03453698 ADRP X0, 0xCA1000
	0x0345369C LDR X0, [X0 + 0x9F0]
	0x034536A0 BL 0x1C16CF4
	0x034536A4 ADRP X0, 0xCA8000
	0x034536A8 LDR X0, [X0 + 0x818]
	0x034536AC BL 0x1C16CF4
	0x034536B0 ADRP X0, 0xCA1000
	0x034536B4 LDR X0, [X0 + 0x818]
	0x034536B8 BL 0x1C16CF4
	0x034536BC ADRP X0, 0xCDC000
	0x034536C0 LDR X0, [X0 + 0x7C8]
	0x034536C4 BL 0x1C16CF4
	0x034536C8 ADRP X0, 0xCDC000
	0x034536CC LDR X0, [X0 + 0x7D0]
	0x034536D0 BL 0x1C16CF4
	0x034536D4 ADRP X0, 0xCA1000
	0x034536D8 LDR X0, [X0 + 0x830]
	0x034536DC BL 0x1C16CF4
	0x034536E0 ADRP X0, 0xCA1000
	0x034536E4 LDR X0, [X0 + 0x838]
	0x034536E8 BL 0x1C16CF4
	0x034536EC ADRP X0, 0xCA1000
	0x034536F0 LDR X0, [X0 + 0x840]
	0x034536F4 BL 0x1C16CF4
	0x034536F8 ADRP X0, 0xCDC000
	0x034536FC LDR X0, [X0 + 0xCC8]
	0x03453700 BL 0x1C16CF4
	0x03453704 ADRP X0, 0xCDC000
	0x03453708 LDR X0, [X0 + 0xCD0]
	0x0345370C BL 0x1C16CF4
	0x03453710 MOVZ W8, 0x1
	0x03453714 STRB W8, [X20 + 0x779]
	0x03453718 STP X31, X31, [X31 + 0x20]
	0x0345371C STR X31, [X31 + 0x18]
	0x03453720 ADRP X25, 0xCA3000
	0x03453724 LDR W8, [X19]
	0x03453728 LDR X20, [X19 + 0x20]
	0x0345372C LDR X25, [X25 + 0x280]
	0x03453730 CBZ W8, 0x3453754
	0x03453734 CMP W8, 0x1
	0x03453738 B.NE 0x3453780
	0x0345373C LDR X8, [X19 + 0x58]
	0x03453740 MOVN W9, 0x0
	0x03453744 STR X8, [X31 + 0x18]
	0x03453748 STR X31, [X19 + 0x58]
	0x0345374C STR W9, [X19]
	0x03453750 B 0x3453A7C
	0x03453754 LDR X8, [X19 + 0x50]
	0x03453758 MOVN W9, 0x0
	0x0345375C STR X8, [X31 + 0x20]
	0x03453760 STR X31, [X19 + 0x50]
	0x03453764 STR W9, [X19]
	0x03453768 ADRP X8, 0xCA1000
	0x0345376C LDR X8, [X8 + 0x830]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF8B000
	011 Move W8, [X20+1907]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCDD000
	018 Move X0, [X0+3136]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDD000
	021 Move X0, [X0+3144]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA4000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA3000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA2000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA9000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA2000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDD000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDD000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA2000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA2000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA2000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDD000
	054 Move X0, [X0+3152]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDD000
	057 Move X0, [X0+3160]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1907], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA4000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xCA2000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCDD000
	091 Move X8, [X8+3160]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass58_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xCA2000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xCA2000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xCA3000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xCA2000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xCA2000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCDD000
	242 Move X8, [X8+3136]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCA9000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCDD000
	257 Move X8, [X8+3152]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCDD000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCDD000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+72], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+88], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCDD000
	336 Move X8, [X8+3144]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xCA1000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+72], X31
	385 Move [X19+8], W8
	386 Move X0, 0xCA4000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA62000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03453770 ADD X0, X31, 0x20
	0x03453774 LDR X1, [X8]
	0x03453778 BL 0x2677474
	0x0345377C B 0x34539B0
	0x03453780 ADRP X8, 0xCDC000
	0x03453784 LDR X8, [X8 + 0xCD0]
	0x03453788 LDR X0, [X8]
	0x0345378C BL 0x1C16F10
	0x03453790 MOV X21, X0
	0x03453794 MOV X1, X31
	0x03453798 BL 0x3448F7C
	0x0345379C STR X21, [X19 + 0x48]
	0x034537A0 CBZ X21, 0x3453B1C
	0x034537A4 LDR X8, [X19 + 0x20]
	0x034537A8 STR X8, [X21 + 0x10]
	0x034537AC LDR X8, [X19 + 0x28]
	0x034537B0 STR X8, [X21 + 0x18]
	0x034537B4 LDR X8, [X19 + 0x30]
	0x034537B8 STR X8, [X21 + 0x20]
	0x034537BC LDR X8, [X19 + 0x38]
	0x034537C0 STR X8, [X21 + 0x28]
	0x034537C4 CBZ X20, 0x3453B20
	0x034537C8 LDRB W8, [X20 + 0x10]
	0x034537CC CBZ W8, 0x34539B4
	0x034537D0 LDR X8, [X19 + 0x48]
	0x034537D4 CBZ X8, 0x3453B24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF8B000
	007 Move X22, 0xCA4000
	008 Move W8, [X21+1908]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA4000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1908], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

