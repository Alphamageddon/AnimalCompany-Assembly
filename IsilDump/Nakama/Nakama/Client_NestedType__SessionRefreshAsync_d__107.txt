Type: Nakama.Client/<SessionRefreshAsync>d__107

Method: System.Void MoveNext()

Disassembly:
	0x03468458 ADRP X8, 0xC90000
	0x0346845C LDR X8, [X8 + 0x708]
	0x03468460 ADD X0, X31, 0x30
	0x03468464 LDR X1, [X8]
	0x03468468 BL 0x2C0A83C
	0x0346846C ADRP X24, 0xCC7000
	0x03468470 LDR X24, [X24 + 0xA70]
	0x03468474 CBZ X22, 0x346839C
	0x03468478 MOV X0, X22
	0x0346847C BL 0x1C16F18
	0x03468480 MOV X22, X31
	0x03468484 B 0x346848C
	0x03468488 MOV X21, X0
	0x0346848C ADRP X8, 0xC90000
	0x03468490 LDR X8, [X8 + 0x708]
	0x03468494 LDR X1, [X8]
	0x03468498 ADD X0, X31, 0x30
	0x0346849C BL 0x2C0A83C
	0x034684A0 CBNZ X22, 0x34684AC
	0x034684A4 MOV X0, X21
	0x034684A8 BL 0x1D2C690
	0x034684AC MOV X0, X22
	0x034684B0 BL 0x1C16F18
	0x034684B4 BL 0x1990590
	0x034684B8 SUB X31, X31, 0x50
	0x034684BC STP X30, X25, [X31 + 0x10]
	0x034684C0 STP X24, X23, [X31 + 0x20]
	0x034684C4 STP X22, X21, [X31 + 0x30]
	0x034684C8 STP X20, X19, [X31 + 0x40]
	0x034684CC ADRP X24, 0xF75000
	0x034684D0 ADRP X23, 0xC8C000
	0x034684D4 LDRB W8, [X24 + 0x854]
	0x034684D8 LDR X23, [X23 + 0x9F0]
	0x034684DC MOV W22, W3
	0x034684E0 MOV X19, X2
	0x034684E4 MOV X20, X1
	0x034684E8 MOV X21, X0
	0x034684EC TBNZ X8, 0x0, 0x3468534
	0x034684F0 ADRP X0, 0xC8C000
	0x034684F4 LDR X0, [X0 + 0x9F0]
	0x034684F8 BL 0x1C16CF4
	0x034684FC ADRP X0, 0xC8C000
	0x03468500 LDR X0, [X0 + 0x6C0]
	0x03468504 BL 0x1C16CF4
	0x03468508 ADRP X0, 0xC8C000
	0x0346850C LDR X0, [X0 + 0x6D0]
	0x03468510 BL 0x1C16CF4
	0x03468514 ADRP X0, 0xCC7000
	0x03468518 LDR X0, [X0 + 0xA70]
	0x0346851C BL 0x1C16CF4
	0x03468520 ADRP X0, 0xC8D000
	0x03468524 LDR X0, [X0 + 0x570]
	0x03468528 BL 0x1C16CF4
	0x0346852C MOVZ W8, 0x1
	0x03468530 STRB W8, [X24 + 0x854]
	0x03468534 ADRP X24, 0xCC7000
	0x03468538 LDR X24, [X24 + 0xA70]
	0x0346853C MOV X0, X21
	0x03468540 MOV X1, X31
	0x03468544 AND W22, W22, 0x1
	0x03468548 STR X31, [X31 + 0x8]
	0x0346854C BL 0x33BDD8C
	0x03468550 STRB W22, [X21 + 0x18]
	0x03468554 LDR X0, [X23]
	0x03468558 LDR W8, [X0 + 0xE0]
	0x0346855C CBNZ W8, 0x3468564
	0x03468560 BL 0x1C16DFC
	0x03468564 ADRP X25, 0xC8D000
	0x03468568 LDR X25, [X25 + 0x570]
	0x0346856C MOV X0, X31
	0x03468570 BL 0x33616A4
	0x03468574 LDR X8, [X24]
	0x03468578 MOV X22, X0
	0x0346857C LDR W9, [X8 + 0xE0]
	0x03468580 CBNZ W9, 0x3468590
	0x03468584 MOV X0, X8
	0x03468588 BL 0x1C16DFC
	0x0346858C LDR X8, [X24]
	0x03468590 LDR X8, [X8 + 0xB8]
	0x03468594 ADRP X24, 0xC8C000
	0x03468598 ADRP X23, 0xC8C000
	0x0346859C MOV X0, X22
	0x034685A0 LDR X1, [X8]
	0x034685A4 LDR X24, [X24 + 0x6D0]
	0x034685A8 LDR X23, [X23 + 0x6C0]
	0x034685AC MOV X2, X31
	0x034685B0 BL 0x3363010
	0x034685B4 LDR X8, [X25]
	0x034685B8 STR X0, [X31 + 0x8]
	0x034685BC LDR W9, [X8 + 0xE0]
	0x034685C0 CBNZ W9, 0x34685CC
	0x034685C4 MOV X0, X8
	0x034685C8 BL 0x1C16DFC
	0x034685CC ADD X0, X31, 0x8
	0x034685D0 MOV X1, X31
	0x034685D4 BL 0x3394184
	0x034685D8 SXTW X8, W0
	0x034685DC STR X8, [X21 + 0x20]
	0x034685E0 STR X31, [X21 + 0x30]
	0x034685E4 LDR X0, [X24]
	0x034685E8 BL 0x1C16F10
	0x034685EC LDR X1, [X23]
	0x034685F0 MOV X22, X0
	0x034685F4 BL 0x2AA4804
	0x034685F8 MOV X0, X21
	0x034685FC MOV X1, X20
	0x03468600 MOV X2, X19
	0x03468604 STR X22, [X21 + 0x40]
	0x03468608 BL 0x3468048
	0x0346860C LDP X20, X19, [X31 + 0x40]
	0x03468610 LDP X22, X21, [X31 + 0x30]
	0x03468614 LDP X24, X23, [X31 + 0x20]
	0x03468618 LDP X30, X25, [X31 + 0x10]
	0x0346861C ADD X31, X31, 0x50
	0x03468620 RET
	0x03468624 STR X30, [X31 - 0x30]!
	0x03468628 STP X22, X21, [X31 + 0x10]
	0x0346862C STP X20, X19, [X31 + 0x20]
	0x03468630 ADRP X22, 0xF75000
	0x03468634 ADRP X21, 0xCC7000
	0x03468638 LDRB W8, [X22 + 0x7C8]
	0x0346863C LDR X21, [X21 + 0x630]
	0x03468640 MOV X19, X1
	0x03468644 MOV X20, X0
	0x03468648 TBNZ X8, 0x0, 0x346866C
	0x0346864C ADRP X0, 0xCC7000
	0x03468650 LDR X0, [X0 + 0xAA8]
	0x03468654 BL 0x1C16CF4
	0x03468658 ADRP X0, 0xCC7000
	0x0346865C LDR X0, [X0 + 0x630]
	0x03468660 BL 0x1C16CF4
	0x03468664 MOVZ W8, 0x1
	0x03468668 STRB W8, [X22 + 0x7C8]
	0x0346866C LDR X0, [X21]
	0x03468670 ADRP X21, 0xCC7000
	0x03468674 LDR W8, [X0 + 0xE0]
	0x03468678 LDR X21, [X21 + 0xAA8]
	0x0346867C CBNZ W8, 0x3468684
	0x03468680 BL 0x1C16DFC
	0x03468684 LDR X2, [X21]
	0x03468688 ADD X0, X20, 0x8
	0x0346868C MOV X1, X19
	0x03468690 LDP X20, X19, [X31 + 0x20]
	0x03468694 LDP X22, X21, [X31 + 0x10]
	0x03468698 LDR X30, [X31], #0x30
	0x0346869C B 0x2632228
	0x034686A0 SUB X31, X31, 0x70
	0x034686A4 STP X30, X25, [X31 + 0x30]
	0x034686A8 STP X24, X23, [X31 + 0x40]
	0x034686AC STP X22, X21, [X31 + 0x50]
	0x034686B0 STP X20, X19, [X31 + 0x60]
	0x034686B4 ADRP X20, 0xF75000
	0x034686B8 LDRB W8, [X20 + 0x7C9]
	0x034686BC MOV X19, X0
	0x034686C0 TBNZ X8, 0x0, 0x3468774
	0x034686C4 ADRP X0, 0xCC8000
	0x034686C8 LDR X0, [X0 + 0x4A0]
	0x034686CC BL 0x1C16CF4
	0x034686D0 ADRP X0, 0xCC8000
	0x034686D4 LDR X0, [X0 + 0x4A8]
	0x034686D8 BL 0x1C16CF4
	0x034686DC ADRP X0, 0xC8E000
	0x034686E0 LDR X0, [X0 + 0x280]
	0x034686E4 BL 0x1C16CF4
	0x034686E8 ADRP X0, 0xC8D000
	0x034686EC LDR X0, [X0 + 0xA10]
	0x034686F0 BL 0x1C16CF4
	0x034686F4 ADRP X0, 0xC8C000
	0x034686F8 LDR X0, [X0 + 0x9F0]
	0x034686FC BL 0x1C16CF4
	0x03468700 ADRP X0, 0xC93000
	0x03468704 LDR X0, [X0 + 0x818]
	0x03468708 BL 0x1C16CF4
	0x0346870C ADRP X0, 0xC8C000
	0x03468710 LDR X0, [X0 + 0x818]
	0x03468714 BL 0x1C16CF4
	0x03468718 ADRP X0, 0xCC7000
	0x0346871C LDR X0, [X0 + 0x7C8]
	0x03468720 BL 0x1C16CF4
	0x03468724 ADRP X0, 0xCC7000
	0x03468728 LDR X0, [X0 + 0x7D0]
	0x0346872C BL 0x1C16CF4
	0x03468730 ADRP X0, 0xC8C000
	0x03468734 LDR X0, [X0 + 0x830]
	0x03468738 BL 0x1C16CF4
	0x0346873C ADRP X0, 0xC8C000
	0x03468740 LDR X0, [X0 + 0x838]
	0x03468744 BL 0x1C16CF4
	0x03468748 ADRP X0, 0xC8C000
	0x0346874C LDR X0, [X0 + 0x840]
	0x03468750 BL 0x1C16CF4
	0x03468754 ADRP X0, 0xCC8000
	0x03468758 LDR X0, [X0 + 0x4B0]
	0x0346875C BL 0x1C16CF4
	0x03468760 ADRP X0, 0xCC8000
	0x03468764 LDR X0, [X0 + 0x4B8]
	0x03468768 BL 0x1C16CF4
	0x0346876C MOVZ W8, 0x1
	0x03468770 STRB W8, [X20 + 0x7C9]
	0x03468774 STP X31, X31, [X31 + 0x20]
	0x03468778 STR X31, [X31 + 0x18]
	0x0346877C ADRP X25, 0xC8E000
	0x03468780 LDR W8, [X19]
	0x03468784 LDR X20, [X19 + 0x20]
	0x03468788 LDR X25, [X25 + 0x280]
	0x0346878C CBZ W8, 0x34687B0
	0x03468790 CMP W8, 0x1
	0x03468794 B.NE 0x34687DC
	0x03468798 LDR X8, [X19 + 0x58]
	0x0346879C MOVN W9, 0x0
	0x034687A0 STR X8, [X31 + 0x18]
	0x034687A4 STR X31, [X19 + 0x58]
	0x034687A8 STR W9, [X19]
	0x034687AC B 0x3468AD0
	0x034687B0 LDR X8, [X19 + 0x50]
	0x034687B4 MOVN W9, 0x0
	0x034687B8 STR X8, [X31 + 0x20]
	0x034687BC STR X31, [X19 + 0x50]
	0x034687C0 STR W9, [X19]
	0x034687C4 ADRP X8, 0xC8C000
	0x034687C8 LDR X8, [X8 + 0x830]
	0x034687CC ADD X0, X31, 0x20
	0x034687D0 LDR X1, [X8]
	0x034687D4 BL 0x2677474
	0x034687D8 B 0x3468A0C
	0x034687DC ADRP X8, 0xCC8000
	0x034687E0 LDR X8, [X8 + 0x4B8]
	0x034687E4 LDR X0, [X8]
	0x034687E8 BL 0x1C16F10
	0x034687EC MOV X21, X0
	0x034687F0 MOV X1, X31
	0x034687F4 BL 0x3445FB4
	0x034687F8 STR X21, [X19 + 0x48]
	0x034687FC CBZ X21, 0x3468B70
	0x03468800 LDR X8, [X19 + 0x20]
	0x03468804 STR X8, [X21 + 0x10]
	0x03468808 LDR X8, [X19 + 0x28]
	0x0346880C STR X8, [X21 + 0x18]
	0x03468810 LDR X8, [X19 + 0x30]
	0x03468814 STR X8, [X21 + 0x20]
	0x03468818 LDR X8, [X19 + 0x38]
	0x0346881C STR X8, [X21 + 0x28]
	0x03468820 CBZ X20, 0x3468B74
	0x03468824 LDRB W8, [X20 + 0x10]
	0x03468828 CBZ W8, 0x3468A10
	0x0346882C LDR X8, [X19 + 0x48]
	0x03468830 CBZ X8, 0x3468B78
	0x03468834 LDR X21, [X8 + 0x18]
	0x03468838 CBZ X21, 0x3468B7C
	0x0346883C ADRP X23, 0xC8C000
	0x03468840 LDR X8, [X21]
	0x03468844 LDR X23, [X23 + 0x818]
	0x03468848 LDRH W9, [X8 + 0x12E]
	0x0346884C LDR X1, [X23]
	0x03468850 CBZ X9, 0x3468874
	0x03468854 LDR X10, [X8 + 0xB0]
	0x03468858 ADD X10, X10, 0x8
	0x0346885C LDUR X11, [X10 - 0x8]
	0x03468860 CMP X11, X1
	0x03468864 B.EQ 0x3468884
	0x03468868 SUBS X9, X9, 0x1
	0x0346886C ADD X10, X10, 0x10
	0x03468870 B.NE 0x346885C
	0x03468874 MOVZ W2, 0x7
	0x03468878 MOV X0, X21
	0x0346887C BL 0x1C5C788
	0x03468880 B 0x3468894
	0x03468884 LDR W9, [X10]
	0x03468888 ADD W9, W9, 0x7
	0x0346888C ADD X8, X8, W9, 0x4, SXTW
	0x03468890 ADD X0, X8, 0x138
	0x03468894 LDP X8, X1, [X0]
	0x03468898 MOV X0, X21
	0x0346889C BLR X8
	0x034688A0 MOV X1, X31
	0x034688A4 BL 0x32277A8
	0x034688A8 TBNZ X0, 0x0, 0x3468A0C
	0x034688AC LDR X8, [X19 + 0x48]
	0x034688B0 CBZ X8, 0x3468B80
	0x034688B4 ADRP X9, 0xC8C000
	0x034688B8 LDR X9, [X9 + 0x9F0]
	0x034688BC LDR X21, [X8 + 0x18]
	0x034688C0 LDR X0, [X9]
	0x034688C4 LDR W9, [X0 + 0xE0]
	0x034688C8 CBNZ W9, 0x34688D0
	0x034688CC BL 0x1C16DFC
	0x034688D0 MOV X0, X31
	0x034688D4 BL 0x33616A4
	0x034688D8 ADRP X22, 0xC8D000
	0x034688DC LDR X22, [X22 + 0xA10]
	0x034688E0 MOV X8, X0
	0x034688E4 STR X8, [X31 + 0x28]
	0x034688E8 LDR X0, [X22]
	0x034688EC LDR W8, [X0 + 0xE0]
	0x034688F0 CBNZ W8, 0x34688FC
	0x034688F4 BL 0x1C16DFC
	0x034688F8 LDR X0, [X22]
	0x034688FC LDR X8, [X0 + 0xB8]
	0x03468900 LDR X1, [X8]
	0x03468904 ADD X0, X31, 0x28
	0x03468908 MOV X2, X31
	0x0346890C BL 0x335FC68
	0x03468910 CBZ X21, 0x3468B84
	0x03468914 LDR X8, [X21]
	0x03468918 LDR X1, [X23]
	0x0346891C MOV X22, X0
	0x03468920 LDRH W9, [X8 + 0x12E]
	0x03468924 CBZ X9, 0x3468948
	0x03468928 LDR X10, [X8 + 0xB0]
	0x0346892C ADD X10, X10, 0x8
	0x03468930 LDUR X11, [X10 - 0x8]
	0x03468934 CMP X11, X1
	0x03468938 B.EQ 0x3468958
	0x0346893C SUBS X9, X9, 0x1
	0x03468940 ADD X10, X10, 0x10
	0x03468944 B.NE 0x3468930
	0x03468948 MOVZ W2, 0xB
	0x0346894C MOV X0, X21
	0x03468950 BL 0x1C5C788
	0x03468954 B 0x3468968
	0x03468958 LDR W9, [X10]
	0x0346895C ADD W9, W9, 0xB
	0x03468960 ADD X8, X8, W9, 0x4, SXTW
	0x03468964 ADD X0, X8, 0x138
	0x03468968 LDP X8, X2, [X0]
	0x0346896C MOV X0, X21
	0x03468970 MOV X1, X22
	0x03468974 BLR X8
	0x03468978 TBZ X0, 0x0, 0x3468A0C
	0x0346897C LDR X8, [X19 + 0x48]
	0x03468980 CBZ X8, 0x3468B88
	0x03468984 LDR X1, [X8 + 0x18]
	0x03468988 LDR X3, [X19 + 0x40]
	0x0346898C LDR X4, [X8 + 0x28]
	0x03468990 MOV X0, X20
	0x03468994 MOV X2, X31
	0x03468998 MOV X5, X31
	0x0346899C BL 0x34440A8
	0x034689A0 CBZ X0, 0x3468B8C
	0x034689A4 ADRP X8, 0xC8C000
	0x034689A8 LDR X8, [X8 + 0x840]
	0x034689AC LDR X1, [X8]
	0x034689B0 BL 0x269F5D0
	0x034689B4 ADRP X8, 0xC8C000
	0x034689B8 LDR X8, [X8 + 0x838]
	0x034689BC STR X0, [X31 + 0x20]
	0x034689C0 LDR X1, [X8]
	0x034689C4 ADD X0, X31, 0x20
	0x034689C8 BL 0x2677430
	0x034689CC TBNZ X0, 0x0, 0x34687C4
	0x034689D0 STR W31, [X19]
	0x034689D4 LDR X8, [X31 + 0x20]
	0x034689D8 STR X8, [X19 + 0x50]
	0x034689DC LDR X0, [X25]
	0x034689E0 LDR W8, [X0 + 0xE0]
	0x034689E4 CBNZ W8, 0x34689EC
	0x034689E8 BL 0x1C16DFC
	0x034689EC ADRP X8, 0xCC8000
	0x034689F0 LDR X8, [X8 + 0x4A0]
	0x034689F4 ADD X0, X19, 0x8
	0x034689F8 LDR X3, [X8]
	0x034689FC ADD X1, X31, 0x20
	0x03468A00 MOV X2, X19
	0x03468A04 BL 0x2188C9C
	0x03468A08 B 0x3468B48
	0x03468A0C CBZ X20, 0x3468B6C
	0x03468A10 ADRP X8, 0xC93000
	0x03468A14 LDR X8, [X8 + 0x818]
	0x03468A18 LDR X21, [X20 + 0x58]
	0x03468A1C LDR X23, [X19 + 0x48]
	0x03468A20 LDR X0, [X8]
	0x03468A24 BL 0x1C16F10
	0x03468A28 ADRP X8, 0xCC8000
	0x03468A2C LDR X8, [X8 + 0x4B0]
	0x03468A30 MOV X22, X0
	0x03468A34 LDR X2, [X8]
	0x03468A38 MOV X1, X23
	0x03468A3C MOV X3, X31
	0x03468A40 BL 0x2D27AA8
	0x03468A44 LDR X8, [X19 + 0x48]
	0x03468A48 CBZ X8, 0x3468B60
	0x03468A4C ADRP X9, 0xCC7000
	0x03468A50 LDR X23, [X19 + 0x40]
	0x03468A54 LDR X9, [X9 + 0x7C8]
	0x03468A58 CBNZ X23, 0x3468A60
	0x03468A5C LDR X23, [X20 + 0x18]
	0x03468A60 LDR X20, [X8 + 0x18]
	0x03468A64 LDR X1, [X8 + 0x28]
	0x03468A68 LDR X2, [X9]
	0x03468A6C STP X31, X31, [X31 + 0x8]
	0x03468A70 ADD X0, X31, 0x8
	0x03468A74 BL 0x242E368
	0x03468A78 ADRP X8, 0xCC7000
	0x03468A7C LDR X8, [X8 + 0x7D0]
	0x03468A80 LDR X0, [X8]
	0x03468A84 BL 0x1C16F10
	0x03468A88 LDP X3, X4, [X31 + 0x8]
	0x03468A8C MOV X24, X0
	0x03468A90 MOV X1, X20
	0x03468A94 MOV X2, X23
	0x03468A98 BL 0x3465404
	0x03468A9C CBZ X21, 0x3468B64
	0x03468AA0 MOV X0, X21
	0x03468AA4 MOV X1, X22
	0x03468AA8 MOV X2, X24
	0x03468AAC BL 0x3465B68
	0x03468AB0 CBZ X0, 0x3468B68
	0x03468AB4 MOV X1, X31
	0x03468AB8 BL 0x33ED394
	0x03468ABC STR X0, [X31 + 0x18]
	0x03468AC0 ADD X0, X31, 0x18
	0x03468AC4 MOV X1, X31
	0x03468AC8 BL 0x32C3A80
	0x03468ACC TBZ X0, 0x0, 0x3468B0C
	0x03468AD0 ADD X0, X31, 0x18
	0x03468AD4 MOV X1, X31
	0x03468AD8 BL 0x32C3B4C
	0x03468ADC MOVN W8, 0x1
	0x03468AE0 STR W8, [X19]
	0x03468AE4 STR X31, [X19 + 0x48]
	0x03468AE8 LDR X0, [X25]
	0x03468AEC ADD X19, X19, 0x8
	0x03468AF0 LDR W8, [X0 + 0xE0]
	0x03468AF4 CBNZ W8, 0x3468AFC
	0x03468AF8 BL 0x1C16DFC
	0x03468AFC MOV X0, X19
	0x03468B00 MOV X1, X31
	0x03468B04 BL 0x32C4864
	0x03468B08 B 0x3468B48
	0x03468B0C MOVZ W8, 0x1
	0x03468B10 STR W8, [X19]
	0x03468B14 LDR X8, [X31 + 0x18]
	0x03468B18 STR X8, [X19 + 0x58]
	0x03468B1C LDR X0, [X25]
	0x03468B20 LDR W8, [X0 + 0xE0]
	0x03468B24 CBNZ W8, 0x3468B2C
	0x03468B28 BL 0x1C16DFC
	0x03468B2C ADRP X8, 0xCC8000
	0x03468B30 LDR X8, [X8 + 0x4A8]
	0x03468B34 ADD X0, X19, 0x8
	0x03468B38 LDR X3, [X8]
	0x03468B3C ADD X1, X31, 0x18
	0x03468B40 MOV X2, X19
	0x03468B44 BL 0x218A360
	0x03468B48 LDP X20, X19, [X31 + 0x60]
	0x03468B4C LDP X22, X21, [X31 + 0x50]
	0x03468B50 LDP X24, X23, [X31 + 0x40]
	0x03468B54 LDP X30, X25, [X31 + 0x30]
	0x03468B58 ADD X31, X31, 0x70
	0x03468B5C RET
	0x03468B60 BL 0x1C16F20
	0x03468B64 BL 0x1C16F20
	0x03468B68 BL 0x1C16F20
	0x03468B6C BL 0x1C16F20
	0x03468B70 BL 0x1C16F20
	0x03468B74 BL 0x1C16F20
	0x03468B78 BL 0x1C16F20
	0x03468B7C BL 0x1C16F20
	0x03468B80 BL 0x1C16F20
	0x03468B84 BL 0x1C16F20
	0x03468B88 BL 0x1C16F20
	0x03468B8C BL 0x1C16F20
	0x03468B90 B 0x3468C04
	0x03468B94 B 0x3468C04
	0x03468B98 B 0x3468C04
	0x03468B9C B 0x3468C04
	0x03468BA0 B 0x3468C04
	0x03468BA4 B 0x3468C04
	0x03468BA8 B 0x3468C04
	0x03468BAC B 0x3468C04
	0x03468BB0 B 0x3468C04
	0x03468BB4 B 0x3468C04
	0x03468BB8 B 0x3468C04
	0x03468BBC B 0x3468C04
	0x03468BC0 B 0x3468C04
	0x03468BC4 B 0x3468C04
	0x03468BC8 B 0x3468C04
	0x03468BCC B 0x3468C04
	0x03468BD0 B 0x3468C04
	0x03468BD4 B 0x3468C04
	0x03468BD8 B 0x3468C04
	0x03468BDC B 0x3468C04
	0x03468BE0 B 0x3468C04
	0x03468BE4 B 0x3468C04
	0x03468BE8 B 0x3468C04
	0x03468BEC B 0x3468C04
	0x03468BF0 B 0x3468C04
	0x03468BF4 B 0x3468C04
	0x03468BF8 B 0x3468C04
	0x03468BFC B 0x3468C04
	0x03468C00 B 0x3468C04
	0x03468C04 MOV X20, X0
	0x03468C08 CMP W1, 0x1
	0x03468C0C B.NE 0x3468CA0
	0x03468C10 MOV X0, X20
	0x03468C14 BL 0x3EB1AD0
	0x03468C18 MOV X20, X0
	0x03468C1C ADRP X0, 0xC8B000
	0x03468C20 LDR X0, [X0 + 0x7D0]
	0x03468C24 BL 0x1C16D08
	0x03468C28 LDR X8, [X20]
	0x03468C2C LDR X1, [X8]
	0x03468C30 BL 0x1C17270
	0x03468C34 TBZ X0, 0x0, 0x3468C78
	0x03468C38 LDR X20, [X20]
	0x03468C3C BL 0x3EB1AE0
	0x03468C40 MOVN W8, 0x1
	0x03468C44 STR X31, [X19 + 0x48]
	0x03468C48 STR W8, [X19], #0x8
	0x03468C4C ADRP X0, 0xC8E000
	0x03468C50 LDR X0, [X0 + 0x280]
	0x03468C54 BL 0x1C16D08
	0x03468C58 LDR W8, [X0 + 0xE0]
	0x03468C5C CBNZ W8, 0x3468C64
	0x03468C60 BL 0x1C16DFC
	0x03468C64 MOV X0, X19
	0x03468C68 MOV X1, X20
	0x03468C6C MOV X2, X31
	0x03468C70 BL 0x32C4908
	0x03468C74 B 0x3468B48
	0x03468C78 MOVZ W0, 0x8
	0x03468C7C BL 0x3EB1AF0
	0x03468C80 LDR X8, [X20]
	0x03468C84 STR X8, [X0]
	0x03468C88 ADRP X1, 0xA4C000
	0x03468C8C ADD X1, X1, 0xE58
	0x03468C90 MOV X2, X31
	0x03468C94 BL 0x3EB1B00
	0x03468C98 MOV X20, X0
	0x03468C9C BL 0x3EB1AE0
	0x03468CA0 MOV X0, X20
	0x03468CA4 BL 0x1D2C690
	0x03468CA8 BL 0x1990590
	0x03468CAC STR X30, [X31 - 0x30]!
	0x03468CB0 STP X22, X21, [X31 + 0x10]
	0x03468CB4 STP X20, X19, [X31 + 0x20]
	0x03468CB8 ADRP X21, 0xF75000
	0x03468CBC ADRP X22, 0xC8E000
	0x03468CC0 LDRB W8, [X21 + 0x7CA]
	0x03468CC4 LDR X22, [X22 + 0x280]
	0x03468CC8 MOV X19, X1
	0x03468CCC MOV X20, X0
	0x03468CD0 TBNZ X8, 0x0, 0x3468CE8
	0x03468CD4 ADRP X0, 0xC8E000
	0x03468CD8 LDR X0, [X0 + 0x280]
	0x03468CDC BL 0x1C16CF4
	0x03468CE0 MOVZ W8, 0x1
	0x03468CE4 STRB W8, [X21 + 0x7CA]
	0x03468CE8 LDR X0, [X22]
	0x03468CEC LDR W8, [X0 + 0xE0]
	0x03468CF0 CBNZ W8, 0x3468CF8
	0x03468CF4 BL 0x1C16DFC
	0x03468CF8 ADD X0, X20, 0x8
	0x03468CFC MOV X1, X19
	0x03468D00 LDP X20, X19, [X31 + 0x20]
	0x03468D04 LDP X22, X21, [X31 + 0x10]
	0x03468D08 MOV X2, X31
	0x03468D0C LDR X30, [X31], #0x30
	0x03468D10 B 0x32C477C
	0x03468D14 SUB X31, X31, 0x70
	0x03468D18 STP X30, X25, [X31 + 0x30]
	0x03468D1C STP X24, X23, [X31 + 0x40]
	0x03468D20 STP X22, X21, [X31 + 0x50]
	0x03468D24 STP X20, X19, [X31 + 0x60]
	0x03468D28 ADRP X20, 0xF75000
	0x03468D2C LDRB W8, [X20 + 0x7CB]
	0x03468D30 MOV X19, X0
	0x03468D34 TBNZ X8, 0x0, 0x3468DE8
	0x03468D38 ADRP X0, 0xCC8000
	0x03468D3C LDR X0, [X0 + 0x4C0]
	0x03468D40 BL 0x1C16CF4
	0x03468D44 ADRP X0, 0xCC8000
	0x03468D48 LDR X0, [X0 + 0x4C8]
	0x03468D4C BL 0x1C16CF4
	0x03468D50 ADRP X0, 0xC8E000
	0x03468D54 LDR X0, [X0 + 0x280]
	0x03468D58 BL 0x1C16CF4
	0x03468D5C ADRP X0, 0xC8D000
	0x03468D60 LDR X0, [X0 + 0xA10]
	0x03468D64 BL 0x1C16CF4
	0x03468D68 ADRP X0, 0xC8C000
	0x03468D6C LDR X0, [X0 + 0x9F0]
	0x03468D70 BL 0x1C16CF4
	0x03468D74 ADRP X0, 0xC93000
	0x03468D78 LDR X0, [X0 + 0x818]
	0x03468D7C BL 0x1C16CF4
	0x03468D80 ADRP X0, 0xC8C000
	0x03468D84 LDR X0, [X0 + 0x818]
	0x03468D88 BL 0x1C16CF4
	0x03468D8C ADRP X0, 0xCC7000
	0x03468D90 LDR X0, [X0 + 0x7C8]
	0x03468D94 BL 0x1C16CF4
	0x03468D98 ADRP X0, 0xCC7000
	0x03468D9C LDR X0, [X0 + 0x7D0]
	0x03468DA0 BL 0x1C16CF4
	0x03468DA4 ADRP X0, 0xC8C000
	0x03468DA8 LDR X0, [X0 + 0x830]
	0x03468DAC BL 0x1C16CF4
	0x03468DB0 ADRP X0, 0xC8C000
	0x03468DB4 LDR X0, [X0 + 0x838]
	0x03468DB8 BL 0x1C16CF4
	0x03468DBC ADRP X0, 0xC8C000
	0x03468DC0 LDR X0, [X0 + 0x840]
	0x03468DC4 BL 0x1C16CF4
	0x03468DC8 ADRP X0, 0xCC8000
	0x03468DCC LDR X0, [X0 + 0x4D0]
	0x03468DD0 BL 0x1C16CF4
	0x03468DD4 ADRP X0, 0xCC8000
	0x03468DD8 LDR X0, [X0 + 0x4D8]
	0x03468DDC BL 0x1C16CF4
	0x03468DE0 MOVZ W8, 0x1
	0x03468DE4 STRB W8, [X20 + 0x7CB]
	0x03468DE8 STP X31, X31, [X31 + 0x20]
	0x03468DEC STR X31, [X31 + 0x18]
	0x03468DF0 ADRP X25, 0xC8E000
	0x03468DF4 LDR W8, [X19]
	0x03468DF8 LDR X20, [X19 + 0x20]
	0x03468DFC LDR X25, [X25 + 0x280]
	0x03468E00 CBZ W8, 0x3468E24
	0x03468E04 CMP W8, 0x1
	0x03468E08 B.NE 0x3468E50
	0x03468E0C LDR X8, [X19 + 0x58]
	0x03468E10 MOVN W9, 0x0
	0x03468E14 STR X8, [X31 + 0x18]
	0x03468E18 STR X31, [X19 + 0x58]
	0x03468E1C STR W9, [X19]
	0x03468E20 B 0x3469144
	0x03468E24 LDR X8, [X19 + 0x50]
	0x03468E28 MOVN W9, 0x0
	0x03468E2C STR X8, [X31 + 0x20]
	0x03468E30 STR X31, [X19 + 0x50]
	0x03468E34 STR W9, [X19]
	0x03468E38 ADRP X8, 0xC8C000
	0x03468E3C LDR X8, [X8 + 0x830]
	0x03468E40 ADD X0, X31, 0x20
	0x03468E44 LDR X1, [X8]
	0x03468E48 BL 0x2677474
	0x03468E4C B 0x3469080
	0x03468E50 ADRP X8, 0xCC8000
	0x03468E54 LDR X8, [X8 + 0x4D8]
	0x03468E58 LDR X0, [X8]
	0x03468E5C BL 0x1C16F10
	0x03468E60 MOV X21, X0
	0x03468E64 MOV X1, X31
	0x03468E68 BL 0x34460FC
	0x03468E6C STR X21, [X19 + 0x48]
	0x03468E70 CBZ X21, 0x34691E4
	0x03468E74 LDR X8, [X19 + 0x20]
	0x03468E78 STR X8, [X21 + 0x10]
	0x03468E7C LDR X8, [X19 + 0x28]
	0x03468E80 STR X8, [X21 + 0x18]
	0x03468E84 LDR X8, [X19 + 0x30]
	0x03468E88 STR X8, [X21 + 0x20]
	0x03468E8C LDR X8, [X19 + 0x38]
	0x03468E90 STR X8, [X21 + 0x28]
	0x03468E94 CBZ X20, 0x34691E8
	0x03468E98 LDRB W8, [X20 + 0x10]
	0x03468E9C CBZ W8, 0x3469084
	0x03468EA0 LDR X8, [X19 + 0x48]
	0x03468EA4 CBZ X8, 0x34691EC
	0x03468EA8 LDR X21, [X8 + 0x18]
	0x03468EAC CBZ X21, 0x34691F0
	0x03468EB0 ADRP X23, 0xC8C000
	0x03468EB4 LDR X8, [X21]
	0x03468EB8 LDR X23, [X23 + 0x818]
	0x03468EBC LDRH W9, [X8 + 0x12E]
	0x03468EC0 LDR X1, [X23]
	0x03468EC4 CBZ X9, 0x3468EE8
	0x03468EC8 LDR X10, [X8 + 0xB0]
	0x03468ECC ADD X10, X10, 0x8
	0x03468ED0 LDUR X11, [X10 - 0x8]
	0x03468ED4 CMP X11, X1
	0x03468ED8 B.EQ 0x3468EF8
	0x03468EDC SUBS X9, X9, 0x1
	0x03468EE0 ADD X10, X10, 0x10
	0x03468EE4 B.NE 0x3468ED0
	0x03468EE8 MOVZ W2, 0x7
	0x03468EEC MOV X0, X21
	0x03468EF0 BL 0x1C5C788
	0x03468EF4 B 0x3468F08
	0x03468EF8 LDR W9, [X10]
	0x03468EFC ADD W9, W9, 0x7
	0x03468F00 ADD X8, X8, W9, 0x4, SXTW
	0x03468F04 ADD X0, X8, 0x138
	0x03468F08 LDP X8, X1, [X0]
	0x03468F0C MOV X0, X21
	0x03468F10 BLR X8
	0x03468F14 MOV X1, X31
	0x03468F18 BL 0x32277A8
	0x03468F1C TBNZ X0, 0x0, 0x3469080
	0x03468F20 LDR X8, [X19 + 0x48]
	0x03468F24 CBZ X8, 0x34691F4
	0x03468F28 ADRP X9, 0xC8C000
	0x03468F2C LDR X9, [X9 + 0x9F0]
	0x03468F30 LDR X21, [X8 + 0x18]
	0x03468F34 LDR X0, [X9]
	0x03468F38 LDR W9, [X0 + 0xE0]
	0x03468F3C CBNZ W9, 0x3468F44
	0x03468F40 BL 0x1C16DFC
	0x03468F44 MOV X0, X31
	0x03468F48 BL 0x33616A4
	0x03468F4C ADRP X22, 0xC8D000
	0x03468F50 LDR X22, [X22 + 0xA10]
	0x03468F54 MOV X8, X0
	0x03468F58 STR X8, [X31 + 0x28]
	0x03468F5C LDR X0, [X22]
	0x03468F60 LDR W8, [X0 + 0xE0]
	0x03468F64 CBNZ W8, 0x3468F70
	0x03468F68 BL 0x1C16DFC
	0x03468F6C LDR X0, [X22]
	0x03468F70 LDR X8, [X0 + 0xB8]
	0x03468F74 LDR X1, [X8]
	0x03468F78 ADD X0, X31, 0x28
	0x03468F7C MOV X2, X31
	0x03468F80 BL 0x335FC68
	0x03468F84 CBZ X21, 0x34691F8
	0x03468F88 LDR X8, [X21]
	0x03468F8C LDR X1, [X23]
	0x03468F90 MOV X22, X0
	0x03468F94 LDRH W9, [X8 + 0x12E]
	0x03468F98 CBZ X9, 0x3468FBC
	0x03468F9C LDR X10, [X8 + 0xB0]
	0x03468FA0 ADD X10, X10, 0x8
	0x03468FA4 LDUR X11, [X10 - 0x8]
	0x03468FA8 CMP X11, X1
	0x03468FAC B.EQ 0x3468FCC
	0x03468FB0 SUBS X9, X9, 0x1
	0x03468FB4 ADD X10, X10, 0x10
	0x03468FB8 B.NE 0x3468FA4
	0x03468FBC MOVZ W2, 0xB
	0x03468FC0 MOV X0, X21
	0x03468FC4 BL 0x1C5C788
	0x03468FC8 B 0x3468FDC
	0x03468FCC LDR W9, [X10]
	0x03468FD0 ADD W9, W9, 0xB
	0x03468FD4 ADD X8, X8, W9, 0x4, SXTW
	0x03468FD8 ADD X0, X8, 0x138
	0x03468FDC LDP X8, X2, [X0]
	0x03468FE0 MOV X0, X21
	0x03468FE4 MOV X1, X22
	0x03468FE8 BLR X8
	0x03468FEC TBZ X0, 0x0, 0x3469080
	0x03468FF0 LDR X8, [X19 + 0x48]
	0x03468FF4 CBZ X8, 0x34691FC
	0x03468FF8 LDR X1, [X8 + 0x18]
	0x03468FFC LDR X3, [X19 + 0x40]
	0x03469000 LDR X4, [X8 + 0x28]
	0x03469004 MOV X0, X20
	0x03469008 MOV X2, X31
	0x0346900C MOV X5, X31
	0x03469010 BL 0x34440A8
	0x03469014 CBZ X0, 0x3469200
	0x03469018 ADRP X8, 0xC8B000
	0x0346901C LDR X8, [X8 + 0x840]
	0x03469020 LDR X1, [X8]
	0x03469024 BL 0x269F5D0
	0x03469028 ADRP X8, 0xC8B000
	0x0346902C LDR X8, [X8 + 0x838]
	0x03469030 STR X0, [X31 + 0x20]
	0x03469034 LDR X1, [X8]
	0x03469038 ADD X0, X31, 0x20
	0x0346903C BL 0x2677430
	0x03469040 TBNZ X0, 0x0, 0x3468E38
	0x03469044 STR W31, [X19]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xF76000
	013 Move W8, [X20+1991]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {78}
	019 Move X0, 0xC8C000
	020 Move X0, [X0+2504]
	021 Call 0x1C17CF4
	022 Move X0, 0xCC9000
	023 Move X0, [X0+1112]
	024 Call 0x1C17CF4
	025 Move X0, 0xCC8000
	026 Move X0, [X0+2640]
	027 Call 0x1C17CF4
	028 Move X0, 0xCC8000
	029 Move X0, [X0+1584]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC8000
	032 Move X0, [X0+2648]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC8000
	035 Move X0, [X0+2656]
	036 Call 0x1C17CF4
	037 Move X0, 0xC8F000
	038 Move X0, [X0+416]
	039 Call 0x1C17CF4
	040 Move X0, 0xC8D000
	041 Move X0, [X0+2072]
	042 Call 0x1C17CF4
	043 Move X0, 0xCC8000
	044 Move X0, [X0+1992]
	045 Call 0x1C17CF4
	046 Move X0, 0xCC8000
	047 Move X0, [X0+2000]
	048 Call 0x1C17CF4
	049 Move X0, 0xCC8000
	050 Move X0, [X0+2664]
	051 Call 0x1C17CF4
	052 Move X0, 0xCC8000
	053 Move X0, [X0+2672]
	054 Call 0x1C17CF4
	055 Move X0, 0xCC8000
	056 Move X0, [X0+2680]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC8000
	059 Move X0, [X0+2688]
	060 Call 0x1C17CF4
	061 Move X0, 0xCC8000
	062 Move X0, [X0+2696]
	063 Call 0x1C17CF4
	064 Move X0, 0xCC9000
	065 Move X0, [X0+1120]
	066 Call 0x1C17CF4
	067 Move X0, 0xCC9000
	068 Move X0, [X0+1128]
	069 Call 0x1C17CF4
	070 Move X0, 0xCC9000
	071 Move X0, [X0+1136]
	072 Call 0x1C17CF4
	073 Move X0, 0xCC9000
	074 Move X0, [X0+1144]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+1991], W8
	078 Move [X31+24], X31
	079 Move X25, 0xCC8000
	080 Move W8, [X19]
	081 Move X26, [X19+32]
	082 Move X25, [X25+1584]
	083 Compare W8, 0
	084 JumpIfEqual {125}
	085 Move X8, 0xCC9000
	086 Move X8, [X8+1128]
	087 Move X0, [X8]
	088 Call 0x1C17F10
	089 Move X20, X0
	090 Move X1, X31
	091 Call <>c__DisplayClass107_0..ctor, X0
	092 Move [X19+72], X20
	093 Compare X20, 0
	094 JumpIfEqual {706}
	095 Move X8, [X19+32]
	096 Move [X20+16], X8
	097 Move X8, [X19+40]
	098 Move [X20+24], X8
	099 Move X8, [X19+48]
	100 Move [X20+32], X8
	101 Move X8, [X19+56]
	102 Move [X20+40], X8
	103 Move X8, [X19+72]
	104 Compare X8, 0
	105 JumpIfEqual {707}
	106 Move X20, [X8+24]
	107 Compare X20, 0
	108 JumpIfEqual {708}
	109 Move X23, 0xC8D000
	110 Move X8, [X20]
	111 Move X23, [X23+2072]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move X1, [X23]
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move W2, 1
	123 Move X0, X20
	124 Call 0x1C5D788
	125 Move X8, [X19+80]
	126 Move TEMP, 0
	127 Not TEMP
	128 Move W9, TEMP
	129 Move [X31+24], X8
	130 Move [X19+80], X31
	131 Move [X19], W9
	132 Move W9, [X10]
	133 Add W9, W9, 1
	134 Add X8, X8, W9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X20
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {267}
	144 Move X8, [X19+72]
	145 Compare X8, 0
	146 JumpIfEqual {717}
	147 Move X20, [X8+24]
	148 Compare X20, 0
	149 JumpIfEqual {718}
	150 Move X8, [X20]
	151 Move X1, [X23]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move W2, 3
	162 Move X0, X20
	163 Call 0x1C5D788
	164 Move W9, [X10]
	165 Add W9, W9, 3
	166 Add X8, X8, W9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X20
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X8, [X19+72]
	173 Compare X8, 0
	174 JumpIfEqual {719}
	175 Move X21, [X8+24]
	176 Compare X21, 0
	177 JumpIfEqual {720}
	178 Move X8, [X21]
	179 Move X1, [X23]
	180 Move X20, X0
	181 NotImplemented "Instruction LDRH not yet implemented."
	182 Compare X9, 0
	183 JumpIfEqual {190}
	184 Move X10, [X8+176]
	185 Add X10, X10, 8
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Subtract X9, X9, 1
	189 Add X10, X10, 16
	190 Move W2, 2
	191 Move X0, X21
	192 Call 0x1C5D788
	193 Move W9, [X10]
	194 Add W9, W9, 2
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X1, [X0+8]
	199 Move X0, X21
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Subtract X8, X20, X0
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Compare X26, 0
	204 JumpIfEqual {725}
	205 Move X8, 0xC8C000
	206 Move X8, [X8+2504]
	207 Move X20, [X26+80]
	208 Move X21, [X8]
	209 Move X8, [X21+56]
	210 Compare X8, 0
	211 JumpIfNotEqual {215}
	212 Move X0, X21
	213 Call 0x1C5D6E0
	214 Move X8, [X21+56]
	215 Move X0, [X8+16]
	216 Move W8, [X0+309]
	217 Move TEMP, X8
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfEqual {222}
	221 Call 0x1C5D684
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X8, [X21+56]
	227 Move X0, [X8+16]
	228 Move W8, [X0+309]
	229 Move TEMP, X8
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {234}
	233 Call 0x1C5D684
	234 Compare X20, 0
	235 JumpIfEqual {726}
	236 Move X10, 0xC8F000
	237 Move X11, 0xCC9000
	238 Move X9, [X0+184]
	239 Move X10, [X10+416]
	240 Move X8, [X20]
	241 Move X11, [X11+1136]
	242 Move X21, [X9]
	243 Move X1, [X10]
	244 NotImplemented "Instruction LDRH not yet implemented."
	245 Move X22, [X11]
	246 Compare X9, 0
	247 JumpIfEqual {254}
	248 Move X10, [X8+176]
	249 Add X10, X10, 8
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Subtract X9, X9, 1
	253 Add X10, X10, 16
	254 Move W2, 3
	255 Move X0, X20
	256 Call 0x1C5D788
	257 Move W9, [X10]
	258 Add W9, W9, 3
	259 Add X8, X8, W9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X3, [X0+8]
	263 Move X0, X20
	264 Move X1, X22
	265 Move X2, X21
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Move X8, [X19+72]
	268 Compare X8, 0
	269 JumpIfEqual {709}
	270 Move X20, [X8+24]
	271 Compare X20, 0
	272 JumpIfEqual {710}
	273 Move X8, [X20]
	274 Move X1, [X23]
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Compare X9, 0
	277 JumpIfEqual {284}
	278 Move X10, [X8+176]
	279 Add X10, X10, 8
	280 NotImplemented "Instruction LDUR not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Subtract X9, X9, 1
	283 Add X10, X10, 16
	284 Move W2, 1
	285 Move X0, X20
	286 Call 0x1C5D788
	287 Move W9, [X10]
	288 Add W9, W9, 1
	289 Add X8, X8, W9
	290 Add X0, X8, 312
	291 Move X8, [X0]
	292 Move X1, [X0+8]
	293 Move X0, X20
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {422}
	299 Move X8, [X19+72]
	300 Compare X8, 0
	301 JumpIfEqual {721}
	302 Move X20, [X8+24]
	303 Compare X20, 0
	304 JumpIfEqual {722}
	305 Move X8, [X20]
	306 Move X1, [X23]
	307 NotImplemented "Instruction LDRH not yet implemented."
	308 Compare X9, 0
	309 JumpIfEqual {316}
	310 Move X10, [X8+176]
	311 Add X10, X10, 8
	312 NotImplemented "Instruction LDUR not yet implemented."
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Subtract X9, X9, 1
	315 Add X10, X10, 16
	316 Move W2, 6
	317 Move X0, X20
	318 Call 0x1C5D788
	319 Move W9, [X10]
	320 Add W9, W9, 6
	321 Add X8, X8, W9
	322 Add X0, X8, 312
	323 Move X8, [X0]
	324 Move X1, [X0+8]
	325 Move X0, X20
	326 NotImplemented "Instruction BLR not yet implemented."
	327 Move X8, [X19+72]
	328 Compare X8, 0
	329 JumpIfEqual {723}
	330 Move X21, [X8+24]
	331 Compare X21, 0
	332 JumpIfEqual {724}
	333 Move X8, [X21]
	334 Move X1, [X23]
	335 Move X20, X0
	336 NotImplemented "Instruction LDRH not yet implemented."
	337 Compare X9, 0
	338 JumpIfEqual {345}
	339 Move X10, [X8+176]
	340 Add X10, X10, 8
	341 NotImplemented "Instruction LDUR not yet implemented."
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Subtract X9, X9, 1
	344 Add X10, X10, 16
	345 Move W2, 2
	346 Move X0, X21
	347 Call 0x1C5D788
	348 Move W9, [X10]
	349 Add W9, W9, 2
	350 Add X8, X8, W9
	351 Add X0, X8, 312
	352 Move X8, [X0]
	353 Move X1, [X0+8]
	354 Move X0, X21
	355 NotImplemented "Instruction BLR not yet implemented."
	356 Subtract X8, X20, X0
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Compare X26, 0
	359 JumpIfEqual {727}
	360 Move X8, 0xC8C000
	361 Move X8, [X8+2504]
	362 Move X20, [X26+80]
	363 Move X21, [X8]
	364 Move X8, [X21+56]
	365 Compare X8, 0
	366 JumpIfNotEqual {370}
	367 Move X0, X21
	368 Call 0x1C5D6E0
	369 Move X8, [X21+56]
	370 Move X0, [X8+16]
	371 Move W8, [X0+309]
	372 Move TEMP, X8
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfEqual {377}
	376 Call 0x1C5D684
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {381}
	380 Call 0x1C17DFC
	381 Move X8, [X21+56]
	382 Move X0, [X8+16]
	383 Move W8, [X0+309]
	384 Move TEMP, X8
	385 And TEMP, TEMP, 1
	386 Compare TEMP, 1
	387 JumpIfEqual {389}
	388 Call 0x1C5D684
	389 Compare X20, 0
	390 JumpIfEqual {728}
	391 Move X10, 0xC8F000
	392 Move X11, 0xCC9000
	393 Move X9, [X0+184]
	394 Move X10, [X10+416]
	395 Move X8, [X20]
	396 Move X11, [X11+1144]
	397 Move X21, [X9]
	398 Move X1, [X10]
	399 NotImplemented "Instruction LDRH not yet implemented."
	400 Move X22, [X11]
	401 Compare X9, 0
	402 JumpIfEqual {409}
	403 Move X10, [X8+176]
	404 Add X10, X10, 8
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Subtract X9, X9, 1
	408 Add X10, X10, 16
	409 Move W2, 3
	410 Move X0, X20
	411 Call 0x1C5D788
	412 Move W9, [X10]
	413 Add W9, W9, 3
	414 Add X8, X8, W9
	415 Add X0, X8, 312
	416 Move X8, [X0]
	417 Move X3, [X0+8]
	418 Move X0, X20
	419 Move X1, X22
	420 Move X2, X21
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Compare X26, 0
	423 JumpIfEqual {711}
	424 Move X8, 0xCC8000
	425 Move X8, [X8+2648]
	426 Move X20, [X26+88]
	427 Move X22, [X19+72]
	428 Move X0, [X8]
	429 Call 0x1C17F10
	430 Move X8, 0xCC9000
	431 Move X8, [X8+1120]
	432 Move X21, X0
	433 Move X2, [X8]
	434 Move X1, X22
	435 Move X3, X31
	436 Call Func`1<Object>..ctor, X0, X1, X2
	437 Move X8, [X19+72]
	438 Compare X8, 0
	439 JumpIfEqual {712}
	440 Move X9, 0xCC8000
	441 Move X22, [X19+64]
	442 Move X9, [X9+1992]
	443 Compare X22, 0
	444 JumpIfNotEqual {446}
	445 Move X22, [X26+24]
	446 Move X23, [X8+24]
	447 Move X1, [X8+40]
	448 Move X2, [X9]
	449 Move [X31+8], X31
	450 Move [X31+16], X31
	451 Add X0, X31, 8
	452 Call Nullable`1<CancellationToken>..ctor, X0, X1
	453 Move X8, 0xCC8000
	454 Move X8, [X8+2000]
	455 Move X0, [X8]
	456 Call 0x1C17F10
	457 Move X3, [X31+8]
	458 Move X4, [X31+16]
	459 Move X24, X0
	460 Move X1, X23
	461 Move X2, X22
	462 Call RetryHistory..ctor, X0, X1, X2, X3
	463 Compare X20, 0
	464 JumpIfEqual {713}
	465 Move X8, 0xCC8000
	466 Move X8, [X8+2664]
	467 Move X3, [X8]
	468 Move X0, X20
	469 Move X1, X21
	470 Move X2, X24
	471 Call 0x2244230, X0, X1, X2
	472 Compare X0, 0
	473 JumpIfEqual {714}
	474 Move X8, 0xCC8000
	475 Move X8, [X8+2696]
	476 Move X1, [X8]
	477 Call Task`1<Object>.GetAwaiter, X0
	478 Move X8, 0xCC8000
	479 Move X8, [X8+2688]
	480 Move [X31+24], X0
	481 Move X1, [X8]
	482 Add X0, X31, 24
	483 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	484 Move TEMP, X0
	485 And TEMP, TEMP, 1
	486 Compare TEMP, 1
	487 JumpIfNotEqual {529}
	488 Move X8, 0xCC8000
	489 Move X8, [X8+2680]
	490 Add X0, X31, 24
	491 Move X1, [X8]
	492 Call TaskAwaiter`1<Object>.GetResult, X0
	493 Move X8, [X19+72]
	494 Compare X8, 0
	495 JumpIfEqual {705}
	496 Move X27, 0xCC8000
	497 Move X24, 0xCC8000
	498 Move X21, [X8+24]
	499 Move X27, [X27+2672]
	500 Move X24, [X24+2656]
	501 Move X20, X0
	502 Compare X21, 0
	503 JumpIfEqual {513}
	504 Move X9, [X21]
	505 Move X8, [X27]
	506 Move W11, [X9+304]
	507 Move W10, [X8+304]
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Move X9, [X9+200]
	510 Add X9, X9, X10
	511 NotImplemented "Instruction LDUR not yet implemented."
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Compare X20, 0
	514 JumpIfEqual {715}
	515 Move X8, [X20]
	516 Move X1, [X24]
	517 NotImplemented "Instruction LDRH not yet implemented."
	518 Compare X9, 0
	519 JumpIfEqual {526}
	520 Move X10, [X8+176]
	521 Add X10, X10, 8
	522 NotImplemented "Instruction LDUR not yet implemented."
	523 NotImplemented "Instruction CMP not yet implemented."
	524 Subtract X9, X9, 1
	525 Add X10, X10, 16
	526 Move W2, 2
	527 Move X0, X20
	528 Call 0x1C5D788
	529 Move [X19], W31
	530 Move X8, [X31+24]
	531 Move [X19+80], X8
	532 Move X0, [X25]
	533 Move W8, [X0+224]
	534 Compare W8, 0
	535 JumpIfNotEqual {537}
	536 Call 0x1C17DFC
	537 Move X8, 0xCC9000
	538 Move X8, [X8+1112]
	539 Add X0, X19, 8
	540 Move X3, [X8]
	541 Add X1, X31, 24
	542 Move X2, X19
	543 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	544 Move W9, [X10]
	545 Add W9, W9, 2
	546 Add X8, X8, W9
	547 Add X0, X8, 312
	548 Move X8, [X0]
	549 Move X1, [X0+8]
	550 Move X0, X20
	551 NotImplemented "Instruction BLR not yet implemented."
	552 Move X8, [X20]
	553 Move X1, [X24]
	554 Move X22, X0
	555 NotImplemented "Instruction LDRH not yet implemented."
	556 Compare X9, 0
	557 JumpIfEqual {564}
	558 Move X10, [X8+176]
	559 Add X10, X10, 8
	560 NotImplemented "Instruction LDUR not yet implemented."
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Subtract X9, X9, 1
	563 Add X10, X10, 16
	564 Move W2, 1
	565 Move X0, X20
	566 Call 0x1C5D788
	567 Move W9, [X10]
	568 Add W9, W9, 1
	569 Add X8, X8, W9
	570 Add X0, X8, 312
	571 Move X8, [X0]
	572 Move X1, [X0+8]
	573 Move X0, X20
	574 NotImplemented "Instruction BLR not yet implemented."
	575 Move X8, [X20]
	576 Move X1, [X24]
	577 Move X23, X0
	578 NotImplemented "Instruction LDRH not yet implemented."
	579 Compare X9, 0
	580 JumpIfEqual {587}
	581 Move X10, [X8+176]
	582 Add X10, X10, 8
	583 NotImplemented "Instruction LDUR not yet implemented."
	584 NotImplemented "Instruction CMP not yet implemented."
	585 Subtract X9, X9, 1
	586 Add X10, X10, 16
	587 Move X0, X20
	588 Move W2, W31
	589 Call 0x1C5D788
	590 NotImplemented "Instruction LDRSW not yet implemented."
	591 Add X8, X8, X9
	592 Add X0, X8, 312
	593 Move X8, [X0]
	594 Move X1, [X0+8]
	595 Move X0, X20
	596 NotImplemented "Instruction BLR not yet implemented."
	597 Move W20, W0
	598 Move X0, [X27]
	599 Call 0x1C17F10
	600 Move X21, X0
	601 And W3, W20, 1
	602 Move X1, X22
	603 Move X2, X23
	604 Call Session..ctor, X0, X1, X2, X3
	605 Compare X26, 0
	606 JumpIfEqual {716}
	607 Move X8, [X26+64]
	608 Compare X8, 0
	609 JumpIfEqual {615}
	610 Move X0, [X8+64]
	611 Move X9, [X8+24]
	612 Move X2, [X8+40]
	613 Move X1, X21
	614 NotImplemented "Instruction BLR not yet implemented."
	615 Move TEMP, 1
	616 Not TEMP
	617 Move W8, TEMP
	618 Move [X19], W8
	619 Move [X19+72], X31
	620 Move X0, [X25]
	621 Move X20, 0xCC8000
	622 Add X19, X19, 8
	623 Move W8, [X0+224]
	624 Move X20, [X20+2640]
	625 Compare W8, 0
	626 JumpIfNotEqual {628}
	627 Call 0x1C17DFC
	628 Move X2, [X20]
	629 Move X0, X19
	630 Move X1, X21
	631 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	632 Move X20, [X31+96]
	633 Move X19, [X31+104]
	634 Move X22, [X31+80]
	635 Move X21, [X31+88]
	636 Move X24, [X31+64]
	637 Move X23, [X31+72]
	638 Move X26, [X31+48]
	639 Move X25, [X31+56]
	640 Move X30, [X31+32]
	641 Move X27, [X31+40]
	642 Add X31, X31, 112
	643 Return 
	644 Compare X20, 0
	645 JumpIfEqual {729}
	646 Move X8, [X20]
	647 Move X1, [X24]
	648 NotImplemented "Instruction LDRH not yet implemented."
	649 Compare X9, 0
	650 JumpIfEqual {657}
	651 Move X10, [X8+176]
	652 Add X10, X10, 8
	653 NotImplemented "Instruction LDUR not yet implemented."
	654 NotImplemented "Instruction CMP not yet implemented."
	655 Subtract X9, X9, 1
	656 Add X10, X10, 16
	657 Move W2, 2
	658 Move X0, X20
	659 Call 0x1C5D788
	660 Move W9, [X10]
	661 Add W9, W9, 2
	662 Add X8, X8, W9
	663 Add X0, X8, 312
	664 Move X8, [X0]
	665 Move X1, [X0+8]
	666 Move X0, X20
	667 NotImplemented "Instruction BLR not yet implemented."
	668 Move X8, [X20]
	669 Move X1, [X24]
	670 Move X22, X0
	671 NotImplemented "Instruction LDRH not yet implemented."
	672 Compare X9, 0
	673 JumpIfEqual {680}
	674 Move X10, [X8+176]
	675 Add X10, X10, 8
	676 NotImplemented "Instruction LDUR not yet implemented."
	677 NotImplemented "Instruction CMP not yet implemented."
	678 Subtract X9, X9, 1
	679 Add X10, X10, 16
	680 Move W2, 1
	681 Move X0, X20
	682 Call 0x1C5D788
	683 Move W9, [X10]
	684 Add W9, W9, 1
	685 Add X8, X8, W9
	686 Add X0, X8, 312
	687 Move X8, [X0]
	688 Move X1, [X0+8]
	689 Move X0, X20
	690 NotImplemented "Instruction BLR not yet implemented."
	691 Move X2, X0
	692 Move X0, X21
	693 Move X1, X22
	694 Call Session.Update, X0, X1, X2
	695 Compare X26, 0
	696 JumpIfEqual {730}
	697 Move X8, [X26+64]
	698 Compare X8, 0
	699 JumpIfEqual {615}
	700 Move X0, [X8+64]
	701 Move X9, [X8+24]
	702 Move X2, [X8+40]
	703 Move X1, X21
	704 NotImplemented "Instruction BLR not yet implemented."
	705 Call 0x1C17F20
	706 Call 0x1C17F20
	707 Call 0x1C17F20
	708 Call 0x1C17F20
	709 Call 0x1C17F20
	710 Call 0x1C17F20
	711 Call 0x1C17F20
	712 Call 0x1C17F20
	713 Call 0x1C17F20
	714 Call 0x1C17F20
	715 Call 0x1C17F20
	716 Call 0x1C17F20
	717 Call 0x1C17F20
	718 Call 0x1C17F20
	719 Call 0x1C17F20
	720 Call 0x1C17F20
	721 Call 0x1C17F20
	722 Call 0x1C17F20
	723 Call 0x1C17F20
	724 Call 0x1C17F20
	725 Call 0x1C17F20
	726 Call 0x1C17F20
	727 Call 0x1C17F20
	728 Call 0x1C17F20
	729 Call 0x1C17F20
	730 Call 0x1C17F20
	731 Move X20, X0
	732 NotImplemented "Instruction CMP not yet implemented."
	733 Move X0, X20
	734 Call 0x3EB2AD0
	735 Move X20, X0
	736 Move X0, 0xC8C000
	737 Move X0, [X0+2000]
	738 Call 0x1C17D08
	739 Move X8, [X20]
	740 Move X1, [X8]
	741 Call 0x1C18270
	742 Move TEMP, X0
	743 And TEMP, TEMP, 1
	744 Compare TEMP, 1
	745 JumpIfNotEqual {767}
	746 Move X20, [X20]
	747 Call 0x3EB2AE0
	748 Move TEMP, 1
	749 Not TEMP
	750 Move W8, TEMP
	751 Move [X19+72], X31
	752 Move [X19+8], W8
	753 Move X0, 0xCC8000
	754 Move X0, [X0+1584]
	755 Call 0x1C17D08
	756 Move W8, [X0+224]
	757 Compare W8, 0
	758 JumpIfNotEqual {760}
	759 Call 0x1C17DFC
	760 Move X0, 0xCC8000
	761 Move X0, [X0+2720]
	762 Call 0x1C17D08
	763 Move X2, X0
	764 Move X0, X19
	765 Move X1, X20
	766 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	767 Move W0, 8
	768 Call 0x3EB2AF0
	769 Move X8, [X20]
	770 Move [X0], X8
	771 Move X1, 0xA4C000
	772 Add X1, X1, 3672
	773 Move X2, X31
	774 Call 0x3EB2B00
	775 Move X20, X0
	776 Call 0x3EB2AE0
	777 Move X0, X20
	778 Call 0x1D2D690
	779 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03469624 SUBS X9, X9, 0x1
	0x03469628 ADD X10, X10, 0x10
	0x0346962C B.NE 0x3469618
	0x03469630 MOVZ W2, 0xB
	0x03469634 MOV X0, X21
	0x03469638 BL 0x1C5C788
	0x0346963C B 0x3469650
	0x03469640 LDR W9, [X10]
	0x03469644 ADD W9, W9, 0xB
	0x03469648 ADD X8, X8, W9, 0x4, SXTW
	0x0346964C ADD X0, X8, 0x138
	0x03469650 LDP X8, X2, [X0]
	0x03469654 MOV X0, X21
	0x03469658 MOV X1, X22
	0x0346965C BLR X8
	0x03469660 TBZ X0, 0x0, 0x34696F4
	0x03469664 LDR X8, [X19 + 0x48]
	0x03469668 CBZ X8, 0x3469870
	0x0346966C LDR X1, [X8 + 0x18]
	0x03469670 LDR X3, [X19 + 0x40]
	0x03469674 LDR X4, [X8 + 0x28]
	0x03469678 MOV X0, X20
	0x0346967C MOV X2, X31
	0x03469680 MOV X5, X31
	0x03469684 BL 0x34440A8
	0x03469688 CBZ X0, 0x3469874
	0x0346968C ADRP X8, 0xC8B000
	0x03469690 LDR X8, [X8 + 0x840]
	0x03469694 LDR X1, [X8]
	0x03469698 BL 0x269F5D0
	0x0346969C ADRP X8, 0xC8B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF75000
	007 Move X21, 0xCC7000
	008 Move W8, [X22+1992]
	009 Move X21, [X21+1584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC7000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0xCC7000
	020 Move X0, [X0+1584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1992], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC7000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2728]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

