Type: Nakama.Socket/<WriteChatMessageAsync>d__118

Method: System.Void MoveNext()

Disassembly:
	0x03485084 LDR X1, [X20]
	0x03485088 MOV X20, X0
	0x0348508C BL 0x2AA4804
	0x03485090 STR X20, [X19 + 0x20]
	0x03485094 STRB W31, [X19 + 0x28]
	0x03485098 STR X31, [X19 + 0x38]
	0x0348509C LDP X20, X19, [X31 + 0x20]
	0x034850A0 LDP X22, X21, [X31 + 0x10]
	0x034850A4 LDR X30, [X31], #0x30
	0x034850A8 RET
	0x034850AC STP X30, X25, [X31 - 0x40]!
	0x034850B0 STP X24, X23, [X31 + 0x10]
	0x034850B4 STP X22, X21, [X31 + 0x20]
	0x034850B8 STP X20, X19, [X31 + 0x30]
	0x034850BC ADRP X25, 0xF58000
	0x034850C0 ADRP X24, 0xC70000
	0x034850C4 LDRB W8, [X25 + 0x8E3]
	0x034850C8 LDR X24, [X24 + 0x570]
	0x034850CC MOV X19, X4
	0x034850D0 MOV W22, W3
	0x034850D4 MOV W21, W2
	0x034850D8 MOV X23, X1
	0x034850DC MOV X20, X0
	0x034850E0 TBNZ X8, 0x0, 0x34850F8
	0x034850E4 ADRP X0, 0xC70000
	0x034850E8 LDR X0, [X0 + 0x570]
	0x034850EC BL 0x1C16CF4
	0x034850F0 MOVZ W8, 0x1
	0x034850F4 STRB W8, [X25 + 0x8E3]
	0x034850F8 MOV X0, X20
	0x034850FC MOV X1, X31
	0x03485100 BL 0x33BDD8C
	0x03485104 STR W22, [X20 + 0x30]
	0x03485108 STR X23, [X20 + 0x38]
	0x0348510C LDR X0, [X24]
	0x03485110 LDR W8, [X0 + 0xE0]
	0x03485114 CBNZ W8, 0x348511C
	0x03485118 BL 0x1C16DFC
	0x0348511C SCVTF D0, W21
	0x03485120 MOV X0, X31
	0x03485124 BL 0x3394754
	0x03485128 STR X0, [X20 + 0x40]
	0x0348512C STR X19, [X20 + 0x60]
	0x03485130 LDP X20, X19, [X31 + 0x30]
	0x03485134 LDP X22, X21, [X31 + 0x20]
	0x03485138 LDP X24, X23, [X31 + 0x10]
	0x0348513C LDP X30, X25, [X31], #0x40
	0x03485140 RET
	0x03485144 SUB X31, X31, 0x70
	0x03485148 STP X30, X21, [X31 + 0x50]
	0x0348514C STP X20, X19, [X31 + 0x60]
	0x03485150 ADRP X21, 0xF58000
	0x03485154 ADRP X20, 0xC71000
	0x03485158 LDRB W8, [X21 + 0x8E4]
	0x0348515C LDR X20, [X20 + 0x280]
	0x03485160 MOV X19, X0
	0x03485164 TBNZ X8, 0x0, 0x3485188
	0x03485168 ADRP X0, 0xCAC000
	0x0348516C LDR X0, [X0 + 0xC8]
	0x03485170 BL 0x1C16CF4
	0x03485174 ADRP X0, 0xC71000
	0x03485178 LDR X0, [X0 + 0x280]
	0x0348517C BL 0x1C16CF4
	0x03485180 MOVZ W8, 0x1
	0x03485184 STRB W8, [X21 + 0x8E4]
	0x03485188 LDR X0, [X20]
	0x0348518C MOVI V0.2D, 0x0
	0x03485190 STP V0, V0, [X31 + 0x30]
	0x03485194 STR V0, [X31 + 0x2]
	0x03485198 ADRP X20, 0xCAC000
	0x0348519C LDR W8, [X0 + 0xE0]
	0x034851A0 LDR X20, [X20 + 0xC8]
	0x034851A4 CBNZ W8, 0x34851AC
	0x034851A8 BL 0x1C16DFC
	0x034851AC ADD X8, X31, 0x8
	0x034851B0 MOV X0, X31
	0x034851B4 BL 0x32C4770
	0x034851B8 LDUR V0, [X31 + 0x8]
	0x034851BC LDR X9, [X31 + 0x18]
	0x034851C0 LDR X2, [X20]
	0x034851C4 ADD X8, X31, 0x20
	0x034851C8 ORR X20, X8, 0xF
	0x034851CC MOVN W10, 0x0
	0x034851D0 ADD X1, X31, 0x20
	0x034851D4 MOV X0, X20
	0x034851D8 STUR V0, [X31 + 0x28]
	0x034851DC STP X9, X19, [X31 + 0x38]
	0x034851E0 STR W10, [X31 + 0x20]
	0x034851E4 BL 0x2196BB8
	0x034851E8 MOV X0, X20
	0x034851EC MOV X1, X31
	0x034851F0 BL 0x32C47F8
	0x034851F4 LDP X20, X19, [X31 + 0x60]
	0x034851F8 LDP X30, X21, [X31 + 0x50]
	0x034851FC ADD X31, X31, 0x70
	0x03485200 RET
	0x03485204 SUB X31, X31, 0xA0
	0x03485208 STP X30, X23, [X31 + 0x70]
	0x0348520C STP X22, X21, [X31 + 0x80]
	0x03485210 STP X20, X19, [X31 + 0x90]
	0x03485214 ADRP X23, 0xF58000
	0x03485218 ADRP X22, 0xC71000
	0x0348521C LDRB W8, [X23 + 0x8E5]
	0x03485220 LDR X22, [X22 + 0x280]
	0x03485224 MOV W20, W2
	0x03485228 MOV X21, X1
	0x0348522C MOV X19, X0
	0x03485230 TBNZ X8, 0x0, 0x3485254
	0x03485234 ADRP X0, 0xCAC000
	0x03485238 LDR X0, [X0 + 0xD0]
	0x0348523C BL 0x1C16CF4
	0x03485240 ADRP X0, 0xC71000
	0x03485244 LDR X0, [X0 + 0x280]
	0x03485248 BL 0x1C16CF4
	0x0348524C MOVZ W8, 0x1
	0x03485250 STRB W8, [X23 + 0x8E5]
	0x03485254 LDR X0, [X22]
	0x03485258 MOVI V0.2D, 0x0
	0x0348525C STR X31, [X31 + 0x60]
	0x03485260 STP V0, V0, [X31 + 0x40]
	0x03485264 STP V0, V0, [X31 + 0x20]
	0x03485268 ADRP X22, 0xCAC000
	0x0348526C LDR W8, [X0 + 0xE0]
	0x03485270 LDR X22, [X22 + 0xD0]
	0x03485274 CBNZ W8, 0x348527C
	0x03485278 BL 0x1C16DFC
	0x0348527C ADD X8, X31, 0x8
	0x03485280 MOV X0, X31
	0x03485284 BL 0x32C4770
	0x03485288 LDUR V0, [X31 + 0x8]
	0x0348528C LDR X9, [X31 + 0x18]
	0x03485290 LDR X2, [X22]
	0x03485294 ADD X8, X31, 0x20
	0x03485298 STR W20, [X31 + 0x50]
	0x0348529C ORR X20, X8, 0xF
	0x034852A0 MOVN W10, 0x0
	0x034852A4 ADD X1, X31, 0x20
	0x034852A8 MOV X0, X20
	0x034852AC STP X19, X21, [X31 + 0x40]
	0x034852B0 STUR V0, [X31 + 0x28]
	0x034852B4 STR X9, [X31 + 0x38]
	0x034852B8 STR W10, [X31 + 0x20]
	0x034852BC BL 0x2196CB8
	0x034852C0 MOV X0, X20
	0x034852C4 MOV X1, X31
	0x034852C8 BL 0x32C47F8
	0x034852CC LDP X20, X19, [X31 + 0x90]
	0x034852D0 LDP X22, X21, [X31 + 0x80]
	0x034852D4 LDP X30, X23, [X31 + 0x70]
	0x034852D8 ADD X31, X31, 0xA0
	0x034852DC RET
	0x034852E0 STR X30, [X31 - 0x40]!
	0x034852E4 STP X24, X23, [X31 + 0x10]
	0x034852E8 STP X22, X21, [X31 + 0x20]
	0x034852EC STP X20, X19, [X31 + 0x30]
	0x034852F0 ADRP X22, 0xF58000
	0x034852F4 LDRB W8, [X22 + 0x8E6]
	0x034852F8 MOV X20, X2
	0x034852FC MOV X21, X1
	0x03485300 MOV X19, X0
	0x03485304 STR X4, [X31 + 0x8]
	0x03485308 TBNZ X8, 0x0, 0x348532C
	0x0348530C ADRP X0, 0xC70000
	0x03485310 LDR X0, [X0 + 0xA50]
	0x03485314 BL 0x1C16CF4
	0x03485318 ADRP X0, 0xC76000
	0x0348531C LDR X0, [X0 + 0x7D8]
	0x03485320 BL 0x1C16CF4
	0x03485324 MOVZ W8, 0x1
	0x03485328 STRB W8, [X22 + 0x8E6]
	0x0348532C LDR X0, [X19 + 0x50]
	0x03485330 CBZ X0, 0x3485434
	0x03485334 LDR X8, [X0]
	0x03485338 LDP X9, X1, [X8 + 0x1B8]
	0x0348533C BLR X9
	0x03485340 CMP W0, 0x2
	0x03485344 B.NE 0x3485434
	0x03485348 ADRP X8, 0xC76000
	0x0348534C LDR X8, [X8 + 0x7D8]
	0x03485350 ADRP X24, 0xC70000
	0x03485354 LDR X0, [X8]
	0x03485358 LDR W8, [X0 + 0xE0]
	0x0348535C LDR X24, [X24 + 0xA50]
	0x03485360 CBNZ W8, 0x3485368
	0x03485364 BL 0x1C16DFC
	0x03485368 ADD X0, X31, 0x8
	0x0348536C MOV X1, X31
	0x03485370 BL 0x33DDC30
	0x03485374 LDR X22, [X19 + 0x40]
	0x03485378 LDR X0, [X24]
	0x0348537C BL 0x1C16F10
	0x03485380 MOV X23, X0
	0x03485384 MOV X1, X22
	0x03485388 MOV X2, X31
	0x0348538C BL 0x33DFAC0
	0x03485390 CBZ X23, 0x348546C
	0x03485394 LDR X22, [X31 + 0x8]
	0x03485398 MOV X0, X23
	0x0348539C MOV X1, X31
	0x034853A0 BL 0x33DFA08
	0x034853A4 MOV X23, X0
	0x034853A8 LDR X0, [X24]
	0x034853AC LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF59000
	009 Move W8, [X20+2260]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xCAD000
	016 Move X0, [X0+112]
	017 Call 0x1C17CF4
	018 Move X0, 0xCAC000
	019 Move X0, [X0+4040]
	020 Call 0x1C17CF4
	021 Move X0, 0xCAC000
	022 Move X0, [X0+3392]
	023 Call 0x1C17CF4
	024 Move X0, 0xCAD000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move X0, 0xC6F000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0xCAC000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move X0, 0xCAC000
	034 Move X0, [X0+3728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCAC000
	037 Move X0, [X0+3736]
	038 Call 0x1C17CF4
	039 Move X0, 0xCAC000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0xC73000
	043 Move X0, [X0+272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2260], W8
	047 Move [X31+8], X31
	048 Move X23, 0xCAC000
	049 Move W8, [X19]
	050 Move X23, [X23+3392]
	051 Compare W8, 0
	052 JumpIfEqual {129}
	053 Move X20, [X19+32]
	054 Compare X20, 0
	055 JumpIfEqual {168}
	056 Add X0, X20, 16
	057 Move X1, X31
	058 Call Interlocked.Increment, X0
	059 Move X8, 0xCAC000
	060 Move X8, [X8+3016]
	061 Move W22, W0
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X21, X0
	065 Move X1, X31
	066 Call Object..ctor, X0
	067 Move X8, 0xC6F000
	068 Move X8, [X8+1880]
	069 Move [X31+4], W22
	070 Move X0, [X8]
	071 Add X1, X31, 4
	072 Call 0x1C17E04
	073 Move X1, X0
	074 Move X8, 0xC73000
	075 Move X8, [X8+272]
	076 Move X0, [X8]
	077 Move X2, X31
	078 Call String.Format, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {169}
	081 Move X8, 0xCAD000
	082 Move X8, [X8+120]
	083 Move [X21+16], X0
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X22, X0
	087 Move X1, X31
	088 Call ChannelSendMessage..ctor, X0
	089 Compare X22, 0
	090 JumpIfEqual {170}
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Move [X22+1], V0
	093 Move [X21+72], X22
	094 Move X0, X20
	095 Move X1, X21
	096 Move X2, X31
	097 Call Socket.SendAsync, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {171}
	100 Move X8, 0xCAC000
	101 Move X8, [X8+3736]
	102 Move X1, [X8]
	103 Call Task`1<Object>.GetAwaiter, X0
	104 Move X8, 0xCAC000
	105 Move X8, [X8+3728]
	106 Move [X31+8], X0
	107 Move X1, [X8]
	108 Add X0, X31, 8
	109 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {136}
	114 Move [X19], W31
	115 Move X8, [X31+8]
	116 Move [X19+56], X8
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X8, 0xCAD000
	123 Move X8, [X8+112]
	124 Add X0, X19, 8
	125 Move X3, [X8]
	126 Add X1, X31, 8
	127 Move X2, X19
	128 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	129 Move X8, [X19+56]
	130 Move TEMP, 0
	131 Not TEMP
	132 Move W9, TEMP
	133 Move [X31+8], X8
	134 Move [X19+56], X31
	135 Move [X19], W9
	136 Move X8, 0xCAC000
	137 Move X8, [X8+3720]
	138 Add X0, X31, 8
	139 Move X1, [X8]
	140 Call TaskAwaiter`1<Object>.GetResult, X0
	141 Compare X0, 0
	142 JumpIfEqual {167}
	143 Move TEMP, 1
	144 Not TEMP
	145 Move W8, TEMP
	146 Move X20, [X0+56]
	147 Move [X19+8], W8
	148 Move X0, [X23]
	149 Move X21, 0xCAC000
	150 Move W8, [X0+224]
	151 Move X21, [X21+4040]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X2, [X21]
	156 Move X0, X19
	157 Move X1, X20
	158 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X30, [X31+16]
	164 Move X23, [X31+24]
	165 Add X31, X31, 64
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Move X20, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X20
	175 Call 0x3EB2AD0
	176 Move X20, X0
	177 Move X0, 0xC6F000
	178 Move X0, [X0+2000]
	179 Call 0x1C17D08
	180 Move X8, [X20]
	181 Move X1, [X8]
	182 Call 0x1C18270
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {207}
	187 Move X20, [X20]
	188 Call 0x3EB2AE0
	189 Move TEMP, 1
	190 Not TEMP
	191 Move W8, TEMP
	192 Move [X19+8], W8
	193 Move X0, 0xCAC000
	194 Move X0, [X0+3392]
	195 Call 0x1C17D08
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, 0xCAC000
	201 Move X0, [X0+4056]
	202 Call 0x1C17D08
	203 Move X2, X0
	204 Move X0, X19
	205 Move X1, X20
	206 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	207 Move W0, 8
	208 Call 0x3EB2AF0
	209 Move X8, [X20]
	210 Move [X0], X8
	211 Move X1, 0xA30000
	212 Add X1, X1, 3672
	213 Move X2, X31
	214 Call 0x3EB2B00
	215 Move X20, X0
	216 Call 0x3EB2AE0
	217 Move X0, X20
	218 Call 0x1D2D690
	219 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034853B0 CBNZ W8, 0x34853B8
	0x034853B4 BL 0x1C16DFC
	0x034853B8 MOV X0, X22
	0x034853BC MOV X1, X23
	0x034853C0 MOV X2, X31
	0x034853C4 BL 0x33E0A98
	0x034853C8 CBZ X0, 0x3485470
	0x034853CC LDR X22, [X19 + 0x50]
	0x034853D0 MOV X1, X31
	0x034853D4 BL 0x33DFA08
	0x034853D8 CBZ X22, 0x3485474
	0x034853DC LDR X8, [X22]
	0x034853E0 MOV X5, X0
	0x034853E4 LDR X9, [X8 + 0x218]
	0x034853E8 LDR X6, [X8 + 0x220]
	0x034853EC MOVZ W4, 0x1
	0x034853F0 MOV X0, X22
	0x034853F4 MOV X1, X21
	0x034853F8 MOV X2, X20
	0x034853FC MOV W3, W31
	0x03485400 BLR X9
	0x03485404 MOV X20, X0
	0x03485408 CBZ X0, 0x3485478
	0x0348540C MOV X0, X20
	0x03485410 MOV W1, W31
	0x03485414 MOV X2, X31
	0x03485418 BL 0x33ED3A0
	0x0348541C MOV X0, X20
	0x03485420 LDP X20, X19, [X31 + 0x30]
	0x03485424 LDP X22, X21, [X31 + 0x20]
	0x03485428 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF59000
	007 Move X21, 0xCAC000
	008 Move W8, [X22+2261]
	009 Move X21, [X21+3392]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCAC000
	017 Move X0, [X0+4064]
	018 Call 0x1C17CF4
	019 Move X0, 0xCAC000
	020 Move X0, [X0+3392]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2261], W8
	024 Move X0, [X21]
	025 Move X21, 0xCAC000
	026 Move W8, [X0+224]
	027 Move X21, [X21+4064]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

