Type: Nakama.WriteLeaderboardRecordRequestLeaderboardRecordWrite

Method: System.String get_Metadata()

Disassembly:
	0x03401C48 LDR X29, [X29 + 0x198]
	0x03401C4C LDR X26, [X26 + 0xAC8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Metadata(System.String value)

Disassembly:
	0x03401C50 LDR X24, [X24 + 0x360]
	0x03401C54 LDR X25, [X25 + 0xFB8]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: Nakama.ApiOperator get_Operator()

Disassembly:
	0x03401C58 LDR X19, [X19 + 0x6D8]
	0x03401C5C LDP X8, X1, [X0]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: Nakama.ApiOperator get__operator()

Disassembly:
	0x03401C60 MOV X0, X20
	0x03401C64 BLR X8

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set__operator(Nakama.ApiOperator value)

Disassembly:
	0x03401C68 MOV X20, X0
	0x03401C6C MOV X0, X27

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.String get_Score()

Disassembly:
	0x03401C70 CBZ X20, 0x3401E64
	0x03401C74 LDR X8, [X20]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Score(System.String value)

Disassembly:
	0x03401C78 LDR X1, [X28]
	0x03401C7C MOV X21, X0

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Subscore()

Disassembly:
	0x03401C80 LDRH W9, [X8 + 0x12E]
	0x03401C84 CBZ X9, 0x3401CA8

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Subscore(System.String value)

Disassembly:
	0x03401C88 LDR X10, [X8 + 0xB0]
	0x03401C8C ADD X10, X10, 0x8

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03401C90 LDUR X11, [X10 - 0x8]
	0x03401C94 CMP X11, X1
	0x03401C98 B.EQ 0x3401CB8
	0x03401C9C SUBS X9, X9, 0x1
	0x03401CA0 ADD X10, X10, 0x10
	0x03401CA4 B.NE 0x3401C90
	0x03401CA8 MOV X0, X20
	0x03401CAC MOV W2, W31
	0x03401CB0 BL 0x1C5C788
	0x03401CB4 B 0x3401CC4
	0x03401CB8 LDRSW X9, [X10]
	0x03401CBC ADD X8, X8, X9, 0x4, LSL
	0x03401CC0 ADD X0, X8, 0x138
	0x03401CC4 LDP X8, X1, [X0]
	0x03401CC8 MOV X0, X20
	0x03401CCC BLR X8
	0x03401CD0 TBZ X0, 0x0, 0x3401DA8
	0x03401CD4 LDR X8, [X20]
	0x03401CD8 LDR X1, [X29]
	0x03401CDC LDRH W9, [X8 + 0x12E]
	0x03401CE0 CBZ X9, 0x3401D04
	0x03401CE4 LDR X10, [X8 + 0xB0]
	0x03401CE8 ADD X10, X10, 0x8
	0x03401CEC LDUR X11, [X10 - 0x8]
	0x03401CF0 CMP X11, X1
	0x03401CF4 B.EQ 0x3401D14
	0x03401CF8 SUBS X9, X9, 0x1
	0x03401CFC ADD X10, X10, 0x10
	0x03401D00 B.NE 0x3401CEC
	0x03401D04 MOV X0, X20
	0x03401D08 MOV W2, W31
	0x03401D0C BL 0x1C5C788
	0x03401D10 B 0x3401D20
	0x03401D14 LDRSW X9, [X10]
	0x03401D18 ADD X8, X8, X9, 0x4, LSL
	0x03401D1C ADD X0, X8, 0x138
	0x03401D20 LDP X8, X1, [X0]
	0x03401D24 MOV X0, X20
	0x03401D28 BLR X8
	0x03401D2C MOV X23, X0
	0x03401D30 LDR X0, [X26]
	0x03401D34 MOV X22, X1
	0x03401D38 MOVZ W1, 0x5
	0x03401D3C BL 0x1C16D6C
	0x03401D40 CBZ X0, 0x3401E6C
	0x03401D44 LDR W8, [X0 + 0x18]
	0x03401D48 CBZ W8, 0x3401E74
	0x03401D4C LDR X9, [X24]
	0x03401D50 CMP W8, 0x1
	0x03401D54 STR X9, [X0 + 0x20]
	0x03401D58 B.EQ 0x3401E68
	0x03401D5C CMP W8, 0x2
	0x03401D60 STR X23, [X0 + 0x28]
	0x03401D64 B.LS 0x3401E78
	0x03401D68 LDR X9, [X25]
	0x03401D6C CMP W8, 0x3
	0x03401D70 STR X9, [X0 + 0x30]
	0x03401D74 B.EQ 0x3401E7C
	0x03401D78 CMP W8, 0x4
	0x03401D7C STR X22, [X0 + 0x38]
	0x03401D80 B.LS 0x3401E70
	0x03401D84 LDR X8, [X19]
	0x03401D88 STR X8, [X0 + 0x40]
	0x03401D8C MOV X1, X31
	0x03401D90 BL 0x32278CC
	0x03401D94 MOV X1, X0
	0x03401D98 MOV X0, X21
	0x03401D9C MOV X2, X31
	0x03401DA0 BL 0x321B938
	0x03401DA4 B 0x3401C70
	0x03401DA8 MOV X22, X31
	0x03401DAC CBZ X20, 0x3401E10
	0x03401DB0 LDR X8, [X20]
	0x03401DB4 ADRP X10, 0xCF2000
	0x03401DB8 LDRH W9, [X8 + 0x12E]
	0x03401DBC LDR X10, [X10 + 0xE00]
	0x03401DC0 LDR X1, [X10]
	0x03401DC4 CBZ X9, 0x3401DE8
	0x03401DC8 LDR X10, [X8 + 0xB0]
	0x03401DCC ADD X10, X10, 0x8
	0x03401DD0 LDUR X11, [X10 - 0x8]
	0x03401DD4 CMP X11, X1
	0x03401DD8 B.EQ 0x3401DF8
	0x03401DDC SUBS X9, X9, 0x1
	0x03401DE0 ADD X10, X10, 0x10
	0x03401DE4 B.NE 0x3401DD0
	0x03401DE8 MOV X0, X20
	0x03401DEC MOV W2, W31
	0x03401DF0 BL 0x1C5C788
	0x03401DF4 B 0x3401E04
	0x03401DF8 LDRSW X9, [X10]
	0x03401DFC ADD X8, X8, X9, 0x4, LSL
	0x03401E00 ADD X0, X8, 0x138
	0x03401E04 LDP X8, X1, [X0]
	0x03401E08 MOV X0, X20
	0x03401E0C BLR X8
	0x03401E10 CBNZ X22, 0x3401E84
	0x03401E14 ADRP X8, 0xD2C000
	0x03401E18 LDR X8, [X8 + 0xD80]
	0x03401E1C MOV X1, X21
	0x03401E20 MOV X3, X31
	0x03401E24 LDR X0, [X8]
	0x03401E28 ADRP X8, 0xCF2000
	0x03401E2C LDR X8, [X8 + 0x848]
	0x03401E30 LDR X2, [X8]
	0x03401E34 BL 0x32274B8
	0x03401E38 MOV X1, X0
	0x03401E3C LDR X0, [X31 + 0x8]
	0x03401E40 LDP X20, X19, [X31 + 0x60]
	0x03401E44 LDP X22, X21, [X31 + 0x50]
	0x03401E48 LDP X24, X23, [X31 + 0x40]
	0x03401E4C LDP X26, X25, [X31 + 0x30]
	0x03401E50 LDP X28, X27, [X31 + 0x20]
	0x03401E54 LDP X29, X30, [X31 + 0x10]
	0x03401E58 MOV X2, X31
	0x03401E5C ADD X31, X31, 0x70
	0x03401E60 B 0x321B938
	0x03401E64 BL 0x1C16F20
	0x03401E68 BL 0x1C16F28
	0x03401E6C BL 0x1C16F20
	0x03401E70 BL 0x1C16F28
	0x03401E74 BL 0x1C16F28
	0x03401E78 BL 0x1C16F28
	0x03401E7C BL 0x1C16F28
	0x03401E80 BL 0x1C16F20
	0x03401E84 MOV X0, X22
	0x03401E88 BL 0x1C16F18
	0x03401E8C B 0x3401EB8
	0x03401E90 B 0x3401EB8
	0x03401E94 B 0x3401EB8
	0x03401E98 B 0x3401EB8
	0x03401E9C B 0x3401EB8
	0x03401EA0 B 0x3401EB8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xFDD000
	009 Move X24, 0xCF3000
	010 Move X21, 0xD2D000
	011 Move X22, 0xCF3000
	012 Move X20, 0xCF3000
	013 Move W8, [X23+1291]
	014 Move X24, [X24+2440]
	015 Move X21, [X21+3328]
	016 Move X22, [X22+2104]
	017 Move X20, [X20+2512]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0xD2D000
	024 Move X0, [X0+3336]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF3000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move X0, 0xD2D000
	030 Move X0, [X0+3344]
	031 Call 0x1C17CF4
	032 Move X0, 0xD2D000
	033 Move X0, [X0+3352]
	034 Call 0x1C17CF4
	035 Move X0, 0xCF3000
	036 Move X0, [X0+2104]
	037 Call 0x1C17CF4
	038 Move X0, 0xD2D000
	039 Move X0, [X0+3328]
	040 Call 0x1C17CF4
	041 Move X0, 0xD2D000
	042 Move X0, [X0+3360]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF3000
	045 Move X0, [X0+2440]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X23+1291], W8
	049 Move X0, [X24]
	050 Move X2, [X19+16]
	051 Move X1, [X21]
	052 Move X3, [X22]
	053 Move X4, X31
	054 Call String.Concat, X0, X1, X2, X3
	055 Move X8, [X20]
	056 Move X21, X0
	057 Move W1, 4
	058 Move X0, X8
	059 Call 0x1C17D6C
	060 Compare X0, 0
	061 JumpIfEqual {149}
	062 Move X20, X0
	063 Compare X21, 0
	064 JumpIfEqual {71}
	065 Move X8, [X20]
	066 Move X0, X21
	067 Move X1, [X8+64]
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfEqual {146}
	071 Move W8, [X20+24]
	072 Compare W8, 0
	073 JumpIfEqual {145}
	074 Move X23, 0xD2D000
	075 Move X23, [X23+3360]
	076 Move [X20+32], X21
	077 Move X0, [X23]
	078 Compare X0, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {146}
	085 Move W8, [X20+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X23]
	088 Move X9, 0xD2D000
	089 Move X9, [X9+3336]
	090 Add X1, X31, 12
	091 Move [X20+40], X8
	092 Move W8, [X19+24]
	093 Move X0, [X9]
	094 Move [X31+12], W8
	095 Call 0x1C17E04
	096 Move X21, X0
	097 Compare X0, 0
	098 JumpIfEqual {105}
	099 Move X8, [X20]
	100 Move X0, X21
	101 Move X1, [X8+64]
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {146}
	105 Move W8, [X20+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X20+48], X21
	108 Move X0, [X22]
	109 Compare X0, 0
	110 JumpIfEqual {117}
	111 Move X8, [X20]
	112 Move X1, [X8+64]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {146}
	116 Move W8, [X20+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, [X22]
	119 Move X21, 0xD2D000
	120 Move X23, 0xD2D000
	121 Move X21, [X21+3344]
	122 Move X23, [X23+3352]
	123 Move X0, X20
	124 Move X1, X31
	125 Move [X20+56], X8
	126 Call String.Concat, X0
	127 Move X2, [X19+32]
	128 Move X1, [X21]
	129 Move X3, [X22]
	130 Move X4, X31
	131 Call String.Concat, X0, X1, X2, X3
	132 Move X2, [X19+40]
	133 Move X1, [X23]
	134 Move X3, [X22]
	135 Move X4, X31
	136 Call String.Concat, X0, X1, X2, X3
	137 Move X20, [X31+48]
	138 Move X19, [X31+56]
	139 Move X22, [X31+32]
	140 Move X21, [X31+40]
	141 Move X24, [X31+16]
	142 Move X23, [X31+24]
	143 Move X30, [X31+64]
	144 Return X0
	145 Call 0x1C17F28
	146 Call 0x1C17F44
	147 Move X1, X31
	148 Call 0x1C17DEC
	149 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03401EA4 B 0x3401EB8
	0x03401EA8 MOV X21, X27

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

