Type: Nakama.Client/<ListMatchesAsync>d__88

Method: System.Void MoveNext()

Disassembly:
	0x03460FD4 STR X8, [X21 + 0x38]
	0x03460FD8 CBZ X20, 0x3461364
	0x03460FDC LDRB W8, [X20 + 0x10]
	0x03460FE0 CBZ W8, 0x34611C8
	0x03460FE4 LDR X8, [X19 + 0x58]
	0x03460FE8 CBZ X8, 0x3461368
	0x03460FEC LDR X21, [X8 + 0x18]
	0x03460FF0 CBZ X21, 0x346136C
	0x03460FF4 ADRP X23, 0xC94000
	0x03460FF8 LDR X8, [X21]
	0x03460FFC LDR X23, [X23 + 0x818]
	0x03461000 LDRH W9, [X8 + 0x12E]
	0x03461004 LDR X1, [X23]
	0x03461008 CBZ X9, 0x346102C
	0x0346100C LDR X10, [X8 + 0xB0]
	0x03461010 ADD X10, X10, 0x8
	0x03461014 LDUR X11, [X10 - 0x8]
	0x03461018 CMP X11, X1
	0x0346101C B.EQ 0x346103C
	0x03461020 SUBS X9, X9, 0x1
	0x03461024 ADD X10, X10, 0x10
	0x03461028 B.NE 0x3461014
	0x0346102C MOVZ W2, 0x7
	0x03461030 MOV X0, X21
	0x03461034 BL 0x1C5C788
	0x03461038 B 0x346104C
	0x0346103C LDR W9, [X10]
	0x03461040 ADD W9, W9, 0x7
	0x03461044 ADD X8, X8, W9, 0x4, SXTW
	0x03461048 ADD X0, X8, 0x138
	0x0346104C LDP X8, X1, [X0]
	0x03461050 MOV X0, X21
	0x03461054 BLR X8
	0x03461058 MOV X1, X31
	0x0346105C BL 0x32277A8
	0x03461060 TBNZ X0, 0x0, 0x34611C4
	0x03461064 LDR X8, [X19 + 0x58]
	0x03461068 CBZ X8, 0x3461370
	0x0346106C ADRP X9, 0xC93000
	0x03461070 LDR X9, [X9 + 0x9F0]
	0x03461074 LDR X21, [X8 + 0x18]
	0x03461078 LDR X0, [X9]
	0x0346107C LDR W9, [X0 + 0xE0]
	0x03461080 CBNZ W9, 0x3461088
	0x03461084 BL 0x1C16DFC
	0x03461088 MOV X0, X31
	0x0346108C BL 0x33616A4
	0x03461090 ADRP X22, 0xC94000
	0x03461094 LDR X22, [X22 + 0xA10]
	0x03461098 MOV X8, X0
	0x0346109C STR X8, [X31 + 0x28]
	0x034610A0 LDR X0, [X22]
	0x034610A4 LDR W8, [X0 + 0xE0]
	0x034610A8 CBNZ W8, 0x34610B4
	0x034610AC BL 0x1C16DFC
	0x034610B0 LDR X0, [X22]
	0x034610B4 LDR X8, [X0 + 0xB8]
	0x034610B8 LDR X1, [X8]
	0x034610BC ADD X0, X31, 0x28
	0x034610C0 MOV X2, X31
	0x034610C4 BL 0x335FC68
	0x034610C8 CBZ X21, 0x3461374
	0x034610CC LDR X8, [X21]
	0x034610D0 LDR X1, [X23]
	0x034610D4 MOV X22, X0
	0x034610D8 LDRH W9, [X8 + 0x12E]
	0x034610DC CBZ X9, 0x3461100
	0x034610E0 LDR X10, [X8 + 0xB0]
	0x034610E4 ADD X10, X10, 0x8
	0x034610E8 LDUR X11, [X10 - 0x8]
	0x034610EC CMP X11, X1
	0x034610F0 B.EQ 0x3461110
	0x034610F4 SUBS X9, X9, 0x1
	0x034610F8 ADD X10, X10, 0x10
	0x034610FC B.NE 0x34610E8
	0x03461100 MOVZ W2, 0xB
	0x03461104 MOV X0, X21
	0x03461108 BL 0x1C5C788
	0x0346110C B 0x3461120
	0x03461110 LDR W9, [X10]
	0x03461114 ADD W9, W9, 0xB
	0x03461118 ADD X8, X8, W9, 0x4, SXTW
	0x0346111C ADD X0, X8, 0x138
	0x03461120 LDP X8, X2, [X0]
	0x03461124 MOV X0, X21
	0x03461128 MOV X1, X22
	0x0346112C BLR X8
	0x03461130 TBZ X0, 0x0, 0x34611C4
	0x03461134 LDR X8, [X19 + 0x58]
	0x03461138 CBZ X8, 0x3461378
	0x0346113C LDR X1, [X8 + 0x18]
	0x03461140 LDR X3, [X19 + 0x50]
	0x03461144 LDR X4, [X8 + 0x38]
	0x03461148 MOV X0, X20
	0x0346114C MOV X2, X31
	0x03461150 MOV X5, X31
	0x03461154 BL 0x34440A8
	0x03461158 CBZ X0, 0x346137C
	0x0346115C ADRP X8, 0xC93000
	0x03461160 LDR X8, [X8 + 0x840]
	0x03461164 LDR X1, [X8]
	0x03461168 BL 0x269F5D0
	0x0346116C ADRP X8, 0xC93000
	0x03461170 LDR X8, [X8 + 0x838]
	0x03461174 STR X0, [X31 + 0x20]
	0x03461178 LDR X1, [X8]
	0x0346117C ADD X0, X31, 0x20
	0x03461180 BL 0x2677430
	0x03461184 TBNZ X0, 0x0, 0x3460F6C
	0x03461188 STR W31, [X19]
	0x0346118C LDR X8, [X31 + 0x20]
	0x03461190 STR X8, [X19 + 0x60]
	0x03461194 LDR X0, [X25]
	0x03461198 LDR W8, [X0 + 0xE0]
	0x0346119C CBNZ W8, 0x34611A4
	0x034611A0 BL 0x1C16DFC
	0x034611A4 ADRP X8, 0xCCF000
	0x034611A8 LDR X8, [X8 + 0x208]
	0x034611AC ADD X0, X19, 0x8
	0x034611B0 LDR X3, [X8]
	0x034611B4 ADD X1, X31, 0x20
	0x034611B8 MOV X2, X19
	0x034611BC BL 0x1FBC2D8
	0x034611C0 B 0x3461338
	0x034611C4 CBZ X20, 0x346135C
	0x034611C8 ADRP X8, 0xCCE000
	0x034611CC LDR X8, [X8 + 0x7C0]
	0x034611D0 LDR X21, [X20 + 0x58]
	0x034611D4 LDR X23, [X19 + 0x58]
	0x034611D8 LDR X0, [X8]
	0x034611DC BL 0x1C16F10
	0x034611E0 ADRP X8, 0xCCF000
	0x034611E4 LDR X8, [X8 + 0x210]
	0x034611E8 MOV X22, X0
	0x034611EC LDR X2, [X8]
	0x034611F0 MOV X1, X23
	0x034611F4 MOV X3, X31
	0x034611F8 BL 0x2D27AA8
	0x034611FC LDR X8, [X19 + 0x58]
	0x03461200 CBZ X8, 0x3461350
	0x03461204 ADRP X9, 0xCCE000
	0x03461208 LDR X23, [X19 + 0x50]
	0x0346120C LDR X9, [X9 + 0x7C8]
	0x03461210 CBNZ X23, 0x3461218
	0x03461214 LDR X23, [X20 + 0x18]
	0x03461218 LDR X20, [X8 + 0x18]
	0x0346121C LDR X1, [X8 + 0x38]
	0x03461220 LDR X2, [X9]
	0x03461224 STP X31, X31, [X31 + 0x8]
	0x03461228 ADD X0, X31, 0x8
	0x0346122C BL 0x242E368
	0x03461230 ADRP X8, 0xCCE000
	0x03461234 LDR X8, [X8 + 0x7D0]
	0x03461238 LDR X0, [X8]
	0x0346123C BL 0x1C16F10
	0x03461240 LDP X3, X4, [X31 + 0x8]
	0x03461244 MOV X24, X0
	0x03461248 MOV X1, X20
	0x0346124C MOV X2, X23
	0x03461250 MOV X5, X31
	0x03461254 BL 0x3465404
	0x03461258 CBZ X21, 0x3461354
	0x0346125C ADRP X8, 0xCCE000
	0x03461260 LDR X8, [X8 + 0x7D8]
	0x03461264 LDR X3, [X8]
	0x03461268 MOV X0, X21
	0x0346126C MOV X1, X22
	0x03461270 MOV X2, X24
	0x03461274 BL 0x2243230
	0x03461278 CBZ X0, 0x3461358
	0x0346127C ADRP X8, 0xC94000
	0x03461280 LDR X8, [X8 + 0xDC0]
	0x03461284 LDR X1, [X8]
	0x03461288 BL 0x269F5D0
	0x0346128C ADRP X8, 0xC94000
	0x03461290 LDR X8, [X8 + 0xDB8]
	0x03461294 STR X0, [X31 + 0x18]
	0x03461298 LDR X1, [X8]
	0x0346129C ADD X0, X31, 0x18
	0x034612A0 BL 0x2677430
	0x034612A4 TBZ X0, 0x0, 0x34612FC
	0x034612A8 ADRP X8, 0xC94000
	0x034612AC LDR X8, [X8 + 0xDB0]
	0x034612B0 ADD X0, X31, 0x18
	0x034612B4 LDR X1, [X8]
	0x034612B8 BL 0x2677474
	0x034612BC MOVN W8, 0x1
	0x034612C0 STR W8, [X19]
	0x034612C4 STR X31, [X19 + 0x58]
	0x034612C8 MOV X20, X0
	0x034612CC LDR X0, [X25]
	0x034612D0 ADRP X21, 0xCCE000
	0x034612D4 ADD X19, X19, 0x8
	0x034612D8 LDR W8, [X0 + 0xE0]
	0x034612DC LDR X21, [X21 + 0xF0]
	0x034612E0 CBNZ W8, 0x34612E8
	0x034612E4 BL 0x1C16DFC
	0x034612E8 LDR X2, [X21]
	0x034612EC MOV X0, X19
	0x034612F0 MOV X1, X20
	0x034612F4 BL 0x26322B0
	0x034612F8 B 0x3461338
	0x034612FC MOVZ W8, 0x1
	0x03461300 STR W8, [X19]
	0x03461304 LDR X8, [X31 + 0x18]
	0x03461308 STR X8, [X19 + 0x68]
	0x0346130C LDR X0, [X25]
	0x03461310 LDR W8, [X0 + 0xE0]
	0x03461314 CBNZ W8, 0x346131C
	0x03461318 BL 0x1C16DFC
	0x0346131C ADRP X8, 0xCCF000
	0x03461320 LDR X8, [X8 + 0x200]
	0x03461324 ADD X0, X19, 0x8
	0x03461328 LDR X3, [X8]
	0x0346132C ADD X1, X31, 0x18
	0x03461330 MOV X2, X19
	0x03461334 BL 0x1FBC2D8
	0x03461338 LDP X20, X19, [X31 + 0x60]
	0x0346133C LDP X22, X21, [X31 + 0x50]
	0x03461340 LDP X24, X23, [X31 + 0x40]
	0x03461344 LDP X30, X25, [X31 + 0x30]
	0x03461348 ADD X31, X31, 0x70
	0x0346134C RET
	0x03461350 BL 0x1C16F20
	0x03461354 BL 0x1C16F20
	0x03461358 BL 0x1C16F20
	0x0346135C BL 0x1C16F20
	0x03461360 BL 0x1C16F20
	0x03461364 BL 0x1C16F20
	0x03461368 BL 0x1C16F20
	0x0346136C BL 0x1C16F20
	0x03461370 BL 0x1C16F20
	0x03461374 BL 0x1C16F20
	0x03461378 BL 0x1C16F20
	0x0346137C BL 0x1C16F20
	0x03461380 B 0x34613F4
	0x03461384 B 0x34613F4
	0x03461388 B 0x34613F4
	0x0346138C B 0x34613F4
	0x03461390 B 0x34613F4
	0x03461394 B 0x34613F4
	0x03461398 B 0x34613F4
	0x0346139C B 0x34613F4
	0x034613A0 B 0x34613F4
	0x034613A4 B 0x34613F4
	0x034613A8 B 0x34613F4
	0x034613AC B 0x34613F4
	0x034613B0 B 0x34613F4
	0x034613B4 B 0x34613F4
	0x034613B8 B 0x34613F4
	0x034613BC B 0x34613F4
	0x034613C0 B 0x34613F4
	0x034613C4 B 0x34613F4
	0x034613C8 B 0x34613F4
	0x034613CC B 0x34613F4
	0x034613D0 B 0x34613F4
	0x034613D4 B 0x34613F4
	0x034613D8 B 0x34613F4
	0x034613DC B 0x34613F4
	0x034613E0 B 0x34613F4
	0x034613E4 B 0x34613F4
	0x034613E8 B 0x34613F4
	0x034613EC B 0x34613F4
	0x034613F0 B 0x34613F4
	0x034613F4 MOV X20, X0
	0x034613F8 CMP W1, 0x1
	0x034613FC B.NE 0x346149C
	0x03461400 MOV X0, X20
	0x03461404 BL 0x3EB1AD0
	0x03461408 MOV X20, X0
	0x0346140C ADRP X0, 0xC92000
	0x03461410 LDR X0, [X0 + 0x7D0]
	0x03461414 BL 0x1C16D08
	0x03461418 LDR X8, [X20]
	0x0346141C LDR X1, [X8]
	0x03461420 BL 0x1C17270
	0x03461424 TBZ X0, 0x0, 0x3461474
	0x03461428 LDR X20, [X20]
	0x0346142C BL 0x3EB1AE0
	0x03461430 MOVN W8, 0x1
	0x03461434 STR X31, [X19 + 0x58]
	0x03461438 STR W8, [X19], #0x8
	0x0346143C ADRP X0, 0xCCD000
	0x03461440 LDR X0, [X0 + 0x6E0]
	0x03461444 BL 0x1C16D08
	0x03461448 LDR W8, [X0 + 0xE0]
	0x0346144C CBNZ W8, 0x3461454
	0x03461450 BL 0x1C16DFC
	0x03461454 ADRP X0, 0xCCE000
	0x03461458 LDR X0, [X0 + 0x130]
	0x0346145C BL 0x1C16D08
	0x03461460 MOV X2, X0
	0x03461464 MOV X0, X19
	0x03461468 MOV X1, X20
	0x0346146C BL 0x26324C8
	0x03461470 B 0x3461338
	0x03461474 MOVZ W0, 0x8
	0x03461478 BL 0x3EB1AF0
	0x0346147C LDR X8, [X20]
	0x03461480 STR X8, [X0]
	0x03461484 ADRP X1, 0xA53000
	0x03461488 ADD X1, X1, 0xE58
	0x0346148C MOV X2, X31
	0x03461490 BL 0x3EB1B00
	0x03461494 MOV X20, X0
	0x03461498 BL 0x3EB1AE0
	0x0346149C MOV X0, X20
	0x034614A0 BL 0x1D2C690
	0x034614A4 BL 0x1990590
	0x034614A8 STR X30, [X31 - 0x30]!
	0x034614AC STP X22, X21, [X31 + 0x10]
	0x034614B0 STP X20, X19, [X31 + 0x20]
	0x034614B4 ADRP X22, 0xF7C000
	0x034614B8 ADRP X21, 0xCCD000
	0x034614BC LDRB W8, [X22 + 0x7B2]
	0x034614C0 LDR X21, [X21 + 0x6E0]
	0x034614C4 MOV X19, X1
	0x034614C8 MOV X20, X0
	0x034614CC TBNZ X8, 0x0, 0x34614F0
	0x034614D0 ADRP X0, 0xCCE000
	0x034614D4 LDR X0, [X0 + 0x138]
	0x034614D8 BL 0x1C16CF4
	0x034614DC ADRP X0, 0xCCD000
	0x034614E0 LDR X0, [X0 + 0x6E0]
	0x034614E4 BL 0x1C16CF4
	0x034614E8 MOVZ W8, 0x1
	0x034614EC STRB W8, [X22 + 0x7B2]
	0x034614F0 LDR X0, [X21]
	0x034614F4 ADRP X21, 0xCCE000
	0x034614F8 LDR W8, [X0 + 0xE0]
	0x034614FC LDR X21, [X21 + 0x138]
	0x03461500 CBNZ W8, 0x3461508
	0x03461504 BL 0x1C16DFC
	0x03461508 LDR X2, [X21]
	0x0346150C ADD X0, X20, 0x8
	0x03461510 MOV X1, X19
	0x03461514 LDP X20, X19, [X31 + 0x20]
	0x03461518 LDP X22, X21, [X31 + 0x10]
	0x0346151C LDR X30, [X31], #0x30
	0x03461520 B 0x2632228
	0x03461524 SUB X31, X31, 0x70
	0x03461528 STP X30, X25, [X31 + 0x30]
	0x0346152C STP X24, X23, [X31 + 0x40]
	0x03461530 STP X22, X21, [X31 + 0x50]
	0x03461534 STP X20, X19, [X31 + 0x60]
	0x03461538 ADRP X20, 0xF7C000
	0x0346153C LDRB W8, [X20 + 0x7B3]
	0x03461540 MOV X19, X0
	0x03461544 TBNZ X8, 0x0, 0x3461634
	0x03461548 ADRP X0, 0xCCF000
	0x0346154C LDR X0, [X0 + 0x220]
	0x03461550 BL 0x1C16CF4
	0x03461554 ADRP X0, 0xCCF000
	0x03461558 LDR X0, [X0 + 0x228]
	0x0346155C BL 0x1C16CF4
	0x03461560 ADRP X0, 0xCCE000
	0x03461564 LDR X0, [X0 + 0x168]
	0x03461568 BL 0x1C16CF4
	0x0346156C ADRP X0, 0xCCD000
	0x03461570 LDR X0, [X0 + 0x568]
	0x03461574 BL 0x1C16CF4
	0x03461578 ADRP X0, 0xC94000
	0x0346157C LDR X0, [X0 + 0xA10]
	0x03461580 BL 0x1C16CF4
	0x03461584 ADRP X0, 0xC93000
	0x03461588 LDR X0, [X0 + 0x9F0]
	0x0346158C BL 0x1C16CF4
	0x03461590 ADRP X0, 0xCCF000
	0x03461594 LDR X0, [X0 + 0x230]
	0x03461598 BL 0x1C16CF4
	0x0346159C ADRP X0, 0xC93000
	0x034615A0 LDR X0, [X0 + 0x818]
	0x034615A4 BL 0x1C16CF4
	0x034615A8 ADRP X0, 0xCCE000
	0x034615AC LDR X0, [X0 + 0x7C8]
	0x034615B0 BL 0x1C16CF4
	0x034615B4 ADRP X0, 0xCCE000
	0x034615B8 LDR X0, [X0 + 0x7D0]
	0x034615BC BL 0x1C16CF4
	0x034615C0 ADRP X0, 0xCCF000
	0x034615C4 LDR X0, [X0 + 0x238]
	0x034615C8 BL 0x1C16CF4
	0x034615CC ADRP X0, 0xCCF000
	0x034615D0 LDR X0, [X0 + 0x240]
	0x034615D4 BL 0x1C16CF4
	0x034615D8 ADRP X0, 0xC93000
	0x034615DC LDR X0, [X0 + 0x830]
	0x034615E0 BL 0x1C16CF4
	0x034615E4 ADRP X0, 0xC93000
	0x034615E8 LDR X0, [X0 + 0x838]
	0x034615EC BL 0x1C16CF4
	0x034615F0 ADRP X0, 0xCCF000
	0x034615F4 LDR X0, [X0 + 0x248]
	0x034615F8 BL 0x1C16CF4
	0x034615FC ADRP X0, 0xC93000
	0x03461600 LDR X0, [X0 + 0x840]
	0x03461604 BL 0x1C16CF4
	0x03461608 ADRP X0, 0xCCF000
	0x0346160C LDR X0, [X0 + 0x250]
	0x03461610 BL 0x1C16CF4
	0x03461614 ADRP X0, 0xCCF000
	0x03461618 LDR X0, [X0 + 0x258]
	0x0346161C BL 0x1C16CF4
	0x03461620 ADRP X0, 0xCCF000
	0x03461624 LDR X0, [X0 + 0x260]
	0x03461628 BL 0x1C16CF4
	0x0346162C MOVZ W8, 0x1
	0x03461630 STRB W8, [X20 + 0x7B3]
	0x03461634 STP X31, X31, [X31 + 0x20]
	0x03461638 STR X31, [X31 + 0x18]
	0x0346163C ADRP X25, 0xCCD000
	0x03461640 LDR W8, [X19]
	0x03461644 LDR X20, [X19 + 0x20]
	0x03461648 LDR X25, [X25 + 0x568]
	0x0346164C CBZ W8, 0x3461670
	0x03461650 CMP W8, 0x1
	0x03461654 B.NE 0x346169C
	0x03461658 LDR X8, [X19 + 0x60]
	0x0346165C MOVN W9, 0x0
	0x03461660 STR X8, [X31 + 0x18]
	0x03461664 STR X31, [X19 + 0x60]
	0x03461668 STR W9, [X19]
	0x0346166C B 0x34619B8
	0x03461670 LDR X8, [X19 + 0x58]
	0x03461674 MOVN W9, 0x0
	0x03461678 STR X8, [X31 + 0x20]
	0x0346167C STR X31, [X19 + 0x58]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF7E000
	011 Move W8, [X20+1965]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCD1000
	018 Move X0, [X0+368]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD0000
	021 Move X0, [X0+376]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCF000
	024 Move X0, [X0+104]
	025 Call 0x1C17CF4
	026 Move X0, 0xCCE000
	027 Move X0, [X0+1568]
	028 Call 0x1C17CF4
	029 Move X0, 0xC95000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC94000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD0000
	036 Move X0, [X0+384]
	037 Call 0x1C17CF4
	038 Move X0, 0xC94000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCF000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCF000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCD0000
	048 Move X0, [X0+392]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD0000
	051 Move X0, [X0+400]
	052 Call 0x1C17CF4
	053 Move X0, 0xC94000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD0000
	057 Move X0, [X0+408]
	058 Call 0x1C17CF4
	059 Move X0, 0xC94000
	060 Move X0, [X0+2104]
	061 Call 0x1C17CF4
	062 Move X0, 0xC94000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCD0000
	066 Move X0, [X0+416]
	067 Call 0x1C17CF4
	068 Move X0, 0xCD0000
	069 Move X0, [X0+424]
	070 Call 0x1C17CF4
	071 Move X0, 0xCD0000
	072 Move X0, [X0+432]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1965], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCCE000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1568]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+112]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+112], X31
	092 Move [X19], W9
	093 Move X8, [X19+104]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+104], X31
	099 Move [X19], W9
	100 Move X8, 0xC94000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCD0000
	106 Move X8, [X8+432]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass88_0..ctor, X0
	112 Move [X19+96], X21
	113 Compare X21, 0
	114 JumpIfEqual {391}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move W8, [X19+48]
	120 Move [X21+32], W8
	121 Move W8, [X19+52]
	122 Move [X21+36], W8
	123 Move X8, [X19+56]
	124 Move [X21+40], X8
	125 Move V0, [X19+64]
	126 Move [X21+48], D0
	127 Move X8, [X19+72]
	128 Move [X21+56], X8
	129 Move X8, [X19+80]
	130 Move [X21+64], X8
	131 Compare X20, 0
	132 JumpIfEqual {392}
	133 Move W8, [X20+16]
	134 Compare W8, 0
	135 JumpIfEqual {273}
	136 Move X8, [X19+96]
	137 Compare X8, 0
	138 JumpIfEqual {393}
	139 Move X21, [X8+24]
	140 Compare X21, 0
	141 JumpIfEqual {394}
	142 Move X23, 0xC94000
	143 Move X8, [X21]
	144 Move X23, [X23+2072]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Move X1, [X23]
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move W2, 7
	156 Move X0, X21
	157 Call 0x1C5D788
	158 Move W9, [X10]
	159 Add W9, W9, 7
	160 Add X8, X8, W9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X0, X21
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move X1, X31
	167 Call String.IsNullOrEmpty, X0
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {271}
	172 Move X8, [X19+96]
	173 Compare X8, 0
	174 JumpIfEqual {395}
	175 Move X9, 0xC94000
	176 Move X9, [X9+2544]
	177 Move X21, [X8+24]
	178 Move X0, [X9]
	179 Move W9, [X0+224]
	180 Compare W9, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X0, X31
	184 Call DateTime.get_UtcNow
	185 Move X22, 0xC95000
	186 Move X22, [X22+2576]
	187 Move X8, X0
	188 Move [X31+40], X8
	189 Move X0, [X22]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {195}
	193 Call 0x1C17DFC
	194 Move X0, [X22]
	195 Move X8, [X0+184]
	196 Move X1, [X8]
	197 Add X0, X31, 40
	198 Move X2, X31
	199 Call DateTime.Add, X0, X1
	200 Compare X21, 0
	201 JumpIfEqual {396}
	202 Move X8, [X21]
	203 Move X1, [X23]
	204 Move X22, X0
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move W2, 11
	215 Move X0, X21
	216 Call 0x1C5D788
	217 Move W9, [X10]
	218 Add W9, W9, 11
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X2, [X0+8]
	223 Move X0, X21
	224 Move X1, X22
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {271}
	230 Move X8, [X19+96]
	231 Compare X8, 0
	232 JumpIfEqual {397}
	233 Move X1, [X8+24]
	234 Move X3, [X19+88]
	235 Move X4, [X8+64]
	236 Move X0, X20
	237 Move X2, X31
	238 Move X5, X31
	239 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	240 Compare X0, 0
	241 JumpIfEqual {398}
	242 Move X8, 0xC94000
	243 Move X8, [X8+2112]
	244 Move X1, [X8]
	245 Call Task`1<Object>.GetAwaiter, X0
	246 Move X8, 0xC94000
	247 Move X8, [X8+2104]
	248 Move [X31+32], X0
	249 Move X1, [X8]
	250 Add X0, X31, 32
	251 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfEqual {100}
	256 Move [X19], W31
	257 Move X8, [X31+32]
	258 Move [X19+104], X8
	259 Move X0, [X25]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Move X8, 0xCD0000
	265 Move X8, [X8+376]
	266 Add X0, X19, 8
	267 Move X3, [X8]
	268 Add X1, X31, 32
	269 Move X2, X19
	270 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	271 Compare X20, 0
	272 JumpIfEqual {390}
	273 Move X8, 0xCD0000
	274 Move X8, [X8+384]
	275 Move X21, [X20+88]
	276 Move X23, [X19+96]
	277 Move X0, [X8]
	278 Call 0x1C17F10
	279 Move X8, 0xCD0000
	280 Move X8, [X8+424]
	281 Move X22, X0
	282 Move X2, [X8]
	283 Move X1, X23
	284 Move X3, X31
	285 Call Func`1<Object>..ctor, X0, X1, X2
	286 Move X8, [X19+96]
	287 Compare X8, 0
	288 JumpIfEqual {387}
	289 Move X9, 0xCCF000
	290 Move X23, [X19+88]
	291 Move X9, [X9+1992]
	292 Compare X23, 0
	293 JumpIfNotEqual {295}
	294 Move X23, [X20+24]
	295 Move X20, [X8+24]
	296 Move X1, [X8+64]
	297 Move X2, [X9]
	298 Move [X31+8], X31
	299 Move [X31+16], X31
	300 Add X0, X31, 8
	301 Call Nullable`1<CancellationToken>..ctor, X0, X1
	302 Move X8, 0xCCF000
	303 Move X8, [X8+2000]
	304 Move X0, [X8]
	305 Call 0x1C17F10
	306 Move X3, [X31+8]
	307 Move X4, [X31+16]
	308 Move X24, X0
	309 Move X1, X20
	310 Move X2, X23
	311 Move X5, X31
	312 Call RetryHistory..ctor, X0, X1, X2, X3
	313 Compare X21, 0
	314 JumpIfEqual {388}
	315 Move X8, 0xCD0000
	316 Move X8, [X8+392]
	317 Move X3, [X8]
	318 Move X0, X21
	319 Move X1, X22
	320 Move X2, X24
	321 Call 0x2244230, X0, X1, X2
	322 Compare X0, 0
	323 JumpIfEqual {389}
	324 Move X8, 0xCD0000
	325 Move X8, [X8+416]
	326 Move X1, [X8]
	327 Call Task`1<Object>.GetAwaiter, X0
	328 Move X8, 0xCD0000
	329 Move X8, [X8+408]
	330 Move [X31+24], X0
	331 Move X1, [X8]
	332 Add X0, X31, 24
	333 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {361}
	338 Move X8, 0xCD0000
	339 Move X8, [X8+400]
	340 Add X0, X31, 24
	341 Move X1, [X8]
	342 Call TaskAwaiter`1<Object>.GetResult, X0
	343 Move TEMP, 1
	344 Not TEMP
	345 Move W8, TEMP
	346 Move [X19], W8
	347 Move [X19+96], X31
	348 Move X20, X0
	349 Move X0, [X25]
	350 Move X21, 0xCCF000
	351 Add X19, X19, 8
	352 Move W8, [X0+224]
	353 Move X21, [X21+104]
	354 Compare W8, 0
	355 JumpIfNotEqual {357}
	356 Call 0x1C17DFC
	357 Move X2, [X21]
	358 Move X0, X19
	359 Move X1, X20
	360 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	361 Move W8, 1
	362 Move [X19], W8
	363 Move X8, [X31+24]
	364 Move [X19+112], X8
	365 Move X0, [X25]
	366 Move W8, [X0+224]
	367 Compare W8, 0
	368 JumpIfNotEqual {370}
	369 Call 0x1C17DFC
	370 Move X8, 0xCD0000
	371 Move X8, [X8+368]
	372 Add X0, X19, 8
	373 Move X3, [X8]
	374 Add X1, X31, 24
	375 Move X2, X19
	376 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	377 Move X20, [X31+96]
	378 Move X19, [X31+104]
	379 Move X22, [X31+80]
	380 Move X21, [X31+88]
	381 Move X24, [X31+64]
	382 Move X23, [X31+72]
	383 Move X30, [X31+48]
	384 Move X25, [X31+56]
	385 Add X31, X31, 112
	386 Return 
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Move X20, X0
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X0, X20
	402 Call 0x3EB2AD0
	403 Move X20, X0
	404 Move X0, 0xC93000
	405 Move X0, [X0+2000]
	406 Call 0x1C17D08
	407 Move X8, [X20]
	408 Move X1, [X8]
	409 Call 0x1C18270
	410 Move TEMP, X0
	411 And TEMP, TEMP, 1
	412 Compare TEMP, 1
	413 JumpIfNotEqual {435}
	414 Move X20, [X20]
	415 Call 0x3EB2AE0
	416 Move TEMP, 1
	417 Not TEMP
	418 Move W8, TEMP
	419 Move [X19+96], X31
	420 Move [X19+8], W8
	421 Move X0, 0xCCE000
	422 Move X0, [X0+1568]
	423 Call 0x1C17D08
	424 Move W8, [X0+224]
	425 Compare W8, 0
	426 JumpIfNotEqual {428}
	427 Call 0x1C17DFC
	428 Move X0, 0xCCF000
	429 Move X0, [X0+168]
	430 Call 0x1C17D08
	431 Move X2, X0
	432 Move X0, X19
	433 Move X1, X20
	434 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	435 Move W0, 8
	436 Call 0x3EB2AF0
	437 Move X8, [X20]
	438 Move [X0], X8
	439 Move X1, 0xA54000
	440 Add X1, X1, 3672
	441 Move X2, X31
	442 Call 0x3EB2B00
	443 Move X20, X0
	444 Call 0x3EB2AE0
	445 Move X0, X20
	446 Call 0x1D2D690
	447 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03461680 STR W9, [X19]
	0x03461684 ADRP X8, 0xC93000
	0x03461688 LDR X8, [X8 + 0x830]
	0x0346168C ADD X0, X31, 0x20
	0x03461690 LDR X1, [X8]
	0x03461694 BL 0x2677474
	0x03461698 B 0x34618D4
	0x0346169C ADRP X8, 0xCCF000
	0x034616A0 LDR X8, [X8 + 0x260]
	0x034616A4 LDR X0, [X8]
	0x034616A8 BL 0x1C16F10
	0x034616AC MOV X21, X0
	0x034616B0 MOV X1, X31
	0x034616B4 BL 0x344B658
	0x034616B8 STR X21, [X19 + 0x50]
	0x034616BC CBZ X21, 0x3461A70
	0x034616C0 LDR X8, [X19 + 0x20]
	0x034616C4 STR X8, [X21 + 0x10]
	0x034616C8 LDR X8, [X19 + 0x28]
	0x034616CC STR X8, [X21 + 0x18]
	0x034616D0 LDR X8, [X19 + 0x30]
	0x034616D4 STR X8, [X21 + 0x20]
	0x034616D8 LDR W8, [X19 + 0x38]
	0x034616DC STR W8, [X21 + 0x28]
	0x034616E0 LDR X8, [X19 + 0x40]
	0x034616E4 STR X8, [X21 + 0x30]
	0x034616E8 CBZ X20, 0x3461A74
	0x034616EC LDRB W8, [X20 + 0x10]
	0x034616F0 CBZ W8, 0x34618D8
	0x034616F4 LDR X8, [X19 + 0x50]
	0x034616F8 CBZ X8, 0x3461A78

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF7D000
	007 Move X21, 0xCCE000
	008 Move W8, [X22+1966]
	009 Move X21, [X21+1568]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCCF000
	017 Move X0, [X0+176]
	018 Call 0x1C17CF4
	019 Move X0, 0xCCE000
	020 Move X0, [X0+1568]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1966], W8
	024 Move X0, [X21]
	025 Move X21, 0xCCF000
	026 Move W8, [X0+224]
	027 Move X21, [X21+176]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

