Type: Nakama.ApiClient/<SessionLogoutAsync>d__76

Method: System.Void MoveNext()

Disassembly:
	0x03436C94 BL 0x269F5D0
	0x03436C98 ADRP X8, 0xCC0000
	0x03436C9C LDR X8, [X8 + 0x1F0]
	0x03436CA0 STR X0, [X31 + 0x18]
	0x03436CA4 LDR X1, [X8]
	0x03436CA8 ADD X0, X31, 0x18
	0x03436CAC BL 0x2677430
	0x03436CB0 TBZ X0, 0x0, 0x3436CF0
	0x03436CB4 ADRP X8, 0xCC0000
	0x03436CB8 LDR X8, [X8 + 0x1E0]
	0x03436CBC ADD X0, X31, 0x18
	0x03436CC0 LDR X1, [X8]
	0x03436CC4 BL 0x2677474
	0x03436CC8 MOVN W8, 0x1
	0x03436CCC STR W8, [X19], #0x8
	0x03436CD0 LDR X0, [X28]
	0x03436CD4 LDR W8, [X0 + 0xE0]
	0x03436CD8 CBNZ W8, 0x3436CE0
	0x03436CDC BL 0x1C16DFC
	0x03436CE0 MOV X0, X19
	0x03436CE4 MOV X1, X31
	0x03436CE8 BL 0x32C4864
	0x03436CEC B 0x3436D28
	0x03436CF0 STR W31, [X19]
	0x03436CF4 LDR X8, [X31 + 0x18]
	0x03436CF8 STR X8, [X19 + 0x48]
	0x03436CFC LDR X0, [X28]
	0x03436D00 LDR W8, [X0 + 0xE0]
	0x03436D04 CBNZ W8, 0x3436D0C
	0x03436D08 BL 0x1C16DFC
	0x03436D0C ADRP X8, 0xCF9000
	0x03436D10 LDR X8, [X8 + 0x358]
	0x03436D14 ADD X0, X19, 0x8
	0x03436D18 LDR X3, [X8]
	0x03436D1C ADD X1, X31, 0x18
	0x03436D20 MOV X2, X19
	0x03436D24 BL 0x2186CA4
	0x03436D28 LDP X20, X19, [X31 + 0x60]
	0x03436D2C LDP X22, X21, [X31 + 0x50]
	0x03436D30 LDP X24, X23, [X31 + 0x40]
	0x03436D34 LDP X26, X25, [X31 + 0x30]
	0x03436D38 LDP X28, X27, [X31 + 0x20]
	0x03436D3C LDR X30, [X31 + 0x10]
	0x03436D40 ADD X31, X31, 0x70
	0x03436D44 RET
	0x03436D48 ADRP X0, 0xCC5000
	0x03436D4C LDR X0, [X0 + 0x578]
	0x03436D50 BL 0x1C16D08
	0x03436D54 BL 0x1C16F10
	0x03436D58 MOV X20, X0
	0x03436D5C ADRP X0, 0xCF8000
	0x03436D60 LDR X0, [X0 + 0xBC8]
	0x03436D64 BL 0x1C16D08
	0x03436D68 MOV X1, X0
	0x03436D6C MOV X0, X20
	0x03436D70 MOV X2, X31
	0x03436D74 BL 0x3314A68
	0x03436D78 ADRP X0, 0xCF9000
	0x03436D7C LDR X0, [X0 + 0x368]
	0x03436D80 BL 0x1C16D08
	0x03436D84 MOV X1, X0
	0x03436D88 MOV X0, X20
	0x03436D8C BL 0x1C16DEC
	0x03436D90 BL 0x1C16F20
	0x03436D94 BL 0x1C16F20
	0x03436D98 BL 0x1C16F20
	0x03436D9C BL 0x1C16F28
	0x03436DA0 BL 0x1C16F20
	0x03436DA4 BL 0x1C16F20
	0x03436DA8 BL 0x1C16F20
	0x03436DAC BL 0x1C16F20
	0x03436DB0 BL 0x1C16F20
	0x03436DB4 BL 0x1C16F20
	0x03436DB8 B 0x3436E18
	0x03436DBC B 0x3436E18
	0x03436DC0 B 0x3436E18
	0x03436DC4 B 0x3436E18
	0x03436DC8 B 0x3436E18
	0x03436DCC B 0x3436E18
	0x03436DD0 B 0x3436E18
	0x03436DD4 B 0x3436E18
	0x03436DD8 B 0x3436E18
	0x03436DDC B 0x3436E18
	0x03436DE0 B 0x3436E18
	0x03436DE4 B 0x3436E18
	0x03436DE8 B 0x3436E18
	0x03436DEC B 0x3436E18
	0x03436DF0 B 0x3436E18
	0x03436DF4 B 0x3436E18
	0x03436DF8 B 0x3436E18
	0x03436DFC B 0x3436E18
	0x03436E00 B 0x3436E18
	0x03436E04 B 0x3436E18
	0x03436E08 B 0x3436E18
	0x03436E0C B 0x3436E18
	0x03436E10 B 0x3436E18
	0x03436E14 B 0x3436E18
	0x03436E18 MOV X20, X0
	0x03436E1C CMP W1, 0x1
	0x03436E20 B.NE 0x3436EB0
	0x03436E24 MOV X0, X20
	0x03436E28 BL 0x3EB1AD0
	0x03436E2C MOV X20, X0
	0x03436E30 ADRP X0, 0xCBD000
	0x03436E34 LDR X0, [X0 + 0x7D0]
	0x03436E38 BL 0x1C16D08
	0x03436E3C LDR X8, [X20]
	0x03436E40 LDR X1, [X8]
	0x03436E44 BL 0x1C17270
	0x03436E48 TBZ X0, 0x0, 0x3436E88
	0x03436E4C LDR X20, [X20]
	0x03436E50 BL 0x3EB1AE0
	0x03436E54 MOVN W8, 0x1
	0x03436E58 STR W8, [X19], #0x8
	0x03436E5C ADRP X0, 0xCC0000
	0x03436E60 LDR X0, [X0 + 0x280]
	0x03436E64 BL 0x1C16D08
	0x03436E68 LDR W8, [X0 + 0xE0]
	0x03436E6C CBNZ W8, 0x3436E74
	0x03436E70 BL 0x1C16DFC
	0x03436E74 MOV X0, X19
	0x03436E78 MOV X1, X20
	0x03436E7C MOV X2, X31
	0x03436E80 BL 0x32C4908
	0x03436E84 B 0x3436D28
	0x03436E88 MOVZ W0, 0x8
	0x03436E8C BL 0x3EB1AF0
	0x03436E90 LDR X8, [X20]
	0x03436E94 STR X8, [X0]
	0x03436E98 ADRP X1, 0xA7E000
	0x03436E9C ADD X1, X1, 0xE58
	0x03436EA0 MOV X2, X31
	0x03436EA4 BL 0x3EB1B00
	0x03436EA8 MOV X20, X0
	0x03436EAC BL 0x3EB1AE0
	0x03436EB0 MOV X0, X20
	0x03436EB4 BL 0x1D2C690
	0x03436EB8 BL 0x1990590
	0x03436EBC STR X30, [X31 - 0x30]!
	0x03436EC0 STP X22, X21, [X31 + 0x10]
	0x03436EC4 STP X20, X19, [X31 + 0x20]
	0x03436EC8 ADRP X21, 0xFA7000
	0x03436ECC ADRP X22, 0xCC0000
	0x03436ED0 LDRB W8, [X21 + 0x676]
	0x03436ED4 LDR X22, [X22 + 0x280]
	0x03436ED8 MOV X19, X1
	0x03436EDC MOV X20, X0
	0x03436EE0 TBNZ X8, 0x0, 0x3436EF8
	0x03436EE4 ADRP X0, 0xCC0000
	0x03436EE8 LDR X0, [X0 + 0x280]
	0x03436EEC BL 0x1C16CF4
	0x03436EF0 MOVZ W8, 0x1
	0x03436EF4 STRB W8, [X21 + 0x676]
	0x03436EF8 LDR X0, [X22]
	0x03436EFC LDR W8, [X0 + 0xE0]
	0x03436F00 CBNZ W8, 0x3436F08
	0x03436F04 BL 0x1C16DFC
	0x03436F08 ADD X0, X20, 0x8
	0x03436F0C MOV X1, X19
	0x03436F10 LDP X20, X19, [X31 + 0x20]
	0x03436F14 LDP X22, X21, [X31 + 0x10]
	0x03436F18 MOV X2, X31
	0x03436F1C LDR X30, [X31], #0x30
	0x03436F20 B 0x32C477C
	0x03436F24 SUB X31, X31, 0x70
	0x03436F28 STR X30, [X31 + 0x10]
	0x03436F2C STP X28, X27, [X31 + 0x20]
	0x03436F30 STP X26, X25, [X31 + 0x30]
	0x03436F34 STP X24, X23, [X31 + 0x40]
	0x03436F38 STP X22, X21, [X31 + 0x50]
	0x03436F3C STP X20, X19, [X31 + 0x60]
	0x03436F40 ADRP X20, 0xFA7000
	0x03436F44 LDRB W8, [X20 + 0x677]
	0x03436F48 MOV X19, X0
	0x03436F4C TBNZ X8, 0x0, 0x3437018
	0x03436F50 ADRP X0, 0xCF9000
	0x03436F54 LDR X0, [X0 + 0x370]
	0x03436F58 BL 0x1C16CF4
	0x03436F5C ADRP X0, 0xCC0000
	0x03436F60 LDR X0, [X0 + 0x280]
	0x03436F64 BL 0x1C16CF4
	0x03436F68 ADRP X0, 0xCC6000
	0x03436F6C LDR X0, [X0 + 0x8D8]
	0x03436F70 BL 0x1C16CF4
	0x03436F74 ADRP X0, 0xCBE000
	0x03436F78 LDR X0, [X0 + 0x810]
	0x03436F7C BL 0x1C16CF4
	0x03436F80 ADRP X0, 0xCBE000
	0x03436F84 LDR X0, [X0 + 0x6C0]
	0x03436F88 BL 0x1C16CF4
	0x03436F8C ADRP X0, 0xCBE000
	0x03436F90 LDR X0, [X0 + 0x6D0]
	0x03436F94 BL 0x1C16CF4
	0x03436F98 ADRP X0, 0xCF8000
	0x03436F9C LDR X0, [X0 + 0x7B8]
	0x03436FA0 BL 0x1C16CF4
	0x03436FA4 ADRP X0, 0xCC0000
	0x03436FA8 LDR X0, [X0 + 0x1E0]
	0x03436FAC BL 0x1C16CF4
	0x03436FB0 ADRP X0, 0xCC0000
	0x03436FB4 LDR X0, [X0 + 0x1F0]
	0x03436FB8 BL 0x1C16CF4
	0x03436FBC ADRP X0, 0xCC0000
	0x03436FC0 LDR X0, [X0 + 0x1F8]
	0x03436FC4 BL 0x1C16CF4
	0x03436FC8 ADRP X0, 0xCC6000
	0x03436FCC LDR X0, [X0 + 0x3A0]
	0x03436FD0 BL 0x1C16CF4
	0x03436FD4 ADRP X0, 0xCE6000
	0x03436FD8 LDR X0, [X0 + 0x4D8]
	0x03436FDC BL 0x1C16CF4
	0x03436FE0 ADRP X0, 0xCF9000
	0x03436FE4 LDR X0, [X0 + 0x378]
	0x03436FE8 BL 0x1C16CF4
	0x03436FEC ADRP X0, 0xCF8000
	0x03436FF0 LDR X0, [X0 + 0x7D0]
	0x03436FF4 BL 0x1C16CF4
	0x03436FF8 ADRP X0, 0xCF8000
	0x03436FFC LDR X0, [X0 + 0x7D8]
	0x03437000 BL 0x1C16CF4
	0x03437004 ADRP X0, 0xCBC000
	0x03437008 LDR X0, [X0 + 0x988]
	0x0343700C BL 0x1C16CF4
	0x03437010 MOVZ W8, 0x1
	0x03437014 STRB W8, [X20 + 0x677]
	0x03437018 STR X31, [X31 + 0x18]
	0x0343701C ADRP X28, 0xCBF000
	0x03437020 LDR W8, [X19]
	0x03437024 LDR X28, [X28 + 0x280]
	0x03437028 CBZ W8, 0x3437208
	0x0343702C LDR X8, [X19 + 0x20]
	0x03437030 CBZ X8, 0x3437320
	0x03437034 LDR X25, [X19 + 0x28]
	0x03437038 CBZ X25, 0x3437368
	0x0343703C LDR X0, [X25 + 0x20]
	0x03437040 CBZ X0, 0x343736C
	0x03437044 ADRP X8, 0xCF8000
	0x03437048 ADRP X9, 0xCBC000
	0x0343704C LDR X8, [X8 + 0x378]
	0x03437050 LDR X9, [X9 + 0x988]
	0x03437054 LDR X21, [X8]
	0x03437058 LDR X20, [X9]
	0x0343705C MOV X1, X31
	0x03437060 BL 0x361B448
	0x03437064 ADRP X8, 0xCC5000
	0x03437068 LDR X8, [X8 + 0x8D8]
	0x0343706C MOV X22, X0
	0x03437070 LDR X0, [X8]
	0x03437074 MOVZ W1, 0x1
	0x03437078 BL 0x1C16D6C
	0x0343707C MOV X1, X0
	0x03437080 CBZ X1, 0x3437370
	0x03437084 LDR W8, [X1 + 0x18]
	0x03437088 CBZ W8, 0x3437374
	0x0343708C MOVZ W8, 0x2F
	0x03437090 STRH W8, [X1 + 0x20]
	0x03437094 CBZ X22, 0x3437378
	0x03437098 MOV X0, X22
	0x0343709C MOV X2, X31
	0x034370A0 BL 0x322BC58
	0x034370A4 MOV X1, X21
	0x034370A8 MOV X2, X31
	0x034370AC BL 0x321B938
	0x034370B0 ADRP X8, 0xCC5000
	0x034370B4 LDR X8, [X8 + 0x3A0]
	0x034370B8 MOV X22, X0
	0x034370BC LDR X23, [X25 + 0x20]
	0x034370C0 LDR X0, [X8]
	0x034370C4 BL 0x1C16F10
	0x034370C8 MOV X21, X0
	0x034370CC MOV X1, X23
	0x034370D0 MOV X2, X31
	0x034370D4 BL 0x36281F8
	0x034370D8 CBZ X21, 0x343737C
	0x034370DC MOV X0, X21
	0x034370E0 MOV X1, X22
	0x034370E4 MOV X2, X31
	0x034370E8 BL 0x36288CC
	0x034370EC MOV X0, X21
	0x034370F0 MOV X1, X20
	0x034370F4 MOV X2, X31
	0x034370F8 BL 0x3628980
	0x034370FC MOV X0, X21
	0x03437100 MOV X1, X31
	0x03437104 BL 0x3628A38
	0x03437108 ADRP X8, 0xCE5000
	0x0343710C ADRP X9, 0xCBD000
	0x03437110 LDR X8, [X8 + 0x4D8]
	0x03437114 LDR X9, [X9 + 0x6D0]
	0x03437118 MOV X20, X0
	0x0343711C LDR X21, [X8]
	0x03437120 LDR X0, [X9]
	0x03437124 BL 0x1C16F10
	0x03437128 ADRP X8, 0xCBD000
	0x0343712C LDR X8, [X8 + 0x6C0]
	0x03437130 MOV X22, X0
	0x03437134 LDR X1, [X8]
	0x03437138 BL 0x2AA4804
	0x0343713C ADRP X8, 0xCF7000
	0x03437140 LDR X8, [X8 + 0x7D8]
	0x03437144 LDR X1, [X19 + 0x30]
	0x03437148 LDR X0, [X8]
	0x0343714C MOV X2, X31
	0x03437150 BL 0x321B938
	0x03437154 CBZ X22, 0x3437380
	0x03437158 ADRP X8, 0xCF7000
	0x0343715C LDR X8, [X8 + 0x7D0]
	0x03437160 ADRP X9, 0xCBD000
	0x03437164 LDR X9, [X9 + 0x810]
	0x03437168 MOV X2, X0
	0x0343716C LDR X1, [X8]
	0x03437170 LDR X3, [X9]
	0x03437174 MOV X0, X22
	0x03437178 BL 0x2AA5098
	0x0343717C LDR X0, [X19 + 0x20]
	0x03437180 MOV X1, X31
	0x03437184 BL 0x3483BE4
	0x03437188 MOV X23, X0
	0x0343718C MOV X0, X31
	0x03437190 BL 0x3241948
	0x03437194 CBZ X0, 0x3437384
	0x03437198 LDR X8, [X0]
	0x0343719C LDR X9, [X8 + 0x268]
	0x034371A0 LDR X2, [X8 + 0x270]
	0x034371A4 MOV X1, X23
	0x034371A8 BLR X9
	0x034371AC LDR X24, [X25 + 0x10]
	0x034371B0 CBZ X24, 0x3437388
	0x034371B4 ADRP X10, 0xCF7000
	0x034371B8 LDR X10, [X10 + 0x7B8]
	0x034371BC LDR X8, [X24]
	0x034371C0 LDR W26, [X25 + 0x18]
	0x034371C4 LDP X27, X25, [X19 + 0x38]
	0x034371C8 LDR X1, [X10]
	0x034371CC LDRH W9, [X8 + 0x12E]
	0x034371D0 MOV X23, X0
	0x034371D4 CBZ X9, 0x34371F8
	0x034371D8 LDR X10, [X8 + 0xB0]
	0x034371DC ADD X10, X10, 0x8
	0x034371E0 LDUR X11, [X10 - 0x8]
	0x034371E4 CMP X11, X1
	0x034371E8 B.EQ 0x3437220
	0x034371EC SUBS X9, X9, 0x1
	0x034371F0 ADD X10, X10, 0x10
	0x034371F4 B.NE 0x34371E0
	0x034371F8 MOVZ W2, 0x3
	0x034371FC MOV X0, X24
	0x03437200 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA8000
	014 Move W8, [X20+1649]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xCFA000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC1000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC7000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBF000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBF000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBF000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF9000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC1000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC1000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC1000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC7000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE7000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xCFA000
	057 Move X0, [X0+816]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF9000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF9000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCBE000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1649], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCC1000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xCFA000
	086 Move X9, 0xCBE000
	087 Move X8, [X8+816]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCC7000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCC7000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCE7000
	139 Move X9, 0xCBF000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCBF000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xCF9000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xCF9000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCBF000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xCF9000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCC1000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCC1000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCC1000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xCF9000
	269 Move X8, [X8+808]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCC5000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xCF8000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xCF9000
	301 Move X0, [X0+824]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCBD000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCC0000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA7E000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03437204 B 0x3437230
	0x03437208 LDR X8, [X19 + 0x48]
	0x0343720C MOVN W9, 0x0
	0x03437210 STR X8, [X31 + 0x18]
	0x03437214 STR X31, [X19 + 0x48]
	0x03437218 STR W9, [X19]
	0x0343721C B 0x343728C
	0x03437220 LDR W9, [X10]
	0x03437224 ADD W9, W9, 0x3
	0x03437228 ADD X8, X8, W9, 0x4, SXTW
	0x0343722C ADD X0, X8, 0x138
	0x03437230 LDP X8, X9, [X0]
	0x03437234 MOV X0, X24
	0x03437238 MOV X1, X21
	0x0343723C MOV X2, X20
	0x03437240 MOV X3, X22
	0x03437244 MOV X4, X23
	0x03437248 MOV W5, W26
	0x0343724C MOV X6, X27
	0x03437250 MOV X7, X25
	0x03437254 STR X9, [X31]
	0x03437258 BLR X8
	0x0343725C CBZ X0, 0x343738C
	0x03437260 ADRP X8, 0xCBF000
	0x03437264 LDR X8, [X8 + 0x1F8]
	0x03437268 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA7000
	007 Move X22, 0xCC0000
	008 Move W8, [X21+1650]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCC0000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1650], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

