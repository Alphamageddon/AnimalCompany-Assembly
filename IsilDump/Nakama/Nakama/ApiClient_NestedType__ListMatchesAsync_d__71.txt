Type: Nakama.ApiClient/<ListMatchesAsync>d__71

Method: System.Void MoveNext()

Disassembly:
	0x0342F44C STR X31, [X19 + 0x50]
	0x0342F450 STR W9, [X19]
	0x0342F454 B 0x342F4C4
	0x0342F458 LDR W9, [X10]
	0x0342F45C ADD W9, W9, 0x3
	0x0342F460 ADD X8, X8, W9, 0x4, SXTW
	0x0342F464 ADD X0, X8, 0x138
	0x0342F468 LDP X8, X9, [X0]
	0x0342F46C MOV X0, X23
	0x0342F470 MOV X1, X21
	0x0342F474 MOV X2, X20
	0x0342F478 MOV X3, X22
	0x0342F47C MOV X4, X31
	0x0342F480 MOV W5, W25
	0x0342F484 MOV X6, X26
	0x0342F488 MOV X7, X24
	0x0342F48C STR X9, [X31]
	0x0342F490 BLR X8
	0x0342F494 CBZ X0, 0x342F594
	0x0342F498 ADRP X8, 0xCC7000
	0x0342F49C LDR X8, [X8 + 0x1F8]
	0x0342F4A0 LDR X1, [X8]
	0x0342F4A4 BL 0x269F5D0
	0x0342F4A8 ADRP X8, 0xCC7000
	0x0342F4AC LDR X8, [X8 + 0x1F0]
	0x0342F4B0 STR X0, [X31 + 0x18]
	0x0342F4B4 LDR X1, [X8]
	0x0342F4B8 ADD X0, X31, 0x18
	0x0342F4BC BL 0x2677430
	0x0342F4C0 TBZ X0, 0x0, 0x342F520
	0x0342F4C4 ADRP X8, 0xCC7000
	0x0342F4C8 LDR X8, [X8 + 0x1E0]
	0x0342F4CC ADD X0, X31, 0x18
	0x0342F4D0 LDR X1, [X8]
	0x0342F4D4 BL 0x2677474
	0x0342F4D8 ADRP X8, 0xD00000
	0x0342F4DC LDR X8, [X8 + 0xC8]
	0x0342F4E0 LDR X1, [X8]
	0x0342F4E4 BL 0x220E6DC
	0x0342F4E8 MOVN W8, 0x1
	0x0342F4EC STR W8, [X19], #0x8
	0x0342F4F0 MOV X20, X0
	0x0342F4F4 LDR X0, [X27]
	0x0342F4F8 ADRP X21, 0xD00000
	0x0342F4FC LDR W8, [X0 + 0xE0]
	0x0342F500 LDR X21, [X21 + 0xC0]
	0x0342F504 CBNZ W8, 0x342F50C
	0x0342F508 BL 0x1C16DFC
	0x0342F50C LDR X2, [X21]
	0x0342F510 MOV X0, X19
	0x0342F514 MOV X1, X20
	0x0342F518 BL 0x26322B0
	0x0342F51C B 0x342F558
	0x0342F520 STR W31, [X19]
	0x0342F524 LDR X8, [X31 + 0x18]
	0x0342F528 STR X8, [X19 + 0x50]
	0x0342F52C LDR X0, [X27]
	0x0342F530 LDR W8, [X0 + 0xE0]
	0x0342F534 CBNZ W8, 0x342F53C
	0x0342F538 BL 0x1C16DFC
	0x0342F53C ADRP X8, 0xD00000
	0x0342F540 LDR X8, [X8 + 0xB8]
	0x0342F544 ADD X0, X19, 0x8
	0x0342F548 LDR X3, [X8]
	0x0342F54C ADD X1, X31, 0x18
	0x0342F550 MOV X2, X19
	0x0342F554 BL 0x1FB41E8
	0x0342F558 LDP X20, X19, [X31 + 0x60]
	0x0342F55C LDP X22, X21, [X31 + 0x50]
	0x0342F560 LDP X24, X23, [X31 + 0x40]
	0x0342F564 LDP X26, X25, [X31 + 0x30]
	0x0342F568 LDP X30, X27, [X31 + 0x20]
	0x0342F56C ADD X31, X31, 0x70
	0x0342F570 RET
	0x0342F574 BL 0x1C16F20
	0x0342F578 BL 0x1C16F20
	0x0342F57C BL 0x1C16F20
	0x0342F580 BL 0x1C16F28
	0x0342F584 BL 0x1C16F20
	0x0342F588 BL 0x1C16F20
	0x0342F58C BL 0x1C16F20
	0x0342F590 BL 0x1C16F20
	0x0342F594 BL 0x1C16F20
	0x0342F598 BL 0x1C16F20
	0x0342F59C BL 0x1C16F28
	0x0342F5A0 BL 0x1C16F28
	0x0342F5A4 BL 0x1C16F28
	0x0342F5A8 BL 0x1C16F28
	0x0342F5AC BL 0x1C16F44
	0x0342F5B0 MOV X1, X31
	0x0342F5B4 BL 0x1C16DEC
	0x0342F5B8 BL 0x1C16F44
	0x0342F5BC MOV X1, X31
	0x0342F5C0 BL 0x1C16DEC
	0x0342F5C4 BL 0x1C16F44
	0x0342F5C8 MOV X1, X31
	0x0342F5CC BL 0x1C16DEC
	0x0342F5D0 BL 0x1C16F44
	0x0342F5D4 MOV X1, X31
	0x0342F5D8 BL 0x1C16DEC
	0x0342F5DC B 0x342F650
	0x0342F5E0 B 0x342F650
	0x0342F5E4 B 0x342F650
	0x0342F5E8 B 0x342F650
	0x0342F5EC B 0x342F650
	0x0342F5F0 B 0x342F650
	0x0342F5F4 B 0x342F650
	0x0342F5F8 B 0x342F650
	0x0342F5FC B 0x342F650
	0x0342F600 B 0x342F650
	0x0342F604 B 0x342F650
	0x0342F608 B 0x342F650
	0x0342F60C B 0x342F650
	0x0342F610 B 0x342F650
	0x0342F614 B 0x342F650
	0x0342F618 B 0x342F650
	0x0342F61C B 0x342F650
	0x0342F620 B 0x342F650
	0x0342F624 B 0x342F650
	0x0342F628 B 0x342F650
	0x0342F62C B 0x342F650
	0x0342F630 B 0x342F650
	0x0342F634 B 0x342F650
	0x0342F638 B 0x342F650
	0x0342F63C B 0x342F650
	0x0342F640 B 0x342F650
	0x0342F644 B 0x342F650
	0x0342F648 B 0x342F650
	0x0342F64C B 0x342F650
	0x0342F650 MOV X20, X0
	0x0342F654 CMP W1, 0x1
	0x0342F658 B.NE 0x342F6F4
	0x0342F65C MOV X0, X20
	0x0342F660 BL 0x3EB1AD0
	0x0342F664 MOV X20, X0
	0x0342F668 ADRP X0, 0xCC4000
	0x0342F66C LDR X0, [X0 + 0x7D0]
	0x0342F670 BL 0x1C16D08
	0x0342F674 LDR X8, [X20]
	0x0342F678 LDR X1, [X8]
	0x0342F67C BL 0x1C17270
	0x0342F680 TBZ X0, 0x0, 0x342F6CC
	0x0342F684 LDR X20, [X20]
	0x0342F688 BL 0x3EB1AE0
	0x0342F68C MOVN W8, 0x1
	0x0342F690 STR W8, [X19], #0x8
	0x0342F694 ADRP X0, 0xCFF000
	0x0342F698 LDR X0, [X0 + 0x648]
	0x0342F69C BL 0x1C16D08
	0x0342F6A0 LDR W8, [X0 + 0xE0]
	0x0342F6A4 CBNZ W8, 0x342F6AC
	0x0342F6A8 BL 0x1C16DFC
	0x0342F6AC ADRP X0, 0xD00000
	0x0342F6B0 LDR X0, [X0 + 0xD8]
	0x0342F6B4 BL 0x1C16D08
	0x0342F6B8 MOV X2, X0
	0x0342F6BC MOV X0, X19
	0x0342F6C0 MOV X1, X20
	0x0342F6C4 BL 0x26324C8
	0x0342F6C8 B 0x342F558
	0x0342F6CC MOVZ W0, 0x8
	0x0342F6D0 BL 0x3EB1AF0
	0x0342F6D4 LDR X8, [X20]
	0x0342F6D8 STR X8, [X0]
	0x0342F6DC ADRP X1, 0xA85000
	0x0342F6E0 ADD X1, X1, 0xE58
	0x0342F6E4 MOV X2, X31
	0x0342F6E8 BL 0x3EB1B00
	0x0342F6EC MOV X20, X0
	0x0342F6F0 BL 0x3EB1AE0
	0x0342F6F4 MOV X0, X20
	0x0342F6F8 BL 0x1D2C690
	0x0342F6FC BL 0x1990590
	0x0342F700 STR X30, [X31 - 0x30]!
	0x0342F704 STP X22, X21, [X31 + 0x10]
	0x0342F708 STP X20, X19, [X31 + 0x20]
	0x0342F70C ADRP X22, 0xFAE000
	0x0342F710 ADRP X21, 0xCFF000
	0x0342F714 LDRB W8, [X22 + 0x65A]
	0x0342F718 LDR X21, [X21 + 0x648]
	0x0342F71C MOV X19, X1
	0x0342F720 MOV X20, X0
	0x0342F724 TBNZ X8, 0x0, 0x342F748
	0x0342F728 ADRP X0, 0xD00000
	0x0342F72C LDR X0, [X0 + 0xE0]
	0x0342F730 BL 0x1C16CF4
	0x0342F734 ADRP X0, 0xCFF000
	0x0342F738 LDR X0, [X0 + 0x648]
	0x0342F73C BL 0x1C16CF4
	0x0342F740 MOVZ W8, 0x1
	0x0342F744 STRB W8, [X22 + 0x65A]
	0x0342F748 LDR X0, [X21]
	0x0342F74C ADRP X21, 0xD00000
	0x0342F750 LDR W8, [X0 + 0xE0]
	0x0342F754 LDR X21, [X21 + 0xE0]
	0x0342F758 CBNZ W8, 0x342F760
	0x0342F75C BL 0x1C16DFC
	0x0342F760 LDR X2, [X21]
	0x0342F764 ADD X0, X20, 0x8
	0x0342F768 MOV X1, X19
	0x0342F76C LDP X20, X19, [X31 + 0x20]
	0x0342F770 LDP X22, X21, [X31 + 0x10]
	0x0342F774 LDR X30, [X31], #0x30
	0x0342F778 B 0x2632228
	0x0342F77C SUB X31, X31, 0x70
	0x0342F780 STP X30, X27, [X31 + 0x20]
	0x0342F784 STP X26, X25, [X31 + 0x30]
	0x0342F788 STP X24, X23, [X31 + 0x40]
	0x0342F78C STP X22, X21, [X31 + 0x50]
	0x0342F790 STP X20, X19, [X31 + 0x60]
	0x0342F794 ADRP X20, 0xFAE000
	0x0342F798 LDRB W8, [X20 + 0x65B]
	0x0342F79C MOV X19, X0
	0x0342F7A0 TBNZ X8, 0x0, 0x342F8F0
	0x0342F7A4 ADRP X0, 0xD00000
	0x0342F7A8 LDR X0, [X0 + 0xE8]
	0x0342F7AC BL 0x1C16CF4
	0x0342F7B0 ADRP X0, 0xD00000
	0x0342F7B4 LDR X0, [X0 + 0xF0]
	0x0342F7B8 BL 0x1C16CF4
	0x0342F7BC ADRP X0, 0xCFF000
	0x0342F7C0 LDR X0, [X0 + 0x6E0]
	0x0342F7C4 BL 0x1C16CF4
	0x0342F7C8 ADRP X0, 0xCCD000
	0x0342F7CC LDR X0, [X0 + 0x8D8]
	0x0342F7D0 BL 0x1C16CF4
	0x0342F7D4 ADRP X0, 0xCC5000
	0x0342F7D8 LDR X0, [X0 + 0x810]
	0x0342F7DC BL 0x1C16CF4
	0x0342F7E0 ADRP X0, 0xCC5000
	0x0342F7E4 LDR X0, [X0 + 0x6C0]
	0x0342F7E8 BL 0x1C16CF4
	0x0342F7EC ADRP X0, 0xCC5000
	0x0342F7F0 LDR X0, [X0 + 0x6D0]
	0x0342F7F4 BL 0x1C16CF4
	0x0342F7F8 ADRP X0, 0xCFF000
	0x0342F7FC LDR X0, [X0 + 0x7B8]
	0x0342F800 BL 0x1C16CF4
	0x0342F804 ADRP X0, 0xD00000
	0x0342F808 LDR X0, [X0 + 0xF8]
	0x0342F80C BL 0x1C16CF4
	0x0342F810 ADRP X0, 0xCC7000
	0x0342F814 LDR X0, [X0 + 0xEF8]
	0x0342F818 BL 0x1C16CF4
	0x0342F81C ADRP X0, 0xCC5000
	0x0342F820 LDR X0, [X0 + 0x478]
	0x0342F824 BL 0x1C16CF4
	0x0342F828 ADRP X0, 0xCC4000
	0x0342F82C LDR X0, [X0 + 0x9D0]
	0x0342F830 BL 0x1C16CF4
	0x0342F834 ADRP X0, 0xCC7000
	0x0342F838 LDR X0, [X0 + 0x1E0]
	0x0342F83C BL 0x1C16CF4
	0x0342F840 ADRP X0, 0xCC7000
	0x0342F844 LDR X0, [X0 + 0x1F0]
	0x0342F848 BL 0x1C16CF4
	0x0342F84C ADRP X0, 0xCC7000
	0x0342F850 LDR X0, [X0 + 0x1F8]
	0x0342F854 BL 0x1C16CF4
	0x0342F858 ADRP X0, 0xCCD000
	0x0342F85C LDR X0, [X0 + 0x3A0]
	0x0342F860 BL 0x1C16CF4
	0x0342F864 ADRP X0, 0xCC6000
	0x0342F868 LDR X0, [X0 + 0xA28]
	0x0342F86C BL 0x1C16CF4
	0x0342F870 ADRP X0, 0xD00000
	0x0342F874 LDR X0, [X0 + 0x100]
	0x0342F878 BL 0x1C16CF4
	0x0342F87C ADRP X0, 0xCED000
	0x0342F880 LDR X0, [X0 + 0x4D0]
	0x0342F884 BL 0x1C16CF4
	0x0342F888 ADRP X0, 0xCCD000
	0x0342F88C LDR X0, [X0 + 0x720]
	0x0342F890 BL 0x1C16CF4
	0x0342F894 ADRP X0, 0xCFF000
	0x0342F898 LDR X0, [X0 + 0x7D0]
	0x0342F89C BL 0x1C16CF4
	0x0342F8A0 ADRP X0, 0xCFF000
	0x0342F8A4 LDR X0, [X0 + 0xF18]
	0x0342F8A8 BL 0x1C16CF4
	0x0342F8AC ADRP X0, 0xD00000
	0x0342F8B0 LDR X0, [X0 + 0x108]
	0x0342F8B4 BL 0x1C16CF4
	0x0342F8B8 ADRP X0, 0xCFF000
	0x0342F8BC LDR X0, [X0 + 0x7D8]
	0x0342F8C0 BL 0x1C16CF4
	0x0342F8C4 ADRP X0, 0xCC4000
	0x0342F8C8 LDR X0, [X0 + 0x988]
	0x0342F8CC BL 0x1C16CF4
	0x0342F8D0 ADRP X0, 0xCFF000
	0x0342F8D4 LDR X0, [X0 + 0xF20]
	0x0342F8D8 BL 0x1C16CF4
	0x0342F8DC ADRP X0, 0xD00000
	0x0342F8E0 LDR X0, [X0 + 0x110]
	0x0342F8E4 BL 0x1C16CF4
	0x0342F8E8 MOVZ W8, 0x1
	0x0342F8EC STRB W8, [X20 + 0x65B]
	0x0342F8F0 STR X31, [X31 + 0x18]
	0x0342F8F4 ADRP X27, 0xCFF000
	0x0342F8F8 LDR W8, [X19]
	0x0342F8FC LDR X27, [X27 + 0x6E0]
	0x0342F900 CBZ W8, 0x342FC84
	0x0342F904 LDR X21, [X19 + 0x20]
	0x0342F908 CBZ X21, 0x342FDB8
	0x0342F90C LDR X8, [X19 + 0x28]
	0x0342F910 CBZ X8, 0x342FE00
	0x0342F914 ADRP X23, 0xCC6000
	0x0342F918 LDR X23, [X23 + 0xA28]
	0x0342F91C ADRP X8, 0xD00000
	0x0342F920 LDR X0, [X23]
	0x0342F924 LDR X8, [X8 + 0x108]
	0x0342F928 LDR X24, [X19 + 0x40]
	0x0342F92C LDR W9, [X0 + 0xE0]
	0x0342F930 LDR X20, [X8]
	0x0342F934 CBNZ W9, 0x342F93C
	0x0342F938 BL 0x1C16DFC
	0x0342F93C MOV X0, X21
	0x0342F940 MOV X1, X31
	0x0342F944 BL 0x3624D20
	0x0342F948 CBZ X20, 0x342FE48
	0x0342F94C ADRP X8, 0xD00000
	0x0342F950 LDR X8, [X8 + 0x100]
	0x0342F954 MOV X2, X0
	0x0342F958 LDR X1, [X8]
	0x0342F95C MOV X0, X20
	0x0342F960 MOV X3, X31
	0x0342F964 BL 0x32293BC
	0x0342F968 MOV X20, X0
	0x0342F96C LDR X0, [X19 + 0x28]
	0x0342F970 MOV X1, X31
	0x0342F974 BL 0x3624D20
	0x0342F978 CBZ X20, 0x342FE4C
	0x0342F97C ADRP X8, 0xD00000
	0x0342F980 LDR X8, [X8 + 0x110]
	0x0342F984 MOV X2, X0
	0x0342F988 LDR X1, [X8]
	0x0342F98C MOV X0, X20
	0x0342F990 MOV X3, X31
	0x0342F994 BL 0x32293BC
	0x0342F998 ADRP X8, 0xCC4000
	0x0342F99C LDR X8, [X8 + 0x988]
	0x0342F9A0 LDRB W9, [X19 + 0x30]
	0x0342F9A4 MOV X20, X0
	0x0342F9A8 LDR X21, [X8]
	0x0342F9AC CBZ W9, 0x342FAB0
	0x0342F9B0 ADRP X8, 0xCC4000
	0x0342F9B4 LDR X8, [X8 + 0x9D0]
	0x0342F9B8 LDR X0, [X8]
	0x0342F9BC MOVZ W1, 0x4
	0x0342F9C0 BL 0x1C16D6C
	0x0342F9C4 MOV X22, X0
	0x0342F9C8 CBZ X0, 0x342FE74
	0x0342F9CC CBZ X21, 0x342F9E4
	0x0342F9D0 LDR X8, [X22]
	0x0342F9D4 LDR X1, [X8 + 0x40]
	0x0342F9D8 MOV X0, X21
	0x0342F9DC BL 0x1C16E00
	0x0342F9E0 CBZ X0, 0x342FE88
	0x0342F9E4 LDR W8, [X22 + 0x18]
	0x0342F9E8 CBZ W8, 0x342FE78
	0x0342F9EC STR X21, [X22 + 0x20]
	0x0342F9F0 ADRP X21, 0xCFF000
	0x0342F9F4 LDR X21, [X21 + 0xF18]
	0x0342F9F8 LDR X0, [X21]
	0x0342F9FC CBZ X0, 0x342FA14
	0x0342FA00 LDR X8, [X22]
	0x0342FA04 LDR X1, [X8 + 0x40]
	0x0342FA08 BL 0x1C16E00
	0x0342FA0C CBZ X0, 0x342FE94
	0x0342FA10 LDR W8, [X22 + 0x18]
	0x0342FA14 CMP W8, 0x1
	0x0342FA18 B.LS 0x342FE7C
	0x0342FA1C LDR X8, [X21]
	0x0342FA20 ADRP X9, 0xCC5000
	0x0342FA24 STR X8, [X22 + 0x28]
	0x0342FA28 LDR X8, [X19 + 0x30]
	0x0342FA2C LDR X9, [X9 + 0x478]
	0x0342FA30 STR X8, [X31 + 0x10]
	0x0342FA34 LDR X0, [X9]
	0x0342FA38 ADD X1, X31, 0x10
	0x0342FA3C BL 0x1C16E04
	0x0342FA40 MOV X21, X0
	0x0342FA44 CBZ X0, 0x342FA5C
	0x0342FA48 LDR X8, [X22]
	0x0342FA4C LDR X1, [X8 + 0x40]
	0x0342FA50 MOV X0, X21
	0x0342FA54 BL 0x1C16E00
	0x0342FA58 CBZ X0, 0x342FEA0
	0x0342FA5C LDR W8, [X22 + 0x18]
	0x0342FA60 CMP W8, 0x2
	0x0342FA64 B.LS 0x342FE80
	0x0342FA68 STR X21, [X22 + 0x30]
	0x0342FA6C ADRP X21, 0xCCD000
	0x0342FA70 LDR X21, [X21 + 0x720]
	0x0342FA74 LDR X0, [X21]
	0x0342FA78 CBZ X0, 0x342FA90
	0x0342FA7C LDR X8, [X22]
	0x0342FA80 LDR X1, [X8 + 0x40]
	0x0342FA84 BL 0x1C16E00
	0x0342FA88 CBZ X0, 0x342FEAC
	0x0342FA8C LDR W8, [X22 + 0x18]
	0x0342FA90 CMP W8, 0x3
	0x0342FA94 B.LS 0x342FE84
	0x0342FA98 LDR X8, [X21]
	0x0342FA9C STR X8, [X22 + 0x38]
	0x0342FAA0 MOV X0, X22
	0x0342FAA4 MOV X1, X31
	0x0342FAA8 BL 0x3227578
	0x0342FAAC MOV X21, X0
	0x0342FAB0 LDR X22, [X19 + 0x38]
	0x0342FAB4 CBZ X22, 0x342FB00
	0x0342FAB8 LDR X0, [X23]
	0x0342FABC LDR W8, [X0 + 0xE0]
	0x0342FAC0 CBNZ W8, 0x342FAC8
	0x0342FAC4 BL 0x1C16DFC
	0x0342FAC8 MOV X0, X22
	0x0342FACC MOV X1, X31
	0x0342FAD0 BL 0x3624D20
	0x0342FAD4 ADRP X8, 0xCFF000
	0x0342FAD8 LDR X8, [X8 + 0xF20]
	0x0342FADC ADRP X9, 0xCCD000
	0x0342FAE0 LDR X9, [X9 + 0x720]
	0x0342FAE4 MOV X2, X0
	0x0342FAE8 LDR X1, [X8]
	0x0342FAEC LDR X3, [X9]
	0x0342FAF0 MOV X0, X21
	0x0342FAF4 MOV X4, X31
	0x0342FAF8 BL 0x32277C4
	0x0342FAFC MOV X21, X0
	0x0342FB00 CBZ X24, 0x342FE50
	0x0342FB04 LDR X0, [X24 + 0x20]
	0x0342FB08 CBZ X0, 0x342FE54
	0x0342FB0C MOV X1, X31
	0x0342FB10 BL 0x361B448
	0x0342FB14 ADRP X8, 0xCCD000
	0x0342FB18 LDR X8, [X8 + 0x8D8]
	0x0342FB1C MOV X22, X0
	0x0342FB20 LDR X0, [X8]
	0x0342FB24 MOVZ W1, 0x1
	0x0342FB28 BL 0x1C16D6C
	0x0342FB2C MOV X1, X0
	0x0342FB30 CBZ X1, 0x342FE58
	0x0342FB34 LDR W8, [X1 + 0x18]
	0x0342FB38 CBZ W8, 0x342FE5C
	0x0342FB3C MOVZ W8, 0x2F
	0x0342FB40 STRH W8, [X1 + 0x20]
	0x0342FB44 CBZ X22, 0x342FE60
	0x0342FB48 MOV X0, X22
	0x0342FB4C MOV X2, X31
	0x0342FB50 BL 0x322BC58
	0x0342FB54 MOV X1, X20
	0x0342FB58 MOV X2, X31
	0x0342FB5C BL 0x321B938
	0x0342FB60 ADRP X8, 0xCCD000
	0x0342FB64 LDR X8, [X8 + 0x3A0]
	0x0342FB68 MOV X22, X0
	0x0342FB6C LDR X23, [X24 + 0x20]
	0x0342FB70 LDR X0, [X8]
	0x0342FB74 BL 0x1C16F10
	0x0342FB78 MOV X20, X0
	0x0342FB7C MOV X1, X23
	0x0342FB80 MOV X2, X31
	0x0342FB84 BL 0x36281F8
	0x0342FB88 CBZ X20, 0x342FE64
	0x0342FB8C MOV X0, X20
	0x0342FB90 MOV X1, X22
	0x0342FB94 MOV X2, X31
	0x0342FB98 BL 0x36288CC
	0x0342FB9C MOV X0, X20
	0x0342FBA0 MOV X1, X21
	0x0342FBA4 MOV X2, X31
	0x0342FBA8 BL 0x3628980
	0x0342FBAC MOV X0, X20
	0x0342FBB0 MOV X1, X31
	0x0342FBB4 BL 0x3628A38
	0x0342FBB8 ADRP X8, 0xCED000
	0x0342FBBC ADRP X9, 0xCC5000
	0x0342FBC0 LDR X8, [X8 + 0x4D0]
	0x0342FBC4 LDR X9, [X9 + 0x6D0]
	0x0342FBC8 MOV X20, X0
	0x0342FBCC LDR X21, [X8]
	0x0342FBD0 LDR X0, [X9]
	0x0342FBD4 BL 0x1C16F10
	0x0342FBD8 ADRP X8, 0xCC5000
	0x0342FBDC LDR X8, [X8 + 0x6C0]
	0x0342FBE0 MOV X22, X0
	0x0342FBE4 LDR X1, [X8]
	0x0342FBE8 BL 0x2AA4804
	0x0342FBEC ADRP X8, 0xCFF000
	0x0342FBF0 LDR X8, [X8 + 0x7D8]
	0x0342FBF4 LDR X1, [X19 + 0x48]
	0x0342FBF8 LDR X0, [X8]
	0x0342FBFC MOV X2, X31
	0x0342FC00 BL 0x321B938
	0x0342FC04 CBZ X22, 0x342FE68
	0x0342FC08 ADRP X8, 0xCFF000
	0x0342FC0C LDR X8, [X8 + 0x7D0]
	0x0342FC10 ADRP X9, 0xCC5000
	0x0342FC14 LDR X9, [X9 + 0x810]
	0x0342FC18 MOV X2, X0
	0x0342FC1C LDR X1, [X8]
	0x0342FC20 LDR X3, [X9]
	0x0342FC24 MOV X0, X22
	0x0342FC28 BL 0x2AA5098
	0x0342FC2C LDR X23, [X24 + 0x10]
	0x0342FC30 CBZ X23, 0x342FE6C
	0x0342FC34 ADRP X10, 0xCFF000
	0x0342FC38 LDR X10, [X10 + 0x7B8]
	0x0342FC3C LDR X8, [X23]
	0x0342FC40 LDR W25, [X24 + 0x18]
	0x0342FC44 LDP X26, X24, [X19 + 0x50]
	0x0342FC48 LDR X1, [X10]
	0x0342FC4C LDRH W9, [X8 + 0x12E]
	0x0342FC50 CBZ X9, 0x342FC74
	0x0342FC54 LDR X10, [X8 + 0xB0]
	0x0342FC58 ADD X10, X10, 0x8
	0x0342FC5C LDUR X11, [X10 - 0x8]
	0x0342FC60 CMP X11, X1
	0x0342FC64 B.EQ 0x342FC9C
	0x0342FC68 SUBS X9, X9, 0x1
	0x0342FC6C ADD X10, X10, 0x10
	0x0342FC70 B.NE 0x342FC5C
	0x0342FC74 MOVZ W2, 0x3
	0x0342FC78 MOV X0, X23
	0x0342FC7C BL 0x1C5C788
	0x0342FC80 B 0x342FCAC
	0x0342FC84 LDR X8, [X19 + 0x60]
	0x0342FC88 MOVN W9, 0x0
	0x0342FC8C STR X8, [X31 + 0x18]
	0x0342FC90 STR X31, [X19 + 0x60]
	0x0342FC94 STR W9, [X19]
	0x0342FC98 B 0x342FD08
	0x0342FC9C LDR W9, [X10]
	0x0342FCA0 ADD W9, W9, 0x3
	0x0342FCA4 ADD X8, X8, W9, 0x4, SXTW
	0x0342FCA8 ADD X0, X8, 0x138
	0x0342FCAC LDP X8, X9, [X0]
	0x0342FCB0 MOV X0, X23
	0x0342FCB4 MOV X1, X21
	0x0342FCB8 MOV X2, X20
	0x0342FCBC MOV X3, X22
	0x0342FCC0 MOV X4, X31
	0x0342FCC4 MOV W5, W25
	0x0342FCC8 MOV X6, X26
	0x0342FCCC MOV X7, X24
	0x0342FCD0 STR X9, [X31]
	0x0342FCD4 BLR X8
	0x0342FCD8 CBZ X0, 0x342FE70
	0x0342FCDC ADRP X8, 0xCC7000
	0x0342FCE0 LDR X8, [X8 + 0x1F8]
	0x0342FCE4 LDR X1, [X8]
	0x0342FCE8 BL 0x269F5D0
	0x0342FCEC ADRP X8, 0xCC7000
	0x0342FCF0 LDR X8, [X8 + 0x1F0]
	0x0342FCF4 STR X0, [X31 + 0x18]
	0x0342FCF8 LDR X1, [X8]
	0x0342FCFC ADD X0, X31, 0x18
	0x0342FD00 BL 0x2677430
	0x0342FD04 TBZ X0, 0x0, 0x342FD64
	0x0342FD08 ADRP X8, 0xCC7000
	0x0342FD0C LDR X8, [X8 + 0x1E0]
	0x0342FD10 ADD X0, X31, 0x18
	0x0342FD14 LDR X1, [X8]
	0x0342FD18 BL 0x2677474
	0x0342FD1C ADRP X8, 0xD00000
	0x0342FD20 LDR X8, [X8 + 0xF8]
	0x0342FD24 LDR X1, [X8]
	0x0342FD28 BL 0x220E6DC
	0x0342FD2C MOVN W8, 0x1
	0x0342FD30 STR W8, [X19], #0x8
	0x0342FD34 MOV X20, X0
	0x0342FD38 LDR X0, [X27]
	0x0342FD3C ADRP X21, 0xD00000
	0x0342FD40 LDR W8, [X0 + 0xE0]
	0x0342FD44 LDR X21, [X21 + 0xF0]
	0x0342FD48 CBNZ W8, 0x342FD50
	0x0342FD4C BL 0x1C16DFC
	0x0342FD50 LDR X2, [X21]
	0x0342FD54 MOV X0, X19
	0x0342FD58 MOV X1, X20
	0x0342FD5C BL 0x26322B0
	0x0342FD60 B 0x342FD9C
	0x0342FD64 STR W31, [X19]
	0x0342FD68 LDR X8, [X31 + 0x18]
	0x0342FD6C STR X8, [X19 + 0x60]
	0x0342FD70 LDR X0, [X27]
	0x0342FD74 LDR W8, [X0 + 0xE0]
	0x0342FD78 CBNZ W8, 0x342FD80
	0x0342FD7C BL 0x1C16DFC
	0x0342FD80 ADRP X8, 0xD00000
	0x0342FD84 LDR X8, [X8 + 0xE8]
	0x0342FD88 ADD X0, X19, 0x8
	0x0342FD8C LDR X3, [X8]
	0x0342FD90 ADD X1, X31, 0x18
	0x0342FD94 MOV X2, X19
	0x0342FD98 BL 0x1FB43FC
	0x0342FD9C LDP X20, X19, [X31 + 0x60]
	0x0342FDA0 LDP X22, X21, [X31 + 0x50]
	0x0342FDA4 LDP X24, X23, [X31 + 0x40]
	0x0342FDA8 LDP X26, X25, [X31 + 0x30]
	0x0342FDAC LDP X30, X27, [X31 + 0x20]
	0x0342FDB0 ADD X31, X31, 0x70
	0x0342FDB4 RET
	0x0342FDB8 ADRP X0, 0xCCC000
	0x0342FDBC LDR X0, [X0 + 0x578]
	0x0342FDC0 BL 0x1C16D08
	0x0342FDC4 BL 0x1C16F10
	0x0342FDC8 MOV X20, X0
	0x0342FDCC ADRP X0, 0xD00000
	0x0342FDD0 LDR X0, [X0 + 0x118]
	0x0342FDD4 BL 0x1C16D08
	0x0342FDD8 MOV X1, X0
	0x0342FDDC MOV X0, X20
	0x0342FDE0 MOV X2, X31
	0x0342FDE4 BL 0x3314A68
	0x0342FDE8 ADRP X0, 0xD00000
	0x0342FDEC LDR X0, [X0 + 0x120]
	0x0342FDF0 BL 0x1C16D08
	0x0342FDF4 MOV X1, X0
	0x0342FDF8 MOV X0, X20
	0x0342FDFC BL 0x1C16DEC
	0x0342FE00 ADRP X0, 0xCCC000
	0x0342FE04 LDR X0, [X0 + 0x578]
	0x0342FE08 BL 0x1C16D08
	0x0342FE0C BL 0x1C16F10
	0x0342FE10 MOV X20, X0
	0x0342FE14 ADRP X0, 0xD00000
	0x0342FE18 LDR X0, [X0 + 0x128]
	0x0342FE1C BL 0x1C16D08
	0x0342FE20 MOV X1, X0
	0x0342FE24 MOV X0, X20
	0x0342FE28 MOV X2, X31
	0x0342FE2C BL 0x3314A68
	0x0342FE30 ADRP X0, 0xD00000
	0x0342FE34 LDR X0, [X0 + 0x120]
	0x0342FE38 BL 0x1C16D08
	0x0342FE3C MOV X1, X0
	0x0342FE40 MOV X0, X20
	0x0342FE44 BL 0x1C16DEC
	0x0342FE48 BL 0x1C16F20
	0x0342FE4C BL 0x1C16F20
	0x0342FE50 BL 0x1C16F20
	0x0342FE54 BL 0x1C16F20
	0x0342FE58 BL 0x1C16F20
	0x0342FE5C BL 0x1C16F28
	0x0342FE60 BL 0x1C16F20
	0x0342FE64 BL 0x1C16F20
	0x0342FE68 BL 0x1C16F20
	0x0342FE6C BL 0x1C16F20
	0x0342FE70 BL 0x1C16F20
	0x0342FE74 BL 0x1C16F20
	0x0342FE78 BL 0x1C16F28
	0x0342FE7C BL 0x1C16F28
	0x0342FE80 BL 0x1C16F28
	0x0342FE84 BL 0x1C16F28
	0x0342FE88 BL 0x1C16F44
	0x0342FE8C MOV X1, X31
	0x0342FE90 BL 0x1C16DEC
	0x0342FE94 BL 0x1C16F44
	0x0342FE98 MOV X1, X31
	0x0342FE9C BL 0x1C16DEC
	0x0342FEA0 BL 0x1C16F44
	0x0342FEA4 MOV X1, X31
	0x0342FEA8 BL 0x1C16DEC
	0x0342FEAC BL 0x1C16F44
	0x0342FEB0 MOV X1, X31
	0x0342FEB4 BL 0x1C16DEC
	0x0342FEB8 B 0x342FF48
	0x0342FEBC B 0x342FF48
	0x0342FEC0 B 0x342FF48
	0x0342FEC4 B 0x342FF48
	0x0342FEC8 B 0x342FF48
	0x0342FECC B 0x342FF48
	0x0342FED0 B 0x342FF48
	0x0342FED4 B 0x342FF48
	0x0342FED8 B 0x342FF48
	0x0342FEDC B 0x342FF48
	0x0342FEE0 B 0x342FF48
	0x0342FEE4 B 0x342FF48
	0x0342FEE8 B 0x342FF48
	0x0342FEEC B 0x342FF48
	0x0342FEF0 B 0x342FF48
	0x0342FEF4 B 0x342FF48
	0x0342FEF8 B 0x342FF48
	0x0342FEFC B 0x342FF48
	0x0342FF00 B 0x342FF48
	0x0342FF04 B 0x342FF48
	0x0342FF08 B 0x342FF48
	0x0342FF0C B 0x342FF48
	0x0342FF10 B 0x342FF48
	0x0342FF14 B 0x342FF48
	0x0342FF18 B 0x342FF48
	0x0342FF1C B 0x342FF48
	0x0342FF20 B 0x342FF48
	0x0342FF24 B 0x342FF48
	0x0342FF28 B 0x342FF48
	0x0342FF2C B 0x342FF48
	0x0342FF30 B 0x342FF48
	0x0342FF34 B 0x342FF48
	0x0342FF38 B 0x342FF48
	0x0342FF3C B 0x342FF48
	0x0342FF40 B 0x342FF48
	0x0342FF44 B 0x342FF48
	0x0342FF48 MOV X20, X0
	0x0342FF4C CMP W1, 0x1
	0x0342FF50 B.NE 0x342FFEC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xFAF000
	013 Move W8, [X20+1623]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {114}
	019 Move X0, 0xD01000
	020 Move X0, [X0+96]
	021 Call 0x1C17CF4
	022 Move X0, 0xD01000
	023 Move X0, [X0+104]
	024 Call 0x1C17CF4
	025 Move X0, 0xD00000
	026 Move X0, [X0+1568]
	027 Call 0x1C17CF4
	028 Move X0, 0xCCE000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC6000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC6000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCC6000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xD00000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xD01000
	044 Move X0, [X0+112]
	045 Call 0x1C17CF4
	046 Move X0, 0xD00000
	047 Move X0, [X0+2096]
	048 Call 0x1C17CF4
	049 Move X0, 0xCC9000
	050 Move X0, [X0+3056]
	051 Call 0x1C17CF4
	052 Move X0, 0xCC8000
	053 Move X0, [X0+3832]
	054 Call 0x1C17CF4
	055 Move X0, 0xCC6000
	056 Move X0, [X0+1144]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC5000
	059 Move X0, [X0+2512]
	060 Call 0x1C17CF4
	061 Move X0, 0xCC8000
	062 Move X0, [X0+480]
	063 Call 0x1C17CF4
	064 Move X0, 0xCC8000
	065 Move X0, [X0+496]
	066 Call 0x1C17CF4
	067 Move X0, 0xCC8000
	068 Move X0, [X0+504]
	069 Call 0x1C17CF4
	070 Move X0, 0xCCE000
	071 Move X0, [X0+928]
	072 Call 0x1C17CF4
	073 Move X0, 0xCC7000
	074 Move X0, [X0+2600]
	075 Call 0x1C17CF4
	076 Move X0, 0xD01000
	077 Move X0, [X0+120]
	078 Call 0x1C17CF4
	079 Move X0, 0xD01000
	080 Move X0, [X0+128]
	081 Call 0x1C17CF4
	082 Move X0, 0xCEE000
	083 Move X0, [X0+1232]
	084 Call 0x1C17CF4
	085 Move X0, 0xD01000
	086 Move X0, [X0+136]
	087 Call 0x1C17CF4
	088 Move X0, 0xD01000
	089 Move X0, [X0+144]
	090 Call 0x1C17CF4
	091 Move X0, 0xD01000
	092 Move X0, [X0+152]
	093 Call 0x1C17CF4
	094 Move X0, 0xCCE000
	095 Move X0, [X0+1824]
	096 Call 0x1C17CF4
	097 Move X0, 0xD00000
	098 Move X0, [X0+2000]
	099 Call 0x1C17CF4
	100 Move X0, 0xD00000
	101 Move X0, [X0+3864]
	102 Call 0x1C17CF4
	103 Move X0, 0xD01000
	104 Move X0, [X0+160]
	105 Call 0x1C17CF4
	106 Move X0, 0xD00000
	107 Move X0, [X0+2008]
	108 Call 0x1C17CF4
	109 Move X0, 0xCC5000
	110 Move X0, [X0+2440]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X20+1623], W8
	114 Move [X31+24], X31
	115 Move X27, 0xD00000
	116 Move W8, [X19]
	117 Move X27, [X27+1568]
	118 Compare W8, 0
	119 JumpIfEqual {525}
	120 Move X8, 0xD01000
	121 Move X9, 0xCC5000
	122 Move X8, [X8+136]
	123 Move X9, [X9+2440]
	124 Move X24, [X19+80]
	125 Move W10, [X19+32]
	126 Move X20, [X8]
	127 Move X21, [X9]
	128 Compare W10, 0
	129 JumpIfEqual {201}
	130 Move X8, 0xCC5000
	131 Move X8, [X8+2512]
	132 Move X0, [X8]
	133 Move W1, 4
	134 Call 0x1C17D6C
	135 Move X22, X0
	136 Compare X0, 0
	137 JumpIfEqual {625}
	138 Compare X21, 0
	139 JumpIfEqual {146}
	140 Move X8, [X22]
	141 Move X1, [X8+64]
	142 Move X0, X21
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {641}
	146 Move W8, [X22+24]
	147 Compare W8, 0
	148 JumpIfEqual {626}
	149 Move [X22+32], X21
	150 Move X21, 0xD00000
	151 Move X21, [X21+3864]
	152 Move X0, [X21]
	153 Compare X0, 0
	154 JumpIfEqual {161}
	155 Move X8, [X22]
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {644}
	160 Move W8, [X22+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X8, [X21]
	163 Move X9, 0xCC6000
	164 Move [X22+40], X8
	165 Move X8, [X19+32]
	166 Move X9, [X9+1144]
	167 Move [X31+16], X8
	168 Move X0, [X9]
	169 Add X1, X31, 16
	170 Call 0x1C17E04
	171 Move X21, X0
	172 Compare X0, 0
	173 JumpIfEqual {180}
	174 Move X8, [X22]
	175 Move X1, [X8+64]
	176 Move X0, X21
	177 Call 0x1C17E00
	178 Compare X0, 0
	179 JumpIfEqual {647}
	180 Move W8, [X22+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move [X22+48], X21
	183 Move X21, 0xCCE000
	184 Move X21, [X21+1824]
	185 Move X0, [X21]
	186 Compare X0, 0
	187 JumpIfEqual {194}
	188 Move X8, [X22]
	189 Move X1, [X8+64]
	190 Call 0x1C17E00
	191 Compare X0, 0
	192 JumpIfEqual {650}
	193 Move W8, [X22+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X8, [X21]
	196 Move [X22+56], X8
	197 Move X0, X22
	198 Move X1, X31
	199 Call String.Concat, X0
	200 Move X21, X0
	201 Move X0, X19
	202 Add X0, X0, 40
	203 Move W8, [X0]
	204 Compare W8, 0
	205 JumpIfEqual {225}
	206 Move X8, 0xD00000
	207 Move X8, [X8+2096]
	208 Move X1, [X8]
	209 Call Nullable`1<Boolean>.ToString, X0
	210 Compare X0, 0
	211 JumpIfEqual {629}
	212 Move X1, X31
	213 Call String.ToLower, X0
	214 Move X8, 0xD01000
	215 Move X8, [X8+120]
	216 Move X9, 0xCCE000
	217 Move X9, [X9+1824]
	218 Move X2, X0
	219 Move X1, [X8]
	220 Move X3, [X9]
	221 Move X0, X21
	222 Move X4, X31
	223 Call String.Concat, X0, X1, X2, X3
	224 Move X21, X0
	225 Move X22, [X19+48]
	226 Compare X22, 0
	227 JumpIfEqual {249}
	228 Move X8, 0xCC7000
	229 Move X8, [X8+2600]
	230 Move X0, [X8]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X0, X22
	236 Move X1, X31
	237 Call Uri.EscapeDataString, X0
	238 Move X8, 0xD01000
	239 Move X8, [X8+152]
	240 Move X9, 0xCCE000
	241 Move X9, [X9+1824]
	242 Move X2, X0
	243 Move X1, [X8]
	244 Move X3, [X9]
	245 Move X0, X21
	246 Move X4, X31
	247 Call String.Concat, X0, X1, X2, X3
	248 Move X21, X0
	249 Move W8, [X19+56]
	250 Compare W8, 0
	251 JumpIfEqual {323}
	252 Move X8, 0xCC5000
	253 Move X8, [X8+2512]
	254 Move X0, [X8]
	255 Move W1, 4
	256 Call 0x1C17D6C
	257 Move X22, X0
	258 Compare X0, 0
	259 JumpIfEqual {631}
	260 Compare X21, 0
	261 JumpIfEqual {268}
	262 Move X8, [X22]
	263 Move X1, [X8+64]
	264 Move X0, X21
	265 Call 0x1C17E00
	266 Compare X0, 0
	267 JumpIfEqual {653}
	268 Move W8, [X22+24]
	269 Compare W8, 0
	270 JumpIfEqual {632}
	271 Move [X22+32], X21
	272 Move X21, 0xD01000
	273 Move X21, [X21+144]
	274 Move X0, [X21]
	275 Compare X0, 0
	276 JumpIfEqual {283}
	277 Move X8, [X22]
	278 Move X1, [X8+64]
	279 Call 0x1C17E00
	280 Compare X0, 0
	281 JumpIfEqual {656}
	282 Move W8, [X22+24]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X8, [X21]
	285 Move X9, 0xCC6000
	286 Move [X22+40], X8
	287 Move X8, [X19+56]
	288 Move X9, [X9+1144]
	289 Move [X31+16], X8
	290 Move X0, [X9]
	291 Add X1, X31, 16
	292 Call 0x1C17E04
	293 Move X21, X0
	294 Compare X0, 0
	295 JumpIfEqual {302}
	296 Move X8, [X22]
	297 Move X1, [X8+64]
	298 Move X0, X21
	299 Call 0x1C17E00
	300 Compare X0, 0
	301 JumpIfEqual {659}
	302 Move W8, [X22+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move [X22+48], X21
	305 Move X21, 0xCCE000
	306 Move X21, [X21+1824]
	307 Move X0, [X21]
	308 Compare X0, 0
	309 JumpIfEqual {316}
	310 Move X8, [X22]
	311 Move X1, [X8+64]
	312 Call 0x1C17E00
	313 Compare X0, 0
	314 JumpIfEqual {662}
	315 Move W8, [X22+24]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X8, [X21]
	318 Move [X22+56], X8
	319 Move X0, X22
	320 Move X1, X31
	321 Call String.Concat, X0
	322 Move X21, X0
	323 Move W8, [X19+64]
	324 Compare W8, 0
	325 JumpIfEqual {397}
	326 Move X8, 0xCC5000
	327 Move X8, [X8+2512]
	328 Move X0, [X8]
	329 Move W1, 4
	330 Call 0x1C17D6C
	331 Move X22, X0
	332 Compare X0, 0
	333 JumpIfEqual {635}
	334 Compare X21, 0
	335 JumpIfEqual {342}
	336 Move X8, [X22]
	337 Move X1, [X8+64]
	338 Move X0, X21
	339 Call 0x1C17E00
	340 Compare X0, 0
	341 JumpIfEqual {665}
	342 Move W8, [X22+24]
	343 Compare W8, 0
	344 JumpIfEqual {637}
	345 Move [X22+32], X21
	346 Move X21, 0xD01000
	347 Move X21, [X21+160]
	348 Move X0, [X21]
	349 Compare X0, 0
	350 JumpIfEqual {357}
	351 Move X8, [X22]
	352 Move X1, [X8+64]
	353 Call 0x1C17E00
	354 Compare X0, 0
	355 JumpIfEqual {668}
	356 Move W8, [X22+24]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X8, [X21]
	359 Move X9, 0xCC6000
	360 Move [X22+40], X8
	361 Move X8, [X19+64]
	362 Move X9, [X9+1144]
	363 Move [X31+16], X8
	364 Move X0, [X9]
	365 Add X1, X31, 16
	366 Call 0x1C17E04
	367 Move X21, X0
	368 Compare X0, 0
	369 JumpIfEqual {376}
	370 Move X8, [X22]
	371 Move X1, [X8+64]
	372 Move X0, X21
	373 Call 0x1C17E00
	374 Compare X0, 0
	375 JumpIfEqual {671}
	376 Move W8, [X22+24]
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move [X22+48], X21
	379 Move X21, 0xCCE000
	380 Move X21, [X21+1824]
	381 Move X0, [X21]
	382 Compare X0, 0
	383 JumpIfEqual {390}
	384 Move X8, [X22]
	385 Move X1, [X8+64]
	386 Call 0x1C17E00
	387 Compare X0, 0
	388 JumpIfEqual {674}
	389 Move W8, [X22+24]
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X8, [X21]
	392 Move [X22+56], X8
	393 Move X0, X22
	394 Move X1, X31
	395 Call String.Concat, X0
	396 Move X21, X0
	397 Move X22, [X19+72]
	398 Compare X22, 0
	399 JumpIfEqual {421}
	400 Move X8, 0xCC7000
	401 Move X8, [X8+2600]
	402 Move X0, [X8]
	403 Move W8, [X0+224]
	404 Compare W8, 0
	405 JumpIfNotEqual {407}
	406 Call 0x1C17DFC
	407 Move X0, X22
	408 Move X1, X31
	409 Call Uri.EscapeDataString, X0
	410 Move X8, 0xD01000
	411 Move X8, [X8+128]
	412 Move X9, 0xCCE000
	413 Move X9, [X9+1824]
	414 Move X2, X0
	415 Move X1, [X8]
	416 Move X3, [X9]
	417 Move X0, X21
	418 Move X4, X31
	419 Call String.Concat, X0, X1, X2, X3
	420 Move X21, X0
	421 Compare X24, 0
	422 JumpIfEqual {616}
	423 Move X0, [X24+32]
	424 Compare X0, 0
	425 JumpIfEqual {617}
	426 Move X1, X31
	427 Call Uri.get_AbsolutePath, X0
	428 Move X8, 0xCCE000
	429 Move X8, [X8+2264]
	430 Move X22, X0
	431 Move X0, [X8]
	432 Move W1, 1
	433 Call 0x1C17D6C
	434 Move X1, X0
	435 Compare X1, 0
	436 JumpIfEqual {618}
	437 Move W8, [X1+24]
	438 Compare W8, 0
	439 JumpIfEqual {619}
	440 Move W8, 47
	441 NotImplemented "Instruction STRH not yet implemented."
	442 Compare X22, 0
	443 JumpIfEqual {620}
	444 Move X0, X22
	445 Move X2, X31
	446 Call String.TrimEnd, X0, X1
	447 Move X1, X20
	448 Move X2, X31
	449 Call String.Concat, X0, X1
	450 Move X8, 0xCCE000
	451 Move X8, [X8+928]
	452 Move X22, X0
	453 Move X23, [X24+32]
	454 Move X0, [X8]
	455 Call 0x1C17F10
	456 Move X20, X0
	457 Move X1, X23
	458 Move X2, X31
	459 Call UriBuilder..ctor, X0, X1
	460 Compare X20, 0
	461 JumpIfEqual {621}
	462 Move X0, X20
	463 Move X1, X22
	464 Move X2, X31
	465 Call UriBuilder.set_Path, X0, X1
	466 Move X0, X20
	467 Move X1, X21
	468 Move X2, X31
	469 Call UriBuilder.set_Query, X0, X1
	470 Move X0, X20
	471 Move X1, X31
	472 Call UriBuilder.get_Uri, X0
	473 Move X8, 0xCEE000
	474 Move X9, 0xCC6000
	475 Move X8, [X8+1232]
	476 Move X9, [X9+1744]
	477 Move X20, X0
	478 Move X21, [X8]
	479 Move X0, [X9]
	480 Call 0x1C17F10
	481 Move X8, 0xCC6000
	482 Move X8, [X8+1728]
	483 Move X22, X0
	484 Move X1, [X8]
	485 Call Dictionary`2<Object, Object>..ctor, X0
	486 Move X8, 0xD00000
	487 Move X8, [X8+2008]
	488 Move X1, [X19+88]
	489 Move X0, [X8]
	490 Move X2, X31
	491 Call String.Concat, X0, X1
	492 Compare X22, 0
	493 JumpIfEqual {622}
	494 Move X8, 0xD00000
	495 Move X8, [X8+2000]
	496 Move X9, 0xCC6000
	497 Move X9, [X9+2064]
	498 Move X2, X0
	499 Move X1, [X8]
	500 Move X3, [X9]
	501 Move X0, X22
	502 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	503 Move X23, [X24+16]
	504 Compare X23, 0
	505 JumpIfEqual {623}
	506 Move X10, 0xD00000
	507 Move X10, [X10+1976]
	508 Move X8, [X23]
	509 Move W25, [X24+24]
	510 Move X26, [X19+96]
	511 Move X24, [X19+104]
	512 Move X1, [X10]
	513 NotImplemented "Instruction LDRH not yet implemented."
	514 Compare X9, 0
	515 JumpIfEqual {522}
	516 Move X10, [X8+176]
	517 Add X10, X10, 8
	518 NotImplemented "Instruction LDUR not yet implemented."
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Subtract X9, X9, 1
	521 Add X10, X10, 16
	522 Move W2, 3
	523 Move X0, X23
	524 Call 0x1C5D788
	525 Move X8, [X19+112]
	526 Move TEMP, 0
	527 Not TEMP
	528 Move W9, TEMP
	529 Move [X31+24], X8
	530 Move [X19+112], X31
	531 Move [X19], W9
	532 Move W9, [X10]
	533 Add W9, W9, 3
	534 Add X8, X8, W9
	535 Add X0, X8, 312
	536 Move X8, [X0]
	537 Move X9, [X0+8]
	538 Move X0, X23
	539 Move X1, X21
	540 Move X2, X20
	541 Move X3, X22
	542 Move X4, X31
	543 Move W5, W25
	544 Move X6, X26
	545 Move X7, X24
	546 Move [X31], X9
	547 NotImplemented "Instruction BLR not yet implemented."
	548 Compare X0, 0
	549 JumpIfEqual {624}
	550 Move X8, 0xCC8000
	551 Move X8, [X8+504]
	552 Move X1, [X8]
	553 Call Task`1<Object>.GetAwaiter, X0
	554 Move X8, 0xCC8000
	555 Move X8, [X8+496]
	556 Move [X31+24], X0
	557 Move X1, [X8]
	558 Add X0, X31, 24
	559 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	560 Move TEMP, X0
	561 And TEMP, TEMP, 1
	562 Compare TEMP, 1
	563 JumpIfNotEqual {589}
	564 Move X8, 0xCC8000
	565 Move X8, [X8+480]
	566 Add X0, X31, 24
	567 Move X1, [X8]
	568 Call TaskAwaiter`1<Object>.GetResult, X0
	569 Move X8, 0xD01000
	570 Move X8, [X8+112]
	571 Move X1, [X8]
	572 Call JsonParser.FromJson, X0
	573 Move TEMP, 1
	574 Not TEMP
	575 Move W8, TEMP
	576 Move [X19+8], W8
	577 Move X20, X0
	578 Move X0, [X27]
	579 Move X21, 0xD01000
	580 Move W8, [X0+224]
	581 Move X21, [X21+104]
	582 Compare W8, 0
	583 JumpIfNotEqual {585}
	584 Call 0x1C17DFC
	585 Move X2, [X21]
	586 Move X0, X19
	587 Move X1, X20
	588 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	589 Move [X19], W31
	590 Move X8, [X31+24]
	591 Move [X19+112], X8
	592 Move X0, [X27]
	593 Move W8, [X0+224]
	594 Compare W8, 0
	595 JumpIfNotEqual {597}
	596 Call 0x1C17DFC
	597 Move X8, 0xD01000
	598 Move X8, [X8+96]
	599 Add X0, X19, 8
	600 Move X3, [X8]
	601 Add X1, X31, 24
	602 Move X2, X19
	603 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	604 Move X20, [X31+96]
	605 Move X19, [X31+104]
	606 Move X22, [X31+80]
	607 Move X21, [X31+88]
	608 Move X24, [X31+64]
	609 Move X23, [X31+72]
	610 Move X26, [X31+48]
	611 Move X25, [X31+56]
	612 Move X30, [X31+32]
	613 Move X27, [X31+40]
	614 Add X31, X31, 112
	615 Return 
	616 Call 0x1C17F20
	617 Call 0x1C17F20
	618 Call 0x1C17F20
	619 Call 0x1C17F28
	620 Call 0x1C17F20
	621 Call 0x1C17F20
	622 Call 0x1C17F20
	623 Call 0x1C17F20
	624 Call 0x1C17F20
	625 Call 0x1C17F20
	626 Call 0x1C17F28
	627 Call 0x1C17F28
	628 Call 0x1C17F28
	629 Call 0x1C17F20
	630 Call 0x1C17F28
	631 Call 0x1C17F20
	632 Call 0x1C17F28
	633 Call 0x1C17F28
	634 Call 0x1C17F28
	635 Call 0x1C17F20
	636 Call 0x1C17F28
	637 Call 0x1C17F28
	638 Call 0x1C17F28
	639 Call 0x1C17F28
	640 Call 0x1C17F28
	641 Call 0x1C17F44
	642 Move X1, X31
	643 Call 0x1C17DEC
	644 Call 0x1C17F44
	645 Move X1, X31
	646 Call 0x1C17DEC
	647 Call 0x1C17F44
	648 Move X1, X31
	649 Call 0x1C17DEC
	650 Call 0x1C17F44
	651 Move X1, X31
	652 Call 0x1C17DEC
	653 Call 0x1C17F44
	654 Move X1, X31
	655 Call 0x1C17DEC
	656 Call 0x1C17F44
	657 Move X1, X31
	658 Call 0x1C17DEC
	659 Call 0x1C17F44
	660 Move X1, X31
	661 Call 0x1C17DEC
	662 Call 0x1C17F44
	663 Move X1, X31
	664 Call 0x1C17DEC
	665 Call 0x1C17F44
	666 Move X1, X31
	667 Call 0x1C17DEC
	668 Call 0x1C17F44
	669 Move X1, X31
	670 Call 0x1C17DEC
	671 Call 0x1C17F44
	672 Move X1, X31
	673 Call 0x1C17DEC
	674 Call 0x1C17F44
	675 Move X1, X31
	676 Call 0x1C17DEC
	677 Move X20, X0
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Move X0, X20
	680 Call 0x3EB2AD0
	681 Move X20, X0
	682 Move X0, 0xCC5000
	683 Move X0, [X0+2000]
	684 Call 0x1C17D08
	685 Move X8, [X20]
	686 Move X1, [X8]
	687 Call 0x1C18270
	688 Move TEMP, X0
	689 And TEMP, TEMP, 1
	690 Compare TEMP, 1
	691 JumpIfNotEqual {712}
	692 Move X20, [X20]
	693 Call 0x3EB2AE0
	694 Move TEMP, 1
	695 Not TEMP
	696 Move W8, TEMP
	697 Move [X19+8], W8
	698 Move X0, 0xD00000
	699 Move X0, [X0+1568]
	700 Call 0x1C17D08
	701 Move W8, [X0+224]
	702 Compare W8, 0
	703 JumpIfNotEqual {705}
	704 Call 0x1C17DFC
	705 Move X0, 0xD01000
	706 Move X0, [X0+168]
	707 Call 0x1C17D08
	708 Move X2, X0
	709 Move X0, X19
	710 Move X1, X20
	711 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	712 Move W0, 8
	713 Call 0x3EB2AF0
	714 Move X8, [X20]
	715 Move [X0], X8
	716 Move X1, 0xA86000
	717 Add X1, X1, 3672
	718 Move X2, X31
	719 Call 0x3EB2B00
	720 Move X20, X0
	721 Call 0x3EB2AE0
	722 Move X0, X20
	723 Call 0x1D2D690
	724 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342FF54 MOV X0, X20
	0x0342FF58 BL 0x3EB1AD0
	0x0342FF5C MOV X20, X0
	0x0342FF60 ADRP X0, 0xCC4000
	0x0342FF64 LDR X0, [X0 + 0x7D0]
	0x0342FF68 BL 0x1C16D08
	0x0342FF6C LDR X8, [X20]
	0x0342FF70 LDR X1, [X8]
	0x0342FF74 BL 0x1C17270
	0x0342FF78 TBZ X0, 0x0, 0x342FFC4
	0x0342FF7C LDR X20, [X20]
	0x0342FF80 BL 0x3EB1AE0
	0x0342FF84 MOVN W8, 0x1
	0x0342FF88 STR W8, [X19], #0x8
	0x0342FF8C ADRP X0, 0xCFF000
	0x0342FF90 LDR X0, [X0 + 0x6E0]
	0x0342FF94 BL 0x1C16D08
	0x0342FF98 LDR W8, [X0 + 0xE0]
	0x0342FF9C CBNZ W8, 0x342FFA4
	0x0342FFA0 BL 0x1C16DFC
	0x0342FFA4 ADRP X0, 0xD00000
	0x0342FFA8 LDR X0, [X0 + 0x130]
	0x0342FFAC BL 0x1C16D08
	0x0342FFB0 MOV X2, X0
	0x0342FFB4 MOV X0, X19
	0x0342FFB8 MOV X1, X20
	0x0342FFBC BL 0x26324C8
	0x0342FFC0 B 0x342FD9C
	0x0342FFC4 MOVZ W0, 0x8
	0x0342FFC8 BL 0x3EB1AF0
	0x0342FFCC LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFAF000
	007 Move X21, 0xD00000
	008 Move W8, [X22+1624]
	009 Move X21, [X21+1568]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD01000
	017 Move X0, [X0+176]
	018 Call 0x1C17CF4
	019 Move X0, 0xD00000
	020 Move X0, [X0+1568]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1624], W8
	024 Move X0, [X21]
	025 Move X21, 0xD01000
	026 Move W8, [X0+224]
	027 Move X21, [X21+176]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

