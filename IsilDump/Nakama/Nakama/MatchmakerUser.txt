Type: Nakama.MatchmakerUser

Method: System.Collections.Generic.IDictionary`2<System.String, System.Double> get_NumericProperties()

Disassembly:
	0x03475AD4 LDR X8, [X8]
	0x03475AD8 LDRB W11, [X9 + 0x130]
	0x03475ADC LDRB W10, [X8 + 0x130]
	0x03475AE0 CMP W11, W10
	0x03475AE4 B.CC 0x3475AFC
	0x03475AE8 LDR X9, [X9 + 0xC8]
	0x03475AEC ADD X9, X9, X10, 0x3, LSL
	0x03475AF0 LDUR X9, [X9 - 0x8]
	0x03475AF4 CMP X9, X8
	0x03475AF8 B.EQ 0x3475B0C
	0x03475AFC LDP X20, X19, [X31 + 0x10]
	0x03475B00 MOV W0, W31
	0x03475B04 LDP X30, X21, [X31], #0x20
	0x03475B08 RET
	0x03475B0C MOV X0, X20
	0x03475B10 MOV X1, X19
	0x03475B14 LDP X20, X19, [X31 + 0x10]
	0x03475B18 LDP X30, X21, [X31], #0x20
	0x03475B1C B 0x3475B20
	0x03475B20 STR X30, [X31 - 0x30]!
	0x03475B24 STP X22, X21, [X31 + 0x10]
	0x03475B28 STP X20, X19, [X31 + 0x20]
	0x03475B2C ADRP X21, 0xF68000
	0x03475B30 LDRB W8, [X21 + 0x81F]
	0x03475B34 MOV X19, X1
	0x03475B38 MOV X20, X0
	0x03475B3C TBNZ X8, 0x0, 0x3475B54
	0x03475B40 ADRP X0, 0xC7E000
	0x03475B44 LDR X0, [X0 + 0xF60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF69000
	005 Move W8, [X20+2057]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCBC000
	012 Move X0, [X0+2336]
	013 Call 0x1C17CF4
	014 Move X0, 0xCBC000
	015 Move X0, [X0+2344]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2057], W8
	019 Move X19, [X19+16]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCBC000
	023 Move X8, [X8+2344]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCBC000
	027 Move X8, [X8+2336]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Double>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.Double> get__numericProperties()

Disassembly:
	0x03475B48 BL 0x1C16CF4
	0x03475B4C MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set__numericProperties(System.Collections.Generic.Dictionary`2<System.String, System.Double> value)

Disassembly:
	0x03475B50 STRB W8, [X21 + 0x81F]
	0x03475B54 CBZ X19, 0x3475C64

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: Nakama.IUserPresence get_Presence()

Disassembly:
	0x03475B58 ADRP X22, 0xC7E000
	0x03475B5C LDR X8, [X19]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: Nakama.UserPresence get__presence()

Disassembly:
	0x03475B60 LDR X22, [X22 + 0xF60]
	0x03475B64 LDR X21, [X20 + 0x18]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__presence(Nakama.UserPresence value)

Disassembly:
	0x03475B68 LDRH W9, [X8 + 0x12E]
	0x03475B6C LDR X1, [X22]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_StringProperties()

Disassembly:
	0x03475B70 CBZ X9, 0x3475B94
	0x03475B74 LDR X10, [X8 + 0xB0]
	0x03475B78 ADD X10, X10, 0x8
	0x03475B7C LDUR X11, [X10 - 0x8]
	0x03475B80 CMP X11, X1
	0x03475B84 B.EQ 0x3475BA4
	0x03475B88 SUBS X9, X9, 0x1
	0x03475B8C ADD X10, X10, 0x10
	0x03475B90 B.NE 0x3475B7C
	0x03475B94 MOVZ W2, 0x1
	0x03475B98 MOV X0, X19
	0x03475B9C BL 0x1C5C788
	0x03475BA0 B 0x3475BB4
	0x03475BA4 LDR W9, [X10]
	0x03475BA8 ADD W9, W9, 0x1
	0x03475BAC ADD X8, X8, W9, 0x4, SXTW
	0x03475BB0 ADD X0, X8, 0x138
	0x03475BB4 LDP X8, X1, [X0]
	0x03475BB8 MOV X0, X19
	0x03475BBC BLR X8
	0x03475BC0 MOV X1, X0
	0x03475BC4 MOV X0, X21
	0x03475BC8 MOV X2, X31
	0x03475BCC BL 0x3226C14
	0x03475BD0 TBZ X0, 0x0, 0x3475C18
	0x03475BD4 LDR X8, [X19]
	0x03475BD8 LDR X20, [X20 + 0x30]
	0x03475BDC LDR X1, [X22]
	0x03475BE0 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF69000
	005 Move W8, [X20+2058]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xC80000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xC80000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2058], W8
	019 Move X19, [X19+32]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xC80000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xC80000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__stringProperties()

Disassembly:
	0x03475BE4 CBZ X9, 0x3475C08
	0x03475BE8 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set__stringProperties(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03475BEC ADD X10, X10, 0x8
	0x03475BF0 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03475BF4 CMP X11, X1
	0x03475BF8 B.EQ 0x3475C2C
	0x03475BFC SUBS X9, X9, 0x1
	0x03475C00 ADD X10, X10, 0x10
	0x03475C04 B.NE 0x3475BF0
	0x03475C08 MOVZ W2, 0x4
	0x03475C0C MOV X0, X19
	0x03475C10 BL 0x1C5C788
	0x03475C14 B 0x3475C3C
	0x03475C18 LDP X20, X19, [X31 + 0x20]
	0x03475C1C LDP X22, X21, [X31 + 0x10]
	0x03475C20 MOV W0, W31
	0x03475C24 LDR X30, [X31], #0x30
	0x03475C28 RET
	0x03475C2C LDR W9, [X10]
	0x03475C30 ADD W9, W9, 0x4
	0x03475C34 ADD X8, X8, W9, 0x4, SXTW
	0x03475C38 ADD X0, X8, 0x138
	0x03475C3C LDP X8, X1, [X0]
	0x03475C40 MOV X0, X19
	0x03475C44 BLR X8
	0x03475C48 MOV X1, X0
	0x03475C4C MOV X0, X20
	0x03475C50 LDP X20, X19, [X31 + 0x20]
	0x03475C54 LDP X22, X21, [X31 + 0x10]
	0x03475C58 MOV X2, X31
	0x03475C5C LDR X30, [X31], #0x30
	0x03475C60 B 0x3226C14
	0x03475C64 BL 0x1C16F20
	0x03475C68 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF69000
	007 Move X22, 0xCBC000
	008 Move W8, [X20+2059]
	009 Move X22, [X22+2352]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xCBC000
	016 Move X0, [X0+2352]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2059], W8
	020 Move X0, X19
	021 Call MatchmakerUser.get_NumericProperties, X0
	022 Move X20, [X19+24]
	023 Move X21, X0
	024 Move X0, X19
	025 Call MatchmakerUser.get_StringProperties, X0
	026 Move X8, [X22]
	027 Move X1, X21
	028 Move X2, X20
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X3, X0
	034 Move X0, X8
	035 Move X4, X31
	036 Move X30, [X31+48]
	037 Call String.Format, X0, X1, X2, X3
	038 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03475C6C STP X20, X19, [X31 + 0x10]
	0x03475C70 MOV X19, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

