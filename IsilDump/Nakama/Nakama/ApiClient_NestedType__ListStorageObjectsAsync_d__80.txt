Type: Nakama.ApiClient/<ListStorageObjectsAsync>d__80

Method: System.Void MoveNext()

Disassembly:
	0x03431074 BL 0x1C16CF4
	0x03431078 ADRP X0, 0xCFE000
	0x0343107C LDR X0, [X0 + 0x20]
	0x03431080 BL 0x1C16CF4
	0x03431084 ADRP X0, 0xCCB000
	0x03431088 LDR X0, [X0 + 0x720]
	0x0343108C BL 0x1C16CF4
	0x03431090 ADRP X0, 0xCFD000
	0x03431094 LDR X0, [X0 + 0x7D0]
	0x03431098 BL 0x1C16CF4
	0x0343109C ADRP X0, 0xCFD000
	0x034310A0 LDR X0, [X0 + 0xF18]
	0x034310A4 BL 0x1C16CF4
	0x034310A8 ADRP X0, 0xCFE000
	0x034310AC LDR X0, [X0 + 0x1B0]
	0x034310B0 BL 0x1C16CF4
	0x034310B4 ADRP X0, 0xCFD000
	0x034310B8 LDR X0, [X0 + 0x7D8]
	0x034310BC BL 0x1C16CF4
	0x034310C0 ADRP X0, 0xCC2000
	0x034310C4 LDR X0, [X0 + 0x988]
	0x034310C8 BL 0x1C16CF4
	0x034310CC ADRP X0, 0xCFD000
	0x034310D0 LDR X0, [X0 + 0xC78]
	0x034310D4 BL 0x1C16CF4
	0x034310D8 ADRP X0, 0xCFD000
	0x034310DC LDR X0, [X0 + 0xF20]
	0x034310E0 BL 0x1C16CF4
	0x034310E4 MOVZ W8, 0x1
	0x034310E8 STRB W8, [X20 + 0x661]
	0x034310EC STR X31, [X31 + 0x18]
	0x034310F0 ADRP X27, 0xCFD000
	0x034310F4 LDR W8, [X19]
	0x034310F8 LDR X27, [X27 + 0x730]
	0x034310FC CBZ W8, 0x34314D0
	0x03431100 LDR X21, [X19 + 0x20]
	0x03431104 CBZ X21, 0x3431604
	0x03431108 LDR X8, [X19 + 0x28]
	0x0343110C CBZ X8, 0x343164C
	0x03431110 ADRP X23, 0xCC4000
	0x03431114 LDR X23, [X23 + 0xA28]
	0x03431118 ADRP X8, 0xCFE000
	0x0343111C LDR X0, [X23]
	0x03431120 LDR X8, [X8 + 0x1B0]
	0x03431124 LDR X24, [X19 + 0x48]
	0x03431128 LDR W9, [X0 + 0xE0]
	0x0343112C LDR X20, [X8]
	0x03431130 CBNZ W9, 0x3431138
	0x03431134 BL 0x1C16DFC
	0x03431138 MOV X0, X21
	0x0343113C MOV X1, X31
	0x03431140 BL 0x3624D20
	0x03431144 CBZ X20, 0x3431694
	0x03431148 ADRP X8, 0xCFD000
	0x0343114C LDR X8, [X8 + 0xC78]
	0x03431150 MOV X2, X0
	0x03431154 LDR X1, [X8]
	0x03431158 MOV X0, X20
	0x0343115C MOV X3, X31
	0x03431160 BL 0x32293BC
	0x03431164 MOV X20, X0
	0x03431168 LDR X0, [X19 + 0x28]
	0x0343116C MOV X1, X31
	0x03431170 BL 0x3624D20
	0x03431174 CBZ X20, 0x3431698
	0x03431178 ADRP X8, 0xCFE000
	0x0343117C LDR X8, [X8 + 0x18]
	0x03431180 MOV X2, X0
	0x03431184 LDR X1, [X8]
	0x03431188 MOV X0, X20
	0x0343118C MOV X3, X31
	0x03431190 BL 0x32293BC
	0x03431194 ADRP X8, 0xCC2000
	0x03431198 LDR X8, [X8 + 0x988]
	0x0343119C LDRB W9, [X19 + 0x30]
	0x034311A0 MOV X20, X0
	0x034311A4 LDR X21, [X8]
	0x034311A8 CBZ W9, 0x34312AC
	0x034311AC ADRP X8, 0xCC2000
	0x034311B0 LDR X8, [X8 + 0x9D0]
	0x034311B4 LDR X0, [X8]
	0x034311B8 MOVZ W1, 0x4
	0x034311BC BL 0x1C16D6C
	0x034311C0 MOV X22, X0
	0x034311C4 CBZ X0, 0x34316C0
	0x034311C8 CBZ X21, 0x34311E0
	0x034311CC LDR X8, [X22]
	0x034311D0 LDR X1, [X8 + 0x40]
	0x034311D4 MOV X0, X21
	0x034311D8 BL 0x1C16E00
	0x034311DC CBZ X0, 0x34316D4
	0x034311E0 LDR W8, [X22 + 0x18]
	0x034311E4 CBZ W8, 0x34316C4
	0x034311E8 STR X21, [X22 + 0x20]
	0x034311EC ADRP X21, 0xCFD000
	0x034311F0 LDR X21, [X21 + 0xF18]
	0x034311F4 LDR X0, [X21]
	0x034311F8 CBZ X0, 0x3431210
	0x034311FC LDR X8, [X22]
	0x03431200 LDR X1, [X8 + 0x40]
	0x03431204 BL 0x1C16E00
	0x03431208 CBZ X0, 0x34316E0
	0x0343120C LDR W8, [X22 + 0x18]
	0x03431210 CMP W8, 0x1
	0x03431214 B.LS 0x34316C8
	0x03431218 LDR X8, [X21]
	0x0343121C ADRP X9, 0xCC3000
	0x03431220 STR X8, [X22 + 0x28]
	0x03431224 LDR X8, [X19 + 0x30]
	0x03431228 LDR X9, [X9 + 0x478]
	0x0343122C STR X8, [X31 + 0x10]
	0x03431230 LDR X0, [X9]
	0x03431234 ADD X1, X31, 0x10
	0x03431238 BL 0x1C16E04
	0x0343123C MOV X21, X0
	0x03431240 CBZ X0, 0x3431258
	0x03431244 LDR X8, [X22]
	0x03431248 LDR X1, [X8 + 0x40]
	0x0343124C MOV X0, X21
	0x03431250 BL 0x1C16E00
	0x03431254 CBZ X0, 0x34316EC
	0x03431258 LDR W8, [X22 + 0x18]
	0x0343125C CMP W8, 0x2
	0x03431260 B.LS 0x34316CC
	0x03431264 STR X21, [X22 + 0x30]
	0x03431268 ADRP X21, 0xCCB000
	0x0343126C LDR X21, [X21 + 0x720]
	0x03431270 LDR X0, [X21]
	0x03431274 CBZ X0, 0x343128C
	0x03431278 LDR X8, [X22]
	0x0343127C LDR X1, [X8 + 0x40]
	0x03431280 BL 0x1C16E00
	0x03431284 CBZ X0, 0x34316F8
	0x03431288 LDR W8, [X22 + 0x18]
	0x0343128C CMP W8, 0x3
	0x03431290 B.LS 0x34316D0
	0x03431294 LDR X8, [X21]
	0x03431298 STR X8, [X22 + 0x38]
	0x0343129C MOV X0, X22
	0x034312A0 MOV X1, X31
	0x034312A4 BL 0x3227578
	0x034312A8 MOV X21, X0
	0x034312AC LDR X22, [X19 + 0x38]
	0x034312B0 CBZ X22, 0x34312FC
	0x034312B4 LDR X0, [X23]
	0x034312B8 LDR W8, [X0 + 0xE0]
	0x034312BC CBNZ W8, 0x34312C4
	0x034312C0 BL 0x1C16DFC
	0x034312C4 MOV X0, X22
	0x034312C8 MOV X1, X31
	0x034312CC BL 0x3624D20
	0x034312D0 ADRP X8, 0xCFE000
	0x034312D4 LDR X8, [X8 + 0x20]
	0x034312D8 ADRP X9, 0xCCB000
	0x034312DC LDR X9, [X9 + 0x720]
	0x034312E0 MOV X2, X0
	0x034312E4 LDR X1, [X8]
	0x034312E8 LDR X3, [X9]
	0x034312EC MOV X0, X21
	0x034312F0 MOV X4, X31
	0x034312F4 BL 0x32277C4
	0x034312F8 MOV X21, X0
	0x034312FC LDR X22, [X19 + 0x40]
	0x03431300 CBZ X22, 0x343134C
	0x03431304 LDR X0, [X23]
	0x03431308 LDR W8, [X0 + 0xE0]
	0x0343130C CBNZ W8, 0x3431314
	0x03431310 BL 0x1C16DFC
	0x03431314 MOV X0, X22
	0x03431318 MOV X1, X31
	0x0343131C BL 0x3624D20
	0x03431320 ADRP X8, 0xCFD000
	0x03431324 LDR X8, [X8 + 0xF20]
	0x03431328 ADRP X9, 0xCCB000
	0x0343132C LDR X9, [X9 + 0x720]
	0x03431330 MOV X2, X0
	0x03431334 LDR X1, [X8]
	0x03431338 LDR X3, [X9]
	0x0343133C MOV X0, X21
	0x03431340 MOV X4, X31
	0x03431344 BL 0x32277C4
	0x03431348 MOV X21, X0
	0x0343134C CBZ X24, 0x343169C
	0x03431350 LDR X0, [X24 + 0x20]
	0x03431354 CBZ X0, 0x34316A0
	0x03431358 MOV X1, X31
	0x0343135C BL 0x361B448
	0x03431360 ADRP X8, 0xCCB000
	0x03431364 LDR X8, [X8 + 0x8D8]
	0x03431368 MOV X22, X0
	0x0343136C LDR X0, [X8]
	0x03431370 MOVZ W1, 0x1
	0x03431374 BL 0x1C16D6C
	0x03431378 MOV X1, X0
	0x0343137C CBZ X1, 0x34316A4
	0x03431380 LDR W8, [X1 + 0x18]
	0x03431384 CBZ W8, 0x34316A8
	0x03431388 MOVZ W8, 0x2F
	0x0343138C STRH W8, [X1 + 0x20]
	0x03431390 CBZ X22, 0x34316AC
	0x03431394 MOV X0, X22
	0x03431398 MOV X2, X31
	0x0343139C BL 0x322BC58
	0x034313A0 MOV X1, X20
	0x034313A4 MOV X2, X31
	0x034313A8 BL 0x321B938
	0x034313AC ADRP X8, 0xCCB000
	0x034313B0 LDR X8, [X8 + 0x3A0]
	0x034313B4 MOV X22, X0
	0x034313B8 LDR X23, [X24 + 0x20]
	0x034313BC LDR X0, [X8]
	0x034313C0 BL 0x1C16F10
	0x034313C4 MOV X20, X0
	0x034313C8 MOV X1, X23
	0x034313CC MOV X2, X31
	0x034313D0 BL 0x36281F8
	0x034313D4 CBZ X20, 0x34316B0
	0x034313D8 MOV X0, X20
	0x034313DC MOV X1, X22
	0x034313E0 MOV X2, X31
	0x034313E4 BL 0x36288CC
	0x034313E8 MOV X0, X20
	0x034313EC MOV X1, X21
	0x034313F0 MOV X2, X31
	0x034313F4 BL 0x3628980
	0x034313F8 MOV X0, X20
	0x034313FC MOV X1, X31
	0x03431400 BL 0x3628A38
	0x03431404 ADRP X8, 0xCEB000
	0x03431408 ADRP X9, 0xCC3000
	0x0343140C LDR X8, [X8 + 0x4D0]
	0x03431410 LDR X9, [X9 + 0x6D0]
	0x03431414 MOV X20, X0
	0x03431418 LDR X21, [X8]
	0x0343141C LDR X0, [X9]
	0x03431420 BL 0x1C16F10
	0x03431424 ADRP X8, 0xCC3000
	0x03431428 LDR X8, [X8 + 0x6C0]
	0x0343142C MOV X22, X0
	0x03431430 LDR X1, [X8]
	0x03431434 BL 0x2AA4804
	0x03431438 ADRP X8, 0xCFD000
	0x0343143C LDR X8, [X8 + 0x7D8]
	0x03431440 LDR X1, [X19 + 0x50]
	0x03431444 LDR X0, [X8]
	0x03431448 MOV X2, X31
	0x0343144C BL 0x321B938
	0x03431450 CBZ X22, 0x34316B4
	0x03431454 ADRP X8, 0xCFD000
	0x03431458 LDR X8, [X8 + 0x7D0]
	0x0343145C ADRP X9, 0xCC3000
	0x03431460 LDR X9, [X9 + 0x810]
	0x03431464 MOV X2, X0
	0x03431468 LDR X1, [X8]
	0x0343146C LDR X3, [X9]
	0x03431470 MOV X0, X22
	0x03431474 BL 0x2AA5098
	0x03431478 LDR X23, [X24 + 0x10]
	0x0343147C CBZ X23, 0x34316B8
	0x03431480 ADRP X10, 0xCFD000
	0x03431484 LDR X10, [X10 + 0x7B8]
	0x03431488 LDR X8, [X23]
	0x0343148C LDR W25, [X24 + 0x18]
	0x03431490 LDP X26, X24, [X19 + 0x58]
	0x03431494 LDR X1, [X10]
	0x03431498 LDRH W9, [X8 + 0x12E]
	0x0343149C CBZ X9, 0x34314C0
	0x034314A0 LDR X10, [X8 + 0xB0]
	0x034314A4 ADD X10, X10, 0x8
	0x034314A8 LDUR X11, [X10 - 0x8]
	0x034314AC CMP X11, X1
	0x034314B0 B.EQ 0x34314E8
	0x034314B4 SUBS X9, X9, 0x1
	0x034314B8 ADD X10, X10, 0x10
	0x034314BC B.NE 0x34314A8
	0x034314C0 MOVZ W2, 0x3
	0x034314C4 MOV X0, X23
	0x034314C8 BL 0x1C5C788
	0x034314CC B 0x34314F8
	0x034314D0 LDR X8, [X19 + 0x68]
	0x034314D4 MOVN W9, 0x0
	0x034314D8 STR X8, [X31 + 0x18]
	0x034314DC STR X31, [X19 + 0x68]
	0x034314E0 STR W9, [X19]
	0x034314E4 B 0x3431554
	0x034314E8 LDR W9, [X10]
	0x034314EC ADD W9, W9, 0x3
	0x034314F0 ADD X8, X8, W9, 0x4, SXTW
	0x034314F4 ADD X0, X8, 0x138
	0x034314F8 LDP X8, X9, [X0]
	0x034314FC MOV X0, X23
	0x03431500 MOV X1, X21
	0x03431504 MOV X2, X20
	0x03431508 MOV X3, X22
	0x0343150C MOV X4, X31
	0x03431510 MOV W5, W25
	0x03431514 MOV X6, X26
	0x03431518 MOV X7, X24
	0x0343151C STR X9, [X31]
	0x03431520 BLR X8
	0x03431524 CBZ X0, 0x34316BC
	0x03431528 ADRP X8, 0xCC5000
	0x0343152C LDR X8, [X8 + 0x1F8]
	0x03431530 LDR X1, [X8]
	0x03431534 BL 0x269F5D0
	0x03431538 ADRP X8, 0xCC5000
	0x0343153C LDR X8, [X8 + 0x1F0]
	0x03431540 STR X0, [X31 + 0x18]
	0x03431544 LDR X1, [X8]
	0x03431548 ADD X0, X31, 0x18
	0x0343154C BL 0x2677430
	0x03431550 TBZ X0, 0x0, 0x34315B0
	0x03431554 ADRP X8, 0xCC5000
	0x03431558 LDR X8, [X8 + 0x1E0]
	0x0343155C ADD X0, X31, 0x18
	0x03431560 LDR X1, [X8]
	0x03431564 BL 0x2677474
	0x03431568 ADRP X8, 0xCFE000
	0x0343156C LDR X8, [X8 + 0x1A8]
	0x03431570 LDR X1, [X8]
	0x03431574 BL 0x220E6DC
	0x03431578 MOVN W8, 0x1
	0x0343157C STR W8, [X19], #0x8
	0x03431580 MOV X20, X0
	0x03431584 LDR X0, [X27]
	0x03431588 ADRP X21, 0xCFE000
	0x0343158C LDR W8, [X0 + 0xE0]
	0x03431590 LDR X21, [X21 + 0x1A0]
	0x03431594 CBNZ W8, 0x343159C
	0x03431598 BL 0x1C16DFC
	0x0343159C LDR X2, [X21]
	0x034315A0 MOV X0, X19
	0x034315A4 MOV X1, X20
	0x034315A8 BL 0x26322B0
	0x034315AC B 0x34315E8
	0x034315B0 STR W31, [X19]
	0x034315B4 LDR X8, [X31 + 0x18]
	0x034315B8 STR X8, [X19 + 0x68]
	0x034315BC LDR X0, [X27]
	0x034315C0 LDR W8, [X0 + 0xE0]
	0x034315C4 CBNZ W8, 0x34315CC
	0x034315C8 BL 0x1C16DFC
	0x034315CC ADRP X8, 0xCFE000
	0x034315D0 LDR X8, [X8 + 0x198]
	0x034315D4 ADD X0, X19, 0x8
	0x034315D8 LDR X3, [X8]
	0x034315DC ADD X1, X31, 0x18
	0x034315E0 MOV X2, X19
	0x034315E4 BL 0x1FB4A38
	0x034315E8 LDP X20, X19, [X31 + 0x60]
	0x034315EC LDP X22, X21, [X31 + 0x50]
	0x034315F0 LDP X24, X23, [X31 + 0x40]
	0x034315F4 LDP X26, X25, [X31 + 0x30]
	0x034315F8 LDP X30, X27, [X31 + 0x20]
	0x034315FC ADD X31, X31, 0x70
	0x03431600 RET
	0x03431604 ADRP X0, 0xCCA000
	0x03431608 LDR X0, [X0 + 0x578]
	0x0343160C BL 0x1C16D08
	0x03431610 BL 0x1C16F10
	0x03431614 MOV X20, X0
	0x03431618 ADRP X0, 0xCFD000
	0x0343161C LDR X0, [X0 + 0xC80]
	0x03431620 BL 0x1C16D08
	0x03431624 MOV X1, X0
	0x03431628 MOV X0, X20
	0x0343162C MOV X2, X31
	0x03431630 BL 0x3314A68
	0x03431634 ADRP X0, 0xCFE000
	0x03431638 LDR X0, [X0 + 0x1B8]
	0x0343163C BL 0x1C16D08
	0x03431640 MOV X1, X0
	0x03431644 MOV X0, X20
	0x03431648 BL 0x1C16DEC
	0x0343164C ADRP X0, 0xCCA000
	0x03431650 LDR X0, [X0 + 0x578]
	0x03431654 BL 0x1C16D08
	0x03431658 BL 0x1C16F10
	0x0343165C MOV X20, X0
	0x03431660 ADRP X0, 0xCFE000
	0x03431664 LDR X0, [X0 + 0x30]
	0x03431668 BL 0x1C16D08
	0x0343166C MOV X1, X0
	0x03431670 MOV X0, X20
	0x03431674 MOV X2, X31
	0x03431678 BL 0x3314A68
	0x0343167C ADRP X0, 0xCFE000
	0x03431680 LDR X0, [X0 + 0x1B8]
	0x03431684 BL 0x1C16D08
	0x03431688 MOV X1, X0
	0x0343168C MOV X0, X20
	0x03431690 BL 0x1C16DEC
	0x03431694 BL 0x1C16F20
	0x03431698 BL 0x1C16F20
	0x0343169C BL 0x1C16F20
	0x034316A0 BL 0x1C16F20
	0x034316A4 BL 0x1C16F20
	0x034316A8 BL 0x1C16F28
	0x034316AC BL 0x1C16F20
	0x034316B0 BL 0x1C16F20
	0x034316B4 BL 0x1C16F20
	0x034316B8 BL 0x1C16F20
	0x034316BC BL 0x1C16F20
	0x034316C0 BL 0x1C16F20
	0x034316C4 BL 0x1C16F28
	0x034316C8 BL 0x1C16F28
	0x034316CC BL 0x1C16F28
	0x034316D0 BL 0x1C16F28
	0x034316D4 BL 0x1C16F44
	0x034316D8 MOV X1, X31
	0x034316DC BL 0x1C16DEC
	0x034316E0 BL 0x1C16F44
	0x034316E4 MOV X1, X31
	0x034316E8 BL 0x1C16DEC
	0x034316EC BL 0x1C16F44
	0x034316F0 MOV X1, X31
	0x034316F4 BL 0x1C16DEC
	0x034316F8 BL 0x1C16F44
	0x034316FC MOV X1, X31
	0x03431700 BL 0x1C16DEC
	0x03431704 B 0x34317A0
	0x03431708 B 0x34317A0
	0x0343170C B 0x34317A0
	0x03431710 B 0x34317A0
	0x03431714 B 0x34317A0
	0x03431718 B 0x34317A0
	0x0343171C B 0x34317A0
	0x03431720 B 0x34317A0
	0x03431724 B 0x34317A0
	0x03431728 B 0x34317A0
	0x0343172C B 0x34317A0
	0x03431730 B 0x34317A0
	0x03431734 B 0x34317A0
	0x03431738 B 0x34317A0
	0x0343173C B 0x34317A0
	0x03431740 B 0x34317A0
	0x03431744 B 0x34317A0
	0x03431748 B 0x34317A0
	0x0343174C B 0x34317A0
	0x03431750 B 0x34317A0
	0x03431754 B 0x34317A0
	0x03431758 B 0x34317A0
	0x0343175C B 0x34317A0
	0x03431760 B 0x34317A0
	0x03431764 B 0x34317A0
	0x03431768 B 0x34317A0
	0x0343176C B 0x34317A0
	0x03431770 B 0x34317A0
	0x03431774 B 0x34317A0
	0x03431778 B 0x34317A0
	0x0343177C B 0x34317A0
	0x03431780 B 0x34317A0
	0x03431784 B 0x34317A0
	0x03431788 B 0x34317A0
	0x0343178C B 0x34317A0
	0x03431790 B 0x34317A0
	0x03431794 B 0x34317A0
	0x03431798 B 0x34317A0
	0x0343179C B 0x34317A0
	0x034317A0 MOV X20, X0
	0x034317A4 CMP W1, 0x1
	0x034317A8 B.NE 0x3431844
	0x034317AC MOV X0, X20
	0x034317B0 BL 0x3EB1AD0
	0x034317B4 MOV X20, X0
	0x034317B8 ADRP X0, 0xCC2000
	0x034317BC LDR X0, [X0 + 0x7D0]
	0x034317C0 BL 0x1C16D08
	0x034317C4 LDR X8, [X20]
	0x034317C8 LDR X1, [X8]
	0x034317CC BL 0x1C17270
	0x034317D0 TBZ X0, 0x0, 0x343181C
	0x034317D4 LDR X20, [X20]
	0x034317D8 BL 0x3EB1AE0
	0x034317DC MOVN W8, 0x1
	0x034317E0 STR W8, [X19], #0x8
	0x034317E4 ADRP X0, 0xCFD000
	0x034317E8 LDR X0, [X0 + 0x730]
	0x034317EC BL 0x1C16D08
	0x034317F0 LDR W8, [X0 + 0xE0]
	0x034317F4 CBNZ W8, 0x34317FC
	0x034317F8 BL 0x1C16DFC
	0x034317FC ADRP X0, 0xCFE000
	0x03431800 LDR X0, [X0 + 0x1C0]
	0x03431804 BL 0x1C16D08
	0x03431808 MOV X2, X0
	0x0343180C MOV X0, X19
	0x03431810 MOV X1, X20
	0x03431814 BL 0x26324C8
	0x03431818 B 0x34315E8
	0x0343181C MOVZ W0, 0x8
	0x03431820 BL 0x3EB1AF0
	0x03431824 LDR X8, [X20]
	0x03431828 STR X8, [X0]
	0x0343182C ADRP X1, 0xA83000
	0x03431830 ADD X1, X1, 0xE58
	0x03431834 MOV X2, X31
	0x03431838 BL 0x3EB1B00
	0x0343183C MOV X20, X0
	0x03431840 BL 0x3EB1AE0
	0x03431844 MOV X0, X20
	0x03431848 BL 0x1D2C690
	0x0343184C BL 0x1990590
	0x03431850 STR X30, [X31 - 0x30]!
	0x03431854 STP X22, X21, [X31 + 0x10]
	0x03431858 STP X20, X19, [X31 + 0x20]
	0x0343185C ADRP X22, 0xFAC000
	0x03431860 ADRP X21, 0xCFD000
	0x03431864 LDRB W8, [X22 + 0x662]
	0x03431868 LDR X21, [X21 + 0x730]
	0x0343186C MOV X19, X1
	0x03431870 MOV X20, X0
	0x03431874 TBNZ X8, 0x0, 0x3431898
	0x03431878 ADRP X0, 0xCFE000
	0x0343187C LDR X0, [X0 + 0x1C8]
	0x03431880 BL 0x1C16CF4
	0x03431884 ADRP X0, 0xCFD000
	0x03431888 LDR X0, [X0 + 0x730]
	0x0343188C BL 0x1C16CF4
	0x03431890 MOVZ W8, 0x1
	0x03431894 STRB W8, [X22 + 0x662]
	0x03431898 LDR X0, [X21]
	0x0343189C ADRP X21, 0xCFE000
	0x034318A0 LDR W8, [X0 + 0xE0]
	0x034318A4 LDR X21, [X21 + 0x1C8]
	0x034318A8 CBNZ W8, 0x34318B0
	0x034318AC BL 0x1C16DFC
	0x034318B0 LDR X2, [X21]
	0x034318B4 ADD X0, X20, 0x8
	0x034318B8 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xFAD000
	013 Move W8, [X20+1629]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {102}
	019 Move X0, 0xCFF000
	020 Move X0, [X0+320]
	021 Call 0x1C17CF4
	022 Move X0, 0xCFF000
	023 Move X0, [X0+240]
	024 Call 0x1C17CF4
	025 Move X0, 0xCFE000
	026 Move X0, [X0+1760]
	027 Call 0x1C17CF4
	028 Move X0, 0xCCC000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC4000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC4000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCC4000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xCFE000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xCFF000
	044 Move X0, [X0+248]
	045 Call 0x1C17CF4
	046 Move X0, 0xCC6000
	047 Move X0, [X0+3832]
	048 Call 0x1C17CF4
	049 Move X0, 0xCC4000
	050 Move X0, [X0+1144]
	051 Call 0x1C17CF4
	052 Move X0, 0xCC3000
	053 Move X0, [X0+2512]
	054 Call 0x1C17CF4
	055 Move X0, 0xCC6000
	056 Move X0, [X0+480]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC6000
	059 Move X0, [X0+496]
	060 Call 0x1C17CF4
	061 Move X0, 0xCC6000
	062 Move X0, [X0+504]
	063 Call 0x1C17CF4
	064 Move X0, 0xCCC000
	065 Move X0, [X0+928]
	066 Call 0x1C17CF4
	067 Move X0, 0xCC5000
	068 Move X0, [X0+2600]
	069 Call 0x1C17CF4
	070 Move X0, 0xCFF000
	071 Move X0, [X0+256]
	072 Call 0x1C17CF4
	073 Move X0, 0xCEC000
	074 Move X0, [X0+1232]
	075 Call 0x1C17CF4
	076 Move X0, 0xCFF000
	077 Move X0, [X0+328]
	078 Call 0x1C17CF4
	079 Move X0, 0xCCC000
	080 Move X0, [X0+1824]
	081 Call 0x1C17CF4
	082 Move X0, 0xCFF000
	083 Move X0, [X0+336]
	084 Call 0x1C17CF4
	085 Move X0, 0xCFE000
	086 Move X0, [X0+2000]
	087 Call 0x1C17CF4
	088 Move X0, 0xCFE000
	089 Move X0, [X0+3864]
	090 Call 0x1C17CF4
	091 Move X0, 0xCFE000
	092 Move X0, [X0+2008]
	093 Call 0x1C17CF4
	094 Move X0, 0xCC3000
	095 Move X0, [X0+2440]
	096 Call 0x1C17CF4
	097 Move X0, 0xCFE000
	098 Move X0, [X0+3872]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X20+1629], W8
	102 Move [X31+24], X31
	103 Move X27, 0xCFE000
	104 Move W8, [X19]
	105 Move X27, [X27+1760]
	106 Compare W8, 0
	107 JumpIfEqual {360}
	108 Move X21, [X19+32]
	109 Compare X21, 0
	110 JumpIfEqual {451}
	111 Move X23, 0xCC5000
	112 Move X23, [X23+2600]
	113 Move X8, 0xCFF000
	114 Move X0, [X23]
	115 Move X8, [X8+336]
	116 Move X24, [X19+64]
	117 Move W9, [X0+224]
	118 Move X20, [X8]
	119 Compare W9, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X21
	123 Move X1, X31
	124 Call Uri.EscapeDataString, X0
	125 Compare X20, 0
	126 JumpIfEqual {469}
	127 Move X8, 0xCFF000
	128 Move X8, [X8+256]
	129 Move X2, X0
	130 Move X1, [X8]
	131 Move X0, X20
	132 Move X3, X31
	133 Call String.Replace, X0, X1, X2
	134 Move X8, 0xCC3000
	135 Move X8, [X8+2440]
	136 Move X22, [X19+40]
	137 Move X20, X0
	138 Move X21, [X8]
	139 Compare X22, 0
	140 JumpIfEqual {160}
	141 Move X0, [X23]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X22
	147 Move X1, X31
	148 Call Uri.EscapeDataString, X0
	149 Move X8, 0xCFF000
	150 Move X8, [X8+328]
	151 Move X9, 0xCCC000
	152 Move X9, [X9+1824]
	153 Move X2, X0
	154 Move X1, [X8]
	155 Move X3, [X9]
	156 Move X0, X21
	157 Move X4, X31
	158 Call String.Concat, X0, X1, X2, X3
	159 Move X21, X0
	160 Move W8, [X19+48]
	161 Compare W8, 0
	162 JumpIfEqual {234}
	163 Move X8, 0xCC3000
	164 Move X8, [X8+2512]
	165 Move X0, [X8]
	166 Move W1, 4
	167 Call 0x1C17D6C
	168 Move X22, X0
	169 Compare X0, 0
	170 JumpIfEqual {479}
	171 Compare X21, 0
	172 JumpIfEqual {179}
	173 Move X8, [X22]
	174 Move X1, [X8+64]
	175 Move X0, X21
	176 Call 0x1C17E00
	177 Compare X0, 0
	178 JumpIfEqual {484}
	179 Move W8, [X22+24]
	180 Compare W8, 0
	181 JumpIfEqual {480}
	182 Move [X22+32], X21
	183 Move X21, 0xCFE000
	184 Move X21, [X21+3864]
	185 Move X0, [X21]
	186 Compare X0, 0
	187 JumpIfEqual {194}
	188 Move X8, [X22]
	189 Move X1, [X8+64]
	190 Call 0x1C17E00
	191 Compare X0, 0
	192 JumpIfEqual {487}
	193 Move W8, [X22+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X8, [X21]
	196 Move X9, 0xCC4000
	197 Move [X22+40], X8
	198 Move X8, [X19+48]
	199 Move X9, [X9+1144]
	200 Move [X31+16], X8
	201 Move X0, [X9]
	202 Add X1, X31, 16
	203 Call 0x1C17E04
	204 Move X21, X0
	205 Compare X0, 0
	206 JumpIfEqual {213}
	207 Move X8, [X22]
	208 Move X1, [X8+64]
	209 Move X0, X21
	210 Call 0x1C17E00
	211 Compare X0, 0
	212 JumpIfEqual {490}
	213 Move W8, [X22+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move [X22+48], X21
	216 Move X21, 0xCCC000
	217 Move X21, [X21+1824]
	218 Move X0, [X21]
	219 Compare X0, 0
	220 JumpIfEqual {227}
	221 Move X8, [X22]
	222 Move X1, [X8+64]
	223 Call 0x1C17E00
	224 Compare X0, 0
	225 JumpIfEqual {493}
	226 Move W8, [X22+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X8, [X21]
	229 Move [X22+56], X8
	230 Move X0, X22
	231 Move X1, X31
	232 Call String.Concat, X0
	233 Move X21, X0
	234 Move X22, [X19+56]
	235 Compare X22, 0
	236 JumpIfEqual {256}
	237 Move X0, [X23]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Move X0, X22
	243 Move X1, X31
	244 Call Uri.EscapeDataString, X0
	245 Move X8, 0xCFE000
	246 Move X8, [X8+3872]
	247 Move X9, 0xCCC000
	248 Move X9, [X9+1824]
	249 Move X2, X0
	250 Move X1, [X8]
	251 Move X3, [X9]
	252 Move X0, X21
	253 Move X4, X31
	254 Call String.Concat, X0, X1, X2, X3
	255 Move X21, X0
	256 Compare X24, 0
	257 JumpIfEqual {470}
	258 Move X0, [X24+32]
	259 Compare X0, 0
	260 JumpIfEqual {471}
	261 Move X1, X31
	262 Call Uri.get_AbsolutePath, X0
	263 Move X8, 0xCCC000
	264 Move X8, [X8+2264]
	265 Move X22, X0
	266 Move X0, [X8]
	267 Move W1, 1
	268 Call 0x1C17D6C
	269 Move X1, X0
	270 Compare X1, 0
	271 JumpIfEqual {472}
	272 Move W8, [X1+24]
	273 Compare W8, 0
	274 JumpIfEqual {473}
	275 Move W8, 47
	276 NotImplemented "Instruction STRH not yet implemented."
	277 Compare X22, 0
	278 JumpIfEqual {474}
	279 Move X0, X22
	280 Move X2, X31
	281 Call String.TrimEnd, X0, X1
	282 Move X1, X20
	283 Move X2, X31
	284 Call String.Concat, X0, X1
	285 Move X8, 0xCCC000
	286 Move X8, [X8+928]
	287 Move X22, X0
	288 Move X23, [X24+32]
	289 Move X0, [X8]
	290 Call 0x1C17F10
	291 Move X20, X0
	292 Move X1, X23
	293 Move X2, X31
	294 Call UriBuilder..ctor, X0, X1
	295 Compare X20, 0
	296 JumpIfEqual {475}
	297 Move X0, X20
	298 Move X1, X22
	299 Move X2, X31
	300 Call UriBuilder.set_Path, X0, X1
	301 Move X0, X20
	302 Move X1, X21
	303 Move X2, X31
	304 Call UriBuilder.set_Query, X0, X1
	305 Move X0, X20
	306 Move X1, X31
	307 Call UriBuilder.get_Uri, X0
	308 Move X8, 0xCEC000
	309 Move X9, 0xCC4000
	310 Move X8, [X8+1232]
	311 Move X9, [X9+1744]
	312 Move X20, X0
	313 Move X21, [X8]
	314 Move X0, [X9]
	315 Call 0x1C17F10
	316 Move X8, 0xCC4000
	317 Move X8, [X8+1728]
	318 Move X22, X0
	319 Move X1, [X8]
	320 Call Dictionary`2<Object, Object>..ctor, X0
	321 Move X8, 0xCFE000
	322 Move X8, [X8+2008]
	323 Move X1, [X19+72]
	324 Move X0, [X8]
	325 Move X2, X31
	326 Call String.Concat, X0, X1
	327 Compare X22, 0
	328 JumpIfEqual {476}
	329 Move X8, 0xCFE000
	330 Move X8, [X8+2000]
	331 Move X9, 0xCC4000
	332 Move X9, [X9+2064]
	333 Move X2, X0
	334 Move X1, [X8]
	335 Move X3, [X9]
	336 Move X0, X22
	337 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	338 Move X23, [X24+16]
	339 Compare X23, 0
	340 JumpIfEqual {477}
	341 Move X10, 0xCFE000
	342 Move X10, [X10+1976]
	343 Move X8, [X23]
	344 Move W25, [X24+24]
	345 Move X26, [X19+80]
	346 Move X24, [X19+88]
	347 Move X1, [X10]
	348 NotImplemented "Instruction LDRH not yet implemented."
	349 Compare X9, 0
	350 JumpIfEqual {357}
	351 Move X10, [X8+176]
	352 Add X10, X10, 8
	353 NotImplemented "Instruction LDUR not yet implemented."
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Subtract X9, X9, 1
	356 Add X10, X10, 16
	357 Move W2, 3
	358 Move X0, X23
	359 Call 0x1C5D788
	360 Move X8, [X19+96]
	361 Move TEMP, 0
	362 Not TEMP
	363 Move W9, TEMP
	364 Move [X31+24], X8
	365 Move [X19+96], X31
	366 Move [X19], W9
	367 Move W9, [X10]
	368 Add W9, W9, 3
	369 Add X8, X8, W9
	370 Add X0, X8, 312
	371 Move X8, [X0]
	372 Move X9, [X0+8]
	373 Move X0, X23
	374 Move X1, X21
	375 Move X2, X20
	376 Move X3, X22
	377 Move X4, X31
	378 Move W5, W25
	379 Move X6, X26
	380 Move X7, X24
	381 Move [X31], X9
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Compare X0, 0
	384 JumpIfEqual {478}
	385 Move X8, 0xCC6000
	386 Move X8, [X8+504]
	387 Move X1, [X8]
	388 Call Task`1<Object>.GetAwaiter, X0
	389 Move X8, 0xCC6000
	390 Move X8, [X8+496]
	391 Move [X31+24], X0
	392 Move X1, [X8]
	393 Add X0, X31, 24
	394 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	395 Move TEMP, X0
	396 And TEMP, TEMP, 1
	397 Compare TEMP, 1
	398 JumpIfNotEqual {424}
	399 Move X8, 0xCC6000
	400 Move X8, [X8+480]
	401 Add X0, X31, 24
	402 Move X1, [X8]
	403 Call TaskAwaiter`1<Object>.GetResult, X0
	404 Move X8, 0xCFF000
	405 Move X8, [X8+248]
	406 Move X1, [X8]
	407 Call JsonParser.FromJson, X0
	408 Move TEMP, 1
	409 Not TEMP
	410 Move W8, TEMP
	411 Move [X19+8], W8
	412 Move X20, X0
	413 Move X0, [X27]
	414 Move X21, 0xCFF000
	415 Move W8, [X0+224]
	416 Move X21, [X21+240]
	417 Compare W8, 0
	418 JumpIfNotEqual {420}
	419 Call 0x1C17DFC
	420 Move X2, [X21]
	421 Move X0, X19
	422 Move X1, X20
	423 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	424 Move [X19], W31
	425 Move X8, [X31+24]
	426 Move [X19+96], X8
	427 Move X0, [X27]
	428 Move W8, [X0+224]
	429 Compare W8, 0
	430 JumpIfNotEqual {432}
	431 Call 0x1C17DFC
	432 Move X8, 0xCFF000
	433 Move X8, [X8+320]
	434 Add X0, X19, 8
	435 Move X3, [X8]
	436 Add X1, X31, 24
	437 Move X2, X19
	438 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	439 Move X20, [X31+96]
	440 Move X19, [X31+104]
	441 Move X22, [X31+80]
	442 Move X21, [X31+88]
	443 Move X24, [X31+64]
	444 Move X23, [X31+72]
	445 Move X26, [X31+48]
	446 Move X25, [X31+56]
	447 Move X30, [X31+32]
	448 Move X27, [X31+40]
	449 Add X31, X31, 112
	450 Return 
	451 Move X0, 0xCCB000
	452 Move X0, [X0+1400]
	453 Call 0x1C17D08
	454 Call 0x1C17F10
	455 Move X20, X0
	456 Move X0, 0xCFF000
	457 Move X0, [X0+280]
	458 Call 0x1C17D08
	459 Move X1, X0
	460 Move X0, X20
	461 Move X2, X31
	462 Call ArgumentException..ctor, X0, X1
	463 Move X0, 0xCFF000
	464 Move X0, [X0+344]
	465 Call 0x1C17D08
	466 Move X1, X0
	467 Move X0, X20
	468 Call 0x1C17DEC
	469 Call 0x1C17F20
	470 Call 0x1C17F20
	471 Call 0x1C17F20
	472 Call 0x1C17F20
	473 Call 0x1C17F28
	474 Call 0x1C17F20
	475 Call 0x1C17F20
	476 Call 0x1C17F20
	477 Call 0x1C17F20
	478 Call 0x1C17F20
	479 Call 0x1C17F20
	480 Call 0x1C17F28
	481 Call 0x1C17F28
	482 Call 0x1C17F28
	483 Call 0x1C17F28
	484 Call 0x1C17F44
	485 Move X1, X31
	486 Call 0x1C17DEC
	487 Call 0x1C17F44
	488 Move X1, X31
	489 Call 0x1C17DEC
	490 Call 0x1C17F44
	491 Move X1, X31
	492 Call 0x1C17DEC
	493 Call 0x1C17F44
	494 Move X1, X31
	495 Call 0x1C17DEC
	496 Move X20, X0
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Move X0, X20
	499 Call 0x3EB2AD0
	500 Move X20, X0
	501 Move X0, 0xCC3000
	502 Move X0, [X0+2000]
	503 Call 0x1C17D08
	504 Move X8, [X20]
	505 Move X1, [X8]
	506 Call 0x1C18270
	507 Move TEMP, X0
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfNotEqual {531}
	511 Move X20, [X20]
	512 Call 0x3EB2AE0
	513 Move TEMP, 1
	514 Not TEMP
	515 Move W8, TEMP
	516 Move [X19+8], W8
	517 Move X0, 0xCFE000
	518 Move X0, [X0+1760]
	519 Call 0x1C17D08
	520 Move W8, [X0+224]
	521 Compare W8, 0
	522 JumpIfNotEqual {524}
	523 Call 0x1C17DFC
	524 Move X0, 0xCFF000
	525 Move X0, [X0+304]
	526 Call 0x1C17D08
	527 Move X2, X0
	528 Move X0, X19
	529 Move X1, X20
	530 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	531 Move W0, 8
	532 Call 0x3EB2AF0
	533 Move X8, [X20]
	534 Move [X0], X8
	535 Move X1, 0xA84000
	536 Add X1, X1, 3672
	537 Move X2, X31
	538 Call 0x3EB2B00
	539 Move X20, X0
	540 Call 0x3EB2AE0
	541 Move X0, X20
	542 Call 0x1D2D690
	543 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034318BC LDP X20, X19, [X31 + 0x20]
	0x034318C0 LDP X22, X21, [X31 + 0x10]
	0x034318C4 LDR X30, [X31], #0x30
	0x034318C8 B 0x2632228
	0x034318CC SUB X31, X31, 0x90
	0x034318D0 STP X29, X30, [X31 + 0x30]
	0x034318D4 STP X28, X27, [X31 + 0x40]
	0x034318D8 STP X26, X25, [X31 + 0x50]
	0x034318DC STP X24, X23, [X31 + 0x60]
	0x034318E0 STP X22, X21, [X31 + 0x70]
	0x034318E4 STP X20, X19, [X31 + 0x80]
	0x034318E8 ADRP X20, 0xFAC000
	0x034318EC LDRB W8, [X20 + 0x663]
	0x034318F0 MOV X19, X0
	0x034318F4 TBNZ X8, 0x0, 0x3431A8C
	0x034318F8 ADRP X0, 0xCFE000
	0x034318FC LDR X0, [X0 + 0x1D0]
	0x03431900 BL 0x1C16CF4
	0x03431904 ADRP X0, 0xCFE000
	0x03431908 LDR X0, [X0 + 0x1A0]
	0x0343190C BL 0x1C16CF4
	0x03431910 ADRP X0, 0xCFD000
	0x03431914 LDR X0, [X0 + 0x730]
	0x03431918 BL 0x1C16CF4
	0x0343191C ADRP X0, 0xCCB000
	0x03431920 LDR X0, [X0 + 0x8D8]
	0x03431924 BL 0x1C16CF4
	0x03431928 ADRP X0, 0xCC3000
	0x0343192C LDR X0, [X0 + 0x810]
	0x03431930 BL 0x1C16CF4
	0x03431934 ADRP X0, 0xCC3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFAD000
	007 Move X21, 0xCFE000
	008 Move W8, [X22+1630]
	009 Move X21, [X21+1760]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCFF000
	017 Move X0, [X0+312]
	018 Call 0x1C17CF4
	019 Move X0, 0xCFE000
	020 Move X0, [X0+1760]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1630], W8
	024 Move X0, [X21]
	025 Move X21, 0xCFF000
	026 Move W8, [X0+224]
	027 Move X21, [X21+312]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

