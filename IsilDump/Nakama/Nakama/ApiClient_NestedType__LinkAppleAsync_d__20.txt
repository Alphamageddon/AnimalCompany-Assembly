Type: Nakama.ApiClient/<LinkAppleAsync>d__20

Method: System.Void MoveNext()

Disassembly:
	0x03428354 BL 0x1C16F28
	0x03428358 BL 0x1C16F20
	0x0342835C BL 0x1C16F20
	0x03428360 BL 0x1C16F20
	0x03428364 BL 0x1C16F20
	0x03428368 BL 0x1C16F20
	0x0342836C BL 0x1C16F20
	0x03428370 B 0x34283D0
	0x03428374 B 0x34283D0
	0x03428378 B 0x34283D0
	0x0342837C B 0x34283D0
	0x03428380 B 0x34283D0
	0x03428384 B 0x34283D0
	0x03428388 B 0x34283D0
	0x0342838C B 0x34283D0
	0x03428390 B 0x34283D0
	0x03428394 B 0x34283D0
	0x03428398 B 0x34283D0
	0x0342839C B 0x34283D0
	0x034283A0 B 0x34283D0
	0x034283A4 B 0x34283D0
	0x034283A8 B 0x34283D0
	0x034283AC B 0x34283D0
	0x034283B0 B 0x34283D0
	0x034283B4 B 0x34283D0
	0x034283B8 B 0x34283D0
	0x034283BC B 0x34283D0
	0x034283C0 B 0x34283D0
	0x034283C4 B 0x34283D0
	0x034283C8 B 0x34283D0
	0x034283CC B 0x34283D0
	0x034283D0 MOV X20, X0
	0x034283D4 CMP W1, 0x1
	0x034283D8 B.NE 0x3428468
	0x034283DC MOV X0, X20
	0x034283E0 BL 0x3EB1AD0
	0x034283E4 MOV X20, X0
	0x034283E8 ADRP X0, 0xCCB000
	0x034283EC LDR X0, [X0 + 0x7D0]
	0x034283F0 BL 0x1C16D08
	0x034283F4 LDR X8, [X20]
	0x034283F8 LDR X1, [X8]
	0x034283FC BL 0x1C17270
	0x03428400 TBZ X0, 0x0, 0x3428440
	0x03428404 LDR X20, [X20]
	0x03428408 BL 0x3EB1AE0
	0x0342840C MOVN W8, 0x1
	0x03428410 STR W8, [X19], #0x8
	0x03428414 ADRP X0, 0xCCE000
	0x03428418 LDR X0, [X0 + 0x280]
	0x0342841C BL 0x1C16D08
	0x03428420 LDR W8, [X0 + 0xE0]
	0x03428424 CBNZ W8, 0x342842C
	0x03428428 BL 0x1C16DFC
	0x0342842C MOV X0, X19
	0x03428430 MOV X1, X20
	0x03428434 MOV X2, X31
	0x03428438 BL 0x32C4908
	0x0342843C B 0x34282E0
	0x03428440 MOVZ W0, 0x8
	0x03428444 BL 0x3EB1AF0
	0x03428448 LDR X8, [X20]
	0x0342844C STR X8, [X0]
	0x03428450 ADRP X1, 0xA8C000
	0x03428454 ADD X1, X1, 0xE58
	0x03428458 MOV X2, X31
	0x0342845C BL 0x3EB1B00
	0x03428460 MOV X20, X0
	0x03428464 BL 0x3EB1AE0
	0x03428468 MOV X0, X20
	0x0342846C BL 0x1D2C690
	0x03428470 BL 0x1990590
	0x03428474 STR X30, [X31 - 0x30]!
	0x03428478 STP X22, X21, [X31 + 0x10]
	0x0342847C STP X20, X19, [X31 + 0x20]
	0x03428480 ADRP X21, 0xFB5000
	0x03428484 ADRP X22, 0xCCE000
	0x03428488 LDRB W8, [X21 + 0x63E]
	0x0342848C LDR X22, [X22 + 0x280]
	0x03428490 MOV X19, X1
	0x03428494 MOV X20, X0
	0x03428498 TBNZ X8, 0x0, 0x34284B0
	0x0342849C ADRP X0, 0xCCE000
	0x034284A0 LDR X0, [X0 + 0x280]
	0x034284A4 BL 0x1C16CF4
	0x034284A8 MOVZ W8, 0x1
	0x034284AC STRB W8, [X21 + 0x63E]
	0x034284B0 LDR X0, [X22]
	0x034284B4 LDR W8, [X0 + 0xE0]
	0x034284B8 CBNZ W8, 0x34284C0
	0x034284BC BL 0x1C16DFC
	0x034284C0 ADD X0, X20, 0x8
	0x034284C4 MOV X1, X19
	0x034284C8 LDP X20, X19, [X31 + 0x20]
	0x034284CC LDP X22, X21, [X31 + 0x10]
	0x034284D0 MOV X2, X31
	0x034284D4 LDR X30, [X31], #0x30
	0x034284D8 B 0x32C477C
	0x034284DC SUB X31, X31, 0x70
	0x034284E0 STR X30, [X31 + 0x10]
	0x034284E4 STP X28, X27, [X31 + 0x20]
	0x034284E8 STP X26, X25, [X31 + 0x30]
	0x034284EC STP X24, X23, [X31 + 0x40]
	0x034284F0 STP X22, X21, [X31 + 0x50]
	0x034284F4 STP X20, X19, [X31 + 0x60]
	0x034284F8 ADRP X20, 0xFB5000
	0x034284FC LDRB W8, [X20 + 0x63F]
	0x03428500 MOV X19, X0
	0x03428504 TBNZ X8, 0x0, 0x34285D0
	0x03428508 ADRP X0, 0xD06000
	0x0342850C LDR X0, [X0 + 0xE58]
	0x03428510 BL 0x1C16CF4
	0x03428514 ADRP X0, 0xCCE000
	0x03428518 LDR X0, [X0 + 0x280]
	0x0342851C BL 0x1C16CF4
	0x03428520 ADRP X0, 0xCD4000
	0x03428524 LDR X0, [X0 + 0x8D8]
	0x03428528 BL 0x1C16CF4
	0x0342852C ADRP X0, 0xCCC000
	0x03428530 LDR X0, [X0 + 0x810]
	0x03428534 BL 0x1C16CF4
	0x03428538 ADRP X0, 0xCCC000
	0x0342853C LDR X0, [X0 + 0x6C0]
	0x03428540 BL 0x1C16CF4
	0x03428544 ADRP X0, 0xCCC000
	0x03428548 LDR X0, [X0 + 0x6D0]
	0x0342854C BL 0x1C16CF4
	0x03428550 ADRP X0, 0xD06000
	0x03428554 LDR X0, [X0 + 0x7B8]
	0x03428558 BL 0x1C16CF4
	0x0342855C ADRP X0, 0xCCE000
	0x03428560 LDR X0, [X0 + 0x1E0]
	0x03428564 BL 0x1C16CF4
	0x03428568 ADRP X0, 0xCCE000
	0x0342856C LDR X0, [X0 + 0x1F0]
	0x03428570 BL 0x1C16CF4
	0x03428574 ADRP X0, 0xCCE000
	0x03428578 LDR X0, [X0 + 0x1F8]
	0x0342857C BL 0x1C16CF4
	0x03428580 ADRP X0, 0xCD4000
	0x03428584 LDR X0, [X0 + 0x3A0]
	0x03428588 BL 0x1C16CF4
	0x0342858C ADRP X0, 0xCF4000
	0x03428590 LDR X0, [X0 + 0x4D8]
	0x03428594 BL 0x1C16CF4
	0x03428598 ADRP X0, 0xD06000
	0x0342859C LDR X0, [X0 + 0xE60]
	0x034285A0 BL 0x1C16CF4
	0x034285A4 ADRP X0, 0xD06000
	0x034285A8 LDR X0, [X0 + 0x7D0]
	0x034285AC BL 0x1C16CF4
	0x034285B0 ADRP X0, 0xD06000
	0x034285B4 LDR X0, [X0 + 0x7D8]
	0x034285B8 BL 0x1C16CF4
	0x034285BC ADRP X0, 0xCCB000
	0x034285C0 LDR X0, [X0 + 0x988]
	0x034285C4 BL 0x1C16CF4
	0x034285C8 MOVZ W8, 0x1
	0x034285CC STRB W8, [X20 + 0x63F]
	0x034285D0 STR X31, [X31 + 0x18]
	0x034285D4 ADRP X28, 0xCCE000
	0x034285D8 LDR W8, [X19]
	0x034285DC LDR X28, [X28 + 0x280]
	0x034285E0 CBZ W8, 0x34287C0
	0x034285E4 LDR X8, [X19 + 0x20]
	0x034285E8 CBZ X8, 0x34288D8
	0x034285EC LDR X25, [X19 + 0x28]
	0x034285F0 CBZ X25, 0x3428920
	0x034285F4 LDR X0, [X25 + 0x20]
	0x034285F8 CBZ X0, 0x3428924
	0x034285FC ADRP X8, 0xD06000
	0x03428600 ADRP X9, 0xCCB000
	0x03428604 LDR X8, [X8 + 0xE60]
	0x03428608 LDR X9, [X9 + 0x988]
	0x0342860C LDR X21, [X8]
	0x03428610 LDR X20, [X9]
	0x03428614 MOV X1, X31
	0x03428618 BL 0x361B448
	0x0342861C ADRP X8, 0xCD4000
	0x03428620 LDR X8, [X8 + 0x8D8]
	0x03428624 MOV X22, X0
	0x03428628 LDR X0, [X8]
	0x0342862C MOVZ W1, 0x1
	0x03428630 BL 0x1C16D6C
	0x03428634 MOV X1, X0
	0x03428638 CBZ X1, 0x3428928
	0x0342863C LDR W8, [X1 + 0x18]
	0x03428640 CBZ W8, 0x342892C
	0x03428644 MOVZ W8, 0x2F
	0x03428648 STRH W8, [X1 + 0x20]
	0x0342864C CBZ X22, 0x3428930
	0x03428650 MOV X0, X22
	0x03428654 MOV X2, X31
	0x03428658 BL 0x322BC58
	0x0342865C MOV X1, X21
	0x03428660 MOV X2, X31
	0x03428664 BL 0x321B938
	0x03428668 ADRP X8, 0xCD4000
	0x0342866C LDR X8, [X8 + 0x3A0]
	0x03428670 MOV X22, X0
	0x03428674 LDR X23, [X25 + 0x20]
	0x03428678 LDR X0, [X8]
	0x0342867C BL 0x1C16F10
	0x03428680 MOV X21, X0
	0x03428684 MOV X1, X23
	0x03428688 MOV X2, X31
	0x0342868C BL 0x36281F8
	0x03428690 CBZ X21, 0x3428934
	0x03428694 MOV X0, X21
	0x03428698 MOV X1, X22
	0x0342869C MOV X2, X31
	0x034286A0 BL 0x36288CC
	0x034286A4 MOV X0, X21
	0x034286A8 MOV X1, X20
	0x034286AC MOV X2, X31
	0x034286B0 BL 0x3628980
	0x034286B4 MOV X0, X21
	0x034286B8 MOV X1, X31
	0x034286BC BL 0x3628A38
	0x034286C0 ADRP X8, 0xCF4000
	0x034286C4 ADRP X9, 0xCCC000
	0x034286C8 LDR X8, [X8 + 0x4D8]
	0x034286CC LDR X9, [X9 + 0x6D0]
	0x034286D0 MOV X20, X0
	0x034286D4 LDR X21, [X8]
	0x034286D8 LDR X0, [X9]
	0x034286DC BL 0x1C16F10
	0x034286E0 ADRP X8, 0xCCC000
	0x034286E4 LDR X8, [X8 + 0x6C0]
	0x034286E8 MOV X22, X0
	0x034286EC LDR X1, [X8]
	0x034286F0 BL 0x2AA4804
	0x034286F4 ADRP X8, 0xD06000
	0x034286F8 LDR X8, [X8 + 0x7D8]
	0x034286FC LDR X1, [X19 + 0x30]
	0x03428700 LDR X0, [X8]
	0x03428704 MOV X2, X31
	0x03428708 BL 0x321B938
	0x0342870C CBZ X22, 0x3428938
	0x03428710 ADRP X8, 0xD06000
	0x03428714 LDR X8, [X8 + 0x7D0]
	0x03428718 ADRP X9, 0xCCC000
	0x0342871C LDR X9, [X9 + 0x810]
	0x03428720 MOV X2, X0
	0x03428724 LDR X1, [X8]
	0x03428728 LDR X3, [X9]
	0x0342872C MOV X0, X22
	0x03428730 BL 0x2AA5098
	0x03428734 LDR X0, [X19 + 0x20]
	0x03428738 MOV X1, X31
	0x0342873C BL 0x3483BE4
	0x03428740 MOV X23, X0
	0x03428744 MOV X0, X31
	0x03428748 BL 0x3241948
	0x0342874C CBZ X0, 0x342893C
	0x03428750 LDR X8, [X0]
	0x03428754 LDR X9, [X8 + 0x268]
	0x03428758 LDR X2, [X8 + 0x270]
	0x0342875C MOV X1, X23
	0x03428760 BLR X9
	0x03428764 LDR X24, [X25 + 0x10]
	0x03428768 CBZ X24, 0x3428940
	0x0342876C ADRP X10, 0xD06000
	0x03428770 LDR X10, [X10 + 0x7B8]
	0x03428774 LDR X8, [X24]
	0x03428778 LDR W26, [X25 + 0x18]
	0x0342877C LDP X27, X25, [X19 + 0x38]
	0x03428780 LDR X1, [X10]
	0x03428784 LDRH W9, [X8 + 0x12E]
	0x03428788 MOV X23, X0
	0x0342878C CBZ X9, 0x34287B0
	0x03428790 LDR X10, [X8 + 0xB0]
	0x03428794 ADD X10, X10, 0x8
	0x03428798 LDUR X11, [X10 - 0x8]
	0x0342879C CMP X11, X1
	0x034287A0 B.EQ 0x34287D8
	0x034287A4 SUBS X9, X9, 0x1
	0x034287A8 ADD X10, X10, 0x10
	0x034287AC B.NE 0x3428798
	0x034287B0 MOVZ W2, 0x3
	0x034287B4 MOV X0, X24
	0x034287B8 BL 0x1C5C788
	0x034287BC B 0x34287E8
	0x034287C0 LDR X8, [X19 + 0x48]
	0x034287C4 MOVN W9, 0x0
	0x034287C8 STR X8, [X31 + 0x18]
	0x034287CC STR X31, [X19 + 0x48]
	0x034287D0 STR W9, [X19]
	0x034287D4 B 0x3428844
	0x034287D8 LDR W9, [X10]
	0x034287DC ADD W9, W9, 0x3
	0x034287E0 ADD X8, X8, W9, 0x4, SXTW
	0x034287E4 ADD X0, X8, 0x138
	0x034287E8 LDP X8, X9, [X0]
	0x034287EC MOV X0, X24
	0x034287F0 MOV X1, X21
	0x034287F4 MOV X2, X20
	0x034287F8 MOV X3, X22
	0x034287FC MOV X4, X23
	0x03428800 MOV W5, W26
	0x03428804 MOV X6, X27
	0x03428808 MOV X7, X25
	0x0342880C STR X9, [X31]
	0x03428810 BLR X8
	0x03428814 CBZ X0, 0x3428944
	0x03428818 ADRP X8, 0xCCE000
	0x0342881C LDR X8, [X8 + 0x1F8]
	0x03428820 LDR X1, [X8]
	0x03428824 BL 0x269F5D0
	0x03428828 ADRP X8, 0xCCE000
	0x0342882C LDR X8, [X8 + 0x1F0]
	0x03428830 STR X0, [X31 + 0x18]
	0x03428834 LDR X1, [X8]
	0x03428838 ADD X0, X31, 0x18
	0x0342883C BL 0x2677430
	0x03428840 TBZ X0, 0x0, 0x3428880
	0x03428844 ADRP X8, 0xCCE000
	0x03428848 LDR X8, [X8 + 0x1E0]
	0x0342884C ADD X0, X31, 0x18
	0x03428850 LDR X1, [X8]
	0x03428854 BL 0x2677474
	0x03428858 MOVN W8, 0x1
	0x0342885C STR W8, [X19], #0x8
	0x03428860 LDR X0, [X28]
	0x03428864 LDR W8, [X0 + 0xE0]
	0x03428868 CBNZ W8, 0x3428870
	0x0342886C BL 0x1C16DFC
	0x03428870 MOV X0, X19
	0x03428874 MOV X1, X31
	0x03428878 BL 0x32C4864
	0x0342887C B 0x34288B8
	0x03428880 STR W31, [X19]
	0x03428884 LDR X8, [X31 + 0x18]
	0x03428888 STR X8, [X19 + 0x48]
	0x0342888C LDR X0, [X28]
	0x03428890 LDR W8, [X0 + 0xE0]
	0x03428894 CBNZ W8, 0x342889C
	0x03428898 BL 0x1C16DFC
	0x0342889C ADRP X8, 0xD06000
	0x034288A0 LDR X8, [X8 + 0xE58]
	0x034288A4 ADD X0, X19, 0x8
	0x034288A8 LDR X3, [X8]
	0x034288AC ADD X1, X31, 0x18
	0x034288B0 MOV X2, X19
	0x034288B4 BL 0x21868C4
	0x034288B8 LDP X20, X19, [X31 + 0x60]
	0x034288BC LDP X22, X21, [X31 + 0x50]
	0x034288C0 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB6000
	014 Move W8, [X20+1593]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xD07000
	021 Move X0, [X0+3600]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCF000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD5000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCD000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCCD000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCD000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD07000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCF000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCF000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCF000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD5000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCF5000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xD07000
	057 Move X0, [X0+3608]
	058 Call 0x1C17CF4
	059 Move X0, 0xD07000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xD07000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCCC000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1593], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCCF000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xD07000
	086 Move X9, 0xCCC000
	087 Move X8, [X8+3608]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCD5000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCD5000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCF5000
	139 Move X9, 0xCCD000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCCD000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xD07000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xD07000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCCD000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xD07000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCCF000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCCF000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCCF000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xD07000
	269 Move X8, [X8+3600]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCD4000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xD07000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xD07000
	301 Move X0, [X0+3616]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCCC000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCCF000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA8D000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034288C4 LDP X26, X25, [X31 + 0x30]
	0x034288C8 LDP X28, X27, [X31 + 0x20]
	0x034288CC LDR X30, [X31 + 0x10]
	0x034288D0 ADD X31, X31, 0x70
	0x034288D4 RET
	0x034288D8 ADRP X0, 0xCD3000
	0x034288DC LDR X0, [X0 + 0x578]
	0x034288E0 BL 0x1C16D08
	0x034288E4 BL 0x1C16F10
	0x034288E8 MOV X20, X0
	0x034288EC ADRP X0, 0xD06000
	0x034288F0 LDR X0, [X0 + 0xBC8]
	0x034288F4 BL 0x1C16D08
	0x034288F8 MOV X1, X0
	0x034288FC MOV X0, X20
	0x03428900 MOV X2, X31
	0x03428904 BL 0x3314A68
	0x03428908 ADRP X0, 0xD06000
	0x0342890C LDR X0, [X0 + 0xE68]
	0x03428910 BL 0x1C16D08
	0x03428914 MOV X1, X0
	0x03428918 MOV X0, X20
	0x0342891C BL 0x1C16DEC
	0x03428920 BL 0x1C16F20
	0x03428924 BL 0x1C16F20
	0x03428928 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB6000
	007 Move X22, 0xCCF000
	008 Move W8, [X21+1594]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCCF000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1594], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

