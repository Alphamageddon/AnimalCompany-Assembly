Type: Nakama.WebSocketStdlibAdapter/<ConnectAsync>d__27

Method: System.Void MoveNext()

Disassembly:
	0x03488C2C ADD W10, W10, 0x1
	0x03488C30 STR W10, [X20 + 0x1C]
	0x03488C34 CBZ X8, 0x3488D28
	0x03488C38 LDRSW X10, [X20 + 0x18]
	0x03488C3C LDR W11, [X8 + 0x18]
	0x03488C40 MOV X1, X0
	0x03488C44 CMP W10, W11
	0x03488C48 B.CS 0x3488C60
	0x03488C4C ADD W9, W10, 0x1
	0x03488C50 ADD X8, X8, X10, 0x3, LSL
	0x03488C54 STR W9, [X20 + 0x18]
	0x03488C58 STR X1, [X8 + 0x20]
	0x03488C5C B 0x3488C74
	0x03488C60 LDR X8, [X9 + 0x20]
	0x03488C64 MOV X0, X20
	0x03488C68 LDR X8, [X8 + 0xC0]
	0x03488C6C LDR X2, [X8 + 0x70]
	0x03488C70 BL 0x301BF90
	0x03488C74 LDR X0, [X23]
	0x03488C78 BL 0x1C16D0C
	0x03488C7C LDR X0, [X0 + 0x8]
	0x03488C80 CBZ X0, 0x3488D28
	0x03488C84 MOV W1, W31
	0x03488C88 MOV X2, X31
	0x03488C8C BL 0x3232ADC
	0x03488C90 MOV W25, W31
	0x03488C94 B 0x3488B74
	0x03488C98 LDR X0, [X23]
	0x03488C9C BL 0x1C16D0C
	0x03488CA0 LDR X0, [X0 + 0x8]
	0x03488CA4 CBZ X0, 0x3488D28
	0x03488CA8 LDR X8, [X0]
	0x03488CAC LDP X9, X1, [X8 + 0x168]
	0x03488CB0 BLR X9
	0x03488CB4 ADRP X9, 0xC6C000
	0x03488CB8 LDR X9, [X9 + 0x1B8]
	0x03488CBC LDR W10, [X20 + 0x1C]
	0x03488CC0 LDR X8, [X20 + 0x10]
	0x03488CC4 LDR X9, [X9]
	0x03488CC8 ADD W10, W10, 0x1
	0x03488CCC STR W10, [X20 + 0x1C]
	0x03488CD0 CBZ X8, 0x3488D28
	0x03488CD4 LDRSW X10, [X20 + 0x18]
	0x03488CD8 LDR W11, [X8 + 0x18]
	0x03488CDC MOV X1, X0
	0x03488CE0 CMP W10, W11
	0x03488CE4 B.CS 0x3488CFC
	0x03488CE8 ADD W9, W10, 0x1
	0x03488CEC ADD X8, X8, X10, 0x3, LSL
	0x03488CF0 STR W9, [X20 + 0x18]
	0x03488CF4 STR X1, [X8 + 0x20]
	0x03488CF8 B 0x3488D10
	0x03488CFC LDR X8, [X9 + 0x20]
	0x03488D00 MOV X0, X20
	0x03488D04 LDR X8, [X8 + 0xC0]
	0x03488D08 LDR X2, [X8 + 0x70]
	0x03488D0C BL 0x301BF90
	0x03488D10 MOV X0, X20
	0x03488D14 LDP X20, X19, [X31 + 0x30]
	0x03488D18 LDP X22, X21, [X31 + 0x20]
	0x03488D1C LDP X24, X23, [X31 + 0x10]
	0x03488D20 LDP X30, X25, [X31], #0x40
	0x03488D24 RET
	0x03488D28 BL 0x1C16F20
	0x03488D2C SUB X31, X31, 0xB0
	0x03488D30 STP X30, X27, [X31 + 0x60]
	0x03488D34 STP X26, X25, [X31 + 0x70]
	0x03488D38 STP X24, X23, [X31 + 0x80]
	0x03488D3C STP X22, X21, [X31 + 0x90]
	0x03488D40 STP X20, X19, [X31 + 0xA0]
	0x03488D44 MRS X25, 0xC000
	0x03488D48 LDR X8, [X25 + 0x28]
	0x03488D4C ADRP X21, 0xF55000
	0x03488D50 ADRP X23, 0xC93000
	0x03488D54 ADRP X24, 0xC6B000
	0x03488D58 STR X8, [X31 + 0x58]
	0x03488D5C LDRB W8, [X21 + 0x907]
	0x03488D60 LDR X23, [X23 + 0xB60]
	0x03488D64 LDR X24, [X24 + 0x6C0]
	0x03488D68 MOV X19, X1
	0x03488D6C MOV X20, X0
	0x03488D70 TBNZ X8, 0x0, 0x3488EF0
	0x03488D74 ADRP X0, 0xC74000
	0x03488D78 LDR X0, [X0 + 0x8D8]
	0x03488D7C BL 0x1C16CF4
	0x03488D80 ADRP X0, 0xC74000
	0x03488D84 LDR X0, [X0 + 0x9E8]
	0x03488D88 BL 0x1C16CF4
	0x03488D8C ADRP X0, 0xC6D000
	0x03488D90 LDR X0, [X0 + 0xC48]
	0x03488D94 BL 0x1C16CF4
	0x03488D98 ADRP X0, 0xC9D000
	0x03488D9C LDR X0, [X0 + 0x140]
	0x03488DA0 BL 0x1C16CF4
	0x03488DA4 ADRP X0, 0xC93000
	0x03488DA8 LDR X0, [X0 + 0x5F0]
	0x03488DAC BL 0x1C16CF4
	0x03488DB0 ADRP X0, 0xC94000
	0x03488DB4 LDR X0, [X0 + 0x388]
	0x03488DB8 BL 0x1C16CF4
	0x03488DBC ADRP X0, 0xC6B000
	0x03488DC0 LDR X0, [X0 + 0xDF8]
	0x03488DC4 BL 0x1C16CF4
	0x03488DC8 ADRP X0, 0xCA9000
	0x03488DCC LDR X0, [X0 + 0x218]
	0x03488DD0 BL 0x1C16CF4
	0x03488DD4 ADRP X0, 0xC92000
	0x03488DD8 LDR X0, [X0 + 0xFC8]
	0x03488DDC BL 0x1C16CF4
	0x03488DE0 ADRP X0, 0xC92000
	0x03488DE4 LDR X0, [X0 + 0xFD0]
	0x03488DE8 BL 0x1C16CF4
	0x03488DEC ADRP X0, 0xC92000
	0x03488DF0 LDR X0, [X0 + 0xFD8]
	0x03488DF4 BL 0x1C16CF4
	0x03488DF8 ADRP X0, 0xC6B000
	0x03488DFC LDR X0, [X0 + 0x818]
	0x03488E00 BL 0x1C16CF4
	0x03488E04 ADRP X0, 0xC72000
	0x03488E08 LDR X0, [X0 + 0x2F8]
	0x03488E0C BL 0x1C16CF4
	0x03488E10 ADRP X0, 0xC92000
	0x03488E14 LDR X0, [X0 + 0xD80]
	0x03488E18 BL 0x1C16CF4
	0x03488E1C ADRP X0, 0xC6B000
	0x03488E20 LDR X0, [X0 + 0x758]
	0x03488E24 BL 0x1C16CF4
	0x03488E28 ADRP X0, 0xC93000
	0x03488E2C LDR X0, [X0 + 0xFF8]
	0x03488E30 BL 0x1C16CF4
	0x03488E34 ADRP X0, 0xC92000
	0x03488E38 LDR X0, [X0 + 0xFE0]
	0x03488E3C BL 0x1C16CF4
	0x03488E40 ADRP X0, 0xC6C000
	0x03488E44 LDR X0, [X0 + 0x1C8]
	0x03488E48 BL 0x1C16CF4
	0x03488E4C ADRP X0, 0xC93000
	0x03488E50 LDR X0, [X0 + 0xB58]
	0x03488E54 BL 0x1C16CF4
	0x03488E58 ADRP X0, 0xC94000
	0x03488E5C LDR X0, [X0 + 0x20]
	0x03488E60 BL 0x1C16CF4
	0x03488E64 ADRP X0, 0xC6B000
	0x03488E68 LDR X0, [X0 + 0x9D0]
	0x03488E6C BL 0x1C16CF4
	0x03488E70 ADRP X0, 0xC75000
	0x03488E74 LDR X0, [X0 + 0x968]
	0x03488E78 BL 0x1C16CF4
	0x03488E7C ADRP X0, 0xCA9000
	0x03488E80 LDR X0, [X0 + 0x220]
	0x03488E84 BL 0x1C16CF4
	0x03488E88 ADRP X0, 0xC6B000
	0x03488E8C LDR X0, [X0 + 0x8F0]
	0x03488E90 BL 0x1C16CF4
	0x03488E94 ADRP X0, 0xC93000
	0x03488E98 LDR X0, [X0 + 0xB60]
	0x03488E9C BL 0x1C16CF4
	0x03488EA0 ADRP X0, 0xC6D000
	0x03488EA4 LDR X0, [X0 + 0x278]
	0x03488EA8 BL 0x1C16CF4
	0x03488EAC ADRP X0, 0xC73000
	0x03488EB0 LDR X0, [X0 + 0xC60]
	0x03488EB4 BL 0x1C16CF4
	0x03488EB8 ADRP X0, 0xC6B000
	0x03488EBC LDR X0, [X0 + 0x6C0]
	0x03488EC0 BL 0x1C16CF4
	0x03488EC4 ADRP X0, 0xCA9000
	0x03488EC8 LDR X0, [X0 + 0x228]
	0x03488ECC BL 0x1C16CF4
	0x03488ED0 ADRP X0, 0xC6B000
	0x03488ED4 LDR X0, [X0 + 0x830]
	0x03488ED8 BL 0x1C16CF4
	0x03488EDC ADRP X0, 0xCA9000
	0x03488EE0 LDR X0, [X0 + 0x230]
	0x03488EE4 BL 0x1C16CF4
	0x03488EE8 MOVZ W8, 0x1
	0x03488EEC STRB W8, [X21 + 0x907]
	0x03488EF0 LDR X0, [X24]
	0x03488EF4 STR W31, [X31 + 0x2C]
	0x03488EF8 STP X31, X31, [X31 + 0x48]
	0x03488EFC STP X31, X31, [X31 + 0x10]
	0x03488F00 STR X31, [X31 + 0x20]
	0x03488F04 LDR W8, [X0 + 0xE0]
	0x03488F08 LDR X21, [X23]
	0x03488F0C CBNZ W8, 0x3488F14
	0x03488F10 BL 0x1C16DFC
	0x03488F14 MOV X0, X21
	0x03488F18 MOV X1, X31
	0x03488F1C BL 0x338C698
	0x03488F20 MOV X1, X0
	0x03488F24 MOV X0, X20
	0x03488F28 MOV X2, X31
	0x03488F2C BL 0x3395194
	0x03488F30 TBZ X0, 0x0, 0x3489148
	0x03488F34 ADRP X8, 0xC74000
	0x03488F38 LDR X8, [X8 + 0x8D8]
	0x03488F3C MOVZ W1, 0x2
	0x03488F40 LDR X0, [X8]
	0x03488F44 BL 0x1C16D6C
	0x03488F48 CBZ X0, 0x3489BA8
	0x03488F4C LDR W8, [X0 + 0x18]
	0x03488F50 MOV X20, X0
	0x03488F54 CBZ W8, 0x3489BAC
	0x03488F58 MOVZ W9, 0x22
	0x03488F5C CMP W8, 0x1
	0x03488F60 STRH W9, [X20 + 0x20]
	0x03488F64 B.EQ 0x3489BAC
	0x03488F68 MOVZ W8, 0x27
	0x03488F6C STRH W8, [X20 + 0x22]
	0x03488F70 CBZ X19, 0x3489BA8
	0x03488F74 LDR W8, [X19 + 0x10]
	0x03488F78 CMP W8, 0x1
	0x03488F7C B.LT 0x34891B4
	0x03488F80 MOV X0, X19
	0x03488F84 MOV W1, W31
	0x03488F88 MOV X2, X31
	0x03488F8C BL 0x3222A1C
	0x03488F90 ADRP X21, 0xCA9000
	0x03488F94 LDR X21, [X21 + 0x218]
	0x03488F98 MOV W1, W0
	0x03488F9C MOV X0, X20
	0x03488FA0 LDR X2, [X21]
	0x03488FA4 BL 0x21BA2BC
	0x03488FA8 TBNZ X0, 0x0, 0x3488FD4
	0x03488FAC LDR W8, [X19 + 0x10]
	0x03488FB0 MOV X0, X19
	0x03488FB4 MOV X2, X31
	0x03488FB8 SUB W1, W8, 0x1
	0x03488FBC BL 0x3222A1C
	0x03488FC0 LDR X2, [X21]
	0x03488FC4 MOV W1, W0
	0x03488FC8 MOV X0, X20
	0x03488FCC BL 0x21BA2BC
	0x03488FD0 TBZ X0, 0x0, 0x348931C
	0x03488FD4 LDR W21, [X19 + 0x10]
	0x03488FD8 CMP W21, 0x2
	0x03488FDC B.LE 0x34891B4
	0x03488FE0 ADRP X8, 0xC6B000
	0x03488FE4 LDR X8, [X8 + 0x8F0]
	0x03488FE8 LDR X0, [X8]
	0x03488FEC BL 0x1C16F10
	0x03488FF0 MOV W1, W21
	0x03488FF4 MOV X2, X31
	0x03488FF8 MOV X20, X0
	0x03488FFC BL 0x3231B28
	0x03489000 LDR W8, [X19 + 0x10]
	0x03489004 SUB W8, W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xF56000
	010 Move W8, [X20+2305]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xCAA000
	017 Move X0, [X0+504]
	018 Call 0x1C17CF4
	019 Move X0, 0xC6F000
	020 Move X0, [X0+640]
	021 Call 0x1C17CF4
	022 Move X0, 0xC6E000
	023 Move X0, [X0+2640]
	024 Call 0x1C17CF4
	025 Move X0, 0xCAA000
	026 Move X0, [X0+448]
	027 Call 0x1C17CF4
	028 Move X0, 0xC6E000
	029 Move X0, [X0+1392]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2305], W8
	033 Move [X31], X31
	034 Move [X31+8], X31
	035 Move X23, 0xC6F000
	036 Move W8, [X19]
	037 Move X20, [X19+32]
	038 Move X23, [X23+640]
	039 Compare W8, 0
	040 JumpIfEqual {158}
	041 Compare X20, 0
	042 JumpIfEqual {209}
	043 Move X0, [X20+64]
	044 Compare X0, 0
	045 JumpIfEqual {59}
	046 Move X8, [X0]
	047 Move X9, [X8+440]
	048 Move X1, [X8+448]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X20+64]
	052 Compare X0, 0
	053 JumpIfEqual {59}
	054 Move X8, [X0]
	055 Move X9, [X8+440]
	056 Move X1, [X8+448]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X24, 0xC6E000
	060 Move X24, [X24+2640]
	061 Move X0, [X24]
	062 Call 0x1C17F10
	063 Move X21, X0
	064 Move X1, X31
	065 Call CancellationTokenSource..ctor, X0
	066 Move [X20+48], X21
	067 Move X8, [X19+40]
	068 Move [X20+56], X8
	069 Move X8, 0xCAA000
	070 Move X8, [X8+448]
	071 Move X0, [X8]
	072 Call 0x1C17F10
	073 Move X21, X0
	074 Move X1, X31
	075 Call ClientWebSocket..ctor, X0
	076 Move [X20+64], X21
	077 Move X8, 0xC6E000
	078 Move X8, [X8+1392]
	079 Move W21, [X19+48]
	080 Move X0, [X8]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 NotImplemented "Instruction SCVTF not yet implemented."
	086 Move X0, X31
	087 Call TimeSpan.FromSeconds, V0
	088 Move X22, X0
	089 Move X0, [X24]
	090 Call 0x1C17F10
	091 Move X21, X0
	092 Move X1, X22
	093 Move X2, X31
	094 Call CancellationTokenSource..ctor, X0, X1
	095 Move X0, [X20+48]
	096 Compare X0, 0
	097 JumpIfEqual {212}
	098 Move X1, X31
	099 Call CancellationTokenSource.get_Token, X0
	100 Compare X21, 0
	101 JumpIfEqual {213}
	102 Move X22, X0
	103 Move X0, X21
	104 Move X1, X31
	105 Call CancellationTokenSource.get_Token, X0
	106 Move X21, X0
	107 Move X0, [X24]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X22
	113 Move X1, X21
	114 Move X2, X31
	115 Call CancellationTokenSource.CreateLinkedTokenSource, X0, X1
	116 Compare X0, 0
	117 JumpIfEqual {214}
	118 Move X22, [X20+56]
	119 Move X21, [X20+64]
	120 Move X1, X31
	121 Call CancellationTokenSource.get_Token, X0
	122 Compare X21, 0
	123 JumpIfEqual {215}
	124 Move X2, X0
	125 Move X0, X21
	126 Move X1, X22
	127 Move X3, X31
	128 Call ClientWebSocket.ConnectAsync, X0, X1, X2
	129 Compare X0, 0
	130 JumpIfEqual {216}
	131 Move W1, W31
	132 Move X2, X31
	133 Call Task.ConfigureAwait, X0, X1
	134 Move [X31], X0
	135 Move [X31+8], X1
	136 Add X0, X31, 0
	137 Move X1, X31
	138 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {166}
	143 Move [X19], W31
	144 Move V0, [X31]
	145 Move [X19+56], V0
	146 Move X0, [X23]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X8, 0xCAA000
	152 Move X8, [X8+504]
	153 Add X0, X19, 8
	154 Move X3, [X8]
	155 Add X1, X31, 0
	156 Move X2, X19
	157 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 Move TEMP, 0
	160 Not TEMP
	161 Move W8, TEMP
	162 Move [X31], V0
	163 Move [X19+56], X31
	164 Move [X19+64], X31
	165 Move [X19], W8
	166 Add X0, X31, 0
	167 Move X1, X31
	168 Call ConfiguredTaskAwaiter.GetResult, X0
	169 Compare X20, 0
	170 JumpIfEqual {210}
	171 Move X0, [X20+48]
	172 Compare X0, 0
	173 JumpIfEqual {211}
	174 Move X21, [X20+64]
	175 Move X1, X31
	176 Call CancellationTokenSource.get_Token, X0
	177 Move X2, X0
	178 Move X0, X20
	179 Move X1, X21
	180 Call WebSocketStdlibAdapter.ReceiveLoop, X0, X1, X2
	181 Move X8, [X20+16]
	182 Compare X8, 0
	183 JumpIfEqual {188}
	184 Move X0, [X8+64]
	185 Move X1, [X8+40]
	186 Move X9, [X8+24]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move TEMP, 1
	189 Not TEMP
	190 Move W8, TEMP
	191 Move [X19+8], W8
	192 Move X0, [X23]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move X0, X19
	198 Move X1, X31
	199 Call AsyncTaskMethodBuilder.SetResult, X0
	200 Move X20, [X31+64]
	201 Move X19, [X31+72]
	202 Move X22, [X31+48]
	203 Move X21, [X31+56]
	204 Move X24, [X31+32]
	205 Move X23, [X31+40]
	206 Move X30, [X31+16]
	207 Add X31, X31, 80
	208 Return 
	209 Call 0x1C17F20
	210 Call 0x1C17F20
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Move X20, X0
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X0, X20
	220 Call 0x3EB2AD0
	221 Move X20, X0
	222 Move X0, 0xC6C000
	223 Move X0, [X0+2000]
	224 Call 0x1C17D08
	225 Move X8, [X20]
	226 Move X1, [X8]
	227 Call 0x1C18270
	228 Move TEMP, X0
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {249}
	232 Move X20, [X20]
	233 Call 0x3EB2AE0
	234 Move TEMP, 1
	235 Not TEMP
	236 Move W8, TEMP
	237 Move [X19+8], W8
	238 Move X0, 0xC6F000
	239 Move X0, [X0+640]
	240 Call 0x1C17D08
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Move X0, X19
	246 Move X1, X20
	247 Move X2, X31
	248 Call AsyncTaskMethodBuilder.SetException, X0, X1
	249 Move W0, 8
	250 Call 0x3EB2AF0
	251 Move X8, [X20]
	252 Move [X0], X8
	253 Move X1, 0xA2D000
	254 Add X1, X1, 3672
	255 Move X2, X31
	256 Call 0x3EB2B00
	257 Move X20, X0
	258 Call 0x3EB2AE0
	259 Move X0, X20
	260 Call 0x1D2D690
	261 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03489008 CMP W8, 0x2
	0x0348900C B.LT 0x3489324
	0x03489010 ADRP X23, 0xCA8000
	0x03489014 ADRP X24, 0xCA8000
	0x03489018 LDR X23, [X23 + 0x228]
	0x0348901C LDR X24, [X24 + 0x230]
	0x03489020 MOVZ W21, 0x1
	0x03489024 MOV X0, X19
	0x03489028 MOV W1, W21
	0x0348902C MOV X2, X31
	0x03489030 BL 0x3222A1C
	0x03489034 AND W8, W0, 0xFFFF
	0x03489038 CMP W8, 0x5C
	0x0348903C B.NE 0x3489108
	0x03489040 LDR W8, [X19 + 0x10]
	0x03489044 ADD W22, W21, 0x1
	0x03489048 SUB W8, W8, 0x1
	0x0348904C CMP W22, W8
	0x03489050 B.GE 0x3489108
	0x03489054 MOV X0, X19
	0x03489058 MOV W1, W22
	0x0348905C MOV X2, X31
	0x03489060 BL 0x3222A1C
	0x03489064 LDR X8, [X23]
	0x03489068 CBZ X8, 0x3489BA8
	0x0348906C MOV W1, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF55000
	007 Move X22, 0xC6E000
	008 Move W8, [X21+2306]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC6E000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2306], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

