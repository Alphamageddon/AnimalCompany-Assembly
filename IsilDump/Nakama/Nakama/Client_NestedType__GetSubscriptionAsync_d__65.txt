Type: Nakama.Client/<GetSubscriptionAsync>d__65

Method: System.Void MoveNext()

Disassembly:
	0x034560C0 B 0x34560D4
	0x034560C4 LDR W9, [X10]
	0x034560C8 ADD W9, W9, 0x7
	0x034560CC ADD X8, X8, W9, 0x4, SXTW
	0x034560D0 ADD X0, X8, 0x138
	0x034560D4 LDP X8, X1, [X0]
	0x034560D8 MOV X0, X21
	0x034560DC BLR X8
	0x034560E0 MOV X1, X31
	0x034560E4 BL 0x32277A8
	0x034560E8 TBNZ X0, 0x0, 0x345624C
	0x034560EC LDR X8, [X19 + 0x50]
	0x034560F0 CBZ X8, 0x34563CC
	0x034560F4 ADRP X9, 0xC9E000
	0x034560F8 LDR X9, [X9 + 0x9F0]
	0x034560FC LDR X21, [X8 + 0x18]
	0x03456100 LDR X0, [X9]
	0x03456104 LDR W9, [X0 + 0xE0]
	0x03456108 CBNZ W9, 0x3456110
	0x0345610C BL 0x1C16DFC
	0x03456110 MOV X0, X31
	0x03456114 BL 0x33616A4
	0x03456118 ADRP X22, 0xC9F000
	0x0345611C LDR X22, [X22 + 0xA10]
	0x03456120 MOV X8, X0
	0x03456124 STR X8, [X31 + 0x28]
	0x03456128 LDR X0, [X22]
	0x0345612C LDR W8, [X0 + 0xE0]
	0x03456130 CBNZ W8, 0x345613C
	0x03456134 BL 0x1C16DFC
	0x03456138 LDR X0, [X22]
	0x0345613C LDR X8, [X0 + 0xB8]
	0x03456140 LDR X1, [X8]
	0x03456144 ADD X0, X31, 0x28
	0x03456148 MOV X2, X31
	0x0345614C BL 0x335FC68
	0x03456150 CBZ X21, 0x34563D0
	0x03456154 LDR X8, [X21]
	0x03456158 LDR X1, [X23]
	0x0345615C MOV X22, X0
	0x03456160 LDRH W9, [X8 + 0x12E]
	0x03456164 CBZ X9, 0x3456188
	0x03456168 LDR X10, [X8 + 0xB0]
	0x0345616C ADD X10, X10, 0x8
	0x03456170 LDUR X11, [X10 - 0x8]
	0x03456174 CMP X11, X1
	0x03456178 B.EQ 0x3456198
	0x0345617C SUBS X9, X9, 0x1
	0x03456180 ADD X10, X10, 0x10
	0x03456184 B.NE 0x3456170
	0x03456188 MOVZ W2, 0xB
	0x0345618C MOV X0, X21
	0x03456190 BL 0x1C5C788
	0x03456194 B 0x34561A8
	0x03456198 LDR W9, [X10]
	0x0345619C ADD W9, W9, 0xB
	0x034561A0 ADD X8, X8, W9, 0x4, SXTW
	0x034561A4 ADD X0, X8, 0x138
	0x034561A8 LDP X8, X2, [X0]
	0x034561AC MOV X0, X21
	0x034561B0 MOV X1, X22
	0x034561B4 BLR X8
	0x034561B8 TBZ X0, 0x0, 0x345624C
	0x034561BC LDR X8, [X19 + 0x50]
	0x034561C0 CBZ X8, 0x34563D4
	0x034561C4 LDR X1, [X8 + 0x18]
	0x034561C8 LDR X3, [X19 + 0x48]
	0x034561CC LDR X4, [X8 + 0x30]
	0x034561D0 MOV X0, X20
	0x034561D4 MOV X2, X31
	0x034561D8 MOV X5, X31
	0x034561DC BL 0x34440A8
	0x034561E0 CBZ X0, 0x34563D8
	0x034561E4 ADRP X8, 0xC9E000
	0x034561E8 LDR X8, [X8 + 0x840]
	0x034561EC LDR X1, [X8]
	0x034561F0 BL 0x269F5D0
	0x034561F4 ADRP X8, 0xC9E000
	0x034561F8 LDR X8, [X8 + 0x838]
	0x034561FC STR X0, [X31 + 0x20]
	0x03456200 LDR X1, [X8]
	0x03456204 ADD X0, X31, 0x20
	0x03456208 BL 0x2677430
	0x0345620C TBNZ X0, 0x0, 0x3455FF4
	0x03456210 STR W31, [X19]
	0x03456214 LDR X8, [X31 + 0x20]
	0x03456218 STR X8, [X19 + 0x58]
	0x0345621C LDR X0, [X25]
	0x03456220 LDR W8, [X0 + 0xE0]
	0x03456224 CBNZ W8, 0x345622C
	0x03456228 BL 0x1C16DFC
	0x0345622C ADRP X8, 0xCD9000
	0x03456230 LDR X8, [X8 + 0xDD8]
	0x03456234 ADD X0, X19, 0x8
	0x03456238 LDR X3, [X8]
	0x0345623C ADD X1, X31, 0x20
	0x03456240 MOV X2, X19
	0x03456244 BL 0x2188558
	0x03456248 B 0x3456390
	0x0345624C CBZ X20, 0x34563B4
	0x03456250 ADRP X8, 0xCA5000
	0x03456254 LDR X8, [X8 + 0x818]
	0x03456258 LDR X21, [X20 + 0x58]
	0x0345625C LDR X23, [X19 + 0x50]
	0x03456260 LDR X0, [X8]
	0x03456264 BL 0x1C16F10
	0x03456268 ADRP X8, 0xCD9000
	0x0345626C LDR X8, [X8 + 0xDE8]
	0x03456270 MOV X22, X0
	0x03456274 LDR X2, [X8]
	0x03456278 MOV X1, X23
	0x0345627C MOV X3, X31
	0x03456280 BL 0x2D27AA8
	0x03456284 LDR X8, [X19 + 0x50]
	0x03456288 CBZ X8, 0x34563A8
	0x0345628C ADRP X9, 0xCD9000
	0x03456290 LDR X23, [X19 + 0x48]
	0x03456294 LDR X9, [X9 + 0x7C8]
	0x03456298 CBNZ X23, 0x34562A0
	0x0345629C LDR X23, [X20 + 0x18]
	0x034562A0 LDR X20, [X8 + 0x18]
	0x034562A4 LDR X1, [X8 + 0x30]
	0x034562A8 LDR X2, [X9]
	0x034562AC STP X31, X31, [X31 + 0x8]
	0x034562B0 ADD X0, X31, 0x8
	0x034562B4 BL 0x242E368
	0x034562B8 ADRP X8, 0xCD9000
	0x034562BC LDR X8, [X8 + 0x7D0]
	0x034562C0 LDR X0, [X8]
	0x034562C4 BL 0x1C16F10
	0x034562C8 LDP X3, X4, [X31 + 0x8]
	0x034562CC MOV X24, X0
	0x034562D0 MOV X1, X20
	0x034562D4 MOV X2, X23
	0x034562D8 MOV X5, X31
	0x034562DC BL 0x3465404
	0x034562E0 CBZ X21, 0x34563AC
	0x034562E4 MOV X0, X21
	0x034562E8 MOV X1, X22
	0x034562EC MOV X2, X24
	0x034562F0 MOV X3, X31
	0x034562F4 BL 0x3465B68
	0x034562F8 CBZ X0, 0x34563B0
	0x034562FC MOV X1, X31
	0x03456300 BL 0x33ED394
	0x03456304 STR X0, [X31 + 0x18]
	0x03456308 ADD X0, X31, 0x18
	0x0345630C MOV X1, X31
	0x03456310 BL 0x32C3A80
	0x03456314 TBZ X0, 0x0, 0x3456354
	0x03456318 ADD X0, X31, 0x18
	0x0345631C MOV X1, X31
	0x03456320 BL 0x32C3B4C
	0x03456324 MOVN W8, 0x1
	0x03456328 STR W8, [X19]
	0x0345632C STR X31, [X19 + 0x50]
	0x03456330 LDR X0, [X25]
	0x03456334 ADD X19, X19, 0x8
	0x03456338 LDR W8, [X0 + 0xE0]
	0x0345633C CBNZ W8, 0x3456344
	0x03456340 BL 0x1C16DFC
	0x03456344 MOV X0, X19
	0x03456348 MOV X1, X31
	0x0345634C BL 0x32C4864
	0x03456350 B 0x3456390
	0x03456354 MOVZ W8, 0x1
	0x03456358 STR W8, [X19]
	0x0345635C LDR X8, [X31 + 0x18]
	0x03456360 STR X8, [X19 + 0x60]
	0x03456364 LDR X0, [X25]
	0x03456368 LDR W8, [X0 + 0xE0]
	0x0345636C CBNZ W8, 0x3456374
	0x03456370 BL 0x1C16DFC
	0x03456374 ADRP X8, 0xCD9000
	0x03456378 LDR X8, [X8 + 0xDE0]
	0x0345637C ADD X0, X19, 0x8
	0x03456380 LDR X3, [X8]
	0x03456384 ADD X1, X31, 0x18
	0x03456388 MOV X2, X19
	0x0345638C BL 0x2189C1C
	0x03456390 LDP X20, X19, [X31 + 0x60]
	0x03456394 LDP X22, X21, [X31 + 0x50]
	0x03456398 LDP X24, X23, [X31 + 0x40]
	0x0345639C LDP X30, X25, [X31 + 0x30]
	0x034563A0 ADD X31, X31, 0x70
	0x034563A4 RET
	0x034563A8 BL 0x1C16F20
	0x034563AC BL 0x1C16F20
	0x034563B0 BL 0x1C16F20
	0x034563B4 BL 0x1C16F20
	0x034563B8 BL 0x1C16F20
	0x034563BC BL 0x1C16F20
	0x034563C0 BL 0x1C16F20
	0x034563C4 BL 0x1C16F20
	0x034563C8 BL 0x1C16F20
	0x034563CC BL 0x1C16F20
	0x034563D0 BL 0x1C16F20
	0x034563D4 BL 0x1C16F20
	0x034563D8 BL 0x1C16F20
	0x034563DC B 0x3456454
	0x034563E0 B 0x3456454
	0x034563E4 B 0x3456454
	0x034563E8 B 0x3456454
	0x034563EC B 0x3456454
	0x034563F0 B 0x3456454
	0x034563F4 B 0x3456454
	0x034563F8 B 0x3456454
	0x034563FC B 0x3456454
	0x03456400 B 0x3456454
	0x03456404 B 0x3456454
	0x03456408 B 0x3456454
	0x0345640C B 0x3456454
	0x03456410 B 0x3456454
	0x03456414 B 0x3456454
	0x03456418 B 0x3456454
	0x0345641C B 0x3456454
	0x03456420 B 0x3456454
	0x03456424 B 0x3456454
	0x03456428 B 0x3456454
	0x0345642C B 0x3456454
	0x03456430 B 0x3456454
	0x03456434 B 0x3456454
	0x03456438 B 0x3456454
	0x0345643C B 0x3456454
	0x03456440 B 0x3456454
	0x03456444 B 0x3456454
	0x03456448 B 0x3456454
	0x0345644C B 0x3456454
	0x03456450 B 0x3456454
	0x03456454 MOV X20, X0
	0x03456458 CMP W1, 0x1
	0x0345645C B.NE 0x34564F0
	0x03456460 MOV X0, X20
	0x03456464 BL 0x3EB1AD0
	0x03456468 MOV X20, X0
	0x0345646C ADRP X0, 0xC9D000
	0x03456470 LDR X0, [X0 + 0x7D0]
	0x03456474 BL 0x1C16D08
	0x03456478 LDR X8, [X20]
	0x0345647C LDR X1, [X8]
	0x03456480 BL 0x1C17270
	0x03456484 TBZ X0, 0x0, 0x34564C8
	0x03456488 LDR X20, [X20]
	0x0345648C BL 0x3EB1AE0
	0x03456490 MOVN W8, 0x1
	0x03456494 STR X31, [X19 + 0x50]
	0x03456498 STR W8, [X19], #0x8
	0x0345649C ADRP X0, 0xCA0000
	0x034564A0 LDR X0, [X0 + 0x280]
	0x034564A4 BL 0x1C16D08
	0x034564A8 LDR W8, [X0 + 0xE0]
	0x034564AC CBNZ W8, 0x34564B4
	0x034564B0 BL 0x1C16DFC
	0x034564B4 MOV X0, X19
	0x034564B8 MOV X1, X20
	0x034564BC MOV X2, X31
	0x034564C0 BL 0x32C4908
	0x034564C4 B 0x3456390
	0x034564C8 MOVZ W0, 0x8
	0x034564CC BL 0x3EB1AF0
	0x034564D0 LDR X8, [X20]
	0x034564D4 STR X8, [X0]
	0x034564D8 ADRP X1, 0xA5E000
	0x034564DC ADD X1, X1, 0xE58
	0x034564E0 MOV X2, X31
	0x034564E4 BL 0x3EB1B00
	0x034564E8 MOV X20, X0
	0x034564EC BL 0x3EB1AE0
	0x034564F0 MOV X0, X20
	0x034564F4 BL 0x1D2C690
	0x034564F8 BL 0x1990590
	0x034564FC STR X30, [X31 - 0x30]!
	0x03456500 STP X22, X21, [X31 + 0x10]
	0x03456504 STP X20, X19, [X31 + 0x20]
	0x03456508 ADRP X21, 0xF87000
	0x0345650C ADRP X22, 0xCA0000
	0x03456510 LDRB W8, [X21 + 0x786]
	0x03456514 LDR X22, [X22 + 0x280]
	0x03456518 MOV X19, X1
	0x0345651C MOV X20, X0
	0x03456520 TBNZ X8, 0x0, 0x3456538
	0x03456524 ADRP X0, 0xCA0000
	0x03456528 LDR X0, [X0 + 0x280]
	0x0345652C BL 0x1C16CF4
	0x03456530 MOVZ W8, 0x1
	0x03456534 STRB W8, [X21 + 0x786]
	0x03456538 LDR X0, [X22]
	0x0345653C LDR W8, [X0 + 0xE0]
	0x03456540 CBNZ W8, 0x3456548
	0x03456544 BL 0x1C16DFC
	0x03456548 ADD X0, X20, 0x8
	0x0345654C MOV X1, X19
	0x03456550 LDP X20, X19, [X31 + 0x20]
	0x03456554 LDP X22, X21, [X31 + 0x10]
	0x03456558 MOV X2, X31
	0x0345655C LDR X30, [X31], #0x30
	0x03456560 B 0x32C477C
	0x03456564 SUB X31, X31, 0x70
	0x03456568 STP X30, X25, [X31 + 0x30]
	0x0345656C STP X24, X23, [X31 + 0x40]
	0x03456570 STP X22, X21, [X31 + 0x50]
	0x03456574 STP X20, X19, [X31 + 0x60]
	0x03456578 ADRP X20, 0xF87000
	0x0345657C LDRB W8, [X20 + 0x787]
	0x03456580 MOV X19, X0
	0x03456584 TBNZ X8, 0x0, 0x3456638
	0x03456588 ADRP X0, 0xCD9000
	0x0345658C LDR X0, [X0 + 0xDF8]
	0x03456590 BL 0x1C16CF4
	0x03456594 ADRP X0, 0xCD9000
	0x03456598 LDR X0, [X0 + 0xE00]
	0x0345659C BL 0x1C16CF4
	0x034565A0 ADRP X0, 0xCA0000
	0x034565A4 LDR X0, [X0 + 0x280]
	0x034565A8 BL 0x1C16CF4
	0x034565AC ADRP X0, 0xC9F000
	0x034565B0 LDR X0, [X0 + 0xA10]
	0x034565B4 BL 0x1C16CF4
	0x034565B8 ADRP X0, 0xC9E000
	0x034565BC LDR X0, [X0 + 0x9F0]
	0x034565C0 BL 0x1C16CF4
	0x034565C4 ADRP X0, 0xCA5000
	0x034565C8 LDR X0, [X0 + 0x818]
	0x034565CC BL 0x1C16CF4
	0x034565D0 ADRP X0, 0xC9E000
	0x034565D4 LDR X0, [X0 + 0x818]
	0x034565D8 BL 0x1C16CF4
	0x034565DC ADRP X0, 0xCD9000
	0x034565E0 LDR X0, [X0 + 0x7C8]
	0x034565E4 BL 0x1C16CF4
	0x034565E8 ADRP X0, 0xCD9000
	0x034565EC LDR X0, [X0 + 0x7D0]
	0x034565F0 BL 0x1C16CF4
	0x034565F4 ADRP X0, 0xC9E000
	0x034565F8 LDR X0, [X0 + 0x830]
	0x034565FC BL 0x1C16CF4
	0x03456600 ADRP X0, 0xC9E000
	0x03456604 LDR X0, [X0 + 0x838]
	0x03456608 BL 0x1C16CF4
	0x0345660C ADRP X0, 0xC9E000
	0x03456610 LDR X0, [X0 + 0x840]
	0x03456614 BL 0x1C16CF4
	0x03456618 ADRP X0, 0xCD9000
	0x0345661C LDR X0, [X0 + 0xE08]
	0x03456620 BL 0x1C16CF4
	0x03456624 ADRP X0, 0xCD9000
	0x03456628 LDR X0, [X0 + 0xE10]
	0x0345662C BL 0x1C16CF4
	0x03456630 MOVZ W8, 0x1
	0x03456634 STRB W8, [X20 + 0x787]
	0x03456638 STP X31, X31, [X31 + 0x20]
	0x0345663C STR X31, [X31 + 0x18]
	0x03456640 ADRP X25, 0xCA0000
	0x03456644 LDR W8, [X19]
	0x03456648 LDR X20, [X19 + 0x20]
	0x0345664C LDR X25, [X25 + 0x280]
	0x03456650 CBZ W8, 0x3456674
	0x03456654 CMP W8, 0x1
	0x03456658 B.NE 0x34566A0
	0x0345665C LDR X8, [X19 + 0x60]
	0x03456660 MOVN W9, 0x0
	0x03456664 STR X8, [X31 + 0x18]
	0x03456668 STR X31, [X19 + 0x60]
	0x0345666C STR W9, [X19]
	0x03456670 B 0x34569AC
	0x03456674 LDR X8, [X19 + 0x58]
	0x03456678 MOVN W9, 0x0
	0x0345667C STR X8, [X31 + 0x20]
	0x03456680 STR X31, [X19 + 0x58]
	0x03456684 STR W9, [X19]
	0x03456688 ADRP X8, 0xC9E000
	0x0345668C LDR X8, [X8 + 0x830]
	0x03456690 ADD X0, X31, 0x20
	0x03456694 LDR X1, [X8]
	0x03456698 BL 0x2677474
	0x0345669C B 0x34568E0
	0x034566A0 ADRP X8, 0xCD9000
	0x034566A4 LDR X8, [X8 + 0xE10]
	0x034566A8 LDR X0, [X8]
	0x034566AC BL 0x1C16F10
	0x034566B0 MOV X21, X0
	0x034566B4 MOV X1, X31
	0x034566B8 BL 0x3449794
	0x034566BC STR X21, [X19 + 0x50]
	0x034566C0 CBZ X21, 0x3456A4C
	0x034566C4 LDR X8, [X19 + 0x20]
	0x034566C8 STR X8, [X21 + 0x10]
	0x034566CC LDR X8, [X19 + 0x28]
	0x034566D0 STR X8, [X21 + 0x18]
	0x034566D4 LDR X8, [X19 + 0x30]
	0x034566D8 STR X8, [X21 + 0x20]
	0x034566DC LDRH W8, [X19 + 0x38]
	0x034566E0 STRH W8, [X21 + 0x28]
	0x034566E4 LDR X8, [X19 + 0x50]
	0x034566E8 CBZ X8, 0x3456A50
	0x034566EC LDR X9, [X19 + 0x40]
	0x034566F0 STR X9, [X8 + 0x30]
	0x034566F4 CBZ X20, 0x3456A54
	0x034566F8 LDRB W8, [X20 + 0x10]
	0x034566FC CBZ W8, 0x34568E4
	0x03456700 LDR X8, [X19 + 0x50]
	0x03456704 CBZ X8, 0x3456A58
	0x03456708 LDR X21, [X8 + 0x18]
	0x0345670C CBZ X21, 0x3456A5C
	0x03456710 ADRP X23, 0xC9E000
	0x03456714 LDR X8, [X21]
	0x03456718 LDR X23, [X23 + 0x818]
	0x0345671C LDRH W9, [X8 + 0x12E]
	0x03456720 LDR X1, [X23]
	0x03456724 CBZ X9, 0x3456748
	0x03456728 LDR X10, [X8 + 0xB0]
	0x0345672C ADD X10, X10, 0x8
	0x03456730 LDUR X11, [X10 - 0x8]
	0x03456734 CMP X11, X1
	0x03456738 B.EQ 0x3456758
	0x0345673C SUBS X9, X9, 0x1
	0x03456740 ADD X10, X10, 0x10
	0x03456744 B.NE 0x3456730
	0x03456748 MOVZ W2, 0x7

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF88000
	011 Move W8, [X20+1921]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCDA000
	018 Move X0, [X0+3400]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDA000
	021 Move X0, [X0+3408]
	022 Call 0x1C17CF4
	023 Move X0, 0xCD9000
	024 Move X0, [X0+3312]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD9000
	027 Move X0, [X0+1456]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA0000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC9F000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCDA000
	036 Move X0, [X0+3416]
	037 Call 0x1C17CF4
	038 Move X0, 0xC9F000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDA000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCDA000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCDA000
	048 Move X0, [X0+3424]
	049 Call 0x1C17CF4
	050 Move X0, 0xCDA000
	051 Move X0, [X0+3432]
	052 Call 0x1C17CF4
	053 Move X0, 0xC9F000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC9F000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCDA000
	060 Move X0, [X0+3440]
	061 Call 0x1C17CF4
	062 Move X0, 0xC9F000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCDA000
	066 Move X0, [X0+3448]
	067 Call 0x1C17CF4
	068 Move X0, 0xCDA000
	069 Move X0, [X0+3456]
	070 Call 0x1C17CF4
	071 Move X0, 0xCDA000
	072 Move X0, [X0+3464]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1921], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCD9000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1456]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+88]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+88], X31
	092 Move [X19], W9
	093 Move X8, [X19+80]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+80], X31
	099 Move [X19], W9
	100 Move X8, 0xC9F000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCDA000
	106 Move X8, [X8+3464]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass65_0..ctor, X0
	112 Move [X19+72], X21
	113 Compare X21, 0
	114 JumpIfEqual {383}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move X8, [X19+56]
	122 Move [X21+40], X8
	123 Compare X20, 0
	124 JumpIfEqual {384}
	125 Move W8, [X20+16]
	126 Compare W8, 0
	127 JumpIfEqual {265}
	128 Move X8, [X19+72]
	129 Compare X8, 0
	130 JumpIfEqual {385}
	131 Move X21, [X8+24]
	132 Compare X21, 0
	133 JumpIfEqual {386}
	134 Move X23, 0xC9F000
	135 Move X8, [X21]
	136 Move X23, [X23+2072]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move X1, [X23]
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 7
	148 Move X0, X21
	149 Call 0x1C5D788
	150 Move W9, [X10]
	151 Add W9, W9, 7
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X1, X31
	159 Call String.IsNullOrEmpty, X0
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {263}
	164 Move X8, [X19+72]
	165 Compare X8, 0
	166 JumpIfEqual {387}
	167 Move X9, 0xC9F000
	168 Move X9, [X9+2544]
	169 Move X21, [X8+24]
	170 Move X0, [X9]
	171 Move W9, [X0+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X31
	176 Call DateTime.get_UtcNow
	177 Move X22, 0xCA0000
	178 Move X22, [X22+2576]
	179 Move X8, X0
	180 Move [X31+40], X8
	181 Move X0, [X22]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X22]
	187 Move X8, [X0+184]
	188 Move X1, [X8]
	189 Add X0, X31, 40
	190 Move X2, X31
	191 Call DateTime.Add, X0, X1
	192 Compare X21, 0
	193 JumpIfEqual {388}
	194 Move X8, [X21]
	195 Move X1, [X23]
	196 Move X22, X0
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move W2, 11
	207 Move X0, X21
	208 Call 0x1C5D788
	209 Move W9, [X10]
	210 Add W9, W9, 11
	211 Add X8, X8, W9
	212 Add X0, X8, 312
	213 Move X8, [X0]
	214 Move X2, [X0+8]
	215 Move X0, X21
	216 Move X1, X22
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {263}
	222 Move X8, [X19+72]
	223 Compare X8, 0
	224 JumpIfEqual {389}
	225 Move X1, [X8+24]
	226 Move X3, [X19+64]
	227 Move X4, [X8+40]
	228 Move X0, X20
	229 Move X2, X31
	230 Move X5, X31
	231 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	232 Compare X0, 0
	233 JumpIfEqual {390}
	234 Move X8, 0xC9F000
	235 Move X8, [X8+2112]
	236 Move X1, [X8]
	237 Call Task`1<Object>.GetAwaiter, X0
	238 Move X8, 0xC9F000
	239 Move X8, [X8+2104]
	240 Move [X31+32], X0
	241 Move X1, [X8]
	242 Add X0, X31, 32
	243 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {100}
	248 Move [X19], W31
	249 Move X8, [X31+32]
	250 Move [X19+80], X8
	251 Move X0, [X25]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X8, 0xCDA000
	257 Move X8, [X8+3408]
	258 Add X0, X19, 8
	259 Move X3, [X8]
	260 Add X1, X31, 32
	261 Move X2, X19
	262 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	263 Compare X20, 0
	264 JumpIfEqual {382}
	265 Move X8, 0xCDA000
	266 Move X8, [X8+3416]
	267 Move X21, [X20+88]
	268 Move X23, [X19+72]
	269 Move X0, [X8]
	270 Call 0x1C17F10
	271 Move X8, 0xCDA000
	272 Move X8, [X8+3456]
	273 Move X22, X0
	274 Move X2, [X8]
	275 Move X1, X23
	276 Move X3, X31
	277 Call Func`1<Object>..ctor, X0, X1, X2
	278 Move X8, [X19+72]
	279 Compare X8, 0
	280 JumpIfEqual {379}
	281 Move X9, 0xCDA000
	282 Move X23, [X19+64]
	283 Move X9, [X9+1992]
	284 Compare X23, 0
	285 JumpIfNotEqual {287}
	286 Move X23, [X20+24]
	287 Move X20, [X8+24]
	288 Move X1, [X8+40]
	289 Move X2, [X9]
	290 Move [X31+8], X31
	291 Move [X31+16], X31
	292 Add X0, X31, 8
	293 Call Nullable`1<CancellationToken>..ctor, X0, X1
	294 Move X8, 0xCDA000
	295 Move X8, [X8+2000]
	296 Move X0, [X8]
	297 Call 0x1C17F10
	298 Move X3, [X31+8]
	299 Move X4, [X31+16]
	300 Move X24, X0
	301 Move X1, X20
	302 Move X2, X23
	303 Move X5, X31
	304 Call RetryHistory..ctor, X0, X1, X2, X3
	305 Compare X21, 0
	306 JumpIfEqual {380}
	307 Move X8, 0xCDA000
	308 Move X8, [X8+3424]
	309 Move X3, [X8]
	310 Move X0, X21
	311 Move X1, X22
	312 Move X2, X24
	313 Call 0x2244230, X0, X1, X2
	314 Compare X0, 0
	315 JumpIfEqual {381}
	316 Move X8, 0xCDA000
	317 Move X8, [X8+3448]
	318 Move X1, [X8]
	319 Call Task`1<Object>.GetAwaiter, X0
	320 Move X8, 0xCDA000
	321 Move X8, [X8+3440]
	322 Move [X31+24], X0
	323 Move X1, [X8]
	324 Add X0, X31, 24
	325 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	326 Move TEMP, X0
	327 And TEMP, TEMP, 1
	328 Compare TEMP, 1
	329 JumpIfNotEqual {353}
	330 Move X8, 0xCDA000
	331 Move X8, [X8+3432]
	332 Add X0, X31, 24
	333 Move X1, [X8]
	334 Call TaskAwaiter`1<Object>.GetResult, X0
	335 Move TEMP, 1
	336 Not TEMP
	337 Move W8, TEMP
	338 Move [X19], W8
	339 Move [X19+72], X31
	340 Move X20, X0
	341 Move X0, [X25]
	342 Move X21, 0xCD9000
	343 Add X19, X19, 8
	344 Move W8, [X0+224]
	345 Move X21, [X21+3312]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X2, [X21]
	350 Move X0, X19
	351 Move X1, X20
	352 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	353 Move W8, 1
	354 Move [X19], W8
	355 Move X8, [X31+24]
	356 Move [X19+88], X8
	357 Move X0, [X25]
	358 Move W8, [X0+224]
	359 Compare W8, 0
	360 JumpIfNotEqual {362}
	361 Call 0x1C17DFC
	362 Move X8, 0xCDA000
	363 Move X8, [X8+3400]
	364 Add X0, X19, 8
	365 Move X3, [X8]
	366 Add X1, X31, 24
	367 Move X2, X19
	368 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	369 Move X20, [X31+96]
	370 Move X19, [X31+104]
	371 Move X22, [X31+80]
	372 Move X21, [X31+88]
	373 Move X24, [X31+64]
	374 Move X23, [X31+72]
	375 Move X30, [X31+48]
	376 Move X25, [X31+56]
	377 Add X31, X31, 112
	378 Return 
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Move X20, X0
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Move X0, X20
	394 Call 0x3EB2AD0
	395 Move X20, X0
	396 Move X0, 0xC9E000
	397 Move X0, [X0+2000]
	398 Call 0x1C17D08
	399 Move X8, [X20]
	400 Move X1, [X8]
	401 Call 0x1C18270
	402 Move TEMP, X0
	403 And TEMP, TEMP, 1
	404 Compare TEMP, 1
	405 JumpIfNotEqual {427}
	406 Move X20, [X20]
	407 Call 0x3EB2AE0
	408 Move TEMP, 1
	409 Not TEMP
	410 Move W8, TEMP
	411 Move [X19+72], X31
	412 Move [X19+8], W8
	413 Move X0, 0xCD9000
	414 Move X0, [X0+1456]
	415 Call 0x1C17D08
	416 Move W8, [X0+224]
	417 Compare W8, 0
	418 JumpIfNotEqual {420}
	419 Call 0x1C17DFC
	420 Move X0, 0xCD9000
	421 Move X0, [X0+3360]
	422 Call 0x1C17D08
	423 Move X2, X0
	424 Move X0, X19
	425 Move X1, X20
	426 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	427 Move W0, 8
	428 Call 0x3EB2AF0
	429 Move X8, [X20]
	430 Move [X0], X8
	431 Move X1, 0xA5F000
	432 Add X1, X1, 3672
	433 Move X2, X31
	434 Call 0x3EB2B00
	435 Move X20, X0
	436 Call 0x3EB2AE0
	437 Move X0, X20
	438 Call 0x1D2D690
	439 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345674C MOV X0, X21
	0x03456750 BL 0x1C5C788
	0x03456754 B 0x3456768
	0x03456758 LDR W9, [X10]
	0x0345675C ADD W9, W9, 0x7
	0x03456760 ADD X8, X8, W9, 0x4, SXTW
	0x03456764 ADD X0, X8, 0x138
	0x03456768 LDP X8, X1, [X0]
	0x0345676C MOV X0, X21
	0x03456770 BLR X8
	0x03456774 MOV X1, X31
	0x03456778 BL 0x32277A8
	0x0345677C TBNZ X0, 0x0, 0x34568E0
	0x03456780 LDR X8, [X19 + 0x50]
	0x03456784 CBZ X8, 0x3456A60
	0x03456788 ADRP X9, 0xC9E000
	0x0345678C LDR X9, [X9 + 0x9F0]
	0x03456790 LDR X21, [X8 + 0x18]
	0x03456794 LDR X0, [X9]
	0x03456798 LDR W9, [X0 + 0xE0]
	0x0345679C CBNZ W9, 0x34567A4
	0x034567A0 BL 0x1C16DFC
	0x034567A4 MOV X0, X31
	0x034567A8 BL 0x33616A4
	0x034567AC ADRP X22, 0xC9F000
	0x034567B0 LDR X22, [X22 + 0xA10]
	0x034567B4 MOV X8, X0
	0x034567B8 STR X8, [X31 + 0x28]
	0x034567BC LDR X0, [X22]
	0x034567C0 LDR W8, [X0 + 0xE0]
	0x034567C4 CBNZ W8, 0x34567D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF88000
	007 Move X21, 0xCD9000
	008 Move W8, [X22+1922]
	009 Move X21, [X21+1456]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCD9000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move X0, 0xCD9000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1922], W8
	024 Move X0, [X21]
	025 Move X21, 0xCD9000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3368]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

