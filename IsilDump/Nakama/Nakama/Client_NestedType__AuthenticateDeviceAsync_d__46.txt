Type: Nakama.Client/<AuthenticateDeviceAsync>d__46

Method: System.Void MoveNext()

Disassembly:
	0x0344E858 BL 0x26324C8
	0x0344E85C B 0x344E77C
	0x0344E860 MOVZ W0, 0x8
	0x0344E864 BL 0x3EB1AF0
	0x0344E868 LDR X8, [X20]
	0x0344E86C STR X8, [X0]
	0x0344E870 ADRP X1, 0xA66000
	0x0344E874 ADD X1, X1, 0xE58
	0x0344E878 MOV X2, X31
	0x0344E87C BL 0x3EB1B00
	0x0344E880 MOV X20, X0
	0x0344E884 BL 0x3EB1AE0
	0x0344E888 MOV X0, X20
	0x0344E88C BL 0x1D2C690
	0x0344E890 BL 0x1990590
	0x0344E894 STR X30, [X31 - 0x30]!
	0x0344E898 STP X22, X21, [X31 + 0x10]
	0x0344E89C STP X20, X19, [X31 + 0x20]
	0x0344E8A0 ADRP X22, 0xF8F000
	0x0344E8A4 ADRP X21, 0xCE1000
	0x0344E8A8 LDRB W8, [X22 + 0x760]
	0x0344E8AC LDR X21, [X21 + 0x630]
	0x0344E8B0 MOV X19, X1
	0x0344E8B4 MOV X20, X0
	0x0344E8B8 TBNZ X8, 0x0, 0x344E8DC
	0x0344E8BC ADRP X0, 0xCE1000
	0x0344E8C0 LDR X0, [X0 + 0xAA8]
	0x0344E8C4 BL 0x1C16CF4
	0x0344E8C8 ADRP X0, 0xCE1000
	0x0344E8CC LDR X0, [X0 + 0x630]
	0x0344E8D0 BL 0x1C16CF4
	0x0344E8D4 MOVZ W8, 0x1
	0x0344E8D8 STRB W8, [X22 + 0x760]
	0x0344E8DC LDR X0, [X21]
	0x0344E8E0 ADRP X21, 0xCE1000
	0x0344E8E4 LDR W8, [X0 + 0xE0]
	0x0344E8E8 LDR X21, [X21 + 0xAA8]
	0x0344E8EC CBNZ W8, 0x344E8F4
	0x0344E8F0 BL 0x1C16DFC
	0x0344E8F4 LDR X2, [X21]
	0x0344E8F8 ADD X0, X20, 0x8
	0x0344E8FC MOV X1, X19
	0x0344E900 LDP X20, X19, [X31 + 0x20]
	0x0344E904 LDP X22, X21, [X31 + 0x10]
	0x0344E908 LDR X30, [X31], #0x30
	0x0344E90C B 0x2632228
	0x0344E910 SUB X31, X31, 0x60
	0x0344E914 STP X30, X25, [X31 + 0x20]
	0x0344E918 STP X24, X23, [X31 + 0x30]
	0x0344E91C STP X22, X21, [X31 + 0x40]
	0x0344E920 STP X20, X19, [X31 + 0x50]
	0x0344E924 ADRP X20, 0xF8F000
	0x0344E928 LDRB W8, [X20 + 0x761]
	0x0344E92C MOV X19, X0
	0x0344E930 TBNZ X8, 0x0, 0x344E9E4
	0x0344E934 ADRP X0, 0xCE1000
	0x0344E938 LDR X0, [X0 + 0xB10]
	0x0344E93C BL 0x1C16CF4
	0x0344E940 ADRP X0, 0xCE1000
	0x0344E944 LDR X0, [X0 + 0xA50]
	0x0344E948 BL 0x1C16CF4
	0x0344E94C ADRP X0, 0xCE1000
	0x0344E950 LDR X0, [X0 + 0x630]
	0x0344E954 BL 0x1C16CF4
	0x0344E958 ADRP X0, 0xCE1000
	0x0344E95C LDR X0, [X0 + 0xA58]
	0x0344E960 BL 0x1C16CF4
	0x0344E964 ADRP X0, 0xCE1000
	0x0344E968 LDR X0, [X0 + 0xA60]
	0x0344E96C BL 0x1C16CF4
	0x0344E970 ADRP X0, 0xCE1000
	0x0344E974 LDR X0, [X0 + 0x7C8]
	0x0344E978 BL 0x1C16CF4
	0x0344E97C ADRP X0, 0xCE1000
	0x0344E980 LDR X0, [X0 + 0x7D0]
	0x0344E984 BL 0x1C16CF4
	0x0344E988 ADRP X0, 0xCE1000
	0x0344E98C LDR X0, [X0 + 0xA68]
	0x0344E990 BL 0x1C16CF4
	0x0344E994 ADRP X0, 0xCE1000
	0x0344E998 LDR X0, [X0 + 0xA70]
	0x0344E99C BL 0x1C16CF4
	0x0344E9A0 ADRP X0, 0xCE1000
	0x0344E9A4 LDR X0, [X0 + 0xA78]
	0x0344E9A8 BL 0x1C16CF4
	0x0344E9AC ADRP X0, 0xCE1000
	0x0344E9B0 LDR X0, [X0 + 0xA80]
	0x0344E9B4 BL 0x1C16CF4
	0x0344E9B8 ADRP X0, 0xCE1000
	0x0344E9BC LDR X0, [X0 + 0xA88]
	0x0344E9C0 BL 0x1C16CF4
	0x0344E9C4 ADRP X0, 0xCE1000
	0x0344E9C8 LDR X0, [X0 + 0xB18]
	0x0344E9CC BL 0x1C16CF4
	0x0344E9D0 ADRP X0, 0xCE1000
	0x0344E9D4 LDR X0, [X0 + 0xB20]
	0x0344E9D8 BL 0x1C16CF4
	0x0344E9DC MOVZ W8, 0x1
	0x0344E9E0 STRB W8, [X20 + 0x761]
	0x0344E9E4 STR X31, [X31 + 0x18]
	0x0344E9E8 ADRP X25, 0xCE1000
	0x0344E9EC LDR W8, [X19]
	0x0344E9F0 LDR X25, [X25 + 0x630]
	0x0344E9F4 CBZ W8, 0x344EB70
	0x0344E9F8 ADRP X8, 0xCE1000
	0x0344E9FC LDR X8, [X8 + 0xB20]
	0x0344EA00 LDR X24, [X19 + 0x20]
	0x0344EA04 LDR X0, [X8]
	0x0344EA08 BL 0x1C16F10
	0x0344EA0C MOV X22, X0
	0x0344EA10 MOV X1, X31
	0x0344EA14 BL 0x3448158
	0x0344EA18 CBZ X22, 0x344ED38
	0x0344EA1C LDR X8, [X19 + 0x20]
	0x0344EA20 STR X8, [X22 + 0x10]
	0x0344EA24 LDUR V0, [X19 + 0x28]
	0x0344EA28 STUR V0, [X22 + 0x18]
	0x0344EA2C LDUR V0, [X19 + 0x38]
	0x0344EA30 STUR V0, [X22 + 0x28]
	0x0344EA34 LDUR V0, [X19 + 0x48]
	0x0344EA38 STUR V0, [X22 + 0x38]
	0x0344EA3C LDR X8, [X19 + 0x58]
	0x0344EA40 STR X8, [X22 + 0x48]
	0x0344EA44 LDRB W8, [X19 + 0x60]
	0x0344EA48 STRB W8, [X22 + 0x50]
	0x0344EA4C LDR X8, [X19 + 0x68]
	0x0344EA50 STR X8, [X22 + 0x58]
	0x0344EA54 LDR X8, [X19 + 0x70]
	0x0344EA58 STR X8, [X22 + 0x60]
	0x0344EA5C CBZ X24, 0x344ED3C
	0x0344EA60 ADRP X8, 0xCE1000
	0x0344EA64 LDR X8, [X8 + 0xA58]
	0x0344EA68 LDR X20, [X24 + 0x58]
	0x0344EA6C LDR X0, [X8]
	0x0344EA70 BL 0x1C16F10
	0x0344EA74 ADRP X8, 0xCE1000
	0x0344EA78 LDR X8, [X8 + 0xB18]
	0x0344EA7C MOV X21, X0
	0x0344EA80 LDR X2, [X8]
	0x0344EA84 MOV X1, X22
	0x0344EA88 MOV X3, X31
	0x0344EA8C BL 0x2D27AA8
	0x0344EA90 ADRP X8, 0xCE1000
	0x0344EA94 LDR X23, [X19 + 0x78]
	0x0344EA98 LDR X8, [X8 + 0x7C8]
	0x0344EA9C CBNZ X23, 0x344EAA4
	0x0344EAA0 LDR X23, [X24 + 0x18]
	0x0344EAA4 LDR X24, [X22 + 0x18]
	0x0344EAA8 LDR X1, [X22 + 0x60]
	0x0344EAAC LDR X2, [X8]
	0x0344EAB0 STP X31, X31, [X31 + 0x8]
	0x0344EAB4 ADD X0, X31, 0x8
	0x0344EAB8 BL 0x242E368
	0x0344EABC ADRP X8, 0xCE1000
	0x0344EAC0 LDR X8, [X8 + 0x7D0]
	0x0344EAC4 LDR X0, [X8]
	0x0344EAC8 BL 0x1C16F10
	0x0344EACC LDP X3, X4, [X31 + 0x8]
	0x0344EAD0 MOV X22, X0
	0x0344EAD4 MOV X1, X24
	0x0344EAD8 MOV X2, X23
	0x0344EADC MOV X5, X31
	0x0344EAE0 BL 0x3478040
	0x0344EAE4 CBZ X20, 0x344ED40
	0x0344EAE8 ADRP X8, 0xCE1000
	0x0344EAEC LDR X8, [X8 + 0xA68]
	0x0344EAF0 LDR X3, [X8]
	0x0344EAF4 MOV X0, X20
	0x0344EAF8 MOV X1, X21
	0x0344EAFC MOV X2, X22
	0x0344EB00 BL 0x2243230
	0x0344EB04 CBZ X0, 0x344ED44
	0x0344EB08 ADRP X8, 0xCE1000
	0x0344EB0C LDR X8, [X8 + 0xA88]
	0x0344EB10 LDR X1, [X8]
	0x0344EB14 BL 0x269F5D0
	0x0344EB18 ADRP X8, 0xCE1000
	0x0344EB1C LDR X8, [X8 + 0xA80]
	0x0344EB20 STR X0, [X31 + 0x18]
	0x0344EB24 LDR X1, [X8]
	0x0344EB28 ADD X0, X31, 0x18
	0x0344EB2C BL 0x2677430
	0x0344EB30 TBNZ X0, 0x0, 0x344EB84
	0x0344EB34 STR W31, [X19]
	0x0344EB38 LDR X8, [X31 + 0x18]
	0x0344EB3C STR X8, [X19 + 0x80]
	0x0344EB40 LDR X0, [X25]
	0x0344EB44 LDR W8, [X0 + 0xE0]
	0x0344EB48 CBNZ W8, 0x344EB50
	0x0344EB4C BL 0x1C16DFC
	0x0344EB50 ADRP X8, 0xCE1000
	0x0344EB54 LDR X8, [X8 + 0xB10]
	0x0344EB58 ADD X0, X19, 0x8
	0x0344EB5C LDR X3, [X8]
	0x0344EB60 ADD X1, X31, 0x18
	0x0344EB64 MOV X2, X19
	0x0344EB68 BL 0x1FBA3AC
	0x0344EB6C B 0x344ED1C
	0x0344EB70 LDR X8, [X19 + 0x80]
	0x0344EB74 MOVN W9, 0x0
	0x0344EB78 STR X8, [X31 + 0x18]
	0x0344EB7C STR X31, [X19 + 0x80]
	0x0344EB80 STR W9, [X19]
	0x0344EB84 ADRP X8, 0xCE1000
	0x0344EB88 LDR X8, [X8 + 0xA78]
	0x0344EB8C ADD X0, X31, 0x18
	0x0344EB90 LDR X1, [X8]
	0x0344EB94 BL 0x2677474
	0x0344EB98 MOV X20, X0
	0x0344EB9C CBZ X0, 0x344ED34
	0x0344EBA0 ADRP X23, 0xCE1000
	0x0344EBA4 LDR X8, [X20]
	0x0344EBA8 LDR X23, [X23 + 0xA60]
	0x0344EBAC LDRH W9, [X8 + 0x12E]
	0x0344EBB0 LDR X1, [X23]
	0x0344EBB4 CBZ X9, 0x344EBD8
	0x0344EBB8 LDR X10, [X8 + 0xB0]
	0x0344EBBC ADD X10, X10, 0x8
	0x0344EBC0 LDUR X11, [X10 - 0x8]
	0x0344EBC4 CMP X11, X1
	0x0344EBC8 B.EQ 0x344EBE8
	0x0344EBCC SUBS X9, X9, 0x1
	0x0344EBD0 ADD X10, X10, 0x10
	0x0344EBD4 B.NE 0x344EBC0
	0x0344EBD8 MOVZ W2, 0x2
	0x0344EBDC MOV X0, X20
	0x0344EBE0 BL 0x1C5C788
	0x0344EBE4 B 0x344EBF8
	0x0344EBE8 LDR W9, [X10]
	0x0344EBEC ADD W9, W9, 0x2
	0x0344EBF0 ADD X8, X8, W9, 0x4, SXTW
	0x0344EBF4 ADD X0, X8, 0x138
	0x0344EBF8 LDP X8, X1, [X0]
	0x0344EBFC MOV X0, X20
	0x0344EC00 BLR X8
	0x0344EC04 LDR X8, [X20]
	0x0344EC08 LDR X1, [X23]
	0x0344EC0C MOV X21, X0
	0x0344EC10 LDRH W9, [X8 + 0x12E]
	0x0344EC14 CBZ X9, 0x344EC38
	0x0344EC18 LDR X10, [X8 + 0xB0]
	0x0344EC1C ADD X10, X10, 0x8
	0x0344EC20 LDUR X11, [X10 - 0x8]
	0x0344EC24 CMP X11, X1
	0x0344EC28 B.EQ 0x344EC48
	0x0344EC2C SUBS X9, X9, 0x1
	0x0344EC30 ADD X10, X10, 0x10
	0x0344EC34 B.NE 0x344EC20
	0x0344EC38 MOVZ W2, 0x1
	0x0344EC3C MOV X0, X20
	0x0344EC40 BL 0x1C5C788
	0x0344EC44 B 0x344EC58
	0x0344EC48 LDR W9, [X10]
	0x0344EC4C ADD W9, W9, 0x1
	0x0344EC50 ADD X8, X8, W9, 0x4, SXTW
	0x0344EC54 ADD X0, X8, 0x138
	0x0344EC58 LDP X8, X1, [X0]
	0x0344EC5C MOV X0, X20
	0x0344EC60 BLR X8
	0x0344EC64 LDR X8, [X20]
	0x0344EC68 LDR X1, [X23]
	0x0344EC6C MOV X22, X0
	0x0344EC70 LDRH W9, [X8 + 0x12E]
	0x0344EC74 CBZ X9, 0x344EC98
	0x0344EC78 LDR X10, [X8 + 0xB0]
	0x0344EC7C ADD X10, X10, 0x8
	0x0344EC80 LDUR X11, [X10 - 0x8]
	0x0344EC84 CMP X11, X1
	0x0344EC88 B.EQ 0x344ECA8
	0x0344EC8C SUBS X9, X9, 0x1
	0x0344EC90 ADD X10, X10, 0x10
	0x0344EC94 B.NE 0x344EC80
	0x0344EC98 MOV X0, X20
	0x0344EC9C MOV W2, W31
	0x0344ECA0 BL 0x1C5C788
	0x0344ECA4 B 0x344ECB4
	0x0344ECA8 LDRSW X9, [X10]
	0x0344ECAC ADD X8, X8, X9, 0x4, LSL
	0x0344ECB0 ADD X0, X8, 0x138
	0x0344ECB4 LDP X8, X1, [X0]
	0x0344ECB8 MOV X0, X20
	0x0344ECBC BLR X8
	0x0344ECC0 ADRP X8, 0xCE1000
	0x0344ECC4 LDR X8, [X8 + 0xA70]
	0x0344ECC8 MOV W23, W0
	0x0344ECCC LDR X0, [X8]
	0x0344ECD0 BL 0x1C16F10
	0x0344ECD4 MOV X20, X0
	0x0344ECD8 AND W3, W23, 0x1
	0x0344ECDC MOV X1, X21
	0x0344ECE0 MOV X2, X22
	0x0344ECE4 MOV X4, X31
	0x0344ECE8 BL 0x34684B8
	0x0344ECEC MOVN W8, 0x1
	0x0344ECF0 STR W8, [X19], #0x8
	0x0344ECF4 LDR X0, [X25]
	0x0344ECF8 ADRP X21, 0xCE1000
	0x0344ECFC LDR W8, [X0 + 0xE0]
	0x0344ED00 LDR X21, [X21 + 0xA50]
	0x0344ED04 CBNZ W8, 0x344ED0C
	0x0344ED08 BL 0x1C16DFC
	0x0344ED0C LDR X2, [X21]
	0x0344ED10 MOV X0, X19
	0x0344ED14 MOV X1, X20
	0x0344ED18 BL 0x26322B0
	0x0344ED1C LDP X20, X19, [X31 + 0x50]
	0x0344ED20 LDP X22, X21, [X31 + 0x40]
	0x0344ED24 LDP X24, X23, [X31 + 0x30]
	0x0344ED28 LDP X30, X25, [X31 + 0x20]
	0x0344ED2C ADD X31, X31, 0x60
	0x0344ED30 RET
	0x0344ED34 BL 0x1C16F20
	0x0344ED38 BL 0x1C16F20
	0x0344ED3C BL 0x1C16F20
	0x0344ED40 BL 0x1C16F20
	0x0344ED44 BL 0x1C16F20
	0x0344ED48 B 0x344ED84
	0x0344ED4C B 0x344ED84
	0x0344ED50 B 0x344ED84
	0x0344ED54 B 0x344ED84
	0x0344ED58 B 0x344ED84
	0x0344ED5C B 0x344ED84
	0x0344ED60 B 0x344ED84
	0x0344ED64 B 0x344ED84
	0x0344ED68 B 0x344ED84

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0xF90000
	011 Move W8, [X20+1883]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE2000
	018 Move X0, [X0+2760]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE2000
	021 Move X0, [X0+2640]
	022 Call 0x1C17CF4
	023 Move X0, 0xCE2000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE2000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE2000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE2000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE2000
	036 Move X0, [X0+2000]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE2000
	039 Move X0, [X0+2664]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE2000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0xCE2000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0xCE2000
	048 Move X0, [X0+2688]
	049 Call 0x1C17CF4
	050 Move X0, 0xCE2000
	051 Move X0, [X0+2696]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE2000
	054 Move X0, [X0+2768]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE2000
	057 Move X0, [X0+2776]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1883], W8
	061 Move [X31+24], X31
	062 Move X25, 0xCE2000
	063 Move W8, [X19]
	064 Move X25, [X25+1584]
	065 Compare W8, 0
	066 JumpIfEqual {167}
	067 Move X8, 0xCE2000
	068 Move X8, [X8+2776]
	069 Move X24, [X19+32]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X22, X0
	073 Move X1, X31
	074 Call Object..ctor, X0
	075 Compare X22, 0
	076 JumpIfEqual {288}
	077 Move X8, [X19+32]
	078 Move [X22+16], X8
	079 Move X8, [X19+40]
	080 Move [X22+24], X8
	081 Move X8, [X19+48]
	082 Move [X22+32], X8
	083 Move W8, [X19+56]
	084 Move [X22+40], W8
	085 Move X8, [X19+64]
	086 Move [X22+48], X8
	087 Move X8, [X19+72]
	088 Move [X22+56], X8
	089 Compare X24, 0
	090 JumpIfEqual {289}
	091 Move X8, 0xCE2000
	092 Move X8, [X8+2648]
	093 Move X20, [X24+88]
	094 Move X0, [X8]
	095 Call 0x1C17F10
	096 Move X8, 0xCE2000
	097 Move X8, [X8+2768]
	098 Move X21, X0
	099 Move X2, [X8]
	100 Move X1, X22
	101 Move X3, X31
	102 Call Func`1<Object>..ctor, X0, X1, X2
	103 Move X8, 0xCE2000
	104 Move X23, [X19+80]
	105 Move X8, [X8+1992]
	106 Compare X23, 0
	107 JumpIfNotEqual {109}
	108 Move X23, [X24+24]
	109 Move X24, [X22+24]
	110 Move X1, [X22+56]
	111 Move X2, [X8]
	112 Move [X31+8], X31
	113 Move [X31+16], X31
	114 Add X0, X31, 8
	115 Call Nullable`1<CancellationToken>..ctor, X0, X1
	116 Move X8, 0xCE2000
	117 Move X8, [X8+2000]
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move X3, [X31+8]
	121 Move X4, [X31+16]
	122 Move X22, X0
	123 Move X1, X24
	124 Move X2, X23
	125 Move X5, X31
	126 Call RetryHistory..ctor, X0, X1, X2, X3
	127 Compare X20, 0
	128 JumpIfEqual {290}
	129 Move X8, 0xCE2000
	130 Move X8, [X8+2664]
	131 Move X3, [X8]
	132 Move X0, X20
	133 Move X1, X21
	134 Move X2, X22
	135 Call 0x2244230, X0, X1, X2
	136 Compare X0, 0
	137 JumpIfEqual {291}
	138 Move X8, 0xCE2000
	139 Move X8, [X8+2696]
	140 Move X1, [X8]
	141 Call Task`1<Object>.GetAwaiter, X0
	142 Move X8, 0xCE2000
	143 Move X8, [X8+2688]
	144 Move [X31+24], X0
	145 Move X1, [X8]
	146 Add X0, X31, 24
	147 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {174}
	152 Move [X19], W31
	153 Move X8, [X31+24]
	154 Move [X19+88], X8
	155 Move X0, [X25]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X8, 0xCE2000
	161 Move X8, [X8+2760]
	162 Add X0, X19, 8
	163 Move X3, [X8]
	164 Add X1, X31, 24
	165 Move X2, X19
	166 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	167 Move X8, [X19+88]
	168 Move TEMP, 0
	169 Not TEMP
	170 Move W9, TEMP
	171 Move [X31+24], X8
	172 Move [X19+88], X31
	173 Move [X19], W9
	174 Move X8, 0xCE2000
	175 Move X8, [X8+2680]
	176 Add X0, X31, 24
	177 Move X1, [X8]
	178 Call TaskAwaiter`1<Object>.GetResult, X0
	179 Move X20, X0
	180 Compare X0, 0
	181 JumpIfEqual {287}
	182 Move X23, 0xCE2000
	183 Move X8, [X20]
	184 Move X23, [X23+2656]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X1, [X23]
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 2
	196 Move X0, X20
	197 Call 0x1C5D788
	198 Move W9, [X10]
	199 Add W9, W9, 2
	200 Add X8, X8, W9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X20
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X8, [X20]
	207 Move X1, [X23]
	208 Move X21, X0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 1
	219 Move X0, X20
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 1
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X20
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X8, [X20]
	230 Move X1, [X23]
	231 Move X22, X0
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move X0, X20
	242 Move W2, W31
	243 Call 0x1C5D788
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Add X8, X8, X9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X1, [X0+8]
	249 Move X0, X20
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move X8, 0xCE2000
	252 Move X8, [X8+2672]
	253 Move W23, W0
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X20, X0
	257 And W3, W23, 1
	258 Move X1, X21
	259 Move X2, X22
	260 Move X4, X31
	261 Call Session..ctor, X0, X1, X2, X3
	262 Move TEMP, 1
	263 Not TEMP
	264 Move W8, TEMP
	265 Move [X19+8], W8
	266 Move X0, [X25]
	267 Move X21, 0xCE2000
	268 Move W8, [X0+224]
	269 Move X21, [X21+2640]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X2, [X21]
	274 Move X0, X19
	275 Move X1, X20
	276 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	277 Move X20, [X31+80]
	278 Move X19, [X31+88]
	279 Move X22, [X31+64]
	280 Move X21, [X31+72]
	281 Move X24, [X31+48]
	282 Move X23, [X31+56]
	283 Move X30, [X31+32]
	284 Move X25, [X31+40]
	285 Add X31, X31, 96
	286 Return 
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Move X20, X0
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X20
	295 Call 0x3EB2AD0
	296 Move X20, X0
	297 Move X0, 0xCA6000
	298 Move X0, [X0+2000]
	299 Call 0x1C17D08
	300 Move X8, [X20]
	301 Move X1, [X8]
	302 Call 0x1C18270
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {327}
	307 Move X20, [X20]
	308 Call 0x3EB2AE0
	309 Move TEMP, 1
	310 Not TEMP
	311 Move W8, TEMP
	312 Move [X19+8], W8
	313 Move X0, 0xCE2000
	314 Move X0, [X0+1584]
	315 Call 0x1C17D08
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X0, 0xCE2000
	321 Move X0, [X0+2720]
	322 Call 0x1C17D08
	323 Move X2, X0
	324 Move X0, X19
	325 Move X1, X20
	326 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	327 Move W0, 8
	328 Call 0x3EB2AF0
	329 Move X8, [X20]
	330 Move [X0], X8
	331 Move X1, 0xA67000
	332 Add X1, X1, 3672
	333 Move X2, X31
	334 Call 0x3EB2B00
	335 Move X20, X0
	336 Call 0x3EB2AE0
	337 Move X0, X20
	338 Call 0x1D2D690
	339 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0344ED6C B 0x344ED84
	0x0344ED70 B 0x344ED84
	0x0344ED74 B 0x344ED84
	0x0344ED78 B 0x344ED84
	0x0344ED7C B 0x344ED84
	0x0344ED80 B 0x344ED84
	0x0344ED84 MOV X20, X0
	0x0344ED88 CMP W1, 0x1
	0x0344ED8C B.NE 0x344EE28
	0x0344ED90 MOV X0, X20
	0x0344ED94 BL 0x3EB1AD0
	0x0344ED98 MOV X20, X0
	0x0344ED9C ADRP X0, 0xCA5000
	0x0344EDA0 LDR X0, [X0 + 0x7D0]
	0x0344EDA4 BL 0x1C16D08
	0x0344EDA8 LDR X8, [X20]
	0x0344EDAC LDR X1, [X8]
	0x0344EDB0 BL 0x1C17270
	0x0344EDB4 TBZ X0, 0x0, 0x344EE00
	0x0344EDB8 LDR X20, [X20]
	0x0344EDBC BL 0x3EB1AE0
	0x0344EDC0 MOVN W8, 0x1
	0x0344EDC4 STR W8, [X19], #0x8
	0x0344EDC8 ADRP X0, 0xCE1000
	0x0344EDCC LDR X0, [X0 + 0x630]
	0x0344EDD0 BL 0x1C16D08
	0x0344EDD4 LDR W8, [X0 + 0xE0]
	0x0344EDD8 CBNZ W8, 0x344EDE0
	0x0344EDDC BL 0x1C16DFC
	0x0344EDE0 ADRP X0, 0xCE1000
	0x0344EDE4 LDR X0, [X0 + 0xAA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF90000
	007 Move X21, 0xCE2000
	008 Move W8, [X22+1884]
	009 Move X21, [X21+1584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCE2000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0xCE2000
	020 Move X0, [X0+1584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1884], W8
	024 Move X0, [X21]
	025 Move X21, 0xCE2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2728]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

