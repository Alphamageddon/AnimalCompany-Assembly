Type: Nakama.ApiClient/<GetAccountAsync>d__9

Method: System.Void MoveNext()

Disassembly:
	0x03423AC8 MOV X0, X24
	0x03423ACC MOV W2, W31
	0x03423AD0 BL 0x1C5C788
	0x03423AD4 B 0x3423AE4
	0x03423AD8 LDRSW X9, [X10]
	0x03423ADC ADD X8, X8, X9, 0x4, LSL
	0x03423AE0 ADD X0, X8, 0x138
	0x03423AE4 LDP X8, X1, [X0]
	0x03423AE8 MOV X0, X24
	0x03423AEC BLR X8
	0x03423AF0 CBNZ X25, 0x342417C
	0x03423AF4 CMP W21, 0x6
	0x03423AF8 B.EQ 0x3423B00
	0x03423AFC CBNZ W21, 0x3424150
	0x03423B00 LDR X21, [X19 + 0x28]
	0x03423B04 CBNZ X21, 0x3423B24
	0x03423B08 ADRP X8, 0xCD0000
	0x03423B0C LDR X8, [X8 + 0xAC8]
	0x03423B10 LDR X0, [X8]
	0x03423B14 MOV W1, W31
	0x03423B18 BL 0x1C16D6C
	0x03423B1C MOV X21, X0
	0x03423B20 CBZ X0, 0x34241BC
	0x03423B24 LDR X8, [X21]
	0x03423B28 ADRP X10, 0xCD0000
	0x03423B2C LDRH W9, [X8 + 0x12E]
	0x03423B30 LDR X10, [X10 + 0xF70]
	0x03423B34 LDR X1, [X10]
	0x03423B38 CBZ X9, 0x3423B5C
	0x03423B3C LDR X10, [X8 + 0xB0]
	0x03423B40 ADD X10, X10, 0x8
	0x03423B44 LDUR X11, [X10 - 0x8]
	0x03423B48 CMP X11, X1
	0x03423B4C B.EQ 0x3423B6C
	0x03423B50 SUBS X9, X9, 0x1
	0x03423B54 ADD X10, X10, 0x10
	0x03423B58 B.NE 0x3423B44
	0x03423B5C MOV X0, X21
	0x03423B60 MOV W2, W31
	0x03423B64 BL 0x1C5C788
	0x03423B68 B 0x3423B78
	0x03423B6C LDRSW X9, [X10]
	0x03423B70 ADD X8, X8, X9, 0x4, LSL
	0x03423B74 ADD X0, X8, 0x138
	0x03423B78 LDP X8, X1, [X0]
	0x03423B7C MOV X0, X21
	0x03423B80 BLR X8
	0x03423B84 ADRP X26, 0xD0B000
	0x03423B88 LDR X26, [X26 + 0x7C8]
	0x03423B8C MOV X25, X0
	0x03423B90 MOV X0, X23
	0x03423B94 CBZ X25, 0x3424174
	0x03423B98 LDR X8, [X25]
	0x03423B9C LDR X1, [X28]
	0x03423BA0 MOV X24, X0
	0x03423BA4 LDRH W9, [X8 + 0x12E]
	0x03423BA8 CBZ X9, 0x3423BCC
	0x03423BAC LDR X10, [X8 + 0xB0]
	0x03423BB0 ADD X10, X10, 0x8
	0x03423BB4 LDUR X11, [X10 - 0x8]
	0x03423BB8 CMP X11, X1
	0x03423BBC B.EQ 0x3423BDC
	0x03423BC0 SUBS X9, X9, 0x1
	0x03423BC4 ADD X10, X10, 0x10
	0x03423BC8 B.NE 0x3423BB4
	0x03423BCC MOV X0, X25
	0x03423BD0 MOV W2, W31
	0x03423BD4 BL 0x1C5C788
	0x03423BD8 B 0x3423BE8
	0x03423BDC LDRSW X9, [X10]
	0x03423BE0 ADD X8, X8, X9, 0x4, LSL
	0x03423BE4 ADD X0, X8, 0x138
	0x03423BE8 LDP X8, X1, [X0]
	0x03423BEC MOV X0, X25
	0x03423BF0 BLR X8
	0x03423BF4 TBZ X0, 0x0, 0x3423C8C
	0x03423BF8 LDR X8, [X25]
	0x03423BFC LDR X1, [X29]
	0x03423C00 LDRH W9, [X8 + 0x12E]
	0x03423C04 CBZ X9, 0x3423C28
	0x03423C08 LDR X10, [X8 + 0xB0]
	0x03423C0C ADD X10, X10, 0x8
	0x03423C10 LDUR X11, [X10 - 0x8]
	0x03423C14 CMP X11, X1
	0x03423C18 B.EQ 0x3423C38
	0x03423C1C SUBS X9, X9, 0x1
	0x03423C20 ADD X10, X10, 0x10
	0x03423C24 B.NE 0x3423C10
	0x03423C28 MOV X0, X25
	0x03423C2C MOV W2, W31
	0x03423C30 BL 0x1C5C788
	0x03423C34 B 0x3423C44
	0x03423C38 LDRSW X9, [X10]
	0x03423C3C ADD X8, X8, X9, 0x4, LSL
	0x03423C40 ADD X0, X8, 0x138
	0x03423C44 LDP X8, X1, [X0]
	0x03423C48 MOV X0, X25
	0x03423C4C BLR X8
	0x03423C50 MOV X21, X0
	0x03423C54 LDR X0, [X22]
	0x03423C58 LDR W8, [X0 + 0xE0]
	0x03423C5C CBNZ W8, 0x3423C64
	0x03423C60 BL 0x1C16DFC
	0x03423C64 MOV X0, X21
	0x03423C68 MOV X1, X31
	0x03423C6C BL 0x3624D20
	0x03423C70 LDR X1, [X26]
	0x03423C74 LDR X3, [X20]
	0x03423C78 MOV X2, X0
	0x03423C7C MOV X0, X24
	0x03423C80 MOV X4, X31
	0x03423C84 BL 0x32277C4
	0x03423C88 B 0x3423B94
	0x03423C8C MOV X23, X31
	0x03423C90 MOVZ W21, 0xA
	0x03423C94 TBZ X27, 0x1F, 0x3423CFC
	0x03423C98 CBZ X25, 0x3423CFC
	0x03423C9C ADRP X10, 0xCD0000
	0x03423CA0 LDR X8, [X25]
	0x03423CA4 LDR X10, [X10 + 0xE00]
	0x03423CA8 LDRH W9, [X8 + 0x12E]
	0x03423CAC LDR X1, [X10]
	0x03423CB0 CBZ X9, 0x3423CD4
	0x03423CB4 LDR X10, [X8 + 0xB0]
	0x03423CB8 ADD X10, X10, 0x8
	0x03423CBC LDUR X11, [X10 - 0x8]
	0x03423CC0 CMP X11, X1
	0x03423CC4 B.EQ 0x3423CE4
	0x03423CC8 SUBS X9, X9, 0x1
	0x03423CCC ADD X10, X10, 0x10
	0x03423CD0 B.NE 0x3423CBC
	0x03423CD4 MOV X0, X25
	0x03423CD8 MOV W2, W31
	0x03423CDC BL 0x1C5C788
	0x03423CE0 B 0x3423CF0
	0x03423CE4 LDRSW X9, [X10]
	0x03423CE8 ADD X8, X8, X9, 0x4, LSL
	0x03423CEC ADD X0, X8, 0x138
	0x03423CF0 LDP X8, X1, [X0]
	0x03423CF4 MOV X0, X25
	0x03423CF8 BLR X8
	0x03423CFC CBNZ X23, 0x3424184
	0x03423D00 CMP W21, 0xA
	0x03423D04 B.EQ 0x3423D0C
	0x03423D08 CBNZ W21, 0x3424150
	0x03423D0C LDR X21, [X19 + 0x30]
	0x03423D10 CBNZ X21, 0x3423D30
	0x03423D14 ADRP X8, 0xCD0000
	0x03423D18 LDR X8, [X8 + 0xAC8]
	0x03423D1C LDR X0, [X8]
	0x03423D20 MOV W1, W31
	0x03423D24 BL 0x1C16D6C
	0x03423D28 MOV X21, X0
	0x03423D2C CBZ X0, 0x34241C0
	0x03423D30 LDR X8, [X21]
	0x03423D34 ADRP X10, 0xCD0000
	0x03423D38 LDRH W9, [X8 + 0x12E]
	0x03423D3C LDR X10, [X10 + 0xF70]
	0x03423D40 LDR X1, [X10]
	0x03423D44 CBZ X9, 0x3423D68
	0x03423D48 LDR X10, [X8 + 0xB0]
	0x03423D4C ADD X10, X10, 0x8
	0x03423D50 LDUR X11, [X10 - 0x8]
	0x03423D54 CMP X11, X1
	0x03423D58 B.EQ 0x3423D78
	0x03423D5C SUBS X9, X9, 0x1
	0x03423D60 ADD X10, X10, 0x10
	0x03423D64 B.NE 0x3423D50
	0x03423D68 MOV X0, X21
	0x03423D6C MOV W2, W31
	0x03423D70 BL 0x1C5C788
	0x03423D74 B 0x3423D84
	0x03423D78 LDRSW X9, [X10]
	0x03423D7C ADD X8, X8, X9, 0x4, LSL
	0x03423D80 ADD X0, X8, 0x138
	0x03423D84 LDP X8, X1, [X0]
	0x03423D88 MOV X0, X21
	0x03423D8C BLR X8
	0x03423D90 ADRP X26, 0xD0B000
	0x03423D94 LDR X26, [X26 + 0xD50]
	0x03423D98 MOV X25, X0
	0x03423D9C MOV X0, X24
	0x03423DA0 CBZ X25, 0x3424178
	0x03423DA4 LDR X8, [X25]
	0x03423DA8 LDR X1, [X28]
	0x03423DAC MOV X23, X0
	0x03423DB0 LDRH W9, [X8 + 0x12E]
	0x03423DB4 CBZ X9, 0x3423DD8
	0x03423DB8 LDR X10, [X8 + 0xB0]
	0x03423DBC ADD X10, X10, 0x8
	0x03423DC0 LDUR X11, [X10 - 0x8]
	0x03423DC4 CMP X11, X1
	0x03423DC8 B.EQ 0x3423DE8
	0x03423DCC SUBS X9, X9, 0x1
	0x03423DD0 ADD X10, X10, 0x10
	0x03423DD4 B.NE 0x3423DC0
	0x03423DD8 MOV X0, X25
	0x03423DDC MOV W2, W31
	0x03423DE0 BL 0x1C5C788
	0x03423DE4 B 0x3423DF4
	0x03423DE8 LDRSW X9, [X10]
	0x03423DEC ADD X8, X8, X9, 0x4, LSL
	0x03423DF0 ADD X0, X8, 0x138
	0x03423DF4 LDP X8, X1, [X0]
	0x03423DF8 MOV X0, X25
	0x03423DFC BLR X8
	0x03423E00 TBZ X0, 0x0, 0x3423E98
	0x03423E04 LDR X8, [X25]
	0x03423E08 LDR X1, [X29]
	0x03423E0C LDRH W9, [X8 + 0x12E]
	0x03423E10 CBZ X9, 0x3423E34
	0x03423E14 LDR X10, [X8 + 0xB0]
	0x03423E18 ADD X10, X10, 0x8
	0x03423E1C LDUR X11, [X10 - 0x8]
	0x03423E20 CMP X11, X1
	0x03423E24 B.EQ 0x3423E44
	0x03423E28 SUBS X9, X9, 0x1
	0x03423E2C ADD X10, X10, 0x10
	0x03423E30 B.NE 0x3423E1C
	0x03423E34 MOV X0, X25
	0x03423E38 MOV W2, W31
	0x03423E3C BL 0x1C5C788
	0x03423E40 B 0x3423E50
	0x03423E44 LDRSW X9, [X10]
	0x03423E48 ADD X8, X8, X9, 0x4, LSL
	0x03423E4C ADD X0, X8, 0x138
	0x03423E50 LDP X8, X1, [X0]
	0x03423E54 MOV X0, X25
	0x03423E58 BLR X8
	0x03423E5C MOV X21, X0
	0x03423E60 LDR X0, [X22]
	0x03423E64 LDR W8, [X0 + 0xE0]
	0x03423E68 CBNZ W8, 0x3423E70
	0x03423E6C BL 0x1C16DFC
	0x03423E70 MOV X0, X21
	0x03423E74 MOV X1, X31
	0x03423E78 BL 0x3624D20
	0x03423E7C LDR X1, [X26]
	0x03423E80 LDR X3, [X20]
	0x03423E84 MOV X2, X0
	0x03423E88 MOV X0, X23
	0x03423E8C MOV X4, X31
	0x03423E90 BL 0x32277C4
	0x03423E94 B 0x3423DA0
	0x03423E98 MOV X24, X31
	0x03423E9C MOVZ W20, 0xE
	0x03423EA0 TBZ X27, 0x1F, 0x3423F08
	0x03423EA4 CBZ X25, 0x3423F08
	0x03423EA8 ADRP X10, 0xCD0000
	0x03423EAC LDR X8, [X25]
	0x03423EB0 LDR X10, [X10 + 0xE00]
	0x03423EB4 LDRH W9, [X8 + 0x12E]
	0x03423EB8 LDR X1, [X10]
	0x03423EBC CBZ X9, 0x3423EE0
	0x03423EC0 LDR X10, [X8 + 0xB0]
	0x03423EC4 ADD X10, X10, 0x8
	0x03423EC8 LDUR X11, [X10 - 0x8]
	0x03423ECC CMP X11, X1
	0x03423ED0 B.EQ 0x3423EF0
	0x03423ED4 SUBS X9, X9, 0x1
	0x03423ED8 ADD X10, X10, 0x10
	0x03423EDC B.NE 0x3423EC8
	0x03423EE0 MOV X0, X25
	0x03423EE4 MOV W2, W31
	0x03423EE8 BL 0x1C5C788
	0x03423EEC B 0x3423EFC
	0x03423EF0 LDRSW X9, [X10]
	0x03423EF4 ADD X8, X8, X9, 0x4, LSL
	0x03423EF8 ADD X0, X8, 0x138
	0x03423EFC LDP X8, X1, [X0]
	0x03423F00 MOV X0, X25
	0x03423F04 BLR X8
	0x03423F08 CBNZ X24, 0x342418C
	0x03423F0C CMP W20, 0xE
	0x03423F10 B.EQ 0x3423F18
	0x03423F14 CBNZ W20, 0x3424150
	0x03423F18 LDR X25, [X31 + 0x10]
	0x03423F1C CBZ X25, 0x3424198
	0x03423F20 LDR X0, [X25 + 0x20]
	0x03423F24 LDR X20, [X31 + 0x8]
	0x03423F28 CBZ X0, 0x342419C
	0x03423F2C MOV X1, X31
	0x03423F30 BL 0x361B448
	0x03423F34 ADRP X8, 0xCD9000
	0x03423F38 LDR X8, [X8 + 0x8D8]
	0x03423F3C MOV X21, X0
	0x03423F40 LDR X0, [X8]
	0x03423F44 MOVZ W1, 0x1
	0x03423F48 BL 0x1C16D6C
	0x03423F4C MOV X1, X0
	0x03423F50 CBZ X1, 0x34241A0
	0x03423F54 LDR W8, [X1 + 0x18]
	0x03423F58 CBZ W8, 0x34241A4
	0x03423F5C MOVZ W8, 0x2F
	0x03423F60 STRH W8, [X1 + 0x20]
	0x03423F64 CBZ X21, 0x34241A8
	0x03423F68 MOV X0, X21
	0x03423F6C MOV X2, X31
	0x03423F70 BL 0x322BC58
	0x03423F74 MOV X1, X20
	0x03423F78 MOV X2, X31
	0x03423F7C BL 0x321B938
	0x03423F80 ADRP X8, 0xCD9000
	0x03423F84 LDR X22, [X25 + 0x20]
	0x03423F88 LDR X8, [X8 + 0x3A0]
	0x03423F8C MOV X21, X0
	0x03423F90 LDR X0, [X8]
	0x03423F94 BL 0x1C16F10
	0x03423F98 MOV X20, X0
	0x03423F9C MOV X1, X22
	0x03423FA0 MOV X2, X31
	0x03423FA4 BL 0x36281F8
	0x03423FA8 CBZ X20, 0x34241AC
	0x03423FAC MOV X0, X20
	0x03423FB0 MOV X1, X21
	0x03423FB4 MOV X2, X31
	0x03423FB8 BL 0x36288CC
	0x03423FBC MOV X0, X20
	0x03423FC0 MOV X1, X23
	0x03423FC4 MOV X2, X31
	0x03423FC8 BL 0x3628980
	0x03423FCC MOV X0, X20
	0x03423FD0 MOV X1, X31
	0x03423FD4 BL 0x3628A38
	0x03423FD8 ADRP X8, 0xCF9000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFBB000
	013 Move W8, [X20+1573]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {75}
	019 Move X0, 0xD0C000
	020 Move X0, [X0+3264]
	021 Call 0x1C17CF4
	022 Move X0, 0xD0C000
	023 Move X0, [X0+3272]
	024 Call 0x1C17CF4
	025 Move X0, 0xD0C000
	026 Move X0, [X0+760]
	027 Call 0x1C17CF4
	028 Move X0, 0xCDA000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCD2000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCD2000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCD2000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xD0C000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xD0C000
	044 Move X0, [X0+3280]
	045 Call 0x1C17CF4
	046 Move X0, 0xCD4000
	047 Move X0, [X0+480]
	048 Call 0x1C17CF4
	049 Move X0, 0xCD4000
	050 Move X0, [X0+496]
	051 Call 0x1C17CF4
	052 Move X0, 0xCD4000
	053 Move X0, [X0+504]
	054 Call 0x1C17CF4
	055 Move X0, 0xCDA000
	056 Move X0, [X0+928]
	057 Call 0x1C17CF4
	058 Move X0, 0xCFA000
	059 Move X0, [X0+1232]
	060 Call 0x1C17CF4
	061 Move X0, 0xD0C000
	062 Move X0, [X0+2000]
	063 Call 0x1C17CF4
	064 Move X0, 0xD0C000
	065 Move X0, [X0+2008]
	066 Call 0x1C17CF4
	067 Move X0, 0xD0C000
	068 Move X0, [X0+3056]
	069 Call 0x1C17CF4
	070 Move X0, 0xCD1000
	071 Move X0, [X0+2440]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+1573], W8
	075 Move [X31+8], X31
	076 Move X27, 0xD0C000
	077 Move W8, [X19]
	078 Move X27, [X27+760]
	079 Compare W8, 0
	080 JumpIfEqual {192}
	081 Move X24, [X19+32]
	082 Compare X24, 0
	083 JumpIfEqual {283}
	084 Move X0, [X24+32]
	085 Compare X0, 0
	086 JumpIfEqual {284}
	087 Move X8, 0xD0C000
	088 Move X9, 0xCD1000
	089 Move X8, [X8+3056]
	090 Move X9, [X9+2440]
	091 Move X21, [X8]
	092 Move X20, [X9]
	093 Move X1, X31
	094 Call Uri.get_AbsolutePath, X0
	095 Move X8, 0xCDA000
	096 Move X8, [X8+2264]
	097 Move X22, X0
	098 Move X0, [X8]
	099 Move W1, 1
	100 Call 0x1C17D6C
	101 Move X1, X0
	102 Compare X1, 0
	103 JumpIfEqual {285}
	104 Move W8, [X1+24]
	105 Compare W8, 0
	106 JumpIfEqual {286}
	107 Move W8, 47
	108 NotImplemented "Instruction STRH not yet implemented."
	109 Compare X22, 0
	110 JumpIfEqual {287}
	111 Move X0, X22
	112 Move X2, X31
	113 Call String.TrimEnd, X0, X1
	114 Move X1, X21
	115 Move X2, X31
	116 Call String.Concat, X0, X1
	117 Move X8, 0xCDA000
	118 Move X8, [X8+928]
	119 Move X22, X0
	120 Move X23, [X24+32]
	121 Move X0, [X8]
	122 Call 0x1C17F10
	123 Move X21, X0
	124 Move X1, X23
	125 Move X2, X31
	126 Call UriBuilder..ctor, X0, X1
	127 Compare X21, 0
	128 JumpIfEqual {288}
	129 Move X0, X21
	130 Move X1, X22
	131 Move X2, X31
	132 Call UriBuilder.set_Path, X0, X1
	133 Move X0, X21
	134 Move X1, X20
	135 Move X2, X31
	136 Call UriBuilder.set_Query, X0, X1
	137 Move X0, X21
	138 Move X1, X31
	139 Call UriBuilder.get_Uri, X0
	140 Move X8, 0xCFA000
	141 Move X9, 0xCD2000
	142 Move X8, [X8+1232]
	143 Move X9, [X9+1744]
	144 Move X20, X0
	145 Move X21, [X8]
	146 Move X0, [X9]
	147 Call 0x1C17F10
	148 Move X8, 0xCD2000
	149 Move X8, [X8+1728]
	150 Move X22, X0
	151 Move X1, [X8]
	152 Call Dictionary`2<Object, Object>..ctor, X0
	153 Move X8, 0xD0C000
	154 Move X8, [X8+2008]
	155 Move X1, [X19+40]
	156 Move X0, [X8]
	157 Move X2, X31
	158 Call String.Concat, X0, X1
	159 Compare X22, 0
	160 JumpIfEqual {289}
	161 Move X8, 0xD0C000
	162 Move X8, [X8+2000]
	163 Move X9, 0xCD2000
	164 Move X9, [X9+2064]
	165 Move X2, X0
	166 Move X1, [X8]
	167 Move X3, [X9]
	168 Move X0, X22
	169 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	170 Move X23, [X24+16]
	171 Compare X23, 0
	172 JumpIfEqual {290}
	173 Move X10, 0xD0C000
	174 Move X10, [X10+1976]
	175 Move X8, [X23]
	176 Move W25, [X24+24]
	177 Move X26, [X19+48]
	178 Move X24, [X19+56]
	179 Move X1, [X10]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move W2, 3
	190 Move X0, X23
	191 Call 0x1C5D788
	192 Move X8, [X19+64]
	193 Move TEMP, 0
	194 Not TEMP
	195 Move W9, TEMP
	196 Move [X31+8], X8
	197 Move [X19+64], X31
	198 Move [X19], W9
	199 Move W9, [X10]
	200 Add W9, W9, 3
	201 Add X8, X8, W9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X9, [X0+8]
	205 Move X0, X23
	206 Move X1, X21
	207 Move X2, X20
	208 Move X3, X22
	209 Move X4, X31
	210 Move W5, W25
	211 Move X6, X26
	212 Move X7, X24
	213 Move [X31], X9
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Compare X0, 0
	216 JumpIfEqual {291}
	217 Move X8, 0xCD4000
	218 Move X8, [X8+504]
	219 Move X1, [X8]
	220 Call Task`1<Object>.GetAwaiter, X0
	221 Move X8, 0xCD4000
	222 Move X8, [X8+496]
	223 Move [X31+8], X0
	224 Move X1, [X8]
	225 Add X0, X31, 8
	226 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {256}
	231 Move X8, 0xCD4000
	232 Move X8, [X8+480]
	233 Add X0, X31, 8
	234 Move X1, [X8]
	235 Call TaskAwaiter`1<Object>.GetResult, X0
	236 Move X8, 0xD0C000
	237 Move X8, [X8+3280]
	238 Move X1, [X8]
	239 Call JsonParser.FromJson, X0
	240 Move TEMP, 1
	241 Not TEMP
	242 Move W8, TEMP
	243 Move [X19+8], W8
	244 Move X20, X0
	245 Move X0, [X27]
	246 Move X21, 0xD0C000
	247 Move W8, [X0+224]
	248 Move X21, [X21+3272]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X2, [X21]
	253 Move X0, X19
	254 Move X1, X20
	255 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	256 Move [X19], W31
	257 Move X8, [X31+8]
	258 Move [X19+64], X8
	259 Move X0, [X27]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Move X8, 0xD0C000
	265 Move X8, [X8+3264]
	266 Add X0, X19, 8
	267 Move X3, [X8]
	268 Add X1, X31, 8
	269 Move X2, X19
	270 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	271 Move X20, [X31+80]
	272 Move X19, [X31+88]
	273 Move X22, [X31+64]
	274 Move X21, [X31+72]
	275 Move X24, [X31+48]
	276 Move X23, [X31+56]
	277 Move X26, [X31+32]
	278 Move X25, [X31+40]
	279 Move X30, [X31+16]
	280 Move X27, [X31+24]
	281 Add X31, X31, 96
	282 Return 
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Call 0x1C17F28
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Move X20, X0
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X20
	295 Call 0x3EB2AD0
	296 Move X20, X0
	297 Move X0, 0xCD1000
	298 Move X0, [X0+2000]
	299 Call 0x1C17D08
	300 Move X8, [X20]
	301 Move X1, [X8]
	302 Call 0x1C18270
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {327}
	307 Move X20, [X20]
	308 Call 0x3EB2AE0
	309 Move TEMP, 1
	310 Not TEMP
	311 Move W8, TEMP
	312 Move [X19+8], W8
	313 Move X0, 0xD0C000
	314 Move X0, [X0+760]
	315 Call 0x1C17D08
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X0, 0xD0C000
	321 Move X0, [X0+3288]
	322 Call 0x1C17D08
	323 Move X2, X0
	324 Move X0, X19
	325 Move X1, X20
	326 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	327 Move W0, 8
	328 Call 0x3EB2AF0
	329 Move X8, [X20]
	330 Move [X0], X8
	331 Move X1, 0xA92000
	332 Add X1, X1, 3672
	333 Move X2, X31
	334 Call 0x3EB2B00
	335 Move X20, X0
	336 Call 0x3EB2AE0
	337 Move X0, X20
	338 Call 0x1D2D690
	339 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03423FDC ADRP X9, 0xCD1000
	0x03423FE0 LDR X8, [X8 + 0x4D0]
	0x03423FE4 LDR X9, [X9 + 0x6D0]
	0x03423FE8 MOV X20, X0
	0x03423FEC LDR X21, [X8]
	0x03423FF0 LDR X0, [X9]
	0x03423FF4 BL 0x1C16F10
	0x03423FF8 ADRP X8, 0xCD1000
	0x03423FFC LDR X8, [X8 + 0x6C0]
	0x03424000 MOV X22, X0
	0x03424004 LDR X1, [X8]
	0x03424008 BL 0x2AA4804
	0x0342400C ADRP X8, 0xD0A000
	0x03424010 LDR X1, [X19 + 0x40]
	0x03424014 LDR X8, [X8 + 0x7D8]
	0x03424018 LDR X0, [X8]
	0x0342401C MOV X2, X31
	0x03424020 BL 0x321B938
	0x03424024 CBZ X22, 0x34241B0
	0x03424028 ADRP X8, 0xD0A000
	0x0342402C LDR X8, [X8 + 0x7D0]
	0x03424030 ADRP X9, 0xCD0000
	0x03424034 LDR X9, [X9 + 0x810]
	0x03424038 MOV X2, X0
	0x0342403C LDR X1, [X8]
	0x03424040 LDR X3, [X9]
	0x03424044 MOV X0, X22
	0x03424048 BL 0x2AA5098
	0x0342404C LDR X24, [X25 + 0x10]
	0x03424050 CBZ X24, 0x34241B4
	0x03424054 ADRP X10, 0xD0A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFBB000
	007 Move X21, 0xD0C000
	008 Move W8, [X22+1574]
	009 Move X21, [X21+760]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD0B000
	017 Move X0, [X0+3296]
	018 Call 0x1C17CF4
	019 Move X0, 0xD0B000
	020 Move X0, [X0+760]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1574], W8
	024 Move X0, [X21]
	025 Move X21, 0xD0B000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3296]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

