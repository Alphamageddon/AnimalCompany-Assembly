Type: Nakama.Socket/<CreateMatchAsync>d__82

Method: System.Void MoveNext()

Disassembly:
	0x03481AE4 ADRP X0, 0xCAF000
	0x03481AE8 LDR X0, [X0 + 0xBC8]
	0x03481AEC BL 0x1C16CF4
	0x03481AF0 ADRP X0, 0xC76000
	0x03481AF4 LDR X0, [X0 + 0x110]
	0x03481AF8 BL 0x1C16CF4
	0x03481AFC MOVZ W8, 0x1
	0x03481B00 STRB W8, [X20 + 0x8C4]
	0x03481B04 STR X31, [X31 + 0x18]
	0x03481B08 ADRP X24, 0xCAF000
	0x03481B0C LDR W8, [X19]
	0x03481B10 LDR X24, [X24 + 0xC50]
	0x03481B14 CBZ W8, 0x3481B88
	0x03481B18 ADRP X8, 0xCAF000
	0x03481B1C LDR X8, [X8 + 0xF88]
	0x03481B20 LDR X20, [X19 + 0x28]
	0x03481B24 LDR X0, [X8]
	0x03481B28 BL 0x1C16F10
	0x03481B2C MOV X21, X0
	0x03481B30 MOV X1, X31
	0x03481B34 BL 0x3475FEC
	0x03481B38 LDR X22, [X19 + 0x20]
	0x03481B3C CBZ X22, 0x3481DE8
	0x03481B40 ADRP X23, 0xCAF000
	0x03481B44 LDR X8, [X22]
	0x03481B48 LDR X23, [X23 + 0xF80]
	0x03481B4C LDRH W9, [X8 + 0x12E]
	0x03481B50 LDR X1, [X23]
	0x03481B54 CBZ X9, 0x3481B78
	0x03481B58 LDR X10, [X8 + 0xB0]
	0x03481B5C ADD X10, X10, 0x8
	0x03481B60 LDUR X11, [X10 - 0x8]
	0x03481B64 CMP X11, X1
	0x03481B68 B.EQ 0x3481BA0
	0x03481B6C SUBS X9, X9, 0x1
	0x03481B70 ADD X10, X10, 0x10
	0x03481B74 B.NE 0x3481B60
	0x03481B78 MOVZ W2, 0x2
	0x03481B7C MOV X0, X22
	0x03481B80 BL 0x1C5C788
	0x03481B84 B 0x3481BB0
	0x03481B88 LDR X8, [X19 + 0x30]
	0x03481B8C MOVN W9, 0x0
	0x03481B90 STR X8, [X31 + 0x18]
	0x03481B94 STR X31, [X19 + 0x30]
	0x03481B98 STR W9, [X19]
	0x03481B9C B 0x3481D1C
	0x03481BA0 LDR W9, [X10]
	0x03481BA4 ADD W9, W9, 0x2
	0x03481BA8 ADD X8, X8, W9, 0x4, SXTW
	0x03481BAC ADD X0, X8, 0x138
	0x03481BB0 LDP X8, X1, [X0]
	0x03481BB4 MOV X0, X22
	0x03481BB8 BLR X8
	0x03481BBC LDR X22, [X19 + 0x20]
	0x03481BC0 CBZ X0, 0x3481C08
	0x03481BC4 CBZ X22, 0x3481DF4
	0x03481BC8 LDR X8, [X22]
	0x03481BCC LDR X1, [X23]
	0x03481BD0 LDRH W9, [X8 + 0x12E]
	0x03481BD4 CBZ X9, 0x3481BF8
	0x03481BD8 LDR X10, [X8 + 0xB0]
	0x03481BDC ADD X10, X10, 0x8
	0x03481BE0 LDUR X11, [X10 - 0x8]
	0x03481BE4 CMP X11, X1
	0x03481BE8 B.EQ 0x3481C4C
	0x03481BEC SUBS X9, X9, 0x1
	0x03481BF0 ADD X10, X10, 0x10
	0x03481BF4 B.NE 0x3481BE0
	0x03481BF8 MOVZ W2, 0x2
	0x03481BFC MOV X0, X22
	0x03481C00 BL 0x1C5C788
	0x03481C04 B 0x3481C5C
	0x03481C08 CBZ X22, 0x3481DFC
	0x03481C0C LDR X8, [X22]
	0x03481C10 LDR X1, [X23]
	0x03481C14 LDRH W9, [X8 + 0x12E]
	0x03481C18 CBZ X9, 0x3481C3C
	0x03481C1C LDR X10, [X8 + 0xB0]
	0x03481C20 ADD X10, X10, 0x8
	0x03481C24 LDUR X11, [X10 - 0x8]
	0x03481C28 CMP X11, X1
	0x03481C2C B.EQ 0x3481DBC
	0x03481C30 SUBS X9, X9, 0x1
	0x03481C34 ADD X10, X10, 0x10
	0x03481C38 B.NE 0x3481C24
	0x03481C3C MOV X0, X22
	0x03481C40 MOV W2, W31
	0x03481C44 BL 0x1C5C788
	0x03481C48 B 0x3481DC8
	0x03481C4C LDR W9, [X10]
	0x03481C50 ADD W9, W9, 0x2
	0x03481C54 ADD X8, X8, W9, 0x4, SXTW
	0x03481C58 ADD X0, X8, 0x138
	0x03481C5C LDP X8, X1, [X0]
	0x03481C60 MOV X0, X22
	0x03481C64 BLR X8
	0x03481C68 CBZ X21, 0x3481DF8
	0x03481C6C STR X0, [X21 + 0x18]
	0x03481C70 CBZ X20, 0x3481DE0
	0x03481C74 ADD X0, X20, 0x10
	0x03481C78 MOV X1, X31
	0x03481C7C BL 0x33EB14C
	0x03481C80 ADRP X8, 0xCAF000
	0x03481C84 LDR X8, [X8 + 0xBC8]
	0x03481C88 MOV W23, W0
	0x03481C8C LDR X0, [X8]
	0x03481C90 BL 0x1C16F10
	0x03481C94 MOV X22, X0
	0x03481C98 MOV X1, X31
	0x03481C9C BL 0x33BDD8C
	0x03481CA0 ADRP X8, 0xC72000
	0x03481CA4 LDR X8, [X8 + 0x758]
	0x03481CA8 STR W23, [X31 + 0xC]
	0x03481CAC LDR X0, [X8]
	0x03481CB0 ADD X1, X31, 0xC
	0x03481CB4 BL 0x1C16E04
	0x03481CB8 MOV X1, X0
	0x03481CBC ADRP X8, 0xC76000
	0x03481CC0 LDR X8, [X8 + 0x110]
	0x03481CC4 LDR X0, [X8]
	0x03481CC8 MOV X2, X31
	0x03481CCC BL 0x321EFD0
	0x03481CD0 CBZ X22, 0x3481DEC
	0x03481CD4 STR X0, [X22 + 0x10]
	0x03481CD8 STR X21, [X22 + 0x98]
	0x03481CDC MOV X0, X20
	0x03481CE0 MOV X1, X22
	0x03481CE4 MOV X2, X31
	0x03481CE8 BL 0x347BA8C
	0x03481CEC CBZ X0, 0x3481DF0
	0x03481CF0 ADRP X8, 0xCAF000
	0x03481CF4 LDR X8, [X8 + 0xE98]
	0x03481CF8 LDR X1, [X8]
	0x03481CFC BL 0x269F5D0
	0x03481D00 ADRP X8, 0xCAF000
	0x03481D04 LDR X8, [X8 + 0xE90]
	0x03481D08 STR X0, [X31 + 0x18]
	0x03481D0C LDR X1, [X8]
	0x03481D10 ADD X0, X31, 0x18
	0x03481D14 BL 0x2677430
	0x03481D18 TBZ X0, 0x0, 0x3481D6C
	0x03481D1C ADRP X8, 0xCAF000
	0x03481D20 LDR X8, [X8 + 0xE88]
	0x03481D24 ADD X0, X31, 0x18
	0x03481D28 LDR X1, [X8]
	0x03481D2C BL 0x2677474
	0x03481D30 CBZ X0, 0x3481DE4
	0x03481D34 MOVN W8, 0x1
	0x03481D38 LDR X20, [X0 + 0x88]
	0x03481D3C STR W8, [X19], #0x8
	0x03481D40 LDR X0, [X24]
	0x03481D44 ADRP X21, 0xCAF000
	0x03481D48 LDR W8, [X0 + 0xE0]
	0x03481D4C LDR X21, [X21 + 0xEE0]
	0x03481D50 CBNZ W8, 0x3481D58
	0x03481D54 BL 0x1C16DFC
	0x03481D58 LDR X2, [X21]
	0x03481D5C MOV X0, X19
	0x03481D60 MOV X1, X20
	0x03481D64 BL 0x26322B0
	0x03481D68 B 0x3481DA4
	0x03481D6C STR W31, [X19]
	0x03481D70 LDR X8, [X31 + 0x18]
	0x03481D74 STR X8, [X19 + 0x30]
	0x03481D78 LDR X0, [X24]
	0x03481D7C LDR W8, [X0 + 0xE0]
	0x03481D80 CBNZ W8, 0x3481D88
	0x03481D84 BL 0x1C16DFC
	0x03481D88 ADRP X8, 0xCAF000
	0x03481D8C LDR X8, [X8 + 0xF78]
	0x03481D90 ADD X0, X19, 0x8
	0x03481D94 LDR X3, [X8]
	0x03481D98 ADD X1, X31, 0x18
	0x03481D9C MOV X2, X19
	0x03481DA0 BL 0x1FC22D0
	0x03481DA4 LDP X20, X19, [X31 + 0x40]
	0x03481DA8 LDP X22, X21, [X31 + 0x30]
	0x03481DAC LDP X24, X23, [X31 + 0x20]
	0x03481DB0 LDR X30, [X31 + 0x10]
	0x03481DB4 ADD X31, X31, 0x50
	0x03481DB8 RET
	0x03481DBC LDRSW X9, [X10]
	0x03481DC0 ADD X8, X8, X9, 0x4, LSL
	0x03481DC4 ADD X0, X8, 0x138
	0x03481DC8 LDP X8, X1, [X0]
	0x03481DCC MOV X0, X22
	0x03481DD0 BLR X8
	0x03481DD4 CBZ X21, 0x3481E00
	0x03481DD8 STR X0, [X21 + 0x10]
	0x03481DDC CBNZ X20, 0x3481C74
	0x03481DE0 BL 0x1C16F20
	0x03481DE4 BL 0x1C16F20
	0x03481DE8 BL 0x1C16F20
	0x03481DEC BL 0x1C16F20
	0x03481DF0 BL 0x1C16F20
	0x03481DF4 BL 0x1C16F20
	0x03481DF8 BL 0x1C16F20
	0x03481DFC BL 0x1C16F20
	0x03481E00 BL 0x1C16F20
	0x03481E04 B 0x3481E44
	0x03481E08 B 0x3481E44
	0x03481E0C B 0x3481E44

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF5D000
	009 Move W8, [X20+2236]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xCB0000
	016 Move X0, [X0+3800]
	017 Call 0x1C17CF4
	018 Move X0, 0xCB0000
	019 Move X0, [X0+3808]
	020 Call 0x1C17CF4
	021 Move X0, 0xCB0000
	022 Move X0, [X0+3152]
	023 Call 0x1C17CF4
	024 Move X0, 0xC73000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB0000
	028 Move X0, [X0+3816]
	029 Call 0x1C17CF4
	030 Move X0, 0xCB0000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move X0, 0xCB0000
	034 Move X0, [X0+3728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCB0000
	037 Move X0, [X0+3736]
	038 Call 0x1C17CF4
	039 Move X0, 0xCB0000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0xC77000
	043 Move X0, [X0+272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2236], W8
	047 Move [X31+8], X31
	048 Move X23, 0xCB0000
	049 Move W8, [X19]
	050 Move X23, [X23+3152]
	051 Compare W8, 0
	052 JumpIfEqual {129}
	053 Move X20, [X19+32]
	054 Compare X20, 0
	055 JumpIfEqual {168}
	056 Add X0, X20, 16
	057 Move X1, X31
	058 Call Interlocked.Increment, X0
	059 Move X8, 0xCB0000
	060 Move X8, [X8+3016]
	061 Move W22, W0
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X21, X0
	065 Move X1, X31
	066 Call Object..ctor, X0
	067 Move X8, 0xC73000
	068 Move X8, [X8+1880]
	069 Move [X31+4], W22
	070 Move X0, [X8]
	071 Add X1, X31, 4
	072 Call 0x1C17E04
	073 Move X1, X0
	074 Move X8, 0xC77000
	075 Move X8, [X8+272]
	076 Move X0, [X8]
	077 Move X2, X31
	078 Call String.Format, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {169}
	081 Move X8, 0xCB0000
	082 Move X8, [X8+3816]
	083 Move [X21+16], X0
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X22, X0
	087 Move X1, X31
	088 Call MatchCreateMessage..ctor, X0
	089 Compare X22, 0
	090 JumpIfEqual {170}
	091 Move X8, [X19+40]
	092 Move [X22+16], X8
	093 Move [X21+144], X22
	094 Move X0, X20
	095 Move X1, X21
	096 Move X2, X31
	097 Call Socket.SendAsync, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {171}
	100 Move X8, 0xCB0000
	101 Move X8, [X8+3736]
	102 Move X1, [X8]
	103 Call Task`1<Object>.GetAwaiter, X0
	104 Move X8, 0xCB0000
	105 Move X8, [X8+3728]
	106 Move [X31+8], X0
	107 Move X1, [X8]
	108 Add X0, X31, 8
	109 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {136}
	114 Move [X19], W31
	115 Move X8, [X31+8]
	116 Move [X19+48], X8
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X8, 0xCB0000
	123 Move X8, [X8+3800]
	124 Add X0, X19, 8
	125 Move X3, [X8]
	126 Add X1, X31, 8
	127 Move X2, X19
	128 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	129 Move X8, [X19+48]
	130 Move TEMP, 0
	131 Not TEMP
	132 Move W9, TEMP
	133 Move [X31+8], X8
	134 Move [X19+48], X31
	135 Move [X19], W9
	136 Move X8, 0xCB0000
	137 Move X8, [X8+3720]
	138 Add X0, X31, 8
	139 Move X1, [X8]
	140 Call TaskAwaiter`1<Object>.GetResult, X0
	141 Compare X0, 0
	142 JumpIfEqual {167}
	143 Move TEMP, 1
	144 Not TEMP
	145 Move W8, TEMP
	146 Move X20, [X0+136]
	147 Move [X19+8], W8
	148 Move X0, [X23]
	149 Move X21, 0xCB0000
	150 Move W8, [X0+224]
	151 Move X21, [X21+3808]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X2, [X21]
	156 Move X0, X19
	157 Move X1, X20
	158 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X30, [X31+16]
	164 Move X23, [X31+24]
	165 Add X31, X31, 64
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Move X20, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X20
	175 Call 0x3EB2AD0
	176 Move X20, X0
	177 Move X0, 0xC73000
	178 Move X0, [X0+2000]
	179 Call 0x1C17D08
	180 Move X8, [X20]
	181 Move X1, [X8]
	182 Call 0x1C18270
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {207}
	187 Move X20, [X20]
	188 Call 0x3EB2AE0
	189 Move TEMP, 1
	190 Not TEMP
	191 Move W8, TEMP
	192 Move [X19+8], W8
	193 Move X0, 0xCB0000
	194 Move X0, [X0+3152]
	195 Call 0x1C17D08
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, 0xCB0000
	201 Move X0, [X0+3824]
	202 Call 0x1C17D08
	203 Move X2, X0
	204 Move X0, X19
	205 Move X1, X20
	206 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	207 Move W0, 8
	208 Call 0x3EB2AF0
	209 Move X8, [X20]
	210 Move [X0], X8
	211 Move X1, 0xA34000
	212 Add X1, X1, 3672
	213 Move X2, X31
	214 Call 0x3EB2B00
	215 Move X20, X0
	216 Call 0x3EB2AE0
	217 Move X0, X20
	218 Call 0x1D2D690
	219 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03481E10 B 0x3481E44
	0x03481E14 B 0x3481E44
	0x03481E18 B 0x3481E44
	0x03481E1C B 0x3481E44
	0x03481E20 B 0x3481E44
	0x03481E24 B 0x3481E44
	0x03481E28 B 0x3481E44
	0x03481E2C B 0x3481E44
	0x03481E30 B 0x3481E44
	0x03481E34 B 0x3481E44
	0x03481E38 B 0x3481E44
	0x03481E3C B 0x3481E44
	0x03481E40 B 0x3481E44
	0x03481E44 MOV X20, X0
	0x03481E48 CMP W1, 0x1
	0x03481E4C B.NE 0x3481EE8
	0x03481E50 MOV X0, X20
	0x03481E54 BL 0x3EB1AD0
	0x03481E58 MOV X20, X0
	0x03481E5C ADRP X0, 0xC72000
	0x03481E60 LDR X0, [X0 + 0x7D0]
	0x03481E64 BL 0x1C16D08
	0x03481E68 LDR X8, [X20]
	0x03481E6C LDR X1, [X8]
	0x03481E70 BL 0x1C17270
	0x03481E74 TBZ X0, 0x0, 0x3481EC0
	0x03481E78 LDR X20, [X20]
	0x03481E7C BL 0x3EB1AE0
	0x03481E80 MOVN W8, 0x1
	0x03481E84 STR W8, [X19], #0x8
	0x03481E88 ADRP X0, 0xCAF000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF5D000
	007 Move X21, 0xCB0000
	008 Move W8, [X22+2237]
	009 Move X21, [X21+3152]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCB0000
	017 Move X0, [X0+3832]
	018 Call 0x1C17CF4
	019 Move X0, 0xCB0000
	020 Move X0, [X0+3152]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2237], W8
	024 Move X0, [X21]
	025 Move X21, 0xCB0000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3832]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

