Type: Nakama.ApiClient/<LinkEmailAsync>d__23

Method: System.Void MoveNext()

Disassembly:
	0x034294DC BL 0x1C16DFC
	0x034294E0 ADRP X8, 0xD05000
	0x034294E4 LDR X8, [X8 + 0xE88]
	0x034294E8 ADD X0, X19, 0x8
	0x034294EC LDR X3, [X8]
	0x034294F0 ADD X1, X31, 0x18
	0x034294F4 MOV X2, X19
	0x034294F8 BL 0x21869BC
	0x034294FC LDP X20, X19, [X31 + 0x60]
	0x03429500 LDP X22, X21, [X31 + 0x50]
	0x03429504 LDP X24, X23, [X31 + 0x40]
	0x03429508 LDP X26, X25, [X31 + 0x30]
	0x0342950C LDP X28, X27, [X31 + 0x20]
	0x03429510 LDR X30, [X31 + 0x10]
	0x03429514 ADD X31, X31, 0x70
	0x03429518 RET
	0x0342951C ADRP X0, 0xCD2000
	0x03429520 LDR X0, [X0 + 0x578]
	0x03429524 BL 0x1C16D08
	0x03429528 BL 0x1C16F10
	0x0342952C MOV X20, X0
	0x03429530 ADRP X0, 0xD05000
	0x03429534 LDR X0, [X0 + 0xBC8]
	0x03429538 BL 0x1C16D08
	0x0342953C MOV X1, X0
	0x03429540 MOV X0, X20
	0x03429544 MOV X2, X31
	0x03429548 BL 0x3314A68
	0x0342954C ADRP X0, 0xD05000
	0x03429550 LDR X0, [X0 + 0xE98]
	0x03429554 BL 0x1C16D08
	0x03429558 MOV X1, X0
	0x0342955C MOV X0, X20
	0x03429560 BL 0x1C16DEC
	0x03429564 BL 0x1C16F20
	0x03429568 BL 0x1C16F20
	0x0342956C BL 0x1C16F20
	0x03429570 BL 0x1C16F28
	0x03429574 BL 0x1C16F20
	0x03429578 BL 0x1C16F20
	0x0342957C BL 0x1C16F20
	0x03429580 BL 0x1C16F20
	0x03429584 BL 0x1C16F20
	0x03429588 BL 0x1C16F20
	0x0342958C B 0x34295EC
	0x03429590 B 0x34295EC
	0x03429594 B 0x34295EC
	0x03429598 B 0x34295EC
	0x0342959C B 0x34295EC
	0x034295A0 B 0x34295EC
	0x034295A4 B 0x34295EC
	0x034295A8 B 0x34295EC
	0x034295AC B 0x34295EC
	0x034295B0 B 0x34295EC
	0x034295B4 B 0x34295EC
	0x034295B8 B 0x34295EC
	0x034295BC B 0x34295EC
	0x034295C0 B 0x34295EC
	0x034295C4 B 0x34295EC
	0x034295C8 B 0x34295EC
	0x034295CC B 0x34295EC
	0x034295D0 B 0x34295EC
	0x034295D4 B 0x34295EC
	0x034295D8 B 0x34295EC
	0x034295DC B 0x34295EC
	0x034295E0 B 0x34295EC
	0x034295E4 B 0x34295EC
	0x034295E8 B 0x34295EC
	0x034295EC MOV X20, X0
	0x034295F0 CMP W1, 0x1
	0x034295F4 B.NE 0x3429684
	0x034295F8 MOV X0, X20
	0x034295FC BL 0x3EB1AD0
	0x03429600 MOV X20, X0
	0x03429604 ADRP X0, 0xCCA000
	0x03429608 LDR X0, [X0 + 0x7D0]
	0x0342960C BL 0x1C16D08
	0x03429610 LDR X8, [X20]
	0x03429614 LDR X1, [X8]
	0x03429618 BL 0x1C17270
	0x0342961C TBZ X0, 0x0, 0x342965C
	0x03429620 LDR X20, [X20]
	0x03429624 BL 0x3EB1AE0
	0x03429628 MOVN W8, 0x1
	0x0342962C STR W8, [X19], #0x8
	0x03429630 ADRP X0, 0xCCD000
	0x03429634 LDR X0, [X0 + 0x280]
	0x03429638 BL 0x1C16D08
	0x0342963C LDR W8, [X0 + 0xE0]
	0x03429640 CBNZ W8, 0x3429648
	0x03429644 BL 0x1C16DFC
	0x03429648 MOV X0, X19
	0x0342964C MOV X1, X20
	0x03429650 MOV X2, X31
	0x03429654 BL 0x32C4908
	0x03429658 B 0x34294FC
	0x0342965C MOVZ W0, 0x8
	0x03429660 BL 0x3EB1AF0
	0x03429664 LDR X8, [X20]
	0x03429668 STR X8, [X0]
	0x0342966C ADRP X1, 0xA8B000
	0x03429670 ADD X1, X1, 0xE58
	0x03429674 MOV X2, X31
	0x03429678 BL 0x3EB1B00
	0x0342967C MOV X20, X0
	0x03429680 BL 0x3EB1AE0
	0x03429684 MOV X0, X20
	0x03429688 BL 0x1D2C690
	0x0342968C BL 0x1990590
	0x03429690 STR X30, [X31 - 0x30]!
	0x03429694 STP X22, X21, [X31 + 0x10]
	0x03429698 STP X20, X19, [X31 + 0x20]
	0x0342969C ADRP X21, 0xFB4000
	0x034296A0 ADRP X22, 0xCCD000
	0x034296A4 LDRB W8, [X21 + 0x644]
	0x034296A8 LDR X22, [X22 + 0x280]
	0x034296AC MOV X19, X1
	0x034296B0 MOV X20, X0
	0x034296B4 TBNZ X8, 0x0, 0x34296CC
	0x034296B8 ADRP X0, 0xCCD000
	0x034296BC LDR X0, [X0 + 0x280]
	0x034296C0 BL 0x1C16CF4
	0x034296C4 MOVZ W8, 0x1
	0x034296C8 STRB W8, [X21 + 0x644]
	0x034296CC LDR X0, [X22]
	0x034296D0 LDR W8, [X0 + 0xE0]
	0x034296D4 CBNZ W8, 0x34296DC
	0x034296D8 BL 0x1C16DFC
	0x034296DC ADD X0, X20, 0x8
	0x034296E0 MOV X1, X19
	0x034296E4 LDP X20, X19, [X31 + 0x20]
	0x034296E8 LDP X22, X21, [X31 + 0x10]
	0x034296EC MOV X2, X31
	0x034296F0 LDR X30, [X31], #0x30
	0x034296F4 B 0x32C477C
	0x034296F8 SUB X31, X31, 0x70
	0x034296FC STR X30, [X31 + 0x10]
	0x03429700 STP X28, X27, [X31 + 0x20]
	0x03429704 STP X26, X25, [X31 + 0x30]
	0x03429708 STP X24, X23, [X31 + 0x40]
	0x0342970C STP X22, X21, [X31 + 0x50]
	0x03429710 STP X20, X19, [X31 + 0x60]
	0x03429714 ADRP X20, 0xFB4000
	0x03429718 LDRB W8, [X20 + 0x645]
	0x0342971C MOV X19, X0
	0x03429720 TBNZ X8, 0x0, 0x34297EC
	0x03429724 ADRP X0, 0xD05000
	0x03429728 LDR X0, [X0 + 0xEA0]
	0x0342972C BL 0x1C16CF4
	0x03429730 ADRP X0, 0xCCD000
	0x03429734 LDR X0, [X0 + 0x280]
	0x03429738 BL 0x1C16CF4
	0x0342973C ADRP X0, 0xCD3000
	0x03429740 LDR X0, [X0 + 0x8D8]
	0x03429744 BL 0x1C16CF4
	0x03429748 ADRP X0, 0xCCB000
	0x0342974C LDR X0, [X0 + 0x810]
	0x03429750 BL 0x1C16CF4
	0x03429754 ADRP X0, 0xCCB000
	0x03429758 LDR X0, [X0 + 0x6C0]
	0x0342975C BL 0x1C16CF4
	0x03429760 ADRP X0, 0xCCB000
	0x03429764 LDR X0, [X0 + 0x6D0]
	0x03429768 BL 0x1C16CF4
	0x0342976C ADRP X0, 0xD05000
	0x03429770 LDR X0, [X0 + 0x7B8]
	0x03429774 BL 0x1C16CF4
	0x03429778 ADRP X0, 0xCCD000
	0x0342977C LDR X0, [X0 + 0x1E0]
	0x03429780 BL 0x1C16CF4
	0x03429784 ADRP X0, 0xCCD000
	0x03429788 LDR X0, [X0 + 0x1F0]
	0x0342978C BL 0x1C16CF4
	0x03429790 ADRP X0, 0xCCD000
	0x03429794 LDR X0, [X0 + 0x1F8]
	0x03429798 BL 0x1C16CF4
	0x0342979C ADRP X0, 0xCD3000
	0x034297A0 LDR X0, [X0 + 0x3A0]
	0x034297A4 BL 0x1C16CF4
	0x034297A8 ADRP X0, 0xCF3000
	0x034297AC LDR X0, [X0 + 0x4D8]
	0x034297B0 BL 0x1C16CF4
	0x034297B4 ADRP X0, 0xD05000
	0x034297B8 LDR X0, [X0 + 0xEA8]
	0x034297BC BL 0x1C16CF4
	0x034297C0 ADRP X0, 0xD05000
	0x034297C4 LDR X0, [X0 + 0x7D0]
	0x034297C8 BL 0x1C16CF4
	0x034297CC ADRP X0, 0xD05000
	0x034297D0 LDR X0, [X0 + 0x7D8]
	0x034297D4 BL 0x1C16CF4
	0x034297D8 ADRP X0, 0xCCA000
	0x034297DC LDR X0, [X0 + 0x988]
	0x034297E0 BL 0x1C16CF4
	0x034297E4 MOVZ W8, 0x1
	0x034297E8 STRB W8, [X20 + 0x645]
	0x034297EC STR X31, [X31 + 0x18]
	0x034297F0 ADRP X28, 0xCCD000
	0x034297F4 LDR W8, [X19]
	0x034297F8 LDR X28, [X28 + 0x280]
	0x034297FC CBZ W8, 0x34299DC
	0x03429800 LDR X8, [X19 + 0x20]
	0x03429804 CBZ X8, 0x3429AF4
	0x03429808 LDR X25, [X19 + 0x28]
	0x0342980C CBZ X25, 0x3429B3C
	0x03429810 LDR X0, [X25 + 0x20]
	0x03429814 CBZ X0, 0x3429B40
	0x03429818 ADRP X8, 0xD05000
	0x0342981C ADRP X9, 0xCCA000
	0x03429820 LDR X8, [X8 + 0xEA8]
	0x03429824 LDR X9, [X9 + 0x988]
	0x03429828 LDR X21, [X8]
	0x0342982C LDR X20, [X9]
	0x03429830 MOV X1, X31
	0x03429834 BL 0x361B448
	0x03429838 ADRP X8, 0xCD3000
	0x0342983C LDR X8, [X8 + 0x8D8]
	0x03429840 MOV X22, X0
	0x03429844 LDR X0, [X8]
	0x03429848 MOVZ W1, 0x1
	0x0342984C BL 0x1C16D6C
	0x03429850 MOV X1, X0
	0x03429854 CBZ X1, 0x3429B44
	0x03429858 LDR W8, [X1 + 0x18]
	0x0342985C CBZ W8, 0x3429B48
	0x03429860 MOVZ W8, 0x2F
	0x03429864 STRH W8, [X1 + 0x20]
	0x03429868 CBZ X22, 0x3429B4C
	0x0342986C MOV X0, X22
	0x03429870 MOV X2, X31
	0x03429874 BL 0x322BC58
	0x03429878 MOV X1, X21
	0x0342987C MOV X2, X31
	0x03429880 BL 0x321B938
	0x03429884 ADRP X8, 0xCD3000
	0x03429888 LDR X8, [X8 + 0x3A0]
	0x0342988C MOV X22, X0
	0x03429890 LDR X23, [X25 + 0x20]
	0x03429894 LDR X0, [X8]
	0x03429898 BL 0x1C16F10
	0x0342989C MOV X21, X0
	0x034298A0 MOV X1, X23
	0x034298A4 MOV X2, X31
	0x034298A8 BL 0x36281F8
	0x034298AC CBZ X21, 0x3429B50
	0x034298B0 MOV X0, X21
	0x034298B4 MOV X1, X22
	0x034298B8 MOV X2, X31
	0x034298BC BL 0x36288CC
	0x034298C0 MOV X0, X21
	0x034298C4 MOV X1, X20
	0x034298C8 MOV X2, X31
	0x034298CC BL 0x3628980
	0x034298D0 MOV X0, X21
	0x034298D4 MOV X1, X31
	0x034298D8 BL 0x3628A38
	0x034298DC ADRP X8, 0xCF3000
	0x034298E0 ADRP X9, 0xCCB000
	0x034298E4 LDR X8, [X8 + 0x4D8]
	0x034298E8 LDR X9, [X9 + 0x6D0]
	0x034298EC MOV X20, X0
	0x034298F0 LDR X21, [X8]
	0x034298F4 LDR X0, [X9]
	0x034298F8 BL 0x1C16F10
	0x034298FC ADRP X8, 0xCCB000
	0x03429900 LDR X8, [X8 + 0x6C0]
	0x03429904 MOV X22, X0
	0x03429908 LDR X1, [X8]
	0x0342990C BL 0x2AA4804
	0x03429910 ADRP X8, 0xD05000
	0x03429914 LDR X8, [X8 + 0x7D8]
	0x03429918 LDR X1, [X19 + 0x30]
	0x0342991C LDR X0, [X8]
	0x03429920 MOV X2, X31
	0x03429924 BL 0x321B938
	0x03429928 CBZ X22, 0x3429B54
	0x0342992C ADRP X8, 0xD05000
	0x03429930 LDR X8, [X8 + 0x7D0]
	0x03429934 ADRP X9, 0xCCB000
	0x03429938 LDR X9, [X9 + 0x810]
	0x0342993C MOV X2, X0
	0x03429940 LDR X1, [X8]
	0x03429944 LDR X3, [X9]
	0x03429948 MOV X0, X22
	0x0342994C BL 0x2AA5098
	0x03429950 LDR X0, [X19 + 0x20]
	0x03429954 MOV X1, X31
	0x03429958 BL 0x3483BE4
	0x0342995C MOV X23, X0
	0x03429960 MOV X0, X31
	0x03429964 BL 0x3241948
	0x03429968 CBZ X0, 0x3429B58
	0x0342996C LDR X8, [X0]
	0x03429970 LDR X9, [X8 + 0x268]
	0x03429974 LDR X2, [X8 + 0x270]
	0x03429978 MOV X1, X23
	0x0342997C BLR X9
	0x03429980 LDR X24, [X25 + 0x10]
	0x03429984 CBZ X24, 0x3429B5C
	0x03429988 ADRP X10, 0xD05000
	0x0342998C LDR X10, [X10 + 0x7B8]
	0x03429990 LDR X8, [X24]
	0x03429994 LDR W26, [X25 + 0x18]
	0x03429998 LDP X27, X25, [X19 + 0x38]
	0x0342999C LDR X1, [X10]
	0x034299A0 LDRH W9, [X8 + 0x12E]
	0x034299A4 MOV X23, X0
	0x034299A8 CBZ X9, 0x34299CC
	0x034299AC LDR X10, [X8 + 0xB0]
	0x034299B0 ADD X10, X10, 0x8
	0x034299B4 LDUR X11, [X10 - 0x8]
	0x034299B8 CMP X11, X1
	0x034299BC B.EQ 0x34299F4
	0x034299C0 SUBS X9, X9, 0x1
	0x034299C4 ADD X10, X10, 0x10
	0x034299C8 B.NE 0x34299B4
	0x034299CC MOVZ W2, 0x3
	0x034299D0 MOV X0, X24
	0x034299D4 BL 0x1C5C788
	0x034299D8 B 0x3429A04
	0x034299DC LDR X8, [X19 + 0x48]
	0x034299E0 MOVN W9, 0x0
	0x034299E4 STR X8, [X31 + 0x18]
	0x034299E8 STR X31, [X19 + 0x48]
	0x034299EC STR W9, [X19]
	0x034299F0 B 0x3429A60
	0x034299F4 LDR W9, [X10]
	0x034299F8 ADD W9, W9, 0x3
	0x034299FC ADD X8, X8, W9, 0x4, SXTW
	0x03429A00 ADD X0, X8, 0x138
	0x03429A04 LDP X8, X9, [X0]
	0x03429A08 MOV X0, X24
	0x03429A0C MOV X1, X21
	0x03429A10 MOV X2, X20
	0x03429A14 MOV X3, X22
	0x03429A18 MOV X4, X23
	0x03429A1C MOV W5, W26
	0x03429A20 MOV X6, X27
	0x03429A24 MOV X7, X25
	0x03429A28 STR X9, [X31]
	0x03429A2C BLR X8
	0x03429A30 CBZ X0, 0x3429B60
	0x03429A34 ADRP X8, 0xCCD000
	0x03429A38 LDR X8, [X8 + 0x1F8]
	0x03429A3C LDR X1, [X8]
	0x03429A40 BL 0x269F5D0
	0x03429A44 ADRP X8, 0xCCD000
	0x03429A48 LDR X8, [X8 + 0x1F0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB5000
	014 Move W8, [X20+1599]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xD06000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCE000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD4000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCC000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCCC000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCC000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD06000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCE000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCE000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCE000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD4000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCF4000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xD06000
	057 Move X0, [X0+3680]
	058 Call 0x1C17CF4
	059 Move X0, 0xD06000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xD06000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCCB000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1599], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCCE000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xD06000
	086 Move X9, 0xCCB000
	087 Move X8, [X8+3680]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCD4000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCD4000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCF4000
	139 Move X9, 0xCCC000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCCC000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xD06000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xD06000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCCC000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xD06000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCCE000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCCE000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCCE000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xD06000
	269 Move X8, [X8+3672]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCD3000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xD06000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xD06000
	301 Move X0, [X0+3688]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCCB000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCCE000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA8C000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03429A4C STR X0, [X31 + 0x18]
	0x03429A50 LDR X1, [X8]
	0x03429A54 ADD X0, X31, 0x18
	0x03429A58 BL 0x2677430
	0x03429A5C TBZ X0, 0x0, 0x3429A9C
	0x03429A60 ADRP X8, 0xCCD000
	0x03429A64 LDR X8, [X8 + 0x1E0]
	0x03429A68 ADD X0, X31, 0x18
	0x03429A6C LDR X1, [X8]
	0x03429A70 BL 0x2677474
	0x03429A74 MOVN W8, 0x1
	0x03429A78 STR W8, [X19], #0x8
	0x03429A7C LDR X0, [X28]
	0x03429A80 LDR W8, [X0 + 0xE0]
	0x03429A84 CBNZ W8, 0x3429A8C
	0x03429A88 BL 0x1C16DFC
	0x03429A8C MOV X0, X19
	0x03429A90 MOV X1, X31
	0x03429A94 BL 0x32C4864
	0x03429A98 B 0x3429AD4
	0x03429A9C STR W31, [X19]
	0x03429AA0 LDR X8, [X31 + 0x18]
	0x03429AA4 STR X8, [X19 + 0x48]
	0x03429AA8 LDR X0, [X28]
	0x03429AAC LDR W8, [X0 + 0xE0]
	0x03429AB0 CBNZ W8, 0x3429AB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB5000
	007 Move X22, 0xCCE000
	008 Move W8, [X21+1600]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCCE000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1600], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

