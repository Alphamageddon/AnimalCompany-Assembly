Type: Nakama.ApiClient/<DeleteFriendsAsync>d__41

Method: System.Void MoveNext()

Disassembly:
	0x0341FF24 BL 0x1C16D08
	0x0341FF28 BL 0x1C16F10
	0x0341FF2C MOV X20, X0
	0x0341FF30 ADRP X0, 0xD0F000
	0x0341FF34 LDR X0, [X0 + 0x808]
	0x0341FF38 BL 0x1C16D08
	0x0341FF3C MOV X1, X0
	0x0341FF40 MOV X0, X20
	0x0341FF44 MOV X2, X31
	0x0341FF48 BL 0x3314A68
	0x0341FF4C ADRP X0, 0xD0F000
	0x0341FF50 LDR X0, [X0 + 0xC10]
	0x0341FF54 BL 0x1C16D08
	0x0341FF58 MOV X1, X0
	0x0341FF5C MOV X0, X20
	0x0341FF60 BL 0x1C16DEC
	0x0341FF64 BL 0x1C16F20
	0x0341FF68 BL 0x1C16F20
	0x0341FF6C BL 0x1C16F20
	0x0341FF70 BL 0x1C16F20
	0x0341FF74 BL 0x1C16F28
	0x0341FF78 BL 0x1C16F20
	0x0341FF7C BL 0x1C16F20
	0x0341FF80 BL 0x1C16F20
	0x0341FF84 BL 0x1C16F20
	0x0341FF88 BL 0x1C16F20
	0x0341FF8C B 0x341FFE8
	0x0341FF90 B 0x341FFE8
	0x0341FF94 B 0x341FFE8
	0x0341FF98 B 0x341FFE8
	0x0341FF9C B 0x341FFE8
	0x0341FFA0 B 0x341FFE8
	0x0341FFA4 B 0x341FFE8
	0x0341FFA8 B 0x341FFE8
	0x0341FFAC B 0x341FFE8
	0x0341FFB0 B 0x341FFE8
	0x0341FFB4 B 0x341FFE8
	0x0341FFB8 B 0x341FFE8
	0x0341FFBC B 0x341FFE8
	0x0341FFC0 B 0x341FFE8
	0x0341FFC4 B 0x341FFE8
	0x0341FFC8 B 0x341FFE8
	0x0341FFCC B 0x341FFE8
	0x0341FFD0 B 0x341FFE8
	0x0341FFD4 B 0x341FFE8
	0x0341FFD8 B 0x341FFE8
	0x0341FFDC B 0x341FFE8
	0x0341FFE0 B 0x341FFE8
	0x0341FFE4 B 0x341FFE8
	0x0341FFE8 MOV X20, X0
	0x0341FFEC CMP W1, 0x1
	0x0341FFF0 B.NE 0x3420080
	0x0341FFF4 MOV X0, X20
	0x0341FFF8 BL 0x3EB1AD0
	0x0341FFFC MOV X20, X0
	0x03420000 ADRP X0, 0xCD3000
	0x03420004 LDR X0, [X0 + 0x7D0]
	0x03420008 BL 0x1C16D08
	0x0342000C LDR X8, [X20]
	0x03420010 LDR X1, [X8]
	0x03420014 BL 0x1C17270
	0x03420018 TBZ X0, 0x0, 0x3420058
	0x0342001C LDR X20, [X20]
	0x03420020 BL 0x3EB1AE0
	0x03420024 MOVN W8, 0x1
	0x03420028 STR W8, [X19], #0x8
	0x0342002C ADRP X0, 0xCD6000
	0x03420030 LDR X0, [X0 + 0x280]
	0x03420034 BL 0x1C16D08
	0x03420038 LDR W8, [X0 + 0xE0]
	0x0342003C CBNZ W8, 0x3420044
	0x03420040 BL 0x1C16DFC
	0x03420044 MOV X0, X19
	0x03420048 MOV X1, X20
	0x0342004C MOV X2, X31
	0x03420050 BL 0x32C4908
	0x03420054 B 0x341FF00
	0x03420058 MOVZ W0, 0x8
	0x0342005C BL 0x3EB1AF0
	0x03420060 LDR X8, [X20]
	0x03420064 STR X8, [X0]
	0x03420068 ADRP X1, 0xA94000
	0x0342006C ADD X1, X1, 0xE58
	0x03420070 MOV X2, X31
	0x03420074 BL 0x3EB1B00
	0x03420078 MOV X20, X0
	0x0342007C BL 0x3EB1AE0
	0x03420080 MOV X0, X20
	0x03420084 BL 0x1D2C690
	0x03420088 BL 0x1990590
	0x0342008C STR X30, [X31 - 0x30]!
	0x03420090 STP X22, X21, [X31 + 0x10]
	0x03420094 STP X20, X19, [X31 + 0x20]
	0x03420098 ADRP X21, 0xFBD000
	0x0342009C ADRP X22, 0xCD6000
	0x034200A0 LDRB W8, [X21 + 0x618]
	0x034200A4 LDR X22, [X22 + 0x280]
	0x034200A8 MOV X19, X1
	0x034200AC MOV X20, X0
	0x034200B0 TBNZ X8, 0x0, 0x34200C8
	0x034200B4 ADRP X0, 0xCD6000
	0x034200B8 LDR X0, [X0 + 0x280]
	0x034200BC BL 0x1C16CF4
	0x034200C0 MOVZ W8, 0x1
	0x034200C4 STRB W8, [X21 + 0x618]
	0x034200C8 LDR X0, [X22]
	0x034200CC LDR W8, [X0 + 0xE0]
	0x034200D0 CBNZ W8, 0x34200D8
	0x034200D4 BL 0x1C16DFC
	0x034200D8 ADD X0, X20, 0x8
	0x034200DC MOV X1, X19
	0x034200E0 LDP X20, X19, [X31 + 0x20]
	0x034200E4 LDP X22, X21, [X31 + 0x10]
	0x034200E8 MOV X2, X31
	0x034200EC LDR X30, [X31], #0x30
	0x034200F0 B 0x32C477C
	0x034200F4 SUB X31, X31, 0x60
	0x034200F8 STP X30, X27, [X31 + 0x10]
	0x034200FC STP X26, X25, [X31 + 0x20]
	0x03420100 STP X24, X23, [X31 + 0x30]
	0x03420104 STP X22, X21, [X31 + 0x40]
	0x03420108 STP X20, X19, [X31 + 0x50]
	0x0342010C ADRP X20, 0xFBD000
	0x03420110 LDRB W8, [X20 + 0x619]
	0x03420114 MOV X19, X0
	0x03420118 TBNZ X8, 0x0, 0x34201FC
	0x0342011C ADRP X0, 0xD0E000
	0x03420120 LDR X0, [X0 + 0xC18]
	0x03420124 BL 0x1C16CF4
	0x03420128 ADRP X0, 0xCD6000
	0x0342012C LDR X0, [X0 + 0x280]
	0x03420130 BL 0x1C16CF4
	0x03420134 ADRP X0, 0xCDC000
	0x03420138 LDR X0, [X0 + 0x8D8]
	0x0342013C BL 0x1C16CF4
	0x03420140 ADRP X0, 0xCD4000
	0x03420144 LDR X0, [X0 + 0x810]
	0x03420148 BL 0x1C16CF4
	0x0342014C ADRP X0, 0xCD4000
	0x03420150 LDR X0, [X0 + 0x6C0]
	0x03420154 BL 0x1C16CF4
	0x03420158 ADRP X0, 0xCD4000
	0x0342015C LDR X0, [X0 + 0x6D0]
	0x03420160 BL 0x1C16CF4
	0x03420164 ADRP X0, 0xD0E000
	0x03420168 LDR X0, [X0 + 0x7B8]
	0x0342016C BL 0x1C16CF4
	0x03420170 ADRP X0, 0xCD6000
	0x03420174 LDR X0, [X0 + 0x1E0]
	0x03420178 BL 0x1C16CF4
	0x0342017C ADRP X0, 0xCD6000
	0x03420180 LDR X0, [X0 + 0x1F0]
	0x03420184 BL 0x1C16CF4
	0x03420188 ADRP X0, 0xCD6000
	0x0342018C LDR X0, [X0 + 0x1F8]
	0x03420190 BL 0x1C16CF4
	0x03420194 ADRP X0, 0xCDC000
	0x03420198 LDR X0, [X0 + 0x3A0]
	0x0342019C BL 0x1C16CF4
	0x034201A0 ADRP X0, 0xCD5000
	0x034201A4 LDR X0, [X0 + 0xA28]
	0x034201A8 BL 0x1C16CF4
	0x034201AC ADRP X0, 0xD0E000
	0x034201B0 LDR X0, [X0 + 0x7D0]
	0x034201B4 BL 0x1C16CF4
	0x034201B8 ADRP X0, 0xD0E000
	0x034201BC LDR X0, [X0 + 0xC20]
	0x034201C0 BL 0x1C16CF4
	0x034201C4 ADRP X0, 0xD0E000
	0x034201C8 LDR X0, [X0 + 0xC28]
	0x034201CC BL 0x1C16CF4
	0x034201D0 ADRP X0, 0xD0E000
	0x034201D4 LDR X0, [X0 + 0x7D8]
	0x034201D8 BL 0x1C16CF4
	0x034201DC ADRP X0, 0xCD3000
	0x034201E0 LDR X0, [X0 + 0x988]
	0x034201E4 BL 0x1C16CF4
	0x034201E8 ADRP X0, 0xCFC000
	0x034201EC LDR X0, [X0 + 0x4C8]
	0x034201F0 BL 0x1C16CF4
	0x034201F4 MOVZ W8, 0x1
	0x034201F8 STRB W8, [X20 + 0x619]
	0x034201FC STR X31, [X31 + 0x8]
	0x03420200 ADRP X27, 0xCD6000
	0x03420204 LDR W8, [X19]
	0x03420208 LDR X27, [X27 + 0x280]
	0x0342020C CBZ W8, 0x3420400
	0x03420210 LDR X21, [X19 + 0x20]
	0x03420214 CBZ X21, 0x3420514
	0x03420218 ADRP X8, 0xCD5000
	0x0342021C LDR X8, [X8 + 0xA28]
	0x03420220 LDR X0, [X8]
	0x03420224 ADRP X8, 0xD0E000
	0x03420228 LDR X8, [X8 + 0xC28]
	0x0342022C LDR X24, [X19 + 0x28]
	0x03420230 LDR W9, [X0 + 0xE0]
	0x03420234 LDR X20, [X8]
	0x03420238 CBNZ W9, 0x3420240
	0x0342023C BL 0x1C16DFC
	0x03420240 MOV X0, X21
	0x03420244 MOV X1, X31
	0x03420248 BL 0x3624D20
	0x0342024C CBZ X20, 0x342055C
	0x03420250 ADRP X8, 0xD0E000
	0x03420254 LDR X8, [X8 + 0xC20]
	0x03420258 MOV X2, X0
	0x0342025C LDR X1, [X8]
	0x03420260 MOV X0, X20
	0x03420264 MOV X3, X31
	0x03420268 BL 0x32293BC
	0x0342026C CBZ X24, 0x3420560
	0x03420270 MOV X21, X0
	0x03420274 LDR X0, [X24 + 0x20]
	0x03420278 CBZ X0, 0x3420564
	0x0342027C ADRP X8, 0xCD3000
	0x03420280 LDR X8, [X8 + 0x988]
	0x03420284 LDR X20, [X8]
	0x03420288 MOV X1, X31
	0x0342028C BL 0x361B448
	0x03420290 ADRP X8, 0xCDC000
	0x03420294 LDR X8, [X8 + 0x8D8]
	0x03420298 MOV X22, X0
	0x0342029C LDR X0, [X8]
	0x034202A0 MOVZ W1, 0x1
	0x034202A4 BL 0x1C16D6C
	0x034202A8 MOV X1, X0
	0x034202AC CBZ X1, 0x3420568
	0x034202B0 LDR W8, [X1 + 0x18]
	0x034202B4 CBZ W8, 0x342056C
	0x034202B8 MOVZ W8, 0x2F
	0x034202BC STRH W8, [X1 + 0x20]
	0x034202C0 CBZ X22, 0x3420570
	0x034202C4 MOV X0, X22
	0x034202C8 MOV X2, X31
	0x034202CC BL 0x322BC58
	0x034202D0 MOV X1, X21
	0x034202D4 MOV X2, X31
	0x034202D8 BL 0x321B938
	0x034202DC ADRP X8, 0xCDC000
	0x034202E0 LDR X8, [X8 + 0x3A0]
	0x034202E4 MOV X22, X0
	0x034202E8 LDR X23, [X24 + 0x20]
	0x034202EC LDR X0, [X8]
	0x034202F0 BL 0x1C16F10
	0x034202F4 MOV X21, X0
	0x034202F8 MOV X1, X23
	0x034202FC MOV X2, X31
	0x03420300 BL 0x36281F8
	0x03420304 CBZ X21, 0x3420574
	0x03420308 MOV X0, X21
	0x0342030C MOV X1, X22
	0x03420310 MOV X2, X31
	0x03420314 BL 0x36288CC
	0x03420318 MOV X0, X21
	0x0342031C MOV X1, X20
	0x03420320 MOV X2, X31
	0x03420324 BL 0x3628980
	0x03420328 MOV X0, X21
	0x0342032C MOV X1, X31
	0x03420330 BL 0x3628A38
	0x03420334 ADRP X8, 0xCFC000
	0x03420338 ADRP X9, 0xCD4000
	0x0342033C LDR X8, [X8 + 0x4C8]
	0x03420340 LDR X9, [X9 + 0x6D0]
	0x03420344 MOV X20, X0
	0x03420348 LDR X21, [X8]
	0x0342034C LDR X0, [X9]
	0x03420350 BL 0x1C16F10
	0x03420354 ADRP X8, 0xCD4000
	0x03420358 LDR X8, [X8 + 0x6C0]
	0x0342035C MOV X22, X0
	0x03420360 LDR X1, [X8]
	0x03420364 BL 0x2AA4804
	0x03420368 ADRP X8, 0xD0E000
	0x0342036C LDR X8, [X8 + 0x7D8]
	0x03420370 LDR X1, [X19 + 0x30]
	0x03420374 LDR X0, [X8]
	0x03420378 MOV X2, X31
	0x0342037C BL 0x321B938
	0x03420380 CBZ X22, 0x3420578
	0x03420384 ADRP X8, 0xD0E000
	0x03420388 LDR X8, [X8 + 0x7D0]
	0x0342038C ADRP X9, 0xCD4000
	0x03420390 LDR X9, [X9 + 0x810]
	0x03420394 MOV X2, X0
	0x03420398 LDR X1, [X8]
	0x0342039C LDR X3, [X9]
	0x034203A0 MOV X0, X22
	0x034203A4 BL 0x2AA5098
	0x034203A8 LDR X23, [X24 + 0x10]
	0x034203AC CBZ X23, 0x342057C
	0x034203B0 ADRP X10, 0xD0E000
	0x034203B4 LDR X10, [X10 + 0x7B8]
	0x034203B8 LDR X8, [X23]
	0x034203BC LDR W25, [X24 + 0x18]
	0x034203C0 LDP X26, X24, [X19 + 0x38]
	0x034203C4 LDR X1, [X10]
	0x034203C8 LDRH W9, [X8 + 0x12E]
	0x034203CC CBZ X9, 0x34203F0
	0x034203D0 LDR X10, [X8 + 0xB0]
	0x034203D4 ADD X10, X10, 0x8
	0x034203D8 LDUR X11, [X10 - 0x8]
	0x034203DC CMP X11, X1
	0x034203E0 B.EQ 0x3420418
	0x034203E4 SUBS X9, X9, 0x1
	0x034203E8 ADD X10, X10, 0x10
	0x034203EC B.NE 0x34203D8
	0x034203F0 MOVZ W2, 0x3
	0x034203F4 MOV X0, X23
	0x034203F8 BL 0x1C5C788
	0x034203FC B 0x3420428
	0x03420400 LDR X8, [X19 + 0x48]
	0x03420404 MOVN W9, 0x0
	0x03420408 STR X8, [X31 + 0x8]
	0x0342040C STR X31, [X19 + 0x48]
	0x03420410 STR W9, [X19]
	0x03420414 B 0x3420484
	0x03420418 LDR W9, [X10]
	0x0342041C ADD W9, W9, 0x3
	0x03420420 ADD X8, X8, W9, 0x4, SXTW
	0x03420424 ADD X0, X8, 0x138
	0x03420428 LDP X8, X9, [X0]
	0x0342042C MOV X0, X23
	0x03420430 MOV X1, X21
	0x03420434 MOV X2, X20
	0x03420438 MOV X3, X22
	0x0342043C MOV X4, X31
	0x03420440 MOV W5, W25
	0x03420444 MOV X6, X26
	0x03420448 MOV X7, X24
	0x0342044C STR X9, [X31]
	0x03420450 BLR X8
	0x03420454 CBZ X0, 0x3420580
	0x03420458 ADRP X8, 0xCD6000
	0x0342045C LDR X8, [X8 + 0x1F8]
	0x03420460 LDR X1, [X8]
	0x03420464 BL 0x269F5D0
	0x03420468 ADRP X8, 0xCD6000
	0x0342046C LDR X8, [X8 + 0x1F0]
	0x03420470 STR X0, [X31 + 0x8]
	0x03420474 LDR X1, [X8]
	0x03420478 ADD X0, X31, 0x8
	0x0342047C BL 0x2677430
	0x03420480 TBZ X0, 0x0, 0x34204C0
	0x03420484 ADRP X8, 0xCD6000
	0x03420488 LDR X8, [X8 + 0x1E0]
	0x0342048C ADD X0, X31, 0x8
	0x03420490 LDR X1, [X8]
	0x03420494 BL 0x2677474
	0x03420498 MOVN W8, 0x1
	0x0342049C STR W8, [X19], #0x8
	0x034204A0 LDR X0, [X27]
	0x034204A4 LDR W8, [X0 + 0xE0]
	0x034204A8 CBNZ W8, 0x34204B0
	0x034204AC BL 0x1C16DFC
	0x034204B0 MOV X0, X19
	0x034204B4 MOV X1, X31
	0x034204B8 BL 0x32C4864
	0x034204BC B 0x34204F8
	0x034204C0 STR W31, [X19]
	0x034204C4 LDR X8, [X31 + 0x8]
	0x034204C8 STR X8, [X19 + 0x48]
	0x034204CC LDR X0, [X27]
	0x034204D0 LDR W8, [X0 + 0xE0]
	0x034204D4 CBNZ W8, 0x34204DC
	0x034204D8 BL 0x1C16DFC
	0x034204DC ADRP X8, 0xD0E000
	0x034204E0 LDR X8, [X8 + 0xC18]
	0x034204E4 ADD X0, X19, 0x8
	0x034204E8 LDR X3, [X8]
	0x034204EC ADD X1, X31, 0x8
	0x034204F0 MOV X2, X19
	0x034204F4 BL 0x2186104
	0x034204F8 LDP X20, X19, [X31 + 0x50]
	0x034204FC LDP X22, X21, [X31 + 0x40]
	0x03420500 LDP X24, X23, [X31 + 0x30]
	0x03420504 LDP X26, X25, [X31 + 0x20]
	0x03420508 LDP X30, X27, [X31 + 0x10]
	0x0342050C ADD X31, X31, 0x60
	0x03420510 RET
	0x03420514 ADRP X0, 0xCDB000
	0x03420518 LDR X0, [X0 + 0x578]
	0x0342051C BL 0x1C16D08
	0x03420520 BL 0x1C16F10
	0x03420524 MOV X20, X0
	0x03420528 ADRP X0, 0xD0E000
	0x0342052C LDR X0, [X0 + 0xC30]
	0x03420530 BL 0x1C16D08
	0x03420534 MOV X1, X0
	0x03420538 MOV X0, X20
	0x0342053C MOV X2, X31
	0x03420540 BL 0x3314A68
	0x03420544 ADRP X0, 0xD0E000
	0x03420548 LDR X0, [X0 + 0xC38]
	0x0342054C BL 0x1C16D08
	0x03420550 MOV X1, X0
	0x03420554 MOV X0, X20
	0x03420558 BL 0x1C16DEC
	0x0342055C BL 0x1C16F20
	0x03420560 BL 0x1C16F20
	0x03420564 BL 0x1C16F20
	0x03420568 BL 0x1C16F20
	0x0342056C BL 0x1C16F28
	0x03420570 BL 0x1C16F20
	0x03420574 BL 0x1C16F20
	0x03420578 BL 0x1C16F20
	0x0342057C BL 0x1C16F20
	0x03420580 BL 0x1C16F20
	0x03420584 B 0x34205E0
	0x03420588 B 0x34205E0
	0x0342058C B 0x34205E0
	0x03420590 B 0x34205E0
	0x03420594 B 0x34205E0
	0x03420598 B 0x34205E0
	0x0342059C B 0x34205E0
	0x034205A0 B 0x34205E0
	0x034205A4 B 0x34205E0
	0x034205A8 B 0x34205E0
	0x034205AC B 0x34205E0
	0x034205B0 B 0x34205E0
	0x034205B4 B 0x34205E0
	0x034205B8 B 0x34205E0
	0x034205BC B 0x34205E0
	0x034205C0 B 0x34205E0
	0x034205C4 B 0x34205E0
	0x034205C8 B 0x34205E0
	0x034205CC B 0x34205E0
	0x034205D0 B 0x34205E0
	0x034205D4 B 0x34205E0
	0x034205D8 B 0x34205E0
	0x034205DC B 0x34205E0
	0x034205E0 MOV X20, X0
	0x034205E4 CMP W1, 0x1
	0x034205E8 B.NE 0x3420678
	0x034205EC MOV X0, X20
	0x034205F0 BL 0x3EB1AD0
	0x034205F4 MOV X20, X0
	0x034205F8 ADRP X0, 0xCD3000
	0x034205FC LDR X0, [X0 + 0x7D0]
	0x03420600 BL 0x1C16D08
	0x03420604 LDR X8, [X20]
	0x03420608 LDR X1, [X8]
	0x0342060C BL 0x1C17270
	0x03420610 TBZ X0, 0x0, 0x3420650
	0x03420614 LDR X20, [X20]
	0x03420618 BL 0x3EB1AE0
	0x0342061C MOVN W8, 0x1
	0x03420620 STR W8, [X19], #0x8
	0x03420624 ADRP X0, 0xCD6000
	0x03420628 LDR X0, [X0 + 0x280]
	0x0342062C BL 0x1C16D08
	0x03420630 LDR W8, [X0 + 0xE0]
	0x03420634 CBNZ W8, 0x342063C
	0x03420638 BL 0x1C16DFC
	0x0342063C MOV X0, X19
	0x03420640 MOV X1, X20
	0x03420644 MOV X2, X31
	0x03420648 BL 0x32C4908
	0x0342064C B 0x34204F8
	0x03420650 MOVZ W0, 0x8
	0x03420654 BL 0x3EB1AF0
	0x03420658 LDR X8, [X20]
	0x0342065C STR X8, [X0]
	0x03420660 ADRP X1, 0xA94000
	0x03420664 ADD X1, X1, 0xE58
	0x03420668 MOV X2, X31
	0x0342066C BL 0x3EB1B00
	0x03420670 MOV X20, X0
	0x03420674 BL 0x3EB1AE0
	0x03420678 MOV X0, X20
	0x0342067C BL 0x1D2C690
	0x03420680 BL 0x1990590
	0x03420684 STR X30, [X31 - 0x30]!
	0x03420688 STP X22, X21, [X31 + 0x10]
	0x0342068C STP X20, X19, [X31 + 0x20]
	0x03420690 ADRP X21, 0xFBD000
	0x03420694 ADRP X22, 0xCD6000
	0x03420698 LDRB W8, [X21 + 0x61A]
	0x0342069C LDR X22, [X22 + 0x280]
	0x034206A0 MOV X19, X1
	0x034206A4 MOV X20, X0
	0x034206A8 TBNZ X8, 0x0, 0x34206C0
	0x034206AC ADRP X0, 0xCD6000
	0x034206B0 LDR X0, [X0 + 0x280]
	0x034206B4 BL 0x1C16CF4
	0x034206B8 MOVZ W8, 0x1
	0x034206BC STRB W8, [X21 + 0x61A]
	0x034206C0 LDR X0, [X22]
	0x034206C4 LDR W8, [X0 + 0xE0]
	0x034206C8 CBNZ W8, 0x34206D0
	0x034206CC BL 0x1C16DFC
	0x034206D0 ADD X0, X20, 0x8
	0x034206D4 MOV X1, X19
	0x034206D8 LDP X20, X19, [X31 + 0x20]
	0x034206DC LDP X22, X21, [X31 + 0x10]
	0x034206E0 MOV X2, X31
	0x034206E4 LDR X30, [X31], #0x30
	0x034206E8 B 0x32C477C
	0x034206EC SUB X31, X31, 0x80
	0x034206F0 STP X29, X30, [X31 + 0x20]
	0x034206F4 STP X28, X27, [X31 + 0x30]
	0x034206F8 STP X26, X25, [X31 + 0x40]
	0x034206FC STP X24, X23, [X31 + 0x50]
	0x03420700 STP X22, X21, [X31 + 0x60]
	0x03420704 STP X20, X19, [X31 + 0x70]
	0x03420708 ADRP X20, 0xFBD000
	0x0342070C LDRB W8, [X20 + 0x61B]
	0x03420710 MOV X19, X0
	0x03420714 TBNZ X8, 0x0, 0x3420840
	0x03420718 ADRP X0, 0xD0E000
	0x0342071C LDR X0, [X0 + 0xC40]
	0x03420720 BL 0x1C16CF4
	0x03420724 ADRP X0, 0xCD6000
	0x03420728 LDR X0, [X0 + 0x280]
	0x0342072C BL 0x1C16CF4
	0x03420730 ADRP X0, 0xCDC000
	0x03420734 LDR X0, [X0 + 0x8D8]
	0x03420738 BL 0x1C16CF4
	0x0342073C ADRP X0, 0xCD4000
	0x03420740 LDR X0, [X0 + 0x810]
	0x03420744 BL 0x1C16CF4
	0x03420748 ADRP X0, 0xCD4000
	0x0342074C LDR X0, [X0 + 0x6C0]
	0x03420750 BL 0x1C16CF4
	0x03420754 ADRP X0, 0xCD4000
	0x03420758 LDR X0, [X0 + 0x6D0]
	0x0342075C BL 0x1C16CF4
	0x03420760 ADRP X0, 0xCD3000
	0x03420764 LDR X0, [X0 + 0xE00]
	0x03420768 BL 0x1C16CF4
	0x0342076C ADRP X0, 0xCD3000
	0x03420770 LDR X0, [X0 + 0xF70]
	0x03420774 BL 0x1C16CF4
	0x03420778 ADRP X0, 0xCD3000
	0x0342077C LDR X0, [X0 + 0xF78]
	0x03420780 BL 0x1C16CF4
	0x03420784 ADRP X0, 0xCD3000
	0x03420788 LDR X0, [X0 + 0xE18]
	0x0342078C BL 0x1C16CF4
	0x03420790 ADRP X0, 0xD0E000
	0x03420794 LDR X0, [X0 + 0x7B8]
	0x03420798 BL 0x1C16CF4
	0x0342079C ADRP X0, 0xCD3000
	0x034207A0 LDR X0, [X0 + 0xAC8]
	0x034207A4 BL 0x1C16CF4
	0x034207A8 ADRP X0, 0xCD6000
	0x034207AC LDR X0, [X0 + 0x1E0]
	0x034207B0 BL 0x1C16CF4
	0x034207B4 ADRP X0, 0xCD6000
	0x034207B8 LDR X0, [X0 + 0x1F0]
	0x034207BC BL 0x1C16CF4
	0x034207C0 ADRP X0, 0xCD6000
	0x034207C4 LDR X0, [X0 + 0x1F8]
	0x034207C8 BL 0x1C16CF4
	0x034207CC ADRP X0, 0xCDC000
	0x034207D0 LDR X0, [X0 + 0x3A0]
	0x034207D4 BL 0x1C16CF4
	0x034207D8 ADRP X0, 0xCD5000
	0x034207DC LDR X0, [X0 + 0xA28]
	0x034207E0 BL 0x1C16CF4
	0x034207E4 ADRP X0, 0xD0E000
	0x034207E8 LDR X0, [X0 + 0x7C0]
	0x034207EC BL 0x1C16CF4
	0x034207F0 ADRP X0, 0xCDC000
	0x034207F4 LDR X0, [X0 + 0x720]
	0x034207F8 BL 0x1C16CF4
	0x034207FC ADRP X0, 0xD0E000
	0x03420800 LDR X0, [X0 + 0x7D0]
	0x03420804 BL 0x1C16CF4
	0x03420808 ADRP X0, 0xD0E000
	0x0342080C LDR X0, [X0 + 0xC48]
	0x03420810 BL 0x1C16CF4
	0x03420814 ADRP X0, 0xD0E000
	0x03420818 LDR X0, [X0 + 0x7D8]
	0x0342081C BL 0x1C16CF4
	0x03420820 ADRP X0, 0xCD3000
	0x03420824 LDR X0, [X0 + 0x988]
	0x03420828 BL 0x1C16CF4
	0x0342082C ADRP X0, 0xCFC000
	0x03420830 LDR X0, [X0 + 0x4C8]
	0x03420834 BL 0x1C16CF4
	0x03420838 MOVZ W8, 0x1
	0x0342083C STRB W8, [X20 + 0x61B]
	0x03420840 STR X31, [X31 + 0x18]
	0x03420844 ADRP X27, 0xCD6000
	0x03420848 LDR W24, [X19]
	0x0342084C LDR X27, [X27 + 0x280]
	0x03420850 CBZ W24, 0x34208D8
	0x03420854 ADRP X8, 0xD0E000
	0x03420858 ADRP X9, 0xCD3000
	0x0342085C LDR X8, [X8 + 0xC48]
	0x03420860 LDR X9, [X9 + 0x988]
	0x03420864 LDP X21, X20, [X19 + 0x20]
	0x03420868 LDR X23, [X8]
	0x0342086C LDR X26, [X9]
	0x03420870 CBNZ X21, 0x3420890
	0x03420874 ADRP X8, 0xCD3000
	0x03420878 LDR X8, [X8 + 0xAC8]
	0x0342087C LDR X0, [X8]
	0x03420880 MOV W1, W31
	0x03420884 BL 0x1C16D6C
	0x03420888 MOV X21, X0
	0x0342088C CBZ X0, 0x3420D74
	0x03420890 ADRP X10, 0xCD3000
	0x03420894 LDR X8, [X21]
	0x03420898 LDR X10, [X10 + 0xF70]
	0x0342089C LDRH W9, [X8 + 0x12E]
	0x034208A0 LDR X1, [X10]
	0x034208A4 CBZ X9, 0x34208C8
	0x034208A8 LDR X10, [X8 + 0xB0]
	0x034208AC ADD X10, X10, 0x8
	0x034208B0 LDUR X11, [X10 - 0x8]
	0x034208B4 CMP X11, X1
	0x034208B8 B.EQ 0x34208F0
	0x034208BC SUBS X9, X9, 0x1
	0x034208C0 ADD X10, X10, 0x10
	0x034208C4 B.NE 0x34208B0
	0x034208C8 MOV X0, X21
	0x034208CC MOV W2, W31
	0x034208D0 BL 0x1C5C788
	0x034208D4 B 0x34208FC
	0x034208D8 LDR X8, [X19 + 0x48]
	0x034208DC MOVN W9, 0x0
	0x034208E0 STR X8, [X31 + 0x18]
	0x034208E4 STR X31, [X19 + 0x48]
	0x034208E8 STR W9, [X19]
	0x034208EC B 0x3420CB0
	0x034208F0 LDRSW X9, [X10]
	0x034208F4 ADD X8, X8, X9, 0x4, LSL
	0x034208F8 ADD X0, X8, 0x138
	0x034208FC LDP X8, X1, [X0]
	0x03420900 MOV X0, X21
	0x03420904 BLR X8
	0x03420908 STP X23, X20, [X31 + 0x8]
	0x0342090C ADRP X28, 0xCD3000
	0x03420910 ADRP X29, 0xCD3000
	0x03420914 ADRP X27, 0xCD5000
	0x03420918 ADRP X20, 0xD0E000
	0x0342091C ADRP X25, 0xCDC000
	0x03420920 LDR X28, [X28 + 0xE18]
	0x03420924 LDR X29, [X29 + 0xF78]
	0x03420928 LDR X27, [X27 + 0xA28]
	0x0342092C LDR X20, [X20 + 0x7C0]
	0x03420930 LDR X25, [X25 + 0x720]
	0x03420934 MOV X22, X0
	0x03420938 MOV X0, X26
	0x0342093C CBZ X22, 0x3420D44
	0x03420940 LDR X8, [X22]
	0x03420944 LDR X1, [X28]
	0x03420948 MOV X21, X0
	0x0342094C LDRH W9, [X8 + 0x12E]
	0x03420950 CBZ X9, 0x3420974
	0x03420954 LDR X10, [X8 + 0xB0]
	0x03420958 ADD X10, X10, 0x8
	0x0342095C LDUR X11, [X10 - 0x8]
	0x03420960 CMP X11, X1
	0x03420964 B.EQ 0x3420984
	0x03420968 SUBS X9, X9, 0x1
	0x0342096C ADD X10, X10, 0x10
	0x03420970 B.NE 0x342095C
	0x03420974 MOV X0, X22
	0x03420978 MOV W2, W31
	0x0342097C BL 0x1C5C788
	0x03420980 B 0x3420990
	0x03420984 LDRSW X9, [X10]
	0x03420988 ADD X8, X8, X9, 0x4, LSL
	0x0342098C ADD X0, X8, 0x138
	0x03420990 LDP X8, X1, [X0]
	0x03420994 MOV X0, X22
	0x03420998 BLR X8
	0x0342099C TBZ X0, 0x0, 0x3420A34
	0x034209A0 LDR X8, [X22]
	0x034209A4 LDR X1, [X29]
	0x034209A8 LDRH W9, [X8 + 0x12E]
	0x034209AC CBZ X9, 0x34209D0
	0x034209B0 LDR X10, [X8 + 0xB0]
	0x034209B4 ADD X10, X10, 0x8
	0x034209B8 LDUR X11, [X10 - 0x8]
	0x034209BC CMP X11, X1
	0x034209C0 B.EQ 0x34209E0
	0x034209C4 SUBS X9, X9, 0x1
	0x034209C8 ADD X10, X10, 0x10
	0x034209CC B.NE 0x34209B8
	0x034209D0 MOV X0, X22
	0x034209D4 MOV W2, W31
	0x034209D8 BL 0x1C5C788
	0x034209DC B 0x34209EC
	0x034209E0 LDRSW X9, [X10]
	0x034209E4 ADD X8, X8, X9, 0x4, LSL
	0x034209E8 ADD X0, X8, 0x138
	0x034209EC LDP X8, X1, [X0]
	0x034209F0 MOV X0, X22
	0x034209F4 BLR X8
	0x034209F8 MOV X23, X0
	0x034209FC LDR X0, [X27]
	0x03420A00 LDR W8, [X0 + 0xE0]
	0x03420A04 CBNZ W8, 0x3420A0C
	0x03420A08 BL 0x1C16DFC
	0x03420A0C MOV X0, X23
	0x03420A10 MOV X1, X31
	0x03420A14 BL 0x3624D20
	0x03420A18 LDR X1, [X20]
	0x03420A1C LDR X3, [X25]
	0x03420A20 MOV X2, X0
	0x03420A24 MOV X0, X21
	0x03420A28 MOV X4, X31
	0x03420A2C BL 0x32277C4
	0x03420A30 B 0x342093C
	0x03420A34 MOV X23, X31
	0x03420A38 MOVZ W20, 0x6
	0x03420A3C ADRP X27, 0xCD6000
	0x03420A40 LDR X27, [X27 + 0x280]
	0x03420A44 LDR X25, [X31 + 0x10]
	0x03420A48 TBZ X24, 0x1F, 0x3420AB0
	0x03420A4C CBZ X22, 0x3420AB0
	0x03420A50 ADRP X10, 0xCD3000
	0x03420A54 LDR X8, [X22]
	0x03420A58 LDR X10, [X10 + 0xE00]
	0x03420A5C LDRH W9, [X8 + 0x12E]
	0x03420A60 LDR X1, [X10]
	0x03420A64 CBZ X9, 0x3420A88
	0x03420A68 LDR X10, [X8 + 0xB0]
	0x03420A6C ADD X10, X10, 0x8
	0x03420A70 LDUR X11, [X10 - 0x8]
	0x03420A74 CMP X11, X1
	0x03420A78 B.EQ 0x3420A98
	0x03420A7C SUBS X9, X9, 0x1
	0x03420A80 ADD X10, X10, 0x10
	0x03420A84 B.NE 0x3420A70
	0x03420A88 MOV X0, X22
	0x03420A8C MOV W2, W31
	0x03420A90 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xFBF000
	015 Move W8, [X20+1557]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {98}
	021 Move X0, 0xD10000
	022 Move X0, [X0+3064]
	023 Call 0x1C17CF4
	024 Move X0, 0xCD8000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move X0, 0xCDE000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0xCD6000
	031 Move X0, [X0+2064]
	032 Call 0x1C17CF4
	033 Move X0, 0xCD6000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCD6000
	037 Move X0, [X0+1744]
	038 Call 0x1C17CF4
	039 Move X0, 0xCD5000
	040 Move X0, [X0+3584]
	041 Call 0x1C17CF4
	042 Move X0, 0xCD5000
	043 Move X0, [X0+3952]
	044 Call 0x1C17CF4
	045 Move X0, 0xCD5000
	046 Move X0, [X0+3960]
	047 Call 0x1C17CF4
	048 Move X0, 0xCD5000
	049 Move X0, [X0+3608]
	050 Call 0x1C17CF4
	051 Move X0, 0xD10000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move X0, 0xCD5000
	055 Move X0, [X0+2760]
	056 Call 0x1C17CF4
	057 Move X0, 0xCD8000
	058 Move X0, [X0+480]
	059 Call 0x1C17CF4
	060 Move X0, 0xCD8000
	061 Move X0, [X0+496]
	062 Call 0x1C17CF4
	063 Move X0, 0xCD8000
	064 Move X0, [X0+504]
	065 Call 0x1C17CF4
	066 Move X0, 0xCDD000
	067 Move X0, [X0+928]
	068 Call 0x1C17CF4
	069 Move X0, 0xCD6000
	070 Move X0, [X0+2600]
	071 Call 0x1C17CF4
	072 Move X0, 0xD0F000
	073 Move X0, [X0+1984]
	074 Call 0x1C17CF4
	075 Move X0, 0xD0F000
	076 Move X0, [X0+1992]
	077 Call 0x1C17CF4
	078 Move X0, 0xCDD000
	079 Move X0, [X0+1824]
	080 Call 0x1C17CF4
	081 Move X0, 0xD0F000
	082 Move X0, [X0+2000]
	083 Call 0x1C17CF4
	084 Move X0, 0xD0F000
	085 Move X0, [X0+2008]
	086 Call 0x1C17CF4
	087 Move X0, 0xD0F000
	088 Move X0, [X0+2016]
	089 Call 0x1C17CF4
	090 Move X0, 0xCD4000
	091 Move X0, [X0+2440]
	092 Call 0x1C17CF4
	093 Move X0, 0xCFD000
	094 Move X0, [X0+1224]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X20+1557], W8
	098 Move [X31+40], X31
	099 Move X27, 0xCD7000
	100 Move W26, [X19]
	101 Move X27, [X27+640]
	102 Compare W26, 0
	103 JumpIfEqual {138}
	104 Move X8, 0xD0F000
	105 Move X9, 0xCD4000
	106 Move X8, [X8+2016]
	107 Move X9, [X9+2440]
	108 Move X20, [X19+48]
	109 Move X21, [X19+32]
	110 Move X22, [X8]
	111 Move X24, [X9]
	112 Compare X21, 0
	113 JumpIfNotEqual {122}
	114 Move X8, 0xCD4000
	115 Move X8, [X8+2760]
	116 Move X0, [X8]
	117 Move W1, W31
	118 Call 0x1C17D6C
	119 Move X21, X0
	120 Compare X0, 0
	121 JumpIfEqual {604}
	122 Move X10, 0xCD4000
	123 Move X8, [X21]
	124 Move X10, [X10+3952]
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Move X1, [X10]
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X21
	136 Move W2, W31
	137 Call 0x1C5D788
	138 Move X8, [X19+80]
	139 Move TEMP, 0
	140 Not TEMP
	141 Move W9, TEMP
	142 Move [X31+40], X8
	143 Move [X19+80], X31
	144 Move [X19], W9
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X21
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move [X31+24], X22
	153 Move [X31+32], X20
	154 Move X28, 0xCD4000
	155 Move X29, 0xCD4000
	156 Move X27, 0xCD6000
	157 Move X25, 0xD0F000
	158 Move X20, 0xCDD000
	159 Move X28, [X28+3608]
	160 Move X29, [X29+3960]
	161 Move X27, [X27+2600]
	162 Move X25, [X25+1984]
	163 Move X20, [X20+1824]
	164 Move X23, X0
	165 Move X0, X24
	166 Compare X23, 0
	167 JumpIfEqual {589}
	168 Move X8, [X23]
	169 Move X1, [X28]
	170 Move X21, X0
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X23
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X23
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {230}
	194 Move X8, [X23]
	195 Move X1, [X29]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X23
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X0, X23
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X22, X0
	216 Move X0, [X27]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X22
	222 Move X1, X31
	223 Call Uri.EscapeDataString, X0
	224 Move X1, [X25]
	225 Move X3, [X20]
	226 Move X2, X0
	227 Move X0, X21
	228 Move X4, X31
	229 Call String.Concat, X0, X1, X2, X3
	230 Move X24, X31
	231 Move W22, 6
	232 Move TEMP, X26
	233 And TEMP, TEMP, -2147483648
	234 Compare TEMP, -2147483648
	235 JumpIfNotEqual {261}
	236 Compare X23, 0
	237 JumpIfEqual {261}
	238 Move X10, 0xCD4000
	239 Move X8, [X23]
	240 Move X10, [X10+3584]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X1, [X10]
	243 Compare X9, 0
	244 JumpIfEqual {251}
	245 Move X10, [X8+176]
	246 Add X10, X10, 8
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract X9, X9, 1
	250 Add X10, X10, 16
	251 Move X0, X23
	252 Move W2, W31
	253 Call 0x1C5D788
	254 NotImplemented "Instruction LDRSW not yet implemented."
	255 Add X8, X8, X9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X1, [X0+8]
	259 Move X0, X23
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Compare X24, 0
	262 JumpIfNotEqual {591}
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Compare W22, 0
	265 JumpIfNotEqual {575}
	266 Move X22, [X19+40]
	267 Compare X22, 0
	268 JumpIfNotEqual {277}
	269 Move X8, 0xCD4000
	270 Move X8, [X8+2760]
	271 Move X0, [X8]
	272 Move W1, W31
	273 Call 0x1C17D6C
	274 Move X22, X0
	275 Compare X0, 0
	276 JumpIfEqual {605}
	277 Move X8, [X22]
	278 Move X10, 0xCD4000
	279 NotImplemented "Instruction LDRH not yet implemented."
	280 Move X10, [X10+3952]
	281 Move X1, [X10]
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move X0, X22
	291 Move W2, W31
	292 Call 0x1C5D788
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Add X8, X8, X9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X1, [X0+8]
	298 Move X0, X22
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Move X25, 0xD0F000
	301 Move X25, [X25+1992]
	302 Move X24, X0
	303 Move X0, X21
	304 Compare X24, 0
	305 JumpIfEqual {590}
	306 Move X8, [X24]
	307 Move X1, [X28]
	308 Move X23, X0
	309 NotImplemented "Instruction LDRH not yet implemented."
	310 Compare X9, 0
	311 JumpIfEqual {318}
	312 Move X10, [X8+176]
	313 Add X10, X10, 8
	314 NotImplemented "Instruction LDUR not yet implemented."
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Subtract X9, X9, 1
	317 Add X10, X10, 16
	318 Move X0, X24
	319 Move W2, W31
	320 Call 0x1C5D788
	321 NotImplemented "Instruction LDRSW not yet implemented."
	322 Add X8, X8, X9
	323 Add X0, X8, 312
	324 Move X8, [X0]
	325 Move X1, [X0+8]
	326 Move X0, X24
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {368}
	332 Move X8, [X24]
	333 Move X1, [X29]
	334 NotImplemented "Instruction LDRH not yet implemented."
	335 Compare X9, 0
	336 JumpIfEqual {343}
	337 Move X10, [X8+176]
	338 Add X10, X10, 8
	339 NotImplemented "Instruction LDUR not yet implemented."
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Subtract X9, X9, 1
	342 Add X10, X10, 16
	343 Move X0, X24
	344 Move W2, W31
	345 Call 0x1C5D788
	346 NotImplemented "Instruction LDRSW not yet implemented."
	347 Add X8, X8, X9
	348 Add X0, X8, 312
	349 Move X8, [X0]
	350 Move X1, [X0+8]
	351 Move X0, X24
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move X22, X0
	354 Move X0, [X27]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Move X0, X22
	360 Move X1, X31
	361 Call Uri.EscapeDataString, X0
	362 Move X1, [X25]
	363 Move X3, [X20]
	364 Move X2, X0
	365 Move X0, X23
	366 Move X4, X31
	367 Call String.Concat, X0, X1, X2, X3
	368 Move X21, X31
	369 Move W20, 10
	370 Move TEMP, X26
	371 And TEMP, TEMP, -2147483648
	372 Compare TEMP, -2147483648
	373 JumpIfNotEqual {399}
	374 Compare X24, 0
	375 JumpIfEqual {399}
	376 Move X10, 0xCD4000
	377 Move X8, [X24]
	378 Move X10, [X10+3584]
	379 NotImplemented "Instruction LDRH not yet implemented."
	380 Move X1, [X10]
	381 Compare X9, 0
	382 JumpIfEqual {389}
	383 Move X10, [X8+176]
	384 Add X10, X10, 8
	385 NotImplemented "Instruction LDUR not yet implemented."
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Subtract X9, X9, 1
	388 Add X10, X10, 16
	389 Move X0, X24
	390 Move W2, W31
	391 Call 0x1C5D788
	392 NotImplemented "Instruction LDRSW not yet implemented."
	393 Add X8, X8, X9
	394 Add X0, X8, 312
	395 Move X8, [X0]
	396 Move X1, [X0+8]
	397 Move X0, X24
	398 NotImplemented "Instruction BLR not yet implemented."
	399 Compare X21, 0
	400 JumpIfNotEqual {593}
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Compare W20, 0
	403 JumpIfNotEqual {575}
	404 Move X25, [X31+32]
	405 Compare X25, 0
	406 JumpIfEqual {595}
	407 Move X27, 0xCD7000
	408 Move X0, [X25+32]
	409 Move X27, [X27+640]
	410 Compare X0, 0
	411 JumpIfEqual {596}
	412 Move X1, X31
	413 Call Uri.get_AbsolutePath, X0
	414 Move X8, 0xCDD000
	415 Move X8, [X8+2264]
	416 Move X21, X0
	417 Move X0, [X8]
	418 Move W1, 1
	419 Call 0x1C17D6C
	420 Move X1, X0
	421 Compare X1, 0
	422 JumpIfEqual {597}
	423 Move W8, [X1+24]
	424 Compare W8, 0
	425 JumpIfEqual {598}
	426 Move W8, 47
	427 NotImplemented "Instruction STRH not yet implemented."
	428 Compare X21, 0
	429 JumpIfEqual {599}
	430 Move X0, X21
	431 Move X2, X31
	432 Call String.TrimEnd, X0, X1
	433 Move X1, [X31+24]
	434 Move X2, X31
	435 Call String.Concat, X0, X1
	436 Move X8, 0xCDD000
	437 Move X22, [X25+32]
	438 Move X8, [X8+928]
	439 Move X21, X0
	440 Move X0, [X8]
	441 Call 0x1C17F10
	442 Move X20, X0
	443 Move X1, X22
	444 Move X2, X31
	445 Call UriBuilder..ctor, X0, X1
	446 Compare X20, 0
	447 JumpIfEqual {600}
	448 Move X0, X20
	449 Move X1, X21
	450 Move X2, X31
	451 Call UriBuilder.set_Path, X0, X1
	452 Move X0, X20
	453 Move X1, X23
	454 Move X2, X31
	455 Call UriBuilder.set_Query, X0, X1
	456 Move X0, X20
	457 Move X1, X31
	458 Call UriBuilder.get_Uri, X0
	459 Move X8, 0xCFD000
	460 Move X9, 0xCD5000
	461 Move X8, [X8+1224]
	462 Move X9, [X9+1744]
	463 Move X20, X0
	464 Move X21, [X8]
	465 Move X0, [X9]
	466 Call 0x1C17F10
	467 Move X8, 0xCD5000
	468 Move X8, [X8+1728]
	469 Move X22, X0
	470 Move X1, [X8]
	471 Call Dictionary`2<Object, Object>..ctor, X0
	472 Move X8, 0xD0F000
	473 Move X1, [X19+56]
	474 Move X8, [X8+2008]
	475 Move X0, [X8]
	476 Move X2, X31
	477 Call String.Concat, X0, X1
	478 Compare X22, 0
	479 JumpIfEqual {601}
	480 Move X8, 0xD0F000
	481 Move X8, [X8+2000]
	482 Move X9, 0xCD5000
	483 Move X9, [X9+2064]
	484 Move X2, X0
	485 Move X1, [X8]
	486 Move X3, [X9]
	487 Move X0, X22
	488 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	489 Move X24, [X25+16]
	490 Compare X24, 0
	491 JumpIfEqual {602}
	492 Move X10, 0xD0F000
	493 Move W23, [X25+24]
	494 Move X8, [X24]
	495 Move X26, [X19+64]
	496 Move X25, [X19+72]
	497 Move X10, [X10+1976]
	498 NotImplemented "Instruction LDRH not yet implemented."
	499 Move X1, [X10]
	500 Compare X9, 0
	501 JumpIfEqual {508}
	502 Move X10, [X8+176]
	503 Add X10, X10, 8
	504 NotImplemented "Instruction LDUR not yet implemented."
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Subtract X9, X9, 1
	507 Add X10, X10, 16
	508 Move W2, 3
	509 Move X0, X24
	510 Call 0x1C5D788
	511 Move W9, [X10]
	512 Add W9, W9, 3
	513 Add X8, X8, W9
	514 Add X0, X8, 312
	515 Move X8, [X0]
	516 Move X9, [X0+8]
	517 Move X0, X24
	518 Move X1, X21
	519 Move X2, X20
	520 Move X3, X22
	521 Move X4, X31
	522 Move W5, W23
	523 Move X6, X26
	524 Move X7, X25
	525 Move [X31], X9
	526 NotImplemented "Instruction BLR not yet implemented."
	527 Compare X0, 0
	528 JumpIfEqual {603}
	529 Move X8, 0xCD7000
	530 Move X8, [X8+504]
	531 Move X1, [X8]
	532 Call Task`1<Object>.GetAwaiter, X0
	533 Move X8, 0xCD7000
	534 Move X8, [X8+496]
	535 Move [X31+40], X0
	536 Move X1, [X8]
	537 Add X0, X31, 40
	538 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	539 Move TEMP, X0
	540 And TEMP, TEMP, 1
	541 Compare TEMP, 1
	542 JumpIfNotEqual {560}
	543 Move X8, 0xCD7000
	544 Move X8, [X8+480]
	545 Add X0, X31, 40
	546 Move X1, [X8]
	547 Call TaskAwaiter`1<Object>.GetResult, X0
	548 Move TEMP, 1
	549 Not TEMP
	550 Move W8, TEMP
	551 Move [X19+8], W8
	552 Move X0, [X27]
	553 Move W8, [X0+224]
	554 Compare W8, 0
	555 JumpIfNotEqual {557}
	556 Call 0x1C17DFC
	557 Move X0, X19
	558 Move X1, X31
	559 Call AsyncTaskMethodBuilder.SetResult, X0
	560 Move [X19], W31
	561 Move X8, [X31+40]
	562 Move [X19+80], X8
	563 Move X0, [X27]
	564 Move W8, [X0+224]
	565 Compare W8, 0
	566 JumpIfNotEqual {568}
	567 Call 0x1C17DFC
	568 Move X8, 0xD0F000
	569 Move X8, [X8+3064]
	570 Add X0, X19, 8
	571 Move X3, [X8]
	572 Add X1, X31, 40
	573 Move X2, X19
	574 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	575 Move X20, [X31+128]
	576 Move X19, [X31+136]
	577 Move X22, [X31+112]
	578 Move X21, [X31+120]
	579 Move X24, [X31+96]
	580 Move X23, [X31+104]
	581 Move X26, [X31+80]
	582 Move X25, [X31+88]
	583 Move X28, [X31+64]
	584 Move X27, [X31+72]
	585 Move X29, [X31+48]
	586 Move X30, [X31+56]
	587 Add X31, X31, 144
	588 Return 
	589 Call 0x1C17F20
	590 Call 0x1C17F20
	591 Move X0, X24
	592 Call 0x1C17F18
	593 Move X0, X21
	594 Call 0x1C17F18
	595 Call 0x1C17F20
	596 Call 0x1C17F20
	597 Call 0x1C17F20
	598 Call 0x1C17F28
	599 Call 0x1C17F20
	600 Call 0x1C17F20
	601 Call 0x1C17F20
	602 Call 0x1C17F20
	603 Call 0x1C17F20
	604 Call 0x1C17F20
	605 Call 0x1C17F20
	606 Move X22, X0
	607 Move [X31+16], X1
	608 Move X22, X0
	609 Move X23, X21
	610 Move X22, X0
	611 Move X21, X24
	612 Move X22, X0
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move [X31+16], X1
	615 Move X0, X22
	616 Call 0x3EB2AD0
	617 Move X21, [X0]
	618 Call 0x3EB2AE0
	619 Move W20, W31
	620 Move TEMP, X26
	621 And TEMP, TEMP, -2147483648
	622 Compare TEMP, -2147483648
	623 JumpIfEqual {374}
	624 Move X21, X31
	625 Move TEMP, X26
	626 And TEMP, TEMP, -2147483648
	627 Compare TEMP, -2147483648
	628 JumpIfNotEqual {654}
	629 Compare X24, 0
	630 JumpIfEqual {654}
	631 Move X10, 0xCD4000
	632 Move X8, [X24]
	633 Move X10, [X10+3584]
	634 NotImplemented "Instruction LDRH not yet implemented."
	635 Move X1, [X10]
	636 Compare X9, 0
	637 JumpIfEqual {644}
	638 Move X10, [X8+176]
	639 Add X10, X10, 8
	640 NotImplemented "Instruction LDUR not yet implemented."
	641 NotImplemented "Instruction CMP not yet implemented."
	642 Subtract X9, X9, 1
	643 Add X10, X10, 16
	644 Move X0, X24
	645 Move W2, W31
	646 Call 0x1C5D788
	647 NotImplemented "Instruction LDRSW not yet implemented."
	648 Add X8, X8, X9
	649 Add X0, X8, 312
	650 Move X8, [X0]
	651 Move X1, [X0+8]
	652 Move X0, X24
	653 NotImplemented "Instruction BLR not yet implemented."
	654 Compare X21, 0
	655 JumpIfEqual {708}
	656 Move X0, X21
	657 Call 0x1C17F18
	658 Move X22, X0
	659 Move [X31+16], X1
	660 Move TEMP, X26
	661 And TEMP, TEMP, -2147483648
	662 Compare TEMP, -2147483648
	663 JumpIfEqual {629}
	664 Move X22, X0
	665 NotImplemented "Instruction CMP not yet implemented."
	666 Move X0, X22
	667 Call 0x3EB2AD0
	668 Move X24, [X0]
	669 Call 0x3EB2AE0
	670 Move W22, W31
	671 Move TEMP, X26
	672 And TEMP, TEMP, -2147483648
	673 Compare TEMP, -2147483648
	674 JumpIfEqual {236}
	675 Move [X31+16], X1
	676 Move X24, X31
	677 Move TEMP, X26
	678 And TEMP, TEMP, -2147483648
	679 Compare TEMP, -2147483648
	680 JumpIfNotEqual {706}
	681 Compare X23, 0
	682 JumpIfEqual {706}
	683 Move X10, 0xCD4000
	684 Move X8, [X23]
	685 Move X10, [X10+3584]
	686 NotImplemented "Instruction LDRH not yet implemented."
	687 Move X1, [X10]
	688 Compare X9, 0
	689 JumpIfEqual {696}
	690 Move X10, [X8+176]
	691 Add X10, X10, 8
	692 NotImplemented "Instruction LDUR not yet implemented."
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Subtract X9, X9, 1
	695 Add X10, X10, 16
	696 Move X0, X23
	697 Move W2, W31
	698 Call 0x1C5D788
	699 NotImplemented "Instruction LDRSW not yet implemented."
	700 Add X8, X8, X9
	701 Add X0, X8, 312
	702 Move X8, [X0]
	703 Move X1, [X0+8]
	704 Move X0, X23
	705 NotImplemented "Instruction BLR not yet implemented."
	706 Compare X24, 0
	707 JumpIfNotEqual {748}
	708 Move X8, [X31+16]
	709 NotImplemented "Instruction CMP not yet implemented."
	710 Move X0, X22
	711 Call 0x3EB2AD0
	712 Move X20, X0
	713 Move X0, 0xCD4000
	714 Move X0, [X0+2000]
	715 Call 0x1C17D08
	716 Move X8, [X20]
	717 Move X1, [X8]
	718 Call 0x1C18270
	719 Move TEMP, X0
	720 And TEMP, TEMP, 1
	721 Compare TEMP, 1
	722 JumpIfNotEqual {740}
	723 Move X20, [X20]
	724 Call 0x3EB2AE0
	725 Move TEMP, 1
	726 Not TEMP
	727 Move W8, TEMP
	728 Move [X19+8], W8
	729 Move X0, 0xCD7000
	730 Move X0, [X0+640]
	731 Call 0x1C17D08
	732 Move W8, [X0+224]
	733 Compare W8, 0
	734 JumpIfNotEqual {736}
	735 Call 0x1C17DFC
	736 Move X0, X19
	737 Move X1, X20
	738 Move X2, X31
	739 Call AsyncTaskMethodBuilder.SetException, X0, X1
	740 Move W0, 8
	741 Call 0x3EB2AF0
	742 Move X8, [X20]
	743 Move [X0], X8
	744 Move X1, 0xA95000
	745 Add X1, X1, 3672
	746 Move X2, X31
	747 Call 0x3EB2B00
	748 Move X0, X24
	749 Call 0x1C17F18
	750 Move X22, X0
	751 Move [X31+16], X1
	752 Move TEMP, X26
	753 And TEMP, TEMP, -2147483648
	754 Compare TEMP, -2147483648
	755 JumpIfEqual {681}
	756 Move X22, X0
	757 Call 0x3EB2AE0
	758 Move X0, X22
	759 Call 0x1D2D690
	760 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03420A94 B 0x3420AA4
	0x03420A98 LDRSW X9, [X10]
	0x03420A9C ADD X8, X8, X9, 0x4, LSL
	0x03420AA0 ADD X0, X8, 0x138
	0x03420AA4 LDP X8, X1, [X0]
	0x03420AA8 MOV X0, X22
	0x03420AAC BLR X8
	0x03420AB0 CBNZ X23, 0x3420D48
	0x03420AB4 CMP W20, 0x6
	0x03420AB8 B.EQ 0x3420AC0
	0x03420ABC CBNZ W20, 0x3420D24
	0x03420AC0 CBZ X25, 0x3420D50
	0x03420AC4 LDR X0, [X25 + 0x20]
	0x03420AC8 CBZ X0, 0x3420D54
	0x03420ACC MOV X1, X31
	0x03420AD0 BL 0x361B448
	0x03420AD4 ADRP X8, 0xCDC000
	0x03420AD8 LDR X8, [X8 + 0x8D8]
	0x03420ADC MOV X22, X0
	0x03420AE0 LDR X0, [X8]
	0x03420AE4 MOVZ W1, 0x1
	0x03420AE8 BL 0x1C16D6C
	0x03420AEC MOV X1, X0
	0x03420AF0 CBZ X1, 0x3420D58
	0x03420AF4 LDR W8, [X1 + 0x18]
	0x03420AF8 CBZ W8, 0x3420D5C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFBE000
	007 Move X22, 0xCD7000
	008 Move W8, [X21+1558]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD7000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1558], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

