Type: Nakama.Client/<AuthenticateGameCenterAsync>d__49

Method: System.Void MoveNext()

Disassembly:
	0x0344F910 BL 0x1C16D08
	0x0344F914 MOV X2, X0
	0x0344F918 MOV X0, X19
	0x0344F91C MOV X1, X20
	0x0344F920 BL 0x26324C8
	0x0344F924 B 0x344F844
	0x0344F928 MOVZ W0, 0x8
	0x0344F92C BL 0x3EB1AF0
	0x0344F930 LDR X8, [X20]
	0x0344F934 STR X8, [X0]
	0x0344F938 ADRP X1, 0xA65000
	0x0344F93C ADD X1, X1, 0xE58
	0x0344F940 MOV X2, X31
	0x0344F944 BL 0x3EB1B00
	0x0344F948 MOV X20, X0
	0x0344F94C BL 0x3EB1AE0
	0x0344F950 MOV X0, X20
	0x0344F954 BL 0x1D2C690
	0x0344F958 BL 0x1990590
	0x0344F95C STR X30, [X31 - 0x30]!
	0x0344F960 STP X22, X21, [X31 + 0x10]
	0x0344F964 STP X20, X19, [X31 + 0x20]
	0x0344F968 ADRP X22, 0xF8E000
	0x0344F96C ADRP X21, 0xCE0000
	0x0344F970 LDRB W8, [X22 + 0x766]
	0x0344F974 LDR X21, [X21 + 0x630]
	0x0344F978 MOV X19, X1
	0x0344F97C MOV X20, X0
	0x0344F980 TBNZ X8, 0x0, 0x344F9A4
	0x0344F984 ADRP X0, 0xCE0000
	0x0344F988 LDR X0, [X0 + 0xAA8]
	0x0344F98C BL 0x1C16CF4
	0x0344F990 ADRP X0, 0xCE0000
	0x0344F994 LDR X0, [X0 + 0x630]
	0x0344F998 BL 0x1C16CF4
	0x0344F99C MOVZ W8, 0x1
	0x0344F9A0 STRB W8, [X22 + 0x766]
	0x0344F9A4 LDR X0, [X21]
	0x0344F9A8 ADRP X21, 0xCE0000
	0x0344F9AC LDR W8, [X0 + 0xE0]
	0x0344F9B0 LDR X21, [X21 + 0xAA8]
	0x0344F9B4 CBNZ W8, 0x344F9BC
	0x0344F9B8 BL 0x1C16DFC
	0x0344F9BC LDR X2, [X21]
	0x0344F9C0 ADD X0, X20, 0x8
	0x0344F9C4 MOV X1, X19
	0x0344F9C8 LDP X20, X19, [X31 + 0x20]
	0x0344F9CC LDP X22, X21, [X31 + 0x10]
	0x0344F9D0 LDR X30, [X31], #0x30
	0x0344F9D4 B 0x2632228
	0x0344F9D8 SUB X31, X31, 0x70
	0x0344F9DC STP X30, X25, [X31 + 0x30]
	0x0344F9E0 STP X24, X23, [X31 + 0x40]
	0x0344F9E4 STP X22, X21, [X31 + 0x50]
	0x0344F9E8 STP X20, X19, [X31 + 0x60]
	0x0344F9EC ADRP X20, 0xF8E000
	0x0344F9F0 LDRB W8, [X20 + 0x767]
	0x0344F9F4 MOV X19, X0
	0x0344F9F8 TBNZ X8, 0x0, 0x344FAAC
	0x0344F9FC ADRP X0, 0xCE0000
	0x0344FA00 LDR X0, [X0 + 0xB58]
	0x0344FA04 BL 0x1C16CF4
	0x0344FA08 ADRP X0, 0xCE0000
	0x0344FA0C LDR X0, [X0 + 0xB60]
	0x0344FA10 BL 0x1C16CF4
	0x0344FA14 ADRP X0, 0xCA7000
	0x0344FA18 LDR X0, [X0 + 0x280]
	0x0344FA1C BL 0x1C16CF4
	0x0344FA20 ADRP X0, 0xCA6000
	0x0344FA24 LDR X0, [X0 + 0xA10]
	0x0344FA28 BL 0x1C16CF4
	0x0344FA2C ADRP X0, 0xCA5000
	0x0344FA30 LDR X0, [X0 + 0x9F0]
	0x0344FA34 BL 0x1C16CF4
	0x0344FA38 ADRP X0, 0xCAC000
	0x0344FA3C LDR X0, [X0 + 0x818]
	0x0344FA40 BL 0x1C16CF4
	0x0344FA44 ADRP X0, 0xCA5000
	0x0344FA48 LDR X0, [X0 + 0x818]
	0x0344FA4C BL 0x1C16CF4
	0x0344FA50 ADRP X0, 0xCE0000
	0x0344FA54 LDR X0, [X0 + 0x7C8]
	0x0344FA58 BL 0x1C16CF4
	0x0344FA5C ADRP X0, 0xCE0000
	0x0344FA60 LDR X0, [X0 + 0x7D0]
	0x0344FA64 BL 0x1C16CF4
	0x0344FA68 ADRP X0, 0xCA5000
	0x0344FA6C LDR X0, [X0 + 0x830]
	0x0344FA70 BL 0x1C16CF4
	0x0344FA74 ADRP X0, 0xCA5000
	0x0344FA78 LDR X0, [X0 + 0x838]
	0x0344FA7C BL 0x1C16CF4
	0x0344FA80 ADRP X0, 0xCA5000
	0x0344FA84 LDR X0, [X0 + 0x840]
	0x0344FA88 BL 0x1C16CF4
	0x0344FA8C ADRP X0, 0xCE0000
	0x0344FA90 LDR X0, [X0 + 0xB68]
	0x0344FA94 BL 0x1C16CF4
	0x0344FA98 ADRP X0, 0xCE0000
	0x0344FA9C LDR X0, [X0 + 0xB70]
	0x0344FAA0 BL 0x1C16CF4
	0x0344FAA4 MOVZ W8, 0x1
	0x0344FAA8 STRB W8, [X20 + 0x767]
	0x0344FAAC STP X31, X31, [X31 + 0x20]
	0x0344FAB0 STR X31, [X31 + 0x18]
	0x0344FAB4 ADRP X25, 0xCA7000
	0x0344FAB8 LDR W8, [X19]
	0x0344FABC LDR X20, [X19 + 0x20]
	0x0344FAC0 LDR X25, [X25 + 0x280]
	0x0344FAC4 CBZ W8, 0x344FAE8
	0x0344FAC8 CMP W8, 0x1
	0x0344FACC B.NE 0x344FB14
	0x0344FAD0 LDR X8, [X19 + 0x60]
	0x0344FAD4 MOVN W9, 0x0
	0x0344FAD8 STR X8, [X31 + 0x18]
	0x0344FADC STR X31, [X19 + 0x60]
	0x0344FAE0 STR W9, [X19]
	0x0344FAE4 B 0x344FE18
	0x0344FAE8 LDR X8, [X19 + 0x58]
	0x0344FAEC MOVN W9, 0x0
	0x0344FAF0 STR X8, [X31 + 0x20]
	0x0344FAF4 STR X31, [X19 + 0x58]
	0x0344FAF8 STR W9, [X19]
	0x0344FAFC ADRP X8, 0xCA5000
	0x0344FB00 LDR X8, [X8 + 0x830]
	0x0344FB04 ADD X0, X31, 0x20
	0x0344FB08 LDR X1, [X8]
	0x0344FB0C BL 0x2677474
	0x0344FB10 B 0x344FD4C
	0x0344FB14 ADRP X8, 0xCE0000
	0x0344FB18 LDR X8, [X8 + 0xB70]
	0x0344FB1C LDR X0, [X8]
	0x0344FB20 BL 0x1C16F10
	0x0344FB24 MOV X21, X0
	0x0344FB28 MOV X1, X31
	0x0344FB2C BL 0x344852C
	0x0344FB30 STR X21, [X19 + 0x50]
	0x0344FB34 CBZ X21, 0x344FEB8
	0x0344FB38 LDR X8, [X19 + 0x20]
	0x0344FB3C STR X8, [X21 + 0x10]
	0x0344FB40 LDR X8, [X19 + 0x28]
	0x0344FB44 STR X8, [X21 + 0x18]
	0x0344FB48 LDR X8, [X19 + 0x30]
	0x0344FB4C STR X8, [X21 + 0x20]
	0x0344FB50 LDR X8, [X19 + 0x38]
	0x0344FB54 STR X8, [X21 + 0x28]
	0x0344FB58 LDR X8, [X19 + 0x40]
	0x0344FB5C STR X8, [X21 + 0x30]
	0x0344FB60 CBZ X20, 0x344FEBC
	0x0344FB64 LDRB W8, [X20 + 0x10]
	0x0344FB68 CBZ W8, 0x344FD50
	0x0344FB6C LDR X8, [X19 + 0x50]
	0x0344FB70 CBZ X8, 0x344FEC0
	0x0344FB74 LDR X21, [X8 + 0x18]
	0x0344FB78 CBZ X21, 0x344FEC4
	0x0344FB7C ADRP X23, 0xCA5000
	0x0344FB80 LDR X8, [X21]
	0x0344FB84 LDR X23, [X23 + 0x818]
	0x0344FB88 LDRH W9, [X8 + 0x12E]
	0x0344FB8C LDR X1, [X23]
	0x0344FB90 CBZ X9, 0x344FBB4
	0x0344FB94 LDR X10, [X8 + 0xB0]
	0x0344FB98 ADD X10, X10, 0x8
	0x0344FB9C LDUR X11, [X10 - 0x8]
	0x0344FBA0 CMP X11, X1
	0x0344FBA4 B.EQ 0x344FBC4
	0x0344FBA8 SUBS X9, X9, 0x1
	0x0344FBAC ADD X10, X10, 0x10
	0x0344FBB0 B.NE 0x344FB9C
	0x0344FBB4 MOVZ W2, 0x7
	0x0344FBB8 MOV X0, X21
	0x0344FBBC BL 0x1C5C788
	0x0344FBC0 B 0x344FBD4
	0x0344FBC4 LDR W9, [X10]
	0x0344FBC8 ADD W9, W9, 0x7
	0x0344FBCC ADD X8, X8, W9, 0x4, SXTW
	0x0344FBD0 ADD X0, X8, 0x138
	0x0344FBD4 LDP X8, X1, [X0]
	0x0344FBD8 MOV X0, X21
	0x0344FBDC BLR X8
	0x0344FBE0 MOV X1, X31
	0x0344FBE4 BL 0x32277A8
	0x0344FBE8 TBNZ X0, 0x0, 0x344FD4C
	0x0344FBEC LDR X8, [X19 + 0x50]
	0x0344FBF0 CBZ X8, 0x344FEC8
	0x0344FBF4 ADRP X9, 0xCA5000
	0x0344FBF8 LDR X9, [X9 + 0x9F0]
	0x0344FBFC LDR X21, [X8 + 0x18]
	0x0344FC00 LDR X0, [X9]
	0x0344FC04 LDR W9, [X0 + 0xE0]
	0x0344FC08 CBNZ W9, 0x344FC10
	0x0344FC0C BL 0x1C16DFC
	0x0344FC10 MOV X0, X31
	0x0344FC14 BL 0x33616A4
	0x0344FC18 ADRP X22, 0xCA6000
	0x0344FC1C LDR X22, [X22 + 0xA10]
	0x0344FC20 MOV X8, X0
	0x0344FC24 STR X8, [X31 + 0x28]
	0x0344FC28 LDR X0, [X22]
	0x0344FC2C LDR W8, [X0 + 0xE0]
	0x0344FC30 CBNZ W8, 0x344FC3C
	0x0344FC34 BL 0x1C16DFC
	0x0344FC38 LDR X0, [X22]
	0x0344FC3C LDR X8, [X0 + 0xB8]
	0x0344FC40 LDR X1, [X8]
	0x0344FC44 ADD X0, X31, 0x28
	0x0344FC48 MOV X2, X31
	0x0344FC4C BL 0x335FC68
	0x0344FC50 CBZ X21, 0x344FECC
	0x0344FC54 LDR X8, [X21]
	0x0344FC58 LDR X1, [X23]
	0x0344FC5C MOV X22, X0
	0x0344FC60 LDRH W9, [X8 + 0x12E]
	0x0344FC64 CBZ X9, 0x344FC88
	0x0344FC68 LDR X10, [X8 + 0xB0]
	0x0344FC6C ADD X10, X10, 0x8
	0x0344FC70 LDUR X11, [X10 - 0x8]
	0x0344FC74 CMP X11, X1
	0x0344FC78 B.EQ 0x344FC98
	0x0344FC7C SUBS X9, X9, 0x1
	0x0344FC80 ADD X10, X10, 0x10
	0x0344FC84 B.NE 0x344FC70
	0x0344FC88 MOVZ W2, 0xB
	0x0344FC8C MOV X0, X21
	0x0344FC90 BL 0x1C5C788
	0x0344FC94 B 0x344FCA8
	0x0344FC98 LDR W9, [X10]
	0x0344FC9C ADD W9, W9, 0xB
	0x0344FCA0 ADD X8, X8, W9, 0x4, SXTW
	0x0344FCA4 ADD X0, X8, 0x138
	0x0344FCA8 LDP X8, X2, [X0]
	0x0344FCAC MOV X0, X21
	0x0344FCB0 MOV X1, X22
	0x0344FCB4 BLR X8
	0x0344FCB8 TBZ X0, 0x0, 0x344FD4C
	0x0344FCBC LDR X8, [X19 + 0x50]
	0x0344FCC0 CBZ X8, 0x344FED0
	0x0344FCC4 LDR X1, [X8 + 0x18]
	0x0344FCC8 LDR X3, [X19 + 0x48]
	0x0344FCCC LDR X4, [X8 + 0x30]
	0x0344FCD0 MOV X0, X20
	0x0344FCD4 MOV X2, X31
	0x0344FCD8 MOV X5, X31
	0x0344FCDC BL 0x34440A8
	0x0344FCE0 CBZ X0, 0x344FED4
	0x0344FCE4 ADRP X8, 0xCA5000
	0x0344FCE8 LDR X8, [X8 + 0x840]
	0x0344FCEC LDR X1, [X8]
	0x0344FCF0 BL 0x269F5D0
	0x0344FCF4 ADRP X8, 0xCA5000
	0x0344FCF8 LDR X8, [X8 + 0x838]
	0x0344FCFC STR X0, [X31 + 0x20]
	0x0344FD00 LDR X1, [X8]
	0x0344FD04 ADD X0, X31, 0x20
	0x0344FD08 BL 0x2677430
	0x0344FD0C TBNZ X0, 0x0, 0x344FAFC
	0x0344FD10 STR W31, [X19]
	0x0344FD14 LDR X8, [X31 + 0x20]
	0x0344FD18 STR X8, [X19 + 0x58]
	0x0344FD1C LDR X0, [X25]
	0x0344FD20 LDR W8, [X0 + 0xE0]
	0x0344FD24 CBNZ W8, 0x344FD2C
	0x0344FD28 BL 0x1C16DFC
	0x0344FD2C ADRP X8, 0xCE0000
	0x0344FD30 LDR X8, [X8 + 0xB58]
	0x0344FD34 ADD X0, X19, 0x8
	0x0344FD38 LDR X3, [X8]
	0x0344FD3C ADD X1, X31, 0x20
	0x0344FD40 MOV X2, X19
	0x0344FD44 BL 0x2188004
	0x0344FD48 B 0x344FE90
	0x0344FD4C CBZ X20, 0x344FEB4
	0x0344FD50 ADRP X8, 0xCAC000
	0x0344FD54 LDR X8, [X8 + 0x818]
	0x0344FD58 LDR X21, [X20 + 0x58]
	0x0344FD5C LDR X23, [X19 + 0x50]
	0x0344FD60 LDR X0, [X8]
	0x0344FD64 BL 0x1C16F10
	0x0344FD68 ADRP X8, 0xCE0000
	0x0344FD6C LDR X8, [X8 + 0xB68]
	0x0344FD70 MOV X22, X0
	0x0344FD74 LDR X2, [X8]
	0x0344FD78 MOV X1, X23
	0x0344FD7C MOV X3, X31
	0x0344FD80 BL 0x2D27AA8
	0x0344FD84 LDR X8, [X19 + 0x50]
	0x0344FD88 CBZ X8, 0x344FEA8
	0x0344FD8C ADRP X9, 0xCE0000
	0x0344FD90 LDR X23, [X19 + 0x48]
	0x0344FD94 LDR X9, [X9 + 0x7C8]
	0x0344FD98 CBNZ X23, 0x344FDA0
	0x0344FD9C LDR X23, [X20 + 0x18]
	0x0344FDA0 LDR X20, [X8 + 0x18]
	0x0344FDA4 LDR X1, [X8 + 0x30]
	0x0344FDA8 LDR X2, [X9]
	0x0344FDAC STP X31, X31, [X31 + 0x8]
	0x0344FDB0 ADD X0, X31, 0x8
	0x0344FDB4 BL 0x242E368
	0x0344FDB8 ADRP X8, 0xCE0000
	0x0344FDBC LDR X8, [X8 + 0x7D0]
	0x0344FDC0 LDR X0, [X8]
	0x0344FDC4 BL 0x1C16F10
	0x0344FDC8 LDP X3, X4, [X31 + 0x8]
	0x0344FDCC MOV X24, X0
	0x0344FDD0 MOV X1, X20
	0x0344FDD4 MOV X2, X23
	0x0344FDD8 MOV X5, X31
	0x0344FDDC BL 0x3465404
	0x0344FDE0 CBZ X21, 0x344FEAC
	0x0344FDE4 MOV X0, X21
	0x0344FDE8 MOV X1, X22
	0x0344FDEC MOV X2, X24
	0x0344FDF0 MOV X3, X31
	0x0344FDF4 BL 0x3465B68
	0x0344FDF8 CBZ X0, 0x344FEB0
	0x0344FDFC MOV X1, X31
	0x0344FE00 BL 0x33ED394
	0x0344FE04 STR X0, [X31 + 0x18]
	0x0344FE08 ADD X0, X31, 0x18
	0x0344FE0C MOV X1, X31
	0x0344FE10 BL 0x32C3A80
	0x0344FE14 TBZ X0, 0x0, 0x344FE54
	0x0344FE18 ADD X0, X31, 0x18
	0x0344FE1C MOV X1, X31
	0x0344FE20 BL 0x32C3B4C
	0x0344FE24 MOVN W8, 0x1
	0x0344FE28 STR W8, [X19]
	0x0344FE2C STR X31, [X19 + 0x50]
	0x0344FE30 LDR X0, [X25]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0xF8F000
	011 Move W8, [X20+1889]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE1000
	018 Move X0, [X0+2832]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE1000
	021 Move X0, [X0+2640]
	022 Call 0x1C17CF4
	023 Move X0, 0xCE1000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE1000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE1000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE1000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE1000
	036 Move X0, [X0+2000]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE1000
	039 Move X0, [X0+2664]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE1000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0xCE1000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0xCE1000
	048 Move X0, [X0+2688]
	049 Call 0x1C17CF4
	050 Move X0, 0xCE1000
	051 Move X0, [X0+2696]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE1000
	054 Move X0, [X0+2840]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE1000
	057 Move X0, [X0+2848]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1889], W8
	061 Move [X31+24], X31
	062 Move X25, 0xCE1000
	063 Move W8, [X19]
	064 Move X25, [X25+1584]
	065 Compare W8, 0
	066 JumpIfEqual {171}
	067 Move X8, 0xCE1000
	068 Move X8, [X8+2848]
	069 Move X24, [X19+32]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X22, X0
	073 Move X1, X31
	074 Call <>c__DisplayClass49_0..ctor, X0
	075 Compare X22, 0
	076 JumpIfEqual {292}
	077 Move X8, [X19+32]
	078 Move [X22+16], X8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move [X22+24], V0
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move [X22+40], V0
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move [X22+56], V0
	085 Move X8, [X19+88]
	086 Move [X22+72], X8
	087 Move W8, [X19+96]
	088 Move [X22+80], W8
	089 Move X8, [X19+104]
	090 Move [X22+88], X8
	091 Move X8, [X19+112]
	092 Move [X22+96], X8
	093 Compare X24, 0
	094 JumpIfEqual {293}
	095 Move X8, 0xCE1000
	096 Move X8, [X8+2648]
	097 Move X20, [X24+88]
	098 Move X0, [X8]
	099 Call 0x1C17F10
	100 Move X8, 0xCE1000
	101 Move X8, [X8+2840]
	102 Move X21, X0
	103 Move X2, [X8]
	104 Move X1, X22
	105 Move X3, X31
	106 Call Func`1<Object>..ctor, X0, X1, X2
	107 Move X8, 0xCE1000
	108 Move X23, [X19+120]
	109 Move X8, [X8+1992]
	110 Compare X23, 0
	111 JumpIfNotEqual {113}
	112 Move X23, [X24+24]
	113 Move X24, [X22+24]
	114 Move X1, [X22+96]
	115 Move X2, [X8]
	116 Move [X31+8], X31
	117 Move [X31+16], X31
	118 Add X0, X31, 8
	119 Call Nullable`1<CancellationToken>..ctor, X0, X1
	120 Move X8, 0xCE1000
	121 Move X8, [X8+2000]
	122 Move X0, [X8]
	123 Call 0x1C17F10
	124 Move X3, [X31+8]
	125 Move X4, [X31+16]
	126 Move X22, X0
	127 Move X1, X24
	128 Move X2, X23
	129 Move X5, X31
	130 Call RetryHistory..ctor, X0, X1, X2, X3
	131 Compare X20, 0
	132 JumpIfEqual {294}
	133 Move X8, 0xCE1000
	134 Move X8, [X8+2664]
	135 Move X3, [X8]
	136 Move X0, X20
	137 Move X1, X21
	138 Move X2, X22
	139 Call 0x2244230, X0, X1, X2
	140 Compare X0, 0
	141 JumpIfEqual {295}
	142 Move X8, 0xCE1000
	143 Move X8, [X8+2696]
	144 Move X1, [X8]
	145 Call Task`1<Object>.GetAwaiter, X0
	146 Move X8, 0xCE1000
	147 Move X8, [X8+2688]
	148 Move [X31+24], X0
	149 Move X1, [X8]
	150 Add X0, X31, 24
	151 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {178}
	156 Move [X19], W31
	157 Move X8, [X31+24]
	158 Move [X19+128], X8
	159 Move X0, [X25]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X8, 0xCE1000
	165 Move X8, [X8+2832]
	166 Add X0, X19, 8
	167 Move X3, [X8]
	168 Add X1, X31, 24
	169 Move X2, X19
	170 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	171 Move X8, [X19+128]
	172 Move TEMP, 0
	173 Not TEMP
	174 Move W9, TEMP
	175 Move [X31+24], X8
	176 Move [X19+128], X31
	177 Move [X19], W9
	178 Move X8, 0xCE1000
	179 Move X8, [X8+2680]
	180 Add X0, X31, 24
	181 Move X1, [X8]
	182 Call TaskAwaiter`1<Object>.GetResult, X0
	183 Move X20, X0
	184 Compare X0, 0
	185 JumpIfEqual {291}
	186 Move X23, 0xCE1000
	187 Move X8, [X20]
	188 Move X23, [X23+2656]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Move X1, [X23]
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move W2, 2
	200 Move X0, X20
	201 Call 0x1C5D788
	202 Move W9, [X10]
	203 Add W9, W9, 2
	204 Add X8, X8, W9
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X1, [X0+8]
	208 Move X0, X20
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Move X8, [X20]
	211 Move X1, [X23]
	212 Move X21, X0
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Compare X9, 0
	215 JumpIfEqual {222}
	216 Move X10, [X8+176]
	217 Add X10, X10, 8
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Subtract X9, X9, 1
	221 Add X10, X10, 16
	222 Move W2, 1
	223 Move X0, X20
	224 Call 0x1C5D788
	225 Move W9, [X10]
	226 Add W9, W9, 1
	227 Add X8, X8, W9
	228 Add X0, X8, 312
	229 Move X8, [X0]
	230 Move X1, [X0+8]
	231 Move X0, X20
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move X8, [X20]
	234 Move X1, [X23]
	235 Move X22, X0
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move X0, X20
	246 Move W2, W31
	247 Call 0x1C5D788
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 Add X8, X8, X9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X1, [X0+8]
	253 Move X0, X20
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move X8, 0xCE1000
	256 Move X8, [X8+2672]
	257 Move W23, W0
	258 Move X0, [X8]
	259 Call 0x1C17F10
	260 Move X20, X0
	261 And W3, W23, 1
	262 Move X1, X21
	263 Move X2, X22
	264 Move X4, X31
	265 Call Session..ctor, X0, X1, X2, X3
	266 Move TEMP, 1
	267 Not TEMP
	268 Move W8, TEMP
	269 Move [X19+8], W8
	270 Move X0, [X25]
	271 Move X21, 0xCE1000
	272 Move W8, [X0+224]
	273 Move X21, [X21+2640]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X2, [X21]
	278 Move X0, X19
	279 Move X1, X20
	280 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	281 Move X20, [X31+80]
	282 Move X19, [X31+88]
	283 Move X22, [X31+64]
	284 Move X21, [X31+72]
	285 Move X24, [X31+48]
	286 Move X23, [X31+56]
	287 Move X30, [X31+32]
	288 Move X25, [X31+40]
	289 Add X31, X31, 96
	290 Return 
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Move X20, X0
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X0, X20
	299 Call 0x3EB2AD0
	300 Move X20, X0
	301 Move X0, 0xCA5000
	302 Move X0, [X0+2000]
	303 Call 0x1C17D08
	304 Move X8, [X20]
	305 Move X1, [X8]
	306 Call 0x1C18270
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {331}
	311 Move X20, [X20]
	312 Call 0x3EB2AE0
	313 Move TEMP, 1
	314 Not TEMP
	315 Move W8, TEMP
	316 Move [X19+8], W8
	317 Move X0, 0xCE1000
	318 Move X0, [X0+1584]
	319 Call 0x1C17D08
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X0, 0xCE1000
	325 Move X0, [X0+2720]
	326 Call 0x1C17D08
	327 Move X2, X0
	328 Move X0, X19
	329 Move X1, X20
	330 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	331 Move W0, 8
	332 Call 0x3EB2AF0
	333 Move X8, [X20]
	334 Move [X0], X8
	335 Move X1, 0xA66000
	336 Add X1, X1, 3672
	337 Move X2, X31
	338 Call 0x3EB2B00
	339 Move X20, X0
	340 Call 0x3EB2AE0
	341 Move X0, X20
	342 Call 0x1D2D690
	343 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0344FE34 ADD X19, X19, 0x8
	0x0344FE38 LDR W8, [X0 + 0xE0]
	0x0344FE3C CBNZ W8, 0x344FE44
	0x0344FE40 BL 0x1C16DFC
	0x0344FE44 MOV X0, X19
	0x0344FE48 MOV X1, X31
	0x0344FE4C BL 0x32C4864
	0x0344FE50 B 0x344FE90
	0x0344FE54 MOVZ W8, 0x1
	0x0344FE58 STR W8, [X19]
	0x0344FE5C LDR X8, [X31 + 0x18]
	0x0344FE60 STR X8, [X19 + 0x60]
	0x0344FE64 LDR X0, [X25]
	0x0344FE68 LDR W8, [X0 + 0xE0]
	0x0344FE6C CBNZ W8, 0x344FE74
	0x0344FE70 BL 0x1C16DFC
	0x0344FE74 ADRP X8, 0xCE0000
	0x0344FE78 LDR X8, [X8 + 0xB60]
	0x0344FE7C ADD X0, X19, 0x8
	0x0344FE80 LDR X3, [X8]
	0x0344FE84 ADD X1, X31, 0x18
	0x0344FE88 MOV X2, X19
	0x0344FE8C BL 0x21896C8
	0x0344FE90 LDP X20, X19, [X31 + 0x60]
	0x0344FE94 LDP X22, X21, [X31 + 0x50]
	0x0344FE98 LDP X24, X23, [X31 + 0x40]
	0x0344FE9C LDP X30, X25, [X31 + 0x30]
	0x0344FEA0 ADD X31, X31, 0x70
	0x0344FEA4 RET
	0x0344FEA8 BL 0x1C16F20
	0x0344FEAC BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF8F000
	007 Move X21, 0xCE1000
	008 Move W8, [X22+1890]
	009 Move X21, [X21+1584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCE1000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0xCE1000
	020 Move X0, [X0+1584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1890], W8
	024 Move X0, [X21]
	025 Move X21, 0xCE1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2728]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

