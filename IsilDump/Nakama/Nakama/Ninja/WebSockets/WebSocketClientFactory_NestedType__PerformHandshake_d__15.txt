Type: Nakama.Ninja.WebSockets.WebSocketClientFactory/<PerformHandshake>d__15

Method: System.Void MoveNext()

Disassembly:
	0x034916F4 CBZ X0, 0x34917D4
	0x034916F8 ADRP X8, 0xCA0000
	0x034916FC LDR X8, [X8 + 0x488]
	0x03491700 LDR X1, [X8]
	0x03491704 BL 0x269F5D0
	0x03491708 ADRP X8, 0xCA0000
	0x0349170C LDR X8, [X8 + 0x480]
	0x03491710 STR X0, [X31 + 0x8]
	0x03491714 LDR X1, [X8]
	0x03491718 ADD X0, X31, 0x8
	0x0349171C BL 0x2677430
	0x03491720 TBNZ X0, 0x0, 0x3491774
	0x03491724 STR W31, [X19]
	0x03491728 LDR X8, [X31 + 0x8]
	0x0349172C STR X8, [X19 + 0x38]
	0x03491730 LDR X0, [X23]
	0x03491734 LDR W8, [X0 + 0xE0]
	0x03491738 CBNZ W8, 0x3491740
	0x0349173C BL 0x1C16DFC
	0x03491740 ADRP X8, 0xCA0000
	0x03491744 LDR X8, [X8 + 0x5D0]
	0x03491748 ADD X0, X19, 0x8
	0x0349174C LDR X3, [X8]
	0x03491750 ADD X1, X31, 0x8
	0x03491754 MOV X2, X19
	0x03491758 BL 0x1FC4420
	0x0349175C B 0x34917BC
	0x03491760 LDR X8, [X19 + 0x38]
	0x03491764 MOVN W9, 0x0
	0x03491768 STR X8, [X31 + 0x8]
	0x0349176C STR X31, [X19 + 0x38]
	0x03491770 STR W9, [X19]
	0x03491774 ADRP X8, 0xCA0000
	0x03491778 LDR X8, [X8 + 0x478]
	0x0349177C ADD X0, X31, 0x8
	0x03491780 LDR X1, [X8]
	0x03491784 BL 0x2677474
	0x03491788 MOVN W8, 0x1
	0x0349178C STR W8, [X19], #0x8
	0x03491790 MOV X20, X0
	0x03491794 LDR X0, [X23]
	0x03491798 ADRP X21, 0xCA0000
	0x0349179C LDR W8, [X0 + 0xE0]
	0x034917A0 LDR X21, [X21 + 0x470]
	0x034917A4 CBNZ W8, 0x34917AC
	0x034917A8 BL 0x1C16DFC
	0x034917AC LDR X2, [X21]
	0x034917B0 MOV X0, X19
	0x034917B4 MOV X1, X20
	0x034917B8 BL 0x26322B0
	0x034917BC LDP X20, X19, [X31 + 0x30]
	0x034917C0 LDP X22, X21, [X31 + 0x20]
	0x034917C4 LDP X30, X23, [X31 + 0x10]
	0x034917C8 ADD X31, X31, 0x40
	0x034917CC RET
	0x034917D0 BL 0x1C16F20
	0x034917D4 BL 0x1C16F20
	0x034917D8 B 0x34917F0
	0x034917DC B 0x34917F0
	0x034917E0 B 0x34917F0
	0x034917E4 B 0x34917F0
	0x034917E8 B 0x34917F0
	0x034917EC B 0x34917F0
	0x034917F0 MOV X20, X0
	0x034917F4 CMP W1, 0x1
	0x034917F8 B.NE 0x3491894
	0x034917FC MOV X0, X20
	0x03491800 BL 0x3EB1AD0
	0x03491804 MOV X20, X0
	0x03491808 ADRP X0, 0xC62000
	0x0349180C LDR X0, [X0 + 0x7D0]
	0x03491810 BL 0x1C16D08
	0x03491814 LDR X8, [X20]
	0x03491818 LDR X1, [X8]
	0x0349181C BL 0x1C17270
	0x03491820 TBZ X0, 0x0, 0x349186C
	0x03491824 LDR X20, [X20]
	0x03491828 BL 0x3EB1AE0
	0x0349182C MOVN W8, 0x1
	0x03491830 STR W8, [X19], #0x8
	0x03491834 ADRP X0, 0xCA0000
	0x03491838 LDR X0, [X0 + 0x168]
	0x0349183C BL 0x1C16D08
	0x03491840 LDR W8, [X0 + 0xE0]
	0x03491844 CBNZ W8, 0x349184C
	0x03491848 BL 0x1C16DFC
	0x0349184C ADRP X0, 0xCA0000
	0x03491850 LDR X0, [X0 + 0x490]
	0x03491854 BL 0x1C16D08
	0x03491858 MOV X2, X0
	0x0349185C MOV X0, X19
	0x03491860 MOV X1, X20
	0x03491864 BL 0x26324C8
	0x03491868 B 0x34917BC
	0x0349186C MOVZ W0, 0x8
	0x03491870 BL 0x3EB1AF0
	0x03491874 LDR X8, [X20]
	0x03491878 STR X8, [X0]
	0x0349187C ADRP X1, 0xA23000
	0x03491880 ADD X1, X1, 0xE58
	0x03491884 MOV X2, X31
	0x03491888 BL 0x3EB1B00
	0x0349188C MOV X20, X0
	0x03491890 BL 0x3EB1AE0
	0x03491894 MOV X0, X20
	0x03491898 BL 0x1D2C690
	0x0349189C BL 0x1990590
	0x034918A0 STP X30, X21, [X31 - 0x20]!
	0x034918A4 STP X20, X19, [X31 + 0x10]
	0x034918A8 ADRP X21, 0xF4C000
	0x034918AC ADRP X20, 0xC64000
	0x034918B0 LDRB W8, [X21 + 0x950]
	0x034918B4 LDR X20, [X20 + 0x570]
	0x034918B8 MOV X19, X0
	0x034918BC TBNZ X8, 0x0, 0x34918D4
	0x034918C0 ADRP X0, 0xC64000
	0x034918C4 LDR X0, [X0 + 0x570]
	0x034918C8 BL 0x1C16CF4
	0x034918CC MOVZ W8, 0x1
	0x034918D0 STRB W8, [X21 + 0x950]
	0x034918D4 MOV X0, X19
	0x034918D8 MOV X1, X31
	0x034918DC BL 0x33BDD8C
	0x034918E0 LDR X0, [X20]
	0x034918E4 LDR W8, [X0 + 0xE0]
	0x034918E8 CBNZ W8, 0x34918F0
	0x034918EC BL 0x1C16DFC
	0x034918F0 MOVZ X8, 0x404E0000
	0x034918F4 FMOV D0, X8
	0x034918F8 MOV X0, X31
	0x034918FC BL 0x3394754
	0x03491900 STR X0, [X19 + 0x10]
	0x03491904 STRB W31, [X19 + 0x18]
	0x03491908 STR X31, [X19 + 0x20]
	0x0349190C LDP X20, X19, [X31 + 0x10]
	0x03491910 LDP X30, X21, [X31], #0x20
	0x03491914 RET
	0x03491918 STR X30, [X31 - 0x30]!
	0x0349191C STP X22, X21, [X31 + 0x10]
	0x03491920 STP X20, X19, [X31 + 0x20]
	0x03491924 ADRP X22, 0xF4C000
	0x03491928 ADRP X21, 0xCA0000
	0x0349192C LDRB W8, [X22 + 0x949]
	0x03491930 LDR X21, [X21 + 0x168]
	0x03491934 MOV X19, X1
	0x03491938 MOV X20, X0
	0x0349193C TBNZ X8, 0x0, 0x3491960
	0x03491940 ADRP X0, 0xCA0000
	0x03491944 LDR X0, [X0 + 0x498]
	0x03491948 BL 0x1C16CF4
	0x0349194C ADRP X0, 0xCA0000
	0x03491950 LDR X0, [X0 + 0x168]
	0x03491954 BL 0x1C16CF4
	0x03491958 MOVZ W8, 0x1
	0x0349195C STRB W8, [X22 + 0x949]
	0x03491960 LDR X0, [X21]
	0x03491964 ADRP X21, 0xCA0000
	0x03491968 LDR W8, [X0 + 0xE0]
	0x0349196C LDR X21, [X21 + 0x498]
	0x03491970 CBNZ W8, 0x3491978
	0x03491974 BL 0x1C16DFC
	0x03491978 LDR X2, [X21]
	0x0349197C ADD X0, X20, 0x8
	0x03491980 MOV X1, X19
	0x03491984 LDP X20, X19, [X31 + 0x20]
	0x03491988 LDP X22, X21, [X31 + 0x10]
	0x0349198C LDR X30, [X31], #0x30
	0x03491990 B 0x2632228
	0x03491994 SUB X31, X31, 0x80
	0x03491998 STR X30, [X31 + 0x20]
	0x0349199C STP X28, X27, [X31 + 0x30]
	0x034919A0 STP X26, X25, [X31 + 0x40]
	0x034919A4 STP X24, X23, [X31 + 0x50]
	0x034919A8 STP X22, X21, [X31 + 0x60]
	0x034919AC STP X20, X19, [X31 + 0x70]
	0x034919B0 ADRP X20, 0xF4C000
	0x034919B4 LDRB W8, [X20 + 0x94A]
	0x034919B8 MOV X19, X0
	0x034919BC TBNZ X8, 0x0, 0x34919F8
	0x034919C0 ADRP X0, 0xCA0000
	0x034919C4 LDR X0, [X0 + 0x5E0]
	0x034919C8 BL 0x1C16CF4
	0x034919CC ADRP X0, 0xCA0000
	0x034919D0 LDR X0, [X0 + 0x470]
	0x034919D4 BL 0x1C16CF4
	0x034919D8 ADRP X0, 0xCA0000
	0x034919DC LDR X0, [X0 + 0x168]
	0x034919E0 BL 0x1C16CF4
	0x034919E4 ADRP X0, 0xCA0000
	0x034919E8 LDR X0, [X0 + 0x390]
	0x034919EC BL 0x1C16CF4
	0x034919F0 MOVZ W8, 0x1
	0x034919F4 STRB W8, [X20 + 0x94A]
	0x034919F8 STR X31, [X31 + 0x28]
	0x034919FC ADRP X26, 0xCA0000
	0x03491A00 LDR W8, [X19]
	0x03491A04 LDR X20, [X19 + 0x38]
	0x03491A08 LDR X26, [X26 + 0x168]
	0x03491A0C CBZ W8, 0x3491A9C
	0x03491A10 MOV X0, X31
	0x03491A14 BL 0x337684C
	0x03491A18 LDR X8, [X19 + 0x20]
	0x03491A1C STP X0, X1, [X19 + 0x40]
	0x03491A20 CBZ X8, 0x3491B84
	0x03491A24 LDR X9, [X19 + 0x28]
	0x03491A28 CBZ X9, 0x3491B88
	0x03491A2C LDR X2, [X8 + 0x20]
	0x03491A30 LDR X3, [X9 + 0x20]
	0x03491A34 LDR X4, [X8 + 0x30]
	0x03491A38 LDR X5, [X19 + 0x30]
	0x03491A3C BL 0x3491544
	0x03491A40 CBZ X0, 0x3491B8C
	0x03491A44 MOV X1, X31
	0x03491A48 BL 0x33ED394
	0x03491A4C STR X0, [X31 + 0x28]
	0x03491A50 ADD X0, X31, 0x28
	0x03491A54 MOV X1, X31
	0x03491A58 BL 0x32C3A80
	0x03491A5C TBNZ X0, 0x0, 0x3491AB0
	0x03491A60 STR W31, [X19]
	0x03491A64 LDR X8, [X31 + 0x28]
	0x03491A68 STR X8, [X19 + 0x50]
	0x03491A6C LDR X0, [X26]
	0x03491A70 LDR W8, [X0 + 0xE0]
	0x03491A74 CBNZ W8, 0x3491A7C
	0x03491A78 BL 0x1C16DFC
	0x03491A7C ADRP X8, 0xCA0000
	0x03491A80 LDR X8, [X8 + 0x5E0]
	0x03491A84 ADD X0, X19, 0x8
	0x03491A88 LDR X3, [X8]
	0x03491A8C ADD X1, X31, 0x28
	0x03491A90 MOV X2, X19
	0x03491A94 BL 0x1FC6588
	0x03491A98 B 0x3491B58
	0x03491A9C LDR X8, [X19 + 0x50]
	0x03491AA0 MOVN W9, 0x0
	0x03491AA4 STR X8, [X31 + 0x28]
	0x03491AA8 STR X31, [X19 + 0x50]
	0x03491AAC STR W9, [X19]
	0x03491AB0 ADD X0, X31, 0x28
	0x03491AB4 MOV X1, X31
	0x03491AB8 BL 0x32C3B4C
	0x03491ABC CBZ X20, 0x3491B78
	0x03491AC0 LDR X8, [X19 + 0x20]
	0x03491AC4 CBZ X8, 0x3491B7C
	0x03491AC8 LDR X9, [X19 + 0x28]
	0x03491ACC CBZ X9, 0x3491B80
	0x03491AD0 ADRP X10, 0xCA0000
	0x03491AD4 LDR X10, [X10 + 0x390]
	0x03491AD8 LDP X21, X22, [X19 + 0x40]
	0x03491ADC LDR X23, [X20 + 0x10]
	0x03491AE0 LDR X24, [X8 + 0x30]
	0x03491AE4 LDR X25, [X9 + 0x10]
	0x03491AE8 LDRB W28, [X9 + 0x18]
	0x03491AEC LDR X27, [X9 + 0x20]
	0x03491AF0 LDR X0, [X10]
	0x03491AF4 BL 0x1C16F10
	0x03491AF8 MOV X20, X0
	0x03491AFC CMP W28, 0x0
	0x03491B00 CSET W7, NE
	0x03491B04 MOV X1, X21
	0x03491B08 MOV X2, X22
	0x03491B0C MOV X3, X23
	0x03491B10 MOV X4, X24
	0x03491B14 MOV X5, X25
	0x03491B18 MOV X6, X31
	0x03491B1C STP X27, X31, [X31 + 0x8]
	0x03491B20 STRB W31, [X31]
	0x03491B24 BL 0x3495B60
	0x03491B28 MOVN W8, 0x1
	0x03491B2C STR W8, [X19], #0x8
	0x03491B30 LDR X0, [X26]
	0x03491B34 ADRP X21, 0xCA0000
	0x03491B38 LDR W8, [X0 + 0xE0]
	0x03491B3C LDR X21, [X21 + 0x470]
	0x03491B40 CBNZ W8, 0x3491B48
	0x03491B44 BL 0x1C16DFC
	0x03491B48 LDR X2, [X21]
	0x03491B4C MOV X0, X19
	0x03491B50 MOV X1, X20
	0x03491B54 BL 0x26322B0
	0x03491B58 LDP X20, X19, [X31 + 0x70]
	0x03491B5C LDP X22, X21, [X31 + 0x60]
	0x03491B60 LDP X24, X23, [X31 + 0x50]
	0x03491B64 LDP X26, X25, [X31 + 0x40]
	0x03491B68 LDP X28, X27, [X31 + 0x30]
	0x03491B6C LDR X30, [X31 + 0x20]
	0x03491B70 ADD X31, X31, 0x80
	0x03491B74 RET
	0x03491B78 BL 0x1C16F20
	0x03491B7C BL 0x1C16F20
	0x03491B80 BL 0x1C16F20
	0x03491B84 BL 0x1C16F20
	0x03491B88 BL 0x1C16F20
	0x03491B8C BL 0x1C16F20
	0x03491B90 B 0x3491BBC
	0x03491B94 B 0x3491BBC
	0x03491B98 B 0x3491BBC
	0x03491B9C B 0x3491BBC
	0x03491BA0 B 0x3491BBC
	0x03491BA4 B 0x3491BBC
	0x03491BA8 B 0x3491BBC
	0x03491BAC B 0x3491BBC
	0x03491BB0 B 0x3491BBC
	0x03491BB4 B 0x3491BBC
	0x03491BB8 B 0x3491BBC
	0x03491BBC MOV X20, X0
	0x03491BC0 CMP W1, 0x1
	0x03491BC4 B.NE 0x3491C60
	0x03491BC8 MOV X0, X20
	0x03491BCC BL 0x3EB1AD0
	0x03491BD0 MOV X20, X0
	0x03491BD4 ADRP X0, 0xC62000
	0x03491BD8 LDR X0, [X0 + 0x7D0]
	0x03491BDC BL 0x1C16D08
	0x03491BE0 LDR X8, [X20]
	0x03491BE4 LDR X1, [X8]
	0x03491BE8 BL 0x1C17270
	0x03491BEC TBZ X0, 0x0, 0x3491C38
	0x03491BF0 LDR X20, [X20]
	0x03491BF4 BL 0x3EB1AE0
	0x03491BF8 MOVN W8, 0x1
	0x03491BFC STR W8, [X19], #0x8
	0x03491C00 ADRP X0, 0xCA0000
	0x03491C04 LDR X0, [X0 + 0x168]
	0x03491C08 BL 0x1C16D08
	0x03491C0C LDR W8, [X0 + 0xE0]
	0x03491C10 CBNZ W8, 0x3491C18
	0x03491C14 BL 0x1C16DFC
	0x03491C18 ADRP X0, 0xCA0000
	0x03491C1C LDR X0, [X0 + 0x490]
	0x03491C20 BL 0x1C16D08
	0x03491C24 MOV X2, X0
	0x03491C28 MOV X0, X19
	0x03491C2C MOV X1, X20
	0x03491C30 BL 0x26324C8
	0x03491C34 B 0x3491B58
	0x03491C38 MOVZ W0, 0x8
	0x03491C3C BL 0x3EB1AF0
	0x03491C40 LDR X8, [X20]
	0x03491C44 STR X8, [X0]
	0x03491C48 ADRP X1, 0xA23000
	0x03491C4C ADD X1, X1, 0xE58
	0x03491C50 MOV X2, X31
	0x03491C54 BL 0x3EB1B00
	0x03491C58 MOV X20, X0
	0x03491C5C BL 0x3EB1AE0
	0x03491C60 MOV X0, X20
	0x03491C64 BL 0x1D2C690
	0x03491C68 BL 0x1990590
	0x03491C6C STR X30, [X31 - 0x30]!
	0x03491C70 STP X22, X21, [X31 + 0x10]
	0x03491C74 STP X20, X19, [X31 + 0x20]
	0x03491C78 ADRP X22, 0xF4C000
	0x03491C7C ADRP X21, 0xCA0000
	0x03491C80 LDRB W8, [X22 + 0x94B]
	0x03491C84 LDR X21, [X21 + 0x168]
	0x03491C88 MOV X19, X1
	0x03491C8C MOV X20, X0
	0x03491C90 TBNZ X8, 0x0, 0x3491CB4
	0x03491C94 ADRP X0, 0xCA0000
	0x03491C98 LDR X0, [X0 + 0x498]
	0x03491C9C BL 0x1C16CF4
	0x03491CA0 ADRP X0, 0xCA0000
	0x03491CA4 LDR X0, [X0 + 0x168]
	0x03491CA8 BL 0x1C16CF4
	0x03491CAC MOVZ W8, 0x1
	0x03491CB0 STRB W8, [X22 + 0x94B]
	0x03491CB4 LDR X0, [X21]
	0x03491CB8 ADRP X21, 0xCA0000
	0x03491CBC LDR W8, [X0 + 0xE0]
	0x03491CC0 LDR X21, [X21 + 0x498]
	0x03491CC4 CBNZ W8, 0x3491CCC
	0x03491CC8 BL 0x1C16DFC
	0x03491CCC LDR X2, [X21]
	0x03491CD0 ADD X0, X20, 0x8
	0x03491CD4 MOV X1, X19
	0x03491CD8 LDP X20, X19, [X31 + 0x20]
	0x03491CDC LDP X22, X21, [X31 + 0x10]
	0x03491CE0 LDR X30, [X31], #0x30
	0x03491CE4 B 0x2632228
	0x03491CE8 STR X30, [X31 - 0x30]!
	0x03491CEC STP X22, X21, [X31 + 0x10]
	0x03491CF0 STP X20, X19, [X31 + 0x20]
	0x03491CF4 ADRP X20, 0xF4C000
	0x03491CF8 LDRB W8, [X20 + 0x94C]
	0x03491CFC MOV X19, X0
	0x03491D00 TBNZ X8, 0x0, 0x3491DA8
	0x03491D04 ADRP X0, 0xCA0000
	0x03491D08 LDR X0, [X0 + 0x5E8]
	0x03491D0C BL 0x1C16CF4
	0x03491D10 ADRP X0, 0xC65000
	0x03491D14 LDR X0, [X0 + 0x280]
	0x03491D18 BL 0x1C16CF4
	0x03491D1C ADRP X0, 0xC62000
	0x03491D20 LDR X0, [X0 + 0x7D0]
	0x03491D24 BL 0x1C16CF4
	0x03491D28 ADRP X0, 0xC6A000
	0x03491D2C LDR X0, [X0 + 0x600]
	0x03491D30 BL 0x1C16CF4
	0x03491D34 ADRP X0, 0xCA0000
	0x03491D38 LDR X0, [X0 + 0x5A8]
	0x03491D3C BL 0x1C16CF4
	0x03491D40 ADRP X0, 0xCA0000
	0x03491D44 LDR X0, [X0 + 0x5F0]
	0x03491D48 BL 0x1C16CF4
	0x03491D4C ADRP X0, 0xCA0000
	0x03491D50 LDR X0, [X0 + 0x5F8]
	0x03491D54 BL 0x1C16CF4
	0x03491D58 ADRP X0, 0xCA0000
	0x03491D5C LDR X0, [X0 + 0x420]
	0x03491D60 BL 0x1C16CF4
	0x03491D64 ADRP X0, 0xCA0000
	0x03491D68 LDR X0, [X0 + 0x600]
	0x03491D6C BL 0x1C16CF4
	0x03491D70 ADRP X0, 0xCA0000
	0x03491D74 LDR X0, [X0 + 0x550]
	0x03491D78 BL 0x1C16CF4
	0x03491D7C ADRP X0, 0xCA0000
	0x03491D80 LDR X0, [X0 + 0x608]
	0x03491D84 BL 0x1C16CF4
	0x03491D88 ADRP X0, 0xCA0000
	0x03491D8C LDR X0, [X0 + 0x610]
	0x03491D90 BL 0x1C16CF4
	0x03491D94 ADRP X0, 0xC62000
	0x03491D98 LDR X0, [X0 + 0x988]
	0x03491D9C BL 0x1C16CF4
	0x03491DA0 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xF4D000
	013 Move W8, [X20+2367]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {78}
	019 Move X0, 0xCA1000
	020 Move X0, [X0+1328]
	021 Call 0x1C17CF4
	022 Move X0, 0xCA1000
	023 Move X0, [X0+1136]
	024 Call 0x1C17CF4
	025 Move X0, 0xCA1000
	026 Move X0, [X0+360]
	027 Call 0x1C17CF4
	028 Move X0, 0xC63000
	029 Move X0, [X0+1560]
	030 Call 0x1C17CF4
	031 Move X0, 0xC6C000
	032 Move X0, [X0+2536]
	033 Call 0x1C17CF4
	034 Move X0, 0xC63000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0xC6A000
	038 Move X0, [X0+744]
	039 Call 0x1C17CF4
	040 Move X0, 0xC63000
	041 Move X0, [X0+2760]
	042 Call 0x1C17CF4
	043 Move X0, 0xCA1000
	044 Move X0, [X0+1144]
	045 Call 0x1C17CF4
	046 Move X0, 0xCA1000
	047 Move X0, [X0+1152]
	048 Call 0x1C17CF4
	049 Move X0, 0xCA1000
	050 Move X0, [X0+1160]
	051 Call 0x1C17CF4
	052 Move X0, 0xCA1000
	053 Move X0, [X0+1336]
	054 Call 0x1C17CF4
	055 Move X0, 0xCA1000
	056 Move X0, [X0+1056]
	057 Call 0x1C17CF4
	058 Move X0, 0xCA1000
	059 Move X0, [X0+1344]
	060 Call 0x1C17CF4
	061 Move X0, 0xCA1000
	062 Move X0, [X0+1352]
	063 Call 0x1C17CF4
	064 Move X0, 0xCA1000
	065 Move X0, [X0+1360]
	066 Call 0x1C17CF4
	067 Move X0, 0xCA1000
	068 Move X0, [X0+1368]
	069 Call 0x1C17CF4
	070 Move X0, 0xCA1000
	071 Move X0, [X0+1376]
	072 Call 0x1C17CF4
	073 Move X0, 0xCA1000
	074 Move X0, [X0+1384]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+2367], W8
	078 Move [X31+8], X31
	079 Move X25, 0xCA1000
	080 Move W8, [X19]
	081 Move X25, [X25+360]
	082 Compare W8, 0
	083 JumpIfEqual {302}
	084 Move X8, 0xC6A000
	085 Move X8, [X8+744]
	086 Move X20, [X19+56]
	087 Move X0, [X8]
	088 Call 0x1C17F10
	089 Move X22, X0
	090 Move X1, X31
	091 Call Random..ctor, X0
	092 Move X8, 0xC63000
	093 Move X8, [X8+1560]
	094 Move X0, [X8]
	095 Move W1, 16
	096 Call 0x1C17D6C
	097 Compare X22, 0
	098 JumpIfEqual {342}
	099 Move X8, [X22]
	100 Move X21, X0
	101 Move X9, [X8+456]
	102 Move X2, [X8+464]
	103 Move X0, X22
	104 Move X1, X21
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, 0xC6C000
	107 Move X8, [X8+2536]
	108 Move X0, [X8]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X21
	114 Move X1, X31
	115 Call Convert.ToBase64String, X0
	116 Move X8, [X19+32]
	117 Compare X8, 0
	118 JumpIfEqual {343}
	119 Move X21, X0
	120 Move X0, [X8+32]
	121 Call WebSocketClientFactory.GetAdditionalHeaders, X0
	122 Move X8, 0xC63000
	123 Move X8, [X8+2760]
	124 Move X22, X0
	125 Move X0, [X8]
	126 Move W1, 13
	127 Call 0x1C17D6C
	128 Move X23, X0
	129 Compare X0, 0
	130 JumpIfEqual {344}
	131 Move W8, [X23+24]
	132 Compare W8, 0
	133 JumpIfEqual {345}
	134 Move X8, 0xCA1000
	135 Move X8, [X8+1352]
	136 Move X8, [X8]
	137 Move [X23+32], X8
	138 Move X0, [X19+40]
	139 Compare X0, 0
	140 JumpIfEqual {346}
	141 Move X1, X31
	142 Call Uri.get_PathAndQuery, X0
	143 Move W8, [X23+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move [X23+40], X0
	147 Move X8, 0xCA1000
	148 Move X8, [X8+1368]
	149 Move X8, [X8]
	150 Move [X23+48], X8
	151 Move X0, [X19+40]
	152 Compare X0, 0
	153 JumpIfEqual {349}
	154 Move X1, X31
	155 Call Uri.get_Host, X0
	156 Move X24, X0
	157 Move X0, [X19+40]
	158 Compare X0, 0
	159 JumpIfEqual {350}
	160 Move X1, X31
	161 Call Uri.get_Port, X0
	162 Move X27, 0xC63000
	163 Move X27, [X27+1880]
	164 Move [X31+4], W0
	165 Move X8, [X27]
	166 Add X1, X31, 4
	167 Move X0, X8
	168 Call 0x1C17E04
	169 Move X8, 0xCA1000
	170 Move X8, [X8+1336]
	171 Move X2, X0
	172 Move X0, [X8]
	173 Move X1, X24
	174 Move X3, X31
	175 Call String.Format, X0, X1, X2
	176 Move W8, [X23+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move [X23+56], X0
	180 Move X9, 0xCA1000
	181 Move X9, [X9+1376]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X9, [X9]
	184 Move [X23+64], X9
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move [X23+72], X21
	187 Move X26, 0xCA1000
	188 Move X26, [X26+1056]
	189 Move X8, [X26]
	190 Move [X23+80], X8
	191 Move X0, [X19+40]
	192 Compare X0, 0
	193 JumpIfEqual {355}
	194 Move X1, X31
	195 Call Uri.get_Host, X0
	196 Move X24, X0
	197 Move X0, [X19+40]
	198 Compare X0, 0
	199 JumpIfEqual {356}
	200 Move X1, X31
	201 Call Uri.get_Port, X0
	202 Move X8, [X27]
	203 Move [X31], W0
	204 Add X1, X31, 0
	205 Move X0, X8
	206 Call 0x1C17E04
	207 Move X8, 0xCA1000
	208 Move X8, [X8+1344]
	209 Move X2, X0
	210 Move X0, [X8]
	211 Move X1, X24
	212 Move X3, X31
	213 Call String.Format, X0, X1, X2
	214 Move W8, [X23+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move [X23+88], X0
	218 Move X9, 0xCA1000
	219 Move X9, [X9+1360]
	220 Move X9, [X9]
	221 Move [X23+96], X9
	222 Move X9, [X19+32]
	223 Compare X9, 0
	224 JumpIfEqual {359}
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X9, [X9+56]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move [X23+104], X9
	229 Move X9, [X26]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move [X23+112], X9
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move [X23+120], X22
	234 Move X8, 0xCA1000
	235 Move X8, [X8+1384]
	236 Move X8, [X8]
	237 Move [X23+128], X8
	238 Move X0, X23
	239 Move X1, X31
	240 Call String.Concat, X0
	241 Move X22, X0
	242 Move X0, X31
	243 Call Encoding.get_UTF8
	244 Compare X0, 0
	245 JumpIfEqual {364}
	246 Move X8, [X0]
	247 Move X9, [X8+616]
	248 Move X2, [X8+624]
	249 Move X1, X22
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move X1, X0
	252 Compare X1, 0
	253 JumpIfEqual {365}
	254 Move X0, [X19+48]
	255 Compare X0, 0
	256 JumpIfEqual {366}
	257 Move X8, [X0]
	258 Move W3, [X1+24]
	259 Move X9, [X8+904]
	260 Move X4, [X8+912]
	261 Move W2, W31
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Compare X20, 0
	264 JumpIfEqual {367}
	265 Move X1, [X19+48]
	266 Move X4, [X19+64]
	267 Move X3, [X19+32]
	268 Move X0, X20
	269 Move X2, X21
	270 Call WebSocketClientFactory.ConnectAsync, X0, X1, X2, X3, X4
	271 Compare X0, 0
	272 JumpIfEqual {368}
	273 Move X8, 0xCA1000
	274 Move X8, [X8+1160]
	275 Move X1, [X8]
	276 Call Task`1<Object>.GetAwaiter, X0
	277 Move X8, 0xCA1000
	278 Move X8, [X8+1152]
	279 Move [X31+8], X0
	280 Move X1, [X8]
	281 Add X0, X31, 8
	282 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfEqual {309}
	287 Move [X19], W31
	288 Move X8, [X31+8]
	289 Move [X19+72], X8
	290 Move X0, [X25]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1C17DFC
	295 Move X8, 0xCA1000
	296 Move X8, [X8+1328]
	297 Add X0, X19, 8
	298 Move X3, [X8]
	299 Add X1, X31, 8
	300 Move X2, X19
	301 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	302 Move X8, [X19+72]
	303 Move TEMP, 0
	304 Not TEMP
	305 Move W9, TEMP
	306 Move [X31+8], X8
	307 Move [X19+72], X31
	308 Move [X19], W9
	309 Move X8, 0xCA1000
	310 Move X8, [X8+1144]
	311 Add X0, X31, 8
	312 Move X1, [X8]
	313 Call TaskAwaiter`1<Object>.GetResult, X0
	314 Move TEMP, 1
	315 Not TEMP
	316 Move W8, TEMP
	317 Move [X19+8], W8
	318 Move X20, X0
	319 Move X0, [X25]
	320 Move X21, 0xCA1000
	321 Move W8, [X0+224]
	322 Move X21, [X21+1136]
	323 Compare W8, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X2, [X21]
	327 Move X0, X19
	328 Move X1, X20
	329 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	330 Move X20, [X31+80]
	331 Move X19, [X31+88]
	332 Move X22, [X31+64]
	333 Move X21, [X31+72]
	334 Move X24, [X31+48]
	335 Move X23, [X31+56]
	336 Move X26, [X31+32]
	337 Move X25, [X31+40]
	338 Move X30, [X31+16]
	339 Move X27, [X31+24]
	340 Add X31, X31, 96
	341 Return 
	342 Call 0x1C17F20
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Call 0x1C17F28
	346 Call 0x1C17F20
	347 Call 0x1C17F28
	348 Call 0x1C17F28
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F28
	352 Call 0x1C17F28
	353 Call 0x1C17F28
	354 Call 0x1C17F28
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F28
	358 Call 0x1C17F28
	359 Call 0x1C17F20
	360 Call 0x1C17F28
	361 Call 0x1C17F28
	362 Call 0x1C17F28
	363 Call 0x1C17F28
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Move X20, X0
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move X0, X20
	372 Call 0x3EB2AD0
	373 Move X20, X0
	374 Move X0, 0xC63000
	375 Move X0, [X0+2000]
	376 Call 0x1C17D08
	377 Move X8, [X20]
	378 Move X1, [X8]
	379 Call 0x1C18270
	380 Move TEMP, X0
	381 And TEMP, TEMP, 1
	382 Compare TEMP, 1
	383 JumpIfNotEqual {404}
	384 Move X20, [X20]
	385 Call 0x3EB2AE0
	386 Move TEMP, 1
	387 Not TEMP
	388 Move W8, TEMP
	389 Move [X19+8], W8
	390 Move X0, 0xCA1000
	391 Move X0, [X0+360]
	392 Call 0x1C17D08
	393 Move W8, [X0+224]
	394 Compare W8, 0
	395 JumpIfNotEqual {397}
	396 Call 0x1C17DFC
	397 Move X0, 0xCA1000
	398 Move X0, [X0+1168]
	399 Call 0x1C17D08
	400 Move X2, X0
	401 Move X0, X19
	402 Move X1, X20
	403 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	404 Move W0, 8
	405 Call 0x3EB2AF0
	406 Move X8, [X20]
	407 Move [X0], X8
	408 Move X1, 0xA24000
	409 Add X1, X1, 3672
	410 Move X2, X31
	411 Call 0x3EB2B00
	412 Move X20, X0
	413 Call 0x3EB2AE0
	414 Move X0, X20
	415 Call 0x1D2D690
	416 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03491DA4 STRB W8, [X20 + 0x94C]
	0x03491DA8 STR X31, [X31 + 0x8]
	0x03491DAC ADRP X22, 0xC65000
	0x03491DB0 LDR W8, [X19]
	0x03491DB4 LDR X22, [X22 + 0x280]
	0x03491DB8 CBZ W8, 0x3491EBC
	0x03491DBC CMP W8, 0x1
	0x03491DC0 B.EQ 0x3491E44
	0x03491DC4 CMP W8, 0x2
	0x03491DC8 B.NE 0x3491ED4
	0x03491DCC LDR X8, [X19 + 0x50]
	0x03491DD0 MOVN W9, 0x0
	0x03491DD4 STR X8, [X31 + 0x8]
	0x03491DD8 STR X31, [X19 + 0x50]
	0x03491DDC STR W9, [X19]
	0x03491DE0 ADD X0, X31, 0x8
	0x03491DE4 MOV X1, X31
	0x03491DE8 BL 0x32C3B4C
	0x03491DEC LDR X20, [X19 + 0x40]
	0x03491DF0 CBZ X20, 0x349215C
	0x03491DF4 ADRP X8, 0xC62000
	0x03491DF8 LDR X8, [X8 + 0x7D0]
	0x03491DFC LDR X9, [X20]
	0x03491E00 LDR X8, [X8]
	0x03491E04 LDRB W11, [X9 + 0x130]
	0x03491E08 LDRB W10, [X8 + 0x130]
	0x03491E0C CMP W11, W10
	0x03491E10 B.CC 0x349215C
	0x03491E14 LDR X9, [X9 + 0xC8]
	0x03491E18 ADD X9, X9, X10, 0x3, LSL
	0x03491E1C LDUR X9, [X9 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF4D000
	007 Move X21, 0xCA1000
	008 Move W8, [X22+2368]
	009 Move X21, [X21+360]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCA1000
	017 Move X0, [X0+1176]
	018 Call 0x1C17CF4
	019 Move X0, 0xCA1000
	020 Move X0, [X0+360]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2368], W8
	024 Move X0, [X21]
	025 Move X21, 0xCA1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1176]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

