Type: Nakama.Ninja.WebSockets.WebSocketClientFactory/<ConnectAsync>d__5

Method: System.Void MoveNext()

Disassembly:
	0x034905A8 B 0x34905C4
	0x034905AC B 0x34905C4
	0x034905B0 B 0x34905C4
	0x034905B4 B 0x34905C4
	0x034905B8 B 0x34905C4
	0x034905BC B 0x34905C4
	0x034905C0 B 0x34905C4
	0x034905C4 MOV X20, X0
	0x034905C8 CMP W1, 0x1
	0x034905CC B.NE 0x349066C
	0x034905D0 MOV X0, X20
	0x034905D4 BL 0x3EB1AD0
	0x034905D8 MOV X20, X0
	0x034905DC ADRP X0, 0xC63000
	0x034905E0 LDR X0, [X0 + 0x7D0]
	0x034905E4 BL 0x1C16D08
	0x034905E8 LDR X8, [X20]
	0x034905EC LDR X1, [X8]
	0x034905F0 BL 0x1C17270
	0x034905F4 TBZ X0, 0x0, 0x3490644
	0x034905F8 LDR X20, [X20]
	0x034905FC BL 0x3EB1AE0
	0x03490600 MOVN W8, 0x1
	0x03490604 STR X31, [X19 + 0x50]
	0x03490608 STR W8, [X19], #0x8
	0x0349060C ADRP X0, 0xCA1000
	0x03490610 LDR X0, [X0 + 0x438]
	0x03490614 BL 0x1C16D08
	0x03490618 LDR W8, [X0 + 0xE0]
	0x0349061C CBNZ W8, 0x3490624
	0x03490620 BL 0x1C16DFC
	0x03490624 ADRP X0, 0xCA1000
	0x03490628 LDR X0, [X0 + 0x520]
	0x0349062C BL 0x1C16D08
	0x03490630 MOV X2, X0
	0x03490634 MOV X0, X19
	0x03490638 MOV X1, X20
	0x0349063C BL 0x26324C8
	0x03490640 B 0x34903B4
	0x03490644 MOVZ W0, 0x8
	0x03490648 BL 0x3EB1AF0
	0x0349064C LDR X8, [X20]
	0x03490650 STR X8, [X0]
	0x03490654 ADRP X1, 0xA24000
	0x03490658 ADD X1, X1, 0xE58
	0x0349065C MOV X2, X31
	0x03490660 BL 0x3EB1B00
	0x03490664 MOV X20, X0
	0x03490668 BL 0x3EB1AE0
	0x0349066C MOV X0, X20
	0x03490670 BL 0x1D2C690
	0x03490674 BL 0x1990590
	0x03490678 STR X30, [X31 - 0x30]!
	0x0349067C STP X22, X21, [X31 + 0x10]
	0x03490680 STP X20, X19, [X31 + 0x20]
	0x03490684 ADRP X22, 0xF4D000
	0x03490688 ADRP X21, 0xCA1000
	0x0349068C LDRB W8, [X22 + 0x93E]
	0x03490690 LDR X21, [X21 + 0x438]
	0x03490694 MOV X19, X1
	0x03490698 MOV X20, X0
	0x0349069C TBNZ X8, 0x0, 0x34906C0
	0x034906A0 ADRP X0, 0xCA1000
	0x034906A4 LDR X0, [X0 + 0x528]
	0x034906A8 BL 0x1C16CF4
	0x034906AC ADRP X0, 0xCA1000
	0x034906B0 LDR X0, [X0 + 0x438]
	0x034906B4 BL 0x1C16CF4
	0x034906B8 MOVZ W8, 0x1
	0x034906BC STRB W8, [X22 + 0x93E]
	0x034906C0 LDR X0, [X21]
	0x034906C4 ADRP X21, 0xCA1000
	0x034906C8 LDR W8, [X0 + 0xE0]
	0x034906CC LDR X21, [X21 + 0x528]
	0x034906D0 CBNZ W8, 0x34906D8
	0x034906D4 BL 0x1C16DFC
	0x034906D8 LDR X2, [X21]
	0x034906DC ADD X0, X20, 0x8
	0x034906E0 MOV X1, X19
	0x034906E4 LDP X20, X19, [X31 + 0x20]
	0x034906E8 LDP X22, X21, [X31 + 0x10]
	0x034906EC LDR X30, [X31], #0x30
	0x034906F0 B 0x2632228
	0x034906F4 SUB X31, X31, 0x60
	0x034906F8 STP X30, X27, [X31 + 0x10]
	0x034906FC STP X26, X25, [X31 + 0x20]
	0x03490700 STP X24, X23, [X31 + 0x30]
	0x03490704 STP X22, X21, [X31 + 0x40]
	0x03490708 STP X20, X19, [X31 + 0x50]
	0x0349070C ADRP X20, 0xF4D000
	0x03490710 LDRB W8, [X20 + 0x93F]
	0x03490714 MOV X19, X0
	0x03490718 TBNZ X8, 0x0, 0x3490808
	0x0349071C ADRP X0, 0xCA1000
	0x03490720 LDR X0, [X0 + 0x530]
	0x03490724 BL 0x1C16CF4
	0x03490728 ADRP X0, 0xCA1000
	0x0349072C LDR X0, [X0 + 0x470]
	0x03490730 BL 0x1C16CF4
	0x03490734 ADRP X0, 0xCA1000
	0x03490738 LDR X0, [X0 + 0x168]
	0x0349073C BL 0x1C16CF4
	0x03490740 ADRP X0, 0xC63000
	0x03490744 LDR X0, [X0 + 0x618]
	0x03490748 BL 0x1C16CF4
	0x0349074C ADRP X0, 0xC6C000
	0x03490750 LDR X0, [X0 + 0x9E8]
	0x03490754 BL 0x1C16CF4
	0x03490758 ADRP X0, 0xC63000
	0x0349075C LDR X0, [X0 + 0x758]
	0x03490760 BL 0x1C16CF4
	0x03490764 ADRP X0, 0xC6A000
	0x03490768 LDR X0, [X0 + 0x2E8]
	0x0349076C BL 0x1C16CF4
	0x03490770 ADRP X0, 0xC63000
	0x03490774 LDR X0, [X0 + 0xAC8]
	0x03490778 BL 0x1C16CF4
	0x0349077C ADRP X0, 0xCA1000
	0x03490780 LDR X0, [X0 + 0x478]
	0x03490784 BL 0x1C16CF4
	0x03490788 ADRP X0, 0xCA1000
	0x0349078C LDR X0, [X0 + 0x480]
	0x03490790 BL 0x1C16CF4
	0x03490794 ADRP X0, 0xCA1000
	0x03490798 LDR X0, [X0 + 0x488]
	0x0349079C BL 0x1C16CF4
	0x034907A0 ADRP X0, 0xCA1000
	0x034907A4 LDR X0, [X0 + 0x538]
	0x034907A8 BL 0x1C16CF4
	0x034907AC ADRP X0, 0xCA1000
	0x034907B0 LDR X0, [X0 + 0x420]
	0x034907B4 BL 0x1C16CF4
	0x034907B8 ADRP X0, 0xCA1000
	0x034907BC LDR X0, [X0 + 0x540]
	0x034907C0 BL 0x1C16CF4
	0x034907C4 ADRP X0, 0xCA1000
	0x034907C8 LDR X0, [X0 + 0x548]
	0x034907CC BL 0x1C16CF4
	0x034907D0 ADRP X0, 0xCA1000
	0x034907D4 LDR X0, [X0 + 0x550]
	0x034907D8 BL 0x1C16CF4
	0x034907DC ADRP X0, 0xCA1000
	0x034907E0 LDR X0, [X0 + 0x558]
	0x034907E4 BL 0x1C16CF4
	0x034907E8 ADRP X0, 0xCA1000
	0x034907EC LDR X0, [X0 + 0x560]
	0x034907F0 BL 0x1C16CF4
	0x034907F4 ADRP X0, 0xCA1000
	0x034907F8 LDR X0, [X0 + 0x568]
	0x034907FC BL 0x1C16CF4
	0x03490800 MOVZ W8, 0x1
	0x03490804 STRB W8, [X20 + 0x93F]
	0x03490808 STR X31, [X31 + 0x8]
	0x0349080C ADRP X25, 0xCA1000
	0x03490810 LDR W8, [X19]
	0x03490814 LDR X25, [X25 + 0x168]
	0x03490818 CBZ W8, 0x3490B64
	0x0349081C ADRP X8, 0xC6A000
	0x03490820 LDR X8, [X8 + 0x2E8]
	0x03490824 LDR X20, [X19 + 0x38]
	0x03490828 LDR X0, [X8]
	0x0349082C BL 0x1C16F10
	0x03490830 MOV X22, X0
	0x03490834 MOV X1, X31
	0x03490838 BL 0x338E3CC
	0x0349083C ADRP X8, 0xC63000
	0x03490840 LDR X8, [X8 + 0x618]
	0x03490844 LDR X0, [X8]
	0x03490848 MOVZ W1, 0x10
	0x0349084C BL 0x1C16D6C
	0x03490850 CBZ X22, 0x3490BDC
	0x03490854 LDR X8, [X22]
	0x03490858 MOV X21, X0
	0x0349085C LDP X9, X2, [X8 + 0x1C8]
	0x03490860 MOV X0, X22
	0x03490864 MOV X1, X21
	0x03490868 BLR X9
	0x0349086C ADRP X8, 0xC6C000
	0x03490870 LDR X8, [X8 + 0x9E8]
	0x03490874 LDR X0, [X8]
	0x03490878 LDR W8, [X0 + 0xE0]
	0x0349087C CBNZ W8, 0x3490884
	0x03490880 BL 0x1C16DFC
	0x03490884 MOV X0, X21
	0x03490888 MOV X1, X31
	0x0349088C BL 0x33225A0
	0x03490890 LDR X8, [X19 + 0x20]
	0x03490894 CBZ X8, 0x3490BE0
	0x03490898 MOV X21, X0
	0x0349089C LDR X0, [X8 + 0x20]
	0x034908A0 BL 0x348EF74
	0x034908A4 ADRP X8, 0xC63000
	0x034908A8 LDR X8, [X8 + 0xAC8]
	0x034908AC MOV X22, X0
	0x034908B0 LDR X0, [X8]
	0x034908B4 MOVZ W1, 0xD
	0x034908B8 BL 0x1C16D6C
	0x034908BC MOV X23, X0
	0x034908C0 CBZ X0, 0x3490BE4
	0x034908C4 LDR W8, [X23 + 0x18]
	0x034908C8 CBZ W8, 0x3490BE8
	0x034908CC ADRP X8, 0xCA1000
	0x034908D0 LDR X8, [X8 + 0x548]
	0x034908D4 LDR X8, [X8]
	0x034908D8 STR X8, [X23 + 0x20]
	0x034908DC LDR X0, [X19 + 0x28]
	0x034908E0 CBZ X0, 0x3490BEC
	0x034908E4 MOV X1, X31
	0x034908E8 BL 0x361C058
	0x034908EC LDR W8, [X23 + 0x18]
	0x034908F0 CMP W8, 0x1
	0x034908F4 B.LS 0x3490BF0
	0x034908F8 CMP W8, 0x2
	0x034908FC STR X0, [X23 + 0x28]
	0x03490900 B.EQ 0x3490BF4
	0x03490904 ADRP X8, 0xCA1000
	0x03490908 LDR X8, [X8 + 0x558]
	0x0349090C LDR X8, [X8]
	0x03490910 STR X8, [X23 + 0x30]
	0x03490914 LDR X0, [X19 + 0x28]
	0x03490918 CBZ X0, 0x3490BF8
	0x0349091C MOV X1, X31
	0x03490920 BL 0x361C394
	0x03490924 MOV X24, X0
	0x03490928 LDR X0, [X19 + 0x28]
	0x0349092C CBZ X0, 0x3490BFC
	0x03490930 MOV X1, X31
	0x03490934 BL 0x361CC2C
	0x03490938 ADRP X27, 0xC63000
	0x0349093C LDR X27, [X27 + 0x758]
	0x03490940 STR W0, [X31 + 0x4]
	0x03490944 LDR X8, [X27]
	0x03490948 ADD X1, X31, 0x4
	0x0349094C MOV X0, X8
	0x03490950 BL 0x1C16E04
	0x03490954 ADRP X8, 0xCA1000
	0x03490958 LDR X8, [X8 + 0x538]
	0x0349095C MOV X2, X0
	0x03490960 LDR X0, [X8]
	0x03490964 MOV X1, X24
	0x03490968 MOV X3, X31
	0x0349096C BL 0x3227BD4
	0x03490970 LDR W8, [X23 + 0x18]
	0x03490974 CMP W8, 0x3
	0x03490978 B.LS 0x3490C00
	0x0349097C CMP W8, 0x4
	0x03490980 STR X0, [X23 + 0x38]
	0x03490984 B.EQ 0x3490C04
	0x03490988 ADRP X9, 0xCA1000
	0x0349098C LDR X9, [X9 + 0x560]
	0x03490990 CMP W8, 0x5
	0x03490994 LDR X9, [X9]
	0x03490998 STR X9, [X23 + 0x40]
	0x0349099C B.LS 0x3490C08
	0x034909A0 CMP W8, 0x6
	0x034909A4 STR X21, [X23 + 0x48]
	0x034909A8 B.EQ 0x3490C0C
	0x034909AC ADRP X26, 0xCA1000
	0x034909B0 LDR X26, [X26 + 0x420]
	0x034909B4 LDR X8, [X26]
	0x034909B8 STR X8, [X23 + 0x50]
	0x034909BC LDR X0, [X19 + 0x28]
	0x034909C0 CBZ X0, 0x3490C10
	0x034909C4 MOV X1, X31
	0x034909C8 BL 0x361C394
	0x034909CC MOV X24, X0
	0x034909D0 LDR X0, [X19 + 0x28]
	0x034909D4 CBZ X0, 0x3490C14
	0x034909D8 MOV X1, X31
	0x034909DC BL 0x361CC2C
	0x034909E0 LDR X8, [X27]
	0x034909E4 STR W0, [X31]
	0x034909E8 ADD X1, X31, 0x0
	0x034909EC MOV X0, X8
	0x034909F0 BL 0x1C16E04
	0x034909F4 ADRP X8, 0xCA1000
	0x034909F8 LDR X8, [X8 + 0x540]
	0x034909FC MOV X2, X0
	0x03490A00 LDR X0, [X8]
	0x03490A04 MOV X1, X24
	0x03490A08 MOV X3, X31
	0x03490A0C BL 0x3227BD4
	0x03490A10 LDR W8, [X23 + 0x18]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xF4E000
	010 Move W8, [X20+2359]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {54}
	016 Move X0, 0xCA2000
	017 Move X0, [X0+1184]
	018 Call 0x1C17CF4
	019 Move X0, 0xCA2000
	020 Move X0, [X0+1192]
	021 Call 0x1C17CF4
	022 Move X0, 0xCA2000
	023 Move X0, [X0+1136]
	024 Call 0x1C17CF4
	025 Move X0, 0xCA2000
	026 Move X0, [X0+360]
	027 Call 0x1C17CF4
	028 Move X0, 0xCA2000
	029 Move X0, [X0+1200]
	030 Call 0x1C17CF4
	031 Move X0, 0xCA2000
	032 Move X0, [X0+1144]
	033 Call 0x1C17CF4
	034 Move X0, 0xCA2000
	035 Move X0, [X0+1152]
	036 Call 0x1C17CF4
	037 Move X0, 0xCA2000
	038 Move X0, [X0+1208]
	039 Call 0x1C17CF4
	040 Move X0, 0xCA2000
	041 Move X0, [X0+1160]
	042 Call 0x1C17CF4
	043 Move X0, 0xCA2000
	044 Move X0, [X0+1216]
	045 Call 0x1C17CF4
	046 Move X0, 0xCA1000
	047 Move X0, [X0+3560]
	048 Call 0x1C17CF4
	049 Move X0, 0xCA2000
	050 Move X0, [X0+1224]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+2359], W8
	054 Move [X31+24], X31
	055 Move [X31+8], X31
	056 Move X24, 0xCA2000
	057 Move W8, [X19]
	058 Move X20, [X19+40]
	059 Move X24, [X24+360]
	060 Compare W8, 0
	061 JumpIfEqual {70}
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X19+88]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W9, TEMP
	067 Move [X31+8], X8
	068 Move [X19+88], X31
	069 Move [X19], W9
	070 Move X8, [X19+80]
	071 Move TEMP, 0
	072 Not TEMP
	073 Move W9, TEMP
	074 Move [X31+24], X8
	075 Move [X19+80], X31
	076 Move [X19], W9
	077 Move X0, X31
	078 Call Guid.NewGuid
	079 Move X8, [X19+32]
	080 Move [X19+64], X0
	081 Move [X19+72], X1
	082 Compare X8, 0
	083 JumpIfEqual {246}
	084 Move X0, X8
	085 Move X1, X31
	086 Call Uri.get_Host, X0
	087 Move X21, X0
	088 Move X0, [X19+32]
	089 Compare X0, 0
	090 JumpIfEqual {247}
	091 Move X1, X31
	092 Call Uri.get_Port, X0
	093 Move W22, W0
	094 Move X0, [X19+32]
	095 Compare X0, 0
	096 JumpIfEqual {248}
	097 Move X1, X31
	098 Call Uri.get_Scheme, X0
	099 Compare X0, 0
	100 JumpIfEqual {249}
	101 Move X1, X31
	102 Call String.ToLower, X0
	103 Move X8, 0xCA1000
	104 Move X8, [X8+3560]
	105 Move X23, X0
	106 Move X1, [X8]
	107 Move X2, X31
	108 Call String.op_Equality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {114}
	113 Move W3, 1
	114 Move X8, 0xCA2000
	115 Move X8, [X8+1224]
	116 Move X1, [X8]
	117 Move X0, X23
	118 Move X2, X31
	119 Call String.op_Equality, X0, X1
	120 And W3, W0, 1
	121 Move X8, [X19+48]
	122 Compare X8, 0
	123 JumpIfEqual {250}
	124 Compare X20, 0
	125 JumpIfEqual {251}
	126 Move X9, [X20]
	127 Move X1, [X19+64]
	128 Move X2, [X19+72]
	129 Move X7, [X19+56]
	130 Move W4, [X8+24]
	131 Move X8, [X9+440]
	132 Move X9, [X9+448]
	133 Move X0, X20
	134 Move X5, X21
	135 Move W6, W22
	136 Move [X31], X9
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Compare X0, 0
	139 JumpIfEqual {252}
	140 Move X8, 0xCA2000
	141 Move X8, [X8+1216]
	142 Move X1, [X8]
	143 Call Task`1<Object>.GetAwaiter, X0
	144 Move X8, 0xCA2000
	145 Move X8, [X8+1208]
	146 Move [X31+24], X0
	147 Move X1, [X8]
	148 Add X0, X31, 24
	149 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {220}
	154 Move X8, 0xCA2000
	155 Move X8, [X8+1200]
	156 Add X0, X31, 24
	157 Move X1, [X8]
	158 Call TaskAwaiter`1<Object>.GetResult, X0
	159 Compare X20, 0
	160 JumpIfEqual {244}
	161 Move X5, [X19+48]
	162 Move X6, [X19+56]
	163 Move X3, [X19+32]
	164 Move X4, X0
	165 Move X0, X20
	166 Call WebSocketClientFactory.PerformHandshake, X0, X1, X2, X3, X4, X5
	167 Compare X0, 0
	168 JumpIfEqual {245}
	169 Move X8, 0xCA2000
	170 Move X8, [X8+1160]
	171 Move X1, [X8]
	172 Call Task`1<Object>.GetAwaiter, X0
	173 Move X8, 0xCA2000
	174 Move X8, [X8+1152]
	175 Move [X31+8], X0
	176 Move X1, [X8]
	177 Add X0, X31, 8
	178 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {204}
	183 Move X8, 0xCA2000
	184 Move X8, [X8+1144]
	185 Add X0, X31, 8
	186 Move X1, [X8]
	187 Call TaskAwaiter`1<Object>.GetResult, X0
	188 Move TEMP, 1
	189 Not TEMP
	190 Move W8, TEMP
	191 Move [X19+8], W8
	192 Move X20, X0
	193 Move X0, [X24]
	194 Move X21, 0xCA2000
	195 Move W8, [X0+224]
	196 Move X21, [X21+1136]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X2, [X21]
	201 Move X0, X19
	202 Move X1, X20
	203 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	204 Move W8, 1
	205 Move [X19], W8
	206 Move X8, [X31+8]
	207 Move [X19+88], X8
	208 Move X0, [X24]
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfNotEqual {213}
	212 Call 0x1C17DFC
	213 Move X8, 0xCA2000
	214 Move X8, [X8+1184]
	215 Add X0, X19, 8
	216 Move X3, [X8]
	217 Add X1, X31, 8
	218 Move X2, X19
	219 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	220 Move [X19], W31
	221 Move X8, [X31+24]
	222 Move [X19+80], X8
	223 Move X0, [X24]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X8, 0xCA2000
	229 Move X8, [X8+1192]
	230 Add X0, X19, 8
	231 Move X3, [X8]
	232 Add X1, X31, 24
	233 Move X2, X19
	234 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	235 Move X20, [X31+64]
	236 Move X19, [X31+72]
	237 Move X22, [X31+48]
	238 Move X21, [X31+56]
	239 Move X24, [X31+32]
	240 Move X23, [X31+40]
	241 Move X30, [X31+16]
	242 Add X31, X31, 80
	243 Return 
	244 Call 0x1C17F20
	245 Call 0x1C17F20
	246 Call 0x1C17F20
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Move X20, X0
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X0, X20
	256 Call 0x3EB2AD0
	257 Move X20, X0
	258 Move X0, 0xC64000
	259 Move X0, [X0+2000]
	260 Call 0x1C17D08
	261 Move X8, [X20]
	262 Move X1, [X8]
	263 Call 0x1C18270
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {288}
	268 Move X20, [X20]
	269 Call 0x3EB2AE0
	270 Move TEMP, 1
	271 Not TEMP
	272 Move W8, TEMP
	273 Move [X19+8], W8
	274 Move X0, 0xCA2000
	275 Move X0, [X0+360]
	276 Call 0x1C17D08
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move X0, 0xCA2000
	282 Move X0, [X0+1168]
	283 Call 0x1C17D08
	284 Move X2, X0
	285 Move X0, X19
	286 Move X1, X20
	287 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	288 Move W0, 8
	289 Call 0x3EB2AF0
	290 Move X8, [X20]
	291 Move [X0], X8
	292 Move X1, 0xA25000
	293 Add X1, X1, 3672
	294 Move X2, X31
	295 Call 0x3EB2B00
	296 Move X20, X0
	297 Call 0x3EB2AE0
	298 Move X0, X20
	299 Call 0x1D2D690
	300 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03490A14 CMP W8, 0x7
	0x03490A18 B.LS 0x3490C18
	0x03490A1C CMP W8, 0x8
	0x03490A20 STR X0, [X23 + 0x58]
	0x03490A24 B.EQ 0x3490C1C
	0x03490A28 ADRP X9, 0xCA1000
	0x03490A2C LDR X9, [X9 + 0x550]
	0x03490A30 LDR X9, [X9]
	0x03490A34 STR X9, [X23 + 0x60]
	0x03490A38 LDR X9, [X19 + 0x20]
	0x03490A3C CBZ X9, 0x3490C20
	0x03490A40 CMP W8, 0x9
	0x03490A44 B.LS 0x3490C24
	0x03490A48 LDR X9, [X9 + 0x38]
	0x03490A4C CMP W8, 0xA
	0x03490A50 STR X9, [X23 + 0x68]
	0x03490A54 B.EQ 0x3490C28
	0x03490A58 LDR X9, [X26]
	0x03490A5C CMP W8, 0xB
	0x03490A60 STR X9, [X23 + 0x70]
	0x03490A64 B.LS 0x3490C2C
	0x03490A68 CMP W8, 0xC
	0x03490A6C STR X22, [X23 + 0x78]
	0x03490A70 B.EQ 0x3490C30
	0x03490A74 ADRP X8, 0xCA1000
	0x03490A78 LDR X8, [X8 + 0x568]
	0x03490A7C LDR X8, [X8]
	0x03490A80 STR X8, [X23 + 0x80]
	0x03490A84 MOV X0, X23
	0x03490A88 MOV X1, X31
	0x03490A8C BL 0x32278CC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF4E000
	007 Move X21, 0xCA2000
	008 Move W8, [X22+2360]
	009 Move X21, [X21+360]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCA2000
	017 Move X0, [X0+1176]
	018 Call 0x1C17CF4
	019 Move X0, 0xCA2000
	020 Move X0, [X0+360]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2360], W8
	024 Move X0, [X21]
	025 Move X21, 0xCA2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1176]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

