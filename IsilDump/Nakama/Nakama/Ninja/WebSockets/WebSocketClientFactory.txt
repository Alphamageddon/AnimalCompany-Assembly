Type: Nakama.Ninja.WebSockets.WebSocketClientFactory

Method: System.Void .ctor()

Disassembly:
	0x03486F00 MOV X1, X19
	0x03486F04 MOV X2, X31
	0x03486F08 BL 0x33C0DE4
	0x03486F0C MOV X8, X0
	0x03486F10 CBZ X0, 0x3486F24
	0x03486F14 LDR X1, [X22]
	0x03486F18 LDR X9, [X8]
	0x03486F1C CMP X9, X1
	0x03486F20 B.NE 0x3486F50
	0x03486F24 MOV X0, X20
	0x03486F28 MOV X1, X8
	0x03486F2C MOV X2, X21
	0x03486F30 BL 0x1C24138
	0x03486F34 CMP X21, X0
	0x03486F38 MOV X21, X0
	0x03486F3C B.NE 0x3486EFC
	0x03486F40 LDP X20, X19, [X31 + 0x20]
	0x03486F44 LDP X22, X21, [X31 + 0x10]
	0x03486F48 LDR X30, [X31], #0x30
	0x03486F4C RET
	0x03486F50 MOV X0, X8
	0x03486F54 BL 0x1C171E0
	0x03486F58 STR X30, [X31 - 0x30]!
	0x03486F5C STP X22, X21, [X31 + 0x10]
	0x03486F60 STP X20, X19, [X31 + 0x20]
	0x03486F64 ADRP X21, 0xF57000
	0x03486F68 LDRB W8, [X21 + 0x8F4]
	0x03486F6C MOV X19, X1
	0x03486F70 MOV X20, X0
	0x03486F74 TBNZ X8, 0x0, 0x3486F8C
	0x03486F78 ADRP X0, 0xC6E000
	0x03486F7C LDR X0, [X0 + 0xE70]
	0x03486F80 BL 0x1C16CF4
	0x03486F84 MOVZ W8, 0x1
	0x03486F88 STRB W8, [X21 + 0x8F4]
	0x03486F8C ADRP X22, 0xC6E000
	0x03486F90 LDR X21, [X20 + 0x18]!
	0x03486F94 LDR X22, [X22 + 0xE70]
	0x03486F98 MOV X0, X21
	0x03486F9C MOV X1, X19
	0x03486FA0 MOV X2, X31
	0x03486FA4 BL 0x33C0FDC
	0x03486FA8 MOV X8, X0
	0x03486FAC CBZ X0, 0x3486FC0
	0x03486FB0 LDR X1, [X22]
	0x03486FB4 LDR X9, [X8]
	0x03486FB8 CMP X9, X1
	0x03486FBC B.NE 0x3486FEC
	0x03486FC0 MOV X0, X20
	0x03486FC4 MOV X1, X8
	0x03486FC8 MOV X2, X21
	0x03486FCC BL 0x1C24138
	0x03486FD0 CMP X21, X0
	0x03486FD4 MOV X21, X0
	0x03486FD8 B.NE 0x3486F98
	0x03486FDC LDP X20, X19, [X31 + 0x20]
	0x03486FE0 LDP X22, X21, [X31 + 0x10]
	0x03486FE4 LDR X30, [X31], #0x30
	0x03486FE8 RET
	0x03486FEC MOV X0, X8
	0x03486FF0 BL 0x1C171E0
	0x03486FF4 STR X30, [X31 - 0x40]!
	0x03486FF8 STP X24, X23, [X31 + 0x10]
	0x03486FFC STP X22, X21, [X31 + 0x20]
	0x03487000 STP X20, X19, [X31 + 0x30]
	0x03487004 ADRP X21, 0xF56000
	0x03487008 LDRB W8, [X21 + 0x8F5]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF58000
	007 Move X20, 0xCAC000
	008 Move X21, 0xCAC000
	009 Move W8, [X22+2346]
	010 Move X20, [X20+336]
	011 Move X21, [X21+344]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xCAC000
	018 Move X0, [X0+336]
	019 Call 0x1C17CF4
	020 Move X0, 0xCAC000
	021 Move X0, [X0+344]
	022 Call 0x1C17CF4
	023 Move X0, 0xCAC000
	024 Move X0, [X0+352]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2346], W8
	028 Move X0, X19
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Move X0, [X20]
	032 Call 0x1C17F10
	033 Move W1, 0x4000
	034 Move X20, X0
	035 Call BufferPool..ctor, X0, X1
	036 Move [X19+24], X20
	037 Move X0, [X21]
	038 Call 0x1C17F10
	039 Compare X20, 0
	040 JumpIfEqual {73}
	041 Move X10, 0xCAC000
	042 Move X8, [X20]
	043 Move X10, [X10+352]
	044 Move X21, X0
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move X0, X20
	056 Move W2, W31
	057 Call 0x1C5D788
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Add X8, X8, X9
	060 Add X0, X8, 312
	061 Move X2, [X0+8]
	062 Move X0, X21
	063 Move X1, X20
	064 Move X3, X31
	065 Call Func`1<Object>..ctor, X0, X1, X2
	066 Move [X19+16], X21
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void .ctor(System.Func`1<System.IO.MemoryStream> bufferFactory)

Disassembly:
	0x0348F578 ADRP X21, 0xCA2000
	0x0348F57C LDR W8, [X0 + 0xE0]
	0x0348F580 LDR X21, [X21 + 0x498]
	0x0348F584 CBNZ W8, 0x348F58C
	0x0348F588 BL 0x1C16DFC
	0x0348F58C LDR X2, [X21]
	0x0348F590 ADD X0, X20, 0x8
	0x0348F594 MOV X1, X19
	0x0348F598 LDP X20, X19, [X31 + 0x20]
	0x0348F59C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Threading.Tasks.Task`1<System.Net.WebSockets.WebSocket> ConnectAsync(System.Uri uri, System.Threading.CancellationToken token = null)

Disassembly:
	0x0348F5A0 LDR X30, [X31], #0x30
	0x0348F5A4 B 0x2632228
	0x0348F5A8 SUB X31, X31, 0x50
	0x0348F5AC STR X30, [X31 + 0x10]
	0x0348F5B0 STP X24, X23, [X31 + 0x20]
	0x0348F5B4 STP X22, X21, [X31 + 0x30]
	0x0348F5B8 STP X20, X19, [X31 + 0x40]
	0x0348F5BC ADRP X20, 0xF4E000
	0x0348F5C0 LDRB W8, [X20 + 0x937]
	0x0348F5C4 MOV X19, X0
	0x0348F5C8 TBNZ X8, 0x0, 0x348F664
	0x0348F5CC ADRP X0, 0xCA2000
	0x0348F5D0 LDR X0, [X0 + 0x4A0]
	0x0348F5D4 BL 0x1C16CF4
	0x0348F5D8 ADRP X0, 0xCA2000
	0x0348F5DC LDR X0, [X0 + 0x4A8]
	0x0348F5E0 BL 0x1C16CF4
	0x0348F5E4 ADRP X0, 0xCA2000
	0x0348F5E8 LDR X0, [X0 + 0x470]
	0x0348F5EC BL 0x1C16CF4
	0x0348F5F0 ADRP X0, 0xCA2000
	0x0348F5F4 LDR X0, [X0 + 0x168]
	0x0348F5F8 BL 0x1C16CF4
	0x0348F5FC ADRP X0, 0xCA2000
	0x0348F600 LDR X0, [X0 + 0x4B0]
	0x0348F604 BL 0x1C16CF4
	0x0348F608 ADRP X0, 0xCA2000
	0x0348F60C LDR X0, [X0 + 0x478]
	0x0348F610 BL 0x1C16CF4
	0x0348F614 ADRP X0, 0xCA2000
	0x0348F618 LDR X0, [X0 + 0x480]
	0x0348F61C BL 0x1C16CF4
	0x0348F620 ADRP X0, 0xCA2000
	0x0348F624 LDR X0, [X0 + 0x4B8]
	0x0348F628 BL 0x1C16CF4
	0x0348F62C ADRP X0, 0xCA2000
	0x0348F630 LDR X0, [X0 + 0x488]
	0x0348F634 BL 0x1C16CF4
	0x0348F638 ADRP X0, 0xCA2000
	0x0348F63C LDR X0, [X0 + 0x4C0]
	0x0348F640 BL 0x1C16CF4
	0x0348F644 ADRP X0, 0xCA1000
	0x0348F648 LDR X0, [X0 + 0xDE8]
	0x0348F64C BL 0x1C16CF4
	0x0348F650 ADRP X0, 0xCA2000
	0x0348F654 LDR X0, [X0 + 0x4C8]
	0x0348F658 BL 0x1C16CF4
	0x0348F65C MOVZ W8, 0x1
	0x0348F660 STRB W8, [X20 + 0x937]
	0x0348F664 STR X31, [X31 + 0x18]
	0x0348F668 STR X31, [X31 + 0x8]
	0x0348F66C ADRP X24, 0xCA2000
	0x0348F670 LDR W8, [X19]
	0x0348F674 LDR X20, [X19 + 0x28]
	0x0348F678 LDR X24, [X24 + 0x168]
	0x0348F67C CBZ W8, 0x348F6A0
	0x0348F680 CMP W8, 0x1
	0x0348F684 B.NE 0x348F6B8
	0x0348F688 LDR X8, [X19 + 0x58]
	0x0348F68C MOVN W9, 0x0
	0x0348F690 STR X8, [X31 + 0x8]
	0x0348F694 STR X31, [X19 + 0x58]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF4F000
	010 Move X22, 0xCA3000
	011 Move W8, [X23+2347]
	012 Move X22, [X22+360]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xCA3000
	021 Move X0, [X0+368]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA3000
	024 Move X0, [X0+976]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA3000
	027 Move X0, [X0+384]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA3000
	030 Move X0, [X0+360]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2347], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xCA3000
	041 Move X24, 0xCA3000
	042 Move X23, 0xCA3000
	043 Move W8, [X0+224]
	044 Move X22, [X22+368]
	045 Move X24, [X24+976]
	046 Move X23, [X23+384]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+32], X21
	062 Move [X31+40], X20
	063 Move [X31+48], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task`1<System.Net.WebSockets.WebSocket> ConnectAsync(System.Uri uri, Nakama.Ninja.WebSockets.WebSocketClientOptions options, System.Threading.CancellationToken token = null)

Disassembly:
	0x0348700C MOV X19, X1
	0x03487010 MOV X20, X0
	0x03487014 TBNZ X8, 0x0, 0x348702C
	0x03487018 ADRP X0, 0xC6F000
	0x0348701C LDR X0, [X0 + 0x2C8]
	0x03487020 BL 0x1C16CF4
	0x03487024 MOVZ W8, 0x1
	0x03487028 STRB W8, [X21 + 0x8F5]
	0x0348702C ADRP X24, 0xC6F000
	0x03487030 LDR X21, [X20 + 0x20]!
	0x03487034 LDR X24, [X24 + 0x2C8]
	0x03487038 MOV X0, X21
	0x0348703C MOV X1, X19
	0x03487040 MOV X2, X31
	0x03487044 BL 0x33C0DE4
	0x03487048 CBZ X0, 0x3487068
	0x0348704C LDR X23, [X24]
	0x03487050 MOV X22, X0
	0x03487054 MOV X1, X23
	0x03487058 BL 0x1C16E00
	0x0348705C MOV X1, X0
	0x03487060 CBNZ X0, 0x348706C
	0x03487064 B 0x3487098
	0x03487068 MOV X1, X31
	0x0348706C MOV X0, X20
	0x03487070 MOV X2, X21
	0x03487074 BL 0x1C24138
	0x03487078 CMP X21, X0
	0x0348707C MOV X21, X0
	0x03487080 B.NE 0x3487038
	0x03487084 LDP X20, X19, [X31 + 0x30]
	0x03487088 LDP X22, X21, [X31 + 0x20]
	0x0348708C LDP X24, X23, [X31 + 0x10]
	0x03487090 LDR X30, [X31], #0x40
	0x03487094 RET
	0x03487098 MOV X0, X22
	0x0348709C MOV X1, X23
	0x034870A0 BL 0x1C171E0
	0x034870A4 STR X30, [X31 - 0x40]!
	0x034870A8 STP X24, X23, [X31 + 0x10]
	0x034870AC STP X22, X21, [X31 + 0x20]
	0x034870B0 STP X20, X19, [X31 + 0x30]
	0x034870B4 ADRP X21, 0xF56000
	0x034870B8 LDRB W8, [X21 + 0x8F6]
	0x034870BC MOV X19, X1
	0x034870C0 MOV X20, X0
	0x034870C4 TBNZ X8, 0x0, 0x34870DC
	0x034870C8 ADRP X0, 0xC6F000
	0x034870CC LDR X0, [X0 + 0x2C8]
	0x034870D0 BL 0x1C16CF4
	0x034870D4 MOVZ W8, 0x1
	0x034870D8 STRB W8, [X21 + 0x8F6]
	0x034870DC ADRP X24, 0xC6F000
	0x034870E0 LDR X21, [X20 + 0x20]!
	0x034870E4 LDR X24, [X24 + 0x2C8]
	0x034870E8 MOV X0, X21
	0x034870EC MOV X1, X19
	0x034870F0 MOV X2, X31
	0x034870F4 BL 0x33C0FDC
	0x034870F8 CBZ X0, 0x3487118
	0x034870FC LDR X23, [X24]
	0x03487100 MOV X22, X0
	0x03487104 MOV X1, X23
	0x03487108 BL 0x1C16E00

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X24, 0xF57000
	011 Move X23, 0xCAB000
	012 Move W8, [X24+2348]
	013 Move X23, [X23+360]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xCAB000
	023 Move X0, [X0+368]
	024 Call 0x1C17CF4
	025 Move X0, 0xCAB000
	026 Move X0, [X0+376]
	027 Call 0x1C17CF4
	028 Move X0, 0xCAB000
	029 Move X0, [X0+384]
	030 Call 0x1C17CF4
	031 Move X0, 0xCAB000
	032 Move X0, [X0+360]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+2348], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+64], V0
	039 Move [X31+72], V0
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Move [X31], V0
	043 Move [X31+8], V0
	044 Move X23, 0xCAB000
	045 Move X25, 0xCAB000
	046 Move X24, 0xCAB000
	047 Move W8, [X0+224]
	048 Move X23, [X23+368]
	049 Move X25, [X25+376]
	050 Move X24, [X24+384]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X23]
	055 Add X8, X31, 0
	056 Or X23, X8, 15
	057 Move X8, X23
	058 Call AsyncTaskMethodBuilder`1<Object>.Create
	059 Move X2, [X25]
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W8, TEMP
	063 Add X1, X31, 0
	064 Move X0, X23
	065 Move [X31+32], X21
	066 Move [X31+40], X22
	067 Move [X31+48], X20
	068 Move [X31+56], X19
	069 Move [X31], W8
	070 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	071 Move X1, [X24]
	072 Move X0, X23
	073 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	074 Move X20, [X31+144]
	075 Move X19, [X31+152]
	076 Move X22, [X31+128]
	077 Move X21, [X31+136]
	078 Move X24, [X31+112]
	079 Move X23, [X31+120]
	080 Move X30, [X31+96]
	081 Move X25, [X31+104]
	082 Add X31, X31, 160
	083 Return X0

Method: System.Threading.Tasks.Task`1<System.Net.WebSockets.WebSocket> ConnectAsync(System.IO.Stream responseStream, System.String secWebSocketKey, Nakama.Ninja.WebSockets.WebSocketClientOptions options, System.Threading.CancellationToken token = null)

Disassembly:
	0x0348F698 STR W9, [X19]
	0x0348F69C B 0x348F80C
	0x0348F6A0 LDR X8, [X19 + 0x50]
	0x0348F6A4 MOVN W9, 0x0
	0x0348F6A8 STR X8, [X31 + 0x18]
	0x0348F6AC STR X31, [X19 + 0x50]
	0x0348F6B0 STR W9, [X19]
	0x0348F6B4 B 0x348F7B0
	0x0348F6B8 MOV X0, X31
	0x0348F6BC BL 0x337684C
	0x0348F6C0 LDR X8, [X19 + 0x20]
	0x0348F6C4 STP X0, X1, [X19 + 0x40]
	0x0348F6C8 CBZ X8, 0x348F8F0
	0x0348F6CC MOV X0, X8
	0x0348F6D0 MOV X1, X31
	0x0348F6D4 BL 0x361C394
	0x0348F6D8 MOV X21, X0
	0x0348F6DC LDR X0, [X19 + 0x20]
	0x0348F6E0 CBZ X0, 0x348F8F4
	0x0348F6E4 MOV X1, X31
	0x0348F6E8 BL 0x361CC2C
	0x0348F6EC MOV W22, W0
	0x0348F6F0 LDR X0, [X19 + 0x20]
	0x0348F6F4 CBZ X0, 0x348F8F8
	0x0348F6F8 MOV X1, X31
	0x0348F6FC BL 0x361CEF0
	0x0348F700 CBZ X0, 0x348F8FC
	0x0348F704 MOV X1, X31
	0x0348F708 BL 0x322B5E4
	0x0348F70C ADRP X8, 0xCA1000
	0x0348F710 LDR X8, [X8 + 0xDE8]
	0x0348F714 MOV X23, X0
	0x0348F718 LDR X1, [X8]
	0x0348F71C MOV X2, X31
	0x0348F720 BL 0x321BA08
	0x0348F724 TBZ X0, 0x0, 0x348F730
	0x0348F728 MOVZ W3, 0x1
	0x0348F72C B 0x348F74C
	0x0348F730 ADRP X8, 0xCA2000
	0x0348F734 LDR X8, [X8 + 0x4C8]
	0x0348F738 LDR X1, [X8]
	0x0348F73C MOV X0, X23
	0x0348F740 MOV X2, X31
	0x0348F744 BL 0x321BA08
	0x0348F748 AND W3, W0, 0x1
	0x0348F74C LDR X8, [X19 + 0x30]
	0x0348F750 CBZ X8, 0x348F900
	0x0348F754 CBZ X20, 0x348F904
	0x0348F758 LDR X9, [X20]
	0x0348F75C LDP X1, X2, [X19 + 0x40]
	0x0348F760 LDR X7, [X19 + 0x38]
	0x0348F764 LDRB W4, [X8 + 0x18]
	0x0348F768 LDP X8, X9, [X9 + 0x1B8]
	0x0348F76C MOV X0, X20
	0x0348F770 MOV X5, X21
	0x0348F774 MOV W6, W22
	0x0348F778 STR X9, [X31]
	0x0348F77C BLR X8
	0x0348F780 CBZ X0, 0x348F908
	0x0348F784 ADRP X8, 0xCA2000
	0x0348F788 LDR X8, [X8 + 0x4C0]
	0x0348F78C LDR X1, [X8]
	0x0348F790 BL 0x269F5D0
	0x0348F794 ADRP X8, 0xCA2000
	0x0348F798 LDR X8, [X8 + 0x4B8]
	0x0348F79C STR X0, [X31 + 0x18]
	0x0348F7A0 LDR X1, [X8]
	0x0348F7A4 ADD X0, X31, 0x18

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xF4F000
	012 Move X24, 0xCA3000
	013 Move W8, [X25+2349]
	014 Move X24, [X24+360]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xCA3000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0xCA3000
	028 Move X0, [X0+984]
	029 Call 0x1C17CF4
	030 Move X0, 0xCA3000
	031 Move X0, [X0+384]
	032 Call 0x1C17CF4
	033 Move X0, 0xCA3000
	034 Move X0, [X0+360]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+2349], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xCA3000
	046 Move X26, 0xCA3000
	047 Move X25, 0xCA3000
	048 Move W8, [X0+224]
	049 Move X24, [X24+368]
	050 Move X26, [X26+984]
	051 Move X25, [X25+384]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+32], X23
	067 Move [X31+40], X22
	068 Move [X31+48], X21
	069 Move [X31+56], X20
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

Method: System.Threading.Tasks.Task`1<System.Net.WebSockets.WebSocket> ConnectAsync(System.Guid guid, System.IO.Stream responseStream, System.String secWebSocketKey, System.TimeSpan keepAliveInterval, System.String secWebSocketExtensions, System.Boolean includeExceptionInCloseResponse, System.Threading.CancellationToken token)

Disassembly:
	0x0348F7A8 BL 0x2677430
	0x0348F7AC TBZ X0, 0x0, 0x348F898
	0x0348F7B0 ADRP X8, 0xCA2000
	0x0348F7B4 LDR X8, [X8 + 0x4B0]
	0x0348F7B8 ADD X0, X31, 0x18
	0x0348F7BC LDR X1, [X8]
	0x0348F7C0 BL 0x2677474
	0x0348F7C4 CBZ X20, 0x348F8E8
	0x0348F7C8 LDP X5, X6, [X19 + 0x30]
	0x0348F7CC LDR X3, [X19 + 0x20]
	0x0348F7D0 MOV X4, X0
	0x0348F7D4 MOV X0, X20
	0x0348F7D8 BL 0x348F1AC
	0x0348F7DC CBZ X0, 0x348F8EC
	0x0348F7E0 ADRP X8, 0xCA2000
	0x0348F7E4 LDR X8, [X8 + 0x488]
	0x0348F7E8 LDR X1, [X8]
	0x0348F7EC BL 0x269F5D0
	0x0348F7F0 ADRP X8, 0xCA2000
	0x0348F7F4 LDR X8, [X8 + 0x480]
	0x0348F7F8 STR X0, [X31 + 0x8]
	0x0348F7FC LDR X1, [X8]
	0x0348F800 ADD X0, X31, 0x8
	0x0348F804 BL 0x2677430
	0x0348F808 TBZ X0, 0x0, 0x348F858
	0x0348F80C ADRP X8, 0xCA2000
	0x0348F810 LDR X8, [X8 + 0x478]
	0x0348F814 ADD X0, X31, 0x8
	0x0348F818 LDR X1, [X8]
	0x0348F81C BL 0x2677474
	0x0348F820 MOVN W8, 0x1
	0x0348F824 STR W8, [X19], #0x8
	0x0348F828 MOV X20, X0
	0x0348F82C LDR X0, [X24]
	0x0348F830 ADRP X21, 0xCA2000
	0x0348F834 LDR W8, [X0 + 0xE0]
	0x0348F838 LDR X21, [X21 + 0x470]
	0x0348F83C CBNZ W8, 0x348F844
	0x0348F840 BL 0x1C16DFC
	0x0348F844 LDR X2, [X21]
	0x0348F848 MOV X0, X19
	0x0348F84C MOV X1, X20
	0x0348F850 BL 0x26322B0
	0x0348F854 B 0x348F8D0
	0x0348F858 MOVZ W8, 0x1
	0x0348F85C STR W8, [X19]
	0x0348F860 LDR X8, [X31 + 0x8]
	0x0348F864 STR X8, [X19 + 0x58]
	0x0348F868 LDR X0, [X24]
	0x0348F86C LDR W8, [X0 + 0xE0]
	0x0348F870 CBNZ W8, 0x348F878
	0x0348F874 BL 0x1C16DFC
	0x0348F878 ADRP X8, 0xCA2000
	0x0348F87C LDR X8, [X8 + 0x4A0]
	0x0348F880 ADD X0, X19, 0x8
	0x0348F884 LDR X3, [X8]
	0x0348F888 ADD X1, X31, 0x8
	0x0348F88C MOV X2, X19
	0x0348F890 BL 0x1FC39BC
	0x0348F894 B 0x348F8D0
	0x0348F898 STR W31, [X19]
	0x0348F89C LDR X8, [X31 + 0x18]
	0x0348F8A0 STR X8, [X19 + 0x50]
	0x0348F8A4 LDR X0, [X24]
	0x0348F8A8 LDR W8, [X0 + 0xE0]
	0x0348F8AC CBNZ W8, 0x348F8B4
	0x0348F8B0 BL 0x1C16DFC
	0x0348F8B4 ADRP X8, 0xCA2000
	0x0348F8B8 LDR X8, [X8 + 0x4A8]
	0x0348F8BC ADD X0, X19, 0x8
	0x0348F8C0 LDR X3, [X8]
	0x0348F8C4 ADD X1, X31, 0x18
	0x0348F8C8 MOV X2, X19
	0x0348F8CC BL 0x1FC39BC
	0x0348F8D0 LDP X20, X19, [X31 + 0x40]
	0x0348F8D4 LDP X22, X21, [X31 + 0x30]
	0x0348F8D8 LDP X24, X23, [X31 + 0x20]
	0x0348F8DC LDR X30, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X28, 0xF4F000
	015 Move X27, 0xCA3000
	016 Move W8, [X28+2350]
	017 Move X27, [X27+360]
	018 Move W26, W7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move X19, X3
	023 Move X23, X2
	024 Move X24, X1
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCA3000
	031 Move X0, [X0+368]
	032 Call 0x1C17CF4
	033 Move X0, 0xCA3000
	034 Move X0, [X0+992]
	035 Call 0x1C17CF4
	036 Move X0, 0xCA3000
	037 Move X0, [X0+384]
	038 Call 0x1C17CF4
	039 Move X0, 0xCA3000
	040 Move X0, [X0+360]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+2350], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+80], V0
	047 Move [X31+88], V0
	048 Move [X31+48], V0
	049 Move [X31+56], V0
	050 Move [X31+16], V0
	051 Move [X31+24], V0
	052 Move [X31], V0
	053 Move X27, 0xCA3000
	054 Move X29, 0xCA3000
	055 Move W8, [X0+224]
	056 Move X28, [X31+208]
	057 Move X27, [X27+368]
	058 Move X29, [X29+992]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X27]
	063 Add X8, X31, 0
	064 And W27, W26, 1
	065 Or X26, X8, 15
	066 Move X8, X26
	067 Call AsyncTaskMethodBuilder`1<Object>.Create
	068 Move X2, [X29]
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W8, TEMP
	072 Add X1, X31, 0
	073 Move X0, X26
	074 Move [X31+48], X25
	075 Move [X31+56], X24
	076 Move [X31+64], X23
	077 Move [X31+72], X22
	078 Move [X31+80], X21
	079 Move [X31+88], X20
	080 Move [X31+96], W27
	081 Move [X31+32], X19
	082 Move [X31+40], X28
	083 Move [X31], W8
	084 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	085 Move X8, 0xCA3000
	086 Move X8, [X8+384]
	087 Move X0, X26
	088 Move X1, [X8]
	089 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	090 Move X20, [X31+192]
	091 Move X19, [X31+200]
	092 Move X22, [X31+176]
	093 Move X21, [X31+184]
	094 Move X24, [X31+160]
	095 Move X23, [X31+168]
	096 Move X26, [X31+144]
	097 Move X25, [X31+152]
	098 Move X28, [X31+128]
	099 Move X27, [X31+136]
	100 Move X29, [X31+112]
	101 Move X30, [X31+120]
	102 Add X31, X31, 208
	103 Return X0

Method: System.String GetSubProtocolFromHeader(System.String response)

Disassembly:
	0x0348F8E0 ADD X31, X31, 0x50
	0x0348F8E4 RET
	0x0348F8E8 BL 0x1C16F20
	0x0348F8EC BL 0x1C16F20
	0x0348F8F0 BL 0x1C16F20
	0x0348F8F4 BL 0x1C16F20
	0x0348F8F8 BL 0x1C16F20
	0x0348F8FC BL 0x1C16F20
	0x0348F900 BL 0x1C16F20
	0x0348F904 BL 0x1C16F20
	0x0348F908 BL 0x1C16F20
	0x0348F90C B 0x348F964
	0x0348F910 B 0x348F964
	0x0348F914 B 0x348F964
	0x0348F918 B 0x348F964
	0x0348F91C B 0x348F964
	0x0348F920 B 0x348F964
	0x0348F924 B 0x348F964
	0x0348F928 B 0x348F964
	0x0348F92C B 0x348F964
	0x0348F930 B 0x348F964
	0x0348F934 B 0x348F964
	0x0348F938 B 0x348F964
	0x0348F93C B 0x348F964
	0x0348F940 B 0x348F964
	0x0348F944 B 0x348F964
	0x0348F948 B 0x348F964
	0x0348F94C B 0x348F964
	0x0348F950 B 0x348F964
	0x0348F954 B 0x348F964
	0x0348F958 B 0x348F964
	0x0348F95C B 0x348F964
	0x0348F960 B 0x348F964
	0x0348F964 MOV X20, X0
	0x0348F968 CMP W1, 0x1
	0x0348F96C B.NE 0x348FA08
	0x0348F970 MOV X0, X20
	0x0348F974 BL 0x3EB1AD0
	0x0348F978 MOV X20, X0
	0x0348F97C ADRP X0, 0xC64000
	0x0348F980 LDR X0, [X0 + 0x7D0]
	0x0348F984 BL 0x1C16D08
	0x0348F988 LDR X8, [X20]
	0x0348F98C LDR X1, [X8]
	0x0348F990 BL 0x1C17270
	0x0348F994 TBZ X0, 0x0, 0x348F9E0
	0x0348F998 LDR X20, [X20]
	0x0348F99C BL 0x3EB1AE0
	0x0348F9A0 MOVN W8, 0x1
	0x0348F9A4 STR W8, [X19], #0x8
	0x0348F9A8 ADRP X0, 0xCA2000
	0x0348F9AC LDR X0, [X0 + 0x168]
	0x0348F9B0 BL 0x1C16D08
	0x0348F9B4 LDR W8, [X0 + 0xE0]
	0x0348F9B8 CBNZ W8, 0x348F9C0
	0x0348F9BC BL 0x1C16DFC
	0x0348F9C0 ADRP X0, 0xCA2000
	0x0348F9C4 LDR X0, [X0 + 0x490]
	0x0348F9C8 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF4F000
	007 Move X22, 0xC6D000
	008 Move X20, 0xCA3000
	009 Move W8, [X21+2351]
	010 Move X22, [X22+1536]
	011 Move X20, [X20+1000]
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xC6D000
	018 Move X0, [X0+1536]
	019 Call 0x1C17CF4
	020 Move X0, 0xCA3000
	021 Move X0, [X0+1000]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2351], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move W2, 1
	029 Move X3, X31
	030 Move X20, X0
	031 Call Regex..ctor, X0, X1, X2
	032 Compare X20, 0
	033 JumpIfEqual {78}
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Regex.Match, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {78}
	040 Move X1, X31
	041 Move X19, X0
	042 Call Group.get_Success, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {71}
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X9, [X8+392]
	050 Move X1, [X8+400]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {78}
	054 Move W1, 1
	055 Move X2, X31
	056 Call GroupCollection.get_Item, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {78}
	059 Move X1, X31
	060 Call Capture.get_Value, X0
	061 Compare X0, 0
	062 JumpIfEqual {78}
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X1, X31
	068 Move X30, [X31+48]
	069 Call String.Trim, X0
	070 Return X0
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X0, X31
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1C17F20

Method: System.Void ThrowIfInvalidAcceptString(System.Guid guid, System.String response, System.String secWebSocketKey)

Disassembly:
	0x0348F9CC MOV X2, X0
	0x0348F9D0 MOV X0, X19
	0x0348F9D4 MOV X1, X20
	0x0348F9D8 BL 0x26324C8
	0x0348F9DC B 0x348F8D0
	0x0348F9E0 MOVZ W0, 0x8
	0x0348F9E4 BL 0x3EB1AF0
	0x0348F9E8 LDR X8, [X20]
	0x0348F9EC STR X8, [X0]
	0x0348F9F0 ADRP X1, 0xA25000
	0x0348F9F4 ADD X1, X1, 0xE58
	0x0348F9F8 MOV X2, X31
	0x0348F9FC BL 0x3EB1B00
	0x0348FA00 MOV X20, X0
	0x0348FA04 BL 0x3EB1AE0
	0x0348FA08 MOV X0, X20
	0x0348FA0C BL 0x1D2C690
	0x0348FA10 BL 0x1990590
	0x0348FA14 STR X30, [X31 - 0x30]!
	0x0348FA18 STP X22, X21, [X31 + 0x10]
	0x0348FA1C STP X20, X19, [X31 + 0x20]
	0x0348FA20 ADRP X22, 0xF4E000
	0x0348FA24 ADRP X21, 0xCA2000
	0x0348FA28 LDRB W8, [X22 + 0x938]
	0x0348FA2C LDR X21, [X21 + 0x168]
	0x0348FA30 MOV X19, X1
	0x0348FA34 MOV X20, X0
	0x0348FA38 TBNZ X8, 0x0, 0x348FA5C
	0x0348FA3C ADRP X0, 0xCA2000
	0x0348FA40 LDR X0, [X0 + 0x498]
	0x0348FA44 BL 0x1C16CF4
	0x0348FA48 ADRP X0, 0xCA2000
	0x0348FA4C LDR X0, [X0 + 0x168]
	0x0348FA50 BL 0x1C16CF4
	0x0348FA54 MOVZ W8, 0x1
	0x0348FA58 STRB W8, [X22 + 0x938]
	0x0348FA5C LDR X0, [X21]
	0x0348FA60 ADRP X21, 0xCA2000
	0x0348FA64 LDR W8, [X0 + 0xE0]
	0x0348FA68 LDR X21, [X21 + 0x498]
	0x0348FA6C CBNZ W8, 0x348FA74
	0x0348FA70 BL 0x1C16DFC
	0x0348FA74 LDR X2, [X21]
	0x0348FA78 ADD X0, X20, 0x8
	0x0348FA7C MOV X1, X19
	0x0348FA80 LDP X20, X19, [X31 + 0x20]
	0x0348FA84 LDP X22, X21, [X31 + 0x10]
	0x0348FA88 LDR X30, [X31], #0x30
	0x0348FA8C B 0x2632228
	0x0348FA90 SUB X31, X31, 0x40
	0x0348FA94 STP X30, X21, [X31 + 0x20]
	0x0348FA98 STP X20, X19, [X31 + 0x30]
	0x0348FA9C ADRP X20, 0xF4E000
	0x0348FAA0 LDRB W8, [X20 + 0x939]
	0x0348FAA4 MOV X19, X0
	0x0348FAA8 TBNZ X8, 0x0, 0x348FAFC
	0x0348FAAC ADRP X0, 0xCA2000
	0x0348FAB0 LDR X0, [X0 + 0x4D0]
	0x0348FAB4 BL 0x1C16CF4
	0x0348FAB8 ADRP X0, 0xCA2000
	0x0348FABC LDR X0, [X0 + 0x470]
	0x0348FAC0 BL 0x1C16CF4
	0x0348FAC4 ADRP X0, 0xCA2000
	0x0348FAC8 LDR X0, [X0 + 0x168]
	0x0348FACC BL 0x1C16CF4
	0x0348FAD0 ADRP X0, 0xCA2000
	0x0348FAD4 LDR X0, [X0 + 0x478]
	0x0348FAD8 BL 0x1C16CF4
	0x0348FADC ADRP X0, 0xCA2000
	0x0348FAE0 LDR X0, [X0 + 0x480]
	0x0348FAE4 BL 0x1C16CF4
	0x0348FAE8 ADRP X0, 0xCA2000
	0x0348FAEC LDR X0, [X0 + 0x488]
	0x0348FAF0 BL 0x1C16CF4
	0x0348FAF4 MOVZ W8, 0x1
	0x0348FAF8 STRB W8, [X20 + 0x939]
	0x0348FAFC STR X31, [X31 + 0x18]
	0x0348FB00 ADRP X21, 0xCA2000
	0x0348FB04 LDR W8, [X19]
	0x0348FB08 LDR X21, [X21 + 0x168]
	0x0348FB0C CBZ W8, 0x348FBC4
	0x0348FB10 LDR X20, [X19 + 0x20]
	0x0348FB14 MOV X0, X31
	0x0348FB18 BL 0x337684C
	0x0348FB1C LDR X9, [X19 + 0x38]
	0x0348FB20 CBZ X9, 0x348FC30
	0x0348FB24 CBZ X20, 0x348FC34
	0x0348FB28 LDP X3, X4, [X19 + 0x28]
	0x0348FB2C LDR X10, [X19 + 0x40]
	0x0348FB30 LDRB W7, [X9 + 0x28]
	0x0348FB34 LDR X6, [X9 + 0x30]
	0x0348FB38 LDR X5, [X9 + 0x10]
	0x0348FB3C MOV X2, X0
	0x0348FB40 MOV X8, X1
	0x0348FB44 MOV X0, X20
	0x0348FB48 MOV X1, X2
	0x0348FB4C MOV X2, X8
	0x0348FB50 STR X10, [X31]
	0x0348FB54 BL 0x348E7A8
	0x0348FB58 CBZ X0, 0x348FC38
	0x0348FB5C ADRP X8, 0xCA2000
	0x0348FB60 LDR X8, [X8 + 0x488]
	0x0348FB64 LDR X1, [X8]
	0x0348FB68 BL 0x269F5D0
	0x0348FB6C ADRP X8, 0xCA2000
	0x0348FB70 LDR X8, [X8 + 0x480]
	0x0348FB74 STR X0, [X31 + 0x18]
	0x0348FB78 LDR X1, [X8]
	0x0348FB7C ADD X0, X31, 0x18
	0x0348FB80 BL 0x2677430
	0x0348FB84 TBNZ X0, 0x0, 0x348FBD8
	0x0348FB88 STR W31, [X19]
	0x0348FB8C LDR X8, [X31 + 0x18]
	0x0348FB90 STR X8, [X19 + 0x48]
	0x0348FB94 LDR X0, [X21]
	0x0348FB98 LDR W8, [X0 + 0xE0]
	0x0348FB9C CBNZ W8, 0x348FBA4
	0x0348FBA0 BL 0x1C16DFC
	0x0348FBA4 ADRP X8, 0xCA2000
	0x0348FBA8 LDR X8, [X8 + 0x4D0]
	0x0348FBAC ADD X0, X19, 0x8
	0x0348FBB0 LDR X3, [X8]
	0x0348FBB4 ADD X1, X31, 0x18
	0x0348FBB8 MOV X2, X19
	0x0348FBBC BL 0x1FC3BD0
	0x0348FBC0 B 0x348FC20
	0x0348FBC4 LDR X8, [X19 + 0x48]
	0x0348FBC8 MOVN W9, 0x0
	0x0348FBCC STR X8, [X31 + 0x18]
	0x0348FBD0 STR X31, [X19 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xF4F000
	008 Move X23, 0xC6D000
	009 Move X21, 0xCA3000
	010 Move W8, [X22+2352]
	011 Move X23, [X23+1536]
	012 Move X21, [X21+1008]
	013 Move X19, X4
	014 Move X20, X3
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC6D000
	020 Move X0, [X0+1536]
	021 Call 0x1C17CF4
	022 Move X0, 0xCA3000
	023 Move X0, [X0+1008]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2352], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X1, [X21]
	030 Move W2, 1
	031 Move X3, X31
	032 Move X21, X0
	033 Call Regex..ctor, X0, X1, X2
	034 Compare X21, 0
	035 JumpIfEqual {77}
	036 Move X0, X21
	037 Move X1, X20
	038 Move X2, X31
	039 Call Regex.Match, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {77}
	042 Move X8, [X0]
	043 Move X9, [X8+392]
	044 Move X1, [X8+400]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfEqual {77}
	048 Move W1, 1
	049 Move X2, X31
	050 Call GroupCollection.get_Item, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {77}
	053 Move X1, X31
	054 Call Capture.get_Value, X0
	055 Compare X0, 0
	056 JumpIfEqual {77}
	057 Move X1, X31
	058 Call String.Trim, X0
	059 Move X20, X0
	060 Move X0, X19
	061 Call HttpHelper.ComputeSocketAcceptString, X0
	062 Move X1, X20
	063 Move X2, X31
	064 Move X21, X0
	065 Call String.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {78}
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return 
	077 Call 0x1C17F20
	078 Move X0, 0xC65000
	079 Move X0, [X0+2760]
	080 Call 0x1C17D08
	081 Move W1, 5
	082 Call 0x1C17D6C
	083 Move X19, X0
	084 Call 0x19913C0
	085 Move X0, 0xCA3000
	086 Move X0, [X0+1016]
	087 Call 0x1C17D08
	088 Move X2, X0
	089 Move X0, X19
	090 Move X1, X31
	091 Call 0x1994444
	092 Move X0, X19
	093 Call 0x19913C0
	094 Move W1, 1
	095 Move X0, X19
	096 Move X2, X21
	097 Call 0x1994444
	098 Move X0, X19
	099 Call 0x19913C0
	100 Move X0, 0xCA3000
	101 Move X0, [X0+1024]
	102 Call 0x1C17D08
	103 Move X2, X0
	104 Move W1, 2
	105 Move X0, X19
	106 Call 0x1994444
	107 Move X0, X19
	108 Call 0x19913C0
	109 Move W1, 3
	110 Move X0, X19
	111 Move X2, X20
	112 Call 0x1994444
	113 Move X0, X19
	114 Call 0x19913C0
	115 Move X0, 0xC6D000
	116 Move X0, [X0+2480]
	117 Call 0x1C17D08
	118 Move X2, X0
	119 Move W1, 4
	120 Move X0, X19
	121 Call 0x1994444
	122 Move X0, X19
	123 Move X1, X31
	124 Call String.Concat, X0
	125 Move X19, X0
	126 Move X0, 0xC65000
	127 Move X0, [X0+2504]
	128 Call 0x1C17D08
	129 Call 0x1BBF55C
	130 Move X1, X0
	131 Move X0, X19
	132 Move X2, X31
	133 Call String.Format, X0, X1
	134 Move X19, X0
	135 Move X0, 0xCA3000
	136 Move X0, [X0+1032]
	137 Call 0x1C17D08
	138 Call 0x1C17F10
	139 Move X1, X19
	140 Move X2, X31
	141 Move X20, X0
	142 Call WebSocketHandshakeFailedException..ctor, X0, X1
	143 Move X0, 0xCA3000
	144 Move X0, [X0+1040]
	145 Call 0x1C17D08
	146 Move X1, X0
	147 Move X0, X20
	148 Call 0x1C17DEC

Method: System.Void ThrowIfInvalidResponseCode(System.String responseHeader)

Disassembly:
	0x0348FBD4 STR W9, [X19]
	0x0348FBD8 ADRP X8, 0xCA2000
	0x0348FBDC LDR X8, [X8 + 0x478]
	0x0348FBE0 ADD X0, X31, 0x18
	0x0348FBE4 LDR X1, [X8]
	0x0348FBE8 BL 0x2677474
	0x0348FBEC MOVN W8, 0x1
	0x0348FBF0 STR W8, [X19], #0x8
	0x0348FBF4 MOV X20, X0
	0x0348FBF8 LDR X0, [X21]
	0x0348FBFC ADRP X21, 0xCA2000
	0x0348FC00 LDR W8, [X0 + 0xE0]
	0x0348FC04 LDR X21, [X21 + 0x470]
	0x0348FC08 CBNZ W8, 0x348FC10
	0x0348FC0C BL 0x1C16DFC
	0x0348FC10 LDR X2, [X21]
	0x0348FC14 MOV X0, X19
	0x0348FC18 MOV X1, X20
	0x0348FC1C BL 0x26322B0
	0x0348FC20 LDP X20, X19, [X31 + 0x30]
	0x0348FC24 LDP X30, X21, [X31 + 0x20]
	0x0348FC28 ADD X31, X31, 0x40
	0x0348FC2C RET
	0x0348FC30 BL 0x1C16F20
	0x0348FC34 BL 0x1C16F20
	0x0348FC38 BL 0x1C16F20
	0x0348FC3C B 0x348FC58
	0x0348FC40 B 0x348FC58
	0x0348FC44 B 0x348FC58
	0x0348FC48 B 0x348FC58
	0x0348FC4C B 0x348FC58
	0x0348FC50 B 0x348FC58
	0x0348FC54 B 0x348FC58
	0x0348FC58 MOV X20, X0
	0x0348FC5C CMP W1, 0x1
	0x0348FC60 B.NE 0x348FCFC
	0x0348FC64 MOV X0, X20
	0x0348FC68 BL 0x3EB1AD0
	0x0348FC6C MOV X20, X0
	0x0348FC70 ADRP X0, 0xC64000
	0x0348FC74 LDR X0, [X0 + 0x7D0]
	0x0348FC78 BL 0x1C16D08
	0x0348FC7C LDR X8, [X20]
	0x0348FC80 LDR X1, [X8]
	0x0348FC84 BL 0x1C17270
	0x0348FC88 TBZ X0, 0x0, 0x348FCD4
	0x0348FC8C LDR X20, [X20]
	0x0348FC90 BL 0x3EB1AE0
	0x0348FC94 MOVN W8, 0x1
	0x0348FC98 STR W8, [X19], #0x8
	0x0348FC9C ADRP X0, 0xCA2000
	0x0348FCA0 LDR X0, [X0 + 0x168]
	0x0348FCA4 BL 0x1C16D08
	0x0348FCA8 LDR W8, [X0 + 0xE0]
	0x0348FCAC CBNZ W8, 0x348FCB4
	0x0348FCB0 BL 0x1C16DFC
	0x0348FCB4 ADRP X0, 0xCA2000
	0x0348FCB8 LDR X0, [X0 + 0x490]
	0x0348FCBC BL 0x1C16D08
	0x0348FCC0 MOV X2, X0
	0x0348FCC4 MOV X0, X19
	0x0348FCC8 MOV X1, X20
	0x0348FCCC BL 0x26324C8
	0x0348FCD0 B 0x348FC20
	0x0348FCD4 MOVZ W0, 0x8
	0x0348FCD8 BL 0x3EB1AF0
	0x0348FCDC LDR X8, [X20]
	0x0348FCE0 STR X8, [X0]
	0x0348FCE4 ADRP X1, 0xA25000
	0x0348FCE8 ADD X1, X1, 0xE58
	0x0348FCEC MOV X2, X31
	0x0348FCF0 BL 0x3EB1B00
	0x0348FCF4 MOV X20, X0
	0x0348FCF8 BL 0x3EB1AE0
	0x0348FCFC MOV X0, X20
	0x0348FD00 BL 0x1D2C690
	0x0348FD04 BL 0x1990590
	0x0348FD08 STR X30, [X31 - 0x30]!
	0x0348FD0C STP X22, X21, [X31 + 0x10]
	0x0348FD10 STP X20, X19, [X31 + 0x20]
	0x0348FD14 ADRP X22, 0xF4E000
	0x0348FD18 ADRP X21, 0xCA2000
	0x0348FD1C LDRB W8, [X22 + 0x93A]
	0x0348FD20 LDR X21, [X21 + 0x168]
	0x0348FD24 MOV X19, X1
	0x0348FD28 MOV X20, X0
	0x0348FD2C TBNZ X8, 0x0, 0x348FD50
	0x0348FD30 ADRP X0, 0xCA2000
	0x0348FD34 LDR X0, [X0 + 0x498]
	0x0348FD38 BL 0x1C16CF4
	0x0348FD3C ADRP X0, 0xCA2000
	0x0348FD40 LDR X0, [X0 + 0x168]
	0x0348FD44 BL 0x1C16CF4
	0x0348FD48 MOVZ W8, 0x1
	0x0348FD4C STRB W8, [X22 + 0x93A]
	0x0348FD50 LDR X0, [X21]
	0x0348FD54 ADRP X21, 0xCA2000
	0x0348FD58 LDR W8, [X0 + 0xE0]
	0x0348FD5C LDR X21, [X21 + 0x498]
	0x0348FD60 CBNZ W8, 0x348FD68
	0x0348FD64 BL 0x1C16DFC
	0x0348FD68 LDR X2, [X21]
	0x0348FD6C ADD X0, X20, 0x8
	0x0348FD70 MOV X1, X19
	0x0348FD74 LDP X20, X19, [X31 + 0x20]
	0x0348FD78 LDP X22, X21, [X31 + 0x10]
	0x0348FD7C LDR X30, [X31], #0x30
	0x0348FD80 B 0x2632228
	0x0348FD84 SUB X31, X31, 0x80
	0x0348FD88 STP X29, X30, [X31 + 0x20]
	0x0348FD8C STP X28, X27, [X31 + 0x30]
	0x0348FD90 STP X26, X25, [X31 + 0x40]
	0x0348FD94 STP X24, X23, [X31 + 0x50]
	0x0348FD98 STP X22, X21, [X31 + 0x60]
	0x0348FD9C STP X20, X19, [X31 + 0x70]
	0x0348FDA0 ADRP X20, 0xF4E000
	0x0348FDA4 LDRB W8, [X20 + 0x93B]
	0x0348FDA8 MOV X19, X0
	0x0348FDAC TBNZ X8, 0x0, 0x348FE18
	0x0348FDB0 ADRP X0, 0xCA2000
	0x0348FDB4 LDR X0, [X0 + 0x4D8]
	0x0348FDB8 BL 0x1C16CF4
	0x0348FDBC ADRP X0, 0xCA2000
	0x0348FDC0 LDR X0, [X0 + 0x470]
	0x0348FDC4 BL 0x1C16CF4
	0x0348FDC8 ADRP X0, 0xCA2000
	0x0348FDCC LDR X0, [X0 + 0x168]
	0x0348FDD0 BL 0x1C16CF4
	0x0348FDD4 ADRP X0, 0xC66000
	0x0348FDD8 LDR X0, [X0 + 0x278]
	0x0348FDDC BL 0x1C16CF4
	0x0348FDE0 ADRP X0, 0xC67000
	0x0348FDE4 LDR X0, [X0 + 0x1E0]
	0x0348FDE8 BL 0x1C16CF4
	0x0348FDEC ADRP X0, 0xC67000
	0x0348FDF0 LDR X0, [X0 + 0x1F0]
	0x0348FDF4 BL 0x1C16CF4
	0x0348FDF8 ADRP X0, 0xC67000
	0x0348FDFC LDR X0, [X0 + 0x1F8]
	0x0348FE00 BL 0x1C16CF4
	0x0348FE04 ADRP X0, 0xCA2000
	0x0348FE08 LDR X0, [X0 + 0x390]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xF4F000
	008 Move W8, [X20+2353]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xC65000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move X0, 0xC65000
	018 Move X0, [X0+2760]
	019 Call 0x1C17CF4
	020 Move X0, 0xCA3000
	021 Move X0, [X0+1048]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA3000
	024 Move X0, [X0+1056]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2353], W8
	028 Move X0, X19
	029 Call HttpHelper.ReadHttpResponseCode, X0
	030 Compare X0, 0
	031 JumpIfEqual {143}
	032 Move X8, 0xCA3000
	033 Move X8, [X8+1048]
	034 Move W2, 3
	035 Move X3, X31
	036 Move X20, X0
	037 Move X1, [X8]
	038 Call String.StartsWith, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {83}
	043 Move X8, 0xC65000
	044 Move X8, [X8+2760]
	045 Move W1, 1
	046 Move X0, [X8]
	047 Call 0x1C17D6C
	048 Compare X0, 0
	049 JumpIfEqual {142}
	050 Move W8, [X0+24]
	051 Move X1, X0
	052 Compare W8, 0
	053 JumpIfEqual {141}
	054 Move X8, 0xCA3000
	055 Move X8, [X8+1056]
	056 Move X8, [X8]
	057 Move [X1+32], X8
	058 Compare X19, 0
	059 JumpIfEqual {142}
	060 Move X0, X19
	061 Move W2, W31
	062 Move X3, X31
	063 Call String.Split, X0, X1, X2
	064 Compare X0, 0
	065 JumpIfEqual {142}
	066 Move X8, [X0+24]
	067 Move X21, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X22, X31
	070 And X8, X8, 0
	071 Add X23, X21, 32
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, [X23]
	074 Move X1, X31
	075 Call String.IsNullOrWhiteSpace, X0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {90}
	080 Move W8, [X21+24]
	081 Add X22, X22, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return 
	090 Move X8, 0xC65000
	091 Move X8, [X8+2288]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X1, X31
	095 Move X23, X22
	096 Move X22, X0
	097 Call StringBuilder..ctor, X0
	098 Move W8, [X21+24]
	099 Add W10, W23, 1
	100 Subtract W11, W8, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X9, X23
	103 Add X23, X23, 5
	104 Subtract W9, W23, 4
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Compare X22, 0
	107 JumpIfEqual {142}
	108 Move X1, [X21]
	109 Move X0, X22
	110 Move X2, X31
	111 Call StringBuilder.AppendLine, X0, X1
	112 Move W8, [X21+24]
	113 Add X23, X23, 1
	114 Subtract W10, W23, 4
	115 Subtract W9, W8, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X22
	118 Call 0x19913C0
	119 Move X8, [X22]
	120 Move X0, X22
	121 Move X9, [X8+360]
	122 Move X1, [X8+368]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X21, X0
	125 Move X0, 0xCA3000
	126 Move X0, [X0+1064]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X1, X20
	130 Move X2, X21
	131 Move X3, X19
	132 Move X4, X31
	133 Move X22, X0
	134 Call InvalidHttpResponseCodeException..ctor, X0, X1, X2, X3
	135 Move X0, 0xCA3000
	136 Move X0, [X0+1072]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X22
	140 Call 0x1C17DEC
	141 Call 0x1C17F28
	142 Call 0x1C17F20
	143 Move X0, 0xCA3000
	144 Move X0, [X0+1064]
	145 Call 0x1C17D08
	146 Call 0x1C17F10
	147 Move X1, X31
	148 Move X2, X31
	149 Move X3, X19
	150 Move X4, X31
	151 Move X20, X0
	152 Call InvalidHttpResponseCodeException..ctor, X0, X1, X2, X3
	153 Move X0, 0xCA3000
	154 Move X0, [X0+1072]
	155 Call 0x1C17D08
	156 Move X1, X0
	157 Move X0, X20
	158 Call 0x1C17DEC

Method: System.Void TlsAuthenticateAsClient(System.Net.Security.SslStream sslStream, System.String host)

Disassembly:
	0x0348FE0C BL 0x1C16CF4
	0x0348FE10 MOVZ W8, 0x1
	0x0348FE14 STRB W8, [X20 + 0x93B]
	0x0348FE18 STR X31, [X31 + 0x18]
	0x0348FE1C ADRP X28, 0xCA2000
	0x0348FE20 LDR W8, [X19]
	0x0348FE24 LDR X24, [X19 + 0x30]
	0x0348FE28 LDR X28, [X28 + 0x168]
	0x0348FE2C CBZ W8, 0x348FEA4
	0x0348FE30 LDP X0, X1, [X19 + 0x20]
	0x0348FE34 BL 0x348C7DC
	0x0348FE38 CBZ X0, 0x348FFA0
	0x0348FE3C ADRP X8, 0xC67000

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {14}
	004 Move X8, [X1]
	005 Move W3, 3072
	006 Move W4, 1
	007 Move X0, X1
	008 Move X6, [X8+968]
	009 Move X5, [X8+976]
	010 Move X1, X2
	011 Move X2, X31
	012 Move X30, [X31+16]
	013 CallNoReturn X6
	014 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.IO.Stream> GetStream(System.Guid loggingGuid, System.Boolean isSecure, System.Boolean noDelay, System.String host, System.Int32 port, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0348FE40 LDR X8, [X8 + 0x1F8]
	0x0348FE44 LDR X1, [X8]
	0x0348FE48 BL 0x269F5D0
	0x0348FE4C ADRP X8, 0xC67000
	0x0348FE50 LDR X8, [X8 + 0x1F0]
	0x0348FE54 STR X0, [X31 + 0x18]
	0x0348FE58 LDR X1, [X8]
	0x0348FE5C ADD X0, X31, 0x18
	0x0348FE60 BL 0x2677430
	0x0348FE64 TBNZ X0, 0x0, 0x348FEB8
	0x0348FE68 STR W31, [X19]
	0x0348FE6C LDR X8, [X31 + 0x18]
	0x0348FE70 STR X8, [X19 + 0x68]
	0x0348FE74 LDR X0, [X28]
	0x0348FE78 LDR W8, [X0 + 0xE0]
	0x0348FE7C CBNZ W8, 0x348FE84
	0x0348FE80 BL 0x1C16DFC
	0x0348FE84 ADRP X8, 0xCA2000
	0x0348FE88 LDR X8, [X8 + 0x4D8]
	0x0348FE8C ADD X0, X19, 0x8
	0x0348FE90 LDR X3, [X8]
	0x0348FE94 ADD X1, X31, 0x18
	0x0348FE98 MOV X2, X19
	0x0348FE9C BL 0x1FC3DE4
	0x0348FEA0 B 0x348FF7C
	0x0348FEA4 LDR X8, [X19 + 0x68]
	0x0348FEA8 MOVN W9, 0x0
	0x0348FEAC STR X8, [X31 + 0x18]
	0x0348FEB0 STR X31, [X19 + 0x68]
	0x0348FEB4 STR W9, [X19]
	0x0348FEB8 ADRP X8, 0xC67000
	0x0348FEBC LDR X8, [X8 + 0x1E0]
	0x0348FEC0 ADD X0, X31, 0x18
	0x0348FEC4 LDR X1, [X8]
	0x0348FEC8 BL 0x2677474
	0x0348FECC CBZ X24, 0x348FF9C
	0x0348FED0 MOV X20, X0
	0x0348FED4 MOV X1, X0
	0x0348FED8 BL 0x348EBD4
	0x0348FEDC LDR X4, [X19 + 0x48]
	0x0348FEE0 MOV X3, X20
	0x0348FEE4 BL 0x348E9CC
	0x0348FEE8 MOV X1, X20
	0x0348FEEC BL 0x348E8E0
	0x0348FEF0 ADRP X8, 0xCA2000
	0x0348FEF4 LDR X8, [X8 + 0x390]
	0x0348FEF8 MOV X21, X0
	0x0348FEFC LDP X22, X23, [X19 + 0x38]
	0x0348FF00 LDR X24, [X24 + 0x10]
	0x0348FF04 LDR X25, [X19 + 0x20]
	0x0348FF08 LDP X26, X27, [X19 + 0x50]
	0x0348FF0C LDRB W29, [X19 + 0x60]
	0x0348FF10 LDR X0, [X8]
	0x0348FF14 BL 0x1C16F10
	0x0348FF18 MOV X20, X0
	0x0348FF1C CMP W29, 0x0
	0x0348FF20 CSET W7, NE
	0x0348FF24 MOVZ W8, 0x1
	0x0348FF28 MOV X1, X22
	0x0348FF2C MOV X2, X23
	0x0348FF30 MOV X3, X24
	0x0348FF34 MOV X4, X25
	0x0348FF38 MOV X5, X26
	0x0348FF3C MOV X6, X27
	0x0348FF40 STP X21, X31, [X31 + 0x8]
	0x0348FF44 STRB W8, [X31]
	0x0348FF48 BL 0x3495B60
	0x0348FF4C MOVN W8, 0x1
	0x0348FF50 STR W8, [X19], #0x8
	0x0348FF54 LDR X0, [X28]
	0x0348FF58 ADRP X21, 0xCA2000
	0x0348FF5C LDR W8, [X0 + 0xE0]
	0x0348FF60 LDR X21, [X21 + 0x470]
	0x0348FF64 CBNZ W8, 0x348FF6C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X26, 0xF4F000
	013 Move X25, 0xCA3000
	014 Move W8, [X26+2354]
	015 Move X25, [X25+1080]
	016 Move X19, X7
	017 Move W20, W6
	018 Move X21, X5
	019 Move W23, W4
	020 Move W24, W3
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0xCA3000
	027 Move X0, [X0+1088]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA3000
	030 Move X0, [X0+1096]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA3000
	033 Move X0, [X0+1104]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA3000
	036 Move X0, [X0+1080]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+2354], W8
	040 Move X0, [X25]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+64], V0
	043 Move [X31+72], V0
	044 Move [X31+32], V0
	045 Move [X31+40], V0
	046 Move [X31], V0
	047 Move [X31+8], V0
	048 Move X27, 0xCA3000
	049 Move X26, 0xCA3000
	050 Move X25, 0xCA3000
	051 Move W8, [X0+224]
	052 Move X27, [X27+1088]
	053 Move X26, [X26+1096]
	054 Move X25, [X25+1104]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X27]
	059 Add X8, X31, 0
	060 And W27, W23, 1
	061 Or X23, X8, 15
	062 Move X8, X23
	063 And W24, W24, 1
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X26]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X23
	071 Move [X31+72], X22
	072 Move [X31+64], W24
	073 Move [X31+32], W27
	074 Move [X31+40], X21
	075 Move [X31+48], W20
	076 Move [X31+56], X19
	077 Move [X31], W8
	078 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	079 Move X1, [X25]
	080 Move X0, X23
	081 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	082 Move X20, [X31+160]
	083 Move X19, [X31+168]
	084 Move X22, [X31+144]
	085 Move X21, [X31+152]
	086 Move X24, [X31+128]
	087 Move X23, [X31+136]
	088 Move X26, [X31+112]
	089 Move X25, [X31+120]
	090 Move X30, [X31+96]
	091 Move X27, [X31+104]
	092 Add X31, X31, 176
	093 Return X0

Method: System.Boolean ValidateServerCertificate(System.Object sender, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Security.Cryptography.X509Certificates.X509Chain chain, System.Net.Security.SslPolicyErrors sslPolicyErrors)

Disassembly:
	0x0348FF68 BL 0x1C16DFC
	0x0348FF6C LDR X2, [X21]
	0x0348FF70 MOV X0, X19

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.String GetAdditionalHeaders(System.Collections.Generic.Dictionary`2<System.String, System.String> additionalHeaders)

Disassembly:
	0x0348FF74 MOV X1, X20
	0x0348FF78 BL 0x26322B0
	0x0348FF7C LDP X20, X19, [X31 + 0x70]
	0x0348FF80 LDP X22, X21, [X31 + 0x60]
	0x0348FF84 LDP X24, X23, [X31 + 0x50]
	0x0348FF88 LDP X26, X25, [X31 + 0x40]
	0x0348FF8C LDP X28, X27, [X31 + 0x30]
	0x0348FF90 LDP X29, X30, [X31 + 0x20]
	0x0348FF94 ADD X31, X31, 0x80
	0x0348FF98 RET
	0x0348FF9C BL 0x1C16F20
	0x0348FFA0 BL 0x1C16F20
	0x0348FFA4 B 0x348FFBC
	0x0348FFA8 B 0x348FFBC
	0x0348FFAC B 0x348FFBC
	0x0348FFB0 B 0x3490094
	0x0348FFB4 B 0x3490094
	0x0348FFB8 B 0x348FFBC
	0x0348FFBC MOV X20, X0
	0x0348FFC0 CMP W1, 0x1
	0x0348FFC4 MOVZ W22, 0x1
	0x0348FFC8 B.NE 0x349009C
	0x0348FFCC MOV X0, X20
	0x0348FFD0 BL 0x3EB1AD0
	0x0348FFD4 MOV X20, X0
	0x0348FFD8 ADRP X0, 0xC64000
	0x0348FFDC LDR X0, [X0 + 0x7D0]
	0x0348FFE0 BL 0x1C16D08
	0x0348FFE4 LDR X8, [X20]
	0x0348FFE8 LDR X1, [X8]
	0x0348FFEC BL 0x1C17270
	0x0348FFF0 TBZ X0, 0x0, 0x3490048
	0x0348FFF4 LDR X20, [X20]
	0x0348FFF8 BL 0x3EB1AE0
	0x0348FFFC ADRP X0, 0xCA2000
	0x03490000 LDR X0, [X0 + 0x408]
	0x03490004 BL 0x1C16D08
	0x03490008 BL 0x1C16F10
	0x0349000C MOV X21, X0
	0x03490010 ADRP X0, 0xCA1000
	0x03490014 LDR X0, [X0 + 0x4E0]
	0x03490018 BL 0x1C16D08
	0x0349001C MOV X1, X0
	0x03490020 MOV X0, X21
	0x03490024 MOV X2, X20
	0x03490028 MOV X3, X31
	0x0349002C BL 0x349B96C
	0x03490030 ADRP X0, 0xCA1000
	0x03490034 LDR X0, [X0 + 0x4E8]
	0x03490038 BL 0x1C16D08
	0x0349003C MOV X1, X0
	0x03490040 MOV X0, X21
	0x03490044 BL 0x1C16DEC
	0x03490048 MOVZ W0, 0x8
	0x0349004C BL 0x3EB1AF0
	0x03490050 LDR X8, [X20]
	0x03490054 STR X8, [X0]
	0x03490058 ADRP X1, 0xA24000
	0x0349005C ADD X1, X1, 0xE58
	0x03490060 MOV X2, X31
	0x03490064 BL 0x3EB1B00
	0x03490068 B 0x3490134
	0x0349006C MOV X20, X0
	0x03490070 B 0x349009C
	0x03490074 MOV X20, X0
	0x03490078 B 0x349009C
	0x0349007C MOV X21, X1
	0x03490080 MOV X20, X0
	0x03490084 BL 0x3EB1AE0
	0x03490088 MOV W1, W21
	0x0349008C B 0x349009C
	0x03490090 B 0x3490094
	0x03490094 MOV X20, X0
	0x03490098 MOVZ W22, 0x1
	0x0349009C CMP W1, W22
	0x034900A0 B.NE 0x349013C
	0x034900A4 MOV X0, X20
	0x034900A8 BL 0x3EB1AD0
	0x034900AC MOV X20, X0
	0x034900B0 ADRP X0, 0xC63000
	0x034900B4 LDR X0, [X0 + 0x7D0]
	0x034900B8 BL 0x1C16D08
	0x034900BC LDR X8, [X20]
	0x034900C0 LDR X1, [X8]
	0x034900C4 BL 0x1C17270
	0x034900C8 TBZ X0, 0x0, 0x3490114
	0x034900CC LDR X20, [X20]
	0x034900D0 BL 0x3EB1AE0
	0x034900D4 MOVN W8, 0x1
	0x034900D8 STR W8, [X19], #0x8
	0x034900DC ADRP X0, 0xCA1000
	0x034900E0 LDR X0, [X0 + 0x168]
	0x034900E4 BL 0x1C16D08
	0x034900E8 LDR W8, [X0 + 0xE0]
	0x034900EC CBNZ W8, 0x34900F4
	0x034900F0 BL 0x1C16DFC
	0x034900F4 ADRP X0, 0xCA1000
	0x034900F8 LDR X0, [X0 + 0x490]
	0x034900FC BL 0x1C16D08
	0x03490100 MOV X2, X0
	0x03490104 MOV X0, X19
	0x03490108 MOV X1, X20
	0x0349010C BL 0x26324C8
	0x03490110 B 0x348FF7C
	0x03490114 MOVZ W0, 0x8
	0x03490118 BL 0x3EB1AF0
	0x0349011C LDR X8, [X20]
	0x03490120 STR X8, [X0]
	0x03490124 ADRP X1, 0xA24000
	0x03490128 ADD X1, X1, 0xE58
	0x0349012C MOV X2, X31
	0x03490130 BL 0x3EB1B00
	0x03490134 MOV X20, X0
	0x03490138 BL 0x3EB1AE0
	0x0349013C MOV X0, X20
	0x03490140 BL 0x1D2C690
	0x03490144 BL 0x1990590
	0x03490148 STR X30, [X31 - 0x30]!
	0x0349014C STP X22, X21, [X31 + 0x10]
	0x03490150 STP X20, X19, [X31 + 0x20]
	0x03490154 ADRP X22, 0xF4D000
	0x03490158 ADRP X21, 0xCA1000
	0x0349015C LDRB W8, [X22 + 0x93C]
	0x03490160 LDR X21, [X21 + 0x168]
	0x03490164 MOV X19, X1
	0x03490168 MOV X20, X0
	0x0349016C TBNZ X8, 0x0, 0x3490190
	0x03490170 ADRP X0, 0xCA1000
	0x03490174 LDR X0, [X0 + 0x498]
	0x03490178 BL 0x1C16CF4
	0x0349017C ADRP X0, 0xCA1000
	0x03490180 LDR X0, [X0 + 0x168]
	0x03490184 BL 0x1C16CF4
	0x03490188 MOVZ W8, 0x1
	0x0349018C STRB W8, [X22 + 0x93C]
	0x03490190 LDR X0, [X21]
	0x03490194 ADRP X21, 0xCA1000
	0x03490198 LDR W8, [X0 + 0xE0]
	0x0349019C LDR X21, [X21 + 0x498]
	0x034901A0 CBNZ W8, 0x34901A8
	0x034901A4 BL 0x1C16DFC
	0x034901A8 LDR X2, [X21]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X19, 0xF4F000
	008 Move W8, [X19+2355]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {49}
	014 Move X0, 0xC6A000
	015 Move X0, [X0+1256]
	016 Call 0x1C17CF4
	017 Move X0, 0xCA3000
	018 Move X0, [X0+1112]
	019 Call 0x1C17CF4
	020 Move X0, 0xC6A000
	021 Move X0, [X0+1264]
	022 Call 0x1C17CF4
	023 Move X0, 0xC6A000
	024 Move X0, [X0+1272]
	025 Call 0x1C17CF4
	026 Move X0, 0xC6A000
	027 Move X0, [X0+1280]
	028 Call 0x1C17CF4
	029 Move X0, 0xC68000
	030 Move X0, [X0+432]
	031 Call 0x1C17CF4
	032 Move X0, 0xC68000
	033 Move X0, [X0+440]
	034 Call 0x1C17CF4
	035 Move X0, 0xC65000
	036 Move X0, [X0+2288]
	037 Call 0x1C17CF4
	038 Move X0, 0xC67000
	039 Move X0, [X0+632]
	040 Call 0x1C17CF4
	041 Move X0, 0xC68000
	042 Move X0, [X0+2344]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA2000
	045 Move X0, [X0+1056]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+2355], W8
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move [X31+32], X31
	051 Move [X31], V0
	052 Move [X31+8], V0
	053 Compare X20, 0
	054 JumpIfEqual {100}
	055 Move X8, 0xCA2000
	056 Move X8, [X8+1112]
	057 Move X0, X20
	058 Move X1, [X8]
	059 Call Dictionary`2<Object, Object>.get_Count, X0
	060 Compare W0, 0
	061 JumpIfEqual {100}
	062 Move X8, 0xC64000
	063 Move X8, [X8+2288]
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X1, X31
	067 Move X19, X0
	068 Call StringBuilder..ctor, X0
	069 Move X8, 0xC69000
	070 Move X8, [X8+1256]
	071 Move X0, X20
	072 Move X1, [X8]
	073 Add X8, X31, 0
	074 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	075 Move X20, 0xC69000
	076 Move X21, 0xC68000
	077 Move X22, 0xCA2000
	078 Move X20, [X20+1272]
	079 Move X21, [X21+2344]
	080 Move X22, [X22+1056]
	081 Move X1, [X20]
	082 Add X0, X31, 0
	083 Call Enumerator<Object, Object>.MoveNext, X0
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {105}
	088 Move X0, [X31+16]
	089 Move X2, [X31+24]
	090 Move X1, [X21]
	091 Move X3, [X22]
	092 Move X4, X31
	093 Call String.Concat, X0, X1, X2, X3
	094 Move X1, X0
	095 Compare X19, 0
	096 JumpIfEqual {124}
	097 Move X0, X19
	098 Move X2, X31
	099 Call StringBuilder.Append, X0, X1
	100 Move X8, 0xC66000
	101 Move X8, [X8+632]
	102 Move X8, [X8]
	103 Move X8, [X8+184]
	104 Move X0, [X8]
	105 Move X8, 0xC69000
	106 Move X8, [X8+1264]
	107 Add X0, X31, 0
	108 Move X1, [X8]
	109 Call Enumerator<Object, Object>.Dispose, X0
	110 Compare X19, 0
	111 JumpIfEqual {125}
	112 Move X8, [X19]
	113 Move X0, X19
	114 Move X9, [X8+360]
	115 Move X1, [X8+368]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X20, [X31+80]
	118 Move X19, [X31+88]
	119 Move X22, [X31+64]
	120 Move X21, [X31+72]
	121 Move X30, [X31+48]
	122 Add X31, X31, 96
	123 Return X0
	124 Call 0x1C17F20
	125 Call 0x1C17F20
	126 Move X20, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X20
	129 Call 0x3EB2AD0
	130 Move X21, [X0]
	131 Call 0x3EB2AE0
	132 Move X8, 0xC69000
	133 Move X8, [X8+1264]
	134 Add X0, X31, 0
	135 Move X1, [X8]
	136 Call Enumerator<Object, Object>.Dispose, X0
	137 Compare X21, 0
	138 JumpIfEqual {110}
	139 Move X0, X21
	140 Call 0x1C17F18
	141 Move X21, X31
	142 Move X20, X0
	143 Move X8, 0xC69000
	144 Move X8, [X8+1264]
	145 Move X1, [X8]
	146 Add X0, X31, 0
	147 Call Enumerator<Object, Object>.Dispose, X0
	148 Compare X21, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X20
	151 Call 0x1D2D690
	152 Move X0, X21
	153 Call 0x1C17F18
	154 Call 0x1991590

Method: System.Threading.Tasks.Task`1<System.Net.WebSockets.WebSocket> PerformHandshake(System.Guid guid, System.Uri uri, System.IO.Stream stream, Nakama.Ninja.WebSockets.WebSocketClientOptions options, System.Threading.CancellationToken token)

Disassembly:
	0x034901AC ADD X0, X20, 0x8
	0x034901B0 MOV X1, X19
	0x034901B4 LDP X20, X19, [X31 + 0x20]
	0x034901B8 LDP X22, X21, [X31 + 0x10]
	0x034901BC LDR X30, [X31], #0x30
	0x034901C0 B 0x2632228
	0x034901C4 SUB X31, X31, 0x50
	0x034901C8 STR X30, [X31 + 0x10]
	0x034901CC STP X24, X23, [X31 + 0x20]
	0x034901D0 STP X22, X21, [X31 + 0x30]
	0x034901D4 STP X20, X19, [X31 + 0x40]
	0x034901D8 ADRP X20, 0xF4D000
	0x034901DC LDRB W8, [X20 + 0x93D]
	0x034901E0 MOV X19, X0
	0x034901E4 TBNZ X8, 0x0, 0x349025C
	0x034901E8 ADRP X0, 0xCA1000
	0x034901EC LDR X0, [X0 + 0x4F0]
	0x034901F0 BL 0x1C16CF4
	0x034901F4 ADRP X0, 0xCA1000
	0x034901F8 LDR X0, [X0 + 0x4F8]
	0x034901FC BL 0x1C16CF4
	0x03490200 ADRP X0, 0xCA1000
	0x03490204 LDR X0, [X0 + 0x438]
	0x03490208 BL 0x1C16CF4
	0x0349020C ADRP X0, 0xC6B000
	0x03490210 LDR X0, [X0 + 0x7D8]
	0x03490214 BL 0x1C16CF4
	0x03490218 ADRP X0, 0xC70000
	0x0349021C LDR X0, [X0 + 0x968]
	0x03490220 BL 0x1C16CF4
	0x03490224 ADRP X0, 0xCA1000
	0x03490228 LDR X0, [X0 + 0x500]
	0x0349022C BL 0x1C16CF4
	0x03490230 ADRP X0, 0xCA1000
	0x03490234 LDR X0, [X0 + 0x508]
	0x03490238 BL 0x1C16CF4
	0x0349023C ADRP X0, 0xCA1000
	0x03490240 LDR X0, [X0 + 0x510]
	0x03490244 BL 0x1C16CF4
	0x03490248 ADRP X0, 0xCA1000
	0x0349024C LDR X0, [X0 + 0x518]
	0x03490250 BL 0x1C16CF4
	0x03490254 MOVZ W8, 0x1
	0x03490258 STRB W8, [X20 + 0x93D]
	0x0349025C STR X31, [X31 + 0x18]
	0x03490260 STR X31, [X31 + 0x8]
	0x03490264 ADRP X24, 0xCA1000
	0x03490268 LDR W8, [X19]
	0x0349026C LDR X20, [X19 + 0x48]
	0x03490270 LDR X24, [X24 + 0x438]
	0x03490274 CBZ W8, 0x34902A4
	0x03490278 CMP W8, 0x1
	0x0349027C B.NE 0x34903CC
	0x03490280 LDR X8, [X19 + 0x58]
	0x03490284 MOVN W9, 0x0
	0x03490288 STR X8, [X31 + 0x8]
	0x0349028C STR X31, [X19 + 0x58]
	0x03490290 STR W9, [X19]
	0x03490294 ADD X0, X31, 0x8
	0x03490298 MOV X1, X31
	0x0349029C BL 0x32C3B4C
	0x034902A0 B 0x34902C4
	0x034902A4 LDR X8, [X19 + 0x58]
	0x034902A8 MOVN W9, 0x0
	0x034902AC STR X8, [X31 + 0x8]
	0x034902B0 STR X31, [X19 + 0x58]
	0x034902B4 STR W9, [X19]
	0x034902B8 ADD X0, X31, 0x8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xF4E000
	012 Move X24, 0xCA2000
	013 Move W8, [X25+2356]
	014 Move X24, [X24+360]
	015 Move X19, X6
	016 Move X20, X5
	017 Move X21, X4
	018 Move X22, X3
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xCA2000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0xCA2000
	028 Move X0, [X0+1120]
	029 Call 0x1C17CF4
	030 Move X0, 0xCA2000
	031 Move X0, [X0+384]
	032 Call 0x1C17CF4
	033 Move X0, 0xCA2000
	034 Move X0, [X0+360]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+2356], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], V0
	041 Move [X31+56], V0
	042 Move [X31+16], V0
	043 Move [X31+24], V0
	044 Move [X31], V0
	045 Move X24, 0xCA2000
	046 Move X26, 0xCA2000
	047 Move X25, 0xCA2000
	048 Move W8, [X0+224]
	049 Move X24, [X24+368]
	050 Move X26, [X26+1120]
	051 Move X25, [X25+384]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Add X8, X31, 0
	057 Or X24, X8, 15
	058 Move X8, X24
	059 Call AsyncTaskMethodBuilder`1<Object>.Create
	060 Move X2, [X26]
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Add X1, X31, 0
	065 Move X0, X24
	066 Move [X31+48], X21
	067 Move [X31+56], X23
	068 Move [X31+32], X20
	069 Move [X31+40], X22
	070 Move [X31+64], X19
	071 Move [X31], W8
	072 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	073 Move X1, [X25]
	074 Move X0, X24
	075 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	076 Move X20, [X31+144]
	077 Move X19, [X31+152]
	078 Move X22, [X31+128]
	079 Move X21, [X31+136]
	080 Move X24, [X31+112]
	081 Move X23, [X31+120]
	082 Move X26, [X31+96]
	083 Move X25, [X31+104]
	084 Move X30, [X31+80]
	085 Add X31, X31, 160
	086 Return X0

