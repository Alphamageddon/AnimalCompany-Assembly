Type: Nakama.Ninja.WebSockets.BufferPool

Method: System.Void .ctor()

Disassembly:
	0x0348CBB0 LDR W8, [X19 + 0x14]
	0x0348CBB4 CMP W8, 0x801

ISIL:
	001 Move W1, 0x4000

Method: System.Void .ctor(System.Int32 bufferSize)

Disassembly:
	0x0348CBB8 B.GE 0x348CD38
	0x0348CBBC LDR X8, [X19]
	0x0348CBC0 MOV X0, X19
	0x0348CBC4 LDP X9, X1, [X8 + 0x188]
	0x0348CBC8 BLR X9
	0x0348CBCC CBZ X0, 0x348CD34
	0x0348CBD0 ADRP X8, 0xCA5000
	0x0348CBD4 LDR X8, [X8 + 0x320]
	0x0348CBD8 MOV X2, X31
	0x0348CBDC LDR X1, [X8]
	0x0348CBE0 BL 0x362FAB4
	0x0348CBE4 CBZ X0, 0x348CD34
	0x0348CBE8 MOV X1, X31
	0x0348CBEC BL 0x362F62C
	0x0348CBF0 CBZ X0, 0x348CD34
	0x0348CBF4 MOV X1, X31
	0x0348CBF8 BL 0x322B8DC
	0x0348CBFC ADRP X8, 0xC70000
	0x0348CC00 LDR X8, [X8 + 0x8D8]
	0x0348CC04 MOV X19, X0
	0x0348CC08 MOVZ W1, 0x1
	0x0348CC0C LDR X8, [X8]
	0x0348CC10 MOV X0, X8
	0x0348CC14 BL 0x1C16D6C
	0x0348CC18 CBZ X0, 0x348CD34
	0x0348CC1C LDR W8, [X0 + 0x18]
	0x0348CC20 MOV X1, X0
	0x0348CC24 CBZ W8, 0x348CDAC
	0x0348CC28 MOVZ W8, 0x2C
	0x0348CC2C STRH W8, [X1 + 0x20]
	0x0348CC30 CBZ X19, 0x348CD34
	0x0348CC34 MOVZ W2, 0x1
	0x0348CC38 MOV X0, X19
	0x0348CC3C MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF52000
	008 Move X22, 0xCA6000
	009 Move X21, 0xCA6000
	010 Move W8, [X23+2317]
	011 Move X22, [X22+672]
	012 Move X21, [X21+680]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xCA6000
	020 Move X0, [X0+680]
	021 Call 0x1C17CF4
	022 Move X0, 0xCA6000
	023 Move X0, [X0+672]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2317], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Move [X19+24], W20
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X1, [X21]
	034 Move X20, X0
	035 Call 0x2995E64, X0
	036 Move [X19+16], X20
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: System.IO.MemoryStream GetBuffer()

Disassembly:
	0x0348CC40 BL 0x3229F54
	0x0348CC44 ADRP X22, 0xCA5000
	0x0348CC48 LDR X22, [X22 + 0x318]
	0x0348CC4C MOV X19, X0
	0x0348CC50 LDR X8, [X22]
	0x0348CC54 LDR W9, [X8 + 0xE0]
	0x0348CC58 CBNZ W9, 0x348CC68
	0x0348CC5C MOV X0, X8
	0x0348CC60 BL 0x1C16DFC
	0x0348CC64 LDR X8, [X22]
	0x0348CC68 LDR X9, [X8 + 0xB8]
	0x0348CC6C LDR X20, [X9 + 0x8]
	0x0348CC70 CBNZ X20, 0x348CCC8
	0x0348CC74 LDR W9, [X8 + 0xE0]
	0x0348CC78 CBNZ W9, 0x348CC88
	0x0348CC7C MOV X0, X8
	0x0348CC80 BL 0x1C16DFC
	0x0348CC84 LDR X8, [X22]
	0x0348CC88 ADRP X9, 0xC74000
	0x0348CC8C LDR X8, [X8 + 0xB8]
	0x0348CC90 LDR X9, [X9 + 0xDB0]
	0x0348CC94 LDR X21, [X8]
	0x0348CC98 LDR X0, [X9]
	0x0348CC9C BL 0x1C16F10
	0x0348CCA0 ADRP X8, 0xCA5000
	0x0348CCA4 LDR X8, [X8 + 0x310]
	0x0348CCA8 MOV X1, X21
	0x0348CCAC MOV X3, X31
	0x0348CCB0 MOV X20, X0
	0x0348CCB4 LDR X2, [X8]
	0x0348CCB8 BL 0x2D30578
	0x0348CCBC LDR X8, [X22]
	0x0348CCC0 LDR X8, [X8 + 0xB8]
	0x0348CCC4 STR X20, [X8 + 0x8]
	0x0348CCC8 ADRP X8, 0xC74000
	0x0348CCCC LDR X8, [X8 + 0xDA0]
	0x0348CCD0 MOV X0, X19
	0x0348CCD4 MOV X1, X20
	0x0348CCD8 LDR X2, [X8]
	0x0348CCDC BL 0x21CF224
	0x0348CCE0 ADRP X8, 0xCA5000
	0x0348CCE4 LDR X8, [X8 + 0x308]
	0x0348CCE8 LDP X20, X19, [X31 + 0x20]
	0x0348CCEC LDP X22, X21, [X31 + 0x10]
	0x0348CCF0 LDR X1, [X8]
	0x0348CCF4 LDR X30, [X31], #0x30
	0x0348CCF8 B 0x21D79F4
	0x0348CCFC ADRP X8, 0xC68000
	0x0348CD00 LDR X8, [X8 + 0x1D0]
	0x0348CD04 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF52000
	007 Move W8, [X20+2318]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xC68000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move X0, 0xCA6000
	017 Move X0, [X0+688]
	018 Call 0x1C17CF4
	019 Move X0, 0xCA6000
	020 Move X0, [X0+696]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2318], W8
	024 Move [X31+8], X31
	025 Move X0, [X19+16]
	026 Compare X0, 0
	027 JumpIfEqual {60}
	028 Move X8, 0xCA6000
	029 Move X8, [X8+688]
	030 Move X21, 0xCA6000
	031 Add X1, X31, 8
	032 Move X2, [X8]
	033 Move X21, [X21+696]
	034 Call 0x29961F8, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {40}
	039 Move X20, [X31+8]
	040 Move X8, 0xC68000
	041 Move W1, [X19+24]
	042 Move X8, [X8+1560]
	043 Move X0, [X8]
	044 Call 0x1C17D6C
	045 Move X20, X0
	046 Move [X31+8], X0
	047 Move X0, [X21]
	048 Call 0x1C17F10
	049 Move X1, X20
	050 Move X2, X19
	051 Move X21, X0
	052 Call PublicBufferMemoryStream..ctor, X0, X1, X2
	053 Move X0, X21
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+16]
	057 Move X21, [X31+24]
	058 Add X31, X31, 48
	059 Return X0
	060 Call 0x1C17F20

Method: System.Void ReturnBuffer(System.Byte[] buffer)

Disassembly:
	0x0348CDC0 ADRP X22, 0xC6F000
	0x0348CDC4 ADRP X20, 0xCA5000
	0x0348CDC8 LDRB W8, [X21 + 0x919]
	0x0348CDCC LDR X22, [X22 + 0x600]
	0x0348CDD0 LDR X20, [X20 + 0x340]
	0x0348CDD4 MOV X19, X0
	0x0348CDD8 TBNZ X8, 0x0, 0x348CDFC
	0x0348CDDC ADRP X0, 0xC6F000
	0x0348CDE0 LDR X0, [X0 + 0x600]
	0x0348CDE4 BL 0x1C16CF4
	0x0348CDE8 ADRP X0, 0xCA5000
	0x0348CDEC LDR X0, [X0 + 0x340]
	0x0348CDF0 BL 0x1C16CF4
	0x0348CDF4 MOVZ W8, 0x1
	0x0348CDF8 STRB W8, [X21 + 0x919]
	0x0348CDFC LDR X0, [X22]
	0x0348CE00 BL 0x1C16F10
	0x0348CE04 LDR X1, [X20]
	0x0348CE08 MOVZ W2, 0x1
	0x0348CE0C MOV X3, X31
	0x0348CE10 MOV X20, X0
	0x0348CE14 BL 0x3633518

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF52000
	006 Move W8, [X21+2319]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xCA6000
	014 Move X0, [X0+704]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2319], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0xCA6000
	022 Move X8, [X8+704]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x2996008, X0, X1
	030 Return 
	031 Call 0x1C17F20

