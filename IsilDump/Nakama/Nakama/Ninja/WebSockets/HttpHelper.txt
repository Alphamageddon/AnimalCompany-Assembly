Type: Nakama.Ninja.WebSockets.HttpHelper

Method: System.String CalculateWebSocketKey()

Disassembly:
	0x0348D604 STR W8, [X19], #0x8
	0x0348D608 ADRP X0, 0xC69000
	0x0348D60C LDR X0, [X0 + 0x280]
	0x0348D610 BL 0x1C16D08
	0x0348D614 LDR W8, [X0 + 0xE0]
	0x0348D618 CBNZ W8, 0x348D620
	0x0348D61C BL 0x1C16DFC
	0x0348D620 MOV X0, X19
	0x0348D624 MOV X1, X20
	0x0348D628 MOV X2, X31
	0x0348D62C BL 0x32C4908
	0x0348D630 B 0x348D574
	0x0348D634 MOVZ W0, 0x8
	0x0348D638 BL 0x3EB1AF0
	0x0348D63C LDR X8, [X20]
	0x0348D640 STR X8, [X0]
	0x0348D644 ADRP X1, 0xA27000
	0x0348D648 ADD X1, X1, 0xE58
	0x0348D64C MOV X2, X31
	0x0348D650 BL 0x3EB1B00
	0x0348D654 MOV X20, X0
	0x0348D658 BL 0x3EB1AE0
	0x0348D65C MOV X0, X20
	0x0348D660 BL 0x1D2C690
	0x0348D664 BL 0x1990590
	0x0348D668 STR X30, [X31 - 0x30]!
	0x0348D66C STP X22, X21, [X31 + 0x10]
	0x0348D670 STP X20, X19, [X31 + 0x20]
	0x0348D674 ADRP X21, 0xF50000
	0x0348D678 ADRP X22, 0xC69000
	0x0348D67C LDRB W8, [X21 + 0x91F]
	0x0348D680 LDR X22, [X22 + 0x280]
	0x0348D684 MOV X19, X1
	0x0348D688 MOV X20, X0
	0x0348D68C TBNZ X8, 0x0, 0x348D6A4
	0x0348D690 ADRP X0, 0xC69000
	0x0348D694 LDR X0, [X0 + 0x280]
	0x0348D698 BL 0x1C16CF4
	0x0348D69C MOVZ W8, 0x1
	0x0348D6A0 STRB W8, [X21 + 0x91F]
	0x0348D6A4 LDR X0, [X22]
	0x0348D6A8 LDR W8, [X0 + 0xE0]
	0x0348D6AC CBNZ W8, 0x348D6B4
	0x0348D6B0 BL 0x1C16DFC
	0x0348D6B4 ADD X0, X20, 0x8
	0x0348D6B8 MOV X1, X19
	0x0348D6BC LDP X20, X19, [X31 + 0x20]
	0x0348D6C0 LDP X22, X21, [X31 + 0x10]
	0x0348D6C4 MOV X2, X31
	0x0348D6C8 LDR X30, [X31], #0x30
	0x0348D6CC B 0x32C477C
	0x0348D6D0 STR X30, [X31 - 0x40]!
	0x0348D6D4 STP X24, X23, [X31 + 0x10]
	0x0348D6D8 STP X22, X21, [X31 + 0x20]
	0x0348D6DC STP X20, X19, [X31 + 0x30]
	0x0348D6E0 ADRP X21, 0xF50000
	0x0348D6E4 LDRB W8, [X21 + 0x920]
	0x0348D6E8 MOV X19, X1
	0x0348D6EC MOV X20, X0
	0x0348D6F0 TBNZ X8, 0x0, 0x348D708
	0x0348D6F4 ADRP X0, 0xCA4000
	0x0348D6F8 LDR X0, [X0 + 0x378]
	0x0348D6FC BL 0x1C16CF4
	0x0348D700 MOVZ W8, 0x1
	0x0348D704 STRB W8, [X21 + 0x920]
	0x0348D708 ADRP X24, 0xCA4000
	0x0348D70C LDR X21, [X20 + 0x50]!
	0x0348D710 LDR X24, [X24 + 0x378]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF51000
	007 Move X19, 0xC68000
	008 Move W8, [X20+2323]
	009 Move X19, [X19+2544]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xC67000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xC70000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move X0, 0xC68000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0xC6E000
	024 Move X0, [X0+744]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2323], W8
	028 Move X0, [X19]
	029 Move X19, 0xC6E000
	030 Move X21, 0xC67000
	031 Move W8, [X0+224]
	032 Move X19, [X19+744]
	033 Move X21, [X21+1560]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X31
	038 Call DateTime.get_Now
	039 Move [X31+8], X0
	040 Add X0, X31, 8
	041 Move X1, X31
	042 Call DateTime.get_Ticks, X0
	043 Move X8, [X19]
	044 Move X19, X0
	045 Move X0, X8
	046 Call 0x1C17F10
	047 Move W1, W19
	048 Move X2, X31
	049 Move X20, X0
	050 Call Random..ctor, X0, X1
	051 Move X0, [X21]
	052 Move W1, 16
	053 Call 0x1C17D6C
	054 Compare X20, 0
	055 JumpIfEqual {79}
	056 Move X8, [X20]
	057 Move X21, 0xC70000
	058 Move X19, X0
	059 Move X0, X20
	060 Move X9, [X8+456]
	061 Move X2, [X8+464]
	062 Move X21, [X21+2536]
	063 Move X1, X19
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X19
	071 Move X1, X31
	072 Call Convert.ToBase64String, X0
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X30, [X31+16]
	076 Move X21, [X31+24]
	077 Add X31, X31, 48
	078 Return X0
	079 Call 0x1C17F20

Method: System.String ComputeSocketAcceptString(System.String secWebSocketKey)

Disassembly:
	0x0348D714 MOV X0, X21
	0x0348D718 MOV X1, X19
	0x0348D71C MOV X2, X31
	0x0348D720 BL 0x33C0DE4
	0x0348D724 CBZ X0, 0x348D744
	0x0348D728 LDR X23, [X24]
	0x0348D72C MOV X22, X0
	0x0348D730 MOV X1, X23
	0x0348D734 BL 0x1C16E00
	0x0348D738 MOV X1, X0
	0x0348D73C CBNZ X0, 0x348D748
	0x0348D740 B 0x348D774
	0x0348D744 MOV X1, X31
	0x0348D748 MOV X0, X20
	0x0348D74C MOV X2, X21
	0x0348D750 BL 0x1C24138
	0x0348D754 CMP X21, X0
	0x0348D758 MOV X21, X0
	0x0348D75C B.NE 0x348D714
	0x0348D760 LDP X20, X19, [X31 + 0x30]
	0x0348D764 LDP X22, X21, [X31 + 0x20]
	0x0348D768 LDP X24, X23, [X31 + 0x10]
	0x0348D76C LDR X30, [X31], #0x40
	0x0348D770 RET
	0x0348D774 MOV X0, X22
	0x0348D778 MOV X1, X23
	0x0348D77C BL 0x1C171E0
	0x0348D780 STR X30, [X31 - 0x40]!
	0x0348D784 STP X24, X23, [X31 + 0x10]
	0x0348D788 STP X22, X21, [X31 + 0x20]
	0x0348D78C STP X20, X19, [X31 + 0x30]
	0x0348D790 ADRP X21, 0xF50000
	0x0348D794 LDRB W8, [X21 + 0x921]
	0x0348D798 MOV X19, X1
	0x0348D79C MOV X20, X0
	0x0348D7A0 TBNZ X8, 0x0, 0x348D7B8
	0x0348D7A4 ADRP X0, 0xCA4000
	0x0348D7A8 LDR X0, [X0 + 0x378]
	0x0348D7AC BL 0x1C16CF4
	0x0348D7B0 MOVZ W8, 0x1
	0x0348D7B4 STRB W8, [X21 + 0x921]
	0x0348D7B8 ADRP X24, 0xCA4000
	0x0348D7BC LDR X21, [X20 + 0x50]!
	0x0348D7C0 LDR X24, [X24 + 0x378]
	0x0348D7C4 MOV X0, X21
	0x0348D7C8 MOV X1, X19
	0x0348D7CC MOV X2, X31
	0x0348D7D0 BL 0x33C0FDC
	0x0348D7D4 CBZ X0, 0x348D7F4
	0x0348D7D8 LDR X23, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF51000
	006 Move X21, 0xCA5000
	007 Move W8, [X20+2324]
	008 Move X21, [X21+736]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC70000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move X0, 0xCA5000
	018 Move X0, [X0+736]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2324], W8
	022 Move X1, [X21]
	023 Move X0, X19
	024 Move X2, X31
	025 Call String.Concat, X0, X1
	026 Move X19, X0
	027 Move X0, X31
	028 Call Encoding.get_UTF8
	029 Compare X0, 0
	030 JumpIfEqual {61}
	031 Move X8, [X0]
	032 Move X1, X19
	033 Move X9, [X8+616]
	034 Move X2, [X8+624]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X19, X0
	037 Move X0, X31
	038 Call SHA1.Create
	039 Compare X0, 0
	040 JumpIfEqual {61}
	041 Move X20, 0xC70000
	042 Move X20, [X20+2536]
	043 Move X1, X19
	044 Move X2, X31
	045 Call HashAlgorithm.ComputeHash, X0, X1
	046 Move X8, [X20]
	047 Move X19, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call Convert.ToBase64String, X0
	060 Return X0
	061 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.String> ReadHttpHeaderAsync(System.IO.Stream stream, System.Threading.CancellationToken token)

Disassembly:
	0x0348D7DC MOV X22, X0
	0x0348D7E0 MOV X1, X23
	0x0348D7E4 BL 0x1C16E00
	0x0348D7E8 MOV X1, X0
	0x0348D7EC CBNZ X0, 0x348D7F8
	0x0348D7F0 B 0x348D824
	0x0348D7F4 MOV X1, X31
	0x0348D7F8 MOV X0, X20
	0x0348D7FC MOV X2, X21
	0x0348D800 BL 0x1C24138
	0x0348D804 CMP X21, X0
	0x0348D808 MOV X21, X0
	0x0348D80C B.NE 0x348D7C4
	0x0348D810 LDP X20, X19, [X31 + 0x30]
	0x0348D814 LDP X22, X21, [X31 + 0x20]
	0x0348D818 LDP X24, X23, [X31 + 0x10]
	0x0348D81C LDR X30, [X31], #0x40
	0x0348D820 RET
	0x0348D824 MOV X0, X22
	0x0348D828 MOV X1, X23
	0x0348D82C BL 0x1C171E0
	0x0348D830 STP X30, X25, [X31 - 0x40]!
	0x0348D834 STP X24, X23, [X31 + 0x10]
	0x0348D838 STP X22, X21, [X31 + 0x20]
	0x0348D83C STP X20, X19, [X31 + 0x30]
	0x0348D840 ADRP X25, 0xF50000
	0x0348D844 LDRB W8, [X25 + 0x922]
	0x0348D848 MOV X20, X5
	0x0348D84C MOV X21, X4
	0x0348D850 MOV X22, X3
	0x0348D854 MOV X23, X2
	0x0348D858 MOV X24, X1
	0x0348D85C MOV X19, X0
	0x0348D860 TBNZ X8, 0x0, 0x348D8D8
	0x0348D864 ADRP X0, 0xCA4000
	0x0348D868 LDR X0, [X0 + 0x378]
	0x0348D86C BL 0x1C16CF4
	0x0348D870 ADRP X0, 0xC6E000
	0x0348D874 LDR X0, [X0 + 0x818]
	0x0348D878 BL 0x1C16CF4
	0x0348D87C ADRP X0, 0xCA4000
	0x0348D880 LDR X0, [X0 + 0x380]
	0x0348D884 BL 0x1C16CF4
	0x0348D888 ADRP X0, 0xCA4000
	0x0348D88C LDR X0, [X0 + 0x388]
	0x0348D890 BL 0x1C16CF4
	0x0348D894 ADRP X0, 0xC6E000
	0x0348D898 LDR X0, [X0 + 0x708]
	0x0348D89C BL 0x1C16CF4
	0x0348D8A0 ADRP X0, 0xC99000
	0x0348D8A4 LDR X0, [X0 + 0xCD0]
	0x0348D8A8 BL 0x1C16CF4
	0x0348D8AC ADRP X0, 0xC67000
	0x0348D8B0 LDR X0, [X0 + 0x7B8]
	0x0348D8B4 BL 0x1C16CF4
	0x0348D8B8 ADRP X0, 0xC68000
	0x0348D8BC LDR X0, [X0 + 0x570]
	0x0348D8C0 BL 0x1C16CF4
	0x0348D8C4 ADRP X0, 0xCA4000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X22, 0xF51000
	009 Move X21, 0xC6A000
	010 Move W8, [X22+2325]
	011 Move X21, [X21+304]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xC6A000
	019 Move X0, [X0+312]
	020 Call 0x1C17CF4
	021 Move X0, 0xCA5000
	022 Move X0, [X0+744]
	023 Call 0x1C17CF4
	024 Move X0, 0xC6A000
	025 Move X0, [X0+328]
	026 Call 0x1C17CF4
	027 Move X0, 0xC6A000
	028 Move X0, [X0+304]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2325], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+48], V0
	035 Move [X31+56], V0
	036 Move [X31+16], V0
	037 Move [X31+24], V0
	038 Move [X31], V0
	039 Move X21, 0xC6A000
	040 Move X23, 0xCA5000
	041 Move X22, 0xC6A000
	042 Move W8, [X0+224]
	043 Move X21, [X21+312]
	044 Move X23, [X23+744]
	045 Move X22, [X22+328]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, [X21]
	050 Add X8, X31, 0
	051 Or X21, X8, 15
	052 Move X8, X21
	053 Call AsyncTaskMethodBuilder`1<Object>.Create
	054 Move X2, [X23]
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W8, TEMP
	058 Add X1, X31, 0
	059 Move X0, X21
	060 Move [X31+32], X20
	061 Move [X31+40], X19
	062 Move [X31], W8
	063 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	064 Move X1, [X22]
	065 Move X0, X21
	066 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	067 Move X20, [X31+112]
	068 Move X19, [X31+120]
	069 Move X22, [X31+96]
	070 Move X21, [X31+104]
	071 Move X30, [X31+80]
	072 Move X23, [X31+88]
	073 Add X31, X31, 128
	074 Return X0

Method: System.Boolean IsWebSocketUpgradeRequest(System.String header)

Disassembly:
	0x0348D8C8 LDR X0, [X0 + 0x390]
	0x0348D8CC BL 0x1C16CF4
	0x0348D8D0 MOVZ W8, 0x1
	0x0348D8D4 STRB W8, [X25 + 0x922]
	0x0348D8D8 MOV X0, X19
	0x0348D8DC MOV X1, X31
	0x0348D8E0 BL 0x33BDD8C
	0x0348D8E4 CBZ X22, 0x348DA5C
	0x0348D8E8 ADRP X8, 0xCA4000
	0x0348D8EC LDR X8, [X8 + 0x390]
	0x0348D8F0 LDR X9, [X22]
	0x0348D8F4 LDR X8, [X8]
	0x0348D8F8 LDRB W11, [X9 + 0x130]
	0x0348D8FC LDRB W10, [X8 + 0x130]
	0x0348D900 CMP W11, W10
	0x0348D904 B.CC 0x348DA5C
	0x0348D908 LDR X9, [X9 + 0xC8]
	0x0348D90C ADD X9, X9, X10, 0x3, LSL
	0x0348D910 LDUR X9, [X9 - 0x8]
	0x0348D914 CMP X9, X8
	0x0348D918 B.NE 0x348DA5C
	0x0348D91C CBZ X19, 0x348DAA4
	0x0348D920 ADRP X8, 0xCA4000
	0x0348D924 LDR X8, [X8 + 0x378]
	0x0348D928 STP X22, X24, [X19 + 0x10]
	0x0348D92C STP X23, X21, [X19 + 0x20]
	0x0348D930 STR X20, [X19 + 0x38]
	0x0348D934 LDR X0, [X8]
	0x0348D938 ADRP X23, 0xCA4000
	0x0348D93C ADRP X25, 0xC6E000
	0x0348D940 ADRP X24, 0xC68000
	0x0348D944 LDR X23, [X23 + 0x388]
	0x0348D948 LDR X25, [X25 + 0x708]
	0x0348D94C LDR X24, [X24 + 0x570]
	0x0348D950 BL 0x1C16F10
	0x0348D954 LDR X2, [X23]
	0x0348D958 MOV X1, X19
	0x0348D95C MOV X3, X31
	0x0348D960 MOV X23, X0
	0x0348D964 BL 0x2D0EF74
	0x0348D968 MOV X0, X22
	0x0348D96C MOV X1, X23
	0x0348D970 MOV X2, X31
	0x0348D974 BL 0x3495A00
	0x0348D978 LDR X0, [X25]
	0x0348D97C LDR W8, [X0 + 0xE0]
	0x0348D980 CBNZ W8, 0x348D988
	0x0348D984 BL 0x1C16DFC
	0x0348D988 MOV X0, X31
	0x0348D98C BL 0x364BF60
	0x0348D990 STR X0, [X19 + 0x40]
	0x0348D994 LDR X0, [X24]
	0x0348D998 LDR W8, [X0 + 0xE0]
	0x0348D99C CBNZ W8, 0x348D9A8
	0x0348D9A0 BL 0x1C16DFC
	0x0348D9A4 LDR X0, [X24]
	0x0348D9A8 LDR X8, [X0 + 0xB8]
	0x0348D9AC MOV X0, X21
	0x0348D9B0 MOV X2, X31
	0x0348D9B4 LDR X1, [X8]
	0x0348D9B8 BL 0x3394CD8
	0x0348D9BC TBZ X0, 0x0, 0x348D9F0
	0x0348D9C0 ADRP X8, 0xC67000
	0x0348D9C4 LDR X8, [X8 + 0x7B8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF51000
	007 Move X21, 0xC6F000
	008 Move X20, 0xCA5000
	009 Move W8, [X22+2326]
	010 Move X21, [X21+1536]
	011 Move X20, [X20+752]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xC6F000
	018 Move X0, [X0+1536]
	019 Call 0x1C17CF4
	020 Move X0, 0xCA5000
	021 Move X0, [X0+752]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA5000
	024 Move X0, [X0+760]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2326], W8
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move X1, [X20]
	031 Move W2, 1
	032 Move X3, X31
	033 Move X20, X0
	034 Call Regex..ctor, X0, X1, X2
	035 Compare X20, 0
	036 JumpIfEqual {81}
	037 Move X0, X20
	038 Move X1, X19
	039 Move X2, X31
	040 Call Regex.Match, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {81}
	043 Move X1, X31
	044 Call Group.get_Success, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {74}
	049 Move X0, [X21]
	050 Call 0x1C17F10
	051 Move X8, 0xCA5000
	052 Move X8, [X8+760]
	053 Move W2, 1
	054 Move X3, X31
	055 Move X20, X0
	056 Move X1, [X8]
	057 Call Regex..ctor, X0, X1, X2
	058 Compare X20, 0
	059 JumpIfEqual {81}
	060 Move X0, X20
	061 Move X1, X19
	062 Move X2, X31
	063 Call Regex.Match, X0, X1
	064 Compare X0, 0
	065 JumpIfEqual {81}
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X1, X31
	071 Move X30, [X31+48]
	072 Call Group.get_Success, X0
	073 Return X0
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move W0, W31
	079 Move X30, [X31+48]
	080 Return X0
	081 Call 0x1C17F20

Method: System.String GetPathFromHeader(System.String httpHeader)

Disassembly:
	0x0348D9C8 LDR X0, [X8]
	0x0348D9CC LDR W8, [X0 + 0xE0]
	0x0348D9D0 CBNZ W8, 0x348D9D8
	0x0348D9D4 BL 0x1C16DFC
	0x0348D9D8 ADRP X8, 0xC99000
	0x0348D9DC LDR X8, [X8 + 0xCD0]
	0x0348D9E0 MOV W0, W31
	0x0348D9E4 LDR X1, [X8]
	0x0348D9E8 BL 0x229A250
	0x0348D9EC B 0x348DA44
	0x0348D9F0 ADRP X8, 0xC6E000
	0x0348D9F4 LDR X8, [X8 + 0x818]
	0x0348D9F8 LDR X0, [X8]
	0x0348D9FC BL 0x1C16F10
	0x0348DA00 ADRP X8, 0xCA4000
	0x0348DA04 LDR X8, [X8 + 0x380]
	0x0348DA08 MOV X1, X19
	0x0348DA0C MOV X3, X31
	0x0348DA10 MOV X21, X0
	0x0348DA14 LDR X2, [X8]
	0x0348DA18 BL 0x2D27AA8
	0x0348DA1C ADRP X8, 0xC67000
	0x0348DA20 LDR X8, [X8 + 0x7B8]
	0x0348DA24 LDR X0, [X8]
	0x0348DA28 LDR W8, [X0 + 0xE0]
	0x0348DA2C CBNZ W8, 0x348DA34
	0x0348DA30 BL 0x1C16DFC
	0x0348DA34 MOV X0, X21
	0x0348DA38 MOV X1, X20
	0x0348DA3C MOV X2, X31
	0x0348DA40 BL 0x33F4CEC
	0x0348DA44 STR X0, [X19 + 0x30]
	0x0348DA48 LDP X20, X19, [X31 + 0x30]
	0x0348DA4C LDP X22, X21, [X31 + 0x20]
	0x0348DA50 LDP X24, X23, [X31 + 0x10]
	0x0348DA54 LDP X30, X25, [X31], #0x40
	0x0348DA58 RET
	0x0348DA5C ADRP X0, 0xC6E000
	0x0348DA60 LDR X0, [X0 + 0xC08]
	0x0348DA64 BL 0x1C16D08
	0x0348DA68 BL 0x1C16F10
	0x0348DA6C MOV X19, X0
	0x0348DA70 ADRP X0, 0xCA4000
	0x0348DA74 LDR X0, [X0 + 0x398]
	0x0348DA78 BL 0x1C16D08
	0x0348DA7C MOV X1, X0
	0x0348DA80 MOV X0, X19
	0x0348DA84 MOV X2, X31
	0x0348DA88 BL 0x337B498
	0x0348DA8C ADRP X0, 0xCA4000
	0x0348DA90 LDR X0, [X0 + 0x3A0]
	0x0348DA94 BL 0x1C16D08
	0x0348DA98 MOV X1, X0
	0x0348DA9C MOV X0, X19
	0x0348DAA0 BL 0x1C16DEC
	0x0348DAA4 BL 0x1C16F20
	0x0348DAA8 SUB X31, X31, 0xB0
	0x0348DAAC STR X30, [X31 + 0x70]
	0x0348DAB0 STP X24, X23, [X31 + 0x80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF51000
	007 Move X22, 0xC6F000
	008 Move X20, 0xCA5000
	009 Move W8, [X21+2327]
	010 Move X22, [X22+1536]
	011 Move X20, [X20+752]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xC6F000
	018 Move X0, [X0+1536]
	019 Call 0x1C17CF4
	020 Move X0, 0xCA5000
	021 Move X0, [X0+752]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2327], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move W2, 1
	029 Move X3, X31
	030 Move X20, X0
	031 Call Regex..ctor, X0, X1, X2
	032 Compare X20, 0
	033 JumpIfEqual {78}
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Regex.Match, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {78}
	040 Move X1, X31
	041 Move X19, X0
	042 Call Group.get_Success, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {71}
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X9, [X8+392]
	050 Move X1, [X8+400]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {78}
	054 Move W1, 1
	055 Move X2, X31
	056 Call GroupCollection.get_Item, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {78}
	059 Move X1, X31
	060 Call Capture.get_Value, X0
	061 Compare X0, 0
	062 JumpIfEqual {78}
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X1, X31
	068 Move X30, [X31+48]
	069 Call String.Trim, X0
	070 Return X0
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X0, X31
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1C17F20

Method: System.Collections.Generic.IList`1<System.String> GetSubProtocols(System.String httpHeader)

Disassembly:
	0x0348DAB4 STP X22, X21, [X31 + 0x90]
	0x0348DAB8 STP X20, X19, [X31 + 0xA0]
	0x0348DABC ADRP X24, 0xF50000
	0x0348DAC0 ADRP X23, 0xC69000
	0x0348DAC4 LDRB W8, [X24 + 0x923]
	0x0348DAC8 LDR X23, [X23 + 0x280]
	0x0348DACC MOV X20, X3
	0x0348DAD0 MOV X21, X2
	0x0348DAD4 MOV X22, X1
	0x0348DAD8 MOV X19, X0
	0x0348DADC TBNZ X8, 0x0, 0x348DB00
	0x0348DAE0 ADRP X0, 0xCA4000
	0x0348DAE4 LDR X0, [X0 + 0x3A8]
	0x0348DAE8 BL 0x1C16CF4
	0x0348DAEC ADRP X0, 0xC69000
	0x0348DAF0 LDR X0, [X0 + 0x280]
	0x0348DAF4 BL 0x1C16CF4
	0x0348DAF8 MOVZ W8, 0x1
	0x0348DAFC STRB W8, [X24 + 0x923]
	0x0348DB00 LDR X0, [X23]
	0x0348DB04 MOVI V0.2D, 0x0
	0x0348DB08 STR X31, [X31 + 0x60]
	0x0348DB0C STP V0, V0, [X31 + 0x40]
	0x0348DB10 STP V0, V0, [X31 + 0x20]
	0x0348DB14 ADRP X23, 0xCA4000
	0x0348DB18 LDR W8, [X0 + 0xE0]
	0x0348DB1C LDR X23, [X23 + 0x3A8]
	0x0348DB20 CBNZ W8, 0x348DB28
	0x0348DB24 BL 0x1C16DFC
	0x0348DB28 ADD X8, X31, 0x8
	0x0348DB2C MOV X0, X31
	0x0348DB30 BL 0x32C4770
	0x0348DB34 LDUR V0, [X31 + 0x8]
	0x0348DB38 LDR X9, [X31 + 0x18]
	0x0348DB3C LDR X2, [X23]
	0x0348DB40 ADD X8, X31, 0x20
	0x0348DB44 STR X20, [X31 + 0x58]
	0x0348DB48 ORR X20, X8, 0xF
	0x0348DB4C MOVN W10, 0x0
	0x0348DB50 ADD X1, X31, 0x20
	0x0348DB54 MOV X0, X20
	0x0348DB58 STP X22, X21, [X31 + 0x48]
	0x0348DB5C STUR V0, [X31 + 0x28]
	0x0348DB60 STP X9, X19, [X31 + 0x38]
	0x0348DB64 STR W10, [X31 + 0x20]
	0x0348DB68 BL 0x21959B8
	0x0348DB6C MOV X0, X20
	0x0348DB70 MOV X1, X31
	0x0348DB74 BL 0x32C47F8
	0x0348DB78 LDP X20, X19, [X31 + 0xA0]
	0x0348DB7C LDP X22, X21, [X31 + 0x90]
	0x0348DB80 LDP X24, X23, [X31 + 0x80]
	0x0348DB84 LDR X30, [X31 + 0x70]
	0x0348DB88 ADD X31, X31, 0xB0
	0x0348DB8C RET
	0x0348DB90 LDR X9, [X0 + 0x50]
	0x0348DB94 CBZ X9, 0x348DBB4
	0x0348DB98 MOV X8, X0
	0x0348DB9C LDR X4, [X9 + 0x18]
	0x0348DBA0 LDR X0, [X9 + 0x40]
	0x0348DBA4 LDR X3, [X9 + 0x28]
	0x0348DBA8 MOV X2, X1
	0x0348DBAC MOV X1, X8
	0x0348DBB0 BR X4
	0x0348DBB4 RET
	0x0348DBB8 SUB X31, X31, 0x70
	0x0348DBBC STP X30, X21, [X31 + 0x50]
	0x0348DBC0 STP X20, X19, [X31 + 0x60]
	0x0348DBC4 ADRP X21, 0xF50000
	0x0348DBC8 ADRP X20, 0xC69000
	0x0348DBCC LDRB W8, [X21 + 0x924]
	0x0348DBD0 LDR X20, [X20 + 0x280]
	0x0348DBD4 MOV X19, X0
	0x0348DBD8 TBNZ X8, 0x0, 0x348DBFC
	0x0348DBDC ADRP X0, 0xCA4000
	0x0348DBE0 LDR X0, [X0 + 0x3B0]
	0x0348DBE4 BL 0x1C16CF4
	0x0348DBE8 ADRP X0, 0xC69000
	0x0348DBEC LDR X0, [X0 + 0x280]
	0x0348DBF0 BL 0x1C16CF4
	0x0348DBF4 MOVZ W8, 0x1
	0x0348DBF8 STRB W8, [X21 + 0x924]
	0x0348DBFC LDR X0, [X20]
	0x0348DC00 MOVI V0.2D, 0x0
	0x0348DC04 STP V0, V0, [X31 + 0x30]
	0x0348DC08 STR V0, [X31 + 0x2]
	0x0348DC0C ADRP X20, 0xCA4000
	0x0348DC10 LDR W8, [X0 + 0xE0]
	0x0348DC14 LDR X20, [X20 + 0x3B0]
	0x0348DC18 CBNZ W8, 0x348DC20
	0x0348DC1C BL 0x1C16DFC
	0x0348DC20 ADD X8, X31, 0x8
	0x0348DC24 MOV X0, X31
	0x0348DC28 BL 0x32C4770
	0x0348DC2C LDUR V0, [X31 + 0x8]
	0x0348DC30 LDR X9, [X31 + 0x18]
	0x0348DC34 LDR X2, [X20]
	0x0348DC38 ADD X8, X31, 0x20
	0x0348DC3C ORR X20, X8, 0xF
	0x0348DC40 MOVN W10, 0x0
	0x0348DC44 ADD X1, X31, 0x20
	0x0348DC48 MOV X0, X20
	0x0348DC4C STUR V0, [X31 + 0x28]
	0x0348DC50 STP X9, X19, [X31 + 0x38]
	0x0348DC54 STR W10, [X31 + 0x20]
	0x0348DC58 BL 0x21958B8
	0x0348DC5C MOV X0, X20
	0x0348DC60 MOV X1, X31
	0x0348DC64 BL 0x32C47F8
	0x0348DC68 LDP X20, X19, [X31 + 0x60]
	0x0348DC6C LDP X30, X21, [X31 + 0x50]
	0x0348DC70 ADD X31, X31, 0x70
	0x0348DC74 RET
	0x0348DC78 LDR X8, [X0]
	0x0348DC7C STR X31, [X0 + 0x48]
	0x0348DC80 MOV X1, X2
	0x0348DC84 LDP X3, X8, [X8 + 0x1A8]
	0x0348DC88 MOV X2, X8
	0x0348DC8C BR X3
	0x0348DC90 SUB X31, X31, 0x60
	0x0348DC94 STR X30, [X31 + 0x20]
	0x0348DC98 STP X24, X23, [X31 + 0x30]
	0x0348DC9C STP X22, X21, [X31 + 0x40]
	0x0348DCA0 STP X20, X19, [X31 + 0x50]
	0x0348DCA4 ADRP X20, 0xF50000
	0x0348DCA8 LDRB W8, [X20 + 0x925]
	0x0348DCAC MOV X19, X0
	0x0348DCB0 TBNZ X8, 0x0, 0x348DD1C
	0x0348DCB4 ADRP X0, 0xC71000
	0x0348DCB8 LDR X0, [X0 + 0xE68]
	0x0348DCBC BL 0x1C16CF4
	0x0348DCC0 ADRP X0, 0xC8E000
	0x0348DCC4 LDR X0, [X0 + 0x5B0]
	0x0348DCC8 BL 0x1C16CF4
	0x0348DCCC ADRP X0, 0xCA4000
	0x0348DCD0 LDR X0, [X0 + 0x3B8]
	0x0348DCD4 BL 0x1C16CF4
	0x0348DCD8 ADRP X0, 0xC69000
	0x0348DCDC LDR X0, [X0 + 0x280]
	0x0348DCE0 BL 0x1C16CF4
	0x0348DCE4 ADRP X0, 0xC6E000
	0x0348DCE8 LDR X0, [X0 + 0x7D8]
	0x0348DCEC BL 0x1C16CF4
	0x0348DCF0 ADRP X0, 0xC67000
	0x0348DCF4 LDR X0, [X0 + 0x7B8]
	0x0348DCF8 BL 0x1C16CF4
	0x0348DCFC ADRP X0, 0xC68000
	0x0348DD00 LDR X0, [X0 + 0x570]
	0x0348DD04 BL 0x1C16CF4
	0x0348DD08 ADRP X0, 0xCA4000
	0x0348DD0C LDR X0, [X0 + 0x3C0]
	0x0348DD10 BL 0x1C16CF4
	0x0348DD14 MOVZ W8, 0x1
	0x0348DD18 STRB W8, [X20 + 0x925]
	0x0348DD1C STR X31, [X31 + 0x28]
	0x0348DD20 STP X31, X31, [X31 + 0x10]
	0x0348DD24 STR X31, [X31 + 0x8]
	0x0348DD28 ADRP X24, 0xC6E000
	0x0348DD2C ADRP X23, 0xC69000
	0x0348DD30 LDR W8, [X19]
	0x0348DD34 LDR X20, [X19 + 0x20]
	0x0348DD38 LDR X24, [X24 + 0x7D8]
	0x0348DD3C LDR X23, [X23 + 0x280]
	0x0348DD40 CBZ W8, 0x348DD84
	0x0348DD44 CMP W8, 0x1
	0x0348DD48 B.EQ 0x348DD6C
	0x0348DD4C CMP W8, 0x2
	0x0348DD50 B.NE 0x348DDA8
	0x0348DD54 LDR X8, [X19 + 0x28]
	0x0348DD58 MOVN W9, 0x0
	0x0348DD5C STR X8, [X31 + 0x28]
	0x0348DD60 STR X31, [X19 + 0x28]
	0x0348DD64 STR W9, [X19]
	0x0348DD68 B 0x348DD9C
	0x0348DD6C LDR X8, [X19 + 0x28]
	0x0348DD70 MOVN W9, 0x0
	0x0348DD74 STR X8, [X31 + 0x28]
	0x0348DD78 STR X31, [X19 + 0x28]
	0x0348DD7C STR W9, [X19]
	0x0348DD80 B 0x348DFD0
	0x0348DD84 LDR X8, [X19 + 0x28]
	0x0348DD88 MOVN W9, 0x0
	0x0348DD8C STR X8, [X31 + 0x28]
	0x0348DD90 STR X31, [X19 + 0x28]
	0x0348DD94 STR W9, [X19]
	0x0348DD98 B 0x348DE24
	0x0348DD9C ADD X0, X31, 0x28
	0x0348DDA0 MOV X1, X31
	0x0348DDA4 BL 0x32C3B4C
	0x0348DDA8 CBZ X20, 0x348E094
	0x0348DDAC LDR X8, [X20 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF51000
	007 Move X22, 0xC6F000
	008 Move X20, 0xCA5000
	009 Move W8, [X21+2328]
	010 Move X22, [X22+1536]
	011 Move X20, [X20+768]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0xC70000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0xC74000
	021 Move X0, [X0+3488]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA5000
	024 Move X0, [X0+776]
	025 Call 0x1C17CF4
	026 Move X0, 0xC74000
	027 Move X0, [X0+3504]
	028 Call 0x1C17CF4
	029 Move X0, 0xC68000
	030 Move X0, [X0+448]
	031 Call 0x1C17CF4
	032 Move X0, 0xC68000
	033 Move X0, [X0+464]
	034 Call 0x1C17CF4
	035 Move X0, 0xC6F000
	036 Move X0, [X0+1536]
	037 Call 0x1C17CF4
	038 Move X0, 0xCA5000
	039 Move X0, [X0+784]
	040 Call 0x1C17CF4
	041 Move X0, 0xCA5000
	042 Move X0, [X0+792]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA5000
	045 Move X0, [X0+800]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA5000
	048 Move X0, [X0+768]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+2328], W8
	052 Move X0, [X22]
	053 Call 0x1C17F10
	054 Move X1, [X20]
	055 Move W2, 1
	056 Move X3, X31
	057 Move X20, X0
	058 Call Regex..ctor, X0, X1, X2
	059 Compare X20, 0
	060 JumpIfEqual {185}
	061 Move X0, X20
	062 Move X1, X19
	063 Move X2, X31
	064 Call Regex.Match, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {185}
	067 Move X1, X31
	068 Move X19, X0
	069 Call Group.get_Success, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {169}
	074 Move W8, [X19+20]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, [X19]
	077 Move X0, X19
	078 Move X9, [X8+392]
	079 Move X1, [X8+400]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Compare X0, 0
	082 JumpIfEqual {185}
	083 Move X8, 0xCA5000
	084 Move X8, [X8+800]
	085 Move X2, X31
	086 Move X1, [X8]
	087 Call GroupCollection.get_Item, X0, X1
	088 Compare X0, 0
	089 JumpIfEqual {185}
	090 Move X1, X31
	091 Call Capture.get_Value, X0
	092 Compare X0, 0
	093 JumpIfEqual {185}
	094 Move X1, X31
	095 Call String.Trim, X0
	096 Move X8, 0xC70000
	097 Move X8, [X8+2264]
	098 Move X19, X0
	099 Move W1, 1
	100 Move X8, [X8]
	101 Move X0, X8
	102 Call 0x1C17D6C
	103 Compare X0, 0
	104 JumpIfEqual {185}
	105 Move W8, [X0+24]
	106 Move X1, X0
	107 Compare W8, 0
	108 JumpIfEqual {215}
	109 Move W8, 44
	110 NotImplemented "Instruction STRH not yet implemented."
	111 Compare X19, 0
	112 JumpIfEqual {185}
	113 Move W2, 1
	114 Move X0, X19
	115 Move X3, X31
	116 Call String.Split, X0, X1, X2
	117 Move X22, 0xCA5000
	118 Move X22, [X22+792]
	119 Move X19, X0
	120 Move X8, [X22]
	121 Move W9, [X8+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {127}
	124 Move X0, X8
	125 Call 0x1C17DFC
	126 Move X8, [X22]
	127 Move X9, [X8+184]
	128 Move X20, [X9+8]
	129 Compare X20, 0
	130 JumpIfNotEqual {153}
	131 Move W9, [X8+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {137}
	134 Move X0, X8
	135 Call 0x1C17DFC
	136 Move X8, [X22]
	137 Move X9, 0xC74000
	138 Move X8, [X8+184]
	139 Move X9, [X9+3504]
	140 Move X21, [X8]
	141 Move X0, [X9]
	142 Call 0x1C17F10
	143 Move X8, 0xCA5000
	144 Move X8, [X8+784]
	145 Move X1, X21
	146 Move X3, X31
	147 Move X20, X0
	148 Move X2, [X8]
	149 Call Func`2<Object, Object>..ctor, X0, X1, X2
	150 Move X8, [X22]
	151 Move X8, [X8+184]
	152 Move [X8+8], X20
	153 Move X8, 0xC74000
	154 Move X8, [X8+3488]
	155 Move X0, X19
	156 Move X1, X20
	157 Move X2, [X8]
	158 Call Enumerable.Select, X0, X1
	159 Move X8, 0xCA5000
	160 Move X8, [X8+776]
	161 Move X20, [X31+32]
	162 Move X19, [X31+40]
	163 Move X22, [X31+16]
	164 Move X21, [X31+24]
	165 Move X1, [X8]
	166 Move X30, [X31+48]
	167 Call Enumerable.ToList, X0
	168 Return X0
	169 Move X8, 0xC68000
	170 Move X8, [X8+464]
	171 Move X0, [X8]
	172 Call 0x1C17F10
	173 Move X8, 0xC68000
	174 Move X8, [X8+448]
	175 Move X19, X0
	176 Move X1, [X8]
	177 Call List`1<Object>..ctor, X0
	178 Move X0, X19
	179 Move X20, [X31+32]
	180 Move X19, [X31+40]
	181 Move X22, [X31+16]
	182 Move X21, [X31+24]
	183 Move X30, [X31+48]
	184 Return X0
	185 Call 0x1C17F20
	186 Move W8, 2048
	187 Move [X31+12], W8
	188 Move X0, 0xC67000
	189 Move X0, [X0+1880]
	190 Call 0x1C17D08
	191 Add X1, X31, 12
	192 Call 0x1C17E04
	193 Move X19, X0
	194 Move X0, 0xCA5000
	195 Move X0, [X0+808]
	196 Call 0x1C17D08
	197 Move X1, X19
	198 Move X2, X31
	199 Call String.Format, X0, X1
	200 Move X19, X0
	201 Move X0, 0xCA5000
	202 Move X0, [X0+816]
	203 Call 0x1C17D08
	204 Call 0x1C17F10
	205 Move X1, X19
	206 Move X2, X31
	207 Move X20, X0
	208 Call EntityTooLargeException..ctor, X0, X1
	209 Move X0, 0xCA5000
	210 Move X0, [X0+824]
	211 Call 0x1C17D08
	212 Move X1, X0
	213 Move X0, X20
	214 Call 0x1C17DEC
	215 Call 0x1C17F28

Method: System.String ReadHttpResponseCode(System.String response)

Disassembly:
	0x0348DDB0 LDR X0, [X24]
	0x0348DDB4 STR X8, [X31 + 0x18]
	0x0348DDB8 LDR W8, [X0 + 0xE0]
	0x0348DDBC CBNZ W8, 0x348DDC4
	0x0348DDC0 BL 0x1C16DFC
	0x0348DDC4 ADD X0, X31, 0x18
	0x0348DDC8 MOV X1, X31
	0x0348DDCC BL 0x33DD2B0
	0x0348DDD0 TBNZ X0, 0x0, 0x348DFDC
	0x0348DDD4 ADRP X8, 0xC67000
	0x0348DDD8 LDR X8, [X8 + 0x7B8]
	0x0348DDDC LDR X21, [X20 + 0x28]
	0x0348DDE0 LDR X22, [X20 + 0x38]
	0x0348DDE4 LDR X0, [X8]
	0x0348DDE8 LDR W8, [X0 + 0xE0]
	0x0348DDEC CBNZ W8, 0x348DDF4
	0x0348DDF0 BL 0x1C16DFC
	0x0348DDF4 MOV X0, X21
	0x0348DDF8 MOV X1, X22
	0x0348DDFC MOV X2, X31
	0x0348DE00 BL 0x33F4F20
	0x0348DE04 CBZ X0, 0x348E0A0
	0x0348DE08 MOV X1, X31
	0x0348DE0C BL 0x33ED394
	0x0348DE10 STR X0, [X31 + 0x28]
	0x0348DE14 ADD X0, X31, 0x28
	0x0348DE18 MOV X1, X31
	0x0348DE1C BL 0x32C3A80
	0x0348DE20 TBZ X0, 0x0, 0x348E018
	0x0348DE24 ADD X0, X31, 0x28
	0x0348DE28 MOV X1, X31
	0x0348DE2C BL 0x32C3B4C
	0x0348DE30 CBZ X20, 0x348E098
	0x0348DE34 LDR X0, [X20 + 0x10]
	0x0348DE38 CBZ X0, 0x348E09C
	0x0348DE3C LDR X8, [X0]
	0x0348DE40 LDP X9, X1, [X8 + 0x1B8]
	0x0348DE44 BLR X9
	0x0348DE48 CMP W0, 0x2
	0x0348DE4C B.NE 0x348DFDC
	0x0348DE50 ADRP X22, 0xC68000
	0x0348DE54 LDR X8, [X20 + 0x48]
	0x0348DE58 LDR X22, [X22 + 0x570]
	0x0348DE5C CBNZ X8, 0x348DF60
	0x0348DE60 LDR X8, [X20 + 0x38]
	0x0348DE64 LDR X0, [X24]
	0x0348DE68 STR X8, [X31 + 0x18]
	0x0348DE6C LDR W8, [X0 + 0xE0]
	0x0348DE70 CBNZ W8, 0x348DE78
	0x0348DE74 BL 0x1C16DFC
	0x0348DE78 ADD X0, X31, 0x18
	0x0348DE7C MOV X1, X31
	0x0348DE80 BL 0x33DD2B0
	0x0348DE84 TBNZ X0, 0x0, 0x348DDA8
	0x0348DE88 LDR X0, [X20 + 0x40]
	0x0348DE8C CBZ X0, 0x348E0A8
	0x0348DE90 MOV X1, X31
	0x0348DE94 BL 0x364C034
	0x0348DE98 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF51000
	007 Move X22, 0xC6F000
	008 Move X20, 0xCA5000
	009 Move W8, [X21+2329]
	010 Move X22, [X22+1536]
	011 Move X20, [X20+832]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xC6F000
	018 Move X0, [X0+1536]
	019 Call 0x1C17CF4
	020 Move X0, 0xCA5000
	021 Move X0, [X0+832]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2329], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move W2, 1
	029 Move X3, X31
	030 Move X20, X0
	031 Call Regex..ctor, X0, X1, X2
	032 Compare X20, 0
	033 JumpIfEqual {78}
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Regex.Match, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {78}
	040 Move X1, X31
	041 Move X19, X0
	042 Call Group.get_Success, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {71}
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X9, [X8+392]
	050 Move X1, [X8+400]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {78}
	054 Move W1, 1
	055 Move X2, X31
	056 Call GroupCollection.get_Item, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {78}
	059 Move X1, X31
	060 Call Capture.get_Value, X0
	061 Compare X0, 0
	062 JumpIfEqual {78}
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X1, X31
	068 Move X30, [X31+48]
	069 Call String.Trim, X0
	070 Return X0
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X0, X31
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1C17F20

Method: System.Threading.Tasks.Task WriteHttpHeaderAsync(System.String response, System.IO.Stream stream, System.Threading.CancellationToken token)

Disassembly:
	0x0348DE9C LDR X0, [X22]
	0x0348DEA0 LDR W8, [X0 + 0xE0]
	0x0348DEA4 CBNZ W8, 0x348DEAC
	0x0348DEA8 BL 0x1C16DFC
	0x0348DEAC STR X21, [X20 + 0x48]
	0x0348DEB0 MOV X0, X21
	0x0348DEB4 MOV X1, X31
	0x0348DEB8 BL 0x3316CF8
	0x0348DEBC ADRP X8, 0xC8E000
	0x0348DEC0 LDR X8, [X8 + 0x5B0]
	0x0348DEC4 MOV X21, X0
	0x0348DEC8 LDR X0, [X8]
	0x0348DECC LDR W8, [X0 + 0xE0]
	0x0348DED0 CBNZ W8, 0x348DED8
	0x0348DED4 BL 0x1C16DFC
	0x0348DED8 ADRP X8, 0xC71000
	0x0348DEDC LDR X8, [X8 + 0xE68]
	0x0348DEE0 LDR X2, [X8]
	0x0348DEE4 ADD X0, X31, 0x8
	0x0348DEE8 MOV X1, X21
	0x0348DEEC BL 0x2B87B6C
	0x0348DEF0 LDP X1, X2, [X31 + 0x8]
	0x0348DEF4 LDR X3, [X20 + 0x38]
	0x0348DEF8 MOV X0, X20
	0x0348DEFC BL 0x348DAA8
	0x0348DF00 CBZ X0, 0x348E0A4
	0x0348DF04 MOV X1, X31
	0x0348DF08 BL 0x33ED394
	0x0348DF0C STR X0, [X31 + 0x28]
	0x0348DF10 ADD X0, X31, 0x28
	0x0348DF14 MOV X1, X31
	0x0348DF18 BL 0x32C3A80
	0x0348DF1C TBNZ X0, 0x0, 0x348DD9C
	0x0348DF20 MOVZ W8, 0x2
	0x0348DF24 STR W8, [X19]
	0x0348DF28 LDR X8, [X31 + 0x28]
	0x0348DF2C STR X8, [X19 + 0x28]
	0x0348DF30 LDR X0, [X23]
	0x0348DF34 LDR W8, [X0 + 0xE0]
	0x0348DF38 CBNZ W8, 0x348DF40
	0x0348DF3C BL 0x1C16DFC
	0x0348DF40 ADRP X8, 0xCA4000
	0x0348DF44 LDR X8, [X8 + 0x3B8]
	0x0348DF48 ADD X0, X19, 0x8
	0x0348DF4C LDR X3, [X8]
	0x0348DF50 ADD X1, X31, 0x28
	0x0348DF54 MOV X2, X19
	0x0348DF58 BL 0x218AFF8
	0x0348DF5C B 0x348E000
	0x0348DF60 LDR X21, [X20 + 0x10]
	0x0348DF64 LDR X8, [X20 + 0x28]
	0x0348DF68 LDR X0, [X22]
	0x0348DF6C STR X8, [X31]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0xF51000
	009 Move X22, 0xC6A000
	010 Move W8, [X23+2330]
	011 Move X22, [X22+640]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xCA5000
	020 Move X0, [X0+840]
	021 Call 0x1C17CF4
	022 Move X0, 0xC6A000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2330], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+64], V0
	030 Move [X31+72], V0
	031 Move [X31+32], V0
	032 Move [X31+40], V0
	033 Move X22, 0xCA5000
	034 Move W8, [X0+224]
	035 Move X22, [X22+840]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X22]
	045 Add X8, X31, 32
	046 Move [X31+72], X21
	047 Move [X31+80], X20
	048 Or X20, X8, 15
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W10, TEMP
	052 Add X1, X31, 32
	053 Move X0, X20
	054 Move [X31+40], V0
	055 Move [X31+56], X9
	056 Move [X31+64], X19
	057 Move [X31+32], W10
	058 Call AsyncTaskMethodBuilder.Start, X0, X1
	059 Move X0, X20
	060 Move X1, X31
	061 Call AsyncTaskMethodBuilder.get_Task, X0
	062 Move X20, [X31+128]
	063 Move X19, [X31+136]
	064 Move X22, [X31+112]
	065 Move X21, [X31+120]
	066 Move X30, [X31+96]
	067 Move X23, [X31+104]
	068 Add X31, X31, 144
	069 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0348DF70 ADD X1, X31, 0x0
	0x0348DF74 BL 0x1C16E04

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

