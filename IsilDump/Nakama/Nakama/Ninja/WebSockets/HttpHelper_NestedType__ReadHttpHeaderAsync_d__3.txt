Type: Nakama.Ninja.WebSockets.HttpHelper/<ReadHttpHeaderAsync>d__3

Method: System.Void MoveNext()

Disassembly:
	0x0348DFF4 MOV X0, X19
	0x0348DFF8 MOV X1, X31
	0x0348DFFC BL 0x32C4864
	0x0348E000 LDP X20, X19, [X31 + 0x50]
	0x0348E004 LDP X22, X21, [X31 + 0x40]
	0x0348E008 LDP X24, X23, [X31 + 0x30]
	0x0348E00C LDR X30, [X31 + 0x20]
	0x0348E010 ADD X31, X31, 0x60
	0x0348E014 RET
	0x0348E018 STR W31, [X19]
	0x0348E01C LDR X8, [X31 + 0x28]
	0x0348E020 STR X8, [X19 + 0x28]
	0x0348E024 LDR X0, [X23]
	0x0348E028 LDR W8, [X0 + 0xE0]
	0x0348E02C CBNZ W8, 0x348E034
	0x0348E030 BL 0x1C16DFC
	0x0348E034 ADRP X8, 0xCA3000
	0x0348E038 LDR X8, [X8 + 0x3B8]
	0x0348E03C ADD X0, X19, 0x8
	0x0348E040 LDR X3, [X8]
	0x0348E044 ADD X1, X31, 0x28
	0x0348E048 MOV X2, X19
	0x0348E04C BL 0x218AFF8
	0x0348E050 B 0x348E000
	0x0348E054 MOVZ W8, 0x1
	0x0348E058 STR W8, [X19]
	0x0348E05C LDR X8, [X31 + 0x28]
	0x0348E060 STR X8, [X19 + 0x28]
	0x0348E064 LDR X0, [X23]
	0x0348E068 LDR W8, [X0 + 0xE0]
	0x0348E06C CBNZ W8, 0x348E074
	0x0348E070 BL 0x1C16DFC
	0x0348E074 ADRP X8, 0xCA3000
	0x0348E078 LDR X8, [X8 + 0x3B8]
	0x0348E07C ADD X0, X19, 0x8
	0x0348E080 LDR X3, [X8]
	0x0348E084 ADD X1, X31, 0x28
	0x0348E088 MOV X2, X19
	0x0348E08C BL 0x218AFF8
	0x0348E090 B 0x348E000
	0x0348E094 BL 0x1C16F20
	0x0348E098 BL 0x1C16F20
	0x0348E09C BL 0x1C16F20
	0x0348E0A0 BL 0x1C16F20
	0x0348E0A4 BL 0x1C16F20
	0x0348E0A8 BL 0x1C16F20
	0x0348E0AC BL 0x1C16F20
	0x0348E0B0 BL 0x1C16F20
	0x0348E0B4 B 0x348E120
	0x0348E0B8 B 0x348E120
	0x0348E0BC B 0x348E120
	0x0348E0C0 B 0x348E120
	0x0348E0C4 B 0x348E120
	0x0348E0C8 B 0x348E120
	0x0348E0CC B 0x348E120
	0x0348E0D0 B 0x348E120
	0x0348E0D4 B 0x348E120
	0x0348E0D8 B 0x348E120
	0x0348E0DC B 0x348E120
	0x0348E0E0 B 0x348E120
	0x0348E0E4 B 0x348E120
	0x0348E0E8 B 0x348E120
	0x0348E0EC B 0x348E120
	0x0348E0F0 B 0x348E120
	0x0348E0F4 B 0x348E120
	0x0348E0F8 B 0x348E120
	0x0348E0FC B 0x348E120
	0x0348E100 B 0x348E120
	0x0348E104 B 0x348E120
	0x0348E108 B 0x348E120
	0x0348E10C B 0x348E120
	0x0348E110 B 0x348E120
	0x0348E114 B 0x348E120
	0x0348E118 B 0x348E120
	0x0348E11C B 0x348E120
	0x0348E120 MOV X20, X0
	0x0348E124 CMP W1, 0x1
	0x0348E128 B.NE 0x348E198
	0x0348E12C MOV X0, X20
	0x0348E130 BL 0x3EB1AD0
	0x0348E134 MOV X20, X0
	0x0348E138 ADRP X0, 0xC6D000
	0x0348E13C LDR X0, [X0 + 0x8A8]
	0x0348E140 BL 0x1C16D08
	0x0348E144 LDR X8, [X20]
	0x0348E148 LDR X1, [X8]
	0x0348E14C BL 0x1C17270
	0x0348E150 TBZ X0, 0x0, 0x348E15C
	0x0348E154 BL 0x3EB1AE0
	0x0348E158 B 0x348DFDC
	0x0348E15C MOVZ W0, 0x8
	0x0348E160 BL 0x3EB1AF0
	0x0348E164 LDR X8, [X20]
	0x0348E168 STR X8, [X0]
	0x0348E16C ADRP X1, 0xA26000
	0x0348E170 ADD X1, X1, 0xE58
	0x0348E174 MOV X2, X31
	0x0348E178 BL 0x3EB1B00
	0x0348E17C B 0x348E228
	0x0348E180 MOV X20, X0
	0x0348E184 B 0x348E198
	0x0348E188 MOV X21, X1
	0x0348E18C MOV X20, X0
	0x0348E190 BL 0x3EB1AE0
	0x0348E194 MOV W1, W21
	0x0348E198 MOVZ W8, 0x1
	0x0348E19C CMP W1, W8
	0x0348E1A0 B.NE 0x348E230
	0x0348E1A4 MOV X0, X20
	0x0348E1A8 BL 0x3EB1AD0
	0x0348E1AC MOV X20, X0
	0x0348E1B0 ADRP X0, 0xC65000
	0x0348E1B4 LDR X0, [X0 + 0x7D0]
	0x0348E1B8 BL 0x1C16D08
	0x0348E1BC LDR X8, [X20]
	0x0348E1C0 LDR X1, [X8]
	0x0348E1C4 BL 0x1C17270
	0x0348E1C8 TBZ X0, 0x0, 0x348E208
	0x0348E1CC LDR X20, [X20]
	0x0348E1D0 BL 0x3EB1AE0
	0x0348E1D4 MOVN W8, 0x1
	0x0348E1D8 STR W8, [X19], #0x8
	0x0348E1DC ADRP X0, 0xC68000
	0x0348E1E0 LDR X0, [X0 + 0x280]
	0x0348E1E4 BL 0x1C16D08
	0x0348E1E8 LDR W8, [X0 + 0xE0]
	0x0348E1EC CBNZ W8, 0x348E1F4
	0x0348E1F0 BL 0x1C16DFC
	0x0348E1F4 MOV X0, X19
	0x0348E1F8 MOV X1, X20
	0x0348E1FC MOV X2, X31
	0x0348E200 BL 0x32C4908
	0x0348E204 B 0x348E000
	0x0348E208 MOVZ W0, 0x8
	0x0348E20C BL 0x3EB1AF0
	0x0348E210 LDR X8, [X20]
	0x0348E214 STR X8, [X0]
	0x0348E218 ADRP X1, 0xA26000
	0x0348E21C ADD X1, X1, 0xE58
	0x0348E220 MOV X2, X31
	0x0348E224 BL 0x3EB1B00
	0x0348E228 MOV X20, X0
	0x0348E22C BL 0x3EB1AE0
	0x0348E230 MOV X0, X20
	0x0348E234 BL 0x1D2C690
	0x0348E238 BL 0x1990590
	0x0348E23C MOV X20, X0
	0x0348E240 B 0x348E124
	0x0348E244 STR X30, [X31 - 0x30]!
	0x0348E248 STP X22, X21, [X31 + 0x10]
	0x0348E24C STP X20, X19, [X31 + 0x20]
	0x0348E250 ADRP X21, 0xF4F000
	0x0348E254 ADRP X22, 0xC68000
	0x0348E258 LDRB W8, [X21 + 0x926]
	0x0348E25C LDR X22, [X22 + 0x280]
	0x0348E260 MOV X19, X1
	0x0348E264 MOV X20, X0
	0x0348E268 TBNZ X8, 0x0, 0x348E280
	0x0348E26C ADRP X0, 0xC68000
	0x0348E270 LDR X0, [X0 + 0x280]
	0x0348E274 BL 0x1C16CF4
	0x0348E278 MOVZ W8, 0x1
	0x0348E27C STRB W8, [X21 + 0x926]
	0x0348E280 LDR X0, [X22]
	0x0348E284 LDR W8, [X0 + 0xE0]
	0x0348E288 CBNZ W8, 0x348E290
	0x0348E28C BL 0x1C16DFC
	0x0348E290 ADD X0, X20, 0x8
	0x0348E294 MOV X1, X19
	0x0348E298 LDP X20, X19, [X31 + 0x20]
	0x0348E29C LDP X22, X21, [X31 + 0x10]
	0x0348E2A0 MOV X2, X31
	0x0348E2A4 LDR X30, [X31], #0x30
	0x0348E2A8 B 0x32C477C
	0x0348E2AC STR X30, [X31 - 0x20]!
	0x0348E2B0 STP X20, X19, [X31 + 0x10]
	0x0348E2B4 ADRP X20, 0xF4F000
	0x0348E2B8 LDRB W8, [X20 + 0x927]
	0x0348E2BC MOV X19, X0
	0x0348E2C0 TBNZ X8, 0x0, 0x348E2E4
	0x0348E2C4 ADRP X0, 0xCA3000
	0x0348E2C8 LDR X0, [X0 + 0x3C8]
	0x0348E2CC BL 0x1C16CF4
	0x0348E2D0 ADRP X0, 0xC68000
	0x0348E2D4 LDR X0, [X0 + 0x280]
	0x0348E2D8 BL 0x1C16CF4
	0x0348E2DC MOVZ W8, 0x1
	0x0348E2E0 STRB W8, [X20 + 0x927]
	0x0348E2E4 STR X31, [X31 + 0x8]
	0x0348E2E8 ADRP X20, 0xC68000
	0x0348E2EC LDR W8, [X19]
	0x0348E2F0 LDR X20, [X20 + 0x280]
	0x0348E2F4 CBZ W8, 0x348E374
	0x0348E2F8 LDR X8, [X19 + 0x20]
	0x0348E2FC CBZ X8, 0x348E3C4
	0x0348E300 LDR X0, [X8 + 0x10]
	0x0348E304 CBZ X0, 0x348E3C8
	0x0348E308 LDR X1, [X19 + 0x28]
	0x0348E30C LDP X2, X3, [X19 + 0x30]
	0x0348E310 MOV X4, X31
	0x0348E314 BL 0x3496044
	0x0348E318 CBZ X0, 0x348E3CC
	0x0348E31C MOV X1, X31
	0x0348E320 BL 0x33ED394
	0x0348E324 STR X0, [X31 + 0x8]
	0x0348E328 ADD X0, X31, 0x8
	0x0348E32C MOV X1, X31
	0x0348E330 BL 0x32C3A80
	0x0348E334 TBNZ X0, 0x0, 0x348E388
	0x0348E338 STR W31, [X19]
	0x0348E33C LDR X8, [X31 + 0x8]
	0x0348E340 STR X8, [X19 + 0x40]
	0x0348E344 LDR X0, [X20]
	0x0348E348 LDR W8, [X0 + 0xE0]
	0x0348E34C CBNZ W8, 0x348E354
	0x0348E350 BL 0x1C16DFC
	0x0348E354 ADRP X8, 0xCA3000
	0x0348E358 LDR X8, [X8 + 0x3C8]
	0x0348E35C ADD X0, X19, 0x8
	0x0348E360 LDR X3, [X8]
	0x0348E364 ADD X1, X31, 0x8
	0x0348E368 MOV X2, X19
	0x0348E36C BL 0x218B074
	0x0348E370 B 0x348E3B8
	0x0348E374 LDR X8, [X19 + 0x40]
	0x0348E378 MOVN W9, 0x0
	0x0348E37C STR X8, [X31 + 0x8]
	0x0348E380 STR X31, [X19 + 0x40]
	0x0348E384 STR W9, [X19]
	0x0348E388 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF50000
	007 Move W8, [X20+2332]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {42}
	013 Move X0, 0xCA4000
	014 Move X0, [X0+848]
	015 Call 0x1C17CF4
	016 Move X0, 0xC69000
	017 Move X0, [X0+352]
	018 Call 0x1C17CF4
	019 Move X0, 0xC69000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move X0, 0xC66000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0xC68000
	026 Move X0, [X0+632]
	027 Call 0x1C17CF4
	028 Move X0, 0xC95000
	029 Move X0, [X0+3528]
	030 Call 0x1C17CF4
	031 Move X0, 0xC95000
	032 Move X0, [X0+3640]
	033 Call 0x1C17CF4
	034 Move X0, 0xC95000
	035 Move X0, [X0+3536]
	036 Call 0x1C17CF4
	037 Move X0, 0xCA4000
	038 Move X0, [X0+856]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+2332], W8
	042 Move [X31+8], X31
	043 Move X22, 0xC69000
	044 Move W8, [X19]
	045 Move X22, [X22+304]
	046 Compare W8, 0
	047 JumpIfEqual {58}
	048 Move X8, 0xC66000
	049 Move X8, [X8+1560]
	050 Move W9, 0x4000
	051 Move [X19+48], W9
	052 Move X0, [X8]
	053 Move W1, 0x4000
	054 Call 0x1C17D6C
	055 Move W2, W31
	056 Move [X19+56], X0
	057 Move [X19+64], W31
	058 Move X8, [X19+72]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W9, TEMP
	062 Move [X31+8], X8
	063 Move [X19+72], X31
	064 Move [X19], W9
	065 Move W8, [X19+48]
	066 Subtract W3, W8, W2
	067 Move X0, [X19+32]
	068 Compare X0, 0
	069 JumpIfEqual {172}
	070 Move X8, [X0]
	071 Move X1, [X19+56]
	072 Move X4, [X19+40]
	073 Move X9, [X8+728]
	074 Move X5, [X8+736]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {191}
	078 Move X8, 0xC95000
	079 Move X8, [X8+3536]
	080 Move X1, [X8]
	081 Call Task`1<Int32>.GetAwaiter, X0
	082 Move X8, 0xC95000
	083 Move X8, [X8+3640]
	084 Move [X31+8], X0
	085 Move X1, [X8]
	086 Add X0, X31, 8
	087 Call TaskAwaiter`1<Int32>.get_IsCompleted, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {127}
	092 Move X8, 0xC95000
	093 Move X8, [X8+3528]
	094 Move X1, [X8]
	095 Add X0, X31, 8
	096 Call TaskAwaiter`1<Int32>.GetResult, X0
	097 Move W8, [X19+64]
	098 Move W20, W0
	099 Add W8, W8, W0
	100 Move [X19+64], W8
	101 Move X0, X31
	102 Call Encoding.get_UTF8
	103 Compare X0, 0
	104 JumpIfEqual {170}
	105 Move X8, [X0]
	106 Move X1, [X19+56]
	107 Move W3, [X19+64]
	108 Move X9, [X8+904]
	109 Move X4, [X8+912]
	110 Move W2, W31
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X21, X0
	113 Compare X0, 0
	114 JumpIfEqual {171}
	115 Move X8, 0xCA4000
	116 Move X8, [X8+856]
	117 Move X1, [X8]
	118 Move X0, X21
	119 Move X2, X31
	120 Call String.Contains, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {147}
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W2, [X19+64]
	127 Move [X19], W31
	128 Move X8, [X31+8]
	129 Move [X19+72], X8
	130 Move X0, [X22]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X8, 0xCA4000
	136 Move X8, [X8+848]
	137 Add X0, X19, 8
	138 Move X3, [X8]
	139 Add X1, X31, 8
	140 Move X2, X19
	141 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	142 Move X8, 0xC68000
	143 Move X8, [X8+632]
	144 Move X8, [X8]
	145 Move X8, [X8+184]
	146 Move X21, [X8]
	147 Move TEMP, 1
	148 Not TEMP
	149 Move W8, TEMP
	150 Move [X19], W8
	151 Move [X19+56], X31
	152 Move X0, [X22]
	153 Move X20, 0xC69000
	154 Add X19, X19, 8
	155 Move W8, [X0+224]
	156 Move X20, [X20+352]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X2, [X20]
	161 Move X0, X19
	162 Move X1, X21
	163 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	164 Move X20, [X31+32]
	165 Move X19, [X31+40]
	166 Move X22, [X31+16]
	167 Move X21, [X31+24]
	168 Move X30, [X31+48]
	169 Return 
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 Move X0, 0xCA4000
	174 Move X0, [X0+816]
	175 Call 0x1C17D08
	176 Call 0x1C17F10
	177 Move X20, X0
	178 Move X0, 0xCA4000
	179 Move X0, [X0+864]
	180 Call 0x1C17D08
	181 Move X1, X0
	182 Move X0, X20
	183 Move X2, X31
	184 Call EntityTooLargeException..ctor, X0, X1
	185 Move X0, 0xCA4000
	186 Move X0, [X0+872]
	187 Call 0x1C17D08
	188 Move X1, X0
	189 Move X0, X20
	190 Call 0x1C17DEC
	191 Call 0x1C17F20
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Call 0x3EB2AD0
	194 Move X20, X0
	195 Move X0, 0xC66000
	196 Move X0, [X0+2000]
	197 Call 0x1C17D08
	198 Move X8, [X20]
	199 Move X1, [X8]
	200 Call 0x1C18270
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {227}
	205 Move X20, [X20]
	206 Call 0x3EB2AE0
	207 Move TEMP, 1
	208 Not TEMP
	209 Move W8, TEMP
	210 Move [X19+56], X31
	211 Move [X19+8], W8
	212 Move X0, 0xC69000
	213 Move X0, [X0+304]
	214 Call 0x1C17D08
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X0, 0xC69000
	220 Move X0, [X0+576]
	221 Call 0x1C17D08
	222 Move X2, X0
	223 Move X0, X19
	224 Move X1, X20
	225 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	226 Move X19, X0
	227 Move W0, 8
	228 Call 0x3EB2AF0
	229 Move X8, [X20]
	230 Move [X0], X8
	231 Move X1, 0xA27000
	232 Add X1, X1, 3672
	233 Move X2, X31
	234 Call 0x3EB2B00
	235 Move X19, X0
	236 Call 0x3EB2AE0
	237 Move X0, X19
	238 Call 0x1D2D690
	239 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0348E38C MOV X1, X31
	0x0348E390 BL 0x32C3B4C
	0x0348E394 MOVN W8, 0x1
	0x0348E398 STR W8, [X19], #0x8
	0x0348E39C LDR X0, [X20]
	0x0348E3A0 LDR W8, [X0 + 0xE0]
	0x0348E3A4 CBNZ W8, 0x348E3AC
	0x0348E3A8 BL 0x1C16DFC
	0x0348E3AC MOV X0, X19
	0x0348E3B0 MOV X1, X31
	0x0348E3B4 BL 0x32C4864
	0x0348E3B8 LDP X20, X19, [X31 + 0x10]
	0x0348E3BC LDR X30, [X31], #0x20
	0x0348E3C0 RET
	0x0348E3C4 BL 0x1C16F20
	0x0348E3C8 BL 0x1C16F20
	0x0348E3CC BL 0x1C16F20
	0x0348E3D0 B 0x348E3E8
	0x0348E3D4 B 0x348E3E8
	0x0348E3D8 B 0x348E3E8
	0x0348E3DC B 0x348E3E8
	0x0348E3E0 B 0x348E3E8
	0x0348E3E4 B 0x348E3E8
	0x0348E3E8 MOV X20, X0
	0x0348E3EC CMP W1, 0x1
	0x0348E3F0 B.NE 0x348E480
	0x0348E3F4 MOV X0, X20
	0x0348E3F8 BL 0x3EB1AD0
	0x0348E3FC MOV X20, X0
	0x0348E400 ADRP X0, 0xC65000
	0x0348E404 LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF50000
	007 Move X21, 0xC69000
	008 Move W8, [X22+2333]
	009 Move X21, [X21+304]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC69000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0xC69000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2333], W8
	024 Move X0, [X21]
	025 Move X21, 0xC69000
	026 Move W8, [X0+224]
	027 Move X21, [X21+584]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

