Type: Nakama.Ninja.WebSockets.Internal.WebSocketImplementation/<WriteStreamToNetwork>d__46

Method: System.Void MoveNext()

Disassembly:
	0x0349BD84 LDR X0, [X0 + 0x2E0]
	0x0349BD88 BL 0x1C16CF4
	0x0349BD8C ADRP X0, 0xC58000
	0x0349BD90 LDR X0, [X0 + 0x988]
	0x0349BD94 BL 0x1C16CF4
	0x0349BD98 MOVZ W8, 0x1
	0x0349BD9C STRB W8, [X24 + 0x9A5]
	0x0349BDA0 LDR X2, [X19 + 0x10]
	0x0349BDA4 LDR X0, [X22]
	0x0349BDA8 LDR X1, [X23]
	0x0349BDAC LDR X3, [X20]
	0x0349BDB0 MOV X4, X31
	0x0349BDB4 BL 0x32277C4
	0x0349BDB8 LDR X2, [X19 + 0x18]
	0x0349BDBC LDR X1, [X21]
	0x0349BDC0 LDR X3, [X20]
	0x0349BDC4 LDP X20, X19, [X31 + 0x30]
	0x0349BDC8 LDP X22, X21, [X31 + 0x20]
	0x0349BDCC LDP X24, X23, [X31 + 0x10]
	0x0349BDD0 MOV X4, X31
	0x0349BDD4 LDR X30, [X31], #0x40
	0x0349BDD8 B 0x32277C4
	0x0349BDDC MOV X1, X31
	0x0349BDE0 B 0x33BDD8C
	0x0349BDE4 LDR V0, [X0 + 0x10]
	0x0349BDE8 RET
	0x0349BDEC STR D0, [X0 + 0x10]
	0x0349BDF0 RET
	0x0349BDF4 LDR V0, [X0 + 0x18]
	0x0349BDF8 RET
	0x0349BDFC STR D0, [X0 + 0x18]
	0x0349BE00 RET
	0x0349BE04 LDR V0, [X0 + 0x20]
	0x0349BE08 RET
	0x0349BE0C STR D0, [X0 + 0x20]
	0x0349BE10 RET
	0x0349BE14 LDR V0, [X0 + 0x28]
	0x0349BE18 RET
	0x0349BE1C STR D0, [X0 + 0x28]
	0x0349BE20 RET
	0x0349BE24 LDR W0, [X0 + 0x30]
	0x0349BE28 RET
	0x0349BE2C STR W1, [X0 + 0x30]
	0x0349BE30 RET
	0x0349BE34 LDR W0, [X0 + 0x34]
	0x0349BE38 RET
	0x0349BE3C STR W1, [X0 + 0x34]
	0x0349BE40 RET
	0x0349BE44 LDR W0, [X0 + 0x38]
	0x0349BE48 RET
	0x0349BE4C STR W1, [X0 + 0x38]
	0x0349BE50 RET
	0x0349BE54 LDR X0, [X0 + 0x40]
	0x0349BE58 RET
	0x0349BE5C STR X1, [X0 + 0x40]
	0x0349BE60 RET
	0x0349BE64 LDR W0, [X0 + 0x48]
	0x0349BE68 RET
	0x0349BE6C STR W1, [X0 + 0x48]
	0x0349BE70 RET
	0x0349BE74 LDR W0, [X0 + 0x4C]
	0x0349BE78 RET
	0x0349BE7C STR W1, [X0 + 0x4C]
	0x0349BE80 RET
	0x0349BE84 SUB X31, X31, 0x80
	0x0349BE88 STP X30, X25, [X31 + 0x40]
	0x0349BE8C STP X24, X23, [X31 + 0x50]
	0x0349BE90 STP X22, X21, [X31 + 0x60]
	0x0349BE94 STP X20, X19, [X31 + 0x70]
	0x0349BE98 ADRP X20, 0xF42000
	0x0349BE9C ADRP X21, 0xC58000
	0x0349BEA0 ADRP X22, 0xC58000
	0x0349BEA4 LDRB W8, [X20 + 0x9A6]
	0x0349BEA8 LDR X21, [X21 + 0x988]
	0x0349BEAC LDR X22, [X22 + 0x9D0]
	0x0349BEB0 MOV X19, X0
	0x0349BEB4 TBNZ X8, 0x0, 0x349BF74
	0x0349BEB8 ADRP X0, 0xC5B000
	0x0349BEBC LDR X0, [X0 + 0x978]
	0x0349BEC0 BL 0x1C16CF4
	0x0349BEC4 ADRP X0, 0xC58000
	0x0349BEC8 LDR X0, [X0 + 0x758]
	0x0349BECC BL 0x1C16CF4
	0x0349BED0 ADRP X0, 0xC58000
	0x0349BED4 LDR X0, [X0 + 0x9D0]
	0x0349BED8 BL 0x1C16CF4
	0x0349BEDC ADRP X0, 0xC96000
	0x0349BEE0 LDR X0, [X0 + 0xA68]
	0x0349BEE4 BL 0x1C16CF4
	0x0349BEE8 ADRP X0, 0xC96000
	0x0349BEEC LDR X0, [X0 + 0xA70]
	0x0349BEF0 BL 0x1C16CF4
	0x0349BEF4 ADRP X0, 0xC59000
	0x0349BEF8 LDR X0, [X0 + 0xEE0]
	0x0349BEFC BL 0x1C16CF4
	0x0349BF00 ADRP X0, 0xC58000
	0x0349BF04 LDR X0, [X0 + 0x838]
	0x0349BF08 BL 0x1C16CF4
	0x0349BF0C ADRP X0, 0xC96000
	0x0349BF10 LDR X0, [X0 + 0xA78]
	0x0349BF14 BL 0x1C16CF4
	0x0349BF18 ADRP X0, 0xC96000
	0x0349BF1C LDR X0, [X0 + 0xA80]
	0x0349BF20 BL 0x1C16CF4
	0x0349BF24 ADRP X0, 0xC96000
	0x0349BF28 LDR X0, [X0 + 0xA88]
	0x0349BF2C BL 0x1C16CF4
	0x0349BF30 ADRP X0, 0xC58000
	0x0349BF34 LDR X0, [X0 + 0x988]
	0x0349BF38 BL 0x1C16CF4
	0x0349BF3C ADRP X0, 0xC96000
	0x0349BF40 LDR X0, [X0 + 0xA90]
	0x0349BF44 BL 0x1C16CF4
	0x0349BF48 ADRP X0, 0xC96000
	0x0349BF4C LDR X0, [X0 + 0xA98]
	0x0349BF50 BL 0x1C16CF4
	0x0349BF54 ADRP X0, 0xC96000
	0x0349BF58 LDR X0, [X0 + 0xAA0]
	0x0349BF5C BL 0x1C16CF4
	0x0349BF60 ADRP X0, 0xC96000
	0x0349BF64 LDR X0, [X0 + 0xAA8]
	0x0349BF68 BL 0x1C16CF4
	0x0349BF6C MOVZ W8, 0x1
	0x0349BF70 STRB W8, [X20 + 0x9A6]
	0x0349BF74 LDR X0, [X22]
	0x0349BF78 LDR X21, [X21]
	0x0349BF7C MOVZ W1, 0x4
	0x0349BF80 BL 0x1C16D6C
	0x0349BF84 CBZ X0, 0x349C818
	0x0349BF88 MOV X20, X0
	0x0349BF8C CBZ X21, 0x349BFA4
	0x0349BF90 LDR X8, [X20]
	0x0349BF94 MOV X0, X21
	0x0349BF98 LDR X1, [X8 + 0x40]
	0x0349BF9C BL 0x1C16E00
	0x0349BFA0 CBZ X0, 0x349C80C
	0x0349BFA4 LDR W8, [X20 + 0x18]
	0x0349BFA8 CBZ W8, 0x349C808
	0x0349BFAC ADRP X23, 0xC96000
	0x0349BFB0 LDR X23, [X23 + 0xA78]
	0x0349BFB4 STR X21, [X20 + 0x20]
	0x0349BFB8 LDR X0, [X23]
	0x0349BFBC CBZ X0, 0x349BFD4
	0x0349BFC0 LDR X8, [X20]
	0x0349BFC4 LDR X1, [X8 + 0x40]
	0x0349BFC8 BL 0x1C16E00
	0x0349BFCC CBZ X0, 0x349C80C
	0x0349BFD0 LDR W8, [X20 + 0x18]
	0x0349BFD4 CMP W8, 0x1
	0x0349BFD8 B.LS 0x349C808
	0x0349BFDC LDR X8, [X23]
	0x0349BFE0 ADRP X24, 0xC5B000
	0x0349BFE4 LDR X24, [X24 + 0x978]
	0x0349BFE8 ADD X1, X31, 0x38
	0x0349BFEC STR X8, [X20 + 0x28]
	0x0349BFF0 LDR V0, [X19 + 0x10]
	0x0349BFF4 LDR X0, [X24]
	0x0349BFF8 STR D0, [X31 + 0x38]
	0x0349BFFC BL 0x1C16E04
	0x0349C000 MOV X21, X0
	0x0349C004 CBZ X0, 0x349C01C
	0x0349C008 LDR X8, [X20]
	0x0349C00C MOV X0, X21
	0x0349C010 LDR X1, [X8 + 0x40]
	0x0349C014 BL 0x1C16E00
	0x0349C018 CBZ X0, 0x349C80C
	0x0349C01C LDR W8, [X20 + 0x18]
	0x0349C020 CMP W8, 0x2
	0x0349C024 B.LS 0x349C808
	0x0349C028 ADRP X23, 0xC57000
	0x0349C02C LDR X23, [X23 + 0x838]
	0x0349C030 STR X21, [X20 + 0x30]
	0x0349C034 LDR X0, [X23]
	0x0349C038 CBZ X0, 0x349C050
	0x0349C03C LDR X8, [X20]
	0x0349C040 LDR X1, [X8 + 0x40]
	0x0349C044 BL 0x1C16E00
	0x0349C048 CBZ X0, 0x349C80C
	0x0349C04C LDR W8, [X20 + 0x18]
	0x0349C050 CMP W8, 0x3
	0x0349C054 B.LS 0x349C808
	0x0349C058 LDR X8, [X23]
	0x0349C05C MOV X0, X20
	0x0349C060 MOV X1, X31
	0x0349C064 STR X8, [X20 + 0x38]
	0x0349C068 BL 0x3227578
	0x0349C06C LDR X8, [X22]
	0x0349C070 MOV X21, X0
	0x0349C074 MOVZ W1, 0x4
	0x0349C078 MOV X0, X8
	0x0349C07C BL 0x1C16D6C
	0x0349C080 CBZ X0, 0x349C818
	0x0349C084 MOV X20, X0
	0x0349C088 CBZ X21, 0x349C0A0
	0x0349C08C LDR X8, [X20]
	0x0349C090 MOV X0, X21
	0x0349C094 LDR X1, [X8 + 0x40]
	0x0349C098 BL 0x1C16E00
	0x0349C09C CBZ X0, 0x349C80C
	0x0349C0A0 LDR W8, [X20 + 0x18]
	0x0349C0A4 CBZ W8, 0x349C808
	0x0349C0A8 ADRP X25, 0xC95000
	0x0349C0AC LDR X25, [X25 + 0xA90]
	0x0349C0B0 STR X21, [X20 + 0x20]
	0x0349C0B4 LDR X0, [X25]
	0x0349C0B8 CBZ X0, 0x349C0D0
	0x0349C0BC LDR X8, [X20]
	0x0349C0C0 LDR X1, [X8 + 0x40]
	0x0349C0C4 BL 0x1C16E00
	0x0349C0C8 CBZ X0, 0x349C80C
	0x0349C0CC LDR W8, [X20 + 0x18]
	0x0349C0D0 CMP W8, 0x1
	0x0349C0D4 B.LS 0x349C808
	0x0349C0D8 LDR X8, [X25]
	0x0349C0DC ADD X1, X31, 0x30
	0x0349C0E0 STR X8, [X20 + 0x28]
	0x0349C0E4 LDR V0, [X19 + 0x18]
	0x0349C0E8 LDR X0, [X24]
	0x0349C0EC STR D0, [X31 + 0x30]
	0x0349C0F0 BL 0x1C16E04
	0x0349C0F4 MOV X21, X0
	0x0349C0F8 CBZ X0, 0x349C110
	0x0349C0FC LDR X8, [X20]
	0x0349C100 MOV X0, X21
	0x0349C104 LDR X1, [X8 + 0x40]
	0x0349C108 BL 0x1C16E00
	0x0349C10C CBZ X0, 0x349C80C
	0x0349C110 LDR W8, [X20 + 0x18]
	0x0349C114 CMP W8, 0x2
	0x0349C118 B.LS 0x349C808
	0x0349C11C STR X21, [X20 + 0x30]
	0x0349C120 LDR X0, [X23]
	0x0349C124 CBZ X0, 0x349C13C
	0x0349C128 LDR X8, [X20]
	0x0349C12C LDR X1, [X8 + 0x40]
	0x0349C130 BL 0x1C16E00
	0x0349C134 CBZ X0, 0x349C80C
	0x0349C138 LDR W8, [X20 + 0x18]
	0x0349C13C CMP W8, 0x3
	0x0349C140 B.LS 0x349C808
	0x0349C144 LDR X8, [X23]
	0x0349C148 MOV X0, X20
	0x0349C14C MOV X1, X31
	0x0349C150 STR X8, [X20 + 0x38]
	0x0349C154 BL 0x3227578
	0x0349C158 LDR X8, [X22]
	0x0349C15C MOV X21, X0
	0x0349C160 MOVZ W1, 0x4
	0x0349C164 MOV X0, X8
	0x0349C168 BL 0x1C16D6C
	0x0349C16C CBZ X0, 0x349C818

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xF43000
	011 Move W8, [X20+2442]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xC8C000
	018 Move X0, [X0+3312]
	019 Call 0x1C17CF4
	020 Move X0, 0xC8C000
	021 Move X0, [X0+3320]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8C000
	024 Move X0, [X0+3328]
	025 Call 0x1C17CF4
	026 Move X0, 0xC81000
	027 Move X0, [X0+1456]
	028 Call 0x1C17CF4
	029 Move X0, 0xC97000
	030 Move X0, [X0+2648]
	031 Call 0x1C17CF4
	032 Move X0, 0xC5C000
	033 Move X0, [X0+640]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+2442], W8
	037 Move [X31], X31
	038 Move [X31+8], X31
	039 Move X24, 0xC5C000
	040 Move W25, [X19]
	041 Move X20, [X19+32]
	042 Move X24, [X24+640]
	043 Compare W25, 0
	044 JumpIfEqual {54}
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W25, TEMP
	050 Move [X31], V0
	051 Move [X19+72], X31
	052 Move [X19+80], X31
	053 Move [X19], W25
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W25, TEMP
	058 Move [X31], V0
	059 Move [X19+72], X31
	060 Move [X19+80], X31
	061 Move [X19], W25
	062 Compare X20, 0
	063 JumpIfEqual {205}
	064 Move X1, [X19+40]
	065 Move X0, X20
	066 Call WebSocketImplementation.GetBuffer, X0, X1
	067 Move [X19+56], X0
	068 Move [X19+64], X1
	069 Move X0, [X20+128]
	070 Compare X0, 0
	071 JumpIfEqual {206}
	072 Move X1, [X19+48]
	073 Move X2, X31
	074 Call SemaphoreSlim.WaitAsync, X0, X1
	075 Compare X0, 0
	076 JumpIfEqual {207}
	077 Move W1, W31
	078 Move X2, X31
	079 Call Task.ConfigureAwait, X0, X1
	080 Move [X31], X0
	081 Move [X31+8], X1
	082 Add X0, X31, 0
	083 Move X1, X31
	084 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {175}
	089 Add X0, X31, 0
	090 Move X1, X31
	091 Call ConfiguredTaskAwaiter.GetResult, X0
	092 Compare X20, 0
	093 JumpIfEqual {202}
	094 Move X8, 0xC81000
	095 Move X8, [X8+1456]
	096 Move X21, [X20+40]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Compare X21, 0
	103 JumpIfEqual {203}
	104 Move X8, [X21]
	105 Move X4, [X19+48]
	106 Move X1, [X19+56]
	107 Move W2, [X19+64]
	108 Move W3, [X19+68]
	109 Move X9, [X8+792]
	110 Move X5, [X8+800]
	111 Move X0, X21
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Compare X0, 0
	114 JumpIfEqual {204}
	115 Move W1, W31
	116 Move X2, X31
	117 Call Task.ConfigureAwait, X0, X1
	118 Move [X31], X0
	119 Move [X31+8], X1
	120 Add X0, X31, 0
	121 Move X1, X31
	122 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {159}
	127 Move X21, X31
	128 Add X0, X31, 0
	129 Move X1, X31
	130 Call ConfiguredTaskAwaiter.GetResult, X0
	131 Move TEMP, X25
	132 And TEMP, TEMP, -2147483648
	133 Compare TEMP, -2147483648
	134 JumpIfNotEqual {142}
	135 Compare X20, 0
	136 JumpIfEqual {208}
	137 Move X0, [X20+128]
	138 Compare X0, 0
	139 JumpIfEqual {209}
	140 Move X1, X31
	141 Call SemaphoreSlim.Release, X0
	142 Compare X21, 0
	143 JumpIfNotEqual {200}
	144 Move TEMP, 1
	145 Not TEMP
	146 Move W8, TEMP
	147 Move [X19], W8
	148 Move [X19+56], X31
	149 Move [X19+64], X31
	150 Move X0, [X24]
	151 Add X19, X19, 8
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X19
	157 Move X1, X31
	158 Call AsyncTaskMethodBuilder.SetResult, X0
	159 Move W8, 1
	160 Move [X19], W8
	161 Move V0, [X31]
	162 Move [X19+72], V0
	163 Move X0, [X24]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X8, 0xC97000
	169 Move X8, [X8+2648]
	170 Add X0, X19, 8
	171 Move X3, [X8]
	172 Add X1, X31, 0
	173 Move X2, X19
	174 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	175 Move [X19], W31
	176 Move V0, [X31]
	177 Move [X19+72], V0
	178 Move X0, [X24]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X8, 0xC97000
	184 Move X8, [X8+2648]
	185 Add X0, X19, 8
	186 Move X3, [X8]
	187 Add X1, X31, 0
	188 Move X2, X19
	189 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	190 Move X20, [X31+64]
	191 Move X19, [X31+72]
	192 Move X22, [X31+48]
	193 Move X21, [X31+56]
	194 Move X24, [X31+32]
	195 Move X23, [X31+40]
	196 Move X30, [X31+16]
	197 Move X25, [X31+24]
	198 Add X31, X31, 80
	199 Return 
	200 Move X0, X21
	201 Call 0x1C17F18
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Call 0x1C17F20
	205 Call 0x1C17F20
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Call 0x1C17F20
	209 Call 0x1C17F20
	210 Move X22, X1
	211 Move X23, X0
	212 Move W25, 1
	213 Move X22, X1
	214 Move X23, X0
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X0, X23
	217 Call 0x3EB2AD0
	218 Move X21, [X0]
	219 Call 0x3EB2AE0
	220 Move X21, X31
	221 Move TEMP, X25
	222 And TEMP, TEMP, -2147483648
	223 Compare TEMP, -2147483648
	224 JumpIfNotEqual {232}
	225 Compare X20, 0
	226 JumpIfEqual {236}
	227 Move X0, [X20+128]
	228 Compare X0, 0
	229 JumpIfEqual {237}
	230 Move X1, X31
	231 Call SemaphoreSlim.Release, X0
	232 Compare X21, 0
	233 JumpIfEqual {246}
	234 Move X0, X21
	235 Call 0x1C17F18
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 Move X22, X1
	239 Move X23, X0
	240 Move TEMP, X25
	241 And TEMP, TEMP, -2147483648
	242 Compare TEMP, -2147483648
	243 JumpIfNotEqual {232}
	244 Move X22, X1
	245 Move X23, X0
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X0, X23
	248 Call 0x3EB2AD0
	249 Move X20, X0
	250 Move X0, 0xC58000
	251 Move X0, [X0+2000]
	252 Call 0x1C17D08
	253 Move X8, [X20]
	254 Move X1, [X8]
	255 Call 0x1C18270
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {279}
	260 Move X20, [X20]
	261 Call 0x3EB2AE0
	262 Move TEMP, 1
	263 Not TEMP
	264 Move W8, TEMP
	265 Move [X19+56], X31
	266 Move [X19+64], X31
	267 Move [X19+8], W8
	268 Move X0, 0xC5B000
	269 Move X0, [X0+640]
	270 Call 0x1C17D08
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X0, X19
	276 Move X1, X20
	277 Move X2, X31
	278 Call AsyncTaskMethodBuilder.SetException, X0, X1
	279 Move W0, 8
	280 Call 0x3EB2AF0
	281 Move X8, [X20]
	282 Move [X0], X8
	283 Move X1, 0xA19000
	284 Add X1, X1, 3672
	285 Move X2, X31
	286 Call 0x3EB2B00
	287 Move X23, X0
	288 Call 0x3EB2AE0
	289 Move X0, X23
	290 Call 0x1D2D690
	291 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0349C170 MOV X20, X0
	0x0349C174 CBZ X21, 0x349C18C
	0x0349C178 LDR X8, [X20]
	0x0349C17C MOV X0, X21
	0x0349C180 LDR X1, [X8 + 0x40]
	0x0349C184 BL 0x1C16E00
	0x0349C188 CBZ X0, 0x349C80C
	0x0349C18C LDR W8, [X20 + 0x18]
	0x0349C190 CBZ W8, 0x349C808
	0x0349C194 ADRP X25, 0xC95000
	0x0349C198 LDR X25, [X25 + 0xA68]
	0x0349C19C STR X21, [X20 + 0x20]
	0x0349C1A0 LDR X0, [X25]
	0x0349C1A4 CBZ X0, 0x349C1BC
	0x0349C1A8 LDR X8, [X20]
	0x0349C1AC LDR X1, [X8 + 0x40]
	0x0349C1B0 BL 0x1C16E00
	0x0349C1B4 CBZ X0, 0x349C80C
	0x0349C1B8 LDR W8, [X20 + 0x18]
	0x0349C1BC CMP W8, 0x1
	0x0349C1C0 B.LS 0x349C808
	0x0349C1C4 LDR X8, [X25]
	0x0349C1C8 ADD X1, X31, 0x28
	0x0349C1CC STR X8, [X20 + 0x28]
	0x0349C1D0 LDR V0, [X19 + 0x20]
	0x0349C1D4 LDR X0, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF42000
	007 Move X22, 0xC5B000
	008 Move W8, [X21+2443]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC5B000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2443], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

