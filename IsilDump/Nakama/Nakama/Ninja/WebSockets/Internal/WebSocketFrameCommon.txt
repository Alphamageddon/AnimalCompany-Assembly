Type: Nakama.Ninja.WebSockets.Internal.WebSocketFrameCommon

Method: System.Void ToggleMask(System.ArraySegment`1<System.Byte> maskKey, System.ArraySegment`1<System.Byte> payload)

Disassembly:
	0x03494D1C MOV X21, X0
	0x03494D20 BL 0x3EB1AE0
	0x03494D24 B 0x3494D30
	0x03494D28 MOV X20, X1
	0x03494D2C MOV X21, X0
	0x03494D30 CMP W20, 0x1
	0x03494D34 B.NE 0x3494DD8
	0x03494D38 MOV X0, X21
	0x03494D3C BL 0x3EB1AD0
	0x03494D40 MOV X20, X0
	0x03494D44 ADRP X0, 0xC5F000
	0x03494D48 LDR X0, [X0 + 0x7D0]
	0x03494D4C BL 0x1C16D08
	0x03494D50 LDR X8, [X20]
	0x03494D54 LDR X1, [X8]
	0x03494D58 BL 0x1C17270
	0x03494D5C TBZ X0, 0x0, 0x3494DB0
	0x03494D60 LDR X20, [X20]
	0x03494D64 BL 0x3EB1AE0
	0x03494D68 MOVN W8, 0x1
	0x03494D6C STP X31, X31, [X19 + 0x40]
	0x03494D70 STP X31, X31, [X19 + 0x68]
	0x03494D74 STR W8, [X19], #0x8
	0x03494D78 ADRP X0, 0xC9D000
	0x03494D7C LDR X0, [X0 + 0x760]
	0x03494D80 BL 0x1C16D08
	0x03494D84 LDR W8, [X0 + 0xE0]
	0x03494D88 CBNZ W8, 0x3494D90
	0x03494D8C BL 0x1C16DFC
	0x03494D90 ADRP X0, 0xC9D000
	0x03494D94 LDR X0, [X0 + 0x810]
	0x03494D98 BL 0x1C16D08
	0x03494D9C MOV X2, X0
	0x03494DA0 MOV X0, X19
	0x03494DA4 MOV X1, X20
	0x03494DA8 BL 0x26324C8
	0x03494DAC B 0x3494964
	0x03494DB0 MOVZ W0, 0x8
	0x03494DB4 BL 0x3EB1AF0
	0x03494DB8 LDR X8, [X20]
	0x03494DBC STR X8, [X0]
	0x03494DC0 ADRP X1, 0xA20000
	0x03494DC4 ADD X1, X1, 0xE58
	0x03494DC8 MOV X2, X31
	0x03494DCC BL 0x3EB1B00
	0x03494DD0 MOV X21, X0
	0x03494DD4 BL 0x3EB1AE0
	0x03494DD8 MOV X0, X21
	0x03494DDC BL 0x1D2C690
	0x03494DE0 BL 0x1990590
	0x03494DE4 STR X30, [X31 - 0x30]!
	0x03494DE8 STP X22, X21, [X31 + 0x10]
	0x03494DEC STP X20, X19, [X31 + 0x20]
	0x03494DF0 ADRP X22, 0xF49000
	0x03494DF4 ADRP X21, 0xC9D000
	0x03494DF8 LDRB W8, [X22 + 0x964]
	0x03494DFC LDR X21, [X21 + 0x760]
	0x03494E00 MOV X19, X1
	0x03494E04 MOV X20, X0
	0x03494E08 TBNZ X8, 0x0, 0x3494E2C
	0x03494E0C ADRP X0, 0xC9D000
	0x03494E10 LDR X0, [X0 + 0x818]
	0x03494E14 BL 0x1C16CF4
	0x03494E18 ADRP X0, 0xC9D000
	0x03494E1C LDR X0, [X0 + 0x760]
	0x03494E20 BL 0x1C16CF4
	0x03494E24 MOVZ W8, 0x1
	0x03494E28 STRB W8, [X22 + 0x964]
	0x03494E2C LDR X0, [X21]
	0x03494E30 ADRP X21, 0xC9D000
	0x03494E34 LDR W8, [X0 + 0xE0]
	0x03494E38 LDR X21, [X21 + 0x818]
	0x03494E3C CBNZ W8, 0x3494E44
	0x03494E40 BL 0x1C16DFC
	0x03494E44 LDR X2, [X21]
	0x03494E48 ADD X0, X20, 0x8
	0x03494E4C MOV X1, X19
	0x03494E50 LDP X20, X19, [X31 + 0x20]
	0x03494E54 LDP X22, X21, [X31 + 0x10]
	0x03494E58 LDR X30, [X31], #0x30
	0x03494E5C B 0x2632228
	0x03494E60 SUB X31, X31, 0x50
	0x03494E64 STR X30, [X31 + 0x10]
	0x03494E68 STP X24, X23, [X31 + 0x20]
	0x03494E6C STP X22, X21, [X31 + 0x30]
	0x03494E70 STP X20, X19, [X31 + 0x40]
	0x03494E74 ADRP X20, 0xF49000
	0x03494E78 LDRB W8, [X20 + 0x965]
	0x03494E7C MOV X19, X0
	0x03494E80 TBNZ X8, 0x0, 0x3494EF8
	0x03494E84 ADRP X0, 0xC8A000
	0x03494E88 LDR X0, [X0 + 0xB88]
	0x03494E8C BL 0x1C16CF4
	0x03494E90 ADRP X0, 0xC92000
	0x03494E94 LDR X0, [X0 + 0xCF0]
	0x03494E98 BL 0x1C16CF4
	0x03494E9C ADRP X0, 0xC92000
	0x03494EA0 LDR X0, [X0 + 0xCF8]
	0x03494EA4 BL 0x1C16CF4
	0x03494EA8 ADRP X0, 0xC92000
	0x03494EAC LDR X0, [X0 + 0xD00]
	0x03494EB0 BL 0x1C16CF4
	0x03494EB4 ADRP X0, 0xC87000
	0x03494EB8 LDR X0, [X0 + 0x5B0]
	0x03494EBC BL 0x1C16CF4
	0x03494EC0 ADRP X0, 0xC9D000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xF4A000
	009 Move X23, 0xC88000
	010 Move W8, [X24+2398]
	011 Move X23, [X23+1456]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xC93000
	021 Move X0, [X0+3312]
	022 Call 0x1C17CF4
	023 Move X0, 0xC93000
	024 Move X0, [X0+3320]
	025 Call 0x1C17CF4
	026 Move X0, 0xC93000
	027 Move X0, [X0+3328]
	028 Call 0x1C17CF4
	029 Move X0, 0xC88000
	030 Move X0, [X0+1456]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+2398], W8
	034 Move X0, [X23]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X8, X21
	040 ShiftRight X8, 32
	041 And X8, X8, 0x7FFFFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, [X23]
	044 Move X23, X19
	045 ShiftRight X23, 32
	046 And X23, X23, 0x7FFFFFFF
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Add W9, W23, W19
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X20, 0
	054 JumpIfEqual {89}
	055 Move X10, W9
	056 Add X9, X20, W19
	057 Move X8, X31
	058 Add X9, X9, 32
	059 Subtract X10, X10, W19
	060 Move W13, [X20+24]
	061 Add W12, W19, W8
	062 Add W11, W8, 3
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Compare X22, 0
	067 JumpIfEqual {89}
	068 Move W12, [X22+24]
	069 And W11, W11, 0xFFFFFFFC
	070 Subtract W11, W8, W11
	071 Add W11, W11, W21
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X11, X22, W11
	074 Move W12, [X9]
	075 Move W11, [X11+32]
	076 Xor W11, W11, W12
	077 Move [X9], W11
	078 Add X8, X8, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Return 
	088 Call 0x1C17F28
	089 Call 0x1C17F20
	090 Move W8, 4
	091 Move [X31+12], W8
	092 Move X0, 0xC60000
	093 Move X0, [X0+1880]
	094 Call 0x1C17D08
	095 Add X1, X31, 12
	096 Call 0x1C17E04
	097 Move X19, X0
	098 Move X0, 0xC9E000
	099 Move X0, [X0+1872]
	100 Call 0x1C17D08
	101 Move X1, X19
	102 Move X2, X31
	103 Call String.Format, X0, X1
	104 Move X19, X0
	105 Move X0, 0xC60000
	106 Move X0, [X0+2000]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X1, X19
	110 Move X2, X31
	111 Move X20, X0
	112 Call Exception..ctor, X0, X1
	113 Move X0, 0xC9E000
	114 Move X0, [X0+1880]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X20
	118 Call 0x1C17DEC

