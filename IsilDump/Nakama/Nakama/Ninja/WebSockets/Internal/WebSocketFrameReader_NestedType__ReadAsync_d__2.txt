Type: Nakama.Ninja.WebSockets.Internal.WebSocketFrameReader/<ReadAsync>d__2

Method: System.Void MoveNext()

Disassembly:
	0x03495478 BL 0x1FD2E28
	0x0349547C B 0x34954B0
	0x03495480 MOVN W8, 0x1
	0x03495484 STR W8, [X19], #0x8
	0x03495488 LDR X0, [X21]
	0x0349548C ADRP X21, 0xC9C000
	0x03495490 LDR W8, [X0 + 0xE0]
	0x03495494 LDR X21, [X21 + 0x838]
	0x03495498 CBNZ W8, 0x34954A0
	0x0349549C BL 0x1C16DFC
	0x034954A0 LDR X2, [X21]
	0x034954A4 MOV X0, X19
	0x034954A8 MOV W1, W20
	0x034954AC BL 0x2633AB8
	0x034954B0 LDP X20, X19, [X31 + 0x30]
	0x034954B4 LDP X30, X21, [X31 + 0x20]
	0x034954B8 ADD X31, X31, 0x40
	0x034954BC RET
	0x034954C0 LDP X0, X2, [X19 + 0x28]
	0x034954C4 LDP X3, X4, [X19 + 0x38]
	0x034954C8 MOV W1, W31
	0x034954CC BL 0x3492A2C
	0x034954D0 CBZ X0, 0x3495544
	0x034954D4 ADRP X8, 0xC9C000
	0x034954D8 LDR X8, [X8 + 0x860]
	0x034954DC LDR X1, [X8]
	0x034954E0 BL 0x26A3B90
	0x034954E4 ADRP X8, 0xC9C000
	0x034954E8 LDR X8, [X8 + 0x850]
	0x034954EC STR X0, [X31 + 0x10]
	0x034954F0 LDR X1, [X8]
	0x034954F4 ADD X0, X31, 0x10
	0x034954F8 BL 0x26777C4
	0x034954FC TBNZ X0, 0x0, 0x3495328
	0x03495500 MOVZ W8, 0x1
	0x03495504 STR W8, [X19]
	0x03495508 LDR X8, [X31 + 0x10]
	0x0349550C STR X8, [X19 + 0x50]
	0x03495510 LDR X0, [X21]
	0x03495514 LDR W8, [X0 + 0xE0]
	0x03495518 CBNZ W8, 0x3495520
	0x0349551C BL 0x1C16DFC
	0x03495520 ADRP X8, 0xC9C000
	0x03495524 LDR X8, [X8 + 0x830]
	0x03495528 ADD X0, X19, 0x8
	0x0349552C LDR X3, [X8]
	0x03495530 ADD X1, X31, 0x10
	0x03495534 MOV X2, X19
	0x03495538 BL 0x1FD303C
	0x0349553C B 0x34954B0
	0x03495540 BL 0x1C16F20
	0x03495544 BL 0x1C16F20
	0x03495548 B 0x3495578
	0x0349554C B 0x3495578
	0x03495550 B 0x3495578
	0x03495554 B 0x3495578
	0x03495558 B 0x3495578
	0x0349555C B 0x3495578
	0x03495560 B 0x3495578
	0x03495564 B 0x3495578
	0x03495568 B 0x3495578
	0x0349556C B 0x3495578
	0x03495570 B 0x3495578
	0x03495574 B 0x3495578
	0x03495578 MOV X20, X0
	0x0349557C CMP W1, 0x1
	0x03495580 B.NE 0x349561C
	0x03495584 MOV X0, X20
	0x03495588 BL 0x3EB1AD0
	0x0349558C MOV X20, X0
	0x03495590 ADRP X0, 0xC5E000
	0x03495594 LDR X0, [X0 + 0x7D0]
	0x03495598 BL 0x1C16D08
	0x0349559C LDR X8, [X20]
	0x034955A0 LDR X1, [X8]
	0x034955A4 BL 0x1C17270
	0x034955A8 TBZ X0, 0x0, 0x34955F4
	0x034955AC LDR X20, [X20]
	0x034955B0 BL 0x3EB1AE0
	0x034955B4 MOVN W8, 0x1
	0x034955B8 STR W8, [X19], #0x8
	0x034955BC ADRP X0, 0xC9C000
	0x034955C0 LDR X0, [X0 + 0x798]
	0x034955C4 BL 0x1C16D08
	0x034955C8 LDR W8, [X0 + 0xE0]
	0x034955CC CBNZ W8, 0x34955D4
	0x034955D0 BL 0x1C16DFC
	0x034955D4 ADRP X0, 0xC9C000
	0x034955D8 LDR X0, [X0 + 0x880]
	0x034955DC BL 0x1C16D08
	0x034955E0 MOV X2, X0
	0x034955E4 MOV X0, X19
	0x034955E8 MOV X1, X20
	0x034955EC BL 0x2633CD0
	0x034955F0 B 0x34954B0
	0x034955F4 MOVZ W0, 0x8
	0x034955F8 BL 0x3EB1AF0
	0x034955FC LDR X8, [X20]
	0x03495600 STR X8, [X0]
	0x03495604 ADRP X1, 0xA1F000
	0x03495608 ADD X1, X1, 0xE58
	0x0349560C MOV X2, X31
	0x03495610 BL 0x3EB1B00
	0x03495614 MOV X20, X0
	0x03495618 BL 0x3EB1AE0
	0x0349561C MOV X0, X20
	0x03495620 BL 0x1D2C690
	0x03495624 BL 0x1990590
	0x03495628 STR X30, [X31 - 0x30]!
	0x0349562C STP X22, X21, [X31 + 0x10]
	0x03495630 STP X20, X19, [X31 + 0x20]
	0x03495634 ADRP X22, 0xF48000
	0x03495638 ADRP X21, 0xC9C000
	0x0349563C LDRB W8, [X22 + 0x968]
	0x03495640 LDR X21, [X21 + 0x798]
	0x03495644 MOV X19, X1
	0x03495648 MOV X20, X0
	0x0349564C TBNZ X8, 0x0, 0x3495670
	0x03495650 ADRP X0, 0xC9C000
	0x03495654 LDR X0, [X0 + 0x888]
	0x03495658 BL 0x1C16CF4
	0x0349565C ADRP X0, 0xC9C000
	0x03495660 LDR X0, [X0 + 0x798]
	0x03495664 BL 0x1C16CF4
	0x03495668 MOVZ W8, 0x1
	0x0349566C STRB W8, [X22 + 0x968]
	0x03495670 LDR X0, [X21]
	0x03495674 ADRP X21, 0xC9C000
	0x03495678 LDR W8, [X0 + 0xE0]
	0x0349567C LDR X21, [X21 + 0x888]
	0x03495680 CBNZ W8, 0x3495688
	0x03495684 BL 0x1C16DFC
	0x03495688 LDR X2, [X21]
	0x0349568C ADD X0, X20, 0x8
	0x03495690 MOV X1, X19
	0x03495694 LDP X20, X19, [X31 + 0x20]
	0x03495698 LDP X22, X21, [X31 + 0x10]
	0x0349569C LDR X30, [X31], #0x30
	0x034956A0 B 0x2633A30
	0x034956A4 SUB X31, X31, 0x30
	0x034956A8 STP X30, X21, [X31 + 0x10]
	0x034956AC STP X20, X19, [X31 + 0x20]
	0x034956B0 ADRP X20, 0xF48000
	0x034956B4 ADRP X19, 0xC5F000
	0x034956B8 LDRB W8, [X20 + 0x969]
	0x034956BC LDR X19, [X19 + 0x9F0]
	0x034956C0 TBNZ X8, 0x0, 0x34956F0
	0x034956C4 ADRP X0, 0xC5F000
	0x034956C8 LDR X0, [X0 + 0x9F0]
	0x034956CC BL 0x1C16CF4
	0x034956D0 ADRP X0, 0xC65000
	0x034956D4 LDR X0, [X0 + 0x2E8]
	0x034956D8 BL 0x1C16CF4
	0x034956DC ADRP X0, 0xC9C000
	0x034956E0 LDR X0, [X0 + 0x890]
	0x034956E4 BL 0x1C16CF4
	0x034956E8 MOVZ W8, 0x1
	0x034956EC STRB W8, [X20 + 0x969]
	0x034956F0 LDR X0, [X19]
	0x034956F4 ADRP X19, 0xC65000
	0x034956F8 ADRP X21, 0xC9C000
	0x034956FC LDR W8, [X0 + 0xE0]
	0x03495700 LDR X19, [X19 + 0x2E8]
	0x03495704 LDR X21, [X21 + 0x890]
	0x03495708 CBNZ W8, 0x3495710
	0x0349570C BL 0x1C16DFC
	0x03495710 MOV X0, X31
	0x03495714 BL 0x3361584
	0x03495718 STR X0, [X31 + 0x8]
	0x0349571C ADD X0, X31, 0x8
	0x03495720 MOV X1, X31
	0x03495724 BL 0x3361708
	0x03495728 LDR X8, [X19]
	0x0349572C MOV X19, X0
	0x03495730 MOV X0, X8
	0x03495734 BL 0x1C16F10
	0x03495738 MOV W1, W19
	0x0349573C MOV X2, X31
	0x03495740 MOV X20, X0
	0x03495744 BL 0x338E5E8
	0x03495748 LDR X8, [X21]
	0x0349574C LDP X30, X21, [X31 + 0x10]
	0x03495750 LDR X8, [X8 + 0xB8]
	0x03495754 STR X20, [X8]
	0x03495758 LDP X20, X19, [X31 + 0x20]
	0x0349575C ADD X31, X31, 0x30
	0x03495760 RET
	0x03495764 SUB X31, X31, 0x60
	0x03495768 STR X30, [X31 + 0x10]
	0x0349576C STP X26, X25, [X31 + 0x20]
	0x03495770 STP X24, X23, [X31 + 0x30]
	0x03495774 STP X22, X21, [X31 + 0x40]
	0x03495778 STP X20, X19, [X31 + 0x50]
	0x0349577C ADRP X22, 0xF48000
	0x03495780 LDRB W8, [X22 + 0x96A]
	0x03495784 MOV W23, W5
	0x03495788 MOV W24, W4
	0x0349578C MOV X20, X3
	0x03495790 MOV X19, X2
	0x03495794 MOV X21, X1
	0x03495798 MOV W25, W0
	0x0349579C TBNZ X8, 0x0, 0x34957FC
	0x034957A0 ADRP X0, 0xC89000
	0x034957A4 LDR X0, [X0 + 0xB88]
	0x034957A8 BL 0x1C16CF4
	0x034957AC ADRP X0, 0xC91000
	0x034957B0 LDR X0, [X0 + 0xCF0]
	0x034957B4 BL 0x1C16CF4
	0x034957B8 ADRP X0, 0xC91000
	0x034957BC LDR X0, [X0 + 0xCF8]
	0x034957C0 BL 0x1C16CF4
	0x034957C4 ADRP X0, 0xC91000
	0x034957C8 LDR X0, [X0 + 0xD00]
	0x034957CC BL 0x1C16CF4
	0x034957D0 ADRP X0, 0xC86000
	0x034957D4 LDR X0, [X0 + 0x5B0]
	0x034957D8 BL 0x1C16CF4
	0x034957DC ADRP X0, 0xC5E000
	0x034957E0 LDR X0, [X0 + 0x618]
	0x034957E4 BL 0x1C16CF4
	0x034957E8 ADRP X0, 0xC9C000
	0x034957EC LDR X0, [X0 + 0x890]
	0x034957F0 BL 0x1C16CF4
	0x034957F4 MOVZ W8, 0x1
	0x034957F8 STRB W8, [X22 + 0x96A]
	0x034957FC CBZ X20, 0x34959FC
	0x03495800 LDR X8, [X20]
	0x03495804 ADRP X26, 0xC86000
	0x03495808 LDR X26, [X26 + 0x5B0]
	0x0349580C ANDS W31, W24, 0x1
	0x03495810 LDR X9, [X8 + 0x3A8]
	0x03495814 LDR X2, [X8 + 0x3B0]
	0x03495818 MOVZ W24, 0x80
	0x0349581C CSEL W8, W24, W31, NE
	0x03495820 ORR W1, W8, W25, 0x0
	0x03495824 MOV X0, X20
	0x03495828 UBFM X22, X19, 0x20, 0x3F
	0x0349582C BLR X9
	0x03495830 LDR X0, [X26]
	0x03495834 ANDS W31, W23, 0x1
	0x03495838 CSEL W24, W24, W31, NE
	0x0349583C LDR W8, [X0 + 0xE0]
	0x03495840 CBNZ W8, 0x3495858
	0x03495844 BL 0x1C16DFC
	0x03495848 LDR X0, [X26]
	0x0349584C LDR W8, [X0 + 0xE0]
	0x03495850 CBNZ W8, 0x3495858
	0x03495854 BL 0x1C16DFC
	0x03495858 CMP W22, 0x7D
	0x0349585C B.LE 0x34958A8
	0x03495860 CMP W22, 0x10000
	0x03495864 B.LT 0x34958C8
	0x03495868 LDR X8, [X20]
	0x0349586C ORR W1, W24, 0x7F
	0x03495870 MOV X0, X20
	0x03495874 LDR X9, [X8 + 0x3A8]
	0x03495878 LDR X2, [X8 + 0x3B0]
	0x0349587C BLR X9
	0x03495880 LDR X0, [X26]
	0x03495884 LDR W8, [X0 + 0xE0]
	0x03495888 CBNZ W8, 0x3495890
	0x0349588C BL 0x1C16DFC
	0x03495890 MOV X0, X22
	0x03495894 MOV X1, X20
	0x03495898 MOV W2, W31
	0x0349589C BL 0x3492CD4
	0x034958A0 TBNZ X23, 0x0, 0x3495904
	0x034958A4 B 0x34959B0
	0x034958A8 LDR X8, [X20]
	0x034958AC ORR W1, W24, W22, 0x0
	0x034958B0 MOV X0, X20
	0x034958B4 LDR X9, [X8 + 0x3A8]
	0x034958B8 LDR X2, [X8 + 0x3B0]
	0x034958BC BLR X9
	0x034958C0 TBNZ X23, 0x0, 0x3495904
	0x034958C4 B 0x34959B0
	0x034958C8 LDR X8, [X20]
	0x034958CC ORR W1, W24, 0x7E
	0x034958D0 MOV X0, X20
	0x034958D4 LDR X9, [X8 + 0x3A8]
	0x034958D8 LDR X2, [X8 + 0x3B0]
	0x034958DC BLR X9
	0x034958E0 LDR X0, [X26]
	0x034958E4 LDR W8, [X0 + 0xE0]
	0x034958E8 CBNZ W8, 0x34958F0
	0x034958EC BL 0x1C16DFC
	0x034958F0 MOV W0, W22
	0x034958F4 MOV X1, X20
	0x034958F8 MOV W2, W31
	0x034958FC BL 0x3492D94
	0x03495900 TBZ X23, 0x0, 0x34959B0
	0x03495904 ADRP X8, 0xC5E000
	0x03495908 LDR X8, [X8 + 0x618]
	0x0349590C MOVZ W1, 0x4
	0x03495910 LDR X0, [X8]
	0x03495914 BL 0x1C16D6C
	0x03495918 ADRP X24, 0xC9C000
	0x0349591C LDR X24, [X24 + 0x890]
	0x03495920 MOV X23, X0
	0x03495924 LDR X8, [X24]
	0x03495928 LDR W9, [X8 + 0xE0]
	0x0349592C CBNZ W9, 0x349593C
	0x03495930 MOV X0, X8
	0x03495934 BL 0x1C16DFC
	0x03495938 LDR X8, [X24]
	0x0349593C LDR X8, [X8 + 0xB8]
	0x03495940 LDR X0, [X8]
	0x03495944 CBZ X0, 0x34959FC
	0x03495948 LDR X8, [X0]
	0x0349594C MOV X1, X23
	0x03495950 LDP X9, X2, [X8 + 0x1C8]
	0x03495954 BLR X9
	0x03495958 CBZ X23, 0x34959FC
	0x0349595C LDR X8, [X20]
	0x03495960 LDR W3, [X23 + 0x18]
	0x03495964 MOV X0, X20
	0x03495968 MOV X1, X23
	0x0349596C LDR X9, [X8 + 0x388]
	0x03495970 LDR X4, [X8 + 0x390]
	0x03495974 MOV W2, W31
	0x03495978 BLR X9
	0x0349597C STP X31, X31, [X31]
	0x03495980 ADRP X8, 0xC89000
	0x03495984 LDR X8, [X8 + 0xB88]
	0x03495988 LDR W3, [X23 + 0x18]
	0x0349598C ADD X0, X31, 0x0
	0x03495990 MOV X1, X23
	0x03495994 LDR X4, [X8]
	0x03495998 MOV W2, W31
	0x0349599C BL 0x2B87BB0
	0x034959A0 LDP X0, X1, [X31]
	0x034959A4 MOV X2, X21
	0x034959A8 MOV X3, X19
	0x034959AC BL 0x3493D1C
	0x034959B0 LDR X0, [X26]
	0x034959B4 LDR W8, [X0 + 0xE0]
	0x034959B8 CBNZ W8, 0x34959C0
	0x034959BC BL 0x1C16DFC
	0x034959C0 LDR X8, [X20]
	0x034959C4 MOV X0, X20
	0x034959C8 MOV X1, X21
	0x034959CC MOV W2, W19
	0x034959D0 LDR X9, [X8 + 0x388]
	0x034959D4 LDR X4, [X8 + 0x390]
	0x034959D8 MOV W3, W22
	0x034959DC BLR X9
	0x034959E0 LDP X20, X19, [X31 + 0x50]
	0x034959E4 LDP X22, X21, [X31 + 0x40]
	0x034959E8 LDP X24, X23, [X31 + 0x30]
	0x034959EC LDP X26, X25, [X31 + 0x20]
	0x034959F0 LDR X30, [X31 + 0x10]
	0x034959F4 ADD X31, X31, 0x60
	0x034959F8 RET
	0x034959FC BL 0x1C16F20
	0x03495A00 STR X30, [X31 - 0x40]!
	0x03495A04 STP X24, X23, [X31 + 0x10]
	0x03495A08 STP X22, X21, [X31 + 0x20]
	0x03495A0C STP X20, X19, [X31 + 0x30]
	0x03495A10 ADRP X21, 0xF48000
	0x03495A14 LDRB W8, [X21 + 0x96B]
	0x03495A18 MOV X19, X1
	0x03495A1C MOV X20, X0
	0x03495A20 TBNZ X8, 0x0, 0x3495A38
	0x03495A24 ADRP X0, 0xC9C000
	0x03495A28 LDR X0, [X0 + 0x378]
	0x03495A2C BL 0x1C16CF4
	0x03495A30 MOVZ W8, 0x1
	0x03495A34 STRB W8, [X21 + 0x96B]
	0x03495A38 ADRP X24, 0xC9C000
	0x03495A3C LDR X21, [X20 + 0x88]!
	0x03495A40 LDR X24, [X24 + 0x378]
	0x03495A44 MOV X0, X21
	0x03495A48 MOV X1, X19
	0x03495A4C MOV X2, X31
	0x03495A50 BL 0x33C0DE4
	0x03495A54 CBZ X0, 0x3495A74
	0x03495A58 LDR X23, [X24]
	0x03495A5C MOV X22, X0
	0x03495A60 MOV X1, X23
	0x03495A64 BL 0x1C16E00
	0x03495A68 MOV X1, X0
	0x03495A6C CBNZ X0, 0x3495A78
	0x03495A70 B 0x3495AA4
	0x03495A74 MOV X1, X31
	0x03495A78 MOV X0, X20
	0x03495A7C MOV X2, X21
	0x03495A80 BL 0x1C24138
	0x03495A84 CMP X21, X0
	0x03495A88 MOV X21, X0
	0x03495A8C B.NE 0x3495A44
	0x03495A90 LDP X20, X19, [X31 + 0x30]
	0x03495A94 LDP X22, X21, [X31 + 0x20]
	0x03495A98 LDP X24, X23, [X31 + 0x10]
	0x03495A9C LDR X30, [X31], #0x40
	0x03495AA0 RET
	0x03495AA4 MOV X0, X22
	0x03495AA8 MOV X1, X23
	0x03495AAC BL 0x1C171E0
	0x03495AB0 STR X30, [X31 - 0x40]!
	0x03495AB4 STP X24, X23, [X31 + 0x10]
	0x03495AB8 STP X22, X21, [X31 + 0x20]
	0x03495ABC STP X20, X19, [X31 + 0x30]
	0x03495AC0 ADRP X21, 0xF48000
	0x03495AC4 LDRB W8, [X21 + 0x96C]
	0x03495AC8 MOV X19, X1
	0x03495ACC MOV X20, X0
	0x03495AD0 TBNZ X8, 0x0, 0x3495AE8
	0x03495AD4 ADRP X0, 0xC9C000
	0x03495AD8 LDR X0, [X0 + 0x378]
	0x03495ADC BL 0x1C16CF4
	0x03495AE0 MOVZ W8, 0x1
	0x03495AE4 STRB W8, [X21 + 0x96C]
	0x03495AE8 ADRP X24, 0xC9C000
	0x03495AEC LDR X21, [X20 + 0x88]!
	0x03495AF0 LDR X24, [X24 + 0x378]
	0x03495AF4 MOV X0, X21
	0x03495AF8 MOV X1, X19
	0x03495AFC MOV X2, X31
	0x03495B00 BL 0x33C0FDC
	0x03495B04 CBZ X0, 0x3495B24
	0x03495B08 LDR X23, [X24]
	0x03495B0C MOV X22, X0
	0x03495B10 MOV X1, X23
	0x03495B14 BL 0x1C16E00
	0x03495B18 MOV X1, X0
	0x03495B1C CBNZ X0, 0x3495B28
	0x03495B20 B 0x3495B54
	0x03495B24 MOV X1, X31
	0x03495B28 MOV X0, X20
	0x03495B2C MOV X2, X21
	0x03495B30 BL 0x1C24138
	0x03495B34 CMP X21, X0
	0x03495B38 MOV X21, X0
	0x03495B3C B.NE 0x3495AF4
	0x03495B40 LDP X20, X19, [X31 + 0x30]
	0x03495B44 LDP X22, X21, [X31 + 0x20]
	0x03495B48 LDP X24, X23, [X31 + 0x10]
	0x03495B4C LDR X30, [X31], #0x40
	0x03495B50 RET
	0x03495B54 MOV X0, X22
	0x03495B58 MOV X1, X23
	0x03495B5C BL 0x1C171E0
	0x03495B60 SUB X31, X31, 0x70
	0x03495B64 STP X29, X30, [X31 + 0x10]
	0x03495B68 STP X28, X27, [X31 + 0x20]
	0x03495B6C STP X26, X25, [X31 + 0x30]
	0x03495B70 STP X24, X23, [X31 + 0x40]
	0x03495B74 STP X22, X21, [X31 + 0x50]
	0x03495B78 STP X20, X19, [X31 + 0x60]
	0x03495B7C STR X1, [X31 + 0x8]
	0x03495B80 LDRB W8, [X31 + 0x70]
	0x03495B84 ADRP X28, 0xF48000
	0x03495B88 ADRP X26, 0xC8D000
	0x03495B8C LDR X29, [X31 + 0x78]
	0x03495B90 LDRB W9, [X28 + 0x96D]
	0x03495B94 LDR X26, [X26 + 0xEB0]
	0x03495B98 MOV X23, X6
	0x03495B9C MOV X20, X5
	0x03495BA0 MOV X24, X4
	0x03495BA4 MOV X25, X3
	0x03495BA8 MOV X22, X2
	0x03495BAC MOV X19, X0
	0x03495BB0 AND W27, W7, 0x1
	0x03495BB4 AND W21, W8, 0x1
	0x03495BB8 TBNZ X9, 0x0, 0x3495C0C
	0x03495BBC ADRP X0, 0xC60000
	0x03495BC0 LDR X0, [X0 + 0xA50]
	0x03495BC4 BL 0x1C16CF4
	0x03495BC8 ADRP X0, 0xC9C000
	0x03495BCC LDR X0, [X0 + 0x898]
	0x03495BD0 BL 0x1C16CF4
	0x03495BD4 ADRP X0, 0xC8D000
	0x03495BD8 LDR X0, [X0 + 0xEB0]
	0x03495BDC BL 0x1C16CF4
	0x03495BE0 ADRP X0, 0xC60000
	0x03495BE4 LDR X0, [X0 + 0x570]
	0x03495BE8 BL 0x1C16CF4
	0x03495BEC ADRP X0, 0xC9C000
	0x03495BF0 LDR X0, [X0 + 0x7E8]
	0x03495BF4 BL 0x1C16CF4
	0x03495BF8 ADRP X0, 0xC9C000
	0x03495BFC LDR X0, [X0 + 0x8A0]
	0x03495C00 BL 0x1C16CF4
	0x03495C04 MOVZ W8, 0x1
	0x03495C08 STRB W8, [X28 + 0x96D]
	0x03495C0C MOVZ W8, 0x1
	0x03495C10 STR W8, [X19 + 0x5C]
	0x03495C14 LDR X0, [X26]
	0x03495C18 ADRP X28, 0xC60000
	0x03495C1C LDR X28, [X28 + 0x570]
	0x03495C20 BL 0x1C16F10
	0x03495C24 MOVZ W1, 0x1
	0x03495C28 MOV X2, X31
	0x03495C2C MOV X26, X0
	0x03495C30 BL 0x33E1548
	0x03495C34 MOV X0, X19
	0x03495C38 MOV X1, X31
	0x03495C3C STR X26, [X19 + 0x80]
	0x03495C40 BL 0x36D0280
	0x03495C44 LDR X8, [X31 + 0x8]
	0x03495C48 STP X25, X24, [X19 + 0x20]
	0x03495C4C STRB W21, [X19 + 0x31]
	0x03495C50 STR X29, [X19 + 0x38]
	0x03495C54 STP X8, X22, [X19 + 0x10]
	0x03495C58 ADRP X8, 0xC60000
	0x03495C5C LDR X8, [X8 + 0xA50]
	0x03495C60 LDR X0, [X8]
	0x03495C64 BL 0x1C16F10
	0x03495C68 MOV X1, X31
	0x03495C6C MOV X24, X0
	0x03495C70 BL 0x33DFA8C
	0x03495C74 MOVZ W8, 0x2
	0x03495C78 STR X24, [X19 + 0x40]
	0x03495C7C STR W8, [X19 + 0x48]
	0x03495C80 ADRP X8, 0xC9C000
	0x03495C84 LDR X8, [X8 + 0x7E8]
	0x03495C88 LDR X0, [X8]
	0x03495C8C BL 0x1C16F10
	0x03495C90 MOV X1, X31
	0x03495C94 MOV X24, X0
	0x03495C98 BL 0x33BDD8C
	0x03495C9C STP X31, X31, [X24 + 0x10]
	0x03495CA0 STR X24, [X19 + 0x60]
	0x03495CA4 CBZ X23, 0x3495CCC
	0x03495CA8 ADRP X8, 0xC9C000
	0x03495CAC LDR X8, [X8 + 0x8A0]
	0x03495CB0 MOV X0, X23
	0x03495CB4 MOV X2, X31
	0x03495CB8 LDR X1, [X8]
	0x03495CBC BL 0x322C2F0
	0x03495CC0 TBNZ X0, 0x1F, 0x3495CCC
	0x03495CC4 MOVZ W8, 0x1
	0x03495CC8 STRB W8, [X19 + 0x68]
	0x03495CCC STR X20, [X19 + 0x90]
	0x03495CD0 STRB W27, [X19 + 0x30]
	0x03495CD4 LDR X0, [X28]
	0x03495CD8 LDR W8, [X0 + 0xE0]
	0x03495CDC CBNZ W8, 0x3495CE4
	0x03495CE0 BL 0x1C16DFC
	0x03495CE4 TBNZ X20, 0x0, 0x3495D80
	0x03495CE8 LDR X0, [X28]
	0x03495CEC LDR W8, [X0 + 0xE0]
	0x03495CF0 CBNZ W8, 0x3495CFC
	0x03495CF4 BL 0x1C16DFC
	0x03495CF8 LDR X0, [X28]
	0x03495CFC LDR X8, [X0 + 0xB8]
	0x03495D00 MOV X0, X20
	0x03495D04 MOV X2, X31
	0x03495D08 LDR X1, [X8]
	0x03495D0C BL 0x3394CE4
	0x03495D10 TBZ X0, 0x0, 0x3495D60
	0x03495D14 LDR X0, [X19 + 0x40]
	0x03495D18 CBZ X0, 0x3495DC8
	0x03495D1C MOV X1, X31
	0x03495D20 BL 0x33DFA08
	0x03495D24 ADRP X8, 0xC9C000
	0x03495D28 LDR X8, [X8 + 0x898]
	0x03495D2C MOV X23, X0
	0x03495D30 LDR X8, [X8]
	0x03495D34 MOV X0, X8
	0x03495D38 BL 0x1C16F10
	0x03495D3C LDR X1, [X31 + 0x8]
	0x03495D40 MOV X2, X22
	0x03495D44 MOV X3, X19
	0x03495D48 MOV X4, X20
	0x03495D4C MOV X5, X23
	0x03495D50 MOV X6, X31
	0x03495D54 MOV X24, X0
	0x03495D58 BL 0x348D830
	0x03495D5C STR X24, [X19 + 0x50]
	0x03495D60 LDP X20, X19, [X31 + 0x60]
	0x03495D64 LDP X22, X21, [X31 + 0x50]
	0x03495D68 LDP X24, X23, [X31 + 0x40]
	0x03495D6C LDP X26, X25, [X31 + 0x30]
	0x03495D70 LDP X28, X27, [X31 + 0x20]
	0x03495D74 LDP X29, X30, [X31 + 0x10]
	0x03495D78 ADD X31, X31, 0x70
	0x03495D7C RET
	0x03495D80 ADRP X0, 0xC5E000
	0x03495D84 LDR X0, [X0 + 0x5B0]
	0x03495D88 BL 0x1C16D08
	0x03495D8C BL 0x1C16F10
	0x03495D90 MOV X19, X0
	0x03495D94 ADRP X0, 0xC9C000
	0x03495D98 LDR X0, [X0 + 0x8A8]
	0x03495D9C BL 0x1C16D08
	0x03495DA0 MOV X1, X0
	0x03495DA4 MOV X0, X19
	0x03495DA8 MOV X2, X31
	0x03495DAC BL 0x337DF1C
	0x03495DB0 ADRP X0, 0xC9C000
	0x03495DB4 LDR X0, [X0 + 0x8B0]
	0x03495DB8 BL 0x1C16D08
	0x03495DBC MOV X1, X0
	0x03495DC0 MOV X0, X19
	0x03495DC4 BL 0x1C16DEC
	0x03495DC8 BL 0x1C16F20
	0x03495DCC STR X30, [X31 - 0x30]!
	0x03495DD0 STP X22, X21, [X31 + 0x10]
	0x03495DD4 STP X20, X19, [X31 + 0x20]
	0x03495DD8 MOV X21, X1
	0x03495DDC MOV X1, X31
	0x03495DE0 MOV W19, W3

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X20, 0xF49000
	010 Move W8, [X20+2403]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {66}
	016 Move X0, 0xC8A000
	017 Move X0, [X0+2952]
	018 Call 0x1C17CF4
	019 Move X0, 0xC6A000
	020 Move X0, [X0+3688]
	021 Call 0x1C17CF4
	022 Move X0, 0xC92000
	023 Move X0, [X0+3312]
	024 Call 0x1C17CF4
	025 Move X0, 0xC92000
	026 Move X0, [X0+3320]
	027 Call 0x1C17CF4
	028 Move X0, 0xC92000
	029 Move X0, [X0+3328]
	030 Call 0x1C17CF4
	031 Move X0, 0xC87000
	032 Move X0, [X0+1456]
	033 Call 0x1C17CF4
	034 Move X0, 0xC9D000
	035 Move X0, [X0+1976]
	036 Call 0x1C17CF4
	037 Move X0, 0xC9D000
	038 Move X0, [X0+1984]
	039 Call 0x1C17CF4
	040 Move X0, 0xC9D000
	041 Move X0, [X0+1992]
	042 Call 0x1C17CF4
	043 Move X0, 0xC9D000
	044 Move X0, [X0+1888]
	045 Call 0x1C17CF4
	046 Move X0, 0xC5F000
	047 Move X0, [X0+1560]
	048 Call 0x1C17CF4
	049 Move X0, 0xC9D000
	050 Move X0, [X0+2000]
	051 Call 0x1C17CF4
	052 Move X0, 0xC9D000
	053 Move X0, [X0+2008]
	054 Call 0x1C17CF4
	055 Move X0, 0xC9D000
	056 Move X0, [X0+2016]
	057 Call 0x1C17CF4
	058 Move X0, 0xC9D000
	059 Move X0, [X0+1936]
	060 Call 0x1C17CF4
	061 Move X0, 0xC9D000
	062 Move X0, [X0+2024]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X20+2403], W8
	066 Move [X31+72], X31
	067 Move [X31+48], X31
	068 Move [X31+56], X31
	069 Move [X31+40], X31
	070 Move W21, [X19]
	071 Move X23, 0xC9D000
	072 Move X23, [X23+1888]
	073 Subtract W8, W21, 2
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare W21, 0
	076 JumpIfEqual {85}
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X19+128]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W21, TEMP
	082 Move [X31+56], X8
	083 Move [X19+128], X31
	084 Move [X19], W21
	085 Move X8, [X19+120]
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W21, TEMP
	089 Move [X31+72], X8
	090 Move [X19+120], X31
	091 Move [X19], W21
	092 Move X8, 0xC5F000
	093 Move X8, [X8+1560]
	094 Move X0, [X8]
	095 Move W1, 8
	096 Call 0x1C17D6C
	097 Move X1, X0
	098 Move X8, 0xC6A000
	099 Move X8, [X8+3688]
	100 Move [X31+24], X31
	101 Move [X31+32], X31
	102 Move X2, [X8]
	103 Add X0, X31, 24
	104 Call 0x2B88B6C, X0, X1
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 Move X1, [X19+32]
	107 Move X4, [X19+40]
	108 Move [X19+4], V0
	109 Move X2, [X19+64]
	110 Move X3, [X19+72]
	111 Move W0, 2
	112 Call BinaryReaderWriter.ReadExactly, X0, X1, X2, X3
	113 Compare X0, 0
	114 JumpIfEqual {479}
	115 Move X1, X31
	116 Call Task.GetAwaiter, X0
	117 Move [X31+72], X0
	118 Add X0, X31, 72
	119 Move X1, X31
	120 Call TaskAwaiter.get_IsCompleted, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {409}
	125 Add X0, X31, 72
	126 Move X1, X31
	127 Call TaskAwaiter.GetResult, X0
	128 Move X8, 0xC87000
	129 Move X8, [X8+1456]
	130 Move X0, [X8]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X1, [X19+64]
	136 Compare X1, 0
	137 JumpIfEqual {475}
	138 Move W8, [X1+24]
	139 Compare W8, 0
	140 JumpIfEqual {476}
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W8, [X1+32]
	143 Move W0, [X1+33]
	144 Move X2, [X19+72]
	145 Move X3, [X19+32]
	146 Move X4, [X19+40]
	147 Move W9, W8
	148 ShiftRight W9, 7
	149 And W9, W9, 0x7FFFFFFF
	150 And W8, W8, 15
	151 Move W10, W0
	152 ShiftRight W10, 7
	153 And W10, W10, 0x7FFFFFFF
	154 Move [X19+80], W9
	155 Move [X19+84], W8
	156 Move [X19+88], W10
	157 Call WebSocketFrameReader.ReadLength, X0, X1, X2, X3
	158 Compare X0, 0
	159 JumpIfEqual {478}
	160 Move X8, 0xC9D000
	161 Move X8, [X8+2016]
	162 Move X1, [X8]
	163 Call Task`1<UInt32>.GetAwaiter, X0
	164 Move X8, 0xC9D000
	165 Move X8, [X8+2008]
	166 Move [X31+56], X0
	167 Move X1, [X8]
	168 Add X0, X31, 56
	169 Call TaskAwaiter`1<UInt32>.get_IsCompleted, X0
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {393}
	174 Move X8, 0xC9D000
	175 Move X8, [X8+2000]
	176 Move X1, [X8]
	177 Add X0, X31, 56
	178 Call TaskAwaiter`1<UInt32>.GetResult, X0
	179 Move [X19+92], W0
	180 Move X8, 0xC87000
	181 Move X8, [X8+1456]
	182 Move W20, W0
	183 Move X0, [X8]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move W8, [X19+60]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Add W9, W8, 3
	191 NotImplemented "Instruction CMP not yet implemented."
	192 NotImplemented "Instruction CSEL not yet implemented."
	193 And W20, W8, 0xFFFFFFFC
	194 Move [X19+96], W20
	195 Move [X19+104], X31
	196 Move [X19+112], X31
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X8, [X19+120]
	201 Move TEMP, 0
	202 Not TEMP
	203 Move W9, TEMP
	204 Move [X31+72], X8
	205 Move [X19+120], X31
	206 Move [X19], W9
	207 Add X0, X31, 72
	208 Move X1, X31
	209 Call TaskAwaiter.GetResult, X0
	210 Move X8, [X19+120]
	211 Move TEMP, 0
	212 Not TEMP
	213 Move W9, TEMP
	214 Move [X31+72], X8
	215 Move [X19+120], X31
	216 Move [X19], W9
	217 Move X8, [X19+120]
	218 Move TEMP, 0
	219 Not TEMP
	220 Move W9, TEMP
	221 Move [X31+72], X8
	222 Move [X19+120], X31
	223 Move [X19], W9
	224 Move W8, [X19+88]
	225 Compare W8, 0
	226 JumpIfEqual {424}
	227 Move X8, 0xC87000
	228 Move X8, [X8+1456]
	229 Move X0, [X8]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X8, 0xC8A000
	235 Move X1, [X19+64]
	236 Move X8, [X8+2952]
	237 Move [X31+24], X31
	238 Move [X31+32], X31
	239 Move X4, [X8]
	240 Add X0, X31, 24
	241 Move W3, 4
	242 Move W2, W31
	243 Call 0x2B88BB0, X0, X1, X2, X3
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 Move X1, [X19+32]
	246 Move X4, [X19+40]
	247 Move [X19+104], V0
	248 Move W0, [X19+116]
	249 Move X2, [X19+104]
	250 Move X3, [X19+112]
	251 Call BinaryReaderWriter.ReadExactly, X0, X1, X2, X3
	252 Compare X0, 0
	253 JumpIfEqual {480}
	254 Move X1, X31
	255 Call Task.GetAwaiter, X0
	256 Move [X31+72], X0
	257 Add X0, X31, 72
	258 Move X1, X31
	259 Call TaskAwaiter.get_IsCompleted, X0
	260 Move TEMP, X0
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfNotEqual {458}
	264 Add X0, X31, 72
	265 Move X1, X31
	266 Call TaskAwaiter.GetResult, X0
	267 Move W0, [X19+96]
	268 Move X1, [X19+32]
	269 Move X4, [X19+40]
	270 Move X2, [X19+48]
	271 Move X3, [X19+56]
	272 Call BinaryReaderWriter.ReadExactly, X0, X1, X2, X3
	273 Compare X0, 0
	274 JumpIfEqual {474}
	275 Move X1, X31
	276 Call Task.GetAwaiter, X0
	277 Move [X31+72], X0
	278 Add X0, X31, 72
	279 Move X1, X31
	280 Call TaskAwaiter.get_IsCompleted, X0
	281 Move TEMP, X0
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfNotEqual {377}
	285 Add X0, X31, 72
	286 Move X1, X31
	287 Call TaskAwaiter.GetResult, X0
	288 Move X8, 0xC87000
	289 Move X8, [X8+1456]
	290 Move X0, [X8]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1C17DFC
	295 Move X8, 0xC8A000
	296 Move X1, [X19+48]
	297 Move W2, [X19+56]
	298 Move W3, [X19+96]
	299 Move X8, [X8+2952]
	300 Move X4, [X8]
	301 Add X0, X31, 40
	302 Call 0x2B88BB0, X0, X1, X2, X3
	303 Move X0, [X19+104]
	304 Move X1, [X19+112]
	305 Move X2, [X31+40]
	306 Move X3, [X31+48]
	307 Call WebSocketFrameCommon.ToggleMask, X0, X1
	308 Move W22, [X19+84]
	309 Move W21, [X19+80]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move W2, [X19+92]
	312 Move X3, [X19+48]
	313 Move X4, [X19+56]
	314 Move X5, [X19+104]
	315 Move X6, [X19+112]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 NotImplemented "Instruction CSET not yet implemented."
	318 Move W1, 8
	319 Call WebSocketFrameReader.DecodeCloseFrame, X0, X1, X2, X3, X4
	320 Move X20, X0
	321 NotImplemented "Instruction LDUR not yet implemented."
	322 Move X8, 0xC9D000
	323 Move W24, [X19+92]
	324 Move [X31], V0
	325 Move X8, [X8+1936]
	326 Move X0, [X8]
	327 Call 0x1C17F10
	328 Move X20, X0
	329 Move X1, X31
	330 Call Object..ctor, X0
	331 Move V0, [X31]
	332 Move [X20+16], W21
	333 Move [X20+20], W22
	334 Move [X20+24], W24
	335 Move [X20+3], V0
	336 Move X8, 0xC9D000
	337 Move X8, [X8+2024]
	338 Move W24, [X19+92]
	339 Move W22, [X19+96]
	340 Move X0, [X8]
	341 Call 0x1C17F10
	342 Move X21, X0
	343 Subtract W3, W24, W22
	344 Move X1, X20
	345 Move W2, W22
	346 Move X4, X31
	347 Call WebSocketReadCursor..ctor, X0, X1, X2, X3
	348 Move TEMP, 1
	349 Not TEMP
	350 Move W8, TEMP
	351 Move [X19+64], X31
	352 Move [X19+72], X31
	353 Move [X19], W8
	354 Move [X19+104], X31
	355 Move [X19+112], X31
	356 Move X0, [X23]
	357 Move X20, 0xC9D000
	358 Add X19, X19, 8
	359 Move W8, [X0+224]
	360 Move X20, [X20+1992]
	361 Compare W8, 0
	362 JumpIfNotEqual {364}
	363 Call 0x1C17DFC
	364 Move X2, [X20]
	365 Move X0, X19
	366 Move X1, X21
	367 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	368 Move X20, [X31+112]
	369 Move X19, [X31+120]
	370 Move X22, [X31+96]
	371 Move X21, [X31+104]
	372 Move X24, [X31+80]
	373 Move X23, [X31+88]
	374 Move X30, [X31+64]
	375 Add X31, X31, 128
	376 Return 
	377 Move W8, 3
	378 Move [X19], W8
	379 Move X8, [X31+72]
	380 Move [X19+120], X8
	381 Move X0, [X23]
	382 Move W8, [X0+224]
	383 Compare W8, 0
	384 JumpIfNotEqual {386}
	385 Call 0x1C17DFC
	386 Move X8, 0xC9D000
	387 Move X8, [X8+1984]
	388 Add X0, X19, 8
	389 Move X3, [X8]
	390 Add X1, X31, 72
	391 Move X2, X19
	392 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	393 Move W8, 1
	394 Move [X19], W8
	395 Move X8, [X31+56]
	396 Move [X19+128], X8
	397 Move X0, [X23]
	398 Move W8, [X0+224]
	399 Compare W8, 0
	400 JumpIfNotEqual {402}
	401 Call 0x1C17DFC
	402 Move X8, 0xC9D000
	403 Move X8, [X8+1976]
	404 Add X0, X19, 8
	405 Move X3, [X8]
	406 Add X1, X31, 56
	407 Move X2, X19
	408 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	409 Move [X19], W31
	410 Move X8, [X31+72]
	411 Move [X19+120], X8
	412 Move X0, [X23]
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {417}
	416 Call 0x1C17DFC
	417 Move X8, 0xC9D000
	418 Move X8, [X8+1984]
	419 Add X0, X19, 8
	420 Move X3, [X8]
	421 Add X1, X31, 72
	422 Move X2, X19
	423 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	424 Move W0, [X19+96]
	425 Move X1, [X19+32]
	426 Move X4, [X19+40]
	427 Move X2, [X19+48]
	428 Move X3, [X19+56]
	429 Call BinaryReaderWriter.ReadExactly, X0, X1, X2, X3
	430 Compare X0, 0
	431 JumpIfEqual {481}
	432 Move X1, X31
	433 Call Task.GetAwaiter, X0
	434 Move [X31+72], X0
	435 Add X0, X31, 72
	436 Move X1, X31
	437 Call TaskAwaiter.get_IsCompleted, X0
	438 Move TEMP, X0
	439 And TEMP, TEMP, 1
	440 Compare TEMP, 1
	441 JumpIfEqual {207}
	442 Move W8, 4
	443 Move [X19], W8
	444 Move X8, [X31+72]
	445 Move [X19+120], X8
	446 Move X0, [X23]
	447 Move W8, [X0+224]
	448 Compare W8, 0
	449 JumpIfNotEqual {451}
	450 Call 0x1C17DFC
	451 Move X8, 0xC9D000
	452 Move X8, [X8+1984]
	453 Add X0, X19, 8
	454 Move X3, [X8]
	455 Add X1, X31, 72
	456 Move X2, X19
	457 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	458 Move W8, 2
	459 Move [X19], W8
	460 Move X8, [X31+72]
	461 Move [X19+120], X8
	462 Move X0, [X23]
	463 Move W8, [X0+224]
	464 Compare W8, 0
	465 JumpIfNotEqual {467}
	466 Call 0x1C17DFC
	467 Move X8, 0xC9D000
	468 Move X8, [X8+1984]
	469 Add X0, X19, 8
	470 Move X3, [X8]
	471 Add X1, X31, 72
	472 Move X2, X19
	473 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	474 Call 0x1C17F20
	475 Call 0x1C17F20
	476 Call 0x1C17F28
	477 Call 0x1C17F28
	478 Call 0x1C17F20
	479 Call 0x1C17F20
	480 Call 0x1C17F20
	481 Call 0x1C17F20
	482 Move X20, X1
	483 Move X21, X0
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move X0, X21
	486 Call 0x3EB2AD0
	487 Move X20, X0
	488 Move X0, 0xC9D000
	489 Move X0, [X0+1744]
	490 Call 0x1C17D08
	491 Move X8, [X20]
	492 Move X1, [X8]
	493 Call 0x1C18270
	494 Move TEMP, X0
	495 And TEMP, TEMP, 1
	496 Compare TEMP, 1
	497 JumpIfNotEqual {565}
	498 Move X20, [X20]
	499 Call 0x3EB2AE0
	500 Move [X31+24], W31
	501 Move X0, 0xC5F000
	502 Move X0, [X0+1880]
	503 Call 0x1C17D08
	504 Add X1, X31, 24
	505 Call 0x1C17E04
	506 Move X21, X0
	507 Move X0, 0xC9D000
	508 Move X0, [X0+2032]
	509 Call 0x1C17D08
	510 Move X22, X0
	511 Move X0, 0xC5F000
	512 Move X0, [X0+1728]
	513 Call 0x1C17D08
	514 Move W8, [X0+224]
	515 Compare W8, 0
	516 JumpIfNotEqual {518}
	517 Call 0x1C17DFC
	518 Move X0, X22
	519 Move X1, X31
	520 Call Type.GetTypeFromHandle, X0
	521 Move W8, [X19+84]
	522 Move X22, X0
	523 Move [X31+20], W8
	524 Move X0, 0xC9D000
	525 Move X0, [X0+2040]
	526 Call 0x1C17D08
	527 Add X1, X31, 20
	528 Call 0x1C17E04
	529 Move X23, X0
	530 Move X0, 0xC5F000
	531 Move X0, [X0+3576]
	532 Call 0x1C17D08
	533 Move W8, [X0+224]
	534 Compare W8, 0
	535 JumpIfNotEqual {537}
	536 Call 0x1C17DFC
	537 Move X0, X22
	538 Move X1, X23
	539 Move X2, X31
	540 Call Enum.GetName, X0, X1
	541 Move X22, X0
	542 Move X0, 0xC9D000
	543 Move X0, [X0+2048]
	544 Call 0x1C17D08
	545 Move X1, X21
	546 Move X2, X22
	547 Move X3, X31
	548 Call String.Format, X0, X1, X2
	549 Move X22, X0
	550 Move X0, 0xC9D000
	551 Move X0, [X0+1744]
	552 Call 0x1C17D08
	553 Call 0x1C17F10
	554 Move X21, X0
	555 Move X1, X22
	556 Move X2, X20
	557 Move X3, X31
	558 Call InternalBufferOverflowException..ctor, X0, X1, X2
	559 Move X0, 0xC9D000
	560 Move X0, [X0+2056]
	561 Call 0x1C17D08
	562 Move X1, X0
	563 Move X0, X21
	564 Call 0x1C17DEC
	565 Move W0, 8
	566 Call 0x3EB2AF0
	567 Move X8, [X20]
	568 Move [X0], X8
	569 Move X1, 0xA20000
	570 Add X1, X1, 3672
	571 Move X2, X31
	572 Call 0x3EB2B00
	573 Move X20, X1
	574 Move X21, X0
	575 Call 0x3EB2AE0
	576 Move X20, X1
	577 Move X21, X0
	578 NotImplemented "Instruction CMP not yet implemented."
	579 Move X0, X21
	580 Call 0x3EB2AD0
	581 Move X20, X0
	582 Move X0, 0xC5F000
	583 Move X0, [X0+2000]
	584 Call 0x1C17D08
	585 Move X8, [X20]
	586 Move X1, [X8]
	587 Call 0x1C18270
	588 Move TEMP, X0
	589 And TEMP, TEMP, 1
	590 Compare TEMP, 1
	591 JumpIfNotEqual {616}
	592 Move X20, [X20]
	593 Call 0x3EB2AE0
	594 Move TEMP, 1
	595 Not TEMP
	596 Move W8, TEMP
	597 Move [X19+64], X31
	598 Move [X19+72], X31
	599 Move [X19+104], X31
	600 Move [X19+112], X31
	601 Move [X19+8], W8
	602 Move X0, 0xC9D000
	603 Move X0, [X0+1888]
	604 Call 0x1C17D08
	605 Move W8, [X0+224]
	606 Compare W8, 0
	607 JumpIfNotEqual {609}
	608 Call 0x1C17DFC
	609 Move X0, 0xC9D000
	610 Move X0, [X0+2064]
	611 Call 0x1C17D08
	612 Move X2, X0
	613 Move X0, X19
	614 Move X1, X20
	615 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	616 Move W0, 8
	617 Call 0x3EB2AF0
	618 Move X8, [X20]
	619 Move [X0], X8
	620 Move X1, 0xA20000
	621 Add X1, X1, 3672
	622 Move X2, X31
	623 Call 0x3EB2B00
	624 Move X21, X0
	625 Call 0x3EB2AE0
	626 Move X0, X21
	627 Call 0x1D2D690
	628 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03495DE4 MOV W20, W2
	0x03495DE8 MOV X22, X0
	0x03495DEC BL 0x33BDD8C
	0x03495DF0 STR X21, [X22 + 0x10]
	0x03495DF4 STP W20, W19, [X22 + 0x18]
	0x03495DF8 LDP X20, X19, [X31 + 0x20]
	0x03495DFC LDP X22, X21, [X31 + 0x10]
	0x03495E00 LDR X30, [X31], #0x30
	0x03495E04 RET
	0x03495E08 LDUR X0, [X0 + 0x6C]
	0x03495E0C RET
	0x03495E10 LDR X0, [X0 + 0x78]
	0x03495E14 RET
	0x03495E18 LDR W0, [X0 + 0x48]
	0x03495E1C RET
	0x03495E20 LDR X0, [X0 + 0x38]
	0x03495E24 RET
	0x03495E28 LDR X0, [X0 + 0x90]
	0x03495E2C RET
	0x03495E30 STR X1, [X0 + 0x90]
	0x03495E34 RET
	0x03495E38 SUB X31, X31, 0xE0
	0x03495E3C STP X30, X27, [X31 + 0x90]
	0x03495E40 STP X26, X25, [X31 + 0xA0]
	0x03495E44 STP X24, X23, [X31 + 0xB0]
	0x03495E48 STP X22, X21, [X31 + 0xC0]
	0x03495E4C STP X20, X19, [X31 + 0xD0]
	0x03495E50 ADRP X24, 0xF48000
	0x03495E54 ADRP X23, 0xC9C000
	0x03495E58 LDRB W8, [X24 + 0x96E]
	0x03495E5C LDR X23, [X23 + 0x8B8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF49000
	007 Move X21, 0xC9D000
	008 Move W8, [X22+2404]
	009 Move X21, [X21+1888]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC9D000
	017 Move X0, [X0+2072]
	018 Call 0x1C17CF4
	019 Move X0, 0xC9D000
	020 Move X0, [X0+1888]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2404], W8
	024 Move X0, [X21]
	025 Move X21, 0xC9D000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2072]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

