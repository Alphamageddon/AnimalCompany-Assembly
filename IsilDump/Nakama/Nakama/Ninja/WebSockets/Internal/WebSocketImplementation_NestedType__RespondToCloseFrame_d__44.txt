Type: Nakama.Ninja.WebSockets.Internal.WebSocketImplementation/<RespondToCloseFrame>d__44

Method: System.Void MoveNext()

Disassembly:
	0x0349A298 LDR X0, [X0 + 0x5B0]
	0x0349A29C BL 0x1C16D08
	0x0349A2A0 BL 0x1C16F10
	0x0349A2A4 MOV X21, X0
	0x0349A2A8 MOV X1, X20
	0x0349A2AC MOV X2, X31
	0x0349A2B0 BL 0x337DF1C
	0x0349A2B4 ADRP X0, 0xC97000
	0x0349A2B8 LDR X0, [X0 + 0xA30]
	0x0349A2BC BL 0x1C16D08
	0x0349A2C0 MOV X1, X0
	0x0349A2C4 MOV X0, X21
	0x0349A2C8 BL 0x1C16DEC
	0x0349A2CC BL 0x1C16F20
	0x0349A2D0 MOV X0, X20
	0x0349A2D4 BL 0x1C16F18
	0x0349A2D8 BL 0x1C16F20
	0x0349A2DC BL 0x1C16F20
	0x0349A2E0 B 0x349A3EC
	0x0349A2E4 B 0x349A3EC
	0x0349A2E8 B 0x349A3EC
	0x0349A2EC B 0x349A3EC
	0x0349A2F0 B 0x349A3EC
	0x0349A2F4 MOV X21, X1
	0x0349A2F8 MOV X20, X0
	0x0349A2FC MOV W25, W31
	0x0349A300 B 0x349A32C
	0x0349A304 B 0x349A3EC
	0x0349A308 B 0x349A324
	0x0349A30C B 0x349A324
	0x0349A310 B 0x349A3EC
	0x0349A314 B 0x349A3EC
	0x0349A318 B 0x349A324
	0x0349A31C B 0x349A3EC
	0x0349A320 B 0x349A324
	0x0349A324 MOV X21, X1
	0x0349A328 MOV X20, X0
	0x0349A32C CMP W21, 0x1
	0x0349A330 B.NE 0x349A358
	0x0349A334 MOV X0, X20
	0x0349A338 BL 0x3EB1AD0
	0x0349A33C LDR X8, [X0]
	0x0349A340 STR X8, [X31]
	0x0349A344 BL 0x3EB1AE0
	0x0349A348 LDR X20, [X31]
	0x0349A34C MOV W22, W31
	0x0349A350 TBZ X25, 0x1F, 0x349A1BC
	0x0349A354 B 0x349A154
	0x0349A358 STR X31, [X31]
	0x0349A35C TBZ X25, 0x1F, 0x349A3C8
	0x0349A360 LDR X22, [X19 + 0x40]
	0x0349A364 CBZ X22, 0x349A3C8
	0x0349A368 ADRP X10, 0xC59000
	0x0349A36C LDR X8, [X22]
	0x0349A370 LDR X10, [X10 + 0xE00]
	0x0349A374 LDRH W9, [X8 + 0x12E]
	0x0349A378 LDR X1, [X10]
	0x0349A37C CBZ X9, 0x349A3A0
	0x0349A380 LDR X10, [X8 + 0xB0]
	0x0349A384 ADD X10, X10, 0x8
	0x0349A388 LDUR X11, [X10 - 0x8]
	0x0349A38C CMP X11, X1
	0x0349A390 B.EQ 0x349A3B0
	0x0349A394 SUBS X9, X9, 0x1
	0x0349A398 ADD X10, X10, 0x10
	0x0349A39C B.NE 0x349A388
	0x0349A3A0 MOV X0, X22
	0x0349A3A4 MOV W2, W31
	0x0349A3A8 BL 0x1C5C788
	0x0349A3AC B 0x349A3BC
	0x0349A3B0 LDRSW X9, [X10]
	0x0349A3B4 ADD X8, X8, X9, 0x4, LSL
	0x0349A3B8 ADD X0, X8, 0x138
	0x0349A3BC LDP X8, X1, [X0]
	0x0349A3C0 MOV X0, X22
	0x0349A3C4 BLR X8
	0x0349A3C8 LDR X8, [X31]
	0x0349A3CC CBZ X8, 0x349A3F4
	0x0349A3D0 LDR X0, [X31]
	0x0349A3D4 BL 0x1C16F18
	0x0349A3D8 MOV X21, X1
	0x0349A3DC MOV X20, X0
	0x0349A3E0 TBZ X25, 0x1F, 0x349A3C8
	0x0349A3E4 B 0x349A360
	0x0349A3E8 B 0x349A3EC
	0x0349A3EC MOV X21, X1
	0x0349A3F0 MOV X20, X0
	0x0349A3F4 CMP W21, 0x1
	0x0349A3F8 B.NE 0x349A488
	0x0349A3FC MOV X0, X20
	0x0349A400 BL 0x3EB1AD0
	0x0349A404 MOV X20, X0
	0x0349A408 ADRP X0, 0xC59000
	0x0349A40C LDR X0, [X0 + 0x7D0]
	0x0349A410 BL 0x1C16D08
	0x0349A414 LDR X8, [X20]
	0x0349A418 LDR X1, [X8]
	0x0349A41C BL 0x1C17270
	0x0349A420 TBZ X0, 0x0, 0x349A460
	0x0349A424 LDR X20, [X20]
	0x0349A428 BL 0x3EB1AE0
	0x0349A42C MOVN W8, 0x1
	0x0349A430 STR W8, [X19], #0x8
	0x0349A434 ADRP X0, 0xC5C000
	0x0349A438 LDR X0, [X0 + 0x280]
	0x0349A43C BL 0x1C16D08
	0x0349A440 LDR W8, [X0 + 0xE0]
	0x0349A444 CBNZ W8, 0x349A44C
	0x0349A448 BL 0x1C16DFC
	0x0349A44C MOV X0, X19
	0x0349A450 MOV X1, X20
	0x0349A454 MOV X2, X31
	0x0349A458 BL 0x32C4908
	0x0349A45C B 0x349A1F4
	0x0349A460 MOVZ W0, 0x8
	0x0349A464 BL 0x3EB1AF0
	0x0349A468 LDR X8, [X20]
	0x0349A46C STR X8, [X0]
	0x0349A470 ADRP X1, 0xA1A000
	0x0349A474 ADD X1, X1, 0xE58
	0x0349A478 MOV X2, X31
	0x0349A47C BL 0x3EB1B00
	0x0349A480 MOV X20, X0
	0x0349A484 BL 0x3EB1AE0
	0x0349A488 MOV X0, X20
	0x0349A48C BL 0x1D2C690
	0x0349A490 BL 0x1990590
	0x0349A494 STR X30, [X31 - 0x30]!
	0x0349A498 STP X22, X21, [X31 + 0x10]
	0x0349A49C STP X20, X19, [X31 + 0x20]
	0x0349A4A0 ADRP X21, 0xF43000
	0x0349A4A4 ADRP X22, 0xC5C000
	0x0349A4A8 LDRB W8, [X21 + 0x987]
	0x0349A4AC LDR X22, [X22 + 0x280]
	0x0349A4B0 MOV X19, X1
	0x0349A4B4 MOV X20, X0
	0x0349A4B8 TBNZ X8, 0x0, 0x349A4D0
	0x0349A4BC ADRP X0, 0xC5C000
	0x0349A4C0 LDR X0, [X0 + 0x280]
	0x0349A4C4 BL 0x1C16CF4
	0x0349A4C8 MOVZ W8, 0x1
	0x0349A4CC STRB W8, [X21 + 0x987]
	0x0349A4D0 LDR X0, [X22]
	0x0349A4D4 LDR W8, [X0 + 0xE0]
	0x0349A4D8 CBNZ W8, 0x349A4E0
	0x0349A4DC BL 0x1C16DFC
	0x0349A4E0 ADD X0, X20, 0x8
	0x0349A4E4 MOV X1, X19
	0x0349A4E8 LDP X20, X19, [X31 + 0x20]
	0x0349A4EC LDP X22, X21, [X31 + 0x10]
	0x0349A4F0 MOV X2, X31
	0x0349A4F4 LDR X30, [X31], #0x30
	0x0349A4F8 B 0x32C477C
	0x0349A4FC SUB X31, X31, 0x60
	0x0349A500 STR X30, [X31 + 0x10]
	0x0349A504 STP X26, X25, [X31 + 0x20]
	0x0349A508 STP X24, X23, [X31 + 0x30]
	0x0349A50C STP X22, X21, [X31 + 0x40]
	0x0349A510 STP X20, X19, [X31 + 0x50]
	0x0349A514 ADRP X20, 0xF43000
	0x0349A518 LDRB W8, [X20 + 0x988]
	0x0349A51C MOV X19, X0
	0x0349A520 TBNZ X8, 0x0, 0x349A5B0
	0x0349A524 ADRP X0, 0xC8C000
	0x0349A528 LDR X0, [X0 + 0xCF8]
	0x0349A52C BL 0x1C16CF4
	0x0349A530 ADRP X0, 0xC81000
	0x0349A534 LDR X0, [X0 + 0x5B0]
	0x0349A538 BL 0x1C16CF4
	0x0349A53C ADRP X0, 0xC97000
	0x0349A540 LDR X0, [X0 + 0xA38]
	0x0349A544 BL 0x1C16CF4
	0x0349A548 ADRP X0, 0xC5C000
	0x0349A54C LDR X0, [X0 + 0x280]
	0x0349A550 BL 0x1C16CF4
	0x0349A554 ADRP X0, 0xC59000
	0x0349A558 LDR X0, [X0 + 0x7D0]
	0x0349A55C BL 0x1C16CF4
	0x0349A560 ADRP X0, 0xC59000
	0x0349A564 LDR X0, [X0 + 0xE00]
	0x0349A568 BL 0x1C16CF4
	0x0349A56C ADRP X0, 0xC59000
	0x0349A570 LDR X0, [X0 + 0x758]
	0x0349A574 BL 0x1C16CF4
	0x0349A578 ADRP X0, 0xC59000
	0x0349A57C LDR X0, [X0 + 0x5B0]
	0x0349A580 BL 0x1C16CF4
	0x0349A584 ADRP X0, 0xC97000
	0x0349A588 LDR X0, [X0 + 0x890]
	0x0349A58C BL 0x1C16CF4
	0x0349A590 ADRP X0, 0xC97000
	0x0349A594 LDR X0, [X0 + 0xA40]
	0x0349A598 BL 0x1C16CF4
	0x0349A59C ADRP X0, 0xC97000
	0x0349A5A0 LDR X0, [X0 + 0xA48]
	0x0349A5A4 BL 0x1C16CF4
	0x0349A5A8 MOVZ W8, 0x1
	0x0349A5AC STRB W8, [X20 + 0x988]
	0x0349A5B0 STR X31, [X31 + 0x18]
	0x0349A5B4 LDR W25, [X19]
	0x0349A5B8 ADRP X24, 0xC5C000
	0x0349A5BC LDR X20, [X19 + 0x30]
	0x0349A5C0 LDR X24, [X24 + 0x280]
	0x0349A5C4 CMP W25, 0x1
	0x0349A5C8 B.EQ 0x349A75C
	0x0349A5CC CMP W25, 0x2
	0x0349A5D0 B.EQ 0x349A6E4
	0x0349A5D4 CBZ W25, 0x349AA40
	0x0349A5D8 ADRP X22, 0xC81000
	0x0349A5DC LDR X22, [X22 + 0x5B0]
	0x0349A5E0 LDR X0, [X22]
	0x0349A5E4 LDR W8, [X0 + 0xE0]
	0x0349A5E8 CBNZ W8, 0x349A5F0
	0x0349A5EC BL 0x1C16DFC
	0x0349A5F0 LDR W8, [X19 + 0x2C]
	0x0349A5F4 CMP W8, 0x7E
	0x0349A5F8 B.GE 0x349A7D8
	0x0349A5FC STR W31, [X19 + 0x58]
	0x0349A600 CBZ X20, 0x349AA7C
	0x0349A604 LDR W8, [X20 + 0x48]
	0x0349A608 CMP W8, 0x2
	0x0349A60C B.NE 0x349A9D8
	0x0349A610 LDR X8, [X20 + 0x20]
	0x0349A614 CBZ X8, 0x349AA9C
	0x0349A618 LDR X0, [X8 + 0x40]
	0x0349A61C LDR X1, [X8 + 0x28]
	0x0349A620 LDR X9, [X8 + 0x18]
	0x0349A624 BLR X9
	0x0349A628 STR X0, [X19 + 0x60]
	0x0349A62C ADRP X8, 0xC97000
	0x0349A630 LDR X8, [X8 + 0x890]
	0x0349A634 MOV X21, X0
	0x0349A638 LDP X23, X22, [X19 + 0x20]
	0x0349A63C LDRB W26, [X20 + 0x31]
	0x0349A640 LDR X0, [X8]
	0x0349A644 LDR W8, [X0 + 0xE0]
	0x0349A648 CBNZ W8, 0x349A650
	0x0349A64C BL 0x1C16DFC
	0x0349A650 CMP W26, 0x0
	0x0349A654 CSET W5, NE
	0x0349A658 MOVZ W0, 0xA
	0x0349A65C MOVZ W4, 0x1
	0x0349A660 MOV X1, X23
	0x0349A664 MOV X2, X22
	0x0349A668 MOV X3, X21
	0x0349A66C MOV X6, X31
	0x0349A670 BL 0x3495764
	0x0349A674 LDR X1, [X19 + 0x60]
	0x0349A678 LDR X2, [X19 + 0x38]
	0x0349A67C MOV X0, X20
	0x0349A680 BL 0x34969B8
	0x0349A684 CBZ X0, 0x349AAA0
	0x0349A688 MOV X1, X31
	0x0349A68C BL 0x33ED394
	0x0349A690 STR X0, [X31 + 0x18]
	0x0349A694 ADD X0, X31, 0x18
	0x0349A698 MOV X1, X31
	0x0349A69C BL 0x32C3A80
	0x0349A6A0 TBNZ X0, 0x0, 0x349A770
	0x0349A6A4 MOVZ W8, 0x1
	0x0349A6A8 STR W8, [X19]
	0x0349A6AC LDR X8, [X31 + 0x18]
	0x0349A6B0 STR X8, [X19 + 0x48]
	0x0349A6B4 LDR X0, [X24]
	0x0349A6B8 LDR W8, [X0 + 0xE0]
	0x0349A6BC CBNZ W8, 0x349A6C4
	0x0349A6C0 BL 0x1C16DFC
	0x0349A6C4 ADRP X8, 0xC97000
	0x0349A6C8 LDR X8, [X8 + 0xA38]
	0x0349A6CC ADD X0, X19, 0x8
	0x0349A6D0 LDR X3, [X8]
	0x0349A6D4 ADD X1, X31, 0x18
	0x0349A6D8 MOV X2, X19
	0x0349A6DC BL 0x218B5C8
	0x0349A6E0 B 0x349AA00
	0x0349A6E4 LDR X8, [X19 + 0x48]
	0x0349A6E8 MOVN W9, 0x0
	0x0349A6EC STR X8, [X31 + 0x18]
	0x0349A6F0 STR X31, [X19 + 0x48]
	0x0349A6F4 STR W9, [X19]
	0x0349A6F8 ADD X0, X31, 0x18
	0x0349A6FC MOV X1, X31
	0x0349A700 BL 0x32C3B4C
	0x0349A704 LDR X20, [X19 + 0x50]
	0x0349A708 CBZ X20, 0x349AA1C
	0x0349A70C ADRP X8, 0xC59000
	0x0349A710 LDR X8, [X8 + 0x7D0]
	0x0349A714 LDR X9, [X20]
	0x0349A718 LDR X8, [X8]
	0x0349A71C LDRB W11, [X9 + 0x130]
	0x0349A720 LDRB W10, [X8 + 0x130]
	0x0349A724 CMP W11, W10
	0x0349A728 B.CC 0x349AA1C
	0x0349A72C LDR X9, [X9 + 0xC8]
	0x0349A730 ADD X9, X9, X10, 0x3, LSL
	0x0349A734 LDUR X9, [X9 - 0x8]
	0x0349A738 CMP X9, X8
	0x0349A73C B.NE 0x349AA1C
	0x0349A740 MOV X0, X20
	0x0349A744 MOV X1, X31
	0x0349A748 BL 0x32C2380
	0x0349A74C CBZ X0, 0x349AA34
	0x0349A750 MOV X1, X31
	0x0349A754 BL 0x32C2440
	0x0349A758 B 0x349A9D8
	0x0349A75C LDR X8, [X19 + 0x48]
	0x0349A760 MOVN W25, 0x0
	0x0349A764 STR X8, [X31 + 0x18]
	0x0349A768 STR X31, [X19 + 0x48]
	0x0349A76C STR W25, [X19]
	0x0349A770 ADD X0, X31, 0x18
	0x0349A774 MOV X1, X31
	0x0349A778 BL 0x32C3B4C
	0x0349A77C MOV X21, X31
	0x0349A780 MOVZ W23, 0xF
	0x0349A784 TBZ X25, 0x1F, 0x349A900
	0x0349A788 LDR X22, [X19 + 0x60]
	0x0349A78C CBZ X22, 0x349A900
	0x0349A790 ADRP X10, 0xC59000
	0x0349A794 LDR X8, [X22]
	0x0349A798 LDR X10, [X10 + 0xE00]
	0x0349A79C LDRH W9, [X8 + 0x12E]
	0x0349A7A0 LDR X1, [X10]
	0x0349A7A4 CBZ X9, 0x349A7C8
	0x0349A7A8 LDR X10, [X8 + 0xB0]
	0x0349A7AC ADD X10, X10, 0x8
	0x0349A7B0 LDUR X11, [X10 - 0x8]
	0x0349A7B4 CMP X11, X1
	0x0349A7B8 B.EQ 0x349A8E8
	0x0349A7BC SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X20, 0xF44000
	012 Move W8, [X20+2434]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0xC85000
	019 Move X0, [X0+2952]
	020 Call 0x1C17CF4
	021 Move X0, 0xC82000
	022 Move X0, [X0+1456]
	023 Call 0x1C17CF4
	024 Move X0, 0xC98000
	025 Move X0, [X0+2568]
	026 Call 0x1C17CF4
	027 Move X0, 0xC98000
	028 Move X0, [X0+2416]
	029 Call 0x1C17CF4
	030 Move X0, 0xC98000
	031 Move X0, [X0+2232]
	032 Call 0x1C17CF4
	033 Move X0, 0xC5A000
	034 Move X0, [X0+1560]
	035 Call 0x1C17CF4
	036 Move X0, 0xC5A000
	037 Move X0, [X0+3584]
	038 Call 0x1C17CF4
	039 Move X0, 0xC98000
	040 Move X0, [X0+2192]
	041 Call 0x1C17CF4
	042 Move X0, 0xC98000
	043 Move X0, [X0+2480]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2434], W8
	047 Move [X31+16], X31
	048 Move [X31+24], X31
	049 Move [X31+40], X31
	050 Move X24, 0xC98000
	051 Move W25, [X19]
	052 Move X24, [X24+2232]
	053 Compare W25, 0
	054 JumpIfEqual {73}
	055 Move X8, [X19+40]
	056 Compare X8, 0
	057 JumpIfEqual {245}
	058 Move X20, [X19+32]
	059 Compare X20, 0
	060 JumpIfEqual {246}
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move [X20+108], X8
	063 Move X8, [X19+40]
	064 Compare X8, 0
	065 JumpIfEqual {247}
	066 Move W9, [X20+72]
	067 Move X10, [X8+40]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X20+120], X10
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W9, 5
	072 Move [X20+72], W9
	073 Move X8, [X19+64]
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W25, TEMP
	077 Move [X31+40], X8
	078 Move [X19+64], X31
	079 Move [X19], W25
	080 Move X8, 0xC5A000
	081 Move X8, [X8+1560]
	082 Move X0, [X8]
	083 Move W1, W31
	084 Call 0x1C17D6C
	085 Move X8, 0xC82000
	086 Move X8, [X8+1456]
	087 Move X21, X0
	088 Move X0, [X8]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X8, 0xC85000
	094 Move X8, [X8+2952]
	095 Move X4, [X8]
	096 Add X0, X31, 16
	097 Move X1, X21
	098 Move W2, W31
	099 Move W3, W31
	100 Call 0x2B88BB0, X0, X1, X2, X3
	101 Move X8, [X20+32]
	102 Move W9, 4
	103 Move [X20+72], W9
	104 Compare X8, 0
	105 JumpIfEqual {251}
	106 Move X0, [X8+64]
	107 Move X1, [X8+40]
	108 Move X9, [X8+24]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move [X19+56], X0
	111 Move X8, 0xC98000
	112 Move X8, [X8+2192]
	113 Move X21, X0
	114 Move X23, [X31+16]
	115 Move X22, [X31+24]
	116 Move W26, [X20+49]
	117 Move X0, [X8]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSET not yet implemented."
	124 Move W0, 8
	125 Move W4, 1
	126 Move X1, X23
	127 Move X2, X22
	128 Move X3, X21
	129 Move X6, X31
	130 Call WebSocketFrameWriter.Write, X0, X1, X2, X3, X4
	131 Move X2, [X19+48]
	132 Move X1, [X19+56]
	133 Move X0, X20
	134 Call WebSocketImplementation.WriteStreamToNetwork, X0, X1, X2
	135 Compare X0, 0
	136 JumpIfEqual {252}
	137 Move X1, X31
	138 Call Task.GetAwaiter, X0
	139 Move [X31+40], X0
	140 Add X0, X31, 40
	141 Move X1, X31
	142 Call TaskAwaiter.get_IsCompleted, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {174}
	147 Move X20, X31
	148 Add X0, X31, 40
	149 Move X1, X31
	150 Call TaskAwaiter.GetResult, X0
	151 Move TEMP, X25
	152 And TEMP, TEMP, -2147483648
	153 Compare TEMP, -2147483648
	154 JumpIfNotEqual {196}
	155 Move X21, [X19+56]
	156 Compare X21, 0
	157 JumpIfEqual {196}
	158 Move X10, 0xC5A000
	159 Move X8, [X21]
	160 Move X10, [X10+3584]
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Move X1, [X10]
	163 Compare X9, 0
	164 JumpIfEqual {171}
	165 Move X10, [X8+176]
	166 Add X10, X10, 8
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Subtract X9, X9, 1
	170 Add X10, X10, 16
	171 Move X0, X21
	172 Move W2, W31
	173 Call 0x1C5D788
	174 Move [X19], W31
	175 Move X8, [X31+40]
	176 Move [X19+64], X8
	177 Move X0, [X24]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X8, 0xC98000
	183 Move X8, [X8+2568]
	184 Add X0, X19, 8
	185 Move X3, [X8]
	186 Add X1, X31, 40
	187 Move X2, X19
	188 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X21
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Compare X20, 0
	197 JumpIfNotEqual {248}
	198 Move X8, [X19+40]
	199 Move [X19+56], X31
	200 Compare X8, 0
	201 JumpIfEqual {250}
	202 Move X9, 0xC98000
	203 Move X9, [X9+2480]
	204 Move W21, [X8+24]
	205 Move W25, [X8+16]
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 Move X23, [X8+40]
	208 Move X0, [X9]
	209 Call 0x1C17F10
	210 Move X20, X0
	211 NotImplemented "Instruction CMP not yet implemented."
	212 NotImplemented "Instruction CSET not yet implemented."
	213 Move W2, 2
	214 Move W1, W21
	215 Move X4, X22
	216 Move X5, X23
	217 Move X6, X31
	218 Call WebSocketReceiveResult..ctor, X0, X1, X2, X3, X4, X5
	219 Move TEMP, 1
	220 Not TEMP
	221 Move W8, TEMP
	222 Move [X19+8], W8
	223 Move X0, [X24]
	224 Move X21, 0xC98000
	225 Move W8, [X0+224]
	226 Move X21, [X21+2416]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X2, [X21]
	231 Move X0, X19
	232 Move X1, X20
	233 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	234 Move X20, [X31+96]
	235 Move X19, [X31+104]
	236 Move X22, [X31+80]
	237 Move X21, [X31+88]
	238 Move X24, [X31+64]
	239 Move X23, [X31+72]
	240 Move X26, [X31+48]
	241 Move X25, [X31+56]
	242 Move X30, [X31+32]
	243 Add X31, X31, 112
	244 Return 
	245 Call 0x1C17F20
	246 Call 0x1C17F20
	247 Call 0x1C17F20
	248 Move X0, X20
	249 Call 0x1C17F18
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Move X21, X1
	254 Move X20, X0
	255 Move W25, W31
	256 Move X21, X1
	257 Move X20, X0
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X0, X20
	260 Call 0x3EB2AD0
	261 Move X8, [X0]
	262 Move [X31+8], X8
	263 Call 0x3EB2AE0
	264 Move X20, [X31+8]
	265 Move TEMP, X25
	266 And TEMP, TEMP, -2147483648
	267 Compare TEMP, -2147483648
	268 JumpIfNotEqual {196}
	269 Move [X31+8], X31
	270 Move TEMP, X25
	271 And TEMP, TEMP, -2147483648
	272 Compare TEMP, -2147483648
	273 JumpIfNotEqual {300}
	274 Move X22, [X19+56]
	275 Compare X22, 0
	276 JumpIfEqual {300}
	277 Move X10, 0xC5A000
	278 Move X8, [X22]
	279 Move X10, [X10+3584]
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Move X1, [X10]
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move X0, X22
	291 Move W2, W31
	292 Call 0x1C5D788
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Add X8, X8, X9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X1, [X0+8]
	298 Move X0, X22
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Move X8, [X31+8]
	301 Compare X8, 0
	302 JumpIfEqual {313}
	303 Move X0, [X31+8]
	304 Call 0x1C17F18
	305 Move X21, X1
	306 Move X20, X0
	307 Move TEMP, X25
	308 And TEMP, TEMP, -2147483648
	309 Compare TEMP, -2147483648
	310 JumpIfNotEqual {300}
	311 Move X21, X1
	312 Move X20, X0
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X0, X20
	315 Call 0x3EB2AD0
	316 Move X20, X0
	317 Move X0, 0xC5A000
	318 Move X0, [X0+2000]
	319 Call 0x1C17D08
	320 Move X8, [X20]
	321 Move X1, [X8]
	322 Call 0x1C18270
	323 Move TEMP, X0
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfNotEqual {347}
	327 Move X20, [X20]
	328 Call 0x3EB2AE0
	329 Move TEMP, 1
	330 Not TEMP
	331 Move W8, TEMP
	332 Move [X19+8], W8
	333 Move X0, 0xC98000
	334 Move X0, [X0+2232]
	335 Call 0x1C17D08
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move X0, 0xC98000
	341 Move X0, [X0+2552]
	342 Call 0x1C17D08
	343 Move X2, X0
	344 Move X0, X19
	345 Move X1, X20
	346 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	347 Move W0, 8
	348 Call 0x3EB2AF0
	349 Move X8, [X20]
	350 Move [X0], X8
	351 Move X1, 0xA1B000
	352 Add X1, X1, 3672
	353 Move X2, X31
	354 Call 0x3EB2B00
	355 Move X20, X0
	356 Call 0x3EB2AE0
	357 Move X0, X20
	358 Call 0x1D2D690
	359 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0349A7C0 ADD X10, X10, 0x10
	0x0349A7C4 B.NE 0x349A7B0
	0x0349A7C8 MOV X0, X22
	0x0349A7CC MOV W2, W31
	0x0349A7D0 BL 0x1C5C788
	0x0349A7D4 B 0x349A8F4
	0x0349A7D8 ADRP X23, 0xC59000
	0x0349A7DC LDR X23, [X23 + 0x758]
	0x0349A7E0 MOVZ W8, 0x7D
	0x0349A7E4 STR W8, [X31 + 0xC]
	0x0349A7E8 LDR X0, [X23]
	0x0349A7EC ADD X1, X31, 0xC
	0x0349A7F0 BL 0x1C16E04
	0x0349A7F4 MOV X21, X0
	0x0349A7F8 LDR X0, [X22]
	0x0349A7FC LDR W8, [X0 + 0xE0]
	0x0349A800 CBNZ W8, 0x349A808
	0x0349A804 BL 0x1C16DFC
	0x0349A808 LDR W8, [X19 + 0x2C]
	0x0349A80C LDR X0, [X23]
	0x0349A810 STR W8, [X31 + 0x8]
	0x0349A814 ADD X1, X31, 0x8
	0x0349A818 BL 0x1C16E04
	0x0349A81C ADRP X8, 0xC97000
	0x0349A820 LDR X8, [X8 + 0xA40]
	0x0349A824 MOV X2, X0
	0x0349A828 LDR X0, [X8]
	0x0349A82C MOV X1, X21
	0x0349A830 MOV X3, X31
	0x0349A834 BL 0x3227BD4
	0x0349A838 ADRP X8, 0xC59000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF44000
	007 Move X21, 0xC98000
	008 Move W8, [X22+2435]
	009 Move X21, [X21+2232]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC98000
	017 Move X0, [X0+2560]
	018 Call 0x1C17CF4
	019 Move X0, 0xC98000
	020 Move X0, [X0+2232]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2435], W8
	024 Move X0, [X21]
	025 Move X21, 0xC98000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2560]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

