Type: Nakama.Ninja.WebSockets.Internal.WebSocketFrameReader/<ReadFromCursorAsync>d__1

Method: System.Void MoveNext()

Disassembly:
	0x03495E60 MOV X19, X3
	0x03495E64 MOV X21, X2
	0x03495E68 MOV X22, X1
	0x03495E6C MOV X20, X0
	0x03495E70 TBNZ X8, 0x0, 0x3495EAC
	0x03495E74 ADRP X0, 0xC9C000
	0x03495E78 LDR X0, [X0 + 0x8C0]
	0x03495E7C BL 0x1C16CF4
	0x03495E80 ADRP X0, 0xC9C000
	0x03495E84 LDR X0, [X0 + 0x8C8]
	0x03495E88 BL 0x1C16CF4
	0x03495E8C ADRP X0, 0xC9C000
	0x03495E90 LDR X0, [X0 + 0x8D0]
	0x03495E94 BL 0x1C16CF4
	0x03495E98 ADRP X0, 0xC9C000
	0x03495E9C LDR X0, [X0 + 0x8B8]
	0x03495EA0 BL 0x1C16CF4
	0x03495EA4 MOVZ W8, 0x1
	0x03495EA8 STRB W8, [X24 + 0x96E]
	0x03495EAC ADRP X26, 0xC9C000
	0x03495EB0 ADRP X25, 0xC9C000
	0x03495EB4 ADRP X24, 0xC9C000
	0x03495EB8 LDR X26, [X26 + 0x8C0]
	0x03495EBC LDR X25, [X25 + 0x8C8]
	0x03495EC0 LDR X24, [X24 + 0x8D0]
	0x03495EC4 ADD X0, X31, 0x8
	0x03495EC8 MOVZ W2, 0x88
	0x03495ECC MOV W1, W31
	0x03495ED0 ADD X27, X31, 0x8
	0x03495ED4 BL 0x3EB1B10
	0x03495ED8 LDR X0, [X23]
	0x03495EDC LDR W8, [X0 + 0xE0]
	0x03495EE0 CBNZ W8, 0x3495EE8
	0x03495EE4 BL 0x1C16DFC
	0x03495EE8 LDR X0, [X26]
	0x03495EEC ADD X23, X27, 0x8
	0x03495EF0 MOV X8, X23
	0x03495EF4 BL 0x263221C
	0x03495EF8 LDR X2, [X25]
	0x03495EFC MOVN W8, 0x0
	0x03495F00 ADD X1, X31, 0x8
	0x03495F04 MOV X0, X23
	0x03495F08 STP X22, X21, [X31 + 0x38]
	0x03495F0C STP X20, X19, [X31 + 0x28]
	0x03495F10 STR W8, [X31 + 0x8]
	0x03495F14 BL 0x1FD2614
	0x03495F18 LDR X1, [X24]
	0x03495F1C MOV X0, X23
	0x03495F20 BL 0x2632230
	0x03495F24 LDP X20, X19, [X31 + 0xD0]
	0x03495F28 LDP X22, X21, [X31 + 0xC0]
	0x03495F2C LDP X24, X23, [X31 + 0xB0]
	0x03495F30 LDP X26, X25, [X31 + 0xA0]
	0x03495F34 LDP X30, X27, [X31 + 0x90]
	0x03495F38 ADD X31, X31, 0xE0
	0x03495F3C RET
	0x03495F40 SUB X31, X31, 0xD0
	0x03495F44 STR X30, [X31 + 0x80]
	0x03495F48 STP X26, X25, [X31 + 0x90]
	0x03495F4C STP X24, X23, [X31 + 0xA0]
	0x03495F50 STP X22, X21, [X31 + 0xB0]
	0x03495F54 STP X20, X19, [X31 + 0xC0]
	0x03495F58 ADRP X26, 0xF48000
	0x03495F5C ADRP X25, 0xC61000
	0x03495F60 LDRB W8, [X26 + 0x96F]
	0x03495F64 LDR X25, [X25 + 0x280]
	0x03495F68 MOV X20, X5
	0x03495F6C MOV W24, W4
	0x03495F70 MOV W21, W3
	0x03495F74 MOV X22, X2
	0x03495F78 MOV X23, X1
	0x03495F7C MOV X19, X0
	0x03495F80 TBNZ X8, 0x0, 0x3495FA4
	0x03495F84 ADRP X0, 0xC9C000
	0x03495F88 LDR X0, [X0 + 0x8D8]
	0x03495F8C BL 0x1C16CF4
	0x03495F90 ADRP X0, 0xC61000
	0x03495F94 LDR X0, [X0 + 0x280]
	0x03495F98 BL 0x1C16CF4
	0x03495F9C MOVZ W8, 0x1
	0x03495FA0 STRB W8, [X26 + 0x96F]
	0x03495FA4 LDR X0, [X25]
	0x03495FA8 MOVI V0.2D, 0x0
	0x03495FAC STP V0, V0, [X31 + 0x60]
	0x03495FB0 STP V0, V0, [X31 + 0x40]
	0x03495FB4 STP V0, V0, [X31 + 0x20]
	0x03495FB8 ADRP X25, 0xC9C000
	0x03495FBC LDR W8, [X0 + 0xE0]
	0x03495FC0 LDR X25, [X25 + 0x8D8]
	0x03495FC4 CBNZ W8, 0x3495FCC
	0x03495FC8 BL 0x1C16DFC
	0x03495FCC ADD X8, X31, 0x8
	0x03495FD0 MOV X0, X31
	0x03495FD4 AND W24, W24, 0x1
	0x03495FD8 BL 0x32C4770
	0x03495FDC LDUR V0, [X31 + 0x8]
	0x03495FE0 LDR X9, [X31 + 0x18]
	0x03495FE4 LDR X2, [X25]
	0x03495FE8 ADD X8, X31, 0x20
	0x03495FEC STR X20, [X31 + 0x68]
	0x03495FF0 ORR X20, X8, 0xF
	0x03495FF4 MOVN W10, 0x0
	0x03495FF8 ADD X1, X31, 0x20
	0x03495FFC MOV X0, X20
	0x03496000 STP X23, X22, [X31 + 0x50]
	0x03496004 STR W21, [X31 + 0x48]
	0x03496008 STRB W24, [X31 + 0x60]
	0x0349600C STUR V0, [X31 + 0x28]
	0x03496010 STP X9, X19, [X31 + 0x38]
	0x03496014 STR W10, [X31 + 0x20]
	0x03496018 BL 0x21972B8
	0x0349601C MOV X0, X20
	0x03496020 MOV X1, X31
	0x03496024 BL 0x32C47F8
	0x03496028 LDP X20, X19, [X31 + 0xC0]
	0x0349602C LDP X22, X21, [X31 + 0xB0]
	0x03496030 LDP X24, X23, [X31 + 0xA0]
	0x03496034 LDP X26, X25, [X31 + 0x90]
	0x03496038 LDR X30, [X31 + 0x80]
	0x0349603C ADD X31, X31, 0xD0
	0x03496040 RET
	0x03496044 SUB X31, X31, 0xB0
	0x03496048 STR X30, [X31 + 0x70]
	0x0349604C STP X24, X23, [X31 + 0x80]
	0x03496050 STP X22, X21, [X31 + 0x90]
	0x03496054 STP X20, X19, [X31 + 0xA0]
	0x03496058 ADRP X24, 0xF47000
	0x0349605C ADRP X23, 0xC60000
	0x03496060 LDRB W8, [X24 + 0x970]
	0x03496064 LDR X23, [X23 + 0x280]
	0x03496068 MOV X20, X3
	0x0349606C MOV X21, X2
	0x03496070 MOV X19, X1
	0x03496074 MOV X22, X0
	0x03496078 TBNZ X8, 0x0, 0x349609C
	0x0349607C ADRP X0, 0xC9B000
	0x03496080 LDR X0, [X0 + 0x8E0]
	0x03496084 BL 0x1C16CF4
	0x03496088 ADRP X0, 0xC60000
	0x0349608C LDR X0, [X0 + 0x280]
	0x03496090 BL 0x1C16CF4
	0x03496094 MOVZ W8, 0x1
	0x03496098 STRB W8, [X24 + 0x970]
	0x0349609C LDR X0, [X23]
	0x034960A0 MOVI V0.2D, 0x0
	0x034960A4 STP V0, V0, [X31 + 0x50]
	0x034960A8 STP V0, V0, [X31 + 0x30]
	0x034960AC STR V0, [X31 + 0x2]
	0x034960B0 ADRP X23, 0xC9B000
	0x034960B4 LDR W8, [X0 + 0xE0]
	0x034960B8 LDR X23, [X23 + 0x8E0]
	0x034960BC CBNZ W8, 0x34960C4
	0x034960C0 BL 0x1C16DFC
	0x034960C4 ADD X8, X31, 0x8
	0x034960C8 MOV X0, X31
	0x034960CC BL 0x32C4770
	0x034960D0 LDUR V0, [X31 + 0x8]
	0x034960D4 LDR X9, [X31 + 0x18]
	0x034960D8 LDR X2, [X23]
	0x034960DC ADD X8, X31, 0x20
	0x034960E0 STR X20, [X31 + 0x58]
	0x034960E4 ORR X20, X8, 0xF
	0x034960E8 MOVN W10, 0x0
	0x034960EC ADD X1, X31, 0x20
	0x034960F0 MOV X0, X20
	0x034960F4 STP X21, X22, [X31 + 0x48]
	0x034960F8 STUR V0, [X31 + 0x28]
	0x034960FC STP X9, X19, [X31 + 0x38]
	0x03496100 STR W10, [X31 + 0x20]
	0x03496104 BL 0x21973B8
	0x03496108 MOV X0, X20
	0x0349610C MOV X1, X31
	0x03496110 BL 0x32C47F8
	0x03496114 LDP X20, X19, [X31 + 0xA0]
	0x03496118 LDP X22, X21, [X31 + 0x90]
	0x0349611C LDP X24, X23, [X31 + 0x80]
	0x03496120 LDR X30, [X31 + 0x70]
	0x03496124 ADD X31, X31, 0xB0
	0x03496128 RET
	0x0349612C STR X30, [X31 - 0x10]!
	0x03496130 MOV X8, X0
	0x03496134 LDR X0, [X0 + 0x40]
	0x03496138 MOVZ W9, 0x6
	0x0349613C STR W9, [X8 + 0x48]
	0x03496140 CBZ X0, 0x3496150
	0x03496144 MOV X1, X31
	0x03496148 LDR X30, [X31], #0x10
	0x0349614C B 0x33DFCF8
	0x03496150 BL 0x1C16F20
	0x03496154 SUB X31, X31, 0xB0
	0x03496158 STR X30, [X31 + 0x70]
	0x0349615C STP X24, X23, [X31 + 0x80]
	0x03496160 STP X22, X21, [X31 + 0x90]
	0x03496164 STP X20, X19, [X31 + 0xA0]
	0x03496168 ADRP X24, 0xF47000
	0x0349616C ADRP X23, 0xC60000
	0x03496170 LDRB W8, [X24 + 0x971]
	0x03496174 LDR X23, [X23 + 0x280]
	0x03496178 MOV X20, X3
	0x0349617C MOV X21, X2
	0x03496180 MOV W22, W1
	0x03496184 MOV X19, X0
	0x03496188 TBNZ X8, 0x0, 0x34961AC
	0x0349618C ADRP X0, 0xC9B000
	0x03496190 LDR X0, [X0 + 0x8E8]
	0x03496194 BL 0x1C16CF4
	0x03496198 ADRP X0, 0xC60000
	0x0349619C LDR X0, [X0 + 0x280]
	0x034961A0 BL 0x1C16CF4
	0x034961A4 MOVZ W8, 0x1
	0x034961A8 STRB W8, [X24 + 0x971]
	0x034961AC LDR X0, [X23]
	0x034961B0 MOVI V0.2D, 0x0
	0x034961B4 STP V0, V0, [X31 + 0x50]
	0x034961B8 STP V0, V0, [X31 + 0x30]
	0x034961BC STR V0, [X31 + 0x2]
	0x034961C0 ADRP X23, 0xC9B000
	0x034961C4 LDR W8, [X0 + 0xE0]
	0x034961C8 LDR X23, [X23 + 0x8E8]
	0x034961CC CBNZ W8, 0x34961D4
	0x034961D0 BL 0x1C16DFC
	0x034961D4 ADD X8, X31, 0x8
	0x034961D8 MOV X0, X31
	0x034961DC BL 0x32C4770

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xF49000
	010 Move W8, [X20+2405]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0xC8A000
	017 Move X0, [X0+2952]
	018 Call 0x1C17CF4
	019 Move X0, 0xC92000
	020 Move X0, [X0+3312]
	021 Call 0x1C17CF4
	022 Move X0, 0xC92000
	023 Move X0, [X0+3320]
	024 Call 0x1C17CF4
	025 Move X0, 0xC92000
	026 Move X0, [X0+3328]
	027 Call 0x1C17CF4
	028 Move X0, 0xC87000
	029 Move X0, [X0+1456]
	030 Call 0x1C17CF4
	031 Move X0, 0xC9D000
	032 Move X0, [X0+2080]
	033 Call 0x1C17CF4
	034 Move X0, 0xC9D000
	035 Move X0, [X0+1992]
	036 Call 0x1C17CF4
	037 Move X0, 0xC9D000
	038 Move X0, [X0+1888]
	039 Call 0x1C17CF4
	040 Move X0, 0xC9D000
	041 Move X0, [X0+2024]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2405], W8
	045 Move [X31+24], X31
	046 Move [X31], X31
	047 Move [X31+8], X31
	048 Move X21, 0xC87000
	049 Move X23, 0xC9D000
	050 Move W8, [X19]
	051 Move X21, [X21+1456]
	052 Move X23, [X23+1888]
	053 Compare W8, 0
	054 JumpIfEqual {106}
	055 Move X8, [X19+32]
	056 Compare X8, 0
	057 JumpIfEqual {194}
	058 Move X9, [X8+16]
	059 Move [X19+72], X9
	060 Move X0, [X21]
	061 Move W20, [X8+28]
	062 Move W9, [X0+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move W8, [X19+52]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add W9, W8, 3
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 And W20, W8, 0xFFFFFFFC
	072 Move X1, [X19+56]
	073 Move X4, [X19+64]
	074 Move X2, [X19+40]
	075 Move X3, [X19+48]
	076 Move [X19+80], W20
	077 Move W0, W20
	078 Call BinaryReaderWriter.ReadExactly, X0, X1, X2, X3
	079 Compare X0, 0
	080 JumpIfEqual {195}
	081 Move X1, X31
	082 Call Task.GetAwaiter, X0
	083 Move [X31+24], X0
	084 Add X0, X31, 24
	085 Move X1, X31
	086 Call TaskAwaiter.get_IsCompleted, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {113}
	091 Move [X19], W31
	092 Move X8, [X31+24]
	093 Move [X19+88], X8
	094 Move X0, [X23]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X8, 0xC9D000
	100 Move X8, [X8+2080]
	101 Add X0, X19, 8
	102 Move X3, [X8]
	103 Add X1, X31, 24
	104 Move X2, X19
	105 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	106 Move X8, [X19+88]
	107 Move TEMP, 0
	108 Not TEMP
	109 Move W9, TEMP
	110 Move [X31+24], X8
	111 Move [X19+88], X31
	112 Move [X19], W9
	113 Add X0, X31, 24
	114 Move X1, X31
	115 Call TaskAwaiter.GetResult, X0
	116 Move X8, [X19+72]
	117 Compare X8, 0
	118 JumpIfEqual {192}
	119 Move X0, [X21]
	120 Move X20, [X8+56]
	121 Move W9, [X0+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X8, X20
	126 ShiftRight X8, 32
	127 And X8, X8, 0x7FFFFFFF
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, [X21]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X8, 0xC89000
	135 Move X1, [X19+40]
	136 Move W2, [X19+48]
	137 Move W3, [X19+80]
	138 Move X8, [X8+2952]
	139 Move X4, [X8]
	140 Add X0, X31, 0
	141 Call 0x2B88BB0, X0, X1, X2, X3
	142 Move X8, [X19+72]
	143 Compare X8, 0
	144 JumpIfEqual {196}
	145 Move X0, [X8+48]
	146 Move X1, [X8+56]
	147 Move X2, [X31]
	148 Move X3, [X31+8]
	149 Call WebSocketFrameCommon.ToggleMask, X0, X1
	150 Move X8, [X19+32]
	151 Compare X8, 0
	152 JumpIfEqual {193}
	153 Move X9, 0xC9C000
	154 Move X9, [X9+2024]
	155 Move X21, [X19+72]
	156 Move W22, [X19+80]
	157 Move W24, [X8+28]
	158 Move X0, [X9]
	159 Call 0x1C17F10
	160 Move X20, X0
	161 Subtract W3, W24, W22
	162 Move X1, X21
	163 Move W2, W22
	164 Move X4, X31
	165 Call WebSocketReadCursor..ctor, X0, X1, X2, X3
	166 Move TEMP, 1
	167 Not TEMP
	168 Move W8, TEMP
	169 Move [X19], W8
	170 Move [X19+72], X31
	171 Move X0, [X23]
	172 Move X21, 0xC9C000
	173 Add X19, X19, 8
	174 Move W8, [X0+224]
	175 Move X21, [X21+1992]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X2, [X21]
	180 Move X0, X19
	181 Move X1, X20
	182 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	183 Move X20, [X31+64]
	184 Move X19, [X31+72]
	185 Move X22, [X31+48]
	186 Move X21, [X31+56]
	187 Move X24, [X31+32]
	188 Move X23, [X31+40]
	189 Move X30, [X31+16]
	190 Add X31, X31, 80
	191 Return 
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Call 0x1C17F20
	195 Call 0x1C17F20
	196 Call 0x1C17F20
	197 Move X20, X0
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X0, X20
	200 Call 0x3EB2AD0
	201 Move X20, X0
	202 Move X0, 0xC5E000
	203 Move X0, [X0+2000]
	204 Call 0x1C17D08
	205 Move X8, [X20]
	206 Move X1, [X8]
	207 Call 0x1C18270
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {233}
	212 Move X20, [X20]
	213 Call 0x3EB2AE0
	214 Move TEMP, 1
	215 Not TEMP
	216 Move W8, TEMP
	217 Move [X19+72], X31
	218 Move [X19+8], W8
	219 Move X0, 0xC9C000
	220 Move X0, [X0+1888]
	221 Call 0x1C17D08
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, 0xC9C000
	227 Move X0, [X0+2064]
	228 Call 0x1C17D08
	229 Move X2, X0
	230 Move X0, X19
	231 Move X1, X20
	232 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	233 Move W0, 8
	234 Call 0x3EB2AF0
	235 Move X8, [X20]
	236 Move [X0], X8
	237 Move X1, 0xA1F000
	238 Add X1, X1, 3672
	239 Move X2, X31
	240 Call 0x3EB2B00
	241 Move X20, X0
	242 Call 0x3EB2AE0
	243 Move X0, X20
	244 Call 0x1D2D690
	245 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034961E0 LDUR V0, [X31 + 0x8]
	0x034961E4 LDR X9, [X31 + 0x18]
	0x034961E8 LDR X2, [X23]
	0x034961EC ADD X8, X31, 0x20
	0x034961F0 STP X21, X20, [X31 + 0x50]
	0x034961F4 ORR X20, X8, 0xF
	0x034961F8 MOVN W10, 0x0
	0x034961FC ADD X1, X31, 0x20
	0x03496200 MOV X0, X20
	0x03496204 STR W22, [X31 + 0x48]
	0x03496208 STUR V0, [X31 + 0x28]
	0x0349620C STP X9, X19, [X31 + 0x38]
	0x03496210 STR W10, [X31 + 0x20]
	0x03496214 BL 0x2196FB8
	0x03496218 MOV X0, X20
	0x0349621C MOV X1, X31
	0x03496220 BL 0x32C47F8
	0x03496224 LDP X20, X19, [X31 + 0xA0]
	0x03496228 LDP X22, X21, [X31 + 0x90]
	0x0349622C LDP X24, X23, [X31 + 0x80]
	0x03496230 LDR X30, [X31 + 0x70]
	0x03496234 ADD X31, X31, 0xB0
	0x03496238 RET
	0x0349623C SUB X31, X31, 0xC0
	0x03496240 STR X30, [X31 + 0x80]
	0x03496244 STP X24, X23, [X31 + 0x90]
	0x03496248 STP X22, X21, [X31 + 0xA0]
	0x0349624C STP X20, X19, [X31 + 0xB0]
	0x03496250 ADRP X24, 0xF47000
	0x03496254 ADRP X23, 0xC60000
	0x03496258 LDRB W8, [X24 + 0x972]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF48000
	007 Move X21, 0xC9C000
	008 Move W8, [X22+2406]
	009 Move X21, [X21+1888]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC9C000
	017 Move X0, [X0+2072]
	018 Call 0x1C17CF4
	019 Move X0, 0xC9C000
	020 Move X0, [X0+1888]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2406], W8
	024 Move X0, [X21]
	025 Move X21, 0xC9C000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2072]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

