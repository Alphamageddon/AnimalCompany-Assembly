Type: Nakama.Ninja.WebSockets.Internal.WebSocketImplementation/<CloseOutputAutoTimeoutAsync>d__48

Method: System.Void MoveNext()

Disassembly:
	0x03498574 B.NE 0x3498AB8
	0x03498578 CBZ X21, 0x3498ADC
	0x0349857C ADRP X8, 0xC99000
	0x03498580 LDR X8, [X8 + 0x9E8]
	0x03498584 LDR X2, [X8]
	0x03498588 MOVZ W1, 0x3EF
	0x0349858C MOV X0, X21
	0x03498590 BL 0x3496B90
	0x03498594 CBZ X0, 0x3498AF0
	0x03498598 MOV X1, X31
	0x0349859C BL 0x33ED394
	0x034985A0 STR X0, [X31 + 0x50]
	0x034985A4 ADD X0, X31, 0x50
	0x034985A8 MOV X1, X31
	0x034985AC BL 0x32C3A80
	0x034985B0 TBNZ X0, 0x0, 0x3497CA8
	0x034985B4 MOVZ W8, 0x4
	0x034985B8 STR W8, [X19]
	0x034985BC LDR X8, [X31 + 0x50]
	0x034985C0 STR X8, [X19 + 0x70]
	0x034985C4 LDR X0, [X26]
	0x034985C8 LDR W8, [X0 + 0xE0]
	0x034985CC CBNZ W8, 0x34985D4
	0x034985D0 BL 0x1C16DFC
	0x034985D4 ADRP X8, 0xC99000
	0x034985D8 LDR X8, [X8 + 0x968]
	0x034985DC ADD X0, X19, 0x8
	0x034985E0 LDR X3, [X8]
	0x034985E4 ADD X1, X31, 0x50
	0x034985E8 MOV X2, X19
	0x034985EC BL 0x1FC6160
	0x034985F0 B 0x3497BDC
	0x034985F4 LDR X3, [X19 + 0x58]
	0x034985F8 CBZ X3, 0x3498630
	0x034985FC ADRP X9, 0xC63000
	0x03498600 LDR X9, [X9 + 0x8A8]
	0x03498604 LDR X8, [X3]
	0x03498608 LDR X1, [X9]
	0x0349860C LDRB W10, [X8 + 0x130]
	0x03498610 LDRB W9, [X1 + 0x130]
	0x03498614 CMP W10, W9
	0x03498618 B.CC 0x3498AC0
	0x0349861C LDR X8, [X8 + 0xC8]
	0x03498620 ADD X8, X8, X9, 0x3, LSL
	0x03498624 LDUR X8, [X8 - 0x8]
	0x03498628 CMP X8, X1
	0x0349862C B.NE 0x3498AC0
	0x03498630 CBZ X21, 0x3498AE0
	0x03498634 ADRP X8, 0xC99000
	0x03498638 LDR X8, [X8 + 0x9E0]
	0x0349863C LDR X2, [X8]
	0x03498640 MOVZ W1, 0x3E9
	0x03498644 MOV X0, X21
	0x03498648 BL 0x3496B90
	0x0349864C CBZ X0, 0x3498AF4
	0x03498650 MOV X1, X31
	0x03498654 BL 0x33ED394
	0x03498658 STR X0, [X31 + 0x50]
	0x0349865C ADD X0, X31, 0x50
	0x03498660 MOV X1, X31
	0x03498664 BL 0x32C3A80
	0x03498668 TBNZ X0, 0x0, 0x3497E48
	0x0349866C MOVZ W8, 0x5
	0x03498670 STR W8, [X19]
	0x03498674 LDR X8, [X31 + 0x50]
	0x03498678 STR X8, [X19 + 0x70]
	0x0349867C LDR X0, [X26]
	0x03498680 LDR W8, [X0 + 0xE0]
	0x03498684 CBNZ W8, 0x349868C
	0x03498688 BL 0x1C16DFC
	0x0349868C ADRP X8, 0xC99000
	0x03498690 LDR X8, [X8 + 0x968]
	0x03498694 ADD X0, X19, 0x8
	0x03498698 LDR X3, [X8]
	0x0349869C ADD X1, X31, 0x50
	0x034986A0 MOV X2, X19
	0x034986A4 BL 0x1FC6160
	0x034986A8 B 0x3497BDC
	0x034986AC LDR X3, [X19 + 0x58]
	0x034986B0 CBZ X3, 0x34986E8
	0x034986B4 ADRP X9, 0xC63000
	0x034986B8 LDR X9, [X9 + 0x760]
	0x034986BC LDR X8, [X3]
	0x034986C0 LDR X1, [X9]
	0x034986C4 LDRB W10, [X8 + 0x130]
	0x034986C8 LDRB W9, [X1 + 0x130]
	0x034986CC CMP W10, W9
	0x034986D0 B.CC 0x3498AD0
	0x034986D4 LDR X8, [X8 + 0xC8]
	0x034986D8 ADD X8, X8, X9, 0x3, LSL
	0x034986DC LDUR X8, [X8 - 0x8]
	0x034986E0 CMP X8, X1
	0x034986E4 B.NE 0x3498AD0
	0x034986E8 CBZ X21, 0x3498AE8
	0x034986EC ADRP X8, 0xC99000
	0x034986F0 LDR X8, [X8 + 0x9D0]
	0x034986F4 LDR X2, [X8]
	0x034986F8 MOVZ W1, 0x3EA
	0x034986FC MOV X0, X21
	0x03498700 BL 0x3496B90
	0x03498704 CBZ X0, 0x3498AFC
	0x03498708 MOV X1, X31
	0x0349870C BL 0x33ED394
	0x03498710 STR X0, [X31 + 0x50]
	0x03498714 ADD X0, X31, 0x50
	0x03498718 MOV X1, X31
	0x0349871C BL 0x32C3A80
	0x03498720 TBNZ X0, 0x0, 0x3497D88
	0x03498724 MOVZ W8, 0x3
	0x03498728 STR W8, [X19]
	0x0349872C LDR X8, [X31 + 0x50]
	0x03498730 STR X8, [X19 + 0x70]
	0x03498734 LDR X0, [X26]
	0x03498738 LDR W8, [X0 + 0xE0]
	0x0349873C CBNZ W8, 0x3498744
	0x03498740 BL 0x1C16DFC
	0x03498744 ADRP X8, 0xC99000
	0x03498748 LDR X8, [X8 + 0x968]
	0x0349874C ADD X0, X19, 0x8
	0x03498750 LDR X3, [X8]
	0x03498754 ADD X1, X31, 0x50
	0x03498758 MOV X2, X19
	0x0349875C BL 0x1FC6160
	0x03498760 B 0x3497BDC
	0x03498764 CBZ X0, 0x3498B00
	0x03498768 MOV X1, X31
	0x0349876C BL 0x33DFA08
	0x03498770 MOV X3, X0
	0x03498774 MOV X0, X22
	0x03498778 MOV X1, X23
	0x0349877C MOV X2, X24
	0x03498780 MOV X4, X31
	0x03498784 BL 0x3493FF0
	0x03498788 CBZ X0, 0x3498B04
	0x0349878C ADRP X8, 0xC99000
	0x03498790 LDR X8, [X8 + 0x9A0]
	0x03498794 LDR X1, [X8]
	0x03498798 BL 0x269F5D0
	0x0349879C ADRP X8, 0xC99000
	0x034987A0 LDR X8, [X8 + 0x998]
	0x034987A4 STR X0, [X31 + 0x58]
	0x034987A8 LDR X1, [X8]
	0x034987AC ADD X0, X31, 0x58
	0x034987B0 BL 0x2677430
	0x034987B4 TBNZ X0, 0x0, 0x3497E10
	0x034987B8 MOVZ W8, 0x1
	0x034987BC STR W8, [X19]
	0x034987C0 LDR X8, [X31 + 0x58]
	0x034987C4 STR X8, [X19 + 0x68]
	0x034987C8 LDR X0, [X26]
	0x034987CC LDR W8, [X0 + 0xE0]
	0x034987D0 CBNZ W8, 0x34987D8
	0x034987D4 BL 0x1C16DFC
	0x034987D8 ADRP X8, 0xC99000
	0x034987DC LDR X8, [X8 + 0x958]
	0x034987E0 ADD X0, X19, 0x8
	0x034987E4 LDR X3, [X8]
	0x034987E8 ADD X1, X31, 0x58
	0x034987EC MOV X2, X19
	0x034987F0 BL 0x1FC420C
	0x034987F4 B 0x3497BDC
	0x034987F8 CBZ X21, 0x3498B08
	0x034987FC MOVZ W8, 0x1
	0x03498800 STR W8, [X21 + 0x5C]
	0x03498804 LDR X8, [X21 + 0x60]
	0x03498808 CBZ X8, 0x3498A74
	0x0349880C LDR W24, [X8 + 0x18]
	0x03498810 ADRP X8, 0xC99000
	0x03498814 LDR X8, [X8 + 0x9B0]
	0x03498818 LDR X0, [X8]
	0x0349881C BL 0x1C16F10
	0x03498820 MOV X23, X0
	0x03498824 MOVZ W2, 0x1
	0x03498828 MOV W1, W24
	0x0349882C MOV W3, W22
	0x03498830 MOV X4, X31
	0x03498834 BL 0x36D3A1C
	0x03498838 B 0x3498878
	0x0349883C CBZ X21, 0x3498B0C
	0x03498840 STR W31, [X21 + 0x5C]
	0x03498844 LDR X8, [X21 + 0x60]
	0x03498848 CBZ X8, 0x3498A7C
	0x0349884C LDR W24, [X8 + 0x18]
	0x03498850 ADRP X8, 0xC99000
	0x03498854 LDR X8, [X8 + 0x9B0]
	0x03498858 LDR X0, [X8]
	0x0349885C BL 0x1C16F10
	0x03498860 MOV X23, X0
	0x03498864 MOV W1, W24
	0x03498868 MOV W2, W31
	0x0349886C MOV W3, W22
	0x03498870 MOV X4, X31
	0x03498874 BL 0x36D3A1C
	0x03498878 MOV X22, X31
	0x0349887C MOVZ W24, 0x43
	0x03498880 MOV X20, X23
	0x03498884 TBZ X29, 0x1F, 0x34988F0
	0x03498888 LDR X23, [X19 + 0x48]
	0x0349888C CBZ X23, 0x34988F0
	0x03498890 ADRP X10, 0xC5B000
	0x03498894 LDR X8, [X23]
	0x03498898 LDR X10, [X10 + 0xE00]
	0x0349889C LDRH W9, [X8 + 0x12E]
	0x034988A0 LDR X1, [X10]
	0x034988A4 CBZ X9, 0x34988C8
	0x034988A8 LDR X10, [X8 + 0xB0]
	0x034988AC ADD X10, X10, 0x8
	0x034988B0 LDUR X11, [X10 - 0x8]
	0x034988B4 CMP X11, X1
	0x034988B8 B.EQ 0x34988D8
	0x034988BC SUBS X9, X9, 0x1
	0x034988C0 ADD X10, X10, 0x10
	0x034988C4 B.NE 0x34988B0
	0x034988C8 MOV X0, X23
	0x034988CC MOV W2, W31
	0x034988D0 BL 0x1C5C788
	0x034988D4 B 0x34988E4
	0x034988D8 LDRSW X9, [X10]
	0x034988DC ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF46000
	009 Move W8, [X20+2430]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xC9A000
	016 Move X0, [X0+2384]
	017 Call 0x1C17CF4
	018 Move X0, 0xC5F000
	019 Move X0, [X0+640]
	020 Call 0x1C17CF4
	021 Move X0, 0xC5E000
	022 Move X0, [X0+2640]
	023 Call 0x1C17CF4
	024 Move X0, 0xC5E000
	025 Move X0, [X0+1392]
	026 Call 0x1C17CF4
	027 Move X0, 0xC9A000
	028 Move X0, [X0+856]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2430], W8
	032 Move [X31+8], X31
	033 Move X24, 0xC5F000
	034 Move W8, [X19]
	035 Move X24, [X24+640]
	036 Compare W8, 0
	037 JumpIfEqual {121}
	038 Move X8, 0xC5E000
	039 Move X8, [X8+1392]
	040 Move X20, [X19+32]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move D0, 4.000000000232831
	047 Move X0, X31
	048 Call TimeSpan.FromSeconds, V0
	049 Compare X20, 0
	050 JumpIfEqual {151}
	051 Move W8, [X20+48]
	052 Move X21, X0
	053 Compare W8, 0
	054 JumpIfEqual {71}
	055 Move X0, [X19+48]
	056 Compare X0, 0
	057 JumpIfEqual {154}
	058 Move X8, [X0]
	059 Move X22, [X19+40]
	060 Move X9, [X8+360]
	061 Move X1, [X8+368]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, 0xC9A000
	064 Move X8, [X8+856]
	065 Move X2, X0
	066 Move X1, [X8]
	067 Move X0, X22
	068 Move X3, X31
	069 Call String.Concat, X0, X1, X2
	070 Move [X19+40], X0
	071 Move X8, 0xC5E000
	072 Move X8, [X8+2640]
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 Move X22, X0
	076 Move X1, X21
	077 Move X2, X31
	078 Call CancellationTokenSource..ctor, X0, X1
	079 Compare X22, 0
	080 JumpIfEqual {152}
	081 Move W21, [X19+56]
	082 Move X23, [X19+40]
	083 Move X0, X22
	084 Move X1, X31
	085 Call CancellationTokenSource.get_Token, X0
	086 Move X8, [X20]
	087 Move X3, X0
	088 Move X9, [X8+488]
	089 Move X4, [X8+496]
	090 Move X0, X20
	091 Move W1, W21
	092 Move X2, X23
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Compare X0, 0
	095 JumpIfEqual {153}
	096 Move X1, X31
	097 Call Task.GetAwaiter, X0
	098 Move [X31+8], X0
	099 Add X0, X31, 8
	100 Move X1, X31
	101 Call TaskAwaiter.get_IsCompleted, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {128}
	106 Move [X19], W31
	107 Move X8, [X31+8]
	108 Move [X19+64], X8
	109 Move X0, [X24]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X8, 0xC9A000
	115 Move X8, [X8+2384]
	116 Add X0, X19, 8
	117 Move X3, [X8]
	118 Add X1, X31, 8
	119 Move X2, X19
	120 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	121 Move X8, [X19+64]
	122 Move TEMP, 0
	123 Not TEMP
	124 Move W9, TEMP
	125 Move [X31+8], X8
	126 Move [X19+64], X31
	127 Move [X19], W9
	128 Add X0, X31, 8
	129 Move X1, X31
	130 Call TaskAwaiter.GetResult, X0
	131 Move TEMP, 1
	132 Not TEMP
	133 Move W8, TEMP
	134 Move [X19+8], W8
	135 Move X0, [X24]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move X0, X19
	141 Move X1, X31
	142 Call AsyncTaskMethodBuilder.SetResult, X0
	143 Move X20, [X31+48]
	144 Move X19, [X31+56]
	145 Move X22, [X31+32]
	146 Move X21, [X31+40]
	147 Move X24, [X31+16]
	148 Move X23, [X31+24]
	149 Move X30, [X31+64]
	150 Return 
	151 Call 0x1C17F20
	152 Call 0x1C17F20
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Move X21, X1
	156 Move X20, X0
	157 Move X21, X1
	158 Move X20, X0
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X0, X20
	161 Call 0x3EB2AD0
	162 Move X20, X0
	163 Move X0, 0xC64000
	164 Move X0, [X0+2216]
	165 Call 0x1C17D08
	166 Move X8, [X20]
	167 Move X1, [X8]
	168 Call 0x1C18270
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {183}
	173 Move X0, 0xC62000
	174 Move X0, [X0+3264]
	175 Call 0x1C17D08
	176 Move X8, [X20]
	177 Move X1, [X8]
	178 Call 0x1C18270
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {184}
	183 Call 0x3EB2AE0
	184 Move W0, 8
	185 Call 0x3EB2AF0
	186 Move X8, [X20]
	187 Move [X0], X8
	188 Move X1, 0xA1D000
	189 Add X1, X1, 3672
	190 Move X2, X31
	191 Call 0x3EB2B00
	192 Move X21, X1
	193 Move X20, X0
	194 Call 0x3EB2AE0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X20
	197 Call 0x3EB2AD0
	198 Move X20, X0
	199 Move X0, 0xC5C000
	200 Move X0, [X0+2000]
	201 Call 0x1C17D08
	202 Move X8, [X20]
	203 Move X1, [X8]
	204 Call 0x1C18270
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {226}
	209 Move X20, [X20]
	210 Call 0x3EB2AE0
	211 Move TEMP, 1
	212 Not TEMP
	213 Move W8, TEMP
	214 Move [X19+8], W8
	215 Move X0, 0xC5F000
	216 Move X0, [X0+640]
	217 Call 0x1C17D08
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X0, X19
	223 Move X1, X20
	224 Move X2, X31
	225 Call AsyncTaskMethodBuilder.SetException, X0, X1
	226 Move W0, 8
	227 Call 0x3EB2AF0
	228 Move X8, [X20]
	229 Move [X0], X8
	230 Move X1, 0xA1D000
	231 Add X1, X1, 3672
	232 Move X2, X31
	233 Call 0x3EB2B00
	234 Move X20, X0
	235 Call 0x3EB2AE0
	236 Move X0, X20
	237 Call 0x1D2D690
	238 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034988E0 ADD X0, X8, 0x138
	0x034988E4 LDP X8, X1, [X0]
	0x034988E8 MOV X0, X23
	0x034988EC BLR X8
	0x034988F0 CBNZ X22, 0x3498970
	0x034988F4 CBZ W24, 0x3498900
	0x034988F8 CMP W24, 0x4C
	0x034988FC B.NE 0x3498948
	0x03498900 STR X31, [X19 + 0x48]
	0x03498904 CBNZ X21, 0x3497C14
	0x03498908 BL 0x1C16F20
	0x0349890C STR W31, [X19]
	0x03498910 LDR X8, [X31 + 0x58]
	0x03498914 STR X8, [X19 + 0x68]
	0x03498918 LDR X0, [X26]
	0x0349891C LDR W8, [X0 + 0xE0]
	0x03498920 CBNZ W8, 0x3498928
	0x03498924 BL 0x1C16DFC
	0x03498928 ADRP X8, 0xC99000
	0x0349892C LDR X8, [X8 + 0x958]
	0x03498930 ADD X0, X19, 0x8
	0x03498934 LDR X3, [X8]
	0x03498938 ADD X1, X31, 0x58
	0x0349893C MOV X2, X19
	0x03498940 BL 0x1FC420C
	0x03498944 B 0x3497BDC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF46000
	007 Move X22, 0xC5F000
	008 Move W8, [X21+2431]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC5F000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2431], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

