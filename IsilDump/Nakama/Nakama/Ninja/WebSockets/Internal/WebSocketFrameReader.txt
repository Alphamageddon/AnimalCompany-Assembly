Type: Nakama.Ninja.WebSockets.Internal.WebSocketFrameReader

Method: System.Int32 CalculateNumBytesToRead(System.Int32 numBytesLetfToRead, System.Int32 bufferSize)

Disassembly:
	0x03494EC4 LDR X0, [X0 + 0x820]
	0x03494EC8 BL 0x1C16CF4
	0x03494ECC ADRP X0, 0xC9D000
	0x03494ED0 LDR X0, [X0 + 0x7C8]
	0x03494ED4 BL 0x1C16CF4
	0x03494ED8 ADRP X0, 0xC9D000
	0x03494EDC LDR X0, [X0 + 0x760]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Add W8, W1, 3
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W0, W8, 0xFFFFFFFC
	006 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Ninja.WebSockets.Internal.WebSocketReadCursor> ReadFromCursorAsync(System.IO.Stream fromStream, System.ArraySegment`1<System.Byte> intoBuffer, Nakama.Ninja.WebSockets.Internal.WebSocketReadCursor readCursor, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x03494EE0 BL 0x1C16CF4
	0x03494EE4 ADRP X0, 0xC9D000
	0x03494EE8 LDR X0, [X0 + 0x7E8]
	0x03494EEC BL 0x1C16CF4
	0x03494EF0 MOVZ W8, 0x1
	0x03494EF4 STRB W8, [X20 + 0x965]
	0x03494EF8 STR X31, [X31 + 0x18]
	0x03494EFC STP X31, X31, [X31]
	0x03494F00 ADRP X21, 0xC87000
	0x03494F04 ADRP X23, 0xC9D000
	0x03494F08 LDR W8, [X19]
	0x03494F0C LDR X21, [X21 + 0x5B0]
	0x03494F10 LDR X23, [X23 + 0x760]
	0x03494F14 CBZ W8, 0x3494FC8
	0x03494F18 LDR X8, [X19 + 0x20]
	0x03494F1C CBZ X8, 0x34950E8
	0x03494F20 LDR X9, [X8 + 0x10]
	0x03494F24 STR X9, [X19 + 0x48]
	0x03494F28 LDR X0, [X21]
	0x03494F2C LDR W20, [X8 + 0x1C]
	0x03494F30 LDR W9, [X0 + 0xE0]
	0x03494F34 CBNZ W9, 0x3494F3C
	0x03494F38 BL 0x1C16DFC
	0x03494F3C LDR W8, [X19 + 0x34]
	0x03494F40 CMP W8, W20
	0x03494F44 B.GE 0x3494F58
	0x03494F48 ADD W9, W8, 0x3
	0x03494F4C CMP W8, 0x0
	0x03494F50 CSEL W8, W9, W8, LT
	0x03494F54 AND W20, W8, 0xFFFFFFFC
	0x03494F58 LDP X1, X4, [X19 + 0x38]
	0x03494F5C LDP X2, X3, [X19 + 0x28]
	0x03494F60 STR W20, [X19 + 0x50]
	0x03494F64 MOV W0, W20
	0x03494F68 BL 0x3492814
	0x03494F6C CBZ X0, 0x34950EC
	0x03494F70 MOV X1, X31
	0x03494F74 BL 0x33ED394
	0x03494F78 STR X0, [X31 + 0x18]
	0x03494F7C ADD X0, X31, 0x18
	0x03494F80 MOV X1, X31
	0x03494F84 BL 0x32C3A80
	0x03494F88 TBNZ X0, 0x0, 0x3494FDC
	0x03494F8C STR W31, [X19]
	0x03494F90 LDR X8, [X31 + 0x18]
	0x03494F94 STR X8, [X19 + 0x58]
	0x03494F98 LDR X0, [X23]
	0x03494F9C LDR W8, [X0 + 0xE0]
	0x03494FA0 CBNZ W8, 0x3494FA8
	0x03494FA4 BL 0x1C16DFC
	0x03494FA8 ADRP X8, 0xC9D000
	0x03494FAC LDR X8, [X8 + 0x820]
	0x03494FB0 ADD X0, X19, 0x8
	0x03494FB4 LDR X3, [X8]
	0x03494FB8 ADD X1, X31, 0x18
	0x03494FBC MOV X2, X19
	0x03494FC0 BL 0x1FC5F4C
	0x03494FC4 B 0x34950C8
	0x03494FC8 LDR X8, [X19 + 0x58]
	0x03494FCC MOVN W9, 0x0
	0x03494FD0 STR X8, [X31 + 0x18]
	0x03494FD4 STR X31, [X19 + 0x58]
	0x03494FD8 STR W9, [X19]
	0x03494FDC ADD X0, X31, 0x18
	0x03494FE0 MOV X1, X31
	0x03494FE4 BL 0x32C3B4C
	0x03494FE8 LDR X8, [X19 + 0x48]
	0x03494FEC CBZ X8, 0x34950E0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X25, 0xF4A000
	012 Move X24, 0xC9E000
	013 Move W8, [X25+2399]
	014 Move X24, [X24+1888]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xC9E000
	025 Move X0, [X0+1896]
	026 Call 0x1C17CF4
	027 Move X0, 0xC9E000
	028 Move X0, [X0+1904]
	029 Call 0x1C17CF4
	030 Move X0, 0xC9E000
	031 Move X0, [X0+1912]
	032 Call 0x1C17CF4
	033 Move X0, 0xC9E000
	034 Move X0, [X0+1888]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+2399], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+64], V0
	041 Move [X31+72], V0
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move [X31], V0
	045 Move [X31+8], V0
	046 Move X24, 0xC9E000
	047 Move X26, 0xC9E000
	048 Move X25, 0xC9E000
	049 Move W8, [X0+224]
	050 Move X24, [X24+1896]
	051 Move X26, [X26+1904]
	052 Move X25, [X25+1912]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Add X8, X31, 0
	058 Or X24, X8, 15
	059 Move X8, X24
	060 Call AsyncTaskMethodBuilder`1<Object>.Create
	061 Move X2, [X26]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Add X1, X31, 0
	066 Move X0, X24
	067 Move [X31+48], X21
	068 Move [X31+56], X23
	069 Move [X31+32], X20
	070 Move [X31+40], X22
	071 Move [X31+64], X19
	072 Move [X31], W8
	073 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	074 Move X1, [X25]
	075 Move X0, X24
	076 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X24, [X31+128]
	082 Move X23, [X31+136]
	083 Move X26, [X31+112]
	084 Move X25, [X31+120]
	085 Move X30, [X31+96]
	086 Add X31, X31, 176
	087 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.Ninja.WebSockets.Internal.WebSocketReadCursor> ReadAsync(System.IO.Stream fromStream, System.ArraySegment`1<System.Byte> intoBuffer, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x03494FF0 LDR X0, [X21]
	0x03494FF4 LDR X20, [X8 + 0x38]
	0x03494FF8 LDR W9, [X0 + 0xE0]
	0x03494FFC CBNZ W9, 0x3495004
	0x03495000 BL 0x1C16DFC
	0x03495004 UBFM X8, X20, 0x20, 0x3F
	0x03495008 CMP W8, 0x1
	0x0349500C B.LT 0x3495054
	0x03495010 LDR X0, [X21]
	0x03495014 LDR W8, [X0 + 0xE0]
	0x03495018 CBNZ W8, 0x3495020
	0x0349501C BL 0x1C16DFC
	0x03495020 ADRP X8, 0xC89000
	0x03495024 LDR X1, [X19 + 0x28]
	0x03495028 LDR W2, [X19 + 0x30]
	0x0349502C LDR W3, [X19 + 0x50]
	0x03495030 LDR X8, [X8 + 0xB88]
	0x03495034 LDR X4, [X8]
	0x03495038 ADD X0, X31, 0x0
	0x0349503C BL 0x2B87BB0
	0x03495040 LDR X8, [X19 + 0x48]
	0x03495044 CBZ X8, 0x34950F0
	0x03495048 LDP X0, X1, [X8 + 0x30]
	0x0349504C LDP X2, X3, [X31]
	0x03495050 BL 0x3493D1C
	0x03495054 LDR X8, [X19 + 0x20]
	0x03495058 CBZ X8, 0x34950E4
	0x0349505C ADRP X9, 0xC9C000
	0x03495060 LDR X9, [X9 + 0x7E8]
	0x03495064 LDR X21, [X19 + 0x48]
	0x03495068 LDR W22, [X19 + 0x50]
	0x0349506C LDR W24, [X8 + 0x1C]
	0x03495070 LDR X0, [X9]
	0x03495074 BL 0x1C16F10
	0x03495078 MOV X20, X0
	0x0349507C SUB W3, W24, W22
	0x03495080 MOV X1, X21
	0x03495084 MOV W2, W22
	0x03495088 MOV X4, X31
	0x0349508C BL 0x3495DCC
	0x03495090 MOVN W8, 0x1
	0x03495094 STR W8, [X19]
	0x03495098 STR X31, [X19 + 0x48]
	0x0349509C LDR X0, [X23]
	0x034950A0 ADRP X21, 0xC9C000
	0x034950A4 ADD X19, X19, 0x8
	0x034950A8 LDR W8, [X0 + 0xE0]
	0x034950AC LDR X21, [X21 + 0x7C8]
	0x034950B0 CBNZ W8, 0x34950B8
	0x034950B4 BL 0x1C16DFC
	0x034950B8 LDR X2, [X21]
	0x034950BC MOV X0, X19
	0x034950C0 MOV X1, X20
	0x034950C4 BL 0x26322B0
	0x034950C8 LDP X20, X19, [X31 + 0x40]
	0x034950CC LDP X22, X21, [X31 + 0x30]
	0x034950D0 LDP X24, X23, [X31 + 0x20]
	0x034950D4 LDR X30, [X31 + 0x10]
	0x034950D8 ADD X31, X31, 0x50
	0x034950DC RET
	0x034950E0 BL 0x1C16F20
	0x034950E4 BL 0x1C16F20
	0x034950E8 BL 0x1C16F20
	0x034950EC BL 0x1C16F20
	0x034950F0 BL 0x1C16F20
	0x034950F4 B 0x349512C

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+152], X27
	004 Move [X31+160], X26
	005 Move [X31+168], X25
	006 Move [X31+176], X24
	007 Move [X31+184], X23
	008 Move [X31+192], X22
	009 Move [X31+200], X21
	010 Move [X31+208], X20
	011 Move [X31+216], X19
	012 Move X24, 0xF49000
	013 Move X23, 0xC9D000
	014 Move W8, [X24+2400]
	015 Move X23, [X23+1888]
	016 Move X19, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xC9D000
	025 Move X0, [X0+1896]
	026 Call 0x1C17CF4
	027 Move X0, 0xC9D000
	028 Move X0, [X0+1920]
	029 Call 0x1C17CF4
	030 Move X0, 0xC9D000
	031 Move X0, [X0+1912]
	032 Call 0x1C17CF4
	033 Move X0, 0xC9D000
	034 Move X0, [X0+1888]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+2400], W8
	038 Move X26, 0xC9D000
	039 Move X25, 0xC9D000
	040 Move X24, 0xC9D000
	041 Move X26, [X26+1896]
	042 Move X25, [X25+1920]
	043 Move X24, [X24+1912]
	044 Add X0, X31, 8
	045 Move W2, 136
	046 Move W1, W31
	047 Add X27, X31, 8
	048 Call 0x3EB2B10
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X26]
	055 Add X23, X27, 8
	056 Move X8, X23
	057 Call AsyncTaskMethodBuilder`1<Object>.Create
	058 Move X2, [X25]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Add X1, X31, 8
	063 Move X0, X23
	064 Move [X31+56], X22
	065 Move [X31+64], X21
	066 Move [X31+40], X20
	067 Move [X31+48], X19
	068 Move [X31+8], W8
	069 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	070 Move X1, [X24]
	071 Move X0, X23
	072 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	073 Move X20, [X31+208]
	074 Move X19, [X31+216]
	075 Move X22, [X31+192]
	076 Move X21, [X31+200]
	077 Move X24, [X31+176]
	078 Move X23, [X31+184]
	079 Move X26, [X31+160]
	080 Move X25, [X31+168]
	081 Move X30, [X31+144]
	082 Move X27, [X31+152]
	083 Add X31, X31, 224
	084 Return X0

Method: Nakama.Ninja.WebSockets.Internal.WebSocketFrame DecodeCloseFrame(System.Boolean isFinBitSet, Nakama.Ninja.WebSockets.Internal.WebSocketOpCode opCode, System.Int32 count, System.ArraySegment`1<System.Byte> buffer, System.ArraySegment`1<System.Byte> maskKey)

Disassembly:
	0x034950F8 B 0x349512C
	0x034950FC B 0x349512C
	0x03495100 B 0x349512C
	0x03495104 B 0x349512C
	0x03495108 B 0x349512C
	0x0349510C B 0x349512C
	0x03495110 B 0x349512C
	0x03495114 B 0x349512C
	0x03495118 B 0x349512C
	0x0349511C B 0x349512C
	0x03495120 B 0x349512C
	0x03495124 B 0x349512C
	0x03495128 B 0x349512C
	0x0349512C MOV X20, X0
	0x03495130 CMP W1, 0x1
	0x03495134 B.NE 0x34951D4
	0x03495138 MOV X0, X20
	0x0349513C BL 0x3EB1AD0
	0x03495140 MOV X20, X0
	0x03495144 ADRP X0, 0xC5E000
	0x03495148 LDR X0, [X0 + 0x7D0]
	0x0349514C BL 0x1C16D08
	0x03495150 LDR X8, [X20]
	0x03495154 LDR X1, [X8]
	0x03495158 BL 0x1C17270
	0x0349515C TBZ X0, 0x0, 0x34951AC
	0x03495160 LDR X20, [X20]
	0x03495164 BL 0x3EB1AE0
	0x03495168 MOVN W8, 0x1
	0x0349516C STR X31, [X19 + 0x48]
	0x03495170 STR W8, [X19], #0x8
	0x03495174 ADRP X0, 0xC9C000
	0x03495178 LDR X0, [X0 + 0x760]
	0x0349517C BL 0x1C16D08
	0x03495180 LDR W8, [X0 + 0xE0]
	0x03495184 CBNZ W8, 0x349518C
	0x03495188 BL 0x1C16DFC
	0x0349518C ADRP X0, 0xC9C000
	0x03495190 LDR X0, [X0 + 0x810]
	0x03495194 BL 0x1C16D08
	0x03495198 MOV X2, X0
	0x0349519C MOV X0, X19
	0x034951A0 MOV X1, X20
	0x034951A4 BL 0x26324C8
	0x034951A8 B 0x34950C8
	0x034951AC MOVZ W0, 0x8
	0x034951B0 BL 0x3EB1AF0
	0x034951B4 LDR X8, [X20]
	0x034951B8 STR X8, [X0]
	0x034951BC ADRP X1, 0xA1F000
	0x034951C0 ADD X1, X1, 0xE58
	0x034951C4 MOV X2, X31
	0x034951C8 BL 0x3EB1B00
	0x034951CC MOV X20, X0
	0x034951D0 BL 0x3EB1AE0
	0x034951D4 MOV X0, X20
	0x034951D8 BL 0x1D2C690
	0x034951DC BL 0x1990590
	0x034951E0 STR X30, [X31 - 0x30]!
	0x034951E4 STP X22, X21, [X31 + 0x10]
	0x034951E8 STP X20, X19, [X31 + 0x20]
	0x034951EC ADRP X22, 0xF48000
	0x034951F0 ADRP X21, 0xC9C000
	0x034951F4 LDRB W8, [X22 + 0x966]
	0x034951F8 LDR X21, [X21 + 0x760]
	0x034951FC MOV X19, X1
	0x03495200 MOV X20, X0
	0x03495204 TBNZ X8, 0x0, 0x3495228
	0x03495208 ADRP X0, 0xC9C000
	0x0349520C LDR X0, [X0 + 0x818]
	0x03495210 BL 0x1C16CF4
	0x03495214 ADRP X0, 0xC9C000
	0x03495218 LDR X0, [X0 + 0x760]
	0x0349521C BL 0x1C16CF4
	0x03495220 MOVZ W8, 0x1
	0x03495224 STRB W8, [X22 + 0x966]
	0x03495228 LDR X0, [X21]
	0x0349522C ADRP X21, 0xC9C000
	0x03495230 LDR W8, [X0 + 0xE0]
	0x03495234 LDR X21, [X21 + 0x818]
	0x03495238 CBNZ W8, 0x3495240
	0x0349523C BL 0x1C16DFC
	0x03495240 LDR X2, [X21]
	0x03495244 ADD X0, X20, 0x8
	0x03495248 MOV X1, X19
	0x0349524C LDP X20, X19, [X31 + 0x20]
	0x03495250 LDP X22, X21, [X31 + 0x10]
	0x03495254 LDR X30, [X31], #0x30
	0x03495258 B 0x2632228
	0x0349525C SUB X31, X31, 0x40
	0x03495260 STP X30, X21, [X31 + 0x20]
	0x03495264 STP X20, X19, [X31 + 0x30]
	0x03495268 ADRP X20, 0xF48000
	0x0349526C LDRB W8, [X20 + 0x967]
	0x03495270 MOV X19, X0
	0x03495274 TBNZ X8, 0x0, 0x34952F8
	0x03495278 ADRP X0, 0xC9C000
	0x0349527C LDR X0, [X0 + 0x828]
	0x03495280 BL 0x1C16CF4
	0x03495284 ADRP X0, 0xC9C000
	0x03495288 LDR X0, [X0 + 0x830]
	0x0349528C BL 0x1C16CF4
	0x03495290 ADRP X0, 0xC9C000
	0x03495294 LDR X0, [X0 + 0x838]
	0x03495298 BL 0x1C16CF4
	0x0349529C ADRP X0, 0xC9C000
	0x034952A0 LDR X0, [X0 + 0x798]
	0x034952A4 BL 0x1C16CF4
	0x034952A8 ADRP X0, 0xC9C000
	0x034952AC LDR X0, [X0 + 0x840]
	0x034952B0 BL 0x1C16CF4
	0x034952B4 ADRP X0, 0xC9C000
	0x034952B8 LDR X0, [X0 + 0x848]
	0x034952BC BL 0x1C16CF4
	0x034952C0 ADRP X0, 0xC9C000
	0x034952C4 LDR X0, [X0 + 0x850]
	0x034952C8 BL 0x1C16CF4
	0x034952CC ADRP X0, 0xC9C000
	0x034952D0 LDR X0, [X0 + 0x858]
	0x034952D4 BL 0x1C16CF4
	0x034952D8 ADRP X0, 0xC9C000
	0x034952DC LDR X0, [X0 + 0x860]
	0x034952E0 BL 0x1C16CF4
	0x034952E4 ADRP X0, 0xC9C000
	0x034952E8 LDR X0, [X0 + 0x868]
	0x034952EC BL 0x1C16CF4
	0x034952F0 MOVZ W8, 0x1
	0x034952F4 STRB W8, [X20 + 0x967]
	0x034952F8 STP X31, X31, [X31 + 0x10]
	0x034952FC ADRP X21, 0xC9C000
	0x03495300 LDR W8, [X19]
	0x03495304 LDR X21, [X21 + 0x798]
	0x03495308 CBZ W8, 0x34953BC
	0x0349530C CMP W8, 0x1
	0x03495310 B.NE 0x34953EC
	0x03495314 LDR X8, [X19 + 0x50]
	0x03495318 MOVN W9, 0x0
	0x0349531C STR X8, [X31 + 0x10]
	0x03495320 STR X31, [X19 + 0x50]
	0x03495324 STR W9, [X19]
	0x03495328 ADRP X8, 0xC9C000
	0x0349532C LDR X8, [X8 + 0x848]
	0x03495330 LDR X1, [X8]
	0x03495334 ADD X0, X31, 0x10
	0x03495338 BL 0x2677808
	0x0349533C MOV X20, X0
	0x03495340 ORR W8, W31, 0x80000001
	0x03495344 CMP W20, W8
	0x03495348 B.CC 0x3495480
	0x0349534C STR W20, [X31 + 0xC]
	0x03495350 ADRP X0, 0xC66000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X26, 0xF49000
	015 Move W8, [X26+2401]
	016 Move X19, X6
	017 Move X20, X5
	018 Move X25, X4
	019 Move X24, X3
	020 Move W21, W2
	021 Move W22, W1
	022 Move W23, W0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {53}
	027 Move X0, 0xC92000
	028 Move X0, [X0+3312]
	029 Call 0x1C17CF4
	030 Move X0, 0xC92000
	031 Move X0, [X0+3328]
	032 Call 0x1C17CF4
	033 Move X0, 0xC87000
	034 Move X0, [X0+1456]
	035 Call 0x1C17CF4
	036 Move X0, 0xC5F000
	037 Move X0, [X0+3576]
	038 Call 0x1C17CF4
	039 Move X0, 0xC5F000
	040 Move X0, [X0+1880]
	041 Call 0x1C17CF4
	042 Move X0, 0xC5F000
	043 Move X0, [X0+1728]
	044 Call 0x1C17CF4
	045 Move X0, 0xC9D000
	046 Move X0, [X0+1928]
	047 Call 0x1C17CF4
	048 Move X0, 0xC9D000
	049 Move X0, [X0+1936]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X26+2401], W8
	053 Subtract W26, W21, 2
	054 Move X24, X31
	055 Move W27, 1005
	056 Move X8, 0xC87000
	057 Move X8, [X8+1456]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move W2, 2
	064 Move X0, X24
	065 Move W1, W25
	066 Move X3, X31
	067 Call Array.Reverse, X0, X1, X2
	068 Move X0, X24
	069 Move W1, W25
	070 Move X2, X31
	071 Call BitConverter.ToUInt16, X0, X1
	072 Move X8, 0xC5F000
	073 Move X8, [X8+1728]
	074 Move X9, 0xC9D000
	075 And W29, W0, 0xFFFF
	076 Move X8, [X8]
	077 Move X9, [X9+1928]
	078 Move W10, [X8+224]
	079 Move X27, [X9]
	080 Compare W10, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X0, X27
	085 Move X1, X31
	086 Call Type.GetTypeFromHandle, X0
	087 Move X8, 0xC5F000
	088 Move X8, [X8+1880]
	089 Move X27, X0
	090 Add X1, X31, 12
	091 Move [X31+12], W29
	092 Move X0, [X8]
	093 Call 0x1C17E04
	094 Move X8, 0xC5F000
	095 Move X8, [X8+3576]
	096 Move X28, X0
	097 Move X8, [X8]
	098 Move W9, [X8+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {103}
	101 Move X0, X8
	102 Call 0x1C17DFC
	103 Move X0, X27
	104 Move X1, X28
	105 Move X2, X31
	106 Call Enum.IsDefined, X0, X1
	107 Move X28, 0xC87000
	108 Move X28, [X28+1456]
	109 Move W8, W0
	110 And W31, W8, 1
	111 Move W8, 1005
	112 Move X0, [X28]
	113 NotImplemented "Instruction CSEL not yet implemented."
	114 Move W9, [X0+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X24, X31
	120 Move X0, X31
	121 Call Encoding.get_UTF8
	122 Move X8, [X28]
	123 Move X28, X0
	124 Move W9, [X8+224]
	125 Compare W9, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Compare X28, 0
	130 JumpIfEqual {168}
	131 Move X8, [X28]
	132 Add W2, W25, 2
	133 Move X0, X28
	134 Move X1, X24
	135 Move X9, [X8+904]
	136 Move X4, [X8+912]
	137 Move W3, W26
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X24, X0
	140 Move X8, 0xC9D000
	141 Move X8, [X8+1936]
	142 Move X0, [X8]
	143 Call 0x1C17F10
	144 And W1, W23, 1
	145 Move W2, W22
	146 Move W3, W21
	147 Move W4, W27
	148 Move X5, X24
	149 Move X6, X20
	150 Move X7, X19
	151 Move X25, X0
	152 Call WebSocketFrame..ctor, X0, X1, X2, X3, X4, X5, X6
	153 Move X0, X25
	154 Move X20, [X31+96]
	155 Move X19, [X31+104]
	156 Move X22, [X31+80]
	157 Move X21, [X31+88]
	158 Move X24, [X31+64]
	159 Move X23, [X31+72]
	160 Move X26, [X31+48]
	161 Move X25, [X31+56]
	162 Move X28, [X31+32]
	163 Move X27, [X31+40]
	164 Move X29, [X31+16]
	165 Move X30, [X31+24]
	166 Add X31, X31, 112
	167 Return X0
	168 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.UInt32> ReadLength(System.Byte byte2, System.ArraySegment`1<System.Byte> smallBuffer, System.IO.Stream fromStream, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x03495354 LDR X0, [X0 + 0x720]
	0x03495358 BL 0x1C16D08
	0x0349535C ADD X1, X31, 0xC
	0x03495360 BL 0x1C16E04
	0x03495364 MOV X20, X0
	0x03495368 ADRP X0, 0xC9C000
	0x0349536C LDR X0, [X0 + 0x870]
	0x03495370 BL 0x1C16D08
	0x03495374 MOV X1, X20
	0x03495378 MOV X2, X31
	0x0349537C BL 0x321EFD0
	0x03495380 MOV X20, X0
	0x03495384 ADRP X0, 0xC66000
	0x03495388 LDR X0, [X0 + 0x760]
	0x0349538C BL 0x1C16D08
	0x03495390 BL 0x1C16F10
	0x03495394 MOV X21, X0
	0x03495398 MOV X1, X20
	0x0349539C MOV X2, X31
	0x034953A0 BL 0x3316014
	0x034953A4 ADRP X0, 0xC9C000
	0x034953A8 LDR X0, [X0 + 0x878]
	0x034953AC BL 0x1C16D08
	0x034953B0 MOV X1, X0
	0x034953B4 MOV X0, X21
	0x034953B8 BL 0x1C16DEC
	0x034953BC LDR X8, [X19 + 0x48]
	0x034953C0 MOVN W9, 0x0
	0x034953C4 STR X8, [X31 + 0x18]
	0x034953C8 STR X31, [X19 + 0x48]
	0x034953CC STR W9, [X19]
	0x034953D0 ADRP X8, 0xC9C000
	0x034953D4 LDR X8, [X8 + 0x840]
	0x034953D8 LDR X1, [X8]
	0x034953DC ADD X0, X31, 0x18
	0x034953E0 BL 0x26776E0
	0x034953E4 AND W20, W0, 0xFFFF
	0x034953E8 B 0x3495480
	0x034953EC LDRB W8, [X19 + 0x20]
	0x034953F0 AND W20, W8, 0x7F
	0x034953F4 CMP W20, 0x7F
	0x034953F8 B.EQ 0x34954C0
	0x034953FC CMP W20, 0x7E
	0x03495400 B.NE 0x3495480
	0x03495404 LDP X0, X2, [X19 + 0x28]
	0x03495408 LDP X3, X4, [X19 + 0x38]
	0x0349540C MOV W1, W31
	0x03495410 BL 0x3492908
	0x03495414 CBZ X0, 0x3495540
	0x03495418 ADRP X8, 0xC9C000
	0x0349541C LDR X8, [X8 + 0x868]
	0x03495420 LDR X1, [X8]
	0x03495424 BL 0x26A24D0
	0x03495428 ADRP X8, 0xC9C000
	0x0349542C LDR X8, [X8 + 0x858]
	0x03495430 STR X0, [X31 + 0x18]
	0x03495434 LDR X1, [X8]
	0x03495438 ADD X0, X31, 0x18
	0x0349543C BL 0x267769C
	0x03495440 TBNZ X0, 0x0, 0x34953D0
	0x03495444 STR W31, [X19]
	0x03495448 LDR X8, [X31 + 0x18]
	0x0349544C STR X8, [X19 + 0x48]
	0x03495450 LDR X0, [X21]
	0x03495454 LDR W8, [X0 + 0xE0]
	0x03495458 CBNZ W8, 0x3495460
	0x0349545C BL 0x1C16DFC
	0x03495460 ADRP X8, 0xC9C000
	0x03495464 LDR X8, [X8 + 0x828]
	0x03495468 ADD X0, X19, 0x8
	0x0349546C LDR X3, [X8]
	0x03495470 ADD X1, X31, 0x18
	0x03495474 MOV X2, X19

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X25, 0xF49000
	012 Move X24, 0xC9D000
	013 Move W8, [X25+2402]
	014 Move X24, [X24+1944]
	015 Move X19, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move W23, W0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xC9D000
	025 Move X0, [X0+1952]
	026 Call 0x1C17CF4
	027 Move X0, 0xC9D000
	028 Move X0, [X0+1960]
	029 Call 0x1C17CF4
	030 Move X0, 0xC9D000
	031 Move X0, [X0+1968]
	032 Call 0x1C17CF4
	033 Move X0, 0xC9D000
	034 Move X0, [X0+1944]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+2402], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+112], X31
	041 Move [X31+80], V0
	042 Move [X31+88], V0
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move [X31+2], V0
	046 Move X26, 0xC9D000
	047 Move X25, 0xC9D000
	048 Move X24, 0xC9D000
	049 Move W8, [X0+224]
	050 Move X26, [X26+1952]
	051 Move X25, [X25+1960]
	052 Move X24, [X24+1968]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X26]
	057 Add X8, X31, 8
	058 Call AsyncTaskMethodBuilder`1<UInt32>.Create
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X9, [X31+24]
	061 Move X2, [X25]
	062 Add X8, X31, 32
	063 Move [X31+88], X21
	064 Move [X31+96], X19
	065 Or X19, X8, 15
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W10, TEMP
	069 Add X1, X31, 32
	070 Move X0, X19
	071 Move [X31+64], W23
	072 Move [X31+72], X20
	073 Move [X31+80], X22
	074 Move [X31+40], V0
	075 Move [X31+56], X9
	076 Move [X31+32], W10
	077 Call AsyncTaskMethodBuilder`1<UInt32>.Start, X0, X1
	078 Move X1, [X24]
	079 Move X0, X19
	080 Call AsyncTaskMethodBuilder`1<UInt32>.get_Task, X0
	081 Move X20, [X31+192]
	082 Move X19, [X31+200]
	083 Move X22, [X31+176]
	084 Move X21, [X31+184]
	085 Move X24, [X31+160]
	086 Move X23, [X31+168]
	087 Move X26, [X31+144]
	088 Move X25, [X31+152]
	089 Move X30, [X31+128]
	090 Add X31, X31, 208
	091 Return X0

