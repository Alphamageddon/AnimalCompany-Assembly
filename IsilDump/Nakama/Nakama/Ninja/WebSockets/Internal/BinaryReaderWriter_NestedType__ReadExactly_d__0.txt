Type: Nakama.Ninja.WebSockets.Internal.BinaryReaderWriter/<ReadExactly>d__0

Method: System.Void MoveNext()

Disassembly:
	0x03493DFC LDR W12, [X22 + 0x18]
	0x03493E00 AND W11, W11, 0xFFFFFFFC
	0x03493E04 SUB W11, W8, W11
	0x03493E08 ADD W11, W11, W21
	0x03493E0C CMP W11, W12
	0x03493E10 B.CS 0x3493E48
	0x03493E14 ADD X11, X22, W11, SXTW
	0x03493E18 LDRB W12, [X9, X8, LSL]
	0x03493E1C LDRB W11, [X11 + 0x20]
	0x03493E20 EOR W11, W11, W12, 0x0
	0x03493E24 STRB W11, [X9, X8, LSL]
	0x03493E28 ADD X8, X8, 0x1
	0x03493E2C CMP X10, X8
	0x03493E30 B.NE 0x3493DDC
	0x03493E34 LDP X20, X19, [X31 + 0x30]
	0x03493E38 LDP X22, X21, [X31 + 0x20]
	0x03493E3C LDP X24, X23, [X31 + 0x10]
	0x03493E40 LDR X30, [X31], #0x40
	0x03493E44 RET
	0x03493E48 BL 0x1C16F28
	0x03493E4C BL 0x1C16F20
	0x03493E50 MOVZ W8, 0x4
	0x03493E54 STR W8, [X31 + 0xC]
	0x03493E58 ADRP X0, 0xC60000
	0x03493E5C LDR X0, [X0 + 0x758]
	0x03493E60 BL 0x1C16D08
	0x03493E64 ADD X1, X31, 0xC
	0x03493E68 BL 0x1C16E04
	0x03493E6C MOV X19, X0
	0x03493E70 ADRP X0, 0xC9E000
	0x03493E74 LDR X0, [X0 + 0x750]
	0x03493E78 BL 0x1C16D08
	0x03493E7C MOV X1, X19
	0x03493E80 MOV X2, X31
	0x03493E84 BL 0x321EFD0
	0x03493E88 MOV X19, X0
	0x03493E8C ADRP X0, 0xC60000
	0x03493E90 LDR X0, [X0 + 0x7D0]
	0x03493E94 BL 0x1C16D08
	0x03493E98 BL 0x1C16F10
	0x03493E9C MOV X1, X19
	0x03493EA0 MOV X2, X31
	0x03493EA4 MOV X20, X0
	0x03493EA8 BL 0x33B2C70
	0x03493EAC ADRP X0, 0xC9E000
	0x03493EB0 LDR X0, [X0 + 0x758]
	0x03493EB4 BL 0x1C16D08
	0x03493EB8 MOV X1, X0
	0x03493EBC MOV X0, X20
	0x03493EC0 BL 0x1C16DEC
	0x03493EC4 CMP W1, W0
	0x03493EC8 B.GE 0x3493EDC
	0x03493ECC ADD W8, W1, 0x3
	0x03493ED0 CMP W1, 0x0
	0x03493ED4 CSEL W8, W8, W1, LT
	0x03493ED8 AND W0, W8, 0xFFFFFFFC
	0x03493EDC RET
	0x03493EE0 SUB X31, X31, 0xB0
	0x03493EE4 STR X30, [X31 + 0x60]
	0x03493EE8 STP X26, X25, [X31 + 0x70]
	0x03493EEC STP X24, X23, [X31 + 0x80]
	0x03493EF0 STP X22, X21, [X31 + 0x90]
	0x03493EF4 STP X20, X19, [X31 + 0xA0]
	0x03493EF8 ADRP X25, 0xF4A000
	0x03493EFC ADRP X24, 0xC9E000
	0x03493F00 LDRB W8, [X25 + 0x95F]
	0x03493F04 LDR X24, [X24 + 0x760]
	0x03493F08 MOV X19, X4
	0x03493F0C MOV X20, X3
	0x03493F10 MOV X21, X2
	0x03493F14 MOV X22, X1
	0x03493F18 MOV X23, X0
	0x03493F1C TBNZ X8, 0x0, 0x3493F58
	0x03493F20 ADRP X0, 0xC9E000
	0x03493F24 LDR X0, [X0 + 0x768]
	0x03493F28 BL 0x1C16CF4
	0x03493F2C ADRP X0, 0xC9E000
	0x03493F30 LDR X0, [X0 + 0x770]
	0x03493F34 BL 0x1C16CF4
	0x03493F38 ADRP X0, 0xC9E000
	0x03493F3C LDR X0, [X0 + 0x778]
	0x03493F40 BL 0x1C16CF4
	0x03493F44 ADRP X0, 0xC9E000
	0x03493F48 LDR X0, [X0 + 0x760]
	0x03493F4C BL 0x1C16CF4
	0x03493F50 MOVZ W8, 0x1
	0x03493F54 STRB W8, [X25 + 0x95F]
	0x03493F58 LDR X0, [X24]
	0x03493F5C MOVI V0.2D, 0x0
	0x03493F60 STP V0, V0, [X31 + 0x40]
	0x03493F64 STP V0, V0, [X31 + 0x20]
	0x03493F68 STP V0, V0, [X31]
	0x03493F6C ADRP X24, 0xC9E000
	0x03493F70 ADRP X26, 0xC9E000
	0x03493F74 ADRP X25, 0xC9E000
	0x03493F78 LDR W8, [X0 + 0xE0]
	0x03493F7C LDR X24, [X24 + 0x768]
	0x03493F80 LDR X26, [X26 + 0x770]
	0x03493F84 LDR X25, [X25 + 0x778]
	0x03493F88 CBNZ W8, 0x3493F90
	0x03493F8C BL 0x1C16DFC
	0x03493F90 LDR X0, [X24]
	0x03493F94 ADD X8, X31, 0x0
	0x03493F98 ORR X24, X8, 0xF
	0x03493F9C MOV X8, X24
	0x03493FA0 BL 0x263221C
	0x03493FA4 LDR X2, [X26]
	0x03493FA8 MOVN W8, 0x0
	0x03493FAC ADD X1, X31, 0x0
	0x03493FB0 MOV X0, X24
	0x03493FB4 STP X21, X23, [X31 + 0x30]
	0x03493FB8 STP X20, X22, [X31 + 0x20]
	0x03493FBC STR X19, [X31 + 0x40]
	0x03493FC0 STR W8, [X31]
	0x03493FC4 BL 0x1FD2214
	0x03493FC8 LDR X1, [X25]
	0x03493FCC MOV X0, X24
	0x03493FD0 BL 0x2632230
	0x03493FD4 LDP X20, X19, [X31 + 0xA0]
	0x03493FD8 LDP X22, X21, [X31 + 0x90]
	0x03493FDC LDP X24, X23, [X31 + 0x80]
	0x03493FE0 LDP X26, X25, [X31 + 0x70]
	0x03493FE4 LDR X30, [X31 + 0x60]
	0x03493FE8 ADD X31, X31, 0xB0
	0x03493FEC RET
	0x03493FF0 SUB X31, X31, 0xE0
	0x03493FF4 STP X30, X27, [X31 + 0x90]
	0x03493FF8 STP X26, X25, [X31 + 0xA0]
	0x03493FFC STP X24, X23, [X31 + 0xB0]
	0x03494000 STP X22, X21, [X31 + 0xC0]
	0x03494004 STP X20, X19, [X31 + 0xD0]
	0x03494008 ADRP X24, 0xF49000
	0x0349400C ADRP X23, 0xC9D000
	0x03494010 LDRB W8, [X24 + 0x960]
	0x03494014 LDR X23, [X23 + 0x760]
	0x03494018 MOV X19, X3
	0x0349401C MOV X21, X2
	0x03494020 MOV X22, X1
	0x03494024 MOV X20, X0
	0x03494028 TBNZ X8, 0x0, 0x3494064
	0x0349402C ADRP X0, 0xC9D000
	0x03494030 LDR X0, [X0 + 0x768]
	0x03494034 BL 0x1C16CF4
	0x03494038 ADRP X0, 0xC9D000
	0x0349403C LDR X0, [X0 + 0x780]
	0x03494040 BL 0x1C16CF4
	0x03494044 ADRP X0, 0xC9D000
	0x03494048 LDR X0, [X0 + 0x778]
	0x0349404C BL 0x1C16CF4
	0x03494050 ADRP X0, 0xC9D000
	0x03494054 LDR X0, [X0 + 0x760]
	0x03494058 BL 0x1C16CF4
	0x0349405C MOVZ W8, 0x1
	0x03494060 STRB W8, [X24 + 0x960]
	0x03494064 ADRP X26, 0xC9D000
	0x03494068 ADRP X25, 0xC9D000
	0x0349406C ADRP X24, 0xC9D000
	0x03494070 LDR X26, [X26 + 0x768]
	0x03494074 LDR X25, [X25 + 0x780]
	0x03494078 LDR X24, [X24 + 0x778]
	0x0349407C ADD X0, X31, 0x8
	0x03494080 MOVZ W2, 0x88
	0x03494084 MOV W1, W31
	0x03494088 ADD X27, X31, 0x8
	0x0349408C BL 0x3EB1B10
	0x03494090 LDR X0, [X23]
	0x03494094 LDR W8, [X0 + 0xE0]
	0x03494098 CBNZ W8, 0x34940A0
	0x0349409C BL 0x1C16DFC
	0x034940A0 LDR X0, [X26]
	0x034940A4 ADD X23, X27, 0x8
	0x034940A8 MOV X8, X23
	0x034940AC BL 0x263221C
	0x034940B0 LDR X2, [X25]
	0x034940B4 MOVN W8, 0x0
	0x034940B8 ADD X1, X31, 0x8
	0x034940BC MOV X0, X23
	0x034940C0 STP X22, X21, [X31 + 0x38]
	0x034940C4 STP X20, X19, [X31 + 0x28]
	0x034940C8 STR W8, [X31 + 0x8]
	0x034940CC BL 0x1FD2114
	0x034940D0 LDR X1, [X24]
	0x034940D4 MOV X0, X23
	0x034940D8 BL 0x2632230
	0x034940DC LDP X20, X19, [X31 + 0xD0]
	0x034940E0 LDP X22, X21, [X31 + 0xC0]
	0x034940E4 LDP X24, X23, [X31 + 0xB0]
	0x034940E8 LDP X26, X25, [X31 + 0xA0]
	0x034940EC LDP X30, X27, [X31 + 0x90]
	0x034940F0 ADD X31, X31, 0xE0
	0x034940F4 RET
	0x034940F8 SUB X31, X31, 0x70
	0x034940FC STP X29, X30, [X31 + 0x10]
	0x03494100 STP X28, X27, [X31 + 0x20]
	0x03494104 STP X26, X25, [X31 + 0x30]
	0x03494108 STP X24, X23, [X31 + 0x40]
	0x0349410C STP X22, X21, [X31 + 0x50]
	0x03494110 STP X20, X19, [X31 + 0x60]
	0x03494114 ADRP X26, 0xF49000
	0x03494118 LDRB W8, [X26 + 0x961]
	0x0349411C MOV X19, X6
	0x03494120 MOV X20, X5
	0x03494124 MOV X25, X4
	0x03494128 MOV X24, X3
	0x0349412C MOV W21, W2
	0x03494130 MOV W22, W1
	0x03494134 MOV W23, W0
	0x03494138 TBNZ X8, 0x0, 0x34941A4
	0x0349413C ADRP X0, 0xC92000
	0x03494140 LDR X0, [X0 + 0xCF0]
	0x03494144 BL 0x1C16CF4
	0x03494148 ADRP X0, 0xC92000
	0x0349414C LDR X0, [X0 + 0xD00]
	0x03494150 BL 0x1C16CF4
	0x03494154 ADRP X0, 0xC87000
	0x03494158 LDR X0, [X0 + 0x5B0]
	0x0349415C BL 0x1C16CF4
	0x03494160 ADRP X0, 0xC5F000
	0x03494164 LDR X0, [X0 + 0xDF8]
	0x03494168 BL 0x1C16CF4
	0x0349416C ADRP X0, 0xC5F000
	0x03494170 LDR X0, [X0 + 0x758]
	0x03494174 BL 0x1C16CF4
	0x03494178 ADRP X0, 0xC5F000
	0x0349417C LDR X0, [X0 + 0x6C0]
	0x03494180 BL 0x1C16CF4
	0x03494184 ADRP X0, 0xC9D000
	0x03494188 LDR X0, [X0 + 0x788]
	0x0349418C BL 0x1C16CF4
	0x03494190 ADRP X0, 0xC9D000
	0x03494194 LDR X0, [X0 + 0x790]
	0x03494198 BL 0x1C16CF4
	0x0349419C MOVZ W8, 0x1
	0x034941A0 STRB W8, [X26 + 0x961]
	0x034941A4 SUBS W26, W21, 0x2
	0x034941A8 B.GE 0x34941B8
	0x034941AC MOV X24, X31
	0x034941B0 MOVZ W27, 0x3ED
	0x034941B4 B 0x34942F8
	0x034941B8 ADRP X8, 0xC87000
	0x034941BC LDR X8, [X8 + 0x5B0]
	0x034941C0 LDR X0, [X8]
	0x034941C4 LDR W8, [X0 + 0xE0]
	0x034941C8 CBNZ W8, 0x34941D0
	0x034941CC BL 0x1C16DFC
	0x034941D0 MOVZ W2, 0x2
	0x034941D4 MOV X0, X24
	0x034941D8 MOV W1, W25
	0x034941DC MOV X3, X31
	0x034941E0 BL 0x33A1B8C
	0x034941E4 MOV X0, X24
	0x034941E8 MOV W1, W25
	0x034941EC MOV X2, X31
	0x034941F0 BL 0x331710C
	0x034941F4 ADRP X8, 0xC5F000
	0x034941F8 LDR X8, [X8 + 0x6C0]
	0x034941FC ADRP X9, 0xC9D000
	0x03494200 AND W29, W0, 0xFFFF
	0x03494204 LDR X8, [X8]
	0x03494208 LDR X9, [X9 + 0x788]
	0x0349420C LDR W10, [X8 + 0xE0]
	0x03494210 LDR X27, [X9]
	0x03494214 CBNZ W10, 0x3494220
	0x03494218 MOV X0, X8
	0x0349421C BL 0x1C16DFC
	0x03494220 MOV X0, X27
	0x03494224 MOV X1, X31
	0x03494228 BL 0x338C698
	0x0349422C ADRP X8, 0xC5F000
	0x03494230 LDR X8, [X8 + 0x758]
	0x03494234 MOV X27, X0
	0x03494238 ADD X1, X31, 0xC
	0x0349423C STR W29, [X31 + 0xC]
	0x03494240 LDR X0, [X8]
	0x03494244 BL 0x1C16E04
	0x03494248 ADRP X8, 0xC5F000
	0x0349424C LDR X8, [X8 + 0xDF8]
	0x03494250 MOV X28, X0
	0x03494254 LDR X8, [X8]
	0x03494258 LDR W9, [X8 + 0xE0]
	0x0349425C CBNZ W9, 0x3494268
	0x03494260 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xF4B000
	008 Move W8, [X20+2389]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {43}
	014 Move X0, 0xC94000
	015 Move X0, [X0+3312]
	016 Call 0x1C17CF4
	017 Move X0, 0xC94000
	018 Move X0, [X0+3320]
	019 Call 0x1C17CF4
	020 Move X0, 0xC94000
	021 Move X0, [X0+3328]
	022 Call 0x1C17CF4
	023 Move X0, 0xC89000
	024 Move X0, [X0+1456]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9F000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move X0, 0xC64000
	030 Move X0, [X0+640]
	031 Call 0x1C17CF4
	032 Move X0, 0xC90000
	033 Move X0, [X0+3528]
	034 Call 0x1C17CF4
	035 Move X0, 0xC90000
	036 Move X0, [X0+3640]
	037 Call 0x1C17CF4
	038 Move X0, 0xC90000
	039 Move X0, [X0+3536]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+2389], W8
	043 Move [X31+24], X31
	044 Move X21, 0xC64000
	045 Move X22, 0xC89000
	046 Move W8, [X19]
	047 Move X21, [X21+640]
	048 Move X22, [X22+1456]
	049 Compare W8, 0
	050 JumpIfEqual {64}
	051 Move W8, [X19+32]
	052 Compare W8, 0
	053 JumpIfEqual {178}
	054 Move X0, [X22]
	055 Move W9, [X0+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move W8, [X19+32]
	060 Move W9, [X19+52]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, W31
	063 Move [X19+72], W31
	064 Move X8, [X19+80]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W9, TEMP
	068 Move [X31+24], X8
	069 Move [X19+80], X31
	070 Move [X19], W9
	071 Move [X31+12], W8
	072 Move X0, 0xC61000
	073 Move X0, [X0+1880]
	074 Call 0x1C17D08
	075 Add X1, X31, 12
	076 Call 0x1C17E04
	077 Move X20, X0
	078 Move X0, 0xC89000
	079 Move X0, [X0+1456]
	080 Call 0x1C17D08
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, 0xC94000
	086 Move X0, [X0+3328]
	087 Call 0x1C17D08
	088 Move W8, [X19+48]
	089 Move [X31+8], W8
	090 Move X0, 0xC61000
	091 Move X0, [X0+1880]
	092 Call 0x1C17D08
	093 Add X1, X31, 8
	094 Call 0x1C17E04
	095 Move X21, X0
	096 Move X0, 0xC94000
	097 Move X0, [X0+3320]
	098 Call 0x1C17D08
	099 Move W8, [X19+52]
	100 Move [X31+4], W8
	101 Move X0, 0xC61000
	102 Move X0, [X0+1880]
	103 Call 0x1C17D08
	104 Add X1, X31, 4
	105 Call 0x1C17E04
	106 Move X22, X0
	107 Move X0, 0xC9F000
	108 Move X0, [X0+1736]
	109 Call 0x1C17D08
	110 Move X1, X20
	111 Move X2, X21
	112 Move X3, X22
	113 Move X4, X31
	114 Call String.Format, X0, X1, X2, X3
	115 Move X20, X0
	116 Move X0, 0xC9F000
	117 Move X0, [X0+1744]
	118 Call 0x1C17D08
	119 Call 0x1C17F10
	120 Move X21, X0
	121 Move X1, X20
	122 Move X2, X31
	123 Call InternalBufferOverflowException..ctor, X0, X1
	124 Move X0, 0xC9F000
	125 Move X0, [X0+1752]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X21
	129 Call 0x1C17DEC
	130 Move X0, [X22]
	131 Move X20, [X19+56]
	132 Move W9, [X0+224]
	133 Compare W9, 0
	134 JumpIfNotEqual {137}
	135 Call 0x1C17DFC
	136 Move W8, [X19+72]
	137 Compare X20, 0
	138 JumpIfEqual {213}
	139 Move X9, [X20]
	140 Move W10, [X19+32]
	141 Move W11, [X19+48]
	142 Move X1, [X19+40]
	143 Move X4, [X19+64]
	144 Move X12, [X9+728]
	145 Move X5, [X9+736]
	146 Add W2, W11, W8
	147 Subtract W3, W10, W8
	148 Move X0, X20
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Compare X0, 0
	151 JumpIfEqual {212}
	152 Move X8, 0xC8F000
	153 Move X8, [X8+3536]
	154 Move X1, [X8]
	155 Call Task`1<Int32>.GetAwaiter, X0
	156 Move X8, 0xC8F000
	157 Move X8, [X8+3640]
	158 Move [X31+24], X0
	159 Move X1, [X8]
	160 Add X0, X31, 24
	161 Call TaskAwaiter`1<Int32>.get_IsCompleted, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {190}
	166 Move X8, 0xC8F000
	167 Move X8, [X8+3528]
	168 Move X1, [X8]
	169 Add X0, X31, 24
	170 Call TaskAwaiter`1<Int32>.GetResult, X0
	171 Compare W0, 0
	172 JumpIfEqual {214}
	173 Move W8, [X19+72]
	174 Move W9, [X19+32]
	175 Add W8, W8, W0
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move [X19+72], W8
	178 Move TEMP, 1
	179 Not TEMP
	180 Move W8, TEMP
	181 Move [X19+8], W8
	182 Move X0, [X21]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X0, X19
	188 Move X1, X31
	189 Call AsyncTaskMethodBuilder.SetResult, X0
	190 Move [X19], W31
	191 Move X8, [X31+24]
	192 Move [X19+80], X8
	193 Move X0, [X21]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X8, 0xC9E000
	199 Move X8, [X8+1728]
	200 Add X0, X19, 8
	201 Move X3, [X8]
	202 Add X1, X31, 24
	203 Move X2, X19
	204 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	205 Move X20, [X31+48]
	206 Move X19, [X31+56]
	207 Move X22, [X31+32]
	208 Move X21, [X31+40]
	209 Move X30, [X31+16]
	210 Add X31, X31, 64
	211 Return 
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Move W8, [X19+32]
	215 Move [X31+12], W8
	216 Move X0, 0xC60000
	217 Move X0, [X0+1880]
	218 Call 0x1C17D08
	219 Add X1, X31, 12
	220 Call 0x1C17E04
	221 Move X20, X0
	222 Move X0, 0xC9E000
	223 Move X0, [X0+1760]
	224 Call 0x1C17D08
	225 Move X1, X20
	226 Move X2, X31
	227 Call String.Format, X0, X1
	228 Move X20, X0
	229 Move X0, 0xC92000
	230 Move X0, [X0+984]
	231 Call 0x1C17D08
	232 Call 0x1C17F10
	233 Move X21, X0
	234 Move X1, X20
	235 Move X2, X31
	236 Call EndOfStreamException..ctor, X0, X1
	237 Move X0, 0xC9E000
	238 Move X0, [X0+1752]
	239 Call 0x1C17D08
	240 Move X1, X0
	241 Move X0, X21
	242 Call 0x1C17DEC
	243 Move X20, X0
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X0, X20
	246 Call 0x3EB2AD0
	247 Move X20, X0
	248 Move X0, 0xC60000
	249 Move X0, [X0+2000]
	250 Call 0x1C17D08
	251 Move X8, [X20]
	252 Move X1, [X8]
	253 Call 0x1C18270
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {275}
	258 Move X20, [X20]
	259 Call 0x3EB2AE0
	260 Move TEMP, 1
	261 Not TEMP
	262 Move W8, TEMP
	263 Move [X19+8], W8
	264 Move X0, 0xC63000
	265 Move X0, [X0+640]
	266 Call 0x1C17D08
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 Move X0, X19
	272 Move X1, X20
	273 Move X2, X31
	274 Call AsyncTaskMethodBuilder.SetException, X0, X1
	275 Move W0, 8
	276 Call 0x3EB2AF0
	277 Move X8, [X20]
	278 Move [X0], X8
	279 Move X1, 0xA21000
	280 Add X1, X1, 3672
	281 Move X2, X31
	282 Call 0x3EB2B00
	283 Move X20, X0
	284 Call 0x3EB2AE0
	285 Move X0, X20
	286 Call 0x1D2D690
	287 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03494264 BL 0x1C16DFC
	0x03494268 MOV X0, X27
	0x0349426C MOV X1, X28
	0x03494270 MOV X2, X31
	0x03494274 BL 0x33B153C
	0x03494278 ADRP X28, 0xC87000
	0x0349427C LDR X28, [X28 + 0x5B0]
	0x03494280 MOV W8, W0
	0x03494284 ANDS W31, W8, 0x1
	0x03494288 MOVZ W8, 0x3ED
	0x0349428C LDR X0, [X28]
	0x03494290 CSEL W27, W29, W8, NE
	0x03494294 LDR W9, [X0 + 0xE0]
	0x03494298 CBNZ W9, 0x34942A0
	0x0349429C BL 0x1C16DFC
	0x034942A0 CMP W21, 0x3
	0x034942A4 B.GE 0x34942B0
	0x034942A8 MOV X24, X31
	0x034942AC B 0x34942F8
	0x034942B0 MOV X0, X31
	0x034942B4 BL 0x3241948
	0x034942B8 LDR X8, [X28]
	0x034942BC MOV X28, X0
	0x034942C0 LDR W9, [X8 + 0xE0]
	0x034942C4 CBNZ W9, 0x34942D0
	0x034942C8 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF4A000
	007 Move X22, 0xC63000
	008 Move W8, [X21+2390]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC63000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2390], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

