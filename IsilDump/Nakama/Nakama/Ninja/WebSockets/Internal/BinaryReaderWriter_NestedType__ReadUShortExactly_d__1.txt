Type: Nakama.Ninja.WebSockets.Internal.BinaryReaderWriter/<ReadUShortExactly>d__1

Method: System.Void MoveNext()

Disassembly:
	0x034948B4 MOVZ W1, 0x8
	0x034948B8 BL 0x34940F8
	0x034948BC MOV X20, X0
	0x034948C0 B 0x34948FC
	0x034948C4 LDUR V0, [X19 + 0x68]
	0x034948C8 ADRP X8, 0xC9D000
	0x034948CC LDR W24, [X19 + 0x5C]
	0x034948D0 STR V0, [X31]
	0x034948D4 LDR X8, [X8 + 0x790]
	0x034948D8 LDR X0, [X8]
	0x034948DC BL 0x1C16F10
	0x034948E0 MOV X20, X0
	0x034948E4 MOV X1, X31
	0x034948E8 BL 0x33BDD8C
	0x034948EC LDR V0, [X31]
	0x034948F0 STRB W21, [X20 + 0x10]
	0x034948F4 STP W22, W24, [X20 + 0x14]
	0x034948F8 STR V0, [X20 + 0x3]
	0x034948FC ADRP X8, 0xC9D000
	0x03494900 LDR X8, [X8 + 0x7E8]
	0x03494904 LDP W24, W22, [X19 + 0x5C]
	0x03494908 LDR X0, [X8]
	0x0349490C BL 0x1C16F10
	0x03494910 MOV X21, X0
	0x03494914 SUB W3, W24, W22
	0x03494918 MOV X1, X20
	0x0349491C MOV W2, W22
	0x03494920 MOV X4, X31
	0x03494924 BL 0x3495DCC
	0x03494928 MOVN W8, 0x1
	0x0349492C STP X31, X31, [X19 + 0x40]
	0x03494930 STR W8, [X19]
	0x03494934 STP X31, X31, [X19 + 0x68]
	0x03494938 LDR X0, [X23]
	0x0349493C ADRP X20, 0xC9D000
	0x03494940 ADD X19, X19, 0x8
	0x03494944 LDR W8, [X0 + 0xE0]
	0x03494948 LDR X20, [X20 + 0x7C8]
	0x0349494C CBNZ W8, 0x3494954
	0x03494950 BL 0x1C16DFC
	0x03494954 LDR X2, [X20]
	0x03494958 MOV X0, X19
	0x0349495C MOV X1, X21
	0x03494960 BL 0x26322B0
	0x03494964 LDP X20, X19, [X31 + 0x70]
	0x03494968 LDP X22, X21, [X31 + 0x60]
	0x0349496C LDP X24, X23, [X31 + 0x50]
	0x03494970 LDR X30, [X31 + 0x40]
	0x03494974 ADD X31, X31, 0x80
	0x03494978 RET
	0x0349497C MOVZ W8, 0x3
	0x03494980 STR W8, [X19]
	0x03494984 LDR X8, [X31 + 0x48]
	0x03494988 STR X8, [X19 + 0x78]
	0x0349498C LDR X0, [X23]
	0x03494990 LDR W8, [X0 + 0xE0]
	0x03494994 CBNZ W8, 0x349499C
	0x03494998 BL 0x1C16DFC
	0x0349499C ADRP X8, 0xC9D000
	0x034949A0 LDR X8, [X8 + 0x7C0]
	0x034949A4 ADD X0, X19, 0x8
	0x034949A8 LDR X3, [X8]
	0x034949AC ADD X1, X31, 0x48
	0x034949B0 MOV X2, X19
	0x034949B4 BL 0x1FC5D38
	0x034949B8 B 0x3494964
	0x034949BC MOVZ W8, 0x1
	0x034949C0 STR W8, [X19]
	0x034949C4 LDR X8, [X31 + 0x38]
	0x034949C8 STR X8, [X19 + 0x80]
	0x034949CC LDR X0, [X23]
	0x034949D0 LDR W8, [X0 + 0xE0]
	0x034949D4 CBNZ W8, 0x34949DC
	0x034949D8 BL 0x1C16DFC
	0x034949DC ADRP X8, 0xC9D000
	0x034949E0 LDR X8, [X8 + 0x7B8]
	0x034949E4 ADD X0, X19, 0x8
	0x034949E8 LDR X3, [X8]
	0x034949EC ADD X1, X31, 0x38
	0x034949F0 MOV X2, X19
	0x034949F4 BL 0x1FC4850
	0x034949F8 B 0x3494964
	0x034949FC STR W31, [X19]
	0x03494A00 LDR X8, [X31 + 0x48]
	0x03494A04 STR X8, [X19 + 0x78]
	0x03494A08 LDR X0, [X23]
	0x03494A0C LDR W8, [X0 + 0xE0]
	0x03494A10 CBNZ W8, 0x3494A18
	0x03494A14 BL 0x1C16DFC
	0x03494A18 ADRP X8, 0xC9D000
	0x03494A1C LDR X8, [X8 + 0x7C0]
	0x03494A20 ADD X0, X19, 0x8
	0x03494A24 LDR X3, [X8]
	0x03494A28 ADD X1, X31, 0x48
	0x03494A2C MOV X2, X19
	0x03494A30 BL 0x1FC5D38
	0x03494A34 B 0x3494964
	0x03494A38 LDR W0, [X19 + 0x60]
	0x03494A3C LDP X1, X4, [X19 + 0x20]
	0x03494A40 LDP X2, X3, [X19 + 0x30]
	0x03494A44 BL 0x3492814
	0x03494A48 CBZ X0, 0x3494B04
	0x03494A4C MOV X1, X31
	0x03494A50 BL 0x33ED394
	0x03494A54 STR X0, [X31 + 0x48]
	0x03494A58 ADD X0, X31, 0x48
	0x03494A5C MOV X1, X31
	0x03494A60 BL 0x32C3A80
	0x03494A64 TBNZ X0, 0x0, 0x3494748
	0x03494A68 MOVZ W8, 0x4
	0x03494A6C STR W8, [X19]
	0x03494A70 LDR X8, [X31 + 0x48]
	0x03494A74 STR X8, [X19 + 0x78]
	0x03494A78 LDR X0, [X23]
	0x03494A7C LDR W8, [X0 + 0xE0]
	0x03494A80 CBNZ W8, 0x3494A88
	0x03494A84 BL 0x1C16DFC
	0x03494A88 ADRP X8, 0xC9D000
	0x03494A8C LDR X8, [X8 + 0x7C0]
	0x03494A90 ADD X0, X19, 0x8
	0x03494A94 LDR X3, [X8]
	0x03494A98 ADD X1, X31, 0x48
	0x03494A9C MOV X2, X19
	0x03494AA0 BL 0x1FC5D38
	0x03494AA4 B 0x3494964
	0x03494AA8 MOVZ W8, 0x2
	0x03494AAC STR W8, [X19]
	0x03494AB0 LDR X8, [X31 + 0x48]
	0x03494AB4 STR X8, [X19 + 0x78]
	0x03494AB8 LDR X0, [X23]
	0x03494ABC LDR W8, [X0 + 0xE0]
	0x03494AC0 CBNZ W8, 0x3494AC8
	0x03494AC4 BL 0x1C16DFC
	0x03494AC8 ADRP X8, 0xC9D000
	0x03494ACC LDR X8, [X8 + 0x7C0]
	0x03494AD0 ADD X0, X19, 0x8
	0x03494AD4 LDR X3, [X8]
	0x03494AD8 ADD X1, X31, 0x48
	0x03494ADC MOV X2, X19
	0x03494AE0 BL 0x1FC5D38
	0x03494AE4 B 0x3494964
	0x03494AE8 BL 0x1C16F20
	0x03494AEC BL 0x1C16F20
	0x03494AF0 BL 0x1C16F28
	0x03494AF4 BL 0x1C16F28
	0x03494AF8 BL 0x1C16F20
	0x03494AFC BL 0x1C16F20
	0x03494B00 BL 0x1C16F20
	0x03494B04 BL 0x1C16F20
	0x03494B08 B 0x3494B98
	0x03494B0C B 0x3494B98
	0x03494B10 B 0x3494B98
	0x03494B14 B 0x3494B98
	0x03494B18 B 0x3494B98
	0x03494B1C B 0x3494D28
	0x03494B20 B 0x3494D28
	0x03494B24 B 0x3494D28
	0x03494B28 B 0x3494B98

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF4A000
	007 Move W8, [X20+2395]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xC93000
	014 Move X0, [X0+3312]
	015 Call 0x1C17CF4
	016 Move X0, 0xC93000
	017 Move X0, [X0+3328]
	018 Call 0x1C17CF4
	019 Move X0, 0xC88000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move X0, 0xC9E000
	023 Move X0, [X0+1832]
	024 Call 0x1C17CF4
	025 Move X0, 0xC9E000
	026 Move X0, [X0+1840]
	027 Call 0x1C17CF4
	028 Move X0, 0xC9E000
	029 Move X0, [X0+1632]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2395], W8
	033 Move [X31+8], X31
	034 Move X21, 0xC9E000
	035 Move W8, [X19]
	036 Move X21, [X21+1632]
	037 Compare W8, 0
	038 JumpIfEqual {72}
	039 Move X1, [X19+32]
	040 Move X2, [X19+40]
	041 Move X3, [X19+48]
	042 Move X4, [X19+56]
	043 Move W0, 2
	044 Call BinaryReaderWriter.ReadExactly, X0, X1, X2, X3
	045 Compare X0, 0
	046 JumpIfEqual {128}
	047 Move X1, X31
	048 Call Task.GetAwaiter, X0
	049 Move [X31+8], X0
	050 Add X0, X31, 8
	051 Move X1, X31
	052 Call TaskAwaiter.get_IsCompleted, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {79}
	057 Move [X19], W31
	058 Move X8, [X31+8]
	059 Move [X19+72], X8
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, 0xC9E000
	066 Move X8, [X8+1832]
	067 Add X0, X19, 8
	068 Move X3, [X8]
	069 Add X1, X31, 8
	070 Move X2, X19
	071 Call AsyncTaskMethodBuilder`1<UInt16>.AwaitUnsafeOnCompleted, X0, X1, X2
	072 Move X8, [X19+72]
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W9, TEMP
	076 Move [X31+8], X8
	077 Move [X19+72], X31
	078 Move [X19], W9
	079 Add X0, X31, 8
	080 Move X1, X31
	081 Call TaskAwaiter.GetResult, X0
	082 Move X20, 0xC88000
	083 Move W8, [X19+64]
	084 Move X20, [X20+1456]
	085 Compare W8, 0
	086 JumpIfNotEqual {97}
	087 Move X0, [X20]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, [X19+40]
	093 Move W1, [X19+48]
	094 Move W2, 2
	095 Move X3, X31
	096 Call Array.Reverse, X0, X1, X2
	097 Move X0, [X20]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, [X19+40]
	103 Move W1, [X19+48]
	104 Move X2, X31
	105 Call BitConverter.ToUInt16, X0, X1
	106 Move TEMP, 1
	107 Not TEMP
	108 Move W8, TEMP
	109 Move [X19+8], W8
	110 Move W20, W0
	111 Move X0, [X21]
	112 Move X21, 0xC9E000
	113 Move W8, [X0+224]
	114 Move X21, [X21+1840]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X2, [X21]
	119 Move X0, X19
	120 Move W1, W20
	121 Call AsyncTaskMethodBuilder`1<UInt16>.SetResult, X0, X1
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X30, [X31+16]
	125 Move X21, [X31+24]
	126 Add X31, X31, 48
	127 Return 
	128 Call 0x1C17F20
	129 Move X20, X0
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, X20
	132 Call 0x3EB2AD0
	133 Move X20, X0
	134 Move X0, 0xC60000
	135 Move X0, [X0+2000]
	136 Call 0x1C17D08
	137 Move X8, [X20]
	138 Move X1, [X8]
	139 Call 0x1C18270
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {164}
	144 Move X20, [X20]
	145 Call 0x3EB2AE0
	146 Move TEMP, 1
	147 Not TEMP
	148 Move W8, TEMP
	149 Move [X19+8], W8
	150 Move X0, 0xC9E000
	151 Move X0, [X0+1632]
	152 Call 0x1C17D08
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, 0xC9E000
	158 Move X0, [X0+1848]
	159 Call 0x1C17D08
	160 Move X2, X0
	161 Move X0, X19
	162 Move X1, X20
	163 Call AsyncTaskMethodBuilder`1<UInt16>.SetException, X0, X1
	164 Move W0, 8
	165 Call 0x3EB2AF0
	166 Move X8, [X20]
	167 Move [X0], X8
	168 Move X1, 0xA21000
	169 Add X1, X1, 3672
	170 Move X2, X31
	171 Call 0x3EB2B00
	172 Move X20, X0
	173 Call 0x3EB2AE0
	174 Move X0, X20
	175 Call 0x1D2D690
	176 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03494B2C B 0x3494B98
	0x03494B30 B 0x3494B98
	0x03494B34 B 0x3494B98
	0x03494B38 B 0x3494B98
	0x03494B3C B 0x3494D28
	0x03494B40 B 0x3494D28
	0x03494B44 B 0x3494D28
	0x03494B48 B 0x3494D28
	0x03494B4C B 0x3494D28
	0x03494B50 B 0x3494B98
	0x03494B54 B 0x3494B98
	0x03494B58 B 0x3494D28
	0x03494B5C B 0x3494D28
	0x03494B60 B 0x3494D28
	0x03494B64 B 0x3494D28
	0x03494B68 B 0x3494D28
	0x03494B6C B 0x3494D28
	0x03494B70 B 0x3494B98
	0x03494B74 B 0x3494B98
	0x03494B78 B 0x3494D28
	0x03494B7C B 0x3494D28
	0x03494B80 B 0x3494B98
	0x03494B84 B 0x3494B98
	0x03494B88 B 0x3494D28
	0x03494B8C B 0x3494D28
	0x03494B90 B 0x3494B98
	0x03494B94 B 0x3494D28
	0x03494B98 MOV X20, X1
	0x03494B9C MOV X21, X0
	0x03494BA0 CMP W20, 0x1
	0x03494BA4 B.NE 0x3494D30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF4A000
	007 Move X21, 0xC9E000
	008 Move W8, [X22+2396]
	009 Move X21, [X21+1632]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC9E000
	017 Move X0, [X0+1856]
	018 Call 0x1C17CF4
	019 Move X0, 0xC9E000
	020 Move X0, [X0+1632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2396], W8
	024 Move X0, [X21]
	025 Move X21, 0xC9E000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1856]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<UInt16>.SetStateMachine, X0, X1
	040 Return 

