Type: Nakama.Ninja.WebSockets.Internal.WebSocketFrame

Method: System.Boolean get_IsFinBitSet()

Disassembly:
	0x03494BA8 MOV X0, X21
	0x03494BAC BL 0x3EB1AD0

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_IsFinBitSet(System.Boolean value)

Disassembly:
	0x03494BB0 MOV X20, X0
	0x03494BB4 ADRP X0, 0xC9D000
	0x03494BB8 LDR X0, [X0 + 0x6D0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: Nakama.Ninja.WebSockets.Internal.WebSocketOpCode get_OpCode()

Disassembly:
	0x03494BBC BL 0x1C16D08
	0x03494BC0 LDR X8, [X20]

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_OpCode(Nakama.Ninja.WebSockets.Internal.WebSocketOpCode value)

Disassembly:
	0x03494BC4 LDR X1, [X8]
	0x03494BC8 BL 0x1C17270

ISIL:
	001 Move [X0+20], W1
	002 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x03494BCC TBZ X0, 0x0, 0x3494CD4
	0x03494BD0 LDR X20, [X20]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_Count(System.Int32 value)

Disassembly:
	0x03494BD4 BL 0x3EB1AE0
	0x03494BD8 STR W31, [X31 + 0x18]

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.Nullable`1<System.Net.WebSockets.WebSocketCloseStatus> get_CloseStatus()

Disassembly:
	0x03494BDC ADRP X0, 0xC5F000
	0x03494BE0 LDR X0, [X0 + 0x758]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void set_CloseStatus(System.Nullable`1<System.Net.WebSockets.WebSocketCloseStatus> value)

Disassembly:
	0x03494BE4 BL 0x1C16D08
	0x03494BE8 ADD X1, X31, 0x18

ISIL:
	001 Move [X0+28], X1
	002 Return 

Method: System.String get_CloseStatusDescription()

Disassembly:
	0x03494BEC BL 0x1C16E04
	0x03494BF0 MOV X21, X0

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_CloseStatusDescription(System.String value)

Disassembly:
	0x03494BF4 ADRP X0, 0xC9D000
	0x03494BF8 LDR X0, [X0 + 0x7F0]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.ArraySegment`1<System.Byte> get_MaskKey()

Disassembly:
	0x03494BFC BL 0x1C16D08
	0x03494C00 MOV X22, X0
	0x03494C04 ADRP X0, 0xC5F000

ISIL:
	001 Move X8, [X0+48]
	002 Move X1, [X0+56]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_MaskKey(System.ArraySegment`1<System.Byte> value)

Disassembly:
	0x03494C08 LDR X0, [X0 + 0x6C0]
	0x03494C0C BL 0x1C16D08

ISIL:
	001 Move [X0+48], X1
	002 Move [X0+56], X2
	003 Return 

Method: System.Void .ctor(System.Boolean isFinBitSet, Nakama.Ninja.WebSockets.Internal.WebSocketOpCode webSocketOpCode, System.Int32 count, System.ArraySegment`1<System.Byte> maskKey)

Disassembly:
	0x03494C10 LDR W8, [X0 + 0xE0]
	0x03494C14 CBNZ W8, 0x3494C1C
	0x03494C18 BL 0x1C16DFC
	0x03494C1C MOV X0, X22
	0x03494C20 MOV X1, X31
	0x03494C24 BL 0x338C698
	0x03494C28 LDR W8, [X19 + 0x54]
	0x03494C2C MOV X22, X0
	0x03494C30 STR W8, [X31 + 0x14]
	0x03494C34 ADRP X0, 0xC9D000
	0x03494C38 LDR X0, [X0 + 0x7F8]
	0x03494C3C BL 0x1C16D08
	0x03494C40 ADD X1, X31, 0x14
	0x03494C44 BL 0x1C16E04
	0x03494C48 MOV X23, X0
	0x03494C4C ADRP X0, 0xC5F000
	0x03494C50 LDR X0, [X0 + 0xDF8]
	0x03494C54 BL 0x1C16D08
	0x03494C58 LDR W8, [X0 + 0xE0]
	0x03494C5C CBNZ W8, 0x3494C64
	0x03494C60 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W23, W1
	009 Move X1, X31
	010 Move X19, X5
	011 Move X20, X4
	012 Move W21, W3
	013 Move W22, W2
	014 Move X24, X0
	015 Call Object..ctor, X0
	016 And W8, W23, 1
	017 Move [X24+20], W22
	018 Move [X24+24], W21
	019 Move [X24+16], W8
	020 Move [X24+48], X20
	021 Move [X24+56], X19
	022 Move X20, [X31+48]
	023 Move X19, [X31+56]
	024 Move X22, [X31+32]
	025 Move X21, [X31+40]
	026 Move X24, [X31+16]
	027 Move X23, [X31+24]
	028 Move X30, [X31+64]
	029 Return 

Method: System.Void .ctor(System.Boolean isFinBitSet, Nakama.Ninja.WebSockets.Internal.WebSocketOpCode webSocketOpCode, System.Int32 count, System.Net.WebSockets.WebSocketCloseStatus closeStatus, System.String closeStatusDescription, System.ArraySegment`1<System.Byte> maskKey)

Disassembly:
	0x03494C64 MOV X0, X22
	0x03494C68 MOV X1, X23
	0x03494C6C MOV X2, X31
	0x03494C70 BL 0x33AED00
	0x03494C74 MOV X22, X0
	0x03494C78 ADRP X0, 0xC9D000
	0x03494C7C LDR X0, [X0 + 0x800]
	0x03494C80 BL 0x1C16D08
	0x03494C84 MOV X1, X21
	0x03494C88 MOV X2, X22
	0x03494C8C MOV X3, X31
	0x03494C90 BL 0x3227BD4
	0x03494C94 MOV X22, X0
	0x03494C98 ADRP X0, 0xC9D000
	0x03494C9C LDR X0, [X0 + 0x6D0]
	0x03494CA0 BL 0x1C16D08
	0x03494CA4 BL 0x1C16F10
	0x03494CA8 MOV X21, X0
	0x03494CAC MOV X1, X22
	0x03494CB0 MOV X2, X20
	0x03494CB4 MOV X3, X31
	0x03494CB8 BL 0x3666F3C
	0x03494CBC ADRP X0, 0xC9D000
	0x03494CC0 LDR X0, [X0 + 0x808]
	0x03494CC4 BL 0x1C16D08
	0x03494CC8 MOV X1, X0
	0x03494CCC MOV X0, X21
	0x03494CD0 BL 0x1C16DEC
	0x03494CD4 MOVZ W0, 0x8
	0x03494CD8 BL 0x3EB1AF0
	0x03494CDC LDR X8, [X20]
	0x03494CE0 STR X8, [X0]
	0x03494CE4 ADRP X1, 0xA20000
	0x03494CE8 ADD X1, X1, 0xE58
	0x03494CEC MOV X2, X31
	0x03494CF0 BL 0x3EB1B00
	0x03494CF4 B 0x3494DD0
	0x03494CF8 B 0x3494D28
	0x03494CFC B 0x3494D28
	0x03494D00 B 0x3494D28
	0x03494D04 B 0x3494D28
	0x03494D08 B 0x3494D28
	0x03494D0C B 0x3494D28
	0x03494D10 B 0x3494D28
	0x03494D14 B 0x3494D28
	0x03494D18 MOV X20, X1

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0xF4A000
	013 Move X27, 0xC9E000
	014 Move W8, [X28+2397]
	015 Move X27, [X27+1864]
	016 Move X22, X7
	017 Move X23, X6
	018 Move X19, X5
	019 Move W21, W4
	020 Move W24, W3
	021 Move W25, W2
	022 Move W26, W1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xC9E000
	029 Move X0, [X0+1864]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X28+2397], W8
	033 Move X0, X20
	034 Move X1, X31
	035 Call Object..ctor, X0
	036 And W8, W26, 1
	037 Move [X20+20], W25
	038 Move [X20+24], W24
	039 Move [X20+16], W8
	040 Move [X20+48], X23
	041 Move [X20+56], X22
	042 Move X2, [X27]
	043 Add X0, X31, 8
	044 Move W1, W21
	045 Move [X31+8], X31
	046 Call Nullable`1<Int32Enum>..ctor, X0, X1
	047 Move X8, [X31+8]
	048 Move [X20+40], X19
	049 Move X22, [X31+64]
	050 Move X21, [X31+72]
	051 Move X24, [X31+48]
	052 Move X23, [X31+56]
	053 Move [X20+28], X8
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X26, [X31+32]
	057 Move X25, [X31+40]
	058 Move X28, [X31+16]
	059 Move X27, [X31+24]
	060 Move X30, [X31+96]
	061 Return 

