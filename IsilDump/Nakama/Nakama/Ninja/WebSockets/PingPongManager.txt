Type: Nakama.Ninja.WebSockets.PingPongManager

Method: System.Void add_Pong(System.EventHandler`1<Nakama.Ninja.WebSockets.PongEventArgs> value)

Disassembly:
	0x0348E6D0 MOV X23, X0
	0x0348E6D4 TBNZ X8, 0x0, 0x348E710
	0x0348E6D8 ADRP X0, 0xCA3000
	0x0348E6DC LDR X0, [X0 + 0x170]
	0x0348E6E0 BL 0x1C16CF4
	0x0348E6E4 ADRP X0, 0xCA3000
	0x0348E6E8 LDR X0, [X0 + 0x3D8]
	0x0348E6EC BL 0x1C16CF4
	0x0348E6F0 ADRP X0, 0xCA3000
	0x0348E6F4 LDR X0, [X0 + 0x180]
	0x0348E6F8 BL 0x1C16CF4
	0x0348E6FC ADRP X0, 0xCA3000
	0x0348E700 LDR X0, [X0 + 0x168]
	0x0348E704 BL 0x1C16CF4
	0x0348E708 MOVZ W8, 0x1
	0x0348E70C STRB W8, [X25 + 0x92D]
	0x0348E710 LDR X0, [X24]
	0x0348E714 MOVI V0.2D, 0x0
	0x0348E718 STP V0, V0, [X31 + 0x30]
	0x0348E71C STP V0, V0, [X31 + 0x10]
	0x0348E720 STR V0, [X31]
	0x0348E724 ADRP X24, 0xCA3000
	0x0348E728 ADRP X26, 0xCA3000
	0x0348E72C ADRP X25, 0xCA3000
	0x0348E730 LDR W8, [X0 + 0xE0]
	0x0348E734 LDR X24, [X24 + 0x170]
	0x0348E738 LDR X26, [X26 + 0x3D8]
	0x0348E73C LDR X25, [X25 + 0x180]
	0x0348E740 CBNZ W8, 0x348E748
	0x0348E744 BL 0x1C16DFC
	0x0348E748 LDR X0, [X24]
	0x0348E74C ADD X8, X31, 0x0
	0x0348E750 ORR X24, X8, 0xF
	0x0348E754 MOV X8, X24
	0x0348E758 BL 0x263221C
	0x0348E75C LDR X2, [X26]
	0x0348E760 MOVN W8, 0x0
	0x0348E764 ADD X1, X31, 0x0
	0x0348E768 MOV X0, X24
	0x0348E76C STP X23, X22, [X31 + 0x20]
	0x0348E770 STP X21, X20, [X31 + 0x30]
	0x0348E774 STR X19, [X31 + 0x40]
	0x0348E778 STR W8, [X31]
	0x0348E77C BL 0x1FD1D14

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF50000
	009 Move W8, [X21+2336]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA4000
	017 Move X0, [X0+888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2336], W8
	021 Move X24, 0xCA4000
	022 Add X20, X20, 80
	023 Move X21, [X20]
	024 Move X24, [X24+888]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_Pong(System.EventHandler`1<Nakama.Ninja.WebSockets.PongEventArgs> value)

Disassembly:
	0x0348E780 LDR X1, [X25]
	0x0348E784 MOV X0, X24
	0x0348E788 BL 0x2632230
	0x0348E78C LDP X20, X19, [X31 + 0x90]
	0x0348E790 LDP X22, X21, [X31 + 0x80]
	0x0348E794 LDP X24, X23, [X31 + 0x70]
	0x0348E798 LDP X26, X25, [X31 + 0x60]
	0x0348E79C LDR X30, [X31 + 0x50]
	0x0348E7A0 ADD X31, X31, 0xA0
	0x0348E7A4 RET
	0x0348E7A8 SUB X31, X31, 0xD0
	0x0348E7AC STP X29, X30, [X31 + 0x70]
	0x0348E7B0 STP X28, X27, [X31 + 0x80]
	0x0348E7B4 STP X26, X25, [X31 + 0x90]
	0x0348E7B8 STP X24, X23, [X31 + 0xA0]
	0x0348E7BC STP X22, X21, [X31 + 0xB0]
	0x0348E7C0 STP X20, X19, [X31 + 0xC0]
	0x0348E7C4 ADRP X28, 0xF4F000
	0x0348E7C8 ADRP X27, 0xCA3000
	0x0348E7CC LDRB W8, [X28 + 0x92E]
	0x0348E7D0 LDR X27, [X27 + 0x168]
	0x0348E7D4 MOV W26, W7
	0x0348E7D8 MOV X20, X6
	0x0348E7DC MOV X21, X5
	0x0348E7E0 MOV X22, X4
	0x0348E7E4 MOV X19, X3
	0x0348E7E8 MOV X23, X2
	0x0348E7EC MOV X24, X1
	0x0348E7F0 MOV X25, X0
	0x0348E7F4 TBNZ X8, 0x0, 0x348E830
	0x0348E7F8 ADRP X0, 0xCA3000
	0x0348E7FC LDR X0, [X0 + 0x170]
	0x0348E800 BL 0x1C16CF4
	0x0348E804 ADRP X0, 0xCA3000
	0x0348E808 LDR X0, [X0 + 0x3E0]
	0x0348E80C BL 0x1C16CF4
	0x0348E810 ADRP X0, 0xCA3000
	0x0348E814 LDR X0, [X0 + 0x180]
	0x0348E818 BL 0x1C16CF4
	0x0348E81C ADRP X0, 0xCA3000
	0x0348E820 LDR X0, [X0 + 0x168]
	0x0348E824 BL 0x1C16CF4
	0x0348E828 MOVZ W8, 0x1
	0x0348E82C STRB W8, [X28 + 0x92E]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF50000
	009 Move W8, [X21+2337]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA4000
	017 Move X0, [X0+888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2337], W8
	021 Move X24, 0xCA4000
	022 Add X20, X20, 80
	023 Move X21, [X20]
	024 Move X24, [X24+888]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void .ctor(System.Guid guid, System.Net.WebSockets.WebSocket webSocket, System.TimeSpan keepAliveInterval, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x0348E830 LDR X0, [X27]
	0x0348E834 MOVI V0.2D, 0x0
	0x0348E838 STP V0, V0, [X31 + 0x50]
	0x0348E83C STP V0, V0, [X31 + 0x30]
	0x0348E840 STP V0, V0, [X31 + 0x10]
	0x0348E844 STR V0, [X31]
	0x0348E848 ADRP X27, 0xCA3000
	0x0348E84C ADRP X29, 0xCA3000
	0x0348E850 LDR W8, [X0 + 0xE0]
	0x0348E854 LDR X28, [X31 + 0xD0]
	0x0348E858 LDR X27, [X27 + 0x170]
	0x0348E85C LDR X29, [X29 + 0x3E0]
	0x0348E860 CBNZ W8, 0x348E868
	0x0348E864 BL 0x1C16DFC
	0x0348E868 LDR X0, [X27]
	0x0348E86C ADD X8, X31, 0x0
	0x0348E870 AND W27, W26, 0x1
	0x0348E874 ORR X26, X8, 0xF
	0x0348E878 MOV X8, X26
	0x0348E87C BL 0x263221C
	0x0348E880 LDR X2, [X29]
	0x0348E884 MOVN W8, 0x0
	0x0348E888 ADD X1, X31, 0x0
	0x0348E88C MOV X0, X26
	0x0348E890 STP X25, X24, [X31 + 0x30]
	0x0348E894 STP X23, X22, [X31 + 0x40]
	0x0348E898 STP X21, X20, [X31 + 0x50]
	0x0348E89C STRB W27, [X31 + 0x60]
	0x0348E8A0 STP X19, X28, [X31 + 0x20]
	0x0348E8A4 STR W8, [X31]
	0x0348E8A8 BL 0x1FD1E14
	0x0348E8AC ADRP X8, 0xCA3000
	0x0348E8B0 LDR X8, [X8 + 0x180]
	0x0348E8B4 MOV X0, X26
	0x0348E8B8 LDR X1, [X8]
	0x0348E8BC BL 0x2632230
	0x0348E8C0 LDP X20, X19, [X31 + 0xC0]
	0x0348E8C4 LDP X22, X21, [X31 + 0xB0]
	0x0348E8C8 LDP X24, X23, [X31 + 0xA0]
	0x0348E8CC LDP X26, X25, [X31 + 0x90]
	0x0348E8D0 LDP X28, X27, [X31 + 0x80]
	0x0348E8D4 LDP X29, X30, [X31 + 0x70]
	0x0348E8D8 ADD X31, X31, 0xD0
	0x0348E8DC RET
	0x0348E8E0 STR X30, [X31 - 0x30]!
	0x0348E8E4 STP X22, X21, [X31 + 0x10]
	0x0348E8E8 STP X20, X19, [X31 + 0x20]
	0x0348E8EC ADRP X21, 0xF4F000
	0x0348E8F0 ADRP X22, 0xC6D000
	0x0348E8F4 ADRP X20, 0xCA3000
	0x0348E8F8 LDRB W8, [X21 + 0x92F]
	0x0348E8FC LDR X22, [X22 + 0x600]
	0x0348E900 LDR X20, [X20 + 0x3E8]
	0x0348E904 MOV X19, X1
	0x0348E908 TBNZ X8, 0x0, 0x348E92C
	0x0348E90C ADRP X0, 0xC6D000
	0x0348E910 LDR X0, [X0 + 0x600]
	0x0348E914 BL 0x1C16CF4
	0x0348E918 ADRP X0, 0xCA3000
	0x0348E91C LDR X0, [X0 + 0x3E8]
	0x0348E920 BL 0x1C16CF4
	0x0348E924 MOVZ W8, 0x1
	0x0348E928 STRB W8, [X21 + 0x92F]
	0x0348E92C LDR X0, [X22]
	0x0348E930 BL 0x1C16F10
	0x0348E934 LDR X1, [X20]
	0x0348E938 MOVZ W2, 0x1
	0x0348E93C MOV X3, X31
	0x0348E940 MOV X20, X0
	0x0348E944 BL 0x3633518
	0x0348E948 CBZ X20, 0x348E9C8
	0x0348E94C MOV X0, X20
	0x0348E950 MOV X1, X19
	0x0348E954 MOV X2, X31
	0x0348E958 BL 0x3632C2C
	0x0348E95C CBZ X0, 0x348E9C8
	0x0348E960 MOV X1, X31
	0x0348E964 MOV X19, X0
	0x0348E968 BL 0x362F808
	0x0348E96C TBZ X0, 0x0, 0x348E9B4
	0x0348E970 LDR X8, [X19]
	0x0348E974 MOV X0, X19
	0x0348E978 LDP X9, X1, [X8 + 0x188]
	0x0348E97C BLR X9
	0x0348E980 CBZ X0, 0x348E9C8
	0x0348E984 MOVZ W1, 0x1
	0x0348E988 MOV X2, X31
	0x0348E98C BL 0x362F9AC
	0x0348E990 CBZ X0, 0x348E9C8
	0x0348E994 MOV X1, X31
	0x0348E998 BL 0x362F62C
	0x0348E99C CBZ X0, 0x348E9C8
	0x0348E9A0 LDP X20, X19, [X31 + 0x20]
	0x0348E9A4 LDP X22, X21, [X31 + 0x10]
	0x0348E9A8 MOV X1, X31
	0x0348E9AC LDR X30, [X31], #0x30
	0x0348E9B0 B 0x322B8DC
	0x0348E9B4 LDP X20, X19, [X31 + 0x20]
	0x0348E9B8 LDP X22, X21, [X31 + 0x10]
	0x0348E9BC MOV X0, X31
	0x0348E9C0 LDR X30, [X31], #0x30
	0x0348E9C4 RET
	0x0348E9C8 BL 0x1C16F20
	0x0348E9CC STP X30, X23, [X31 - 0x30]!
	0x0348E9D0 STP X22, X21, [X31 + 0x10]
	0x0348E9D4 STP X20, X19, [X31 + 0x20]
	0x0348E9D8 ADRP X22, 0xF4F000
	0x0348E9DC ADRP X23, 0xC6D000
	0x0348E9E0 ADRP X21, 0xCA3000
	0x0348E9E4 LDRB W8, [X22 + 0x930]
	0x0348E9E8 LDR X23, [X23 + 0x600]
	0x0348E9EC LDR X21, [X21 + 0x3F0]
	0x0348E9F0 MOV X19, X4
	0x0348E9F4 MOV X20, X3
	0x0348E9F8 TBNZ X8, 0x0, 0x348EA1C
	0x0348E9FC ADRP X0, 0xC6D000
	0x0348EA00 LDR X0, [X0 + 0x600]
	0x0348EA04 BL 0x1C16CF4
	0x0348EA08 ADRP X0, 0xCA3000
	0x0348EA0C LDR X0, [X0 + 0x3F0]
	0x0348EA10 BL 0x1C16CF4
	0x0348EA14 MOVZ W8, 0x1
	0x0348EA18 STRB W8, [X22 + 0x930]
	0x0348EA1C LDR X0, [X23]
	0x0348EA20 BL 0x1C16F10
	0x0348EA24 LDR X1, [X21]
	0x0348EA28 MOVZ W2, 0x1
	0x0348EA2C MOV X3, X31
	0x0348EA30 MOV X21, X0
	0x0348EA34 BL 0x3633518
	0x0348EA38 CBZ X21, 0x348EAB4
	0x0348EA3C MOV X0, X21
	0x0348EA40 MOV X1, X20
	0x0348EA44 MOV X2, X31
	0x0348EA48 BL 0x3632C2C
	0x0348EA4C CBZ X0, 0x348EAB4
	0x0348EA50 LDR X8, [X0]
	0x0348EA54 LDP X9, X1, [X8 + 0x188]
	0x0348EA58 BLR X9
	0x0348EA5C CBZ X0, 0x348EAB4
	0x0348EA60 MOVZ W1, 0x1
	0x0348EA64 MOV X2, X31
	0x0348EA68 BL 0x362F9AC
	0x0348EA6C CBZ X0, 0x348EAB4
	0x0348EA70 MOV X1, X31
	0x0348EA74 BL 0x362F62C
	0x0348EA78 CBZ X0, 0x348EAB4
	0x0348EA7C MOV X1, X31
	0x0348EA80 BL 0x322B8DC
	0x0348EA84 MOV X20, X0
	0x0348EA88 MOV X0, X19
	0x0348EA8C BL 0x348C714
	0x0348EA90 MOV X1, X20
	0x0348EA94 MOV X2, X31
	0x0348EA98 MOV X21, X0
	0x0348EA9C BL 0x3226EF8
	0x0348EAA0 TBNZ X0, 0x0, 0x348EAB8
	0x0348EAA4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xF50000
	010 Move W8, [X25+2338]
	011 Move X20, X5
	012 Move X21, X4
	013 Move X22, X3
	014 Move X23, X2
	015 Move X24, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0xCA4000
	022 Move X0, [X0+888]
	023 Call 0x1C17CF4
	024 Move X0, 0xC6E000
	025 Move X0, [X0+2072]
	026 Call 0x1C17CF4
	027 Move X0, 0xCA4000
	028 Move X0, [X0+896]
	029 Call 0x1C17CF4
	030 Move X0, 0xCA4000
	031 Move X0, [X0+904]
	032 Call 0x1C17CF4
	033 Move X0, 0xC6E000
	034 Move X0, [X0+1800]
	035 Call 0x1C17CF4
	036 Move X0, 0xC99000
	037 Move X0, [X0+3280]
	038 Call 0x1C17CF4
	039 Move X0, 0xC67000
	040 Move X0, [X0+1976]
	041 Call 0x1C17CF4
	042 Move X0, 0xC68000
	043 Move X0, [X0+1392]
	044 Call 0x1C17CF4
	045 Move X0, 0xCA4000
	046 Move X0, [X0+912]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X25+2338], W8
	050 Move X0, X19
	051 Move X1, X31
	052 Call Object..ctor, X0
	053 Compare X22, 0
	054 JumpIfEqual {159}
	055 Move X8, 0xCA4000
	056 Move X8, [X8+912]
	057 Move X9, [X22]
	058 Move X8, [X8]
	059 Move W11, [X9+304]
	060 Move W10, [X8+304]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, [X9+200]
	063 Add X9, X9, X10
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Compare X19, 0
	067 JumpIfEqual {177}
	068 Move X8, 0xCA4000
	069 Move X8, [X8+888]
	070 Move [X19+16], X22
	071 Move [X19+24], X24
	072 Move [X19+32], X23
	073 Move [X19+40], X21
	074 Move [X19+56], X20
	075 Move X0, [X8]
	076 Move X23, 0xCA4000
	077 Move X25, 0xC6E000
	078 Move X24, 0xC68000
	079 Move X23, [X23+904]
	080 Move X25, [X25+1800]
	081 Move X24, [X24+1392]
	082 Call 0x1C17F10
	083 Move X2, [X23]
	084 Move X1, X19
	085 Move X3, X31
	086 Move X23, X0
	087 Call 0x2D0FF74, X0, X1, X2
	088 Move X0, X22
	089 Move X1, X23
	090 Move X2, X31
	091 Call WebSocketImplementation.add_Pong, X0, X1
	092 Move X0, [X25]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X31
	098 Call Stopwatch.StartNew
	099 Move [X19+64], X0
	100 Move X0, [X24]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X24]
	106 Move X8, [X0+184]
	107 Move X0, X21
	108 Move X2, X31
	109 Move X1, [X8]
	110 Call TimeSpan.op_Equality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {127}
	115 Move X8, 0xC67000
	116 Move X8, [X8+1976]
	117 Move X0, [X8]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X8, 0xC99000
	123 Move X8, [X8+3280]
	124 Move W0, W31
	125 Move X1, [X8]
	126 Call Task.FromResult, X0
	127 Move X8, 0xC6E000
	128 Move X8, [X8+2072]
	129 Move X0, [X8]
	130 Call 0x1C17F10
	131 Move X8, 0xCA4000
	132 Move X8, [X8+896]
	133 Move X1, X19
	134 Move X3, X31
	135 Move X21, X0
	136 Move X2, [X8]
	137 Call Func`1<Object>..ctor, X0, X1, X2
	138 Move X8, 0xC67000
	139 Move X8, [X8+1976]
	140 Move X0, [X8]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X21
	146 Move X1, X20
	147 Move X2, X31
	148 Call Task.Run, X0, X1
	149 Move [X19+48], X0
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Move X25, [X31+72]
	158 Return 
	159 Move X0, 0xC6E000
	160 Move X0, [X0+3080]
	161 Call 0x1C17D08
	162 Call 0x1C17F10
	163 Move X19, X0
	164 Move X0, 0xCA4000
	165 Move X0, [X0+920]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X19
	169 Move X2, X31
	170 Call InvalidCastException..ctor, X0, X1
	171 Move X0, 0xCA4000
	172 Move X0, [X0+928]
	173 Call 0x1C17D08
	174 Move X1, X0
	175 Move X0, X19
	176 Call 0x1C17DEC
	177 Call 0x1C17F20

Method: System.Threading.Tasks.Task SendPing(System.ArraySegment`1<System.Byte> payload, System.Threading.CancellationToken cancellation)

Disassembly:
	0x0348EAA8 LDP X22, X21, [X31 + 0x10]
	0x0348EAAC LDP X30, X23, [X31], #0x30
	0x0348EAB0 RET
	0x0348EAB4 BL 0x1C16F20
	0x0348EAB8 ADRP X0, 0xC65000
	0x0348EABC LDR X0, [X0 + 0xAC8]
	0x0348EAC0 BL 0x1C16D08
	0x0348EAC4 MOVZ W1, 0x5
	0x0348EAC8 BL 0x1C16D6C
	0x0348EACC MOV X19, X0
	0x0348EAD0 BL 0x19903C0
	0x0348EAD4 ADRP X0, 0xCA3000
	0x0348EAD8 LDR X0, [X0 + 0x3F8]
	0x0348EADC BL 0x1C16D08
	0x0348EAE0 MOV X2, X0
	0x0348EAE4 MOV X0, X19
	0x0348EAE8 MOV X1, X31
	0x0348EAEC BL 0x1993444
	0x0348EAF0 MOV X0, X19
	0x0348EAF4 BL 0x19903C0
	0x0348EAF8 MOVZ W1, 0x1
	0x0348EAFC MOV X0, X19
	0x0348EB00 MOV X2, X21
	0x0348EB04 BL 0x1993444
	0x0348EB08 MOV X0, X19
	0x0348EB0C BL 0x19903C0
	0x0348EB10 ADRP X0, 0xCA3000
	0x0348EB14 LDR X0, [X0 + 0x400]
	0x0348EB18 BL 0x1C16D08
	0x0348EB1C MOV X2, X0
	0x0348EB20 MOVZ W1, 0x2
	0x0348EB24 MOV X0, X19
	0x0348EB28 BL 0x1993444
	0x0348EB2C MOV X0, X19
	0x0348EB30 BL 0x19903C0
	0x0348EB34 MOVZ W1, 0x3
	0x0348EB38 MOV X0, X19
	0x0348EB3C MOV X2, X20
	0x0348EB40 BL 0x1993444
	0x0348EB44 MOV X0, X19
	0x0348EB48 BL 0x19903C0
	0x0348EB4C ADRP X0, 0xC6D000
	0x0348EB50 LDR X0, [X0 + 0x9B0]
	0x0348EB54 BL 0x1C16D08
	0x0348EB58 MOV X2, X0
	0x0348EB5C MOVZ W1, 0x4
	0x0348EB60 MOV X0, X19
	0x0348EB64 BL 0x1993444
	0x0348EB68 MOV X0, X19
	0x0348EB6C MOV X1, X31
	0x0348EB70 BL 0x32278CC
	0x0348EB74 MOV X19, X0
	0x0348EB78 ADRP X0, 0xC65000
	0x0348EB7C LDR X0, [X0 + 0x9C8]
	0x0348EB80 BL 0x1C16D08
	0x0348EB84 BL 0x1BBE55C
	0x0348EB88 MOV X1, X0
	0x0348EB8C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xF50000
	010 Move X23, 0xC69000
	011 Move W8, [X24+2339]
	012 Move X23, [X23+640]
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xCA4000
	022 Move X0, [X0+936]
	023 Call 0x1C17CF4
	024 Move X0, 0xC69000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+2339], W8
	029 Move X0, [X23]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+96], X31
	032 Move [X31+64], V0
	033 Move [X31+72], V0
	034 Move [X31+32], V0
	035 Move [X31+40], V0
	036 Move X23, 0xCA4000
	037 Move W8, [X0+224]
	038 Move X23, [X23+936]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X8, X31, 8
	043 Move X0, X31
	044 Call AsyncTaskMethodBuilder.Create
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X31+24]
	047 Move X2, [X23]
	048 Add X8, X31, 32
	049 Move [X31+88], X20
	050 Or X20, X8, 15
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W10, TEMP
	054 Add X1, X31, 32
	055 Move X0, X20
	056 Move [X31+72], X22
	057 Move [X31+80], X21
	058 Move [X31+40], V0
	059 Move [X31+56], X9
	060 Move [X31+64], X19
	061 Move [X31+32], W10
	062 Call AsyncTaskMethodBuilder.Start, X0, X1
	063 Move X0, X20
	064 Move X1, X31
	065 Call AsyncTaskMethodBuilder.get_Task, X0
	066 Move X20, [X31+160]
	067 Move X19, [X31+168]
	068 Move X22, [X31+144]
	069 Move X21, [X31+152]
	070 Move X24, [X31+128]
	071 Move X23, [X31+136]
	072 Move X30, [X31+112]
	073 Add X31, X31, 176
	074 Return X0

Method: System.Void OnPong(Nakama.Ninja.WebSockets.PongEventArgs e)

Disassembly:
	0x0348EB90 MOV X2, X31
	0x0348EB94 BL 0x3227C5C
	0x0348EB98 MOV X19, X0
	0x0348EB9C ADRP X0, 0xCA3000
	0x0348EBA0 LDR X0, [X0 + 0x408]
	0x0348EBA4 BL 0x1C16D08
	0x0348EBA8 BL 0x1C16F10
	0x0348EBAC MOV X1, X19
	0x0348EBB0 MOV X2, X31
	0x0348EBB4 MOV X20, X0

ISIL:
	001 Move X9, [X0+80]
	002 Compare X9, 0
	003 JumpIfEqual {11}
	004 Move X8, X0
	005 Move X4, [X9+24]
	006 Move X0, [X9+64]
	007 Move X3, [X9+40]
	008 Move X2, X1
	009 Move X1, X8
	010 CallNoReturn X4
	011 Return 

Method: System.Threading.Tasks.Task PingForever()

Disassembly:
	0x0348EBB8 BL 0x349B904
	0x0348EBBC ADRP X0, 0xCA3000
	0x0348EBC0 LDR X0, [X0 + 0x410]
	0x0348EBC4 BL 0x1C16D08
	0x0348EBC8 MOV X1, X0
	0x0348EBCC MOV X0, X20
	0x0348EBD0 BL 0x1C16DEC
	0x0348EBD4 STP X30, X23, [X31 - 0x30]!
	0x0348EBD8 STP X22, X21, [X31 + 0x10]
	0x0348EBDC STP X20, X19, [X31 + 0x20]
	0x0348EBE0 ADRP X20, 0xF4F000
	0x0348EBE4 LDRB W8, [X20 + 0x931]
	0x0348EBE8 MOV X19, X1
	0x0348EBEC TBNZ X8, 0x0, 0x348EC28
	0x0348EBF0 ADRP X0, 0xC65000
	0x0348EBF4 LDR X0, [X0 + 0x8F0]
	0x0348EBF8 BL 0x1C16CF4
	0x0348EBFC ADRP X0, 0xC65000
	0x0348EC00 LDR X0, [X0 + 0xAC8]
	0x0348EC04 BL 0x1C16CF4
	0x0348EC08 ADRP X0, 0xCA3000
	0x0348EC0C LDR X0, [X0 + 0x418]
	0x0348EC10 BL 0x1C16CF4
	0x0348EC14 ADRP X0, 0xCA3000
	0x0348EC18 LDR X0, [X0 + 0x420]
	0x0348EC1C BL 0x1C16CF4
	0x0348EC20 MOVZ W8, 0x1
	0x0348EC24 STRB W8, [X20 + 0x931]
	0x0348EC28 MOV X0, X19
	0x0348EC2C BL 0x348CDB0
	0x0348EC30 CBZ X0, 0x348EDCC
	0x0348EC34 ADRP X8, 0xCA3000
	0x0348EC38 LDR X8, [X8 + 0x418]
	0x0348EC3C MOVZ W2, 0x3
	0x0348EC40 MOV X3, X31
	0x0348EC44 MOV X20, X0
	0x0348EC48 LDR X1, [X8]
	0x0348EC4C BL 0x3226FBC
	0x0348EC50 TBNZ X0, 0x0, 0x348ECE4
	0x0348EC54 ADRP X8, 0xC65000
	0x0348EC58 LDR X8, [X8 + 0xAC8]
	0x0348EC5C MOVZ W1, 0x1
	0x0348EC60 LDR X0, [X8]
	0x0348EC64 BL 0x1C16D6C
	0x0348EC68 CBZ X0, 0x348EDC8
	0x0348EC6C LDR W8, [X0 + 0x18]
	0x0348EC70 MOV X1, X0
	0x0348EC74 CBZ W8, 0x348EDC4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X21
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X21, 0xF50000
	007 Move X20, 0xC69000
	008 Move W8, [X21+2340]
	009 Move X20, [X20+640]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xCA4000
	016 Move X0, [X0+944]
	017 Call 0x1C17CF4
	018 Move X0, 0xC69000
	019 Move X0, [X0+640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2340], W8
	023 Move X0, [X20]
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X31+48], V0
	026 Move [X31+56], V0
	027 Move [X31+2], V0
	028 Move X20, 0xCA4000
	029 Move W8, [X0+224]
	030 Move X20, [X20+944]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X8, X31, 8
	035 Move X0, X31
	036 Call AsyncTaskMethodBuilder.Create
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 Move X9, [X31+24]
	039 Move X2, [X20]
	040 Add X8, X31, 32
	041 Or X20, X8, 15
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W10, TEMP
	045 Add X1, X31, 32
	046 Move X0, X20
	047 Move [X31+40], V0
	048 Move [X31+56], X9
	049 Move [X31+64], X19
	050 Move [X31+32], W10
	051 Call AsyncTaskMethodBuilder.Start, X0, X1
	052 Move X0, X20
	053 Move X1, X31
	054 Call AsyncTaskMethodBuilder.get_Task, X0
	055 Move X20, [X31+96]
	056 Move X19, [X31+104]
	057 Move X30, [X31+80]
	058 Move X21, [X31+88]
	059 Add X31, X31, 112
	060 Return X0

Method: System.Void WebSocketImpl_Pong(System.Object sender, Nakama.Ninja.WebSockets.PongEventArgs e)

Disassembly:
	0x0348EC78 ADRP X8, 0xCA3000
	0x0348EC7C LDR X8, [X8 + 0x420]
	0x0348EC80 LDR X8, [X8]
	0x0348EC84 STR X8, [X1 + 0x20]
	0x0348EC88 CBZ X19, 0x348EDC8
	0x0348EC8C MOV X0, X19

ISIL:
	001 Move X8, [X0]
	002 Move [X0+72], X31
	003 Move X1, X2
	004 Move X3, [X8+424]
	005 Move X8, [X8+432]
	006 Move X2, X8
	007 CallNoReturn X3

