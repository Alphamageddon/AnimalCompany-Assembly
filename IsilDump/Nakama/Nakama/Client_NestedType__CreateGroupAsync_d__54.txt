Type: Nakama.Client/<CreateGroupAsync>d__54

Method: System.Void MoveNext()

Disassembly:
	0x034516D8 LDR X8, [X21]
	0x034516DC LDR X1, [X23]
	0x034516E0 MOV X22, X0
	0x034516E4 LDRH W9, [X8 + 0x12E]
	0x034516E8 CBZ X9, 0x345170C
	0x034516EC LDR X10, [X8 + 0xB0]
	0x034516F0 ADD X10, X10, 0x8
	0x034516F4 LDUR X11, [X10 - 0x8]
	0x034516F8 CMP X11, X1
	0x034516FC B.EQ 0x345171C
	0x03451700 SUBS X9, X9, 0x1
	0x03451704 ADD X10, X10, 0x10
	0x03451708 B.NE 0x34516F4
	0x0345170C MOVZ W2, 0xB
	0x03451710 MOV X0, X21
	0x03451714 BL 0x1C5C788
	0x03451718 B 0x345172C
	0x0345171C LDR W9, [X10]
	0x03451720 ADD W9, W9, 0xB
	0x03451724 ADD X8, X8, W9, 0x4, SXTW
	0x03451728 ADD X0, X8, 0x138
	0x0345172C LDP X8, X2, [X0]
	0x03451730 MOV X0, X21
	0x03451734 MOV X1, X22
	0x03451738 BLR X8
	0x0345173C TBZ X0, 0x0, 0x34517D0
	0x03451740 LDR X8, [X19 + 0x50]
	0x03451744 CBZ X8, 0x3451954
	0x03451748 LDR X1, [X8 + 0x18]
	0x0345174C LDR X3, [X19 + 0x48]
	0x03451750 LDR X4, [X8 + 0x30]
	0x03451754 MOV X0, X20
	0x03451758 MOV X2, X31
	0x0345175C MOV X5, X31
	0x03451760 BL 0x34440A8
	0x03451764 CBZ X0, 0x3451958
	0x03451768 ADRP X8, 0xCA3000
	0x0345176C LDR X8, [X8 + 0x840]
	0x03451770 LDR X1, [X8]
	0x03451774 BL 0x269F5D0
	0x03451778 ADRP X8, 0xCA3000
	0x0345177C LDR X8, [X8 + 0x838]
	0x03451780 STR X0, [X31 + 0x20]
	0x03451784 LDR X1, [X8]
	0x03451788 ADD X0, X31, 0x20
	0x0345178C BL 0x2677430
	0x03451790 TBNZ X0, 0x0, 0x3451588
	0x03451794 STR W31, [X19]
	0x03451798 LDR X8, [X31 + 0x20]
	0x0345179C STR X8, [X19 + 0x58]
	0x034517A0 LDR X0, [X25]
	0x034517A4 LDR W8, [X0 + 0xE0]
	0x034517A8 CBNZ W8, 0x34517B0
	0x034517AC BL 0x1C16DFC
	0x034517B0 ADRP X8, 0xCDE000
	0x034517B4 LDR X8, [X8 + 0xC00]
	0x034517B8 ADD X0, X19, 0x8
	0x034517BC LDR X3, [X8]
	0x034517C0 ADD X1, X31, 0x20
	0x034517C4 MOV X2, X19
	0x034517C8 BL 0x2188178
	0x034517CC B 0x3451914
	0x034517D0 CBZ X20, 0x3451938
	0x034517D4 ADRP X8, 0xCAA000
	0x034517D8 LDR X8, [X8 + 0x818]
	0x034517DC LDR X21, [X20 + 0x58]
	0x034517E0 LDR X23, [X19 + 0x50]
	0x034517E4 LDR X0, [X8]
	0x034517E8 BL 0x1C16F10
	0x034517EC ADRP X8, 0xCDE000
	0x034517F0 LDR X8, [X8 + 0xC10]
	0x034517F4 MOV X22, X0
	0x034517F8 LDR X2, [X8]
	0x034517FC MOV X1, X23
	0x03451800 MOV X3, X31
	0x03451804 BL 0x2D27AA8
	0x03451808 LDR X8, [X19 + 0x50]
	0x0345180C CBZ X8, 0x345192C
	0x03451810 ADRP X9, 0xCDE000
	0x03451814 LDR X23, [X19 + 0x48]
	0x03451818 LDR X9, [X9 + 0x7C8]
	0x0345181C CBNZ X23, 0x3451824
	0x03451820 LDR X23, [X20 + 0x18]
	0x03451824 LDR X20, [X8 + 0x18]
	0x03451828 LDR X1, [X8 + 0x30]
	0x0345182C LDR X2, [X9]
	0x03451830 STP X31, X31, [X31 + 0x8]
	0x03451834 ADD X0, X31, 0x8
	0x03451838 BL 0x242E368
	0x0345183C ADRP X8, 0xCDE000
	0x03451840 LDR X8, [X8 + 0x7D0]
	0x03451844 LDR X0, [X8]
	0x03451848 BL 0x1C16F10
	0x0345184C LDP X3, X4, [X31 + 0x8]
	0x03451850 MOV X24, X0
	0x03451854 MOV X1, X20
	0x03451858 MOV X2, X23
	0x0345185C MOV X5, X31
	0x03451860 BL 0x3465404
	0x03451864 CBZ X21, 0x3451930
	0x03451868 MOV X0, X21
	0x0345186C MOV X1, X22
	0x03451870 MOV X2, X24
	0x03451874 MOV X3, X31
	0x03451878 BL 0x3465B68
	0x0345187C CBZ X0, 0x3451934
	0x03451880 MOV X1, X31
	0x03451884 BL 0x33ED394
	0x03451888 STR X0, [X31 + 0x18]
	0x0345188C ADD X0, X31, 0x18
	0x03451890 MOV X1, X31
	0x03451894 BL 0x32C3A80
	0x03451898 TBZ X0, 0x0, 0x34518D8
	0x0345189C ADD X0, X31, 0x18
	0x034518A0 MOV X1, X31
	0x034518A4 BL 0x32C3B4C
	0x034518A8 MOVN W8, 0x1
	0x034518AC STR W8, [X19]
	0x034518B0 STR X31, [X19 + 0x50]
	0x034518B4 LDR X0, [X25]
	0x034518B8 ADD X19, X19, 0x8
	0x034518BC LDR W8, [X0 + 0xE0]
	0x034518C0 CBNZ W8, 0x34518C8
	0x034518C4 BL 0x1C16DFC
	0x034518C8 MOV X0, X19
	0x034518CC MOV X1, X31
	0x034518D0 BL 0x32C4864
	0x034518D4 B 0x3451914
	0x034518D8 MOVZ W8, 0x1
	0x034518DC STR W8, [X19]
	0x034518E0 LDR X8, [X31 + 0x18]
	0x034518E4 STR X8, [X19 + 0x60]
	0x034518E8 LDR X0, [X25]
	0x034518EC LDR W8, [X0 + 0xE0]
	0x034518F0 CBNZ W8, 0x34518F8
	0x034518F4 BL 0x1C16DFC
	0x034518F8 ADRP X8, 0xCDE000
	0x034518FC LDR X8, [X8 + 0xC08]
	0x03451900 ADD X0, X19, 0x8
	0x03451904 LDR X3, [X8]
	0x03451908 ADD X1, X31, 0x18
	0x0345190C MOV X2, X19
	0x03451910 BL 0x218983C
	0x03451914 LDP X20, X19, [X31 + 0x60]
	0x03451918 LDP X22, X21, [X31 + 0x50]
	0x0345191C LDP X24, X23, [X31 + 0x40]
	0x03451920 LDP X30, X25, [X31 + 0x30]
	0x03451924 ADD X31, X31, 0x70
	0x03451928 RET
	0x0345192C BL 0x1C16F20
	0x03451930 BL 0x1C16F20
	0x03451934 BL 0x1C16F20
	0x03451938 BL 0x1C16F20
	0x0345193C BL 0x1C16F20
	0x03451940 BL 0x1C16F20
	0x03451944 BL 0x1C16F20
	0x03451948 BL 0x1C16F20
	0x0345194C BL 0x1C16F20
	0x03451950 BL 0x1C16F20
	0x03451954 BL 0x1C16F20
	0x03451958 BL 0x1C16F20
	0x0345195C B 0x34519D0
	0x03451960 B 0x34519D0
	0x03451964 B 0x34519D0
	0x03451968 B 0x34519D0
	0x0345196C B 0x34519D0
	0x03451970 B 0x34519D0
	0x03451974 B 0x34519D0
	0x03451978 B 0x34519D0
	0x0345197C B 0x34519D0
	0x03451980 B 0x34519D0
	0x03451984 B 0x34519D0
	0x03451988 B 0x34519D0
	0x0345198C B 0x34519D0
	0x03451990 B 0x34519D0
	0x03451994 B 0x34519D0
	0x03451998 B 0x34519D0
	0x0345199C B 0x34519D0
	0x034519A0 B 0x34519D0
	0x034519A4 B 0x34519D0
	0x034519A8 B 0x34519D0
	0x034519AC B 0x34519D0
	0x034519B0 B 0x34519D0
	0x034519B4 B 0x34519D0
	0x034519B8 B 0x34519D0
	0x034519BC B 0x34519D0
	0x034519C0 B 0x34519D0
	0x034519C4 B 0x34519D0
	0x034519C8 B 0x34519D0
	0x034519CC B 0x34519D0
	0x034519D0 MOV X20, X0
	0x034519D4 CMP W1, 0x1
	0x034519D8 B.NE 0x3451A6C
	0x034519DC MOV X0, X20
	0x034519E0 BL 0x3EB1AD0
	0x034519E4 MOV X20, X0
	0x034519E8 ADRP X0, 0xCA2000
	0x034519EC LDR X0, [X0 + 0x7D0]
	0x034519F0 BL 0x1C16D08
	0x034519F4 LDR X8, [X20]
	0x034519F8 LDR X1, [X8]
	0x034519FC BL 0x1C17270
	0x03451A00 TBZ X0, 0x0, 0x3451A44
	0x03451A04 LDR X20, [X20]
	0x03451A08 BL 0x3EB1AE0
	0x03451A0C MOVN W8, 0x1
	0x03451A10 STR X31, [X19 + 0x50]
	0x03451A14 STR W8, [X19], #0x8
	0x03451A18 ADRP X0, 0xCA5000
	0x03451A1C LDR X0, [X0 + 0x280]
	0x03451A20 BL 0x1C16D08
	0x03451A24 LDR W8, [X0 + 0xE0]
	0x03451A28 CBNZ W8, 0x3451A30
	0x03451A2C BL 0x1C16DFC
	0x03451A30 MOV X0, X19
	0x03451A34 MOV X1, X20
	0x03451A38 MOV X2, X31
	0x03451A3C BL 0x32C4908
	0x03451A40 B 0x3451914
	0x03451A44 MOVZ W0, 0x8
	0x03451A48 BL 0x3EB1AF0
	0x03451A4C LDR X8, [X20]
	0x03451A50 STR X8, [X0]
	0x03451A54 ADRP X1, 0xA63000
	0x03451A58 ADD X1, X1, 0xE58
	0x03451A5C MOV X2, X31
	0x03451A60 BL 0x3EB1B00
	0x03451A64 MOV X20, X0
	0x03451A68 BL 0x3EB1AE0
	0x03451A6C MOV X0, X20
	0x03451A70 BL 0x1D2C690
	0x03451A74 BL 0x1990590
	0x03451A78 STR X30, [X31 - 0x30]!
	0x03451A7C STP X22, X21, [X31 + 0x10]
	0x03451A80 STP X20, X19, [X31 + 0x20]
	0x03451A84 ADRP X21, 0xF8C000
	0x03451A88 ADRP X22, 0xCA5000
	0x03451A8C LDRB W8, [X21 + 0x770]
	0x03451A90 LDR X22, [X22 + 0x280]
	0x03451A94 MOV X19, X1
	0x03451A98 MOV X20, X0
	0x03451A9C TBNZ X8, 0x0, 0x3451AB4
	0x03451AA0 ADRP X0, 0xCA5000
	0x03451AA4 LDR X0, [X0 + 0x280]
	0x03451AA8 BL 0x1C16CF4
	0x03451AAC MOVZ W8, 0x1
	0x03451AB0 STRB W8, [X21 + 0x770]
	0x03451AB4 LDR X0, [X22]
	0x03451AB8 LDR W8, [X0 + 0xE0]
	0x03451ABC CBNZ W8, 0x3451AC4
	0x03451AC0 BL 0x1C16DFC
	0x03451AC4 ADD X0, X20, 0x8
	0x03451AC8 MOV X1, X19
	0x03451ACC LDP X20, X19, [X31 + 0x20]
	0x03451AD0 LDP X22, X21, [X31 + 0x10]
	0x03451AD4 MOV X2, X31
	0x03451AD8 LDR X30, [X31], #0x30
	0x03451ADC B 0x32C477C
	0x03451AE0 SUB X31, X31, 0x70
	0x03451AE4 STP X30, X25, [X31 + 0x30]
	0x03451AE8 STP X24, X23, [X31 + 0x40]
	0x03451AEC STP X22, X21, [X31 + 0x50]
	0x03451AF0 STP X20, X19, [X31 + 0x60]
	0x03451AF4 ADRP X20, 0xF8C000
	0x03451AF8 LDRB W8, [X20 + 0x771]
	0x03451AFC MOV X19, X0
	0x03451B00 TBNZ X8, 0x0, 0x3451BB4
	0x03451B04 ADRP X0, 0xCDE000
	0x03451B08 LDR X0, [X0 + 0xC20]
	0x03451B0C BL 0x1C16CF4
	0x03451B10 ADRP X0, 0xCDE000
	0x03451B14 LDR X0, [X0 + 0xC28]
	0x03451B18 BL 0x1C16CF4
	0x03451B1C ADRP X0, 0xCA5000
	0x03451B20 LDR X0, [X0 + 0x280]
	0x03451B24 BL 0x1C16CF4
	0x03451B28 ADRP X0, 0xCA4000
	0x03451B2C LDR X0, [X0 + 0xA10]
	0x03451B30 BL 0x1C16CF4
	0x03451B34 ADRP X0, 0xCA3000
	0x03451B38 LDR X0, [X0 + 0x9F0]
	0x03451B3C BL 0x1C16CF4
	0x03451B40 ADRP X0, 0xCAA000
	0x03451B44 LDR X0, [X0 + 0x818]
	0x03451B48 BL 0x1C16CF4
	0x03451B4C ADRP X0, 0xCA3000
	0x03451B50 LDR X0, [X0 + 0x818]
	0x03451B54 BL 0x1C16CF4
	0x03451B58 ADRP X0, 0xCDE000
	0x03451B5C LDR X0, [X0 + 0x7C8]
	0x03451B60 BL 0x1C16CF4
	0x03451B64 ADRP X0, 0xCDE000
	0x03451B68 LDR X0, [X0 + 0x7D0]
	0x03451B6C BL 0x1C16CF4
	0x03451B70 ADRP X0, 0xCA3000
	0x03451B74 LDR X0, [X0 + 0x830]
	0x03451B78 BL 0x1C16CF4
	0x03451B7C ADRP X0, 0xCA3000
	0x03451B80 LDR X0, [X0 + 0x838]
	0x03451B84 BL 0x1C16CF4
	0x03451B88 ADRP X0, 0xCA3000
	0x03451B8C LDR X0, [X0 + 0x840]
	0x03451B90 BL 0x1C16CF4
	0x03451B94 ADRP X0, 0xCDE000
	0x03451B98 LDR X0, [X0 + 0xC30]
	0x03451B9C BL 0x1C16CF4
	0x03451BA0 ADRP X0, 0xCDE000
	0x03451BA4 LDR X0, [X0 + 0xC38]
	0x03451BA8 BL 0x1C16CF4
	0x03451BAC MOVZ W8, 0x1
	0x03451BB0 STRB W8, [X20 + 0x771]
	0x03451BB4 STP X31, X31, [X31 + 0x20]
	0x03451BB8 STR X31, [X31 + 0x18]
	0x03451BBC ADRP X25, 0xCA5000
	0x03451BC0 LDR W8, [X19]
	0x03451BC4 LDR X20, [X19 + 0x20]
	0x03451BC8 LDR X25, [X25 + 0x280]
	0x03451BCC CBZ W8, 0x3451BF0
	0x03451BD0 CMP W8, 0x1
	0x03451BD4 B.NE 0x3451C1C
	0x03451BD8 LDR X8, [X19 + 0x58]
	0x03451BDC MOVN W9, 0x0
	0x03451BE0 STR X8, [X31 + 0x18]
	0x03451BE4 STR X31, [X19 + 0x58]
	0x03451BE8 STR W9, [X19]
	0x03451BEC B 0x3451F18
	0x03451BF0 LDR X8, [X19 + 0x50]
	0x03451BF4 MOVN W9, 0x0
	0x03451BF8 STR X8, [X31 + 0x20]
	0x03451BFC STR X31, [X19 + 0x50]
	0x03451C00 STR W9, [X19]
	0x03451C04 ADRP X8, 0xCA3000
	0x03451C08 LDR X8, [X8 + 0x830]
	0x03451C0C ADD X0, X31, 0x20
	0x03451C10 LDR X1, [X8]
	0x03451C14 BL 0x2677474
	0x03451C18 B 0x3451E4C
	0x03451C1C ADRP X8, 0xCDE000
	0x03451C20 LDR X8, [X8 + 0xC38]
	0x03451C24 LDR X0, [X8]
	0x03451C28 BL 0x1C16F10
	0x03451C2C MOV X21, X0
	0x03451C30 MOV X1, X31
	0x03451C34 BL 0x3448B04
	0x03451C38 STR X21, [X19 + 0x48]
	0x03451C3C CBZ X21, 0x3451FB8
	0x03451C40 LDR X8, [X19 + 0x20]
	0x03451C44 STR X8, [X21 + 0x10]
	0x03451C48 LDR X8, [X19 + 0x28]
	0x03451C4C STR X8, [X21 + 0x18]
	0x03451C50 LDR X8, [X19 + 0x30]
	0x03451C54 STR X8, [X21 + 0x20]
	0x03451C58 LDR X8, [X19 + 0x38]
	0x03451C5C STR X8, [X21 + 0x28]
	0x03451C60 CBZ X20, 0x3451FBC
	0x03451C64 LDRB W8, [X20 + 0x10]
	0x03451C68 CBZ W8, 0x3451E50
	0x03451C6C LDR X8, [X19 + 0x48]
	0x03451C70 CBZ X8, 0x3451FC0
	0x03451C74 LDR X21, [X8 + 0x18]
	0x03451C78 CBZ X21, 0x3451FC4
	0x03451C7C ADRP X23, 0xCA3000
	0x03451C80 LDR X8, [X21]
	0x03451C84 LDR X23, [X23 + 0x818]
	0x03451C88 LDRH W9, [X8 + 0x12E]
	0x03451C8C LDR X1, [X23]
	0x03451C90 CBZ X9, 0x3451CB4
	0x03451C94 LDR X10, [X8 + 0xB0]
	0x03451C98 ADD X10, X10, 0x8
	0x03451C9C LDUR X11, [X10 - 0x8]
	0x03451CA0 CMP X11, X1
	0x03451CA4 B.EQ 0x3451CC4
	0x03451CA8 SUBS X9, X9, 0x1
	0x03451CAC ADD X10, X10, 0x10
	0x03451CB0 B.NE 0x3451C9C
	0x03451CB4 MOVZ W2, 0x7
	0x03451CB8 MOV X0, X21
	0x03451CBC BL 0x1C5C788
	0x03451CC0 B 0x3451CD4
	0x03451CC4 LDR W9, [X10]
	0x03451CC8 ADD W9, W9, 0x7
	0x03451CCC ADD X8, X8, W9, 0x4, SXTW
	0x03451CD0 ADD X0, X8, 0x138
	0x03451CD4 LDP X8, X1, [X0]
	0x03451CD8 MOV X0, X21
	0x03451CDC BLR X8
	0x03451CE0 MOV X1, X31
	0x03451CE4 BL 0x32277A8
	0x03451CE8 TBNZ X0, 0x0, 0x3451E4C
	0x03451CEC LDR X8, [X19 + 0x48]
	0x03451CF0 CBZ X8, 0x3451FC8
	0x03451CF4 ADRP X9, 0xCA3000
	0x03451CF8 LDR X9, [X9 + 0x9F0]
	0x03451CFC LDR X21, [X8 + 0x18]
	0x03451D00 LDR X0, [X9]
	0x03451D04 LDR W9, [X0 + 0xE0]
	0x03451D08 CBNZ W9, 0x3451D10
	0x03451D0C BL 0x1C16DFC
	0x03451D10 MOV X0, X31
	0x03451D14 BL 0x33616A4
	0x03451D18 ADRP X22, 0xCA4000
	0x03451D1C LDR X22, [X22 + 0xA10]
	0x03451D20 MOV X8, X0
	0x03451D24 STR X8, [X31 + 0x28]
	0x03451D28 LDR X0, [X22]
	0x03451D2C LDR W8, [X0 + 0xE0]
	0x03451D30 CBNZ W8, 0x3451D3C
	0x03451D34 BL 0x1C16DFC
	0x03451D38 LDR X0, [X22]
	0x03451D3C LDR X8, [X0 + 0xB8]
	0x03451D40 LDR X1, [X8]
	0x03451D44 ADD X0, X31, 0x28
	0x03451D48 MOV X2, X31
	0x03451D4C BL 0x335FC68
	0x03451D50 CBZ X21, 0x3451FCC
	0x03451D54 LDR X8, [X21]
	0x03451D58 LDR X1, [X23]
	0x03451D5C MOV X22, X0
	0x03451D60 LDRH W9, [X8 + 0x12E]
	0x03451D64 CBZ X9, 0x3451D88
	0x03451D68 LDR X10, [X8 + 0xB0]
	0x03451D6C ADD X10, X10, 0x8
	0x03451D70 LDUR X11, [X10 - 0x8]
	0x03451D74 CMP X11, X1
	0x03451D78 B.EQ 0x3451D98

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF8D000
	011 Move W8, [X20+1899]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCDF000
	018 Move X0, [X0+2968]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDF000
	021 Move X0, [X0+2976]
	022 Call 0x1C17CF4
	023 Move X0, 0xCDE000
	024 Move X0, [X0+2992]
	025 Call 0x1C17CF4
	026 Move X0, 0xCDE000
	027 Move X0, [X0+1192]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA5000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA4000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCDF000
	036 Move X0, [X0+2984]
	037 Call 0x1C17CF4
	038 Move X0, 0xCA4000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDF000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCDF000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCDF000
	048 Move X0, [X0+2992]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA4000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDF000
	054 Move X0, [X0+3000]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDF000
	057 Move X0, [X0+3008]
	058 Call 0x1C17CF4
	059 Move X0, 0xCA4000
	060 Move X0, [X0+2104]
	061 Call 0x1C17CF4
	062 Move X0, 0xCA4000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCDF000
	066 Move X0, [X0+3016]
	067 Call 0x1C17CF4
	068 Move X0, 0xCDF000
	069 Move X0, [X0+3024]
	070 Call 0x1C17CF4
	071 Move X0, 0xCDF000
	072 Move X0, [X0+3032]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1899], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCDE000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1192]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+120]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+120], X31
	092 Move [X19], W9
	093 Move X8, [X19+112]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+112], X31
	099 Move [X19], W9
	100 Move X8, 0xCA4000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCDF000
	106 Move X8, [X8+3032]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass54_0..ctor, X0
	112 Move [X19+104], X21
	113 Compare X21, 0
	114 JumpIfEqual {389}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move V0, [X19+3]
	120 Move [X21+2], V0
	121 Move V0, [X19+4]
	122 Move [X21+3], V0
	123 Move W8, [X19+80]
	124 Move [X21+64], W8
	125 Move W8, [X19+84]
	126 Move [X21+68], W8
	127 Move X8, [X19+88]
	128 Move [X21+72], X8
	129 Compare X20, 0
	130 JumpIfEqual {390}
	131 Move W8, [X20+16]
	132 Compare W8, 0
	133 JumpIfEqual {271}
	134 Move X8, [X19+104]
	135 Compare X8, 0
	136 JumpIfEqual {391}
	137 Move X21, [X8+24]
	138 Compare X21, 0
	139 JumpIfEqual {392}
	140 Move X23, 0xCA4000
	141 Move X8, [X21]
	142 Move X23, [X23+2072]
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Move X1, [X23]
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move W2, 7
	154 Move X0, X21
	155 Call 0x1C5D788
	156 Move W9, [X10]
	157 Add W9, W9, 7
	158 Add X8, X8, W9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X1, [X0+8]
	162 Move X0, X21
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X1, X31
	165 Call String.IsNullOrEmpty, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {269}
	170 Move X8, [X19+104]
	171 Compare X8, 0
	172 JumpIfEqual {393}
	173 Move X9, 0xCA4000
	174 Move X9, [X9+2544]
	175 Move X21, [X8+24]
	176 Move X0, [X9]
	177 Move W9, [X0+224]
	178 Compare W9, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X0, X31
	182 Call DateTime.get_UtcNow
	183 Move X22, 0xCA5000
	184 Move X22, [X22+2576]
	185 Move X8, X0
	186 Move [X31+40], X8
	187 Move X0, [X22]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {193}
	191 Call 0x1C17DFC
	192 Move X0, [X22]
	193 Move X8, [X0+184]
	194 Move X1, [X8]
	195 Add X0, X31, 40
	196 Move X2, X31
	197 Call DateTime.Add, X0, X1
	198 Compare X21, 0
	199 JumpIfEqual {394}
	200 Move X8, [X21]
	201 Move X1, [X23]
	202 Move X22, X0
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move W2, 11
	213 Move X0, X21
	214 Call 0x1C5D788
	215 Move W9, [X10]
	216 Add W9, W9, 11
	217 Add X8, X8, W9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X2, [X0+8]
	221 Move X0, X21
	222 Move X1, X22
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {269}
	228 Move X8, [X19+104]
	229 Compare X8, 0
	230 JumpIfEqual {395}
	231 Move X1, [X8+24]
	232 Move X3, [X19+96]
	233 Move X4, [X8+72]
	234 Move X0, X20
	235 Move X2, X31
	236 Move X5, X31
	237 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	238 Compare X0, 0
	239 JumpIfEqual {396}
	240 Move X8, 0xCA4000
	241 Move X8, [X8+2112]
	242 Move X1, [X8]
	243 Call Task`1<Object>.GetAwaiter, X0
	244 Move X8, 0xCA4000
	245 Move X8, [X8+2104]
	246 Move [X31+32], X0
	247 Move X1, [X8]
	248 Add X0, X31, 32
	249 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfEqual {100}
	254 Move [X19], W31
	255 Move X8, [X31+32]
	256 Move [X19+112], X8
	257 Move X0, [X25]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X8, 0xCDF000
	263 Move X8, [X8+2976]
	264 Add X0, X19, 8
	265 Move X3, [X8]
	266 Add X1, X31, 32
	267 Move X2, X19
	268 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	269 Compare X20, 0
	270 JumpIfEqual {388}
	271 Move X8, 0xCDF000
	272 Move X8, [X8+2984]
	273 Move X21, [X20+88]
	274 Move X23, [X19+104]
	275 Move X0, [X8]
	276 Call 0x1C17F10
	277 Move X8, 0xCDF000
	278 Move X8, [X8+3024]
	279 Move X22, X0
	280 Move X2, [X8]
	281 Move X1, X23
	282 Move X3, X31
	283 Call Func`1<Object>..ctor, X0, X1, X2
	284 Move X8, [X19+104]
	285 Compare X8, 0
	286 JumpIfEqual {385}
	287 Move X9, 0xCDF000
	288 Move X23, [X19+96]
	289 Move X9, [X9+1992]
	290 Compare X23, 0
	291 JumpIfNotEqual {293}
	292 Move X23, [X20+24]
	293 Move X20, [X8+24]
	294 Move X1, [X8+72]
	295 Move X2, [X9]
	296 Move [X31+8], X31
	297 Move [X31+16], X31
	298 Add X0, X31, 8
	299 Call Nullable`1<CancellationToken>..ctor, X0, X1
	300 Move X8, 0xCDF000
	301 Move X8, [X8+2000]
	302 Move X0, [X8]
	303 Call 0x1C17F10
	304 Move X3, [X31+8]
	305 Move X4, [X31+16]
	306 Move X24, X0
	307 Move X1, X20
	308 Move X2, X23
	309 Move X5, X31
	310 Call RetryHistory..ctor, X0, X1, X2, X3
	311 Compare X21, 0
	312 JumpIfEqual {386}
	313 Move X8, 0xCDF000
	314 Move X8, [X8+2992]
	315 Move X3, [X8]
	316 Move X0, X21
	317 Move X1, X22
	318 Move X2, X24
	319 Call 0x2244230, X0, X1, X2
	320 Compare X0, 0
	321 JumpIfEqual {387}
	322 Move X8, 0xCDF000
	323 Move X8, [X8+3016]
	324 Move X1, [X8]
	325 Call Task`1<Object>.GetAwaiter, X0
	326 Move X8, 0xCDF000
	327 Move X8, [X8+3008]
	328 Move [X31+24], X0
	329 Move X1, [X8]
	330 Add X0, X31, 24
	331 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	332 Move TEMP, X0
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfNotEqual {359}
	336 Move X8, 0xCDF000
	337 Move X8, [X8+3000]
	338 Add X0, X31, 24
	339 Move X1, [X8]
	340 Call TaskAwaiter`1<Object>.GetResult, X0
	341 Move TEMP, 1
	342 Not TEMP
	343 Move W8, TEMP
	344 Move [X19], W8
	345 Move [X19+104], X31
	346 Move X20, X0
	347 Move X0, [X25]
	348 Move X21, 0xCDE000
	349 Add X19, X19, 8
	350 Move W8, [X0+224]
	351 Move X21, [X21+2992]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 Move X2, [X21]
	356 Move X0, X19
	357 Move X1, X20
	358 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	359 Move W8, 1
	360 Move [X19], W8
	361 Move X8, [X31+24]
	362 Move [X19+120], X8
	363 Move X0, [X25]
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {368}
	367 Call 0x1C17DFC
	368 Move X8, 0xCDF000
	369 Move X8, [X8+2968]
	370 Add X0, X19, 8
	371 Move X3, [X8]
	372 Add X1, X31, 24
	373 Move X2, X19
	374 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	375 Move X20, [X31+96]
	376 Move X19, [X31+104]
	377 Move X22, [X31+80]
	378 Move X21, [X31+88]
	379 Move X24, [X31+64]
	380 Move X23, [X31+72]
	381 Move X30, [X31+48]
	382 Move X25, [X31+56]
	383 Add X31, X31, 112
	384 Return 
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Move X20, X0
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X0, X20
	400 Call 0x3EB2AD0
	401 Move X20, X0
	402 Move X0, 0xCA3000
	403 Move X0, [X0+2000]
	404 Call 0x1C17D08
	405 Move X8, [X20]
	406 Move X1, [X8]
	407 Call 0x1C18270
	408 Move TEMP, X0
	409 And TEMP, TEMP, 1
	410 Compare TEMP, 1
	411 JumpIfNotEqual {433}
	412 Move X20, [X20]
	413 Call 0x3EB2AE0
	414 Move TEMP, 1
	415 Not TEMP
	416 Move W8, TEMP
	417 Move [X19+104], X31
	418 Move [X19+8], W8
	419 Move X0, 0xCDE000
	420 Move X0, [X0+1192]
	421 Call 0x1C17D08
	422 Move W8, [X0+224]
	423 Compare W8, 0
	424 JumpIfNotEqual {426}
	425 Call 0x1C17DFC
	426 Move X0, 0xCDE000
	427 Move X0, [X0+3032]
	428 Call 0x1C17D08
	429 Move X2, X0
	430 Move X0, X19
	431 Move X1, X20
	432 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	433 Move W0, 8
	434 Call 0x3EB2AF0
	435 Move X8, [X20]
	436 Move [X0], X8
	437 Move X1, 0xA64000
	438 Add X1, X1, 3672
	439 Move X2, X31
	440 Call 0x3EB2B00
	441 Move X20, X0
	442 Call 0x3EB2AE0
	443 Move X0, X20
	444 Call 0x1D2D690
	445 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03451D7C SUBS X9, X9, 0x1
	0x03451D80 ADD X10, X10, 0x10
	0x03451D84 B.NE 0x3451D70
	0x03451D88 MOVZ W2, 0xB
	0x03451D8C MOV X0, X21
	0x03451D90 BL 0x1C5C788
	0x03451D94 B 0x3451DA8
	0x03451D98 LDR W9, [X10]
	0x03451D9C ADD W9, W9, 0xB
	0x03451DA0 ADD X8, X8, W9, 0x4, SXTW
	0x03451DA4 ADD X0, X8, 0x138
	0x03451DA8 LDP X8, X2, [X0]
	0x03451DAC MOV X0, X21
	0x03451DB0 MOV X1, X22
	0x03451DB4 BLR X8
	0x03451DB8 TBZ X0, 0x0, 0x3451E4C
	0x03451DBC LDR X8, [X19 + 0x48]
	0x03451DC0 CBZ X8, 0x3451FD0
	0x03451DC4 LDR X1, [X8 + 0x18]
	0x03451DC8 LDR X3, [X19 + 0x40]
	0x03451DCC LDR X4, [X8 + 0x28]
	0x03451DD0 MOV X0, X20
	0x03451DD4 MOV X2, X31
	0x03451DD8 MOV X5, X31
	0x03451DDC BL 0x34440A8
	0x03451DE0 CBZ X0, 0x3451FD4
	0x03451DE4 ADRP X8, 0xCA3000
	0x03451DE8 LDR X8, [X8 + 0x840]
	0x03451DEC LDR X1, [X8]
	0x03451DF0 BL 0x269F5D0
	0x03451DF4 ADRP X8, 0xCA3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF8D000
	007 Move X21, 0xCDE000
	008 Move W8, [X22+1900]
	009 Move X21, [X21+1192]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCDE000
	017 Move X0, [X0+3040]
	018 Call 0x1C17CF4
	019 Move X0, 0xCDE000
	020 Move X0, [X0+1192]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1900], W8
	024 Move X0, [X21]
	025 Move X21, 0xCDE000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3040]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

