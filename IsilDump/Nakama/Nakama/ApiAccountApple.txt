Type: Nakama.ApiAccountApple

Method: System.String get_Token()

Disassembly:
	0x034024C4 LDR X0, [X0 + 0x18]
	0x034024C8 RET

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Token(System.String value)

Disassembly:
	0x034024CC STR X1, [X0 + 0x18]
	0x034024D0 RET

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x034024D4 STR X30, [X31 - 0x20]!
	0x034024D8 STP X20, X19, [X31 + 0x10]
	0x034024DC ADRP X20, 0xFDB000
	0x034024E0 LDRB W8, [X20 + 0x515]
	0x034024E4 MOV X19, X0
	0x034024E8 TBNZ X8, 0x0, 0x340250C
	0x034024EC ADRP X0, 0xCF2000
	0x034024F0 LDR X0, [X0 + 0x6C0]
	0x034024F4 BL 0x1C16CF4
	0x034024F8 ADRP X0, 0xCF2000
	0x034024FC LDR X0, [X0 + 0x6D0]
	0x03402500 BL 0x1C16CF4
	0x03402504 MOVZ W8, 0x1
	0x03402508 STRB W8, [X20 + 0x515]
	0x0340250C LDR X19, [X19 + 0x20]
	0x03402510 CBNZ X19, 0x3402538
	0x03402514 ADRP X8, 0xCF2000
	0x03402518 LDR X8, [X8 + 0x6D0]
	0x0340251C LDR X0, [X8]
	0x03402520 BL 0x1C16F10
	0x03402524 ADRP X8, 0xCF2000
	0x03402528 LDR X8, [X8 + 0x6C0]
	0x0340252C MOV X19, X0
	0x03402530 LDR X1, [X8]
	0x03402534 BL 0x2AA4804
	0x03402538 MOV X0, X19
	0x0340253C LDP X20, X19, [X31 + 0x10]
	0x03402540 LDR X30, [X31], #0x20
	0x03402544 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFDC000
	005 Move W8, [X20+1295]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCF3000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCF3000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1295], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCF3000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCF3000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x03402548 LDR X0, [X0 + 0x20]
	0x0340254C RET

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03402550 STR X1, [X0 + 0x20]
	0x03402554 RET

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03402558 SUB X31, X31, 0x70
	0x0340255C STP X29, X30, [X31 + 0x10]
	0x03402560 STP X28, X27, [X31 + 0x20]
	0x03402564 STP X26, X25, [X31 + 0x30]
	0x03402568 STP X24, X23, [X31 + 0x40]
	0x0340256C STP X22, X21, [X31 + 0x50]
	0x03402570 STP X20, X19, [X31 + 0x60]
	0x03402574 ADRP X24, 0xFDB000
	0x03402578 ADRP X19, 0xCF1000
	0x0340257C ADRP X23, 0xD2B000
	0x03402580 ADRP X21, 0xCF1000
	0x03402584 ADRP X22, 0xD2B000
	0x03402588 LDRB W8, [X24 + 0x516]
	0x0340258C LDR X19, [X19 + 0x988]
	0x03402590 LDR X23, [X23 + 0xD60]
	0x03402594 LDR X21, [X21 + 0x838]
	0x03402598 LDR X22, [X22 + 0xD90]
	0x0340259C MOV X20, X0
	0x034025A0 TBNZ X8, 0x0, 0x340266C
	0x034025A4 ADRP X0, 0xCF1000
	0x034025A8 LDR X0, [X0 + 0xE00]
	0x034025AC BL 0x1C16CF4
	0x034025B0 ADRP X0, 0xCF4000
	0x034025B4 LDR X0, [X0 + 0x190]
	0x034025B8 BL 0x1C16CF4
	0x034025BC ADRP X0, 0xCF4000
	0x034025C0 LDR X0, [X0 + 0x198]
	0x034025C4 BL 0x1C16CF4
	0x034025C8 ADRP X0, 0xCF1000
	0x034025CC LDR X0, [X0 + 0xE18]
	0x034025D0 BL 0x1C16CF4
	0x034025D4 ADRP X0, 0xCF4000
	0x034025D8 LDR X0, [X0 + 0x1B0]
	0x034025DC BL 0x1C16CF4
	0x034025E0 ADRP X0, 0xCF4000
	0x034025E4 LDR X0, [X0 + 0x1B8]
	0x034025E8 BL 0x1C16CF4
	0x034025EC ADRP X0, 0xCF1000
	0x034025F0 LDR X0, [X0 + 0xAC8]
	0x034025F4 BL 0x1C16CF4
	0x034025F8 ADRP X0, 0xD1E000
	0x034025FC LDR X0, [X0 + 0x360]
	0x03402600 BL 0x1C16CF4
	0x03402604 ADRP X0, 0xD1E000
	0x03402608 LDR X0, [X0 + 0xFB8]
	0x0340260C BL 0x1C16CF4
	0x03402610 ADRP X0, 0xCFC000
	0x03402614 LDR X0, [X0 + 0x6D8]
	0x03402618 BL 0x1C16CF4
	0x0340261C ADRP X0, 0xD2B000
	0x03402620 LDR X0, [X0 + 0xD80]
	0x03402624 BL 0x1C16CF4
	0x03402628 ADRP X0, 0xCF1000
	0x0340262C LDR X0, [X0 + 0x838]
	0x03402630 BL 0x1C16CF4
	0x03402634 ADRP X0, 0xD2B000
	0x03402638 LDR X0, [X0 + 0xD90]
	0x0340263C BL 0x1C16CF4
	0x03402640 ADRP X0, 0xCF1000
	0x03402644 LDR X0, [X0 + 0x988]
	0x03402648 BL 0x1C16CF4
	0x0340264C ADRP X0, 0xCF1000
	0x03402650 LDR X0, [X0 + 0x848]
	0x03402654 BL 0x1C16CF4
	0x03402658 ADRP X0, 0xD2B000
	0x0340265C LDR X0, [X0 + 0xD60]
	0x03402660 BL 0x1C16CF4
	0x03402664 MOVZ W8, 0x1
	0x03402668 STRB W8, [X24 + 0x516]
	0x0340266C LDR X0, [X19]
	0x03402670 LDR X2, [X20 + 0x10]
	0x03402674 LDR X1, [X23]
	0x03402678 LDR X3, [X21]
	0x0340267C MOV X4, X31
	0x03402680 BL 0x32277C4
	0x03402684 LDR X2, [X20 + 0x18]
	0x03402688 LDR X1, [X22]
	0x0340268C LDR X3, [X21]
	0x03402690 MOV X4, X31
	0x03402694 BL 0x32277C4
	0x03402698 LDR X27, [X19]
	0x0340269C STR X0, [X31 + 0x8]
	0x034026A0 MOV X0, X20
	0x034026A4 BL 0x34024D4
	0x034026A8 CBZ X0, 0x3402958
	0x034026AC ADRP X10, 0xCF4000
	0x034026B0 LDR X8, [X0]
	0x034026B4 LDR X10, [X10 + 0x190]
	0x034026B8 MOV X20, X0
	0x034026BC LDRH W9, [X8 + 0x12E]
	0x034026C0 LDR X1, [X10]
	0x034026C4 CBZ X9, 0x34026E8
	0x034026C8 LDR X10, [X8 + 0xB0]
	0x034026CC ADD X10, X10, 0x8
	0x034026D0 LDUR X11, [X10 - 0x8]
	0x034026D4 CMP X11, X1
	0x034026D8 B.EQ 0x34026F8
	0x034026DC SUBS X9, X9, 0x1
	0x034026E0 ADD X10, X10, 0x10
	0x034026E4 B.NE 0x34026D0
	0x034026E8 MOV X0, X20
	0x034026EC MOV W2, W31
	0x034026F0 BL 0x1C5C788
	0x034026F4 B 0x3402704
	0x034026F8 LDRSW X9, [X10]
	0x034026FC ADD X8, X8, X9, 0x4, LSL
	0x03402700 ADD X0, X8, 0x138
	0x03402704 ADRP X28, 0xCF1000
	0x03402708 ADRP X29, 0xCF4000
	0x0340270C ADRP X26, 0xCF1000
	0x03402710 ADRP X24, 0xD1E000
	0x03402714 ADRP X25, 0xD1E000
	0x03402718 ADRP X19, 0xCFC000
	0x0340271C LDR X28, [X28 + 0xE18]
	0x03402720 LDR X29, [X29 + 0x198]
	0x03402724 LDR X26, [X26 + 0xAC8]
	0x03402728 LDR X24, [X24 + 0x360]
	0x0340272C LDR X25, [X25 + 0xFB8]
	0x03402730 LDR X19, [X19 + 0x6D8]
	0x03402734 LDP X8, X1, [X0]
	0x03402738 MOV X0, X20
	0x0340273C BLR X8
	0x03402740 MOV X20, X0
	0x03402744 MOV X0, X27
	0x03402748 CBZ X20, 0x340293C
	0x0340274C LDR X8, [X20]
	0x03402750 LDR X1, [X28]
	0x03402754 MOV X21, X0
	0x03402758 LDRH W9, [X8 + 0x12E]
	0x0340275C CBZ X9, 0x3402780
	0x03402760 LDR X10, [X8 + 0xB0]
	0x03402764 ADD X10, X10, 0x8
	0x03402768 LDUR X11, [X10 - 0x8]
	0x0340276C CMP X11, X1
	0x03402770 B.EQ 0x3402790
	0x03402774 SUBS X9, X9, 0x1
	0x03402778 ADD X10, X10, 0x10
	0x0340277C B.NE 0x3402768
	0x03402780 MOV X0, X20
	0x03402784 MOV W2, W31
	0x03402788 BL 0x1C5C788
	0x0340278C B 0x340279C
	0x03402790 LDRSW X9, [X10]
	0x03402794 ADD X8, X8, X9, 0x4, LSL
	0x03402798 ADD X0, X8, 0x138
	0x0340279C LDP X8, X1, [X0]
	0x034027A0 MOV X0, X20
	0x034027A4 BLR X8
	0x034027A8 TBZ X0, 0x0, 0x3402880
	0x034027AC LDR X8, [X20]
	0x034027B0 LDR X1, [X29]
	0x034027B4 LDRH W9, [X8 + 0x12E]
	0x034027B8 CBZ X9, 0x34027DC
	0x034027BC LDR X10, [X8 + 0xB0]
	0x034027C0 ADD X10, X10, 0x8
	0x034027C4 LDUR X11, [X10 - 0x8]
	0x034027C8 CMP X11, X1
	0x034027CC B.EQ 0x34027EC
	0x034027D0 SUBS X9, X9, 0x1
	0x034027D4 ADD X10, X10, 0x10
	0x034027D8 B.NE 0x34027C4
	0x034027DC MOV X0, X20
	0x034027E0 MOV W2, W31
	0x034027E4 BL 0x1C5C788
	0x034027E8 B 0x34027F8
	0x034027EC LDRSW X9, [X10]
	0x034027F0 ADD X8, X8, X9, 0x4, LSL
	0x034027F4 ADD X0, X8, 0x138
	0x034027F8 LDP X8, X1, [X0]
	0x034027FC MOV X0, X20
	0x03402800 BLR X8
	0x03402804 MOV X23, X0
	0x03402808 LDR X0, [X26]
	0x0340280C MOV X22, X1
	0x03402810 MOVZ W1, 0x5
	0x03402814 BL 0x1C16D6C
	0x03402818 CBZ X0, 0x3402944
	0x0340281C LDR W8, [X0 + 0x18]
	0x03402820 CBZ W8, 0x340294C
	0x03402824 LDR X9, [X24]
	0x03402828 CMP W8, 0x1
	0x0340282C STR X9, [X0 + 0x20]
	0x03402830 B.EQ 0x3402940
	0x03402834 CMP W8, 0x2
	0x03402838 STR X23, [X0 + 0x28]
	0x0340283C B.LS 0x3402950
	0x03402840 LDR X9, [X25]
	0x03402844 CMP W8, 0x3
	0x03402848 STR X9, [X0 + 0x30]
	0x0340284C B.EQ 0x3402954
	0x03402850 CMP W8, 0x4
	0x03402854 STR X22, [X0 + 0x38]
	0x03402858 B.LS 0x3402948
	0x0340285C LDR X8, [X19]
	0x03402860 STR X8, [X0 + 0x40]
	0x03402864 MOV X1, X31
	0x03402868 BL 0x32278CC
	0x0340286C MOV X1, X0
	0x03402870 MOV X0, X21
	0x03402874 MOV X2, X31
	0x03402878 BL 0x321B938
	0x0340287C B 0x3402748
	0x03402880 MOV X22, X31
	0x03402884 CBZ X20, 0x34028E8
	0x03402888 LDR X8, [X20]
	0x0340288C ADRP X10, 0xCF1000
	0x03402890 LDRH W9, [X8 + 0x12E]
	0x03402894 LDR X10, [X10 + 0xE00]
	0x03402898 LDR X1, [X10]
	0x0340289C CBZ X9, 0x34028C0
	0x034028A0 LDR X10, [X8 + 0xB0]
	0x034028A4 ADD X10, X10, 0x8
	0x034028A8 LDUR X11, [X10 - 0x8]
	0x034028AC CMP X11, X1
	0x034028B0 B.EQ 0x34028D0
	0x034028B4 SUBS X9, X9, 0x1
	0x034028B8 ADD X10, X10, 0x10
	0x034028BC B.NE 0x34028A8
	0x034028C0 MOV X0, X20
	0x034028C4 MOV W2, W31
	0x034028C8 BL 0x1C5C788
	0x034028CC B 0x34028DC
	0x034028D0 LDRSW X9, [X10]
	0x034028D4 ADD X8, X8, X9, 0x4, LSL
	0x034028D8 ADD X0, X8, 0x138
	0x034028DC LDP X8, X1, [X0]
	0x034028E0 MOV X0, X20
	0x034028E4 BLR X8
	0x034028E8 CBNZ X22, 0x340295C
	0x034028EC ADRP X8, 0xD2B000
	0x034028F0 LDR X8, [X8 + 0xD80]
	0x034028F4 MOV X1, X21
	0x034028F8 MOV X3, X31
	0x034028FC LDR X0, [X8]
	0x03402900 ADRP X8, 0xCF1000
	0x03402904 LDR X8, [X8 + 0x848]
	0x03402908 LDR X2, [X8]
	0x0340290C BL 0x32274B8
	0x03402910 MOV X1, X0
	0x03402914 LDR X0, [X31 + 0x8]
	0x03402918 LDP X20, X19, [X31 + 0x60]
	0x0340291C LDP X22, X21, [X31 + 0x50]
	0x03402920 LDP X24, X23, [X31 + 0x40]
	0x03402924 LDP X26, X25, [X31 + 0x30]
	0x03402928 LDP X28, X27, [X31 + 0x20]
	0x0340292C LDP X29, X30, [X31 + 0x10]
	0x03402930 MOV X2, X31
	0x03402934 ADD X31, X31, 0x70
	0x03402938 B 0x321B938
	0x0340293C BL 0x1C16F20
	0x03402940 BL 0x1C16F28
	0x03402944 BL 0x1C16F20
	0x03402948 BL 0x1C16F28
	0x0340294C BL 0x1C16F28
	0x03402950 BL 0x1C16F28
	0x03402954 BL 0x1C16F28
	0x03402958 BL 0x1C16F20
	0x0340295C MOV X0, X22
	0x03402960 BL 0x1C16F18
	0x03402964 B 0x3402990
	0x03402968 B 0x3402990
	0x0340296C B 0x3402990
	0x03402970 B 0x3402990
	0x03402974 B 0x3402990
	0x03402978 B 0x3402990
	0x0340297C B 0x3402990
	0x03402980 MOV X21, X27
	0x03402984 B 0x3402990
	0x03402988 B 0x3402990
	0x0340298C B 0x3402990
	0x03402990 CMP W1, 0x1
	0x03402994 B.NE 0x34029A8
	0x03402998 BL 0x3EB1AD0
	0x0340299C LDR X22, [X0]
	0x034029A0 BL 0x3EB1AE0
	0x034029A4 B 0x3402884
	0x034029A8 MOV X19, X0
	0x034029AC MOV X22, X31
	0x034029B0 B 0x34029B8
	0x034029B4 MOV X19, X0
	0x034029B8 CBZ X20, 0x3402A1C
	0x034029BC LDR X8, [X20]
	0x034029C0 ADRP X10, 0xCF1000
	0x034029C4 LDRH W9, [X8 + 0x12E]
	0x034029C8 LDR X10, [X10 + 0xE00]
	0x034029CC LDR X1, [X10]
	0x034029D0 CBZ X9, 0x34029F4
	0x034029D4 LDR X10, [X8 + 0xB0]
	0x034029D8 ADD X10, X10, 0x8
	0x034029DC LDUR X11, [X10 - 0x8]
	0x034029E0 CMP X11, X1
	0x034029E4 B.EQ 0x3402A04
	0x034029E8 SUBS X9, X9, 0x1
	0x034029EC ADD X10, X10, 0x10
	0x034029F0 B.NE 0x34029DC
	0x034029F4 MOV X0, X20
	0x034029F8 MOV W2, W31
	0x034029FC BL 0x1C5C788
	0x03402A00 B 0x3402A10
	0x03402A04 LDRSW X9, [X10]
	0x03402A08 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xFDC000
	015 Move X19, 0xCF2000
	016 Move X21, 0xD2C000
	017 Move X22, 0xCF2000
	018 Move W8, [X23+1296]
	019 Move X19, [X19+2440]
	020 Move X21, [X21+3448]
	021 Move X22, [X22+2104]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xCF2000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xCF5000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0xCF5000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0xCF2000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCF5000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xCF5000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xCF2000
	046 Move X0, [X0+2760]
	047 Call 0x1C17CF4
	048 Move X0, 0xD1F000
	049 Move X0, [X0+864]
	050 Call 0x1C17CF4
	051 Move X0, 0xD1F000
	052 Move X0, [X0+4024]
	053 Call 0x1C17CF4
	054 Move X0, 0xCFD000
	055 Move X0, [X0+1752]
	056 Call 0x1C17CF4
	057 Move X0, 0xD2C000
	058 Move X0, [X0+3456]
	059 Call 0x1C17CF4
	060 Move X0, 0xCF2000
	061 Move X0, [X0+2104]
	062 Call 0x1C17CF4
	063 Move X0, 0xD2C000
	064 Move X0, [X0+3448]
	065 Call 0x1C17CF4
	066 Move X0, 0xCF2000
	067 Move X0, [X0+2440]
	068 Call 0x1C17CF4
	069 Move X0, 0xCF2000
	070 Move X0, [X0+2120]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+1296], W8
	074 Move X0, [X19]
	075 Move X2, [X20+16]
	076 Move X1, [X21]
	077 Move X3, [X22]
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X27, [X19]
	081 Move [X31+8], X0
	082 Move X0, X20
	083 Call ApiAccountApple.get_Vars, X0
	084 Compare X0, 0
	085 JumpIfEqual {263}
	086 Move X10, 0xCF5000
	087 Move X8, [X0]
	088 Move X10, [X10+400]
	089 Move X20, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X28, 0xCF2000
	107 Move X29, 0xCF5000
	108 Move X26, 0xCF2000
	109 Move X24, 0xD1F000
	110 Move X25, 0xD1F000
	111 Move X19, 0xCFD000
	112 Move X28, [X28+3608]
	113 Move X29, [X29+408]
	114 Move X26, [X26+2760]
	115 Move X24, [X24+864]
	116 Move X25, [X25+4024]
	117 Move X19, [X19+1752]
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, X0
	123 Move X0, X27
	124 Compare X20, 0
	125 JumpIfEqual {256}
	126 Move X8, [X20]
	127 Move X1, [X28]
	128 Move X21, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {201}
	152 Move X8, [X20]
	153 Move X1, [X29]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X23, X0
	174 Move X0, [X26]
	175 Move X22, X1
	176 Move W1, 5
	177 Call 0x1C17D6C
	178 Compare X0, 0
	179 JumpIfEqual {258}
	180 Move W8, [X0+24]
	181 Compare W8, 0
	182 JumpIfEqual {260}
	183 Move X9, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+32], X9
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X0+40], X23
	188 Move X9, [X25]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X0+48], X9
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X0+56], X22
	193 Move X8, [X19]
	194 Move [X0+64], X8
	195 Move X1, X31
	196 Call String.Concat, X0
	197 Move X1, X0
	198 Move X0, X21
	199 Move X2, X31
	200 Call String.Concat, X0, X1
	201 Move X22, X31
	202 Compare X20, 0
	203 JumpIfEqual {227}
	204 Move X8, [X20]
	205 Move X10, 0xCF2000
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X10, [X10+3584]
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X20
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X22, 0
	228 JumpIfNotEqual {264}
	229 Move X8, 0xD2C000
	230 Move X8, [X8+3456]
	231 Move X1, X21
	232 Move X3, X31
	233 Move X0, [X8]
	234 Move X8, 0xCF2000
	235 Move X8, [X8+2120]
	236 Move X2, [X8]
	237 Call String.Concat, X0, X1, X2
	238 Move X1, X0
	239 Move X0, [X31+8]
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Move X2, X31
	253 Add X31, X31, 112
	254 Call String.Concat, X0, X1
	255 Return X0
	256 Call 0x1C17F20
	257 Call 0x1C17F28
	258 Call 0x1C17F20
	259 Call 0x1C17F28
	260 Call 0x1C17F28
	261 Call 0x1C17F28
	262 Call 0x1C17F28
	263 Call 0x1C17F20
	264 Move X0, X22
	265 Call 0x1C17F18
	266 Move X21, X27
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X22, [X0]
	270 Call 0x3EB2AE0
	271 Move X19, X0
	272 Move X22, X31
	273 Move X19, X0
	274 Compare X20, 0
	275 JumpIfEqual {299}
	276 Move X8, [X20]
	277 Move X10, 0xCF2000
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X10, [X10+3584]
	280 Move X1, [X10]
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X20
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X22, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X19
	302 Call 0x1D2D690
	303 Move X0, X22
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03402A0C ADD X0, X8, 0x138
	0x03402A10 LDP X8, X1, [X0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

