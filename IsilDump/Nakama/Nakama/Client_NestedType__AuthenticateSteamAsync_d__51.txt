Type: Nakama.Client/<AuthenticateSteamAsync>d__51

Method: System.Void MoveNext()

Disassembly:
	0x03450440 BL 0x1C16F10
	0x03450444 LDP X3, X4, [X31 + 0x8]
	0x03450448 MOV X24, X0
	0x0345044C MOV X1, X20
	0x03450450 MOV X2, X23
	0x03450454 MOV X5, X31
	0x03450458 BL 0x3465404
	0x0345045C CBZ X21, 0x3450528
	0x03450460 MOV X0, X21
	0x03450464 MOV X1, X22
	0x03450468 MOV X2, X24
	0x0345046C MOV X3, X31
	0x03450470 BL 0x3465B68
	0x03450474 CBZ X0, 0x345052C
	0x03450478 MOV X1, X31
	0x0345047C BL 0x33ED394
	0x03450480 STR X0, [X31 + 0x18]
	0x03450484 ADD X0, X31, 0x18
	0x03450488 MOV X1, X31
	0x0345048C BL 0x32C3A80
	0x03450490 TBZ X0, 0x0, 0x34504D0
	0x03450494 ADD X0, X31, 0x18
	0x03450498 MOV X1, X31
	0x0345049C BL 0x32C3B4C
	0x034504A0 MOVN W8, 0x1
	0x034504A4 STR W8, [X19]
	0x034504A8 STR X31, [X19 + 0x50]
	0x034504AC LDR X0, [X25]
	0x034504B0 ADD X19, X19, 0x8
	0x034504B4 LDR W8, [X0 + 0xE0]
	0x034504B8 CBNZ W8, 0x34504C0
	0x034504BC BL 0x1C16DFC
	0x034504C0 MOV X0, X19
	0x034504C4 MOV X1, X31
	0x034504C8 BL 0x32C4864
	0x034504CC B 0x345050C
	0x034504D0 MOVZ W8, 0x1
	0x034504D4 STR W8, [X19]
	0x034504D8 LDR X8, [X31 + 0x18]
	0x034504DC STR X8, [X19 + 0x60]
	0x034504E0 LDR X0, [X25]
	0x034504E4 LDR W8, [X0 + 0xE0]
	0x034504E8 CBNZ W8, 0x34504F0
	0x034504EC BL 0x1C16DFC
	0x034504F0 ADRP X8, 0xCDF000
	0x034504F4 LDR X8, [X8 + 0xB80]
	0x034504F8 ADD X0, X19, 0x8
	0x034504FC LDR X3, [X8]
	0x03450500 ADD X1, X31, 0x18
	0x03450504 MOV X2, X19
	0x03450508 BL 0x2189744
	0x0345050C LDP X20, X19, [X31 + 0x60]
	0x03450510 LDP X22, X21, [X31 + 0x50]
	0x03450514 LDP X24, X23, [X31 + 0x40]
	0x03450518 LDP X30, X25, [X31 + 0x30]
	0x0345051C ADD X31, X31, 0x70
	0x03450520 RET
	0x03450524 BL 0x1C16F20
	0x03450528 BL 0x1C16F20
	0x0345052C BL 0x1C16F20
	0x03450530 BL 0x1C16F20
	0x03450534 BL 0x1C16F20
	0x03450538 BL 0x1C16F20
	0x0345053C BL 0x1C16F20
	0x03450540 BL 0x1C16F20
	0x03450544 BL 0x1C16F20
	0x03450548 BL 0x1C16F20
	0x0345054C BL 0x1C16F20
	0x03450550 BL 0x1C16F20
	0x03450554 B 0x34505C8
	0x03450558 B 0x34505C8
	0x0345055C B 0x34505C8
	0x03450560 B 0x34505C8
	0x03450564 B 0x34505C8
	0x03450568 B 0x34505C8
	0x0345056C B 0x34505C8
	0x03450570 B 0x34505C8
	0x03450574 B 0x34505C8
	0x03450578 B 0x34505C8
	0x0345057C B 0x34505C8
	0x03450580 B 0x34505C8
	0x03450584 B 0x34505C8
	0x03450588 B 0x34505C8
	0x0345058C B 0x34505C8
	0x03450590 B 0x34505C8
	0x03450594 B 0x34505C8
	0x03450598 B 0x34505C8
	0x0345059C B 0x34505C8
	0x034505A0 B 0x34505C8
	0x034505A4 B 0x34505C8
	0x034505A8 B 0x34505C8
	0x034505AC B 0x34505C8
	0x034505B0 B 0x34505C8
	0x034505B4 B 0x34505C8
	0x034505B8 B 0x34505C8
	0x034505BC B 0x34505C8
	0x034505C0 B 0x34505C8
	0x034505C4 B 0x34505C8
	0x034505C8 MOV X20, X0
	0x034505CC CMP W1, 0x1
	0x034505D0 B.NE 0x3450664
	0x034505D4 MOV X0, X20
	0x034505D8 BL 0x3EB1AD0
	0x034505DC MOV X20, X0
	0x034505E0 ADRP X0, 0xCA3000
	0x034505E4 LDR X0, [X0 + 0x7D0]
	0x034505E8 BL 0x1C16D08
	0x034505EC LDR X8, [X20]
	0x034505F0 LDR X1, [X8]
	0x034505F4 BL 0x1C17270
	0x034505F8 TBZ X0, 0x0, 0x345063C
	0x034505FC LDR X20, [X20]
	0x03450600 BL 0x3EB1AE0
	0x03450604 MOVN W8, 0x1
	0x03450608 STR X31, [X19 + 0x50]
	0x0345060C STR W8, [X19], #0x8
	0x03450610 ADRP X0, 0xCA6000
	0x03450614 LDR X0, [X0 + 0x280]
	0x03450618 BL 0x1C16D08
	0x0345061C LDR W8, [X0 + 0xE0]
	0x03450620 CBNZ W8, 0x3450628
	0x03450624 BL 0x1C16DFC
	0x03450628 MOV X0, X19
	0x0345062C MOV X1, X20
	0x03450630 MOV X2, X31
	0x03450634 BL 0x32C4908
	0x03450638 B 0x345050C
	0x0345063C MOVZ W0, 0x8
	0x03450640 BL 0x3EB1AF0
	0x03450644 LDR X8, [X20]
	0x03450648 STR X8, [X0]
	0x0345064C ADRP X1, 0xA64000
	0x03450650 ADD X1, X1, 0xE58
	0x03450654 MOV X2, X31
	0x03450658 BL 0x3EB1B00
	0x0345065C MOV X20, X0
	0x03450660 BL 0x3EB1AE0
	0x03450664 MOV X0, X20
	0x03450668 BL 0x1D2C690
	0x0345066C BL 0x1990590
	0x03450670 STR X30, [X31 - 0x30]!
	0x03450674 STP X22, X21, [X31 + 0x10]
	0x03450678 STP X20, X19, [X31 + 0x20]
	0x0345067C ADRP X21, 0xF8D000
	0x03450680 ADRP X22, 0xCA6000
	0x03450684 LDRB W8, [X21 + 0x76A]
	0x03450688 LDR X22, [X22 + 0x280]
	0x0345068C MOV X19, X1
	0x03450690 MOV X20, X0
	0x03450694 TBNZ X8, 0x0, 0x34506AC
	0x03450698 ADRP X0, 0xCA6000
	0x0345069C LDR X0, [X0 + 0x280]
	0x034506A0 BL 0x1C16CF4
	0x034506A4 MOVZ W8, 0x1
	0x034506A8 STRB W8, [X21 + 0x76A]
	0x034506AC LDR X0, [X22]
	0x034506B0 LDR W8, [X0 + 0xE0]
	0x034506B4 CBNZ W8, 0x34506BC
	0x034506B8 BL 0x1C16DFC
	0x034506BC ADD X0, X20, 0x8
	0x034506C0 MOV X1, X19
	0x034506C4 LDP X20, X19, [X31 + 0x20]
	0x034506C8 LDP X22, X21, [X31 + 0x10]
	0x034506CC MOV X2, X31
	0x034506D0 LDR X30, [X31], #0x30
	0x034506D4 B 0x32C477C
	0x034506D8 SUB X31, X31, 0x70
	0x034506DC STP X30, X25, [X31 + 0x30]
	0x034506E0 STP X24, X23, [X31 + 0x40]
	0x034506E4 STP X22, X21, [X31 + 0x50]
	0x034506E8 STP X20, X19, [X31 + 0x60]
	0x034506EC ADRP X20, 0xF8D000
	0x034506F0 LDRB W8, [X20 + 0x76B]
	0x034506F4 MOV X19, X0
	0x034506F8 TBNZ X8, 0x0, 0x34507E8
	0x034506FC ADRP X0, 0xCDF000
	0x03450700 LDR X0, [X0 + 0xB98]
	0x03450704 BL 0x1C16CF4
	0x03450708 ADRP X0, 0xCDF000
	0x0345070C LDR X0, [X0 + 0xBA0]
	0x03450710 BL 0x1C16CF4
	0x03450714 ADRP X0, 0xCDE000
	0x03450718 LDR X0, [X0 + 0xBB0]
	0x0345071C BL 0x1C16CF4
	0x03450720 ADRP X0, 0xCDE000
	0x03450724 LDR X0, [X0 + 0x4A8]
	0x03450728 BL 0x1C16CF4
	0x0345072C ADRP X0, 0xCA5000
	0x03450730 LDR X0, [X0 + 0xA10]
	0x03450734 BL 0x1C16CF4
	0x03450738 ADRP X0, 0xCA4000
	0x0345073C LDR X0, [X0 + 0x9F0]
	0x03450740 BL 0x1C16CF4
	0x03450744 ADRP X0, 0xCDF000
	0x03450748 LDR X0, [X0 + 0xBA8]
	0x0345074C BL 0x1C16CF4
	0x03450750 ADRP X0, 0xCA4000
	0x03450754 LDR X0, [X0 + 0x818]
	0x03450758 BL 0x1C16CF4
	0x0345075C ADRP X0, 0xCDF000
	0x03450760 LDR X0, [X0 + 0x7C8]
	0x03450764 BL 0x1C16CF4
	0x03450768 ADRP X0, 0xCDF000
	0x0345076C LDR X0, [X0 + 0x7D0]
	0x03450770 BL 0x1C16CF4
	0x03450774 ADRP X0, 0xCDF000
	0x03450778 LDR X0, [X0 + 0xBB0]
	0x0345077C BL 0x1C16CF4
	0x03450780 ADRP X0, 0xCA4000
	0x03450784 LDR X0, [X0 + 0x830]
	0x03450788 BL 0x1C16CF4
	0x0345078C ADRP X0, 0xCDF000
	0x03450790 LDR X0, [X0 + 0xBB8]
	0x03450794 BL 0x1C16CF4
	0x03450798 ADRP X0, 0xCDF000
	0x0345079C LDR X0, [X0 + 0xBC0]
	0x034507A0 BL 0x1C16CF4
	0x034507A4 ADRP X0, 0xCA4000
	0x034507A8 LDR X0, [X0 + 0x838]
	0x034507AC BL 0x1C16CF4
	0x034507B0 ADRP X0, 0xCA4000
	0x034507B4 LDR X0, [X0 + 0x840]
	0x034507B8 BL 0x1C16CF4
	0x034507BC ADRP X0, 0xCDF000
	0x034507C0 LDR X0, [X0 + 0xBC8]
	0x034507C4 BL 0x1C16CF4
	0x034507C8 ADRP X0, 0xCDF000
	0x034507CC LDR X0, [X0 + 0xBD0]
	0x034507D0 BL 0x1C16CF4
	0x034507D4 ADRP X0, 0xCDF000
	0x034507D8 LDR X0, [X0 + 0xBD8]
	0x034507DC BL 0x1C16CF4
	0x034507E0 MOVZ W8, 0x1
	0x034507E4 STRB W8, [X20 + 0x76B]
	0x034507E8 STP X31, X31, [X31 + 0x20]
	0x034507EC STR X31, [X31 + 0x18]
	0x034507F0 ADRP X25, 0xCDE000
	0x034507F4 LDR W8, [X19]
	0x034507F8 LDR X20, [X19 + 0x20]
	0x034507FC LDR X25, [X25 + 0x4A8]
	0x03450800 CBZ W8, 0x3450824
	0x03450804 CMP W8, 0x1
	0x03450808 B.NE 0x3450850
	0x0345080C LDR X8, [X19 + 0x78]
	0x03450810 MOVN W9, 0x0
	0x03450814 STR X8, [X31 + 0x18]
	0x03450818 STR X31, [X19 + 0x78]
	0x0345081C STR W9, [X19]
	0x03450820 B 0x3450B7C
	0x03450824 LDR X8, [X19 + 0x70]
	0x03450828 MOVN W9, 0x0
	0x0345082C STR X8, [X31 + 0x20]
	0x03450830 STR X31, [X19 + 0x70]
	0x03450834 STR W9, [X19]
	0x03450838 ADRP X8, 0xCA4000
	0x0345083C LDR X8, [X8 + 0x830]
	0x03450840 ADD X0, X31, 0x20
	0x03450844 LDR X1, [X8]
	0x03450848 BL 0x2677474
	0x0345084C B 0x3450A98
	0x03450850 ADRP X8, 0xCDF000
	0x03450854 LDR X8, [X8 + 0xBD8]
	0x03450858 LDR X0, [X8]
	0x0345085C BL 0x1C16F10
	0x03450860 MOV X21, X0
	0x03450864 MOV X1, X31
	0x03450868 BL 0x344876C
	0x0345086C STR X21, [X19 + 0x68]
	0x03450870 CBZ X21, 0x3450C34
	0x03450874 LDR X8, [X19 + 0x20]
	0x03450878 STR X8, [X21 + 0x10]
	0x0345087C LDR X8, [X19 + 0x28]
	0x03450880 STR X8, [X21 + 0x18]
	0x03450884 LDR V0, [X19 + 0x3]
	0x03450888 STR V0, [X21 + 0x2]
	0x0345088C LDR V0, [X19 + 0x4]
	0x03450890 STR V0, [X21 + 0x3]
	0x03450894 LDRB W8, [X19 + 0x50]
	0x03450898 STRB W8, [X21 + 0x40]
	0x0345089C LDR W8, [X19 + 0x54]
	0x034508A0 STR W8, [X21 + 0x44]
	0x034508A4 LDR X8, [X19 + 0x58]
	0x034508A8 STR X8, [X21 + 0x48]
	0x034508AC CBZ X20, 0x3450C38
	0x034508B0 LDRB W8, [X20 + 0x10]
	0x034508B4 CBZ W8, 0x3450A9C
	0x034508B8 LDR X8, [X19 + 0x68]
	0x034508BC CBZ X8, 0x3450C3C
	0x034508C0 LDR X21, [X8 + 0x18]
	0x034508C4 CBZ X21, 0x3450C40
	0x034508C8 ADRP X23, 0xCA4000
	0x034508CC LDR X8, [X21]
	0x034508D0 LDR X23, [X23 + 0x818]
	0x034508D4 LDRH W9, [X8 + 0x12E]
	0x034508D8 LDR X1, [X23]
	0x034508DC CBZ X9, 0x3450900
	0x034508E0 LDR X10, [X8 + 0xB0]
	0x034508E4 ADD X10, X10, 0x8
	0x034508E8 LDUR X11, [X10 - 0x8]
	0x034508EC CMP X11, X1
	0x034508F0 B.EQ 0x3450910
	0x034508F4 SUBS X9, X9, 0x1
	0x034508F8 ADD X10, X10, 0x10
	0x034508FC B.NE 0x34508E8
	0x03450900 MOVZ W2, 0x7
	0x03450904 MOV X0, X21
	0x03450908 BL 0x1C5C788
	0x0345090C B 0x3450920
	0x03450910 LDR W9, [X10]
	0x03450914 ADD W9, W9, 0x7
	0x03450918 ADD X8, X8, W9, 0x4, SXTW
	0x0345091C ADD X0, X8, 0x138
	0x03450920 LDP X8, X1, [X0]
	0x03450924 MOV X0, X21
	0x03450928 BLR X8
	0x0345092C MOV X1, X31
	0x03450930 BL 0x32277A8
	0x03450934 TBNZ X0, 0x0, 0x3450A98
	0x03450938 LDR X8, [X19 + 0x68]
	0x0345093C CBZ X8, 0x3450C44
	0x03450940 ADRP X9, 0xCA4000
	0x03450944 LDR X9, [X9 + 0x9F0]
	0x03450948 LDR X21, [X8 + 0x18]
	0x0345094C LDR X0, [X9]
	0x03450950 LDR W9, [X0 + 0xE0]
	0x03450954 CBNZ W9, 0x345095C
	0x03450958 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0xF8E000
	011 Move W8, [X20+1893]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE0000
	018 Move X0, [X0+2880]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE0000
	021 Move X0, [X0+2640]
	022 Call 0x1C17CF4
	023 Move X0, 0xCE0000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE0000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE0000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE0000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE0000
	036 Move X0, [X0+2000]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE0000
	039 Move X0, [X0+2664]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE0000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0xCE0000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0xCE0000
	048 Move X0, [X0+2688]
	049 Call 0x1C17CF4
	050 Move X0, 0xCE0000
	051 Move X0, [X0+2696]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE0000
	054 Move X0, [X0+2888]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE0000
	057 Move X0, [X0+2896]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1893], W8
	061 Move [X31+24], X31
	062 Move X25, 0xCE0000
	063 Move W8, [X19]
	064 Move X25, [X25+1584]
	065 Compare W8, 0
	066 JumpIfEqual {169}
	067 Move X8, 0xCE0000
	068 Move X8, [X8+2896]
	069 Move X24, [X19+32]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X22, X0
	073 Move X1, X31
	074 Call <>c__DisplayClass51_0..ctor, X0
	075 Compare X22, 0
	076 JumpIfEqual {290}
	077 Move X8, [X19+32]
	078 Move [X22+16], X8
	079 Move X8, [X19+40]
	080 Move [X22+24], X8
	081 Move X8, [X19+48]
	082 Move [X22+32], X8
	083 Move W8, [X19+56]
	084 Move [X22+40], W8
	085 Move X8, [X19+64]
	086 Move [X22+48], X8
	087 Move W8, [X19+72]
	088 Move [X22+56], W8
	089 Move X8, [X19+80]
	090 Move [X22+64], X8
	091 Compare X24, 0
	092 JumpIfEqual {291}
	093 Move X8, 0xCE0000
	094 Move X8, [X8+2648]
	095 Move X20, [X24+88]
	096 Move X0, [X8]
	097 Call 0x1C17F10
	098 Move X8, 0xCE0000
	099 Move X8, [X8+2888]
	100 Move X21, X0
	101 Move X2, [X8]
	102 Move X1, X22
	103 Move X3, X31
	104 Call Func`1<Object>..ctor, X0, X1, X2
	105 Move X8, 0xCE0000
	106 Move X23, [X19+88]
	107 Move X8, [X8+1992]
	108 Compare X23, 0
	109 JumpIfNotEqual {111}
	110 Move X23, [X24+24]
	111 Move X24, [X22+24]
	112 Move X1, [X22+64]
	113 Move X2, [X8]
	114 Move [X31+8], X31
	115 Move [X31+16], X31
	116 Add X0, X31, 8
	117 Call Nullable`1<CancellationToken>..ctor, X0, X1
	118 Move X8, 0xCE0000
	119 Move X8, [X8+2000]
	120 Move X0, [X8]
	121 Call 0x1C17F10
	122 Move X3, [X31+8]
	123 Move X4, [X31+16]
	124 Move X22, X0
	125 Move X1, X24
	126 Move X2, X23
	127 Move X5, X31
	128 Call RetryHistory..ctor, X0, X1, X2, X3
	129 Compare X20, 0
	130 JumpIfEqual {292}
	131 Move X8, 0xCE0000
	132 Move X8, [X8+2664]
	133 Move X3, [X8]
	134 Move X0, X20
	135 Move X1, X21
	136 Move X2, X22
	137 Call 0x2244230, X0, X1, X2
	138 Compare X0, 0
	139 JumpIfEqual {293}
	140 Move X8, 0xCE0000
	141 Move X8, [X8+2696]
	142 Move X1, [X8]
	143 Call Task`1<Object>.GetAwaiter, X0
	144 Move X8, 0xCE0000
	145 Move X8, [X8+2688]
	146 Move [X31+24], X0
	147 Move X1, [X8]
	148 Add X0, X31, 24
	149 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {176}
	154 Move [X19], W31
	155 Move X8, [X31+24]
	156 Move [X19+96], X8
	157 Move X0, [X25]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X8, 0xCE0000
	163 Move X8, [X8+2880]
	164 Add X0, X19, 8
	165 Move X3, [X8]
	166 Add X1, X31, 24
	167 Move X2, X19
	168 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	169 Move X8, [X19+96]
	170 Move TEMP, 0
	171 Not TEMP
	172 Move W9, TEMP
	173 Move [X31+24], X8
	174 Move [X19+96], X31
	175 Move [X19], W9
	176 Move X8, 0xCE0000
	177 Move X8, [X8+2680]
	178 Add X0, X31, 24
	179 Move X1, [X8]
	180 Call TaskAwaiter`1<Object>.GetResult, X0
	181 Move X20, X0
	182 Compare X0, 0
	183 JumpIfEqual {289}
	184 Move X23, 0xCE0000
	185 Move X8, [X20]
	186 Move X23, [X23+2656]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Move X1, [X23]
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move W2, 2
	198 Move X0, X20
	199 Call 0x1C5D788
	200 Move W9, [X10]
	201 Add W9, W9, 2
	202 Add X8, X8, W9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X1, [X0+8]
	206 Move X0, X20
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X8, [X20]
	209 Move X1, [X23]
	210 Move X21, X0
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move W2, 1
	221 Move X0, X20
	222 Call 0x1C5D788
	223 Move W9, [X10]
	224 Add W9, W9, 1
	225 Add X8, X8, W9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X1, [X0+8]
	229 Move X0, X20
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X8, [X20]
	232 Move X1, [X23]
	233 Move X22, X0
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Compare X9, 0
	236 JumpIfEqual {243}
	237 Move X10, [X8+176]
	238 Add X10, X10, 8
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Subtract X9, X9, 1
	242 Add X10, X10, 16
	243 Move X0, X20
	244 Move W2, W31
	245 Call 0x1C5D788
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Add X8, X8, X9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X1, [X0+8]
	251 Move X0, X20
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X8, 0xCE0000
	254 Move X8, [X8+2672]
	255 Move W23, W0
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X20, X0
	259 And W3, W23, 1
	260 Move X1, X21
	261 Move X2, X22
	262 Move X4, X31
	263 Call Session..ctor, X0, X1, X2, X3
	264 Move TEMP, 1
	265 Not TEMP
	266 Move W8, TEMP
	267 Move [X19+8], W8
	268 Move X0, [X25]
	269 Move X21, 0xCE0000
	270 Move W8, [X0+224]
	271 Move X21, [X21+2640]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X2, [X21]
	276 Move X0, X19
	277 Move X1, X20
	278 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	279 Move X20, [X31+80]
	280 Move X19, [X31+88]
	281 Move X22, [X31+64]
	282 Move X21, [X31+72]
	283 Move X24, [X31+48]
	284 Move X23, [X31+56]
	285 Move X30, [X31+32]
	286 Move X25, [X31+40]
	287 Add X31, X31, 96
	288 Return 
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Move X20, X0
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X0, X20
	297 Call 0x3EB2AD0
	298 Move X20, X0
	299 Move X0, 0xCA4000
	300 Move X0, [X0+2000]
	301 Call 0x1C17D08
	302 Move X8, [X20]
	303 Move X1, [X8]
	304 Call 0x1C18270
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {329}
	309 Move X20, [X20]
	310 Call 0x3EB2AE0
	311 Move TEMP, 1
	312 Not TEMP
	313 Move W8, TEMP
	314 Move [X19+8], W8
	315 Move X0, 0xCE0000
	316 Move X0, [X0+1584]
	317 Call 0x1C17D08
	318 Move W8, [X0+224]
	319 Compare W8, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Move X0, 0xCE0000
	323 Move X0, [X0+2720]
	324 Call 0x1C17D08
	325 Move X2, X0
	326 Move X0, X19
	327 Move X1, X20
	328 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	329 Move W0, 8
	330 Call 0x3EB2AF0
	331 Move X8, [X20]
	332 Move [X0], X8
	333 Move X1, 0xA65000
	334 Add X1, X1, 3672
	335 Move X2, X31
	336 Call 0x3EB2B00
	337 Move X20, X0
	338 Call 0x3EB2AE0
	339 Move X0, X20
	340 Call 0x1D2D690
	341 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345095C MOV X0, X31
	0x03450960 BL 0x33616A4
	0x03450964 ADRP X22, 0xCA5000
	0x03450968 LDR X22, [X22 + 0xA10]
	0x0345096C MOV X8, X0
	0x03450970 STR X8, [X31 + 0x28]
	0x03450974 LDR X0, [X22]
	0x03450978 LDR W8, [X0 + 0xE0]
	0x0345097C CBNZ W8, 0x3450988
	0x03450980 BL 0x1C16DFC
	0x03450984 LDR X0, [X22]
	0x03450988 LDR X8, [X0 + 0xB8]
	0x0345098C LDR X1, [X8]
	0x03450990 ADD X0, X31, 0x28
	0x03450994 MOV X2, X31
	0x03450998 BL 0x335FC68
	0x0345099C CBZ X21, 0x3450C48
	0x034509A0 LDR X8, [X21]
	0x034509A4 LDR X1, [X23]
	0x034509A8 MOV X22, X0
	0x034509AC LDRH W9, [X8 + 0x12E]
	0x034509B0 CBZ X9, 0x34509D4
	0x034509B4 LDR X10, [X8 + 0xB0]
	0x034509B8 ADD X10, X10, 0x8
	0x034509BC LDUR X11, [X10 - 0x8]
	0x034509C0 CMP X11, X1
	0x034509C4 B.EQ 0x34509E4
	0x034509C8 SUBS X9, X9, 0x1
	0x034509CC ADD X10, X10, 0x10
	0x034509D0 B.NE 0x34509BC
	0x034509D4 MOVZ W2, 0xB

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF8E000
	007 Move X21, 0xCE0000
	008 Move W8, [X22+1894]
	009 Move X21, [X21+1584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCE0000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0xCE0000
	020 Move X0, [X0+1584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1894], W8
	024 Move X0, [X21]
	025 Move X21, 0xCE0000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2728]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

