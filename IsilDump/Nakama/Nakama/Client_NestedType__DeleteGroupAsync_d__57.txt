Type: Nakama.Client/<DeleteGroupAsync>d__57

Method: System.Void MoveNext()

Disassembly:
	0x03452AE0 BL 0x269F5D0
	0x03452AE4 ADRP X8, 0xCA2000
	0x03452AE8 LDR X8, [X8 + 0x838]
	0x03452AEC STR X0, [X31 + 0x20]
	0x03452AF0 LDR X1, [X8]
	0x03452AF4 ADD X0, X31, 0x20
	0x03452AF8 BL 0x2677430
	0x03452AFC TBNZ X0, 0x0, 0x34528FC
	0x03452B00 STR W31, [X19]
	0x03452B04 LDR X8, [X31 + 0x20]
	0x03452B08 STR X8, [X19 + 0x50]
	0x03452B0C LDR X0, [X25]
	0x03452B10 LDR W8, [X0 + 0xE0]
	0x03452B14 CBNZ W8, 0x3452B1C
	0x03452B18 BL 0x1C16DFC
	0x03452B1C ADRP X8, 0xCDD000
	0x03452B20 LDR X8, [X8 + 0xC60]
	0x03452B24 ADD X0, X19, 0x8
	0x03452B28 LDR X3, [X8]
	0x03452B2C ADD X1, X31, 0x20
	0x03452B30 MOV X2, X19
	0x03452B34 BL 0x21882EC
	0x03452B38 B 0x3452C80
	0x03452B3C CBZ X20, 0x3452CA4
	0x03452B40 ADRP X8, 0xCA9000
	0x03452B44 LDR X8, [X8 + 0x818]
	0x03452B48 LDR X21, [X20 + 0x58]
	0x03452B4C LDR X23, [X19 + 0x48]
	0x03452B50 LDR X0, [X8]
	0x03452B54 BL 0x1C16F10
	0x03452B58 ADRP X8, 0xCDD000
	0x03452B5C LDR X8, [X8 + 0xC70]
	0x03452B60 MOV X22, X0
	0x03452B64 LDR X2, [X8]
	0x03452B68 MOV X1, X23
	0x03452B6C MOV X3, X31
	0x03452B70 BL 0x2D27AA8
	0x03452B74 LDR X8, [X19 + 0x48]
	0x03452B78 CBZ X8, 0x3452C98
	0x03452B7C ADRP X9, 0xCDD000
	0x03452B80 LDR X23, [X19 + 0x40]
	0x03452B84 LDR X9, [X9 + 0x7C8]
	0x03452B88 CBNZ X23, 0x3452B90
	0x03452B8C LDR X23, [X20 + 0x18]
	0x03452B90 LDR X20, [X8 + 0x18]
	0x03452B94 LDR X1, [X8 + 0x28]
	0x03452B98 LDR X2, [X9]
	0x03452B9C STP X31, X31, [X31 + 0x8]
	0x03452BA0 ADD X0, X31, 0x8
	0x03452BA4 BL 0x242E368
	0x03452BA8 ADRP X8, 0xCDD000
	0x03452BAC LDR X8, [X8 + 0x7D0]
	0x03452BB0 LDR X0, [X8]
	0x03452BB4 BL 0x1C16F10
	0x03452BB8 LDP X3, X4, [X31 + 0x8]
	0x03452BBC MOV X24, X0
	0x03452BC0 MOV X1, X20
	0x03452BC4 MOV X2, X23
	0x03452BC8 MOV X5, X31
	0x03452BCC BL 0x3465404
	0x03452BD0 CBZ X21, 0x3452C9C
	0x03452BD4 MOV X0, X21
	0x03452BD8 MOV X1, X22
	0x03452BDC MOV X2, X24
	0x03452BE0 MOV X3, X31
	0x03452BE4 BL 0x3465B68
	0x03452BE8 CBZ X0, 0x3452CA0
	0x03452BEC MOV X1, X31
	0x03452BF0 BL 0x33ED394
	0x03452BF4 STR X0, [X31 + 0x18]
	0x03452BF8 ADD X0, X31, 0x18
	0x03452BFC MOV X1, X31
	0x03452C00 BL 0x32C3A80
	0x03452C04 TBZ X0, 0x0, 0x3452C44
	0x03452C08 ADD X0, X31, 0x18
	0x03452C0C MOV X1, X31
	0x03452C10 BL 0x32C3B4C
	0x03452C14 MOVN W8, 0x1
	0x03452C18 STR W8, [X19]
	0x03452C1C STR X31, [X19 + 0x48]
	0x03452C20 LDR X0, [X25]
	0x03452C24 ADD X19, X19, 0x8
	0x03452C28 LDR W8, [X0 + 0xE0]
	0x03452C2C CBNZ W8, 0x3452C34
	0x03452C30 BL 0x1C16DFC
	0x03452C34 MOV X0, X19
	0x03452C38 MOV X1, X31
	0x03452C3C BL 0x32C4864
	0x03452C40 B 0x3452C80
	0x03452C44 MOVZ W8, 0x1
	0x03452C48 STR W8, [X19]
	0x03452C4C LDR X8, [X31 + 0x18]
	0x03452C50 STR X8, [X19 + 0x58]
	0x03452C54 LDR X0, [X25]
	0x03452C58 LDR W8, [X0 + 0xE0]
	0x03452C5C CBNZ W8, 0x3452C64
	0x03452C60 BL 0x1C16DFC
	0x03452C64 ADRP X8, 0xCDD000
	0x03452C68 LDR X8, [X8 + 0xC68]
	0x03452C6C ADD X0, X19, 0x8
	0x03452C70 LDR X3, [X8]
	0x03452C74 ADD X1, X31, 0x18
	0x03452C78 MOV X2, X19
	0x03452C7C BL 0x21899B0
	0x03452C80 LDP X20, X19, [X31 + 0x60]
	0x03452C84 LDP X22, X21, [X31 + 0x50]
	0x03452C88 LDP X24, X23, [X31 + 0x40]
	0x03452C8C LDP X30, X25, [X31 + 0x30]
	0x03452C90 ADD X31, X31, 0x70
	0x03452C94 RET
	0x03452C98 BL 0x1C16F20
	0x03452C9C BL 0x1C16F20
	0x03452CA0 BL 0x1C16F20
	0x03452CA4 BL 0x1C16F20
	0x03452CA8 BL 0x1C16F20
	0x03452CAC BL 0x1C16F20
	0x03452CB0 BL 0x1C16F20
	0x03452CB4 BL 0x1C16F20
	0x03452CB8 BL 0x1C16F20
	0x03452CBC BL 0x1C16F20
	0x03452CC0 BL 0x1C16F20
	0x03452CC4 BL 0x1C16F20
	0x03452CC8 B 0x3452D3C
	0x03452CCC B 0x3452D3C
	0x03452CD0 B 0x3452D3C
	0x03452CD4 B 0x3452D3C
	0x03452CD8 B 0x3452D3C
	0x03452CDC B 0x3452D3C
	0x03452CE0 B 0x3452D3C
	0x03452CE4 B 0x3452D3C
	0x03452CE8 B 0x3452D3C
	0x03452CEC B 0x3452D3C
	0x03452CF0 B 0x3452D3C
	0x03452CF4 B 0x3452D3C
	0x03452CF8 B 0x3452D3C
	0x03452CFC B 0x3452D3C
	0x03452D00 B 0x3452D3C
	0x03452D04 B 0x3452D3C
	0x03452D08 B 0x3452D3C
	0x03452D0C B 0x3452D3C
	0x03452D10 B 0x3452D3C
	0x03452D14 B 0x3452D3C
	0x03452D18 B 0x3452D3C
	0x03452D1C B 0x3452D3C
	0x03452D20 B 0x3452D3C
	0x03452D24 B 0x3452D3C
	0x03452D28 B 0x3452D3C
	0x03452D2C B 0x3452D3C
	0x03452D30 B 0x3452D3C
	0x03452D34 B 0x3452D3C
	0x03452D38 B 0x3452D3C
	0x03452D3C MOV X20, X0
	0x03452D40 CMP W1, 0x1
	0x03452D44 B.NE 0x3452DD8
	0x03452D48 MOV X0, X20
	0x03452D4C BL 0x3EB1AD0
	0x03452D50 MOV X20, X0
	0x03452D54 ADRP X0, 0xCA1000
	0x03452D58 LDR X0, [X0 + 0x7D0]
	0x03452D5C BL 0x1C16D08
	0x03452D60 LDR X8, [X20]
	0x03452D64 LDR X1, [X8]
	0x03452D68 BL 0x1C17270
	0x03452D6C TBZ X0, 0x0, 0x3452DB0
	0x03452D70 LDR X20, [X20]
	0x03452D74 BL 0x3EB1AE0
	0x03452D78 MOVN W8, 0x1
	0x03452D7C STR X31, [X19 + 0x48]
	0x03452D80 STR W8, [X19], #0x8
	0x03452D84 ADRP X0, 0xCA4000
	0x03452D88 LDR X0, [X0 + 0x280]
	0x03452D8C BL 0x1C16D08
	0x03452D90 LDR W8, [X0 + 0xE0]
	0x03452D94 CBNZ W8, 0x3452D9C
	0x03452D98 BL 0x1C16DFC
	0x03452D9C MOV X0, X19
	0x03452DA0 MOV X1, X20
	0x03452DA4 MOV X2, X31
	0x03452DA8 BL 0x32C4908
	0x03452DAC B 0x3452C80
	0x03452DB0 MOVZ W0, 0x8
	0x03452DB4 BL 0x3EB1AF0
	0x03452DB8 LDR X8, [X20]
	0x03452DBC STR X8, [X0]
	0x03452DC0 ADRP X1, 0xA62000
	0x03452DC4 ADD X1, X1, 0xE58
	0x03452DC8 MOV X2, X31
	0x03452DCC BL 0x3EB1B00
	0x03452DD0 MOV X20, X0
	0x03452DD4 BL 0x3EB1AE0
	0x03452DD8 MOV X0, X20
	0x03452DDC BL 0x1D2C690
	0x03452DE0 BL 0x1990590
	0x03452DE4 STR X30, [X31 - 0x30]!
	0x03452DE8 STP X22, X21, [X31 + 0x10]
	0x03452DEC STP X20, X19, [X31 + 0x20]
	0x03452DF0 ADRP X21, 0xF8B000
	0x03452DF4 ADRP X22, 0xCA4000
	0x03452DF8 LDRB W8, [X21 + 0x776]
	0x03452DFC LDR X22, [X22 + 0x280]
	0x03452E00 MOV X19, X1
	0x03452E04 MOV X20, X0
	0x03452E08 TBNZ X8, 0x0, 0x3452E20
	0x03452E0C ADRP X0, 0xCA4000
	0x03452E10 LDR X0, [X0 + 0x280]
	0x03452E14 BL 0x1C16CF4
	0x03452E18 MOVZ W8, 0x1
	0x03452E1C STRB W8, [X21 + 0x776]
	0x03452E20 LDR X0, [X22]
	0x03452E24 LDR W8, [X0 + 0xE0]
	0x03452E28 CBNZ W8, 0x3452E30
	0x03452E2C BL 0x1C16DFC
	0x03452E30 ADD X0, X20, 0x8
	0x03452E34 MOV X1, X19
	0x03452E38 LDP X20, X19, [X31 + 0x20]
	0x03452E3C LDP X22, X21, [X31 + 0x10]
	0x03452E40 MOV X2, X31
	0x03452E44 LDR X30, [X31], #0x30
	0x03452E48 B 0x32C477C
	0x03452E4C SUB X31, X31, 0x90
	0x03452E50 STP X29, X30, [X31 + 0x30]
	0x03452E54 STP X28, X27, [X31 + 0x40]
	0x03452E58 STP X26, X25, [X31 + 0x50]
	0x03452E5C STP X24, X23, [X31 + 0x60]
	0x03452E60 STP X22, X21, [X31 + 0x70]
	0x03452E64 STP X20, X19, [X31 + 0x80]
	0x03452E68 ADRP X20, 0xF8B000
	0x03452E6C LDRB W8, [X20 + 0x777]
	0x03452E70 MOV X19, X0
	0x03452E74 TBNZ X8, 0x0, 0x3452F58
	0x03452E78 ADRP X0, 0xCDD000
	0x03452E7C LDR X0, [X0 + 0xC80]
	0x03452E80 BL 0x1C16CF4
	0x03452E84 ADRP X0, 0xCDD000
	0x03452E88 LDR X0, [X0 + 0xC88]
	0x03452E8C BL 0x1C16CF4
	0x03452E90 ADRP X0, 0xCDD000
	0x03452E94 LDR X0, [X0 + 0xC90]
	0x03452E98 BL 0x1C16CF4
	0x03452E9C ADRP X0, 0xCA4000
	0x03452EA0 LDR X0, [X0 + 0x280]
	0x03452EA4 BL 0x1C16CF4
	0x03452EA8 ADRP X0, 0xCA3000
	0x03452EAC LDR X0, [X0 + 0xA10]
	0x03452EB0 BL 0x1C16CF4
	0x03452EB4 ADRP X0, 0xCA2000
	0x03452EB8 LDR X0, [X0 + 0x9F0]
	0x03452EBC BL 0x1C16CF4
	0x03452EC0 ADRP X0, 0xCA9000
	0x03452EC4 LDR X0, [X0 + 0x818]
	0x03452EC8 BL 0x1C16CF4
	0x03452ECC ADRP X0, 0xCA2000
	0x03452ED0 LDR X0, [X0 + 0x818]
	0x03452ED4 BL 0x1C16CF4
	0x03452ED8 ADRP X0, 0xCDD000
	0x03452EDC LDR X0, [X0 + 0xC98]
	0x03452EE0 BL 0x1C16CF4
	0x03452EE4 ADRP X0, 0xCDD000
	0x03452EE8 LDR X0, [X0 + 0xCA0]
	0x03452EEC BL 0x1C16CF4
	0x03452EF0 ADRP X0, 0xCDB000
	0x03452EF4 LDR X0, [X0 + 0xE98]
	0x03452EF8 BL 0x1C16CF4
	0x03452EFC ADRP X0, 0xCDD000
	0x03452F00 LDR X0, [X0 + 0x7C8]
	0x03452F04 BL 0x1C16CF4
	0x03452F08 ADRP X0, 0xCDD000
	0x03452F0C LDR X0, [X0 + 0x7D0]
	0x03452F10 BL 0x1C16CF4
	0x03452F14 ADRP X0, 0xCA2000
	0x03452F18 LDR X0, [X0 + 0x830]
	0x03452F1C BL 0x1C16CF4
	0x03452F20 ADRP X0, 0xCA2000
	0x03452F24 LDR X0, [X0 + 0x838]
	0x03452F28 BL 0x1C16CF4
	0x03452F2C ADRP X0, 0xCA2000
	0x03452F30 LDR X0, [X0 + 0x840]
	0x03452F34 BL 0x1C16CF4
	0x03452F38 ADRP X0, 0xCDD000
	0x03452F3C LDR X0, [X0 + 0xCA8]
	0x03452F40 BL 0x1C16CF4
	0x03452F44 ADRP X0, 0xCDD000
	0x03452F48 LDR X0, [X0 + 0xCB0]
	0x03452F4C BL 0x1C16CF4
	0x03452F50 MOVZ W8, 0x1
	0x03452F54 STRB W8, [X20 + 0x777]
	0x03452F58 STP X31, X31, [X31 + 0x20]
	0x03452F5C STR X31, [X31 + 0x18]
	0x03452F60 ADRP X25, 0xCA4000
	0x03452F64 LDR W8, [X19]
	0x03452F68 LDR X20, [X19 + 0x20]
	0x03452F6C LDR X25, [X25 + 0x280]
	0x03452F70 CBZ W8, 0x3452F94
	0x03452F74 CMP W8, 0x1
	0x03452F78 B.NE 0x3452FC0
	0x03452F7C LDR X8, [X19 + 0x58]
	0x03452F80 MOVN W9, 0x0
	0x03452F84 STR X8, [X31 + 0x18]
	0x03452F88 STR X31, [X19 + 0x58]
	0x03452F8C STR W9, [X19]
	0x03452F90 B 0x34533BC
	0x03452F94 LDR X8, [X19 + 0x50]
	0x03452F98 MOVN W9, 0x0
	0x03452F9C STR X8, [X31 + 0x20]
	0x03452FA0 STR X31, [X19 + 0x50]
	0x03452FA4 STR W9, [X19]
	0x03452FA8 ADRP X8, 0xCA2000
	0x03452FAC LDR X8, [X8 + 0x830]
	0x03452FB0 ADD X0, X31, 0x20
	0x03452FB4 LDR X1, [X8]
	0x03452FB8 BL 0x2677474
	0x03452FBC B 0x34531E8
	0x03452FC0 ADRP X8, 0xCDD000
	0x03452FC4 LDR X8, [X8 + 0xCB0]
	0x03452FC8 LDR X0, [X8]
	0x03452FCC BL 0x1C16F10
	0x03452FD0 MOV X21, X0
	0x03452FD4 MOV X1, X31
	0x03452FD8 BL 0x3448E34
	0x03452FDC STR X21, [X19 + 0x40]
	0x03452FE0 CBZ X21, 0x3453480
	0x03452FE4 LDR X8, [X19 + 0x20]
	0x03452FE8 STR X8, [X21 + 0x10]
	0x03452FEC LDR X8, [X19 + 0x28]
	0x03452FF0 STR X8, [X21 + 0x18]
	0x03452FF4 LDR X8, [X19 + 0x30]
	0x03452FF8 STR X8, [X21 + 0x28]
	0x03452FFC CBZ X20, 0x3453484
	0x03453000 LDRB W8, [X20 + 0x10]
	0x03453004 CBZ W8, 0x34531E8
	0x03453008 LDR X8, [X19 + 0x40]
	0x0345300C CBZ X8, 0x3453488
	0x03453010 LDR X21, [X8 + 0x18]
	0x03453014 CBZ X21, 0x345348C
	0x03453018 ADRP X23, 0xCA1000
	0x0345301C LDR X8, [X21]
	0x03453020 LDR X23, [X23 + 0x818]
	0x03453024 LDRH W9, [X8 + 0x12E]
	0x03453028 LDR X1, [X23]
	0x0345302C CBZ X9, 0x3453050
	0x03453030 LDR X10, [X8 + 0xB0]
	0x03453034 ADD X10, X10, 0x8
	0x03453038 LDUR X11, [X10 - 0x8]
	0x0345303C CMP X11, X1
	0x03453040 B.EQ 0x3453060
	0x03453044 SUBS X9, X9, 0x1
	0x03453048 ADD X10, X10, 0x10
	0x0345304C B.NE 0x3453038
	0x03453050 MOVZ W2, 0x7
	0x03453054 MOV X0, X21
	0x03453058 BL 0x1C5C788
	0x0345305C B 0x3453070
	0x03453060 LDR W9, [X10]
	0x03453064 ADD W9, W9, 0x7
	0x03453068 ADD X8, X8, W9, 0x4, SXTW
	0x0345306C ADD X0, X8, 0x138
	0x03453070 LDP X8, X1, [X0]
	0x03453074 MOV X0, X21
	0x03453078 BLR X8
	0x0345307C MOV X1, X31
	0x03453080 BL 0x32277A8
	0x03453084 TBNZ X0, 0x0, 0x34531E8
	0x03453088 LDR X8, [X19 + 0x40]
	0x0345308C CBZ X8, 0x3453490
	0x03453090 ADRP X9, 0xCA1000
	0x03453094 LDR X9, [X9 + 0x9F0]
	0x03453098 LDR X21, [X8 + 0x18]
	0x0345309C LDR X0, [X9]
	0x034530A0 LDR W9, [X0 + 0xE0]
	0x034530A4 CBNZ W9, 0x34530AC
	0x034530A8 BL 0x1C16DFC
	0x034530AC MOV X0, X31
	0x034530B0 BL 0x33616A4
	0x034530B4 ADRP X22, 0xCA2000
	0x034530B8 LDR X22, [X22 + 0xA10]
	0x034530BC MOV X8, X0
	0x034530C0 STR X8, [X31 + 0x28]
	0x034530C4 LDR X0, [X22]
	0x034530C8 LDR W8, [X0 + 0xE0]
	0x034530CC CBNZ W8, 0x34530D8
	0x034530D0 BL 0x1C16DFC
	0x034530D4 LDR X0, [X22]
	0x034530D8 LDR X8, [X0 + 0xB8]
	0x034530DC LDR X1, [X8]
	0x034530E0 ADD X0, X31, 0x28
	0x034530E4 MOV X2, X31
	0x034530E8 BL 0x335FC68
	0x034530EC CBZ X21, 0x3453494
	0x034530F0 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF8C000
	011 Move W8, [X20+1905]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCDE000
	018 Move X0, [X0+3104]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDE000
	021 Move X0, [X0+3112]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA5000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA4000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA3000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCAA000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA3000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDE000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDE000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA3000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA3000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA3000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDE000
	054 Move X0, [X0+3120]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDE000
	057 Move X0, [X0+3128]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1905], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA5000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xCA3000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCDE000
	091 Move X8, [X8+3128]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass57_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xCA3000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xCA3000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xCA4000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xCA3000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xCA3000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCDE000
	242 Move X8, [X8+3104]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCAA000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCDE000
	257 Move X8, [X8+3120]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCDE000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCDE000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+72], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+88], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCDE000
	336 Move X8, [X8+3112]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xCA1000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+72], X31
	385 Move [X19+8], W8
	386 Move X0, 0xCA4000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA62000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034530F4 LDR X1, [X23]
	0x034530F8 MOV X22, X0
	0x034530FC LDRH W9, [X8 + 0x12E]
	0x03453100 CBZ X9, 0x3453124
	0x03453104 LDR X10, [X8 + 0xB0]
	0x03453108 ADD X10, X10, 0x8
	0x0345310C LDUR X11, [X10 - 0x8]
	0x03453110 CMP X11, X1
	0x03453114 B.EQ 0x3453134
	0x03453118 SUBS X9, X9, 0x1
	0x0345311C ADD X10, X10, 0x10
	0x03453120 B.NE 0x345310C
	0x03453124 MOVZ W2, 0xB
	0x03453128 MOV X0, X21
	0x0345312C BL 0x1C5C788
	0x03453130 B 0x3453144
	0x03453134 LDR W9, [X10]
	0x03453138 ADD W9, W9, 0xB
	0x0345313C ADD X8, X8, W9, 0x4, SXTW
	0x03453140 ADD X0, X8, 0x138
	0x03453144 LDP X8, X2, [X0]
	0x03453148 MOV X0, X21
	0x0345314C MOV X1, X22
	0x03453150 BLR X8
	0x03453154 TBZ X0, 0x0, 0x34531E8
	0x03453158 LDR X8, [X19 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF8B000
	007 Move X22, 0xCA4000
	008 Move W8, [X21+1906]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA4000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1906], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

