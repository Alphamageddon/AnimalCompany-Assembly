Type: Nakama.Client/<ValidateSubscriptionGoogleAsync>d__124

Method: System.Void MoveNext()

Disassembly:
	0x0346FC68 LDR X8, [X19 + 0x20]
	0x0346FC6C STR X8, [X21 + 0x10]
	0x0346FC70 LDR X8, [X19 + 0x28]
	0x0346FC74 STR X8, [X21 + 0x18]
	0x0346FC78 LDR X8, [X19 + 0x30]
	0x0346FC7C STR X8, [X21 + 0x28]
	0x0346FC80 CBZ X20, 0x347037C
	0x0346FC84 LDRB W8, [X20 + 0x10]
	0x0346FC88 CBZ W8, 0x346FE6C
	0x0346FC8C LDR X8, [X19 + 0x40]
	0x0346FC90 CBZ X8, 0x3470380
	0x0346FC94 LDR X21, [X8 + 0x18]
	0x0346FC98 CBZ X21, 0x3470384
	0x0346FC9C ADRP X23, 0xC85000
	0x0346FCA0 LDR X8, [X21]
	0x0346FCA4 LDR X23, [X23 + 0x818]
	0x0346FCA8 LDRH W9, [X8 + 0x12E]
	0x0346FCAC LDR X1, [X23]
	0x0346FCB0 CBZ X9, 0x346FCD4
	0x0346FCB4 LDR X10, [X8 + 0xB0]
	0x0346FCB8 ADD X10, X10, 0x8
	0x0346FCBC LDUR X11, [X10 - 0x8]
	0x0346FCC0 CMP X11, X1
	0x0346FCC4 B.EQ 0x346FCE4
	0x0346FCC8 SUBS X9, X9, 0x1
	0x0346FCCC ADD X10, X10, 0x10
	0x0346FCD0 B.NE 0x346FCBC
	0x0346FCD4 MOVZ W2, 0x7
	0x0346FCD8 MOV X0, X21
	0x0346FCDC BL 0x1C5C788
	0x0346FCE0 B 0x346FCF4
	0x0346FCE4 LDR W9, [X10]
	0x0346FCE8 ADD W9, W9, 0x7
	0x0346FCEC ADD X8, X8, W9, 0x4, SXTW
	0x0346FCF0 ADD X0, X8, 0x138
	0x0346FCF4 LDP X8, X1, [X0]
	0x0346FCF8 MOV X0, X21
	0x0346FCFC BLR X8
	0x0346FD00 MOV X1, X31
	0x0346FD04 BL 0x32277A8
	0x0346FD08 TBNZ X0, 0x0, 0x346FE6C
	0x0346FD0C LDR X8, [X19 + 0x40]
	0x0346FD10 CBZ X8, 0x3470388
	0x0346FD14 ADRP X9, 0xC85000
	0x0346FD18 LDR X9, [X9 + 0x9F0]
	0x0346FD1C LDR X21, [X8 + 0x18]
	0x0346FD20 LDR X0, [X9]
	0x0346FD24 LDR W9, [X0 + 0xE0]
	0x0346FD28 CBNZ W9, 0x346FD30
	0x0346FD2C BL 0x1C16DFC
	0x0346FD30 MOV X0, X31
	0x0346FD34 BL 0x33616A4
	0x0346FD38 ADRP X22, 0xC86000
	0x0346FD3C LDR X22, [X22 + 0xA10]
	0x0346FD40 MOV X8, X0
	0x0346FD44 STR X8, [X31 + 0x28]
	0x0346FD48 LDR X0, [X22]
	0x0346FD4C LDR W8, [X0 + 0xE0]
	0x0346FD50 CBNZ W8, 0x346FD5C
	0x0346FD54 BL 0x1C16DFC
	0x0346FD58 LDR X0, [X22]
	0x0346FD5C LDR X8, [X0 + 0xB8]
	0x0346FD60 LDR X1, [X8]
	0x0346FD64 ADD X0, X31, 0x28
	0x0346FD68 MOV X2, X31
	0x0346FD6C BL 0x335FC68
	0x0346FD70 CBZ X21, 0x347038C
	0x0346FD74 LDR X8, [X21]
	0x0346FD78 LDR X1, [X23]
	0x0346FD7C MOV X22, X0
	0x0346FD80 LDRH W9, [X8 + 0x12E]
	0x0346FD84 CBZ X9, 0x346FDA8
	0x0346FD88 LDR X10, [X8 + 0xB0]
	0x0346FD8C ADD X10, X10, 0x8
	0x0346FD90 LDUR X11, [X10 - 0x8]
	0x0346FD94 CMP X11, X1
	0x0346FD98 B.EQ 0x346FDB8
	0x0346FD9C SUBS X9, X9, 0x1
	0x0346FDA0 ADD X10, X10, 0x10
	0x0346FDA4 B.NE 0x346FD90
	0x0346FDA8 MOVZ W2, 0xB
	0x0346FDAC MOV X0, X21
	0x0346FDB0 BL 0x1C5C788
	0x0346FDB4 B 0x346FDC8
	0x0346FDB8 LDR W9, [X10]
	0x0346FDBC ADD W9, W9, 0xB
	0x0346FDC0 ADD X8, X8, W9, 0x4, SXTW
	0x0346FDC4 ADD X0, X8, 0x138
	0x0346FDC8 LDP X8, X2, [X0]
	0x0346FDCC MOV X0, X21
	0x0346FDD0 MOV X1, X22
	0x0346FDD4 BLR X8
	0x0346FDD8 TBZ X0, 0x0, 0x346FE6C
	0x0346FDDC LDR X8, [X19 + 0x40]
	0x0346FDE0 CBZ X8, 0x3470390
	0x0346FDE4 LDR X1, [X8 + 0x18]
	0x0346FDE8 LDR X3, [X19 + 0x38]
	0x0346FDEC LDR X4, [X8 + 0x28]
	0x0346FDF0 MOV X0, X20
	0x0346FDF4 MOV X2, X31
	0x0346FDF8 MOV X5, X31
	0x0346FDFC BL 0x34440A8
	0x0346FE00 CBZ X0, 0x3470394
	0x0346FE04 ADRP X8, 0xC85000
	0x0346FE08 LDR X8, [X8 + 0x840]
	0x0346FE0C LDR X1, [X8]
	0x0346FE10 BL 0x269F5D0
	0x0346FE14 ADRP X8, 0xC85000
	0x0346FE18 LDR X8, [X8 + 0x838]
	0x0346FE1C STR X0, [X31 + 0x20]
	0x0346FE20 LDR X1, [X8]
	0x0346FE24 ADD X0, X31, 0x20
	0x0346FE28 BL 0x2677430
	0x0346FE2C TBNZ X0, 0x0, 0x346FC2C
	0x0346FE30 STR W31, [X19]
	0x0346FE34 LDR X8, [X31 + 0x20]
	0x0346FE38 STR X8, [X19 + 0x50]
	0x0346FE3C LDR X0, [X25]
	0x0346FE40 LDR W8, [X0 + 0xE0]
	0x0346FE44 CBNZ W8, 0x346FE4C
	0x0346FE48 BL 0x1C16DFC
	0x0346FE4C ADRP X8, 0xCC1000
	0x0346FE50 LDR X8, [X8 + 0x748]
	0x0346FE54 ADD X0, X19, 0x8
	0x0346FE58 LDR X3, [X8]
	0x0346FE5C ADD X1, X31, 0x20
	0x0346FE60 MOV X2, X19
	0x0346FE64 BL 0x1FBE840
	0x0346FE68 B 0x3470324
	0x0346FE6C LDR X23, [X19 + 0x48]
	0x0346FE70 CBZ X23, 0x347035C
	0x0346FE74 ADRP X8, 0xCBF000
	0x0346FE78 LDR X8, [X8 + 0x2A8]
	0x0346FE7C LDR X22, [X19 + 0x40]
	0x0346FE80 LDR X0, [X8]
	0x0346FE84 BL 0x1C16F10
	0x0346FE88 ADRP X8, 0xCBF000
	0x0346FE8C LDR X8, [X8 + 0x2A0]
	0x0346FE90 LDR W1, [X23 + 0x18]
	0x0346FE94 MOV X21, X0
	0x0346FE98 LDR X2, [X8]
	0x0346FE9C BL 0x301B830
	0x0346FEA0 CBZ X22, 0x3470360
	0x0346FEA4 STR X21, [X22 + 0x20]
	0x0346FEA8 LDR X24, [X19 + 0x48]
	0x0346FEAC CBZ X24, 0x3470364
	0x0346FEB0 LDR W8, [X24 + 0x18]
	0x0346FEB4 CMP W8, 0x1
	0x0346FEB8 B.LT 0x34701B4
	0x0346FEBC ADRP X27, 0xCC1000
	0x0346FEC0 ADRP X28, 0xCC1000
	0x0346FEC4 ADRP X29, 0xCC1000
	0x0346FEC8 LDR X27, [X27 + 0x738]
	0x0346FECC LDR X28, [X28 + 0x758]
	0x0346FED0 LDR X29, [X29 + 0x760]
	0x0346FED4 MOV W26, W31
	0x0346FED8 CMP W26, W8
	0x0346FEDC B.CS 0x3470350
	0x0346FEE0 LDR X8, [X19 + 0x40]
	0x0346FEE4 CBZ X8, 0x3470348
	0x0346FEE8 ADD X9, X24, W26, 0x3, SXTW
	0x0346FEEC LDR X21, [X8 + 0x20]
	0x0346FEF0 LDR X23, [X9 + 0x20]
	0x0346FEF4 LDR X0, [X27]
	0x0346FEF8 BL 0x1C16F10
	0x0346FEFC MOV X22, X0
	0x0346FF00 MOV X1, X31
	0x0346FF04 BL 0x340D634
	0x0346FF08 CBZ X23, 0x347034C
	0x0346FF0C LDR X8, [X23]
	0x0346FF10 LDR X1, [X28]
	0x0346FF14 LDRH W9, [X8 + 0x12E]
	0x0346FF18 CBZ X9, 0x346FF3C
	0x0346FF1C LDR X10, [X8 + 0xB0]
	0x0346FF20 ADD X10, X10, 0x8
	0x0346FF24 LDUR X11, [X10 - 0x8]
	0x0346FF28 CMP X11, X1
	0x0346FF2C B.EQ 0x346FF4C
	0x0346FF30 SUBS X9, X9, 0x1
	0x0346FF34 ADD X10, X10, 0x10
	0x0346FF38 B.NE 0x346FF24
	0x0346FF3C MOV X0, X23
	0x0346FF40 MOV W2, W31
	0x0346FF44 BL 0x1C5C788
	0x0346FF48 B 0x346FF58
	0x0346FF4C LDRSW X9, [X10]
	0x0346FF50 ADD X8, X8, X9, 0x4, LSL
	0x0346FF54 ADD X0, X8, 0x138
	0x0346FF58 LDP X8, X1, [X0]
	0x0346FF5C MOV X0, X23
	0x0346FF60 BLR X8
	0x0346FF64 CBZ X22, 0x3470344
	0x0346FF68 STR X0, [X22 + 0x10]
	0x0346FF6C LDR X8, [X23]
	0x0346FF70 LDR X1, [X28]
	0x0346FF74 LDRH W9, [X8 + 0x12E]
	0x0346FF78 CBZ X9, 0x346FF9C
	0x0346FF7C LDR X10, [X8 + 0xB0]
	0x0346FF80 ADD X10, X10, 0x8
	0x0346FF84 LDUR X11, [X10 - 0x8]
	0x0346FF88 CMP X11, X1
	0x0346FF8C B.EQ 0x346FFAC
	0x0346FF90 SUBS X9, X9, 0x1
	0x0346FF94 ADD X10, X10, 0x10
	0x0346FF98 B.NE 0x346FF84
	0x0346FF9C MOVZ W2, 0x1
	0x0346FFA0 MOV X0, X23
	0x0346FFA4 BL 0x1C5C788
	0x0346FFA8 B 0x346FFBC
	0x0346FFAC LDR W9, [X10]
	0x0346FFB0 ADD W9, W9, 0x1
	0x0346FFB4 ADD X8, X8, W9, 0x4, SXTW
	0x0346FFB8 ADD X0, X8, 0x138
	0x0346FFBC LDP X8, X1, [X0]
	0x0346FFC0 MOV X0, X23
	0x0346FFC4 BLR X8
	0x0346FFC8 STR X0, [X22 + 0x18]
	0x0346FFCC LDR X8, [X23]
	0x0346FFD0 LDR X1, [X28]
	0x0346FFD4 LDRH W9, [X8 + 0x12E]
	0x0346FFD8 CBZ X9, 0x346FFFC
	0x0346FFDC LDR X10, [X8 + 0xB0]
	0x0346FFE0 ADD X10, X10, 0x8
	0x0346FFE4 LDUR X11, [X10 - 0x8]
	0x0346FFE8 CMP X11, X1
	0x0346FFEC B.EQ 0x347000C
	0x0346FFF0 SUBS X9, X9, 0x1
	0x0346FFF4 ADD X10, X10, 0x10
	0x0346FFF8 B.NE 0x346FFE4
	0x0346FFFC MOVZ W2, 0x2
	0x03470000 MOV X0, X23
	0x03470004 BL 0x1C5C788
	0x03470008 B 0x347001C
	0x0347000C LDR W9, [X10]
	0x03470010 ADD W9, W9, 0x2
	0x03470014 ADD X8, X8, W9, 0x4, SXTW
	0x03470018 ADD X0, X8, 0x138
	0x0347001C LDP X8, X1, [X0]
	0x03470020 MOV X0, X23
	0x03470024 BLR X8
	0x03470028 STR W0, [X22 + 0x20]
	0x0347002C LDR X8, [X23]
	0x03470030 LDR X1, [X28]
	0x03470034 LDRH W9, [X8 + 0x12E]
	0x03470038 CBZ X9, 0x347005C
	0x0347003C LDR X10, [X8 + 0xB0]
	0x03470040 ADD X10, X10, 0x8
	0x03470044 LDUR X11, [X10 - 0x8]
	0x03470048 CMP X11, X1
	0x0347004C B.EQ 0x347006C
	0x03470050 SUBS X9, X9, 0x1
	0x03470054 ADD X10, X10, 0x10
	0x03470058 B.NE 0x3470044
	0x0347005C MOVZ W2, 0x3
	0x03470060 MOV X0, X23
	0x03470064 BL 0x1C5C788
	0x03470068 B 0x347007C
	0x0347006C LDR W9, [X10]
	0x03470070 ADD W9, W9, 0x3
	0x03470074 ADD X8, X8, W9, 0x4, SXTW
	0x03470078 ADD X0, X8, 0x138
	0x0347007C LDP X8, X1, [X0]
	0x03470080 MOV X0, X23
	0x03470084 BLR X8
	0x03470088 STR W0, [X22 + 0x24]
	0x0347008C LDR X8, [X23]
	0x03470090 LDR X1, [X28]
	0x03470094 LDRH W9, [X8 + 0x12E]
	0x03470098 CBZ X9, 0x34700BC
	0x0347009C LDR X10, [X8 + 0xB0]
	0x034700A0 ADD X10, X10, 0x8
	0x034700A4 LDUR X11, [X10 - 0x8]
	0x034700A8 CMP X11, X1
	0x034700AC B.EQ 0x34700CC
	0x034700B0 SUBS X9, X9, 0x1
	0x034700B4 ADD X10, X10, 0x10
	0x034700B8 B.NE 0x34700A4
	0x034700BC MOVZ W2, 0x4
	0x034700C0 MOV X0, X23
	0x034700C4 BL 0x1C5C788
	0x034700C8 B 0x34700DC
	0x034700CC LDR W9, [X10]
	0x034700D0 ADD W9, W9, 0x4
	0x034700D4 ADD X8, X8, W9, 0x4, SXTW
	0x034700D8 ADD X0, X8, 0x138
	0x034700DC LDP X8, X1, [X0]
	0x034700E0 MOV X0, X23
	0x034700E4 BLR X8
	0x034700E8 STR X0, [X22 + 0x28]
	0x034700EC LDR X8, [X23]
	0x034700F0 LDR X1, [X28]
	0x034700F4 LDRH W9, [X8 + 0x12E]
	0x034700F8 CBZ X9, 0x347011C
	0x034700FC LDR X10, [X8 + 0xB0]
	0x03470100 ADD X10, X10, 0x8
	0x03470104 LDUR X11, [X10 - 0x8]
	0x03470108 CMP X11, X1
	0x0347010C B.EQ 0x347012C
	0x03470110 SUBS X9, X9, 0x1
	0x03470114 ADD X10, X10, 0x10
	0x03470118 B.NE 0x3470104
	0x0347011C MOVZ W2, 0x5
	0x03470120 MOV X0, X23
	0x03470124 BL 0x1C5C788
	0x03470128 B 0x347013C
	0x0347012C LDR W9, [X10]
	0x03470130 ADD W9, W9, 0x5
	0x03470134 ADD X8, X8, W9, 0x4, SXTW
	0x03470138 ADD X0, X8, 0x138
	0x0347013C LDP X8, X1, [X0]
	0x03470140 MOV X0, X23
	0x03470144 BLR X8
	0x03470148 STR X0, [X22 + 0x30]
	0x0347014C CBZ X21, 0x3470354
	0x03470150 LDR W10, [X21 + 0x1C]
	0x03470154 LDR X8, [X21 + 0x10]
	0x03470158 LDR X9, [X29]
	0x0347015C ADD W10, W10, 0x1
	0x03470160 STR W10, [X21 + 0x1C]
	0x03470164 CBZ X8, 0x3470358
	0x03470168 LDRSW X10, [X21 + 0x18]
	0x0347016C LDR W11, [X8 + 0x18]
	0x03470170 CMP W10, W11
	0x03470174 B.CS 0x347018C
	0x03470178 ADD W9, W10, 0x1
	0x0347017C ADD X8, X8, X10, 0x3, LSL
	0x03470180 STR W9, [X21 + 0x18]
	0x03470184 STR X22, [X8 + 0x20]
	0x03470188 B 0x34701A4
	0x0347018C LDR X8, [X9 + 0x20]
	0x03470190 LDR X8, [X8 + 0xC0]
	0x03470194 LDR X2, [X8 + 0x70]
	0x03470198 MOV X0, X21
	0x0347019C MOV X1, X22
	0x034701A0 BL 0x301BF90
	0x034701A4 LDR W8, [X24 + 0x18]
	0x034701A8 ADD W26, W26, 0x1
	0x034701AC CMP W26, W8
	0x034701B0 B.LT 0x346FED8
	0x034701B4 CBZ X20, 0x3470368
	0x034701B8 ADRP X8, 0xCC0000
	0x034701BC LDR X8, [X8 + 0x750]
	0x034701C0 LDR X21, [X20 + 0x58]
	0x034701C4 LDR X23, [X19 + 0x40]
	0x034701C8 LDR X0, [X8]
	0x034701CC BL 0x1C16F10
	0x034701D0 ADRP X8, 0xCC0000
	0x034701D4 LDR X8, [X8 + 0x788]
	0x034701D8 MOV X22, X0
	0x034701DC LDR X2, [X8]
	0x034701E0 MOV X1, X23
	0x034701E4 MOV X3, X31
	0x034701E8 BL 0x2D27AA8
	0x034701EC LDR X8, [X19 + 0x40]
	0x034701F0 CBZ X8, 0x347036C
	0x034701F4 ADRP X9, 0xCBF000
	0x034701F8 LDR X23, [X19 + 0x38]
	0x034701FC LDR X9, [X9 + 0x7C8]
	0x03470200 CBNZ X23, 0x3470208
	0x03470204 LDR X23, [X20 + 0x18]
	0x03470208 LDR X20, [X8 + 0x18]
	0x0347020C LDR X1, [X8 + 0x28]
	0x03470210 LDR X2, [X9]
	0x03470214 STP X31, X31, [X31 + 0x8]
	0x03470218 ADD X0, X31, 0x8
	0x0347021C BL 0x242E368
	0x03470220 ADRP X8, 0xCBF000
	0x03470224 LDR X8, [X8 + 0x7D0]
	0x03470228 LDR X0, [X8]
	0x0347022C BL 0x1C16F10
	0x03470230 LDP X3, X4, [X31 + 0x8]
	0x03470234 MOV X24, X0
	0x03470238 MOV X1, X20
	0x0347023C MOV X2, X23
	0x03470240 BL 0x3465404
	0x03470244 CBZ X21, 0x3470370
	0x03470248 ADRP X8, 0xCC0000
	0x0347024C LDR X8, [X8 + 0x768]
	0x03470250 LDR X3, [X8]
	0x03470254 MOV X0, X21
	0x03470258 MOV X1, X22
	0x0347025C MOV X2, X24
	0x03470260 BL 0x2243230
	0x03470264 CBZ X0, 0x3470374
	0x03470268 ADRP X8, 0xCC0000
	0x0347026C LDR X8, [X8 + 0x780]
	0x03470270 LDR X1, [X8]
	0x03470274 BL 0x269F5D0
	0x03470278 ADRP X8, 0xCC0000
	0x0347027C LDR X8, [X8 + 0x778]
	0x03470280 STR X0, [X31 + 0x18]
	0x03470284 LDR X1, [X8]
	0x03470288 ADD X0, X31, 0x18
	0x0347028C BL 0x2677430
	0x03470290 TBZ X0, 0x0, 0x34702E8
	0x03470294 ADRP X8, 0xCC0000
	0x03470298 LDR X8, [X8 + 0x770]
	0x0347029C ADD X0, X31, 0x18
	0x034702A0 LDR X1, [X8]
	0x034702A4 BL 0x2677474
	0x034702A8 MOVN W8, 0x1
	0x034702AC STR W8, [X19]
	0x034702B0 STR X31, [X19 + 0x40]
	0x034702B4 MOV X20, X0
	0x034702B8 LDR X0, [X25]
	0x034702BC ADRP X21, 0xCBF000
	0x034702C0 ADD X19, X19, 0x8
	0x034702C4 LDR W8, [X0 + 0xE0]
	0x034702C8 LDR X21, [X21 + 0x560]
	0x034702CC CBNZ W8, 0x34702D4
	0x034702D0 BL 0x1C16DFC
	0x034702D4 LDR X2, [X21]
	0x034702D8 MOV X0, X19
	0x034702DC MOV X1, X20
	0x034702E0 BL 0x26322B0
	0x034702E4 B 0x3470324
	0x034702E8 MOVZ W8, 0x1
	0x034702EC STR W8, [X19]
	0x034702F0 LDR X8, [X31 + 0x18]
	0x034702F4 STR X8, [X19 + 0x58]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF6F000
	011 Move W8, [X20+2023]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCC2000
	018 Move X0, [X0+1744]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC2000
	021 Move X0, [X0+1752]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC1000
	024 Move X0, [X0+1240]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC0000
	027 Move X0, [X0+1416]
	028 Call 0x1C17CF4
	029 Move X0, 0xC87000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC86000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC2000
	036 Move X0, [X0+1688]
	037 Call 0x1C17CF4
	038 Move X0, 0xC86000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC1000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC1000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC2000
	048 Move X0, [X0+1696]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC2000
	051 Move X0, [X0+1704]
	052 Call 0x1C17CF4
	053 Move X0, 0xC86000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC86000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCC2000
	060 Move X0, [X0+1712]
	061 Call 0x1C17CF4
	062 Move X0, 0xC86000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCC2000
	066 Move X0, [X0+1720]
	067 Call 0x1C17CF4
	068 Move X0, 0xCC2000
	069 Move X0, [X0+1760]
	070 Call 0x1C17CF4
	071 Move X0, 0xCC2000
	072 Move X0, [X0+1768]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2023], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCC0000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1416]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+96]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+96], X31
	092 Move [X19], W9
	093 Move X8, [X19+88]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+88], X31
	099 Move [X19], W9
	100 Move X8, 0xC86000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCC2000
	106 Move X8, [X8+1768]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass124_0..ctor, X0
	112 Move [X19+80], X21
	113 Compare X21, 0
	114 JumpIfEqual {384}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move W8, [X19+56]
	122 Move [X21+40], W8
	123 Move X8, [X19+64]
	124 Move [X21+48], X8
	125 Compare X20, 0
	126 JumpIfEqual {385}
	127 Move W8, [X20+16]
	128 Compare W8, 0
	129 JumpIfEqual {267}
	130 Move X8, [X19+80]
	131 Compare X8, 0
	132 JumpIfEqual {386}
	133 Move X21, [X8+24]
	134 Compare X21, 0
	135 JumpIfEqual {387}
	136 Move X23, 0xC86000
	137 Move X8, [X21]
	138 Move X23, [X23+2072]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X23]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 7
	150 Move X0, X21
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 7
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {265}
	166 Move X8, [X19+80]
	167 Compare X8, 0
	168 JumpIfEqual {388}
	169 Move X9, 0xC86000
	170 Move X9, [X9+2544]
	171 Move X21, [X8+24]
	172 Move X0, [X9]
	173 Move W9, [X0+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X31
	178 Call DateTime.get_UtcNow
	179 Move X22, 0xC87000
	180 Move X22, [X22+2576]
	181 Move X8, X0
	182 Move [X31+40], X8
	183 Move X0, [X22]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X22]
	189 Move X8, [X0+184]
	190 Move X1, [X8]
	191 Add X0, X31, 40
	192 Move X2, X31
	193 Call DateTime.Add, X0, X1
	194 Compare X21, 0
	195 JumpIfEqual {389}
	196 Move X8, [X21]
	197 Move X1, [X23]
	198 Move X22, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move W2, 11
	209 Move X0, X21
	210 Call 0x1C5D788
	211 Move W9, [X10]
	212 Add W9, W9, 11
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X21
	218 Move X1, X22
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {265}
	224 Move X8, [X19+80]
	225 Compare X8, 0
	226 JumpIfEqual {390}
	227 Move X1, [X8+24]
	228 Move X3, [X19+72]
	229 Move X4, [X8+48]
	230 Move X0, X20
	231 Move X2, X31
	232 Move X5, X31
	233 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	234 Compare X0, 0
	235 JumpIfEqual {391}
	236 Move X8, 0xC86000
	237 Move X8, [X8+2112]
	238 Move X1, [X8]
	239 Call Task`1<Object>.GetAwaiter, X0
	240 Move X8, 0xC86000
	241 Move X8, [X8+2104]
	242 Move [X31+32], X0
	243 Move X1, [X8]
	244 Add X0, X31, 32
	245 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {100}
	250 Move [X19], W31
	251 Move X8, [X31+32]
	252 Move [X19+88], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xCC2000
	259 Move X8, [X8+1744]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 32
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Compare X20, 0
	266 JumpIfEqual {383}
	267 Move X8, 0xCC1000
	268 Move X8, [X8+1688]
	269 Move X21, [X20+88]
	270 Move X23, [X19+80]
	271 Move X0, [X8]
	272 Call 0x1C17F10
	273 Move X8, 0xCC1000
	274 Move X8, [X8+1760]
	275 Move X22, X0
	276 Move X2, [X8]
	277 Move X1, X23
	278 Move X3, X31
	279 Call Func`1<Object>..ctor, X0, X1, X2
	280 Move X8, [X19+80]
	281 Compare X8, 0
	282 JumpIfEqual {380}
	283 Move X9, 0xCC0000
	284 Move X23, [X19+72]
	285 Move X9, [X9+1992]
	286 Compare X23, 0
	287 JumpIfNotEqual {289}
	288 Move X23, [X20+24]
	289 Move X20, [X8+24]
	290 Move X1, [X8+48]
	291 Move X2, [X9]
	292 Move [X31+8], X31
	293 Move [X31+16], X31
	294 Add X0, X31, 8
	295 Call Nullable`1<CancellationToken>..ctor, X0, X1
	296 Move X8, 0xCC0000
	297 Move X8, [X8+2000]
	298 Move X0, [X8]
	299 Call 0x1C17F10
	300 Move X3, [X31+8]
	301 Move X4, [X31+16]
	302 Move X24, X0
	303 Move X1, X20
	304 Move X2, X23
	305 Call RetryHistory..ctor, X0, X1, X2, X3
	306 Compare X21, 0
	307 JumpIfEqual {381}
	308 Move X8, 0xCC1000
	309 Move X8, [X8+1696]
	310 Move X3, [X8]
	311 Move X0, X21
	312 Move X1, X22
	313 Move X2, X24
	314 Call 0x2244230, X0, X1, X2
	315 Compare X0, 0
	316 JumpIfEqual {382}
	317 Move X8, 0xCC1000
	318 Move X8, [X8+1720]
	319 Move X1, [X8]
	320 Call Task`1<Object>.GetAwaiter, X0
	321 Move X8, 0xCC1000
	322 Move X8, [X8+1712]
	323 Move [X31+24], X0
	324 Move X1, [X8]
	325 Add X0, X31, 24
	326 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {354}
	331 Move X8, 0xCC1000
	332 Move X8, [X8+1704]
	333 Add X0, X31, 24
	334 Move X1, [X8]
	335 Call TaskAwaiter`1<Object>.GetResult, X0
	336 Move TEMP, 1
	337 Not TEMP
	338 Move W8, TEMP
	339 Move [X19], W8
	340 Move [X19+80], X31
	341 Move X20, X0
	342 Move X0, [X25]
	343 Move X21, 0xCC0000
	344 Add X19, X19, 8
	345 Move W8, [X0+224]
	346 Move X21, [X21+1240]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X2, [X21]
	351 Move X0, X19
	352 Move X1, X20
	353 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	354 Move W8, 1
	355 Move [X19], W8
	356 Move X8, [X31+24]
	357 Move [X19+96], X8
	358 Move X0, [X25]
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X8, 0xCC1000
	364 Move X8, [X8+1752]
	365 Add X0, X19, 8
	366 Move X3, [X8]
	367 Add X1, X31, 24
	368 Move X2, X19
	369 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	370 Move X20, [X31+96]
	371 Move X19, [X31+104]
	372 Move X22, [X31+80]
	373 Move X21, [X31+88]
	374 Move X24, [X31+64]
	375 Move X23, [X31+72]
	376 Move X30, [X31+48]
	377 Move X25, [X31+56]
	378 Add X31, X31, 112
	379 Return 
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Move X20, X0
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X0, X20
	395 Call 0x3EB2AD0
	396 Move X20, X0
	397 Move X0, 0xC84000
	398 Move X0, [X0+2000]
	399 Call 0x1C17D08
	400 Move X8, [X20]
	401 Move X1, [X8]
	402 Call 0x1C18270
	403 Move TEMP, X0
	404 And TEMP, TEMP, 1
	405 Compare TEMP, 1
	406 JumpIfNotEqual {428}
	407 Move X20, [X20]
	408 Call 0x3EB2AE0
	409 Move TEMP, 1
	410 Not TEMP
	411 Move W8, TEMP
	412 Move [X19+80], X31
	413 Move [X19+8], W8
	414 Move X0, 0xCBF000
	415 Move X0, [X0+1416]
	416 Call 0x1C17D08
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Move X0, 0xCC0000
	422 Move X0, [X0+1272]
	423 Call 0x1C17D08
	424 Move X2, X0
	425 Move X0, X19
	426 Move X1, X20
	427 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	428 Move W0, 8
	429 Call 0x3EB2AF0
	430 Move X8, [X20]
	431 Move [X0], X8
	432 Move X1, 0xA45000
	433 Add X1, X1, 3672
	434 Move X2, X31
	435 Call 0x3EB2B00
	436 Move X20, X0
	437 Call 0x3EB2AE0
	438 Move X0, X20
	439 Call 0x1D2D690
	440 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034702F8 LDR X0, [X25]
	0x034702FC LDR W8, [X0 + 0xE0]
	0x03470300 CBNZ W8, 0x3470308
	0x03470304 BL 0x1C16DFC
	0x03470308 ADRP X8, 0xCC0000
	0x0347030C LDR X8, [X8 + 0x740]
	0x03470310 ADD X0, X19, 0x8
	0x03470314 LDR X3, [X8]
	0x03470318 ADD X1, X31, 0x18
	0x0347031C MOV X2, X19
	0x03470320 BL 0x1FBE840
	0x03470324 LDP X20, X19, [X31 + 0x80]
	0x03470328 LDP X22, X21, [X31 + 0x70]
	0x0347032C LDP X24, X23, [X31 + 0x60]
	0x03470330 LDP X26, X25, [X31 + 0x50]
	0x03470334 LDP X28, X27, [X31 + 0x40]
	0x03470338 LDP X29, X30, [X31 + 0x30]
	0x0347033C ADD X31, X31, 0x90
	0x03470340 RET
	0x03470344 BL 0x1C16F20
	0x03470348 BL 0x1C16F20
	0x0347034C BL 0x1C16F20
	0x03470350 BL 0x1C16F28
	0x03470354 BL 0x1C16F20
	0x03470358 BL 0x1C16F20
	0x0347035C BL 0x1C16F20
	0x03470360 BL 0x1C16F20
	0x03470364 BL 0x1C16F20
	0x03470368 BL 0x1C16F20
	0x0347036C BL 0x1C16F20
	0x03470370 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF6E000
	007 Move X21, 0xCBF000
	008 Move W8, [X22+2024]
	009 Move X21, [X21+1416]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC0000
	017 Move X0, [X0+1280]
	018 Call 0x1C17CF4
	019 Move X0, 0xCBF000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2024], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC0000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1280]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

