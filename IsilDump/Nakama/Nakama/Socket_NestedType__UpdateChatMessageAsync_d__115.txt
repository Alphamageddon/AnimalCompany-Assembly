Type: Nakama.Socket/<UpdateChatMessageAsync>d__115

Method: System.Void MoveNext()

Disassembly:
	0x03484CD4 MOV X19, X1
	0x03484CD8 MOV X20, X0
	0x03484CDC TBNZ X8, 0x0, 0x3484CF4
	0x03484CE0 ADRP X0, 0xC72000
	0x03484CE4 LDR X0, [X0 + 0x2C8]
	0x03484CE8 BL 0x1C16CF4
	0x03484CEC MOVZ W8, 0x1
	0x03484CF0 STRB W8, [X21 + 0x8DF]
	0x03484CF4 ADRP X24, 0xC72000
	0x03484CF8 LDR X21, [X20 + 0x20]!
	0x03484CFC LDR X24, [X24 + 0x2C8]
	0x03484D00 MOV X0, X21
	0x03484D04 MOV X1, X19
	0x03484D08 MOV X2, X31
	0x03484D0C BL 0x33C0FDC
	0x03484D10 CBZ X0, 0x3484D30
	0x03484D14 LDR X23, [X24]
	0x03484D18 MOV X22, X0
	0x03484D1C MOV X1, X23
	0x03484D20 BL 0x1C16E00
	0x03484D24 MOV X1, X0
	0x03484D28 CBNZ X0, 0x3484D34
	0x03484D2C B 0x3484D60
	0x03484D30 MOV X1, X31
	0x03484D34 MOV X0, X20
	0x03484D38 MOV X2, X21
	0x03484D3C BL 0x1C24138
	0x03484D40 CMP X21, X0
	0x03484D44 MOV X21, X0
	0x03484D48 B.NE 0x3484D00
	0x03484D4C LDP X20, X19, [X31 + 0x30]
	0x03484D50 LDP X22, X21, [X31 + 0x20]
	0x03484D54 LDP X24, X23, [X31 + 0x10]
	0x03484D58 LDR X30, [X31], #0x40
	0x03484D5C RET
	0x03484D60 MOV X0, X22
	0x03484D64 MOV X1, X23
	0x03484D68 BL 0x1C171E0
	0x03484D6C STR X30, [X31 - 0x40]!
	0x03484D70 STP X24, X23, [X31 + 0x10]
	0x03484D74 STP X22, X21, [X31 + 0x20]
	0x03484D78 STP X20, X19, [X31 + 0x30]
	0x03484D7C ADRP X21, 0xF59000
	0x03484D80 LDRB W8, [X21 + 0x8E0]
	0x03484D84 MOV X19, X1
	0x03484D88 MOV X20, X0
	0x03484D8C TBNZ X8, 0x0, 0x3484DA4
	0x03484D90 ADRP X0, 0xCAA000
	0x03484D94 LDR X0, [X0 + 0x9D0]
	0x03484D98 BL 0x1C16CF4
	0x03484D9C MOVZ W8, 0x1
	0x03484DA0 STRB W8, [X21 + 0x8E0]
	0x03484DA4 ADRP X24, 0xCAA000
	0x03484DA8 LDR X21, [X20 + 0x28]!
	0x03484DAC LDR X24, [X24 + 0x9D0]
	0x03484DB0 MOV X0, X21
	0x03484DB4 MOV X1, X19
	0x03484DB8 MOV X2, X31
	0x03484DBC BL 0x33C0DE4
	0x03484DC0 CBZ X0, 0x3484DE0
	0x03484DC4 LDR X23, [X24]
	0x03484DC8 MOV X22, X0
	0x03484DCC MOV X1, X23
	0x03484DD0 BL 0x1C16E00
	0x03484DD4 MOV X1, X0
	0x03484DD8 CBNZ X0, 0x3484DE4
	0x03484DDC B 0x3484E10
	0x03484DE0 MOV X1, X31
	0x03484DE4 MOV X0, X20
	0x03484DE8 MOV X2, X21
	0x03484DEC BL 0x1C24138
	0x03484DF0 CMP X21, X0
	0x03484DF4 MOV X21, X0
	0x03484DF8 B.NE 0x3484DB0
	0x03484DFC LDP X20, X19, [X31 + 0x30]
	0x03484E00 LDP X22, X21, [X31 + 0x20]
	0x03484E04 LDP X24, X23, [X31 + 0x10]
	0x03484E08 LDR X30, [X31], #0x40
	0x03484E0C RET
	0x03484E10 MOV X0, X22
	0x03484E14 MOV X1, X23
	0x03484E18 BL 0x1C171E0
	0x03484E1C STR X30, [X31 - 0x40]!
	0x03484E20 STP X24, X23, [X31 + 0x10]
	0x03484E24 STP X22, X21, [X31 + 0x20]
	0x03484E28 STP X20, X19, [X31 + 0x30]
	0x03484E2C ADRP X21, 0xF59000
	0x03484E30 LDRB W8, [X21 + 0x8E1]
	0x03484E34 MOV X19, X1
	0x03484E38 MOV X20, X0
	0x03484E3C TBNZ X8, 0x0, 0x3484E54
	0x03484E40 ADRP X0, 0xCAA000
	0x03484E44 LDR X0, [X0 + 0x9D0]
	0x03484E48 BL 0x1C16CF4
	0x03484E4C MOVZ W8, 0x1
	0x03484E50 STRB W8, [X21 + 0x8E1]
	0x03484E54 ADRP X24, 0xCAA000
	0x03484E58 LDR X21, [X20 + 0x28]!
	0x03484E5C LDR X24, [X24 + 0x9D0]
	0x03484E60 MOV X0, X21
	0x03484E64 MOV X1, X19
	0x03484E68 MOV X2, X31
	0x03484E6C BL 0x33C0FDC
	0x03484E70 CBZ X0, 0x3484E90
	0x03484E74 LDR X23, [X24]
	0x03484E78 MOV X22, X0
	0x03484E7C MOV X1, X23
	0x03484E80 BL 0x1C16E00
	0x03484E84 MOV X1, X0
	0x03484E88 CBNZ X0, 0x3484E94
	0x03484E8C B 0x3484EC0
	0x03484E90 MOV X1, X31
	0x03484E94 MOV X0, X20
	0x03484E98 MOV X2, X21
	0x03484E9C BL 0x1C24138
	0x03484EA0 CMP X21, X0
	0x03484EA4 MOV X21, X0
	0x03484EA8 B.NE 0x3484E60
	0x03484EAC LDP X20, X19, [X31 + 0x30]
	0x03484EB0 LDP X22, X21, [X31 + 0x20]
	0x03484EB4 LDP X24, X23, [X31 + 0x10]
	0x03484EB8 LDR X30, [X31], #0x40
	0x03484EBC RET
	0x03484EC0 MOV X0, X22
	0x03484EC4 MOV X1, X23
	0x03484EC8 BL 0x1C171E0
	0x03484ECC STR X30, [X31 - 0x10]!
	0x03484ED0 LDR X0, [X0 + 0x50]
	0x03484ED4 CBZ X0, 0x3484EEC
	0x03484ED8 LDR X8, [X0]
	0x03484EDC LDP X9, X1, [X8 + 0x1B8]
	0x03484EE0 BLR X9
	0x03484EE4 CMP W0, 0x2
	0x03484EE8 CSET W0, EQ
	0x03484EEC LDR X30, [X31], #0x10
	0x03484EF0 RET
	0x03484EF4 STR X30, [X31 - 0x10]!
	0x03484EF8 LDR X0, [X0 + 0x50]
	0x03484EFC CBZ X0, 0x3484F14
	0x03484F00 LDR X8, [X0]
	0x03484F04 LDP X9, X1, [X8 + 0x1B8]
	0x03484F08 BLR X9
	0x03484F0C CMP W0, 0x1
	0x03484F10 CSET W0, EQ
	0x03484F14 LDR X30, [X31], #0x10
	0x03484F18 RET
	0x03484F1C STP X30, X25, [X31 - 0x40]!
	0x03484F20 STP X24, X23, [X31 + 0x10]
	0x03484F24 STP X22, X21, [X31 + 0x20]
	0x03484F28 STP X20, X19, [X31 + 0x30]
	0x03484F2C ADRP X24, 0xF59000
	0x03484F30 ADRP X25, 0xCAD000
	0x03484F34 LDRB W8, [X24 + 0x8E2]
	0x03484F38 LDR X25, [X25 + 0xC0]
	0x03484F3C MOV X19, X4
	0x03484F40 MOV W20, W3
	0x03484F44 MOV W21, W2
	0x03484F48 MOV W23, W1
	0x03484F4C MOV X22, X0
	0x03484F50 TBNZ X8, 0x0, 0x3484F74
	0x03484F54 ADRP X0, 0xC71000
	0x03484F58 LDR X0, [X0 + 0x570]
	0x03484F5C BL 0x1C16CF4
	0x03484F60 ADRP X0, 0xCAD000
	0x03484F64 LDR X0, [X0 + 0xC0]
	0x03484F68 BL 0x1C16CF4
	0x03484F6C MOVZ W8, 0x1
	0x03484F70 STRB W8, [X24 + 0x8E2]
	0x03484F74 LDR X0, [X25]
	0x03484F78 BL 0x1C16F10
	0x03484F7C MOV X24, X0
	0x03484F80 BL 0x3484FE8
	0x03484F84 CBZ X24, 0x3484FE4
	0x03484F88 ADRP X8, 0xC71000
	0x03484F8C LDR X8, [X8 + 0x570]
	0x03484F90 MOVZ W25, 0x1
	0x03484F94 STRB W25, [X24 + 0x28]
	0x03484F98 LDR X0, [X8]
	0x03484F9C LDR W8, [X0 + 0xE0]
	0x03484FA0 CBNZ W8, 0x3484FA8
	0x03484FA4 BL 0x1C16DFC
	0x03484FA8 SCVTF D0, W23
	0x03484FAC MOV X0, X31
	0x03484FB0 BL 0x3394754
	0x03484FB4 STR X0, [X24 + 0x10]
	0x03484FB8 STRB W25, [X24 + 0x18]
	0x03484FBC MOV X0, X22
	0x03484FC0 MOV X1, X24
	0x03484FC4 MOV W2, W21
	0x03484FC8 MOV W3, W20
	0x03484FCC MOV X4, X19
	0x03484FD0 LDP X20, X19, [X31 + 0x30]
	0x03484FD4 LDP X22, X21, [X31 + 0x20]
	0x03484FD8 LDP X24, X23, [X31 + 0x10]
	0x03484FDC LDP X30, X25, [X31], #0x40
	0x03484FE0 B 0x34850AC
	0x03484FE4 BL 0x1C16F20
	0x03484FE8 STR X30, [X31 - 0x30]!
	0x03484FEC STP X22, X21, [X31 + 0x10]
	0x03484FF0 STP X20, X19, [X31 + 0x20]
	0x03484FF4 ADRP X20, 0xF59000
	0x03484FF8 ADRP X21, 0xC71000
	0x03484FFC LDRB W8, [X20 + 0x941]
	0x03485000 B 0x3EB18BC
	0x03485004 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF5A000
	009 Move W8, [X20+2258]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xCAE000
	016 Move X0, [X0+96]
	017 Call 0x1C17CF4
	018 Move X0, 0xCAD000
	019 Move X0, [X0+4040]
	020 Call 0x1C17CF4
	021 Move X0, 0xCAD000
	022 Move X0, [X0+3392]
	023 Call 0x1C17CF4
	024 Move X0, 0xCAE000
	025 Move X0, [X0+104]
	026 Call 0x1C17CF4
	027 Move X0, 0xC70000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0xCAD000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move X0, 0xCAD000
	034 Move X0, [X0+3728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCAD000
	037 Move X0, [X0+3736]
	038 Call 0x1C17CF4
	039 Move X0, 0xCAD000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0xC74000
	043 Move X0, [X0+272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2258], W8
	047 Move [X31+8], X31
	048 Move X23, 0xCAD000
	049 Move W8, [X19]
	050 Move X23, [X23+3392]
	051 Compare W8, 0
	052 JumpIfEqual {131}
	053 Move X20, [X19+32]
	054 Compare X20, 0
	055 JumpIfEqual {170}
	056 Add X0, X20, 16
	057 Move X1, X31
	058 Call Interlocked.Increment, X0
	059 Move X8, 0xCAD000
	060 Move X8, [X8+3016]
	061 Move W22, W0
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X21, X0
	065 Move X1, X31
	066 Call Object..ctor, X0
	067 Move X8, 0xC70000
	068 Move X8, [X8+1880]
	069 Move [X31+4], W22
	070 Move X0, [X8]
	071 Add X1, X31, 4
	072 Call 0x1C17E04
	073 Move X1, X0
	074 Move X8, 0xC74000
	075 Move X8, [X8+272]
	076 Move X0, [X8]
	077 Move X2, X31
	078 Call String.Format, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {171}
	081 Move X8, 0xCAE000
	082 Move X8, [X8+104]
	083 Move [X21+16], X0
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X22, X0
	087 Move X1, X31
	088 Call ChannelUpdateMessage..ctor, X0
	089 Compare X22, 0
	090 JumpIfEqual {172}
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Move [X22+1], V0
	093 Move X8, [X19+56]
	094 Move [X22+32], X8
	095 Move [X21+80], X22
	096 Move X0, X20
	097 Move X1, X21
	098 Move X2, X31
	099 Call Socket.SendAsync, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {173}
	102 Move X8, 0xCAD000
	103 Move X8, [X8+3736]
	104 Move X1, [X8]
	105 Call Task`1<Object>.GetAwaiter, X0
	106 Move X8, 0xCAD000
	107 Move X8, [X8+3728]
	108 Move [X31+8], X0
	109 Move X1, [X8]
	110 Add X0, X31, 8
	111 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {138}
	116 Move [X19], W31
	117 Move X8, [X31+8]
	118 Move [X19+64], X8
	119 Move X0, [X23]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X8, 0xCAE000
	125 Move X8, [X8+96]
	126 Add X0, X19, 8
	127 Move X3, [X8]
	128 Add X1, X31, 8
	129 Move X2, X19
	130 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	131 Move X8, [X19+64]
	132 Move TEMP, 0
	133 Not TEMP
	134 Move W9, TEMP
	135 Move [X31+8], X8
	136 Move [X19+64], X31
	137 Move [X19], W9
	138 Move X8, 0xCAD000
	139 Move X8, [X8+3720]
	140 Add X0, X31, 8
	141 Move X1, [X8]
	142 Call TaskAwaiter`1<Object>.GetResult, X0
	143 Compare X0, 0
	144 JumpIfEqual {169}
	145 Move TEMP, 1
	146 Not TEMP
	147 Move W8, TEMP
	148 Move X20, [X0+56]
	149 Move [X19+8], W8
	150 Move X0, [X23]
	151 Move X21, 0xCAD000
	152 Move W8, [X0+224]
	153 Move X21, [X21+4040]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X2, [X21]
	158 Move X0, X19
	159 Move X1, X20
	160 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X30, [X31+16]
	166 Move X23, [X31+24]
	167 Add X31, X31, 64
	168 Return 
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 Call 0x1C17F20
	174 Move X20, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, X20
	177 Call 0x3EB2AD0
	178 Move X20, X0
	179 Move X0, 0xC70000
	180 Move X0, [X0+2000]
	181 Call 0x1C17D08
	182 Move X8, [X20]
	183 Move X1, [X8]
	184 Call 0x1C18270
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {209}
	189 Move X20, [X20]
	190 Call 0x3EB2AE0
	191 Move TEMP, 1
	192 Not TEMP
	193 Move W8, TEMP
	194 Move [X19+8], W8
	195 Move X0, 0xCAD000
	196 Move X0, [X0+3392]
	197 Call 0x1C17D08
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X0, 0xCAD000
	203 Move X0, [X0+4056]
	204 Call 0x1C17D08
	205 Move X2, X0
	206 Move X0, X19
	207 Move X1, X20
	208 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	209 Move W0, 8
	210 Call 0x3EB2AF0
	211 Move X8, [X20]
	212 Move [X0], X8
	213 Move X1, 0xA31000
	214 Add X1, X1, 3672
	215 Move X2, X31
	216 Call 0x3EB2B00
	217 Move X20, X0
	218 Call 0x3EB2AE0
	219 Move X0, X20
	220 Call 0x1D2D690
	221 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03485008 TBNZ X8, 0x0, 0x3485038
	0x0348500C ADRP X0, 0xC6F000
	0x03485010 LDR X0, [X0 + 0x6C0]
	0x03485014 BL 0x1C16CF4
	0x03485018 ADRP X0, 0xC6F000
	0x0348501C LDR X0, [X0 + 0x6D0]
	0x03485020 BL 0x1C16CF4
	0x03485024 ADRP X0, 0xC70000
	0x03485028 LDR X0, [X0 + 0x570]
	0x0348502C BL 0x1C16CF4
	0x03485030 MOVZ W8, 0x1
	0x03485034 STRB W8, [X20 + 0x941]
	0x03485038 ADRP X22, 0xC6F000
	0x0348503C ADRP X20, 0xC6F000
	0x03485040 LDR X22, [X22 + 0x6D0]
	0x03485044 LDR X20, [X20 + 0x6C0]
	0x03485048 MOV X0, X19
	0x0348504C MOV X1, X31
	0x03485050 BL 0x33BDD8C
	0x03485054 LDR X0, [X21]
	0x03485058 LDR W8, [X0 + 0xE0]
	0x0348505C CBNZ W8, 0x3485064
	0x03485060 BL 0x1C16DFC
	0x03485064 FMOV D0, 16.000000000931323
	0x03485068 MOV X0, X31
	0x0348506C BL 0x3394754
	0x03485070 MOVZ W8, 0x1
	0x03485074 STR X0, [X19 + 0x10]
	0x03485078 STRB W8, [X19 + 0x18]
	0x0348507C LDR X0, [X22]
	0x03485080 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF59000
	007 Move X21, 0xCAC000
	008 Move W8, [X22+2259]
	009 Move X21, [X21+3392]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCAC000
	017 Move X0, [X0+4064]
	018 Call 0x1C17CF4
	019 Move X0, 0xCAC000
	020 Move X0, [X0+3392]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2259], W8
	024 Move X0, [X21]
	025 Move X21, 0xCAC000
	026 Move W8, [X0+224]
	027 Move X21, [X21+4064]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

