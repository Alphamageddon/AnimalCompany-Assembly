Type: Nakama.Client/<ListUsersStorageObjectsAsync>d__98

Method: System.Void MoveNext()

Disassembly:
	0x03465D6C BL 0x1C16CF4
	0x03465D70 ADRP X0, 0xCCA000
	0x03465D74 LDR X0, [X0 + 0x7C8]
	0x03465D78 BL 0x1C16CF4
	0x03465D7C ADRP X0, 0xCCA000
	0x03465D80 LDR X0, [X0 + 0x7D0]
	0x03465D84 BL 0x1C16CF4
	0x03465D88 ADRP X0, 0xCCB000
	0x03465D8C LDR X0, [X0 + 0x3E8]
	0x03465D90 BL 0x1C16CF4
	0x03465D94 ADRP X0, 0xC90000
	0x03465D98 LDR X0, [X0 + 0xE18]
	0x03465D9C BL 0x1C16CF4
	0x03465DA0 ADRP X0, 0xC8F000
	0x03465DA4 LDR X0, [X0 + 0x830]
	0x03465DA8 BL 0x1C16CF4
	0x03465DAC ADRP X0, 0xC90000
	0x03465DB0 LDR X0, [X0 + 0xE20]
	0x03465DB4 BL 0x1C16CF4
	0x03465DB8 ADRP X0, 0xC8F000
	0x03465DBC LDR X0, [X0 + 0x838]
	0x03465DC0 BL 0x1C16CF4
	0x03465DC4 ADRP X0, 0xC90000
	0x03465DC8 LDR X0, [X0 + 0xE28]
	0x03465DCC BL 0x1C16CF4
	0x03465DD0 ADRP X0, 0xC8F000
	0x03465DD4 LDR X0, [X0 + 0x840]
	0x03465DD8 BL 0x1C16CF4
	0x03465DDC ADRP X0, 0xCCB000
	0x03465DE0 LDR X0, [X0 + 0x3F0]
	0x03465DE4 BL 0x1C16CF4
	0x03465DE8 ADRP X0, 0xCCB000
	0x03465DEC LDR X0, [X0 + 0x3F8]
	0x03465DF0 BL 0x1C16CF4
	0x03465DF4 MOVZ W8, 0x1
	0x03465DF8 STRB W8, [X20 + 0x7C1]
	0x03465DFC STP X31, X31, [X31 + 0x20]
	0x03465E00 STR X31, [X31 + 0x18]
	0x03465E04 ADRP X25, 0xCC9000
	0x03465E08 LDR W8, [X19]
	0x03465E0C LDR X20, [X19 + 0x20]
	0x03465E10 LDR X25, [X25 + 0x698]
	0x03465E14 CBZ W8, 0x3465E38
	0x03465E18 CMP W8, 0x1
	0x03465E1C B.NE 0x3465E64
	0x03465E20 LDR X8, [X19 + 0x58]
	0x03465E24 MOVN W9, 0x0
	0x03465E28 STR X8, [X31 + 0x18]
	0x03465E2C STR X31, [X19 + 0x58]
	0x03465E30 STR W9, [X19]
	0x03465E34 B 0x3466388
	0x03465E38 LDR X8, [X19 + 0x50]
	0x03465E3C MOVN W9, 0x0
	0x03465E40 STR X8, [X31 + 0x20]
	0x03465E44 STR X31, [X19 + 0x50]
	0x03465E48 STR W9, [X19]
	0x03465E4C ADRP X8, 0xC8F000
	0x03465E50 LDR X8, [X8 + 0x830]
	0x03465E54 ADD X0, X31, 0x20
	0x03465E58 LDR X1, [X8]
	0x03465E5C BL 0x2677474
	0x03465E60 B 0x346608C
	0x03465E64 ADRP X8, 0xCCB000
	0x03465E68 LDR X8, [X8 + 0x3F8]
	0x03465E6C LDR X0, [X8]
	0x03465E70 BL 0x1C16F10
	0x03465E74 MOV X21, X0
	0x03465E78 MOV X1, X31
	0x03465E7C BL 0x3445804
	0x03465E80 STR X21, [X19 + 0x40]
	0x03465E84 CBZ X21, 0x3466464
	0x03465E88 LDR X8, [X19 + 0x20]
	0x03465E8C STR X8, [X21 + 0x10]
	0x03465E90 LDR X8, [X19 + 0x28]
	0x03465E94 STR X8, [X21 + 0x18]
	0x03465E98 LDR X8, [X19 + 0x30]
	0x03465E9C STR X8, [X21 + 0x28]
	0x03465EA0 CBZ X20, 0x3466468
	0x03465EA4 LDRB W8, [X20 + 0x10]
	0x03465EA8 CBZ W8, 0x346608C
	0x03465EAC LDR X8, [X19 + 0x40]
	0x03465EB0 CBZ X8, 0x346646C
	0x03465EB4 LDR X21, [X8 + 0x18]
	0x03465EB8 CBZ X21, 0x3466470
	0x03465EBC ADRP X23, 0xC8F000
	0x03465EC0 LDR X8, [X21]
	0x03465EC4 LDR X23, [X23 + 0x818]
	0x03465EC8 LDRH W9, [X8 + 0x12E]
	0x03465ECC LDR X1, [X23]
	0x03465ED0 CBZ X9, 0x3465EF4
	0x03465ED4 LDR X10, [X8 + 0xB0]
	0x03465ED8 ADD X10, X10, 0x8
	0x03465EDC LDUR X11, [X10 - 0x8]
	0x03465EE0 CMP X11, X1
	0x03465EE4 B.EQ 0x3465F04
	0x03465EE8 SUBS X9, X9, 0x1
	0x03465EEC ADD X10, X10, 0x10
	0x03465EF0 B.NE 0x3465EDC
	0x03465EF4 MOVZ W2, 0x7
	0x03465EF8 MOV X0, X21
	0x03465EFC BL 0x1C5C788
	0x03465F00 B 0x3465F14
	0x03465F04 LDR W9, [X10]
	0x03465F08 ADD W9, W9, 0x7
	0x03465F0C ADD X8, X8, W9, 0x4, SXTW
	0x03465F10 ADD X0, X8, 0x138
	0x03465F14 LDP X8, X1, [X0]
	0x03465F18 MOV X0, X21
	0x03465F1C BLR X8
	0x03465F20 MOV X1, X31
	0x03465F24 BL 0x32277A8
	0x03465F28 TBNZ X0, 0x0, 0x346608C
	0x03465F2C LDR X8, [X19 + 0x40]
	0x03465F30 CBZ X8, 0x3466474
	0x03465F34 ADRP X9, 0xC8F000
	0x03465F38 LDR X9, [X9 + 0x9F0]
	0x03465F3C LDR X21, [X8 + 0x18]
	0x03465F40 LDR X0, [X9]
	0x03465F44 LDR W9, [X0 + 0xE0]
	0x03465F48 CBNZ W9, 0x3465F50
	0x03465F4C BL 0x1C16DFC
	0x03465F50 MOV X0, X31
	0x03465F54 BL 0x33616A4
	0x03465F58 ADRP X22, 0xC90000
	0x03465F5C LDR X22, [X22 + 0xA10]
	0x03465F60 MOV X8, X0
	0x03465F64 STR X8, [X31 + 0x28]
	0x03465F68 LDR X0, [X22]
	0x03465F6C LDR W8, [X0 + 0xE0]
	0x03465F70 CBNZ W8, 0x3465F7C
	0x03465F74 BL 0x1C16DFC
	0x03465F78 LDR X0, [X22]
	0x03465F7C LDR X8, [X0 + 0xB8]
	0x03465F80 LDR X1, [X8]
	0x03465F84 ADD X0, X31, 0x28
	0x03465F88 MOV X2, X31
	0x03465F8C BL 0x335FC68
	0x03465F90 CBZ X21, 0x3466478
	0x03465F94 LDR X8, [X21]
	0x03465F98 LDR X1, [X23]
	0x03465F9C MOV X22, X0
	0x03465FA0 LDRH W9, [X8 + 0x12E]
	0x03465FA4 CBZ X9, 0x3465FC8
	0x03465FA8 LDR X10, [X8 + 0xB0]
	0x03465FAC ADD X10, X10, 0x8
	0x03465FB0 LDUR X11, [X10 - 0x8]
	0x03465FB4 CMP X11, X1
	0x03465FB8 B.EQ 0x3465FD8
	0x03465FBC SUBS X9, X9, 0x1
	0x03465FC0 ADD X10, X10, 0x10
	0x03465FC4 B.NE 0x3465FB0
	0x03465FC8 MOVZ W2, 0xB
	0x03465FCC MOV X0, X21
	0x03465FD0 BL 0x1C5C788
	0x03465FD4 B 0x3465FE8
	0x03465FD8 LDR W9, [X10]
	0x03465FDC ADD W9, W9, 0xB
	0x03465FE0 ADD X8, X8, W9, 0x4, SXTW
	0x03465FE4 ADD X0, X8, 0x138
	0x03465FE8 LDP X8, X2, [X0]
	0x03465FEC MOV X0, X21
	0x03465FF0 MOV X1, X22
	0x03465FF4 BLR X8
	0x03465FF8 TBZ X0, 0x0, 0x346608C
	0x03465FFC LDR X8, [X19 + 0x40]
	0x03466000 CBZ X8, 0x346647C
	0x03466004 LDR X1, [X8 + 0x18]
	0x03466008 LDR X3, [X19 + 0x38]
	0x0346600C LDR X4, [X8 + 0x28]
	0x03466010 MOV X0, X20
	0x03466014 MOV X2, X31
	0x03466018 MOV X5, X31
	0x0346601C BL 0x34440A8
	0x03466020 CBZ X0, 0x3466480
	0x03466024 ADRP X8, 0xC8E000
	0x03466028 LDR X8, [X8 + 0x840]
	0x0346602C LDR X1, [X8]
	0x03466030 BL 0x269F5D0
	0x03466034 ADRP X8, 0xC8E000
	0x03466038 LDR X8, [X8 + 0x838]
	0x0346603C STR X0, [X31 + 0x20]
	0x03466040 LDR X1, [X8]
	0x03466044 ADD X0, X31, 0x20
	0x03466048 BL 0x2677430
	0x0346604C TBNZ X0, 0x0, 0x3465E4C
	0x03466050 STR W31, [X19]
	0x03466054 LDR X8, [X31 + 0x20]
	0x03466058 STR X8, [X19 + 0x50]
	0x0346605C LDR X0, [X25]
	0x03466060 LDR W8, [X0 + 0xE0]
	0x03466064 CBNZ W8, 0x346606C
	0x03466068 BL 0x1C16DFC
	0x0346606C ADRP X8, 0xCCA000
	0x03466070 LDR X8, [X8 + 0x3C0]
	0x03466074 ADD X0, X19, 0x8
	0x03466078 LDR X3, [X8]
	0x0346607C ADD X1, X31, 0x20
	0x03466080 MOV X2, X19
	0x03466084 BL 0x1FBD164
	0x03466088 B 0x3466418
	0x0346608C ADRP X8, 0xCC8000
	0x03466090 LDR X8, [X8 + 0x40]
	0x03466094 LDR X22, [X19 + 0x40]
	0x03466098 LDR X0, [X8]
	0x0346609C BL 0x1C16F10
	0x034660A0 ADRP X8, 0xCCA000
	0x034660A4 LDR X8, [X8 + 0x3E0]
	0x034660A8 MOV X21, X0
	0x034660AC LDR X1, [X8]
	0x034660B0 BL 0x301B7C4
	0x034660B4 CBZ X22, 0x3466450
	0x034660B8 STR X21, [X22 + 0x20]
	0x034660BC LDR X24, [X19 + 0x48]
	0x034660C0 CBZ X24, 0x34662A8
	0x034660C4 LDR W8, [X24 + 0x18]
	0x034660C8 CMP W8, 0x1
	0x034660CC B.LT 0x34662A8
	0x034660D0 ADRP X27, 0xCCA000
	0x034660D4 ADRP X28, 0xCCA000
	0x034660D8 ADRP X29, 0xCCA000
	0x034660DC LDR X27, [X27 + 0x3B0]
	0x034660E0 LDR X28, [X28 + 0x3D0]
	0x034660E4 LDR X29, [X29 + 0x3D8]
	0x034660E8 MOV W26, W31
	0x034660EC CMP W26, W8
	0x034660F0 B.CS 0x3466438
	0x034660F4 LDR X8, [X19 + 0x40]
	0x034660F8 CBZ X8, 0x346643C
	0x034660FC ADD X9, X24, W26, 0x3, SXTW
	0x03466100 LDR X21, [X8 + 0x20]
	0x03466104 LDR X23, [X9 + 0x20]
	0x03466108 LDR X0, [X27]
	0x0346610C BL 0x1C16F10
	0x03466110 MOV X22, X0
	0x03466114 MOV X1, X31
	0x03466118 BL 0x3408134
	0x0346611C CBZ X23, 0x3466440
	0x03466120 LDR X8, [X23]
	0x03466124 LDR X1, [X28]
	0x03466128 LDRH W9, [X8 + 0x12E]
	0x0346612C CBZ X9, 0x3466150
	0x03466130 LDR X10, [X8 + 0xB0]
	0x03466134 ADD X10, X10, 0x8
	0x03466138 LDUR X11, [X10 - 0x8]
	0x0346613C CMP X11, X1
	0x03466140 B.EQ 0x3466160
	0x03466144 SUBS X9, X9, 0x1
	0x03466148 ADD X10, X10, 0x10
	0x0346614C B.NE 0x3466138
	0x03466150 MOV X0, X23
	0x03466154 MOV W2, W31
	0x03466158 BL 0x1C5C788
	0x0346615C B 0x346616C
	0x03466160 LDRSW X9, [X10]
	0x03466164 ADD X8, X8, X9, 0x4, LSL
	0x03466168 ADD X0, X8, 0x138
	0x0346616C LDP X8, X1, [X0]
	0x03466170 MOV X0, X23
	0x03466174 BLR X8
	0x03466178 CBZ X22, 0x3466444
	0x0346617C STR X0, [X22 + 0x10]
	0x03466180 LDR X8, [X23]
	0x03466184 LDR X1, [X28]
	0x03466188 LDRH W9, [X8 + 0x12E]
	0x0346618C CBZ X9, 0x34661B0
	0x03466190 LDR X10, [X8 + 0xB0]
	0x03466194 ADD X10, X10, 0x8
	0x03466198 LDUR X11, [X10 - 0x8]
	0x0346619C CMP X11, X1
	0x034661A0 B.EQ 0x34661C0
	0x034661A4 SUBS X9, X9, 0x1
	0x034661A8 ADD X10, X10, 0x10
	0x034661AC B.NE 0x3466198
	0x034661B0 MOVZ W2, 0x1
	0x034661B4 MOV X0, X23
	0x034661B8 BL 0x1C5C788
	0x034661BC B 0x34661D0
	0x034661C0 LDR W9, [X10]
	0x034661C4 ADD W9, W9, 0x1
	0x034661C8 ADD X8, X8, W9, 0x4, SXTW
	0x034661CC ADD X0, X8, 0x138
	0x034661D0 LDP X8, X1, [X0]
	0x034661D4 MOV X0, X23
	0x034661D8 BLR X8
	0x034661DC STR X0, [X22 + 0x18]
	0x034661E0 LDR X8, [X23]
	0x034661E4 LDR X1, [X28]
	0x034661E8 LDRH W9, [X8 + 0x12E]
	0x034661EC CBZ X9, 0x3466210
	0x034661F0 LDR X10, [X8 + 0xB0]
	0x034661F4 ADD X10, X10, 0x8
	0x034661F8 LDUR X11, [X10 - 0x8]
	0x034661FC CMP X11, X1
	0x03466200 B.EQ 0x3466220
	0x03466204 SUBS X9, X9, 0x1
	0x03466208 ADD X10, X10, 0x10
	0x0346620C B.NE 0x34661F8
	0x03466210 MOVZ W2, 0x2
	0x03466214 MOV X0, X23
	0x03466218 BL 0x1C5C788
	0x0346621C B 0x3466230
	0x03466220 LDR W9, [X10]
	0x03466224 ADD W9, W9, 0x2
	0x03466228 ADD X8, X8, W9, 0x4, SXTW
	0x0346622C ADD X0, X8, 0x138
	0x03466230 LDP X8, X1, [X0]
	0x03466234 MOV X0, X23
	0x03466238 BLR X8
	0x0346623C STR X0, [X22 + 0x20]
	0x03466240 CBZ X21, 0x3466448
	0x03466244 LDR W10, [X21 + 0x1C]
	0x03466248 LDR X8, [X21 + 0x10]
	0x0346624C LDR X9, [X29]
	0x03466250 ADD W10, W10, 0x1
	0x03466254 STR W10, [X21 + 0x1C]
	0x03466258 CBZ X8, 0x346644C
	0x0346625C LDRSW X10, [X21 + 0x18]
	0x03466260 LDR W11, [X8 + 0x18]
	0x03466264 CMP W10, W11
	0x03466268 B.CS 0x3466280
	0x0346626C ADD W9, W10, 0x1
	0x03466270 ADD X8, X8, X10, 0x3, LSL
	0x03466274 STR W9, [X21 + 0x18]
	0x03466278 STR X22, [X8 + 0x20]
	0x0346627C B 0x3466298
	0x03466280 LDR X8, [X9 + 0x20]
	0x03466284 LDR X8, [X8 + 0xC0]
	0x03466288 LDR X2, [X8 + 0x70]
	0x0346628C MOV X0, X21
	0x03466290 MOV X1, X22
	0x03466294 BL 0x301BF90
	0x03466298 LDR W8, [X24 + 0x18]
	0x0346629C ADD W26, W26, 0x1
	0x034662A0 CMP W26, W8
	0x034662A4 B.LT 0x34660EC
	0x034662A8 CBZ X20, 0x3466454
	0x034662AC ADRP X8, 0xCCA000
	0x034662B0 LDR X8, [X8 + 0x3C8]
	0x034662B4 LDR X21, [X20 + 0x58]
	0x034662B8 LDR X23, [X19 + 0x40]
	0x034662BC LDR X0, [X8]
	0x034662C0 BL 0x1C16F10
	0x034662C4 ADRP X8, 0xCCA000
	0x034662C8 LDR X8, [X8 + 0x3F0]
	0x034662CC MOV X22, X0
	0x034662D0 LDR X2, [X8]
	0x034662D4 MOV X1, X23
	0x034662D8 MOV X3, X31
	0x034662DC BL 0x2D27AA8
	0x034662E0 LDR X8, [X19 + 0x40]
	0x034662E4 CBZ X8, 0x3466458
	0x034662E8 ADRP X9, 0xCC9000
	0x034662EC LDR X23, [X19 + 0x38]
	0x034662F0 LDR X9, [X9 + 0x7C8]
	0x034662F4 CBNZ X23, 0x34662FC
	0x034662F8 LDR X23, [X20 + 0x18]
	0x034662FC LDR X20, [X8 + 0x18]
	0x03466300 LDR X1, [X8 + 0x28]
	0x03466304 LDR X2, [X9]
	0x03466308 STP X31, X31, [X31 + 0x8]
	0x0346630C ADD X0, X31, 0x8
	0x03466310 BL 0x242E368
	0x03466314 ADRP X8, 0xCC9000
	0x03466318 LDR X8, [X8 + 0x7D0]
	0x0346631C LDR X0, [X8]
	0x03466320 BL 0x1C16F10
	0x03466324 LDP X3, X4, [X31 + 0x8]
	0x03466328 MOV X24, X0
	0x0346632C MOV X1, X20
	0x03466330 MOV X2, X23
	0x03466334 BL 0x3465404
	0x03466338 CBZ X21, 0x346645C
	0x0346633C ADRP X8, 0xCCA000
	0x03466340 LDR X8, [X8 + 0x3E8]
	0x03466344 LDR X3, [X8]
	0x03466348 MOV X0, X21
	0x0346634C MOV X1, X22
	0x03466350 MOV X2, X24
	0x03466354 BL 0x2243230
	0x03466358 CBZ X0, 0x3466460
	0x0346635C ADRP X8, 0xC8F000
	0x03466360 LDR X8, [X8 + 0xE28]
	0x03466364 LDR X1, [X8]
	0x03466368 BL 0x269F5D0
	0x0346636C ADRP X8, 0xC8F000
	0x03466370 LDR X8, [X8 + 0xE20]
	0x03466374 STR X0, [X31 + 0x18]
	0x03466378 LDR X1, [X8]
	0x0346637C ADD X0, X31, 0x18
	0x03466380 BL 0x2677430
	0x03466384 TBZ X0, 0x0, 0x34663DC
	0x03466388 ADRP X8, 0xC8F000
	0x0346638C LDR X8, [X8 + 0xE18]
	0x03466390 ADD X0, X31, 0x18
	0x03466394 LDR X1, [X8]
	0x03466398 BL 0x2677474
	0x0346639C MOVN W8, 0x1
	0x034663A0 STR W8, [X19]
	0x034663A4 STR X31, [X19 + 0x40]
	0x034663A8 MOV X20, X0
	0x034663AC LDR X0, [X25]
	0x034663B0 ADRP X21, 0xCC9000
	0x034663B4 ADD X19, X19, 0x8
	0x034663B8 LDR W8, [X0 + 0xE0]
	0x034663BC LDR X21, [X21 + 0x288]
	0x034663C0 CBNZ W8, 0x34663C8
	0x034663C4 BL 0x1C16DFC
	0x034663C8 LDR X2, [X21]
	0x034663CC MOV X0, X19
	0x034663D0 MOV X1, X20
	0x034663D4 BL 0x26322B0
	0x034663D8 B 0x3466418
	0x034663DC MOVZ W8, 0x1
	0x034663E0 STR W8, [X19]
	0x034663E4 LDR X8, [X31 + 0x18]
	0x034663E8 STR X8, [X19 + 0x58]
	0x034663EC LDR X0, [X25]
	0x034663F0 LDR W8, [X0 + 0xE0]
	0x034663F4 CBNZ W8, 0x34663FC
	0x034663F8 BL 0x1C16DFC
	0x034663FC ADRP X8, 0xCCA000
	0x03466400 LDR X8, [X8 + 0x3B8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF79000
	011 Move W8, [X20+1981]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCCC000
	018 Move X0, [X0+872]
	019 Call 0x1C17CF4
	020 Move X0, 0xCCC000
	021 Move X0, [X0+880]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCB000
	024 Move X0, [X0+240]
	025 Call 0x1C17CF4
	026 Move X0, 0xCCA000
	027 Move X0, [X0+1760]
	028 Call 0x1C17CF4
	029 Move X0, 0xC91000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC90000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCB000
	036 Move X0, [X0+1984]
	037 Call 0x1C17CF4
	038 Move X0, 0xC90000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCB000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCB000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCB000
	048 Move X0, [X0+2008]
	049 Call 0x1C17CF4
	050 Move X0, 0xC90000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xC91000
	054 Move X0, [X0+3504]
	055 Call 0x1C17CF4
	056 Move X0, 0xC90000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xC91000
	060 Move X0, [X0+3512]
	061 Call 0x1C17CF4
	062 Move X0, 0xC90000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xC91000
	066 Move X0, [X0+3520]
	067 Call 0x1C17CF4
	068 Move X0, 0xCCC000
	069 Move X0, [X0+888]
	070 Call 0x1C17CF4
	071 Move X0, 0xCCC000
	072 Move X0, [X0+896]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1981], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCCA000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1760]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+112]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+112], X31
	092 Move [X19], W9
	093 Move X8, [X19+104]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+104], X31
	099 Move [X19], W9
	100 Move X8, 0xC90000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCCC000
	106 Move X8, [X8+896]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass98_0..ctor, X0
	112 Move [X19+96], X21
	113 Compare X21, 0
	114 JumpIfEqual {386}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move V0, [X19+3]
	120 Move [X21+2], V0
	121 Move W8, [X19+64]
	122 Move [X21+48], W8
	123 Move X8, [X19+72]
	124 Move [X21+56], X8
	125 Move X8, [X19+80]
	126 Move [X21+64], X8
	127 Compare X20, 0
	128 JumpIfEqual {387}
	129 Move W8, [X20+16]
	130 Compare W8, 0
	131 JumpIfEqual {269}
	132 Move X8, [X19+96]
	133 Compare X8, 0
	134 JumpIfEqual {388}
	135 Move X21, [X8+24]
	136 Compare X21, 0
	137 JumpIfEqual {389}
	138 Move X23, 0xC90000
	139 Move X8, [X21]
	140 Move X23, [X23+2072]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Move X1, [X23]
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move W2, 7
	152 Move X0, X21
	153 Call 0x1C5D788
	154 Move W9, [X10]
	155 Add W9, W9, 7
	156 Add X8, X8, W9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X21
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X1, X31
	163 Call String.IsNullOrEmpty, X0
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {267}
	168 Move X8, [X19+96]
	169 Compare X8, 0
	170 JumpIfEqual {390}
	171 Move X9, 0xC90000
	172 Move X9, [X9+2544]
	173 Move X21, [X8+24]
	174 Move X0, [X9]
	175 Move W9, [X0+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X31
	180 Call DateTime.get_UtcNow
	181 Move X22, 0xC91000
	182 Move X22, [X22+2576]
	183 Move X8, X0
	184 Move [X31+40], X8
	185 Move X0, [X22]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {191}
	189 Call 0x1C17DFC
	190 Move X0, [X22]
	191 Move X8, [X0+184]
	192 Move X1, [X8]
	193 Add X0, X31, 40
	194 Move X2, X31
	195 Call DateTime.Add, X0, X1
	196 Compare X21, 0
	197 JumpIfEqual {391}
	198 Move X8, [X21]
	199 Move X1, [X23]
	200 Move X22, X0
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move W2, 11
	211 Move X0, X21
	212 Call 0x1C5D788
	213 Move W9, [X10]
	214 Add W9, W9, 11
	215 Add X8, X8, W9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X2, [X0+8]
	219 Move X0, X21
	220 Move X1, X22
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {267}
	226 Move X8, [X19+96]
	227 Compare X8, 0
	228 JumpIfEqual {392}
	229 Move X1, [X8+24]
	230 Move X3, [X19+88]
	231 Move X4, [X8+64]
	232 Move X0, X20
	233 Move X2, X31
	234 Move X5, X31
	235 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	236 Compare X0, 0
	237 JumpIfEqual {393}
	238 Move X8, 0xC8F000
	239 Move X8, [X8+2112]
	240 Move X1, [X8]
	241 Call Task`1<Object>.GetAwaiter, X0
	242 Move X8, 0xC8F000
	243 Move X8, [X8+2104]
	244 Move [X31+32], X0
	245 Move X1, [X8]
	246 Add X0, X31, 32
	247 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {100}
	252 Move [X19], W31
	253 Move X8, [X31+32]
	254 Move [X19+104], X8
	255 Move X0, [X25]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move X8, 0xCCB000
	261 Move X8, [X8+880]
	262 Add X0, X19, 8
	263 Move X3, [X8]
	264 Add X1, X31, 32
	265 Move X2, X19
	266 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	267 Compare X20, 0
	268 JumpIfEqual {385}
	269 Move X8, 0xCCA000
	270 Move X8, [X8+1984]
	271 Move X21, [X20+88]
	272 Move X23, [X19+96]
	273 Move X0, [X8]
	274 Call 0x1C17F10
	275 Move X8, 0xCCB000
	276 Move X8, [X8+888]
	277 Move X22, X0
	278 Move X2, [X8]
	279 Move X1, X23
	280 Move X3, X31
	281 Call Func`1<Object>..ctor, X0, X1, X2
	282 Move X8, [X19+96]
	283 Compare X8, 0
	284 JumpIfEqual {382}
	285 Move X9, 0xCCA000
	286 Move X23, [X19+88]
	287 Move X9, [X9+1992]
	288 Compare X23, 0
	289 JumpIfNotEqual {291}
	290 Move X23, [X20+24]
	291 Move X20, [X8+24]
	292 Move X1, [X8+64]
	293 Move X2, [X9]
	294 Move [X31+8], X31
	295 Move [X31+16], X31
	296 Add X0, X31, 8
	297 Call Nullable`1<CancellationToken>..ctor, X0, X1
	298 Move X8, 0xCCA000
	299 Move X8, [X8+2000]
	300 Move X0, [X8]
	301 Call 0x1C17F10
	302 Move X3, [X31+8]
	303 Move X4, [X31+16]
	304 Move X24, X0
	305 Move X1, X20
	306 Move X2, X23
	307 Call RetryHistory..ctor, X0, X1, X2, X3
	308 Compare X21, 0
	309 JumpIfEqual {383}
	310 Move X8, 0xCCA000
	311 Move X8, [X8+2008]
	312 Move X3, [X8]
	313 Move X0, X21
	314 Move X1, X22
	315 Move X2, X24
	316 Call 0x2244230, X0, X1, X2
	317 Compare X0, 0
	318 JumpIfEqual {384}
	319 Move X8, 0xC90000
	320 Move X8, [X8+3520]
	321 Move X1, [X8]
	322 Call Task`1<Object>.GetAwaiter, X0
	323 Move X8, 0xC90000
	324 Move X8, [X8+3512]
	325 Move [X31+24], X0
	326 Move X1, [X8]
	327 Add X0, X31, 24
	328 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfNotEqual {356}
	333 Move X8, 0xC90000
	334 Move X8, [X8+3504]
	335 Add X0, X31, 24
	336 Move X1, [X8]
	337 Call TaskAwaiter`1<Object>.GetResult, X0
	338 Move TEMP, 1
	339 Not TEMP
	340 Move W8, TEMP
	341 Move [X19], W8
	342 Move [X19+96], X31
	343 Move X20, X0
	344 Move X0, [X25]
	345 Move X21, 0xCCA000
	346 Add X19, X19, 8
	347 Move W8, [X0+224]
	348 Move X21, [X21+240]
	349 Compare W8, 0
	350 JumpIfNotEqual {352}
	351 Call 0x1C17DFC
	352 Move X2, [X21]
	353 Move X0, X19
	354 Move X1, X20
	355 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	356 Move W8, 1
	357 Move [X19], W8
	358 Move X8, [X31+24]
	359 Move [X19+112], X8
	360 Move X0, [X25]
	361 Move W8, [X0+224]
	362 Compare W8, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move X8, 0xCCB000
	366 Move X8, [X8+872]
	367 Add X0, X19, 8
	368 Move X3, [X8]
	369 Add X1, X31, 24
	370 Move X2, X19
	371 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	372 Move X20, [X31+96]
	373 Move X19, [X31+104]
	374 Move X22, [X31+80]
	375 Move X21, [X31+88]
	376 Move X24, [X31+64]
	377 Move X23, [X31+72]
	378 Move X30, [X31+48]
	379 Move X25, [X31+56]
	380 Add X31, X31, 112
	381 Return 
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Move X20, X0
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move X0, X20
	397 Call 0x3EB2AD0
	398 Move X20, X0
	399 Move X0, 0xC8E000
	400 Move X0, [X0+2000]
	401 Call 0x1C17D08
	402 Move X8, [X20]
	403 Move X1, [X8]
	404 Call 0x1C18270
	405 Move TEMP, X0
	406 And TEMP, TEMP, 1
	407 Compare TEMP, 1
	408 JumpIfNotEqual {430}
	409 Move X20, [X20]
	410 Call 0x3EB2AE0
	411 Move TEMP, 1
	412 Not TEMP
	413 Move W8, TEMP
	414 Move [X19+96], X31
	415 Move [X19+8], W8
	416 Move X0, 0xCC9000
	417 Move X0, [X0+1760]
	418 Call 0x1C17D08
	419 Move W8, [X0+224]
	420 Compare W8, 0
	421 JumpIfNotEqual {423}
	422 Call 0x1C17DFC
	423 Move X0, 0xCCA000
	424 Move X0, [X0+304]
	425 Call 0x1C17D08
	426 Move X2, X0
	427 Move X0, X19
	428 Move X1, X20
	429 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	430 Move W0, 8
	431 Call 0x3EB2AF0
	432 Move X8, [X20]
	433 Move [X0], X8
	434 Move X1, 0xA4F000
	435 Add X1, X1, 3672
	436 Move X2, X31
	437 Call 0x3EB2B00
	438 Move X20, X0
	439 Call 0x3EB2AE0
	440 Move X0, X20
	441 Call 0x1D2D690
	442 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034664D8 B 0x3466520
	0x034664DC B 0x3466520
	0x034664E0 B 0x3466520
	0x034664E4 B 0x3466520
	0x034664E8 B 0x3466520
	0x034664EC B 0x3466520
	0x034664F0 B 0x3466520
	0x034664F4 B 0x3466520
	0x034664F8 B 0x3466520
	0x034664FC B 0x3466520
	0x03466500 B 0x3466520
	0x03466504 B 0x3466520
	0x03466508 B 0x3466520
	0x0346650C B 0x3466520
	0x03466510 B 0x3466520
	0x03466514 B 0x3466520
	0x03466518 B 0x3466520
	0x0346651C B 0x3466520
	0x03466520 MOV X20, X0
	0x03466524 CMP W1, 0x1
	0x03466528 B.NE 0x34665C8
	0x0346652C MOV X0, X20
	0x03466530 BL 0x3EB1AD0
	0x03466534 MOV X20, X0
	0x03466538 ADRP X0, 0xC8D000
	0x0346653C LDR X0, [X0 + 0x7D0]
	0x03466540 BL 0x1C16D08
	0x03466544 LDR X8, [X20]
	0x03466548 LDR X1, [X8]
	0x0346654C BL 0x1C17270
	0x03466550 TBZ X0, 0x0, 0x34665A0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF78000
	007 Move X21, 0xCC9000
	008 Move W8, [X22+1982]
	009 Move X21, [X21+1760]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCCA000
	017 Move X0, [X0+312]
	018 Call 0x1C17CF4
	019 Move X0, 0xCC9000
	020 Move X0, [X0+1760]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1982], W8
	024 Move X0, [X21]
	025 Move X21, 0xCCA000
	026 Move W8, [X0+224]
	027 Move X21, [X21+312]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

