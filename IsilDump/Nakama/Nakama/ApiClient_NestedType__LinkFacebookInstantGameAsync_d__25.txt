Type: Nakama.ApiClient/<LinkFacebookInstantGameAsync>d__25

Method: System.Void MoveNext()

Disassembly:
	0x0342A120 BL 0x1C16F28
	0x0342A124 BL 0x1C16F20
	0x0342A128 BL 0x1C16F20
	0x0342A12C BL 0x1C16F20
	0x0342A130 BL 0x1C16F20
	0x0342A134 BL 0x1C16F20
	0x0342A138 BL 0x1C16F20
	0x0342A13C B 0x342A19C
	0x0342A140 B 0x342A19C
	0x0342A144 B 0x342A19C
	0x0342A148 B 0x342A19C
	0x0342A14C B 0x342A19C
	0x0342A150 B 0x342A19C
	0x0342A154 B 0x342A19C
	0x0342A158 B 0x342A19C
	0x0342A15C B 0x342A19C
	0x0342A160 B 0x342A19C
	0x0342A164 B 0x342A19C
	0x0342A168 B 0x342A19C
	0x0342A16C B 0x342A19C
	0x0342A170 B 0x342A19C
	0x0342A174 B 0x342A19C
	0x0342A178 B 0x342A19C
	0x0342A17C B 0x342A19C
	0x0342A180 B 0x342A19C
	0x0342A184 B 0x342A19C
	0x0342A188 B 0x342A19C
	0x0342A18C B 0x342A19C
	0x0342A190 B 0x342A19C
	0x0342A194 B 0x342A19C
	0x0342A198 B 0x342A19C
	0x0342A19C MOV X20, X0
	0x0342A1A0 CMP W1, 0x1
	0x0342A1A4 B.NE 0x342A234
	0x0342A1A8 MOV X0, X20
	0x0342A1AC BL 0x3EB1AD0
	0x0342A1B0 MOV X20, X0
	0x0342A1B4 ADRP X0, 0xCC9000
	0x0342A1B8 LDR X0, [X0 + 0x7D0]
	0x0342A1BC BL 0x1C16D08
	0x0342A1C0 LDR X8, [X20]
	0x0342A1C4 LDR X1, [X8]
	0x0342A1C8 BL 0x1C17270
	0x0342A1CC TBZ X0, 0x0, 0x342A20C
	0x0342A1D0 LDR X20, [X20]
	0x0342A1D4 BL 0x3EB1AE0
	0x0342A1D8 MOVN W8, 0x1
	0x0342A1DC STR W8, [X19], #0x8
	0x0342A1E0 ADRP X0, 0xCCC000
	0x0342A1E4 LDR X0, [X0 + 0x280]
	0x0342A1E8 BL 0x1C16D08
	0x0342A1EC LDR W8, [X0 + 0xE0]
	0x0342A1F0 CBNZ W8, 0x342A1F8
	0x0342A1F4 BL 0x1C16DFC
	0x0342A1F8 MOV X0, X19
	0x0342A1FC MOV X1, X20
	0x0342A200 MOV X2, X31
	0x0342A204 BL 0x32C4908
	0x0342A208 B 0x342A0AC
	0x0342A20C MOVZ W0, 0x8
	0x0342A210 BL 0x3EB1AF0
	0x0342A214 LDR X8, [X20]
	0x0342A218 STR X8, [X0]
	0x0342A21C ADRP X1, 0xA8A000
	0x0342A220 ADD X1, X1, 0xE58
	0x0342A224 MOV X2, X31
	0x0342A228 BL 0x3EB1B00
	0x0342A22C MOV X20, X0
	0x0342A230 BL 0x3EB1AE0
	0x0342A234 MOV X0, X20
	0x0342A238 BL 0x1D2C690
	0x0342A23C BL 0x1990590
	0x0342A240 STR X30, [X31 - 0x30]!
	0x0342A244 STP X22, X21, [X31 + 0x10]
	0x0342A248 STP X20, X19, [X31 + 0x20]
	0x0342A24C ADRP X21, 0xFB3000
	0x0342A250 ADRP X22, 0xCCC000
	0x0342A254 LDRB W8, [X21 + 0x648]
	0x0342A258 LDR X22, [X22 + 0x280]
	0x0342A25C MOV X19, X1
	0x0342A260 MOV X20, X0
	0x0342A264 TBNZ X8, 0x0, 0x342A27C
	0x0342A268 ADRP X0, 0xCCC000
	0x0342A26C LDR X0, [X0 + 0x280]
	0x0342A270 BL 0x1C16CF4
	0x0342A274 MOVZ W8, 0x1
	0x0342A278 STRB W8, [X21 + 0x648]
	0x0342A27C LDR X0, [X22]
	0x0342A280 LDR W8, [X0 + 0xE0]
	0x0342A284 CBNZ W8, 0x342A28C
	0x0342A288 BL 0x1C16DFC
	0x0342A28C ADD X0, X20, 0x8
	0x0342A290 MOV X1, X19
	0x0342A294 LDP X20, X19, [X31 + 0x20]
	0x0342A298 LDP X22, X21, [X31 + 0x10]
	0x0342A29C MOV X2, X31
	0x0342A2A0 LDR X30, [X31], #0x30
	0x0342A2A4 B 0x32C477C
	0x0342A2A8 SUB X31, X31, 0x70
	0x0342A2AC STR X30, [X31 + 0x10]
	0x0342A2B0 STP X28, X27, [X31 + 0x20]
	0x0342A2B4 STP X26, X25, [X31 + 0x30]
	0x0342A2B8 STP X24, X23, [X31 + 0x40]
	0x0342A2BC STP X22, X21, [X31 + 0x50]
	0x0342A2C0 STP X20, X19, [X31 + 0x60]
	0x0342A2C4 ADRP X20, 0xFB3000
	0x0342A2C8 LDRB W8, [X20 + 0x649]
	0x0342A2CC MOV X19, X0
	0x0342A2D0 TBNZ X8, 0x0, 0x342A39C
	0x0342A2D4 ADRP X0, 0xD04000
	0x0342A2D8 LDR X0, [X0 + 0xED0]
	0x0342A2DC BL 0x1C16CF4
	0x0342A2E0 ADRP X0, 0xCCC000
	0x0342A2E4 LDR X0, [X0 + 0x280]
	0x0342A2E8 BL 0x1C16CF4
	0x0342A2EC ADRP X0, 0xCD2000
	0x0342A2F0 LDR X0, [X0 + 0x8D8]
	0x0342A2F4 BL 0x1C16CF4
	0x0342A2F8 ADRP X0, 0xCCA000
	0x0342A2FC LDR X0, [X0 + 0x810]
	0x0342A300 BL 0x1C16CF4
	0x0342A304 ADRP X0, 0xCCA000
	0x0342A308 LDR X0, [X0 + 0x6C0]
	0x0342A30C BL 0x1C16CF4
	0x0342A310 ADRP X0, 0xCCA000
	0x0342A314 LDR X0, [X0 + 0x6D0]
	0x0342A318 BL 0x1C16CF4
	0x0342A31C ADRP X0, 0xD04000
	0x0342A320 LDR X0, [X0 + 0x7B8]
	0x0342A324 BL 0x1C16CF4
	0x0342A328 ADRP X0, 0xCCC000
	0x0342A32C LDR X0, [X0 + 0x1E0]
	0x0342A330 BL 0x1C16CF4
	0x0342A334 ADRP X0, 0xCCC000
	0x0342A338 LDR X0, [X0 + 0x1F0]
	0x0342A33C BL 0x1C16CF4
	0x0342A340 ADRP X0, 0xCCC000
	0x0342A344 LDR X0, [X0 + 0x1F8]
	0x0342A348 BL 0x1C16CF4
	0x0342A34C ADRP X0, 0xCD2000
	0x0342A350 LDR X0, [X0 + 0x3A0]
	0x0342A354 BL 0x1C16CF4
	0x0342A358 ADRP X0, 0xCF2000
	0x0342A35C LDR X0, [X0 + 0x4D8]
	0x0342A360 BL 0x1C16CF4
	0x0342A364 ADRP X0, 0xD04000
	0x0342A368 LDR X0, [X0 + 0xED8]
	0x0342A36C BL 0x1C16CF4
	0x0342A370 ADRP X0, 0xD04000
	0x0342A374 LDR X0, [X0 + 0x7D0]
	0x0342A378 BL 0x1C16CF4
	0x0342A37C ADRP X0, 0xD04000
	0x0342A380 LDR X0, [X0 + 0x7D8]
	0x0342A384 BL 0x1C16CF4
	0x0342A388 ADRP X0, 0xCC9000
	0x0342A38C LDR X0, [X0 + 0x988]
	0x0342A390 BL 0x1C16CF4
	0x0342A394 MOVZ W8, 0x1
	0x0342A398 STRB W8, [X20 + 0x649]
	0x0342A39C STR X31, [X31 + 0x18]
	0x0342A3A0 ADRP X28, 0xCCC000
	0x0342A3A4 LDR W8, [X19]
	0x0342A3A8 LDR X28, [X28 + 0x280]
	0x0342A3AC CBZ W8, 0x342A58C
	0x0342A3B0 LDR X8, [X19 + 0x20]
	0x0342A3B4 CBZ X8, 0x342A6A4
	0x0342A3B8 LDR X25, [X19 + 0x28]
	0x0342A3BC CBZ X25, 0x342A6EC
	0x0342A3C0 LDR X0, [X25 + 0x20]
	0x0342A3C4 CBZ X0, 0x342A6F0
	0x0342A3C8 ADRP X8, 0xD04000
	0x0342A3CC ADRP X9, 0xCC9000
	0x0342A3D0 LDR X8, [X8 + 0xED8]
	0x0342A3D4 LDR X9, [X9 + 0x988]
	0x0342A3D8 LDR X21, [X8]
	0x0342A3DC LDR X20, [X9]
	0x0342A3E0 MOV X1, X31
	0x0342A3E4 BL 0x361B448
	0x0342A3E8 ADRP X8, 0xCD2000
	0x0342A3EC LDR X8, [X8 + 0x8D8]
	0x0342A3F0 MOV X22, X0
	0x0342A3F4 LDR X0, [X8]
	0x0342A3F8 MOVZ W1, 0x1
	0x0342A3FC BL 0x1C16D6C
	0x0342A400 MOV X1, X0
	0x0342A404 CBZ X1, 0x342A6F4
	0x0342A408 LDR W8, [X1 + 0x18]
	0x0342A40C CBZ W8, 0x342A6F8
	0x0342A410 MOVZ W8, 0x2F
	0x0342A414 STRH W8, [X1 + 0x20]
	0x0342A418 CBZ X22, 0x342A6FC
	0x0342A41C MOV X0, X22
	0x0342A420 MOV X2, X31
	0x0342A424 BL 0x322BC58
	0x0342A428 MOV X1, X21
	0x0342A42C MOV X2, X31
	0x0342A430 BL 0x321B938
	0x0342A434 ADRP X8, 0xCD2000
	0x0342A438 LDR X8, [X8 + 0x3A0]
	0x0342A43C MOV X22, X0
	0x0342A440 LDR X23, [X25 + 0x20]
	0x0342A444 LDR X0, [X8]
	0x0342A448 BL 0x1C16F10
	0x0342A44C MOV X21, X0
	0x0342A450 MOV X1, X23
	0x0342A454 MOV X2, X31
	0x0342A458 BL 0x36281F8
	0x0342A45C CBZ X21, 0x342A700
	0x0342A460 MOV X0, X21
	0x0342A464 MOV X1, X22
	0x0342A468 MOV X2, X31
	0x0342A46C BL 0x36288CC
	0x0342A470 MOV X0, X21
	0x0342A474 MOV X1, X20
	0x0342A478 MOV X2, X31
	0x0342A47C BL 0x3628980
	0x0342A480 MOV X0, X21
	0x0342A484 MOV X1, X31
	0x0342A488 BL 0x3628A38
	0x0342A48C ADRP X8, 0xCF2000
	0x0342A490 ADRP X9, 0xCCA000
	0x0342A494 LDR X8, [X8 + 0x4D8]
	0x0342A498 LDR X9, [X9 + 0x6D0]
	0x0342A49C MOV X20, X0
	0x0342A4A0 LDR X21, [X8]
	0x0342A4A4 LDR X0, [X9]
	0x0342A4A8 BL 0x1C16F10
	0x0342A4AC ADRP X8, 0xCCA000
	0x0342A4B0 LDR X8, [X8 + 0x6C0]
	0x0342A4B4 MOV X22, X0
	0x0342A4B8 LDR X1, [X8]
	0x0342A4BC BL 0x2AA4804
	0x0342A4C0 ADRP X8, 0xD04000
	0x0342A4C4 LDR X8, [X8 + 0x7D8]
	0x0342A4C8 LDR X1, [X19 + 0x30]
	0x0342A4CC LDR X0, [X8]
	0x0342A4D0 MOV X2, X31
	0x0342A4D4 BL 0x321B938
	0x0342A4D8 CBZ X22, 0x342A704
	0x0342A4DC ADRP X8, 0xD04000
	0x0342A4E0 LDR X8, [X8 + 0x7D0]
	0x0342A4E4 ADRP X9, 0xCCA000
	0x0342A4E8 LDR X9, [X9 + 0x810]
	0x0342A4EC MOV X2, X0
	0x0342A4F0 LDR X1, [X8]
	0x0342A4F4 LDR X3, [X9]
	0x0342A4F8 MOV X0, X22
	0x0342A4FC BL 0x2AA5098
	0x0342A500 LDR X0, [X19 + 0x20]
	0x0342A504 MOV X1, X31
	0x0342A508 BL 0x3483BE4
	0x0342A50C MOV X23, X0
	0x0342A510 MOV X0, X31
	0x0342A514 BL 0x3241948
	0x0342A518 CBZ X0, 0x342A708
	0x0342A51C LDR X8, [X0]
	0x0342A520 LDR X9, [X8 + 0x268]
	0x0342A524 LDR X2, [X8 + 0x270]
	0x0342A528 MOV X1, X23
	0x0342A52C BLR X9
	0x0342A530 LDR X24, [X25 + 0x10]
	0x0342A534 CBZ X24, 0x342A70C
	0x0342A538 ADRP X10, 0xD04000
	0x0342A53C LDR X10, [X10 + 0x7B8]
	0x0342A540 LDR X8, [X24]
	0x0342A544 LDR W26, [X25 + 0x18]
	0x0342A548 LDP X27, X25, [X19 + 0x38]
	0x0342A54C LDR X1, [X10]
	0x0342A550 LDRH W9, [X8 + 0x12E]
	0x0342A554 MOV X23, X0
	0x0342A558 CBZ X9, 0x342A57C
	0x0342A55C LDR X10, [X8 + 0xB0]
	0x0342A560 ADD X10, X10, 0x8
	0x0342A564 LDUR X11, [X10 - 0x8]
	0x0342A568 CMP X11, X1
	0x0342A56C B.EQ 0x342A5A4
	0x0342A570 SUBS X9, X9, 0x1
	0x0342A574 ADD X10, X10, 0x10
	0x0342A578 B.NE 0x342A564
	0x0342A57C MOVZ W2, 0x3
	0x0342A580 MOV X0, X24
	0x0342A584 BL 0x1C5C788
	0x0342A588 B 0x342A5B4
	0x0342A58C LDR X8, [X19 + 0x48]
	0x0342A590 MOVN W9, 0x0
	0x0342A594 STR X8, [X31 + 0x18]
	0x0342A598 STR X31, [X19 + 0x48]
	0x0342A59C STR W9, [X19]
	0x0342A5A0 B 0x342A610
	0x0342A5A4 LDR W9, [X10]
	0x0342A5A8 ADD W9, W9, 0x3
	0x0342A5AC ADD X8, X8, W9, 0x4, SXTW
	0x0342A5B0 ADD X0, X8, 0x138
	0x0342A5B4 LDP X8, X9, [X0]
	0x0342A5B8 MOV X0, X24
	0x0342A5BC MOV X1, X21
	0x0342A5C0 MOV X2, X20
	0x0342A5C4 MOV X3, X22
	0x0342A5C8 MOV X4, X23
	0x0342A5CC MOV W5, W26
	0x0342A5D0 MOV X6, X27
	0x0342A5D4 MOV X7, X25
	0x0342A5D8 STR X9, [X31]
	0x0342A5DC BLR X8
	0x0342A5E0 CBZ X0, 0x342A710
	0x0342A5E4 ADRP X8, 0xCCC000
	0x0342A5E8 LDR X8, [X8 + 0x1F8]
	0x0342A5EC LDR X1, [X8]
	0x0342A5F0 BL 0x269F5D0
	0x0342A5F4 ADRP X8, 0xCCC000
	0x0342A5F8 LDR X8, [X8 + 0x1F0]
	0x0342A5FC STR X0, [X31 + 0x18]
	0x0342A600 LDR X1, [X8]
	0x0342A604 ADD X0, X31, 0x18
	0x0342A608 BL 0x2677430
	0x0342A60C TBZ X0, 0x0, 0x342A64C
	0x0342A610 ADRP X8, 0xCCC000
	0x0342A614 LDR X8, [X8 + 0x1E0]
	0x0342A618 ADD X0, X31, 0x18
	0x0342A61C LDR X1, [X8]
	0x0342A620 BL 0x2677474
	0x0342A624 MOVN W8, 0x1
	0x0342A628 STR W8, [X19], #0x8
	0x0342A62C LDR X0, [X28]
	0x0342A630 LDR W8, [X0 + 0xE0]
	0x0342A634 CBNZ W8, 0x342A63C
	0x0342A638 BL 0x1C16DFC
	0x0342A63C MOV X0, X19
	0x0342A640 MOV X1, X31
	0x0342A644 BL 0x32C4864
	0x0342A648 B 0x342A684
	0x0342A64C STR W31, [X19]
	0x0342A650 LDR X8, [X31 + 0x18]
	0x0342A654 STR X8, [X19 + 0x48]
	0x0342A658 LDR X0, [X28]
	0x0342A65C LDR W8, [X0 + 0xE0]
	0x0342A660 CBNZ W8, 0x342A668
	0x0342A664 BL 0x1C16DFC
	0x0342A668 ADRP X8, 0xD04000
	0x0342A66C LDR X8, [X8 + 0xED0]
	0x0342A670 ADD X0, X19, 0x8
	0x0342A674 LDR X3, [X8]
	0x0342A678 ADD X1, X31, 0x18
	0x0342A67C MOV X2, X19
	0x0342A680 BL 0x2186B30
	0x0342A684 LDP X20, X19, [X31 + 0x60]
	0x0342A688 LDP X22, X21, [X31 + 0x50]
	0x0342A68C LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB4000
	014 Move W8, [X20+1603]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xD05000
	021 Move X0, [X0+3720]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCD000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD3000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCB000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCCB000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCB000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD05000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCD000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCD000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCD000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD3000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCF3000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xD05000
	057 Move X0, [X0+3728]
	058 Call 0x1C17CF4
	059 Move X0, 0xD05000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xD05000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCCA000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1603], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCCD000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xD05000
	086 Move X9, 0xCCA000
	087 Move X8, [X8+3728]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCD3000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCD3000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCF3000
	139 Move X9, 0xCCB000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCCB000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xD05000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xD05000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCCB000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xD05000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCCD000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCCD000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCCD000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xD05000
	269 Move X8, [X8+3720]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCD2000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xD05000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xD05000
	301 Move X0, [X0+3736]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCCA000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCCD000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA8B000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342A690 LDP X26, X25, [X31 + 0x30]
	0x0342A694 LDP X28, X27, [X31 + 0x20]
	0x0342A698 LDR X30, [X31 + 0x10]
	0x0342A69C ADD X31, X31, 0x70
	0x0342A6A0 RET
	0x0342A6A4 ADRP X0, 0xCD1000
	0x0342A6A8 LDR X0, [X0 + 0x578]
	0x0342A6AC BL 0x1C16D08
	0x0342A6B0 BL 0x1C16F10
	0x0342A6B4 MOV X20, X0
	0x0342A6B8 ADRP X0, 0xD04000
	0x0342A6BC LDR X0, [X0 + 0xBC8]
	0x0342A6C0 BL 0x1C16D08
	0x0342A6C4 MOV X1, X0
	0x0342A6C8 MOV X0, X20
	0x0342A6CC MOV X2, X31
	0x0342A6D0 BL 0x3314A68
	0x0342A6D4 ADRP X0, 0xD04000
	0x0342A6D8 LDR X0, [X0 + 0xEE0]
	0x0342A6DC BL 0x1C16D08
	0x0342A6E0 MOV X1, X0
	0x0342A6E4 MOV X0, X20
	0x0342A6E8 BL 0x1C16DEC
	0x0342A6EC BL 0x1C16F20
	0x0342A6F0 BL 0x1C16F20
	0x0342A6F4 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB4000
	007 Move X22, 0xCCD000
	008 Move W8, [X21+1604]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCCD000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1604], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

