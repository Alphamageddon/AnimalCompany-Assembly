Type: Nakama.PartyCreate

Method: System.Boolean get_Open()

Disassembly:
	0x03477968 CBZ W8, 0x3477A54
	0x0347796C ADRP X9, 0xCB9000

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Open(System.Boolean value)

Disassembly:
	0x03477970 LDR X9, [X9 + 0xA98]
	0x03477974 CMP W8, 0x1
	0x03477978 LDR X9, [X9]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.Int32 get_MaxSize()

Disassembly:
	0x0347797C STR X9, [X20 + 0x20]
	0x03477980 B.EQ 0x3477A54

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_MaxSize(System.Int32 value)

Disassembly:
	0x03477984 LDR X9, [X19 + 0x10]
	0x03477988 CMP W8, 0x2

ISIL:
	001 Move [X0+20], W1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0347798C STR X9, [X20 + 0x28]
	0x03477990 B.LS 0x3477A54
	0x03477994 ADRP X8, 0xCB9000
	0x03477998 LDR X8, [X8 + 0xAA0]
	0x0347799C ADRP X22, 0xC7C000
	0x034779A0 ADRP X21, 0xCB9000
	0x034779A4 MOV X0, X19
	0x034779A8 LDR X8, [X8]
	0x034779AC LDR X22, [X22 + 0x838]
	0x034779B0 LDR X21, [X21 + 0x818]
	0x034779B4 STR X8, [X20 + 0x30]
	0x034779B8 BL 0x34777E8
	0x034779BC LDR X8, [X22]
	0x034779C0 LDR X2, [X21]
	0x034779C4 MOV X1, X0
	0x034779C8 MOV X0, X8
	0x034779CC BL 0x226B7E8
	0x034779D0 LDR W8, [X20 + 0x18]
	0x034779D4 CMP W8, 0x3
	0x034779D8 B.LS 0x3477A54
	0x034779DC CMP W8, 0x4
	0x034779E0 STR X0, [X20 + 0x38]
	0x034779E4 B.EQ 0x3477A54
	0x034779E8 ADRP X8, 0xCB9000
	0x034779EC LDR X8, [X8 + 0x970]
	0x034779F0 MOV X0, X19
	0x034779F4 LDR X8, [X8]
	0x034779F8 STR X8, [X20 + 0x40]
	0x034779FC BL 0x347785C
	0x03477A00 LDR X8, [X22]
	0x03477A04 LDR X2, [X21]
	0x03477A08 MOV X1, X0
	0x03477A0C MOV X0, X8
	0x03477A10 BL 0x226B7E8
	0x03477A14 LDR W8, [X20 + 0x18]
	0x03477A18 CMP W8, 0x5
	0x03477A1C B.LS 0x3477A54
	0x03477A20 CMP W8, 0x6
	0x03477A24 STR X0, [X20 + 0x48]
	0x03477A28 B.EQ 0x3477A54
	0x03477A2C ADRP X8, 0xCB9000
	0x03477A30 LDR X8, [X8 + 0x968]
	0x03477A34 MOV X0, X20
	0x03477A38 LDP X22, X21, [X31 + 0x10]
	0x03477A3C MOV X1, X31
	0x03477A40 LDR X8, [X8]
	0x03477A44 STR X8, [X20 + 0x50]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xF67000
	009 Move X20, 0xC7D000
	010 Move X22, 0xC7D000
	011 Move X21, 0xCBA000
	012 Move W8, [X23+2093]
	013 Move X20, [X20+2904]
	014 Move X22, [X22+1880]
	015 Move X21, [X21+2584]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xC7D000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xC7D000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xCBA000
	028 Move X0, [X0+2584]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2093], W8
	032 Move W8, [X19+16]
	033 Move X0, [X20]
	034 Add X1, X31, 12
	035 Move [X31+12], W8
	036 Call 0x1C17E04
	037 Move X20, X0
	038 Move W8, [X19+20]
	039 Move X0, [X22]
	040 Add X1, X31, 8
	041 Move [X31+8], W8
	042 Call 0x1C17E04
	043 Move X8, [X21]
	044 Move X2, X0
	045 Move X1, X20
	046 Move X3, X31
	047 Move X0, X8
	048 Call String.Format, X0, X1, X2
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move X23, [X31+24]
	055 Add X31, X31, 64
	056 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03477A48 LDP X20, X19, [X31 + 0x20]
	0x03477A4C LDR X30, [X31], #0x30

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

