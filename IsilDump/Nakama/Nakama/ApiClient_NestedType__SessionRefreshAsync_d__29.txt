Type: Nakama.ApiClient/<SessionRefreshAsync>d__29

Method: System.Void MoveNext()

Disassembly:
	0x0343726C BL 0x269F5D0
	0x03437270 ADRP X8, 0xCBF000
	0x03437274 LDR X8, [X8 + 0x1F0]
	0x03437278 STR X0, [X31 + 0x18]
	0x0343727C LDR X1, [X8]
	0x03437280 ADD X0, X31, 0x18
	0x03437284 BL 0x2677430
	0x03437288 TBZ X0, 0x0, 0x34372C8
	0x0343728C ADRP X8, 0xCBF000
	0x03437290 LDR X8, [X8 + 0x1E0]
	0x03437294 ADD X0, X31, 0x18
	0x03437298 LDR X1, [X8]
	0x0343729C BL 0x2677474
	0x034372A0 MOVN W8, 0x1
	0x034372A4 STR W8, [X19], #0x8
	0x034372A8 LDR X0, [X28]
	0x034372AC LDR W8, [X0 + 0xE0]
	0x034372B0 CBNZ W8, 0x34372B8
	0x034372B4 BL 0x1C16DFC
	0x034372B8 MOV X0, X19
	0x034372BC MOV X1, X31
	0x034372C0 BL 0x32C4864
	0x034372C4 B 0x3437300
	0x034372C8 STR W31, [X19]
	0x034372CC LDR X8, [X31 + 0x18]
	0x034372D0 STR X8, [X19 + 0x48]
	0x034372D4 LDR X0, [X28]
	0x034372D8 LDR W8, [X0 + 0xE0]
	0x034372DC CBNZ W8, 0x34372E4
	0x034372E0 BL 0x1C16DFC
	0x034372E4 ADRP X8, 0xCF8000
	0x034372E8 LDR X8, [X8 + 0x370]
	0x034372EC ADD X0, X19, 0x8
	0x034372F0 LDR X3, [X8]
	0x034372F4 ADD X1, X31, 0x18
	0x034372F8 MOV X2, X19
	0x034372FC BL 0x2186D20
	0x03437300 LDP X20, X19, [X31 + 0x60]
	0x03437304 LDP X22, X21, [X31 + 0x50]
	0x03437308 LDP X24, X23, [X31 + 0x40]
	0x0343730C LDP X26, X25, [X31 + 0x30]
	0x03437310 LDP X28, X27, [X31 + 0x20]
	0x03437314 LDR X30, [X31 + 0x10]
	0x03437318 ADD X31, X31, 0x70
	0x0343731C RET
	0x03437320 ADRP X0, 0xCC4000
	0x03437324 LDR X0, [X0 + 0x578]
	0x03437328 BL 0x1C16D08
	0x0343732C BL 0x1C16F10
	0x03437330 MOV X20, X0
	0x03437334 ADRP X0, 0xCF7000
	0x03437338 LDR X0, [X0 + 0xBC8]
	0x0343733C BL 0x1C16D08
	0x03437340 MOV X1, X0
	0x03437344 MOV X0, X20
	0x03437348 MOV X2, X31
	0x0343734C BL 0x3314A68
	0x03437350 ADRP X0, 0xCF8000
	0x03437354 LDR X0, [X0 + 0x380]
	0x03437358 BL 0x1C16D08
	0x0343735C MOV X1, X0
	0x03437360 MOV X0, X20
	0x03437364 BL 0x1C16DEC
	0x03437368 BL 0x1C16F20
	0x0343736C BL 0x1C16F20
	0x03437370 BL 0x1C16F20
	0x03437374 BL 0x1C16F28
	0x03437378 BL 0x1C16F20
	0x0343737C BL 0x1C16F20
	0x03437380 BL 0x1C16F20
	0x03437384 BL 0x1C16F20
	0x03437388 BL 0x1C16F20
	0x0343738C BL 0x1C16F20
	0x03437390 B 0x34373F0
	0x03437394 B 0x34373F0
	0x03437398 B 0x34373F0
	0x0343739C B 0x34373F0
	0x034373A0 B 0x34373F0
	0x034373A4 B 0x34373F0
	0x034373A8 B 0x34373F0
	0x034373AC B 0x34373F0
	0x034373B0 B 0x34373F0
	0x034373B4 B 0x34373F0
	0x034373B8 B 0x34373F0
	0x034373BC B 0x34373F0
	0x034373C0 B 0x34373F0
	0x034373C4 B 0x34373F0
	0x034373C8 B 0x34373F0
	0x034373CC B 0x34373F0
	0x034373D0 B 0x34373F0
	0x034373D4 B 0x34373F0
	0x034373D8 B 0x34373F0
	0x034373DC B 0x34373F0
	0x034373E0 B 0x34373F0
	0x034373E4 B 0x34373F0
	0x034373E8 B 0x34373F0
	0x034373EC B 0x34373F0
	0x034373F0 MOV X20, X0
	0x034373F4 CMP W1, 0x1
	0x034373F8 B.NE 0x3437488
	0x034373FC MOV X0, X20
	0x03437400 BL 0x3EB1AD0
	0x03437404 MOV X20, X0
	0x03437408 ADRP X0, 0xCBC000
	0x0343740C LDR X0, [X0 + 0x7D0]
	0x03437410 BL 0x1C16D08
	0x03437414 LDR X8, [X20]
	0x03437418 LDR X1, [X8]
	0x0343741C BL 0x1C17270
	0x03437420 TBZ X0, 0x0, 0x3437460
	0x03437424 LDR X20, [X20]
	0x03437428 BL 0x3EB1AE0
	0x0343742C MOVN W8, 0x1
	0x03437430 STR W8, [X19], #0x8
	0x03437434 ADRP X0, 0xCBF000
	0x03437438 LDR X0, [X0 + 0x280]
	0x0343743C BL 0x1C16D08
	0x03437440 LDR W8, [X0 + 0xE0]
	0x03437444 CBNZ W8, 0x343744C
	0x03437448 BL 0x1C16DFC
	0x0343744C MOV X0, X19
	0x03437450 MOV X1, X20
	0x03437454 MOV X2, X31
	0x03437458 BL 0x32C4908
	0x0343745C B 0x3437300
	0x03437460 MOVZ W0, 0x8
	0x03437464 BL 0x3EB1AF0
	0x03437468 LDR X8, [X20]
	0x0343746C STR X8, [X0]
	0x03437470 ADRP X1, 0xA7D000
	0x03437474 ADD X1, X1, 0xE58
	0x03437478 MOV X2, X31
	0x0343747C BL 0x3EB1B00
	0x03437480 MOV X20, X0
	0x03437484 BL 0x3EB1AE0
	0x03437488 MOV X0, X20
	0x0343748C BL 0x1D2C690
	0x03437490 BL 0x1990590
	0x03437494 STR X30, [X31 - 0x30]!
	0x03437498 STP X22, X21, [X31 + 0x10]
	0x0343749C STP X20, X19, [X31 + 0x20]
	0x034374A0 ADRP X21, 0xFA6000
	0x034374A4 ADRP X22, 0xCBF000
	0x034374A8 LDRB W8, [X21 + 0x678]
	0x034374AC LDR X22, [X22 + 0x280]
	0x034374B0 MOV X19, X1
	0x034374B4 MOV X20, X0
	0x034374B8 TBNZ X8, 0x0, 0x34374D0
	0x034374BC ADRP X0, 0xCBF000
	0x034374C0 LDR X0, [X0 + 0x280]
	0x034374C4 BL 0x1C16CF4
	0x034374C8 MOVZ W8, 0x1
	0x034374CC STRB W8, [X21 + 0x678]
	0x034374D0 LDR X0, [X22]
	0x034374D4 LDR W8, [X0 + 0xE0]
	0x034374D8 CBNZ W8, 0x34374E0
	0x034374DC BL 0x1C16DFC
	0x034374E0 ADD X0, X20, 0x8
	0x034374E4 MOV X1, X19
	0x034374E8 LDP X20, X19, [X31 + 0x20]
	0x034374EC LDP X22, X21, [X31 + 0x10]
	0x034374F0 MOV X2, X31
	0x034374F4 LDR X30, [X31], #0x30
	0x034374F8 B 0x32C477C
	0x034374FC SUB X31, X31, 0x70
	0x03437500 STR X30, [X31 + 0x10]
	0x03437504 STP X28, X27, [X31 + 0x20]
	0x03437508 STP X26, X25, [X31 + 0x30]
	0x0343750C STP X24, X23, [X31 + 0x40]
	0x03437510 STP X22, X21, [X31 + 0x50]
	0x03437514 STP X20, X19, [X31 + 0x60]
	0x03437518 ADRP X20, 0xFA6000
	0x0343751C LDRB W8, [X20 + 0x679]
	0x03437520 MOV X19, X0
	0x03437524 TBNZ X8, 0x0, 0x34375F0
	0x03437528 ADRP X0, 0xCF8000
	0x0343752C LDR X0, [X0 + 0x388]
	0x03437530 BL 0x1C16CF4
	0x03437534 ADRP X0, 0xCBF000
	0x03437538 LDR X0, [X0 + 0x280]
	0x0343753C BL 0x1C16CF4
	0x03437540 ADRP X0, 0xCC5000
	0x03437544 LDR X0, [X0 + 0x8D8]
	0x03437548 BL 0x1C16CF4
	0x0343754C ADRP X0, 0xCBD000
	0x03437550 LDR X0, [X0 + 0x810]
	0x03437554 BL 0x1C16CF4
	0x03437558 ADRP X0, 0xCBD000
	0x0343755C LDR X0, [X0 + 0x6C0]
	0x03437560 BL 0x1C16CF4
	0x03437564 ADRP X0, 0xCBD000
	0x03437568 LDR X0, [X0 + 0x6D0]
	0x0343756C BL 0x1C16CF4
	0x03437570 ADRP X0, 0xCF7000
	0x03437574 LDR X0, [X0 + 0x7B8]
	0x03437578 BL 0x1C16CF4
	0x0343757C ADRP X0, 0xCBF000
	0x03437580 LDR X0, [X0 + 0x1E0]
	0x03437584 BL 0x1C16CF4
	0x03437588 ADRP X0, 0xCBF000
	0x0343758C LDR X0, [X0 + 0x1F0]
	0x03437590 BL 0x1C16CF4
	0x03437594 ADRP X0, 0xCBF000
	0x03437598 LDR X0, [X0 + 0x1F8]
	0x0343759C BL 0x1C16CF4
	0x034375A0 ADRP X0, 0xCC5000
	0x034375A4 LDR X0, [X0 + 0x3A0]
	0x034375A8 BL 0x1C16CF4
	0x034375AC ADRP X0, 0xCE5000
	0x034375B0 LDR X0, [X0 + 0x4D8]
	0x034375B4 BL 0x1C16CF4
	0x034375B8 ADRP X0, 0xCF8000
	0x034375BC LDR X0, [X0 + 0x390]
	0x034375C0 BL 0x1C16CF4
	0x034375C4 ADRP X0, 0xCF7000
	0x034375C8 LDR X0, [X0 + 0x7D0]
	0x034375CC BL 0x1C16CF4
	0x034375D0 ADRP X0, 0xCF7000
	0x034375D4 LDR X0, [X0 + 0x7D8]
	0x034375D8 BL 0x1C16CF4
	0x034375DC ADRP X0, 0xCBC000
	0x034375E0 LDR X0, [X0 + 0x988]
	0x034375E4 BL 0x1C16CF4
	0x034375E8 MOVZ W8, 0x1
	0x034375EC STRB W8, [X20 + 0x679]
	0x034375F0 STR X31, [X31 + 0x18]
	0x034375F4 ADRP X28, 0xCBF000
	0x034375F8 LDR W8, [X19]
	0x034375FC LDR X28, [X28 + 0x280]
	0x03437600 CBZ W8, 0x34377E0
	0x03437604 LDR X8, [X19 + 0x20]
	0x03437608 CBZ X8, 0x34378F8
	0x0343760C LDR X25, [X19 + 0x28]
	0x03437610 CBZ X25, 0x3437940
	0x03437614 LDR X0, [X25 + 0x20]
	0x03437618 CBZ X0, 0x3437944
	0x0343761C ADRP X8, 0xCF8000
	0x03437620 ADRP X9, 0xCBC000
	0x03437624 LDR X8, [X8 + 0x390]
	0x03437628 LDR X9, [X9 + 0x988]
	0x0343762C LDR X21, [X8]
	0x03437630 LDR X20, [X9]
	0x03437634 MOV X1, X31
	0x03437638 BL 0x361B448
	0x0343763C ADRP X8, 0xCC5000
	0x03437640 LDR X8, [X8 + 0x8D8]
	0x03437644 MOV X22, X0
	0x03437648 LDR X0, [X8]
	0x0343764C MOVZ W1, 0x1
	0x03437650 BL 0x1C16D6C
	0x03437654 MOV X1, X0
	0x03437658 CBZ X1, 0x3437948
	0x0343765C LDR W8, [X1 + 0x18]
	0x03437660 CBZ W8, 0x343794C
	0x03437664 MOVZ W8, 0x2F
	0x03437668 STRH W8, [X1 + 0x20]
	0x0343766C CBZ X22, 0x3437950
	0x03437670 MOV X0, X22
	0x03437674 MOV X2, X31
	0x03437678 BL 0x322BC58
	0x0343767C MOV X1, X21
	0x03437680 MOV X2, X31
	0x03437684 BL 0x321B938
	0x03437688 ADRP X8, 0xCC5000
	0x0343768C LDR X8, [X8 + 0x3A0]
	0x03437690 MOV X22, X0
	0x03437694 LDR X23, [X25 + 0x20]
	0x03437698 LDR X0, [X8]
	0x0343769C BL 0x1C16F10
	0x034376A0 MOV X21, X0
	0x034376A4 MOV X1, X23
	0x034376A8 MOV X2, X31
	0x034376AC BL 0x36281F8
	0x034376B0 CBZ X21, 0x3437954
	0x034376B4 MOV X0, X21
	0x034376B8 MOV X1, X22
	0x034376BC MOV X2, X31
	0x034376C0 BL 0x36288CC
	0x034376C4 MOV X0, X21
	0x034376C8 MOV X1, X20
	0x034376CC MOV X2, X31
	0x034376D0 BL 0x3628980
	0x034376D4 MOV X0, X21
	0x034376D8 MOV X1, X31
	0x034376DC BL 0x3628A38
	0x034376E0 ADRP X8, 0xCE5000
	0x034376E4 ADRP X9, 0xCBD000
	0x034376E8 LDR X8, [X8 + 0x4D8]
	0x034376EC LDR X9, [X9 + 0x6D0]
	0x034376F0 MOV X20, X0
	0x034376F4 LDR X21, [X8]
	0x034376F8 LDR X0, [X9]
	0x034376FC BL 0x1C16F10
	0x03437700 ADRP X8, 0xCBD000
	0x03437704 LDR X8, [X8 + 0x6C0]
	0x03437708 MOV X22, X0
	0x0343770C LDR X1, [X8]
	0x03437710 BL 0x2AA4804
	0x03437714 ADRP X8, 0xCF7000
	0x03437718 LDR X8, [X8 + 0x7D8]
	0x0343771C LDR X1, [X19 + 0x30]
	0x03437720 LDR X0, [X8]
	0x03437724 MOV X2, X31
	0x03437728 BL 0x321B938
	0x0343772C CBZ X22, 0x3437958
	0x03437730 ADRP X8, 0xCF7000
	0x03437734 LDR X8, [X8 + 0x7D0]
	0x03437738 ADRP X9, 0xCBD000
	0x0343773C LDR X9, [X9 + 0x810]
	0x03437740 MOV X2, X0
	0x03437744 LDR X1, [X8]
	0x03437748 LDR X3, [X9]
	0x0343774C MOV X0, X22
	0x03437750 BL 0x2AA5098
	0x03437754 LDR X0, [X19 + 0x20]
	0x03437758 MOV X1, X31
	0x0343775C BL 0x3483BE4
	0x03437760 MOV X23, X0
	0x03437764 MOV X0, X31
	0x03437768 BL 0x3241948
	0x0343776C CBZ X0, 0x343795C
	0x03437770 LDR X8, [X0]
	0x03437774 LDR X9, [X8 + 0x268]
	0x03437778 LDR X2, [X8 + 0x270]
	0x0343777C MOV X1, X23
	0x03437780 BLR X9
	0x03437784 LDR X24, [X25 + 0x10]
	0x03437788 CBZ X24, 0x3437960
	0x0343778C ADRP X10, 0xCF7000
	0x03437790 LDR X10, [X10 + 0x7B8]
	0x03437794 LDR X8, [X24]
	0x03437798 LDR W26, [X25 + 0x18]
	0x0343779C LDP X27, X25, [X19 + 0x38]
	0x034377A0 LDR X1, [X10]
	0x034377A4 LDRH W9, [X8 + 0x12E]
	0x034377A8 MOV X23, X0
	0x034377AC CBZ X9, 0x34377D0
	0x034377B0 LDR X10, [X8 + 0xB0]
	0x034377B4 ADD X10, X10, 0x8
	0x034377B8 LDUR X11, [X10 - 0x8]
	0x034377BC CMP X11, X1
	0x034377C0 B.EQ 0x34377F8
	0x034377C4 SUBS X9, X9, 0x1
	0x034377C8 ADD X10, X10, 0x10
	0x034377CC B.NE 0x34377B8
	0x034377D0 MOVZ W2, 0x3
	0x034377D4 MOV X0, X24
	0x034377D8 BL 0x1C5C788
	0x034377DC B 0x3437808
	0x034377E0 LDR X8, [X19 + 0x48]
	0x034377E4 MOVN W9, 0x0
	0x034377E8 STR X8, [X31 + 0x18]
	0x034377EC STR X31, [X19 + 0x48]
	0x034377F0 STR W9, [X19]
	0x034377F4 B 0x3437864
	0x034377F8 LDR W9, [X10]
	0x034377FC ADD W9, W9, 0x3
	0x03437800 ADD X8, X8, W9, 0x4, SXTW
	0x03437804 ADD X0, X8, 0x138
	0x03437808 LDP X8, X9, [X0]
	0x0343780C MOV X0, X24
	0x03437810 MOV X1, X21
	0x03437814 MOV X2, X20
	0x03437818 MOV X3, X22
	0x0343781C MOV X4, X23
	0x03437820 MOV W5, W26
	0x03437824 MOV X6, X27
	0x03437828 MOV X7, X25
	0x0343782C STR X9, [X31]
	0x03437830 BLR X8
	0x03437834 CBZ X0, 0x3437964
	0x03437838 ADRP X8, 0xCBF000
	0x0343783C LDR X8, [X8 + 0x1F8]
	0x03437840 LDR X1, [X8]
	0x03437844 BL 0x269F5D0
	0x03437848 ADRP X8, 0xCBF000
	0x0343784C LDR X8, [X8 + 0x1F0]
	0x03437850 STR X0, [X31 + 0x18]
	0x03437854 LDR X1, [X8]
	0x03437858 ADD X0, X31, 0x18
	0x0343785C BL 0x2677430
	0x03437860 TBZ X0, 0x0, 0x34378A0
	0x03437864 ADRP X8, 0xCBF000
	0x03437868 LDR X8, [X8 + 0x1E0]
	0x0343786C ADD X0, X31, 0x18
	0x03437870 LDR X1, [X8]
	0x03437874 BL 0x2677474
	0x03437878 MOVN W8, 0x1
	0x0343787C STR W8, [X19], #0x8
	0x03437880 LDR X0, [X28]
	0x03437884 LDR W8, [X0 + 0xE0]
	0x03437888 CBNZ W8, 0x3437890
	0x0343788C BL 0x1C16DFC
	0x03437890 MOV X0, X19
	0x03437894 MOV X1, X31
	0x03437898 BL 0x32C4864
	0x0343789C B 0x34378D8
	0x034378A0 STR W31, [X19]
	0x034378A4 LDR X8, [X31 + 0x18]
	0x034378A8 STR X8, [X19 + 0x48]
	0x034378AC LDR X0, [X28]
	0x034378B0 LDR W8, [X0 + 0xE0]
	0x034378B4 CBNZ W8, 0x34378BC
	0x034378B8 BL 0x1C16DFC
	0x034378BC ADRP X8, 0xCF8000
	0x034378C0 LDR X8, [X8 + 0x388]
	0x034378C4 ADD X0, X19, 0x8
	0x034378C8 LDR X3, [X8]
	0x034378CC ADD X1, X31, 0x18

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA7000
	014 Move W8, [X20+1651]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xCF9000
	021 Move X0, [X0+832]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF8000
	024 Move X0, [X0+2080]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF8000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xCC6000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCC6000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBE000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xCBE000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBE000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF8000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0xCF8000
	048 Move X0, [X0+2088]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC0000
	051 Move X0, [X0+480]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC0000
	054 Move X0, [X0+496]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC0000
	057 Move X0, [X0+504]
	058 Call 0x1C17CF4
	059 Move X0, 0xCC6000
	060 Move X0, [X0+928]
	061 Call 0x1C17CF4
	062 Move X0, 0xCE6000
	063 Move X0, [X0+1240]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF9000
	066 Move X0, [X0+840]
	067 Call 0x1C17CF4
	068 Move X0, 0xCC6000
	069 Move X0, [X0+2440]
	070 Call 0x1C17CF4
	071 Move X0, 0xCF8000
	072 Move X0, [X0+2000]
	073 Call 0x1C17CF4
	074 Move X0, 0xCF8000
	075 Move X0, [X0+2128]
	076 Call 0x1C17CF4
	077 Move X0, 0xCBD000
	078 Move X0, [X0+2440]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+1651], W8
	082 Move [X31+24], X31
	083 Move X28, 0xCF8000
	084 Move W8, [X19]
	085 Move X28, [X28+800]
	086 Compare W8, 0
	087 JumpIfEqual {252}
	088 Move X8, [X19+32]
	089 Compare X8, 0
	090 JumpIfEqual {344}
	091 Move X25, [X19+40]
	092 Compare X25, 0
	093 JumpIfEqual {362}
	094 Move X0, [X25+32]
	095 Compare X0, 0
	096 JumpIfEqual {363}
	097 Move X8, 0xCF9000
	098 Move X9, 0xCBD000
	099 Move X8, [X8+840]
	100 Move X9, [X9+2440]
	101 Move X21, [X8]
	102 Move X20, [X9]
	103 Move X1, X31
	104 Call Uri.get_AbsolutePath, X0
	105 Move X8, 0xCC6000
	106 Move X8, [X8+2264]
	107 Move X22, X0
	108 Move X0, [X8]
	109 Move W1, 1
	110 Call 0x1C17D6C
	111 Move X1, X0
	112 Compare X1, 0
	113 JumpIfEqual {364}
	114 Move W8, [X1+24]
	115 Compare W8, 0
	116 JumpIfEqual {365}
	117 Move W8, 47
	118 NotImplemented "Instruction STRH not yet implemented."
	119 Compare X22, 0
	120 JumpIfEqual {366}
	121 Move X0, X22
	122 Move X2, X31
	123 Call String.TrimEnd, X0, X1
	124 Move X1, X21
	125 Move X2, X31
	126 Call String.Concat, X0, X1
	127 Move X8, 0xCC6000
	128 Move X8, [X8+928]
	129 Move X22, X0
	130 Move X23, [X25+32]
	131 Move X0, [X8]
	132 Call 0x1C17F10
	133 Move X21, X0
	134 Move X1, X23
	135 Move X2, X31
	136 Call UriBuilder..ctor, X0, X1
	137 Compare X21, 0
	138 JumpIfEqual {367}
	139 Move X0, X21
	140 Move X1, X22
	141 Move X2, X31
	142 Call UriBuilder.set_Path, X0, X1
	143 Move X0, X21
	144 Move X1, X20
	145 Move X2, X31
	146 Call UriBuilder.set_Query, X0, X1
	147 Move X0, X21
	148 Move X1, X31
	149 Call UriBuilder.get_Uri, X0
	150 Move X8, 0xCE6000
	151 Move X9, 0xCBE000
	152 Move X8, [X8+1240]
	153 Move X9, [X9+1744]
	154 Move X20, X0
	155 Move X21, [X8]
	156 Move X0, [X9]
	157 Call 0x1C17F10
	158 Move X8, 0xCBE000
	159 Move X8, [X8+1728]
	160 Move X22, X0
	161 Move X1, [X8]
	162 Call Dictionary`2<Object, Object>..ctor, X0
	163 Move X0, [X19+48]
	164 Move X1, X31
	165 Call String.IsNullOrEmpty, X0
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {216}
	170 Move X0, X31
	171 Call Encoding.get_UTF8
	172 Move X8, 0xCC6000
	173 Move X23, X0
	174 Move X0, [X19+48]
	175 Move X2, [X19+56]
	176 Move X8, [X8+2440]
	177 Move X1, [X8]
	178 Move X3, X31
	179 Call String.Concat, X0, X1, X2
	180 Move X1, X0
	181 Compare X23, 0
	182 JumpIfEqual {371}
	183 Move X8, [X23]
	184 Move X9, [X8+616]
	185 Move X2, [X8+624]
	186 Move X0, X23
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X8, 0xCC6000
	189 Move X8, [X8+2536]
	190 Move X23, X0
	191 Move X0, [X8]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X0, X23
	197 Move X1, X31
	198 Call Convert.ToBase64String, X0
	199 Move X1, X0
	200 Move X8, 0xCF8000
	201 Move X8, [X8+2128]
	202 Move X0, [X8]
	203 Move X2, X31
	204 Call String.Concat, X0, X1
	205 Compare X22, 0
	206 JumpIfEqual {372}
	207 Move X8, 0xCF8000
	208 Move X8, [X8+2000]
	209 Move X9, 0xCBE000
	210 Move X9, [X9+2064]
	211 Move X2, X0
	212 Move X1, [X8]
	213 Move X3, [X9]
	214 Move X0, X22
	215 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	216 Move X0, [X19+32]
	217 Move X1, X31
	218 Call JsonWriter.ToJson, X0
	219 Move X23, X0
	220 Move X0, X31
	221 Call Encoding.get_UTF8
	222 Compare X0, 0
	223 JumpIfEqual {368}
	224 Move X8, [X0]
	225 Move X9, [X8+616]
	226 Move X2, [X8+624]
	227 Move X1, X23
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X24, [X25+16]
	230 Compare X24, 0
	231 JumpIfEqual {369}
	232 Move X10, 0xCF8000
	233 Move X10, [X10+1976]
	234 Move X8, [X24]
	235 Move W26, [X25+24]
	236 Move X27, [X19+64]
	237 Move X25, [X19+72]
	238 Move X1, [X10]
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Move X23, X0
	241 Compare X9, 0
	242 JumpIfEqual {249}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 Move W2, 3
	250 Move X0, X24
	251 Call 0x1C5D788
	252 Move X8, [X19+80]
	253 Move TEMP, 0
	254 Not TEMP
	255 Move W9, TEMP
	256 Move [X31+24], X8
	257 Move [X19+80], X31
	258 Move [X19], W9
	259 Move W9, [X10]
	260 Add W9, W9, 3
	261 Add X8, X8, W9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X9, [X0+8]
	265 Move X0, X24
	266 Move X1, X21
	267 Move X2, X20
	268 Move X3, X22
	269 Move X4, X23
	270 Move W5, W26
	271 Move X6, X27
	272 Move X7, X25
	273 Move [X31], X9
	274 NotImplemented "Instruction BLR not yet implemented."
	275 Compare X0, 0
	276 JumpIfEqual {370}
	277 Move X8, 0xCC0000
	278 Move X8, [X8+504]
	279 Move X1, [X8]
	280 Call Task`1<Object>.GetAwaiter, X0
	281 Move X8, 0xCC0000
	282 Move X8, [X8+496]
	283 Move [X31+24], X0
	284 Move X1, [X8]
	285 Add X0, X31, 24
	286 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	287 Move TEMP, X0
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfNotEqual {316}
	291 Move X8, 0xCC0000
	292 Move X8, [X8+480]
	293 Add X0, X31, 24
	294 Move X1, [X8]
	295 Call TaskAwaiter`1<Object>.GetResult, X0
	296 Move X8, 0xCF8000
	297 Move X8, [X8+2088]
	298 Move X1, [X8]
	299 Call JsonParser.FromJson, X0
	300 Move TEMP, 1
	301 Not TEMP
	302 Move W8, TEMP
	303 Move [X19+8], W8
	304 Move X20, X0
	305 Move X0, [X28]
	306 Move X21, 0xCF8000
	307 Move W8, [X0+224]
	308 Move X21, [X21+2080]
	309 Compare W8, 0
	310 JumpIfNotEqual {312}
	311 Call 0x1C17DFC
	312 Move X2, [X21]
	313 Move X0, X19
	314 Move X1, X20
	315 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	316 Move [X19], W31
	317 Move X8, [X31+24]
	318 Move [X19+80], X8
	319 Move X0, [X28]
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X8, 0xCF9000
	325 Move X8, [X8+832]
	326 Add X0, X19, 8
	327 Move X3, [X8]
	328 Add X1, X31, 24
	329 Move X2, X19
	330 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	331 Move X20, [X31+96]
	332 Move X19, [X31+104]
	333 Move X22, [X31+80]
	334 Move X21, [X31+88]
	335 Move X24, [X31+64]
	336 Move X23, [X31+72]
	337 Move X26, [X31+48]
	338 Move X25, [X31+56]
	339 Move X28, [X31+32]
	340 Move X27, [X31+40]
	341 Move X30, [X31+16]
	342 Add X31, X31, 112
	343 Return 
	344 Move X0, 0xCC5000
	345 Move X0, [X0+1400]
	346 Call 0x1C17D08
	347 Call 0x1C17F10
	348 Move X20, X0
	349 Move X0, 0xCF8000
	350 Move X0, [X0+3016]
	351 Call 0x1C17D08
	352 Move X1, X0
	353 Move X0, X20
	354 Move X2, X31
	355 Call ArgumentException..ctor, X0, X1
	356 Move X0, 0xCF9000
	357 Move X0, [X0+848]
	358 Call 0x1C17D08
	359 Move X1, X0
	360 Move X0, X20
	361 Call 0x1C17DEC
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F28
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Move X20, X0
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Move X0, X20
	376 Call 0x3EB2AD0
	377 Move X20, X0
	378 Move X0, 0xCBD000
	379 Move X0, [X0+2000]
	380 Call 0x1C17D08
	381 Move X8, [X20]
	382 Move X1, [X8]
	383 Call 0x1C18270
	384 Move TEMP, X0
	385 And TEMP, TEMP, 1
	386 Compare TEMP, 1
	387 JumpIfNotEqual {408}
	388 Move X20, [X20]
	389 Call 0x3EB2AE0
	390 Move TEMP, 1
	391 Not TEMP
	392 Move W8, TEMP
	393 Move [X19+8], W8
	394 Move X0, 0xCF8000
	395 Move X0, [X0+800]
	396 Call 0x1C17D08
	397 Move W8, [X0+224]
	398 Compare W8, 0
	399 JumpIfNotEqual {401}
	400 Call 0x1C17DFC
	401 Move X0, 0xCF8000
	402 Move X0, [X0+2152]
	403 Call 0x1C17D08
	404 Move X2, X0
	405 Move X0, X19
	406 Move X1, X20
	407 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	408 Move W0, 8
	409 Call 0x3EB2AF0
	410 Move X8, [X20]
	411 Move [X0], X8
	412 Move X1, 0xA7E000
	413 Add X1, X1, 3672
	414 Move X2, X31
	415 Call 0x3EB2B00
	416 Move X20, X0
	417 Call 0x3EB2AE0
	418 Move X0, X20
	419 Call 0x1D2D690
	420 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034378D0 MOV X2, X19
	0x034378D4 BL 0x2186D9C
	0x034378D8 LDP X20, X19, [X31 + 0x60]
	0x034378DC LDP X22, X21, [X31 + 0x50]
	0x034378E0 LDP X24, X23, [X31 + 0x40]
	0x034378E4 LDP X26, X25, [X31 + 0x30]
	0x034378E8 LDP X28, X27, [X31 + 0x20]
	0x034378EC LDR X30, [X31 + 0x10]
	0x034378F0 ADD X31, X31, 0x70
	0x034378F4 RET
	0x034378F8 ADRP X0, 0xCC4000
	0x034378FC LDR X0, [X0 + 0x578]
	0x03437900 BL 0x1C16D08
	0x03437904 BL 0x1C16F10
	0x03437908 MOV X20, X0
	0x0343790C ADRP X0, 0xCF7000
	0x03437910 LDR X0, [X0 + 0xBC8]
	0x03437914 BL 0x1C16D08
	0x03437918 MOV X1, X0
	0x0343791C MOV X0, X20
	0x03437920 MOV X2, X31
	0x03437924 BL 0x3314A68
	0x03437928 ADRP X0, 0xCF8000
	0x0343792C LDR X0, [X0 + 0x398]
	0x03437930 BL 0x1C16D08
	0x03437934 MOV X1, X0
	0x03437938 MOV X0, X20
	0x0343793C BL 0x1C16DEC
	0x03437940 BL 0x1C16F20
	0x03437944 BL 0x1C16F20
	0x03437948 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA7000
	007 Move X21, 0xCF8000
	008 Move W8, [X22+1652]
	009 Move X21, [X21+800]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF8000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF8000
	020 Move X0, [X0+800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1652], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF8000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2160]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

