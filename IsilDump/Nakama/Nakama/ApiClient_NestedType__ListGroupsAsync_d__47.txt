Type: Nakama.ApiClient/<ListGroupsAsync>d__47

Method: System.Void MoveNext()

Disassembly:
	0x0342D44C LDR W9, [X10]
	0x0342D450 ADD W9, W9, 0x3
	0x0342D454 ADD X8, X8, W9, 0x4, SXTW
	0x0342D458 ADD X0, X8, 0x138
	0x0342D45C LDP X8, X9, [X0]
	0x0342D460 MOV X0, X23
	0x0342D464 MOV X1, X21
	0x0342D468 MOV X2, X20
	0x0342D46C MOV X3, X22
	0x0342D470 MOV X4, X31
	0x0342D474 MOV W5, W25
	0x0342D478 MOV X6, X26
	0x0342D47C MOV X7, X24
	0x0342D480 STR X9, [X31]
	0x0342D484 BLR X8
	0x0342D488 CBZ X0, 0x342D620
	0x0342D48C ADRP X8, 0xCC9000
	0x0342D490 LDR X8, [X8 + 0x1F8]
	0x0342D494 LDR X1, [X8]
	0x0342D498 BL 0x269F5D0
	0x0342D49C ADRP X8, 0xCC9000
	0x0342D4A0 LDR X8, [X8 + 0x1F0]
	0x0342D4A4 STR X0, [X31 + 0x18]
	0x0342D4A8 LDR X1, [X8]
	0x0342D4AC ADD X0, X31, 0x18
	0x0342D4B0 BL 0x2677430
	0x0342D4B4 TBZ X0, 0x0, 0x342D514
	0x0342D4B8 ADRP X8, 0xCC9000
	0x0342D4BC LDR X8, [X8 + 0x1E0]
	0x0342D4C0 ADD X0, X31, 0x18
	0x0342D4C4 LDR X1, [X8]
	0x0342D4C8 BL 0x2677474
	0x0342D4CC ADRP X8, 0xD02000
	0x0342D4D0 LDR X8, [X8 + 0x8]
	0x0342D4D4 LDR X1, [X8]
	0x0342D4D8 BL 0x220E6DC
	0x0342D4DC MOVN W8, 0x1
	0x0342D4E0 STR W8, [X19], #0x8
	0x0342D4E4 MOV X20, X0
	0x0342D4E8 LDR X0, [X27]
	0x0342D4EC ADRP X21, 0xD02000
	0x0342D4F0 LDR W8, [X0 + 0xE0]
	0x0342D4F4 LDR X21, [X21]
	0x0342D4F8 CBNZ W8, 0x342D500
	0x0342D4FC BL 0x1C16DFC
	0x0342D500 LDR X2, [X21]
	0x0342D504 MOV X0, X19
	0x0342D508 MOV X1, X20
	0x0342D50C BL 0x26322B0
	0x0342D510 B 0x342D54C
	0x0342D514 STR W31, [X19]
	0x0342D518 LDR X8, [X31 + 0x18]
	0x0342D51C STR X8, [X19 + 0x68]
	0x0342D520 LDR X0, [X27]
	0x0342D524 LDR W8, [X0 + 0xE0]
	0x0342D528 CBNZ W8, 0x342D530
	0x0342D52C BL 0x1C16DFC
	0x0342D530 ADRP X8, 0xD01000
	0x0342D534 LDR X8, [X8 + 0xFF8]
	0x0342D538 ADD X0, X19, 0x8
	0x0342D53C LDR X3, [X8]
	0x0342D540 ADD X1, X31, 0x18
	0x0342D544 MOV X2, X19
	0x0342D548 BL 0x1FB3BAC
	0x0342D54C LDP X20, X19, [X31 + 0x60]
	0x0342D550 LDP X22, X21, [X31 + 0x50]
	0x0342D554 LDP X24, X23, [X31 + 0x40]
	0x0342D558 LDP X26, X25, [X31 + 0x30]
	0x0342D55C LDP X30, X27, [X31 + 0x20]
	0x0342D560 ADD X31, X31, 0x70
	0x0342D564 RET
	0x0342D568 ADRP X0, 0xCCE000
	0x0342D56C LDR X0, [X0 + 0x578]
	0x0342D570 BL 0x1C16D08
	0x0342D574 BL 0x1C16F10
	0x0342D578 MOV X20, X0
	0x0342D57C ADRP X0, 0xD01000
	0x0342D580 LDR X0, [X0 + 0xC30]
	0x0342D584 BL 0x1C16D08
	0x0342D588 MOV X1, X0
	0x0342D58C MOV X0, X20
	0x0342D590 MOV X2, X31
	0x0342D594 BL 0x3314A68
	0x0342D598 ADRP X0, 0xD02000
	0x0342D59C LDR X0, [X0 + 0x28]
	0x0342D5A0 BL 0x1C16D08
	0x0342D5A4 MOV X1, X0
	0x0342D5A8 MOV X0, X20
	0x0342D5AC BL 0x1C16DEC
	0x0342D5B0 ADRP X0, 0xCCE000
	0x0342D5B4 LDR X0, [X0 + 0x578]
	0x0342D5B8 BL 0x1C16D08
	0x0342D5BC BL 0x1C16F10
	0x0342D5C0 MOV X20, X0
	0x0342D5C4 ADRP X0, 0xD02000
	0x0342D5C8 LDR X0, [X0 + 0x30]
	0x0342D5CC BL 0x1C16D08
	0x0342D5D0 MOV X1, X0
	0x0342D5D4 MOV X0, X20
	0x0342D5D8 MOV X2, X31
	0x0342D5DC BL 0x3314A68
	0x0342D5E0 ADRP X0, 0xD02000
	0x0342D5E4 LDR X0, [X0 + 0x28]
	0x0342D5E8 BL 0x1C16D08
	0x0342D5EC MOV X1, X0
	0x0342D5F0 MOV X0, X20
	0x0342D5F4 BL 0x1C16DEC
	0x0342D5F8 BL 0x1C16F20
	0x0342D5FC BL 0x1C16F20
	0x0342D600 BL 0x1C16F20
	0x0342D604 BL 0x1C16F20
	0x0342D608 BL 0x1C16F20
	0x0342D60C BL 0x1C16F28
	0x0342D610 BL 0x1C16F20
	0x0342D614 BL 0x1C16F20
	0x0342D618 BL 0x1C16F20
	0x0342D61C BL 0x1C16F20
	0x0342D620 BL 0x1C16F20
	0x0342D624 BL 0x1C16F20
	0x0342D628 BL 0x1C16F28
	0x0342D62C BL 0x1C16F28
	0x0342D630 BL 0x1C16F28
	0x0342D634 BL 0x1C16F28
	0x0342D638 BL 0x1C16F44
	0x0342D63C MOV X1, X31
	0x0342D640 BL 0x1C16DEC
	0x0342D644 BL 0x1C16F44
	0x0342D648 MOV X1, X31
	0x0342D64C BL 0x1C16DEC
	0x0342D650 BL 0x1C16F44
	0x0342D654 MOV X1, X31
	0x0342D658 BL 0x1C16DEC
	0x0342D65C BL 0x1C16F44
	0x0342D660 MOV X1, X31
	0x0342D664 BL 0x1C16DEC
	0x0342D668 B 0x342D704
	0x0342D66C B 0x342D704
	0x0342D670 B 0x342D704
	0x0342D674 B 0x342D704
	0x0342D678 B 0x342D704
	0x0342D67C B 0x342D704
	0x0342D680 B 0x342D704
	0x0342D684 B 0x342D704
	0x0342D688 B 0x342D704
	0x0342D68C B 0x342D704
	0x0342D690 B 0x342D704
	0x0342D694 B 0x342D704
	0x0342D698 B 0x342D704
	0x0342D69C B 0x342D704
	0x0342D6A0 B 0x342D704
	0x0342D6A4 B 0x342D704
	0x0342D6A8 B 0x342D704
	0x0342D6AC B 0x342D704
	0x0342D6B0 B 0x342D704
	0x0342D6B4 B 0x342D704
	0x0342D6B8 B 0x342D704
	0x0342D6BC B 0x342D704
	0x0342D6C0 B 0x342D704
	0x0342D6C4 B 0x342D704
	0x0342D6C8 B 0x342D704
	0x0342D6CC B 0x342D704
	0x0342D6D0 B 0x342D704
	0x0342D6D4 B 0x342D704
	0x0342D6D8 B 0x342D704
	0x0342D6DC B 0x342D704
	0x0342D6E0 B 0x342D704
	0x0342D6E4 B 0x342D704
	0x0342D6E8 B 0x342D704
	0x0342D6EC B 0x342D704
	0x0342D6F0 B 0x342D704
	0x0342D6F4 B 0x342D704
	0x0342D6F8 B 0x342D704
	0x0342D6FC B 0x342D704
	0x0342D700 B 0x342D704
	0x0342D704 MOV X20, X0
	0x0342D708 CMP W1, 0x1
	0x0342D70C B.NE 0x342D7A8
	0x0342D710 MOV X0, X20
	0x0342D714 BL 0x3EB1AD0
	0x0342D718 MOV X20, X0
	0x0342D71C ADRP X0, 0xCC6000
	0x0342D720 LDR X0, [X0 + 0x7D0]
	0x0342D724 BL 0x1C16D08
	0x0342D728 LDR X8, [X20]
	0x0342D72C LDR X1, [X8]
	0x0342D730 BL 0x1C17270
	0x0342D734 TBZ X0, 0x0, 0x342D780
	0x0342D738 LDR X20, [X20]
	0x0342D73C BL 0x3EB1AE0
	0x0342D740 MOVN W8, 0x1
	0x0342D744 STR W8, [X19], #0x8
	0x0342D748 ADRP X0, 0xD01000
	0x0342D74C LDR X0, [X0 + 0x5D8]
	0x0342D750 BL 0x1C16D08
	0x0342D754 LDR W8, [X0 + 0xE0]
	0x0342D758 CBNZ W8, 0x342D760
	0x0342D75C BL 0x1C16DFC
	0x0342D760 ADRP X0, 0xD02000
	0x0342D764 LDR X0, [X0 + 0x38]
	0x0342D768 BL 0x1C16D08
	0x0342D76C MOV X2, X0
	0x0342D770 MOV X0, X19
	0x0342D774 MOV X1, X20
	0x0342D778 BL 0x26324C8
	0x0342D77C B 0x342D54C
	0x0342D780 MOVZ W0, 0x8
	0x0342D784 BL 0x3EB1AF0
	0x0342D788 LDR X8, [X20]
	0x0342D78C STR X8, [X0]
	0x0342D790 ADRP X1, 0xA87000
	0x0342D794 ADD X1, X1, 0xE58
	0x0342D798 MOV X2, X31
	0x0342D79C BL 0x3EB1B00
	0x0342D7A0 MOV X20, X0
	0x0342D7A4 BL 0x3EB1AE0
	0x0342D7A8 MOV X0, X20
	0x0342D7AC BL 0x1D2C690
	0x0342D7B0 BL 0x1990590
	0x0342D7B4 STR X30, [X31 - 0x30]!
	0x0342D7B8 STP X22, X21, [X31 + 0x10]
	0x0342D7BC STP X20, X19, [X31 + 0x20]
	0x0342D7C0 ADRP X22, 0xFB0000
	0x0342D7C4 ADRP X21, 0xD01000
	0x0342D7C8 LDRB W8, [X22 + 0x654]
	0x0342D7CC LDR X21, [X21 + 0x5D8]
	0x0342D7D0 MOV X19, X1
	0x0342D7D4 MOV X20, X0
	0x0342D7D8 TBNZ X8, 0x0, 0x342D7FC
	0x0342D7DC ADRP X0, 0xD02000
	0x0342D7E0 LDR X0, [X0 + 0x40]
	0x0342D7E4 BL 0x1C16CF4
	0x0342D7E8 ADRP X0, 0xD01000
	0x0342D7EC LDR X0, [X0 + 0x5D8]
	0x0342D7F0 BL 0x1C16CF4
	0x0342D7F4 MOVZ W8, 0x1
	0x0342D7F8 STRB W8, [X22 + 0x654]
	0x0342D7FC LDR X0, [X21]
	0x0342D800 ADRP X21, 0xD02000
	0x0342D804 LDR W8, [X0 + 0xE0]
	0x0342D808 LDR X21, [X21 + 0x40]
	0x0342D80C CBNZ W8, 0x342D814
	0x0342D810 BL 0x1C16DFC
	0x0342D814 LDR X2, [X21]
	0x0342D818 ADD X0, X20, 0x8
	0x0342D81C MOV X1, X19
	0x0342D820 LDP X20, X19, [X31 + 0x20]
	0x0342D824 LDP X22, X21, [X31 + 0x10]
	0x0342D828 LDR X30, [X31], #0x30
	0x0342D82C B 0x2632228
	0x0342D830 SUB X31, X31, 0x90
	0x0342D834 STP X29, X30, [X31 + 0x30]
	0x0342D838 STP X28, X27, [X31 + 0x40]
	0x0342D83C STP X26, X25, [X31 + 0x50]
	0x0342D840 STP X24, X23, [X31 + 0x60]
	0x0342D844 STP X22, X21, [X31 + 0x70]
	0x0342D848 STP X20, X19, [X31 + 0x80]
	0x0342D84C ADRP X20, 0xFB0000
	0x0342D850 LDRB W8, [X20 + 0x655]
	0x0342D854 MOV X19, X0
	0x0342D858 TBNZ X8, 0x0, 0x342D9F0
	0x0342D85C ADRP X0, 0xD02000
	0x0342D860 LDR X0, [X0 + 0x48]
	0x0342D864 BL 0x1C16CF4
	0x0342D868 ADRP X0, 0xD02000
	0x0342D86C LDR X0, [X0]
	0x0342D870 BL 0x1C16CF4
	0x0342D874 ADRP X0, 0xD01000
	0x0342D878 LDR X0, [X0 + 0x5D8]
	0x0342D87C BL 0x1C16CF4
	0x0342D880 ADRP X0, 0xCCF000
	0x0342D884 LDR X0, [X0 + 0x8D8]
	0x0342D888 BL 0x1C16CF4
	0x0342D88C ADRP X0, 0xCC7000
	0x0342D890 LDR X0, [X0 + 0x810]
	0x0342D894 BL 0x1C16CF4
	0x0342D898 ADRP X0, 0xCC7000
	0x0342D89C LDR X0, [X0 + 0x6C0]
	0x0342D8A0 BL 0x1C16CF4
	0x0342D8A4 ADRP X0, 0xCC7000
	0x0342D8A8 LDR X0, [X0 + 0x6D0]
	0x0342D8AC BL 0x1C16CF4
	0x0342D8B0 ADRP X0, 0xCC6000
	0x0342D8B4 LDR X0, [X0 + 0xE00]
	0x0342D8B8 BL 0x1C16CF4
	0x0342D8BC ADRP X0, 0xCC6000
	0x0342D8C0 LDR X0, [X0 + 0xF70]
	0x0342D8C4 BL 0x1C16CF4
	0x0342D8C8 ADRP X0, 0xCC6000
	0x0342D8CC LDR X0, [X0 + 0xF78]
	0x0342D8D0 BL 0x1C16CF4
	0x0342D8D4 ADRP X0, 0xCC6000
	0x0342D8D8 LDR X0, [X0 + 0xE18]
	0x0342D8DC BL 0x1C16CF4
	0x0342D8E0 ADRP X0, 0xD01000
	0x0342D8E4 LDR X0, [X0 + 0x7B8]
	0x0342D8E8 BL 0x1C16CF4
	0x0342D8EC ADRP X0, 0xD02000
	0x0342D8F0 LDR X0, [X0 + 0x8]
	0x0342D8F4 BL 0x1C16CF4
	0x0342D8F8 ADRP X0, 0xCC9000
	0x0342D8FC LDR X0, [X0 + 0xEF8]
	0x0342D900 BL 0x1C16CF4
	0x0342D904 ADRP X0, 0xCC7000
	0x0342D908 LDR X0, [X0 + 0x478]
	0x0342D90C BL 0x1C16CF4
	0x0342D910 ADRP X0, 0xCC6000
	0x0342D914 LDR X0, [X0 + 0x9D0]
	0x0342D918 BL 0x1C16CF4
	0x0342D91C ADRP X0, 0xCC6000
	0x0342D920 LDR X0, [X0 + 0xAC8]
	0x0342D924 BL 0x1C16CF4
	0x0342D928 ADRP X0, 0xCC9000
	0x0342D92C LDR X0, [X0 + 0x1E0]
	0x0342D930 BL 0x1C16CF4
	0x0342D934 ADRP X0, 0xCC9000
	0x0342D938 LDR X0, [X0 + 0x1F0]
	0x0342D93C BL 0x1C16CF4
	0x0342D940 ADRP X0, 0xCC9000
	0x0342D944 LDR X0, [X0 + 0x1F8]
	0x0342D948 BL 0x1C16CF4
	0x0342D94C ADRP X0, 0xCCF000
	0x0342D950 LDR X0, [X0 + 0x3A0]
	0x0342D954 BL 0x1C16CF4
	0x0342D958 ADRP X0, 0xCC8000
	0x0342D95C LDR X0, [X0 + 0xA28]
	0x0342D960 BL 0x1C16CF4
	0x0342D964 ADRP X0, 0xCEF000
	0x0342D968 LDR X0, [X0 + 0x4D0]
	0x0342D96C BL 0x1C16CF4
	0x0342D970 ADRP X0, 0xD02000
	0x0342D974 LDR X0, [X0 + 0x20]
	0x0342D978 BL 0x1C16CF4
	0x0342D97C ADRP X0, 0xCCF000
	0x0342D980 LDR X0, [X0 + 0x720]
	0x0342D984 BL 0x1C16CF4
	0x0342D988 ADRP X0, 0xD01000
	0x0342D98C LDR X0, [X0 + 0x7D0]
	0x0342D990 BL 0x1C16CF4
	0x0342D994 ADRP X0, 0xD01000
	0x0342D998 LDR X0, [X0 + 0xF18]
	0x0342D99C BL 0x1C16CF4
	0x0342D9A0 ADRP X0, 0xD01000
	0x0342D9A4 LDR X0, [X0 + 0xC20]
	0x0342D9A8 BL 0x1C16CF4
	0x0342D9AC ADRP X0, 0xD01000
	0x0342D9B0 LDR X0, [X0 + 0xC28]
	0x0342D9B4 BL 0x1C16CF4
	0x0342D9B8 ADRP X0, 0xD01000
	0x0342D9BC LDR X0, [X0 + 0x7D8]
	0x0342D9C0 BL 0x1C16CF4
	0x0342D9C4 ADRP X0, 0xCC6000
	0x0342D9C8 LDR X0, [X0 + 0x988]
	0x0342D9CC BL 0x1C16CF4
	0x0342D9D0 ADRP X0, 0xD01000
	0x0342D9D4 LDR X0, [X0 + 0xF20]
	0x0342D9D8 BL 0x1C16CF4
	0x0342D9DC ADRP X0, 0xD02000
	0x0342D9E0 LDR X0, [X0 + 0x50]
	0x0342D9E4 BL 0x1C16CF4
	0x0342D9E8 MOVZ W8, 0x1
	0x0342D9EC STRB W8, [X20 + 0x655]
	0x0342D9F0 STR X31, [X31 + 0x28]
	0x0342D9F4 ADRP X27, 0xD01000
	0x0342D9F8 LDR W28, [X19]
	0x0342D9FC LDR X27, [X27 + 0x5D8]
	0x0342DA00 CBZ W28, 0x342DADC
	0x0342DA04 LDR X21, [X19 + 0x20]
	0x0342DA08 CBZ X21, 0x342E0F4
	0x0342DA0C ADRP X24, 0xCC8000
	0x0342DA10 LDR X24, [X24 + 0xA28]
	0x0342DA14 ADRP X8, 0xD01000
	0x0342DA18 LDR X0, [X24]
	0x0342DA1C LDR X8, [X8 + 0xC28]
	0x0342DA20 LDR X23, [X19 + 0x48]
	0x0342DA24 LDR W9, [X0 + 0xE0]
	0x0342DA28 LDR X20, [X8]
	0x0342DA2C CBNZ W9, 0x342DA34
	0x0342DA30 BL 0x1C16DFC
	0x0342DA34 MOV X0, X21
	0x0342DA38 MOV X1, X31
	0x0342DA3C BL 0x3624D20
	0x0342DA40 CBZ X20, 0x342E13C
	0x0342DA44 ADRP X8, 0xD01000
	0x0342DA48 LDR X8, [X8 + 0xC20]
	0x0342DA4C MOV X2, X0
	0x0342DA50 LDR X1, [X8]
	0x0342DA54 MOV X0, X20
	0x0342DA58 MOV X3, X31
	0x0342DA5C BL 0x32293BC
	0x0342DA60 ADRP X8, 0xCC6000
	0x0342DA64 LDR X8, [X8 + 0x988]
	0x0342DA68 LDR X21, [X19 + 0x28]
	0x0342DA6C MOV X20, X0
	0x0342DA70 LDR X29, [X8]
	0x0342DA74 CBNZ X21, 0x342DA94
	0x0342DA78 ADRP X8, 0xCC6000
	0x0342DA7C LDR X8, [X8 + 0xAC8]
	0x0342DA80 LDR X0, [X8]
	0x0342DA84 MOV W1, W31
	0x0342DA88 BL 0x1C16D6C
	0x0342DA8C MOV X21, X0
	0x0342DA90 CBZ X0, 0x342E180
	0x0342DA94 ADRP X10, 0xCC6000
	0x0342DA98 LDR X8, [X21]
	0x0342DA9C LDR X10, [X10 + 0xF70]
	0x0342DAA0 LDRH W9, [X8 + 0x12E]
	0x0342DAA4 LDR X1, [X10]
	0x0342DAA8 CBZ X9, 0x342DACC
	0x0342DAAC LDR X10, [X8 + 0xB0]
	0x0342DAB0 ADD X10, X10, 0x8
	0x0342DAB4 LDUR X11, [X10 - 0x8]
	0x0342DAB8 CMP X11, X1
	0x0342DABC B.EQ 0x342DAF4
	0x0342DAC0 SUBS X9, X9, 0x1
	0x0342DAC4 ADD X10, X10, 0x10
	0x0342DAC8 B.NE 0x342DAB4
	0x0342DACC MOV X0, X21
	0x0342DAD0 MOV W2, W31
	0x0342DAD4 BL 0x1C5C788
	0x0342DAD8 B 0x342DB00
	0x0342DADC LDR X8, [X19 + 0x68]
	0x0342DAE0 MOVN W9, 0x0
	0x0342DAE4 STR X8, [X31 + 0x28]
	0x0342DAE8 STR X31, [X19 + 0x68]
	0x0342DAEC STR W9, [X19]
	0x0342DAF0 B 0x342E03C
	0x0342DAF4 LDRSW X9, [X10]
	0x0342DAF8 ADD X8, X8, X9, 0x4, LSL
	0x0342DAFC ADD X0, X8, 0x138
	0x0342DB00 LDP X8, X1, [X0]
	0x0342DB04 MOV X0, X21
	0x0342DB08 BLR X8
	0x0342DB0C STP X20, X23, [X31 + 0x10]
	0x0342DB10 ADRP X27, 0xCC6000
	0x0342DB14 ADRP X20, 0xCC6000
	0x0342DB18 ADRP X25, 0xD02000
	0x0342DB1C ADRP X26, 0xCCF000
	0x0342DB20 LDR X27, [X27 + 0xE18]
	0x0342DB24 LDR X20, [X20 + 0xF78]
	0x0342DB28 LDR X25, [X25 + 0x50]
	0x0342DB2C LDR X26, [X26 + 0x720]
	0x0342DB30 MOV X22, X0
	0x0342DB34 MOV X0, X29
	0x0342DB38 CBZ X22, 0x342E0F0
	0x0342DB3C LDR X8, [X22]
	0x0342DB40 LDR X1, [X27]
	0x0342DB44 MOV X21, X0
	0x0342DB48 LDRH W9, [X8 + 0x12E]
	0x0342DB4C CBZ X9, 0x342DB70
	0x0342DB50 LDR X10, [X8 + 0xB0]
	0x0342DB54 ADD X10, X10, 0x8
	0x0342DB58 LDUR X11, [X10 - 0x8]
	0x0342DB5C CMP X11, X1
	0x0342DB60 B.EQ 0x342DB80
	0x0342DB64 SUBS X9, X9, 0x1
	0x0342DB68 ADD X10, X10, 0x10
	0x0342DB6C B.NE 0x342DB58
	0x0342DB70 MOV X0, X22
	0x0342DB74 MOV W2, W31
	0x0342DB78 BL 0x1C5C788
	0x0342DB7C B 0x342DB8C
	0x0342DB80 LDRSW X9, [X10]
	0x0342DB84 ADD X8, X8, X9, 0x4, LSL
	0x0342DB88 ADD X0, X8, 0x138
	0x0342DB8C LDP X8, X1, [X0]
	0x0342DB90 MOV X0, X22
	0x0342DB94 BLR X8
	0x0342DB98 TBZ X0, 0x0, 0x342DC30
	0x0342DB9C LDR X8, [X22]
	0x0342DBA0 LDR X1, [X20]
	0x0342DBA4 LDRH W9, [X8 + 0x12E]
	0x0342DBA8 CBZ X9, 0x342DBCC
	0x0342DBAC LDR X10, [X8 + 0xB0]
	0x0342DBB0 ADD X10, X10, 0x8
	0x0342DBB4 LDUR X11, [X10 - 0x8]
	0x0342DBB8 CMP X11, X1
	0x0342DBBC B.EQ 0x342DBDC
	0x0342DBC0 SUBS X9, X9, 0x1
	0x0342DBC4 ADD X10, X10, 0x10
	0x0342DBC8 B.NE 0x342DBB4
	0x0342DBCC MOV X0, X22
	0x0342DBD0 MOV W2, W31
	0x0342DBD4 BL 0x1C5C788
	0x0342DBD8 B 0x342DBE8
	0x0342DBDC LDRSW X9, [X10]
	0x0342DBE0 ADD X8, X8, X9, 0x4, LSL
	0x0342DBE4 ADD X0, X8, 0x138
	0x0342DBE8 LDP X8, X1, [X0]
	0x0342DBEC MOV X0, X22
	0x0342DBF0 BLR X8
	0x0342DBF4 MOV X23, X0
	0x0342DBF8 LDR X0, [X24]
	0x0342DBFC LDR W8, [X0 + 0xE0]
	0x0342DC00 CBNZ W8, 0x342DC08
	0x0342DC04 BL 0x1C16DFC
	0x0342DC08 MOV X0, X23
	0x0342DC0C MOV X1, X31
	0x0342DC10 BL 0x3624D20
	0x0342DC14 LDR X1, [X25]
	0x0342DC18 LDR X3, [X26]
	0x0342DC1C MOV X2, X0
	0x0342DC20 MOV X0, X21
	0x0342DC24 MOV X4, X31
	0x0342DC28 BL 0x32277C4
	0x0342DC2C B 0x342DB38
	0x0342DC30 MOV X23, X31
	0x0342DC34 MOVZ W20, 0x9
	0x0342DC38 ADRP X27, 0xD01000
	0x0342DC3C LDR X27, [X27 + 0x5D8]
	0x0342DC40 TBZ X28, 0x1F, 0x342DCA8
	0x0342DC44 CBZ X22, 0x342DCA8
	0x0342DC48 ADRP X10, 0xCC6000
	0x0342DC4C LDR X8, [X22]
	0x0342DC50 LDR X10, [X10 + 0xE00]
	0x0342DC54 LDRH W9, [X8 + 0x12E]
	0x0342DC58 LDR X1, [X10]
	0x0342DC5C CBZ X9, 0x342DC80
	0x0342DC60 LDR X10, [X8 + 0xB0]
	0x0342DC64 ADD X10, X10, 0x8
	0x0342DC68 LDUR X11, [X10 - 0x8]
	0x0342DC6C CMP X11, X1
	0x0342DC70 B.EQ 0x342DC90
	0x0342DC74 SUBS X9, X9, 0x1
	0x0342DC78 ADD X10, X10, 0x10
	0x0342DC7C B.NE 0x342DC68
	0x0342DC80 MOV X0, X22
	0x0342DC84 MOV W2, W31
	0x0342DC88 BL 0x1C5C788
	0x0342DC8C B 0x342DC9C
	0x0342DC90 LDRSW X9, [X10]
	0x0342DC94 ADD X8, X8, X9, 0x4, LSL
	0x0342DC98 ADD X0, X8, 0x138
	0x0342DC9C LDP X8, X1, [X0]
	0x0342DCA0 MOV X0, X22
	0x0342DCA4 BLR X8
	0x0342DCA8 CBNZ X23, 0x342E140
	0x0342DCAC CMP W20, 0x9
	0x0342DCB0 B.EQ 0x342DCB8
	0x0342DCB4 CBNZ W20, 0x342E0D0
	0x0342DCB8 LDRB W8, [X19 + 0x30]
	0x0342DCBC CBZ W8, 0x342DDB8
	0x0342DCC0 ADRP X8, 0xCC6000
	0x0342DCC4 LDR X8, [X8 + 0x9D0]
	0x0342DCC8 LDR X0, [X8]
	0x0342DCCC MOVZ W1, 0x4
	0x0342DCD0 BL 0x1C16D6C
	0x0342DCD4 MOV X22, X0
	0x0342DCD8 CBZ X0, 0x342E16C
	0x0342DCDC CBZ X21, 0x342DCF4
	0x0342DCE0 LDR X8, [X22]
	0x0342DCE4 LDR X1, [X8 + 0x40]
	0x0342DCE8 MOV X0, X21
	0x0342DCEC BL 0x1C16E00
	0x0342DCF0 CBZ X0, 0x342E184
	0x0342DCF4 LDR W8, [X22 + 0x18]
	0x0342DCF8 CBZ W8, 0x342E170
	0x0342DCFC STR X21, [X22 + 0x20]
	0x0342DD00 ADRP X20, 0xD01000
	0x0342DD04 LDR X20, [X20 + 0xF18]
	0x0342DD08 LDR X0, [X20]
	0x0342DD0C CBZ X0, 0x342DD24
	0x0342DD10 LDR X8, [X22]
	0x0342DD14 LDR X1, [X8 + 0x40]
	0x0342DD18 BL 0x1C16E00
	0x0342DD1C CBZ X0, 0x342E190
	0x0342DD20 LDR W8, [X22 + 0x18]
	0x0342DD24 CMP W8, 0x1
	0x0342DD28 B.LS 0x342E174
	0x0342DD2C LDR X8, [X20]
	0x0342DD30 ADRP X9, 0xCC7000
	0x0342DD34 STR X8, [X22 + 0x28]
	0x0342DD38 LDR X8, [X19 + 0x30]
	0x0342DD3C LDR X9, [X9 + 0x478]
	0x0342DD40 STR X8, [X31 + 0x20]
	0x0342DD44 LDR X0, [X9]
	0x0342DD48 ADD X1, X31, 0x20
	0x0342DD4C BL 0x1C16E04
	0x0342DD50 MOV X21, X0
	0x0342DD54 CBZ X0, 0x342DD6C
	0x0342DD58 LDR X8, [X22]
	0x0342DD5C LDR X1, [X8 + 0x40]
	0x0342DD60 MOV X0, X21
	0x0342DD64 BL 0x1C16E00
	0x0342DD68 CBZ X0, 0x342E19C
	0x0342DD6C LDR W8, [X22 + 0x18]
	0x0342DD70 CMP W8, 0x2
	0x0342DD74 B.LS 0x342E178
	0x0342DD78 STR X21, [X22 + 0x30]
	0x0342DD7C LDR X0, [X26]
	0x0342DD80 CBZ X0, 0x342DD98
	0x0342DD84 LDR X8, [X22]
	0x0342DD88 LDR X1, [X8 + 0x40]
	0x0342DD8C BL 0x1C16E00
	0x0342DD90 CBZ X0, 0x342E1A8
	0x0342DD94 LDR W8, [X22 + 0x18]
	0x0342DD98 CMP W8, 0x3
	0x0342DD9C B.LS 0x342E17C
	0x0342DDA0 LDR X8, [X26]
	0x0342DDA4 STR X8, [X22 + 0x38]
	0x0342DDA8 MOV X0, X22
	0x0342DDAC MOV X1, X31
	0x0342DDB0 BL 0x3227578
	0x0342DDB4 MOV X21, X0
	0x0342DDB8 LDR X22, [X19 + 0x38]
	0x0342DDBC CBZ X22, 0x342DE00
	0x0342DDC0 LDR X0, [X24]
	0x0342DDC4 LDR W8, [X0 + 0xE0]
	0x0342DDC8 CBNZ W8, 0x342DDD0
	0x0342DDCC BL 0x1C16DFC
	0x0342DDD0 MOV X0, X22
	0x0342DDD4 MOV X1, X31
	0x0342DDD8 BL 0x3624D20
	0x0342DDDC ADRP X8, 0xD01000
	0x0342DDE0 LDR X8, [X8 + 0xF20]
	0x0342DDE4 LDR X3, [X26]
	0x0342DDE8 MOV X2, X0
	0x0342DDEC LDR X1, [X8]
	0x0342DDF0 MOV X0, X21
	0x0342DDF4 MOV X4, X31
	0x0342DDF8 BL 0x32277C4
	0x0342DDFC MOV X21, X0
	0x0342DE00 LDR X22, [X19 + 0x40]
	0x0342DE04 CBZ X22, 0x342DE48
	0x0342DE08 LDR X0, [X24]
	0x0342DE0C LDR W8, [X0 + 0xE0]
	0x0342DE10 CBNZ W8, 0x342DE18
	0x0342DE14 BL 0x1C16DFC
	0x0342DE18 MOV X0, X22
	0x0342DE1C MOV X1, X31
	0x0342DE20 BL 0x3624D20
	0x0342DE24 ADRP X8, 0xD02000
	0x0342DE28 LDR X8, [X8 + 0x20]
	0x0342DE2C LDR X3, [X26]
	0x0342DE30 MOV X2, X0
	0x0342DE34 LDR X1, [X8]
	0x0342DE38 MOV X0, X21
	0x0342DE3C MOV X4, X31
	0x0342DE40 BL 0x32277C4
	0x0342DE44 MOV X21, X0
	0x0342DE48 LDR X25, [X31 + 0x18]
	0x0342DE4C CBZ X25, 0x342E148
	0x0342DE50 LDR X0, [X25 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xFB1000
	013 Move W8, [X20+1617]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {114}
	019 Move X0, 0xD02000
	020 Move X0, [X0+4016]
	021 Call 0x1C17CF4
	022 Move X0, 0xD02000
	023 Move X0, [X0+4024]
	024 Call 0x1C17CF4
	025 Move X0, 0xD02000
	026 Move X0, [X0+1160]
	027 Call 0x1C17CF4
	028 Move X0, 0xCD0000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC8000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC8000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCC8000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xD02000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xD02000
	044 Move X0, [X0+4032]
	045 Call 0x1C17CF4
	046 Move X0, 0xD02000
	047 Move X0, [X0+2096]
	048 Call 0x1C17CF4
	049 Move X0, 0xCCB000
	050 Move X0, [X0+3056]
	051 Call 0x1C17CF4
	052 Move X0, 0xCCA000
	053 Move X0, [X0+3832]
	054 Call 0x1C17CF4
	055 Move X0, 0xCC8000
	056 Move X0, [X0+1144]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC7000
	059 Move X0, [X0+2512]
	060 Call 0x1C17CF4
	061 Move X0, 0xCCA000
	062 Move X0, [X0+480]
	063 Call 0x1C17CF4
	064 Move X0, 0xCCA000
	065 Move X0, [X0+496]
	066 Call 0x1C17CF4
	067 Move X0, 0xCCA000
	068 Move X0, [X0+504]
	069 Call 0x1C17CF4
	070 Move X0, 0xCD0000
	071 Move X0, [X0+928]
	072 Call 0x1C17CF4
	073 Move X0, 0xCC9000
	074 Move X0, [X0+2600]
	075 Call 0x1C17CF4
	076 Move X0, 0xD02000
	077 Move X0, [X0+4040]
	078 Call 0x1C17CF4
	079 Move X0, 0xD02000
	080 Move X0, [X0+4048]
	081 Call 0x1C17CF4
	082 Move X0, 0xCF0000
	083 Move X0, [X0+1232]
	084 Call 0x1C17CF4
	085 Move X0, 0xD02000
	086 Move X0, [X0+3008]
	087 Call 0x1C17CF4
	088 Move X0, 0xCD0000
	089 Move X0, [X0+1824]
	090 Call 0x1C17CF4
	091 Move X0, 0xD02000
	092 Move X0, [X0+2000]
	093 Call 0x1C17CF4
	094 Move X0, 0xD02000
	095 Move X0, [X0+3864]
	096 Call 0x1C17CF4
	097 Move X0, 0xD02000
	098 Move X0, [X0+4056]
	099 Call 0x1C17CF4
	100 Move X0, 0xD02000
	101 Move X0, [X0+2008]
	102 Call 0x1C17CF4
	103 Move X0, 0xCC7000
	104 Move X0, [X0+2440]
	105 Call 0x1C17CF4
	106 Move X0, 0xD02000
	107 Move X0, [X0+3872]
	108 Call 0x1C17CF4
	109 Move X0, 0xD02000
	110 Move X0, [X0+4064]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X20+1617], W8
	114 Move [X31+24], X31
	115 Move X27, 0xD02000
	116 Move W8, [X19]
	117 Move X27, [X27+1160]
	118 Compare W8, 0
	119 JumpIfEqual {475}
	120 Move X8, 0xD02000
	121 Move X9, 0xCC7000
	122 Move X8, [X8+3008]
	123 Move X9, [X9+2440]
	124 Move X24, [X19+80]
	125 Move X22, [X19+32]
	126 Move X20, [X8]
	127 Move X21, [X9]
	128 Compare X22, 0
	129 JumpIfEqual {151}
	130 Move X8, 0xCC9000
	131 Move X8, [X8+2600]
	132 Move X0, [X8]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X22
	138 Move X1, X31
	139 Call Uri.EscapeDataString, X0
	140 Move X8, 0xD02000
	141 Move X8, [X8+4056]
	142 Move X9, 0xCD0000
	143 Move X9, [X9+1824]
	144 Move X2, X0
	145 Move X1, [X8]
	146 Move X3, [X9]
	147 Move X0, X21
	148 Move X4, X31
	149 Call String.Concat, X0, X1, X2, X3
	150 Move X21, X0
	151 Move X22, [X19+40]
	152 Compare X22, 0
	153 JumpIfEqual {175}
	154 Move X8, 0xCC9000
	155 Move X8, [X8+2600]
	156 Move X0, [X8]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X0, X22
	162 Move X1, X31
	163 Call Uri.EscapeDataString, X0
	164 Move X8, 0xD02000
	165 Move X8, [X8+3872]
	166 Move X9, 0xCD0000
	167 Move X9, [X9+1824]
	168 Move X2, X0
	169 Move X1, [X8]
	170 Move X3, [X9]
	171 Move X0, X21
	172 Move X4, X31
	173 Call String.Concat, X0, X1, X2, X3
	174 Move X21, X0
	175 Move W8, [X19+48]
	176 Compare W8, 0
	177 JumpIfEqual {249}
	178 Move X8, 0xCC7000
	179 Move X8, [X8+2512]
	180 Move X0, [X8]
	181 Move W1, 4
	182 Call 0x1C17D6C
	183 Move X22, X0
	184 Compare X0, 0
	185 JumpIfEqual {575}
	186 Compare X21, 0
	187 JumpIfEqual {194}
	188 Move X8, [X22]
	189 Move X1, [X8+64]
	190 Move X0, X21
	191 Call 0x1C17E00
	192 Compare X0, 0
	193 JumpIfEqual {586}
	194 Move W8, [X22+24]
	195 Compare W8, 0
	196 JumpIfEqual {576}
	197 Move [X22+32], X21
	198 Move X21, 0xD02000
	199 Move X21, [X21+3864]
	200 Move X0, [X21]
	201 Compare X0, 0
	202 JumpIfEqual {209}
	203 Move X8, [X22]
	204 Move X1, [X8+64]
	205 Call 0x1C17E00
	206 Compare X0, 0
	207 JumpIfEqual {589}
	208 Move W8, [X22+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X8, [X21]
	211 Move X9, 0xCC8000
	212 Move [X22+40], X8
	213 Move X8, [X19+48]
	214 Move X9, [X9+1144]
	215 Move [X31+16], X8
	216 Move X0, [X9]
	217 Add X1, X31, 16
	218 Call 0x1C17E04
	219 Move X21, X0
	220 Compare X0, 0
	221 JumpIfEqual {228}
	222 Move X8, [X22]
	223 Move X1, [X8+64]
	224 Move X0, X21
	225 Call 0x1C17E00
	226 Compare X0, 0
	227 JumpIfEqual {592}
	228 Move W8, [X22+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move [X22+48], X21
	231 Move X21, 0xCD0000
	232 Move X21, [X21+1824]
	233 Move X0, [X21]
	234 Compare X0, 0
	235 JumpIfEqual {242}
	236 Move X8, [X22]
	237 Move X1, [X8+64]
	238 Call 0x1C17E00
	239 Compare X0, 0
	240 JumpIfEqual {595}
	241 Move W8, [X22+24]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X8, [X21]
	244 Move [X22+56], X8
	245 Move X0, X22
	246 Move X1, X31
	247 Call String.Concat, X0
	248 Move X21, X0
	249 Move X22, [X19+56]
	250 Compare X22, 0
	251 JumpIfEqual {273}
	252 Move X8, 0xCC9000
	253 Move X8, [X8+2600]
	254 Move X0, [X8]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move X0, X22
	260 Move X1, X31
	261 Call Uri.EscapeDataString, X0
	262 Move X8, 0xD02000
	263 Move X8, [X8+4048]
	264 Move X9, 0xCD0000
	265 Move X9, [X9+1824]
	266 Move X2, X0
	267 Move X1, [X8]
	268 Move X3, [X9]
	269 Move X0, X21
	270 Move X4, X31
	271 Call String.Concat, X0, X1, X2, X3
	272 Move X21, X0
	273 Move W8, [X19+64]
	274 Compare W8, 0
	275 JumpIfEqual {347}
	276 Move X8, 0xCC7000
	277 Move X8, [X8+2512]
	278 Move X0, [X8]
	279 Move W1, 4
	280 Call 0x1C17D6C
	281 Move X22, X0
	282 Compare X0, 0
	283 JumpIfEqual {579}
	284 Compare X21, 0
	285 JumpIfEqual {292}
	286 Move X8, [X22]
	287 Move X1, [X8+64]
	288 Move X0, X21
	289 Call 0x1C17E00
	290 Compare X0, 0
	291 JumpIfEqual {598}
	292 Move W8, [X22+24]
	293 Compare W8, 0
	294 JumpIfEqual {581}
	295 Move [X22+32], X21
	296 Move X21, 0xD02000
	297 Move X21, [X21+4064]
	298 Move X0, [X21]
	299 Compare X0, 0
	300 JumpIfEqual {307}
	301 Move X8, [X22]
	302 Move X1, [X8+64]
	303 Call 0x1C17E00
	304 Compare X0, 0
	305 JumpIfEqual {601}
	306 Move W8, [X22+24]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X8, [X21]
	309 Move X9, 0xCC8000
	310 Move [X22+40], X8
	311 Move X8, [X19+64]
	312 Move X9, [X9+1144]
	313 Move [X31+16], X8
	314 Move X0, [X9]
	315 Add X1, X31, 16
	316 Call 0x1C17E04
	317 Move X21, X0
	318 Compare X0, 0
	319 JumpIfEqual {326}
	320 Move X8, [X22]
	321 Move X1, [X8+64]
	322 Move X0, X21
	323 Call 0x1C17E00
	324 Compare X0, 0
	325 JumpIfEqual {604}
	326 Move W8, [X22+24]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move [X22+48], X21
	329 Move X21, 0xCD0000
	330 Move X21, [X21+1824]
	331 Move X0, [X21]
	332 Compare X0, 0
	333 JumpIfEqual {340}
	334 Move X8, [X22]
	335 Move X1, [X8+64]
	336 Call 0x1C17E00
	337 Compare X0, 0
	338 JumpIfEqual {607}
	339 Move W8, [X22+24]
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move X8, [X21]
	342 Move [X22+56], X8
	343 Move X0, X22
	344 Move X1, X31
	345 Call String.Concat, X0
	346 Move X21, X0
	347 Move X0, X19
	348 Add X0, X0, 72
	349 Move W8, [X0]
	350 Compare W8, 0
	351 JumpIfEqual {371}
	352 Move X8, 0xD02000
	353 Move X8, [X8+2096]
	354 Move X1, [X8]
	355 Call Nullable`1<Boolean>.ToString, X0
	356 Compare X0, 0
	357 JumpIfEqual {584}
	358 Move X1, X31
	359 Call String.ToLower, X0
	360 Move X8, 0xD02000
	361 Move X8, [X8+4040]
	362 Move X9, 0xCD0000
	363 Move X9, [X9+1824]
	364 Move X2, X0
	365 Move X1, [X8]
	366 Move X3, [X9]
	367 Move X0, X21
	368 Move X4, X31
	369 Call String.Concat, X0, X1, X2, X3
	370 Move X21, X0
	371 Compare X24, 0
	372 JumpIfEqual {566}
	373 Move X0, [X24+32]
	374 Compare X0, 0
	375 JumpIfEqual {567}
	376 Move X1, X31
	377 Call Uri.get_AbsolutePath, X0
	378 Move X8, 0xCD0000
	379 Move X8, [X8+2264]
	380 Move X22, X0
	381 Move X0, [X8]
	382 Move W1, 1
	383 Call 0x1C17D6C
	384 Move X1, X0
	385 Compare X1, 0
	386 JumpIfEqual {568}
	387 Move W8, [X1+24]
	388 Compare W8, 0
	389 JumpIfEqual {569}
	390 Move W8, 47
	391 NotImplemented "Instruction STRH not yet implemented."
	392 Compare X22, 0
	393 JumpIfEqual {570}
	394 Move X0, X22
	395 Move X2, X31
	396 Call String.TrimEnd, X0, X1
	397 Move X1, X20
	398 Move X2, X31
	399 Call String.Concat, X0, X1
	400 Move X8, 0xCD0000
	401 Move X8, [X8+928]
	402 Move X22, X0
	403 Move X23, [X24+32]
	404 Move X0, [X8]
	405 Call 0x1C17F10
	406 Move X20, X0
	407 Move X1, X23
	408 Move X2, X31
	409 Call UriBuilder..ctor, X0, X1
	410 Compare X20, 0
	411 JumpIfEqual {571}
	412 Move X0, X20
	413 Move X1, X22
	414 Move X2, X31
	415 Call UriBuilder.set_Path, X0, X1
	416 Move X0, X20
	417 Move X1, X21
	418 Move X2, X31
	419 Call UriBuilder.set_Query, X0, X1
	420 Move X0, X20
	421 Move X1, X31
	422 Call UriBuilder.get_Uri, X0
	423 Move X8, 0xCF0000
	424 Move X9, 0xCC8000
	425 Move X8, [X8+1232]
	426 Move X9, [X9+1744]
	427 Move X20, X0
	428 Move X21, [X8]
	429 Move X0, [X9]
	430 Call 0x1C17F10
	431 Move X8, 0xCC8000
	432 Move X8, [X8+1728]
	433 Move X22, X0
	434 Move X1, [X8]
	435 Call Dictionary`2<Object, Object>..ctor, X0
	436 Move X8, 0xD02000
	437 Move X8, [X8+2008]
	438 Move X1, [X19+88]
	439 Move X0, [X8]
	440 Move X2, X31
	441 Call String.Concat, X0, X1
	442 Compare X22, 0
	443 JumpIfEqual {572}
	444 Move X8, 0xD02000
	445 Move X8, [X8+2000]
	446 Move X9, 0xCC8000
	447 Move X9, [X9+2064]
	448 Move X2, X0
	449 Move X1, [X8]
	450 Move X3, [X9]
	451 Move X0, X22
	452 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	453 Move X23, [X24+16]
	454 Compare X23, 0
	455 JumpIfEqual {573}
	456 Move X10, 0xD02000
	457 Move X10, [X10+1976]
	458 Move X8, [X23]
	459 Move W25, [X24+24]
	460 Move X26, [X19+96]
	461 Move X24, [X19+104]
	462 Move X1, [X10]
	463 NotImplemented "Instruction LDRH not yet implemented."
	464 Compare X9, 0
	465 JumpIfEqual {472}
	466 Move X10, [X8+176]
	467 Add X10, X10, 8
	468 NotImplemented "Instruction LDUR not yet implemented."
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Subtract X9, X9, 1
	471 Add X10, X10, 16
	472 Move W2, 3
	473 Move X0, X23
	474 Call 0x1C5D788
	475 Move X8, [X19+112]
	476 Move TEMP, 0
	477 Not TEMP
	478 Move W9, TEMP
	479 Move [X31+24], X8
	480 Move [X19+112], X31
	481 Move [X19], W9
	482 Move W9, [X10]
	483 Add W9, W9, 3
	484 Add X8, X8, W9
	485 Add X0, X8, 312
	486 Move X8, [X0]
	487 Move X9, [X0+8]
	488 Move X0, X23
	489 Move X1, X21
	490 Move X2, X20
	491 Move X3, X22
	492 Move X4, X31
	493 Move W5, W25
	494 Move X6, X26
	495 Move X7, X24
	496 Move [X31], X9
	497 NotImplemented "Instruction BLR not yet implemented."
	498 Compare X0, 0
	499 JumpIfEqual {574}
	500 Move X8, 0xCCA000
	501 Move X8, [X8+504]
	502 Move X1, [X8]
	503 Call Task`1<Object>.GetAwaiter, X0
	504 Move X8, 0xCCA000
	505 Move X8, [X8+496]
	506 Move [X31+24], X0
	507 Move X1, [X8]
	508 Add X0, X31, 24
	509 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	510 Move TEMP, X0
	511 And TEMP, TEMP, 1
	512 Compare TEMP, 1
	513 JumpIfNotEqual {539}
	514 Move X8, 0xCCA000
	515 Move X8, [X8+480]
	516 Add X0, X31, 24
	517 Move X1, [X8]
	518 Call TaskAwaiter`1<Object>.GetResult, X0
	519 Move X8, 0xD02000
	520 Move X8, [X8+4032]
	521 Move X1, [X8]
	522 Call JsonParser.FromJson, X0
	523 Move TEMP, 1
	524 Not TEMP
	525 Move W8, TEMP
	526 Move [X19+8], W8
	527 Move X20, X0
	528 Move X0, [X27]
	529 Move X21, 0xD02000
	530 Move W8, [X0+224]
	531 Move X21, [X21+4024]
	532 Compare W8, 0
	533 JumpIfNotEqual {535}
	534 Call 0x1C17DFC
	535 Move X2, [X21]
	536 Move X0, X19
	537 Move X1, X20
	538 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	539 Move [X19], W31
	540 Move X8, [X31+24]
	541 Move [X19+112], X8
	542 Move X0, [X27]
	543 Move W8, [X0+224]
	544 Compare W8, 0
	545 JumpIfNotEqual {547}
	546 Call 0x1C17DFC
	547 Move X8, 0xD02000
	548 Move X8, [X8+4016]
	549 Add X0, X19, 8
	550 Move X3, [X8]
	551 Add X1, X31, 24
	552 Move X2, X19
	553 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	554 Move X20, [X31+96]
	555 Move X19, [X31+104]
	556 Move X22, [X31+80]
	557 Move X21, [X31+88]
	558 Move X24, [X31+64]
	559 Move X23, [X31+72]
	560 Move X26, [X31+48]
	561 Move X25, [X31+56]
	562 Move X30, [X31+32]
	563 Move X27, [X31+40]
	564 Add X31, X31, 112
	565 Return 
	566 Call 0x1C17F20
	567 Call 0x1C17F20
	568 Call 0x1C17F20
	569 Call 0x1C17F28
	570 Call 0x1C17F20
	571 Call 0x1C17F20
	572 Call 0x1C17F20
	573 Call 0x1C17F20
	574 Call 0x1C17F20
	575 Call 0x1C17F20
	576 Call 0x1C17F28
	577 Call 0x1C17F28
	578 Call 0x1C17F28
	579 Call 0x1C17F20
	580 Call 0x1C17F28
	581 Call 0x1C17F28
	582 Call 0x1C17F28
	583 Call 0x1C17F28
	584 Call 0x1C17F20
	585 Call 0x1C17F28
	586 Call 0x1C17F44
	587 Move X1, X31
	588 Call 0x1C17DEC
	589 Call 0x1C17F44
	590 Move X1, X31
	591 Call 0x1C17DEC
	592 Call 0x1C17F44
	593 Move X1, X31
	594 Call 0x1C17DEC
	595 Call 0x1C17F44
	596 Move X1, X31
	597 Call 0x1C17DEC
	598 Call 0x1C17F44
	599 Move X1, X31
	600 Call 0x1C17DEC
	601 Call 0x1C17F44
	602 Move X1, X31
	603 Call 0x1C17DEC
	604 Call 0x1C17F44
	605 Move X1, X31
	606 Call 0x1C17DEC
	607 Call 0x1C17F44
	608 Move X1, X31
	609 Call 0x1C17DEC
	610 Move X20, X0
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Move X0, X20
	613 Call 0x3EB2AD0
	614 Move X20, X0
	615 Move X0, 0xCC7000
	616 Move X0, [X0+2000]
	617 Call 0x1C17D08
	618 Move X8, [X20]
	619 Move X1, [X8]
	620 Call 0x1C18270
	621 Move TEMP, X0
	622 And TEMP, TEMP, 1
	623 Compare TEMP, 1
	624 JumpIfNotEqual {645}
	625 Move X20, [X20]
	626 Call 0x3EB2AE0
	627 Move TEMP, 1
	628 Not TEMP
	629 Move W8, TEMP
	630 Move [X19+8], W8
	631 Move X0, 0xD02000
	632 Move X0, [X0+1160]
	633 Call 0x1C17D08
	634 Move W8, [X0+224]
	635 Compare W8, 0
	636 JumpIfNotEqual {638}
	637 Call 0x1C17DFC
	638 Move X0, 0xD02000
	639 Move X0, [X0+4072]
	640 Call 0x1C17D08
	641 Move X2, X0
	642 Move X0, X19
	643 Move X1, X20
	644 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	645 Move W0, 8
	646 Call 0x3EB2AF0
	647 Move X8, [X20]
	648 Move [X0], X8
	649 Move X1, 0xA88000
	650 Add X1, X1, 3672
	651 Move X2, X31
	652 Call 0x3EB2B00
	653 Move X20, X0
	654 Call 0x3EB2AE0
	655 Move X0, X20
	656 Call 0x1D2D690
	657 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342DE54 CBZ X0, 0x342E14C
	0x0342DE58 MOV X1, X31
	0x0342DE5C BL 0x361B448
	0x0342DE60 ADRP X8, 0xCCF000
	0x0342DE64 LDR X8, [X8 + 0x8D8]
	0x0342DE68 MOV X22, X0
	0x0342DE6C LDR X0, [X8]
	0x0342DE70 MOVZ W1, 0x1
	0x0342DE74 BL 0x1C16D6C
	0x0342DE78 MOV X1, X0
	0x0342DE7C CBZ X1, 0x342E150
	0x0342DE80 LDR W8, [X1 + 0x18]
	0x0342DE84 CBZ W8, 0x342E154
	0x0342DE88 MOVZ W8, 0x2F
	0x0342DE8C STRH W8, [X1 + 0x20]
	0x0342DE90 CBZ X22, 0x342E158
	0x0342DE94 MOV X0, X22
	0x0342DE98 MOV X2, X31
	0x0342DE9C BL 0x322BC58
	0x0342DEA0 LDR X1, [X31 + 0x10]
	0x0342DEA4 MOV X2, X31
	0x0342DEA8 BL 0x321B938
	0x0342DEAC ADRP X8, 0xCCF000
	0x0342DEB0 LDR X23, [X25 + 0x20]
	0x0342DEB4 LDR X8, [X8 + 0x3A0]
	0x0342DEB8 MOV X22, X0
	0x0342DEBC LDR X0, [X8]
	0x0342DEC0 BL 0x1C16F10
	0x0342DEC4 MOV X20, X0
	0x0342DEC8 MOV X1, X23
	0x0342DECC MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFB1000
	007 Move X21, 0xD02000
	008 Move W8, [X22+1618]
	009 Move X21, [X21+1160]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD02000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move X0, 0xD02000
	020 Move X0, [X0+1160]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1618], W8
	024 Move X0, [X21]
	025 Move X21, 0xD02000
	026 Move W8, [X0+224]
	027 Move X21, [X21+4080]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

