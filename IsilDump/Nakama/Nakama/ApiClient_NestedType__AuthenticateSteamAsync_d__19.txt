Type: Nakama.ApiClient/<AuthenticateSteamAsync>d__19

Method: System.Void MoveNext()

Disassembly:
	0x0341D610 MOV X21, X0
	0x0341D614 B 0x341D6C4
	0x0341D618 B 0x341D630
	0x0341D61C B 0x341D630
	0x0341D620 B 0x341D630
	0x0341D624 MOV X21, X28
	0x0341D628 B 0x341D630
	0x0341D62C B 0x341D630
	0x0341D630 CMP W1, 0x1
	0x0341D634 B.NE 0x341D64C
	0x0341D638 BL 0x3EB1AD0
	0x0341D63C LDR X23, [X0]
	0x0341D640 BL 0x3EB1AE0
	0x0341D644 MOV W20, W31
	0x0341D648 B 0x341D218
	0x0341D64C MOV X21, X0
	0x0341D650 MOV X20, X1
	0x0341D654 MOV X23, X31
	0x0341D658 TBZ X24, 0x1F, 0x341D6C0
	0x0341D65C CBZ X22, 0x341D6C0
	0x0341D660 ADRP X10, 0xCD6000
	0x0341D664 LDR X8, [X22]
	0x0341D668 LDR X10, [X10 + 0xE00]
	0x0341D66C LDRH W9, [X8 + 0x12E]
	0x0341D670 LDR X1, [X10]
	0x0341D674 CBZ X9, 0x341D698
	0x0341D678 LDR X10, [X8 + 0xB0]
	0x0341D67C ADD X10, X10, 0x8
	0x0341D680 LDUR X11, [X10 - 0x8]
	0x0341D684 CMP X11, X1
	0x0341D688 B.EQ 0x341D6A8
	0x0341D68C SUBS X9, X9, 0x1
	0x0341D690 ADD X10, X10, 0x10
	0x0341D694 B.NE 0x341D680
	0x0341D698 MOV X0, X22
	0x0341D69C MOV W2, W31
	0x0341D6A0 BL 0x1C5C788
	0x0341D6A4 B 0x341D6B4
	0x0341D6A8 LDRSW X9, [X10]
	0x0341D6AC ADD X8, X8, X9, 0x4, LSL
	0x0341D6B0 ADD X0, X8, 0x138
	0x0341D6B4 LDP X8, X1, [X0]
	0x0341D6B8 MOV X0, X22
	0x0341D6BC BLR X8
	0x0341D6C0 CBNZ X23, 0x341D750
	0x0341D6C4 CMP W20, 0x1
	0x0341D6C8 B.NE 0x341D770
	0x0341D6CC MOV X0, X21
	0x0341D6D0 BL 0x3EB1AD0
	0x0341D6D4 MOV X20, X0
	0x0341D6D8 ADRP X0, 0xCD6000
	0x0341D6DC LDR X0, [X0 + 0x7D0]
	0x0341D6E0 BL 0x1C16D08
	0x0341D6E4 LDR X8, [X20]
	0x0341D6E8 LDR X1, [X8]
	0x0341D6EC BL 0x1C17270
	0x0341D6F0 TBZ X0, 0x0, 0x341D730
	0x0341D6F4 LDR X20, [X20]
	0x0341D6F8 BL 0x3EB1AE0
	0x0341D6FC MOVN W8, 0x1
	0x0341D700 STR W8, [X19], #0x8
	0x0341D704 ADRP X0, 0xCD9000
	0x0341D708 LDR X0, [X0 + 0x280]
	0x0341D70C BL 0x1C16D08
	0x0341D710 LDR W8, [X0 + 0xE0]
	0x0341D714 CBNZ W8, 0x341D71C
	0x0341D718 BL 0x1C16DFC
	0x0341D71C MOV X0, X19
	0x0341D720 MOV X1, X20
	0x0341D724 MOV X2, X31
	0x0341D728 BL 0x32C4908
	0x0341D72C B 0x341D500
	0x0341D730 MOVZ W0, 0x8
	0x0341D734 BL 0x3EB1AF0
	0x0341D738 LDR X8, [X20]
	0x0341D73C STR X8, [X0]
	0x0341D740 ADRP X1, 0xA97000
	0x0341D744 ADD X1, X1, 0xE58
	0x0341D748 MOV X2, X31
	0x0341D74C BL 0x3EB1B00
	0x0341D750 MOV X0, X23
	0x0341D754 BL 0x1C16F18
	0x0341D758 MOV X20, X1
	0x0341D75C MOV X21, X0
	0x0341D760 TBNZ X24, 0x1F, 0x341D65C
	0x0341D764 B 0x341D6C0
	0x0341D768 MOV X21, X0
	0x0341D76C BL 0x3EB1AE0
	0x0341D770 MOV X0, X21
	0x0341D774 BL 0x1D2C690
	0x0341D778 BL 0x1990590
	0x0341D77C STR X30, [X31 - 0x30]!
	0x0341D780 STP X22, X21, [X31 + 0x10]
	0x0341D784 STP X20, X19, [X31 + 0x20]
	0x0341D788 ADRP X21, 0xFC0000
	0x0341D78C ADRP X22, 0xCD9000
	0x0341D790 LDRB W8, [X21 + 0x60E]
	0x0341D794 LDR X22, [X22 + 0x280]
	0x0341D798 MOV X19, X1
	0x0341D79C MOV X20, X0
	0x0341D7A0 TBNZ X8, 0x0, 0x341D7B8
	0x0341D7A4 ADRP X0, 0xCD9000
	0x0341D7A8 LDR X0, [X0 + 0x280]
	0x0341D7AC BL 0x1C16CF4
	0x0341D7B0 MOVZ W8, 0x1
	0x0341D7B4 STRB W8, [X21 + 0x60E]
	0x0341D7B8 LDR X0, [X22]
	0x0341D7BC LDR W8, [X0 + 0xE0]
	0x0341D7C0 CBNZ W8, 0x341D7C8
	0x0341D7C4 BL 0x1C16DFC
	0x0341D7C8 ADD X0, X20, 0x8
	0x0341D7CC MOV X1, X19
	0x0341D7D0 LDP X20, X19, [X31 + 0x20]
	0x0341D7D4 LDP X22, X21, [X31 + 0x10]
	0x0341D7D8 MOV X2, X31
	0x0341D7DC LDR X30, [X31], #0x30
	0x0341D7E0 B 0x32C477C
	0x0341D7E4 SUB X31, X31, 0x90
	0x0341D7E8 STP X29, X30, [X31 + 0x30]
	0x0341D7EC STP X28, X27, [X31 + 0x40]
	0x0341D7F0 STP X26, X25, [X31 + 0x50]
	0x0341D7F4 STP X24, X23, [X31 + 0x60]
	0x0341D7F8 STP X22, X21, [X31 + 0x70]
	0x0341D7FC STP X20, X19, [X31 + 0x80]
	0x0341D800 ADRP X20, 0xFC0000
	0x0341D804 LDRB W8, [X20 + 0x60F]
	0x0341D808 MOV X19, X0
	0x0341D80C TBNZ X8, 0x0, 0x341D944
	0x0341D810 ADRP X0, 0xD11000
	0x0341D814 LDR X0, [X0 + 0xB98]
	0x0341D818 BL 0x1C16CF4
	0x0341D81C ADRP X0, 0xCD9000
	0x0341D820 LDR X0, [X0 + 0x280]
	0x0341D824 BL 0x1C16CF4
	0x0341D828 ADRP X0, 0xCDF000
	0x0341D82C LDR X0, [X0 + 0x8D8]
	0x0341D830 BL 0x1C16CF4
	0x0341D834 ADRP X0, 0xCD7000
	0x0341D838 LDR X0, [X0 + 0x810]
	0x0341D83C BL 0x1C16CF4
	0x0341D840 ADRP X0, 0xCD7000
	0x0341D844 LDR X0, [X0 + 0x6C0]
	0x0341D848 BL 0x1C16CF4
	0x0341D84C ADRP X0, 0xCD7000
	0x0341D850 LDR X0, [X0 + 0x6D0]
	0x0341D854 BL 0x1C16CF4
	0x0341D858 ADRP X0, 0xCD6000
	0x0341D85C LDR X0, [X0 + 0xE00]
	0x0341D860 BL 0x1C16CF4
	0x0341D864 ADRP X0, 0xCD6000
	0x0341D868 LDR X0, [X0 + 0xF70]
	0x0341D86C BL 0x1C16CF4
	0x0341D870 ADRP X0, 0xCD6000
	0x0341D874 LDR X0, [X0 + 0xF78]
	0x0341D878 BL 0x1C16CF4
	0x0341D87C ADRP X0, 0xCD6000
	0x0341D880 LDR X0, [X0 + 0xE18]
	0x0341D884 BL 0x1C16CF4
	0x0341D888 ADRP X0, 0xD11000
	0x0341D88C LDR X0, [X0 + 0x7B8]
	0x0341D890 BL 0x1C16CF4
	0x0341D894 ADRP X0, 0xCD6000
	0x0341D898 LDR X0, [X0 + 0xAC8]
	0x0341D89C BL 0x1C16CF4
	0x0341D8A0 ADRP X0, 0xCD9000
	0x0341D8A4 LDR X0, [X0 + 0x1E0]
	0x0341D8A8 BL 0x1C16CF4
	0x0341D8AC ADRP X0, 0xCD9000
	0x0341D8B0 LDR X0, [X0 + 0x1F0]
	0x0341D8B4 BL 0x1C16CF4
	0x0341D8B8 ADRP X0, 0xCD9000
	0x0341D8BC LDR X0, [X0 + 0x1F8]
	0x0341D8C0 BL 0x1C16CF4
	0x0341D8C4 ADRP X0, 0xCDF000
	0x0341D8C8 LDR X0, [X0 + 0x3A0]
	0x0341D8CC BL 0x1C16CF4
	0x0341D8D0 ADRP X0, 0xCD8000
	0x0341D8D4 LDR X0, [X0 + 0xA28]
	0x0341D8D8 BL 0x1C16CF4
	0x0341D8DC ADRP X0, 0xCFF000
	0x0341D8E0 LDR X0, [X0 + 0x4D8]
	0x0341D8E4 BL 0x1C16CF4
	0x0341D8E8 ADRP X0, 0xD11000
	0x0341D8EC LDR X0, [X0 + 0x7C0]
	0x0341D8F0 BL 0x1C16CF4
	0x0341D8F4 ADRP X0, 0xD11000
	0x0341D8F8 LDR X0, [X0 + 0x7C8]
	0x0341D8FC BL 0x1C16CF4
	0x0341D900 ADRP X0, 0xCDF000
	0x0341D904 LDR X0, [X0 + 0x720]
	0x0341D908 BL 0x1C16CF4
	0x0341D90C ADRP X0, 0xD11000
	0x0341D910 LDR X0, [X0 + 0x7D0]
	0x0341D914 BL 0x1C16CF4
	0x0341D918 ADRP X0, 0xD11000
	0x0341D91C LDR X0, [X0 + 0xBA0]
	0x0341D920 BL 0x1C16CF4
	0x0341D924 ADRP X0, 0xD11000
	0x0341D928 LDR X0, [X0 + 0x7D8]
	0x0341D92C BL 0x1C16CF4
	0x0341D930 ADRP X0, 0xCD6000
	0x0341D934 LDR X0, [X0 + 0x988]
	0x0341D938 BL 0x1C16CF4
	0x0341D93C MOVZ W8, 0x1
	0x0341D940 STRB W8, [X20 + 0x60F]
	0x0341D944 STR X31, [X31 + 0x28]
	0x0341D948 ADRP X27, 0xCD9000
	0x0341D94C LDR W26, [X19]
	0x0341D950 LDR X27, [X27 + 0x280]
	0x0341D954 CBZ W26, 0x341D9E0
	0x0341D958 ADRP X8, 0xD11000
	0x0341D95C ADRP X9, 0xCD6000
	0x0341D960 LDR X8, [X8 + 0xBA0]
	0x0341D964 LDR X9, [X9 + 0x988]
	0x0341D968 LDR X20, [X19 + 0x30]
	0x0341D96C LDR X21, [X19 + 0x20]
	0x0341D970 LDR X22, [X8]
	0x0341D974 LDR X24, [X9]
	0x0341D978 CBNZ X21, 0x341D998
	0x0341D97C ADRP X8, 0xCD6000
	0x0341D980 LDR X8, [X8 + 0xAC8]
	0x0341D984 LDR X0, [X8]
	0x0341D988 MOV W1, W31
	0x0341D98C BL 0x1C16D6C
	0x0341D990 MOV X21, X0
	0x0341D994 CBZ X0, 0x341E094
	0x0341D998 ADRP X10, 0xCD6000
	0x0341D99C LDR X8, [X21]
	0x0341D9A0 LDR X10, [X10 + 0xF70]
	0x0341D9A4 LDRH W9, [X8 + 0x12E]
	0x0341D9A8 LDR X1, [X10]
	0x0341D9AC CBZ X9, 0x341D9D0
	0x0341D9B0 LDR X10, [X8 + 0xB0]
	0x0341D9B4 ADD X10, X10, 0x8
	0x0341D9B8 LDUR X11, [X10 - 0x8]
	0x0341D9BC CMP X11, X1
	0x0341D9C0 B.EQ 0x341D9F8
	0x0341D9C4 SUBS X9, X9, 0x1
	0x0341D9C8 ADD X10, X10, 0x10
	0x0341D9CC B.NE 0x341D9B8
	0x0341D9D0 MOV X0, X21
	0x0341D9D4 MOV W2, W31
	0x0341D9D8 BL 0x1C5C788
	0x0341D9DC B 0x341DA04
	0x0341D9E0 LDR X8, [X19 + 0x50]
	0x0341D9E4 MOVN W9, 0x0
	0x0341D9E8 STR X8, [X31 + 0x28]
	0x0341D9EC STR X31, [X19 + 0x50]
	0x0341D9F0 STR W9, [X19]
	0x0341D9F4 B 0x341DFC4
	0x0341D9F8 LDRSW X9, [X10]
	0x0341D9FC ADD X8, X8, X9, 0x4, LSL
	0x0341DA00 ADD X0, X8, 0x138
	0x0341DA04 LDP X8, X1, [X0]
	0x0341DA08 MOV X0, X21
	0x0341DA0C BLR X8
	0x0341DA10 STP X22, X20, [X31 + 0x18]
	0x0341DA14 ADRP X28, 0xCD6000
	0x0341DA18 ADRP X29, 0xCD6000
	0x0341DA1C ADRP X27, 0xCD8000
	0x0341DA20 ADRP X25, 0xD11000
	0x0341DA24 ADRP X20, 0xCDF000
	0x0341DA28 LDR X28, [X28 + 0xE18]
	0x0341DA2C LDR X29, [X29 + 0xF78]
	0x0341DA30 LDR X27, [X27 + 0xA28]
	0x0341DA34 LDR X25, [X25 + 0x7C0]
	0x0341DA38 LDR X20, [X20 + 0x720]
	0x0341DA3C MOV X23, X0
	0x0341DA40 MOV X0, X24
	0x0341DA44 CBZ X23, 0x341E058
	0x0341DA48 LDR X8, [X23]
	0x0341DA4C LDR X1, [X28]
	0x0341DA50 MOV X21, X0
	0x0341DA54 LDRH W9, [X8 + 0x12E]
	0x0341DA58 CBZ X9, 0x341DA7C
	0x0341DA5C LDR X10, [X8 + 0xB0]
	0x0341DA60 ADD X10, X10, 0x8
	0x0341DA64 LDUR X11, [X10 - 0x8]
	0x0341DA68 CMP X11, X1
	0x0341DA6C B.EQ 0x341DA8C
	0x0341DA70 SUBS X9, X9, 0x1
	0x0341DA74 ADD X10, X10, 0x10
	0x0341DA78 B.NE 0x341DA64
	0x0341DA7C MOV X0, X23
	0x0341DA80 MOV W2, W31
	0x0341DA84 BL 0x1C5C788
	0x0341DA88 B 0x341DA98
	0x0341DA8C LDRSW X9, [X10]
	0x0341DA90 ADD X8, X8, X9, 0x4, LSL
	0x0341DA94 ADD X0, X8, 0x138
	0x0341DA98 LDP X8, X1, [X0]
	0x0341DA9C MOV X0, X23
	0x0341DAA0 BLR X8
	0x0341DAA4 TBZ X0, 0x0, 0x341DB3C
	0x0341DAA8 LDR X8, [X23]
	0x0341DAAC LDR X1, [X29]
	0x0341DAB0 LDRH W9, [X8 + 0x12E]
	0x0341DAB4 CBZ X9, 0x341DAD8
	0x0341DAB8 LDR X10, [X8 + 0xB0]
	0x0341DABC ADD X10, X10, 0x8
	0x0341DAC0 LDUR X11, [X10 - 0x8]
	0x0341DAC4 CMP X11, X1
	0x0341DAC8 B.EQ 0x341DAE8
	0x0341DACC SUBS X9, X9, 0x1
	0x0341DAD0 ADD X10, X10, 0x10
	0x0341DAD4 B.NE 0x341DAC0
	0x0341DAD8 MOV X0, X23
	0x0341DADC MOV W2, W31
	0x0341DAE0 BL 0x1C5C788
	0x0341DAE4 B 0x341DAF4
	0x0341DAE8 LDRSW X9, [X10]
	0x0341DAEC ADD X8, X8, X9, 0x4, LSL
	0x0341DAF0 ADD X0, X8, 0x138
	0x0341DAF4 LDP X8, X1, [X0]
	0x0341DAF8 MOV X0, X23
	0x0341DAFC BLR X8
	0x0341DB00 MOV X22, X0
	0x0341DB04 LDR X0, [X27]
	0x0341DB08 LDR W8, [X0 + 0xE0]
	0x0341DB0C CBNZ W8, 0x341DB14
	0x0341DB10 BL 0x1C16DFC
	0x0341DB14 MOV X0, X22
	0x0341DB18 MOV X1, X31
	0x0341DB1C BL 0x3624D20
	0x0341DB20 LDR X1, [X25]
	0x0341DB24 LDR X3, [X20]
	0x0341DB28 MOV X2, X0
	0x0341DB2C MOV X0, X21
	0x0341DB30 MOV X4, X31
	0x0341DB34 BL 0x32277C4
	0x0341DB38 B 0x341DA44
	0x0341DB3C MOV X24, X31
	0x0341DB40 MOVZ W22, 0x6
	0x0341DB44 TBZ X26, 0x1F, 0x341DBAC
	0x0341DB48 CBZ X23, 0x341DBAC
	0x0341DB4C ADRP X10, 0xCD6000
	0x0341DB50 LDR X8, [X23]
	0x0341DB54 LDR X10, [X10 + 0xE00]
	0x0341DB58 LDRH W9, [X8 + 0x12E]
	0x0341DB5C LDR X1, [X10]
	0x0341DB60 CBZ X9, 0x341DB84
	0x0341DB64 LDR X10, [X8 + 0xB0]
	0x0341DB68 ADD X10, X10, 0x8
	0x0341DB6C LDUR X11, [X10 - 0x8]
	0x0341DB70 CMP X11, X1
	0x0341DB74 B.EQ 0x341DB94
	0x0341DB78 SUBS X9, X9, 0x1
	0x0341DB7C ADD X10, X10, 0x10
	0x0341DB80 B.NE 0x341DB6C
	0x0341DB84 MOV X0, X23
	0x0341DB88 MOV W2, W31
	0x0341DB8C BL 0x1C5C788
	0x0341DB90 B 0x341DBA0
	0x0341DB94 LDRSW X9, [X10]
	0x0341DB98 ADD X8, X8, X9, 0x4, LSL
	0x0341DB9C ADD X0, X8, 0x138
	0x0341DBA0 LDP X8, X1, [X0]
	0x0341DBA4 MOV X0, X23
	0x0341DBA8 BLR X8
	0x0341DBAC CBNZ X24, 0x341E060
	0x0341DBB0 CMP W22, 0x6
	0x0341DBB4 B.EQ 0x341DBBC
	0x0341DBB8 CBNZ W22, 0x341E038
	0x0341DBBC LDR X22, [X19 + 0x28]
	0x0341DBC0 CBNZ X22, 0x341DBE0
	0x0341DBC4 ADRP X8, 0xCD6000
	0x0341DBC8 LDR X8, [X8 + 0xAC8]
	0x0341DBCC LDR X0, [X8]
	0x0341DBD0 MOV W1, W31
	0x0341DBD4 BL 0x1C16D6C
	0x0341DBD8 MOV X22, X0
	0x0341DBDC CBZ X0, 0x341E098
	0x0341DBE0 LDR X8, [X22]
	0x0341DBE4 ADRP X10, 0xCD6000
	0x0341DBE8 LDRH W9, [X8 + 0x12E]
	0x0341DBEC LDR X10, [X10 + 0xF70]
	0x0341DBF0 LDR X1, [X10]
	0x0341DBF4 CBZ X9, 0x341DC18
	0x0341DBF8 LDR X10, [X8 + 0xB0]
	0x0341DBFC ADD X10, X10, 0x8
	0x0341DC00 LDUR X11, [X10 - 0x8]
	0x0341DC04 CMP X11, X1
	0x0341DC08 B.EQ 0x341DC28
	0x0341DC0C SUBS X9, X9, 0x1
	0x0341DC10 ADD X10, X10, 0x10
	0x0341DC14 B.NE 0x341DC00
	0x0341DC18 MOV X0, X22
	0x0341DC1C MOV W2, W31
	0x0341DC20 BL 0x1C5C788
	0x0341DC24 B 0x341DC34
	0x0341DC28 LDRSW X9, [X10]
	0x0341DC2C ADD X8, X8, X9, 0x4, LSL
	0x0341DC30 ADD X0, X8, 0x138
	0x0341DC34 LDP X8, X1, [X0]
	0x0341DC38 MOV X0, X22
	0x0341DC3C BLR X8
	0x0341DC40 ADRP X25, 0xD11000
	0x0341DC44 LDR X25, [X25 + 0x7C8]
	0x0341DC48 MOV X24, X0
	0x0341DC4C MOV X0, X21
	0x0341DC50 CBZ X24, 0x341E05C
	0x0341DC54 LDR X8, [X24]
	0x0341DC58 LDR X1, [X28]
	0x0341DC5C MOV X23, X0
	0x0341DC60 LDRH W9, [X8 + 0x12E]
	0x0341DC64 CBZ X9, 0x341DC88
	0x0341DC68 LDR X10, [X8 + 0xB0]
	0x0341DC6C ADD X10, X10, 0x8
	0x0341DC70 LDUR X11, [X10 - 0x8]
	0x0341DC74 CMP X11, X1
	0x0341DC78 B.EQ 0x341DC98
	0x0341DC7C SUBS X9, X9, 0x1
	0x0341DC80 ADD X10, X10, 0x10
	0x0341DC84 B.NE 0x341DC70
	0x0341DC88 MOV X0, X24
	0x0341DC8C MOV W2, W31
	0x0341DC90 BL 0x1C5C788
	0x0341DC94 B 0x341DCA4
	0x0341DC98 LDRSW X9, [X10]
	0x0341DC9C ADD X8, X8, X9, 0x4, LSL
	0x0341DCA0 ADD X0, X8, 0x138
	0x0341DCA4 LDP X8, X1, [X0]
	0x0341DCA8 MOV X0, X24
	0x0341DCAC BLR X8
	0x0341DCB0 TBZ X0, 0x0, 0x341DD48
	0x0341DCB4 LDR X8, [X24]
	0x0341DCB8 LDR X1, [X29]
	0x0341DCBC LDRH W9, [X8 + 0x12E]
	0x0341DCC0 CBZ X9, 0x341DCE4
	0x0341DCC4 LDR X10, [X8 + 0xB0]
	0x0341DCC8 ADD X10, X10, 0x8
	0x0341DCCC LDUR X11, [X10 - 0x8]
	0x0341DCD0 CMP X11, X1
	0x0341DCD4 B.EQ 0x341DCF4
	0x0341DCD8 SUBS X9, X9, 0x1
	0x0341DCDC ADD X10, X10, 0x10
	0x0341DCE0 B.NE 0x341DCCC
	0x0341DCE4 MOV X0, X24
	0x0341DCE8 MOV W2, W31
	0x0341DCEC BL 0x1C5C788
	0x0341DCF0 B 0x341DD00
	0x0341DCF4 LDRSW X9, [X10]
	0x0341DCF8 ADD X8, X8, X9, 0x4, LSL
	0x0341DCFC ADD X0, X8, 0x138
	0x0341DD00 LDP X8, X1, [X0]
	0x0341DD04 MOV X0, X24
	0x0341DD08 BLR X8
	0x0341DD0C MOV X22, X0
	0x0341DD10 LDR X0, [X27]
	0x0341DD14 LDR W8, [X0 + 0xE0]
	0x0341DD18 CBNZ W8, 0x341DD20
	0x0341DD1C BL 0x1C16DFC
	0x0341DD20 MOV X0, X22
	0x0341DD24 MOV X1, X31
	0x0341DD28 BL 0x3624D20
	0x0341DD2C LDR X1, [X25]
	0x0341DD30 LDR X3, [X20]
	0x0341DD34 MOV X2, X0
	0x0341DD38 MOV X0, X23
	0x0341DD3C MOV X4, X31
	0x0341DD40 BL 0x32277C4
	0x0341DD44 B 0x341DC50
	0x0341DD48 MOV X21, X31
	0x0341DD4C MOVZ W20, 0xA
	0x0341DD50 TBZ X26, 0x1F, 0x341DDB8
	0x0341DD54 CBZ X24, 0x341DDB8
	0x0341DD58 ADRP X10, 0xCD6000
	0x0341DD5C LDR X8, [X24]
	0x0341DD60 LDR X10, [X10 + 0xE00]
	0x0341DD64 LDRH W9, [X8 + 0x12E]
	0x0341DD68 LDR X1, [X10]
	0x0341DD6C CBZ X9, 0x341DD90
	0x0341DD70 LDR X10, [X8 + 0xB0]
	0x0341DD74 ADD X10, X10, 0x8
	0x0341DD78 LDUR X11, [X10 - 0x8]
	0x0341DD7C CMP X11, X1
	0x0341DD80 B.EQ 0x341DDA0
	0x0341DD84 SUBS X9, X9, 0x1
	0x0341DD88 ADD X10, X10, 0x10
	0x0341DD8C B.NE 0x341DD78
	0x0341DD90 MOV X0, X24
	0x0341DD94 MOV W2, W31
	0x0341DD98 BL 0x1C5C788
	0x0341DD9C B 0x341DDAC
	0x0341DDA0 LDRSW X9, [X10]
	0x0341DDA4 ADD X8, X8, X9, 0x4, LSL
	0x0341DDA8 ADD X0, X8, 0x138
	0x0341DDAC LDP X8, X1, [X0]
	0x0341DDB0 MOV X0, X24
	0x0341DDB4 BLR X8
	0x0341DDB8 CBNZ X21, 0x341E068
	0x0341DDBC CMP W20, 0xA
	0x0341DDC0 B.EQ 0x341DDC8
	0x0341DDC4 CBNZ W20, 0x341E038
	0x0341DDC8 LDR X25, [X31 + 0x20]
	0x0341DDCC CBZ X25, 0x341E070
	0x0341DDD0 ADRP X27, 0xCD9000
	0x0341DDD4 LDR X0, [X25 + 0x20]
	0x0341DDD8 LDR X27, [X27 + 0x280]
	0x0341DDDC CBZ X0, 0x341E074
	0x0341DDE0 MOV X1, X31
	0x0341DDE4 BL 0x361B448
	0x0341DDE8 ADRP X8, 0xCDF000
	0x0341DDEC LDR X8, [X8 + 0x8D8]
	0x0341DDF0 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFC1000
	014 Move W8, [X20+1547]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {103}
	020 Move X0, 0xD12000
	021 Move X0, [X0+2920]
	022 Call 0x1C17CF4
	023 Move X0, 0xD12000
	024 Move X0, [X0+2080]
	025 Call 0x1C17CF4
	026 Move X0, 0xD12000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE0000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE0000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD8000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD8000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD8000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xD12000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0xD12000
	048 Move X0, [X0+2088]
	049 Call 0x1C17CF4
	050 Move X0, 0xD12000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDB000
	054 Move X0, [X0+3056]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDA000
	057 Move X0, [X0+480]
	058 Call 0x1C17CF4
	059 Move X0, 0xCDA000
	060 Move X0, [X0+496]
	061 Call 0x1C17CF4
	062 Move X0, 0xCDA000
	063 Move X0, [X0+504]
	064 Call 0x1C17CF4
	065 Move X0, 0xCE0000
	066 Move X0, [X0+928]
	067 Call 0x1C17CF4
	068 Move X0, 0xCD9000
	069 Move X0, [X0+2600]
	070 Call 0x1C17CF4
	071 Move X0, 0xD12000
	072 Move X0, [X0+2112]
	073 Call 0x1C17CF4
	074 Move X0, 0xD00000
	075 Move X0, [X0+1240]
	076 Call 0x1C17CF4
	077 Move X0, 0xD12000
	078 Move X0, [X0+2248]
	079 Call 0x1C17CF4
	080 Move X0, 0xD12000
	081 Move X0, [X0+2928]
	082 Call 0x1C17CF4
	083 Move X0, 0xD12000
	084 Move X0, [X0+2120]
	085 Call 0x1C17CF4
	086 Move X0, 0xCE0000
	087 Move X0, [X0+2440]
	088 Call 0x1C17CF4
	089 Move X0, 0xCE0000
	090 Move X0, [X0+1824]
	091 Call 0x1C17CF4
	092 Move X0, 0xD12000
	093 Move X0, [X0+2000]
	094 Call 0x1C17CF4
	095 Move X0, 0xD12000
	096 Move X0, [X0+2128]
	097 Call 0x1C17CF4
	098 Move X0, 0xCD7000
	099 Move X0, [X0+2440]
	100 Call 0x1C17CF4
	101 Move W8, 1
	102 Move [X20+1547], W8
	103 Move [X31+24], X31
	104 Move X28, 0xD12000
	105 Move W8, [X19]
	106 Move X28, [X28+800]
	107 Compare W8, 0
	108 JumpIfEqual {345}
	109 Move X8, [X19+32]
	110 Compare X8, 0
	111 JumpIfEqual {437}
	112 Move X8, 0xD12000
	113 Move X9, 0xCD7000
	114 Move X8, [X8+2928]
	115 Move X9, [X9+2440]
	116 Move X0, X19
	117 Move X25, [X19+64]
	118 Move X21, [X8]
	119 Move X20, [X9]
	120 Add X0, X0, 40
	121 Move W8, [X0]
	122 Compare W8, 0
	123 JumpIfEqual {143}
	124 Move X8, 0xD12000
	125 Move X8, [X8+2096]
	126 Move X1, [X8]
	127 Call Nullable`1<Boolean>.ToString, X0
	128 Compare X0, 0
	129 JumpIfEqual {464}
	130 Move X1, X31
	131 Call String.ToLower, X0
	132 Move X8, 0xD12000
	133 Move X8, [X8+2112]
	134 Move X9, 0xCE0000
	135 Move X9, [X9+1824]
	136 Move X2, X0
	137 Move X1, [X8]
	138 Move X3, [X9]
	139 Move X0, X20
	140 Move X4, X31
	141 Call String.Concat, X0, X1, X2, X3
	142 Move X20, X0
	143 Move X22, [X19+48]
	144 Compare X22, 0
	145 JumpIfEqual {167}
	146 Move X8, 0xCD9000
	147 Move X8, [X8+2600]
	148 Move X0, [X8]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X0, X22
	154 Move X1, X31
	155 Call Uri.EscapeDataString, X0
	156 Move X8, 0xD12000
	157 Move X8, [X8+2120]
	158 Move X9, 0xCE0000
	159 Move X9, [X9+1824]
	160 Move X2, X0
	161 Move X1, [X8]
	162 Move X3, [X9]
	163 Move X0, X20
	164 Move X4, X31
	165 Call String.Concat, X0, X1, X2, X3
	166 Move X20, X0
	167 Move X0, X19
	168 Add X0, X0, 56
	169 Move W8, [X0]
	170 Compare W8, 0
	171 JumpIfEqual {191}
	172 Move X8, 0xD12000
	173 Move X8, [X8+2096]
	174 Move X1, [X8]
	175 Call Nullable`1<Boolean>.ToString, X0
	176 Compare X0, 0
	177 JumpIfEqual {465}
	178 Move X1, X31
	179 Call String.ToLower, X0
	180 Move X8, 0xD12000
	181 Move X8, [X8+2248]
	182 Move X9, 0xCE0000
	183 Move X9, [X9+1824]
	184 Move X2, X0
	185 Move X1, [X8]
	186 Move X3, [X9]
	187 Move X0, X20
	188 Move X4, X31
	189 Call String.Concat, X0, X1, X2, X3
	190 Move X20, X0
	191 Compare X25, 0
	192 JumpIfEqual {455}
	193 Move X0, [X25+32]
	194 Compare X0, 0
	195 JumpIfEqual {456}
	196 Move X1, X31
	197 Call Uri.get_AbsolutePath, X0
	198 Move X8, 0xCE0000
	199 Move X8, [X8+2264]
	200 Move X22, X0
	201 Move X0, [X8]
	202 Move W1, 1
	203 Call 0x1C17D6C
	204 Move X1, X0
	205 Compare X1, 0
	206 JumpIfEqual {457}
	207 Move W8, [X1+24]
	208 Compare W8, 0
	209 JumpIfEqual {458}
	210 Move W8, 47
	211 NotImplemented "Instruction STRH not yet implemented."
	212 Compare X22, 0
	213 JumpIfEqual {459}
	214 Move X0, X22
	215 Move X2, X31
	216 Call String.TrimEnd, X0, X1
	217 Move X1, X21
	218 Move X2, X31
	219 Call String.Concat, X0, X1
	220 Move X8, 0xCE0000
	221 Move X8, [X8+928]
	222 Move X22, X0
	223 Move X23, [X25+32]
	224 Move X0, [X8]
	225 Call 0x1C17F10
	226 Move X21, X0
	227 Move X1, X23
	228 Move X2, X31
	229 Call UriBuilder..ctor, X0, X1
	230 Compare X21, 0
	231 JumpIfEqual {460}
	232 Move X0, X21
	233 Move X1, X22
	234 Move X2, X31
	235 Call UriBuilder.set_Path, X0, X1
	236 Move X0, X21
	237 Move X1, X20
	238 Move X2, X31
	239 Call UriBuilder.set_Query, X0, X1
	240 Move X0, X21
	241 Move X1, X31
	242 Call UriBuilder.get_Uri, X0
	243 Move X8, 0xD00000
	244 Move X9, 0xCD8000
	245 Move X8, [X8+1240]
	246 Move X9, [X9+1744]
	247 Move X20, X0
	248 Move X21, [X8]
	249 Move X0, [X9]
	250 Call 0x1C17F10
	251 Move X8, 0xCD8000
	252 Move X8, [X8+1728]
	253 Move X22, X0
	254 Move X1, [X8]
	255 Call Dictionary`2<Object, Object>..ctor, X0
	256 Move X0, [X19+72]
	257 Move X1, X31
	258 Call String.IsNullOrEmpty, X0
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {309}
	263 Move X0, X31
	264 Call Encoding.get_UTF8
	265 Move X8, 0xCE0000
	266 Move X23, X0
	267 Move X0, [X19+72]
	268 Move X2, [X19+80]
	269 Move X8, [X8+2440]
	270 Move X1, [X8]
	271 Move X3, X31
	272 Call String.Concat, X0, X1, X2
	273 Move X1, X0
	274 Compare X23, 0
	275 JumpIfEqual {466}
	276 Move X8, [X23]
	277 Move X9, [X8+616]
	278 Move X2, [X8+624]
	279 Move X0, X23
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move X8, 0xCE0000
	282 Move X8, [X8+2536]
	283 Move X23, X0
	284 Move X0, [X8]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfNotEqual {289}
	288 Call 0x1C17DFC
	289 Move X0, X23
	290 Move X1, X31
	291 Call Convert.ToBase64String, X0
	292 Move X1, X0
	293 Move X8, 0xD12000
	294 Move X8, [X8+2128]
	295 Move X0, [X8]
	296 Move X2, X31
	297 Call String.Concat, X0, X1
	298 Compare X22, 0
	299 JumpIfEqual {467}
	300 Move X8, 0xD12000
	301 Move X8, [X8+2000]
	302 Move X9, 0xCD8000
	303 Move X9, [X9+2064]
	304 Move X2, X0
	305 Move X1, [X8]
	306 Move X3, [X9]
	307 Move X0, X22
	308 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	309 Move X0, [X19+32]
	310 Move X1, X31
	311 Call JsonWriter.ToJson, X0
	312 Move X23, X0
	313 Move X0, X31
	314 Call Encoding.get_UTF8
	315 Compare X0, 0
	316 JumpIfEqual {461}
	317 Move X8, [X0]
	318 Move X9, [X8+616]
	319 Move X2, [X8+624]
	320 Move X1, X23
	321 NotImplemented "Instruction BLR not yet implemented."
	322 Move X24, [X25+16]
	323 Compare X24, 0
	324 JumpIfEqual {462}
	325 Move X10, 0xD12000
	326 Move X10, [X10+1976]
	327 Move X8, [X24]
	328 Move W26, [X25+24]
	329 Move X27, [X19+88]
	330 Move X25, [X19+96]
	331 Move X1, [X10]
	332 NotImplemented "Instruction LDRH not yet implemented."
	333 Move X23, X0
	334 Compare X9, 0
	335 JumpIfEqual {342}
	336 Move X10, [X8+176]
	337 Add X10, X10, 8
	338 NotImplemented "Instruction LDUR not yet implemented."
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Subtract X9, X9, 1
	341 Add X10, X10, 16
	342 Move W2, 3
	343 Move X0, X24
	344 Call 0x1C5D788
	345 Move X8, [X19+104]
	346 Move TEMP, 0
	347 Not TEMP
	348 Move W9, TEMP
	349 Move [X31+24], X8
	350 Move [X19+104], X31
	351 Move [X19], W9
	352 Move W9, [X10]
	353 Add W9, W9, 3
	354 Add X8, X8, W9
	355 Add X0, X8, 312
	356 Move X8, [X0]
	357 Move X9, [X0+8]
	358 Move X0, X24
	359 Move X1, X21
	360 Move X2, X20
	361 Move X3, X22
	362 Move X4, X23
	363 Move W5, W26
	364 Move X6, X27
	365 Move X7, X25
	366 Move [X31], X9
	367 NotImplemented "Instruction BLR not yet implemented."
	368 Compare X0, 0
	369 JumpIfEqual {463}
	370 Move X8, 0xCDA000
	371 Move X8, [X8+504]
	372 Move X1, [X8]
	373 Call Task`1<Object>.GetAwaiter, X0
	374 Move X8, 0xCDA000
	375 Move X8, [X8+496]
	376 Move [X31+24], X0
	377 Move X1, [X8]
	378 Add X0, X31, 24
	379 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	380 Move TEMP, X0
	381 And TEMP, TEMP, 1
	382 Compare TEMP, 1
	383 JumpIfNotEqual {409}
	384 Move X8, 0xCDA000
	385 Move X8, [X8+480]
	386 Add X0, X31, 24
	387 Move X1, [X8]
	388 Call TaskAwaiter`1<Object>.GetResult, X0
	389 Move X8, 0xD12000
	390 Move X8, [X8+2088]
	391 Move X1, [X8]
	392 Call JsonParser.FromJson, X0
	393 Move TEMP, 1
	394 Not TEMP
	395 Move W8, TEMP
	396 Move [X19+8], W8
	397 Move X20, X0
	398 Move X0, [X28]
	399 Move X21, 0xD12000
	400 Move W8, [X0+224]
	401 Move X21, [X21+2080]
	402 Compare W8, 0
	403 JumpIfNotEqual {405}
	404 Call 0x1C17DFC
	405 Move X2, [X21]
	406 Move X0, X19
	407 Move X1, X20
	408 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	409 Move [X19], W31
	410 Move X8, [X31+24]
	411 Move [X19+104], X8
	412 Move X0, [X28]
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {417}
	416 Call 0x1C17DFC
	417 Move X8, 0xD12000
	418 Move X8, [X8+2920]
	419 Add X0, X19, 8
	420 Move X3, [X8]
	421 Add X1, X31, 24
	422 Move X2, X19
	423 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	424 Move X20, [X31+96]
	425 Move X19, [X31+104]
	426 Move X22, [X31+80]
	427 Move X21, [X31+88]
	428 Move X24, [X31+64]
	429 Move X23, [X31+72]
	430 Move X26, [X31+48]
	431 Move X25, [X31+56]
	432 Move X28, [X31+32]
	433 Move X27, [X31+40]
	434 Move X30, [X31+16]
	435 Add X31, X31, 112
	436 Return 
	437 Move X0, 0xCDF000
	438 Move X0, [X0+1400]
	439 Call 0x1C17D08
	440 Call 0x1C17F10
	441 Move X20, X0
	442 Move X0, 0xD12000
	443 Move X0, [X0+2136]
	444 Call 0x1C17D08
	445 Move X1, X0
	446 Move X0, X20
	447 Move X2, X31
	448 Call ArgumentException..ctor, X0, X1
	449 Move X0, 0xD12000
	450 Move X0, [X0+2936]
	451 Call 0x1C17D08
	452 Move X1, X0
	453 Move X0, X20
	454 Call 0x1C17DEC
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Call 0x1C17F28
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Call 0x1C17F20
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Call 0x1C17F20
	465 Call 0x1C17F20
	466 Call 0x1C17F20
	467 Call 0x1C17F20
	468 Move X20, X0
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move X0, X20
	471 Call 0x3EB2AD0
	472 Move X20, X0
	473 Move X0, 0xCD7000
	474 Move X0, [X0+2000]
	475 Call 0x1C17D08
	476 Move X8, [X20]
	477 Move X1, [X8]
	478 Call 0x1C18270
	479 Move TEMP, X0
	480 And TEMP, TEMP, 1
	481 Compare TEMP, 1
	482 JumpIfNotEqual {503}
	483 Move X20, [X20]
	484 Call 0x3EB2AE0
	485 Move TEMP, 1
	486 Not TEMP
	487 Move W8, TEMP
	488 Move [X19+8], W8
	489 Move X0, 0xD12000
	490 Move X0, [X0+800]
	491 Call 0x1C17D08
	492 Move W8, [X0+224]
	493 Compare W8, 0
	494 JumpIfNotEqual {496}
	495 Call 0x1C17DFC
	496 Move X0, 0xD12000
	497 Move X0, [X0+2152]
	498 Call 0x1C17D08
	499 Move X2, X0
	500 Move X0, X19
	501 Move X1, X20
	502 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	503 Move W0, 8
	504 Call 0x3EB2AF0
	505 Move X8, [X20]
	506 Move [X0], X8
	507 Move X1, 0xA98000
	508 Add X1, X1, 3672
	509 Move X2, X31
	510 Call 0x3EB2B00
	511 Move X20, X0
	512 Call 0x3EB2AE0
	513 Move X0, X20
	514 Call 0x1D2D690
	515 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0341DDF4 LDR X0, [X8]
	0x0341DDF8 MOVZ W1, 0x1
	0x0341DDFC BL 0x1C16D6C
	0x0341DE00 MOV X1, X0
	0x0341DE04 CBZ X1, 0x341E078
	0x0341DE08 LDR W8, [X1 + 0x18]
	0x0341DE0C CBZ W8, 0x341E07C
	0x0341DE10 MOVZ W8, 0x2F
	0x0341DE14 STRH W8, [X1 + 0x20]
	0x0341DE18 CBZ X21, 0x341E080
	0x0341DE1C MOV X0, X21
	0x0341DE20 MOV X2, X31
	0x0341DE24 BL 0x322BC58
	0x0341DE28 LDR X1, [X31 + 0x18]
	0x0341DE2C MOV X2, X31
	0x0341DE30 BL 0x321B938
	0x0341DE34 ADRP X8, 0xCDF000
	0x0341DE38 LDR X22, [X25 + 0x20]
	0x0341DE3C LDR X8, [X8 + 0x3A0]
	0x0341DE40 MOV X21, X0
	0x0341DE44 LDR X0, [X8]
	0x0341DE48 BL 0x1C16F10
	0x0341DE4C MOV X20, X0
	0x0341DE50 MOV X1, X22
	0x0341DE54 MOV X2, X31
	0x0341DE58 BL 0x36281F8
	0x0341DE5C CBZ X20, 0x341E084
	0x0341DE60 MOV X0, X20
	0x0341DE64 MOV X1, X21
	0x0341DE68 MOV X2, X31
	0x0341DE6C BL 0x36288CC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFC1000
	007 Move X21, 0xD12000
	008 Move W8, [X22+1548]
	009 Move X21, [X21+800]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD12000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0xD12000
	020 Move X0, [X0+800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1548], W8
	024 Move X0, [X21]
	025 Move X21, 0xD12000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2160]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

