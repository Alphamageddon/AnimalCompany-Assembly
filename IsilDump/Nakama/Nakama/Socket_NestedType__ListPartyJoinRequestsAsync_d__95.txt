Type: Nakama.Socket/<ListPartyJoinRequestsAsync>d__95

Method: System.Void MoveNext()

Disassembly:
	0x03483320 ADRP X0, 0xCAD000
	0x03483324 LDR X0, [X0 + 0xE88]
	0x03483328 BL 0x1C16CF4
	0x0348332C ADRP X0, 0xCAD000
	0x03483330 LDR X0, [X0 + 0xE90]
	0x03483334 BL 0x1C16CF4
	0x03483338 ADRP X0, 0xCAE000
	0x0348333C LDR X0, [X0 + 0x20]
	0x03483340 BL 0x1C16CF4
	0x03483344 ADRP X0, 0xCAE000
	0x03483348 LDR X0, [X0 + 0x28]
	0x0348334C BL 0x1C16CF4
	0x03483350 ADRP X0, 0xCAE000
	0x03483354 LDR X0, [X0 + 0x30]
	0x03483358 BL 0x1C16CF4
	0x0348335C ADRP X0, 0xCAD000
	0x03483360 LDR X0, [X0 + 0xE98]
	0x03483364 BL 0x1C16CF4
	0x03483368 ADRP X0, 0xCAE000
	0x0348336C LDR X0, [X0 + 0x38]
	0x03483370 BL 0x1C16CF4
	0x03483374 ADRP X0, 0xCAE000
	0x03483378 LDR X0, [X0 + 0x40]
	0x0348337C BL 0x1C16CF4
	0x03483380 ADRP X0, 0xCAE000
	0x03483384 LDR X0, [X0 + 0x48]
	0x03483388 BL 0x1C16CF4
	0x0348338C MOVZ W8, 0x1
	0x03483390 STRB W8, [X20 + 0x8D0]
	0x03483394 STR X31, [X31 + 0x38]
	0x03483398 STRB W31, [X31 + 0x34]
	0x0348339C STP X31, X31, [X31 + 0x20]
	0x034833A0 ADRP X25, 0xCAD000
	0x034833A4 LDR W27, [X19]
	0x034833A8 LDR X25, [X25 + 0xBD8]
	0x034833AC CBZ W27, 0x3483458
	0x034833B0 CMP W27, 0x1
	0x034833B4 B.EQ 0x34833D8
	0x034833B8 CMP W27, 0x2
	0x034833BC B.NE 0x34834D0
	0x034833C0 LDR X8, [X19 + 0x40]
	0x034833C4 MOVN W9, 0x0
	0x034833C8 STR X8, [X31 + 0x20]
	0x034833CC STR X31, [X19 + 0x40]
	0x034833D0 STR W9, [X19]
	0x034833D4 B 0x348343C
	0x034833D8 LDR X8, [X19 + 0x38]
	0x034833DC MOVN W9, 0x0
	0x034833E0 STR X8, [X31 + 0x38]
	0x034833E4 STR X31, [X19 + 0x38]
	0x034833E8 STR W9, [X19]
	0x034833EC ADD X0, X31, 0x38
	0x034833F0 MOV X1, X31
	0x034833F4 BL 0x32C3B4C
	0x034833F8 LDR X8, [X19 + 0x30]
	0x034833FC CBZ X8, 0x34839A8
	0x03483400 LDR X8, [X8 + 0x20]
	0x03483404 CBZ X8, 0x34839AC
	0x03483408 LDR X0, [X8 + 0x10]
	0x0348340C CBZ X0, 0x34839B0
	0x03483410 ADRP X8, 0xCAD000
	0x03483414 LDR X8, [X8 + 0xE98]
	0x03483418 LDR X1, [X8]
	0x0348341C BL 0x269F5D0
	0x03483420 ADRP X8, 0xCAD000
	0x03483424 LDR X8, [X8 + 0xE90]
	0x03483428 STR X0, [X31 + 0x20]
	0x0348342C LDR X1, [X8]
	0x03483430 ADD X0, X31, 0x20
	0x03483434 BL 0x2677430
	0x03483438 TBZ X0, 0x0, 0x34835B0
	0x0348343C ADRP X8, 0xCAD000
	0x03483440 LDR X8, [X8 + 0xE88]
	0x03483444 ADD X0, X31, 0x20
	0x03483448 LDR X1, [X8]
	0x0348344C BL 0x2677474
	0x03483450 MOV X20, X0
	0x03483454 B 0x348347C
	0x03483458 LDR X8, [X19 + 0x38]
	0x0348345C MOVN W9, 0x0
	0x03483460 STR X8, [X31 + 0x38]
	0x03483464 STR X31, [X19 + 0x38]
	0x03483468 STR W9, [X19]
	0x0348346C ADD X0, X31, 0x38
	0x03483470 MOV X1, X31
	0x03483474 BL 0x32C3B4C
	0x03483478 MOV X20, X31
	0x0348347C MOVN W8, 0x1
	0x03483480 STR W8, [X19]
	0x03483484 STR X31, [X19 + 0x30]
	0x03483488 LDR X0, [X25]
	0x0348348C ADRP X21, 0xCAE000
	0x03483490 ADD X19, X19, 0x8
	0x03483494 LDR W8, [X0 + 0xE0]
	0x03483498 LDR X21, [X21 + 0x10]
	0x0348349C CBNZ W8, 0x34834A4
	0x034834A0 BL 0x1C16DFC
	0x034834A4 LDR X2, [X21]
	0x034834A8 MOV X0, X19
	0x034834AC MOV X1, X20
	0x034834B0 BL 0x26322B0
	0x034834B4 LDP X20, X19, [X31 + 0x80]
	0x034834B8 LDP X22, X21, [X31 + 0x70]
	0x034834BC LDP X24, X23, [X31 + 0x60]
	0x034834C0 LDP X26, X25, [X31 + 0x50]
	0x034834C4 LDP X30, X27, [X31 + 0x40]
	0x034834C8 ADD X31, X31, 0x90
	0x034834CC RET
	0x034834D0 ADRP X8, 0xCAE000
	0x034834D4 LDR X26, [X19 + 0x20]
	0x034834D8 LDR X8, [X8 + 0x40]
	0x034834DC LDR X0, [X8]
	0x034834E0 BL 0x1C16F10
	0x034834E4 MOV X20, X0
	0x034834E8 MOV X1, X31
	0x034834EC BL 0x33BDD8C
	0x034834F0 STR X20, [X19 + 0x30]
	0x034834F4 CBZ X20, 0x34839B4
	0x034834F8 LDR X8, [X19 + 0x20]
	0x034834FC STR X8, [X20 + 0x10]
	0x03483500 LDR X0, [X19 + 0x28]
	0x03483504 STR X0, [X20 + 0x18]
	0x03483508 BL 0x3483BE4
	0x0348350C CBZ X26, 0x34839B8
	0x03483510 LDR X21, [X26 + 0xB0]
	0x03483514 MOV X20, X0
	0x03483518 CBZ X21, 0x3483610
	0x0348351C ADRP X8, 0xC70000
	0x03483520 LDR X8, [X8 + 0x9D0]
	0x03483524 LDR X0, [X8]
	0x03483528 MOVZ W1, 0x1
	0x0348352C BL 0x1C16D6C
	0x03483530 MOV X22, X0
	0x03483534 CBZ X0, 0x34839C8
	0x03483538 CBZ X20, 0x3483550
	0x0348353C LDR X8, [X22]
	0x03483540 LDR X1, [X8 + 0x40]
	0x03483544 MOV X0, X20
	0x03483548 BL 0x1C16E00
	0x0348354C CBZ X0, 0x34839F4
	0x03483550 LDR W8, [X22 + 0x18]
	0x03483554 CBZ W8, 0x34839CC
	0x03483558 STR X20, [X22 + 0x20]
	0x0348355C ADRP X9, 0xC73000
	0x03483560 LDR X8, [X21]
	0x03483564 LDR X9, [X9 + 0x1A0]
	0x03483568 ADRP X10, 0xCAE000
	0x0348356C LDR X1, [X9]
	0x03483570 LDR X10, [X10 + 0x48]
	0x03483574 LDRH W9, [X8 + 0x12E]
	0x03483578 LDR X23, [X10]
	0x0348357C CBZ X9, 0x34835A0
	0x03483580 LDR X10, [X8 + 0xB0]
	0x03483584 ADD X10, X10, 0x8
	0x03483588 LDUR X11, [X10 - 0x8]
	0x0348358C CMP X11, X1
	0x03483590 B.EQ 0x34835F0
	0x03483594 SUBS X9, X9, 0x1
	0x03483598 ADD X10, X10, 0x10
	0x0348359C B.NE 0x3483588
	0x034835A0 MOV X0, X21
	0x034835A4 MOV W2, W31
	0x034835A8 BL 0x1C5C788
	0x034835AC B 0x34835FC
	0x034835B0 MOVZ W8, 0x2
	0x034835B4 STR W8, [X19]
	0x034835B8 LDR X8, [X31 + 0x20]
	0x034835BC STR X8, [X19 + 0x40]
	0x034835C0 LDR X0, [X25]
	0x034835C4 LDR W8, [X0 + 0xE0]
	0x034835C8 CBNZ W8, 0x34835D0
	0x034835CC BL 0x1C16DFC
	0x034835D0 ADRP X8, 0xCAE000
	0x034835D4 LDR X8, [X8]
	0x034835D8 ADD X0, X19, 0x8
	0x034835DC LDR X3, [X8]
	0x034835E0 ADD X1, X31, 0x20
	0x034835E4 MOV X2, X19
	0x034835E8 BL 0x1FC2F58
	0x034835EC B 0x34834B4
	0x034835F0 LDRSW X9, [X10]
	0x034835F4 ADD X8, X8, X9, 0x4, LSL
	0x034835F8 ADD X0, X8, 0x138
	0x034835FC LDP X8, X3, [X0]
	0x03483600 MOV X0, X21
	0x03483604 MOV X1, X23
	0x03483608 MOV X2, X22
	0x0348360C BLR X8
	0x03483610 MOV X0, X31
	0x03483614 BL 0x3241948
	0x03483618 CBZ X0, 0x34839BC
	0x0348361C LDR X8, [X0]
	0x03483620 LDR X9, [X8 + 0x268]
	0x03483624 LDR X2, [X8 + 0x270]
	0x03483628 MOV X1, X20
	0x0348362C BLR X9
	0x03483630 ADRP X8, 0xC72000
	0x03483634 LDR X20, [X26 + 0xD0]
	0x03483638 LDR X8, [X8 + 0xA50]
	0x0348363C MOV X23, X0
	0x03483640 LDR X0, [X8]
	0x03483644 BL 0x1C16F10
	0x03483648 MOV X22, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF5B000
	009 Move W8, [X20+2248]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xCAE000
	016 Move X0, [X0+3992]
	017 Call 0x1C17CF4
	018 Move X0, 0xCAE000
	019 Move X0, [X0+4000]
	020 Call 0x1C17CF4
	021 Move X0, 0xCAE000
	022 Move X0, [X0+3352]
	023 Call 0x1C17CF4
	024 Move X0, 0xC71000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xCAE000
	028 Move X0, [X0+4008]
	029 Call 0x1C17CF4
	030 Move X0, 0xCAE000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move X0, 0xCAE000
	034 Move X0, [X0+3728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCAE000
	037 Move X0, [X0+3736]
	038 Call 0x1C17CF4
	039 Move X0, 0xCAE000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0xC75000
	043 Move X0, [X0+272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2248], W8
	047 Move [X31+8], X31
	048 Move X23, 0xCAE000
	049 Move W8, [X19]
	050 Move X23, [X23+3352]
	051 Compare W8, 0
	052 JumpIfEqual {129}
	053 Move X20, [X19+32]
	054 Compare X20, 0
	055 JumpIfEqual {168}
	056 Add X0, X20, 16
	057 Move X1, X31
	058 Call Interlocked.Increment, X0
	059 Move X8, 0xCAE000
	060 Move X8, [X8+3016]
	061 Move W22, W0
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X21, X0
	065 Move X1, X31
	066 Call Object..ctor, X0
	067 Move X8, 0xC71000
	068 Move X8, [X8+1880]
	069 Move [X31+4], W22
	070 Move X0, [X8]
	071 Add X1, X31, 4
	072 Call 0x1C17E04
	073 Move X1, X0
	074 Move X8, 0xC75000
	075 Move X8, [X8+272]
	076 Move X0, [X8]
	077 Move X2, X31
	078 Call String.Format, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {169}
	081 Move X8, 0xCAE000
	082 Move X8, [X8+4008]
	083 Move [X21+16], X0
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X22, X0
	087 Move X1, X31
	088 Call PartyJoinRequestList..ctor, X0
	089 Compare X22, 0
	090 JumpIfEqual {170}
	091 Move X8, [X19+40]
	092 Move [X22+16], X8
	093 Move [X21+336], X22
	094 Move X0, X20
	095 Move X1, X21
	096 Move X2, X31
	097 Call Socket.SendAsync, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {171}
	100 Move X8, 0xCAE000
	101 Move X8, [X8+3736]
	102 Move X1, [X8]
	103 Call Task`1<Object>.GetAwaiter, X0
	104 Move X8, 0xCAE000
	105 Move X8, [X8+3728]
	106 Move [X31+8], X0
	107 Move X1, [X8]
	108 Add X0, X31, 8
	109 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {136}
	114 Move [X19], W31
	115 Move X8, [X31+8]
	116 Move [X19+48], X8
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X8, 0xCAE000
	123 Move X8, [X8+3992]
	124 Add X0, X19, 8
	125 Move X3, [X8]
	126 Add X1, X31, 8
	127 Move X2, X19
	128 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	129 Move X8, [X19+48]
	130 Move TEMP, 0
	131 Not TEMP
	132 Move W9, TEMP
	133 Move [X31+8], X8
	134 Move [X19+48], X31
	135 Move [X19], W9
	136 Move X8, 0xCAE000
	137 Move X8, [X8+3720]
	138 Add X0, X31, 8
	139 Move X1, [X8]
	140 Call TaskAwaiter`1<Object>.GetResult, X0
	141 Compare X0, 0
	142 JumpIfEqual {167}
	143 Move TEMP, 1
	144 Not TEMP
	145 Move W8, TEMP
	146 Move X20, [X0+344]
	147 Move [X19+8], W8
	148 Move X0, [X23]
	149 Move X21, 0xCAE000
	150 Move W8, [X0+224]
	151 Move X21, [X21+4000]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X2, [X21]
	156 Move X0, X19
	157 Move X1, X20
	158 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X30, [X31+16]
	164 Move X23, [X31+24]
	165 Add X31, X31, 64
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Move X20, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X20
	175 Call 0x3EB2AD0
	176 Move X20, X0
	177 Move X0, 0xC71000
	178 Move X0, [X0+2000]
	179 Call 0x1C17D08
	180 Move X8, [X20]
	181 Move X1, [X8]
	182 Call 0x1C18270
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {207}
	187 Move X20, [X20]
	188 Call 0x3EB2AE0
	189 Move TEMP, 1
	190 Not TEMP
	191 Move W8, TEMP
	192 Move [X19+8], W8
	193 Move X0, 0xCAE000
	194 Move X0, [X0+3352]
	195 Call 0x1C17D08
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, 0xCAE000
	201 Move X0, [X0+4016]
	202 Call 0x1C17D08
	203 Move X2, X0
	204 Move X0, X19
	205 Move X1, X20
	206 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	207 Move W0, 8
	208 Call 0x3EB2AF0
	209 Move X8, [X20]
	210 Move [X0], X8
	211 Move X1, 0xA32000
	212 Add X1, X1, 3672
	213 Move X2, X31
	214 Call 0x3EB2B00
	215 Move X20, X0
	216 Call 0x3EB2AE0
	217 Move X0, X20
	218 Call 0x1D2D690
	219 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0348364C MOV X1, X20
	0x03483650 MOV X2, X31
	0x03483654 BL 0x33DFAC0
	0x03483658 LDR X8, [X19 + 0x30]
	0x0348365C CBZ X8, 0x34839C0
	0x03483660 LDR X8, [X8 + 0x18]
	0x03483664 CBZ X8, 0x34839C4
	0x03483668 LDR X0, [X8 + 0x10]
	0x0348366C MOV X1, X31
	0x03483670 BL 0x32277A8
	0x03483674 TBZ X0, 0x0, 0x34836FC
	0x03483678 ADRP X8, 0xC7B000
	0x0348367C LDR X20, [X26 + 0xB8]
	0x03483680 LDR X8, [X8 + 0xE68]
	0x03483684 STP X31, X31, [X31 + 0x8]
	0x03483688 LDR X2, [X8]
	0x0348368C ADD X0, X31, 0x8
	0x03483690 MOV X1, X23
	0x03483694 BL 0x2B87B6C
	0x03483698 CBZ X22, 0x34839D0
	0x0348369C MOV X0, X22
	0x034836A0 MOV X1, X31
	0x034836A4 BL 0x33DFA08
	0x034836A8 CBZ X20, 0x34839D8
	0x034836AC ADRP X9, 0xCAB000
	0x034836B0 LDR X8, [X20]
	0x034836B4 LDR X9, [X9 + 0x9E0]
	0x034836B8 LDP X23, X22, [X31 + 0x8]
	0x034836BC MOV X21, X0
	0x034836C0 LDR X1, [X9]
	0x034836C4 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF5B000
	007 Move X21, 0xCAE000
	008 Move W8, [X22+2249]
	009 Move X21, [X21+3352]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCAE000
	017 Move X0, [X0+4024]
	018 Call 0x1C17CF4
	019 Move X0, 0xCAE000
	020 Move X0, [X0+3352]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2249], W8
	024 Move X0, [X21]
	025 Move X21, 0xCAE000
	026 Move W8, [X0+224]
	027 Move X21, [X21+4024]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

