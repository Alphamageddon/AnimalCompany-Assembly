Type: Nakama.Socket/<SendAsync>d__122

Method: System.Void MoveNext()

Disassembly:
	0x03484268 ADD X0, X31, 0x8
	0x0348426C LDR X1, [X8]
	0x03484270 BL 0x2677474
	0x03484274 CBZ X0, 0x34842C0
	0x03484278 MOVN W8, 0x1
	0x0348427C LDR X20, [X0 + 0x38]
	0x03484280 STR W8, [X19], #0x8
	0x03484284 LDR X0, [X23]
	0x03484288 ADRP X21, 0xCAC000
	0x0348428C LDR W8, [X0 + 0xE0]
	0x03484290 LDR X21, [X21 + 0xFC8]
	0x03484294 CBNZ W8, 0x348429C
	0x03484298 BL 0x1C16DFC
	0x0348429C LDR X2, [X21]
	0x034842A0 MOV X0, X19
	0x034842A4 MOV X1, X20
	0x034842A8 BL 0x26322B0
	0x034842AC LDP X20, X19, [X31 + 0x30]
	0x034842B0 LDP X22, X21, [X31 + 0x20]
	0x034842B4 LDP X30, X23, [X31 + 0x10]
	0x034842B8 ADD X31, X31, 0x40
	0x034842BC RET
	0x034842C0 BL 0x1C16F20
	0x034842C4 BL 0x1C16F20
	0x034842C8 BL 0x1C16F20
	0x034842CC BL 0x1C16F20
	0x034842D0 BL 0x1C16F20
	0x034842D4 B 0x3484300
	0x034842D8 B 0x3484300
	0x034842DC B 0x3484300
	0x034842E0 B 0x3484300
	0x034842E4 B 0x3484300
	0x034842E8 B 0x3484300
	0x034842EC B 0x3484300
	0x034842F0 B 0x3484300
	0x034842F4 B 0x3484300
	0x034842F8 B 0x3484300
	0x034842FC B 0x3484300
	0x03484300 MOV X20, X0
	0x03484304 CMP W1, 0x1
	0x03484308 B.NE 0x34843A4
	0x0348430C MOV X0, X20
	0x03484310 BL 0x3EB1AD0
	0x03484314 MOV X20, X0
	0x03484318 ADRP X0, 0xC6F000
	0x0348431C LDR X0, [X0 + 0x7D0]
	0x03484320 BL 0x1C16D08
	0x03484324 LDR X8, [X20]
	0x03484328 LDR X1, [X8]
	0x0348432C BL 0x1C17270
	0x03484330 TBZ X0, 0x0, 0x348437C
	0x03484334 LDR X20, [X20]
	0x03484338 BL 0x3EB1AE0
	0x0348433C MOVN W8, 0x1
	0x03484340 STR W8, [X19], #0x8
	0x03484344 ADRP X0, 0xCAC000
	0x03484348 LDR X0, [X0 + 0xD40]
	0x0348434C BL 0x1C16D08
	0x03484350 LDR W8, [X0 + 0xE0]
	0x03484354 CBNZ W8, 0x348435C
	0x03484358 BL 0x1C16DFC
	0x0348435C ADRP X0, 0xCAC000
	0x03484360 LDR X0, [X0 + 0xFD8]
	0x03484364 BL 0x1C16D08
	0x03484368 MOV X2, X0
	0x0348436C MOV X0, X19
	0x03484370 MOV X1, X20
	0x03484374 BL 0x26324C8
	0x03484378 B 0x34842AC
	0x0348437C MOVZ W0, 0x8
	0x03484380 BL 0x3EB1AF0
	0x03484384 LDR X8, [X20]
	0x03484388 STR X8, [X0]
	0x0348438C ADRP X1, 0xA30000
	0x03484390 ADD X1, X1, 0xE58
	0x03484394 MOV X2, X31
	0x03484398 BL 0x3EB1B00
	0x0348439C MOV X20, X0
	0x034843A0 BL 0x3EB1AE0
	0x034843A4 MOV X0, X20
	0x034843A8 BL 0x1D2C690
	0x034843AC BL 0x1990590
	0x034843B0 STR X30, [X31 - 0x30]!
	0x034843B4 STP X22, X21, [X31 + 0x10]
	0x034843B8 STP X20, X19, [X31 + 0x20]
	0x034843BC ADRP X22, 0xF59000
	0x034843C0 ADRP X21, 0xCAC000
	0x034843C4 LDRB W8, [X22 + 0x8D5]
	0x034843C8 LDR X21, [X21 + 0xD40]
	0x034843CC MOV X19, X1
	0x034843D0 MOV X20, X0
	0x034843D4 TBNZ X8, 0x0, 0x34843F8
	0x034843D8 ADRP X0, 0xCAC000
	0x034843DC LDR X0, [X0 + 0xFE0]
	0x034843E0 BL 0x1C16CF4
	0x034843E4 ADRP X0, 0xCAC000
	0x034843E8 LDR X0, [X0 + 0xD40]
	0x034843EC BL 0x1C16CF4
	0x034843F0 MOVZ W8, 0x1
	0x034843F4 STRB W8, [X22 + 0x8D5]
	0x034843F8 LDR X0, [X21]
	0x034843FC ADRP X21, 0xCAC000
	0x03484400 LDR W8, [X0 + 0xE0]
	0x03484404 LDR X21, [X21 + 0xFE0]
	0x03484408 CBNZ W8, 0x3484410
	0x0348440C BL 0x1C16DFC
	0x03484410 LDR X2, [X21]
	0x03484414 ADD X0, X20, 0x8
	0x03484418 MOV X1, X19
	0x0348441C LDP X20, X19, [X31 + 0x20]
	0x03484420 LDP X22, X21, [X31 + 0x10]
	0x03484424 LDR X30, [X31], #0x30
	0x03484428 B 0x2632228
	0x0348442C LDR X0, [X0 + 0x10]
	0x03484430 RET
	0x03484434 STR X1, [X0 + 0x10]
	0x03484438 RET
	0x0348443C LDR X0, [X0 + 0x18]
	0x03484440 RET
	0x03484444 STR X1, [X0 + 0x18]
	0x03484448 RET
	0x0348444C STR X30, [X31 - 0x30]!
	0x03484450 STP X22, X21, [X31 + 0x10]
	0x03484454 STP X20, X19, [X31 + 0x20]
	0x03484458 ADRP X22, 0xF59000
	0x0348445C ADRP X20, 0xC6F000
	0x03484460 ADRP X21, 0xC6F000
	0x03484464 LDRB W8, [X22 + 0x8D6]
	0x03484468 LDR X20, [X20 + 0x838]
	0x0348446C LDR X21, [X21 + 0xAC8]
	0x03484470 MOV X19, X0
	0x03484474 TBNZ X8, 0x0, 0x34844BC
	0x03484478 ADRP X0, 0xC6F000
	0x0348447C LDR X0, [X0 + 0xAC8]
	0x03484480 BL 0x1C16CF4
	0x03484484 ADRP X0, 0xCAD000
	0x03484488 LDR X0, [X0 + 0x80]
	0x0348448C BL 0x1C16CF4
	0x03484490 ADRP X0, 0xCAD000
	0x03484494 LDR X0, [X0 + 0x88]
	0x03484498 BL 0x1C16CF4
	0x0348449C ADRP X0, 0xC6F000
	0x034844A0 LDR X0, [X0 + 0x838]
	0x034844A4 BL 0x1C16CF4
	0x034844A8 ADRP X0, 0xCAC000
	0x034844AC LDR X0, [X0 + 0x968]
	0x034844B0 BL 0x1C16CF4
	0x034844B4 MOVZ W8, 0x1
	0x034844B8 STRB W8, [X22 + 0x8D6]
	0x034844BC LDR X1, [X19 + 0x10]
	0x034844C0 LDR X0, [X20]
	0x034844C4 MOV X2, X31
	0x034844C8 BL 0x32280D8
	0x034844CC LDR X8, [X20]
	0x034844D0 LDR X1, [X19 + 0x18]
	0x034844D4 MOV X20, X0
	0x034844D8 MOV X2, X31
	0x034844DC MOV X0, X8
	0x034844E0 BL 0x32280D8
	0x034844E4 LDR X8, [X21]
	0x034844E8 MOV X19, X0
	0x034844EC MOVZ W1, 0x5
	0x034844F0 MOV X0, X8
	0x034844F4 BL 0x1C16D6C
	0x034844F8 CBZ X0, 0x3484574
	0x034844FC LDR W8, [X0 + 0x18]
	0x03484500 CBZ W8, 0x3484570
	0x03484504 ADRP X9, 0xCAD000
	0x03484508 LDR X9, [X9 + 0x80]
	0x0348450C CMP W8, 0x1
	0x03484510 LDR X9, [X9]
	0x03484514 STR X9, [X0 + 0x20]
	0x03484518 B.EQ 0x3484570
	0x0348451C CMP W8, 0x2
	0x03484520 STR X20, [X0 + 0x28]
	0x03484524 B.LS 0x3484570
	0x03484528 ADRP X9, 0xCAD000
	0x0348452C LDR X9, [X9 + 0x88]
	0x03484530 CMP W8, 0x3
	0x03484534 LDR X9, [X9]
	0x03484538 STR X9, [X0 + 0x30]
	0x0348453C B.EQ 0x3484570
	0x03484540 CMP W8, 0x4
	0x03484544 STR X19, [X0 + 0x38]
	0x03484548 B.LS 0x3484570
	0x0348454C ADRP X8, 0xCAC000
	0x03484550 LDR X8, [X8 + 0x968]
	0x03484554 LDP X20, X19, [X31 + 0x20]
	0x03484558 LDP X22, X21, [X31 + 0x10]
	0x0348455C MOV X1, X31
	0x03484560 LDR X8, [X8]
	0x03484564 STR X8, [X0 + 0x40]
	0x03484568 LDR X30, [X31], #0x30
	0x0348456C B 0x32278CC
	0x03484570 BL 0x1C16F28
	0x03484574 BL 0x1C16F20
	0x03484578 LDR X0, [X0 + 0x10]
	0x0348457C RET
	0x03484580 STR X1, [X0 + 0x10]
	0x03484584 RET
	0x03484588 STP X30, X23, [X31 - 0x30]!
	0x0348458C STP X22, X21, [X31 + 0x10]
	0x03484590 STP X20, X19, [X31 + 0x20]
	0x03484594 ADRP X23, 0xF59000
	0x03484598 ADRP X22, 0xC6F000
	0x0348459C ADRP X20, 0xCAD000
	0x034845A0 ADRP X21, 0xCAC000
	0x034845A4 LDRB W8, [X23 + 0x8D7]
	0x034845A8 LDR X22, [X22 + 0x838]
	0x034845AC LDR X20, [X20 + 0x90]
	0x034845B0 LDR X21, [X21 + 0x968]
	0x034845B4 MOV X19, X0
	0x034845B8 TBNZ X8, 0x0, 0x34845E8
	0x034845BC ADRP X0, 0xC6F000
	0x034845C0 LDR X0, [X0 + 0x838]
	0x034845C4 BL 0x1C16CF4
	0x034845C8 ADRP X0, 0xCAD000
	0x034845CC LDR X0, [X0 + 0x90]
	0x034845D0 BL 0x1C16CF4
	0x034845D4 ADRP X0, 0xCAC000
	0x034845D8 LDR X0, [X0 + 0x968]
	0x034845DC BL 0x1C16CF4
	0x034845E0 MOVZ W8, 0x1
	0x034845E4 STRB W8, [X23 + 0x8D7]
	0x034845E8 LDR X1, [X19 + 0x10]
	0x034845EC LDR X0, [X22]
	0x034845F0 MOV X2, X31
	0x034845F4 BL 0x32280D8
	0x034845F8 LDR X8, [X20]
	0x034845FC LDR X2, [X21]
	0x03484600 LDP X20, X19, [X31 + 0x20]
	0x03484604 LDP X22, X21, [X31 + 0x10]
	0x03484608 MOV X1, X0
	0x0348460C MOV X0, X8
	0x03484610 MOV X3, X31
	0x03484614 LDP X30, X23, [X31], #0x30
	0x03484618 B 0x32274B8
	0x0348461C MOV X1, X31
	0x03484620 B 0x33BDD8C
	0x03484624 LDR X0, [X0 + 0x10]
	0x03484628 RET
	0x0348462C STR X1, [X0 + 0x10]
	0x03484630 RET
	0x03484634 STR X30, [X31 - 0x30]!
	0x03484638 STP X22, X21, [X31 + 0x10]
	0x0348463C STP X20, X19, [X31 + 0x20]
	0x03484640 ADRP X22, 0xF59000
	0x03484644 ADRP X20, 0xCAD000
	0x03484648 ADRP X21, 0xCAB000
	0x0348464C LDRB W8, [X22 + 0x8D8]
	0x03484650 LDR X20, [X20 + 0x98]
	0x03484654 LDR X21, [X21 + 0x5B8]
	0x03484658 MOV X19, X0
	0x0348465C TBNZ X8, 0x0, 0x3484680
	0x03484660 ADRP X0, 0xCAD000
	0x03484664 LDR X0, [X0 + 0x98]
	0x03484668 BL 0x1C16CF4
	0x0348466C ADRP X0, 0xCAB000
	0x03484670 LDR X0, [X0 + 0x5B8]
	0x03484674 BL 0x1C16CF4
	0x03484678 MOVZ W8, 0x1
	0x0348467C STRB W8, [X22 + 0x8D8]
	0x03484680 LDR X1, [X19 + 0x10]
	0x03484684 LDR X0, [X20]
	0x03484688 LDR X2, [X21]
	0x0348468C LDP X20, X19, [X31 + 0x20]
	0x03484690 LDP X22, X21, [X31 + 0x10]
	0x03484694 MOV X3, X31
	0x03484698 LDR X30, [X31], #0x30
	0x0348469C B 0x32274B8
	0x034846A0 MOV X1, X31
	0x034846A4 B 0x33BDD8C
	0x034846A8 LDR X0, [X0 + 0x10]
	0x034846AC RET
	0x034846B0 STR X1, [X0 + 0x10]
	0x034846B4 RET
	0x034846B8 LDR X0, [X0 + 0x18]
	0x034846BC RET
	0x034846C0 STR X1, [X0 + 0x18]
	0x034846C4 RET
	0x034846C8 LDR X0, [X0 + 0x20]
	0x034846CC RET
	0x034846D0 STR X1, [X0 + 0x20]
	0x034846D4 RET
	0x034846D8 LDR X0, [X0 + 0x28]
	0x034846DC RET
	0x034846E0 STR X1, [X0 + 0x28]
	0x034846E4 RET
	0x034846E8 STP X30, X21, [X31 - 0x20]!
	0x034846EC STP X20, X19, [X31 + 0x10]
	0x034846F0 ADRP X20, 0xF59000
	0x034846F4 ADRP X21, 0xC6F000
	0x034846F8 LDRB W8, [X20 + 0x8D9]
	0x034846FC LDR X21, [X21 + 0xAC8]
	0x03484700 MOV X19, X0
	0x03484704 TBNZ X8, 0x0, 0x3484758
	0x03484708 ADRP X0, 0xC6F000
	0x0348470C LDR X0, [X0 + 0xAC8]
	0x03484710 BL 0x1C16CF4
	0x03484714 ADRP X0, 0xCAD000
	0x03484718 LDR X0, [X0 + 0xA0]
	0x0348471C BL 0x1C16CF4
	0x03484720 ADRP X0, 0xCAD000
	0x03484724 LDR X0, [X0 + 0xA8]
	0x03484728 BL 0x1C16CF4
	0x0348472C ADRP X0, 0xCAB000
	0x03484730 LDR X0, [X0 + 0x5B8]
	0x03484734 BL 0x1C16CF4
	0x03484738 ADRP X0, 0xCAD000
	0x0348473C LDR X0, [X0 + 0xB0]
	0x03484740 BL 0x1C16CF4
	0x03484744 ADRP X0, 0xCAD000
	0x03484748 LDR X0, [X0 + 0xB8]
	0x0348474C BL 0x1C16CF4
	0x03484750 MOVZ W8, 0x1
	0x03484754 STRB W8, [X20 + 0x8D9]
	0x03484758 LDR X0, [X21]
	0x0348475C MOVZ W1, 0x9
	0x03484760 BL 0x1C16D6C
	0x03484764 CBZ X0, 0x3484834
	0x03484768 LDR W8, [X0 + 0x18]
	0x0348476C CBZ W8, 0x3484830
	0x03484770 ADRP X9, 0xCAD000
	0x03484774 LDR X9, [X9 + 0xA0]
	0x03484778 CMP W8, 0x1
	0x0348477C LDR X9, [X9]
	0x03484780 STR X9, [X0 + 0x20]
	0x03484784 B.EQ 0x3484830
	0x03484788 LDR X9, [X19 + 0x10]
	0x0348478C CMP W8, 0x2
	0x03484790 STR X9, [X0 + 0x28]
	0x03484794 B.LS 0x3484830
	0x03484798 ADRP X9, 0xCAD000
	0x0348479C LDR X9, [X9 + 0xA8]
	0x034847A0 CMP W8, 0x3
	0x034847A4 LDR X9, [X9]
	0x034847A8 STR X9, [X0 + 0x30]
	0x034847AC B.EQ 0x3484830
	0x034847B0 LDR X9, [X19 + 0x18]
	0x034847B4 CMP W8, 0x4
	0x034847B8 STR X9, [X0 + 0x38]
	0x034847BC B.LS 0x3484830
	0x034847C0 ADRP X9, 0xCAD000
	0x034847C4 LDR X9, [X9 + 0xB8]
	0x034847C8 CMP W8, 0x5
	0x034847CC LDR X9, [X9]
	0x034847D0 STR X9, [X0 + 0x40]
	0x034847D4 B.EQ 0x3484830
	0x034847D8 LDR X9, [X19 + 0x20]
	0x034847DC CMP W8, 0x6
	0x034847E0 STR X9, [X0 + 0x48]
	0x034847E4 B.LS 0x3484830
	0x034847E8 ADRP X9, 0xCAD000
	0x034847EC LDR X9, [X9 + 0xB0]
	0x034847F0 CMP W8, 0x7
	0x034847F4 LDR X9, [X9]
	0x034847F8 STR X9, [X0 + 0x50]
	0x034847FC B.EQ 0x3484830
	0x03484800 LDR X9, [X19 + 0x28]
	0x03484804 CMP W8, 0x8
	0x03484808 STR X9, [X0 + 0x58]
	0x0348480C B.LS 0x3484830
	0x03484810 ADRP X8, 0xCAB000
	0x03484814 LDR X8, [X8 + 0x5B8]
	0x03484818 LDP X20, X19, [X31 + 0x10]
	0x0348481C MOV X1, X31
	0x03484820 LDR X8, [X8]
	0x03484824 STR X8, [X0 + 0x60]
	0x03484828 LDP X30, X21, [X31], #0x20
	0x0348482C B 0x32278CC
	0x03484830 BL 0x1C16F28
	0x03484834 BL 0x1C16F20
	0x03484838 MOV X1, X31
	0x0348483C B 0x33BDD8C
	0x03484840 STR X30, [X31 - 0x30]!
	0x03484844 STP X22, X21, [X31 + 0x10]
	0x03484848 STP X20, X19, [X31 + 0x20]
	0x0348484C LDR X8, [X2 + 0x8]
	0x03484850 STP X1, X2, [X0 + 0x20]
	0x03484854 MOV X19, X0
	0x03484858 MOV X20, X2
	0x0348485C STR X8, [X0 + 0x10]
	0x03484860 LDRB W22, [X2 + 0x52]
	0x03484864 STR X0, [X0 + 0x40]
	0x03484868 MOV X0, X2
	0x0348486C MOV X21, X1
	0x03484870 BL 0x1C16D84
	0x03484874 TBZ X0, 0x0, 0x348488C
	0x03484878 CMP W22, 0x1
	0x0348487C B.NE 0x3484894
	0x03484880 ADRP X8, 0xFFFFFFFFFE73A000
	0x03484884 ADD X8, X8, 0x334
	0x03484888 B 0x3484908
	0x0348488C CBZ W22, 0x34848A8
	0x03484890 CBZ X21, 0x3484928
	0x03484894 LDR X8, [X19 + 0x10]
	0x03484898 LDR X9, [X19 + 0x20]
	0x0348489C STR X8, [X19 + 0x18]
	0x034848A0 STR X9, [X19 + 0x40]
	0x034848A4 B 0x348490C
	0x034848A8 LDRB W8, [X19 + 0x70]
	0x034848AC CBZ W8, 0x34848D8
	0x034848B0 MOV X0, X20
	0x034848B4 BL 0x1C16D7C
	0x034848B8 MOV W21, W0
	0x034848BC MOV X0, X20
	0x034848C0 BL 0x1C17238
	0x034848C4 TBZ X21, 0x0, 0x34848E4
	0x034848C8 TBZ X0, 0x0, 0x34848F4
	0x034848CC ADRP X8, 0xFFFFFFFFFE73A000
	0x034848D0 ADD X8, X8, 0x430
	0x034848D4 B 0x3484908
	0x034848D8 ADRP X8, 0xFFFFFFFFFE73A000
	0x034848DC ADD X8, X8, 0x314
	0x034848E0 B 0x3484908
	0x034848E4 TBZ X0, 0x0, 0x3484900
	0x034848E8 ADRP X8, 0xFFFFFFFFFE73A000
	0x034848EC ADD X8, X8, 0x370
	0x034848F0 B 0x3484908
	0x034848F4 ADRP X8, 0xFFFFFFFFFE73A000
	0x034848F8 ADD X8, X8, 0x3F4
	0x034848FC B 0x3484908
	0x03484900 ADRP X8, 0xFFFFFFFFFE73A000
	0x03484904 ADD X8, X8, 0x344
	0x03484908 STR X8, [X19 + 0x18]
	0x0348490C ADRP X8, 0xFFFFFFFFFE73A000
	0x03484910 ADD X8, X8, 0x2C0
	0x03484914 STR X8, [X19 + 0x38]
	0x03484918 LDP X20, X19, [X31 + 0x20]
	0x0348491C LDP X22, X21, [X31 + 0x10]
	0x03484920 LDR X30, [X31], #0x30
	0x03484924 RET
	0x03484928 ADRP X1, 0xFFFFFFFFFD697000
	0x0348492C ADD X1, X1, 0xEE3
	0x03484930 MOV X0, X31
	0x03484934 BL 0x1C16F3C
	0x03484938 MOV X1, X31
	0x0348493C BL 0x1C16DEC
	0x03484940 LDR X8, [X0 + 0x40]
	0x03484944 LDR X3, [X0 + 0x18]
	0x03484948 LDR X2, [X0 + 0x28]
	0x0348494C MOV X0, X8
	0x03484950 BR X3
	0x03484954 SUB X31, X31, 0x20
	0x03484958 STP X31, X30, [X31 + 0x8]
	0x0348495C STR X1, [X31]
	0x03484960 ADD X1, X31, 0x0
	0x03484964 BL 0x1C16CB0
	0x03484968 LDR X30, [X31 + 0x10]
	0x0348496C ADD X31, X31, 0x20
	0x03484970 RET
	0x03484974 STR X30, [X31 - 0x10]!
	0x03484978 MOV X0, X1
	0x0348497C MOV X1, X31
	0x03484980 BL 0x1C16CB4
	0x03484984 CBZ X0, 0x3484998
	0x03484988 BL 0x1C16E08
	0x0348498C LDRB W0, [X0]
	0x03484990 LDR X30, [X31], #0x10
	0x03484994 RET
	0x03484998 BL 0x1C16F20
	0x0348499C STR X30, [X31 - 0x30]!
	0x034849A0 STP X22, X21, [X31 + 0x10]
	0x034849A4 STP X20, X19, [X31 + 0x20]
	0x034849A8 ADRP X21, 0xF59000
	0x034849AC LDRB W8, [X21 + 0x8DA]
	0x034849B0 MOV X19, X1
	0x034849B4 MOV X20, X0
	0x034849B8 TBNZ X8, 0x0, 0x34849D0
	0x034849BC ADRP X0, 0xC70000
	0x034849C0 LDR X0, [X0 + 0xE70]
	0x034849C4 BL 0x1C16CF4
	0x034849C8 MOVZ W8, 0x1
	0x034849CC STRB W8, [X21 + 0x8DA]
	0x034849D0 ADRP X22, 0xC70000
	0x034849D4 LDR X21, [X20 + 0x10]!
	0x034849D8 LDR X22, [X22 + 0xE70]
	0x034849DC MOV X0, X21
	0x034849E0 MOV X1, X19
	0x034849E4 MOV X2, X31
	0x034849E8 BL 0x33C0DE4
	0x034849EC MOV X8, X0
	0x034849F0 CBZ X0, 0x3484A04
	0x034849F4 LDR X1, [X22]
	0x034849F8 LDR X9, [X8]
	0x034849FC CMP X9, X1
	0x03484A00 B.NE 0x3484A30
	0x03484A04 MOV X0, X20
	0x03484A08 MOV X1, X8
	0x03484A0C MOV X2, X21
	0x03484A10 BL 0x1C24138
	0x03484A14 CMP X21, X0
	0x03484A18 MOV X21, X0
	0x03484A1C B.NE 0x34849DC
	0x03484A20 LDP X20, X19, [X31 + 0x20]
	0x03484A24 LDP X22, X21, [X31 + 0x10]
	0x03484A28 LDR X30, [X31], #0x30
	0x03484A2C RET
	0x03484A30 MOV X0, X8
	0x03484A34 BL 0x1C171E0
	0x03484A38 STR X30, [X31 - 0x30]!
	0x03484A3C STP X22, X21, [X31 + 0x10]
	0x03484A40 STP X20, X19, [X31 + 0x20]
	0x03484A44 ADRP X21, 0xF59000
	0x03484A48 LDRB W8, [X21 + 0x8DB]
	0x03484A4C MOV X19, X1
	0x03484A50 MOV X20, X0
	0x03484A54 TBNZ X8, 0x0, 0x3484A6C
	0x03484A58 ADRP X0, 0xC70000
	0x03484A5C LDR X0, [X0 + 0xE70]
	0x03484A60 BL 0x1C16CF4
	0x03484A64 MOVZ W8, 0x1
	0x03484A68 STRB W8, [X21 + 0x8DB]
	0x03484A6C ADRP X22, 0xC70000
	0x03484A70 LDR X21, [X20 + 0x10]!
	0x03484A74 LDR X22, [X22 + 0xE70]
	0x03484A78 MOV X0, X21
	0x03484A7C MOV X1, X19
	0x03484A80 MOV X2, X31
	0x03484A84 BL 0x33C0FDC
	0x03484A88 MOV X8, X0
	0x03484A8C CBZ X0, 0x3484AA0
	0x03484A90 LDR X1, [X22]
	0x03484A94 LDR X9, [X8]
	0x03484A98 CMP X9, X1
	0x03484A9C B.NE 0x3484ACC
	0x03484AA0 MOV X0, X20
	0x03484AA4 MOV X1, X8
	0x03484AA8 MOV X2, X21
	0x03484AAC BL 0x1C24138
	0x03484AB0 CMP X21, X0
	0x03484AB4 MOV X21, X0
	0x03484AB8 B.NE 0x3484A78
	0x03484ABC LDP X20, X19, [X31 + 0x20]
	0x03484AC0 LDP X22, X21, [X31 + 0x10]
	0x03484AC4 LDR X30, [X31], #0x30
	0x03484AC8 RET
	0x03484ACC MOV X0, X8
	0x03484AD0 BL 0x1C171E0
	0x03484AD4 STR X30, [X31 - 0x30]!
	0x03484AD8 STP X22, X21, [X31 + 0x10]
	0x03484ADC STP X20, X19, [X31 + 0x20]
	0x03484AE0 ADRP X21, 0xF59000
	0x03484AE4 LDRB W8, [X21 + 0x8DC]
	0x03484AE8 MOV X19, X1
	0x03484AEC MOV X20, X0
	0x03484AF0 TBNZ X8, 0x0, 0x3484B08
	0x03484AF4 ADRP X0, 0xC70000
	0x03484AF8 LDR X0, [X0 + 0xE70]
	0x03484AFC BL 0x1C16CF4
	0x03484B00 MOVZ W8, 0x1
	0x03484B04 STRB W8, [X21 + 0x8DC]
	0x03484B08 ADRP X22, 0xC70000
	0x03484B0C LDR X21, [X20 + 0x18]!
	0x03484B10 LDR X22, [X22 + 0xE70]
	0x03484B14 MOV X0, X21
	0x03484B18 MOV X1, X19
	0x03484B1C MOV X2, X31
	0x03484B20 BL 0x33C0DE4
	0x03484B24 MOV X8, X0
	0x03484B28 CBZ X0, 0x3484B3C
	0x03484B2C LDR X1, [X22]
	0x03484B30 LDR X9, [X8]
	0x03484B34 CMP X9, X1
	0x03484B38 B.NE 0x3484B68
	0x03484B3C MOV X0, X20
	0x03484B40 MOV X1, X8
	0x03484B44 MOV X2, X21
	0x03484B48 BL 0x1C24138
	0x03484B4C CMP X21, X0
	0x03484B50 MOV X21, X0
	0x03484B54 B.NE 0x3484B14
	0x03484B58 LDP X20, X19, [X31 + 0x20]
	0x03484B5C LDP X22, X21, [X31 + 0x10]
	0x03484B60 LDR X30, [X31], #0x30
	0x03484B64 RET
	0x03484B68 MOV X0, X8
	0x03484B6C BL 0x1C171E0
	0x03484B70 STR X30, [X31 - 0x30]!
	0x03484B74 STP X22, X21, [X31 + 0x10]
	0x03484B78 STP X20, X19, [X31 + 0x20]
	0x03484B7C ADRP X21, 0xF59000
	0x03484B80 LDRB W8, [X21 + 0x8DD]
	0x03484B84 MOV X19, X1
	0x03484B88 MOV X20, X0
	0x03484B8C TBNZ X8, 0x0, 0x3484BA4
	0x03484B90 ADRP X0, 0xC70000
	0x03484B94 LDR X0, [X0 + 0xE70]
	0x03484B98 BL 0x1C16CF4
	0x03484B9C MOVZ W8, 0x1
	0x03484BA0 STRB W8, [X21 + 0x8DD]
	0x03484BA4 ADRP X22, 0xC70000
	0x03484BA8 LDR X21, [X20 + 0x18]!
	0x03484BAC LDR X22, [X22 + 0xE70]
	0x03484BB0 MOV X0, X21
	0x03484BB4 MOV X1, X19
	0x03484BB8 MOV X2, X31
	0x03484BBC BL 0x33C0FDC
	0x03484BC0 MOV X8, X0
	0x03484BC4 CBZ X0, 0x3484BD8
	0x03484BC8 LDR X1, [X22]
	0x03484BCC LDR X9, [X8]
	0x03484BD0 CMP X9, X1
	0x03484BD4 B.NE 0x3484C04
	0x03484BD8 MOV X0, X20
	0x03484BDC MOV X1, X8
	0x03484BE0 MOV X2, X21

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X20, 0xF5A000
	013 Move W8, [X20+2256]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {84}
	019 Move X0, 0xC71000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0xC7B000
	023 Move X0, [X0+3688]
	024 Call 0x1C17CF4
	025 Move X0, 0xCAE000
	026 Move X0, [X0]
	027 Call 0x1C17CF4
	028 Move X0, 0xCAE000
	029 Move X0, [X0+8]
	030 Call 0x1C17CF4
	031 Move X0, 0xCAE000
	032 Move X0, [X0+16]
	033 Call 0x1C17CF4
	034 Move X0, 0xCAD000
	035 Move X0, [X0+3032]
	036 Call 0x1C17CF4
	037 Move X0, 0xC72000
	038 Move X0, [X0+2640]
	039 Call 0x1C17CF4
	040 Move X0, 0xC78000
	041 Move X0, [X0+2008]
	042 Call 0x1C17CF4
	043 Move X0, 0xCAE000
	044 Move X0, [X0+24]
	045 Call 0x1C17CF4
	046 Move X0, 0xC73000
	047 Move X0, [X0+416]
	048 Call 0x1C17CF4
	049 Move X0, 0xCAB000
	050 Move X0, [X0+2528]
	051 Call 0x1C17CF4
	052 Move X0, 0xC70000
	053 Move X0, [X0+2512]
	054 Call 0x1C17CF4
	055 Move X0, 0xCAD000
	056 Move X0, [X0+3720]
	057 Call 0x1C17CF4
	058 Move X0, 0xCAD000
	059 Move X0, [X0+3728]
	060 Call 0x1C17CF4
	061 Move X0, 0xCAE000
	062 Move X0, [X0+32]
	063 Call 0x1C17CF4
	064 Move X0, 0xCAE000
	065 Move X0, [X0+40]
	066 Call 0x1C17CF4
	067 Move X0, 0xCAE000
	068 Move X0, [X0+48]
	069 Call 0x1C17CF4
	070 Move X0, 0xCAD000
	071 Move X0, [X0+3736]
	072 Call 0x1C17CF4
	073 Move X0, 0xCAE000
	074 Move X0, [X0+56]
	075 Call 0x1C17CF4
	076 Move X0, 0xCAE000
	077 Move X0, [X0+64]
	078 Call 0x1C17CF4
	079 Move X0, 0xCAE000
	080 Move X0, [X0+72]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X20+2256], W8
	084 Move [X31+56], X31
	085 Move [X31+52], W31
	086 Move [X31+32], X31
	087 Move [X31+40], X31
	088 Move X25, 0xCAD000
	089 Move W27, [X19]
	090 Move X25, [X25+3032]
	091 Compare W27, 0
	092 JumpIfEqual {141}
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X19+64]
	096 Move TEMP, 0
	097 Not TEMP
	098 Move W9, TEMP
	099 Move [X31+32], X8
	100 Move [X19+64], X31
	101 Move [X19], W9
	102 Move X8, [X19+56]
	103 Move TEMP, 0
	104 Not TEMP
	105 Move W9, TEMP
	106 Move [X31+56], X8
	107 Move [X19+56], X31
	108 Move [X19], W9
	109 Add X0, X31, 56
	110 Move X1, X31
	111 Call TaskAwaiter.GetResult, X0
	112 Move X8, [X19+48]
	113 Compare X8, 0
	114 JumpIfEqual {527}
	115 Move X8, [X8+32]
	116 Compare X8, 0
	117 JumpIfEqual {528}
	118 Move X0, [X8+16]
	119 Compare X0, 0
	120 JumpIfEqual {529}
	121 Move X8, 0xCAD000
	122 Move X8, [X8+3736]
	123 Move X1, [X8]
	124 Call Task`1<Object>.GetAwaiter, X0
	125 Move X8, 0xCAD000
	126 Move X8, [X8+3728]
	127 Move [X31+32], X0
	128 Move X1, [X8]
	129 Add X0, X31, 32
	130 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {242}
	135 Move X8, 0xCAD000
	136 Move X8, [X8+3720]
	137 Add X0, X31, 32
	138 Move X1, [X8]
	139 Call TaskAwaiter`1<Object>.GetResult, X0
	140 Move X20, X0
	141 Move X8, [X19+56]
	142 Move TEMP, 0
	143 Not TEMP
	144 Move W9, TEMP
	145 Move [X31+56], X8
	146 Move [X19+56], X31
	147 Move [X19], W9
	148 Add X0, X31, 56
	149 Move X1, X31
	150 Call TaskAwaiter.GetResult, X0
	151 Move X20, X31
	152 Move TEMP, 1
	153 Not TEMP
	154 Move W8, TEMP
	155 Move [X19], W8
	156 Move [X19+48], X31
	157 Move X0, [X25]
	158 Move X21, 0xCAE000
	159 Add X19, X19, 8
	160 Move W8, [X0+224]
	161 Move X21, [X21+16]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X2, [X21]
	166 Move X0, X19
	167 Move X1, X20
	168 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	169 Move X20, [X31+128]
	170 Move X19, [X31+136]
	171 Move X22, [X31+112]
	172 Move X21, [X31+120]
	173 Move X24, [X31+96]
	174 Move X23, [X31+104]
	175 Move X26, [X31+80]
	176 Move X25, [X31+88]
	177 Move X30, [X31+64]
	178 Move X27, [X31+72]
	179 Add X31, X31, 144
	180 Return 
	181 Move X8, 0xCAE000
	182 Move X26, [X19+32]
	183 Move X8, [X8+64]
	184 Move X0, [X8]
	185 Call 0x1C17F10
	186 Move X20, X0
	187 Move X1, X31
	188 Call Object..ctor, X0
	189 Move [X19+48], X20
	190 Compare X20, 0
	191 JumpIfEqual {530}
	192 Move X8, [X19+32]
	193 Move [X20+16], X8
	194 Move X0, [X19+40]
	195 Move [X20+24], X0
	196 Call JsonWriter.ToJson, X0
	197 Compare X26, 0
	198 JumpIfEqual {531}
	199 Move X21, [X26+176]
	200 Move X20, X0
	201 Compare X21, 0
	202 JumpIfEqual {267}
	203 Move X8, 0xC70000
	204 Move X8, [X8+2512]
	205 Move X0, [X8]
	206 Move W1, 1
	207 Call 0x1C17D6C
	208 Move X22, X0
	209 Compare X0, 0
	210 JumpIfEqual {535}
	211 Compare X20, 0
	212 JumpIfEqual {219}
	213 Move X8, [X22]
	214 Move X1, [X8+64]
	215 Move X0, X20
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {546}
	219 Move W8, [X22+24]
	220 Compare W8, 0
	221 JumpIfEqual {536}
	222 Move [X22+32], X20
	223 Move X9, 0xC73000
	224 Move X8, [X21]
	225 Move X9, [X9+416]
	226 Move X10, 0xCAE000
	227 Move X1, [X9]
	228 Move X10, [X10+72]
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Move X23, [X10]
	231 Compare X9, 0
	232 JumpIfEqual {239}
	233 Move X10, [X8+176]
	234 Add X10, X10, 8
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Subtract X9, X9, 1
	238 Add X10, X10, 16
	239 Move X0, X21
	240 Move W2, W31
	241 Call 0x1C5D788
	242 Move W8, 2
	243 Move [X19], W8
	244 Move X8, [X31+32]
	245 Move [X19+64], X8
	246 Move X0, [X25]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X8, 0xCAE000
	252 Move X8, [X8]
	253 Add X0, X19, 8
	254 Move X3, [X8]
	255 Add X1, X31, 32
	256 Move X2, X19
	257 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	258 NotImplemented "Instruction LDRSW not yet implemented."
	259 Add X8, X8, X9
	260 Add X0, X8, 312
	261 Move X8, [X0]
	262 Move X3, [X0+8]
	263 Move X0, X21
	264 Move X1, X23
	265 Move X2, X22
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Move X0, X31
	268 Call Encoding.get_UTF8
	269 Compare X0, 0
	270 JumpIfEqual {532}
	271 Move X8, [X0]
	272 Move X9, [X8+616]
	273 Move X2, [X8+624]
	274 Move X1, X20
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Move X8, 0xC72000
	277 Move X20, [X26+208]
	278 Move X8, [X8+2640]
	279 Move X23, X0
	280 Move X0, [X8]
	281 Call 0x1C17F10
	282 Move X22, X0
	283 Move X1, X20
	284 Move X2, X31
	285 Call CancellationTokenSource..ctor, X0, X1
	286 Move X8, [X19+48]
	287 Compare X8, 0
	288 JumpIfEqual {533}
	289 Move X8, [X8+24]
	290 Compare X8, 0
	291 JumpIfEqual {534}
	292 Move X0, [X8+16]
	293 Move X1, X31
	294 Call String.IsNullOrEmpty, X0
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {334}
	299 Move X8, 0xC7B000
	300 Move X20, [X26+184]
	301 Move X8, [X8+3688]
	302 Move [X31+8], X31
	303 Move [X31+16], X31
	304 Move X2, [X8]
	305 Add X0, X31, 8
	306 Move X1, X23
	307 Call 0x2B88B6C, X0, X1
	308 Compare X22, 0
	309 JumpIfEqual {537}
	310 Move X0, X22
	311 Move X1, X31
	312 Call CancellationTokenSource.get_Token, X0
	313 Compare X20, 0
	314 JumpIfEqual {539}
	315 Move X9, 0xCAB000
	316 Move X8, [X20]
	317 Move X9, [X9+2528]
	318 Move X23, [X31+8]
	319 Move X22, [X31+16]
	320 Move X21, X0
	321 Move X1, [X9]
	322 NotImplemented "Instruction LDRH not yet implemented."
	323 Compare X9, 0
	324 JumpIfEqual {331}
	325 Move X10, [X8+176]
	326 Add X10, X10, 8
	327 NotImplemented "Instruction LDUR not yet implemented."
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Subtract X9, X9, 1
	330 Add X10, X10, 16
	331 Move W2, 12
	332 Move X0, X20
	333 Call 0x1C5D788
	334 Move X8, 0xCAE000
	335 Move X21, [X19+48]
	336 Move X8, [X8+48]
	337 Move X0, [X8]
	338 Call 0x1C17F10
	339 Move X8, 0xCAE000
	340 Move X8, [X8+32]
	341 Move X20, X0
	342 Move X1, [X8]
	343 Call TaskCompletionSource`1<Object>..ctor, X0
	344 Compare X21, 0
	345 JumpIfEqual {538}
	346 Move [X21+32], X20
	347 Move X24, [X26+216]
	348 Move [X31+52], W31
	349 Add X1, X31, 52
	350 Move X0, X24
	351 Move X2, X31
	352 Call Monitor.Enter, X0, X1
	353 Move X8, [X19+48]
	354 Compare X8, 0
	355 JumpIfEqual {540}
	356 Move X9, [X8+24]
	357 Compare X9, 0
	358 JumpIfEqual {541}
	359 Move X0, [X26+200]
	360 Compare X0, 0
	361 JumpIfEqual {543}
	362 Move X2, [X8+32]
	363 Move X8, 0xCAE000
	364 Move X1, [X9+16]
	365 Move X8, [X8+24]
	366 Move X3, [X8]
	367 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	368 Move X20, X31
	369 Move W21, 12
	370 Move TEMP, X27
	371 And TEMP, TEMP, -2147483648
	372 Compare TEMP, -2147483648
	373 JumpIfNotEqual {380}
	374 Move W8, [X31+52]
	375 Compare W8, 0
	376 JumpIfEqual {380}
	377 Move X0, X24
	378 Move X1, X31
	379 Call Monitor.Exit, X0
	380 Compare X20, 0
	381 JumpIfNotEqual {544}
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Compare W21, 0
	384 JumpIfNotEqual {169}
	385 Compare X22, 0
	386 JumpIfEqual {549}
	387 Move X0, X22
	388 Move X1, X31
	389 Call CancellationTokenSource.get_Token, X0
	390 Move [X31+40], X0
	391 Move X8, 0xC71000
	392 Move X8, [X8+3696]
	393 Move X21, [X19+48]
	394 Move X0, [X8]
	395 Call 0x1C17F10
	396 Move X8, 0xCAE000
	397 Move X8, [X8+56]
	398 Move X20, X0
	399 Move X2, [X8]
	400 Move X1, X21
	401 Move X3, X31
	402 Call Action..ctor, X0, X1, X2
	403 Move X8, 0xC78000
	404 Move X8, [X8+2008]
	405 Move X0, [X8]
	406 Move W8, [X0+224]
	407 Compare W8, 0
	408 JumpIfNotEqual {410}
	409 Call 0x1C17DFC
	410 Add X8, X31, 8
	411 Add X0, X31, 40
	412 Move X1, X20
	413 Move X2, X31
	414 Call CancellationToken.Register, X0, X1
	415 Move X8, 0xC7B000
	416 Move X20, [X26+184]
	417 Move X8, [X8+3688]
	418 Move [X31+8], X31
	419 Move [X31+16], X31
	420 Move X2, [X8]
	421 Add X0, X31, 8
	422 Move X1, X23
	423 Call 0x2B88B6C, X0, X1
	424 Move X0, X22
	425 Move X1, X31
	426 Call CancellationTokenSource.get_Token, X0
	427 Compare X20, 0
	428 JumpIfEqual {550}
	429 Move X9, 0xCAB000
	430 Move X8, [X20]
	431 Move X9, [X9+2528]
	432 Move X23, [X31+8]
	433 Move X22, [X31+16]
	434 Move X21, X0
	435 Move X1, [X9]
	436 NotImplemented "Instruction LDRH not yet implemented."
	437 Compare X9, 0
	438 JumpIfEqual {445}
	439 Move X10, [X8+176]
	440 Add X10, X10, 8
	441 NotImplemented "Instruction LDUR not yet implemented."
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Subtract X9, X9, 1
	444 Add X10, X10, 16
	445 Move W2, 12
	446 Move X0, X20
	447 Call 0x1C5D788
	448 Move W9, [X10]
	449 Add W9, W9, 12
	450 Add X8, X8, W9
	451 Add X0, X8, 312
	452 Move X8, [X0]
	453 Move X5, [X0+8]
	454 Move W3, 1
	455 Move X0, X20
	456 Move X1, X23
	457 Move X2, X22
	458 Move X4, X21
	459 NotImplemented "Instruction BLR not yet implemented."
	460 Compare X0, 0
	461 JumpIfEqual {542}
	462 Move X1, X31
	463 Call Task.GetAwaiter, X0
	464 Move [X31+56], X0
	465 Add X0, X31, 56
	466 Move X1, X31
	467 Call TaskAwaiter.get_IsCompleted, X0
	468 Move TEMP, X0
	469 And TEMP, TEMP, 1
	470 Compare TEMP, 1
	471 JumpIfEqual {148}
	472 Move [X19], W31
	473 Move X8, [X31+56]
	474 Move [X19+56], X8
	475 Move X0, [X25]
	476 Move W8, [X0+224]
	477 Compare W8, 0
	478 JumpIfNotEqual {480}
	479 Call 0x1C17DFC
	480 Move X8, 0xCAE000
	481 Move X8, [X8+8]
	482 Add X0, X19, 8
	483 Move X3, [X8]
	484 Add X1, X31, 56
	485 Move X2, X19
	486 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	487 Move W9, [X10]
	488 Add W9, W9, 12
	489 Add X8, X8, W9
	490 Add X0, X8, 312
	491 Move X8, [X0]
	492 Move X5, [X0+8]
	493 Move W3, 1
	494 Move X0, X20
	495 Move X1, X23
	496 Move X2, X22
	497 Move X4, X21
	498 NotImplemented "Instruction BLR not yet implemented."
	499 Compare X0, 0
	500 JumpIfEqual {551}
	501 Move X1, X31
	502 Call Task.GetAwaiter, X0
	503 Move [X31+56], X0
	504 Add X0, X31, 56
	505 Move X1, X31
	506 Call TaskAwaiter.get_IsCompleted, X0
	507 Move TEMP, X0
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfEqual {109}
	511 Move W8, 1
	512 Move [X19], W8
	513 Move X8, [X31+56]
	514 Move [X19+56], X8
	515 Move X0, [X25]
	516 Move W8, [X0+224]
	517 Compare W8, 0
	518 JumpIfNotEqual {520}
	519 Call 0x1C17DFC
	520 Move X8, 0xCAE000
	521 Move X8, [X8+8]
	522 Add X0, X19, 8
	523 Move X3, [X8]
	524 Add X1, X31, 56
	525 Move X2, X19
	526 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	527 Call 0x1C17F20
	528 Call 0x1C17F20
	529 Call 0x1C17F20
	530 Call 0x1C17F20
	531 Call 0x1C17F20
	532 Call 0x1C17F20
	533 Call 0x1C17F20
	534 Call 0x1C17F20
	535 Call 0x1C17F20
	536 Call 0x1C17F28
	537 Call 0x1C17F20
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Call 0x1C17F20
	541 Call 0x1C17F20
	542 Call 0x1C17F20
	543 Call 0x1C17F20
	544 Move X0, X20
	545 Call 0x1C17F18
	546 Call 0x1C17F44
	547 Move X1, X31
	548 Call 0x1C17DEC
	549 Call 0x1C17F20
	550 Call 0x1C17F20
	551 Call 0x1C17F20
	552 Move X20, X1
	553 Move X21, X0
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move X0, X21
	556 Call 0x3EB2AD0
	557 Move X8, [X0]
	558 Move [X31], X8
	559 Call 0x3EB2AE0
	560 Move X20, [X31]
	561 Move W21, W31
	562 Move TEMP, X27
	563 And TEMP, TEMP, -2147483648
	564 Compare TEMP, -2147483648
	565 JumpIfEqual {374}
	566 Move [X31], X31
	567 Move TEMP, X27
	568 And TEMP, TEMP, -2147483648
	569 Compare TEMP, -2147483648
	570 JumpIfNotEqual {577}
	571 Move W8, [X31+52]
	572 Compare W8, 0
	573 JumpIfEqual {577}
	574 Move X0, X24
	575 Move X1, X31
	576 Call Monitor.Exit, X0
	577 Move X8, [X31]
	578 Compare X8, 0
	579 JumpIfEqual {590}
	580 Move X0, [X31]
	581 Call 0x1C17F18
	582 Move X20, X1
	583 Move X21, X0
	584 Move TEMP, X27
	585 And TEMP, TEMP, -2147483648
	586 Compare TEMP, -2147483648
	587 JumpIfEqual {571}
	588 Move X20, X1
	589 Move X21, X0
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Move X0, X21
	592 Call 0x3EB2AD0
	593 Move X20, X0
	594 Move X0, 0xC70000
	595 Move X0, [X0+2000]
	596 Call 0x1C17D08
	597 Move X8, [X20]
	598 Move X1, [X8]
	599 Call 0x1C18270
	600 Move TEMP, X0
	601 And TEMP, TEMP, 1
	602 Compare TEMP, 1
	603 JumpIfNotEqual {625}
	604 Move X20, [X20]
	605 Call 0x3EB2AE0
	606 Move TEMP, 1
	607 Not TEMP
	608 Move W8, TEMP
	609 Move [X19+48], X31
	610 Move [X19+8], W8
	611 Move X0, 0xCAD000
	612 Move X0, [X0+3032]
	613 Call 0x1C17D08
	614 Move W8, [X0+224]
	615 Compare W8, 0
	616 JumpIfNotEqual {618}
	617 Call 0x1C17DFC
	618 Move X0, 0xCAE000
	619 Move X0, [X0+80]
	620 Call 0x1C17D08
	621 Move X2, X0
	622 Move X0, X19
	623 Move X1, X20
	624 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	625 Move W0, 8
	626 Call 0x3EB2AF0
	627 Move X8, [X20]
	628 Move [X0], X8
	629 Move X1, 0xA31000
	630 Add X1, X1, 3672
	631 Move X2, X31
	632 Call 0x3EB2B00
	633 Move X21, X0
	634 Call 0x3EB2AE0
	635 Move X0, X21
	636 Call 0x1D2D690
	637 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03484C58 MOV X2, X31
	0x03484C5C BL 0x33C0DE4
	0x03484C60 CBZ X0, 0x3484C80
	0x03484C64 LDR X23, [X24]
	0x03484C68 MOV X22, X0
	0x03484C6C MOV X1, X23
	0x03484C70 BL 0x1C16E00
	0x03484C74 MOV X1, X0
	0x03484C78 CBNZ X0, 0x3484C84
	0x03484C7C B 0x3484CB0
	0x03484C80 MOV X1, X31
	0x03484C84 MOV X0, X20
	0x03484C88 MOV X2, X21
	0x03484C8C BL 0x1C24138
	0x03484C90 CMP X21, X0
	0x03484C94 MOV X21, X0
	0x03484C98 B.NE 0x3484C50
	0x03484C9C LDP X20, X19, [X31 + 0x30]
	0x03484CA0 LDP X22, X21, [X31 + 0x20]
	0x03484CA4 LDP X24, X23, [X31 + 0x10]
	0x03484CA8 LDR X30, [X31], #0x40
	0x03484CAC RET
	0x03484CB0 MOV X0, X22
	0x03484CB4 MOV X1, X23
	0x03484CB8 BL 0x1C171E0
	0x03484CBC STR X30, [X31 - 0x40]!
	0x03484CC0 STP X24, X23, [X31 + 0x10]
	0x03484CC4 STP X22, X21, [X31 + 0x20]
	0x03484CC8 STP X20, X19, [X31 + 0x30]
	0x03484CCC ADRP X21, 0xF59000
	0x03484CD0 LDRB W8, [X21 + 0x8DF]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF5A000
	007 Move X21, 0xCAD000
	008 Move W8, [X22+2257]
	009 Move X21, [X21+3032]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCAE000
	017 Move X0, [X0+88]
	018 Call 0x1C17CF4
	019 Move X0, 0xCAD000
	020 Move X0, [X0+3032]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2257], W8
	024 Move X0, [X21]
	025 Move X21, 0xCAE000
	026 Move W8, [X0+224]
	027 Move X21, [X21+88]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

