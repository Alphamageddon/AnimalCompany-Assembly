Type: Nakama.ApiClient/<ListLeaderboardRecordsAsync>d__68

Method: System.Void MoveNext()

Disassembly:
	0x0342E830 LDR X1, [X8 + 0x40]
	0x0342E834 BL 0x1C16E00
	0x0342E838 CBZ X0, 0x342ED94
	0x0342E83C LDR W8, [X22 + 0x18]
	0x0342E840 CMP W8, 0x1
	0x0342E844 B.LS 0x342ED38
	0x0342E848 LDR X8, [X21]
	0x0342E84C ADRP X9, 0xCC6000
	0x0342E850 STR X8, [X22 + 0x28]
	0x0342E854 LDR X8, [X19 + 0x38]
	0x0342E858 LDR X9, [X9 + 0x478]
	0x0342E85C STR X8, [X31 + 0x10]
	0x0342E860 LDR X0, [X9]
	0x0342E864 ADD X1, X31, 0x10
	0x0342E868 BL 0x1C16E04
	0x0342E86C MOV X21, X0
	0x0342E870 CBZ X0, 0x342E888
	0x0342E874 LDR X8, [X22]
	0x0342E878 LDR X1, [X8 + 0x40]
	0x0342E87C MOV X0, X21
	0x0342E880 BL 0x1C16E00
	0x0342E884 CBZ X0, 0x342EDA0
	0x0342E888 LDR W8, [X22 + 0x18]
	0x0342E88C CMP W8, 0x2
	0x0342E890 B.LS 0x342ED3C
	0x0342E894 STR X21, [X22 + 0x30]
	0x0342E898 ADRP X21, 0xCCE000
	0x0342E89C LDR X21, [X21 + 0x720]
	0x0342E8A0 LDR X0, [X21]
	0x0342E8A4 CBZ X0, 0x342E8BC
	0x0342E8A8 LDR X8, [X22]
	0x0342E8AC LDR X1, [X8 + 0x40]
	0x0342E8B0 BL 0x1C16E00
	0x0342E8B4 CBZ X0, 0x342EDAC
	0x0342E8B8 LDR W8, [X22 + 0x18]
	0x0342E8BC CMP W8, 0x3
	0x0342E8C0 B.LS 0x342ED44
	0x0342E8C4 LDR X8, [X21]
	0x0342E8C8 STR X8, [X22 + 0x38]
	0x0342E8CC MOV X0, X22
	0x0342E8D0 MOV X1, X31
	0x0342E8D4 BL 0x3227578
	0x0342E8D8 MOV X21, X0
	0x0342E8DC LDRB W8, [X19 + 0x40]
	0x0342E8E0 CBZ W8, 0x342E9E4
	0x0342E8E4 ADRP X8, 0xCC5000
	0x0342E8E8 LDR X8, [X8 + 0x9D0]
	0x0342E8EC LDR X0, [X8]
	0x0342E8F0 MOVZ W1, 0x4
	0x0342E8F4 BL 0x1C16D6C
	0x0342E8F8 MOV X22, X0
	0x0342E8FC CBZ X0, 0x342ED40
	0x0342E900 CBZ X21, 0x342E918
	0x0342E904 LDR X8, [X22]
	0x0342E908 LDR X1, [X8 + 0x40]
	0x0342E90C MOV X0, X21
	0x0342E910 BL 0x1C16E00
	0x0342E914 CBZ X0, 0x342EDB8
	0x0342E918 LDR W8, [X22 + 0x18]
	0x0342E91C CBZ W8, 0x342ED48
	0x0342E920 STR X21, [X22 + 0x20]
	0x0342E924 ADRP X21, 0xD01000
	0x0342E928 LDR X21, [X21 + 0xA0]
	0x0342E92C LDR X0, [X21]
	0x0342E930 CBZ X0, 0x342E948
	0x0342E934 LDR X8, [X22]
	0x0342E938 LDR X1, [X8 + 0x40]
	0x0342E93C BL 0x1C16E00
	0x0342E940 CBZ X0, 0x342EDC4
	0x0342E944 LDR W8, [X22 + 0x18]
	0x0342E948 CMP W8, 0x1
	0x0342E94C B.LS 0x342ED4C
	0x0342E950 LDR X8, [X21]
	0x0342E954 ADRP X9, 0xCC6000
	0x0342E958 STR X8, [X22 + 0x28]
	0x0342E95C LDR X8, [X19 + 0x40]
	0x0342E960 LDR X9, [X9 + 0x478]
	0x0342E964 STR X8, [X31 + 0x10]
	0x0342E968 LDR X0, [X9]
	0x0342E96C ADD X1, X31, 0x10
	0x0342E970 BL 0x1C16E04
	0x0342E974 MOV X21, X0
	0x0342E978 CBZ X0, 0x342E990
	0x0342E97C LDR X8, [X22]
	0x0342E980 LDR X1, [X8 + 0x40]
	0x0342E984 MOV X0, X21
	0x0342E988 BL 0x1C16E00
	0x0342E98C CBZ X0, 0x342EDD0
	0x0342E990 LDR W8, [X22 + 0x18]
	0x0342E994 CMP W8, 0x2
	0x0342E998 B.LS 0x342ED50
	0x0342E99C STR X21, [X22 + 0x30]
	0x0342E9A0 ADRP X21, 0xCCE000
	0x0342E9A4 LDR X21, [X21 + 0x720]
	0x0342E9A8 LDR X0, [X21]
	0x0342E9AC CBZ X0, 0x342E9C4
	0x0342E9B0 LDR X8, [X22]
	0x0342E9B4 LDR X1, [X8 + 0x40]
	0x0342E9B8 BL 0x1C16E00
	0x0342E9BC CBZ X0, 0x342EDDC
	0x0342E9C0 LDR W8, [X22 + 0x18]
	0x0342E9C4 CMP W8, 0x3
	0x0342E9C8 B.LS 0x342ED54
	0x0342E9CC LDR X8, [X21]
	0x0342E9D0 STR X8, [X22 + 0x38]
	0x0342E9D4 MOV X0, X22
	0x0342E9D8 MOV X1, X31
	0x0342E9DC BL 0x3227578
	0x0342E9E0 MOV X21, X0
	0x0342E9E4 LDR X22, [X19 + 0x48]
	0x0342E9E8 CBZ X22, 0x342EA3C
	0x0342E9EC ADRP X8, 0xCC7000
	0x0342E9F0 LDR X8, [X8 + 0xA28]
	0x0342E9F4 LDR X0, [X8]
	0x0342E9F8 LDR W8, [X0 + 0xE0]
	0x0342E9FC CBNZ W8, 0x342EA04
	0x0342EA00 BL 0x1C16DFC
	0x0342EA04 MOV X0, X22
	0x0342EA08 MOV X1, X31
	0x0342EA0C BL 0x3624D20
	0x0342EA10 ADRP X8, 0xD01000
	0x0342EA14 LDR X8, [X8 + 0x80]
	0x0342EA18 ADRP X9, 0xCCE000
	0x0342EA1C LDR X9, [X9 + 0x720]
	0x0342EA20 MOV X2, X0
	0x0342EA24 LDR X1, [X8]
	0x0342EA28 LDR X3, [X9]
	0x0342EA2C MOV X0, X21
	0x0342EA30 MOV X4, X31
	0x0342EA34 BL 0x32277C4
	0x0342EA38 MOV X21, X0
	0x0342EA3C CBZ X24, 0x342ECF4
	0x0342EA40 LDR X0, [X24 + 0x20]
	0x0342EA44 CBZ X0, 0x342ECF8
	0x0342EA48 MOV X1, X31
	0x0342EA4C BL 0x361B448
	0x0342EA50 ADRP X8, 0xCCE000
	0x0342EA54 LDR X8, [X8 + 0x8D8]
	0x0342EA58 MOV X22, X0
	0x0342EA5C LDR X0, [X8]
	0x0342EA60 MOVZ W1, 0x1
	0x0342EA64 BL 0x1C16D6C
	0x0342EA68 MOV X1, X0
	0x0342EA6C CBZ X1, 0x342ECFC
	0x0342EA70 LDR W8, [X1 + 0x18]
	0x0342EA74 CBZ W8, 0x342ED00
	0x0342EA78 MOVZ W8, 0x2F
	0x0342EA7C STRH W8, [X1 + 0x20]
	0x0342EA80 CBZ X22, 0x342ED04
	0x0342EA84 MOV X0, X22
	0x0342EA88 MOV X2, X31
	0x0342EA8C BL 0x322BC58
	0x0342EA90 MOV X1, X20
	0x0342EA94 MOV X2, X31
	0x0342EA98 BL 0x321B938
	0x0342EA9C ADRP X8, 0xCCE000
	0x0342EAA0 LDR X8, [X8 + 0x3A0]
	0x0342EAA4 MOV X22, X0
	0x0342EAA8 LDR X23, [X24 + 0x20]
	0x0342EAAC LDR X0, [X8]
	0x0342EAB0 BL 0x1C16F10
	0x0342EAB4 MOV X20, X0
	0x0342EAB8 MOV X1, X23
	0x0342EABC MOV X2, X31
	0x0342EAC0 BL 0x36281F8
	0x0342EAC4 CBZ X20, 0x342ED08
	0x0342EAC8 MOV X0, X20
	0x0342EACC MOV X1, X22
	0x0342EAD0 MOV X2, X31
	0x0342EAD4 BL 0x36288CC
	0x0342EAD8 MOV X0, X20
	0x0342EADC MOV X1, X21
	0x0342EAE0 MOV X2, X31
	0x0342EAE4 BL 0x3628980
	0x0342EAE8 MOV X0, X20
	0x0342EAEC MOV X1, X31
	0x0342EAF0 BL 0x3628A38
	0x0342EAF4 ADRP X8, 0xCEE000
	0x0342EAF8 ADRP X9, 0xCC6000
	0x0342EAFC LDR X8, [X8 + 0x4D0]
	0x0342EB00 LDR X9, [X9 + 0x6D0]
	0x0342EB04 MOV X20, X0
	0x0342EB08 LDR X21, [X8]
	0x0342EB0C LDR X0, [X9]
	0x0342EB10 BL 0x1C16F10
	0x0342EB14 ADRP X8, 0xCC6000
	0x0342EB18 LDR X8, [X8 + 0x6C0]
	0x0342EB1C MOV X22, X0
	0x0342EB20 LDR X1, [X8]
	0x0342EB24 BL 0x2AA4804
	0x0342EB28 ADRP X8, 0xD00000
	0x0342EB2C LDR X8, [X8 + 0x7D8]
	0x0342EB30 LDR X1, [X19 + 0x58]
	0x0342EB34 LDR X0, [X8]
	0x0342EB38 MOV X2, X31
	0x0342EB3C BL 0x321B938
	0x0342EB40 CBZ X22, 0x342ED0C
	0x0342EB44 ADRP X8, 0xD00000
	0x0342EB48 LDR X8, [X8 + 0x7D0]
	0x0342EB4C ADRP X9, 0xCC6000
	0x0342EB50 LDR X9, [X9 + 0x810]
	0x0342EB54 MOV X2, X0
	0x0342EB58 LDR X1, [X8]
	0x0342EB5C LDR X3, [X9]
	0x0342EB60 MOV X0, X22
	0x0342EB64 BL 0x2AA5098
	0x0342EB68 LDR X23, [X24 + 0x10]
	0x0342EB6C CBZ X23, 0x342ED10
	0x0342EB70 ADRP X10, 0xD00000
	0x0342EB74 LDR X10, [X10 + 0x7B8]
	0x0342EB78 LDR X8, [X23]
	0x0342EB7C LDR W25, [X24 + 0x18]
	0x0342EB80 LDP X26, X24, [X19 + 0x60]
	0x0342EB84 LDR X1, [X10]
	0x0342EB88 LDRH W9, [X8 + 0x12E]
	0x0342EB8C CBZ X9, 0x342EBB0
	0x0342EB90 LDR X10, [X8 + 0xB0]
	0x0342EB94 ADD X10, X10, 0x8
	0x0342EB98 LDUR X11, [X10 - 0x8]
	0x0342EB9C CMP X11, X1
	0x0342EBA0 B.EQ 0x342EBD8
	0x0342EBA4 SUBS X9, X9, 0x1
	0x0342EBA8 ADD X10, X10, 0x10
	0x0342EBAC B.NE 0x342EB98
	0x0342EBB0 MOVZ W2, 0x3
	0x0342EBB4 MOV X0, X23
	0x0342EBB8 BL 0x1C5C788
	0x0342EBBC B 0x342EBE8
	0x0342EBC0 LDR X8, [X19 + 0x70]
	0x0342EBC4 MOVN W9, 0x0
	0x0342EBC8 STR X8, [X31 + 0x18]
	0x0342EBCC STR X31, [X19 + 0x70]
	0x0342EBD0 STR W9, [X19]
	0x0342EBD4 B 0x342EC44
	0x0342EBD8 LDR W9, [X10]
	0x0342EBDC ADD W9, W9, 0x3
	0x0342EBE0 ADD X8, X8, W9, 0x4, SXTW
	0x0342EBE4 ADD X0, X8, 0x138
	0x0342EBE8 LDP X8, X9, [X0]
	0x0342EBEC MOV X0, X23
	0x0342EBF0 MOV X1, X21
	0x0342EBF4 MOV X2, X20
	0x0342EBF8 MOV X3, X22
	0x0342EBFC MOV X4, X31
	0x0342EC00 MOV W5, W25
	0x0342EC04 MOV X6, X26
	0x0342EC08 MOV X7, X24
	0x0342EC0C STR X9, [X31]
	0x0342EC10 BLR X8
	0x0342EC14 CBZ X0, 0x342ED14
	0x0342EC18 ADRP X8, 0xCC8000
	0x0342EC1C LDR X8, [X8 + 0x1F8]
	0x0342EC20 LDR X1, [X8]
	0x0342EC24 BL 0x269F5D0
	0x0342EC28 ADRP X8, 0xCC8000
	0x0342EC2C LDR X8, [X8 + 0x1F0]
	0x0342EC30 STR X0, [X31 + 0x18]
	0x0342EC34 LDR X1, [X8]
	0x0342EC38 ADD X0, X31, 0x18
	0x0342EC3C BL 0x2677430
	0x0342EC40 TBZ X0, 0x0, 0x342ECA0
	0x0342EC44 ADRP X8, 0xCC8000
	0x0342EC48 LDR X8, [X8 + 0x1E0]
	0x0342EC4C ADD X0, X31, 0x18
	0x0342EC50 LDR X1, [X8]
	0x0342EC54 BL 0x2677474
	0x0342EC58 ADRP X8, 0xD01000
	0x0342EC5C LDR X8, [X8 + 0x70]
	0x0342EC60 LDR X1, [X8]
	0x0342EC64 BL 0x220E6DC
	0x0342EC68 MOVN W8, 0x1
	0x0342EC6C STR W8, [X19], #0x8
	0x0342EC70 MOV X20, X0
	0x0342EC74 LDR X0, [X27]
	0x0342EC78 ADRP X21, 0xD01000
	0x0342EC7C LDR W8, [X0 + 0xE0]
	0x0342EC80 LDR X21, [X21 + 0x68]
	0x0342EC84 CBNZ W8, 0x342EC8C
	0x0342EC88 BL 0x1C16DFC
	0x0342EC8C LDR X2, [X21]
	0x0342EC90 MOV X0, X19
	0x0342EC94 MOV X1, X20
	0x0342EC98 BL 0x26322B0
	0x0342EC9C B 0x342ECD8
	0x0342ECA0 STR W31, [X19]
	0x0342ECA4 LDR X8, [X31 + 0x18]
	0x0342ECA8 STR X8, [X19 + 0x70]
	0x0342ECAC LDR X0, [X27]
	0x0342ECB0 LDR W8, [X0 + 0xE0]
	0x0342ECB4 CBNZ W8, 0x342ECBC
	0x0342ECB8 BL 0x1C16DFC
	0x0342ECBC ADRP X8, 0xD01000
	0x0342ECC0 LDR X8, [X8 + 0x60]
	0x0342ECC4 ADD X0, X19, 0x8
	0x0342ECC8 LDR X3, [X8]
	0x0342ECCC ADD X1, X31, 0x18
	0x0342ECD0 MOV X2, X19
	0x0342ECD4 BL 0x1FB3FD4
	0x0342ECD8 LDP X20, X19, [X31 + 0x60]
	0x0342ECDC LDP X22, X21, [X31 + 0x50]
	0x0342ECE0 LDP X24, X23, [X31 + 0x40]
	0x0342ECE4 LDP X26, X25, [X31 + 0x30]
	0x0342ECE8 LDP X30, X27, [X31 + 0x20]
	0x0342ECEC ADD X31, X31, 0x70
	0x0342ECF0 RET
	0x0342ECF4 BL 0x1C16F20
	0x0342ECF8 BL 0x1C16F20
	0x0342ECFC BL 0x1C16F20
	0x0342ED00 BL 0x1C16F28
	0x0342ED04 BL 0x1C16F20
	0x0342ED08 BL 0x1C16F20
	0x0342ED0C BL 0x1C16F20
	0x0342ED10 BL 0x1C16F20
	0x0342ED14 BL 0x1C16F20
	0x0342ED18 BL 0x1C16F20
	0x0342ED1C BL 0x1C16F28
	0x0342ED20 BL 0x1C16F28
	0x0342ED24 BL 0x1C16F28
	0x0342ED28 BL 0x1C16F20
	0x0342ED2C BL 0x1C16F28
	0x0342ED30 BL 0x1C16F20
	0x0342ED34 BL 0x1C16F28
	0x0342ED38 BL 0x1C16F28
	0x0342ED3C BL 0x1C16F28
	0x0342ED40 BL 0x1C16F20
	0x0342ED44 BL 0x1C16F28
	0x0342ED48 BL 0x1C16F28
	0x0342ED4C BL 0x1C16F28
	0x0342ED50 BL 0x1C16F28
	0x0342ED54 BL 0x1C16F28
	0x0342ED58 BL 0x1C16F44
	0x0342ED5C MOV X1, X31
	0x0342ED60 BL 0x1C16DEC
	0x0342ED64 BL 0x1C16F44
	0x0342ED68 MOV X1, X31
	0x0342ED6C BL 0x1C16DEC
	0x0342ED70 BL 0x1C16F44
	0x0342ED74 MOV X1, X31
	0x0342ED78 BL 0x1C16DEC
	0x0342ED7C BL 0x1C16F44
	0x0342ED80 MOV X1, X31
	0x0342ED84 BL 0x1C16DEC
	0x0342ED88 BL 0x1C16F44
	0x0342ED8C MOV X1, X31
	0x0342ED90 BL 0x1C16DEC
	0x0342ED94 BL 0x1C16F44
	0x0342ED98 MOV X1, X31
	0x0342ED9C BL 0x1C16DEC
	0x0342EDA0 BL 0x1C16F44
	0x0342EDA4 MOV X1, X31
	0x0342EDA8 BL 0x1C16DEC
	0x0342EDAC BL 0x1C16F44
	0x0342EDB0 MOV X1, X31
	0x0342EDB4 BL 0x1C16DEC
	0x0342EDB8 BL 0x1C16F44
	0x0342EDBC MOV X1, X31
	0x0342EDC0 BL 0x1C16DEC
	0x0342EDC4 BL 0x1C16F44
	0x0342EDC8 MOV X1, X31
	0x0342EDCC BL 0x1C16DEC
	0x0342EDD0 BL 0x1C16F44
	0x0342EDD4 MOV X1, X31
	0x0342EDD8 BL 0x1C16DEC
	0x0342EDDC BL 0x1C16F44
	0x0342EDE0 MOV X1, X31
	0x0342EDE4 BL 0x1C16DEC
	0x0342EDE8 B 0x342EEA4
	0x0342EDEC B 0x342EEA4
	0x0342EDF0 B 0x342EEA4
	0x0342EDF4 B 0x342EEA4
	0x0342EDF8 B 0x342EEA4
	0x0342EDFC B 0x342EEA4
	0x0342EE00 B 0x342EEA4
	0x0342EE04 B 0x342EEA4
	0x0342EE08 B 0x342EEA4
	0x0342EE0C B 0x342EEA4
	0x0342EE10 B 0x342EEA4
	0x0342EE14 B 0x342EEA4
	0x0342EE18 B 0x342EEA4
	0x0342EE1C B 0x342EEA4
	0x0342EE20 B 0x342EEA4
	0x0342EE24 B 0x342EEA4
	0x0342EE28 B 0x342EEA4
	0x0342EE2C B 0x342EEA4
	0x0342EE30 B 0x342EEA4
	0x0342EE34 B 0x342EEA4
	0x0342EE38 B 0x342EEA4
	0x0342EE3C B 0x342EEA4
	0x0342EE40 B 0x342EEA4
	0x0342EE44 B 0x342EEA4
	0x0342EE48 B 0x342EEA4
	0x0342EE4C B 0x342EEA4
	0x0342EE50 B 0x342EEA4
	0x0342EE54 B 0x342EEA4
	0x0342EE58 B 0x342EEA4
	0x0342EE5C B 0x342EEA4
	0x0342EE60 B 0x342EEA4
	0x0342EE64 B 0x342EEA4
	0x0342EE68 B 0x342EEA4
	0x0342EE6C B 0x342EEA4
	0x0342EE70 B 0x342EEA4
	0x0342EE74 B 0x342EEA4
	0x0342EE78 B 0x342EEA4
	0x0342EE7C B 0x342EEA4
	0x0342EE80 B 0x342EEA4
	0x0342EE84 B 0x342EEA4
	0x0342EE88 B 0x342EEA4
	0x0342EE8C B 0x342EEA4
	0x0342EE90 B 0x342EEA4
	0x0342EE94 B 0x342EEA4
	0x0342EE98 B 0x342EEA4
	0x0342EE9C B 0x342EEA4
	0x0342EEA0 B 0x342EEA4
	0x0342EEA4 MOV X20, X0
	0x0342EEA8 CMP W1, 0x1
	0x0342EEAC B.NE 0x342EF48
	0x0342EEB0 MOV X0, X20
	0x0342EEB4 BL 0x3EB1AD0
	0x0342EEB8 MOV X20, X0
	0x0342EEBC ADRP X0, 0xCC5000
	0x0342EEC0 LDR X0, [X0 + 0x7D0]
	0x0342EEC4 BL 0x1C16D08
	0x0342EEC8 LDR X8, [X20]
	0x0342EECC LDR X1, [X8]
	0x0342EED0 BL 0x1C17270
	0x0342EED4 TBZ X0, 0x0, 0x342EF20
	0x0342EED8 LDR X20, [X20]
	0x0342EEDC BL 0x3EB1AE0
	0x0342EEE0 MOVN W8, 0x1
	0x0342EEE4 STR W8, [X19], #0x8
	0x0342EEE8 ADRP X0, 0xD00000
	0x0342EEEC LDR X0, [X0 + 0x620]
	0x0342EEF0 BL 0x1C16D08
	0x0342EEF4 LDR W8, [X0 + 0xE0]
	0x0342EEF8 CBNZ W8, 0x342EF00
	0x0342EEFC BL 0x1C16DFC
	0x0342EF00 ADRP X0, 0xD01000
	0x0342EF04 LDR X0, [X0 + 0xA8]
	0x0342EF08 BL 0x1C16D08
	0x0342EF0C MOV X2, X0
	0x0342EF10 MOV X0, X19
	0x0342EF14 MOV X1, X20
	0x0342EF18 BL 0x26324C8
	0x0342EF1C B 0x342ECD8
	0x0342EF20 MOVZ W0, 0x8
	0x0342EF24 BL 0x3EB1AF0
	0x0342EF28 LDR X8, [X20]
	0x0342EF2C STR X8, [X0]
	0x0342EF30 ADRP X1, 0xA86000
	0x0342EF34 ADD X1, X1, 0xE58
	0x0342EF38 MOV X2, X31
	0x0342EF3C BL 0x3EB1B00
	0x0342EF40 MOV X20, X0
	0x0342EF44 BL 0x3EB1AE0
	0x0342EF48 MOV X0, X20
	0x0342EF4C BL 0x1D2C690
	0x0342EF50 BL 0x1990590
	0x0342EF54 STR X30, [X31 - 0x30]!
	0x0342EF58 STP X22, X21, [X31 + 0x10]
	0x0342EF5C STP X20, X19, [X31 + 0x20]
	0x0342EF60 ADRP X22, 0xFAF000
	0x0342EF64 ADRP X21, 0xD00000
	0x0342EF68 LDRB W8, [X22 + 0x658]
	0x0342EF6C LDR X21, [X21 + 0x620]
	0x0342EF70 MOV X19, X1
	0x0342EF74 MOV X20, X0
	0x0342EF78 TBNZ X8, 0x0, 0x342EF9C
	0x0342EF7C ADRP X0, 0xD01000
	0x0342EF80 LDR X0, [X0 + 0xB0]
	0x0342EF84 BL 0x1C16CF4
	0x0342EF88 ADRP X0, 0xD00000
	0x0342EF8C LDR X0, [X0 + 0x620]
	0x0342EF90 BL 0x1C16CF4
	0x0342EF94 MOVZ W8, 0x1
	0x0342EF98 STRB W8, [X22 + 0x658]
	0x0342EF9C LDR X0, [X21]
	0x0342EFA0 ADRP X21, 0xD01000
	0x0342EFA4 LDR W8, [X0 + 0xE0]
	0x0342EFA8 LDR X21, [X21 + 0xB0]
	0x0342EFAC CBNZ W8, 0x342EFB4
	0x0342EFB0 BL 0x1C16DFC
	0x0342EFB4 LDR X2, [X21]
	0x0342EFB8 ADD X0, X20, 0x8
	0x0342EFBC MOV X1, X19
	0x0342EFC0 LDP X20, X19, [X31 + 0x20]
	0x0342EFC4 LDP X22, X21, [X31 + 0x10]
	0x0342EFC8 LDR X30, [X31], #0x30
	0x0342EFCC B 0x2632228
	0x0342EFD0 SUB X31, X31, 0x70
	0x0342EFD4 STP X30, X27, [X31 + 0x20]
	0x0342EFD8 STP X26, X25, [X31 + 0x30]
	0x0342EFDC STP X24, X23, [X31 + 0x40]
	0x0342EFE0 STP X22, X21, [X31 + 0x50]
	0x0342EFE4 STP X20, X19, [X31 + 0x60]
	0x0342EFE8 ADRP X20, 0xFAF000
	0x0342EFEC LDRB W8, [X20 + 0x659]
	0x0342EFF0 MOV X19, X0
	0x0342EFF4 TBNZ X8, 0x0, 0x342F12C
	0x0342EFF8 ADRP X0, 0xD01000
	0x0342EFFC LDR X0, [X0 + 0xB8]
	0x0342F000 BL 0x1C16CF4
	0x0342F004 ADRP X0, 0xD00000
	0x0342F008 LDR X0, [X0 + 0xC0]
	0x0342F00C BL 0x1C16CF4
	0x0342F010 ADRP X0, 0xCFF000
	0x0342F014 LDR X0, [X0 + 0x648]
	0x0342F018 BL 0x1C16CF4
	0x0342F01C ADRP X0, 0xCCD000
	0x0342F020 LDR X0, [X0 + 0x8D8]
	0x0342F024 BL 0x1C16CF4
	0x0342F028 ADRP X0, 0xCC5000
	0x0342F02C LDR X0, [X0 + 0x810]
	0x0342F030 BL 0x1C16CF4
	0x0342F034 ADRP X0, 0xCC5000
	0x0342F038 LDR X0, [X0 + 0x6C0]
	0x0342F03C BL 0x1C16CF4
	0x0342F040 ADRP X0, 0xCC5000
	0x0342F044 LDR X0, [X0 + 0x6D0]
	0x0342F048 BL 0x1C16CF4
	0x0342F04C ADRP X0, 0xCFF000
	0x0342F050 LDR X0, [X0 + 0x7B8]
	0x0342F054 BL 0x1C16CF4
	0x0342F058 ADRP X0, 0xD00000
	0x0342F05C LDR X0, [X0 + 0xC8]
	0x0342F060 BL 0x1C16CF4
	0x0342F064 ADRP X0, 0xCC7000
	0x0342F068 LDR X0, [X0 + 0xEF8]
	0x0342F06C BL 0x1C16CF4
	0x0342F070 ADRP X0, 0xCC5000
	0x0342F074 LDR X0, [X0 + 0x478]
	0x0342F078 BL 0x1C16CF4
	0x0342F07C ADRP X0, 0xCC4000
	0x0342F080 LDR X0, [X0 + 0x9D0]
	0x0342F084 BL 0x1C16CF4
	0x0342F088 ADRP X0, 0xCC7000
	0x0342F08C LDR X0, [X0 + 0x1E0]
	0x0342F090 BL 0x1C16CF4
	0x0342F094 ADRP X0, 0xCC7000
	0x0342F098 LDR X0, [X0 + 0x1F0]
	0x0342F09C BL 0x1C16CF4
	0x0342F0A0 ADRP X0, 0xCC7000
	0x0342F0A4 LDR X0, [X0 + 0x1F8]
	0x0342F0A8 BL 0x1C16CF4
	0x0342F0AC ADRP X0, 0xCCD000
	0x0342F0B0 LDR X0, [X0 + 0x3A0]
	0x0342F0B4 BL 0x1C16CF4
	0x0342F0B8 ADRP X0, 0xCC6000
	0x0342F0BC LDR X0, [X0 + 0xA28]
	0x0342F0C0 BL 0x1C16CF4
	0x0342F0C4 ADRP X0, 0xCED000
	0x0342F0C8 LDR X0, [X0 + 0x4D0]
	0x0342F0CC BL 0x1C16CF4
	0x0342F0D0 ADRP X0, 0xD00000
	0x0342F0D4 LDR X0, [X0 + 0xD0]
	0x0342F0D8 BL 0x1C16CF4
	0x0342F0DC ADRP X0, 0xCCD000
	0x0342F0E0 LDR X0, [X0 + 0x720]
	0x0342F0E4 BL 0x1C16CF4
	0x0342F0E8 ADRP X0, 0xCFF000
	0x0342F0EC LDR X0, [X0 + 0x7D0]
	0x0342F0F0 BL 0x1C16CF4
	0x0342F0F4 ADRP X0, 0xCFF000
	0x0342F0F8 LDR X0, [X0 + 0xF18]
	0x0342F0FC BL 0x1C16CF4
	0x0342F100 ADRP X0, 0xCFF000
	0x0342F104 LDR X0, [X0 + 0xC48]
	0x0342F108 BL 0x1C16CF4
	0x0342F10C ADRP X0, 0xCFF000
	0x0342F110 LDR X0, [X0 + 0x7D8]
	0x0342F114 BL 0x1C16CF4
	0x0342F118 ADRP X0, 0xCC4000
	0x0342F11C LDR X0, [X0 + 0x988]
	0x0342F120 BL 0x1C16CF4
	0x0342F124 MOVZ W8, 0x1
	0x0342F128 STRB W8, [X20 + 0x659]
	0x0342F12C STR X31, [X31 + 0x18]
	0x0342F130 ADRP X27, 0xCFF000
	0x0342F134 LDR W8, [X19]
	0x0342F138 LDR X27, [X27 + 0x648]
	0x0342F13C CBZ W8, 0x342F440
	0x0342F140 ADRP X8, 0xCFF000
	0x0342F144 ADRP X9, 0xCC4000
	0x0342F148 LDR X8, [X8 + 0xC48]
	0x0342F14C LDR X9, [X9 + 0x988]
	0x0342F150 LDR X24, [X19 + 0x30]
	0x0342F154 LDRB W10, [X19 + 0x20]
	0x0342F158 LDR X20, [X8]
	0x0342F15C LDR X21, [X9]
	0x0342F160 CBZ W10, 0x342F264
	0x0342F164 ADRP X8, 0xCC4000
	0x0342F168 LDR X8, [X8 + 0x9D0]
	0x0342F16C LDR X0, [X8]
	0x0342F170 MOVZ W1, 0x4
	0x0342F174 BL 0x1C16D6C
	0x0342F178 MOV X22, X0
	0x0342F17C CBZ X0, 0x342F598
	0x0342F180 CBZ X21, 0x342F198
	0x0342F184 LDR X8, [X22]
	0x0342F188 LDR X1, [X8 + 0x40]
	0x0342F18C MOV X0, X21
	0x0342F190 BL 0x1C16E00
	0x0342F194 CBZ X0, 0x342F5AC
	0x0342F198 LDR W8, [X22 + 0x18]
	0x0342F19C CBZ W8, 0x342F59C
	0x0342F1A0 STR X21, [X22 + 0x20]
	0x0342F1A4 ADRP X21, 0xCFF000
	0x0342F1A8 LDR X21, [X21 + 0xF18]
	0x0342F1AC LDR X0, [X21]
	0x0342F1B0 CBZ X0, 0x342F1C8
	0x0342F1B4 LDR X8, [X22]
	0x0342F1B8 LDR X1, [X8 + 0x40]
	0x0342F1BC BL 0x1C16E00
	0x0342F1C0 CBZ X0, 0x342F5B8
	0x0342F1C4 LDR W8, [X22 + 0x18]
	0x0342F1C8 CMP W8, 0x1
	0x0342F1CC B.LS 0x342F5A0
	0x0342F1D0 LDR X8, [X21]
	0x0342F1D4 ADRP X9, 0xCC5000
	0x0342F1D8 STR X8, [X22 + 0x28]
	0x0342F1DC LDR X8, [X19 + 0x20]
	0x0342F1E0 LDR X9, [X9 + 0x478]
	0x0342F1E4 STR X8, [X31 + 0x10]
	0x0342F1E8 LDR X0, [X9]
	0x0342F1EC ADD X1, X31, 0x10
	0x0342F1F0 BL 0x1C16E04
	0x0342F1F4 MOV X21, X0
	0x0342F1F8 CBZ X0, 0x342F210
	0x0342F1FC LDR X8, [X22]
	0x0342F200 LDR X1, [X8 + 0x40]
	0x0342F204 MOV X0, X21
	0x0342F208 BL 0x1C16E00
	0x0342F20C CBZ X0, 0x342F5C4
	0x0342F210 LDR W8, [X22 + 0x18]
	0x0342F214 CMP W8, 0x2
	0x0342F218 B.LS 0x342F5A4
	0x0342F21C STR X21, [X22 + 0x30]
	0x0342F220 ADRP X21, 0xCCD000
	0x0342F224 LDR X21, [X21 + 0x720]
	0x0342F228 LDR X0, [X21]
	0x0342F22C CBZ X0, 0x342F244
	0x0342F230 LDR X8, [X22]
	0x0342F234 LDR X1, [X8 + 0x40]
	0x0342F238 BL 0x1C16E00
	0x0342F23C CBZ X0, 0x342F5D0
	0x0342F240 LDR W8, [X22 + 0x18]
	0x0342F244 CMP W8, 0x3
	0x0342F248 B.LS 0x342F5A8
	0x0342F24C LDR X8, [X21]
	0x0342F250 STR X8, [X22 + 0x38]
	0x0342F254 MOV X0, X22
	0x0342F258 MOV X1, X31
	0x0342F25C BL 0x3227578
	0x0342F260 MOV X21, X0
	0x0342F264 LDR X22, [X19 + 0x28]
	0x0342F268 CBZ X22, 0x342F2BC
	0x0342F26C ADRP X8, 0xCC6000
	0x0342F270 LDR X8, [X8 + 0xA28]
	0x0342F274 LDR X0, [X8]
	0x0342F278 LDR W8, [X0 + 0xE0]
	0x0342F27C CBNZ W8, 0x342F284
	0x0342F280 BL 0x1C16DFC
	0x0342F284 MOV X0, X22
	0x0342F288 MOV X1, X31
	0x0342F28C BL 0x3624D20
	0x0342F290 ADRP X8, 0xD00000
	0x0342F294 LDR X8, [X8 + 0xD0]
	0x0342F298 ADRP X9, 0xCCD000
	0x0342F29C LDR X9, [X9 + 0x720]
	0x0342F2A0 MOV X2, X0
	0x0342F2A4 LDR X1, [X8]
	0x0342F2A8 LDR X3, [X9]
	0x0342F2AC MOV X0, X21
	0x0342F2B0 MOV X4, X31
	0x0342F2B4 BL 0x32277C4
	0x0342F2B8 MOV X21, X0
	0x0342F2BC CBZ X24, 0x342F574
	0x0342F2C0 LDR X0, [X24 + 0x20]
	0x0342F2C4 CBZ X0, 0x342F578
	0x0342F2C8 MOV X1, X31
	0x0342F2CC BL 0x361B448
	0x0342F2D0 ADRP X8, 0xCCD000
	0x0342F2D4 LDR X8, [X8 + 0x8D8]
	0x0342F2D8 MOV X22, X0
	0x0342F2DC LDR X0, [X8]
	0x0342F2E0 MOVZ W1, 0x1
	0x0342F2E4 BL 0x1C16D6C
	0x0342F2E8 MOV X1, X0
	0x0342F2EC CBZ X1, 0x342F57C
	0x0342F2F0 LDR W8, [X1 + 0x18]
	0x0342F2F4 CBZ W8, 0x342F580
	0x0342F2F8 MOVZ W8, 0x2F
	0x0342F2FC STRH W8, [X1 + 0x20]
	0x0342F300 CBZ X22, 0x342F584
	0x0342F304 MOV X0, X22
	0x0342F308 MOV X2, X31
	0x0342F30C BL 0x322BC58
	0x0342F310 MOV X1, X20
	0x0342F314 MOV X2, X31
	0x0342F318 BL 0x321B938
	0x0342F31C ADRP X8, 0xCCD000
	0x0342F320 LDR X8, [X8 + 0x3A0]
	0x0342F324 MOV X22, X0
	0x0342F328 LDR X23, [X24 + 0x20]
	0x0342F32C LDR X0, [X8]
	0x0342F330 BL 0x1C16F10
	0x0342F334 MOV X20, X0
	0x0342F338 MOV X1, X23
	0x0342F33C MOV X2, X31
	0x0342F340 BL 0x36281F8
	0x0342F344 CBZ X20, 0x342F588
	0x0342F348 MOV X0, X20
	0x0342F34C MOV X1, X22
	0x0342F350 MOV X2, X31
	0x0342F354 BL 0x36288CC
	0x0342F358 MOV X0, X20
	0x0342F35C MOV X1, X21
	0x0342F360 MOV X2, X31
	0x0342F364 BL 0x3628980
	0x0342F368 MOV X0, X20
	0x0342F36C MOV X1, X31
	0x0342F370 BL 0x3628A38
	0x0342F374 ADRP X8, 0xCED000
	0x0342F378 ADRP X9, 0xCC5000
	0x0342F37C LDR X8, [X8 + 0x4D0]
	0x0342F380 LDR X9, [X9 + 0x6D0]
	0x0342F384 MOV X20, X0
	0x0342F388 LDR X21, [X8]
	0x0342F38C LDR X0, [X9]
	0x0342F390 BL 0x1C16F10
	0x0342F394 ADRP X8, 0xCC5000
	0x0342F398 LDR X8, [X8 + 0x6C0]
	0x0342F39C MOV X22, X0
	0x0342F3A0 LDR X1, [X8]
	0x0342F3A4 BL 0x2AA4804
	0x0342F3A8 ADRP X8, 0xCFF000
	0x0342F3AC LDR X8, [X8 + 0x7D8]
	0x0342F3B0 LDR X1, [X19 + 0x38]
	0x0342F3B4 LDR X0, [X8]
	0x0342F3B8 MOV X2, X31
	0x0342F3BC BL 0x321B938
	0x0342F3C0 CBZ X22, 0x342F58C
	0x0342F3C4 ADRP X8, 0xCFF000
	0x0342F3C8 LDR X8, [X8 + 0x7D0]
	0x0342F3CC ADRP X9, 0xCC5000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xFB0000
	015 Move W8, [X20+1621]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {122}
	021 Move X0, 0xD02000
	022 Move X0, [X0+72]
	023 Call 0x1C17CF4
	024 Move X0, 0xD02000
	025 Move X0, [X0]
	026 Call 0x1C17CF4
	027 Move X0, 0xD01000
	028 Move X0, [X0+1496]
	029 Call 0x1C17CF4
	030 Move X0, 0xCCF000
	031 Move X0, [X0+2264]
	032 Call 0x1C17CF4
	033 Move X0, 0xCC7000
	034 Move X0, [X0+2064]
	035 Call 0x1C17CF4
	036 Move X0, 0xCC7000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0xCC7000
	040 Move X0, [X0+1744]
	041 Call 0x1C17CF4
	042 Move X0, 0xCC6000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0xCC6000
	046 Move X0, [X0+3952]
	047 Call 0x1C17CF4
	048 Move X0, 0xCC6000
	049 Move X0, [X0+3960]
	050 Call 0x1C17CF4
	051 Move X0, 0xCC6000
	052 Move X0, [X0+3608]
	053 Call 0x1C17CF4
	054 Move X0, 0xD01000
	055 Move X0, [X0+1976]
	056 Call 0x1C17CF4
	057 Move X0, 0xD02000
	058 Move X0, [X0+8]
	059 Call 0x1C17CF4
	060 Move X0, 0xCC9000
	061 Move X0, [X0+3832]
	062 Call 0x1C17CF4
	063 Move X0, 0xCC7000
	064 Move X0, [X0+1144]
	065 Call 0x1C17CF4
	066 Move X0, 0xCC6000
	067 Move X0, [X0+2512]
	068 Call 0x1C17CF4
	069 Move X0, 0xCC6000
	070 Move X0, [X0+2760]
	071 Call 0x1C17CF4
	072 Move X0, 0xCC9000
	073 Move X0, [X0+480]
	074 Call 0x1C17CF4
	075 Move X0, 0xCC9000
	076 Move X0, [X0+496]
	077 Call 0x1C17CF4
	078 Move X0, 0xCC9000
	079 Move X0, [X0+504]
	080 Call 0x1C17CF4
	081 Move X0, 0xCCF000
	082 Move X0, [X0+928]
	083 Call 0x1C17CF4
	084 Move X0, 0xCC8000
	085 Move X0, [X0+2600]
	086 Call 0x1C17CF4
	087 Move X0, 0xCEF000
	088 Move X0, [X0+1232]
	089 Call 0x1C17CF4
	090 Move X0, 0xD02000
	091 Move X0, [X0+32]
	092 Call 0x1C17CF4
	093 Move X0, 0xCCF000
	094 Move X0, [X0+1824]
	095 Call 0x1C17CF4
	096 Move X0, 0xD01000
	097 Move X0, [X0+2000]
	098 Call 0x1C17CF4
	099 Move X0, 0xD01000
	100 Move X0, [X0+3864]
	101 Call 0x1C17CF4
	102 Move X0, 0xD01000
	103 Move X0, [X0+3104]
	104 Call 0x1C17CF4
	105 Move X0, 0xD01000
	106 Move X0, [X0+3112]
	107 Call 0x1C17CF4
	108 Move X0, 0xD01000
	109 Move X0, [X0+2008]
	110 Call 0x1C17CF4
	111 Move X0, 0xCC6000
	112 Move X0, [X0+2440]
	113 Call 0x1C17CF4
	114 Move X0, 0xD01000
	115 Move X0, [X0+3872]
	116 Call 0x1C17CF4
	117 Move X0, 0xD02000
	118 Move X0, [X0+80]
	119 Call 0x1C17CF4
	120 Move W8, 1
	121 Move [X20+1621], W8
	122 Move [X31+40], X31
	123 Move X27, 0xD01000
	124 Move W28, [X19]
	125 Move X27, [X27+1496]
	126 Compare W28, 0
	127 JumpIfEqual {185}
	128 Move X21, [X19+32]
	129 Compare X21, 0
	130 JumpIfEqual {617}
	131 Move X24, 0xCC8000
	132 Move X24, [X24+2600]
	133 Move X8, 0xD01000
	134 Move X0, [X24]
	135 Move X8, [X8+3112]
	136 Move X23, [X19+72]
	137 Move W9, [X0+224]
	138 Move X20, [X8]
	139 Compare W9, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X21
	143 Move X1, X31
	144 Call Uri.EscapeDataString, X0
	145 Compare X20, 0
	146 JumpIfEqual {635}
	147 Move X8, 0xD01000
	148 Move X8, [X8+3104]
	149 Move X2, X0
	150 Move X1, [X8]
	151 Move X0, X20
	152 Move X3, X31
	153 Call String.Replace, X0, X1, X2
	154 Move X8, 0xCC6000
	155 Move X8, [X8+2440]
	156 Move X21, [X19+40]
	157 Move X20, X0
	158 Move X29, [X8]
	159 Compare X21, 0
	160 JumpIfNotEqual {169}
	161 Move X8, 0xCC6000
	162 Move X8, [X8+2760]
	163 Move X0, [X8]
	164 Move W1, W31
	165 Call 0x1C17D6C
	166 Move X21, X0
	167 Compare X0, 0
	168 JumpIfEqual {652}
	169 Move X10, 0xCC6000
	170 Move X8, [X21]
	171 Move X10, [X10+3952]
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X1, [X10]
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move X0, X21
	183 Move W2, W31
	184 Call 0x1C5D788
	185 Move X8, [X19+104]
	186 Move TEMP, 0
	187 Not TEMP
	188 Move W9, TEMP
	189 Move [X31+40], X8
	190 Move [X19+104], X31
	191 Move [X19], W9
	192 NotImplemented "Instruction LDRSW not yet implemented."
	193 Add X8, X8, X9
	194 Add X0, X8, 312
	195 Move X8, [X0]
	196 Move X1, [X0+8]
	197 Move X0, X21
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move [X31+16], X20
	200 Move [X31+24], X23
	201 Move X27, 0xCC6000
	202 Move X20, 0xCC6000
	203 Move X25, 0xD02000
	204 Move X26, 0xCCF000
	205 Move X27, [X27+3608]
	206 Move X20, [X20+3960]
	207 Move X25, [X25+80]
	208 Move X26, [X26+1824]
	209 Move X22, X0
	210 Move X0, X29
	211 Compare X22, 0
	212 JumpIfEqual {616}
	213 Move X8, [X22]
	214 Move X1, [X27]
	215 Move X21, X0
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 Compare X9, 0
	218 JumpIfEqual {225}
	219 Move X10, [X8+176]
	220 Add X10, X10, 8
	221 NotImplemented "Instruction LDUR not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Subtract X9, X9, 1
	224 Add X10, X10, 16
	225 Move X0, X22
	226 Move W2, W31
	227 Call 0x1C5D788
	228 NotImplemented "Instruction LDRSW not yet implemented."
	229 Add X8, X8, X9
	230 Add X0, X8, 312
	231 Move X8, [X0]
	232 Move X1, [X0+8]
	233 Move X0, X22
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {275}
	239 Move X8, [X22]
	240 Move X1, [X20]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move X0, X22
	251 Move W2, W31
	252 Call 0x1C5D788
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Add X8, X8, X9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X22
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move X23, X0
	261 Move X0, [X24]
	262 Move W8, [X0+224]
	263 Compare W8, 0
	264 JumpIfNotEqual {266}
	265 Call 0x1C17DFC
	266 Move X0, X23
	267 Move X1, X31
	268 Call Uri.EscapeDataString, X0
	269 Move X1, [X25]
	270 Move X3, [X26]
	271 Move X2, X0
	272 Move X0, X21
	273 Move X4, X31
	274 Call String.Concat, X0, X1, X2, X3
	275 Move X23, X31
	276 Move W20, 9
	277 Move X27, 0xD01000
	278 Move X27, [X27+1496]
	279 Move TEMP, X28
	280 And TEMP, TEMP, -2147483648
	281 Compare TEMP, -2147483648
	282 JumpIfNotEqual {308}
	283 Compare X22, 0
	284 JumpIfEqual {308}
	285 Move X10, 0xCC6000
	286 Move X8, [X22]
	287 Move X10, [X10+3584]
	288 NotImplemented "Instruction LDRH not yet implemented."
	289 Move X1, [X10]
	290 Compare X9, 0
	291 JumpIfEqual {298}
	292 Move X10, [X8+176]
	293 Add X10, X10, 8
	294 NotImplemented "Instruction LDUR not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Subtract X9, X9, 1
	297 Add X10, X10, 16
	298 Move X0, X22
	299 Move W2, W31
	300 Call 0x1C5D788
	301 NotImplemented "Instruction LDRSW not yet implemented."
	302 Add X8, X8, X9
	303 Add X0, X8, 312
	304 Move X8, [X0]
	305 Move X1, [X0+8]
	306 Move X0, X22
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Compare X23, 0
	309 JumpIfNotEqual {636}
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Compare W20, 0
	312 JumpIfNotEqual {602}
	313 Move W8, [X19+48]
	314 Compare W8, 0
	315 JumpIfEqual {385}
	316 Move X8, 0xCC6000
	317 Move X8, [X8+2512]
	318 Move X0, [X8]
	319 Move W1, 4
	320 Call 0x1C17D6C
	321 Move X22, X0
	322 Compare X0, 0
	323 JumpIfEqual {647}
	324 Compare X21, 0
	325 JumpIfEqual {332}
	326 Move X8, [X22]
	327 Move X1, [X8+64]
	328 Move X0, X21
	329 Call 0x1C17E00
	330 Compare X0, 0
	331 JumpIfEqual {653}
	332 Move W8, [X22+24]
	333 Compare W8, 0
	334 JumpIfEqual {648}
	335 Move [X22+32], X21
	336 Move X20, 0xD01000
	337 Move X20, [X20+3864]
	338 Move X0, [X20]
	339 Compare X0, 0
	340 JumpIfEqual {347}
	341 Move X8, [X22]
	342 Move X1, [X8+64]
	343 Call 0x1C17E00
	344 Compare X0, 0
	345 JumpIfEqual {656}
	346 Move W8, [X22+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X8, [X20]
	349 Move X9, 0xCC7000
	350 Move [X22+40], X8
	351 Move X8, [X19+48]
	352 Move X9, [X9+1144]
	353 Move [X31+32], X8
	354 Move X0, [X9]
	355 Add X1, X31, 32
	356 Call 0x1C17E04
	357 Move X21, X0
	358 Compare X0, 0
	359 JumpIfEqual {366}
	360 Move X8, [X22]
	361 Move X1, [X8+64]
	362 Move X0, X21
	363 Call 0x1C17E00
	364 Compare X0, 0
	365 JumpIfEqual {659}
	366 Move W8, [X22+24]
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move [X22+48], X21
	369 Move X0, [X26]
	370 Compare X0, 0
	371 JumpIfEqual {378}
	372 Move X8, [X22]
	373 Move X1, [X8+64]
	374 Call 0x1C17E00
	375 Compare X0, 0
	376 JumpIfEqual {662}
	377 Move W8, [X22+24]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move X8, [X26]
	380 Move [X22+56], X8
	381 Move X0, X22
	382 Move X1, X31
	383 Call String.Concat, X0
	384 Move X21, X0
	385 Move X22, [X19+56]
	386 Compare X22, 0
	387 JumpIfEqual {405}
	388 Move X0, [X24]
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X22
	394 Move X1, X31
	395 Call Uri.EscapeDataString, X0
	396 Move X8, 0xD01000
	397 Move X8, [X8+3872]
	398 Move X3, [X26]
	399 Move X2, X0
	400 Move X1, [X8]
	401 Move X0, X21
	402 Move X4, X31
	403 Call String.Concat, X0, X1, X2, X3
	404 Move X21, X0
	405 Move X22, [X19+64]
	406 Compare X22, 0
	407 JumpIfEqual {425}
	408 Move X0, [X24]
	409 Move W8, [X0+224]
	410 Compare W8, 0
	411 JumpIfNotEqual {413}
	412 Call 0x1C17DFC
	413 Move X0, X22
	414 Move X1, X31
	415 Call Uri.EscapeDataString, X0
	416 Move X8, 0xD02000
	417 Move X8, [X8+32]
	418 Move X3, [X26]
	419 Move X2, X0
	420 Move X1, [X8]
	421 Move X0, X21
	422 Move X4, X31
	423 Call String.Concat, X0, X1, X2, X3
	424 Move X21, X0
	425 Move X25, [X31+24]
	426 Compare X25, 0
	427 JumpIfEqual {638}
	428 Move X0, [X25+32]
	429 Compare X0, 0
	430 JumpIfEqual {639}
	431 Move X1, X31
	432 Call Uri.get_AbsolutePath, X0
	433 Move X8, 0xCCF000
	434 Move X8, [X8+2264]
	435 Move X22, X0
	436 Move X0, [X8]
	437 Move W1, 1
	438 Call 0x1C17D6C
	439 Move X1, X0
	440 Compare X1, 0
	441 JumpIfEqual {640}
	442 Move W8, [X1+24]
	443 Compare W8, 0
	444 JumpIfEqual {641}
	445 Move W8, 47
	446 NotImplemented "Instruction STRH not yet implemented."
	447 Compare X22, 0
	448 JumpIfEqual {642}
	449 Move X0, X22
	450 Move X2, X31
	451 Call String.TrimEnd, X0, X1
	452 Move X1, [X31+16]
	453 Move X2, X31
	454 Call String.Concat, X0, X1
	455 Move X8, 0xCCF000
	456 Move X23, [X25+32]
	457 Move X8, [X8+928]
	458 Move X22, X0
	459 Move X0, [X8]
	460 Call 0x1C17F10
	461 Move X20, X0
	462 Move X1, X23
	463 Move X2, X31
	464 Call UriBuilder..ctor, X0, X1
	465 Compare X20, 0
	466 JumpIfEqual {643}
	467 Move X0, X20
	468 Move X1, X22
	469 Move X2, X31
	470 Call UriBuilder.set_Path, X0, X1
	471 Move X0, X20
	472 Move X1, X21
	473 Move X2, X31
	474 Call UriBuilder.set_Query, X0, X1
	475 Move X0, X20
	476 Move X1, X31
	477 Call UriBuilder.get_Uri, X0
	478 Move X8, 0xCEF000
	479 Move X9, 0xCC7000
	480 Move X8, [X8+1232]
	481 Move X9, [X9+1744]
	482 Move X20, X0
	483 Move X21, [X8]
	484 Move X0, [X9]
	485 Call 0x1C17F10
	486 Move X8, 0xCC7000
	487 Move X8, [X8+1728]
	488 Move X22, X0
	489 Move X1, [X8]
	490 Call Dictionary`2<Object, Object>..ctor, X0
	491 Move X8, 0xD01000
	492 Move X1, [X19+80]
	493 Move X8, [X8+2008]
	494 Move X0, [X8]
	495 Move X2, X31
	496 Call String.Concat, X0, X1
	497 Compare X22, 0
	498 JumpIfEqual {644}
	499 Move X8, 0xD01000
	500 Move X8, [X8+2000]
	501 Move X9, 0xCC7000
	502 Move X9, [X9+2064]
	503 Move X2, X0
	504 Move X1, [X8]
	505 Move X3, [X9]
	506 Move X0, X22
	507 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	508 Move X24, [X25+16]
	509 Compare X24, 0
	510 JumpIfEqual {645}
	511 Move X10, 0xD01000
	512 Move W23, [X25+24]
	513 Move X8, [X24]
	514 Move X26, [X19+88]
	515 Move X25, [X19+96]
	516 Move X10, [X10+1976]
	517 NotImplemented "Instruction LDRH not yet implemented."
	518 Move X1, [X10]
	519 Compare X9, 0
	520 JumpIfEqual {527}
	521 Move X10, [X8+176]
	522 Add X10, X10, 8
	523 NotImplemented "Instruction LDUR not yet implemented."
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Subtract X9, X9, 1
	526 Add X10, X10, 16
	527 Move W2, 3
	528 Move X0, X24
	529 Call 0x1C5D788
	530 Move W9, [X10]
	531 Add W9, W9, 3
	532 Add X8, X8, W9
	533 Add X0, X8, 312
	534 Move X8, [X0]
	535 Move X9, [X0+8]
	536 Move X0, X24
	537 Move X1, X21
	538 Move X2, X20
	539 Move X3, X22
	540 Move X4, X31
	541 Move W5, W23
	542 Move X6, X26
	543 Move X7, X25
	544 Move [X31], X9
	545 NotImplemented "Instruction BLR not yet implemented."
	546 Compare X0, 0
	547 JumpIfEqual {646}
	548 Move X8, 0xCC8000
	549 Move X8, [X8+504]
	550 Move X1, [X8]
	551 Call Task`1<Object>.GetAwaiter, X0
	552 Move X8, 0xCC8000
	553 Move X8, [X8+496]
	554 Move [X31+40], X0
	555 Move X1, [X8]
	556 Add X0, X31, 40
	557 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	558 Move TEMP, X0
	559 And TEMP, TEMP, 1
	560 Compare TEMP, 1
	561 JumpIfNotEqual {587}
	562 Move X8, 0xCC8000
	563 Move X8, [X8+480]
	564 Add X0, X31, 40
	565 Move X1, [X8]
	566 Call TaskAwaiter`1<Object>.GetResult, X0
	567 Move X8, 0xD01000
	568 Move X8, [X8+8]
	569 Move X1, [X8]
	570 Call JsonParser.FromJson, X0
	571 Move TEMP, 1
	572 Not TEMP
	573 Move W8, TEMP
	574 Move [X19+8], W8
	575 Move X20, X0
	576 Move X0, [X27]
	577 Move X21, 0xD01000
	578 Move W8, [X0+224]
	579 Move X21, [X21]
	580 Compare W8, 0
	581 JumpIfNotEqual {583}
	582 Call 0x1C17DFC
	583 Move X2, [X21]
	584 Move X0, X19
	585 Move X1, X20
	586 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	587 Move [X19], W31
	588 Move X8, [X31+40]
	589 Move [X19+104], X8
	590 Move X0, [X27]
	591 Move W8, [X0+224]
	592 Compare W8, 0
	593 JumpIfNotEqual {595}
	594 Call 0x1C17DFC
	595 Move X8, 0xD01000
	596 Move X8, [X8+72]
	597 Add X0, X19, 8
	598 Move X3, [X8]
	599 Add X1, X31, 40
	600 Move X2, X19
	601 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	602 Move X20, [X31+128]
	603 Move X19, [X31+136]
	604 Move X22, [X31+112]
	605 Move X21, [X31+120]
	606 Move X24, [X31+96]
	607 Move X23, [X31+104]
	608 Move X26, [X31+80]
	609 Move X25, [X31+88]
	610 Move X28, [X31+64]
	611 Move X27, [X31+72]
	612 Move X29, [X31+48]
	613 Move X30, [X31+56]
	614 Add X31, X31, 144
	615 Return 
	616 Call 0x1C17F20
	617 Move X0, 0xCCD000
	618 Move X0, [X0+1400]
	619 Call 0x1C17D08
	620 Call 0x1C17F10
	621 Move X20, X0
	622 Move X0, 0xD00000
	623 Move X0, [X0+3120]
	624 Call 0x1C17D08
	625 Move X1, X0
	626 Move X0, X20
	627 Move X2, X31
	628 Call ArgumentException..ctor, X0, X1
	629 Move X0, 0xD01000
	630 Move X0, [X0+88]
	631 Call 0x1C17D08
	632 Move X1, X0
	633 Move X0, X20
	634 Call 0x1C17DEC
	635 Call 0x1C17F20
	636 Move X0, X23
	637 Call 0x1C17F18
	638 Call 0x1C17F20
	639 Call 0x1C17F20
	640 Call 0x1C17F20
	641 Call 0x1C17F28
	642 Call 0x1C17F20
	643 Call 0x1C17F20
	644 Call 0x1C17F20
	645 Call 0x1C17F20
	646 Call 0x1C17F20
	647 Call 0x1C17F20
	648 Call 0x1C17F28
	649 Call 0x1C17F28
	650 Call 0x1C17F28
	651 Call 0x1C17F28
	652 Call 0x1C17F20
	653 Call 0x1C17F44
	654 Move X1, X31
	655 Call 0x1C17DEC
	656 Call 0x1C17F44
	657 Move X1, X31
	658 Call 0x1C17DEC
	659 Call 0x1C17F44
	660 Move X1, X31
	661 Call 0x1C17DEC
	662 Call 0x1C17F44
	663 Move X1, X31
	664 Call 0x1C17DEC
	665 Move X20, X1
	666 Move X21, X0
	667 Move X21, X29
	668 NotImplemented "Instruction CMP not yet implemented."
	669 Call 0x3EB2AD0
	670 Move X23, [X0]
	671 Call 0x3EB2AE0
	672 Move W20, W31
	673 Move X21, X0
	674 Move X20, X1
	675 Move X23, X31
	676 Move TEMP, X28
	677 And TEMP, TEMP, -2147483648
	678 Compare TEMP, -2147483648
	679 JumpIfNotEqual {705}
	680 Compare X22, 0
	681 JumpIfEqual {705}
	682 Move X10, 0xCC5000
	683 Move X8, [X22]
	684 Move X10, [X10+3584]
	685 NotImplemented "Instruction LDRH not yet implemented."
	686 Move X1, [X10]
	687 Compare X9, 0
	688 JumpIfEqual {695}
	689 Move X10, [X8+176]
	690 Add X10, X10, 8
	691 NotImplemented "Instruction LDUR not yet implemented."
	692 NotImplemented "Instruction CMP not yet implemented."
	693 Subtract X9, X9, 1
	694 Add X10, X10, 16
	695 Move X0, X22
	696 Move W2, W31
	697 Call 0x1C5D788
	698 NotImplemented "Instruction LDRSW not yet implemented."
	699 Add X8, X8, X9
	700 Add X0, X8, 312
	701 Move X8, [X0]
	702 Move X1, [X0+8]
	703 Move X0, X22
	704 NotImplemented "Instruction BLR not yet implemented."
	705 Compare X23, 0
	706 JumpIfNotEqual {749}
	707 NotImplemented "Instruction CMP not yet implemented."
	708 Move X0, X21
	709 Call 0x3EB2AD0
	710 Move X20, X0
	711 Move X0, 0xCC5000
	712 Move X0, [X0+2000]
	713 Call 0x1C17D08
	714 Move X8, [X20]
	715 Move X1, [X8]
	716 Call 0x1C18270
	717 Move TEMP, X0
	718 And TEMP, TEMP, 1
	719 Compare TEMP, 1
	720 JumpIfNotEqual {741}
	721 Move X20, [X20]
	722 Call 0x3EB2AE0
	723 Move TEMP, 1
	724 Not TEMP
	725 Move W8, TEMP
	726 Move [X19+8], W8
	727 Move X0, 0xD00000
	728 Move X0, [X0+1496]
	729 Call 0x1C17D08
	730 Move W8, [X0+224]
	731 Compare W8, 0
	732 JumpIfNotEqual {734}
	733 Call 0x1C17DFC
	734 Move X0, 0xD01000
	735 Move X0, [X0+56]
	736 Call 0x1C17D08
	737 Move X2, X0
	738 Move X0, X19
	739 Move X1, X20
	740 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	741 Move W0, 8
	742 Call 0x3EB2AF0
	743 Move X8, [X20]
	744 Move [X0], X8
	745 Move X1, 0xA86000
	746 Add X1, X1, 3672
	747 Move X2, X31
	748 Call 0x3EB2B00
	749 Move X0, X23
	750 Call 0x1C17F18
	751 Move X20, X1
	752 Move X21, X0
	753 Move TEMP, X28
	754 And TEMP, TEMP, -2147483648
	755 Compare TEMP, -2147483648
	756 JumpIfEqual {680}
	757 Move X21, X0
	758 Call 0x3EB2AE0
	759 Move X0, X21
	760 Call 0x1D2D690
	761 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0342F3D0 LDR X9, [X9 + 0x810]
	0x0342F3D4 MOV X2, X0
	0x0342F3D8 LDR X1, [X8]
	0x0342F3DC LDR X3, [X9]
	0x0342F3E0 MOV X0, X22
	0x0342F3E4 BL 0x2AA5098
	0x0342F3E8 LDR X23, [X24 + 0x10]
	0x0342F3EC CBZ X23, 0x342F590
	0x0342F3F0 ADRP X10, 0xCFF000
	0x0342F3F4 LDR X10, [X10 + 0x7B8]
	0x0342F3F8 LDR X8, [X23]
	0x0342F3FC LDR W25, [X24 + 0x18]
	0x0342F400 LDP X26, X24, [X19 + 0x40]
	0x0342F404 LDR X1, [X10]
	0x0342F408 LDRH W9, [X8 + 0x12E]
	0x0342F40C CBZ X9, 0x342F430
	0x0342F410 LDR X10, [X8 + 0xB0]
	0x0342F414 ADD X10, X10, 0x8
	0x0342F418 LDUR X11, [X10 - 0x8]
	0x0342F41C CMP X11, X1
	0x0342F420 B.EQ 0x342F458
	0x0342F424 SUBS X9, X9, 0x1
	0x0342F428 ADD X10, X10, 0x10
	0x0342F42C B.NE 0x342F418
	0x0342F430 MOVZ W2, 0x3
	0x0342F434 MOV X0, X23
	0x0342F438 BL 0x1C5C788
	0x0342F43C B 0x342F468
	0x0342F440 LDR X8, [X19 + 0x50]
	0x0342F444 MOVN W9, 0x0
	0x0342F448 STR X8, [X31 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFAF000
	007 Move X21, 0xD00000
	008 Move W8, [X22+1622]
	009 Move X21, [X21+1496]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD01000
	017 Move X0, [X0+64]
	018 Call 0x1C17CF4
	019 Move X0, 0xD00000
	020 Move X0, [X0+1496]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1622], W8
	024 Move X0, [X21]
	025 Move X21, 0xD01000
	026 Move W8, [X0+224]
	027 Move X21, [X21+64]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

