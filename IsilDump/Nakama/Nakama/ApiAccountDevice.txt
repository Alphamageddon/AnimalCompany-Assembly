Type: Nakama.ApiAccountDevice

Method: System.String get_Id()

Disassembly:
	0x03402F64 MOV X0, X20
	0x03402F68 BLR X8

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Id(System.String value)

Disassembly:
	0x03402F6C CBNZ X22, 0x3402F78
	0x03402F70 MOV X0, X19

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x03402F74 BL 0x1D2C690
	0x03402F78 MOV X0, X22
	0x03402F7C BL 0x1C16F18
	0x03402F80 BL 0x1990590
	0x03402F84 MOV X1, X31
	0x03402F88 B 0x33BDD8C
	0x03402F8C LDR X0, [X0 + 0x10]
	0x03402F90 RET
	0x03402F94 STR X1, [X0 + 0x10]
	0x03402F98 RET
	0x03402F9C STR X30, [X31 - 0x20]!
	0x03402FA0 STP X20, X19, [X31 + 0x10]
	0x03402FA4 ADRP X20, 0xFDB000
	0x03402FA8 LDRB W8, [X20 + 0x519]
	0x03402FAC MOV X19, X0
	0x03402FB0 TBNZ X8, 0x0, 0x3402FD4
	0x03402FB4 ADRP X0, 0xCF2000
	0x03402FB8 LDR X0, [X0 + 0x6C0]
	0x03402FBC BL 0x1C16CF4
	0x03402FC0 ADRP X0, 0xCF2000
	0x03402FC4 LDR X0, [X0 + 0x6D0]
	0x03402FC8 BL 0x1C16CF4
	0x03402FCC MOVZ W8, 0x1
	0x03402FD0 STRB W8, [X20 + 0x519]
	0x03402FD4 LDR X19, [X19 + 0x18]
	0x03402FD8 CBNZ X19, 0x3403000
	0x03402FDC ADRP X8, 0xCF2000
	0x03402FE0 LDR X8, [X8 + 0x6D0]
	0x03402FE4 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFDC000
	005 Move W8, [X20+1299]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCF3000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCF3000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1299], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCF3000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCF3000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x03402FE8 BL 0x1C16F10
	0x03402FEC ADRP X8, 0xCF2000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03402FF0 LDR X8, [X8 + 0x6C0]
	0x03402FF4 MOV X19, X0

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03402FF8 LDR X1, [X8]
	0x03402FFC BL 0x2AA4804
	0x03403000 MOV X0, X19
	0x03403004 LDP X20, X19, [X31 + 0x10]
	0x03403008 LDR X30, [X31], #0x20
	0x0340300C RET
	0x03403010 LDR X0, [X0 + 0x18]
	0x03403014 RET
	0x03403018 STR X1, [X0 + 0x18]
	0x0340301C RET
	0x03403020 SUB X31, X31, 0x70
	0x03403024 STP X29, X30, [X31 + 0x10]
	0x03403028 STP X28, X27, [X31 + 0x20]
	0x0340302C STP X26, X25, [X31 + 0x30]
	0x03403030 STP X24, X23, [X31 + 0x40]
	0x03403034 STP X22, X21, [X31 + 0x50]
	0x03403038 STP X20, X19, [X31 + 0x60]
	0x0340303C ADRP X23, 0xFDA000
	0x03403040 ADRP X19, 0xCF0000
	0x03403044 ADRP X21, 0xD2A000
	0x03403048 ADRP X22, 0xCF0000
	0x0340304C LDRB W8, [X23 + 0x51A]
	0x03403050 LDR X19, [X19 + 0x988]
	0x03403054 LDR X21, [X21 + 0xD98]
	0x03403058 LDR X22, [X22 + 0x838]
	0x0340305C MOV X20, X0
	0x03403060 TBNZ X8, 0x0, 0x3403120
	0x03403064 ADRP X0, 0xCF0000
	0x03403068 LDR X0, [X0 + 0xE00]
	0x0340306C BL 0x1C16CF4
	0x03403070 ADRP X0, 0xCF3000
	0x03403074 LDR X0, [X0 + 0x190]
	0x03403078 BL 0x1C16CF4
	0x0340307C ADRP X0, 0xCF3000
	0x03403080 LDR X0, [X0 + 0x198]
	0x03403084 BL 0x1C16CF4
	0x03403088 ADRP X0, 0xCF0000
	0x0340308C LDR X0, [X0 + 0xE18]
	0x03403090 BL 0x1C16CF4
	0x03403094 ADRP X0, 0xCF3000
	0x03403098 LDR X0, [X0 + 0x1B0]
	0x0340309C BL 0x1C16CF4
	0x034030A0 ADRP X0, 0xCF3000
	0x034030A4 LDR X0, [X0 + 0x1B8]
	0x034030A8 BL 0x1C16CF4
	0x034030AC ADRP X0, 0xCF0000
	0x034030B0 LDR X0, [X0 + 0xAC8]
	0x034030B4 BL 0x1C16CF4
	0x034030B8 ADRP X0, 0xD1D000
	0x034030BC LDR X0, [X0 + 0x360]
	0x034030C0 BL 0x1C16CF4
	0x034030C4 ADRP X0, 0xD1D000
	0x034030C8 LDR X0, [X0 + 0xFB8]
	0x034030CC BL 0x1C16CF4
	0x034030D0 ADRP X0, 0xD2A000
	0x034030D4 LDR X0, [X0 + 0xD98]
	0x034030D8 BL 0x1C16CF4
	0x034030DC ADRP X0, 0xCFB000
	0x034030E0 LDR X0, [X0 + 0x6D8]
	0x034030E4 BL 0x1C16CF4
	0x034030E8 ADRP X0, 0xD2A000
	0x034030EC LDR X0, [X0 + 0xD80]
	0x034030F0 BL 0x1C16CF4
	0x034030F4 ADRP X0, 0xCF0000
	0x034030F8 LDR X0, [X0 + 0x838]
	0x034030FC BL 0x1C16CF4
	0x03403100 ADRP X0, 0xCF0000
	0x03403104 LDR X0, [X0 + 0x988]
	0x03403108 BL 0x1C16CF4
	0x0340310C ADRP X0, 0xCF0000
	0x03403110 LDR X0, [X0 + 0x848]
	0x03403114 BL 0x1C16CF4
	0x03403118 MOVZ W8, 0x1
	0x0340311C STRB W8, [X23 + 0x51A]
	0x03403120 LDR X0, [X19]
	0x03403124 LDR X2, [X20 + 0x10]
	0x03403128 LDR X1, [X21]
	0x0340312C LDR X3, [X22]
	0x03403130 MOV X4, X31
	0x03403134 BL 0x32277C4
	0x03403138 LDR X27, [X19]
	0x0340313C STR X0, [X31 + 0x8]
	0x03403140 MOV X0, X20
	0x03403144 BL 0x3402F9C
	0x03403148 CBZ X0, 0x34033F8
	0x0340314C ADRP X10, 0xCF3000
	0x03403150 LDR X8, [X0]
	0x03403154 LDR X10, [X10 + 0x190]
	0x03403158 MOV X20, X0
	0x0340315C LDRH W9, [X8 + 0x12E]
	0x03403160 LDR X1, [X10]
	0x03403164 CBZ X9, 0x3403188
	0x03403168 LDR X10, [X8 + 0xB0]
	0x0340316C ADD X10, X10, 0x8
	0x03403170 LDUR X11, [X10 - 0x8]
	0x03403174 CMP X11, X1
	0x03403178 B.EQ 0x3403198
	0x0340317C SUBS X9, X9, 0x1
	0x03403180 ADD X10, X10, 0x10
	0x03403184 B.NE 0x3403170
	0x03403188 MOV X0, X20
	0x0340318C MOV W2, W31
	0x03403190 BL 0x1C5C788
	0x03403194 B 0x34031A4
	0x03403198 LDRSW X9, [X10]
	0x0340319C ADD X8, X8, X9, 0x4, LSL
	0x034031A0 ADD X0, X8, 0x138
	0x034031A4 ADRP X28, 0xCF0000
	0x034031A8 ADRP X29, 0xCF3000
	0x034031AC ADRP X26, 0xCF0000
	0x034031B0 ADRP X24, 0xD1D000
	0x034031B4 ADRP X25, 0xD1D000
	0x034031B8 ADRP X19, 0xCFB000
	0x034031BC LDR X28, [X28 + 0xE18]
	0x034031C0 LDR X29, [X29 + 0x198]
	0x034031C4 LDR X26, [X26 + 0xAC8]
	0x034031C8 LDR X24, [X24 + 0x360]
	0x034031CC LDR X25, [X25 + 0xFB8]
	0x034031D0 LDR X19, [X19 + 0x6D8]
	0x034031D4 LDP X8, X1, [X0]
	0x034031D8 MOV X0, X20
	0x034031DC BLR X8
	0x034031E0 MOV X20, X0
	0x034031E4 MOV X0, X27
	0x034031E8 CBZ X20, 0x34033DC
	0x034031EC LDR X8, [X20]
	0x034031F0 LDR X1, [X28]
	0x034031F4 MOV X21, X0
	0x034031F8 LDRH W9, [X8 + 0x12E]
	0x034031FC CBZ X9, 0x3403220
	0x03403200 LDR X10, [X8 + 0xB0]
	0x03403204 ADD X10, X10, 0x8
	0x03403208 LDUR X11, [X10 - 0x8]
	0x0340320C CMP X11, X1
	0x03403210 B.EQ 0x3403230
	0x03403214 SUBS X9, X9, 0x1
	0x03403218 ADD X10, X10, 0x10
	0x0340321C B.NE 0x3403208
	0x03403220 MOV X0, X20
	0x03403224 MOV W2, W31
	0x03403228 BL 0x1C5C788
	0x0340322C B 0x340323C
	0x03403230 LDRSW X9, [X10]
	0x03403234 ADD X8, X8, X9, 0x4, LSL
	0x03403238 ADD X0, X8, 0x138
	0x0340323C LDP X8, X1, [X0]
	0x03403240 MOV X0, X20
	0x03403244 BLR X8
	0x03403248 TBZ X0, 0x0, 0x3403320
	0x0340324C LDR X8, [X20]
	0x03403250 LDR X1, [X29]
	0x03403254 LDRH W9, [X8 + 0x12E]
	0x03403258 CBZ X9, 0x340327C
	0x0340325C LDR X10, [X8 + 0xB0]
	0x03403260 ADD X10, X10, 0x8
	0x03403264 LDUR X11, [X10 - 0x8]
	0x03403268 CMP X11, X1
	0x0340326C B.EQ 0x340328C
	0x03403270 SUBS X9, X9, 0x1
	0x03403274 ADD X10, X10, 0x10
	0x03403278 B.NE 0x3403264
	0x0340327C MOV X0, X20
	0x03403280 MOV W2, W31
	0x03403284 BL 0x1C5C788
	0x03403288 B 0x3403298
	0x0340328C LDRSW X9, [X10]
	0x03403290 ADD X8, X8, X9, 0x4, LSL
	0x03403294 ADD X0, X8, 0x138
	0x03403298 LDP X8, X1, [X0]
	0x0340329C MOV X0, X20
	0x034032A0 BLR X8
	0x034032A4 MOV X23, X0
	0x034032A8 LDR X0, [X26]
	0x034032AC MOV X22, X1
	0x034032B0 MOVZ W1, 0x5
	0x034032B4 BL 0x1C16D6C
	0x034032B8 CBZ X0, 0x34033E4
	0x034032BC LDR W8, [X0 + 0x18]
	0x034032C0 CBZ W8, 0x34033EC
	0x034032C4 LDR X9, [X24]
	0x034032C8 CMP W8, 0x1
	0x034032CC STR X9, [X0 + 0x20]
	0x034032D0 B.EQ 0x34033E0
	0x034032D4 CMP W8, 0x2
	0x034032D8 STR X23, [X0 + 0x28]
	0x034032DC B.LS 0x34033F0
	0x034032E0 LDR X9, [X25]
	0x034032E4 CMP W8, 0x3
	0x034032E8 STR X9, [X0 + 0x30]
	0x034032EC B.EQ 0x34033F4
	0x034032F0 CMP W8, 0x4
	0x034032F4 STR X22, [X0 + 0x38]
	0x034032F8 B.LS 0x34033E8
	0x034032FC LDR X8, [X19]
	0x03403300 STR X8, [X0 + 0x40]
	0x03403304 MOV X1, X31
	0x03403308 BL 0x32278CC
	0x0340330C MOV X1, X0
	0x03403310 MOV X0, X21
	0x03403314 MOV X2, X31
	0x03403318 BL 0x321B938
	0x0340331C B 0x34031E8
	0x03403320 MOV X22, X31
	0x03403324 CBZ X20, 0x3403388
	0x03403328 LDR X8, [X20]
	0x0340332C ADRP X10, 0xCF0000
	0x03403330 LDRH W9, [X8 + 0x12E]
	0x03403334 LDR X10, [X10 + 0xE00]
	0x03403338 LDR X1, [X10]
	0x0340333C CBZ X9, 0x3403360
	0x03403340 LDR X10, [X8 + 0xB0]
	0x03403344 ADD X10, X10, 0x8
	0x03403348 LDUR X11, [X10 - 0x8]
	0x0340334C CMP X11, X1
	0x03403350 B.EQ 0x3403370
	0x03403354 SUBS X9, X9, 0x1
	0x03403358 ADD X10, X10, 0x10
	0x0340335C B.NE 0x3403348
	0x03403360 MOV X0, X20
	0x03403364 MOV W2, W31
	0x03403368 BL 0x1C5C788
	0x0340336C B 0x340337C
	0x03403370 LDRSW X9, [X10]
	0x03403374 ADD X8, X8, X9, 0x4, LSL
	0x03403378 ADD X0, X8, 0x138
	0x0340337C LDP X8, X1, [X0]
	0x03403380 MOV X0, X20
	0x03403384 BLR X8
	0x03403388 CBNZ X22, 0x34033FC
	0x0340338C ADRP X8, 0xD2A000
	0x03403390 LDR X8, [X8 + 0xD80]
	0x03403394 MOV X1, X21
	0x03403398 MOV X3, X31
	0x0340339C LDR X0, [X8]
	0x034033A0 ADRP X8, 0xCF0000
	0x034033A4 LDR X8, [X8 + 0x848]
	0x034033A8 LDR X2, [X8]
	0x034033AC BL 0x32274B8
	0x034033B0 MOV X1, X0
	0x034033B4 LDR X0, [X31 + 0x8]
	0x034033B8 LDP X20, X19, [X31 + 0x60]
	0x034033BC LDP X22, X21, [X31 + 0x50]
	0x034033C0 LDP X24, X23, [X31 + 0x40]
	0x034033C4 LDP X26, X25, [X31 + 0x30]
	0x034033C8 LDP X28, X27, [X31 + 0x20]
	0x034033CC LDP X29, X30, [X31 + 0x10]
	0x034033D0 MOV X2, X31
	0x034033D4 ADD X31, X31, 0x70
	0x034033D8 B 0x321B938
	0x034033DC BL 0x1C16F20
	0x034033E0 BL 0x1C16F28
	0x034033E4 BL 0x1C16F20
	0x034033E8 BL 0x1C16F28
	0x034033EC BL 0x1C16F28
	0x034033F0 BL 0x1C16F28
	0x034033F4 BL 0x1C16F28
	0x034033F8 BL 0x1C16F20
	0x034033FC MOV X0, X22
	0x03403400 BL 0x1C16F18
	0x03403404 B 0x3403430
	0x03403408 B 0x3403430
	0x0340340C B 0x3403430
	0x03403410 B 0x3403430
	0x03403414 B 0x3403430
	0x03403418 B 0x3403430
	0x0340341C B 0x3403430
	0x03403420 MOV X21, X27
	0x03403424 B 0x3403430
	0x03403428 B 0x3403430
	0x0340342C B 0x3403430
	0x03403430 CMP W1, 0x1
	0x03403434 B.NE 0x3403448
	0x03403438 BL 0x3EB1AD0
	0x0340343C LDR X22, [X0]
	0x03403440 BL 0x3EB1AE0
	0x03403444 B 0x3403324
	0x03403448 MOV X19, X0
	0x0340344C MOV X22, X31
	0x03403450 B 0x3403458
	0x03403454 MOV X19, X0
	0x03403458 CBZ X20, 0x34034BC
	0x0340345C LDR X8, [X20]
	0x03403460 ADRP X10, 0xCF0000
	0x03403464 LDRH W9, [X8 + 0x12E]
	0x03403468 LDR X10, [X10 + 0xE00]
	0x0340346C LDR X1, [X10]
	0x03403470 CBZ X9, 0x3403494
	0x03403474 LDR X10, [X8 + 0xB0]
	0x03403478 ADD X10, X10, 0x8
	0x0340347C LDUR X11, [X10 - 0x8]
	0x03403480 CMP X11, X1
	0x03403484 B.EQ 0x34034A4
	0x03403488 SUBS X9, X9, 0x1
	0x0340348C ADD X10, X10, 0x10
	0x03403490 B.NE 0x340347C
	0x03403494 MOV X0, X20
	0x03403498 MOV W2, W31
	0x0340349C BL 0x1C5C788
	0x034034A0 B 0x34034B0
	0x034034A4 LDRSW X9, [X10]
	0x034034A8 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xFDB000
	015 Move X19, 0xCF1000
	016 Move X21, 0xD2B000
	017 Move X22, 0xCF1000
	018 Move W8, [X23+1300]
	019 Move X19, [X19+2440]
	020 Move X21, [X21+3464]
	021 Move X22, [X22+2104]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xCF1000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xCF4000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0xCF4000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0xCF1000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCF4000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xCF4000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xCF1000
	046 Move X0, [X0+2760]
	047 Call 0x1C17CF4
	048 Move X0, 0xD1E000
	049 Move X0, [X0+864]
	050 Call 0x1C17CF4
	051 Move X0, 0xD1E000
	052 Move X0, [X0+4024]
	053 Call 0x1C17CF4
	054 Move X0, 0xD2B000
	055 Move X0, [X0+3464]
	056 Call 0x1C17CF4
	057 Move X0, 0xCFC000
	058 Move X0, [X0+1752]
	059 Call 0x1C17CF4
	060 Move X0, 0xD2B000
	061 Move X0, [X0+3456]
	062 Call 0x1C17CF4
	063 Move X0, 0xCF1000
	064 Move X0, [X0+2104]
	065 Call 0x1C17CF4
	066 Move X0, 0xCF1000
	067 Move X0, [X0+2440]
	068 Call 0x1C17CF4
	069 Move X0, 0xCF1000
	070 Move X0, [X0+2120]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+1300], W8
	074 Move X0, [X19]
	075 Move X2, [X20+16]
	076 Move X1, [X21]
	077 Move X3, [X22]
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X27, [X19]
	081 Move [X31+8], X0
	082 Move X0, X20
	083 Call ApiAccountDevice.get_Vars, X0
	084 Compare X0, 0
	085 JumpIfEqual {263}
	086 Move X10, 0xCF4000
	087 Move X8, [X0]
	088 Move X10, [X10+400]
	089 Move X20, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X28, 0xCF1000
	107 Move X29, 0xCF4000
	108 Move X26, 0xCF1000
	109 Move X24, 0xD1E000
	110 Move X25, 0xD1E000
	111 Move X19, 0xCFC000
	112 Move X28, [X28+3608]
	113 Move X29, [X29+408]
	114 Move X26, [X26+2760]
	115 Move X24, [X24+864]
	116 Move X25, [X25+4024]
	117 Move X19, [X19+1752]
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, X0
	123 Move X0, X27
	124 Compare X20, 0
	125 JumpIfEqual {256}
	126 Move X8, [X20]
	127 Move X1, [X28]
	128 Move X21, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {201}
	152 Move X8, [X20]
	153 Move X1, [X29]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X23, X0
	174 Move X0, [X26]
	175 Move X22, X1
	176 Move W1, 5
	177 Call 0x1C17D6C
	178 Compare X0, 0
	179 JumpIfEqual {258}
	180 Move W8, [X0+24]
	181 Compare W8, 0
	182 JumpIfEqual {260}
	183 Move X9, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+32], X9
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X0+40], X23
	188 Move X9, [X25]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X0+48], X9
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X0+56], X22
	193 Move X8, [X19]
	194 Move [X0+64], X8
	195 Move X1, X31
	196 Call String.Concat, X0
	197 Move X1, X0
	198 Move X0, X21
	199 Move X2, X31
	200 Call String.Concat, X0, X1
	201 Move X22, X31
	202 Compare X20, 0
	203 JumpIfEqual {227}
	204 Move X8, [X20]
	205 Move X10, 0xCF1000
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X10, [X10+3584]
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X20
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X22, 0
	228 JumpIfNotEqual {264}
	229 Move X8, 0xD2B000
	230 Move X8, [X8+3456]
	231 Move X1, X21
	232 Move X3, X31
	233 Move X0, [X8]
	234 Move X8, 0xCF1000
	235 Move X8, [X8+2120]
	236 Move X2, [X8]
	237 Call String.Concat, X0, X1, X2
	238 Move X1, X0
	239 Move X0, [X31+8]
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Move X2, X31
	253 Add X31, X31, 112
	254 Call String.Concat, X0, X1
	255 Return X0
	256 Call 0x1C17F20
	257 Call 0x1C17F28
	258 Call 0x1C17F20
	259 Call 0x1C17F28
	260 Call 0x1C17F28
	261 Call 0x1C17F28
	262 Call 0x1C17F28
	263 Call 0x1C17F20
	264 Move X0, X22
	265 Call 0x1C17F18
	266 Move X21, X27
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X22, [X0]
	270 Call 0x3EB2AE0
	271 Move X19, X0
	272 Move X22, X31
	273 Move X19, X0
	274 Compare X20, 0
	275 JumpIfEqual {299}
	276 Move X8, [X20]
	277 Move X10, 0xCF1000
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X10, [X10+3584]
	280 Move X1, [X10]
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X20
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X22, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X19
	302 Call 0x1D2D690
	303 Move X0, X22
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x034034AC ADD X0, X8, 0x138
	0x034034B0 LDP X8, X1, [X0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

