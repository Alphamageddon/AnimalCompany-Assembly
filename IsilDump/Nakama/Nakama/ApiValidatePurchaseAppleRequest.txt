Type: Nakama.ApiValidatePurchaseAppleRequest

Method: System.Boolean get_Persist()

Disassembly:
	0x0340C824 ADRP X0, 0xD22000
	0x0340C828 LDR X0, [X0 + 0x30]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_Persist(System.Boolean value)

Disassembly:
	0x0340C82C BL 0x1C16CF4
	0x0340C830 ADRP X0, 0xD22000
	0x0340C834 LDR X0, [X0 + 0x270]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.String get_Receipt()

Disassembly:
	0x0340C838 BL 0x1C16CF4
	0x0340C83C ADRP X0, 0xCE7000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Receipt(System.String value)

Disassembly:
	0x0340C840 LDR X0, [X0 + 0x988]
	0x0340C844 BL 0x1C16CF4

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0340C848 ADRP X0, 0xD22000
	0x0340C84C LDR X0, [X0 + 0x278]
	0x0340C850 BL 0x1C16CF4
	0x0340C854 ADRP X0, 0xD22000
	0x0340C858 LDR X0, [X0 + 0x280]
	0x0340C85C BL 0x1C16CF4
	0x0340C860 MOVZ W8, 0x1
	0x0340C864 STRB W8, [X21 + 0x565]
	0x0340C868 LDR X0, [X24]
	0x0340C86C LDR X2, [X19 + 0x10]
	0x0340C870 LDR X1, [X20]
	0x0340C874 LDR X3, [X22]
	0x0340C878 MOV X4, X31
	0x0340C87C BL 0x32277C4
	0x0340C880 LDR X8, [X23]
	0x0340C884 MOV X21, X0
	0x0340C888 MOVZ W1, 0x4
	0x0340C88C MOV X0, X8
	0x0340C890 BL 0x1C16D6C
	0x0340C894 CBZ X0, 0x340CC4C
	0x0340C898 MOV X20, X0
	0x0340C89C CBZ X21, 0x340C8B4
	0x0340C8A0 LDR X8, [X20]
	0x0340C8A4 MOV X0, X21
	0x0340C8A8 LDR X1, [X8 + 0x40]
	0x0340C8AC BL 0x1C16E00
	0x0340C8B0 CBZ X0, 0x340CC40
	0x0340C8B4 LDR W8, [X20 + 0x18]
	0x0340C8B8 CBZ W8, 0x340CC3C
	0x0340C8BC ADRP X24, 0xD22000
	0x0340C8C0 LDR X24, [X24 + 0x268]
	0x0340C8C4 STR X21, [X20 + 0x20]
	0x0340C8C8 LDR X0, [X24]
	0x0340C8CC CBZ X0, 0x340C8E4
	0x0340C8D0 LDR X8, [X20]
	0x0340C8D4 LDR X1, [X8 + 0x40]
	0x0340C8D8 BL 0x1C16E00
	0x0340C8DC CBZ X0, 0x340CC40
	0x0340C8E0 LDR W8, [X20 + 0x18]
	0x0340C8E4 CMP W8, 0x1
	0x0340C8E8 B.LS 0x340CC3C
	0x0340C8EC LDR X8, [X24]
	0x0340C8F0 ADRP X9, 0xD22000
	0x0340C8F4 LDR X9, [X9 + 0x238]
	0x0340C8F8 ADD X1, X31, 0x1C
	0x0340C8FC STR X8, [X20 + 0x28]
	0x0340C900 LDR W8, [X19 + 0x18]
	0x0340C904 LDR X0, [X9]
	0x0340C908 STR W8, [X31 + 0x1C]
	0x0340C90C BL 0x1C16E04
	0x0340C910 MOV X21, X0
	0x0340C914 CBZ X0, 0x340C92C
	0x0340C918 LDR X8, [X20]
	0x0340C91C MOV X0, X21
	0x0340C920 LDR X1, [X8 + 0x40]
	0x0340C924 BL 0x1C16E00
	0x0340C928 CBZ X0, 0x340CC40
	0x0340C92C LDR W8, [X20 + 0x18]
	0x0340C930 CMP W8, 0x2
	0x0340C934 B.LS 0x340CC3C
	0x0340C938 STR X21, [X20 + 0x30]
	0x0340C93C LDR X0, [X22]
	0x0340C940 CBZ X0, 0x340C958
	0x0340C944 LDR X8, [X20]
	0x0340C948 LDR X1, [X8 + 0x40]
	0x0340C94C BL 0x1C16E00
	0x0340C950 CBZ X0, 0x340CC40
	0x0340C954 LDR W8, [X20 + 0x18]
	0x0340C958 CMP W8, 0x3
	0x0340C95C B.LS 0x340CC3C
	0x0340C960 ADRP X21, 0xD22000
	0x0340C964 LDR X21, [X21 + 0x280]
	0x0340C968 LDR X8, [X22]
	0x0340C96C ADRP X24, 0xD22000
	0x0340C970 ADRP X25, 0xD22000
	0x0340C974 ADRP X26, 0xD22000
	0x0340C978 LDR X24, [X24 + 0x270]
	0x0340C97C LDR X25, [X25 + 0x258]
	0x0340C980 LDR X26, [X26 + 0x278]
	0x0340C984 MOV X0, X20
	0x0340C988 MOV X1, X31
	0x0340C98C STR X8, [X20 + 0x38]
	0x0340C990 BL 0x3227578
	0x0340C994 LDR X2, [X19 + 0x20]
	0x0340C998 LDR X1, [X21]
	0x0340C99C LDR X3, [X22]
	0x0340C9A0 MOV X4, X31
	0x0340C9A4 BL 0x32277C4
	0x0340C9A8 LDR X2, [X19 + 0x28]
	0x0340C9AC LDR X1, [X24]
	0x0340C9B0 LDR X3, [X22]
	0x0340C9B4 MOV X4, X31
	0x0340C9B8 BL 0x32277C4
	0x0340C9BC LDR X2, [X19 + 0x30]
	0x0340C9C0 LDR X1, [X25]
	0x0340C9C4 LDR X3, [X22]
	0x0340C9C8 MOV X4, X31
	0x0340C9CC BL 0x32277C4
	0x0340C9D0 LDR X2, [X19 + 0x38]
	0x0340C9D4 LDR X1, [X26]
	0x0340C9D8 LDR X3, [X22]
	0x0340C9DC MOV X4, X31
	0x0340C9E0 BL 0x32277C4
	0x0340C9E4 LDR X8, [X23]
	0x0340C9E8 MOV X21, X0
	0x0340C9EC MOVZ W1, 0x4
	0x0340C9F0 MOV X0, X8
	0x0340C9F4 BL 0x1C16D6C
	0x0340C9F8 CBZ X0, 0x340CC4C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFD2000
	007 Move X21, 0xCE8000
	008 Move X22, 0xCE8000
	009 Move W8, [X20+1372]
	010 Move X21, [X21+2440]
	011 Move X22, [X22+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xCE8000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE8000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xD23000
	024 Move X0, [X0+496]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE8000
	027 Move X0, [X0+2104]
	028 Call 0x1C17CF4
	029 Move X0, 0xD23000
	030 Move X0, [X0+504]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE8000
	033 Move X0, [X0+2440]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+1372], W8
	037 Move X0, [X22]
	038 Move X21, [X21]
	039 Move W1, 4
	040 Call 0x1C17D6C
	041 Compare X0, 0
	042 JumpIfEqual {123}
	043 Move X20, X0
	044 Compare X21, 0
	045 JumpIfEqual {52}
	046 Move X8, [X20]
	047 Move X0, X21
	048 Move X1, [X8+64]
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfEqual {120}
	052 Move W8, [X20+24]
	053 Compare W8, 0
	054 JumpIfEqual {119}
	055 Move X22, 0xD23000
	056 Move X22, [X22+504]
	057 Move [X20+32], X21
	058 Move X0, [X22]
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X8, [X20]
	062 Move X1, [X8+64]
	063 Call 0x1C17E00
	064 Compare X0, 0
	065 JumpIfEqual {120}
	066 Move W8, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X22]
	069 Move X9, 0xCE8000
	070 Move X9, [X9+2904]
	071 Add X1, X31, 12
	072 Move [X20+40], X8
	073 Move W8, [X19+16]
	074 Move X0, [X9]
	075 Move [X31+12], W8
	076 Call 0x1C17E04
	077 Move X21, X0
	078 Compare X0, 0
	079 JumpIfEqual {86}
	080 Move X8, [X20]
	081 Move X0, X21
	082 Move X1, [X8+64]
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {120}
	086 Move W8, [X20+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X22, 0xCE8000
	089 Move X22, [X22+2104]
	090 Move [X20+48], X21
	091 Move X0, [X22]
	092 Compare X0, 0
	093 JumpIfEqual {100}
	094 Move X8, [X20]
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {120}
	099 Move W8, [X20+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X22]
	102 Move X21, 0xD23000
	103 Move X21, [X21+496]
	104 Move X0, X20
	105 Move X1, X31
	106 Move [X20+56], X8
	107 Call String.Concat, X0
	108 Move X2, [X19+24]
	109 Move X1, [X21]
	110 Move X3, [X22]
	111 Move X4, X31
	112 Call String.Concat, X0, X1, X2, X3
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move X30, [X31+48]
	118 Return X0
	119 Call 0x1C17F28
	120 Call 0x1C17F44
	121 Move X1, X31
	122 Call 0x1C17DEC
	123 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0340C9FC MOV X20, X0
	0x0340CA00 CBZ X21, 0x340CA18

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

