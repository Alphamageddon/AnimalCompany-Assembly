Type: Nakama.Client/<ListStorageObjectsAsync>d__91

Method: System.Void MoveNext()

Disassembly:
	0x03461E0C BL 0x1C16F10
	0x03461E10 MOV X21, X0
	0x03461E14 MOV X1, X31
	0x03461E18 BL 0x344B7A8
	0x03461E1C STR X21, [X19 + 0x70]
	0x03461E20 CBZ X21, 0x34629D8
	0x03461E24 LDR X8, [X19 + 0x20]
	0x03461E28 STR X8, [X21 + 0x10]
	0x03461E2C LDR X8, [X19 + 0x28]
	0x03461E30 STR X8, [X21 + 0x18]
	0x03461E34 LDR V0, [X19 + 0x3]
	0x03461E38 STR V0, [X21 + 0x2]
	0x03461E3C LDR W8, [X19 + 0x40]
	0x03461E40 STR W8, [X21 + 0x30]
	0x03461E44 LDUR V0, [X19 + 0x48]
	0x03461E48 STUR V0, [X21 + 0x38]
	0x03461E4C LDR X8, [X19 + 0x70]
	0x03461E50 CBZ X8, 0x34629DC
	0x03461E54 LDR X9, [X19 + 0x58]
	0x03461E58 STR X9, [X8 + 0x48]
	0x03461E5C LDR X9, [X19 + 0x60]
	0x03461E60 STR X9, [X8 + 0x50]
	0x03461E64 CBZ X20, 0x34629E0
	0x03461E68 LDRB W8, [X20 + 0x10]
	0x03461E6C CBZ W8, 0x346205C
	0x03461E70 LDR X8, [X19 + 0x70]
	0x03461E74 CBZ X8, 0x34629E4
	0x03461E78 LDR X21, [X8 + 0x18]
	0x03461E7C CBZ X21, 0x34629E8
	0x03461E80 ADRP X23, 0xC93000
	0x03461E84 LDR X8, [X21]
	0x03461E88 LDR X23, [X23 + 0x818]
	0x03461E8C LDRH W9, [X8 + 0x12E]
	0x03461E90 LDR X1, [X23]
	0x03461E94 CBZ X9, 0x3461EB8
	0x03461E98 LDR X10, [X8 + 0xB0]
	0x03461E9C ADD X10, X10, 0x8
	0x03461EA0 LDUR X11, [X10 - 0x8]
	0x03461EA4 CMP X11, X1
	0x03461EA8 B.EQ 0x3461EC8
	0x03461EAC SUBS X9, X9, 0x1
	0x03461EB0 ADD X10, X10, 0x10
	0x03461EB4 B.NE 0x3461EA0
	0x03461EB8 MOVZ W2, 0x7
	0x03461EBC MOV X0, X21
	0x03461EC0 BL 0x1C5C788
	0x03461EC4 B 0x3461ED8
	0x03461EC8 LDR W9, [X10]
	0x03461ECC ADD W9, W9, 0x7
	0x03461ED0 ADD X8, X8, W9, 0x4, SXTW
	0x03461ED4 ADD X0, X8, 0x138
	0x03461ED8 LDP X8, X1, [X0]
	0x03461EDC MOV X0, X21
	0x03461EE0 BLR X8
	0x03461EE4 MOV X1, X31
	0x03461EE8 BL 0x32277A8
	0x03461EEC TBNZ X0, 0x0, 0x3462058
	0x03461EF0 LDR X8, [X19 + 0x70]
	0x03461EF4 CBZ X8, 0x34629EC
	0x03461EF8 ADRP X9, 0xC93000
	0x03461EFC LDR X9, [X9 + 0x9F0]
	0x03461F00 LDR X21, [X8 + 0x18]
	0x03461F04 LDR X0, [X9]
	0x03461F08 LDR W9, [X0 + 0xE0]
	0x03461F0C CBNZ W9, 0x3461F14
	0x03461F10 BL 0x1C16DFC
	0x03461F14 MOV X0, X31
	0x03461F18 BL 0x33616A4
	0x03461F1C ADRP X22, 0xC94000
	0x03461F20 LDR X22, [X22 + 0xA10]
	0x03461F24 MOV X8, X0
	0x03461F28 STR X8, [X31 + 0x28]
	0x03461F2C LDR X0, [X22]
	0x03461F30 LDR W8, [X0 + 0xE0]
	0x03461F34 CBNZ W8, 0x3461F40
	0x03461F38 BL 0x1C16DFC
	0x03461F3C LDR X0, [X22]
	0x03461F40 LDR X8, [X0 + 0xB8]
	0x03461F44 LDR X1, [X8]
	0x03461F48 ADD X0, X31, 0x28
	0x03461F4C MOV X2, X31
	0x03461F50 BL 0x335FC68
	0x03461F54 CBZ X21, 0x34629F0
	0x03461F58 LDR X8, [X21]
	0x03461F5C LDR X1, [X23]
	0x03461F60 MOV X22, X0
	0x03461F64 LDRH W9, [X8 + 0x12E]
	0x03461F68 CBZ X9, 0x3461F8C
	0x03461F6C LDR X10, [X8 + 0xB0]
	0x03461F70 ADD X10, X10, 0x8
	0x03461F74 LDUR X11, [X10 - 0x8]
	0x03461F78 CMP X11, X1
	0x03461F7C B.EQ 0x3461F9C
	0x03461F80 SUBS X9, X9, 0x1
	0x03461F84 ADD X10, X10, 0x10
	0x03461F88 B.NE 0x3461F74
	0x03461F8C MOVZ W2, 0xB
	0x03461F90 MOV X0, X21
	0x03461F94 BL 0x1C5C788
	0x03461F98 B 0x3461FAC
	0x03461F9C LDR W9, [X10]
	0x03461FA0 ADD W9, W9, 0xB
	0x03461FA4 ADD X8, X8, W9, 0x4, SXTW
	0x03461FA8 ADD X0, X8, 0x138
	0x03461FAC LDP X8, X2, [X0]
	0x03461FB0 MOV X0, X21
	0x03461FB4 MOV X1, X22
	0x03461FB8 BLR X8
	0x03461FBC TBZ X0, 0x0, 0x3462058
	0x03461FC0 LDR X8, [X19 + 0x70]
	0x03461FC4 CBZ X8, 0x34629F4
	0x03461FC8 LDR X1, [X8 + 0x18]
	0x03461FCC LDR X3, [X19 + 0x68]
	0x03461FD0 LDR X4, [X8 + 0x50]
	0x03461FD4 MOV X0, X20
	0x03461FD8 MOV X2, X31
	0x03461FDC MOV X5, X31
	0x03461FE0 BL 0x34440A8
	0x03461FE4 CBZ X0, 0x34629F8
	0x03461FE8 ADRP X8, 0xC93000
	0x03461FEC LDR X8, [X8 + 0x840]
	0x03461FF0 LDR X1, [X8]
	0x03461FF4 BL 0x269F5D0
	0x03461FF8 ADRP X8, 0xC93000
	0x03461FFC LDR X8, [X8 + 0x838]
	0x03462000 STR X0, [X31 + 0x20]
	0x03462004 LDR X1, [X8]
	0x03462008 ADD X0, X31, 0x20
	0x0346200C BL 0x2677430
	0x03462010 TBNZ X0, 0x0, 0x3461DE8
	0x03462014 STR W31, [X19]
	0x03462018 LDR X8, [X31 + 0x20]
	0x0346201C STR X8, [X19 + 0x78]
	0x03462020 ADRP X8, 0xCCC000
	0x03462024 LDR X8, [X8 + 0x730]
	0x03462028 LDR X0, [X8]
	0x0346202C LDR W8, [X0 + 0xE0]
	0x03462030 CBNZ W8, 0x3462038
	0x03462034 BL 0x1C16DFC
	0x03462038 ADRP X8, 0xCCE000
	0x0346203C LDR X8, [X8 + 0x270]
	0x03462040 ADD X0, X19, 0x8
	0x03462044 LDR X3, [X8]
	0x03462048 ADD X1, X31, 0x20
	0x0346204C MOV X2, X19
	0x03462050 BL 0x1FBC700
	0x03462054 B 0x3462954
	0x03462058 CBZ X20, 0x34629C4
	0x0346205C ADRP X8, 0xCCE000
	0x03462060 LDR X8, [X8 + 0x278]
	0x03462064 LDR X21, [X20 + 0x58]
	0x03462068 LDR X23, [X19 + 0x70]
	0x0346206C LDR X0, [X8]
	0x03462070 BL 0x1C16F10
	0x03462074 ADRP X8, 0xCCE000
	0x03462078 LDR X8, [X8 + 0x2A8]
	0x0346207C MOV X22, X0
	0x03462080 LDR X2, [X8]
	0x03462084 MOV X1, X23
	0x03462088 MOV X3, X31
	0x0346208C BL 0x2D27AA8
	0x03462090 LDR X8, [X19 + 0x70]
	0x03462094 CBZ X8, 0x34629B8
	0x03462098 ADRP X9, 0xCCD000
	0x0346209C LDR X23, [X19 + 0x68]
	0x034620A0 LDR X24, [X8 + 0x18]
	0x034620A4 LDR X9, [X9 + 0x7C8]
	0x034620A8 CBNZ X23, 0x34620B0
	0x034620AC LDR X23, [X20 + 0x18]
	0x034620B0 LDR X1, [X8 + 0x50]
	0x034620B4 LDR X2, [X9]
	0x034620B8 STP X31, X31, [X31 + 0x8]
	0x034620BC ADD X0, X31, 0x8
	0x034620C0 BL 0x242E368
	0x034620C4 ADRP X8, 0xCCD000
	0x034620C8 LDR X8, [X8 + 0x7D0]
	0x034620CC LDR X0, [X8]
	0x034620D0 BL 0x1C16F10
	0x034620D4 LDP X3, X4, [X31 + 0x8]
	0x034620D8 MOV X20, X0
	0x034620DC MOV X1, X24
	0x034620E0 MOV X2, X23
	0x034620E4 MOV X5, X31
	0x034620E8 BL 0x3465404
	0x034620EC CBZ X21, 0x34629BC
	0x034620F0 ADRP X8, 0xCCE000
	0x034620F4 LDR X8, [X8 + 0x288]
	0x034620F8 LDR X3, [X8]
	0x034620FC MOV X0, X21
	0x03462100 MOV X1, X22
	0x03462104 MOV X2, X20
	0x03462108 BL 0x2243230
	0x0346210C CBZ X0, 0x34629C0
	0x03462110 ADRP X8, 0xCCE000
	0x03462114 LDR X8, [X8 + 0x2A0]
	0x03462118 LDR X1, [X8]
	0x0346211C BL 0x269F5D0
	0x03462120 ADRP X8, 0xCCE000
	0x03462124 LDR X8, [X8 + 0x298]
	0x03462128 STR X0, [X31 + 0x18]
	0x0346212C LDR X1, [X8]
	0x03462130 ADD X0, X31, 0x18
	0x03462134 BL 0x2677430
	0x03462138 TBZ X0, 0x0, 0x34621A0
	0x0346213C ADRP X8, 0xCCE000
	0x03462140 LDR X8, [X8 + 0x290]
	0x03462144 ADD X0, X31, 0x18
	0x03462148 LDR X1, [X8]
	0x0346214C BL 0x2677474
	0x03462150 MOV X20, X0
	0x03462154 CBZ X0, 0x34629A4
	0x03462158 ADRP X10, 0xCCE000
	0x0346215C LDR X8, [X20]
	0x03462160 LDR X10, [X10 + 0x280]
	0x03462164 LDRH W9, [X8 + 0x12E]
	0x03462168 LDR X1, [X10]
	0x0346216C CBZ X9, 0x3462190
	0x03462170 LDR X10, [X8 + 0xB0]
	0x03462174 ADD X10, X10, 0x8
	0x03462178 LDUR X11, [X10 - 0x8]
	0x0346217C CMP X11, X1
	0x03462180 B.EQ 0x34621E8
	0x03462184 SUBS X9, X9, 0x1
	0x03462188 ADD X10, X10, 0x10
	0x0346218C B.NE 0x3462178
	0x03462190 MOVZ W2, 0x4
	0x03462194 MOV X0, X20
	0x03462198 BL 0x1C5C788
	0x0346219C B 0x34621F8
	0x034621A0 MOVZ W8, 0x1
	0x034621A4 STR W8, [X19]
	0x034621A8 LDR X8, [X31 + 0x18]
	0x034621AC STR X8, [X19 + 0x80]
	0x034621B0 ADRP X8, 0xCCC000
	0x034621B4 LDR X8, [X8 + 0x730]
	0x034621B8 LDR X0, [X8]
	0x034621BC LDR W8, [X0 + 0xE0]
	0x034621C0 CBNZ W8, 0x34621C8
	0x034621C4 BL 0x1C16DFC
	0x034621C8 ADRP X8, 0xCCE000
	0x034621CC LDR X8, [X8 + 0x268]
	0x034621D0 ADD X0, X19, 0x8
	0x034621D4 LDR X3, [X8]
	0x034621D8 ADD X1, X31, 0x18
	0x034621DC MOV X2, X19
	0x034621E0 BL 0x1FBC700
	0x034621E4 B 0x3462954
	0x034621E8 LDR W9, [X10]
	0x034621EC ADD W9, W9, 0x4
	0x034621F0 ADD X8, X8, W9, 0x4, SXTW
	0x034621F4 ADD X0, X8, 0x138
	0x034621F8 LDP X8, X1, [X0]
	0x034621FC MOV X0, X20
	0x03462200 BLR X8
	0x03462204 MOV X21, X0
	0x03462208 CBZ X0, 0x34629A8
	0x0346220C ADRP X10, 0xCCE000
	0x03462210 LDR X8, [X21]
	0x03462214 LDR X10, [X10 + 0x110]
	0x03462218 LDRH W9, [X8 + 0x12E]
	0x0346221C LDR X1, [X10]
	0x03462220 CBZ X9, 0x3462244
	0x03462224 LDR X10, [X8 + 0xB0]
	0x03462228 ADD X10, X10, 0x8
	0x0346222C LDUR X11, [X10 - 0x8]
	0x03462230 CMP X11, X1
	0x03462234 B.EQ 0x3462254
	0x03462238 SUBS X9, X9, 0x1
	0x0346223C ADD X10, X10, 0x10
	0x03462240 B.NE 0x346222C
	0x03462244 MOV X0, X21
	0x03462248 MOV W2, W31
	0x0346224C BL 0x1C5C788
	0x03462250 B 0x3462260
	0x03462254 LDRSW X9, [X10]
	0x03462258 ADD X8, X8, X9, 0x4, LSL
	0x0346225C ADD X0, X8, 0x138
	0x03462260 LDP X8, X1, [X0]
	0x03462264 MOV X0, X21
	0x03462268 BLR X8
	0x0346226C MOV X21, X0
	0x03462270 CBZ X0, 0x34629AC
	0x03462274 ADRP X24, 0xC91000
	0x03462278 ADRP X28, 0xCCE000
	0x0346227C ADRP X29, 0xC92000
	0x03462280 ADRP X26, 0xCCE000
	0x03462284 ADRP X27, 0xCCE000
	0x03462288 LDR X24, [X24 + 0xE18]
	0x0346228C LDR X28, [X28 + 0x118]
	0x03462290 LDR X29, [X29 + 0x818]
	0x03462294 LDR X26, [X26 + 0x108]
	0x03462298 LDR X27, [X27 + 0xE0]
	0x0346229C LDR X8, [X21]
	0x034622A0 LDR X1, [X24]
	0x034622A4 LDRH W9, [X8 + 0x12E]
	0x034622A8 CBZ X9, 0x34622CC
	0x034622AC LDR X10, [X8 + 0xB0]
	0x034622B0 ADD X10, X10, 0x8
	0x034622B4 LDUR X11, [X10 - 0x8]
	0x034622B8 CMP X11, X1
	0x034622BC B.EQ 0x34622DC
	0x034622C0 SUBS X9, X9, 0x1
	0x034622C4 ADD X10, X10, 0x10
	0x034622C8 B.NE 0x34622B4
	0x034622CC MOV X0, X21
	0x034622D0 MOV W2, W31
	0x034622D4 BL 0x1C5C788
	0x034622D8 B 0x34622E8
	0x034622DC LDRSW X9, [X10]
	0x034622E0 ADD X8, X8, X9, 0x4, LSL
	0x034622E4 ADD X0, X8, 0x138
	0x034622E8 LDP X8, X1, [X0]
	0x034622EC MOV X0, X21
	0x034622F0 BLR X8
	0x034622F4 TBZ X0, 0x0, 0x34624DC
	0x034622F8 LDR X8, [X21]
	0x034622FC LDR X1, [X28]
	0x03462300 LDRH W9, [X8 + 0x12E]
	0x03462304 CBZ X9, 0x3462328
	0x03462308 LDR X10, [X8 + 0xB0]
	0x0346230C ADD X10, X10, 0x8
	0x03462310 LDUR X11, [X10 - 0x8]
	0x03462314 CMP X11, X1
	0x03462318 B.EQ 0x3462338
	0x0346231C SUBS X9, X9, 0x1
	0x03462320 ADD X10, X10, 0x10
	0x03462324 B.NE 0x3462310
	0x03462328 MOV X0, X21
	0x0346232C MOV W2, W31
	0x03462330 BL 0x1C5C788
	0x03462334 B 0x3462344
	0x03462338 LDRSW X9, [X10]
	0x0346233C ADD X8, X8, X9, 0x4, LSL
	0x03462340 ADD X0, X8, 0x138
	0x03462344 LDP X8, X1, [X0]
	0x03462348 MOV X0, X21
	0x0346234C BLR X8
	0x03462350 LDR X8, [X19 + 0x70]
	0x03462354 CBZ X8, 0x346297C
	0x03462358 LDR X23, [X8 + 0x18]
	0x0346235C CBZ X23, 0x3462980
	0x03462360 LDR X8, [X23]
	0x03462364 LDR X1, [X29]
	0x03462368 MOV X22, X0
	0x0346236C LDRH W9, [X8 + 0x12E]
	0x03462370 CBZ X9, 0x3462394
	0x03462374 LDR X10, [X8 + 0xB0]
	0x03462378 ADD X10, X10, 0x8
	0x0346237C LDUR X11, [X10 - 0x8]
	0x03462380 CMP X11, X1
	0x03462384 B.EQ 0x34623A4
	0x03462388 SUBS X9, X9, 0x1
	0x0346238C ADD X10, X10, 0x10
	0x03462390 B.NE 0x346237C
	0x03462394 MOVZ W2, 0xA
	0x03462398 MOV X0, X23
	0x0346239C BL 0x1C5C788
	0x034623A0 B 0x34623B4
	0x034623A4 LDR W9, [X10]
	0x034623A8 ADD W9, W9, 0xA
	0x034623AC ADD X8, X8, W9, 0x4, SXTW
	0x034623B0 ADD X0, X8, 0x138
	0x034623B4 LDP X8, X1, [X0]
	0x034623B8 MOV X0, X23
	0x034623BC BLR X8
	0x034623C0 CBZ X22, 0x3462974
	0x034623C4 LDR X8, [X22]
	0x034623C8 LDR X1, [X26]
	0x034623CC MOV X23, X0
	0x034623D0 LDRH W9, [X8 + 0x12E]
	0x034623D4 CBZ X9, 0x34623F8
	0x034623D8 LDR X10, [X8 + 0xB0]
	0x034623DC ADD X10, X10, 0x8
	0x034623E0 LDUR X11, [X10 - 0x8]
	0x034623E4 CMP X11, X1
	0x034623E8 B.EQ 0x3462408
	0x034623EC SUBS X9, X9, 0x1
	0x034623F0 ADD X10, X10, 0x10
	0x034623F4 B.NE 0x34623E0
	0x034623F8 MOVZ W2, 0x6
	0x034623FC MOV X0, X22
	0x03462400 BL 0x1C5C788
	0x03462404 B 0x3462418
	0x03462408 LDR W9, [X10]
	0x0346240C ADD W9, W9, 0x6
	0x03462410 ADD X8, X8, W9, 0x4, SXTW
	0x03462414 ADD X0, X8, 0x138
	0x03462418 LDP X8, X1, [X0]
	0x0346241C MOV X0, X22
	0x03462420 BLR X8
	0x03462424 MOV X1, X0
	0x03462428 CBZ X23, 0x3462978
	0x0346242C MOV X0, X23
	0x03462430 MOV X2, X31
	0x03462434 BL 0x322693C
	0x03462438 TBZ X0, 0x0, 0x346229C
	0x0346243C LDR X9, [X22]
	0x03462440 LDR X8, [X27]
	0x03462444 LDRB W11, [X9 + 0x130]
	0x03462448 LDRB W10, [X8 + 0x130]
	0x0346244C CMP W11, W10
	0x03462450 B.CC 0x346229C
	0x03462454 LDR X9, [X9 + 0xC8]
	0x03462458 ADD X9, X9, X10, 0x3, LSL
	0x0346245C LDUR X9, [X9 - 0x8]
	0x03462460 CMP X9, X8
	0x03462464 B.NE 0x346229C
	0x03462468 LDR X8, [X19 + 0x70]
	0x0346246C CBZ X8, 0x3462994
	0x03462470 LDR X23, [X8 + 0x18]
	0x03462474 CBZ X23, 0x3462998
	0x03462478 LDR X8, [X23]
	0x0346247C LDR X1, [X29]
	0x03462480 LDRH W9, [X8 + 0x12E]
	0x03462484 CBZ X9, 0x34624A8
	0x03462488 LDR X10, [X8 + 0xB0]
	0x0346248C ADD X10, X10, 0x8
	0x03462490 LDUR X11, [X10 - 0x8]
	0x03462494 CMP X11, X1
	0x03462498 B.EQ 0x34624B8
	0x0346249C SUBS X9, X9, 0x1
	0x034624A0 ADD X10, X10, 0x10
	0x034624A4 B.NE 0x3462490

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF7D000
	011 Move W8, [X20+1969]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCD0000
	018 Move X0, [X0+512]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD0000
	021 Move X0, [X0+520]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCF000
	024 Move X0, [X0+240]
	025 Call 0x1C17CF4
	026 Move X0, 0xCCE000
	027 Move X0, [X0+1760]
	028 Call 0x1C17CF4
	029 Move X0, 0xC95000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC94000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCF000
	036 Move X0, [X0+1984]
	037 Call 0x1C17CF4
	038 Move X0, 0xC94000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCF000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCF000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCF000
	048 Move X0, [X0+2008]
	049 Call 0x1C17CF4
	050 Move X0, 0xC94000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xC95000
	054 Move X0, [X0+3504]
	055 Call 0x1C17CF4
	056 Move X0, 0xC94000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xC95000
	060 Move X0, [X0+3512]
	061 Call 0x1C17CF4
	062 Move X0, 0xC94000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xC95000
	066 Move X0, [X0+3520]
	067 Call 0x1C17CF4
	068 Move X0, 0xCD0000
	069 Move X0, [X0+528]
	070 Call 0x1C17CF4
	071 Move X0, 0xCD0000
	072 Move X0, [X0+536]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1969], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCCE000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1760]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+104]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+104], X31
	092 Move [X19], W9
	093 Move X8, [X19+96]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+96], X31
	099 Move [X19], W9
	100 Move X8, 0xC94000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCD0000
	106 Move X8, [X8+536]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass91_0..ctor, X0
	112 Move [X19+88], X21
	113 Compare X21, 0
	114 JumpIfEqual {387}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move W8, [X19+56]
	122 Move [X21+40], W8
	123 Move X8, [X19+64]
	124 Move [X21+48], X8
	125 Move X8, [X19+72]
	126 Move [X21+56], X8
	127 Compare X20, 0
	128 JumpIfEqual {388}
	129 Move W8, [X20+16]
	130 Compare W8, 0
	131 JumpIfEqual {269}
	132 Move X8, [X19+88]
	133 Compare X8, 0
	134 JumpIfEqual {389}
	135 Move X21, [X8+24]
	136 Compare X21, 0
	137 JumpIfEqual {390}
	138 Move X23, 0xC94000
	139 Move X8, [X21]
	140 Move X23, [X23+2072]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Move X1, [X23]
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move W2, 7
	152 Move X0, X21
	153 Call 0x1C5D788
	154 Move W9, [X10]
	155 Add W9, W9, 7
	156 Add X8, X8, W9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X21
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X1, X31
	163 Call String.IsNullOrEmpty, X0
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {267}
	168 Move X8, [X19+88]
	169 Compare X8, 0
	170 JumpIfEqual {391}
	171 Move X9, 0xC93000
	172 Move X9, [X9+2544]
	173 Move X21, [X8+24]
	174 Move X0, [X9]
	175 Move W9, [X0+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X31
	180 Call DateTime.get_UtcNow
	181 Move X22, 0xC94000
	182 Move X22, [X22+2576]
	183 Move X8, X0
	184 Move [X31+40], X8
	185 Move X0, [X22]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {191}
	189 Call 0x1C17DFC
	190 Move X0, [X22]
	191 Move X8, [X0+184]
	192 Move X1, [X8]
	193 Add X0, X31, 40
	194 Move X2, X31
	195 Call DateTime.Add, X0, X1
	196 Compare X21, 0
	197 JumpIfEqual {392}
	198 Move X8, [X21]
	199 Move X1, [X23]
	200 Move X22, X0
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move W2, 11
	211 Move X0, X21
	212 Call 0x1C5D788
	213 Move W9, [X10]
	214 Add W9, W9, 11
	215 Add X8, X8, W9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X2, [X0+8]
	219 Move X0, X21
	220 Move X1, X22
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {267}
	226 Move X8, [X19+88]
	227 Compare X8, 0
	228 JumpIfEqual {393}
	229 Move X1, [X8+24]
	230 Move X3, [X19+80]
	231 Move X4, [X8+56]
	232 Move X0, X20
	233 Move X2, X31
	234 Move X5, X31
	235 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	236 Compare X0, 0
	237 JumpIfEqual {394}
	238 Move X8, 0xC93000
	239 Move X8, [X8+2112]
	240 Move X1, [X8]
	241 Call Task`1<Object>.GetAwaiter, X0
	242 Move X8, 0xC93000
	243 Move X8, [X8+2104]
	244 Move [X31+32], X0
	245 Move X1, [X8]
	246 Add X0, X31, 32
	247 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {100}
	252 Move [X19], W31
	253 Move X8, [X31+32]
	254 Move [X19+96], X8
	255 Move X0, [X25]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move X8, 0xCCF000
	261 Move X8, [X8+520]
	262 Add X0, X19, 8
	263 Move X3, [X8]
	264 Add X1, X31, 32
	265 Move X2, X19
	266 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	267 Compare X20, 0
	268 JumpIfEqual {386}
	269 Move X8, 0xCCE000
	270 Move X8, [X8+1984]
	271 Move X21, [X20+88]
	272 Move X23, [X19+88]
	273 Move X0, [X8]
	274 Call 0x1C17F10
	275 Move X8, 0xCCF000
	276 Move X8, [X8+528]
	277 Move X22, X0
	278 Move X2, [X8]
	279 Move X1, X23
	280 Move X3, X31
	281 Call Func`1<Object>..ctor, X0, X1, X2
	282 Move X8, [X19+88]
	283 Compare X8, 0
	284 JumpIfEqual {383}
	285 Move X9, 0xCCE000
	286 Move X23, [X19+80]
	287 Move X9, [X9+1992]
	288 Compare X23, 0
	289 JumpIfNotEqual {291}
	290 Move X23, [X20+24]
	291 Move X20, [X8+24]
	292 Move X1, [X8+56]
	293 Move X2, [X9]
	294 Move [X31+8], X31
	295 Move [X31+16], X31
	296 Add X0, X31, 8
	297 Call Nullable`1<CancellationToken>..ctor, X0, X1
	298 Move X8, 0xCCE000
	299 Move X8, [X8+2000]
	300 Move X0, [X8]
	301 Call 0x1C17F10
	302 Move X3, [X31+8]
	303 Move X4, [X31+16]
	304 Move X24, X0
	305 Move X1, X20
	306 Move X2, X23
	307 Move X5, X31
	308 Call RetryHistory..ctor, X0, X1, X2, X3
	309 Compare X21, 0
	310 JumpIfEqual {384}
	311 Move X8, 0xCCE000
	312 Move X8, [X8+2008]
	313 Move X3, [X8]
	314 Move X0, X21
	315 Move X1, X22
	316 Move X2, X24
	317 Call 0x2244230, X0, X1, X2
	318 Compare X0, 0
	319 JumpIfEqual {385}
	320 Move X8, 0xC94000
	321 Move X8, [X8+3520]
	322 Move X1, [X8]
	323 Call Task`1<Object>.GetAwaiter, X0
	324 Move X8, 0xC94000
	325 Move X8, [X8+3512]
	326 Move [X31+24], X0
	327 Move X1, [X8]
	328 Add X0, X31, 24
	329 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	330 Move TEMP, X0
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfNotEqual {357}
	334 Move X8, 0xC94000
	335 Move X8, [X8+3504]
	336 Add X0, X31, 24
	337 Move X1, [X8]
	338 Call TaskAwaiter`1<Object>.GetResult, X0
	339 Move TEMP, 1
	340 Not TEMP
	341 Move W8, TEMP
	342 Move [X19], W8
	343 Move [X19+88], X31
	344 Move X20, X0
	345 Move X0, [X25]
	346 Move X21, 0xCCE000
	347 Add X19, X19, 8
	348 Move W8, [X0+224]
	349 Move X21, [X21+240]
	350 Compare W8, 0
	351 JumpIfNotEqual {353}
	352 Call 0x1C17DFC
	353 Move X2, [X21]
	354 Move X0, X19
	355 Move X1, X20
	356 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	357 Move W8, 1
	358 Move [X19], W8
	359 Move X8, [X31+24]
	360 Move [X19+104], X8
	361 Move X0, [X25]
	362 Move W8, [X0+224]
	363 Compare W8, 0
	364 JumpIfNotEqual {366}
	365 Call 0x1C17DFC
	366 Move X8, 0xCCF000
	367 Move X8, [X8+512]
	368 Add X0, X19, 8
	369 Move X3, [X8]
	370 Add X1, X31, 24
	371 Move X2, X19
	372 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	373 Move X20, [X31+96]
	374 Move X19, [X31+104]
	375 Move X22, [X31+80]
	376 Move X21, [X31+88]
	377 Move X24, [X31+64]
	378 Move X23, [X31+72]
	379 Move X30, [X31+48]
	380 Move X25, [X31+56]
	381 Add X31, X31, 112
	382 Return 
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Move X20, X0
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X0, X20
	398 Call 0x3EB2AD0
	399 Move X20, X0
	400 Move X0, 0xC92000
	401 Move X0, [X0+2000]
	402 Call 0x1C17D08
	403 Move X8, [X20]
	404 Move X1, [X8]
	405 Call 0x1C18270
	406 Move TEMP, X0
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfNotEqual {431}
	410 Move X20, [X20]
	411 Call 0x3EB2AE0
	412 Move TEMP, 1
	413 Not TEMP
	414 Move W8, TEMP
	415 Move [X19+88], X31
	416 Move [X19+8], W8
	417 Move X0, 0xCCD000
	418 Move X0, [X0+1760]
	419 Call 0x1C17D08
	420 Move W8, [X0+224]
	421 Compare W8, 0
	422 JumpIfNotEqual {424}
	423 Call 0x1C17DFC
	424 Move X0, 0xCCE000
	425 Move X0, [X0+304]
	426 Call 0x1C17D08
	427 Move X2, X0
	428 Move X0, X19
	429 Move X1, X20
	430 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	431 Move W0, 8
	432 Call 0x3EB2AF0
	433 Move X8, [X20]
	434 Move [X0], X8
	435 Move X1, 0xA53000
	436 Add X1, X1, 3672
	437 Move X2, X31
	438 Call 0x3EB2B00
	439 Move X20, X0
	440 Call 0x3EB2AE0
	441 Move X0, X20
	442 Call 0x1D2D690
	443 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034624A8 MOVZ W2, 0x9
	0x034624AC MOV X0, X23
	0x034624B0 BL 0x1C5C788
	0x034624B4 B 0x34624C8
	0x034624B8 LDR W9, [X10]
	0x034624BC ADD W9, W9, 0x9
	0x034624C0 ADD X8, X8, W9, 0x4, SXTW
	0x034624C4 ADD X0, X8, 0x138
	0x034624C8 LDP X8, X1, [X0]
	0x034624CC MOV X0, X23
	0x034624D0 BLR X8
	0x034624D4 STR X0, [X22 + 0x68]
	0x034624D8 B 0x346229C
	0x034624DC MOV X24, X31
	0x034624E0 MOVZ W22, 0xB
	0x034624E4 TBZ X25, 0x1F, 0x346254C
	0x034624E8 CBZ X21, 0x346254C
	0x034624EC ADRP X10, 0xC91000
	0x034624F0 LDR X8, [X21]
	0x034624F4 LDR X10, [X10 + 0xE00]
	0x034624F8 LDRH W9, [X8 + 0x12E]
	0x034624FC LDR X1, [X10]
	0x03462500 CBZ X9, 0x3462524
	0x03462504 LDR X10, [X8 + 0xB0]
	0x03462508 ADD X10, X10, 0x8
	0x0346250C LDUR X11, [X10 - 0x8]
	0x03462510 CMP X11, X1
	0x03462514 B.EQ 0x3462534
	0x03462518 SUBS X9, X9, 0x1
	0x0346251C ADD X10, X10, 0x10
	0x03462520 B.NE 0x346250C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF7C000
	007 Move X21, 0xCCD000
	008 Move W8, [X22+1970]
	009 Move X21, [X21+1760]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCCE000
	017 Move X0, [X0+312]
	018 Call 0x1C17CF4
	019 Move X0, 0xCCD000
	020 Move X0, [X0+1760]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1970], W8
	024 Move X0, [X21]
	025 Move X21, 0xCCE000
	026 Move W8, [X0+224]
	027 Move X21, [X21+312]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

