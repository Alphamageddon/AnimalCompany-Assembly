Type: Nakama.Client/<LinkGameCenterAsync>d__78

Method: System.Void MoveNext()

Disassembly:
	0x0345B674 MOV X0, X20
	0x0345B678 MOV X2, X31
	0x0345B67C MOV X5, X31
	0x0345B680 BL 0x34440A8
	0x0345B684 CBZ X0, 0x345B878
	0x0345B688 ADRP X8, 0xC99000
	0x0345B68C LDR X8, [X8 + 0x840]
	0x0345B690 LDR X1, [X8]
	0x0345B694 BL 0x269F5D0
	0x0345B698 ADRP X8, 0xC99000
	0x0345B69C LDR X8, [X8 + 0x838]
	0x0345B6A0 STR X0, [X31 + 0x20]
	0x0345B6A4 LDR X1, [X8]
	0x0345B6A8 ADD X0, X31, 0x20
	0x0345B6AC BL 0x2677430
	0x0345B6B0 TBNZ X0, 0x0, 0x345B4A0
	0x0345B6B4 STR W31, [X19]
	0x0345B6B8 LDR X8, [X31 + 0x20]
	0x0345B6BC STR X8, [X19 + 0x58]
	0x0345B6C0 LDR X0, [X25]
	0x0345B6C4 LDR W8, [X0 + 0xE0]
	0x0345B6C8 CBNZ W8, 0x345B6D0
	0x0345B6CC BL 0x1C16DFC
	0x0345B6D0 ADRP X8, 0xCD4000
	0x0345B6D4 LDR X8, [X8 + 0xF78]
	0x0345B6D8 ADD X0, X19, 0x8
	0x0345B6DC LDR X3, [X8]
	0x0345B6E0 ADD X1, X31, 0x20
	0x0345B6E4 MOV X2, X19
	0x0345B6E8 BL 0x2188BA4
	0x0345B6EC B 0x345B834
	0x0345B6F0 CBZ X20, 0x345B858
	0x0345B6F4 ADRP X8, 0xCA0000
	0x0345B6F8 LDR X8, [X8 + 0x818]
	0x0345B6FC LDR X21, [X20 + 0x58]
	0x0345B700 LDR X23, [X19 + 0x50]
	0x0345B704 LDR X0, [X8]
	0x0345B708 BL 0x1C16F10
	0x0345B70C ADRP X8, 0xCD4000
	0x0345B710 LDR X8, [X8 + 0xF88]
	0x0345B714 MOV X22, X0
	0x0345B718 LDR X2, [X8]
	0x0345B71C MOV X1, X23
	0x0345B720 MOV X3, X31
	0x0345B724 BL 0x2D27AA8
	0x0345B728 LDR X8, [X19 + 0x50]
	0x0345B72C CBZ X8, 0x345B84C
	0x0345B730 ADRP X9, 0xCD4000
	0x0345B734 LDR X23, [X19 + 0x48]
	0x0345B738 LDR X9, [X9 + 0x7C8]
	0x0345B73C CBNZ X23, 0x345B744
	0x0345B740 LDR X23, [X20 + 0x18]
	0x0345B744 LDR X20, [X8 + 0x18]
	0x0345B748 LDR X1, [X8 + 0x30]
	0x0345B74C LDR X2, [X9]
	0x0345B750 STP X31, X31, [X31 + 0x8]
	0x0345B754 ADD X0, X31, 0x8
	0x0345B758 BL 0x242E368
	0x0345B75C ADRP X8, 0xCD4000
	0x0345B760 LDR X8, [X8 + 0x7D0]
	0x0345B764 LDR X0, [X8]
	0x0345B768 BL 0x1C16F10
	0x0345B76C LDP X3, X4, [X31 + 0x8]
	0x0345B770 MOV X24, X0
	0x0345B774 MOV X1, X20
	0x0345B778 MOV X2, X23
	0x0345B77C MOV X5, X31
	0x0345B780 BL 0x3465404
	0x0345B784 CBZ X21, 0x345B850
	0x0345B788 MOV X0, X21
	0x0345B78C MOV X1, X22
	0x0345B790 MOV X2, X24
	0x0345B794 MOV X3, X31
	0x0345B798 BL 0x3465B68
	0x0345B79C CBZ X0, 0x345B854
	0x0345B7A0 MOV X1, X31
	0x0345B7A4 BL 0x33ED394
	0x0345B7A8 STR X0, [X31 + 0x18]
	0x0345B7AC ADD X0, X31, 0x18
	0x0345B7B0 MOV X1, X31
	0x0345B7B4 BL 0x32C3A80
	0x0345B7B8 TBZ X0, 0x0, 0x345B7F8
	0x0345B7BC ADD X0, X31, 0x18
	0x0345B7C0 MOV X1, X31
	0x0345B7C4 BL 0x32C3B4C
	0x0345B7C8 MOVN W8, 0x1
	0x0345B7CC STR W8, [X19]
	0x0345B7D0 STR X31, [X19 + 0x50]
	0x0345B7D4 LDR X0, [X25]
	0x0345B7D8 ADD X19, X19, 0x8
	0x0345B7DC LDR W8, [X0 + 0xE0]
	0x0345B7E0 CBNZ W8, 0x345B7E8
	0x0345B7E4 BL 0x1C16DFC
	0x0345B7E8 MOV X0, X19
	0x0345B7EC MOV X1, X31
	0x0345B7F0 BL 0x32C4864
	0x0345B7F4 B 0x345B834
	0x0345B7F8 MOVZ W8, 0x1
	0x0345B7FC STR W8, [X19]
	0x0345B800 LDR X8, [X31 + 0x18]
	0x0345B804 STR X8, [X19 + 0x60]
	0x0345B808 LDR X0, [X25]
	0x0345B80C LDR W8, [X0 + 0xE0]
	0x0345B810 CBNZ W8, 0x345B818
	0x0345B814 BL 0x1C16DFC
	0x0345B818 ADRP X8, 0xCD4000
	0x0345B81C LDR X8, [X8 + 0xF80]
	0x0345B820 ADD X0, X19, 0x8
	0x0345B824 LDR X3, [X8]
	0x0345B828 ADD X1, X31, 0x18
	0x0345B82C MOV X2, X19
	0x0345B830 BL 0x218A268
	0x0345B834 LDP X20, X19, [X31 + 0x60]
	0x0345B838 LDP X22, X21, [X31 + 0x50]
	0x0345B83C LDP X24, X23, [X31 + 0x40]
	0x0345B840 LDP X30, X25, [X31 + 0x30]
	0x0345B844 ADD X31, X31, 0x70
	0x0345B848 RET
	0x0345B84C BL 0x1C16F20
	0x0345B850 BL 0x1C16F20
	0x0345B854 BL 0x1C16F20
	0x0345B858 BL 0x1C16F20
	0x0345B85C BL 0x1C16F20
	0x0345B860 BL 0x1C16F20
	0x0345B864 BL 0x1C16F20
	0x0345B868 BL 0x1C16F20
	0x0345B86C BL 0x1C16F20
	0x0345B870 BL 0x1C16F20
	0x0345B874 BL 0x1C16F20
	0x0345B878 BL 0x1C16F20
	0x0345B87C B 0x345B8F0
	0x0345B880 B 0x345B8F0
	0x0345B884 B 0x345B8F0
	0x0345B888 B 0x345B8F0
	0x0345B88C B 0x345B8F0
	0x0345B890 B 0x345B8F0
	0x0345B894 B 0x345B8F0
	0x0345B898 B 0x345B8F0
	0x0345B89C B 0x345B8F0
	0x0345B8A0 B 0x345B8F0
	0x0345B8A4 B 0x345B8F0
	0x0345B8A8 B 0x345B8F0
	0x0345B8AC B 0x345B8F0
	0x0345B8B0 B 0x345B8F0
	0x0345B8B4 B 0x345B8F0
	0x0345B8B8 B 0x345B8F0
	0x0345B8BC B 0x345B8F0
	0x0345B8C0 B 0x345B8F0
	0x0345B8C4 B 0x345B8F0
	0x0345B8C8 B 0x345B8F0
	0x0345B8CC B 0x345B8F0
	0x0345B8D0 B 0x345B8F0
	0x0345B8D4 B 0x345B8F0
	0x0345B8D8 B 0x345B8F0
	0x0345B8DC B 0x345B8F0
	0x0345B8E0 B 0x345B8F0
	0x0345B8E4 B 0x345B8F0
	0x0345B8E8 B 0x345B8F0
	0x0345B8EC B 0x345B8F0
	0x0345B8F0 MOV X20, X0
	0x0345B8F4 CMP W1, 0x1
	0x0345B8F8 B.NE 0x345B98C
	0x0345B8FC MOV X0, X20
	0x0345B900 BL 0x3EB1AD0
	0x0345B904 MOV X20, X0
	0x0345B908 ADRP X0, 0xC98000
	0x0345B90C LDR X0, [X0 + 0x7D0]
	0x0345B910 BL 0x1C16D08
	0x0345B914 LDR X8, [X20]
	0x0345B918 LDR X1, [X8]
	0x0345B91C BL 0x1C17270
	0x0345B920 TBZ X0, 0x0, 0x345B964
	0x0345B924 LDR X20, [X20]
	0x0345B928 BL 0x3EB1AE0
	0x0345B92C MOVN W8, 0x1
	0x0345B930 STR X31, [X19 + 0x50]
	0x0345B934 STR W8, [X19], #0x8
	0x0345B938 ADRP X0, 0xC9B000
	0x0345B93C LDR X0, [X0 + 0x280]
	0x0345B940 BL 0x1C16D08
	0x0345B944 LDR W8, [X0 + 0xE0]
	0x0345B948 CBNZ W8, 0x345B950
	0x0345B94C BL 0x1C16DFC
	0x0345B950 MOV X0, X19
	0x0345B954 MOV X1, X20
	0x0345B958 MOV X2, X31
	0x0345B95C BL 0x32C4908
	0x0345B960 B 0x345B834
	0x0345B964 MOVZ W0, 0x8
	0x0345B968 BL 0x3EB1AF0
	0x0345B96C LDR X8, [X20]
	0x0345B970 STR X8, [X0]
	0x0345B974 ADRP X1, 0xA59000
	0x0345B978 ADD X1, X1, 0xE58
	0x0345B97C MOV X2, X31
	0x0345B980 BL 0x3EB1B00
	0x0345B984 MOV X20, X0
	0x0345B988 BL 0x3EB1AE0
	0x0345B98C MOV X0, X20
	0x0345B990 BL 0x1D2C690
	0x0345B994 BL 0x1990590
	0x0345B998 STR X30, [X31 - 0x30]!
	0x0345B99C STP X22, X21, [X31 + 0x10]
	0x0345B9A0 STP X20, X19, [X31 + 0x20]
	0x0345B9A4 ADRP X21, 0xF82000
	0x0345B9A8 ADRP X22, 0xC9B000
	0x0345B9AC LDRB W8, [X21 + 0x7A0]
	0x0345B9B0 LDR X22, [X22 + 0x280]
	0x0345B9B4 MOV X19, X1
	0x0345B9B8 MOV X20, X0
	0x0345B9BC TBNZ X8, 0x0, 0x345B9D4
	0x0345B9C0 ADRP X0, 0xC9B000
	0x0345B9C4 LDR X0, [X0 + 0x280]
	0x0345B9C8 BL 0x1C16CF4
	0x0345B9CC MOVZ W8, 0x1
	0x0345B9D0 STRB W8, [X21 + 0x7A0]
	0x0345B9D4 LDR X0, [X22]
	0x0345B9D8 LDR W8, [X0 + 0xE0]
	0x0345B9DC CBNZ W8, 0x345B9E4
	0x0345B9E0 BL 0x1C16DFC
	0x0345B9E4 ADD X0, X20, 0x8
	0x0345B9E8 MOV X1, X19
	0x0345B9EC LDP X20, X19, [X31 + 0x20]
	0x0345B9F0 LDP X22, X21, [X31 + 0x10]
	0x0345B9F4 MOV X2, X31
	0x0345B9F8 LDR X30, [X31], #0x30
	0x0345B9FC B 0x32C477C
	0x0345BA00 SUB X31, X31, 0x70
	0x0345BA04 STP X30, X25, [X31 + 0x30]
	0x0345BA08 STP X24, X23, [X31 + 0x40]
	0x0345BA0C STP X22, X21, [X31 + 0x50]
	0x0345BA10 STP X20, X19, [X31 + 0x60]
	0x0345BA14 ADRP X20, 0xF82000
	0x0345BA18 LDRB W8, [X20 + 0x7A1]
	0x0345BA1C MOV X19, X0
	0x0345BA20 TBNZ X8, 0x0, 0x345BB10
	0x0345BA24 ADRP X0, 0xCD4000
	0x0345BA28 LDR X0, [X0 + 0xF98]
	0x0345BA2C BL 0x1C16CF4
	0x0345BA30 ADRP X0, 0xCD4000
	0x0345BA34 LDR X0, [X0 + 0xFA0]
	0x0345BA38 BL 0x1C16CF4
	0x0345BA3C ADRP X0, 0xCD3000
	0x0345BA40 LDR X0, [X0 + 0xEF0]
	0x0345BA44 BL 0x1C16CF4
	0x0345BA48 ADRP X0, 0xCD3000
	0x0345BA4C LDR X0, [X0 + 0x418]
	0x0345BA50 BL 0x1C16CF4
	0x0345BA54 ADRP X0, 0xC9A000
	0x0345BA58 LDR X0, [X0 + 0xA10]
	0x0345BA5C BL 0x1C16CF4
	0x0345BA60 ADRP X0, 0xC99000
	0x0345BA64 LDR X0, [X0 + 0x9F0]
	0x0345BA68 BL 0x1C16CF4
	0x0345BA6C ADRP X0, 0xCD4000
	0x0345BA70 LDR X0, [X0 + 0xFA8]
	0x0345BA74 BL 0x1C16CF4
	0x0345BA78 ADRP X0, 0xC99000
	0x0345BA7C LDR X0, [X0 + 0x818]
	0x0345BA80 BL 0x1C16CF4
	0x0345BA84 ADRP X0, 0xCD4000
	0x0345BA88 LDR X0, [X0 + 0x7C8]
	0x0345BA8C BL 0x1C16CF4
	0x0345BA90 ADRP X0, 0xCD4000
	0x0345BA94 LDR X0, [X0 + 0x7D0]
	0x0345BA98 BL 0x1C16CF4
	0x0345BA9C ADRP X0, 0xCD4000
	0x0345BAA0 LDR X0, [X0 + 0xFB0]
	0x0345BAA4 BL 0x1C16CF4
	0x0345BAA8 ADRP X0, 0xCD4000
	0x0345BAAC LDR X0, [X0 + 0xFB8]
	0x0345BAB0 BL 0x1C16CF4
	0x0345BAB4 ADRP X0, 0xC99000
	0x0345BAB8 LDR X0, [X0 + 0x830]
	0x0345BABC BL 0x1C16CF4
	0x0345BAC0 ADRP X0, 0xCD4000
	0x0345BAC4 LDR X0, [X0 + 0xFC0]
	0x0345BAC8 BL 0x1C16CF4
	0x0345BACC ADRP X0, 0xC99000
	0x0345BAD0 LDR X0, [X0 + 0x838]
	0x0345BAD4 BL 0x1C16CF4
	0x0345BAD8 ADRP X0, 0xCD4000
	0x0345BADC LDR X0, [X0 + 0xFC8]
	0x0345BAE0 BL 0x1C16CF4
	0x0345BAE4 ADRP X0, 0xC99000
	0x0345BAE8 LDR X0, [X0 + 0x840]
	0x0345BAEC BL 0x1C16CF4
	0x0345BAF0 ADRP X0, 0xCD4000
	0x0345BAF4 LDR X0, [X0 + 0xFD0]
	0x0345BAF8 BL 0x1C16CF4
	0x0345BAFC ADRP X0, 0xCD4000
	0x0345BB00 LDR X0, [X0 + 0xFD8]
	0x0345BB04 BL 0x1C16CF4
	0x0345BB08 MOVZ W8, 0x1
	0x0345BB0C STRB W8, [X20 + 0x7A1]
	0x0345BB10 STP X31, X31, [X31 + 0x20]
	0x0345BB14 STR X31, [X31 + 0x18]
	0x0345BB18 ADRP X25, 0xCD3000
	0x0345BB1C LDR W8, [X19]
	0x0345BB20 LDR X20, [X19 + 0x20]
	0x0345BB24 LDR X25, [X25 + 0x418]
	0x0345BB28 CBZ W8, 0x345BB4C
	0x0345BB2C CMP W8, 0x1
	0x0345BB30 B.NE 0x345BB78
	0x0345BB34 LDR X8, [X19 + 0x68]
	0x0345BB38 MOVN W9, 0x0
	0x0345BB3C STR X8, [X31 + 0x18]
	0x0345BB40 STR X31, [X19 + 0x68]
	0x0345BB44 STR W9, [X19]
	0x0345BB48 B 0x345BEA4
	0x0345BB4C LDR X8, [X19 + 0x60]
	0x0345BB50 MOVN W9, 0x0
	0x0345BB54 STR X8, [X31 + 0x20]
	0x0345BB58 STR X31, [X19 + 0x60]
	0x0345BB5C STR W9, [X19]
	0x0345BB60 ADRP X8, 0xC99000
	0x0345BB64 LDR X8, [X8 + 0x830]
	0x0345BB68 ADD X0, X31, 0x20
	0x0345BB6C LDR X1, [X8]
	0x0345BB70 BL 0x2677474
	0x0345BB74 B 0x345BDC0
	0x0345BB78 ADRP X8, 0xCD4000
	0x0345BB7C LDR X8, [X8 + 0xFD8]
	0x0345BB80 LDR X0, [X8]
	0x0345BB84 BL 0x1C16F10
	0x0345BB88 MOV X21, X0
	0x0345BB8C MOV X1, X31
	0x0345BB90 BL 0x344A7C4
	0x0345BB94 STR X21, [X19 + 0x58]
	0x0345BB98 CBZ X21, 0x345BF5C
	0x0345BB9C LDR X8, [X19 + 0x20]
	0x0345BBA0 STR X8, [X21 + 0x10]
	0x0345BBA4 LDR X8, [X19 + 0x28]
	0x0345BBA8 STR X8, [X21 + 0x18]
	0x0345BBAC LDR X8, [X19 + 0x30]
	0x0345BBB0 STR X8, [X21 + 0x20]
	0x0345BBB4 LDR W8, [X19 + 0x38]
	0x0345BBB8 STR W8, [X21 + 0x28]
	0x0345BBBC LDRB W8, [X19 + 0x3C]
	0x0345BBC0 STRB W8, [X21 + 0x2C]
	0x0345BBC4 LDR X8, [X19 + 0x40]
	0x0345BBC8 STR X8, [X21 + 0x30]
	0x0345BBCC LDR X8, [X19 + 0x48]
	0x0345BBD0 STR X8, [X21 + 0x38]
	0x0345BBD4 CBZ X20, 0x345BF60
	0x0345BBD8 LDRB W8, [X20 + 0x10]
	0x0345BBDC CBZ W8, 0x345BDC4
	0x0345BBE0 LDR X8, [X19 + 0x58]
	0x0345BBE4 CBZ X8, 0x345BF64
	0x0345BBE8 LDR X21, [X8 + 0x18]
	0x0345BBEC CBZ X21, 0x345BF68
	0x0345BBF0 ADRP X23, 0xC99000
	0x0345BBF4 LDR X8, [X21]
	0x0345BBF8 LDR X23, [X23 + 0x818]
	0x0345BBFC LDRH W9, [X8 + 0x12E]
	0x0345BC00 LDR X1, [X23]
	0x0345BC04 CBZ X9, 0x345BC28
	0x0345BC08 LDR X10, [X8 + 0xB0]
	0x0345BC0C ADD X10, X10, 0x8
	0x0345BC10 LDUR X11, [X10 - 0x8]
	0x0345BC14 CMP X11, X1
	0x0345BC18 B.EQ 0x345BC38
	0x0345BC1C SUBS X9, X9, 0x1
	0x0345BC20 ADD X10, X10, 0x10
	0x0345BC24 B.NE 0x345BC10
	0x0345BC28 MOVZ W2, 0x7
	0x0345BC2C MOV X0, X21
	0x0345BC30 BL 0x1C5C788
	0x0345BC34 B 0x345BC48
	0x0345BC38 LDR W9, [X10]
	0x0345BC3C ADD W9, W9, 0x7
	0x0345BC40 ADD X8, X8, W9, 0x4, SXTW
	0x0345BC44 ADD X0, X8, 0x138
	0x0345BC48 LDP X8, X1, [X0]
	0x0345BC4C MOV X0, X21
	0x0345BC50 BLR X8
	0x0345BC54 MOV X1, X31
	0x0345BC58 BL 0x32277A8
	0x0345BC5C TBNZ X0, 0x0, 0x345BDC0
	0x0345BC60 LDR X8, [X19 + 0x58]
	0x0345BC64 CBZ X8, 0x345BF6C
	0x0345BC68 ADRP X9, 0xC99000
	0x0345BC6C LDR X9, [X9 + 0x9F0]
	0x0345BC70 LDR X21, [X8 + 0x18]
	0x0345BC74 LDR X0, [X9]
	0x0345BC78 LDR W9, [X0 + 0xE0]
	0x0345BC7C CBNZ W9, 0x345BC84
	0x0345BC80 BL 0x1C16DFC
	0x0345BC84 MOV X0, X31
	0x0345BC88 BL 0x33616A4
	0x0345BC8C ADRP X22, 0xC9A000
	0x0345BC90 LDR X22, [X22 + 0xA10]
	0x0345BC94 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF83000
	011 Move W8, [X20+1947]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD5000
	018 Move X0, [X0+3896]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD5000
	021 Move X0, [X0+3904]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9C000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9B000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9A000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA1000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9A000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD5000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD5000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9A000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9A000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9A000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD5000
	054 Move X0, [X0+3912]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD5000
	057 Move X0, [X0+3920]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1947], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9C000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+128]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+128], X31
	077 Move [X19], W9
	078 Move X8, [X19+120]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+120], X31
	084 Move [X19], W9
	085 Move X8, 0xC9A000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD5000
	091 Move X8, [X8+3920]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass78_0..ctor, X0
	097 Move [X19+112], X21
	098 Compare X21, 0
	099 JumpIfEqual {360}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move V0, [X19+3]
	105 Move [X21+2], V0
	106 Move V0, [X19+4]
	107 Move [X21+3], V0
	108 Move V0, [X19+5]
	109 Move [X21+4], V0
	110 Move X8, [X19+96]
	111 Move [X21+80], X8
	112 Compare X20, 0
	113 JumpIfEqual {361}
	114 Move W8, [X20+16]
	115 Compare W8, 0
	116 JumpIfEqual {254}
	117 Move X8, [X19+112]
	118 Compare X8, 0
	119 JumpIfEqual {362}
	120 Move X21, [X8+24]
	121 Compare X21, 0
	122 JumpIfEqual {363}
	123 Move X23, 0xC9A000
	124 Move X8, [X21]
	125 Move X23, [X23+2072]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Move X1, [X23]
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move W2, 7
	137 Move X0, X21
	138 Call 0x1C5D788
	139 Move W9, [X10]
	140 Add W9, W9, 7
	141 Add X8, X8, W9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X1, [X0+8]
	145 Move X0, X21
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X1, X31
	148 Call String.IsNullOrEmpty, X0
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {252}
	153 Move X8, [X19+112]
	154 Compare X8, 0
	155 JumpIfEqual {364}
	156 Move X9, 0xC9A000
	157 Move X9, [X9+2544]
	158 Move X21, [X8+24]
	159 Move X0, [X9]
	160 Move W9, [X0+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, X31
	165 Call DateTime.get_UtcNow
	166 Move X22, 0xC9B000
	167 Move X22, [X22+2576]
	168 Move X8, X0
	169 Move [X31+40], X8
	170 Move X0, [X22]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {176}
	174 Call 0x1C17DFC
	175 Move X0, [X22]
	176 Move X8, [X0+184]
	177 Move X1, [X8]
	178 Add X0, X31, 40
	179 Move X2, X31
	180 Call DateTime.Add, X0, X1
	181 Compare X21, 0
	182 JumpIfEqual {365}
	183 Move X8, [X21]
	184 Move X1, [X23]
	185 Move X22, X0
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 11
	196 Move X0, X21
	197 Call 0x1C5D788
	198 Move W9, [X10]
	199 Add W9, W9, 11
	200 Add X8, X8, W9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X2, [X0+8]
	204 Move X0, X21
	205 Move X1, X22
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {252}
	211 Move X8, [X19+112]
	212 Compare X8, 0
	213 JumpIfEqual {366}
	214 Move X1, [X8+24]
	215 Move X3, [X19+104]
	216 Move X4, [X8+80]
	217 Move X0, X20
	218 Move X2, X31
	219 Move X5, X31
	220 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	221 Compare X0, 0
	222 JumpIfEqual {367}
	223 Move X8, 0xC9A000
	224 Move X8, [X8+2112]
	225 Move X1, [X8]
	226 Call Task`1<Object>.GetAwaiter, X0
	227 Move X8, 0xC9A000
	228 Move X8, [X8+2104]
	229 Move [X31+32], X0
	230 Move X1, [X8]
	231 Add X0, X31, 32
	232 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfEqual {85}
	237 Move [X19], W31
	238 Move X8, [X31+32]
	239 Move [X19+120], X8
	240 Move X0, [X25]
	241 Move W8, [X0+224]
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Move X8, 0xCD5000
	246 Move X8, [X8+3896]
	247 Add X0, X19, 8
	248 Move X3, [X8]
	249 Add X1, X31, 32
	250 Move X2, X19
	251 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	252 Compare X20, 0
	253 JumpIfEqual {359}
	254 Move X8, 0xCA1000
	255 Move X8, [X8+2072]
	256 Move X21, [X20+88]
	257 Move X23, [X19+112]
	258 Move X0, [X8]
	259 Call 0x1C17F10
	260 Move X8, 0xCD5000
	261 Move X8, [X8+3912]
	262 Move X22, X0
	263 Move X2, [X8]
	264 Move X1, X23
	265 Move X3, X31
	266 Call Func`1<Object>..ctor, X0, X1, X2
	267 Move X8, [X19+112]
	268 Compare X8, 0
	269 JumpIfEqual {356}
	270 Move X9, 0xCD5000
	271 Move X23, [X19+104]
	272 Move X9, [X9+1992]
	273 Compare X23, 0
	274 JumpIfNotEqual {276}
	275 Move X23, [X20+24]
	276 Move X20, [X8+24]
	277 Move X1, [X8+80]
	278 Move X2, [X9]
	279 Move [X31+8], X31
	280 Move [X31+16], X31
	281 Add X0, X31, 8
	282 Call Nullable`1<CancellationToken>..ctor, X0, X1
	283 Move X8, 0xCD5000
	284 Move X8, [X8+2000]
	285 Move X0, [X8]
	286 Call 0x1C17F10
	287 Move X3, [X31+8]
	288 Move X4, [X31+16]
	289 Move X24, X0
	290 Move X1, X20
	291 Move X2, X23
	292 Move X5, X31
	293 Call RetryHistory..ctor, X0, X1, X2, X3
	294 Compare X21, 0
	295 JumpIfEqual {357}
	296 Move X0, X21
	297 Move X1, X22
	298 Move X2, X24
	299 Move X3, X31
	300 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	301 Compare X0, 0
	302 JumpIfEqual {358}
	303 Move X1, X31
	304 Call Task.GetAwaiter, X0
	305 Move [X31+24], X0
	306 Add X0, X31, 24
	307 Move X1, X31
	308 Call TaskAwaiter.get_IsCompleted, X0
	309 Move TEMP, X0
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfNotEqual {330}
	313 Add X0, X31, 24
	314 Move X1, X31
	315 Call TaskAwaiter.GetResult, X0
	316 Move TEMP, 1
	317 Not TEMP
	318 Move W8, TEMP
	319 Move [X19], W8
	320 Move [X19+112], X31
	321 Move X0, [X25]
	322 Add X19, X19, 8
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Move X0, X19
	328 Move X1, X31
	329 Call AsyncTaskMethodBuilder.SetResult, X0
	330 Move W8, 1
	331 Move [X19], W8
	332 Move X8, [X31+24]
	333 Move [X19+128], X8
	334 Move X0, [X25]
	335 Move W8, [X0+224]
	336 Compare W8, 0
	337 JumpIfNotEqual {339}
	338 Call 0x1C17DFC
	339 Move X8, 0xCD5000
	340 Move X8, [X8+3904]
	341 Add X0, X19, 8
	342 Move X3, [X8]
	343 Add X1, X31, 24
	344 Move X2, X19
	345 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	346 Move X20, [X31+96]
	347 Move X19, [X31+104]
	348 Move X22, [X31+80]
	349 Move X21, [X31+88]
	350 Move X24, [X31+64]
	351 Move X23, [X31+72]
	352 Move X30, [X31+48]
	353 Move X25, [X31+56]
	354 Add X31, X31, 112
	355 Return 
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Move X20, X0
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X0, X20
	371 Call 0x3EB2AD0
	372 Move X20, X0
	373 Move X0, 0xC99000
	374 Move X0, [X0+2000]
	375 Call 0x1C17D08
	376 Move X8, [X20]
	377 Move X1, [X8]
	378 Call 0x1C18270
	379 Move TEMP, X0
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfNotEqual {401}
	383 Move X20, [X20]
	384 Call 0x3EB2AE0
	385 Move TEMP, 1
	386 Not TEMP
	387 Move W8, TEMP
	388 Move [X19+112], X31
	389 Move [X19+8], W8
	390 Move X0, 0xC9C000
	391 Move X0, [X0+640]
	392 Call 0x1C17D08
	393 Move W8, [X0+224]
	394 Compare W8, 0
	395 JumpIfNotEqual {397}
	396 Call 0x1C17DFC
	397 Move X0, X19
	398 Move X1, X20
	399 Move X2, X31
	400 Call AsyncTaskMethodBuilder.SetException, X0, X1
	401 Move W0, 8
	402 Call 0x3EB2AF0
	403 Move X8, [X20]
	404 Move [X0], X8
	405 Move X1, 0xA5A000
	406 Add X1, X1, 3672
	407 Move X2, X31
	408 Call 0x3EB2B00
	409 Move X20, X0
	410 Call 0x3EB2AE0
	411 Move X0, X20
	412 Call 0x1D2D690
	413 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345BC98 STR X8, [X31 + 0x28]
	0x0345BC9C LDR X0, [X22]
	0x0345BCA0 LDR W8, [X0 + 0xE0]
	0x0345BCA4 CBNZ W8, 0x345BCB0
	0x0345BCA8 BL 0x1C16DFC
	0x0345BCAC LDR X0, [X22]
	0x0345BCB0 LDR X8, [X0 + 0xB8]
	0x0345BCB4 LDR X1, [X8]
	0x0345BCB8 ADD X0, X31, 0x28
	0x0345BCBC MOV X2, X31
	0x0345BCC0 BL 0x335FC68
	0x0345BCC4 CBZ X21, 0x345BF70
	0x0345BCC8 LDR X8, [X21]
	0x0345BCCC LDR X1, [X23]
	0x0345BCD0 MOV X22, X0
	0x0345BCD4 LDRH W9, [X8 + 0x12E]
	0x0345BCD8 CBZ X9, 0x345BCFC
	0x0345BCDC LDR X10, [X8 + 0xB0]
	0x0345BCE0 ADD X10, X10, 0x8
	0x0345BCE4 LDUR X11, [X10 - 0x8]
	0x0345BCE8 CMP X11, X1
	0x0345BCEC B.EQ 0x345BD0C
	0x0345BCF0 SUBS X9, X9, 0x1
	0x0345BCF4 ADD X10, X10, 0x10
	0x0345BCF8 B.NE 0x345BCE4
	0x0345BCFC MOVZ W2, 0xB

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF83000
	007 Move X22, 0xC9C000
	008 Move W8, [X21+1948]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9C000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1948], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

