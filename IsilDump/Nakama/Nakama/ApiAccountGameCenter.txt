Type: Nakama.ApiAccountGameCenter

Method: System.String get_BundleId()

Disassembly:
	0x034044DC ADD X31, X31, 0x70
	0x034044E0 B 0x321B938

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_BundleId(System.String value)

Disassembly:
	0x034044E4 BL 0x1C16F20
	0x034044E8 BL 0x1C16F28

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_PlayerId()

Disassembly:
	0x034044EC BL 0x1C16F20
	0x034044F0 BL 0x1C16F28

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_PlayerId(System.String value)

Disassembly:
	0x034044F4 BL 0x1C16F28
	0x034044F8 BL 0x1C16F28

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_PublicKeyUrl()

Disassembly:
	0x034044FC BL 0x1C16F28
	0x03404500 BL 0x1C16F20

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_PublicKeyUrl(System.String value)

Disassembly:
	0x03404504 MOV X0, X22
	0x03404508 BL 0x1C16F18

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Salt()

Disassembly:
	0x0340450C B 0x3404538
	0x03404510 B 0x3404538

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Salt(System.String value)

Disassembly:
	0x03404514 B 0x3404538
	0x03404518 B 0x3404538

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String get_Signature()

Disassembly:
	0x0340451C B 0x3404538
	0x03404520 B 0x3404538

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_Signature(System.String value)

Disassembly:
	0x03404524 B 0x3404538
	0x03404528 MOV X21, X27

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_TimestampSeconds()

Disassembly:
	0x0340452C B 0x3404538
	0x03404530 B 0x3404538

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_TimestampSeconds(System.String value)

Disassembly:
	0x03404534 B 0x3404538
	0x03404538 CMP W1, 0x1

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x0340453C B.NE 0x3404550
	0x03404540 BL 0x3EB1AD0
	0x03404544 LDR X22, [X0]
	0x03404548 BL 0x3EB1AE0
	0x0340454C B 0x340442C
	0x03404550 MOV X19, X0
	0x03404554 MOV X22, X31
	0x03404558 B 0x3404560
	0x0340455C MOV X19, X0
	0x03404560 CBZ X20, 0x34045C4
	0x03404564 LDR X8, [X20]
	0x03404568 ADRP X10, 0xCEF000
	0x0340456C LDRH W9, [X8 + 0x12E]
	0x03404570 LDR X10, [X10 + 0xE00]
	0x03404574 LDR X1, [X10]
	0x03404578 CBZ X9, 0x340459C
	0x0340457C LDR X10, [X8 + 0xB0]
	0x03404580 ADD X10, X10, 0x8
	0x03404584 LDUR X11, [X10 - 0x8]
	0x03404588 CMP X11, X1
	0x0340458C B.EQ 0x34045AC
	0x03404590 SUBS X9, X9, 0x1
	0x03404594 ADD X10, X10, 0x10
	0x03404598 B.NE 0x3404584
	0x0340459C MOV X0, X20
	0x034045A0 MOV W2, W31
	0x034045A4 BL 0x1C5C788
	0x034045A8 B 0x34045B8
	0x034045AC LDRSW X9, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFDA000
	005 Move W8, [X20+1307]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCF1000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCF1000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1307], W8
	019 Move X19, [X19+64]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCF1000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCF1000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x034045B0 ADD X8, X8, X9, 0x4, LSL
	0x034045B4 ADD X0, X8, 0x138

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x034045B8 LDP X8, X1, [X0]
	0x034045BC MOV X0, X20

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034045C0 BLR X8
	0x034045C4 CBNZ X22, 0x34045D0
	0x034045C8 MOV X0, X19
	0x034045CC BL 0x1D2C690
	0x034045D0 MOV X0, X22
	0x034045D4 BL 0x1C16F18
	0x034045D8 BL 0x1990590
	0x034045DC MOV X1, X31
	0x034045E0 B 0x33BDD8C
	0x034045E4 LDR X0, [X0 + 0x10]
	0x034045E8 RET
	0x034045EC STR X1, [X0 + 0x10]
	0x034045F0 RET
	0x034045F4 LDR W0, [X0 + 0x18]
	0x034045F8 RET
	0x034045FC STR W1, [X0 + 0x18]
	0x03404600 RET
	0x03404604 LDR X0, [X0 + 0x20]
	0x03404608 RET
	0x0340460C STR X1, [X0 + 0x20]
	0x03404610 RET
	0x03404614 LDR X0, [X0 + 0x28]
	0x03404618 RET
	0x0340461C STR X1, [X0 + 0x28]
	0x03404620 RET
	0x03404624 LDR X0, [X0 + 0x30]
	0x03404628 RET
	0x0340462C STR X1, [X0 + 0x30]
	0x03404630 RET
	0x03404634 LDR X0, [X0 + 0x38]
	0x03404638 RET
	0x0340463C STR X1, [X0 + 0x38]
	0x03404640 RET
	0x03404644 LDRB W0, [X0 + 0x40]
	0x03404648 RET
	0x0340464C AND W8, W1, 0x1
	0x03404650 STRB W8, [X0 + 0x40]
	0x03404654 RET
	0x03404658 LDR X0, [X0 + 0x48]
	0x0340465C RET
	0x03404660 STR X1, [X0 + 0x48]
	0x03404664 RET
	0x03404668 LDR X0, [X0 + 0x50]
	0x0340466C RET
	0x03404670 STR X1, [X0 + 0x50]
	0x03404674 RET
	0x03404678 LDR X0, [X0 + 0x58]
	0x0340467C RET
	0x03404680 STR X1, [X0 + 0x58]
	0x03404684 RET
	0x03404688 LDR X0, [X0 + 0x60]
	0x0340468C RET
	0x03404690 STR X1, [X0 + 0x60]
	0x03404694 RET
	0x03404698 LDR X0, [X0 + 0x68]
	0x0340469C RET
	0x034046A0 STR X1, [X0 + 0x68]
	0x034046A4 RET
	0x034046A8 LDR X0, [X0 + 0x70]
	0x034046AC RET
	0x034046B0 STR X1, [X0 + 0x70]
	0x034046B4 RET
	0x034046B8 SUB X31, X31, 0x60
	0x034046BC STP X30, X27, [X31 + 0x10]
	0x034046C0 STP X26, X25, [X31 + 0x20]
	0x034046C4 STP X24, X23, [X31 + 0x30]
	0x034046C8 STP X22, X21, [X31 + 0x40]
	0x034046CC STP X20, X19, [X31 + 0x50]
	0x034046D0 ADRP X21, 0xFD9000
	0x034046D4 ADRP X24, 0xCEF000
	0x034046D8 ADRP X20, 0xD29000
	0x034046DC ADRP X22, 0xCEF000
	0x034046E0 ADRP X23, 0xCEF000
	0x034046E4 LDRB W8, [X21 + 0x521]
	0x034046E8 LDR X24, [X24 + 0x988]
	0x034046EC LDR X20, [X20 + 0xDD0]
	0x034046F0 LDR X22, [X22 + 0x838]
	0x034046F4 LDR X23, [X23 + 0x9D0]
	0x034046F8 MOV X19, X0
	0x034046FC TBNZ X8, 0x0, 0x34047E0
	0x03404700 ADRP X0, 0xCEF000
	0x03404704 LDR X0, [X0 + 0xB58]
	0x03404708 BL 0x1C16CF4
	0x0340470C ADRP X0, 0xCEF000
	0x03404710 LDR X0, [X0 + 0x758]
	0x03404714 BL 0x1C16CF4
	0x03404718 ADRP X0, 0xCEF000
	0x0340471C LDR X0, [X0 + 0x9D0]
	0x03404720 BL 0x1C16CF4
	0x03404724 ADRP X0, 0xD29000
	0x03404728 LDR X0, [X0 + 0xDD8]
	0x0340472C BL 0x1C16CF4
	0x03404730 ADRP X0, 0xD29000
	0x03404734 LDR X0, [X0 + 0xDE0]
	0x03404738 BL 0x1C16CF4
	0x0340473C ADRP X0, 0xCEF000
	0x03404740 LDR X0, [X0 + 0x838]
	0x03404744 BL 0x1C16CF4
	0x03404748 ADRP X0, 0xD29000
	0x0340474C LDR X0, [X0 + 0xDE8]
	0x03404750 BL 0x1C16CF4
	0x03404754 ADRP X0, 0xD29000
	0x03404758 LDR X0, [X0 + 0xDF0]
	0x0340475C BL 0x1C16CF4
	0x03404760 ADRP X0, 0xD29000
	0x03404764 LDR X0, [X0 + 0xDF8]
	0x03404768 BL 0x1C16CF4
	0x0340476C ADRP X0, 0xD29000
	0x03404770 LDR X0, [X0 + 0xE00]
	0x03404774 BL 0x1C16CF4
	0x03404778 ADRP X0, 0xD29000
	0x0340477C LDR X0, [X0 + 0xE08]
	0x03404780 BL 0x1C16CF4
	0x03404784 ADRP X0, 0xCEF000
	0x03404788 LDR X0, [X0 + 0x988]
	0x0340478C BL 0x1C16CF4
	0x03404790 ADRP X0, 0xD29000
	0x03404794 LDR X0, [X0 + 0xE10]
	0x03404798 BL 0x1C16CF4
	0x0340479C ADRP X0, 0xD29000
	0x034047A0 LDR X0, [X0 + 0xE18]
	0x034047A4 BL 0x1C16CF4
	0x034047A8 ADRP X0, 0xD29000
	0x034047AC LDR X0, [X0 + 0xE20]
	0x034047B0 BL 0x1C16CF4
	0x034047B4 ADRP X0, 0xD29000
	0x034047B8 LDR X0, [X0 + 0xDD0]
	0x034047BC BL 0x1C16CF4
	0x034047C0 ADRP X0, 0xD29000
	0x034047C4 LDR X0, [X0 + 0xE28]
	0x034047C8 BL 0x1C16CF4
	0x034047CC ADRP X0, 0xD29000
	0x034047D0 LDR X0, [X0 + 0xE30]
	0x034047D4 BL 0x1C16CF4
	0x034047D8 MOVZ W8, 0x1
	0x034047DC STRB W8, [X21 + 0x521]
	0x034047E0 LDR X0, [X24]
	0x034047E4 LDR X2, [X19 + 0x10]
	0x034047E8 LDR X1, [X20]
	0x034047EC LDR X3, [X22]
	0x034047F0 MOV X4, X31
	0x034047F4 BL 0x32277C4
	0x034047F8 LDR X8, [X23]
	0x034047FC MOV X21, X0
	0x03404800 MOVZ W1, 0x4
	0x03404804 MOV X0, X8
	0x03404808 BL 0x1C16D6C
	0x0340480C CBZ X0, 0x3404B24
	0x03404810 MOV X20, X0
	0x03404814 CBZ X21, 0x340482C
	0x03404818 LDR X8, [X20]
	0x0340481C MOV X0, X21
	0x03404820 LDR X1, [X8 + 0x40]
	0x03404824 BL 0x1C16E00
	0x03404828 CBZ X0, 0x3404B18
	0x0340482C LDR W8, [X20 + 0x18]
	0x03404830 CBZ W8, 0x3404B14
	0x03404834 ADRP X24, 0xD29000
	0x03404838 LDR X24, [X24 + 0xE20]
	0x0340483C STR X21, [X20 + 0x20]
	0x03404840 LDR X0, [X24]
	0x03404844 CBZ X0, 0x340485C
	0x03404848 LDR X8, [X20]
	0x0340484C LDR X1, [X8 + 0x40]
	0x03404850 BL 0x1C16E00
	0x03404854 CBZ X0, 0x3404B18
	0x03404858 LDR W8, [X20 + 0x18]
	0x0340485C CMP W8, 0x1
	0x03404860 B.LS 0x3404B14
	0x03404864 LDR X8, [X24]
	0x03404868 ADRP X9, 0xCEF000
	0x0340486C LDR X9, [X9 + 0x758]
	0x03404870 ADD X1, X31, 0xC
	0x03404874 STR X8, [X20 + 0x28]
	0x03404878 LDR W8, [X19 + 0x18]
	0x0340487C LDR X0, [X9]
	0x03404880 STR W8, [X31 + 0xC]
	0x03404884 BL 0x1C16E04
	0x03404888 MOV X21, X0
	0x0340488C CBZ X0, 0x34048A4
	0x03404890 LDR X8, [X20]
	0x03404894 MOV X0, X21
	0x03404898 LDR X1, [X8 + 0x40]
	0x0340489C BL 0x1C16E00
	0x034048A0 CBZ X0, 0x3404B18
	0x034048A4 LDR W8, [X20 + 0x18]
	0x034048A8 CMP W8, 0x2
	0x034048AC B.LS 0x3404B14
	0x034048B0 STR X21, [X20 + 0x30]
	0x034048B4 LDR X0, [X22]
	0x034048B8 CBZ X0, 0x34048D0
	0x034048BC LDR X8, [X20]
	0x034048C0 LDR X1, [X8 + 0x40]
	0x034048C4 BL 0x1C16E00
	0x034048C8 CBZ X0, 0x3404B18
	0x034048CC LDR W8, [X20 + 0x18]
	0x034048D0 CMP W8, 0x3
	0x034048D4 B.LS 0x3404B14
	0x034048D8 ADRP X21, 0xD29000
	0x034048DC LDR X21, [X21 + 0xDD8]
	0x034048E0 LDR X8, [X22]
	0x034048E4 ADRP X24, 0xD29000
	0x034048E8 ADRP X25, 0xD29000
	0x034048EC ADRP X26, 0xD29000
	0x034048F0 LDR X24, [X24 + 0xDE0]
	0x034048F4 LDR X25, [X25 + 0xDF8]
	0x034048F8 LDR X26, [X26 + 0xE00]
	0x034048FC MOV X0, X20
	0x03404900 MOV X1, X31
	0x03404904 STR X8, [X20 + 0x38]
	0x03404908 BL 0x3227578
	0x0340490C LDR X2, [X19 + 0x20]
	0x03404910 LDR X1, [X21]
	0x03404914 LDR X3, [X22]
	0x03404918 MOV X4, X31
	0x0340491C BL 0x32277C4
	0x03404920 LDR X2, [X19 + 0x28]
	0x03404924 LDR X1, [X24]
	0x03404928 LDR X3, [X22]
	0x0340492C MOV X4, X31
	0x03404930 BL 0x32277C4
	0x03404934 LDR X2, [X19 + 0x30]
	0x03404938 LDR X1, [X25]
	0x0340493C LDR X3, [X22]
	0x03404940 MOV X4, X31
	0x03404944 BL 0x32277C4
	0x03404948 LDR X2, [X19 + 0x38]
	0x0340494C LDR X1, [X26]
	0x03404950 LDR X3, [X22]
	0x03404954 MOV X4, X31
	0x03404958 BL 0x32277C4
	0x0340495C LDR X8, [X23]
	0x03404960 MOV X21, X0
	0x03404964 MOVZ W1, 0x4
	0x03404968 MOV X0, X8
	0x0340496C BL 0x1C16D6C
	0x03404970 CBZ X0, 0x3404B24
	0x03404974 MOV X20, X0
	0x03404978 CBZ X21, 0x3404990
	0x0340497C LDR X8, [X20]
	0x03404980 MOV X0, X21
	0x03404984 LDR X1, [X8 + 0x40]
	0x03404988 BL 0x1C16E00
	0x0340498C CBZ X0, 0x3404B18
	0x03404990 LDR W8, [X20 + 0x18]
	0x03404994 CBZ W8, 0x3404B14
	0x03404998 ADRP X23, 0xD29000
	0x0340499C LDR X23, [X23 + 0xE28]
	0x034049A0 STR X21, [X20 + 0x20]
	0x034049A4 LDR X0, [X23]
	0x034049A8 CBZ X0, 0x34049C0
	0x034049AC LDR X8, [X20]
	0x034049B0 LDR X1, [X8 + 0x40]
	0x034049B4 BL 0x1C16E00
	0x034049B8 CBZ X0, 0x3404B18
	0x034049BC LDR W8, [X20 + 0x18]
	0x034049C0 CMP W8, 0x1
	0x034049C4 B.LS 0x3404B14
	0x034049C8 LDR X8, [X23]
	0x034049CC ADRP X9, 0xCEF000
	0x034049D0 LDR X9, [X9 + 0xB58]
	0x034049D4 ADD X1, X31, 0x8
	0x034049D8 STR X8, [X20 + 0x28]
	0x034049DC LDRB W8, [X19 + 0x40]
	0x034049E0 LDR X0, [X9]
	0x034049E4 STRB W8, [X31 + 0x8]
	0x034049E8 BL 0x1C16E04
	0x034049EC MOV X21, X0
	0x034049F0 CBZ X0, 0x3404A08
	0x034049F4 LDR X8, [X20]
	0x034049F8 MOV X0, X21
	0x034049FC LDR X1, [X8 + 0x40]
	0x03404A00 BL 0x1C16E00
	0x03404A04 CBZ X0, 0x3404B18
	0x03404A08 LDR W8, [X20 + 0x18]
	0x03404A0C CMP W8, 0x2
	0x03404A10 B.LS 0x3404B14
	0x03404A14 STR X21, [X20 + 0x30]
	0x03404A18 LDR X0, [X22]
	0x03404A1C CBZ X0, 0x3404A34
	0x03404A20 LDR X8, [X20]
	0x03404A24 LDR X1, [X8 + 0x40]
	0x03404A28 BL 0x1C16E00
	0x03404A2C CBZ X0, 0x3404B18
	0x03404A30 LDR W8, [X20 + 0x18]
	0x03404A34 CMP W8, 0x3
	0x03404A38 B.LS 0x3404B14
	0x03404A3C ADRP X23, 0xD29000
	0x03404A40 ADRP X24, 0xD29000
	0x03404A44 ADRP X25, 0xD29000
	0x03404A48 LDR X23, [X23 + 0xE08]
	0x03404A4C LDR X24, [X24 + 0xE10]
	0x03404A50 LDR X25, [X25 + 0xDE8]
	0x03404A54 LDR X8, [X22]
	0x03404A58 ADRP X26, 0xD29000
	0x03404A5C ADRP X27, 0xD29000
	0x03404A60 ADRP X21, 0xD29000
	0x03404A64 LDR X26, [X26 + 0xE18]
	0x03404A68 LDR X27, [X27 + 0xDF0]
	0x03404A6C LDR X21, [X21 + 0xE30]
	0x03404A70 MOV X0, X20
	0x03404A74 MOV X1, X31
	0x03404A78 STR X8, [X20 + 0x38]
	0x03404A7C BL 0x3227578
	0x03404A80 LDR X2, [X19 + 0x48]
	0x03404A84 LDR X1, [X23]
	0x03404A88 LDR X3, [X22]
	0x03404A8C MOV X4, X31
	0x03404A90 BL 0x32277C4
	0x03404A94 LDR X2, [X19 + 0x50]
	0x03404A98 LDR X1, [X24]
	0x03404A9C LDR X3, [X22]
	0x03404AA0 MOV X4, X31
	0x03404AA4 BL 0x32277C4
	0x03404AA8 LDR X2, [X19 + 0x58]
	0x03404AAC LDR X1, [X25]
	0x03404AB0 LDR X3, [X22]
	0x03404AB4 MOV X4, X31
	0x03404AB8 BL 0x32277C4
	0x03404ABC LDR X2, [X19 + 0x60]
	0x03404AC0 LDR X1, [X26]
	0x03404AC4 LDR X3, [X22]
	0x03404AC8 MOV X4, X31
	0x03404ACC BL 0x32277C4
	0x03404AD0 LDR X2, [X19 + 0x68]
	0x03404AD4 LDR X1, [X27]
	0x03404AD8 LDR X3, [X22]
	0x03404ADC MOV X4, X31
	0x03404AE0 BL 0x32277C4
	0x03404AE4 LDR X2, [X19 + 0x70]
	0x03404AE8 LDR X1, [X21]
	0x03404AEC LDR X3, [X22]
	0x03404AF0 MOV X4, X31
	0x03404AF4 BL 0x32277C4
	0x03404AF8 LDP X20, X19, [X31 + 0x50]
	0x03404AFC LDP X22, X21, [X31 + 0x40]
	0x03404B00 LDP X24, X23, [X31 + 0x30]
	0x03404B04 LDP X26, X25, [X31 + 0x20]
	0x03404B08 LDP X30, X27, [X31 + 0x10]
	0x03404B0C ADD X31, X31, 0x60
	0x03404B10 RET
	0x03404B14 BL 0x1C16F28
	0x03404B18 BL 0x1C16F44
	0x03404B1C MOV X1, X31
	0x03404B20 BL 0x1C16DEC
	0x03404B24 BL 0x1C16F20
	0x03404B28 MOV X1, X31
	0x03404B2C B 0x33BDD8C
	0x03404B30 LDR X0, [X0 + 0x10]
	0x03404B34 RET
	0x03404B38 STR X1, [X0 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X28, 0xFDA000
	015 Move X19, 0xCF0000
	016 Move X27, 0xD2A000
	017 Move X21, 0xCF0000
	018 Move X26, 0xD2A000
	019 Move X25, 0xD2A000
	020 Move X24, 0xD2A000
	021 Move X23, 0xD2A000
	022 Move X22, 0xD2A000
	023 Move X19, [X19+2440]
	024 Move X27, [X27+3488]
	025 Move X21, [X21+2104]
	026 Move W8, [X28+1308]
	027 Move X26, [X26+3496]
	028 Move X25, [X25+3504]
	029 Move X24, [X24+3512]
	030 Move X23, [X23+3520]
	031 Move X22, [X22+3528]
	032 Move X20, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {99}
	037 Move X0, 0xCF0000
	038 Move X0, [X0+3584]
	039 Call 0x1C17CF4
	040 Move X0, 0xCF3000
	041 Move X0, [X0+400]
	042 Call 0x1C17CF4
	043 Move X0, 0xCF3000
	044 Move X0, [X0+408]
	045 Call 0x1C17CF4
	046 Move X0, 0xCF0000
	047 Move X0, [X0+3608]
	048 Call 0x1C17CF4
	049 Move X0, 0xCF3000
	050 Move X0, [X0+432]
	051 Call 0x1C17CF4
	052 Move X0, 0xCF3000
	053 Move X0, [X0+440]
	054 Call 0x1C17CF4
	055 Move X0, 0xCF0000
	056 Move X0, [X0+2760]
	057 Call 0x1C17CF4
	058 Move X0, 0xD2A000
	059 Move X0, [X0+3504]
	060 Call 0x1C17CF4
	061 Move X0, 0xD1D000
	062 Move X0, [X0+864]
	063 Call 0x1C17CF4
	064 Move X0, 0xD1D000
	065 Move X0, [X0+4024]
	066 Call 0x1C17CF4
	067 Move X0, 0xD2A000
	068 Move X0, [X0+3496]
	069 Call 0x1C17CF4
	070 Move X0, 0xD2A000
	071 Move X0, [X0+3512]
	072 Call 0x1C17CF4
	073 Move X0, 0xCFB000
	074 Move X0, [X0+1752]
	075 Call 0x1C17CF4
	076 Move X0, 0xD2A000
	077 Move X0, [X0+3456]
	078 Call 0x1C17CF4
	079 Move X0, 0xCF0000
	080 Move X0, [X0+2104]
	081 Call 0x1C17CF4
	082 Move X0, 0xD2A000
	083 Move X0, [X0+3528]
	084 Call 0x1C17CF4
	085 Move X0, 0xD2A000
	086 Move X0, [X0+3488]
	087 Call 0x1C17CF4
	088 Move X0, 0xD2A000
	089 Move X0, [X0+3520]
	090 Call 0x1C17CF4
	091 Move X0, 0xCF0000
	092 Move X0, [X0+2440]
	093 Call 0x1C17CF4
	094 Move X0, 0xCF0000
	095 Move X0, [X0+2120]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X28+1308], W8
	099 Move X0, [X19]
	100 Move X2, [X20+16]
	101 Move X1, [X27]
	102 Move X3, [X21]
	103 Move X4, X31
	104 Call String.Concat, X0, X1, X2, X3
	105 Move X2, [X20+24]
	106 Move X1, [X26]
	107 Move X3, [X21]
	108 Move X4, X31
	109 Call String.Concat, X0, X1, X2, X3
	110 Move X2, [X20+32]
	111 Move X1, [X25]
	112 Move X3, [X21]
	113 Move X4, X31
	114 Call String.Concat, X0, X1, X2, X3
	115 Move X2, [X20+40]
	116 Move X1, [X24]
	117 Move X3, [X21]
	118 Move X4, X31
	119 Call String.Concat, X0, X1, X2, X3
	120 Move X2, [X20+48]
	121 Move X1, [X23]
	122 Move X3, [X21]
	123 Move X4, X31
	124 Call String.Concat, X0, X1, X2, X3
	125 Move X2, [X20+56]
	126 Move X1, [X22]
	127 Move X3, [X21]
	128 Move X4, X31
	129 Call String.Concat, X0, X1, X2, X3
	130 Move X27, [X19]
	131 Move [X31+8], X0
	132 Move X0, X20
	133 Call ApiAccountGameCenter.get_Vars, X0
	134 Compare X0, 0
	135 JumpIfEqual {313}
	136 Move X10, 0xCF3000
	137 Move X8, [X0]
	138 Move X10, [X10+400]
	139 Move X20, X0
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move X1, [X10]
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X20
	151 Move W2, W31
	152 Call 0x1C5D788
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Add X8, X8, X9
	155 Add X0, X8, 312
	156 Move X28, 0xCF0000
	157 Move X29, 0xCF3000
	158 Move X26, 0xCF0000
	159 Move X24, 0xD1D000
	160 Move X25, 0xD1D000
	161 Move X19, 0xCFB000
	162 Move X28, [X28+3608]
	163 Move X29, [X29+408]
	164 Move X26, [X26+2760]
	165 Move X24, [X24+864]
	166 Move X25, [X25+4024]
	167 Move X19, [X19+1752]
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X20
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X20, X0
	173 Move X0, X27
	174 Compare X20, 0
	175 JumpIfEqual {306}
	176 Move X8, [X20]
	177 Move X1, [X28]
	178 Move X21, X0
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X20
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X20
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {251}
	202 Move X8, [X20]
	203 Move X1, [X29]
	204 NotImplemented "Instruction LDRH not yet implemented."
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move X0, X20
	214 Move W2, W31
	215 Call 0x1C5D788
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Add X8, X8, X9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X1, [X0+8]
	221 Move X0, X20
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Move X23, X0
	224 Move X0, [X26]
	225 Move X22, X1
	226 Move W1, 5
	227 Call 0x1C17D6C
	228 Compare X0, 0
	229 JumpIfEqual {308}
	230 Move W8, [X0+24]
	231 Compare W8, 0
	232 JumpIfEqual {310}
	233 Move X9, [X24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move [X0+32], X9
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move [X0+40], X23
	238 Move X9, [X25]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move [X0+48], X9
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move [X0+56], X22
	243 Move X8, [X19]
	244 Move [X0+64], X8
	245 Move X1, X31
	246 Call String.Concat, X0
	247 Move X1, X0
	248 Move X0, X21
	249 Move X2, X31
	250 Call String.Concat, X0, X1
	251 Move X22, X31
	252 Compare X20, 0
	253 JumpIfEqual {277}
	254 Move X8, [X20]
	255 Move X10, 0xCF0000
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move X10, [X10+3584]
	258 Move X1, [X10]
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move X0, X20
	268 Move W2, W31
	269 Call 0x1C5D788
	270 NotImplemented "Instruction LDRSW not yet implemented."
	271 Add X8, X8, X9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X1, [X0+8]
	275 Move X0, X20
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Compare X22, 0
	278 JumpIfNotEqual {314}
	279 Move X8, 0xD2A000
	280 Move X8, [X8+3456]
	281 Move X1, X21
	282 Move X3, X31
	283 Move X0, [X8]
	284 Move X8, 0xCF0000
	285 Move X8, [X8+2120]
	286 Move X2, [X8]
	287 Call String.Concat, X0, X1, X2
	288 Move X1, X0
	289 Move X0, [X31+8]
	290 Move X20, [X31+96]
	291 Move X19, [X31+104]
	292 Move X22, [X31+80]
	293 Move X21, [X31+88]
	294 Move X24, [X31+64]
	295 Move X23, [X31+72]
	296 Move X26, [X31+48]
	297 Move X25, [X31+56]
	298 Move X28, [X31+32]
	299 Move X27, [X31+40]
	300 Move X29, [X31+16]
	301 Move X30, [X31+24]
	302 Move X2, X31
	303 Add X31, X31, 112
	304 Call String.Concat, X0, X1
	305 Return X0
	306 Call 0x1C17F20
	307 Call 0x1C17F28
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F28
	311 Call 0x1C17F28
	312 Call 0x1C17F28
	313 Call 0x1C17F20
	314 Move X0, X22
	315 Call 0x1C17F18
	316 Move X21, X27
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Call 0x3EB2AD0
	319 Move X22, [X0]
	320 Call 0x3EB2AE0
	321 Move X19, X0
	322 Move X22, X31
	323 Move X19, X0
	324 Compare X20, 0
	325 JumpIfEqual {349}
	326 Move X8, [X20]
	327 Move X10, 0xCF0000
	328 NotImplemented "Instruction LDRH not yet implemented."
	329 Move X10, [X10+3584]
	330 Move X1, [X10]
	331 Compare X9, 0
	332 JumpIfEqual {339}
	333 Move X10, [X8+176]
	334 Add X10, X10, 8
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Subtract X9, X9, 1
	338 Add X10, X10, 16
	339 Move X0, X20
	340 Move W2, W31
	341 Call 0x1C5D788
	342 NotImplemented "Instruction LDRSW not yet implemented."
	343 Add X8, X8, X9
	344 Add X0, X8, 312
	345 Move X8, [X0]
	346 Move X1, [X0+8]
	347 Move X0, X20
	348 NotImplemented "Instruction BLR not yet implemented."
	349 Compare X22, 0
	350 JumpIfNotEqual {353}
	351 Move X0, X19
	352 Call 0x1D2D690
	353 Move X0, X22
	354 Call 0x1C17F18
	355 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03404B3C RET
	0x03404B40 STR X30, [X31 - 0x20]!

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

