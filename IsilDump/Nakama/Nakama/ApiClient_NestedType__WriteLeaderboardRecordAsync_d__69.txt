Type: Nakama.ApiClient/<WriteLeaderboardRecordAsync>d__69

Method: System.Void MoveNext()

Disassembly:
	0x0343DF90 BL 0x2AA5098
	0x0343DF94 LDR X0, [X19 + 0x28]
	0x0343DF98 MOV X1, X31
	0x0343DF9C BL 0x3483BE4
	0x0343DFA0 MOV X23, X0
	0x0343DFA4 MOV X0, X31
	0x0343DFA8 BL 0x3241948
	0x0343DFAC CBZ X0, 0x343E208
	0x0343DFB0 LDR X8, [X0]
	0x0343DFB4 LDR X9, [X8 + 0x268]
	0x0343DFB8 LDR X2, [X8 + 0x270]
	0x0343DFBC MOV X1, X23
	0x0343DFC0 BLR X9
	0x0343DFC4 LDR X24, [X25 + 0x10]
	0x0343DFC8 CBZ X24, 0x343E20C
	0x0343DFCC ADRP X10, 0xCF1000
	0x0343DFD0 LDR X10, [X10 + 0x7B8]
	0x0343DFD4 LDR X8, [X24]
	0x0343DFD8 LDR W26, [X25 + 0x18]
	0x0343DFDC LDP X27, X25, [X19 + 0x40]
	0x0343DFE0 LDR X1, [X10]
	0x0343DFE4 LDRH W9, [X8 + 0x12E]
	0x0343DFE8 MOV X23, X0
	0x0343DFEC CBZ X9, 0x343E010
	0x0343DFF0 LDR X10, [X8 + 0xB0]
	0x0343DFF4 ADD X10, X10, 0x8
	0x0343DFF8 LDUR X11, [X10 - 0x8]
	0x0343DFFC CMP X11, X1
	0x0343E000 B.EQ 0x343E038
	0x0343E004 SUBS X9, X9, 0x1
	0x0343E008 ADD X10, X10, 0x10
	0x0343E00C B.NE 0x343DFF8
	0x0343E010 MOVZ W2, 0x3
	0x0343E014 MOV X0, X24
	0x0343E018 BL 0x1C5C788
	0x0343E01C B 0x343E048
	0x0343E020 LDR X8, [X19 + 0x50]
	0x0343E024 MOVN W9, 0x0
	0x0343E028 STR X8, [X31 + 0x18]
	0x0343E02C STR X31, [X19 + 0x50]
	0x0343E030 STR W9, [X19]
	0x0343E034 B 0x343E0A4
	0x0343E038 LDR W9, [X10]
	0x0343E03C ADD W9, W9, 0x3
	0x0343E040 ADD X8, X8, W9, 0x4, SXTW
	0x0343E044 ADD X0, X8, 0x138
	0x0343E048 LDP X8, X9, [X0]
	0x0343E04C MOV X0, X24
	0x0343E050 MOV X1, X21
	0x0343E054 MOV X2, X20
	0x0343E058 MOV X3, X22
	0x0343E05C MOV X4, X23
	0x0343E060 MOV W5, W26
	0x0343E064 MOV X6, X27
	0x0343E068 MOV X7, X25
	0x0343E06C STR X9, [X31]
	0x0343E070 BLR X8
	0x0343E074 CBZ X0, 0x343E210
	0x0343E078 ADRP X8, 0xCB8000
	0x0343E07C LDR X8, [X8 + 0x1F8]
	0x0343E080 LDR X1, [X8]
	0x0343E084 BL 0x269F5D0
	0x0343E088 ADRP X8, 0xCB8000
	0x0343E08C LDR X8, [X8 + 0x1F0]
	0x0343E090 STR X0, [X31 + 0x18]
	0x0343E094 LDR X1, [X8]
	0x0343E098 ADD X0, X31, 0x18
	0x0343E09C BL 0x2677430
	0x0343E0A0 TBZ X0, 0x0, 0x343E100
	0x0343E0A4 ADRP X8, 0xCB8000
	0x0343E0A8 LDR X8, [X8 + 0x1E0]
	0x0343E0AC ADD X0, X31, 0x18
	0x0343E0B0 LDR X1, [X8]
	0x0343E0B4 BL 0x2677474
	0x0343E0B8 ADRP X8, 0xCF1000
	0x0343E0BC LDR X8, [X8 + 0x530]
	0x0343E0C0 LDR X1, [X8]
	0x0343E0C4 BL 0x220E6DC
	0x0343E0C8 MOVN W8, 0x1
	0x0343E0CC STR W8, [X19], #0x8
	0x0343E0D0 MOV X20, X0
	0x0343E0D4 LDR X0, [X28]
	0x0343E0D8 ADRP X21, 0xCF1000
	0x0343E0DC LDR W8, [X0 + 0xE0]
	0x0343E0E0 LDR X21, [X21 + 0x528]
	0x0343E0E4 CBNZ W8, 0x343E0EC
	0x0343E0E8 BL 0x1C16DFC
	0x0343E0EC LDR X2, [X21]
	0x0343E0F0 MOV X0, X19
	0x0343E0F4 MOV X1, X20
	0x0343E0F8 BL 0x26322B0
	0x0343E0FC B 0x343E138
	0x0343E100 STR W31, [X19]
	0x0343E104 LDR X8, [X31 + 0x18]
	0x0343E108 STR X8, [X19 + 0x50]
	0x0343E10C LDR X0, [X28]
	0x0343E110 LDR W8, [X0 + 0xE0]
	0x0343E114 CBNZ W8, 0x343E11C
	0x0343E118 BL 0x1C16DFC
	0x0343E11C ADRP X8, 0xCF1000
	0x0343E120 LDR X8, [X8 + 0x588]
	0x0343E124 ADD X0, X19, 0x8
	0x0343E128 LDR X3, [X8]
	0x0343E12C ADD X1, X31, 0x18
	0x0343E130 MOV X2, X19
	0x0343E134 BL 0x1FB6B78
	0x0343E138 LDP X20, X19, [X31 + 0x60]
	0x0343E13C LDP X22, X21, [X31 + 0x50]
	0x0343E140 LDP X24, X23, [X31 + 0x40]
	0x0343E144 LDP X26, X25, [X31 + 0x30]
	0x0343E148 LDP X28, X27, [X31 + 0x20]
	0x0343E14C LDR X30, [X31 + 0x10]
	0x0343E150 ADD X31, X31, 0x70
	0x0343E154 RET
	0x0343E158 ADRP X0, 0xCBD000
	0x0343E15C LDR X0, [X0 + 0x578]
	0x0343E160 BL 0x1C16D08
	0x0343E164 BL 0x1C16F10
	0x0343E168 MOV X20, X0
	0x0343E16C ADRP X0, 0xCF0000
	0x0343E170 LDR X0, [X0 + 0xC80]
	0x0343E174 BL 0x1C16D08
	0x0343E178 MOV X1, X0
	0x0343E17C MOV X0, X20
	0x0343E180 MOV X2, X31
	0x0343E184 BL 0x3314A68
	0x0343E188 ADRP X0, 0xCF1000
	0x0343E18C LDR X0, [X0 + 0x590]
	0x0343E190 BL 0x1C16D08
	0x0343E194 MOV X1, X0
	0x0343E198 MOV X0, X20
	0x0343E19C BL 0x1C16DEC
	0x0343E1A0 ADRP X0, 0xCBD000
	0x0343E1A4 LDR X0, [X0 + 0x578]
	0x0343E1A8 BL 0x1C16D08
	0x0343E1AC BL 0x1C16F10
	0x0343E1B0 MOV X20, X0
	0x0343E1B4 ADRP X0, 0xCF1000
	0x0343E1B8 LDR X0, [X0 + 0x540]
	0x0343E1BC BL 0x1C16D08
	0x0343E1C0 MOV X1, X0
	0x0343E1C4 MOV X0, X20
	0x0343E1C8 MOV X2, X31
	0x0343E1CC BL 0x3314A68
	0x0343E1D0 ADRP X0, 0xCF1000
	0x0343E1D4 LDR X0, [X0 + 0x590]
	0x0343E1D8 BL 0x1C16D08
	0x0343E1DC MOV X1, X0
	0x0343E1E0 MOV X0, X20
	0x0343E1E4 BL 0x1C16DEC
	0x0343E1E8 BL 0x1C16F20
	0x0343E1EC BL 0x1C16F20
	0x0343E1F0 BL 0x1C16F20
	0x0343E1F4 BL 0x1C16F20
	0x0343E1F8 BL 0x1C16F28
	0x0343E1FC BL 0x1C16F20
	0x0343E200 BL 0x1C16F20
	0x0343E204 BL 0x1C16F20
	0x0343E208 BL 0x1C16F20
	0x0343E20C BL 0x1C16F20
	0x0343E210 BL 0x1C16F20
	0x0343E214 B 0x343E288
	0x0343E218 B 0x343E288
	0x0343E21C B 0x343E288
	0x0343E220 B 0x343E288
	0x0343E224 B 0x343E288
	0x0343E228 B 0x343E288
	0x0343E22C B 0x343E288
	0x0343E230 B 0x343E288
	0x0343E234 B 0x343E288
	0x0343E238 B 0x343E288
	0x0343E23C B 0x343E288
	0x0343E240 B 0x343E288
	0x0343E244 B 0x343E288
	0x0343E248 B 0x343E288
	0x0343E24C B 0x343E288
	0x0343E250 B 0x343E288
	0x0343E254 B 0x343E288
	0x0343E258 B 0x343E288
	0x0343E25C B 0x343E288
	0x0343E260 B 0x343E288
	0x0343E264 B 0x343E288
	0x0343E268 B 0x343E288
	0x0343E26C B 0x343E288
	0x0343E270 B 0x343E288
	0x0343E274 B 0x343E288
	0x0343E278 B 0x343E288
	0x0343E27C B 0x343E288
	0x0343E280 B 0x343E288
	0x0343E284 B 0x343E288
	0x0343E288 MOV X20, X0
	0x0343E28C CMP W1, 0x1
	0x0343E290 B.NE 0x343E32C
	0x0343E294 MOV X0, X20
	0x0343E298 BL 0x3EB1AD0
	0x0343E29C MOV X20, X0
	0x0343E2A0 ADRP X0, 0xCB5000
	0x0343E2A4 LDR X0, [X0 + 0x7D0]
	0x0343E2A8 BL 0x1C16D08
	0x0343E2AC LDR X8, [X20]
	0x0343E2B0 LDR X1, [X8]
	0x0343E2B4 BL 0x1C17270
	0x0343E2B8 TBZ X0, 0x0, 0x343E304
	0x0343E2BC LDR X20, [X20]
	0x0343E2C0 BL 0x3EB1AE0
	0x0343E2C4 MOVN W8, 0x1
	0x0343E2C8 STR W8, [X19], #0x8
	0x0343E2CC ADRP X0, 0xCF0000
	0x0343E2D0 LDR X0, [X0 + 0x5F8]
	0x0343E2D4 BL 0x1C16D08
	0x0343E2D8 LDR W8, [X0 + 0xE0]
	0x0343E2DC CBNZ W8, 0x343E2E4
	0x0343E2E0 BL 0x1C16DFC
	0x0343E2E4 ADRP X0, 0xCF1000
	0x0343E2E8 LDR X0, [X0 + 0x548]
	0x0343E2EC BL 0x1C16D08
	0x0343E2F0 MOV X2, X0
	0x0343E2F4 MOV X0, X19
	0x0343E2F8 MOV X1, X20
	0x0343E2FC BL 0x26324C8
	0x0343E300 B 0x343E138
	0x0343E304 MOVZ W0, 0x8
	0x0343E308 BL 0x3EB1AF0
	0x0343E30C LDR X8, [X20]
	0x0343E310 STR X8, [X0]
	0x0343E314 ADRP X1, 0xA76000
	0x0343E318 ADD X1, X1, 0xE58
	0x0343E31C MOV X2, X31
	0x0343E320 BL 0x3EB1B00
	0x0343E324 MOV X20, X0
	0x0343E328 BL 0x3EB1AE0
	0x0343E32C MOV X0, X20
	0x0343E330 BL 0x1D2C690
	0x0343E334 BL 0x1990590
	0x0343E338 STR X30, [X31 - 0x30]!
	0x0343E33C STP X22, X21, [X31 + 0x10]
	0x0343E340 STP X20, X19, [X31 + 0x20]
	0x0343E344 ADRP X22, 0xF9F000
	0x0343E348 ADRP X21, 0xCF0000
	0x0343E34C LDRB W8, [X22 + 0x69C]
	0x0343E350 LDR X21, [X21 + 0x5F8]
	0x0343E354 MOV X19, X1
	0x0343E358 MOV X20, X0
	0x0343E35C TBNZ X8, 0x0, 0x343E380
	0x0343E360 ADRP X0, 0xCF1000
	0x0343E364 LDR X0, [X0 + 0x550]
	0x0343E368 BL 0x1C16CF4
	0x0343E36C ADRP X0, 0xCF0000
	0x0343E370 LDR X0, [X0 + 0x5F8]
	0x0343E374 BL 0x1C16CF4
	0x0343E378 MOVZ W8, 0x1
	0x0343E37C STRB W8, [X22 + 0x69C]
	0x0343E380 LDR X0, [X21]
	0x0343E384 ADRP X21, 0xCF1000
	0x0343E388 LDR W8, [X0 + 0xE0]
	0x0343E38C LDR X21, [X21 + 0x550]
	0x0343E390 CBNZ W8, 0x343E398
	0x0343E394 BL 0x1C16DFC
	0x0343E398 LDR X2, [X21]
	0x0343E39C ADD X0, X20, 0x8
	0x0343E3A0 MOV X1, X19
	0x0343E3A4 LDP X20, X19, [X31 + 0x20]
	0x0343E3A8 LDP X22, X21, [X31 + 0x10]
	0x0343E3AC LDR X30, [X31], #0x30
	0x0343E3B0 B 0x2632228
	0x0343E3B4 SUB X31, X31, 0x70
	0x0343E3B8 STR X30, [X31 + 0x10]
	0x0343E3BC STP X28, X27, [X31 + 0x20]
	0x0343E3C0 STP X26, X25, [X31 + 0x30]
	0x0343E3C4 STP X24, X23, [X31 + 0x40]
	0x0343E3C8 STP X22, X21, [X31 + 0x50]
	0x0343E3CC STP X20, X19, [X31 + 0x60]
	0x0343E3D0 ADRP X20, 0xF9F000
	0x0343E3D4 LDRB W8, [X20 + 0x69D]
	0x0343E3D8 MOV X19, X0
	0x0343E3DC TBNZ X8, 0x0, 0x343E4D8
	0x0343E3E0 ADRP X0, 0xCF1000
	0x0343E3E4 LDR X0, [X0 + 0x598]
	0x0343E3E8 BL 0x1C16CF4
	0x0343E3EC ADRP X0, 0xCF1000
	0x0343E3F0 LDR X0, [X0 + 0x528]
	0x0343E3F4 BL 0x1C16CF4
	0x0343E3F8 ADRP X0, 0xCF0000
	0x0343E3FC LDR X0, [X0 + 0x5F8]
	0x0343E400 BL 0x1C16CF4
	0x0343E404 ADRP X0, 0xCBE000
	0x0343E408 LDR X0, [X0 + 0x8D8]
	0x0343E40C BL 0x1C16CF4
	0x0343E410 ADRP X0, 0xCB6000
	0x0343E414 LDR X0, [X0 + 0x810]
	0x0343E418 BL 0x1C16CF4
	0x0343E41C ADRP X0, 0xCB6000
	0x0343E420 LDR X0, [X0 + 0x6C0]
	0x0343E424 BL 0x1C16CF4
	0x0343E428 ADRP X0, 0xCB6000
	0x0343E42C LDR X0, [X0 + 0x6D0]
	0x0343E430 BL 0x1C16CF4
	0x0343E434 ADRP X0, 0xCF0000
	0x0343E438 LDR X0, [X0 + 0x7B8]
	0x0343E43C BL 0x1C16CF4
	0x0343E440 ADRP X0, 0xCF1000
	0x0343E444 LDR X0, [X0 + 0x530]
	0x0343E448 BL 0x1C16CF4
	0x0343E44C ADRP X0, 0xCB8000
	0x0343E450 LDR X0, [X0 + 0x1E0]
	0x0343E454 BL 0x1C16CF4
	0x0343E458 ADRP X0, 0xCB8000
	0x0343E45C LDR X0, [X0 + 0x1F0]
	0x0343E460 BL 0x1C16CF4
	0x0343E464 ADRP X0, 0xCB8000
	0x0343E468 LDR X0, [X0 + 0x1F8]
	0x0343E46C BL 0x1C16CF4
	0x0343E470 ADRP X0, 0xCBE000
	0x0343E474 LDR X0, [X0 + 0x3A0]
	0x0343E478 BL 0x1C16CF4
	0x0343E47C ADRP X0, 0xCB7000
	0x0343E480 LDR X0, [X0 + 0xA28]
	0x0343E484 BL 0x1C16CF4
	0x0343E488 ADRP X0, 0xCDE000
	0x0343E48C LDR X0, [X0 + 0x4E0]
	0x0343E490 BL 0x1C16CF4
	0x0343E494 ADRP X0, 0xCF0000
	0x0343E498 LDR X0, [X0 + 0x7D0]
	0x0343E49C BL 0x1C16CF4
	0x0343E4A0 ADRP X0, 0xCF0000
	0x0343E4A4 LDR X0, [X0 + 0x7D8]
	0x0343E4A8 BL 0x1C16CF4
	0x0343E4AC ADRP X0, 0xCF0000
	0x0343E4B0 LDR X0, [X0 + 0xC70]
	0x0343E4B4 BL 0x1C16CF4
	0x0343E4B8 ADRP X0, 0xCB5000
	0x0343E4BC LDR X0, [X0 + 0x988]
	0x0343E4C0 BL 0x1C16CF4
	0x0343E4C4 ADRP X0, 0xCF0000
	0x0343E4C8 LDR X0, [X0 + 0xC78]
	0x0343E4CC BL 0x1C16CF4
	0x0343E4D0 MOVZ W8, 0x1
	0x0343E4D4 STRB W8, [X20 + 0x69D]
	0x0343E4D8 STR X31, [X31 + 0x18]
	0x0343E4DC ADRP X28, 0xCF0000
	0x0343E4E0 LDR W8, [X19]
	0x0343E4E4 LDR X28, [X28 + 0x5F8]
	0x0343E4E8 CBZ W8, 0x343E718
	0x0343E4EC LDR X21, [X19 + 0x20]
	0x0343E4F0 CBZ X21, 0x343E850
	0x0343E4F4 LDR X8, [X19 + 0x28]
	0x0343E4F8 CBZ X8, 0x343E898
	0x0343E4FC ADRP X8, 0xCB7000
	0x0343E500 LDR X8, [X8 + 0xA28]
	0x0343E504 LDR X0, [X8]
	0x0343E508 ADRP X8, 0xCF0000
	0x0343E50C LDR X8, [X8 + 0xC70]
	0x0343E510 LDR X25, [X19 + 0x30]
	0x0343E514 LDR W9, [X0 + 0xE0]
	0x0343E518 LDR X20, [X8]
	0x0343E51C CBNZ W9, 0x343E524
	0x0343E520 BL 0x1C16DFC
	0x0343E524 MOV X0, X21
	0x0343E528 MOV X1, X31
	0x0343E52C BL 0x3624D20
	0x0343E530 CBZ X20, 0x343E8E0
	0x0343E534 ADRP X8, 0xCF0000
	0x0343E538 LDR X8, [X8 + 0xC78]
	0x0343E53C MOV X2, X0
	0x0343E540 LDR X1, [X8]
	0x0343E544 MOV X0, X20
	0x0343E548 MOV X3, X31
	0x0343E54C BL 0x32293BC
	0x0343E550 CBZ X25, 0x343E8E4
	0x0343E554 MOV X21, X0
	0x0343E558 LDR X0, [X25 + 0x20]
	0x0343E55C CBZ X0, 0x343E8E8
	0x0343E560 ADRP X8, 0xCB5000
	0x0343E564 LDR X8, [X8 + 0x988]
	0x0343E568 LDR X20, [X8]
	0x0343E56C MOV X1, X31
	0x0343E570 BL 0x361B448
	0x0343E574 ADRP X8, 0xCBE000
	0x0343E578 LDR X8, [X8 + 0x8D8]
	0x0343E57C MOV X22, X0
	0x0343E580 LDR X0, [X8]
	0x0343E584 MOVZ W1, 0x1
	0x0343E588 BL 0x1C16D6C
	0x0343E58C MOV X1, X0
	0x0343E590 CBZ X1, 0x343E8EC
	0x0343E594 LDR W8, [X1 + 0x18]
	0x0343E598 CBZ W8, 0x343E8F0
	0x0343E59C MOVZ W8, 0x2F
	0x0343E5A0 STRH W8, [X1 + 0x20]
	0x0343E5A4 CBZ X22, 0x343E8F4
	0x0343E5A8 MOV X0, X22
	0x0343E5AC MOV X2, X31
	0x0343E5B0 BL 0x322BC58
	0x0343E5B4 MOV X1, X21
	0x0343E5B8 MOV X2, X31
	0x0343E5BC BL 0x321B938
	0x0343E5C0 ADRP X8, 0xCBE000
	0x0343E5C4 LDR X8, [X8 + 0x3A0]
	0x0343E5C8 MOV X22, X0
	0x0343E5CC LDR X23, [X25 + 0x20]
	0x0343E5D0 LDR X0, [X8]
	0x0343E5D4 BL 0x1C16F10
	0x0343E5D8 MOV X21, X0
	0x0343E5DC MOV X1, X23
	0x0343E5E0 MOV X2, X31
	0x0343E5E4 BL 0x36281F8
	0x0343E5E8 CBZ X21, 0x343E8F8
	0x0343E5EC MOV X0, X21
	0x0343E5F0 MOV X1, X22
	0x0343E5F4 MOV X2, X31
	0x0343E5F8 BL 0x36288CC
	0x0343E5FC MOV X0, X21
	0x0343E600 MOV X1, X20
	0x0343E604 MOV X2, X31
	0x0343E608 BL 0x3628980

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA1000
	014 Move W8, [X20+1687]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xCF3000
	021 Move X0, [X0+1312]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF3000
	024 Move X0, [X0+1320]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF2000
	027 Move X0, [X0+1528]
	028 Call 0x1C17CF4
	029 Move X0, 0xCC0000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCB8000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB8000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB7000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF1000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF2000
	045 Move X0, [X0+1328]
	046 Call 0x1C17CF4
	047 Move X0, 0xCB9000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCB9000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCB9000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCBF000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCB8000
	060 Move X0, [X0+2600]
	061 Call 0x1C17CF4
	062 Move X0, 0xCDF000
	063 Move X0, [X0+1240]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF1000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xCF1000
	069 Move X0, [X0+3104]
	070 Call 0x1C17CF4
	071 Move X0, 0xCF1000
	072 Move X0, [X0+3112]
	073 Call 0x1C17CF4
	074 Move X0, 0xCF1000
	075 Move X0, [X0+2008]
	076 Call 0x1C17CF4
	077 Move X0, 0xCB6000
	078 Move X0, [X0+2440]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+1687], W8
	082 Move [X31+24], X31
	083 Move X28, 0xCF1000
	084 Move W8, [X19]
	085 Move X28, [X28+1528]
	086 Compare W8, 0
	087 JumpIfEqual {239}
	088 Move X21, [X19+32]
	089 Compare X21, 0
	090 JumpIfEqual {331}
	091 Move X8, [X19+40]
	092 Compare X8, 0
	093 JumpIfEqual {349}
	094 Move X8, 0xCB8000
	095 Move X8, [X8+2600]
	096 Move X0, [X8]
	097 Move X8, 0xCF1000
	098 Move X8, [X8+3112]
	099 Move X25, [X19+48]
	100 Move W9, [X0+224]
	101 Move X20, [X8]
	102 Compare W9, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X21
	106 Move X1, X31
	107 Call Uri.EscapeDataString, X0
	108 Compare X20, 0
	109 JumpIfEqual {367}
	110 Move X8, 0xCF1000
	111 Move X8, [X8+3104]
	112 Move X2, X0
	113 Move X1, [X8]
	114 Move X0, X20
	115 Move X3, X31
	116 Call String.Replace, X0, X1, X2
	117 Compare X25, 0
	118 JumpIfEqual {368}
	119 Move X21, X0
	120 Move X0, [X25+32]
	121 Compare X0, 0
	122 JumpIfEqual {369}
	123 Move X8, 0xCB6000
	124 Move X8, [X8+2440]
	125 Move X20, [X8]
	126 Move X1, X31
	127 Call Uri.get_AbsolutePath, X0
	128 Move X8, 0xCBF000
	129 Move X8, [X8+2264]
	130 Move X22, X0
	131 Move X0, [X8]
	132 Move W1, 1
	133 Call 0x1C17D6C
	134 Move X1, X0
	135 Compare X1, 0
	136 JumpIfEqual {370}
	137 Move W8, [X1+24]
	138 Compare W8, 0
	139 JumpIfEqual {371}
	140 Move W8, 47
	141 NotImplemented "Instruction STRH not yet implemented."
	142 Compare X22, 0
	143 JumpIfEqual {372}
	144 Move X0, X22
	145 Move X2, X31
	146 Call String.TrimEnd, X0, X1
	147 Move X1, X21
	148 Move X2, X31
	149 Call String.Concat, X0, X1
	150 Move X8, 0xCBF000
	151 Move X8, [X8+928]
	152 Move X22, X0
	153 Move X23, [X25+32]
	154 Move X0, [X8]
	155 Call 0x1C17F10
	156 Move X21, X0
	157 Move X1, X23
	158 Move X2, X31
	159 Call UriBuilder..ctor, X0, X1
	160 Compare X21, 0
	161 JumpIfEqual {373}
	162 Move X0, X21
	163 Move X1, X22
	164 Move X2, X31
	165 Call UriBuilder.set_Path, X0, X1
	166 Move X0, X21
	167 Move X1, X20
	168 Move X2, X31
	169 Call UriBuilder.set_Query, X0, X1
	170 Move X0, X21
	171 Move X1, X31
	172 Call UriBuilder.get_Uri, X0
	173 Move X8, 0xCDF000
	174 Move X9, 0xCB7000
	175 Move X8, [X8+1240]
	176 Move X9, [X9+1744]
	177 Move X20, X0
	178 Move X21, [X8]
	179 Move X0, [X9]
	180 Call 0x1C17F10
	181 Move X8, 0xCB7000
	182 Move X8, [X8+1728]
	183 Move X22, X0
	184 Move X1, [X8]
	185 Call Dictionary`2<Object, Object>..ctor, X0
	186 Move X8, 0xCF1000
	187 Move X8, [X8+2008]
	188 Move X1, [X19+56]
	189 Move X0, [X8]
	190 Move X2, X31
	191 Call String.Concat, X0, X1
	192 Compare X22, 0
	193 JumpIfEqual {374}
	194 Move X8, 0xCF1000
	195 Move X8, [X8+2000]
	196 Move X9, 0xCB7000
	197 Move X9, [X9+2064]
	198 Move X2, X0
	199 Move X1, [X8]
	200 Move X3, [X9]
	201 Move X0, X22
	202 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	203 Move X0, [X19+40]
	204 Move X1, X31
	205 Call JsonWriter.ToJson, X0
	206 Move X23, X0
	207 Move X0, X31
	208 Call Encoding.get_UTF8
	209 Compare X0, 0
	210 JumpIfEqual {375}
	211 Move X8, [X0]
	212 Move X9, [X8+616]
	213 Move X2, [X8+624]
	214 Move X1, X23
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X24, [X25+16]
	217 Compare X24, 0
	218 JumpIfEqual {376}
	219 Move X10, 0xCF1000
	220 Move X10, [X10+1976]
	221 Move X8, [X24]
	222 Move W26, [X25+24]
	223 Move X27, [X19+64]
	224 Move X25, [X19+72]
	225 Move X1, [X10]
	226 NotImplemented "Instruction LDRH not yet implemented."
	227 Move X23, X0
	228 Compare X9, 0
	229 JumpIfEqual {236}
	230 Move X10, [X8+176]
	231 Add X10, X10, 8
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Subtract X9, X9, 1
	235 Add X10, X10, 16
	236 Move W2, 3
	237 Move X0, X24
	238 Call 0x1C5D788
	239 Move X8, [X19+80]
	240 Move TEMP, 0
	241 Not TEMP
	242 Move W9, TEMP
	243 Move [X31+24], X8
	244 Move [X19+80], X31
	245 Move [X19], W9
	246 Move W9, [X10]
	247 Add W9, W9, 3
	248 Add X8, X8, W9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X9, [X0+8]
	252 Move X0, X24
	253 Move X1, X21
	254 Move X2, X20
	255 Move X3, X22
	256 Move X4, X23
	257 Move W5, W26
	258 Move X6, X27
	259 Move X7, X25
	260 Move [X31], X9
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Compare X0, 0
	263 JumpIfEqual {377}
	264 Move X8, 0xCB9000
	265 Move X8, [X8+504]
	266 Move X1, [X8]
	267 Call Task`1<Object>.GetAwaiter, X0
	268 Move X8, 0xCB9000
	269 Move X8, [X8+496]
	270 Move [X31+24], X0
	271 Move X1, [X8]
	272 Add X0, X31, 24
	273 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {303}
	278 Move X8, 0xCB9000
	279 Move X8, [X8+480]
	280 Add X0, X31, 24
	281 Move X1, [X8]
	282 Call TaskAwaiter`1<Object>.GetResult, X0
	283 Move X8, 0xCF2000
	284 Move X8, [X8+1328]
	285 Move X1, [X8]
	286 Call JsonParser.FromJson, X0
	287 Move TEMP, 1
	288 Not TEMP
	289 Move W8, TEMP
	290 Move [X19+8], W8
	291 Move X20, X0
	292 Move X0, [X28]
	293 Move X21, 0xCF2000
	294 Move W8, [X0+224]
	295 Move X21, [X21+1320]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move X2, [X21]
	300 Move X0, X19
	301 Move X1, X20
	302 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	303 Move [X19], W31
	304 Move X8, [X31+24]
	305 Move [X19+80], X8
	306 Move X0, [X28]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move X8, 0xCF2000
	312 Move X8, [X8+1312]
	313 Add X0, X19, 8
	314 Move X3, [X8]
	315 Add X1, X31, 24
	316 Move X2, X19
	317 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	318 Move X20, [X31+96]
	319 Move X19, [X31+104]
	320 Move X22, [X31+80]
	321 Move X21, [X31+88]
	322 Move X24, [X31+64]
	323 Move X23, [X31+72]
	324 Move X26, [X31+48]
	325 Move X25, [X31+56]
	326 Move X28, [X31+32]
	327 Move X27, [X31+40]
	328 Move X30, [X31+16]
	329 Add X31, X31, 112
	330 Return 
	331 Move X0, 0xCBE000
	332 Move X0, [X0+1400]
	333 Call 0x1C17D08
	334 Call 0x1C17F10
	335 Move X20, X0
	336 Move X0, 0xCF1000
	337 Move X0, [X0+3120]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X20
	341 Move X2, X31
	342 Call ArgumentException..ctor, X0, X1
	343 Move X0, 0xCF2000
	344 Move X0, [X0+1336]
	345 Call 0x1C17D08
	346 Move X1, X0
	347 Move X0, X20
	348 Call 0x1C17DEC
	349 Move X0, 0xCBE000
	350 Move X0, [X0+1400]
	351 Call 0x1C17D08
	352 Call 0x1C17F10
	353 Move X20, X0
	354 Move X0, 0xCF2000
	355 Move X0, [X0+1344]
	356 Call 0x1C17D08
	357 Move X1, X0
	358 Move X0, X20
	359 Move X2, X31
	360 Call ArgumentException..ctor, X0, X1
	361 Move X0, 0xCF2000
	362 Move X0, [X0+1336]
	363 Call 0x1C17D08
	364 Move X1, X0
	365 Move X0, X20
	366 Call 0x1C17DEC
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F28
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Call 0x1C17F20
	375 Call 0x1C17F20
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Move X20, X0
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X0, X20
	381 Call 0x3EB2AD0
	382 Move X20, X0
	383 Move X0, 0xCB6000
	384 Move X0, [X0+2000]
	385 Call 0x1C17D08
	386 Move X8, [X20]
	387 Move X1, [X8]
	388 Call 0x1C18270
	389 Move TEMP, X0
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfNotEqual {413}
	393 Move X20, [X20]
	394 Call 0x3EB2AE0
	395 Move TEMP, 1
	396 Not TEMP
	397 Move W8, TEMP
	398 Move [X19+8], W8
	399 Move X0, 0xCF1000
	400 Move X0, [X0+1528]
	401 Call 0x1C17D08
	402 Move W8, [X0+224]
	403 Compare W8, 0
	404 JumpIfNotEqual {406}
	405 Call 0x1C17DFC
	406 Move X0, 0xCF2000
	407 Move X0, [X0+1352]
	408 Call 0x1C17D08
	409 Move X2, X0
	410 Move X0, X19
	411 Move X1, X20
	412 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	413 Move W0, 8
	414 Call 0x3EB2AF0
	415 Move X8, [X20]
	416 Move [X0], X8
	417 Move X1, 0xA77000
	418 Add X1, X1, 3672
	419 Move X2, X31
	420 Call 0x3EB2B00
	421 Move X20, X0
	422 Call 0x3EB2AE0
	423 Move X0, X20
	424 Call 0x1D2D690
	425 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343E60C MOV X0, X21
	0x0343E610 MOV X1, X31
	0x0343E614 BL 0x3628A38
	0x0343E618 ADRP X8, 0xCDE000
	0x0343E61C ADRP X9, 0xCB6000
	0x0343E620 LDR X8, [X8 + 0x4E0]
	0x0343E624 LDR X9, [X9 + 0x6D0]
	0x0343E628 MOV X20, X0
	0x0343E62C LDR X21, [X8]
	0x0343E630 LDR X0, [X9]
	0x0343E634 BL 0x1C16F10
	0x0343E638 ADRP X8, 0xCB6000
	0x0343E63C LDR X8, [X8 + 0x6C0]
	0x0343E640 MOV X22, X0
	0x0343E644 LDR X1, [X8]
	0x0343E648 BL 0x2AA4804
	0x0343E64C ADRP X8, 0xCF0000
	0x0343E650 LDR X8, [X8 + 0x7D8]
	0x0343E654 LDR X1, [X19 + 0x38]
	0x0343E658 LDR X0, [X8]
	0x0343E65C MOV X2, X31
	0x0343E660 BL 0x321B938
	0x0343E664 CBZ X22, 0x343E8FC
	0x0343E668 ADRP X8, 0xCF0000
	0x0343E66C LDR X8, [X8 + 0x7D0]
	0x0343E670 ADRP X9, 0xCB6000
	0x0343E674 LDR X9, [X9 + 0x810]
	0x0343E678 MOV X2, X0
	0x0343E67C LDR X1, [X8]
	0x0343E680 LDR X3, [X9]
	0x0343E684 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA0000
	007 Move X21, 0xCF1000
	008 Move W8, [X22+1688]
	009 Move X21, [X21+1528]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF2000
	017 Move X0, [X0+1360]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF1000
	020 Move X0, [X0+1528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1688], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1360]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

