Type: Nakama.ApiClient/<UnlinkEmailAsync>d__33

Method: System.Void MoveNext()

Disassembly:
	0x03438AD4 BL 0x1C16F28
	0x03438AD8 BL 0x1C16F20
	0x03438ADC BL 0x1C16F20
	0x03438AE0 BL 0x1C16F20
	0x03438AE4 BL 0x1C16F20
	0x03438AE8 BL 0x1C16F20
	0x03438AEC BL 0x1C16F20
	0x03438AF0 B 0x3438B50
	0x03438AF4 B 0x3438B50
	0x03438AF8 B 0x3438B50
	0x03438AFC B 0x3438B50
	0x03438B00 B 0x3438B50
	0x03438B04 B 0x3438B50
	0x03438B08 B 0x3438B50
	0x03438B0C B 0x3438B50
	0x03438B10 B 0x3438B50
	0x03438B14 B 0x3438B50
	0x03438B18 B 0x3438B50
	0x03438B1C B 0x3438B50
	0x03438B20 B 0x3438B50
	0x03438B24 B 0x3438B50
	0x03438B28 B 0x3438B50
	0x03438B2C B 0x3438B50
	0x03438B30 B 0x3438B50
	0x03438B34 B 0x3438B50
	0x03438B38 B 0x3438B50
	0x03438B3C B 0x3438B50
	0x03438B40 B 0x3438B50
	0x03438B44 B 0x3438B50
	0x03438B48 B 0x3438B50
	0x03438B4C B 0x3438B50
	0x03438B50 MOV X20, X0
	0x03438B54 CMP W1, 0x1
	0x03438B58 B.NE 0x3438BE8
	0x03438B5C MOV X0, X20
	0x03438B60 BL 0x3EB1AD0
	0x03438B64 MOV X20, X0
	0x03438B68 ADRP X0, 0xCBB000
	0x03438B6C LDR X0, [X0 + 0x7D0]
	0x03438B70 BL 0x1C16D08
	0x03438B74 LDR X8, [X20]
	0x03438B78 LDR X1, [X8]
	0x03438B7C BL 0x1C17270
	0x03438B80 TBZ X0, 0x0, 0x3438BC0
	0x03438B84 LDR X20, [X20]
	0x03438B88 BL 0x3EB1AE0
	0x03438B8C MOVN W8, 0x1
	0x03438B90 STR W8, [X19], #0x8
	0x03438B94 ADRP X0, 0xCBE000
	0x03438B98 LDR X0, [X0 + 0x280]
	0x03438B9C BL 0x1C16D08
	0x03438BA0 LDR W8, [X0 + 0xE0]
	0x03438BA4 CBNZ W8, 0x3438BAC
	0x03438BA8 BL 0x1C16DFC
	0x03438BAC MOV X0, X19
	0x03438BB0 MOV X1, X20
	0x03438BB4 MOV X2, X31
	0x03438BB8 BL 0x32C4908
	0x03438BBC B 0x3438A60
	0x03438BC0 MOVZ W0, 0x8
	0x03438BC4 BL 0x3EB1AF0
	0x03438BC8 LDR X8, [X20]
	0x03438BCC STR X8, [X0]
	0x03438BD0 ADRP X1, 0xA7C000
	0x03438BD4 ADD X1, X1, 0xE58
	0x03438BD8 MOV X2, X31
	0x03438BDC BL 0x3EB1B00
	0x03438BE0 MOV X20, X0
	0x03438BE4 BL 0x3EB1AE0
	0x03438BE8 MOV X0, X20
	0x03438BEC BL 0x1D2C690
	0x03438BF0 BL 0x1990590
	0x03438BF4 STR X30, [X31 - 0x30]!
	0x03438BF8 STP X22, X21, [X31 + 0x10]
	0x03438BFC STP X20, X19, [X31 + 0x20]
	0x03438C00 ADRP X21, 0xFA5000
	0x03438C04 ADRP X22, 0xCBE000
	0x03438C08 LDRB W8, [X21 + 0x680]
	0x03438C0C LDR X22, [X22 + 0x280]
	0x03438C10 MOV X19, X1
	0x03438C14 MOV X20, X0
	0x03438C18 TBNZ X8, 0x0, 0x3438C30
	0x03438C1C ADRP X0, 0xCBE000
	0x03438C20 LDR X0, [X0 + 0x280]
	0x03438C24 BL 0x1C16CF4
	0x03438C28 MOVZ W8, 0x1
	0x03438C2C STRB W8, [X21 + 0x680]
	0x03438C30 LDR X0, [X22]
	0x03438C34 LDR W8, [X0 + 0xE0]
	0x03438C38 CBNZ W8, 0x3438C40
	0x03438C3C BL 0x1C16DFC
	0x03438C40 ADD X0, X20, 0x8
	0x03438C44 MOV X1, X19
	0x03438C48 LDP X20, X19, [X31 + 0x20]
	0x03438C4C LDP X22, X21, [X31 + 0x10]
	0x03438C50 MOV X2, X31
	0x03438C54 LDR X30, [X31], #0x30
	0x03438C58 B 0x32C477C
	0x03438C5C SUB X31, X31, 0x70
	0x03438C60 STR X30, [X31 + 0x10]
	0x03438C64 STP X28, X27, [X31 + 0x20]
	0x03438C68 STP X26, X25, [X31 + 0x30]
	0x03438C6C STP X24, X23, [X31 + 0x40]
	0x03438C70 STP X22, X21, [X31 + 0x50]
	0x03438C74 STP X20, X19, [X31 + 0x60]
	0x03438C78 ADRP X20, 0xFA5000
	0x03438C7C LDRB W8, [X20 + 0x681]
	0x03438C80 MOV X19, X0
	0x03438C84 TBNZ X8, 0x0, 0x3438D50
	0x03438C88 ADRP X0, 0xCF7000
	0x03438C8C LDR X0, [X0 + 0x3E8]
	0x03438C90 BL 0x1C16CF4
	0x03438C94 ADRP X0, 0xCBE000
	0x03438C98 LDR X0, [X0 + 0x280]
	0x03438C9C BL 0x1C16CF4
	0x03438CA0 ADRP X0, 0xCC4000
	0x03438CA4 LDR X0, [X0 + 0x8D8]
	0x03438CA8 BL 0x1C16CF4
	0x03438CAC ADRP X0, 0xCBC000
	0x03438CB0 LDR X0, [X0 + 0x810]
	0x03438CB4 BL 0x1C16CF4
	0x03438CB8 ADRP X0, 0xCBC000
	0x03438CBC LDR X0, [X0 + 0x6C0]
	0x03438CC0 BL 0x1C16CF4
	0x03438CC4 ADRP X0, 0xCBC000
	0x03438CC8 LDR X0, [X0 + 0x6D0]
	0x03438CCC BL 0x1C16CF4
	0x03438CD0 ADRP X0, 0xCF6000
	0x03438CD4 LDR X0, [X0 + 0x7B8]
	0x03438CD8 BL 0x1C16CF4
	0x03438CDC ADRP X0, 0xCBE000
	0x03438CE0 LDR X0, [X0 + 0x1E0]
	0x03438CE4 BL 0x1C16CF4
	0x03438CE8 ADRP X0, 0xCBE000
	0x03438CEC LDR X0, [X0 + 0x1F0]
	0x03438CF0 BL 0x1C16CF4
	0x03438CF4 ADRP X0, 0xCBE000
	0x03438CF8 LDR X0, [X0 + 0x1F8]
	0x03438CFC BL 0x1C16CF4
	0x03438D00 ADRP X0, 0xCC4000
	0x03438D04 LDR X0, [X0 + 0x3A0]
	0x03438D08 BL 0x1C16CF4
	0x03438D0C ADRP X0, 0xCF7000
	0x03438D10 LDR X0, [X0 + 0x3F0]
	0x03438D14 BL 0x1C16CF4
	0x03438D18 ADRP X0, 0xCE4000
	0x03438D1C LDR X0, [X0 + 0x4D8]
	0x03438D20 BL 0x1C16CF4
	0x03438D24 ADRP X0, 0xCF6000
	0x03438D28 LDR X0, [X0 + 0x7D0]
	0x03438D2C BL 0x1C16CF4
	0x03438D30 ADRP X0, 0xCF6000
	0x03438D34 LDR X0, [X0 + 0x7D8]
	0x03438D38 BL 0x1C16CF4
	0x03438D3C ADRP X0, 0xCBB000
	0x03438D40 LDR X0, [X0 + 0x988]
	0x03438D44 BL 0x1C16CF4
	0x03438D48 MOVZ W8, 0x1
	0x03438D4C STRB W8, [X20 + 0x681]
	0x03438D50 STR X31, [X31 + 0x18]
	0x03438D54 ADRP X28, 0xCBE000
	0x03438D58 LDR W8, [X19]
	0x03438D5C LDR X28, [X28 + 0x280]
	0x03438D60 CBZ W8, 0x3438F40
	0x03438D64 LDR X8, [X19 + 0x20]
	0x03438D68 CBZ X8, 0x3439058
	0x03438D6C LDR X25, [X19 + 0x28]
	0x03438D70 CBZ X25, 0x34390A0
	0x03438D74 LDR X0, [X25 + 0x20]
	0x03438D78 CBZ X0, 0x34390A4
	0x03438D7C ADRP X8, 0xCF7000
	0x03438D80 ADRP X9, 0xCBB000
	0x03438D84 LDR X8, [X8 + 0x3F0]
	0x03438D88 LDR X9, [X9 + 0x988]
	0x03438D8C LDR X21, [X8]
	0x03438D90 LDR X20, [X9]
	0x03438D94 MOV X1, X31
	0x03438D98 BL 0x361B448
	0x03438D9C ADRP X8, 0xCC4000
	0x03438DA0 LDR X8, [X8 + 0x8D8]
	0x03438DA4 MOV X22, X0
	0x03438DA8 LDR X0, [X8]
	0x03438DAC MOVZ W1, 0x1
	0x03438DB0 BL 0x1C16D6C
	0x03438DB4 MOV X1, X0
	0x03438DB8 CBZ X1, 0x34390A8
	0x03438DBC LDR W8, [X1 + 0x18]
	0x03438DC0 CBZ W8, 0x34390AC
	0x03438DC4 MOVZ W8, 0x2F
	0x03438DC8 STRH W8, [X1 + 0x20]
	0x03438DCC CBZ X22, 0x34390B0
	0x03438DD0 MOV X0, X22
	0x03438DD4 MOV X2, X31
	0x03438DD8 BL 0x322BC58
	0x03438DDC MOV X1, X21
	0x03438DE0 MOV X2, X31
	0x03438DE4 BL 0x321B938
	0x03438DE8 ADRP X8, 0xCC4000
	0x03438DEC LDR X8, [X8 + 0x3A0]
	0x03438DF0 MOV X22, X0
	0x03438DF4 LDR X23, [X25 + 0x20]
	0x03438DF8 LDR X0, [X8]
	0x03438DFC BL 0x1C16F10
	0x03438E00 MOV X21, X0
	0x03438E04 MOV X1, X23
	0x03438E08 MOV X2, X31
	0x03438E0C BL 0x36281F8
	0x03438E10 CBZ X21, 0x34390B4
	0x03438E14 MOV X0, X21
	0x03438E18 MOV X1, X22
	0x03438E1C MOV X2, X31
	0x03438E20 BL 0x36288CC
	0x03438E24 MOV X0, X21
	0x03438E28 MOV X1, X20
	0x03438E2C MOV X2, X31
	0x03438E30 BL 0x3628980
	0x03438E34 MOV X0, X21
	0x03438E38 MOV X1, X31
	0x03438E3C BL 0x3628A38
	0x03438E40 ADRP X8, 0xCE4000
	0x03438E44 ADRP X9, 0xCBC000
	0x03438E48 LDR X8, [X8 + 0x4D8]
	0x03438E4C LDR X9, [X9 + 0x6D0]
	0x03438E50 MOV X20, X0
	0x03438E54 LDR X21, [X8]
	0x03438E58 LDR X0, [X9]
	0x03438E5C BL 0x1C16F10
	0x03438E60 ADRP X8, 0xCBC000
	0x03438E64 LDR X8, [X8 + 0x6C0]
	0x03438E68 MOV X22, X0
	0x03438E6C LDR X1, [X8]
	0x03438E70 BL 0x2AA4804
	0x03438E74 ADRP X8, 0xCF6000
	0x03438E78 LDR X8, [X8 + 0x7D8]
	0x03438E7C LDR X1, [X19 + 0x30]
	0x03438E80 LDR X0, [X8]
	0x03438E84 MOV X2, X31
	0x03438E88 BL 0x321B938
	0x03438E8C CBZ X22, 0x34390B8
	0x03438E90 ADRP X8, 0xCF6000
	0x03438E94 LDR X8, [X8 + 0x7D0]
	0x03438E98 ADRP X9, 0xCBC000
	0x03438E9C LDR X9, [X9 + 0x810]
	0x03438EA0 MOV X2, X0
	0x03438EA4 LDR X1, [X8]
	0x03438EA8 LDR X3, [X9]
	0x03438EAC MOV X0, X22
	0x03438EB0 BL 0x2AA5098
	0x03438EB4 LDR X0, [X19 + 0x20]
	0x03438EB8 MOV X1, X31
	0x03438EBC BL 0x3483BE4
	0x03438EC0 MOV X23, X0
	0x03438EC4 MOV X0, X31
	0x03438EC8 BL 0x3241948
	0x03438ECC CBZ X0, 0x34390BC
	0x03438ED0 LDR X8, [X0]
	0x03438ED4 LDR X9, [X8 + 0x268]
	0x03438ED8 LDR X2, [X8 + 0x270]
	0x03438EDC MOV X1, X23
	0x03438EE0 BLR X9
	0x03438EE4 LDR X24, [X25 + 0x10]
	0x03438EE8 CBZ X24, 0x34390C0
	0x03438EEC ADRP X10, 0xCF6000
	0x03438EF0 LDR X10, [X10 + 0x7B8]
	0x03438EF4 LDR X8, [X24]
	0x03438EF8 LDR W26, [X25 + 0x18]
	0x03438EFC LDP X27, X25, [X19 + 0x38]
	0x03438F00 LDR X1, [X10]
	0x03438F04 LDRH W9, [X8 + 0x12E]
	0x03438F08 MOV X23, X0
	0x03438F0C CBZ X9, 0x3438F30
	0x03438F10 LDR X10, [X8 + 0xB0]
	0x03438F14 ADD X10, X10, 0x8
	0x03438F18 LDUR X11, [X10 - 0x8]
	0x03438F1C CMP X11, X1
	0x03438F20 B.EQ 0x3438F58
	0x03438F24 SUBS X9, X9, 0x1
	0x03438F28 ADD X10, X10, 0x10
	0x03438F2C B.NE 0x3438F18
	0x03438F30 MOVZ W2, 0x3
	0x03438F34 MOV X0, X24
	0x03438F38 BL 0x1C5C788
	0x03438F3C B 0x3438F68
	0x03438F40 LDR X8, [X19 + 0x48]
	0x03438F44 MOVN W9, 0x0
	0x03438F48 STR X8, [X31 + 0x18]
	0x03438F4C STR X31, [X19 + 0x48]
	0x03438F50 STR W9, [X19]
	0x03438F54 B 0x3438FC4
	0x03438F58 LDR W9, [X10]
	0x03438F5C ADD W9, W9, 0x3
	0x03438F60 ADD X8, X8, W9, 0x4, SXTW
	0x03438F64 ADD X0, X8, 0x138
	0x03438F68 LDP X8, X9, [X0]
	0x03438F6C MOV X0, X24
	0x03438F70 MOV X1, X21
	0x03438F74 MOV X2, X20
	0x03438F78 MOV X3, X22
	0x03438F7C MOV X4, X23
	0x03438F80 MOV W5, W26
	0x03438F84 MOV X6, X27
	0x03438F88 MOV X7, X25
	0x03438F8C STR X9, [X31]
	0x03438F90 BLR X8
	0x03438F94 CBZ X0, 0x34390C4
	0x03438F98 ADRP X8, 0xCBE000
	0x03438F9C LDR X8, [X8 + 0x1F8]
	0x03438FA0 LDR X1, [X8]
	0x03438FA4 BL 0x269F5D0
	0x03438FA8 ADRP X8, 0xCBE000
	0x03438FAC LDR X8, [X8 + 0x1F0]
	0x03438FB0 STR X0, [X31 + 0x18]
	0x03438FB4 LDR X1, [X8]
	0x03438FB8 ADD X0, X31, 0x18
	0x03438FBC BL 0x2677430
	0x03438FC0 TBZ X0, 0x0, 0x3439000
	0x03438FC4 ADRP X8, 0xCBE000
	0x03438FC8 LDR X8, [X8 + 0x1E0]
	0x03438FCC ADD X0, X31, 0x18
	0x03438FD0 LDR X1, [X8]
	0x03438FD4 BL 0x2677474
	0x03438FD8 MOVN W8, 0x1
	0x03438FDC STR W8, [X19], #0x8
	0x03438FE0 LDR X0, [X28]
	0x03438FE4 LDR W8, [X0 + 0xE0]
	0x03438FE8 CBNZ W8, 0x3438FF0
	0x03438FEC BL 0x1C16DFC
	0x03438FF0 MOV X0, X19
	0x03438FF4 MOV X1, X31
	0x03438FF8 BL 0x32C4864
	0x03438FFC B 0x3439038
	0x03439000 STR W31, [X19]
	0x03439004 LDR X8, [X31 + 0x18]
	0x03439008 STR X8, [X19 + 0x48]
	0x0343900C LDR X0, [X28]
	0x03439010 LDR W8, [X0 + 0xE0]
	0x03439014 CBNZ W8, 0x343901C
	0x03439018 BL 0x1C16DFC
	0x0343901C ADRP X8, 0xCF6000
	0x03439020 LDR X8, [X8 + 0x3E8]
	0x03439024 ADD X0, X19, 0x8
	0x03439028 LDR X3, [X8]
	0x0343902C ADD X1, X31, 0x18
	0x03439030 MOV X2, X19
	0x03439034 BL 0x2186F8C
	0x03439038 LDP X20, X19, [X31 + 0x60]
	0x0343903C LDP X22, X21, [X31 + 0x50]
	0x03439040 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA6000
	014 Move W8, [X20+1659]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xCF8000
	021 Move X0, [X0+928]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBF000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC5000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBD000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBD000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBD000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF7000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBF000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCBF000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBF000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC5000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE5000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xCF8000
	057 Move X0, [X0+936]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF7000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF7000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCBC000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1659], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCBF000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xCF8000
	086 Move X9, 0xCBC000
	087 Move X8, [X8+936]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCC5000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCC5000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCE5000
	139 Move X9, 0xCBD000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCBD000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xCF7000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xCF7000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCBD000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xCF7000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCBF000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCBF000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCBF000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xCF8000
	269 Move X8, [X8+928]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCC4000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xCF7000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xCF8000
	301 Move X0, [X0+944]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCBC000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCBF000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA7C000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03439044 LDP X26, X25, [X31 + 0x30]
	0x03439048 LDP X28, X27, [X31 + 0x20]
	0x0343904C LDR X30, [X31 + 0x10]
	0x03439050 ADD X31, X31, 0x70
	0x03439054 RET
	0x03439058 ADRP X0, 0xCC2000
	0x0343905C LDR X0, [X0 + 0x578]
	0x03439060 BL 0x1C16D08
	0x03439064 BL 0x1C16F10
	0x03439068 MOV X20, X0
	0x0343906C ADRP X0, 0xCF5000
	0x03439070 LDR X0, [X0 + 0xBC8]
	0x03439074 BL 0x1C16D08
	0x03439078 MOV X1, X0
	0x0343907C MOV X0, X20
	0x03439080 MOV X2, X31
	0x03439084 BL 0x3314A68
	0x03439088 ADRP X0, 0xCF6000
	0x0343908C LDR X0, [X0 + 0x3F8]
	0x03439090 BL 0x1C16D08
	0x03439094 MOV X1, X0
	0x03439098 MOV X0, X20
	0x0343909C BL 0x1C16DEC
	0x034390A0 BL 0x1C16F20
	0x034390A4 BL 0x1C16F20
	0x034390A8 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA5000
	007 Move X22, 0xCBE000
	008 Move W8, [X21+1660]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCBE000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1660], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

