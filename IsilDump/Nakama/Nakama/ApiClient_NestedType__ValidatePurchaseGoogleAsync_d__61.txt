Type: Nakama.ApiClient/<ValidatePurchaseGoogleAsync>d__61

Method: System.Void MoveNext()

Disassembly:
	0x0343C6C0 LDR X8, [X8 + 0x4E0]
	0x0343C6C4 LDR X1, [X8]
	0x0343C6C8 BL 0x220E6DC
	0x0343C6CC MOVN W8, 0x1
	0x0343C6D0 STR W8, [X19], #0x8
	0x0343C6D4 MOV X20, X0
	0x0343C6D8 LDR X0, [X28]
	0x0343C6DC ADRP X21, 0xCF3000
	0x0343C6E0 LDR W8, [X0 + 0xE0]
	0x0343C6E4 LDR X21, [X21 + 0x4D8]
	0x0343C6E8 CBNZ W8, 0x343C6F0
	0x0343C6EC BL 0x1C16DFC
	0x0343C6F0 LDR X2, [X21]
	0x0343C6F4 MOV X0, X19
	0x0343C6F8 MOV X1, X20
	0x0343C6FC BL 0x26322B0
	0x0343C700 B 0x343C73C
	0x0343C704 STR W31, [X19]
	0x0343C708 LDR X8, [X31 + 0x18]
	0x0343C70C STR X8, [X19 + 0x48]
	0x0343C710 LDR X0, [X28]
	0x0343C714 LDR W8, [X0 + 0xE0]
	0x0343C718 CBNZ W8, 0x343C720
	0x0343C71C BL 0x1C16DFC
	0x0343C720 ADRP X8, 0xCF3000
	0x0343C724 LDR X8, [X8 + 0x4D0]
	0x0343C728 ADD X0, X19, 0x8
	0x0343C72C LDR X3, [X8]
	0x0343C730 ADD X1, X31, 0x18
	0x0343C734 MOV X2, X19
	0x0343C738 BL 0x1FB6328
	0x0343C73C LDP X20, X19, [X31 + 0x60]
	0x0343C740 LDP X22, X21, [X31 + 0x50]
	0x0343C744 LDP X24, X23, [X31 + 0x40]
	0x0343C748 LDP X26, X25, [X31 + 0x30]
	0x0343C74C LDP X28, X27, [X31 + 0x20]
	0x0343C750 LDR X30, [X31 + 0x10]
	0x0343C754 ADD X31, X31, 0x70
	0x0343C758 RET
	0x0343C75C ADRP X0, 0xCBF000
	0x0343C760 LDR X0, [X0 + 0x578]
	0x0343C764 BL 0x1C16D08
	0x0343C768 BL 0x1C16F10
	0x0343C76C MOV X20, X0
	0x0343C770 ADRP X0, 0xCF2000
	0x0343C774 LDR X0, [X0 + 0xBC8]
	0x0343C778 BL 0x1C16D08
	0x0343C77C MOV X1, X0
	0x0343C780 MOV X0, X20
	0x0343C784 MOV X2, X31
	0x0343C788 BL 0x3314A68
	0x0343C78C ADRP X0, 0xCF3000
	0x0343C790 LDR X0, [X0 + 0x4F0]
	0x0343C794 BL 0x1C16D08
	0x0343C798 MOV X1, X0
	0x0343C79C MOV X0, X20
	0x0343C7A0 BL 0x1C16DEC
	0x0343C7A4 BL 0x1C16F20
	0x0343C7A8 BL 0x1C16F20
	0x0343C7AC BL 0x1C16F20
	0x0343C7B0 BL 0x1C16F28
	0x0343C7B4 BL 0x1C16F20
	0x0343C7B8 BL 0x1C16F20
	0x0343C7BC BL 0x1C16F20
	0x0343C7C0 BL 0x1C16F20
	0x0343C7C4 BL 0x1C16F20
	0x0343C7C8 BL 0x1C16F20
	0x0343C7CC B 0x343C830
	0x0343C7D0 B 0x343C830
	0x0343C7D4 B 0x343C830
	0x0343C7D8 B 0x343C830
	0x0343C7DC B 0x343C830
	0x0343C7E0 B 0x343C830
	0x0343C7E4 B 0x343C830
	0x0343C7E8 B 0x343C830
	0x0343C7EC B 0x343C830
	0x0343C7F0 B 0x343C830
	0x0343C7F4 B 0x343C830
	0x0343C7F8 B 0x343C830
	0x0343C7FC B 0x343C830
	0x0343C800 B 0x343C830
	0x0343C804 B 0x343C830
	0x0343C808 B 0x343C830
	0x0343C80C B 0x343C830
	0x0343C810 B 0x343C830
	0x0343C814 B 0x343C830
	0x0343C818 B 0x343C830
	0x0343C81C B 0x343C830
	0x0343C820 B 0x343C830
	0x0343C824 B 0x343C830
	0x0343C828 B 0x343C830
	0x0343C82C B 0x343C830
	0x0343C830 MOV X20, X0
	0x0343C834 CMP W1, 0x1
	0x0343C838 B.NE 0x343C8D4
	0x0343C83C MOV X0, X20
	0x0343C840 BL 0x3EB1AD0
	0x0343C844 MOV X20, X0
	0x0343C848 ADRP X0, 0xCB7000
	0x0343C84C LDR X0, [X0 + 0x7D0]
	0x0343C850 BL 0x1C16D08
	0x0343C854 LDR X8, [X20]
	0x0343C858 LDR X1, [X8]
	0x0343C85C BL 0x1C17270
	0x0343C860 TBZ X0, 0x0, 0x343C8AC
	0x0343C864 LDR X20, [X20]
	0x0343C868 BL 0x3EB1AE0
	0x0343C86C MOVN W8, 0x1
	0x0343C870 STR W8, [X19], #0x8
	0x0343C874 ADRP X0, 0xCF2000
	0x0343C878 LDR X0, [X0 + 0x588]
	0x0343C87C BL 0x1C16D08
	0x0343C880 LDR W8, [X0 + 0xE0]
	0x0343C884 CBNZ W8, 0x343C88C
	0x0343C888 BL 0x1C16DFC
	0x0343C88C ADRP X0, 0xCF3000
	0x0343C890 LDR X0, [X0 + 0x4F8]
	0x0343C894 BL 0x1C16D08
	0x0343C898 MOV X2, X0
	0x0343C89C MOV X0, X19
	0x0343C8A0 MOV X1, X20
	0x0343C8A4 BL 0x26324C8
	0x0343C8A8 B 0x343C73C
	0x0343C8AC MOVZ W0, 0x8
	0x0343C8B0 BL 0x3EB1AF0
	0x0343C8B4 LDR X8, [X20]
	0x0343C8B8 STR X8, [X0]
	0x0343C8BC ADRP X1, 0xA78000
	0x0343C8C0 ADD X1, X1, 0xE58
	0x0343C8C4 MOV X2, X31
	0x0343C8C8 BL 0x3EB1B00
	0x0343C8CC MOV X20, X0
	0x0343C8D0 BL 0x3EB1AE0
	0x0343C8D4 MOV X0, X20
	0x0343C8D8 BL 0x1D2C690
	0x0343C8DC BL 0x1990590
	0x0343C8E0 STR X30, [X31 - 0x30]!
	0x0343C8E4 STP X22, X21, [X31 + 0x10]
	0x0343C8E8 STP X20, X19, [X31 + 0x20]
	0x0343C8EC ADRP X22, 0xFA1000
	0x0343C8F0 ADRP X21, 0xCF2000
	0x0343C8F4 LDRB W8, [X22 + 0x694]
	0x0343C8F8 LDR X21, [X21 + 0x588]
	0x0343C8FC MOV X19, X1
	0x0343C900 MOV X20, X0
	0x0343C904 TBNZ X8, 0x0, 0x343C928
	0x0343C908 ADRP X0, 0xCF3000
	0x0343C90C LDR X0, [X0 + 0x500]
	0x0343C910 BL 0x1C16CF4
	0x0343C914 ADRP X0, 0xCF2000
	0x0343C918 LDR X0, [X0 + 0x588]
	0x0343C91C BL 0x1C16CF4
	0x0343C920 MOVZ W8, 0x1
	0x0343C924 STRB W8, [X22 + 0x694]
	0x0343C928 LDR X0, [X21]
	0x0343C92C ADRP X21, 0xCF3000
	0x0343C930 LDR W8, [X0 + 0xE0]
	0x0343C934 LDR X21, [X21 + 0x500]
	0x0343C938 CBNZ W8, 0x343C940
	0x0343C93C BL 0x1C16DFC
	0x0343C940 LDR X2, [X21]
	0x0343C944 ADD X0, X20, 0x8
	0x0343C948 MOV X1, X19
	0x0343C94C LDP X20, X19, [X31 + 0x20]
	0x0343C950 LDP X22, X21, [X31 + 0x10]
	0x0343C954 LDR X30, [X31], #0x30
	0x0343C958 B 0x2632228
	0x0343C95C SUB X31, X31, 0x70
	0x0343C960 STR X30, [X31 + 0x10]
	0x0343C964 STP X28, X27, [X31 + 0x20]
	0x0343C968 STP X26, X25, [X31 + 0x30]
	0x0343C96C STP X24, X23, [X31 + 0x40]
	0x0343C970 STP X22, X21, [X31 + 0x50]
	0x0343C974 STP X20, X19, [X31 + 0x60]
	0x0343C978 ADRP X20, 0xFA1000
	0x0343C97C LDRB W8, [X20 + 0x695]
	0x0343C980 MOV X19, X0
	0x0343C984 TBNZ X8, 0x0, 0x343CA68
	0x0343C988 ADRP X0, 0xCF3000
	0x0343C98C LDR X0, [X0 + 0x508]
	0x0343C990 BL 0x1C16CF4
	0x0343C994 ADRP X0, 0xCF3000
	0x0343C998 LDR X0, [X0 + 0x4D8]
	0x0343C99C BL 0x1C16CF4
	0x0343C9A0 ADRP X0, 0xCF2000
	0x0343C9A4 LDR X0, [X0 + 0x588]
	0x0343C9A8 BL 0x1C16CF4
	0x0343C9AC ADRP X0, 0xCC0000
	0x0343C9B0 LDR X0, [X0 + 0x8D8]
	0x0343C9B4 BL 0x1C16CF4
	0x0343C9B8 ADRP X0, 0xCB8000
	0x0343C9BC LDR X0, [X0 + 0x810]
	0x0343C9C0 BL 0x1C16CF4
	0x0343C9C4 ADRP X0, 0xCB8000
	0x0343C9C8 LDR X0, [X0 + 0x6C0]
	0x0343C9CC BL 0x1C16CF4
	0x0343C9D0 ADRP X0, 0xCB8000
	0x0343C9D4 LDR X0, [X0 + 0x6D0]
	0x0343C9D8 BL 0x1C16CF4
	0x0343C9DC ADRP X0, 0xCF2000
	0x0343C9E0 LDR X0, [X0 + 0x7B8]
	0x0343C9E4 BL 0x1C16CF4
	0x0343C9E8 ADRP X0, 0xCF3000
	0x0343C9EC LDR X0, [X0 + 0x4E0]
	0x0343C9F0 BL 0x1C16CF4
	0x0343C9F4 ADRP X0, 0xCBA000
	0x0343C9F8 LDR X0, [X0 + 0x1E0]
	0x0343C9FC BL 0x1C16CF4
	0x0343CA00 ADRP X0, 0xCBA000
	0x0343CA04 LDR X0, [X0 + 0x1F0]
	0x0343CA08 BL 0x1C16CF4
	0x0343CA0C ADRP X0, 0xCBA000
	0x0343CA10 LDR X0, [X0 + 0x1F8]
	0x0343CA14 BL 0x1C16CF4
	0x0343CA18 ADRP X0, 0xCC0000
	0x0343CA1C LDR X0, [X0 + 0x3A0]
	0x0343CA20 BL 0x1C16CF4
	0x0343CA24 ADRP X0, 0xCE0000
	0x0343CA28 LDR X0, [X0 + 0x4D8]
	0x0343CA2C BL 0x1C16CF4
	0x0343CA30 ADRP X0, 0xCF2000
	0x0343CA34 LDR X0, [X0 + 0x7D0]
	0x0343CA38 BL 0x1C16CF4
	0x0343CA3C ADRP X0, 0xCF2000
	0x0343CA40 LDR X0, [X0 + 0x7D8]
	0x0343CA44 BL 0x1C16CF4
	0x0343CA48 ADRP X0, 0xCB7000
	0x0343CA4C LDR X0, [X0 + 0x988]
	0x0343CA50 BL 0x1C16CF4
	0x0343CA54 ADRP X0, 0xCF3000
	0x0343CA58 LDR X0, [X0 + 0x510]
	0x0343CA5C BL 0x1C16CF4
	0x0343CA60 MOVZ W8, 0x1
	0x0343CA64 STRB W8, [X20 + 0x695]
	0x0343CA68 STR X31, [X31 + 0x18]
	0x0343CA6C ADRP X28, 0xCF2000
	0x0343CA70 LDR W8, [X19]
	0x0343CA74 LDR X28, [X28 + 0x588]
	0x0343CA78 CBZ W8, 0x343CC58
	0x0343CA7C LDR X8, [X19 + 0x20]
	0x0343CA80 CBZ X8, 0x343CD90
	0x0343CA84 LDR X25, [X19 + 0x28]
	0x0343CA88 CBZ X25, 0x343CDD8
	0x0343CA8C LDR X0, [X25 + 0x20]
	0x0343CA90 CBZ X0, 0x343CDDC
	0x0343CA94 ADRP X8, 0xCF3000
	0x0343CA98 ADRP X9, 0xCB7000
	0x0343CA9C LDR X8, [X8 + 0x510]
	0x0343CAA0 LDR X9, [X9 + 0x988]
	0x0343CAA4 LDR X21, [X8]
	0x0343CAA8 LDR X20, [X9]
	0x0343CAAC MOV X1, X31
	0x0343CAB0 BL 0x361B448
	0x0343CAB4 ADRP X8, 0xCC0000
	0x0343CAB8 LDR X8, [X8 + 0x8D8]
	0x0343CABC MOV X22, X0
	0x0343CAC0 LDR X0, [X8]
	0x0343CAC4 MOVZ W1, 0x1
	0x0343CAC8 BL 0x1C16D6C
	0x0343CACC MOV X1, X0
	0x0343CAD0 CBZ X1, 0x343CDE0
	0x0343CAD4 LDR W8, [X1 + 0x18]
	0x0343CAD8 CBZ W8, 0x343CDE4
	0x0343CADC MOVZ W8, 0x2F
	0x0343CAE0 STRH W8, [X1 + 0x20]
	0x0343CAE4 CBZ X22, 0x343CDE8
	0x0343CAE8 MOV X0, X22
	0x0343CAEC MOV X2, X31
	0x0343CAF0 BL 0x322BC58
	0x0343CAF4 MOV X1, X21
	0x0343CAF8 MOV X2, X31
	0x0343CAFC BL 0x321B938
	0x0343CB00 ADRP X8, 0xCC0000
	0x0343CB04 LDR X8, [X8 + 0x3A0]
	0x0343CB08 MOV X22, X0
	0x0343CB0C LDR X23, [X25 + 0x20]
	0x0343CB10 LDR X0, [X8]
	0x0343CB14 BL 0x1C16F10
	0x0343CB18 MOV X21, X0
	0x0343CB1C MOV X1, X23
	0x0343CB20 MOV X2, X31
	0x0343CB24 BL 0x36281F8
	0x0343CB28 CBZ X21, 0x343CDEC
	0x0343CB2C MOV X0, X21
	0x0343CB30 MOV X1, X22
	0x0343CB34 MOV X2, X31
	0x0343CB38 BL 0x36288CC
	0x0343CB3C MOV X0, X21
	0x0343CB40 MOV X1, X20
	0x0343CB44 MOV X2, X31
	0x0343CB48 BL 0x3628980
	0x0343CB4C MOV X0, X21
	0x0343CB50 MOV X1, X31
	0x0343CB54 BL 0x3628A38
	0x0343CB58 ADRP X8, 0xCE0000
	0x0343CB5C ADRP X9, 0xCB8000
	0x0343CB60 LDR X8, [X8 + 0x4D8]
	0x0343CB64 LDR X9, [X9 + 0x6D0]
	0x0343CB68 MOV X20, X0
	0x0343CB6C LDR X21, [X8]
	0x0343CB70 LDR X0, [X9]
	0x0343CB74 BL 0x1C16F10
	0x0343CB78 ADRP X8, 0xCB8000
	0x0343CB7C LDR X8, [X8 + 0x6C0]
	0x0343CB80 MOV X22, X0
	0x0343CB84 LDR X1, [X8]
	0x0343CB88 BL 0x2AA4804
	0x0343CB8C ADRP X8, 0xCF2000
	0x0343CB90 LDR X8, [X8 + 0x7D8]
	0x0343CB94 LDR X1, [X19 + 0x30]
	0x0343CB98 LDR X0, [X8]
	0x0343CB9C MOV X2, X31
	0x0343CBA0 BL 0x321B938
	0x0343CBA4 CBZ X22, 0x343CDF0
	0x0343CBA8 ADRP X8, 0xCF2000
	0x0343CBAC LDR X8, [X8 + 0x7D0]
	0x0343CBB0 ADRP X9, 0xCB8000
	0x0343CBB4 LDR X9, [X9 + 0x810]
	0x0343CBB8 MOV X2, X0
	0x0343CBBC LDR X1, [X8]
	0x0343CBC0 LDR X3, [X9]
	0x0343CBC4 MOV X0, X22
	0x0343CBC8 BL 0x2AA5098
	0x0343CBCC LDR X0, [X19 + 0x20]
	0x0343CBD0 MOV X1, X31
	0x0343CBD4 BL 0x3483BE4
	0x0343CBD8 MOV X23, X0
	0x0343CBDC MOV X0, X31
	0x0343CBE0 BL 0x3241948
	0x0343CBE4 CBZ X0, 0x343CDF4
	0x0343CBE8 LDR X8, [X0]
	0x0343CBEC LDR X9, [X8 + 0x268]
	0x0343CBF0 LDR X2, [X8 + 0x270]
	0x0343CBF4 MOV X1, X23
	0x0343CBF8 BLR X9
	0x0343CBFC LDR X24, [X25 + 0x10]
	0x0343CC00 CBZ X24, 0x343CDF8
	0x0343CC04 ADRP X10, 0xCF2000
	0x0343CC08 LDR X10, [X10 + 0x7B8]
	0x0343CC0C LDR X8, [X24]
	0x0343CC10 LDR W26, [X25 + 0x18]
	0x0343CC14 LDP X27, X25, [X19 + 0x38]
	0x0343CC18 LDR X1, [X10]
	0x0343CC1C LDRH W9, [X8 + 0x12E]
	0x0343CC20 MOV X23, X0
	0x0343CC24 CBZ X9, 0x343CC48
	0x0343CC28 LDR X10, [X8 + 0xB0]
	0x0343CC2C ADD X10, X10, 0x8
	0x0343CC30 LDUR X11, [X10 - 0x8]
	0x0343CC34 CMP X11, X1
	0x0343CC38 B.EQ 0x343CC70
	0x0343CC3C SUBS X9, X9, 0x1
	0x0343CC40 ADD X10, X10, 0x10
	0x0343CC44 B.NE 0x343CC30
	0x0343CC48 MOVZ W2, 0x3
	0x0343CC4C MOV X0, X24
	0x0343CC50 BL 0x1C5C788
	0x0343CC54 B 0x343CC80
	0x0343CC58 LDR X8, [X19 + 0x48]
	0x0343CC5C MOVN W9, 0x0
	0x0343CC60 STR X8, [X31 + 0x18]
	0x0343CC64 STR X31, [X19 + 0x48]
	0x0343CC68 STR W9, [X19]
	0x0343CC6C B 0x343CCDC
	0x0343CC70 LDR W9, [X10]
	0x0343CC74 ADD W9, W9, 0x3

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA2000
	014 Move W8, [X20+1679]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xCF4000
	021 Move X0, [X0+1184]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF4000
	024 Move X0, [X0+1112]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF3000
	027 Move X0, [X0+1328]
	028 Call 0x1C17CF4
	029 Move X0, 0xCC1000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCB9000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB9000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB9000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF3000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF4000
	045 Move X0, [X0+1120]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBB000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCBB000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCBB000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC1000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCE1000
	060 Move X0, [X0+1240]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF4000
	063 Move X0, [X0+1192]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF3000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xCF3000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xCB8000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1679], W8
	076 Move [X31+24], X31
	077 Move X28, 0xCF3000
	078 Move W8, [X19]
	079 Move X28, [X28+1328]
	080 Compare W8, 0
	081 JumpIfEqual {210}
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {302}
	085 Move X25, [X19+40]
	086 Compare X25, 0
	087 JumpIfEqual {320}
	088 Move X0, [X25+32]
	089 Compare X0, 0
	090 JumpIfEqual {321}
	091 Move X8, 0xCF4000
	092 Move X9, 0xCB8000
	093 Move X8, [X8+1192]
	094 Move X9, [X9+2440]
	095 Move X21, [X8]
	096 Move X20, [X9]
	097 Move X1, X31
	098 Call Uri.get_AbsolutePath, X0
	099 Move X8, 0xCC1000
	100 Move X8, [X8+2264]
	101 Move X22, X0
	102 Move X0, [X8]
	103 Move W1, 1
	104 Call 0x1C17D6C
	105 Move X1, X0
	106 Compare X1, 0
	107 JumpIfEqual {322}
	108 Move W8, [X1+24]
	109 Compare W8, 0
	110 JumpIfEqual {323}
	111 Move W8, 47
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Compare X22, 0
	114 JumpIfEqual {324}
	115 Move X0, X22
	116 Move X2, X31
	117 Call String.TrimEnd, X0, X1
	118 Move X1, X21
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X8, 0xCC1000
	122 Move X8, [X8+928]
	123 Move X22, X0
	124 Move X23, [X25+32]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move X1, X23
	129 Move X2, X31
	130 Call UriBuilder..ctor, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {325}
	133 Move X0, X21
	134 Move X1, X22
	135 Move X2, X31
	136 Call UriBuilder.set_Path, X0, X1
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Call UriBuilder.set_Query, X0, X1
	141 Move X0, X21
	142 Move X1, X31
	143 Call UriBuilder.get_Uri, X0
	144 Move X8, 0xCE1000
	145 Move X9, 0xCB9000
	146 Move X8, [X8+1240]
	147 Move X9, [X9+1744]
	148 Move X20, X0
	149 Move X21, [X8]
	150 Move X0, [X9]
	151 Call 0x1C17F10
	152 Move X8, 0xCB9000
	153 Move X8, [X8+1728]
	154 Move X22, X0
	155 Move X1, [X8]
	156 Call Dictionary`2<Object, Object>..ctor, X0
	157 Move X8, 0xCF3000
	158 Move X8, [X8+2008]
	159 Move X1, [X19+48]
	160 Move X0, [X8]
	161 Move X2, X31
	162 Call String.Concat, X0, X1
	163 Compare X22, 0
	164 JumpIfEqual {326}
	165 Move X8, 0xCF3000
	166 Move X8, [X8+2000]
	167 Move X9, 0xCB9000
	168 Move X9, [X9+2064]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X22
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X19+32]
	175 Move X1, X31
	176 Call JsonWriter.ToJson, X0
	177 Move X23, X0
	178 Move X0, X31
	179 Call Encoding.get_UTF8
	180 Compare X0, 0
	181 JumpIfEqual {327}
	182 Move X8, [X0]
	183 Move X9, [X8+616]
	184 Move X2, [X8+624]
	185 Move X1, X23
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X24, [X25+16]
	188 Compare X24, 0
	189 JumpIfEqual {328}
	190 Move X10, 0xCF3000
	191 Move X10, [X10+1976]
	192 Move X8, [X24]
	193 Move W26, [X25+24]
	194 Move X27, [X19+56]
	195 Move X25, [X19+64]
	196 Move X1, [X10]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X23, X0
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 3
	208 Move X0, X24
	209 Call 0x1C5D788
	210 Move X8, [X19+72]
	211 Move TEMP, 0
	212 Not TEMP
	213 Move W9, TEMP
	214 Move [X31+24], X8
	215 Move [X19+72], X31
	216 Move [X19], W9
	217 Move W9, [X10]
	218 Add W9, W9, 3
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X9, [X0+8]
	223 Move X0, X24
	224 Move X1, X21
	225 Move X2, X20
	226 Move X3, X22
	227 Move X4, X23
	228 Move W5, W26
	229 Move X6, X27
	230 Move X7, X25
	231 Move [X31], X9
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X0, 0
	234 JumpIfEqual {329}
	235 Move X8, 0xCBB000
	236 Move X8, [X8+504]
	237 Move X1, [X8]
	238 Call Task`1<Object>.GetAwaiter, X0
	239 Move X8, 0xCBB000
	240 Move X8, [X8+496]
	241 Move [X31+24], X0
	242 Move X1, [X8]
	243 Add X0, X31, 24
	244 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {274}
	249 Move X8, 0xCBB000
	250 Move X8, [X8+480]
	251 Add X0, X31, 24
	252 Move X1, [X8]
	253 Call TaskAwaiter`1<Object>.GetResult, X0
	254 Move X8, 0xCF4000
	255 Move X8, [X8+1120]
	256 Move X1, [X8]
	257 Call JsonParser.FromJson, X0
	258 Move TEMP, 1
	259 Not TEMP
	260 Move W8, TEMP
	261 Move [X19+8], W8
	262 Move X20, X0
	263 Move X0, [X28]
	264 Move X21, 0xCF4000
	265 Move W8, [X0+224]
	266 Move X21, [X21+1112]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X2, [X21]
	271 Move X0, X19
	272 Move X1, X20
	273 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	274 Move [X19], W31
	275 Move X8, [X31+24]
	276 Move [X19+72], X8
	277 Move X0, [X28]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, 0xCF4000
	283 Move X8, [X8+1184]
	284 Add X0, X19, 8
	285 Move X3, [X8]
	286 Add X1, X31, 24
	287 Move X2, X19
	288 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	289 Move X20, [X31+96]
	290 Move X19, [X31+104]
	291 Move X22, [X31+80]
	292 Move X21, [X31+88]
	293 Move X24, [X31+64]
	294 Move X23, [X31+72]
	295 Move X26, [X31+48]
	296 Move X25, [X31+56]
	297 Move X28, [X31+32]
	298 Move X27, [X31+40]
	299 Move X30, [X31+16]
	300 Add X31, X31, 112
	301 Return 
	302 Move X0, 0xCC0000
	303 Move X0, [X0+1400]
	304 Call 0x1C17D08
	305 Call 0x1C17F10
	306 Move X20, X0
	307 Move X0, 0xCF3000
	308 Move X0, [X0+3016]
	309 Call 0x1C17D08
	310 Move X1, X0
	311 Move X0, X20
	312 Move X2, X31
	313 Call ArgumentException..ctor, X0, X1
	314 Move X0, 0xCF4000
	315 Move X0, [X0+1200]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X0, X20
	319 Call 0x1C17DEC
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F28
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X20, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X20
	333 Call 0x3EB2AD0
	334 Move X20, X0
	335 Move X0, 0xCB8000
	336 Move X0, [X0+2000]
	337 Call 0x1C17D08
	338 Move X8, [X20]
	339 Move X1, [X8]
	340 Call 0x1C18270
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {365}
	345 Move X20, [X20]
	346 Call 0x3EB2AE0
	347 Move TEMP, 1
	348 Not TEMP
	349 Move W8, TEMP
	350 Move [X19+8], W8
	351 Move X0, 0xCF3000
	352 Move X0, [X0+1328]
	353 Call 0x1C17D08
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, 0xCF4000
	359 Move X0, [X0+1144]
	360 Call 0x1C17D08
	361 Move X2, X0
	362 Move X0, X19
	363 Move X1, X20
	364 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	365 Move W0, 8
	366 Call 0x3EB2AF0
	367 Move X8, [X20]
	368 Move [X0], X8
	369 Move X1, 0xA79000
	370 Add X1, X1, 3672
	371 Move X2, X31
	372 Call 0x3EB2B00
	373 Move X20, X0
	374 Call 0x3EB2AE0
	375 Move X0, X20
	376 Call 0x1D2D690
	377 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343CC78 ADD X8, X8, W9, 0x4, SXTW
	0x0343CC7C ADD X0, X8, 0x138
	0x0343CC80 LDP X8, X9, [X0]
	0x0343CC84 MOV X0, X24
	0x0343CC88 MOV X1, X21
	0x0343CC8C MOV X2, X20
	0x0343CC90 MOV X3, X22
	0x0343CC94 MOV X4, X23
	0x0343CC98 MOV W5, W26
	0x0343CC9C MOV X6, X27
	0x0343CCA0 MOV X7, X25
	0x0343CCA4 STR X9, [X31]
	0x0343CCA8 BLR X8
	0x0343CCAC CBZ X0, 0x343CDFC
	0x0343CCB0 ADRP X8, 0xCBA000
	0x0343CCB4 LDR X8, [X8 + 0x1F8]
	0x0343CCB8 LDR X1, [X8]
	0x0343CCBC BL 0x269F5D0
	0x0343CCC0 ADRP X8, 0xCBA000
	0x0343CCC4 LDR X8, [X8 + 0x1F0]
	0x0343CCC8 STR X0, [X31 + 0x18]
	0x0343CCCC LDR X1, [X8]
	0x0343CCD0 ADD X0, X31, 0x18
	0x0343CCD4 BL 0x2677430
	0x0343CCD8 TBZ X0, 0x0, 0x343CD38
	0x0343CCDC ADRP X8, 0xCBA000
	0x0343CCE0 LDR X8, [X8 + 0x1E0]
	0x0343CCE4 ADD X0, X31, 0x18
	0x0343CCE8 LDR X1, [X8]
	0x0343CCEC BL 0x2677474
	0x0343CCF0 ADRP X8, 0xCF3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA2000
	007 Move X21, 0xCF3000
	008 Move W8, [X22+1680]
	009 Move X21, [X21+1328]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF4000
	017 Move X0, [X0+1152]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF3000
	020 Move X0, [X0+1328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1680], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF4000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1152]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

