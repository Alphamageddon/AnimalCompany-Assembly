Type: Nakama.ApiClient/<ValidatePurchaseHuaweiAsync>d__62

Method: System.Void MoveNext()

Disassembly:
	0x0343CCF4 LDR X8, [X8 + 0x4E0]
	0x0343CCF8 LDR X1, [X8]
	0x0343CCFC BL 0x220E6DC
	0x0343CD00 MOVN W8, 0x1
	0x0343CD04 STR W8, [X19], #0x8
	0x0343CD08 MOV X20, X0
	0x0343CD0C LDR X0, [X28]
	0x0343CD10 ADRP X21, 0xCF3000
	0x0343CD14 LDR W8, [X0 + 0xE0]
	0x0343CD18 LDR X21, [X21 + 0x4D8]
	0x0343CD1C CBNZ W8, 0x343CD24
	0x0343CD20 BL 0x1C16DFC
	0x0343CD24 LDR X2, [X21]
	0x0343CD28 MOV X0, X19
	0x0343CD2C MOV X1, X20
	0x0343CD30 BL 0x26322B0
	0x0343CD34 B 0x343CD70
	0x0343CD38 STR W31, [X19]
	0x0343CD3C LDR X8, [X31 + 0x18]
	0x0343CD40 STR X8, [X19 + 0x48]
	0x0343CD44 LDR X0, [X28]
	0x0343CD48 LDR W8, [X0 + 0xE0]
	0x0343CD4C CBNZ W8, 0x343CD54
	0x0343CD50 BL 0x1C16DFC
	0x0343CD54 ADRP X8, 0xCF3000
	0x0343CD58 LDR X8, [X8 + 0x508]
	0x0343CD5C ADD X0, X19, 0x8
	0x0343CD60 LDR X3, [X8]
	0x0343CD64 ADD X1, X31, 0x18
	0x0343CD68 MOV X2, X19
	0x0343CD6C BL 0x1FB653C
	0x0343CD70 LDP X20, X19, [X31 + 0x60]
	0x0343CD74 LDP X22, X21, [X31 + 0x50]
	0x0343CD78 LDP X24, X23, [X31 + 0x40]
	0x0343CD7C LDP X26, X25, [X31 + 0x30]
	0x0343CD80 LDP X28, X27, [X31 + 0x20]
	0x0343CD84 LDR X30, [X31 + 0x10]
	0x0343CD88 ADD X31, X31, 0x70
	0x0343CD8C RET
	0x0343CD90 ADRP X0, 0xCBF000
	0x0343CD94 LDR X0, [X0 + 0x578]
	0x0343CD98 BL 0x1C16D08
	0x0343CD9C BL 0x1C16F10
	0x0343CDA0 MOV X20, X0
	0x0343CDA4 ADRP X0, 0xCF2000
	0x0343CDA8 LDR X0, [X0 + 0xBC8]
	0x0343CDAC BL 0x1C16D08
	0x0343CDB0 MOV X1, X0
	0x0343CDB4 MOV X0, X20
	0x0343CDB8 MOV X2, X31
	0x0343CDBC BL 0x3314A68
	0x0343CDC0 ADRP X0, 0xCF3000
	0x0343CDC4 LDR X0, [X0 + 0x518]
	0x0343CDC8 BL 0x1C16D08
	0x0343CDCC MOV X1, X0
	0x0343CDD0 MOV X0, X20
	0x0343CDD4 BL 0x1C16DEC
	0x0343CDD8 BL 0x1C16F20
	0x0343CDDC BL 0x1C16F20
	0x0343CDE0 BL 0x1C16F20
	0x0343CDE4 BL 0x1C16F28
	0x0343CDE8 BL 0x1C16F20
	0x0343CDEC BL 0x1C16F20
	0x0343CDF0 BL 0x1C16F20
	0x0343CDF4 BL 0x1C16F20
	0x0343CDF8 BL 0x1C16F20
	0x0343CDFC BL 0x1C16F20
	0x0343CE00 B 0x343CE64
	0x0343CE04 B 0x343CE64
	0x0343CE08 B 0x343CE64
	0x0343CE0C B 0x343CE64
	0x0343CE10 B 0x343CE64
	0x0343CE14 B 0x343CE64
	0x0343CE18 B 0x343CE64
	0x0343CE1C B 0x343CE64
	0x0343CE20 B 0x343CE64
	0x0343CE24 B 0x343CE64
	0x0343CE28 B 0x343CE64
	0x0343CE2C B 0x343CE64
	0x0343CE30 B 0x343CE64
	0x0343CE34 B 0x343CE64
	0x0343CE38 B 0x343CE64
	0x0343CE3C B 0x343CE64
	0x0343CE40 B 0x343CE64
	0x0343CE44 B 0x343CE64
	0x0343CE48 B 0x343CE64
	0x0343CE4C B 0x343CE64
	0x0343CE50 B 0x343CE64
	0x0343CE54 B 0x343CE64
	0x0343CE58 B 0x343CE64
	0x0343CE5C B 0x343CE64
	0x0343CE60 B 0x343CE64
	0x0343CE64 MOV X20, X0
	0x0343CE68 CMP W1, 0x1
	0x0343CE6C B.NE 0x343CF08
	0x0343CE70 MOV X0, X20
	0x0343CE74 BL 0x3EB1AD0
	0x0343CE78 MOV X20, X0
	0x0343CE7C ADRP X0, 0xCB7000
	0x0343CE80 LDR X0, [X0 + 0x7D0]
	0x0343CE84 BL 0x1C16D08
	0x0343CE88 LDR X8, [X20]
	0x0343CE8C LDR X1, [X8]
	0x0343CE90 BL 0x1C17270
	0x0343CE94 TBZ X0, 0x0, 0x343CEE0
	0x0343CE98 LDR X20, [X20]
	0x0343CE9C BL 0x3EB1AE0
	0x0343CEA0 MOVN W8, 0x1
	0x0343CEA4 STR W8, [X19], #0x8
	0x0343CEA8 ADRP X0, 0xCF2000
	0x0343CEAC LDR X0, [X0 + 0x588]
	0x0343CEB0 BL 0x1C16D08
	0x0343CEB4 LDR W8, [X0 + 0xE0]
	0x0343CEB8 CBNZ W8, 0x343CEC0
	0x0343CEBC BL 0x1C16DFC
	0x0343CEC0 ADRP X0, 0xCF3000
	0x0343CEC4 LDR X0, [X0 + 0x4F8]
	0x0343CEC8 BL 0x1C16D08
	0x0343CECC MOV X2, X0
	0x0343CED0 MOV X0, X19
	0x0343CED4 MOV X1, X20
	0x0343CED8 BL 0x26324C8
	0x0343CEDC B 0x343CD70
	0x0343CEE0 MOVZ W0, 0x8
	0x0343CEE4 BL 0x3EB1AF0
	0x0343CEE8 LDR X8, [X20]
	0x0343CEEC STR X8, [X0]
	0x0343CEF0 ADRP X1, 0xA78000
	0x0343CEF4 ADD X1, X1, 0xE58
	0x0343CEF8 MOV X2, X31
	0x0343CEFC BL 0x3EB1B00
	0x0343CF00 MOV X20, X0
	0x0343CF04 BL 0x3EB1AE0
	0x0343CF08 MOV X0, X20
	0x0343CF0C BL 0x1D2C690
	0x0343CF10 BL 0x1990590
	0x0343CF14 STR X30, [X31 - 0x30]!
	0x0343CF18 STP X22, X21, [X31 + 0x10]
	0x0343CF1C STP X20, X19, [X31 + 0x20]
	0x0343CF20 ADRP X22, 0xFA1000
	0x0343CF24 ADRP X21, 0xCF2000
	0x0343CF28 LDRB W8, [X22 + 0x696]
	0x0343CF2C LDR X21, [X21 + 0x588]
	0x0343CF30 MOV X19, X1
	0x0343CF34 MOV X20, X0
	0x0343CF38 TBNZ X8, 0x0, 0x343CF5C
	0x0343CF3C ADRP X0, 0xCF3000
	0x0343CF40 LDR X0, [X0 + 0x500]
	0x0343CF44 BL 0x1C16CF4
	0x0343CF48 ADRP X0, 0xCF2000
	0x0343CF4C LDR X0, [X0 + 0x588]
	0x0343CF50 BL 0x1C16CF4
	0x0343CF54 MOVZ W8, 0x1
	0x0343CF58 STRB W8, [X22 + 0x696]
	0x0343CF5C LDR X0, [X21]
	0x0343CF60 ADRP X21, 0xCF3000
	0x0343CF64 LDR W8, [X0 + 0xE0]
	0x0343CF68 LDR X21, [X21 + 0x500]
	0x0343CF6C CBNZ W8, 0x343CF74
	0x0343CF70 BL 0x1C16DFC
	0x0343CF74 LDR X2, [X21]
	0x0343CF78 ADD X0, X20, 0x8
	0x0343CF7C MOV X1, X19
	0x0343CF80 LDP X20, X19, [X31 + 0x20]
	0x0343CF84 LDP X22, X21, [X31 + 0x10]
	0x0343CF88 LDR X30, [X31], #0x30
	0x0343CF8C B 0x2632228
	0x0343CF90 SUB X31, X31, 0x70
	0x0343CF94 STR X30, [X31 + 0x10]
	0x0343CF98 STP X28, X27, [X31 + 0x20]
	0x0343CF9C STP X26, X25, [X31 + 0x30]
	0x0343CFA0 STP X24, X23, [X31 + 0x40]
	0x0343CFA4 STP X22, X21, [X31 + 0x50]
	0x0343CFA8 STP X20, X19, [X31 + 0x60]
	0x0343CFAC ADRP X20, 0xFA1000
	0x0343CFB0 LDRB W8, [X20 + 0x697]
	0x0343CFB4 MOV X19, X0
	0x0343CFB8 TBNZ X8, 0x0, 0x343D0B4
	0x0343CFBC ADRP X0, 0xCF3000
	0x0343CFC0 LDR X0, [X0 + 0x520]
	0x0343CFC4 BL 0x1C16CF4
	0x0343CFC8 ADRP X0, 0xCF3000
	0x0343CFCC LDR X0, [X0 + 0x528]
	0x0343CFD0 BL 0x1C16CF4
	0x0343CFD4 ADRP X0, 0xCF2000
	0x0343CFD8 LDR X0, [X0 + 0x5F8]
	0x0343CFDC BL 0x1C16CF4
	0x0343CFE0 ADRP X0, 0xCC0000
	0x0343CFE4 LDR X0, [X0 + 0x8D8]
	0x0343CFE8 BL 0x1C16CF4
	0x0343CFEC ADRP X0, 0xCB8000
	0x0343CFF0 LDR X0, [X0 + 0x810]
	0x0343CFF4 BL 0x1C16CF4
	0x0343CFF8 ADRP X0, 0xCB8000
	0x0343CFFC LDR X0, [X0 + 0x6C0]
	0x0343D000 BL 0x1C16CF4
	0x0343D004 ADRP X0, 0xCB7000
	0x0343D008 LDR X0, [X0 + 0x6D0]
	0x0343D00C BL 0x1C16CF4
	0x0343D010 ADRP X0, 0xCF1000
	0x0343D014 LDR X0, [X0 + 0x7B8]
	0x0343D018 BL 0x1C16CF4
	0x0343D01C ADRP X0, 0xCF2000
	0x0343D020 LDR X0, [X0 + 0x530]
	0x0343D024 BL 0x1C16CF4
	0x0343D028 ADRP X0, 0xCB9000
	0x0343D02C LDR X0, [X0 + 0x1E0]
	0x0343D030 BL 0x1C16CF4
	0x0343D034 ADRP X0, 0xCB9000
	0x0343D038 LDR X0, [X0 + 0x1F0]
	0x0343D03C BL 0x1C16CF4
	0x0343D040 ADRP X0, 0xCB9000
	0x0343D044 LDR X0, [X0 + 0x1F8]
	0x0343D048 BL 0x1C16CF4
	0x0343D04C ADRP X0, 0xCBF000
	0x0343D050 LDR X0, [X0 + 0x3A0]
	0x0343D054 BL 0x1C16CF4
	0x0343D058 ADRP X0, 0xCB8000
	0x0343D05C LDR X0, [X0 + 0xA28]
	0x0343D060 BL 0x1C16CF4
	0x0343D064 ADRP X0, 0xCDF000
	0x0343D068 LDR X0, [X0 + 0x4D8]
	0x0343D06C BL 0x1C16CF4
	0x0343D070 ADRP X0, 0xCF1000
	0x0343D074 LDR X0, [X0 + 0x7D0]
	0x0343D078 BL 0x1C16CF4
	0x0343D07C ADRP X0, 0xCF1000
	0x0343D080 LDR X0, [X0 + 0xC20]
	0x0343D084 BL 0x1C16CF4
	0x0343D088 ADRP X0, 0xCF1000
	0x0343D08C LDR X0, [X0 + 0xC28]
	0x0343D090 BL 0x1C16CF4
	0x0343D094 ADRP X0, 0xCF1000
	0x0343D098 LDR X0, [X0 + 0x7D8]
	0x0343D09C BL 0x1C16CF4
	0x0343D0A0 ADRP X0, 0xCB6000
	0x0343D0A4 LDR X0, [X0 + 0x988]
	0x0343D0A8 BL 0x1C16CF4
	0x0343D0AC MOVZ W8, 0x1
	0x0343D0B0 STRB W8, [X20 + 0x697]
	0x0343D0B4 STR X31, [X31 + 0x18]
	0x0343D0B8 ADRP X28, 0xCF1000
	0x0343D0BC LDR W8, [X19]
	0x0343D0C0 LDR X28, [X28 + 0x5F8]
	0x0343D0C4 CBZ W8, 0x343D2F4
	0x0343D0C8 LDR X21, [X19 + 0x20]
	0x0343D0CC CBZ X21, 0x343D42C
	0x0343D0D0 LDR X8, [X19 + 0x28]
	0x0343D0D4 CBZ X8, 0x343D474
	0x0343D0D8 ADRP X8, 0xCB8000
	0x0343D0DC LDR X8, [X8 + 0xA28]
	0x0343D0E0 LDR X0, [X8]
	0x0343D0E4 ADRP X8, 0xCF1000
	0x0343D0E8 LDR X8, [X8 + 0xC28]
	0x0343D0EC LDR X25, [X19 + 0x30]
	0x0343D0F0 LDR W9, [X0 + 0xE0]
	0x0343D0F4 LDR X20, [X8]
	0x0343D0F8 CBNZ W9, 0x343D100
	0x0343D0FC BL 0x1C16DFC
	0x0343D100 MOV X0, X21
	0x0343D104 MOV X1, X31
	0x0343D108 BL 0x3624D20
	0x0343D10C CBZ X20, 0x343D4BC
	0x0343D110 ADRP X8, 0xCF1000
	0x0343D114 LDR X8, [X8 + 0xC20]
	0x0343D118 MOV X2, X0
	0x0343D11C LDR X1, [X8]
	0x0343D120 MOV X0, X20
	0x0343D124 MOV X3, X31
	0x0343D128 BL 0x32293BC
	0x0343D12C CBZ X25, 0x343D4C0
	0x0343D130 MOV X21, X0
	0x0343D134 LDR X0, [X25 + 0x20]
	0x0343D138 CBZ X0, 0x343D4C4
	0x0343D13C ADRP X8, 0xCB6000
	0x0343D140 LDR X8, [X8 + 0x988]
	0x0343D144 LDR X20, [X8]
	0x0343D148 MOV X1, X31
	0x0343D14C BL 0x361B448
	0x0343D150 ADRP X8, 0xCBF000
	0x0343D154 LDR X8, [X8 + 0x8D8]
	0x0343D158 MOV X22, X0
	0x0343D15C LDR X0, [X8]
	0x0343D160 MOVZ W1, 0x1
	0x0343D164 BL 0x1C16D6C
	0x0343D168 MOV X1, X0
	0x0343D16C CBZ X1, 0x343D4C8
	0x0343D170 LDR W8, [X1 + 0x18]
	0x0343D174 CBZ W8, 0x343D4CC
	0x0343D178 MOVZ W8, 0x2F
	0x0343D17C STRH W8, [X1 + 0x20]
	0x0343D180 CBZ X22, 0x343D4D0
	0x0343D184 MOV X0, X22
	0x0343D188 MOV X2, X31
	0x0343D18C BL 0x322BC58
	0x0343D190 MOV X1, X21
	0x0343D194 MOV X2, X31
	0x0343D198 BL 0x321B938
	0x0343D19C ADRP X8, 0xCBF000
	0x0343D1A0 LDR X8, [X8 + 0x3A0]
	0x0343D1A4 MOV X22, X0
	0x0343D1A8 LDR X23, [X25 + 0x20]
	0x0343D1AC LDR X0, [X8]
	0x0343D1B0 BL 0x1C16F10
	0x0343D1B4 MOV X21, X0
	0x0343D1B8 MOV X1, X23
	0x0343D1BC MOV X2, X31
	0x0343D1C0 BL 0x36281F8
	0x0343D1C4 CBZ X21, 0x343D4D4
	0x0343D1C8 MOV X0, X21
	0x0343D1CC MOV X1, X22
	0x0343D1D0 MOV X2, X31
	0x0343D1D4 BL 0x36288CC
	0x0343D1D8 MOV X0, X21
	0x0343D1DC MOV X1, X20
	0x0343D1E0 MOV X2, X31
	0x0343D1E4 BL 0x3628980
	0x0343D1E8 MOV X0, X21
	0x0343D1EC MOV X1, X31
	0x0343D1F0 BL 0x3628A38
	0x0343D1F4 ADRP X8, 0xCDF000
	0x0343D1F8 ADRP X9, 0xCB7000
	0x0343D1FC LDR X8, [X8 + 0x4D8]
	0x0343D200 LDR X9, [X9 + 0x6D0]
	0x0343D204 MOV X20, X0
	0x0343D208 LDR X21, [X8]
	0x0343D20C LDR X0, [X9]
	0x0343D210 BL 0x1C16F10
	0x0343D214 ADRP X8, 0xCB7000
	0x0343D218 LDR X8, [X8 + 0x6C0]
	0x0343D21C MOV X22, X0
	0x0343D220 LDR X1, [X8]
	0x0343D224 BL 0x2AA4804
	0x0343D228 ADRP X8, 0xCF1000
	0x0343D22C LDR X8, [X8 + 0x7D8]
	0x0343D230 LDR X1, [X19 + 0x38]
	0x0343D234 LDR X0, [X8]
	0x0343D238 MOV X2, X31
	0x0343D23C BL 0x321B938
	0x0343D240 CBZ X22, 0x343D4D8
	0x0343D244 ADRP X8, 0xCF1000
	0x0343D248 LDR X8, [X8 + 0x7D0]
	0x0343D24C ADRP X9, 0xCB7000
	0x0343D250 LDR X9, [X9 + 0x810]
	0x0343D254 MOV X2, X0
	0x0343D258 LDR X1, [X8]
	0x0343D25C LDR X3, [X9]
	0x0343D260 MOV X0, X22
	0x0343D264 BL 0x2AA5098
	0x0343D268 LDR X0, [X19 + 0x28]
	0x0343D26C MOV X1, X31
	0x0343D270 BL 0x3483BE4
	0x0343D274 MOV X23, X0
	0x0343D278 MOV X0, X31
	0x0343D27C BL 0x3241948
	0x0343D280 CBZ X0, 0x343D4DC
	0x0343D284 LDR X8, [X0]
	0x0343D288 LDR X9, [X8 + 0x268]
	0x0343D28C LDR X2, [X8 + 0x270]
	0x0343D290 MOV X1, X23
	0x0343D294 BLR X9
	0x0343D298 LDR X24, [X25 + 0x10]
	0x0343D29C CBZ X24, 0x343D4E0
	0x0343D2A0 ADRP X10, 0xCF1000
	0x0343D2A4 LDR X10, [X10 + 0x7B8]
	0x0343D2A8 LDR X8, [X24]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA2000
	014 Move W8, [X20+1681]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xCF4000
	021 Move X0, [X0+1208]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF4000
	024 Move X0, [X0+1112]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF3000
	027 Move X0, [X0+1328]
	028 Call 0x1C17CF4
	029 Move X0, 0xCC1000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCB9000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB9000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB9000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF3000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF4000
	045 Move X0, [X0+1120]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBB000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCBB000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCBB000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC1000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCE1000
	060 Move X0, [X0+1240]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF3000
	063 Move X0, [X0+2000]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF4000
	066 Move X0, [X0+1216]
	067 Call 0x1C17CF4
	068 Move X0, 0xCF3000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xCB8000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1681], W8
	076 Move [X31+24], X31
	077 Move X28, 0xCF3000
	078 Move W8, [X19]
	079 Move X28, [X28+1328]
	080 Compare W8, 0
	081 JumpIfEqual {210}
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {302}
	085 Move X25, [X19+40]
	086 Compare X25, 0
	087 JumpIfEqual {320}
	088 Move X0, [X25+32]
	089 Compare X0, 0
	090 JumpIfEqual {321}
	091 Move X8, 0xCF4000
	092 Move X9, 0xCB8000
	093 Move X8, [X8+1216]
	094 Move X9, [X9+2440]
	095 Move X21, [X8]
	096 Move X20, [X9]
	097 Move X1, X31
	098 Call Uri.get_AbsolutePath, X0
	099 Move X8, 0xCC1000
	100 Move X8, [X8+2264]
	101 Move X22, X0
	102 Move X0, [X8]
	103 Move W1, 1
	104 Call 0x1C17D6C
	105 Move X1, X0
	106 Compare X1, 0
	107 JumpIfEqual {322}
	108 Move W8, [X1+24]
	109 Compare W8, 0
	110 JumpIfEqual {323}
	111 Move W8, 47
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Compare X22, 0
	114 JumpIfEqual {324}
	115 Move X0, X22
	116 Move X2, X31
	117 Call String.TrimEnd, X0, X1
	118 Move X1, X21
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X8, 0xCC1000
	122 Move X8, [X8+928]
	123 Move X22, X0
	124 Move X23, [X25+32]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move X1, X23
	129 Move X2, X31
	130 Call UriBuilder..ctor, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {325}
	133 Move X0, X21
	134 Move X1, X22
	135 Move X2, X31
	136 Call UriBuilder.set_Path, X0, X1
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Call UriBuilder.set_Query, X0, X1
	141 Move X0, X21
	142 Move X1, X31
	143 Call UriBuilder.get_Uri, X0
	144 Move X8, 0xCE1000
	145 Move X9, 0xCB9000
	146 Move X8, [X8+1240]
	147 Move X9, [X9+1744]
	148 Move X20, X0
	149 Move X21, [X8]
	150 Move X0, [X9]
	151 Call 0x1C17F10
	152 Move X8, 0xCB9000
	153 Move X8, [X8+1728]
	154 Move X22, X0
	155 Move X1, [X8]
	156 Call Dictionary`2<Object, Object>..ctor, X0
	157 Move X8, 0xCF3000
	158 Move X8, [X8+2008]
	159 Move X1, [X19+48]
	160 Move X0, [X8]
	161 Move X2, X31
	162 Call String.Concat, X0, X1
	163 Compare X22, 0
	164 JumpIfEqual {326}
	165 Move X8, 0xCF3000
	166 Move X8, [X8+2000]
	167 Move X9, 0xCB9000
	168 Move X9, [X9+2064]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X22
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X19+32]
	175 Move X1, X31
	176 Call JsonWriter.ToJson, X0
	177 Move X23, X0
	178 Move X0, X31
	179 Call Encoding.get_UTF8
	180 Compare X0, 0
	181 JumpIfEqual {327}
	182 Move X8, [X0]
	183 Move X9, [X8+616]
	184 Move X2, [X8+624]
	185 Move X1, X23
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X24, [X25+16]
	188 Compare X24, 0
	189 JumpIfEqual {328}
	190 Move X10, 0xCF3000
	191 Move X10, [X10+1976]
	192 Move X8, [X24]
	193 Move W26, [X25+24]
	194 Move X27, [X19+56]
	195 Move X25, [X19+64]
	196 Move X1, [X10]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X23, X0
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 3
	208 Move X0, X24
	209 Call 0x1C5D788
	210 Move X8, [X19+72]
	211 Move TEMP, 0
	212 Not TEMP
	213 Move W9, TEMP
	214 Move [X31+24], X8
	215 Move [X19+72], X31
	216 Move [X19], W9
	217 Move W9, [X10]
	218 Add W9, W9, 3
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X9, [X0+8]
	223 Move X0, X24
	224 Move X1, X21
	225 Move X2, X20
	226 Move X3, X22
	227 Move X4, X23
	228 Move W5, W26
	229 Move X6, X27
	230 Move X7, X25
	231 Move [X31], X9
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X0, 0
	234 JumpIfEqual {329}
	235 Move X8, 0xCBA000
	236 Move X8, [X8+504]
	237 Move X1, [X8]
	238 Call Task`1<Object>.GetAwaiter, X0
	239 Move X8, 0xCBA000
	240 Move X8, [X8+496]
	241 Move [X31+24], X0
	242 Move X1, [X8]
	243 Add X0, X31, 24
	244 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {274}
	249 Move X8, 0xCBA000
	250 Move X8, [X8+480]
	251 Add X0, X31, 24
	252 Move X1, [X8]
	253 Call TaskAwaiter`1<Object>.GetResult, X0
	254 Move X8, 0xCF3000
	255 Move X8, [X8+1120]
	256 Move X1, [X8]
	257 Call JsonParser.FromJson, X0
	258 Move TEMP, 1
	259 Not TEMP
	260 Move W8, TEMP
	261 Move [X19+8], W8
	262 Move X20, X0
	263 Move X0, [X28]
	264 Move X21, 0xCF3000
	265 Move W8, [X0+224]
	266 Move X21, [X21+1112]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X2, [X21]
	271 Move X0, X19
	272 Move X1, X20
	273 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	274 Move [X19], W31
	275 Move X8, [X31+24]
	276 Move [X19+72], X8
	277 Move X0, [X28]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, 0xCF3000
	283 Move X8, [X8+1208]
	284 Add X0, X19, 8
	285 Move X3, [X8]
	286 Add X1, X31, 24
	287 Move X2, X19
	288 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	289 Move X20, [X31+96]
	290 Move X19, [X31+104]
	291 Move X22, [X31+80]
	292 Move X21, [X31+88]
	293 Move X24, [X31+64]
	294 Move X23, [X31+72]
	295 Move X26, [X31+48]
	296 Move X25, [X31+56]
	297 Move X28, [X31+32]
	298 Move X27, [X31+40]
	299 Move X30, [X31+16]
	300 Add X31, X31, 112
	301 Return 
	302 Move X0, 0xCBF000
	303 Move X0, [X0+1400]
	304 Call 0x1C17D08
	305 Call 0x1C17F10
	306 Move X20, X0
	307 Move X0, 0xCF2000
	308 Move X0, [X0+3016]
	309 Call 0x1C17D08
	310 Move X1, X0
	311 Move X0, X20
	312 Move X2, X31
	313 Call ArgumentException..ctor, X0, X1
	314 Move X0, 0xCF3000
	315 Move X0, [X0+1224]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X0, X20
	319 Call 0x1C17DEC
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F28
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X20, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X20
	333 Call 0x3EB2AD0
	334 Move X20, X0
	335 Move X0, 0xCB7000
	336 Move X0, [X0+2000]
	337 Call 0x1C17D08
	338 Move X8, [X20]
	339 Move X1, [X8]
	340 Call 0x1C18270
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {365}
	345 Move X20, [X20]
	346 Call 0x3EB2AE0
	347 Move TEMP, 1
	348 Not TEMP
	349 Move W8, TEMP
	350 Move [X19+8], W8
	351 Move X0, 0xCF2000
	352 Move X0, [X0+1328]
	353 Call 0x1C17D08
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, 0xCF3000
	359 Move X0, [X0+1144]
	360 Call 0x1C17D08
	361 Move X2, X0
	362 Move X0, X19
	363 Move X1, X20
	364 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	365 Move W0, 8
	366 Call 0x3EB2AF0
	367 Move X8, [X20]
	368 Move [X0], X8
	369 Move X1, 0xA78000
	370 Add X1, X1, 3672
	371 Move X2, X31
	372 Call 0x3EB2B00
	373 Move X20, X0
	374 Call 0x3EB2AE0
	375 Move X0, X20
	376 Call 0x1D2D690
	377 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343D2AC LDR W26, [X25 + 0x18]
	0x0343D2B0 LDP X27, X25, [X19 + 0x40]
	0x0343D2B4 LDR X1, [X10]
	0x0343D2B8 LDRH W9, [X8 + 0x12E]
	0x0343D2BC MOV X23, X0
	0x0343D2C0 CBZ X9, 0x343D2E4
	0x0343D2C4 LDR X10, [X8 + 0xB0]
	0x0343D2C8 ADD X10, X10, 0x8
	0x0343D2CC LDUR X11, [X10 - 0x8]
	0x0343D2D0 CMP X11, X1
	0x0343D2D4 B.EQ 0x343D30C
	0x0343D2D8 SUBS X9, X9, 0x1
	0x0343D2DC ADD X10, X10, 0x10
	0x0343D2E0 B.NE 0x343D2CC
	0x0343D2E4 MOVZ W2, 0x3
	0x0343D2E8 MOV X0, X24
	0x0343D2EC BL 0x1C5C788
	0x0343D2F0 B 0x343D31C
	0x0343D2F4 LDR X8, [X19 + 0x50]
	0x0343D2F8 MOVN W9, 0x0
	0x0343D2FC STR X8, [X31 + 0x18]
	0x0343D300 STR X31, [X19 + 0x50]
	0x0343D304 STR W9, [X19]
	0x0343D308 B 0x343D378
	0x0343D30C LDR W9, [X10]
	0x0343D310 ADD W9, W9, 0x3
	0x0343D314 ADD X8, X8, W9, 0x4, SXTW
	0x0343D318 ADD X0, X8, 0x138
	0x0343D31C LDP X8, X9, [X0]
	0x0343D320 MOV X0, X24
	0x0343D324 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA1000
	007 Move X21, 0xCF2000
	008 Move W8, [X22+1682]
	009 Move X21, [X21+1328]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF3000
	017 Move X0, [X0+1152]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF2000
	020 Move X0, [X0+1328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1682], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF3000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1152]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

