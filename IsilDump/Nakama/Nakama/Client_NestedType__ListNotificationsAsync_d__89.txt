Type: Nakama.Client/<ListNotificationsAsync>d__89

Method: System.Void MoveNext()

Disassembly:
	0x034616FC LDR X21, [X8 + 0x18]
	0x03461700 CBZ X21, 0x3461A7C
	0x03461704 ADRP X23, 0xC93000
	0x03461708 LDR X8, [X21]
	0x0346170C LDR X23, [X23 + 0x818]
	0x03461710 LDRH W9, [X8 + 0x12E]
	0x03461714 LDR X1, [X23]
	0x03461718 CBZ X9, 0x346173C
	0x0346171C LDR X10, [X8 + 0xB0]
	0x03461720 ADD X10, X10, 0x8
	0x03461724 LDUR X11, [X10 - 0x8]
	0x03461728 CMP X11, X1
	0x0346172C B.EQ 0x346174C
	0x03461730 SUBS X9, X9, 0x1
	0x03461734 ADD X10, X10, 0x10
	0x03461738 B.NE 0x3461724
	0x0346173C MOVZ W2, 0x7
	0x03461740 MOV X0, X21
	0x03461744 BL 0x1C5C788
	0x03461748 B 0x346175C
	0x0346174C LDR W9, [X10]
	0x03461750 ADD W9, W9, 0x7
	0x03461754 ADD X8, X8, W9, 0x4, SXTW
	0x03461758 ADD X0, X8, 0x138
	0x0346175C LDP X8, X1, [X0]
	0x03461760 MOV X0, X21
	0x03461764 BLR X8
	0x03461768 MOV X1, X31
	0x0346176C BL 0x32277A8
	0x03461770 TBNZ X0, 0x0, 0x34618D4
	0x03461774 LDR X8, [X19 + 0x50]
	0x03461778 CBZ X8, 0x3461A80
	0x0346177C ADRP X9, 0xC93000
	0x03461780 LDR X9, [X9 + 0x9F0]
	0x03461784 LDR X21, [X8 + 0x18]
	0x03461788 LDR X0, [X9]
	0x0346178C LDR W9, [X0 + 0xE0]
	0x03461790 CBNZ W9, 0x3461798
	0x03461794 BL 0x1C16DFC
	0x03461798 MOV X0, X31
	0x0346179C BL 0x33616A4
	0x034617A0 ADRP X22, 0xC94000
	0x034617A4 LDR X22, [X22 + 0xA10]
	0x034617A8 MOV X8, X0
	0x034617AC STR X8, [X31 + 0x28]
	0x034617B0 LDR X0, [X22]
	0x034617B4 LDR W8, [X0 + 0xE0]
	0x034617B8 CBNZ W8, 0x34617C4
	0x034617BC BL 0x1C16DFC
	0x034617C0 LDR X0, [X22]
	0x034617C4 LDR X8, [X0 + 0xB8]
	0x034617C8 LDR X1, [X8]
	0x034617CC ADD X0, X31, 0x28
	0x034617D0 MOV X2, X31
	0x034617D4 BL 0x335FC68
	0x034617D8 CBZ X21, 0x3461A84
	0x034617DC LDR X8, [X21]
	0x034617E0 LDR X1, [X23]
	0x034617E4 MOV X22, X0
	0x034617E8 LDRH W9, [X8 + 0x12E]
	0x034617EC CBZ X9, 0x3461810
	0x034617F0 LDR X10, [X8 + 0xB0]
	0x034617F4 ADD X10, X10, 0x8
	0x034617F8 LDUR X11, [X10 - 0x8]
	0x034617FC CMP X11, X1
	0x03461800 B.EQ 0x3461820
	0x03461804 SUBS X9, X9, 0x1
	0x03461808 ADD X10, X10, 0x10
	0x0346180C B.NE 0x34617F8
	0x03461810 MOVZ W2, 0xB
	0x03461814 MOV X0, X21
	0x03461818 BL 0x1C5C788
	0x0346181C B 0x3461830
	0x03461820 LDR W9, [X10]
	0x03461824 ADD W9, W9, 0xB
	0x03461828 ADD X8, X8, W9, 0x4, SXTW
	0x0346182C ADD X0, X8, 0x138
	0x03461830 LDP X8, X2, [X0]
	0x03461834 MOV X0, X21
	0x03461838 MOV X1, X22
	0x0346183C BLR X8
	0x03461840 TBZ X0, 0x0, 0x34618D4
	0x03461844 LDR X8, [X19 + 0x50]
	0x03461848 CBZ X8, 0x3461A88
	0x0346184C LDR X1, [X8 + 0x18]
	0x03461850 LDR X3, [X19 + 0x48]
	0x03461854 LDR X4, [X8 + 0x30]
	0x03461858 MOV X0, X20
	0x0346185C MOV X2, X31
	0x03461860 MOV X5, X31
	0x03461864 BL 0x34440A8
	0x03461868 CBZ X0, 0x3461A8C
	0x0346186C ADRP X8, 0xC93000
	0x03461870 LDR X8, [X8 + 0x840]
	0x03461874 LDR X1, [X8]
	0x03461878 BL 0x269F5D0
	0x0346187C ADRP X8, 0xC93000
	0x03461880 LDR X8, [X8 + 0x838]
	0x03461884 STR X0, [X31 + 0x20]
	0x03461888 LDR X1, [X8]
	0x0346188C ADD X0, X31, 0x20
	0x03461890 BL 0x2677430
	0x03461894 TBNZ X0, 0x0, 0x3461684
	0x03461898 STR W31, [X19]
	0x0346189C LDR X8, [X31 + 0x20]
	0x034618A0 STR X8, [X19 + 0x58]
	0x034618A4 LDR X0, [X25]
	0x034618A8 LDR W8, [X0 + 0xE0]
	0x034618AC CBNZ W8, 0x34618B4
	0x034618B0 BL 0x1C16DFC
	0x034618B4 ADRP X8, 0xCCF000
	0x034618B8 LDR X8, [X8 + 0x228]
	0x034618BC ADD X0, X19, 0x8
	0x034618C0 LDR X3, [X8]
	0x034618C4 ADD X1, X31, 0x20
	0x034618C8 MOV X2, X19
	0x034618CC BL 0x1FBC4EC
	0x034618D0 B 0x3461A48
	0x034618D4 CBZ X20, 0x3461A6C
	0x034618D8 ADRP X8, 0xCCF000
	0x034618DC LDR X8, [X8 + 0x230]
	0x034618E0 LDR X21, [X20 + 0x58]
	0x034618E4 LDR X23, [X19 + 0x50]
	0x034618E8 LDR X0, [X8]
	0x034618EC BL 0x1C16F10
	0x034618F0 ADRP X8, 0xCCF000
	0x034618F4 LDR X8, [X8 + 0x258]
	0x034618F8 MOV X22, X0
	0x034618FC LDR X2, [X8]
	0x03461900 MOV X1, X23
	0x03461904 MOV X3, X31
	0x03461908 BL 0x2D27AA8
	0x0346190C LDR X8, [X19 + 0x50]
	0x03461910 CBZ X8, 0x3461A60
	0x03461914 ADRP X9, 0xCCE000
	0x03461918 LDR X23, [X19 + 0x48]
	0x0346191C LDR X9, [X9 + 0x7C8]
	0x03461920 CBNZ X23, 0x3461928
	0x03461924 LDR X23, [X20 + 0x18]
	0x03461928 LDR X20, [X8 + 0x18]
	0x0346192C LDR X1, [X8 + 0x30]
	0x03461930 LDR X2, [X9]
	0x03461934 STP X31, X31, [X31 + 0x8]
	0x03461938 ADD X0, X31, 0x8
	0x0346193C BL 0x242E368
	0x03461940 ADRP X8, 0xCCE000
	0x03461944 LDR X8, [X8 + 0x7D0]
	0x03461948 LDR X0, [X8]
	0x0346194C BL 0x1C16F10
	0x03461950 LDP X3, X4, [X31 + 0x8]
	0x03461954 MOV X24, X0
	0x03461958 MOV X1, X20
	0x0346195C MOV X2, X23
	0x03461960 MOV X5, X31
	0x03461964 BL 0x3465404
	0x03461968 CBZ X21, 0x3461A64
	0x0346196C ADRP X8, 0xCCF000
	0x03461970 LDR X8, [X8 + 0x238]
	0x03461974 LDR X3, [X8]
	0x03461978 MOV X0, X21
	0x0346197C MOV X1, X22
	0x03461980 MOV X2, X24
	0x03461984 BL 0x2243230
	0x03461988 CBZ X0, 0x3461A68
	0x0346198C ADRP X8, 0xCCF000
	0x03461990 LDR X8, [X8 + 0x250]
	0x03461994 LDR X1, [X8]
	0x03461998 BL 0x269F5D0
	0x0346199C ADRP X8, 0xCCF000
	0x034619A0 LDR X8, [X8 + 0x248]
	0x034619A4 STR X0, [X31 + 0x18]
	0x034619A8 LDR X1, [X8]
	0x034619AC ADD X0, X31, 0x18
	0x034619B0 BL 0x2677430
	0x034619B4 TBZ X0, 0x0, 0x3461A0C
	0x034619B8 ADRP X8, 0xCCF000
	0x034619BC LDR X8, [X8 + 0x240]
	0x034619C0 ADD X0, X31, 0x18
	0x034619C4 LDR X1, [X8]
	0x034619C8 BL 0x2677474
	0x034619CC MOVN W8, 0x1
	0x034619D0 STR W8, [X19]
	0x034619D4 STR X31, [X19 + 0x50]
	0x034619D8 MOV X20, X0
	0x034619DC LDR X0, [X25]
	0x034619E0 ADRP X21, 0xCCE000
	0x034619E4 ADD X19, X19, 0x8
	0x034619E8 LDR W8, [X0 + 0xE0]
	0x034619EC LDR X21, [X21 + 0x168]
	0x034619F0 CBNZ W8, 0x34619F8
	0x034619F4 BL 0x1C16DFC
	0x034619F8 LDR X2, [X21]
	0x034619FC MOV X0, X19
	0x03461A00 MOV X1, X20
	0x03461A04 BL 0x26322B0
	0x03461A08 B 0x3461A48
	0x03461A0C MOVZ W8, 0x1
	0x03461A10 STR W8, [X19]
	0x03461A14 LDR X8, [X31 + 0x18]
	0x03461A18 STR X8, [X19 + 0x60]
	0x03461A1C LDR X0, [X25]
	0x03461A20 LDR W8, [X0 + 0xE0]
	0x03461A24 CBNZ W8, 0x3461A2C
	0x03461A28 BL 0x1C16DFC
	0x03461A2C ADRP X8, 0xCCF000
	0x03461A30 LDR X8, [X8 + 0x220]
	0x03461A34 ADD X0, X19, 0x8
	0x03461A38 LDR X3, [X8]
	0x03461A3C ADD X1, X31, 0x18
	0x03461A40 MOV X2, X19
	0x03461A44 BL 0x1FBC4EC
	0x03461A48 LDP X20, X19, [X31 + 0x60]
	0x03461A4C LDP X22, X21, [X31 + 0x50]
	0x03461A50 LDP X24, X23, [X31 + 0x40]
	0x03461A54 LDP X30, X25, [X31 + 0x30]
	0x03461A58 ADD X31, X31, 0x70
	0x03461A5C RET
	0x03461A60 BL 0x1C16F20
	0x03461A64 BL 0x1C16F20
	0x03461A68 BL 0x1C16F20
	0x03461A6C BL 0x1C16F20
	0x03461A70 BL 0x1C16F20
	0x03461A74 BL 0x1C16F20
	0x03461A78 BL 0x1C16F20
	0x03461A7C BL 0x1C16F20
	0x03461A80 BL 0x1C16F20
	0x03461A84 BL 0x1C16F20
	0x03461A88 BL 0x1C16F20
	0x03461A8C BL 0x1C16F20
	0x03461A90 B 0x3461B04
	0x03461A94 B 0x3461B04
	0x03461A98 B 0x3461B04
	0x03461A9C B 0x3461B04
	0x03461AA0 B 0x3461B04
	0x03461AA4 B 0x3461B04
	0x03461AA8 B 0x3461B04
	0x03461AAC B 0x3461B04
	0x03461AB0 B 0x3461B04
	0x03461AB4 B 0x3461B04
	0x03461AB8 B 0x3461B04
	0x03461ABC B 0x3461B04
	0x03461AC0 B 0x3461B04
	0x03461AC4 B 0x3461B04
	0x03461AC8 B 0x3461B04
	0x03461ACC B 0x3461B04
	0x03461AD0 B 0x3461B04
	0x03461AD4 B 0x3461B04
	0x03461AD8 B 0x3461B04
	0x03461ADC B 0x3461B04
	0x03461AE0 B 0x3461B04
	0x03461AE4 B 0x3461B04
	0x03461AE8 B 0x3461B04
	0x03461AEC B 0x3461B04
	0x03461AF0 B 0x3461B04
	0x03461AF4 B 0x3461B04
	0x03461AF8 B 0x3461B04
	0x03461AFC B 0x3461B04
	0x03461B00 B 0x3461B04
	0x03461B04 MOV X20, X0
	0x03461B08 CMP W1, 0x1
	0x03461B0C B.NE 0x3461BAC
	0x03461B10 MOV X0, X20
	0x03461B14 BL 0x3EB1AD0
	0x03461B18 MOV X20, X0
	0x03461B1C ADRP X0, 0xC92000
	0x03461B20 LDR X0, [X0 + 0x7D0]
	0x03461B24 BL 0x1C16D08
	0x03461B28 LDR X8, [X20]
	0x03461B2C LDR X1, [X8]
	0x03461B30 BL 0x1C17270
	0x03461B34 TBZ X0, 0x0, 0x3461B84
	0x03461B38 LDR X20, [X20]
	0x03461B3C BL 0x3EB1AE0
	0x03461B40 MOVN W8, 0x1
	0x03461B44 STR X31, [X19 + 0x50]
	0x03461B48 STR W8, [X19], #0x8
	0x03461B4C ADRP X0, 0xCCD000
	0x03461B50 LDR X0, [X0 + 0x568]
	0x03461B54 BL 0x1C16D08
	0x03461B58 LDR W8, [X0 + 0xE0]
	0x03461B5C CBNZ W8, 0x3461B64
	0x03461B60 BL 0x1C16DFC
	0x03461B64 ADRP X0, 0xCCE000
	0x03461B68 LDR X0, [X0 + 0x188]
	0x03461B6C BL 0x1C16D08
	0x03461B70 MOV X2, X0
	0x03461B74 MOV X0, X19
	0x03461B78 MOV X1, X20
	0x03461B7C BL 0x26324C8
	0x03461B80 B 0x3461A48
	0x03461B84 MOVZ W0, 0x8
	0x03461B88 BL 0x3EB1AF0
	0x03461B8C LDR X8, [X20]
	0x03461B90 STR X8, [X0]
	0x03461B94 ADRP X1, 0xA53000
	0x03461B98 ADD X1, X1, 0xE58
	0x03461B9C MOV X2, X31
	0x03461BA0 BL 0x3EB1B00
	0x03461BA4 MOV X20, X0
	0x03461BA8 BL 0x3EB1AE0
	0x03461BAC MOV X0, X20
	0x03461BB0 BL 0x1D2C690
	0x03461BB4 BL 0x1990590
	0x03461BB8 STR X30, [X31 - 0x30]!
	0x03461BBC STP X22, X21, [X31 + 0x10]
	0x03461BC0 STP X20, X19, [X31 + 0x20]
	0x03461BC4 ADRP X22, 0xF7C000
	0x03461BC8 ADRP X21, 0xCCD000
	0x03461BCC LDRB W8, [X22 + 0x7B4]
	0x03461BD0 LDR X21, [X21 + 0x568]
	0x03461BD4 MOV X19, X1
	0x03461BD8 MOV X20, X0
	0x03461BDC TBNZ X8, 0x0, 0x3461C00
	0x03461BE0 ADRP X0, 0xCCE000
	0x03461BE4 LDR X0, [X0 + 0x190]
	0x03461BE8 BL 0x1C16CF4
	0x03461BEC ADRP X0, 0xCCD000
	0x03461BF0 LDR X0, [X0 + 0x568]
	0x03461BF4 BL 0x1C16CF4
	0x03461BF8 MOVZ W8, 0x1
	0x03461BFC STRB W8, [X22 + 0x7B4]
	0x03461C00 LDR X0, [X21]
	0x03461C04 ADRP X21, 0xCCE000
	0x03461C08 LDR W8, [X0 + 0xE0]
	0x03461C0C LDR X21, [X21 + 0x190]
	0x03461C10 CBNZ W8, 0x3461C18
	0x03461C14 BL 0x1C16DFC
	0x03461C18 LDR X2, [X21]
	0x03461C1C ADD X0, X20, 0x8
	0x03461C20 MOV X1, X19
	0x03461C24 LDP X20, X19, [X31 + 0x20]
	0x03461C28 LDP X22, X21, [X31 + 0x10]
	0x03461C2C LDR X30, [X31], #0x30
	0x03461C30 B 0x2632228
	0x03461C34 SUB X31, X31, 0x90
	0x03461C38 STP X29, X30, [X31 + 0x30]
	0x03461C3C STP X28, X27, [X31 + 0x40]
	0x03461C40 STP X26, X25, [X31 + 0x50]
	0x03461C44 STP X24, X23, [X31 + 0x60]
	0x03461C48 STP X22, X21, [X31 + 0x70]
	0x03461C4C STP X20, X19, [X31 + 0x80]
	0x03461C50 ADRP X20, 0xF7C000
	0x03461C54 LDRB W8, [X20 + 0x7B5]
	0x03461C58 MOV X19, X0
	0x03461C5C TBNZ X8, 0x0, 0x3461DA0
	0x03461C60 ADRP X0, 0xCCF000
	0x03461C64 LDR X0, [X0 + 0xE0]
	0x03461C68 BL 0x1C16CF4
	0x03461C6C ADRP X0, 0xCCF000
	0x03461C70 LDR X0, [X0 + 0x268]
	0x03461C74 BL 0x1C16CF4
	0x03461C78 ADRP X0, 0xCCF000
	0x03461C7C LDR X0, [X0 + 0x270]
	0x03461C80 BL 0x1C16CF4
	0x03461C84 ADRP X0, 0xCCE000
	0x03461C88 LDR X0, [X0 + 0x1A0]
	0x03461C8C BL 0x1C16CF4
	0x03461C90 ADRP X0, 0xCCD000
	0x03461C94 LDR X0, [X0 + 0x730]
	0x03461C98 BL 0x1C16CF4
	0x03461C9C ADRP X0, 0xC94000
	0x03461CA0 LDR X0, [X0 + 0xA10]
	0x03461CA4 BL 0x1C16CF4
	0x03461CA8 ADRP X0, 0xC93000
	0x03461CAC LDR X0, [X0 + 0x9F0]
	0x03461CB0 BL 0x1C16CF4
	0x03461CB4 ADRP X0, 0xCCF000
	0x03461CB8 LDR X0, [X0 + 0x278]
	0x03461CBC BL 0x1C16CF4
	0x03461CC0 ADRP X0, 0xCCF000
	0x03461CC4 LDR X0, [X0 + 0x108]
	0x03461CC8 BL 0x1C16CF4
	0x03461CCC ADRP X0, 0xCCF000
	0x03461CD0 LDR X0, [X0 + 0x280]
	0x03461CD4 BL 0x1C16CF4
	0x03461CD8 ADRP X0, 0xC92000
	0x03461CDC LDR X0, [X0 + 0xE00]
	0x03461CE0 BL 0x1C16CF4
	0x03461CE4 ADRP X0, 0xCCF000
	0x03461CE8 LDR X0, [X0 + 0x110]
	0x03461CEC BL 0x1C16CF4
	0x03461CF0 ADRP X0, 0xCCF000
	0x03461CF4 LDR X0, [X0 + 0x118]
	0x03461CF8 BL 0x1C16CF4
	0x03461CFC ADRP X0, 0xC92000
	0x03461D00 LDR X0, [X0 + 0xE18]
	0x03461D04 BL 0x1C16CF4
	0x03461D08 ADRP X0, 0xC93000
	0x03461D0C LDR X0, [X0 + 0x818]
	0x03461D10 BL 0x1C16CF4
	0x03461D14 ADRP X0, 0xCCE000
	0x03461D18 LDR X0, [X0 + 0x7C8]
	0x03461D1C BL 0x1C16CF4
	0x03461D20 ADRP X0, 0xCCE000
	0x03461D24 LDR X0, [X0 + 0x7D0]
	0x03461D28 BL 0x1C16CF4
	0x03461D2C ADRP X0, 0xCCF000
	0x03461D30 LDR X0, [X0 + 0x288]
	0x03461D34 BL 0x1C16CF4
	0x03461D38 ADRP X0, 0xCCF000
	0x03461D3C LDR X0, [X0 + 0x290]
	0x03461D40 BL 0x1C16CF4
	0x03461D44 ADRP X0, 0xC93000
	0x03461D48 LDR X0, [X0 + 0x830]
	0x03461D4C BL 0x1C16CF4
	0x03461D50 ADRP X0, 0xC93000
	0x03461D54 LDR X0, [X0 + 0x838]
	0x03461D58 BL 0x1C16CF4
	0x03461D5C ADRP X0, 0xCCF000
	0x03461D60 LDR X0, [X0 + 0x298]
	0x03461D64 BL 0x1C16CF4
	0x03461D68 ADRP X0, 0xC93000
	0x03461D6C LDR X0, [X0 + 0x840]
	0x03461D70 BL 0x1C16CF4
	0x03461D74 ADRP X0, 0xCCF000
	0x03461D78 LDR X0, [X0 + 0x2A0]
	0x03461D7C BL 0x1C16CF4
	0x03461D80 ADRP X0, 0xCCF000
	0x03461D84 LDR X0, [X0 + 0x2A8]
	0x03461D88 BL 0x1C16CF4
	0x03461D8C ADRP X0, 0xCCF000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF7D000
	011 Move W8, [X20+1967]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCD0000
	018 Move X0, [X0+440]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD0000
	021 Move X0, [X0+448]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCF000
	024 Move X0, [X0+192]
	025 Call 0x1C17CF4
	026 Move X0, 0xCCE000
	027 Move X0, [X0+1608]
	028 Call 0x1C17CF4
	029 Move X0, 0xC95000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC94000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD0000
	036 Move X0, [X0+456]
	037 Call 0x1C17CF4
	038 Move X0, 0xC94000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCF000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCF000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCD0000
	048 Move X0, [X0+464]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD0000
	051 Move X0, [X0+472]
	052 Call 0x1C17CF4
	053 Move X0, 0xC94000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC94000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCD0000
	060 Move X0, [X0+480]
	061 Call 0x1C17CF4
	062 Move X0, 0xC94000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCD0000
	066 Move X0, [X0+488]
	067 Call 0x1C17CF4
	068 Move X0, 0xCD0000
	069 Move X0, [X0+496]
	070 Call 0x1C17CF4
	071 Move X0, 0xCD0000
	072 Move X0, [X0+504]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1967], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCCE000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1608]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+96]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+96], X31
	092 Move [X19], W9
	093 Move X8, [X19+88]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+88], X31
	099 Move [X19], W9
	100 Move X8, 0xC94000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCD0000
	106 Move X8, [X8+504]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass89_0..ctor, X0
	112 Move [X19+80], X21
	113 Compare X21, 0
	114 JumpIfEqual {385}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move W8, [X19+48]
	120 Move [X21+32], W8
	121 Move X8, [X19+56]
	122 Move [X21+40], X8
	123 Move X8, [X19+64]
	124 Move [X21+48], X8
	125 Compare X20, 0
	126 JumpIfEqual {386}
	127 Move W8, [X20+16]
	128 Compare W8, 0
	129 JumpIfEqual {267}
	130 Move X8, [X19+80]
	131 Compare X8, 0
	132 JumpIfEqual {387}
	133 Move X21, [X8+24]
	134 Compare X21, 0
	135 JumpIfEqual {388}
	136 Move X23, 0xC94000
	137 Move X8, [X21]
	138 Move X23, [X23+2072]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X23]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 7
	150 Move X0, X21
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 7
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {265}
	166 Move X8, [X19+80]
	167 Compare X8, 0
	168 JumpIfEqual {389}
	169 Move X9, 0xC94000
	170 Move X9, [X9+2544]
	171 Move X21, [X8+24]
	172 Move X0, [X9]
	173 Move W9, [X0+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X31
	178 Call DateTime.get_UtcNow
	179 Move X22, 0xC95000
	180 Move X22, [X22+2576]
	181 Move X8, X0
	182 Move [X31+40], X8
	183 Move X0, [X22]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X22]
	189 Move X8, [X0+184]
	190 Move X1, [X8]
	191 Add X0, X31, 40
	192 Move X2, X31
	193 Call DateTime.Add, X0, X1
	194 Compare X21, 0
	195 JumpIfEqual {390}
	196 Move X8, [X21]
	197 Move X1, [X23]
	198 Move X22, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move W2, 11
	209 Move X0, X21
	210 Call 0x1C5D788
	211 Move W9, [X10]
	212 Add W9, W9, 11
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X21
	218 Move X1, X22
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {265}
	224 Move X8, [X19+80]
	225 Compare X8, 0
	226 JumpIfEqual {391}
	227 Move X1, [X8+24]
	228 Move X3, [X19+72]
	229 Move X4, [X8+48]
	230 Move X0, X20
	231 Move X2, X31
	232 Move X5, X31
	233 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	234 Compare X0, 0
	235 JumpIfEqual {392}
	236 Move X8, 0xC94000
	237 Move X8, [X8+2112]
	238 Move X1, [X8]
	239 Call Task`1<Object>.GetAwaiter, X0
	240 Move X8, 0xC94000
	241 Move X8, [X8+2104]
	242 Move [X31+32], X0
	243 Move X1, [X8]
	244 Add X0, X31, 32
	245 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {100}
	250 Move [X19], W31
	251 Move X8, [X31+32]
	252 Move [X19+88], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xCD0000
	259 Move X8, [X8+448]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 32
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Compare X20, 0
	266 JumpIfEqual {384}
	267 Move X8, 0xCD0000
	268 Move X8, [X8+456]
	269 Move X21, [X20+88]
	270 Move X23, [X19+80]
	271 Move X0, [X8]
	272 Call 0x1C17F10
	273 Move X8, 0xCD0000
	274 Move X8, [X8+496]
	275 Move X22, X0
	276 Move X2, [X8]
	277 Move X1, X23
	278 Move X3, X31
	279 Call Func`1<Object>..ctor, X0, X1, X2
	280 Move X8, [X19+80]
	281 Compare X8, 0
	282 JumpIfEqual {381}
	283 Move X9, 0xCCF000
	284 Move X23, [X19+72]
	285 Move X9, [X9+1992]
	286 Compare X23, 0
	287 JumpIfNotEqual {289}
	288 Move X23, [X20+24]
	289 Move X20, [X8+24]
	290 Move X1, [X8+48]
	291 Move X2, [X9]
	292 Move [X31+8], X31
	293 Move [X31+16], X31
	294 Add X0, X31, 8
	295 Call Nullable`1<CancellationToken>..ctor, X0, X1
	296 Move X8, 0xCCF000
	297 Move X8, [X8+2000]
	298 Move X0, [X8]
	299 Call 0x1C17F10
	300 Move X3, [X31+8]
	301 Move X4, [X31+16]
	302 Move X24, X0
	303 Move X1, X20
	304 Move X2, X23
	305 Move X5, X31
	306 Call RetryHistory..ctor, X0, X1, X2, X3
	307 Compare X21, 0
	308 JumpIfEqual {382}
	309 Move X8, 0xCD0000
	310 Move X8, [X8+464]
	311 Move X3, [X8]
	312 Move X0, X21
	313 Move X1, X22
	314 Move X2, X24
	315 Call 0x2244230, X0, X1, X2
	316 Compare X0, 0
	317 JumpIfEqual {383}
	318 Move X8, 0xCD0000
	319 Move X8, [X8+488]
	320 Move X1, [X8]
	321 Call Task`1<Object>.GetAwaiter, X0
	322 Move X8, 0xCD0000
	323 Move X8, [X8+480]
	324 Move [X31+24], X0
	325 Move X1, [X8]
	326 Add X0, X31, 24
	327 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {355}
	332 Move X8, 0xCD0000
	333 Move X8, [X8+472]
	334 Add X0, X31, 24
	335 Move X1, [X8]
	336 Call TaskAwaiter`1<Object>.GetResult, X0
	337 Move TEMP, 1
	338 Not TEMP
	339 Move W8, TEMP
	340 Move [X19], W8
	341 Move [X19+80], X31
	342 Move X20, X0
	343 Move X0, [X25]
	344 Move X21, 0xCCF000
	345 Add X19, X19, 8
	346 Move W8, [X0+224]
	347 Move X21, [X21+192]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X2, [X21]
	352 Move X0, X19
	353 Move X1, X20
	354 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	355 Move W8, 1
	356 Move [X19], W8
	357 Move X8, [X31+24]
	358 Move [X19+96], X8
	359 Move X0, [X25]
	360 Move W8, [X0+224]
	361 Compare W8, 0
	362 JumpIfNotEqual {364}
	363 Call 0x1C17DFC
	364 Move X8, 0xCD0000
	365 Move X8, [X8+440]
	366 Add X0, X19, 8
	367 Move X3, [X8]
	368 Add X1, X31, 24
	369 Move X2, X19
	370 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	371 Move X20, [X31+96]
	372 Move X19, [X31+104]
	373 Move X22, [X31+80]
	374 Move X21, [X31+88]
	375 Move X24, [X31+64]
	376 Move X23, [X31+72]
	377 Move X30, [X31+48]
	378 Move X25, [X31+56]
	379 Add X31, X31, 112
	380 Return 
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Move X20, X0
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move X0, X20
	396 Call 0x3EB2AD0
	397 Move X20, X0
	398 Move X0, 0xC93000
	399 Move X0, [X0+2000]
	400 Call 0x1C17D08
	401 Move X8, [X20]
	402 Move X1, [X8]
	403 Call 0x1C18270
	404 Move TEMP, X0
	405 And TEMP, TEMP, 1
	406 Compare TEMP, 1
	407 JumpIfNotEqual {429}
	408 Move X20, [X20]
	409 Call 0x3EB2AE0
	410 Move TEMP, 1
	411 Not TEMP
	412 Move W8, TEMP
	413 Move [X19+80], X31
	414 Move [X19+8], W8
	415 Move X0, 0xCCE000
	416 Move X0, [X0+1608]
	417 Call 0x1C17D08
	418 Move W8, [X0+224]
	419 Compare W8, 0
	420 JumpIfNotEqual {422}
	421 Call 0x1C17DFC
	422 Move X0, 0xCCF000
	423 Move X0, [X0+216]
	424 Call 0x1C17D08
	425 Move X2, X0
	426 Move X0, X19
	427 Move X1, X20
	428 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	429 Move W0, 8
	430 Call 0x3EB2AF0
	431 Move X8, [X20]
	432 Move [X0], X8
	433 Move X1, 0xA54000
	434 Add X1, X1, 3672
	435 Move X2, X31
	436 Call 0x3EB2B00
	437 Move X20, X0
	438 Call 0x3EB2AE0
	439 Move X0, X20
	440 Call 0x1D2D690
	441 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03461D90 LDR X0, [X0 + 0x2B0]
	0x03461D94 BL 0x1C16CF4
	0x03461D98 MOVZ W8, 0x1
	0x03461D9C STRB W8, [X20 + 0x7B5]
	0x03461DA0 STP X31, X31, [X31 + 0x20]
	0x03461DA4 STR X31, [X31 + 0x18]
	0x03461DA8 LDR W25, [X19]
	0x03461DAC LDR X20, [X19 + 0x20]
	0x03461DB0 CBZ W25, 0x3461DD4
	0x03461DB4 CMP W25, 0x1
	0x03461DB8 B.NE 0x3461E00
	0x03461DBC LDR X8, [X19 + 0x80]
	0x03461DC0 MOVN W25, 0x0
	0x03461DC4 STR X8, [X31 + 0x18]
	0x03461DC8 STR X31, [X19 + 0x80]
	0x03461DCC STR W25, [X19]
	0x03461DD0 B 0x346213C
	0x03461DD4 LDR X8, [X19 + 0x78]
	0x03461DD8 MOVN W25, 0x0
	0x03461DDC STR X8, [X31 + 0x20]
	0x03461DE0 STR X31, [X19 + 0x78]
	0x03461DE4 STR W25, [X19]
	0x03461DE8 ADRP X8, 0xC93000
	0x03461DEC LDR X8, [X8 + 0x830]
	0x03461DF0 ADD X0, X31, 0x20
	0x03461DF4 LDR X1, [X8]
	0x03461DF8 BL 0x2677474
	0x03461DFC B 0x3462058
	0x03461E00 ADRP X8, 0xCCF000
	0x03461E04 LDR X8, [X8 + 0x2B0]
	0x03461E08 LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF7D000
	007 Move X21, 0xCCE000
	008 Move W8, [X22+1968]
	009 Move X21, [X21+1608]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCCF000
	017 Move X0, [X0+224]
	018 Call 0x1C17CF4
	019 Move X0, 0xCCE000
	020 Move X0, [X0+1608]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1968], W8
	024 Move X0, [X21]
	025 Move X21, 0xCCF000
	026 Move W8, [X0+224]
	027 Move X21, [X21+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

