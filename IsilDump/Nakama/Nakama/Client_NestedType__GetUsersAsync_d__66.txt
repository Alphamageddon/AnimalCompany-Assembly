Type: Nakama.Client/<GetUsersAsync>d__66

Method: System.Void MoveNext()

Disassembly:
	0x034567C8 BL 0x1C16DFC
	0x034567CC LDR X0, [X22]
	0x034567D0 LDR X8, [X0 + 0xB8]
	0x034567D4 LDR X1, [X8]
	0x034567D8 ADD X0, X31, 0x28
	0x034567DC MOV X2, X31
	0x034567E0 BL 0x335FC68
	0x034567E4 CBZ X21, 0x3456A64
	0x034567E8 LDR X8, [X21]
	0x034567EC LDR X1, [X23]
	0x034567F0 MOV X22, X0
	0x034567F4 LDRH W9, [X8 + 0x12E]
	0x034567F8 CBZ X9, 0x345681C
	0x034567FC LDR X10, [X8 + 0xB0]
	0x03456800 ADD X10, X10, 0x8
	0x03456804 LDUR X11, [X10 - 0x8]
	0x03456808 CMP X11, X1
	0x0345680C B.EQ 0x345682C
	0x03456810 SUBS X9, X9, 0x1
	0x03456814 ADD X10, X10, 0x10
	0x03456818 B.NE 0x3456804
	0x0345681C MOVZ W2, 0xB
	0x03456820 MOV X0, X21
	0x03456824 BL 0x1C5C788
	0x03456828 B 0x345683C
	0x0345682C LDR W9, [X10]
	0x03456830 ADD W9, W9, 0xB
	0x03456834 ADD X8, X8, W9, 0x4, SXTW
	0x03456838 ADD X0, X8, 0x138
	0x0345683C LDP X8, X2, [X0]
	0x03456840 MOV X0, X21
	0x03456844 MOV X1, X22
	0x03456848 BLR X8
	0x0345684C TBZ X0, 0x0, 0x34568E0
	0x03456850 LDR X8, [X19 + 0x50]
	0x03456854 CBZ X8, 0x3456A68
	0x03456858 LDR X1, [X8 + 0x18]
	0x0345685C LDR X3, [X19 + 0x48]
	0x03456860 LDR X4, [X8 + 0x30]
	0x03456864 MOV X0, X20
	0x03456868 MOV X2, X31
	0x0345686C MOV X5, X31
	0x03456870 BL 0x34440A8
	0x03456874 CBZ X0, 0x3456A6C
	0x03456878 ADRP X8, 0xC9E000
	0x0345687C LDR X8, [X8 + 0x840]
	0x03456880 LDR X1, [X8]
	0x03456884 BL 0x269F5D0
	0x03456888 ADRP X8, 0xC9E000
	0x0345688C LDR X8, [X8 + 0x838]
	0x03456890 STR X0, [X31 + 0x20]
	0x03456894 LDR X1, [X8]
	0x03456898 ADD X0, X31, 0x20
	0x0345689C BL 0x2677430
	0x034568A0 TBNZ X0, 0x0, 0x3456688
	0x034568A4 STR W31, [X19]
	0x034568A8 LDR X8, [X31 + 0x20]
	0x034568AC STR X8, [X19 + 0x58]
	0x034568B0 LDR X0, [X25]
	0x034568B4 LDR W8, [X0 + 0xE0]
	0x034568B8 CBNZ W8, 0x34568C0
	0x034568BC BL 0x1C16DFC
	0x034568C0 ADRP X8, 0xCD9000
	0x034568C4 LDR X8, [X8 + 0xDF8]
	0x034568C8 ADD X0, X19, 0x8
	0x034568CC LDR X3, [X8]
	0x034568D0 ADD X1, X31, 0x20
	0x034568D4 MOV X2, X19
	0x034568D8 BL 0x21885D4
	0x034568DC B 0x3456A24
	0x034568E0 CBZ X20, 0x3456A48
	0x034568E4 ADRP X8, 0xCA5000
	0x034568E8 LDR X8, [X8 + 0x818]
	0x034568EC LDR X21, [X20 + 0x58]
	0x034568F0 LDR X23, [X19 + 0x50]
	0x034568F4 LDR X0, [X8]
	0x034568F8 BL 0x1C16F10
	0x034568FC ADRP X8, 0xCD9000
	0x03456900 LDR X8, [X8 + 0xE08]
	0x03456904 MOV X22, X0
	0x03456908 LDR X2, [X8]
	0x0345690C MOV X1, X23
	0x03456910 MOV X3, X31
	0x03456914 BL 0x2D27AA8
	0x03456918 LDR X8, [X19 + 0x50]
	0x0345691C CBZ X8, 0x3456A3C
	0x03456920 ADRP X9, 0xCD9000
	0x03456924 LDR X23, [X19 + 0x48]
	0x03456928 LDR X9, [X9 + 0x7C8]
	0x0345692C CBNZ X23, 0x3456934
	0x03456930 LDR X23, [X20 + 0x18]
	0x03456934 LDR X20, [X8 + 0x18]
	0x03456938 LDR X1, [X8 + 0x30]
	0x0345693C LDR X2, [X9]
	0x03456940 STP X31, X31, [X31 + 0x8]
	0x03456944 ADD X0, X31, 0x8
	0x03456948 BL 0x242E368
	0x0345694C ADRP X8, 0xCD9000
	0x03456950 LDR X8, [X8 + 0x7D0]
	0x03456954 LDR X0, [X8]
	0x03456958 BL 0x1C16F10
	0x0345695C LDP X3, X4, [X31 + 0x8]
	0x03456960 MOV X24, X0
	0x03456964 MOV X1, X20
	0x03456968 MOV X2, X23
	0x0345696C MOV X5, X31
	0x03456970 BL 0x3465404
	0x03456974 CBZ X21, 0x3456A40
	0x03456978 MOV X0, X21
	0x0345697C MOV X1, X22
	0x03456980 MOV X2, X24
	0x03456984 MOV X3, X31
	0x03456988 BL 0x3465B68
	0x0345698C CBZ X0, 0x3456A44
	0x03456990 MOV X1, X31
	0x03456994 BL 0x33ED394
	0x03456998 STR X0, [X31 + 0x18]
	0x0345699C ADD X0, X31, 0x18
	0x034569A0 MOV X1, X31
	0x034569A4 BL 0x32C3A80
	0x034569A8 TBZ X0, 0x0, 0x34569E8
	0x034569AC ADD X0, X31, 0x18
	0x034569B0 MOV X1, X31
	0x034569B4 BL 0x32C3B4C
	0x034569B8 MOVN W8, 0x1
	0x034569BC STR W8, [X19]
	0x034569C0 STR X31, [X19 + 0x50]
	0x034569C4 LDR X0, [X25]
	0x034569C8 ADD X19, X19, 0x8
	0x034569CC LDR W8, [X0 + 0xE0]
	0x034569D0 CBNZ W8, 0x34569D8
	0x034569D4 BL 0x1C16DFC
	0x034569D8 MOV X0, X19
	0x034569DC MOV X1, X31
	0x034569E0 BL 0x32C4864
	0x034569E4 B 0x3456A24
	0x034569E8 MOVZ W8, 0x1
	0x034569EC STR W8, [X19]
	0x034569F0 LDR X8, [X31 + 0x18]
	0x034569F4 STR X8, [X19 + 0x60]
	0x034569F8 LDR X0, [X25]
	0x034569FC LDR W8, [X0 + 0xE0]
	0x03456A00 CBNZ W8, 0x3456A08
	0x03456A04 BL 0x1C16DFC
	0x03456A08 ADRP X8, 0xCD9000
	0x03456A0C LDR X8, [X8 + 0xE00]
	0x03456A10 ADD X0, X19, 0x8
	0x03456A14 LDR X3, [X8]
	0x03456A18 ADD X1, X31, 0x18
	0x03456A1C MOV X2, X19
	0x03456A20 BL 0x2189C98
	0x03456A24 LDP X20, X19, [X31 + 0x60]
	0x03456A28 LDP X22, X21, [X31 + 0x50]
	0x03456A2C LDP X24, X23, [X31 + 0x40]
	0x03456A30 LDP X30, X25, [X31 + 0x30]
	0x03456A34 ADD X31, X31, 0x70
	0x03456A38 RET
	0x03456A3C BL 0x1C16F20
	0x03456A40 BL 0x1C16F20
	0x03456A44 BL 0x1C16F20
	0x03456A48 BL 0x1C16F20
	0x03456A4C BL 0x1C16F20
	0x03456A50 BL 0x1C16F20
	0x03456A54 BL 0x1C16F20
	0x03456A58 BL 0x1C16F20
	0x03456A5C BL 0x1C16F20
	0x03456A60 BL 0x1C16F20
	0x03456A64 BL 0x1C16F20
	0x03456A68 BL 0x1C16F20
	0x03456A6C BL 0x1C16F20
	0x03456A70 B 0x3456AE8
	0x03456A74 B 0x3456AE8
	0x03456A78 B 0x3456AE8
	0x03456A7C B 0x3456AE8
	0x03456A80 B 0x3456AE8
	0x03456A84 B 0x3456AE8
	0x03456A88 B 0x3456AE8
	0x03456A8C B 0x3456AE8
	0x03456A90 B 0x3456AE8
	0x03456A94 B 0x3456AE8
	0x03456A98 B 0x3456AE8
	0x03456A9C B 0x3456AE8
	0x03456AA0 B 0x3456AE8
	0x03456AA4 B 0x3456AE8
	0x03456AA8 B 0x3456AE8
	0x03456AAC B 0x3456AE8
	0x03456AB0 B 0x3456AE8
	0x03456AB4 B 0x3456AE8
	0x03456AB8 B 0x3456AE8
	0x03456ABC B 0x3456AE8
	0x03456AC0 B 0x3456AE8
	0x03456AC4 B 0x3456AE8
	0x03456AC8 B 0x3456AE8
	0x03456ACC B 0x3456AE8
	0x03456AD0 B 0x3456AE8
	0x03456AD4 B 0x3456AE8
	0x03456AD8 B 0x3456AE8
	0x03456ADC B 0x3456AE8
	0x03456AE0 B 0x3456AE8
	0x03456AE4 B 0x3456AE8
	0x03456AE8 MOV X20, X0
	0x03456AEC CMP W1, 0x1
	0x03456AF0 B.NE 0x3456B84
	0x03456AF4 MOV X0, X20
	0x03456AF8 BL 0x3EB1AD0
	0x03456AFC MOV X20, X0
	0x03456B00 ADRP X0, 0xC9D000
	0x03456B04 LDR X0, [X0 + 0x7D0]
	0x03456B08 BL 0x1C16D08
	0x03456B0C LDR X8, [X20]
	0x03456B10 LDR X1, [X8]
	0x03456B14 BL 0x1C17270
	0x03456B18 TBZ X0, 0x0, 0x3456B5C
	0x03456B1C LDR X20, [X20]
	0x03456B20 BL 0x3EB1AE0
	0x03456B24 MOVN W8, 0x1
	0x03456B28 STR X31, [X19 + 0x50]
	0x03456B2C STR W8, [X19], #0x8
	0x03456B30 ADRP X0, 0xCA0000
	0x03456B34 LDR X0, [X0 + 0x280]
	0x03456B38 BL 0x1C16D08
	0x03456B3C LDR W8, [X0 + 0xE0]
	0x03456B40 CBNZ W8, 0x3456B48
	0x03456B44 BL 0x1C16DFC
	0x03456B48 MOV X0, X19
	0x03456B4C MOV X1, X20
	0x03456B50 MOV X2, X31
	0x03456B54 BL 0x32C4908
	0x03456B58 B 0x3456A24
	0x03456B5C MOVZ W0, 0x8
	0x03456B60 BL 0x3EB1AF0
	0x03456B64 LDR X8, [X20]
	0x03456B68 STR X8, [X0]
	0x03456B6C ADRP X1, 0xA5E000
	0x03456B70 ADD X1, X1, 0xE58
	0x03456B74 MOV X2, X31
	0x03456B78 BL 0x3EB1B00
	0x03456B7C MOV X20, X0
	0x03456B80 BL 0x3EB1AE0
	0x03456B84 MOV X0, X20
	0x03456B88 BL 0x1D2C690
	0x03456B8C BL 0x1990590
	0x03456B90 STR X30, [X31 - 0x30]!
	0x03456B94 STP X22, X21, [X31 + 0x10]
	0x03456B98 STP X20, X19, [X31 + 0x20]
	0x03456B9C ADRP X21, 0xF87000
	0x03456BA0 ADRP X22, 0xCA0000
	0x03456BA4 LDRB W8, [X21 + 0x788]
	0x03456BA8 LDR X22, [X22 + 0x280]
	0x03456BAC MOV X19, X1
	0x03456BB0 MOV X20, X0
	0x03456BB4 TBNZ X8, 0x0, 0x3456BCC
	0x03456BB8 ADRP X0, 0xCA0000
	0x03456BBC LDR X0, [X0 + 0x280]
	0x03456BC0 BL 0x1C16CF4
	0x03456BC4 MOVZ W8, 0x1
	0x03456BC8 STRB W8, [X21 + 0x788]
	0x03456BCC LDR X0, [X22]
	0x03456BD0 LDR W8, [X0 + 0xE0]
	0x03456BD4 CBNZ W8, 0x3456BDC
	0x03456BD8 BL 0x1C16DFC
	0x03456BDC ADD X0, X20, 0x8
	0x03456BE0 MOV X1, X19
	0x03456BE4 LDP X20, X19, [X31 + 0x20]
	0x03456BE8 LDP X22, X21, [X31 + 0x10]
	0x03456BEC MOV X2, X31
	0x03456BF0 LDR X30, [X31], #0x30
	0x03456BF4 B 0x32C477C
	0x03456BF8 SUB X31, X31, 0x70
	0x03456BFC STP X30, X25, [X31 + 0x30]
	0x03456C00 STP X24, X23, [X31 + 0x40]
	0x03456C04 STP X22, X21, [X31 + 0x50]
	0x03456C08 STP X20, X19, [X31 + 0x60]
	0x03456C0C ADRP X20, 0xF87000
	0x03456C10 LDRB W8, [X20 + 0x789]
	0x03456C14 MOV X19, X0
	0x03456C18 TBNZ X8, 0x0, 0x3456CCC
	0x03456C1C ADRP X0, 0xCD9000
	0x03456C20 LDR X0, [X0 + 0xE18]
	0x03456C24 BL 0x1C16CF4
	0x03456C28 ADRP X0, 0xCD9000
	0x03456C2C LDR X0, [X0 + 0xE20]
	0x03456C30 BL 0x1C16CF4
	0x03456C34 ADRP X0, 0xCA0000
	0x03456C38 LDR X0, [X0 + 0x280]
	0x03456C3C BL 0x1C16CF4
	0x03456C40 ADRP X0, 0xC9F000
	0x03456C44 LDR X0, [X0 + 0xA10]
	0x03456C48 BL 0x1C16CF4
	0x03456C4C ADRP X0, 0xC9E000
	0x03456C50 LDR X0, [X0 + 0x9F0]
	0x03456C54 BL 0x1C16CF4
	0x03456C58 ADRP X0, 0xCA5000
	0x03456C5C LDR X0, [X0 + 0x818]
	0x03456C60 BL 0x1C16CF4
	0x03456C64 ADRP X0, 0xC9E000
	0x03456C68 LDR X0, [X0 + 0x818]
	0x03456C6C BL 0x1C16CF4
	0x03456C70 ADRP X0, 0xCD9000
	0x03456C74 LDR X0, [X0 + 0x7C8]
	0x03456C78 BL 0x1C16CF4
	0x03456C7C ADRP X0, 0xCD9000
	0x03456C80 LDR X0, [X0 + 0x7D0]
	0x03456C84 BL 0x1C16CF4
	0x03456C88 ADRP X0, 0xC9E000
	0x03456C8C LDR X0, [X0 + 0x830]
	0x03456C90 BL 0x1C16CF4
	0x03456C94 ADRP X0, 0xC9E000
	0x03456C98 LDR X0, [X0 + 0x838]
	0x03456C9C BL 0x1C16CF4
	0x03456CA0 ADRP X0, 0xC9E000
	0x03456CA4 LDR X0, [X0 + 0x840]
	0x03456CA8 BL 0x1C16CF4
	0x03456CAC ADRP X0, 0xCD9000
	0x03456CB0 LDR X0, [X0 + 0xE28]
	0x03456CB4 BL 0x1C16CF4
	0x03456CB8 ADRP X0, 0xCD9000
	0x03456CBC LDR X0, [X0 + 0xE30]
	0x03456CC0 BL 0x1C16CF4
	0x03456CC4 MOVZ W8, 0x1
	0x03456CC8 STRB W8, [X20 + 0x789]
	0x03456CCC STP X31, X31, [X31 + 0x20]
	0x03456CD0 STR X31, [X31 + 0x18]
	0x03456CD4 ADRP X25, 0xCA0000
	0x03456CD8 LDR W8, [X19]
	0x03456CDC LDR X20, [X19 + 0x20]
	0x03456CE0 LDR X25, [X25 + 0x280]
	0x03456CE4 CBZ W8, 0x3456D08
	0x03456CE8 CMP W8, 0x1
	0x03456CEC B.NE 0x3456D34
	0x03456CF0 LDR X8, [X19 + 0x58]
	0x03456CF4 MOVN W9, 0x0
	0x03456CF8 STR X8, [X31 + 0x18]
	0x03456CFC STR X31, [X19 + 0x58]
	0x03456D00 STR W9, [X19]
	0x03456D04 B 0x3457030
	0x03456D08 LDR X8, [X19 + 0x50]
	0x03456D0C MOVN W9, 0x0
	0x03456D10 STR X8, [X31 + 0x20]
	0x03456D14 STR X31, [X19 + 0x50]
	0x03456D18 STR W9, [X19]
	0x03456D1C ADRP X8, 0xC9E000
	0x03456D20 LDR X8, [X8 + 0x830]
	0x03456D24 ADD X0, X31, 0x20
	0x03456D28 LDR X1, [X8]
	0x03456D2C BL 0x2677474
	0x03456D30 B 0x3456F64
	0x03456D34 ADRP X8, 0xCD9000
	0x03456D38 LDR X8, [X8 + 0xE30]
	0x03456D3C LDR X0, [X8]
	0x03456D40 BL 0x1C16F10
	0x03456D44 MOV X21, X0
	0x03456D48 MOV X1, X31
	0x03456D4C BL 0x34498E4
	0x03456D50 STR X21, [X19 + 0x48]
	0x03456D54 CBZ X21, 0x34570D0
	0x03456D58 LDR X8, [X19 + 0x20]
	0x03456D5C STR X8, [X21 + 0x10]
	0x03456D60 LDR X8, [X19 + 0x28]
	0x03456D64 STR X8, [X21 + 0x18]
	0x03456D68 LDR X8, [X19 + 0x30]
	0x03456D6C STR X8, [X21 + 0x20]
	0x03456D70 LDR X8, [X19 + 0x38]
	0x03456D74 STR X8, [X21 + 0x28]
	0x03456D78 CBZ X20, 0x34570D4
	0x03456D7C LDRB W8, [X20 + 0x10]
	0x03456D80 CBZ W8, 0x3456F68
	0x03456D84 LDR X8, [X19 + 0x48]
	0x03456D88 CBZ X8, 0x34570D8
	0x03456D8C LDR X21, [X8 + 0x18]
	0x03456D90 CBZ X21, 0x34570DC
	0x03456D94 ADRP X23, 0xC9E000
	0x03456D98 LDR X8, [X21]
	0x03456D9C LDR X23, [X23 + 0x818]
	0x03456DA0 LDRH W9, [X8 + 0x12E]
	0x03456DA4 LDR X1, [X23]
	0x03456DA8 CBZ X9, 0x3456DCC
	0x03456DAC LDR X10, [X8 + 0xB0]
	0x03456DB0 ADD X10, X10, 0x8
	0x03456DB4 LDUR X11, [X10 - 0x8]
	0x03456DB8 CMP X11, X1
	0x03456DBC B.EQ 0x3456DDC
	0x03456DC0 SUBS X9, X9, 0x1
	0x03456DC4 ADD X10, X10, 0x10
	0x03456DC8 B.NE 0x3456DB4
	0x03456DCC MOVZ W2, 0x7
	0x03456DD0 MOV X0, X21
	0x03456DD4 BL 0x1C5C788
	0x03456DD8 B 0x3456DEC
	0x03456DDC LDR W9, [X10]
	0x03456DE0 ADD W9, W9, 0x7
	0x03456DE4 ADD X8, X8, W9, 0x4, SXTW
	0x03456DE8 ADD X0, X8, 0x138
	0x03456DEC LDP X8, X1, [X0]
	0x03456DF0 MOV X0, X21
	0x03456DF4 BLR X8
	0x03456DF8 MOV X1, X31
	0x03456DFC BL 0x32277A8
	0x03456E00 TBNZ X0, 0x0, 0x3456F64
	0x03456E04 LDR X8, [X19 + 0x48]
	0x03456E08 CBZ X8, 0x34570E0
	0x03456E0C ADRP X9, 0xC9E000
	0x03456E10 LDR X9, [X9 + 0x9F0]
	0x03456E14 LDR X21, [X8 + 0x18]
	0x03456E18 LDR X0, [X9]
	0x03456E1C LDR W9, [X0 + 0xE0]
	0x03456E20 CBNZ W9, 0x3456E28
	0x03456E24 BL 0x1C16DFC
	0x03456E28 MOV X0, X31
	0x03456E2C BL 0x33616A4
	0x03456E30 ADRP X22, 0xC9F000
	0x03456E34 LDR X22, [X22 + 0xA10]
	0x03456E38 MOV X8, X0
	0x03456E3C STR X8, [X31 + 0x28]
	0x03456E40 LDR X0, [X22]
	0x03456E44 LDR W8, [X0 + 0xE0]
	0x03456E48 CBNZ W8, 0x3456E54
	0x03456E4C BL 0x1C16DFC
	0x03456E50 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF88000
	011 Move W8, [X20+1923]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCDA000
	018 Move X0, [X0+3472]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDA000
	021 Move X0, [X0+3480]
	022 Call 0x1C17CF4
	023 Move X0, 0xCD9000
	024 Move X0, [X0+3384]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD9000
	027 Move X0, [X0+1904]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA0000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC9F000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCDA000
	036 Move X0, [X0+3488]
	037 Call 0x1C17CF4
	038 Move X0, 0xC9F000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDA000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCDA000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCDA000
	048 Move X0, [X0+3496]
	049 Call 0x1C17CF4
	050 Move X0, 0xCDA000
	051 Move X0, [X0+3504]
	052 Call 0x1C17CF4
	053 Move X0, 0xC9F000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC9F000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCDA000
	060 Move X0, [X0+3512]
	061 Call 0x1C17CF4
	062 Move X0, 0xC9F000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCDA000
	066 Move X0, [X0+3520]
	067 Call 0x1C17CF4
	068 Move X0, 0xCDA000
	069 Move X0, [X0+3528]
	070 Call 0x1C17CF4
	071 Move X0, 0xCDA000
	072 Move X0, [X0+3536]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1923], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCD9000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1904]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+104]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+104], X31
	092 Move [X19], W9
	093 Move X8, [X19+96]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+96], X31
	099 Move [X19], W9
	100 Move X8, 0xC9F000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCDA000
	106 Move X8, [X8+3536]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass66_0..ctor, X0
	112 Move [X19+88], X21
	113 Compare X21, 0
	114 JumpIfEqual {383}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 Move [X21+24], V0
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Move [X21+40], V0
	121 Move X8, [X19+72]
	122 Move [X21+56], X8
	123 Compare X20, 0
	124 JumpIfEqual {384}
	125 Move W8, [X20+16]
	126 Compare W8, 0
	127 JumpIfEqual {265}
	128 Move X8, [X19+88]
	129 Compare X8, 0
	130 JumpIfEqual {385}
	131 Move X21, [X8+24]
	132 Compare X21, 0
	133 JumpIfEqual {386}
	134 Move X23, 0xC9F000
	135 Move X8, [X21]
	136 Move X23, [X23+2072]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move X1, [X23]
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 7
	148 Move X0, X21
	149 Call 0x1C5D788
	150 Move W9, [X10]
	151 Add W9, W9, 7
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X1, X31
	159 Call String.IsNullOrEmpty, X0
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {263}
	164 Move X8, [X19+88]
	165 Compare X8, 0
	166 JumpIfEqual {387}
	167 Move X9, 0xC9F000
	168 Move X9, [X9+2544]
	169 Move X21, [X8+24]
	170 Move X0, [X9]
	171 Move W9, [X0+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X31
	176 Call DateTime.get_UtcNow
	177 Move X22, 0xCA0000
	178 Move X22, [X22+2576]
	179 Move X8, X0
	180 Move [X31+40], X8
	181 Move X0, [X22]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X22]
	187 Move X8, [X0+184]
	188 Move X1, [X8]
	189 Add X0, X31, 40
	190 Move X2, X31
	191 Call DateTime.Add, X0, X1
	192 Compare X21, 0
	193 JumpIfEqual {388}
	194 Move X8, [X21]
	195 Move X1, [X23]
	196 Move X22, X0
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move W2, 11
	207 Move X0, X21
	208 Call 0x1C5D788
	209 Move W9, [X10]
	210 Add W9, W9, 11
	211 Add X8, X8, W9
	212 Add X0, X8, 312
	213 Move X8, [X0]
	214 Move X2, [X0+8]
	215 Move X0, X21
	216 Move X1, X22
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {263}
	222 Move X8, [X19+88]
	223 Compare X8, 0
	224 JumpIfEqual {389}
	225 Move X1, [X8+24]
	226 Move X3, [X19+80]
	227 Move X4, [X8+56]
	228 Move X0, X20
	229 Move X2, X31
	230 Move X5, X31
	231 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	232 Compare X0, 0
	233 JumpIfEqual {390}
	234 Move X8, 0xC9F000
	235 Move X8, [X8+2112]
	236 Move X1, [X8]
	237 Call Task`1<Object>.GetAwaiter, X0
	238 Move X8, 0xC9F000
	239 Move X8, [X8+2104]
	240 Move [X31+32], X0
	241 Move X1, [X8]
	242 Add X0, X31, 32
	243 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {100}
	248 Move [X19], W31
	249 Move X8, [X31+32]
	250 Move [X19+96], X8
	251 Move X0, [X25]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X8, 0xCDA000
	257 Move X8, [X8+3480]
	258 Add X0, X19, 8
	259 Move X3, [X8]
	260 Add X1, X31, 32
	261 Move X2, X19
	262 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	263 Compare X20, 0
	264 JumpIfEqual {382}
	265 Move X8, 0xCDA000
	266 Move X8, [X8+3488]
	267 Move X21, [X20+88]
	268 Move X23, [X19+88]
	269 Move X0, [X8]
	270 Call 0x1C17F10
	271 Move X8, 0xCDA000
	272 Move X8, [X8+3528]
	273 Move X22, X0
	274 Move X2, [X8]
	275 Move X1, X23
	276 Move X3, X31
	277 Call Func`1<Object>..ctor, X0, X1, X2
	278 Move X8, [X19+88]
	279 Compare X8, 0
	280 JumpIfEqual {379}
	281 Move X9, 0xCDA000
	282 Move X23, [X19+80]
	283 Move X9, [X9+1992]
	284 Compare X23, 0
	285 JumpIfNotEqual {287}
	286 Move X23, [X20+24]
	287 Move X20, [X8+24]
	288 Move X1, [X8+56]
	289 Move X2, [X9]
	290 Move [X31+8], X31
	291 Move [X31+16], X31
	292 Add X0, X31, 8
	293 Call Nullable`1<CancellationToken>..ctor, X0, X1
	294 Move X8, 0xCDA000
	295 Move X8, [X8+2000]
	296 Move X0, [X8]
	297 Call 0x1C17F10
	298 Move X3, [X31+8]
	299 Move X4, [X31+16]
	300 Move X24, X0
	301 Move X1, X20
	302 Move X2, X23
	303 Move X5, X31
	304 Call RetryHistory..ctor, X0, X1, X2, X3
	305 Compare X21, 0
	306 JumpIfEqual {380}
	307 Move X8, 0xCDA000
	308 Move X8, [X8+3496]
	309 Move X3, [X8]
	310 Move X0, X21
	311 Move X1, X22
	312 Move X2, X24
	313 Call 0x2244230, X0, X1, X2
	314 Compare X0, 0
	315 JumpIfEqual {381}
	316 Move X8, 0xCDA000
	317 Move X8, [X8+3520]
	318 Move X1, [X8]
	319 Call Task`1<Object>.GetAwaiter, X0
	320 Move X8, 0xCDA000
	321 Move X8, [X8+3512]
	322 Move [X31+24], X0
	323 Move X1, [X8]
	324 Add X0, X31, 24
	325 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	326 Move TEMP, X0
	327 And TEMP, TEMP, 1
	328 Compare TEMP, 1
	329 JumpIfNotEqual {353}
	330 Move X8, 0xCDA000
	331 Move X8, [X8+3504]
	332 Add X0, X31, 24
	333 Move X1, [X8]
	334 Call TaskAwaiter`1<Object>.GetResult, X0
	335 Move TEMP, 1
	336 Not TEMP
	337 Move W8, TEMP
	338 Move [X19], W8
	339 Move [X19+88], X31
	340 Move X20, X0
	341 Move X0, [X25]
	342 Move X21, 0xCD9000
	343 Add X19, X19, 8
	344 Move W8, [X0+224]
	345 Move X21, [X21+3384]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X2, [X21]
	350 Move X0, X19
	351 Move X1, X20
	352 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	353 Move W8, 1
	354 Move [X19], W8
	355 Move X8, [X31+24]
	356 Move [X19+104], X8
	357 Move X0, [X25]
	358 Move W8, [X0+224]
	359 Compare W8, 0
	360 JumpIfNotEqual {362}
	361 Call 0x1C17DFC
	362 Move X8, 0xCDA000
	363 Move X8, [X8+3472]
	364 Add X0, X19, 8
	365 Move X3, [X8]
	366 Add X1, X31, 24
	367 Move X2, X19
	368 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	369 Move X20, [X31+96]
	370 Move X19, [X31+104]
	371 Move X22, [X31+80]
	372 Move X21, [X31+88]
	373 Move X24, [X31+64]
	374 Move X23, [X31+72]
	375 Move X30, [X31+48]
	376 Move X25, [X31+56]
	377 Add X31, X31, 112
	378 Return 
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Move X20, X0
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Move X0, X20
	394 Call 0x3EB2AD0
	395 Move X20, X0
	396 Move X0, 0xC9E000
	397 Move X0, [X0+2000]
	398 Call 0x1C17D08
	399 Move X8, [X20]
	400 Move X1, [X8]
	401 Call 0x1C18270
	402 Move TEMP, X0
	403 And TEMP, TEMP, 1
	404 Compare TEMP, 1
	405 JumpIfNotEqual {427}
	406 Move X20, [X20]
	407 Call 0x3EB2AE0
	408 Move TEMP, 1
	409 Not TEMP
	410 Move W8, TEMP
	411 Move [X19+88], X31
	412 Move [X19+8], W8
	413 Move X0, 0xCD9000
	414 Move X0, [X0+1904]
	415 Call 0x1C17D08
	416 Move W8, [X0+224]
	417 Compare W8, 0
	418 JumpIfNotEqual {420}
	419 Call 0x1C17DFC
	420 Move X0, 0xCD9000
	421 Move X0, [X0+3416]
	422 Call 0x1C17D08
	423 Move X2, X0
	424 Move X0, X19
	425 Move X1, X20
	426 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	427 Move W0, 8
	428 Call 0x3EB2AF0
	429 Move X8, [X20]
	430 Move [X0], X8
	431 Move X1, 0xA5F000
	432 Add X1, X1, 3672
	433 Move X2, X31
	434 Call 0x3EB2B00
	435 Move X20, X0
	436 Call 0x3EB2AE0
	437 Move X0, X20
	438 Call 0x1D2D690
	439 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03456E54 LDR X8, [X0 + 0xB8]
	0x03456E58 LDR X1, [X8]
	0x03456E5C ADD X0, X31, 0x28
	0x03456E60 MOV X2, X31
	0x03456E64 BL 0x335FC68
	0x03456E68 CBZ X21, 0x34570E4
	0x03456E6C LDR X8, [X21]
	0x03456E70 LDR X1, [X23]
	0x03456E74 MOV X22, X0
	0x03456E78 LDRH W9, [X8 + 0x12E]
	0x03456E7C CBZ X9, 0x3456EA0
	0x03456E80 LDR X10, [X8 + 0xB0]
	0x03456E84 ADD X10, X10, 0x8
	0x03456E88 LDUR X11, [X10 - 0x8]
	0x03456E8C CMP X11, X1
	0x03456E90 B.EQ 0x3456EB0
	0x03456E94 SUBS X9, X9, 0x1
	0x03456E98 ADD X10, X10, 0x10
	0x03456E9C B.NE 0x3456E88
	0x03456EA0 MOVZ W2, 0xB
	0x03456EA4 MOV X0, X21
	0x03456EA8 BL 0x1C5C788
	0x03456EAC B 0x3456EC0
	0x03456EB0 LDR W9, [X10]
	0x03456EB4 ADD W9, W9, 0xB
	0x03456EB8 ADD X8, X8, W9, 0x4, SXTW
	0x03456EBC ADD X0, X8, 0x138
	0x03456EC0 LDP X8, X2, [X0]
	0x03456EC4 MOV X0, X21
	0x03456EC8 MOV X1, X22
	0x03456ECC BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF88000
	007 Move X21, 0xCD9000
	008 Move W8, [X22+1924]
	009 Move X21, [X21+1904]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCD9000
	017 Move X0, [X0+3424]
	018 Call 0x1C17CF4
	019 Move X0, 0xCD9000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1924], W8
	024 Move X0, [X21]
	025 Move X21, 0xCD9000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3424]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

