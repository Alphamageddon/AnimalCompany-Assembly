Type: Nakama.ApiClient/<RpcFunc2Async>d__74

Method: System.Void MoveNext()

Disassembly:
	0x03435BC8 LDR X0, [X0 + 0x300]
	0x03435BCC BL 0x1C16D08
	0x03435BD0 MOV X2, X0
	0x03435BD4 MOV X0, X19
	0x03435BD8 MOV X1, X20
	0x03435BDC BL 0x26324C8
	0x03435BE0 B 0x34359E0
	0x03435BE4 MOVZ W0, 0x8
	0x03435BE8 BL 0x3EB1AF0
	0x03435BEC LDR X8, [X20]
	0x03435BF0 STR X8, [X0]
	0x03435BF4 ADRP X1, 0xA7F000
	0x03435BF8 ADD X1, X1, 0xE58
	0x03435BFC MOV X2, X31
	0x03435C00 BL 0x3EB1B00
	0x03435C04 MOV X20, X0
	0x03435C08 BL 0x3EB1AE0
	0x03435C0C MOV X0, X20
	0x03435C10 BL 0x1D2C690
	0x03435C14 BL 0x1990590
	0x03435C18 STR X30, [X31 - 0x30]!
	0x03435C1C STP X22, X21, [X31 + 0x10]
	0x03435C20 STP X20, X19, [X31 + 0x20]
	0x03435C24 ADRP X22, 0xFA8000
	0x03435C28 ADRP X21, 0xCF9000
	0x03435C2C LDRB W8, [X22 + 0x670]
	0x03435C30 LDR X21, [X21 + 0x668]
	0x03435C34 MOV X19, X1
	0x03435C38 MOV X20, X0
	0x03435C3C TBNZ X8, 0x0, 0x3435C60
	0x03435C40 ADRP X0, 0xCFA000
	0x03435C44 LDR X0, [X0 + 0x308]
	0x03435C48 BL 0x1C16CF4
	0x03435C4C ADRP X0, 0xCF9000
	0x03435C50 LDR X0, [X0 + 0x668]
	0x03435C54 BL 0x1C16CF4
	0x03435C58 MOVZ W8, 0x1
	0x03435C5C STRB W8, [X22 + 0x670]
	0x03435C60 LDR X0, [X21]
	0x03435C64 ADRP X21, 0xCFA000
	0x03435C68 LDR W8, [X0 + 0xE0]
	0x03435C6C LDR X21, [X21 + 0x308]
	0x03435C70 CBNZ W8, 0x3435C78
	0x03435C74 BL 0x1C16DFC
	0x03435C78 LDR X2, [X21]
	0x03435C7C ADD X0, X20, 0x8
	0x03435C80 MOV X1, X19
	0x03435C84 LDP X20, X19, [X31 + 0x20]
	0x03435C88 LDP X22, X21, [X31 + 0x10]
	0x03435C8C LDR X30, [X31], #0x30
	0x03435C90 B 0x2632228
	0x03435C94 SUB X31, X31, 0x70
	0x03435C98 STR X30, [X31 + 0x10]
	0x03435C9C STP X28, X27, [X31 + 0x20]
	0x03435CA0 STP X26, X25, [X31 + 0x30]
	0x03435CA4 STP X24, X23, [X31 + 0x40]
	0x03435CA8 STP X22, X21, [X31 + 0x50]
	0x03435CAC STP X20, X19, [X31 + 0x60]
	0x03435CB0 ADRP X20, 0xFA8000
	0x03435CB4 LDRB W8, [X20 + 0x671]
	0x03435CB8 MOV X19, X0
	0x03435CBC TBNZ X8, 0x0, 0x3435D88
	0x03435CC0 ADRP X0, 0xCFA000
	0x03435CC4 LDR X0, [X0 + 0x328]
	0x03435CC8 BL 0x1C16CF4
	0x03435CCC ADRP X0, 0xCC1000
	0x03435CD0 LDR X0, [X0 + 0x280]
	0x03435CD4 BL 0x1C16CF4
	0x03435CD8 ADRP X0, 0xCC7000
	0x03435CDC LDR X0, [X0 + 0x8D8]
	0x03435CE0 BL 0x1C16CF4
	0x03435CE4 ADRP X0, 0xCBF000
	0x03435CE8 LDR X0, [X0 + 0x810]
	0x03435CEC BL 0x1C16CF4
	0x03435CF0 ADRP X0, 0xCBF000
	0x03435CF4 LDR X0, [X0 + 0x6C0]
	0x03435CF8 BL 0x1C16CF4
	0x03435CFC ADRP X0, 0xCBF000
	0x03435D00 LDR X0, [X0 + 0x6D0]
	0x03435D04 BL 0x1C16CF4
	0x03435D08 ADRP X0, 0xCF9000
	0x03435D0C LDR X0, [X0 + 0x7B8]
	0x03435D10 BL 0x1C16CF4
	0x03435D14 ADRP X0, 0xCC1000
	0x03435D18 LDR X0, [X0 + 0x1E0]
	0x03435D1C BL 0x1C16CF4
	0x03435D20 ADRP X0, 0xCC1000
	0x03435D24 LDR X0, [X0 + 0x1F0]
	0x03435D28 BL 0x1C16CF4
	0x03435D2C ADRP X0, 0xCC1000
	0x03435D30 LDR X0, [X0 + 0x1F8]
	0x03435D34 BL 0x1C16CF4
	0x03435D38 ADRP X0, 0xCC7000
	0x03435D3C LDR X0, [X0 + 0x3A0]
	0x03435D40 BL 0x1C16CF4
	0x03435D44 ADRP X0, 0xCE7000
	0x03435D48 LDR X0, [X0 + 0x4D8]
	0x03435D4C BL 0x1C16CF4
	0x03435D50 ADRP X0, 0xCFA000
	0x03435D54 LDR X0, [X0 + 0x330]
	0x03435D58 BL 0x1C16CF4
	0x03435D5C ADRP X0, 0xCF9000
	0x03435D60 LDR X0, [X0 + 0x7D0]
	0x03435D64 BL 0x1C16CF4
	0x03435D68 ADRP X0, 0xCF9000
	0x03435D6C LDR X0, [X0 + 0x7D8]
	0x03435D70 BL 0x1C16CF4
	0x03435D74 ADRP X0, 0xCBE000
	0x03435D78 LDR X0, [X0 + 0x988]
	0x03435D7C BL 0x1C16CF4
	0x03435D80 MOVZ W8, 0x1
	0x03435D84 STRB W8, [X20 + 0x671]
	0x03435D88 STR X31, [X31 + 0x18]
	0x03435D8C ADRP X28, 0xCC1000
	0x03435D90 LDR W8, [X19]
	0x03435D94 LDR X28, [X28 + 0x280]
	0x03435D98 CBZ W8, 0x3435F78
	0x03435D9C LDR X8, [X19 + 0x20]
	0x03435DA0 CBZ X8, 0x3436090
	0x03435DA4 LDR X25, [X19 + 0x28]
	0x03435DA8 CBZ X25, 0x34360D8
	0x03435DAC LDR X0, [X25 + 0x20]
	0x03435DB0 CBZ X0, 0x34360DC
	0x03435DB4 ADRP X8, 0xCFA000
	0x03435DB8 ADRP X9, 0xCBE000
	0x03435DBC LDR X8, [X8 + 0x330]
	0x03435DC0 LDR X9, [X9 + 0x988]
	0x03435DC4 LDR X21, [X8]
	0x03435DC8 LDR X20, [X9]
	0x03435DCC MOV X1, X31
	0x03435DD0 BL 0x361B448
	0x03435DD4 ADRP X8, 0xCC7000
	0x03435DD8 LDR X8, [X8 + 0x8D8]
	0x03435DDC MOV X22, X0
	0x03435DE0 LDR X0, [X8]
	0x03435DE4 MOVZ W1, 0x1
	0x03435DE8 BL 0x1C16D6C
	0x03435DEC MOV X1, X0
	0x03435DF0 CBZ X1, 0x34360E0
	0x03435DF4 LDR W8, [X1 + 0x18]
	0x03435DF8 CBZ W8, 0x34360E4
	0x03435DFC MOVZ W8, 0x2F
	0x03435E00 STRH W8, [X1 + 0x20]
	0x03435E04 CBZ X22, 0x34360E8
	0x03435E08 MOV X0, X22
	0x03435E0C MOV X2, X31
	0x03435E10 BL 0x322BC58
	0x03435E14 MOV X1, X21
	0x03435E18 MOV X2, X31
	0x03435E1C BL 0x321B938
	0x03435E20 ADRP X8, 0xCC7000
	0x03435E24 LDR X8, [X8 + 0x3A0]
	0x03435E28 MOV X22, X0
	0x03435E2C LDR X23, [X25 + 0x20]
	0x03435E30 LDR X0, [X8]
	0x03435E34 BL 0x1C16F10
	0x03435E38 MOV X21, X0
	0x03435E3C MOV X1, X23
	0x03435E40 MOV X2, X31
	0x03435E44 BL 0x36281F8
	0x03435E48 CBZ X21, 0x34360EC
	0x03435E4C MOV X0, X21
	0x03435E50 MOV X1, X22
	0x03435E54 MOV X2, X31
	0x03435E58 BL 0x36288CC
	0x03435E5C MOV X0, X21
	0x03435E60 MOV X1, X20
	0x03435E64 MOV X2, X31
	0x03435E68 BL 0x3628980
	0x03435E6C MOV X0, X21
	0x03435E70 MOV X1, X31
	0x03435E74 BL 0x3628A38
	0x03435E78 ADRP X8, 0xCE7000
	0x03435E7C ADRP X9, 0xCBF000
	0x03435E80 LDR X8, [X8 + 0x4D8]
	0x03435E84 LDR X9, [X9 + 0x6D0]
	0x03435E88 MOV X20, X0
	0x03435E8C LDR X21, [X8]
	0x03435E90 LDR X0, [X9]
	0x03435E94 BL 0x1C16F10
	0x03435E98 ADRP X8, 0xCBF000
	0x03435E9C LDR X8, [X8 + 0x6C0]
	0x03435EA0 MOV X22, X0
	0x03435EA4 LDR X1, [X8]
	0x03435EA8 BL 0x2AA4804
	0x03435EAC ADRP X8, 0xCF9000
	0x03435EB0 LDR X8, [X8 + 0x7D8]
	0x03435EB4 LDR X1, [X19 + 0x30]
	0x03435EB8 LDR X0, [X8]
	0x03435EBC MOV X2, X31
	0x03435EC0 BL 0x321B938
	0x03435EC4 CBZ X22, 0x34360F0
	0x03435EC8 ADRP X8, 0xCF9000
	0x03435ECC LDR X8, [X8 + 0x7D0]
	0x03435ED0 ADRP X9, 0xCBF000
	0x03435ED4 LDR X9, [X9 + 0x810]
	0x03435ED8 MOV X2, X0
	0x03435EDC LDR X1, [X8]
	0x03435EE0 LDR X3, [X9]
	0x03435EE4 MOV X0, X22
	0x03435EE8 BL 0x2AA5098
	0x03435EEC LDR X0, [X19 + 0x20]
	0x03435EF0 MOV X1, X31
	0x03435EF4 BL 0x3483BE4
	0x03435EF8 MOV X23, X0
	0x03435EFC MOV X0, X31
	0x03435F00 BL 0x3241948
	0x03435F04 CBZ X0, 0x34360F4
	0x03435F08 LDR X8, [X0]
	0x03435F0C LDR X9, [X8 + 0x268]
	0x03435F10 LDR X2, [X8 + 0x270]
	0x03435F14 MOV X1, X23
	0x03435F18 BLR X9
	0x03435F1C LDR X24, [X25 + 0x10]
	0x03435F20 CBZ X24, 0x34360F8
	0x03435F24 ADRP X10, 0xCF9000
	0x03435F28 LDR X10, [X10 + 0x7B8]
	0x03435F2C LDR X8, [X24]
	0x03435F30 LDR W26, [X25 + 0x18]
	0x03435F34 LDP X27, X25, [X19 + 0x38]
	0x03435F38 LDR X1, [X10]
	0x03435F3C LDRH W9, [X8 + 0x12E]
	0x03435F40 MOV X23, X0
	0x03435F44 CBZ X9, 0x3435F68
	0x03435F48 LDR X10, [X8 + 0xB0]
	0x03435F4C ADD X10, X10, 0x8
	0x03435F50 LDUR X11, [X10 - 0x8]
	0x03435F54 CMP X11, X1
	0x03435F58 B.EQ 0x3435F90
	0x03435F5C SUBS X9, X9, 0x1
	0x03435F60 ADD X10, X10, 0x10
	0x03435F64 B.NE 0x3435F50
	0x03435F68 MOVZ W2, 0x3
	0x03435F6C MOV X0, X24
	0x03435F70 BL 0x1C5C788
	0x03435F74 B 0x3435FA0
	0x03435F78 LDR X8, [X19 + 0x48]
	0x03435F7C MOVN W9, 0x0
	0x03435F80 STR X8, [X31 + 0x18]
	0x03435F84 STR X31, [X19 + 0x48]
	0x03435F88 STR W9, [X19]
	0x03435F8C B 0x3435FFC
	0x03435F90 LDR W9, [X10]
	0x03435F94 ADD W9, W9, 0x3
	0x03435F98 ADD X8, X8, W9, 0x4, SXTW
	0x03435F9C ADD X0, X8, 0x138
	0x03435FA0 LDP X8, X9, [X0]
	0x03435FA4 MOV X0, X24
	0x03435FA8 MOV X1, X21
	0x03435FAC MOV X2, X20
	0x03435FB0 MOV X3, X22
	0x03435FB4 MOV X4, X23
	0x03435FB8 MOV W5, W26
	0x03435FBC MOV X6, X27
	0x03435FC0 MOV X7, X25
	0x03435FC4 STR X9, [X31]
	0x03435FC8 BLR X8
	0x03435FCC CBZ X0, 0x34360FC
	0x03435FD0 ADRP X8, 0xCC1000
	0x03435FD4 LDR X8, [X8 + 0x1F8]
	0x03435FD8 LDR X1, [X8]
	0x03435FDC BL 0x269F5D0
	0x03435FE0 ADRP X8, 0xCC1000
	0x03435FE4 LDR X8, [X8 + 0x1F0]
	0x03435FE8 STR X0, [X31 + 0x18]
	0x03435FEC LDR X1, [X8]
	0x03435FF0 ADD X0, X31, 0x18
	0x03435FF4 BL 0x2677430
	0x03435FF8 TBZ X0, 0x0, 0x3436038
	0x03435FFC ADRP X8, 0xCC1000
	0x03436000 LDR X8, [X8 + 0x1E0]
	0x03436004 ADD X0, X31, 0x18
	0x03436008 LDR X1, [X8]
	0x0343600C BL 0x2677474
	0x03436010 MOVN W8, 0x1
	0x03436014 STR W8, [X19], #0x8
	0x03436018 LDR X0, [X28]
	0x0343601C LDR W8, [X0 + 0xE0]
	0x03436020 CBNZ W8, 0x3436028
	0x03436024 BL 0x1C16DFC
	0x03436028 MOV X0, X19
	0x0343602C MOV X1, X31
	0x03436030 BL 0x32C4864
	0x03436034 B 0x3436070
	0x03436038 STR W31, [X19]
	0x0343603C LDR X8, [X31 + 0x18]
	0x03436040 STR X8, [X19 + 0x48]
	0x03436044 LDR X0, [X28]
	0x03436048 LDR W8, [X0 + 0xE0]
	0x0343604C CBNZ W8, 0x3436054
	0x03436050 BL 0x1C16DFC
	0x03436054 ADRP X8, 0xCF9000
	0x03436058 LDR X8, [X8 + 0x328]
	0x0343605C ADD X0, X19, 0x8
	0x03436060 LDR X3, [X8]
	0x03436064 ADD X1, X31, 0x18
	0x03436068 MOV X2, X19
	0x0343606C BL 0x2186C28
	0x03436070 LDP X20, X19, [X31 + 0x60]
	0x03436074 LDP X22, X21, [X31 + 0x50]
	0x03436078 LDP X24, X23, [X31 + 0x40]
	0x0343607C LDP X26, X25, [X31 + 0x30]
	0x03436080 LDP X28, X27, [X31 + 0x20]
	0x03436084 LDR X30, [X31 + 0x10]
	0x03436088 ADD X31, X31, 0x70
	0x0343608C RET
	0x03436090 ADRP X0, 0xCC5000
	0x03436094 LDR X0, [X0 + 0x578]
	0x03436098 BL 0x1C16D08
	0x0343609C BL 0x1C16F10
	0x034360A0 MOV X20, X0
	0x034360A4 ADRP X0, 0xCF8000
	0x034360A8 LDR X0, [X0 + 0xBC8]
	0x034360AC BL 0x1C16D08
	0x034360B0 MOV X1, X0
	0x034360B4 MOV X0, X20
	0x034360B8 MOV X2, X31
	0x034360BC BL 0x3314A68
	0x034360C0 ADRP X0, 0xCF9000
	0x034360C4 LDR X0, [X0 + 0x338]
	0x034360C8 BL 0x1C16D08
	0x034360CC MOV X1, X0
	0x034360D0 MOV X0, X20
	0x034360D4 BL 0x1C16DEC
	0x034360D8 BL 0x1C16F20
	0x034360DC BL 0x1C16F20
	0x034360E0 BL 0x1C16F20
	0x034360E4 BL 0x1C16F28
	0x034360E8 BL 0x1C16F20
	0x034360EC BL 0x1C16F20
	0x034360F0 BL 0x1C16F20
	0x034360F4 BL 0x1C16F20
	0x034360F8 BL 0x1C16F20
	0x034360FC BL 0x1C16F20
	0x03436100 B 0x3436160
	0x03436104 B 0x3436160
	0x03436108 B 0x3436160
	0x0343610C B 0x3436160
	0x03436110 B 0x3436160
	0x03436114 B 0x3436160
	0x03436118 B 0x3436160
	0x0343611C B 0x3436160
	0x03436120 B 0x3436160
	0x03436124 B 0x3436160
	0x03436128 B 0x3436160
	0x0343612C B 0x3436160
	0x03436130 B 0x3436160
	0x03436134 B 0x3436160
	0x03436138 B 0x3436160
	0x0343613C B 0x3436160
	0x03436140 B 0x3436160
	0x03436144 B 0x3436160
	0x03436148 B 0x3436160
	0x0343614C B 0x3436160
	0x03436150 B 0x3436160
	0x03436154 B 0x3436160
	0x03436158 B 0x3436160
	0x0343615C B 0x3436160
	0x03436160 MOV X20, X0
	0x03436164 CMP W1, 0x1
	0x03436168 B.NE 0x34361F8
	0x0343616C MOV X0, X20
	0x03436170 BL 0x3EB1AD0
	0x03436174 MOV X20, X0
	0x03436178 ADRP X0, 0xCBD000
	0x0343617C LDR X0, [X0 + 0x7D0]
	0x03436180 BL 0x1C16D08
	0x03436184 LDR X8, [X20]
	0x03436188 LDR X1, [X8]
	0x0343618C BL 0x1C17270
	0x03436190 TBZ X0, 0x0, 0x34361D0
	0x03436194 LDR X20, [X20]
	0x03436198 BL 0x3EB1AE0
	0x0343619C MOVN W8, 0x1
	0x034361A0 STR W8, [X19], #0x8
	0x034361A4 ADRP X0, 0xCC0000
	0x034361A8 LDR X0, [X0 + 0x280]
	0x034361AC BL 0x1C16D08
	0x034361B0 LDR W8, [X0 + 0xE0]
	0x034361B4 CBNZ W8, 0x34361BC
	0x034361B8 BL 0x1C16DFC
	0x034361BC MOV X0, X19
	0x034361C0 MOV X1, X20
	0x034361C4 MOV X2, X31
	0x034361C8 BL 0x32C4908
	0x034361CC B 0x3436070
	0x034361D0 MOVZ W0, 0x8
	0x034361D4 BL 0x3EB1AF0
	0x034361D8 LDR X8, [X20]
	0x034361DC STR X8, [X0]
	0x034361E0 ADRP X1, 0xA7E000
	0x034361E4 ADD X1, X1, 0xE58
	0x034361E8 MOV X2, X31
	0x034361EC BL 0x3EB1B00
	0x034361F0 MOV X20, X0
	0x034361F4 BL 0x3EB1AE0
	0x034361F8 MOV X0, X20
	0x034361FC BL 0x1D2C690
	0x03436200 BL 0x1990590
	0x03436204 STR X30, [X31 - 0x30]!
	0x03436208 STP X22, X21, [X31 + 0x10]
	0x0343620C STP X20, X19, [X31 + 0x20]
	0x03436210 ADRP X21, 0xFA7000
	0x03436214 ADRP X22, 0xCC0000
	0x03436218 LDRB W8, [X21 + 0x672]
	0x0343621C LDR X22, [X22 + 0x280]
	0x03436220 MOV X19, X1
	0x03436224 MOV X20, X0
	0x03436228 TBNZ X8, 0x0, 0x3436240
	0x0343622C ADRP X0, 0xCC0000
	0x03436230 LDR X0, [X0 + 0x280]
	0x03436234 BL 0x1C16CF4
	0x03436238 MOVZ W8, 0x1
	0x0343623C STRB W8, [X21 + 0x672]
	0x03436240 LDR X0, [X22]
	0x03436244 LDR W8, [X0 + 0xE0]
	0x03436248 CBNZ W8, 0x3436250
	0x0343624C BL 0x1C16DFC
	0x03436250 ADD X0, X20, 0x8
	0x03436254 MOV X1, X19
	0x03436258 LDP X20, X19, [X31 + 0x20]
	0x0343625C LDP X22, X21, [X31 + 0x10]
	0x03436260 MOV X2, X31
	0x03436264 LDR X30, [X31], #0x30
	0x03436268 B 0x32C477C
	0x0343626C SUB X31, X31, 0x70
	0x03436270 STR X30, [X31 + 0x10]
	0x03436274 STP X28, X27, [X31 + 0x20]
	0x03436278 STP X26, X25, [X31 + 0x30]
	0x0343627C STP X24, X23, [X31 + 0x40]
	0x03436280 STP X22, X21, [X31 + 0x50]
	0x03436284 STP X20, X19, [X31 + 0x60]
	0x03436288 ADRP X20, 0xFA7000
	0x0343628C LDRB W8, [X20 + 0x673]
	0x03436290 MOV X19, X0
	0x03436294 TBNZ X8, 0x0, 0x3436390
	0x03436298 ADRP X0, 0xCF9000
	0x0343629C LDR X0, [X0 + 0x340]
	0x034362A0 BL 0x1C16CF4
	0x034362A4 ADRP X0, 0xCF8000
	0x034362A8 LDR X0, [X0 + 0x820]
	0x034362AC BL 0x1C16CF4
	0x034362B0 ADRP X0, 0xCF8000
	0x034362B4 LDR X0, [X0 + 0x320]
	0x034362B8 BL 0x1C16CF4
	0x034362BC ADRP X0, 0xCC6000
	0x034362C0 LDR X0, [X0 + 0x8D8]
	0x034362C4 BL 0x1C16CF4
	0x034362C8 ADRP X0, 0xCC6000
	0x034362CC LDR X0, [X0 + 0x9E8]
	0x034362D0 BL 0x1C16CF4
	0x034362D4 ADRP X0, 0xCBE000
	0x034362D8 LDR X0, [X0 + 0x810]
	0x034362DC BL 0x1C16CF4
	0x034362E0 ADRP X0, 0xCBE000
	0x034362E4 LDR X0, [X0 + 0x6C0]
	0x034362E8 BL 0x1C16CF4
	0x034362EC ADRP X0, 0xCBE000
	0x034362F0 LDR X0, [X0 + 0x6D0]
	0x034362F4 BL 0x1C16CF4
	0x034362F8 ADRP X0, 0xCF8000
	0x034362FC LDR X0, [X0 + 0x7B8]
	0x03436300 BL 0x1C16CF4
	0x03436304 ADRP X0, 0xCF8000
	0x03436308 LDR X0, [X0 + 0x828]
	0x0343630C BL 0x1C16CF4
	0x03436310 ADRP X0, 0xCC0000
	0x03436314 LDR X0, [X0 + 0x1E0]
	0x03436318 BL 0x1C16CF4
	0x0343631C ADRP X0, 0xCC0000
	0x03436320 LDR X0, [X0 + 0x1F0]
	0x03436324 BL 0x1C16CF4
	0x03436328 ADRP X0, 0xCC0000
	0x0343632C LDR X0, [X0 + 0x1F8]
	0x03436330 BL 0x1C16CF4
	0x03436334 ADRP X0, 0xCC6000
	0x03436338 LDR X0, [X0 + 0x3A0]
	0x0343633C BL 0x1C16CF4
	0x03436340 ADRP X0, 0xCE6000
	0x03436344 LDR X0, [X0 + 0x4D8]
	0x03436348 BL 0x1C16CF4
	0x0343634C ADRP X0, 0xCF9000
	0x03436350 LDR X0, [X0 + 0x348]
	0x03436354 BL 0x1C16CF4
	0x03436358 ADRP X0, 0xCC6000
	0x0343635C LDR X0, [X0 + 0x988]
	0x03436360 BL 0x1C16CF4
	0x03436364 ADRP X0, 0xCF8000
	0x03436368 LDR X0, [X0 + 0x7D0]
	0x0343636C BL 0x1C16CF4
	0x03436370 ADRP X0, 0xCF8000
	0x03436374 LDR X0, [X0 + 0x850]
	0x03436378 BL 0x1C16CF4
	0x0343637C ADRP X0, 0xCBD000
	0x03436380 LDR X0, [X0 + 0x988]
	0x03436384 BL 0x1C16CF4
	0x03436388 MOVZ W8, 0x1
	0x0343638C STRB W8, [X20 + 0x673]
	0x03436390 STR X31, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFA9000
	013 Move W8, [X20+1645]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {99}
	019 Move X0, 0xCFB000
	020 Move X0, [X0+696]
	021 Call 0x1C17CF4
	022 Move X0, 0xCFB000
	023 Move X0, [X0+704]
	024 Call 0x1C17CF4
	025 Move X0, 0xCFA000
	026 Move X0, [X0+1640]
	027 Call 0x1C17CF4
	028 Move X0, 0xCC8000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC8000
	032 Move X0, [X0+2536]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC0000
	035 Move X0, [X0+2064]
	036 Call 0x1C17CF4
	037 Move X0, 0xCC0000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move X0, 0xCC0000
	041 Move X0, [X0+1744]
	042 Call 0x1C17CF4
	043 Move X0, 0xCFA000
	044 Move X0, [X0+1976]
	045 Call 0x1C17CF4
	046 Move X0, 0xCFB000
	047 Move X0, [X0+712]
	048 Call 0x1C17CF4
	049 Move X0, 0xCC2000
	050 Move X0, [X0+480]
	051 Call 0x1C17CF4
	052 Move X0, 0xCC2000
	053 Move X0, [X0+496]
	054 Call 0x1C17CF4
	055 Move X0, 0xCC2000
	056 Move X0, [X0+504]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC8000
	059 Move X0, [X0+928]
	060 Call 0x1C17CF4
	061 Move X0, 0xCC1000
	062 Move X0, [X0+2600]
	063 Call 0x1C17CF4
	064 Move X0, 0xCFB000
	065 Move X0, [X0+720]
	066 Call 0x1C17CF4
	067 Move X0, 0xCFB000
	068 Move X0, [X0+728]
	069 Call 0x1C17CF4
	070 Move X0, 0xCE8000
	071 Move X0, [X0+1232]
	072 Call 0x1C17CF4
	073 Move X0, 0xCFB000
	074 Move X0, [X0+736]
	075 Call 0x1C17CF4
	076 Move X0, 0xCC8000
	077 Move X0, [X0+2440]
	078 Call 0x1C17CF4
	079 Move X0, 0xCC8000
	080 Move X0, [X0+1824]
	081 Call 0x1C17CF4
	082 Move X0, 0xCFA000
	083 Move X0, [X0+2000]
	084 Call 0x1C17CF4
	085 Move X0, 0xCFA000
	086 Move X0, [X0+2128]
	087 Call 0x1C17CF4
	088 Move X0, 0xCFB000
	089 Move X0, [X0+744]
	090 Call 0x1C17CF4
	091 Move X0, 0xCFA000
	092 Move X0, [X0+2008]
	093 Call 0x1C17CF4
	094 Move X0, 0xCBF000
	095 Move X0, [X0+2440]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X20+1645], W8
	099 Move [X31+8], X31
	100 Move X27, 0xCFA000
	101 Move W8, [X19]
	102 Move X27, [X27+1640]
	103 Compare W8, 0
	104 JumpIfEqual {343}
	105 Move X21, [X19+32]
	106 Compare X21, 0
	107 JumpIfEqual {434}
	108 Move X23, 0xCC1000
	109 Move X23, [X23+2600]
	110 Move X8, 0xCFB000
	111 Move X0, [X23]
	112 Move X8, [X8+720]
	113 Move X24, [X19+56]
	114 Move W9, [X0+224]
	115 Move X20, [X8]
	116 Compare W9, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X21
	120 Move X1, X31
	121 Call Uri.EscapeDataString, X0
	122 Compare X20, 0
	123 JumpIfEqual {452}
	124 Move X8, 0xCFB000
	125 Move X8, [X8+744]
	126 Move X2, X0
	127 Move X1, [X8]
	128 Move X0, X20
	129 Move X3, X31
	130 Call String.Replace, X0, X1, X2
	131 Move X8, 0xCBF000
	132 Move X8, [X8+2440]
	133 Move X22, [X19+40]
	134 Move X21, X0
	135 Move X20, [X8]
	136 Compare X22, 0
	137 JumpIfEqual {157}
	138 Move X0, [X23]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X22
	144 Move X1, X31
	145 Call Uri.EscapeDataString, X0
	146 Move X8, 0xCFB000
	147 Move X8, [X8+736]
	148 Move X9, 0xCC8000
	149 Move X9, [X9+1824]
	150 Move X2, X0
	151 Move X1, [X8]
	152 Move X3, [X9]
	153 Move X0, X20
	154 Move X4, X31
	155 Call String.Concat, X0, X1, X2, X3
	156 Move X20, X0
	157 Move X22, [X19+48]
	158 Compare X22, 0
	159 JumpIfEqual {179}
	160 Move X0, [X23]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, X22
	166 Move X1, X31
	167 Call Uri.EscapeDataString, X0
	168 Move X8, 0xCFB000
	169 Move X8, [X8+728]
	170 Move X9, 0xCC8000
	171 Move X9, [X9+1824]
	172 Move X2, X0
	173 Move X1, [X8]
	174 Move X3, [X9]
	175 Move X0, X20
	176 Move X4, X31
	177 Call String.Concat, X0, X1, X2, X3
	178 Move X20, X0
	179 Compare X24, 0
	180 JumpIfEqual {453}
	181 Move X0, [X24+32]
	182 Compare X0, 0
	183 JumpIfEqual {454}
	184 Move X1, X31
	185 Call Uri.get_AbsolutePath, X0
	186 Move X8, 0xCC8000
	187 Move X8, [X8+2264]
	188 Move X22, X0
	189 Move X0, [X8]
	190 Move W1, 1
	191 Call 0x1C17D6C
	192 Move X1, X0
	193 Compare X1, 0
	194 JumpIfEqual {455}
	195 Move W8, [X1+24]
	196 Compare W8, 0
	197 JumpIfEqual {456}
	198 Move W8, 47
	199 NotImplemented "Instruction STRH not yet implemented."
	200 Compare X22, 0
	201 JumpIfEqual {457}
	202 Move X0, X22
	203 Move X2, X31
	204 Call String.TrimEnd, X0, X1
	205 Move X1, X21
	206 Move X2, X31
	207 Call String.Concat, X0, X1
	208 Move X8, 0xCC8000
	209 Move X8, [X8+928]
	210 Move X22, X0
	211 Move X23, [X24+32]
	212 Move X0, [X8]
	213 Call 0x1C17F10
	214 Move X21, X0
	215 Move X1, X23
	216 Move X2, X31
	217 Call UriBuilder..ctor, X0, X1
	218 Compare X21, 0
	219 JumpIfEqual {458}
	220 Move X0, X21
	221 Move X1, X22
	222 Move X2, X31
	223 Call UriBuilder.set_Path, X0, X1
	224 Move X0, X21
	225 Move X1, X20
	226 Move X2, X31
	227 Call UriBuilder.set_Query, X0, X1
	228 Move X0, X21
	229 Move X1, X31
	230 Call UriBuilder.get_Uri, X0
	231 Move X8, 0xCE8000
	232 Move X9, 0xCC0000
	233 Move X8, [X8+1232]
	234 Move X9, [X9+1744]
	235 Move X20, X0
	236 Move X21, [X8]
	237 Move X0, [X9]
	238 Call 0x1C17F10
	239 Move X8, 0xCC0000
	240 Move X8, [X8+1728]
	241 Move X22, X0
	242 Move X1, [X8]
	243 Call Dictionary`2<Object, Object>..ctor, X0
	244 Move X0, [X19+64]
	245 Move X1, X31
	246 Call String.IsNullOrEmpty, X0
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {268}
	251 Move X8, 0xCFA000
	252 Move X1, [X19+64]
	253 Move X8, [X8+2008]
	254 Move X0, [X8]
	255 Move X2, X31
	256 Call String.Concat, X0, X1
	257 Compare X22, 0
	258 JumpIfEqual {461}
	259 Move X8, 0xCFA000
	260 Move X8, [X8+2000]
	261 Move X9, 0xCC0000
	262 Move X9, [X9+2064]
	263 Move X2, X0
	264 Move X1, [X8]
	265 Move X3, [X9]
	266 Move X0, X22
	267 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	268 Move X0, [X19+72]
	269 Move X1, X31
	270 Call String.IsNullOrEmpty, X0
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfEqual {321}
	275 Move X0, X31
	276 Call Encoding.get_UTF8
	277 Move X8, 0xCC8000
	278 Move X23, X0
	279 Move X0, [X19+72]
	280 Move X2, [X19+80]
	281 Move X8, [X8+2440]
	282 Move X1, [X8]
	283 Move X3, X31
	284 Call String.Concat, X0, X1, X2
	285 Move X1, X0
	286 Compare X23, 0
	287 JumpIfEqual {462}
	288 Move X8, [X23]
	289 Move X9, [X8+616]
	290 Move X2, [X8+624]
	291 Move X0, X23
	292 NotImplemented "Instruction BLR not yet implemented."
	293 Move X8, 0xCC8000
	294 Move X8, [X8+2536]
	295 Move X23, X0
	296 Move X0, [X8]
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {301}
	300 Call 0x1C17DFC
	301 Move X0, X23
	302 Move X1, X31
	303 Call Convert.ToBase64String, X0
	304 Move X1, X0
	305 Move X8, 0xCF9000
	306 Move X8, [X8+2128]
	307 Move X0, [X8]
	308 Move X2, X31
	309 Call String.Concat, X0, X1
	310 Compare X22, 0
	311 JumpIfEqual {463}
	312 Move X8, 0xCF9000
	313 Move X8, [X8+2000]
	314 Move X9, 0xCBF000
	315 Move X9, [X9+2064]
	316 Move X2, X0
	317 Move X1, [X8]
	318 Move X3, [X9]
	319 Move X0, X22
	320 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	321 Move X23, [X24+16]
	322 Compare X23, 0
	323 JumpIfEqual {459}
	324 Move X10, 0xCF9000
	325 Move X10, [X10+1976]
	326 Move X8, [X23]
	327 Move W25, [X24+24]
	328 Move X26, [X19+88]
	329 Move X24, [X19+96]
	330 Move X1, [X10]
	331 NotImplemented "Instruction LDRH not yet implemented."
	332 Compare X9, 0
	333 JumpIfEqual {340}
	334 Move X10, [X8+176]
	335 Add X10, X10, 8
	336 NotImplemented "Instruction LDUR not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Subtract X9, X9, 1
	339 Add X10, X10, 16
	340 Move W2, 3
	341 Move X0, X23
	342 Call 0x1C5D788
	343 Move X8, [X19+104]
	344 Move TEMP, 0
	345 Not TEMP
	346 Move W9, TEMP
	347 Move [X31+8], X8
	348 Move [X19+104], X31
	349 Move [X19], W9
	350 Move W9, [X10]
	351 Add W9, W9, 3
	352 Add X8, X8, W9
	353 Add X0, X8, 312
	354 Move X8, [X0]
	355 Move X9, [X0+8]
	356 Move X0, X23
	357 Move X1, X21
	358 Move X2, X20
	359 Move X3, X22
	360 Move X4, X31
	361 Move W5, W25
	362 Move X6, X26
	363 Move X7, X24
	364 Move [X31], X9
	365 NotImplemented "Instruction BLR not yet implemented."
	366 Compare X0, 0
	367 JumpIfEqual {460}
	368 Move X8, 0xCC1000
	369 Move X8, [X8+504]
	370 Move X1, [X8]
	371 Call Task`1<Object>.GetAwaiter, X0
	372 Move X8, 0xCC1000
	373 Move X8, [X8+496]
	374 Move [X31+8], X0
	375 Move X1, [X8]
	376 Add X0, X31, 8
	377 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfNotEqual {407}
	382 Move X8, 0xCC1000
	383 Move X8, [X8+480]
	384 Add X0, X31, 8
	385 Move X1, [X8]
	386 Call TaskAwaiter`1<Object>.GetResult, X0
	387 Move X8, 0xCFA000
	388 Move X8, [X8+712]
	389 Move X1, [X8]
	390 Call JsonParser.FromJson, X0
	391 Move TEMP, 1
	392 Not TEMP
	393 Move W8, TEMP
	394 Move [X19+8], W8
	395 Move X20, X0
	396 Move X0, [X27]
	397 Move X21, 0xCFA000
	398 Move W8, [X0+224]
	399 Move X21, [X21+704]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Move X2, [X21]
	404 Move X0, X19
	405 Move X1, X20
	406 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	407 Move [X19], W31
	408 Move X8, [X31+8]
	409 Move [X19+104], X8
	410 Move X0, [X27]
	411 Move W8, [X0+224]
	412 Compare W8, 0
	413 JumpIfNotEqual {415}
	414 Call 0x1C17DFC
	415 Move X8, 0xCFA000
	416 Move X8, [X8+696]
	417 Add X0, X19, 8
	418 Move X3, [X8]
	419 Add X1, X31, 8
	420 Move X2, X19
	421 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	422 Move X20, [X31+80]
	423 Move X19, [X31+88]
	424 Move X22, [X31+64]
	425 Move X21, [X31+72]
	426 Move X24, [X31+48]
	427 Move X23, [X31+56]
	428 Move X26, [X31+32]
	429 Move X25, [X31+40]
	430 Move X30, [X31+16]
	431 Move X27, [X31+24]
	432 Add X31, X31, 96
	433 Return 
	434 Move X0, 0xCC6000
	435 Move X0, [X0+1400]
	436 Call 0x1C17D08
	437 Call 0x1C17F10
	438 Move X20, X0
	439 Move X0, 0xCFA000
	440 Move X0, [X0+752]
	441 Call 0x1C17D08
	442 Move X1, X0
	443 Move X0, X20
	444 Move X2, X31
	445 Call ArgumentException..ctor, X0, X1
	446 Move X0, 0xCFA000
	447 Move X0, [X0+760]
	448 Call 0x1C17D08
	449 Move X1, X0
	450 Move X0, X20
	451 Call 0x1C17DEC
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Call 0x1C17F20
	455 Call 0x1C17F20
	456 Call 0x1C17F28
	457 Call 0x1C17F20
	458 Call 0x1C17F20
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Call 0x1C17F20
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Move X20, X0
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move X0, X20
	467 Call 0x3EB2AD0
	468 Move X20, X0
	469 Move X0, 0xCBE000
	470 Move X0, [X0+2000]
	471 Call 0x1C17D08
	472 Move X8, [X20]
	473 Move X1, [X8]
	474 Call 0x1C18270
	475 Move TEMP, X0
	476 And TEMP, TEMP, 1
	477 Compare TEMP, 1
	478 JumpIfNotEqual {499}
	479 Move X20, [X20]
	480 Call 0x3EB2AE0
	481 Move TEMP, 1
	482 Not TEMP
	483 Move W8, TEMP
	484 Move [X19+8], W8
	485 Move X0, 0xCF9000
	486 Move X0, [X0+1640]
	487 Call 0x1C17D08
	488 Move W8, [X0+224]
	489 Compare W8, 0
	490 JumpIfNotEqual {492}
	491 Call 0x1C17DFC
	492 Move X0, 0xCFA000
	493 Move X0, [X0+768]
	494 Call 0x1C17D08
	495 Move X2, X0
	496 Move X0, X19
	497 Move X1, X20
	498 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	499 Move W0, 8
	500 Call 0x3EB2AF0
	501 Move X8, [X20]
	502 Move [X0], X8
	503 Move X1, 0xA7F000
	504 Add X1, X1, 3672
	505 Move X2, X31
	506 Call 0x3EB2B00
	507 Move X20, X0
	508 Call 0x3EB2AE0
	509 Move X0, X20
	510 Call 0x1D2D690
	511 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03436394 ADRP X28, 0xCF8000
	0x03436398 LDR W8, [X19]
	0x0343639C LDR X28, [X28 + 0x320]
	0x034363A0 CBZ W8, 0x34365F8
	0x034363A4 LDR X8, [X19 + 0x20]
	0x034363A8 CBZ X8, 0x3436730
	0x034363AC LDR X25, [X19 + 0x28]
	0x034363B0 CBZ X25, 0x3436778
	0x034363B4 LDR X0, [X25 + 0x20]
	0x034363B8 CBZ X0, 0x343677C
	0x034363BC ADRP X8, 0xCF9000
	0x034363C0 ADRP X9, 0xCBD000
	0x034363C4 LDR X8, [X8 + 0x348]
	0x034363C8 LDR X9, [X9 + 0x988]
	0x034363CC LDR X21, [X8]
	0x034363D0 LDR X20, [X9]
	0x034363D4 MOV X1, X31
	0x034363D8 BL 0x361B448
	0x034363DC ADRP X8, 0xCC6000
	0x034363E0 LDR X8, [X8 + 0x8D8]
	0x034363E4 MOV X22, X0
	0x034363E8 LDR X0, [X8]
	0x034363EC MOVZ W1, 0x1
	0x034363F0 BL 0x1C16D6C
	0x034363F4 MOV X1, X0
	0x034363F8 CBZ X1, 0x3436780
	0x034363FC LDR W8, [X1 + 0x18]
	0x03436400 CBZ W8, 0x3436784
	0x03436404 MOVZ W8, 0x2F
	0x03436408 STRH W8, [X1 + 0x20]
	0x0343640C CBZ X22, 0x3436788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA8000
	007 Move X21, 0xCF9000
	008 Move W8, [X22+1646]
	009 Move X21, [X21+1640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCFA000
	017 Move X0, [X0+776]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF9000
	020 Move X0, [X0+1640]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1646], W8
	024 Move X0, [X21]
	025 Move X21, 0xCFA000
	026 Move W8, [X0+224]
	027 Move X21, [X21+776]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

