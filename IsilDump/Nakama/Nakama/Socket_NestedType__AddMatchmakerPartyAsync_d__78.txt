Type: Nakama.Socket/<AddMatchmakerPartyAsync>d__78

Method: System.Void MoveNext()

Disassembly:
	0x03481710 BL 0x1C16CF4
	0x03481714 ADRP X0, 0xCAF000
	0x03481718 LDR X0, [X0 + 0xBC8]
	0x0348171C BL 0x1C16CF4
	0x03481720 ADRP X0, 0xC76000
	0x03481724 LDR X0, [X0 + 0x110]
	0x03481728 BL 0x1C16CF4
	0x0348172C MOVZ W8, 0x1
	0x03481730 STRB W8, [X20 + 0x8C2]
	0x03481734 STR X31, [X31 + 0x8]
	0x03481738 ADRP X23, 0xCAF000
	0x0348173C LDR W8, [X19]
	0x03481740 LDR X23, [X23 + 0xCC0]
	0x03481744 CBZ W8, 0x3481874
	0x03481748 LDR X20, [X19 + 0x20]
	0x0348174C CBZ X20, 0x34818EC
	0x03481750 ADD X0, X20, 0x10
	0x03481754 MOV X1, X31
	0x03481758 BL 0x33EB14C
	0x0348175C ADRP X8, 0xCAF000
	0x03481760 LDR X8, [X8 + 0xBC8]
	0x03481764 MOV W22, W0
	0x03481768 LDR X0, [X8]
	0x0348176C BL 0x1C16F10
	0x03481770 MOV X21, X0
	0x03481774 MOV X1, X31
	0x03481778 BL 0x33BDD8C
	0x0348177C ADRP X8, 0xC72000
	0x03481780 LDR X8, [X8 + 0x758]
	0x03481784 STR W22, [X31 + 0x4]
	0x03481788 LDR X0, [X8]
	0x0348178C ADD X1, X31, 0x4
	0x03481790 BL 0x1C16E04
	0x03481794 MOV X1, X0
	0x03481798 ADRP X8, 0xC76000
	0x0348179C LDR X8, [X8 + 0x110]
	0x034817A0 LDR X0, [X8]
	0x034817A4 MOV X2, X31
	0x034817A8 BL 0x321EFD0
	0x034817AC CBZ X21, 0x34818F0
	0x034817B0 ADRP X8, 0xCAF000
	0x034817B4 LDR X8, [X8 + 0xF60]
	0x034817B8 STR X0, [X21 + 0x10]
	0x034817BC LDR X0, [X8]
	0x034817C0 BL 0x1C16F10
	0x034817C4 MOV X22, X0
	0x034817C8 MOV X1, X31
	0x034817CC BL 0x343ECA0
	0x034817D0 CBZ X22, 0x34818F4
	0x034817D4 LDRB W8, [X19 + 0x28]
	0x034817D8 STRB W8, [X22 + 0x10]
	0x034817DC LDRB W8, [X19 + 0x29]
	0x034817E0 STRB W8, [X22 + 0x11]
	0x034817E4 LDR X8, [X19 + 0x30]
	0x034817E8 STR X8, [X22 + 0x18]
	0x034817EC LDR W8, [X19 + 0x38]
	0x034817F0 STR W8, [X22 + 0x20]
	0x034817F4 STR X22, [X21 + 0x20]
	0x034817F8 MOV X0, X20
	0x034817FC MOV X1, X21
	0x03481800 MOV X2, X31
	0x03481804 BL 0x347BA8C
	0x03481808 CBZ X0, 0x34818F8
	0x0348180C ADRP X8, 0xCAF000
	0x03481810 LDR X8, [X8 + 0xE98]
	0x03481814 LDR X1, [X8]
	0x03481818 BL 0x269F5D0
	0x0348181C ADRP X8, 0xCAF000
	0x03481820 LDR X8, [X8 + 0xE90]
	0x03481824 STR X0, [X31 + 0x8]
	0x03481828 LDR X1, [X8]
	0x0348182C ADD X0, X31, 0x8
	0x03481830 BL 0x2677430
	0x03481834 TBNZ X0, 0x0, 0x3481888
	0x03481838 STR W31, [X19]
	0x0348183C LDR X8, [X31 + 0x8]
	0x03481840 STR X8, [X19 + 0x40]
	0x03481844 LDR X0, [X23]
	0x03481848 LDR W8, [X0 + 0xE0]
	0x0348184C CBNZ W8, 0x3481854
	0x03481850 BL 0x1C16DFC
	0x03481854 ADRP X8, 0xCAF000
	0x03481858 LDR X8, [X8 + 0xF50]
	0x0348185C ADD X0, X19, 0x8
	0x03481860 LDR X3, [X8]
	0x03481864 ADD X1, X31, 0x8
	0x03481868 MOV X2, X19
	0x0348186C BL 0x1FC20BC
	0x03481870 B 0x34818D4
	0x03481874 LDR X8, [X19 + 0x40]
	0x03481878 MOVN W9, 0x0
	0x0348187C STR X8, [X31 + 0x8]
	0x03481880 STR X31, [X19 + 0x40]
	0x03481884 STR W9, [X19]
	0x03481888 ADRP X8, 0xCAF000
	0x0348188C LDR X8, [X8 + 0xE88]
	0x03481890 ADD X0, X31, 0x8
	0x03481894 LDR X1, [X8]
	0x03481898 BL 0x2677474
	0x0348189C CBZ X0, 0x34818E8
	0x034818A0 MOVN W8, 0x1
	0x034818A4 LDR X20, [X0 + 0x18]
	0x034818A8 STR W8, [X19], #0x8
	0x034818AC LDR X0, [X23]
	0x034818B0 ADRP X21, 0xCAF000
	0x034818B4 LDR W8, [X0 + 0xE0]
	0x034818B8 LDR X21, [X21 + 0xF58]
	0x034818BC CBNZ W8, 0x34818C4
	0x034818C0 BL 0x1C16DFC
	0x034818C4 LDR X2, [X21]
	0x034818C8 MOV X0, X19
	0x034818CC MOV X1, X20
	0x034818D0 BL 0x26322B0
	0x034818D4 LDP X20, X19, [X31 + 0x30]
	0x034818D8 LDP X22, X21, [X31 + 0x20]
	0x034818DC LDP X30, X23, [X31 + 0x10]
	0x034818E0 ADD X31, X31, 0x40
	0x034818E4 RET
	0x034818E8 BL 0x1C16F20
	0x034818EC BL 0x1C16F20
	0x034818F0 BL 0x1C16F20
	0x034818F4 BL 0x1C16F20
	0x034818F8 BL 0x1C16F20
	0x034818FC B 0x3481928
	0x03481900 B 0x3481928
	0x03481904 B 0x3481928
	0x03481908 B 0x3481928
	0x0348190C B 0x3481928
	0x03481910 B 0x3481928
	0x03481914 B 0x3481928
	0x03481918 B 0x3481928
	0x0348191C B 0x3481928
	0x03481920 B 0x3481928
	0x03481924 B 0x3481928
	0x03481928 MOV X20, X0
	0x0348192C CMP W1, 0x1
	0x03481930 B.NE 0x34819CC
	0x03481934 MOV X0, X20
	0x03481938 BL 0x3EB1AD0
	0x0348193C MOV X20, X0
	0x03481940 ADRP X0, 0xC72000
	0x03481944 LDR X0, [X0 + 0x7D0]
	0x03481948 BL 0x1C16D08
	0x0348194C LDR X8, [X20]
	0x03481950 LDR X1, [X8]
	0x03481954 BL 0x1C17270
	0x03481958 TBZ X0, 0x0, 0x34819A4
	0x0348195C LDR X20, [X20]
	0x03481960 BL 0x3EB1AE0
	0x03481964 MOVN W8, 0x1
	0x03481968 STR W8, [X19], #0x8
	0x0348196C ADRP X0, 0xCAF000
	0x03481970 LDR X0, [X0 + 0xCC0]
	0x03481974 BL 0x1C16D08
	0x03481978 LDR W8, [X0 + 0xE0]
	0x0348197C CBNZ W8, 0x3481984
	0x03481980 BL 0x1C16DFC
	0x03481984 ADRP X0, 0xCAF000
	0x03481988 LDR X0, [X0 + 0xF68]
	0x0348198C BL 0x1C16D08
	0x03481990 MOV X2, X0
	0x03481994 MOV X0, X19
	0x03481998 MOV X1, X20
	0x0348199C BL 0x26324C8
	0x034819A0 B 0x34818D4
	0x034819A4 MOVZ W0, 0x8
	0x034819A8 BL 0x3EB1AF0
	0x034819AC LDR X8, [X20]
	0x034819B0 STR X8, [X0]
	0x034819B4 ADRP X1, 0xA33000
	0x034819B8 ADD X1, X1, 0xE58
	0x034819BC MOV X2, X31
	0x034819C0 BL 0x3EB1B00
	0x034819C4 MOV X20, X0
	0x034819C8 BL 0x3EB1AE0
	0x034819CC MOV X0, X20
	0x034819D0 BL 0x1D2C690
	0x034819D4 BL 0x1990590
	0x034819D8 STR X30, [X31 - 0x30]!
	0x034819DC STP X22, X21, [X31 + 0x10]
	0x034819E0 STP X20, X19, [X31 + 0x20]
	0x034819E4 ADRP X22, 0xF5C000
	0x034819E8 ADRP X21, 0xCAF000
	0x034819EC LDRB W8, [X22 + 0x8C3]
	0x034819F0 LDR X21, [X21 + 0xCC0]
	0x034819F4 MOV X19, X1
	0x034819F8 MOV X20, X0
	0x034819FC TBNZ X8, 0x0, 0x3481A20
	0x03481A00 ADRP X0, 0xCAF000
	0x03481A04 LDR X0, [X0 + 0xF70]
	0x03481A08 BL 0x1C16CF4
	0x03481A0C ADRP X0, 0xCAF000
	0x03481A10 LDR X0, [X0 + 0xCC0]
	0x03481A14 BL 0x1C16CF4
	0x03481A18 MOVZ W8, 0x1
	0x03481A1C STRB W8, [X22 + 0x8C3]
	0x03481A20 LDR X0, [X21]
	0x03481A24 ADRP X21, 0xCAF000
	0x03481A28 LDR W8, [X0 + 0xE0]
	0x03481A2C LDR X21, [X21 + 0xF70]
	0x03481A30 CBNZ W8, 0x3481A38
	0x03481A34 BL 0x1C16DFC
	0x03481A38 LDR X2, [X21]
	0x03481A3C ADD X0, X20, 0x8
	0x03481A40 MOV X1, X19
	0x03481A44 LDP X20, X19, [X31 + 0x20]
	0x03481A48 LDP X22, X21, [X31 + 0x10]
	0x03481A4C LDR X30, [X31], #0x30
	0x03481A50 B 0x2632228
	0x03481A54 SUB X31, X31, 0x50
	0x03481A58 STR X30, [X31 + 0x10]
	0x03481A5C STP X24, X23, [X31 + 0x20]
	0x03481A60 STP X22, X21, [X31 + 0x30]
	0x03481A64 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xF5D000
	009 Move W8, [X20+2234]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0xCB0000
	016 Move X0, [X0+3760]
	017 Call 0x1C17CF4
	018 Move X0, 0xCB0000
	019 Move X0, [X0+3768]
	020 Call 0x1C17CF4
	021 Move X0, 0xCB0000
	022 Move X0, [X0+3096]
	023 Call 0x1C17CF4
	024 Move X0, 0xC73000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB0000
	028 Move X0, [X0+3776]
	029 Call 0x1C17CF4
	030 Move X0, 0xCB0000
	031 Move X0, [X0+3720]
	032 Call 0x1C17CF4
	033 Move X0, 0xCB0000
	034 Move X0, [X0+3728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCB0000
	037 Move X0, [X0+3736]
	038 Call 0x1C17CF4
	039 Move X0, 0xCB0000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0xC77000
	043 Move X0, [X0+272]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2234], W8
	047 Move [X31+8], X31
	048 Move X23, 0xCB0000
	049 Move W8, [X19]
	050 Move X23, [X23+3096]
	051 Compare W8, 0
	052 JumpIfEqual {140}
	053 Move X20, [X19+32]
	054 Compare X20, 0
	055 JumpIfEqual {179}
	056 Add X0, X20, 16
	057 Move X1, X31
	058 Call Interlocked.Increment, X0
	059 Move X8, 0xCB0000
	060 Move X8, [X8+3016]
	061 Move W22, W0
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X21, X0
	065 Move X1, X31
	066 Call Object..ctor, X0
	067 Move X8, 0xC73000
	068 Move X8, [X8+1880]
	069 Move [X31+4], W22
	070 Move X0, [X8]
	071 Add X1, X31, 4
	072 Call 0x1C17E04
	073 Move X1, X0
	074 Move X8, 0xC77000
	075 Move X8, [X8+272]
	076 Move X0, [X8]
	077 Move X2, X31
	078 Call String.Format, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {180}
	081 Move X8, 0xCB0000
	082 Move X8, [X8+3776]
	083 Move [X21+16], X0
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X22, X0
	087 Move X1, X31
	088 Call PartyMatchmakerAdd..ctor, X0
	089 Compare X22, 0
	090 JumpIfEqual {181}
	091 Move X8, [X19+40]
	092 Move [X22+16], X8
	093 Move X8, [X19+48]
	094 Move [X22+32], X8
	095 Move V0, [X19+56]
	096 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	097 Move [X22+24], D0
	098 Move X8, [X19+64]
	099 Move [X22+40], X8
	100 Move X8, [X19+72]
	101 Move [X22+48], X8
	102 Move X8, [X19+80]
	103 Move [X22+56], X8
	104 Move [X21+352], X22
	105 Move X0, X20
	106 Move X1, X21
	107 Move X2, X31
	108 Call Socket.SendAsync, X0, X1
	109 Compare X0, 0
	110 JumpIfEqual {182}
	111 Move X8, 0xCB0000
	112 Move X8, [X8+3736]
	113 Move X1, [X8]
	114 Call Task`1<Object>.GetAwaiter, X0
	115 Move X8, 0xCB0000
	116 Move X8, [X8+3728]
	117 Move [X31+8], X0
	118 Move X1, [X8]
	119 Add X0, X31, 8
	120 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {147}
	125 Move [X19], W31
	126 Move X8, [X31+8]
	127 Move [X19+88], X8
	128 Move X0, [X23]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X8, 0xCB0000
	134 Move X8, [X8+3760]
	135 Add X0, X19, 8
	136 Move X3, [X8]
	137 Add X1, X31, 8
	138 Move X2, X19
	139 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	140 Move X8, [X19+88]
	141 Move TEMP, 0
	142 Not TEMP
	143 Move W9, TEMP
	144 Move [X31+8], X8
	145 Move [X19+88], X31
	146 Move [X19], W9
	147 Move X8, 0xCB0000
	148 Move X8, [X8+3720]
	149 Add X0, X31, 8
	150 Move X1, [X8]
	151 Call TaskAwaiter`1<Object>.GetResult, X0
	152 Compare X0, 0
	153 JumpIfEqual {178}
	154 Move TEMP, 1
	155 Not TEMP
	156 Move W8, TEMP
	157 Move X20, [X0+368]
	158 Move [X19+8], W8
	159 Move X0, [X23]
	160 Move X21, 0xCB0000
	161 Move W8, [X0+224]
	162 Move X21, [X21+3768]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X2, [X21]
	167 Move X0, X19
	168 Move X1, X20
	169 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	170 Move X20, [X31+48]
	171 Move X19, [X31+56]
	172 Move X22, [X31+32]
	173 Move X21, [X31+40]
	174 Move X30, [X31+16]
	175 Move X23, [X31+24]
	176 Add X31, X31, 64
	177 Return 
	178 Call 0x1C17F20
	179 Call 0x1C17F20
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Move X20, X0
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, X20
	186 Call 0x3EB2AD0
	187 Move X20, X0
	188 Move X0, 0xC73000
	189 Move X0, [X0+2000]
	190 Call 0x1C17D08
	191 Move X8, [X20]
	192 Move X1, [X8]
	193 Call 0x1C18270
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {218}
	198 Move X20, [X20]
	199 Call 0x3EB2AE0
	200 Move TEMP, 1
	201 Not TEMP
	202 Move W8, TEMP
	203 Move [X19+8], W8
	204 Move X0, 0xCB0000
	205 Move X0, [X0+3096]
	206 Call 0x1C17D08
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X0, 0xCB0000
	212 Move X0, [X0+3784]
	213 Call 0x1C17D08
	214 Move X2, X0
	215 Move X0, X19
	216 Move X1, X20
	217 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	218 Move W0, 8
	219 Call 0x3EB2AF0
	220 Move X8, [X20]
	221 Move [X0], X8
	222 Move X1, 0xA34000
	223 Add X1, X1, 3672
	224 Move X2, X31
	225 Call 0x3EB2B00
	226 Move X20, X0
	227 Call 0x3EB2AE0
	228 Move X0, X20
	229 Call 0x1D2D690
	230 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03481A68 ADRP X20, 0xF5C000
	0x03481A6C LDRB W8, [X20 + 0x8C4]
	0x03481A70 MOV X19, X0
	0x03481A74 TBNZ X8, 0x0, 0x3481B04
	0x03481A78 ADRP X0, 0xCAF000
	0x03481A7C LDR X0, [X0 + 0xF78]
	0x03481A80 BL 0x1C16CF4
	0x03481A84 ADRP X0, 0xCAF000
	0x03481A88 LDR X0, [X0 + 0xEE0]
	0x03481A8C BL 0x1C16CF4
	0x03481A90 ADRP X0, 0xCAF000
	0x03481A94 LDR X0, [X0 + 0xC50]
	0x03481A98 BL 0x1C16CF4
	0x03481A9C ADRP X0, 0xCAF000
	0x03481AA0 LDR X0, [X0 + 0xF80]
	0x03481AA4 BL 0x1C16CF4
	0x03481AA8 ADRP X0, 0xC72000
	0x03481AAC LDR X0, [X0 + 0x758]
	0x03481AB0 BL 0x1C16CF4
	0x03481AB4 ADRP X0, 0xCAF000
	0x03481AB8 LDR X0, [X0 + 0xF88]
	0x03481ABC BL 0x1C16CF4
	0x03481AC0 ADRP X0, 0xCAF000
	0x03481AC4 LDR X0, [X0 + 0xE88]
	0x03481AC8 BL 0x1C16CF4
	0x03481ACC ADRP X0, 0xCAF000
	0x03481AD0 LDR X0, [X0 + 0xE90]
	0x03481AD4 BL 0x1C16CF4
	0x03481AD8 ADRP X0, 0xCAF000
	0x03481ADC LDR X0, [X0 + 0xE98]
	0x03481AE0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF5D000
	007 Move X21, 0xCB0000
	008 Move W8, [X22+2235]
	009 Move X21, [X21+3096]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCB0000
	017 Move X0, [X0+3792]
	018 Call 0x1C17CF4
	019 Move X0, 0xCB0000
	020 Move X0, [X0+3096]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2235], W8
	024 Move X0, [X21]
	025 Move X21, 0xCB0000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3792]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

