Type: Nakama.ApiClient/<HealthcheckAsync>d__7

Method: System.Void MoveNext()

Disassembly:
	0x034255EC LDP X20, X19, [X31 + 0x60]
	0x034255F0 LDP X22, X21, [X31 + 0x50]
	0x034255F4 LDP X24, X23, [X31 + 0x40]
	0x034255F8 LDP X26, X25, [X31 + 0x30]
	0x034255FC LDP X28, X27, [X31 + 0x20]
	0x03425600 LDR X30, [X31 + 0x10]
	0x03425604 ADD X31, X31, 0x70
	0x03425608 RET
	0x0342560C ADRP X0, 0xCD6000
	0x03425610 LDR X0, [X0 + 0x578]
	0x03425614 BL 0x1C16D08
	0x03425618 BL 0x1C16F10
	0x0342561C MOV X20, X0
	0x03425620 ADRP X0, 0xD09000
	0x03425624 LDR X0, [X0 + 0x858]
	0x03425628 BL 0x1C16D08
	0x0342562C MOV X1, X0
	0x03425630 MOV X0, X20
	0x03425634 MOV X2, X31
	0x03425638 BL 0x3314A68
	0x0342563C ADRP X0, 0xD09000
	0x03425640 LDR X0, [X0 + 0xDA8]
	0x03425644 BL 0x1C16D08
	0x03425648 MOV X1, X0
	0x0342564C MOV X0, X20
	0x03425650 BL 0x1C16DEC
	0x03425654 BL 0x1C16F20
	0x03425658 BL 0x1C16F20
	0x0342565C BL 0x1C16F20
	0x03425660 BL 0x1C16F28
	0x03425664 BL 0x1C16F20
	0x03425668 BL 0x1C16F20
	0x0342566C BL 0x1C16F20
	0x03425670 BL 0x1C16F20
	0x03425674 BL 0x1C16F20
	0x03425678 BL 0x1C16F20
	0x0342567C BL 0x1C16F20
	0x03425680 B 0x34256EC
	0x03425684 B 0x34256EC
	0x03425688 B 0x34256EC
	0x0342568C B 0x34256EC
	0x03425690 B 0x34256EC
	0x03425694 B 0x34256EC
	0x03425698 B 0x34256EC
	0x0342569C B 0x34256EC
	0x034256A0 B 0x34256EC
	0x034256A4 B 0x34256EC
	0x034256A8 B 0x34256EC
	0x034256AC B 0x34256EC
	0x034256B0 B 0x34256EC
	0x034256B4 B 0x34256EC
	0x034256B8 B 0x34256EC
	0x034256BC B 0x34256EC
	0x034256C0 B 0x34256EC
	0x034256C4 B 0x34256EC
	0x034256C8 B 0x34256EC
	0x034256CC B 0x34256EC
	0x034256D0 B 0x34256EC
	0x034256D4 B 0x34256EC
	0x034256D8 B 0x34256EC
	0x034256DC B 0x34256EC
	0x034256E0 B 0x34256EC
	0x034256E4 B 0x34256EC
	0x034256E8 B 0x34256EC
	0x034256EC MOV X20, X0
	0x034256F0 CMP W1, 0x1
	0x034256F4 B.NE 0x3425784
	0x034256F8 MOV X0, X20
	0x034256FC BL 0x3EB1AD0
	0x03425700 MOV X20, X0
	0x03425704 ADRP X0, 0xCCE000
	0x03425708 LDR X0, [X0 + 0x7D0]
	0x0342570C BL 0x1C16D08
	0x03425710 LDR X8, [X20]
	0x03425714 LDR X1, [X8]
	0x03425718 BL 0x1C17270
	0x0342571C TBZ X0, 0x0, 0x342575C
	0x03425720 LDR X20, [X20]
	0x03425724 BL 0x3EB1AE0
	0x03425728 MOVN W8, 0x1
	0x0342572C STR W8, [X19], #0x8
	0x03425730 ADRP X0, 0xCD1000
	0x03425734 LDR X0, [X0 + 0x280]
	0x03425738 BL 0x1C16D08
	0x0342573C LDR W8, [X0 + 0xE0]
	0x03425740 CBNZ W8, 0x3425748
	0x03425744 BL 0x1C16DFC
	0x03425748 MOV X0, X19
	0x0342574C MOV X1, X20
	0x03425750 MOV X2, X31
	0x03425754 BL 0x32C4908
	0x03425758 B 0x34255EC
	0x0342575C MOVZ W0, 0x8
	0x03425760 BL 0x3EB1AF0
	0x03425764 LDR X8, [X20]
	0x03425768 STR X8, [X0]
	0x0342576C ADRP X1, 0xA8F000
	0x03425770 ADD X1, X1, 0xE58
	0x03425774 MOV X2, X31
	0x03425778 BL 0x3EB1B00
	0x0342577C MOV X20, X0
	0x03425780 BL 0x3EB1AE0
	0x03425784 MOV X0, X20
	0x03425788 BL 0x1D2C690
	0x0342578C BL 0x1990590
	0x03425790 STR X30, [X31 - 0x30]!
	0x03425794 STP X22, X21, [X31 + 0x10]
	0x03425798 STP X20, X19, [X31 + 0x20]
	0x0342579C ADRP X21, 0xFB8000
	0x034257A0 ADRP X22, 0xCD1000
	0x034257A4 LDRB W8, [X21 + 0x630]
	0x034257A8 LDR X22, [X22 + 0x280]
	0x034257AC MOV X19, X1
	0x034257B0 MOV X20, X0
	0x034257B4 TBNZ X8, 0x0, 0x34257CC
	0x034257B8 ADRP X0, 0xCD1000
	0x034257BC LDR X0, [X0 + 0x280]
	0x034257C0 BL 0x1C16CF4
	0x034257C4 MOVZ W8, 0x1
	0x034257C8 STRB W8, [X21 + 0x630]
	0x034257CC LDR X0, [X22]
	0x034257D0 LDR W8, [X0 + 0xE0]
	0x034257D4 CBNZ W8, 0x34257DC
	0x034257D8 BL 0x1C16DFC
	0x034257DC ADD X0, X20, 0x8
	0x034257E0 MOV X1, X19
	0x034257E4 LDP X20, X19, [X31 + 0x20]
	0x034257E8 LDP X22, X21, [X31 + 0x10]
	0x034257EC MOV X2, X31
	0x034257F0 LDR X30, [X31], #0x30
	0x034257F4 B 0x32C477C
	0x034257F8 SUB X31, X31, 0x60
	0x034257FC STP X30, X27, [X31 + 0x10]
	0x03425800 STP X26, X25, [X31 + 0x20]
	0x03425804 STP X24, X23, [X31 + 0x30]
	0x03425808 STP X22, X21, [X31 + 0x40]
	0x0342580C STP X20, X19, [X31 + 0x50]
	0x03425810 ADRP X20, 0xFB8000
	0x03425814 LDRB W8, [X20 + 0x631]
	0x03425818 MOV X19, X0
	0x0342581C TBNZ X8, 0x0, 0x3425900
	0x03425820 ADRP X0, 0xD09000
	0x03425824 LDR X0, [X0 + 0xDB0]
	0x03425828 BL 0x1C16CF4
	0x0342582C ADRP X0, 0xCD1000
	0x03425830 LDR X0, [X0 + 0x280]
	0x03425834 BL 0x1C16CF4
	0x03425838 ADRP X0, 0xCD7000
	0x0342583C LDR X0, [X0 + 0x8D8]
	0x03425840 BL 0x1C16CF4
	0x03425844 ADRP X0, 0xCCF000
	0x03425848 LDR X0, [X0 + 0x810]
	0x0342584C BL 0x1C16CF4
	0x03425850 ADRP X0, 0xCCF000
	0x03425854 LDR X0, [X0 + 0x6C0]
	0x03425858 BL 0x1C16CF4
	0x0342585C ADRP X0, 0xCCF000
	0x03425860 LDR X0, [X0 + 0x6D0]
	0x03425864 BL 0x1C16CF4
	0x03425868 ADRP X0, 0xD09000
	0x0342586C LDR X0, [X0 + 0x7B8]
	0x03425870 BL 0x1C16CF4
	0x03425874 ADRP X0, 0xCD1000
	0x03425878 LDR X0, [X0 + 0x1E0]
	0x0342587C BL 0x1C16CF4
	0x03425880 ADRP X0, 0xCD1000
	0x03425884 LDR X0, [X0 + 0x1F0]
	0x03425888 BL 0x1C16CF4
	0x0342588C ADRP X0, 0xCD1000
	0x03425890 LDR X0, [X0 + 0x1F8]
	0x03425894 BL 0x1C16CF4
	0x03425898 ADRP X0, 0xCD7000
	0x0342589C LDR X0, [X0 + 0x3A0]
	0x034258A0 BL 0x1C16CF4
	0x034258A4 ADRP X0, 0xCD0000
	0x034258A8 LDR X0, [X0 + 0xA28]
	0x034258AC BL 0x1C16CF4
	0x034258B0 ADRP X0, 0xCF7000
	0x034258B4 LDR X0, [X0 + 0x4D8]
	0x034258B8 BL 0x1C16CF4
	0x034258BC ADRP X0, 0xD09000
	0x034258C0 LDR X0, [X0 + 0xDB8]
	0x034258C4 BL 0x1C16CF4
	0x034258C8 ADRP X0, 0xD09000
	0x034258CC LDR X0, [X0 + 0x800]
	0x034258D0 BL 0x1C16CF4
	0x034258D4 ADRP X0, 0xD09000
	0x034258D8 LDR X0, [X0 + 0x7D0]
	0x034258DC BL 0x1C16CF4
	0x034258E0 ADRP X0, 0xD09000
	0x034258E4 LDR X0, [X0 + 0x7D8]
	0x034258E8 BL 0x1C16CF4
	0x034258EC ADRP X0, 0xCCE000
	0x034258F0 LDR X0, [X0 + 0x988]
	0x034258F4 BL 0x1C16CF4
	0x034258F8 MOVZ W8, 0x1
	0x034258FC STRB W8, [X20 + 0x631]
	0x03425900 STR X31, [X31 + 0x8]
	0x03425904 ADRP X27, 0xCD1000
	0x03425908 LDR W8, [X19]
	0x0342590C LDR X27, [X27 + 0x280]
	0x03425910 CBZ W8, 0x3425B04
	0x03425914 LDR X21, [X19 + 0x20]
	0x03425918 CBZ X21, 0x3425C18
	0x0342591C ADRP X8, 0xCD0000
	0x03425920 LDR X8, [X8 + 0xA28]
	0x03425924 LDR X0, [X8]
	0x03425928 ADRP X8, 0xD09000
	0x0342592C LDR X8, [X8 + 0xDB8]
	0x03425930 LDR X24, [X19 + 0x28]
	0x03425934 LDR W9, [X0 + 0xE0]
	0x03425938 LDR X20, [X8]
	0x0342593C CBNZ W9, 0x3425944
	0x03425940 BL 0x1C16DFC
	0x03425944 MOV X0, X21
	0x03425948 MOV X1, X31
	0x0342594C BL 0x3624D20
	0x03425950 CBZ X20, 0x3425C60
	0x03425954 ADRP X8, 0xD09000
	0x03425958 LDR X8, [X8 + 0x800]
	0x0342595C MOV X2, X0
	0x03425960 LDR X1, [X8]
	0x03425964 MOV X0, X20
	0x03425968 MOV X3, X31
	0x0342596C BL 0x32293BC
	0x03425970 CBZ X24, 0x3425C64
	0x03425974 MOV X21, X0
	0x03425978 LDR X0, [X24 + 0x20]
	0x0342597C CBZ X0, 0x3425C68
	0x03425980 ADRP X8, 0xCCE000
	0x03425984 LDR X8, [X8 + 0x988]
	0x03425988 LDR X20, [X8]
	0x0342598C MOV X1, X31
	0x03425990 BL 0x361B448
	0x03425994 ADRP X8, 0xCD7000
	0x03425998 LDR X8, [X8 + 0x8D8]
	0x0342599C MOV X22, X0
	0x034259A0 LDR X0, [X8]
	0x034259A4 MOVZ W1, 0x1
	0x034259A8 BL 0x1C16D6C
	0x034259AC MOV X1, X0
	0x034259B0 CBZ X1, 0x3425C6C
	0x034259B4 LDR W8, [X1 + 0x18]
	0x034259B8 CBZ W8, 0x3425C70
	0x034259BC MOVZ W8, 0x2F
	0x034259C0 STRH W8, [X1 + 0x20]
	0x034259C4 CBZ X22, 0x3425C74
	0x034259C8 MOV X0, X22
	0x034259CC MOV X2, X31
	0x034259D0 BL 0x322BC58
	0x034259D4 MOV X1, X21
	0x034259D8 MOV X2, X31
	0x034259DC BL 0x321B938
	0x034259E0 ADRP X8, 0xCD7000
	0x034259E4 LDR X8, [X8 + 0x3A0]
	0x034259E8 MOV X22, X0
	0x034259EC LDR X23, [X24 + 0x20]
	0x034259F0 LDR X0, [X8]
	0x034259F4 BL 0x1C16F10
	0x034259F8 MOV X21, X0
	0x034259FC MOV X1, X23
	0x03425A00 MOV X2, X31
	0x03425A04 BL 0x36281F8
	0x03425A08 CBZ X21, 0x3425C78
	0x03425A0C MOV X0, X21
	0x03425A10 MOV X1, X22
	0x03425A14 MOV X2, X31
	0x03425A18 BL 0x36288CC
	0x03425A1C MOV X0, X21
	0x03425A20 MOV X1, X20
	0x03425A24 MOV X2, X31
	0x03425A28 BL 0x3628980
	0x03425A2C MOV X0, X21
	0x03425A30 MOV X1, X31
	0x03425A34 BL 0x3628A38
	0x03425A38 ADRP X8, 0xCF7000
	0x03425A3C ADRP X9, 0xCCF000
	0x03425A40 LDR X8, [X8 + 0x4D8]
	0x03425A44 LDR X9, [X9 + 0x6D0]
	0x03425A48 MOV X20, X0
	0x03425A4C LDR X21, [X8]
	0x03425A50 LDR X0, [X9]
	0x03425A54 BL 0x1C16F10
	0x03425A58 ADRP X8, 0xCCF000
	0x03425A5C LDR X8, [X8 + 0x6C0]
	0x03425A60 MOV X22, X0
	0x03425A64 LDR X1, [X8]
	0x03425A68 BL 0x2AA4804
	0x03425A6C ADRP X8, 0xD09000
	0x03425A70 LDR X8, [X8 + 0x7D8]
	0x03425A74 LDR X1, [X19 + 0x30]
	0x03425A78 LDR X0, [X8]
	0x03425A7C MOV X2, X31
	0x03425A80 BL 0x321B938
	0x03425A84 CBZ X22, 0x3425C7C
	0x03425A88 ADRP X8, 0xD09000
	0x03425A8C LDR X8, [X8 + 0x7D0]
	0x03425A90 ADRP X9, 0xCCF000
	0x03425A94 LDR X9, [X9 + 0x810]
	0x03425A98 MOV X2, X0
	0x03425A9C LDR X1, [X8]
	0x03425AA0 LDR X3, [X9]
	0x03425AA4 MOV X0, X22
	0x03425AA8 BL 0x2AA5098
	0x03425AAC LDR X23, [X24 + 0x10]
	0x03425AB0 CBZ X23, 0x3425C80
	0x03425AB4 ADRP X10, 0xD09000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFB9000
	013 Move W8, [X20+1579]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {69}
	019 Move X0, 0xD0A000
	020 Move X0, [X0+3432]
	021 Call 0x1C17CF4
	022 Move X0, 0xCD2000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xCD8000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xCD0000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xCD0000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xCD0000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xD0A000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0xCD2000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xCD2000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xCD2000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xCD8000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xD0A000
	053 Move X0, [X0+3440]
	054 Call 0x1C17CF4
	055 Move X0, 0xCF8000
	056 Move X0, [X0+1232]
	057 Call 0x1C17CF4
	058 Move X0, 0xD0A000
	059 Move X0, [X0+2000]
	060 Call 0x1C17CF4
	061 Move X0, 0xD0A000
	062 Move X0, [X0+2008]
	063 Call 0x1C17CF4
	064 Move X0, 0xCCF000
	065 Move X0, [X0+2440]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X20+1579], W8
	069 Move [X31+8], X31
	070 Move X27, 0xCD2000
	071 Move W8, [X19]
	072 Move X27, [X27+640]
	073 Compare W8, 0
	074 JumpIfEqual {186}
	075 Move X24, [X19+32]
	076 Compare X24, 0
	077 JumpIfEqual {269}
	078 Move X0, [X24+32]
	079 Compare X0, 0
	080 JumpIfEqual {270}
	081 Move X8, 0xD0A000
	082 Move X9, 0xCCF000
	083 Move X8, [X8+3440]
	084 Move X9, [X9+2440]
	085 Move X21, [X8]
	086 Move X20, [X9]
	087 Move X1, X31
	088 Call Uri.get_AbsolutePath, X0
	089 Move X8, 0xCD8000
	090 Move X8, [X8+2264]
	091 Move X22, X0
	092 Move X0, [X8]
	093 Move W1, 1
	094 Call 0x1C17D6C
	095 Move X1, X0
	096 Compare X1, 0
	097 JumpIfEqual {271}
	098 Move W8, [X1+24]
	099 Compare W8, 0
	100 JumpIfEqual {272}
	101 Move W8, 47
	102 NotImplemented "Instruction STRH not yet implemented."
	103 Compare X22, 0
	104 JumpIfEqual {273}
	105 Move X0, X22
	106 Move X2, X31
	107 Call String.TrimEnd, X0, X1
	108 Move X1, X21
	109 Move X2, X31
	110 Call String.Concat, X0, X1
	111 Move X8, 0xCD8000
	112 Move X8, [X8+928]
	113 Move X22, X0
	114 Move X23, [X24+32]
	115 Move X0, [X8]
	116 Call 0x1C17F10
	117 Move X21, X0
	118 Move X1, X23
	119 Move X2, X31
	120 Call UriBuilder..ctor, X0, X1
	121 Compare X21, 0
	122 JumpIfEqual {274}
	123 Move X0, X21
	124 Move X1, X22
	125 Move X2, X31
	126 Call UriBuilder.set_Path, X0, X1
	127 Move X0, X21
	128 Move X1, X20
	129 Move X2, X31
	130 Call UriBuilder.set_Query, X0, X1
	131 Move X0, X21
	132 Move X1, X31
	133 Call UriBuilder.get_Uri, X0
	134 Move X8, 0xCF8000
	135 Move X9, 0xCD0000
	136 Move X8, [X8+1232]
	137 Move X9, [X9+1744]
	138 Move X20, X0
	139 Move X21, [X8]
	140 Move X0, [X9]
	141 Call 0x1C17F10
	142 Move X8, 0xCD0000
	143 Move X8, [X8+1728]
	144 Move X22, X0
	145 Move X1, [X8]
	146 Call Dictionary`2<Object, Object>..ctor, X0
	147 Move X8, 0xD0A000
	148 Move X8, [X8+2008]
	149 Move X1, [X19+40]
	150 Move X0, [X8]
	151 Move X2, X31
	152 Call String.Concat, X0, X1
	153 Compare X22, 0
	154 JumpIfEqual {275}
	155 Move X8, 0xD0A000
	156 Move X8, [X8+2000]
	157 Move X9, 0xCD0000
	158 Move X9, [X9+2064]
	159 Move X2, X0
	160 Move X1, [X8]
	161 Move X3, [X9]
	162 Move X0, X22
	163 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	164 Move X23, [X24+16]
	165 Compare X23, 0
	166 JumpIfEqual {276}
	167 Move X10, 0xD0A000
	168 Move X10, [X10+1976]
	169 Move X8, [X23]
	170 Move W25, [X24+24]
	171 Move X26, [X19+48]
	172 Move X24, [X19+56]
	173 Move X1, [X10]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 3
	184 Move X0, X23
	185 Call 0x1C5D788
	186 Move X8, [X19+64]
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W9, TEMP
	190 Move [X31+8], X8
	191 Move [X19+64], X31
	192 Move [X19], W9
	193 Move W9, [X10]
	194 Add W9, W9, 3
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X9, [X0+8]
	199 Move X0, X23
	200 Move X1, X21
	201 Move X2, X20
	202 Move X3, X22
	203 Move X4, X31
	204 Move W5, W25
	205 Move X6, X26
	206 Move X7, X24
	207 Move [X31], X9
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {277}
	211 Move X8, 0xCD2000
	212 Move X8, [X8+504]
	213 Move X1, [X8]
	214 Call Task`1<Object>.GetAwaiter, X0
	215 Move X8, 0xCD2000
	216 Move X8, [X8+496]
	217 Move [X31+8], X0
	218 Move X1, [X8]
	219 Add X0, X31, 8
	220 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {242}
	225 Move X8, 0xCD2000
	226 Move X8, [X8+480]
	227 Add X0, X31, 8
	228 Move X1, [X8]
	229 Call TaskAwaiter`1<Object>.GetResult, X0
	230 Move TEMP, 1
	231 Not TEMP
	232 Move W8, TEMP
	233 Move [X19+8], W8
	234 Move X0, [X27]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X19
	240 Move X1, X31
	241 Call AsyncTaskMethodBuilder.SetResult, X0
	242 Move [X19], W31
	243 Move X8, [X31+8]
	244 Move [X19+64], X8
	245 Move X0, [X27]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X8, 0xD0A000
	251 Move X8, [X8+3432]
	252 Add X0, X19, 8
	253 Move X3, [X8]
	254 Add X1, X31, 8
	255 Move X2, X19
	256 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	257 Move X20, [X31+80]
	258 Move X19, [X31+88]
	259 Move X22, [X31+64]
	260 Move X21, [X31+72]
	261 Move X24, [X31+48]
	262 Move X23, [X31+56]
	263 Move X26, [X31+32]
	264 Move X25, [X31+40]
	265 Move X30, [X31+16]
	266 Move X27, [X31+24]
	267 Add X31, X31, 96
	268 Return 
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Call 0x1C17F28
	273 Call 0x1C17F20
	274 Call 0x1C17F20
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Call 0x1C17F20
	278 Move X20, X0
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X0, X20
	281 Call 0x3EB2AD0
	282 Move X20, X0
	283 Move X0, 0xCCF000
	284 Move X0, [X0+2000]
	285 Call 0x1C17D08
	286 Move X8, [X20]
	287 Move X1, [X8]
	288 Call 0x1C18270
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {310}
	293 Move X20, [X20]
	294 Call 0x3EB2AE0
	295 Move TEMP, 1
	296 Not TEMP
	297 Move W8, TEMP
	298 Move [X19+8], W8
	299 Move X0, 0xCD2000
	300 Move X0, [X0+640]
	301 Call 0x1C17D08
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X0, X19
	307 Move X1, X20
	308 Move X2, X31
	309 Call AsyncTaskMethodBuilder.SetException, X0, X1
	310 Move W0, 8
	311 Call 0x3EB2AF0
	312 Move X8, [X20]
	313 Move [X0], X8
	314 Move X1, 0xA90000
	315 Add X1, X1, 3672
	316 Move X2, X31
	317 Call 0x3EB2B00
	318 Move X20, X0
	319 Call 0x3EB2AE0
	320 Move X0, X20
	321 Call 0x1D2D690
	322 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03425AB8 LDR X10, [X10 + 0x7B8]
	0x03425ABC LDR X8, [X23]
	0x03425AC0 LDR W25, [X24 + 0x18]
	0x03425AC4 LDP X26, X24, [X19 + 0x38]
	0x03425AC8 LDR X1, [X10]
	0x03425ACC LDRH W9, [X8 + 0x12E]
	0x03425AD0 CBZ X9, 0x3425AF4
	0x03425AD4 LDR X10, [X8 + 0xB0]
	0x03425AD8 ADD X10, X10, 0x8
	0x03425ADC LDUR X11, [X10 - 0x8]
	0x03425AE0 CMP X11, X1
	0x03425AE4 B.EQ 0x3425B1C
	0x03425AE8 SUBS X9, X9, 0x1
	0x03425AEC ADD X10, X10, 0x10
	0x03425AF0 B.NE 0x3425ADC
	0x03425AF4 MOVZ W2, 0x3
	0x03425AF8 MOV X0, X23
	0x03425AFC BL 0x1C5C788
	0x03425B00 B 0x3425B2C
	0x03425B04 LDR X8, [X19 + 0x48]
	0x03425B08 MOVN W9, 0x0
	0x03425B0C STR X8, [X31 + 0x8]
	0x03425B10 STR X31, [X19 + 0x48]
	0x03425B14 STR W9, [X19]
	0x03425B18 B 0x3425B88
	0x03425B1C LDR W9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB9000
	007 Move X22, 0xCD2000
	008 Move W8, [X21+1580]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD2000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1580], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

