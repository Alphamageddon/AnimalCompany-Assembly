Type: Nakama.ApiClient/<RpcFuncAsync>d__75

Method: System.Void MoveNext()

Disassembly:
	0x03436410 MOV X0, X22
	0x03436414 MOV X2, X31
	0x03436418 BL 0x322BC58
	0x0343641C MOV X1, X21
	0x03436420 MOV X2, X31
	0x03436424 BL 0x321B938
	0x03436428 ADRP X8, 0xCC6000
	0x0343642C LDR X8, [X8 + 0x3A0]
	0x03436430 MOV X22, X0
	0x03436434 LDR X23, [X25 + 0x20]
	0x03436438 LDR X0, [X8]
	0x0343643C BL 0x1C16F10
	0x03436440 MOV X21, X0
	0x03436444 MOV X1, X23
	0x03436448 MOV X2, X31
	0x0343644C BL 0x36281F8
	0x03436450 CBZ X21, 0x343678C
	0x03436454 MOV X0, X21
	0x03436458 MOV X1, X22
	0x0343645C MOV X2, X31
	0x03436460 BL 0x36288CC
	0x03436464 MOV X0, X21
	0x03436468 MOV X1, X20
	0x0343646C MOV X2, X31
	0x03436470 BL 0x3628980
	0x03436474 MOV X0, X21
	0x03436478 MOV X1, X31
	0x0343647C BL 0x3628A38
	0x03436480 ADRP X8, 0xCE6000
	0x03436484 ADRP X9, 0xCBE000
	0x03436488 LDR X8, [X8 + 0x4D8]
	0x0343648C LDR X9, [X9 + 0x6D0]
	0x03436490 MOV X20, X0
	0x03436494 LDR X21, [X8]
	0x03436498 LDR X0, [X9]
	0x0343649C BL 0x1C16F10
	0x034364A0 ADRP X8, 0xCBE000
	0x034364A4 LDR X8, [X8 + 0x6C0]
	0x034364A8 MOV X22, X0
	0x034364AC LDR X1, [X8]
	0x034364B0 BL 0x2AA4804
	0x034364B4 LDR X0, [X19 + 0x30]
	0x034364B8 MOV X1, X31
	0x034364BC BL 0x32277A8
	0x034364C0 TBNZ X0, 0x0, 0x343656C
	0x034364C4 MOV X0, X31
	0x034364C8 BL 0x3241948
	0x034364CC ADRP X8, 0xCC6000
	0x034364D0 MOV X23, X0
	0x034364D4 LDP X0, X2, [X19 + 0x30]
	0x034364D8 LDR X8, [X8 + 0x988]
	0x034364DC LDR X1, [X8]
	0x034364E0 MOV X3, X31
	0x034364E4 BL 0x32274B8
	0x034364E8 MOV X1, X0
	0x034364EC CBZ X23, 0x343679C
	0x034364F0 LDR X8, [X23]
	0x034364F4 LDR X9, [X8 + 0x268]
	0x034364F8 LDR X2, [X8 + 0x270]
	0x034364FC MOV X0, X23
	0x03436500 BLR X9
	0x03436504 ADRP X8, 0xCC6000
	0x03436508 LDR X8, [X8 + 0x9E8]
	0x0343650C MOV X23, X0
	0x03436510 LDR X0, [X8]
	0x03436514 LDR W8, [X0 + 0xE0]
	0x03436518 CBNZ W8, 0x3436520
	0x0343651C BL 0x1C16DFC
	0x03436520 MOV X0, X23
	0x03436524 MOV X1, X31
	0x03436528 BL 0x33225A0
	0x0343652C MOV X1, X0
	0x03436530 ADRP X8, 0xCF8000
	0x03436534 LDR X8, [X8 + 0x850]
	0x03436538 LDR X0, [X8]
	0x0343653C MOV X2, X31
	0x03436540 BL 0x321B938
	0x03436544 CBZ X22, 0x34367A0
	0x03436548 ADRP X8, 0xCF8000
	0x0343654C LDR X8, [X8 + 0x7D0]
	0x03436550 ADRP X9, 0xCBE000
	0x03436554 LDR X9, [X9 + 0x810]
	0x03436558 MOV X2, X0
	0x0343655C LDR X1, [X8]
	0x03436560 LDR X3, [X9]
	0x03436564 MOV X0, X22
	0x03436568 BL 0x2AA5098
	0x0343656C LDR X0, [X19 + 0x20]
	0x03436570 MOV X1, X31
	0x03436574 BL 0x3483BE4
	0x03436578 MOV X23, X0
	0x0343657C MOV X0, X31
	0x03436580 BL 0x3241948
	0x03436584 CBZ X0, 0x3436790
	0x03436588 LDR X8, [X0]
	0x0343658C LDR X9, [X8 + 0x268]
	0x03436590 LDR X2, [X8 + 0x270]
	0x03436594 MOV X1, X23
	0x03436598 BLR X9
	0x0343659C LDR X24, [X25 + 0x10]
	0x034365A0 CBZ X24, 0x3436794
	0x034365A4 ADRP X10, 0xCF8000
	0x034365A8 LDR X10, [X10 + 0x7B8]
	0x034365AC LDR X8, [X24]
	0x034365B0 LDR W26, [X25 + 0x18]
	0x034365B4 LDP X27, X25, [X19 + 0x40]
	0x034365B8 LDR X1, [X10]
	0x034365BC LDRH W9, [X8 + 0x12E]
	0x034365C0 MOV X23, X0
	0x034365C4 CBZ X9, 0x34365E8
	0x034365C8 LDR X10, [X8 + 0xB0]
	0x034365CC ADD X10, X10, 0x8
	0x034365D0 LDUR X11, [X10 - 0x8]
	0x034365D4 CMP X11, X1
	0x034365D8 B.EQ 0x3436610
	0x034365DC SUBS X9, X9, 0x1
	0x034365E0 ADD X10, X10, 0x10
	0x034365E4 B.NE 0x34365D0
	0x034365E8 MOVZ W2, 0x3
	0x034365EC MOV X0, X24
	0x034365F0 BL 0x1C5C788
	0x034365F4 B 0x3436620
	0x034365F8 LDR X8, [X19 + 0x50]
	0x034365FC MOVN W9, 0x0
	0x03436600 STR X8, [X31 + 0x18]
	0x03436604 STR X31, [X19 + 0x50]
	0x03436608 STR W9, [X19]
	0x0343660C B 0x343667C
	0x03436610 LDR W9, [X10]
	0x03436614 ADD W9, W9, 0x3
	0x03436618 ADD X8, X8, W9, 0x4, SXTW
	0x0343661C ADD X0, X8, 0x138
	0x03436620 LDP X8, X9, [X0]
	0x03436624 MOV X0, X24
	0x03436628 MOV X1, X21
	0x0343662C MOV X2, X20
	0x03436630 MOV X3, X22
	0x03436634 MOV X4, X23
	0x03436638 MOV W5, W26
	0x0343663C MOV X6, X27
	0x03436640 MOV X7, X25
	0x03436644 STR X9, [X31]
	0x03436648 BLR X8
	0x0343664C CBZ X0, 0x3436798
	0x03436650 ADRP X8, 0xCC0000
	0x03436654 LDR X8, [X8 + 0x1F8]
	0x03436658 LDR X1, [X8]
	0x0343665C BL 0x269F5D0
	0x03436660 ADRP X8, 0xCC0000
	0x03436664 LDR X8, [X8 + 0x1F0]
	0x03436668 STR X0, [X31 + 0x18]
	0x0343666C LDR X1, [X8]
	0x03436670 ADD X0, X31, 0x18
	0x03436674 BL 0x2677430
	0x03436678 TBZ X0, 0x0, 0x34366D8
	0x0343667C ADRP X8, 0xCC0000
	0x03436680 LDR X8, [X8 + 0x1E0]
	0x03436684 ADD X0, X31, 0x18
	0x03436688 LDR X1, [X8]
	0x0343668C BL 0x2677474
	0x03436690 ADRP X8, 0xCF8000
	0x03436694 LDR X8, [X8 + 0x828]
	0x03436698 LDR X1, [X8]
	0x0343669C BL 0x220E6DC
	0x034366A0 MOVN W8, 0x1
	0x034366A4 STR W8, [X19], #0x8
	0x034366A8 MOV X20, X0
	0x034366AC LDR X0, [X28]
	0x034366B0 ADRP X21, 0xCF8000
	0x034366B4 LDR W8, [X0 + 0xE0]
	0x034366B8 LDR X21, [X21 + 0x820]
	0x034366BC CBNZ W8, 0x34366C4
	0x034366C0 BL 0x1C16DFC
	0x034366C4 LDR X2, [X21]
	0x034366C8 MOV X0, X19
	0x034366CC MOV X1, X20
	0x034366D0 BL 0x26322B0
	0x034366D4 B 0x3436710
	0x034366D8 STR W31, [X19]
	0x034366DC LDR X8, [X31 + 0x18]
	0x034366E0 STR X8, [X19 + 0x50]
	0x034366E4 LDR X0, [X28]
	0x034366E8 LDR W8, [X0 + 0xE0]
	0x034366EC CBNZ W8, 0x34366F4
	0x034366F0 BL 0x1C16DFC
	0x034366F4 ADRP X8, 0xCF9000
	0x034366F8 LDR X8, [X8 + 0x340]
	0x034366FC ADD X0, X19, 0x8
	0x03436700 LDR X3, [X8]
	0x03436704 ADD X1, X31, 0x18
	0x03436708 MOV X2, X19
	0x0343670C BL 0x1FB58C4
	0x03436710 LDP X20, X19, [X31 + 0x60]
	0x03436714 LDP X22, X21, [X31 + 0x50]
	0x03436718 LDP X24, X23, [X31 + 0x40]
	0x0343671C LDP X26, X25, [X31 + 0x30]
	0x03436720 LDP X28, X27, [X31 + 0x20]
	0x03436724 LDR X30, [X31 + 0x10]
	0x03436728 ADD X31, X31, 0x70
	0x0343672C RET
	0x03436730 ADRP X0, 0xCC5000
	0x03436734 LDR X0, [X0 + 0x578]
	0x03436738 BL 0x1C16D08
	0x0343673C BL 0x1C16F10
	0x03436740 MOV X20, X0
	0x03436744 ADRP X0, 0xCF8000
	0x03436748 LDR X0, [X0 + 0xBC8]
	0x0343674C BL 0x1C16D08
	0x03436750 MOV X1, X0
	0x03436754 MOV X0, X20
	0x03436758 MOV X2, X31
	0x0343675C BL 0x3314A68
	0x03436760 ADRP X0, 0xCF9000
	0x03436764 LDR X0, [X0 + 0x350]
	0x03436768 BL 0x1C16D08
	0x0343676C MOV X1, X0
	0x03436770 MOV X0, X20
	0x03436774 BL 0x1C16DEC
	0x03436778 BL 0x1C16F20
	0x0343677C BL 0x1C16F20
	0x03436780 BL 0x1C16F20
	0x03436784 BL 0x1C16F28
	0x03436788 BL 0x1C16F20
	0x0343678C BL 0x1C16F20
	0x03436790 BL 0x1C16F20
	0x03436794 BL 0x1C16F20
	0x03436798 BL 0x1C16F20
	0x0343679C BL 0x1C16F20
	0x034367A0 BL 0x1C16F20
	0x034367A4 B 0x3436820
	0x034367A8 B 0x3436820
	0x034367AC B 0x3436820
	0x034367B0 B 0x3436820
	0x034367B4 B 0x3436820
	0x034367B8 B 0x3436820
	0x034367BC B 0x3436820
	0x034367C0 B 0x3436820
	0x034367C4 B 0x3436820
	0x034367C8 B 0x3436820
	0x034367CC B 0x3436820
	0x034367D0 B 0x3436820
	0x034367D4 B 0x3436820
	0x034367D8 B 0x3436820
	0x034367DC B 0x3436820
	0x034367E0 B 0x3436820
	0x034367E4 B 0x3436820
	0x034367E8 B 0x3436820
	0x034367EC B 0x3436820
	0x034367F0 B 0x3436820
	0x034367F4 B 0x3436820
	0x034367F8 B 0x3436820
	0x034367FC B 0x3436820
	0x03436800 B 0x3436820
	0x03436804 B 0x3436820
	0x03436808 B 0x3436820
	0x0343680C B 0x3436820
	0x03436810 B 0x3436820
	0x03436814 B 0x3436820
	0x03436818 B 0x3436820
	0x0343681C B 0x3436820
	0x03436820 MOV X20, X0
	0x03436824 CMP W1, 0x1
	0x03436828 B.NE 0x34368C4
	0x0343682C MOV X0, X20
	0x03436830 BL 0x3EB1AD0
	0x03436834 MOV X20, X0
	0x03436838 ADRP X0, 0xCBD000
	0x0343683C LDR X0, [X0 + 0x7D0]
	0x03436840 BL 0x1C16D08
	0x03436844 LDR X8, [X20]
	0x03436848 LDR X1, [X8]
	0x0343684C BL 0x1C17270
	0x03436850 TBZ X0, 0x0, 0x343689C
	0x03436854 LDR X20, [X20]
	0x03436858 BL 0x3EB1AE0
	0x0343685C MOVN W8, 0x1
	0x03436860 STR W8, [X19], #0x8
	0x03436864 ADRP X0, 0xCF8000
	0x03436868 LDR X0, [X0 + 0x320]
	0x0343686C BL 0x1C16D08
	0x03436870 LDR W8, [X0 + 0xE0]
	0x03436874 CBNZ W8, 0x343687C
	0x03436878 BL 0x1C16DFC
	0x0343687C ADRP X0, 0xCF8000
	0x03436880 LDR X0, [X0 + 0x868]
	0x03436884 BL 0x1C16D08
	0x03436888 MOV X2, X0
	0x0343688C MOV X0, X19
	0x03436890 MOV X1, X20
	0x03436894 BL 0x26324C8
	0x03436898 B 0x3436710
	0x0343689C MOVZ W0, 0x8
	0x034368A0 BL 0x3EB1AF0
	0x034368A4 LDR X8, [X20]
	0x034368A8 STR X8, [X0]
	0x034368AC ADRP X1, 0xA7E000
	0x034368B0 ADD X1, X1, 0xE58
	0x034368B4 MOV X2, X31
	0x034368B8 BL 0x3EB1B00
	0x034368BC MOV X20, X0
	0x034368C0 BL 0x3EB1AE0
	0x034368C4 MOV X0, X20
	0x034368C8 BL 0x1D2C690
	0x034368CC BL 0x1990590
	0x034368D0 STR X30, [X31 - 0x30]!
	0x034368D4 STP X22, X21, [X31 + 0x10]
	0x034368D8 STP X20, X19, [X31 + 0x20]
	0x034368DC ADRP X22, 0xFA7000
	0x034368E0 ADRP X21, 0xCF8000
	0x034368E4 LDRB W8, [X22 + 0x674]
	0x034368E8 LDR X21, [X21 + 0x320]
	0x034368EC MOV X19, X1
	0x034368F0 MOV X20, X0
	0x034368F4 TBNZ X8, 0x0, 0x3436918
	0x034368F8 ADRP X0, 0xCF8000
	0x034368FC LDR X0, [X0 + 0x870]
	0x03436900 BL 0x1C16CF4
	0x03436904 ADRP X0, 0xCF8000
	0x03436908 LDR X0, [X0 + 0x320]
	0x0343690C BL 0x1C16CF4
	0x03436910 MOVZ W8, 0x1
	0x03436914 STRB W8, [X22 + 0x674]
	0x03436918 LDR X0, [X21]
	0x0343691C ADRP X21, 0xCF8000
	0x03436920 LDR W8, [X0 + 0xE0]
	0x03436924 LDR X21, [X21 + 0x870]
	0x03436928 CBNZ W8, 0x3436930
	0x0343692C BL 0x1C16DFC
	0x03436930 LDR X2, [X21]
	0x03436934 ADD X0, X20, 0x8
	0x03436938 MOV X1, X19
	0x0343693C LDP X20, X19, [X31 + 0x20]
	0x03436940 LDP X22, X21, [X31 + 0x10]
	0x03436944 LDR X30, [X31], #0x30
	0x03436948 B 0x2632228
	0x0343694C SUB X31, X31, 0x70
	0x03436950 STR X30, [X31 + 0x10]
	0x03436954 STP X28, X27, [X31 + 0x20]
	0x03436958 STP X26, X25, [X31 + 0x30]
	0x0343695C STP X24, X23, [X31 + 0x40]
	0x03436960 STP X22, X21, [X31 + 0x50]
	0x03436964 STP X20, X19, [X31 + 0x60]
	0x03436968 ADRP X20, 0xFA7000
	0x0343696C LDRB W8, [X20 + 0x675]
	0x03436970 MOV X19, X0
	0x03436974 TBNZ X8, 0x0, 0x3436A40
	0x03436978 ADRP X0, 0xCF9000
	0x0343697C LDR X0, [X0 + 0x358]
	0x03436980 BL 0x1C16CF4
	0x03436984 ADRP X0, 0xCC0000
	0x03436988 LDR X0, [X0 + 0x280]
	0x0343698C BL 0x1C16CF4
	0x03436990 ADRP X0, 0xCC6000
	0x03436994 LDR X0, [X0 + 0x8D8]
	0x03436998 BL 0x1C16CF4
	0x0343699C ADRP X0, 0xCBE000
	0x034369A0 LDR X0, [X0 + 0x810]
	0x034369A4 BL 0x1C16CF4
	0x034369A8 ADRP X0, 0xCBE000
	0x034369AC LDR X0, [X0 + 0x6C0]
	0x034369B0 BL 0x1C16CF4
	0x034369B4 ADRP X0, 0xCBE000
	0x034369B8 LDR X0, [X0 + 0x6D0]
	0x034369BC BL 0x1C16CF4
	0x034369C0 ADRP X0, 0xCF8000
	0x034369C4 LDR X0, [X0 + 0x7B8]
	0x034369C8 BL 0x1C16CF4
	0x034369CC ADRP X0, 0xCC0000
	0x034369D0 LDR X0, [X0 + 0x1E0]
	0x034369D4 BL 0x1C16CF4
	0x034369D8 ADRP X0, 0xCC0000
	0x034369DC LDR X0, [X0 + 0x1F0]
	0x034369E0 BL 0x1C16CF4
	0x034369E4 ADRP X0, 0xCC0000
	0x034369E8 LDR X0, [X0 + 0x1F8]
	0x034369EC BL 0x1C16CF4
	0x034369F0 ADRP X0, 0xCC6000
	0x034369F4 LDR X0, [X0 + 0x3A0]
	0x034369F8 BL 0x1C16CF4
	0x034369FC ADRP X0, 0xCE6000
	0x03436A00 LDR X0, [X0 + 0x4D8]
	0x03436A04 BL 0x1C16CF4
	0x03436A08 ADRP X0, 0xCF9000
	0x03436A0C LDR X0, [X0 + 0x360]
	0x03436A10 BL 0x1C16CF4
	0x03436A14 ADRP X0, 0xCF8000
	0x03436A18 LDR X0, [X0 + 0x7D0]
	0x03436A1C BL 0x1C16CF4
	0x03436A20 ADRP X0, 0xCF8000
	0x03436A24 LDR X0, [X0 + 0x7D8]
	0x03436A28 BL 0x1C16CF4
	0x03436A2C ADRP X0, 0xCBD000
	0x03436A30 LDR X0, [X0 + 0x988]
	0x03436A34 BL 0x1C16CF4
	0x03436A38 MOVZ W8, 0x1
	0x03436A3C STRB W8, [X20 + 0x675]
	0x03436A40 STR X31, [X31 + 0x18]
	0x03436A44 ADRP X28, 0xCC0000
	0x03436A48 LDR W8, [X19]
	0x03436A4C LDR X28, [X28 + 0x280]
	0x03436A50 CBZ W8, 0x3436C30
	0x03436A54 LDR X8, [X19 + 0x20]
	0x03436A58 CBZ X8, 0x3436D48
	0x03436A5C LDR X25, [X19 + 0x28]
	0x03436A60 CBZ X25, 0x3436D90
	0x03436A64 LDR X0, [X25 + 0x20]
	0x03436A68 CBZ X0, 0x3436D94
	0x03436A6C ADRP X8, 0xCF9000
	0x03436A70 ADRP X9, 0xCBD000
	0x03436A74 LDR X8, [X8 + 0x360]
	0x03436A78 LDR X9, [X9 + 0x988]
	0x03436A7C LDR X21, [X8]
	0x03436A80 LDR X20, [X9]
	0x03436A84 MOV X1, X31
	0x03436A88 BL 0x361B448
	0x03436A8C ADRP X8, 0xCC6000
	0x03436A90 LDR X8, [X8 + 0x8D8]
	0x03436A94 MOV X22, X0
	0x03436A98 LDR X0, [X8]
	0x03436A9C MOVZ W1, 0x1
	0x03436AA0 BL 0x1C16D6C
	0x03436AA4 MOV X1, X0
	0x03436AA8 CBZ X1, 0x3436D98
	0x03436AAC LDR W8, [X1 + 0x18]
	0x03436AB0 CBZ W8, 0x3436D9C
	0x03436AB4 MOVZ W8, 0x2F
	0x03436AB8 STRH W8, [X1 + 0x20]
	0x03436ABC CBZ X22, 0x3436DA0
	0x03436AC0 MOV X0, X22
	0x03436AC4 MOV X2, X31
	0x03436AC8 BL 0x322BC58
	0x03436ACC MOV X1, X21
	0x03436AD0 MOV X2, X31
	0x03436AD4 BL 0x321B938
	0x03436AD8 ADRP X8, 0xCC6000
	0x03436ADC LDR X8, [X8 + 0x3A0]
	0x03436AE0 MOV X22, X0
	0x03436AE4 LDR X23, [X25 + 0x20]
	0x03436AE8 LDR X0, [X8]
	0x03436AEC BL 0x1C16F10
	0x03436AF0 MOV X21, X0
	0x03436AF4 MOV X1, X23
	0x03436AF8 MOV X2, X31
	0x03436AFC BL 0x36281F8
	0x03436B00 CBZ X21, 0x3436DA4
	0x03436B04 MOV X0, X21
	0x03436B08 MOV X1, X22
	0x03436B0C MOV X2, X31
	0x03436B10 BL 0x36288CC
	0x03436B14 MOV X0, X21
	0x03436B18 MOV X1, X20
	0x03436B1C MOV X2, X31
	0x03436B20 BL 0x3628980
	0x03436B24 MOV X0, X21
	0x03436B28 MOV X1, X31
	0x03436B2C BL 0x3628A38
	0x03436B30 ADRP X8, 0xCE6000
	0x03436B34 ADRP X9, 0xCBE000
	0x03436B38 LDR X8, [X8 + 0x4D8]
	0x03436B3C LDR X9, [X9 + 0x6D0]
	0x03436B40 MOV X20, X0
	0x03436B44 LDR X21, [X8]
	0x03436B48 LDR X0, [X9]
	0x03436B4C BL 0x1C16F10
	0x03436B50 ADRP X8, 0xCBE000
	0x03436B54 LDR X8, [X8 + 0x6C0]
	0x03436B58 MOV X22, X0
	0x03436B5C LDR X1, [X8]
	0x03436B60 BL 0x2AA4804
	0x03436B64 ADRP X8, 0xCF8000
	0x03436B68 LDR X8, [X8 + 0x7D8]
	0x03436B6C LDR X1, [X19 + 0x30]
	0x03436B70 LDR X0, [X8]
	0x03436B74 MOV X2, X31
	0x03436B78 BL 0x321B938
	0x03436B7C CBZ X22, 0x3436DA8
	0x03436B80 ADRP X8, 0xCF8000
	0x03436B84 LDR X8, [X8 + 0x7D0]
	0x03436B88 ADRP X9, 0xCBE000
	0x03436B8C LDR X9, [X9 + 0x810]
	0x03436B90 MOV X2, X0
	0x03436B94 LDR X1, [X8]
	0x03436B98 LDR X3, [X9]
	0x03436B9C MOV X0, X22
	0x03436BA0 BL 0x2AA5098
	0x03436BA4 LDR X0, [X19 + 0x20]
	0x03436BA8 MOV X1, X31
	0x03436BAC BL 0x3483BE4
	0x03436BB0 MOV X23, X0
	0x03436BB4 MOV X0, X31
	0x03436BB8 BL 0x3241948
	0x03436BBC CBZ X0, 0x3436DAC
	0x03436BC0 LDR X8, [X0]
	0x03436BC4 LDR X9, [X8 + 0x268]
	0x03436BC8 LDR X2, [X8 + 0x270]
	0x03436BCC MOV X1, X23
	0x03436BD0 BLR X9
	0x03436BD4 LDR X24, [X25 + 0x10]
	0x03436BD8 CBZ X24, 0x3436DB0
	0x03436BDC ADRP X10, 0xCF8000
	0x03436BE0 LDR X10, [X10 + 0x7B8]
	0x03436BE4 LDR X8, [X24]
	0x03436BE8 LDR W26, [X25 + 0x18]
	0x03436BEC LDP X27, X25, [X19 + 0x38]
	0x03436BF0 LDR X1, [X10]
	0x03436BF4 LDRH W9, [X8 + 0x12E]
	0x03436BF8 MOV X23, X0
	0x03436BFC CBZ X9, 0x3436C20
	0x03436C00 LDR X10, [X8 + 0xB0]
	0x03436C04 ADD X10, X10, 0x8
	0x03436C08 LDUR X11, [X10 - 0x8]
	0x03436C0C CMP X11, X1
	0x03436C10 B.EQ 0x3436C48
	0x03436C14 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA8000
	014 Move W8, [X20+1647]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {97}
	020 Move X0, 0xCFA000
	021 Move X0, [X0+784]
	022 Call 0x1C17CF4
	023 Move X0, 0xCFA000
	024 Move X0, [X0+704]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF9000
	027 Move X0, [X0+1640]
	028 Call 0x1C17CF4
	029 Move X0, 0xCC7000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCC7000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBF000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xCBF000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBF000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF9000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0xCFA000
	048 Move X0, [X0+712]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC1000
	051 Move X0, [X0+480]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC1000
	054 Move X0, [X0+496]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC1000
	057 Move X0, [X0+504]
	058 Call 0x1C17CF4
	059 Move X0, 0xCC7000
	060 Move X0, [X0+928]
	061 Call 0x1C17CF4
	062 Move X0, 0xCC0000
	063 Move X0, [X0+2600]
	064 Call 0x1C17CF4
	065 Move X0, 0xCFA000
	066 Move X0, [X0+720]
	067 Call 0x1C17CF4
	068 Move X0, 0xCE7000
	069 Move X0, [X0+1240]
	070 Call 0x1C17CF4
	071 Move X0, 0xCFA000
	072 Move X0, [X0+728]
	073 Call 0x1C17CF4
	074 Move X0, 0xCC7000
	075 Move X0, [X0+2440]
	076 Call 0x1C17CF4
	077 Move X0, 0xCC7000
	078 Move X0, [X0+1824]
	079 Call 0x1C17CF4
	080 Move X0, 0xCF9000
	081 Move X0, [X0+2000]
	082 Call 0x1C17CF4
	083 Move X0, 0xCF9000
	084 Move X0, [X0+2128]
	085 Call 0x1C17CF4
	086 Move X0, 0xCFA000
	087 Move X0, [X0+744]
	088 Call 0x1C17CF4
	089 Move X0, 0xCF9000
	090 Move X0, [X0+2008]
	091 Call 0x1C17CF4
	092 Move X0, 0xCBE000
	093 Move X0, [X0+2440]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X20+1647], W8
	097 Move [X31+24], X31
	098 Move X28, 0xCF9000
	099 Move W8, [X19]
	100 Move X28, [X28+1640]
	101 Compare W8, 0
	102 JumpIfEqual {336}
	103 Move X21, [X19+32]
	104 Compare X21, 0
	105 JumpIfEqual {428}
	106 Move X8, [X19+40]
	107 Compare X8, 0
	108 JumpIfEqual {446}
	109 Move X23, 0xCC0000
	110 Move X23, [X23+2600]
	111 Move X8, 0xCFA000
	112 Move X0, [X23]
	113 Move X8, [X8+720]
	114 Move X25, [X19+56]
	115 Move W9, [X0+224]
	116 Move X20, [X8]
	117 Compare W9, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X21
	121 Move X1, X31
	122 Call Uri.EscapeDataString, X0
	123 Compare X20, 0
	124 JumpIfEqual {464}
	125 Move X8, 0xCFA000
	126 Move X8, [X8+744]
	127 Move X2, X0
	128 Move X1, [X8]
	129 Move X0, X20
	130 Move X3, X31
	131 Call String.Replace, X0, X1, X2
	132 Move X8, 0xCBE000
	133 Move X8, [X8+2440]
	134 Move X22, [X19+48]
	135 Move X21, X0
	136 Move X20, [X8]
	137 Compare X22, 0
	138 JumpIfEqual {158}
	139 Move X0, [X23]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X0, X22
	145 Move X1, X31
	146 Call Uri.EscapeDataString, X0
	147 Move X8, 0xCFA000
	148 Move X8, [X8+728]
	149 Move X9, 0xCC7000
	150 Move X9, [X9+1824]
	151 Move X2, X0
	152 Move X1, [X8]
	153 Move X3, [X9]
	154 Move X0, X20
	155 Move X4, X31
	156 Call String.Concat, X0, X1, X2, X3
	157 Move X20, X0
	158 Compare X25, 0
	159 JumpIfEqual {465}
	160 Move X0, [X25+32]
	161 Compare X0, 0
	162 JumpIfEqual {466}
	163 Move X1, X31
	164 Call Uri.get_AbsolutePath, X0
	165 Move X8, 0xCC7000
	166 Move X8, [X8+2264]
	167 Move X22, X0
	168 Move X0, [X8]
	169 Move W1, 1
	170 Call 0x1C17D6C
	171 Move X1, X0
	172 Compare X1, 0
	173 JumpIfEqual {467}
	174 Move W8, [X1+24]
	175 Compare W8, 0
	176 JumpIfEqual {468}
	177 Move W8, 47
	178 NotImplemented "Instruction STRH not yet implemented."
	179 Compare X22, 0
	180 JumpIfEqual {469}
	181 Move X0, X22
	182 Move X2, X31
	183 Call String.TrimEnd, X0, X1
	184 Move X1, X21
	185 Move X2, X31
	186 Call String.Concat, X0, X1
	187 Move X8, 0xCC7000
	188 Move X8, [X8+928]
	189 Move X22, X0
	190 Move X23, [X25+32]
	191 Move X0, [X8]
	192 Call 0x1C17F10
	193 Move X21, X0
	194 Move X1, X23
	195 Move X2, X31
	196 Call UriBuilder..ctor, X0, X1
	197 Compare X21, 0
	198 JumpIfEqual {470}
	199 Move X0, X21
	200 Move X1, X22
	201 Move X2, X31
	202 Call UriBuilder.set_Path, X0, X1
	203 Move X0, X21
	204 Move X1, X20
	205 Move X2, X31
	206 Call UriBuilder.set_Query, X0, X1
	207 Move X0, X21
	208 Move X1, X31
	209 Call UriBuilder.get_Uri, X0
	210 Move X8, 0xCE7000
	211 Move X9, 0xCBF000
	212 Move X8, [X8+1240]
	213 Move X9, [X9+1744]
	214 Move X20, X0
	215 Move X21, [X8]
	216 Move X0, [X9]
	217 Call 0x1C17F10
	218 Move X8, 0xCBF000
	219 Move X8, [X8+1728]
	220 Move X22, X0
	221 Move X1, [X8]
	222 Call Dictionary`2<Object, Object>..ctor, X0
	223 Move X0, [X19+64]
	224 Move X1, X31
	225 Call String.IsNullOrEmpty, X0
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfEqual {247}
	230 Move X8, 0xCF9000
	231 Move X1, [X19+64]
	232 Move X8, [X8+2008]
	233 Move X0, [X8]
	234 Move X2, X31
	235 Call String.Concat, X0, X1
	236 Compare X22, 0
	237 JumpIfEqual {474}
	238 Move X8, 0xCF9000
	239 Move X8, [X8+2000]
	240 Move X9, 0xCBF000
	241 Move X9, [X9+2064]
	242 Move X2, X0
	243 Move X1, [X8]
	244 Move X3, [X9]
	245 Move X0, X22
	246 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	247 Move X0, [X19+72]
	248 Move X1, X31
	249 Call String.IsNullOrEmpty, X0
	250 Move TEMP, X0
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfEqual {300}
	254 Move X0, X31
	255 Call Encoding.get_UTF8
	256 Move X8, 0xCC7000
	257 Move X23, X0
	258 Move X0, [X19+72]
	259 Move X2, [X19+80]
	260 Move X8, [X8+2440]
	261 Move X1, [X8]
	262 Move X3, X31
	263 Call String.Concat, X0, X1, X2
	264 Move X1, X0
	265 Compare X23, 0
	266 JumpIfEqual {475}
	267 Move X8, [X23]
	268 Move X9, [X8+616]
	269 Move X2, [X8+624]
	270 Move X0, X23
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Move X8, 0xCC7000
	273 Move X8, [X8+2536]
	274 Move X23, X0
	275 Move X0, [X8]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Move X0, X23
	281 Move X1, X31
	282 Call Convert.ToBase64String, X0
	283 Move X1, X0
	284 Move X8, 0xCF9000
	285 Move X8, [X8+2128]
	286 Move X0, [X8]
	287 Move X2, X31
	288 Call String.Concat, X0, X1
	289 Compare X22, 0
	290 JumpIfEqual {476}
	291 Move X8, 0xCF9000
	292 Move X8, [X8+2000]
	293 Move X9, 0xCBF000
	294 Move X9, [X9+2064]
	295 Move X2, X0
	296 Move X1, [X8]
	297 Move X3, [X9]
	298 Move X0, X22
	299 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	300 Move X0, [X19+40]
	301 Move X1, X31
	302 Call JsonWriter.ToJson, X0
	303 Move X23, X0
	304 Move X0, X31
	305 Call Encoding.get_UTF8
	306 Compare X0, 0
	307 JumpIfEqual {471}
	308 Move X8, [X0]
	309 Move X9, [X8+616]
	310 Move X2, [X8+624]
	311 Move X1, X23
	312 NotImplemented "Instruction BLR not yet implemented."
	313 Move X24, [X25+16]
	314 Compare X24, 0
	315 JumpIfEqual {472}
	316 Move X10, 0xCF9000
	317 Move X10, [X10+1976]
	318 Move X8, [X24]
	319 Move W26, [X25+24]
	320 Move X27, [X19+88]
	321 Move X25, [X19+96]
	322 Move X1, [X10]
	323 NotImplemented "Instruction LDRH not yet implemented."
	324 Move X23, X0
	325 Compare X9, 0
	326 JumpIfEqual {333}
	327 Move X10, [X8+176]
	328 Add X10, X10, 8
	329 NotImplemented "Instruction LDUR not yet implemented."
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Subtract X9, X9, 1
	332 Add X10, X10, 16
	333 Move W2, 3
	334 Move X0, X24
	335 Call 0x1C5D788
	336 Move X8, [X19+104]
	337 Move TEMP, 0
	338 Not TEMP
	339 Move W9, TEMP
	340 Move [X31+24], X8
	341 Move [X19+104], X31
	342 Move [X19], W9
	343 Move W9, [X10]
	344 Add W9, W9, 3
	345 Add X8, X8, W9
	346 Add X0, X8, 312
	347 Move X8, [X0]
	348 Move X9, [X0+8]
	349 Move X0, X24
	350 Move X1, X21
	351 Move X2, X20
	352 Move X3, X22
	353 Move X4, X23
	354 Move W5, W26
	355 Move X6, X27
	356 Move X7, X25
	357 Move [X31], X9
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Compare X0, 0
	360 JumpIfEqual {473}
	361 Move X8, 0xCC1000
	362 Move X8, [X8+504]
	363 Move X1, [X8]
	364 Call Task`1<Object>.GetAwaiter, X0
	365 Move X8, 0xCC1000
	366 Move X8, [X8+496]
	367 Move [X31+24], X0
	368 Move X1, [X8]
	369 Add X0, X31, 24
	370 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	371 Move TEMP, X0
	372 And TEMP, TEMP, 1
	373 Compare TEMP, 1
	374 JumpIfNotEqual {400}
	375 Move X8, 0xCC1000
	376 Move X8, [X8+480]
	377 Add X0, X31, 24
	378 Move X1, [X8]
	379 Call TaskAwaiter`1<Object>.GetResult, X0
	380 Move X8, 0xCFA000
	381 Move X8, [X8+712]
	382 Move X1, [X8]
	383 Call JsonParser.FromJson, X0
	384 Move TEMP, 1
	385 Not TEMP
	386 Move W8, TEMP
	387 Move [X19+8], W8
	388 Move X20, X0
	389 Move X0, [X28]
	390 Move X21, 0xCFA000
	391 Move W8, [X0+224]
	392 Move X21, [X21+704]
	393 Compare W8, 0
	394 JumpIfNotEqual {396}
	395 Call 0x1C17DFC
	396 Move X2, [X21]
	397 Move X0, X19
	398 Move X1, X20
	399 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	400 Move [X19], W31
	401 Move X8, [X31+24]
	402 Move [X19+104], X8
	403 Move X0, [X28]
	404 Move W8, [X0+224]
	405 Compare W8, 0
	406 JumpIfNotEqual {408}
	407 Call 0x1C17DFC
	408 Move X8, 0xCFA000
	409 Move X8, [X8+784]
	410 Add X0, X19, 8
	411 Move X3, [X8]
	412 Add X1, X31, 24
	413 Move X2, X19
	414 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	415 Move X20, [X31+96]
	416 Move X19, [X31+104]
	417 Move X22, [X31+80]
	418 Move X21, [X31+88]
	419 Move X24, [X31+64]
	420 Move X23, [X31+72]
	421 Move X26, [X31+48]
	422 Move X25, [X31+56]
	423 Move X28, [X31+32]
	424 Move X27, [X31+40]
	425 Move X30, [X31+16]
	426 Add X31, X31, 112
	427 Return 
	428 Move X0, 0xCC6000
	429 Move X0, [X0+1400]
	430 Call 0x1C17D08
	431 Call 0x1C17F10
	432 Move X20, X0
	433 Move X0, 0xCFA000
	434 Move X0, [X0+752]
	435 Call 0x1C17D08
	436 Move X1, X0
	437 Move X0, X20
	438 Move X2, X31
	439 Call ArgumentException..ctor, X0, X1
	440 Move X0, 0xCFA000
	441 Move X0, [X0+792]
	442 Call 0x1C17D08
	443 Move X1, X0
	444 Move X0, X20
	445 Call 0x1C17DEC
	446 Move X0, 0xCC6000
	447 Move X0, [X0+1400]
	448 Call 0x1C17D08
	449 Call 0x1C17F10
	450 Move X20, X0
	451 Move X0, 0xCFA000
	452 Move X0, [X0+800]
	453 Call 0x1C17D08
	454 Move X1, X0
	455 Move X0, X20
	456 Move X2, X31
	457 Call ArgumentException..ctor, X0, X1
	458 Move X0, 0xCFA000
	459 Move X0, [X0+792]
	460 Call 0x1C17D08
	461 Move X1, X0
	462 Move X0, X20
	463 Call 0x1C17DEC
	464 Call 0x1C17F20
	465 Call 0x1C17F20
	466 Call 0x1C17F20
	467 Call 0x1C17F20
	468 Call 0x1C17F28
	469 Call 0x1C17F20
	470 Call 0x1C17F20
	471 Call 0x1C17F20
	472 Call 0x1C17F20
	473 Call 0x1C17F20
	474 Call 0x1C17F20
	475 Call 0x1C17F20
	476 Call 0x1C17F20
	477 Move X20, X0
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Move X0, X20
	480 Call 0x3EB2AD0
	481 Move X20, X0
	482 Move X0, 0xCBE000
	483 Move X0, [X0+2000]
	484 Call 0x1C17D08
	485 Move X8, [X20]
	486 Move X1, [X8]
	487 Call 0x1C18270
	488 Move TEMP, X0
	489 And TEMP, TEMP, 1
	490 Compare TEMP, 1
	491 JumpIfNotEqual {512}
	492 Move X20, [X20]
	493 Call 0x3EB2AE0
	494 Move TEMP, 1
	495 Not TEMP
	496 Move W8, TEMP
	497 Move [X19+8], W8
	498 Move X0, 0xCF9000
	499 Move X0, [X0+1640]
	500 Call 0x1C17D08
	501 Move W8, [X0+224]
	502 Compare W8, 0
	503 JumpIfNotEqual {505}
	504 Call 0x1C17DFC
	505 Move X0, 0xCFA000
	506 Move X0, [X0+768]
	507 Call 0x1C17D08
	508 Move X2, X0
	509 Move X0, X19
	510 Move X1, X20
	511 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	512 Move W0, 8
	513 Call 0x3EB2AF0
	514 Move X8, [X20]
	515 Move [X0], X8
	516 Move X1, 0xA7F000
	517 Add X1, X1, 3672
	518 Move X2, X31
	519 Call 0x3EB2B00
	520 Move X20, X0
	521 Call 0x3EB2AE0
	522 Move X0, X20
	523 Call 0x1D2D690
	524 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03436C18 ADD X10, X10, 0x10
	0x03436C1C B.NE 0x3436C08
	0x03436C20 MOVZ W2, 0x3
	0x03436C24 MOV X0, X24
	0x03436C28 BL 0x1C5C788
	0x03436C2C B 0x3436C58
	0x03436C30 LDR X8, [X19 + 0x48]
	0x03436C34 MOVN W9, 0x0
	0x03436C38 STR X8, [X31 + 0x18]
	0x03436C3C STR X31, [X19 + 0x48]
	0x03436C40 STR W9, [X19]
	0x03436C44 B 0x3436CB4
	0x03436C48 LDR W9, [X10]
	0x03436C4C ADD W9, W9, 0x3
	0x03436C50 ADD X8, X8, W9, 0x4, SXTW
	0x03436C54 ADD X0, X8, 0x138
	0x03436C58 LDP X8, X9, [X0]
	0x03436C5C MOV X0, X24
	0x03436C60 MOV X1, X21
	0x03436C64 MOV X2, X20
	0x03436C68 MOV X3, X22
	0x03436C6C MOV X4, X23
	0x03436C70 MOV W5, W26
	0x03436C74 MOV X6, X27
	0x03436C78 MOV X7, X25
	0x03436C7C STR X9, [X31]
	0x03436C80 BLR X8
	0x03436C84 CBZ X0, 0x3436DB4
	0x03436C88 ADRP X8, 0xCC0000
	0x03436C8C LDR X8, [X8 + 0x1F8]
	0x03436C90 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA8000
	007 Move X21, 0xCF9000
	008 Move W8, [X22+1648]
	009 Move X21, [X21+1640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCFA000
	017 Move X0, [X0+776]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF9000
	020 Move X0, [X0+1640]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1648], W8
	024 Move X0, [X21]
	025 Move X21, 0xCFA000
	026 Move W8, [X0+224]
	027 Move X21, [X21+776]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

