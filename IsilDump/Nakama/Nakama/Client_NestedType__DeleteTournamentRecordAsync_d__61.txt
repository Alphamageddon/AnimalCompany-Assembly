Type: Nakama.Client/<DeleteTournamentRecordAsync>d__61

Method: System.Void MoveNext()

Disassembly:
	0x03454644 MOV X5, X31
	0x03454648 BL 0x34440A8
	0x0345464C CBZ X0, 0x3454840
	0x03454650 ADRP X8, 0xCA0000
	0x03454654 LDR X8, [X8 + 0x840]
	0x03454658 LDR X1, [X8]
	0x0345465C BL 0x269F5D0
	0x03454660 ADRP X8, 0xCA0000
	0x03454664 LDR X8, [X8 + 0x838]
	0x03454668 STR X0, [X31 + 0x20]
	0x0345466C LDR X1, [X8]
	0x03454670 ADD X0, X31, 0x20
	0x03454674 BL 0x2677430
	0x03454678 TBNZ X0, 0x0, 0x3454468
	0x0345467C STR W31, [X19]
	0x03454680 LDR X8, [X31 + 0x20]
	0x03454684 STR X8, [X19 + 0x58]
	0x03454688 LDR X0, [X25]
	0x0345468C LDR W8, [X0 + 0xE0]
	0x03454690 CBNZ W8, 0x3454698
	0x03454694 BL 0x1C16DFC
	0x03454698 ADRP X8, 0xCDB000
	0x0345469C LDR X8, [X8 + 0xCF8]
	0x034546A0 ADD X0, X19, 0x8
	0x034546A4 LDR X3, [X8]
	0x034546A8 ADD X1, X31, 0x20
	0x034546AC MOV X2, X19
	0x034546B0 BL 0x21884DC
	0x034546B4 B 0x34547FC
	0x034546B8 CBZ X20, 0x3454820
	0x034546BC ADRP X8, 0xCA7000
	0x034546C0 LDR X8, [X8 + 0x818]
	0x034546C4 LDR X21, [X20 + 0x58]
	0x034546C8 LDR X23, [X19 + 0x50]
	0x034546CC LDR X0, [X8]
	0x034546D0 BL 0x1C16F10
	0x034546D4 ADRP X8, 0xCDB000
	0x034546D8 LDR X8, [X8 + 0xD08]
	0x034546DC MOV X22, X0
	0x034546E0 LDR X2, [X8]
	0x034546E4 MOV X1, X23
	0x034546E8 MOV X3, X31
	0x034546EC BL 0x2D27AA8
	0x034546F0 LDR X8, [X19 + 0x50]
	0x034546F4 CBZ X8, 0x3454814
	0x034546F8 ADRP X9, 0xCDB000
	0x034546FC LDR X23, [X19 + 0x48]
	0x03454700 LDR X9, [X9 + 0x7C8]
	0x03454704 CBNZ X23, 0x345470C
	0x03454708 LDR X23, [X20 + 0x18]
	0x0345470C LDR X20, [X8 + 0x18]
	0x03454710 LDR X1, [X8 + 0x30]
	0x03454714 LDR X2, [X9]
	0x03454718 STP X31, X31, [X31 + 0x8]
	0x0345471C ADD X0, X31, 0x8
	0x03454720 BL 0x242E368
	0x03454724 ADRP X8, 0xCDB000
	0x03454728 LDR X8, [X8 + 0x7D0]
	0x0345472C LDR X0, [X8]
	0x03454730 BL 0x1C16F10
	0x03454734 LDP X3, X4, [X31 + 0x8]
	0x03454738 MOV X24, X0
	0x0345473C MOV X1, X20
	0x03454740 MOV X2, X23
	0x03454744 MOV X5, X31
	0x03454748 BL 0x3465404
	0x0345474C CBZ X21, 0x3454818
	0x03454750 MOV X0, X21
	0x03454754 MOV X1, X22
	0x03454758 MOV X2, X24
	0x0345475C MOV X3, X31
	0x03454760 BL 0x3465B68
	0x03454764 CBZ X0, 0x345481C
	0x03454768 MOV X1, X31
	0x0345476C BL 0x33ED394
	0x03454770 STR X0, [X31 + 0x18]
	0x03454774 ADD X0, X31, 0x18
	0x03454778 MOV X1, X31
	0x0345477C BL 0x32C3A80
	0x03454780 TBZ X0, 0x0, 0x34547C0
	0x03454784 ADD X0, X31, 0x18
	0x03454788 MOV X1, X31
	0x0345478C BL 0x32C3B4C
	0x03454790 MOVN W8, 0x1
	0x03454794 STR W8, [X19]
	0x03454798 STR X31, [X19 + 0x50]
	0x0345479C LDR X0, [X25]
	0x034547A0 ADD X19, X19, 0x8
	0x034547A4 LDR W8, [X0 + 0xE0]
	0x034547A8 CBNZ W8, 0x34547B0
	0x034547AC BL 0x1C16DFC
	0x034547B0 MOV X0, X19
	0x034547B4 MOV X1, X31
	0x034547B8 BL 0x32C4864
	0x034547BC B 0x34547FC
	0x034547C0 MOVZ W8, 0x1
	0x034547C4 STR W8, [X19]
	0x034547C8 LDR X8, [X31 + 0x18]
	0x034547CC STR X8, [X19 + 0x60]
	0x034547D0 LDR X0, [X25]
	0x034547D4 LDR W8, [X0 + 0xE0]
	0x034547D8 CBNZ W8, 0x34547E0
	0x034547DC BL 0x1C16DFC
	0x034547E0 ADRP X8, 0xCDB000
	0x034547E4 LDR X8, [X8 + 0xD00]
	0x034547E8 ADD X0, X19, 0x8
	0x034547EC LDR X3, [X8]
	0x034547F0 ADD X1, X31, 0x18
	0x034547F4 MOV X2, X19
	0x034547F8 BL 0x2189BA0
	0x034547FC LDP X20, X19, [X31 + 0x60]
	0x03454800 LDP X22, X21, [X31 + 0x50]
	0x03454804 LDP X24, X23, [X31 + 0x40]
	0x03454808 LDP X30, X25, [X31 + 0x30]
	0x0345480C ADD X31, X31, 0x70
	0x03454810 RET
	0x03454814 BL 0x1C16F20
	0x03454818 BL 0x1C16F20
	0x0345481C BL 0x1C16F20
	0x03454820 BL 0x1C16F20
	0x03454824 BL 0x1C16F20
	0x03454828 BL 0x1C16F20
	0x0345482C BL 0x1C16F20
	0x03454830 BL 0x1C16F20
	0x03454834 BL 0x1C16F20
	0x03454838 BL 0x1C16F20
	0x0345483C BL 0x1C16F20
	0x03454840 BL 0x1C16F20
	0x03454844 B 0x34548B8
	0x03454848 B 0x34548B8
	0x0345484C B 0x34548B8
	0x03454850 B 0x34548B8
	0x03454854 B 0x34548B8
	0x03454858 B 0x34548B8
	0x0345485C B 0x34548B8
	0x03454860 B 0x34548B8
	0x03454864 B 0x34548B8
	0x03454868 B 0x34548B8
	0x0345486C B 0x34548B8
	0x03454870 B 0x34548B8
	0x03454874 B 0x34548B8
	0x03454878 B 0x34548B8
	0x0345487C B 0x34548B8
	0x03454880 B 0x34548B8
	0x03454884 B 0x34548B8
	0x03454888 B 0x34548B8
	0x0345488C B 0x34548B8
	0x03454890 B 0x34548B8
	0x03454894 B 0x34548B8
	0x03454898 B 0x34548B8
	0x0345489C B 0x34548B8
	0x034548A0 B 0x34548B8
	0x034548A4 B 0x34548B8
	0x034548A8 B 0x34548B8
	0x034548AC B 0x34548B8
	0x034548B0 B 0x34548B8
	0x034548B4 B 0x34548B8
	0x034548B8 MOV X20, X0
	0x034548BC CMP W1, 0x1
	0x034548C0 B.NE 0x3454954
	0x034548C4 MOV X0, X20
	0x034548C8 BL 0x3EB1AD0
	0x034548CC MOV X20, X0
	0x034548D0 ADRP X0, 0xC9F000
	0x034548D4 LDR X0, [X0 + 0x7D0]
	0x034548D8 BL 0x1C16D08
	0x034548DC LDR X8, [X20]
	0x034548E0 LDR X1, [X8]
	0x034548E4 BL 0x1C17270
	0x034548E8 TBZ X0, 0x0, 0x345492C
	0x034548EC LDR X20, [X20]
	0x034548F0 BL 0x3EB1AE0
	0x034548F4 MOVN W8, 0x1
	0x034548F8 STR X31, [X19 + 0x50]
	0x034548FC STR W8, [X19], #0x8
	0x03454900 ADRP X0, 0xCA2000
	0x03454904 LDR X0, [X0 + 0x280]
	0x03454908 BL 0x1C16D08
	0x0345490C LDR W8, [X0 + 0xE0]
	0x03454910 CBNZ W8, 0x3454918
	0x03454914 BL 0x1C16DFC
	0x03454918 MOV X0, X19
	0x0345491C MOV X1, X20
	0x03454920 MOV X2, X31
	0x03454924 BL 0x32C4908
	0x03454928 B 0x34547FC
	0x0345492C MOVZ W0, 0x8
	0x03454930 BL 0x3EB1AF0
	0x03454934 LDR X8, [X20]
	0x03454938 STR X8, [X0]
	0x0345493C ADRP X1, 0xA60000
	0x03454940 ADD X1, X1, 0xE58
	0x03454944 MOV X2, X31
	0x03454948 BL 0x3EB1B00
	0x0345494C MOV X20, X0
	0x03454950 BL 0x3EB1AE0
	0x03454954 MOV X0, X20
	0x03454958 BL 0x1D2C690
	0x0345495C BL 0x1990590
	0x03454960 STR X30, [X31 - 0x30]!
	0x03454964 STP X22, X21, [X31 + 0x10]
	0x03454968 STP X20, X19, [X31 + 0x20]
	0x0345496C ADRP X21, 0xF89000
	0x03454970 ADRP X22, 0xCA2000
	0x03454974 LDRB W8, [X21 + 0x77E]
	0x03454978 LDR X22, [X22 + 0x280]
	0x0345497C MOV X19, X1
	0x03454980 MOV X20, X0
	0x03454984 TBNZ X8, 0x0, 0x345499C
	0x03454988 ADRP X0, 0xCA2000
	0x0345498C LDR X0, [X0 + 0x280]
	0x03454990 BL 0x1C16CF4
	0x03454994 MOVZ W8, 0x1
	0x03454998 STRB W8, [X21 + 0x77E]
	0x0345499C LDR X0, [X22]
	0x034549A0 LDR W8, [X0 + 0xE0]
	0x034549A4 CBNZ W8, 0x34549AC
	0x034549A8 BL 0x1C16DFC
	0x034549AC ADD X0, X20, 0x8
	0x034549B0 MOV X1, X19
	0x034549B4 LDP X20, X19, [X31 + 0x20]
	0x034549B8 LDP X22, X21, [X31 + 0x10]
	0x034549BC MOV X2, X31
	0x034549C0 LDR X30, [X31], #0x30
	0x034549C4 B 0x32C477C
	0x034549C8 SUB X31, X31, 0x70
	0x034549CC STP X30, X25, [X31 + 0x30]
	0x034549D0 STP X24, X23, [X31 + 0x40]
	0x034549D4 STP X22, X21, [X31 + 0x50]
	0x034549D8 STP X20, X19, [X31 + 0x60]
	0x034549DC ADRP X20, 0xF89000
	0x034549E0 LDRB W8, [X20 + 0x77F]
	0x034549E4 MOV X19, X0
	0x034549E8 TBNZ X8, 0x0, 0x3454AD8
	0x034549EC ADRP X0, 0xCDB000
	0x034549F0 LDR X0, [X0 + 0xD18]
	0x034549F4 BL 0x1C16CF4
	0x034549F8 ADRP X0, 0xCDB000
	0x034549FC LDR X0, [X0 + 0xD20]
	0x03454A00 BL 0x1C16CF4
	0x03454A04 ADRP X0, 0xCDA000
	0x03454A08 LDR X0, [X0 + 0xCC8]
	0x03454A0C BL 0x1C16CF4
	0x03454A10 ADRP X0, 0xCDA000
	0x03454A14 LDR X0, [X0 + 0x2F8]
	0x03454A18 BL 0x1C16CF4
	0x03454A1C ADRP X0, 0xCA1000
	0x03454A20 LDR X0, [X0 + 0xA10]
	0x03454A24 BL 0x1C16CF4
	0x03454A28 ADRP X0, 0xCA0000
	0x03454A2C LDR X0, [X0 + 0x9F0]
	0x03454A30 BL 0x1C16CF4
	0x03454A34 ADRP X0, 0xCDB000
	0x03454A38 LDR X0, [X0 + 0xD28]
	0x03454A3C BL 0x1C16CF4
	0x03454A40 ADRP X0, 0xCA0000
	0x03454A44 LDR X0, [X0 + 0x818]
	0x03454A48 BL 0x1C16CF4
	0x03454A4C ADRP X0, 0xCDB000
	0x03454A50 LDR X0, [X0 + 0x7C8]
	0x03454A54 BL 0x1C16CF4
	0x03454A58 ADRP X0, 0xCDB000
	0x03454A5C LDR X0, [X0 + 0x7D0]
	0x03454A60 BL 0x1C16CF4
	0x03454A64 ADRP X0, 0xCDB000
	0x03454A68 LDR X0, [X0 + 0xD30]
	0x03454A6C BL 0x1C16CF4
	0x03454A70 ADRP X0, 0xCA0000
	0x03454A74 LDR X0, [X0 + 0x920]
	0x03454A78 BL 0x1C16CF4
	0x03454A7C ADRP X0, 0xCA0000
	0x03454A80 LDR X0, [X0 + 0x830]
	0x03454A84 BL 0x1C16CF4
	0x03454A88 ADRP X0, 0xCA0000
	0x03454A8C LDR X0, [X0 + 0x838]
	0x03454A90 BL 0x1C16CF4
	0x03454A94 ADRP X0, 0xCA0000
	0x03454A98 LDR X0, [X0 + 0x940]
	0x03454A9C BL 0x1C16CF4
	0x03454AA0 ADRP X0, 0xCA0000
	0x03454AA4 LDR X0, [X0 + 0x840]
	0x03454AA8 BL 0x1C16CF4
	0x03454AAC ADRP X0, 0xCA0000
	0x03454AB0 LDR X0, [X0 + 0x960]
	0x03454AB4 BL 0x1C16CF4
	0x03454AB8 ADRP X0, 0xCDB000
	0x03454ABC LDR X0, [X0 + 0xD38]
	0x03454AC0 BL 0x1C16CF4
	0x03454AC4 ADRP X0, 0xCDB000
	0x03454AC8 LDR X0, [X0 + 0xD40]
	0x03454ACC BL 0x1C16CF4
	0x03454AD0 MOVZ W8, 0x1
	0x03454AD4 STRB W8, [X20 + 0x77F]
	0x03454AD8 STP X31, X31, [X31 + 0x20]
	0x03454ADC STR X31, [X31 + 0x18]
	0x03454AE0 ADRP X25, 0xCDA000
	0x03454AE4 LDR W8, [X19]
	0x03454AE8 LDR X20, [X19 + 0x20]
	0x03454AEC LDR X25, [X25 + 0x2F8]
	0x03454AF0 CBZ W8, 0x3454B14
	0x03454AF4 CMP W8, 0x1
	0x03454AF8 B.NE 0x3454B40
	0x03454AFC LDR X8, [X19 + 0x50]
	0x03454B00 MOVN W9, 0x0
	0x03454B04 STR X8, [X31 + 0x18]
	0x03454B08 STR X31, [X19 + 0x50]
	0x03454B0C STR W9, [X19]
	0x03454B10 B 0x3454E44
	0x03454B14 LDR X8, [X19 + 0x48]
	0x03454B18 MOVN W9, 0x0
	0x03454B1C STR X8, [X31 + 0x20]
	0x03454B20 STR X31, [X19 + 0x48]
	0x03454B24 STR W9, [X19]
	0x03454B28 ADRP X8, 0xCA0000
	0x03454B2C LDR X8, [X8 + 0x830]
	0x03454B30 ADD X0, X31, 0x20
	0x03454B34 LDR X1, [X8]
	0x03454B38 BL 0x2677474
	0x03454B3C B 0x3454D64
	0x03454B40 ADRP X8, 0xCDB000
	0x03454B44 LDR X8, [X8 + 0xD40]
	0x03454B48 LDR X0, [X8]
	0x03454B4C BL 0x1C16F10
	0x03454B50 MOV X21, X0
	0x03454B54 MOV X1, X31
	0x03454B58 BL 0x3449304
	0x03454B5C STR X21, [X19 + 0x40]
	0x03454B60 CBZ X21, 0x3454EFC
	0x03454B64 LDR X8, [X19 + 0x20]
	0x03454B68 STR X8, [X21 + 0x10]
	0x03454B6C LDR X8, [X19 + 0x28]
	0x03454B70 STR X8, [X21 + 0x18]
	0x03454B74 LDR X8, [X19 + 0x30]
	0x03454B78 STR X8, [X21 + 0x20]
	0x03454B7C CBZ X20, 0x3454F00
	0x03454B80 LDRB W8, [X20 + 0x10]
	0x03454B84 CBZ W8, 0x3454D68
	0x03454B88 LDR X8, [X19 + 0x40]
	0x03454B8C CBZ X8, 0x3454F04
	0x03454B90 LDR X21, [X8 + 0x18]
	0x03454B94 CBZ X21, 0x3454F08
	0x03454B98 ADRP X23, 0xCA0000
	0x03454B9C LDR X8, [X21]
	0x03454BA0 LDR X23, [X23 + 0x818]
	0x03454BA4 LDRH W9, [X8 + 0x12E]
	0x03454BA8 LDR X1, [X23]
	0x03454BAC CBZ X9, 0x3454BD0
	0x03454BB0 LDR X10, [X8 + 0xB0]
	0x03454BB4 ADD X10, X10, 0x8
	0x03454BB8 LDUR X11, [X10 - 0x8]
	0x03454BBC CMP X11, X1
	0x03454BC0 B.EQ 0x3454BE0
	0x03454BC4 SUBS X9, X9, 0x1
	0x03454BC8 ADD X10, X10, 0x10
	0x03454BCC B.NE 0x3454BB8
	0x03454BD0 MOVZ W2, 0x7
	0x03454BD4 MOV X0, X21
	0x03454BD8 BL 0x1C5C788
	0x03454BDC B 0x3454BF0
	0x03454BE0 LDR W9, [X10]
	0x03454BE4 ADD W9, W9, 0x7
	0x03454BE8 ADD X8, X8, W9, 0x4, SXTW
	0x03454BEC ADD X0, X8, 0x138
	0x03454BF0 LDP X8, X1, [X0]
	0x03454BF4 MOV X0, X21
	0x03454BF8 BLR X8
	0x03454BFC MOV X1, X31
	0x03454C00 BL 0x32277A8
	0x03454C04 TBNZ X0, 0x0, 0x3454D64
	0x03454C08 LDR X8, [X19 + 0x40]
	0x03454C0C CBZ X8, 0x3454F0C
	0x03454C10 ADRP X9, 0xCA0000
	0x03454C14 LDR X9, [X9 + 0x9F0]
	0x03454C18 LDR X21, [X8 + 0x18]
	0x03454C1C LDR X0, [X9]
	0x03454C20 LDR W9, [X0 + 0xE0]
	0x03454C24 CBNZ W9, 0x3454C2C
	0x03454C28 BL 0x1C16DFC
	0x03454C2C MOV X0, X31
	0x03454C30 BL 0x33616A4
	0x03454C34 ADRP X22, 0xCA1000
	0x03454C38 LDR X22, [X22 + 0xA10]
	0x03454C3C MOV X8, X0
	0x03454C40 STR X8, [X31 + 0x28]
	0x03454C44 LDR X0, [X22]
	0x03454C48 LDR W8, [X0 + 0xE0]
	0x03454C4C CBNZ W8, 0x3454C58
	0x03454C50 BL 0x1C16DFC
	0x03454C54 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF8A000
	011 Move W8, [X20+1913]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCDC000
	018 Move X0, [X0+3256]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDC000
	021 Move X0, [X0+3264]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA3000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA2000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA1000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA8000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA1000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDC000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDC000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA1000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA1000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA1000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDC000
	054 Move X0, [X0+3272]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDC000
	057 Move X0, [X0+3280]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1913], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA3000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xCA1000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCDC000
	091 Move X8, [X8+3280]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass61_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xCA1000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xCA1000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xCA2000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xCA1000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xCA1000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCDC000
	242 Move X8, [X8+3256]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCA8000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCDC000
	257 Move X8, [X8+3272]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCDC000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCDC000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+72], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+88], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCDC000
	336 Move X8, [X8+3264]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xCA0000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+72], X31
	385 Move [X19+8], W8
	386 Move X0, 0xCA3000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA61000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03454C58 LDR X8, [X0 + 0xB8]
	0x03454C5C LDR X1, [X8]
	0x03454C60 ADD X0, X31, 0x28
	0x03454C64 MOV X2, X31
	0x03454C68 BL 0x335FC68
	0x03454C6C CBZ X21, 0x3454F10
	0x03454C70 LDR X8, [X21]
	0x03454C74 LDR X1, [X23]
	0x03454C78 MOV X22, X0
	0x03454C7C LDRH W9, [X8 + 0x12E]
	0x03454C80 CBZ X9, 0x3454CA4
	0x03454C84 LDR X10, [X8 + 0xB0]
	0x03454C88 ADD X10, X10, 0x8
	0x03454C8C LDUR X11, [X10 - 0x8]
	0x03454C90 CMP X11, X1
	0x03454C94 B.EQ 0x3454CB4
	0x03454C98 SUBS X9, X9, 0x1
	0x03454C9C ADD X10, X10, 0x10
	0x03454CA0 B.NE 0x3454C8C
	0x03454CA4 MOVZ W2, 0xB
	0x03454CA8 MOV X0, X21
	0x03454CAC BL 0x1C5C788
	0x03454CB0 B 0x3454CC4
	0x03454CB4 LDR W9, [X10]
	0x03454CB8 ADD W9, W9, 0xB
	0x03454CBC ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF8A000
	007 Move X22, 0xCA3000
	008 Move W8, [X21+1914]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA3000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1914], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

