Type: Nakama.RetryInvoker/<InvokeWithRetry>d__2`1

Method: System.Void MoveNext()

Disassembly:
	0x0296B460 LDR X8, [X20]
	0x0296B464 STR X8, [X0]
	0x0296B468 ADRP X1, 0x1549000
	0x0296B46C ADD X1, X1, 0xE58
	0x0296B470 MOV X2, X31
	0x0296B474 BL 0x3EB1B00
	0x0296B478 MOV X25, X0
	0x0296B47C BL 0x3EB1AE0
	0x0296B480 MOV X0, X25
	0x0296B484 BL 0x1D2C690
	0x0296B488 BL 0x1990590
	0x0296B48C SUB X31, X31, 0x30
	0x0296B490 STP X30, X21, [X31 + 0x10]
	0x0296B494 STP X20, X19, [X31 + 0x20]
	0x0296B498 LDR X8, [X2 + 0x20]
	0x0296B49C MOV X21, X2
	0x0296B4A0 MOV X19, X1
	0x0296B4A4 MOV X20, X0
	0x0296B4A8 LDRB W9, [X8 + 0x135]
	0x0296B4AC TBNZ X9, 0x0, 0x296B4BC
	0x0296B4B0 MOV X0, X8
	0x0296B4B4 BL 0x1C5C684
	0x0296B4B8 MOV X8, X0
	0x0296B4BC LDR X8, [X8 + 0xC0]
	0x0296B4C0 LDR X0, [X8 + 0x50]
	0x0296B4C4 LDRB W8, [X0 + 0x135]
	0x0296B4C8 TBNZ X8, 0x0, 0x296B4D0
	0x0296B4CC BL 0x1C5C684
	0x0296B4D0 LDR W8, [X0 + 0xE0]
	0x0296B4D4 CBNZ W8, 0x296B4DC
	0x0296B4D8 BL 0x1C16DFC
	0x0296B4DC LDR X8, [X21 + 0x20]
	0x0296B4E0 ADD X9, X8, 0x135
	0x0296B4E4 LDRH W9, [X9]
	0x0296B4E8 TBNZ X9, 0x0, 0x296B504
	0x0296B4EC MOV X0, X8
	0x0296B4F0 BL 0x1C5C684
	0x0296B4F4 LDR X8, [X21 + 0x20]
	0x0296B4F8 ADD X9, X8, 0x135
	0x0296B4FC LDRH W9, [X9]
	0x0296B500 B 0x296B508
	0x0296B504 MOV X0, X8
	0x0296B508 LDR X10, [X0 + 0xC0]
	0x0296B50C LDR X10, [X10 + 0x98]
	0x0296B510 LDR X3, [X10]
	0x0296B514 TBNZ X9, 0x0, 0x296B52C
	0x0296B518 MOV X0, X8
	0x0296B51C STR X3, [X31 + 0x8]
	0x0296B520 BL 0x1C5C684
	0x0296B524 LDR X3, [X31 + 0x8]
	0x0296B528 MOV X8, X0
	0x0296B52C LDR X8, [X8 + 0xC0]
	0x0296B530 ADD X0, X20, 0x8
	0x0296B534 MOV X1, X19
	0x0296B538 LDP X20, X19, [X31 + 0x20]
	0x0296B53C LDR X2, [X8 + 0x98]
	0x0296B540 LDP X30, X21, [X31 + 0x10]
	0x0296B544 ADD X31, X31, 0x30
	0x0296B548 BR X3
	0x0296B54C STR X30, [X31 - 0x20]!
	0x0296B550 STP X20, X19, [X31 + 0x10]
	0x0296B554 MOV W19, W1
	0x0296B558 MOV X1, X31
	0x0296B55C MOV X20, X0
	0x0296B560 BL 0x33BDD8C
	0x0296B564 STR W19, [X20 + 0x10]
	0x0296B568 LDP X20, X19, [X31 + 0x10]
	0x0296B56C LDR X30, [X31], #0x20
	0x0296B570 RET
	0x0296B574 RET
	0x0296B578 SUB X31, X31, 0x40
	0x0296B57C STP D9, D8, [X31 + 0x10]
	0x0296B580 STP X30, X21, [X31 + 0x20]
	0x0296B584 STP X20, X19, [X31 + 0x30]
	0x0296B588 LDR W8, [X0 + 0x10]
	0x0296B58C LDR X20, [X0 + 0x20]
	0x0296B590 MOV X19, X0
	0x0296B594 CMP W8, 0x1
	0x0296B598 B.EQ 0x296B5B4
	0x0296B59C CBNZ W8, 0x296B698
	0x0296B5A0 MOVN W8, 0x0
	0x0296B5A4 STR W31, [X19 + 0x58]
	0x0296B5A8 STR W8, [X19 + 0x10]
	0x0296B5AC FMOV S8, W31
	0x0296B5B0 B 0x296B5D0
	0x0296B5B4 LDR V8, [X19 + 0x58]
	0x0296B5B8 MOVN W8, 0x0
	0x0296B5BC MOV X0, X31
	0x0296B5C0 STR W8, [X19 + 0x10]
	0x0296B5C4 BL 0x3C3C714
	0x0296B5C8 FADD S8, S8, S0
	0x0296B5CC STR S8, [X19 + 0x58]
	0x0296B5D0 CBZ X20, 0x296B6B4
	0x0296B5D4 LDR X8, [X20]
	0x0296B5D8 LDR V9, [X19 + 0x28]
	0x0296B5DC MOV X0, X20
	0x0296B5E0 LDR X9, [X8 + 0x238]
	0x0296B5E4 LDR X1, [X8 + 0x240]
	0x0296B5E8 BLR X9
	0x0296B5EC FCMP S8, S9
	0x0296B5F0 B.PL 0x296B650
	0x0296B5F4 LDR V7, [X19 + 0x58]
	0x0296B5F8 LDP S17, S0, [X19 + 0x28]
	0x0296B5FC LDR X8, [X20]
	0x0296B600 LDP S1, S2, [X19 + 0x30]
	0x0296B604 LDP S3, S4, [X19 + 0x38]
	0x0296B608 LDP S5, S6, [X19 + 0x40]
	0x0296B60C FDIV S17, S7, S17
	0x0296B610 LDR V7, [X19 + 0x48]
	0x0296B614 LDR X9, [X8 + 0x208]
	0x0296B618 LDR X2, [X8 + 0x210]
	0x0296B61C FMOV S16, 1
	0x0296B620 FMIN S16, S17, S16
	0x0296B624 FCMP S17, 0x0
	0x0296B628 FMOV S17, W31
	0x0296B62C FCSEL S16, S16, S17, PL
	0x0296B630 MOVZ W1, 0x1
	0x0296B634 MOV X0, X20
	0x0296B638 STR S16, [X31]
	0x0296B63C MOVZ W21, 0x1
	0x0296B640 BLR X9
	0x0296B644 STR X31, [X19 + 0x18]
	0x0296B648 STR W21, [X19 + 0x10]
	0x0296B64C B 0x296B69C
	0x0296B650 LDR X8, [X20]
	0x0296B654 LDP S0, S1, [X19 + 0x2C]
	0x0296B658 LDP S2, S3, [X19 + 0x34]
	0x0296B65C LDP S4, S5, [X19 + 0x3C]
	0x0296B660 LDP S6, S7, [X19 + 0x44]
	0x0296B664 LDR X9, [X8 + 0x208]
	0x0296B668 LDR X2, [X8 + 0x210]
	0x0296B66C MOVZ W8, 0x3F800000
	0x0296B670 MOV X0, X20
	0x0296B674 MOV W1, W31
	0x0296B678 STR W8, [X31]
	0x0296B67C BLR X9
	0x0296B680 LDR X8, [X19 + 0x50]
	0x0296B684 CBZ X8, 0x296B698
	0x0296B688 LDR X9, [X8 + 0x18]
	0x0296B68C LDR X0, [X8 + 0x40]
	0x0296B690 LDR X1, [X8 + 0x28]
	0x0296B694 BLR X9
	0x0296B698 MOV W21, W31
	0x0296B69C MOV W0, W21
	0x0296B6A0 LDP X20, X19, [X31 + 0x30]
	0x0296B6A4 LDP X30, X21, [X31 + 0x20]
	0x0296B6A8 LDP D9, D8, [X31 + 0x10]
	0x0296B6AC ADD X31, X31, 0x40
	0x0296B6B0 RET
	0x0296B6B4 BL 0x1C16F20
	0x0296B6B8 LDR X0, [X0 + 0x18]
	0x0296B6BC RET
	0x0296B6C0 STR X30, [X31 - 0x20]!
	0x0296B6C4 STP X20, X19, [X31 + 0x10]
	0x0296B6C8 ADRP X0, 0x1788000
	0x0296B6CC LDR X0, [X0 + 0xB40]
	0x0296B6D0 MOV X19, X1
	0x0296B6D4 BL 0x1C16D08
	0x0296B6D8 BL 0x1C16F10
	0x0296B6DC MOV X1, X31
	0x0296B6E0 MOV X20, X0
	0x0296B6E4 BL 0x3380310
	0x0296B6E8 MOV X0, X20
	0x0296B6EC MOV X1, X19
	0x0296B6F0 BL 0x1C16DEC
	0x0296B6F4 LDR X0, [X0 + 0x18]
	0x0296B6F8 RET
	0x0296B6FC STR X30, [X31 - 0x20]!
	0x0296B700 STP X20, X19, [X31 + 0x10]
	0x0296B704 MOV W19, W1
	0x0296B708 MOV X1, X31
	0x0296B70C MOV X20, X0
	0x0296B710 BL 0x33BDD8C
	0x0296B714 STR W19, [X20 + 0x10]
	0x0296B718 LDP X20, X19, [X31 + 0x10]
	0x0296B71C LDR X30, [X31], #0x20
	0x0296B720 RET
	0x0296B724 RET
	0x0296B728 SUB X31, X31, 0x40
	0x0296B72C STP D9, D8, [X31 + 0x10]
	0x0296B730 STP X30, X21, [X31 + 0x20]
	0x0296B734 STP X20, X19, [X31 + 0x30]
	0x0296B738 LDR W8, [X0 + 0x10]
	0x0296B73C LDR X20, [X0 + 0x20]
	0x0296B740 MOV X19, X0
	0x0296B744 CMP W8, 0x1
	0x0296B748 B.EQ 0x296B764
	0x0296B74C CBNZ W8, 0x296B848
	0x0296B750 MOVN W8, 0x0
	0x0296B754 STR W31, [X19 + 0x58]
	0x0296B758 STR W8, [X19 + 0x10]
	0x0296B75C FMOV S8, W31
	0x0296B760 B 0x296B780
	0x0296B764 LDR V8, [X19 + 0x58]
	0x0296B768 MOVN W8, 0x0
	0x0296B76C MOV X0, X31
	0x0296B770 STR W8, [X19 + 0x10]
	0x0296B774 BL 0x3C3C714
	0x0296B778 FADD S8, S8, S0
	0x0296B77C STR S8, [X19 + 0x58]
	0x0296B780 CBZ X20, 0x296B864
	0x0296B784 LDR X8, [X20]
	0x0296B788 LDR V9, [X19 + 0x28]
	0x0296B78C MOV X0, X20
	0x0296B790 LDR X9, [X8 + 0x238]
	0x0296B794 LDR X1, [X8 + 0x240]
	0x0296B798 BLR X9
	0x0296B79C FCMP S8, S9
	0x0296B7A0 B.PL 0x296B800
	0x0296B7A4 LDR V7, [X19 + 0x58]
	0x0296B7A8 LDP S17, S0, [X19 + 0x28]
	0x0296B7AC LDR X8, [X20]
	0x0296B7B0 LDP S1, S2, [X19 + 0x30]
	0x0296B7B4 LDP S3, S4, [X19 + 0x38]
	0x0296B7B8 LDP S5, S6, [X19 + 0x40]
	0x0296B7BC FDIV S17, S7, S17
	0x0296B7C0 LDR V7, [X19 + 0x48]
	0x0296B7C4 LDR X9, [X8 + 0x208]
	0x0296B7C8 LDR X2, [X8 + 0x210]
	0x0296B7CC FMOV S16, 1
	0x0296B7D0 FMIN S16, S17, S16
	0x0296B7D4 FCMP S17, 0x0
	0x0296B7D8 FMOV S17, W31
	0x0296B7DC FCSEL S16, S16, S17, PL
	0x0296B7E0 MOVZ W1, 0x1
	0x0296B7E4 MOV X0, X20
	0x0296B7E8 STR S16, [X31]
	0x0296B7EC MOVZ W21, 0x1
	0x0296B7F0 BLR X9
	0x0296B7F4 STR X31, [X19 + 0x18]
	0x0296B7F8 STR W21, [X19 + 0x10]
	0x0296B7FC B 0x296B84C
	0x0296B800 LDR X8, [X20]
	0x0296B804 LDP S0, S1, [X19 + 0x2C]
	0x0296B808 LDP S2, S3, [X19 + 0x34]
	0x0296B80C LDP S4, S5, [X19 + 0x3C]
	0x0296B810 LDP S6, S7, [X19 + 0x44]
	0x0296B814 LDR X9, [X8 + 0x208]
	0x0296B818 LDR X2, [X8 + 0x210]
	0x0296B81C MOVZ W8, 0x3F800000
	0x0296B820 MOV X0, X20
	0x0296B824 MOV W1, W31
	0x0296B828 STR W8, [X31]
	0x0296B82C BLR X9
	0x0296B830 LDR X8, [X19 + 0x50]
	0x0296B834 CBZ X8, 0x296B848
	0x0296B838 LDR X9, [X8 + 0x18]
	0x0296B83C LDR X0, [X8 + 0x40]
	0x0296B840 LDR X1, [X8 + 0x28]
	0x0296B844 BLR X9
	0x0296B848 MOV W21, W31
	0x0296B84C MOV W0, W21
	0x0296B850 LDP X20, X19, [X31 + 0x30]
	0x0296B854 LDP X30, X21, [X31 + 0x20]
	0x0296B858 LDP D9, D8, [X31 + 0x10]
	0x0296B85C ADD X31, X31, 0x40
	0x0296B860 RET
	0x0296B864 BL 0x1C16F20
	0x0296B868 LDR X0, [X0 + 0x18]
	0x0296B86C RET
	0x0296B870 STR X30, [X31 - 0x20]!
	0x0296B874 STP X20, X19, [X31 + 0x10]
	0x0296B878 ADRP X0, 0x1788000
	0x0296B87C LDR X0, [X0 + 0xB40]
	0x0296B880 MOV X19, X1
	0x0296B884 BL 0x1C16D08
	0x0296B888 BL 0x1C16F10
	0x0296B88C MOV X1, X31
	0x0296B890 MOV X20, X0
	0x0296B894 BL 0x3380310
	0x0296B898 MOV X0, X20
	0x0296B89C MOV X1, X19
	0x0296B8A0 BL 0x1C16DEC
	0x0296B8A4 LDR X0, [X0 + 0x18]
	0x0296B8A8 RET
	0x0296B8AC STR X30, [X31 - 0x20]!
	0x0296B8B0 STP X20, X19, [X31 + 0x10]
	0x0296B8B4 MOV W19, W1
	0x0296B8B8 MOV X1, X31
	0x0296B8BC MOV X20, X0
	0x0296B8C0 BL 0x33BDD8C
	0x0296B8C4 STR W19, [X20 + 0x10]
	0x0296B8C8 LDP X20, X19, [X31 + 0x10]
	0x0296B8CC LDR X30, [X31], #0x20
	0x0296B8D0 RET
	0x0296B8D4 RET
	0x0296B8D8 STP D9, D8, [X31 - 0x30]!
	0x0296B8DC STP X30, X21, [X31 + 0x10]
	0x0296B8E0 STP X20, X19, [X31 + 0x20]
	0x0296B8E4 LDR W8, [X0 + 0x10]
	0x0296B8E8 LDR X20, [X0 + 0x20]
	0x0296B8EC MOV X19, X0
	0x0296B8F0 CMP W8, 0x1
	0x0296B8F4 B.EQ 0x296B910
	0x0296B8F8 CBNZ W8, 0x296B9D4
	0x0296B8FC MOVN W8, 0x0
	0x0296B900 STR W31, [X19 + 0x40]
	0x0296B904 STR W8, [X19 + 0x10]
	0x0296B908 FMOV S8, W31
	0x0296B90C B 0x296B92C
	0x0296B910 LDR V8, [X19 + 0x40]
	0x0296B914 MOVN W8, 0x0
	0x0296B918 MOV X0, X31
	0x0296B91C STR W8, [X19 + 0x10]
	0x0296B920 BL 0x3C3C714
	0x0296B924 FADD S8, S8, S0
	0x0296B928 STR S8, [X19 + 0x40]
	0x0296B92C CBZ X20, 0x296B9EC
	0x0296B930 LDR X8, [X20]
	0x0296B934 LDR V9, [X19 + 0x28]
	0x0296B938 MOV X0, X20
	0x0296B93C LDR X9, [X8 + 0x238]
	0x0296B940 LDR X1, [X8 + 0x240]
	0x0296B944 BLR X9
	0x0296B948 FCMP S8, S9
	0x0296B94C B.PL 0x296B99C
	0x0296B950 LDR X8, [X20]
	0x0296B954 LDR V2, [X19 + 0x40]
	0x0296B958 LDP S4, S0, [X19 + 0x28]
	0x0296B95C LDR V1, [X19 + 0x30]
	0x0296B960 LDR X9, [X8 + 0x208]
	0x0296B964 LDR X2, [X8 + 0x210]
	0x0296B968 FMOV S3, 1
	0x0296B96C FDIV S2, S2, S4
	0x0296B970 FMIN S3, S2, S3
	0x0296B974 FCMP S2, 0x0
	0x0296B978 FMOV S2, W31
	0x0296B97C FCSEL S2, S3, S2, PL
	0x0296B980 MOVZ W1, 0x1
	0x0296B984 MOV X0, X20
	0x0296B988 MOVZ W21, 0x1
	0x0296B98C BLR X9
	0x0296B990 STR X31, [X19 + 0x18]
	0x0296B994 STR W21, [X19 + 0x10]
	0x0296B998 B 0x296B9D8
	0x0296B99C LDR X8, [X20]
	0x0296B9A0 LDP S0, S1, [X19 + 0x2C]
	0x0296B9A4 FMOV S2, 1
	0x0296B9A8 MOV X0, X20
	0x0296B9AC LDR X9, [X8 + 0x208]
	0x0296B9B0 LDR X2, [X8 + 0x210]
	0x0296B9B4 MOV W1, W31
	0x0296B9B8 BLR X9
	0x0296B9BC LDR X8, [X19 + 0x38]
	0x0296B9C0 CBZ X8, 0x296B9D4
	0x0296B9C4 LDR X9, [X8 + 0x18]
	0x0296B9C8 LDR X0, [X8 + 0x40]
	0x0296B9CC LDR X1, [X8 + 0x28]
	0x0296B9D0 BLR X9
	0x0296B9D4 MOV W21, W31
	0x0296B9D8 MOV W0, W21
	0x0296B9DC LDP X20, X19, [X31 + 0x20]
	0x0296B9E0 LDP X30, X21, [X31 + 0x10]
	0x0296B9E4 LDP D9, D8, [X31], #0x30
	0x0296B9E8 RET
	0x0296B9EC BL 0x1C16F20
	0x0296B9F0 LDR X0, [X0 + 0x18]
	0x0296B9F4 RET
	0x0296B9F8 STR X30, [X31 - 0x20]!
	0x0296B9FC STP X20, X19, [X31 + 0x10]
	0x0296BA00 ADRP X0, 0x1788000
	0x0296BA04 LDR X0, [X0 + 0xB40]
	0x0296BA08 MOV X19, X1
	0x0296BA0C BL 0x1C16D08
	0x0296BA10 BL 0x1C16F10
	0x0296BA14 MOV X1, X31
	0x0296BA18 MOV X20, X0
	0x0296BA1C BL 0x3380310
	0x0296BA20 MOV X0, X20
	0x0296BA24 MOV X1, X19
	0x0296BA28 BL 0x1C16DEC
	0x0296BA2C LDR X0, [X0 + 0x18]
	0x0296BA30 RET
	0x0296BA34 STP X30, X21, [X31 - 0x20]!
	0x0296BA38 STP X20, X19, [X31 + 0x10]
	0x0296BA3C MOV W20, W1
	0x0296BA40 MOV X1, X31
	0x0296BA44 MOV X19, X2
	0x0296BA48 MOV X21, X0
	0x0296BA4C BL 0x33BDD8C
	0x0296BA50 LDR X8, [X19 + 0x20]
	0x0296BA54 MOVZ W1, 0x4
	0x0296BA58 LDR X8, [X8 + 0xC0]
	0x0296BA5C LDR X8, [X8]
	0x0296BA60 LDR X19, [X8 + 0x80]
	0x0296BA64 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1A70000
	009 Move W8, [X21+3686]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1789000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3686], W8
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Move W8, [X19]
	024 Move X21, [X19+48]
	025 Compare W8, 0
	026 JumpIfEqual {104}
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X19+56]
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W9, TEMP
	033 Move [X31+8], X8
	034 Move [X19+56], X31
	035 Move [X19], W9
	036 Move X8, [X19+64]
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W9, TEMP
	040 Move [X31], X8
	041 Move [X19+64], X31
	042 Move [X19], W9
	043 Add X0, X31, 0
	044 Move X1, X31
	045 Call TaskAwaiter.GetResult, X0
	046 Compare X21, 0
	047 JumpIfEqual {281}
	048 Move X0, [X20+32]
	049 Move X23, [X19+32]
	050 Move X22, [X19+40]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X3, [X8+128]
	059 Move X0, X21
	060 Move X1, X23
	061 Move X2, X22
	062 Call 0x2244230, X0, X1, X2
	063 Move X21, X0
	064 Compare X0, 0
	065 JumpIfEqual {283}
	066 Move X0, [X20+32]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X0+192]
	074 Move X1, [X8+32]
	075 Move X0, X21
	076 Call Task`1<Object>.GetAwaiter, X0
	077 Move [X31+8], X0
	078 Move X0, [X20+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Move X1, [X8+48]
	087 Add X0, X31, 8
	088 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {210}
	093 Move X0, [X20+32]
	094 Move W8, [X0+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {100}
	099 Call 0x1C5D684
	100 Move X8, [X0+192]
	101 Move X1, [X8+104]
	102 Add X0, X31, 8
	103 Call TaskAwaiter`1<Object>.GetResult, X0
	104 Move X8, [X19+56]
	105 Move TEMP, 0
	106 Not TEMP
	107 Move W9, TEMP
	108 Move [X31+8], X8
	109 Move [X19+56], X31
	110 Move [X19], W9
	111 Move X22, [X19+32]
	112 Compare X22, 0
	113 JumpIfEqual {282}
	114 Move X0, [X20+32]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move X0, [X22+64]
	122 Move X1, [X22+40]
	123 Move X8, [X22+24]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X22, X0
	126 Compare X0, 0
	127 JumpIfEqual {284}
	128 Move X0, [X20+32]
	129 Move W8, [X0+309]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {135}
	134 Call 0x1C5D684
	135 Move X8, [X0+192]
	136 Move X1, [X8+32]
	137 Move X0, X22
	138 Call Task`1<Object>.GetAwaiter, X0
	139 Move [X31+8], X0
	140 Move X0, [X20+32]
	141 Move W8, [X0+309]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Call 0x1C5D684
	147 Move X8, [X0+192]
	148 Move X1, [X8+48]
	149 Add X0, X31, 8
	150 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {246}
	155 Move X0, [X20+32]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move X8, [X0+192]
	163 Move X1, [X8+104]
	164 Add X0, X31, 8
	165 Call TaskAwaiter`1<Object>.GetResult, X0
	166 Move TEMP, 1
	167 Not TEMP
	168 Move W8, TEMP
	169 Move [X19+8], W8
	170 Move X22, X0
	171 Move X0, [X20+32]
	172 Move W8, [X0+309]
	173 Move TEMP, X8
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {178}
	177 Call 0x1C5D684
	178 Move X8, [X0+192]
	179 Move X0, [X8+80]
	180 Move W8, [X0+309]
	181 Move TEMP, X8
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {186}
	185 Call 0x1C5D684
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X0, [X20+32]
	191 Move W8, [X0+309]
	192 Move TEMP, X8
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {197}
	196 Call 0x1C5D684
	197 Move X8, [X0+192]
	198 Move X0, X19
	199 Move X1, X22
	200 Move X2, [X8+144]
	201 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	202 Move X20, [X31+48]
	203 Move X19, [X31+56]
	204 Move X22, [X31+32]
	205 Move X21, [X31+40]
	206 Move X30, [X31+16]
	207 Move X23, [X31+24]
	208 Add X31, X31, 64
	209 Return 
	210 Move W8, 2
	211 Move [X19], W8
	212 Move X8, [X31+8]
	213 Move [X19+56], X8
	214 Move X0, [X20+32]
	215 Move W8, [X0+309]
	216 Move TEMP, X8
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {221}
	220 Call 0x1C5D684
	221 Move X8, [X0+192]
	222 Move X0, [X8+80]
	223 Move W8, [X0+309]
	224 Move TEMP, X8
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {229}
	228 Call 0x1C5D684
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, [X20+32]
	234 Move W8, [X0+309]
	235 Move TEMP, X8
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfEqual {240}
	239 Call 0x1C5D684
	240 Move X8, [X0+192]
	241 Add X0, X19, 8
	242 Move X3, [X8+72]
	243 Add X1, X31, 8
	244 Move X2, X19
	245 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	246 Move [X19], W31
	247 Move X8, [X31+8]
	248 Move [X19+56], X8
	249 Move X0, [X20+32]
	250 Move W8, [X0+309]
	251 Move TEMP, X8
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {256}
	255 Call 0x1C5D684
	256 Move X8, [X0+192]
	257 Move X0, [X8+80]
	258 Move W8, [X0+309]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {264}
	263 Call 0x1C5D684
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, [X20+32]
	269 Move W8, [X0+309]
	270 Move TEMP, X8
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {275}
	274 Call 0x1C5D684
	275 Move X8, [X0+192]
	276 Add X0, X19, 8
	277 Move X3, [X8+72]
	278 Add X1, X31, 8
	279 Move X2, X19
	280 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X22, X1
	286 Move X23, X0
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X0, X23
	289 Call 0x3EB2AD0
	290 Move X22, X0
	291 Move X23, 0x1789000
	292 Move X23, [X23+2000]
	293 Move X0, X23
	294 Call 0x1C17D08
	295 Move X8, [X22]
	296 Move X1, [X8]
	297 Call 0x1C18270
	298 Move TEMP, X0
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfNotEqual {393}
	302 Move X22, [X22]
	303 Call 0x3EB2AE0
	304 Compare X22, 0
	305 JumpIfEqual {315}
	306 Move X8, [X22]
	307 Move X1, [X23]
	308 Move W10, [X8+304]
	309 Move W9, [X1+304]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X8, [X8+200]
	312 Add X8, X8, X9
	313 NotImplemented "Instruction LDUR not yet implemented."
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move X8, [X19+40]
	316 Compare X8, 0
	317 JumpIfEqual {401}
	318 Move X8, [X8+16]
	319 Compare X8, 0
	320 JumpIfEqual {388}
	321 Compare X21, 0
	322 JumpIfEqual {402}
	323 Move X8, [X21+16]
	324 Compare X8, 0
	325 JumpIfEqual {403}
	326 Move X0, [X8+64]
	327 Move X9, [X8+24]
	328 Move X2, [X8+40]
	329 Move X1, X22
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfNotEqual {388}
	335 Move X1, [X19+40]
	336 Move X0, X21
	337 Move X2, X22
	338 Move X3, X31
	339 Call RetryInvoker.Backoff, X0, X1, X2
	340 Compare X0, 0
	341 JumpIfEqual {404}
	342 Move X1, X31
	343 Call Task.GetAwaiter, X0
	344 Move [X31], X0
	345 Add X0, X31, 0
	346 Move X1, X31
	347 Call TaskAwaiter.get_IsCompleted, X0
	348 Move TEMP, X0
	349 And TEMP, TEMP, 1
	350 Compare TEMP, 1
	351 JumpIfEqual {43}
	352 Move W8, 1
	353 Move [X19], W8
	354 Move X8, [X31]
	355 Move [X19+64], X8
	356 Move X0, [X20+32]
	357 Move W8, [X0+309]
	358 Move TEMP, X8
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfEqual {363}
	362 Call 0x1C5D684
	363 Move X8, [X0+192]
	364 Move X0, [X8+80]
	365 Move W8, [X0+309]
	366 Move TEMP, X8
	367 And TEMP, TEMP, 1
	368 Compare TEMP, 1
	369 JumpIfEqual {371}
	370 Call 0x1C5D684
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {375}
	374 Call 0x1C17DFC
	375 Move X0, [X20+32]
	376 Move W8, [X0+309]
	377 Move TEMP, X8
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfEqual {382}
	381 Call 0x1C5D684
	382 Move X8, [X0+192]
	383 Add X0, X19, 8
	384 Move X3, [X8+120]
	385 Add X1, X31, 0
	386 Move X2, X19
	387 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	388 Move X0, X22
	389 Move X1, X20
	390 Call 0x1C17DEC
	391 Move X0, X22
	392 Call 0x1C181E0
	393 Move W0, 8
	394 Call 0x3EB2AF0
	395 Move X8, [X22]
	396 Move [X0], X8
	397 Move X1, 0x154A000
	398 Add X1, X1, 3672
	399 Move X2, X31
	400 Call 0x3EB2B00
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Move X22, X1
	406 Move X23, X0
	407 Call 0x3EB2AE0
	408 Move X22, X1
	409 Move X23, X0
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Move X0, X23
	412 Call 0x3EB2AD0
	413 Move X21, X0
	414 Move X0, 0x1789000
	415 Move X0, [X0+2000]
	416 Call 0x1C17D08
	417 Move X8, [X21]
	418 Move X1, [X8]
	419 Call 0x1C18270
	420 Move TEMP, X0
	421 And TEMP, TEMP, 1
	422 Compare TEMP, 1
	423 JumpIfNotEqual {461}
	424 Move X21, [X21]
	425 Call 0x3EB2AE0
	426 Move TEMP, 1
	427 Not TEMP
	428 Move W8, TEMP
	429 Move [X19+8], W8
	430 Move X0, [X20+32]
	431 Move W8, [X0+309]
	432 Move TEMP, X8
	433 And TEMP, TEMP, 1
	434 Compare TEMP, 1
	435 JumpIfEqual {437}
	436 Call 0x1C5D684
	437 Move X8, [X0+192]
	438 Move X0, [X8+80]
	439 Move W8, [X0+309]
	440 Move TEMP, X8
	441 And TEMP, TEMP, 1
	442 Compare TEMP, 1
	443 JumpIfEqual {445}
	444 Call 0x1C5D684
	445 Move W8, [X0+224]
	446 Compare W8, 0
	447 JumpIfNotEqual {449}
	448 Call 0x1C17DFC
	449 Move X0, [X20+32]
	450 Move W8, [X0+309]
	451 Move TEMP, X8
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfEqual {456}
	455 Call 0x1C5D684
	456 Move X8, [X0+192]
	457 Move X0, X19
	458 Move X1, X21
	459 Move X2, [X8+136]
	460 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	461 Move W0, 8
	462 Call 0x3EB2AF0
	463 Move X8, [X21]
	464 Move [X0], X8
	465 Move X1, 0x154A000
	466 Add X1, X1, 3672
	467 Move X2, X31
	468 Call 0x3EB2B00
	469 Move X23, X0
	470 Call 0x3EB2AE0
	471 Move X0, X23
	472 Call 0x1D2D690
	473 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0296BA68 BL 0x1C16D14
	0x0296BA6C MOV X0, X21
	0x0296BA70 MOV X1, X19
	0x0296BA74 BL 0x1C16D18
	0x0296BA78 STR W20, [X0]
	0x0296BA7C LDP X20, X19, [X31 + 0x10]
	0x0296BA80 LDP X30, X21, [X31], #0x20
	0x0296BA84 RET
	0x0296BA88 RET
	0x0296BA8C STP D9, D8, [X31 - 0x60]!
	0x0296BA90 STP X29, X30, [X31 + 0x10]
	0x0296BA94 STP X26, X25, [X31 + 0x20]
	0x0296BA98 STP X24, X23, [X31 + 0x30]
	0x0296BA9C STP X22, X21, [X31 + 0x40]
	0x0296BAA0 STP X20, X19, [X31 + 0x50]
	0x0296BAA4 ADD X29, X31, 0x10
	0x0296BAA8 SUB X31, X31, 0x30
	0x0296BAAC MRS X26, 0xC000
	0x0296BAB0 LDR X8, [X26 + 0x28]
	0x0296BAB4 MOV X20, X1
	0x0296BAB8 MOV X19, X0
	0x0296BABC STUR X8, [X29 - 0x18]
	0x0296BAC0 LDR X8, [X1 + 0x20]
	0x0296BAC4 LDR X8, [X8 + 0xC0]
	0x0296BAC8 LDR X9, [X8 + 0x18]
	0x0296BACC LDR W24, [X9 + 0xFC]
	0x0296BAD0 ADD X9, X31, 0x0
	0x0296BAD4 ADD X10, X24, 0xF
	0x0296BAD8 AND X10, X10, 0x1FFFFFFFF
	0x0296BADC SUB X21, X9, X10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+80]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X21+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Add X0, X20, 8
	038 Move X1, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, [X8+152]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	045 Return 

