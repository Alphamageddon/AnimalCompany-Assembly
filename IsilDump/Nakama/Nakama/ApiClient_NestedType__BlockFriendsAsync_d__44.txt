Type: Nakama.ApiClient/<BlockFriendsAsync>d__44

Method: System.Void MoveNext()

Disassembly:
	0x0341E7E4 LDR X30, [X31 + 0x10]
	0x0341E7E8 ADD X31, X31, 0x70
	0x0341E7EC RET
	0x0341E7F0 ADRP X0, 0xCDD000
	0x0341E7F4 LDR X0, [X0 + 0x578]
	0x0341E7F8 BL 0x1C16D08
	0x0341E7FC BL 0x1C16F10
	0x0341E800 MOV X20, X0
	0x0341E804 ADRP X0, 0xD10000
	0x0341E808 LDR X0, [X0 + 0xBC8]
	0x0341E80C BL 0x1C16D08
	0x0341E810 MOV X1, X0
	0x0341E814 MOV X0, X20
	0x0341E818 MOV X2, X31
	0x0341E81C BL 0x3314A68
	0x0341E820 ADRP X0, 0xD10000
	0x0341E824 LDR X0, [X0 + 0xBD0]
	0x0341E828 BL 0x1C16D08
	0x0341E82C MOV X1, X0
	0x0341E830 MOV X0, X20
	0x0341E834 BL 0x1C16DEC
	0x0341E838 BL 0x1C16F20
	0x0341E83C BL 0x1C16F20
	0x0341E840 BL 0x1C16F20
	0x0341E844 BL 0x1C16F28
	0x0341E848 BL 0x1C16F20
	0x0341E84C BL 0x1C16F20
	0x0341E850 BL 0x1C16F20
	0x0341E854 BL 0x1C16F20
	0x0341E858 BL 0x1C16F20
	0x0341E85C BL 0x1C16F20
	0x0341E860 B 0x341E8C4
	0x0341E864 B 0x341E8C4
	0x0341E868 B 0x341E8C4
	0x0341E86C B 0x341E8C4
	0x0341E870 B 0x341E8C4
	0x0341E874 B 0x341E8C4
	0x0341E878 B 0x341E8C4
	0x0341E87C B 0x341E8C4
	0x0341E880 B 0x341E8C4
	0x0341E884 B 0x341E8C4
	0x0341E888 B 0x341E8C4
	0x0341E88C B 0x341E8C4
	0x0341E890 B 0x341E8C4
	0x0341E894 B 0x341E8C4
	0x0341E898 B 0x341E8C4
	0x0341E89C B 0x341E8C4
	0x0341E8A0 B 0x341E8C4
	0x0341E8A4 B 0x341E8C4
	0x0341E8A8 B 0x341E8C4
	0x0341E8AC B 0x341E8C4
	0x0341E8B0 B 0x341E8C4
	0x0341E8B4 B 0x341E8C4
	0x0341E8B8 B 0x341E8C4
	0x0341E8BC B 0x341E8C4
	0x0341E8C0 B 0x341E8C4
	0x0341E8C4 MOV X20, X0
	0x0341E8C8 CMP W1, 0x1
	0x0341E8CC B.NE 0x341E968
	0x0341E8D0 MOV X0, X20
	0x0341E8D4 BL 0x3EB1AD0
	0x0341E8D8 MOV X20, X0
	0x0341E8DC ADRP X0, 0xCD5000
	0x0341E8E0 LDR X0, [X0 + 0x7D0]
	0x0341E8E4 BL 0x1C16D08
	0x0341E8E8 LDR X8, [X20]
	0x0341E8EC LDR X1, [X8]
	0x0341E8F0 BL 0x1C17270
	0x0341E8F4 TBZ X0, 0x0, 0x341E940
	0x0341E8F8 LDR X20, [X20]
	0x0341E8FC BL 0x3EB1AE0
	0x0341E900 MOVN W8, 0x1
	0x0341E904 STR W8, [X19], #0x8
	0x0341E908 ADRP X0, 0xD10000
	0x0341E90C LDR X0, [X0 + 0x4A8]
	0x0341E910 BL 0x1C16D08
	0x0341E914 LDR W8, [X0 + 0xE0]
	0x0341E918 CBNZ W8, 0x341E920
	0x0341E91C BL 0x1C16DFC
	0x0341E920 ADRP X0, 0xD10000
	0x0341E924 LDR X0, [X0 + 0xBD8]
	0x0341E928 BL 0x1C16D08
	0x0341E92C MOV X2, X0
	0x0341E930 MOV X0, X19
	0x0341E934 MOV X1, X20
	0x0341E938 BL 0x26324C8
	0x0341E93C B 0x341E7D0
	0x0341E940 MOVZ W0, 0x8
	0x0341E944 BL 0x3EB1AF0
	0x0341E948 LDR X8, [X20]
	0x0341E94C STR X8, [X0]
	0x0341E950 ADRP X1, 0xA96000
	0x0341E954 ADD X1, X1, 0xE58
	0x0341E958 MOV X2, X31
	0x0341E95C BL 0x3EB1B00
	0x0341E960 MOV X20, X0
	0x0341E964 BL 0x3EB1AE0
	0x0341E968 MOV X0, X20
	0x0341E96C BL 0x1D2C690
	0x0341E970 BL 0x1990590
	0x0341E974 STR X30, [X31 - 0x30]!
	0x0341E978 STP X22, X21, [X31 + 0x10]
	0x0341E97C STP X20, X19, [X31 + 0x20]
	0x0341E980 ADRP X22, 0xFBF000
	0x0341E984 ADRP X21, 0xD10000
	0x0341E988 LDRB W8, [X22 + 0x612]
	0x0341E98C LDR X21, [X21 + 0x4A8]
	0x0341E990 MOV X19, X1
	0x0341E994 MOV X20, X0
	0x0341E998 TBNZ X8, 0x0, 0x341E9BC
	0x0341E99C ADRP X0, 0xD10000
	0x0341E9A0 LDR X0, [X0 + 0xBE0]
	0x0341E9A4 BL 0x1C16CF4
	0x0341E9A8 ADRP X0, 0xD10000
	0x0341E9AC LDR X0, [X0 + 0x4A8]
	0x0341E9B0 BL 0x1C16CF4
	0x0341E9B4 MOVZ W8, 0x1
	0x0341E9B8 STRB W8, [X22 + 0x612]
	0x0341E9BC LDR X0, [X21]
	0x0341E9C0 ADRP X21, 0xD10000
	0x0341E9C4 LDR W8, [X0 + 0xE0]
	0x0341E9C8 LDR X21, [X21 + 0xBE0]
	0x0341E9CC CBNZ W8, 0x341E9D4
	0x0341E9D0 BL 0x1C16DFC
	0x0341E9D4 LDR X2, [X21]
	0x0341E9D8 ADD X0, X20, 0x8
	0x0341E9DC MOV X1, X19
	0x0341E9E0 LDP X20, X19, [X31 + 0x20]
	0x0341E9E4 LDP X22, X21, [X31 + 0x10]
	0x0341E9E8 LDR X30, [X31], #0x30
	0x0341E9EC B 0x2632228
	0x0341E9F0 SUB X31, X31, 0x60
	0x0341E9F4 STP X30, X27, [X31 + 0x10]
	0x0341E9F8 STP X26, X25, [X31 + 0x20]
	0x0341E9FC STP X24, X23, [X31 + 0x30]
	0x0341EA00 STP X22, X21, [X31 + 0x40]
	0x0341EA04 STP X20, X19, [X31 + 0x50]
	0x0341EA08 ADRP X20, 0xFBF000
	0x0341EA0C LDRB W8, [X20 + 0x613]
	0x0341EA10 MOV X19, X0
	0x0341EA14 TBNZ X8, 0x0, 0x341EAE0
	0x0341EA18 ADRP X0, 0xD10000
	0x0341EA1C LDR X0, [X0 + 0xBE8]
	0x0341EA20 BL 0x1C16CF4
	0x0341EA24 ADRP X0, 0xCD8000
	0x0341EA28 LDR X0, [X0 + 0x280]
	0x0341EA2C BL 0x1C16CF4
	0x0341EA30 ADRP X0, 0xCDE000
	0x0341EA34 LDR X0, [X0 + 0x8D8]
	0x0341EA38 BL 0x1C16CF4
	0x0341EA3C ADRP X0, 0xCD6000
	0x0341EA40 LDR X0, [X0 + 0x810]
	0x0341EA44 BL 0x1C16CF4
	0x0341EA48 ADRP X0, 0xCD6000
	0x0341EA4C LDR X0, [X0 + 0x6C0]
	0x0341EA50 BL 0x1C16CF4
	0x0341EA54 ADRP X0, 0xCD6000
	0x0341EA58 LDR X0, [X0 + 0x6D0]
	0x0341EA5C BL 0x1C16CF4
	0x0341EA60 ADRP X0, 0xD10000
	0x0341EA64 LDR X0, [X0 + 0x7B8]
	0x0341EA68 BL 0x1C16CF4
	0x0341EA6C ADRP X0, 0xCD8000
	0x0341EA70 LDR X0, [X0 + 0x1E0]
	0x0341EA74 BL 0x1C16CF4
	0x0341EA78 ADRP X0, 0xCD8000
	0x0341EA7C LDR X0, [X0 + 0x1F0]
	0x0341EA80 BL 0x1C16CF4
	0x0341EA84 ADRP X0, 0xCD8000
	0x0341EA88 LDR X0, [X0 + 0x1F8]
	0x0341EA8C BL 0x1C16CF4
	0x0341EA90 ADRP X0, 0xCDE000
	0x0341EA94 LDR X0, [X0 + 0x3A0]
	0x0341EA98 BL 0x1C16CF4
	0x0341EA9C ADRP X0, 0xD10000
	0x0341EAA0 LDR X0, [X0 + 0x7D0]
	0x0341EAA4 BL 0x1C16CF4
	0x0341EAA8 ADRP X0, 0xD10000
	0x0341EAAC LDR X0, [X0 + 0x7D8]
	0x0341EAB0 BL 0x1C16CF4
	0x0341EAB4 ADRP X0, 0xD10000
	0x0341EAB8 LDR X0, [X0 + 0xBF0]
	0x0341EABC BL 0x1C16CF4
	0x0341EAC0 ADRP X0, 0xCD5000
	0x0341EAC4 LDR X0, [X0 + 0x988]
	0x0341EAC8 BL 0x1C16CF4
	0x0341EACC ADRP X0, 0xCFE000
	0x0341EAD0 LDR X0, [X0 + 0x4C8]
	0x0341EAD4 BL 0x1C16CF4
	0x0341EAD8 MOVZ W8, 0x1
	0x0341EADC STRB W8, [X20 + 0x613]
	0x0341EAE0 STR X31, [X31 + 0x8]
	0x0341EAE4 ADRP X27, 0xCD8000
	0x0341EAE8 LDR W8, [X19]
	0x0341EAEC LDR X27, [X27 + 0x280]
	0x0341EAF0 CBZ W8, 0x341EC94
	0x0341EAF4 LDR X24, [X19 + 0x20]
	0x0341EAF8 CBZ X24, 0x341EDA8
	0x0341EAFC LDR X0, [X24 + 0x20]
	0x0341EB00 CBZ X0, 0x341EDAC
	0x0341EB04 ADRP X8, 0xD10000
	0x0341EB08 ADRP X9, 0xCD5000
	0x0341EB0C LDR X8, [X8 + 0xBF0]
	0x0341EB10 LDR X9, [X9 + 0x988]
	0x0341EB14 LDR X21, [X8]
	0x0341EB18 LDR X20, [X9]
	0x0341EB1C MOV X1, X31
	0x0341EB20 BL 0x361B448
	0x0341EB24 ADRP X8, 0xCDE000
	0x0341EB28 LDR X8, [X8 + 0x8D8]
	0x0341EB2C MOV X22, X0
	0x0341EB30 LDR X0, [X8]
	0x0341EB34 MOVZ W1, 0x1
	0x0341EB38 BL 0x1C16D6C
	0x0341EB3C MOV X1, X0
	0x0341EB40 CBZ X1, 0x341EDB0
	0x0341EB44 LDR W8, [X1 + 0x18]
	0x0341EB48 CBZ W8, 0x341EDB4
	0x0341EB4C MOVZ W8, 0x2F
	0x0341EB50 STRH W8, [X1 + 0x20]
	0x0341EB54 CBZ X22, 0x341EDB8
	0x0341EB58 MOV X0, X22
	0x0341EB5C MOV X2, X31
	0x0341EB60 BL 0x322BC58
	0x0341EB64 MOV X1, X21
	0x0341EB68 MOV X2, X31
	0x0341EB6C BL 0x321B938
	0x0341EB70 ADRP X8, 0xCDE000
	0x0341EB74 LDR X8, [X8 + 0x3A0]
	0x0341EB78 MOV X22, X0
	0x0341EB7C LDR X23, [X24 + 0x20]
	0x0341EB80 LDR X0, [X8]
	0x0341EB84 BL 0x1C16F10
	0x0341EB88 MOV X21, X0
	0x0341EB8C MOV X1, X23
	0x0341EB90 MOV X2, X31
	0x0341EB94 BL 0x36281F8
	0x0341EB98 CBZ X21, 0x341EDBC
	0x0341EB9C MOV X0, X21
	0x0341EBA0 MOV X1, X22
	0x0341EBA4 MOV X2, X31
	0x0341EBA8 BL 0x36288CC
	0x0341EBAC MOV X0, X21
	0x0341EBB0 MOV X1, X20
	0x0341EBB4 MOV X2, X31
	0x0341EBB8 BL 0x3628980
	0x0341EBBC MOV X0, X21
	0x0341EBC0 MOV X1, X31
	0x0341EBC4 BL 0x3628A38
	0x0341EBC8 ADRP X8, 0xCFE000
	0x0341EBCC ADRP X9, 0xCD6000
	0x0341EBD0 LDR X8, [X8 + 0x4C8]
	0x0341EBD4 LDR X9, [X9 + 0x6D0]
	0x0341EBD8 MOV X20, X0
	0x0341EBDC LDR X21, [X8]
	0x0341EBE0 LDR X0, [X9]
	0x0341EBE4 BL 0x1C16F10
	0x0341EBE8 ADRP X8, 0xCD6000
	0x0341EBEC LDR X8, [X8 + 0x6C0]
	0x0341EBF0 MOV X22, X0
	0x0341EBF4 LDR X1, [X8]
	0x0341EBF8 BL 0x2AA4804
	0x0341EBFC ADRP X8, 0xD10000
	0x0341EC00 LDR X8, [X8 + 0x7D8]
	0x0341EC04 LDR X1, [X19 + 0x28]
	0x0341EC08 LDR X0, [X8]
	0x0341EC0C MOV X2, X31
	0x0341EC10 BL 0x321B938
	0x0341EC14 CBZ X22, 0x341EDC0
	0x0341EC18 ADRP X8, 0xD10000
	0x0341EC1C LDR X8, [X8 + 0x7D0]
	0x0341EC20 ADRP X9, 0xCD6000
	0x0341EC24 LDR X9, [X9 + 0x810]
	0x0341EC28 MOV X2, X0
	0x0341EC2C LDR X1, [X8]
	0x0341EC30 LDR X3, [X9]
	0x0341EC34 MOV X0, X22
	0x0341EC38 BL 0x2AA5098
	0x0341EC3C LDR X23, [X24 + 0x10]
	0x0341EC40 CBZ X23, 0x341EDC4
	0x0341EC44 ADRP X10, 0xD10000
	0x0341EC48 LDR X10, [X10 + 0x7B8]
	0x0341EC4C LDR X8, [X23]
	0x0341EC50 LDR W25, [X24 + 0x18]
	0x0341EC54 LDP X26, X24, [X19 + 0x30]
	0x0341EC58 LDR X1, [X10]
	0x0341EC5C LDRH W9, [X8 + 0x12E]
	0x0341EC60 CBZ X9, 0x341EC84
	0x0341EC64 LDR X10, [X8 + 0xB0]
	0x0341EC68 ADD X10, X10, 0x8
	0x0341EC6C LDUR X11, [X10 - 0x8]
	0x0341EC70 CMP X11, X1
	0x0341EC74 B.EQ 0x341ECAC
	0x0341EC78 SUBS X9, X9, 0x1
	0x0341EC7C ADD X10, X10, 0x10
	0x0341EC80 B.NE 0x341EC6C
	0x0341EC84 MOVZ W2, 0x3
	0x0341EC88 MOV X0, X23
	0x0341EC8C BL 0x1C5C788
	0x0341EC90 B 0x341ECBC
	0x0341EC94 LDR X8, [X19 + 0x40]
	0x0341EC98 MOVN W9, 0x0
	0x0341EC9C STR X8, [X31 + 0x8]
	0x0341ECA0 STR X31, [X19 + 0x40]
	0x0341ECA4 STR W9, [X19]
	0x0341ECA8 B 0x341ED18
	0x0341ECAC LDR W9, [X10]
	0x0341ECB0 ADD W9, W9, 0x3
	0x0341ECB4 ADD X8, X8, W9, 0x4, SXTW
	0x0341ECB8 ADD X0, X8, 0x138
	0x0341ECBC LDP X8, X9, [X0]
	0x0341ECC0 MOV X0, X23
	0x0341ECC4 MOV X1, X21
	0x0341ECC8 MOV X2, X20
	0x0341ECCC MOV X3, X22
	0x0341ECD0 MOV X4, X31
	0x0341ECD4 MOV W5, W25
	0x0341ECD8 MOV X6, X26
	0x0341ECDC MOV X7, X24
	0x0341ECE0 STR X9, [X31]
	0x0341ECE4 BLR X8
	0x0341ECE8 CBZ X0, 0x341EDC8
	0x0341ECEC ADRP X8, 0xCD8000
	0x0341ECF0 LDR X8, [X8 + 0x1F8]
	0x0341ECF4 LDR X1, [X8]
	0x0341ECF8 BL 0x269F5D0
	0x0341ECFC ADRP X8, 0xCD8000
	0x0341ED00 LDR X8, [X8 + 0x1F0]
	0x0341ED04 STR X0, [X31 + 0x8]
	0x0341ED08 LDR X1, [X8]
	0x0341ED0C ADD X0, X31, 0x8
	0x0341ED10 BL 0x2677430
	0x0341ED14 TBZ X0, 0x0, 0x341ED54
	0x0341ED18 ADRP X8, 0xCD8000
	0x0341ED1C LDR X8, [X8 + 0x1E0]
	0x0341ED20 ADD X0, X31, 0x8
	0x0341ED24 LDR X1, [X8]
	0x0341ED28 BL 0x2677474
	0x0341ED2C MOVN W8, 0x1
	0x0341ED30 STR W8, [X19], #0x8
	0x0341ED34 LDR X0, [X27]
	0x0341ED38 LDR W8, [X0 + 0xE0]
	0x0341ED3C CBNZ W8, 0x341ED44
	0x0341ED40 BL 0x1C16DFC
	0x0341ED44 MOV X0, X19
	0x0341ED48 MOV X1, X31
	0x0341ED4C BL 0x32C4864
	0x0341ED50 B 0x341ED8C
	0x0341ED54 STR W31, [X19]
	0x0341ED58 LDR X8, [X31 + 0x8]
	0x0341ED5C STR X8, [X19 + 0x40]
	0x0341ED60 LDR X0, [X27]
	0x0341ED64 LDR W8, [X0 + 0xE0]
	0x0341ED68 CBNZ W8, 0x341ED70
	0x0341ED6C BL 0x1C16DFC
	0x0341ED70 ADRP X8, 0xD10000
	0x0341ED74 LDR X8, [X8 + 0xBE8]
	0x0341ED78 ADD X0, X19, 0x8
	0x0341ED7C LDR X3, [X8]
	0x0341ED80 ADD X1, X31, 0x8
	0x0341ED84 MOV X2, X19
	0x0341ED88 BL 0x2185F90
	0x0341ED8C LDP X20, X19, [X31 + 0x50]
	0x0341ED90 LDP X22, X21, [X31 + 0x40]
	0x0341ED94 LDP X24, X23, [X31 + 0x30]
	0x0341ED98 LDP X26, X25, [X31 + 0x20]
	0x0341ED9C LDP X30, X27, [X31 + 0x10]
	0x0341EDA0 ADD X31, X31, 0x60
	0x0341EDA4 RET
	0x0341EDA8 BL 0x1C16F20
	0x0341EDAC BL 0x1C16F20
	0x0341EDB0 BL 0x1C16F20
	0x0341EDB4 BL 0x1C16F28
	0x0341EDB8 BL 0x1C16F20
	0x0341EDBC BL 0x1C16F20
	0x0341EDC0 BL 0x1C16F20
	0x0341EDC4 BL 0x1C16F20
	0x0341EDC8 BL 0x1C16F20
	0x0341EDCC B 0x341EE18
	0x0341EDD0 B 0x341EE18
	0x0341EDD4 B 0x341EE18
	0x0341EDD8 B 0x341EE18
	0x0341EDDC B 0x341EE18
	0x0341EDE0 B 0x341EE18
	0x0341EDE4 B 0x341EE18
	0x0341EDE8 B 0x341EE18
	0x0341EDEC B 0x341EE18
	0x0341EDF0 B 0x341EE18
	0x0341EDF4 B 0x341EE18
	0x0341EDF8 B 0x341EE18
	0x0341EDFC B 0x341EE18
	0x0341EE00 B 0x341EE18
	0x0341EE04 B 0x341EE18
	0x0341EE08 B 0x341EE18
	0x0341EE0C B 0x341EE18
	0x0341EE10 B 0x341EE18
	0x0341EE14 B 0x341EE18
	0x0341EE18 MOV X20, X0
	0x0341EE1C CMP W1, 0x1
	0x0341EE20 B.NE 0x341EEB0
	0x0341EE24 MOV X0, X20
	0x0341EE28 BL 0x3EB1AD0
	0x0341EE2C MOV X20, X0
	0x0341EE30 ADRP X0, 0xCD5000
	0x0341EE34 LDR X0, [X0 + 0x7D0]
	0x0341EE38 BL 0x1C16D08
	0x0341EE3C LDR X8, [X20]
	0x0341EE40 LDR X1, [X8]
	0x0341EE44 BL 0x1C17270
	0x0341EE48 TBZ X0, 0x0, 0x341EE88
	0x0341EE4C LDR X20, [X20]
	0x0341EE50 BL 0x3EB1AE0
	0x0341EE54 MOVN W8, 0x1
	0x0341EE58 STR W8, [X19], #0x8
	0x0341EE5C ADRP X0, 0xCD8000
	0x0341EE60 LDR X0, [X0 + 0x280]
	0x0341EE64 BL 0x1C16D08
	0x0341EE68 LDR W8, [X0 + 0xE0]
	0x0341EE6C CBNZ W8, 0x341EE74
	0x0341EE70 BL 0x1C16DFC
	0x0341EE74 MOV X0, X19
	0x0341EE78 MOV X1, X20
	0x0341EE7C MOV X2, X31
	0x0341EE80 BL 0x32C4908
	0x0341EE84 B 0x341ED8C
	0x0341EE88 MOVZ W0, 0x8
	0x0341EE8C BL 0x3EB1AF0
	0x0341EE90 LDR X8, [X20]
	0x0341EE94 STR X8, [X0]
	0x0341EE98 ADRP X1, 0xA96000
	0x0341EE9C ADD X1, X1, 0xE58
	0x0341EEA0 MOV X2, X31
	0x0341EEA4 BL 0x3EB1B00
	0x0341EEA8 MOV X20, X0
	0x0341EEAC BL 0x3EB1AE0
	0x0341EEB0 MOV X0, X20
	0x0341EEB4 BL 0x1D2C690
	0x0341EEB8 BL 0x1990590
	0x0341EEBC STR X30, [X31 - 0x30]!
	0x0341EEC0 STP X22, X21, [X31 + 0x10]
	0x0341EEC4 STP X20, X19, [X31 + 0x20]
	0x0341EEC8 ADRP X21, 0xFBF000
	0x0341EECC ADRP X22, 0xCD8000
	0x0341EED0 LDRB W8, [X21 + 0x614]
	0x0341EED4 LDR X22, [X22 + 0x280]
	0x0341EED8 MOV X19, X1
	0x0341EEDC MOV X20, X0
	0x0341EEE0 TBNZ X8, 0x0, 0x341EEF8
	0x0341EEE4 ADRP X0, 0xCD8000
	0x0341EEE8 LDR X0, [X0 + 0x280]
	0x0341EEEC BL 0x1C16CF4
	0x0341EEF0 MOVZ W8, 0x1
	0x0341EEF4 STRB W8, [X21 + 0x614]
	0x0341EEF8 LDR X0, [X22]
	0x0341EEFC LDR W8, [X0 + 0xE0]
	0x0341EF00 CBNZ W8, 0x341EF08
	0x0341EF04 BL 0x1C16DFC
	0x0341EF08 ADD X0, X20, 0x8
	0x0341EF0C MOV X1, X19
	0x0341EF10 LDP X20, X19, [X31 + 0x20]
	0x0341EF14 LDP X22, X21, [X31 + 0x10]
	0x0341EF18 MOV X2, X31
	0x0341EF1C LDR X30, [X31], #0x30
	0x0341EF20 B 0x32C477C
	0x0341EF24 SUB X31, X31, 0x90
	0x0341EF28 STP X29, X30, [X31 + 0x30]
	0x0341EF2C STP X28, X27, [X31 + 0x40]
	0x0341EF30 STP X26, X25, [X31 + 0x50]
	0x0341EF34 STP X24, X23, [X31 + 0x60]
	0x0341EF38 STP X22, X21, [X31 + 0x70]
	0x0341EF3C STP X20, X19, [X31 + 0x80]
	0x0341EF40 ADRP X20, 0xFBF000
	0x0341EF44 LDRB W8, [X20 + 0x615]
	0x0341EF48 MOV X19, X0
	0x0341EF4C TBNZ X8, 0x0, 0x341F084
	0x0341EF50 ADRP X0, 0xD10000
	0x0341EF54 LDR X0, [X0 + 0xBF8]
	0x0341EF58 BL 0x1C16CF4
	0x0341EF5C ADRP X0, 0xCD8000
	0x0341EF60 LDR X0, [X0 + 0x280]
	0x0341EF64 BL 0x1C16CF4
	0x0341EF68 ADRP X0, 0xCDE000
	0x0341EF6C LDR X0, [X0 + 0x8D8]
	0x0341EF70 BL 0x1C16CF4
	0x0341EF74 ADRP X0, 0xCD6000
	0x0341EF78 LDR X0, [X0 + 0x810]
	0x0341EF7C BL 0x1C16CF4
	0x0341EF80 ADRP X0, 0xCD6000
	0x0341EF84 LDR X0, [X0 + 0x6C0]
	0x0341EF88 BL 0x1C16CF4
	0x0341EF8C ADRP X0, 0xCD6000
	0x0341EF90 LDR X0, [X0 + 0x6D0]
	0x0341EF94 BL 0x1C16CF4
	0x0341EF98 ADRP X0, 0xCD5000
	0x0341EF9C LDR X0, [X0 + 0xE00]
	0x0341EFA0 BL 0x1C16CF4
	0x0341EFA4 ADRP X0, 0xCD5000
	0x0341EFA8 LDR X0, [X0 + 0xF70]
	0x0341EFAC BL 0x1C16CF4
	0x0341EFB0 ADRP X0, 0xCD5000
	0x0341EFB4 LDR X0, [X0 + 0xF78]
	0x0341EFB8 BL 0x1C16CF4
	0x0341EFBC ADRP X0, 0xCD5000
	0x0341EFC0 LDR X0, [X0 + 0xE18]
	0x0341EFC4 BL 0x1C16CF4
	0x0341EFC8 ADRP X0, 0xD10000
	0x0341EFCC LDR X0, [X0 + 0x7B8]
	0x0341EFD0 BL 0x1C16CF4
	0x0341EFD4 ADRP X0, 0xCD5000
	0x0341EFD8 LDR X0, [X0 + 0xAC8]
	0x0341EFDC BL 0x1C16CF4
	0x0341EFE0 ADRP X0, 0xCD8000
	0x0341EFE4 LDR X0, [X0 + 0x1E0]
	0x0341EFE8 BL 0x1C16CF4
	0x0341EFEC ADRP X0, 0xCD8000
	0x0341EFF0 LDR X0, [X0 + 0x1F0]
	0x0341EFF4 BL 0x1C16CF4
	0x0341EFF8 ADRP X0, 0xCD8000
	0x0341EFFC LDR X0, [X0 + 0x1F8]
	0x0341F000 BL 0x1C16CF4
	0x0341F004 ADRP X0, 0xCDD000
	0x0341F008 LDR X0, [X0 + 0x3A0]
	0x0341F00C BL 0x1C16CF4
	0x0341F010 ADRP X0, 0xCD6000
	0x0341F014 LDR X0, [X0 + 0xA28]
	0x0341F018 BL 0x1C16CF4
	0x0341F01C ADRP X0, 0xD0F000
	0x0341F020 LDR X0, [X0 + 0x7C0]
	0x0341F024 BL 0x1C16CF4
	0x0341F028 ADRP X0, 0xD0F000
	0x0341F02C LDR X0, [X0 + 0x7C8]
	0x0341F030 BL 0x1C16CF4
	0x0341F034 ADRP X0, 0xCDD000
	0x0341F038 LDR X0, [X0 + 0x720]
	0x0341F03C BL 0x1C16CF4
	0x0341F040 ADRP X0, 0xD0F000
	0x0341F044 LDR X0, [X0 + 0x7D0]
	0x0341F048 BL 0x1C16CF4
	0x0341F04C ADRP X0, 0xD0F000
	0x0341F050 LDR X0, [X0 + 0x7D8]
	0x0341F054 BL 0x1C16CF4
	0x0341F058 ADRP X0, 0xD0F000
	0x0341F05C LDR X0, [X0 + 0x7E0]
	0x0341F060 BL 0x1C16CF4
	0x0341F064 ADRP X0, 0xCD4000
	0x0341F068 LDR X0, [X0 + 0x988]
	0x0341F06C BL 0x1C16CF4
	0x0341F070 ADRP X0, 0xCFD000
	0x0341F074 LDR X0, [X0 + 0x4C8]
	0x0341F078 BL 0x1C16CF4
	0x0341F07C MOVZ W8, 0x1
	0x0341F080 STRB W8, [X20 + 0x615]
	0x0341F084 STR X31, [X31 + 0x28]
	0x0341F088 ADRP X27, 0xCD7000
	0x0341F08C LDR W26, [X19]
	0x0341F090 LDR X27, [X27 + 0x280]
	0x0341F094 CBZ W26, 0x341F120
	0x0341F098 ADRP X8, 0xD0F000
	0x0341F09C ADRP X9, 0xCD4000
	0x0341F0A0 LDR X8, [X8 + 0x7E0]
	0x0341F0A4 LDR X9, [X9 + 0x988]
	0x0341F0A8 LDR X20, [X19 + 0x30]
	0x0341F0AC LDR X21, [X19 + 0x20]
	0x0341F0B0 LDR X22, [X8]
	0x0341F0B4 LDR X24, [X9]
	0x0341F0B8 CBNZ X21, 0x341F0D8
	0x0341F0BC ADRP X8, 0xCD4000
	0x0341F0C0 LDR X8, [X8 + 0xAC8]
	0x0341F0C4 LDR X0, [X8]
	0x0341F0C8 MOV W1, W31
	0x0341F0CC BL 0x1C16D6C
	0x0341F0D0 MOV X21, X0
	0x0341F0D4 CBZ X0, 0x341F7D4
	0x0341F0D8 ADRP X10, 0xCD4000
	0x0341F0DC LDR X8, [X21]
	0x0341F0E0 LDR X10, [X10 + 0xF70]
	0x0341F0E4 LDRH W9, [X8 + 0x12E]
	0x0341F0E8 LDR X1, [X10]
	0x0341F0EC CBZ X9, 0x341F110
	0x0341F0F0 LDR X10, [X8 + 0xB0]
	0x0341F0F4 ADD X10, X10, 0x8
	0x0341F0F8 LDUR X11, [X10 - 0x8]
	0x0341F0FC CMP X11, X1
	0x0341F100 B.EQ 0x341F138
	0x0341F104 SUBS X9, X9, 0x1
	0x0341F108 ADD X10, X10, 0x10
	0x0341F10C B.NE 0x341F0F8
	0x0341F110 MOV X0, X21
	0x0341F114 MOV W2, W31
	0x0341F118 BL 0x1C5C788
	0x0341F11C B 0x341F144
	0x0341F120 LDR X8, [X19 + 0x50]
	0x0341F124 MOVN W9, 0x0
	0x0341F128 STR X8, [X31 + 0x28]
	0x0341F12C STR X31, [X19 + 0x50]
	0x0341F130 STR W9, [X19]
	0x0341F134 B 0x341F704
	0x0341F138 LDRSW X9, [X10]
	0x0341F13C ADD X8, X8, X9, 0x4, LSL
	0x0341F140 ADD X0, X8, 0x138
	0x0341F144 LDP X8, X1, [X0]
	0x0341F148 MOV X0, X21
	0x0341F14C BLR X8
	0x0341F150 STP X22, X20, [X31 + 0x18]
	0x0341F154 ADRP X28, 0xCD4000
	0x0341F158 ADRP X29, 0xCD4000
	0x0341F15C ADRP X27, 0xCD6000
	0x0341F160 ADRP X25, 0xD0F000
	0x0341F164 ADRP X20, 0xCDD000
	0x0341F168 LDR X28, [X28 + 0xE18]
	0x0341F16C LDR X29, [X29 + 0xF78]
	0x0341F170 LDR X27, [X27 + 0xA28]
	0x0341F174 LDR X25, [X25 + 0x7C0]
	0x0341F178 LDR X20, [X20 + 0x720]
	0x0341F17C MOV X23, X0
	0x0341F180 MOV X0, X24
	0x0341F184 CBZ X23, 0x341F798
	0x0341F188 LDR X8, [X23]
	0x0341F18C LDR X1, [X28]
	0x0341F190 MOV X21, X0
	0x0341F194 LDRH W9, [X8 + 0x12E]
	0x0341F198 CBZ X9, 0x341F1BC
	0x0341F19C LDR X10, [X8 + 0xB0]
	0x0341F1A0 ADD X10, X10, 0x8
	0x0341F1A4 LDUR X11, [X10 - 0x8]
	0x0341F1A8 CMP X11, X1
	0x0341F1AC B.EQ 0x341F1CC
	0x0341F1B0 SUBS X9, X9, 0x1
	0x0341F1B4 ADD X10, X10, 0x10
	0x0341F1B8 B.NE 0x341F1A4
	0x0341F1BC MOV X0, X23
	0x0341F1C0 MOV W2, W31
	0x0341F1C4 BL 0x1C5C788
	0x0341F1C8 B 0x341F1D8
	0x0341F1CC LDRSW X9, [X10]
	0x0341F1D0 ADD X8, X8, X9, 0x4, LSL
	0x0341F1D4 ADD X0, X8, 0x138
	0x0341F1D8 LDP X8, X1, [X0]
	0x0341F1DC MOV X0, X23
	0x0341F1E0 BLR X8
	0x0341F1E4 TBZ X0, 0x0, 0x341F27C
	0x0341F1E8 LDR X8, [X23]
	0x0341F1EC LDR X1, [X29]
	0x0341F1F0 LDRH W9, [X8 + 0x12E]
	0x0341F1F4 CBZ X9, 0x341F218
	0x0341F1F8 LDR X10, [X8 + 0xB0]
	0x0341F1FC ADD X10, X10, 0x8
	0x0341F200 LDUR X11, [X10 - 0x8]
	0x0341F204 CMP X11, X1
	0x0341F208 B.EQ 0x341F228
	0x0341F20C SUBS X9, X9, 0x1
	0x0341F210 ADD X10, X10, 0x10
	0x0341F214 B.NE 0x341F200
	0x0341F218 MOV X0, X23
	0x0341F21C MOV W2, W31
	0x0341F220 BL 0x1C5C788
	0x0341F224 B 0x341F234
	0x0341F228 LDRSW X9, [X10]
	0x0341F22C ADD X8, X8, X9, 0x4, LSL
	0x0341F230 ADD X0, X8, 0x138
	0x0341F234 LDP X8, X1, [X0]
	0x0341F238 MOV X0, X23
	0x0341F23C BLR X8
	0x0341F240 MOV X22, X0
	0x0341F244 LDR X0, [X27]
	0x0341F248 LDR W8, [X0 + 0xE0]
	0x0341F24C CBNZ W8, 0x341F254
	0x0341F250 BL 0x1C16DFC
	0x0341F254 MOV X0, X22
	0x0341F258 MOV X1, X31
	0x0341F25C BL 0x3624D20
	0x0341F260 LDR X1, [X25]
	0x0341F264 LDR X3, [X20]
	0x0341F268 MOV X2, X0
	0x0341F26C MOV X0, X21
	0x0341F270 MOV X4, X31
	0x0341F274 BL 0x32277C4
	0x0341F278 B 0x341F184
	0x0341F27C MOV X24, X31
	0x0341F280 MOVZ W22, 0x6
	0x0341F284 TBZ X26, 0x1F, 0x341F2EC
	0x0341F288 CBZ X23, 0x341F2EC
	0x0341F28C ADRP X10, 0xCD4000
	0x0341F290 LDR X8, [X23]
	0x0341F294 LDR X10, [X10 + 0xE00]
	0x0341F298 LDRH W9, [X8 + 0x12E]
	0x0341F29C LDR X1, [X10]
	0x0341F2A0 CBZ X9, 0x341F2C4
	0x0341F2A4 LDR X10, [X8 + 0xB0]
	0x0341F2A8 ADD X10, X10, 0x8
	0x0341F2AC LDUR X11, [X10 - 0x8]
	0x0341F2B0 CMP X11, X1
	0x0341F2B4 B.EQ 0x341F2D4
	0x0341F2B8 SUBS X9, X9, 0x1
	0x0341F2BC ADD X10, X10, 0x10
	0x0341F2C0 B.NE 0x341F2AC
	0x0341F2C4 MOV X0, X23
	0x0341F2C8 MOV W2, W31
	0x0341F2CC BL 0x1C5C788
	0x0341F2D0 B 0x341F2E0
	0x0341F2D4 LDRSW X9, [X10]
	0x0341F2D8 ADD X8, X8, X9, 0x4, LSL
	0x0341F2DC ADD X0, X8, 0x138
	0x0341F2E0 LDP X8, X1, [X0]
	0x0341F2E4 MOV X0, X23
	0x0341F2E8 BLR X8
	0x0341F2EC CBNZ X24, 0x341F7A0
	0x0341F2F0 CMP W22, 0x6
	0x0341F2F4 B.EQ 0x341F2FC
	0x0341F2F8 CBNZ W22, 0x341F778
	0x0341F2FC LDR X22, [X19 + 0x28]
	0x0341F300 CBNZ X22, 0x341F320
	0x0341F304 ADRP X8, 0xCD4000
	0x0341F308 LDR X8, [X8 + 0xAC8]
	0x0341F30C LDR X0, [X8]
	0x0341F310 MOV W1, W31
	0x0341F314 BL 0x1C16D6C
	0x0341F318 MOV X22, X0
	0x0341F31C CBZ X0, 0x341F7D8
	0x0341F320 LDR X8, [X22]
	0x0341F324 ADRP X10, 0xCD4000
	0x0341F328 LDRH W9, [X8 + 0x12E]
	0x0341F32C LDR X10, [X10 + 0xF70]
	0x0341F330 LDR X1, [X10]
	0x0341F334 CBZ X9, 0x341F358
	0x0341F338 LDR X10, [X8 + 0xB0]
	0x0341F33C ADD X10, X10, 0x8
	0x0341F340 LDUR X11, [X10 - 0x8]
	0x0341F344 CMP X11, X1
	0x0341F348 B.EQ 0x341F368
	0x0341F34C SUBS X9, X9, 0x1
	0x0341F350 ADD X10, X10, 0x10

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xFC0000
	015 Move W8, [X20+1551]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {98}
	021 Move X0, 0xD11000
	022 Move X0, [X0+2968]
	023 Call 0x1C17CF4
	024 Move X0, 0xCD9000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move X0, 0xCDF000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0xCD7000
	031 Move X0, [X0+2064]
	032 Call 0x1C17CF4
	033 Move X0, 0xCD7000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCD7000
	037 Move X0, [X0+1744]
	038 Call 0x1C17CF4
	039 Move X0, 0xCD6000
	040 Move X0, [X0+3584]
	041 Call 0x1C17CF4
	042 Move X0, 0xCD6000
	043 Move X0, [X0+3952]
	044 Call 0x1C17CF4
	045 Move X0, 0xCD6000
	046 Move X0, [X0+3960]
	047 Call 0x1C17CF4
	048 Move X0, 0xCD6000
	049 Move X0, [X0+3608]
	050 Call 0x1C17CF4
	051 Move X0, 0xD11000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move X0, 0xCD6000
	055 Move X0, [X0+2760]
	056 Call 0x1C17CF4
	057 Move X0, 0xCD9000
	058 Move X0, [X0+480]
	059 Call 0x1C17CF4
	060 Move X0, 0xCD9000
	061 Move X0, [X0+496]
	062 Call 0x1C17CF4
	063 Move X0, 0xCD9000
	064 Move X0, [X0+504]
	065 Call 0x1C17CF4
	066 Move X0, 0xCDF000
	067 Move X0, [X0+928]
	068 Call 0x1C17CF4
	069 Move X0, 0xCD8000
	070 Move X0, [X0+2600]
	071 Call 0x1C17CF4
	072 Move X0, 0xCFF000
	073 Move X0, [X0+1240]
	074 Call 0x1C17CF4
	075 Move X0, 0xD11000
	076 Move X0, [X0+1984]
	077 Call 0x1C17CF4
	078 Move X0, 0xD11000
	079 Move X0, [X0+1992]
	080 Call 0x1C17CF4
	081 Move X0, 0xCDF000
	082 Move X0, [X0+1824]
	083 Call 0x1C17CF4
	084 Move X0, 0xD11000
	085 Move X0, [X0+2000]
	086 Call 0x1C17CF4
	087 Move X0, 0xD11000
	088 Move X0, [X0+2976]
	089 Call 0x1C17CF4
	090 Move X0, 0xD11000
	091 Move X0, [X0+2008]
	092 Call 0x1C17CF4
	093 Move X0, 0xCD6000
	094 Move X0, [X0+2440]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X20+1551], W8
	098 Move [X31+40], X31
	099 Move X27, 0xCD9000
	100 Move W26, [X19]
	101 Move X27, [X27+640]
	102 Compare W26, 0
	103 JumpIfEqual {138}
	104 Move X8, 0xD11000
	105 Move X9, 0xCD6000
	106 Move X8, [X8+2976]
	107 Move X9, [X9+2440]
	108 Move X20, [X19+48]
	109 Move X21, [X19+32]
	110 Move X22, [X8]
	111 Move X24, [X9]
	112 Compare X21, 0
	113 JumpIfNotEqual {122}
	114 Move X8, 0xCD6000
	115 Move X8, [X8+2760]
	116 Move X0, [X8]
	117 Move W1, W31
	118 Call 0x1C17D6C
	119 Move X21, X0
	120 Compare X0, 0
	121 JumpIfEqual {604}
	122 Move X10, 0xCD6000
	123 Move X8, [X21]
	124 Move X10, [X10+3952]
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Move X1, [X10]
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X21
	136 Move W2, W31
	137 Call 0x1C5D788
	138 Move X8, [X19+80]
	139 Move TEMP, 0
	140 Not TEMP
	141 Move W9, TEMP
	142 Move [X31+40], X8
	143 Move [X19+80], X31
	144 Move [X19], W9
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X21
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move [X31+24], X22
	153 Move [X31+32], X20
	154 Move X28, 0xCD6000
	155 Move X29, 0xCD6000
	156 Move X27, 0xCD8000
	157 Move X25, 0xD11000
	158 Move X20, 0xCDF000
	159 Move X28, [X28+3608]
	160 Move X29, [X29+3960]
	161 Move X27, [X27+2600]
	162 Move X25, [X25+1984]
	163 Move X20, [X20+1824]
	164 Move X23, X0
	165 Move X0, X24
	166 Compare X23, 0
	167 JumpIfEqual {589}
	168 Move X8, [X23]
	169 Move X1, [X28]
	170 Move X21, X0
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X23
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X23
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {230}
	194 Move X8, [X23]
	195 Move X1, [X29]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X23
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X0, X23
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X22, X0
	216 Move X0, [X27]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X22
	222 Move X1, X31
	223 Call Uri.EscapeDataString, X0
	224 Move X1, [X25]
	225 Move X3, [X20]
	226 Move X2, X0
	227 Move X0, X21
	228 Move X4, X31
	229 Call String.Concat, X0, X1, X2, X3
	230 Move X24, X31
	231 Move W22, 6
	232 Move TEMP, X26
	233 And TEMP, TEMP, -2147483648
	234 Compare TEMP, -2147483648
	235 JumpIfNotEqual {261}
	236 Compare X23, 0
	237 JumpIfEqual {261}
	238 Move X10, 0xCD6000
	239 Move X8, [X23]
	240 Move X10, [X10+3584]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X1, [X10]
	243 Compare X9, 0
	244 JumpIfEqual {251}
	245 Move X10, [X8+176]
	246 Add X10, X10, 8
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract X9, X9, 1
	250 Add X10, X10, 16
	251 Move X0, X23
	252 Move W2, W31
	253 Call 0x1C5D788
	254 NotImplemented "Instruction LDRSW not yet implemented."
	255 Add X8, X8, X9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X1, [X0+8]
	259 Move X0, X23
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Compare X24, 0
	262 JumpIfNotEqual {591}
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Compare W22, 0
	265 JumpIfNotEqual {575}
	266 Move X22, [X19+40]
	267 Compare X22, 0
	268 JumpIfNotEqual {277}
	269 Move X8, 0xCD6000
	270 Move X8, [X8+2760]
	271 Move X0, [X8]
	272 Move W1, W31
	273 Call 0x1C17D6C
	274 Move X22, X0
	275 Compare X0, 0
	276 JumpIfEqual {605}
	277 Move X8, [X22]
	278 Move X10, 0xCD6000
	279 NotImplemented "Instruction LDRH not yet implemented."
	280 Move X10, [X10+3952]
	281 Move X1, [X10]
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move X0, X22
	291 Move W2, W31
	292 Call 0x1C5D788
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Add X8, X8, X9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X1, [X0+8]
	298 Move X0, X22
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Move X25, 0xD11000
	301 Move X25, [X25+1992]
	302 Move X24, X0
	303 Move X0, X21
	304 Compare X24, 0
	305 JumpIfEqual {590}
	306 Move X8, [X24]
	307 Move X1, [X28]
	308 Move X23, X0
	309 NotImplemented "Instruction LDRH not yet implemented."
	310 Compare X9, 0
	311 JumpIfEqual {318}
	312 Move X10, [X8+176]
	313 Add X10, X10, 8
	314 NotImplemented "Instruction LDUR not yet implemented."
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Subtract X9, X9, 1
	317 Add X10, X10, 16
	318 Move X0, X24
	319 Move W2, W31
	320 Call 0x1C5D788
	321 NotImplemented "Instruction LDRSW not yet implemented."
	322 Add X8, X8, X9
	323 Add X0, X8, 312
	324 Move X8, [X0]
	325 Move X1, [X0+8]
	326 Move X0, X24
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {368}
	332 Move X8, [X24]
	333 Move X1, [X29]
	334 NotImplemented "Instruction LDRH not yet implemented."
	335 Compare X9, 0
	336 JumpIfEqual {343}
	337 Move X10, [X8+176]
	338 Add X10, X10, 8
	339 NotImplemented "Instruction LDUR not yet implemented."
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Subtract X9, X9, 1
	342 Add X10, X10, 16
	343 Move X0, X24
	344 Move W2, W31
	345 Call 0x1C5D788
	346 NotImplemented "Instruction LDRSW not yet implemented."
	347 Add X8, X8, X9
	348 Add X0, X8, 312
	349 Move X8, [X0]
	350 Move X1, [X0+8]
	351 Move X0, X24
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move X22, X0
	354 Move X0, [X27]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Move X0, X22
	360 Move X1, X31
	361 Call Uri.EscapeDataString, X0
	362 Move X1, [X25]
	363 Move X3, [X20]
	364 Move X2, X0
	365 Move X0, X23
	366 Move X4, X31
	367 Call String.Concat, X0, X1, X2, X3
	368 Move X21, X31
	369 Move W20, 10
	370 Move TEMP, X26
	371 And TEMP, TEMP, -2147483648
	372 Compare TEMP, -2147483648
	373 JumpIfNotEqual {399}
	374 Compare X24, 0
	375 JumpIfEqual {399}
	376 Move X10, 0xCD6000
	377 Move X8, [X24]
	378 Move X10, [X10+3584]
	379 NotImplemented "Instruction LDRH not yet implemented."
	380 Move X1, [X10]
	381 Compare X9, 0
	382 JumpIfEqual {389}
	383 Move X10, [X8+176]
	384 Add X10, X10, 8
	385 NotImplemented "Instruction LDUR not yet implemented."
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Subtract X9, X9, 1
	388 Add X10, X10, 16
	389 Move X0, X24
	390 Move W2, W31
	391 Call 0x1C5D788
	392 NotImplemented "Instruction LDRSW not yet implemented."
	393 Add X8, X8, X9
	394 Add X0, X8, 312
	395 Move X8, [X0]
	396 Move X1, [X0+8]
	397 Move X0, X24
	398 NotImplemented "Instruction BLR not yet implemented."
	399 Compare X21, 0
	400 JumpIfNotEqual {593}
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Compare W20, 0
	403 JumpIfNotEqual {575}
	404 Move X25, [X31+32]
	405 Compare X25, 0
	406 JumpIfEqual {595}
	407 Move X27, 0xCD9000
	408 Move X0, [X25+32]
	409 Move X27, [X27+640]
	410 Compare X0, 0
	411 JumpIfEqual {596}
	412 Move X1, X31
	413 Call Uri.get_AbsolutePath, X0
	414 Move X8, 0xCDF000
	415 Move X8, [X8+2264]
	416 Move X21, X0
	417 Move X0, [X8]
	418 Move W1, 1
	419 Call 0x1C17D6C
	420 Move X1, X0
	421 Compare X1, 0
	422 JumpIfEqual {597}
	423 Move W8, [X1+24]
	424 Compare W8, 0
	425 JumpIfEqual {598}
	426 Move W8, 47
	427 NotImplemented "Instruction STRH not yet implemented."
	428 Compare X21, 0
	429 JumpIfEqual {599}
	430 Move X0, X21
	431 Move X2, X31
	432 Call String.TrimEnd, X0, X1
	433 Move X1, [X31+24]
	434 Move X2, X31
	435 Call String.Concat, X0, X1
	436 Move X8, 0xCDF000
	437 Move X22, [X25+32]
	438 Move X8, [X8+928]
	439 Move X21, X0
	440 Move X0, [X8]
	441 Call 0x1C17F10
	442 Move X20, X0
	443 Move X1, X22
	444 Move X2, X31
	445 Call UriBuilder..ctor, X0, X1
	446 Compare X20, 0
	447 JumpIfEqual {600}
	448 Move X0, X20
	449 Move X1, X21
	450 Move X2, X31
	451 Call UriBuilder.set_Path, X0, X1
	452 Move X0, X20
	453 Move X1, X23
	454 Move X2, X31
	455 Call UriBuilder.set_Query, X0, X1
	456 Move X0, X20
	457 Move X1, X31
	458 Call UriBuilder.get_Uri, X0
	459 Move X8, 0xCFF000
	460 Move X9, 0xCD7000
	461 Move X8, [X8+1240]
	462 Move X9, [X9+1744]
	463 Move X20, X0
	464 Move X21, [X8]
	465 Move X0, [X9]
	466 Call 0x1C17F10
	467 Move X8, 0xCD7000
	468 Move X8, [X8+1728]
	469 Move X22, X0
	470 Move X1, [X8]
	471 Call Dictionary`2<Object, Object>..ctor, X0
	472 Move X8, 0xD11000
	473 Move X1, [X19+56]
	474 Move X8, [X8+2008]
	475 Move X0, [X8]
	476 Move X2, X31
	477 Call String.Concat, X0, X1
	478 Compare X22, 0
	479 JumpIfEqual {601}
	480 Move X8, 0xD11000
	481 Move X8, [X8+2000]
	482 Move X9, 0xCD7000
	483 Move X9, [X9+2064]
	484 Move X2, X0
	485 Move X1, [X8]
	486 Move X3, [X9]
	487 Move X0, X22
	488 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	489 Move X24, [X25+16]
	490 Compare X24, 0
	491 JumpIfEqual {602}
	492 Move X10, 0xD11000
	493 Move W23, [X25+24]
	494 Move X8, [X24]
	495 Move X26, [X19+64]
	496 Move X25, [X19+72]
	497 Move X10, [X10+1976]
	498 NotImplemented "Instruction LDRH not yet implemented."
	499 Move X1, [X10]
	500 Compare X9, 0
	501 JumpIfEqual {508}
	502 Move X10, [X8+176]
	503 Add X10, X10, 8
	504 NotImplemented "Instruction LDUR not yet implemented."
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Subtract X9, X9, 1
	507 Add X10, X10, 16
	508 Move W2, 3
	509 Move X0, X24
	510 Call 0x1C5D788
	511 Move W9, [X10]
	512 Add W9, W9, 3
	513 Add X8, X8, W9
	514 Add X0, X8, 312
	515 Move X8, [X0]
	516 Move X9, [X0+8]
	517 Move X0, X24
	518 Move X1, X21
	519 Move X2, X20
	520 Move X3, X22
	521 Move X4, X31
	522 Move W5, W23
	523 Move X6, X26
	524 Move X7, X25
	525 Move [X31], X9
	526 NotImplemented "Instruction BLR not yet implemented."
	527 Compare X0, 0
	528 JumpIfEqual {603}
	529 Move X8, 0xCD9000
	530 Move X8, [X8+504]
	531 Move X1, [X8]
	532 Call Task`1<Object>.GetAwaiter, X0
	533 Move X8, 0xCD9000
	534 Move X8, [X8+496]
	535 Move [X31+40], X0
	536 Move X1, [X8]
	537 Add X0, X31, 40
	538 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	539 Move TEMP, X0
	540 And TEMP, TEMP, 1
	541 Compare TEMP, 1
	542 JumpIfNotEqual {560}
	543 Move X8, 0xCD9000
	544 Move X8, [X8+480]
	545 Add X0, X31, 40
	546 Move X1, [X8]
	547 Call TaskAwaiter`1<Object>.GetResult, X0
	548 Move TEMP, 1
	549 Not TEMP
	550 Move W8, TEMP
	551 Move [X19+8], W8
	552 Move X0, [X27]
	553 Move W8, [X0+224]
	554 Compare W8, 0
	555 JumpIfNotEqual {557}
	556 Call 0x1C17DFC
	557 Move X0, X19
	558 Move X1, X31
	559 Call AsyncTaskMethodBuilder.SetResult, X0
	560 Move [X19], W31
	561 Move X8, [X31+40]
	562 Move [X19+80], X8
	563 Move X0, [X27]
	564 Move W8, [X0+224]
	565 Compare W8, 0
	566 JumpIfNotEqual {568}
	567 Call 0x1C17DFC
	568 Move X8, 0xD10000
	569 Move X8, [X8+2968]
	570 Add X0, X19, 8
	571 Move X3, [X8]
	572 Add X1, X31, 40
	573 Move X2, X19
	574 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	575 Move X20, [X31+128]
	576 Move X19, [X31+136]
	577 Move X22, [X31+112]
	578 Move X21, [X31+120]
	579 Move X24, [X31+96]
	580 Move X23, [X31+104]
	581 Move X26, [X31+80]
	582 Move X25, [X31+88]
	583 Move X28, [X31+64]
	584 Move X27, [X31+72]
	585 Move X29, [X31+48]
	586 Move X30, [X31+56]
	587 Add X31, X31, 144
	588 Return 
	589 Call 0x1C17F20
	590 Call 0x1C17F20
	591 Move X0, X24
	592 Call 0x1C17F18
	593 Move X0, X21
	594 Call 0x1C17F18
	595 Call 0x1C17F20
	596 Call 0x1C17F20
	597 Call 0x1C17F20
	598 Call 0x1C17F28
	599 Call 0x1C17F20
	600 Call 0x1C17F20
	601 Call 0x1C17F20
	602 Call 0x1C17F20
	603 Call 0x1C17F20
	604 Call 0x1C17F20
	605 Call 0x1C17F20
	606 Move X22, X0
	607 Move [X31+16], X1
	608 Move X22, X0
	609 Move X23, X21
	610 Move X22, X0
	611 Move X21, X24
	612 Move X22, X0
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move [X31+16], X1
	615 Move X0, X22
	616 Call 0x3EB2AD0
	617 Move X21, [X0]
	618 Call 0x3EB2AE0
	619 Move W20, W31
	620 Move TEMP, X26
	621 And TEMP, TEMP, -2147483648
	622 Compare TEMP, -2147483648
	623 JumpIfEqual {374}
	624 Move X21, X31
	625 Move TEMP, X26
	626 And TEMP, TEMP, -2147483648
	627 Compare TEMP, -2147483648
	628 JumpIfNotEqual {654}
	629 Compare X24, 0
	630 JumpIfEqual {654}
	631 Move X10, 0xCD5000
	632 Move X8, [X24]
	633 Move X10, [X10+3584]
	634 NotImplemented "Instruction LDRH not yet implemented."
	635 Move X1, [X10]
	636 Compare X9, 0
	637 JumpIfEqual {644}
	638 Move X10, [X8+176]
	639 Add X10, X10, 8
	640 NotImplemented "Instruction LDUR not yet implemented."
	641 NotImplemented "Instruction CMP not yet implemented."
	642 Subtract X9, X9, 1
	643 Add X10, X10, 16
	644 Move X0, X24
	645 Move W2, W31
	646 Call 0x1C5D788
	647 NotImplemented "Instruction LDRSW not yet implemented."
	648 Add X8, X8, X9
	649 Add X0, X8, 312
	650 Move X8, [X0]
	651 Move X1, [X0+8]
	652 Move X0, X24
	653 NotImplemented "Instruction BLR not yet implemented."
	654 Compare X21, 0
	655 JumpIfEqual {708}
	656 Move X0, X21
	657 Call 0x1C17F18
	658 Move X22, X0
	659 Move [X31+16], X1
	660 Move TEMP, X26
	661 And TEMP, TEMP, -2147483648
	662 Compare TEMP, -2147483648
	663 JumpIfEqual {629}
	664 Move X22, X0
	665 NotImplemented "Instruction CMP not yet implemented."
	666 Move X0, X22
	667 Call 0x3EB2AD0
	668 Move X24, [X0]
	669 Call 0x3EB2AE0
	670 Move W22, W31
	671 Move TEMP, X26
	672 And TEMP, TEMP, -2147483648
	673 Compare TEMP, -2147483648
	674 JumpIfEqual {236}
	675 Move [X31+16], X1
	676 Move X24, X31
	677 Move TEMP, X26
	678 And TEMP, TEMP, -2147483648
	679 Compare TEMP, -2147483648
	680 JumpIfNotEqual {706}
	681 Compare X23, 0
	682 JumpIfEqual {706}
	683 Move X10, 0xCD5000
	684 Move X8, [X23]
	685 Move X10, [X10+3584]
	686 NotImplemented "Instruction LDRH not yet implemented."
	687 Move X1, [X10]
	688 Compare X9, 0
	689 JumpIfEqual {696}
	690 Move X10, [X8+176]
	691 Add X10, X10, 8
	692 NotImplemented "Instruction LDUR not yet implemented."
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Subtract X9, X9, 1
	695 Add X10, X10, 16
	696 Move X0, X23
	697 Move W2, W31
	698 Call 0x1C5D788
	699 NotImplemented "Instruction LDRSW not yet implemented."
	700 Add X8, X8, X9
	701 Add X0, X8, 312
	702 Move X8, [X0]
	703 Move X1, [X0+8]
	704 Move X0, X23
	705 NotImplemented "Instruction BLR not yet implemented."
	706 Compare X24, 0
	707 JumpIfNotEqual {748}
	708 Move X8, [X31+16]
	709 NotImplemented "Instruction CMP not yet implemented."
	710 Move X0, X22
	711 Call 0x3EB2AD0
	712 Move X20, X0
	713 Move X0, 0xCD5000
	714 Move X0, [X0+2000]
	715 Call 0x1C17D08
	716 Move X8, [X20]
	717 Move X1, [X8]
	718 Call 0x1C18270
	719 Move TEMP, X0
	720 And TEMP, TEMP, 1
	721 Compare TEMP, 1
	722 JumpIfNotEqual {740}
	723 Move X20, [X20]
	724 Call 0x3EB2AE0
	725 Move TEMP, 1
	726 Not TEMP
	727 Move W8, TEMP
	728 Move [X19+8], W8
	729 Move X0, 0xCD8000
	730 Move X0, [X0+640]
	731 Call 0x1C17D08
	732 Move W8, [X0+224]
	733 Compare W8, 0
	734 JumpIfNotEqual {736}
	735 Call 0x1C17DFC
	736 Move X0, X19
	737 Move X1, X20
	738 Move X2, X31
	739 Call AsyncTaskMethodBuilder.SetException, X0, X1
	740 Move W0, 8
	741 Call 0x3EB2AF0
	742 Move X8, [X20]
	743 Move [X0], X8
	744 Move X1, 0xA96000
	745 Add X1, X1, 3672
	746 Move X2, X31
	747 Call 0x3EB2B00
	748 Move X0, X24
	749 Call 0x1C17F18
	750 Move X22, X0
	751 Move [X31+16], X1
	752 Move TEMP, X26
	753 And TEMP, TEMP, -2147483648
	754 Compare TEMP, -2147483648
	755 JumpIfEqual {681}
	756 Move X22, X0
	757 Call 0x3EB2AE0
	758 Move X0, X22
	759 Call 0x1D2D690
	760 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0341F354 B.NE 0x341F340
	0x0341F358 MOV X0, X22
	0x0341F35C MOV W2, W31
	0x0341F360 BL 0x1C5C788
	0x0341F364 B 0x341F374
	0x0341F368 LDRSW X9, [X10]
	0x0341F36C ADD X8, X8, X9, 0x4, LSL
	0x0341F370 ADD X0, X8, 0x138
	0x0341F374 LDP X8, X1, [X0]
	0x0341F378 MOV X0, X22
	0x0341F37C BLR X8
	0x0341F380 ADRP X25, 0xD0F000
	0x0341F384 LDR X25, [X25 + 0x7C8]
	0x0341F388 MOV X24, X0
	0x0341F38C MOV X0, X21
	0x0341F390 CBZ X24, 0x341F79C
	0x0341F394 LDR X8, [X24]
	0x0341F398 LDR X1, [X28]
	0x0341F39C MOV X23, X0
	0x0341F3A0 LDRH W9, [X8 + 0x12E]
	0x0341F3A4 CBZ X9, 0x341F3C8
	0x0341F3A8 LDR X10, [X8 + 0xB0]
	0x0341F3AC ADD X10, X10, 0x8
	0x0341F3B0 LDUR X11, [X10 - 0x8]
	0x0341F3B4 CMP X11, X1
	0x0341F3B8 B.EQ 0x341F3D8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFBF000
	007 Move X22, 0xCD8000
	008 Move W8, [X21+1552]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD8000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1552], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

