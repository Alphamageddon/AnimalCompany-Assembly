Type: Nakama.Client/<LinkDeviceAsync>d__75

Method: System.Void MoveNext()

Disassembly:
	0x0345A2E8 MOV X5, X31
	0x0345A2EC BL 0x34440A8
	0x0345A2F0 CBZ X0, 0x345A4E8
	0x0345A2F4 ADRP X8, 0xC9A000
	0x0345A2F8 LDR X8, [X8 + 0x840]
	0x0345A2FC LDR X1, [X8]
	0x0345A300 BL 0x269F5D0
	0x0345A304 ADRP X8, 0xC9A000
	0x0345A308 LDR X8, [X8 + 0x838]
	0x0345A30C STR X0, [X31 + 0x20]
	0x0345A310 LDR X1, [X8]
	0x0345A314 ADD X0, X31, 0x20
	0x0345A318 BL 0x2677430
	0x0345A31C TBNZ X0, 0x0, 0x345A104
	0x0345A320 STR W31, [X19]
	0x0345A324 LDR X8, [X31 + 0x20]
	0x0345A328 STR X8, [X19 + 0x58]
	0x0345A32C LDR X0, [X25]
	0x0345A330 LDR W8, [X0 + 0xE0]
	0x0345A334 CBNZ W8, 0x345A33C
	0x0345A338 BL 0x1C16DFC
	0x0345A33C ADRP X8, 0xCD5000
	0x0345A340 LDR X8, [X8 + 0xF18]
	0x0345A344 ADD X0, X19, 0x8
	0x0345A348 LDR X3, [X8]
	0x0345A34C ADD X1, X31, 0x20
	0x0345A350 MOV X2, X19
	0x0345A354 BL 0x2188A30
	0x0345A358 B 0x345A4A0
	0x0345A35C CBZ X20, 0x345A4C4
	0x0345A360 ADRP X8, 0xCA1000
	0x0345A364 LDR X8, [X8 + 0x818]
	0x0345A368 LDR X21, [X20 + 0x58]
	0x0345A36C LDR X23, [X19 + 0x50]
	0x0345A370 LDR X0, [X8]
	0x0345A374 BL 0x1C16F10
	0x0345A378 ADRP X8, 0xCD5000
	0x0345A37C LDR X8, [X8 + 0xF28]
	0x0345A380 MOV X22, X0
	0x0345A384 LDR X2, [X8]
	0x0345A388 MOV X1, X23
	0x0345A38C MOV X3, X31
	0x0345A390 BL 0x2D27AA8
	0x0345A394 LDR X8, [X19 + 0x50]
	0x0345A398 CBZ X8, 0x345A4B8
	0x0345A39C ADRP X9, 0xCD5000
	0x0345A3A0 LDR X23, [X19 + 0x48]
	0x0345A3A4 LDR X9, [X9 + 0x7C8]
	0x0345A3A8 CBNZ X23, 0x345A3B0
	0x0345A3AC LDR X23, [X20 + 0x18]
	0x0345A3B0 LDR X20, [X8 + 0x18]
	0x0345A3B4 LDR X1, [X8 + 0x30]
	0x0345A3B8 LDR X2, [X9]
	0x0345A3BC STP X31, X31, [X31 + 0x8]
	0x0345A3C0 ADD X0, X31, 0x8
	0x0345A3C4 BL 0x242E368
	0x0345A3C8 ADRP X8, 0xCD5000
	0x0345A3CC LDR X8, [X8 + 0x7D0]
	0x0345A3D0 LDR X0, [X8]
	0x0345A3D4 BL 0x1C16F10
	0x0345A3D8 LDP X3, X4, [X31 + 0x8]
	0x0345A3DC MOV X24, X0
	0x0345A3E0 MOV X1, X20
	0x0345A3E4 MOV X2, X23
	0x0345A3E8 MOV X5, X31
	0x0345A3EC BL 0x3465404
	0x0345A3F0 CBZ X21, 0x345A4BC
	0x0345A3F4 MOV X0, X21
	0x0345A3F8 MOV X1, X22
	0x0345A3FC MOV X2, X24
	0x0345A400 MOV X3, X31
	0x0345A404 BL 0x3465B68
	0x0345A408 CBZ X0, 0x345A4C0
	0x0345A40C MOV X1, X31
	0x0345A410 BL 0x33ED394
	0x0345A414 STR X0, [X31 + 0x18]
	0x0345A418 ADD X0, X31, 0x18
	0x0345A41C MOV X1, X31
	0x0345A420 BL 0x32C3A80
	0x0345A424 TBZ X0, 0x0, 0x345A464
	0x0345A428 ADD X0, X31, 0x18
	0x0345A42C MOV X1, X31
	0x0345A430 BL 0x32C3B4C
	0x0345A434 MOVN W8, 0x1
	0x0345A438 STR W8, [X19]
	0x0345A43C STR X31, [X19 + 0x50]
	0x0345A440 LDR X0, [X25]
	0x0345A444 ADD X19, X19, 0x8
	0x0345A448 LDR W8, [X0 + 0xE0]
	0x0345A44C CBNZ W8, 0x345A454
	0x0345A450 BL 0x1C16DFC
	0x0345A454 MOV X0, X19
	0x0345A458 MOV X1, X31
	0x0345A45C BL 0x32C4864
	0x0345A460 B 0x345A4A0
	0x0345A464 MOVZ W8, 0x1
	0x0345A468 STR W8, [X19]
	0x0345A46C LDR X8, [X31 + 0x18]
	0x0345A470 STR X8, [X19 + 0x60]
	0x0345A474 LDR X0, [X25]
	0x0345A478 LDR W8, [X0 + 0xE0]
	0x0345A47C CBNZ W8, 0x345A484
	0x0345A480 BL 0x1C16DFC
	0x0345A484 ADRP X8, 0xCD5000
	0x0345A488 LDR X8, [X8 + 0xF20]
	0x0345A48C ADD X0, X19, 0x8
	0x0345A490 LDR X3, [X8]
	0x0345A494 ADD X1, X31, 0x18
	0x0345A498 MOV X2, X19
	0x0345A49C BL 0x218A0F4
	0x0345A4A0 LDP X20, X19, [X31 + 0x60]
	0x0345A4A4 LDP X22, X21, [X31 + 0x50]
	0x0345A4A8 LDP X24, X23, [X31 + 0x40]
	0x0345A4AC LDP X30, X25, [X31 + 0x30]
	0x0345A4B0 ADD X31, X31, 0x70
	0x0345A4B4 RET
	0x0345A4B8 BL 0x1C16F20
	0x0345A4BC BL 0x1C16F20
	0x0345A4C0 BL 0x1C16F20
	0x0345A4C4 BL 0x1C16F20
	0x0345A4C8 BL 0x1C16F20
	0x0345A4CC BL 0x1C16F20
	0x0345A4D0 BL 0x1C16F20
	0x0345A4D4 BL 0x1C16F20
	0x0345A4D8 BL 0x1C16F20
	0x0345A4DC BL 0x1C16F20
	0x0345A4E0 BL 0x1C16F20
	0x0345A4E4 BL 0x1C16F20
	0x0345A4E8 BL 0x1C16F20
	0x0345A4EC B 0x345A564
	0x0345A4F0 B 0x345A564
	0x0345A4F4 B 0x345A564
	0x0345A4F8 B 0x345A564
	0x0345A4FC B 0x345A564
	0x0345A500 B 0x345A564
	0x0345A504 B 0x345A564
	0x0345A508 B 0x345A564
	0x0345A50C B 0x345A564
	0x0345A510 B 0x345A564
	0x0345A514 B 0x345A564
	0x0345A518 B 0x345A564
	0x0345A51C B 0x345A564
	0x0345A520 B 0x345A564
	0x0345A524 B 0x345A564
	0x0345A528 B 0x345A564
	0x0345A52C B 0x345A564
	0x0345A530 B 0x345A564
	0x0345A534 B 0x345A564
	0x0345A538 B 0x345A564
	0x0345A53C B 0x345A564
	0x0345A540 B 0x345A564
	0x0345A544 B 0x345A564
	0x0345A548 B 0x345A564
	0x0345A54C B 0x345A564
	0x0345A550 B 0x345A564
	0x0345A554 B 0x345A564
	0x0345A558 B 0x345A564
	0x0345A55C B 0x345A564
	0x0345A560 B 0x345A564
	0x0345A564 MOV X20, X0
	0x0345A568 CMP W1, 0x1
	0x0345A56C B.NE 0x345A600
	0x0345A570 MOV X0, X20
	0x0345A574 BL 0x3EB1AD0
	0x0345A578 MOV X20, X0
	0x0345A57C ADRP X0, 0xC99000
	0x0345A580 LDR X0, [X0 + 0x7D0]
	0x0345A584 BL 0x1C16D08
	0x0345A588 LDR X8, [X20]
	0x0345A58C LDR X1, [X8]
	0x0345A590 BL 0x1C17270
	0x0345A594 TBZ X0, 0x0, 0x345A5D8
	0x0345A598 LDR X20, [X20]
	0x0345A59C BL 0x3EB1AE0
	0x0345A5A0 MOVN W8, 0x1
	0x0345A5A4 STR X31, [X19 + 0x50]
	0x0345A5A8 STR W8, [X19], #0x8
	0x0345A5AC ADRP X0, 0xC9C000
	0x0345A5B0 LDR X0, [X0 + 0x280]
	0x0345A5B4 BL 0x1C16D08
	0x0345A5B8 LDR W8, [X0 + 0xE0]
	0x0345A5BC CBNZ W8, 0x345A5C4
	0x0345A5C0 BL 0x1C16DFC
	0x0345A5C4 MOV X0, X19
	0x0345A5C8 MOV X1, X20
	0x0345A5CC MOV X2, X31
	0x0345A5D0 BL 0x32C4908
	0x0345A5D4 B 0x345A4A0
	0x0345A5D8 MOVZ W0, 0x8
	0x0345A5DC BL 0x3EB1AF0
	0x0345A5E0 LDR X8, [X20]
	0x0345A5E4 STR X8, [X0]
	0x0345A5E8 ADRP X1, 0xA5A000
	0x0345A5EC ADD X1, X1, 0xE58
	0x0345A5F0 MOV X2, X31
	0x0345A5F4 BL 0x3EB1B00
	0x0345A5F8 MOV X20, X0
	0x0345A5FC BL 0x3EB1AE0
	0x0345A600 MOV X0, X20
	0x0345A604 BL 0x1D2C690
	0x0345A608 BL 0x1990590
	0x0345A60C STR X30, [X31 - 0x30]!
	0x0345A610 STP X22, X21, [X31 + 0x10]
	0x0345A614 STP X20, X19, [X31 + 0x20]
	0x0345A618 ADRP X21, 0xF83000
	0x0345A61C ADRP X22, 0xC9C000
	0x0345A620 LDRB W8, [X21 + 0x79A]
	0x0345A624 LDR X22, [X22 + 0x280]
	0x0345A628 MOV X19, X1
	0x0345A62C MOV X20, X0
	0x0345A630 TBNZ X8, 0x0, 0x345A648
	0x0345A634 ADRP X0, 0xC9C000
	0x0345A638 LDR X0, [X0 + 0x280]
	0x0345A63C BL 0x1C16CF4
	0x0345A640 MOVZ W8, 0x1
	0x0345A644 STRB W8, [X21 + 0x79A]
	0x0345A648 LDR X0, [X22]
	0x0345A64C LDR W8, [X0 + 0xE0]
	0x0345A650 CBNZ W8, 0x345A658
	0x0345A654 BL 0x1C16DFC
	0x0345A658 ADD X0, X20, 0x8
	0x0345A65C MOV X1, X19
	0x0345A660 LDP X20, X19, [X31 + 0x20]
	0x0345A664 LDP X22, X21, [X31 + 0x10]
	0x0345A668 MOV X2, X31
	0x0345A66C LDR X30, [X31], #0x30
	0x0345A670 B 0x32C477C
	0x0345A674 SUB X31, X31, 0x70
	0x0345A678 STP X30, X25, [X31 + 0x30]
	0x0345A67C STP X24, X23, [X31 + 0x40]
	0x0345A680 STP X22, X21, [X31 + 0x50]
	0x0345A684 STP X20, X19, [X31 + 0x60]
	0x0345A688 ADRP X20, 0xF83000
	0x0345A68C LDRB W8, [X20 + 0x79B]
	0x0345A690 MOV X19, X0
	0x0345A694 TBNZ X8, 0x0, 0x345A748
	0x0345A698 ADRP X0, 0xCD5000
	0x0345A69C LDR X0, [X0 + 0xF38]
	0x0345A6A0 BL 0x1C16CF4
	0x0345A6A4 ADRP X0, 0xCD5000
	0x0345A6A8 LDR X0, [X0 + 0xF40]
	0x0345A6AC BL 0x1C16CF4
	0x0345A6B0 ADRP X0, 0xC9C000
	0x0345A6B4 LDR X0, [X0 + 0x280]
	0x0345A6B8 BL 0x1C16CF4
	0x0345A6BC ADRP X0, 0xC9B000
	0x0345A6C0 LDR X0, [X0 + 0xA10]
	0x0345A6C4 BL 0x1C16CF4
	0x0345A6C8 ADRP X0, 0xC9A000
	0x0345A6CC LDR X0, [X0 + 0x9F0]
	0x0345A6D0 BL 0x1C16CF4
	0x0345A6D4 ADRP X0, 0xCA1000
	0x0345A6D8 LDR X0, [X0 + 0x818]
	0x0345A6DC BL 0x1C16CF4
	0x0345A6E0 ADRP X0, 0xC9A000
	0x0345A6E4 LDR X0, [X0 + 0x818]
	0x0345A6E8 BL 0x1C16CF4
	0x0345A6EC ADRP X0, 0xCD5000
	0x0345A6F0 LDR X0, [X0 + 0x7C8]
	0x0345A6F4 BL 0x1C16CF4
	0x0345A6F8 ADRP X0, 0xCD5000
	0x0345A6FC LDR X0, [X0 + 0x7D0]
	0x0345A700 BL 0x1C16CF4
	0x0345A704 ADRP X0, 0xC9A000
	0x0345A708 LDR X0, [X0 + 0x830]
	0x0345A70C BL 0x1C16CF4
	0x0345A710 ADRP X0, 0xC9A000
	0x0345A714 LDR X0, [X0 + 0x838]
	0x0345A718 BL 0x1C16CF4
	0x0345A71C ADRP X0, 0xC9A000
	0x0345A720 LDR X0, [X0 + 0x840]
	0x0345A724 BL 0x1C16CF4
	0x0345A728 ADRP X0, 0xCD5000
	0x0345A72C LDR X0, [X0 + 0xF48]
	0x0345A730 BL 0x1C16CF4
	0x0345A734 ADRP X0, 0xCD5000
	0x0345A738 LDR X0, [X0 + 0xF50]
	0x0345A73C BL 0x1C16CF4
	0x0345A740 MOVZ W8, 0x1
	0x0345A744 STRB W8, [X20 + 0x79B]
	0x0345A748 STP X31, X31, [X31 + 0x20]
	0x0345A74C STR X31, [X31 + 0x18]
	0x0345A750 ADRP X25, 0xC9C000
	0x0345A754 LDR W8, [X19]
	0x0345A758 LDR X20, [X19 + 0x20]
	0x0345A75C LDR X25, [X25 + 0x280]
	0x0345A760 CBZ W8, 0x345A784
	0x0345A764 CMP W8, 0x1
	0x0345A768 B.NE 0x345A7B0
	0x0345A76C LDR X8, [X19 + 0x80]
	0x0345A770 MOVN W9, 0x0
	0x0345A774 STR X8, [X31 + 0x18]
	0x0345A778 STR X31, [X19 + 0x80]
	0x0345A77C STR W9, [X19]
	0x0345A780 B 0x345AABC
	0x0345A784 LDR X8, [X19 + 0x78]
	0x0345A788 MOVN W9, 0x0
	0x0345A78C STR X8, [X31 + 0x20]
	0x0345A790 STR X31, [X19 + 0x78]
	0x0345A794 STR W9, [X19]
	0x0345A798 ADRP X8, 0xC9A000
	0x0345A79C LDR X8, [X8 + 0x830]
	0x0345A7A0 ADD X0, X31, 0x20
	0x0345A7A4 LDR X1, [X8]
	0x0345A7A8 BL 0x2677474
	0x0345A7AC B 0x345A9F0
	0x0345A7B0 ADRP X8, 0xCD5000
	0x0345A7B4 LDR X8, [X8 + 0xF50]
	0x0345A7B8 LDR X0, [X8]
	0x0345A7BC BL 0x1C16F10
	0x0345A7C0 MOV X21, X0
	0x0345A7C4 MOV X1, X31
	0x0345A7C8 BL 0x344A3A4
	0x0345A7CC STR X21, [X19 + 0x70]
	0x0345A7D0 CBZ X21, 0x345AB5C
	0x0345A7D4 LDR X8, [X19 + 0x20]
	0x0345A7D8 STR X8, [X21 + 0x10]
	0x0345A7DC LDR X8, [X19 + 0x28]
	0x0345A7E0 STR X8, [X21 + 0x18]
	0x0345A7E4 LDR V0, [X19 + 0x3]
	0x0345A7E8 STR V0, [X21 + 0x2]
	0x0345A7EC LDR V0, [X19 + 0x4]
	0x0345A7F0 STR V0, [X21 + 0x3]
	0x0345A7F4 LDR V0, [X19 + 0x5]
	0x0345A7F8 STR V0, [X21 + 0x4]
	0x0345A7FC LDR X8, [X19 + 0x60]
	0x0345A800 STR X8, [X21 + 0x50]
	0x0345A804 CBZ X20, 0x345AB60
	0x0345A808 LDRB W8, [X20 + 0x10]
	0x0345A80C CBZ W8, 0x345A9F4
	0x0345A810 LDR X8, [X19 + 0x70]
	0x0345A814 CBZ X8, 0x345AB64
	0x0345A818 LDR X21, [X8 + 0x18]
	0x0345A81C CBZ X21, 0x345AB68
	0x0345A820 ADRP X23, 0xC9A000
	0x0345A824 LDR X8, [X21]
	0x0345A828 LDR X23, [X23 + 0x818]
	0x0345A82C LDRH W9, [X8 + 0x12E]
	0x0345A830 LDR X1, [X23]
	0x0345A834 CBZ X9, 0x345A858
	0x0345A838 LDR X10, [X8 + 0xB0]
	0x0345A83C ADD X10, X10, 0x8
	0x0345A840 LDUR X11, [X10 - 0x8]
	0x0345A844 CMP X11, X1
	0x0345A848 B.EQ 0x345A868
	0x0345A84C SUBS X9, X9, 0x1
	0x0345A850 ADD X10, X10, 0x10
	0x0345A854 B.NE 0x345A840
	0x0345A858 MOVZ W2, 0x7
	0x0345A85C MOV X0, X21
	0x0345A860 BL 0x1C5C788
	0x0345A864 B 0x345A878
	0x0345A868 LDR W9, [X10]
	0x0345A86C ADD W9, W9, 0x7
	0x0345A870 ADD X8, X8, W9, 0x4, SXTW
	0x0345A874 ADD X0, X8, 0x138
	0x0345A878 LDP X8, X1, [X0]
	0x0345A87C MOV X0, X21
	0x0345A880 BLR X8
	0x0345A884 MOV X1, X31
	0x0345A888 BL 0x32277A8
	0x0345A88C TBNZ X0, 0x0, 0x345A9F0
	0x0345A890 LDR X8, [X19 + 0x70]
	0x0345A894 CBZ X8, 0x345AB6C
	0x0345A898 ADRP X9, 0xC9A000
	0x0345A89C LDR X9, [X9 + 0x9F0]
	0x0345A8A0 LDR X21, [X8 + 0x18]
	0x0345A8A4 LDR X0, [X9]
	0x0345A8A8 LDR W9, [X0 + 0xE0]
	0x0345A8AC CBNZ W9, 0x345A8B4
	0x0345A8B0 BL 0x1C16DFC
	0x0345A8B4 MOV X0, X31
	0x0345A8B8 BL 0x33616A4
	0x0345A8BC ADRP X22, 0xC9B000
	0x0345A8C0 LDR X22, [X22 + 0xA10]
	0x0345A8C4 MOV X8, X0
	0x0345A8C8 STR X8, [X31 + 0x28]
	0x0345A8CC LDR X0, [X22]
	0x0345A8D0 LDR W8, [X0 + 0xE0]
	0x0345A8D4 CBNZ W8, 0x345A8E0
	0x0345A8D8 BL 0x1C16DFC
	0x0345A8DC LDR X0, [X22]
	0x0345A8E0 LDR X8, [X0 + 0xB8]
	0x0345A8E4 LDR X1, [X8]
	0x0345A8E8 ADD X0, X31, 0x28
	0x0345A8EC MOV X2, X31
	0x0345A8F0 BL 0x335FC68
	0x0345A8F4 CBZ X21, 0x345AB70
	0x0345A8F8 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF84000
	011 Move W8, [X20+1941]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD6000
	018 Move X0, [X0+3800]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD6000
	021 Move X0, [X0+3808]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9D000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9C000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9B000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA2000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9B000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD6000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD6000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9B000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9B000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9B000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD6000
	054 Move X0, [X0+3816]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD6000
	057 Move X0, [X0+3824]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1941], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9D000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC9B000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD6000
	091 Move X8, [X8+3824]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass75_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xC9B000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xC9B000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC9C000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xC9B000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC9B000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCD6000
	242 Move X8, [X8+3800]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCA2000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCD6000
	257 Move X8, [X8+3816]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCD6000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCD6000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+72], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+88], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCD6000
	336 Move X8, [X8+3808]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xC9A000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+72], X31
	385 Move [X19+8], W8
	386 Move X0, 0xC9D000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA5B000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345A8FC LDR X1, [X23]
	0x0345A900 MOV X22, X0
	0x0345A904 LDRH W9, [X8 + 0x12E]
	0x0345A908 CBZ X9, 0x345A92C
	0x0345A90C LDR X10, [X8 + 0xB0]
	0x0345A910 ADD X10, X10, 0x8
	0x0345A914 LDUR X11, [X10 - 0x8]
	0x0345A918 CMP X11, X1
	0x0345A91C B.EQ 0x345A93C
	0x0345A920 SUBS X9, X9, 0x1
	0x0345A924 ADD X10, X10, 0x10
	0x0345A928 B.NE 0x345A914
	0x0345A92C MOVZ W2, 0xB
	0x0345A930 MOV X0, X21
	0x0345A934 BL 0x1C5C788
	0x0345A938 B 0x345A94C
	0x0345A93C LDR W9, [X10]
	0x0345A940 ADD W9, W9, 0xB
	0x0345A944 ADD X8, X8, W9, 0x4, SXTW
	0x0345A948 ADD X0, X8, 0x138
	0x0345A94C LDP X8, X2, [X0]
	0x0345A950 MOV X0, X21
	0x0345A954 MOV X1, X22
	0x0345A958 BLR X8
	0x0345A95C TBZ X0, 0x0, 0x345A9F0
	0x0345A960 LDR X8, [X19 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF84000
	007 Move X22, 0xC9D000
	008 Move W8, [X21+1942]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9D000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1942], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

