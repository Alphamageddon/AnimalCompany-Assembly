Type: Nakama.ChannelRemoveMessage

Method: System.String get_ChannelId()

Disassembly:
	0x0343FD2C ORR X25, X8, 0xF
	0x0343FD30 MOV X8, X25

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_ChannelId(System.String value)

Disassembly:
	0x0343FD34 BL 0x263221C
	0x0343FD38 LDR X2, [X27]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_MessageId()

Disassembly:
	0x0343FD3C MOVN W8, 0x0
	0x0343FD40 ADD X1, X31, 0x0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_MessageId(System.String value)

Disassembly:
	0x0343FD44 MOV X0, X25
	0x0343FD48 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x0343FD4C STRB W28, [X31 + 0x38]
	0x0343FD50 STR X22, [X31 + 0x30]
	0x0343FD54 STP X19, X21, [X31 + 0x48]
	0x0343FD58 STR X20, [X31 + 0x40]
	0x0343FD5C STR W8, [X31]
	0x0343FD60 BL 0x1FCC514
	0x0343FD64 LDR X1, [X26]
	0x0343FD68 MOV X0, X25
	0x0343FD6C BL 0x2632230
	0x0343FD70 LDP X20, X19, [X31 + 0xB0]
	0x0343FD74 LDP X22, X21, [X31 + 0xA0]
	0x0343FD78 LDP X24, X23, [X31 + 0x90]
	0x0343FD7C LDP X26, X25, [X31 + 0x80]
	0x0343FD80 LDP X28, X27, [X31 + 0x70]
	0x0343FD84 LDR X30, [X31 + 0x60]
	0x0343FD88 ADD X31, X31, 0xC0
	0x0343FD8C RET
	0x0343FD90 SUB X31, X31, 0xC0
	0x0343FD94 STR X30, [X31 + 0x60]
	0x0343FD98 STP X28, X27, [X31 + 0x70]
	0x0343FD9C STP X26, X25, [X31 + 0x80]
	0x0343FDA0 STP X24, X23, [X31 + 0x90]
	0x0343FDA4 STP X22, X21, [X31 + 0xA0]
	0x0343FDA8 STP X20, X19, [X31 + 0xB0]
	0x0343FDAC ADRP X27, 0xF9E000
	0x0343FDB0 ADRP X26, 0xCF0000
	0x0343FDB4 LDRB W8, [X27 + 0x6AE]
	0x0343FDB8 LDR X26, [X26 + 0x630]
	0x0343FDBC MOV X19, X6
	0x0343FDC0 MOV X21, X5
	0x0343FDC4 MOV X22, X4
	0x0343FDC8 MOV W25, W3
	0x0343FDCC MOV X20, X2
	0x0343FDD0 MOV X23, X1
	0x0343FDD4 MOV X24, X0
	0x0343FDD8 TBNZ X8, 0x0, 0x343FE14
	0x0343FDDC ADRP X0, 0xCF0000
	0x0343FDE0 LDR X0, [X0 + 0x638]
	0x0343FDE4 BL 0x1C16CF4
	0x0343FDE8 ADRP X0, 0xCF0000
	0x0343FDEC LDR X0, [X0 + 0x658]
	0x0343FDF0 BL 0x1C16CF4
	0x0343FDF4 ADRP X0, 0xCF0000
	0x0343FDF8 LDR X0, [X0 + 0x648]
	0x0343FDFC BL 0x1C16CF4
	0x0343FE00 ADRP X0, 0xCF0000
	0x0343FE04 LDR X0, [X0 + 0x630]
	0x0343FE08 BL 0x1C16CF4
	0x0343FE0C MOVZ W8, 0x1
	0x0343FE10 STRB W8, [X27 + 0x6AE]
	0x0343FE14 LDR X0, [X26]
	0x0343FE18 MOVI V0.2D, 0x0
	0x0343FE1C STP V0, V0, [X31 + 0x40]
	0x0343FE20 STP V0, V0, [X31 + 0x20]
	0x0343FE24 STP V0, V0, [X31]
	0x0343FE28 ADRP X28, 0xCF0000
	0x0343FE2C ADRP X27, 0xCF0000
	0x0343FE30 ADRP X26, 0xCF0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF9F000
	006 Move X21, 0xCB5000
	007 Move W8, [X20+1697]
	008 Move X21, [X21+2760]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xCB5000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move X0, 0xCF1000
	018 Move X0, [X0+1464]
	019 Call 0x1C17CF4
	020 Move X0, 0xCF1000
	021 Move X0, [X0+1472]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF1000
	024 Move X0, [X0+1480]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1697], W8
	028 Move X0, [X21]
	029 Move W1, 5
	030 Call 0x1C17D6C
	031 Compare X0, 0
	032 JumpIfEqual {64}
	033 Move W8, [X0+24]
	034 Compare W8, 0
	035 JumpIfEqual {63}
	036 Move X9, 0xCF1000
	037 Move X9, [X9+1472]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X9, [X9]
	040 Move [X0+32], X9
	041 Move X9, [X19+16]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X0+40], X9
	044 Move X9, 0xCF1000
	045 Move X9, [X9+1480]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X9, [X9]
	048 Move [X0+48], X9
	049 Move X9, [X19+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X0+56], X9
	052 Move X8, 0xCF1000
	053 Move X8, [X8+1464]
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X1, X31
	057 Move X8, [X8]
	058 Move [X0+64], X8
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call String.Concat, X0
	062 Return X0
	063 Call 0x1C17F28
	064 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0343FE34 LDR W8, [X0 + 0xE0]
	0x0343FE38 LDR X28, [X28 + 0x638]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

