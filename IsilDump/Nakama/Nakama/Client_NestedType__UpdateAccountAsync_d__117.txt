Type: Nakama.Client/<UpdateAccountAsync>d__117

Method: System.Void MoveNext()

Disassembly:
	0x0346CA50 LDR X25, [X25 + 0x530]
	0x0346CA54 CBZ W8, 0x346CA78
	0x0346CA58 CMP W8, 0x1
	0x0346CA5C B.NE 0x346CAA4
	0x0346CA60 LDR X8, [X19 + 0x60]
	0x0346CA64 MOVN W9, 0x0
	0x0346CA68 STR X8, [X31 + 0x18]
	0x0346CA6C STR X31, [X19 + 0x60]
	0x0346CA70 STR W9, [X19]
	0x0346CA74 B 0x346CDBC
	0x0346CA78 LDR X8, [X19 + 0x58]
	0x0346CA7C MOVN W9, 0x0
	0x0346CA80 STR X8, [X31 + 0x20]
	0x0346CA84 STR X31, [X19 + 0x58]
	0x0346CA88 STR W9, [X19]
	0x0346CA8C ADRP X8, 0xC88000
	0x0346CA90 LDR X8, [X8 + 0x830]
	0x0346CA94 ADD X0, X31, 0x20
	0x0346CA98 LDR X1, [X8]
	0x0346CA9C BL 0x2677474
	0x0346CAA0 B 0x346CCDC
	0x0346CAA4 ADRP X8, 0xCC4000
	0x0346CAA8 LDR X8, [X8 + 0x620]
	0x0346CAAC LDR X0, [X8]
	0x0346CAB0 BL 0x1C16F10
	0x0346CAB4 MOV X21, X0
	0x0346CAB8 MOV X1, X31
	0x0346CABC BL 0x3446CC4
	0x0346CAC0 STR X21, [X19 + 0x50]
	0x0346CAC4 CBZ X21, 0x346CE74
	0x0346CAC8 LDR X8, [X19 + 0x20]
	0x0346CACC STR X8, [X21 + 0x10]
	0x0346CAD0 LDR X8, [X19 + 0x28]
	0x0346CAD4 STR X8, [X21 + 0x18]
	0x0346CAD8 LDR X8, [X19 + 0x30]
	0x0346CADC STR X8, [X21 + 0x20]
	0x0346CAE0 LDRB W8, [X19 + 0x38]
	0x0346CAE4 STRB W8, [X21 + 0x28]
	0x0346CAE8 LDR X8, [X19 + 0x40]
	0x0346CAEC STR X8, [X21 + 0x30]
	0x0346CAF0 CBZ X20, 0x346CE78
	0x0346CAF4 LDRB W8, [X20 + 0x10]
	0x0346CAF8 CBZ W8, 0x346CCE0
	0x0346CAFC LDR X8, [X19 + 0x50]
	0x0346CB00 CBZ X8, 0x346CE7C
	0x0346CB04 LDR X21, [X8 + 0x18]
	0x0346CB08 CBZ X21, 0x346CE80
	0x0346CB0C ADRP X23, 0xC88000
	0x0346CB10 LDR X8, [X21]
	0x0346CB14 LDR X23, [X23 + 0x818]
	0x0346CB18 LDRH W9, [X8 + 0x12E]
	0x0346CB1C LDR X1, [X23]
	0x0346CB20 CBZ X9, 0x346CB44
	0x0346CB24 LDR X10, [X8 + 0xB0]
	0x0346CB28 ADD X10, X10, 0x8
	0x0346CB2C LDUR X11, [X10 - 0x8]
	0x0346CB30 CMP X11, X1
	0x0346CB34 B.EQ 0x346CB54
	0x0346CB38 SUBS X9, X9, 0x1
	0x0346CB3C ADD X10, X10, 0x10
	0x0346CB40 B.NE 0x346CB2C
	0x0346CB44 MOVZ W2, 0x7
	0x0346CB48 MOV X0, X21
	0x0346CB4C BL 0x1C5C788
	0x0346CB50 B 0x346CB64
	0x0346CB54 LDR W9, [X10]
	0x0346CB58 ADD W9, W9, 0x7
	0x0346CB5C ADD X8, X8, W9, 0x4, SXTW
	0x0346CB60 ADD X0, X8, 0x138
	0x0346CB64 LDP X8, X1, [X0]
	0x0346CB68 MOV X0, X21
	0x0346CB6C BLR X8
	0x0346CB70 MOV X1, X31
	0x0346CB74 BL 0x32277A8
	0x0346CB78 TBNZ X0, 0x0, 0x346CCDC
	0x0346CB7C LDR X8, [X19 + 0x50]
	0x0346CB80 CBZ X8, 0x346CE84
	0x0346CB84 ADRP X9, 0xC88000
	0x0346CB88 LDR X9, [X9 + 0x9F0]
	0x0346CB8C LDR X21, [X8 + 0x18]
	0x0346CB90 LDR X0, [X9]
	0x0346CB94 LDR W9, [X0 + 0xE0]
	0x0346CB98 CBNZ W9, 0x346CBA0
	0x0346CB9C BL 0x1C16DFC
	0x0346CBA0 MOV X0, X31
	0x0346CBA4 BL 0x33616A4
	0x0346CBA8 ADRP X22, 0xC89000
	0x0346CBAC LDR X22, [X22 + 0xA10]
	0x0346CBB0 MOV X8, X0
	0x0346CBB4 STR X8, [X31 + 0x28]
	0x0346CBB8 LDR X0, [X22]
	0x0346CBBC LDR W8, [X0 + 0xE0]
	0x0346CBC0 CBNZ W8, 0x346CBCC
	0x0346CBC4 BL 0x1C16DFC
	0x0346CBC8 LDR X0, [X22]
	0x0346CBCC LDR X8, [X0 + 0xB8]
	0x0346CBD0 LDR X1, [X8]
	0x0346CBD4 ADD X0, X31, 0x28
	0x0346CBD8 MOV X2, X31
	0x0346CBDC BL 0x335FC68
	0x0346CBE0 CBZ X21, 0x346CE88
	0x0346CBE4 LDR X8, [X21]
	0x0346CBE8 LDR X1, [X23]
	0x0346CBEC MOV X22, X0
	0x0346CBF0 LDRH W9, [X8 + 0x12E]
	0x0346CBF4 CBZ X9, 0x346CC18
	0x0346CBF8 LDR X10, [X8 + 0xB0]
	0x0346CBFC ADD X10, X10, 0x8
	0x0346CC00 LDUR X11, [X10 - 0x8]
	0x0346CC04 CMP X11, X1
	0x0346CC08 B.EQ 0x346CC28
	0x0346CC0C SUBS X9, X9, 0x1
	0x0346CC10 ADD X10, X10, 0x10
	0x0346CC14 B.NE 0x346CC00
	0x0346CC18 MOVZ W2, 0xB
	0x0346CC1C MOV X0, X21
	0x0346CC20 BL 0x1C5C788
	0x0346CC24 B 0x346CC38
	0x0346CC28 LDR W9, [X10]
	0x0346CC2C ADD W9, W9, 0xB
	0x0346CC30 ADD X8, X8, W9, 0x4, SXTW
	0x0346CC34 ADD X0, X8, 0x138
	0x0346CC38 LDP X8, X2, [X0]
	0x0346CC3C MOV X0, X21
	0x0346CC40 MOV X1, X22
	0x0346CC44 BLR X8
	0x0346CC48 TBZ X0, 0x0, 0x346CCDC
	0x0346CC4C LDR X8, [X19 + 0x50]
	0x0346CC50 CBZ X8, 0x346CE8C
	0x0346CC54 LDR X1, [X8 + 0x18]
	0x0346CC58 LDR X3, [X19 + 0x48]
	0x0346CC5C LDR X4, [X8 + 0x30]
	0x0346CC60 MOV X0, X20
	0x0346CC64 MOV X2, X31
	0x0346CC68 MOV X5, X31
	0x0346CC6C BL 0x34440A8
	0x0346CC70 CBZ X0, 0x346CE90
	0x0346CC74 ADRP X8, 0xC88000
	0x0346CC78 LDR X8, [X8 + 0x840]
	0x0346CC7C LDR X1, [X8]
	0x0346CC80 BL 0x269F5D0
	0x0346CC84 ADRP X8, 0xC88000
	0x0346CC88 LDR X8, [X8 + 0x838]
	0x0346CC8C STR X0, [X31 + 0x20]
	0x0346CC90 LDR X1, [X8]
	0x0346CC94 ADD X0, X31, 0x20
	0x0346CC98 BL 0x2677430
	0x0346CC9C TBNZ X0, 0x0, 0x346CA8C
	0x0346CCA0 STR W31, [X19]
	0x0346CCA4 LDR X8, [X31 + 0x20]
	0x0346CCA8 STR X8, [X19 + 0x58]
	0x0346CCAC LDR X0, [X25]
	0x0346CCB0 LDR W8, [X0 + 0xE0]
	0x0346CCB4 CBNZ W8, 0x346CCBC
	0x0346CCB8 BL 0x1C16DFC
	0x0346CCBC ADRP X8, 0xCC4000
	0x0346CCC0 LDR X8, [X8 + 0x5E8]
	0x0346CCC4 ADD X0, X19, 0x8
	0x0346CCC8 LDR X3, [X8]
	0x0346CCCC ADD X1, X31, 0x20
	0x0346CCD0 MOV X2, X19
	0x0346CCD4 BL 0x1FBD9B4
	0x0346CCD8 B 0x346CE4C
	0x0346CCDC CBZ X20, 0x346CE70
	0x0346CCE0 ADRP X8, 0xCC4000
	0x0346CCE4 LDR X8, [X8 + 0x5F0]
	0x0346CCE8 LDR X21, [X20 + 0x58]
	0x0346CCEC LDR X23, [X19 + 0x50]
	0x0346CCF0 LDR X0, [X8]
	0x0346CCF4 BL 0x1C16F10
	0x0346CCF8 ADRP X8, 0xCC4000
	0x0346CCFC LDR X8, [X8 + 0x618]
	0x0346CD00 MOV X22, X0
	0x0346CD04 LDR X2, [X8]
	0x0346CD08 MOV X1, X23
	0x0346CD0C MOV X3, X31
	0x0346CD10 BL 0x2D27AA8
	0x0346CD14 LDR X8, [X19 + 0x50]
	0x0346CD18 CBZ X8, 0x346CE64
	0x0346CD1C ADRP X9, 0xCC3000
	0x0346CD20 LDR X23, [X19 + 0x48]
	0x0346CD24 LDR X9, [X9 + 0x7C8]
	0x0346CD28 CBNZ X23, 0x346CD30
	0x0346CD2C LDR X23, [X20 + 0x18]
	0x0346CD30 LDR X20, [X8 + 0x18]
	0x0346CD34 LDR X1, [X8 + 0x30]
	0x0346CD38 LDR X2, [X9]
	0x0346CD3C STP X31, X31, [X31 + 0x8]
	0x0346CD40 ADD X0, X31, 0x8
	0x0346CD44 BL 0x242E368
	0x0346CD48 ADRP X8, 0xCC3000
	0x0346CD4C LDR X8, [X8 + 0x7D0]
	0x0346CD50 LDR X0, [X8]
	0x0346CD54 BL 0x1C16F10
	0x0346CD58 LDP X3, X4, [X31 + 0x8]
	0x0346CD5C MOV X24, X0
	0x0346CD60 MOV X1, X20
	0x0346CD64 MOV X2, X23
	0x0346CD68 BL 0x3465404
	0x0346CD6C CBZ X21, 0x346CE68
	0x0346CD70 ADRP X8, 0xCC4000
	0x0346CD74 LDR X8, [X8 + 0x5F8]
	0x0346CD78 LDR X3, [X8]
	0x0346CD7C MOV X0, X21
	0x0346CD80 MOV X1, X22
	0x0346CD84 MOV X2, X24
	0x0346CD88 BL 0x2243230
	0x0346CD8C CBZ X0, 0x346CE6C
	0x0346CD90 ADRP X8, 0xCC4000
	0x0346CD94 LDR X8, [X8 + 0x610]
	0x0346CD98 LDR X1, [X8]
	0x0346CD9C BL 0x269F5D0
	0x0346CDA0 ADRP X8, 0xCC4000
	0x0346CDA4 LDR X8, [X8 + 0x608]
	0x0346CDA8 STR X0, [X31 + 0x18]
	0x0346CDAC LDR X1, [X8]
	0x0346CDB0 ADD X0, X31, 0x18
	0x0346CDB4 BL 0x2677430
	0x0346CDB8 TBZ X0, 0x0, 0x346CE10
	0x0346CDBC ADRP X8, 0xCC4000
	0x0346CDC0 LDR X8, [X8 + 0x600]
	0x0346CDC4 ADD X0, X31, 0x18
	0x0346CDC8 LDR X1, [X8]
	0x0346CDCC BL 0x2677474
	0x0346CDD0 MOVN W8, 0x1
	0x0346CDD4 STR W8, [X19]
	0x0346CDD8 STR X31, [X19 + 0x50]
	0x0346CDDC MOV X20, X0
	0x0346CDE0 LDR X0, [X25]
	0x0346CDE4 ADRP X21, 0xCC3000
	0x0346CDE8 ADD X19, X19, 0x8
	0x0346CDEC LDR W8, [X0 + 0xE0]
	0x0346CDF0 LDR X21, [X21 + 0x458]
	0x0346CDF4 CBNZ W8, 0x346CDFC
	0x0346CDF8 BL 0x1C16DFC
	0x0346CDFC LDR X2, [X21]
	0x0346CE00 MOV X0, X19
	0x0346CE04 MOV X1, X20
	0x0346CE08 BL 0x26322B0
	0x0346CE0C B 0x346CE4C
	0x0346CE10 MOVZ W8, 0x1
	0x0346CE14 STR W8, [X19]
	0x0346CE18 LDR X8, [X31 + 0x18]
	0x0346CE1C STR X8, [X19 + 0x60]
	0x0346CE20 LDR X0, [X25]
	0x0346CE24 LDR W8, [X0 + 0xE0]
	0x0346CE28 CBNZ W8, 0x346CE30
	0x0346CE2C BL 0x1C16DFC
	0x0346CE30 ADRP X8, 0xCC4000
	0x0346CE34 LDR X8, [X8 + 0x5E0]
	0x0346CE38 ADD X0, X19, 0x8
	0x0346CE3C LDR X3, [X8]
	0x0346CE40 ADD X1, X31, 0x18
	0x0346CE44 MOV X2, X19
	0x0346CE48 BL 0x1FBD9B4
	0x0346CE4C LDP X20, X19, [X31 + 0x60]
	0x0346CE50 LDP X22, X21, [X31 + 0x50]
	0x0346CE54 LDP X24, X23, [X31 + 0x40]
	0x0346CE58 LDP X30, X25, [X31 + 0x30]
	0x0346CE5C ADD X31, X31, 0x70
	0x0346CE60 RET
	0x0346CE64 BL 0x1C16F20
	0x0346CE68 BL 0x1C16F20
	0x0346CE6C BL 0x1C16F20
	0x0346CE70 BL 0x1C16F20
	0x0346CE74 BL 0x1C16F20
	0x0346CE78 BL 0x1C16F20
	0x0346CE7C BL 0x1C16F20
	0x0346CE80 BL 0x1C16F20
	0x0346CE84 BL 0x1C16F20
	0x0346CE88 BL 0x1C16F20
	0x0346CE8C BL 0x1C16F20
	0x0346CE90 BL 0x1C16F20
	0x0346CE94 B 0x346CF08
	0x0346CE98 B 0x346CF08
	0x0346CE9C B 0x346CF08
	0x0346CEA0 B 0x346CF08
	0x0346CEA4 B 0x346CF08
	0x0346CEA8 B 0x346CF08
	0x0346CEAC B 0x346CF08
	0x0346CEB0 B 0x346CF08
	0x0346CEB4 B 0x346CF08
	0x0346CEB8 B 0x346CF08
	0x0346CEBC B 0x346CF08
	0x0346CEC0 B 0x346CF08
	0x0346CEC4 B 0x346CF08
	0x0346CEC8 B 0x346CF08
	0x0346CECC B 0x346CF08
	0x0346CED0 B 0x346CF08
	0x0346CED4 B 0x346CF08
	0x0346CED8 B 0x346CF08
	0x0346CEDC B 0x346CF08
	0x0346CEE0 B 0x346CF08
	0x0346CEE4 B 0x346CF08
	0x0346CEE8 B 0x346CF08
	0x0346CEEC B 0x346CF08
	0x0346CEF0 B 0x346CF08
	0x0346CEF4 B 0x346CF08
	0x0346CEF8 B 0x346CF08
	0x0346CEFC B 0x346CF08
	0x0346CF00 B 0x346CF08
	0x0346CF04 B 0x346CF08
	0x0346CF08 MOV X20, X0
	0x0346CF0C CMP W1, 0x1
	0x0346CF10 B.NE 0x346CFB0
	0x0346CF14 MOV X0, X20
	0x0346CF18 BL 0x3EB1AD0
	0x0346CF1C MOV X20, X0
	0x0346CF20 ADRP X0, 0xC87000
	0x0346CF24 LDR X0, [X0 + 0x7D0]
	0x0346CF28 BL 0x1C16D08
	0x0346CF2C LDR X8, [X20]
	0x0346CF30 LDR X1, [X8]
	0x0346CF34 BL 0x1C17270
	0x0346CF38 TBZ X0, 0x0, 0x346CF88
	0x0346CF3C LDR X20, [X20]
	0x0346CF40 BL 0x3EB1AE0
	0x0346CF44 MOVN W8, 0x1
	0x0346CF48 STR X31, [X19 + 0x50]
	0x0346CF4C STR W8, [X19], #0x8
	0x0346CF50 ADRP X0, 0xCC2000
	0x0346CF54 LDR X0, [X0 + 0x530]
	0x0346CF58 BL 0x1C16D08
	0x0346CF5C LDR W8, [X0 + 0xE0]
	0x0346CF60 CBNZ W8, 0x346CF68
	0x0346CF64 BL 0x1C16DFC
	0x0346CF68 ADRP X0, 0xCC3000
	0x0346CF6C LDR X0, [X0 + 0x478]
	0x0346CF70 BL 0x1C16D08
	0x0346CF74 MOV X2, X0
	0x0346CF78 MOV X0, X19
	0x0346CF7C MOV X1, X20
	0x0346CF80 BL 0x26324C8
	0x0346CF84 B 0x346CE4C
	0x0346CF88 MOVZ W0, 0x8
	0x0346CF8C BL 0x3EB1AF0
	0x0346CF90 LDR X8, [X20]
	0x0346CF94 STR X8, [X0]
	0x0346CF98 ADRP X1, 0xA48000
	0x0346CF9C ADD X1, X1, 0xE58
	0x0346CFA0 MOV X2, X31
	0x0346CFA4 BL 0x3EB1B00
	0x0346CFA8 MOV X20, X0
	0x0346CFAC BL 0x3EB1AE0
	0x0346CFB0 MOV X0, X20
	0x0346CFB4 BL 0x1D2C690
	0x0346CFB8 BL 0x1990590
	0x0346CFBC STR X30, [X31 - 0x30]!
	0x0346CFC0 STP X22, X21, [X31 + 0x10]
	0x0346CFC4 STP X20, X19, [X31 + 0x20]
	0x0346CFC8 ADRP X22, 0xF71000
	0x0346CFCC ADRP X21, 0xCC2000
	0x0346CFD0 LDRB W8, [X22 + 0x7DE]
	0x0346CFD4 LDR X21, [X21 + 0x530]
	0x0346CFD8 MOV X19, X1
	0x0346CFDC MOV X20, X0
	0x0346CFE0 TBNZ X8, 0x0, 0x346D004
	0x0346CFE4 ADRP X0, 0xCC3000
	0x0346CFE8 LDR X0, [X0 + 0x480]
	0x0346CFEC BL 0x1C16CF4
	0x0346CFF0 ADRP X0, 0xCC2000
	0x0346CFF4 LDR X0, [X0 + 0x530]
	0x0346CFF8 BL 0x1C16CF4
	0x0346CFFC MOVZ W8, 0x1
	0x0346D000 STRB W8, [X22 + 0x7DE]
	0x0346D004 LDR X0, [X21]
	0x0346D008 ADRP X21, 0xCC2000
	0x0346D00C LDR W8, [X0 + 0xE0]
	0x0346D010 LDR X21, [X21 + 0x480]
	0x0346D014 CBNZ W8, 0x346D01C
	0x0346D018 BL 0x1C16DFC
	0x0346D01C LDR X2, [X21]
	0x0346D020 ADD X0, X20, 0x8
	0x0346D024 MOV X1, X19
	0x0346D028 LDP X20, X19, [X31 + 0x20]
	0x0346D02C LDP X22, X21, [X31 + 0x10]
	0x0346D030 LDR X30, [X31], #0x30
	0x0346D034 B 0x2632228
	0x0346D038 SUB X31, X31, 0x70
	0x0346D03C STP X30, X25, [X31 + 0x30]
	0x0346D040 STP X24, X23, [X31 + 0x40]
	0x0346D044 STP X22, X21, [X31 + 0x50]
	0x0346D048 STP X20, X19, [X31 + 0x60]
	0x0346D04C ADRP X20, 0xF70000
	0x0346D050 LDRB W8, [X20 + 0x7DF]
	0x0346D054 MOV X19, X0
	0x0346D058 TBNZ X8, 0x0, 0x346D148
	0x0346D05C ADRP X0, 0xCC3000
	0x0346D060 LDR X0, [X0 + 0x628]
	0x0346D064 BL 0x1C16CF4
	0x0346D068 ADRP X0, 0xCC3000
	0x0346D06C LDR X0, [X0 + 0x630]
	0x0346D070 BL 0x1C16CF4
	0x0346D074 ADRP X0, 0xCC2000
	0x0346D078 LDR X0, [X0 + 0x458]
	0x0346D07C BL 0x1C16CF4
	0x0346D080 ADRP X0, 0xCC1000
	0x0346D084 LDR X0, [X0 + 0x530]
	0x0346D088 BL 0x1C16CF4
	0x0346D08C ADRP X0, 0xC88000
	0x0346D090 LDR X0, [X0 + 0xA10]
	0x0346D094 BL 0x1C16CF4
	0x0346D098 ADRP X0, 0xC87000
	0x0346D09C LDR X0, [X0 + 0x9F0]
	0x0346D0A0 BL 0x1C16CF4
	0x0346D0A4 ADRP X0, 0xCC3000
	0x0346D0A8 LDR X0, [X0 + 0x5F0]
	0x0346D0AC BL 0x1C16CF4
	0x0346D0B0 ADRP X0, 0xC87000
	0x0346D0B4 LDR X0, [X0 + 0x818]
	0x0346D0B8 BL 0x1C16CF4
	0x0346D0BC ADRP X0, 0xCC2000
	0x0346D0C0 LDR X0, [X0 + 0x7C8]
	0x0346D0C4 BL 0x1C16CF4
	0x0346D0C8 ADRP X0, 0xCC2000
	0x0346D0CC LDR X0, [X0 + 0x7D0]
	0x0346D0D0 BL 0x1C16CF4
	0x0346D0D4 ADRP X0, 0xCC3000
	0x0346D0D8 LDR X0, [X0 + 0x5F8]
	0x0346D0DC BL 0x1C16CF4
	0x0346D0E0 ADRP X0, 0xCC3000
	0x0346D0E4 LDR X0, [X0 + 0x600]
	0x0346D0E8 BL 0x1C16CF4
	0x0346D0EC ADRP X0, 0xC87000
	0x0346D0F0 LDR X0, [X0 + 0x830]
	0x0346D0F4 BL 0x1C16CF4
	0x0346D0F8 ADRP X0, 0xC87000
	0x0346D0FC LDR X0, [X0 + 0x838]
	0x0346D100 BL 0x1C16CF4
	0x0346D104 ADRP X0, 0xCC3000
	0x0346D108 LDR X0, [X0 + 0x608]
	0x0346D10C BL 0x1C16CF4
	0x0346D110 ADRP X0, 0xC87000
	0x0346D114 LDR X0, [X0 + 0x840]
	0x0346D118 BL 0x1C16CF4
	0x0346D11C ADRP X0, 0xCC3000
	0x0346D120 LDR X0, [X0 + 0x610]
	0x0346D124 BL 0x1C16CF4
	0x0346D128 ADRP X0, 0xCC3000
	0x0346D12C LDR X0, [X0 + 0x638]
	0x0346D130 BL 0x1C16CF4
	0x0346D134 ADRP X0, 0xCC3000
	0x0346D138 LDR X0, [X0 + 0x640]
	0x0346D13C BL 0x1C16CF4
	0x0346D140 MOVZ W8, 0x1
	0x0346D144 STRB W8, [X20 + 0x7DF]
	0x0346D148 STP X31, X31, [X31 + 0x20]
	0x0346D14C STR X31, [X31 + 0x18]
	0x0346D150 ADRP X25, 0xCC1000
	0x0346D154 LDR W8, [X19]
	0x0346D158 LDR X20, [X19 + 0x20]
	0x0346D15C LDR X25, [X25 + 0x530]
	0x0346D160 CBZ W8, 0x346D184
	0x0346D164 CMP W8, 0x1
	0x0346D168 B.NE 0x346D1B0
	0x0346D16C LDR X8, [X19 + 0x60]
	0x0346D170 MOVN W9, 0x0
	0x0346D174 STR X8, [X31 + 0x18]
	0x0346D178 STR X31, [X19 + 0x60]
	0x0346D17C STR W9, [X19]
	0x0346D180 B 0x346D4C8
	0x0346D184 LDR X8, [X19 + 0x58]
	0x0346D188 MOVN W9, 0x0
	0x0346D18C STR X8, [X31 + 0x20]
	0x0346D190 STR X31, [X19 + 0x58]
	0x0346D194 STR W9, [X19]
	0x0346D198 ADRP X8, 0xC87000
	0x0346D19C LDR X8, [X8 + 0x830]
	0x0346D1A0 ADD X0, X31, 0x20
	0x0346D1A4 LDR X1, [X8]
	0x0346D1A8 BL 0x2677474
	0x0346D1AC B 0x346D3E8
	0x0346D1B0 ADRP X8, 0xCC3000
	0x0346D1B4 LDR X8, [X8 + 0x640]
	0x0346D1B8 LDR X0, [X8]
	0x0346D1BC BL 0x1C16F10
	0x0346D1C0 MOV X21, X0
	0x0346D1C4 MOV X1, X31
	0x0346D1C8 BL 0x3446E14
	0x0346D1CC STR X21, [X19 + 0x50]
	0x0346D1D0 CBZ X21, 0x346D580
	0x0346D1D4 LDR X8, [X19 + 0x20]
	0x0346D1D8 STR X8, [X21 + 0x10]
	0x0346D1DC LDR X8, [X19 + 0x28]
	0x0346D1E0 STR X8, [X21 + 0x18]
	0x0346D1E4 LDR X8, [X19 + 0x30]
	0x0346D1E8 STR X8, [X21 + 0x20]
	0x0346D1EC LDRB W8, [X19 + 0x38]
	0x0346D1F0 STRB W8, [X21 + 0x28]
	0x0346D1F4 LDR X8, [X19 + 0x40]
	0x0346D1F8 STR X8, [X21 + 0x30]
	0x0346D1FC CBZ X20, 0x346D584
	0x0346D200 LDRB W8, [X20 + 0x10]
	0x0346D204 CBZ W8, 0x346D3EC
	0x0346D208 LDR X8, [X19 + 0x50]
	0x0346D20C CBZ X8, 0x346D588
	0x0346D210 LDR X21, [X8 + 0x18]
	0x0346D214 CBZ X21, 0x346D58C
	0x0346D218 ADRP X23, 0xC87000
	0x0346D21C LDR X8, [X21]
	0x0346D220 LDR X23, [X23 + 0x818]
	0x0346D224 LDRH W9, [X8 + 0x12E]
	0x0346D228 LDR X1, [X23]
	0x0346D22C CBZ X9, 0x346D250
	0x0346D230 LDR X10, [X8 + 0xB0]
	0x0346D234 ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X20, 0xF72000
	012 Move W8, [X20+2009]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {62}
	018 Move X0, 0xCC5000
	019 Move X0, [X0+1440]
	020 Call 0x1C17CF4
	021 Move X0, 0xCC5000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move X0, 0xC8B000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move X0, 0xC8A000
	028 Move X0, [X0+2576]
	029 Call 0x1C17CF4
	030 Move X0, 0xC89000
	031 Move X0, [X0+2544]
	032 Call 0x1C17CF4
	033 Move X0, 0xC90000
	034 Move X0, [X0+2072]
	035 Call 0x1C17CF4
	036 Move X0, 0xC89000
	037 Move X0, [X0+2072]
	038 Call 0x1C17CF4
	039 Move X0, 0xCC4000
	040 Move X0, [X0+1992]
	041 Call 0x1C17CF4
	042 Move X0, 0xCC4000
	043 Move X0, [X0+2000]
	044 Call 0x1C17CF4
	045 Move X0, 0xC89000
	046 Move X0, [X0+2096]
	047 Call 0x1C17CF4
	048 Move X0, 0xC89000
	049 Move X0, [X0+2104]
	050 Call 0x1C17CF4
	051 Move X0, 0xC89000
	052 Move X0, [X0+2112]
	053 Call 0x1C17CF4
	054 Move X0, 0xCC5000
	055 Move X0, [X0+1456]
	056 Call 0x1C17CF4
	057 Move X0, 0xCC5000
	058 Move X0, [X0+1464]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+2009], W8
	062 Move [X31+40], X31
	063 Move [X31+16], X31
	064 Move [X31+24], X31
	065 Move X26, 0xC8B000
	066 Move W8, [X19]
	067 Move X20, [X19+32]
	068 Move X26, [X26+640]
	069 Compare W8, 0
	070 JumpIfEqual {92}
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X19+120]
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W9, TEMP
	077 Move [X31+24], X8
	078 Move [X19+120], X31
	079 Move [X19], W9
	080 Move X8, 0xC89000
	081 Move X8, [X8+2096]
	082 Add X0, X31, 24
	083 Move X1, [X8]
	084 Call TaskAwaiter`1<Object>.GetResult, X0
	085 Move X8, [X19+128]
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W9, TEMP
	089 Move [X31+16], X8
	090 Move [X19+128], X31
	091 Move [X19], W9
	092 Move X8, [X19+120]
	093 Move TEMP, 0
	094 Not TEMP
	095 Move W9, TEMP
	096 Move [X31+24], X8
	097 Move [X19+120], X31
	098 Move [X19], W9
	099 Move X8, 0xC89000
	100 Move X8, [X8+2096]
	101 Add X0, X31, 24
	102 Move X1, [X8]
	103 Call TaskAwaiter`1<Object>.GetResult, X0
	104 Move X8, 0xCC5000
	105 Move X8, [X8+1464]
	106 Move X0, [X8]
	107 Call 0x1C17F10
	108 Move X21, X0
	109 Move X1, X31
	110 Call <>c__DisplayClass117_0..ctor, X0
	111 Move [X19+112], X21
	112 Compare X21, 0
	113 JumpIfEqual {469}
	114 Move X8, [X19+32]
	115 Move [X21+16], X8
	116 Move X8, [X19+40]
	117 Move [X21+24], X8
	118 Move V0, [X19+3]
	119 Move [X21+2], V0
	120 Move V0, [X19+4]
	121 Move [X21+3], V0
	122 Move V0, [X19+5]
	123 Move [X21+4], V0
	124 Move X8, [X19+96]
	125 Move [X21+80], X8
	126 Compare X20, 0
	127 JumpIfEqual {470}
	128 Move W8, [X20+16]
	129 Compare W8, 0
	130 JumpIfEqual {268}
	131 Move X8, [X19+112]
	132 Compare X8, 0
	133 JumpIfEqual {474}
	134 Move X21, [X8+24]
	135 Compare X21, 0
	136 JumpIfEqual {475}
	137 Move X23, 0xC89000
	138 Move X8, [X21]
	139 Move X23, [X23+2072]
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move X1, [X23]
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move W2, 7
	151 Move X0, X21
	152 Call 0x1C5D788
	153 Move W9, [X10]
	154 Add W9, W9, 7
	155 Add X8, X8, W9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X1, [X0+8]
	159 Move X0, X21
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X1, X31
	162 Call String.IsNullOrEmpty, X0
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {266}
	167 Move X8, [X19+112]
	168 Compare X8, 0
	169 JumpIfEqual {479}
	170 Move X9, 0xC89000
	171 Move X9, [X9+2544]
	172 Move X21, [X8+24]
	173 Move X0, [X9]
	174 Move W9, [X0+224]
	175 Compare W9, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, X31
	179 Call DateTime.get_UtcNow
	180 Move X22, 0xC8A000
	181 Move X22, [X22+2576]
	182 Move X8, X0
	183 Move [X31+40], X8
	184 Move X0, [X22]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {190}
	188 Call 0x1C17DFC
	189 Move X0, [X22]
	190 Move X8, [X0+184]
	191 Move X1, [X8]
	192 Add X0, X31, 40
	193 Move X2, X31
	194 Call DateTime.Add, X0, X1
	195 Compare X21, 0
	196 JumpIfEqual {480}
	197 Move X8, [X21]
	198 Move X1, [X23]
	199 Move X22, X0
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move W2, 11
	210 Move X0, X21
	211 Call 0x1C5D788
	212 Move W9, [X10]
	213 Add W9, W9, 11
	214 Add X8, X8, W9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X2, [X0+8]
	218 Move X0, X21
	219 Move X1, X22
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {266}
	225 Move X8, [X19+112]
	226 Compare X8, 0
	227 JumpIfEqual {481}
	228 Move X1, [X8+24]
	229 Move X3, [X19+104]
	230 Move X4, [X8+80]
	231 Move X0, X20
	232 Move X2, X31
	233 Move X5, X31
	234 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	235 Compare X0, 0
	236 JumpIfEqual {482}
	237 Move X8, 0xC89000
	238 Move X8, [X8+2112]
	239 Move X1, [X8]
	240 Call Task`1<Object>.GetAwaiter, X0
	241 Move X8, 0xC89000
	242 Move X8, [X8+2104]
	243 Move [X31+24], X0
	244 Move X1, [X8]
	245 Add X0, X31, 24
	246 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {99}
	251 Move [X19], W31
	252 Move X8, [X31+24]
	253 Move [X19+120], X8
	254 Move X0, [X26]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move X8, 0xCC5000
	260 Move X8, [X8+1440]
	261 Add X0, X19, 8
	262 Move X3, [X8]
	263 Add X1, X31, 24
	264 Move X2, X19
	265 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	266 Compare X20, 0
	267 JumpIfEqual {468}
	268 Move X8, 0xC90000
	269 Move X21, [X20+88]
	270 Move X23, [X19+112]
	271 Move X8, [X8+2072]
	272 Move X0, [X8]
	273 Call 0x1C17F10
	274 Move X8, 0xCC5000
	275 Move X8, [X8+1456]
	276 Move X22, X0
	277 Move X2, [X8]
	278 Move X1, X23
	279 Move X3, X31
	280 Call Func`1<Object>..ctor, X0, X1, X2
	281 Move X8, [X19+112]
	282 Compare X8, 0
	283 JumpIfEqual {465}
	284 Move X23, [X19+104]
	285 Compare X23, 0
	286 JumpIfNotEqual {288}
	287 Move X23, [X20+24]
	288 Move X24, [X8+24]
	289 Move X1, [X8+80]
	290 Move X8, 0xCC4000
	291 Move X8, [X8+1992]
	292 Move [X31], X31
	293 Move [X31+8], X31
	294 Move X2, [X8]
	295 Add X0, X31, 0
	296 Call Nullable`1<CancellationToken>..ctor, X0, X1
	297 Move X8, 0xCC4000
	298 Move X8, [X8+2000]
	299 Move X0, [X8]
	300 Call 0x1C17F10
	301 Move X3, [X31]
	302 Move X4, [X31+8]
	303 Move X25, X0
	304 Move X1, X24
	305 Move X2, X23
	306 Call RetryHistory..ctor, X0, X1, X2, X3
	307 Compare X21, 0
	308 JumpIfEqual {466}
	309 Move X0, X21
	310 Move X1, X22
	311 Move X2, X25
	312 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	313 Compare X0, 0
	314 JumpIfEqual {467}
	315 Move X1, X31
	316 Call Task.GetAwaiter, X0
	317 Move [X31+16], X0
	318 Add X0, X31, 16
	319 Move X1, X31
	320 Call TaskAwaiter.get_IsCompleted, X0
	321 Move TEMP, X0
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfNotEqual {361}
	325 Add X0, X31, 16
	326 Move X1, X31
	327 Call TaskAwaiter.GetResult, X0
	328 Move X8, [X19+112]
	329 Compare X8, 0
	330 JumpIfEqual {464}
	331 Move X0, [X8+72]
	332 Move X1, X31
	333 Call String.IsNullOrEmpty, X0
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfEqual {395}
	338 Move X9, [X19+112]
	339 Compare X9, 0
	340 JumpIfEqual {471}
	341 Move X22, [X9+24]
	342 Compare X22, 0
	343 JumpIfEqual {472}
	344 Move X10, 0xC89000
	345 Move X8, [X22]
	346 Move X21, [X9+72]
	347 Move X10, [X10+2072]
	348 NotImplemented "Instruction LDRH not yet implemented."
	349 Move X1, [X10]
	350 Compare X9, 0
	351 JumpIfEqual {358}
	352 Move X10, [X8+176]
	353 Add X10, X10, 8
	354 NotImplemented "Instruction LDUR not yet implemented."
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Subtract X9, X9, 1
	357 Add X10, X10, 16
	358 Move W2, 9
	359 Move X0, X22
	360 Call 0x1C5D788
	361 Move W8, 1
	362 Move [X19], W8
	363 Move X8, [X31+16]
	364 Move [X19+128], X8
	365 Move X0, [X26]
	366 Move W8, [X0+224]
	367 Compare W8, 0
	368 JumpIfNotEqual {370}
	369 Call 0x1C17DFC
	370 Move X8, 0xCC5000
	371 Move X8, [X8+1448]
	372 Add X0, X19, 8
	373 Move X3, [X8]
	374 Add X1, X31, 16
	375 Move X2, X19
	376 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	377 Move W9, [X10]
	378 Add W9, W9, 9
	379 Add X8, X8, W9
	380 Add X0, X8, 312
	381 Move X8, [X0]
	382 Move X1, [X0+8]
	383 Move X0, X22
	384 NotImplemented "Instruction BLR not yet implemented."
	385 Move X1, X0
	386 Compare X21, 0
	387 JumpIfEqual {473}
	388 Move X0, X21
	389 Move X2, X31
	390 Call String.Equals, X0, X1
	391 Move TEMP, X0
	392 And TEMP, TEMP, 1
	393 Compare TEMP, 1
	394 JumpIfNotEqual {420}
	395 Move TEMP, 1
	396 Not TEMP
	397 Move W8, TEMP
	398 Move [X19], W8
	399 Move [X19+112], X31
	400 Move X0, [X26]
	401 Add X19, X19, 8
	402 Move W8, [X0+224]
	403 Compare W8, 0
	404 JumpIfNotEqual {406}
	405 Call 0x1C17DFC
	406 Move X0, X19
	407 Move X1, X31
	408 Call AsyncTaskMethodBuilder.SetResult, X0
	409 Move X20, [X31+96]
	410 Move X19, [X31+104]
	411 Move X22, [X31+80]
	412 Move X21, [X31+88]
	413 Move X24, [X31+64]
	414 Move X23, [X31+72]
	415 Move X26, [X31+48]
	416 Move X25, [X31+56]
	417 Move X30, [X31+32]
	418 Add X31, X31, 112
	419 Return 
	420 Move X8, [X19+112]
	421 Compare X8, 0
	422 JumpIfEqual {476}
	423 Compare X20, 0
	424 JumpIfEqual {477}
	425 Move X1, [X8+24]
	426 Move X4, [X8+80]
	427 Move X3, [X19+104]
	428 Move X0, X20
	429 Move X2, X31
	430 Move X5, X31
	431 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	432 Compare X0, 0
	433 JumpIfEqual {478}
	434 Move X8, 0xC88000
	435 Move X8, [X8+2112]
	436 Move X1, [X8]
	437 Call Task`1<Object>.GetAwaiter, X0
	438 Move X8, 0xC88000
	439 Move X8, [X8+2104]
	440 Move [X31+24], X0
	441 Move X1, [X8]
	442 Add X0, X31, 24
	443 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	444 Move TEMP, X0
	445 And TEMP, TEMP, 1
	446 Compare TEMP, 1
	447 JumpIfEqual {80}
	448 Move W8, 2
	449 Move [X19], W8
	450 Move X8, [X31+24]
	451 Move [X19+120], X8
	452 Move X0, [X26]
	453 Move W8, [X0+224]
	454 Compare W8, 0
	455 JumpIfNotEqual {457}
	456 Call 0x1C17DFC
	457 Move X8, 0xCC4000
	458 Move X8, [X8+1440]
	459 Add X0, X19, 8
	460 Move X3, [X8]
	461 Add X1, X31, 24
	462 Move X2, X19
	463 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	464 Call 0x1C17F20
	465 Call 0x1C17F20
	466 Call 0x1C17F20
	467 Call 0x1C17F20
	468 Call 0x1C17F20
	469 Call 0x1C17F20
	470 Call 0x1C17F20
	471 Call 0x1C17F20
	472 Call 0x1C17F20
	473 Call 0x1C17F20
	474 Call 0x1C17F20
	475 Call 0x1C17F20
	476 Call 0x1C17F20
	477 Call 0x1C17F20
	478 Call 0x1C17F20
	479 Call 0x1C17F20
	480 Call 0x1C17F20
	481 Call 0x1C17F20
	482 Call 0x1C17F20
	483 Move X20, X0
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move X0, X20
	486 Call 0x3EB2AD0
	487 Move X20, X0
	488 Move X0, 0xC87000
	489 Move X0, [X0+2000]
	490 Call 0x1C17D08
	491 Move X8, [X20]
	492 Move X1, [X8]
	493 Call 0x1C18270
	494 Move TEMP, X0
	495 And TEMP, TEMP, 1
	496 Compare TEMP, 1
	497 JumpIfNotEqual {516}
	498 Move X20, [X20]
	499 Call 0x3EB2AE0
	500 Move TEMP, 1
	501 Not TEMP
	502 Move W8, TEMP
	503 Move [X19+112], X31
	504 Move [X19+8], W8
	505 Move X0, 0xC8A000
	506 Move X0, [X0+640]
	507 Call 0x1C17D08
	508 Move W8, [X0+224]
	509 Compare W8, 0
	510 JumpIfNotEqual {512}
	511 Call 0x1C17DFC
	512 Move X0, X19
	513 Move X1, X20
	514 Move X2, X31
	515 Call AsyncTaskMethodBuilder.SetException, X0, X1
	516 Move W0, 8
	517 Call 0x3EB2AF0
	518 Move X8, [X20]
	519 Move [X0], X8
	520 Move X1, 0xA48000
	521 Add X1, X1, 3672
	522 Move X2, X31
	523 Call 0x3EB2B00
	524 Move X20, X0
	525 Call 0x3EB2AE0
	526 Move X0, X20
	527 Call 0x1D2D690
	528 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346D238 LDUR X11, [X10 - 0x8]
	0x0346D23C CMP X11, X1
	0x0346D240 B.EQ 0x346D260
	0x0346D244 SUBS X9, X9, 0x1
	0x0346D248 ADD X10, X10, 0x10
	0x0346D24C B.NE 0x346D238
	0x0346D250 MOVZ W2, 0x7
	0x0346D254 MOV X0, X21
	0x0346D258 BL 0x1C5C788
	0x0346D25C B 0x346D270
	0x0346D260 LDR W9, [X10]
	0x0346D264 ADD W9, W9, 0x7
	0x0346D268 ADD X8, X8, W9, 0x4, SXTW
	0x0346D26C ADD X0, X8, 0x138
	0x0346D270 LDP X8, X1, [X0]
	0x0346D274 MOV X0, X21
	0x0346D278 BLR X8
	0x0346D27C MOV X1, X31
	0x0346D280 BL 0x32277A8
	0x0346D284 TBNZ X0, 0x0, 0x346D3E8
	0x0346D288 LDR X8, [X19 + 0x50]
	0x0346D28C CBZ X8, 0x346D590
	0x0346D290 ADRP X9, 0xC87000
	0x0346D294 LDR X9, [X9 + 0x9F0]
	0x0346D298 LDR X21, [X8 + 0x18]
	0x0346D29C LDR X0, [X9]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF71000
	007 Move X22, 0xC8A000
	008 Move W8, [X21+2010]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC8A000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2010], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

