Type: Nakama.Client/<AuthenticateEmailAsync>d__47

Method: System.Void MoveNext()

Disassembly:
	0x0344EDE8 BL 0x1C16D08
	0x0344EDEC MOV X2, X0
	0x0344EDF0 MOV X0, X19
	0x0344EDF4 MOV X1, X20
	0x0344EDF8 BL 0x26324C8
	0x0344EDFC B 0x344ED1C
	0x0344EE00 MOVZ W0, 0x8
	0x0344EE04 BL 0x3EB1AF0
	0x0344EE08 LDR X8, [X20]
	0x0344EE0C STR X8, [X0]
	0x0344EE10 ADRP X1, 0xA66000
	0x0344EE14 ADD X1, X1, 0xE58
	0x0344EE18 MOV X2, X31
	0x0344EE1C BL 0x3EB1B00
	0x0344EE20 MOV X20, X0
	0x0344EE24 BL 0x3EB1AE0
	0x0344EE28 MOV X0, X20
	0x0344EE2C BL 0x1D2C690
	0x0344EE30 BL 0x1990590
	0x0344EE34 STR X30, [X31 - 0x30]!
	0x0344EE38 STP X22, X21, [X31 + 0x10]
	0x0344EE3C STP X20, X19, [X31 + 0x20]
	0x0344EE40 ADRP X22, 0xF8F000
	0x0344EE44 ADRP X21, 0xCE1000
	0x0344EE48 LDRB W8, [X22 + 0x762]
	0x0344EE4C LDR X21, [X21 + 0x630]
	0x0344EE50 MOV X19, X1
	0x0344EE54 MOV X20, X0
	0x0344EE58 TBNZ X8, 0x0, 0x344EE7C
	0x0344EE5C ADRP X0, 0xCE1000
	0x0344EE60 LDR X0, [X0 + 0xAA8]
	0x0344EE64 BL 0x1C16CF4
	0x0344EE68 ADRP X0, 0xCE1000
	0x0344EE6C LDR X0, [X0 + 0x630]
	0x0344EE70 BL 0x1C16CF4
	0x0344EE74 MOVZ W8, 0x1
	0x0344EE78 STRB W8, [X22 + 0x762]
	0x0344EE7C LDR X0, [X21]
	0x0344EE80 ADRP X21, 0xCE1000
	0x0344EE84 LDR W8, [X0 + 0xE0]
	0x0344EE88 LDR X21, [X21 + 0xAA8]
	0x0344EE8C CBNZ W8, 0x344EE94
	0x0344EE90 BL 0x1C16DFC
	0x0344EE94 LDR X2, [X21]
	0x0344EE98 ADD X0, X20, 0x8
	0x0344EE9C MOV X1, X19
	0x0344EEA0 LDP X20, X19, [X31 + 0x20]
	0x0344EEA4 LDP X22, X21, [X31 + 0x10]
	0x0344EEA8 LDR X30, [X31], #0x30
	0x0344EEAC B 0x2632228
	0x0344EEB0 SUB X31, X31, 0x60
	0x0344EEB4 STP X30, X25, [X31 + 0x20]
	0x0344EEB8 STP X24, X23, [X31 + 0x30]
	0x0344EEBC STP X22, X21, [X31 + 0x40]
	0x0344EEC0 STP X20, X19, [X31 + 0x50]
	0x0344EEC4 ADRP X20, 0xF8F000
	0x0344EEC8 LDRB W8, [X20 + 0x763]
	0x0344EECC MOV X19, X0
	0x0344EED0 TBNZ X8, 0x0, 0x344EF84
	0x0344EED4 ADRP X0, 0xCE1000
	0x0344EED8 LDR X0, [X0 + 0xB28]
	0x0344EEDC BL 0x1C16CF4
	0x0344EEE0 ADRP X0, 0xCE1000
	0x0344EEE4 LDR X0, [X0 + 0xA50]
	0x0344EEE8 BL 0x1C16CF4
	0x0344EEEC ADRP X0, 0xCE1000
	0x0344EEF0 LDR X0, [X0 + 0x630]
	0x0344EEF4 BL 0x1C16CF4
	0x0344EEF8 ADRP X0, 0xCE1000
	0x0344EEFC LDR X0, [X0 + 0xA58]
	0x0344EF00 BL 0x1C16CF4
	0x0344EF04 ADRP X0, 0xCE1000
	0x0344EF08 LDR X0, [X0 + 0xA60]
	0x0344EF0C BL 0x1C16CF4
	0x0344EF10 ADRP X0, 0xCE1000
	0x0344EF14 LDR X0, [X0 + 0x7C8]
	0x0344EF18 BL 0x1C16CF4
	0x0344EF1C ADRP X0, 0xCE1000
	0x0344EF20 LDR X0, [X0 + 0x7D0]
	0x0344EF24 BL 0x1C16CF4
	0x0344EF28 ADRP X0, 0xCE1000
	0x0344EF2C LDR X0, [X0 + 0xA68]
	0x0344EF30 BL 0x1C16CF4
	0x0344EF34 ADRP X0, 0xCE1000
	0x0344EF38 LDR X0, [X0 + 0xA70]
	0x0344EF3C BL 0x1C16CF4
	0x0344EF40 ADRP X0, 0xCE1000
	0x0344EF44 LDR X0, [X0 + 0xA78]
	0x0344EF48 BL 0x1C16CF4
	0x0344EF4C ADRP X0, 0xCE1000
	0x0344EF50 LDR X0, [X0 + 0xA80]
	0x0344EF54 BL 0x1C16CF4
	0x0344EF58 ADRP X0, 0xCE1000
	0x0344EF5C LDR X0, [X0 + 0xA88]
	0x0344EF60 BL 0x1C16CF4
	0x0344EF64 ADRP X0, 0xCE1000
	0x0344EF68 LDR X0, [X0 + 0xB30]
	0x0344EF6C BL 0x1C16CF4
	0x0344EF70 ADRP X0, 0xCE1000
	0x0344EF74 LDR X0, [X0 + 0xB38]
	0x0344EF78 BL 0x1C16CF4
	0x0344EF7C MOVZ W8, 0x1
	0x0344EF80 STRB W8, [X20 + 0x763]
	0x0344EF84 STR X31, [X31 + 0x18]
	0x0344EF88 ADRP X25, 0xCE1000
	0x0344EF8C LDR W8, [X19]
	0x0344EF90 LDR X25, [X25 + 0x630]
	0x0344EF94 CBZ W8, 0x344F100
	0x0344EF98 ADRP X8, 0xCE1000
	0x0344EF9C LDR X8, [X8 + 0xB38]
	0x0344EFA0 LDR X24, [X19 + 0x20]
	0x0344EFA4 LDR X0, [X8]
	0x0344EFA8 BL 0x1C16F10
	0x0344EFAC MOV X22, X0
	0x0344EFB0 MOV X1, X31
	0x0344EFB4 BL 0x344829C
	0x0344EFB8 CBZ X22, 0x344F2C8
	0x0344EFBC LDR X8, [X19 + 0x20]
	0x0344EFC0 STR X8, [X22 + 0x10]
	0x0344EFC4 LDR X8, [X19 + 0x28]
	0x0344EFC8 STR X8, [X22 + 0x18]
	0x0344EFCC LDR X8, [X19 + 0x30]
	0x0344EFD0 STR X8, [X22 + 0x20]
	0x0344EFD4 LDRB W8, [X19 + 0x38]
	0x0344EFD8 STRB W8, [X22 + 0x28]
	0x0344EFDC LDR X8, [X19 + 0x40]
	0x0344EFE0 STR X8, [X22 + 0x30]
	0x0344EFE4 LDR X8, [X19 + 0x48]
	0x0344EFE8 STR X8, [X22 + 0x38]
	0x0344EFEC CBZ X24, 0x344F2CC
	0x0344EFF0 ADRP X8, 0xCE1000
	0x0344EFF4 LDR X8, [X8 + 0xA58]
	0x0344EFF8 LDR X20, [X24 + 0x58]
	0x0344EFFC LDR X0, [X8]
	0x0344F000 BL 0x1C16F10
	0x0344F004 ADRP X8, 0xCE0000
	0x0344F008 LDR X8, [X8 + 0xB30]
	0x0344F00C MOV X21, X0
	0x0344F010 LDR X2, [X8]
	0x0344F014 MOV X1, X22
	0x0344F018 MOV X3, X31
	0x0344F01C BL 0x2D27AA8
	0x0344F020 ADRP X8, 0xCE0000
	0x0344F024 LDR X23, [X19 + 0x50]
	0x0344F028 LDR X8, [X8 + 0x7C8]
	0x0344F02C CBNZ X23, 0x344F034
	0x0344F030 LDR X23, [X24 + 0x18]
	0x0344F034 LDR X24, [X22 + 0x18]
	0x0344F038 LDR X1, [X22 + 0x38]
	0x0344F03C LDR X2, [X8]
	0x0344F040 STP X31, X31, [X31 + 0x8]
	0x0344F044 ADD X0, X31, 0x8
	0x0344F048 BL 0x242E368
	0x0344F04C ADRP X8, 0xCE0000
	0x0344F050 LDR X8, [X8 + 0x7D0]
	0x0344F054 LDR X0, [X8]
	0x0344F058 BL 0x1C16F10
	0x0344F05C LDP X3, X4, [X31 + 0x8]
	0x0344F060 MOV X22, X0
	0x0344F064 MOV X1, X24
	0x0344F068 MOV X2, X23
	0x0344F06C MOV X5, X31
	0x0344F070 BL 0x3478040
	0x0344F074 CBZ X20, 0x344F2D0
	0x0344F078 ADRP X8, 0xCE0000
	0x0344F07C LDR X8, [X8 + 0xA68]
	0x0344F080 LDR X3, [X8]
	0x0344F084 MOV X0, X20
	0x0344F088 MOV X1, X21
	0x0344F08C MOV X2, X22
	0x0344F090 BL 0x2243230
	0x0344F094 CBZ X0, 0x344F2D4
	0x0344F098 ADRP X8, 0xCE0000
	0x0344F09C LDR X8, [X8 + 0xA88]
	0x0344F0A0 LDR X1, [X8]
	0x0344F0A4 BL 0x269F5D0
	0x0344F0A8 ADRP X8, 0xCE0000
	0x0344F0AC LDR X8, [X8 + 0xA80]
	0x0344F0B0 STR X0, [X31 + 0x18]
	0x0344F0B4 LDR X1, [X8]
	0x0344F0B8 ADD X0, X31, 0x18
	0x0344F0BC BL 0x2677430
	0x0344F0C0 TBNZ X0, 0x0, 0x344F114
	0x0344F0C4 STR W31, [X19]
	0x0344F0C8 LDR X8, [X31 + 0x18]
	0x0344F0CC STR X8, [X19 + 0x58]
	0x0344F0D0 LDR X0, [X25]
	0x0344F0D4 LDR W8, [X0 + 0xE0]
	0x0344F0D8 CBNZ W8, 0x344F0E0
	0x0344F0DC BL 0x1C16DFC
	0x0344F0E0 ADRP X8, 0xCE0000
	0x0344F0E4 LDR X8, [X8 + 0xB28]
	0x0344F0E8 ADD X0, X19, 0x8
	0x0344F0EC LDR X3, [X8]
	0x0344F0F0 ADD X1, X31, 0x18
	0x0344F0F4 MOV X2, X19
	0x0344F0F8 BL 0x1FBA5C0
	0x0344F0FC B 0x344F2AC
	0x0344F100 LDR X8, [X19 + 0x58]
	0x0344F104 MOVN W9, 0x0
	0x0344F108 STR X8, [X31 + 0x18]
	0x0344F10C STR X31, [X19 + 0x58]
	0x0344F110 STR W9, [X19]
	0x0344F114 ADRP X8, 0xCE0000
	0x0344F118 LDR X8, [X8 + 0xA78]
	0x0344F11C ADD X0, X31, 0x18
	0x0344F120 LDR X1, [X8]
	0x0344F124 BL 0x2677474
	0x0344F128 MOV X20, X0
	0x0344F12C CBZ X0, 0x344F2C4
	0x0344F130 ADRP X23, 0xCE0000
	0x0344F134 LDR X8, [X20]
	0x0344F138 LDR X23, [X23 + 0xA60]
	0x0344F13C LDRH W9, [X8 + 0x12E]
	0x0344F140 LDR X1, [X23]
	0x0344F144 CBZ X9, 0x344F168
	0x0344F148 LDR X10, [X8 + 0xB0]
	0x0344F14C ADD X10, X10, 0x8
	0x0344F150 LDUR X11, [X10 - 0x8]
	0x0344F154 CMP X11, X1
	0x0344F158 B.EQ 0x344F178
	0x0344F15C SUBS X9, X9, 0x1
	0x0344F160 ADD X10, X10, 0x10
	0x0344F164 B.NE 0x344F150
	0x0344F168 MOVZ W2, 0x2
	0x0344F16C MOV X0, X20
	0x0344F170 BL 0x1C5C788
	0x0344F174 B 0x344F188
	0x0344F178 LDR W9, [X10]
	0x0344F17C ADD W9, W9, 0x2
	0x0344F180 ADD X8, X8, W9, 0x4, SXTW
	0x0344F184 ADD X0, X8, 0x138
	0x0344F188 LDP X8, X1, [X0]
	0x0344F18C MOV X0, X20
	0x0344F190 BLR X8
	0x0344F194 LDR X8, [X20]
	0x0344F198 LDR X1, [X23]
	0x0344F19C MOV X21, X0
	0x0344F1A0 LDRH W9, [X8 + 0x12E]
	0x0344F1A4 CBZ X9, 0x344F1C8
	0x0344F1A8 LDR X10, [X8 + 0xB0]
	0x0344F1AC ADD X10, X10, 0x8
	0x0344F1B0 LDUR X11, [X10 - 0x8]
	0x0344F1B4 CMP X11, X1
	0x0344F1B8 B.EQ 0x344F1D8
	0x0344F1BC SUBS X9, X9, 0x1
	0x0344F1C0 ADD X10, X10, 0x10
	0x0344F1C4 B.NE 0x344F1B0
	0x0344F1C8 MOVZ W2, 0x1
	0x0344F1CC MOV X0, X20
	0x0344F1D0 BL 0x1C5C788
	0x0344F1D4 B 0x344F1E8
	0x0344F1D8 LDR W9, [X10]
	0x0344F1DC ADD W9, W9, 0x1
	0x0344F1E0 ADD X8, X8, W9, 0x4, SXTW
	0x0344F1E4 ADD X0, X8, 0x138
	0x0344F1E8 LDP X8, X1, [X0]
	0x0344F1EC MOV X0, X20
	0x0344F1F0 BLR X8
	0x0344F1F4 LDR X8, [X20]
	0x0344F1F8 LDR X1, [X23]
	0x0344F1FC MOV X22, X0
	0x0344F200 LDRH W9, [X8 + 0x12E]
	0x0344F204 CBZ X9, 0x344F228
	0x0344F208 LDR X10, [X8 + 0xB0]
	0x0344F20C ADD X10, X10, 0x8
	0x0344F210 LDUR X11, [X10 - 0x8]
	0x0344F214 CMP X11, X1
	0x0344F218 B.EQ 0x344F238
	0x0344F21C SUBS X9, X9, 0x1
	0x0344F220 ADD X10, X10, 0x10
	0x0344F224 B.NE 0x344F210
	0x0344F228 MOV X0, X20
	0x0344F22C MOV W2, W31
	0x0344F230 BL 0x1C5C788
	0x0344F234 B 0x344F244
	0x0344F238 LDRSW X9, [X10]
	0x0344F23C ADD X8, X8, X9, 0x4, LSL
	0x0344F240 ADD X0, X8, 0x138
	0x0344F244 LDP X8, X1, [X0]
	0x0344F248 MOV X0, X20
	0x0344F24C BLR X8
	0x0344F250 ADRP X8, 0xCE0000
	0x0344F254 LDR X8, [X8 + 0xA70]
	0x0344F258 MOV W23, W0
	0x0344F25C LDR X0, [X8]
	0x0344F260 BL 0x1C16F10
	0x0344F264 MOV X20, X0
	0x0344F268 AND W3, W23, 0x1
	0x0344F26C MOV X1, X21
	0x0344F270 MOV X2, X22
	0x0344F274 MOV X4, X31
	0x0344F278 BL 0x34684B8
	0x0344F27C MOVN W8, 0x1
	0x0344F280 STR W8, [X19], #0x8
	0x0344F284 LDR X0, [X25]
	0x0344F288 ADRP X21, 0xCE0000
	0x0344F28C LDR W8, [X0 + 0xE0]
	0x0344F290 LDR X21, [X21 + 0xA50]
	0x0344F294 CBNZ W8, 0x344F29C
	0x0344F298 BL 0x1C16DFC
	0x0344F29C LDR X2, [X21]
	0x0344F2A0 MOV X0, X19
	0x0344F2A4 MOV X1, X20
	0x0344F2A8 BL 0x26322B0
	0x0344F2AC LDP X20, X19, [X31 + 0x50]
	0x0344F2B0 LDP X22, X21, [X31 + 0x40]
	0x0344F2B4 LDP X24, X23, [X31 + 0x30]
	0x0344F2B8 LDP X30, X25, [X31 + 0x20]
	0x0344F2BC ADD X31, X31, 0x60
	0x0344F2C0 RET
	0x0344F2C4 BL 0x1C16F20
	0x0344F2C8 BL 0x1C16F20
	0x0344F2CC BL 0x1C16F20
	0x0344F2D0 BL 0x1C16F20
	0x0344F2D4 BL 0x1C16F20
	0x0344F2D8 B 0x344F314
	0x0344F2DC B 0x344F314
	0x0344F2E0 B 0x344F314
	0x0344F2E4 B 0x344F314
	0x0344F2E8 B 0x344F314
	0x0344F2EC B 0x344F314
	0x0344F2F0 B 0x344F314
	0x0344F2F4 B 0x344F314
	0x0344F2F8 B 0x344F314

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0xF90000
	011 Move W8, [X20+1885]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE2000
	018 Move X0, [X0+2784]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE2000
	021 Move X0, [X0+2640]
	022 Call 0x1C17CF4
	023 Move X0, 0xCE2000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move X0, 0xCE2000
	027 Move X0, [X0+2648]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE2000
	030 Move X0, [X0+2656]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE2000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move X0, 0xCE2000
	036 Move X0, [X0+2000]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE2000
	039 Move X0, [X0+2664]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE2000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0xCE2000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0xCE2000
	048 Move X0, [X0+2688]
	049 Call 0x1C17CF4
	050 Move X0, 0xCE2000
	051 Move X0, [X0+2696]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE2000
	054 Move X0, [X0+2792]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE2000
	057 Move X0, [X0+2800]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1885], W8
	061 Move [X31+24], X31
	062 Move X25, 0xCE2000
	063 Move W8, [X19]
	064 Move X25, [X25+1584]
	065 Compare W8, 0
	066 JumpIfEqual {167}
	067 Move X8, 0xCE2000
	068 Move X8, [X8+2800]
	069 Move X24, [X19+32]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X22, X0
	073 Move X1, X31
	074 Call Object..ctor, X0
	075 Compare X22, 0
	076 JumpIfEqual {288}
	077 Move X8, [X19+32]
	078 Move [X22+16], X8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move [X22+24], V0
	081 Move X8, [X19+56]
	082 Move [X22+40], X8
	083 Move W8, [X19+64]
	084 Move [X22+48], W8
	085 Move X8, [X19+72]
	086 Move [X22+56], X8
	087 Move X8, [X19+80]
	088 Move [X22+64], X8
	089 Compare X24, 0
	090 JumpIfEqual {289}
	091 Move X8, 0xCE2000
	092 Move X8, [X8+2648]
	093 Move X20, [X24+88]
	094 Move X0, [X8]
	095 Call 0x1C17F10
	096 Move X8, 0xCE2000
	097 Move X8, [X8+2792]
	098 Move X21, X0
	099 Move X2, [X8]
	100 Move X1, X22
	101 Move X3, X31
	102 Call Func`1<Object>..ctor, X0, X1, X2
	103 Move X8, 0xCE2000
	104 Move X23, [X19+88]
	105 Move X8, [X8+1992]
	106 Compare X23, 0
	107 JumpIfNotEqual {109}
	108 Move X23, [X24+24]
	109 Move X24, [X22+24]
	110 Move X1, [X22+64]
	111 Move X2, [X8]
	112 Move [X31+8], X31
	113 Move [X31+16], X31
	114 Add X0, X31, 8
	115 Call Nullable`1<CancellationToken>..ctor, X0, X1
	116 Move X8, 0xCE2000
	117 Move X8, [X8+2000]
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move X3, [X31+8]
	121 Move X4, [X31+16]
	122 Move X22, X0
	123 Move X1, X24
	124 Move X2, X23
	125 Move X5, X31
	126 Call RetryHistory..ctor, X0, X1, X2, X3
	127 Compare X20, 0
	128 JumpIfEqual {290}
	129 Move X8, 0xCE2000
	130 Move X8, [X8+2664]
	131 Move X3, [X8]
	132 Move X0, X20
	133 Move X1, X21
	134 Move X2, X22
	135 Call 0x2244230, X0, X1, X2
	136 Compare X0, 0
	137 JumpIfEqual {291}
	138 Move X8, 0xCE2000
	139 Move X8, [X8+2696]
	140 Move X1, [X8]
	141 Call Task`1<Object>.GetAwaiter, X0
	142 Move X8, 0xCE2000
	143 Move X8, [X8+2688]
	144 Move [X31+24], X0
	145 Move X1, [X8]
	146 Add X0, X31, 24
	147 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {174}
	152 Move [X19], W31
	153 Move X8, [X31+24]
	154 Move [X19+96], X8
	155 Move X0, [X25]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X8, 0xCE1000
	161 Move X8, [X8+2784]
	162 Add X0, X19, 8
	163 Move X3, [X8]
	164 Add X1, X31, 24
	165 Move X2, X19
	166 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	167 Move X8, [X19+96]
	168 Move TEMP, 0
	169 Not TEMP
	170 Move W9, TEMP
	171 Move [X31+24], X8
	172 Move [X19+96], X31
	173 Move [X19], W9
	174 Move X8, 0xCE1000
	175 Move X8, [X8+2680]
	176 Add X0, X31, 24
	177 Move X1, [X8]
	178 Call TaskAwaiter`1<Object>.GetResult, X0
	179 Move X20, X0
	180 Compare X0, 0
	181 JumpIfEqual {287}
	182 Move X23, 0xCE1000
	183 Move X8, [X20]
	184 Move X23, [X23+2656]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Move X1, [X23]
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move W2, 2
	196 Move X0, X20
	197 Call 0x1C5D788
	198 Move W9, [X10]
	199 Add W9, W9, 2
	200 Add X8, X8, W9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X20
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X8, [X20]
	207 Move X1, [X23]
	208 Move X21, X0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 1
	219 Move X0, X20
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 1
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X20
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X8, [X20]
	230 Move X1, [X23]
	231 Move X22, X0
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move X0, X20
	242 Move W2, W31
	243 Call 0x1C5D788
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Add X8, X8, X9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X1, [X0+8]
	249 Move X0, X20
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move X8, 0xCE1000
	252 Move X8, [X8+2672]
	253 Move W23, W0
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X20, X0
	257 And W3, W23, 1
	258 Move X1, X21
	259 Move X2, X22
	260 Move X4, X31
	261 Call Session..ctor, X0, X1, X2, X3
	262 Move TEMP, 1
	263 Not TEMP
	264 Move W8, TEMP
	265 Move [X19+8], W8
	266 Move X0, [X25]
	267 Move X21, 0xCE1000
	268 Move W8, [X0+224]
	269 Move X21, [X21+2640]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X2, [X21]
	274 Move X0, X19
	275 Move X1, X20
	276 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	277 Move X20, [X31+80]
	278 Move X19, [X31+88]
	279 Move X22, [X31+64]
	280 Move X21, [X31+72]
	281 Move X24, [X31+48]
	282 Move X23, [X31+56]
	283 Move X30, [X31+32]
	284 Move X25, [X31+40]
	285 Add X31, X31, 96
	286 Return 
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Move X20, X0
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X20
	295 Call 0x3EB2AD0
	296 Move X20, X0
	297 Move X0, 0xCA5000
	298 Move X0, [X0+2000]
	299 Call 0x1C17D08
	300 Move X8, [X20]
	301 Move X1, [X8]
	302 Call 0x1C18270
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {327}
	307 Move X20, [X20]
	308 Call 0x3EB2AE0
	309 Move TEMP, 1
	310 Not TEMP
	311 Move W8, TEMP
	312 Move [X19+8], W8
	313 Move X0, 0xCE1000
	314 Move X0, [X0+1584]
	315 Call 0x1C17D08
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move X0, 0xCE1000
	321 Move X0, [X0+2720]
	322 Call 0x1C17D08
	323 Move X2, X0
	324 Move X0, X19
	325 Move X1, X20
	326 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	327 Move W0, 8
	328 Call 0x3EB2AF0
	329 Move X8, [X20]
	330 Move [X0], X8
	331 Move X1, 0xA66000
	332 Add X1, X1, 3672
	333 Move X2, X31
	334 Call 0x3EB2B00
	335 Move X20, X0
	336 Call 0x3EB2AE0
	337 Move X0, X20
	338 Call 0x1D2D690
	339 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0344F2FC B 0x344F314
	0x0344F300 B 0x344F314
	0x0344F304 B 0x344F314
	0x0344F308 B 0x344F314
	0x0344F30C B 0x344F314
	0x0344F310 B 0x344F314
	0x0344F314 MOV X20, X0
	0x0344F318 CMP W1, 0x1
	0x0344F31C B.NE 0x344F3B8
	0x0344F320 MOV X0, X20
	0x0344F324 BL 0x3EB1AD0
	0x0344F328 MOV X20, X0
	0x0344F32C ADRP X0, 0xCA4000
	0x0344F330 LDR X0, [X0 + 0x7D0]
	0x0344F334 BL 0x1C16D08
	0x0344F338 LDR X8, [X20]
	0x0344F33C LDR X1, [X8]
	0x0344F340 BL 0x1C17270
	0x0344F344 TBZ X0, 0x0, 0x344F390
	0x0344F348 LDR X20, [X20]
	0x0344F34C BL 0x3EB1AE0
	0x0344F350 MOVN W8, 0x1
	0x0344F354 STR W8, [X19], #0x8
	0x0344F358 ADRP X0, 0xCE0000
	0x0344F35C LDR X0, [X0 + 0x630]
	0x0344F360 BL 0x1C16D08
	0x0344F364 LDR W8, [X0 + 0xE0]
	0x0344F368 CBNZ W8, 0x344F370
	0x0344F36C BL 0x1C16DFC
	0x0344F370 ADRP X0, 0xCE0000
	0x0344F374 LDR X0, [X0 + 0xAA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF8F000
	007 Move X21, 0xCE1000
	008 Move W8, [X22+1886]
	009 Move X21, [X21+1584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCE1000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0xCE1000
	020 Move X0, [X0+1584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1886], W8
	024 Move X0, [X21]
	025 Move X21, 0xCE1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2728]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

