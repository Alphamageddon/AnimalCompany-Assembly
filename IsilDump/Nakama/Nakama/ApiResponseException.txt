Type: Nakama.ApiResponseException

Method: System.Int64 get_StatusCode()

Disassembly:
	0x03401254 LDR X25, [X25 + 0xD48]
	0x03401258 LDR X26, [X26 + 0xD50]

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Int32 get_GrpcStatusCode()

Disassembly:
	0x0340125C LDR X24, [X24 + 0xD58]
	0x03401260 LDR X23, [X23 + 0xD60]

ISIL:
	001 Move W0, [X0+152]
	002 Return X0

Method: System.Void .ctor(System.Int64 statusCode, System.String content, System.Int32 grpcCode)

Disassembly:
	0x03401264 LDR X21, [X21 + 0x9D0]
	0x03401268 MOV X19, X0
	0x0340126C TBNZ X8, 0x0, 0x3401308
	0x03401270 ADRP X0, 0xCF2000
	0x03401274 LDR X0, [X0 + 0x9D0]
	0x03401278 BL 0x1C16CF4
	0x0340127C ADRP X0, 0xD2C000
	0x03401280 LDR X0, [X0 + 0xD40]
	0x03401284 BL 0x1C16CF4
	0x03401288 ADRP X0, 0xD2C000
	0x0340128C LDR X0, [X0 + 0xD68]
	0x03401290 BL 0x1C16CF4
	0x03401294 ADRP X0, 0xD2C000
	0x03401298 LDR X0, [X0 + 0xCF0]
	0x0340129C BL 0x1C16CF4
	0x034012A0 ADRP X0, 0xCF2000
	0x034012A4 LDR X0, [X0 + 0x838]
	0x034012A8 BL 0x1C16CF4
	0x034012AC ADRP X0, 0xD2C000
	0x034012B0 LDR X0, [X0 + 0xD70]
	0x034012B4 BL 0x1C16CF4
	0x034012B8 ADRP X0, 0xD2C000
	0x034012BC LDR X0, [X0 + 0xD50]
	0x034012C0 BL 0x1C16CF4
	0x034012C4 ADRP X0, 0xD2C000
	0x034012C8 LDR X0, [X0 + 0xD48]
	0x034012CC BL 0x1C16CF4
	0x034012D0 ADRP X0, 0xCF2000
	0x034012D4 LDR X0, [X0 + 0x988]
	0x034012D8 BL 0x1C16CF4
	0x034012DC ADRP X0, 0xD2C000
	0x034012E0 LDR X0, [X0 + 0xD58]
	0x034012E4 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xFDD000
	009 Move X24, 0xCF3000
	010 Move W8, [X23+1285]
	011 Move X24, [X24+2000]
	012 Move W19, W3
	013 Move X22, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xCF3000
	021 Move X0, [X0+2000]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1285], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X22
	032 Move X2, X31
	033 Call Exception..ctor, X0, X1
	034 Move [X20+144], X21
	035 Move [X20+152], W19
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X30, [X31+64]
	043 Return 

Method: System.Void .ctor(System.String message, System.Exception e)

Disassembly:
	0x034012E8 ADRP X0, 0xD2C000
	0x034012EC LDR X0, [X0 + 0xD38]
	0x034012F0 BL 0x1C16CF4
	0x034012F4 ADRP X0, 0xD2C000
	0x034012F8 LDR X0, [X0 + 0xD60]
	0x034012FC BL 0x1C16CF4
	0x03401300 MOVZ W8, 0x1
	0x03401304 STRB W8, [X28 + 0x50E]
	0x03401308 LDR X0, [X29]
	0x0340130C LDR X2, [X19 + 0x10]
	0x03401310 LDR X1, [X20]
	0x03401314 LDR X3, [X22]
	0x03401318 MOV X4, X31
	0x0340131C BL 0x32277C4
	0x03401320 MOV X20, X0
	0x03401324 MOV X0, X19
	0x03401328 BL 0x3401120
	0x0340132C LDR X8, [X22]
	0x03401330 LDR X2, [X27]
	0x03401334 MOV X1, X0
	0x03401338 MOV X0, X8
	0x0340133C BL 0x226B7E8
	0x03401340 LDR X1, [X25]
	0x03401344 LDR X3, [X26]
	0x03401348 MOV X2, X0
	0x0340134C MOV X0, X20
	0x03401350 MOV X4, X31
	0x03401354 BL 0x32277C4
	0x03401358 LDR X2, [X19 + 0x20]
	0x0340135C LDR X1, [X24]
	0x03401360 LDR X3, [X22]
	0x03401364 MOV X4, X31
	0x03401368 BL 0x32277C4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xFDD000
	008 Move X23, 0xCF3000
	009 Move W8, [X22+1286]
	010 Move X23, [X23+2000]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xCF3000
	019 Move X0, [X0+2000]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1286], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X21
	030 Move X2, X20
	031 Move X3, X31
	032 Call Exception..ctor, X0, X1, X2
	033 Move TEMP, 0
	034 Not TEMP
	035 Move X8, TEMP
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W9, TEMP
	039 Move [X19+144], X8
	040 Move [X19+152], W9
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return 

Method: System.Void .ctor(System.String content)

Disassembly:
	0x0340136C LDR X2, [X19 + 0x28]
	0x03401370 LDR X1, [X23]
	0x03401374 LDR X3, [X22]
	0x03401378 MOV X4, X31

ISIL:
	001 Move X2, X1
	002 Move TEMP, 0
	003 Not TEMP
	004 Move X1, TEMP
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W3, TEMP
	008 Call ApiResponseException..ctor, X0, X1, X2, X3
	009 Return 

Method: System.String ToString()

Disassembly:
	0x0340137C BL 0x32277C4
	0x03401380 LDR X8, [X21]
	0x03401384 MOV X21, X0
	0x03401388 MOVZ W1, 0x4
	0x0340138C MOV X0, X8
	0x03401390 BL 0x1C16D6C
	0x03401394 CBZ X0, 0x34014B8
	0x03401398 MOV X20, X0
	0x0340139C CBZ X21, 0x34013B4
	0x034013A0 LDR X8, [X20]
	0x034013A4 MOV X0, X21
	0x034013A8 LDR X1, [X8 + 0x40]
	0x034013AC BL 0x1C16E00
	0x034013B0 CBZ X0, 0x34014AC
	0x034013B4 LDR W8, [X20 + 0x18]
	0x034013B8 CBZ W8, 0x34014A8
	0x034013BC ADRP X23, 0xD2C000
	0x034013C0 LDR X23, [X23 + 0xCF0]
	0x034013C4 STR X21, [X20 + 0x20]
	0x034013C8 LDR X0, [X23]
	0x034013CC CBZ X0, 0x34013E4
	0x034013D0 LDR X8, [X20]
	0x034013D4 LDR X1, [X8 + 0x40]
	0x034013D8 BL 0x1C16E00
	0x034013DC CBZ X0, 0x34014AC
	0x034013E0 LDR W8, [X20 + 0x18]
	0x034013E4 CMP W8, 0x1
	0x034013E8 B.LS 0x34014A8
	0x034013EC LDR X9, [X23]
	0x034013F0 STR X9, [X20 + 0x28]
	0x034013F4 LDR X21, [X19 + 0x30]
	0x034013F8 CBZ X21, 0x3401414
	0x034013FC LDR X8, [X20]
	0x03401400 MOV X0, X21
	0x03401404 LDR X1, [X8 + 0x40]
	0x03401408 BL 0x1C16E00
	0x0340140C CBZ X0, 0x34014AC
	0x03401410 LDR W8, [X20 + 0x18]
	0x03401414 CMP W8, 0x2
	0x03401418 B.LS 0x34014A8
	0x0340141C STR X21, [X20 + 0x30]
	0x03401420 LDR X0, [X22]
	0x03401424 CBZ X0, 0x340143C
	0x03401428 LDR X8, [X20]
	0x0340142C LDR X1, [X8 + 0x40]
	0x03401430 BL 0x1C16E00
	0x03401434 CBZ X0, 0x34014AC
	0x03401438 LDR W8, [X20 + 0x18]
	0x0340143C CMP W8, 0x3
	0x03401440 B.LS 0x34014A8
	0x03401444 LDR X8, [X22]
	0x03401448 ADRP X21, 0xD2C000
	0x0340144C ADRP X23, 0xD2C000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xFDD000
	009 Move X20, 0xCF5000
	010 Move X23, 0xCF3000
	011 Move X22, 0xD2D000
	012 Move W8, [X21+1287]
	013 Move X20, [X20+2656]
	014 Move X23, [X23+1880]
	015 Move X22, [X22+3264]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xCF3000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xCF5000
	025 Move X0, [X0+2656]
	026 Call 0x1C17CF4
	027 Move X0, 0xD2D000
	028 Move X0, [X0+3264]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1287], W8
	032 Move X8, [X19+144]
	033 Move X0, [X20]
	034 Add X1, X31, 8
	035 Move [X31+8], X8
	036 Call 0x1C17E04
	037 Move X8, [X19]
	038 Move X20, X0
	039 Move X0, X19
	040 Move X9, [X8+392]
	041 Move X1, [X8+400]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X21, X0
	044 Move W8, [X19+152]
	045 Move X0, [X23]
	046 Add X1, X31, 4
	047 Move [X31+4], W8
	048 Call 0x1C17E04
	049 Move X8, [X22]
	050 Move X3, X0
	051 Move X1, X20
	052 Move X2, X21
	053 Move X0, X8
	054 Move X4, X31
	055 Call String.Format, X0, X1, X2, X3
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X30, [X31+16]
	061 Move X23, [X31+24]
	062 Add X31, X31, 64
	063 Return X0

