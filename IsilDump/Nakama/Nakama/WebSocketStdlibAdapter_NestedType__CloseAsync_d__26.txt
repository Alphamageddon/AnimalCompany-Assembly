Type: Nakama.WebSocketStdlibAdapter/<CloseAsync>d__26

Method: System.Void MoveNext()

Disassembly:
	0x0348891C MOV X0, X23
	0x03488920 MOV X2, X31
	0x03488924 AND W22, W22, 0xFFFF
	0x03488928 BL 0x3233D30
	0x0348892C CMP W22, 0x22
	0x03488930 B.EQ 0x3488948
	0x03488934 LDR W8, [X19 + 0x10]
	0x03488938 MOV W22, W21
	0x0348893C ADD W21, W21, 0x1
	0x03488940 B 0x3488850
	0x03488944 SUB W21, W8, 0x1
	0x03488948 MOV W0, W21
	0x0348894C LDP X20, X19, [X31 + 0x30]
	0x03488950 LDP X22, X21, [X31 + 0x20]
	0x03488954 LDP X24, X23, [X31 + 0x10]
	0x03488958 LDR X30, [X31], #0x40
	0x0348895C RET
	0x03488960 BL 0x1C16F20
	0x03488964 STP X30, X25, [X31 - 0x40]!
	0x03488968 STP X24, X23, [X31 + 0x10]
	0x0348896C STP X22, X21, [X31 + 0x20]
	0x03488970 STP X20, X19, [X31 + 0x30]
	0x03488974 ADRP X20, 0xF55000
	0x03488978 ADRP X23, 0xC93000
	0x0348897C LDRB W8, [X20 + 0x906]
	0x03488980 LDR X23, [X23 + 0xFF8]
	0x03488984 MOV X19, X0
	0x03488988 TBNZ X8, 0x0, 0x34889E8
	0x0348898C ADRP X0, 0xC93000
	0x03488990 LDR X0, [X0 + 0xFF8]
	0x03488994 BL 0x1C16CF4
	0x03488998 ADRP X0, 0xC6C000
	0x0348899C LDR X0, [X0 + 0x1B8]
	0x034889A0 BL 0x1C16CF4
	0x034889A4 ADRP X0, 0xC93000
	0x034889A8 LDR X0, [X0 + 0xB78]
	0x034889AC BL 0x1C16CF4
	0x034889B0 ADRP X0, 0xC6C000
	0x034889B4 LDR X0, [X0 + 0x1C0]
	0x034889B8 BL 0x1C16CF4
	0x034889BC ADRP X0, 0xC6C000
	0x034889C0 LDR X0, [X0 + 0x1D0]
	0x034889C4 BL 0x1C16CF4
	0x034889C8 ADRP X0, 0xCA9000
	0x034889CC LDR X0, [X0 + 0x208]
	0x034889D0 BL 0x1C16CF4
	0x034889D4 ADRP X0, 0xCA9000
	0x034889D8 LDR X0, [X0 + 0x210]
	0x034889DC BL 0x1C16CF4
	0x034889E0 MOVZ W8, 0x1
	0x034889E4 STRB W8, [X20 + 0x906]
	0x034889E8 LDR X0, [X23]
	0x034889EC BL 0x1C16D0C
	0x034889F0 LDR X8, [X0]
	0x034889F4 CBZ X8, 0x3488D28
	0x034889F8 LDR W8, [X8 + 0x18]
	0x034889FC CMP W8, 0x0
	0x03488A00 B.LE 0x3488A30
	0x03488A04 LDR X0, [X23]
	0x03488A08 BL 0x1C16D0C
	0x03488A0C LDR X0, [X0]
	0x03488A10 CBZ X0, 0x3488D28
	0x03488A14 ADRP X8, 0xCA9000
	0x03488A18 LDR X8, [X8 + 0x208]
	0x03488A1C LDR X1, [X8]
	0x03488A20 BL 0x26022C0
	0x03488A24 MOV X20, X0
	0x03488A28 CBNZ X20, 0x3488A58
	0x03488A2C B 0x3488D28
	0x03488A30 ADRP X8, 0xC6C000
	0x03488A34 LDR X8, [X8 + 0x1D0]
	0x03488A38 LDR X0, [X8]
	0x03488A3C BL 0x1C16F10
	0x03488A40 ADRP X8, 0xC6C000
	0x03488A44 LDR X8, [X8 + 0x1C0]
	0x03488A48 MOV X20, X0
	0x03488A4C LDR X1, [X8]
	0x03488A50 BL 0x301B7C4
	0x03488A54 CBZ X20, 0x3488D28
	0x03488A58 LDP W2, W8, [X20 + 0x18]
	0x03488A5C ADD W8, W8, 0x1
	0x03488A60 CMP W2, 0x1
	0x03488A64 STP W31, W8, [X20 + 0x18]
	0x03488A68 B.LT 0x3488A7C
	0x03488A6C LDR X0, [X20 + 0x10]
	0x03488A70 MOV W1, W31
	0x03488A74 MOV X3, X31
	0x03488A78 BL 0x339FA34
	0x03488A7C CBZ X19, 0x3488D28
	0x03488A80 LDR W8, [X19 + 0x10]
	0x03488A84 CMP W8, 0x2
	0x03488A88 B.EQ 0x3488D10
	0x03488A8C LDR X0, [X23]
	0x03488A90 BL 0x1C16D0C
	0x03488A94 LDR X0, [X0 + 0x8]
	0x03488A98 CBZ X0, 0x3488D28
	0x03488A9C MOV W1, W31
	0x03488AA0 MOV X2, X31
	0x03488AA4 BL 0x3232ADC
	0x03488AA8 LDR W8, [X19 + 0x10]
	0x03488AAC SUB W8, W8, 0x1
	0x03488AB0 CMP W8, 0x2
	0x03488AB4 B.LT 0x3488C98
	0x03488AB8 ADRP X24, 0xC6C000
	0x03488ABC LDR X24, [X24 + 0x1B8]
	0x03488AC0 MOV W25, W31
	0x03488AC4 MOVZ W21, 0x1
	0x03488AC8 MOV X0, X19
	0x03488ACC MOV W1, W21
	0x03488AD0 MOV X2, X31
	0x03488AD4 BL 0x3222A1C
	0x03488AD8 AND W8, W0, 0xFFFF
	0x03488ADC CMP W8, 0x5B
	0x03488AE0 B.EQ 0x3488B00
	0x03488AE4 MOV X0, X19
	0x03488AE8 MOV W1, W21
	0x03488AEC MOV X2, X31
	0x03488AF0 BL 0x3222A1C
	0x03488AF4 AND W8, W0, 0xFFFF
	0x03488AF8 CMP W8, 0x7B
	0x03488AFC B.NE 0x3488B08
	0x03488B00 ADD W25, W25, 0x1
	0x03488B04 B 0x3488B44
	0x03488B08 MOV X0, X19
	0x03488B0C MOV W1, W21
	0x03488B10 MOV X2, X31
	0x03488B14 BL 0x3222A1C
	0x03488B18 AND W8, W0, 0xFFFF
	0x03488B1C CMP W8, 0x5D
	0x03488B20 B.EQ 0x3488B40
	0x03488B24 MOV X0, X19
	0x03488B28 MOV W1, W21
	0x03488B2C MOV X2, X31
	0x03488B30 BL 0x3222A1C
	0x03488B34 AND W8, W0, 0xFFFF
	0x03488B38 CMP W8, 0x7D
	0x03488B3C B.NE 0x3488B8C
	0x03488B40 SUB W25, W25, 0x1
	0x03488B44 LDR X0, [X23]
	0x03488B48 BL 0x1C16D0C
	0x03488B4C LDR X22, [X0 + 0x8]
	0x03488B50 MOV X0, X19
	0x03488B54 MOV W1, W21
	0x03488B58 MOV X2, X31
	0x03488B5C BL 0x3222A1C
	0x03488B60 CBZ X22, 0x3488D28
	0x03488B64 MOV W1, W0
	0x03488B68 MOV X0, X22
	0x03488B6C MOV X2, X31
	0x03488B70 BL 0x3233D30
	0x03488B74 LDR W8, [X19 + 0x10]
	0x03488B78 ADD W21, W21, 0x1
	0x03488B7C SUB W8, W8, 0x1
	0x03488B80 CMP W21, W8
	0x03488B84 B.LT 0x3488AC8
	0x03488B88 B 0x3488C98
	0x03488B8C MOV X0, X19
	0x03488B90 MOV W1, W21
	0x03488B94 MOV X2, X31
	0x03488B98 BL 0x3222A1C
	0x03488B9C AND W8, W0, 0xFFFF
	0x03488BA0 CMP W8, 0x22
	0x03488BA4 B.NE 0x3488BC0
	0x03488BA8 MOVZ W0, 0x1
	0x03488BAC MOV W1, W21
	0x03488BB0 MOV X2, X19
	0x03488BB4 BL 0x34887D0
	0x03488BB8 MOV W21, W0
	0x03488BBC B 0x3488B74
	0x03488BC0 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF56000
	007 Move W8, [X20+2303]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xCAA000
	014 Move X0, [X0+496]
	015 Call 0x1C17CF4
	016 Move X0, 0xC6F000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move X0, 0xC74000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0xC6C000
	023 Move X0, [X0+2440]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2303], W8
	027 Move [X31+8], X31
	028 Move X21, 0xC6F000
	029 Move W8, [X19]
	030 Move X22, [X19+32]
	031 Move X21, [X21+640]
	032 Compare W8, 0
	033 JumpIfEqual {93}
	034 Compare X22, 0
	035 JumpIfEqual {137}
	036 Move X0, [X22+64]
	037 Compare X0, 0
	038 JumpIfEqual {106}
	039 Move X8, [X0]
	040 Move X9, [X8+440]
	041 Move X1, [X8+448]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X22+64]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0xC74000
	046 Move X8, [X8+2008]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call CancellationToken.get_None
	054 Compare X20, 0
	055 JumpIfEqual {140}
	056 Move X9, 0xC6C000
	057 Move X8, [X20]
	058 Move X9, [X9+2440]
	059 Move X3, X0
	060 Move X2, [X9]
	061 Move X9, [X8+472]
	062 Move X4, [X8+480]
	063 Move W1, 1000
	064 Move X0, X20
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X0, 0
	067 JumpIfEqual {141}
	068 Move X1, X31
	069 Call Task.GetAwaiter, X0
	070 Move [X31+8], X0
	071 Add X0, X31, 8
	072 Move X1, X31
	073 Call TaskAwaiter.get_IsCompleted, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {100}
	078 Move [X19], W31
	079 Move X8, [X31+8]
	080 Move [X19+40], X8
	081 Move X0, [X21]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X8, 0xCAA000
	087 Move X8, [X8+496]
	088 Add X0, X19, 8
	089 Move X3, [X8]
	090 Add X1, X31, 8
	091 Move X2, X19
	092 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	093 Move X8, [X19+40]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+8], X8
	098 Move [X19+40], X31
	099 Move [X19], W9
	100 Add X0, X31, 8
	101 Move X1, X31
	102 Call TaskAwaiter.GetResult, X0
	103 Compare X22, 0
	104 JumpIfEqual {138}
	105 Move [X22+64], X31
	106 Move TEMP, 1
	107 Not TEMP
	108 Move W8, TEMP
	109 Move [X19+8], W8
	110 Move X0, [X21]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X19
	116 Move X1, X31
	117 Call AsyncTaskMethodBuilder.SetResult, X0
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X30, [X31+48]
	123 Return 
	124 Compare X20, 0
	125 JumpIfEqual {139}
	126 Move X8, [X20]
	127 Move X9, [X8+440]
	128 Move X1, [X8+448]
	129 Move X0, X20
	130 NotImplemented "Instruction BLR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, [X22+48]
	133 Compare X0, 0
	134 JumpIfEqual {105}
	135 Move X1, X31
	136 Call CancellationTokenSource.Cancel, X0
	137 Call 0x1C17F20
	138 Call 0x1C17F20
	139 Call 0x1C17F20
	140 Call 0x1C17F20
	141 Call 0x1C17F20
	142 Move X20, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X20
	145 Call 0x3EB2AD0
	146 Move X20, X0
	147 Move X0, 0xC6C000
	148 Move X0, [X0+2000]
	149 Call 0x1C17D08
	150 Move X8, [X20]
	151 Move X1, [X8]
	152 Call 0x1C18270
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {174}
	157 Move X20, [X20]
	158 Call 0x3EB2AE0
	159 Move TEMP, 1
	160 Not TEMP
	161 Move W8, TEMP
	162 Move [X19+8], W8
	163 Move X0, 0xC6F000
	164 Move X0, [X0+640]
	165 Call 0x1C17D08
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, X19
	171 Move X1, X20
	172 Move X2, X31
	173 Call AsyncTaskMethodBuilder.SetException, X0, X1
	174 Move W0, 8
	175 Call 0x3EB2AF0
	176 Move X8, [X20]
	177 Move [X0], X8
	178 Move X1, 0xA2D000
	179 Add X1, X1, 3672
	180 Move X2, X31
	181 Call 0x3EB2B00
	182 Move X20, X0
	183 Call 0x3EB2AE0
	184 Move X0, X20
	185 Call 0x1D2D690
	186 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03488BC4 MOV W1, W21
	0x03488BC8 MOV X2, X31
	0x03488BCC BL 0x3222A1C
	0x03488BD0 AND W8, W0, 0xFFFF
	0x03488BD4 CMP W8, 0x2C
	0x03488BD8 B.NE 0x3488BE4
	0x03488BDC CBNZ W25, 0x3488B44
	0x03488BE0 B 0x3488C04
	0x03488BE4 MOV X0, X19
	0x03488BE8 MOV W1, W21
	0x03488BEC MOV X2, X31
	0x03488BF0 BL 0x3222A1C
	0x03488BF4 CBNZ W25, 0x3488B44
	0x03488BF8 AND W8, W0, 0xFFFF
	0x03488BFC CMP W8, 0x3A
	0x03488C00 B.NE 0x3488B44
	0x03488C04 LDR X0, [X23]
	0x03488C08 BL 0x1C16D0C
	0x03488C0C LDR X0, [X0 + 0x8]
	0x03488C10 CBZ X0, 0x3488D28
	0x03488C14 LDR X8, [X0]
	0x03488C18 LDP X9, X1, [X8 + 0x168]
	0x03488C1C BLR X9
	0x03488C20 LDR W10, [X20 + 0x1C]
	0x03488C24 LDR X8, [X20 + 0x10]
	0x03488C28 LDR X9, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF56000
	007 Move X22, 0xC6F000
	008 Move W8, [X21+2304]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC6F000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2304], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

