Type: Nakama.ApiAccountSteam

Method: System.String get_Token()

Disassembly:
	0x03405094 CMP W8, 0x2
	0x03405098 B.LS 0x34050F0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Token(System.String value)

Disassembly:
	0x0340509C STR X19, [X20 + 0x30]
	0x034050A0 LDR X0, [X22]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x034050A4 CBZ X0, 0x34050BC
	0x034050A8 LDR X8, [X20]
	0x034050AC LDR X1, [X8 + 0x40]
	0x034050B0 BL 0x1C16E00
	0x034050B4 CBZ X0, 0x34050F4
	0x034050B8 LDR W8, [X20 + 0x18]
	0x034050BC CMP W8, 0x3
	0x034050C0 B.LS 0x34050F0
	0x034050C4 LDR X8, [X22]
	0x034050C8 MOV X0, X20
	0x034050CC MOV X1, X31
	0x034050D0 STR X8, [X20 + 0x38]
	0x034050D4 BL 0x3227578
	0x034050D8 LDP X20, X19, [X31 + 0x40]
	0x034050DC LDP X22, X21, [X31 + 0x30]
	0x034050E0 LDP X24, X23, [X31 + 0x20]
	0x034050E4 LDP X26, X25, [X31 + 0x10]
	0x034050E8 LDR X30, [X31], #0x50
	0x034050EC RET
	0x034050F0 BL 0x1C16F28
	0x034050F4 BL 0x1C16F44
	0x034050F8 MOV X1, X31
	0x034050FC BL 0x1C16DEC
	0x03405100 BL 0x1C16F20
	0x03405104 MOV X1, X31
	0x03405108 B 0x33BDD8C
	0x0340510C LDR X0, [X0 + 0x10]
	0x03405110 RET
	0x03405114 STR X1, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD9000
	005 Move W8, [X20+1311]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCF0000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCF0000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1311], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCF0000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCF0000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x03405118 RET
	0x0340511C LDR X0, [X0 + 0x18]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03405120 RET
	0x03405124 STR X1, [X0 + 0x18]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03405128 RET
	0x0340512C LDR X0, [X0 + 0x20]
	0x03405130 RET
	0x03405134 STR X1, [X0 + 0x20]
	0x03405138 RET
	0x0340513C STP X30, X25, [X31 - 0x40]!
	0x03405140 STP X24, X23, [X31 + 0x10]
	0x03405144 STP X22, X21, [X31 + 0x20]
	0x03405148 STP X20, X19, [X31 + 0x30]
	0x0340514C ADRP X25, 0xFD8000
	0x03405150 ADRP X23, 0xCEE000
	0x03405154 ADRP X24, 0xD28000
	0x03405158 ADRP X20, 0xCEE000
	0x0340515C ADRP X22, 0xD28000
	0x03405160 ADRP X21, 0xD28000
	0x03405164 LDRB W8, [X25 + 0x525]
	0x03405168 LDR X23, [X23 + 0x988]
	0x0340516C LDR X24, [X24 + 0xE78]
	0x03405170 LDR X20, [X20 + 0x838]
	0x03405174 LDR X22, [X22 + 0xE80]
	0x03405178 LDR X21, [X21 + 0xE88]
	0x0340517C MOV X19, X0
	0x03405180 TBNZ X8, 0x0, 0x34051C8
	0x03405184 ADRP X0, 0xD28000
	0x03405188 LDR X0, [X0 + 0xE80]
	0x0340518C BL 0x1C16CF4
	0x03405190 ADRP X0, 0xCEE000
	0x03405194 LDR X0, [X0 + 0x838]
	0x03405198 BL 0x1C16CF4
	0x0340519C ADRP X0, 0xD28000
	0x034051A0 LDR X0, [X0 + 0xE88]
	0x034051A4 BL 0x1C16CF4
	0x034051A8 ADRP X0, 0xCEE000
	0x034051AC LDR X0, [X0 + 0x988]
	0x034051B0 BL 0x1C16CF4
	0x034051B4 ADRP X0, 0xD28000
	0x034051B8 LDR X0, [X0 + 0xE78]
	0x034051BC BL 0x1C16CF4
	0x034051C0 MOVZ W8, 0x1
	0x034051C4 STRB W8, [X25 + 0x525]
	0x034051C8 LDR X2, [X19 + 0x10]
	0x034051CC LDR X0, [X23]
	0x034051D0 LDR X1, [X24]
	0x034051D4 LDR X3, [X20]
	0x034051D8 MOV X4, X31
	0x034051DC BL 0x32277C4
	0x034051E0 LDR X2, [X19 + 0x18]
	0x034051E4 LDR X1, [X22]
	0x034051E8 LDR X3, [X20]
	0x034051EC MOV X4, X31
	0x034051F0 BL 0x32277C4
	0x034051F4 LDR X2, [X19 + 0x20]
	0x034051F8 LDR X1, [X21]
	0x034051FC LDR X3, [X20]
	0x03405200 LDP X20, X19, [X31 + 0x30]
	0x03405204 LDP X22, X21, [X31 + 0x20]
	0x03405208 LDP X24, X23, [X31 + 0x10]
	0x0340520C MOV X4, X31
	0x03405210 LDP X30, X25, [X31], #0x40
	0x03405214 B 0x32277C4
	0x03405218 MOV X1, X31
	0x0340521C B 0x33BDD8C
	0x03405220 STR X30, [X31 - 0x20]!
	0x03405224 STP X20, X19, [X31 + 0x10]
	0x03405228 ADRP X20, 0xFD8000
	0x0340522C LDRB W8, [X20 + 0x526]
	0x03405230 MOV X19, X0
	0x03405234 TBNZ X8, 0x0, 0x3405258
	0x03405238 ADRP X0, 0xD28000
	0x0340523C LDR X0, [X0 + 0xE90]
	0x03405240 BL 0x1C16CF4
	0x03405244 ADRP X0, 0xD28000
	0x03405248 LDR X0, [X0 + 0xE98]
	0x0340524C BL 0x1C16CF4
	0x03405250 MOVZ W8, 0x1
	0x03405254 STRB W8, [X20 + 0x526]
	0x03405258 LDR X19, [X19 + 0x10]
	0x0340525C CBNZ X19, 0x3405288
	0x03405260 ADRP X8, 0xD28000
	0x03405264 LDR X8, [X8 + 0xE98]
	0x03405268 LDR X0, [X8]
	0x0340526C BL 0x1C16F10
	0x03405270 ADRP X8, 0xD28000
	0x03405274 LDR X8, [X8 + 0xE90]
	0x03405278 MOV W1, W31
	0x0340527C MOV X19, X0
	0x03405280 LDR X2, [X8]
	0x03405284 BL 0x301B830
	0x03405288 MOV X0, X19
	0x0340528C LDP X20, X19, [X31 + 0x10]
	0x03405290 LDR X30, [X31], #0x20
	0x03405294 RET
	0x03405298 LDR X0, [X0 + 0x10]
	0x0340529C RET
	0x034052A0 STR X1, [X0 + 0x10]
	0x034052A4 RET
	0x034052A8 STP X30, X25, [X31 - 0x40]!
	0x034052AC STP X24, X23, [X31 + 0x10]
	0x034052B0 STP X22, X21, [X31 + 0x20]
	0x034052B4 STP X20, X19, [X31 + 0x30]
	0x034052B8 ADRP X25, 0xFD8000
	0x034052BC ADRP X23, 0xCEE000
	0x034052C0 ADRP X24, 0xD28000
	0x034052C4 ADRP X20, 0xCEE000
	0x034052C8 ADRP X21, 0xD28000
	0x034052CC ADRP X22, 0xD28000
	0x034052D0 LDRB W8, [X25 + 0x527]
	0x034052D4 LDR X23, [X23 + 0x838]
	0x034052D8 LDR X24, [X24 + 0xEA0]
	0x034052DC LDR X20, [X20 + 0x988]
	0x034052E0 LDR X21, [X21 + 0xEA8]
	0x034052E4 LDR X22, [X22 + 0xD50]
	0x034052E8 MOV X19, X0
	0x034052EC TBNZ X8, 0x0, 0x3405334
	0x034052F0 ADRP X0, 0xD28000
	0x034052F4 LDR X0, [X0 + 0xEA0]
	0x034052F8 BL 0x1C16CF4
	0x034052FC ADRP X0, 0xCEE000
	0x03405300 LDR X0, [X0 + 0x838]
	0x03405304 BL 0x1C16CF4
	0x03405308 ADRP X0, 0xD28000
	0x0340530C LDR X0, [X0 + 0xD50]
	0x03405310 BL 0x1C16CF4
	0x03405314 ADRP X0, 0xD28000
	0x03405318 LDR X0, [X0 + 0xEA8]
	0x0340531C BL 0x1C16CF4
	0x03405320 ADRP X0, 0xCEE000
	0x03405324 LDR X0, [X0 + 0x988]
	0x03405328 BL 0x1C16CF4
	0x0340532C MOVZ W8, 0x1
	0x03405330 STRB W8, [X25 + 0x527]
	0x03405334 MOV X0, X19
	0x03405338 BL 0x3405220
	0x0340533C LDR X8, [X23]
	0x03405340 LDR X2, [X24]
	0x03405344 MOV X1, X0
	0x03405348 MOV X0, X8
	0x0340534C BL 0x226B7E8
	0x03405350 LDR X8, [X20]
	0x03405354 LDR X1, [X21]
	0x03405358 LDR X3, [X22]
	0x0340535C LDP X20, X19, [X31 + 0x30]
	0x03405360 LDP X22, X21, [X31 + 0x20]
	0x03405364 LDP X24, X23, [X31 + 0x10]
	0x03405368 MOV X2, X0
	0x0340536C MOV X0, X8
	0x03405370 MOV X4, X31
	0x03405374 LDP X30, X25, [X31], #0x40
	0x03405378 B 0x32277C4
	0x0340537C MOV X1, X31
	0x03405380 B 0x33BDD8C
	0x03405384 LDRB W0, [X0 + 0x10]
	0x03405388 RET
	0x0340538C AND W8, W1, 0x1
	0x03405390 STRB W8, [X0 + 0x10]
	0x03405394 RET
	0x03405398 LDR X0, [X0 + 0x18]
	0x0340539C RET
	0x034053A0 STR X1, [X0 + 0x18]
	0x034053A4 RET
	0x034053A8 STR X30, [X31 - 0x20]!
	0x034053AC STP X20, X19, [X31 + 0x10]
	0x034053B0 ADRP X20, 0xFD8000
	0x034053B4 LDRB W8, [X20 + 0x528]
	0x034053B8 MOV X19, X0
	0x034053BC TBNZ X8, 0x0, 0x34053E0
	0x034053C0 ADRP X0, 0xCEF000
	0x034053C4 LDR X0, [X0 + 0x6C0]
	0x034053C8 BL 0x1C16CF4
	0x034053CC ADRP X0, 0xCEF000
	0x034053D0 LDR X0, [X0 + 0x6D0]
	0x034053D4 BL 0x1C16CF4
	0x034053D8 MOVZ W8, 0x1
	0x034053DC STRB W8, [X20 + 0x528]
	0x034053E0 LDR X19, [X19 + 0x20]
	0x034053E4 CBNZ X19, 0x340540C
	0x034053E8 ADRP X8, 0xCEF000
	0x034053EC LDR X8, [X8 + 0x6D0]
	0x034053F0 LDR X0, [X8]
	0x034053F4 BL 0x1C16F10
	0x034053F8 ADRP X8, 0xCEF000
	0x034053FC LDR X8, [X8 + 0x6C0]
	0x03405400 MOV X19, X0
	0x03405404 LDR X1, [X8]
	0x03405408 BL 0x2AA4804
	0x0340540C MOV X0, X19
	0x03405410 LDP X20, X19, [X31 + 0x10]
	0x03405414 LDR X30, [X31], #0x20
	0x03405418 RET
	0x0340541C LDR X0, [X0 + 0x20]
	0x03405420 RET
	0x03405424 STR X1, [X0 + 0x20]
	0x03405428 RET
	0x0340542C LDR X0, [X0 + 0x28]
	0x03405430 RET
	0x03405434 STR X1, [X0 + 0x28]
	0x03405438 RET
	0x0340543C SUB X31, X31, 0x80
	0x03405440 STP X29, X30, [X31 + 0x20]
	0x03405444 STP X28, X27, [X31 + 0x30]
	0x03405448 STP X26, X25, [X31 + 0x40]
	0x0340544C STP X24, X23, [X31 + 0x50]
	0x03405450 STP X22, X21, [X31 + 0x60]
	0x03405454 STP X20, X19, [X31 + 0x70]
	0x03405458 ADRP X19, 0xFD8000
	0x0340545C ADRP X22, 0xCEE000
	0x03405460 ADRP X20, 0xCEE000
	0x03405464 LDRB W8, [X19 + 0x529]
	0x03405468 LDR X22, [X22 + 0x988]
	0x0340546C LDR X20, [X20 + 0x9D0]
	0x03405470 MOV X23, X0
	0x03405474 TBNZ X8, 0x0, 0x3405564
	0x03405478 ADRP X0, 0xCEE000
	0x0340547C LDR X0, [X0 + 0xB58]
	0x03405480 BL 0x1C16CF4
	0x03405484 ADRP X0, 0xCEE000
	0x03405488 LDR X0, [X0 + 0xE00]
	0x0340548C BL 0x1C16CF4
	0x03405490 ADRP X0, 0xCF1000
	0x03405494 LDR X0, [X0 + 0x190]
	0x03405498 BL 0x1C16CF4
	0x0340549C ADRP X0, 0xCF1000
	0x034054A0 LDR X0, [X0 + 0x198]
	0x034054A4 BL 0x1C16CF4
	0x034054A8 ADRP X0, 0xCEE000
	0x034054AC LDR X0, [X0 + 0xE18]
	0x034054B0 BL 0x1C16CF4
	0x034054B4 ADRP X0, 0xCF1000
	0x034054B8 LDR X0, [X0 + 0x1B0]
	0x034054BC BL 0x1C16CF4
	0x034054C0 ADRP X0, 0xCF1000
	0x034054C4 LDR X0, [X0 + 0x1B8]
	0x034054C8 BL 0x1C16CF4
	0x034054CC ADRP X0, 0xCEE000
	0x034054D0 LDR X0, [X0 + 0x9D0]
	0x034054D4 BL 0x1C16CF4
	0x034054D8 ADRP X0, 0xCEE000
	0x034054DC LDR X0, [X0 + 0xAC8]
	0x034054E0 BL 0x1C16CF4
	0x034054E4 ADRP X0, 0xD1B000
	0x034054E8 LDR X0, [X0 + 0x360]
	0x034054EC BL 0x1C16CF4
	0x034054F0 ADRP X0, 0xD1B000
	0x034054F4 LDR X0, [X0 + 0xFB8]
	0x034054F8 BL 0x1C16CF4
	0x034054FC ADRP X0, 0xCF9000
	0x03405500 LDR X0, [X0 + 0x6D8]
	0x03405504 BL 0x1C16CF4
	0x03405508 ADRP X0, 0xCEF000
	0x0340550C LDR X0, [X0 + 0xEE0]
	0x03405510 BL 0x1C16CF4
	0x03405514 ADRP X0, 0xCEE000
	0x03405518 LDR X0, [X0 + 0x838]
	0x0340551C BL 0x1C16CF4
	0x03405520 ADRP X0, 0xD28000
	0x03405524 LDR X0, [X0 + 0xEB0]
	0x03405528 BL 0x1C16CF4
	0x0340552C ADRP X0, 0xD28000
	0x03405530 LDR X0, [X0 + 0xEB8]
	0x03405534 BL 0x1C16CF4
	0x03405538 ADRP X0, 0xD28000
	0x0340553C LDR X0, [X0 + 0xEC0]
	0x03405540 BL 0x1C16CF4
	0x03405544 ADRP X0, 0xCEE000
	0x03405548 LDR X0, [X0 + 0x988]
	0x0340554C BL 0x1C16CF4
	0x03405550 ADRP X0, 0xCEE000
	0x03405554 LDR X0, [X0 + 0x848]
	0x03405558 BL 0x1C16CF4
	0x0340555C MOVZ W8, 0x1
	0x03405560 STRB W8, [X19 + 0x529]
	0x03405564 LDR X0, [X20]
	0x03405568 LDR X21, [X22]
	0x0340556C MOVZ W1, 0x4
	0x03405570 BL 0x1C16D6C
	0x03405574 CBZ X0, 0x3405978
	0x03405578 MOV X20, X0
	0x0340557C CBZ X21, 0x3405594
	0x03405580 LDR X8, [X20]
	0x03405584 MOV X0, X21
	0x03405588 LDR X1, [X8 + 0x40]
	0x0340558C BL 0x1C16E00
	0x03405590 CBZ X0, 0x340596C
	0x03405594 LDR W8, [X20 + 0x18]
	0x03405598 CBZ W8, 0x3405968
	0x0340559C ADRP X19, 0xD28000
	0x034055A0 LDR X19, [X19 + 0xEB0]
	0x034055A4 STR X21, [X20 + 0x20]
	0x034055A8 LDR X0, [X19]
	0x034055AC CBZ X0, 0x34055C4
	0x034055B0 LDR X8, [X20]
	0x034055B4 LDR X1, [X8 + 0x40]
	0x034055B8 BL 0x1C16E00
	0x034055BC CBZ X0, 0x340596C
	0x034055C0 LDR W8, [X20 + 0x18]
	0x034055C4 CMP W8, 0x1
	0x034055C8 B.LS 0x3405968
	0x034055CC LDR X8, [X19]
	0x034055D0 ADRP X9, 0xCEE000
	0x034055D4 LDR X9, [X9 + 0xB58]
	0x034055D8 ADD X1, X31, 0x1C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xFD9000
	015 Move X19, 0xCEF000
	016 Move X21, 0xD29000
	017 Move X22, 0xCEF000
	018 Move W8, [X23+1312]
	019 Move X19, [X19+2440]
	020 Move X21, [X21+3448]
	021 Move X22, [X22+2104]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xCEF000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xCF2000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0xCF2000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEF000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCF2000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xCF2000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xCEF000
	046 Move X0, [X0+2760]
	047 Call 0x1C17CF4
	048 Move X0, 0xD1C000
	049 Move X0, [X0+864]
	050 Call 0x1C17CF4
	051 Move X0, 0xD1C000
	052 Move X0, [X0+4024]
	053 Call 0x1C17CF4
	054 Move X0, 0xCFA000
	055 Move X0, [X0+1752]
	056 Call 0x1C17CF4
	057 Move X0, 0xD29000
	058 Move X0, [X0+3456]
	059 Call 0x1C17CF4
	060 Move X0, 0xCEF000
	061 Move X0, [X0+2104]
	062 Call 0x1C17CF4
	063 Move X0, 0xD29000
	064 Move X0, [X0+3448]
	065 Call 0x1C17CF4
	066 Move X0, 0xCEF000
	067 Move X0, [X0+2440]
	068 Call 0x1C17CF4
	069 Move X0, 0xCEF000
	070 Move X0, [X0+2120]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+1312], W8
	074 Move X0, [X19]
	075 Move X2, [X20+16]
	076 Move X1, [X21]
	077 Move X3, [X22]
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X27, [X19]
	081 Move [X31+8], X0
	082 Move X0, X20
	083 Call ApiAccountSteam.get_Vars, X0
	084 Compare X0, 0
	085 JumpIfEqual {263}
	086 Move X10, 0xCF2000
	087 Move X8, [X0]
	088 Move X10, [X10+400]
	089 Move X20, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X28, 0xCEF000
	107 Move X29, 0xCF2000
	108 Move X26, 0xCEF000
	109 Move X24, 0xD1C000
	110 Move X25, 0xD1C000
	111 Move X19, 0xCFA000
	112 Move X28, [X28+3608]
	113 Move X29, [X29+408]
	114 Move X26, [X26+2760]
	115 Move X24, [X24+864]
	116 Move X25, [X25+4024]
	117 Move X19, [X19+1752]
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, X0
	123 Move X0, X27
	124 Compare X20, 0
	125 JumpIfEqual {256}
	126 Move X8, [X20]
	127 Move X1, [X28]
	128 Move X21, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {201}
	152 Move X8, [X20]
	153 Move X1, [X29]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X23, X0
	174 Move X0, [X26]
	175 Move X22, X1
	176 Move W1, 5
	177 Call 0x1C17D6C
	178 Compare X0, 0
	179 JumpIfEqual {258}
	180 Move W8, [X0+24]
	181 Compare W8, 0
	182 JumpIfEqual {260}
	183 Move X9, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+32], X9
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X0+40], X23
	188 Move X9, [X25]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X0+48], X9
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X0+56], X22
	193 Move X8, [X19]
	194 Move [X0+64], X8
	195 Move X1, X31
	196 Call String.Concat, X0
	197 Move X1, X0
	198 Move X0, X21
	199 Move X2, X31
	200 Call String.Concat, X0, X1
	201 Move X22, X31
	202 Compare X20, 0
	203 JumpIfEqual {227}
	204 Move X8, [X20]
	205 Move X10, 0xCEF000
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X10, [X10+3584]
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X20
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X22, 0
	228 JumpIfNotEqual {264}
	229 Move X8, 0xD29000
	230 Move X8, [X8+3456]
	231 Move X1, X21
	232 Move X3, X31
	233 Move X0, [X8]
	234 Move X8, 0xCEF000
	235 Move X8, [X8+2120]
	236 Move X2, [X8]
	237 Call String.Concat, X0, X1, X2
	238 Move X1, X0
	239 Move X0, [X31+8]
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Move X2, X31
	253 Add X31, X31, 112
	254 Call String.Concat, X0, X1
	255 Return X0
	256 Call 0x1C17F20
	257 Call 0x1C17F28
	258 Call 0x1C17F20
	259 Call 0x1C17F28
	260 Call 0x1C17F28
	261 Call 0x1C17F28
	262 Call 0x1C17F28
	263 Call 0x1C17F20
	264 Move X0, X22
	265 Call 0x1C17F18
	266 Move X21, X27
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X22, [X0]
	270 Call 0x3EB2AE0
	271 Move X19, X0
	272 Move X22, X31
	273 Move X19, X0
	274 Compare X20, 0
	275 JumpIfEqual {299}
	276 Move X8, [X20]
	277 Move X10, 0xCEF000
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X10, [X10+3584]
	280 Move X1, [X10]
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X20
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X22, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X19
	302 Call 0x1D2D690
	303 Move X0, X22
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x034055DC STR X8, [X20 + 0x28]
	0x034055E0 LDRB W8, [X23 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

