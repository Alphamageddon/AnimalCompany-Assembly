Type: Nakama.ApiSessionRefreshRequest

Method: System.String get_Token()

Disassembly:
	0x034096B0 ADRP X20, 0xFD4000
	0x034096B4 LDRB W8, [X20 + 0x54E]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Token(System.String value)

Disassembly:
	0x034096B8 MOV X19, X0
	0x034096BC TBNZ X8, 0x0, 0x34096E0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x034096C0 ADRP X0, 0xD25000
	0x034096C4 LDR X0, [X0 + 0xC0]
	0x034096C8 BL 0x1C16CF4
	0x034096CC ADRP X0, 0xD25000
	0x034096D0 LDR X0, [X0 + 0xC8]
	0x034096D4 BL 0x1C16CF4
	0x034096D8 MOVZ W8, 0x1
	0x034096DC STRB W8, [X20 + 0x54E]
	0x034096E0 LDR X19, [X19 + 0x20]
	0x034096E4 CBNZ X19, 0x3409710
	0x034096E8 ADRP X8, 0xD25000
	0x034096EC LDR X8, [X8 + 0xC8]
	0x034096F0 LDR X0, [X8]
	0x034096F4 BL 0x1C16F10
	0x034096F8 ADRP X8, 0xD25000
	0x034096FC LDR X8, [X8 + 0xC0]
	0x03409700 MOV W1, W31
	0x03409704 MOV X19, X0
	0x03409708 LDR X2, [X8]
	0x0340970C BL 0x301B830
	0x03409710 MOV X0, X19
	0x03409714 LDP X20, X19, [X31 + 0x10]
	0x03409718 LDR X30, [X31], #0x20
	0x0340971C RET
	0x03409720 LDR X0, [X0 + 0x20]
	0x03409724 RET
	0x03409728 STR X1, [X0 + 0x20]
	0x0340972C RET
	0x03409730 STP X30, X27, [X31 - 0x50]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFD5000
	005 Move W8, [X20+1348]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCEC000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCEC000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1348], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCEC000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCEC000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x03409734 STP X26, X25, [X31 + 0x10]
	0x03409738 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x0340973C STP X22, X21, [X31 + 0x30]
	0x03409740 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03409744 ADRP X27, 0xFD4000
	0x03409748 ADRP X25, 0xCEA000
	0x0340974C ADRP X26, 0xD24000
	0x03409750 ADRP X23, 0xCEA000
	0x03409754 ADRP X20, 0xD24000
	0x03409758 ADRP X24, 0xD25000
	0x0340975C ADRP X21, 0xD25000
	0x03409760 ADRP X22, 0xD24000
	0x03409764 LDR X25, [X25 + 0x988]
	0x03409768 LDR X26, [X26 + 0xED8]
	0x0340976C LDRB W8, [X27 + 0x54F]
	0x03409770 LDR X23, [X23 + 0x838]
	0x03409774 LDR X20, [X20 + 0xE68]
	0x03409778 LDR X24, [X24 + 0xD0]
	0x0340977C LDR X21, [X21 + 0xD8]
	0x03409780 LDR X22, [X22 + 0xD50]
	0x03409784 MOV X19, X0
	0x03409788 TBNZ X8, 0x0, 0x34097E8
	0x0340978C ADRP X0, 0xD25000
	0x03409790 LDR X0, [X0 + 0xD0]
	0x03409794 BL 0x1C16CF4
	0x03409798 ADRP X0, 0xCEA000
	0x0340979C LDR X0, [X0 + 0x838]
	0x034097A0 BL 0x1C16CF4
	0x034097A4 ADRP X0, 0xD24000
	0x034097A8 LDR X0, [X0 + 0xE68]
	0x034097AC BL 0x1C16CF4
	0x034097B0 ADRP X0, 0xD24000
	0x034097B4 LDR X0, [X0 + 0xD50]
	0x034097B8 BL 0x1C16CF4
	0x034097BC ADRP X0, 0xD25000
	0x034097C0 LDR X0, [X0 + 0xD8]
	0x034097C4 BL 0x1C16CF4
	0x034097C8 ADRP X0, 0xD24000
	0x034097CC LDR X0, [X0 + 0xED8]
	0x034097D0 BL 0x1C16CF4
	0x034097D4 ADRP X0, 0xCEA000
	0x034097D8 LDR X0, [X0 + 0x988]
	0x034097DC BL 0x1C16CF4
	0x034097E0 MOVZ W8, 0x1
	0x034097E4 STRB W8, [X27 + 0x54F]
	0x034097E8 LDR X2, [X19 + 0x10]
	0x034097EC LDR X0, [X25]
	0x034097F0 LDR X1, [X26]
	0x034097F4 LDR X3, [X23]
	0x034097F8 MOV X4, X31
	0x034097FC BL 0x32277C4
	0x03409800 LDR X2, [X19 + 0x18]
	0x03409804 LDR X1, [X20]
	0x03409808 LDR X3, [X23]
	0x0340980C MOV X4, X31
	0x03409810 BL 0x32277C4
	0x03409814 MOV X20, X0
	0x03409818 MOV X0, X19
	0x0340981C BL 0x34096A8
	0x03409820 LDR X8, [X23]
	0x03409824 LDR X2, [X24]
	0x03409828 MOV X1, X0
	0x0340982C MOV X0, X8
	0x03409830 BL 0x226B7E8
	0x03409834 LDR X1, [X21]
	0x03409838 LDR X3, [X22]
	0x0340983C MOV X2, X0
	0x03409840 MOV X0, X20
	0x03409844 LDP X20, X19, [X31 + 0x40]
	0x03409848 LDP X22, X21, [X31 + 0x30]
	0x0340984C LDP X24, X23, [X31 + 0x20]
	0x03409850 LDP X26, X25, [X31 + 0x10]
	0x03409854 MOV X4, X31
	0x03409858 LDP X30, X27, [X31], #0x50
	0x0340985C B 0x32277C4
	0x03409860 MOV X1, X31
	0x03409864 B 0x33BDD8C
	0x03409868 LDRB W0, [X0 + 0x10]
	0x0340986C RET
	0x03409870 AND W8, W1, 0x1
	0x03409874 STRB W8, [X0 + 0x10]
	0x03409878 RET
	0x0340987C LDRB W0, [X0 + 0x11]
	0x03409880 RET
	0x03409884 AND W8, W1, 0x1
	0x03409888 STRB W8, [X0 + 0x11]
	0x0340988C RET
	0x03409890 LDR W0, [X0 + 0x14]
	0x03409894 RET
	0x03409898 STR W1, [X0 + 0x14]
	0x0340989C RET
	0x034098A0 LDR X0, [X0 + 0x18]
	0x034098A4 RET
	0x034098A8 STR X1, [X0 + 0x18]
	0x034098AC RET
	0x034098B0 LDR X0, [X0 + 0x20]
	0x034098B4 RET
	0x034098B8 STR X1, [X0 + 0x20]
	0x034098BC RET
	0x034098C0 LDR W0, [X0 + 0x28]
	0x034098C4 RET
	0x034098C8 STR W1, [X0 + 0x28]
	0x034098CC RET
	0x034098D0 LDR W0, [X0 + 0x2C]
	0x034098D4 RET
	0x034098D8 STR W1, [X0 + 0x2C]
	0x034098DC RET
	0x034098E0 LDR X0, [X0 + 0x30]
	0x034098E4 RET
	0x034098E8 STR X1, [X0 + 0x30]
	0x034098EC RET
	0x034098F0 LDR X0, [X0 + 0x38]
	0x034098F4 RET
	0x034098F8 STR X1, [X0 + 0x38]
	0x034098FC RET
	0x03409900 LDR W0, [X0 + 0x40]
	0x03409904 RET
	0x03409908 STR W1, [X0 + 0x40]
	0x0340990C RET
	0x03409910 LDR W0, [X0 + 0x44]
	0x03409914 RET
	0x03409918 STR W1, [X0 + 0x44]
	0x0340991C RET
	0x03409920 LDR X0, [X0 + 0x48]
	0x03409924 RET
	0x03409928 STR X1, [X0 + 0x48]
	0x0340992C RET
	0x03409930 LDR W0, [X0 + 0x50]
	0x03409934 RET
	0x03409938 STR W1, [X0 + 0x50]
	0x0340993C RET
	0x03409940 LDR W0, [X0 + 0x54]
	0x03409944 RET
	0x03409948 LDR W0, [X0 + 0x54]
	0x0340994C RET
	0x03409950 STR W1, [X0 + 0x54]
	0x03409954 RET
	0x03409958 LDR W0, [X0 + 0x58]
	0x0340995C RET
	0x03409960 STR W1, [X0 + 0x58]
	0x03409964 RET
	0x03409968 LDR W0, [X0 + 0x5C]
	0x0340996C RET
	0x03409970 STR W1, [X0 + 0x5C]
	0x03409974 RET
	0x03409978 LDR W0, [X0 + 0x60]
	0x0340997C RET
	0x03409980 STR W1, [X0 + 0x60]
	0x03409984 RET
	0x03409988 LDR W0, [X0 + 0x64]
	0x0340998C RET
	0x03409990 STR W1, [X0 + 0x64]
	0x03409994 RET
	0x03409998 LDR X0, [X0 + 0x68]
	0x0340999C RET
	0x034099A0 STR X1, [X0 + 0x68]
	0x034099A4 RET
	0x034099A8 LDR X0, [X0 + 0x70]
	0x034099AC RET
	0x034099B0 STR X1, [X0 + 0x70]
	0x034099B4 RET
	0x034099B8 SUB X31, X31, 0x80
	0x034099BC STP X30, X25, [X31 + 0x40]
	0x034099C0 STP X24, X23, [X31 + 0x50]
	0x034099C4 STP X22, X21, [X31 + 0x60]
	0x034099C8 STP X20, X19, [X31 + 0x70]
	0x034099CC ADRP X20, 0xFD4000
	0x034099D0 ADRP X21, 0xCEA000
	0x034099D4 ADRP X22, 0xCEA000
	0x034099D8 LDRB W8, [X20 + 0x550]
	0x034099DC LDR X21, [X21 + 0x988]
	0x034099E0 LDR X22, [X22 + 0x9D0]
	0x034099E4 MOV X19, X0
	0x034099E8 TBNZ X8, 0x0, 0x3409B2C
	0x034099EC ADRP X0, 0xD24000
	0x034099F0 LDR X0, [X0 + 0xD08]
	0x034099F4 BL 0x1C16CF4
	0x034099F8 ADRP X0, 0xCEA000
	0x034099FC LDR X0, [X0 + 0xB58]
	0x03409A00 BL 0x1C16CF4
	0x03409A04 ADRP X0, 0xCEA000
	0x03409A08 LDR X0, [X0 + 0x758]
	0x03409A0C BL 0x1C16CF4
	0x03409A10 ADRP X0, 0xCEA000
	0x03409A14 LDR X0, [X0 + 0x9D0]
	0x03409A18 BL 0x1C16CF4
	0x03409A1C ADRP X0, 0xD25000
	0x03409A20 LDR X0, [X0 + 0xE0]
	0x03409A24 BL 0x1C16CF4
	0x03409A28 ADRP X0, 0xD25000
	0x03409A2C LDR X0, [X0 + 0xE8]
	0x03409A30 BL 0x1C16CF4
	0x03409A34 ADRP X0, 0xD24000
	0x03409A38 LDR X0, [X0 + 0xFB8]
	0x03409A3C BL 0x1C16CF4
	0x03409A40 ADRP X0, 0xD24000
	0x03409A44 LDR X0, [X0 + 0xD88]
	0x03409A48 BL 0x1C16CF4
	0x03409A4C ADRP X0, 0xD25000
	0x03409A50 LDR X0, [X0 + 0xF0]
	0x03409A54 BL 0x1C16CF4
	0x03409A58 ADRP X0, 0xD24000
	0x03409A5C LDR X0, [X0 + 0xFC8]
	0x03409A60 BL 0x1C16CF4
	0x03409A64 ADRP X0, 0xD25000
	0x03409A68 LDR X0, [X0 + 0xF8]
	0x03409A6C BL 0x1C16CF4
	0x03409A70 ADRP X0, 0xD25000
	0x03409A74 LDR X0, [X0 + 0x100]
	0x03409A78 BL 0x1C16CF4
	0x03409A7C ADRP X0, 0xD24000
	0x03409A80 LDR X0, [X0 + 0xDE0]
	0x03409A84 BL 0x1C16CF4
	0x03409A88 ADRP X0, 0xD25000
	0x03409A8C LDR X0, [X0 + 0x108]
	0x03409A90 BL 0x1C16CF4
	0x03409A94 ADRP X0, 0xCEA000
	0x03409A98 LDR X0, [X0 + 0x838]
	0x03409A9C BL 0x1C16CF4
	0x03409AA0 ADRP X0, 0xD25000
	0x03409AA4 LDR X0, [X0 + 0x110]
	0x03409AA8 BL 0x1C16CF4
	0x03409AAC ADRP X0, 0xD25000
	0x03409AB0 LDR X0, [X0 + 0x118]
	0x03409AB4 BL 0x1C16CF4
	0x03409AB8 ADRP X0, 0xD24000
	0x03409ABC LDR X0, [X0 + 0xD00]
	0x03409AC0 BL 0x1C16CF4
	0x03409AC4 ADRP X0, 0xD24000
	0x03409AC8 LDR X0, [X0 + 0xD20]
	0x03409ACC BL 0x1C16CF4
	0x03409AD0 ADRP X0, 0xD25000
	0x03409AD4 LDR X0, [X0 + 0x120]
	0x03409AD8 BL 0x1C16CF4
	0x03409ADC ADRP X0, 0xD25000
	0x03409AE0 LDR X0, [X0 + 0x128]
	0x03409AE4 BL 0x1C16CF4
	0x03409AE8 ADRP X0, 0xD25000
	0x03409AEC LDR X0, [X0 + 0x130]
	0x03409AF0 BL 0x1C16CF4
	0x03409AF4 ADRP X0, 0xD25000
	0x03409AF8 LDR X0, [X0 + 0x138]
	0x03409AFC BL 0x1C16CF4
	0x03409B00 ADRP X0, 0xCEA000
	0x03409B04 LDR X0, [X0 + 0x988]
	0x03409B08 BL 0x1C16CF4
	0x03409B0C ADRP X0, 0xD24000
	0x03409B10 LDR X0, [X0 + 0xF60]
	0x03409B14 BL 0x1C16CF4
	0x03409B18 ADRP X0, 0xD24000
	0x03409B1C LDR X0, [X0 + 0xCD0]
	0x03409B20 BL 0x1C16CF4
	0x03409B24 MOVZ W8, 0x1
	0x03409B28 STRB W8, [X20 + 0x550]
	0x03409B2C LDR X0, [X22]
	0x03409B30 LDR X21, [X21]
	0x03409B34 MOVZ W1, 0x4
	0x03409B38 BL 0x1C16D6C
	0x03409B3C CBZ X0, 0x340A830
	0x03409B40 MOV X20, X0
	0x03409B44 CBZ X21, 0x3409B5C
	0x03409B48 LDR X8, [X20]
	0x03409B4C MOV X0, X21
	0x03409B50 LDR X1, [X8 + 0x40]
	0x03409B54 BL 0x1C16E00
	0x03409B58 CBZ X0, 0x340A824
	0x03409B5C LDR W8, [X20 + 0x18]
	0x03409B60 CBZ W8, 0x340A820
	0x03409B64 ADRP X23, 0xD24000
	0x03409B68 LDR X23, [X23 + 0xFC8]
	0x03409B6C STR X21, [X20 + 0x20]
	0x03409B70 LDR X0, [X23]
	0x03409B74 CBZ X0, 0x3409B8C
	0x03409B78 LDR X8, [X20]
	0x03409B7C LDR X1, [X8 + 0x40]
	0x03409B80 BL 0x1C16E00
	0x03409B84 CBZ X0, 0x340A824
	0x03409B88 LDR W8, [X20 + 0x18]
	0x03409B8C CMP W8, 0x1
	0x03409B90 B.LS 0x340A820
	0x03409B94 LDR X8, [X23]
	0x03409B98 ADRP X24, 0xCEA000
	0x03409B9C LDR X24, [X24 + 0xB58]
	0x03409BA0 ADD X1, X31, 0x3C
	0x03409BA4 STR X8, [X20 + 0x28]
	0x03409BA8 LDRB W8, [X19 + 0x10]
	0x03409BAC LDR X0, [X24]
	0x03409BB0 STRB W8, [X31 + 0x3C]
	0x03409BB4 BL 0x1C16E04
	0x03409BB8 MOV X21, X0
	0x03409BBC CBZ X0, 0x3409BD4
	0x03409BC0 LDR X8, [X20]
	0x03409BC4 MOV X0, X21
	0x03409BC8 LDR X1, [X8 + 0x40]
	0x03409BCC BL 0x1C16E00
	0x03409BD0 CBZ X0, 0x340A824
	0x03409BD4 LDR W8, [X20 + 0x18]
	0x03409BD8 CMP W8, 0x2
	0x03409BDC B.LS 0x340A820
	0x03409BE0 ADRP X23, 0xCEA000
	0x03409BE4 LDR X23, [X23 + 0x838]
	0x03409BE8 STR X21, [X20 + 0x30]
	0x03409BEC LDR X0, [X23]
	0x03409BF0 CBZ X0, 0x3409C08
	0x03409BF4 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xFD5000
	015 Move X19, 0xCEB000
	016 Move X21, 0xD25000
	017 Move X22, 0xCEB000
	018 Move W8, [X23+1349]
	019 Move X19, [X19+2440]
	020 Move X21, [X21+3448]
	021 Move X22, [X22+2104]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xCEB000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xCEE000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0xCEE000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0xCEB000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCEE000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xCEE000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xCEB000
	046 Move X0, [X0+2760]
	047 Call 0x1C17CF4
	048 Move X0, 0xD18000
	049 Move X0, [X0+864]
	050 Call 0x1C17CF4
	051 Move X0, 0xD18000
	052 Move X0, [X0+4024]
	053 Call 0x1C17CF4
	054 Move X0, 0xCF6000
	055 Move X0, [X0+1752]
	056 Call 0x1C17CF4
	057 Move X0, 0xD25000
	058 Move X0, [X0+3456]
	059 Call 0x1C17CF4
	060 Move X0, 0xCEB000
	061 Move X0, [X0+2104]
	062 Call 0x1C17CF4
	063 Move X0, 0xD25000
	064 Move X0, [X0+3448]
	065 Call 0x1C17CF4
	066 Move X0, 0xCEB000
	067 Move X0, [X0+2440]
	068 Call 0x1C17CF4
	069 Move X0, 0xCEB000
	070 Move X0, [X0+2120]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+1349], W8
	074 Move X0, [X19]
	075 Move X2, [X20+16]
	076 Move X1, [X21]
	077 Move X3, [X22]
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X27, [X19]
	081 Move [X31+8], X0
	082 Move X0, X20
	083 Call ApiSessionRefreshRequest.get_Vars, X0
	084 Compare X0, 0
	085 JumpIfEqual {263}
	086 Move X10, 0xCEE000
	087 Move X8, [X0]
	088 Move X10, [X10+400]
	089 Move X20, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X28, 0xCEB000
	107 Move X29, 0xCEE000
	108 Move X26, 0xCEB000
	109 Move X24, 0xD18000
	110 Move X25, 0xD18000
	111 Move X19, 0xCF6000
	112 Move X28, [X28+3608]
	113 Move X29, [X29+408]
	114 Move X26, [X26+2760]
	115 Move X24, [X24+864]
	116 Move X25, [X25+4024]
	117 Move X19, [X19+1752]
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, X0
	123 Move X0, X27
	124 Compare X20, 0
	125 JumpIfEqual {256}
	126 Move X8, [X20]
	127 Move X1, [X28]
	128 Move X21, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {201}
	152 Move X8, [X20]
	153 Move X1, [X29]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X23, X0
	174 Move X0, [X26]
	175 Move X22, X1
	176 Move W1, 5
	177 Call 0x1C17D6C
	178 Compare X0, 0
	179 JumpIfEqual {258}
	180 Move W8, [X0+24]
	181 Compare W8, 0
	182 JumpIfEqual {260}
	183 Move X9, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+32], X9
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X0+40], X23
	188 Move X9, [X25]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X0+48], X9
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X0+56], X22
	193 Move X8, [X19]
	194 Move [X0+64], X8
	195 Move X1, X31
	196 Call String.Concat, X0
	197 Move X1, X0
	198 Move X0, X21
	199 Move X2, X31
	200 Call String.Concat, X0, X1
	201 Move X22, X31
	202 Compare X20, 0
	203 JumpIfEqual {227}
	204 Move X8, [X20]
	205 Move X10, 0xCEB000
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X10, [X10+3584]
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X20
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X22, 0
	228 JumpIfNotEqual {264}
	229 Move X8, 0xD25000
	230 Move X8, [X8+3456]
	231 Move X1, X21
	232 Move X3, X31
	233 Move X0, [X8]
	234 Move X8, 0xCEB000
	235 Move X8, [X8+2120]
	236 Move X2, [X8]
	237 Call String.Concat, X0, X1, X2
	238 Move X1, X0
	239 Move X0, [X31+8]
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Move X2, X31
	253 Add X31, X31, 112
	254 Call String.Concat, X0, X1
	255 Return X0
	256 Call 0x1C17F20
	257 Call 0x1C17F28
	258 Call 0x1C17F20
	259 Call 0x1C17F28
	260 Call 0x1C17F28
	261 Call 0x1C17F28
	262 Call 0x1C17F28
	263 Call 0x1C17F20
	264 Move X0, X22
	265 Call 0x1C17F18
	266 Move X21, X27
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X22, [X0]
	270 Call 0x3EB2AE0
	271 Move X19, X0
	272 Move X22, X31
	273 Move X19, X0
	274 Compare X20, 0
	275 JumpIfEqual {299}
	276 Move X8, [X20]
	277 Move X10, 0xCEB000
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X10, [X10+3584]
	280 Move X1, [X10]
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X20
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X22, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X19
	302 Call 0x1D2D690
	303 Move X0, X22
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03409BF8 LDR X1, [X8 + 0x40]
	0x03409BFC BL 0x1C16E00

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

