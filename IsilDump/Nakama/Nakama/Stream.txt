Type: Nakama.Stream

Method: System.String get_Descriptor()

Disassembly:
	0x03476890 STP X30, X21, [X31 - 0x20]!
	0x03476894 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Descriptor(System.String value)

Disassembly:
	0x03476898 ADRP X21, 0xF67000
	0x0347689C ADRP X20, 0xCBA000

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Label()

Disassembly:
	0x034768A0 LDRB W8, [X21 + 0x82B]
	0x034768A4 LDR X20, [X20 + 0xA08]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Label(System.String value)

Disassembly:
	0x034768A8 MOV X19, X0
	0x034768AC TBNZ X8, 0x0, 0x34768C4

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Int32 get_Mode()

Disassembly:
	0x034768B0 ADRP X0, 0xCBA000
	0x034768B4 LDR X0, [X0 + 0xA08]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_Mode(System.Int32 value)

Disassembly:
	0x034768B8 BL 0x1C16CF4
	0x034768BC MOVZ W8, 0x1

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.String get_Subject()

Disassembly:
	0x034768C0 STRB W8, [X21 + 0x82B]
	0x034768C4 LDP X1, X2, [X19 + 0x10]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Subject(System.String value)

Disassembly:
	0x034768C8 LDR X0, [X20]
	0x034768CC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034768D0 MOV X3, X31
	0x034768D4 LDP X30, X21, [X31], #0x20
	0x034768D8 B 0x3227BD4
	0x034768DC MOV X1, X31
	0x034768E0 B 0x33BDD8C
	0x034768E4 LDR X0, [X0 + 0x10]
	0x034768E8 RET
	0x034768EC STR X1, [X0 + 0x10]
	0x034768F0 RET
	0x034768F4 STR X30, [X31 - 0x30]!
	0x034768F8 STP X22, X21, [X31 + 0x10]
	0x034768FC STP X20, X19, [X31 + 0x20]
	0x03476900 ADRP X22, 0xF67000
	0x03476904 ADRP X20, 0xCBA000
	0x03476908 ADRP X21, 0xCB9000
	0x0347690C LDRB W8, [X22 + 0x82C]
	0x03476910 LDR X20, [X20 + 0xA10]
	0x03476914 LDR X21, [X21 + 0x5B8]
	0x03476918 MOV X19, X0
	0x0347691C TBNZ X8, 0x0, 0x3476940
	0x03476920 ADRP X0, 0xCBA000
	0x03476924 LDR X0, [X0 + 0xA10]
	0x03476928 BL 0x1C16CF4
	0x0347692C ADRP X0, 0xCB9000
	0x03476930 LDR X0, [X0 + 0x5B8]
	0x03476934 BL 0x1C16CF4
	0x03476938 MOVZ W8, 0x1
	0x0347693C STRB W8, [X22 + 0x82C]
	0x03476940 LDR X1, [X19 + 0x10]
	0x03476944 LDR X0, [X20]
	0x03476948 LDR X2, [X21]
	0x0347694C LDP X20, X19, [X31 + 0x20]
	0x03476950 LDP X22, X21, [X31 + 0x10]
	0x03476954 MOV X3, X31
	0x03476958 LDR X30, [X31], #0x30
	0x0347695C B 0x32274B8
	0x03476960 MOV X1, X31
	0x03476964 B 0x33BDD8C
	0x03476968 LDRB W0, [X0 + 0x10]
	0x0347696C RET
	0x03476970 AND W8, W1, 0x1
	0x03476974 STRB W8, [X0 + 0x10]
	0x03476978 RET
	0x0347697C LDR W0, [X0 + 0x14]
	0x03476980 RET
	0x03476984 STR W1, [X0 + 0x14]
	0x03476988 RET
	0x0347698C SUB X31, X31, 0x40
	0x03476990 STP X30, X23, [X31 + 0x10]
	0x03476994 STP X22, X21, [X31 + 0x20]
	0x03476998 STP X20, X19, [X31 + 0x30]
	0x0347699C ADRP X23, 0xF67000
	0x034769A0 ADRP X20, 0xC7D000
	0x034769A4 ADRP X22, 0xC7D000
	0x034769A8 ADRP X21, 0xCBA000
	0x034769AC LDRB W8, [X23 + 0x82D]
	0x034769B0 LDR X20, [X20 + 0xB58]
	0x034769B4 LDR X22, [X22 + 0x758]
	0x034769B8 LDR X21, [X21 + 0xA18]
	0x034769BC MOV X19, X0
	0x034769C0 TBNZ X8, 0x0, 0x34769F0
	0x034769C4 ADRP X0, 0xC7D000
	0x034769C8 LDR X0, [X0 + 0xB58]
	0x034769CC BL 0x1C16CF4
	0x034769D0 ADRP X0, 0xC7D000
	0x034769D4 LDR X0, [X0 + 0x758]
	0x034769D8 BL 0x1C16CF4
	0x034769DC ADRP X0, 0xCBA000
	0x034769E0 LDR X0, [X0 + 0xA18]
	0x034769E4 BL 0x1C16CF4
	0x034769E8 MOVZ W8, 0x1
	0x034769EC STRB W8, [X23 + 0x82D]
	0x034769F0 LDRB W8, [X19 + 0x10]
	0x034769F4 LDR X0, [X20]
	0x034769F8 ADD X1, X31, 0xC
	0x034769FC STRB W8, [X31 + 0xC]
	0x03476A00 BL 0x1C16E04
	0x03476A04 MOV X20, X0
	0x03476A08 LDR W8, [X19 + 0x14]
	0x03476A0C LDR X0, [X22]
	0x03476A10 ADD X1, X31, 0x8
	0x03476A14 STR W8, [X31 + 0x8]
	0x03476A18 BL 0x1C16E04
	0x03476A1C LDR X8, [X21]
	0x03476A20 MOV X2, X0
	0x03476A24 MOV X1, X20
	0x03476A28 MOV X3, X31
	0x03476A2C MOV X0, X8
	0x03476A30 BL 0x3227BD4
	0x03476A34 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xF68000
	007 Move X21, 0xC7E000
	008 Move W8, [X19+2077]
	009 Move X21, [X21+2512]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xC7E000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0xC7E000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0xCBB000
	022 Move X0, [X0+2448]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+2077], W8
	026 Move X0, [X21]
	027 Move W1, 4
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {104}
	031 Move X21, [X20+16]
	032 Move X19, X0
	033 Compare X21, 0
	034 JumpIfEqual {41}
	035 Move X8, [X19]
	036 Move X0, X21
	037 Move X1, [X8+64]
	038 Call 0x1C17E00
	039 Compare X0, 0
	040 JumpIfEqual {101}
	041 Move W8, [X19+24]
	042 Compare W8, 0
	043 JumpIfEqual {100}
	044 Move [X19+32], X21
	045 Move X21, [X20+24]
	046 Compare X21, 0
	047 JumpIfEqual {55}
	048 Move X8, [X19]
	049 Move X0, X21
	050 Move X1, [X8+64]
	051 Call 0x1C17E00
	052 Compare X0, 0
	053 JumpIfEqual {101}
	054 Move W8, [X19+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, 0xC7E000
	057 Move X8, [X8+1880]
	058 Move [X19+40], X21
	059 Move W9, [X20+32]
	060 Add X1, X31, 12
	061 Move X0, [X8]
	062 Move [X31+12], W9
	063 Call 0x1C17E04
	064 Move X21, X0
	065 Compare X0, 0
	066 JumpIfEqual {73}
	067 Move X8, [X19]
	068 Move X0, X21
	069 Move X1, [X8+64]
	070 Call 0x1C17E00
	071 Compare X0, 0
	072 JumpIfEqual {101}
	073 Move W8, [X19+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X19+48], X21
	076 Move X20, [X20+40]
	077 Compare X20, 0
	078 JumpIfEqual {86}
	079 Move X8, [X19]
	080 Move X0, X20
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {101}
	085 Move W8, [X19+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, 0xCBB000
	088 Move X8, [X8+2448]
	089 Move [X19+56], X20
	090 Move X1, X19
	091 Move X2, X31
	092 Move X0, [X8]
	093 Call String.Format, X0, X1
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X30, [X31+16]
	097 Move X21, [X31+24]
	098 Add X31, X31, 48
	099 Return X0
	100 Call 0x1C17F28
	101 Call 0x1C17F44
	102 Move X1, X31
	103 Call 0x1C17DEC
	104 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03476A38 LDP X22, X21, [X31 + 0x20]
	0x03476A3C LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

