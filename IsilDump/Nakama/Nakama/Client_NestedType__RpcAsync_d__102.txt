Type: Nakama.Client/<RpcAsync>d__102

Method: System.Void MoveNext()

Disassembly:
	0x03467D54 LDR X2, [X20]
	0x03467D58 MOV X0, X19
	0x03467D5C MOV X1, X21
	0x03467D60 BL 0x26322B0
	0x03467D64 LDP X20, X19, [X31 + 0x60]
	0x03467D68 LDP X22, X21, [X31 + 0x50]
	0x03467D6C LDP X24, X23, [X31 + 0x40]
	0x03467D70 LDP X26, X25, [X31 + 0x30]
	0x03467D74 LDP X30, X27, [X31 + 0x20]
	0x03467D78 ADD X31, X31, 0x70
	0x03467D7C RET
	0x03467D80 CBZ X20, 0x3467ED4
	0x03467D84 LDR X8, [X20]
	0x03467D88 LDR X1, [X24]
	0x03467D8C LDRH W9, [X8 + 0x12E]
	0x03467D90 CBZ X9, 0x3467DB4
	0x03467D94 LDR X10, [X8 + 0xB0]
	0x03467D98 ADD X10, X10, 0x8
	0x03467D9C LDUR X11, [X10 - 0x8]
	0x03467DA0 CMP X11, X1
	0x03467DA4 B.EQ 0x3467DC4
	0x03467DA8 SUBS X9, X9, 0x1
	0x03467DAC ADD X10, X10, 0x10
	0x03467DB0 B.NE 0x3467D9C
	0x03467DB4 MOVZ W2, 0x2
	0x03467DB8 MOV X0, X20
	0x03467DBC BL 0x1C5C788
	0x03467DC0 B 0x3467DD4
	0x03467DC4 LDR W9, [X10]
	0x03467DC8 ADD W9, W9, 0x2
	0x03467DCC ADD X8, X8, W9, 0x4, SXTW
	0x03467DD0 ADD X0, X8, 0x138
	0x03467DD4 LDP X8, X1, [X0]
	0x03467DD8 MOV X0, X20
	0x03467DDC BLR X8
	0x03467DE0 LDR X8, [X20]
	0x03467DE4 LDR X1, [X24]
	0x03467DE8 MOV X22, X0
	0x03467DEC LDRH W9, [X8 + 0x12E]
	0x03467DF0 CBZ X9, 0x3467E14
	0x03467DF4 LDR X10, [X8 + 0xB0]
	0x03467DF8 ADD X10, X10, 0x8
	0x03467DFC LDUR X11, [X10 - 0x8]
	0x03467E00 CMP X11, X1
	0x03467E04 B.EQ 0x3467E24
	0x03467E08 SUBS X9, X9, 0x1
	0x03467E0C ADD X10, X10, 0x10
	0x03467E10 B.NE 0x3467DFC
	0x03467E14 MOVZ W2, 0x1
	0x03467E18 MOV X0, X20
	0x03467E1C BL 0x1C5C788
	0x03467E20 B 0x3467E34
	0x03467E24 LDR W9, [X10]
	0x03467E28 ADD W9, W9, 0x1
	0x03467E2C ADD X8, X8, W9, 0x4, SXTW
	0x03467E30 ADD X0, X8, 0x138
	0x03467E34 LDP X8, X1, [X0]
	0x03467E38 MOV X0, X20
	0x03467E3C BLR X8
	0x03467E40 MOV X2, X0
	0x03467E44 MOV X0, X21
	0x03467E48 MOV X1, X22
	0x03467E4C BL 0x3468048
	0x03467E50 CBZ X26, 0x3467ED8
	0x03467E54 LDR X8, [X26 + 0x40]
	0x03467E58 CBZ X8, 0x3467D2C
	0x03467E5C LDR X0, [X8 + 0x40]
	0x03467E60 LDR X9, [X8 + 0x18]
	0x03467E64 LDR X2, [X8 + 0x28]
	0x03467E68 MOV X1, X21
	0x03467E6C BLR X9
	0x03467E70 B 0x3467D2C
	0x03467E74 BL 0x1C16F20
	0x03467E78 BL 0x1C16F20
	0x03467E7C BL 0x1C16F20
	0x03467E80 BL 0x1C16F20
	0x03467E84 BL 0x1C16F20
	0x03467E88 BL 0x1C16F20
	0x03467E8C BL 0x1C16F20
	0x03467E90 BL 0x1C16F20
	0x03467E94 BL 0x1C16F20
	0x03467E98 BL 0x1C16F20
	0x03467E9C BL 0x1C16F20
	0x03467EA0 BL 0x1C16F20
	0x03467EA4 BL 0x1C16F20
	0x03467EA8 BL 0x1C16F20
	0x03467EAC BL 0x1C16F20
	0x03467EB0 BL 0x1C16F20
	0x03467EB4 BL 0x1C16F20
	0x03467EB8 BL 0x1C16F20
	0x03467EBC BL 0x1C16F20
	0x03467EC0 BL 0x1C16F20
	0x03467EC4 BL 0x1C16F20
	0x03467EC8 BL 0x1C16F20
	0x03467ECC BL 0x1C16F20
	0x03467ED0 BL 0x1C16F20
	0x03467ED4 BL 0x1C16F20
	0x03467ED8 BL 0x1C16F20
	0x03467EDC B 0x3467F94
	0x03467EE0 B 0x3467F94
	0x03467EE4 B 0x3467F94
	0x03467EE8 B 0x3467F94
	0x03467EEC B 0x3467F94
	0x03467EF0 B 0x3467F94
	0x03467EF4 B 0x3467F94
	0x03467EF8 B 0x3467F94
	0x03467EFC B 0x3467F94
	0x03467F00 B 0x3467F94
	0x03467F04 B 0x3467F94
	0x03467F08 B 0x3467F94
	0x03467F0C B 0x3467F94
	0x03467F10 B 0x3467F94
	0x03467F14 B 0x3467F94
	0x03467F18 B 0x3467F94
	0x03467F1C B 0x3467F94
	0x03467F20 B 0x3467F94
	0x03467F24 B 0x3467F94
	0x03467F28 B 0x3467F94
	0x03467F2C B 0x3467F94
	0x03467F30 B 0x3467F94
	0x03467F34 B 0x3467F94
	0x03467F38 B 0x3467F94
	0x03467F3C B 0x3467F94
	0x03467F40 B 0x3467F94
	0x03467F44 B 0x3467F94
	0x03467F48 B 0x3467F94
	0x03467F4C B 0x3467F94
	0x03467F50 B 0x3467F94
	0x03467F54 B 0x3467F94
	0x03467F58 B 0x3467F94
	0x03467F5C B 0x3467F94
	0x03467F60 B 0x3467F94
	0x03467F64 B 0x3467F94
	0x03467F68 B 0x3467F94
	0x03467F6C B 0x3467F94
	0x03467F70 B 0x3467F94
	0x03467F74 B 0x3467F94
	0x03467F78 B 0x3467F94
	0x03467F7C B 0x3467F94
	0x03467F80 B 0x3467F94
	0x03467F84 B 0x3467F94
	0x03467F88 B 0x3467F94
	0x03467F8C B 0x3467F94
	0x03467F90 B 0x3467F94
	0x03467F94 MOV X20, X0
	0x03467F98 CMP W1, 0x1
	0x03467F9C B.NE 0x346803C
	0x03467FA0 MOV X0, X20
	0x03467FA4 BL 0x3EB1AD0
	0x03467FA8 MOV X20, X0
	0x03467FAC ADRP X0, 0xC8C000
	0x03467FB0 LDR X0, [X0 + 0x7D0]
	0x03467FB4 BL 0x1C16D08
	0x03467FB8 LDR X8, [X20]
	0x03467FBC LDR X1, [X8]
	0x03467FC0 BL 0x1C17270
	0x03467FC4 TBZ X0, 0x0, 0x3468014
	0x03467FC8 LDR X20, [X20]
	0x03467FCC BL 0x3EB1AE0
	0x03467FD0 MOVN W8, 0x1
	0x03467FD4 STR X31, [X19 + 0x48]
	0x03467FD8 STR W8, [X19], #0x8
	0x03467FDC ADRP X0, 0xCC8000
	0x03467FE0 LDR X0, [X0 + 0x630]
	0x03467FE4 BL 0x1C16D08
	0x03467FE8 LDR W8, [X0 + 0xE0]
	0x03467FEC CBNZ W8, 0x3467FF4
	0x03467FF0 BL 0x1C16DFC
	0x03467FF4 ADRP X0, 0xCC8000
	0x03467FF8 LDR X0, [X0 + 0xAA0]
	0x03467FFC BL 0x1C16D08
	0x03468000 MOV X2, X0
	0x03468004 MOV X0, X19
	0x03468008 MOV X1, X20
	0x0346800C BL 0x26324C8
	0x03468010 B 0x3467D64
	0x03468014 MOVZ W0, 0x8
	0x03468018 BL 0x3EB1AF0
	0x0346801C LDR X8, [X20]
	0x03468020 STR X8, [X0]
	0x03468024 ADRP X1, 0xA4C000
	0x03468028 ADD X1, X1, 0xE58
	0x0346802C MOV X2, X31
	0x03468030 BL 0x3EB1B00
	0x03468034 MOV X20, X0
	0x03468038 BL 0x3EB1AE0
	0x0346803C MOV X0, X20
	0x03468040 BL 0x1D2C690
	0x03468044 BL 0x1990590
	0x03468048 SUB X31, X31, 0xC0
	0x0346804C STP X29, X30, [X31 + 0x60]
	0x03468050 STP X28, X27, [X31 + 0x70]
	0x03468054 STP X26, X25, [X31 + 0x80]
	0x03468058 STP X24, X23, [X31 + 0x90]
	0x0346805C STP X22, X21, [X31 + 0xA0]
	0x03468060 STP X20, X19, [X31 + 0xB0]
	0x03468064 ADRP X22, 0xF75000
	0x03468068 ADRP X24, 0xCC7000
	0x0346806C LDRB W8, [X22 + 0x855]
	0x03468070 LDR X24, [X24 + 0xA70]
	0x03468074 MOV X20, X2
	0x03468078 MOV X21, X1
	0x0346807C MOV X19, X0
	0x03468080 TBNZ X8, 0x0, 0x3468158
	0x03468084 ADRP X0, 0xC94000
	0x03468088 LDR X0, [X0 + 0x9E8]
	0x0346808C BL 0x1C16CF4
	0x03468090 ADRP X0, 0xC8D000
	0x03468094 LDR X0, [X0 + 0x220]
	0x03468098 BL 0x1C16CF4
	0x0346809C ADRP X0, 0xC90000
	0x034680A0 LDR X0, [X0 + 0x700]
	0x034680A4 BL 0x1C16CF4
	0x034680A8 ADRP X0, 0xC8D000
	0x034680AC LDR X0, [X0 + 0x268]
	0x034680B0 BL 0x1C16CF4
	0x034680B4 ADRP X0, 0xC8B000
	0x034680B8 LDR X0, [X0 + 0x720]
	0x034680BC BL 0x1C16CF4
	0x034680C0 ADRP X0, 0xC90000
	0x034680C4 LDR X0, [X0 + 0x708]
	0x034680C8 BL 0x1C16CF4
	0x034680CC ADRP X0, 0xC90000
	0x034680D0 LDR X0, [X0 + 0x710]
	0x034680D4 BL 0x1C16CF4
	0x034680D8 ADRP X0, 0xC90000
	0x034680DC LDR X0, [X0 + 0x718]
	0x034680E0 BL 0x1C16CF4
	0x034680E4 ADRP X0, 0xCBB000
	0x034680E8 LDR X0, [X0 + 0xAE0]
	0x034680EC BL 0x1C16CF4
	0x034680F0 ADRP X0, 0xC8E000
	0x034680F4 LDR X0, [X0 + 0x1A8]
	0x034680F8 BL 0x1C16CF4
	0x034680FC ADRP X0, 0xC90000
	0x03468100 LDR X0, [X0 + 0x720]
	0x03468104 BL 0x1C16CF4
	0x03468108 ADRP X0, 0xC90000
	0x0346810C LDR X0, [X0 + 0x728]
	0x03468110 BL 0x1C16CF4
	0x03468114 ADRP X0, 0xCC7000
	0x03468118 LDR X0, [X0 + 0xA70]
	0x0346811C BL 0x1C16CF4
	0x03468120 ADRP X0, 0xCC8000
	0x03468124 LDR X0, [X0 + 0x480]
	0x03468128 BL 0x1C16CF4
	0x0346812C ADRP X0, 0xCC8000
	0x03468130 LDR X0, [X0 + 0x488]
	0x03468134 BL 0x1C16CF4
	0x03468138 ADRP X0, 0xCC8000
	0x0346813C LDR X0, [X0 + 0x490]
	0x03468140 BL 0x1C16CF4
	0x03468144 ADRP X0, 0xCC8000
	0x03468148 LDR X0, [X0 + 0x498]
	0x0346814C BL 0x1C16CF4
	0x03468150 MOVZ W8, 0x1
	0x03468154 STRB W8, [X22 + 0x855]
	0x03468158 MOVI V0.2D, 0x0
	0x0346815C STR X31, [X31 + 0x50]
	0x03468160 STP V0, V0, [X31 + 0x30]
	0x03468164 STR X21, [X19 + 0x10]
	0x03468168 STR X20, [X19 + 0x38]
	0x0346816C LDR X0, [X24]
	0x03468170 ADRP X25, 0xC8E000
	0x03468174 LDR W8, [X0 + 0xE0]
	0x03468178 LDR X25, [X25 + 0x1A8]
	0x0346817C CBNZ W8, 0x3468184
	0x03468180 BL 0x1C16DFC
	0x03468184 MOV X0, X21
	0x03468188 BL 0x347963C
	0x0346818C LDR X1, [X25]
	0x03468190 BL 0x220E6DC
	0x03468194 CBZ X0, 0x3468424
	0x03468198 ADRP X27, 0xCC8000
	0x0346819C ADRP X28, 0xC8D000
	0x034681A0 LDR X27, [X27 + 0x498]
	0x034681A4 LDR X28, [X28 + 0x268]
	0x034681A8 ADRP X26, 0xC94000
	0x034681AC ADRP X23, 0xCC8000
	0x034681B0 LDR X1, [X27]
	0x034681B4 LDR X2, [X28]
	0x034681B8 LDR X26, [X26 + 0x9E8]
	0x034681BC LDR X23, [X23 + 0x488]
	0x034681C0 MOV X21, X0
	0x034681C4 BL 0x2AA5018
	0x034681C8 LDR X8, [X26]
	0x034681CC MOV X22, X0
	0x034681D0 LDR W9, [X8 + 0xE0]
	0x034681D4 CBNZ W9, 0x34681E0
	0x034681D8 MOV X0, X8
	0x034681DC BL 0x1C16DFC
	0x034681E0 MOV X0, X22
	0x034681E4 MOV X1, X31
	0x034681E8 BL 0x3320B38
	0x034681EC STR X0, [X19 + 0x28]
	0x034681F0 LDR X1, [X23]
	0x034681F4 LDR X2, [X28]
	0x034681F8 MOV X0, X21
	0x034681FC BL 0x2AA5018
	0x03468200 CBZ X0, 0x3468424
	0x03468204 LDR X8, [X0]
	0x03468208 ADRP X22, 0xCC8000
	0x0346820C LDP X9, X1, [X8 + 0x168]
	0x03468210 LDR X22, [X22 + 0x480]
	0x03468214 BLR X9
	0x03468218 STR X0, [X19 + 0x48]
	0x0346821C LDR X1, [X22]
	0x03468220 LDR X2, [X28]
	0x03468224 MOV X0, X21
	0x03468228 BL 0x2AA5018
	0x0346822C CBZ X0, 0x3468424
	0x03468230 LDR X8, [X0]
	0x03468234 ADRP X22, 0xCC8000
	0x03468238 ADRP X23, 0xC8D000
	0x0346823C LDP X9, X1, [X8 + 0x168]
	0x03468240 LDR X22, [X22 + 0x490]
	0x03468244 LDR X23, [X23 + 0x220]
	0x03468248 BLR X9
	0x0346824C STR X0, [X19 + 0x50]
	0x03468250 LDR X1, [X22]
	0x03468254 LDR X2, [X23]
	0x03468258 MOV X0, X21
	0x0346825C BL 0x2AA528C
	0x03468260 TBZ X0, 0x0, 0x346839C
	0x03468264 LDR X1, [X22]
	0x03468268 LDR X2, [X28]
	0x0346826C MOV X0, X21
	0x03468270 BL 0x2AA5018
	0x03468274 CBZ X0, 0x346839C
	0x03468278 ADRP X8, 0xC8B000
	0x0346827C LDR X8, [X8 + 0x720]
	0x03468280 LDR X9, [X0]
	0x03468284 LDR X8, [X8]
	0x03468288 LDRB W11, [X9 + 0x130]
	0x0346828C LDRB W10, [X8 + 0x130]
	0x03468290 CMP W11, W10
	0x03468294 B.CC 0x346839C
	0x03468298 LDR X9, [X9 + 0xC8]
	0x0346829C ADD X9, X9, X10, 0x3, LSL
	0x034682A0 LDUR X9, [X9 - 0x8]
	0x034682A4 CMP X9, X8
	0x034682A8 B.NE 0x346839C
	0x034682AC ADRP X8, 0xC90000
	0x034682B0 LDR X8, [X8 + 0x700]
	0x034682B4 LDR X1, [X8]
	0x034682B8 ADD X8, X31, 0x8
	0x034682BC BL 0x2AA54BC
	0x034682C0 LDUR V0, [X31 + 0x8]
	0x034682C4 LDUR V1, [X31 + 0x18]
	0x034682C8 LDR X8, [X31 + 0x28]
	0x034682CC ADRP X29, 0xC90000
	0x034682D0 LDR X29, [X29 + 0x710]
	0x034682D4 STP V0, V1, [X31 + 0x30]
	0x034682D8 STR X8, [X31 + 0x50]
	0x034682DC ADRP X24, 0xCBB000
	0x034682E0 LDR X24, [X24 + 0xAE0]
	0x034682E4 LDR X1, [X29]
	0x034682E8 ADD X0, X31, 0x30
	0x034682EC BL 0x2C0A728
	0x034682F0 TBZ X0, 0x0, 0x3468380
	0x034682F4 LDR X0, [X31 + 0x48]
	0x034682F8 CBZ X0, 0x3468428
	0x034682FC LDR X8, [X0]
	0x03468300 LDR X21, [X31 + 0x40]
	0x03468304 LDR X22, [X19 + 0x40]
	0x03468308 LDP X9, X1, [X8 + 0x168]
	0x0346830C BLR X9
	0x03468310 CBZ X22, 0x346842C
	0x03468314 LDR X8, [X22]
	0x03468318 LDR X1, [X24]
	0x0346831C MOV X23, X0
	0x03468320 LDRH W9, [X8 + 0x12E]
	0x03468324 CBZ X9, 0x3468348
	0x03468328 LDR X10, [X8 + 0xB0]
	0x0346832C ADD X10, X10, 0x8
	0x03468330 LDUR X11, [X10 - 0x8]
	0x03468334 CMP X11, X1
	0x03468338 B.EQ 0x3468358
	0x0346833C SUBS X9, X9, 0x1
	0x03468340 ADD X10, X10, 0x10
	0x03468344 B.NE 0x3468330
	0x03468348 MOVZ W2, 0x1
	0x0346834C MOV X0, X22
	0x03468350 BL 0x1C5C788
	0x03468354 B 0x3468368
	0x03468358 LDR W9, [X10]
	0x0346835C ADD W9, W9, 0x1
	0x03468360 ADD X8, X8, W9, 0x4, SXTW
	0x03468364 ADD X0, X8, 0x138
	0x03468368 LDP X8, X3, [X0]
	0x0346836C MOV X0, X22
	0x03468370 MOV X1, X21
	0x03468374 MOV X2, X23
	0x03468378 BLR X8
	0x0346837C B 0x34682E4
	0x03468380 ADRP X8, 0xC90000
	0x03468384 LDR X8, [X8 + 0x708]
	0x03468388 ADD X0, X31, 0x30
	0x0346838C LDR X1, [X8]
	0x03468390 BL 0x2C0A83C
	0x03468394 ADRP X24, 0xCC7000
	0x03468398 LDR X24, [X24 + 0xA70]
	0x0346839C MOV X0, X20
	0x034683A0 MOV X1, X31
	0x034683A4 BL 0x32277A8
	0x034683A8 TBNZ X0, 0x0, 0x3468404
	0x034683AC LDR X0, [X24]
	0x034683B0 LDR W8, [X0 + 0xE0]
	0x034683B4 CBNZ W8, 0x34683BC
	0x034683B8 BL 0x1C16DFC
	0x034683BC MOV X0, X20
	0x034683C0 BL 0x347963C
	0x034683C4 LDR X1, [X25]
	0x034683C8 BL 0x220E6DC
	0x034683CC CBZ X0, 0x3468424
	0x034683D0 LDR X1, [X27]
	0x034683D4 LDR X2, [X28]
	0x034683D8 BL 0x2AA5018

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF77000
	011 Move W8, [X20+1989]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCCA000
	018 Move X0, [X0+1080]
	019 Call 0x1C17CF4
	020 Move X0, 0xCCA000
	021 Move X0, [X0+1088]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC9000
	024 Move X0, [X0+704]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC8000
	027 Move X0, [X0+1640]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8F000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC8E000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC9000
	036 Move X0, [X0+2120]
	037 Call 0x1C17CF4
	038 Move X0, 0xC8E000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC9000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC9000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC9000
	048 Move X0, [X0+2128]
	049 Call 0x1C17CF4
	050 Move X0, 0xCCA000
	051 Move X0, [X0+1040]
	052 Call 0x1C17CF4
	053 Move X0, 0xC8E000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC8E000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCCA000
	060 Move X0, [X0+1048]
	061 Call 0x1C17CF4
	062 Move X0, 0xCCA000
	063 Move X0, [X0+1056]
	064 Call 0x1C17CF4
	065 Move X0, 0xC8E000
	066 Move X0, [X0+2112]
	067 Call 0x1C17CF4
	068 Move X0, 0xCCA000
	069 Move X0, [X0+1096]
	070 Call 0x1C17CF4
	071 Move X0, 0xCCA000
	072 Move X0, [X0+1104]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1989], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCC8000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1640]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+88]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+88], X31
	092 Move [X19], W9
	093 Move X8, [X19+80]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+80], X31
	099 Move [X19], W9
	100 Move X8, 0xC8E000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCCA000
	106 Move X8, [X8+1104]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass102_0..ctor, X0
	112 Move [X19+72], X21
	113 Compare X21, 0
	114 JumpIfEqual {382}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move X8, [X19+56]
	122 Move [X21+40], X8
	123 Compare X20, 0
	124 JumpIfEqual {383}
	125 Move W8, [X20+16]
	126 Compare W8, 0
	127 JumpIfEqual {265}
	128 Move X8, [X19+72]
	129 Compare X8, 0
	130 JumpIfEqual {384}
	131 Move X21, [X8+24]
	132 Compare X21, 0
	133 JumpIfEqual {385}
	134 Move X23, 0xC8E000
	135 Move X8, [X21]
	136 Move X23, [X23+2072]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move X1, [X23]
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 7
	148 Move X0, X21
	149 Call 0x1C5D788
	150 Move W9, [X10]
	151 Add W9, W9, 7
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X1, X31
	159 Call String.IsNullOrEmpty, X0
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {263}
	164 Move X8, [X19+72]
	165 Compare X8, 0
	166 JumpIfEqual {386}
	167 Move X9, 0xC8E000
	168 Move X9, [X9+2544]
	169 Move X21, [X8+24]
	170 Move X0, [X9]
	171 Move W9, [X0+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X31
	176 Call DateTime.get_UtcNow
	177 Move X22, 0xC8F000
	178 Move X22, [X22+2576]
	179 Move X8, X0
	180 Move [X31+40], X8
	181 Move X0, [X22]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X22]
	187 Move X8, [X0+184]
	188 Move X1, [X8]
	189 Add X0, X31, 40
	190 Move X2, X31
	191 Call DateTime.Add, X0, X1
	192 Compare X21, 0
	193 JumpIfEqual {387}
	194 Move X8, [X21]
	195 Move X1, [X23]
	196 Move X22, X0
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move W2, 11
	207 Move X0, X21
	208 Call 0x1C5D788
	209 Move W9, [X10]
	210 Add W9, W9, 11
	211 Add X8, X8, W9
	212 Add X0, X8, 312
	213 Move X8, [X0]
	214 Move X2, [X0+8]
	215 Move X0, X21
	216 Move X1, X22
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {263}
	222 Move X8, [X19+72]
	223 Compare X8, 0
	224 JumpIfEqual {388}
	225 Move X1, [X8+24]
	226 Move X3, [X19+64]
	227 Move X4, [X8+40]
	228 Move X0, X20
	229 Move X2, X31
	230 Move X5, X31
	231 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	232 Compare X0, 0
	233 JumpIfEqual {389}
	234 Move X8, 0xC8D000
	235 Move X8, [X8+2112]
	236 Move X1, [X8]
	237 Call Task`1<Object>.GetAwaiter, X0
	238 Move X8, 0xC8D000
	239 Move X8, [X8+2104]
	240 Move [X31+32], X0
	241 Move X1, [X8]
	242 Add X0, X31, 32
	243 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {100}
	248 Move [X19], W31
	249 Move X8, [X31+32]
	250 Move [X19+80], X8
	251 Move X0, [X25]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X8, 0xCC9000
	257 Move X8, [X8+1088]
	258 Add X0, X19, 8
	259 Move X3, [X8]
	260 Add X1, X31, 32
	261 Move X2, X19
	262 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	263 Compare X20, 0
	264 JumpIfEqual {381}
	265 Move X8, 0xCC8000
	266 Move X8, [X8+2120]
	267 Move X21, [X20+88]
	268 Move X23, [X19+72]
	269 Move X0, [X8]
	270 Call 0x1C17F10
	271 Move X8, 0xCC9000
	272 Move X8, [X8+1096]
	273 Move X22, X0
	274 Move X2, [X8]
	275 Move X1, X23
	276 Move X3, X31
	277 Call Func`1<Object>..ctor, X0, X1, X2
	278 Move X8, [X19+72]
	279 Compare X8, 0
	280 JumpIfEqual {378}
	281 Move X9, 0xCC8000
	282 Move X23, [X19+64]
	283 Move X9, [X9+1992]
	284 Compare X23, 0
	285 JumpIfNotEqual {287}
	286 Move X23, [X20+24]
	287 Move X20, [X8+24]
	288 Move X1, [X8+40]
	289 Move X2, [X9]
	290 Move [X31+8], X31
	291 Move [X31+16], X31
	292 Add X0, X31, 8
	293 Call Nullable`1<CancellationToken>..ctor, X0, X1
	294 Move X8, 0xCC8000
	295 Move X8, [X8+2000]
	296 Move X0, [X8]
	297 Call 0x1C17F10
	298 Move X3, [X31+8]
	299 Move X4, [X31+16]
	300 Move X24, X0
	301 Move X1, X20
	302 Move X2, X23
	303 Call RetryHistory..ctor, X0, X1, X2, X3
	304 Compare X21, 0
	305 JumpIfEqual {379}
	306 Move X8, 0xCC8000
	307 Move X8, [X8+2128]
	308 Move X3, [X8]
	309 Move X0, X21
	310 Move X1, X22
	311 Move X2, X24
	312 Call 0x2244230, X0, X1, X2
	313 Compare X0, 0
	314 JumpIfEqual {380}
	315 Move X8, 0xCC9000
	316 Move X8, [X8+1056]
	317 Move X1, [X8]
	318 Call Task`1<Object>.GetAwaiter, X0
	319 Move X8, 0xCC9000
	320 Move X8, [X8+1048]
	321 Move [X31+24], X0
	322 Move X1, [X8]
	323 Add X0, X31, 24
	324 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	325 Move TEMP, X0
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfNotEqual {352}
	329 Move X8, 0xCC9000
	330 Move X8, [X8+1040]
	331 Add X0, X31, 24
	332 Move X1, [X8]
	333 Call TaskAwaiter`1<Object>.GetResult, X0
	334 Move TEMP, 1
	335 Not TEMP
	336 Move W8, TEMP
	337 Move [X19], W8
	338 Move [X19+72], X31
	339 Move X20, X0
	340 Move X0, [X25]
	341 Move X21, 0xCC8000
	342 Add X19, X19, 8
	343 Move W8, [X0+224]
	344 Move X21, [X21+704]
	345 Compare W8, 0
	346 JumpIfNotEqual {348}
	347 Call 0x1C17DFC
	348 Move X2, [X21]
	349 Move X0, X19
	350 Move X1, X20
	351 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	352 Move W8, 1
	353 Move [X19], W8
	354 Move X8, [X31+24]
	355 Move [X19+88], X8
	356 Move X0, [X25]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X8, 0xCC9000
	362 Move X8, [X8+1080]
	363 Add X0, X19, 8
	364 Move X3, [X8]
	365 Add X1, X31, 24
	366 Move X2, X19
	367 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	368 Move X20, [X31+96]
	369 Move X19, [X31+104]
	370 Move X22, [X31+80]
	371 Move X21, [X31+88]
	372 Move X24, [X31+64]
	373 Move X23, [X31+72]
	374 Move X30, [X31+48]
	375 Move X25, [X31+56]
	376 Add X31, X31, 112
	377 Return 
	378 Call 0x1C17F20
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Move X20, X0
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X0, X20
	393 Call 0x3EB2AD0
	394 Move X20, X0
	395 Move X0, 0xC8C000
	396 Move X0, [X0+2000]
	397 Call 0x1C17D08
	398 Move X8, [X20]
	399 Move X1, [X8]
	400 Call 0x1C18270
	401 Move TEMP, X0
	402 And TEMP, TEMP, 1
	403 Compare TEMP, 1
	404 JumpIfNotEqual {426}
	405 Move X20, [X20]
	406 Call 0x3EB2AE0
	407 Move TEMP, 1
	408 Not TEMP
	409 Move W8, TEMP
	410 Move [X19+72], X31
	411 Move [X19+8], W8
	412 Move X0, 0xCC7000
	413 Move X0, [X0+1640]
	414 Call 0x1C17D08
	415 Move W8, [X0+224]
	416 Compare W8, 0
	417 JumpIfNotEqual {419}
	418 Call 0x1C17DFC
	419 Move X0, 0xCC8000
	420 Move X0, [X0+768]
	421 Call 0x1C17D08
	422 Move X2, X0
	423 Move X0, X19
	424 Move X1, X20
	425 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	426 Move W0, 8
	427 Call 0x3EB2AF0
	428 Move X8, [X20]
	429 Move [X0], X8
	430 Move X1, 0xA4D000
	431 Add X1, X1, 3672
	432 Move X2, X31
	433 Call 0x3EB2B00
	434 Move X20, X0
	435 Call 0x3EB2AE0
	436 Move X0, X20
	437 Call 0x1D2D690
	438 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034683DC LDR X8, [X26]
	0x034683E0 MOV X20, X0
	0x034683E4 LDR W9, [X8 + 0xE0]
	0x034683E8 CBNZ W9, 0x34683F4
	0x034683EC MOV X0, X8
	0x034683F0 BL 0x1C16DFC
	0x034683F4 MOV X0, X20
	0x034683F8 MOV X1, X31
	0x034683FC BL 0x3320B38
	0x03468400 STR X0, [X19 + 0x30]
	0x03468404 LDP X20, X19, [X31 + 0xB0]
	0x03468408 LDP X22, X21, [X31 + 0xA0]
	0x0346840C LDP X24, X23, [X31 + 0x90]
	0x03468410 LDP X26, X25, [X31 + 0x80]
	0x03468414 LDP X28, X27, [X31 + 0x70]
	0x03468418 LDP X29, X30, [X31 + 0x60]
	0x0346841C ADD X31, X31, 0xC0
	0x03468420 RET
	0x03468424 BL 0x1C16F20
	0x03468428 BL 0x1C16F20
	0x0346842C BL 0x1C16F20
	0x03468430 B 0x346843C
	0x03468434 B 0x346843C
	0x03468438 B 0x346843C
	0x0346843C MOV X21, X0
	0x03468440 CMP W1, 0x1
	0x03468444 B.NE 0x3468480
	0x03468448 MOV X0, X21
	0x0346844C BL 0x3EB1AD0
	0x03468450 LDR X22, [X0]
	0x03468454 BL 0x3EB1AE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF76000
	007 Move X21, 0xCC7000
	008 Move W8, [X22+1990]
	009 Move X21, [X21+1640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC8000
	017 Move X0, [X0+776]
	018 Call 0x1C17CF4
	019 Move X0, 0xCC7000
	020 Move X0, [X0+1640]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1990], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC8000
	026 Move W8, [X0+224]
	027 Move X21, [X21+776]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

