Type: Nakama.ApiClient/<ListTournamentRecordsAsync>d__84

Method: System.Void MoveNext()

Disassembly:
	0x034328CC BL 0x1C16D6C
	0x034328D0 MOV X22, X0
	0x034328D4 CBZ X0, 0x3432F24
	0x034328D8 CBZ X21, 0x34328F0
	0x034328DC LDR X8, [X22]
	0x034328E0 LDR X1, [X8 + 0x40]
	0x034328E4 MOV X0, X21
	0x034328E8 BL 0x1C16E00
	0x034328EC CBZ X0, 0x3432FC4
	0x034328F0 LDR W8, [X22 + 0x18]
	0x034328F4 CBZ W8, 0x3432F2C
	0x034328F8 STR X21, [X22 + 0x20]
	0x034328FC ADRP X21, 0xCFD000
	0x03432900 LDR X21, [X21 + 0x1F8]
	0x03432904 LDR X0, [X21]
	0x03432908 CBZ X0, 0x3432920
	0x0343290C LDR X8, [X22]
	0x03432910 LDR X1, [X8 + 0x40]
	0x03432914 BL 0x1C16E00
	0x03432918 CBZ X0, 0x3432FD0
	0x0343291C LDR W8, [X22 + 0x18]
	0x03432920 CMP W8, 0x1
	0x03432924 B.LS 0x3432F30
	0x03432928 LDR X8, [X21]
	0x0343292C ADRP X9, 0xCC2000
	0x03432930 STR X8, [X22 + 0x28]
	0x03432934 LDR X8, [X19 + 0x30]
	0x03432938 LDR X9, [X9 + 0x478]
	0x0343293C STR X8, [X31 + 0x10]
	0x03432940 LDR X0, [X9]
	0x03432944 ADD X1, X31, 0x10
	0x03432948 BL 0x1C16E04
	0x0343294C MOV X21, X0
	0x03432950 CBZ X0, 0x3432968
	0x03432954 LDR X8, [X22]
	0x03432958 LDR X1, [X8 + 0x40]
	0x0343295C MOV X0, X21
	0x03432960 BL 0x1C16E00
	0x03432964 CBZ X0, 0x3432FDC
	0x03432968 LDR W8, [X22 + 0x18]
	0x0343296C CMP W8, 0x2
	0x03432970 B.LS 0x3432F34
	0x03432974 STR X21, [X22 + 0x30]
	0x03432978 ADRP X21, 0xCCA000
	0x0343297C LDR X21, [X21 + 0x720]
	0x03432980 LDR X0, [X21]
	0x03432984 CBZ X0, 0x343299C
	0x03432988 LDR X8, [X22]
	0x0343298C LDR X1, [X8 + 0x40]
	0x03432990 BL 0x1C16E00
	0x03432994 CBZ X0, 0x3432FE8
	0x03432998 LDR W8, [X22 + 0x18]
	0x0343299C CMP W8, 0x3
	0x034329A0 B.LS 0x3432F3C
	0x034329A4 LDR X8, [X21]
	0x034329A8 STR X8, [X22 + 0x38]
	0x034329AC MOV X0, X22
	0x034329B0 MOV X1, X31
	0x034329B4 BL 0x3227578
	0x034329B8 MOV X21, X0
	0x034329BC LDRB W8, [X19 + 0x38]
	0x034329C0 CBZ W8, 0x3432AC4
	0x034329C4 ADRP X8, 0xCC1000
	0x034329C8 LDR X8, [X8 + 0x9D0]
	0x034329CC LDR X0, [X8]
	0x034329D0 MOVZ W1, 0x4
	0x034329D4 BL 0x1C16D6C
	0x034329D8 MOV X22, X0
	0x034329DC CBZ X0, 0x3432F38
	0x034329E0 CBZ X21, 0x34329F8
	0x034329E4 LDR X8, [X22]
	0x034329E8 LDR X1, [X8 + 0x40]
	0x034329EC MOV X0, X21
	0x034329F0 BL 0x1C16E00
	0x034329F4 CBZ X0, 0x3432FF4
	0x034329F8 LDR W8, [X22 + 0x18]
	0x034329FC CBZ W8, 0x3432F40
	0x03432A00 STR X21, [X22 + 0x20]
	0x03432A04 ADRP X21, 0xCFD000
	0x03432A08 LDR X21, [X21 + 0x218]
	0x03432A0C LDR X0, [X21]
	0x03432A10 CBZ X0, 0x3432A28
	0x03432A14 LDR X8, [X22]
	0x03432A18 LDR X1, [X8 + 0x40]
	0x03432A1C BL 0x1C16E00
	0x03432A20 CBZ X0, 0x3433000
	0x03432A24 LDR W8, [X22 + 0x18]
	0x03432A28 CMP W8, 0x1
	0x03432A2C B.LS 0x3432F44
	0x03432A30 LDR X8, [X21]
	0x03432A34 ADRP X9, 0xCC2000
	0x03432A38 STR X8, [X22 + 0x28]
	0x03432A3C LDR X8, [X19 + 0x38]
	0x03432A40 LDR X9, [X9 + 0x478]
	0x03432A44 STR X8, [X31 + 0x10]
	0x03432A48 LDR X0, [X9]
	0x03432A4C ADD X1, X31, 0x10
	0x03432A50 BL 0x1C16E04
	0x03432A54 MOV X21, X0
	0x03432A58 CBZ X0, 0x3432A70
	0x03432A5C LDR X8, [X22]
	0x03432A60 LDR X1, [X8 + 0x40]
	0x03432A64 MOV X0, X21
	0x03432A68 BL 0x1C16E00
	0x03432A6C CBZ X0, 0x343300C
	0x03432A70 LDR W8, [X22 + 0x18]
	0x03432A74 CMP W8, 0x2
	0x03432A78 B.LS 0x3432F48
	0x03432A7C STR X21, [X22 + 0x30]
	0x03432A80 ADRP X21, 0xCCA000
	0x03432A84 LDR X21, [X21 + 0x720]
	0x03432A88 LDR X0, [X21]
	0x03432A8C CBZ X0, 0x3432AA4
	0x03432A90 LDR X8, [X22]
	0x03432A94 LDR X1, [X8 + 0x40]
	0x03432A98 BL 0x1C16E00
	0x03432A9C CBZ X0, 0x3433018
	0x03432AA0 LDR W8, [X22 + 0x18]
	0x03432AA4 CMP W8, 0x3
	0x03432AA8 B.LS 0x3432F50
	0x03432AAC LDR X8, [X21]
	0x03432AB0 STR X8, [X22 + 0x38]
	0x03432AB4 MOV X0, X22
	0x03432AB8 MOV X1, X31
	0x03432ABC BL 0x3227578
	0x03432AC0 MOV X21, X0
	0x03432AC4 LDRB W8, [X19 + 0x40]
	0x03432AC8 CBZ W8, 0x3432BCC
	0x03432ACC ADRP X8, 0xCC1000
	0x03432AD0 LDR X8, [X8 + 0x9D0]
	0x03432AD4 LDR X0, [X8]
	0x03432AD8 MOVZ W1, 0x4
	0x03432ADC BL 0x1C16D6C
	0x03432AE0 MOV X22, X0
	0x03432AE4 CBZ X0, 0x3432F4C
	0x03432AE8 CBZ X21, 0x3432B00
	0x03432AEC LDR X8, [X22]
	0x03432AF0 LDR X1, [X8 + 0x40]
	0x03432AF4 MOV X0, X21
	0x03432AF8 BL 0x1C16E00
	0x03432AFC CBZ X0, 0x3433024
	0x03432B00 LDR W8, [X22 + 0x18]
	0x03432B04 CBZ W8, 0x3432F54
	0x03432B08 STR X21, [X22 + 0x20]
	0x03432B0C ADRP X21, 0xCFC000
	0x03432B10 LDR X21, [X21 + 0xF18]
	0x03432B14 LDR X0, [X21]
	0x03432B18 CBZ X0, 0x3432B30
	0x03432B1C LDR X8, [X22]
	0x03432B20 LDR X1, [X8 + 0x40]
	0x03432B24 BL 0x1C16E00
	0x03432B28 CBZ X0, 0x3433030
	0x03432B2C LDR W8, [X22 + 0x18]
	0x03432B30 CMP W8, 0x1
	0x03432B34 B.LS 0x3432F58
	0x03432B38 LDR X8, [X21]
	0x03432B3C ADRP X9, 0xCC2000
	0x03432B40 STR X8, [X22 + 0x28]
	0x03432B44 LDR X8, [X19 + 0x40]
	0x03432B48 LDR X9, [X9 + 0x478]
	0x03432B4C STR X8, [X31 + 0x10]
	0x03432B50 LDR X0, [X9]
	0x03432B54 ADD X1, X31, 0x10
	0x03432B58 BL 0x1C16E04
	0x03432B5C MOV X21, X0
	0x03432B60 CBZ X0, 0x3432B78
	0x03432B64 LDR X8, [X22]
	0x03432B68 LDR X1, [X8 + 0x40]
	0x03432B6C MOV X0, X21
	0x03432B70 BL 0x1C16E00
	0x03432B74 CBZ X0, 0x343303C
	0x03432B78 LDR W8, [X22 + 0x18]
	0x03432B7C CMP W8, 0x2
	0x03432B80 B.LS 0x3432F5C
	0x03432B84 STR X21, [X22 + 0x30]
	0x03432B88 ADRP X21, 0xCCA000
	0x03432B8C LDR X21, [X21 + 0x720]
	0x03432B90 LDR X0, [X21]
	0x03432B94 CBZ X0, 0x3432BAC
	0x03432B98 LDR X8, [X22]
	0x03432B9C LDR X1, [X8 + 0x40]
	0x03432BA0 BL 0x1C16E00
	0x03432BA4 CBZ X0, 0x3433048
	0x03432BA8 LDR W8, [X22 + 0x18]
	0x03432BAC CMP W8, 0x3
	0x03432BB0 B.LS 0x3432F60
	0x03432BB4 LDR X8, [X21]
	0x03432BB8 STR X8, [X22 + 0x38]
	0x03432BBC MOV X0, X22
	0x03432BC0 MOV X1, X31
	0x03432BC4 BL 0x3227578
	0x03432BC8 MOV X21, X0
	0x03432BCC LDR X22, [X19 + 0x48]
	0x03432BD0 CBZ X22, 0x3432C24
	0x03432BD4 ADRP X8, 0xCC3000
	0x03432BD8 LDR X8, [X8 + 0xA28]
	0x03432BDC LDR X0, [X8]
	0x03432BE0 LDR W8, [X0 + 0xE0]
	0x03432BE4 CBNZ W8, 0x3432BEC
	0x03432BE8 BL 0x1C16DFC
	0x03432BEC MOV X0, X22
	0x03432BF0 MOV X1, X31
	0x03432BF4 BL 0x3624D20
	0x03432BF8 ADRP X8, 0xCFC000
	0x03432BFC LDR X8, [X8 + 0xF20]
	0x03432C00 ADRP X9, 0xCCA000
	0x03432C04 LDR X9, [X9 + 0x720]
	0x03432C08 MOV X2, X0
	0x03432C0C LDR X1, [X8]
	0x03432C10 LDR X3, [X9]
	0x03432C14 MOV X0, X21
	0x03432C18 MOV X4, X31
	0x03432C1C BL 0x32277C4
	0x03432C20 MOV X21, X0
	0x03432C24 CBZ X24, 0x3432EDC
	0x03432C28 LDR X0, [X24 + 0x20]
	0x03432C2C CBZ X0, 0x3432EE0
	0x03432C30 MOV X1, X31
	0x03432C34 BL 0x361B448
	0x03432C38 ADRP X8, 0xCCA000
	0x03432C3C LDR X8, [X8 + 0x8D8]
	0x03432C40 MOV X22, X0
	0x03432C44 LDR X0, [X8]
	0x03432C48 MOVZ W1, 0x1
	0x03432C4C BL 0x1C16D6C
	0x03432C50 MOV X1, X0
	0x03432C54 CBZ X1, 0x3432EE4
	0x03432C58 LDR W8, [X1 + 0x18]
	0x03432C5C CBZ W8, 0x3432EE8
	0x03432C60 MOVZ W8, 0x2F
	0x03432C64 STRH W8, [X1 + 0x20]
	0x03432C68 CBZ X22, 0x3432EEC
	0x03432C6C MOV X0, X22
	0x03432C70 MOV X2, X31
	0x03432C74 BL 0x322BC58
	0x03432C78 MOV X1, X20
	0x03432C7C MOV X2, X31
	0x03432C80 BL 0x321B938
	0x03432C84 ADRP X8, 0xCCA000
	0x03432C88 LDR X8, [X8 + 0x3A0]
	0x03432C8C MOV X22, X0
	0x03432C90 LDR X23, [X24 + 0x20]
	0x03432C94 LDR X0, [X8]
	0x03432C98 BL 0x1C16F10
	0x03432C9C MOV X20, X0
	0x03432CA0 MOV X1, X23
	0x03432CA4 MOV X2, X31
	0x03432CA8 BL 0x36281F8
	0x03432CAC CBZ X20, 0x3432EF0
	0x03432CB0 MOV X0, X20
	0x03432CB4 MOV X1, X22
	0x03432CB8 MOV X2, X31
	0x03432CBC BL 0x36288CC
	0x03432CC0 MOV X0, X20
	0x03432CC4 MOV X1, X21
	0x03432CC8 MOV X2, X31
	0x03432CCC BL 0x3628980
	0x03432CD0 MOV X0, X20
	0x03432CD4 MOV X1, X31
	0x03432CD8 BL 0x3628A38
	0x03432CDC ADRP X8, 0xCEA000
	0x03432CE0 ADRP X9, 0xCC2000
	0x03432CE4 LDR X8, [X8 + 0x4D0]
	0x03432CE8 LDR X9, [X9 + 0x6D0]
	0x03432CEC MOV X20, X0
	0x03432CF0 LDR X21, [X8]
	0x03432CF4 LDR X0, [X9]
	0x03432CF8 BL 0x1C16F10
	0x03432CFC ADRP X8, 0xCC2000
	0x03432D00 LDR X8, [X8 + 0x6C0]
	0x03432D04 MOV X22, X0
	0x03432D08 LDR X1, [X8]
	0x03432D0C BL 0x2AA4804
	0x03432D10 ADRP X8, 0xCFC000
	0x03432D14 LDR X8, [X8 + 0x7D8]
	0x03432D18 LDR X1, [X19 + 0x58]
	0x03432D1C LDR X0, [X8]
	0x03432D20 MOV X2, X31
	0x03432D24 BL 0x321B938
	0x03432D28 CBZ X22, 0x3432EF4
	0x03432D2C ADRP X8, 0xCFC000
	0x03432D30 LDR X8, [X8 + 0x7D0]
	0x03432D34 ADRP X9, 0xCC2000
	0x03432D38 LDR X9, [X9 + 0x810]
	0x03432D3C MOV X2, X0
	0x03432D40 LDR X1, [X8]
	0x03432D44 LDR X3, [X9]
	0x03432D48 MOV X0, X22
	0x03432D4C BL 0x2AA5098
	0x03432D50 LDR X23, [X24 + 0x10]
	0x03432D54 CBZ X23, 0x3432EF8
	0x03432D58 ADRP X10, 0xCFC000
	0x03432D5C LDR X10, [X10 + 0x7B8]
	0x03432D60 LDR X8, [X23]
	0x03432D64 LDR W25, [X24 + 0x18]
	0x03432D68 LDP X26, X24, [X19 + 0x60]
	0x03432D6C LDR X1, [X10]
	0x03432D70 LDRH W9, [X8 + 0x12E]
	0x03432D74 CBZ X9, 0x3432D98
	0x03432D78 LDR X10, [X8 + 0xB0]
	0x03432D7C ADD X10, X10, 0x8
	0x03432D80 LDUR X11, [X10 - 0x8]
	0x03432D84 CMP X11, X1
	0x03432D88 B.EQ 0x3432DC0
	0x03432D8C SUBS X9, X9, 0x1
	0x03432D90 ADD X10, X10, 0x10
	0x03432D94 B.NE 0x3432D80
	0x03432D98 MOVZ W2, 0x3
	0x03432D9C MOV X0, X23
	0x03432DA0 BL 0x1C5C788
	0x03432DA4 B 0x3432DD0
	0x03432DA8 LDR X8, [X19 + 0x70]
	0x03432DAC MOVN W9, 0x0
	0x03432DB0 STR X8, [X31 + 0x18]
	0x03432DB4 STR X31, [X19 + 0x70]
	0x03432DB8 STR W9, [X19]
	0x03432DBC B 0x3432E2C
	0x03432DC0 LDR W9, [X10]
	0x03432DC4 ADD W9, W9, 0x3
	0x03432DC8 ADD X8, X8, W9, 0x4, SXTW
	0x03432DCC ADD X0, X8, 0x138
	0x03432DD0 LDP X8, X9, [X0]
	0x03432DD4 MOV X0, X23
	0x03432DD8 MOV X1, X21
	0x03432DDC MOV X2, X20
	0x03432DE0 MOV X3, X22
	0x03432DE4 MOV X4, X31
	0x03432DE8 MOV W5, W25
	0x03432DEC MOV X6, X26
	0x03432DF0 MOV X7, X24
	0x03432DF4 STR X9, [X31]
	0x03432DF8 BLR X8
	0x03432DFC CBZ X0, 0x3432EFC
	0x03432E00 ADRP X8, 0xCC4000
	0x03432E04 LDR X8, [X8 + 0x1F8]
	0x03432E08 LDR X1, [X8]
	0x03432E0C BL 0x269F5D0
	0x03432E10 ADRP X8, 0xCC4000
	0x03432E14 LDR X8, [X8 + 0x1F0]
	0x03432E18 STR X0, [X31 + 0x18]
	0x03432E1C LDR X1, [X8]
	0x03432E20 ADD X0, X31, 0x18
	0x03432E24 BL 0x2677430
	0x03432E28 TBZ X0, 0x0, 0x3432E88
	0x03432E2C ADRP X8, 0xCC4000
	0x03432E30 LDR X8, [X8 + 0x1E0]
	0x03432E34 ADD X0, X31, 0x18
	0x03432E38 LDR X1, [X8]
	0x03432E3C BL 0x2677474
	0x03432E40 ADRP X8, 0xCFD000
	0x03432E44 LDR X8, [X8 + 0x1F0]
	0x03432E48 LDR X1, [X8]
	0x03432E4C BL 0x220E6DC
	0x03432E50 MOVN W8, 0x1
	0x03432E54 STR W8, [X19], #0x8
	0x03432E58 MOV X20, X0
	0x03432E5C LDR X0, [X27]
	0x03432E60 ADRP X21, 0xCFD000
	0x03432E64 LDR W8, [X0 + 0xE0]
	0x03432E68 LDR X21, [X21 + 0x1E8]
	0x03432E6C CBNZ W8, 0x3432E74
	0x03432E70 BL 0x1C16DFC
	0x03432E74 LDR X2, [X21]
	0x03432E78 MOV X0, X19
	0x03432E7C MOV X1, X20
	0x03432E80 BL 0x26322B0
	0x03432E84 B 0x3432EC0
	0x03432E88 STR W31, [X19]
	0x03432E8C LDR X8, [X31 + 0x18]
	0x03432E90 STR X8, [X19 + 0x70]
	0x03432E94 LDR X0, [X27]
	0x03432E98 LDR W8, [X0 + 0xE0]
	0x03432E9C CBNZ W8, 0x3432EA4
	0x03432EA0 BL 0x1C16DFC
	0x03432EA4 ADRP X8, 0xCFD000
	0x03432EA8 LDR X8, [X8 + 0x1E0]
	0x03432EAC ADD X0, X19, 0x8
	0x03432EB0 LDR X3, [X8]
	0x03432EB4 ADD X1, X31, 0x18
	0x03432EB8 MOV X2, X19
	0x03432EBC BL 0x1FB4E60
	0x03432EC0 LDP X20, X19, [X31 + 0x60]
	0x03432EC4 LDP X22, X21, [X31 + 0x50]
	0x03432EC8 LDP X24, X23, [X31 + 0x40]
	0x03432ECC LDP X26, X25, [X31 + 0x30]
	0x03432ED0 LDP X30, X27, [X31 + 0x20]
	0x03432ED4 ADD X31, X31, 0x70
	0x03432ED8 RET
	0x03432EDC BL 0x1C16F20
	0x03432EE0 BL 0x1C16F20
	0x03432EE4 BL 0x1C16F20
	0x03432EE8 BL 0x1C16F28
	0x03432EEC BL 0x1C16F20
	0x03432EF0 BL 0x1C16F20
	0x03432EF4 BL 0x1C16F20
	0x03432EF8 BL 0x1C16F20
	0x03432EFC BL 0x1C16F20
	0x03432F00 BL 0x1C16F20
	0x03432F04 BL 0x1C16F28
	0x03432F08 BL 0x1C16F28
	0x03432F0C BL 0x1C16F28
	0x03432F10 BL 0x1C16F20
	0x03432F14 BL 0x1C16F28
	0x03432F18 BL 0x1C16F28
	0x03432F1C BL 0x1C16F28
	0x03432F20 BL 0x1C16F28
	0x03432F24 BL 0x1C16F20
	0x03432F28 BL 0x1C16F28
	0x03432F2C BL 0x1C16F28
	0x03432F30 BL 0x1C16F28
	0x03432F34 BL 0x1C16F28
	0x03432F38 BL 0x1C16F20
	0x03432F3C BL 0x1C16F28
	0x03432F40 BL 0x1C16F28
	0x03432F44 BL 0x1C16F28
	0x03432F48 BL 0x1C16F28
	0x03432F4C BL 0x1C16F20
	0x03432F50 BL 0x1C16F28
	0x03432F54 BL 0x1C16F28
	0x03432F58 BL 0x1C16F28
	0x03432F5C BL 0x1C16F28
	0x03432F60 BL 0x1C16F28
	0x03432F64 BL 0x1C16F44
	0x03432F68 MOV X1, X31
	0x03432F6C BL 0x1C16DEC
	0x03432F70 BL 0x1C16F44
	0x03432F74 MOV X1, X31
	0x03432F78 BL 0x1C16DEC
	0x03432F7C BL 0x1C16F44
	0x03432F80 MOV X1, X31
	0x03432F84 BL 0x1C16DEC
	0x03432F88 BL 0x1C16F44
	0x03432F8C MOV X1, X31
	0x03432F90 BL 0x1C16DEC
	0x03432F94 BL 0x1C16F44
	0x03432F98 MOV X1, X31
	0x03432F9C BL 0x1C16DEC
	0x03432FA0 BL 0x1C16F44
	0x03432FA4 MOV X1, X31
	0x03432FA8 BL 0x1C16DEC
	0x03432FAC BL 0x1C16F44
	0x03432FB0 MOV X1, X31
	0x03432FB4 BL 0x1C16DEC
	0x03432FB8 BL 0x1C16F44
	0x03432FBC MOV X1, X31
	0x03432FC0 BL 0x1C16DEC
	0x03432FC4 BL 0x1C16F44
	0x03432FC8 MOV X1, X31
	0x03432FCC BL 0x1C16DEC
	0x03432FD0 BL 0x1C16F44
	0x03432FD4 MOV X1, X31
	0x03432FD8 BL 0x1C16DEC
	0x03432FDC BL 0x1C16F44
	0x03432FE0 MOV X1, X31
	0x03432FE4 BL 0x1C16DEC
	0x03432FE8 BL 0x1C16F44
	0x03432FEC MOV X1, X31
	0x03432FF0 BL 0x1C16DEC
	0x03432FF4 BL 0x1C16F44
	0x03432FF8 MOV X1, X31
	0x03432FFC BL 0x1C16DEC
	0x03433000 BL 0x1C16F44
	0x03433004 MOV X1, X31
	0x03433008 BL 0x1C16DEC
	0x0343300C BL 0x1C16F44
	0x03433010 MOV X1, X31
	0x03433014 BL 0x1C16DEC
	0x03433018 BL 0x1C16F44
	0x0343301C MOV X1, X31
	0x03433020 BL 0x1C16DEC
	0x03433024 BL 0x1C16F44
	0x03433028 MOV X1, X31
	0x0343302C BL 0x1C16DEC
	0x03433030 BL 0x1C16F44
	0x03433034 MOV X1, X31
	0x03433038 BL 0x1C16DEC
	0x0343303C BL 0x1C16F44
	0x03433040 MOV X1, X31
	0x03433044 BL 0x1C16DEC
	0x03433048 BL 0x1C16F44
	0x0343304C MOV X1, X31
	0x03433050 BL 0x1C16DEC
	0x03433054 B 0x3433128
	0x03433058 B 0x3433128
	0x0343305C B 0x3433128
	0x03433060 B 0x3433128
	0x03433064 B 0x3433128
	0x03433068 B 0x3433128
	0x0343306C B 0x3433128
	0x03433070 B 0x3433128
	0x03433074 B 0x3433128
	0x03433078 B 0x3433128
	0x0343307C B 0x3433128
	0x03433080 B 0x3433128
	0x03433084 B 0x3433128
	0x03433088 B 0x3433128
	0x0343308C B 0x3433128
	0x03433090 B 0x3433128
	0x03433094 B 0x3433128
	0x03433098 B 0x3433128
	0x0343309C B 0x3433128
	0x034330A0 B 0x3433128
	0x034330A4 B 0x3433128
	0x034330A8 B 0x3433128
	0x034330AC B 0x3433128
	0x034330B0 B 0x3433128
	0x034330B4 B 0x3433128
	0x034330B8 B 0x3433128
	0x034330BC B 0x3433128
	0x034330C0 B 0x3433128
	0x034330C4 B 0x3433128
	0x034330C8 B 0x3433128
	0x034330CC B 0x3433128
	0x034330D0 B 0x3433128
	0x034330D4 B 0x3433128
	0x034330D8 B 0x3433128
	0x034330DC B 0x3433128
	0x034330E0 B 0x3433128
	0x034330E4 B 0x3433128
	0x034330E8 B 0x3433128
	0x034330EC B 0x3433128
	0x034330F0 B 0x3433128
	0x034330F4 B 0x3433128
	0x034330F8 B 0x3433128
	0x034330FC B 0x3433128
	0x03433100 B 0x3433128
	0x03433104 B 0x3433128
	0x03433108 B 0x3433128
	0x0343310C B 0x3433128
	0x03433110 B 0x3433128
	0x03433114 B 0x3433128
	0x03433118 B 0x3433128
	0x0343311C B 0x3433128
	0x03433120 B 0x3433128
	0x03433124 B 0x3433128
	0x03433128 MOV X20, X0
	0x0343312C CMP W1, 0x1
	0x03433130 B.NE 0x34331CC
	0x03433134 MOV X0, X20
	0x03433138 BL 0x3EB1AD0
	0x0343313C MOV X20, X0
	0x03433140 ADRP X0, 0xCC0000
	0x03433144 LDR X0, [X0 + 0x7D0]
	0x03433148 BL 0x1C16D08
	0x0343314C LDR X8, [X20]
	0x03433150 LDR X1, [X8]
	0x03433154 BL 0x1C17270
	0x03433158 TBZ X0, 0x0, 0x34331A4
	0x0343315C LDR X20, [X20]
	0x03433160 BL 0x3EB1AE0
	0x03433164 MOVN W8, 0x1
	0x03433168 STR W8, [X19], #0x8
	0x0343316C ADRP X0, 0xCFB000
	0x03433170 LDR X0, [X0 + 0x708]
	0x03433174 BL 0x1C16D08
	0x03433178 LDR W8, [X0 + 0xE0]
	0x0343317C CBNZ W8, 0x3433184
	0x03433180 BL 0x1C16DFC
	0x03433184 ADRP X0, 0xCFC000
	0x03433188 LDR X0, [X0 + 0x220]
	0x0343318C BL 0x1C16D08
	0x03433190 MOV X2, X0
	0x03433194 MOV X0, X19
	0x03433198 MOV X1, X20
	0x0343319C BL 0x26324C8
	0x034331A0 B 0x3432EC0
	0x034331A4 MOVZ W0, 0x8
	0x034331A8 BL 0x3EB1AF0
	0x034331AC LDR X8, [X20]
	0x034331B0 STR X8, [X0]
	0x034331B4 ADRP X1, 0xA81000
	0x034331B8 ADD X1, X1, 0xE58
	0x034331BC MOV X2, X31
	0x034331C0 BL 0x3EB1B00
	0x034331C4 MOV X20, X0
	0x034331C8 BL 0x3EB1AE0
	0x034331CC MOV X0, X20
	0x034331D0 BL 0x1D2C690
	0x034331D4 BL 0x1990590
	0x034331D8 STR X30, [X31 - 0x30]!
	0x034331DC STP X22, X21, [X31 + 0x10]
	0x034331E0 STP X20, X19, [X31 + 0x20]
	0x034331E4 ADRP X22, 0xFAA000
	0x034331E8 ADRP X21, 0xCFB000
	0x034331EC LDRB W8, [X22 + 0x666]
	0x034331F0 LDR X21, [X21 + 0x708]
	0x034331F4 MOV X19, X1
	0x034331F8 MOV X20, X0
	0x034331FC TBNZ X8, 0x0, 0x3433220
	0x03433200 ADRP X0, 0xCFC000
	0x03433204 LDR X0, [X0 + 0x228]
	0x03433208 BL 0x1C16CF4
	0x0343320C ADRP X0, 0xCFB000
	0x03433210 LDR X0, [X0 + 0x708]
	0x03433214 BL 0x1C16CF4
	0x03433218 MOVZ W8, 0x1
	0x0343321C STRB W8, [X22 + 0x666]
	0x03433220 LDR X0, [X21]
	0x03433224 ADRP X21, 0xCFC000
	0x03433228 LDR W8, [X0 + 0xE0]
	0x0343322C LDR X21, [X21 + 0x228]
	0x03433230 CBNZ W8, 0x3433238
	0x03433234 BL 0x1C16DFC
	0x03433238 LDR X2, [X21]
	0x0343323C ADD X0, X20, 0x8
	0x03433240 MOV X1, X19
	0x03433244 LDP X20, X19, [X31 + 0x20]
	0x03433248 LDP X22, X21, [X31 + 0x10]
	0x0343324C LDR X30, [X31], #0x30
	0x03433250 B 0x2632228
	0x03433254 SUB X31, X31, 0x70
	0x03433258 STP X30, X27, [X31 + 0x20]
	0x0343325C STP X26, X25, [X31 + 0x30]
	0x03433260 STP X24, X23, [X31 + 0x40]
	0x03433264 STP X22, X21, [X31 + 0x50]
	0x03433268 STP X20, X19, [X31 + 0x60]
	0x0343326C ADRP X20, 0xFAA000
	0x03433270 LDRB W8, [X20 + 0x667]
	0x03433274 MOV X19, X0
	0x03433278 TBNZ X8, 0x0, 0x34333C8
	0x0343327C ADRP X0, 0xCFC000
	0x03433280 LDR X0, [X0 + 0x230]
	0x03433284 BL 0x1C16CF4
	0x03433288 ADRP X0, 0xCFC000
	0x0343328C LDR X0, [X0 + 0x238]
	0x03433290 BL 0x1C16CF4
	0x03433294 ADRP X0, 0xCFB000
	0x03433298 LDR X0, [X0 + 0x790]
	0x0343329C BL 0x1C16CF4
	0x034332A0 ADRP X0, 0xCC9000
	0x034332A4 LDR X0, [X0 + 0x8D8]
	0x034332A8 BL 0x1C16CF4
	0x034332AC ADRP X0, 0xCC1000
	0x034332B0 LDR X0, [X0 + 0x810]
	0x034332B4 BL 0x1C16CF4
	0x034332B8 ADRP X0, 0xCC1000
	0x034332BC LDR X0, [X0 + 0x6C0]
	0x034332C0 BL 0x1C16CF4
	0x034332C4 ADRP X0, 0xCC1000
	0x034332C8 LDR X0, [X0 + 0x6D0]
	0x034332CC BL 0x1C16CF4
	0x034332D0 ADRP X0, 0xCFB000
	0x034332D4 LDR X0, [X0 + 0x7B8]
	0x034332D8 BL 0x1C16CF4
	0x034332DC ADRP X0, 0xCFC000
	0x034332E0 LDR X0, [X0 + 0x240]
	0x034332E4 BL 0x1C16CF4
	0x034332E8 ADRP X0, 0xCC3000
	0x034332EC LDR X0, [X0 + 0xEF8]
	0x034332F0 BL 0x1C16CF4
	0x034332F4 ADRP X0, 0xCC1000
	0x034332F8 LDR X0, [X0 + 0x478]
	0x034332FC BL 0x1C16CF4
	0x03433300 ADRP X0, 0xCC0000
	0x03433304 LDR X0, [X0 + 0x9D0]
	0x03433308 BL 0x1C16CF4
	0x0343330C ADRP X0, 0xCC3000
	0x03433310 LDR X0, [X0 + 0x1E0]
	0x03433314 BL 0x1C16CF4
	0x03433318 ADRP X0, 0xCC3000
	0x0343331C LDR X0, [X0 + 0x1F0]
	0x03433320 BL 0x1C16CF4
	0x03433324 ADRP X0, 0xCC3000
	0x03433328 LDR X0, [X0 + 0x1F8]
	0x0343332C BL 0x1C16CF4
	0x03433330 ADRP X0, 0xCC9000
	0x03433334 LDR X0, [X0 + 0x3A0]
	0x03433338 BL 0x1C16CF4
	0x0343333C ADRP X0, 0xCC2000
	0x03433340 LDR X0, [X0 + 0xA28]
	0x03433344 BL 0x1C16CF4
	0x03433348 ADRP X0, 0xCE9000
	0x0343334C LDR X0, [X0 + 0x4D0]
	0x03433350 BL 0x1C16CF4
	0x03433354 ADRP X0, 0xCFB000
	0x03433358 LDR X0, [X0 + 0xF60]
	0x0343335C BL 0x1C16CF4
	0x03433360 ADRP X0, 0xCFC000
	0x03433364 LDR X0, [X0 + 0x248]
	0x03433368 BL 0x1C16CF4
	0x0343336C ADRP X0, 0xCC9000
	0x03433370 LDR X0, [X0 + 0x720]
	0x03433374 BL 0x1C16CF4
	0x03433378 ADRP X0, 0xCFB000
	0x0343337C LDR X0, [X0 + 0x7D0]
	0x03433380 BL 0x1C16CF4
	0x03433384 ADRP X0, 0xCFB000
	0x03433388 LDR X0, [X0 + 0xF18]
	0x0343338C BL 0x1C16CF4
	0x03433390 ADRP X0, 0xCFB000
	0x03433394 LDR X0, [X0 + 0x7D8]
	0x03433398 BL 0x1C16CF4
	0x0343339C ADRP X0, 0xCC0000
	0x034333A0 LDR X0, [X0 + 0x988]
	0x034333A4 BL 0x1C16CF4
	0x034333A8 ADRP X0, 0xCFB000
	0x034333AC LDR X0, [X0 + 0xF20]
	0x034333B0 BL 0x1C16CF4
	0x034333B4 ADRP X0, 0xCFC000
	0x034333B8 LDR X0, [X0 + 0x110]
	0x034333BC BL 0x1C16CF4
	0x034333C0 MOVZ W8, 0x1
	0x034333C4 STRB W8, [X20 + 0x667]
	0x034333C8 STR X31, [X31 + 0x18]
	0x034333CC ADRP X27, 0xCFB000
	0x034333D0 LDR W8, [X19]
	0x034333D4 LDR X27, [X27 + 0x790]
	0x034333D8 CBZ W8, 0x343382C
	0x034333DC LDR X21, [X19 + 0x20]
	0x034333E0 CBZ X21, 0x3433960
	0x034333E4 ADRP X23, 0xCC2000
	0x034333E8 LDR X23, [X23 + 0xA28]
	0x034333EC ADRP X8, 0xCFC000
	0x034333F0 LDR X0, [X23]
	0x034333F4 LDR X8, [X8 + 0x248]
	0x034333F8 LDR X24, [X19 + 0x40]
	0x034333FC LDR W9, [X0 + 0xE0]
	0x03433400 LDR X20, [X8]
	0x03433404 CBNZ W9, 0x343340C
	0x03433408 BL 0x1C16DFC
	0x0343340C MOV X0, X21
	0x03433410 MOV X1, X31
	0x03433414 BL 0x3624D20
	0x03433418 CBZ X20, 0x34339A8
	0x0343341C ADRP X8, 0xCFC000
	0x03433420 LDR X8, [X8 + 0x110]
	0x03433424 MOV X2, X0
	0x03433428 LDR X1, [X8]
	0x0343342C MOV X0, X20
	0x03433430 MOV X3, X31
	0x03433434 BL 0x32293BC
	0x03433438 ADRP X8, 0xCC0000
	0x0343343C LDR X8, [X8 + 0x988]
	0x03433440 LDRB W9, [X19 + 0x28]
	0x03433444 MOV X20, X0
	0x03433448 LDR X21, [X8]
	0x0343344C CBZ W9, 0x3433550
	0x03433450 ADRP X8, 0xCC0000
	0x03433454 LDR X8, [X8 + 0x9D0]
	0x03433458 LDR X0, [X8]
	0x0343345C MOVZ W1, 0x4
	0x03433460 BL 0x1C16D6C
	0x03433464 MOV X22, X0
	0x03433468 CBZ X0, 0x34339D0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xFAC000
	015 Move W8, [X20+1635]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {122}
	021 Move X0, 0xCFE000
	022 Move X0, [X0+464]
	023 Call 0x1C17CF4
	024 Move X0, 0xCFE000
	025 Move X0, [X0+416]
	026 Call 0x1C17CF4
	027 Move X0, 0xCFD000
	028 Move X0, [X0+1840]
	029 Call 0x1C17CF4
	030 Move X0, 0xCCB000
	031 Move X0, [X0+2264]
	032 Call 0x1C17CF4
	033 Move X0, 0xCC3000
	034 Move X0, [X0+2064]
	035 Call 0x1C17CF4
	036 Move X0, 0xCC3000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0xCC3000
	040 Move X0, [X0+1744]
	041 Call 0x1C17CF4
	042 Move X0, 0xCC2000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0xCC2000
	046 Move X0, [X0+3952]
	047 Call 0x1C17CF4
	048 Move X0, 0xCC2000
	049 Move X0, [X0+3960]
	050 Call 0x1C17CF4
	051 Move X0, 0xCC2000
	052 Move X0, [X0+3608]
	053 Call 0x1C17CF4
	054 Move X0, 0xCFD000
	055 Move X0, [X0+1976]
	056 Call 0x1C17CF4
	057 Move X0, 0xCFE000
	058 Move X0, [X0+424]
	059 Call 0x1C17CF4
	060 Move X0, 0xCC5000
	061 Move X0, [X0+3832]
	062 Call 0x1C17CF4
	063 Move X0, 0xCC3000
	064 Move X0, [X0+1144]
	065 Call 0x1C17CF4
	066 Move X0, 0xCC2000
	067 Move X0, [X0+2512]
	068 Call 0x1C17CF4
	069 Move X0, 0xCC2000
	070 Move X0, [X0+2760]
	071 Call 0x1C17CF4
	072 Move X0, 0xCC5000
	073 Move X0, [X0+480]
	074 Call 0x1C17CF4
	075 Move X0, 0xCC5000
	076 Move X0, [X0+496]
	077 Call 0x1C17CF4
	078 Move X0, 0xCC5000
	079 Move X0, [X0+504]
	080 Call 0x1C17CF4
	081 Move X0, 0xCCB000
	082 Move X0, [X0+928]
	083 Call 0x1C17CF4
	084 Move X0, 0xCC4000
	085 Move X0, [X0+2600]
	086 Call 0x1C17CF4
	087 Move X0, 0xCEB000
	088 Move X0, [X0+1232]
	089 Call 0x1C17CF4
	090 Move X0, 0xCFE000
	091 Move X0, [X0+32]
	092 Call 0x1C17CF4
	093 Move X0, 0xCCB000
	094 Move X0, [X0+1824]
	095 Call 0x1C17CF4
	096 Move X0, 0xCFD000
	097 Move X0, [X0+2000]
	098 Call 0x1C17CF4
	099 Move X0, 0xCFD000
	100 Move X0, [X0+3864]
	101 Call 0x1C17CF4
	102 Move X0, 0xCFD000
	103 Move X0, [X0+2008]
	104 Call 0x1C17CF4
	105 Move X0, 0xCFD000
	106 Move X0, [X0+3184]
	107 Call 0x1C17CF4
	108 Move X0, 0xCC2000
	109 Move X0, [X0+2440]
	110 Call 0x1C17CF4
	111 Move X0, 0xCFD000
	112 Move X0, [X0+3192]
	113 Call 0x1C17CF4
	114 Move X0, 0xCFD000
	115 Move X0, [X0+3872]
	116 Call 0x1C17CF4
	117 Move X0, 0xCFE000
	118 Move X0, [X0+80]
	119 Call 0x1C17CF4
	120 Move W8, 1
	121 Move [X20+1635], W8
	122 Move [X31+40], X31
	123 Move X27, 0xCFD000
	124 Move W28, [X19]
	125 Move X27, [X27+1840]
	126 Compare W28, 0
	127 JumpIfEqual {185}
	128 Move X21, [X19+32]
	129 Compare X21, 0
	130 JumpIfEqual {617}
	131 Move X24, 0xCC4000
	132 Move X24, [X24+2600]
	133 Move X8, 0xCFD000
	134 Move X0, [X24]
	135 Move X8, [X8+3184]
	136 Move X23, [X19+72]
	137 Move W9, [X0+224]
	138 Move X20, [X8]
	139 Compare W9, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X21
	143 Move X1, X31
	144 Call Uri.EscapeDataString, X0
	145 Compare X20, 0
	146 JumpIfEqual {635}
	147 Move X8, 0xCFD000
	148 Move X8, [X8+3192]
	149 Move X2, X0
	150 Move X1, [X8]
	151 Move X0, X20
	152 Move X3, X31
	153 Call String.Replace, X0, X1, X2
	154 Move X8, 0xCC2000
	155 Move X8, [X8+2440]
	156 Move X21, [X19+40]
	157 Move X20, X0
	158 Move X29, [X8]
	159 Compare X21, 0
	160 JumpIfNotEqual {169}
	161 Move X8, 0xCC2000
	162 Move X8, [X8+2760]
	163 Move X0, [X8]
	164 Move W1, W31
	165 Call 0x1C17D6C
	166 Move X21, X0
	167 Compare X0, 0
	168 JumpIfEqual {652}
	169 Move X10, 0xCC2000
	170 Move X8, [X21]
	171 Move X10, [X10+3952]
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X1, [X10]
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move X0, X21
	183 Move W2, W31
	184 Call 0x1C5D788
	185 Move X8, [X19+104]
	186 Move TEMP, 0
	187 Not TEMP
	188 Move W9, TEMP
	189 Move [X31+40], X8
	190 Move [X19+104], X31
	191 Move [X19], W9
	192 NotImplemented "Instruction LDRSW not yet implemented."
	193 Add X8, X8, X9
	194 Add X0, X8, 312
	195 Move X8, [X0]
	196 Move X1, [X0+8]
	197 Move X0, X21
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move [X31+16], X20
	200 Move [X31+24], X23
	201 Move X27, 0xCC2000
	202 Move X20, 0xCC2000
	203 Move X25, 0xCFE000
	204 Move X26, 0xCCB000
	205 Move X27, [X27+3608]
	206 Move X20, [X20+3960]
	207 Move X25, [X25+80]
	208 Move X26, [X26+1824]
	209 Move X22, X0
	210 Move X0, X29
	211 Compare X22, 0
	212 JumpIfEqual {616}
	213 Move X8, [X22]
	214 Move X1, [X27]
	215 Move X21, X0
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 Compare X9, 0
	218 JumpIfEqual {225}
	219 Move X10, [X8+176]
	220 Add X10, X10, 8
	221 NotImplemented "Instruction LDUR not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Subtract X9, X9, 1
	224 Add X10, X10, 16
	225 Move X0, X22
	226 Move W2, W31
	227 Call 0x1C5D788
	228 NotImplemented "Instruction LDRSW not yet implemented."
	229 Add X8, X8, X9
	230 Add X0, X8, 312
	231 Move X8, [X0]
	232 Move X1, [X0+8]
	233 Move X0, X22
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {275}
	239 Move X8, [X22]
	240 Move X1, [X20]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move X0, X22
	251 Move W2, W31
	252 Call 0x1C5D788
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Add X8, X8, X9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X22
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move X23, X0
	261 Move X0, [X24]
	262 Move W8, [X0+224]
	263 Compare W8, 0
	264 JumpIfNotEqual {266}
	265 Call 0x1C17DFC
	266 Move X0, X23
	267 Move X1, X31
	268 Call Uri.EscapeDataString, X0
	269 Move X1, [X25]
	270 Move X3, [X26]
	271 Move X2, X0
	272 Move X0, X21
	273 Move X4, X31
	274 Call String.Concat, X0, X1, X2, X3
	275 Move X23, X31
	276 Move W20, 9
	277 Move X27, 0xCFD000
	278 Move X27, [X27+1840]
	279 Move TEMP, X28
	280 And TEMP, TEMP, -2147483648
	281 Compare TEMP, -2147483648
	282 JumpIfNotEqual {308}
	283 Compare X22, 0
	284 JumpIfEqual {308}
	285 Move X10, 0xCC2000
	286 Move X8, [X22]
	287 Move X10, [X10+3584]
	288 NotImplemented "Instruction LDRH not yet implemented."
	289 Move X1, [X10]
	290 Compare X9, 0
	291 JumpIfEqual {298}
	292 Move X10, [X8+176]
	293 Add X10, X10, 8
	294 NotImplemented "Instruction LDUR not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Subtract X9, X9, 1
	297 Add X10, X10, 16
	298 Move X0, X22
	299 Move W2, W31
	300 Call 0x1C5D788
	301 NotImplemented "Instruction LDRSW not yet implemented."
	302 Add X8, X8, X9
	303 Add X0, X8, 312
	304 Move X8, [X0]
	305 Move X1, [X0+8]
	306 Move X0, X22
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Compare X23, 0
	309 JumpIfNotEqual {636}
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Compare W20, 0
	312 JumpIfNotEqual {602}
	313 Move W8, [X19+48]
	314 Compare W8, 0
	315 JumpIfEqual {385}
	316 Move X8, 0xCC2000
	317 Move X8, [X8+2512]
	318 Move X0, [X8]
	319 Move W1, 4
	320 Call 0x1C17D6C
	321 Move X22, X0
	322 Compare X0, 0
	323 JumpIfEqual {647}
	324 Compare X21, 0
	325 JumpIfEqual {332}
	326 Move X8, [X22]
	327 Move X1, [X8+64]
	328 Move X0, X21
	329 Call 0x1C17E00
	330 Compare X0, 0
	331 JumpIfEqual {653}
	332 Move W8, [X22+24]
	333 Compare W8, 0
	334 JumpIfEqual {648}
	335 Move [X22+32], X21
	336 Move X20, 0xCFD000
	337 Move X20, [X20+3864]
	338 Move X0, [X20]
	339 Compare X0, 0
	340 JumpIfEqual {347}
	341 Move X8, [X22]
	342 Move X1, [X8+64]
	343 Call 0x1C17E00
	344 Compare X0, 0
	345 JumpIfEqual {656}
	346 Move W8, [X22+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X8, [X20]
	349 Move X9, 0xCC3000
	350 Move [X22+40], X8
	351 Move X8, [X19+48]
	352 Move X9, [X9+1144]
	353 Move [X31+32], X8
	354 Move X0, [X9]
	355 Add X1, X31, 32
	356 Call 0x1C17E04
	357 Move X21, X0
	358 Compare X0, 0
	359 JumpIfEqual {366}
	360 Move X8, [X22]
	361 Move X1, [X8+64]
	362 Move X0, X21
	363 Call 0x1C17E00
	364 Compare X0, 0
	365 JumpIfEqual {659}
	366 Move W8, [X22+24]
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move [X22+48], X21
	369 Move X0, [X26]
	370 Compare X0, 0
	371 JumpIfEqual {378}
	372 Move X8, [X22]
	373 Move X1, [X8+64]
	374 Call 0x1C17E00
	375 Compare X0, 0
	376 JumpIfEqual {662}
	377 Move W8, [X22+24]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move X8, [X26]
	380 Move [X22+56], X8
	381 Move X0, X22
	382 Move X1, X31
	383 Call String.Concat, X0
	384 Move X21, X0
	385 Move X22, [X19+56]
	386 Compare X22, 0
	387 JumpIfEqual {405}
	388 Move X0, [X24]
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X22
	394 Move X1, X31
	395 Call Uri.EscapeDataString, X0
	396 Move X8, 0xCFD000
	397 Move X8, [X8+3872]
	398 Move X3, [X26]
	399 Move X2, X0
	400 Move X1, [X8]
	401 Move X0, X21
	402 Move X4, X31
	403 Call String.Concat, X0, X1, X2, X3
	404 Move X21, X0
	405 Move X22, [X19+64]
	406 Compare X22, 0
	407 JumpIfEqual {425}
	408 Move X0, [X24]
	409 Move W8, [X0+224]
	410 Compare W8, 0
	411 JumpIfNotEqual {413}
	412 Call 0x1C17DFC
	413 Move X0, X22
	414 Move X1, X31
	415 Call Uri.EscapeDataString, X0
	416 Move X8, 0xCFE000
	417 Move X8, [X8+32]
	418 Move X3, [X26]
	419 Move X2, X0
	420 Move X1, [X8]
	421 Move X0, X21
	422 Move X4, X31
	423 Call String.Concat, X0, X1, X2, X3
	424 Move X21, X0
	425 Move X25, [X31+24]
	426 Compare X25, 0
	427 JumpIfEqual {638}
	428 Move X0, [X25+32]
	429 Compare X0, 0
	430 JumpIfEqual {639}
	431 Move X1, X31
	432 Call Uri.get_AbsolutePath, X0
	433 Move X8, 0xCCB000
	434 Move X8, [X8+2264]
	435 Move X22, X0
	436 Move X0, [X8]
	437 Move W1, 1
	438 Call 0x1C17D6C
	439 Move X1, X0
	440 Compare X1, 0
	441 JumpIfEqual {640}
	442 Move W8, [X1+24]
	443 Compare W8, 0
	444 JumpIfEqual {641}
	445 Move W8, 47
	446 NotImplemented "Instruction STRH not yet implemented."
	447 Compare X22, 0
	448 JumpIfEqual {642}
	449 Move X0, X22
	450 Move X2, X31
	451 Call String.TrimEnd, X0, X1
	452 Move X1, [X31+16]
	453 Move X2, X31
	454 Call String.Concat, X0, X1
	455 Move X8, 0xCCB000
	456 Move X23, [X25+32]
	457 Move X8, [X8+928]
	458 Move X22, X0
	459 Move X0, [X8]
	460 Call 0x1C17F10
	461 Move X20, X0
	462 Move X1, X23
	463 Move X2, X31
	464 Call UriBuilder..ctor, X0, X1
	465 Compare X20, 0
	466 JumpIfEqual {643}
	467 Move X0, X20
	468 Move X1, X22
	469 Move X2, X31
	470 Call UriBuilder.set_Path, X0, X1
	471 Move X0, X20
	472 Move X1, X21
	473 Move X2, X31
	474 Call UriBuilder.set_Query, X0, X1
	475 Move X0, X20
	476 Move X1, X31
	477 Call UriBuilder.get_Uri, X0
	478 Move X8, 0xCEB000
	479 Move X9, 0xCC3000
	480 Move X8, [X8+1232]
	481 Move X9, [X9+1744]
	482 Move X20, X0
	483 Move X21, [X8]
	484 Move X0, [X9]
	485 Call 0x1C17F10
	486 Move X8, 0xCC3000
	487 Move X8, [X8+1728]
	488 Move X22, X0
	489 Move X1, [X8]
	490 Call Dictionary`2<Object, Object>..ctor, X0
	491 Move X8, 0xCFD000
	492 Move X1, [X19+80]
	493 Move X8, [X8+2008]
	494 Move X0, [X8]
	495 Move X2, X31
	496 Call String.Concat, X0, X1
	497 Compare X22, 0
	498 JumpIfEqual {644}
	499 Move X8, 0xCFD000
	500 Move X8, [X8+2000]
	501 Move X9, 0xCC3000
	502 Move X9, [X9+2064]
	503 Move X2, X0
	504 Move X1, [X8]
	505 Move X3, [X9]
	506 Move X0, X22
	507 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	508 Move X24, [X25+16]
	509 Compare X24, 0
	510 JumpIfEqual {645}
	511 Move X10, 0xCFC000
	512 Move W23, [X25+24]
	513 Move X8, [X24]
	514 Move X26, [X19+88]
	515 Move X25, [X19+96]
	516 Move X10, [X10+1976]
	517 NotImplemented "Instruction LDRH not yet implemented."
	518 Move X1, [X10]
	519 Compare X9, 0
	520 JumpIfEqual {527}
	521 Move X10, [X8+176]
	522 Add X10, X10, 8
	523 NotImplemented "Instruction LDUR not yet implemented."
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Subtract X9, X9, 1
	526 Add X10, X10, 16
	527 Move W2, 3
	528 Move X0, X24
	529 Call 0x1C5D788
	530 Move W9, [X10]
	531 Add W9, W9, 3
	532 Add X8, X8, W9
	533 Add X0, X8, 312
	534 Move X8, [X0]
	535 Move X9, [X0+8]
	536 Move X0, X24
	537 Move X1, X21
	538 Move X2, X20
	539 Move X3, X22
	540 Move X4, X31
	541 Move W5, W23
	542 Move X6, X26
	543 Move X7, X25
	544 Move [X31], X9
	545 NotImplemented "Instruction BLR not yet implemented."
	546 Compare X0, 0
	547 JumpIfEqual {646}
	548 Move X8, 0xCC4000
	549 Move X8, [X8+504]
	550 Move X1, [X8]
	551 Call Task`1<Object>.GetAwaiter, X0
	552 Move X8, 0xCC4000
	553 Move X8, [X8+496]
	554 Move [X31+40], X0
	555 Move X1, [X8]
	556 Add X0, X31, 40
	557 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	558 Move TEMP, X0
	559 And TEMP, TEMP, 1
	560 Compare TEMP, 1
	561 JumpIfNotEqual {587}
	562 Move X8, 0xCC4000
	563 Move X8, [X8+480]
	564 Add X0, X31, 40
	565 Move X1, [X8]
	566 Call TaskAwaiter`1<Object>.GetResult, X0
	567 Move X8, 0xCFD000
	568 Move X8, [X8+424]
	569 Move X1, [X8]
	570 Call JsonParser.FromJson, X0
	571 Move TEMP, 1
	572 Not TEMP
	573 Move W8, TEMP
	574 Move [X19+8], W8
	575 Move X20, X0
	576 Move X0, [X27]
	577 Move X21, 0xCFD000
	578 Move W8, [X0+224]
	579 Move X21, [X21+416]
	580 Compare W8, 0
	581 JumpIfNotEqual {583}
	582 Call 0x1C17DFC
	583 Move X2, [X21]
	584 Move X0, X19
	585 Move X1, X20
	586 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	587 Move [X19], W31
	588 Move X8, [X31+40]
	589 Move [X19+104], X8
	590 Move X0, [X27]
	591 Move W8, [X0+224]
	592 Compare W8, 0
	593 JumpIfNotEqual {595}
	594 Call 0x1C17DFC
	595 Move X8, 0xCFD000
	596 Move X8, [X8+464]
	597 Add X0, X19, 8
	598 Move X3, [X8]
	599 Add X1, X31, 40
	600 Move X2, X19
	601 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	602 Move X20, [X31+128]
	603 Move X19, [X31+136]
	604 Move X22, [X31+112]
	605 Move X21, [X31+120]
	606 Move X24, [X31+96]
	607 Move X23, [X31+104]
	608 Move X26, [X31+80]
	609 Move X25, [X31+88]
	610 Move X28, [X31+64]
	611 Move X27, [X31+72]
	612 Move X29, [X31+48]
	613 Move X30, [X31+56]
	614 Add X31, X31, 144
	615 Return 
	616 Call 0x1C17F20
	617 Move X0, 0xCC9000
	618 Move X0, [X0+1400]
	619 Call 0x1C17D08
	620 Call 0x1C17F10
	621 Move X20, X0
	622 Move X0, 0xCFC000
	623 Move X0, [X0+3200]
	624 Call 0x1C17D08
	625 Move X1, X0
	626 Move X0, X20
	627 Move X2, X31
	628 Call ArgumentException..ctor, X0, X1
	629 Move X0, 0xCFD000
	630 Move X0, [X0+472]
	631 Call 0x1C17D08
	632 Move X1, X0
	633 Move X0, X20
	634 Call 0x1C17DEC
	635 Call 0x1C17F20
	636 Move X0, X23
	637 Call 0x1C17F18
	638 Call 0x1C17F20
	639 Call 0x1C17F20
	640 Call 0x1C17F20
	641 Call 0x1C17F28
	642 Call 0x1C17F20
	643 Call 0x1C17F20
	644 Call 0x1C17F20
	645 Call 0x1C17F20
	646 Call 0x1C17F20
	647 Call 0x1C17F20
	648 Call 0x1C17F28
	649 Call 0x1C17F28
	650 Call 0x1C17F28
	651 Call 0x1C17F28
	652 Call 0x1C17F20
	653 Call 0x1C17F44
	654 Move X1, X31
	655 Call 0x1C17DEC
	656 Call 0x1C17F44
	657 Move X1, X31
	658 Call 0x1C17DEC
	659 Call 0x1C17F44
	660 Move X1, X31
	661 Call 0x1C17DEC
	662 Call 0x1C17F44
	663 Move X1, X31
	664 Call 0x1C17DEC
	665 Move X20, X1
	666 Move X21, X0
	667 Move X21, X29
	668 NotImplemented "Instruction CMP not yet implemented."
	669 Call 0x3EB2AD0
	670 Move X23, [X0]
	671 Call 0x3EB2AE0
	672 Move W20, W31
	673 Move X21, X0
	674 Move X20, X1
	675 Move X23, X31
	676 Move TEMP, X28
	677 And TEMP, TEMP, -2147483648
	678 Compare TEMP, -2147483648
	679 JumpIfNotEqual {705}
	680 Compare X22, 0
	681 JumpIfEqual {705}
	682 Move X10, 0xCC1000
	683 Move X8, [X22]
	684 Move X10, [X10+3584]
	685 NotImplemented "Instruction LDRH not yet implemented."
	686 Move X1, [X10]
	687 Compare X9, 0
	688 JumpIfEqual {695}
	689 Move X10, [X8+176]
	690 Add X10, X10, 8
	691 NotImplemented "Instruction LDUR not yet implemented."
	692 NotImplemented "Instruction CMP not yet implemented."
	693 Subtract X9, X9, 1
	694 Add X10, X10, 16
	695 Move X0, X22
	696 Move W2, W31
	697 Call 0x1C5D788
	698 NotImplemented "Instruction LDRSW not yet implemented."
	699 Add X8, X8, X9
	700 Add X0, X8, 312
	701 Move X8, [X0]
	702 Move X1, [X0+8]
	703 Move X0, X22
	704 NotImplemented "Instruction BLR not yet implemented."
	705 Compare X23, 0
	706 JumpIfNotEqual {749}
	707 NotImplemented "Instruction CMP not yet implemented."
	708 Move X0, X21
	709 Call 0x3EB2AD0
	710 Move X20, X0
	711 Move X0, 0xCC1000
	712 Move X0, [X0+2000]
	713 Call 0x1C17D08
	714 Move X8, [X20]
	715 Move X1, [X8]
	716 Call 0x1C18270
	717 Move TEMP, X0
	718 And TEMP, TEMP, 1
	719 Compare TEMP, 1
	720 JumpIfNotEqual {741}
	721 Move X20, [X20]
	722 Call 0x3EB2AE0
	723 Move TEMP, 1
	724 Not TEMP
	725 Move W8, TEMP
	726 Move [X19+8], W8
	727 Move X0, 0xCFC000
	728 Move X0, [X0+1840]
	729 Call 0x1C17D08
	730 Move W8, [X0+224]
	731 Compare W8, 0
	732 JumpIfNotEqual {734}
	733 Call 0x1C17DFC
	734 Move X0, 0xCFD000
	735 Move X0, [X0+448]
	736 Call 0x1C17D08
	737 Move X2, X0
	738 Move X0, X19
	739 Move X1, X20
	740 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	741 Move W0, 8
	742 Call 0x3EB2AF0
	743 Move X8, [X20]
	744 Move [X0], X8
	745 Move X1, 0xA82000
	746 Add X1, X1, 3672
	747 Move X2, X31
	748 Call 0x3EB2B00
	749 Move X0, X23
	750 Call 0x1C17F18
	751 Move X20, X1
	752 Move X21, X0
	753 Move TEMP, X28
	754 And TEMP, TEMP, -2147483648
	755 Compare TEMP, -2147483648
	756 JumpIfEqual {680}
	757 Move X21, X0
	758 Call 0x3EB2AE0
	759 Move X0, X21
	760 Call 0x1D2D690
	761 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343346C CBZ X21, 0x3433484
	0x03433470 LDR X8, [X22]
	0x03433474 LDR X1, [X8 + 0x40]
	0x03433478 MOV X0, X21
	0x0343347C BL 0x1C16E00
	0x03433480 CBZ X0, 0x34339F8
	0x03433484 LDR W8, [X22 + 0x18]
	0x03433488 CBZ W8, 0x34339D4
	0x0343348C STR X21, [X22 + 0x20]
	0x03433490 ADRP X21, 0xCFB000
	0x03433494 LDR X21, [X21 + 0xF18]
	0x03433498 LDR X0, [X21]
	0x0343349C CBZ X0, 0x34334B4
	0x034334A0 LDR X8, [X22]
	0x034334A4 LDR X1, [X8 + 0x40]
	0x034334A8 BL 0x1C16E00
	0x034334AC CBZ X0, 0x3433A04
	0x034334B0 LDR W8, [X22 + 0x18]
	0x034334B4 CMP W8, 0x1
	0x034334B8 B.LS 0x34339D8
	0x034334BC LDR X8, [X21]
	0x034334C0 ADRP X9, 0xCC1000
	0x034334C4 STR X8, [X22 + 0x28]
	0x034334C8 LDR X8, [X19 + 0x28]
	0x034334CC LDR X9, [X9 + 0x478]
	0x034334D0 STR X8, [X31 + 0x10]
	0x034334D4 LDR X0, [X9]
	0x034334D8 ADD X1, X31, 0x10
	0x034334DC BL 0x1C16E04
	0x034334E0 MOV X21, X0
	0x034334E4 CBZ X0, 0x34334FC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFAB000
	007 Move X21, 0xCFC000
	008 Move W8, [X22+1636]
	009 Move X21, [X21+1840]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCFD000
	017 Move X0, [X0+456]
	018 Call 0x1C17CF4
	019 Move X0, 0xCFC000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1636], W8
	024 Move X0, [X21]
	025 Move X21, 0xCFD000
	026 Move W8, [X0+224]
	027 Move X21, [X21+456]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

