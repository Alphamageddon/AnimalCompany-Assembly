Type: Nakama.Client/<ListSubscriptionsAsync>d__92

Method: System.Void MoveNext()

Disassembly:
	0x03462524 MOV X0, X21
	0x03462528 MOV W2, W31
	0x0346252C BL 0x1C5C788
	0x03462530 B 0x3462540
	0x03462534 LDRSW X9, [X10]
	0x03462538 ADD X8, X8, X9, 0x4, LSL
	0x0346253C ADD X0, X8, 0x138
	0x03462540 LDP X8, X1, [X0]
	0x03462544 MOV X0, X21
	0x03462548 BLR X8
	0x0346254C CBNZ X24, 0x34629B0
	0x03462550 CMP W22, 0xB
	0x03462554 B.EQ 0x346255C
	0x03462558 CBNZ W22, 0x3462954
	0x0346255C LDR X8, [X20]
	0x03462560 ADRP X10, 0xCCE000
	0x03462564 LDRH W9, [X8 + 0x12E]
	0x03462568 LDR X10, [X10 + 0x280]
	0x0346256C LDR X1, [X10]
	0x03462570 CBZ X9, 0x3462594
	0x03462574 LDR X10, [X8 + 0xB0]
	0x03462578 ADD X10, X10, 0x8
	0x0346257C LDUR X11, [X10 - 0x8]
	0x03462580 CMP X11, X1
	0x03462584 B.EQ 0x34625A4
	0x03462588 SUBS X9, X9, 0x1
	0x0346258C ADD X10, X10, 0x10
	0x03462590 B.NE 0x346257C
	0x03462594 MOVZ W2, 0x1
	0x03462598 MOV X0, X20
	0x0346259C BL 0x1C5C788
	0x034625A0 B 0x34625B4
	0x034625A4 LDR W9, [X10]
	0x034625A8 ADD W9, W9, 0x1
	0x034625AC ADD X8, X8, W9, 0x4, SXTW
	0x034625B0 ADD X0, X8, 0x138
	0x034625B4 LDP X8, X1, [X0]
	0x034625B8 MOV X0, X20
	0x034625BC BLR X8
	0x034625C0 MOV X21, X0
	0x034625C4 CBZ X0, 0x34629C8
	0x034625C8 LDR X8, [X21]
	0x034625CC ADRP X10, 0xCCE000
	0x034625D0 LDRH W9, [X8 + 0x12E]
	0x034625D4 LDR X10, [X10 + 0x110]
	0x034625D8 LDR X1, [X10]
	0x034625DC CBZ X9, 0x3462600
	0x034625E0 LDR X10, [X8 + 0xB0]
	0x034625E4 ADD X10, X10, 0x8
	0x034625E8 LDUR X11, [X10 - 0x8]
	0x034625EC CMP X11, X1
	0x034625F0 B.EQ 0x3462610
	0x034625F4 SUBS X9, X9, 0x1
	0x034625F8 ADD X10, X10, 0x10
	0x034625FC B.NE 0x34625E8
	0x03462600 MOV X0, X21
	0x03462604 MOV W2, W31
	0x03462608 BL 0x1C5C788
	0x0346260C B 0x346261C
	0x03462610 LDRSW X9, [X10]
	0x03462614 ADD X8, X8, X9, 0x4, LSL
	0x03462618 ADD X0, X8, 0x138
	0x0346261C LDP X8, X1, [X0]
	0x03462620 MOV X0, X21
	0x03462624 BLR X8
	0x03462628 MOV X21, X0
	0x0346262C CBZ X0, 0x34629CC
	0x03462630 ADRP X24, 0xC91000
	0x03462634 ADRP X26, 0xCCE000
	0x03462638 ADRP X27, 0xC92000
	0x0346263C ADRP X28, 0xCCE000
	0x03462640 ADRP X29, 0xCCE000
	0x03462644 LDR X24, [X24 + 0xE18]
	0x03462648 LDR X26, [X26 + 0x118]
	0x0346264C LDR X27, [X27 + 0x818]
	0x03462650 LDR X28, [X28 + 0x108]
	0x03462654 LDR X29, [X29 + 0xE0]
	0x03462658 LDR X8, [X21]
	0x0346265C LDR X1, [X24]
	0x03462660 LDRH W9, [X8 + 0x12E]
	0x03462664 CBZ X9, 0x3462688
	0x03462668 LDR X10, [X8 + 0xB0]
	0x0346266C ADD X10, X10, 0x8
	0x03462670 LDUR X11, [X10 - 0x8]
	0x03462674 CMP X11, X1
	0x03462678 B.EQ 0x3462698
	0x0346267C SUBS X9, X9, 0x1
	0x03462680 ADD X10, X10, 0x10
	0x03462684 B.NE 0x3462670
	0x03462688 MOV X0, X21
	0x0346268C MOV W2, W31
	0x03462690 BL 0x1C5C788
	0x03462694 B 0x34626A4
	0x03462698 LDRSW X9, [X10]
	0x0346269C ADD X8, X8, X9, 0x4, LSL
	0x034626A0 ADD X0, X8, 0x138
	0x034626A4 LDP X8, X1, [X0]
	0x034626A8 MOV X0, X21
	0x034626AC BLR X8
	0x034626B0 TBZ X0, 0x0, 0x3462898
	0x034626B4 LDR X8, [X21]
	0x034626B8 LDR X1, [X26]
	0x034626BC LDRH W9, [X8 + 0x12E]
	0x034626C0 CBZ X9, 0x34626E4
	0x034626C4 LDR X10, [X8 + 0xB0]
	0x034626C8 ADD X10, X10, 0x8
	0x034626CC LDUR X11, [X10 - 0x8]
	0x034626D0 CMP X11, X1
	0x034626D4 B.EQ 0x34626F4
	0x034626D8 SUBS X9, X9, 0x1
	0x034626DC ADD X10, X10, 0x10
	0x034626E0 B.NE 0x34626CC
	0x034626E4 MOV X0, X21
	0x034626E8 MOV W2, W31
	0x034626EC BL 0x1C5C788
	0x034626F0 B 0x3462700
	0x034626F4 LDRSW X9, [X10]
	0x034626F8 ADD X8, X8, X9, 0x4, LSL
	0x034626FC ADD X0, X8, 0x138
	0x03462700 LDP X8, X1, [X0]
	0x03462704 MOV X0, X21
	0x03462708 BLR X8
	0x0346270C LDR X8, [X19 + 0x70]
	0x03462710 CBZ X8, 0x346298C
	0x03462714 LDR X23, [X8 + 0x18]
	0x03462718 CBZ X23, 0x3462990
	0x0346271C LDR X8, [X23]
	0x03462720 LDR X1, [X27]
	0x03462724 MOV X22, X0
	0x03462728 LDRH W9, [X8 + 0x12E]
	0x0346272C CBZ X9, 0x3462750
	0x03462730 LDR X10, [X8 + 0xB0]
	0x03462734 ADD X10, X10, 0x8
	0x03462738 LDUR X11, [X10 - 0x8]
	0x0346273C CMP X11, X1
	0x03462740 B.EQ 0x3462760
	0x03462744 SUBS X9, X9, 0x1
	0x03462748 ADD X10, X10, 0x10
	0x0346274C B.NE 0x3462738
	0x03462750 MOVZ W2, 0xA
	0x03462754 MOV X0, X23
	0x03462758 BL 0x1C5C788
	0x0346275C B 0x3462770
	0x03462760 LDR W9, [X10]
	0x03462764 ADD W9, W9, 0xA
	0x03462768 ADD X8, X8, W9, 0x4, SXTW
	0x0346276C ADD X0, X8, 0x138
	0x03462770 LDP X8, X1, [X0]
	0x03462774 MOV X0, X23
	0x03462778 BLR X8
	0x0346277C CBZ X22, 0x3462984
	0x03462780 LDR X8, [X22]
	0x03462784 LDR X1, [X28]
	0x03462788 MOV X23, X0
	0x0346278C LDRH W9, [X8 + 0x12E]
	0x03462790 CBZ X9, 0x34627B4
	0x03462794 LDR X10, [X8 + 0xB0]
	0x03462798 ADD X10, X10, 0x8
	0x0346279C LDUR X11, [X10 - 0x8]
	0x034627A0 CMP X11, X1
	0x034627A4 B.EQ 0x34627C4
	0x034627A8 SUBS X9, X9, 0x1
	0x034627AC ADD X10, X10, 0x10
	0x034627B0 B.NE 0x346279C
	0x034627B4 MOVZ W2, 0x6
	0x034627B8 MOV X0, X22
	0x034627BC BL 0x1C5C788
	0x034627C0 B 0x34627D4
	0x034627C4 LDR W9, [X10]
	0x034627C8 ADD W9, W9, 0x6
	0x034627CC ADD X8, X8, W9, 0x4, SXTW
	0x034627D0 ADD X0, X8, 0x138
	0x034627D4 LDP X8, X1, [X0]
	0x034627D8 MOV X0, X22
	0x034627DC BLR X8
	0x034627E0 MOV X1, X0
	0x034627E4 CBZ X23, 0x3462988
	0x034627E8 MOV X0, X23
	0x034627EC MOV X2, X31
	0x034627F0 BL 0x322693C
	0x034627F4 TBZ X0, 0x0, 0x3462658
	0x034627F8 LDR X9, [X22]
	0x034627FC LDR X8, [X29]
	0x03462800 LDRB W11, [X9 + 0x130]
	0x03462804 LDRB W10, [X8 + 0x130]
	0x03462808 CMP W11, W10
	0x0346280C B.CC 0x3462658
	0x03462810 LDR X9, [X9 + 0xC8]
	0x03462814 ADD X9, X9, X10, 0x3, LSL
	0x03462818 LDUR X9, [X9 - 0x8]
	0x0346281C CMP X9, X8
	0x03462820 B.NE 0x3462658
	0x03462824 LDR X8, [X19 + 0x70]
	0x03462828 CBZ X8, 0x346299C
	0x0346282C LDR X23, [X8 + 0x18]
	0x03462830 CBZ X23, 0x34629A0
	0x03462834 LDR X8, [X23]
	0x03462838 LDR X1, [X27]
	0x0346283C LDRH W9, [X8 + 0x12E]
	0x03462840 CBZ X9, 0x3462864
	0x03462844 LDR X10, [X8 + 0xB0]
	0x03462848 ADD X10, X10, 0x8
	0x0346284C LDUR X11, [X10 - 0x8]
	0x03462850 CMP X11, X1
	0x03462854 B.EQ 0x3462874
	0x03462858 SUBS X9, X9, 0x1
	0x0346285C ADD X10, X10, 0x10
	0x03462860 B.NE 0x346284C
	0x03462864 MOVZ W2, 0x9
	0x03462868 MOV X0, X23
	0x0346286C BL 0x1C5C788
	0x03462870 B 0x3462884
	0x03462874 LDR W9, [X10]
	0x03462878 ADD W9, W9, 0x9
	0x0346287C ADD X8, X8, W9, 0x4, SXTW
	0x03462880 ADD X0, X8, 0x138
	0x03462884 LDP X8, X1, [X0]
	0x03462888 MOV X0, X23
	0x0346288C BLR X8
	0x03462890 STR X0, [X22 + 0x68]
	0x03462894 B 0x3462658
	0x03462898 MOV X24, X31
	0x0346289C MOVZ W22, 0xE
	0x034628A0 TBZ X25, 0x1F, 0x3462908
	0x034628A4 CBZ X21, 0x3462908
	0x034628A8 ADRP X10, 0xC91000
	0x034628AC LDR X8, [X21]
	0x034628B0 LDR X10, [X10 + 0xE00]
	0x034628B4 LDRH W9, [X8 + 0x12E]
	0x034628B8 LDR X1, [X10]
	0x034628BC CBZ X9, 0x34628E0
	0x034628C0 LDR X10, [X8 + 0xB0]
	0x034628C4 ADD X10, X10, 0x8
	0x034628C8 LDUR X11, [X10 - 0x8]
	0x034628CC CMP X11, X1
	0x034628D0 B.EQ 0x34628F0
	0x034628D4 SUBS X9, X9, 0x1
	0x034628D8 ADD X10, X10, 0x10
	0x034628DC B.NE 0x34628C8
	0x034628E0 MOV X0, X21
	0x034628E4 MOV W2, W31
	0x034628E8 BL 0x1C5C788
	0x034628EC B 0x34628FC
	0x034628F0 LDRSW X9, [X10]
	0x034628F4 ADD X8, X8, X9, 0x4, LSL
	0x034628F8 ADD X0, X8, 0x138
	0x034628FC LDP X8, X1, [X0]
	0x03462900 MOV X0, X21
	0x03462904 BLR X8
	0x03462908 CBNZ X24, 0x34629D0
	0x0346290C CBZ W22, 0x3462918
	0x03462910 CMP W22, 0xE
	0x03462914 B.NE 0x3462954
	0x03462918 MOVN W8, 0x1
	0x0346291C STR X31, [X19 + 0x70]
	0x03462920 STR W8, [X19], #0x8
	0x03462924 ADRP X8, 0xCCC000
	0x03462928 LDR X8, [X8 + 0x730]
	0x0346292C LDR X0, [X8]
	0x03462930 LDR W8, [X0 + 0xE0]
	0x03462934 CBNZ W8, 0x346293C
	0x03462938 BL 0x1C16DFC
	0x0346293C ADRP X8, 0xCCD000
	0x03462940 LDR X8, [X8 + 0x1A0]
	0x03462944 MOV X0, X19
	0x03462948 MOV X1, X20
	0x0346294C LDR X2, [X8]
	0x03462950 BL 0x26322B0
	0x03462954 LDP X20, X19, [X31 + 0x80]
	0x03462958 LDP X22, X21, [X31 + 0x70]
	0x0346295C LDP X24, X23, [X31 + 0x60]
	0x03462960 LDP X26, X25, [X31 + 0x50]
	0x03462964 LDP X28, X27, [X31 + 0x40]
	0x03462968 LDP X29, X30, [X31 + 0x30]
	0x0346296C ADD X31, X31, 0x90
	0x03462970 RET
	0x03462974 BL 0x1C16F20
	0x03462978 BL 0x1C16F20
	0x0346297C BL 0x1C16F20
	0x03462980 BL 0x1C16F20
	0x03462984 BL 0x1C16F20
	0x03462988 BL 0x1C16F20
	0x0346298C BL 0x1C16F20
	0x03462990 BL 0x1C16F20
	0x03462994 BL 0x1C16F20
	0x03462998 BL 0x1C16F20
	0x0346299C BL 0x1C16F20
	0x034629A0 BL 0x1C16F20
	0x034629A4 BL 0x1C16F20
	0x034629A8 BL 0x1C16F20
	0x034629AC BL 0x1C16F20
	0x034629B0 MOV X0, X24
	0x034629B4 BL 0x1C16F18
	0x034629B8 BL 0x1C16F20
	0x034629BC BL 0x1C16F20
	0x034629C0 BL 0x1C16F20
	0x034629C4 BL 0x1C16F20
	0x034629C8 BL 0x1C16F20
	0x034629CC BL 0x1C16F20
	0x034629D0 MOV X0, X24
	0x034629D4 BL 0x1C16F18
	0x034629D8 BL 0x1C16F20
	0x034629DC BL 0x1C16F20
	0x034629E0 BL 0x1C16F20
	0x034629E4 BL 0x1C16F20
	0x034629E8 BL 0x1C16F20
	0x034629EC BL 0x1C16F20
	0x034629F0 BL 0x1C16F20
	0x034629F4 BL 0x1C16F20
	0x034629F8 BL 0x1C16F20
	0x034629FC B 0x3462AA8
	0x03462A00 B 0x3462AA8
	0x03462A04 B 0x3462AA8
	0x03462A08 B 0x3462AA8
	0x03462A0C B 0x3462AA8
	0x03462A10 B 0x3462AA8
	0x03462A14 B 0x3462AA8
	0x03462A18 B 0x3462AA8
	0x03462A1C B 0x3462AA8
	0x03462A20 B 0x3462AA8
	0x03462A24 B 0x3462AA8
	0x03462A28 B 0x3462AA8
	0x03462A2C B 0x3462AA8
	0x03462A30 B 0x3462AA8
	0x03462A34 B 0x3462AA8
	0x03462A38 B 0x3462AA8
	0x03462A3C B 0x3462AA8
	0x03462A40 B 0x3462AA8
	0x03462A44 B 0x3462AA8
	0x03462A48 B 0x3462AA8
	0x03462A4C B 0x3462AF0
	0x03462A50 B 0x3462AA8
	0x03462A54 B 0x3462AA8
	0x03462A58 B 0x3462AA8
	0x03462A5C B 0x3462AA8
	0x03462A60 B 0x3462AA8
	0x03462A64 B 0x3462AA8
	0x03462A68 B 0x3462BB0
	0x03462A6C B 0x3462AA8
	0x03462A70 B 0x3462AA8
	0x03462A74 B 0x3462AA8
	0x03462A78 B 0x3462AA8
	0x03462A7C B 0x3462AA8
	0x03462A80 B 0x3462AA8
	0x03462A84 B 0x3462AA8
	0x03462A88 B 0x3462AA8
	0x03462A8C B 0x3462AF0
	0x03462A90 B 0x3462AF0
	0x03462A94 B 0x3462AA8
	0x03462A98 B 0x3462AA8
	0x03462A9C B 0x3462AA8
	0x03462AA0 B 0x3462BB0
	0x03462AA4 B 0x3462BB0
	0x03462AA8 MOV X22, X1
	0x03462AAC MOV X23, X0
	0x03462AB0 B 0x3462C4C
	0x03462AB4 B 0x3462AF0
	0x03462AB8 B 0x3462BB0
	0x03462ABC B 0x3462AF0
	0x03462AC0 B 0x3462AF0
	0x03462AC4 B 0x3462AF0
	0x03462AC8 B 0x3462AF0
	0x03462ACC B 0x3462AF0
	0x03462AD0 B 0x3462BB0
	0x03462AD4 B 0x3462BB0
	0x03462AD8 B 0x3462BB0
	0x03462ADC B 0x3462BB0
	0x03462AE0 B 0x3462BB0
	0x03462AE4 B 0x3462AF0
	0x03462AE8 B 0x3462AF0
	0x03462AEC B 0x3462AF0
	0x03462AF0 MOV X22, X1
	0x03462AF4 MOV X23, X0
	0x03462AF8 CMP W22, 0x1
	0x03462AFC B.NE 0x3462B1C
	0x03462B00 MOV X0, X23
	0x03462B04 BL 0x3EB1AD0
	0x03462B08 LDR X24, [X0]
	0x03462B0C BL 0x3EB1AE0
	0x03462B10 MOV W22, W31
	0x03462B14 TBNZ X25, 0x1F, 0x34628A4
	0x03462B18 B 0x3462908
	0x03462B1C MOV X24, X31
	0x03462B20 TBZ X25, 0x1F, 0x3462B88
	0x03462B24 CBZ X21, 0x3462B88
	0x03462B28 ADRP X10, 0xC91000
	0x03462B2C LDR X8, [X21]
	0x03462B30 LDR X10, [X10 + 0xE00]
	0x03462B34 LDRH W9, [X8 + 0x12E]
	0x03462B38 LDR X1, [X10]
	0x03462B3C CBZ X9, 0x3462B60
	0x03462B40 LDR X10, [X8 + 0xB0]
	0x03462B44 ADD X10, X10, 0x8
	0x03462B48 LDUR X11, [X10 - 0x8]
	0x03462B4C CMP X11, X1
	0x03462B50 B.EQ 0x3462B70
	0x03462B54 SUBS X9, X9, 0x1
	0x03462B58 ADD X10, X10, 0x10
	0x03462B5C B.NE 0x3462B48
	0x03462B60 MOV X0, X21
	0x03462B64 MOV W2, W31
	0x03462B68 BL 0x1C5C788
	0x03462B6C B 0x3462B7C
	0x03462B70 LDRSW X9, [X10]
	0x03462B74 ADD X8, X8, X9, 0x4, LSL
	0x03462B78 ADD X0, X8, 0x138
	0x03462B7C LDP X8, X1, [X0]
	0x03462B80 MOV X0, X21
	0x03462B84 BLR X8
	0x03462B88 CBZ X24, 0x3462C4C
	0x03462B8C MOV X0, X24
	0x03462B90 BL 0x1C16F18
	0x03462B94 MOV X22, X1
	0x03462B98 MOV X23, X0
	0x03462B9C TBNZ X25, 0x1F, 0x3462B24
	0x03462BA0 B 0x3462B88
	0x03462BA4 B 0x3462BB0
	0x03462BA8 B 0x3462BB0
	0x03462BAC B 0x3462BB0
	0x03462BB0 MOV X22, X1
	0x03462BB4 MOV X23, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF7C000
	011 Move W8, [X20+1971]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCCF000
	018 Move X0, [X0+544]
	019 Call 0x1C17CF4
	020 Move X0, 0xCCF000
	021 Move X0, [X0+552]
	022 Call 0x1C17CF4
	023 Move X0, 0xCCE000
	024 Move X0, [X0+360]
	025 Call 0x1C17CF4
	026 Move X0, 0xCCD000
	027 Move X0, [X0+1384]
	028 Call 0x1C17CF4
	029 Move X0, 0xC94000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC93000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCF000
	036 Move X0, [X0+560]
	037 Call 0x1C17CF4
	038 Move X0, 0xC93000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCCE000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCCE000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCCF000
	048 Move X0, [X0+568]
	049 Call 0x1C17CF4
	050 Move X0, 0xCCF000
	051 Move X0, [X0+576]
	052 Call 0x1C17CF4
	053 Move X0, 0xC93000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC93000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCCF000
	060 Move X0, [X0+584]
	061 Call 0x1C17CF4
	062 Move X0, 0xC93000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCCF000
	066 Move X0, [X0+592]
	067 Call 0x1C17CF4
	068 Move X0, 0xCCF000
	069 Move X0, [X0+600]
	070 Call 0x1C17CF4
	071 Move X0, 0xCCF000
	072 Move X0, [X0+608]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1971], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCCD000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1384]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+96]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+96], X31
	092 Move [X19], W9
	093 Move X8, [X19+88]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+88], X31
	099 Move [X19], W9
	100 Move X8, 0xC93000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCCF000
	106 Move X8, [X8+608]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass92_0..ctor, X0
	112 Move [X19+80], X21
	113 Compare X21, 0
	114 JumpIfEqual {385}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move X8, [X19+48]
	120 Move [X21+32], X8
	121 Move W8, [X19+56]
	122 Move [X21+40], W8
	123 Move X8, [X19+64]
	124 Move [X21+48], X8
	125 Compare X20, 0
	126 JumpIfEqual {386}
	127 Move W8, [X20+16]
	128 Compare W8, 0
	129 JumpIfEqual {267}
	130 Move X8, [X19+80]
	131 Compare X8, 0
	132 JumpIfEqual {387}
	133 Move X21, [X8+24]
	134 Compare X21, 0
	135 JumpIfEqual {388}
	136 Move X23, 0xC93000
	137 Move X8, [X21]
	138 Move X23, [X23+2072]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X23]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 7
	150 Move X0, X21
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 7
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {265}
	166 Move X8, [X19+80]
	167 Compare X8, 0
	168 JumpIfEqual {389}
	169 Move X9, 0xC93000
	170 Move X9, [X9+2544]
	171 Move X21, [X8+24]
	172 Move X0, [X9]
	173 Move W9, [X0+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X31
	178 Call DateTime.get_UtcNow
	179 Move X22, 0xC94000
	180 Move X22, [X22+2576]
	181 Move X8, X0
	182 Move [X31+40], X8
	183 Move X0, [X22]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X22]
	189 Move X8, [X0+184]
	190 Move X1, [X8]
	191 Add X0, X31, 40
	192 Move X2, X31
	193 Call DateTime.Add, X0, X1
	194 Compare X21, 0
	195 JumpIfEqual {390}
	196 Move X8, [X21]
	197 Move X1, [X23]
	198 Move X22, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move W2, 11
	209 Move X0, X21
	210 Call 0x1C5D788
	211 Move W9, [X10]
	212 Add W9, W9, 11
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X21
	218 Move X1, X22
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {265}
	224 Move X8, [X19+80]
	225 Compare X8, 0
	226 JumpIfEqual {391}
	227 Move X1, [X8+24]
	228 Move X3, [X19+72]
	229 Move X4, [X8+48]
	230 Move X0, X20
	231 Move X2, X31
	232 Move X5, X31
	233 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	234 Compare X0, 0
	235 JumpIfEqual {392}
	236 Move X8, 0xC93000
	237 Move X8, [X8+2112]
	238 Move X1, [X8]
	239 Call Task`1<Object>.GetAwaiter, X0
	240 Move X8, 0xC93000
	241 Move X8, [X8+2104]
	242 Move [X31+32], X0
	243 Move X1, [X8]
	244 Add X0, X31, 32
	245 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {100}
	250 Move [X19], W31
	251 Move X8, [X31+32]
	252 Move [X19+88], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xCCF000
	259 Move X8, [X8+552]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 32
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Compare X20, 0
	266 JumpIfEqual {384}
	267 Move X8, 0xCCF000
	268 Move X8, [X8+560]
	269 Move X21, [X20+88]
	270 Move X23, [X19+80]
	271 Move X0, [X8]
	272 Call 0x1C17F10
	273 Move X8, 0xCCF000
	274 Move X8, [X8+600]
	275 Move X22, X0
	276 Move X2, [X8]
	277 Move X1, X23
	278 Move X3, X31
	279 Call Func`1<Object>..ctor, X0, X1, X2
	280 Move X8, [X19+80]
	281 Compare X8, 0
	282 JumpIfEqual {381}
	283 Move X9, 0xCCE000
	284 Move X23, [X19+72]
	285 Move X9, [X9+1992]
	286 Compare X23, 0
	287 JumpIfNotEqual {289}
	288 Move X23, [X20+24]
	289 Move X20, [X8+24]
	290 Move X1, [X8+48]
	291 Move X2, [X9]
	292 Move [X31+8], X31
	293 Move [X31+16], X31
	294 Add X0, X31, 8
	295 Call Nullable`1<CancellationToken>..ctor, X0, X1
	296 Move X8, 0xCCE000
	297 Move X8, [X8+2000]
	298 Move X0, [X8]
	299 Call 0x1C17F10
	300 Move X3, [X31+8]
	301 Move X4, [X31+16]
	302 Move X24, X0
	303 Move X1, X20
	304 Move X2, X23
	305 Move X5, X31
	306 Call RetryHistory..ctor, X0, X1, X2, X3
	307 Compare X21, 0
	308 JumpIfEqual {382}
	309 Move X8, 0xCCF000
	310 Move X8, [X8+568]
	311 Move X3, [X8]
	312 Move X0, X21
	313 Move X1, X22
	314 Move X2, X24
	315 Call 0x2244230, X0, X1, X2
	316 Compare X0, 0
	317 JumpIfEqual {383}
	318 Move X8, 0xCCF000
	319 Move X8, [X8+592]
	320 Move X1, [X8]
	321 Call Task`1<Object>.GetAwaiter, X0
	322 Move X8, 0xCCF000
	323 Move X8, [X8+584]
	324 Move [X31+24], X0
	325 Move X1, [X8]
	326 Add X0, X31, 24
	327 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {355}
	332 Move X8, 0xCCF000
	333 Move X8, [X8+576]
	334 Add X0, X31, 24
	335 Move X1, [X8]
	336 Call TaskAwaiter`1<Object>.GetResult, X0
	337 Move TEMP, 1
	338 Not TEMP
	339 Move W8, TEMP
	340 Move [X19], W8
	341 Move [X19+80], X31
	342 Move X20, X0
	343 Move X0, [X25]
	344 Move X21, 0xCCE000
	345 Add X19, X19, 8
	346 Move W8, [X0+224]
	347 Move X21, [X21+360]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X2, [X21]
	352 Move X0, X19
	353 Move X1, X20
	354 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	355 Move W8, 1
	356 Move [X19], W8
	357 Move X8, [X31+24]
	358 Move [X19+96], X8
	359 Move X0, [X25]
	360 Move W8, [X0+224]
	361 Compare W8, 0
	362 JumpIfNotEqual {364}
	363 Call 0x1C17DFC
	364 Move X8, 0xCCF000
	365 Move X8, [X8+544]
	366 Add X0, X19, 8
	367 Move X3, [X8]
	368 Add X1, X31, 24
	369 Move X2, X19
	370 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	371 Move X20, [X31+96]
	372 Move X19, [X31+104]
	373 Move X22, [X31+80]
	374 Move X21, [X31+88]
	375 Move X24, [X31+64]
	376 Move X23, [X31+72]
	377 Move X30, [X31+48]
	378 Move X25, [X31+56]
	379 Add X31, X31, 112
	380 Return 
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Move X20, X0
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move X0, X20
	396 Call 0x3EB2AD0
	397 Move X20, X0
	398 Move X0, 0xC92000
	399 Move X0, [X0+2000]
	400 Call 0x1C17D08
	401 Move X8, [X20]
	402 Move X1, [X8]
	403 Call 0x1C18270
	404 Move TEMP, X0
	405 And TEMP, TEMP, 1
	406 Compare TEMP, 1
	407 JumpIfNotEqual {429}
	408 Move X20, [X20]
	409 Call 0x3EB2AE0
	410 Move TEMP, 1
	411 Not TEMP
	412 Move W8, TEMP
	413 Move [X19+80], X31
	414 Move [X19+8], W8
	415 Move X0, 0xCCD000
	416 Move X0, [X0+1384]
	417 Call 0x1C17D08
	418 Move W8, [X0+224]
	419 Compare W8, 0
	420 JumpIfNotEqual {422}
	421 Call 0x1C17DFC
	422 Move X0, 0xCCE000
	423 Move X0, [X0+392]
	424 Call 0x1C17D08
	425 Move X2, X0
	426 Move X0, X19
	427 Move X1, X20
	428 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	429 Move W0, 8
	430 Call 0x3EB2AF0
	431 Move X8, [X20]
	432 Move [X0], X8
	433 Move X1, 0xA53000
	434 Add X1, X1, 3672
	435 Move X2, X31
	436 Call 0x3EB2B00
	437 Move X20, X0
	438 Call 0x3EB2AE0
	439 Move X0, X20
	440 Call 0x1D2D690
	441 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03462BB8 CMP W22, 0x1
	0x03462BBC B.NE 0x3462BDC
	0x03462BC0 MOV X0, X23
	0x03462BC4 BL 0x3EB1AD0
	0x03462BC8 LDR X24, [X0]
	0x03462BCC BL 0x3EB1AE0
	0x03462BD0 MOV W22, W31
	0x03462BD4 TBNZ X25, 0x1F, 0x34624E8
	0x03462BD8 B 0x346254C
	0x03462BDC MOV X24, X31
	0x03462BE0 TBZ X25, 0x1F, 0x3462C48
	0x03462BE4 CBZ X21, 0x3462C48
	0x03462BE8 ADRP X10, 0xC91000
	0x03462BEC LDR X8, [X21]
	0x03462BF0 LDR X10, [X10 + 0xE00]
	0x03462BF4 LDRH W9, [X8 + 0x12E]
	0x03462BF8 LDR X1, [X10]
	0x03462BFC CBZ X9, 0x3462C20
	0x03462C00 LDR X10, [X8 + 0xB0]
	0x03462C04 ADD X10, X10, 0x8
	0x03462C08 LDUR X11, [X10 - 0x8]
	0x03462C0C CMP X11, X1
	0x03462C10 B.EQ 0x3462C30
	0x03462C14 SUBS X9, X9, 0x1
	0x03462C18 ADD X10, X10, 0x10
	0x03462C1C B.NE 0x3462C08
	0x03462C20 MOV X0, X21
	0x03462C24 MOV W2, W31
	0x03462C28 BL 0x1C5C788
	0x03462C2C B 0x3462C3C
	0x03462C30 LDRSW X9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF7C000
	007 Move X21, 0xCCD000
	008 Move W8, [X22+1972]
	009 Move X21, [X21+1384]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCCE000
	017 Move X0, [X0+400]
	018 Call 0x1C17CF4
	019 Move X0, 0xCCD000
	020 Move X0, [X0+1384]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1972], W8
	024 Move X0, [X21]
	025 Move X21, 0xCCE000
	026 Move W8, [X0+224]
	027 Move X21, [X21+400]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

