Type: Nakama.Client/<LinkCustomAsync>d__74

Method: System.Void MoveNext()

Disassembly:
	0x03459C6C LDR X8, [X8 + 0x840]
	0x03459C70 LDR X1, [X8]
	0x03459C74 BL 0x269F5D0
	0x03459C78 ADRP X8, 0xC9B000
	0x03459C7C LDR X8, [X8 + 0x838]
	0x03459C80 STR X0, [X31 + 0x20]
	0x03459C84 LDR X1, [X8]
	0x03459C88 ADD X0, X31, 0x20
	0x03459C8C BL 0x2677430
	0x03459C90 TBNZ X0, 0x0, 0x3459A88
	0x03459C94 STR W31, [X19]
	0x03459C98 LDR X8, [X31 + 0x20]
	0x03459C9C STR X8, [X19 + 0x58]
	0x03459CA0 LDR X0, [X25]
	0x03459CA4 LDR W8, [X0 + 0xE0]
	0x03459CA8 CBNZ W8, 0x3459CB0
	0x03459CAC BL 0x1C16DFC
	0x03459CB0 ADRP X8, 0xCD6000
	0x03459CB4 LDR X8, [X8 + 0xEF8]
	0x03459CB8 ADD X0, X19, 0x8
	0x03459CBC LDR X3, [X8]
	0x03459CC0 ADD X1, X31, 0x20
	0x03459CC4 MOV X2, X19
	0x03459CC8 BL 0x21889B4
	0x03459CCC B 0x3459E14
	0x03459CD0 CBZ X20, 0x3459E38
	0x03459CD4 ADRP X8, 0xCA2000
	0x03459CD8 LDR X8, [X8 + 0x818]
	0x03459CDC LDR X21, [X20 + 0x58]
	0x03459CE0 LDR X23, [X19 + 0x50]
	0x03459CE4 LDR X0, [X8]
	0x03459CE8 BL 0x1C16F10
	0x03459CEC ADRP X8, 0xCD6000
	0x03459CF0 LDR X8, [X8 + 0xF08]
	0x03459CF4 MOV X22, X0
	0x03459CF8 LDR X2, [X8]
	0x03459CFC MOV X1, X23
	0x03459D00 MOV X3, X31
	0x03459D04 BL 0x2D27AA8
	0x03459D08 LDR X8, [X19 + 0x50]
	0x03459D0C CBZ X8, 0x3459E2C
	0x03459D10 ADRP X9, 0xCD6000
	0x03459D14 LDR X23, [X19 + 0x48]
	0x03459D18 LDR X9, [X9 + 0x7C8]
	0x03459D1C CBNZ X23, 0x3459D24
	0x03459D20 LDR X23, [X20 + 0x18]
	0x03459D24 LDR X20, [X8 + 0x18]
	0x03459D28 LDR X1, [X8 + 0x30]
	0x03459D2C LDR X2, [X9]
	0x03459D30 STP X31, X31, [X31 + 0x8]
	0x03459D34 ADD X0, X31, 0x8
	0x03459D38 BL 0x242E368
	0x03459D3C ADRP X8, 0xCD6000
	0x03459D40 LDR X8, [X8 + 0x7D0]
	0x03459D44 LDR X0, [X8]
	0x03459D48 BL 0x1C16F10
	0x03459D4C LDP X3, X4, [X31 + 0x8]
	0x03459D50 MOV X24, X0
	0x03459D54 MOV X1, X20
	0x03459D58 MOV X2, X23
	0x03459D5C MOV X5, X31
	0x03459D60 BL 0x3465404
	0x03459D64 CBZ X21, 0x3459E30
	0x03459D68 MOV X0, X21
	0x03459D6C MOV X1, X22
	0x03459D70 MOV X2, X24
	0x03459D74 MOV X3, X31
	0x03459D78 BL 0x3465B68
	0x03459D7C CBZ X0, 0x3459E34
	0x03459D80 MOV X1, X31
	0x03459D84 BL 0x33ED394
	0x03459D88 STR X0, [X31 + 0x18]
	0x03459D8C ADD X0, X31, 0x18
	0x03459D90 MOV X1, X31
	0x03459D94 BL 0x32C3A80
	0x03459D98 TBZ X0, 0x0, 0x3459DD8
	0x03459D9C ADD X0, X31, 0x18
	0x03459DA0 MOV X1, X31
	0x03459DA4 BL 0x32C3B4C
	0x03459DA8 MOVN W8, 0x1
	0x03459DAC STR W8, [X19]
	0x03459DB0 STR X31, [X19 + 0x50]
	0x03459DB4 LDR X0, [X25]
	0x03459DB8 ADD X19, X19, 0x8
	0x03459DBC LDR W8, [X0 + 0xE0]
	0x03459DC0 CBNZ W8, 0x3459DC8
	0x03459DC4 BL 0x1C16DFC
	0x03459DC8 MOV X0, X19
	0x03459DCC MOV X1, X31
	0x03459DD0 BL 0x32C4864
	0x03459DD4 B 0x3459E14
	0x03459DD8 MOVZ W8, 0x1
	0x03459DDC STR W8, [X19]
	0x03459DE0 LDR X8, [X31 + 0x18]
	0x03459DE4 STR X8, [X19 + 0x60]
	0x03459DE8 LDR X0, [X25]
	0x03459DEC LDR W8, [X0 + 0xE0]
	0x03459DF0 CBNZ W8, 0x3459DF8
	0x03459DF4 BL 0x1C16DFC
	0x03459DF8 ADRP X8, 0xCD6000
	0x03459DFC LDR X8, [X8 + 0xF00]
	0x03459E00 ADD X0, X19, 0x8
	0x03459E04 LDR X3, [X8]
	0x03459E08 ADD X1, X31, 0x18
	0x03459E0C MOV X2, X19
	0x03459E10 BL 0x218A078
	0x03459E14 LDP X20, X19, [X31 + 0x60]
	0x03459E18 LDP X22, X21, [X31 + 0x50]
	0x03459E1C LDP X24, X23, [X31 + 0x40]
	0x03459E20 LDP X30, X25, [X31 + 0x30]
	0x03459E24 ADD X31, X31, 0x70
	0x03459E28 RET
	0x03459E2C BL 0x1C16F20
	0x03459E30 BL 0x1C16F20
	0x03459E34 BL 0x1C16F20
	0x03459E38 BL 0x1C16F20
	0x03459E3C BL 0x1C16F20
	0x03459E40 BL 0x1C16F20
	0x03459E44 BL 0x1C16F20
	0x03459E48 BL 0x1C16F20
	0x03459E4C BL 0x1C16F20
	0x03459E50 BL 0x1C16F20
	0x03459E54 BL 0x1C16F20
	0x03459E58 BL 0x1C16F20
	0x03459E5C B 0x3459ED0
	0x03459E60 B 0x3459ED0
	0x03459E64 B 0x3459ED0
	0x03459E68 B 0x3459ED0
	0x03459E6C B 0x3459ED0
	0x03459E70 B 0x3459ED0
	0x03459E74 B 0x3459ED0
	0x03459E78 B 0x3459ED0
	0x03459E7C B 0x3459ED0
	0x03459E80 B 0x3459ED0
	0x03459E84 B 0x3459ED0
	0x03459E88 B 0x3459ED0
	0x03459E8C B 0x3459ED0
	0x03459E90 B 0x3459ED0
	0x03459E94 B 0x3459ED0
	0x03459E98 B 0x3459ED0
	0x03459E9C B 0x3459ED0
	0x03459EA0 B 0x3459ED0
	0x03459EA4 B 0x3459ED0
	0x03459EA8 B 0x3459ED0
	0x03459EAC B 0x3459ED0
	0x03459EB0 B 0x3459ED0
	0x03459EB4 B 0x3459ED0
	0x03459EB8 B 0x3459ED0
	0x03459EBC B 0x3459ED0
	0x03459EC0 B 0x3459ED0
	0x03459EC4 B 0x3459ED0
	0x03459EC8 B 0x3459ED0
	0x03459ECC B 0x3459ED0
	0x03459ED0 MOV X20, X0
	0x03459ED4 CMP W1, 0x1
	0x03459ED8 B.NE 0x3459F6C
	0x03459EDC MOV X0, X20
	0x03459EE0 BL 0x3EB1AD0
	0x03459EE4 MOV X20, X0
	0x03459EE8 ADRP X0, 0xC9A000
	0x03459EEC LDR X0, [X0 + 0x7D0]
	0x03459EF0 BL 0x1C16D08
	0x03459EF4 LDR X8, [X20]
	0x03459EF8 LDR X1, [X8]
	0x03459EFC BL 0x1C17270
	0x03459F00 TBZ X0, 0x0, 0x3459F44
	0x03459F04 LDR X20, [X20]
	0x03459F08 BL 0x3EB1AE0
	0x03459F0C MOVN W8, 0x1
	0x03459F10 STR X31, [X19 + 0x50]
	0x03459F14 STR W8, [X19], #0x8
	0x03459F18 ADRP X0, 0xC9D000
	0x03459F1C LDR X0, [X0 + 0x280]
	0x03459F20 BL 0x1C16D08
	0x03459F24 LDR W8, [X0 + 0xE0]
	0x03459F28 CBNZ W8, 0x3459F30
	0x03459F2C BL 0x1C16DFC
	0x03459F30 MOV X0, X19
	0x03459F34 MOV X1, X20
	0x03459F38 MOV X2, X31
	0x03459F3C BL 0x32C4908
	0x03459F40 B 0x3459E14
	0x03459F44 MOVZ W0, 0x8
	0x03459F48 BL 0x3EB1AF0
	0x03459F4C LDR X8, [X20]
	0x03459F50 STR X8, [X0]
	0x03459F54 ADRP X1, 0xA5B000
	0x03459F58 ADD X1, X1, 0xE58
	0x03459F5C MOV X2, X31
	0x03459F60 BL 0x3EB1B00
	0x03459F64 MOV X20, X0
	0x03459F68 BL 0x3EB1AE0
	0x03459F6C MOV X0, X20
	0x03459F70 BL 0x1D2C690
	0x03459F74 BL 0x1990590
	0x03459F78 STR X30, [X31 - 0x30]!
	0x03459F7C STP X22, X21, [X31 + 0x10]
	0x03459F80 STP X20, X19, [X31 + 0x20]
	0x03459F84 ADRP X21, 0xF84000
	0x03459F88 ADRP X22, 0xC9D000
	0x03459F8C LDRB W8, [X21 + 0x798]
	0x03459F90 LDR X22, [X22 + 0x280]
	0x03459F94 MOV X19, X1
	0x03459F98 MOV X20, X0
	0x03459F9C TBNZ X8, 0x0, 0x3459FB4
	0x03459FA0 ADRP X0, 0xC9D000
	0x03459FA4 LDR X0, [X0 + 0x280]
	0x03459FA8 BL 0x1C16CF4
	0x03459FAC MOVZ W8, 0x1
	0x03459FB0 STRB W8, [X21 + 0x798]
	0x03459FB4 LDR X0, [X22]
	0x03459FB8 LDR W8, [X0 + 0xE0]
	0x03459FBC CBNZ W8, 0x3459FC4
	0x03459FC0 BL 0x1C16DFC
	0x03459FC4 ADD X0, X20, 0x8
	0x03459FC8 MOV X1, X19
	0x03459FCC LDP X20, X19, [X31 + 0x20]
	0x03459FD0 LDP X22, X21, [X31 + 0x10]
	0x03459FD4 MOV X2, X31
	0x03459FD8 LDR X30, [X31], #0x30
	0x03459FDC B 0x32C477C
	0x03459FE0 SUB X31, X31, 0x70
	0x03459FE4 STP X30, X25, [X31 + 0x30]
	0x03459FE8 STP X24, X23, [X31 + 0x40]
	0x03459FEC STP X22, X21, [X31 + 0x50]
	0x03459FF0 STP X20, X19, [X31 + 0x60]
	0x03459FF4 ADRP X20, 0xF84000
	0x03459FF8 LDRB W8, [X20 + 0x799]
	0x03459FFC MOV X19, X0
	0x0345A000 TBNZ X8, 0x0, 0x345A0B4
	0x0345A004 ADRP X0, 0xCD5000
	0x0345A008 LDR X0, [X0 + 0xF18]
	0x0345A00C BL 0x1C16CF4
	0x0345A010 ADRP X0, 0xCD5000
	0x0345A014 LDR X0, [X0 + 0xF20]
	0x0345A018 BL 0x1C16CF4
	0x0345A01C ADRP X0, 0xC9C000
	0x0345A020 LDR X0, [X0 + 0x280]
	0x0345A024 BL 0x1C16CF4
	0x0345A028 ADRP X0, 0xC9B000
	0x0345A02C LDR X0, [X0 + 0xA10]
	0x0345A030 BL 0x1C16CF4
	0x0345A034 ADRP X0, 0xC9A000
	0x0345A038 LDR X0, [X0 + 0x9F0]
	0x0345A03C BL 0x1C16CF4
	0x0345A040 ADRP X0, 0xCA1000
	0x0345A044 LDR X0, [X0 + 0x818]
	0x0345A048 BL 0x1C16CF4
	0x0345A04C ADRP X0, 0xC9A000
	0x0345A050 LDR X0, [X0 + 0x818]
	0x0345A054 BL 0x1C16CF4
	0x0345A058 ADRP X0, 0xCD5000
	0x0345A05C LDR X0, [X0 + 0x7C8]
	0x0345A060 BL 0x1C16CF4
	0x0345A064 ADRP X0, 0xCD5000
	0x0345A068 LDR X0, [X0 + 0x7D0]
	0x0345A06C BL 0x1C16CF4
	0x0345A070 ADRP X0, 0xC9A000
	0x0345A074 LDR X0, [X0 + 0x830]
	0x0345A078 BL 0x1C16CF4
	0x0345A07C ADRP X0, 0xC9A000
	0x0345A080 LDR X0, [X0 + 0x838]
	0x0345A084 BL 0x1C16CF4
	0x0345A088 ADRP X0, 0xC9A000
	0x0345A08C LDR X0, [X0 + 0x840]
	0x0345A090 BL 0x1C16CF4
	0x0345A094 ADRP X0, 0xCD5000
	0x0345A098 LDR X0, [X0 + 0xF28]
	0x0345A09C BL 0x1C16CF4
	0x0345A0A0 ADRP X0, 0xCD5000
	0x0345A0A4 LDR X0, [X0 + 0xF30]
	0x0345A0A8 BL 0x1C16CF4
	0x0345A0AC MOVZ W8, 0x1
	0x0345A0B0 STRB W8, [X20 + 0x799]
	0x0345A0B4 STP X31, X31, [X31 + 0x20]
	0x0345A0B8 STR X31, [X31 + 0x18]
	0x0345A0BC ADRP X25, 0xC9C000
	0x0345A0C0 LDR W8, [X19]
	0x0345A0C4 LDR X20, [X19 + 0x20]
	0x0345A0C8 LDR X25, [X25 + 0x280]
	0x0345A0CC CBZ W8, 0x345A0F0
	0x0345A0D0 CMP W8, 0x1
	0x0345A0D4 B.NE 0x345A11C
	0x0345A0D8 LDR X8, [X19 + 0x60]
	0x0345A0DC MOVN W9, 0x0
	0x0345A0E0 STR X8, [X31 + 0x18]
	0x0345A0E4 STR X31, [X19 + 0x60]
	0x0345A0E8 STR W9, [X19]
	0x0345A0EC B 0x345A428
	0x0345A0F0 LDR X8, [X19 + 0x58]
	0x0345A0F4 MOVN W9, 0x0
	0x0345A0F8 STR X8, [X31 + 0x20]
	0x0345A0FC STR X31, [X19 + 0x58]
	0x0345A100 STR W9, [X19]
	0x0345A104 ADRP X8, 0xC9A000
	0x0345A108 LDR X8, [X8 + 0x830]
	0x0345A10C ADD X0, X31, 0x20
	0x0345A110 LDR X1, [X8]
	0x0345A114 BL 0x2677474
	0x0345A118 B 0x345A35C
	0x0345A11C ADRP X8, 0xCD5000
	0x0345A120 LDR X8, [X8 + 0xF30]
	0x0345A124 LDR X0, [X8]
	0x0345A128 BL 0x1C16F10
	0x0345A12C MOV X21, X0
	0x0345A130 MOV X1, X31
	0x0345A134 BL 0x344A254
	0x0345A138 STR X21, [X19 + 0x50]
	0x0345A13C CBZ X21, 0x345A4C8
	0x0345A140 LDR X8, [X19 + 0x20]
	0x0345A144 STR X8, [X21 + 0x10]
	0x0345A148 LDR X8, [X19 + 0x28]
	0x0345A14C STR X8, [X21 + 0x18]
	0x0345A150 LDR X8, [X19 + 0x30]
	0x0345A154 STR X8, [X21 + 0x20]
	0x0345A158 LDRH W8, [X19 + 0x38]
	0x0345A15C STRH W8, [X21 + 0x28]
	0x0345A160 LDR X8, [X19 + 0x50]
	0x0345A164 CBZ X8, 0x345A4CC
	0x0345A168 LDR X9, [X19 + 0x40]
	0x0345A16C STR X9, [X8 + 0x30]
	0x0345A170 CBZ X20, 0x345A4D0
	0x0345A174 LDRB W8, [X20 + 0x10]
	0x0345A178 CBZ W8, 0x345A360
	0x0345A17C LDR X8, [X19 + 0x50]
	0x0345A180 CBZ X8, 0x345A4D4
	0x0345A184 LDR X21, [X8 + 0x18]
	0x0345A188 CBZ X21, 0x345A4D8
	0x0345A18C ADRP X23, 0xC9A000
	0x0345A190 LDR X8, [X21]
	0x0345A194 LDR X23, [X23 + 0x818]
	0x0345A198 LDRH W9, [X8 + 0x12E]
	0x0345A19C LDR X1, [X23]
	0x0345A1A0 CBZ X9, 0x345A1C4
	0x0345A1A4 LDR X10, [X8 + 0xB0]
	0x0345A1A8 ADD X10, X10, 0x8
	0x0345A1AC LDUR X11, [X10 - 0x8]
	0x0345A1B0 CMP X11, X1
	0x0345A1B4 B.EQ 0x345A1D4
	0x0345A1B8 SUBS X9, X9, 0x1
	0x0345A1BC ADD X10, X10, 0x10
	0x0345A1C0 B.NE 0x345A1AC
	0x0345A1C4 MOVZ W2, 0x7
	0x0345A1C8 MOV X0, X21
	0x0345A1CC BL 0x1C5C788
	0x0345A1D0 B 0x345A1E4
	0x0345A1D4 LDR W9, [X10]
	0x0345A1D8 ADD W9, W9, 0x7
	0x0345A1DC ADD X8, X8, W9, 0x4, SXTW
	0x0345A1E0 ADD X0, X8, 0x138
	0x0345A1E4 LDP X8, X1, [X0]
	0x0345A1E8 MOV X0, X21
	0x0345A1EC BLR X8
	0x0345A1F0 MOV X1, X31
	0x0345A1F4 BL 0x32277A8
	0x0345A1F8 TBNZ X0, 0x0, 0x345A35C
	0x0345A1FC LDR X8, [X19 + 0x50]
	0x0345A200 CBZ X8, 0x345A4DC
	0x0345A204 ADRP X9, 0xC9A000
	0x0345A208 LDR X9, [X9 + 0x9F0]
	0x0345A20C LDR X21, [X8 + 0x18]
	0x0345A210 LDR X0, [X9]
	0x0345A214 LDR W9, [X0 + 0xE0]
	0x0345A218 CBNZ W9, 0x345A220
	0x0345A21C BL 0x1C16DFC
	0x0345A220 MOV X0, X31
	0x0345A224 BL 0x33616A4
	0x0345A228 ADRP X22, 0xC9B000
	0x0345A22C LDR X22, [X22 + 0xA10]
	0x0345A230 MOV X8, X0
	0x0345A234 STR X8, [X31 + 0x28]
	0x0345A238 LDR X0, [X22]
	0x0345A23C LDR W8, [X0 + 0xE0]
	0x0345A240 CBNZ W8, 0x345A24C
	0x0345A244 BL 0x1C16DFC
	0x0345A248 LDR X0, [X22]
	0x0345A24C LDR X8, [X0 + 0xB8]
	0x0345A250 LDR X1, [X8]
	0x0345A254 ADD X0, X31, 0x28
	0x0345A258 MOV X2, X31
	0x0345A25C BL 0x335FC68
	0x0345A260 CBZ X21, 0x345A4E0
	0x0345A264 LDR X8, [X21]
	0x0345A268 LDR X1, [X23]
	0x0345A26C MOV X22, X0
	0x0345A270 LDRH W9, [X8 + 0x12E]
	0x0345A274 CBZ X9, 0x345A298
	0x0345A278 LDR X10, [X8 + 0xB0]
	0x0345A27C ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF85000
	011 Move W8, [X20+1939]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCD7000
	018 Move X0, [X0+3768]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD7000
	021 Move X0, [X0+3776]
	022 Call 0x1C17CF4
	023 Move X0, 0xC9E000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC9D000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC9C000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA3000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9C000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCD7000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD7000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC9C000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC9C000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC9C000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD7000
	054 Move X0, [X0+3784]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD7000
	057 Move X0, [X0+3792]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1939], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC9E000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC9C000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCD7000
	091 Move X8, [X8+3792]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass74_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xC9C000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xC9C000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC9D000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xC9C000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC9C000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCD7000
	242 Move X8, [X8+3768]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCA3000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCD7000
	257 Move X8, [X8+3784]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCD6000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCD6000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+72], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+88], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCD6000
	336 Move X8, [X8+3776]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xC9A000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+72], X31
	385 Move [X19+8], W8
	386 Move X0, 0xC9D000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA5B000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345A280 LDUR X11, [X10 - 0x8]
	0x0345A284 CMP X11, X1
	0x0345A288 B.EQ 0x345A2A8
	0x0345A28C SUBS X9, X9, 0x1
	0x0345A290 ADD X10, X10, 0x10
	0x0345A294 B.NE 0x345A280
	0x0345A298 MOVZ W2, 0xB
	0x0345A29C MOV X0, X21
	0x0345A2A0 BL 0x1C5C788
	0x0345A2A4 B 0x345A2B8
	0x0345A2A8 LDR W9, [X10]
	0x0345A2AC ADD W9, W9, 0xB
	0x0345A2B0 ADD X8, X8, W9, 0x4, SXTW
	0x0345A2B4 ADD X0, X8, 0x138
	0x0345A2B8 LDP X8, X2, [X0]
	0x0345A2BC MOV X0, X21
	0x0345A2C0 MOV X1, X22
	0x0345A2C4 BLR X8
	0x0345A2C8 TBZ X0, 0x0, 0x345A35C
	0x0345A2CC LDR X8, [X19 + 0x50]
	0x0345A2D0 CBZ X8, 0x345A4E4
	0x0345A2D4 LDR X1, [X8 + 0x18]
	0x0345A2D8 LDR X3, [X19 + 0x48]
	0x0345A2DC LDR X4, [X8 + 0x30]
	0x0345A2E0 MOV X0, X20
	0x0345A2E4 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF84000
	007 Move X22, 0xC9D000
	008 Move W8, [X21+1940]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC9D000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1940], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

