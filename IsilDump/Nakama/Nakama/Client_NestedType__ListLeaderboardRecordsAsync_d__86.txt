Type: Nakama.Client/<ListLeaderboardRecordsAsync>d__86

Method: System.Void MoveNext()

Disassembly:
	0x0345FE70 B 0x345FE80
	0x0345FE74 LDRSW X9, [X10]
	0x0345FE78 ADD X8, X8, X9, 0x4, LSL
	0x0345FE7C ADD X0, X8, 0x138
	0x0345FE80 LDP X8, X1, [X0]
	0x0345FE84 MOV X0, X21
	0x0345FE88 BLR X8
	0x0345FE8C CBNZ X24, 0x345FF2C
	0x0345FE90 CMP W22, 0x1
	0x0345FE94 B.NE 0x345FF4C
	0x0345FE98 MOV X0, X23
	0x0345FE9C BL 0x3EB1AD0
	0x0345FEA0 MOV X20, X0
	0x0345FEA4 ADRP X0, 0xC94000
	0x0345FEA8 LDR X0, [X0 + 0x7D0]
	0x0345FEAC BL 0x1C16D08
	0x0345FEB0 LDR X8, [X20]
	0x0345FEB4 LDR X1, [X8]
	0x0345FEB8 BL 0x1C17270
	0x0345FEBC TBZ X0, 0x0, 0x345FF0C
	0x0345FEC0 LDR X20, [X20]
	0x0345FEC4 BL 0x3EB1AE0
	0x0345FEC8 MOVN W8, 0x1
	0x0345FECC STR X31, [X19 + 0x70]
	0x0345FED0 STR W8, [X19], #0x8
	0x0345FED4 ADRP X0, 0xCCF000
	0x0345FED8 LDR X0, [X0 + 0x5D8]
	0x0345FEDC BL 0x1C16D08
	0x0345FEE0 LDR W8, [X0 + 0xE0]
	0x0345FEE4 CBNZ W8, 0x345FEEC
	0x0345FEE8 BL 0x1C16DFC
	0x0345FEEC ADRP X0, 0xCD0000
	0x0345FEF0 LDR X0, [X0 + 0x38]
	0x0345FEF4 BL 0x1C16D08
	0x0345FEF8 MOV X2, X0
	0x0345FEFC MOV X0, X19
	0x0345FF00 MOV X1, X20
	0x0345FF04 BL 0x26324C8
	0x0345FF08 B 0x345FB98
	0x0345FF0C MOVZ W0, 0x8
	0x0345FF10 BL 0x3EB1AF0
	0x0345FF14 LDR X8, [X20]
	0x0345FF18 STR X8, [X0]
	0x0345FF1C ADRP X1, 0xA55000
	0x0345FF20 ADD X1, X1, 0xE58
	0x0345FF24 MOV X2, X31
	0x0345FF28 BL 0x3EB1B00
	0x0345FF2C MOV X0, X24
	0x0345FF30 BL 0x1C16F18
	0x0345FF34 MOV X22, X1
	0x0345FF38 MOV X23, X0
	0x0345FF3C TBNZ X25, 0x1F, 0x345FE28
	0x0345FF40 B 0x345FE8C
	0x0345FF44 MOV X23, X0
	0x0345FF48 BL 0x3EB1AE0
	0x0345FF4C MOV X0, X23
	0x0345FF50 BL 0x1D2C690
	0x0345FF54 BL 0x1990590
	0x0345FF58 STR X30, [X31 - 0x30]!
	0x0345FF5C STP X22, X21, [X31 + 0x10]
	0x0345FF60 STP X20, X19, [X31 + 0x20]
	0x0345FF64 ADRP X22, 0xF7E000
	0x0345FF68 ADRP X21, 0xCCF000
	0x0345FF6C LDRB W8, [X22 + 0x7AC]
	0x0345FF70 LDR X21, [X21 + 0x5D8]
	0x0345FF74 MOV X19, X1
	0x0345FF78 MOV X20, X0
	0x0345FF7C TBNZ X8, 0x0, 0x345FFA0
	0x0345FF80 ADRP X0, 0xCD0000
	0x0345FF84 LDR X0, [X0 + 0x40]
	0x0345FF88 BL 0x1C16CF4
	0x0345FF8C ADRP X0, 0xCCF000
	0x0345FF90 LDR X0, [X0 + 0x5D8]
	0x0345FF94 BL 0x1C16CF4
	0x0345FF98 MOVZ W8, 0x1
	0x0345FF9C STRB W8, [X22 + 0x7AC]
	0x0345FFA0 LDR X0, [X21]
	0x0345FFA4 ADRP X21, 0xCD0000
	0x0345FFA8 LDR W8, [X0 + 0xE0]
	0x0345FFAC LDR X21, [X21 + 0x40]
	0x0345FFB0 CBNZ W8, 0x345FFB8
	0x0345FFB4 BL 0x1C16DFC
	0x0345FFB8 LDR X2, [X21]
	0x0345FFBC ADD X0, X20, 0x8
	0x0345FFC0 MOV X1, X19
	0x0345FFC4 LDP X20, X19, [X31 + 0x20]
	0x0345FFC8 LDP X22, X21, [X31 + 0x10]
	0x0345FFCC LDR X30, [X31], #0x30
	0x0345FFD0 B 0x2632228
	0x0345FFD4 SUB X31, X31, 0x70
	0x0345FFD8 STP X30, X25, [X31 + 0x30]
	0x0345FFDC STP X24, X23, [X31 + 0x40]
	0x0345FFE0 STP X22, X21, [X31 + 0x50]
	0x0345FFE4 STP X20, X19, [X31 + 0x60]
	0x0345FFE8 ADRP X20, 0xF7E000
	0x0345FFEC LDRB W8, [X20 + 0x7AD]
	0x0345FFF0 MOV X19, X0
	0x0345FFF4 TBNZ X8, 0x0, 0x34600E4
	0x0345FFF8 ADRP X0, 0xCD1000
	0x0345FFFC LDR X0, [X0 + 0x170]
	0x03460000 BL 0x1C16CF4
	0x03460004 ADRP X0, 0xCD0000
	0x03460008 LDR X0, [X0 + 0x178]
	0x0346000C BL 0x1C16CF4
	0x03460010 ADRP X0, 0xCCF000
	0x03460014 LDR X0, [X0 + 0x68]
	0x03460018 BL 0x1C16CF4
	0x0346001C ADRP X0, 0xCCE000
	0x03460020 LDR X0, [X0 + 0x620]
	0x03460024 BL 0x1C16CF4
	0x03460028 ADRP X0, 0xC95000
	0x0346002C LDR X0, [X0 + 0xA10]
	0x03460030 BL 0x1C16CF4
	0x03460034 ADRP X0, 0xC94000
	0x03460038 LDR X0, [X0 + 0x9F0]
	0x0346003C BL 0x1C16CF4
	0x03460040 ADRP X0, 0xCD0000
	0x03460044 LDR X0, [X0 + 0x180]
	0x03460048 BL 0x1C16CF4
	0x0346004C ADRP X0, 0xC94000
	0x03460050 LDR X0, [X0 + 0x818]
	0x03460054 BL 0x1C16CF4
	0x03460058 ADRP X0, 0xCCF000
	0x0346005C LDR X0, [X0 + 0x7C8]
	0x03460060 BL 0x1C16CF4
	0x03460064 ADRP X0, 0xCCF000
	0x03460068 LDR X0, [X0 + 0x7D0]
	0x0346006C BL 0x1C16CF4
	0x03460070 ADRP X0, 0xCD0000
	0x03460074 LDR X0, [X0 + 0x188]
	0x03460078 BL 0x1C16CF4
	0x0346007C ADRP X0, 0xCD0000
	0x03460080 LDR X0, [X0 + 0x190]
	0x03460084 BL 0x1C16CF4
	0x03460088 ADRP X0, 0xC94000
	0x0346008C LDR X0, [X0 + 0x830]
	0x03460090 BL 0x1C16CF4
	0x03460094 ADRP X0, 0xCD0000
	0x03460098 LDR X0, [X0 + 0x198]
	0x0346009C BL 0x1C16CF4
	0x034600A0 ADRP X0, 0xC94000
	0x034600A4 LDR X0, [X0 + 0x838]
	0x034600A8 BL 0x1C16CF4
	0x034600AC ADRP X0, 0xC94000
	0x034600B0 LDR X0, [X0 + 0x840]
	0x034600B4 BL 0x1C16CF4
	0x034600B8 ADRP X0, 0xCD0000
	0x034600BC LDR X0, [X0 + 0x1A0]
	0x034600C0 BL 0x1C16CF4
	0x034600C4 ADRP X0, 0xCD0000
	0x034600C8 LDR X0, [X0 + 0x1A8]
	0x034600CC BL 0x1C16CF4
	0x034600D0 ADRP X0, 0xCD0000
	0x034600D4 LDR X0, [X0 + 0x1B0]
	0x034600D8 BL 0x1C16CF4
	0x034600DC MOVZ W8, 0x1
	0x034600E0 STRB W8, [X20 + 0x7AD]
	0x034600E4 STP X31, X31, [X31 + 0x20]
	0x034600E8 STR X31, [X31 + 0x18]
	0x034600EC ADRP X25, 0xCCE000
	0x034600F0 LDR W8, [X19]
	0x034600F4 LDR X20, [X19 + 0x20]
	0x034600F8 LDR X25, [X25 + 0x620]
	0x034600FC CBZ W8, 0x3460120
	0x03460100 CMP W8, 0x1
	0x03460104 B.NE 0x346014C
	0x03460108 LDR X8, [X19 + 0x70]
	0x0346010C MOVN W9, 0x0
	0x03460110 STR X8, [X31 + 0x18]
	0x03460114 STR X31, [X19 + 0x70]
	0x03460118 STR W9, [X19]
	0x0346011C B 0x3460480
	0x03460120 LDR X8, [X19 + 0x68]
	0x03460124 MOVN W9, 0x0
	0x03460128 STR X8, [X31 + 0x20]
	0x0346012C STR X31, [X19 + 0x68]
	0x03460130 STR W9, [X19]
	0x03460134 ADRP X8, 0xC94000
	0x03460138 LDR X8, [X8 + 0x830]
	0x0346013C ADD X0, X31, 0x20
	0x03460140 LDR X1, [X8]
	0x03460144 BL 0x2677474
	0x03460148 B 0x346039C
	0x0346014C ADRP X8, 0xCD0000
	0x03460150 LDR X8, [X8 + 0x1B0]
	0x03460154 LDR X0, [X8]
	0x03460158 BL 0x1C16F10
	0x0346015C MOV X21, X0
	0x03460160 MOV X1, X31
	0x03460164 BL 0x344B09C
	0x03460168 STR X21, [X19 + 0x60]
	0x0346016C CBZ X21, 0x3460538
	0x03460170 LDR X8, [X19 + 0x20]
	0x03460174 STR X8, [X21 + 0x10]
	0x03460178 LDR X8, [X19 + 0x28]
	0x0346017C STR X8, [X21 + 0x18]
	0x03460180 LDR W8, [X19 + 0x30]
	0x03460184 STR W8, [X21 + 0x20]
	0x03460188 LDRB W8, [X19 + 0x34]
	0x0346018C STRB W8, [X21 + 0x24]
	0x03460190 LDR X8, [X19 + 0x38]
	0x03460194 STR X8, [X21 + 0x28]
	0x03460198 LDR V0, [X19 + 0x40]
	0x0346019C STR D0, [X21 + 0x30]
	0x034601A0 LDR X8, [X19 + 0x48]
	0x034601A4 STR X8, [X21 + 0x38]
	0x034601A8 LDR X8, [X19 + 0x50]
	0x034601AC STR X8, [X21 + 0x40]
	0x034601B0 CBZ X20, 0x346053C
	0x034601B4 LDRB W8, [X20 + 0x10]
	0x034601B8 CBZ W8, 0x34603A0
	0x034601BC LDR X8, [X19 + 0x60]
	0x034601C0 CBZ X8, 0x3460540
	0x034601C4 LDR X21, [X8 + 0x18]
	0x034601C8 CBZ X21, 0x3460544
	0x034601CC ADRP X23, 0xC94000
	0x034601D0 LDR X8, [X21]
	0x034601D4 LDR X23, [X23 + 0x818]
	0x034601D8 LDRH W9, [X8 + 0x12E]
	0x034601DC LDR X1, [X23]
	0x034601E0 CBZ X9, 0x3460204
	0x034601E4 LDR X10, [X8 + 0xB0]
	0x034601E8 ADD X10, X10, 0x8
	0x034601EC LDUR X11, [X10 - 0x8]
	0x034601F0 CMP X11, X1
	0x034601F4 B.EQ 0x3460214
	0x034601F8 SUBS X9, X9, 0x1
	0x034601FC ADD X10, X10, 0x10
	0x03460200 B.NE 0x34601EC
	0x03460204 MOVZ W2, 0x7
	0x03460208 MOV X0, X21
	0x0346020C BL 0x1C5C788
	0x03460210 B 0x3460224
	0x03460214 LDR W9, [X10]
	0x03460218 ADD W9, W9, 0x7
	0x0346021C ADD X8, X8, W9, 0x4, SXTW
	0x03460220 ADD X0, X8, 0x138
	0x03460224 LDP X8, X1, [X0]
	0x03460228 MOV X0, X21
	0x0346022C BLR X8
	0x03460230 MOV X1, X31
	0x03460234 BL 0x32277A8
	0x03460238 TBNZ X0, 0x0, 0x346039C
	0x0346023C LDR X8, [X19 + 0x60]
	0x03460240 CBZ X8, 0x3460548
	0x03460244 ADRP X9, 0xC94000
	0x03460248 LDR X9, [X9 + 0x9F0]
	0x0346024C LDR X21, [X8 + 0x18]
	0x03460250 LDR X0, [X9]
	0x03460254 LDR W9, [X0 + 0xE0]
	0x03460258 CBNZ W9, 0x3460260
	0x0346025C BL 0x1C16DFC
	0x03460260 MOV X0, X31
	0x03460264 BL 0x33616A4
	0x03460268 ADRP X22, 0xC95000
	0x0346026C LDR X22, [X22 + 0xA10]
	0x03460270 MOV X8, X0
	0x03460274 STR X8, [X31 + 0x28]
	0x03460278 LDR X0, [X22]
	0x0346027C LDR W8, [X0 + 0xE0]
	0x03460280 CBNZ W8, 0x346028C
	0x03460284 BL 0x1C16DFC
	0x03460288 LDR X0, [X22]
	0x0346028C LDR X8, [X0 + 0xB8]
	0x03460290 LDR X1, [X8]
	0x03460294 ADD X0, X31, 0x28
	0x03460298 MOV X2, X31
	0x0346029C BL 0x335FC68
	0x034602A0 CBZ X21, 0x346054C
	0x034602A4 LDR X8, [X21]
	0x034602A8 LDR X1, [X23]
	0x034602AC MOV X22, X0
	0x034602B0 LDRH W9, [X8 + 0x12E]
	0x034602B4 CBZ X9, 0x34602D8
	0x034602B8 LDR X10, [X8 + 0xB0]
	0x034602BC ADD X10, X10, 0x8
	0x034602C0 LDUR X11, [X10 - 0x8]
	0x034602C4 CMP X11, X1
	0x034602C8 B.EQ 0x34602E8
	0x034602CC SUBS X9, X9, 0x1
	0x034602D0 ADD X10, X10, 0x10
	0x034602D4 B.NE 0x34602C0
	0x034602D8 MOVZ W2, 0xB
	0x034602DC MOV X0, X21
	0x034602E0 BL 0x1C5C788
	0x034602E4 B 0x34602F8
	0x034602E8 LDR W9, [X10]
	0x034602EC ADD W9, W9, 0xB
	0x034602F0 ADD X8, X8, W9, 0x4, SXTW
	0x034602F4 ADD X0, X8, 0x138
	0x034602F8 LDP X8, X2, [X0]
	0x034602FC MOV X0, X21
	0x03460300 MOV X1, X22
	0x03460304 BLR X8
	0x03460308 TBZ X0, 0x0, 0x346039C
	0x0346030C LDR X8, [X19 + 0x60]
	0x03460310 CBZ X8, 0x3460550
	0x03460314 LDR X1, [X8 + 0x18]
	0x03460318 LDR X3, [X19 + 0x58]
	0x0346031C LDR X4, [X8 + 0x40]
	0x03460320 MOV X0, X20
	0x03460324 MOV X2, X31
	0x03460328 MOV X5, X31
	0x0346032C BL 0x34440A8
	0x03460330 CBZ X0, 0x3460554
	0x03460334 ADRP X8, 0xC94000
	0x03460338 LDR X8, [X8 + 0x840]
	0x0346033C LDR X1, [X8]
	0x03460340 BL 0x269F5D0
	0x03460344 ADRP X8, 0xC94000
	0x03460348 LDR X8, [X8 + 0x838]
	0x0346034C STR X0, [X31 + 0x20]
	0x03460350 LDR X1, [X8]
	0x03460354 ADD X0, X31, 0x20
	0x03460358 BL 0x2677430
	0x0346035C TBNZ X0, 0x0, 0x3460134
	0x03460360 STR W31, [X19]
	0x03460364 LDR X8, [X31 + 0x20]
	0x03460368 STR X8, [X19 + 0x68]
	0x0346036C LDR X0, [X25]
	0x03460370 LDR W8, [X0 + 0xE0]
	0x03460374 CBNZ W8, 0x346037C
	0x03460378 BL 0x1C16DFC
	0x0346037C ADRP X8, 0xCD0000
	0x03460380 LDR X8, [X8 + 0x178]
	0x03460384 ADD X0, X19, 0x8
	0x03460388 LDR X3, [X8]
	0x0346038C ADD X1, X31, 0x20
	0x03460390 MOV X2, X19
	0x03460394 BL 0x1FBBEB0
	0x03460398 B 0x3460510
	0x0346039C CBZ X20, 0x3460534
	0x034603A0 ADRP X8, 0xCD0000
	0x034603A4 LDR X8, [X8 + 0x180]
	0x034603A8 LDR X21, [X20 + 0x58]
	0x034603AC LDR X23, [X19 + 0x60]
	0x034603B0 LDR X0, [X8]
	0x034603B4 BL 0x1C16F10
	0x034603B8 ADRP X8, 0xCD0000
	0x034603BC LDR X8, [X8 + 0x1A8]
	0x034603C0 MOV X22, X0
	0x034603C4 LDR X2, [X8]
	0x034603C8 MOV X1, X23
	0x034603CC MOV X3, X31
	0x034603D0 BL 0x2D27AA8
	0x034603D4 LDR X8, [X19 + 0x60]
	0x034603D8 CBZ X8, 0x3460528
	0x034603DC ADRP X9, 0xCCF000
	0x034603E0 LDR X23, [X19 + 0x58]
	0x034603E4 LDR X9, [X9 + 0x7C8]
	0x034603E8 CBNZ X23, 0x34603F0
	0x034603EC LDR X23, [X20 + 0x18]
	0x034603F0 LDR X20, [X8 + 0x18]
	0x034603F4 LDR X1, [X8 + 0x40]
	0x034603F8 LDR X2, [X9]
	0x034603FC STP X31, X31, [X31 + 0x8]
	0x03460400 ADD X0, X31, 0x8
	0x03460404 BL 0x242E368
	0x03460408 ADRP X8, 0xCCF000
	0x0346040C LDR X8, [X8 + 0x7D0]
	0x03460410 LDR X0, [X8]
	0x03460414 BL 0x1C16F10
	0x03460418 LDP X3, X4, [X31 + 0x8]
	0x0346041C MOV X24, X0
	0x03460420 MOV X1, X20
	0x03460424 MOV X2, X23
	0x03460428 MOV X5, X31
	0x0346042C BL 0x3465404
	0x03460430 CBZ X21, 0x346052C
	0x03460434 ADRP X8, 0xCD0000
	0x03460438 LDR X8, [X8 + 0x188]
	0x0346043C LDR X3, [X8]
	0x03460440 MOV X0, X21
	0x03460444 MOV X1, X22
	0x03460448 MOV X2, X24
	0x0346044C BL 0x2243230
	0x03460450 CBZ X0, 0x3460530
	0x03460454 ADRP X8, 0xCD0000
	0x03460458 LDR X8, [X8 + 0x1A0]
	0x0346045C LDR X1, [X8]
	0x03460460 BL 0x269F5D0
	0x03460464 ADRP X8, 0xCD0000
	0x03460468 LDR X8, [X8 + 0x198]
	0x0346046C STR X0, [X31 + 0x18]
	0x03460470 LDR X1, [X8]
	0x03460474 ADD X0, X31, 0x18
	0x03460478 BL 0x2677430
	0x0346047C TBZ X0, 0x0, 0x34604D4
	0x03460480 ADRP X8, 0xCD0000
	0x03460484 LDR X8, [X8 + 0x190]
	0x03460488 ADD X0, X31, 0x18
	0x0346048C LDR X1, [X8]
	0x03460490 BL 0x2677474
	0x03460494 MOVN W8, 0x1
	0x03460498 STR W8, [X19]
	0x0346049C STR X31, [X19 + 0x60]
	0x034604A0 MOV X20, X0
	0x034604A4 LDR X0, [X25]
	0x034604A8 ADRP X21, 0xCCF000
	0x034604AC ADD X19, X19, 0x8
	0x034604B0 LDR W8, [X0 + 0xE0]
	0x034604B4 LDR X21, [X21 + 0x68]
	0x034604B8 CBNZ W8, 0x34604C0
	0x034604BC BL 0x1C16DFC
	0x034604C0 LDR X2, [X21]
	0x034604C4 MOV X0, X19
	0x034604C8 MOV X1, X20
	0x034604CC BL 0x26322B0
	0x034604D0 B 0x3460510
	0x034604D4 MOVZ W8, 0x1
	0x034604D8 STR W8, [X19]
	0x034604DC LDR X8, [X31 + 0x18]
	0x034604E0 STR X8, [X19 + 0x70]
	0x034604E4 LDR X0, [X25]
	0x034604E8 LDR W8, [X0 + 0xE0]
	0x034604EC CBNZ W8, 0x34604F4
	0x034604F0 BL 0x1C16DFC
	0x034604F4 ADRP X8, 0xCD0000
	0x034604F8 LDR X8, [X8 + 0x170]
	0x034604FC ADD X0, X19, 0x8
	0x03460500 LDR X3, [X8]
	0x03460504 ADD X1, X31, 0x18
	0x03460508 MOV X2, X19
	0x0346050C BL 0x1FBBEB0
	0x03460510 LDP X20, X19, [X31 + 0x60]
	0x03460514 LDP X22, X21, [X31 + 0x50]
	0x03460518 LDP X24, X23, [X31 + 0x40]
	0x0346051C LDP X30, X25, [X31 + 0x30]
	0x03460520 ADD X31, X31, 0x70
	0x03460524 RET
	0x03460528 BL 0x1C16F20
	0x0346052C BL 0x1C16F20
	0x03460530 BL 0x1C16F20
	0x03460534 BL 0x1C16F20
	0x03460538 BL 0x1C16F20
	0x0346053C BL 0x1C16F20
	0x03460540 BL 0x1C16F20
	0x03460544 BL 0x1C16F20
	0x03460548 BL 0x1C16F20
	0x0346054C BL 0x1C16F20
	0x03460550 BL 0x1C16F20
	0x03460554 BL 0x1C16F20
	0x03460558 B 0x34605CC
	0x0346055C B 0x34605CC
	0x03460560 B 0x34605CC
	0x03460564 B 0x34605CC
	0x03460568 B 0x34605CC
	0x0346056C B 0x34605CC
	0x03460570 B 0x34605CC
	0x03460574 B 0x34605CC
	0x03460578 B 0x34605CC
	0x0346057C B 0x34605CC
	0x03460580 B 0x34605CC
	0x03460584 B 0x34605CC
	0x03460588 B 0x34605CC
	0x0346058C B 0x34605CC
	0x03460590 B 0x34605CC
	0x03460594 B 0x34605CC
	0x03460598 B 0x34605CC
	0x0346059C B 0x34605CC
	0x034605A0 B 0x34605CC
	0x034605A4 B 0x34605CC
	0x034605A8 B 0x34605CC
	0x034605AC B 0x34605CC
	0x034605B0 B 0x34605CC
	0x034605B4 B 0x34605CC
	0x034605B8 B 0x34605CC
	0x034605BC B 0x34605CC
	0x034605C0 B 0x34605CC
	0x034605C4 B 0x34605CC
	0x034605C8 B 0x34605CC
	0x034605CC MOV X20, X0
	0x034605D0 CMP W1, 0x1
	0x034605D4 B.NE 0x3460674
	0x034605D8 MOV X0, X20
	0x034605DC BL 0x3EB1AD0
	0x034605E0 MOV X20, X0
	0x034605E4 ADRP X0, 0xC93000
	0x034605E8 LDR X0, [X0 + 0x7D0]
	0x034605EC BL 0x1C16D08
	0x034605F0 LDR X8, [X20]
	0x034605F4 LDR X1, [X8]
	0x034605F8 BL 0x1C17270
	0x034605FC TBZ X0, 0x0, 0x346064C
	0x03460600 LDR X20, [X20]
	0x03460604 BL 0x3EB1AE0
	0x03460608 MOVN W8, 0x1
	0x0346060C STR X31, [X19 + 0x60]
	0x03460610 STR W8, [X19], #0x8
	0x03460614 ADRP X0, 0xCCE000
	0x03460618 LDR X0, [X0 + 0x620]
	0x0346061C BL 0x1C16D08
	0x03460620 LDR W8, [X0 + 0xE0]
	0x03460624 CBNZ W8, 0x346062C
	0x03460628 BL 0x1C16DFC
	0x0346062C ADRP X0, 0xCCF000
	0x03460630 LDR X0, [X0 + 0xA8]
	0x03460634 BL 0x1C16D08
	0x03460638 MOV X2, X0
	0x0346063C MOV X0, X19
	0x03460640 MOV X1, X20
	0x03460644 BL 0x26324C8
	0x03460648 B 0x3460510
	0x0346064C MOVZ W0, 0x8
	0x03460650 BL 0x3EB1AF0
	0x03460654 LDR X8, [X20]
	0x03460658 STR X8, [X0]
	0x0346065C ADRP X1, 0xA54000
	0x03460660 ADD X1, X1, 0xE58
	0x03460664 MOV X2, X31
	0x03460668 BL 0x3EB1B00
	0x0346066C MOV X20, X0
	0x03460670 BL 0x3EB1AE0
	0x03460674 MOV X0, X20
	0x03460678 BL 0x1D2C690
	0x0346067C BL 0x1990590
	0x03460680 STR X30, [X31 - 0x30]!
	0x03460684 STP X22, X21, [X31 + 0x10]
	0x03460688 STP X20, X19, [X31 + 0x20]
	0x0346068C ADRP X22, 0xF7D000
	0x03460690 ADRP X21, 0xCCE000
	0x03460694 LDRB W8, [X22 + 0x7AE]
	0x03460698 LDR X21, [X21 + 0x620]
	0x0346069C MOV X19, X1
	0x034606A0 MOV X20, X0
	0x034606A4 TBNZ X8, 0x0, 0x34606C8
	0x034606A8 ADRP X0, 0xCCF000
	0x034606AC LDR X0, [X0 + 0xB0]
	0x034606B0 BL 0x1C16CF4
	0x034606B4 ADRP X0, 0xCCE000
	0x034606B8 LDR X0, [X0 + 0x620]
	0x034606BC BL 0x1C16CF4
	0x034606C0 MOVZ W8, 0x1
	0x034606C4 STRB W8, [X22 + 0x7AE]
	0x034606C8 LDR X0, [X21]
	0x034606CC ADRP X21, 0xCCF000
	0x034606D0 LDR W8, [X0 + 0xE0]
	0x034606D4 LDR X21, [X21 + 0xB0]
	0x034606D8 CBNZ W8, 0x34606E0
	0x034606DC BL 0x1C16DFC
	0x034606E0 LDR X2, [X21]
	0x034606E4 ADD X0, X20, 0x8
	0x034606E8 MOV X1, X19
	0x034606EC LDP X20, X19, [X31 + 0x20]
	0x034606F0 LDP X22, X21, [X31 + 0x10]
	0x034606F4 LDR X30, [X31], #0x30
	0x034606F8 B 0x2632228
	0x034606FC SUB X31, X31, 0x70
	0x03460700 STP X30, X25, [X31 + 0x30]
	0x03460704 STP X24, X23, [X31 + 0x40]
	0x03460708 STP X22, X21, [X31 + 0x50]
	0x0346070C STP X20, X19, [X31 + 0x60]
	0x03460710 ADRP X20, 0xF7D000
	0x03460714 LDRB W8, [X20 + 0x7AF]
	0x03460718 MOV X19, X0
	0x0346071C TBNZ X8, 0x0, 0x346080C
	0x03460720 ADRP X0, 0xCD0000
	0x03460724 LDR X0, [X0 + 0x1B8]
	0x03460728 BL 0x1C16CF4
	0x0346072C ADRP X0, 0xCD0000
	0x03460730 LDR X0, [X0 + 0x1C0]
	0x03460734 BL 0x1C16CF4
	0x03460738 ADRP X0, 0xCCF000
	0x0346073C LDR X0, [X0 + 0xC0]
	0x03460740 BL 0x1C16CF4
	0x03460744 ADRP X0, 0xCCE000
	0x03460748 LDR X0, [X0 + 0x648]
	0x0346074C BL 0x1C16CF4
	0x03460750 ADRP X0, 0xC95000
	0x03460754 LDR X0, [X0 + 0xA10]
	0x03460758 BL 0x1C16CF4
	0x0346075C ADRP X0, 0xC94000
	0x03460760 LDR X0, [X0 + 0x9F0]
	0x03460764 BL 0x1C16CF4
	0x03460768 ADRP X0, 0xCD0000
	0x0346076C LDR X0, [X0 + 0x1C8]
	0x03460770 BL 0x1C16CF4
	0x03460774 ADRP X0, 0xC94000
	0x03460778 LDR X0, [X0 + 0x818]
	0x0346077C BL 0x1C16CF4
	0x03460780 ADRP X0, 0xCCF000
	0x03460784 LDR X0, [X0 + 0x7C8]
	0x03460788 BL 0x1C16CF4
	0x0346078C ADRP X0, 0xCCF000
	0x03460790 LDR X0, [X0 + 0x7D0]
	0x03460794 BL 0x1C16CF4
	0x03460798 ADRP X0, 0xCD0000
	0x0346079C LDR X0, [X0 + 0x1D0]
	0x034607A0 BL 0x1C16CF4
	0x034607A4 ADRP X0, 0xCD0000
	0x034607A8 LDR X0, [X0 + 0x1D8]
	0x034607AC BL 0x1C16CF4
	0x034607B0 ADRP X0, 0xC94000
	0x034607B4 LDR X0, [X0 + 0x830]
	0x034607B8 BL 0x1C16CF4
	0x034607BC ADRP X0, 0xC94000
	0x034607C0 LDR X0, [X0 + 0x838]
	0x034607C4 BL 0x1C16CF4
	0x034607C8 ADRP X0, 0xCD0000
	0x034607CC LDR X0, [X0 + 0x1E0]
	0x034607D0 BL 0x1C16CF4
	0x034607D4 ADRP X0, 0xC94000
	0x034607D8 LDR X0, [X0 + 0x840]
	0x034607DC BL 0x1C16CF4
	0x034607E0 ADRP X0, 0xCD0000
	0x034607E4 LDR X0, [X0 + 0x1E8]
	0x034607E8 BL 0x1C16CF4
	0x034607EC ADRP X0, 0xCD0000
	0x034607F0 LDR X0, [X0 + 0x1F0]
	0x034607F4 BL 0x1C16CF4
	0x034607F8 ADRP X0, 0xCD0000
	0x034607FC LDR X0, [X0 + 0x1F8]
	0x03460800 BL 0x1C16CF4
	0x03460804 MOVZ W8, 0x1
	0x03460808 STRB W8, [X20 + 0x7AF]
	0x0346080C STP X31, X31, [X31 + 0x20]
	0x03460810 STR X31, [X31 + 0x18]
	0x03460814 ADRP X25, 0xCCE000
	0x03460818 LDR W8, [X19]
	0x0346081C LDR X20, [X19 + 0x20]
	0x03460820 LDR X25, [X25 + 0x648]
	0x03460824 CBZ W8, 0x3460848
	0x03460828 CMP W8, 0x1
	0x0346082C B.NE 0x3460874
	0x03460830 LDR X8, [X19 + 0x60]
	0x03460834 MOVN W9, 0x0
	0x03460838 STR X8, [X31 + 0x18]
	0x0346083C STR X31, [X19 + 0x60]
	0x03460840 STR W9, [X19]
	0x03460844 B 0x3460B90
	0x03460848 LDR X8, [X19 + 0x58]
	0x0346084C MOVN W9, 0x0
	0x03460850 STR X8, [X31 + 0x20]
	0x03460854 STR X31, [X19 + 0x58]
	0x03460858 STR W9, [X19]
	0x0346085C ADRP X8, 0xC94000
	0x03460860 LDR X8, [X8 + 0x830]
	0x03460864 ADD X0, X31, 0x20
	0x03460868 LDR X1, [X8]
	0x0346086C BL 0x2677474
	0x03460870 B 0x3460AAC
	0x03460874 ADRP X8, 0xCD0000
	0x03460878 LDR X8, [X8 + 0x1F8]
	0x0346087C LDR X0, [X8]
	0x03460880 BL 0x1C16F10
	0x03460884 MOV X21, X0
	0x03460888 MOV X1, X31
	0x0346088C BL 0x344B244
	0x03460890 STR X21, [X19 + 0x50]
	0x03460894 CBZ X21, 0x3460C48
	0x03460898 LDR X8, [X19 + 0x20]
	0x0346089C STR X8, [X21 + 0x10]
	0x034608A0 LDR X8, [X19 + 0x28]
	0x034608A4 STR X8, [X21 + 0x18]
	0x034608A8 LDR W8, [X19 + 0x30]
	0x034608AC STR W8, [X21 + 0x20]
	0x034608B0 LDR X8, [X19 + 0x38]
	0x034608B4 STR X8, [X21 + 0x28]
	0x034608B8 LDR X8, [X19 + 0x40]
	0x034608BC STR X8, [X21 + 0x30]
	0x034608C0 CBZ X20, 0x3460C4C
	0x034608C4 LDRB W8, [X20 + 0x10]
	0x034608C8 CBZ W8, 0x3460AB0
	0x034608CC LDR X8, [X19 + 0x50]
	0x034608D0 CBZ X8, 0x3460C50
	0x034608D4 LDR X21, [X8 + 0x18]
	0x034608D8 CBZ X21, 0x3460C54
	0x034608DC ADRP X23, 0xC94000
	0x034608E0 LDR X8, [X21]
	0x034608E4 LDR X23, [X23 + 0x818]
	0x034608E8 LDRH W9, [X8 + 0x12E]
	0x034608EC LDR X1, [X23]
	0x034608F0 CBZ X9, 0x3460914
	0x034608F4 LDR X10, [X8 + 0xB0]
	0x034608F8 ADD X10, X10, 0x8
	0x034608FC LDUR X11, [X10 - 0x8]
	0x03460900 CMP X11, X1
	0x03460904 B.EQ 0x3460924
	0x03460908 SUBS X9, X9, 0x1
	0x0346090C ADD X10, X10, 0x10
	0x03460910 B.NE 0x34608FC
	0x03460914 MOVZ W2, 0x7
	0x03460918 MOV X0, X21
	0x0346091C BL 0x1C5C788
	0x03460920 B 0x3460934
	0x03460924 LDR W9, [X10]
	0x03460928 ADD W9, W9, 0x7
	0x0346092C ADD X8, X8, W9, 0x4, SXTW
	0x03460930 ADD X0, X8, 0x138
	0x03460934 LDP X8, X1, [X0]
	0x03460938 MOV X0, X21
	0x0346093C BLR X8
	0x03460940 MOV X1, X31
	0x03460944 BL 0x32277A8
	0x03460948 TBNZ X0, 0x0, 0x3460AAC
	0x0346094C LDR X8, [X19 + 0x50]
	0x03460950 CBZ X8, 0x3460C58
	0x03460954 ADRP X9, 0xC94000
	0x03460958 LDR X9, [X9 + 0x9F0]
	0x0346095C LDR X21, [X8 + 0x18]
	0x03460960 LDR X0, [X9]
	0x03460964 LDR W9, [X0 + 0xE0]
	0x03460968 CBNZ W9, 0x3460970
	0x0346096C BL 0x1C16DFC
	0x03460970 MOV X0, X31
	0x03460974 BL 0x33616A4
	0x03460978 ADRP X22, 0xC95000
	0x0346097C LDR X22, [X22 + 0xA10]
	0x03460980 MOV X8, X0
	0x03460984 STR X8, [X31 + 0x28]
	0x03460988 LDR X0, [X22]
	0x0346098C LDR W8, [X0 + 0xE0]
	0x03460990 CBNZ W8, 0x346099C
	0x03460994 BL 0x1C16DFC
	0x03460998 LDR X0, [X22]
	0x0346099C LDR X8, [X0 + 0xB8]
	0x034609A0 LDR X1, [X8]
	0x034609A4 ADD X0, X31, 0x28
	0x034609A8 MOV X2, X31
	0x034609AC BL 0x335FC68
	0x034609B0 CBZ X21, 0x3460C5C
	0x034609B4 LDR X8, [X21]
	0x034609B8 LDR X1, [X23]
	0x034609BC MOV X22, X0
	0x034609C0 LDRH W9, [X8 + 0x12E]
	0x034609C4 CBZ X9, 0x34609E8
	0x034609C8 LDR X10, [X8 + 0xB0]
	0x034609CC ADD X10, X10, 0x8
	0x034609D0 LDUR X11, [X10 - 0x8]
	0x034609D4 CMP X11, X1
	0x034609D8 B.EQ 0x34609F8
	0x034609DC SUBS X9, X9, 0x1
	0x034609E0 ADD X10, X10, 0x10
	0x034609E4 B.NE 0x34609D0
	0x034609E8 MOVZ W2, 0xB
	0x034609EC MOV X0, X21
	0x034609F0 BL 0x1C5C788
	0x034609F4 B 0x3460A08
	0x034609F8 LDR W9, [X10]
	0x034609FC ADD W9, W9, 0xB
	0x03460A00 ADD X8, X8, W9, 0x4, SXTW
	0x03460A04 ADD X0, X8, 0x138
	0x03460A08 LDP X8, X2, [X0]
	0x03460A0C MOV X0, X21
	0x03460A10 MOV X1, X22
	0x03460A14 BLR X8
	0x03460A18 TBZ X0, 0x0, 0x3460AAC
	0x03460A1C LDR X8, [X19 + 0x50]
	0x03460A20 CBZ X8, 0x3460C60
	0x03460A24 LDR X1, [X8 + 0x18]
	0x03460A28 LDR X3, [X19 + 0x48]
	0x03460A2C LDR X4, [X8 + 0x30]
	0x03460A30 MOV X0, X20
	0x03460A34 MOV X2, X31
	0x03460A38 MOV X5, X31
	0x03460A3C BL 0x34440A8
	0x03460A40 CBZ X0, 0x3460C64
	0x03460A44 ADRP X8, 0xC94000
	0x03460A48 LDR X8, [X8 + 0x840]
	0x03460A4C LDR X1, [X8]
	0x03460A50 BL 0x269F5D0
	0x03460A54 ADRP X8, 0xC94000
	0x03460A58 LDR X8, [X8 + 0x838]
	0x03460A5C STR X0, [X31 + 0x20]
	0x03460A60 LDR X1, [X8]
	0x03460A64 ADD X0, X31, 0x20
	0x03460A68 BL 0x2677430
	0x03460A6C TBNZ X0, 0x0, 0x346085C
	0x03460A70 STR W31, [X19]
	0x03460A74 LDR X8, [X31 + 0x20]
	0x03460A78 STR X8, [X19 + 0x58]
	0x03460A7C LDR X0, [X25]
	0x03460A80 LDR W8, [X0 + 0xE0]
	0x03460A84 CBNZ W8, 0x3460A8C
	0x03460A88 BL 0x1C16DFC
	0x03460A8C ADRP X8, 0xCD0000
	0x03460A90 LDR X8, [X8 + 0x1C0]
	0x03460A94 ADD X0, X19, 0x8
	0x03460A98 LDR X3, [X8]
	0x03460A9C ADD X1, X31, 0x20
	0x03460AA0 MOV X2, X19
	0x03460AA4 BL 0x1FBC0C4
	0x03460AA8 B 0x3460C20
	0x03460AAC CBZ X20, 0x3460C44
	0x03460AB0 ADRP X8, 0xCD0000
	0x03460AB4 LDR X8, [X8 + 0x1C8]
	0x03460AB8 LDR X21, [X20 + 0x58]
	0x03460ABC LDR X23, [X19 + 0x50]
	0x03460AC0 LDR X0, [X8]
	0x03460AC4 BL 0x1C16F10
	0x03460AC8 ADRP X8, 0xCD0000
	0x03460ACC LDR X8, [X8 + 0x1F0]
	0x03460AD0 MOV X22, X0
	0x03460AD4 LDR X2, [X8]
	0x03460AD8 MOV X1, X23
	0x03460ADC MOV X3, X31
	0x03460AE0 BL 0x2D27AA8
	0x03460AE4 LDR X8, [X19 + 0x50]
	0x03460AE8 CBZ X8, 0x3460C38
	0x03460AEC ADRP X9, 0xCCF000
	0x03460AF0 LDR X23, [X19 + 0x48]
	0x03460AF4 LDR X9, [X9 + 0x7C8]
	0x03460AF8 CBNZ X23, 0x3460B00
	0x03460AFC LDR X23, [X20 + 0x18]
	0x03460B00 LDR X20, [X8 + 0x18]
	0x03460B04 LDR X1, [X8 + 0x30]
	0x03460B08 LDR X2, [X9]
	0x03460B0C STP X31, X31, [X31 + 0x8]
	0x03460B10 ADD X0, X31, 0x8
	0x03460B14 BL 0x242E368
	0x03460B18 ADRP X8, 0xCCF000
	0x03460B1C LDR X8, [X8 + 0x7D0]
	0x03460B20 LDR X0, [X8]
	0x03460B24 BL 0x1C16F10
	0x03460B28 LDP X3, X4, [X31 + 0x8]
	0x03460B2C MOV X24, X0
	0x03460B30 MOV X1, X20
	0x03460B34 MOV X2, X23
	0x03460B38 MOV X5, X31
	0x03460B3C BL 0x3465404
	0x03460B40 CBZ X21, 0x3460C3C
	0x03460B44 ADRP X8, 0xCD0000
	0x03460B48 LDR X8, [X8 + 0x1D0]
	0x03460B4C LDR X3, [X8]
	0x03460B50 MOV X0, X21
	0x03460B54 MOV X1, X22
	0x03460B58 MOV X2, X24
	0x03460B5C BL 0x2243230
	0x03460B60 CBZ X0, 0x3460C40
	0x03460B64 ADRP X8, 0xCD0000
	0x03460B68 LDR X8, [X8 + 0x1E8]
	0x03460B6C LDR X1, [X8]
	0x03460B70 BL 0x269F5D0
	0x03460B74 ADRP X8, 0xCD0000
	0x03460B78 LDR X8, [X8 + 0x1E0]
	0x03460B7C STR X0, [X31 + 0x18]
	0x03460B80 LDR X1, [X8]
	0x03460B84 ADD X0, X31, 0x18
	0x03460B88 BL 0x2677430
	0x03460B8C TBZ X0, 0x0, 0x3460BE4
	0x03460B90 ADRP X8, 0xCD0000
	0x03460B94 LDR X8, [X8 + 0x1D8]
	0x03460B98 ADD X0, X31, 0x18
	0x03460B9C LDR X1, [X8]
	0x03460BA0 BL 0x2677474
	0x03460BA4 MOVN W8, 0x1
	0x03460BA8 STR W8, [X19]
	0x03460BAC STR X31, [X19 + 0x50]
	0x03460BB0 MOV X20, X0
	0x03460BB4 LDR X0, [X25]
	0x03460BB8 ADRP X21, 0xCCF000
	0x03460BBC ADD X19, X19, 0x8
	0x03460BC0 LDR W8, [X0 + 0xE0]
	0x03460BC4 LDR X21, [X21 + 0xC0]
	0x03460BC8 CBNZ W8, 0x3460BD0
	0x03460BCC BL 0x1C16DFC
	0x03460BD0 LDR X2, [X21]
	0x03460BD4 MOV X0, X19
	0x03460BD8 MOV X1, X20
	0x03460BDC BL 0x26322B0
	0x03460BE0 B 0x3460C20
	0x03460BE4 MOVZ W8, 0x1
	0x03460BE8 STR W8, [X19]
	0x03460BEC LDR X8, [X31 + 0x18]
	0x03460BF0 STR X8, [X19 + 0x60]
	0x03460BF4 LDR X0, [X25]
	0x03460BF8 LDR W8, [X0 + 0xE0]
	0x03460BFC CBNZ W8, 0x3460C04
	0x03460C00 BL 0x1C16DFC
	0x03460C04 ADRP X8, 0xCD0000
	0x03460C08 LDR X8, [X8 + 0x1B8]
	0x03460C0C ADD X0, X19, 0x8
	0x03460C10 LDR X3, [X8]
	0x03460C14 ADD X1, X31, 0x18
	0x03460C18 MOV X2, X19
	0x03460C1C BL 0x1FBC0C4
	0x03460C20 LDP X20, X19, [X31 + 0x60]
	0x03460C24 LDP X22, X21, [X31 + 0x50]
	0x03460C28 LDP X24, X23, [X31 + 0x40]
	0x03460C2C LDP X30, X25, [X31 + 0x30]
	0x03460C30 ADD X31, X31, 0x70
	0x03460C34 RET
	0x03460C38 BL 0x1C16F20
	0x03460C3C BL 0x1C16F20
	0x03460C40 BL 0x1C16F20
	0x03460C44 BL 0x1C16F20
	0x03460C48 BL 0x1C16F20
	0x03460C4C BL 0x1C16F20
	0x03460C50 BL 0x1C16F20
	0x03460C54 BL 0x1C16F20
	0x03460C58 BL 0x1C16F20
	0x03460C5C BL 0x1C16F20
	0x03460C60 BL 0x1C16F20
	0x03460C64 BL 0x1C16F20
	0x03460C68 B 0x3460CDC
	0x03460C6C B 0x3460CDC
	0x03460C70 B 0x3460CDC
	0x03460C74 B 0x3460CDC
	0x03460C78 B 0x3460CDC
	0x03460C7C B 0x3460CDC
	0x03460C80 B 0x3460CDC
	0x03460C84 B 0x3460CDC
	0x03460C88 B 0x3460CDC
	0x03460C8C B 0x3460CDC
	0x03460C90 B 0x3460CDC
	0x03460C94 B 0x3460CDC
	0x03460C98 B 0x3460CDC
	0x03460C9C B 0x3460CDC
	0x03460CA0 B 0x3460CDC
	0x03460CA4 B 0x3460CDC
	0x03460CA8 B 0x3460CDC
	0x03460CAC B 0x3460CDC
	0x03460CB0 B 0x3460CDC
	0x03460CB4 B 0x3460CDC
	0x03460CB8 B 0x3460CDC
	0x03460CBC B 0x3460CDC
	0x03460CC0 B 0x3460CDC
	0x03460CC4 B 0x3460CDC
	0x03460CC8 B 0x3460CDC
	0x03460CCC B 0x3460CDC
	0x03460CD0 B 0x3460CDC
	0x03460CD4 B 0x3460CDC
	0x03460CD8 B 0x3460CDC
	0x03460CDC MOV X20, X0
	0x03460CE0 CMP W1, 0x1
	0x03460CE4 B.NE 0x3460D84
	0x03460CE8 MOV X0, X20
	0x03460CEC BL 0x3EB1AD0
	0x03460CF0 MOV X20, X0
	0x03460CF4 ADRP X0, 0xC93000
	0x03460CF8 LDR X0, [X0 + 0x7D0]
	0x03460CFC BL 0x1C16D08
	0x03460D00 LDR X8, [X20]
	0x03460D04 LDR X1, [X8]
	0x03460D08 BL 0x1C17270
	0x03460D0C TBZ X0, 0x0, 0x3460D5C
	0x03460D10 LDR X20, [X20]
	0x03460D14 BL 0x3EB1AE0
	0x03460D18 MOVN W8, 0x1
	0x03460D1C STR X31, [X19 + 0x50]
	0x03460D20 STR W8, [X19], #0x8
	0x03460D24 ADRP X0, 0xCCE000
	0x03460D28 LDR X0, [X0 + 0x648]
	0x03460D2C BL 0x1C16D08
	0x03460D30 LDR W8, [X0 + 0xE0]
	0x03460D34 CBNZ W8, 0x3460D3C
	0x03460D38 BL 0x1C16DFC
	0x03460D3C ADRP X0, 0xCCF000
	0x03460D40 LDR X0, [X0 + 0xD8]
	0x03460D44 BL 0x1C16D08
	0x03460D48 MOV X2, X0
	0x03460D4C MOV X0, X19
	0x03460D50 MOV X1, X20
	0x03460D54 BL 0x26324C8
	0x03460D58 B 0x3460C20
	0x03460D5C MOVZ W0, 0x8
	0x03460D60 BL 0x3EB1AF0
	0x03460D64 LDR X8, [X20]
	0x03460D68 STR X8, [X0]
	0x03460D6C ADRP X1, 0xA54000
	0x03460D70 ADD X1, X1, 0xE58
	0x03460D74 MOV X2, X31
	0x03460D78 BL 0x3EB1B00
	0x03460D7C MOV X20, X0
	0x03460D80 BL 0x3EB1AE0
	0x03460D84 MOV X0, X20
	0x03460D88 BL 0x1D2C690
	0x03460D8C BL 0x1990590
	0x03460D90 STR X30, [X31 - 0x30]!
	0x03460D94 STP X22, X21, [X31 + 0x10]
	0x03460D98 STP X20, X19, [X31 + 0x20]
	0x03460D9C ADRP X22, 0xF7D000
	0x03460DA0 ADRP X21, 0xCCE000
	0x03460DA4 LDRB W8, [X22 + 0x7B0]
	0x03460DA8 LDR X21, [X21 + 0x648]
	0x03460DAC MOV X19, X1
	0x03460DB0 MOV X20, X0
	0x03460DB4 TBNZ X8, 0x0, 0x3460DD8
	0x03460DB8 ADRP X0, 0xCCF000
	0x03460DBC LDR X0, [X0 + 0xE0]
	0x03460DC0 BL 0x1C16CF4
	0x03460DC4 ADRP X0, 0xCCE000
	0x03460DC8 LDR X0, [X0 + 0x648]
	0x03460DCC BL 0x1C16CF4
	0x03460DD0 MOVZ W8, 0x1
	0x03460DD4 STRB W8, [X22 + 0x7B0]
	0x03460DD8 LDR X0, [X21]
	0x03460DDC ADRP X21, 0xCCF000
	0x03460DE0 LDR W8, [X0 + 0xE0]
	0x03460DE4 LDR X21, [X21 + 0xE0]
	0x03460DE8 CBNZ W8, 0x3460DF0
	0x03460DEC BL 0x1C16DFC
	0x03460DF0 LDR X2, [X21]
	0x03460DF4 ADD X0, X20, 0x8
	0x03460DF8 MOV X1, X19
	0x03460DFC LDP X20, X19, [X31 + 0x20]
	0x03460E00 LDP X22, X21, [X31 + 0x10]
	0x03460E04 LDR X30, [X31], #0x30
	0x03460E08 B 0x2632228
	0x03460E0C SUB X31, X31, 0x70
	0x03460E10 STP X30, X25, [X31 + 0x30]
	0x03460E14 STP X24, X23, [X31 + 0x40]
	0x03460E18 STP X22, X21, [X31 + 0x50]
	0x03460E1C STP X20, X19, [X31 + 0x60]
	0x03460E20 ADRP X20, 0xF7D000
	0x03460E24 LDRB W8, [X20 + 0x7B1]
	0x03460E28 MOV X19, X0
	0x03460E2C TBNZ X8, 0x0, 0x3460F1C
	0x03460E30 ADRP X0, 0xCD0000
	0x03460E34 LDR X0, [X0 + 0x200]
	0x03460E38 BL 0x1C16CF4
	0x03460E3C ADRP X0, 0xCD0000
	0x03460E40 LDR X0, [X0 + 0x208]
	0x03460E44 BL 0x1C16CF4
	0x03460E48 ADRP X0, 0xCCF000
	0x03460E4C LDR X0, [X0 + 0xF0]
	0x03460E50 BL 0x1C16CF4
	0x03460E54 ADRP X0, 0xCCE000
	0x03460E58 LDR X0, [X0 + 0x6E0]
	0x03460E5C BL 0x1C16CF4
	0x03460E60 ADRP X0, 0xC95000
	0x03460E64 LDR X0, [X0 + 0xA10]
	0x03460E68 BL 0x1C16CF4
	0x03460E6C ADRP X0, 0xC94000
	0x03460E70 LDR X0, [X0 + 0x9F0]
	0x03460E74 BL 0x1C16CF4
	0x03460E78 ADRP X0, 0xCCF000
	0x03460E7C LDR X0, [X0 + 0x7C0]
	0x03460E80 BL 0x1C16CF4
	0x03460E84 ADRP X0, 0xC94000
	0x03460E88 LDR X0, [X0 + 0x818]
	0x03460E8C BL 0x1C16CF4
	0x03460E90 ADRP X0, 0xCCF000
	0x03460E94 LDR X0, [X0 + 0x7C8]
	0x03460E98 BL 0x1C16CF4
	0x03460E9C ADRP X0, 0xCCF000
	0x03460EA0 LDR X0, [X0 + 0x7D0]
	0x03460EA4 BL 0x1C16CF4
	0x03460EA8 ADRP X0, 0xCCF000
	0x03460EAC LDR X0, [X0 + 0x7D8]
	0x03460EB0 BL 0x1C16CF4
	0x03460EB4 ADRP X0, 0xC94000
	0x03460EB8 LDR X0, [X0 + 0x830]
	0x03460EBC BL 0x1C16CF4
	0x03460EC0 ADRP X0, 0xC95000
	0x03460EC4 LDR X0, [X0 + 0xDB0]
	0x03460EC8 BL 0x1C16CF4
	0x03460ECC ADRP X0, 0xC94000
	0x03460ED0 LDR X0, [X0 + 0x838]
	0x03460ED4 BL 0x1C16CF4
	0x03460ED8 ADRP X0, 0xC95000
	0x03460EDC LDR X0, [X0 + 0xDB8]
	0x03460EE0 BL 0x1C16CF4
	0x03460EE4 ADRP X0, 0xC94000
	0x03460EE8 LDR X0, [X0 + 0x840]
	0x03460EEC BL 0x1C16CF4
	0x03460EF0 ADRP X0, 0xC95000
	0x03460EF4 LDR X0, [X0 + 0xDC0]
	0x03460EF8 BL 0x1C16CF4
	0x03460EFC ADRP X0, 0xCD0000
	0x03460F00 LDR X0, [X0 + 0x210]
	0x03460F04 BL 0x1C16CF4
	0x03460F08 ADRP X0, 0xCD0000
	0x03460F0C LDR X0, [X0 + 0x218]
	0x03460F10 BL 0x1C16CF4
	0x03460F14 MOVZ W8, 0x1
	0x03460F18 STRB W8, [X20 + 0x7B1]
	0x03460F1C STP X31, X31, [X31 + 0x20]
	0x03460F20 STR X31, [X31 + 0x18]
	0x03460F24 ADRP X25, 0xCCE000
	0x03460F28 LDR W8, [X19]
	0x03460F2C LDR X20, [X19 + 0x20]
	0x03460F30 LDR X25, [X25 + 0x6E0]
	0x03460F34 CBZ W8, 0x3460F58
	0x03460F38 CMP W8, 0x1
	0x03460F3C B.NE 0x3460F84
	0x03460F40 LDR X8, [X19 + 0x68]
	0x03460F44 MOVN W9, 0x0
	0x03460F48 STR X8, [X31 + 0x18]
	0x03460F4C STR X31, [X19 + 0x68]
	0x03460F50 STR W9, [X19]
	0x03460F54 B 0x34612A8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xF7F000
	015 Move W8, [X20+1963]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {101}
	021 Move X0, 0xCD2000
	022 Move X0, [X0+224]
	023 Call 0x1C17CF4
	024 Move X0, 0xCD2000
	025 Move X0, [X0+336]
	026 Call 0x1C17CF4
	027 Move X0, 0xCD2000
	028 Move X0, [X0+344]
	029 Call 0x1C17CF4
	030 Move X0, 0xCD1000
	031 Move X0, [X0]
	032 Call 0x1C17CF4
	033 Move X0, 0xCD0000
	034 Move X0, [X0+1496]
	035 Call 0x1C17CF4
	036 Move X0, 0xC97000
	037 Move X0, [X0+2576]
	038 Call 0x1C17CF4
	039 Move X0, 0xC96000
	040 Move X0, [X0+2544]
	041 Call 0x1C17CF4
	042 Move X0, 0xCD2000
	043 Move X0, [X0+248]
	044 Call 0x1C17CF4
	045 Move X0, 0xCD2000
	046 Move X0, [X0+256]
	047 Call 0x1C17CF4
	048 Move X0, 0xCD2000
	049 Move X0, [X0+264]
	050 Call 0x1C17CF4
	051 Move X0, 0xC95000
	052 Move X0, [X0+3584]
	053 Call 0x1C17CF4
	054 Move X0, 0xCD2000
	055 Move X0, [X0+272]
	056 Call 0x1C17CF4
	057 Move X0, 0xCD2000
	058 Move X0, [X0+280]
	059 Call 0x1C17CF4
	060 Move X0, 0xC95000
	061 Move X0, [X0+3608]
	062 Call 0x1C17CF4
	063 Move X0, 0xC96000
	064 Move X0, [X0+2072]
	065 Call 0x1C17CF4
	066 Move X0, 0xCD1000
	067 Move X0, [X0+1992]
	068 Call 0x1C17CF4
	069 Move X0, 0xCD1000
	070 Move X0, [X0+2000]
	071 Call 0x1C17CF4
	072 Move X0, 0xCD2000
	073 Move X0, [X0+288]
	074 Call 0x1C17CF4
	075 Move X0, 0xC96000
	076 Move X0, [X0+2096]
	077 Call 0x1C17CF4
	078 Move X0, 0xCD2000
	079 Move X0, [X0+296]
	080 Call 0x1C17CF4
	081 Move X0, 0xC96000
	082 Move X0, [X0+2104]
	083 Call 0x1C17CF4
	084 Move X0, 0xCD2000
	085 Move X0, [X0+304]
	086 Call 0x1C17CF4
	087 Move X0, 0xC96000
	088 Move X0, [X0+2112]
	089 Call 0x1C17CF4
	090 Move X0, 0xCD2000
	091 Move X0, [X0+312]
	092 Call 0x1C17CF4
	093 Move X0, 0xCD2000
	094 Move X0, [X0+352]
	095 Call 0x1C17CF4
	096 Move X0, 0xCD2000
	097 Move X0, [X0+360]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X20+1963], W8
	101 Move [X31+32], X31
	102 Move [X31+40], X31
	103 Move [X31+24], X31
	104 Move W25, [X19]
	105 Move X20, [X19+32]
	106 Compare W25, 0
	107 JumpIfEqual {116}
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X19+128]
	110 Move TEMP, 0
	111 Not TEMP
	112 Move W25, TEMP
	113 Move [X31+24], X8
	114 Move [X19+128], X31
	115 Move [X19], W25
	116 Move X8, [X19+120]
	117 Move TEMP, 0
	118 Not TEMP
	119 Move W25, TEMP
	120 Move [X31+32], X8
	121 Move [X19+120], X31
	122 Move [X19], W25
	123 Move X8, 0xC95000
	124 Move X8, [X8+2096]
	125 Add X0, X31, 32
	126 Move X1, [X8]
	127 Call TaskAwaiter`1<Object>.GetResult, X0
	128 Move X8, 0xCD1000
	129 Move X8, [X8+360]
	130 Move X0, [X8]
	131 Call 0x1C17F10
	132 Move X21, X0
	133 Move X1, X31
	134 Call <>c__DisplayClass86_0..ctor, X0
	135 Move [X19+112], X21
	136 Compare X21, 0
	137 JumpIfEqual {943}
	138 Move X8, [X19+32]
	139 Move [X21+16], X8
	140 Move X8, [X19+40]
	141 Move [X21+24], X8
	142 Move X8, [X19+48]
	143 Move [X21+32], X8
	144 Move X8, [X19+56]
	145 Move [X21+40], X8
	146 Move W8, [X19+64]
	147 Move [X21+48], W8
	148 Move X8, [X19+72]
	149 Move [X21+56], X8
	150 Move V0, [X19+5]
	151 Move [X21+4], V0
	152 Move X8, [X19+112]
	153 Compare X8, 0
	154 JumpIfEqual {944}
	155 Move X9, [X19+96]
	156 Move [X8+80], X9
	157 Compare X20, 0
	158 JumpIfEqual {945}
	159 Move W8, [X20+16]
	160 Compare W8, 0
	161 JumpIfEqual {301}
	162 Move X8, [X19+112]
	163 Compare X8, 0
	164 JumpIfEqual {946}
	165 Move X21, [X8+24]
	166 Compare X21, 0
	167 JumpIfEqual {947}
	168 Move X23, 0xC95000
	169 Move X8, [X21]
	170 Move X23, [X23+2072]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Move X1, [X23]
	173 Compare X9, 0
	174 JumpIfEqual {181}
	175 Move X10, [X8+176]
	176 Add X10, X10, 8
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Subtract X9, X9, 1
	180 Add X10, X10, 16
	181 Move W2, 7
	182 Move X0, X21
	183 Call 0x1C5D788
	184 Move W9, [X10]
	185 Add W9, W9, 7
	186 Add X8, X8, W9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X1, [X0+8]
	190 Move X0, X21
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X1, X31
	193 Call String.IsNullOrEmpty, X0
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {299}
	198 Move X8, [X19+112]
	199 Compare X8, 0
	200 JumpIfEqual {948}
	201 Move X9, 0xC95000
	202 Move X9, [X9+2544]
	203 Move X21, [X8+24]
	204 Move X0, [X9]
	205 Move W9, [X0+224]
	206 Compare W9, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X31
	210 Call DateTime.get_UtcNow
	211 Move X22, 0xC96000
	212 Move X22, [X22+2576]
	213 Move X8, X0
	214 Move [X31+40], X8
	215 Move X0, [X22]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {221}
	219 Call 0x1C17DFC
	220 Move X0, [X22]
	221 Move X8, [X0+184]
	222 Move X1, [X8]
	223 Add X0, X31, 40
	224 Move X2, X31
	225 Call DateTime.Add, X0, X1
	226 Compare X21, 0
	227 JumpIfEqual {949}
	228 Move X8, [X21]
	229 Move X1, [X23]
	230 Move X22, X0
	231 NotImplemented "Instruction LDRH not yet implemented."
	232 Compare X9, 0
	233 JumpIfEqual {240}
	234 Move X10, [X8+176]
	235 Add X10, X10, 8
	236 NotImplemented "Instruction LDUR not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Subtract X9, X9, 1
	239 Add X10, X10, 16
	240 Move W2, 11
	241 Move X0, X21
	242 Call 0x1C5D788
	243 Move W9, [X10]
	244 Add W9, W9, 11
	245 Add X8, X8, W9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X2, [X0+8]
	249 Move X0, X21
	250 Move X1, X22
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move TEMP, X0
	253 And TEMP, TEMP, 1
	254 Compare TEMP, 1
	255 JumpIfNotEqual {299}
	256 Move X8, [X19+112]
	257 Compare X8, 0
	258 JumpIfEqual {950}
	259 Move X1, [X8+24]
	260 Move X3, [X19+104]
	261 Move X4, [X8+80]
	262 Move X0, X20
	263 Move X2, X31
	264 Move X5, X31
	265 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	266 Compare X0, 0
	267 JumpIfEqual {951}
	268 Move X8, 0xC95000
	269 Move X8, [X8+2112]
	270 Move X1, [X8]
	271 Call Task`1<Object>.GetAwaiter, X0
	272 Move X8, 0xC95000
	273 Move X8, [X8+2104]
	274 Move [X31+32], X0
	275 Move X1, [X8]
	276 Add X0, X31, 32
	277 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	278 Move TEMP, X0
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfEqual {123}
	282 Move [X19], W31
	283 Move X8, [X31+32]
	284 Move [X19+120], X8
	285 Move X8, 0xCCF000
	286 Move X8, [X8+1496]
	287 Move X0, [X8]
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {292}
	291 Call 0x1C17DFC
	292 Move X8, 0xCD1000
	293 Move X8, [X8+344]
	294 Add X0, X19, 8
	295 Move X3, [X8]
	296 Add X1, X31, 32
	297 Move X2, X19
	298 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	299 Compare X20, 0
	300 JumpIfEqual {938}
	301 Move X8, 0xCD1000
	302 Move X8, [X8+248]
	303 Move X21, [X20+88]
	304 Move X23, [X19+112]
	305 Move X0, [X8]
	306 Call 0x1C17F10
	307 Move X8, 0xCD1000
	308 Move X8, [X8+352]
	309 Move X22, X0
	310 Move X2, [X8]
	311 Move X1, X23
	312 Move X3, X31
	313 Call Func`1<Object>..ctor, X0, X1, X2
	314 Move X8, [X19+112]
	315 Compare X8, 0
	316 JumpIfEqual {935}
	317 Move X9, 0xCD0000
	318 Move X23, [X19+104]
	319 Move X24, [X8+24]
	320 Move X9, [X9+1992]
	321 Compare X23, 0
	322 JumpIfNotEqual {324}
	323 Move X23, [X20+24]
	324 Move X1, [X8+80]
	325 Move X2, [X9]
	326 Move [X31+8], X31
	327 Move [X31+16], X31
	328 Add X0, X31, 8
	329 Call Nullable`1<CancellationToken>..ctor, X0, X1
	330 Move X8, 0xCD0000
	331 Move X8, [X8+2000]
	332 Move X0, [X8]
	333 Call 0x1C17F10
	334 Move X3, [X31+8]
	335 Move X4, [X31+16]
	336 Move X20, X0
	337 Move X1, X24
	338 Move X2, X23
	339 Move X5, X31
	340 Call RetryHistory..ctor, X0, X1, X2, X3
	341 Compare X21, 0
	342 JumpIfEqual {936}
	343 Move X8, 0xCD1000
	344 Move X8, [X8+288]
	345 Move X3, [X8]
	346 Move X0, X21
	347 Move X1, X22
	348 Move X2, X20
	349 Call 0x2244230, X0, X1, X2
	350 Compare X0, 0
	351 JumpIfEqual {937}
	352 Move X8, 0xCD1000
	353 Move X8, [X8+312]
	354 Move X1, [X8]
	355 Call Task`1<Object>.GetAwaiter, X0
	356 Move X8, 0xCD1000
	357 Move X8, [X8+304]
	358 Move [X31+24], X0
	359 Move X1, [X8]
	360 Add X0, X31, 24
	361 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	362 Move TEMP, X0
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {390}
	366 Move X8, 0xCD1000
	367 Move X8, [X8+296]
	368 Add X0, X31, 24
	369 Move X1, [X8]
	370 Call TaskAwaiter`1<Object>.GetResult, X0
	371 Move X20, X0
	372 Compare X0, 0
	373 JumpIfEqual {930}
	374 Move X10, 0xCD1000
	375 Move X8, [X20]
	376 Move X10, [X10+256]
	377 NotImplemented "Instruction LDRH not yet implemented."
	378 Move X1, [X10]
	379 Compare X9, 0
	380 JumpIfEqual {387}
	381 Move X10, [X8+176]
	382 Add X10, X10, 8
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Subtract X9, X9, 1
	386 Add X10, X10, 16
	387 Move W2, 4
	388 Move X0, X20
	389 Call 0x1C5D788
	390 Move W8, 1
	391 Move [X19], W8
	392 Move X8, [X31+24]
	393 Move [X19+128], X8
	394 Move X8, 0xCCF000
	395 Move X8, [X8+1496]
	396 Move X0, [X8]
	397 Move W8, [X0+224]
	398 Compare W8, 0
	399 JumpIfNotEqual {401}
	400 Call 0x1C17DFC
	401 Move X8, 0xCD1000
	402 Move X8, [X8+336]
	403 Add X0, X19, 8
	404 Move X3, [X8]
	405 Add X1, X31, 24
	406 Move X2, X19
	407 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	408 Move W9, [X10]
	409 Add W9, W9, 4
	410 Add X8, X8, W9
	411 Add X0, X8, 312
	412 Move X8, [X0]
	413 Move X1, [X0+8]
	414 Move X0, X20
	415 NotImplemented "Instruction BLR not yet implemented."
	416 Move X21, X0
	417 Compare X0, 0
	418 JumpIfEqual {931}
	419 Move X10, 0xCD1000
	420 Move X8, [X21]
	421 Move X10, [X10+272]
	422 NotImplemented "Instruction LDRH not yet implemented."
	423 Move X1, [X10]
	424 Compare X9, 0
	425 JumpIfEqual {432}
	426 Move X10, [X8+176]
	427 Add X10, X10, 8
	428 NotImplemented "Instruction LDUR not yet implemented."
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Subtract X9, X9, 1
	431 Add X10, X10, 16
	432 Move X0, X21
	433 Move W2, W31
	434 Call 0x1C5D788
	435 NotImplemented "Instruction LDRSW not yet implemented."
	436 Add X8, X8, X9
	437 Add X0, X8, 312
	438 Move X8, [X0]
	439 Move X1, [X0+8]
	440 Move X0, X21
	441 NotImplemented "Instruction BLR not yet implemented."
	442 Move X21, X0
	443 Compare X0, 0
	444 JumpIfEqual {932}
	445 Move X24, 0xC94000
	446 Move X28, 0xCD1000
	447 Move X29, 0xC95000
	448 Move X26, 0xCD1000
	449 Move X27, 0xCD1000
	450 Move X24, [X24+3608]
	451 Move X28, [X28+280]
	452 Move X29, [X29+2072]
	453 Move X26, [X26+264]
	454 Move X27, [X27+224]
	455 Move X8, [X21]
	456 Move X1, [X24]
	457 NotImplemented "Instruction LDRH not yet implemented."
	458 Compare X9, 0
	459 JumpIfEqual {466}
	460 Move X10, [X8+176]
	461 Add X10, X10, 8
	462 NotImplemented "Instruction LDUR not yet implemented."
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Subtract X9, X9, 1
	465 Add X10, X10, 16
	466 Move X0, X21
	467 Move W2, W31
	468 Call 0x1C5D788
	469 NotImplemented "Instruction LDRSW not yet implemented."
	470 Add X8, X8, X9
	471 Add X0, X8, 312
	472 Move X8, [X0]
	473 Move X1, [X0+8]
	474 Move X0, X21
	475 NotImplemented "Instruction BLR not yet implemented."
	476 Move TEMP, X0
	477 And TEMP, TEMP, 1
	478 Compare TEMP, 1
	479 JumpIfNotEqual {603}
	480 Move X8, [X21]
	481 Move X1, [X28]
	482 NotImplemented "Instruction LDRH not yet implemented."
	483 Compare X9, 0
	484 JumpIfEqual {491}
	485 Move X10, [X8+176]
	486 Add X10, X10, 8
	487 NotImplemented "Instruction LDUR not yet implemented."
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Subtract X9, X9, 1
	490 Add X10, X10, 16
	491 Move X0, X21
	492 Move W2, W31
	493 Call 0x1C5D788
	494 NotImplemented "Instruction LDRSW not yet implemented."
	495 Add X8, X8, X9
	496 Add X0, X8, 312
	497 Move X8, [X0]
	498 Move X1, [X0+8]
	499 Move X0, X21
	500 NotImplemented "Instruction BLR not yet implemented."
	501 Move X8, [X19+112]
	502 Compare X8, 0
	503 JumpIfEqual {920}
	504 Move X23, [X8+24]
	505 Compare X23, 0
	506 JumpIfEqual {921}
	507 Move X8, [X23]
	508 Move X1, [X29]
	509 Move X22, X0
	510 NotImplemented "Instruction LDRH not yet implemented."
	511 Compare X9, 0
	512 JumpIfEqual {519}
	513 Move X10, [X8+176]
	514 Add X10, X10, 8
	515 NotImplemented "Instruction LDUR not yet implemented."
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Subtract X9, X9, 1
	518 Add X10, X10, 16
	519 Move W2, 10
	520 Move X0, X23
	521 Call 0x1C5D788
	522 Move W9, [X10]
	523 Add W9, W9, 10
	524 Add X8, X8, W9
	525 Add X0, X8, 312
	526 Move X8, [X0]
	527 Move X1, [X0+8]
	528 Move X0, X23
	529 NotImplemented "Instruction BLR not yet implemented."
	530 Compare X22, 0
	531 JumpIfEqual {918}
	532 Move X8, [X22]
	533 Move X1, [X26]
	534 Move X23, X0
	535 NotImplemented "Instruction LDRH not yet implemented."
	536 Compare X9, 0
	537 JumpIfEqual {544}
	538 Move X10, [X8+176]
	539 Add X10, X10, 8
	540 NotImplemented "Instruction LDUR not yet implemented."
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Subtract X9, X9, 1
	543 Add X10, X10, 16
	544 Move W2, 6
	545 Move X0, X22
	546 Call 0x1C5D788
	547 Move W9, [X10]
	548 Add W9, W9, 6
	549 Add X8, X8, W9
	550 Add X0, X8, 312
	551 Move X8, [X0]
	552 Move X1, [X0+8]
	553 Move X0, X22
	554 NotImplemented "Instruction BLR not yet implemented."
	555 Move X1, X0
	556 Compare X23, 0
	557 JumpIfEqual {919}
	558 Move X0, X23
	559 Move X2, X31
	560 Call String.Equals, X0, X1
	561 Move TEMP, X0
	562 And TEMP, TEMP, 1
	563 Compare TEMP, 1
	564 JumpIfNotEqual {455}
	565 Move X9, [X22]
	566 Move X8, [X27]
	567 Move W11, [X9+304]
	568 Move W10, [X8+304]
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move X9, [X9+200]
	571 Add X9, X9, X10
	572 NotImplemented "Instruction LDUR not yet implemented."
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X8, [X19+112]
	575 Compare X8, 0
	576 JumpIfEqual {926}
	577 Move X23, [X8+24]
	578 Compare X23, 0
	579 JumpIfEqual {927}
	580 Move X8, [X23]
	581 Move X1, [X29]
	582 NotImplemented "Instruction LDRH not yet implemented."
	583 Compare X9, 0
	584 JumpIfEqual {591}
	585 Move X10, [X8+176]
	586 Add X10, X10, 8
	587 NotImplemented "Instruction LDUR not yet implemented."
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Subtract X9, X9, 1
	590 Add X10, X10, 16
	591 Move W2, 9
	592 Move X0, X23
	593 Call 0x1C5D788
	594 Move W9, [X10]
	595 Add W9, W9, 9
	596 Add X8, X8, W9
	597 Add X0, X8, 312
	598 Move X8, [X0]
	599 Move X1, [X0+8]
	600 Move X0, X23
	601 NotImplemented "Instruction BLR not yet implemented."
	602 Move [X22+104], X0
	603 Move X24, X31
	604 Move W22, 11
	605 Move TEMP, X25
	606 And TEMP, TEMP, -2147483648
	607 Compare TEMP, -2147483648
	608 JumpIfNotEqual {634}
	609 Compare X21, 0
	610 JumpIfEqual {634}
	611 Move X10, 0xC94000
	612 Move X8, [X21]
	613 Move X10, [X10+3584]
	614 NotImplemented "Instruction LDRH not yet implemented."
	615 Move X1, [X10]
	616 Compare X9, 0
	617 JumpIfEqual {624}
	618 Move X10, [X8+176]
	619 Add X10, X10, 8
	620 NotImplemented "Instruction LDUR not yet implemented."
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Subtract X9, X9, 1
	623 Add X10, X10, 16
	624 Move X0, X21
	625 Move W2, W31
	626 Call 0x1C5D788
	627 NotImplemented "Instruction LDRSW not yet implemented."
	628 Add X8, X8, X9
	629 Add X0, X8, 312
	630 Move X8, [X0]
	631 Move X1, [X0+8]
	632 Move X0, X21
	633 NotImplemented "Instruction BLR not yet implemented."
	634 Compare X24, 0
	635 JumpIfNotEqual {933}
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Compare W22, 0
	638 JumpIfNotEqual {904}
	639 Move X8, [X20]
	640 Move X10, 0xCD1000
	641 NotImplemented "Instruction LDRH not yet implemented."
	642 Move X10, [X10+256]
	643 Move X1, [X10]
	644 Compare X9, 0
	645 JumpIfEqual {652}
	646 Move X10, [X8+176]
	647 Add X10, X10, 8
	648 NotImplemented "Instruction LDUR not yet implemented."
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Subtract X9, X9, 1
	651 Add X10, X10, 16
	652 Move W2, 1
	653 Move X0, X20
	654 Call 0x1C5D788
	655 Move W9, [X10]
	656 Add W9, W9, 1
	657 Add X8, X8, W9
	658 Add X0, X8, 312
	659 Move X8, [X0]
	660 Move X1, [X0+8]
	661 Move X0, X20
	662 NotImplemented "Instruction BLR not yet implemented."
	663 Move X21, X0
	664 Compare X0, 0
	665 JumpIfEqual {939}
	666 Move X8, [X21]
	667 Move X10, 0xCD1000
	668 NotImplemented "Instruction LDRH not yet implemented."
	669 Move X10, [X10+272]
	670 Move X1, [X10]
	671 Compare X9, 0
	672 JumpIfEqual {679}
	673 Move X10, [X8+176]
	674 Add X10, X10, 8
	675 NotImplemented "Instruction LDUR not yet implemented."
	676 NotImplemented "Instruction CMP not yet implemented."
	677 Subtract X9, X9, 1
	678 Add X10, X10, 16
	679 Move X0, X21
	680 Move W2, W31
	681 Call 0x1C5D788
	682 NotImplemented "Instruction LDRSW not yet implemented."
	683 Add X8, X8, X9
	684 Add X0, X8, 312
	685 Move X8, [X0]
	686 Move X1, [X0+8]
	687 Move X0, X21
	688 NotImplemented "Instruction BLR not yet implemented."
	689 Move X21, X0
	690 Compare X0, 0
	691 JumpIfEqual {940}
	692 Move X24, 0xC94000
	693 Move X26, 0xCD1000
	694 Move X27, 0xC95000
	695 Move X28, 0xCD1000
	696 Move X29, 0xCD1000
	697 Move X24, [X24+3608]
	698 Move X26, [X26+280]
	699 Move X27, [X27+2072]
	700 Move X28, [X28+264]
	701 Move X29, [X29+224]
	702 Move X8, [X21]
	703 Move X1, [X24]
	704 NotImplemented "Instruction LDRH not yet implemented."
	705 Compare X9, 0
	706 JumpIfEqual {713}
	707 Move X10, [X8+176]
	708 Add X10, X10, 8
	709 NotImplemented "Instruction LDUR not yet implemented."
	710 NotImplemented "Instruction CMP not yet implemented."
	711 Subtract X9, X9, 1
	712 Add X10, X10, 16
	713 Move X0, X21
	714 Move W2, W31
	715 Call 0x1C5D788
	716 NotImplemented "Instruction LDRSW not yet implemented."
	717 Add X8, X8, X9
	718 Add X0, X8, 312
	719 Move X8, [X0]
	720 Move X1, [X0+8]
	721 Move X0, X21
	722 NotImplemented "Instruction BLR not yet implemented."
	723 Move TEMP, X0
	724 And TEMP, TEMP, 1
	725 Compare TEMP, 1
	726 JumpIfNotEqual {850}
	727 Move X8, [X21]
	728 Move X1, [X26]
	729 NotImplemented "Instruction LDRH not yet implemented."
	730 Compare X9, 0
	731 JumpIfEqual {738}
	732 Move X10, [X8+176]
	733 Add X10, X10, 8
	734 NotImplemented "Instruction LDUR not yet implemented."
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Subtract X9, X9, 1
	737 Add X10, X10, 16
	738 Move X0, X21
	739 Move W2, W31
	740 Call 0x1C5D788
	741 NotImplemented "Instruction LDRSW not yet implemented."
	742 Add X8, X8, X9
	743 Add X0, X8, 312
	744 Move X8, [X0]
	745 Move X1, [X0+8]
	746 Move X0, X21
	747 NotImplemented "Instruction BLR not yet implemented."
	748 Move X8, [X19+112]
	749 Compare X8, 0
	750 JumpIfEqual {924}
	751 Move X23, [X8+24]
	752 Compare X23, 0
	753 JumpIfEqual {925}
	754 Move X8, [X23]
	755 Move X1, [X27]
	756 Move X22, X0
	757 NotImplemented "Instruction LDRH not yet implemented."
	758 Compare X9, 0
	759 JumpIfEqual {766}
	760 Move X10, [X8+176]
	761 Add X10, X10, 8
	762 NotImplemented "Instruction LDUR not yet implemented."
	763 NotImplemented "Instruction CMP not yet implemented."
	764 Subtract X9, X9, 1
	765 Add X10, X10, 16
	766 Move W2, 10
	767 Move X0, X23
	768 Call 0x1C5D788
	769 Move W9, [X10]
	770 Add W9, W9, 10
	771 Add X8, X8, W9
	772 Add X0, X8, 312
	773 Move X8, [X0]
	774 Move X1, [X0+8]
	775 Move X0, X23
	776 NotImplemented "Instruction BLR not yet implemented."
	777 Compare X22, 0
	778 JumpIfEqual {922}
	779 Move X8, [X22]
	780 Move X1, [X28]
	781 Move X23, X0
	782 NotImplemented "Instruction LDRH not yet implemented."
	783 Compare X9, 0
	784 JumpIfEqual {791}
	785 Move X10, [X8+176]
	786 Add X10, X10, 8
	787 NotImplemented "Instruction LDUR not yet implemented."
	788 NotImplemented "Instruction CMP not yet implemented."
	789 Subtract X9, X9, 1
	790 Add X10, X10, 16
	791 Move W2, 6
	792 Move X0, X22
	793 Call 0x1C5D788
	794 Move W9, [X10]
	795 Add W9, W9, 6
	796 Add X8, X8, W9
	797 Add X0, X8, 312
	798 Move X8, [X0]
	799 Move X1, [X0+8]
	800 Move X0, X22
	801 NotImplemented "Instruction BLR not yet implemented."
	802 Move X1, X0
	803 Compare X23, 0
	804 JumpIfEqual {923}
	805 Move X0, X23
	806 Move X2, X31
	807 Call String.Equals, X0, X1
	808 Move TEMP, X0
	809 And TEMP, TEMP, 1
	810 Compare TEMP, 1
	811 JumpIfNotEqual {702}
	812 Move X9, [X22]
	813 Move X8, [X29]
	814 Move W11, [X9+304]
	815 Move W10, [X8+304]
	816 NotImplemented "Instruction CMP not yet implemented."
	817 Move X9, [X9+200]
	818 Add X9, X9, X10
	819 NotImplemented "Instruction LDUR not yet implemented."
	820 NotImplemented "Instruction CMP not yet implemented."
	821 Move X8, [X19+112]
	822 Compare X8, 0
	823 JumpIfEqual {928}
	824 Move X23, [X8+24]
	825 Compare X23, 0
	826 JumpIfEqual {929}
	827 Move X8, [X23]
	828 Move X1, [X27]
	829 NotImplemented "Instruction LDRH not yet implemented."
	830 Compare X9, 0
	831 JumpIfEqual {838}
	832 Move X10, [X8+176]
	833 Add X10, X10, 8
	834 NotImplemented "Instruction LDUR not yet implemented."
	835 NotImplemented "Instruction CMP not yet implemented."
	836 Subtract X9, X9, 1
	837 Add X10, X10, 16
	838 Move W2, 9
	839 Move X0, X23
	840 Call 0x1C5D788
	841 Move W9, [X10]
	842 Add W9, W9, 9
	843 Add X8, X8, W9
	844 Add X0, X8, 312
	845 Move X8, [X0]
	846 Move X1, [X0+8]
	847 Move X0, X23
	848 NotImplemented "Instruction BLR not yet implemented."
	849 Move [X22+104], X0
	850 Move X24, X31
	851 Move W22, 14
	852 Move TEMP, X25
	853 And TEMP, TEMP, -2147483648
	854 Compare TEMP, -2147483648
	855 JumpIfNotEqual {881}
	856 Compare X21, 0
	857 JumpIfEqual {881}
	858 Move X10, 0xC94000
	859 Move X8, [X21]
	860 Move X10, [X10+3584]
	861 NotImplemented "Instruction LDRH not yet implemented."
	862 Move X1, [X10]
	863 Compare X9, 0
	864 JumpIfEqual {871}
	865 Move X10, [X8+176]
	866 Add X10, X10, 8
	867 NotImplemented "Instruction LDUR not yet implemented."
	868 NotImplemented "Instruction CMP not yet implemented."
	869 Subtract X9, X9, 1
	870 Add X10, X10, 16
	871 Move X0, X21
	872 Move W2, W31
	873 Call 0x1C5D788
	874 NotImplemented "Instruction LDRSW not yet implemented."
	875 Add X8, X8, X9
	876 Add X0, X8, 312
	877 Move X8, [X0]
	878 Move X1, [X0+8]
	879 Move X0, X21
	880 NotImplemented "Instruction BLR not yet implemented."
	881 Compare X24, 0
	882 JumpIfNotEqual {941}
	883 Compare W22, 0
	884 JumpIfEqual {886}
	885 NotImplemented "Instruction CMP not yet implemented."
	886 Move TEMP, 1
	887 Not TEMP
	888 Move W8, TEMP
	889 Move [X19+112], X31
	890 Move [X19+8], W8
	891 Move X8, 0xCCF000
	892 Move X8, [X8+1496]
	893 Move X0, [X8]
	894 Move W8, [X0+224]
	895 Compare W8, 0
	896 JumpIfNotEqual {898}
	897 Call 0x1C17DFC
	898 Move X8, 0xCD0000
	899 Move X8, [X8]
	900 Move X0, X19
	901 Move X1, X20
	902 Move X2, [X8]
	903 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	904 Move X20, [X31+128]
	905 Move X19, [X31+136]
	906 Move X22, [X31+112]
	907 Move X21, [X31+120]
	908 Move X24, [X31+96]
	909 Move X23, [X31+104]
	910 Move X26, [X31+80]
	911 Move X25, [X31+88]
	912 Move X28, [X31+64]
	913 Move X27, [X31+72]
	914 Move X29, [X31+48]
	915 Move X30, [X31+56]
	916 Add X31, X31, 144
	917 Return 
	918 Call 0x1C17F20
	919 Call 0x1C17F20
	920 Call 0x1C17F20
	921 Call 0x1C17F20
	922 Call 0x1C17F20
	923 Call 0x1C17F20
	924 Call 0x1C17F20
	925 Call 0x1C17F20
	926 Call 0x1C17F20
	927 Call 0x1C17F20
	928 Call 0x1C17F20
	929 Call 0x1C17F20
	930 Call 0x1C17F20
	931 Call 0x1C17F20
	932 Call 0x1C17F20
	933 Move X0, X24
	934 Call 0x1C17F18
	935 Call 0x1C17F20
	936 Call 0x1C17F20
	937 Call 0x1C17F20
	938 Call 0x1C17F20
	939 Call 0x1C17F20
	940 Call 0x1C17F20
	941 Move X0, X24
	942 Call 0x1C17F18
	943 Call 0x1C17F20
	944 Call 0x1C17F20
	945 Call 0x1C17F20
	946 Call 0x1C17F20
	947 Call 0x1C17F20
	948 Call 0x1C17F20
	949 Call 0x1C17F20
	950 Call 0x1C17F20
	951 Call 0x1C17F20
	952 Move X22, X1
	953 Move X23, X0
	954 Move X22, X1
	955 Move X23, X0
	956 NotImplemented "Instruction CMP not yet implemented."
	957 Move X0, X23
	958 Call 0x3EB2AD0
	959 Move X24, [X0]
	960 Call 0x3EB2AE0
	961 Move W22, W31
	962 Move TEMP, X25
	963 And TEMP, TEMP, -2147483648
	964 Compare TEMP, -2147483648
	965 JumpIfEqual {856}
	966 Move X24, X31
	967 Move TEMP, X25
	968 And TEMP, TEMP, -2147483648
	969 Compare TEMP, -2147483648
	970 JumpIfNotEqual {996}
	971 Compare X21, 0
	972 JumpIfEqual {996}
	973 Move X10, 0xC94000
	974 Move X8, [X21]
	975 Move X10, [X10+3584]
	976 NotImplemented "Instruction LDRH not yet implemented."
	977 Move X1, [X10]
	978 Compare X9, 0
	979 JumpIfEqual {986}
	980 Move X10, [X8+176]
	981 Add X10, X10, 8
	982 NotImplemented "Instruction LDUR not yet implemented."
	983 NotImplemented "Instruction CMP not yet implemented."
	984 Subtract X9, X9, 1
	985 Add X10, X10, 16
	986 Move X0, X21
	987 Move W2, W31
	988 Call 0x1C5D788
	989 NotImplemented "Instruction LDRSW not yet implemented."
	990 Add X8, X8, X9
	991 Add X0, X8, 312
	992 Move X8, [X0]
	993 Move X1, [X0+8]
	994 Move X0, X21
	995 NotImplemented "Instruction BLR not yet implemented."
	996 Compare X24, 0
	997 JumpIfEqual {1050}
	998 Move X0, X24
	999 Call 0x1C17F18
	1000 Move X22, X1
	1001 Move X23, X0
	1002 Move TEMP, X25
	1003 And TEMP, TEMP, -2147483648
	1004 Compare TEMP, -2147483648
	1005 JumpIfEqual {971}
	1006 Move X22, X1
	1007 Move X23, X0
	1008 NotImplemented "Instruction CMP not yet implemented."
	1009 Move X0, X23
	1010 Call 0x3EB2AD0
	1011 Move X24, [X0]
	1012 Call 0x3EB2AE0
	1013 Move W22, W31
	1014 Move TEMP, X25
	1015 And TEMP, TEMP, -2147483648
	1016 Compare TEMP, -2147483648
	1017 JumpIfEqual {609}
	1018 Move X24, X31
	1019 Move TEMP, X25
	1020 And TEMP, TEMP, -2147483648
	1021 Compare TEMP, -2147483648
	1022 JumpIfNotEqual {1048}
	1023 Compare X21, 0
	1024 JumpIfEqual {1048}
	1025 Move X10, 0xC94000
	1026 Move X8, [X21]
	1027 Move X10, [X10+3584]
	1028 NotImplemented "Instruction LDRH not yet implemented."
	1029 Move X1, [X10]
	1030 Compare X9, 0
	1031 JumpIfEqual {1038}
	1032 Move X10, [X8+176]
	1033 Add X10, X10, 8
	1034 NotImplemented "Instruction LDUR not yet implemented."
	1035 NotImplemented "Instruction CMP not yet implemented."
	1036 Subtract X9, X9, 1
	1037 Add X10, X10, 16
	1038 Move X0, X21
	1039 Move W2, W31
	1040 Call 0x1C5D788
	1041 NotImplemented "Instruction LDRSW not yet implemented."
	1042 Add X8, X8, X9
	1043 Add X0, X8, 312
	1044 Move X8, [X0]
	1045 Move X1, [X0+8]
	1046 Move X0, X21
	1047 NotImplemented "Instruction BLR not yet implemented."
	1048 Compare X24, 0
	1049 JumpIfNotEqual {1093}
	1050 NotImplemented "Instruction CMP not yet implemented."
	1051 Move X0, X23
	1052 Call 0x3EB2AD0
	1053 Move X20, X0
	1054 Move X0, 0xC94000
	1055 Move X0, [X0+2000]
	1056 Call 0x1C17D08
	1057 Move X8, [X20]
	1058 Move X1, [X8]
	1059 Call 0x1C18270
	1060 Move TEMP, X0
	1061 And TEMP, TEMP, 1
	1062 Compare TEMP, 1
	1063 JumpIfNotEqual {1085}
	1064 Move X20, [X20]
	1065 Call 0x3EB2AE0
	1066 Move TEMP, 1
	1067 Not TEMP
	1068 Move W8, TEMP
	1069 Move [X19+112], X31
	1070 Move [X19+8], W8
	1071 Move X0, 0xCCF000
	1072 Move X0, [X0+1496]
	1073 Call 0x1C17D08
	1074 Move W8, [X0+224]
	1075 Compare W8, 0
	1076 JumpIfNotEqual {1078}
	1077 Call 0x1C17DFC
	1078 Move X0, 0xCD0000
	1079 Move X0, [X0+56]
	1080 Call 0x1C17D08
	1081 Move X2, X0
	1082 Move X0, X19
	1083 Move X1, X20
	1084 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	1085 Move W0, 8
	1086 Call 0x3EB2AF0
	1087 Move X8, [X20]
	1088 Move [X0], X8
	1089 Move X1, 0xA55000
	1090 Add X1, X1, 3672
	1091 Move X2, X31
	1092 Call 0x3EB2B00
	1093 Move X0, X24
	1094 Call 0x1C17F18
	1095 Move X22, X1
	1096 Move X23, X0
	1097 Move TEMP, X25
	1098 And TEMP, TEMP, -2147483648
	1099 Compare TEMP, -2147483648
	1100 JumpIfEqual {1023}
	1101 Move X23, X0
	1102 Call 0x3EB2AE0
	1103 Move X0, X23
	1104 Call 0x1D2D690
	1105 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03460F58 LDR X8, [X19 + 0x60]
	0x03460F5C MOVN W9, 0x0
	0x03460F60 STR X8, [X31 + 0x20]
	0x03460F64 STR X31, [X19 + 0x60]
	0x03460F68 STR W9, [X19]
	0x03460F6C ADRP X8, 0xC94000
	0x03460F70 LDR X8, [X8 + 0x830]
	0x03460F74 ADD X0, X31, 0x20
	0x03460F78 LDR X1, [X8]
	0x03460F7C BL 0x2677474
	0x03460F80 B 0x34611C4
	0x03460F84 ADRP X8, 0xCD0000
	0x03460F88 LDR X8, [X8 + 0x218]
	0x03460F8C LDR X0, [X8]
	0x03460F90 BL 0x1C16F10
	0x03460F94 MOV X21, X0
	0x03460F98 MOV X1, X31
	0x03460F9C BL 0x344B4E8
	0x03460FA0 STR X21, [X19 + 0x58]
	0x03460FA4 CBZ X21, 0x3461360
	0x03460FA8 LDR X8, [X19 + 0x20]
	0x03460FAC STR X8, [X21 + 0x10]
	0x03460FB0 LDR X8, [X19 + 0x28]
	0x03460FB4 STR X8, [X21 + 0x18]
	0x03460FB8 LDR X8, [X19 + 0x30]
	0x03460FBC STR X8, [X21 + 0x20]
	0x03460FC0 LDR W8, [X19 + 0x38]
	0x03460FC4 STR W8, [X21 + 0x28]
	0x03460FC8 LDR X8, [X19 + 0x40]
	0x03460FCC STR X8, [X21 + 0x30]
	0x03460FD0 LDR X8, [X19 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF7E000
	007 Move X21, 0xCCF000
	008 Move W8, [X22+1964]
	009 Move X21, [X21+1496]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCD0000
	017 Move X0, [X0+64]
	018 Call 0x1C17CF4
	019 Move X0, 0xCCF000
	020 Move X0, [X0+1496]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1964], W8
	024 Move X0, [X21]
	025 Move X21, 0xCD0000
	026 Move W8, [X0+224]
	027 Move X21, [X21+64]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

