Type: Nakama.Client/<DeleteFriendsAsync>d__56

Method: System.Void MoveNext()

Disassembly:
	0x03452464 LDR X8, [X8 + 0x840]
	0x03452468 LDR X1, [X8]
	0x0345246C BL 0x269F5D0
	0x03452470 ADRP X8, 0xCA2000
	0x03452474 LDR X8, [X8 + 0x838]
	0x03452478 STR X0, [X31 + 0x20]
	0x0345247C LDR X1, [X8]
	0x03452480 ADD X0, X31, 0x20
	0x03452484 BL 0x2677430
	0x03452488 TBNZ X0, 0x0, 0x3452280
	0x0345248C STR W31, [X19]
	0x03452490 LDR X8, [X31 + 0x20]
	0x03452494 STR X8, [X19 + 0x50]
	0x03452498 LDR X0, [X25]
	0x0345249C LDR W8, [X0 + 0xE0]
	0x034524A0 CBNZ W8, 0x34524A8
	0x034524A4 BL 0x1C16DFC
	0x034524A8 ADRP X8, 0xCDD000
	0x034524AC LDR X8, [X8 + 0xC40]
	0x034524B0 ADD X0, X19, 0x8
	0x034524B4 LDR X3, [X8]
	0x034524B8 ADD X1, X31, 0x20
	0x034524BC MOV X2, X19
	0x034524C0 BL 0x2188270
	0x034524C4 B 0x345260C
	0x034524C8 CBZ X20, 0x3452630
	0x034524CC ADRP X8, 0xCA9000
	0x034524D0 LDR X8, [X8 + 0x818]
	0x034524D4 LDR X21, [X20 + 0x58]
	0x034524D8 LDR X23, [X19 + 0x48]
	0x034524DC LDR X0, [X8]
	0x034524E0 BL 0x1C16F10
	0x034524E4 ADRP X8, 0xCDD000
	0x034524E8 LDR X8, [X8 + 0xC50]
	0x034524EC MOV X22, X0
	0x034524F0 LDR X2, [X8]
	0x034524F4 MOV X1, X23
	0x034524F8 MOV X3, X31
	0x034524FC BL 0x2D27AA8
	0x03452500 LDR X8, [X19 + 0x48]
	0x03452504 CBZ X8, 0x3452624
	0x03452508 ADRP X9, 0xCDD000
	0x0345250C LDR X23, [X19 + 0x40]
	0x03452510 LDR X9, [X9 + 0x7C8]
	0x03452514 CBNZ X23, 0x345251C
	0x03452518 LDR X23, [X20 + 0x18]
	0x0345251C LDR X20, [X8 + 0x18]
	0x03452520 LDR X1, [X8 + 0x28]
	0x03452524 LDR X2, [X9]
	0x03452528 STP X31, X31, [X31 + 0x8]
	0x0345252C ADD X0, X31, 0x8
	0x03452530 BL 0x242E368
	0x03452534 ADRP X8, 0xCDD000
	0x03452538 LDR X8, [X8 + 0x7D0]
	0x0345253C LDR X0, [X8]
	0x03452540 BL 0x1C16F10
	0x03452544 LDP X3, X4, [X31 + 0x8]
	0x03452548 MOV X24, X0
	0x0345254C MOV X1, X20
	0x03452550 MOV X2, X23
	0x03452554 MOV X5, X31
	0x03452558 BL 0x3465404
	0x0345255C CBZ X21, 0x3452628
	0x03452560 MOV X0, X21
	0x03452564 MOV X1, X22
	0x03452568 MOV X2, X24
	0x0345256C MOV X3, X31
	0x03452570 BL 0x3465B68
	0x03452574 CBZ X0, 0x345262C
	0x03452578 MOV X1, X31
	0x0345257C BL 0x33ED394
	0x03452580 STR X0, [X31 + 0x18]
	0x03452584 ADD X0, X31, 0x18
	0x03452588 MOV X1, X31
	0x0345258C BL 0x32C3A80
	0x03452590 TBZ X0, 0x0, 0x34525D0
	0x03452594 ADD X0, X31, 0x18
	0x03452598 MOV X1, X31
	0x0345259C BL 0x32C3B4C
	0x034525A0 MOVN W8, 0x1
	0x034525A4 STR W8, [X19]
	0x034525A8 STR X31, [X19 + 0x48]
	0x034525AC LDR X0, [X25]
	0x034525B0 ADD X19, X19, 0x8
	0x034525B4 LDR W8, [X0 + 0xE0]
	0x034525B8 CBNZ W8, 0x34525C0
	0x034525BC BL 0x1C16DFC
	0x034525C0 MOV X0, X19
	0x034525C4 MOV X1, X31
	0x034525C8 BL 0x32C4864
	0x034525CC B 0x345260C
	0x034525D0 MOVZ W8, 0x1
	0x034525D4 STR W8, [X19]
	0x034525D8 LDR X8, [X31 + 0x18]
	0x034525DC STR X8, [X19 + 0x58]
	0x034525E0 LDR X0, [X25]
	0x034525E4 LDR W8, [X0 + 0xE0]
	0x034525E8 CBNZ W8, 0x34525F0
	0x034525EC BL 0x1C16DFC
	0x034525F0 ADRP X8, 0xCDD000
	0x034525F4 LDR X8, [X8 + 0xC48]
	0x034525F8 ADD X0, X19, 0x8
	0x034525FC LDR X3, [X8]
	0x03452600 ADD X1, X31, 0x18
	0x03452604 MOV X2, X19
	0x03452608 BL 0x2189934
	0x0345260C LDP X20, X19, [X31 + 0x60]
	0x03452610 LDP X22, X21, [X31 + 0x50]
	0x03452614 LDP X24, X23, [X31 + 0x40]
	0x03452618 LDP X30, X25, [X31 + 0x30]
	0x0345261C ADD X31, X31, 0x70
	0x03452620 RET
	0x03452624 BL 0x1C16F20
	0x03452628 BL 0x1C16F20
	0x0345262C BL 0x1C16F20
	0x03452630 BL 0x1C16F20
	0x03452634 BL 0x1C16F20
	0x03452638 BL 0x1C16F20
	0x0345263C BL 0x1C16F20
	0x03452640 BL 0x1C16F20
	0x03452644 BL 0x1C16F20
	0x03452648 BL 0x1C16F20
	0x0345264C BL 0x1C16F20
	0x03452650 BL 0x1C16F20
	0x03452654 B 0x34526C8
	0x03452658 B 0x34526C8
	0x0345265C B 0x34526C8
	0x03452660 B 0x34526C8
	0x03452664 B 0x34526C8
	0x03452668 B 0x34526C8
	0x0345266C B 0x34526C8
	0x03452670 B 0x34526C8
	0x03452674 B 0x34526C8
	0x03452678 B 0x34526C8
	0x0345267C B 0x34526C8
	0x03452680 B 0x34526C8
	0x03452684 B 0x34526C8
	0x03452688 B 0x34526C8
	0x0345268C B 0x34526C8
	0x03452690 B 0x34526C8
	0x03452694 B 0x34526C8
	0x03452698 B 0x34526C8
	0x0345269C B 0x34526C8
	0x034526A0 B 0x34526C8
	0x034526A4 B 0x34526C8
	0x034526A8 B 0x34526C8
	0x034526AC B 0x34526C8
	0x034526B0 B 0x34526C8
	0x034526B4 B 0x34526C8
	0x034526B8 B 0x34526C8
	0x034526BC B 0x34526C8
	0x034526C0 B 0x34526C8
	0x034526C4 B 0x34526C8
	0x034526C8 MOV X20, X0
	0x034526CC CMP W1, 0x1
	0x034526D0 B.NE 0x3452764
	0x034526D4 MOV X0, X20
	0x034526D8 BL 0x3EB1AD0
	0x034526DC MOV X20, X0
	0x034526E0 ADRP X0, 0xCA1000
	0x034526E4 LDR X0, [X0 + 0x7D0]
	0x034526E8 BL 0x1C16D08
	0x034526EC LDR X8, [X20]
	0x034526F0 LDR X1, [X8]
	0x034526F4 BL 0x1C17270
	0x034526F8 TBZ X0, 0x0, 0x345273C
	0x034526FC LDR X20, [X20]
	0x03452700 BL 0x3EB1AE0
	0x03452704 MOVN W8, 0x1
	0x03452708 STR X31, [X19 + 0x48]
	0x0345270C STR W8, [X19], #0x8
	0x03452710 ADRP X0, 0xCA4000
	0x03452714 LDR X0, [X0 + 0x280]
	0x03452718 BL 0x1C16D08
	0x0345271C LDR W8, [X0 + 0xE0]
	0x03452720 CBNZ W8, 0x3452728
	0x03452724 BL 0x1C16DFC
	0x03452728 MOV X0, X19
	0x0345272C MOV X1, X20
	0x03452730 MOV X2, X31
	0x03452734 BL 0x32C4908
	0x03452738 B 0x345260C
	0x0345273C MOVZ W0, 0x8
	0x03452740 BL 0x3EB1AF0
	0x03452744 LDR X8, [X20]
	0x03452748 STR X8, [X0]
	0x0345274C ADRP X1, 0xA62000
	0x03452750 ADD X1, X1, 0xE58
	0x03452754 MOV X2, X31
	0x03452758 BL 0x3EB1B00
	0x0345275C MOV X20, X0
	0x03452760 BL 0x3EB1AE0
	0x03452764 MOV X0, X20
	0x03452768 BL 0x1D2C690
	0x0345276C BL 0x1990590
	0x03452770 STR X30, [X31 - 0x30]!
	0x03452774 STP X22, X21, [X31 + 0x10]
	0x03452778 STP X20, X19, [X31 + 0x20]
	0x0345277C ADRP X21, 0xF8B000
	0x03452780 ADRP X22, 0xCA4000
	0x03452784 LDRB W8, [X21 + 0x774]
	0x03452788 LDR X22, [X22 + 0x280]
	0x0345278C MOV X19, X1
	0x03452790 MOV X20, X0
	0x03452794 TBNZ X8, 0x0, 0x34527AC
	0x03452798 ADRP X0, 0xCA4000
	0x0345279C LDR X0, [X0 + 0x280]
	0x034527A0 BL 0x1C16CF4
	0x034527A4 MOVZ W8, 0x1
	0x034527A8 STRB W8, [X21 + 0x774]
	0x034527AC LDR X0, [X22]
	0x034527B0 LDR W8, [X0 + 0xE0]
	0x034527B4 CBNZ W8, 0x34527BC
	0x034527B8 BL 0x1C16DFC
	0x034527BC ADD X0, X20, 0x8
	0x034527C0 MOV X1, X19
	0x034527C4 LDP X20, X19, [X31 + 0x20]
	0x034527C8 LDP X22, X21, [X31 + 0x10]
	0x034527CC MOV X2, X31
	0x034527D0 LDR X30, [X31], #0x30
	0x034527D4 B 0x32C477C
	0x034527D8 SUB X31, X31, 0x70
	0x034527DC STP X30, X25, [X31 + 0x30]
	0x034527E0 STP X24, X23, [X31 + 0x40]
	0x034527E4 STP X22, X21, [X31 + 0x50]
	0x034527E8 STP X20, X19, [X31 + 0x60]
	0x034527EC ADRP X20, 0xF8B000
	0x034527F0 LDRB W8, [X20 + 0x775]
	0x034527F4 MOV X19, X0
	0x034527F8 TBNZ X8, 0x0, 0x34528AC
	0x034527FC ADRP X0, 0xCDD000
	0x03452800 LDR X0, [X0 + 0xC60]
	0x03452804 BL 0x1C16CF4
	0x03452808 ADRP X0, 0xCDD000
	0x0345280C LDR X0, [X0 + 0xC68]
	0x03452810 BL 0x1C16CF4
	0x03452814 ADRP X0, 0xCA4000
	0x03452818 LDR X0, [X0 + 0x280]
	0x0345281C BL 0x1C16CF4
	0x03452820 ADRP X0, 0xCA3000
	0x03452824 LDR X0, [X0 + 0xA10]
	0x03452828 BL 0x1C16CF4
	0x0345282C ADRP X0, 0xCA2000
	0x03452830 LDR X0, [X0 + 0x9F0]
	0x03452834 BL 0x1C16CF4
	0x03452838 ADRP X0, 0xCA9000
	0x0345283C LDR X0, [X0 + 0x818]
	0x03452840 BL 0x1C16CF4
	0x03452844 ADRP X0, 0xCA2000
	0x03452848 LDR X0, [X0 + 0x818]
	0x0345284C BL 0x1C16CF4
	0x03452850 ADRP X0, 0xCDD000
	0x03452854 LDR X0, [X0 + 0x7C8]
	0x03452858 BL 0x1C16CF4
	0x0345285C ADRP X0, 0xCDD000
	0x03452860 LDR X0, [X0 + 0x7D0]
	0x03452864 BL 0x1C16CF4
	0x03452868 ADRP X0, 0xCA2000
	0x0345286C LDR X0, [X0 + 0x830]
	0x03452870 BL 0x1C16CF4
	0x03452874 ADRP X0, 0xCA2000
	0x03452878 LDR X0, [X0 + 0x838]
	0x0345287C BL 0x1C16CF4
	0x03452880 ADRP X0, 0xCA2000
	0x03452884 LDR X0, [X0 + 0x840]
	0x03452888 BL 0x1C16CF4
	0x0345288C ADRP X0, 0xCDD000
	0x03452890 LDR X0, [X0 + 0xC70]
	0x03452894 BL 0x1C16CF4
	0x03452898 ADRP X0, 0xCDD000
	0x0345289C LDR X0, [X0 + 0xC78]
	0x034528A0 BL 0x1C16CF4
	0x034528A4 MOVZ W8, 0x1
	0x034528A8 STRB W8, [X20 + 0x775]
	0x034528AC STP X31, X31, [X31 + 0x20]
	0x034528B0 STR X31, [X31 + 0x18]
	0x034528B4 ADRP X25, 0xCA4000
	0x034528B8 LDR W8, [X19]
	0x034528BC LDR X20, [X19 + 0x20]
	0x034528C0 LDR X25, [X25 + 0x280]
	0x034528C4 CBZ W8, 0x34528E8
	0x034528C8 CMP W8, 0x1
	0x034528CC B.NE 0x3452914
	0x034528D0 LDR X8, [X19 + 0x58]
	0x034528D4 MOVN W9, 0x0
	0x034528D8 STR X8, [X31 + 0x18]
	0x034528DC STR X31, [X19 + 0x58]
	0x034528E0 STR W9, [X19]
	0x034528E4 B 0x3452C08
	0x034528E8 LDR X8, [X19 + 0x50]
	0x034528EC MOVN W9, 0x0
	0x034528F0 STR X8, [X31 + 0x20]
	0x034528F4 STR X31, [X19 + 0x50]
	0x034528F8 STR W9, [X19]
	0x034528FC ADRP X8, 0xCA2000
	0x03452900 LDR X8, [X8 + 0x830]
	0x03452904 ADD X0, X31, 0x20
	0x03452908 LDR X1, [X8]
	0x0345290C BL 0x2677474
	0x03452910 B 0x3452B3C
	0x03452914 ADRP X8, 0xCDD000
	0x03452918 LDR X8, [X8 + 0xC78]
	0x0345291C LDR X0, [X8]
	0x03452920 BL 0x1C16F10
	0x03452924 MOV X21, X0
	0x03452928 MOV X1, X31
	0x0345292C BL 0x3448D24
	0x03452930 STR X21, [X19 + 0x48]
	0x03452934 CBZ X21, 0x3452CA8
	0x03452938 LDR X8, [X19 + 0x20]
	0x0345293C STR X8, [X21 + 0x10]
	0x03452940 LDUR V0, [X19 + 0x28]
	0x03452944 STUR V0, [X21 + 0x18]
	0x03452948 LDR X8, [X19 + 0x38]
	0x0345294C STR X8, [X21 + 0x28]
	0x03452950 CBZ X20, 0x3452CAC
	0x03452954 LDRB W8, [X20 + 0x10]
	0x03452958 CBZ W8, 0x3452B40
	0x0345295C LDR X8, [X19 + 0x48]
	0x03452960 CBZ X8, 0x3452CB0
	0x03452964 LDR X21, [X8 + 0x18]
	0x03452968 CBZ X21, 0x3452CB4
	0x0345296C ADRP X23, 0xCA2000
	0x03452970 LDR X8, [X21]
	0x03452974 LDR X23, [X23 + 0x818]
	0x03452978 LDRH W9, [X8 + 0x12E]
	0x0345297C LDR X1, [X23]
	0x03452980 CBZ X9, 0x34529A4
	0x03452984 LDR X10, [X8 + 0xB0]
	0x03452988 ADD X10, X10, 0x8
	0x0345298C LDUR X11, [X10 - 0x8]
	0x03452990 CMP X11, X1
	0x03452994 B.EQ 0x34529B4
	0x03452998 SUBS X9, X9, 0x1
	0x0345299C ADD X10, X10, 0x10
	0x034529A0 B.NE 0x345298C
	0x034529A4 MOVZ W2, 0x7
	0x034529A8 MOV X0, X21
	0x034529AC BL 0x1C5C788
	0x034529B0 B 0x34529C4
	0x034529B4 LDR W9, [X10]
	0x034529B8 ADD W9, W9, 0x7
	0x034529BC ADD X8, X8, W9, 0x4, SXTW
	0x034529C0 ADD X0, X8, 0x138
	0x034529C4 LDP X8, X1, [X0]
	0x034529C8 MOV X0, X21
	0x034529CC BLR X8
	0x034529D0 MOV X1, X31
	0x034529D4 BL 0x32277A8
	0x034529D8 TBNZ X0, 0x0, 0x3452B3C
	0x034529DC LDR X8, [X19 + 0x48]
	0x034529E0 CBZ X8, 0x3452CB8
	0x034529E4 ADRP X9, 0xCA2000
	0x034529E8 LDR X9, [X9 + 0x9F0]
	0x034529EC LDR X21, [X8 + 0x18]
	0x034529F0 LDR X0, [X9]
	0x034529F4 LDR W9, [X0 + 0xE0]
	0x034529F8 CBNZ W9, 0x3452A00
	0x034529FC BL 0x1C16DFC
	0x03452A00 MOV X0, X31
	0x03452A04 BL 0x33616A4
	0x03452A08 ADRP X22, 0xCA3000
	0x03452A0C LDR X22, [X22 + 0xA10]
	0x03452A10 MOV X8, X0
	0x03452A14 STR X8, [X31 + 0x28]
	0x03452A18 LDR X0, [X22]
	0x03452A1C LDR W8, [X0 + 0xE0]
	0x03452A20 CBNZ W8, 0x3452A2C
	0x03452A24 BL 0x1C16DFC
	0x03452A28 LDR X0, [X22]
	0x03452A2C LDR X8, [X0 + 0xB8]
	0x03452A30 LDR X1, [X8]
	0x03452A34 ADD X0, X31, 0x28
	0x03452A38 MOV X2, X31
	0x03452A3C BL 0x335FC68
	0x03452A40 CBZ X21, 0x3452CBC
	0x03452A44 LDR X8, [X21]
	0x03452A48 LDR X1, [X23]
	0x03452A4C MOV X22, X0
	0x03452A50 LDRH W9, [X8 + 0x12E]
	0x03452A54 CBZ X9, 0x3452A78
	0x03452A58 LDR X10, [X8 + 0xB0]
	0x03452A5C ADD X10, X10, 0x8
	0x03452A60 LDUR X11, [X10 - 0x8]
	0x03452A64 CMP X11, X1
	0x03452A68 B.EQ 0x3452A88
	0x03452A6C SUBS X9, X9, 0x1
	0x03452A70 ADD X10, X10, 0x10
	0x03452A74 B.NE 0x3452A60

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF8C000
	011 Move W8, [X20+1903]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCDE000
	018 Move X0, [X0+3072]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDE000
	021 Move X0, [X0+3080]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA5000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA4000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA3000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCAA000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA3000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDE000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDE000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA3000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA3000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA3000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDE000
	054 Move X0, [X0+3088]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDE000
	057 Move X0, [X0+3096]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1903], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA5000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xCA3000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCDE000
	091 Move X8, [X8+3096]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass56_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {356}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move [X21+24], V0
	104 Move X8, [X19+56]
	105 Move [X21+40], X8
	106 Move X8, [X19+64]
	107 Move [X21+48], X8
	108 Compare X20, 0
	109 JumpIfEqual {357}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+80]
	114 Compare X8, 0
	115 JumpIfEqual {358}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {359}
	119 Move X23, 0xCA3000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+80]
	150 Compare X8, 0
	151 JumpIfEqual {360}
	152 Move X9, 0xCA3000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xCA4000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {361}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+80]
	208 Compare X8, 0
	209 JumpIfEqual {362}
	210 Move X1, [X8+24]
	211 Move X3, [X19+72]
	212 Move X4, [X8+48]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {363}
	219 Move X8, 0xCA3000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xCA3000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+88], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCDE000
	242 Move X8, [X8+3072]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {355}
	250 Move X8, 0xCAA000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+80]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCDE000
	257 Move X8, [X8+3088]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+80]
	264 Compare X8, 0
	265 JumpIfEqual {352}
	266 Move X9, 0xCDE000
	267 Move X23, [X19+72]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+48]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCDE000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Move X5, X31
	289 Call RetryHistory..ctor, X0, X1, X2, X3
	290 Compare X21, 0
	291 JumpIfEqual {353}
	292 Move X0, X21
	293 Move X1, X22
	294 Move X2, X24
	295 Move X3, X31
	296 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	297 Compare X0, 0
	298 JumpIfEqual {354}
	299 Move X1, X31
	300 Call Task.GetAwaiter, X0
	301 Move [X31+24], X0
	302 Add X0, X31, 24
	303 Move X1, X31
	304 Call TaskAwaiter.get_IsCompleted, X0
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {326}
	309 Add X0, X31, 24
	310 Move X1, X31
	311 Call TaskAwaiter.GetResult, X0
	312 Move TEMP, 1
	313 Not TEMP
	314 Move W8, TEMP
	315 Move [X19], W8
	316 Move [X19+80], X31
	317 Move X0, [X25]
	318 Add X19, X19, 8
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move X0, X19
	324 Move X1, X31
	325 Call AsyncTaskMethodBuilder.SetResult, X0
	326 Move W8, 1
	327 Move [X19], W8
	328 Move X8, [X31+24]
	329 Move [X19+96], X8
	330 Move X0, [X25]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X8, 0xCDE000
	336 Move X8, [X8+3080]
	337 Add X0, X19, 8
	338 Move X3, [X8]
	339 Add X1, X31, 24
	340 Move X2, X19
	341 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	342 Move X20, [X31+96]
	343 Move X19, [X31+104]
	344 Move X22, [X31+80]
	345 Move X21, [X31+88]
	346 Move X24, [X31+64]
	347 Move X23, [X31+72]
	348 Move X30, [X31+48]
	349 Move X25, [X31+56]
	350 Add X31, X31, 112
	351 Return 
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Move X20, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X20
	367 Call 0x3EB2AD0
	368 Move X20, X0
	369 Move X0, 0xCA2000
	370 Move X0, [X0+2000]
	371 Call 0x1C17D08
	372 Move X8, [X20]
	373 Move X1, [X8]
	374 Call 0x1C18270
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {397}
	379 Move X20, [X20]
	380 Call 0x3EB2AE0
	381 Move TEMP, 1
	382 Not TEMP
	383 Move W8, TEMP
	384 Move [X19+80], X31
	385 Move [X19+8], W8
	386 Move X0, 0xCA5000
	387 Move X0, [X0+640]
	388 Call 0x1C17D08
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Move X1, X20
	395 Move X2, X31
	396 Call AsyncTaskMethodBuilder.SetException, X0, X1
	397 Move W0, 8
	398 Call 0x3EB2AF0
	399 Move X8, [X20]
	400 Move [X0], X8
	401 Move X1, 0xA63000
	402 Add X1, X1, 3672
	403 Move X2, X31
	404 Call 0x3EB2B00
	405 Move X20, X0
	406 Call 0x3EB2AE0
	407 Move X0, X20
	408 Call 0x1D2D690
	409 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03452A78 MOVZ W2, 0xB
	0x03452A7C MOV X0, X21
	0x03452A80 BL 0x1C5C788
	0x03452A84 B 0x3452A98
	0x03452A88 LDR W9, [X10]
	0x03452A8C ADD W9, W9, 0xB
	0x03452A90 ADD X8, X8, W9, 0x4, SXTW
	0x03452A94 ADD X0, X8, 0x138
	0x03452A98 LDP X8, X2, [X0]
	0x03452A9C MOV X0, X21
	0x03452AA0 MOV X1, X22
	0x03452AA4 BLR X8
	0x03452AA8 TBZ X0, 0x0, 0x3452B3C
	0x03452AAC LDR X8, [X19 + 0x48]
	0x03452AB0 CBZ X8, 0x3452CC0
	0x03452AB4 LDR X1, [X8 + 0x18]
	0x03452AB8 LDR X3, [X19 + 0x40]
	0x03452ABC LDR X4, [X8 + 0x28]
	0x03452AC0 MOV X0, X20
	0x03452AC4 MOV X2, X31
	0x03452AC8 MOV X5, X31
	0x03452ACC BL 0x34440A8
	0x03452AD0 CBZ X0, 0x3452CC4
	0x03452AD4 ADRP X8, 0xCA2000
	0x03452AD8 LDR X8, [X8 + 0x840]
	0x03452ADC LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF8C000
	007 Move X22, 0xCA5000
	008 Move W8, [X21+1904]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA5000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1904], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

