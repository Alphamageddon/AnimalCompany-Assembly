Type: Nakama.Client/<AddGroupUsersAsync>d__43

Method: System.Void MoveNext()

Disassembly:
	0x0344D6B8 MOV X0, X19
	0x0344D6BC MOV X1, X20
	0x0344D6C0 BL 0x26322B0
	0x0344D6C4 LDP X20, X19, [X31 + 0x50]
	0x0344D6C8 LDP X22, X21, [X31 + 0x40]
	0x0344D6CC LDP X24, X23, [X31 + 0x30]
	0x0344D6D0 LDP X30, X25, [X31 + 0x20]
	0x0344D6D4 ADD X31, X31, 0x60
	0x0344D6D8 RET
	0x0344D6DC BL 0x1C16F20
	0x0344D6E0 BL 0x1C16F20
	0x0344D6E4 BL 0x1C16F20
	0x0344D6E8 BL 0x1C16F20
	0x0344D6EC BL 0x1C16F20
	0x0344D6F0 B 0x344D72C
	0x0344D6F4 B 0x344D72C
	0x0344D6F8 B 0x344D72C
	0x0344D6FC B 0x344D72C
	0x0344D700 B 0x344D72C
	0x0344D704 B 0x344D72C
	0x0344D708 B 0x344D72C
	0x0344D70C B 0x344D72C
	0x0344D710 B 0x344D72C
	0x0344D714 B 0x344D72C
	0x0344D718 B 0x344D72C
	0x0344D71C B 0x344D72C
	0x0344D720 B 0x344D72C
	0x0344D724 B 0x344D72C
	0x0344D728 B 0x344D72C
	0x0344D72C MOV X20, X0
	0x0344D730 CMP W1, 0x1
	0x0344D734 B.NE 0x344D7D0
	0x0344D738 MOV X0, X20
	0x0344D73C BL 0x3EB1AD0
	0x0344D740 MOV X20, X0
	0x0344D744 ADRP X0, 0xCA6000
	0x0344D748 LDR X0, [X0 + 0x7D0]
	0x0344D74C BL 0x1C16D08
	0x0344D750 LDR X8, [X20]
	0x0344D754 LDR X1, [X8]
	0x0344D758 BL 0x1C17270
	0x0344D75C TBZ X0, 0x0, 0x344D7A8
	0x0344D760 LDR X20, [X20]
	0x0344D764 BL 0x3EB1AE0
	0x0344D768 MOVN W8, 0x1
	0x0344D76C STR W8, [X19], #0x8
	0x0344D770 ADRP X0, 0xCE2000
	0x0344D774 LDR X0, [X0 + 0x630]
	0x0344D778 BL 0x1C16D08
	0x0344D77C LDR W8, [X0 + 0xE0]
	0x0344D780 CBNZ W8, 0x344D788
	0x0344D784 BL 0x1C16DFC
	0x0344D788 ADRP X0, 0xCE2000
	0x0344D78C LDR X0, [X0 + 0xAA0]
	0x0344D790 BL 0x1C16D08
	0x0344D794 MOV X2, X0
	0x0344D798 MOV X0, X19
	0x0344D79C MOV X1, X20
	0x0344D7A0 BL 0x26324C8
	0x0344D7A4 B 0x344D6C4
	0x0344D7A8 MOVZ W0, 0x8
	0x0344D7AC BL 0x3EB1AF0
	0x0344D7B0 LDR X8, [X20]
	0x0344D7B4 STR X8, [X0]
	0x0344D7B8 ADRP X1, 0xA67000
	0x0344D7BC ADD X1, X1, 0xE58
	0x0344D7C0 MOV X2, X31
	0x0344D7C4 BL 0x3EB1B00
	0x0344D7C8 MOV X20, X0
	0x0344D7CC BL 0x3EB1AE0
	0x0344D7D0 MOV X0, X20
	0x0344D7D4 BL 0x1D2C690
	0x0344D7D8 BL 0x1990590
	0x0344D7DC STR X30, [X31 - 0x30]!
	0x0344D7E0 STP X22, X21, [X31 + 0x10]
	0x0344D7E4 STP X20, X19, [X31 + 0x20]
	0x0344D7E8 ADRP X22, 0xF90000
	0x0344D7EC ADRP X21, 0xCE2000
	0x0344D7F0 LDRB W8, [X22 + 0x75A]
	0x0344D7F4 LDR X21, [X21 + 0x630]
	0x0344D7F8 MOV X19, X1
	0x0344D7FC MOV X20, X0
	0x0344D800 TBNZ X8, 0x0, 0x344D824
	0x0344D804 ADRP X0, 0xCE2000
	0x0344D808 LDR X0, [X0 + 0xAA8]
	0x0344D80C BL 0x1C16CF4
	0x0344D810 ADRP X0, 0xCE2000
	0x0344D814 LDR X0, [X0 + 0x630]
	0x0344D818 BL 0x1C16CF4
	0x0344D81C MOVZ W8, 0x1
	0x0344D820 STRB W8, [X22 + 0x75A]
	0x0344D824 LDR X0, [X21]
	0x0344D828 ADRP X21, 0xCE2000
	0x0344D82C LDR W8, [X0 + 0xE0]
	0x0344D830 LDR X21, [X21 + 0xAA8]
	0x0344D834 CBNZ W8, 0x344D83C
	0x0344D838 BL 0x1C16DFC
	0x0344D83C LDR X2, [X21]
	0x0344D840 ADD X0, X20, 0x8
	0x0344D844 MOV X1, X19
	0x0344D848 LDP X20, X19, [X31 + 0x20]
	0x0344D84C LDP X22, X21, [X31 + 0x10]
	0x0344D850 LDR X30, [X31], #0x30
	0x0344D854 B 0x2632228
	0x0344D858 SUB X31, X31, 0x60
	0x0344D85C STP X30, X25, [X31 + 0x20]
	0x0344D860 STP X24, X23, [X31 + 0x30]
	0x0344D864 STP X22, X21, [X31 + 0x40]
	0x0344D868 STP X20, X19, [X31 + 0x50]
	0x0344D86C ADRP X20, 0xF90000
	0x0344D870 LDRB W8, [X20 + 0x75B]
	0x0344D874 MOV X19, X0
	0x0344D878 TBNZ X8, 0x0, 0x344D92C
	0x0344D87C ADRP X0, 0xCE2000
	0x0344D880 LDR X0, [X0 + 0xAC8]
	0x0344D884 BL 0x1C16CF4
	0x0344D888 ADRP X0, 0xCE2000
	0x0344D88C LDR X0, [X0 + 0xA50]
	0x0344D890 BL 0x1C16CF4
	0x0344D894 ADRP X0, 0xCE2000
	0x0344D898 LDR X0, [X0 + 0x630]
	0x0344D89C BL 0x1C16CF4
	0x0344D8A0 ADRP X0, 0xCE2000
	0x0344D8A4 LDR X0, [X0 + 0xA58]
	0x0344D8A8 BL 0x1C16CF4
	0x0344D8AC ADRP X0, 0xCE2000
	0x0344D8B0 LDR X0, [X0 + 0xA60]
	0x0344D8B4 BL 0x1C16CF4
	0x0344D8B8 ADRP X0, 0xCE2000
	0x0344D8BC LDR X0, [X0 + 0x7C8]
	0x0344D8C0 BL 0x1C16CF4
	0x0344D8C4 ADRP X0, 0xCE2000
	0x0344D8C8 LDR X0, [X0 + 0x7D0]
	0x0344D8CC BL 0x1C16CF4
	0x0344D8D0 ADRP X0, 0xCE2000
	0x0344D8D4 LDR X0, [X0 + 0xA68]
	0x0344D8D8 BL 0x1C16CF4
	0x0344D8DC ADRP X0, 0xCE2000
	0x0344D8E0 LDR X0, [X0 + 0xA70]
	0x0344D8E4 BL 0x1C16CF4
	0x0344D8E8 ADRP X0, 0xCE2000
	0x0344D8EC LDR X0, [X0 + 0xA78]
	0x0344D8F0 BL 0x1C16CF4
	0x0344D8F4 ADRP X0, 0xCE2000
	0x0344D8F8 LDR X0, [X0 + 0xA80]
	0x0344D8FC BL 0x1C16CF4
	0x0344D900 ADRP X0, 0xCE2000
	0x0344D904 LDR X0, [X0 + 0xA88]
	0x0344D908 BL 0x1C16CF4
	0x0344D90C ADRP X0, 0xCE2000
	0x0344D910 LDR X0, [X0 + 0xAD0]
	0x0344D914 BL 0x1C16CF4
	0x0344D918 ADRP X0, 0xCE2000
	0x0344D91C LDR X0, [X0 + 0xAD8]
	0x0344D920 BL 0x1C16CF4
	0x0344D924 MOVZ W8, 0x1
	0x0344D928 STRB W8, [X20 + 0x75B]
	0x0344D92C STR X31, [X31 + 0x18]
	0x0344D930 ADRP X25, 0xCE2000
	0x0344D934 LDR W8, [X19]
	0x0344D938 LDR X25, [X25 + 0x630]
	0x0344D93C CBZ W8, 0x344DAA8
	0x0344D940 ADRP X8, 0xCE2000
	0x0344D944 LDR X8, [X8 + 0xAD8]
	0x0344D948 LDR X24, [X19 + 0x20]
	0x0344D94C LDR X0, [X8]
	0x0344D950 BL 0x1C16F10
	0x0344D954 MOV X22, X0
	0x0344D958 MOV X1, X31
	0x0344D95C BL 0x33BDD8C
	0x0344D960 CBZ X22, 0x344DC70
	0x0344D964 LDR X8, [X19 + 0x20]
	0x0344D968 STR X8, [X22 + 0x10]
	0x0344D96C LDR X8, [X19 + 0x28]
	0x0344D970 STR X8, [X22 + 0x18]
	0x0344D974 LDR X8, [X19 + 0x30]
	0x0344D978 STR X8, [X22 + 0x20]
	0x0344D97C LDRB W8, [X19 + 0x38]
	0x0344D980 STRB W8, [X22 + 0x28]
	0x0344D984 LDR X8, [X19 + 0x40]
	0x0344D988 STR X8, [X22 + 0x30]
	0x0344D98C LDR X8, [X19 + 0x48]
	0x0344D990 STR X8, [X22 + 0x38]
	0x0344D994 CBZ X24, 0x344DC74
	0x0344D998 ADRP X8, 0xCE2000
	0x0344D99C LDR X8, [X8 + 0xA58]
	0x0344D9A0 LDR X20, [X24 + 0x58]
	0x0344D9A4 LDR X0, [X8]
	0x0344D9A8 BL 0x1C16F10
	0x0344D9AC ADRP X8, 0xCE2000
	0x0344D9B0 LDR X8, [X8 + 0xAD0]
	0x0344D9B4 MOV X21, X0
	0x0344D9B8 LDR X2, [X8]
	0x0344D9BC MOV X1, X22
	0x0344D9C0 MOV X3, X31
	0x0344D9C4 BL 0x2D27AA8
	0x0344D9C8 ADRP X8, 0xCE2000
	0x0344D9CC LDR X23, [X19 + 0x50]
	0x0344D9D0 LDR X8, [X8 + 0x7C8]
	0x0344D9D4 CBNZ X23, 0x344D9DC
	0x0344D9D8 LDR X23, [X24 + 0x18]
	0x0344D9DC LDR X24, [X22 + 0x18]
	0x0344D9E0 LDR X1, [X22 + 0x38]
	0x0344D9E4 LDR X2, [X8]
	0x0344D9E8 STP X31, X31, [X31 + 0x8]
	0x0344D9EC ADD X0, X31, 0x8
	0x0344D9F0 BL 0x242E368
	0x0344D9F4 ADRP X8, 0xCE2000
	0x0344D9F8 LDR X8, [X8 + 0x7D0]
	0x0344D9FC LDR X0, [X8]
	0x0344DA00 BL 0x1C16F10
	0x0344DA04 LDP X3, X4, [X31 + 0x8]
	0x0344DA08 MOV X22, X0
	0x0344DA0C MOV X1, X24
	0x0344DA10 MOV X2, X23
	0x0344DA14 MOV X5, X31
	0x0344DA18 BL 0x3478040
	0x0344DA1C CBZ X20, 0x344DC78
	0x0344DA20 ADRP X8, 0xCE2000
	0x0344DA24 LDR X8, [X8 + 0xA68]
	0x0344DA28 LDR X3, [X8]
	0x0344DA2C MOV X0, X20
	0x0344DA30 MOV X1, X21
	0x0344DA34 MOV X2, X22
	0x0344DA38 BL 0x2243230
	0x0344DA3C CBZ X0, 0x344DC7C
	0x0344DA40 ADRP X8, 0xCE2000
	0x0344DA44 LDR X8, [X8 + 0xA88]
	0x0344DA48 LDR X1, [X8]
	0x0344DA4C BL 0x269F5D0
	0x0344DA50 ADRP X8, 0xCE2000
	0x0344DA54 LDR X8, [X8 + 0xA80]
	0x0344DA58 STR X0, [X31 + 0x18]
	0x0344DA5C LDR X1, [X8]
	0x0344DA60 ADD X0, X31, 0x18
	0x0344DA64 BL 0x2677430
	0x0344DA68 TBNZ X0, 0x0, 0x344DABC
	0x0344DA6C STR W31, [X19]
	0x0344DA70 LDR X8, [X31 + 0x18]
	0x0344DA74 STR X8, [X19 + 0x58]
	0x0344DA78 LDR X0, [X25]
	0x0344DA7C LDR W8, [X0 + 0xE0]
	0x0344DA80 CBNZ W8, 0x344DA88
	0x0344DA84 BL 0x1C16DFC
	0x0344DA88 ADRP X8, 0xCE2000
	0x0344DA8C LDR X8, [X8 + 0xAC8]
	0x0344DA90 ADD X0, X19, 0x8
	0x0344DA94 LDR X3, [X8]
	0x0344DA98 ADD X1, X31, 0x18
	0x0344DA9C MOV X2, X19
	0x0344DAA0 BL 0x1FB9D70
	0x0344DAA4 B 0x344DC54
	0x0344DAA8 LDR X8, [X19 + 0x58]
	0x0344DAAC MOVN W9, 0x0
	0x0344DAB0 STR X8, [X31 + 0x18]
	0x0344DAB4 STR X31, [X19 + 0x58]
	0x0344DAB8 STR W9, [X19]
	0x0344DABC ADRP X8, 0xCE2000
	0x0344DAC0 LDR X8, [X8 + 0xA78]
	0x0344DAC4 ADD X0, X31, 0x18
	0x0344DAC8 LDR X1, [X8]
	0x0344DACC BL 0x2677474
	0x0344DAD0 MOV X20, X0
	0x0344DAD4 CBZ X0, 0x344DC6C
	0x0344DAD8 ADRP X23, 0xCE2000
	0x0344DADC LDR X8, [X20]
	0x0344DAE0 LDR X23, [X23 + 0xA60]
	0x0344DAE4 LDRH W9, [X8 + 0x12E]
	0x0344DAE8 LDR X1, [X23]
	0x0344DAEC CBZ X9, 0x344DB10
	0x0344DAF0 LDR X10, [X8 + 0xB0]
	0x0344DAF4 ADD X10, X10, 0x8
	0x0344DAF8 LDUR X11, [X10 - 0x8]
	0x0344DAFC CMP X11, X1
	0x0344DB00 B.EQ 0x344DB20
	0x0344DB04 SUBS X9, X9, 0x1
	0x0344DB08 ADD X10, X10, 0x10
	0x0344DB0C B.NE 0x344DAF8
	0x0344DB10 MOVZ W2, 0x2
	0x0344DB14 MOV X0, X20
	0x0344DB18 BL 0x1C5C788
	0x0344DB1C B 0x344DB30
	0x0344DB20 LDR W9, [X10]
	0x0344DB24 ADD W9, W9, 0x2
	0x0344DB28 ADD X8, X8, W9, 0x4, SXTW
	0x0344DB2C ADD X0, X8, 0x138
	0x0344DB30 LDP X8, X1, [X0]
	0x0344DB34 MOV X0, X20
	0x0344DB38 BLR X8
	0x0344DB3C LDR X8, [X20]
	0x0344DB40 LDR X1, [X23]
	0x0344DB44 MOV X21, X0
	0x0344DB48 LDRH W9, [X8 + 0x12E]
	0x0344DB4C CBZ X9, 0x344DB70
	0x0344DB50 LDR X10, [X8 + 0xB0]
	0x0344DB54 ADD X10, X10, 0x8
	0x0344DB58 LDUR X11, [X10 - 0x8]
	0x0344DB5C CMP X11, X1
	0x0344DB60 B.EQ 0x344DB80
	0x0344DB64 SUBS X9, X9, 0x1
	0x0344DB68 ADD X10, X10, 0x10
	0x0344DB6C B.NE 0x344DB58
	0x0344DB70 MOVZ W2, 0x1
	0x0344DB74 MOV X0, X20
	0x0344DB78 BL 0x1C5C788
	0x0344DB7C B 0x344DB90
	0x0344DB80 LDR W9, [X10]
	0x0344DB84 ADD W9, W9, 0x1
	0x0344DB88 ADD X8, X8, W9, 0x4, SXTW
	0x0344DB8C ADD X0, X8, 0x138
	0x0344DB90 LDP X8, X1, [X0]
	0x0344DB94 MOV X0, X20
	0x0344DB98 BLR X8
	0x0344DB9C LDR X8, [X20]
	0x0344DBA0 LDR X1, [X23]
	0x0344DBA4 MOV X22, X0
	0x0344DBA8 LDRH W9, [X8 + 0x12E]
	0x0344DBAC CBZ X9, 0x344DBD0
	0x0344DBB0 LDR X10, [X8 + 0xB0]
	0x0344DBB4 ADD X10, X10, 0x8
	0x0344DBB8 LDUR X11, [X10 - 0x8]
	0x0344DBBC CMP X11, X1
	0x0344DBC0 B.EQ 0x344DBE0
	0x0344DBC4 SUBS X9, X9, 0x1
	0x0344DBC8 ADD X10, X10, 0x10
	0x0344DBCC B.NE 0x344DBB8
	0x0344DBD0 MOV X0, X20
	0x0344DBD4 MOV W2, W31
	0x0344DBD8 BL 0x1C5C788
	0x0344DBDC B 0x344DBEC
	0x0344DBE0 LDRSW X9, [X10]
	0x0344DBE4 ADD X8, X8, X9, 0x4, LSL
	0x0344DBE8 ADD X0, X8, 0x138
	0x0344DBEC LDP X8, X1, [X0]
	0x0344DBF0 MOV X0, X20
	0x0344DBF4 BLR X8
	0x0344DBF8 ADRP X8, 0xCE2000
	0x0344DBFC LDR X8, [X8 + 0xA70]
	0x0344DC00 MOV W23, W0
	0x0344DC04 LDR X0, [X8]
	0x0344DC08 BL 0x1C16F10
	0x0344DC0C MOV X20, X0
	0x0344DC10 AND W3, W23, 0x1
	0x0344DC14 MOV X1, X21
	0x0344DC18 MOV X2, X22
	0x0344DC1C MOV X4, X31
	0x0344DC20 BL 0x34684B8
	0x0344DC24 MOVN W8, 0x1
	0x0344DC28 STR W8, [X19], #0x8
	0x0344DC2C LDR X0, [X25]
	0x0344DC30 ADRP X21, 0xCE2000
	0x0344DC34 LDR W8, [X0 + 0xE0]
	0x0344DC38 LDR X21, [X21 + 0xA50]
	0x0344DC3C CBNZ W8, 0x344DC44
	0x0344DC40 BL 0x1C16DFC
	0x0344DC44 LDR X2, [X21]
	0x0344DC48 MOV X0, X19
	0x0344DC4C MOV X1, X20
	0x0344DC50 BL 0x26322B0
	0x0344DC54 LDP X20, X19, [X31 + 0x50]
	0x0344DC58 LDP X22, X21, [X31 + 0x40]
	0x0344DC5C LDP X24, X23, [X31 + 0x30]
	0x0344DC60 LDP X30, X25, [X31 + 0x20]
	0x0344DC64 ADD X31, X31, 0x60
	0x0344DC68 RET
	0x0344DC6C BL 0x1C16F20
	0x0344DC70 BL 0x1C16F20
	0x0344DC74 BL 0x1C16F20
	0x0344DC78 BL 0x1C16F20
	0x0344DC7C BL 0x1C16F20
	0x0344DC80 B 0x344DCBC
	0x0344DC84 B 0x344DCBC
	0x0344DC88 B 0x344DCBC
	0x0344DC8C B 0x344DCBC
	0x0344DC90 B 0x344DCBC
	0x0344DC94 B 0x344DCBC
	0x0344DC98 B 0x344DCBC
	0x0344DC9C B 0x344DCBC
	0x0344DCA0 B 0x344DCBC
	0x0344DCA4 B 0x344DCBC
	0x0344DCA8 B 0x344DCBC
	0x0344DCAC B 0x344DCBC
	0x0344DCB0 B 0x344DCBC
	0x0344DCB4 B 0x344DCBC
	0x0344DCB8 B 0x344DCBC
	0x0344DCBC MOV X20, X0
	0x0344DCC0 CMP W1, 0x1
	0x0344DCC4 B.NE 0x344DD60
	0x0344DCC8 MOV X0, X20
	0x0344DCCC BL 0x3EB1AD0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF91000
	011 Move W8, [X20+1877]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE3000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE3000
	021 Move X0, [X0+2608]
	022 Call 0x1C17CF4
	023 Move X0, 0xCAA000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA9000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA8000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCAF000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA8000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE3000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE3000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA8000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA8000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA8000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE3000
	054 Move X0, [X0+2616]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE3000
	057 Move X0, [X0+2624]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1877], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCAA000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xCA8000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCE3000
	091 Move X8, [X8+2624]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call Object..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {357}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Move X8, [X19+64]
	109 Move [X21+48], X8
	110 Compare X20, 0
	111 JumpIfEqual {358}
	112 Move W8, [X20+16]
	113 Compare W8, 0
	114 JumpIfEqual {251}
	115 Move X8, [X19+80]
	116 Compare X8, 0
	117 JumpIfEqual {359}
	118 Move X21, [X8+24]
	119 Compare X21, 0
	120 JumpIfEqual {360}
	121 Move X23, 0xCA8000
	122 Move X8, [X21]
	123 Move X23, [X23+2072]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X23]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 7
	135 Move X0, X21
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 7
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X21
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X1, X31
	146 Call String.IsNullOrEmpty, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {249}
	151 Move X8, [X19+80]
	152 Compare X8, 0
	153 JumpIfEqual {361}
	154 Move X9, 0xCA8000
	155 Move X9, [X9+2544]
	156 Move X21, [X8+24]
	157 Move X0, [X9]
	158 Move W9, [X0+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X31
	163 Call DateTime.get_UtcNow
	164 Move X22, 0xCA9000
	165 Move X22, [X22+2576]
	166 Move X8, X0
	167 Move [X31+40], X8
	168 Move X0, [X22]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X22]
	174 Move X8, [X0+184]
	175 Move X1, [X8]
	176 Add X0, X31, 40
	177 Move X2, X31
	178 Call DateTime.Add, X0, X1
	179 Compare X21, 0
	180 JumpIfEqual {362}
	181 Move X8, [X21]
	182 Move X1, [X23]
	183 Move X22, X0
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move W2, 11
	194 Move X0, X21
	195 Call 0x1C5D788
	196 Move W9, [X10]
	197 Add W9, W9, 11
	198 Add X8, X8, W9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X2, [X0+8]
	202 Move X0, X21
	203 Move X1, X22
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {249}
	209 Move X8, [X19+80]
	210 Compare X8, 0
	211 JumpIfEqual {363}
	212 Move X1, [X8+24]
	213 Move X3, [X19+72]
	214 Move X4, [X8+48]
	215 Move X0, X20
	216 Move X2, X31
	217 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	218 Compare X0, 0
	219 JumpIfEqual {364}
	220 Move X8, 0xCA8000
	221 Move X8, [X8+2112]
	222 Move X1, [X8]
	223 Call Task`1<Object>.GetAwaiter, X0
	224 Move X8, 0xCA8000
	225 Move X8, [X8+2104]
	226 Move [X31+32], X0
	227 Move X1, [X8]
	228 Add X0, X31, 32
	229 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {85}
	234 Move [X19], W31
	235 Move X8, [X31+32]
	236 Move [X19+88], X8
	237 Move X0, [X25]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Move X8, 0xCE3000
	243 Move X8, [X8+2600]
	244 Add X0, X19, 8
	245 Move X3, [X8]
	246 Add X1, X31, 32
	247 Move X2, X19
	248 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	249 Compare X20, 0
	250 JumpIfEqual {356}
	251 Move X8, 0xCAF000
	252 Move X8, [X8+2072]
	253 Move X21, [X20+88]
	254 Move X23, [X19+80]
	255 Move X0, [X8]
	256 Call 0x1C17F10
	257 Move X8, 0xCE3000
	258 Move X8, [X8+2616]
	259 Move X22, X0
	260 Move X2, [X8]
	261 Move X1, X23
	262 Move X3, X31
	263 Call Func`1<Object>..ctor, X0, X1, X2
	264 Move X8, [X19+80]
	265 Compare X8, 0
	266 JumpIfEqual {353}
	267 Move X9, 0xCE3000
	268 Move X23, [X19+72]
	269 Move X9, [X9+1992]
	270 Compare X23, 0
	271 JumpIfNotEqual {273}
	272 Move X23, [X20+24]
	273 Move X20, [X8+24]
	274 Move X1, [X8+48]
	275 Move X2, [X9]
	276 Move [X31+8], X31
	277 Move [X31+16], X31
	278 Add X0, X31, 8
	279 Call Nullable`1<CancellationToken>..ctor, X0, X1
	280 Move X8, 0xCE3000
	281 Move X8, [X8+2000]
	282 Move X0, [X8]
	283 Call 0x1C17F10
	284 Move X3, [X31+8]
	285 Move X4, [X31+16]
	286 Move X24, X0
	287 Move X1, X20
	288 Move X2, X23
	289 Move X5, X31
	290 Call RetryHistory..ctor, X0, X1, X2, X3
	291 Compare X21, 0
	292 JumpIfEqual {354}
	293 Move X0, X21
	294 Move X1, X22
	295 Move X2, X24
	296 Move X3, X31
	297 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	298 Compare X0, 0
	299 JumpIfEqual {355}
	300 Move X1, X31
	301 Call Task.GetAwaiter, X0
	302 Move [X31+24], X0
	303 Add X0, X31, 24
	304 Move X1, X31
	305 Call TaskAwaiter.get_IsCompleted, X0
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {327}
	310 Add X0, X31, 24
	311 Move X1, X31
	312 Call TaskAwaiter.GetResult, X0
	313 Move TEMP, 1
	314 Not TEMP
	315 Move W8, TEMP
	316 Move [X19], W8
	317 Move [X19+80], X31
	318 Move X0, [X25]
	319 Add X19, X19, 8
	320 Move W8, [X0+224]
	321 Compare W8, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X0, X19
	325 Move X1, X31
	326 Call AsyncTaskMethodBuilder.SetResult, X0
	327 Move W8, 1
	328 Move [X19], W8
	329 Move X8, [X31+24]
	330 Move [X19+96], X8
	331 Move X0, [X25]
	332 Move W8, [X0+224]
	333 Compare W8, 0
	334 JumpIfNotEqual {336}
	335 Call 0x1C17DFC
	336 Move X8, 0xCE3000
	337 Move X8, [X8+2608]
	338 Add X0, X19, 8
	339 Move X3, [X8]
	340 Add X1, X31, 24
	341 Move X2, X19
	342 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	343 Move X20, [X31+96]
	344 Move X19, [X31+104]
	345 Move X22, [X31+80]
	346 Move X21, [X31+88]
	347 Move X24, [X31+64]
	348 Move X23, [X31+72]
	349 Move X30, [X31+48]
	350 Move X25, [X31+56]
	351 Add X31, X31, 112
	352 Return 
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Move X20, X0
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move X0, X20
	368 Call 0x3EB2AD0
	369 Move X20, X0
	370 Move X0, 0xCA7000
	371 Move X0, [X0+2000]
	372 Call 0x1C17D08
	373 Move X8, [X20]
	374 Move X1, [X8]
	375 Call 0x1C18270
	376 Move TEMP, X0
	377 And TEMP, TEMP, 1
	378 Compare TEMP, 1
	379 JumpIfNotEqual {398}
	380 Move X20, [X20]
	381 Call 0x3EB2AE0
	382 Move TEMP, 1
	383 Not TEMP
	384 Move W8, TEMP
	385 Move [X19+80], X31
	386 Move [X19+8], W8
	387 Move X0, 0xCAA000
	388 Move X0, [X0+640]
	389 Call 0x1C17D08
	390 Move W8, [X0+224]
	391 Compare W8, 0
	392 JumpIfNotEqual {394}
	393 Call 0x1C17DFC
	394 Move X0, X19
	395 Move X1, X20
	396 Move X2, X31
	397 Call AsyncTaskMethodBuilder.SetException, X0, X1
	398 Move W0, 8
	399 Call 0x3EB2AF0
	400 Move X8, [X20]
	401 Move [X0], X8
	402 Move X1, 0xA68000
	403 Add X1, X1, 3672
	404 Move X2, X31
	405 Call 0x3EB2B00
	406 Move X20, X0
	407 Call 0x3EB2AE0
	408 Move X0, X20
	409 Call 0x1D2D690
	410 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0344DCD0 MOV X20, X0
	0x0344DCD4 ADRP X0, 0xCA6000
	0x0344DCD8 LDR X0, [X0 + 0x7D0]
	0x0344DCDC BL 0x1C16D08
	0x0344DCE0 LDR X8, [X20]
	0x0344DCE4 LDR X1, [X8]
	0x0344DCE8 BL 0x1C17270
	0x0344DCEC TBZ X0, 0x0, 0x344DD38
	0x0344DCF0 LDR X20, [X20]
	0x0344DCF4 BL 0x3EB1AE0
	0x0344DCF8 MOVN W8, 0x1
	0x0344DCFC STR W8, [X19], #0x8
	0x0344DD00 ADRP X0, 0xCE2000
	0x0344DD04 LDR X0, [X0 + 0x630]
	0x0344DD08 BL 0x1C16D08
	0x0344DD0C LDR W8, [X0 + 0xE0]
	0x0344DD10 CBNZ W8, 0x344DD18
	0x0344DD14 BL 0x1C16DFC
	0x0344DD18 ADRP X0, 0xCE2000
	0x0344DD1C LDR X0, [X0 + 0xAA0]
	0x0344DD20 BL 0x1C16D08
	0x0344DD24 MOV X2, X0
	0x0344DD28 MOV X0, X19
	0x0344DD2C MOV X1, X20
	0x0344DD30 BL 0x26324C8
	0x0344DD34 B 0x344DC54

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF91000
	007 Move X22, 0xCAA000
	008 Move W8, [X21+1878]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCAA000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1878], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

