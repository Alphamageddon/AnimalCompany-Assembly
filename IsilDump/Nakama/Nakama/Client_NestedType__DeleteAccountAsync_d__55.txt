Type: Nakama.Client/<DeleteAccountAsync>d__55

Method: System.Void MoveNext()

Disassembly:
	0x03451DF8 LDR X8, [X8 + 0x838]
	0x03451DFC STR X0, [X31 + 0x20]
	0x03451E00 LDR X1, [X8]
	0x03451E04 ADD X0, X31, 0x20
	0x03451E08 BL 0x2677430
	0x03451E0C TBNZ X0, 0x0, 0x3451C04
	0x03451E10 STR W31, [X19]
	0x03451E14 LDR X8, [X31 + 0x20]
	0x03451E18 STR X8, [X19 + 0x50]
	0x03451E1C LDR X0, [X25]
	0x03451E20 LDR W8, [X0 + 0xE0]
	0x03451E24 CBNZ W8, 0x3451E2C
	0x03451E28 BL 0x1C16DFC
	0x03451E2C ADRP X8, 0xCDE000
	0x03451E30 LDR X8, [X8 + 0xC20]
	0x03451E34 ADD X0, X19, 0x8
	0x03451E38 LDR X3, [X8]
	0x03451E3C ADD X1, X31, 0x20
	0x03451E40 MOV X2, X19
	0x03451E44 BL 0x21881F4
	0x03451E48 B 0x3451F90
	0x03451E4C CBZ X20, 0x3451FB4
	0x03451E50 ADRP X8, 0xCAA000
	0x03451E54 LDR X8, [X8 + 0x818]
	0x03451E58 LDR X21, [X20 + 0x58]
	0x03451E5C LDR X23, [X19 + 0x48]
	0x03451E60 LDR X0, [X8]
	0x03451E64 BL 0x1C16F10
	0x03451E68 ADRP X8, 0xCDE000
	0x03451E6C LDR X8, [X8 + 0xC30]
	0x03451E70 MOV X22, X0
	0x03451E74 LDR X2, [X8]
	0x03451E78 MOV X1, X23
	0x03451E7C MOV X3, X31
	0x03451E80 BL 0x2D27AA8
	0x03451E84 LDR X8, [X19 + 0x48]
	0x03451E88 CBZ X8, 0x3451FA8
	0x03451E8C ADRP X9, 0xCDE000
	0x03451E90 LDR X23, [X19 + 0x40]
	0x03451E94 LDR X9, [X9 + 0x7C8]
	0x03451E98 CBNZ X23, 0x3451EA0
	0x03451E9C LDR X23, [X20 + 0x18]
	0x03451EA0 LDR X20, [X8 + 0x18]
	0x03451EA4 LDR X1, [X8 + 0x28]
	0x03451EA8 LDR X2, [X9]
	0x03451EAC STP X31, X31, [X31 + 0x8]
	0x03451EB0 ADD X0, X31, 0x8
	0x03451EB4 BL 0x242E368
	0x03451EB8 ADRP X8, 0xCDE000
	0x03451EBC LDR X8, [X8 + 0x7D0]
	0x03451EC0 LDR X0, [X8]
	0x03451EC4 BL 0x1C16F10
	0x03451EC8 LDP X3, X4, [X31 + 0x8]
	0x03451ECC MOV X24, X0
	0x03451ED0 MOV X1, X20
	0x03451ED4 MOV X2, X23
	0x03451ED8 MOV X5, X31
	0x03451EDC BL 0x3465404
	0x03451EE0 CBZ X21, 0x3451FAC
	0x03451EE4 MOV X0, X21
	0x03451EE8 MOV X1, X22
	0x03451EEC MOV X2, X24
	0x03451EF0 MOV X3, X31
	0x03451EF4 BL 0x3465B68
	0x03451EF8 CBZ X0, 0x3451FB0
	0x03451EFC MOV X1, X31
	0x03451F00 BL 0x33ED394
	0x03451F04 STR X0, [X31 + 0x18]
	0x03451F08 ADD X0, X31, 0x18
	0x03451F0C MOV X1, X31
	0x03451F10 BL 0x32C3A80
	0x03451F14 TBZ X0, 0x0, 0x3451F54
	0x03451F18 ADD X0, X31, 0x18
	0x03451F1C MOV X1, X31
	0x03451F20 BL 0x32C3B4C
	0x03451F24 MOVN W8, 0x1
	0x03451F28 STR W8, [X19]
	0x03451F2C STR X31, [X19 + 0x48]
	0x03451F30 LDR X0, [X25]
	0x03451F34 ADD X19, X19, 0x8
	0x03451F38 LDR W8, [X0 + 0xE0]
	0x03451F3C CBNZ W8, 0x3451F44
	0x03451F40 BL 0x1C16DFC
	0x03451F44 MOV X0, X19
	0x03451F48 MOV X1, X31
	0x03451F4C BL 0x32C4864
	0x03451F50 B 0x3451F90
	0x03451F54 MOVZ W8, 0x1
	0x03451F58 STR W8, [X19]
	0x03451F5C LDR X8, [X31 + 0x18]
	0x03451F60 STR X8, [X19 + 0x58]
	0x03451F64 LDR X0, [X25]
	0x03451F68 LDR W8, [X0 + 0xE0]
	0x03451F6C CBNZ W8, 0x3451F74
	0x03451F70 BL 0x1C16DFC
	0x03451F74 ADRP X8, 0xCDE000
	0x03451F78 LDR X8, [X8 + 0xC28]
	0x03451F7C ADD X0, X19, 0x8
	0x03451F80 LDR X3, [X8]
	0x03451F84 ADD X1, X31, 0x18
	0x03451F88 MOV X2, X19
	0x03451F8C BL 0x21898B8
	0x03451F90 LDP X20, X19, [X31 + 0x60]
	0x03451F94 LDP X22, X21, [X31 + 0x50]
	0x03451F98 LDP X24, X23, [X31 + 0x40]
	0x03451F9C LDP X30, X25, [X31 + 0x30]
	0x03451FA0 ADD X31, X31, 0x70
	0x03451FA4 RET
	0x03451FA8 BL 0x1C16F20
	0x03451FAC BL 0x1C16F20
	0x03451FB0 BL 0x1C16F20
	0x03451FB4 BL 0x1C16F20
	0x03451FB8 BL 0x1C16F20
	0x03451FBC BL 0x1C16F20
	0x03451FC0 BL 0x1C16F20
	0x03451FC4 BL 0x1C16F20
	0x03451FC8 BL 0x1C16F20
	0x03451FCC BL 0x1C16F20
	0x03451FD0 BL 0x1C16F20
	0x03451FD4 BL 0x1C16F20
	0x03451FD8 B 0x345204C
	0x03451FDC B 0x345204C
	0x03451FE0 B 0x345204C
	0x03451FE4 B 0x345204C
	0x03451FE8 B 0x345204C
	0x03451FEC B 0x345204C
	0x03451FF0 B 0x345204C
	0x03451FF4 B 0x345204C
	0x03451FF8 B 0x345204C
	0x03451FFC B 0x345204C
	0x03452000 B 0x345204C
	0x03452004 B 0x345204C
	0x03452008 B 0x345204C
	0x0345200C B 0x345204C
	0x03452010 B 0x345204C
	0x03452014 B 0x345204C
	0x03452018 B 0x345204C
	0x0345201C B 0x345204C
	0x03452020 B 0x345204C
	0x03452024 B 0x345204C
	0x03452028 B 0x345204C
	0x0345202C B 0x345204C
	0x03452030 B 0x345204C
	0x03452034 B 0x345204C
	0x03452038 B 0x345204C
	0x0345203C B 0x345204C
	0x03452040 B 0x345204C
	0x03452044 B 0x345204C
	0x03452048 B 0x345204C
	0x0345204C MOV X20, X0
	0x03452050 CMP W1, 0x1
	0x03452054 B.NE 0x34520E8
	0x03452058 MOV X0, X20
	0x0345205C BL 0x3EB1AD0
	0x03452060 MOV X20, X0
	0x03452064 ADRP X0, 0xCA1000
	0x03452068 LDR X0, [X0 + 0x7D0]
	0x0345206C BL 0x1C16D08
	0x03452070 LDR X8, [X20]
	0x03452074 LDR X1, [X8]
	0x03452078 BL 0x1C17270
	0x0345207C TBZ X0, 0x0, 0x34520C0
	0x03452080 LDR X20, [X20]
	0x03452084 BL 0x3EB1AE0
	0x03452088 MOVN W8, 0x1
	0x0345208C STR X31, [X19 + 0x48]
	0x03452090 STR W8, [X19], #0x8
	0x03452094 ADRP X0, 0xCA4000
	0x03452098 LDR X0, [X0 + 0x280]
	0x0345209C BL 0x1C16D08
	0x034520A0 LDR W8, [X0 + 0xE0]
	0x034520A4 CBNZ W8, 0x34520AC
	0x034520A8 BL 0x1C16DFC
	0x034520AC MOV X0, X19
	0x034520B0 MOV X1, X20
	0x034520B4 MOV X2, X31
	0x034520B8 BL 0x32C4908
	0x034520BC B 0x3451F90
	0x034520C0 MOVZ W0, 0x8
	0x034520C4 BL 0x3EB1AF0
	0x034520C8 LDR X8, [X20]
	0x034520CC STR X8, [X0]
	0x034520D0 ADRP X1, 0xA62000
	0x034520D4 ADD X1, X1, 0xE58
	0x034520D8 MOV X2, X31
	0x034520DC BL 0x3EB1B00
	0x034520E0 MOV X20, X0
	0x034520E4 BL 0x3EB1AE0
	0x034520E8 MOV X0, X20
	0x034520EC BL 0x1D2C690
	0x034520F0 BL 0x1990590
	0x034520F4 STR X30, [X31 - 0x30]!
	0x034520F8 STP X22, X21, [X31 + 0x10]
	0x034520FC STP X20, X19, [X31 + 0x20]
	0x03452100 ADRP X21, 0xF8B000
	0x03452104 ADRP X22, 0xCA4000
	0x03452108 LDRB W8, [X21 + 0x772]
	0x0345210C LDR X22, [X22 + 0x280]
	0x03452110 MOV X19, X1
	0x03452114 MOV X20, X0
	0x03452118 TBNZ X8, 0x0, 0x3452130
	0x0345211C ADRP X0, 0xCA4000
	0x03452120 LDR X0, [X0 + 0x280]
	0x03452124 BL 0x1C16CF4
	0x03452128 MOVZ W8, 0x1
	0x0345212C STRB W8, [X21 + 0x772]
	0x03452130 LDR X0, [X22]
	0x03452134 LDR W8, [X0 + 0xE0]
	0x03452138 CBNZ W8, 0x3452140
	0x0345213C BL 0x1C16DFC
	0x03452140 ADD X0, X20, 0x8
	0x03452144 MOV X1, X19
	0x03452148 LDP X20, X19, [X31 + 0x20]
	0x0345214C LDP X22, X21, [X31 + 0x10]
	0x03452150 MOV X2, X31
	0x03452154 LDR X30, [X31], #0x30
	0x03452158 B 0x32C477C
	0x0345215C SUB X31, X31, 0x70
	0x03452160 STP X30, X25, [X31 + 0x30]
	0x03452164 STP X24, X23, [X31 + 0x40]
	0x03452168 STP X22, X21, [X31 + 0x50]
	0x0345216C STP X20, X19, [X31 + 0x60]
	0x03452170 ADRP X20, 0xF8B000
	0x03452174 LDRB W8, [X20 + 0x773]
	0x03452178 MOV X19, X0
	0x0345217C TBNZ X8, 0x0, 0x3452230
	0x03452180 ADRP X0, 0xCDD000
	0x03452184 LDR X0, [X0 + 0xC40]
	0x03452188 BL 0x1C16CF4
	0x0345218C ADRP X0, 0xCDD000
	0x03452190 LDR X0, [X0 + 0xC48]
	0x03452194 BL 0x1C16CF4
	0x03452198 ADRP X0, 0xCA4000
	0x0345219C LDR X0, [X0 + 0x280]
	0x034521A0 BL 0x1C16CF4
	0x034521A4 ADRP X0, 0xCA3000
	0x034521A8 LDR X0, [X0 + 0xA10]
	0x034521AC BL 0x1C16CF4
	0x034521B0 ADRP X0, 0xCA2000
	0x034521B4 LDR X0, [X0 + 0x9F0]
	0x034521B8 BL 0x1C16CF4
	0x034521BC ADRP X0, 0xCA9000
	0x034521C0 LDR X0, [X0 + 0x818]
	0x034521C4 BL 0x1C16CF4
	0x034521C8 ADRP X0, 0xCA2000
	0x034521CC LDR X0, [X0 + 0x818]
	0x034521D0 BL 0x1C16CF4
	0x034521D4 ADRP X0, 0xCDD000
	0x034521D8 LDR X0, [X0 + 0x7C8]
	0x034521DC BL 0x1C16CF4
	0x034521E0 ADRP X0, 0xCDD000
	0x034521E4 LDR X0, [X0 + 0x7D0]
	0x034521E8 BL 0x1C16CF4
	0x034521EC ADRP X0, 0xCA2000
	0x034521F0 LDR X0, [X0 + 0x830]
	0x034521F4 BL 0x1C16CF4
	0x034521F8 ADRP X0, 0xCA2000
	0x034521FC LDR X0, [X0 + 0x838]
	0x03452200 BL 0x1C16CF4
	0x03452204 ADRP X0, 0xCA2000
	0x03452208 LDR X0, [X0 + 0x840]
	0x0345220C BL 0x1C16CF4
	0x03452210 ADRP X0, 0xCDD000
	0x03452214 LDR X0, [X0 + 0xC50]
	0x03452218 BL 0x1C16CF4
	0x0345221C ADRP X0, 0xCDD000
	0x03452220 LDR X0, [X0 + 0xC58]
	0x03452224 BL 0x1C16CF4
	0x03452228 MOVZ W8, 0x1
	0x0345222C STRB W8, [X20 + 0x773]
	0x03452230 STP X31, X31, [X31 + 0x20]
	0x03452234 STR X31, [X31 + 0x18]
	0x03452238 ADRP X25, 0xCA4000
	0x0345223C LDR W8, [X19]
	0x03452240 LDR X20, [X19 + 0x20]
	0x03452244 LDR X25, [X25 + 0x280]
	0x03452248 CBZ W8, 0x345226C
	0x0345224C CMP W8, 0x1
	0x03452250 B.NE 0x3452298
	0x03452254 LDR X8, [X19 + 0x58]
	0x03452258 MOVN W9, 0x0
	0x0345225C STR X8, [X31 + 0x18]
	0x03452260 STR X31, [X19 + 0x58]
	0x03452264 STR W9, [X19]
	0x03452268 B 0x3452594
	0x0345226C LDR X8, [X19 + 0x50]
	0x03452270 MOVN W9, 0x0
	0x03452274 STR X8, [X31 + 0x20]
	0x03452278 STR X31, [X19 + 0x50]
	0x0345227C STR W9, [X19]
	0x03452280 ADRP X8, 0xCA2000
	0x03452284 LDR X8, [X8 + 0x830]
	0x03452288 ADD X0, X31, 0x20
	0x0345228C LDR X1, [X8]
	0x03452290 BL 0x2677474
	0x03452294 B 0x34524C8
	0x03452298 ADRP X8, 0xCDD000
	0x0345229C LDR X8, [X8 + 0xC58]
	0x034522A0 LDR X0, [X8]
	0x034522A4 BL 0x1C16F10
	0x034522A8 MOV X21, X0
	0x034522AC MOV X1, X31
	0x034522B0 BL 0x3448C14
	0x034522B4 STR X21, [X19 + 0x48]
	0x034522B8 CBZ X21, 0x3452634
	0x034522BC LDR X8, [X19 + 0x20]
	0x034522C0 STR X8, [X21 + 0x10]
	0x034522C4 LDR X8, [X19 + 0x28]
	0x034522C8 STR X8, [X21 + 0x18]
	0x034522CC LDR X8, [X19 + 0x30]
	0x034522D0 STR X8, [X21 + 0x20]
	0x034522D4 LDR X8, [X19 + 0x38]
	0x034522D8 STR X8, [X21 + 0x28]
	0x034522DC CBZ X20, 0x3452638
	0x034522E0 LDRB W8, [X20 + 0x10]
	0x034522E4 CBZ W8, 0x34524CC
	0x034522E8 LDR X8, [X19 + 0x48]
	0x034522EC CBZ X8, 0x345263C
	0x034522F0 LDR X21, [X8 + 0x18]
	0x034522F4 CBZ X21, 0x3452640
	0x034522F8 ADRP X23, 0xCA2000
	0x034522FC LDR X8, [X21]
	0x03452300 LDR X23, [X23 + 0x818]
	0x03452304 LDRH W9, [X8 + 0x12E]
	0x03452308 LDR X1, [X23]
	0x0345230C CBZ X9, 0x3452330
	0x03452310 LDR X10, [X8 + 0xB0]
	0x03452314 ADD X10, X10, 0x8
	0x03452318 LDUR X11, [X10 - 0x8]
	0x0345231C CMP X11, X1
	0x03452320 B.EQ 0x3452340
	0x03452324 SUBS X9, X9, 0x1
	0x03452328 ADD X10, X10, 0x10
	0x0345232C B.NE 0x3452318
	0x03452330 MOVZ W2, 0x7
	0x03452334 MOV X0, X21
	0x03452338 BL 0x1C5C788
	0x0345233C B 0x3452350
	0x03452340 LDR W9, [X10]
	0x03452344 ADD W9, W9, 0x7
	0x03452348 ADD X8, X8, W9, 0x4, SXTW
	0x0345234C ADD X0, X8, 0x138
	0x03452350 LDP X8, X1, [X0]
	0x03452354 MOV X0, X21
	0x03452358 BLR X8
	0x0345235C MOV X1, X31
	0x03452360 BL 0x32277A8
	0x03452364 TBNZ X0, 0x0, 0x34524C8
	0x03452368 LDR X8, [X19 + 0x48]
	0x0345236C CBZ X8, 0x3452644
	0x03452370 ADRP X9, 0xCA2000
	0x03452374 LDR X9, [X9 + 0x9F0]
	0x03452378 LDR X21, [X8 + 0x18]
	0x0345237C LDR X0, [X9]
	0x03452380 LDR W9, [X0 + 0xE0]
	0x03452384 CBNZ W9, 0x345238C
	0x03452388 BL 0x1C16DFC
	0x0345238C MOV X0, X31
	0x03452390 BL 0x33616A4
	0x03452394 ADRP X22, 0xCA3000
	0x03452398 LDR X22, [X22 + 0xA10]
	0x0345239C MOV X8, X0
	0x034523A0 STR X8, [X31 + 0x28]
	0x034523A4 LDR X0, [X22]
	0x034523A8 LDR W8, [X0 + 0xE0]
	0x034523AC CBNZ W8, 0x34523B8
	0x034523B0 BL 0x1C16DFC
	0x034523B4 LDR X0, [X22]
	0x034523B8 LDR X8, [X0 + 0xB8]
	0x034523BC LDR X1, [X8]
	0x034523C0 ADD X0, X31, 0x28
	0x034523C4 MOV X2, X31
	0x034523C8 BL 0x335FC68
	0x034523CC CBZ X21, 0x3452648
	0x034523D0 LDR X8, [X21]
	0x034523D4 LDR X1, [X23]
	0x034523D8 MOV X22, X0
	0x034523DC LDRH W9, [X8 + 0x12E]
	0x034523E0 CBZ X9, 0x3452404
	0x034523E4 LDR X10, [X8 + 0xB0]
	0x034523E8 ADD X10, X10, 0x8
	0x034523EC LDUR X11, [X10 - 0x8]
	0x034523F0 CMP X11, X1
	0x034523F4 B.EQ 0x3452414
	0x034523F8 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF8D000
	011 Move W8, [X20+1901]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCDF000
	018 Move X0, [X0+3040]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDF000
	021 Move X0, [X0+3048]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA6000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA5000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA4000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCAB000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA4000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDF000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDF000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA4000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA4000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA4000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDF000
	054 Move X0, [X0+3056]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDF000
	057 Move X0, [X0+3064]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1901], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA6000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+80]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+80], X31
	077 Move [X19], W9
	078 Move X8, [X19+72]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+72], X31
	084 Move [X19], W9
	085 Move X8, 0xCA4000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCDF000
	091 Move X8, [X8+3064]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass55_0..ctor, X0
	097 Move [X19+64], X21
	098 Compare X21, 0
	099 JumpIfEqual {354}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Compare X20, 0
	107 JumpIfEqual {355}
	108 Move W8, [X20+16]
	109 Compare W8, 0
	110 JumpIfEqual {248}
	111 Move X8, [X19+64]
	112 Compare X8, 0
	113 JumpIfEqual {356}
	114 Move X21, [X8+24]
	115 Compare X21, 0
	116 JumpIfEqual {357}
	117 Move X23, 0xCA4000
	118 Move X8, [X21]
	119 Move X23, [X23+2072]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Move X1, [X23]
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move W2, 7
	131 Move X0, X21
	132 Call 0x1C5D788
	133 Move W9, [X10]
	134 Add W9, W9, 7
	135 Add X8, X8, W9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X21
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X1, X31
	142 Call String.IsNullOrEmpty, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {246}
	147 Move X8, [X19+64]
	148 Compare X8, 0
	149 JumpIfEqual {358}
	150 Move X9, 0xCA3000
	151 Move X9, [X9+2544]
	152 Move X21, [X8+24]
	153 Move X0, [X9]
	154 Move W9, [X0+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X31
	159 Call DateTime.get_UtcNow
	160 Move X22, 0xCA4000
	161 Move X22, [X22+2576]
	162 Move X8, X0
	163 Move [X31+40], X8
	164 Move X0, [X22]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X22]
	170 Move X8, [X0+184]
	171 Move X1, [X8]
	172 Add X0, X31, 40
	173 Move X2, X31
	174 Call DateTime.Add, X0, X1
	175 Compare X21, 0
	176 JumpIfEqual {359}
	177 Move X8, [X21]
	178 Move X1, [X23]
	179 Move X22, X0
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move W2, 11
	190 Move X0, X21
	191 Call 0x1C5D788
	192 Move W9, [X10]
	193 Add W9, W9, 11
	194 Add X8, X8, W9
	195 Add X0, X8, 312
	196 Move X8, [X0]
	197 Move X2, [X0+8]
	198 Move X0, X21
	199 Move X1, X22
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {246}
	205 Move X8, [X19+64]
	206 Compare X8, 0
	207 JumpIfEqual {360}
	208 Move X1, [X8+24]
	209 Move X4, [X8+32]
	210 Move X3, [X19+56]
	211 Move X0, X20
	212 Move X2, X31
	213 Move X5, X31
	214 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	215 Compare X0, 0
	216 JumpIfEqual {361}
	217 Move X8, 0xCA3000
	218 Move X8, [X8+2112]
	219 Move X1, [X8]
	220 Call Task`1<Object>.GetAwaiter, X0
	221 Move X8, 0xCA3000
	222 Move X8, [X8+2104]
	223 Move [X31+32], X0
	224 Move X1, [X8]
	225 Add X0, X31, 32
	226 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {85}
	231 Move [X19], W31
	232 Move X8, [X31+32]
	233 Move [X19+72], X8
	234 Move X0, [X25]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X8, 0xCDE000
	240 Move X8, [X8+3040]
	241 Add X0, X19, 8
	242 Move X3, [X8]
	243 Add X1, X31, 32
	244 Move X2, X19
	245 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	246 Compare X20, 0
	247 JumpIfEqual {353}
	248 Move X8, 0xCAA000
	249 Move X8, [X8+2072]
	250 Move X21, [X20+88]
	251 Move X23, [X19+64]
	252 Move X0, [X8]
	253 Call 0x1C17F10
	254 Move X8, 0xCDE000
	255 Move X8, [X8+3056]
	256 Move X22, X0
	257 Move X2, [X8]
	258 Move X1, X23
	259 Move X3, X31
	260 Call Func`1<Object>..ctor, X0, X1, X2
	261 Move X8, [X19+64]
	262 Compare X8, 0
	263 JumpIfEqual {350}
	264 Move X9, 0xCDE000
	265 Move X23, [X19+56]
	266 Move X9, [X9+1992]
	267 Compare X23, 0
	268 JumpIfNotEqual {270}
	269 Move X23, [X20+24]
	270 Move X20, [X8+24]
	271 Move X1, [X8+32]
	272 Move X2, [X9]
	273 Move [X31+8], X31
	274 Move [X31+16], X31
	275 Add X0, X31, 8
	276 Call Nullable`1<CancellationToken>..ctor, X0, X1
	277 Move X8, 0xCDE000
	278 Move X8, [X8+2000]
	279 Move X0, [X8]
	280 Call 0x1C17F10
	281 Move X3, [X31+8]
	282 Move X4, [X31+16]
	283 Move X24, X0
	284 Move X1, X20
	285 Move X2, X23
	286 Move X5, X31
	287 Call RetryHistory..ctor, X0, X1, X2, X3
	288 Compare X21, 0
	289 JumpIfEqual {351}
	290 Move X0, X21
	291 Move X1, X22
	292 Move X2, X24
	293 Move X3, X31
	294 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	295 Compare X0, 0
	296 JumpIfEqual {352}
	297 Move X1, X31
	298 Call Task.GetAwaiter, X0
	299 Move [X31+24], X0
	300 Add X0, X31, 24
	301 Move X1, X31
	302 Call TaskAwaiter.get_IsCompleted, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {324}
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.GetResult, X0
	310 Move TEMP, 1
	311 Not TEMP
	312 Move W8, TEMP
	313 Move [X19], W8
	314 Move [X19+64], X31
	315 Move X0, [X25]
	316 Add X19, X19, 8
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call AsyncTaskMethodBuilder.SetResult, X0
	324 Move W8, 1
	325 Move [X19], W8
	326 Move X8, [X31+24]
	327 Move [X19+80], X8
	328 Move X0, [X25]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X8, 0xCDE000
	334 Move X8, [X8+3048]
	335 Add X0, X19, 8
	336 Move X3, [X8]
	337 Add X1, X31, 24
	338 Move X2, X19
	339 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	340 Move X20, [X31+96]
	341 Move X19, [X31+104]
	342 Move X22, [X31+80]
	343 Move X21, [X31+88]
	344 Move X24, [X31+64]
	345 Move X23, [X31+72]
	346 Move X30, [X31+48]
	347 Move X25, [X31+56]
	348 Add X31, X31, 112
	349 Return 
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X20, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X20
	365 Call 0x3EB2AD0
	366 Move X20, X0
	367 Move X0, 0xCA2000
	368 Move X0, [X0+2000]
	369 Call 0x1C17D08
	370 Move X8, [X20]
	371 Move X1, [X8]
	372 Call 0x1C18270
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {395}
	377 Move X20, [X20]
	378 Call 0x3EB2AE0
	379 Move TEMP, 1
	380 Not TEMP
	381 Move W8, TEMP
	382 Move [X19+64], X31
	383 Move [X19+8], W8
	384 Move X0, 0xCA5000
	385 Move X0, [X0+640]
	386 Call 0x1C17D08
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X19
	392 Move X1, X20
	393 Move X2, X31
	394 Call AsyncTaskMethodBuilder.SetException, X0, X1
	395 Move W0, 8
	396 Call 0x3EB2AF0
	397 Move X8, [X20]
	398 Move [X0], X8
	399 Move X1, 0xA63000
	400 Add X1, X1, 3672
	401 Move X2, X31
	402 Call 0x3EB2B00
	403 Move X20, X0
	404 Call 0x3EB2AE0
	405 Move X0, X20
	406 Call 0x1D2D690
	407 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034523FC ADD X10, X10, 0x10
	0x03452400 B.NE 0x34523EC
	0x03452404 MOVZ W2, 0xB
	0x03452408 MOV X0, X21
	0x0345240C BL 0x1C5C788
	0x03452410 B 0x3452424
	0x03452414 LDR W9, [X10]
	0x03452418 ADD W9, W9, 0xB
	0x0345241C ADD X8, X8, W9, 0x4, SXTW
	0x03452420 ADD X0, X8, 0x138
	0x03452424 LDP X8, X2, [X0]
	0x03452428 MOV X0, X21
	0x0345242C MOV X1, X22
	0x03452430 BLR X8
	0x03452434 TBZ X0, 0x0, 0x34524C8
	0x03452438 LDR X8, [X19 + 0x48]
	0x0345243C CBZ X8, 0x345264C
	0x03452440 LDR X1, [X8 + 0x18]
	0x03452444 LDR X3, [X19 + 0x40]
	0x03452448 LDR X4, [X8 + 0x28]
	0x0345244C MOV X0, X20
	0x03452450 MOV X2, X31
	0x03452454 MOV X5, X31
	0x03452458 BL 0x34440A8
	0x0345245C CBZ X0, 0x3452650
	0x03452460 ADRP X8, 0xCA2000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF8C000
	007 Move X22, 0xCA5000
	008 Move W8, [X21+1902]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA5000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1902], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

