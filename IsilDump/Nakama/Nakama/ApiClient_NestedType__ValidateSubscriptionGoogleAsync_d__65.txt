Type: Nakama.ApiClient/<ValidateSubscriptionGoogleAsync>d__65

Method: System.Void MoveNext()

Disassembly:
	0x0343D95C LDUR X11, [X10 - 0x8]
	0x0343D960 CMP X11, X1
	0x0343D964 B.EQ 0x343D99C
	0x0343D968 SUBS X9, X9, 0x1
	0x0343D96C ADD X10, X10, 0x10
	0x0343D970 B.NE 0x343D95C
	0x0343D974 MOVZ W2, 0x3
	0x0343D978 MOV X0, X24
	0x0343D97C BL 0x1C5C788
	0x0343D980 B 0x343D9AC
	0x0343D984 LDR X8, [X19 + 0x48]
	0x0343D988 MOVN W9, 0x0
	0x0343D98C STR X8, [X31 + 0x18]
	0x0343D990 STR X31, [X19 + 0x48]
	0x0343D994 STR W9, [X19]
	0x0343D998 B 0x343DA08
	0x0343D99C LDR W9, [X10]
	0x0343D9A0 ADD W9, W9, 0x3
	0x0343D9A4 ADD X8, X8, W9, 0x4, SXTW
	0x0343D9A8 ADD X0, X8, 0x138
	0x0343D9AC LDP X8, X9, [X0]
	0x0343D9B0 MOV X0, X24
	0x0343D9B4 MOV X1, X21
	0x0343D9B8 MOV X2, X20
	0x0343D9BC MOV X3, X22
	0x0343D9C0 MOV X4, X23
	0x0343D9C4 MOV W5, W26
	0x0343D9C8 MOV X6, X27
	0x0343D9CC MOV X7, X25
	0x0343D9D0 STR X9, [X31]
	0x0343D9D4 BLR X8
	0x0343D9D8 CBZ X0, 0x343DB28
	0x0343D9DC ADRP X8, 0xCB9000
	0x0343D9E0 LDR X8, [X8 + 0x1F8]
	0x0343D9E4 LDR X1, [X8]
	0x0343D9E8 BL 0x269F5D0
	0x0343D9EC ADRP X8, 0xCB9000
	0x0343D9F0 LDR X8, [X8 + 0x1F0]
	0x0343D9F4 STR X0, [X31 + 0x18]
	0x0343D9F8 LDR X1, [X8]
	0x0343D9FC ADD X0, X31, 0x18
	0x0343DA00 BL 0x2677430
	0x0343DA04 TBZ X0, 0x0, 0x343DA64
	0x0343DA08 ADRP X8, 0xCB9000
	0x0343DA0C LDR X8, [X8 + 0x1E0]
	0x0343DA10 ADD X0, X31, 0x18
	0x0343DA14 LDR X1, [X8]
	0x0343DA18 BL 0x2677474
	0x0343DA1C ADRP X8, 0xCF2000
	0x0343DA20 LDR X8, [X8 + 0x568]
	0x0343DA24 LDR X1, [X8]
	0x0343DA28 BL 0x220E6DC
	0x0343DA2C MOVN W8, 0x1
	0x0343DA30 STR W8, [X19], #0x8
	0x0343DA34 MOV X20, X0
	0x0343DA38 LDR X0, [X28]
	0x0343DA3C ADRP X21, 0xCF2000
	0x0343DA40 LDR W8, [X0 + 0xE0]
	0x0343DA44 LDR X21, [X21 + 0x560]
	0x0343DA48 CBNZ W8, 0x343DA50
	0x0343DA4C BL 0x1C16DFC
	0x0343DA50 LDR X2, [X21]
	0x0343DA54 MOV X0, X19
	0x0343DA58 MOV X1, X20
	0x0343DA5C BL 0x26322B0
	0x0343DA60 B 0x343DA9C
	0x0343DA64 STR W31, [X19]
	0x0343DA68 LDR X8, [X31 + 0x18]
	0x0343DA6C STR X8, [X19 + 0x48]
	0x0343DA70 LDR X0, [X28]
	0x0343DA74 LDR W8, [X0 + 0xE0]
	0x0343DA78 CBNZ W8, 0x343DA80
	0x0343DA7C BL 0x1C16DFC
	0x0343DA80 ADRP X8, 0xCF2000
	0x0343DA84 LDR X8, [X8 + 0x558]
	0x0343DA88 ADD X0, X19, 0x8
	0x0343DA8C LDR X3, [X8]
	0x0343DA90 ADD X1, X31, 0x18
	0x0343DA94 MOV X2, X19
	0x0343DA98 BL 0x1FB6964
	0x0343DA9C LDP X20, X19, [X31 + 0x60]
	0x0343DAA0 LDP X22, X21, [X31 + 0x50]
	0x0343DAA4 LDP X24, X23, [X31 + 0x40]
	0x0343DAA8 LDP X26, X25, [X31 + 0x30]
	0x0343DAAC LDP X28, X27, [X31 + 0x20]
	0x0343DAB0 LDR X30, [X31 + 0x10]
	0x0343DAB4 ADD X31, X31, 0x70
	0x0343DAB8 RET
	0x0343DABC ADRP X0, 0xCBE000
	0x0343DAC0 LDR X0, [X0 + 0x578]
	0x0343DAC4 BL 0x1C16D08
	0x0343DAC8 BL 0x1C16F10
	0x0343DACC MOV X20, X0
	0x0343DAD0 ADRP X0, 0xCF1000
	0x0343DAD4 LDR X0, [X0 + 0xBC8]
	0x0343DAD8 BL 0x1C16D08
	0x0343DADC MOV X1, X0
	0x0343DAE0 MOV X0, X20
	0x0343DAE4 MOV X2, X31
	0x0343DAE8 BL 0x3314A68
	0x0343DAEC ADRP X0, 0xCF2000
	0x0343DAF0 LDR X0, [X0 + 0x570]
	0x0343DAF4 BL 0x1C16D08
	0x0343DAF8 MOV X1, X0
	0x0343DAFC MOV X0, X20
	0x0343DB00 BL 0x1C16DEC
	0x0343DB04 BL 0x1C16F20
	0x0343DB08 BL 0x1C16F20
	0x0343DB0C BL 0x1C16F20
	0x0343DB10 BL 0x1C16F28
	0x0343DB14 BL 0x1C16F20
	0x0343DB18 BL 0x1C16F20
	0x0343DB1C BL 0x1C16F20
	0x0343DB20 BL 0x1C16F20
	0x0343DB24 BL 0x1C16F20
	0x0343DB28 BL 0x1C16F20
	0x0343DB2C B 0x343DB90
	0x0343DB30 B 0x343DB90
	0x0343DB34 B 0x343DB90
	0x0343DB38 B 0x343DB90
	0x0343DB3C B 0x343DB90
	0x0343DB40 B 0x343DB90
	0x0343DB44 B 0x343DB90
	0x0343DB48 B 0x343DB90
	0x0343DB4C B 0x343DB90
	0x0343DB50 B 0x343DB90
	0x0343DB54 B 0x343DB90
	0x0343DB58 B 0x343DB90
	0x0343DB5C B 0x343DB90
	0x0343DB60 B 0x343DB90
	0x0343DB64 B 0x343DB90
	0x0343DB68 B 0x343DB90
	0x0343DB6C B 0x343DB90
	0x0343DB70 B 0x343DB90
	0x0343DB74 B 0x343DB90
	0x0343DB78 B 0x343DB90
	0x0343DB7C B 0x343DB90
	0x0343DB80 B 0x343DB90
	0x0343DB84 B 0x343DB90
	0x0343DB88 B 0x343DB90
	0x0343DB8C B 0x343DB90
	0x0343DB90 MOV X20, X0
	0x0343DB94 CMP W1, 0x1
	0x0343DB98 B.NE 0x343DC34
	0x0343DB9C MOV X0, X20
	0x0343DBA0 BL 0x3EB1AD0
	0x0343DBA4 MOV X20, X0
	0x0343DBA8 ADRP X0, 0xCB6000
	0x0343DBAC LDR X0, [X0 + 0x7D0]
	0x0343DBB0 BL 0x1C16D08
	0x0343DBB4 LDR X8, [X20]
	0x0343DBB8 LDR X1, [X8]
	0x0343DBBC BL 0x1C17270
	0x0343DBC0 TBZ X0, 0x0, 0x343DC0C
	0x0343DBC4 LDR X20, [X20]
	0x0343DBC8 BL 0x3EB1AE0
	0x0343DBCC MOVN W8, 0x1
	0x0343DBD0 STR W8, [X19], #0x8
	0x0343DBD4 ADRP X0, 0xCF1000
	0x0343DBD8 LDR X0, [X0 + 0x6B8]
	0x0343DBDC BL 0x1C16D08
	0x0343DBE0 LDR W8, [X0 + 0xE0]
	0x0343DBE4 CBNZ W8, 0x343DBEC
	0x0343DBE8 BL 0x1C16DFC
	0x0343DBEC ADRP X0, 0xCF2000
	0x0343DBF0 LDR X0, [X0 + 0x578]
	0x0343DBF4 BL 0x1C16D08
	0x0343DBF8 MOV X2, X0
	0x0343DBFC MOV X0, X19
	0x0343DC00 MOV X1, X20
	0x0343DC04 BL 0x26324C8
	0x0343DC08 B 0x343DA9C
	0x0343DC0C MOVZ W0, 0x8
	0x0343DC10 BL 0x3EB1AF0
	0x0343DC14 LDR X8, [X20]
	0x0343DC18 STR X8, [X0]
	0x0343DC1C ADRP X1, 0xA77000
	0x0343DC20 ADD X1, X1, 0xE58
	0x0343DC24 MOV X2, X31
	0x0343DC28 BL 0x3EB1B00
	0x0343DC2C MOV X20, X0
	0x0343DC30 BL 0x3EB1AE0
	0x0343DC34 MOV X0, X20
	0x0343DC38 BL 0x1D2C690
	0x0343DC3C BL 0x1990590
	0x0343DC40 STR X30, [X31 - 0x30]!
	0x0343DC44 STP X22, X21, [X31 + 0x10]
	0x0343DC48 STP X20, X19, [X31 + 0x20]
	0x0343DC4C ADRP X22, 0xFA0000
	0x0343DC50 ADRP X21, 0xCF1000
	0x0343DC54 LDRB W8, [X22 + 0x69A]
	0x0343DC58 LDR X21, [X21 + 0x6B8]
	0x0343DC5C MOV X19, X1
	0x0343DC60 MOV X20, X0
	0x0343DC64 TBNZ X8, 0x0, 0x343DC88
	0x0343DC68 ADRP X0, 0xCF2000
	0x0343DC6C LDR X0, [X0 + 0x580]
	0x0343DC70 BL 0x1C16CF4
	0x0343DC74 ADRP X0, 0xCF1000
	0x0343DC78 LDR X0, [X0 + 0x6B8]
	0x0343DC7C BL 0x1C16CF4
	0x0343DC80 MOVZ W8, 0x1
	0x0343DC84 STRB W8, [X22 + 0x69A]
	0x0343DC88 LDR X0, [X21]
	0x0343DC8C ADRP X21, 0xCF2000
	0x0343DC90 LDR W8, [X0 + 0xE0]
	0x0343DC94 LDR X21, [X21 + 0x580]
	0x0343DC98 CBNZ W8, 0x343DCA0
	0x0343DC9C BL 0x1C16DFC
	0x0343DCA0 LDR X2, [X21]
	0x0343DCA4 ADD X0, X20, 0x8
	0x0343DCA8 MOV X1, X19
	0x0343DCAC LDP X20, X19, [X31 + 0x20]
	0x0343DCB0 LDP X22, X21, [X31 + 0x10]
	0x0343DCB4 LDR X30, [X31], #0x30
	0x0343DCB8 B 0x2632228
	0x0343DCBC SUB X31, X31, 0x70
	0x0343DCC0 STR X30, [X31 + 0x10]
	0x0343DCC4 STP X28, X27, [X31 + 0x20]
	0x0343DCC8 STP X26, X25, [X31 + 0x30]
	0x0343DCCC STP X24, X23, [X31 + 0x40]
	0x0343DCD0 STP X22, X21, [X31 + 0x50]
	0x0343DCD4 STP X20, X19, [X31 + 0x60]
	0x0343DCD8 ADRP X20, 0xFA0000
	0x0343DCDC LDRB W8, [X20 + 0x69B]
	0x0343DCE0 MOV X19, X0
	0x0343DCE4 TBNZ X8, 0x0, 0x343DDE0
	0x0343DCE8 ADRP X0, 0xCF2000
	0x0343DCEC LDR X0, [X0 + 0x588]
	0x0343DCF0 BL 0x1C16CF4
	0x0343DCF4 ADRP X0, 0xCF2000
	0x0343DCF8 LDR X0, [X0 + 0x528]
	0x0343DCFC BL 0x1C16CF4
	0x0343DD00 ADRP X0, 0xCF1000
	0x0343DD04 LDR X0, [X0 + 0x5F8]
	0x0343DD08 BL 0x1C16CF4
	0x0343DD0C ADRP X0, 0xCBF000
	0x0343DD10 LDR X0, [X0 + 0x8D8]
	0x0343DD14 BL 0x1C16CF4
	0x0343DD18 ADRP X0, 0xCB7000
	0x0343DD1C LDR X0, [X0 + 0x810]
	0x0343DD20 BL 0x1C16CF4
	0x0343DD24 ADRP X0, 0xCB7000
	0x0343DD28 LDR X0, [X0 + 0x6C0]
	0x0343DD2C BL 0x1C16CF4
	0x0343DD30 ADRP X0, 0xCB7000
	0x0343DD34 LDR X0, [X0 + 0x6D0]
	0x0343DD38 BL 0x1C16CF4
	0x0343DD3C ADRP X0, 0xCF1000
	0x0343DD40 LDR X0, [X0 + 0x7B8]
	0x0343DD44 BL 0x1C16CF4
	0x0343DD48 ADRP X0, 0xCF2000
	0x0343DD4C LDR X0, [X0 + 0x530]
	0x0343DD50 BL 0x1C16CF4
	0x0343DD54 ADRP X0, 0xCB9000
	0x0343DD58 LDR X0, [X0 + 0x1E0]
	0x0343DD5C BL 0x1C16CF4
	0x0343DD60 ADRP X0, 0xCB9000
	0x0343DD64 LDR X0, [X0 + 0x1F0]
	0x0343DD68 BL 0x1C16CF4
	0x0343DD6C ADRP X0, 0xCB9000
	0x0343DD70 LDR X0, [X0 + 0x1F8]
	0x0343DD74 BL 0x1C16CF4
	0x0343DD78 ADRP X0, 0xCBF000
	0x0343DD7C LDR X0, [X0 + 0x3A0]
	0x0343DD80 BL 0x1C16CF4
	0x0343DD84 ADRP X0, 0xCB8000
	0x0343DD88 LDR X0, [X0 + 0xA28]
	0x0343DD8C BL 0x1C16CF4
	0x0343DD90 ADRP X0, 0xCDF000
	0x0343DD94 LDR X0, [X0 + 0x4D8]
	0x0343DD98 BL 0x1C16CF4
	0x0343DD9C ADRP X0, 0xCF1000
	0x0343DDA0 LDR X0, [X0 + 0x7D0]
	0x0343DDA4 BL 0x1C16CF4
	0x0343DDA8 ADRP X0, 0xCF1000
	0x0343DDAC LDR X0, [X0 + 0x7D8]
	0x0343DDB0 BL 0x1C16CF4
	0x0343DDB4 ADRP X0, 0xCF1000
	0x0343DDB8 LDR X0, [X0 + 0xC70]
	0x0343DDBC BL 0x1C16CF4
	0x0343DDC0 ADRP X0, 0xCB6000
	0x0343DDC4 LDR X0, [X0 + 0x988]
	0x0343DDC8 BL 0x1C16CF4
	0x0343DDCC ADRP X0, 0xCF1000
	0x0343DDD0 LDR X0, [X0 + 0xC78]
	0x0343DDD4 BL 0x1C16CF4
	0x0343DDD8 MOVZ W8, 0x1
	0x0343DDDC STRB W8, [X20 + 0x69B]
	0x0343DDE0 STR X31, [X31 + 0x18]
	0x0343DDE4 ADRP X28, 0xCF1000
	0x0343DDE8 LDR W8, [X19]
	0x0343DDEC LDR X28, [X28 + 0x5F8]
	0x0343DDF0 CBZ W8, 0x343E020
	0x0343DDF4 LDR X21, [X19 + 0x20]
	0x0343DDF8 CBZ X21, 0x343E158
	0x0343DDFC LDR X8, [X19 + 0x28]
	0x0343DE00 CBZ X8, 0x343E1A0
	0x0343DE04 ADRP X8, 0xCB8000
	0x0343DE08 LDR X8, [X8 + 0xA28]
	0x0343DE0C LDR X0, [X8]
	0x0343DE10 ADRP X8, 0xCF1000
	0x0343DE14 LDR X8, [X8 + 0xC70]
	0x0343DE18 LDR X25, [X19 + 0x30]
	0x0343DE1C LDR W9, [X0 + 0xE0]
	0x0343DE20 LDR X20, [X8]
	0x0343DE24 CBNZ W9, 0x343DE2C
	0x0343DE28 BL 0x1C16DFC
	0x0343DE2C MOV X0, X21
	0x0343DE30 MOV X1, X31
	0x0343DE34 BL 0x3624D20
	0x0343DE38 CBZ X20, 0x343E1E8
	0x0343DE3C ADRP X8, 0xCF1000
	0x0343DE40 LDR X8, [X8 + 0xC78]
	0x0343DE44 MOV X2, X0
	0x0343DE48 LDR X1, [X8]
	0x0343DE4C MOV X0, X20
	0x0343DE50 MOV X3, X31
	0x0343DE54 BL 0x32293BC
	0x0343DE58 CBZ X25, 0x343E1EC
	0x0343DE5C MOV X21, X0
	0x0343DE60 LDR X0, [X25 + 0x20]
	0x0343DE64 CBZ X0, 0x343E1F0
	0x0343DE68 ADRP X8, 0xCB6000
	0x0343DE6C LDR X8, [X8 + 0x988]
	0x0343DE70 LDR X20, [X8]
	0x0343DE74 MOV X1, X31
	0x0343DE78 BL 0x361B448
	0x0343DE7C ADRP X8, 0xCBF000
	0x0343DE80 LDR X8, [X8 + 0x8D8]
	0x0343DE84 MOV X22, X0
	0x0343DE88 LDR X0, [X8]
	0x0343DE8C MOVZ W1, 0x1
	0x0343DE90 BL 0x1C16D6C
	0x0343DE94 MOV X1, X0
	0x0343DE98 CBZ X1, 0x343E1F4
	0x0343DE9C LDR W8, [X1 + 0x18]
	0x0343DEA0 CBZ W8, 0x343E1F8
	0x0343DEA4 MOVZ W8, 0x2F
	0x0343DEA8 STRH W8, [X1 + 0x20]
	0x0343DEAC CBZ X22, 0x343E1FC
	0x0343DEB0 MOV X0, X22
	0x0343DEB4 MOV X2, X31
	0x0343DEB8 BL 0x322BC58
	0x0343DEBC MOV X1, X21
	0x0343DEC0 MOV X2, X31
	0x0343DEC4 BL 0x321B938
	0x0343DEC8 ADRP X8, 0xCBF000
	0x0343DECC LDR X8, [X8 + 0x3A0]
	0x0343DED0 MOV X22, X0
	0x0343DED4 LDR X23, [X25 + 0x20]
	0x0343DED8 LDR X0, [X8]
	0x0343DEDC BL 0x1C16F10
	0x0343DEE0 MOV X21, X0
	0x0343DEE4 MOV X1, X23
	0x0343DEE8 MOV X2, X31
	0x0343DEEC BL 0x36281F8
	0x0343DEF0 CBZ X21, 0x343E200
	0x0343DEF4 MOV X0, X21
	0x0343DEF8 MOV X1, X22
	0x0343DEFC MOV X2, X31
	0x0343DF00 BL 0x36288CC
	0x0343DF04 MOV X0, X21
	0x0343DF08 MOV X1, X20
	0x0343DF0C MOV X2, X31
	0x0343DF10 BL 0x3628980

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA1000
	014 Move W8, [X20+1685]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xCF3000
	021 Move X0, [X0+1288]
	022 Call 0x1C17CF4
	023 Move X0, 0xCF3000
	024 Move X0, [X0+1240]
	025 Call 0x1C17CF4
	026 Move X0, 0xCF2000
	027 Move X0, [X0+1416]
	028 Call 0x1C17CF4
	029 Move X0, 0xCC0000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCB8000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB8000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB8000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCF2000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCF3000
	045 Move X0, [X0+1248]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBA000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCBA000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCBA000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC0000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCE0000
	060 Move X0, [X0+1240]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF2000
	063 Move X0, [X0+2000]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF2000
	066 Move X0, [X0+2008]
	067 Call 0x1C17CF4
	068 Move X0, 0xCB7000
	069 Move X0, [X0+2440]
	070 Call 0x1C17CF4
	071 Move X0, 0xCF3000
	072 Move X0, [X0+1296]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1685], W8
	076 Move [X31+24], X31
	077 Move X28, 0xCF2000
	078 Move W8, [X19]
	079 Move X28, [X28+1416]
	080 Compare W8, 0
	081 JumpIfEqual {210}
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {302}
	085 Move X25, [X19+40]
	086 Compare X25, 0
	087 JumpIfEqual {320}
	088 Move X0, [X25+32]
	089 Compare X0, 0
	090 JumpIfEqual {321}
	091 Move X8, 0xCF3000
	092 Move X9, 0xCB7000
	093 Move X8, [X8+1296]
	094 Move X9, [X9+2440]
	095 Move X21, [X8]
	096 Move X20, [X9]
	097 Move X1, X31
	098 Call Uri.get_AbsolutePath, X0
	099 Move X8, 0xCC0000
	100 Move X8, [X8+2264]
	101 Move X22, X0
	102 Move X0, [X8]
	103 Move W1, 1
	104 Call 0x1C17D6C
	105 Move X1, X0
	106 Compare X1, 0
	107 JumpIfEqual {322}
	108 Move W8, [X1+24]
	109 Compare W8, 0
	110 JumpIfEqual {323}
	111 Move W8, 47
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Compare X22, 0
	114 JumpIfEqual {324}
	115 Move X0, X22
	116 Move X2, X31
	117 Call String.TrimEnd, X0, X1
	118 Move X1, X21
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X8, 0xCC0000
	122 Move X8, [X8+928]
	123 Move X22, X0
	124 Move X23, [X25+32]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move X1, X23
	129 Move X2, X31
	130 Call UriBuilder..ctor, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {325}
	133 Move X0, X21
	134 Move X1, X22
	135 Move X2, X31
	136 Call UriBuilder.set_Path, X0, X1
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Call UriBuilder.set_Query, X0, X1
	141 Move X0, X21
	142 Move X1, X31
	143 Call UriBuilder.get_Uri, X0
	144 Move X8, 0xCE0000
	145 Move X9, 0xCB8000
	146 Move X8, [X8+1240]
	147 Move X9, [X9+1744]
	148 Move X20, X0
	149 Move X21, [X8]
	150 Move X0, [X9]
	151 Call 0x1C17F10
	152 Move X8, 0xCB8000
	153 Move X8, [X8+1728]
	154 Move X22, X0
	155 Move X1, [X8]
	156 Call Dictionary`2<Object, Object>..ctor, X0
	157 Move X8, 0xCF2000
	158 Move X8, [X8+2008]
	159 Move X1, [X19+48]
	160 Move X0, [X8]
	161 Move X2, X31
	162 Call String.Concat, X0, X1
	163 Compare X22, 0
	164 JumpIfEqual {326}
	165 Move X8, 0xCF2000
	166 Move X8, [X8+2000]
	167 Move X9, 0xCB8000
	168 Move X9, [X9+2064]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X22
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X19+32]
	175 Move X1, X31
	176 Call JsonWriter.ToJson, X0
	177 Move X23, X0
	178 Move X0, X31
	179 Call Encoding.get_UTF8
	180 Compare X0, 0
	181 JumpIfEqual {327}
	182 Move X8, [X0]
	183 Move X9, [X8+616]
	184 Move X2, [X8+624]
	185 Move X1, X23
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X24, [X25+16]
	188 Compare X24, 0
	189 JumpIfEqual {328}
	190 Move X10, 0xCF2000
	191 Move X10, [X10+1976]
	192 Move X8, [X24]
	193 Move W26, [X25+24]
	194 Move X27, [X19+56]
	195 Move X25, [X19+64]
	196 Move X1, [X10]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X23, X0
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 3
	208 Move X0, X24
	209 Call 0x1C5D788
	210 Move X8, [X19+72]
	211 Move TEMP, 0
	212 Not TEMP
	213 Move W9, TEMP
	214 Move [X31+24], X8
	215 Move [X19+72], X31
	216 Move [X19], W9
	217 Move W9, [X10]
	218 Add W9, W9, 3
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X9, [X0+8]
	223 Move X0, X24
	224 Move X1, X21
	225 Move X2, X20
	226 Move X3, X22
	227 Move X4, X23
	228 Move W5, W26
	229 Move X6, X27
	230 Move X7, X25
	231 Move [X31], X9
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X0, 0
	234 JumpIfEqual {329}
	235 Move X8, 0xCBA000
	236 Move X8, [X8+504]
	237 Move X1, [X8]
	238 Call Task`1<Object>.GetAwaiter, X0
	239 Move X8, 0xCBA000
	240 Move X8, [X8+496]
	241 Move [X31+24], X0
	242 Move X1, [X8]
	243 Add X0, X31, 24
	244 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {274}
	249 Move X8, 0xCBA000
	250 Move X8, [X8+480]
	251 Add X0, X31, 24
	252 Move X1, [X8]
	253 Call TaskAwaiter`1<Object>.GetResult, X0
	254 Move X8, 0xCF3000
	255 Move X8, [X8+1248]
	256 Move X1, [X8]
	257 Call JsonParser.FromJson, X0
	258 Move TEMP, 1
	259 Not TEMP
	260 Move W8, TEMP
	261 Move [X19+8], W8
	262 Move X20, X0
	263 Move X0, [X28]
	264 Move X21, 0xCF3000
	265 Move W8, [X0+224]
	266 Move X21, [X21+1240]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X2, [X21]
	271 Move X0, X19
	272 Move X1, X20
	273 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	274 Move [X19], W31
	275 Move X8, [X31+24]
	276 Move [X19+72], X8
	277 Move X0, [X28]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, 0xCF3000
	283 Move X8, [X8+1288]
	284 Add X0, X19, 8
	285 Move X3, [X8]
	286 Add X1, X31, 24
	287 Move X2, X19
	288 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	289 Move X20, [X31+96]
	290 Move X19, [X31+104]
	291 Move X22, [X31+80]
	292 Move X21, [X31+88]
	293 Move X24, [X31+64]
	294 Move X23, [X31+72]
	295 Move X26, [X31+48]
	296 Move X25, [X31+56]
	297 Move X28, [X31+32]
	298 Move X27, [X31+40]
	299 Move X30, [X31+16]
	300 Add X31, X31, 112
	301 Return 
	302 Move X0, 0xCBF000
	303 Move X0, [X0+1400]
	304 Call 0x1C17D08
	305 Call 0x1C17F10
	306 Move X20, X0
	307 Move X0, 0xCF2000
	308 Move X0, [X0+3016]
	309 Call 0x1C17D08
	310 Move X1, X0
	311 Move X0, X20
	312 Move X2, X31
	313 Call ArgumentException..ctor, X0, X1
	314 Move X0, 0xCF3000
	315 Move X0, [X0+1304]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X0, X20
	319 Call 0x1C17DEC
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F28
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X20, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X20
	333 Call 0x3EB2AD0
	334 Move X20, X0
	335 Move X0, 0xCB7000
	336 Move X0, [X0+2000]
	337 Call 0x1C17D08
	338 Move X8, [X20]
	339 Move X1, [X8]
	340 Call 0x1C18270
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {365}
	345 Move X20, [X20]
	346 Call 0x3EB2AE0
	347 Move TEMP, 1
	348 Not TEMP
	349 Move W8, TEMP
	350 Move [X19+8], W8
	351 Move X0, 0xCF2000
	352 Move X0, [X0+1416]
	353 Call 0x1C17D08
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, 0xCF3000
	359 Move X0, [X0+1272]
	360 Call 0x1C17D08
	361 Move X2, X0
	362 Move X0, X19
	363 Move X1, X20
	364 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	365 Move W0, 8
	366 Call 0x3EB2AF0
	367 Move X8, [X20]
	368 Move [X0], X8
	369 Move X1, 0xA78000
	370 Add X1, X1, 3672
	371 Move X2, X31
	372 Call 0x3EB2B00
	373 Move X20, X0
	374 Call 0x3EB2AE0
	375 Move X0, X20
	376 Call 0x1D2D690
	377 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343DF14 MOV X0, X21
	0x0343DF18 MOV X1, X31
	0x0343DF1C BL 0x3628A38
	0x0343DF20 ADRP X8, 0xCDF000
	0x0343DF24 ADRP X9, 0xCB7000
	0x0343DF28 LDR X8, [X8 + 0x4D8]
	0x0343DF2C LDR X9, [X9 + 0x6D0]
	0x0343DF30 MOV X20, X0
	0x0343DF34 LDR X21, [X8]
	0x0343DF38 LDR X0, [X9]
	0x0343DF3C BL 0x1C16F10
	0x0343DF40 ADRP X8, 0xCB7000
	0x0343DF44 LDR X8, [X8 + 0x6C0]
	0x0343DF48 MOV X22, X0
	0x0343DF4C LDR X1, [X8]
	0x0343DF50 BL 0x2AA4804
	0x0343DF54 ADRP X8, 0xCF1000
	0x0343DF58 LDR X8, [X8 + 0x7D8]
	0x0343DF5C LDR X1, [X19 + 0x38]
	0x0343DF60 LDR X0, [X8]
	0x0343DF64 MOV X2, X31
	0x0343DF68 BL 0x321B938
	0x0343DF6C CBZ X22, 0x343E204
	0x0343DF70 ADRP X8, 0xCF1000
	0x0343DF74 LDR X8, [X8 + 0x7D0]
	0x0343DF78 ADRP X9, 0xCB7000
	0x0343DF7C LDR X9, [X9 + 0x810]
	0x0343DF80 MOV X2, X0
	0x0343DF84 LDR X1, [X8]
	0x0343DF88 LDR X3, [X9]
	0x0343DF8C MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFA1000
	007 Move X21, 0xCF2000
	008 Move W8, [X22+1686]
	009 Move X21, [X21+1416]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCF3000
	017 Move X0, [X0+1280]
	018 Call 0x1C17CF4
	019 Move X0, 0xCF2000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1686], W8
	024 Move X0, [X21]
	025 Move X21, 0xCF3000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1280]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

