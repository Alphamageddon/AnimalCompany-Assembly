Type: Nakama.Client/<ListFriendsAsync>d__83

Method: System.Void MoveNext()

Disassembly:
	0x0345D120 LDP X8, X1, [X0]
	0x0345D124 MOV X0, X22
	0x0345D128 BLR X8
	0x0345D12C MOV X22, X0
	0x0345D130 CBZ X0, 0x345CECC
	0x0345D134 LDR X9, [X22]
	0x0345D138 LDR X8, [X20]
	0x0345D13C LDRB W11, [X9 + 0x130]
	0x0345D140 LDRB W10, [X8 + 0x130]
	0x0345D144 CMP W11, W10
	0x0345D148 B.CC 0x345CECC
	0x0345D14C LDR X9, [X9 + 0xC8]
	0x0345D150 ADD X9, X9, X10, 0x3, LSL
	0x0345D154 LDUR X9, [X9 - 0x8]
	0x0345D158 CMP X9, X8
	0x0345D15C B.NE 0x345CECC
	0x0345D160 LDR X8, [X19 + 0x60]
	0x0345D164 CBZ X8, 0x345D2C8
	0x0345D168 LDR X23, [X8 + 0x18]
	0x0345D16C CBZ X23, 0x345D2CC
	0x0345D170 LDR X8, [X23]
	0x0345D174 LDR X1, [X28]
	0x0345D178 LDRH W9, [X8 + 0x12E]
	0x0345D17C CBZ X9, 0x345D1A0
	0x0345D180 LDR X10, [X8 + 0xB0]
	0x0345D184 ADD X10, X10, 0x8
	0x0345D188 LDUR X11, [X10 - 0x8]
	0x0345D18C CMP X11, X1
	0x0345D190 B.EQ 0x345D1B0
	0x0345D194 SUBS X9, X9, 0x1
	0x0345D198 ADD X10, X10, 0x10
	0x0345D19C B.NE 0x345D188
	0x0345D1A0 MOVZ W2, 0x9
	0x0345D1A4 MOV X0, X23
	0x0345D1A8 BL 0x1C5C788
	0x0345D1AC B 0x345D1C0
	0x0345D1B0 LDR W9, [X10]
	0x0345D1B4 ADD W9, W9, 0x9
	0x0345D1B8 ADD X8, X8, W9, 0x4, SXTW
	0x0345D1BC ADD X0, X8, 0x138
	0x0345D1C0 LDP X8, X1, [X0]
	0x0345D1C4 MOV X0, X23
	0x0345D1C8 BLR X8
	0x0345D1CC STR X0, [X22 + 0x98]
	0x0345D1D0 B 0x345CECC
	0x0345D1D4 LDR W25, [X31 + 0x14]
	0x0345D1D8 MOV X24, X31
	0x0345D1DC MOVZ W20, 0xB
	0x0345D1E0 TBZ X25, 0x1F, 0x345D248
	0x0345D1E4 CBZ X21, 0x345D248
	0x0345D1E8 ADRP X10, 0xC96000
	0x0345D1EC LDR X8, [X21]
	0x0345D1F0 LDR X10, [X10 + 0xE00]
	0x0345D1F4 LDRH W9, [X8 + 0x12E]
	0x0345D1F8 LDR X1, [X10]
	0x0345D1FC CBZ X9, 0x345D220
	0x0345D200 LDR X10, [X8 + 0xB0]
	0x0345D204 ADD X10, X10, 0x8
	0x0345D208 LDUR X11, [X10 - 0x8]
	0x0345D20C CMP X11, X1
	0x0345D210 B.EQ 0x345D230
	0x0345D214 SUBS X9, X9, 0x1
	0x0345D218 ADD X10, X10, 0x10
	0x0345D21C B.NE 0x345D208
	0x0345D220 MOV X0, X21
	0x0345D224 MOV W2, W31
	0x0345D228 BL 0x1C5C788
	0x0345D22C B 0x345D23C
	0x0345D230 LDRSW X9, [X10]
	0x0345D234 ADD X8, X8, X9, 0x4, LSL
	0x0345D238 ADD X0, X8, 0x138
	0x0345D23C LDP X8, X1, [X0]
	0x0345D240 MOV X0, X21
	0x0345D244 BLR X8
	0x0345D248 CBNZ X24, 0x345D2DC
	0x0345D24C CBZ W20, 0x345D258
	0x0345D250 CMP W20, 0xB
	0x0345D254 B.NE 0x345D294
	0x0345D258 MOVN W8, 0x1
	0x0345D25C STR X31, [X19 + 0x60]
	0x0345D260 STR W8, [X19], #0x8
	0x0345D264 ADRP X8, 0xCD1000
	0x0345D268 LDR X8, [X8 + 0x510]
	0x0345D26C LDR X0, [X8]
	0x0345D270 LDR W8, [X0 + 0xE0]
	0x0345D274 CBNZ W8, 0x345D27C
	0x0345D278 BL 0x1C16DFC
	0x0345D27C ADRP X8, 0xCD1000
	0x0345D280 LDR X8, [X8 + 0xF80]
	0x0345D284 LDR X1, [X31 + 0x8]
	0x0345D288 MOV X0, X19
	0x0345D28C LDR X2, [X8]
	0x0345D290 BL 0x26322B0
	0x0345D294 LDP X20, X19, [X31 + 0x90]
	0x0345D298 LDP X22, X21, [X31 + 0x80]
	0x0345D29C LDP X24, X23, [X31 + 0x70]
	0x0345D2A0 LDP X26, X25, [X31 + 0x60]
	0x0345D2A4 LDP X28, X27, [X31 + 0x50]
	0x0345D2A8 LDP X29, X30, [X31 + 0x40]
	0x0345D2AC ADD X31, X31, 0xA0
	0x0345D2B0 RET
	0x0345D2B4 BL 0x1C16F20
	0x0345D2B8 BL 0x1C16F20
	0x0345D2BC BL 0x1C16F20
	0x0345D2C0 BL 0x1C16F20
	0x0345D2C4 BL 0x1C16F20
	0x0345D2C8 BL 0x1C16F20
	0x0345D2CC BL 0x1C16F20
	0x0345D2D0 BL 0x1C16F20
	0x0345D2D4 BL 0x1C16F20
	0x0345D2D8 BL 0x1C16F20
	0x0345D2DC MOV X0, X24
	0x0345D2E0 BL 0x1C16F18
	0x0345D2E4 BL 0x1C16F20
	0x0345D2E8 BL 0x1C16F20
	0x0345D2EC BL 0x1C16F20
	0x0345D2F0 BL 0x1C16F20
	0x0345D2F4 BL 0x1C16F20
	0x0345D2F8 BL 0x1C16F20
	0x0345D2FC BL 0x1C16F20
	0x0345D300 BL 0x1C16F20
	0x0345D304 BL 0x1C16F20
	0x0345D308 BL 0x1C16F20
	0x0345D30C BL 0x1C16F20
	0x0345D310 BL 0x1C16F20
	0x0345D314 BL 0x1C16F20
	0x0345D318 B 0x345D3AC
	0x0345D31C B 0x345D3AC
	0x0345D320 B 0x345D3AC
	0x0345D324 B 0x345D3AC
	0x0345D328 B 0x345D3AC
	0x0345D32C B 0x345D3AC
	0x0345D330 B 0x345D3AC
	0x0345D334 B 0x345D3AC
	0x0345D338 B 0x345D3AC
	0x0345D33C B 0x345D3AC
	0x0345D340 B 0x345D3AC
	0x0345D344 B 0x345D3AC
	0x0345D348 B 0x345D3AC
	0x0345D34C B 0x345D3AC
	0x0345D350 B 0x345D3AC
	0x0345D354 B 0x345D3AC
	0x0345D358 B 0x345D3AC
	0x0345D35C B 0x345D3AC
	0x0345D360 B 0x345D3AC
	0x0345D364 B 0x345D3AC
	0x0345D368 B 0x345D3AC
	0x0345D36C B 0x345D3AC
	0x0345D370 B 0x345D3AC
	0x0345D374 B 0x345D3AC
	0x0345D378 B 0x345D3AC
	0x0345D37C B 0x345D3AC
	0x0345D380 B 0x345D3E8
	0x0345D384 B 0x345D3AC
	0x0345D388 B 0x345D3AC
	0x0345D38C B 0x345D3AC
	0x0345D390 B 0x345D3AC
	0x0345D394 B 0x345D3E8
	0x0345D398 B 0x345D3E8
	0x0345D39C B 0x345D3AC
	0x0345D3A0 B 0x345D3AC
	0x0345D3A4 B 0x345D3AC
	0x0345D3A8 B 0x345D3AC
	0x0345D3AC MOV X22, X1
	0x0345D3B0 MOV X23, X0
	0x0345D3B4 B 0x345D488
	0x0345D3B8 B 0x345D3E8
	0x0345D3BC B 0x345D3E8
	0x0345D3C0 B 0x345D3E8
	0x0345D3C4 B 0x345D3E8
	0x0345D3C8 B 0x345D3E8
	0x0345D3CC B 0x345D3E8
	0x0345D3D0 B 0x345D3E8
	0x0345D3D4 B 0x345D3E8
	0x0345D3D8 B 0x345D3E8
	0x0345D3DC B 0x345D3E8
	0x0345D3E0 B 0x345D3E8
	0x0345D3E4 B 0x345D3E8
	0x0345D3E8 LDR W25, [X31 + 0x14]
	0x0345D3EC MOV X22, X1
	0x0345D3F0 MOV X23, X0
	0x0345D3F4 CMP W22, 0x1
	0x0345D3F8 B.NE 0x345D418
	0x0345D3FC MOV X0, X23
	0x0345D400 BL 0x3EB1AD0
	0x0345D404 LDR X24, [X0]
	0x0345D408 BL 0x3EB1AE0
	0x0345D40C MOV W20, W31
	0x0345D410 TBNZ X25, 0x1F, 0x345D1E4
	0x0345D414 B 0x345D248
	0x0345D418 MOV X24, X31
	0x0345D41C TBZ X25, 0x1F, 0x345D484
	0x0345D420 CBZ X21, 0x345D484
	0x0345D424 ADRP X10, 0xC96000
	0x0345D428 LDR X8, [X21]
	0x0345D42C LDR X10, [X10 + 0xE00]
	0x0345D430 LDRH W9, [X8 + 0x12E]
	0x0345D434 LDR X1, [X10]
	0x0345D438 CBZ X9, 0x345D45C
	0x0345D43C LDR X10, [X8 + 0xB0]
	0x0345D440 ADD X10, X10, 0x8
	0x0345D444 LDUR X11, [X10 - 0x8]
	0x0345D448 CMP X11, X1
	0x0345D44C B.EQ 0x345D46C
	0x0345D450 SUBS X9, X9, 0x1
	0x0345D454 ADD X10, X10, 0x10
	0x0345D458 B.NE 0x345D444
	0x0345D45C MOV X0, X21
	0x0345D460 MOV W2, W31
	0x0345D464 BL 0x1C5C788
	0x0345D468 B 0x345D478
	0x0345D46C LDRSW X9, [X10]
	0x0345D470 ADD X8, X8, X9, 0x4, LSL
	0x0345D474 ADD X0, X8, 0x138
	0x0345D478 LDP X8, X1, [X0]
	0x0345D47C MOV X0, X21
	0x0345D480 BLR X8
	0x0345D484 CBNZ X24, 0x345D524
	0x0345D488 CMP W22, 0x1
	0x0345D48C B.NE 0x345D544
	0x0345D490 MOV X0, X23
	0x0345D494 BL 0x3EB1AD0
	0x0345D498 MOV X20, X0
	0x0345D49C ADRP X0, 0xC96000
	0x0345D4A0 LDR X0, [X0 + 0x7D0]
	0x0345D4A4 BL 0x1C16D08
	0x0345D4A8 LDR X8, [X20]
	0x0345D4AC LDR X1, [X8]
	0x0345D4B0 BL 0x1C17270
	0x0345D4B4 TBZ X0, 0x0, 0x345D504
	0x0345D4B8 LDR X20, [X20]
	0x0345D4BC BL 0x3EB1AE0
	0x0345D4C0 MOVN W8, 0x1
	0x0345D4C4 STR X31, [X19 + 0x60]
	0x0345D4C8 STR W8, [X19], #0x8
	0x0345D4CC ADRP X0, 0xCD1000
	0x0345D4D0 LDR X0, [X0 + 0x510]
	0x0345D4D4 BL 0x1C16D08
	0x0345D4D8 LDR W8, [X0 + 0xE0]
	0x0345D4DC CBNZ W8, 0x345D4E4
	0x0345D4E0 BL 0x1C16DFC
	0x0345D4E4 ADRP X0, 0xCD1000
	0x0345D4E8 LDR X0, [X0 + 0xFA0]
	0x0345D4EC BL 0x1C16D08
	0x0345D4F0 MOV X2, X0
	0x0345D4F4 MOV X0, X19
	0x0345D4F8 MOV X1, X20
	0x0345D4FC BL 0x26324C8
	0x0345D500 B 0x345D294
	0x0345D504 MOVZ W0, 0x8
	0x0345D508 BL 0x3EB1AF0
	0x0345D50C LDR X8, [X20]
	0x0345D510 STR X8, [X0]
	0x0345D514 ADRP X1, 0xA57000
	0x0345D518 ADD X1, X1, 0xE58
	0x0345D51C MOV X2, X31
	0x0345D520 BL 0x3EB1B00
	0x0345D524 MOV X0, X24
	0x0345D528 BL 0x1C16F18
	0x0345D52C MOV X22, X1
	0x0345D530 MOV X23, X0
	0x0345D534 TBNZ X25, 0x1F, 0x345D420
	0x0345D538 B 0x345D484
	0x0345D53C MOV X23, X0
	0x0345D540 BL 0x3EB1AE0
	0x0345D544 MOV X0, X23
	0x0345D548 BL 0x1D2C690
	0x0345D54C BL 0x1990590
	0x0345D550 STR X30, [X31 - 0x30]!
	0x0345D554 STP X22, X21, [X31 + 0x10]
	0x0345D558 STP X20, X19, [X31 + 0x20]
	0x0345D55C ADRP X22, 0xF80000
	0x0345D560 ADRP X21, 0xCD1000
	0x0345D564 LDRB W8, [X22 + 0x7A6]
	0x0345D568 LDR X21, [X21 + 0x510]
	0x0345D56C MOV X19, X1
	0x0345D570 MOV X20, X0
	0x0345D574 TBNZ X8, 0x0, 0x345D598
	0x0345D578 ADRP X0, 0xCD1000
	0x0345D57C LDR X0, [X0 + 0xFA8]
	0x0345D580 BL 0x1C16CF4
	0x0345D584 ADRP X0, 0xCD1000
	0x0345D588 LDR X0, [X0 + 0x510]
	0x0345D58C BL 0x1C16CF4
	0x0345D590 MOVZ W8, 0x1
	0x0345D594 STRB W8, [X22 + 0x7A6]
	0x0345D598 LDR X0, [X21]
	0x0345D59C ADRP X21, 0xCD1000
	0x0345D5A0 LDR W8, [X0 + 0xE0]
	0x0345D5A4 LDR X21, [X21 + 0xFA8]
	0x0345D5A8 CBNZ W8, 0x345D5B0
	0x0345D5AC BL 0x1C16DFC
	0x0345D5B0 LDR X2, [X21]
	0x0345D5B4 ADD X0, X20, 0x8
	0x0345D5B8 MOV X1, X19
	0x0345D5BC LDP X20, X19, [X31 + 0x20]
	0x0345D5C0 LDP X22, X21, [X31 + 0x10]
	0x0345D5C4 LDR X30, [X31], #0x30
	0x0345D5C8 B 0x2632228
	0x0345D5CC SUB X31, X31, 0x70
	0x0345D5D0 STP X30, X25, [X31 + 0x30]
	0x0345D5D4 STP X24, X23, [X31 + 0x40]
	0x0345D5D8 STP X22, X21, [X31 + 0x50]
	0x0345D5DC STP X20, X19, [X31 + 0x60]
	0x0345D5E0 ADRP X20, 0xF80000
	0x0345D5E4 LDRB W8, [X20 + 0x7A7]
	0x0345D5E8 MOV X19, X0
	0x0345D5EC TBNZ X8, 0x0, 0x345D6DC
	0x0345D5F0 ADRP X0, 0xCD3000
	0x0345D5F4 LDR X0, [X0 + 0x98]
	0x0345D5F8 BL 0x1C16CF4
	0x0345D5FC ADRP X0, 0xCD3000
	0x0345D600 LDR X0, [X0 + 0xA0]
	0x0345D604 BL 0x1C16CF4
	0x0345D608 ADRP X0, 0xCD1000
	0x0345D60C LDR X0, [X0 + 0xFB8]
	0x0345D610 BL 0x1C16CF4
	0x0345D614 ADRP X0, 0xCD1000
	0x0345D618 LDR X0, [X0 + 0x488]
	0x0345D61C BL 0x1C16CF4
	0x0345D620 ADRP X0, 0xC98000
	0x0345D624 LDR X0, [X0 + 0xA10]
	0x0345D628 BL 0x1C16CF4
	0x0345D62C ADRP X0, 0xC97000
	0x0345D630 LDR X0, [X0 + 0x9F0]
	0x0345D634 BL 0x1C16CF4
	0x0345D638 ADRP X0, 0xCD3000
	0x0345D63C LDR X0, [X0 + 0xA8]
	0x0345D640 BL 0x1C16CF4
	0x0345D644 ADRP X0, 0xC97000
	0x0345D648 LDR X0, [X0 + 0x818]
	0x0345D64C BL 0x1C16CF4
	0x0345D650 ADRP X0, 0xCD2000
	0x0345D654 LDR X0, [X0 + 0x7C8]
	0x0345D658 BL 0x1C16CF4
	0x0345D65C ADRP X0, 0xCD2000
	0x0345D660 LDR X0, [X0 + 0x7D0]
	0x0345D664 BL 0x1C16CF4
	0x0345D668 ADRP X0, 0xCD3000
	0x0345D66C LDR X0, [X0 + 0xB0]
	0x0345D670 BL 0x1C16CF4
	0x0345D674 ADRP X0, 0xC97000
	0x0345D678 LDR X0, [X0 + 0x830]
	0x0345D67C BL 0x1C16CF4
	0x0345D680 ADRP X0, 0xCD3000
	0x0345D684 LDR X0, [X0 + 0xB8]
	0x0345D688 BL 0x1C16CF4
	0x0345D68C ADRP X0, 0xC97000
	0x0345D690 LDR X0, [X0 + 0x838]
	0x0345D694 BL 0x1C16CF4
	0x0345D698 ADRP X0, 0xCD3000
	0x0345D69C LDR X0, [X0 + 0xC0]
	0x0345D6A0 BL 0x1C16CF4
	0x0345D6A4 ADRP X0, 0xC97000
	0x0345D6A8 LDR X0, [X0 + 0x840]
	0x0345D6AC BL 0x1C16CF4
	0x0345D6B0 ADRP X0, 0xCD3000
	0x0345D6B4 LDR X0, [X0 + 0xC8]
	0x0345D6B8 BL 0x1C16CF4
	0x0345D6BC ADRP X0, 0xCD3000
	0x0345D6C0 LDR X0, [X0 + 0xD0]
	0x0345D6C4 BL 0x1C16CF4
	0x0345D6C8 ADRP X0, 0xCD3000
	0x0345D6CC LDR X0, [X0 + 0xD8]
	0x0345D6D0 BL 0x1C16CF4
	0x0345D6D4 MOVZ W8, 0x1
	0x0345D6D8 STRB W8, [X20 + 0x7A7]
	0x0345D6DC STP X31, X31, [X31 + 0x20]
	0x0345D6E0 STR X31, [X31 + 0x18]
	0x0345D6E4 ADRP X25, 0xCD1000
	0x0345D6E8 LDR W8, [X19]
	0x0345D6EC LDR X20, [X19 + 0x20]
	0x0345D6F0 LDR X25, [X25 + 0x488]
	0x0345D6F4 CBZ W8, 0x345D718
	0x0345D6F8 CMP W8, 0x1
	0x0345D6FC B.NE 0x345D744
	0x0345D700 LDR X8, [X19 + 0x80]
	0x0345D704 MOVN W9, 0x0
	0x0345D708 STR X8, [X31 + 0x18]
	0x0345D70C STR X31, [X19 + 0x80]
	0x0345D710 STR W9, [X19]
	0x0345D714 B 0x345DA88
	0x0345D718 LDR X8, [X19 + 0x78]
	0x0345D71C MOVN W9, 0x0
	0x0345D720 STR X8, [X31 + 0x20]
	0x0345D724 STR X31, [X19 + 0x78]
	0x0345D728 STR W9, [X19]
	0x0345D72C ADRP X8, 0xC97000
	0x0345D730 LDR X8, [X8 + 0x830]
	0x0345D734 ADD X0, X31, 0x20
	0x0345D738 LDR X1, [X8]
	0x0345D73C BL 0x2677474
	0x0345D740 B 0x345D9A4
	0x0345D744 ADRP X8, 0xCD3000
	0x0345D748 LDR X8, [X8 + 0xD8]
	0x0345D74C LDR X0, [X8]
	0x0345D750 BL 0x1C16F10
	0x0345D754 MOV X21, X0
	0x0345D758 MOV X1, X31
	0x0345D75C BL 0x344ABDC
	0x0345D760 STR X21, [X19 + 0x70]
	0x0345D764 CBZ X21, 0x345DB40
	0x0345D768 LDR X8, [X19 + 0x20]
	0x0345D76C STR X8, [X21 + 0x10]
	0x0345D770 LDR X8, [X19 + 0x28]
	0x0345D774 STR X8, [X21 + 0x18]
	0x0345D778 LDR V0, [X19 + 0x3]
	0x0345D77C STR V0, [X21 + 0x2]
	0x0345D780 LDR W8, [X19 + 0x40]
	0x0345D784 STR W8, [X21 + 0x30]
	0x0345D788 LDR X8, [X19 + 0x48]
	0x0345D78C STR X8, [X21 + 0x38]
	0x0345D790 LDR X8, [X19 + 0x50]
	0x0345D794 STR X8, [X21 + 0x40]
	0x0345D798 LDR X8, [X19 + 0x70]
	0x0345D79C CBZ X8, 0x345DB44
	0x0345D7A0 LDRH W9, [X19 + 0x58]
	0x0345D7A4 STRH W9, [X8 + 0x48]
	0x0345D7A8 LDR X8, [X19 + 0x70]
	0x0345D7AC CBZ X8, 0x345DB48
	0x0345D7B0 LDR X9, [X19 + 0x60]
	0x0345D7B4 STR X9, [X8 + 0x50]
	0x0345D7B8 CBZ X20, 0x345DB4C
	0x0345D7BC LDRB W8, [X20 + 0x10]
	0x0345D7C0 CBZ W8, 0x345D9A8
	0x0345D7C4 LDR X8, [X19 + 0x70]
	0x0345D7C8 CBZ X8, 0x345DB50

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF81000
	011 Move W8, [X20+1955]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCD3000
	018 Move X0, [X0+4064]
	019 Call 0x1C17CF4
	020 Move X0, 0xCD3000
	021 Move X0, [X0+4072]
	022 Call 0x1C17CF4
	023 Move X0, 0xCD2000
	024 Move X0, [X0+3920]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD2000
	027 Move X0, [X0+1096]
	028 Call 0x1C17CF4
	029 Move X0, 0xC99000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC98000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD3000
	036 Move X0, [X0+4080]
	037 Call 0x1C17CF4
	038 Move X0, 0xC98000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCD3000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCD3000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCD3000
	048 Move X0, [X0+4088]
	049 Call 0x1C17CF4
	050 Move X0, 0xC98000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD4000
	054 Move X0, [X0]
	055 Call 0x1C17CF4
	056 Move X0, 0xC98000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCD4000
	060 Move X0, [X0+8]
	061 Call 0x1C17CF4
	062 Move X0, 0xC98000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCD4000
	066 Move X0, [X0+16]
	067 Call 0x1C17CF4
	068 Move X0, 0xCD4000
	069 Move X0, [X0+24]
	070 Call 0x1C17CF4
	071 Move X0, 0xCD4000
	072 Move X0, [X0+32]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1955], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCD2000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1096]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+104]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+104], X31
	092 Move [X19], W9
	093 Move X8, [X19+96]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+96], X31
	099 Move [X19], W9
	100 Move X8, 0xC98000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCD4000
	106 Move X8, [X8+32]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass83_0..ctor, X0
	112 Move [X19+88], X21
	113 Compare X21, 0
	114 JumpIfEqual {390}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move W8, [X19+48]
	120 Move [X21+32], W8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 Move [X21+36], X8
	123 Move X8, [X19+88]
	124 Compare X8, 0
	125 JumpIfEqual {391}
	126 Move X9, [X19+64]
	127 Move [X8+48], X9
	128 Move X9, [X19+72]
	129 Move [X8+56], X9
	130 Compare X20, 0
	131 JumpIfEqual {392}
	132 Move W8, [X20+16]
	133 Compare W8, 0
	134 JumpIfEqual {272}
	135 Move X8, [X19+88]
	136 Compare X8, 0
	137 JumpIfEqual {393}
	138 Move X21, [X8+24]
	139 Compare X21, 0
	140 JumpIfEqual {394}
	141 Move X23, 0xC98000
	142 Move X8, [X21]
	143 Move X23, [X23+2072]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move X1, [X23]
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move W2, 7
	155 Move X0, X21
	156 Call 0x1C5D788
	157 Move W9, [X10]
	158 Add W9, W9, 7
	159 Add X8, X8, W9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X1, X31
	166 Call String.IsNullOrEmpty, X0
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {270}
	171 Move X8, [X19+88]
	172 Compare X8, 0
	173 JumpIfEqual {395}
	174 Move X9, 0xC98000
	175 Move X9, [X9+2544]
	176 Move X21, [X8+24]
	177 Move X0, [X9]
	178 Move W9, [X0+224]
	179 Compare W9, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X31
	183 Call DateTime.get_UtcNow
	184 Move X22, 0xC99000
	185 Move X22, [X22+2576]
	186 Move X8, X0
	187 Move [X31+40], X8
	188 Move X0, [X22]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {194}
	192 Call 0x1C17DFC
	193 Move X0, [X22]
	194 Move X8, [X0+184]
	195 Move X1, [X8]
	196 Add X0, X31, 40
	197 Move X2, X31
	198 Call DateTime.Add, X0, X1
	199 Compare X21, 0
	200 JumpIfEqual {396}
	201 Move X8, [X21]
	202 Move X1, [X23]
	203 Move X22, X0
	204 NotImplemented "Instruction LDRH not yet implemented."
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move W2, 11
	214 Move X0, X21
	215 Call 0x1C5D788
	216 Move W9, [X10]
	217 Add W9, W9, 11
	218 Add X8, X8, W9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X2, [X0+8]
	222 Move X0, X21
	223 Move X1, X22
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {270}
	229 Move X8, [X19+88]
	230 Compare X8, 0
	231 JumpIfEqual {397}
	232 Move X1, [X8+24]
	233 Move X3, [X19+80]
	234 Move X4, [X8+56]
	235 Move X0, X20
	236 Move X2, X31
	237 Move X5, X31
	238 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	239 Compare X0, 0
	240 JumpIfEqual {398}
	241 Move X8, 0xC98000
	242 Move X8, [X8+2112]
	243 Move X1, [X8]
	244 Call Task`1<Object>.GetAwaiter, X0
	245 Move X8, 0xC98000
	246 Move X8, [X8+2104]
	247 Move [X31+32], X0
	248 Move X1, [X8]
	249 Add X0, X31, 32
	250 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {100}
	255 Move [X19], W31
	256 Move X8, [X31+32]
	257 Move [X19+96], X8
	258 Move X0, [X25]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move X8, 0xCD3000
	264 Move X8, [X8+4072]
	265 Add X0, X19, 8
	266 Move X3, [X8]
	267 Add X1, X31, 32
	268 Move X2, X19
	269 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	270 Compare X20, 0
	271 JumpIfEqual {389}
	272 Move X8, 0xCD3000
	273 Move X8, [X8+4080]
	274 Move X21, [X20+88]
	275 Move X23, [X19+88]
	276 Move X0, [X8]
	277 Call 0x1C17F10
	278 Move X8, 0xCD4000
	279 Move X8, [X8+24]
	280 Move X22, X0
	281 Move X2, [X8]
	282 Move X1, X23
	283 Move X3, X31
	284 Call Func`1<Object>..ctor, X0, X1, X2
	285 Move X8, [X19+88]
	286 Compare X8, 0
	287 JumpIfEqual {386}
	288 Move X9, 0xCD3000
	289 Move X23, [X19+80]
	290 Move X9, [X9+1992]
	291 Compare X23, 0
	292 JumpIfNotEqual {294}
	293 Move X23, [X20+24]
	294 Move X20, [X8+24]
	295 Move X1, [X8+56]
	296 Move X2, [X9]
	297 Move [X31+8], X31
	298 Move [X31+16], X31
	299 Add X0, X31, 8
	300 Call Nullable`1<CancellationToken>..ctor, X0, X1
	301 Move X8, 0xCD3000
	302 Move X8, [X8+2000]
	303 Move X0, [X8]
	304 Call 0x1C17F10
	305 Move X3, [X31+8]
	306 Move X4, [X31+16]
	307 Move X24, X0
	308 Move X1, X20
	309 Move X2, X23
	310 Move X5, X31
	311 Call RetryHistory..ctor, X0, X1, X2, X3
	312 Compare X21, 0
	313 JumpIfEqual {387}
	314 Move X8, 0xCD3000
	315 Move X8, [X8+4088]
	316 Move X3, [X8]
	317 Move X0, X21
	318 Move X1, X22
	319 Move X2, X24
	320 Call 0x2244230, X0, X1, X2
	321 Compare X0, 0
	322 JumpIfEqual {388}
	323 Move X8, 0xCD4000
	324 Move X8, [X8+16]
	325 Move X1, [X8]
	326 Call Task`1<Object>.GetAwaiter, X0
	327 Move X8, 0xCD4000
	328 Move X8, [X8+8]
	329 Move [X31+24], X0
	330 Move X1, [X8]
	331 Add X0, X31, 24
	332 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	333 Move TEMP, X0
	334 And TEMP, TEMP, 1
	335 Compare TEMP, 1
	336 JumpIfNotEqual {360}
	337 Move X8, 0xCD4000
	338 Move X8, [X8]
	339 Add X0, X31, 24
	340 Move X1, [X8]
	341 Call TaskAwaiter`1<Object>.GetResult, X0
	342 Move TEMP, 1
	343 Not TEMP
	344 Move W8, TEMP
	345 Move [X19], W8
	346 Move [X19+88], X31
	347 Move X20, X0
	348 Move X0, [X25]
	349 Move X21, 0xCD2000
	350 Add X19, X19, 8
	351 Move W8, [X0+224]
	352 Move X21, [X21+3920]
	353 Compare W8, 0
	354 JumpIfNotEqual {356}
	355 Call 0x1C17DFC
	356 Move X2, [X21]
	357 Move X0, X19
	358 Move X1, X20
	359 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	360 Move W8, 1
	361 Move [X19], W8
	362 Move X8, [X31+24]
	363 Move [X19+104], X8
	364 Move X0, [X25]
	365 Move W8, [X0+224]
	366 Compare W8, 0
	367 JumpIfNotEqual {369}
	368 Call 0x1C17DFC
	369 Move X8, 0xCD3000
	370 Move X8, [X8+4064]
	371 Add X0, X19, 8
	372 Move X3, [X8]
	373 Add X1, X31, 24
	374 Move X2, X19
	375 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	376 Move X20, [X31+96]
	377 Move X19, [X31+104]
	378 Move X22, [X31+80]
	379 Move X21, [X31+88]
	380 Move X24, [X31+64]
	381 Move X23, [X31+72]
	382 Move X30, [X31+48]
	383 Move X25, [X31+56]
	384 Add X31, X31, 112
	385 Return 
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Move X20, X0
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X0, X20
	402 Call 0x3EB2AD0
	403 Move X20, X0
	404 Move X0, 0xC97000
	405 Move X0, [X0+2000]
	406 Call 0x1C17D08
	407 Move X8, [X20]
	408 Move X1, [X8]
	409 Call 0x1C18270
	410 Move TEMP, X0
	411 And TEMP, TEMP, 1
	412 Compare TEMP, 1
	413 JumpIfNotEqual {435}
	414 Move X20, [X20]
	415 Call 0x3EB2AE0
	416 Move TEMP, 1
	417 Not TEMP
	418 Move W8, TEMP
	419 Move [X19+88], X31
	420 Move [X19+8], W8
	421 Move X0, 0xCD2000
	422 Move X0, [X0+1096]
	423 Call 0x1C17D08
	424 Move W8, [X0+224]
	425 Compare W8, 0
	426 JumpIfNotEqual {428}
	427 Call 0x1C17DFC
	428 Move X0, 0xCD2000
	429 Move X0, [X0+3944]
	430 Call 0x1C17D08
	431 Move X2, X0
	432 Move X0, X19
	433 Move X1, X20
	434 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	435 Move W0, 8
	436 Call 0x3EB2AF0
	437 Move X8, [X20]
	438 Move [X0], X8
	439 Move X1, 0xA58000
	440 Add X1, X1, 3672
	441 Move X2, X31
	442 Call 0x3EB2B00
	443 Move X20, X0
	444 Call 0x3EB2AE0
	445 Move X0, X20
	446 Call 0x1D2D690
	447 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0345D7CC LDR X21, [X8 + 0x18]
	0x0345D7D0 CBZ X21, 0x345DB54
	0x0345D7D4 ADRP X23, 0xC97000
	0x0345D7D8 LDR X8, [X21]
	0x0345D7DC LDR X23, [X23 + 0x818]
	0x0345D7E0 LDRH W9, [X8 + 0x12E]
	0x0345D7E4 LDR X1, [X23]
	0x0345D7E8 CBZ X9, 0x345D80C
	0x0345D7EC LDR X10, [X8 + 0xB0]
	0x0345D7F0 ADD X10, X10, 0x8
	0x0345D7F4 LDUR X11, [X10 - 0x8]
	0x0345D7F8 CMP X11, X1
	0x0345D7FC B.EQ 0x345D81C
	0x0345D800 SUBS X9, X9, 0x1
	0x0345D804 ADD X10, X10, 0x10
	0x0345D808 B.NE 0x345D7F4
	0x0345D80C MOVZ W2, 0x7
	0x0345D810 MOV X0, X21
	0x0345D814 BL 0x1C5C788
	0x0345D818 B 0x345D82C
	0x0345D81C LDR W9, [X10]
	0x0345D820 ADD W9, W9, 0x7
	0x0345D824 ADD X8, X8, W9, 0x4, SXTW
	0x0345D828 ADD X0, X8, 0x138
	0x0345D82C LDP X8, X1, [X0]
	0x0345D830 MOV X0, X21
	0x0345D834 BLR X8
	0x0345D838 MOV X1, X31
	0x0345D83C BL 0x32277A8
	0x0345D840 TBNZ X0, 0x0, 0x345D9A4
	0x0345D844 LDR X8, [X19 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF81000
	007 Move X21, 0xCD2000
	008 Move W8, [X22+1956]
	009 Move X21, [X21+1096]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCD2000
	017 Move X0, [X0+3952]
	018 Call 0x1C17CF4
	019 Move X0, 0xCD2000
	020 Move X0, [X0+1096]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1956], W8
	024 Move X0, [X21]
	025 Move X21, 0xCD2000
	026 Move W8, [X0+224]
	027 Move X21, [X21+3952]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

