Type: Nakama.ApiClient/<DeleteNotificationsAsync>d__72

Method: System.Void MoveNext()

Disassembly:
	0x034216EC LDR X1, [X8]
	0x034216F0 MOV X0, X20
	0x034216F4 MOV X3, X31
	0x034216F8 BL 0x32293BC
	0x034216FC CBZ X24, 0x34219F0
	0x03421700 MOV X21, X0
	0x03421704 LDR X0, [X24 + 0x20]
	0x03421708 CBZ X0, 0x34219F4
	0x0342170C ADRP X8, 0xCD2000
	0x03421710 LDR X8, [X8 + 0x988]
	0x03421714 LDR X20, [X8]
	0x03421718 MOV X1, X31
	0x0342171C BL 0x361B448
	0x03421720 ADRP X8, 0xCDB000
	0x03421724 LDR X8, [X8 + 0x8D8]
	0x03421728 MOV X22, X0
	0x0342172C LDR X0, [X8]
	0x03421730 MOVZ W1, 0x1
	0x03421734 BL 0x1C16D6C
	0x03421738 MOV X1, X0
	0x0342173C CBZ X1, 0x34219F8
	0x03421740 LDR W8, [X1 + 0x18]
	0x03421744 CBZ W8, 0x34219FC
	0x03421748 MOVZ W8, 0x2F
	0x0342174C STRH W8, [X1 + 0x20]
	0x03421750 CBZ X22, 0x3421A00
	0x03421754 MOV X0, X22
	0x03421758 MOV X2, X31
	0x0342175C BL 0x322BC58
	0x03421760 MOV X1, X21
	0x03421764 MOV X2, X31
	0x03421768 BL 0x321B938
	0x0342176C ADRP X8, 0xCDB000
	0x03421770 LDR X8, [X8 + 0x3A0]
	0x03421774 MOV X22, X0
	0x03421778 LDR X23, [X24 + 0x20]
	0x0342177C LDR X0, [X8]
	0x03421780 BL 0x1C16F10
	0x03421784 MOV X21, X0
	0x03421788 MOV X1, X23
	0x0342178C MOV X2, X31
	0x03421790 BL 0x36281F8
	0x03421794 CBZ X21, 0x3421A04
	0x03421798 MOV X0, X21
	0x0342179C MOV X1, X22
	0x034217A0 MOV X2, X31
	0x034217A4 BL 0x36288CC
	0x034217A8 MOV X0, X21
	0x034217AC MOV X1, X20
	0x034217B0 MOV X2, X31
	0x034217B4 BL 0x3628980
	0x034217B8 MOV X0, X21
	0x034217BC MOV X1, X31
	0x034217C0 BL 0x3628A38
	0x034217C4 ADRP X8, 0xCFB000
	0x034217C8 ADRP X9, 0xCD3000
	0x034217CC LDR X8, [X8 + 0x4C8]
	0x034217D0 LDR X9, [X9 + 0x6D0]
	0x034217D4 MOV X20, X0
	0x034217D8 LDR X21, [X8]
	0x034217DC LDR X0, [X9]
	0x034217E0 BL 0x1C16F10
	0x034217E4 ADRP X8, 0xCD3000
	0x034217E8 LDR X8, [X8 + 0x6C0]
	0x034217EC MOV X22, X0
	0x034217F0 LDR X1, [X8]
	0x034217F4 BL 0x2AA4804
	0x034217F8 ADRP X8, 0xD0D000
	0x034217FC LDR X8, [X8 + 0x7D8]
	0x03421800 LDR X1, [X19 + 0x30]
	0x03421804 LDR X0, [X8]
	0x03421808 MOV X2, X31
	0x0342180C BL 0x321B938
	0x03421810 CBZ X22, 0x3421A08
	0x03421814 ADRP X8, 0xD0D000
	0x03421818 LDR X8, [X8 + 0x7D0]
	0x0342181C ADRP X9, 0xCD3000
	0x03421820 LDR X9, [X9 + 0x810]
	0x03421824 MOV X2, X0
	0x03421828 LDR X1, [X8]
	0x0342182C LDR X3, [X9]
	0x03421830 MOV X0, X22
	0x03421834 BL 0x2AA5098
	0x03421838 LDR X23, [X24 + 0x10]
	0x0342183C CBZ X23, 0x3421A0C
	0x03421840 ADRP X10, 0xD0D000
	0x03421844 LDR X10, [X10 + 0x7B8]
	0x03421848 LDR X8, [X23]
	0x0342184C LDR W25, [X24 + 0x18]
	0x03421850 LDP X26, X24, [X19 + 0x38]
	0x03421854 LDR X1, [X10]
	0x03421858 LDRH W9, [X8 + 0x12E]
	0x0342185C CBZ X9, 0x3421880
	0x03421860 LDR X10, [X8 + 0xB0]
	0x03421864 ADD X10, X10, 0x8
	0x03421868 LDUR X11, [X10 - 0x8]
	0x0342186C CMP X11, X1
	0x03421870 B.EQ 0x34218A8
	0x03421874 SUBS X9, X9, 0x1
	0x03421878 ADD X10, X10, 0x10
	0x0342187C B.NE 0x3421868
	0x03421880 MOVZ W2, 0x3
	0x03421884 MOV X0, X23
	0x03421888 BL 0x1C5C788
	0x0342188C B 0x34218B8
	0x03421890 LDR X8, [X19 + 0x48]
	0x03421894 MOVN W9, 0x0
	0x03421898 STR X8, [X31 + 0x8]
	0x0342189C STR X31, [X19 + 0x48]
	0x034218A0 STR W9, [X19]
	0x034218A4 B 0x3421914
	0x034218A8 LDR W9, [X10]
	0x034218AC ADD W9, W9, 0x3
	0x034218B0 ADD X8, X8, W9, 0x4, SXTW
	0x034218B4 ADD X0, X8, 0x138
	0x034218B8 LDP X8, X9, [X0]
	0x034218BC MOV X0, X23
	0x034218C0 MOV X1, X21
	0x034218C4 MOV X2, X20
	0x034218C8 MOV X3, X22
	0x034218CC MOV X4, X31
	0x034218D0 MOV W5, W25
	0x034218D4 MOV X6, X26
	0x034218D8 MOV X7, X24
	0x034218DC STR X9, [X31]
	0x034218E0 BLR X8
	0x034218E4 CBZ X0, 0x3421A10
	0x034218E8 ADRP X8, 0xCD5000
	0x034218EC LDR X8, [X8 + 0x1F8]
	0x034218F0 LDR X1, [X8]
	0x034218F4 BL 0x269F5D0
	0x034218F8 ADRP X8, 0xCD5000
	0x034218FC LDR X8, [X8 + 0x1F0]
	0x03421900 STR X0, [X31 + 0x8]
	0x03421904 LDR X1, [X8]
	0x03421908 ADD X0, X31, 0x8
	0x0342190C BL 0x2677430
	0x03421910 TBZ X0, 0x0, 0x3421950
	0x03421914 ADRP X8, 0xCD5000
	0x03421918 LDR X8, [X8 + 0x1E0]
	0x0342191C ADD X0, X31, 0x8
	0x03421920 LDR X1, [X8]
	0x03421924 BL 0x2677474
	0x03421928 MOVN W8, 0x1
	0x0342192C STR W8, [X19], #0x8
	0x03421930 LDR X0, [X27]
	0x03421934 LDR W8, [X0 + 0xE0]
	0x03421938 CBNZ W8, 0x3421940
	0x0342193C BL 0x1C16DFC
	0x03421940 MOV X0, X19
	0x03421944 MOV X1, X31
	0x03421948 BL 0x32C4864
	0x0342194C B 0x3421988
	0x03421950 STR W31, [X19]
	0x03421954 LDR X8, [X31 + 0x8]
	0x03421958 STR X8, [X19 + 0x48]
	0x0342195C LDR X0, [X27]
	0x03421960 LDR W8, [X0 + 0xE0]
	0x03421964 CBNZ W8, 0x342196C
	0x03421968 BL 0x1C16DFC
	0x0342196C ADRP X8, 0xD0D000
	0x03421970 LDR X8, [X8 + 0xC68]
	0x03421974 ADD X0, X19, 0x8
	0x03421978 LDR X3, [X8]
	0x0342197C ADD X1, X31, 0x8
	0x03421980 MOV X2, X19
	0x03421984 BL 0x2186278
	0x03421988 LDP X20, X19, [X31 + 0x50]
	0x0342198C LDP X22, X21, [X31 + 0x40]
	0x03421990 LDP X24, X23, [X31 + 0x30]
	0x03421994 LDP X26, X25, [X31 + 0x20]
	0x03421998 LDP X30, X27, [X31 + 0x10]
	0x0342199C ADD X31, X31, 0x60
	0x034219A0 RET
	0x034219A4 ADRP X0, 0xCDA000
	0x034219A8 LDR X0, [X0 + 0x578]
	0x034219AC BL 0x1C16D08
	0x034219B0 BL 0x1C16F10
	0x034219B4 MOV X20, X0
	0x034219B8 ADRP X0, 0xD0D000
	0x034219BC LDR X0, [X0 + 0xC80]
	0x034219C0 BL 0x1C16D08
	0x034219C4 MOV X1, X0
	0x034219C8 MOV X0, X20
	0x034219CC MOV X2, X31
	0x034219D0 BL 0x3314A68
	0x034219D4 ADRP X0, 0xD0D000
	0x034219D8 LDR X0, [X0 + 0xC88]
	0x034219DC BL 0x1C16D08
	0x034219E0 MOV X1, X0
	0x034219E4 MOV X0, X20
	0x034219E8 BL 0x1C16DEC
	0x034219EC BL 0x1C16F20
	0x034219F0 BL 0x1C16F20
	0x034219F4 BL 0x1C16F20
	0x034219F8 BL 0x1C16F20
	0x034219FC BL 0x1C16F28
	0x03421A00 BL 0x1C16F20
	0x03421A04 BL 0x1C16F20
	0x03421A08 BL 0x1C16F20
	0x03421A0C BL 0x1C16F20
	0x03421A10 BL 0x1C16F20
	0x03421A14 B 0x3421A70
	0x03421A18 B 0x3421A70
	0x03421A1C B 0x3421A70
	0x03421A20 B 0x3421A70
	0x03421A24 B 0x3421A70
	0x03421A28 B 0x3421A70
	0x03421A2C B 0x3421A70
	0x03421A30 B 0x3421A70
	0x03421A34 B 0x3421A70
	0x03421A38 B 0x3421A70
	0x03421A3C B 0x3421A70
	0x03421A40 B 0x3421A70
	0x03421A44 B 0x3421A70
	0x03421A48 B 0x3421A70
	0x03421A4C B 0x3421A70
	0x03421A50 B 0x3421A70
	0x03421A54 B 0x3421A70
	0x03421A58 B 0x3421A70
	0x03421A5C B 0x3421A70
	0x03421A60 B 0x3421A70
	0x03421A64 B 0x3421A70
	0x03421A68 B 0x3421A70
	0x03421A6C B 0x3421A70
	0x03421A70 MOV X20, X0
	0x03421A74 CMP W1, 0x1
	0x03421A78 B.NE 0x3421B08
	0x03421A7C MOV X0, X20
	0x03421A80 BL 0x3EB1AD0
	0x03421A84 MOV X20, X0
	0x03421A88 ADRP X0, 0xCD2000
	0x03421A8C LDR X0, [X0 + 0x7D0]
	0x03421A90 BL 0x1C16D08
	0x03421A94 LDR X8, [X20]
	0x03421A98 LDR X1, [X8]
	0x03421A9C BL 0x1C17270
	0x03421AA0 TBZ X0, 0x0, 0x3421AE0
	0x03421AA4 LDR X20, [X20]
	0x03421AA8 BL 0x3EB1AE0
	0x03421AAC MOVN W8, 0x1
	0x03421AB0 STR W8, [X19], #0x8
	0x03421AB4 ADRP X0, 0xCD5000
	0x03421AB8 LDR X0, [X0 + 0x280]
	0x03421ABC BL 0x1C16D08
	0x03421AC0 LDR W8, [X0 + 0xE0]
	0x03421AC4 CBNZ W8, 0x3421ACC
	0x03421AC8 BL 0x1C16DFC
	0x03421ACC MOV X0, X19
	0x03421AD0 MOV X1, X20
	0x03421AD4 MOV X2, X31
	0x03421AD8 BL 0x32C4908
	0x03421ADC B 0x3421988
	0x03421AE0 MOVZ W0, 0x8
	0x03421AE4 BL 0x3EB1AF0
	0x03421AE8 LDR X8, [X20]
	0x03421AEC STR X8, [X0]
	0x03421AF0 ADRP X1, 0xA93000
	0x03421AF4 ADD X1, X1, 0xE58
	0x03421AF8 MOV X2, X31
	0x03421AFC BL 0x3EB1B00
	0x03421B00 MOV X20, X0
	0x03421B04 BL 0x3EB1AE0
	0x03421B08 MOV X0, X20
	0x03421B0C BL 0x1D2C690
	0x03421B10 BL 0x1990590
	0x03421B14 STR X30, [X31 - 0x30]!
	0x03421B18 STP X22, X21, [X31 + 0x10]
	0x03421B1C STP X20, X19, [X31 + 0x20]
	0x03421B20 ADRP X21, 0xFBC000
	0x03421B24 ADRP X22, 0xCD5000
	0x03421B28 LDRB W8, [X21 + 0x620]
	0x03421B2C LDR X22, [X22 + 0x280]
	0x03421B30 MOV X19, X1
	0x03421B34 MOV X20, X0
	0x03421B38 TBNZ X8, 0x0, 0x3421B50
	0x03421B3C ADRP X0, 0xCD5000
	0x03421B40 LDR X0, [X0 + 0x280]
	0x03421B44 BL 0x1C16CF4
	0x03421B48 MOVZ W8, 0x1
	0x03421B4C STRB W8, [X21 + 0x620]
	0x03421B50 LDR X0, [X22]
	0x03421B54 LDR W8, [X0 + 0xE0]
	0x03421B58 CBNZ W8, 0x3421B60
	0x03421B5C BL 0x1C16DFC
	0x03421B60 ADD X0, X20, 0x8
	0x03421B64 MOV X1, X19
	0x03421B68 LDP X20, X19, [X31 + 0x20]
	0x03421B6C LDP X22, X21, [X31 + 0x10]
	0x03421B70 MOV X2, X31
	0x03421B74 LDR X30, [X31], #0x30
	0x03421B78 B 0x32C477C
	0x03421B7C SUB X31, X31, 0x80
	0x03421B80 STP X29, X30, [X31 + 0x20]
	0x03421B84 STP X28, X27, [X31 + 0x30]
	0x03421B88 STP X26, X25, [X31 + 0x40]
	0x03421B8C STP X24, X23, [X31 + 0x50]
	0x03421B90 STP X22, X21, [X31 + 0x60]
	0x03421B94 STP X20, X19, [X31 + 0x70]
	0x03421B98 ADRP X20, 0xFBC000
	0x03421B9C LDRB W8, [X20 + 0x621]
	0x03421BA0 MOV X19, X0
	0x03421BA4 TBNZ X8, 0x0, 0x3421CDC
	0x03421BA8 ADRP X0, 0xD0D000
	0x03421BAC LDR X0, [X0 + 0xC90]
	0x03421BB0 BL 0x1C16CF4
	0x03421BB4 ADRP X0, 0xCD5000
	0x03421BB8 LDR X0, [X0 + 0x280]
	0x03421BBC BL 0x1C16CF4
	0x03421BC0 ADRP X0, 0xCDB000
	0x03421BC4 LDR X0, [X0 + 0x8D8]
	0x03421BC8 BL 0x1C16CF4
	0x03421BCC ADRP X0, 0xCD3000
	0x03421BD0 LDR X0, [X0 + 0x810]
	0x03421BD4 BL 0x1C16CF4
	0x03421BD8 ADRP X0, 0xCD3000
	0x03421BDC LDR X0, [X0 + 0x6C0]
	0x03421BE0 BL 0x1C16CF4
	0x03421BE4 ADRP X0, 0xCD3000
	0x03421BE8 LDR X0, [X0 + 0x6D0]
	0x03421BEC BL 0x1C16CF4
	0x03421BF0 ADRP X0, 0xCD2000
	0x03421BF4 LDR X0, [X0 + 0xE00]
	0x03421BF8 BL 0x1C16CF4
	0x03421BFC ADRP X0, 0xCD2000
	0x03421C00 LDR X0, [X0 + 0xF70]
	0x03421C04 BL 0x1C16CF4
	0x03421C08 ADRP X0, 0xCD2000
	0x03421C0C LDR X0, [X0 + 0xF78]
	0x03421C10 BL 0x1C16CF4
	0x03421C14 ADRP X0, 0xCD2000
	0x03421C18 LDR X0, [X0 + 0xE18]
	0x03421C1C BL 0x1C16CF4
	0x03421C20 ADRP X0, 0xD0D000
	0x03421C24 LDR X0, [X0 + 0x7B8]
	0x03421C28 BL 0x1C16CF4
	0x03421C2C ADRP X0, 0xCD2000
	0x03421C30 LDR X0, [X0 + 0xAC8]
	0x03421C34 BL 0x1C16CF4
	0x03421C38 ADRP X0, 0xCD5000
	0x03421C3C LDR X0, [X0 + 0x1E0]
	0x03421C40 BL 0x1C16CF4
	0x03421C44 ADRP X0, 0xCD5000
	0x03421C48 LDR X0, [X0 + 0x1F0]
	0x03421C4C BL 0x1C16CF4
	0x03421C50 ADRP X0, 0xCD5000
	0x03421C54 LDR X0, [X0 + 0x1F8]
	0x03421C58 BL 0x1C16CF4
	0x03421C5C ADRP X0, 0xCDB000
	0x03421C60 LDR X0, [X0 + 0x3A0]
	0x03421C64 BL 0x1C16CF4
	0x03421C68 ADRP X0, 0xCD4000
	0x03421C6C LDR X0, [X0 + 0xA28]
	0x03421C70 BL 0x1C16CF4
	0x03421C74 ADRP X0, 0xCFB000
	0x03421C78 LDR X0, [X0 + 0x4D8]
	0x03421C7C BL 0x1C16CF4
	0x03421C80 ADRP X0, 0xD0D000
	0x03421C84 LDR X0, [X0 + 0x7F0]
	0x03421C88 BL 0x1C16CF4
	0x03421C8C ADRP X0, 0xD0D000
	0x03421C90 LDR X0, [X0 + 0xC98]
	0x03421C94 BL 0x1C16CF4
	0x03421C98 ADRP X0, 0xD0D000
	0x03421C9C LDR X0, [X0 + 0x800]
	0x03421CA0 BL 0x1C16CF4
	0x03421CA4 ADRP X0, 0xCDB000
	0x03421CA8 LDR X0, [X0 + 0x720]
	0x03421CAC BL 0x1C16CF4
	0x03421CB0 ADRP X0, 0xD0D000
	0x03421CB4 LDR X0, [X0 + 0x7D0]
	0x03421CB8 BL 0x1C16CF4
	0x03421CBC ADRP X0, 0xD0D000
	0x03421CC0 LDR X0, [X0 + 0x7D8]
	0x03421CC4 BL 0x1C16CF4
	0x03421CC8 ADRP X0, 0xCD2000
	0x03421CCC LDR X0, [X0 + 0x988]
	0x03421CD0 BL 0x1C16CF4
	0x03421CD4 MOVZ W8, 0x1
	0x03421CD8 STRB W8, [X20 + 0x621]
	0x03421CDC STR X31, [X31 + 0x18]
	0x03421CE0 ADRP X27, 0xCD5000
	0x03421CE4 LDR W24, [X19]
	0x03421CE8 LDR X27, [X27 + 0x280]
	0x03421CEC CBZ W24, 0x3421DC8
	0x03421CF0 LDR X21, [X19 + 0x20]
	0x03421CF4 CBZ X21, 0x3422230
	0x03421CF8 ADRP X26, 0xCD4000
	0x03421CFC LDR X26, [X26 + 0xA28]
	0x03421D00 ADRP X8, 0xD0D000
	0x03421D04 LDR X0, [X26]
	0x03421D08 LDR X8, [X8 + 0xC98]
	0x03421D0C LDR X23, [X19 + 0x30]
	0x03421D10 LDR W9, [X0 + 0xE0]
	0x03421D14 LDR X20, [X8]
	0x03421D18 CBNZ W9, 0x3421D20
	0x03421D1C BL 0x1C16DFC
	0x03421D20 MOV X0, X21
	0x03421D24 MOV X1, X31
	0x03421D28 BL 0x3624D20
	0x03421D2C CBZ X20, 0x3422278
	0x03421D30 ADRP X8, 0xD0D000
	0x03421D34 LDR X8, [X8 + 0x800]
	0x03421D38 MOV X2, X0
	0x03421D3C LDR X1, [X8]
	0x03421D40 MOV X0, X20
	0x03421D44 MOV X3, X31
	0x03421D48 BL 0x32293BC
	0x03421D4C ADRP X8, 0xCD2000
	0x03421D50 LDR X8, [X8 + 0x988]
	0x03421D54 LDR X21, [X19 + 0x28]
	0x03421D58 MOV X20, X0
	0x03421D5C LDR X28, [X8]
	0x03421D60 CBNZ X21, 0x3421D80
	0x03421D64 ADRP X8, 0xCD2000
	0x03421D68 LDR X8, [X8 + 0xAC8]
	0x03421D6C LDR X0, [X8]
	0x03421D70 MOV W1, W31
	0x03421D74 BL 0x1C16D6C
	0x03421D78 MOV X21, X0
	0x03421D7C CBZ X0, 0x34222A8
	0x03421D80 ADRP X10, 0xCD2000
	0x03421D84 LDR X8, [X21]
	0x03421D88 LDR X10, [X10 + 0xF70]
	0x03421D8C LDRH W9, [X8 + 0x12E]
	0x03421D90 LDR X1, [X10]
	0x03421D94 CBZ X9, 0x3421DB8
	0x03421D98 LDR X10, [X8 + 0xB0]
	0x03421D9C ADD X10, X10, 0x8
	0x03421DA0 LDUR X11, [X10 - 0x8]
	0x03421DA4 CMP X11, X1
	0x03421DA8 B.EQ 0x3421DE0
	0x03421DAC SUBS X9, X9, 0x1
	0x03421DB0 ADD X10, X10, 0x10
	0x03421DB4 B.NE 0x3421DA0
	0x03421DB8 MOV X0, X21
	0x03421DBC MOV W2, W31
	0x03421DC0 BL 0x1C5C788
	0x03421DC4 B 0x3421DEC
	0x03421DC8 LDR X8, [X19 + 0x50]
	0x03421DCC MOVN W9, 0x0
	0x03421DD0 STR X8, [X31 + 0x18]
	0x03421DD4 STR X31, [X19 + 0x50]
	0x03421DD8 STR W9, [X19]
	0x03421DDC B 0x3422198
	0x03421DE0 LDRSW X9, [X10]
	0x03421DE4 ADD X8, X8, X9, 0x4, LSL
	0x03421DE8 ADD X0, X8, 0x138
	0x03421DEC LDP X8, X1, [X0]
	0x03421DF0 MOV X0, X21
	0x03421DF4 BLR X8
	0x03421DF8 STP X20, X23, [X31 + 0x8]
	0x03421DFC ADRP X29, 0xCD2000
	0x03421E00 ADRP X27, 0xCD2000
	0x03421E04 ADRP X20, 0xD0D000
	0x03421E08 ADRP X25, 0xCDB000
	0x03421E0C LDR X29, [X29 + 0xE18]
	0x03421E10 LDR X27, [X27 + 0xF78]
	0x03421E14 LDR X20, [X20 + 0x7F0]
	0x03421E18 LDR X25, [X25 + 0x720]
	0x03421E1C MOV X22, X0
	0x03421E20 MOV X0, X28
	0x03421E24 CBZ X22, 0x342222C
	0x03421E28 LDR X8, [X22]
	0x03421E2C LDR X1, [X29]
	0x03421E30 MOV X21, X0
	0x03421E34 LDRH W9, [X8 + 0x12E]
	0x03421E38 CBZ X9, 0x3421E5C
	0x03421E3C LDR X10, [X8 + 0xB0]
	0x03421E40 ADD X10, X10, 0x8
	0x03421E44 LDUR X11, [X10 - 0x8]
	0x03421E48 CMP X11, X1
	0x03421E4C B.EQ 0x3421E6C
	0x03421E50 SUBS X9, X9, 0x1
	0x03421E54 ADD X10, X10, 0x10
	0x03421E58 B.NE 0x3421E44
	0x03421E5C MOV X0, X22
	0x03421E60 MOV W2, W31
	0x03421E64 BL 0x1C5C788
	0x03421E68 B 0x3421E78
	0x03421E6C LDRSW X9, [X10]
	0x03421E70 ADD X8, X8, X9, 0x4, LSL
	0x03421E74 ADD X0, X8, 0x138
	0x03421E78 LDP X8, X1, [X0]
	0x03421E7C MOV X0, X22
	0x03421E80 BLR X8
	0x03421E84 TBZ X0, 0x0, 0x3421F1C
	0x03421E88 LDR X8, [X22]
	0x03421E8C LDR X1, [X27]
	0x03421E90 LDRH W9, [X8 + 0x12E]
	0x03421E94 CBZ X9, 0x3421EB8
	0x03421E98 LDR X10, [X8 + 0xB0]
	0x03421E9C ADD X10, X10, 0x8
	0x03421EA0 LDUR X11, [X10 - 0x8]
	0x03421EA4 CMP X11, X1
	0x03421EA8 B.EQ 0x3421EC8
	0x03421EAC SUBS X9, X9, 0x1
	0x03421EB0 ADD X10, X10, 0x10
	0x03421EB4 B.NE 0x3421EA0
	0x03421EB8 MOV X0, X22
	0x03421EBC MOV W2, W31
	0x03421EC0 BL 0x1C5C788
	0x03421EC4 B 0x3421ED4
	0x03421EC8 LDRSW X9, [X10]
	0x03421ECC ADD X8, X8, X9, 0x4, LSL
	0x03421ED0 ADD X0, X8, 0x138
	0x03421ED4 LDP X8, X1, [X0]
	0x03421ED8 MOV X0, X22
	0x03421EDC BLR X8
	0x03421EE0 MOV X23, X0
	0x03421EE4 LDR X0, [X26]
	0x03421EE8 LDR W8, [X0 + 0xE0]
	0x03421EEC CBNZ W8, 0x3421EF4
	0x03421EF0 BL 0x1C16DFC
	0x03421EF4 MOV X0, X23
	0x03421EF8 MOV X1, X31
	0x03421EFC BL 0x3624D20
	0x03421F00 LDR X1, [X20]
	0x03421F04 LDR X3, [X25]
	0x03421F08 MOV X2, X0
	0x03421F0C MOV X0, X21
	0x03421F10 MOV X4, X31
	0x03421F14 BL 0x32277C4
	0x03421F18 B 0x3421E24
	0x03421F1C MOV X23, X31
	0x03421F20 MOVZ W20, 0x9
	0x03421F24 ADRP X27, 0xCD5000
	0x03421F28 LDR X27, [X27 + 0x280]
	0x03421F2C LDR X25, [X31 + 0x10]
	0x03421F30 TBZ X24, 0x1F, 0x3421F98
	0x03421F34 CBZ X22, 0x3421F98
	0x03421F38 ADRP X10, 0xCD2000
	0x03421F3C LDR X8, [X22]
	0x03421F40 LDR X10, [X10 + 0xE00]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0xFBD000
	015 Move W8, [X20+1563]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {95}
	021 Move X0, 0xD0E000
	022 Move X0, [X0+3136]
	023 Call 0x1C17CF4
	024 Move X0, 0xCD6000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move X0, 0xCDC000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0xCD4000
	031 Move X0, [X0+2064]
	032 Call 0x1C17CF4
	033 Move X0, 0xCD4000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCD4000
	037 Move X0, [X0+1744]
	038 Call 0x1C17CF4
	039 Move X0, 0xCD3000
	040 Move X0, [X0+3584]
	041 Call 0x1C17CF4
	042 Move X0, 0xCD3000
	043 Move X0, [X0+3952]
	044 Call 0x1C17CF4
	045 Move X0, 0xCD3000
	046 Move X0, [X0+3960]
	047 Call 0x1C17CF4
	048 Move X0, 0xCD3000
	049 Move X0, [X0+3608]
	050 Call 0x1C17CF4
	051 Move X0, 0xD0E000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move X0, 0xCD3000
	055 Move X0, [X0+2760]
	056 Call 0x1C17CF4
	057 Move X0, 0xCD6000
	058 Move X0, [X0+480]
	059 Call 0x1C17CF4
	060 Move X0, 0xCD6000
	061 Move X0, [X0+496]
	062 Call 0x1C17CF4
	063 Move X0, 0xCD6000
	064 Move X0, [X0+504]
	065 Call 0x1C17CF4
	066 Move X0, 0xCDC000
	067 Move X0, [X0+928]
	068 Call 0x1C17CF4
	069 Move X0, 0xCD5000
	070 Move X0, [X0+2600]
	071 Call 0x1C17CF4
	072 Move X0, 0xD0E000
	073 Move X0, [X0+1984]
	074 Call 0x1C17CF4
	075 Move X0, 0xCDC000
	076 Move X0, [X0+1824]
	077 Call 0x1C17CF4
	078 Move X0, 0xD0E000
	079 Move X0, [X0+2000]
	080 Call 0x1C17CF4
	081 Move X0, 0xD0E000
	082 Move X0, [X0+3144]
	083 Call 0x1C17CF4
	084 Move X0, 0xD0E000
	085 Move X0, [X0+2008]
	086 Call 0x1C17CF4
	087 Move X0, 0xCD3000
	088 Move X0, [X0+2440]
	089 Call 0x1C17CF4
	090 Move X0, 0xCFC000
	091 Move X0, [X0+1224]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X20+1563], W8
	095 Move [X31+24], X31
	096 Move X27, 0xCD6000
	097 Move W24, [X19]
	098 Move X27, [X27+640]
	099 Compare W24, 0
	100 JumpIfEqual {135}
	101 Move X8, 0xD0E000
	102 Move X9, 0xCD3000
	103 Move X8, [X8+3144]
	104 Move X9, [X9+2440]
	105 Move X21, [X19+32]
	106 Move X20, [X19+40]
	107 Move X23, [X8]
	108 Move X26, [X9]
	109 Compare X21, 0
	110 JumpIfNotEqual {119}
	111 Move X8, 0xCD3000
	112 Move X8, [X8+2760]
	113 Move X0, [X8]
	114 Move W1, W31
	115 Call 0x1C17D6C
	116 Move X21, X0
	117 Compare X0, 0
	118 JumpIfEqual {460}
	119 Move X10, 0xCD3000
	120 Move X8, [X21]
	121 Move X10, [X10+3952]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X10]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X21
	133 Move W2, W31
	134 Call 0x1C5D788
	135 Move X8, [X19+72]
	136 Move TEMP, 0
	137 Not TEMP
	138 Move W9, TEMP
	139 Move [X31+24], X8
	140 Move [X19+72], X31
	141 Move [X19], W9
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X21
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move [X31+8], X23
	150 Move [X31+16], X20
	151 Move X28, 0xCD3000
	152 Move X29, 0xCD3000
	153 Move X27, 0xCD5000
	154 Move X20, 0xD0E000
	155 Move X25, 0xCDC000
	156 Move X28, [X28+3608]
	157 Move X29, [X29+3960]
	158 Move X27, [X27+2600]
	159 Move X20, [X20+1984]
	160 Move X25, [X25+1824]
	161 Move X22, X0
	162 Move X0, X26
	163 Compare X22, 0
	164 JumpIfEqual {448}
	165 Move X8, [X22]
	166 Move X1, [X28]
	167 Move X21, X0
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move X0, X22
	178 Move W2, W31
	179 Call 0x1C5D788
	180 NotImplemented "Instruction LDRSW not yet implemented."
	181 Add X8, X8, X9
	182 Add X0, X8, 312
	183 Move X8, [X0]
	184 Move X1, [X0+8]
	185 Move X0, X22
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {227}
	191 Move X8, [X22]
	192 Move X1, [X29]
	193 NotImplemented "Instruction LDRH not yet implemented."
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move X0, X22
	203 Move W2, W31
	204 Call 0x1C5D788
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Add X8, X8, X9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X22
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move X23, X0
	213 Move X0, [X27]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X0, X23
	219 Move X1, X31
	220 Call Uri.EscapeDataString, X0
	221 Move X1, [X20]
	222 Move X3, [X25]
	223 Move X2, X0
	224 Move X0, X21
	225 Move X4, X31
	226 Call String.Concat, X0, X1, X2, X3
	227 Move X23, X31
	228 Move W20, 6
	229 Move X27, 0xCD6000
	230 Move X27, [X27+640]
	231 Move X25, [X31+16]
	232 Move TEMP, X24
	233 And TEMP, TEMP, -2147483648
	234 Compare TEMP, -2147483648
	235 JumpIfNotEqual {261}
	236 Compare X22, 0
	237 JumpIfEqual {261}
	238 Move X10, 0xCD3000
	239 Move X8, [X22]
	240 Move X10, [X10+3584]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X1, [X10]
	243 Compare X9, 0
	244 JumpIfEqual {251}
	245 Move X10, [X8+176]
	246 Add X10, X10, 8
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract X9, X9, 1
	250 Add X10, X10, 16
	251 Move X0, X22
	252 Move W2, W31
	253 Call 0x1C5D788
	254 NotImplemented "Instruction LDRSW not yet implemented."
	255 Add X8, X8, X9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X1, [X0+8]
	259 Move X0, X22
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Compare X23, 0
	262 JumpIfNotEqual {449}
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Compare W20, 0
	265 JumpIfNotEqual {434}
	266 Compare X25, 0
	267 JumpIfEqual {451}
	268 Move X0, [X25+32]
	269 Compare X0, 0
	270 JumpIfEqual {452}
	271 Move X1, X31
	272 Call Uri.get_AbsolutePath, X0
	273 Move X8, 0xCDC000
	274 Move X8, [X8+2264]
	275 Move X22, X0
	276 Move X0, [X8]
	277 Move W1, 1
	278 Call 0x1C17D6C
	279 Move X1, X0
	280 Compare X1, 0
	281 JumpIfEqual {453}
	282 Move W8, [X1+24]
	283 Compare W8, 0
	284 JumpIfEqual {454}
	285 Move W8, 47
	286 NotImplemented "Instruction STRH not yet implemented."
	287 Compare X22, 0
	288 JumpIfEqual {455}
	289 Move X0, X22
	290 Move X2, X31
	291 Call String.TrimEnd, X0, X1
	292 Move X1, [X31+8]
	293 Move X2, X31
	294 Call String.Concat, X0, X1
	295 Move X8, 0xCDC000
	296 Move X23, [X25+32]
	297 Move X8, [X8+928]
	298 Move X22, X0
	299 Move X0, [X8]
	300 Call 0x1C17F10
	301 Move X20, X0
	302 Move X1, X23
	303 Move X2, X31
	304 Call UriBuilder..ctor, X0, X1
	305 Compare X20, 0
	306 JumpIfEqual {456}
	307 Move X0, X20
	308 Move X1, X22
	309 Move X2, X31
	310 Call UriBuilder.set_Path, X0, X1
	311 Move X0, X20
	312 Move X1, X21
	313 Move X2, X31
	314 Call UriBuilder.set_Query, X0, X1
	315 Move X0, X20
	316 Move X1, X31
	317 Call UriBuilder.get_Uri, X0
	318 Move X8, 0xCFC000
	319 Move X9, 0xCD4000
	320 Move X8, [X8+1224]
	321 Move X9, [X9+1744]
	322 Move X20, X0
	323 Move X21, [X8]
	324 Move X0, [X9]
	325 Call 0x1C17F10
	326 Move X8, 0xCD4000
	327 Move X8, [X8+1728]
	328 Move X22, X0
	329 Move X1, [X8]
	330 Call Dictionary`2<Object, Object>..ctor, X0
	331 Move X8, 0xD0E000
	332 Move X1, [X19+48]
	333 Move X8, [X8+2008]
	334 Move X0, [X8]
	335 Move X2, X31
	336 Call String.Concat, X0, X1
	337 Compare X22, 0
	338 JumpIfEqual {457}
	339 Move X8, 0xD0E000
	340 Move X8, [X8+2000]
	341 Move X9, 0xCD4000
	342 Move X9, [X9+2064]
	343 Move X2, X0
	344 Move X1, [X8]
	345 Move X3, [X9]
	346 Move X0, X22
	347 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	348 Move X24, [X25+16]
	349 Compare X24, 0
	350 JumpIfEqual {458}
	351 Move X10, 0xD0E000
	352 Move W23, [X25+24]
	353 Move X8, [X24]
	354 Move X26, [X19+56]
	355 Move X25, [X19+64]
	356 Move X10, [X10+1976]
	357 NotImplemented "Instruction LDRH not yet implemented."
	358 Move X1, [X10]
	359 Compare X9, 0
	360 JumpIfEqual {367}
	361 Move X10, [X8+176]
	362 Add X10, X10, 8
	363 NotImplemented "Instruction LDUR not yet implemented."
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Subtract X9, X9, 1
	366 Add X10, X10, 16
	367 Move W2, 3
	368 Move X0, X24
	369 Call 0x1C5D788
	370 Move W9, [X10]
	371 Add W9, W9, 3
	372 Add X8, X8, W9
	373 Add X0, X8, 312
	374 Move X8, [X0]
	375 Move X9, [X0+8]
	376 Move X0, X24
	377 Move X1, X21
	378 Move X2, X20
	379 Move X3, X22
	380 Move X4, X31
	381 Move W5, W23
	382 Move X6, X26
	383 Move X7, X25
	384 Move [X31], X9
	385 NotImplemented "Instruction BLR not yet implemented."
	386 Compare X0, 0
	387 JumpIfEqual {459}
	388 Move X8, 0xCD6000
	389 Move X8, [X8+504]
	390 Move X1, [X8]
	391 Call Task`1<Object>.GetAwaiter, X0
	392 Move X8, 0xCD6000
	393 Move X8, [X8+496]
	394 Move [X31+24], X0
	395 Move X1, [X8]
	396 Add X0, X31, 24
	397 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	398 Move TEMP, X0
	399 And TEMP, TEMP, 1
	400 Compare TEMP, 1
	401 JumpIfNotEqual {419}
	402 Move X8, 0xCD6000
	403 Move X8, [X8+480]
	404 Add X0, X31, 24
	405 Move X1, [X8]
	406 Call TaskAwaiter`1<Object>.GetResult, X0
	407 Move TEMP, 1
	408 Not TEMP
	409 Move W8, TEMP
	410 Move [X19+8], W8
	411 Move X0, [X27]
	412 Move W8, [X0+224]
	413 Compare W8, 0
	414 JumpIfNotEqual {416}
	415 Call 0x1C17DFC
	416 Move X0, X19
	417 Move X1, X31
	418 Call AsyncTaskMethodBuilder.SetResult, X0
	419 Move [X19], W31
	420 Move X8, [X31+24]
	421 Move [X19+72], X8
	422 Move X0, [X27]
	423 Move W8, [X0+224]
	424 Compare W8, 0
	425 JumpIfNotEqual {427}
	426 Call 0x1C17DFC
	427 Move X8, 0xD0E000
	428 Move X8, [X8+3136]
	429 Add X0, X19, 8
	430 Move X3, [X8]
	431 Add X1, X31, 24
	432 Move X2, X19
	433 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	434 Move X20, [X31+112]
	435 Move X19, [X31+120]
	436 Move X22, [X31+96]
	437 Move X21, [X31+104]
	438 Move X24, [X31+80]
	439 Move X23, [X31+88]
	440 Move X26, [X31+64]
	441 Move X25, [X31+72]
	442 Move X28, [X31+48]
	443 Move X27, [X31+56]
	444 Move X29, [X31+32]
	445 Move X30, [X31+40]
	446 Add X31, X31, 128
	447 Return 
	448 Call 0x1C17F20
	449 Move X0, X23
	450 Call 0x1C17F18
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Call 0x1C17F28
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Call 0x1C17F20
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Move X20, X1
	462 Move X21, X0
	463 Move X21, X26
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Call 0x3EB2AD0
	466 Move X23, [X0]
	467 Call 0x3EB2AE0
	468 Move W20, W31
	469 Move X21, X0
	470 Move X20, X1
	471 Move X23, X31
	472 Move TEMP, X24
	473 And TEMP, TEMP, -2147483648
	474 Compare TEMP, -2147483648
	475 JumpIfNotEqual {501}
	476 Compare X22, 0
	477 JumpIfEqual {501}
	478 Move X10, 0xCD3000
	479 Move X8, [X22]
	480 Move X10, [X10+3584]
	481 NotImplemented "Instruction LDRH not yet implemented."
	482 Move X1, [X10]
	483 Compare X9, 0
	484 JumpIfEqual {491}
	485 Move X10, [X8+176]
	486 Add X10, X10, 8
	487 NotImplemented "Instruction LDUR not yet implemented."
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Subtract X9, X9, 1
	490 Add X10, X10, 16
	491 Move X0, X22
	492 Move W2, W31
	493 Call 0x1C5D788
	494 NotImplemented "Instruction LDRSW not yet implemented."
	495 Add X8, X8, X9
	496 Add X0, X8, 312
	497 Move X8, [X0]
	498 Move X1, [X0+8]
	499 Move X0, X22
	500 NotImplemented "Instruction BLR not yet implemented."
	501 Compare X23, 0
	502 JumpIfNotEqual {542}
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move X0, X21
	505 Call 0x3EB2AD0
	506 Move X20, X0
	507 Move X0, 0xCD3000
	508 Move X0, [X0+2000]
	509 Call 0x1C17D08
	510 Move X8, [X20]
	511 Move X1, [X8]
	512 Call 0x1C18270
	513 Move TEMP, X0
	514 And TEMP, TEMP, 1
	515 Compare TEMP, 1
	516 JumpIfNotEqual {534}
	517 Move X20, [X20]
	518 Call 0x3EB2AE0
	519 Move TEMP, 1
	520 Not TEMP
	521 Move W8, TEMP
	522 Move [X19+8], W8
	523 Move X0, 0xCD6000
	524 Move X0, [X0+640]
	525 Call 0x1C17D08
	526 Move W8, [X0+224]
	527 Compare W8, 0
	528 JumpIfNotEqual {530}
	529 Call 0x1C17DFC
	530 Move X0, X19
	531 Move X1, X20
	532 Move X2, X31
	533 Call AsyncTaskMethodBuilder.SetException, X0, X1
	534 Move W0, 8
	535 Call 0x3EB2AF0
	536 Move X8, [X20]
	537 Move [X0], X8
	538 Move X1, 0xA94000
	539 Add X1, X1, 3672
	540 Move X2, X31
	541 Call 0x3EB2B00
	542 Move X0, X23
	543 Call 0x1C17F18
	544 Move X20, X1
	545 Move X21, X0
	546 Move TEMP, X24
	547 And TEMP, TEMP, -2147483648
	548 Compare TEMP, -2147483648
	549 JumpIfEqual {476}
	550 Move X21, X0
	551 Call 0x3EB2AE0
	552 Move X0, X21
	553 Call 0x1D2D690
	554 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03421F44 LDRH W9, [X8 + 0x12E]
	0x03421F48 LDR X1, [X10]
	0x03421F4C CBZ X9, 0x3421F70
	0x03421F50 LDR X10, [X8 + 0xB0]
	0x03421F54 ADD X10, X10, 0x8
	0x03421F58 LDUR X11, [X10 - 0x8]
	0x03421F5C CMP X11, X1
	0x03421F60 B.EQ 0x3421F80
	0x03421F64 SUBS X9, X9, 0x1
	0x03421F68 ADD X10, X10, 0x10
	0x03421F6C B.NE 0x3421F58
	0x03421F70 MOV X0, X22
	0x03421F74 MOV W2, W31
	0x03421F78 BL 0x1C5C788
	0x03421F7C B 0x3421F8C
	0x03421F80 LDRSW X9, [X10]
	0x03421F84 ADD X8, X8, X9, 0x4, LSL
	0x03421F88 ADD X0, X8, 0x138
	0x03421F8C LDP X8, X1, [X0]
	0x03421F90 MOV X0, X22
	0x03421F94 BLR X8
	0x03421F98 CBNZ X23, 0x342227C
	0x03421F9C CMP W20, 0x9
	0x03421FA0 B.EQ 0x3421FA8
	0x03421FA4 CBNZ W20, 0x342220C
	0x03421FA8 CBZ X25, 0x3422284

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFBD000
	007 Move X22, 0xCD6000
	008 Move W8, [X21+1564]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD6000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1564], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

