Type: Nakama.ApiClient/<DeleteAccountAsync>d__8

Method: System.Void MoveNext()

Disassembly:
	0x0341F9F0 ADRP X0, 0xCD4000
	0x0341F9F4 LDR X0, [X0 + 0x7D0]
	0x0341F9F8 BL 0x1C16D08
	0x0341F9FC LDR X8, [X20]
	0x0341FA00 LDR X1, [X8]
	0x0341FA04 BL 0x1C17270
	0x0341FA08 TBZ X0, 0x0, 0x341FA48
	0x0341FA0C LDR X20, [X20]
	0x0341FA10 BL 0x3EB1AE0
	0x0341FA14 MOVN W8, 0x1
	0x0341FA18 STR W8, [X19], #0x8
	0x0341FA1C ADRP X0, 0xCD7000
	0x0341FA20 LDR X0, [X0 + 0x280]
	0x0341FA24 BL 0x1C16D08
	0x0341FA28 LDR W8, [X0 + 0xE0]
	0x0341FA2C CBNZ W8, 0x341FA34
	0x0341FA30 BL 0x1C16DFC
	0x0341FA34 MOV X0, X19
	0x0341FA38 MOV X1, X20
	0x0341FA3C MOV X2, X31
	0x0341FA40 BL 0x32C4908
	0x0341FA44 B 0x341F778
	0x0341FA48 MOVZ W0, 0x8
	0x0341FA4C BL 0x3EB1AF0
	0x0341FA50 LDR X8, [X20]
	0x0341FA54 STR X8, [X0]
	0x0341FA58 ADRP X1, 0xA95000
	0x0341FA5C ADD X1, X1, 0xE58
	0x0341FA60 MOV X2, X31
	0x0341FA64 BL 0x3EB1B00
	0x0341FA68 MOV X0, X24
	0x0341FA6C BL 0x1C16F18
	0x0341FA70 MOV X22, X0
	0x0341FA74 STR X1, [X31 + 0x10]
	0x0341FA78 TBNZ X26, 0x1F, 0x341F970
	0x0341FA7C B 0x341F9D4
	0x0341FA80 MOV X22, X0
	0x0341FA84 BL 0x3EB1AE0
	0x0341FA88 MOV X0, X22
	0x0341FA8C BL 0x1D2C690
	0x0341FA90 BL 0x1990590
	0x0341FA94 STR X30, [X31 - 0x30]!
	0x0341FA98 STP X22, X21, [X31 + 0x10]
	0x0341FA9C STP X20, X19, [X31 + 0x20]
	0x0341FAA0 ADRP X21, 0xFBE000
	0x0341FAA4 ADRP X22, 0xCD7000
	0x0341FAA8 LDRB W8, [X21 + 0x616]
	0x0341FAAC LDR X22, [X22 + 0x280]
	0x0341FAB0 MOV X19, X1
	0x0341FAB4 MOV X20, X0
	0x0341FAB8 TBNZ X8, 0x0, 0x341FAD0
	0x0341FABC ADRP X0, 0xCD7000
	0x0341FAC0 LDR X0, [X0 + 0x280]
	0x0341FAC4 BL 0x1C16CF4
	0x0341FAC8 MOVZ W8, 0x1
	0x0341FACC STRB W8, [X21 + 0x616]
	0x0341FAD0 LDR X0, [X22]
	0x0341FAD4 LDR W8, [X0 + 0xE0]
	0x0341FAD8 CBNZ W8, 0x341FAE0
	0x0341FADC BL 0x1C16DFC
	0x0341FAE0 ADD X0, X20, 0x8
	0x0341FAE4 MOV X1, X19
	0x0341FAE8 LDP X20, X19, [X31 + 0x20]
	0x0341FAEC LDP X22, X21, [X31 + 0x10]
	0x0341FAF0 MOV X2, X31
	0x0341FAF4 LDR X30, [X31], #0x30
	0x0341FAF8 B 0x32C477C
	0x0341FAFC SUB X31, X31, 0x60
	0x0341FB00 STP X30, X27, [X31 + 0x10]
	0x0341FB04 STP X26, X25, [X31 + 0x20]
	0x0341FB08 STP X24, X23, [X31 + 0x30]
	0x0341FB0C STP X22, X21, [X31 + 0x40]
	0x0341FB10 STP X20, X19, [X31 + 0x50]
	0x0341FB14 ADRP X20, 0xFBE000
	0x0341FB18 LDRB W8, [X20 + 0x617]
	0x0341FB1C MOV X19, X0
	0x0341FB20 TBNZ X8, 0x0, 0x341FC04
	0x0341FB24 ADRP X0, 0xD0F000
	0x0341FB28 LDR X0, [X0 + 0xC00]
	0x0341FB2C BL 0x1C16CF4
	0x0341FB30 ADRP X0, 0xCD7000
	0x0341FB34 LDR X0, [X0 + 0x280]
	0x0341FB38 BL 0x1C16CF4
	0x0341FB3C ADRP X0, 0xCDD000
	0x0341FB40 LDR X0, [X0 + 0x8D8]
	0x0341FB44 BL 0x1C16CF4
	0x0341FB48 ADRP X0, 0xCD5000
	0x0341FB4C LDR X0, [X0 + 0x810]
	0x0341FB50 BL 0x1C16CF4
	0x0341FB54 ADRP X0, 0xCD5000
	0x0341FB58 LDR X0, [X0 + 0x6C0]
	0x0341FB5C BL 0x1C16CF4
	0x0341FB60 ADRP X0, 0xCD5000
	0x0341FB64 LDR X0, [X0 + 0x6D0]
	0x0341FB68 BL 0x1C16CF4
	0x0341FB6C ADRP X0, 0xD0F000
	0x0341FB70 LDR X0, [X0 + 0x7B8]
	0x0341FB74 BL 0x1C16CF4
	0x0341FB78 ADRP X0, 0xCD7000
	0x0341FB7C LDR X0, [X0 + 0x1E0]
	0x0341FB80 BL 0x1C16CF4
	0x0341FB84 ADRP X0, 0xCD7000
	0x0341FB88 LDR X0, [X0 + 0x1F0]
	0x0341FB8C BL 0x1C16CF4
	0x0341FB90 ADRP X0, 0xCD7000
	0x0341FB94 LDR X0, [X0 + 0x1F8]
	0x0341FB98 BL 0x1C16CF4
	0x0341FB9C ADRP X0, 0xCDD000
	0x0341FBA0 LDR X0, [X0 + 0x3A0]
	0x0341FBA4 BL 0x1C16CF4
	0x0341FBA8 ADRP X0, 0xCD6000
	0x0341FBAC LDR X0, [X0 + 0xA28]
	0x0341FBB0 BL 0x1C16CF4
	0x0341FBB4 ADRP X0, 0xD0F000
	0x0341FBB8 LDR X0, [X0 + 0xC08]
	0x0341FBBC BL 0x1C16CF4
	0x0341FBC0 ADRP X0, 0xD0F000
	0x0341FBC4 LDR X0, [X0 + 0x800]
	0x0341FBC8 BL 0x1C16CF4
	0x0341FBCC ADRP X0, 0xD0F000
	0x0341FBD0 LDR X0, [X0 + 0x7D0]
	0x0341FBD4 BL 0x1C16CF4
	0x0341FBD8 ADRP X0, 0xD0F000
	0x0341FBDC LDR X0, [X0 + 0x7D8]
	0x0341FBE0 BL 0x1C16CF4
	0x0341FBE4 ADRP X0, 0xCD4000
	0x0341FBE8 LDR X0, [X0 + 0x988]
	0x0341FBEC BL 0x1C16CF4
	0x0341FBF0 ADRP X0, 0xCFD000
	0x0341FBF4 LDR X0, [X0 + 0x4C8]
	0x0341FBF8 BL 0x1C16CF4
	0x0341FBFC MOVZ W8, 0x1
	0x0341FC00 STRB W8, [X20 + 0x617]
	0x0341FC04 STR X31, [X31 + 0x8]
	0x0341FC08 ADRP X27, 0xCD7000
	0x0341FC0C LDR W8, [X19]
	0x0341FC10 LDR X27, [X27 + 0x280]
	0x0341FC14 CBZ W8, 0x341FE08
	0x0341FC18 LDR X21, [X19 + 0x20]
	0x0341FC1C CBZ X21, 0x341FF1C
	0x0341FC20 ADRP X8, 0xCD6000
	0x0341FC24 LDR X8, [X8 + 0xA28]
	0x0341FC28 LDR X0, [X8]
	0x0341FC2C ADRP X8, 0xD0F000
	0x0341FC30 LDR X8, [X8 + 0xC08]
	0x0341FC34 LDR X24, [X19 + 0x28]
	0x0341FC38 LDR W9, [X0 + 0xE0]
	0x0341FC3C LDR X20, [X8]
	0x0341FC40 CBNZ W9, 0x341FC48
	0x0341FC44 BL 0x1C16DFC
	0x0341FC48 MOV X0, X21
	0x0341FC4C MOV X1, X31
	0x0341FC50 BL 0x3624D20
	0x0341FC54 CBZ X20, 0x341FF64
	0x0341FC58 ADRP X8, 0xD0F000
	0x0341FC5C LDR X8, [X8 + 0x800]
	0x0341FC60 MOV X2, X0
	0x0341FC64 LDR X1, [X8]
	0x0341FC68 MOV X0, X20
	0x0341FC6C MOV X3, X31
	0x0341FC70 BL 0x32293BC
	0x0341FC74 CBZ X24, 0x341FF68
	0x0341FC78 MOV X21, X0
	0x0341FC7C LDR X0, [X24 + 0x20]
	0x0341FC80 CBZ X0, 0x341FF6C
	0x0341FC84 ADRP X8, 0xCD4000
	0x0341FC88 LDR X8, [X8 + 0x988]
	0x0341FC8C LDR X20, [X8]
	0x0341FC90 MOV X1, X31
	0x0341FC94 BL 0x361B448
	0x0341FC98 ADRP X8, 0xCDD000
	0x0341FC9C LDR X8, [X8 + 0x8D8]
	0x0341FCA0 MOV X22, X0
	0x0341FCA4 LDR X0, [X8]
	0x0341FCA8 MOVZ W1, 0x1
	0x0341FCAC BL 0x1C16D6C
	0x0341FCB0 MOV X1, X0
	0x0341FCB4 CBZ X1, 0x341FF70
	0x0341FCB8 LDR W8, [X1 + 0x18]
	0x0341FCBC CBZ W8, 0x341FF74
	0x0341FCC0 MOVZ W8, 0x2F
	0x0341FCC4 STRH W8, [X1 + 0x20]
	0x0341FCC8 CBZ X22, 0x341FF78
	0x0341FCCC MOV X0, X22
	0x0341FCD0 MOV X2, X31
	0x0341FCD4 BL 0x322BC58
	0x0341FCD8 MOV X1, X21
	0x0341FCDC MOV X2, X31
	0x0341FCE0 BL 0x321B938
	0x0341FCE4 ADRP X8, 0xCDD000
	0x0341FCE8 LDR X8, [X8 + 0x3A0]
	0x0341FCEC MOV X22, X0
	0x0341FCF0 LDR X23, [X24 + 0x20]
	0x0341FCF4 LDR X0, [X8]
	0x0341FCF8 BL 0x1C16F10
	0x0341FCFC MOV X21, X0
	0x0341FD00 MOV X1, X23
	0x0341FD04 MOV X2, X31
	0x0341FD08 BL 0x36281F8
	0x0341FD0C CBZ X21, 0x341FF7C
	0x0341FD10 MOV X0, X21
	0x0341FD14 MOV X1, X22
	0x0341FD18 MOV X2, X31
	0x0341FD1C BL 0x36288CC
	0x0341FD20 MOV X0, X21
	0x0341FD24 MOV X1, X20
	0x0341FD28 MOV X2, X31
	0x0341FD2C BL 0x3628980
	0x0341FD30 MOV X0, X21
	0x0341FD34 MOV X1, X31
	0x0341FD38 BL 0x3628A38
	0x0341FD3C ADRP X8, 0xCFD000
	0x0341FD40 ADRP X9, 0xCD5000
	0x0341FD44 LDR X8, [X8 + 0x4C8]
	0x0341FD48 LDR X9, [X9 + 0x6D0]
	0x0341FD4C MOV X20, X0
	0x0341FD50 LDR X21, [X8]
	0x0341FD54 LDR X0, [X9]
	0x0341FD58 BL 0x1C16F10
	0x0341FD5C ADRP X8, 0xCD5000
	0x0341FD60 LDR X8, [X8 + 0x6C0]
	0x0341FD64 MOV X22, X0
	0x0341FD68 LDR X1, [X8]
	0x0341FD6C BL 0x2AA4804
	0x0341FD70 ADRP X8, 0xD0F000
	0x0341FD74 LDR X8, [X8 + 0x7D8]
	0x0341FD78 LDR X1, [X19 + 0x30]
	0x0341FD7C LDR X0, [X8]
	0x0341FD80 MOV X2, X31
	0x0341FD84 BL 0x321B938
	0x0341FD88 CBZ X22, 0x341FF80
	0x0341FD8C ADRP X8, 0xD0F000
	0x0341FD90 LDR X8, [X8 + 0x7D0]
	0x0341FD94 ADRP X9, 0xCD5000
	0x0341FD98 LDR X9, [X9 + 0x810]
	0x0341FD9C MOV X2, X0
	0x0341FDA0 LDR X1, [X8]
	0x0341FDA4 LDR X3, [X9]
	0x0341FDA8 MOV X0, X22
	0x0341FDAC BL 0x2AA5098
	0x0341FDB0 LDR X23, [X24 + 0x10]
	0x0341FDB4 CBZ X23, 0x341FF84
	0x0341FDB8 ADRP X10, 0xD0F000
	0x0341FDBC LDR X10, [X10 + 0x7B8]
	0x0341FDC0 LDR X8, [X23]
	0x0341FDC4 LDR W25, [X24 + 0x18]
	0x0341FDC8 LDP X26, X24, [X19 + 0x38]
	0x0341FDCC LDR X1, [X10]
	0x0341FDD0 LDRH W9, [X8 + 0x12E]
	0x0341FDD4 CBZ X9, 0x341FDF8
	0x0341FDD8 LDR X10, [X8 + 0xB0]
	0x0341FDDC ADD X10, X10, 0x8
	0x0341FDE0 LDUR X11, [X10 - 0x8]
	0x0341FDE4 CMP X11, X1
	0x0341FDE8 B.EQ 0x341FE20
	0x0341FDEC SUBS X9, X9, 0x1
	0x0341FDF0 ADD X10, X10, 0x10
	0x0341FDF4 B.NE 0x341FDE0
	0x0341FDF8 MOVZ W2, 0x3
	0x0341FDFC MOV X0, X23
	0x0341FE00 BL 0x1C5C788
	0x0341FE04 B 0x341FE30
	0x0341FE08 LDR X8, [X19 + 0x48]
	0x0341FE0C MOVN W9, 0x0
	0x0341FE10 STR X8, [X31 + 0x8]
	0x0341FE14 STR X31, [X19 + 0x48]
	0x0341FE18 STR W9, [X19]
	0x0341FE1C B 0x341FE8C
	0x0341FE20 LDR W9, [X10]
	0x0341FE24 ADD W9, W9, 0x3
	0x0341FE28 ADD X8, X8, W9, 0x4, SXTW
	0x0341FE2C ADD X0, X8, 0x138
	0x0341FE30 LDP X8, X9, [X0]
	0x0341FE34 MOV X0, X23
	0x0341FE38 MOV X1, X21
	0x0341FE3C MOV X2, X20
	0x0341FE40 MOV X3, X22
	0x0341FE44 MOV X4, X31
	0x0341FE48 MOV W5, W25
	0x0341FE4C MOV X6, X26
	0x0341FE50 MOV X7, X24
	0x0341FE54 STR X9, [X31]
	0x0341FE58 BLR X8
	0x0341FE5C CBZ X0, 0x341FF88
	0x0341FE60 ADRP X8, 0xCD7000
	0x0341FE64 LDR X8, [X8 + 0x1F8]
	0x0341FE68 LDR X1, [X8]
	0x0341FE6C BL 0x269F5D0
	0x0341FE70 ADRP X8, 0xCD7000
	0x0341FE74 LDR X8, [X8 + 0x1F0]
	0x0341FE78 STR X0, [X31 + 0x8]
	0x0341FE7C LDR X1, [X8]
	0x0341FE80 ADD X0, X31, 0x8
	0x0341FE84 BL 0x2677430
	0x0341FE88 TBZ X0, 0x0, 0x341FEC8
	0x0341FE8C ADRP X8, 0xCD7000
	0x0341FE90 LDR X8, [X8 + 0x1E0]
	0x0341FE94 ADD X0, X31, 0x8
	0x0341FE98 LDR X1, [X8]
	0x0341FE9C BL 0x2677474
	0x0341FEA0 MOVN W8, 0x1
	0x0341FEA4 STR W8, [X19], #0x8
	0x0341FEA8 LDR X0, [X27]
	0x0341FEAC LDR W8, [X0 + 0xE0]
	0x0341FEB0 CBNZ W8, 0x341FEB8
	0x0341FEB4 BL 0x1C16DFC
	0x0341FEB8 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xFBF000
	013 Move W8, [X20+1555]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {69}
	019 Move X0, 0xD10000
	020 Move X0, [X0+3048]
	021 Call 0x1C17CF4
	022 Move X0, 0xCD8000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xCDE000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xCD6000
	029 Move X0, [X0+2064]
	030 Call 0x1C17CF4
	031 Move X0, 0xCD6000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X0, 0xCD6000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0xD10000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0xCD8000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0xCD8000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0xCD8000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0xCDE000
	050 Move X0, [X0+928]
	051 Call 0x1C17CF4
	052 Move X0, 0xD10000
	053 Move X0, [X0+2000]
	054 Call 0x1C17CF4
	055 Move X0, 0xD10000
	056 Move X0, [X0+2008]
	057 Call 0x1C17CF4
	058 Move X0, 0xD10000
	059 Move X0, [X0+3056]
	060 Call 0x1C17CF4
	061 Move X0, 0xCD5000
	062 Move X0, [X0+2440]
	063 Call 0x1C17CF4
	064 Move X0, 0xCFE000
	065 Move X0, [X0+1224]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X20+1555], W8
	069 Move [X31+8], X31
	070 Move X27, 0xCD8000
	071 Move W8, [X19]
	072 Move X27, [X27+640]
	073 Compare W8, 0
	074 JumpIfEqual {186}
	075 Move X24, [X19+32]
	076 Compare X24, 0
	077 JumpIfEqual {269}
	078 Move X0, [X24+32]
	079 Compare X0, 0
	080 JumpIfEqual {270}
	081 Move X8, 0xD10000
	082 Move X9, 0xCD5000
	083 Move X8, [X8+3056]
	084 Move X9, [X9+2440]
	085 Move X21, [X8]
	086 Move X20, [X9]
	087 Move X1, X31
	088 Call Uri.get_AbsolutePath, X0
	089 Move X8, 0xCDE000
	090 Move X8, [X8+2264]
	091 Move X22, X0
	092 Move X0, [X8]
	093 Move W1, 1
	094 Call 0x1C17D6C
	095 Move X1, X0
	096 Compare X1, 0
	097 JumpIfEqual {271}
	098 Move W8, [X1+24]
	099 Compare W8, 0
	100 JumpIfEqual {272}
	101 Move W8, 47
	102 NotImplemented "Instruction STRH not yet implemented."
	103 Compare X22, 0
	104 JumpIfEqual {273}
	105 Move X0, X22
	106 Move X2, X31
	107 Call String.TrimEnd, X0, X1
	108 Move X1, X21
	109 Move X2, X31
	110 Call String.Concat, X0, X1
	111 Move X8, 0xCDE000
	112 Move X8, [X8+928]
	113 Move X22, X0
	114 Move X23, [X24+32]
	115 Move X0, [X8]
	116 Call 0x1C17F10
	117 Move X21, X0
	118 Move X1, X23
	119 Move X2, X31
	120 Call UriBuilder..ctor, X0, X1
	121 Compare X21, 0
	122 JumpIfEqual {274}
	123 Move X0, X21
	124 Move X1, X22
	125 Move X2, X31
	126 Call UriBuilder.set_Path, X0, X1
	127 Move X0, X21
	128 Move X1, X20
	129 Move X2, X31
	130 Call UriBuilder.set_Query, X0, X1
	131 Move X0, X21
	132 Move X1, X31
	133 Call UriBuilder.get_Uri, X0
	134 Move X8, 0xCFE000
	135 Move X9, 0xCD6000
	136 Move X8, [X8+1224]
	137 Move X9, [X9+1744]
	138 Move X20, X0
	139 Move X21, [X8]
	140 Move X0, [X9]
	141 Call 0x1C17F10
	142 Move X8, 0xCD6000
	143 Move X8, [X8+1728]
	144 Move X22, X0
	145 Move X1, [X8]
	146 Call Dictionary`2<Object, Object>..ctor, X0
	147 Move X8, 0xD10000
	148 Move X8, [X8+2008]
	149 Move X1, [X19+40]
	150 Move X0, [X8]
	151 Move X2, X31
	152 Call String.Concat, X0, X1
	153 Compare X22, 0
	154 JumpIfEqual {275}
	155 Move X8, 0xD10000
	156 Move X8, [X8+2000]
	157 Move X9, 0xCD6000
	158 Move X9, [X9+2064]
	159 Move X2, X0
	160 Move X1, [X8]
	161 Move X3, [X9]
	162 Move X0, X22
	163 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	164 Move X23, [X24+16]
	165 Compare X23, 0
	166 JumpIfEqual {276}
	167 Move X10, 0xD10000
	168 Move X10, [X10+1976]
	169 Move X8, [X23]
	170 Move W25, [X24+24]
	171 Move X26, [X19+48]
	172 Move X24, [X19+56]
	173 Move X1, [X10]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 3
	184 Move X0, X23
	185 Call 0x1C5D788
	186 Move X8, [X19+64]
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W9, TEMP
	190 Move [X31+8], X8
	191 Move [X19+64], X31
	192 Move [X19], W9
	193 Move W9, [X10]
	194 Add W9, W9, 3
	195 Add X8, X8, W9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X9, [X0+8]
	199 Move X0, X23
	200 Move X1, X21
	201 Move X2, X20
	202 Move X3, X22
	203 Move X4, X31
	204 Move W5, W25
	205 Move X6, X26
	206 Move X7, X24
	207 Move [X31], X9
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {277}
	211 Move X8, 0xCD8000
	212 Move X8, [X8+504]
	213 Move X1, [X8]
	214 Call Task`1<Object>.GetAwaiter, X0
	215 Move X8, 0xCD8000
	216 Move X8, [X8+496]
	217 Move [X31+8], X0
	218 Move X1, [X8]
	219 Add X0, X31, 8
	220 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {242}
	225 Move X8, 0xCD8000
	226 Move X8, [X8+480]
	227 Add X0, X31, 8
	228 Move X1, [X8]
	229 Call TaskAwaiter`1<Object>.GetResult, X0
	230 Move TEMP, 1
	231 Not TEMP
	232 Move W8, TEMP
	233 Move [X19+8], W8
	234 Move X0, [X27]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X19
	240 Move X1, X31
	241 Call AsyncTaskMethodBuilder.SetResult, X0
	242 Move [X19], W31
	243 Move X8, [X31+8]
	244 Move [X19+64], X8
	245 Move X0, [X27]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X8, 0xD10000
	251 Move X8, [X8+3048]
	252 Add X0, X19, 8
	253 Move X3, [X8]
	254 Add X1, X31, 8
	255 Move X2, X19
	256 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	257 Move X20, [X31+80]
	258 Move X19, [X31+88]
	259 Move X22, [X31+64]
	260 Move X21, [X31+72]
	261 Move X24, [X31+48]
	262 Move X23, [X31+56]
	263 Move X26, [X31+32]
	264 Move X25, [X31+40]
	265 Move X30, [X31+16]
	266 Move X27, [X31+24]
	267 Add X31, X31, 96
	268 Return 
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Call 0x1C17F28
	273 Call 0x1C17F20
	274 Call 0x1C17F20
	275 Call 0x1C17F20
	276 Call 0x1C17F20
	277 Call 0x1C17F20
	278 Move X20, X0
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X0, X20
	281 Call 0x3EB2AD0
	282 Move X20, X0
	283 Move X0, 0xCD5000
	284 Move X0, [X0+2000]
	285 Call 0x1C17D08
	286 Move X8, [X20]
	287 Move X1, [X8]
	288 Call 0x1C18270
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {310}
	293 Move X20, [X20]
	294 Call 0x3EB2AE0
	295 Move TEMP, 1
	296 Not TEMP
	297 Move W8, TEMP
	298 Move [X19+8], W8
	299 Move X0, 0xCD8000
	300 Move X0, [X0+640]
	301 Call 0x1C17D08
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X0, X19
	307 Move X1, X20
	308 Move X2, X31
	309 Call AsyncTaskMethodBuilder.SetException, X0, X1
	310 Move W0, 8
	311 Call 0x3EB2AF0
	312 Move X8, [X20]
	313 Move [X0], X8
	314 Move X1, 0xA96000
	315 Add X1, X1, 3672
	316 Move X2, X31
	317 Call 0x3EB2B00
	318 Move X20, X0
	319 Call 0x3EB2AE0
	320 Move X0, X20
	321 Call 0x1D2D690
	322 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0341FEBC MOV X1, X31
	0x0341FEC0 BL 0x32C4864
	0x0341FEC4 B 0x341FF00
	0x0341FEC8 STR W31, [X19]
	0x0341FECC LDR X8, [X31 + 0x8]
	0x0341FED0 STR X8, [X19 + 0x48]
	0x0341FED4 LDR X0, [X27]
	0x0341FED8 LDR W8, [X0 + 0xE0]
	0x0341FEDC CBNZ W8, 0x341FEE4
	0x0341FEE0 BL 0x1C16DFC
	0x0341FEE4 ADRP X8, 0xD0F000
	0x0341FEE8 LDR X8, [X8 + 0xC00]
	0x0341FEEC ADD X0, X19, 0x8
	0x0341FEF0 LDR X3, [X8]
	0x0341FEF4 ADD X1, X31, 0x8
	0x0341FEF8 MOV X2, X19
	0x0341FEFC BL 0x2186088
	0x0341FF00 LDP X20, X19, [X31 + 0x50]
	0x0341FF04 LDP X22, X21, [X31 + 0x40]
	0x0341FF08 LDP X24, X23, [X31 + 0x30]
	0x0341FF0C LDP X26, X25, [X31 + 0x20]
	0x0341FF10 LDP X30, X27, [X31 + 0x10]
	0x0341FF14 ADD X31, X31, 0x60
	0x0341FF18 RET
	0x0341FF1C ADRP X0, 0xCDC000
	0x0341FF20 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFBF000
	007 Move X22, 0xCD8000
	008 Move W8, [X21+1556]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD8000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1556], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

