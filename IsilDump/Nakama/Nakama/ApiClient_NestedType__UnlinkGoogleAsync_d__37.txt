Type: Nakama.ApiClient/<UnlinkGoogleAsync>d__37

Method: System.Void MoveNext()

Disassembly:
	0x0343A234 BL 0x1C16F28
	0x0343A238 BL 0x1C16F20
	0x0343A23C BL 0x1C16F20
	0x0343A240 BL 0x1C16F20
	0x0343A244 BL 0x1C16F20
	0x0343A248 BL 0x1C16F20
	0x0343A24C BL 0x1C16F20
	0x0343A250 B 0x343A2B0
	0x0343A254 B 0x343A2B0
	0x0343A258 B 0x343A2B0
	0x0343A25C B 0x343A2B0
	0x0343A260 B 0x343A2B0
	0x0343A264 B 0x343A2B0
	0x0343A268 B 0x343A2B0
	0x0343A26C B 0x343A2B0
	0x0343A270 B 0x343A2B0
	0x0343A274 B 0x343A2B0
	0x0343A278 B 0x343A2B0
	0x0343A27C B 0x343A2B0
	0x0343A280 B 0x343A2B0
	0x0343A284 B 0x343A2B0
	0x0343A288 B 0x343A2B0
	0x0343A28C B 0x343A2B0
	0x0343A290 B 0x343A2B0
	0x0343A294 B 0x343A2B0
	0x0343A298 B 0x343A2B0
	0x0343A29C B 0x343A2B0
	0x0343A2A0 B 0x343A2B0
	0x0343A2A4 B 0x343A2B0
	0x0343A2A8 B 0x343A2B0
	0x0343A2AC B 0x343A2B0
	0x0343A2B0 MOV X20, X0
	0x0343A2B4 CMP W1, 0x1
	0x0343A2B8 B.NE 0x343A348
	0x0343A2BC MOV X0, X20
	0x0343A2C0 BL 0x3EB1AD0
	0x0343A2C4 MOV X20, X0
	0x0343A2C8 ADRP X0, 0xCB9000
	0x0343A2CC LDR X0, [X0 + 0x7D0]
	0x0343A2D0 BL 0x1C16D08
	0x0343A2D4 LDR X8, [X20]
	0x0343A2D8 LDR X1, [X8]
	0x0343A2DC BL 0x1C17270
	0x0343A2E0 TBZ X0, 0x0, 0x343A320
	0x0343A2E4 LDR X20, [X20]
	0x0343A2E8 BL 0x3EB1AE0
	0x0343A2EC MOVN W8, 0x1
	0x0343A2F0 STR W8, [X19], #0x8
	0x0343A2F4 ADRP X0, 0xCBC000
	0x0343A2F8 LDR X0, [X0 + 0x280]
	0x0343A2FC BL 0x1C16D08
	0x0343A300 LDR W8, [X0 + 0xE0]
	0x0343A304 CBNZ W8, 0x343A30C
	0x0343A308 BL 0x1C16DFC
	0x0343A30C MOV X0, X19
	0x0343A310 MOV X1, X20
	0x0343A314 MOV X2, X31
	0x0343A318 BL 0x32C4908
	0x0343A31C B 0x343A1C0
	0x0343A320 MOVZ W0, 0x8
	0x0343A324 BL 0x3EB1AF0
	0x0343A328 LDR X8, [X20]
	0x0343A32C STR X8, [X0]
	0x0343A330 ADRP X1, 0xA7A000
	0x0343A334 ADD X1, X1, 0xE58
	0x0343A338 MOV X2, X31
	0x0343A33C BL 0x3EB1B00
	0x0343A340 MOV X20, X0
	0x0343A344 BL 0x3EB1AE0
	0x0343A348 MOV X0, X20
	0x0343A34C BL 0x1D2C690
	0x0343A350 BL 0x1990590
	0x0343A354 STR X30, [X31 - 0x30]!
	0x0343A358 STP X22, X21, [X31 + 0x10]
	0x0343A35C STP X20, X19, [X31 + 0x20]
	0x0343A360 ADRP X21, 0xFA3000
	0x0343A364 ADRP X22, 0xCBC000
	0x0343A368 LDRB W8, [X21 + 0x688]
	0x0343A36C LDR X22, [X22 + 0x280]
	0x0343A370 MOV X19, X1
	0x0343A374 MOV X20, X0
	0x0343A378 TBNZ X8, 0x0, 0x343A390
	0x0343A37C ADRP X0, 0xCBC000
	0x0343A380 LDR X0, [X0 + 0x280]
	0x0343A384 BL 0x1C16CF4
	0x0343A388 MOVZ W8, 0x1
	0x0343A38C STRB W8, [X21 + 0x688]
	0x0343A390 LDR X0, [X22]
	0x0343A394 LDR W8, [X0 + 0xE0]
	0x0343A398 CBNZ W8, 0x343A3A0
	0x0343A39C BL 0x1C16DFC
	0x0343A3A0 ADD X0, X20, 0x8
	0x0343A3A4 MOV X1, X19
	0x0343A3A8 LDP X20, X19, [X31 + 0x20]
	0x0343A3AC LDP X22, X21, [X31 + 0x10]
	0x0343A3B0 MOV X2, X31
	0x0343A3B4 LDR X30, [X31], #0x30
	0x0343A3B8 B 0x32C477C
	0x0343A3BC SUB X31, X31, 0x70
	0x0343A3C0 STR X30, [X31 + 0x10]
	0x0343A3C4 STP X28, X27, [X31 + 0x20]
	0x0343A3C8 STP X26, X25, [X31 + 0x30]
	0x0343A3CC STP X24, X23, [X31 + 0x40]
	0x0343A3D0 STP X22, X21, [X31 + 0x50]
	0x0343A3D4 STP X20, X19, [X31 + 0x60]
	0x0343A3D8 ADRP X20, 0xFA3000
	0x0343A3DC LDRB W8, [X20 + 0x689]
	0x0343A3E0 MOV X19, X0
	0x0343A3E4 TBNZ X8, 0x0, 0x343A4C8
	0x0343A3E8 ADRP X0, 0xCF5000
	0x0343A3EC LDR X0, [X0 + 0x440]
	0x0343A3F0 BL 0x1C16CF4
	0x0343A3F4 ADRP X0, 0xCBC000
	0x0343A3F8 LDR X0, [X0 + 0x280]
	0x0343A3FC BL 0x1C16CF4
	0x0343A400 ADRP X0, 0xCC2000
	0x0343A404 LDR X0, [X0 + 0x8D8]
	0x0343A408 BL 0x1C16CF4
	0x0343A40C ADRP X0, 0xCBA000
	0x0343A410 LDR X0, [X0 + 0x810]
	0x0343A414 BL 0x1C16CF4
	0x0343A418 ADRP X0, 0xCBA000
	0x0343A41C LDR X0, [X0 + 0x6C0]
	0x0343A420 BL 0x1C16CF4
	0x0343A424 ADRP X0, 0xCBA000
	0x0343A428 LDR X0, [X0 + 0x6D0]
	0x0343A42C BL 0x1C16CF4
	0x0343A430 ADRP X0, 0xCF4000
	0x0343A434 LDR X0, [X0 + 0x7B8]
	0x0343A438 BL 0x1C16CF4
	0x0343A43C ADRP X0, 0xCBC000
	0x0343A440 LDR X0, [X0 + 0x1E0]
	0x0343A444 BL 0x1C16CF4
	0x0343A448 ADRP X0, 0xCBC000
	0x0343A44C LDR X0, [X0 + 0x1F0]
	0x0343A450 BL 0x1C16CF4
	0x0343A454 ADRP X0, 0xCBC000
	0x0343A458 LDR X0, [X0 + 0x1F8]
	0x0343A45C BL 0x1C16CF4
	0x0343A460 ADRP X0, 0xCC2000
	0x0343A464 LDR X0, [X0 + 0x3A0]
	0x0343A468 BL 0x1C16CF4
	0x0343A46C ADRP X0, 0xCBB000
	0x0343A470 LDR X0, [X0 + 0xA28]
	0x0343A474 BL 0x1C16CF4
	0x0343A478 ADRP X0, 0xCE2000
	0x0343A47C LDR X0, [X0 + 0x4E0]
	0x0343A480 BL 0x1C16CF4
	0x0343A484 ADRP X0, 0xCF4000
	0x0343A488 LDR X0, [X0 + 0xC08]
	0x0343A48C BL 0x1C16CF4
	0x0343A490 ADRP X0, 0xCF4000
	0x0343A494 LDR X0, [X0 + 0x800]
	0x0343A498 BL 0x1C16CF4
	0x0343A49C ADRP X0, 0xCF4000
	0x0343A4A0 LDR X0, [X0 + 0x7D0]
	0x0343A4A4 BL 0x1C16CF4
	0x0343A4A8 ADRP X0, 0xCF4000
	0x0343A4AC LDR X0, [X0 + 0x7D8]
	0x0343A4B0 BL 0x1C16CF4
	0x0343A4B4 ADRP X0, 0xCB9000
	0x0343A4B8 LDR X0, [X0 + 0x988]
	0x0343A4BC BL 0x1C16CF4
	0x0343A4C0 MOVZ W8, 0x1
	0x0343A4C4 STRB W8, [X20 + 0x689]
	0x0343A4C8 STR X31, [X31 + 0x18]
	0x0343A4CC ADRP X28, 0xCBC000
	0x0343A4D0 LDR W8, [X19]
	0x0343A4D4 LDR X28, [X28 + 0x280]
	0x0343A4D8 CBZ W8, 0x343A708
	0x0343A4DC LDR X21, [X19 + 0x20]
	0x0343A4E0 CBZ X21, 0x343A820
	0x0343A4E4 LDR X8, [X19 + 0x28]
	0x0343A4E8 CBZ X8, 0x343A868
	0x0343A4EC ADRP X8, 0xCBB000
	0x0343A4F0 LDR X8, [X8 + 0xA28]
	0x0343A4F4 LDR X0, [X8]
	0x0343A4F8 ADRP X8, 0xCF4000
	0x0343A4FC LDR X8, [X8 + 0xC08]
	0x0343A500 LDR X25, [X19 + 0x30]
	0x0343A504 LDR W9, [X0 + 0xE0]
	0x0343A508 LDR X20, [X8]
	0x0343A50C CBNZ W9, 0x343A514
	0x0343A510 BL 0x1C16DFC
	0x0343A514 MOV X0, X21
	0x0343A518 MOV X1, X31
	0x0343A51C BL 0x3624D20
	0x0343A520 CBZ X20, 0x343A8B0
	0x0343A524 ADRP X8, 0xCF4000
	0x0343A528 LDR X8, [X8 + 0x800]
	0x0343A52C MOV X2, X0
	0x0343A530 LDR X1, [X8]
	0x0343A534 MOV X0, X20
	0x0343A538 MOV X3, X31
	0x0343A53C BL 0x32293BC
	0x0343A540 CBZ X25, 0x343A8B4
	0x0343A544 MOV X21, X0
	0x0343A548 LDR X0, [X25 + 0x20]
	0x0343A54C CBZ X0, 0x343A8B8
	0x0343A550 ADRP X8, 0xCB9000
	0x0343A554 LDR X8, [X8 + 0x988]
	0x0343A558 LDR X20, [X8]
	0x0343A55C MOV X1, X31
	0x0343A560 BL 0x361B448
	0x0343A564 ADRP X8, 0xCC2000
	0x0343A568 LDR X8, [X8 + 0x8D8]
	0x0343A56C MOV X22, X0
	0x0343A570 LDR X0, [X8]
	0x0343A574 MOVZ W1, 0x1
	0x0343A578 BL 0x1C16D6C
	0x0343A57C MOV X1, X0
	0x0343A580 CBZ X1, 0x343A8BC
	0x0343A584 LDR W8, [X1 + 0x18]
	0x0343A588 CBZ W8, 0x343A8C0
	0x0343A58C MOVZ W8, 0x2F
	0x0343A590 STRH W8, [X1 + 0x20]
	0x0343A594 CBZ X22, 0x343A8C4
	0x0343A598 MOV X0, X22
	0x0343A59C MOV X2, X31
	0x0343A5A0 BL 0x322BC58
	0x0343A5A4 MOV X1, X21
	0x0343A5A8 MOV X2, X31
	0x0343A5AC BL 0x321B938
	0x0343A5B0 ADRP X8, 0xCC2000
	0x0343A5B4 LDR X8, [X8 + 0x3A0]
	0x0343A5B8 MOV X22, X0
	0x0343A5BC LDR X23, [X25 + 0x20]
	0x0343A5C0 LDR X0, [X8]
	0x0343A5C4 BL 0x1C16F10
	0x0343A5C8 MOV X21, X0
	0x0343A5CC MOV X1, X23
	0x0343A5D0 MOV X2, X31
	0x0343A5D4 BL 0x36281F8
	0x0343A5D8 CBZ X21, 0x343A8C8
	0x0343A5DC MOV X0, X21
	0x0343A5E0 MOV X1, X22
	0x0343A5E4 MOV X2, X31
	0x0343A5E8 BL 0x36288CC
	0x0343A5EC MOV X0, X21
	0x0343A5F0 MOV X1, X20
	0x0343A5F4 MOV X2, X31
	0x0343A5F8 BL 0x3628980
	0x0343A5FC MOV X0, X21
	0x0343A600 MOV X1, X31
	0x0343A604 BL 0x3628A38
	0x0343A608 ADRP X8, 0xCE2000
	0x0343A60C ADRP X9, 0xCBA000
	0x0343A610 LDR X8, [X8 + 0x4E0]
	0x0343A614 LDR X9, [X9 + 0x6D0]
	0x0343A618 MOV X20, X0
	0x0343A61C LDR X21, [X8]
	0x0343A620 LDR X0, [X9]
	0x0343A624 BL 0x1C16F10
	0x0343A628 ADRP X8, 0xCBA000
	0x0343A62C LDR X8, [X8 + 0x6C0]
	0x0343A630 MOV X22, X0
	0x0343A634 LDR X1, [X8]
	0x0343A638 BL 0x2AA4804
	0x0343A63C ADRP X8, 0xCF4000
	0x0343A640 LDR X8, [X8 + 0x7D8]
	0x0343A644 LDR X1, [X19 + 0x38]
	0x0343A648 LDR X0, [X8]
	0x0343A64C MOV X2, X31
	0x0343A650 BL 0x321B938
	0x0343A654 CBZ X22, 0x343A8CC
	0x0343A658 ADRP X8, 0xCF4000
	0x0343A65C LDR X8, [X8 + 0x7D0]
	0x0343A660 ADRP X9, 0xCBA000
	0x0343A664 LDR X9, [X9 + 0x810]
	0x0343A668 MOV X2, X0
	0x0343A66C LDR X1, [X8]
	0x0343A670 LDR X3, [X9]
	0x0343A674 MOV X0, X22
	0x0343A678 BL 0x2AA5098
	0x0343A67C LDR X0, [X19 + 0x28]
	0x0343A680 MOV X1, X31
	0x0343A684 BL 0x3483BE4
	0x0343A688 MOV X23, X0
	0x0343A68C MOV X0, X31
	0x0343A690 BL 0x3241948
	0x0343A694 CBZ X0, 0x343A8D0
	0x0343A698 LDR X8, [X0]
	0x0343A69C LDR X9, [X8 + 0x268]
	0x0343A6A0 LDR X2, [X8 + 0x270]
	0x0343A6A4 MOV X1, X23
	0x0343A6A8 BLR X9
	0x0343A6AC LDR X24, [X25 + 0x10]
	0x0343A6B0 CBZ X24, 0x343A8D4
	0x0343A6B4 ADRP X10, 0xCF4000
	0x0343A6B8 LDR X10, [X10 + 0x7B8]
	0x0343A6BC LDR X8, [X24]
	0x0343A6C0 LDR W26, [X25 + 0x18]
	0x0343A6C4 LDP X27, X25, [X19 + 0x40]
	0x0343A6C8 LDR X1, [X10]
	0x0343A6CC LDRH W9, [X8 + 0x12E]
	0x0343A6D0 MOV X23, X0
	0x0343A6D4 CBZ X9, 0x343A6F8
	0x0343A6D8 LDR X10, [X8 + 0xB0]
	0x0343A6DC ADD X10, X10, 0x8
	0x0343A6E0 LDUR X11, [X10 - 0x8]
	0x0343A6E4 CMP X11, X1
	0x0343A6E8 B.EQ 0x343A720
	0x0343A6EC SUBS X9, X9, 0x1
	0x0343A6F0 ADD X10, X10, 0x10
	0x0343A6F4 B.NE 0x343A6E0
	0x0343A6F8 MOVZ W2, 0x3
	0x0343A6FC MOV X0, X24
	0x0343A700 BL 0x1C5C788
	0x0343A704 B 0x343A730
	0x0343A708 LDR X8, [X19 + 0x50]
	0x0343A70C MOVN W9, 0x0
	0x0343A710 STR X8, [X31 + 0x18]
	0x0343A714 STR X31, [X19 + 0x50]
	0x0343A718 STR W9, [X19]
	0x0343A71C B 0x343A78C
	0x0343A720 LDR W9, [X10]
	0x0343A724 ADD W9, W9, 0x3
	0x0343A728 ADD X8, X8, W9, 0x4, SXTW
	0x0343A72C ADD X0, X8, 0x138
	0x0343A730 LDP X8, X9, [X0]
	0x0343A734 MOV X0, X24
	0x0343A738 MOV X1, X21
	0x0343A73C MOV X2, X20
	0x0343A740 MOV X3, X22
	0x0343A744 MOV X4, X23
	0x0343A748 MOV W5, W26
	0x0343A74C MOV X6, X27
	0x0343A750 MOV X7, X25
	0x0343A754 STR X9, [X31]
	0x0343A758 BLR X8
	0x0343A75C CBZ X0, 0x343A8D8
	0x0343A760 ADRP X8, 0xCBC000
	0x0343A764 LDR X8, [X8 + 0x1F8]
	0x0343A768 LDR X1, [X8]
	0x0343A76C BL 0x269F5D0
	0x0343A770 ADRP X8, 0xCBC000
	0x0343A774 LDR X8, [X8 + 0x1F0]
	0x0343A778 STR X0, [X31 + 0x18]
	0x0343A77C LDR X1, [X8]
	0x0343A780 ADD X0, X31, 0x18
	0x0343A784 BL 0x2677430
	0x0343A788 TBZ X0, 0x0, 0x343A7C8
	0x0343A78C ADRP X8, 0xCBC000
	0x0343A790 LDR X8, [X8 + 0x1E0]
	0x0343A794 ADD X0, X31, 0x18
	0x0343A798 LDR X1, [X8]
	0x0343A79C BL 0x2677474
	0x0343A7A0 MOVN W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA4000
	014 Move W8, [X20+1667]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xCF6000
	021 Move X0, [X0+1024]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBD000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC3000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBB000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBB000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBB000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF5000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBD000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCBD000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBD000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC3000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE3000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xCF5000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF6000
	060 Move X0, [X0+1032]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF5000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCBA000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1667], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCBD000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xCF6000
	086 Move X9, 0xCBA000
	087 Move X8, [X8+1032]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCC3000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCC3000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCE3000
	139 Move X9, 0xCBB000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCBB000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xCF5000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xCF5000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCBB000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xCF5000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCBD000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCBD000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCBD000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xCF6000
	269 Move X8, [X8+1024]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCC2000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xCF5000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xCF6000
	301 Move X0, [X0+1040]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCBA000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCBD000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA7B000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343A7A4 STR W8, [X19], #0x8
	0x0343A7A8 LDR X0, [X28]
	0x0343A7AC LDR W8, [X0 + 0xE0]
	0x0343A7B0 CBNZ W8, 0x343A7B8
	0x0343A7B4 BL 0x1C16DFC
	0x0343A7B8 MOV X0, X19
	0x0343A7BC MOV X1, X31
	0x0343A7C0 BL 0x32C4864
	0x0343A7C4 B 0x343A800
	0x0343A7C8 STR W31, [X19]
	0x0343A7CC LDR X8, [X31 + 0x18]
	0x0343A7D0 STR X8, [X19 + 0x50]
	0x0343A7D4 LDR X0, [X28]
	0x0343A7D8 LDR W8, [X0 + 0xE0]
	0x0343A7DC CBNZ W8, 0x343A7E4
	0x0343A7E0 BL 0x1C16DFC
	0x0343A7E4 ADRP X8, 0xCF5000
	0x0343A7E8 LDR X8, [X8 + 0x440]
	0x0343A7EC ADD X0, X19, 0x8
	0x0343A7F0 LDR X3, [X8]
	0x0343A7F4 ADD X1, X31, 0x18
	0x0343A7F8 MOV X2, X19
	0x0343A7FC BL 0x218717C
	0x0343A800 LDP X20, X19, [X31 + 0x60]
	0x0343A804 LDP X22, X21, [X31 + 0x50]
	0x0343A808 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA4000
	007 Move X22, 0xCBD000
	008 Move W8, [X21+1668]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCBD000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1668], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

