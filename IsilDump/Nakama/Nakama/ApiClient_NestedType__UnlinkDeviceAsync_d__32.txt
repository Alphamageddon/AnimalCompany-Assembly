Type: Nakama.ApiClient/<UnlinkDeviceAsync>d__32

Method: System.Void MoveNext()

Disassembly:
	0x034384FC BL 0x1C16F28
	0x03438500 BL 0x1C16F20
	0x03438504 BL 0x1C16F20
	0x03438508 BL 0x1C16F20
	0x0343850C BL 0x1C16F20
	0x03438510 BL 0x1C16F20
	0x03438514 BL 0x1C16F20
	0x03438518 B 0x3438578
	0x0343851C B 0x3438578
	0x03438520 B 0x3438578
	0x03438524 B 0x3438578
	0x03438528 B 0x3438578
	0x0343852C B 0x3438578
	0x03438530 B 0x3438578
	0x03438534 B 0x3438578
	0x03438538 B 0x3438578
	0x0343853C B 0x3438578
	0x03438540 B 0x3438578
	0x03438544 B 0x3438578
	0x03438548 B 0x3438578
	0x0343854C B 0x3438578
	0x03438550 B 0x3438578
	0x03438554 B 0x3438578
	0x03438558 B 0x3438578
	0x0343855C B 0x3438578
	0x03438560 B 0x3438578
	0x03438564 B 0x3438578
	0x03438568 B 0x3438578
	0x0343856C B 0x3438578
	0x03438570 B 0x3438578
	0x03438574 B 0x3438578
	0x03438578 MOV X20, X0
	0x0343857C CMP W1, 0x1
	0x03438580 B.NE 0x3438610
	0x03438584 MOV X0, X20
	0x03438588 BL 0x3EB1AD0
	0x0343858C MOV X20, X0
	0x03438590 ADRP X0, 0xCBB000
	0x03438594 LDR X0, [X0 + 0x7D0]
	0x03438598 BL 0x1C16D08
	0x0343859C LDR X8, [X20]
	0x034385A0 LDR X1, [X8]
	0x034385A4 BL 0x1C17270
	0x034385A8 TBZ X0, 0x0, 0x34385E8
	0x034385AC LDR X20, [X20]
	0x034385B0 BL 0x3EB1AE0
	0x034385B4 MOVN W8, 0x1
	0x034385B8 STR W8, [X19], #0x8
	0x034385BC ADRP X0, 0xCBE000
	0x034385C0 LDR X0, [X0 + 0x280]
	0x034385C4 BL 0x1C16D08
	0x034385C8 LDR W8, [X0 + 0xE0]
	0x034385CC CBNZ W8, 0x34385D4
	0x034385D0 BL 0x1C16DFC
	0x034385D4 MOV X0, X19
	0x034385D8 MOV X1, X20
	0x034385DC MOV X2, X31
	0x034385E0 BL 0x32C4908
	0x034385E4 B 0x3438488
	0x034385E8 MOVZ W0, 0x8
	0x034385EC BL 0x3EB1AF0
	0x034385F0 LDR X8, [X20]
	0x034385F4 STR X8, [X0]
	0x034385F8 ADRP X1, 0xA7C000
	0x034385FC ADD X1, X1, 0xE58
	0x03438600 MOV X2, X31
	0x03438604 BL 0x3EB1B00
	0x03438608 MOV X20, X0
	0x0343860C BL 0x3EB1AE0
	0x03438610 MOV X0, X20
	0x03438614 BL 0x1D2C690
	0x03438618 BL 0x1990590
	0x0343861C STR X30, [X31 - 0x30]!
	0x03438620 STP X22, X21, [X31 + 0x10]
	0x03438624 STP X20, X19, [X31 + 0x20]
	0x03438628 ADRP X21, 0xFA5000
	0x0343862C ADRP X22, 0xCBE000
	0x03438630 LDRB W8, [X21 + 0x67E]
	0x03438634 LDR X22, [X22 + 0x280]
	0x03438638 MOV X19, X1
	0x0343863C MOV X20, X0
	0x03438640 TBNZ X8, 0x0, 0x3438658
	0x03438644 ADRP X0, 0xCBE000
	0x03438648 LDR X0, [X0 + 0x280]
	0x0343864C BL 0x1C16CF4
	0x03438650 MOVZ W8, 0x1
	0x03438654 STRB W8, [X21 + 0x67E]
	0x03438658 LDR X0, [X22]
	0x0343865C LDR W8, [X0 + 0xE0]
	0x03438660 CBNZ W8, 0x3438668
	0x03438664 BL 0x1C16DFC
	0x03438668 ADD X0, X20, 0x8
	0x0343866C MOV X1, X19
	0x03438670 LDP X20, X19, [X31 + 0x20]
	0x03438674 LDP X22, X21, [X31 + 0x10]
	0x03438678 MOV X2, X31
	0x0343867C LDR X30, [X31], #0x30
	0x03438680 B 0x32C477C
	0x03438684 SUB X31, X31, 0x70
	0x03438688 STR X30, [X31 + 0x10]
	0x0343868C STP X28, X27, [X31 + 0x20]
	0x03438690 STP X26, X25, [X31 + 0x30]
	0x03438694 STP X24, X23, [X31 + 0x40]
	0x03438698 STP X22, X21, [X31 + 0x50]
	0x0343869C STP X20, X19, [X31 + 0x60]
	0x034386A0 ADRP X20, 0xFA5000
	0x034386A4 LDRB W8, [X20 + 0x67F]
	0x034386A8 MOV X19, X0
	0x034386AC TBNZ X8, 0x0, 0x3438778
	0x034386B0 ADRP X0, 0xCF7000
	0x034386B4 LDR X0, [X0 + 0x3D0]
	0x034386B8 BL 0x1C16CF4
	0x034386BC ADRP X0, 0xCBE000
	0x034386C0 LDR X0, [X0 + 0x280]
	0x034386C4 BL 0x1C16CF4
	0x034386C8 ADRP X0, 0xCC4000
	0x034386CC LDR X0, [X0 + 0x8D8]
	0x034386D0 BL 0x1C16CF4
	0x034386D4 ADRP X0, 0xCBC000
	0x034386D8 LDR X0, [X0 + 0x810]
	0x034386DC BL 0x1C16CF4
	0x034386E0 ADRP X0, 0xCBC000
	0x034386E4 LDR X0, [X0 + 0x6C0]
	0x034386E8 BL 0x1C16CF4
	0x034386EC ADRP X0, 0xCBC000
	0x034386F0 LDR X0, [X0 + 0x6D0]
	0x034386F4 BL 0x1C16CF4
	0x034386F8 ADRP X0, 0xCF6000
	0x034386FC LDR X0, [X0 + 0x7B8]
	0x03438700 BL 0x1C16CF4
	0x03438704 ADRP X0, 0xCBE000
	0x03438708 LDR X0, [X0 + 0x1E0]
	0x0343870C BL 0x1C16CF4
	0x03438710 ADRP X0, 0xCBE000
	0x03438714 LDR X0, [X0 + 0x1F0]
	0x03438718 BL 0x1C16CF4
	0x0343871C ADRP X0, 0xCBE000
	0x03438720 LDR X0, [X0 + 0x1F8]
	0x03438724 BL 0x1C16CF4
	0x03438728 ADRP X0, 0xCC4000
	0x0343872C LDR X0, [X0 + 0x3A0]
	0x03438730 BL 0x1C16CF4
	0x03438734 ADRP X0, 0xCE4000
	0x03438738 LDR X0, [X0 + 0x4D8]
	0x0343873C BL 0x1C16CF4
	0x03438740 ADRP X0, 0xCF6000
	0x03438744 LDR X0, [X0 + 0x7D0]
	0x03438748 BL 0x1C16CF4
	0x0343874C ADRP X0, 0xCF6000
	0x03438750 LDR X0, [X0 + 0x7D8]
	0x03438754 BL 0x1C16CF4
	0x03438758 ADRP X0, 0xCBB000
	0x0343875C LDR X0, [X0 + 0x988]
	0x03438760 BL 0x1C16CF4
	0x03438764 ADRP X0, 0xCF7000
	0x03438768 LDR X0, [X0 + 0x3D8]
	0x0343876C BL 0x1C16CF4
	0x03438770 MOVZ W8, 0x1
	0x03438774 STRB W8, [X20 + 0x67F]
	0x03438778 STR X31, [X31 + 0x18]
	0x0343877C ADRP X28, 0xCBE000
	0x03438780 LDR W8, [X19]
	0x03438784 LDR X28, [X28 + 0x280]
	0x03438788 CBZ W8, 0x3438968
	0x0343878C LDR X8, [X19 + 0x20]
	0x03438790 CBZ X8, 0x3438A80
	0x03438794 LDR X25, [X19 + 0x28]
	0x03438798 CBZ X25, 0x3438AC8
	0x0343879C LDR X0, [X25 + 0x20]
	0x034387A0 CBZ X0, 0x3438ACC
	0x034387A4 ADRP X8, 0xCF7000
	0x034387A8 ADRP X9, 0xCBB000
	0x034387AC LDR X8, [X8 + 0x3D8]
	0x034387B0 LDR X9, [X9 + 0x988]
	0x034387B4 LDR X21, [X8]
	0x034387B8 LDR X20, [X9]
	0x034387BC MOV X1, X31
	0x034387C0 BL 0x361B448
	0x034387C4 ADRP X8, 0xCC4000
	0x034387C8 LDR X8, [X8 + 0x8D8]
	0x034387CC MOV X22, X0
	0x034387D0 LDR X0, [X8]
	0x034387D4 MOVZ W1, 0x1
	0x034387D8 BL 0x1C16D6C
	0x034387DC MOV X1, X0
	0x034387E0 CBZ X1, 0x3438AD0
	0x034387E4 LDR W8, [X1 + 0x18]
	0x034387E8 CBZ W8, 0x3438AD4
	0x034387EC MOVZ W8, 0x2F
	0x034387F0 STRH W8, [X1 + 0x20]
	0x034387F4 CBZ X22, 0x3438AD8
	0x034387F8 MOV X0, X22
	0x034387FC MOV X2, X31
	0x03438800 BL 0x322BC58
	0x03438804 MOV X1, X21
	0x03438808 MOV X2, X31
	0x0343880C BL 0x321B938
	0x03438810 ADRP X8, 0xCC4000
	0x03438814 LDR X8, [X8 + 0x3A0]
	0x03438818 MOV X22, X0
	0x0343881C LDR X23, [X25 + 0x20]
	0x03438820 LDR X0, [X8]
	0x03438824 BL 0x1C16F10
	0x03438828 MOV X21, X0
	0x0343882C MOV X1, X23
	0x03438830 MOV X2, X31
	0x03438834 BL 0x36281F8
	0x03438838 CBZ X21, 0x3438ADC
	0x0343883C MOV X0, X21
	0x03438840 MOV X1, X22
	0x03438844 MOV X2, X31
	0x03438848 BL 0x36288CC
	0x0343884C MOV X0, X21
	0x03438850 MOV X1, X20
	0x03438854 MOV X2, X31
	0x03438858 BL 0x3628980
	0x0343885C MOV X0, X21
	0x03438860 MOV X1, X31
	0x03438864 BL 0x3628A38
	0x03438868 ADRP X8, 0xCE4000
	0x0343886C ADRP X9, 0xCBC000
	0x03438870 LDR X8, [X8 + 0x4D8]
	0x03438874 LDR X9, [X9 + 0x6D0]
	0x03438878 MOV X20, X0
	0x0343887C LDR X21, [X8]
	0x03438880 LDR X0, [X9]
	0x03438884 BL 0x1C16F10
	0x03438888 ADRP X8, 0xCBC000
	0x0343888C LDR X8, [X8 + 0x6C0]
	0x03438890 MOV X22, X0
	0x03438894 LDR X1, [X8]
	0x03438898 BL 0x2AA4804
	0x0343889C ADRP X8, 0xCF6000
	0x034388A0 LDR X8, [X8 + 0x7D8]
	0x034388A4 LDR X1, [X19 + 0x30]
	0x034388A8 LDR X0, [X8]
	0x034388AC MOV X2, X31
	0x034388B0 BL 0x321B938
	0x034388B4 CBZ X22, 0x3438AE0
	0x034388B8 ADRP X8, 0xCF6000
	0x034388BC LDR X8, [X8 + 0x7D0]
	0x034388C0 ADRP X9, 0xCBC000
	0x034388C4 LDR X9, [X9 + 0x810]
	0x034388C8 MOV X2, X0
	0x034388CC LDR X1, [X8]
	0x034388D0 LDR X3, [X9]
	0x034388D4 MOV X0, X22
	0x034388D8 BL 0x2AA5098
	0x034388DC LDR X0, [X19 + 0x20]
	0x034388E0 MOV X1, X31
	0x034388E4 BL 0x3483BE4
	0x034388E8 MOV X23, X0
	0x034388EC MOV X0, X31
	0x034388F0 BL 0x3241948
	0x034388F4 CBZ X0, 0x3438AE4
	0x034388F8 LDR X8, [X0]
	0x034388FC LDR X9, [X8 + 0x268]
	0x03438900 LDR X2, [X8 + 0x270]
	0x03438904 MOV X1, X23
	0x03438908 BLR X9
	0x0343890C LDR X24, [X25 + 0x10]
	0x03438910 CBZ X24, 0x3438AE8
	0x03438914 ADRP X10, 0xCF6000
	0x03438918 LDR X10, [X10 + 0x7B8]
	0x0343891C LDR X8, [X24]
	0x03438920 LDR W26, [X25 + 0x18]
	0x03438924 LDP X27, X25, [X19 + 0x38]
	0x03438928 LDR X1, [X10]
	0x0343892C LDRH W9, [X8 + 0x12E]
	0x03438930 MOV X23, X0
	0x03438934 CBZ X9, 0x3438958
	0x03438938 LDR X10, [X8 + 0xB0]
	0x0343893C ADD X10, X10, 0x8
	0x03438940 LDUR X11, [X10 - 0x8]
	0x03438944 CMP X11, X1
	0x03438948 B.EQ 0x3438980
	0x0343894C SUBS X9, X9, 0x1
	0x03438950 ADD X10, X10, 0x10
	0x03438954 B.NE 0x3438940
	0x03438958 MOVZ W2, 0x3
	0x0343895C MOV X0, X24
	0x03438960 BL 0x1C5C788
	0x03438964 B 0x3438990
	0x03438968 LDR X8, [X19 + 0x48]
	0x0343896C MOVN W9, 0x0
	0x03438970 STR X8, [X31 + 0x18]
	0x03438974 STR X31, [X19 + 0x48]
	0x03438978 STR W9, [X19]
	0x0343897C B 0x34389EC
	0x03438980 LDR W9, [X10]
	0x03438984 ADD W9, W9, 0x3
	0x03438988 ADD X8, X8, W9, 0x4, SXTW
	0x0343898C ADD X0, X8, 0x138
	0x03438990 LDP X8, X9, [X0]
	0x03438994 MOV X0, X24
	0x03438998 MOV X1, X21
	0x0343899C MOV X2, X20
	0x034389A0 MOV X3, X22
	0x034389A4 MOV X4, X23
	0x034389A8 MOV W5, W26
	0x034389AC MOV X6, X27
	0x034389B0 MOV X7, X25
	0x034389B4 STR X9, [X31]
	0x034389B8 BLR X8
	0x034389BC CBZ X0, 0x3438AEC
	0x034389C0 ADRP X8, 0xCBE000
	0x034389C4 LDR X8, [X8 + 0x1F8]
	0x034389C8 LDR X1, [X8]
	0x034389CC BL 0x269F5D0
	0x034389D0 ADRP X8, 0xCBE000
	0x034389D4 LDR X8, [X8 + 0x1F0]
	0x034389D8 STR X0, [X31 + 0x18]
	0x034389DC LDR X1, [X8]
	0x034389E0 ADD X0, X31, 0x18
	0x034389E4 BL 0x2677430
	0x034389E8 TBZ X0, 0x0, 0x3438A28
	0x034389EC ADRP X8, 0xCBE000
	0x034389F0 LDR X8, [X8 + 0x1E0]
	0x034389F4 ADD X0, X31, 0x18
	0x034389F8 LDR X1, [X8]
	0x034389FC BL 0x2677474
	0x03438A00 MOVN W8, 0x1
	0x03438A04 STR W8, [X19], #0x8
	0x03438A08 LDR X0, [X28]
	0x03438A0C LDR W8, [X0 + 0xE0]
	0x03438A10 CBNZ W8, 0x3438A18
	0x03438A14 BL 0x1C16DFC
	0x03438A18 MOV X0, X19
	0x03438A1C MOV X1, X31
	0x03438A20 BL 0x32C4864
	0x03438A24 B 0x3438A60
	0x03438A28 STR W31, [X19]
	0x03438A2C LDR X8, [X31 + 0x18]
	0x03438A30 STR X8, [X19 + 0x48]
	0x03438A34 LDR X0, [X28]
	0x03438A38 LDR W8, [X0 + 0xE0]
	0x03438A3C CBNZ W8, 0x3438A44
	0x03438A40 BL 0x1C16DFC
	0x03438A44 ADRP X8, 0xCF7000
	0x03438A48 LDR X8, [X8 + 0x3D0]
	0x03438A4C ADD X0, X19, 0x8
	0x03438A50 LDR X3, [X8]
	0x03438A54 ADD X1, X31, 0x18
	0x03438A58 MOV X2, X19
	0x03438A5C BL 0x2186F10
	0x03438A60 LDP X20, X19, [X31 + 0x60]
	0x03438A64 LDP X22, X21, [X31 + 0x50]
	0x03438A68 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA6000
	014 Move W8, [X20+1657]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xCF8000
	021 Move X0, [X0+904]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBF000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC5000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBD000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBD000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBD000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF7000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBF000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCBF000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBF000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC5000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE5000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xCF8000
	057 Move X0, [X0+912]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF7000
	060 Move X0, [X0+2000]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF7000
	063 Move X0, [X0+2008]
	064 Call 0x1C17CF4
	065 Move X0, 0xCBC000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1657], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCBF000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xCF8000
	086 Move X9, 0xCBC000
	087 Move X8, [X8+912]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCC5000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCC5000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCE5000
	139 Move X9, 0xCBD000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCBD000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xCF7000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xCF7000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCBD000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xCF7000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCBF000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCBF000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCBF000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xCF8000
	269 Move X8, [X8+904]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCC4000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xCF7000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xCF8000
	301 Move X0, [X0+920]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCBC000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCBF000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA7D000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03438A6C LDP X26, X25, [X31 + 0x30]
	0x03438A70 LDP X28, X27, [X31 + 0x20]
	0x03438A74 LDR X30, [X31 + 0x10]
	0x03438A78 ADD X31, X31, 0x70
	0x03438A7C RET
	0x03438A80 ADRP X0, 0xCC3000
	0x03438A84 LDR X0, [X0 + 0x578]
	0x03438A88 BL 0x1C16D08
	0x03438A8C BL 0x1C16F10
	0x03438A90 MOV X20, X0
	0x03438A94 ADRP X0, 0xCF6000
	0x03438A98 LDR X0, [X0 + 0xBC8]
	0x03438A9C BL 0x1C16D08
	0x03438AA0 MOV X1, X0
	0x03438AA4 MOV X0, X20
	0x03438AA8 MOV X2, X31
	0x03438AAC BL 0x3314A68
	0x03438AB0 ADRP X0, 0xCF7000
	0x03438AB4 LDR X0, [X0 + 0x3E0]
	0x03438AB8 BL 0x1C16D08
	0x03438ABC MOV X1, X0
	0x03438AC0 MOV X0, X20
	0x03438AC4 BL 0x1C16DEC
	0x03438AC8 BL 0x1C16F20
	0x03438ACC BL 0x1C16F20
	0x03438AD0 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA6000
	007 Move X22, 0xCBF000
	008 Move W8, [X21+1658]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCBF000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1658], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

