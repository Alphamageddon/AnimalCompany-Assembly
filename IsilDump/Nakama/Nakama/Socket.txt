Type: Nakama.Socket

Method: System.Void add_Closed(System.Action value)

Disassembly:
	0x0347A8AC BL 0x1C24138
	0x0347A8B0 CMP X21, X0
	0x0347A8B4 MOV X21, X0
	0x0347A8B8 B.NE 0x347A870
	0x0347A8BC LDP X20, X19, [X31 + 0x30]
	0x0347A8C0 LDP X22, X21, [X31 + 0x20]
	0x0347A8C4 LDP X24, X23, [X31 + 0x10]
	0x0347A8C8 LDR X30, [X31], #0x40
	0x0347A8CC RET
	0x0347A8D0 MOV X0, X22
	0x0347A8D4 MOV X1, X23
	0x0347A8D8 BL 0x1C171E0
	0x0347A8DC STR X30, [X31 - 0x40]!
	0x0347A8E0 STP X24, X23, [X31 + 0x10]
	0x0347A8E4 STP X22, X21, [X31 + 0x20]
	0x0347A8E8 STP X20, X19, [X31 + 0x30]
	0x0347A8EC ADRP X21, 0xF63000
	0x0347A8F0 LDRB W8, [X21 + 0x871]
	0x0347A8F4 MOV X19, X1
	0x0347A8F8 MOV X20, X0
	0x0347A8FC TBNZ X8, 0x0, 0x347A914
	0x0347A900 ADRP X0, 0xCB6000
	0x0347A904 LDR X0, [X0 + 0xB60]
	0x0347A908 BL 0x1C16CF4
	0x0347A90C MOVZ W8, 0x1
	0x0347A910 STRB W8, [X21 + 0x871]
	0x0347A914 ADRP X24, 0xCB6000
	0x0347A918 LDR X21, [X20 + 0x78]!
	0x0347A91C LDR X24, [X24 + 0xB60]
	0x0347A920 MOV X0, X21
	0x0347A924 MOV X1, X19
	0x0347A928 MOV X2, X31
	0x0347A92C BL 0x33C0DE4
	0x0347A930 CBZ X0, 0x347A950
	0x0347A934 LDR X23, [X24]
	0x0347A938 MOV X22, X0
	0x0347A93C MOV X1, X23
	0x0347A940 BL 0x1C16E00
	0x0347A944 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF64000
	007 Move W8, [X21+2137]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC7B000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2137], W8
	019 Move X22, 0xC7B000
	020 Add X20, X20, 24
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_Closed(System.Action value)

Disassembly:
	0x0347A948 CBNZ X0, 0x347A954
	0x0347A94C B 0x347A980
	0x0347A950 MOV X1, X31
	0x0347A954 MOV X0, X20
	0x0347A958 MOV X2, X21
	0x0347A95C BL 0x1C24138
	0x0347A960 CMP X21, X0
	0x0347A964 MOV X21, X0
	0x0347A968 B.NE 0x347A920
	0x0347A96C LDP X20, X19, [X31 + 0x30]
	0x0347A970 LDP X22, X21, [X31 + 0x20]
	0x0347A974 LDP X24, X23, [X31 + 0x10]
	0x0347A978 LDR X30, [X31], #0x40
	0x0347A97C RET
	0x0347A980 MOV X0, X22
	0x0347A984 MOV X1, X23
	0x0347A988 BL 0x1C171E0
	0x0347A98C STR X30, [X31 - 0x40]!
	0x0347A990 STP X24, X23, [X31 + 0x10]
	0x0347A994 STP X22, X21, [X31 + 0x20]
	0x0347A998 STP X20, X19, [X31 + 0x30]
	0x0347A99C ADRP X21, 0xF63000
	0x0347A9A0 LDRB W8, [X21 + 0x872]
	0x0347A9A4 MOV X19, X1
	0x0347A9A8 MOV X20, X0
	0x0347A9AC TBNZ X8, 0x0, 0x347A9C4
	0x0347A9B0 ADRP X0, 0xCB6000
	0x0347A9B4 LDR X0, [X0 + 0xB60]
	0x0347A9B8 BL 0x1C16CF4
	0x0347A9BC MOVZ W8, 0x1
	0x0347A9C0 STRB W8, [X21 + 0x872]
	0x0347A9C4 ADRP X24, 0xCB6000
	0x0347A9C8 LDR X21, [X20 + 0x78]!
	0x0347A9CC LDR X24, [X24 + 0xB60]
	0x0347A9D0 MOV X0, X21
	0x0347A9D4 MOV X1, X19
	0x0347A9D8 MOV X2, X31
	0x0347A9DC BL 0x33C0FDC
	0x0347A9E0 CBZ X0, 0x347AA00

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF64000
	007 Move W8, [X21+2138]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC7B000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2138], W8
	019 Move X22, 0xC7B000
	020 Add X20, X20, 24
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void add_Connected(System.Action value)

Disassembly:
	0x0347A9E4 LDR X23, [X24]
	0x0347A9E8 MOV X22, X0
	0x0347A9EC MOV X1, X23
	0x0347A9F0 BL 0x1C16E00
	0x0347A9F4 MOV X1, X0
	0x0347A9F8 CBNZ X0, 0x347AA04
	0x0347A9FC B 0x347AA30
	0x0347AA00 MOV X1, X31
	0x0347AA04 MOV X0, X20
	0x0347AA08 MOV X2, X21
	0x0347AA0C BL 0x1C24138
	0x0347AA10 CMP X21, X0
	0x0347AA14 MOV X21, X0
	0x0347AA18 B.NE 0x347A9D0
	0x0347AA1C LDP X20, X19, [X31 + 0x30]
	0x0347AA20 LDP X22, X21, [X31 + 0x20]
	0x0347AA24 LDP X24, X23, [X31 + 0x10]
	0x0347AA28 LDR X30, [X31], #0x40
	0x0347AA2C RET
	0x0347AA30 MOV X0, X22
	0x0347AA34 MOV X1, X23
	0x0347AA38 BL 0x1C171E0
	0x0347AA3C STR X30, [X31 - 0x40]!
	0x0347AA40 STP X24, X23, [X31 + 0x10]
	0x0347AA44 STP X22, X21, [X31 + 0x20]
	0x0347AA48 STP X20, X19, [X31 + 0x30]
	0x0347AA4C ADRP X21, 0xF63000
	0x0347AA50 LDRB W8, [X21 + 0x873]
	0x0347AA54 MOV X19, X1
	0x0347AA58 MOV X20, X0
	0x0347AA5C TBNZ X8, 0x0, 0x347AA74
	0x0347AA60 ADRP X0, 0xCB6000
	0x0347AA64 LDR X0, [X0 + 0xB68]
	0x0347AA68 BL 0x1C16CF4
	0x0347AA6C MOVZ W8, 0x1
	0x0347AA70 STRB W8, [X21 + 0x873]
	0x0347AA74 ADRP X24, 0xCB6000
	0x0347AA78 LDR X21, [X20 + 0x80]!
	0x0347AA7C LDR X24, [X24 + 0xB68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF64000
	007 Move W8, [X21+2139]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC7B000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2139], W8
	019 Move X22, 0xC7B000
	020 Add X20, X20, 32
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_Connected(System.Action value)

Disassembly:
	0x0347AA80 MOV X0, X21
	0x0347AA84 MOV X1, X19
	0x0347AA88 MOV X2, X31
	0x0347AA8C BL 0x33C0DE4
	0x0347AA90 CBZ X0, 0x347AAB0
	0x0347AA94 LDR X23, [X24]
	0x0347AA98 MOV X22, X0
	0x0347AA9C MOV X1, X23
	0x0347AAA0 BL 0x1C16E00
	0x0347AAA4 MOV X1, X0
	0x0347AAA8 CBNZ X0, 0x347AAB4
	0x0347AAAC B 0x347AAE0
	0x0347AAB0 MOV X1, X31
	0x0347AAB4 MOV X0, X20
	0x0347AAB8 MOV X2, X21
	0x0347AABC BL 0x1C24138
	0x0347AAC0 CMP X21, X0
	0x0347AAC4 MOV X21, X0
	0x0347AAC8 B.NE 0x347AA80
	0x0347AACC LDP X20, X19, [X31 + 0x30]
	0x0347AAD0 LDP X22, X21, [X31 + 0x20]
	0x0347AAD4 LDP X24, X23, [X31 + 0x10]
	0x0347AAD8 LDR X30, [X31], #0x40
	0x0347AADC RET
	0x0347AAE0 MOV X0, X22
	0x0347AAE4 MOV X1, X23
	0x0347AAE8 BL 0x1C171E0
	0x0347AAEC STR X30, [X31 - 0x40]!
	0x0347AAF0 STP X24, X23, [X31 + 0x10]
	0x0347AAF4 STP X22, X21, [X31 + 0x20]
	0x0347AAF8 STP X20, X19, [X31 + 0x30]
	0x0347AAFC ADRP X21, 0xF63000
	0x0347AB00 LDRB W8, [X21 + 0x874]
	0x0347AB04 MOV X19, X1
	0x0347AB08 MOV X20, X0
	0x0347AB0C TBNZ X8, 0x0, 0x347AB24
	0x0347AB10 ADRP X0, 0xCB6000
	0x0347AB14 LDR X0, [X0 + 0xB68]
	0x0347AB18 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF64000
	007 Move W8, [X21+2140]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC7B000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2140], W8
	019 Move X22, 0xC7B000
	020 Add X20, X20, 32
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void add_ReceivedChannelMessage(System.Action`1<Nakama.IApiChannelMessage> value)

Disassembly:
	0x0347AB1C MOVZ W8, 0x1
	0x0347AB20 STRB W8, [X21 + 0x874]
	0x0347AB24 ADRP X24, 0xCB6000
	0x0347AB28 LDR X21, [X20 + 0x80]!
	0x0347AB2C LDR X24, [X24 + 0xB68]
	0x0347AB30 MOV X0, X21
	0x0347AB34 MOV X1, X19
	0x0347AB38 MOV X2, X31
	0x0347AB3C BL 0x33C0FDC
	0x0347AB40 CBZ X0, 0x347AB60
	0x0347AB44 LDR X23, [X24]
	0x0347AB48 MOV X22, X0
	0x0347AB4C MOV X1, X23
	0x0347AB50 BL 0x1C16E00
	0x0347AB54 MOV X1, X0
	0x0347AB58 CBNZ X0, 0x347AB64
	0x0347AB5C B 0x347AB90
	0x0347AB60 MOV X1, X31
	0x0347AB64 MOV X0, X20
	0x0347AB68 MOV X2, X21
	0x0347AB6C BL 0x1C24138
	0x0347AB70 CMP X21, X0
	0x0347AB74 MOV X21, X0
	0x0347AB78 B.NE 0x347AB30
	0x0347AB7C LDP X20, X19, [X31 + 0x30]
	0x0347AB80 LDP X22, X21, [X31 + 0x20]
	0x0347AB84 LDP X24, X23, [X31 + 0x10]
	0x0347AB88 LDR X30, [X31], #0x40
	0x0347AB8C RET
	0x0347AB90 MOV X0, X22
	0x0347AB94 MOV X1, X23
	0x0347AB98 BL 0x1C171E0
	0x0347AB9C STR X30, [X31 - 0x40]!
	0x0347ABA0 STP X24, X23, [X31 + 0x10]
	0x0347ABA4 STP X22, X21, [X31 + 0x20]
	0x0347ABA8 STP X20, X19, [X31 + 0x30]
	0x0347ABAC ADRP X21, 0xF63000
	0x0347ABB0 LDRB W8, [X21 + 0x875]
	0x0347ABB4 MOV X19, X1
	0x0347ABB8 MOV X20, X0
	0x0347ABBC TBNZ X8, 0x0, 0x347ABD4
	0x0347ABC0 ADRP X0, 0xCB6000
	0x0347ABC4 LDR X0, [X0 + 0xB70]
	0x0347ABC8 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF64000
	009 Move W8, [X21+2141]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB7000
	017 Move X0, [X0+2856]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2141], W8
	021 Move X24, 0xCB7000
	022 Add X20, X20, 40
	023 Move X21, [X20]
	024 Move X24, [X24+2856]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedChannelMessage(System.Action`1<Nakama.IApiChannelMessage> value)

Disassembly:
	0x0347ABCC MOVZ W8, 0x1
	0x0347ABD0 STRB W8, [X21 + 0x875]
	0x0347ABD4 ADRP X24, 0xCB6000
	0x0347ABD8 LDR X21, [X20 + 0x88]!
	0x0347ABDC LDR X24, [X24 + 0xB70]
	0x0347ABE0 MOV X0, X21
	0x0347ABE4 MOV X1, X19
	0x0347ABE8 MOV X2, X31
	0x0347ABEC BL 0x33C0DE4
	0x0347ABF0 CBZ X0, 0x347AC10
	0x0347ABF4 LDR X23, [X24]
	0x0347ABF8 MOV X22, X0
	0x0347ABFC MOV X1, X23
	0x0347AC00 BL 0x1C16E00
	0x0347AC04 MOV X1, X0
	0x0347AC08 CBNZ X0, 0x347AC14
	0x0347AC0C B 0x347AC40
	0x0347AC10 MOV X1, X31
	0x0347AC14 MOV X0, X20
	0x0347AC18 MOV X2, X21
	0x0347AC1C BL 0x1C24138
	0x0347AC20 CMP X21, X0
	0x0347AC24 MOV X21, X0
	0x0347AC28 B.NE 0x347ABE0
	0x0347AC2C LDP X20, X19, [X31 + 0x30]
	0x0347AC30 LDP X22, X21, [X31 + 0x20]
	0x0347AC34 LDP X24, X23, [X31 + 0x10]
	0x0347AC38 LDR X30, [X31], #0x40
	0x0347AC3C RET
	0x0347AC40 MOV X0, X22
	0x0347AC44 MOV X1, X23
	0x0347AC48 BL 0x1C171E0
	0x0347AC4C STR X30, [X31 - 0x40]!
	0x0347AC50 STP X24, X23, [X31 + 0x10]
	0x0347AC54 STP X22, X21, [X31 + 0x20]
	0x0347AC58 STP X20, X19, [X31 + 0x30]
	0x0347AC5C ADRP X21, 0xF63000
	0x0347AC60 LDRB W8, [X21 + 0x876]
	0x0347AC64 MOV X19, X1
	0x0347AC68 MOV X20, X0
	0x0347AC6C TBNZ X8, 0x0, 0x347AC84
	0x0347AC70 ADRP X0, 0xCB6000
	0x0347AC74 LDR X0, [X0 + 0xB70]
	0x0347AC78 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF64000
	009 Move W8, [X21+2142]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB7000
	017 Move X0, [X0+2856]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2142], W8
	021 Move X24, 0xCB7000
	022 Add X20, X20, 40
	023 Move X21, [X20]
	024 Move X24, [X24+2856]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedChannelPresence(System.Action`1<Nakama.IChannelPresenceEvent> value)

Disassembly:
	0x0347AC7C MOVZ W8, 0x1
	0x0347AC80 STRB W8, [X21 + 0x876]
	0x0347AC84 ADRP X24, 0xCB6000
	0x0347AC88 LDR X21, [X20 + 0x88]!
	0x0347AC8C LDR X24, [X24 + 0xB70]
	0x0347AC90 MOV X0, X21
	0x0347AC94 MOV X1, X19
	0x0347AC98 MOV X2, X31
	0x0347AC9C BL 0x33C0FDC
	0x0347ACA0 CBZ X0, 0x347ACC0
	0x0347ACA4 LDR X23, [X24]
	0x0347ACA8 MOV X22, X0
	0x0347ACAC MOV X1, X23
	0x0347ACB0 BL 0x1C16E00
	0x0347ACB4 MOV X1, X0
	0x0347ACB8 CBNZ X0, 0x347ACC4
	0x0347ACBC B 0x347ACF0
	0x0347ACC0 MOV X1, X31
	0x0347ACC4 MOV X0, X20
	0x0347ACC8 MOV X2, X21
	0x0347ACCC BL 0x1C24138
	0x0347ACD0 CMP X21, X0
	0x0347ACD4 MOV X21, X0
	0x0347ACD8 B.NE 0x347AC90
	0x0347ACDC LDP X20, X19, [X31 + 0x30]
	0x0347ACE0 LDP X22, X21, [X31 + 0x20]
	0x0347ACE4 LDP X24, X23, [X31 + 0x10]
	0x0347ACE8 LDR X30, [X31], #0x40
	0x0347ACEC RET
	0x0347ACF0 MOV X0, X22
	0x0347ACF4 MOV X1, X23
	0x0347ACF8 BL 0x1C171E0
	0x0347ACFC STR X30, [X31 - 0x40]!
	0x0347AD00 STP X24, X23, [X31 + 0x10]
	0x0347AD04 STP X22, X21, [X31 + 0x20]
	0x0347AD08 STP X20, X19, [X31 + 0x30]
	0x0347AD0C ADRP X21, 0xF63000
	0x0347AD10 LDRB W8, [X21 + 0x877]
	0x0347AD14 MOV X19, X1
	0x0347AD18 MOV X20, X0
	0x0347AD1C TBNZ X8, 0x0, 0x347AD34
	0x0347AD20 ADRP X0, 0xCB6000
	0x0347AD24 LDR X0, [X0 + 0xB78]
	0x0347AD28 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF64000
	009 Move W8, [X21+2143]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB7000
	017 Move X0, [X0+2864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2143], W8
	021 Move X24, 0xCB7000
	022 Add X20, X20, 48
	023 Move X21, [X20]
	024 Move X24, [X24+2864]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedChannelPresence(System.Action`1<Nakama.IChannelPresenceEvent> value)

Disassembly:
	0x0347AD2C MOVZ W8, 0x1
	0x0347AD30 STRB W8, [X21 + 0x877]
	0x0347AD34 ADRP X24, 0xCB6000
	0x0347AD38 LDR X21, [X20 + 0x90]!
	0x0347AD3C LDR X24, [X24 + 0xB78]
	0x0347AD40 MOV X0, X21
	0x0347AD44 MOV X1, X19
	0x0347AD48 MOV X2, X31
	0x0347AD4C BL 0x33C0DE4
	0x0347AD50 CBZ X0, 0x347AD70
	0x0347AD54 LDR X23, [X24]
	0x0347AD58 MOV X22, X0
	0x0347AD5C MOV X1, X23
	0x0347AD60 BL 0x1C16E00
	0x0347AD64 MOV X1, X0
	0x0347AD68 CBNZ X0, 0x347AD74
	0x0347AD6C B 0x347ADA0
	0x0347AD70 MOV X1, X31
	0x0347AD74 MOV X0, X20
	0x0347AD78 MOV X2, X21
	0x0347AD7C BL 0x1C24138
	0x0347AD80 CMP X21, X0
	0x0347AD84 MOV X21, X0
	0x0347AD88 B.NE 0x347AD40
	0x0347AD8C LDP X20, X19, [X31 + 0x30]
	0x0347AD90 LDP X22, X21, [X31 + 0x20]
	0x0347AD94 LDP X24, X23, [X31 + 0x10]
	0x0347AD98 LDR X30, [X31], #0x40
	0x0347AD9C RET
	0x0347ADA0 MOV X0, X22
	0x0347ADA4 MOV X1, X23
	0x0347ADA8 BL 0x1C171E0
	0x0347ADAC STR X30, [X31 - 0x40]!
	0x0347ADB0 STP X24, X23, [X31 + 0x10]
	0x0347ADB4 STP X22, X21, [X31 + 0x20]
	0x0347ADB8 STP X20, X19, [X31 + 0x30]
	0x0347ADBC ADRP X21, 0xF63000
	0x0347ADC0 LDRB W8, [X21 + 0x878]
	0x0347ADC4 MOV X19, X1
	0x0347ADC8 MOV X20, X0
	0x0347ADCC TBNZ X8, 0x0, 0x347ADE4
	0x0347ADD0 ADRP X0, 0xCB6000
	0x0347ADD4 LDR X0, [X0 + 0xB78]
	0x0347ADD8 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF64000
	009 Move W8, [X21+2144]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB7000
	017 Move X0, [X0+2864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2144], W8
	021 Move X24, 0xCB7000
	022 Add X20, X20, 48
	023 Move X21, [X20]
	024 Move X24, [X24+2864]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedError(System.Action`1<System.Exception> value)

Disassembly:
	0x0347ADDC MOVZ W8, 0x1
	0x0347ADE0 STRB W8, [X21 + 0x878]
	0x0347ADE4 ADRP X24, 0xCB6000
	0x0347ADE8 LDR X21, [X20 + 0x90]!
	0x0347ADEC LDR X24, [X24 + 0xB78]
	0x0347ADF0 MOV X0, X21
	0x0347ADF4 MOV X1, X19
	0x0347ADF8 MOV X2, X31
	0x0347ADFC BL 0x33C0FDC
	0x0347AE00 CBZ X0, 0x347AE20
	0x0347AE04 LDR X23, [X24]
	0x0347AE08 MOV X22, X0
	0x0347AE0C MOV X1, X23
	0x0347AE10 BL 0x1C16E00
	0x0347AE14 MOV X1, X0
	0x0347AE18 CBNZ X0, 0x347AE24
	0x0347AE1C B 0x347AE50
	0x0347AE20 MOV X1, X31
	0x0347AE24 MOV X0, X20
	0x0347AE28 MOV X2, X21
	0x0347AE2C BL 0x1C24138
	0x0347AE30 CMP X21, X0
	0x0347AE34 MOV X21, X0
	0x0347AE38 B.NE 0x347ADF0
	0x0347AE3C LDP X20, X19, [X31 + 0x30]
	0x0347AE40 LDP X22, X21, [X31 + 0x20]
	0x0347AE44 LDP X24, X23, [X31 + 0x10]
	0x0347AE48 LDR X30, [X31], #0x40
	0x0347AE4C RET
	0x0347AE50 MOV X0, X22
	0x0347AE54 MOV X1, X23
	0x0347AE58 BL 0x1C171E0
	0x0347AE5C STR X30, [X31 - 0x40]!
	0x0347AE60 STP X24, X23, [X31 + 0x10]
	0x0347AE64 STP X22, X21, [X31 + 0x20]
	0x0347AE68 STP X20, X19, [X31 + 0x30]
	0x0347AE6C ADRP X21, 0xF63000
	0x0347AE70 LDRB W8, [X21 + 0x879]
	0x0347AE74 MOV X19, X1
	0x0347AE78 MOV X20, X0
	0x0347AE7C TBNZ X8, 0x0, 0x347AE94
	0x0347AE80 ADRP X0, 0xCB6000
	0x0347AE84 LDR X0, [X0 + 0xB80]
	0x0347AE88 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF64000
	009 Move W8, [X21+2145]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC7D000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2145], W8
	021 Move X24, 0xC7D000
	022 Add X20, X20, 56
	023 Move X21, [X20]
	024 Move X24, [X24+712]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedError(System.Action`1<System.Exception> value)

Disassembly:
	0x0347AE8C MOVZ W8, 0x1
	0x0347AE90 STRB W8, [X21 + 0x879]
	0x0347AE94 ADRP X24, 0xCB6000
	0x0347AE98 LDR X21, [X20 + 0x98]!
	0x0347AE9C LDR X24, [X24 + 0xB80]
	0x0347AEA0 MOV X0, X21
	0x0347AEA4 MOV X1, X19
	0x0347AEA8 MOV X2, X31
	0x0347AEAC BL 0x33C0DE4
	0x0347AEB0 CBZ X0, 0x347AED0
	0x0347AEB4 LDR X23, [X24]
	0x0347AEB8 MOV X22, X0
	0x0347AEBC MOV X1, X23
	0x0347AEC0 BL 0x1C16E00
	0x0347AEC4 MOV X1, X0
	0x0347AEC8 CBNZ X0, 0x347AED4
	0x0347AECC B 0x347AF00
	0x0347AED0 MOV X1, X31
	0x0347AED4 MOV X0, X20
	0x0347AED8 MOV X2, X21
	0x0347AEDC BL 0x1C24138
	0x0347AEE0 CMP X21, X0
	0x0347AEE4 MOV X21, X0
	0x0347AEE8 B.NE 0x347AEA0
	0x0347AEEC LDP X20, X19, [X31 + 0x30]
	0x0347AEF0 LDP X22, X21, [X31 + 0x20]
	0x0347AEF4 LDP X24, X23, [X31 + 0x10]
	0x0347AEF8 LDR X30, [X31], #0x40
	0x0347AEFC RET
	0x0347AF00 MOV X0, X22
	0x0347AF04 MOV X1, X23
	0x0347AF08 BL 0x1C171E0
	0x0347AF0C STR X30, [X31 - 0x40]!
	0x0347AF10 STP X24, X23, [X31 + 0x10]
	0x0347AF14 STP X22, X21, [X31 + 0x20]
	0x0347AF18 STP X20, X19, [X31 + 0x30]
	0x0347AF1C ADRP X21, 0xF63000
	0x0347AF20 LDRB W8, [X21 + 0x87A]
	0x0347AF24 MOV X19, X1
	0x0347AF28 MOV X20, X0
	0x0347AF2C TBNZ X8, 0x0, 0x347AF44
	0x0347AF30 ADRP X0, 0xCB6000
	0x0347AF34 LDR X0, [X0 + 0xB80]
	0x0347AF38 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF64000
	009 Move W8, [X21+2146]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC7D000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2146], W8
	021 Move X24, 0xC7D000
	022 Add X20, X20, 56
	023 Move X21, [X20]
	024 Move X24, [X24+712]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedMatchmakerMatched(System.Action`1<Nakama.IMatchmakerMatched> value)

Disassembly:
	0x0347AF3C MOVZ W8, 0x1
	0x0347AF40 STRB W8, [X21 + 0x87A]
	0x0347AF44 ADRP X24, 0xCB6000
	0x0347AF48 LDR X21, [X20 + 0x98]!
	0x0347AF4C LDR X24, [X24 + 0xB80]
	0x0347AF50 MOV X0, X21
	0x0347AF54 MOV X1, X19
	0x0347AF58 MOV X2, X31
	0x0347AF5C BL 0x33C0FDC
	0x0347AF60 CBZ X0, 0x347AF80
	0x0347AF64 LDR X23, [X24]
	0x0347AF68 MOV X22, X0
	0x0347AF6C MOV X1, X23
	0x0347AF70 BL 0x1C16E00
	0x0347AF74 MOV X1, X0
	0x0347AF78 CBNZ X0, 0x347AF84
	0x0347AF7C B 0x347AFB0
	0x0347AF80 MOV X1, X31
	0x0347AF84 MOV X0, X20
	0x0347AF88 MOV X2, X21
	0x0347AF8C BL 0x1C24138
	0x0347AF90 CMP X21, X0
	0x0347AF94 MOV X21, X0
	0x0347AF98 B.NE 0x347AF50
	0x0347AF9C LDP X20, X19, [X31 + 0x30]
	0x0347AFA0 LDP X22, X21, [X31 + 0x20]
	0x0347AFA4 LDP X24, X23, [X31 + 0x10]
	0x0347AFA8 LDR X30, [X31], #0x40
	0x0347AFAC RET
	0x0347AFB0 MOV X0, X22
	0x0347AFB4 MOV X1, X23
	0x0347AFB8 BL 0x1C171E0
	0x0347AFBC STR X30, [X31 - 0x40]!
	0x0347AFC0 STP X24, X23, [X31 + 0x10]
	0x0347AFC4 STP X22, X21, [X31 + 0x20]
	0x0347AFC8 STP X20, X19, [X31 + 0x30]
	0x0347AFCC ADRP X21, 0xF63000
	0x0347AFD0 LDRB W8, [X21 + 0x87B]
	0x0347AFD4 MOV X19, X1
	0x0347AFD8 MOV X20, X0
	0x0347AFDC TBNZ X8, 0x0, 0x347AFF4
	0x0347AFE0 ADRP X0, 0xCB6000
	0x0347AFE4 LDR X0, [X0 + 0xB88]
	0x0347AFE8 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF64000
	009 Move W8, [X21+2147]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB7000
	017 Move X0, [X0+2872]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2147], W8
	021 Move X24, 0xCB7000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+2872]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedMatchmakerMatched(System.Action`1<Nakama.IMatchmakerMatched> value)

Disassembly:
	0x0347AFEC MOVZ W8, 0x1
	0x0347AFF0 STRB W8, [X21 + 0x87B]
	0x0347AFF4 ADRP X24, 0xCB6000
	0x0347AFF8 LDR X21, [X20 + 0xA0]!
	0x0347AFFC LDR X24, [X24 + 0xB88]
	0x0347B000 MOV X0, X21
	0x0347B004 MOV X1, X19
	0x0347B008 MOV X2, X31
	0x0347B00C BL 0x33C0DE4
	0x0347B010 CBZ X0, 0x347B030
	0x0347B014 LDR X23, [X24]
	0x0347B018 MOV X22, X0
	0x0347B01C MOV X1, X23
	0x0347B020 BL 0x1C16E00
	0x0347B024 MOV X1, X0
	0x0347B028 CBNZ X0, 0x347B034
	0x0347B02C B 0x347B060
	0x0347B030 MOV X1, X31
	0x0347B034 MOV X0, X20
	0x0347B038 MOV X2, X21
	0x0347B03C BL 0x1C24138
	0x0347B040 CMP X21, X0
	0x0347B044 MOV X21, X0
	0x0347B048 B.NE 0x347B000
	0x0347B04C LDP X20, X19, [X31 + 0x30]
	0x0347B050 LDP X22, X21, [X31 + 0x20]
	0x0347B054 LDP X24, X23, [X31 + 0x10]
	0x0347B058 LDR X30, [X31], #0x40
	0x0347B05C RET
	0x0347B060 MOV X0, X22
	0x0347B064 MOV X1, X23
	0x0347B068 BL 0x1C171E0
	0x0347B06C STR X30, [X31 - 0x40]!
	0x0347B070 STP X24, X23, [X31 + 0x10]
	0x0347B074 STP X22, X21, [X31 + 0x20]
	0x0347B078 STP X20, X19, [X31 + 0x30]
	0x0347B07C ADRP X21, 0xF62000
	0x0347B080 LDRB W8, [X21 + 0x87C]
	0x0347B084 MOV X19, X1
	0x0347B088 MOV X20, X0
	0x0347B08C TBNZ X8, 0x0, 0x347B0A4
	0x0347B090 ADRP X0, 0xCB5000
	0x0347B094 LDR X0, [X0 + 0xB88]
	0x0347B098 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF64000
	009 Move W8, [X21+2148]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2872]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2148], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+2872]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedMatchState(System.Action`1<Nakama.IMatchState> value)

Disassembly:
	0x0347B09C MOVZ W8, 0x1
	0x0347B0A0 STRB W8, [X21 + 0x87C]
	0x0347B0A4 ADRP X24, 0xCB5000
	0x0347B0A8 LDR X21, [X20 + 0xA0]!
	0x0347B0AC LDR X24, [X24 + 0xB88]
	0x0347B0B0 MOV X0, X21
	0x0347B0B4 MOV X1, X19
	0x0347B0B8 MOV X2, X31
	0x0347B0BC BL 0x33C0FDC
	0x0347B0C0 CBZ X0, 0x347B0E0
	0x0347B0C4 LDR X23, [X24]
	0x0347B0C8 MOV X22, X0
	0x0347B0CC MOV X1, X23
	0x0347B0D0 BL 0x1C16E00
	0x0347B0D4 MOV X1, X0
	0x0347B0D8 CBNZ X0, 0x347B0E4
	0x0347B0DC B 0x347B110
	0x0347B0E0 MOV X1, X31
	0x0347B0E4 MOV X0, X20
	0x0347B0E8 MOV X2, X21
	0x0347B0EC BL 0x1C24138
	0x0347B0F0 CMP X21, X0
	0x0347B0F4 MOV X21, X0
	0x0347B0F8 B.NE 0x347B0B0
	0x0347B0FC LDP X20, X19, [X31 + 0x30]
	0x0347B100 LDP X22, X21, [X31 + 0x20]
	0x0347B104 LDP X24, X23, [X31 + 0x10]
	0x0347B108 LDR X30, [X31], #0x40
	0x0347B10C RET
	0x0347B110 MOV X0, X22
	0x0347B114 MOV X1, X23
	0x0347B118 BL 0x1C171E0
	0x0347B11C STR X30, [X31 - 0x40]!
	0x0347B120 STP X24, X23, [X31 + 0x10]
	0x0347B124 STP X22, X21, [X31 + 0x20]
	0x0347B128 STP X20, X19, [X31 + 0x30]
	0x0347B12C ADRP X21, 0xF62000
	0x0347B130 LDRB W8, [X21 + 0x87D]
	0x0347B134 MOV X19, X1
	0x0347B138 MOV X20, X0
	0x0347B13C TBNZ X8, 0x0, 0x347B154
	0x0347B140 ADRP X0, 0xCB5000
	0x0347B144 LDR X0, [X0 + 0xB90]
	0x0347B148 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2149]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2149], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 72
	023 Move X21, [X20]
	024 Move X24, [X24+2880]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedMatchState(System.Action`1<Nakama.IMatchState> value)

Disassembly:
	0x0347B14C MOVZ W8, 0x1
	0x0347B150 STRB W8, [X21 + 0x87D]
	0x0347B154 ADRP X24, 0xCB5000
	0x0347B158 LDR X21, [X20 + 0xA8]!
	0x0347B15C LDR X24, [X24 + 0xB90]
	0x0347B160 MOV X0, X21
	0x0347B164 MOV X1, X19
	0x0347B168 MOV X2, X31
	0x0347B16C BL 0x33C0DE4
	0x0347B170 CBZ X0, 0x347B190
	0x0347B174 LDR X23, [X24]
	0x0347B178 MOV X22, X0
	0x0347B17C MOV X1, X23
	0x0347B180 BL 0x1C16E00
	0x0347B184 MOV X1, X0
	0x0347B188 CBNZ X0, 0x347B194
	0x0347B18C B 0x347B1C0
	0x0347B190 MOV X1, X31
	0x0347B194 MOV X0, X20
	0x0347B198 MOV X2, X21
	0x0347B19C BL 0x1C24138
	0x0347B1A0 CMP X21, X0
	0x0347B1A4 MOV X21, X0
	0x0347B1A8 B.NE 0x347B160
	0x0347B1AC LDP X20, X19, [X31 + 0x30]
	0x0347B1B0 LDP X22, X21, [X31 + 0x20]
	0x0347B1B4 LDP X24, X23, [X31 + 0x10]
	0x0347B1B8 LDR X30, [X31], #0x40
	0x0347B1BC RET
	0x0347B1C0 MOV X0, X22
	0x0347B1C4 MOV X1, X23
	0x0347B1C8 BL 0x1C171E0
	0x0347B1CC STR X30, [X31 - 0x40]!
	0x0347B1D0 STP X24, X23, [X31 + 0x10]
	0x0347B1D4 STP X22, X21, [X31 + 0x20]
	0x0347B1D8 STP X20, X19, [X31 + 0x30]
	0x0347B1DC ADRP X21, 0xF62000
	0x0347B1E0 LDRB W8, [X21 + 0x87E]
	0x0347B1E4 MOV X19, X1
	0x0347B1E8 MOV X20, X0
	0x0347B1EC TBNZ X8, 0x0, 0x347B204
	0x0347B1F0 ADRP X0, 0xCB5000
	0x0347B1F4 LDR X0, [X0 + 0xB90]
	0x0347B1F8 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2150]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2150], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 72
	023 Move X21, [X20]
	024 Move X24, [X24+2880]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedMatchPresence(System.Action`1<Nakama.IMatchPresenceEvent> value)

Disassembly:
	0x0347B1FC MOVZ W8, 0x1
	0x0347B200 STRB W8, [X21 + 0x87E]
	0x0347B204 ADRP X24, 0xCB5000
	0x0347B208 LDR X21, [X20 + 0xA8]!
	0x0347B20C LDR X24, [X24 + 0xB90]
	0x0347B210 MOV X0, X21
	0x0347B214 MOV X1, X19
	0x0347B218 MOV X2, X31
	0x0347B21C BL 0x33C0FDC
	0x0347B220 CBZ X0, 0x347B240
	0x0347B224 LDR X23, [X24]
	0x0347B228 MOV X22, X0
	0x0347B22C MOV X1, X23
	0x0347B230 BL 0x1C16E00
	0x0347B234 MOV X1, X0
	0x0347B238 CBNZ X0, 0x347B244
	0x0347B23C B 0x347B270
	0x0347B240 MOV X1, X31
	0x0347B244 MOV X0, X20
	0x0347B248 MOV X2, X21
	0x0347B24C BL 0x1C24138
	0x0347B250 CMP X21, X0
	0x0347B254 MOV X21, X0
	0x0347B258 B.NE 0x347B210
	0x0347B25C LDP X20, X19, [X31 + 0x30]
	0x0347B260 LDP X22, X21, [X31 + 0x20]
	0x0347B264 LDP X24, X23, [X31 + 0x10]
	0x0347B268 LDR X30, [X31], #0x40
	0x0347B26C RET
	0x0347B270 MOV X0, X22
	0x0347B274 MOV X1, X23
	0x0347B278 BL 0x1C171E0
	0x0347B27C STR X30, [X31 - 0x20]!
	0x0347B280 STP X20, X19, [X31 + 0x10]
	0x0347B284 ADRP X20, 0xF62000
	0x0347B288 LDRB W8, [X20 + 0x87F]
	0x0347B28C MOV X19, X0
	0x0347B290 TBNZ X8, 0x0, 0x347B2A8
	0x0347B294 ADRP X0, 0xCB3000
	0x0347B298 LDR X0, [X0 + 0x9E0]
	0x0347B29C BL 0x1C16CF4
	0x0347B2A0 MOVZ W8, 0x1
	0x0347B2A4 STRB W8, [X20 + 0x87F]
	0x0347B2A8 LDR X19, [X19 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2151]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2151], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 80
	023 Move X21, [X20]
	024 Move X24, [X24+2888]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedMatchPresence(System.Action`1<Nakama.IMatchPresenceEvent> value)

Disassembly:
	0x0347B2AC CBZ X19, 0x347B31C
	0x0347B2B0 ADRP X10, 0xCB3000
	0x0347B2B4 LDR X8, [X19]
	0x0347B2B8 LDR X10, [X10 + 0x9E0]
	0x0347B2BC LDRH W9, [X8 + 0x12E]
	0x0347B2C0 LDR X1, [X10]
	0x0347B2C4 CBZ X9, 0x347B2E8
	0x0347B2C8 LDR X10, [X8 + 0xB0]
	0x0347B2CC ADD X10, X10, 0x8
	0x0347B2D0 LDUR X11, [X10 - 0x8]
	0x0347B2D4 CMP X11, X1
	0x0347B2D8 B.EQ 0x347B2F8
	0x0347B2DC SUBS X9, X9, 0x1
	0x0347B2E0 ADD X10, X10, 0x10
	0x0347B2E4 B.NE 0x347B2D0
	0x0347B2E8 MOVZ W2, 0x8
	0x0347B2EC MOV X0, X19
	0x0347B2F0 BL 0x1C5C788
	0x0347B2F4 B 0x347B308
	0x0347B2F8 LDR W9, [X10]
	0x0347B2FC ADD W9, W9, 0x8
	0x0347B300 ADD X8, X8, W9, 0x4, SXTW
	0x0347B304 ADD X0, X8, 0x138
	0x0347B308 LDP X2, X1, [X0]
	0x0347B30C MOV X0, X19
	0x0347B310 LDP X20, X19, [X31 + 0x10]
	0x0347B314 LDR X30, [X31], #0x20
	0x0347B318 BR X2
	0x0347B31C BL 0x1C16F20
	0x0347B320 STR X30, [X31 - 0x20]!
	0x0347B324 STP X20, X19, [X31 + 0x10]
	0x0347B328 ADRP X20, 0xF62000
	0x0347B32C LDRB W8, [X20 + 0x880]
	0x0347B330 MOV X19, X0
	0x0347B334 TBNZ X8, 0x0, 0x347B34C
	0x0347B338 ADRP X0, 0xCB3000
	0x0347B33C LDR X0, [X0 + 0x9E0]
	0x0347B340 BL 0x1C16CF4
	0x0347B344 MOVZ W8, 0x1
	0x0347B348 STRB W8, [X20 + 0x880]
	0x0347B34C LDR X19, [X19 + 0xB8]
	0x0347B350 CBZ X19, 0x347B3C0
	0x0347B354 ADRP X10, 0xCB3000
	0x0347B358 LDR X8, [X19]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2152]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2152], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 80
	023 Move X21, [X20]
	024 Move X24, [X24+2888]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedNotification(System.Action`1<Nakama.IApiNotification> value)

Disassembly:
	0x0347B35C LDR X10, [X10 + 0x9E0]
	0x0347B360 LDRH W9, [X8 + 0x12E]
	0x0347B364 LDR X1, [X10]
	0x0347B368 CBZ X9, 0x347B38C
	0x0347B36C LDR X10, [X8 + 0xB0]
	0x0347B370 ADD X10, X10, 0x8
	0x0347B374 LDUR X11, [X10 - 0x8]
	0x0347B378 CMP X11, X1
	0x0347B37C B.EQ 0x347B39C
	0x0347B380 SUBS X9, X9, 0x1
	0x0347B384 ADD X10, X10, 0x10
	0x0347B388 B.NE 0x347B374
	0x0347B38C MOVZ W2, 0x9
	0x0347B390 MOV X0, X19
	0x0347B394 BL 0x1C5C788
	0x0347B398 B 0x347B3AC
	0x0347B39C LDR W9, [X10]
	0x0347B3A0 ADD W9, W9, 0x9
	0x0347B3A4 ADD X8, X8, W9, 0x4, SXTW
	0x0347B3A8 ADD X0, X8, 0x138
	0x0347B3AC LDP X2, X1, [X0]
	0x0347B3B0 MOV X0, X19
	0x0347B3B4 LDP X20, X19, [X31 + 0x10]
	0x0347B3B8 LDR X30, [X31], #0x20
	0x0347B3BC BR X2
	0x0347B3C0 BL 0x1C16F20
	0x0347B3C4 LDR X0, [X0 + 0xB0]
	0x0347B3C8 RET
	0x0347B3CC STR X1, [X0 + 0xB0]
	0x0347B3D0 RET
	0x0347B3D4 STP X30, X23, [X31 - 0x30]!
	0x0347B3D8 STP X22, X21, [X31 + 0x10]
	0x0347B3DC STP X20, X19, [X31 + 0x20]
	0x0347B3E0 ADRP X20, 0xF62000
	0x0347B3E4 ADRP X23, 0xCB3000
	0x0347B3E8 ADRP X21, 0xCB4000
	0x0347B3EC ADRP X22, 0xC85000
	0x0347B3F0 LDRB W8, [X20 + 0x881]
	0x0347B3F4 LDR X23, [X23 + 0x9C0]
	0x0347B3F8 LDR X21, [X21 + 0x5E8]
	0x0347B3FC LDR X22, [X22 + 0x960]
	0x0347B400 MOV X19, X0
	0x0347B404 TBNZ X8, 0x0, 0x347B434
	0x0347B408 ADRP X0, 0xCB3000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2153]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC7A000
	017 Move X0, [X0+880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2153], W8
	021 Move X24, 0xC7A000
	022 Add X20, X20, 88
	023 Move X21, [X20]
	024 Move X24, [X24+880]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedNotification(System.Action`1<Nakama.IApiNotification> value)

Disassembly:
	0x0347B40C LDR X0, [X0 + 0x9C0]
	0x0347B410 BL 0x1C16CF4
	0x0347B414 ADRP X0, 0xCB4000
	0x0347B418 LDR X0, [X0 + 0x5E8]
	0x0347B41C BL 0x1C16CF4
	0x0347B420 ADRP X0, 0xC85000
	0x0347B424 LDR X0, [X0 + 0x960]
	0x0347B428 BL 0x1C16CF4
	0x0347B42C MOVZ W8, 0x1
	0x0347B430 STRB W8, [X20 + 0x881]
	0x0347B434 LDR X0, [X23]
	0x0347B438 BL 0x1C16F10
	0x0347B43C MOVZ W1, 0xA
	0x0347B440 MOVZ W2, 0x40000
	0x0347B444 MOV X3, X31
	0x0347B448 MOV X20, X0
	0x0347B44C BL 0x3487304
	0x0347B450 LDR X1, [X21]
	0x0347B454 LDR X2, [X22]
	0x0347B458 MOV X0, X19
	0x0347B45C MOV X4, X20
	0x0347B460 LDP X20, X19, [X31 + 0x20]
	0x0347B464 LDP X22, X21, [X31 + 0x10]
	0x0347B468 MOVZ W3, 0x1CB6
	0x0347B46C MOVZ W5, 0xA
	0x0347B470 LDP X30, X23, [X31], #0x30
	0x0347B474 B 0x347B478
	0x0347B478 STP X30, X27, [X31 - 0x50]!
	0x0347B47C STP X26, X25, [X31 + 0x10]
	0x0347B480 STP X24, X23, [X31 + 0x20]
	0x0347B484 STP X22, X21, [X31 + 0x30]
	0x0347B488 STP X20, X19, [X31 + 0x40]
	0x0347B48C ADRP X27, 0xF62000
	0x0347B490 ADRP X25, 0xC7E000
	0x0347B494 ADRP X26, 0xCB4000
	0x0347B498 LDRB W8, [X27 + 0x883]
	0x0347B49C LDR X25, [X25 + 0xCC0]
	0x0347B4A0 LDR X26, [X26 + 0x610]
	0x0347B4A4 MOV W20, W5
	0x0347B4A8 MOV X24, X4
	0x0347B4AC MOV W21, W3
	0x0347B4B0 MOV X22, X2
	0x0347B4B4 MOV X23, X1
	0x0347B4B8 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2154]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC7A000
	017 Move X0, [X0+880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2154], W8
	021 Move X24, 0xC7A000
	022 Add X20, X20, 88
	023 Move X21, [X20]
	024 Move X24, [X24+880]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedStatusPresence(System.Action`1<Nakama.IStatusPresenceEvent> value)

Disassembly:
	0x0347B4BC TBNZ X8, 0x0, 0x347B570
	0x0347B4C0 ADRP X0, 0xCB3000
	0x0347B4C4 LDR X0, [X0 + 0x9D0]
	0x0347B4C8 BL 0x1C16CF4
	0x0347B4CC ADRP X0, 0xC7B000
	0x0347B4D0 LDR X0, [X0 + 0x2C8]
	0x0347B4D4 BL 0x1C16CF4
	0x0347B4D8 ADRP X0, 0xC79000
	0x0347B4DC LDR X0, [X0 + 0xE70]
	0x0347B4E0 BL 0x1C16CF4
	0x0347B4E4 ADRP X0, 0xCB5000
	0x0347B4E8 LDR X0, [X0 + 0xB98]
	0x0347B4EC BL 0x1C16CF4
	0x0347B4F0 ADRP X0, 0xCB5000
	0x0347B4F4 LDR X0, [X0 + 0xBA0]
	0x0347B4F8 BL 0x1C16CF4
	0x0347B4FC ADRP X0, 0xCB3000
	0x0347B500 LDR X0, [X0 + 0x9E0]
	0x0347B504 BL 0x1C16CF4
	0x0347B508 ADRP X0, 0xCB4000
	0x0347B50C LDR X0, [X0 + 0x610]
	0x0347B510 BL 0x1C16CF4
	0x0347B514 ADRP X0, 0xC7E000
	0x0347B518 LDR X0, [X0 + 0xCC0]
	0x0347B51C BL 0x1C16CF4
	0x0347B520 ADRP X0, 0xCB5000
	0x0347B524 LDR X0, [X0 + 0xBA8]
	0x0347B528 BL 0x1C16CF4
	0x0347B52C ADRP X0, 0xCB5000
	0x0347B530 LDR X0, [X0 + 0xBB0]
	0x0347B534 BL 0x1C16CF4
	0x0347B538 ADRP X0, 0xCB5000
	0x0347B53C LDR X0, [X0 + 0xBB8]
	0x0347B540 BL 0x1C16CF4
	0x0347B544 ADRP X0, 0xCB5000
	0x0347B548 LDR X0, [X0 + 0xBC0]
	0x0347B54C BL 0x1C16CF4
	0x0347B550 ADRP X0, 0xC7A000
	0x0347B554 LDR X0, [X0 + 0x570]
	0x0347B558 BL 0x1C16CF4
	0x0347B55C ADRP X0, 0xC81000
	0x0347B560 LDR X0, [X0 + 0x3A0]
	0x0347B564 BL 0x1C16CF4
	0x0347B568 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2155]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC7A000
	017 Move X0, [X0+344]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2155], W8
	021 Move X24, 0xC7A000
	022 Add X20, X20, 96
	023 Move X21, [X20]
	024 Move X24, [X24+344]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedStatusPresence(System.Action`1<Nakama.IStatusPresenceEvent> value)

Disassembly:
	0x0347B56C STRB W8, [X27 + 0x883]
	0x0347B570 LDR X0, [X25]
	0x0347B574 ADRP X27, 0xC81000
	0x0347B578 LDR X27, [X27 + 0x3A0]
	0x0347B57C BL 0x1C16F10
	0x0347B580 MOV X1, X31
	0x0347B584 MOV X25, X0
	0x0347B588 BL 0x33BDD8C
	0x0347B58C MOV X0, X19
	0x0347B590 MOV X1, X31
	0x0347B594 STR X25, [X19 + 0xD8]
	0x0347B598 BL 0x33BDD8C
	0x0347B59C LDR X0, [X26]
	0x0347B5A0 LDR W8, [X0 + 0xE0]
	0x0347B5A4 CBNZ W8, 0x347B5B0
	0x0347B5A8 BL 0x1C16DFC
	0x0347B5AC LDR X0, [X26]
	0x0347B5B0 LDR X8, [X0 + 0xB8]
	0x0347B5B4 LDR X8, [X8]
	0x0347B5B8 STP X8, X24, [X19 + 0xB0]
	0x0347B5BC LDR X0, [X27]
	0x0347B5C0 BL 0x1C16F10
	0x0347B5C4 MOV X1, X23
	0x0347B5C8 MOV X2, X22
	0x0347B5CC MOV W3, W21
	0x0347B5D0 MOV X4, X31
	0x0347B5D4 MOV X24, X0
	0x0347B5D8 BL 0x3628830
	0x0347B5DC CBZ X24, 0x347B8A0
	0x0347B5E0 ADRP X21, 0xCB5000
	0x0347B5E4 ADRP X25, 0xCB5000
	0x0347B5E8 ADRP X26, 0xC7A000
	0x0347B5EC ADRP X23, 0xC79000
	0x0347B5F0 ADRP X22, 0xCB5000
	0x0347B5F4 LDR X21, [X21 + 0xBA0]
	0x0347B5F8 LDR X25, [X25 + 0xB98]
	0x0347B5FC LDR X26, [X26 + 0x570]
	0x0347B600 LDR X23, [X23 + 0xE70]
	0x0347B604 LDR X22, [X22 + 0xBB0]
	0x0347B608 MOV X0, X24
	0x0347B60C MOV X1, X31
	0x0347B610 BL 0x3628A38
	0x0347B614 STR X0, [X19 + 0xC0]
	0x0347B618 LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2156]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC7A000
	017 Move X0, [X0+344]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2156], W8
	021 Move X24, 0xC7A000
	022 Add X20, X20, 96
	023 Move X21, [X20]
	024 Move X24, [X24+344]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedStreamPresence(System.Action`1<Nakama.IStreamPresenceEvent> value)

Disassembly:
	0x0347B61C BL 0x1C16F10
	0x0347B620 LDR X1, [X25]
	0x0347B624 MOV X21, X0
	0x0347B628 BL 0x2AA4804
	0x0347B62C STR X21, [X19 + 0xC8]
	0x0347B630 LDR X0, [X26]
	0x0347B634 LDR W8, [X0 + 0xE0]
	0x0347B638 CBNZ W8, 0x347B640
	0x0347B63C BL 0x1C16DFC
	0x0347B640 SCVTF D0, W20
	0x0347B644 MOV X0, X31
	0x0347B648 BL 0x3394754
	0x0347B64C STR X0, [X19 + 0xD0]
	0x0347B650 LDR X0, [X23]
	0x0347B654 LDR X20, [X19 + 0xB8]
	0x0347B658 BL 0x1C16F10
	0x0347B65C LDR X2, [X22]
	0x0347B660 MOV X1, X19
	0x0347B664 MOV X3, X31
	0x0347B668 MOV X21, X0
	0x0347B66C BL 0x3314368
	0x0347B670 CBZ X20, 0x347B8A0
	0x0347B674 ADRP X22, 0xCB3000
	0x0347B678 LDR X8, [X20]
	0x0347B67C LDR X22, [X22 + 0x9E0]
	0x0347B680 ADRP X24, 0xCB5000
	0x0347B684 LDRH W9, [X8 + 0x12E]
	0x0347B688 LDR X1, [X22]
	0x0347B68C LDR X24, [X24 + 0xBB8]
	0x0347B690 CBZ X9, 0x347B6B4
	0x0347B694 LDR X10, [X8 + 0xB0]
	0x0347B698 ADD X10, X10, 0x8
	0x0347B69C LDUR X11, [X10 - 0x8]
	0x0347B6A0 CMP X11, X1
	0x0347B6A4 B.EQ 0x347B6C4
	0x0347B6A8 SUBS X9, X9, 0x1
	0x0347B6AC ADD X10, X10, 0x10
	0x0347B6B0 B.NE 0x347B69C
	0x0347B6B4 MOV X0, X20
	0x0347B6B8 MOV W2, W31
	0x0347B6BC BL 0x1C5C788
	0x0347B6C0 B 0x347B6D0
	0x0347B6C4 LDRSW X9, [X10]
	0x0347B6C8 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2157]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2896]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2157], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 104
	023 Move X21, [X20]
	024 Move X24, [X24+2896]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedStreamPresence(System.Action`1<Nakama.IStreamPresenceEvent> value)

Disassembly:
	0x0347B6CC ADD X0, X8, 0x138
	0x0347B6D0 LDP X8, X2, [X0]
	0x0347B6D4 MOV X0, X20
	0x0347B6D8 MOV X1, X21
	0x0347B6DC BLR X8
	0x0347B6E0 LDR X0, [X23]
	0x0347B6E4 LDR X20, [X19 + 0xB8]
	0x0347B6E8 BL 0x1C16F10
	0x0347B6EC LDR X2, [X24]
	0x0347B6F0 MOV X1, X19
	0x0347B6F4 MOV X3, X31
	0x0347B6F8 MOV X21, X0
	0x0347B6FC BL 0x3314368
	0x0347B700 CBZ X20, 0x347B8A0
	0x0347B704 LDR X8, [X20]
	0x0347B708 ADRP X24, 0xC7B000
	0x0347B70C ADRP X23, 0xCB5000
	0x0347B710 LDR X1, [X22]
	0x0347B714 LDRH W9, [X8 + 0x12E]
	0x0347B718 LDR X24, [X24 + 0x2C8]
	0x0347B71C LDR X23, [X23 + 0xBC0]
	0x0347B720 CBZ X9, 0x347B744
	0x0347B724 LDR X10, [X8 + 0xB0]
	0x0347B728 ADD X10, X10, 0x8
	0x0347B72C LDUR X11, [X10 - 0x8]
	0x0347B730 CMP X11, X1
	0x0347B734 B.EQ 0x347B754
	0x0347B738 SUBS X9, X9, 0x1
	0x0347B73C ADD X10, X10, 0x10
	0x0347B740 B.NE 0x347B72C
	0x0347B744 MOVZ W2, 0x2
	0x0347B748 MOV X0, X20
	0x0347B74C BL 0x1C5C788
	0x0347B750 B 0x347B764
	0x0347B754 LDR W9, [X10]
	0x0347B758 ADD W9, W9, 0x2
	0x0347B75C ADD X8, X8, W9, 0x4, SXTW
	0x0347B760 ADD X0, X8, 0x138
	0x0347B764 LDP X8, X2, [X0]
	0x0347B768 MOV X0, X20
	0x0347B76C MOV X1, X21
	0x0347B770 BLR X8
	0x0347B774 LDR X0, [X24]
	0x0347B778 LDR X20, [X19 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2158]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2896]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2158], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 104
	023 Move X21, [X20]
	024 Move X24, [X24+2896]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedStreamState(System.Action`1<Nakama.IStreamState> value)

Disassembly:
	0x0347B77C BL 0x1C16F10
	0x0347B780 LDR X2, [X23]
	0x0347B784 MOV X1, X19
	0x0347B788 MOV X3, X31
	0x0347B78C MOV X21, X0
	0x0347B790 BL 0x2A6B948
	0x0347B794 CBZ X20, 0x347B8A0
	0x0347B798 LDR X8, [X20]
	0x0347B79C ADRP X24, 0xCB3000
	0x0347B7A0 ADRP X23, 0xCB5000
	0x0347B7A4 LDR X1, [X22]
	0x0347B7A8 LDRH W9, [X8 + 0x12E]
	0x0347B7AC LDR X24, [X24 + 0x9D0]
	0x0347B7B0 LDR X23, [X23 + 0xBA8]
	0x0347B7B4 CBZ X9, 0x347B7D8
	0x0347B7B8 LDR X10, [X8 + 0xB0]
	0x0347B7BC ADD X10, X10, 0x8
	0x0347B7C0 LDUR X11, [X10 - 0x8]
	0x0347B7C4 CMP X11, X1
	0x0347B7C8 B.EQ 0x347B7E8
	0x0347B7CC SUBS X9, X9, 0x1
	0x0347B7D0 ADD X10, X10, 0x10
	0x0347B7D4 B.NE 0x347B7C0
	0x0347B7D8 MOVZ W2, 0x4
	0x0347B7DC MOV X0, X20
	0x0347B7E0 BL 0x1C5C788
	0x0347B7E4 B 0x347B7F8
	0x0347B7E8 LDR W9, [X10]
	0x0347B7EC ADD W9, W9, 0x4
	0x0347B7F0 ADD X8, X8, W9, 0x4, SXTW
	0x0347B7F4 ADD X0, X8, 0x138
	0x0347B7F8 LDP X8, X2, [X0]
	0x0347B7FC MOV X0, X20
	0x0347B800 MOV X1, X21
	0x0347B804 BLR X8
	0x0347B808 LDR X0, [X24]
	0x0347B80C LDR X20, [X19 + 0xB8]
	0x0347B810 BL 0x1C16F10
	0x0347B814 LDR X2, [X23]
	0x0347B818 MOV X1, X19
	0x0347B81C MOV X3, X31
	0x0347B820 MOV X21, X0
	0x0347B824 BL 0x297E570
	0x0347B828 CBZ X20, 0x347B8A0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2159]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2159], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 112
	023 Move X21, [X20]
	024 Move X24, [X24+2904]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedStreamState(System.Action`1<Nakama.IStreamState> value)

Disassembly:
	0x0347B82C LDR X8, [X20]
	0x0347B830 LDR X1, [X22]
	0x0347B834 LDRH W9, [X8 + 0x12E]
	0x0347B838 CBZ X9, 0x347B85C
	0x0347B83C LDR X10, [X8 + 0xB0]
	0x0347B840 ADD X10, X10, 0x8
	0x0347B844 LDUR X11, [X10 - 0x8]
	0x0347B848 CMP X11, X1
	0x0347B84C B.EQ 0x347B86C
	0x0347B850 SUBS X9, X9, 0x1
	0x0347B854 ADD X10, X10, 0x10
	0x0347B858 B.NE 0x347B844
	0x0347B85C MOVZ W2, 0x6
	0x0347B860 MOV X0, X20
	0x0347B864 BL 0x1C5C788
	0x0347B868 B 0x347B87C
	0x0347B86C LDR W9, [X10]
	0x0347B870 ADD W9, W9, 0x6
	0x0347B874 ADD X8, X8, W9, 0x4, SXTW
	0x0347B878 ADD X0, X8, 0x138
	0x0347B87C LDP X3, X2, [X0]
	0x0347B880 MOV X0, X20
	0x0347B884 MOV X1, X21
	0x0347B888 LDP X20, X19, [X31 + 0x40]
	0x0347B88C LDP X22, X21, [X31 + 0x30]
	0x0347B890 LDP X24, X23, [X31 + 0x20]
	0x0347B894 LDP X26, X25, [X31 + 0x10]
	0x0347B898 LDP X30, X27, [X31], #0x50
	0x0347B89C BR X3
	0x0347B8A0 BL 0x1C16F20
	0x0347B8A4 STP X30, X23, [X31 - 0x30]!
	0x0347B8A8 STP X22, X21, [X31 + 0x10]
	0x0347B8AC STP X20, X19, [X31 + 0x20]
	0x0347B8B0 ADRP X21, 0xF62000
	0x0347B8B4 ADRP X22, 0xCB4000
	0x0347B8B8 ADRP X23, 0xC85000
	0x0347B8BC LDRB W8, [X21 + 0x882]
	0x0347B8C0 LDR X22, [X22 + 0x5E8]
	0x0347B8C4 LDR X23, [X23 + 0x960]
	0x0347B8C8 MOV X19, X1
	0x0347B8CC MOV X20, X0
	0x0347B8D0 TBNZ X8, 0x0, 0x347B8F4
	0x0347B8D4 ADRP X0, 0xCB4000
	0x0347B8D8 LDR X0, [X0 + 0x5E8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2160]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2160], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 112
	023 Move X21, [X20]
	024 Move X24, [X24+2904]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedParty(System.Action`1<Nakama.IParty> value)

Disassembly:
	0x0347B8DC BL 0x1C16CF4
	0x0347B8E0 ADRP X0, 0xC85000
	0x0347B8E4 LDR X0, [X0 + 0x960]
	0x0347B8E8 BL 0x1C16CF4
	0x0347B8EC MOVZ W8, 0x1
	0x0347B8F0 STRB W8, [X21 + 0x882]
	0x0347B8F4 LDR X1, [X22]
	0x0347B8F8 LDR X2, [X23]
	0x0347B8FC MOV X0, X20
	0x0347B900 MOV X4, X19
	0x0347B904 LDP X20, X19, [X31 + 0x20]
	0x0347B908 LDP X22, X21, [X31 + 0x10]
	0x0347B90C MOVZ W3, 0x1CB6
	0x0347B910 MOVZ W5, 0xA
	0x0347B914 LDP X30, X23, [X31], #0x30
	0x0347B918 B 0x347B478
	0x0347B91C SUB X31, X31, 0x50
	0x0347B920 STP X30, X25, [X31 + 0x10]
	0x0347B924 STP X24, X23, [X31 + 0x20]
	0x0347B928 STP X22, X21, [X31 + 0x30]
	0x0347B92C STP X20, X19, [X31 + 0x40]
	0x0347B930 ADRP X23, 0xF62000
	0x0347B934 ADRP X22, 0xCB5000
	0x0347B938 ADRP X25, 0xC78000
	0x0347B93C ADRP X24, 0xC7C000
	0x0347B940 LDRB W8, [X23 + 0x884]
	0x0347B944 LDR X22, [X22 + 0xBC8]
	0x0347B948 LDR X25, [X25 + 0x758]
	0x0347B94C LDR X24, [X24 + 0x110]
	0x0347B950 MOV X20, X2
	0x0347B954 MOV X21, X1
	0x0347B958 MOV X19, X0
	0x0347B95C TBNZ X8, 0x0, 0x347B9A4
	0x0347B960 ADRP X0, 0xC78000
	0x0347B964 LDR X0, [X0 + 0x758]
	0x0347B968 BL 0x1C16CF4
	0x0347B96C ADRP X0, 0xCB5000
	0x0347B970 LDR X0, [X0 + 0xBD0]
	0x0347B974 BL 0x1C16CF4
	0x0347B978 ADRP X0, 0xCB5000
	0x0347B97C LDR X0, [X0 + 0x808]
	0x0347B980 BL 0x1C16CF4
	0x0347B984 ADRP X0, 0xCB5000
	0x0347B988 LDR X0, [X0 + 0xBC8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2161]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2912]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2161], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 120
	023 Move X21, [X20]
	024 Move X24, [X24+2912]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedParty(System.Action`1<Nakama.IParty> value)

Disassembly:
	0x0347B98C BL 0x1C16CF4
	0x0347B990 ADRP X0, 0xC7C000
	0x0347B994 LDR X0, [X0 + 0x110]
	0x0347B998 BL 0x1C16CF4
	0x0347B99C MOVZ W8, 0x1
	0x0347B9A0 STRB W8, [X23 + 0x884]
	0x0347B9A4 ADD X0, X19, 0x10
	0x0347B9A8 MOV X1, X31
	0x0347B9AC BL 0x33EB14C
	0x0347B9B0 LDR X8, [X22]
	0x0347B9B4 MOV W23, W0
	0x0347B9B8 MOV X0, X8
	0x0347B9BC BL 0x1C16F10
	0x0347B9C0 MOV X1, X31
	0x0347B9C4 MOV X22, X0
	0x0347B9C8 BL 0x348068C
	0x0347B9CC LDR X0, [X25]
	0x0347B9D0 ADD X1, X31, 0xC
	0x0347B9D4 STR W23, [X31 + 0xC]
	0x0347B9D8 BL 0x1C16E04
	0x0347B9DC LDR X8, [X24]
	0x0347B9E0 MOV X1, X0
	0x0347B9E4 MOV X2, X31
	0x0347B9E8 MOV X0, X8
	0x0347B9EC BL 0x321EFD0
	0x0347B9F0 CBZ X22, 0x347BA88
	0x0347B9F4 ADRP X8, 0xCB5000
	0x0347B9F8 LDR X8, [X8 + 0xBD0]
	0x0347B9FC STR X0, [X22 + 0x10]
	0x0347BA00 LDR X0, [X8]
	0x0347BA04 BL 0x1C16F10
	0x0347BA08 MOV X1, X31
	0x0347BA0C MOV X23, X0
	0x0347BA10 BL 0x33BDD8C
	0x0347BA14 CBZ X23, 0x347BA88
	0x0347BA18 STR X21, [X23 + 0x10]
	0x0347BA1C CBZ X20, 0x347BA40
	0x0347BA20 ADRP X8, 0xCB5000
	0x0347BA24 LDR X8, [X8 + 0x808]
	0x0347BA28 LDR X9, [X20]
	0x0347BA2C LDR X8, [X8]
	0x0347BA30 LDRB W11, [X9 + 0x130]
	0x0347BA34 LDRB W10, [X8 + 0x130]
	0x0347BA38 CMP W11, W10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2162]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2912]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2162], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 120
	023 Move X21, [X20]
	024 Move X24, [X24+2912]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedPartyClose(System.Action`1<Nakama.IPartyClose> value)

Disassembly:
	0x0347BA3C B.CS 0x347BA48
	0x0347BA40 MOV X8, X31
	0x0347BA44 B 0x347BA5C
	0x0347BA48 LDR X9, [X9 + 0xC8]
	0x0347BA4C ADD X9, X9, X10, 0x3, LSL
	0x0347BA50 LDUR X9, [X9 - 0x8]
	0x0347BA54 CMP X9, X8
	0x0347BA58 CSEL X8, X20, X31, EQ
	0x0347BA5C MOV X0, X19
	0x0347BA60 MOV X1, X22
	0x0347BA64 STR X8, [X23 + 0x18]
	0x0347BA68 STR X23, [X22 + 0x138]
	0x0347BA6C BL 0x347BA8C
	0x0347BA70 LDP X20, X19, [X31 + 0x40]
	0x0347BA74 LDP X22, X21, [X31 + 0x30]
	0x0347BA78 LDP X24, X23, [X31 + 0x20]
	0x0347BA7C LDP X30, X25, [X31 + 0x10]
	0x0347BA80 ADD X31, X31, 0x50
	0x0347BA84 RET
	0x0347BA88 BL 0x1C16F20
	0x0347BA8C SUB X31, X31, 0x80
	0x0347BA90 STP X30, X23, [X31 + 0x50]
	0x0347BA94 STP X22, X21, [X31 + 0x60]
	0x0347BA98 STP X20, X19, [X31 + 0x70]
	0x0347BA9C ADRP X22, 0xF62000
	0x0347BAA0 ADRP X21, 0xCB5000
	0x0347BAA4 LDRB W8, [X22 + 0x8B0]
	0x0347BAA8 LDR X21, [X21 + 0xBD8]
	0x0347BAAC MOV X19, X1
	0x0347BAB0 MOV X20, X0
	0x0347BAB4 TBNZ X8, 0x0, 0x347BAF0
	0x0347BAB8 ADRP X0, 0xCB5000
	0x0347BABC LDR X0, [X0 + 0xBE0]
	0x0347BAC0 BL 0x1C16CF4
	0x0347BAC4 ADRP X0, 0xCB5000
	0x0347BAC8 LDR X0, [X0 + 0xBE8]
	0x0347BACC BL 0x1C16CF4
	0x0347BAD0 ADRP X0, 0xCB5000
	0x0347BAD4 LDR X0, [X0 + 0xBF0]
	0x0347BAD8 BL 0x1C16CF4
	0x0347BADC ADRP X0, 0xCB5000
	0x0347BAE0 LDR X0, [X0 + 0xBD8]
	0x0347BAE4 BL 0x1C16CF4
	0x0347BAE8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2163]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2920]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2163], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 128
	023 Move X21, [X20]
	024 Move X24, [X24+2920]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedPartyClose(System.Action`1<Nakama.IPartyClose> value)

Disassembly:
	0x0347BAEC STRB W8, [X22 + 0x8B0]
	0x0347BAF0 LDR X0, [X21]
	0x0347BAF4 MOVI V0.2D, 0x0
	0x0347BAF8 STR X31, [X31 + 0x40]
	0x0347BAFC STP V0, V0, [X31 + 0x20]
	0x0347BB00 STP V0, V0, [X31]
	0x0347BB04 ADRP X21, 0xCB5000
	0x0347BB08 ADRP X23, 0xCB5000
	0x0347BB0C ADRP X22, 0xCB5000
	0x0347BB10 LDR W8, [X0 + 0xE0]
	0x0347BB14 LDR X21, [X21 + 0xBE0]
	0x0347BB18 LDR X23, [X23 + 0xBE8]
	0x0347BB1C LDR X22, [X22 + 0xBF0]
	0x0347BB20 CBNZ W8, 0x347BB28
	0x0347BB24 BL 0x1C16DFC
	0x0347BB28 LDR X0, [X21]
	0x0347BB2C ADD X8, X31, 0x0
	0x0347BB30 ORR X21, X8, 0xF
	0x0347BB34 MOV X8, X21
	0x0347BB38 BL 0x263221C
	0x0347BB3C LDR X2, [X23]
	0x0347BB40 MOVN W8, 0x0
	0x0347BB44 ADD X1, X31, 0x0
	0x0347BB48 MOV X0, X21
	0x0347BB4C STP X20, X19, [X31 + 0x20]
	0x0347BB50 STR W8, [X31]
	0x0347BB54 BL 0x1FD1314
	0x0347BB58 LDR X1, [X22]
	0x0347BB5C MOV X0, X21
	0x0347BB60 BL 0x2632230
	0x0347BB64 LDP X20, X19, [X31 + 0x70]
	0x0347BB68 LDP X22, X21, [X31 + 0x60]
	0x0347BB6C LDP X30, X23, [X31 + 0x50]
	0x0347BB70 ADD X31, X31, 0x80
	0x0347BB74 RET
	0x0347BB78 SUB X31, X31, 0xC0
	0x0347BB7C STR X30, [X31 + 0x60]
	0x0347BB80 STP X28, X27, [X31 + 0x70]
	0x0347BB84 STP X26, X25, [X31 + 0x80]
	0x0347BB88 STP X24, X23, [X31 + 0x90]
	0x0347BB8C STP X22, X21, [X31 + 0xA0]
	0x0347BB90 STP X20, X19, [X31 + 0xB0]
	0x0347BB94 ADRP X27, 0xF62000
	0x0347BB98 ADRP X26, 0xCB5000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2164]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2920]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2164], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 128
	023 Move X21, [X20]
	024 Move X24, [X24+2920]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedPartyData(System.Action`1<Nakama.IPartyData> value)

Disassembly:
	0x0347BB9C LDRB W8, [X27 + 0x885]
	0x0347BBA0 LDR X26, [X26 + 0xBF8]
	0x0347BBA4 MOV X19, X6
	0x0347BBA8 MOV X20, X5
	0x0347BBAC MOV X21, X4
	0x0347BBB0 MOV W22, W3
	0x0347BBB4 MOV W23, W2
	0x0347BBB8 MOV X24, X1
	0x0347BBBC MOV X25, X0
	0x0347BBC0 TBNZ X8, 0x0, 0x347BBFC
	0x0347BBC4 ADRP X0, 0xCB5000
	0x0347BBC8 LDR X0, [X0 + 0xC00]
	0x0347BBCC BL 0x1C16CF4
	0x0347BBD0 ADRP X0, 0xCB5000
	0x0347BBD4 LDR X0, [X0 + 0xC08]
	0x0347BBD8 BL 0x1C16CF4
	0x0347BBDC ADRP X0, 0xCB5000
	0x0347BBE0 LDR X0, [X0 + 0xC10]
	0x0347BBE4 BL 0x1C16CF4
	0x0347BBE8 ADRP X0, 0xCB5000
	0x0347BBEC LDR X0, [X0 + 0xBF8]
	0x0347BBF0 BL 0x1C16CF4
	0x0347BBF4 MOVZ W8, 0x1
	0x0347BBF8 STRB W8, [X27 + 0x885]
	0x0347BBFC LDR X0, [X26]
	0x0347BC00 MOVI V0.2D, 0x0
	0x0347BC04 STR X31, [X31 + 0x50]
	0x0347BC08 STP V0, V0, [X31 + 0x30]
	0x0347BC0C STP V0, V0, [X31 + 0x10]
	0x0347BC10 STR V0, [X31]
	0x0347BC14 ADRP X26, 0xCB5000
	0x0347BC18 ADRP X28, 0xCB5000
	0x0347BC1C ADRP X27, 0xCB5000
	0x0347BC20 LDR W8, [X0 + 0xE0]
	0x0347BC24 LDR X26, [X26 + 0xC00]
	0x0347BC28 LDR X28, [X28 + 0xC08]
	0x0347BC2C LDR X27, [X27 + 0xC10]
	0x0347BC30 CBNZ W8, 0x347BC38
	0x0347BC34 BL 0x1C16DFC
	0x0347BC38 LDR X0, [X26]
	0x0347BC3C ADD X8, X31, 0x0
	0x0347BC40 ORR X26, X8, 0xF
	0x0347BC44 MOV X8, X26
	0x0347BC48 BL 0x263221C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2165]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2928]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2165], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 136
	023 Move X21, [X20]
	024 Move X24, [X24+2928]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedPartyData(System.Action`1<Nakama.IPartyData> value)

Disassembly:
	0x0347BC4C LDR X2, [X28]
	0x0347BC50 MOVN W8, 0x0
	0x0347BC54 ADD X1, X31, 0x0
	0x0347BC58 MOV X0, X26
	0x0347BC5C STP X25, X24, [X31 + 0x20]
	0x0347BC60 STP W23, W22, [X31 + 0x30]
	0x0347BC64 STP X21, X20, [X31 + 0x38]
	0x0347BC68 STR X19, [X31 + 0x48]
	0x0347BC6C STR W8, [X31]
	0x0347BC70 BL 0x1FD0714
	0x0347BC74 LDR X1, [X27]
	0x0347BC78 MOV X0, X26
	0x0347BC7C BL 0x2632230
	0x0347BC80 LDP X20, X19, [X31 + 0xB0]
	0x0347BC84 LDP X22, X21, [X31 + 0xA0]
	0x0347BC88 LDP X24, X23, [X31 + 0x90]
	0x0347BC8C LDP X26, X25, [X31 + 0x80]
	0x0347BC90 LDP X28, X27, [X31 + 0x70]
	0x0347BC94 LDR X30, [X31 + 0x60]
	0x0347BC98 ADD X31, X31, 0xC0
	0x0347BC9C RET
	0x0347BCA0 SUB X31, X31, 0xC0
	0x0347BCA4 STP X29, X30, [X31 + 0x60]
	0x0347BCA8 STP X28, X27, [X31 + 0x70]
	0x0347BCAC STP X26, X25, [X31 + 0x80]
	0x0347BCB0 STP X24, X23, [X31 + 0x90]
	0x0347BCB4 STP X22, X21, [X31 + 0xA0]
	0x0347BCB8 STP X20, X19, [X31 + 0xB0]
	0x0347BCBC ADRP X28, 0xF62000
	0x0347BCC0 ADRP X27, 0xCB5000
	0x0347BCC4 LDRB W8, [X28 + 0x886]
	0x0347BCC8 LDR X27, [X27 + 0xC18]
	0x0347BCCC MOV X19, X7
	0x0347BCD0 MOV X20, X6
	0x0347BCD4 MOV X21, X5
	0x0347BCD8 MOV W22, W4
	0x0347BCDC MOV W23, W3
	0x0347BCE0 MOV X24, X2
	0x0347BCE4 MOV X25, X1
	0x0347BCE8 MOV X26, X0
	0x0347BCEC TBNZ X8, 0x0, 0x347BD28
	0x0347BCF0 ADRP X0, 0xCB5000
	0x0347BCF4 LDR X0, [X0 + 0xC20]
	0x0347BCF8 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2166]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2928]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2166], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 136
	023 Move X21, [X20]
	024 Move X24, [X24+2928]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedPartyJoinRequest(System.Action`1<Nakama.IPartyJoinRequest> value)

Disassembly:
	0x0347BCFC ADRP X0, 0xCB5000
	0x0347BD00 LDR X0, [X0 + 0xC28]
	0x0347BD04 BL 0x1C16CF4
	0x0347BD08 ADRP X0, 0xCB5000
	0x0347BD0C LDR X0, [X0 + 0xC30]
	0x0347BD10 BL 0x1C16CF4
	0x0347BD14 ADRP X0, 0xCB5000
	0x0347BD18 LDR X0, [X0 + 0xC18]
	0x0347BD1C BL 0x1C16CF4
	0x0347BD20 MOVZ W8, 0x1
	0x0347BD24 STRB W8, [X28 + 0x886]
	0x0347BD28 LDR X0, [X27]
	0x0347BD2C MOVI V0.2D, 0x0
	0x0347BD30 STP V0, V0, [X31 + 0x40]
	0x0347BD34 STP V0, V0, [X31 + 0x20]
	0x0347BD38 STP V0, V0, [X31]
	0x0347BD3C ADRP X27, 0xCB5000
	0x0347BD40 ADRP X29, 0xCB5000
	0x0347BD44 ADRP X28, 0xCB5000
	0x0347BD48 LDR W8, [X0 + 0xE0]
	0x0347BD4C LDR X27, [X27 + 0xC20]
	0x0347BD50 LDR X29, [X29 + 0xC28]
	0x0347BD54 LDR X28, [X28 + 0xC30]
	0x0347BD58 CBNZ W8, 0x347BD60
	0x0347BD5C BL 0x1C16DFC
	0x0347BD60 LDR X0, [X27]
	0x0347BD64 ADD X8, X31, 0x0
	0x0347BD68 ORR X27, X8, 0xF
	0x0347BD6C MOV X8, X27
	0x0347BD70 BL 0x263221C
	0x0347BD74 LDR X2, [X29]
	0x0347BD78 MOVN W8, 0x0
	0x0347BD7C ADD X1, X31, 0x0
	0x0347BD80 MOV X0, X27
	0x0347BD84 STP X26, X25, [X31 + 0x20]
	0x0347BD88 STR X24, [X31 + 0x30]
	0x0347BD8C STP W23, W22, [X31 + 0x38]
	0x0347BD90 STP X21, X20, [X31 + 0x40]
	0x0347BD94 STR X19, [X31 + 0x50]
	0x0347BD98 STR W8, [X31]
	0x0347BD9C BL 0x1FD0814
	0x0347BDA0 LDR X1, [X28]
	0x0347BDA4 MOV X0, X27
	0x0347BDA8 BL 0x2632230

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2167]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2936]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2167], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 144
	023 Move X21, [X20]
	024 Move X24, [X24+2936]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedPartyJoinRequest(System.Action`1<Nakama.IPartyJoinRequest> value)

Disassembly:
	0x0347BDAC LDP X20, X19, [X31 + 0xB0]
	0x0347BDB0 LDP X22, X21, [X31 + 0xA0]
	0x0347BDB4 LDP X24, X23, [X31 + 0x90]
	0x0347BDB8 LDP X26, X25, [X31 + 0x80]
	0x0347BDBC LDP X28, X27, [X31 + 0x70]
	0x0347BDC0 LDP X29, X30, [X31 + 0x60]
	0x0347BDC4 ADD X31, X31, 0xC0
	0x0347BDC8 RET
	0x0347BDCC STR X30, [X31 - 0x20]!
	0x0347BDD0 STP X20, X19, [X31 + 0x10]
	0x0347BDD4 ADRP X20, 0xF62000
	0x0347BDD8 LDRB W8, [X20 + 0x887]
	0x0347BDDC MOV X19, X0
	0x0347BDE0 TBNZ X8, 0x0, 0x347BDF8
	0x0347BDE4 ADRP X0, 0xCB3000
	0x0347BDE8 LDR X0, [X0 + 0x9E0]
	0x0347BDEC BL 0x1C16CF4
	0x0347BDF0 MOVZ W8, 0x1
	0x0347BDF4 STRB W8, [X20 + 0x887]
	0x0347BDF8 LDR X19, [X19 + 0xB8]
	0x0347BDFC CBZ X19, 0x347BE6C
	0x0347BE00 ADRP X10, 0xCB3000
	0x0347BE04 LDR X8, [X19]
	0x0347BE08 LDR X10, [X10 + 0x9E0]
	0x0347BE0C LDRH W9, [X8 + 0x12E]
	0x0347BE10 LDR X1, [X10]
	0x0347BE14 CBZ X9, 0x347BE38
	0x0347BE18 LDR X10, [X8 + 0xB0]
	0x0347BE1C ADD X10, X10, 0x8
	0x0347BE20 LDUR X11, [X10 - 0x8]
	0x0347BE24 CMP X11, X1
	0x0347BE28 B.EQ 0x347BE48
	0x0347BE2C SUBS X9, X9, 0x1
	0x0347BE30 ADD X10, X10, 0x10
	0x0347BE34 B.NE 0x347BE20
	0x0347BE38 MOVZ W2, 0xA
	0x0347BE3C MOV X0, X19
	0x0347BE40 BL 0x1C5C788
	0x0347BE44 B 0x347BE58
	0x0347BE48 LDR W9, [X10]
	0x0347BE4C ADD W9, W9, 0xA
	0x0347BE50 ADD X8, X8, W9, 0x4, SXTW
	0x0347BE54 ADD X0, X8, 0x138
	0x0347BE58 LDP X2, X1, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2168]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2936]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2168], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 144
	023 Move X21, [X20]
	024 Move X24, [X24+2936]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedPartyLeader(System.Action`1<Nakama.IPartyLeader> value)

Disassembly:
	0x0347BE5C MOV X0, X19
	0x0347BE60 LDP X20, X19, [X31 + 0x10]
	0x0347BE64 LDR X30, [X31], #0x20
	0x0347BE68 BR X2
	0x0347BE6C BL 0x1C16F20
	0x0347BE70 SUB X31, X31, 0x50
	0x0347BE74 STP X30, X25, [X31 + 0x10]
	0x0347BE78 STP X24, X23, [X31 + 0x20]
	0x0347BE7C STP X22, X21, [X31 + 0x30]
	0x0347BE80 STP X20, X19, [X31 + 0x40]
	0x0347BE84 ADRP X25, 0xF62000
	0x0347BE88 ADRP X23, 0xC81000
	0x0347BE8C LDRB W8, [X25 + 0x888]
	0x0347BE90 LDR X23, [X23 + 0x3A0]
	0x0347BE94 MOV X21, X4
	0x0347BE98 MOV W19, W3
	0x0347BE9C MOV W24, W2
	0x0347BEA0 MOV X22, X1
	0x0347BEA4 MOV X20, X0
	0x0347BEA8 TBNZ X8, 0x0, 0x347BEFC
	0x0347BEAC ADRP X0, 0xC78000
	0x0347BEB0 LDR X0, [X0 + 0xB58]
	0x0347BEB4 BL 0x1C16CF4
	0x0347BEB8 ADRP X0, 0xC79000
	0x0347BEBC LDR X0, [X0 + 0x818]
	0x0347BEC0 BL 0x1C16CF4
	0x0347BEC4 ADRP X0, 0xCB3000
	0x0347BEC8 LDR X0, [X0 + 0x9E0]
	0x0347BECC BL 0x1C16CF4
	0x0347BED0 ADRP X0, 0xC81000
	0x0347BED4 LDR X0, [X0 + 0x3A0]
	0x0347BED8 BL 0x1C16CF4
	0x0347BEDC ADRP X0, 0xCB5000
	0x0347BEE0 LDR X0, [X0 + 0xC38]
	0x0347BEE4 BL 0x1C16CF4
	0x0347BEE8 ADRP X0, 0xCB5000
	0x0347BEEC LDR X0, [X0 + 0xC40]
	0x0347BEF0 BL 0x1C16CF4
	0x0347BEF4 MOVZ W8, 0x1
	0x0347BEF8 STRB W8, [X25 + 0x888]
	0x0347BEFC LDR X0, [X23]
	0x0347BF00 LDR X25, [X20 + 0xC0]
	0x0347BF04 BL 0x1C16F10
	0x0347BF08 MOV X1, X25

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2169]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2944]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2169], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+2944]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedPartyLeader(System.Action`1<Nakama.IPartyLeader> value)

Disassembly:
	0x0347BF0C MOV X2, X31
	0x0347BF10 MOV X23, X0
	0x0347BF14 BL 0x36281F8
	0x0347BF18 CBZ X23, 0x347C088
	0x0347BF1C ADRP X8, 0xCB5000
	0x0347BF20 LDR X8, [X8 + 0xC40]
	0x0347BF24 ADRP X25, 0xC78000
	0x0347BF28 MOV X0, X23
	0x0347BF2C MOV X2, X31
	0x0347BF30 LDR X1, [X8]
	0x0347BF34 LDR X25, [X25 + 0xB58]
	0x0347BF38 AND W24, W24, 0x1
	0x0347BF3C BL 0x36288CC
	0x0347BF40 LDR X0, [X25]
	0x0347BF44 ADD X1, X31, 0xC
	0x0347BF48 STRB W24, [X31 + 0xC]
	0x0347BF4C BL 0x1C16E04
	0x0347BF50 CBZ X22, 0x347C088
	0x0347BF54 ADRP X10, 0xC79000
	0x0347BF58 LDR X8, [X22]
	0x0347BF5C LDR X10, [X10 + 0x818]
	0x0347BF60 ADRP X25, 0xCB5000
	0x0347BF64 MOV X24, X0
	0x0347BF68 LDRH W9, [X8 + 0x12E]
	0x0347BF6C LDR X1, [X10]
	0x0347BF70 LDR X25, [X25 + 0xC38]
	0x0347BF74 CBZ X9, 0x347BF98
	0x0347BF78 LDR X10, [X8 + 0xB0]
	0x0347BF7C ADD X10, X10, 0x8
	0x0347BF80 LDUR X11, [X10 - 0x8]
	0x0347BF84 CMP X11, X1
	0x0347BF88 B.EQ 0x347BFA8
	0x0347BF8C SUBS X9, X9, 0x1
	0x0347BF90 ADD X10, X10, 0x10
	0x0347BF94 B.NE 0x347BF80
	0x0347BF98 MOV X0, X22
	0x0347BF9C MOV W2, W31
	0x0347BFA0 BL 0x1C5C788
	0x0347BFA4 B 0x347BFB4
	0x0347BFA8 LDRSW X9, [X10]
	0x0347BFAC ADD X8, X8, X9, 0x4, LSL
	0x0347BFB0 ADD X0, X8, 0x138
	0x0347BFB4 LDP X8, X1, [X0]
	0x0347BFB8 MOV X0, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2170]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2944]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2170], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 152
	023 Move X21, [X20]
	024 Move X24, [X24+2944]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedPartyPresence(System.Action`1<Nakama.IPartyPresenceEvent> value)

Disassembly:
	0x0347BFBC BLR X8
	0x0347BFC0 LDR X8, [X25]
	0x0347BFC4 MOV X3, X0
	0x0347BFC8 MOV X1, X21
	0x0347BFCC MOV X2, X24
	0x0347BFD0 MOV X0, X8
	0x0347BFD4 MOV X4, X31
	0x0347BFD8 BL 0x3227C18
	0x0347BFDC MOV X1, X0
	0x0347BFE0 MOV X0, X23
	0x0347BFE4 MOV X2, X31
	0x0347BFE8 BL 0x3628980
	0x0347BFEC MOV X0, X23
	0x0347BFF0 MOV X1, X31
	0x0347BFF4 BL 0x3628A38
	0x0347BFF8 LDR X21, [X20 + 0xB8]
	0x0347BFFC CBZ X21, 0x347C088
	0x0347C000 ADRP X10, 0xCB2000
	0x0347C004 LDR X8, [X21]
	0x0347C008 B 0x3EB1654
	0x0347C00C MOV X20, X0
	0x0347C010 LDRH W9, [X8 + 0x12E]
	0x0347C014 LDR X1, [X10]
	0x0347C018 CBZ X9, 0x347C03C
	0x0347C01C LDR X10, [X8 + 0xB0]
	0x0347C020 ADD X10, X10, 0x8
	0x0347C024 LDUR X11, [X10 - 0x8]
	0x0347C028 CMP X11, X1
	0x0347C02C B.EQ 0x347C04C
	0x0347C030 SUBS X9, X9, 0x1
	0x0347C034 ADD X10, X10, 0x10
	0x0347C038 B.NE 0x347C024
	0x0347C03C MOVZ W2, 0xB
	0x0347C040 MOV X0, X21
	0x0347C044 BL 0x1C5C788
	0x0347C048 B 0x347C05C
	0x0347C04C LDR W9, [X10]
	0x0347C050 ADD W9, W9, 0xB
	0x0347C054 ADD X8, X8, W9, 0x4, SXTW
	0x0347C058 ADD X0, X8, 0x138
	0x0347C05C LDP X8, X3, [X0]
	0x0347C060 MOV X0, X21
	0x0347C064 MOV X1, X20
	0x0347C068 MOV W2, W19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF63000
	009 Move W8, [X21+2171]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB6000
	017 Move X0, [X0+2952]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2171], W8
	021 Move X24, 0xCB6000
	022 Add X20, X20, 160
	023 Move X21, [X20]
	024 Move X24, [X24+2952]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedPartyPresence(System.Action`1<Nakama.IPartyPresenceEvent> value)

Disassembly:
	0x0347C06C BLR X8
	0x0347C070 LDP X20, X19, [X31 + 0x40]
	0x0347C074 LDP X22, X21, [X31 + 0x30]
	0x0347C078 LDP X24, X23, [X31 + 0x20]
	0x0347C07C LDP X30, X25, [X31 + 0x10]
	0x0347C080 ADD X31, X31, 0x50
	0x0347C084 RET
	0x0347C088 BL 0x1C16F20
	0x0347C08C STR X30, [X31 - 0x40]!
	0x0347C090 STP X24, X23, [X31 + 0x10]
	0x0347C094 STP X22, X21, [X31 + 0x20]
	0x0347C098 STP X20, X19, [X31 + 0x30]
	0x0347C09C ADRP X22, 0xF61000
	0x0347C0A0 ADRP X21, 0xCB4000
	0x0347C0A4 ADRP X24, 0xC77000
	0x0347C0A8 ADRP X23, 0xC7B000
	0x0347C0AC LDRB W8, [X22 + 0x889]
	0x0347C0B0 LDR X21, [X21 + 0xBC8]
	0x0347C0B4 LDR X24, [X24 + 0x758]
	0x0347C0B8 LDR X23, [X23 + 0x110]
	0x0347C0BC MOV X20, X1
	0x0347C0C0 MOV X19, X0
	0x0347C0C4 TBNZ X8, 0x0, 0x347C100
	0x0347C0C8 ADRP X0, 0xC77000
	0x0347C0CC LDR X0, [X0 + 0x758]
	0x0347C0D0 BL 0x1C16CF4
	0x0347C0D4 ADRP X0, 0xCB4000
	0x0347C0D8 LDR X0, [X0 + 0xC48]
	0x0347C0DC BL 0x1C16CF4
	0x0347C0E0 ADRP X0, 0xCB4000
	0x0347C0E4 LDR X0, [X0 + 0xBC8]
	0x0347C0E8 BL 0x1C16CF4
	0x0347C0EC ADRP X0, 0xC7B000
	0x0347C0F0 LDR X0, [X0 + 0x110]
	0x0347C0F4 BL 0x1C16CF4
	0x0347C0F8 MOVZ W8, 0x1
	0x0347C0FC STRB W8, [X22 + 0x889]
	0x0347C100 ADD X0, X19, 0x10
	0x0347C104 MOV X1, X31
	0x0347C108 BL 0x33EB14C
	0x0347C10C LDR X8, [X21]
	0x0347C110 MOV W22, W0
	0x0347C114 MOV X0, X8
	0x0347C118 BL 0x1C16F10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF62000
	009 Move W8, [X21+2172]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB5000
	017 Move X0, [X0+2952]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2172], W8
	021 Move X24, 0xCB5000
	022 Add X20, X20, 160
	023 Move X21, [X20]
	024 Move X24, [X24+2952]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_ReceivedPartyMatchmakerTicket(System.Action`1<Nakama.IPartyMatchmakerTicket> value)

Disassembly:
	0x0347C11C MOV X1, X31
	0x0347C120 MOV X21, X0
	0x0347C124 BL 0x348068C
	0x0347C128 LDR X0, [X24]
	0x0347C12C ADD X1, X31, 0xC
	0x0347C130 STR W22, [X31 + 0xC]
	0x0347C134 BL 0x1C16E04
	0x0347C138 LDR X8, [X23]
	0x0347C13C MOV X1, X0
	0x0347C140 MOV X2, X31
	0x0347C144 MOV X0, X8
	0x0347C148 BL 0x321EFD0
	0x0347C14C CBZ X21, 0x347C19C
	0x0347C150 ADRP X8, 0xCB4000
	0x0347C154 LDR X8, [X8 + 0xC48]
	0x0347C158 STR X0, [X21 + 0x10]
	0x0347C15C LDR X0, [X8]
	0x0347C160 BL 0x1C16F10
	0x0347C164 MOV X1, X31
	0x0347C168 MOV X22, X0
	0x0347C16C BL 0x33BDD8C
	0x0347C170 CBZ X22, 0x347C19C
	0x0347C174 MOV X0, X19
	0x0347C178 MOV X1, X21
	0x0347C17C STR X20, [X22 + 0x10]
	0x0347C180 STR X22, [X21 + 0x148]
	0x0347C184 BL 0x347BA8C
	0x0347C188 LDP X20, X19, [X31 + 0x30]
	0x0347C18C LDP X22, X21, [X31 + 0x20]
	0x0347C190 LDP X24, X23, [X31 + 0x10]
	0x0347C194 LDR X30, [X31], #0x40
	0x0347C198 RET
	0x0347C19C BL 0x1C16F20
	0x0347C1A0 SUB X31, X31, 0x70
	0x0347C1A4 STP X30, X23, [X31 + 0x40]
	0x0347C1A8 STP X22, X21, [X31 + 0x50]
	0x0347C1AC STP X20, X19, [X31 + 0x60]
	0x0347C1B0 ADRP X22, 0xF61000
	0x0347C1B4 ADRP X21, 0xCB4000
	0x0347C1B8 LDRB W8, [X22 + 0x88A]
	0x0347C1BC LDR X21, [X21 + 0xC50]
	0x0347C1C0 MOV X19, X1
	0x0347C1C4 MOV X20, X0
	0x0347C1C8 TBNZ X8, 0x0, 0x347C204

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF62000
	009 Move W8, [X21+2173]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB5000
	017 Move X0, [X0+2960]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2173], W8
	021 Move X24, 0xCB5000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+2960]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_ReceivedPartyMatchmakerTicket(System.Action`1<Nakama.IPartyMatchmakerTicket> value)

Disassembly:
	0x0347C1CC ADRP X0, 0xCB4000
	0x0347C1D0 LDR X0, [X0 + 0xC58]
	0x0347C1D4 BL 0x1C16CF4
	0x0347C1D8 ADRP X0, 0xCB4000
	0x0347C1DC LDR X0, [X0 + 0xC60]
	0x0347C1E0 BL 0x1C16CF4
	0x0347C1E4 ADRP X0, 0xCB4000
	0x0347C1E8 LDR X0, [X0 + 0xC68]
	0x0347C1EC BL 0x1C16CF4
	0x0347C1F0 ADRP X0, 0xCB4000
	0x0347C1F4 LDR X0, [X0 + 0xC50]
	0x0347C1F8 BL 0x1C16CF4
	0x0347C1FC MOVZ W8, 0x1
	0x0347C200 STRB W8, [X22 + 0x88A]
	0x0347C204 LDR X0, [X21]
	0x0347C208 MOVI V0.2D, 0x0
	0x0347C20C STR X31, [X31 + 0x30]
	0x0347C210 STP V0, V0, [X31 + 0x10]
	0x0347C214 STR V0, [X31]
	0x0347C218 ADRP X21, 0xCB4000
	0x0347C21C ADRP X23, 0xCB4000
	0x0347C220 ADRP X22, 0xCB4000
	0x0347C224 LDR W8, [X0 + 0xE0]
	0x0347C228 LDR X21, [X21 + 0xC58]
	0x0347C22C LDR X23, [X23 + 0xC60]
	0x0347C230 LDR X22, [X22 + 0xC68]
	0x0347C234 CBNZ W8, 0x347C23C
	0x0347C238 BL 0x1C16DFC
	0x0347C23C LDR X0, [X21]
	0x0347C240 ADD X8, X31, 0x0
	0x0347C244 ORR X21, X8, 0xF
	0x0347C248 MOV X8, X21
	0x0347C24C BL 0x263221C
	0x0347C250 LDR X2, [X23]
	0x0347C254 MOVN W8, 0x0
	0x0347C258 ADD X1, X31, 0x0
	0x0347C25C MOV X0, X21
	0x0347C260 STP X20, X19, [X31 + 0x20]
	0x0347C264 STR W8, [X31]
	0x0347C268 BL 0x1FD0914
	0x0347C26C LDR X1, [X22]
	0x0347C270 MOV X0, X21
	0x0347C274 BL 0x2632230
	0x0347C278 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF62000
	009 Move W8, [X21+2174]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCB5000
	017 Move X0, [X0+2960]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2174], W8
	021 Move X24, 0xCB5000
	022 Add X20, X20, 168
	023 Move X21, [X20]
	024 Move X24, [X24+2960]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Boolean get_IsConnected()

Disassembly:
	0x0347C27C LDP X22, X21, [X31 + 0x50]
	0x0347C280 LDP X30, X23, [X31 + 0x40]
	0x0347C284 ADD X31, X31, 0x70
	0x0347C288 RET
	0x0347C28C SUB X31, X31, 0x80
	0x0347C290 STR X30, [X31 + 0x40]
	0x0347C294 STP X24, X23, [X31 + 0x50]
	0x0347C298 STP X22, X21, [X31 + 0x60]
	0x0347C29C STP X20, X19, [X31 + 0x70]
	0x0347C2A0 ADRP X23, 0xF61000
	0x0347C2A4 ADRP X22, 0xCB4000
	0x0347C2A8 LDRB W8, [X23 + 0x88B]
	0x0347C2AC LDR X22, [X22 + 0xC70]
	0x0347C2B0 MOV W19, W2
	0x0347C2B4 MOV W21, W1
	0x0347C2B8 MOV X20, X0
	0x0347C2BC TBNZ X8, 0x0, 0x347C2F8
	0x0347C2C0 ADRP X0, 0xCB4000
	0x0347C2C4 LDR X0, [X0 + 0xC78]
	0x0347C2C8 BL 0x1C16CF4
	0x0347C2CC ADRP X0, 0xCB4000
	0x0347C2D0 LDR X0, [X0 + 0xC80]
	0x0347C2D4 BL 0x1C16CF4
	0x0347C2D8 ADRP X0, 0xCB4000
	0x0347C2DC LDR X0, [X0 + 0xC88]
	0x0347C2E0 BL 0x1C16CF4
	0x0347C2E4 ADRP X0, 0xCB4000
	0x0347C2E8 LDR X0, [X0 + 0xC70]
	0x0347C2EC BL 0x1C16CF4
	0x0347C2F0 MOVZ W8, 0x1
	0x0347C2F4 STRB W8, [X23 + 0x88B]
	0x0347C2F8 LDR X0, [X22]
	0x0347C2FC MOVI V0.2D, 0x0
	0x0347C300 STR X31, [X31 + 0x30]
	0x0347C304 STP V0, V0, [X31 + 0x10]
	0x0347C308 STR V0, [X31]
	0x0347C30C ADRP X24, 0xCB4000
	0x0347C310 ADRP X23, 0xCB4000
	0x0347C314 ADRP X22, 0xCB4000
	0x0347C318 LDR W8, [X0 + 0xE0]
	0x0347C31C LDR X24, [X24 + 0xC78]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF62000
	005 Move W8, [X20+2175]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCB3000
	012 Move X0, [X0+2528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2175], W8
	016 Move X19, [X19+184]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0xCB3000
	020 Move X8, [X19]
	021 Move X10, [X10+2528]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 8
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 8
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Boolean get_IsConnecting()

Disassembly:
	0x0347C320 LDR X23, [X23 + 0xC80]
	0x0347C324 LDR X22, [X22 + 0xC88]
	0x0347C328 CBNZ W8, 0x347C330
	0x0347C32C BL 0x1C16DFC
	0x0347C330 LDR X0, [X24]
	0x0347C334 ADD X8, X31, 0x0
	0x0347C338 AND W24, W21, 0x1
	0x0347C33C ORR X21, X8, 0xF
	0x0347C340 MOV X8, X21
	0x0347C344 BL 0x263221C
	0x0347C348 LDR X2, [X23]
	0x0347C34C MOVN W8, 0x0
	0x0347C350 ADD X1, X31, 0x0
	0x0347C354 MOV X0, X21
	0x0347C358 STR X20, [X31 + 0x20]
	0x0347C35C STRB W24, [X31 + 0x28]
	0x0347C360 STR W19, [X31 + 0x2C]
	0x0347C364 STR W8, [X31]
	0x0347C368 BL 0x1FD0A14
	0x0347C36C LDR X1, [X22]
	0x0347C370 MOV X0, X21
	0x0347C374 BL 0x2632230
	0x0347C378 LDP X20, X19, [X31 + 0x70]
	0x0347C37C LDP X22, X21, [X31 + 0x60]
	0x0347C380 LDP X24, X23, [X31 + 0x50]
	0x0347C384 LDR X30, [X31 + 0x40]
	0x0347C388 ADD X31, X31, 0x80
	0x0347C38C RET
	0x0347C390 STR X30, [X31 - 0x40]!
	0x0347C394 STP X24, X23, [X31 + 0x10]
	0x0347C398 STP X22, X21, [X31 + 0x20]
	0x0347C39C STP X20, X19, [X31 + 0x30]
	0x0347C3A0 ADRP X21, 0xF61000
	0x0347C3A4 ADRP X23, 0xCB4000
	0x0347C3A8 LDRB W8, [X21 + 0x88C]
	0x0347C3AC LDR X23, [X23 + 0xC90]
	0x0347C3B0 MOV X20, X1
	0x0347C3B4 MOV X19, X0
	0x0347C3B8 TBNZ X8, 0x0, 0x347C3F4
	0x0347C3BC ADRP X0, 0xC78000
	0x0347C3C0 LDR X0, [X0 + 0xD80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF62000
	005 Move W8, [X20+2176]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCB3000
	012 Move X0, [X0+2528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2176], W8
	016 Move X19, [X19+184]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0xCB3000
	020 Move X8, [X19]
	021 Move X10, [X10+2528]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 9
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 9
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: Nakama.ILogger get_Logger()

Disassembly:
	0x0347C3C4 BL 0x1C16CF4
	0x0347C3C8 ADRP X0, 0xC78000

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_Logger(Nakama.ILogger value)

Disassembly:
	0x0347C3CC LDR X0, [X0 + 0xDA8]
	0x0347C3D0 BL 0x1C16CF4

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x0347C3D4 ADRP X0, 0xCB4000
	0x0347C3D8 LDR X0, [X0 + 0xC98]
	0x0347C3DC BL 0x1C16CF4
	0x0347C3E0 ADRP X0, 0xCB4000
	0x0347C3E4 LDR X0, [X0 + 0xC90]
	0x0347C3E8 BL 0x1C16CF4
	0x0347C3EC MOVZ W8, 0x1
	0x0347C3F0 STRB W8, [X21 + 0x88C]
	0x0347C3F4 LDR X0, [X23]
	0x0347C3F8 LDR W8, [X0 + 0xE0]
	0x0347C3FC CBNZ W8, 0x347C408
	0x0347C400 BL 0x1C16DFC
	0x0347C404 LDR X0, [X23]
	0x0347C408 LDR X8, [X0 + 0xB8]
	0x0347C40C ADRP X24, 0xC78000
	0x0347C410 LDR X21, [X8 + 0x8]
	0x0347C414 LDR X24, [X24 + 0xD80]
	0x0347C418 CBNZ X21, 0x347C46C
	0x0347C41C LDR W8, [X0 + 0xE0]
	0x0347C420 CBNZ W8, 0x347C42C
	0x0347C424 BL 0x1C16DFC
	0x0347C428 LDR X0, [X23]
	0x0347C42C ADRP X9, 0xC78000
	0x0347C430 LDR X8, [X0 + 0xB8]
	0x0347C434 LDR X9, [X9 + 0xDA8]
	0x0347C438 LDR X22, [X8]
	0x0347C43C LDR X0, [X9]
	0x0347C440 BL 0x1C16F10
	0x0347C444 ADRP X8, 0xCB4000
	0x0347C448 LDR X8, [X8 + 0xC98]
	0x0347C44C MOV X1, X22
	0x0347C450 MOV X3, X31
	0x0347C454 MOV X21, X0
	0x0347C458 LDR X2, [X8]
	0x0347C45C BL 0x2D30578
	0x0347C460 LDR X8, [X23]
	0x0347C464 LDR X8, [X8 + 0xB8]
	0x0347C468 STR X21, [X8 + 0x8]
	0x0347C46C LDR X2, [X24]
	0x0347C470 MOV X0, X20
	0x0347C474 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xF62000
	008 Move X23, 0xCB3000
	009 Move X21, 0xCB4000
	010 Move X22, 0xC85000
	011 Move W8, [X20+2177]
	012 Move X23, [X23+2496]
	013 Move X21, [X21+1512]
	014 Move X22, [X22+2400]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xCB3000
	021 Move X0, [X0+2496]
	022 Call 0x1C17CF4
	023 Move X0, 0xCB4000
	024 Move X0, [X0+1512]
	025 Call 0x1C17CF4
	026 Move X0, 0xC85000
	027 Move X0, [X0+2400]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2177], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move W1, 10
	034 Move W2, 0x40000
	035 Move X3, X31
	036 Move X20, X0
	037 Call WebSocketStdlibAdapter..ctor, X0, X1, X2
	038 Move X1, [X21]
	039 Move X2, [X22]
	040 Move X0, X19
	041 Move X4, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move W3, 0x1CB6
	047 Move W5, 10
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]

Method: System.Void .ctor(Nakama.ISocketAdapter adapter)

Disassembly:
	0x0347C8A4 STP X24, X23, [X31 + 0x10]
	0x0347C8A8 STP X22, X21, [X31 + 0x20]
	0x0347C8AC STP X20, X19, [X31 + 0x30]
	0x0347C8B0 ADRP X22, 0xF61000
	0x0347C8B4 ADRP X21, 0xCB4000
	0x0347C8B8 ADRP X24, 0xC77000
	0x0347C8BC ADRP X23, 0xC7B000
	0x0347C8C0 LDRB W8, [X22 + 0x891]
	0x0347C8C4 LDR X21, [X21 + 0xBC8]
	0x0347C8C8 LDR X24, [X24 + 0x758]
	0x0347C8CC LDR X23, [X23 + 0x110]
	0x0347C8D0 MOV X20, X1
	0x0347C8D4 MOV X19, X0
	0x0347C8D8 TBNZ X8, 0x0, 0x347C914
	0x0347C8DC ADRP X0, 0xC77000
	0x0347C8E0 LDR X0, [X0 + 0x758]
	0x0347C8E4 BL 0x1C16CF4
	0x0347C8E8 ADRP X0, 0xCB4000
	0x0347C8EC LDR X0, [X0 + 0xCF0]
	0x0347C8F0 BL 0x1C16CF4
	0x0347C8F4 ADRP X0, 0xCB4000
	0x0347C8F8 LDR X0, [X0 + 0xBC8]
	0x0347C8FC BL 0x1C16CF4
	0x0347C900 ADRP X0, 0xC7B000
	0x0347C904 LDR X0, [X0 + 0x110]
	0x0347C908 BL 0x1C16CF4
	0x0347C90C MOVZ W8, 0x1
	0x0347C910 STRB W8, [X22 + 0x891]
	0x0347C914 ADD X0, X19, 0x10
	0x0347C918 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xF62000
	008 Move X22, 0xCB4000
	009 Move X23, 0xC85000
	010 Move W8, [X21+2178]
	011 Move X22, [X22+1512]
	012 Move X23, [X23+2400]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xCB4000
	020 Move X0, [X0+1512]
	021 Call 0x1C17CF4
	022 Move X0, 0xC85000
	023 Move X0, [X0+2400]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2178], W8
	027 Move X1, [X22]
	028 Move X2, [X23]
	029 Move X0, X20
	030 Move X4, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move W3, 0x1CB6
	036 Move W5, 10
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Call Socket..ctor, X0, X1, X2, X3, X4, X5
	040 Return 

Method: System.Void .ctor(System.String scheme, System.String host, System.Int32 port, Nakama.ISocketAdapter adapter, System.Int32 sendTimeoutSec = 10)

Disassembly:
	0x0347C478 BL 0x21CF224
	0x0347C47C CBZ X19, 0x347C4A0
	0x0347C480 MOV X1, X0
	0x0347C484 MOV X0, X19
	0x0347C488 LDP X20, X19, [X31 + 0x30]
	0x0347C48C LDP X22, X21, [X31 + 0x20]
	0x0347C490 LDP X24, X23, [X31 + 0x10]
	0x0347C494 MOV X2, X31
	0x0347C498 LDR X30, [X31], #0x40
	0x0347C49C B 0x347C4A4
	0x0347C4A0 BL 0x1C16F20
	0x0347C4A4 SUB X31, X31, 0x80
	0x0347C4A8 STR X30, [X31 + 0x40]
	0x0347C4AC STP X24, X23, [X31 + 0x50]
	0x0347C4B0 STP X22, X21, [X31 + 0x60]
	0x0347C4B4 STP X20, X19, [X31 + 0x70]
	0x0347C4B8 ADRP X23, 0xF61000
	0x0347C4BC ADRP X22, 0xCB4000
	0x0347C4C0 LDRB W8, [X23 + 0x88D]
	0x0347C4C4 LDR X22, [X22 + 0xCA0]
	0x0347C4C8 MOV X19, X2
	0x0347C4CC MOV X20, X1
	0x0347C4D0 MOV X21, X0
	0x0347C4D4 TBNZ X8, 0x0, 0x347C510
	0x0347C4D8 ADRP X0, 0xCB4000
	0x0347C4DC LDR X0, [X0 + 0xCA8]
	0x0347C4E0 BL 0x1C16CF4
	0x0347C4E4 ADRP X0, 0xCB4000
	0x0347C4E8 LDR X0, [X0 + 0xCB0]
	0x0347C4EC BL 0x1C16CF4
	0x0347C4F0 ADRP X0, 0xCB4000
	0x0347C4F4 LDR X0, [X0 + 0xCB8]
	0x0347C4F8 BL 0x1C16CF4
	0x0347C4FC ADRP X0, 0xCB4000
	0x0347C500 LDR X0, [X0 + 0xCA0]
	0x0347C504 BL 0x1C16CF4
	0x0347C508 MOVZ W8, 0x1
	0x0347C50C STRB W8, [X23 + 0x88D]
	0x0347C510 LDR X0, [X22]
	0x0347C514 MOVI V0.2D, 0x0
	0x0347C518 STP V0, V0, [X31 + 0x20]
	0x0347C51C STP V0, V0, [X31]
	0x0347C520 ADRP X22, 0xCB4000
	0x0347C524 ADRP X24, 0xCB4000
	0x0347C528 ADRP X23, 0xCB4000
	0x0347C52C LDR W8, [X0 + 0xE0]
	0x0347C530 LDR X22, [X22 + 0xCA8]
	0x0347C534 LDR X24, [X24 + 0xCB0]
	0x0347C538 LDR X23, [X23 + 0xCB8]
	0x0347C53C CBNZ W8, 0x347C544
	0x0347C540 BL 0x1C16DFC
	0x0347C544 LDR X0, [X22]
	0x0347C548 ADD X8, X31, 0x0
	0x0347C54C ORR X22, X8, 0xF
	0x0347C550 MOV X8, X22
	0x0347C554 BL 0x263221C
	0x0347C558 LDR X2, [X24]
	0x0347C55C MOVN W8, 0x0
	0x0347C560 ADD X1, X31, 0x0
	0x0347C564 MOV X0, X22
	0x0347C568 STP X21, X20, [X31 + 0x20]
	0x0347C56C STR X19, [X31 + 0x30]
	0x0347C570 STR W8, [X31]
	0x0347C574 BL 0x1FD0B14
	0x0347C578 LDR X1, [X23]
	0x0347C57C MOV X0, X22
	0x0347C580 BL 0x2632230
	0x0347C584 LDP X20, X19, [X31 + 0x70]
	0x0347C588 LDP X22, X21, [X31 + 0x60]
	0x0347C58C LDP X24, X23, [X31 + 0x50]
	0x0347C590 LDR X30, [X31 + 0x40]
	0x0347C594 ADD X31, X31, 0x80
	0x0347C598 RET
	0x0347C59C SUB X31, X31, 0xA0
	0x0347C5A0 STR X30, [X31 + 0x50]
	0x0347C5A4 STP X26, X25, [X31 + 0x60]
	0x0347C5A8 STP X24, X23, [X31 + 0x70]
	0x0347C5AC STP X22, X21, [X31 + 0x80]
	0x0347C5B0 STP X20, X19, [X31 + 0x90]
	0x0347C5B4 ADRP X25, 0xF61000
	0x0347C5B8 ADRP X24, 0xCB4000
	0x0347C5BC LDRB W8, [X25 + 0x88E]
	0x0347C5C0 LDR X24, [X24 + 0xCC0]
	0x0347C5C4 MOV W22, W4
	0x0347C5C8 MOV W23, W3
	0x0347C5CC MOV W19, W2
	0x0347C5D0 MOV X20, X1
	0x0347C5D4 MOV X21, X0
	0x0347C5D8 TBNZ X8, 0x0, 0x347C614
	0x0347C5DC ADRP X0, 0xCB4000
	0x0347C5E0 LDR X0, [X0 + 0xCC8]
	0x0347C5E4 BL 0x1C16CF4
	0x0347C5E8 ADRP X0, 0xCB4000
	0x0347C5EC LDR X0, [X0 + 0xCD0]
	0x0347C5F0 BL 0x1C16CF4
	0x0347C5F4 ADRP X0, 0xCB4000
	0x0347C5F8 LDR X0, [X0 + 0xCD8]
	0x0347C5FC BL 0x1C16CF4
	0x0347C600 ADRP X0, 0xCB4000
	0x0347C604 LDR X0, [X0 + 0xCC0]
	0x0347C608 BL 0x1C16CF4
	0x0347C60C MOVZ W8, 0x1
	0x0347C610 STRB W8, [X25 + 0x88E]
	0x0347C614 LDR X0, [X24]
	0x0347C618 MOVI V0.2D, 0x0
	0x0347C61C STR X31, [X31 + 0x40]
	0x0347C620 STP V0, V0, [X31 + 0x20]
	0x0347C624 STP V0, V0, [X31]
	0x0347C628 ADRP X26, 0xCB4000
	0x0347C62C ADRP X25, 0xCB4000
	0x0347C630 ADRP X24, 0xCB4000
	0x0347C634 LDR W8, [X0 + 0xE0]
	0x0347C638 LDR X26, [X26 + 0xCC8]
	0x0347C63C LDR X25, [X25 + 0xCD0]
	0x0347C640 LDR X24, [X24 + 0xCD8]
	0x0347C644 CBNZ W8, 0x347C64C
	0x0347C648 BL 0x1C16DFC
	0x0347C64C LDR X0, [X26]
	0x0347C650 ADD X8, X31, 0x0
	0x0347C654 AND W26, W22, 0x1
	0x0347C658 ORR X22, X8, 0xF
	0x0347C65C MOV X8, X22
	0x0347C660 AND W23, W23, 0x1
	0x0347C664 BL 0x263221C
	0x0347C668 LDR X2, [X25]
	0x0347C66C MOVN W8, 0x0
	0x0347C670 ADD X1, X31, 0x0
	0x0347C674 MOV X0, X22
	0x0347C678 STR X21, [X31 + 0x20]
	0x0347C67C STR X20, [X31 + 0x30]
	0x0347C680 STR W19, [X31 + 0x38]
	0x0347C684 STRB W23, [X31 + 0x29]
	0x0347C688 STRB W26, [X31 + 0x28]
	0x0347C68C STR W8, [X31]
	0x0347C690 BL 0x1FD0C14
	0x0347C694 LDR X1, [X24]
	0x0347C698 MOV X0, X22
	0x0347C69C BL 0x2632230
	0x0347C6A0 LDP X20, X19, [X31 + 0x90]
	0x0347C6A4 LDP X22, X21, [X31 + 0x80]
	0x0347C6A8 LDP X24, X23, [X31 + 0x70]
	0x0347C6AC LDP X26, X25, [X31 + 0x60]
	0x0347C6B0 LDR X30, [X31 + 0x50]
	0x0347C6B4 ADD X31, X31, 0xA0
	0x0347C6B8 RET
	0x0347C6BC SUB X31, X31, 0x70
	0x0347C6C0 STP X30, X23, [X31 + 0x40]
	0x0347C6C4 STP X22, X21, [X31 + 0x50]
	0x0347C6C8 STP X20, X19, [X31 + 0x60]
	0x0347C6CC ADRP X22, 0xF61000
	0x0347C6D0 ADRP X21, 0xCB4000
	0x0347C6D4 LDRB W8, [X22 + 0x88F]
	0x0347C6D8 LDR X21, [X21 + 0xC50]
	0x0347C6DC MOV X19, X1
	0x0347C6E0 MOV X20, X0
	0x0347C6E4 TBNZ X8, 0x0, 0x347C720
	0x0347C6E8 ADRP X0, 0xCB4000
	0x0347C6EC LDR X0, [X0 + 0xC58]
	0x0347C6F0 BL 0x1C16CF4
	0x0347C6F4 ADRP X0, 0xCB4000
	0x0347C6F8 LDR X0, [X0 + 0xCE0]
	0x0347C6FC BL 0x1C16CF4
	0x0347C700 ADRP X0, 0xCB4000
	0x0347C704 LDR X0, [X0 + 0xC68]
	0x0347C708 BL 0x1C16CF4
	0x0347C70C ADRP X0, 0xCB4000
	0x0347C710 LDR X0, [X0 + 0xC50]
	0x0347C714 BL 0x1C16CF4
	0x0347C718 MOVZ W8, 0x1
	0x0347C71C STRB W8, [X22 + 0x88F]
	0x0347C720 LDR X0, [X21]
	0x0347C724 MOVI V0.2D, 0x0
	0x0347C728 STR X31, [X31 + 0x30]
	0x0347C72C STP V0, V0, [X31 + 0x10]
	0x0347C730 STR V0, [X31]
	0x0347C734 ADRP X21, 0xCB4000
	0x0347C738 ADRP X23, 0xCB4000
	0x0347C73C ADRP X22, 0xCB4000
	0x0347C740 LDR W8, [X0 + 0xE0]
	0x0347C744 LDR X21, [X21 + 0xC58]
	0x0347C748 LDR X23, [X23 + 0xCE0]
	0x0347C74C LDR X22, [X22 + 0xC68]
	0x0347C750 CBNZ W8, 0x347C758
	0x0347C754 BL 0x1C16DFC
	0x0347C758 LDR X0, [X21]
	0x0347C75C ADD X8, X31, 0x0
	0x0347C760 ORR X21, X8, 0xF
	0x0347C764 MOV X8, X21
	0x0347C768 BL 0x263221C
	0x0347C76C LDR X2, [X23]
	0x0347C770 MOVN W8, 0x0
	0x0347C774 ADD X1, X31, 0x0
	0x0347C778 MOV X0, X21
	0x0347C77C STP X19, X20, [X31 + 0x20]
	0x0347C780 STR W8, [X31]
	0x0347C784 BL 0x1FD0D14
	0x0347C788 LDR X1, [X22]
	0x0347C78C MOV X0, X21
	0x0347C790 BL 0x2632230
	0x0347C794 LDP X20, X19, [X31 + 0x60]
	0x0347C798 LDP X22, X21, [X31 + 0x50]
	0x0347C79C LDP X30, X23, [X31 + 0x40]
	0x0347C7A0 ADD X31, X31, 0x70
	0x0347C7A4 RET
	0x0347C7A8 SUB X31, X31, 0x80
	0x0347C7AC STR X30, [X31 + 0x40]
	0x0347C7B0 STP X24, X23, [X31 + 0x50]
	0x0347C7B4 STP X22, X21, [X31 + 0x60]
	0x0347C7B8 STP X20, X19, [X31 + 0x70]
	0x0347C7BC ADRP X23, 0xF61000
	0x0347C7C0 ADRP X22, 0xCB4000
	0x0347C7C4 LDRB W8, [X23 + 0x890]
	0x0347C7C8 LDR X22, [X22 + 0xC50]
	0x0347C7CC MOV X19, X2
	0x0347C7D0 MOV X20, X1
	0x0347C7D4 MOV X21, X0
	0x0347C7D8 TBNZ X8, 0x0, 0x347C814
	0x0347C7DC ADRP X0, 0xCB4000
	0x0347C7E0 LDR X0, [X0 + 0xC58]
	0x0347C7E4 BL 0x1C16CF4
	0x0347C7E8 ADRP X0, 0xCB4000
	0x0347C7EC LDR X0, [X0 + 0xCE8]
	0x0347C7F0 BL 0x1C16CF4
	0x0347C7F4 ADRP X0, 0xCB4000
	0x0347C7F8 LDR X0, [X0 + 0xC68]
	0x0347C7FC BL 0x1C16CF4
	0x0347C800 ADRP X0, 0xCB4000
	0x0347C804 LDR X0, [X0 + 0xC50]
	0x0347C808 BL 0x1C16CF4
	0x0347C80C MOVZ W8, 0x1
	0x0347C810 STRB W8, [X23 + 0x890]
	0x0347C814 LDR X0, [X22]
	0x0347C818 MOVI V0.2D, 0x0
	0x0347C81C STP V0, V0, [X31 + 0x20]
	0x0347C820 STP V0, V0, [X31]
	0x0347C824 ADRP X22, 0xCB4000
	0x0347C828 ADRP X24, 0xCB4000
	0x0347C82C ADRP X23, 0xCB4000
	0x0347C830 LDR W8, [X0 + 0xE0]
	0x0347C834 LDR X22, [X22 + 0xC58]
	0x0347C838 LDR X24, [X24 + 0xCE8]
	0x0347C83C LDR X23, [X23 + 0xC68]
	0x0347C840 CBNZ W8, 0x347C848
	0x0347C844 BL 0x1C16DFC
	0x0347C848 LDR X0, [X22]
	0x0347C84C ADD X8, X31, 0x0
	0x0347C850 ORR X22, X8, 0xF
	0x0347C854 MOV X8, X22
	0x0347C858 BL 0x263221C
	0x0347C85C LDR X2, [X24]
	0x0347C860 MOVN W8, 0x0
	0x0347C864 ADD X1, X31, 0x0
	0x0347C868 MOV X0, X22
	0x0347C86C STP X21, X20, [X31 + 0x20]
	0x0347C870 STR X19, [X31 + 0x30]
	0x0347C874 STR W8, [X31]
	0x0347C878 BL 0x1FD0E14
	0x0347C87C LDR X1, [X23]
	0x0347C880 MOV X0, X22
	0x0347C884 BL 0x2632230
	0x0347C888 LDP X20, X19, [X31 + 0x70]
	0x0347C88C LDP X22, X21, [X31 + 0x60]
	0x0347C890 LDP X24, X23, [X31 + 0x50]
	0x0347C894 LDR X30, [X31 + 0x40]
	0x0347C898 ADD X31, X31, 0x80
	0x0347C89C RET
	0x0347C8A0 STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0xF62000
	012 Move X25, 0xC7E000
	013 Move X26, 0xCB4000
	014 Move W8, [X27+2179]
	015 Move X25, [X25+3264]
	016 Move X26, [X26+1552]
	017 Move W20, W5
	018 Move X24, X4
	019 Move W21, W3
	020 Move X22, X2
	021 Move X23, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {71}
	027 Move X0, 0xCB3000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move X0, 0xC7B000
	031 Move X0, [X0+712]
	032 Call 0x1C17CF4
	033 Move X0, 0xC79000
	034 Move X0, [X0+3696]
	035 Call 0x1C17CF4
	036 Move X0, 0xCB5000
	037 Move X0, [X0+2968]
	038 Call 0x1C17CF4
	039 Move X0, 0xCB5000
	040 Move X0, [X0+2976]
	041 Call 0x1C17CF4
	042 Move X0, 0xCB3000
	043 Move X0, [X0+2528]
	044 Call 0x1C17CF4
	045 Move X0, 0xCB4000
	046 Move X0, [X0+1552]
	047 Call 0x1C17CF4
	048 Move X0, 0xC7E000
	049 Move X0, [X0+3264]
	050 Call 0x1C17CF4
	051 Move X0, 0xCB5000
	052 Move X0, [X0+2984]
	053 Call 0x1C17CF4
	054 Move X0, 0xCB5000
	055 Move X0, [X0+2992]
	056 Call 0x1C17CF4
	057 Move X0, 0xCB5000
	058 Move X0, [X0+3000]
	059 Call 0x1C17CF4
	060 Move X0, 0xCB5000
	061 Move X0, [X0+3008]
	062 Call 0x1C17CF4
	063 Move X0, 0xC7A000
	064 Move X0, [X0+1392]
	065 Call 0x1C17CF4
	066 Move X0, 0xC81000
	067 Move X0, [X0+928]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X27+2179], W8
	071 Move X0, [X25]
	072 Move X27, 0xC81000
	073 Move X27, [X27+928]
	074 Call 0x1C17F10
	075 Move X1, X31
	076 Move X25, X0
	077 Call Object..ctor, X0
	078 Move X0, X19
	079 Move X1, X31
	080 Move [X19+216], X25
	081 Call Object..ctor, X0
	082 Move X0, [X26]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X26]
	088 Move X8, [X0+184]
	089 Move X8, [X8]
	090 Move [X19+176], X8
	091 Move [X19+184], X24
	092 Move X0, [X27]
	093 Call 0x1C17F10
	094 Move X1, X23
	095 Move X2, X22
	096 Move W3, W21
	097 Move X4, X31
	098 Move X24, X0
	099 Call UriBuilder..ctor, X0, X1, X2, X3
	100 Compare X24, 0
	101 JumpIfEqual {284}
	102 Move X21, 0xCB5000
	103 Move X25, 0xCB5000
	104 Move X26, 0xC7A000
	105 Move X23, 0xC79000
	106 Move X22, 0xCB5000
	107 Move X21, [X21+2976]
	108 Move X25, [X25+2968]
	109 Move X26, [X26+1392]
	110 Move X23, [X23+3696]
	111 Move X22, [X22+2992]
	112 Move X0, X24
	113 Move X1, X31
	114 Call UriBuilder.get_Uri, X0
	115 Move [X19+192], X0
	116 Move X0, [X21]
	117 Call 0x1C17F10
	118 Move X1, [X25]
	119 Move X21, X0
	120 Call Dictionary`2<Object, Object>..ctor, X0
	121 Move [X19+200], X21
	122 Move X0, [X26]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 NotImplemented "Instruction SCVTF not yet implemented."
	128 Move X0, X31
	129 Call TimeSpan.FromSeconds, V0
	130 Move [X19+208], X0
	131 Move X0, [X23]
	132 Move X20, [X19+184]
	133 Call 0x1C17F10
	134 Move X2, [X22]
	135 Move X1, X19
	136 Move X3, X31
	137 Move X21, X0
	138 Call Action..ctor, X0, X1, X2
	139 Compare X20, 0
	140 JumpIfEqual {284}
	141 Move X22, 0xCB3000
	142 Move X8, [X20]
	143 Move X22, [X22+2528]
	144 Move X24, 0xCB5000
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Move X1, [X22]
	147 Move X24, [X24+3000]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X20
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X2, [X0+8]
	164 Move X0, X20
	165 Move X1, X21
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X0, [X23]
	168 Move X20, [X19+184]
	169 Call 0x1C17F10
	170 Move X2, [X24]
	171 Move X1, X19
	172 Move X3, X31
	173 Move X21, X0
	174 Call Action..ctor, X0, X1, X2
	175 Compare X20, 0
	176 JumpIfEqual {284}
	177 Move X8, [X20]
	178 Move X24, 0xC7B000
	179 Move X23, 0xCB5000
	180 Move X1, [X22]
	181 NotImplemented "Instruction LDRH not yet implemented."
	182 Move X24, [X24+712]
	183 Move X23, [X23+3008]
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move W2, 2
	193 Move X0, X20
	194 Call 0x1C5D788
	195 Move W9, [X10]
	196 Add W9, W9, 2
	197 Add X8, X8, W9
	198 Add X0, X8, 312
	199 Move X8, [X0]
	200 Move X2, [X0+8]
	201 Move X0, X20
	202 Move X1, X21
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move X0, [X24]
	205 Move X20, [X19+184]
	206 Call 0x1C17F10
	207 Move X2, [X23]
	208 Move X1, X19
	209 Move X3, X31
	210 Move X21, X0
	211 Call Action`1<Object>..ctor, X0, X1, X2
	212 Compare X20, 0
	213 JumpIfEqual {284}
	214 Move X8, [X20]
	215 Move X24, 0xCB3000
	216 Move X23, 0xCB5000
	217 Move X1, [X22]
	218 NotImplemented "Instruction LDRH not yet implemented."
	219 Move X24, [X24+2512]
	220 Move X23, [X23+2984]
	221 Compare X9, 0
	222 JumpIfEqual {229}
	223 Move X10, [X8+176]
	224 Add X10, X10, 8
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Subtract X9, X9, 1
	228 Add X10, X10, 16
	229 Move W2, 4
	230 Move X0, X20
	231 Call 0x1C5D788
	232 Move W9, [X10]
	233 Add W9, W9, 4
	234 Add X8, X8, W9
	235 Add X0, X8, 312
	236 Move X8, [X0]
	237 Move X2, [X0+8]
	238 Move X0, X20
	239 Move X1, X21
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move X0, [X24]
	242 Move X20, [X19+184]
	243 Call 0x1C17F10
	244 Move X2, [X23]
	245 Move X1, X19
	246 Move X3, X31
	247 Move X21, X0
	248 Call Action`1<ArraySegment`1<Byte>>..ctor, X0, X1, X2
	249 Compare X20, 0
	250 JumpIfEqual {284}
	251 Move X8, [X20]
	252 Move X1, [X22]
	253 NotImplemented "Instruction LDRH not yet implemented."
	254 Compare X9, 0
	255 JumpIfEqual {262}
	256 Move X10, [X8+176]
	257 Add X10, X10, 8
	258 NotImplemented "Instruction LDUR not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Subtract X9, X9, 1
	261 Add X10, X10, 16
	262 Move W2, 6
	263 Move X0, X20
	264 Call 0x1C5D788
	265 Move W9, [X10]
	266 Add W9, W9, 6
	267 Add X8, X8, W9
	268 Add X0, X8, 312
	269 Move X3, [X0]
	270 Move X2, [X0+8]
	271 Move X0, X20
	272 Move X1, X21
	273 Move X20, [X31+64]
	274 Move X19, [X31+72]
	275 Move X22, [X31+48]
	276 Move X21, [X31+56]
	277 Move X24, [X31+32]
	278 Move X23, [X31+40]
	279 Move X26, [X31+16]
	280 Move X25, [X31+24]
	281 Move X30, [X31+80]
	282 Move X27, [X31+88]
	283 CallNoReturn X3
	284 Call 0x1C17F20

Method: System.Threading.Tasks.Task AcceptPartyMemberAsync(System.String partyId, Nakama.IUserPresence presence)

Disassembly:
	0x0347C91C BL 0x33EB14C
	0x0347C920 LDR X8, [X21]
	0x0347C924 MOV W22, W0
	0x0347C928 MOV X0, X8
	0x0347C92C BL 0x1C16F10
	0x0347C930 MOV X1, X31
	0x0347C934 MOV X21, X0
	0x0347C938 BL 0x348068C
	0x0347C93C LDR X0, [X24]
	0x0347C940 ADD X1, X31, 0xC
	0x0347C944 STR W22, [X31 + 0xC]
	0x0347C948 BL 0x1C16E04
	0x0347C94C LDR X8, [X23]
	0x0347C950 MOV X1, X0
	0x0347C954 MOV X2, X31
	0x0347C958 MOV X0, X8
	0x0347C95C BL 0x321EFD0
	0x0347C960 CBZ X21, 0x347C9B0
	0x0347C964 ADRP X8, 0xCB4000
	0x0347C968 LDR X8, [X8 + 0xCF0]
	0x0347C96C STR X0, [X21 + 0x10]
	0x0347C970 LDR X0, [X8]
	0x0347C974 BL 0x1C16F10
	0x0347C978 MOV X1, X31
	0x0347C97C MOV X22, X0
	0x0347C980 BL 0x33BDD8C
	0x0347C984 CBZ X22, 0x347C9B0
	0x0347C988 MOV X0, X19
	0x0347C98C MOV X1, X21
	0x0347C990 STR X20, [X22 + 0x10]
	0x0347C994 STR X22, [X21 + 0x118]
	0x0347C998 BL 0x347BA8C
	0x0347C99C LDP X20, X19, [X31 + 0x30]
	0x0347C9A0 LDP X22, X21, [X31 + 0x20]
	0x0347C9A4 LDP X24, X23, [X31 + 0x10]
	0x0347C9A8 LDR X30, [X31], #0x40
	0x0347C9AC RET
	0x0347C9B0 BL 0x1C16F20
	0x0347C9B4 STP X30, X21, [X31 - 0x20]!
	0x0347C9B8 STP X20, X19, [X31 + 0x10]
	0x0347C9BC ADRP X21, 0xF61000
	0x0347C9C0 LDRB W8, [X21 + 0x892]
	0x0347C9C4 MOV X20, X1
	0x0347C9C8 MOV X19, X0
	0x0347C9CC TBNZ X8, 0x0, 0x347C9E4
	0x0347C9D0 ADRP X0, 0xCB3000
	0x0347C9D4 LDR X0, [X0 + 0x770]
	0x0347C9D8 BL 0x1C16CF4
	0x0347C9DC MOVZ W8, 0x1
	0x0347C9E0 STRB W8, [X21 + 0x892]
	0x0347C9E4 CBZ X20, 0x347CA5C
	0x0347C9E8 ADRP X10, 0xCB3000
	0x0347C9EC LDR X8, [X20]
	0x0347C9F0 LDR X10, [X10 + 0x770]
	0x0347C9F4 LDRH W9, [X8 + 0x12E]
	0x0347C9F8 LDR X1, [X10]
	0x0347C9FC CBZ X9, 0x347CA20
	0x0347CA00 LDR X10, [X8 + 0xB0]
	0x0347CA04 ADD X10, X10, 0x8
	0x0347CA08 LDUR X11, [X10 - 0x8]
	0x0347CA0C CMP X11, X1
	0x0347CA10 B.EQ 0x347CA30
	0x0347CA14 SUBS X9, X9, 0x1
	0x0347CA18 ADD X10, X10, 0x10
	0x0347CA1C B.NE 0x347CA08
	0x0347CA20 MOV X0, X20
	0x0347CA24 MOV W2, W31
	0x0347CA28 BL 0x1C5C788
	0x0347CA2C B 0x347CA3C
	0x0347CA30 LDRSW X9, [X10]
	0x0347CA34 ADD X8, X8, X9, 0x4, LSL
	0x0347CA38 ADD X0, X8, 0x138
	0x0347CA3C LDP X8, X1, [X0]
	0x0347CA40 MOV X0, X20
	0x0347CA44 BLR X8
	0x0347CA48 MOV X1, X0
	0x0347CA4C MOV X0, X19
	0x0347CA50 LDP X20, X19, [X31 + 0x10]
	0x0347CA54 LDP X30, X21, [X31], #0x20
	0x0347CA58 B 0x347CA60
	0x0347CA5C BL 0x1C16F20
	0x0347CA60 STR X30, [X31 - 0x40]!
	0x0347CA64 STP X24, X23, [X31 + 0x10]
	0x0347CA68 STP X22, X21, [X31 + 0x20]
	0x0347CA6C STP X20, X19, [X31 + 0x30]
	0x0347CA70 ADRP X22, 0xF61000
	0x0347CA74 ADRP X21, 0xCB4000
	0x0347CA78 ADRP X24, 0xC77000
	0x0347CA7C ADRP X23, 0xC7B000
	0x0347CA80 LDRB W8, [X22 + 0x893]
	0x0347CA84 LDR X21, [X21 + 0xBC8]
	0x0347CA88 LDR X24, [X24 + 0x758]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xF62000
	011 Move X22, 0xCB5000
	012 Move X25, 0xC78000
	013 Move X24, 0xC7C000
	014 Move W8, [X23+2180]
	015 Move X22, [X22+3016]
	016 Move X25, [X25+1880]
	017 Move X24, [X24+272]
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0xC78000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB5000
	029 Move X0, [X0+3024]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB5000
	032 Move X0, [X0+2056]
	033 Call 0x1C17CF4
	034 Move X0, 0xCB5000
	035 Move X0, [X0+3016]
	036 Call 0x1C17CF4
	037 Move X0, 0xC7C000
	038 Move X0, [X0+272]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+2180], W8
	042 Add X0, X19, 16
	043 Move X1, X31
	044 Call Interlocked.Increment, X0
	045 Move X8, [X22]
	046 Move W23, W0
	047 Move X0, X8
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X22, X0
	051 Call WebSocketMessageEnvelope..ctor, X0
	052 Move X0, [X25]
	053 Add X1, X31, 12
	054 Move [X31+12], W23
	055 Call 0x1C17E04
	056 Move X8, [X24]
	057 Move X1, X0
	058 Move X2, X31
	059 Move X0, X8
	060 Call String.Format, X0, X1
	061 Compare X22, 0
	062 JumpIfEqual {104}
	063 Move X8, 0xCB5000
	064 Move X8, [X8+3024]
	065 Move [X22+16], X0
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X23, X0
	070 Call Object..ctor, X0
	071 Compare X23, 0
	072 JumpIfEqual {104}
	073 Move [X23+16], X21
	074 Compare X20, 0
	075 JumpIfEqual {83}
	076 Move X8, 0xCB5000
	077 Move X8, [X8+2056]
	078 Move X9, [X20]
	079 Move X8, [X8]
	080 Move W11, [X9+304]
	081 Move W10, [X8+304]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, X31
	084 Move X9, [X9+200]
	085 Add X9, X9, X10
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Move X0, X19
	090 Move X1, X22
	091 Move [X23+24], X8
	092 Move [X22+312], X23
	093 Call Socket.SendAsync, X0, X1
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X24, [X31+32]
	099 Move X23, [X31+40]
	100 Move X30, [X31+16]
	101 Move X25, [X31+24]
	102 Add X31, X31, 80
	103 Return X0
	104 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IMatchmakerTicket> AddMatchmakerAsync(System.String query = *, System.Int32 minCount = 2, System.Int32 maxCount = 8, System.Collections.Generic.Dictionary`2<System.String, System.String> stringProperties = null, System.Collections.Generic.Dictionary`2<System.String, System.Double> numericProperties = null, System.Nullable`1<System.Int32> countMultiple = null)

Disassembly:
	0x0347CB78 STP X20, X19, [X31 + 0x10]
	0x0347CB7C ADRP X21, 0xF61000
	0x0347CB80 LDRB W8, [X21 + 0x894]
	0x0347CB84 MOV X20, X1
	0x0347CB88 MOV X19, X0
	0x0347CB8C TBNZ X8, 0x0, 0x347CBA4
	0x0347CB90 ADRP X0, 0xCB4000
	0x0347CB94 LDR X0, [X0 + 0xD00]
	0x0347CB98 BL 0x1C16CF4
	0x0347CB9C MOVZ W8, 0x1
	0x0347CBA0 STRB W8, [X21 + 0x894]
	0x0347CBA4 CBZ X20, 0x347CC20
	0x0347CBA8 ADRP X10, 0xCB4000
	0x0347CBAC LDR X8, [X20]
	0x0347CBB0 LDR X10, [X10 + 0xD00]
	0x0347CBB4 LDRH W9, [X8 + 0x12E]
	0x0347CBB8 LDR X1, [X10]
	0x0347CBBC CBZ X9, 0x347CBE0
	0x0347CBC0 LDR X10, [X8 + 0xB0]
	0x0347CBC4 ADD X10, X10, 0x8
	0x0347CBC8 LDUR X11, [X10 - 0x8]
	0x0347CBCC CMP X11, X1
	0x0347CBD0 B.EQ 0x347CBF0
	0x0347CBD4 SUBS X9, X9, 0x1
	0x0347CBD8 ADD X10, X10, 0x10
	0x0347CBDC B.NE 0x347CBC8
	0x0347CBE0 MOVZ W2, 0x1
	0x0347CBE4 MOV X0, X20
	0x0347CBE8 BL 0x1C5C788
	0x0347CBEC B 0x347CC00
	0x0347CBF0 LDR W9, [X10]
	0x0347CBF4 ADD W9, W9, 0x1
	0x0347CBF8 ADD X8, X8, W9, 0x4, SXTW
	0x0347CBFC ADD X0, X8, 0x138
	0x0347CC00 LDP X8, X1, [X0]
	0x0347CC04 MOV X0, X20
	0x0347CC08 BLR X8
	0x0347CC0C MOV X1, X0
	0x0347CC10 MOV X0, X19
	0x0347CC14 LDP X20, X19, [X31 + 0x10]
	0x0347CC18 LDP X30, X21, [X31], #0x20
	0x0347CC1C B 0x347CC24
	0x0347CC20 BL 0x1C16F20
	0x0347CC24 STR X30, [X31 - 0x40]!
	0x0347CC28 STP X24, X23, [X31 + 0x10]
	0x0347CC2C STP X22, X21, [X31 + 0x20]
	0x0347CC30 STP X20, X19, [X31 + 0x30]
	0x0347CC34 ADRP X22, 0xF61000
	0x0347CC38 ADRP X21, 0xCB4000
	0x0347CC3C ADRP X24, 0xC77000
	0x0347CC40 ADRP X23, 0xC7B000
	0x0347CC44 LDRB W8, [X22 + 0x895]
	0x0347CC48 LDR X21, [X21 + 0xBC8]
	0x0347CC4C LDR X24, [X24 + 0x758]
	0x0347CC50 LDR X23, [X23 + 0x110]
	0x0347CC54 MOV X20, X1
	0x0347CC58 MOV X19, X0
	0x0347CC5C TBNZ X8, 0x0, 0x347CC98
	0x0347CC60 ADRP X0, 0xC77000
	0x0347CC64 LDR X0, [X0 + 0x758]
	0x0347CC68 BL 0x1C16CF4
	0x0347CC6C ADRP X0, 0xCB4000
	0x0347CC70 LDR X0, [X0 + 0xD08]
	0x0347CC74 BL 0x1C16CF4
	0x0347CC78 ADRP X0, 0xCB4000
	0x0347CC7C LDR X0, [X0 + 0xBC8]
	0x0347CC80 BL 0x1C16CF4
	0x0347CC84 ADRP X0, 0xC7B000
	0x0347CC88 LDR X0, [X0 + 0x110]
	0x0347CC8C BL 0x1C16CF4
	0x0347CC90 MOVZ W8, 0x1
	0x0347CC94 STRB W8, [X22 + 0x895]
	0x0347CC98 ADD X0, X19, 0x10
	0x0347CC9C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X30
	003 Move [X31+112], X28
	004 Move [X31+120], X27
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X27, 0xF62000
	014 Move X26, 0xCB5000
	015 Move W8, [X27+2181]
	016 Move X26, [X26+3064]
	017 Move X19, X6
	018 Move X20, X5
	019 Move X21, X4
	020 Move W22, W3
	021 Move W23, W2
	022 Move X24, X1
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xCB5000
	029 Move X0, [X0+3072]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB5000
	032 Move X0, [X0+3080]
	033 Call 0x1C17CF4
	034 Move X0, 0xCB5000
	035 Move X0, [X0+3088]
	036 Call 0x1C17CF4
	037 Move X0, 0xCB5000
	038 Move X0, [X0+3064]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X27+2181], W8
	042 Move X0, [X26]
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+80], X31
	045 Move [X31+48], V0
	046 Move [X31+56], V0
	047 Move [X31+16], V0
	048 Move [X31+24], V0
	049 Move [X31], V0
	050 Move X26, 0xCB5000
	051 Move X28, 0xCB5000
	052 Move X27, 0xCB5000
	053 Move W8, [X0+224]
	054 Move X26, [X26+3072]
	055 Move X28, [X28+3080]
	056 Move X27, [X27+3088]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, [X26]
	061 Add X8, X31, 0
	062 Or X26, X8, 15
	063 Move X8, X26
	064 Call AsyncTaskMethodBuilder`1<Object>.Create
	065 Move X2, [X28]
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W8, TEMP
	069 Add X1, X31, 0
	070 Move X0, X26
	071 Move [X31+32], X25
	072 Move [X31+40], X24
	073 Move [X31+48], W23
	074 Move [X31+52], W22
	075 Move [X31+56], X21
	076 Move [X31+64], X20
	077 Move [X31+72], X19
	078 Move [X31], W8
	079 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	080 Move X1, [X27]
	081 Move X0, X26
	082 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	083 Move X20, [X31+176]
	084 Move X19, [X31+184]
	085 Move X22, [X31+160]
	086 Move X21, [X31+168]
	087 Move X24, [X31+144]
	088 Move X23, [X31+152]
	089 Move X26, [X31+128]
	090 Move X25, [X31+136]
	091 Move X28, [X31+112]
	092 Move X27, [X31+120]
	093 Move X30, [X31+96]
	094 Add X31, X31, 192
	095 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IPartyMatchmakerTicket> AddMatchmakerPartyAsync(System.String partyId, System.String query, System.Int32 minCount, System.Int32 maxCount, System.Collections.Generic.Dictionary`2<System.String, System.String> stringProperties = null, System.Collections.Generic.Dictionary`2<System.String, System.Double> numericProperties = null, System.Nullable`1<System.Int32> countMultiple = null)

Disassembly:
	0x0347CCA0 BL 0x33EB14C
	0x0347CCA4 LDR X8, [X21]
	0x0347CCA8 MOV W22, W0
	0x0347CCAC MOV X0, X8
	0x0347CCB0 BL 0x1C16F10
	0x0347CCB4 MOV X1, X31
	0x0347CCB8 MOV X21, X0
	0x0347CCBC BL 0x348068C
	0x0347CCC0 LDR X0, [X24]
	0x0347CCC4 ADD X1, X31, 0xC
	0x0347CCC8 STR W22, [X31 + 0xC]
	0x0347CCCC BL 0x1C16E04
	0x0347CCD0 LDR X8, [X23]
	0x0347CCD4 MOV X1, X0
	0x0347CCD8 MOV X2, X31
	0x0347CCDC MOV X0, X8
	0x0347CCE0 BL 0x321EFD0
	0x0347CCE4 CBZ X21, 0x347CD34
	0x0347CCE8 ADRP X8, 0xCB4000
	0x0347CCEC LDR X8, [X8 + 0xD08]
	0x0347CCF0 STR X0, [X21 + 0x10]
	0x0347CCF4 LDR X0, [X8]
	0x0347CCF8 BL 0x1C16F10
	0x0347CCFC MOV X1, X31
	0x0347CD00 MOV X22, X0
	0x0347CD04 BL 0x33BDD8C
	0x0347CD08 CBZ X22, 0x347CD34
	0x0347CD0C MOV X0, X19
	0x0347CD10 MOV X1, X21
	0x0347CD14 STR X20, [X22 + 0x10]
	0x0347CD18 STR X22, [X21 + 0xA0]
	0x0347CD1C BL 0x347BA8C
	0x0347CD20 LDP X20, X19, [X31 + 0x30]
	0x0347CD24 LDP X22, X21, [X31 + 0x20]
	0x0347CD28 LDP X24, X23, [X31 + 0x10]
	0x0347CD2C LDR X30, [X31], #0x40
	0x0347CD30 RET
	0x0347CD34 BL 0x1C16F20
	0x0347CD38 STR X30, [X31 - 0x40]!
	0x0347CD3C STP X24, X23, [X31 + 0x10]
	0x0347CD40 STP X22, X21, [X31 + 0x20]
	0x0347CD44 STP X20, X19, [X31 + 0x30]
	0x0347CD48 ADRP X22, 0xF61000
	0x0347CD4C ADRP X21, 0xCB4000
	0x0347CD50 ADRP X24, 0xC77000
	0x0347CD54 ADRP X23, 0xC7B000
	0x0347CD58 LDRB W8, [X22 + 0x896]
	0x0347CD5C LDR X21, [X21 + 0xBC8]
	0x0347CD60 LDR X24, [X24 + 0x758]
	0x0347CD64 LDR X23, [X23 + 0x110]
	0x0347CD68 MOV X20, X1
	0x0347CD6C MOV X19, X0
	0x0347CD70 TBNZ X8, 0x0, 0x347CDAC
	0x0347CD74 ADRP X0, 0xC77000
	0x0347CD78 LDR X0, [X0 + 0x758]
	0x0347CD7C BL 0x1C16CF4
	0x0347CD80 ADRP X0, 0xCB4000
	0x0347CD84 LDR X0, [X0 + 0xD10]
	0x0347CD88 BL 0x1C16CF4
	0x0347CD8C ADRP X0, 0xCB4000
	0x0347CD90 LDR X0, [X0 + 0xBC8]
	0x0347CD94 BL 0x1C16CF4
	0x0347CD98 ADRP X0, 0xC7B000
	0x0347CD9C LDR X0, [X0 + 0x110]
	0x0347CDA0 BL 0x1C16CF4
	0x0347CDA4 MOVZ W8, 0x1
	0x0347CDA8 STRB W8, [X22 + 0x896]
	0x0347CDAC ADD X0, X19, 0x10
	0x0347CDB0 MOV X1, X31
	0x0347CDB4 BL 0x33EB14C
	0x0347CDB8 LDR X8, [X21]
	0x0347CDBC MOV W22, W0
	0x0347CDC0 MOV X0, X8
	0x0347CDC4 BL 0x1C16F10
	0x0347CDC8 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X28, 0xF62000
	015 Move X27, 0xCB5000
	016 Move W8, [X28+2182]
	017 Move X27, [X27+3096]
	018 Move X19, X7
	019 Move X20, X6
	020 Move X21, X5
	021 Move W22, W4
	022 Move W23, W3
	023 Move X24, X2
	024 Move X25, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0xCB5000
	031 Move X0, [X0+3104]
	032 Call 0x1C17CF4
	033 Move X0, 0xCB5000
	034 Move X0, [X0+3112]
	035 Call 0x1C17CF4
	036 Move X0, 0xCB5000
	037 Move X0, [X0+3120]
	038 Call 0x1C17CF4
	039 Move X0, 0xCB5000
	040 Move X0, [X0+3096]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+2182], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+64], V0
	047 Move [X31+72], V0
	048 Move [X31+32], V0
	049 Move [X31+40], V0
	050 Move [X31], V0
	051 Move [X31+8], V0
	052 Move X27, 0xCB5000
	053 Move X29, 0xCB5000
	054 Move X28, 0xCB5000
	055 Move W8, [X0+224]
	056 Move X27, [X27+3104]
	057 Move X29, [X29+3112]
	058 Move X28, [X28+3120]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, [X27]
	063 Add X8, X31, 0
	064 Or X27, X8, 15
	065 Move X8, X27
	066 Call AsyncTaskMethodBuilder`1<Object>.Create
	067 Move X2, [X29]
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Add X1, X31, 0
	072 Move X0, X27
	073 Move [X31+32], X26
	074 Move [X31+40], X25
	075 Move [X31+48], X24
	076 Move [X31+56], W23
	077 Move [X31+60], W22
	078 Move [X31+64], X21
	079 Move [X31+72], X20
	080 Move [X31+80], X19
	081 Move [X31], W8
	082 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	083 Move X1, [X28]
	084 Move X0, X27
	085 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	086 Move X20, [X31+176]
	087 Move X19, [X31+184]
	088 Move X22, [X31+160]
	089 Move X21, [X31+168]
	090 Move X24, [X31+144]
	091 Move X23, [X31+152]
	092 Move X26, [X31+128]
	093 Move X25, [X31+136]
	094 Move X28, [X31+112]
	095 Move X27, [X31+120]
	096 Move X29, [X31+96]
	097 Move X30, [X31+104]
	098 Add X31, X31, 192
	099 Return X0

Method: System.Threading.Tasks.Task CloseAsync()

Disassembly:
	0x0347CDCC MOV X21, X0
	0x0347CDD0 BL 0x348068C
	0x0347CDD4 LDR X0, [X24]
	0x0347CDD8 ADD X1, X31, 0xC
	0x0347CDDC STR W22, [X31 + 0xC]
	0x0347CDE0 BL 0x1C16E04
	0x0347CDE4 LDR X8, [X23]
	0x0347CDE8 MOV X1, X0
	0x0347CDEC MOV X2, X31
	0x0347CDF0 MOV X0, X8
	0x0347CDF4 BL 0x321EFD0
	0x0347CDF8 CBZ X21, 0x347CE48
	0x0347CDFC ADRP X8, 0xCB4000
	0x0347CE00 LDR X8, [X8 + 0xD10]
	0x0347CE04 STR X0, [X21 + 0x10]
	0x0347CE08 LDR X0, [X8]
	0x0347CE0C BL 0x1C16F10
	0x0347CE10 MOV X1, X31
	0x0347CE14 MOV X22, X0
	0x0347CE18 BL 0x33BDD8C
	0x0347CE1C CBZ X22, 0x347CE48
	0x0347CE20 MOV X0, X19
	0x0347CE24 MOV X1, X21
	0x0347CE28 STR X20, [X22 + 0x10]
	0x0347CE2C STR X22, [X21 + 0x120]
	0x0347CE30 BL 0x347BA8C
	0x0347CE34 LDP X20, X19, [X31 + 0x30]
	0x0347CE38 LDP X22, X21, [X31 + 0x20]
	0x0347CE3C LDP X24, X23, [X31 + 0x10]
	0x0347CE40 LDR X30, [X31], #0x40
	0x0347CE44 RET
	0x0347CE48 BL 0x1C16F20
	0x0347CE4C SUB X31, X31, 0x70
	0x0347CE50 STP X30, X23, [X31 + 0x40]
	0x0347CE54 STP X22, X21, [X31 + 0x50]
	0x0347CE58 STP X20, X19, [X31 + 0x60]
	0x0347CE5C ADRP X22, 0xF61000
	0x0347CE60 ADRP X21, 0xCB4000
	0x0347CE64 LDRB W8, [X22 + 0x897]
	0x0347CE68 LDR X21, [X21 + 0xD18]
	0x0347CE6C MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xF62000
	005 Move W8, [X20+2183]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xCB3000
	012 Move X0, [X0+2528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2183], W8
	016 Move X19, [X19+184]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0xCB3000
	020 Move X8, [X19]
	021 Move X10, [X10+2528]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 10
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 10
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Threading.Tasks.Task ConnectAsync(Nakama.ISession session, System.Boolean appearOnline = False, System.Int32 connectTimeoutSec = 30, System.String langTag = en)

Disassembly:
	0x0347CE70 MOV X20, X0
	0x0347CE74 TBNZ X8, 0x0, 0x347CEB0
	0x0347CE78 ADRP X0, 0xCB4000
	0x0347CE7C LDR X0, [X0 + 0xD20]
	0x0347CE80 BL 0x1C16CF4
	0x0347CE84 ADRP X0, 0xCB4000
	0x0347CE88 LDR X0, [X0 + 0xD28]
	0x0347CE8C BL 0x1C16CF4
	0x0347CE90 ADRP X0, 0xCB4000
	0x0347CE94 LDR X0, [X0 + 0xD30]
	0x0347CE98 BL 0x1C16CF4
	0x0347CE9C ADRP X0, 0xCB4000
	0x0347CEA0 LDR X0, [X0 + 0xD18]
	0x0347CEA4 BL 0x1C16CF4
	0x0347CEA8 MOVZ W8, 0x1
	0x0347CEAC STRB W8, [X22 + 0x897]
	0x0347CEB0 LDR X0, [X21]
	0x0347CEB4 MOVI V0.2D, 0x0
	0x0347CEB8 STR X31, [X31 + 0x30]
	0x0347CEBC STP V0, V0, [X31 + 0x10]
	0x0347CEC0 STR V0, [X31]
	0x0347CEC4 ADRP X21, 0xCB4000
	0x0347CEC8 ADRP X23, 0xCB4000
	0x0347CECC ADRP X22, 0xCB4000
	0x0347CED0 LDR W8, [X0 + 0xE0]
	0x0347CED4 LDR X21, [X21 + 0xD20]
	0x0347CED8 LDR X23, [X23 + 0xD28]
	0x0347CEDC LDR X22, [X22 + 0xD30]
	0x0347CEE0 CBNZ W8, 0x347CEE8
	0x0347CEE4 BL 0x1C16DFC
	0x0347CEE8 LDR X0, [X21]
	0x0347CEEC ADD X8, X31, 0x0
	0x0347CEF0 ORR X21, X8, 0xF
	0x0347CEF4 MOV X8, X21
	0x0347CEF8 BL 0x263221C
	0x0347CEFC LDR X2, [X23]
	0x0347CF00 MOVN W8, 0x0
	0x0347CF04 ADD X1, X31, 0x0
	0x0347CF08 MOV X0, X21
	0x0347CF0C STP X20, X19, [X31 + 0x20]
	0x0347CF10 STR W8, [X31]
	0x0347CF14 BL 0x1FD0F14
	0x0347CF18 LDR X1, [X22]
	0x0347CF1C MOV X0, X21
	0x0347CF20 BL 0x2632230
	0x0347CF24 LDP X20, X19, [X31 + 0x60]
	0x0347CF28 LDP X22, X21, [X31 + 0x50]
	0x0347CF2C LDP X30, X23, [X31 + 0x40]
	0x0347CF30 ADD X31, X31, 0x70
	0x0347CF34 RET
	0x0347CF38 SUB X31, X31, 0x50
	0x0347CF3C STP X30, X25, [X31 + 0x10]
	0x0347CF40 STP X24, X23, [X31 + 0x20]
	0x0347CF44 STP X22, X21, [X31 + 0x30]
	0x0347CF48 STP X20, X19, [X31 + 0x40]
	0x0347CF4C ADRP X23, 0xF61000
	0x0347CF50 ADRP X22, 0xCB4000
	0x0347CF54 ADRP X25, 0xC77000
	0x0347CF58 ADRP X24, 0xC7B000
	0x0347CF5C LDRB W8, [X23 + 0x898]
	0x0347CF60 LDR X22, [X22 + 0xBC8]
	0x0347CF64 LDR X25, [X25 + 0x758]
	0x0347CF68 LDR X24, [X24 + 0x110]
	0x0347CF6C MOV X20, X2
	0x0347CF70 MOV X21, X1
	0x0347CF74 MOV X19, X0
	0x0347CF78 TBNZ X8, 0x0, 0x347CFC0
	0x0347CF7C ADRP X0, 0xC77000
	0x0347CF80 LDR X0, [X0 + 0x758]
	0x0347CF84 BL 0x1C16CF4
	0x0347CF88 ADRP X0, 0xCB4000
	0x0347CF8C LDR X0, [X0 + 0xD38]
	0x0347CF90 BL 0x1C16CF4
	0x0347CF94 ADRP X0, 0xCB4000
	0x0347CF98 LDR X0, [X0 + 0x808]
	0x0347CF9C BL 0x1C16CF4
	0x0347CFA0 ADRP X0, 0xCB4000
	0x0347CFA4 LDR X0, [X0 + 0xBC8]
	0x0347CFA8 BL 0x1C16CF4
	0x0347CFAC ADRP X0, 0xC7B000
	0x0347CFB0 LDR X0, [X0 + 0x110]
	0x0347CFB4 BL 0x1C16CF4
	0x0347CFB8 MOVZ W8, 0x1
	0x0347CFBC STRB W8, [X23 + 0x898]
	0x0347CFC0 ADD X0, X19, 0x10
	0x0347CFC4 MOV X1, X31
	0x0347CFC8 BL 0x33EB14C
	0x0347CFCC LDR X8, [X22]
	0x0347CFD0 MOV W23, W0
	0x0347CFD4 MOV X0, X8
	0x0347CFD8 BL 0x1C16F10
	0x0347CFDC MOV X1, X31
	0x0347CFE0 MOV X22, X0
	0x0347CFE4 BL 0x348068C
	0x0347CFE8 LDR X0, [X25]
	0x0347CFEC ADD X1, X31, 0xC
	0x0347CFF0 STR W23, [X31 + 0xC]
	0x0347CFF4 BL 0x1C16E04
	0x0347CFF8 LDR X8, [X24]
	0x0347CFFC MOV X1, X0
	0x0347D000 MOV X2, X31
	0x0347D004 MOV X0, X8
	0x0347D008 BL 0x321EFD0
	0x0347D00C CBZ X22, 0x347D0A4
	0x0347D010 ADRP X8, 0xCB3000
	0x0347D014 LDR X8, [X8 + 0xD38]
	0x0347D018 STR X0, [X22 + 0x10]
	0x0347D01C LDR X0, [X8]
	0x0347D020 BL 0x1C16F10
	0x0347D024 MOV X1, X31
	0x0347D028 MOV X23, X0
	0x0347D02C BL 0x33BDD8C
	0x0347D030 CBZ X23, 0x347D0A4
	0x0347D034 STR X21, [X23 + 0x10]
	0x0347D038 CBZ X20, 0x347D05C
	0x0347D03C ADRP X8, 0xCB3000
	0x0347D040 LDR X8, [X8 + 0x808]
	0x0347D044 LDR X9, [X20]
	0x0347D048 LDR X8, [X8]
	0x0347D04C LDRB W11, [X9 + 0x130]
	0x0347D050 LDRB W10, [X8 + 0x130]
	0x0347D054 CMP W11, W10
	0x0347D058 B.CS 0x347D064
	0x0347D05C MOV X8, X31
	0x0347D060 B 0x347D078
	0x0347D064 LDR X9, [X9 + 0xC8]
	0x0347D068 ADD X9, X9, X10, 0x3, LSL
	0x0347D06C LDUR X9, [X9 - 0x8]
	0x0347D070 CMP X9, X8
	0x0347D074 CSEL X8, X20, X31, EQ
	0x0347D078 MOV X0, X19
	0x0347D07C MOV X1, X22
	0x0347D080 STR X8, [X23 + 0x18]
	0x0347D084 STR X23, [X22 + 0x128]
	0x0347D088 BL 0x347BA8C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xF62000
	011 Move X23, 0xC81000
	012 Move W8, [X25+2184]
	013 Move X23, [X23+928]
	014 Move X21, X4
	015 Move W19, W3
	016 Move W24, W2
	017 Move X22, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0xC78000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move X0, 0xC79000
	027 Move X0, [X0+2072]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB3000
	030 Move X0, [X0+2528]
	031 Call 0x1C17CF4
	032 Move X0, 0xC81000
	033 Move X0, [X0+928]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB5000
	036 Move X0, [X0+3128]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB5000
	039 Move X0, [X0+3136]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+2184], W8
	043 Move X0, [X23]
	044 Move X25, [X20+192]
	045 Call 0x1C17F10
	046 Move X1, X25
	047 Move X2, X31
	048 Move X23, X0
	049 Call UriBuilder..ctor, X0, X1
	050 Compare X23, 0
	051 JumpIfEqual {148}
	052 Move X8, 0xCB5000
	053 Move X8, [X8+3136]
	054 Move X25, 0xC78000
	055 Move X0, X23
	056 Move X2, X31
	057 Move X1, [X8]
	058 Move X25, [X25+2904]
	059 And W24, W24, 1
	060 Call UriBuilder.set_Path, X0, X1
	061 Move X0, [X25]
	062 Add X1, X31, 12
	063 Move [X31+12], W24
	064 Call 0x1C17E04
	065 Compare X22, 0
	066 JumpIfEqual {148}
	067 Move X10, 0xC79000
	068 Move X8, [X22]
	069 Move X10, [X10+2072]
	070 Move X25, 0xCB5000
	071 Move X24, X0
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Move X1, [X10]
	074 Move X25, [X25+3128]
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X22
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X22
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, [X25]
	094 Move X3, X0
	095 Move X1, X21
	096 Move X2, X24
	097 Move X0, X8
	098 Move X4, X31
	099 Call String.Format, X0, X1, X2, X3
	100 Move X1, X0
	101 Move X0, X23
	102 Move X2, X31
	103 Call UriBuilder.set_Query, X0, X1
	104 Move X0, X23
	105 Move X1, X31
	106 Call UriBuilder.get_Uri, X0
	107 Move X21, [X20+184]
	108 Compare X21, 0
	109 JumpIfEqual {148}
	110 Move X10, 0xCB2000
	111 Move X8, [X21]
	112 Call 0x3EB2654
	113 Return X0
	114 Move X20, X0
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Move X1, [X10]
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move W2, 11
	126 Move X0, X21
	127 Call 0x1C5D788
	128 Move W9, [X10]
	129 Add W9, W9, 11
	130 Add X8, X8, W9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X3, [X0+8]
	134 Move X0, X21
	135 Move X1, X20
	136 Move W2, W19
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X30, [X31+16]
	145 Move X25, [X31+24]
	146 Add X31, X31, 80
	147 Return X0
	148 Call 0x1C17F20

Method: System.Threading.Tasks.Task ClosePartyAsync(System.String partyId)

Disassembly:
	0x0347D08C LDP X20, X19, [X31 + 0x40]
	0x0347D090 LDP X22, X21, [X31 + 0x30]
	0x0347D094 LDP X24, X23, [X31 + 0x20]
	0x0347D098 LDP X30, X25, [X31 + 0x10]
	0x0347D09C ADD X31, X31, 0x50
	0x0347D0A0 RET
	0x0347D0A4 BL 0x1C16F20
	0x0347D0A8 STR X30, [X31 - 0x30]!
	0x0347D0AC STP X22, X21, [X31 + 0x10]
	0x0347D0B0 STP X20, X19, [X31 + 0x20]
	0x0347D0B4 ADRP X22, 0xF60000
	0x0347D0B8 LDRB W8, [X22 + 0x899]
	0x0347D0BC MOV X19, X2
	0x0347D0C0 MOV X21, X1
	0x0347D0C4 MOV X20, X0
	0x0347D0C8 TBNZ X8, 0x0, 0x347D0E0
	0x0347D0CC ADRP X0, 0xCB2000
	0x0347D0D0 LDR X0, [X0 + 0x770]
	0x0347D0D4 BL 0x1C16CF4
	0x0347D0D8 MOVZ W8, 0x1
	0x0347D0DC STRB W8, [X22 + 0x899]
	0x0347D0E0 CBZ X21, 0x347D160
	0x0347D0E4 ADRP X10, 0xCB2000
	0x0347D0E8 LDR X8, [X21]
	0x0347D0EC LDR X10, [X10 + 0x770]
	0x0347D0F0 LDRH W9, [X8 + 0x12E]
	0x0347D0F4 LDR X1, [X10]
	0x0347D0F8 CBZ X9, 0x347D11C
	0x0347D0FC LDR X10, [X8 + 0xB0]
	0x0347D100 ADD X10, X10, 0x8
	0x0347D104 LDUR X11, [X10 - 0x8]
	0x0347D108 CMP X11, X1
	0x0347D10C B.EQ 0x347D12C
	0x0347D110 SUBS X9, X9, 0x1
	0x0347D114 ADD X10, X10, 0x10
	0x0347D118 B.NE 0x347D104
	0x0347D11C MOV X0, X21
	0x0347D120 MOV W2, W31
	0x0347D124 BL 0x1C5C788
	0x0347D128 B 0x347D138
	0x0347D12C LDRSW X9, [X10]
	0x0347D130 ADD X8, X8, X9, 0x4, LSL
	0x0347D134 ADD X0, X8, 0x138
	0x0347D138 LDP X8, X1, [X0]
	0x0347D13C MOV X0, X21
	0x0347D140 BLR X8
	0x0347D144 MOV X1, X0
	0x0347D148 MOV X0, X20
	0x0347D14C MOV X2, X19
	0x0347D150 LDP X20, X19, [X31 + 0x20]
	0x0347D154 LDP X22, X21, [X31 + 0x10]
	0x0347D158 LDR X30, [X31], #0x30
	0x0347D15C B 0x347D164
	0x0347D160 BL 0x1C16F20
	0x0347D164 SUB X31, X31, 0x80
	0x0347D168 STR X30, [X31 + 0x40]
	0x0347D16C STP X24, X23, [X31 + 0x50]
	0x0347D170 STP X22, X21, [X31 + 0x60]
	0x0347D174 STP X20, X19, [X31 + 0x70]
	0x0347D178 ADRP X23, 0xF60000
	0x0347D17C ADRP X22, 0xCB3000
	0x0347D180 LDRB W8, [X23 + 0x89A]
	0x0347D184 LDR X22, [X22 + 0xD40]
	0x0347D188 MOV X19, X2
	0x0347D18C MOV X20, X1
	0x0347D190 MOV X21, X0
	0x0347D194 TBNZ X8, 0x0, 0x347D1D0
	0x0347D198 ADRP X0, 0xCB3000
	0x0347D19C LDR X0, [X0 + 0xD48]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xF61000
	009 Move X21, 0xCB4000
	010 Move X24, 0xC77000
	011 Move X23, 0xC7B000
	012 Move W8, [X22+2185]
	013 Move X21, [X21+3016]
	014 Move X24, [X24+1880]
	015 Move X23, [X23+272]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xC77000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0xCB4000
	026 Move X0, [X0+3144]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB4000
	029 Move X0, [X0+3016]
	030 Call 0x1C17CF4
	031 Move X0, 0xC7B000
	032 Move X0, [X0+272]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2185], W8
	036 Add X0, X19, 16
	037 Move X1, X31
	038 Call Interlocked.Increment, X0
	039 Move X8, [X21]
	040 Move W22, W0
	041 Move X0, X8
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call WebSocketMessageEnvelope..ctor, X0
	046 Move X0, [X24]
	047 Add X1, X31, 12
	048 Move [X31+12], W22
	049 Call 0x1C17E04
	050 Move X8, [X23]
	051 Move X1, X0
	052 Move X2, X31
	053 Move X0, X8
	054 Call String.Format, X0, X1
	055 Compare X21, 0
	056 JumpIfEqual {80}
	057 Move X8, 0xCB4000
	058 Move X8, [X8+3144]
	059 Move [X21+16], X0
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X22, X0
	064 Call Object..ctor, X0
	065 Compare X22, 0
	066 JumpIfEqual {80}
	067 Move X0, X19
	068 Move X1, X21
	069 Move [X22+16], X20
	070 Move [X21+328], X22
	071 Call Socket.SendAsync, X0, X1
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return X0
	080 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IMatch> CreateMatchAsync(System.String name = null)

Disassembly:
	0x0347D1A0 BL 0x1C16CF4
	0x0347D1A4 ADRP X0, 0xCB3000
	0x0347D1A8 LDR X0, [X0 + 0xD50]
	0x0347D1AC BL 0x1C16CF4
	0x0347D1B0 ADRP X0, 0xCB3000
	0x0347D1B4 LDR X0, [X0 + 0xD58]
	0x0347D1B8 BL 0x1C16CF4
	0x0347D1BC ADRP X0, 0xCB3000
	0x0347D1C0 LDR X0, [X0 + 0xD40]
	0x0347D1C4 BL 0x1C16CF4
	0x0347D1C8 MOVZ W8, 0x1
	0x0347D1CC STRB W8, [X23 + 0x89A]
	0x0347D1D0 LDR X0, [X22]
	0x0347D1D4 MOVI V0.2D, 0x0
	0x0347D1D8 STP V0, V0, [X31 + 0x20]
	0x0347D1DC STP V0, V0, [X31]
	0x0347D1E0 ADRP X22, 0xCB3000
	0x0347D1E4 ADRP X24, 0xCB3000
	0x0347D1E8 ADRP X23, 0xCB3000
	0x0347D1EC LDR W8, [X0 + 0xE0]
	0x0347D1F0 LDR X22, [X22 + 0xD48]
	0x0347D1F4 LDR X24, [X24 + 0xD50]
	0x0347D1F8 LDR X23, [X23 + 0xD58]
	0x0347D1FC CBNZ W8, 0x347D204
	0x0347D200 BL 0x1C16DFC
	0x0347D204 LDR X0, [X22]
	0x0347D208 ADD X8, X31, 0x0
	0x0347D20C ORR X22, X8, 0xF
	0x0347D210 MOV X8, X22
	0x0347D214 BL 0x263221C
	0x0347D218 LDR X2, [X24]
	0x0347D21C MOVN W8, 0x0
	0x0347D220 ADD X1, X31, 0x0
	0x0347D224 MOV X0, X22
	0x0347D228 STP X21, X20, [X31 + 0x20]
	0x0347D22C STR X19, [X31 + 0x30]
	0x0347D230 STR W8, [X31]
	0x0347D234 BL 0x1FD1014
	0x0347D238 LDR X1, [X23]
	0x0347D23C MOV X0, X22
	0x0347D240 BL 0x2632230
	0x0347D244 LDP X20, X19, [X31 + 0x70]
	0x0347D248 LDP X22, X21, [X31 + 0x60]
	0x0347D24C LDP X24, X23, [X31 + 0x50]
	0x0347D250 LDR X30, [X31 + 0x40]
	0x0347D254 ADD X31, X31, 0x80
	0x0347D258 RET
	0x0347D25C STP X30, X21, [X31 - 0x20]!
	0x0347D260 STP X20, X19, [X31 + 0x10]
	0x0347D264 ADRP X21, 0xF60000
	0x0347D268 LDRB W8, [X21 + 0x89B]
	0x0347D26C MOV X20, X1
	0x0347D270 MOV X19, X0
	0x0347D274 TBNZ X8, 0x0, 0x347D28C
	0x0347D278 ADRP X0, 0xCB3000
	0x0347D27C LDR X0, [X0 + 0xD60]
	0x0347D280 BL 0x1C16CF4
	0x0347D284 MOVZ W8, 0x1
	0x0347D288 STRB W8, [X21 + 0x89B]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0xF61000
	009 Move X21, 0xCB4000
	010 Move W8, [X22+2186]
	011 Move X21, [X21+3152]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xCB4000
	019 Move X0, [X0+3160]
	020 Call 0x1C17CF4
	021 Move X0, 0xCB4000
	022 Move X0, [X0+3168]
	023 Call 0x1C17CF4
	024 Move X0, 0xCB4000
	025 Move X0, [X0+3176]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB4000
	028 Move X0, [X0+3152]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2186], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+48], X31
	035 Move [X31+16], V0
	036 Move [X31+24], V0
	037 Move [X31], V0
	038 Move X21, 0xCB4000
	039 Move X23, 0xCB4000
	040 Move X22, 0xCB4000
	041 Move W8, [X0+224]
	042 Move X21, [X21+3160]
	043 Move X23, [X23+3168]
	044 Move X22, [X22+3176]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Add X8, X31, 0
	050 Or X21, X8, 15
	051 Move X8, X21
	052 Call AsyncTaskMethodBuilder`1<Object>.Create
	053 Move X2, [X23]
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W8, TEMP
	057 Add X1, X31, 0
	058 Move X0, X21
	059 Move [X31+32], X20
	060 Move [X31+40], X19
	061 Move [X31], W8
	062 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	063 Move X1, [X22]
	064 Move X0, X21
	065 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Move X23, [X31+72]
	072 Add X31, X31, 112
	073 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IParty> CreatePartyAsync(System.Boolean open, System.Int32 maxSize)

Disassembly:
	0x0347D28C CBZ X20, 0x347D304
	0x0347D290 ADRP X10, 0xCB3000
	0x0347D294 LDR X8, [X20]
	0x0347D298 LDR X10, [X10 + 0xD60]
	0x0347D29C LDRH W9, [X8 + 0x12E]
	0x0347D2A0 LDR X1, [X10]
	0x0347D2A4 CBZ X9, 0x347D2C8
	0x0347D2A8 LDR X10, [X8 + 0xB0]
	0x0347D2AC ADD X10, X10, 0x8
	0x0347D2B0 LDUR X11, [X10 - 0x8]
	0x0347D2B4 CMP X11, X1
	0x0347D2B8 B.EQ 0x347D2D8
	0x0347D2BC SUBS X9, X9, 0x1
	0x0347D2C0 ADD X10, X10, 0x10
	0x0347D2C4 B.NE 0x347D2B0
	0x0347D2C8 MOV X0, X20
	0x0347D2CC MOV W2, W31
	0x0347D2D0 BL 0x1C5C788
	0x0347D2D4 B 0x347D2E4
	0x0347D2D8 LDRSW X9, [X10]
	0x0347D2DC ADD X8, X8, X9, 0x4, LSL
	0x0347D2E0 ADD X0, X8, 0x138
	0x0347D2E4 LDP X8, X1, [X0]
	0x0347D2E8 MOV X0, X20
	0x0347D2EC BLR X8
	0x0347D2F0 MOV X1, X0
	0x0347D2F4 MOV X0, X19
	0x0347D2F8 LDP X20, X19, [X31 + 0x10]
	0x0347D2FC LDP X30, X21, [X31], #0x20
	0x0347D300 B 0x347D308
	0x0347D304 BL 0x1C16F20
	0x0347D308 STR X30, [X31 - 0x40]!
	0x0347D30C STP X24, X23, [X31 + 0x10]
	0x0347D310 STP X22, X21, [X31 + 0x20]
	0x0347D314 STP X20, X19, [X31 + 0x30]
	0x0347D318 ADRP X22, 0xF60000
	0x0347D31C ADRP X21, 0xCB3000
	0x0347D320 ADRP X24, 0xC76000
	0x0347D324 ADRP X23, 0xC7A000
	0x0347D328 LDRB W8, [X22 + 0x89C]
	0x0347D32C LDR X21, [X21 + 0xBC8]
	0x0347D330 LDR X24, [X24 + 0x758]
	0x0347D334 LDR X23, [X23 + 0x110]
	0x0347D338 MOV X20, X1
	0x0347D33C MOV X19, X0
	0x0347D340 TBNZ X8, 0x0, 0x347D37C
	0x0347D344 ADRP X0, 0xC76000
	0x0347D348 LDR X0, [X0 + 0x758]
	0x0347D34C BL 0x1C16CF4
	0x0347D350 ADRP X0, 0xCB3000
	0x0347D354 LDR X0, [X0 + 0xD68]
	0x0347D358 BL 0x1C16CF4
	0x0347D35C ADRP X0, 0xCB3000
	0x0347D360 LDR X0, [X0 + 0xBC8]
	0x0347D364 BL 0x1C16CF4
	0x0347D368 ADRP X0, 0xC7A000
	0x0347D36C LDR X0, [X0 + 0x110]
	0x0347D370 BL 0x1C16CF4
	0x0347D374 MOVZ W8, 0x1
	0x0347D378 STRB W8, [X22 + 0x89C]
	0x0347D37C ADD X0, X19, 0x10
	0x0347D380 MOV X1, X31
	0x0347D384 BL 0x33EB14C
	0x0347D388 LDR X8, [X21]
	0x0347D38C MOV W22, W0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF61000
	010 Move X22, 0xCB4000
	011 Move W8, [X23+2187]
	012 Move X22, [X22+3184]
	013 Move W19, W2
	014 Move W21, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xCB4000
	021 Move X0, [X0+3192]
	022 Call 0x1C17CF4
	023 Move X0, 0xCB4000
	024 Move X0, [X0+3200]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB4000
	027 Move X0, [X0+3208]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB4000
	030 Move X0, [X0+3184]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2187], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+48], X31
	037 Move [X31+16], V0
	038 Move [X31+24], V0
	039 Move [X31], V0
	040 Move X24, 0xCB4000
	041 Move X23, 0xCB4000
	042 Move X22, 0xCB4000
	043 Move W8, [X0+224]
	044 Move X24, [X24+3192]
	045 Move X23, [X23+3200]
	046 Move X22, [X22+3208]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X24]
	051 Add X8, X31, 0
	052 And W24, W21, 1
	053 Or X21, X8, 15
	054 Move X8, X21
	055 Call AsyncTaskMethodBuilder`1<Object>.Create
	056 Move X2, [X23]
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W8, TEMP
	060 Add X1, X31, 0
	061 Move X0, X21
	062 Move [X31+32], X20
	063 Move [X31+40], W24
	064 Move [X31+44], W19
	065 Move [X31], W8
	066 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	067 Move X1, [X22]
	068 Move X0, X21
	069 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	070 Move X20, [X31+112]
	071 Move X19, [X31+120]
	072 Move X22, [X31+96]
	073 Move X21, [X31+104]
	074 Move X24, [X31+80]
	075 Move X23, [X31+88]
	076 Move X30, [X31+64]
	077 Add X31, X31, 128
	078 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IStatus> FollowUsersAsync(System.Collections.Generic.IEnumerable`1<Nakama.IApiUser> users)

Disassembly:
	0x0347D390 MOV X0, X8
	0x0347D394 BL 0x1C16F10
	0x0347D398 MOV X1, X31
	0x0347D39C MOV X21, X0
	0x0347D3A0 BL 0x348068C
	0x0347D3A4 LDR X0, [X24]
	0x0347D3A8 ADD X1, X31, 0xC
	0x0347D3AC STR W22, [X31 + 0xC]
	0x0347D3B0 BL 0x1C16E04
	0x0347D3B4 LDR X8, [X23]
	0x0347D3B8 MOV X1, X0
	0x0347D3BC MOV X2, X31
	0x0347D3C0 MOV X0, X8
	0x0347D3C4 BL 0x321EFD0
	0x0347D3C8 CBZ X21, 0x347D418
	0x0347D3CC ADRP X8, 0xCB3000
	0x0347D3D0 LDR X8, [X8 + 0xD68]
	0x0347D3D4 STR X0, [X21 + 0x10]
	0x0347D3D8 LDR X0, [X8]
	0x0347D3DC BL 0x1C16F10
	0x0347D3E0 MOV X1, X31
	0x0347D3E4 MOV X22, X0
	0x0347D3E8 BL 0x33BDD8C
	0x0347D3EC CBZ X22, 0x347D418
	0x0347D3F0 MOV X0, X19
	0x0347D3F4 MOV X1, X21
	0x0347D3F8 STR X20, [X22 + 0x10]
	0x0347D3FC STR X22, [X21 + 0x78]
	0x0347D400 BL 0x347BA8C
	0x0347D404 LDP X20, X19, [X31 + 0x30]
	0x0347D408 LDP X22, X21, [X31 + 0x20]
	0x0347D40C LDP X24, X23, [X31 + 0x10]
	0x0347D410 LDR X30, [X31], #0x40
	0x0347D414 RET
	0x0347D418 BL 0x1C16F20
	0x0347D41C SUB X31, X31, 0x50
	0x0347D420 STP X30, X25, [X31 + 0x10]
	0x0347D424 STP X24, X23, [X31 + 0x20]
	0x0347D428 STP X22, X21, [X31 + 0x30]
	0x0347D42C STP X20, X19, [X31 + 0x40]
	0x0347D430 ADRP X23, 0xF60000
	0x0347D434 ADRP X22, 0xCB3000
	0x0347D438 ADRP X25, 0xC76000
	0x0347D43C ADRP X24, 0xC7A000
	0x0347D440 LDRB W8, [X23 + 0x89D]
	0x0347D444 LDR X22, [X22 + 0xBC8]
	0x0347D448 LDR X25, [X25 + 0x758]
	0x0347D44C LDR X24, [X24 + 0x110]
	0x0347D450 MOV X20, X2
	0x0347D454 MOV X21, X1
	0x0347D458 MOV X19, X0
	0x0347D45C TBNZ X8, 0x0, 0x347D498
	0x0347D460 ADRP X0, 0xC76000
	0x0347D464 LDR X0, [X0 + 0x758]
	0x0347D468 BL 0x1C16CF4
	0x0347D46C ADRP X0, 0xCB3000
	0x0347D470 LDR X0, [X0 + 0xD70]
	0x0347D474 BL 0x1C16CF4
	0x0347D478 ADRP X0, 0xCB3000
	0x0347D47C LDR X0, [X0 + 0xBC8]
	0x0347D480 BL 0x1C16CF4
	0x0347D484 ADRP X0, 0xC7A000
	0x0347D488 LDR X0, [X0 + 0x110]
	0x0347D48C BL 0x1C16CF4
	0x0347D490 MOVZ W8, 0x1
	0x0347D494 STRB W8, [X23 + 0x89D]
	0x0347D498 ADD X0, X19, 0x10
	0x0347D49C MOV X1, X31
	0x0347D4A0 BL 0x33EB14C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF61000
	009 Move X23, 0xCB4000
	010 Move W8, [X21+2188]
	011 Move X23, [X23+3216]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xC78000
	019 Move X0, [X0+3456]
	020 Call 0x1C17CF4
	021 Move X0, 0xC78000
	022 Move X0, [X0+3496]
	023 Call 0x1C17CF4
	024 Move X0, 0xCB4000
	025 Move X0, [X0+3224]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB4000
	028 Move X0, [X0+3216]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2188], W8
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X23]
	038 Move X8, [X0+184]
	039 Move X24, 0xC78000
	040 Move X21, [X8+8]
	041 Move X24, [X24+3456]
	042 Compare X21, 0
	043 JumpIfNotEqual {65}
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X23]
	049 Move X9, 0xC78000
	050 Move X8, [X0+184]
	051 Move X9, [X9+3496]
	052 Move X22, [X8]
	053 Move X0, [X9]
	054 Call 0x1C17F10
	055 Move X8, 0xCB4000
	056 Move X8, [X8+3224]
	057 Move X1, X22
	058 Move X3, X31
	059 Move X21, X0
	060 Move X2, [X8]
	061 Call Func`2<Object, Object>..ctor, X0, X1, X2
	062 Move X8, [X23]
	063 Move X8, [X8+184]
	064 Move [X8+8], X21
	065 Move X2, [X24]
	066 Move X0, X20
	067 Move X1, X21
	068 Call Enumerable.Select, X0, X1
	069 Compare X19, 0
	070 JumpIfEqual {81}
	071 Move X1, X0
	072 Move X0, X19
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X2, X31
	080 Move X30, [X31+64]
	081 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IStatus> FollowUsersAsync(System.Collections.Generic.IEnumerable`1<System.String> userIDs, System.Collections.Generic.IEnumerable`1<System.String> usernames = null)

Disassembly:
	0x0347D4A4 LDR X8, [X22]
	0x0347D4A8 MOV W23, W0
	0x0347D4AC MOV X0, X8
	0x0347D4B0 BL 0x1C16F10
	0x0347D4B4 MOV X1, X31
	0x0347D4B8 MOV X22, X0
	0x0347D4BC BL 0x348068C
	0x0347D4C0 LDR X0, [X25]
	0x0347D4C4 ADD X1, X31, 0xC
	0x0347D4C8 STR W23, [X31 + 0xC]
	0x0347D4CC BL 0x1C16E04
	0x0347D4D0 LDR X8, [X24]
	0x0347D4D4 MOV X1, X0
	0x0347D4D8 MOV X2, X31
	0x0347D4DC MOV X0, X8
	0x0347D4E0 BL 0x321EFD0
	0x0347D4E4 CBZ X22, 0x347D538
	0x0347D4E8 ADRP X8, 0xCB3000
	0x0347D4EC LDR X8, [X8 + 0xD70]
	0x0347D4F0 STR X0, [X22 + 0x10]
	0x0347D4F4 LDR X0, [X8]
	0x0347D4F8 BL 0x1C16F10
	0x0347D4FC MOV X1, X31
	0x0347D500 MOV X23, X0
	0x0347D504 BL 0x33BDD8C
	0x0347D508 CBZ X23, 0x347D538
	0x0347D50C MOV X0, X19
	0x0347D510 MOV X1, X22
	0x0347D514 STP X21, X20, [X23 + 0x10]
	0x0347D518 STR X23, [X22 + 0x168]
	0x0347D51C BL 0x347BA8C
	0x0347D520 LDP X20, X19, [X31 + 0x40]
	0x0347D524 LDP X22, X21, [X31 + 0x30]
	0x0347D528 LDP X24, X23, [X31 + 0x20]
	0x0347D52C LDP X30, X25, [X31 + 0x10]
	0x0347D530 ADD X31, X31, 0x50
	0x0347D534 RET
	0x0347D538 BL 0x1C16F20
	0x0347D53C SUB X31, X31, 0x50
	0x0347D540 STP X30, X25, [X31 + 0x10]
	0x0347D544 STP X24, X23, [X31 + 0x20]
	0x0347D548 STP X22, X21, [X31 + 0x30]
	0x0347D54C STP X20, X19, [X31 + 0x40]
	0x0347D550 ADRP X23, 0xF60000
	0x0347D554 ADRP X22, 0xCB3000
	0x0347D558 ADRP X25, 0xC76000
	0x0347D55C ADRP X24, 0xC7A000
	0x0347D560 LDRB W8, [X23 + 0x89E]
	0x0347D564 LDR X22, [X22 + 0xBC8]
	0x0347D568 LDR X25, [X25 + 0x758]
	0x0347D56C LDR X24, [X24 + 0x110]
	0x0347D570 MOV X20, X2
	0x0347D574 MOV X21, X1
	0x0347D578 MOV X19, X0
	0x0347D57C TBNZ X8, 0x0, 0x347D5C4
	0x0347D580 ADRP X0, 0xC76000
	0x0347D584 LDR X0, [X0 + 0x758]
	0x0347D588 BL 0x1C16CF4
	0x0347D58C ADRP X0, 0xCB3000
	0x0347D590 LDR X0, [X0 + 0xD78]
	0x0347D594 BL 0x1C16CF4
	0x0347D598 ADRP X0, 0xCB3000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF61000
	010 Move X22, 0xCB4000
	011 Move W8, [X23+2189]
	012 Move X22, [X22+3232]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xCB4000
	021 Move X0, [X0+3240]
	022 Call 0x1C17CF4
	023 Move X0, 0xCB4000
	024 Move X0, [X0+3248]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB4000
	027 Move X0, [X0+3256]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB4000
	030 Move X0, [X0+3232]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2189], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xCB4000
	041 Move X24, 0xCB4000
	042 Move X23, 0xCB4000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3240]
	045 Move X24, [X24+3248]
	046 Move X23, [X23+3256]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+32], X21
	062 Move [X31+40], X20
	063 Move [X31+48], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IChannel> JoinChatAsync(System.String target, Nakama.ChannelType type, System.Boolean persistence = False, System.Boolean hidden = False)

Disassembly:
	0x0347D59C LDR X0, [X0 + 0x808]
	0x0347D5A0 BL 0x1C16CF4
	0x0347D5A4 ADRP X0, 0xCB3000
	0x0347D5A8 LDR X0, [X0 + 0xBC8]
	0x0347D5AC BL 0x1C16CF4
	0x0347D5B0 ADRP X0, 0xC7A000
	0x0347D5B4 LDR X0, [X0 + 0x110]
	0x0347D5B8 BL 0x1C16CF4
	0x0347D5BC MOVZ W8, 0x1
	0x0347D5C0 STRB W8, [X23 + 0x89E]
	0x0347D5C4 ADD X0, X19, 0x10
	0x0347D5C8 MOV X1, X31
	0x0347D5CC BL 0x33EB14C
	0x0347D5D0 LDR X8, [X22]
	0x0347D5D4 MOV W23, W0
	0x0347D5D8 MOV X0, X8
	0x0347D5DC BL 0x1C16F10
	0x0347D5E0 MOV X1, X31
	0x0347D5E4 MOV X22, X0
	0x0347D5E8 BL 0x348068C
	0x0347D5EC LDR X0, [X25]
	0x0347D5F0 ADD X1, X31, 0xC
	0x0347D5F4 STR W23, [X31 + 0xC]
	0x0347D5F8 BL 0x1C16E04
	0x0347D5FC LDR X8, [X24]
	0x0347D600 MOV X1, X0
	0x0347D604 MOV X2, X31
	0x0347D608 MOV X0, X8
	0x0347D60C BL 0x321EFD0
	0x0347D610 CBZ X22, 0x347D6A8
	0x0347D614 ADRP X8, 0xCB3000
	0x0347D618 LDR X8, [X8 + 0xD78]
	0x0347D61C STR X0, [X22 + 0x10]
	0x0347D620 LDR X0, [X8]
	0x0347D624 BL 0x1C16F10
	0x0347D628 MOV X1, X31
	0x0347D62C MOV X23, X0
	0x0347D630 BL 0x33BDD8C
	0x0347D634 CBZ X23, 0x347D6A8
	0x0347D638 STR X21, [X23 + 0x10]
	0x0347D63C CBZ X20, 0x347D660
	0x0347D640 ADRP X8, 0xCB3000
	0x0347D644 LDR X8, [X8 + 0x808]
	0x0347D648 LDR X9, [X20]
	0x0347D64C LDR X8, [X8]
	0x0347D650 LDRB W11, [X9 + 0x130]
	0x0347D654 LDRB W10, [X8 + 0x130]
	0x0347D658 CMP W11, W10
	0x0347D65C B.CS 0x347D668
	0x0347D660 MOV X8, X31
	0x0347D664 B 0x347D67C
	0x0347D668 LDR X9, [X9 + 0xC8]
	0x0347D66C ADD X9, X9, X10, 0x3, LSL
	0x0347D670 LDUR X9, [X9 - 0x8]
	0x0347D674 CMP X9, X8
	0x0347D678 CSEL X8, X20, X31, EQ
	0x0347D67C MOV X0, X19
	0x0347D680 MOV X1, X22
	0x0347D684 STR X8, [X23 + 0x18]
	0x0347D688 STR X23, [X22 + 0x140]
	0x0347D68C BL 0x347BA8C
	0x0347D690 LDP X20, X19, [X31 + 0x40]
	0x0347D694 LDP X22, X21, [X31 + 0x30]
	0x0347D698 LDP X24, X23, [X31 + 0x20]
	0x0347D69C LDP X30, X25, [X31 + 0x10]
	0x0347D6A0 ADD X31, X31, 0x50
	0x0347D6A4 RET
	0x0347D6A8 BL 0x1C16F20
	0x0347D6AC SUB X31, X31, 0x80
	0x0347D6B0 STR X30, [X31 + 0x40]
	0x0347D6B4 STP X24, X23, [X31 + 0x50]
	0x0347D6B8 STP X22, X21, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0xF61000
	012 Move X24, 0xCB4000
	013 Move W8, [X25+2190]
	014 Move X24, [X24+3264]
	015 Move W22, W4
	016 Move W23, W3
	017 Move W19, W2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xCB4000
	025 Move X0, [X0+3272]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB4000
	028 Move X0, [X0+3280]
	029 Call 0x1C17CF4
	030 Move X0, 0xCB4000
	031 Move X0, [X0+3288]
	032 Call 0x1C17CF4
	033 Move X0, 0xCB4000
	034 Move X0, [X0+3264]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+2190], W8
	038 Move X0, [X24]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+64], X31
	041 Move [X31+32], V0
	042 Move [X31+40], V0
	043 Move [X31], V0
	044 Move [X31+8], V0
	045 Move X26, 0xCB4000
	046 Move X25, 0xCB4000
	047 Move X24, 0xCB4000
	048 Move W8, [X0+224]
	049 Move X26, [X26+3272]
	050 Move X25, [X25+3280]
	051 Move X24, [X24+3288]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X26]
	056 Add X8, X31, 0
	057 And W26, W22, 1
	058 Or X22, X8, 15
	059 Move X8, X22
	060 And W23, W23, 1
	061 Call AsyncTaskMethodBuilder`1<Object>.Create
	062 Move X2, [X25]
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W8, TEMP
	066 Add X1, X31, 0
	067 Move X0, X22
	068 Move [X31+32], X21
	069 Move [X31+48], X20
	070 Move [X31+56], W19
	071 Move [X31+41], W23
	072 Move [X31+40], W26
	073 Move [X31], W8
	074 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	075 Move X1, [X24]
	076 Move X0, X22
	077 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	078 Move X20, [X31+144]
	079 Move X19, [X31+152]
	080 Move X22, [X31+128]
	081 Move X21, [X31+136]
	082 Move X24, [X31+112]
	083 Move X23, [X31+120]
	084 Move X26, [X31+96]
	085 Move X25, [X31+104]
	086 Move X30, [X31+80]
	087 Add X31, X31, 160
	088 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IMatch> JoinMatchAsync(Nakama.IMatchmakerMatched matched)

Disassembly:
	0x0347D6BC STP X20, X19, [X31 + 0x70]
	0x0347D6C0 ADRP X23, 0xF60000
	0x0347D6C4 ADRP X22, 0xCB1000
	0x0347D6C8 LDRB W8, [X23 + 0x89F]
	0x0347D6CC LDR X22, [X22 + 0x668]
	0x0347D6D0 MOV X19, X2
	0x0347D6D4 MOV X20, X1
	0x0347D6D8 MOV X21, X0
	0x0347D6DC TBNZ X8, 0x0, 0x347D718
	0x0347D6E0 ADRP X0, 0xCB1000
	0x0347D6E4 LDR X0, [X0 + 0x670]
	0x0347D6E8 BL 0x1C16CF4
	0x0347D6EC ADRP X0, 0xCB3000
	0x0347D6F0 LDR X0, [X0 + 0xD80]
	0x0347D6F4 BL 0x1C16CF4
	0x0347D6F8 ADRP X0, 0xCB1000
	0x0347D6FC LDR X0, [X0 + 0x680]
	0x0347D700 BL 0x1C16CF4
	0x0347D704 ADRP X0, 0xCB1000
	0x0347D708 LDR X0, [X0 + 0x668]
	0x0347D70C BL 0x1C16CF4
	0x0347D710 MOVZ W8, 0x1
	0x0347D714 STRB W8, [X23 + 0x89F]
	0x0347D718 LDR X0, [X22]
	0x0347D71C MOVI V0.2D, 0x0
	0x0347D720 STP V0, V0, [X31 + 0x20]
	0x0347D724 STP V0, V0, [X31]
	0x0347D728 ADRP X22, 0xCB1000
	0x0347D72C ADRP X24, 0xCB3000
	0x0347D730 ADRP X23, 0xCB1000
	0x0347D734 LDR W8, [X0 + 0xE0]
	0x0347D738 LDR X22, [X22 + 0x670]
	0x0347D73C LDR X24, [X24 + 0xD80]
	0x0347D740 LDR X23, [X23 + 0x680]
	0x0347D744 CBNZ W8, 0x347D74C
	0x0347D748 BL 0x1C16DFC
	0x0347D74C LDR X0, [X22]
	0x0347D750 ADD X8, X31, 0x0
	0x0347D754 ORR X22, X8, 0xF
	0x0347D758 MOV X8, X22
	0x0347D75C BL 0x263221C
	0x0347D760 LDR X2, [X24]
	0x0347D764 MOVN W8, 0x0
	0x0347D768 ADD X1, X31, 0x0
	0x0347D76C MOV X0, X22
	0x0347D770 STP X21, X20, [X31 + 0x20]
	0x0347D774 STR X19, [X31 + 0x30]
	0x0347D778 STR W8, [X31]
	0x0347D77C BL 0x1FD1114
	0x0347D780 LDR X1, [X23]
	0x0347D784 MOV X0, X22
	0x0347D788 BL 0x2632230
	0x0347D78C LDP X20, X19, [X31 + 0x70]
	0x0347D790 LDP X22, X21, [X31 + 0x60]
	0x0347D794 LDP X24, X23, [X31 + 0x50]
	0x0347D798 LDR X30, [X31 + 0x40]
	0x0347D79C ADD X31, X31, 0x80
	0x0347D7A0 RET
	0x0347D7A4 SUB X31, X31, 0x90

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0xF61000
	009 Move X21, 0xCB4000
	010 Move W8, [X22+2191]
	011 Move X21, [X21+3152]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xCB4000
	019 Move X0, [X0+3160]
	020 Call 0x1C17CF4
	021 Move X0, 0xCB4000
	022 Move X0, [X0+3296]
	023 Call 0x1C17CF4
	024 Move X0, 0xCB4000
	025 Move X0, [X0+3176]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB4000
	028 Move X0, [X0+3152]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2191], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+48], X31
	035 Move [X31+16], V0
	036 Move [X31+24], V0
	037 Move [X31], V0
	038 Move X21, 0xCB4000
	039 Move X23, 0xCB4000
	040 Move X22, 0xCB4000
	041 Move W8, [X0+224]
	042 Move X21, [X21+3160]
	043 Move X23, [X23+3296]
	044 Move X22, [X22+3176]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Add X8, X31, 0
	050 Or X21, X8, 15
	051 Move X8, X21
	052 Call AsyncTaskMethodBuilder`1<Object>.Create
	053 Move X2, [X23]
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W8, TEMP
	057 Add X1, X31, 0
	058 Move X0, X21
	059 Move [X31+32], X19
	060 Move [X31+40], X20
	061 Move [X31], W8
	062 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	063 Move X1, [X22]
	064 Move X0, X21
	065 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Move X23, [X31+72]
	072 Add X31, X31, 112
	073 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IMatch> JoinMatchAsync(System.String matchId, System.Collections.Generic.IDictionary`2<System.String, System.String> metadata = null)

Disassembly:
	0x0347D7A8 STP X30, X25, [X31 + 0x50]
	0x0347D7AC STP X24, X23, [X31 + 0x60]
	0x0347D7B0 STP X22, X21, [X31 + 0x70]
	0x0347D7B4 STP X20, X19, [X31 + 0x80]
	0x0347D7B8 ADRP X24, 0xF60000
	0x0347D7BC ADRP X23, 0xCB1000
	0x0347D7C0 LDRB W8, [X24 + 0x8A0]
	0x0347D7C4 LDR X23, [X23 + 0x668]
	0x0347D7C8 MOV X19, X3
	0x0347D7CC MOV X20, X2
	0x0347D7D0 MOV X21, X1
	0x0347D7D4 MOV X22, X0
	0x0347D7D8 TBNZ X8, 0x0, 0x347D814
	0x0347D7DC ADRP X0, 0xCB1000
	0x0347D7E0 LDR X0, [X0 + 0x670]
	0x0347D7E4 BL 0x1C16CF4
	0x0347D7E8 ADRP X0, 0xCB3000
	0x0347D7EC LDR X0, [X0 + 0xD88]
	0x0347D7F0 BL 0x1C16CF4
	0x0347D7F4 ADRP X0, 0xCB1000
	0x0347D7F8 LDR X0, [X0 + 0x680]
	0x0347D7FC BL 0x1C16CF4
	0x0347D800 ADRP X0, 0xCB1000
	0x0347D804 LDR X0, [X0 + 0x668]
	0x0347D808 BL 0x1C16CF4
	0x0347D80C MOVZ W8, 0x1
	0x0347D810 STRB W8, [X24 + 0x8A0]
	0x0347D814 LDR X0, [X23]
	0x0347D818 MOVI V0.2D, 0x0
	0x0347D81C STR X31, [X31 + 0x40]
	0x0347D820 STP V0, V0, [X31 + 0x20]
	0x0347D824 STP V0, V0, [X31]
	0x0347D828 ADRP X23, 0xCB1000
	0x0347D82C ADRP X25, 0xCB3000
	0x0347D830 ADRP X24, 0xCB1000
	0x0347D834 LDR W8, [X0 + 0xE0]
	0x0347D838 LDR X23, [X23 + 0x670]
	0x0347D83C LDR X25, [X25 + 0xD88]
	0x0347D840 LDR X24, [X24 + 0x680]
	0x0347D844 CBNZ W8, 0x347D84C
	0x0347D848 BL 0x1C16DFC
	0x0347D84C LDR X0, [X23]
	0x0347D850 ADD X8, X31, 0x0
	0x0347D854 ORR X23, X8, 0xF
	0x0347D858 MOV X8, X23
	0x0347D85C BL 0x263221C
	0x0347D860 LDR X2, [X25]
	0x0347D864 MOVN W8, 0x0
	0x0347D868 ADD X1, X31, 0x0
	0x0347D86C MOV X0, X23
	0x0347D870 STP X22, X21, [X31 + 0x20]
	0x0347D874 STP X20, X19, [X31 + 0x30]
	0x0347D878 STR W8, [X31]
	0x0347D87C BL 0x1FD1214
	0x0347D880 LDR X1, [X24]
	0x0347D884 MOV X0, X23
	0x0347D888 BL 0x2632230
	0x0347D88C LDP X20, X19, [X31 + 0x80]
	0x0347D890 LDP X22, X21, [X31 + 0x70]
	0x0347D894 LDP X24, X23, [X31 + 0x60]
	0x0347D898 LDP X30, X25, [X31 + 0x50]
	0x0347D89C ADD X31, X31, 0x90

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF61000
	010 Move X22, 0xCB4000
	011 Move W8, [X23+2192]
	012 Move X22, [X22+3152]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xCB4000
	021 Move X0, [X0+3160]
	022 Call 0x1C17CF4
	023 Move X0, 0xCB4000
	024 Move X0, [X0+3304]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB4000
	027 Move X0, [X0+3176]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB4000
	030 Move X0, [X0+3152]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2192], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xCB4000
	041 Move X24, 0xCB4000
	042 Move X23, 0xCB4000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3160]
	045 Move X24, [X24+3304]
	046 Move X23, [X23+3176]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+32], X21
	062 Move [X31+40], X20
	063 Move [X31+48], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task JoinPartyAsync(System.String partyId)

Disassembly:
	0x0347D8A0 RET
	0x0347D8A4 STP X30, X27, [X31 - 0x50]!
	0x0347D8A8 STP X26, X25, [X31 + 0x10]
	0x0347D8AC STP X24, X23, [X31 + 0x20]
	0x0347D8B0 STP X22, X21, [X31 + 0x30]
	0x0347D8B4 STP X20, X19, [X31 + 0x40]
	0x0347D8B8 ADRP X24, 0xF60000
	0x0347D8BC ADRP X27, 0xCB3000
	0x0347D8C0 ADRP X26, 0xCB3000
	0x0347D8C4 LDRB W8, [X24 + 0x8A1]
	0x0347D8C8 LDR X27, [X27 + 0xBC8]
	0x0347D8CC LDR X26, [X26 + 0xD90]
	0x0347D8D0 MOV X22, X5
	0x0347D8D4 MOV X20, X4
	0x0347D8D8 MOV X21, X3
	0x0347D8DC MOV X23, X2
	0x0347D8E0 MOV X25, X1
	0x0347D8E4 MOV X19, X0
	0x0347D8E8 TBNZ X8, 0x0, 0x347D948
	0x0347D8EC ADRP X0, 0xCA9000
	0x0347D8F0 LDR X0, [X0 + 0xCF0]
	0x0347D8F4 BL 0x1C16CF4
	0x0347D8F8 ADRP X0, 0xCA9000
	0x0347D8FC LDR X0, [X0 + 0xCF8]
	0x0347D900 BL 0x1C16CF4
	0x0347D904 ADRP X0, 0xCA9000
	0x0347D908 LDR X0, [X0 + 0xD00]
	0x0347D90C BL 0x1C16CF4
	0x0347D910 ADRP X0, 0xC9E000
	0x0347D914 LDR X0, [X0 + 0x5B0]
	0x0347D918 BL 0x1C16CF4
	0x0347D91C ADRP X0, 0xC7F000
	0x0347D920 LDR X0, [X0 + 0x9E8]
	0x0347D924 BL 0x1C16CF4
	0x0347D928 ADRP X0, 0xCB3000
	0x0347D92C LDR X0, [X0 + 0xD90]
	0x0347D930 BL 0x1C16CF4
	0x0347D934 ADRP X0, 0xCB3000
	0x0347D938 LDR X0, [X0 + 0xBC8]
	0x0347D93C BL 0x1C16CF4
	0x0347D940 MOVZ W8, 0x1
	0x0347D944 STRB W8, [X24 + 0x8A1]
	0x0347D948 LDR X0, [X27]
	0x0347D94C BL 0x1C16F10
	0x0347D950 MOV X1, X31
	0x0347D954 MOV X24, X0
	0x0347D958 BL 0x348068C
	0x0347D95C LDR X0, [X26]
	0x0347D960 BL 0x1C16F10
	0x0347D964 MOV X1, X31
	0x0347D968 MOV X26, X0
	0x0347D96C BL 0x33BDD8C
	0x0347D970 CBZ X26, 0x347DA08
	0x0347D974 ADRP X8, 0xC7F000
	0x0347D978 LDR X8, [X8 + 0x9E8]
	0x0347D97C STR X25, [X26 + 0x10]
	0x0347D980 ADRP X27, 0xC9E000
	0x0347D984 UBFM X25, X20, 0x20, 0x3F
	0x0347D988 LDR X0, [X8]
	0x0347D98C LDR W8, [X0 + 0xE0]
	0x0347D990 LDR X27, [X27 + 0x5B0]
	0x0347D994 CBNZ W8, 0x347D99C
	0x0347D998 BL 0x1C16DFC
	0x0347D99C MOV X0, X23
	0x0347D9A0 MOV X1, X31
	0x0347D9A4 BL 0x33222E0
	0x0347D9A8 STR X0, [X26 + 0x18]
	0x0347D9AC MOV X0, X22
	0x0347D9B0 BL 0x347DA0C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xF61000
	009 Move X21, 0xCB4000
	010 Move X24, 0xC77000
	011 Move X23, 0xC7B000
	012 Move W8, [X22+2193]
	013 Move X21, [X21+3016]
	014 Move X24, [X24+1880]
	015 Move X23, [X23+272]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xC77000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0xCB4000
	026 Move X0, [X0+3312]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB4000
	029 Move X0, [X0+3016]
	030 Call 0x1C17CF4
	031 Move X0, 0xC7B000
	032 Move X0, [X0+272]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2193], W8
	036 Add X0, X19, 16
	037 Move X1, X31
	038 Call Interlocked.Increment, X0
	039 Move X8, [X21]
	040 Move W22, W0
	041 Move X0, X8
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call WebSocketMessageEnvelope..ctor, X0
	046 Move X0, [X24]
	047 Add X1, X31, 12
	048 Move [X31+12], W22
	049 Call 0x1C17E04
	050 Move X8, [X23]
	051 Move X1, X0
	052 Move X2, X31
	053 Move X0, X8
	054 Call String.Format, X0, X1
	055 Compare X21, 0
	056 JumpIfEqual {80}
	057 Move X8, 0xCB4000
	058 Move X8, [X8+3312]
	059 Move [X21+16], X0
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X22, X0
	064 Call Object..ctor, X0
	065 Compare X22, 0
	066 JumpIfEqual {80}
	067 Move X0, X19
	068 Move X1, X21
	069 Move [X22+16], X20
	070 Move [X21+280], X22
	071 Call Socket.SendAsync, X0, X1
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return X0
	080 Call 0x1C17F20

Method: System.Threading.Tasks.Task LeaveChatAsync(Nakama.IChannel channel)

Disassembly:
	0x0347D9B4 STR X0, [X26 + 0x20]
	0x0347D9B8 LDR X0, [X27]
	0x0347D9BC LDR W8, [X0 + 0xE0]
	0x0347D9C0 CBNZ W8, 0x347D9C8
	0x0347D9C4 BL 0x1C16DFC
	0x0347D9C8 MOV X0, X21
	0x0347D9CC MOV W1, W20
	0x0347D9D0 MOV W2, W25
	0x0347D9D4 MOV X3, X31
	0x0347D9D8 BL 0x3322804
	0x0347D9DC STR X0, [X26 + 0x28]
	0x0347D9E0 CBZ X24, 0x347DA08
	0x0347D9E4 STR X26, [X24 + 0xB8]
	0x0347D9E8 MOV X0, X19
	0x0347D9EC MOV X1, X24
	0x0347D9F0 LDP X20, X19, [X31 + 0x40]
	0x0347D9F4 LDP X22, X21, [X31 + 0x30]
	0x0347D9F8 LDP X24, X23, [X31 + 0x20]
	0x0347D9FC LDP X26, X25, [X31 + 0x10]
	0x0347DA00 LDP X30, X27, [X31], #0x50
	0x0347DA04 B 0x347BA8C
	0x0347DA08 BL 0x1C16F20
	0x0347DA0C STR X30, [X31 - 0x40]!
	0x0347DA10 STP X24, X23, [X31 + 0x10]
	0x0347DA14 STP X22, X21, [X31 + 0x20]
	0x0347DA18 STP X20, X19, [X31 + 0x30]
	0x0347DA1C ADRP X19, 0xF60000
	0x0347DA20 LDRB W8, [X19 + 0x8B1]
	0x0347DA24 MOV X20, X0
	0x0347DA28 TBNZ X8, 0x0, 0x347DA94
	0x0347DA2C ADRP X0, 0xC76000
	0x0347DA30 LDR X0, [X0 + 0xE00]
	0x0347DA34 BL 0x1C16CF4
	0x0347DA38 ADRP X0, 0xC76000
	0x0347DA3C LDR X0, [X0 + 0xF50]
	0x0347DA40 BL 0x1C16CF4
	0x0347DA44 ADRP X0, 0xC76000
	0x0347DA48 LDR X0, [X0 + 0xF58]
	0x0347DA4C BL 0x1C16CF4
	0x0347DA50 ADRP X0, 0xC76000
	0x0347DA54 LDR X0, [X0 + 0xE18]
	0x0347DA58 BL 0x1C16CF4
	0x0347DA5C ADRP X0, 0xCB3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF61000
	006 Move W8, [X21+2194]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xCB3000
	014 Move X0, [X0+1904]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2194], W8
	018 Compare X20, 0
	019 JumpIfEqual {49}
	020 Move X10, 0xCB3000
	021 Move X8, [X20]
	022 Move X10, [X10+1904]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X1, X0
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call 0x1C17F20

Method: System.Threading.Tasks.Task LeaveChatAsync(System.String channelId)

Disassembly:
	0x0347DA60 LDR X0, [X0 + 0xD98]
	0x0347DA64 BL 0x1C16CF4
	0x0347DA68 ADRP X0, 0xCB3000
	0x0347DA6C LDR X0, [X0 + 0x8F8]
	0x0347DA70 BL 0x1C16CF4
	0x0347DA74 ADRP X0, 0xCB3000
	0x0347DA78 LDR X0, [X0 + 0x838]
	0x0347DA7C BL 0x1C16CF4
	0x0347DA80 ADRP X0, 0xCB3000
	0x0347DA84 LDR X0, [X0 + 0x808]
	0x0347DA88 BL 0x1C16CF4
	0x0347DA8C MOVZ W8, 0x1
	0x0347DA90 STRB W8, [X19 + 0x8B1]
	0x0347DA94 ADRP X21, 0xCB3000
	0x0347DA98 LDR X21, [X21 + 0x838]
	0x0347DA9C CBZ X20, 0x347DB2C
	0x0347DAA0 LDR X8, [X20]
	0x0347DAA4 LDR X0, [X21]
	0x0347DAA8 LDRB W10, [X8 + 0x130]
	0x0347DAAC LDRB W9, [X0 + 0x130]
	0x0347DAB0 CMP W10, W9
	0x0347DAB4 B.CC 0x347DACC
	0x0347DAB8 LDR X8, [X8 + 0xC8]
	0x0347DABC ADD X8, X8, X9, 0x3, LSL
	0x0347DAC0 LDUR X8, [X8 - 0x8]
	0x0347DAC4 CMP X8, X0
	0x0347DAC8 B.EQ 0x347DD5C
	0x0347DACC ADRP X19, 0xCB3000
	0x0347DAD0 ADRP X21, 0xC76000
	0x0347DAD4 LDR X19, [X19 + 0x8F8]
	0x0347DAD8 LDR X21, [X21 + 0xF50]
	0x0347DADC BL 0x1C16F10
	0x0347DAE0 LDR X1, [X19]
	0x0347DAE4 MOV X19, X0
	0x0347DAE8 BL 0x301B7C4
	0x0347DAEC LDR X8, [X20]
	0x0347DAF0 LDR X1, [X21]
	0x0347DAF4 LDRH W9, [X8 + 0x12E]
	0x0347DAF8 CBZ X9, 0x347DB1C
	0x0347DAFC LDR X10, [X8 + 0xB0]
	0x0347DB00 ADD X10, X10, 0x8
	0x0347DB04 LDUR X11, [X10 - 0x8]
	0x0347DB08 CMP X11, X1
	0x0347DB0C B.EQ 0x347DB88
	0x0347DB10 SUBS X9, X9, 0x1
	0x0347DB14 ADD X10, X10, 0x10
	0x0347DB18 B.NE 0x347DB04
	0x0347DB1C MOV X0, X20
	0x0347DB20 MOV W2, W31
	0x0347DB24 BL 0x1C5C788
	0x0347DB28 B 0x347DB94
	0x0347DB2C ADRP X19, 0xCB3000
	0x0347DB30 LDR X19, [X19 + 0x808]
	0x0347DB34 LDR X0, [X19]
	0x0347DB38 LDR W8, [X0 + 0xE0]
	0x0347DB3C CBNZ W8, 0x347DB48
	0x0347DB40 BL 0x1C16DFC
	0x0347DB44 LDR X0, [X19]
	0x0347DB48 LDR X8, [X0 + 0xB8]
	0x0347DB4C LDR X19, [X8]
	0x0347DB50 CBZ X19, 0x347DD80
	0x0347DB54 LDR X8, [X19]
	0x0347DB58 LDR X1, [X21]
	0x0347DB5C LDRB W10, [X8 + 0x130]
	0x0347DB60 LDRB W9, [X1 + 0x130]
	0x0347DB64 CMP W10, W9
	0x0347DB68 B.CC 0x347DB80
	0x0347DB6C LDR X8, [X8 + 0xC8]
	0x0347DB70 ADD X8, X8, X9, 0x3, LSL

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xF61000
	009 Move X21, 0xCB4000
	010 Move X24, 0xC77000
	011 Move X23, 0xC7B000
	012 Move W8, [X22+2195]
	013 Move X21, [X21+3016]
	014 Move X24, [X24+1880]
	015 Move X23, [X23+272]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xCB4000
	023 Move X0, [X0+3320]
	024 Call 0x1C17CF4
	025 Move X0, 0xC77000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB4000
	029 Move X0, [X0+3016]
	030 Call 0x1C17CF4
	031 Move X0, 0xC7B000
	032 Move X0, [X0+272]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2195], W8
	036 Add X0, X19, 16
	037 Move X1, X31
	038 Call Interlocked.Increment, X0
	039 Move X8, [X21]
	040 Move W22, W0
	041 Move X0, X8
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call WebSocketMessageEnvelope..ctor, X0
	046 Move X0, [X24]
	047 Add X1, X31, 12
	048 Move [X31+12], W22
	049 Call 0x1C17E04
	050 Move X8, [X23]
	051 Move X1, X0
	052 Move X2, X31
	053 Move X0, X8
	054 Call String.Format, X0, X1
	055 Compare X21, 0
	056 JumpIfEqual {80}
	057 Move X8, 0xCB4000
	058 Move X8, [X8+3320]
	059 Move [X21+16], X0
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X22, X0
	064 Call ChannelLeaveMessage..ctor, X0
	065 Compare X22, 0
	066 JumpIfEqual {80}
	067 Move X0, X19
	068 Move X1, X21
	069 Move [X22+16], X20
	070 Move [X21+40], X22
	071 Call Socket.SendAsync, X0, X1
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return X0
	080 Call 0x1C17F20

Method: System.Threading.Tasks.Task LeaveMatchAsync(Nakama.IMatch match)

Disassembly:
	0x0347DB74 LDUR X8, [X8 - 0x8]
	0x0347DB78 CMP X8, X1
	0x0347DB7C B.EQ 0x347DD80
	0x0347DB80 MOV X0, X19
	0x0347DB84 BL 0x1C171E0
	0x0347DB88 LDRSW X9, [X10]
	0x0347DB8C ADD X8, X8, X9, 0x4, LSL
	0x0347DB90 ADD X0, X8, 0x138
	0x0347DB94 LDP X8, X1, [X0]
	0x0347DB98 MOV X0, X20
	0x0347DB9C BLR X8
	0x0347DBA0 MOV X20, X0
	0x0347DBA4 CBZ X0, 0x347DDA8
	0x0347DBA8 ADRP X21, 0xC76000
	0x0347DBAC ADRP X22, 0xC76000
	0x0347DBB0 ADRP X23, 0xCB3000
	0x0347DBB4 ADRP X24, 0xCB3000
	0x0347DBB8 LDR X21, [X21 + 0xE18]
	0x0347DBBC LDR X22, [X22 + 0xF58]
	0x0347DBC0 LDR X23, [X23 + 0x808]
	0x0347DBC4 LDR X24, [X24 + 0xD98]
	0x0347DBC8 LDR X8, [X20]
	0x0347DBCC LDR X1, [X21]
	0x0347DBD0 LDRH W9, [X8 + 0x12E]
	0x0347DBD4 CBZ X9, 0x347DBF8
	0x0347DBD8 LDR X10, [X8 + 0xB0]
	0x0347DBDC ADD X10, X10, 0x8
	0x0347DBE0 LDUR X11, [X10 - 0x8]
	0x0347DBE4 CMP X11, X1
	0x0347DBE8 B.EQ 0x347DC08
	0x0347DBEC SUBS X9, X9, 0x1
	0x0347DBF0 ADD X10, X10, 0x10
	0x0347DBF4 B.NE 0x347DBE0
	0x0347DBF8 MOV X0, X20
	0x0347DBFC MOV W2, W31
	0x0347DC00 BL 0x1C5C788
	0x0347DC04 B 0x347DC14
	0x0347DC08 LDRSW X9, [X10]
	0x0347DC0C ADD X8, X8, X9, 0x4, LSL
	0x0347DC10 ADD X0, X8, 0x138
	0x0347DC14 LDP X8, X1, [X0]
	0x0347DC18 MOV X0, X20
	0x0347DC1C BLR X8
	0x0347DC20 TBZ X0, 0x0, 0x347DD0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF61000
	006 Move W8, [X21+2196]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xCB4000
	014 Move X0, [X0+3328]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2196], W8
	018 Compare X20, 0
	019 JumpIfEqual {50}
	020 Move X10, 0xCB4000
	021 Move X8, [X20]
	022 Move X10, [X10+3328]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 1
	034 Move X0, X20
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 1
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X1, X0
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call 0x1C17F20

Method: System.Threading.Tasks.Task LeaveMatchAsync(System.String matchId)

Disassembly:
	0x0347DC24 LDR X8, [X20]
	0x0347DC28 LDR X1, [X22]
	0x0347DC2C LDRH W9, [X8 + 0x12E]
	0x0347DC30 CBZ X9, 0x347DC54
	0x0347DC34 LDR X10, [X8 + 0xB0]
	0x0347DC38 ADD X10, X10, 0x8
	0x0347DC3C LDUR X11, [X10 - 0x8]
	0x0347DC40 CMP X11, X1
	0x0347DC44 B.EQ 0x347DC64
	0x0347DC48 SUBS X9, X9, 0x1
	0x0347DC4C ADD X10, X10, 0x10
	0x0347DC50 B.NE 0x347DC3C
	0x0347DC54 MOV X0, X20
	0x0347DC58 MOV W2, W31
	0x0347DC5C BL 0x1C5C788
	0x0347DC60 B 0x347DC70
	0x0347DC64 LDRSW X9, [X10]
	0x0347DC68 ADD X8, X8, X9, 0x4, LSL
	0x0347DC6C ADD X0, X8, 0x138
	0x0347DC70 LDP X8, X1, [X0]
	0x0347DC74 MOV X0, X20
	0x0347DC78 BLR X8
	0x0347DC7C MOV X8, X0
	0x0347DC80 CBZ X0, 0x347DCB0
	0x0347DC84 LDR X9, [X8]
	0x0347DC88 LDR X1, [X23]
	0x0347DC8C LDRB W11, [X9 + 0x130]
	0x0347DC90 LDRB W10, [X1 + 0x130]
	0x0347DC94 CMP W11, W10
	0x0347DC98 B.CC 0x347DD98
	0x0347DC9C LDR X9, [X9 + 0xC8]
	0x0347DCA0 ADD X9, X9, X10, 0x3, LSL
	0x0347DCA4 LDUR X9, [X9 - 0x8]
	0x0347DCA8 CMP X9, X1
	0x0347DCAC B.NE 0x347DD98
	0x0347DCB0 CBZ X19, 0x347DDA0
	0x0347DCB4 LDR W11, [X19 + 0x1C]
	0x0347DCB8 LDR X9, [X19 + 0x10]
	0x0347DCBC LDR X10, [X24]
	0x0347DCC0 ADD W11, W11, 0x1
	0x0347DCC4 STR W11, [X19 + 0x1C]
	0x0347DCC8 CBZ X9, 0x347DDA4
	0x0347DCCC LDRSW X11, [X19 + 0x18]
	0x0347DCD0 LDR W12, [X9 + 0x18]
	0x0347DCD4 CMP W11, W12
	0x0347DCD8 B.CS 0x347DCF0
	0x0347DCDC ADD W10, W11, 0x1
	0x0347DCE0 ADD X9, X9, X11, 0x3, LSL
	0x0347DCE4 STR W10, [X19 + 0x18]
	0x0347DCE8 STR X8, [X9 + 0x20]
	0x0347DCEC B 0x347DBC8
	0x0347DCF0 LDR X9, [X10 + 0x20]
	0x0347DCF4 LDR X9, [X9 + 0xC0]
	0x0347DCF8 LDR X2, [X9 + 0x70]
	0x0347DCFC MOV X0, X19
	0x0347DD00 MOV X1, X8
	0x0347DD04 BL 0x301BF90
	0x0347DD08 B 0x347DBC8
	0x0347DD0C MOV X21, X31
	0x0347DD10 CBZ X20, 0x347DD7C
	0x0347DD14 ADRP X10, 0xC76000
	0x0347DD18 LDR X8, [X20]
	0x0347DD1C LDR X10, [X10 + 0xE00]
	0x0347DD20 LDRH W9, [X8 + 0x12E]
	0x0347DD24 LDR X1, [X10]
	0x0347DD28 CBZ X9, 0x347DD4C
	0x0347DD2C LDR X10, [X8 + 0xB0]
	0x0347DD30 ADD X10, X10, 0x8
	0x0347DD34 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xF61000
	009 Move X21, 0xCB4000
	010 Move X24, 0xC77000
	011 Move X23, 0xC7B000
	012 Move W8, [X22+2197]
	013 Move X21, [X21+3016]
	014 Move X24, [X24+1880]
	015 Move X23, [X23+272]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xC77000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0xCB4000
	026 Move X0, [X0+3336]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB4000
	029 Move X0, [X0+3016]
	030 Call 0x1C17CF4
	031 Move X0, 0xC7B000
	032 Move X0, [X0+272]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2197], W8
	036 Add X0, X19, 16
	037 Move X1, X31
	038 Call Interlocked.Increment, X0
	039 Move X8, [X21]
	040 Move W22, W0
	041 Move X0, X8
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call WebSocketMessageEnvelope..ctor, X0
	046 Move X0, [X24]
	047 Add X1, X31, 12
	048 Move [X31+12], W22
	049 Call 0x1C17E04
	050 Move X8, [X23]
	051 Move X1, X0
	052 Move X2, X31
	053 Move X0, X8
	054 Call String.Format, X0, X1
	055 Compare X21, 0
	056 JumpIfEqual {80}
	057 Move X8, 0xCB4000
	058 Move X8, [X8+3336]
	059 Move [X21+16], X0
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X22, X0
	064 Call Object..ctor, X0
	065 Compare X22, 0
	066 JumpIfEqual {80}
	067 Move X0, X19
	068 Move X1, X21
	069 Move [X22+16], X20
	070 Move [X21+160], X22
	071 Call Socket.SendAsync, X0, X1
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return X0
	080 Call 0x1C17F20

Method: System.Threading.Tasks.Task LeavePartyAsync(System.String partyId)

Disassembly:
	0x0347DD38 CMP X11, X1
	0x0347DD3C B.EQ 0x347DD64
	0x0347DD40 SUBS X9, X9, 0x1
	0x0347DD44 ADD X10, X10, 0x10
	0x0347DD48 B.NE 0x347DD34
	0x0347DD4C MOV X0, X20
	0x0347DD50 MOV W2, W31
	0x0347DD54 BL 0x1C5C788
	0x0347DD58 B 0x347DD70
	0x0347DD5C MOV X19, X20
	0x0347DD60 B 0x347DD80
	0x0347DD64 LDRSW X9, [X10]
	0x0347DD68 ADD X8, X8, X9, 0x4, LSL
	0x0347DD6C ADD X0, X8, 0x138
	0x0347DD70 LDP X8, X1, [X0]
	0x0347DD74 MOV X0, X20
	0x0347DD78 BLR X8
	0x0347DD7C CBNZ X21, 0x347DDAC
	0x0347DD80 MOV X0, X19
	0x0347DD84 LDP X20, X19, [X31 + 0x30]
	0x0347DD88 LDP X22, X21, [X31 + 0x20]
	0x0347DD8C LDP X24, X23, [X31 + 0x10]
	0x0347DD90 LDR X30, [X31], #0x40
	0x0347DD94 RET
	0x0347DD98 MOV X0, X8
	0x0347DD9C BL 0x1C171E0
	0x0347DDA0 BL 0x1C16F20
	0x0347DDA4 BL 0x1C16F20
	0x0347DDA8 BL 0x1C16F20
	0x0347DDAC MOV X0, X21
	0x0347DDB0 BL 0x1C16F18
	0x0347DDB4 B 0x347DDC8
	0x0347DDB8 B 0x347DDC8
	0x0347DDBC B 0x347DDC8
	0x0347DDC0 B 0x347DDC8
	0x0347DDC4 B 0x347DDC8
	0x0347DDC8 MOV X22, X0
	0x0347DDCC CMP W1, 0x1
	0x0347DDD0 B.NE 0x347DDE8
	0x0347DDD4 MOV X0, X22
	0x0347DDD8 BL 0x3EB1AD0
	0x0347DDDC LDR X21, [X0]
	0x0347DDE0 BL 0x3EB1AE0
	0x0347DDE4 B 0x347DD10
	0x0347DDE8 MOV X21, X31
	0x0347DDEC B 0x347DDF4
	0x0347DDF0 MOV X22, X0
	0x0347DDF4 CBZ X20, 0x347DE58
	0x0347DDF8 ADRP X10, 0xC76000
	0x0347DDFC LDR X8, [X20]
	0x0347DE00 LDR X10, [X10 + 0xE00]
	0x0347DE04 LDRH W9, [X8 + 0x12E]
	0x0347DE08 LDR X1, [X10]
	0x0347DE0C CBZ X9, 0x347DE30
	0x0347DE10 LDR X10, [X8 + 0xB0]
	0x0347DE14 ADD X10, X10, 0x8
	0x0347DE18 LDUR X11, [X10 - 0x8]
	0x0347DE1C CMP X11, X1
	0x0347DE20 B.EQ 0x347DE40
	0x0347DE24 SUBS X9, X9, 0x1
	0x0347DE28 ADD X10, X10, 0x10
	0x0347DE2C B.NE 0x347DE18
	0x0347DE30 MOV X0, X20
	0x0347DE34 MOV W2, W31
	0x0347DE38 BL 0x1C5C788
	0x0347DE3C B 0x347DE4C
	0x0347DE40 LDRSW X9, [X10]
	0x0347DE44 ADD X8, X8, X9, 0x4, LSL
	0x0347DE48 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xF61000
	009 Move X21, 0xCB4000
	010 Move X24, 0xC77000
	011 Move X23, 0xC7B000
	012 Move W8, [X22+2198]
	013 Move X21, [X21+3016]
	014 Move X24, [X24+1880]
	015 Move X23, [X23+272]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xC77000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0xCB4000
	026 Move X0, [X0+3344]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB4000
	029 Move X0, [X0+3016]
	030 Call 0x1C17CF4
	031 Move X0, 0xC7B000
	032 Move X0, [X0+272]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2198], W8
	036 Add X0, X19, 16
	037 Move X1, X31
	038 Call Interlocked.Increment, X0
	039 Move X8, [X21]
	040 Move W22, W0
	041 Move X0, X8
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call WebSocketMessageEnvelope..ctor, X0
	046 Move X0, [X24]
	047 Add X1, X31, 12
	048 Move [X31+12], W22
	049 Call 0x1C17E04
	050 Move X8, [X23]
	051 Move X1, X0
	052 Move X2, X31
	053 Move X0, X8
	054 Call String.Format, X0, X1
	055 Compare X21, 0
	056 JumpIfEqual {80}
	057 Move X8, 0xCB4000
	058 Move X8, [X8+3344]
	059 Move [X21+16], X0
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X22, X0
	064 Call Object..ctor, X0
	065 Compare X22, 0
	066 JumpIfEqual {80}
	067 Move X0, X19
	068 Move X1, X21
	069 Move [X22+16], X20
	070 Move [X21+288], X22
	071 Call Socket.SendAsync, X0, X1
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return X0
	080 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IPartyJoinRequest> ListPartyJoinRequestsAsync(System.String partyId)

Disassembly:
	0x0347DE4C LDP X8, X1, [X0]
	0x0347DE50 MOV X0, X20
	0x0347DE54 BLR X8
	0x0347DE58 CBNZ X21, 0x347DE64
	0x0347DE5C MOV X0, X22
	0x0347DE60 BL 0x1D2C690
	0x0347DE64 MOV X0, X21
	0x0347DE68 BL 0x1C16F18
	0x0347DE6C BL 0x1990590
	0x0347DE70 STP X30, X23, [X31 - 0x30]!
	0x0347DE74 STP X22, X21, [X31 + 0x10]
	0x0347DE78 STP X20, X19, [X31 + 0x20]
	0x0347DE7C MOV X22, X0
	0x0347DE80 MOV X0, X31
	0x0347DE84 MOV X19, X4
	0x0347DE88 MOV X23, X3
	0x0347DE8C MOV X20, X2
	0x0347DE90 MOV X21, X1
	0x0347DE94 BL 0x3241948
	0x0347DE98 CBZ X0, 0x347DED4
	0x0347DE9C LDR X8, [X0]
	0x0347DEA0 MOV X1, X23
	0x0347DEA4 LDR X9, [X8 + 0x268]
	0x0347DEA8 LDR X2, [X8 + 0x270]
	0x0347DEAC BLR X9
	0x0347DEB0 MOV X3, X0
	0x0347DEB4 MOV X0, X22
	0x0347DEB8 MOV X1, X21
	0x0347DEBC MOV X2, X20
	0x0347DEC0 MOV X4, X19
	0x0347DEC4 LDP X20, X19, [X31 + 0x20]
	0x0347DEC8 LDP X22, X21, [X31 + 0x10]
	0x0347DECC LDP X30, X23, [X31], #0x30
	0x0347DED0 B 0x347DED8
	0x0347DED4 BL 0x1C16F20
	0x0347DED8 STR X30, [X31 - 0x50]!
	0x0347DEDC STP X26, X25, [X31 + 0x10]
	0x0347DEE0 STP X24, X23, [X31 + 0x20]
	0x0347DEE4 STP X22, X21, [X31 + 0x30]
	0x0347DEE8 STP X20, X19, [X31 + 0x40]
	0x0347DEEC ADRP X23, 0xF60000
	0x0347DEF0 ADRP X26, 0xCB3000
	0x0347DEF4 ADRP X25, 0xCB3000
	0x0347DEF8 LDRB W8, [X23 + 0x8A2]
	0x0347DEFC LDR X26, [X26 + 0xBC8]
	0x0347DF00 LDR X25, [X25 + 0xD90]
	0x0347DF04 MOV X21, X4
	0x0347DF08 MOV X20, X3
	0x0347DF0C MOV X22, X2
	0x0347DF10 MOV X24, X1
	0x0347DF14 MOV X19, X0
	0x0347DF18 TBNZ X8, 0x0, 0x347DF48
	0x0347DF1C ADRP X0, 0xC7F000
	0x0347DF20 LDR X0, [X0 + 0x9E8]
	0x0347DF24 BL 0x1C16CF4
	0x0347DF28 ADRP X0, 0xCB3000
	0x0347DF2C LDR X0, [X0 + 0xD90]
	0x0347DF30 BL 0x1C16CF4
	0x0347DF34 ADRP X0, 0xCB3000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0xF61000
	009 Move X21, 0xCB4000
	010 Move W8, [X22+2199]
	011 Move X21, [X21+3352]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xCB4000
	019 Move X0, [X0+3360]
	020 Call 0x1C17CF4
	021 Move X0, 0xCB4000
	022 Move X0, [X0+3368]
	023 Call 0x1C17CF4
	024 Move X0, 0xCB4000
	025 Move X0, [X0+3376]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB4000
	028 Move X0, [X0+3352]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2199], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+48], X31
	035 Move [X31+16], V0
	036 Move [X31+24], V0
	037 Move [X31], V0
	038 Move X21, 0xCB4000
	039 Move X23, 0xCB4000
	040 Move X22, 0xCB4000
	041 Move W8, [X0+224]
	042 Move X21, [X21+3360]
	043 Move X23, [X23+3368]
	044 Move X22, [X22+3376]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X21]
	049 Add X8, X31, 0
	050 Or X21, X8, 15
	051 Move X8, X21
	052 Call AsyncTaskMethodBuilder`1<Object>.Create
	053 Move X2, [X23]
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W8, TEMP
	057 Add X1, X31, 0
	058 Move X0, X21
	059 Move [X31+32], X20
	060 Move [X31+40], X19
	061 Move [X31], W8
	062 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	063 Move X1, [X22]
	064 Move X0, X21
	065 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Move X23, [X31+72]
	072 Add X31, X31, 112
	073 Return X0

Method: System.Threading.Tasks.Task PromotePartyMemberAsync(System.String partyId, Nakama.IUserPresence partyMember)

Disassembly:
	0x0347DF38 LDR X0, [X0 + 0xBC8]
	0x0347DF3C BL 0x1C16CF4
	0x0347DF40 MOVZ W8, 0x1
	0x0347DF44 STRB W8, [X23 + 0x8A2]
	0x0347DF48 LDR X0, [X26]
	0x0347DF4C BL 0x1C16F10
	0x0347DF50 MOV X1, X31
	0x0347DF54 MOV X23, X0
	0x0347DF58 BL 0x348068C
	0x0347DF5C LDR X0, [X25]
	0x0347DF60 BL 0x1C16F10
	0x0347DF64 MOV X1, X31
	0x0347DF68 MOV X25, X0
	0x0347DF6C BL 0x33BDD8C
	0x0347DF70 CBZ X25, 0x347DFE4
	0x0347DF74 ADRP X8, 0xC7F000
	0x0347DF78 LDR X8, [X8 + 0x9E8]
	0x0347DF7C STR X24, [X25 + 0x10]
	0x0347DF80 LDR X0, [X8]
	0x0347DF84 LDR W8, [X0 + 0xE0]
	0x0347DF88 CBNZ W8, 0x347DF90
	0x0347DF8C BL 0x1C16DFC
	0x0347DF90 MOV X0, X22
	0x0347DF94 MOV X1, X31
	0x0347DF98 BL 0x33222E0
	0x0347DF9C STR X0, [X25 + 0x18]
	0x0347DFA0 MOV X0, X21
	0x0347DFA4 BL 0x347DA0C
	0x0347DFA8 STR X0, [X25 + 0x20]
	0x0347DFAC MOV X0, X20
	0x0347DFB0 MOV X1, X31
	0x0347DFB4 BL 0x33225A0
	0x0347DFB8 STR X0, [X25 + 0x28]
	0x0347DFBC CBZ X23, 0x347DFE4
	0x0347DFC0 STR X25, [X23 + 0xB8]
	0x0347DFC4 MOV X0, X19
	0x0347DFC8 MOV X1, X23
	0x0347DFCC LDP X20, X19, [X31 + 0x40]
	0x0347DFD0 LDP X22, X21, [X31 + 0x30]
	0x0347DFD4 LDP X24, X23, [X31 + 0x20]
	0x0347DFD8 LDP X26, X25, [X31 + 0x10]
	0x0347DFDC LDR X30, [X31], #0x50
	0x0347DFE0 B 0x347BA8C
	0x0347DFE4 BL 0x1C16F20
	0x0347DFE8 STR X30, [X31 - 0x50]!
	0x0347DFEC STP X26, X25, [X31 + 0x10]
	0x0347DFF0 STP X24, X23, [X31 + 0x20]
	0x0347DFF4 STP X22, X21, [X31 + 0x30]
	0x0347DFF8 STP X20, X19, [X31 + 0x40]
	0x0347DFFC ADRP X24, 0xF60000
	0x0347E000 ADRP X26, 0xCB2000
	0x0347E004 ADRP X25, 0xCB2000
	0x0347E008 LDRB W8, [X24 + 0x8A3]
	0x0347E00C LDR X26, [X26 + 0xBC8]
	0x0347E010 B 0x3EB165C
	0x0347E014 MOV X20, X4
	0x0347E018 MOV X21, X3
	0x0347E01C MOV X22, X2
	0x0347E020 MOV X23, X1
	0x0347E024 MOV X19, X0
	0x0347E028 TBNZ X8, 0x0, 0x347E088
	0x0347E02C ADRP X0, 0xCA8000
	0x0347E030 LDR X0, [X0 + 0xCF0]
	0x0347E034 BL 0x1C16CF4
	0x0347E038 ADRP X0, 0xCA8000
	0x0347E03C LDR X0, [X0 + 0xCF8]
	0x0347E040 BL 0x1C16CF4
	0x0347E044 ADRP X0, 0xCA8000
	0x0347E048 LDR X0, [X0 + 0xD00]
	0x0347E04C BL 0x1C16CF4
	0x0347E050 ADRP X0, 0xC9D000
	0x0347E054 LDR X0, [X0 + 0x5B0]
	0x0347E058 BL 0x1C16CF4
	0x0347E05C ADRP X0, 0xC7E000
	0x0347E060 LDR X0, [X0 + 0x9E8]
	0x0347E064 BL 0x1C16CF4
	0x0347E068 ADRP X0, 0xCB2000
	0x0347E06C LDR X0, [X0 + 0xDA0]
	0x0347E070 BL 0x1C16CF4
	0x0347E074 ADRP X0, 0xCB2000
	0x0347E078 LDR X0, [X0 + 0xBC8]
	0x0347E07C BL 0x1C16CF4
	0x0347E080 MOVZ W8, 0x1
	0x0347E084 STRB W8, [X24 + 0x8A3]
	0x0347E088 LDR X0, [X26]
	0x0347E08C BL 0x1C16F10
	0x0347E090 MOV X1, X31
	0x0347E094 MOV X24, X0
	0x0347E098 BL 0x348068C
	0x0347E09C LDR X0, [X25]
	0x0347E0A0 BL 0x1C16F10
	0x0347E0A4 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xF61000
	011 Move X22, 0xCB4000
	012 Move X25, 0xC77000
	013 Move X24, 0xC7B000
	014 Move W8, [X23+2200]
	015 Move X22, [X22+3016]
	016 Move X25, [X25+1880]
	017 Move X24, [X24+272]
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0xC77000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB4000
	029 Move X0, [X0+3384]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB4000
	032 Move X0, [X0+2056]
	033 Call 0x1C17CF4
	034 Move X0, 0xCB4000
	035 Move X0, [X0+3016]
	036 Call 0x1C17CF4
	037 Move X0, 0xC7B000
	038 Move X0, [X0+272]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+2200], W8
	042 Add X0, X19, 16
	043 Move X1, X31
	044 Call Interlocked.Increment, X0
	045 Move X8, [X22]
	046 Move W23, W0
	047 Move X0, X8
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X22, X0
	051 Call WebSocketMessageEnvelope..ctor, X0
	052 Move X0, [X25]
	053 Add X1, X31, 12
	054 Move [X31+12], W23
	055 Call 0x1C17E04
	056 Move X8, [X24]
	057 Move X1, X0
	058 Move X2, X31
	059 Move X0, X8
	060 Call String.Format, X0, X1
	061 Compare X22, 0
	062 JumpIfEqual {104}
	063 Move X8, 0xCB3000
	064 Move X8, [X8+3384]
	065 Move [X22+16], X0
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X23, X0
	070 Call Object..ctor, X0
	071 Compare X23, 0
	072 JumpIfEqual {104}
	073 Move [X23+16], X21
	074 Compare X20, 0
	075 JumpIfEqual {83}
	076 Move X8, 0xCB3000
	077 Move X8, [X8+2056]
	078 Move X9, [X20]
	079 Move X8, [X8]
	080 Move W11, [X9+304]
	081 Move W10, [X8+304]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, X31
	084 Move X9, [X9+200]
	085 Add X9, X9, X10
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Move X0, X19
	090 Move X1, X22
	091 Move [X23+24], X8
	092 Move [X22+296], X23
	093 Call Socket.SendAsync, X0, X1
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X24, [X31+32]
	099 Move X23, [X31+40]
	100 Move X30, [X31+16]
	101 Move X25, [X31+24]
	102 Add X31, X31, 80
	103 Return X0
	104 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IChannelMessageAck> RemoveChatMessageAsync(Nakama.IChannel channel, System.String messageId)

Disassembly:
	0x0347E0A8 MOV X25, X0
	0x0347E0AC BL 0x33BDD8C
	0x0347E0B0 CBZ X25, 0x347E13C
	0x0347E0B4 ADRP X8, 0xC7E000
	0x0347E0B8 LDR X8, [X8 + 0x9E8]
	0x0347E0BC STR X23, [X25 + 0x10]
	0x0347E0C0 ADRP X26, 0xC9D000
	0x0347E0C4 UBFM X23, X20, 0x20, 0x3F
	0x0347E0C8 LDR X0, [X8]
	0x0347E0CC LDR W8, [X0 + 0xE0]
	0x0347E0D0 LDR X26, [X26 + 0x5B0]
	0x0347E0D4 CBNZ W8, 0x347E0DC
	0x0347E0D8 BL 0x1C16DFC
	0x0347E0DC MOV X0, X22
	0x0347E0E0 MOV X1, X31
	0x0347E0E4 BL 0x33222E0
	0x0347E0E8 STR X0, [X25 + 0x18]
	0x0347E0EC LDR X0, [X26]
	0x0347E0F0 LDR W8, [X0 + 0xE0]
	0x0347E0F4 CBNZ W8, 0x347E0FC
	0x0347E0F8 BL 0x1C16DFC
	0x0347E0FC MOV X0, X21
	0x0347E100 MOV W1, W20
	0x0347E104 MOV W2, W23
	0x0347E108 MOV X3, X31
	0x0347E10C BL 0x3322804
	0x0347E110 STR X0, [X25 + 0x20]
	0x0347E114 CBZ X24, 0x347E13C
	0x0347E118 STR X25, [X24 + 0x180]
	0x0347E11C MOV X0, X19
	0x0347E120 MOV X1, X24
	0x0347E124 LDP X20, X19, [X31 + 0x40]
	0x0347E128 LDP X22, X21, [X31 + 0x30]
	0x0347E12C LDP X24, X23, [X31 + 0x20]
	0x0347E130 LDP X26, X25, [X31 + 0x10]
	0x0347E134 LDR X30, [X31], #0x50
	0x0347E138 B 0x347BA8C
	0x0347E13C BL 0x1C16F20
	0x0347E140 STR X30, [X31 - 0x30]!
	0x0347E144 STP X22, X21, [X31 + 0x10]
	0x0347E148 STP X20, X19, [X31 + 0x20]
	0x0347E14C MOV X21, X0
	0x0347E150 MOV X0, X31
	0x0347E154 MOV X22, X3
	0x0347E158 MOV X19, X2
	0x0347E15C MOV X20, X1
	0x0347E160 BL 0x3241948

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF60000
	007 Move W8, [X22+2201]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xCB2000
	016 Move X0, [X0+1904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2201], W8
	020 Compare X21, 0
	021 JumpIfEqual {53}
	022 Move X10, 0xCB2000
	023 Move X8, [X21]
	024 Move X10, [X10+1904]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move X0, X21
	036 Move W2, W31
	037 Call 0x1C5D788
	038 NotImplemented "Instruction LDRSW not yet implemented."
	039 Add X8, X8, X9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X21
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X1, X0
	046 Move X0, X20
	047 Move X2, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IChannelMessageAck> RemoveChatMessageAsync(System.String channelId, System.String messageId)

Disassembly:
	0x0347E164 CBZ X0, 0x347E19C
	0x0347E168 LDR X8, [X0]
	0x0347E16C MOV X1, X22
	0x0347E170 LDR X9, [X8 + 0x268]
	0x0347E174 LDR X2, [X8 + 0x270]
	0x0347E178 BLR X9
	0x0347E17C MOV X3, X0
	0x0347E180 MOV X0, X21
	0x0347E184 MOV X1, X20
	0x0347E188 MOV X2, X19
	0x0347E18C LDP X20, X19, [X31 + 0x20]
	0x0347E190 LDP X22, X21, [X31 + 0x10]
	0x0347E194 LDR X30, [X31], #0x30
	0x0347E198 B 0x347E1A0
	0x0347E19C BL 0x1C16F20
	0x0347E1A0 STP X30, X25, [X31 - 0x40]!
	0x0347E1A4 STP X24, X23, [X31 + 0x10]
	0x0347E1A8 STP X22, X21, [X31 + 0x20]
	0x0347E1AC STP X20, X19, [X31 + 0x30]
	0x0347E1B0 ADRP X22, 0xF5F000
	0x0347E1B4 ADRP X25, 0xCB2000
	0x0347E1B8 ADRP X24, 0xCB2000
	0x0347E1BC LDRB W8, [X22 + 0x8A4]
	0x0347E1C0 LDR X25, [X25 + 0xBC8]
	0x0347E1C4 LDR X24, [X24 + 0xDA0]
	0x0347E1C8 MOV X20, X3
	0x0347E1CC MOV X21, X2
	0x0347E1D0 MOV X23, X1
	0x0347E1D4 MOV X19, X0
	0x0347E1D8 TBNZ X8, 0x0, 0x347E208
	0x0347E1DC ADRP X0, 0xC7E000
	0x0347E1E0 LDR X0, [X0 + 0x9E8]
	0x0347E1E4 BL 0x1C16CF4
	0x0347E1E8 ADRP X0, 0xCB2000
	0x0347E1EC LDR X0, [X0 + 0xDA0]
	0x0347E1F0 BL 0x1C16CF4
	0x0347E1F4 ADRP X0, 0xCB2000
	0x0347E1F8 LDR X0, [X0 + 0xBC8]
	0x0347E1FC BL 0x1C16CF4
	0x0347E200 MOVZ W8, 0x1
	0x0347E204 STRB W8, [X22 + 0x8A4]
	0x0347E208 LDR X0, [X25]
	0x0347E20C BL 0x1C16F10
	0x0347E210 MOV X1, X31
	0x0347E214 MOV X22, X0
	0x0347E218 BL 0x348068C
	0x0347E21C LDR X0, [X24]
	0x0347E220 BL 0x1C16F10
	0x0347E224 MOV X1, X31
	0x0347E228 MOV X24, X0
	0x0347E22C BL 0x33BDD8C
	0x0347E230 CBZ X24, 0x347E294
	0x0347E234 ADRP X8, 0xC7E000
	0x0347E238 LDR X8, [X8 + 0x9E8]
	0x0347E23C STR X23, [X24 + 0x10]
	0x0347E240 LDR X0, [X8]
	0x0347E244 LDR W8, [X0 + 0xE0]
	0x0347E248 CBNZ W8, 0x347E250
	0x0347E24C BL 0x1C16DFC
	0x0347E250 MOV X0, X21
	0x0347E254 MOV X1, X31
	0x0347E258 BL 0x33222E0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF60000
	010 Move X22, 0xCB3000
	011 Move W8, [X23+2202]
	012 Move X22, [X22+3392]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xCB3000
	021 Move X0, [X0+3400]
	022 Call 0x1C17CF4
	023 Move X0, 0xCB3000
	024 Move X0, [X0+3408]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB3000
	027 Move X0, [X0+3416]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB3000
	030 Move X0, [X0+3392]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2202], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xCB3000
	041 Move X24, 0xCB3000
	042 Move X23, 0xCB3000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3400]
	045 Move X24, [X24+3408]
	046 Move X23, [X23+3416]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+32], X21
	062 Move [X31+40], X20
	063 Move [X31+48], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task RemoveMatchmakerAsync(Nakama.IMatchmakerTicket ticket)

Disassembly:
	0x0347E25C STR X0, [X24 + 0x18]
	0x0347E260 MOV X0, X20
	0x0347E264 MOV X1, X31
	0x0347E268 BL 0x33225A0
	0x0347E26C STR X0, [X24 + 0x20]
	0x0347E270 CBZ X22, 0x347E294
	0x0347E274 STR X24, [X22 + 0x180]
	0x0347E278 MOV X0, X19
	0x0347E27C MOV X1, X22
	0x0347E280 LDP X20, X19, [X31 + 0x30]
	0x0347E284 LDP X22, X21, [X31 + 0x20]
	0x0347E288 LDP X24, X23, [X31 + 0x10]
	0x0347E28C LDP X30, X25, [X31], #0x40
	0x0347E290 B 0x347BA8C
	0x0347E294 BL 0x1C16F20
	0x0347E298 SUB X31, X31, 0x40
	0x0347E29C STR X30, [X31 + 0x10]
	0x0347E2A0 STP X22, X21, [X31 + 0x20]
	0x0347E2A4 STP X20, X19, [X31 + 0x30]
	0x0347E2A8 ADRP X19, 0xF5F000
	0x0347E2AC ADRP X21, 0xC75000
	0x0347E2B0 LDRB W8, [X19 + 0x8A5]
	0x0347E2B4 LDR X21, [X21 + 0x9D0]
	0x0347E2B8 MOV X20, X0
	0x0347E2BC TBNZ X8, 0x0, 0x347E2F8
	0x0347E2C0 ADRP X0, 0xC75000
	0x0347E2C4 LDR X0, [X0 + 0xB58]
	0x0347E2C8 BL 0x1C16CF4
	0x0347E2CC ADRP X0, 0xC75000
	0x0347E2D0 LDR X0, [X0 + 0x758]
	0x0347E2D4 BL 0x1C16CF4
	0x0347E2D8 ADRP X0, 0xC75000
	0x0347E2DC LDR X0, [X0 + 0x9D0]
	0x0347E2E0 BL 0x1C16CF4
	0x0347E2E4 ADRP X0, 0xCB2000
	0x0347E2E8 LDR X0, [X0 + 0xDA8]
	0x0347E2EC BL 0x1C16CF4
	0x0347E2F0 MOVZ W8, 0x1
	0x0347E2F4 STRB W8, [X19 + 0x8A5]
	0x0347E2F8 LDR X0, [X21]
	0x0347E2FC MOVZ W1, 0x4
	0x0347E300 BL 0x1C16D6C
	0x0347E304 CBZ X0, 0x347E458

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xF60000
	006 Move W8, [X21+2203]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xCB3000
	014 Move X0, [X0+3424]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2203], W8
	018 Compare X20, 0
	019 JumpIfEqual {49}
	020 Move X10, 0xCB3000
	021 Move X8, [X20]
	022 Move X10, [X10+3424]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X1, X0
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call 0x1C17F20

Method: System.Threading.Tasks.Task RemoveMatchmakerAsync(System.String ticket)

Disassembly:
	0x0347E308 LDR X21, [X20 + 0xC0]
	0x0347E30C MOV X19, X0
	0x0347E310 CBZ X21, 0x347E328
	0x0347E314 LDR X8, [X19]
	0x0347E318 MOV X0, X21
	0x0347E31C LDR X1, [X8 + 0x40]
	0x0347E320 BL 0x1C16E00
	0x0347E324 CBZ X0, 0x347E44C
	0x0347E328 LDR W8, [X19 + 0x18]
	0x0347E32C CBZ W8, 0x347E448
	0x0347E330 ADRP X8, 0xC75000
	0x0347E334 LDR X8, [X8 + 0x758]
	0x0347E338 STR X21, [X19 + 0x20]
	0x0347E33C LDR W9, [X20 + 0x10]
	0x0347E340 ADD X1, X31, 0x1C
	0x0347E344 LDR X0, [X8]
	0x0347E348 STR W9, [X31 + 0x1C]
	0x0347E34C BL 0x1C16E04
	0x0347E350 MOV X21, X0
	0x0347E354 CBZ X0, 0x347E36C
	0x0347E358 LDR X8, [X19]
	0x0347E35C MOV X0, X21
	0x0347E360 LDR X1, [X8 + 0x40]
	0x0347E364 BL 0x1C16E00
	0x0347E368 CBZ X0, 0x347E44C
	0x0347E36C LDR W8, [X19 + 0x18]
	0x0347E370 CMP W8, 0x1
	0x0347E374 B.LS 0x347E448
	0x0347E378 ADRP X22, 0xC75000
	0x0347E37C LDR X22, [X22 + 0xB58]
	0x0347E380 MOV X0, X20
	0x0347E384 STR X21, [X19 + 0x28]
	0x0347E388 BL 0x347B27C
	0x0347E38C LDR X8, [X22]
	0x0347E390 AND W9, W0, 0x1
	0x0347E394 ADD X1, X31, 0x18
	0x0347E398 STRB W9, [X31 + 0x18]
	0x0347E39C MOV X0, X8
	0x0347E3A0 BL 0x1C16E04
	0x0347E3A4 MOV X21, X0
	0x0347E3A8 CBZ X0, 0x347E3C0
	0x0347E3AC LDR X8, [X19]
	0x0347E3B0 MOV X0, X21
	0x0347E3B4 LDR X1, [X8 + 0x40]
	0x0347E3B8 BL 0x1C16E00
	0x0347E3BC CBZ X0, 0x347E44C
	0x0347E3C0 LDR W8, [X19 + 0x18]
	0x0347E3C4 CMP W8, 0x2
	0x0347E3C8 B.LS 0x347E448
	0x0347E3CC MOV X0, X20
	0x0347E3D0 STR X21, [X19 + 0x30]
	0x0347E3D4 BL 0x347B320
	0x0347E3D8 LDR X8, [X22]
	0x0347E3DC AND W9, W0, 0x1
	0x0347E3E0 ADD X1, X31, 0xC
	0x0347E3E4 STRB W9, [X31 + 0xC]
	0x0347E3E8 MOV X0, X8
	0x0347E3EC BL 0x1C16E04
	0x0347E3F0 MOV X20, X0
	0x0347E3F4 CBZ X0, 0x347E40C
	0x0347E3F8 LDR X8, [X19]
	0x0347E3FC MOV X0, X20
	0x0347E400 LDR X1, [X8 + 0x40]
	0x0347E404 BL 0x1C16E00
	0x0347E408 CBZ X0, 0x347E44C
	0x0347E40C LDR W8, [X19 + 0x18]
	0x0347E410 CMP W8, 0x3
	0x0347E414 B.LS 0x347E448
	0x0347E418 ADRP X8, 0xCB2000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xF60000
	009 Move X21, 0xCB3000
	010 Move X24, 0xC76000
	011 Move X23, 0xC7A000
	012 Move W8, [X22+2204]
	013 Move X21, [X21+3016]
	014 Move X24, [X24+1880]
	015 Move X23, [X23+272]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xC76000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0xCB3000
	026 Move X0, [X0+3432]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB3000
	029 Move X0, [X0+3016]
	030 Call 0x1C17CF4
	031 Move X0, 0xC7A000
	032 Move X0, [X0+272]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2204], W8
	036 Add X0, X19, 16
	037 Move X1, X31
	038 Call Interlocked.Increment, X0
	039 Move X8, [X21]
	040 Move W22, W0
	041 Move X0, X8
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call WebSocketMessageEnvelope..ctor, X0
	046 Move X0, [X24]
	047 Add X1, X31, 12
	048 Move [X31+12], W22
	049 Call 0x1C17E04
	050 Move X8, [X23]
	051 Move X1, X0
	052 Move X2, X31
	053 Move X0, X8
	054 Call String.Format, X0, X1
	055 Compare X21, 0
	056 JumpIfEqual {80}
	057 Move X8, 0xCB3000
	058 Move X8, [X8+3432]
	059 Move [X21+16], X0
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X22, X0
	064 Call Object..ctor, X0
	065 Compare X22, 0
	066 JumpIfEqual {80}
	067 Move X0, X19
	068 Move X1, X21
	069 Move [X22+16], X20
	070 Move [X21+120], X22
	071 Call Socket.SendAsync, X0, X1
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return X0
	080 Call 0x1C17F20

Method: System.Threading.Tasks.Task RemoveMatchmakerPartyAsync(System.String partyId, System.String ticket)

Disassembly:
	0x0347E41C LDR X8, [X8 + 0xDA8]
	0x0347E420 STR X20, [X19 + 0x38]
	0x0347E424 MOV X1, X19
	0x0347E428 MOV X2, X31
	0x0347E42C LDR X0, [X8]
	0x0347E430 BL 0x3227C5C
	0x0347E434 LDP X20, X19, [X31 + 0x30]
	0x0347E438 LDP X22, X21, [X31 + 0x20]
	0x0347E43C LDR X30, [X31 + 0x10]
	0x0347E440 ADD X31, X31, 0x40
	0x0347E444 RET
	0x0347E448 BL 0x1C16F28
	0x0347E44C BL 0x1C16F44
	0x0347E450 MOV X1, X31
	0x0347E454 BL 0x1C16DEC
	0x0347E458 BL 0x1C16F20
	0x0347E45C STR X30, [X31 - 0x40]!
	0x0347E460 STP X24, X23, [X31 + 0x10]
	0x0347E464 STP X22, X21, [X31 + 0x20]
	0x0347E468 STP X20, X19, [X31 + 0x30]
	0x0347E46C ADRP X21, 0xF5F000
	0x0347E470 ADRP X23, 0xCB2000
	0x0347E474 LDRB W8, [X21 + 0x8A6]
	0x0347E478 LDR X23, [X23 + 0xC90]
	0x0347E47C MOV X20, X1
	0x0347E480 MOV X19, X0
	0x0347E484 TBNZ X8, 0x0, 0x347E4C0
	0x0347E488 ADRP X0, 0xC76000
	0x0347E48C LDR X0, [X0 + 0xD80]
	0x0347E490 BL 0x1C16CF4
	0x0347E494 ADRP X0, 0xC76000
	0x0347E498 LDR X0, [X0 + 0xDA8]
	0x0347E49C BL 0x1C16CF4
	0x0347E4A0 ADRP X0, 0xCB2000
	0x0347E4A4 LDR X0, [X0 + 0xDB0]
	0x0347E4A8 BL 0x1C16CF4
	0x0347E4AC ADRP X0, 0xCB2000
	0x0347E4B0 LDR X0, [X0 + 0xC90]
	0x0347E4B4 BL 0x1C16CF4
	0x0347E4B8 MOVZ W8, 0x1
	0x0347E4BC STRB W8, [X21 + 0x8A6]
	0x0347E4C0 LDR X0, [X23]
	0x0347E4C4 LDR W8, [X0 + 0xE0]
	0x0347E4C8 CBNZ W8, 0x347E4D4
	0x0347E4CC BL 0x1C16DFC
	0x0347E4D0 LDR X0, [X23]
	0x0347E4D4 LDR X8, [X0 + 0xB8]
	0x0347E4D8 ADRP X24, 0xC76000
	0x0347E4DC LDR X21, [X8 + 0x10]
	0x0347E4E0 LDR X24, [X24 + 0xD80]
	0x0347E4E4 CBNZ X21, 0x347E538
	0x0347E4E8 LDR W8, [X0 + 0xE0]
	0x0347E4EC CBNZ W8, 0x347E4F8
	0x0347E4F0 BL 0x1C16DFC
	0x0347E4F4 LDR X0, [X23]
	0x0347E4F8 ADRP X9, 0xC76000
	0x0347E4FC LDR X8, [X0 + 0xB8]
	0x0347E500 LDR X9, [X9 + 0xDA8]
	0x0347E504 LDR X22, [X8]
	0x0347E508 LDR X0, [X9]
	0x0347E50C BL 0x1C16F10
	0x0347E510 ADRP X8, 0xCB2000
	0x0347E514 LDR X8, [X8 + 0xDB0]
	0x0347E518 MOV X1, X22
	0x0347E51C MOV X3, X31
	0x0347E520 MOV X21, X0
	0x0347E524 LDR X2, [X8]
	0x0347E528 BL 0x2D30578
	0x0347E52C LDR X8, [X23]
	0x0347E530 LDR X8, [X8 + 0xB8]
	0x0347E534 STR X21, [X8 + 0x10]
	0x0347E538 LDR X2, [X24]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xF60000
	011 Move X22, 0xCB3000
	012 Move X25, 0xC76000
	013 Move X24, 0xC7A000
	014 Move W8, [X23+2205]
	015 Move X22, [X22+3016]
	016 Move X25, [X25+1880]
	017 Move X24, [X24+272]
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0xC76000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB3000
	029 Move X0, [X0+3440]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB3000
	032 Move X0, [X0+3016]
	033 Call 0x1C17CF4
	034 Move X0, 0xC7A000
	035 Move X0, [X0+272]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+2205], W8
	039 Add X0, X19, 16
	040 Move X1, X31
	041 Call Interlocked.Increment, X0
	042 Move X8, [X22]
	043 Move W23, W0
	044 Move X0, X8
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X22, X0
	048 Call WebSocketMessageEnvelope..ctor, X0
	049 Move X0, [X25]
	050 Add X1, X31, 12
	051 Move [X31+12], W23
	052 Call 0x1C17E04
	053 Move X8, [X24]
	054 Move X1, X0
	055 Move X2, X31
	056 Move X0, X8
	057 Call String.Format, X0, X1
	058 Compare X22, 0
	059 JumpIfEqual {86}
	060 Move X8, 0xCB3000
	061 Move X8, [X8+3440]
	062 Move [X22+16], X0
	063 Move X0, [X8]
	064 Call 0x1C17F10
	065 Move X1, X31
	066 Move X23, X0
	067 Call Object..ctor, X0
	068 Compare X23, 0
	069 JumpIfEqual {86}
	070 Move X0, X19
	071 Move X1, X22
	072 Move [X23+16], X21
	073 Move [X23+24], X20
	074 Move [X22+360], X23
	075 Call Socket.SendAsync, X0, X1
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X22, [X31+48]
	079 Move X21, [X31+56]
	080 Move X24, [X31+32]
	081 Move X23, [X31+40]
	082 Move X30, [X31+16]
	083 Move X25, [X31+24]
	084 Add X31, X31, 80
	085 Return X0
	086 Call 0x1C17F20

Method: System.Threading.Tasks.Task RemovePartyMemberAsync(System.String partyId, Nakama.IUserPresence presence)

Disassembly:
	0x0347E53C MOV X0, X20
	0x0347E540 MOV X1, X21
	0x0347E544 BL 0x21CF224
	0x0347E548 CBZ X19, 0x347E568
	0x0347E54C MOV X1, X0
	0x0347E550 MOV X0, X19
	0x0347E554 LDP X20, X19, [X31 + 0x30]
	0x0347E558 LDP X22, X21, [X31 + 0x20]
	0x0347E55C LDP X24, X23, [X31 + 0x10]
	0x0347E560 LDR X30, [X31], #0x40
	0x0347E564 B 0x347E56C
	0x0347E568 BL 0x1C16F20
	0x0347E56C STR X30, [X31 - 0x40]!
	0x0347E570 STP X24, X23, [X31 + 0x10]
	0x0347E574 STP X22, X21, [X31 + 0x20]
	0x0347E578 STP X20, X19, [X31 + 0x30]
	0x0347E57C ADRP X22, 0xF5F000
	0x0347E580 ADRP X21, 0xCB2000
	0x0347E584 ADRP X24, 0xC75000
	0x0347E588 ADRP X23, 0xC79000
	0x0347E58C LDRB W8, [X22 + 0x8A7]
	0x0347E590 LDR X21, [X21 + 0xBC8]
	0x0347E594 LDR X24, [X24 + 0x758]
	0x0347E598 LDR X23, [X23 + 0x110]
	0x0347E59C MOV X20, X1
	0x0347E5A0 MOV X19, X0
	0x0347E5A4 TBNZ X8, 0x0, 0x347E5F8
	0x0347E5A8 ADRP X0, 0xC75000
	0x0347E5AC LDR X0, [X0 + 0x758]
	0x0347E5B0 BL 0x1C16CF4
	0x0347E5B4 ADRP X0, 0xC7D000
	0x0347E5B8 LDR X0, [X0 + 0xDD8]
	0x0347E5BC BL 0x1C16CF4
	0x0347E5C0 ADRP X0, 0xC76000
	0x0347E5C4 LDR X0, [X0 + 0x1D0]
	0x0347E5C8 BL 0x1C16CF4
	0x0347E5CC ADRP X0, 0xCB2000
	0x0347E5D0 LDR X0, [X0 + 0xDB8]
	0x0347E5D4 BL 0x1C16CF4
	0x0347E5D8 ADRP X0, 0xCB2000
	0x0347E5DC LDR X0, [X0 + 0xBC8]
	0x0347E5E0 BL 0x1C16CF4
	0x0347E5E4 ADRP X0, 0xC79000
	0x0347E5E8 LDR X0, [X0 + 0x110]
	0x0347E5EC BL 0x1C16CF4
	0x0347E5F0 MOVZ W8, 0x1
	0x0347E5F4 STRB W8, [X22 + 0x8A7]
	0x0347E5F8 ADD X0, X19, 0x10
	0x0347E5FC MOV X1, X31
	0x0347E600 BL 0x33EB14C
	0x0347E604 LDR X8, [X21]
	0x0347E608 MOV W22, W0
	0x0347E60C MOV X0, X8
	0x0347E610 BL 0x1C16F10
	0x0347E614 MOV X1, X31
	0x0347E618 MOV X21, X0
	0x0347E61C BL 0x348068C
	0x0347E620 LDR X0, [X24]
	0x0347E624 ADD X1, X31, 0xC
	0x0347E628 STR W22, [X31 + 0xC]
	0x0347E62C BL 0x1C16E04
	0x0347E630 LDR X8, [X23]
	0x0347E634 MOV X1, X0
	0x0347E638 MOV X2, X31
	0x0347E63C MOV X0, X8
	0x0347E640 BL 0x321EFD0
	0x0347E644 CBZ X21, 0x347E6BC
	0x0347E648 ADRP X8, 0xCB2000
	0x0347E64C LDR X8, [X8 + 0xDB8]
	0x0347E650 STR X0, [X21 + 0x10]
	0x0347E654 ADRP X23, 0xC76000
	0x0347E658 ADRP X24, 0xC7D000
	0x0347E65C LDR X0, [X8]
	0x0347E660 LDR X23, [X23 + 0x1D0]
	0x0347E664 LDR X24, [X24 + 0xDD8]
	0x0347E668 BL 0x1C16F10
	0x0347E66C MOV X1, X31
	0x0347E670 MOV X22, X0
	0x0347E674 BL 0x348461C
	0x0347E678 LDR X0, [X23]
	0x0347E67C BL 0x1C16F10
	0x0347E680 LDR X2, [X24]
	0x0347E684 MOV X1, X20
	0x0347E688 MOV X23, X0
	0x0347E68C BL 0x301B8E0
	0x0347E690 CBZ X22, 0x347E6BC
	0x0347E694 MOV X0, X19
	0x0347E698 MOV X1, X21
	0x0347E69C STR X23, [X22 + 0x10]
	0x0347E6A0 STR X22, [X21 + 0xE8]
	0x0347E6A4 BL 0x347BA8C
	0x0347E6A8 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xF60000
	011 Move X22, 0xCB3000
	012 Move X25, 0xC76000
	013 Move X24, 0xC7A000
	014 Move W8, [X23+2206]
	015 Move X22, [X22+3016]
	016 Move X25, [X25+1880]
	017 Move X24, [X24+272]
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0xC76000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB3000
	029 Move X0, [X0+3448]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB3000
	032 Move X0, [X0+2056]
	033 Call 0x1C17CF4
	034 Move X0, 0xCB3000
	035 Move X0, [X0+3016]
	036 Call 0x1C17CF4
	037 Move X0, 0xC7A000
	038 Move X0, [X0+272]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+2206], W8
	042 Add X0, X19, 16
	043 Move X1, X31
	044 Call Interlocked.Increment, X0
	045 Move X8, [X22]
	046 Move W23, W0
	047 Move X0, X8
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X22, X0
	051 Call WebSocketMessageEnvelope..ctor, X0
	052 Move X0, [X25]
	053 Add X1, X31, 12
	054 Move [X31+12], W23
	055 Call 0x1C17E04
	056 Move X8, [X24]
	057 Move X1, X0
	058 Move X2, X31
	059 Move X0, X8
	060 Call String.Format, X0, X1
	061 Compare X22, 0
	062 JumpIfEqual {104}
	063 Move X8, 0xCB3000
	064 Move X8, [X8+3448]
	065 Move [X22+16], X0
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X23, X0
	070 Call Object..ctor, X0
	071 Compare X23, 0
	072 JumpIfEqual {104}
	073 Move [X23+16], X21
	074 Compare X20, 0
	075 JumpIfEqual {83}
	076 Move X8, 0xCB3000
	077 Move X8, [X8+2056]
	078 Move X9, [X20]
	079 Move X8, [X8]
	080 Move W11, [X9+304]
	081 Move W10, [X8+304]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, X31
	084 Move X9, [X9+200]
	085 Add X9, X9, X10
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSEL not yet implemented."
	089 Move X0, X19
	090 Move X1, X22
	091 Move [X23+24], X8
	092 Move [X22+320], X23
	093 Call Socket.SendAsync, X0, X1
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X24, [X31+32]
	099 Move X23, [X31+40]
	100 Move X30, [X31+16]
	101 Move X25, [X31+24]
	102 Add X31, X31, 80
	103 Return X0
	104 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcAsync(System.String funcId, System.String payload = null)

Disassembly:
	0x0347E6AC LDP X22, X21, [X31 + 0x20]
	0x0347E6B0 LDP X24, X23, [X31 + 0x10]
	0x0347E6B4 LDR X30, [X31], #0x40
	0x0347E6B8 RET
	0x0347E6BC BL 0x1C16F20
	0x0347E6C0 STP X30, X23, [X31 - 0x30]!
	0x0347E6C4 STP X22, X21, [X31 + 0x10]
	0x0347E6C8 STP X20, X19, [X31 + 0x20]
	0x0347E6CC ADRP X23, 0xF5F000
	0x0347E6D0 LDRB W8, [X23 + 0x8A8]
	0x0347E6D4 MOV X19, X3
	0x0347E6D8 MOV X20, X2
	0x0347E6DC MOV X22, X1
	0x0347E6E0 MOV X21, X0
	0x0347E6E4 TBNZ X8, 0x0, 0x347E6FC
	0x0347E6E8 ADRP X0, 0xCB1000
	0x0347E6EC LDR X0, [X0 + 0x770]
	0x0347E6F0 BL 0x1C16CF4
	0x0347E6F4 MOVZ W8, 0x1
	0x0347E6F8 STRB W8, [X23 + 0x8A8]
	0x0347E6FC CBZ X22, 0x347E780
	0x0347E700 ADRP X10, 0xCB1000
	0x0347E704 LDR X8, [X22]
	0x0347E708 LDR X10, [X10 + 0x770]
	0x0347E70C LDRH W9, [X8 + 0x12E]
	0x0347E710 LDR X1, [X10]
	0x0347E714 CBZ X9, 0x347E738
	0x0347E718 LDR X10, [X8 + 0xB0]
	0x0347E71C ADD X10, X10, 0x8
	0x0347E720 LDUR X11, [X10 - 0x8]
	0x0347E724 CMP X11, X1
	0x0347E728 B.EQ 0x347E748
	0x0347E72C SUBS X9, X9, 0x1
	0x0347E730 ADD X10, X10, 0x10
	0x0347E734 B.NE 0x347E720
	0x0347E738 MOV X0, X22
	0x0347E73C MOV W2, W31
	0x0347E740 BL 0x1C5C788
	0x0347E744 B 0x347E754
	0x0347E748 LDRSW X9, [X10]
	0x0347E74C ADD X8, X8, X9, 0x4, LSL
	0x0347E750 ADD X0, X8, 0x138
	0x0347E754 LDP X8, X1, [X0]
	0x0347E758 MOV X0, X22
	0x0347E75C BLR X8
	0x0347E760 MOV X1, X0
	0x0347E764 MOV X0, X21
	0x0347E768 MOV X2, X20
	0x0347E76C MOV X3, X19
	0x0347E770 LDP X20, X19, [X31 + 0x20]
	0x0347E774 LDP X22, X21, [X31 + 0x10]
	0x0347E778 LDP X30, X23, [X31], #0x30
	0x0347E77C B 0x347E784
	0x0347E780 BL 0x1C16F20
	0x0347E784 SUB X31, X31, 0x90
	0x0347E788 STP X30, X25, [X31 + 0x50]
	0x0347E78C STP X24, X23, [X31 + 0x60]
	0x0347E790 STP X22, X21, [X31 + 0x70]
	0x0347E794 STP X20, X19, [X31 + 0x80]
	0x0347E798 ADRP X24, 0xF5F000
	0x0347E79C ADRP X23, 0xCB2000
	0x0347E7A0 LDRB W8, [X24 + 0x8A9]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF60000
	010 Move X22, 0xCB1000
	011 Move W8, [X23+2207]
	012 Move X22, [X22+1640]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xCB1000
	021 Move X0, [X0+1648]
	022 Call 0x1C17CF4
	023 Move X0, 0xCB3000
	024 Move X0, [X0+3456]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB1000
	027 Move X0, [X0+1664]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB1000
	030 Move X0, [X0+1640]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2207], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xCB1000
	041 Move X24, 0xCB3000
	042 Move X23, 0xCB1000
	043 Move W8, [X0+224]
	044 Move X22, [X22+1648]
	045 Move X24, [X24+3456]
	046 Move X23, [X23+1664]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+32], X21
	062 Move [X31+40], X20
	063 Move [X31+48], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: System.Threading.Tasks.Task`1<Nakama.IApiRpc> RpcAsync(System.String funcId, System.ArraySegment`1<System.Byte> payload)

Disassembly:
	0x0347E7A4 LDR X23, [X23 + 0xD40]
	0x0347E7A8 MOV X19, X3
	0x0347E7AC MOV X20, X2
	0x0347E7B0 MOV X21, X1
	0x0347E7B4 MOV X22, X0
	0x0347E7B8 TBNZ X8, 0x0, 0x347E7F4
	0x0347E7BC ADRP X0, 0xCB2000
	0x0347E7C0 LDR X0, [X0 + 0xD48]
	0x0347E7C4 BL 0x1C16CF4
	0x0347E7C8 ADRP X0, 0xCB2000
	0x0347E7CC LDR X0, [X0 + 0xDC0]
	0x0347E7D0 BL 0x1C16CF4
	0x0347E7D4 ADRP X0, 0xCB2000
	0x0347E7D8 LDR X0, [X0 + 0xD58]
	0x0347E7DC BL 0x1C16CF4
	0x0347E7E0 ADRP X0, 0xCB2000
	0x0347E7E4 LDR X0, [X0 + 0xD40]
	0x0347E7E8 BL 0x1C16CF4
	0x0347E7EC MOVZ W8, 0x1
	0x0347E7F0 STRB W8, [X24 + 0x8A9]
	0x0347E7F4 LDR X0, [X23]
	0x0347E7F8 MOVI V0.2D, 0x0
	0x0347E7FC STR X31, [X31 + 0x40]
	0x0347E800 STP V0, V0, [X31 + 0x20]
	0x0347E804 STP V0, V0, [X31]
	0x0347E808 ADRP X23, 0xCB2000
	0x0347E80C ADRP X25, 0xCB2000
	0x0347E810 ADRP X24, 0xCB2000
	0x0347E814 LDR W8, [X0 + 0xE0]
	0x0347E818 LDR X23, [X23 + 0xD48]
	0x0347E81C LDR X25, [X25 + 0xDC0]
	0x0347E820 LDR X24, [X24 + 0xD58]
	0x0347E824 CBNZ W8, 0x347E82C
	0x0347E828 BL 0x1C16DFC
	0x0347E82C LDR X0, [X23]
	0x0347E830 ADD X8, X31, 0x0
	0x0347E834 ORR X23, X8, 0xF
	0x0347E838 MOV X8, X23
	0x0347E83C BL 0x263221C
	0x0347E840 LDR X2, [X25]
	0x0347E844 MOVN W8, 0x0
	0x0347E848 ADD X1, X31, 0x0
	0x0347E84C MOV X0, X23
	0x0347E850 STP X22, X21, [X31 + 0x20]
	0x0347E854 STP X20, X19, [X31 + 0x30]
	0x0347E858 STR W8, [X31]
	0x0347E85C BL 0x1FD1414
	0x0347E860 LDR X1, [X24]
	0x0347E864 MOV X0, X23
	0x0347E868 BL 0x2632230
	0x0347E86C LDP X20, X19, [X31 + 0x80]
	0x0347E870 LDP X22, X21, [X31 + 0x70]
	0x0347E874 LDP X24, X23, [X31 + 0x60]
	0x0347E878 LDP X30, X25, [X31 + 0x50]
	0x0347E87C ADD X31, X31, 0x90
	0x0347E880 RET
	0x0347E884 STR X30, [X31 - 0x40]!
	0x0347E888 STP X24, X23, [X31 + 0x10]
	0x0347E88C STP X22, X21, [X31 + 0x20]
	0x0347E890 STP X20, X19, [X31 + 0x30]
	0x0347E894 ADRP X22, 0xF5F000
	0x0347E898 ADRP X21, 0xCB2000
	0x0347E89C ADRP X24, 0xC75000
	0x0347E8A0 ADRP X23, 0xC79000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X24, 0xF60000
	011 Move X23, 0xCB1000
	012 Move W8, [X24+2208]
	013 Move X23, [X23+1640]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xCB1000
	023 Move X0, [X0+1648]
	024 Call 0x1C17CF4
	025 Move X0, 0xCB3000
	026 Move X0, [X0+3464]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB1000
	029 Move X0, [X0+1664]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB1000
	032 Move X0, [X0+1640]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+2208], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+64], X31
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move X23, 0xCB1000
	044 Move X25, 0xCB3000
	045 Move X24, 0xCB1000
	046 Move W8, [X0+224]
	047 Move X23, [X23+1648]
	048 Move X25, [X25+3464]
	049 Move X24, [X24+1664]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Add X8, X31, 0
	055 Or X23, X8, 15
	056 Move X8, X23
	057 Call AsyncTaskMethodBuilder`1<Object>.Create
	058 Move X2, [X25]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Add X1, X31, 0
	063 Move X0, X23
	064 Move [X31+32], X22
	065 Move [X31+40], X21
	066 Move [X31+48], X20
	067 Move [X31+56], X19
	068 Move [X31], W8
	069 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	070 Move X1, [X24]
	071 Move X0, X23
	072 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	073 Move X20, [X31+128]
	074 Move X19, [X31+136]
	075 Move X22, [X31+112]
	076 Move X21, [X31+120]
	077 Move X24, [X31+96]
	078 Move X23, [X31+104]
	079 Move X30, [X31+80]
	080 Move X25, [X31+88]
	081 Add X31, X31, 144
	082 Return X0

Method: System.Threading.Tasks.Task SendMatchStateAsync(System.String matchId, System.Int64 opCode, System.ArraySegment`1<System.Byte> state, System.Collections.Generic.IEnumerable`1<Nakama.IUserPresence> presences = null)

Disassembly:
	0x0347E8A4 LDRB W8, [X22 + 0x8AA]
	0x0347E8A8 LDR X21, [X21 + 0xBC8]
	0x0347E8AC LDR X24, [X24 + 0x758]
	0x0347E8B0 LDR X23, [X23 + 0x110]
	0x0347E8B4 MOV X20, X1
	0x0347E8B8 MOV X19, X0
	0x0347E8BC TBNZ X8, 0x0, 0x347E8F8
	0x0347E8C0 ADRP X0, 0xC75000
	0x0347E8C4 LDR X0, [X0 + 0x758]
	0x0347E8C8 BL 0x1C16CF4
	0x0347E8CC ADRP X0, 0xCB2000
	0x0347E8D0 LDR X0, [X0 + 0xDC8]
	0x0347E8D4 BL 0x1C16CF4
	0x0347E8D8 ADRP X0, 0xCB2000
	0x0347E8DC LDR X0, [X0 + 0xBC8]
	0x0347E8E0 BL 0x1C16CF4
	0x0347E8E4 ADRP X0, 0xC79000
	0x0347E8E8 LDR X0, [X0 + 0x110]
	0x0347E8EC BL 0x1C16CF4
	0x0347E8F0 MOVZ W8, 0x1
	0x0347E8F4 STRB W8, [X22 + 0x8AA]
	0x0347E8F8 ADD X0, X19, 0x10
	0x0347E8FC MOV X1, X31
	0x0347E900 BL 0x33EB14C
	0x0347E904 LDR X8, [X21]
	0x0347E908 MOV W22, W0
	0x0347E90C MOV X0, X8
	0x0347E910 BL 0x1C16F10
	0x0347E914 MOV X1, X31
	0x0347E918 MOV X21, X0
	0x0347E91C BL 0x348068C
	0x0347E920 LDR X0, [X24]
	0x0347E924 ADD X1, X31, 0xC
	0x0347E928 STR W22, [X31 + 0xC]
	0x0347E92C BL 0x1C16E04
	0x0347E930 LDR X8, [X23]
	0x0347E934 MOV X1, X0
	0x0347E938 MOV X2, X31
	0x0347E93C MOV X0, X8
	0x0347E940 BL 0x321EFD0
	0x0347E944 CBZ X21, 0x347E994
	0x0347E948 ADRP X8, 0xCB2000
	0x0347E94C LDR X8, [X8 + 0xDC8]
	0x0347E950 STR X0, [X21 + 0x10]
	0x0347E954 LDR X0, [X8]
	0x0347E958 BL 0x1C16F10
	0x0347E95C MOV X1, X31
	0x0347E960 MOV X22, X0
	0x0347E964 BL 0x34846A0
	0x0347E968 CBZ X22, 0x347E994
	0x0347E96C MOV X0, X19
	0x0347E970 MOV X1, X21
	0x0347E974 STR X20, [X22 + 0x10]
	0x0347E978 STR X22, [X21 + 0xF0]
	0x0347E97C BL 0x347BA8C
	0x0347E980 LDP X20, X19, [X31 + 0x30]
	0x0347E984 LDP X22, X21, [X31 + 0x20]
	0x0347E988 LDP X24, X23, [X31 + 0x10]
	0x0347E98C LDR X30, [X31], #0x40
	0x0347E990 RET
	0x0347E994 BL 0x1C16F20
	0x0347E998 STR X30, [X31 - 0x30]!
	0x0347E99C STP X22, X21, [X31 + 0x10]
	0x0347E9A0 STP X20, X19, [X31 + 0x20]
	0x0347E9A4 ADRP X22, 0xF5F000
	0x0347E9A8 LDRB W8, [X22 + 0x8AB]
	0x0347E9AC MOV X19, X2
	0x0347E9B0 MOV X21, X1
	0x0347E9B4 MOV X20, X0
	0x0347E9B8 TBNZ X8, 0x0, 0x347E9D0
	0x0347E9BC ADRP X0, 0xCB1000
	0x0347E9C0 LDR X0, [X0 + 0x770]
	0x0347E9C4 BL 0x1C16CF4
	0x0347E9C8 MOVZ W8, 0x1
	0x0347E9CC STRB W8, [X22 + 0x8AB]
	0x0347E9D0 CBZ X21, 0x347EA50
	0x0347E9D4 ADRP X10, 0xCB1000
	0x0347E9D8 LDR X8, [X21]
	0x0347E9DC LDR X10, [X10 + 0x770]
	0x0347E9E0 LDRH W9, [X8 + 0x12E]
	0x0347E9E4 LDR X1, [X10]
	0x0347E9E8 CBZ X9, 0x347EA0C
	0x0347E9EC LDR X10, [X8 + 0xB0]
	0x0347E9F0 ADD X10, X10, 0x8
	0x0347E9F4 LDUR X11, [X10 - 0x8]
	0x0347E9F8 CMP X11, X1
	0x0347E9FC B.EQ 0x347EA1C
	0x0347EA00 SUBS X9, X9, 0x1
	0x0347EA04 ADD X10, X10, 0x10
	0x0347EA08 B.NE 0x347E9F4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0xF60000
	012 Move X27, 0xCB3000
	013 Move X26, 0xCB3000
	014 Move W8, [X24+2209]
	015 Move X27, [X27+3016]
	016 Move X26, [X26+3472]
	017 Move X22, X5
	018 Move X20, X4
	019 Move X21, X3
	020 Move X23, X2
	021 Move X25, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {50}
	027 Move X0, 0xCA9000
	028 Move X0, [X0+3312]
	029 Call 0x1C17CF4
	030 Move X0, 0xCA9000
	031 Move X0, [X0+3320]
	032 Call 0x1C17CF4
	033 Move X0, 0xCA9000
	034 Move X0, [X0+3328]
	035 Call 0x1C17CF4
	036 Move X0, 0xC9E000
	037 Move X0, [X0+1456]
	038 Call 0x1C17CF4
	039 Move X0, 0xC7F000
	040 Move X0, [X0+2536]
	041 Call 0x1C17CF4
	042 Move X0, 0xCB3000
	043 Move X0, [X0+3472]
	044 Call 0x1C17CF4
	045 Move X0, 0xCB3000
	046 Move X0, [X0+3016]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X24+2209], W8
	050 Move X0, [X27]
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X24, X0
	054 Call WebSocketMessageEnvelope..ctor, X0
	055 Move X0, [X26]
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X26, X0
	059 Call Object..ctor, X0
	060 Compare X26, 0
	061 JumpIfEqual {110}
	062 Move X8, 0xC7F000
	063 Move X8, [X8+2536]
	064 Move [X26+16], X25
	065 Move X27, 0xC9E000
	066 Move X25, X20
	067 ShiftRight X25, 32
	068 And X25, X25, 0x7FFFFFFF
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Move X27, [X27+1456]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X23
	076 Move X1, X31
	077 Call Convert.ToString, X0
	078 Move [X26+24], X0
	079 Move X0, X22
	080 Call Socket.BuildPresenceList, X0
	081 Move [X26+32], X0
	082 Move X0, [X27]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X21
	088 Move W1, W20
	089 Move W2, W25
	090 Move X3, X31
	091 Call Convert.ToBase64String, X0, X1, X2
	092 Move [X26+40], X0
	093 Compare X24, 0
	094 JumpIfEqual {110}
	095 Move [X24+184], X26
	096 Move X0, X19
	097 Move X1, X24
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X24, [X31+32]
	103 Move X23, [X31+40]
	104 Move X26, [X31+16]
	105 Move X25, [X31+24]
	106 Move X30, [X31+80]
	107 Move X27, [X31+88]
	108 Call Socket.SendAsync, X0, X1
	109 Return X0
	110 Call 0x1C17F20

Method: System.Threading.Tasks.Task SendMatchStateAsync(System.String matchId, System.Int64 opCode, System.String state, System.Collections.Generic.IEnumerable`1<Nakama.IUserPresence> presences = null)

Disassembly:
	0x0347EE70 ADRP X0, 0xCA8000
	0x0347EE74 LDR X0, [X0 + 0xCF0]
	0x0347EE78 BL 0x1C16CF4
	0x0347EE7C ADRP X0, 0xCA8000
	0x0347EE80 LDR X0, [X0 + 0xCF8]
	0x0347EE84 BL 0x1C16CF4
	0x0347EE88 ADRP X0, 0xCA8000
	0x0347EE8C LDR X0, [X0 + 0xD00]
	0x0347EE90 BL 0x1C16CF4
	0x0347EE94 ADRP X0, 0xC9D000
	0x0347EE98 LDR X0, [X0 + 0x5B0]
	0x0347EE9C BL 0x1C16CF4
	0x0347EEA0 ADRP X0, 0xCB2000
	0x0347EEA4 LDR X0, [X0 + 0xDF0]
	0x0347EEA8 BL 0x1C16CF4
	0x0347EEAC ADRP X0, 0xCB2000
	0x0347EEB0 LDR X0, [X0 + 0xDF8]
	0x0347EEB4 BL 0x1C16CF4
	0x0347EEB8 ADRP X0, 0xCB2000
	0x0347EEBC LDR X0, [X0 + 0xE00]
	0x0347EEC0 BL 0x1C16CF4
	0x0347EEC4 ADRP X0, 0xC75000
	0x0347EEC8 LDR X0, [X0 + 0xE00]
	0x0347EECC BL 0x1C16CF4
	0x0347EED0 ADRP X0, 0xC76000
	0x0347EED4 LDR X0, [X0 + 0x318]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X0
	008 Move X0, X31
	009 Move X19, X4
	010 Move X23, X3
	011 Move X20, X2
	012 Move X21, X1
	013 Call Encoding.get_UTF8
	014 Compare X0, 0
	015 JumpIfEqual {32}
	016 Move X8, [X0]
	017 Move X1, X23
	018 Move X9, [X8+616]
	019 Move X2, [X8+624]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X3, X0
	022 Move X0, X22
	023 Move X1, X21
	024 Move X2, X20
	025 Move X4, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Move X23, [X31+56]
	032 Call 0x1C17F20

Method: System.Threading.Tasks.Task SendMatchStateAsync(System.String matchId, System.Int64 opCode, System.Byte[] state, System.Collections.Generic.IEnumerable`1<Nakama.IUserPresence> presences = null)

Disassembly:
	0x0347EED8 BL 0x1C16CF4
	0x0347EEDC ADRP X0, 0xC76000
	0x0347EEE0 LDR X0, [X0 + 0x320]
	0x0347EEE4 BL 0x1C16CF4
	0x0347EEE8 ADRP X0, 0xC75000
	0x0347EEEC LDR X0, [X0 + 0xE18]
	0x0347EEF0 BL 0x1C16CF4
	0x0347EEF4 ADRP X0, 0xC78000
	0x0347EEF8 LDR X0, [X0 + 0x1A0]
	0x0347EEFC BL 0x1C16CF4
	0x0347EF00 ADRP X0, 0xCB2000
	0x0347EF04 LDR X0, [X0 + 0xE08]
	0x0347EF08 BL 0x1C16CF4
	0x0347EF0C ADRP X0, 0xC75000
	0x0347EF10 LDR X0, [X0 + 0x9D0]
	0x0347EF14 BL 0x1C16CF4
	0x0347EF18 ADRP X0, 0xCB2000
	0x0347EF1C LDR X0, [X0 + 0xE10]
	0x0347EF20 BL 0x1C16CF4
	0x0347EF24 ADRP X0, 0xCB2000
	0x0347EF28 LDR X0, [X0 + 0xE18]
	0x0347EF2C BL 0x1C16CF4
	0x0347EF30 ADRP X0, 0xCA0000
	0x0347EF34 LDR X0, [X0 + 0x308]
	0x0347EF38 BL 0x1C16CF4
	0x0347EF3C ADRP X0, 0xCB2000
	0x0347EF40 LDR X0, [X0 + 0xE20]
	0x0347EF44 BL 0x1C16CF4
	0x0347EF48 ADRP X0, 0xCB2000
	0x0347EF4C LDR X0, [X0 + 0xE28]
	0x0347EF50 BL 0x1C16CF4
	0x0347EF54 ADRP X0, 0xCB2000
	0x0347EF58 LDR X0, [X0 + 0xE30]
	0x0347EF5C BL 0x1C16CF4
	0x0347EF60 MOVZ W8, 0x1
	0x0347EF64 STRB W8, [X23 + 0x8AF]
	0x0347EF68 MOV X0, X31
	0x0347EF6C STRB W31, [X31 + 0xC]
	0x0347EF70 BL 0x3241948
	0x0347EF74 LDR X8, [X22]
	0x0347EF78 MOV X22, X0
	0x0347EF7C LDR W9, [X8 + 0xE0]
	0x0347EF80 CBNZ W9, 0x347EF8C
	0x0347EF84 MOV X0, X8
	0x0347EF88 BL 0x1C16DFC
	0x0347EF8C CBZ X22, 0x347F638
	0x0347EF90 LDR X8, [X22]
	0x0347EF94 ADRP X27, 0xC75000
	0x0347EF98 ADRP X26, 0xC78000
	0x0347EF9C UBFM X3, X20, 0x20, 0x3F
	0x0347EFA0 LDR X9, [X8 + 0x388]
	0x0347EFA4 LDR X4, [X8 + 0x390]
	0x0347EFA8 LDR X27, [X27 + 0x9D0]
	0x0347EFAC LDR X26, [X26 + 0x1A0]
	0x0347EFB0 MOV X0, X22
	0x0347EFB4 MOV X1, X21
	0x0347EFB8 MOV W2, W20
	0x0347EFBC BLR X9
	0x0347EFC0 LDR X21, [X19 + 0xB0]
	0x0347EFC4 MOV X20, X0
	0x0347EFC8 CBZ X21, 0x347F070
	0x0347EFCC LDR X0, [X27]
	0x0347EFD0 MOVZ W1, 0x1
	0x0347EFD4 BL 0x1C16D6C
	0x0347EFD8 CBZ X0, 0x347F638
	0x0347EFDC MOV X22, X0
	0x0347EFE0 CBZ X20, 0x347EFF8
	0x0347EFE4 LDR X8, [X22]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xF60000
	011 Move X26, 0xCB3000
	012 Move X25, 0xCB3000
	013 Move W8, [X23+2210]
	014 Move X26, [X26+3016]
	015 Move X25, [X25+3472]
	016 Move X21, X4
	017 Move X20, X3
	018 Move X22, X2
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xC7F000
	026 Move X0, [X0+2536]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB3000
	029 Move X0, [X0+3472]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB3000
	032 Move X0, [X0+3016]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+2210], W8
	036 Move X0, [X26]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X23, X0
	040 Call WebSocketMessageEnvelope..ctor, X0
	041 Move X0, [X25]
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X25, X0
	045 Call Object..ctor, X0
	046 Compare X25, 0
	047 JumpIfEqual {83}
	048 Move X8, 0xC7F000
	049 Move X8, [X8+2536]
	050 Move [X25+16], X24
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X22
	057 Move X1, X31
	058 Call Convert.ToString, X0
	059 Move [X25+24], X0
	060 Move X0, X21
	061 Call Socket.BuildPresenceList, X0
	062 Move [X25+32], X0
	063 Move X0, X20
	064 Move X1, X31
	065 Call Convert.ToBase64String, X0
	066 Move [X25+40], X0
	067 Compare X23, 0
	068 JumpIfEqual {83}
	069 Move [X23+184], X25
	070 Move X0, X19
	071 Move X1, X23
	072 Move X20, [X31+64]
	073 Move X19, [X31+72]
	074 Move X22, [X31+48]
	075 Move X21, [X31+56]
	076 Move X24, [X31+32]
	077 Move X23, [X31+40]
	078 Move X26, [X31+16]
	079 Move X25, [X31+24]
	080 Move X30, [X31+80]
	081 Call Socket.SendAsync, X0, X1
	082 Return X0
	083 Call 0x1C17F20

Method: System.Threading.Tasks.Task SendPartyDataAsync(System.String partyId, System.Int64 opCode, System.ArraySegment`1<System.Byte> data)

Disassembly:
	0x0347EFE8 MOV X0, X20
	0x0347EFEC LDR X1, [X8 + 0x40]
	0x0347EFF0 BL 0x1C16E00
	0x0347EFF4 CBZ X0, 0x347F698
	0x0347EFF8 LDR W8, [X22 + 0x18]
	0x0347EFFC CBZ W8, 0x347F664
	0x0347F000 STR X20, [X22 + 0x20]
	0x0347F004 ADRP X10, 0xCB1000
	0x0347F008 LDR X8, [X21]
	0x0347F00C B 0x3EB1664
	0x0347F010 LDR X1, [X26]
	0x0347F014 LDRH W9, [X8 + 0x12E]
	0x0347F018 LDR X23, [X10]
	0x0347F01C CBZ X9, 0x347F040
	0x0347F020 LDR X10, [X8 + 0xB0]
	0x0347F024 ADD X10, X10, 0x8
	0x0347F028 LDUR X11, [X10 - 0x8]
	0x0347F02C CMP X11, X1
	0x0347F030 B.EQ 0x347F050
	0x0347F034 SUBS X9, X9, 0x1
	0x0347F038 ADD X10, X10, 0x10
	0x0347F03C B.NE 0x347F028
	0x0347F040 MOV X0, X21
	0x0347F044 MOV W2, W31
	0x0347F048 BL 0x1C5C788
	0x0347F04C B 0x347F05C
	0x0347F050 LDRSW X9, [X10]
	0x0347F054 ADD X8, X8, X9, 0x4, LSL
	0x0347F058 ADD X0, X8, 0x138
	0x0347F05C LDP X8, X3, [X0]
	0x0347F060 MOV X0, X21
	0x0347F064 MOV X1, X23
	0x0347F068 MOV X2, X22
	0x0347F06C BLR X8
	0x0347F070 ADRP X8, 0xCB1000
	0x0347F074 LDR X8, [X8 + 0xE08]
	0x0347F078 MOV X0, X20
	0x0347F07C LDR X1, [X8]
	0x0347F080 BL 0x220E6DC
	0x0347F084 CBZ X0, 0x347F660
	0x0347F088 MOV X21, X0
	0x0347F08C LDR X0, [X0 + 0x10]
	0x0347F090 MOV X1, X31
	0x0347F094 BL 0x32277A8
	0x0347F098 TBNZ X0, 0x0, 0x347F260
	0x0347F09C LDR X22, [X19 + 0xD8]
	0x0347F0A0 STRB W31, [X31 + 0xC]
	0x0347F0A4 ADD X1, X31, 0xC
	0x0347F0A8 MOV X0, X22
	0x0347F0AC MOV X2, X31
	0x0347F0B0 BL 0x33DE64C
	0x0347F0B4 LDR X0, [X19 + 0xC8]
	0x0347F0B8 CBZ X0, 0x347F68C
	0x0347F0BC ADRP X8, 0xCB1000
	0x0347F0C0 LDR X1, [X21 + 0x10]
	0x0347F0C4 LDR X8, [X8 + 0xDF0]
	0x0347F0C8 LDR X2, [X8]
	0x0347F0CC BL 0x2AA528C
	0x0347F0D0 TBZ X0, 0x0, 0x347F160
	0x0347F0D4 LDR X0, [X19 + 0xC8]
	0x0347F0D8 CBZ X0, 0x347F6A4
	0x0347F0DC ADRP X8, 0xCB1000
	0x0347F0E0 LDR X1, [X21 + 0x10]
	0x0347F0E4 LDR X8, [X8 + 0xE00]
	0x0347F0E8 LDR X2, [X8]
	0x0347F0EC BL 0x2AA5018
	0x0347F0F0 MOV X23, X0
	0x0347F0F4 LDR X0, [X19 + 0xC8]
	0x0347F0F8 CBZ X0, 0x347F6A8
	0x0347F0FC ADRP X8, 0xCB1000
	0x0347F100 LDR X1, [X21 + 0x10]
	0x0347F104 LDR X8, [X8 + 0xDF8]
	0x0347F108 LDR X2, [X8]
	0x0347F10C BL 0x2AA64F8
	0x0347F110 LDR X8, [X21 + 0x60]
	0x0347F114 CBZ X8, 0x347F1F8
	0x0347F118 LDR X25, [X8 + 0x20]
	0x0347F11C ADRP X8, 0xC9F000
	0x0347F120 LDR X8, [X8 + 0x308]
	0x0347F124 LDR X0, [X8]
	0x0347F128 BL 0x1C16F10
	0x0347F12C MOV X24, X0
	0x0347F130 MOVZ W1, 0x9
	0x0347F134 MOV X2, X25
	0x0347F138 MOV X3, X31
	0x0347F13C BL 0x36D7F84

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0xF60000
	011 Move X26, 0xCB2000
	012 Move X25, 0xCB2000
	013 Move W8, [X24+2211]
	014 Move X26, [X26+3016]
	015 Call 0x3EB265C
	016 Return X0
	017 Move X20, X4
	018 Move X21, X3
	019 Move X22, X2
	020 Move X23, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0xCA8000
	027 Move X0, [X0+3312]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA8000
	030 Move X0, [X0+3320]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA8000
	033 Move X0, [X0+3328]
	034 Call 0x1C17CF4
	035 Move X0, 0xC9D000
	036 Move X0, [X0+1456]
	037 Call 0x1C17CF4
	038 Move X0, 0xC7E000
	039 Move X0, [X0+2536]
	040 Call 0x1C17CF4
	041 Move X0, 0xCB2000
	042 Move X0, [X0+3488]
	043 Call 0x1C17CF4
	044 Move X0, 0xCB2000
	045 Move X0, [X0+3016]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X24+2211], W8
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X24, X0
	053 Call WebSocketMessageEnvelope..ctor, X0
	054 Move X0, [X25]
	055 Call 0x1C17F10
	056 Move X1, X31
	057 Move X25, X0
	058 Call Object..ctor, X0
	059 Compare X25, 0
	060 JumpIfEqual {105}
	061 Move X8, 0xC7E000
	062 Move X8, [X8+2536]
	063 Move [X25+16], X23
	064 Move X26, 0xC9D000
	065 Move X23, X20
	066 ShiftRight X23, 32
	067 And X23, X23, 0x7FFFFFFF
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Move X26, [X26+1456]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X22
	075 Move X1, X31
	076 Call Convert.ToString, X0
	077 Move [X25+24], X0
	078 Move X0, [X26]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Move W1, W20
	085 Move W2, W23
	086 Move X3, X31
	087 Call Convert.ToBase64String, X0, X1, X2
	088 Move [X25+32], X0
	089 Compare X24, 0
	090 JumpIfEqual {105}
	091 Move [X24+384], X25
	092 Move X0, X19
	093 Move X1, X24
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X24, [X31+32]
	099 Move X23, [X31+40]
	100 Move X26, [X31+16]
	101 Move X25, [X31+24]
	102 Move X30, [X31+80]
	103 Call Socket.SendAsync, X0, X1
	104 Return X0
	105 Call 0x1C17F20

Method: System.Threading.Tasks.Task SendPartyDataAsync(System.String partyId, System.Int64 opCode, System.String data)

Disassembly:
	0x0347F140 CBZ X23, 0x347F6D8
	0x0347F144 ADRP X8, 0xCB1000
	0x0347F148 LDR X8, [X8 + 0xE10]
	0x0347F14C LDR X2, [X8]
	0x0347F150 MOV X0, X23
	0x0347F154 MOV X1, X24
	0x0347F158 BL 0x267B1A0
	0x0347F15C B 0x347F23C
	0x0347F160 LDR X23, [X19 + 0xB0]
	0x0347F164 CBZ X23, 0x347F1F0
	0x0347F168 LDR X0, [X27]
	0x0347F16C MOVZ W1, 0x1
	0x0347F170 BL 0x1C16D6C
	0x0347F174 MOV X24, X0
	0x0347F178 CBZ X0, 0x347F6D0
	0x0347F17C LDR X25, [X21 + 0x10]
	0x0347F180 CBZ X25, 0x347F198
	0x0347F184 LDR X8, [X24]
	0x0347F188 LDR X1, [X8 + 0x40]
	0x0347F18C MOV X0, X25
	0x0347F190 BL 0x1C16E00
	0x0347F194 CBZ X0, 0x347F6DC
	0x0347F198 LDR W8, [X24 + 0x18]
	0x0347F19C CBZ W8, 0x347F6D4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X0
	007 Move X0, X31
	008 Move X22, X3
	009 Move X19, X2
	010 Move X20, X1
	011 Call Encoding.get_UTF8
	012 Compare X0, 0
	013 JumpIfEqual {28}
	014 Move X8, [X0]
	015 Move X1, X22
	016 Move X9, [X8+616]
	017 Move X2, [X8+624]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X3, X0
	020 Move X0, X21
	021 Move X1, X20
	022 Move X2, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Call 0x1C17F20

Method: System.Threading.Tasks.Task SendPartyDataAsync(System.String partyId, System.Int64 opCode, System.Byte[] data)

Disassembly:
	0x0347F1A0 STR X25, [X24 + 0x20]
	0x0347F1A4 ADRP X10, 0xCB1000
	0x0347F1A8 LDR X8, [X23]
	0x0347F1AC LDR X1, [X26]
	0x0347F1B0 LDR X10, [X10 + 0xE28]
	0x0347F1B4 LDRH W9, [X8 + 0x12E]
	0x0347F1B8 LDR X25, [X10]
	0x0347F1BC CBZ X9, 0x347F1E0
	0x0347F1C0 LDR X10, [X8 + 0xB0]
	0x0347F1C4 ADD X10, X10, 0x8
	0x0347F1C8 LDUR X11, [X10 - 0x8]
	0x0347F1CC CMP X11, X1
	0x0347F1D0 B.EQ 0x347F218
	0x0347F1D4 SUBS X9, X9, 0x1
	0x0347F1D8 ADD X10, X10, 0x10
	0x0347F1DC B.NE 0x347F1C8
	0x0347F1E0 MOVZ W2, 0x3
	0x0347F1E4 MOV X0, X23
	0x0347F1E8 BL 0x1C5C788
	0x0347F1EC B 0x347F228
	0x0347F1F0 MOV X25, X31
	0x0347F1F4 B 0x347F244
	0x0347F1F8 CBZ X23, 0x347F6E8
	0x0347F1FC ADRP X8, 0xCB1000
	0x0347F200 LDR X8, [X8 + 0xE18]
	0x0347F204 LDR X2, [X8]
	0x0347F208 MOV X0, X23
	0x0347F20C MOV X1, X21
	0x0347F210 BL 0x267B244
	0x0347F214 B 0x347F23C
	0x0347F218 LDR W9, [X10]
	0x0347F21C ADD W9, W9, 0x3
	0x0347F220 ADD X8, X8, W9, 0x4, SXTW
	0x0347F224 ADD X0, X8, 0x138
	0x0347F228 LDP X8, X3, [X0]
	0x0347F22C MOV X0, X23
	0x0347F230 MOV X1, X25
	0x0347F234 MOV X2, X24
	0x0347F238 BLR X8
	0x0347F23C MOV X25, X31
	0x0347F240 MOV W23, W31
	0x0347F244 LDRB W8, [X31 + 0xC]
	0x0347F248 CBZ W8, 0x347F258
	0x0347F24C MOV X0, X22
	0x0347F250 MOV X1, X31
	0x0347F254 BL 0x33E14E4
	0x0347F258 CBNZ X25, 0x347F690
	0x0347F25C CBZ W23, 0x347F9C4
	0x0347F260 LDR X8, [X21 + 0x60]
	0x0347F264 CBZ X8, 0x347F2B0
	0x0347F268 LDR X22, [X19 + 0x38]
	0x0347F26C CBZ X22, 0x347F9C4
	0x0347F270 LDR X21, [X8 + 0x20]
	0x0347F274 ADRP X8, 0xC9F000
	0x0347F278 LDR X8, [X8 + 0x308]
	0x0347F27C LDR X0, [X8]
	0x0347F280 BL 0x1C16F10
	0x0347F284 MOV X20, X0
	0x0347F288 MOVZ W1, 0x9
	0x0347F28C MOV X2, X21
	0x0347F290 MOV X3, X31
	0x0347F294 BL 0x36D7F84

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xF5F000
	010 Move X25, 0xCB2000
	011 Move X24, 0xCB2000
	012 Move W8, [X22+2212]
	013 Move X25, [X25+3016]
	014 Move X24, [X24+3488]
	015 Move X20, X3
	016 Move X21, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xC7E000
	024 Move X0, [X0+2536]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB2000
	027 Move X0, [X0+3488]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB2000
	030 Move X0, [X0+3016]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2212], W8
	034 Move X0, [X25]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X22, X0
	038 Call WebSocketMessageEnvelope..ctor, X0
	039 Move X0, [X24]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X24, X0
	043 Call Object..ctor, X0
	044 Compare X24, 0
	045 JumpIfEqual {77}
	046 Move X8, 0xC7E000
	047 Move X8, [X8+2536]
	048 Move [X24+16], X23
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X21
	055 Move X1, X31
	056 Call Convert.ToString, X0
	057 Move [X24+24], X0
	058 Move X0, X20
	059 Move X1, X31
	060 Call Convert.ToBase64String, X0
	061 Move [X24+32], X0
	062 Compare X22, 0
	063 JumpIfEqual {77}
	064 Move [X22+384], X24
	065 Move X0, X19
	066 Move X1, X22
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Move X25, [X31+72]
	075 Call Socket.SendAsync, X0, X1
	076 Return X0
	077 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0347F298 LDR X0, [X22 + 0x40]
	0x0347F29C LDR X8, [X22 + 0x18]
	0x0347F2A0 LDR X2, [X22 + 0x28]
	0x0347F2A4 MOV X1, X20
	0x0347F2A8 BLR X8
	0x0347F2AC B 0x347F9C4
	0x0347F2B0 LDR X1, [X21 + 0x30]
	0x0347F2B4 CBZ X1, 0x347F2D4
	0x0347F2B8 LDR X8, [X19 + 0x28]
	0x0347F2BC CBZ X8, 0x347F9C4
	0x0347F2C0 LDR X0, [X8 + 0x40]
	0x0347F2C4 LDR X9, [X8 + 0x18]
	0x0347F2C8 LDR X2, [X8 + 0x28]
	0x0347F2CC BLR X9
	0x0347F2D0 B 0x347F9C4
	0x0347F2D4 LDR X1, [X21 + 0x58]
	0x0347F2D8 CBZ X1, 0x347F2F8
	0x0347F2DC LDR X8, [X19 + 0x30]
	0x0347F2E0 CBZ X8, 0x347F9C4
	0x0347F2E4 LDR X0, [X8 + 0x40]
	0x0347F2E8 LDR X9, [X8 + 0x18]
	0x0347F2EC LDR X2, [X8 + 0x28]
	0x0347F2F0 BLR X9
	0x0347F2F4 B 0x347F9C4
	0x0347F2F8 LDR X1, [X21 + 0x70]
	0x0347F2FC CBZ X1, 0x347F31C
	0x0347F300 LDR X8, [X19 + 0x40]
	0x0347F304 CBZ X8, 0x347F9C4
	0x0347F308 LDR X0, [X8 + 0x40]
	0x0347F30C LDR X9, [X8 + 0x18]
	0x0347F310 LDR X2, [X8 + 0x28]
	0x0347F314 BLR X9
	0x0347F318 B 0x347F9C4
	0x0347F31C LDR X1, [X21 + 0xA8]
	0x0347F320 CBZ X1, 0x347F340
	0x0347F324 LDR X8, [X19 + 0x50]
	0x0347F328 CBZ X8, 0x347F9C4
	0x0347F32C LDR X0, [X8 + 0x40]
	0x0347F330 LDR X9, [X8 + 0x18]
	0x0347F334 LDR X2, [X8 + 0x28]
	0x0347F338 BLR X9
	0x0347F33C B 0x347F9C4
	0x0347F340 LDR X1, [X21 + 0xB0]
	0x0347F344 CBZ X1, 0x347F364
	0x0347F348 LDR X8, [X19 + 0x48]
	0x0347F34C CBZ X8, 0x347F9C4
	0x0347F350 LDR X0, [X8 + 0x40]
	0x0347F354 LDR X9, [X8 + 0x18]
	0x0347F358 LDR X2, [X8 + 0x28]
	0x0347F35C BLR X9
	0x0347F360 B 0x347F9C4
	0x0347F364 LDR X0, [X21 + 0xC0]
	0x0347F368 CBZ X0, 0x347F53C
	0x0347F36C MOV X1, X31
	0x0347F370 BL 0x3407E90
	0x0347F374 MOV X22, X0
	0x0347F378 CBZ X0, 0x347F7A0
	0x0347F37C ADRP X10, 0xC75000
	0x0347F380 LDR X8, [X22]
	0x0347F384 LDR X10, [X10 + 0x318]
	0x0347F388 LDRH W9, [X8 + 0x12E]
	0x0347F38C LDR X1, [X10]
	0x0347F390 CBZ X9, 0x347F3B4
	0x0347F394 LDR X10, [X8 + 0xB0]
	0x0347F398 ADD X10, X10, 0x8
	0x0347F39C LDUR X11, [X10 - 0x8]
	0x0347F3A0 CMP X11, X1
	0x0347F3A4 B.EQ 0x347F3C4
	0x0347F3A8 SUBS X9, X9, 0x1
	0x0347F3AC ADD X10, X10, 0x10
	0x0347F3B0 B.NE 0x347F39C
	0x0347F3B4 MOV X0, X22
	0x0347F3B8 MOV W2, W31
	0x0347F3BC BL 0x1C5C788
	0x0347F3C0 B 0x347F3D0
	0x0347F3C4 LDRSW X9, [X10]
	0x0347F3C8 ADD X8, X8, X9, 0x4, LSL
	0x0347F3CC ADD X0, X8, 0x138
	0x0347F3D0 LDP X8, X1, [X0]
	0x0347F3D4 MOV X0, X22
	0x0347F3D8 BLR X8
	0x0347F3DC MOV X22, X0
	0x0347F3E0 CBZ X0, 0x347F7A4
	0x0347F3E4 ADRP X23, 0xC74000
	0x0347F3E8 ADRP X24, 0xC75000
	0x0347F3EC LDR X23, [X23 + 0xE18]
	0x0347F3F0 LDR X24, [X24 + 0x320]
	0x0347F3F4 LDR X8, [X22]
	0x0347F3F8 LDR X1, [X23]
	0x0347F3FC LDRH W9, [X8 + 0x12E]
	0x0347F400 CBZ X9, 0x347F424
	0x0347F404 LDR X10, [X8 + 0xB0]
	0x0347F408 ADD X10, X10, 0x8
	0x0347F40C LDUR X11, [X10 - 0x8]
	0x0347F410 CMP X11, X1
	0x0347F414 B.EQ 0x347F434
	0x0347F418 SUBS X9, X9, 0x1
	0x0347F41C ADD X10, X10, 0x10
	0x0347F420 B.NE 0x347F40C
	0x0347F424 MOV X0, X22
	0x0347F428 MOV W2, W31
	0x0347F42C BL 0x1C5C788
	0x0347F430 B 0x347F440
	0x0347F434 LDRSW X9, [X10]
	0x0347F438 ADD X8, X8, X9, 0x4, LSL
	0x0347F43C ADD X0, X8, 0x138
	0x0347F440 LDP X8, X1, [X0]
	0x0347F444 MOV X0, X22
	0x0347F448 BLR X8
	0x0347F44C TBZ X0, 0x0, 0x347F4C8
	0x0347F450 LDR X8, [X22]
	0x0347F454 LDR X1, [X24]
	0x0347F458 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0xF5F000
	008 Move X21, 0xC75000
	009 Move W8, [X19+2213]
	010 Move X21, [X21+2512]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xC75000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move X0, 0xC75000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xC75000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xCB2000
	026 Move X0, [X0+3496]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+2213], W8
	030 Move X0, [X21]
	031 Move W1, 4
	032 Call 0x1C17D6C
	033 Compare X0, 0
	034 JumpIfEqual {127}
	035 Move X21, [X20+192]
	036 Move X19, X0
	037 Compare X21, 0
	038 JumpIfEqual {45}
	039 Move X8, [X19]
	040 Move X0, X21
	041 Move X1, [X8+64]
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfEqual {124}
	045 Move W8, [X19+24]
	046 Compare W8, 0
	047 JumpIfEqual {123}
	048 Move X8, 0xC75000
	049 Move X8, [X8+1880]
	050 Move [X19+32], X21
	051 Move W9, [X20+16]
	052 Add X1, X31, 28
	053 Move X0, [X8]
	054 Move [X31+28], W9
	055 Call 0x1C17E04
	056 Move X21, X0
	057 Compare X0, 0
	058 JumpIfEqual {65}
	059 Move X8, [X19]
	060 Move X0, X21
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {124}
	065 Move W8, [X19+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X22, 0xC75000
	068 Move X22, [X22+2904]
	069 Move X0, X20
	070 Move [X19+40], X21
	071 Call Socket.get_IsConnected, X0
	072 Move X8, [X22]
	073 And W9, W0, 1
	074 Add X1, X31, 24
	075 Move [X31+24], W9
	076 Move X0, X8
	077 Call 0x1C17E04
	078 Move X21, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X19]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {124}
	087 Move W8, [X19+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X20
	090 Move [X19+48], X21
	091 Call Socket.get_IsConnecting, X0
	092 Move X8, [X22]
	093 And W9, W0, 1
	094 Add X1, X31, 12
	095 Move [X31+12], W9
	096 Move X0, X8
	097 Call 0x1C17E04
	098 Move X20, X0
	099 Compare X0, 0
	100 JumpIfEqual {107}
	101 Move X8, [X19]
	102 Move X0, X20
	103 Move X1, [X8+64]
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfEqual {124}
	107 Move W8, [X19+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, 0xCB2000
	110 Move X8, [X8+3496]
	111 Move [X19+56], X20
	112 Move X1, X19
	113 Move X2, X31
	114 Move X0, [X8]
	115 Call String.Format, X0, X1
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X30, [X31+16]
	121 Add X31, X31, 64
	122 Return X0
	123 Call 0x1C17F28
	124 Call 0x1C17F44
	125 Move X1, X31
	126 Call 0x1C17DEC
	127 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnfollowUsersAsync(System.Collections.Generic.IEnumerable`1<Nakama.IApiUser> users)

Disassembly:
	0x0347F45C CBZ X9, 0x347F480
	0x0347F460 LDR X10, [X8 + 0xB0]
	0x0347F464 ADD X10, X10, 0x8
	0x0347F468 LDUR X11, [X10 - 0x8]
	0x0347F46C CMP X11, X1
	0x0347F470 B.EQ 0x347F490
	0x0347F474 SUBS X9, X9, 0x1
	0x0347F478 ADD X10, X10, 0x10
	0x0347F47C B.NE 0x347F468
	0x0347F480 MOV X0, X22
	0x0347F484 MOV W2, W31
	0x0347F488 BL 0x1C5C788
	0x0347F48C B 0x347F49C
	0x0347F490 LDRSW X9, [X10]
	0x0347F494 ADD X8, X8, X9, 0x4, LSL
	0x0347F498 ADD X0, X8, 0x138
	0x0347F49C LDP X8, X1, [X0]
	0x0347F4A0 MOV X0, X22
	0x0347F4A4 BLR X8
	0x0347F4A8 MOV X1, X0
	0x0347F4AC LDR X8, [X19 + 0x58]
	0x0347F4B0 CBZ X8, 0x347F3F4
	0x0347F4B4 LDR X0, [X8 + 0x40]
	0x0347F4B8 LDR X9, [X8 + 0x18]
	0x0347F4BC LDR X2, [X8 + 0x28]
	0x0347F4C0 BLR X9
	0x0347F4C4 B 0x347F3F4
	0x0347F4C8 MOV X23, X31
	0x0347F4CC MOV W24, W31
	0x0347F4D0 CBZ X22, 0x347F534
	0x0347F4D4 ADRP X10, 0xC74000
	0x0347F4D8 LDR X8, [X22]
	0x0347F4DC LDR X10, [X10 + 0xE00]
	0x0347F4E0 LDRH W9, [X8 + 0x12E]
	0x0347F4E4 LDR X1, [X10]
	0x0347F4E8 CBZ X9, 0x347F50C
	0x0347F4EC LDR X10, [X8 + 0xB0]
	0x0347F4F0 ADD X10, X10, 0x8
	0x0347F4F4 LDUR X11, [X10 - 0x8]
	0x0347F4F8 CMP X11, X1
	0x0347F4FC B.EQ 0x347F51C
	0x0347F500 SUBS X9, X9, 0x1
	0x0347F504 ADD X10, X10, 0x10
	0x0347F508 B.NE 0x347F4F4
	0x0347F50C MOV X0, X22
	0x0347F510 MOV W2, W31
	0x0347F514 BL 0x1C5C788
	0x0347F518 B 0x347F528
	0x0347F51C LDRSW X9, [X10]
	0x0347F520 ADD X8, X8, X9, 0x4, LSL
	0x0347F524 ADD X0, X8, 0x138
	0x0347F528 LDP X8, X1, [X0]
	0x0347F52C MOV X0, X22
	0x0347F530 BLR X8
	0x0347F534 CBNZ X23, 0x347F7A8
	0x0347F538 CBZ W24, 0x347F9C4
	0x0347F53C LDR X1, [X21 + 0xE0]
	0x0347F540 CBZ X1, 0x347F560
	0x0347F544 LDR X8, [X19 + 0x60]
	0x0347F548 CBZ X8, 0x347F9C4
	0x0347F54C LDR X0, [X8 + 0x40]
	0x0347F550 LDR X9, [X8 + 0x18]
	0x0347F554 LDR X2, [X8 + 0x28]
	0x0347F558 BLR X9
	0x0347F55C B 0x347F9C4
	0x0347F560 LDR X1, [X21 + 0xF8]
	0x0347F564 CBZ X1, 0x347F584
	0x0347F568 LDR X8, [X19 + 0x68]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xF5F000
	009 Move X23, 0xCB2000
	010 Move W8, [X21+2214]
	011 Move X23, [X23+3216]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xC76000
	019 Move X0, [X0+3456]
	020 Call 0x1C17CF4
	021 Move X0, 0xC76000
	022 Move X0, [X0+3496]
	023 Call 0x1C17CF4
	024 Move X0, 0xCB2000
	025 Move X0, [X0+3504]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB2000
	028 Move X0, [X0+3216]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2214], W8
	032 Move X0, [X23]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X23]
	038 Move X8, [X0+184]
	039 Move X24, 0xC76000
	040 Move X21, [X8+16]
	041 Move X24, [X24+3456]
	042 Compare X21, 0
	043 JumpIfNotEqual {65}
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X23]
	049 Move X9, 0xC76000
	050 Move X8, [X0+184]
	051 Move X9, [X9+3496]
	052 Move X22, [X8]
	053 Move X0, [X9]
	054 Call 0x1C17F10
	055 Move X8, 0xCB2000
	056 Move X8, [X8+3504]
	057 Move X1, X22
	058 Move X3, X31
	059 Move X21, X0
	060 Move X2, [X8]
	061 Call Func`2<Object, Object>..ctor, X0, X1, X2
	062 Move X8, [X23]
	063 Move X8, [X8+184]
	064 Move [X8+16], X21
	065 Move X2, [X24]
	066 Move X0, X20
	067 Move X1, X21
	068 Call Enumerable.Select, X0, X1
	069 Compare X19, 0
	070 JumpIfEqual {80}
	071 Move X1, X0
	072 Move X0, X19
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Call 0x1C17F20

Method: System.Threading.Tasks.Task UnfollowUsersAsync(System.Collections.Generic.IEnumerable`1<System.String> userIDs)

Disassembly:
	0x0347F56C CBZ X8, 0x347F9C4
	0x0347F570 LDR X0, [X8 + 0x40]
	0x0347F574 LDR X9, [X8 + 0x18]
	0x0347F578 LDR X2, [X8 + 0x28]
	0x0347F57C BLR X9
	0x0347F580 B 0x347F9C4
	0x0347F584 LDR X1, [X21 + 0x100]
	0x0347F588 CBZ X1, 0x347F5A8
	0x0347F58C LDR X8, [X19 + 0x70]
	0x0347F590 CBZ X8, 0x347F9C4
	0x0347F594 LDR X0, [X8 + 0x40]
	0x0347F598 LDR X9, [X8 + 0x18]
	0x0347F59C LDR X2, [X8 + 0x28]
	0x0347F5A0 BLR X9
	0x0347F5A4 B 0x347F9C4
	0x0347F5A8 LDR X1, [X21 + 0x108]
	0x0347F5AC CBZ X1, 0x347F5CC
	0x0347F5B0 LDR X8, [X19 + 0x78]
	0x0347F5B4 CBZ X8, 0x347F9C4
	0x0347F5B8 LDR X0, [X8 + 0x40]
	0x0347F5BC LDR X9, [X8 + 0x18]
	0x0347F5C0 LDR X2, [X8 + 0x28]
	0x0347F5C4 BLR X9
	0x0347F5C8 B 0x347F9C4
	0x0347F5CC LDR X1, [X21 + 0x148]
	0x0347F5D0 CBZ X1, 0x347F5F0
	0x0347F5D4 LDR X8, [X19 + 0x80]
	0x0347F5D8 CBZ X8, 0x347F9C4
	0x0347F5DC LDR X0, [X8 + 0x40]
	0x0347F5E0 LDR X9, [X8 + 0x18]
	0x0347F5E4 LDR X2, [X8 + 0x28]
	0x0347F5E8 BLR X9
	0x0347F5EC B 0x347F9C4
	0x0347F5F0 LDR X1, [X21 + 0x178]
	0x0347F5F4 CBZ X1, 0x347F614
	0x0347F5F8 LDR X8, [X19 + 0x88]
	0x0347F5FC CBZ X8, 0x347F9C4
	0x0347F600 LDR X0, [X8 + 0x40]
	0x0347F604 LDR X9, [X8 + 0x18]
	0x0347F608 LDR X2, [X8 + 0x28]
	0x0347F60C BLR X9
	0x0347F610 B 0x347F9C4
	0x0347F614 LDR X1, [X21 + 0x158]
	0x0347F618 CBZ X1, 0x347F63C
	0x0347F61C LDR X8, [X19 + 0x90]
	0x0347F620 CBZ X8, 0x347F9C4
	0x0347F624 LDR X0, [X8 + 0x40]
	0x0347F628 LDR X9, [X8 + 0x18]
	0x0347F62C LDR X2, [X8 + 0x28]
	0x0347F630 BLR X9
	0x0347F634 B 0x347F9C4
	0x0347F638 BL 0x1C16F20
	0x0347F63C LDR X1, [X21 + 0x130]
	0x0347F640 CBZ X1, 0x347F668
	0x0347F644 LDR X8, [X19 + 0x98]
	0x0347F648 CBZ X8, 0x347F9C4
	0x0347F64C LDR X0, [X8 + 0x40]
	0x0347F650 LDR X9, [X8 + 0x18]
	0x0347F654 LDR X2, [X8 + 0x28]
	0x0347F658 BLR X9
	0x0347F65C B 0x347F9C4
	0x0347F660 BL 0x1C16F20
	0x0347F664 BL 0x1C16F28
	0x0347F668 LDR X1, [X21 + 0x170]
	0x0347F66C CBZ X1, 0x347F6AC
	0x0347F670 LDR X8, [X19 + 0xA8]
	0x0347F674 CBZ X8, 0x347F9C4
	0x0347F678 LDR X0, [X8 + 0x40]
	0x0347F67C LDR X9, [X8 + 0x18]
	0x0347F680 LDR X2, [X8 + 0x28]
	0x0347F684 BLR X9
	0x0347F688 B 0x347F9C4
	0x0347F68C BL 0x1C16F20
	0x0347F690 MOV X0, X25
	0x0347F694 BL 0x1C16F18
	0x0347F698 BL 0x1C16F44
	0x0347F69C MOV X1, X31
	0x0347F6A0 BL 0x1C16DEC
	0x0347F6A4 BL 0x1C16F20
	0x0347F6A8 BL 0x1C16F20
	0x0347F6AC LDR X1, [X21 + 0x188]
	0x0347F6B0 CBZ X1, 0x347F6EC
	0x0347F6B4 LDR X8, [X19 + 0xA0]
	0x0347F6B8 CBZ X8, 0x347F9C4
	0x0347F6BC LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xF5F000
	009 Move X21, 0xCB2000
	010 Move X24, 0xC75000
	011 Move X23, 0xC79000
	012 Move W8, [X22+2215]
	013 Move X21, [X21+3016]
	014 Move X24, [X24+1880]
	015 Move X23, [X23+272]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0xC75000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0xC7D000
	026 Move X0, [X0+3544]
	027 Call 0x1C17CF4
	028 Move X0, 0xC76000
	029 Move X0, [X0+464]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB2000
	032 Move X0, [X0+3512]
	033 Call 0x1C17CF4
	034 Move X0, 0xCB2000
	035 Move X0, [X0+3016]
	036 Call 0x1C17CF4
	037 Move X0, 0xC79000
	038 Move X0, [X0+272]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2215], W8
	042 Add X0, X19, 16
	043 Move X1, X31
	044 Call Interlocked.Increment, X0
	045 Move X8, [X21]
	046 Move W22, W0
	047 Move X0, X8
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X21, X0
	051 Call WebSocketMessageEnvelope..ctor, X0
	052 Move X0, [X24]
	053 Add X1, X31, 12
	054 Move [X31+12], W22
	055 Call 0x1C17E04
	056 Move X8, [X23]
	057 Move X1, X0
	058 Move X2, X31
	059 Move X0, X8
	060 Call String.Format, X0, X1
	061 Compare X21, 0
	062 JumpIfEqual {96}
	063 Move X8, 0xCB2000
	064 Move X8, [X8+3512]
	065 Move [X21+16], X0
	066 Move X23, 0xC76000
	067 Move X24, 0xC7D000
	068 Move X0, [X8]
	069 Move X23, [X23+464]
	070 Move X24, [X24+3544]
	071 Call 0x1C17F10
	072 Move X1, X31
	073 Move X22, X0
	074 Call StatusUnfollowMessage..ctor, X0
	075 Move X0, [X23]
	076 Call 0x1C17F10
	077 Move X2, [X24]
	078 Move X1, X20
	079 Move X23, X0
	080 Call List`1<Object>..ctor, X0, X1
	081 Compare X22, 0
	082 JumpIfEqual {96}
	083 Move X0, X19
	084 Move X1, X21
	085 Move [X22+16], X23
	086 Move [X21+232], X22
	087 Call Socket.SendAsync, X0, X1
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X30, [X31+64]
	095 Return X0
	096 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IChannelMessageAck> UpdateChatMessageAsync(Nakama.IChannel channel, System.String messageId, System.String content)

Disassembly:
	0x0347F6C0 LDR X9, [X8 + 0x18]
	0x0347F6C4 LDR X2, [X8 + 0x28]
	0x0347F6C8 BLR X9
	0x0347F6CC B 0x347F9C4
	0x0347F6D0 BL 0x1C16F20
	0x0347F6D4 BL 0x1C16F28
	0x0347F6D8 BL 0x1C16F20
	0x0347F6DC BL 0x1C16F44
	0x0347F6E0 MOV X1, X31
	0x0347F6E4 BL 0x1C16DEC
	0x0347F6E8 BL 0x1C16F20
	0x0347F6EC LDR X21, [X19 + 0xB0]
	0x0347F6F0 CBZ X21, 0x347F9C4
	0x0347F6F4 LDR X0, [X27]
	0x0347F6F8 MOVZ W1, 0x1
	0x0347F6FC BL 0x1C16D6C
	0x0347F700 MOV X22, X0
	0x0347F704 CBZ X0, 0x347F7B0
	0x0347F708 CBZ X20, 0x347F720
	0x0347F70C LDR X8, [X22]
	0x0347F710 LDR X1, [X8 + 0x40]
	0x0347F714 MOV X0, X20
	0x0347F718 BL 0x1C16E00
	0x0347F71C CBZ X0, 0x347F7B8
	0x0347F720 LDR W8, [X22 + 0x18]
	0x0347F724 CBZ W8, 0x347F7B4
	0x0347F728 STR X20, [X22 + 0x20]
	0x0347F72C ADRP X10, 0xCB1000
	0x0347F730 LDR X8, [X21]
	0x0347F734 LDR X1, [X26]
	0x0347F738 LDR X10, [X10 + 0xE30]
	0x0347F73C LDRH W9, [X8 + 0x12E]
	0x0347F740 LDR X20, [X10]
	0x0347F744 CBZ X9, 0x347F768
	0x0347F748 LDR X10, [X8 + 0xB0]
	0x0347F74C ADD X10, X10, 0x8
	0x0347F750 LDUR X11, [X10 - 0x8]
	0x0347F754 CMP X11, X1
	0x0347F758 B.EQ 0x347F778
	0x0347F75C SUBS X9, X9, 0x1
	0x0347F760 ADD X10, X10, 0x10
	0x0347F764 B.NE 0x347F750
	0x0347F768 MOVZ W2, 0x1
	0x0347F76C MOV X0, X21
	0x0347F770 BL 0x1C5C788
	0x0347F774 B 0x347F788
	0x0347F778 LDR W9, [X10]
	0x0347F77C ADD W9, W9, 0x1
	0x0347F780 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xF5F000
	008 Move W8, [X23+2216]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X22, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xCB1000
	018 Move X0, [X0+1904]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2216], W8
	022 Compare X22, 0
	023 JumpIfEqual {57}
	024 Move X10, 0xCB1000
	025 Move X8, [X22]
	026 Move X10, [X10+1904]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move X0, X22
	038 Move W2, W31
	039 Call 0x1C5D788
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 Add X8, X8, X9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X22
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X1, X0
	048 Move X0, X21
	049 Move X2, X20
	050 Move X3, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IChannelMessageAck> UpdateChatMessageAsync(System.String channelId, System.String messageId, System.String content)

Disassembly:
	0x0347F784 ADD X0, X8, 0x138
	0x0347F788 LDP X8, X3, [X0]
	0x0347F78C MOV X0, X21
	0x0347F790 MOV X1, X20
	0x0347F794 MOV X2, X22
	0x0347F798 BLR X8
	0x0347F79C B 0x347F9C4
	0x0347F7A0 BL 0x1C16F20
	0x0347F7A4 BL 0x1C16F20
	0x0347F7A8 MOV X0, X23
	0x0347F7AC BL 0x1C16F18
	0x0347F7B0 BL 0x1C16F20
	0x0347F7B4 BL 0x1C16F28
	0x0347F7B8 BL 0x1C16F44
	0x0347F7BC MOV X1, X31
	0x0347F7C0 BL 0x1C16DEC
	0x0347F7C4 B 0x347F968
	0x0347F7C8 B 0x347F968
	0x0347F7CC B 0x347F968
	0x0347F7D0 B 0x347F968
	0x0347F7D4 B 0x347F968
	0x0347F7D8 B 0x347F968
	0x0347F7DC B 0x347F968
	0x0347F7E0 B 0x347F968
	0x0347F7E4 B 0x347F968
	0x0347F7E8 B 0x347F968
	0x0347F7EC B 0x347F968
	0x0347F7F0 B 0x347F968
	0x0347F7F4 B 0x347F81C
	0x0347F7F8 B 0x347F968
	0x0347F7FC B 0x347F968
	0x0347F800 B 0x347F968
	0x0347F804 B 0x347F968
	0x0347F808 B 0x347F968
	0x0347F80C B 0x347F968
	0x0347F810 B 0x347F81C
	0x0347F814 B 0x347F968
	0x0347F818 B 0x347F81C
	0x0347F81C MOV X23, X1
	0x0347F820 MOV X24, X0
	0x0347F824 CMP W23, 0x1
	0x0347F828 B.NE 0x347F850
	0x0347F82C MOV X0, X24
	0x0347F830 BL 0x3EB1AD0
	0x0347F834 LDR X8, [X0]
	0x0347F838 STR X8, [X31]
	0x0347F83C BL 0x3EB1AE0
	0x0347F840 LDR X23, [X31]
	0x0347F844 MOVZ W24, 0x1
	0x0347F848 CBNZ X22, 0x347F4D4
	0x0347F84C B 0x347F534
	0x0347F850 STR X31, [X31]
	0x0347F854 CBZ X22, 0x347F8B8
	0x0347F858 ADRP X10, 0xC74000
	0x0347F85C LDR X8, [X22]
	0x0347F860 LDR X10, [X10 + 0xE00]
	0x0347F864 LDRH W9, [X8 + 0x12E]
	0x0347F868 LDR X1, [X10]
	0x0347F86C CBZ X9, 0x347F890
	0x0347F870 LDR X10, [X8 + 0xB0]
	0x0347F874 ADD X10, X10, 0x8
	0x0347F878 LDUR X11, [X10 - 0x8]
	0x0347F87C CMP X11, X1
	0x0347F880 B.EQ 0x347F8A0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X24, 0xF5F000
	011 Move X23, 0xCB2000
	012 Move W8, [X24+2217]
	013 Move X23, [X23+3392]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xCB2000
	023 Move X0, [X0+3400]
	024 Call 0x1C17CF4
	025 Move X0, 0xCB2000
	026 Move X0, [X0+3520]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB2000
	029 Move X0, [X0+3416]
	030 Call 0x1C17CF4
	031 Move X0, 0xCB2000
	032 Move X0, [X0+3392]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+2217], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+64], X31
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move X23, 0xCB2000
	044 Move X25, 0xCB2000
	045 Move X24, 0xCB2000
	046 Move W8, [X0+224]
	047 Move X23, [X23+3400]
	048 Move X25, [X25+3520]
	049 Move X24, [X24+3416]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Add X8, X31, 0
	055 Or X23, X8, 15
	056 Move X8, X23
	057 Call AsyncTaskMethodBuilder`1<Object>.Create
	058 Move X2, [X25]
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W8, TEMP
	062 Add X1, X31, 0
	063 Move X0, X23
	064 Move [X31+32], X22
	065 Move [X31+40], X21
	066 Move [X31+48], X20
	067 Move [X31+56], X19
	068 Move [X31], W8
	069 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	070 Move X1, [X24]
	071 Move X0, X23
	072 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	073 Move X20, [X31+128]
	074 Move X19, [X31+136]
	075 Move X22, [X31+112]
	076 Move X21, [X31+120]
	077 Move X24, [X31+96]
	078 Move X23, [X31+104]
	079 Move X30, [X31+80]
	080 Move X25, [X31+88]
	081 Add X31, X31, 144
	082 Return X0

Method: System.Threading.Tasks.Task UpdateStatusAsync(System.String status)

Disassembly:
	0x0347F884 SUBS X9, X9, 0x1
	0x0347F888 ADD X10, X10, 0x10
	0x0347F88C B.NE 0x347F878
	0x0347F890 MOV X0, X22
	0x0347F894 MOV W2, W31
	0x0347F898 BL 0x1C5C788
	0x0347F89C B 0x347F8AC
	0x0347F8A0 LDRSW X9, [X10]
	0x0347F8A4 ADD X8, X8, X9, 0x4, LSL
	0x0347F8A8 ADD X0, X8, 0x138
	0x0347F8AC LDP X8, X1, [X0]
	0x0347F8B0 MOV X0, X22
	0x0347F8B4 BLR X8
	0x0347F8B8 LDR X8, [X31]
	0x0347F8BC CBZ X8, 0x347F970
	0x0347F8C0 LDR X0, [X31]
	0x0347F8C4 BL 0x1C16F18
	0x0347F8C8 MOV X23, X1
	0x0347F8CC MOV X24, X0
	0x0347F8D0 CBNZ X22, 0x347F858
	0x0347F8D4 B 0x347F8B8
	0x0347F8D8 B 0x347F968
	0x0347F8DC B 0x347F904
	0x0347F8E0 B 0x347F904
	0x0347F8E4 B 0x347F904
	0x0347F8E8 B 0x347F904
	0x0347F8EC B 0x347F904
	0x0347F8F0 B 0x347F904
	0x0347F8F4 B 0x347F904
	0x0347F8F8 B 0x347F904
	0x0347F8FC B 0x347F904
	0x0347F900 B 0x347F904
	0x0347F904 MOV X23, X1
	0x0347F908 MOV X24, X0
	0x0347F90C CMP W23, 0x1
	0x0347F910 B.NE 0x347F92C
	0x0347F914 MOV X0, X24
	0x0347F918 BL 0x3EB1AD0
	0x0347F91C LDR X25, [X0]
	0x0347F920 BL 0x3EB1AE0
	0x0347F924 MOVZ W23, 0x1
	0x0347F928 B 0x347F244
	0x0347F92C MOV X25, X31
	0x0347F930 LDRB W8, [X31 + 0xC]
	0x0347F934 CBZ W8, 0x347F944
	0x0347F938 MOV X0, X22
	0x0347F93C MOV X1, X31
	0x0347F940 BL 0x33E14E4
	0x0347F944 CBZ X25, 0x347F970
	0x0347F948 MOV X0, X25
	0x0347F94C BL 0x1C16F18
	0x0347F950 MOV X23, X1
	0x0347F954 MOV X24, X0
	0x0347F958 B 0x347F930
	0x0347F95C B 0x347F968
	0x0347F960 B 0x347F968
	0x0347F964 B 0x347F968
	0x0347F968 MOV X23, X1
	0x0347F96C MOV X24, X0
	0x0347F970 CMP W23, 0x1
	0x0347F974 B.NE 0x347FA08
	0x0347F978 MOV X0, X24
	0x0347F97C BL 0x3EB1AD0
	0x0347F980 MOV X20, X0
	0x0347F984 ADRP X0, 0xC74000
	0x0347F988 LDR X0, [X0 + 0x7D0]
	0x0347F98C BL 0x1C16D08
	0x0347F990 LDR X8, [X20]
	0x0347F994 LDR X1, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xF5F000
	009 Move X21, 0xCB2000
	010 Move X24, 0xC75000
	011 Move X23, 0xC79000
	012 Move W8, [X22+2218]
	013 Move X21, [X21+3016]
	014 Move X24, [X24+1880]
	015 Move X23, [X23+272]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0xC75000
	023 Move X0, [X0+1880]
	024 Call 0x1C17CF4
	025 Move X0, 0xCB2000
	026 Move X0, [X0+3528]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB2000
	029 Move X0, [X0+3016]
	030 Call 0x1C17CF4
	031 Move X0, 0xC79000
	032 Move X0, [X0+272]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2218], W8
	036 Add X0, X19, 16
	037 Move X1, X31
	038 Call Interlocked.Increment, X0
	039 Move X8, [X21]
	040 Move W22, W0
	041 Move X0, X8
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call WebSocketMessageEnvelope..ctor, X0
	046 Move X0, [X24]
	047 Add X1, X31, 12
	048 Move [X31+12], W22
	049 Call 0x1C17E04
	050 Move X8, [X23]
	051 Move X1, X0
	052 Move X2, X31
	053 Move X0, X8
	054 Call String.Format, X0, X1
	055 Compare X21, 0
	056 JumpIfEqual {80}
	057 Move X8, 0xCB2000
	058 Move X8, [X8+3528]
	059 Move [X21+16], X0
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X22, X0
	064 Call StatusUpdateMessage..ctor, X0
	065 Compare X22, 0
	066 JumpIfEqual {80}
	067 Move X0, X19
	068 Move X1, X21
	069 Move [X22+16], X20
	070 Move [X21+240], X22
	071 Call Socket.SendAsync, X0, X1
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return X0
	080 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IChannelMessageAck> WriteChatMessageAsync(Nakama.IChannel channel, System.String content)

Disassembly:
	0x0347F998 BL 0x1C17270
	0x0347F99C TBZ X0, 0x0, 0x347F9E0
	0x0347F9A0 LDR X20, [X20]
	0x0347F9A4 BL 0x3EB1AE0
	0x0347F9A8 LDR X8, [X19 + 0x38]
	0x0347F9AC CBZ X8, 0x347F9C4
	0x0347F9B0 LDR X9, [X8 + 0x18]
	0x0347F9B4 LDR X0, [X8 + 0x40]
	0x0347F9B8 LDR X2, [X8 + 0x28]
	0x0347F9BC MOV X1, X20
	0x0347F9C0 BLR X9
	0x0347F9C4 LDP X20, X19, [X31 + 0x50]
	0x0347F9C8 LDP X22, X21, [X31 + 0x40]
	0x0347F9CC LDP X24, X23, [X31 + 0x30]
	0x0347F9D0 LDP X26, X25, [X31 + 0x20]
	0x0347F9D4 LDP X30, X27, [X31 + 0x10]
	0x0347F9D8 ADD X31, X31, 0x60
	0x0347F9DC RET
	0x0347F9E0 MOVZ W0, 0x8
	0x0347F9E4 BL 0x3EB1AF0
	0x0347F9E8 LDR X8, [X20]
	0x0347F9EC STR X8, [X0]
	0x0347F9F0 ADRP X1, 0xA35000
	0x0347F9F4 ADD X1, X1, 0xE58
	0x0347F9F8 MOV X2, X31
	0x0347F9FC BL 0x3EB1B00
	0x0347FA00 MOV X24, X0
	0x0347FA04 BL 0x3EB1AE0
	0x0347FA08 MOV X0, X24
	0x0347FA0C BL 0x1D2C690
	0x0347FA10 BL 0x1990590
	0x0347FA14 LDR X8, [X0 + 0x20]
	0x0347FA18 CBZ X8, 0x347FA2C
	0x0347FA1C LDR X2, [X8 + 0x18]
	0x0347FA20 LDR X0, [X8 + 0x40]
	0x0347FA24 LDR X1, [X8 + 0x28]
	0x0347FA28 BR X2
	0x0347FA2C RET
	0x0347FA30 SUB X31, X31, 0xA0
	0x0347FA34 STP X30, X25, [X31 + 0x60]
	0x0347FA38 STP X24, X23, [X31 + 0x70]
	0x0347FA3C STP X22, X21, [X31 + 0x80]
	0x0347FA40 STP X20, X19, [X31 + 0x90]
	0x0347FA44 ADRP X20, 0xF5E000
	0x0347FA48 LDRB W8, [X20 + 0x8B2]
	0x0347FA4C MOV X19, X0
	0x0347FA50 TBNZ X8, 0x0, 0x347FAB0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF5F000
	007 Move W8, [X22+2219]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xCB1000
	016 Move X0, [X0+1904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2219], W8
	020 Compare X21, 0
	021 JumpIfEqual {53}
	022 Move X10, 0xCB1000
	023 Move X8, [X21]
	024 Move X10, [X10+1904]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move X0, X21
	036 Move W2, W31
	037 Call 0x1C5D788
	038 NotImplemented "Instruction LDRSW not yet implemented."
	039 Add X8, X8, X9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X21
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X1, X0
	046 Move X0, X20
	047 Move X2, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<Nakama.IChannelMessageAck> WriteChatMessageAsync(System.String channelId, System.String content)

Disassembly:
	0x0347FA54 ADRP X0, 0xCB1000
	0x0347FA58 LDR X0, [X0 + 0xE38]
	0x0347FA5C BL 0x1C16CF4
	0x0347FA60 ADRP X0, 0xCB1000
	0x0347FA64 LDR X0, [X0 + 0xE40]
	0x0347FA68 BL 0x1C16CF4
	0x0347FA6C ADRP X0, 0xCB1000
	0x0347FA70 LDR X0, [X0 + 0xE48]
	0x0347FA74 BL 0x1C16CF4
	0x0347FA78 ADRP X0, 0xCB1000
	0x0347FA7C LDR X0, [X0 + 0xE50]
	0x0347FA80 BL 0x1C16CF4
	0x0347FA84 ADRP X0, 0xCB1000
	0x0347FA88 LDR X0, [X0 + 0xE58]
	0x0347FA8C BL 0x1C16CF4
	0x0347FA90 ADRP X0, 0xCB1000
	0x0347FA94 LDR X0, [X0 + 0xE60]
	0x0347FA98 BL 0x1C16CF4
	0x0347FA9C ADRP X0, 0xCB1000
	0x0347FAA0 LDR X0, [X0 + 0xE68]
	0x0347FAA4 BL 0x1C16CF4
	0x0347FAA8 MOVZ W8, 0x1
	0x0347FAAC STRB W8, [X20 + 0x8B2]
	0x0347FAB0 MOVI V0.2D, 0x0
	0x0347FAB4 STR X31, [X31 + 0x50]
	0x0347FAB8 STP V0, V0, [X31 + 0x30]
	0x0347FABC LDR X20, [X19 + 0xD8]
	0x0347FAC0 STRB W31, [X31 + 0x5C]
	0x0347FAC4 ADD X1, X31, 0x5C
	0x0347FAC8 MOV X0, X20
	0x0347FACC MOV X2, X31
	0x0347FAD0 BL 0x33DE64C
	0x0347FAD4 LDR X0, [X19 + 0xC8]
	0x0347FAD8 CBZ X0, 0x347FBD4
	0x0347FADC ADRP X8, 0xCB1000
	0x0347FAE0 LDR X8, [X8 + 0xE40]
	0x0347FAE4 LDR X1, [X8]
	0x0347FAE8 ADD X8, X31, 0x8
	0x0347FAEC BL 0x2AA54BC
	0x0347FAF0 ADRP X22, 0xCB1000
	0x0347FAF4 ADRP X24, 0xCB1000
	0x0347FAF8 ADRP X23, 0xCB1000
	0x0347FAFC LDR X22, [X22 + 0xE50]
	0x0347FB00 LDR X24, [X24 + 0xE68]
	0x0347FB04 LDR X23, [X23 + 0xE48]
	0x0347FB08 LDUR V0, [X31 + 0x8]
	0x0347FB0C LDUR V1, [X31 + 0x18]
	0x0347FB10 LDR X8, [X31 + 0x28]
	0x0347FB14 ADRP X21, 0xCB1000
	0x0347FB18 LDR X21, [X21 + 0xE38]
	0x0347FB1C STP V0, V1, [X31 + 0x30]
	0x0347FB20 STR X8, [X31 + 0x50]
	0x0347FB24 LDR X1, [X22]
	0x0347FB28 ADD X0, X31, 0x30
	0x0347FB2C BL 0x2C0A728
	0x0347FB30 TBZ X0, 0x0, 0x347FB48
	0x0347FB34 LDR X0, [X31 + 0x48]
	0x0347FB38 CBZ X0, 0x347FBC8
	0x0347FB3C LDR X1, [X24]
	0x0347FB40 BL 0x267B274
	0x0347FB44 B 0x347FB24
	0x0347FB48 MOV X22, X31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xF5F000
	010 Move X22, 0xCB2000
	011 Move W8, [X23+2220]
	012 Move X22, [X22+3392]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0xCB2000
	021 Move X0, [X0+3400]
	022 Call 0x1C17CF4
	023 Move X0, 0xCB2000
	024 Move X0, [X0+3536]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB2000
	027 Move X0, [X0+3416]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB2000
	030 Move X0, [X0+3392]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2220], W8
	034 Move X0, [X22]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], V0
	037 Move [X31+40], V0
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X22, 0xCB2000
	041 Move X24, 0xCB2000
	042 Move X23, 0xCB2000
	043 Move W8, [X0+224]
	044 Move X22, [X22+3400]
	045 Move X24, [X24+3536]
	046 Move X23, [X23+3416]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Add X8, X31, 0
	052 Or X22, X8, 15
	053 Move X8, X22
	054 Call AsyncTaskMethodBuilder`1<Object>.Create
	055 Move X2, [X24]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Add X1, X31, 0
	060 Move X0, X22
	061 Move [X31+32], X21
	062 Move [X31+40], X20
	063 Move [X31+48], X19
	064 Move [X31], W8
	065 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	066 Move X1, [X23]
	067 Move X0, X22
	068 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X24, [X31+80]
	074 Move X23, [X31+88]
	075 Move X30, [X31+64]
	076 Add X31, X31, 128
	077 Return X0

Method: Nakama.ISocket From(Nakama.IClient client)

Disassembly:
	0x0347FB4C LDR X1, [X23]
	0x0347FB50 ADD X0, X31, 0x30
	0x0347FB54 BL 0x2C0A83C
	0x0347FB58 CBNZ X22, 0x347FBD8
	0x0347FB5C LDR X0, [X19 + 0xC8]
	0x0347FB60 CBZ X0, 0x347FBE0
	0x0347FB64 LDR X1, [X21]
	0x0347FB68 BL 0x2AA5220
	0x0347FB6C MOV X21, X31
	0x0347FB70 MOVZ W22, 0x5
	0x0347FB74 LDRB W8, [X31 + 0x5C]
	0x0347FB78 CBZ W8, 0x347FB88
	0x0347FB7C MOV X0, X20
	0x0347FB80 MOV X1, X31
	0x0347FB84 BL 0x33E14E4
	0x0347FB88 CBNZ X21, 0x347FBCC
	0x0347FB8C CMP W22, 0x5
	0x0347FB90 B.EQ 0x347FB98
	0x0347FB94 CBNZ W22, 0x347FBB0
	0x0347FB98 LDR X8, [X19 + 0x18]
	0x0347FB9C CBZ X8, 0x347FBB0
	0x0347FBA0 LDR X9, [X8 + 0x18]
	0x0347FBA4 LDR X0, [X8 + 0x40]
	0x0347FBA8 LDR X1, [X8 + 0x28]
	0x0347FBAC BLR X9
	0x0347FBB0 LDP X20, X19, [X31 + 0x90]
	0x0347FBB4 LDP X22, X21, [X31 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xF5F000
	006 Move X21, 0xCB2000
	007 Move W8, [X20+2221]
	008 Move X21, [X21+3544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xCB2000
	015 Move X0, [X0+3544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2221], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move W1, 15
	022 Move W2, 10
	023 Move W3, 0x40000
	024 Move X4, X31
	025 Move X5, X31
	026 Move X20, X0
	027 Call WebSocketAdapter..ctor, X0, X1, X2, X3, X4
	028 Move X0, X19
	029 Move X1, X20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]

Method: Nakama.ISocket From(Nakama.IClient client, Nakama.ISocketAdapter adapter)

Disassembly:
	0x0347FBB8 LDP X24, X23, [X31 + 0x70]
	0x0347FBBC LDP X30, X25, [X31 + 0x60]
	0x0347FBC0 ADD X31, X31, 0xA0
	0x0347FBC4 RET
	0x0347FBC8 BL 0x1C16F20
	0x0347FBCC MOV X0, X21
	0x0347FBD0 BL 0x1C16F18
	0x0347FBD4 BL 0x1C16F20
	0x0347FBD8 MOV X0, X22
	0x0347FBDC BL 0x1C16F18
	0x0347FBE0 BL 0x1C16F20
	0x0347FBE4 B 0x347FBF4
	0x0347FBE8 B 0x347FBF4
	0x0347FBEC B 0x347FBF4
	0x0347FBF0 B 0x347FBF4
	0x0347FBF4 MOV X24, X1
	0x0347FBF8 MOV X25, X0
	0x0347FBFC B 0x347FC40
	0x0347FC00 B 0x347FC08
	0x0347FC04 B 0x347FC08
	0x0347FC08 MOV X25, X0
	0x0347FC0C CMP W1, 0x1
	0x0347FC10 B.NE 0x347FC28
	0x0347FC14 MOV X0, X25
	0x0347FC18 BL 0x3EB1AD0
	0x0347FC1C LDR X22, [X0]
	0x0347FC20 BL 0x3EB1AE0
	0x0347FC24 B 0x347FB4C
	0x0347FC28 MOV X24, X1
	0x0347FC2C MOV X22, X31
	0x0347FC30 LDR X1, [X23]
	0x0347FC34 ADD X0, X31, 0x30
	0x0347FC38 BL 0x2C0A83C
	0x0347FC3C CBNZ X22, 0x347FC68
	0x0347FC40 CMP W24, 0x1
	0x0347FC44 B.NE 0x347FC60
	0x0347FC48 MOV X0, X25
	0x0347FC4C BL 0x3EB1AD0
	0x0347FC50 LDR X21, [X0]
	0x0347FC54 BL 0x3EB1AE0
	0x0347FC58 MOV W22, W31
	0x0347FC5C B 0x347FB74
	0x0347FC60 MOV X21, X31
	0x0347FC64 B 0x347FC80
	0x0347FC68 MOV X0, X22
	0x0347FC6C BL 0x1C16F18
	0x0347FC70 MOV X24, X1
	0x0347FC74 MOV X25, X0
	0x0347FC78 B 0x347FC30
	0x0347FC7C MOV X25, X0
	0x0347FC80 LDRB W8, [X31 + 0x5C]
	0x0347FC84 CBZ W8, 0x347FC94
	0x0347FC88 MOV X0, X20
	0x0347FC8C MOV X1, X31
	0x0347FC90 BL 0x33E14E4
	0x0347FC94 CBNZ X21, 0x347FCA0
	0x0347FC98 MOV X0, X25
	0x0347FC9C BL 0x1D2C690
	0x0347FCA0 MOV X0, X21
	0x0347FCA4 BL 0x1C16F18
	0x0347FCA8 BL 0x1990590
	0x0347FCAC SUB X31, X31, 0xA0
	0x0347FCB0 STR X30, [X31 + 0x60]
	0x0347FCB4 STP X24, X23, [X31 + 0x70]
	0x0347FCB8 STP X22, X21, [X31 + 0x80]
	0x0347FCBC STP X20, X19, [X31 + 0x90]
	0x0347FCC0 ADRP X21, 0xF5E000
	0x0347FCC4 LDRB W8, [X21 + 0x8B3]
	0x0347FCC8 MOV X19, X1
	0x0347FCCC MOV X20, X0
	0x0347FCD0 TBNZ X8, 0x0, 0x347FD3C
	0x0347FCD4 ADRP X0, 0xCB1000
	0x0347FCD8 LDR X0, [X0 + 0xE38]
	0x0347FCDC BL 0x1C16CF4
	0x0347FCE0 ADRP X0, 0xCB1000
	0x0347FCE4 LDR X0, [X0 + 0xE40]
	0x0347FCE8 BL 0x1C16CF4
	0x0347FCEC ADRP X0, 0xCB1000
	0x0347FCF0 LDR X0, [X0 + 0xE48]
	0x0347FCF4 BL 0x1C16CF4
	0x0347FCF8 ADRP X0, 0xCB1000
	0x0347FCFC LDR X0, [X0 + 0xE50]
	0x0347FD00 BL 0x1C16CF4
	0x0347FD04 ADRP X0, 0xCB1000
	0x0347FD08 LDR X0, [X0 + 0xE58]
	0x0347FD0C BL 0x1C16CF4
	0x0347FD10 ADRP X0, 0xCAF000
	0x0347FD14 LDR X0, [X0 + 0x9E0]
	0x0347FD18 BL 0x1C16CF4
	0x0347FD1C ADRP X0, 0xCB1000
	0x0347FD20 LDR X0, [X0 + 0xE60]
	0x0347FD24 BL 0x1C16CF4
	0x0347FD28 ADRP X0, 0xCB1000
	0x0347FD2C LDR X0, [X0 + 0xE68]
	0x0347FD30 BL 0x1C16CF4
	0x0347FD34 MOVZ W8, 0x1
	0x0347FD38 STRB W8, [X21 + 0x8B3]
	0x0347FD3C MOVI V0.2D, 0x0
	0x0347FD40 STRB W31, [X31 + 0x6C]
	0x0347FD44 STR X31, [X31 + 0x50]
	0x0347FD48 STP V0, V0, [X31 + 0x30]
	0x0347FD4C LDR X21, [X20 + 0xB8]
	0x0347FD50 CBZ X21, 0x347FEE8
	0x0347FD54 ADRP X10, 0xCAF000
	0x0347FD58 LDR X8, [X21]
	0x0347FD5C LDR X10, [X10 + 0x9E0]
	0x0347FD60 LDRH W9, [X8 + 0x12E]
	0x0347FD64 LDR X1, [X10]
	0x0347FD68 CBZ X9, 0x347FD8C
	0x0347FD6C LDR X10, [X8 + 0xB0]
	0x0347FD70 ADD X10, X10, 0x8
	0x0347FD74 LDUR X11, [X10 - 0x8]
	0x0347FD78 CMP X11, X1
	0x0347FD7C B.EQ 0x347FD9C
	0x0347FD80 SUBS X9, X9, 0x1
	0x0347FD84 ADD X10, X10, 0x10
	0x0347FD88 B.NE 0x347FD74
	0x0347FD8C MOVZ W2, 0x8
	0x0347FD90 MOV X0, X21
	0x0347FD94 BL 0x1C5C788
	0x0347FD98 B 0x347FDAC
	0x0347FD9C LDR W9, [X10]
	0x0347FDA0 ADD W9, W9, 0x8
	0x0347FDA4 ADD X8, X8, W9, 0x4, SXTW
	0x0347FDA8 ADD X0, X8, 0x138
	0x0347FDAC LDP X8, X1, [X0]
	0x0347FDB0 MOV X0, X21
	0x0347FDB4 BLR X8
	0x0347FDB8 TBNZ X0, 0x0, 0x347FEB0
	0x0347FDBC LDR X21, [X20 + 0xD8]
	0x0347FDC0 STRB W31, [X31 + 0x6C]
	0x0347FDC4 ADD X1, X31, 0x6C
	0x0347FDC8 MOV X0, X21
	0x0347FDCC MOV X2, X31
	0x0347FDD0 BL 0x33DE64C
	0x0347FDD4 LDR X0, [X20 + 0xC8]
	0x0347FDD8 CBZ X0, 0x347FEF4
	0x0347FDDC ADRP X8, 0xCB1000
	0x0347FDE0 LDR X8, [X8 + 0xE40]
	0x0347FDE4 LDR X1, [X8]
	0x0347FDE8 ADD X8, X31, 0x8
	0x0347FDEC BL 0x2AA54BC
	0x0347FDF0 LDUR V0, [X31 + 0x8]
	0x0347FDF4 LDUR V1, [X31 + 0x18]
	0x0347FDF8 LDR X8, [X31 + 0x28]
	0x0347FDFC ADRP X22, 0xCB1000
	0x0347FE00 LDR X22, [X22 + 0xE50]
	0x0347FE04 STP V0, V1, [X31 + 0x30]
	0x0347FE08 STR X8, [X31 + 0x50]
	0x0347FE0C ADRP X23, 0xCB1000
	0x0347FE10 LDR X23, [X23 + 0xE68]
	0x0347FE14 LDR X1, [X22]
	0x0347FE18 ADD X0, X31, 0x30
	0x0347FE1C BL 0x2C0A728
	0x0347FE20 TBZ X0, 0x0, 0x347FE38
	0x0347FE24 LDR X0, [X31 + 0x48]
	0x0347FE28 CBZ X0, 0x347FEE4
	0x0347FE2C LDR X1, [X23]
	0x0347FE30 BL 0x267B274
	0x0347FE34 B 0x347FE14

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xF5F000
	010 Move W8, [X21+2222]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xC77000
	018 Move X0, [X0+2584]
	019 Call 0x1C17CF4
	020 Move X0, 0xCB2000
	021 Move X0, [X0+3552]
	022 Call 0x1C17CF4
	023 Move X0, 0xCB2000
	024 Move X0, [X0+3560]
	025 Call 0x1C17CF4
	026 Move X0, 0xC7E000
	027 Move X0, [X0+936]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB1000
	030 Move X0, [X0+1512]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2222], W8
	034 Compare X19, 0
	035 JumpIfEqual {171}
	036 Move X25, 0xC77000
	037 Move X8, [X19]
	038 Move X25, [X25+2584]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X25]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move W2, 5
	050 Move X0, X19
	051 Call 0x1C5D788
	052 Move W9, [X10]
	053 Add W9, W9, 5
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X19
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Compare X0, 0
	061 JumpIfEqual {171}
	062 Move X1, X31
	063 Call String.ToLower, X0
	064 Compare X0, 0
	065 JumpIfEqual {171}
	066 Move X8, 0xCB1000
	067 Move X8, [X8+1512]
	068 Move X21, 0xC7E000
	069 Move X22, 0xCB2000
	070 Move X2, X31
	071 Move X1, [X8]
	072 Move X21, [X21+936]
	073 Move X22, [X22+3560]
	074 Call String.Equals, X0, X1
	075 Move X8, [X19]
	076 And W31, W0, 1
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Move X21, [X9]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X25]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 3
	090 Move X0, X19
	091 Call 0x1C5D788
	092 Move W9, [X10]
	093 Add W9, W9, 3
	094 Add X8, X8, W9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X22, 0xCB2000
	099 Move X22, [X22+3552]
	100 Move X0, X19
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X8, [X19]
	103 Move X1, [X25]
	104 Move X23, X0
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move W2, 4
	115 Move X0, X19
	116 Call 0x1C5D788
	117 Move W9, [X10]
	118 Add W9, W9, 4
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X19
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X8, [X22]
	126 Move W24, W0
	127 Move X0, X8
	128 Call 0x1C17F10
	129 Move W5, 10
	130 Move X1, X21
	131 Move X2, X23
	132 Move W3, W24
	133 Move X4, X20
	134 Move X22, X0
	135 Call Socket..ctor, X0, X1, X2, X3, X4, X5
	136 Move X8, [X19]
	137 Move X1, [X25]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 11
	148 Move X0, X19
	149 Call 0x1C5D788
	150 Move W9, [X10]
	151 Add W9, W9, 11
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X19
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Compare X22, 0
	159 JumpIfEqual {171}
	160 Move [X22+176], X0
	161 Move X0, X22
	162 Move X20, [X31+48]
	163 Move X19, [X31+56]
	164 Move X22, [X31+32]
	165 Move X21, [X31+40]
	166 Move X24, [X31+16]
	167 Move X23, [X31+24]
	168 Move X30, [X31+64]
	169 Move X25, [X31+72]
	170 Return X0
	171 Call 0x1C17F20

Method: System.Void ProcessMessage(System.ArraySegment`1<System.Byte> buffer)

Disassembly:
	0x0347FE38 MOV X22, X31
	0x0347FE3C MOVZ W24, 0x5
	0x0347FE40 ADRP X8, 0xCB1000
	0x0347FE44 LDR X8, [X8 + 0xE48]
	0x0347FE48 LDR X1, [X8]
	0x0347FE4C ADD X0, X31, 0x30
	0x0347FE50 BL 0x2C0A83C
	0x0347FE54 CBNZ X22, 0x347FEF8
	0x0347FE58 CMP W24, 0x5
	0x0347FE5C B.EQ 0x347FE64
	0x0347FE60 CBNZ W24, 0x347FE88
	0x0347FE64 LDR X0, [X20 + 0xC8]
	0x0347FE68 CBZ X0, 0x347FF00
	0x0347FE6C ADRP X8, 0xCB1000
	0x0347FE70 LDR X8, [X8 + 0xE38]
	0x0347FE74 LDR X1, [X8]
	0x0347FE78 BL 0x2AA5220
	0x0347FE7C MOV X23, X31
	0x0347FE80 MOVZ W24, 0x2
	0x0347FE84 B 0x347FE8C
	0x0347FE88 MOV X23, X31
	0x0347FE8C LDRB W8, [X31 + 0x6C]
	0x0347FE90 CBZ W8, 0x347FEA0
	0x0347FE94 MOV X0, X21
	0x0347FE98 MOV X1, X31
	0x0347FE9C BL 0x33E14E4
	0x0347FEA0 CBNZ X23, 0x347FEEC
	0x0347FEA4 ORR W8, W24, 0x2
	0x0347FEA8 CMP W8, 0x2
	0x0347FEAC B.NE 0x347FECC
	0x0347FEB0 LDR X8, [X20 + 0x38]
	0x0347FEB4 CBZ X8, 0x347FECC
	0x0347FEB8 LDR X9, [X8 + 0x18]
	0x0347FEBC LDR X0, [X8 + 0x40]
	0x0347FEC0 LDR X2, [X8 + 0x28]
	0x0347FEC4 MOV X1, X19
	0x0347FEC8 BLR X9
	0x0347FECC LDP X20, X19, [X31 + 0x90]
	0x0347FED0 LDP X22, X21, [X31 + 0x80]
	0x0347FED4 LDP X24, X23, [X31 + 0x70]
	0x0347FED8 LDR X30, [X31 + 0x60]
	0x0347FEDC ADD X31, X31, 0xA0
	0x0347FEE0 RET
	0x0347FEE4 BL 0x1C16F20
	0x0347FEE8 BL 0x1C16F20
	0x0347FEEC MOV X0, X23
	0x0347FEF0 BL 0x1C16F18
	0x0347FEF4 BL 0x1C16F20
	0x0347FEF8 MOV X0, X22
	0x0347FEFC BL 0x1C16F18
	0x0347FF00 BL 0x1C16F20
	0x0347FF04 B 0x347FF14
	0x0347FF08 B 0x347FF14
	0x0347FF0C B 0x347FF14
	0x0347FF10 B 0x347FF14
	0x0347FF14 MOV X23, X1
	0x0347FF18 MOV X24, X0
	0x0347FF1C B 0x347FF6C
	0x0347FF20 B 0x347FF28
	0x0347FF24 B 0x347FF28
	0x0347FF28 MOV X23, X1
	0x0347FF2C MOV X24, X0
	0x0347FF30 CMP W23, 0x1
	0x0347FF34 B.NE 0x347FF50
	0x0347FF38 MOV X0, X24
	0x0347FF3C BL 0x3EB1AD0
	0x0347FF40 LDR X22, [X0]
	0x0347FF44 BL 0x3EB1AE0
	0x0347FF48 MOV W24, W31
	0x0347FF4C B 0x347FE40
	0x0347FF50 MOV X22, X31
	0x0347FF54 ADRP X8, 0xCB1000
	0x0347FF58 LDR X8, [X8 + 0xE48]
	0x0347FF5C LDR X1, [X8]
	0x0347FF60 ADD X0, X31, 0x30
	0x0347FF64 BL 0x2C0A83C
	0x0347FF68 CBNZ X22, 0x347FF94
	0x0347FF6C CMP W23, 0x1
	0x0347FF70 B.NE 0x347FF8C
	0x0347FF74 MOV X0, X24
	0x0347FF78 BL 0x3EB1AD0
	0x0347FF7C LDR X23, [X0]
	0x0347FF80 BL 0x3EB1AE0
	0x0347FF84 MOV W24, W31
	0x0347FF88 B 0x347FE8C
	0x0347FF8C MOV X23, X31
	0x0347FF90 B 0x347FFAC
	0x0347FF94 MOV X0, X22
	0x0347FF98 BL 0x1C16F18
	0x0347FF9C MOV X23, X1
	0x0347FFA0 MOV X24, X0
	0x0347FFA4 B 0x347FF54
	0x0347FFA8 MOV X24, X0
	0x0347FFAC LDRB W8, [X31 + 0x6C]
	0x0347FFB0 CBZ W8, 0x347FFC0
	0x0347FFB4 MOV X0, X21
	0x0347FFB8 MOV X1, X31
	0x0347FFBC BL 0x33E14E4
	0x0347FFC0 CBNZ X23, 0x347FFCC
	0x0347FFC4 MOV X0, X24
	0x0347FFC8 BL 0x1D2C690
	0x0347FFCC MOV X0, X23
	0x0347FFD0 BL 0x1C16F18
	0x0347FFD4 BL 0x1990590
	0x0347FFD8 STR X30, [X31 - 0x20]!
	0x0347FFDC STP X20, X19, [X31 + 0x10]
	0x0347FFE0 ADRP X19, 0xF5E000
	0x0347FFE4 ADRP X20, 0xCB1000
	0x0347FFE8 LDRB W8, [X19 + 0x8B4]
	0x0347FFEC LDR X20, [X20 + 0xC90]
	0x0347FFF0 TBNZ X8, 0x0, 0x3480008
	0x0347FFF4 ADRP X0, 0xCB1000
	0x0347FFF8 LDR X0, [X0 + 0xC90]
	0x0347FFFC BL 0x1C16CF4
	0x03480000 MOVZ W8, 0x1
	0x03480004 STRB W8, [X19 + 0x8B4]
	0x03480008 LDR X0, [X20]
	0x0348000C BL 0x1C16F10
	0x03480010 MOV X1, X31
	0x03480014 MOV X19, X0
	0x03480018 BL 0x33BDD8C
	0x0348001C LDR X8, [X20]
	0x03480020 LDR X8, [X8 + 0xB8]
	0x03480024 STR X19, [X8]
	0x03480028 LDP X20, X19, [X31 + 0x10]
	0x0348002C LDR X30, [X31], #0x20
	0x03480030 RET
	0x03480034 MOV X1, X31
	0x03480038 B 0x33BDD8C
	0x0348003C STR X30, [X31 - 0x20]!
	0x03480040 STP X20, X19, [X31 + 0x10]
	0x03480044 ADRP X20, 0xF5D000
	0x03480048 LDRB W8, [X20 + 0x8B5]
	0x0348004C MOV X19, X1
	0x03480050 TBNZ X8, 0x0, 0x3480068
	0x03480054 ADRP X0, 0xC73000
	0x03480058 LDR X0, [X0 + 0xF28]
	0x0348005C BL 0x1C16CF4
	0x03480060 MOVZ W8, 0x1
	0x03480064 STRB W8, [X20 + 0x8B5]
	0x03480068 CBZ X19, 0x34800D8
	0x0348006C ADRP X10, 0xC73000
	0x03480070 LDR X8, [X19]
	0x03480074 LDR X10, [X10 + 0xF28]
	0x03480078 LDRH W9, [X8 + 0x12E]
	0x0348007C LDR X1, [X10]
	0x03480080 CBZ X9, 0x34800A4
	0x03480084 LDR X10, [X8 + 0xB0]
	0x03480088 ADD X10, X10, 0x8
	0x0348008C LDUR X11, [X10 - 0x8]
	0x03480090 CMP X11, X1
	0x03480094 B.EQ 0x34800B4
	0x03480098 SUBS X9, X9, 0x1
	0x0348009C ADD X10, X10, 0x10
	0x034800A0 B.NE 0x348008C
	0x034800A4 MOVZ W2, 0x9
	0x034800A8 MOV X0, X19
	0x034800AC BL 0x1C5C788
	0x034800B0 B 0x34800C4
	0x034800B4 LDR W9, [X10]
	0x034800B8 ADD W9, W9, 0x9
	0x034800BC ADD X8, X8, W9, 0x4, SXTW
	0x034800C0 ADD X0, X8, 0x138
	0x034800C4 LDP X2, X1, [X0]
	0x034800C8 MOV X0, X19
	0x034800CC LDP X20, X19, [X31 + 0x10]
	0x034800D0 LDR X30, [X31], #0x20
	0x034800D4 BR X2
	0x034800D8 BL 0x1C16F20
	0x034800DC STR X30, [X31 - 0x20]!
	0x034800E0 STP X20, X19, [X31 + 0x10]
	0x034800E4 ADRP X20, 0xF5D000
	0x034800E8 LDRB W8, [X20 + 0x8B6]
	0x034800EC MOV X19, X1
	0x034800F0 TBNZ X8, 0x0, 0x3480108
	0x034800F4 ADRP X0, 0xC73000
	0x034800F8 LDR X0, [X0 + 0xF28]
	0x034800FC BL 0x1C16CF4
	0x03480100 MOVZ W8, 0x1
	0x03480104 STRB W8, [X20 + 0x8B6]
	0x03480108 CBZ X19, 0x3480178
	0x0348010C ADRP X10, 0xC73000
	0x03480110 LDR X8, [X19]
	0x03480114 LDR X10, [X10 + 0xF28]
	0x03480118 LDRH W9, [X8 + 0x12E]
	0x0348011C LDR X1, [X10]
	0x03480120 CBZ X9, 0x3480144
	0x03480124 LDR X10, [X8 + 0xB0]
	0x03480128 ADD X10, X10, 0x8
	0x0348012C LDUR X11, [X10 - 0x8]
	0x03480130 CMP X11, X1
	0x03480134 B.EQ 0x3480154
	0x03480138 SUBS X9, X9, 0x1
	0x0348013C ADD X10, X10, 0x10
	0x03480140 B.NE 0x348012C
	0x03480144 MOVZ W2, 0x9
	0x03480148 MOV X0, X19
	0x0348014C BL 0x1C5C788
	0x03480150 B 0x3480164
	0x03480154 LDR W9, [X10]
	0x03480158 ADD W9, W9, 0x9
	0x0348015C ADD X8, X8, W9, 0x4, SXTW
	0x03480160 ADD X0, X8, 0x138
	0x03480164 LDP X2, X1, [X0]
	0x03480168 MOV X0, X19
	0x0348016C LDP X20, X19, [X31 + 0x10]
	0x03480170 LDR X30, [X31], #0x20
	0x03480174 BR X2
	0x03480178 BL 0x1C16F20
	0x0348017C MOV X1, X31
	0x03480180 B 0x33BDD8C
	0x03480184 STR X30, [X31 - 0x30]!
	0x03480188 STP X22, X21, [X31 + 0x10]
	0x0348018C STP X20, X19, [X31 + 0x20]
	0x03480190 ADRP X20, 0xF5D000
	0x03480194 LDRB W8, [X20 + 0x8B7]
	0x03480198 MOV X19, X0
	0x0348019C TBNZ X8, 0x0, 0x34801CC
	0x034801A0 ADRP X0, 0xCB0000
	0x034801A4 LDR X0, [X0 + 0xDF0]
	0x034801A8 BL 0x1C16CF4
	0x034801AC ADRP X0, 0xCB0000
	0x034801B0 LDR X0, [X0 + 0xDF8]
	0x034801B4 BL 0x1C16CF4
	0x034801B8 ADRP X0, 0xCB0000
	0x034801BC LDR X0, [X0 + 0xE68]
	0x034801C0 BL 0x1C16CF4
	0x034801C4 MOVZ W8, 0x1
	0x034801C8 STRB W8, [X20 + 0x8B7]
	0x034801CC LDR X8, [X19 + 0x10]
	0x034801D0 CBZ X8, 0x348029C
	0x034801D4 LDR X20, [X8 + 0xD8]
	0x034801D8 STRB W31, [X31 + 0xC]
	0x034801DC ADD X1, X31, 0xC
	0x034801E0 MOV X0, X20
	0x034801E4 MOV X2, X31
	0x034801E8 BL 0x33DE64C
	0x034801EC LDR X9, [X19 + 0x10]
	0x034801F0 CBZ X9, 0x34802A8
	0x034801F4 LDR X8, [X19 + 0x18]
	0x034801F8 CBZ X8, 0x34802AC
	0x034801FC LDR X0, [X9 + 0xC8]
	0x03480200 CBZ X0, 0x34802B0
	0x03480204 ADRP X9, 0xCB0000
	0x03480208 LDR X9, [X9 + 0xDF0]
	0x0348020C LDR X1, [X8 + 0x10]
	0x03480210 LDR X2, [X9]
	0x03480214 BL 0x2AA528C
	0x03480218 TBZ X0, 0x0, 0x3480248
	0x0348021C LDR X9, [X19 + 0x10]
	0x03480220 CBZ X9, 0x34802B4
	0x03480224 LDR X8, [X19 + 0x18]
	0x03480228 CBZ X8, 0x34802B8
	0x0348022C LDR X0, [X9 + 0xC8]
	0x03480230 CBZ X0, 0x34802BC
	0x03480234 LDR X1, [X8 + 0x10]
	0x03480238 ADRP X8, 0xCB0000
	0x0348023C LDR X8, [X8 + 0xDF8]
	0x03480240 LDR X2, [X8]
	0x03480244 BL 0x2AA64F8
	0x03480248 MOV X21, X31
	0x0348024C MOVZ W22, 0x3
	0x03480250 LDRB W8, [X31 + 0xC]
	0x03480254 CBZ W8, 0x3480264
	0x03480258 MOV X0, X20
	0x0348025C MOV X1, X31
	0x03480260 BL 0x33E14E4
	0x03480264 CBNZ X21, 0x34802A0
	0x03480268 CMP W22, 0x3
	0x0348026C B.EQ 0x3480274
	0x03480270 CBNZ W22, 0x348028C
	0x03480274 LDR X0, [X19 + 0x20]
	0x03480278 CBZ X0, 0x348029C
	0x0348027C ADRP X8, 0xCB0000
	0x03480280 LDR X8, [X8 + 0xE68]
	0x03480284 LDR X1, [X8]
	0x03480288 BL 0x267B274
	0x0348028C LDP X20, X19, [X31 + 0x20]
	0x03480290 LDP X22, X21, [X31 + 0x10]
	0x03480294 LDR X30, [X31], #0x30
	0x03480298 RET
	0x0348029C BL 0x1C16F20
	0x034802A0 MOV X0, X21
	0x034802A4 BL 0x1C16F18
	0x034802A8 BL 0x1C16F20
	0x034802AC BL 0x1C16F20
	0x034802B0 BL 0x1C16F20
	0x034802B4 BL 0x1C16F20
	0x034802B8 BL 0x1C16F20
	0x034802BC BL 0x1C16F20
	0x034802C0 B 0x34802E0
	0x034802C4 B 0x34802E0
	0x034802C8 B 0x34802E0
	0x034802CC B 0x34802E0
	0x034802D0 B 0x34802E0
	0x034802D4 B 0x34802E0
	0x034802D8 B 0x34802E0
	0x034802DC B 0x34802E0
	0x034802E0 MOV X22, X0
	0x034802E4 CMP W1, 0x1
	0x034802E8 B.NE 0x3480304
	0x034802EC MOV X0, X22
	0x034802F0 BL 0x3EB1AD0
	0x034802F4 LDR X21, [X0]
	0x034802F8 BL 0x3EB1AE0
	0x034802FC MOV W22, W31
	0x03480300 B 0x3480250
	0x03480304 MOV X21, X31
	0x03480308 B 0x3480310
	0x0348030C MOV X22, X0
	0x03480310 LDRB W8, [X31 + 0xC]
	0x03480314 CBZ W8, 0x3480324
	0x03480318 MOV X0, X20
	0x0348031C MOV X1, X31
	0x03480320 BL 0x33E14E4
	0x03480324 CBNZ X21, 0x3480330
	0x03480328 MOV X0, X22
	0x0348032C BL 0x1D2C690
	0x03480330 MOV X0, X21
	0x03480334 BL 0x1C16F18
	0x03480338 BL 0x1990590
	0x0348033C SUB X31, X31, 0x40
	0x03480340 STP X30, X23, [X31 + 0x10]
	0x03480344 STP X22, X21, [X31 + 0x20]
	0x03480348 STP X20, X19, [X31 + 0x30]
	0x0348034C ADRP X20, 0xF5D000
	0x03480350 LDRB W8, [X20 + 0x8B8]
	0x03480354 MOV X19, X0
	0x03480358 TBNZ X8, 0x0, 0x34803DC
	0x0348035C ADRP X0, 0xCB0000
	0x03480360 LDR X0, [X0 + 0xE70]
	0x03480364 BL 0x1C16CF4
	0x03480368 ADRP X0, 0xCB0000
	0x0348036C LDR X0, [X0 + 0xE78]
	0x03480370 BL 0x1C16CF4
	0x03480374 ADRP X0, 0xCB0000
	0x03480378 LDR X0, [X0 + 0xBF8]
	0x0348037C BL 0x1C16CF4
	0x03480380 ADRP X0, 0xC73000
	0x03480384 LDR X0, [X0 + 0x758]
	0x03480388 BL 0x1C16CF4
	0x0348038C ADRP X0, 0xCB0000
	0x03480390 LDR X0, [X0 + 0xE80]
	0x03480394 BL 0x1C16CF4
	0x03480398 ADRP X0, 0xCB0000
	0x0348039C LDR X0, [X0 + 0xE88]
	0x034803A0 BL 0x1C16CF4
	0x034803A4 ADRP X0, 0xCB0000
	0x034803A8 LDR X0, [X0 + 0xE90]
	0x034803AC BL 0x1C16CF4
	0x034803B0 ADRP X0, 0xCB0000
	0x034803B4 LDR X0, [X0 + 0xE98]
	0x034803B8 BL 0x1C16CF4
	0x034803BC ADRP X0, 0xCB0000
	0x034803C0 LDR X0, [X0 + 0xBC8]
	0x034803C4 BL 0x1C16CF4
	0x034803C8 ADRP X0, 0xC77000
	0x034803CC LDR X0, [X0 + 0x110]
	0x034803D0 BL 0x1C16CF4
	0x034803D4 MOVZ W8, 0x1
	0x034803D8 STRB W8, [X20 + 0x8B8]
	0x034803DC STR X31, [X31 + 0x8]
	0x034803E0 ADRP X23, 0xCB0000
	0x034803E4 LDR W8, [X19]
	0x034803E8 LDR X23, [X23 + 0xBF8]
	0x034803EC CBZ W8, 0x3480528
	0x034803F0 LDR X20, [X19 + 0x20]
	0x034803F4 CBZ X20, 0x34805A0
	0x034803F8 ADD X0, X20, 0x10
	0x034803FC MOV X1, X31
	0x03480400 BL 0x33EB14C
	0x03480404 ADRP X8, 0xCB0000
	0x03480408 LDR X8, [X8 + 0xBC8]
	0x0348040C MOV W22, W0
	0x03480410 LDR X0, [X8]
	0x03480414 BL 0x1C16F10
	0x03480418 MOV X21, X0
	0x0348041C MOV X1, X31
	0x03480420 BL 0x33BDD8C
	0x03480424 ADRP X8, 0xC73000
	0x03480428 LDR X8, [X8 + 0x758]
	0x0348042C STR W22, [X31 + 0x4]
	0x03480430 LDR X0, [X8]
	0x03480434 ADD X1, X31, 0x4
	0x03480438 BL 0x1C16E04
	0x0348043C MOV X1, X0
	0x03480440 ADRP X8, 0xC77000
	0x03480444 LDR X8, [X8 + 0x110]
	0x03480448 LDR X0, [X8]
	0x0348044C MOV X2, X31
	0x03480450 BL 0x321EFD0
	0x03480454 CBZ X21, 0x34805A4
	0x03480458 ADRP X8, 0xCB0000
	0x0348045C LDR X8, [X8 + 0xE80]
	0x03480460 STR X0, [X21 + 0x10]
	0x03480464 LDR X0, [X8]
	0x03480468 BL 0x1C16F10
	0x0348046C MOV X22, X0
	0x03480470 MOV X1, X31
	0x03480474 BL 0x34762DC
	0x03480478 CBZ X22, 0x34805A8
	0x0348047C LDR X8, [X19 + 0x28]
	0x03480480 STR X8, [X22 + 0x20]
	0x03480484 LDR V0, [X19 + 0x30]
	0x03480488 UNIMPLEMENTED
	0x0348048C STR D0, [X22 + 0x10]
	0x03480490 LDR X8, [X19 + 0x38]
	0x03480494 STR X8, [X22 + 0x28]
	0x03480498 LDR X8, [X19 + 0x40]
	0x0348049C STR X8, [X22 + 0x18]
	0x034804A0 LDR X8, [X19 + 0x48]
	0x034804A4 STR X8, [X22 + 0x30]
	0x034804A8 STR X22, [X21 + 0x68]
	0x034804AC MOV X0, X20
	0x034804B0 MOV X1, X21
	0x034804B4 MOV X2, X31
	0x034804B8 BL 0x347BA8C
	0x034804BC CBZ X0, 0x34805AC
	0x034804C0 ADRP X8, 0xCB0000
	0x034804C4 LDR X8, [X8 + 0xE98]
	0x034804C8 LDR X1, [X8]
	0x034804CC BL 0x269F5D0
	0x034804D0 ADRP X8, 0xCB0000
	0x034804D4 LDR X8, [X8 + 0xE90]
	0x034804D8 STR X0, [X31 + 0x8]
	0x034804DC LDR X1, [X8]
	0x034804E0 ADD X0, X31, 0x8
	0x034804E4 BL 0x2677430
	0x034804E8 TBNZ X0, 0x0, 0x348053C
	0x034804EC STR W31, [X19]
	0x034804F0 LDR X8, [X31 + 0x8]
	0x034804F4 STR X8, [X19 + 0x50]
	0x034804F8 LDR X0, [X23]
	0x034804FC LDR W8, [X0 + 0xE0]
	0x03480500 CBNZ W8, 0x3480508
	0x03480504 BL 0x1C16DFC
	0x03480508 ADRP X8, 0xCB0000
	0x0348050C LDR X8, [X8 + 0xE70]
	0x03480510 ADD X0, X19, 0x8
	0x03480514 LDR X3, [X8]
	0x03480518 ADD X1, X31, 0x8
	0x0348051C MOV X2, X19
	0x03480520 BL 0x1FC1648
	0x03480524 B 0x3480588
	0x03480528 LDR X8, [X19 + 0x50]
	0x0348052C MOVN W9, 0x0
	0x03480530 STR X8, [X31 + 0x8]
	0x03480534 STR X31, [X19 + 0x50]
	0x03480538 STR W9, [X19]
	0x0348053C ADRP X8, 0xCB0000
	0x03480540 LDR X8, [X8 + 0xE88]
	0x03480544 ADD X0, X31, 0x8
	0x03480548 LDR X1, [X8]
	0x0348054C BL 0x2677474
	0x03480550 CBZ X0, 0x348059C
	0x03480554 MOVN W8, 0x1
	0x03480558 LDR X20, [X0 + 0x80]
	0x0348055C STR W8, [X19], #0x8
	0x03480560 LDR X0, [X23]
	0x03480564 ADRP X21, 0xCB0000
	0x03480568 LDR W8, [X0 + 0xE0]
	0x0348056C LDR X21, [X21 + 0xE78]
	0x03480570 CBNZ W8, 0x3480578
	0x03480574 BL 0x1C16DFC
	0x03480578 LDR X2, [X21]
	0x0348057C MOV X0, X19
	0x03480580 MOV X1, X20
	0x03480584 BL 0x26322B0
	0x03480588 LDP X20, X19, [X31 + 0x30]
	0x0348058C LDP X22, X21, [X31 + 0x20]
	0x03480590 LDP X30, X23, [X31 + 0x10]
	0x03480594 ADD X31, X31, 0x40
	0x03480598 RET
	0x0348059C BL 0x1C16F20
	0x034805A0 BL 0x1C16F20
	0x034805A4 BL 0x1C16F20
	0x034805A8 BL 0x1C16F20
	0x034805AC BL 0x1C16F20
	0x034805B0 B 0x34805DC
	0x034805B4 B 0x34805DC
	0x034805B8 B 0x34805DC
	0x034805BC B 0x34805DC
	0x034805C0 B 0x34805DC
	0x034805C4 B 0x34805DC
	0x034805C8 B 0x34805DC
	0x034805CC B 0x34805DC
	0x034805D0 B 0x34805DC
	0x034805D4 B 0x34805DC
	0x034805D8 B 0x34805DC
	0x034805DC MOV X20, X0
	0x034805E0 CMP W1, 0x1
	0x034805E4 B.NE 0x3480680
	0x034805E8 MOV X0, X20
	0x034805EC BL 0x3EB1AD0
	0x034805F0 MOV X20, X0
	0x034805F4 ADRP X0, 0xC73000
	0x034805F8 LDR X0, [X0 + 0x7D0]
	0x034805FC BL 0x1C16D08
	0x03480600 LDR X8, [X20]
	0x03480604 LDR X1, [X8]
	0x03480608 BL 0x1C17270
	0x0348060C TBZ X0, 0x0, 0x3480658
	0x03480610 LDR X20, [X20]
	0x03480614 BL 0x3EB1AE0
	0x03480618 MOVN W8, 0x1
	0x0348061C STR W8, [X19], #0x8
	0x03480620 ADRP X0, 0xCB0000
	0x03480624 LDR X0, [X0 + 0xBF8]
	0x03480628 BL 0x1C16D08
	0x0348062C LDR W8, [X0 + 0xE0]
	0x03480630 CBNZ W8, 0x3480638
	0x03480634 BL 0x1C16DFC
	0x03480638 ADRP X0, 0xCB0000
	0x0348063C LDR X0, [X0 + 0xEA0]
	0x03480640 BL 0x1C16D08
	0x03480644 MOV X2, X0
	0x03480648 MOV X0, X19
	0x0348064C MOV X1, X20
	0x03480650 BL 0x26324C8
	0x03480654 B 0x3480588
	0x03480658 MOVZ W0, 0x8
	0x0348065C BL 0x3EB1AF0
	0x03480660 LDR X8, [X20]
	0x03480664 STR X8, [X0]
	0x03480668 ADRP X1, 0xA34000
	0x0348066C ADD X1, X1, 0xE58
	0x03480670 MOV X2, X31
	0x03480674 BL 0x3EB1B00
	0x03480678 MOV X20, X0
	0x0348067C BL 0x3EB1AE0
	0x03480680 MOV X0, X20
	0x03480684 BL 0x1D2C690
	0x03480688 BL 0x1990590
	0x0348068C MOV X1, X31
	0x03480690 B 0x33BDD8C
	0x03480694 STR X30, [X31 - 0x30]!
	0x03480698 STP X22, X21, [X31 + 0x10]
	0x0348069C STP X20, X19, [X31 + 0x20]
	0x034806A0 ADRP X22, 0xF5D000
	0x034806A4 ADRP X21, 0xCB0000
	0x034806A8 LDRB W8, [X22 + 0x8B9]
	0x034806AC LDR X21, [X21 + 0xBF8]
	0x034806B0 MOV X19, X1
	0x034806B4 MOV X20, X0
	0x034806B8 TBNZ X8, 0x0, 0x34806DC
	0x034806BC ADRP X0, 0xCB0000
	0x034806C0 LDR X0, [X0 + 0xEA8]
	0x034806C4 BL 0x1C16CF4
	0x034806C8 ADRP X0, 0xCB0000
	0x034806CC LDR X0, [X0 + 0xBF8]
	0x034806D0 BL 0x1C16CF4
	0x034806D4 MOVZ W8, 0x1
	0x034806D8 STRB W8, [X22 + 0x8B9]
	0x034806DC LDR X0, [X21]
	0x034806E0 ADRP X21, 0xCB0000
	0x034806E4 LDR W8, [X0 + 0xE0]
	0x034806E8 LDR X21, [X21 + 0xEA8]
	0x034806EC CBNZ W8, 0x34806F4
	0x034806F0 BL 0x1C16DFC
	0x034806F4 LDR X2, [X21]
	0x034806F8 ADD X0, X20, 0x8
	0x034806FC MOV X1, X19
	0x03480700 LDP X20, X19, [X31 + 0x20]
	0x03480704 LDP X22, X21, [X31 + 0x10]
	0x03480708 LDR X30, [X31], #0x30
	0x0348070C B 0x2632228
	0x03480710 SUB X31, X31, 0x40
	0x03480714 STP X30, X23, [X31 + 0x10]
	0x03480718 STP X22, X21, [X31 + 0x20]
	0x0348071C STP X20, X19, [X31 + 0x30]
	0x03480720 ADRP X20, 0xF5D000
	0x03480724 LDRB W8, [X20 + 0x8BA]
	0x03480728 MOV X19, X0
	0x0348072C TBNZ X8, 0x0, 0x34807B0
	0x03480730 ADRP X0, 0xCB0000
	0x03480734 LDR X0, [X0 + 0xEB0]
	0x03480738 BL 0x1C16CF4
	0x0348073C ADRP X0, 0xCB0000
	0x03480740 LDR X0, [X0 + 0xEB8]
	0x03480744 BL 0x1C16CF4
	0x03480748 ADRP X0, 0xCB0000
	0x0348074C LDR X0, [X0 + 0xC18]
	0x03480750 BL 0x1C16CF4
	0x03480754 ADRP X0, 0xC73000
	0x03480758 LDR X0, [X0 + 0x758]
	0x0348075C BL 0x1C16CF4
	0x03480760 ADRP X0, 0xCB0000
	0x03480764 LDR X0, [X0 + 0xEC0]
	0x03480768 BL 0x1C16CF4
	0x0348076C ADRP X0, 0xCB0000
	0x03480770 LDR X0, [X0 + 0xE88]
	0x03480774 BL 0x1C16CF4
	0x03480778 ADRP X0, 0xCB0000
	0x0348077C LDR X0, [X0 + 0xE90]
	0x03480780 BL 0x1C16CF4
	0x03480784 ADRP X0, 0xCB0000
	0x03480788 LDR X0, [X0 + 0xE98]
	0x0348078C BL 0x1C16CF4
	0x03480790 ADRP X0, 0xCB0000
	0x03480794 LDR X0, [X0 + 0xBC8]
	0x03480798 BL 0x1C16CF4
	0x0348079C ADRP X0, 0xC77000
	0x034807A0 LDR X0, [X0 + 0x110]
	0x034807A4 BL 0x1C16CF4
	0x034807A8 MOVZ W8, 0x1
	0x034807AC STRB W8, [X20 + 0x8BA]
	0x034807B0 STR X31, [X31 + 0x8]
	0x034807B4 ADRP X23, 0xCB0000
	0x034807B8 LDR W8, [X19]
	0x034807BC LDR X23, [X23 + 0xC18]
	0x034807C0 CBZ W8, 0x3480904
	0x034807C4 LDR X20, [X19 + 0x20]
	0x034807C8 CBZ X20, 0x348097C
	0x034807CC ADD X0, X20, 0x10
	0x034807D0 MOV X1, X31
	0x034807D4 BL 0x33EB14C
	0x034807D8 ADRP X8, 0xCB0000
	0x034807DC LDR X8, [X8 + 0xBC8]
	0x034807E0 MOV W22, W0
	0x034807E4 LDR X0, [X8]
	0x034807E8 BL 0x1C16F10
	0x034807EC MOV X21, X0
	0x034807F0 MOV X1, X31
	0x034807F4 BL 0x33BDD8C
	0x034807F8 ADRP X8, 0xC73000
	0x034807FC LDR X8, [X8 + 0x758]
	0x03480800 STR W22, [X31 + 0x4]
	0x03480804 LDR X0, [X8]
	0x03480808 ADD X1, X31, 0x4
	0x0348080C BL 0x1C16E04
	0x03480810 MOV X1, X0
	0x03480814 ADRP X8, 0xC77000
	0x03480818 LDR X8, [X8 + 0x110]
	0x0348081C LDR X0, [X8]
	0x03480820 MOV X2, X31
	0x03480824 BL 0x321EFD0
	0x03480828 CBZ X21, 0x3480980
	0x0348082C ADRP X8, 0xCB0000
	0x03480830 LDR X8, [X8 + 0xEC0]
	0x03480834 STR X0, [X21 + 0x10]
	0x03480838 LDR X0, [X8]
	0x0348083C BL 0x1C16F10
	0x03480840 MOV X22, X0
	0x03480844 MOV X1, X31
	0x03480848 BL 0x347753C
	0x0348084C CBZ X22, 0x3480984
	0x03480850 LDR X8, [X19 + 0x28]
	0x03480854 STR X8, [X22 + 0x10]
	0x03480858 LDR X8, [X19 + 0x30]
	0x0348085C STR X8, [X22 + 0x20]
	0x03480860 LDR V0, [X19 + 0x38]
	0x03480864 UNIMPLEMENTED
	0x03480868 STR D0, [X22 + 0x18]
	0x0348086C LDR X8, [X19 + 0x40]
	0x03480870 STR X8, [X22 + 0x28]
	0x03480874 LDR X8, [X19 + 0x48]
	0x03480878 STR X8, [X22 + 0x30]
	0x0348087C LDR X8, [X19 + 0x50]
	0x03480880 STR X8, [X22 + 0x38]
	0x03480884 STR X22, [X21 + 0x160]
	0x03480888 MOV X0, X20
	0x0348088C MOV X1, X21
	0x03480890 MOV X2, X31
	0x03480894 BL 0x347BA8C
	0x03480898 CBZ X0, 0x3480988
	0x0348089C ADRP X8, 0xCB0000
	0x034808A0 LDR X8, [X8 + 0xE98]
	0x034808A4 LDR X1, [X8]
	0x034808A8 BL 0x269F5D0
	0x034808AC ADRP X8, 0xCB0000
	0x034808B0 LDR X8, [X8 + 0xE90]
	0x034808B4 STR X0, [X31 + 0x8]
	0x034808B8 LDR X1, [X8]
	0x034808BC ADD X0, X31, 0x8
	0x034808C0 BL 0x2677430
	0x034808C4 TBNZ X0, 0x0, 0x3480918
	0x034808C8 STR W31, [X19]
	0x034808CC LDR X8, [X31 + 0x8]
	0x034808D0 STR X8, [X19 + 0x58]
	0x034808D4 LDR X0, [X23]
	0x034808D8 LDR W8, [X0 + 0xE0]
	0x034808DC CBNZ W8, 0x34808E4
	0x034808E0 BL 0x1C16DFC
	0x034808E4 ADRP X8, 0xCB0000
	0x034808E8 LDR X8, [X8 + 0xEB0]
	0x034808EC ADD X0, X19, 0x8
	0x034808F0 LDR X3, [X8]
	0x034808F4 ADD X1, X31, 0x8
	0x034808F8 MOV X2, X19
	0x034808FC BL 0x1FC185C
	0x03480900 B 0x3480964
	0x03480904 LDR X8, [X19 + 0x58]
	0x03480908 MOVN W9, 0x0
	0x0348090C STR X8, [X31 + 0x8]
	0x03480910 STR X31, [X19 + 0x58]
	0x03480914 STR W9, [X19]
	0x03480918 ADRP X8, 0xCB0000
	0x0348091C LDR X8, [X8 + 0xE88]
	0x03480920 ADD X0, X31, 0x8
	0x03480924 LDR X1, [X8]
	0x03480928 BL 0x2677474
	0x0348092C CBZ X0, 0x3480978
	0x03480930 MOVN W8, 0x1
	0x03480934 LDR X20, [X0 + 0x170]
	0x03480938 STR W8, [X19], #0x8
	0x0348093C LDR X0, [X23]
	0x03480940 ADRP X21, 0xCB0000
	0x03480944 LDR W8, [X0 + 0xE0]
	0x03480948 LDR X21, [X21 + 0xEB8]
	0x0348094C CBNZ W8, 0x3480954
	0x03480950 BL 0x1C16DFC
	0x03480954 LDR X2, [X21]
	0x03480958 MOV X0, X19
	0x0348095C MOV X1, X20
	0x03480960 BL 0x26322B0
	0x03480964 LDP X20, X19, [X31 + 0x30]
	0x03480968 LDP X22, X21, [X31 + 0x20]
	0x0348096C LDP X30, X23, [X31 + 0x10]
	0x03480970 ADD X31, X31, 0x40
	0x03480974 RET
	0x03480978 BL 0x1C16F20
	0x0348097C BL 0x1C16F20
	0x03480980 BL 0x1C16F20
	0x03480984 BL 0x1C16F20
	0x03480988 BL 0x1C16F20
	0x0348098C B 0x34809B8
	0x03480990 B 0x34809B8
	0x03480994 B 0x34809B8
	0x03480998 B 0x34809B8
	0x0348099C B 0x34809B8
	0x034809A0 B 0x34809B8
	0x034809A4 B 0x34809B8
	0x034809A8 B 0x34809B8
	0x034809AC B 0x34809B8
	0x034809B0 B 0x34809B8
	0x034809B4 B 0x34809B8
	0x034809B8 MOV X20, X0
	0x034809BC CMP W1, 0x1
	0x034809C0 B.NE 0x3480A5C
	0x034809C4 MOV X0, X20
	0x034809C8 BL 0x3EB1AD0
	0x034809CC MOV X20, X0
	0x034809D0 ADRP X0, 0xC73000
	0x034809D4 LDR X0, [X0 + 0x7D0]
	0x034809D8 BL 0x1C16D08
	0x034809DC LDR X8, [X20]
	0x034809E0 LDR X1, [X8]
	0x034809E4 BL 0x1C17270
	0x034809E8 TBZ X0, 0x0, 0x3480A34
	0x034809EC LDR X20, [X20]
	0x034809F0 BL 0x3EB1AE0
	0x034809F4 MOVN W8, 0x1
	0x034809F8 STR W8, [X19], #0x8
	0x034809FC ADRP X0, 0xCB0000
	0x03480A00 LDR X0, [X0 + 0xC18]
	0x03480A04 BL 0x1C16D08
	0x03480A08 LDR W8, [X0 + 0xE0]
	0x03480A0C CBNZ W8, 0x3480A14
	0x03480A10 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0xF5F000
	013 Move X22, 0xC9D000
	014 Move W8, [X23+2223]
	015 Move X22, [X22+1456]
	016 Move X20, X2
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {85}
	023 Move X0, 0xCA8000
	024 Move X0, [X0+3312]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA8000
	027 Move X0, [X0+3320]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA8000
	030 Move X0, [X0+3328]
	031 Call 0x1C17CF4
	032 Move X0, 0xC9D000
	033 Move X0, [X0+1456]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB2000
	036 Move X0, [X0+3568]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB2000
	039 Move X0, [X0+3576]
	040 Call 0x1C17CF4
	041 Move X0, 0xCB2000
	042 Move X0, [X0+3584]
	043 Call 0x1C17CF4
	044 Move X0, 0xC75000
	045 Move X0, [X0+3584]
	046 Call 0x1C17CF4
	047 Move X0, 0xC76000
	048 Move X0, [X0+792]
	049 Call 0x1C17CF4
	050 Move X0, 0xC76000
	051 Move X0, [X0+800]
	052 Call 0x1C17CF4
	053 Move X0, 0xC75000
	054 Move X0, [X0+3608]
	055 Call 0x1C17CF4
	056 Move X0, 0xC78000
	057 Move X0, [X0+416]
	058 Call 0x1C17CF4
	059 Move X0, 0xCB2000
	060 Move X0, [X0+3592]
	061 Call 0x1C17CF4
	062 Move X0, 0xC75000
	063 Move X0, [X0+2512]
	064 Call 0x1C17CF4
	065 Move X0, 0xCB2000
	066 Move X0, [X0+3600]
	067 Call 0x1C17CF4
	068 Move X0, 0xCB2000
	069 Move X0, [X0+3608]
	070 Call 0x1C17CF4
	071 Move X0, 0xCA0000
	072 Move X0, [X0+776]
	073 Call 0x1C17CF4
	074 Move X0, 0xCB2000
	075 Move X0, [X0+3616]
	076 Call 0x1C17CF4
	077 Move X0, 0xCB2000
	078 Move X0, [X0+3624]
	079 Call 0x1C17CF4
	080 Move X0, 0xCB2000
	081 Move X0, [X0+3632]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X23+2223], W8
	085 Move X0, X31
	086 Move [X31+12], W31
	087 Call Encoding.get_UTF8
	088 Move X8, [X22]
	089 Move X22, X0
	090 Move W9, [X8+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X8
	094 Call 0x1C17DFC
	095 Compare X22, 0
	096 JumpIfEqual {565}
	097 Move X8, [X22]
	098 Move X27, 0xC75000
	099 Move X26, 0xC78000
	100 Move X3, X20
	101 ShiftRight X3, 32
	102 And X3, X3, 0x7FFFFFFF
	103 Move X9, [X8+904]
	104 Move X4, [X8+912]
	105 Move X27, [X27+2512]
	106 Move X26, [X26+416]
	107 Move X0, X22
	108 Move X1, X21
	109 Move W2, W20
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X21, [X19+176]
	112 Move X20, X0
	113 Compare X21, 0
	114 JumpIfEqual {160}
	115 Move X0, [X27]
	116 Move W1, 1
	117 Call 0x1C17D6C
	118 Compare X0, 0
	119 JumpIfEqual {565}
	120 Move X22, X0
	121 Compare X20, 0
	122 JumpIfEqual {129}
	123 Move X8, [X22]
	124 Move X0, X20
	125 Move X1, [X8+64]
	126 Call 0x1C17E00
	127 Compare X0, 0
	128 JumpIfEqual {591}
	129 Move W8, [X22+24]
	130 Compare W8, 0
	131 JumpIfEqual {577}
	132 Move [X22+32], X20
	133 Move X10, 0xCB1000
	134 Move X8, [X21]
	135 Call 0x3EB2664
	136 Return 
	137 Move X1, [X26]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move X23, [X10]
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move X0, X21
	149 Move W2, W31
	150 Call 0x1C5D788
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Add X8, X8, X9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X3, [X0+8]
	156 Move X0, X21
	157 Move X1, X23
	158 Move X2, X22
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X8, 0xCB1000
	161 Move X8, [X8+3592]
	162 Move X0, X20
	163 Move X1, [X8]
	164 Call JsonParser.FromJson, X0
	165 Compare X0, 0
	166 JumpIfEqual {576}
	167 Move X21, X0
	168 Move X0, [X0+16]
	169 Move X1, X31
	170 Call String.IsNullOrEmpty, X0
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {301}
	175 Move X22, [X19+216]
	176 Move [X31+12], W31
	177 Add X1, X31, 12
	178 Move X0, X22
	179 Move X2, X31
	180 Call Monitor.Enter, X0, X1
	181 Move X0, [X19+200]
	182 Compare X0, 0
	183 JumpIfEqual {588}
	184 Move X8, 0xCB1000
	185 Move X1, [X21+16]
	186 Move X8, [X8+3568]
	187 Move X2, [X8]
	188 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {231}
	193 Move X0, [X19+200]
	194 Compare X0, 0
	195 JumpIfEqual {594}
	196 Move X8, 0xCB1000
	197 Move X1, [X21+16]
	198 Move X8, [X8+3584]
	199 Move X2, [X8]
	200 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	201 Move X23, X0
	202 Move X0, [X19+200]
	203 Compare X0, 0
	204 JumpIfEqual {595}
	205 Move X8, 0xCB1000
	206 Move X1, [X21+16]
	207 Move X8, [X8+3576]
	208 Move X2, [X8]
	209 Call Dictionary`2<Object, Object>.Remove, X0, X1
	210 Move X8, [X21+96]
	211 Compare X8, 0
	212 JumpIfEqual {271}
	213 Move X25, [X8+32]
	214 Move X8, 0xC9F000
	215 Move X8, [X8+776]
	216 Move X0, [X8]
	217 Call 0x1C17F10
	218 Move X24, X0
	219 Move W1, 9
	220 Move X2, X25
	221 Move X3, X31
	222 Call WebSocketException..ctor, X0, X1, X2
	223 Compare X23, 0
	224 JumpIfEqual {608}
	225 Move X8, 0xCB1000
	226 Move X8, [X8+3600]
	227 Move X2, [X8]
	228 Move X0, X23
	229 Move X1, X24
	230 Call TaskCompletionSource`1<Object>.SetException, X0, X1
	231 Move X23, [X19+176]
	232 Compare X23, 0
	233 JumpIfEqual {270}
	234 Move X0, [X27]
	235 Move W1, 1
	236 Call 0x1C17D6C
	237 Move X24, X0
	238 Compare X0, 0
	239 JumpIfEqual {606}
	240 Move X25, [X21+16]
	241 Compare X25, 0
	242 JumpIfEqual {249}
	243 Move X8, [X24]
	244 Move X1, [X8+64]
	245 Move X0, X25
	246 Call 0x1C17E00
	247 Compare X0, 0
	248 JumpIfEqual {609}
	249 Move W8, [X24+24]
	250 Compare W8, 0
	251 JumpIfEqual {607}
	252 Move [X24+32], X25
	253 Move X10, 0xCB1000
	254 Move X8, [X23]
	255 Move X1, [X26]
	256 Move X10, [X10+3624]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Move X25, [X10]
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move W2, 3
	268 Move X0, X23
	269 Call 0x1C5D788
	270 Move X25, X31
	271 Compare X23, 0
	272 JumpIfEqual {612}
	273 Move X8, 0xCB1000
	274 Move X8, [X8+3608]
	275 Move X2, [X8]
	276 Move X0, X23
	277 Move X1, X21
	278 Call TaskCompletionSource`1<Object>.SetResult, X0, X1
	279 Move W9, [X10]
	280 Add W9, W9, 3
	281 Add X8, X8, W9
	282 Add X0, X8, 312
	283 Move X8, [X0]
	284 Move X3, [X0+8]
	285 Move X0, X23
	286 Move X1, X25
	287 Move X2, X24
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Move X25, X31
	290 Move W23, W31
	291 Move W8, [X31+12]
	292 Compare W8, 0
	293 JumpIfEqual {297}
	294 Move X0, X22
	295 Move X1, X31
	296 Call Monitor.Exit, X0
	297 Compare X25, 0
	298 JumpIfNotEqual {589}
	299 Compare W23, 0
	300 JumpIfEqual {764}
	301 Move X8, [X21+96]
	302 Compare X8, 0
	303 JumpIfEqual {322}
	304 Move X22, [X19+56]
	305 Compare X22, 0
	306 JumpIfEqual {764}
	307 Move X21, [X8+32]
	308 Move X8, 0xC9F000
	309 Move X8, [X8+776]
	310 Move X0, [X8]
	311 Call 0x1C17F10
	312 Move X20, X0
	313 Move W1, 9
	314 Move X2, X21
	315 Move X3, X31
	316 Call WebSocketException..ctor, X0, X1, X2
	317 Move X0, [X22+64]
	318 Move X8, [X22+24]
	319 Move X2, [X22+40]
	320 Move X1, X20
	321 NotImplemented "Instruction BLR not yet implemented."
	322 Move X1, [X21+48]
	323 Compare X1, 0
	324 JumpIfEqual {332}
	325 Move X8, [X19+40]
	326 Compare X8, 0
	327 JumpIfEqual {764}
	328 Move X0, [X8+64]
	329 Move X9, [X8+24]
	330 Move X2, [X8+40]
	331 NotImplemented "Instruction BLR not yet implemented."
	332 Move X1, [X21+88]
	333 Compare X1, 0
	334 JumpIfEqual {342}
	335 Move X8, [X19+48]
	336 Compare X8, 0
	337 JumpIfEqual {764}
	338 Move X0, [X8+64]
	339 Move X9, [X8+24]
	340 Move X2, [X8+40]
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Move X1, [X21+112]
	343 Compare X1, 0
	344 JumpIfEqual {352}
	345 Move X8, [X19+64]
	346 Compare X8, 0
	347 JumpIfEqual {764}
	348 Move X0, [X8+64]
	349 Move X9, [X8+24]
	350 Move X2, [X8+40]
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Move X1, [X21+168]
	353 Compare X1, 0
	354 JumpIfEqual {362}
	355 Move X8, [X19+80]
	356 Compare X8, 0
	357 JumpIfEqual {764}
	358 Move X0, [X8+64]
	359 Move X9, [X8+24]
	360 Move X2, [X8+40]
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Move X1, [X21+176]
	363 Compare X1, 0
	364 JumpIfEqual {372}
	365 Move X8, [X19+72]
	366 Compare X8, 0
	367 JumpIfEqual {764}
	368 Move X0, [X8+64]
	369 Move X9, [X8+24]
	370 Move X2, [X8+40]
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Move X0, [X21+192]
	373 Compare X0, 0
	374 JumpIfEqual {495}
	375 Move X1, X31
	376 Call ApiNotificationList.get_Notifications, X0
	377 Move X22, X0
	378 Compare X0, 0
	379 JumpIfEqual {661}
	380 Move X10, 0xC75000
	381 Move X8, [X22]
	382 Move X10, [X10+792]
	383 NotImplemented "Instruction LDRH not yet implemented."
	384 Move X1, [X10]
	385 Compare X9, 0
	386 JumpIfEqual {393}
	387 Move X10, [X8+176]
	388 Add X10, X10, 8
	389 NotImplemented "Instruction LDUR not yet implemented."
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Subtract X9, X9, 1
	392 Add X10, X10, 16
	393 Move X0, X22
	394 Move W2, W31
	395 Call 0x1C5D788
	396 NotImplemented "Instruction LDRSW not yet implemented."
	397 Add X8, X8, X9
	398 Add X0, X8, 312
	399 Move X8, [X0]
	400 Move X1, [X0+8]
	401 Move X0, X22
	402 NotImplemented "Instruction BLR not yet implemented."
	403 Move X22, X0
	404 Compare X0, 0
	405 JumpIfEqual {662}
	406 Move X23, 0xC74000
	407 Move X24, 0xC75000
	408 Move X23, [X23+3608]
	409 Move X24, [X24+800]
	410 Move X8, [X22]
	411 Move X1, [X23]
	412 NotImplemented "Instruction LDRH not yet implemented."
	413 Compare X9, 0
	414 JumpIfEqual {421}
	415 Move X10, [X8+176]
	416 Add X10, X10, 8
	417 NotImplemented "Instruction LDUR not yet implemented."
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Subtract X9, X9, 1
	420 Add X10, X10, 16
	421 Move X0, X22
	422 Move W2, W31
	423 Call 0x1C5D788
	424 NotImplemented "Instruction LDRSW not yet implemented."
	425 Add X8, X8, X9
	426 Add X0, X8, 312
	427 Move X8, [X0]
	428 Move X1, [X0+8]
	429 Move X0, X22
	430 NotImplemented "Instruction BLR not yet implemented."
	431 Move TEMP, X0
	432 And TEMP, TEMP, 1
	433 Compare TEMP, 1
	434 JumpIfNotEqual {464}
	435 Move X8, [X22]
	436 Move X1, [X24]
	437 NotImplemented "Instruction LDRH not yet implemented."
	438 Compare X9, 0
	439 JumpIfEqual {446}
	440 Move X10, [X8+176]
	441 Add X10, X10, 8
	442 NotImplemented "Instruction LDUR not yet implemented."
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Subtract X9, X9, 1
	445 Add X10, X10, 16
	446 Move X0, X22
	447 Move W2, W31
	448 Call 0x1C5D788
	449 NotImplemented "Instruction LDRSW not yet implemented."
	450 Add X8, X8, X9
	451 Add X0, X8, 312
	452 Move X8, [X0]
	453 Move X1, [X0+8]
	454 Move X0, X22
	455 NotImplemented "Instruction BLR not yet implemented."
	456 Move X1, X0
	457 Move X8, [X19+88]
	458 Compare X8, 0
	459 JumpIfEqual {410}
	460 Move X0, [X8+64]
	461 Move X9, [X8+24]
	462 Move X2, [X8+40]
	463 NotImplemented "Instruction BLR not yet implemented."
	464 Move X23, X31
	465 Move W24, W31
	466 Compare X22, 0
	467 JumpIfEqual {491}
	468 Move X10, 0xC74000
	469 Move X8, [X22]
	470 Move X10, [X10+3584]
	471 NotImplemented "Instruction LDRH not yet implemented."
	472 Move X1, [X10]
	473 Compare X9, 0
	474 JumpIfEqual {481}
	475 Move X10, [X8+176]
	476 Add X10, X10, 8
	477 NotImplemented "Instruction LDUR not yet implemented."
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Subtract X9, X9, 1
	480 Add X10, X10, 16
	481 Move X0, X22
	482 Move W2, W31
	483 Call 0x1C5D788
	484 NotImplemented "Instruction LDRSW not yet implemented."
	485 Add X8, X8, X9
	486 Add X0, X8, 312
	487 Move X8, [X0]
	488 Move X1, [X0+8]
	489 Move X0, X22
	490 NotImplemented "Instruction BLR not yet implemented."
	491 Compare X23, 0
	492 JumpIfNotEqual {663}
	493 Compare W24, 0
	494 JumpIfEqual {764}
	495 Move X1, [X21+224]
	496 Compare X1, 0
	497 JumpIfEqual {505}
	498 Move X8, [X19+96]
	499 Compare X8, 0
	500 JumpIfEqual {764}
	501 Move X0, [X8+64]
	502 Move X9, [X8+24]
	503 Move X2, [X8+40]
	504 NotImplemented "Instruction BLR not yet implemented."
	505 Move X1, [X21+248]
	506 Compare X1, 0
	507 JumpIfEqual {515}
	508 Move X8, [X19+104]
	509 Compare X8, 0
	510 JumpIfEqual {764}
	511 Move X0, [X8+64]
	512 Move X9, [X8+24]
	513 Move X2, [X8+40]
	514 NotImplemented "Instruction BLR not yet implemented."
	515 Move X1, [X21+256]
	516 Compare X1, 0
	517 JumpIfEqual {525}
	518 Move X8, [X19+112]
	519 Compare X8, 0
	520 JumpIfEqual {764}
	521 Move X0, [X8+64]
	522 Move X9, [X8+24]
	523 Move X2, [X8+40]
	524 NotImplemented "Instruction BLR not yet implemented."
	525 Move X1, [X21+264]
	526 Compare X1, 0
	527 JumpIfEqual {535}
	528 Move X8, [X19+120]
	529 Compare X8, 0
	530 JumpIfEqual {764}
	531 Move X0, [X8+64]
	532 Move X9, [X8+24]
	533 Move X2, [X8+40]
	534 NotImplemented "Instruction BLR not yet implemented."
	535 Move X1, [X21+328]
	536 Compare X1, 0
	537 JumpIfEqual {545}
	538 Move X8, [X19+128]
	539 Compare X8, 0
	540 JumpIfEqual {764}
	541 Move X0, [X8+64]
	542 Move X9, [X8+24]
	543 Move X2, [X8+40]
	544 NotImplemented "Instruction BLR not yet implemented."
	545 Move X1, [X21+376]
	546 Compare X1, 0
	547 JumpIfEqual {555}
	548 Move X8, [X19+136]
	549 Compare X8, 0
	550 JumpIfEqual {764}
	551 Move X0, [X8+64]
	552 Move X9, [X8+24]
	553 Move X2, [X8+40]
	554 NotImplemented "Instruction BLR not yet implemented."
	555 Move X1, [X21+344]
	556 Compare X1, 0
	557 JumpIfEqual {566}
	558 Move X8, [X19+144]
	559 Compare X8, 0
	560 JumpIfEqual {764}
	561 Move X0, [X8+64]
	562 Move X9, [X8+24]
	563 Move X2, [X8+40]
	564 NotImplemented "Instruction BLR not yet implemented."
	565 Call 0x1C17F20
	566 Move X1, [X21+304]
	567 Compare X1, 0
	568 JumpIfEqual {578}
	569 Move X8, [X19+152]
	570 Compare X8, 0
	571 JumpIfEqual {764}
	572 Move X0, [X8+64]
	573 Move X9, [X8+24]
	574 Move X2, [X8+40]
	575 NotImplemented "Instruction BLR not yet implemented."
	576 Call 0x1C17F20
	577 Call 0x1C17F28
	578 Move X1, [X21+368]
	579 Compare X1, 0
	580 JumpIfEqual {596}
	581 Move X8, [X19+168]
	582 Compare X8, 0
	583 JumpIfEqual {764}
	584 Move X0, [X8+64]
	585 Move X9, [X8+24]
	586 Move X2, [X8+40]
	587 NotImplemented "Instruction BLR not yet implemented."
	588 Call 0x1C17F20
	589 Move X0, X25
	590 Call 0x1C17F18
	591 Call 0x1C17F44
	592 Move X1, X31
	593 Call 0x1C17DEC
	594 Call 0x1C17F20
	595 Call 0x1C17F20
	596 Move X1, [X21+392]
	597 Compare X1, 0
	598 JumpIfEqual {613}
	599 Move X8, [X19+160]
	600 Compare X8, 0
	601 JumpIfEqual {764}
	602 Move X0, [X8+64]
	603 Move X9, [X8+24]
	604 Move X2, [X8+40]
	605 NotImplemented "Instruction BLR not yet implemented."
	606 Call 0x1C17F20
	607 Call 0x1C17F28
	608 Call 0x1C17F20
	609 Call 0x1C17F44
	610 Move X1, X31
	611 Call 0x1C17DEC
	612 Call 0x1C17F20
	613 Move X21, [X19+176]
	614 Compare X21, 0
	615 JumpIfEqual {764}
	616 Move X0, [X27]
	617 Move W1, 1
	618 Call 0x1C17D6C
	619 Move X22, X0
	620 Compare X0, 0
	621 JumpIfEqual {665}
	622 Compare X20, 0
	623 JumpIfEqual {630}
	624 Move X8, [X22]
	625 Move X1, [X8+64]
	626 Move X0, X20
	627 Call 0x1C17E00
	628 Compare X0, 0
	629 JumpIfEqual {667}
	630 Move W8, [X22+24]
	631 Compare W8, 0
	632 JumpIfEqual {666}
	633 Move [X22+32], X20
	634 Move X10, 0xCB1000
	635 Move X8, [X21]
	636 Move X1, [X26]
	637 Move X10, [X10+3632]
	638 NotImplemented "Instruction LDRH not yet implemented."
	639 Move X20, [X10]
	640 Compare X9, 0
	641 JumpIfEqual {648}
	642 Move X10, [X8+176]
	643 Add X10, X10, 8
	644 NotImplemented "Instruction LDUR not yet implemented."
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Subtract X9, X9, 1
	647 Add X10, X10, 16
	648 Move W2, 1
	649 Move X0, X21
	650 Call 0x1C5D788
	651 Move W9, [X10]
	652 Add W9, W9, 1
	653 Add X8, X8, W9
	654 Add X0, X8, 312
	655 Move X8, [X0]
	656 Move X3, [X0+8]
	657 Move X0, X21
	658 Move X1, X20
	659 Move X2, X22
	660 NotImplemented "Instruction BLR not yet implemented."
	661 Call 0x1C17F20
	662 Call 0x1C17F20
	663 Move X0, X23
	664 Call 0x1C17F18
	665 Call 0x1C17F20
	666 Call 0x1C17F28
	667 Call 0x1C17F44
	668 Move X1, X31
	669 Call 0x1C17DEC
	670 Move X23, X1
	671 Move X24, X0
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Move X0, X24
	674 Call 0x3EB2AD0
	675 Move X8, [X0]
	676 Move [X31], X8
	677 Call 0x3EB2AE0
	678 Move X23, [X31]
	679 Move W24, 1
	680 Compare X22, 0
	681 JumpIfNotEqual {468}
	682 Move [X31], X31
	683 Compare X22, 0
	684 JumpIfEqual {708}
	685 Move X10, 0xC74000
	686 Move X8, [X22]
	687 Move X10, [X10+3584]
	688 NotImplemented "Instruction LDRH not yet implemented."
	689 Move X1, [X10]
	690 Compare X9, 0
	691 JumpIfEqual {698}
	692 Move X10, [X8+176]
	693 Add X10, X10, 8
	694 NotImplemented "Instruction LDUR not yet implemented."
	695 NotImplemented "Instruction CMP not yet implemented."
	696 Subtract X9, X9, 1
	697 Add X10, X10, 16
	698 Move X0, X22
	699 Move W2, W31
	700 Call 0x1C5D788
	701 NotImplemented "Instruction LDRSW not yet implemented."
	702 Add X8, X8, X9
	703 Add X0, X8, 312
	704 Move X8, [X0]
	705 Move X1, [X0+8]
	706 Move X0, X22
	707 NotImplemented "Instruction BLR not yet implemented."
	708 Move X8, [X31]
	709 Compare X8, 0
	710 JumpIfEqual {740}
	711 Move X0, [X31]
	712 Call 0x1C17F18
	713 Move X23, X1
	714 Move X24, X0
	715 Compare X22, 0
	716 JumpIfNotEqual {685}
	717 Move X23, X1
	718 Move X24, X0
	719 NotImplemented "Instruction CMP not yet implemented."
	720 Move X0, X24
	721 Call 0x3EB2AD0
	722 Move X25, [X0]
	723 Call 0x3EB2AE0
	724 Move W23, 1
	725 Move X25, X31
	726 Move W8, [X31+12]
	727 Compare W8, 0
	728 JumpIfEqual {732}
	729 Move X0, X22
	730 Move X1, X31
	731 Call Monitor.Exit, X0
	732 Compare X25, 0
	733 JumpIfEqual {740}
	734 Move X0, X25
	735 Call 0x1C17F18
	736 Move X23, X1
	737 Move X24, X0
	738 Move X23, X1
	739 Move X24, X0
	740 NotImplemented "Instruction CMP not yet implemented."
	741 Move X0, X24
	742 Call 0x3EB2AD0
	743 Move X20, X0
	744 Move X0, 0xC74000
	745 Move X0, [X0+2000]
	746 Call 0x1C17D08
	747 Move X8, [X20]
	748 Move X1, [X8]
	749 Call 0x1C18270
	750 Move TEMP, X0
	751 And TEMP, TEMP, 1
	752 Compare TEMP, 1
	753 JumpIfNotEqual {776}
	754 Move X20, [X20]
	755 Call 0x3EB2AE0
	756 Move X8, [X19+56]
	757 Compare X8, 0
	758 JumpIfEqual {764}
	759 Move X9, [X8+24]
	760 Move X0, [X8+64]
	761 Move X2, [X8+40]
	762 Move X1, X20
	763 NotImplemented "Instruction BLR not yet implemented."
	764 Move X20, [X31+80]
	765 Move X19, [X31+88]
	766 Move X22, [X31+64]
	767 Move X21, [X31+72]
	768 Move X24, [X31+48]
	769 Move X23, [X31+56]
	770 Move X26, [X31+32]
	771 Move X25, [X31+40]
	772 Move X30, [X31+16]
	773 Move X27, [X31+24]
	774 Add X31, X31, 96
	775 Return 
	776 Move W0, 8
	777 Call 0x3EB2AF0
	778 Move X8, [X20]
	779 Move [X0], X8
	780 Move X1, 0xA35000
	781 Add X1, X1, 3672
	782 Move X2, X31
	783 Call 0x3EB2B00
	784 Move X24, X0
	785 Call 0x3EB2AE0
	786 Move X0, X24
	787 Call 0x1D2D690
	788 Call 0x1991590

Method: System.Threading.Tasks.Task`1<Nakama.WebSocketMessageEnvelope> SendAsync(Nakama.WebSocketMessageEnvelope envelope)

Disassembly:
	0x0347CA8C LDR X23, [X23 + 0x110]
	0x0347CA90 MOV X20, X1
	0x0347CA94 MOV X19, X0
	0x0347CA98 TBNZ X8, 0x0, 0x347CAD4
	0x0347CA9C ADRP X0, 0xCB4000
	0x0347CAA0 LDR X0, [X0 + 0xCF8]
	0x0347CAA4 BL 0x1C16CF4
	0x0347CAA8 ADRP X0, 0xC77000
	0x0347CAAC LDR X0, [X0 + 0x758]
	0x0347CAB0 BL 0x1C16CF4
	0x0347CAB4 ADRP X0, 0xCB4000
	0x0347CAB8 LDR X0, [X0 + 0xBC8]
	0x0347CABC BL 0x1C16CF4
	0x0347CAC0 ADRP X0, 0xC7B000
	0x0347CAC4 LDR X0, [X0 + 0x110]
	0x0347CAC8 BL 0x1C16CF4
	0x0347CACC MOVZ W8, 0x1
	0x0347CAD0 STRB W8, [X22 + 0x893]
	0x0347CAD4 ADD X0, X19, 0x10
	0x0347CAD8 MOV X1, X31
	0x0347CADC BL 0x33EB14C
	0x0347CAE0 LDR X8, [X21]
	0x0347CAE4 MOV W22, W0
	0x0347CAE8 MOV X0, X8
	0x0347CAEC BL 0x1C16F10
	0x0347CAF0 MOV X1, X31
	0x0347CAF4 MOV X21, X0
	0x0347CAF8 BL 0x348068C
	0x0347CAFC LDR X0, [X24]
	0x0347CB00 ADD X1, X31, 0xC
	0x0347CB04 STR W22, [X31 + 0xC]
	0x0347CB08 BL 0x1C16E04
	0x0347CB0C LDR X8, [X23]
	0x0347CB10 MOV X1, X0
	0x0347CB14 MOV X2, X31
	0x0347CB18 MOV X0, X8
	0x0347CB1C BL 0x321EFD0
	0x0347CB20 CBZ X21, 0x347CB70
	0x0347CB24 ADRP X8, 0xCB4000
	0x0347CB28 LDR X8, [X8 + 0xCF8]
	0x0347CB2C STR X0, [X21 + 0x10]
	0x0347CB30 LDR X0, [X8]
	0x0347CB34 BL 0x1C16F10
	0x0347CB38 MOV X1, X31
	0x0347CB3C MOV X22, X0
	0x0347CB40 BL 0x343ED24
	0x0347CB44 CBZ X22, 0x347CB70
	0x0347CB48 MOV X0, X19
	0x0347CB4C MOV X1, X21
	0x0347CB50 STR X20, [X22 + 0x10]
	0x0347CB54 STR X22, [X21 + 0x28]
	0x0347CB58 BL 0x347BA8C
	0x0347CB5C LDP X20, X19, [X31 + 0x30]
	0x0347CB60 LDP X22, X21, [X31 + 0x20]
	0x0347CB64 LDP X24, X23, [X31 + 0x10]
	0x0347CB68 LDR X30, [X31], #0x40
	0x0347CB6C RET
	0x0347CB70 BL 0x1C16F20
	0x0347CB74 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X22, 0xF62000
	009 Move X21, 0xCB5000
	010 Move W8, [X22+2224]
	011 Move X21, [X21+3032]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xCB5000
	019 Move X0, [X0+3040]
	020 Call 0x1C17CF4
	021 Move X0, 0xCB5000
	022 Move X0, [X0+3048]
	023 Call 0x1C17CF4
	024 Move X0, 0xCB5000
	025 Move X0, [X0+3056]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB5000
	028 Move X0, [X0+3032]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+2224], W8
	032 Move X0, [X21]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+64], X31
	035 Move [X31+32], V0
	036 Move [X31+40], V0
	037 Move [X31], V0
	038 Move [X31+8], V0
	039 Move X21, 0xCB5000
	040 Move X23, 0xCB5000
	041 Move X22, 0xCB5000
	042 Move W8, [X0+224]
	043 Move X21, [X21+3040]
	044 Move X23, [X23+3048]
	045 Move X22, [X22+3056]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, [X21]
	050 Add X8, X31, 0
	051 Or X21, X8, 15
	052 Move X8, X21
	053 Call AsyncTaskMethodBuilder`1<Object>.Create
	054 Move X2, [X23]
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W8, TEMP
	058 Add X1, X31, 0
	059 Move X0, X21
	060 Move [X31+32], X20
	061 Move [X31+40], X19
	062 Move [X31], W8
	063 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	064 Move X1, [X22]
	065 Move X0, X21
	066 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	067 Move X20, [X31+112]
	068 Move X19, [X31+120]
	069 Move X22, [X31+96]
	070 Move X21, [X31+104]
	071 Move X30, [X31+80]
	072 Move X23, [X31+88]
	073 Add X31, X31, 128
	074 Return X0

Method: System.Collections.Generic.List`1<Nakama.UserPresence> BuildPresenceList(System.Collections.Generic.IEnumerable`1<Nakama.IUserPresence> presences)

Disassembly:
	0x0347EA0C MOV X0, X21
	0x0347EA10 MOV W2, W31
	0x0347EA14 BL 0x1C5C788
	0x0347EA18 B 0x347EA28
	0x0347EA1C LDRSW X9, [X10]
	0x0347EA20 ADD X8, X8, X9, 0x4, LSL
	0x0347EA24 ADD X0, X8, 0x138
	0x0347EA28 LDP X8, X1, [X0]
	0x0347EA2C MOV X0, X21
	0x0347EA30 BLR X8
	0x0347EA34 MOV X1, X0
	0x0347EA38 MOV X0, X20
	0x0347EA3C MOV X2, X19
	0x0347EA40 LDP X20, X19, [X31 + 0x20]
	0x0347EA44 LDP X22, X21, [X31 + 0x10]
	0x0347EA48 LDR X30, [X31], #0x30
	0x0347EA4C B 0x347EA54
	0x0347EA50 BL 0x1C16F20
	0x0347EA54 SUB X31, X31, 0x80
	0x0347EA58 STR X30, [X31 + 0x40]
	0x0347EA5C STP X24, X23, [X31 + 0x50]
	0x0347EA60 STP X22, X21, [X31 + 0x60]
	0x0347EA64 STP X20, X19, [X31 + 0x70]
	0x0347EA68 ADRP X23, 0xF5F000
	0x0347EA6C ADRP X22, 0xCB2000
	0x0347EA70 LDRB W8, [X23 + 0x8AC]
	0x0347EA74 LDR X22, [X22 + 0xD40]
	0x0347EA78 MOV X19, X2
	0x0347EA7C MOV X20, X1
	0x0347EA80 MOV X21, X0
	0x0347EA84 TBNZ X8, 0x0, 0x347EAC0
	0x0347EA88 ADRP X0, 0xCB2000
	0x0347EA8C LDR X0, [X0 + 0xD48]
	0x0347EA90 BL 0x1C16CF4
	0x0347EA94 ADRP X0, 0xCB2000
	0x0347EA98 LDR X0, [X0 + 0xDD0]
	0x0347EA9C BL 0x1C16CF4
	0x0347EAA0 ADRP X0, 0xCB2000
	0x0347EAA4 LDR X0, [X0 + 0xD58]
	0x0347EAA8 BL 0x1C16CF4
	0x0347EAAC ADRP X0, 0xCB2000
	0x0347EAB0 LDR X0, [X0 + 0xD40]
	0x0347EAB4 BL 0x1C16CF4
	0x0347EAB8 MOVZ W8, 0x1
	0x0347EABC STRB W8, [X23 + 0x8AC]
	0x0347EAC0 LDR X0, [X22]
	0x0347EAC4 MOVI V0.2D, 0x0
	0x0347EAC8 STP V0, V0, [X31 + 0x20]
	0x0347EACC STP V0, V0, [X31]
	0x0347EAD0 ADRP X22, 0xCB2000
	0x0347EAD4 ADRP X24, 0xCB2000
	0x0347EAD8 ADRP X23, 0xCB2000
	0x0347EADC LDR W8, [X0 + 0xE0]
	0x0347EAE0 LDR X22, [X22 + 0xD48]
	0x0347EAE4 LDR X24, [X24 + 0xDD0]
	0x0347EAE8 LDR X23, [X23 + 0xD58]
	0x0347EAEC CBNZ W8, 0x347EAF4
	0x0347EAF0 BL 0x1C16DFC
	0x0347EAF4 LDR X0, [X22]
	0x0347EAF8 ADD X8, X31, 0x0
	0x0347EAFC ORR X22, X8, 0xF
	0x0347EB00 MOV X8, X22
	0x0347EB04 BL 0x263221C
	0x0347EB08 LDR X2, [X24]
	0x0347EB0C MOVN W8, 0x0
	0x0347EB10 ADD X1, X31, 0x0
	0x0347EB14 MOV X0, X22
	0x0347EB18 STP X21, X20, [X31 + 0x20]
	0x0347EB1C STR X19, [X31 + 0x30]
	0x0347EB20 STR W8, [X31]
	0x0347EB24 BL 0x1FD1514
	0x0347EB28 LDR X1, [X23]
	0x0347EB2C MOV X0, X22
	0x0347EB30 BL 0x2632230
	0x0347EB34 LDP X20, X19, [X31 + 0x70]
	0x0347EB38 LDP X22, X21, [X31 + 0x60]
	0x0347EB3C LDP X24, X23, [X31 + 0x50]
	0x0347EB40 LDR X30, [X31 + 0x40]
	0x0347EB44 ADD X31, X31, 0x80
	0x0347EB48 RET
	0x0347EB4C STP X30, X21, [X31 - 0x20]!
	0x0347EB50 STP X20, X19, [X31 + 0x10]
	0x0347EB54 ADRP X20, 0xF5F000
	0x0347EB58 ADRP X21, 0xCB2000
	0x0347EB5C LDRB W8, [X20 + 0x8AD]
	0x0347EB60 LDR X21, [X21 + 0xDD8]
	0x0347EB64 MOV X19, X0
	0x0347EB68 TBNZ X8, 0x0, 0x347EB80
	0x0347EB6C ADRP X0, 0xCB2000
	0x0347EB70 LDR X0, [X0 + 0xDD8]
	0x0347EB74 BL 0x1C16CF4
	0x0347EB78 MOVZ W8, 0x1
	0x0347EB7C STRB W8, [X20 + 0x8AD]
	0x0347EB80 LDR X0, [X21]
	0x0347EB84 BL 0x1C16F10
	0x0347EB88 MOVZ W1, 0xF
	0x0347EB8C MOVZ W2, 0xA
	0x0347EB90 MOVZ W3, 0x40000
	0x0347EB94 MOV X4, X31
	0x0347EB98 MOV X5, X31
	0x0347EB9C MOV X20, X0
	0x0347EBA0 BL 0x3484F1C
	0x0347EBA4 MOV X0, X19
	0x0347EBA8 MOV X1, X20
	0x0347EBAC LDP X20, X19, [X31 + 0x10]
	0x0347EBB0 LDP X30, X21, [X31], #0x20
	0x0347EBB4 B 0x347EBB8
	0x0347EBB8 STP X30, X25, [X31 - 0x40]!
	0x0347EBBC STP X24, X23, [X31 + 0x10]
	0x0347EBC0 STP X22, X21, [X31 + 0x20]
	0x0347EBC4 STP X20, X19, [X31 + 0x30]
	0x0347EBC8 ADRP X21, 0xF5F000
	0x0347EBCC LDRB W8, [X21 + 0x8AE]
	0x0347EBD0 MOV X20, X1
	0x0347EBD4 MOV X19, X0
	0x0347EBD8 TBNZ X8, 0x0, 0x347EC20
	0x0347EBDC ADRP X0, 0xC77000
	0x0347EBE0 LDR X0, [X0 + 0xA18]
	0x0347EBE4 BL 0x1C16CF4
	0x0347EBE8 ADRP X0, 0xCB2000
	0x0347EBEC LDR X0, [X0 + 0xDE0]
	0x0347EBF0 BL 0x1C16CF4
	0x0347EBF4 ADRP X0, 0xCB2000
	0x0347EBF8 LDR X0, [X0 + 0xDE8]
	0x0347EBFC BL 0x1C16CF4
	0x0347EC00 ADRP X0, 0xC7E000
	0x0347EC04 LDR X0, [X0 + 0x3A8]
	0x0347EC08 BL 0x1C16CF4
	0x0347EC0C ADRP X0, 0xCB1000
	0x0347EC10 LDR X0, [X0 + 0x5E8]
	0x0347EC14 BL 0x1C16CF4
	0x0347EC18 MOVZ W8, 0x1
	0x0347EC1C STRB W8, [X21 + 0x8AE]
	0x0347EC20 CBZ X19, 0x347EE34
	0x0347EC24 ADRP X25, 0xC77000
	0x0347EC28 LDR X8, [X19]
	0x0347EC2C LDR X25, [X25 + 0xA18]
	0x0347EC30 LDRH W9, [X8 + 0x12E]
	0x0347EC34 LDR X1, [X25]
	0x0347EC38 CBZ X9, 0x347EC5C
	0x0347EC3C LDR X10, [X8 + 0xB0]
	0x0347EC40 ADD X10, X10, 0x8
	0x0347EC44 LDUR X11, [X10 - 0x8]
	0x0347EC48 CMP X11, X1
	0x0347EC4C B.EQ 0x347EC6C
	0x0347EC50 SUBS X9, X9, 0x1
	0x0347EC54 ADD X10, X10, 0x10
	0x0347EC58 B.NE 0x347EC44
	0x0347EC5C MOVZ W2, 0x5
	0x0347EC60 MOV X0, X19
	0x0347EC64 BL 0x1C5C788
	0x0347EC68 B 0x347EC7C
	0x0347EC6C LDR W9, [X10]
	0x0347EC70 ADD W9, W9, 0x5
	0x0347EC74 ADD X8, X8, W9, 0x4, SXTW
	0x0347EC78 ADD X0, X8, 0x138
	0x0347EC7C LDP X8, X1, [X0]
	0x0347EC80 MOV X0, X19
	0x0347EC84 BLR X8
	0x0347EC88 CBZ X0, 0x347EE34
	0x0347EC8C MOV X1, X31
	0x0347EC90 BL 0x322B5E4
	0x0347EC94 CBZ X0, 0x347EE34
	0x0347EC98 ADRP X8, 0xCB1000
	0x0347EC9C LDR X8, [X8 + 0x5E8]
	0x0347ECA0 ADRP X21, 0xC7E000
	0x0347ECA4 ADRP X22, 0xCB2000
	0x0347ECA8 MOV X2, X31
	0x0347ECAC LDR X1, [X8]
	0x0347ECB0 LDR X21, [X21 + 0x3A8]
	0x0347ECB4 LDR X22, [X22 + 0xDE8]
	0x0347ECB8 BL 0x322693C
	0x0347ECBC LDR X8, [X19]
	0x0347ECC0 ANDS W31, W0, 0x1
	0x0347ECC4 CSEL X9, X21, X22, NE
	0x0347ECC8 LDR X21, [X9]
	0x0347ECCC LDRH W9, [X8 + 0x12E]
	0x0347ECD0 LDR X1, [X25]
	0x0347ECD4 CBZ X9, 0x347ECF8
	0x0347ECD8 LDR X10, [X8 + 0xB0]
	0x0347ECDC ADD X10, X10, 0x8
	0x0347ECE0 LDUR X11, [X10 - 0x8]
	0x0347ECE4 CMP X11, X1
	0x0347ECE8 B.EQ 0x347ED08
	0x0347ECEC SUBS X9, X9, 0x1
	0x0347ECF0 ADD X10, X10, 0x10
	0x0347ECF4 B.NE 0x347ECE0
	0x0347ECF8 MOVZ W2, 0x3
	0x0347ECFC MOV X0, X19
	0x0347ED00 BL 0x1C5C788
	0x0347ED04 B 0x347ED18
	0x0347ED08 LDR W9, [X10]
	0x0347ED0C ADD W9, W9, 0x3
	0x0347ED10 ADD X8, X8, W9, 0x4, SXTW
	0x0347ED14 ADD X0, X8, 0x138
	0x0347ED18 LDP X8, X1, [X0]
	0x0347ED1C ADRP X22, 0xCB2000
	0x0347ED20 LDR X22, [X22 + 0xDE0]
	0x0347ED24 MOV X0, X19
	0x0347ED28 BLR X8
	0x0347ED2C LDR X8, [X19]
	0x0347ED30 LDR X1, [X25]
	0x0347ED34 MOV X23, X0
	0x0347ED38 LDRH W9, [X8 + 0x12E]
	0x0347ED3C CBZ X9, 0x347ED60
	0x0347ED40 LDR X10, [X8 + 0xB0]
	0x0347ED44 ADD X10, X10, 0x8
	0x0347ED48 LDUR X11, [X10 - 0x8]
	0x0347ED4C CMP X11, X1
	0x0347ED50 B.EQ 0x347ED70
	0x0347ED54 SUBS X9, X9, 0x1
	0x0347ED58 ADD X10, X10, 0x10
	0x0347ED5C B.NE 0x347ED48
	0x0347ED60 MOVZ W2, 0x4
	0x0347ED64 MOV X0, X19
	0x0347ED68 BL 0x1C5C788
	0x0347ED6C B 0x347ED80
	0x0347ED70 LDR W9, [X10]
	0x0347ED74 ADD W9, W9, 0x4
	0x0347ED78 ADD X8, X8, W9, 0x4, SXTW
	0x0347ED7C ADD X0, X8, 0x138
	0x0347ED80 LDP X8, X1, [X0]
	0x0347ED84 MOV X0, X19
	0x0347ED88 BLR X8
	0x0347ED8C LDR X8, [X22]
	0x0347ED90 MOV W24, W0
	0x0347ED94 MOV X0, X8
	0x0347ED98 BL 0x1C16F10
	0x0347ED9C MOVZ W5, 0xA
	0x0347EDA0 MOV X1, X21
	0x0347EDA4 MOV X2, X23
	0x0347EDA8 MOV W3, W24
	0x0347EDAC MOV X4, X20
	0x0347EDB0 MOV X22, X0
	0x0347EDB4 BL 0x347B478
	0x0347EDB8 LDR X8, [X19]
	0x0347EDBC LDR X1, [X25]
	0x0347EDC0 LDRH W9, [X8 + 0x12E]
	0x0347EDC4 CBZ X9, 0x347EDE8
	0x0347EDC8 LDR X10, [X8 + 0xB0]
	0x0347EDCC ADD X10, X10, 0x8
	0x0347EDD0 LDUR X11, [X10 - 0x8]
	0x0347EDD4 CMP X11, X1
	0x0347EDD8 B.EQ 0x347EDF8
	0x0347EDDC SUBS X9, X9, 0x1
	0x0347EDE0 ADD X10, X10, 0x10
	0x0347EDE4 B.NE 0x347EDD0
	0x0347EDE8 MOVZ W2, 0xB
	0x0347EDEC MOV X0, X19
	0x0347EDF0 BL 0x1C5C788
	0x0347EDF4 B 0x347EE08
	0x0347EDF8 LDR W9, [X10]
	0x0347EDFC ADD W9, W9, 0xB
	0x0347EE00 ADD X8, X8, W9, 0x4, SXTW
	0x0347EE04 ADD X0, X8, 0x138
	0x0347EE08 LDP X8, X1, [X0]
	0x0347EE0C MOV X0, X19
	0x0347EE10 BLR X8
	0x0347EE14 CBZ X22, 0x347EE34
	0x0347EE18 STR X0, [X22 + 0xB0]
	0x0347EE1C MOV X0, X22
	0x0347EE20 LDP X20, X19, [X31 + 0x30]
	0x0347EE24 LDP X22, X21, [X31 + 0x20]
	0x0347EE28 LDP X24, X23, [X31 + 0x10]
	0x0347EE2C LDP X30, X25, [X31], #0x40
	0x0347EE30 RET
	0x0347EE34 BL 0x1C16F20
	0x0347EE38 SUB X31, X31, 0x60
	0x0347EE3C STP X30, X27, [X31 + 0x10]
	0x0347EE40 STP X26, X25, [X31 + 0x20]
	0x0347EE44 STP X24, X23, [X31 + 0x30]
	0x0347EE48 STP X22, X21, [X31 + 0x40]
	0x0347EE4C STP X20, X19, [X31 + 0x50]
	0x0347EE50 ADRP X23, 0xF5F000
	0x0347EE54 ADRP X22, 0xC9D000
	0x0347EE58 LDRB W8, [X23 + 0x8AF]
	0x0347EE5C LDR X22, [X22 + 0x5B0]
	0x0347EE60 MOV X20, X2
	0x0347EE64 MOV X21, X1
	0x0347EE68 MOV X19, X0
	0x0347EE6C TBNZ X8, 0x0, 0x347EF68

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xF60000
	009 Move W8, [X19+2225]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0xC76000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0xC76000
	019 Move X0, [X0+3920]
	020 Call 0x1C17CF4
	021 Move X0, 0xC76000
	022 Move X0, [X0+3928]
	023 Call 0x1C17CF4
	024 Move X0, 0xC76000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0xCB3000
	028 Move X0, [X0+3480]
	029 Call 0x1C17CF4
	030 Move X0, 0xCB3000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move X0, 0xCB3000
	034 Move X0, [X0+2104]
	035 Call 0x1C17CF4
	036 Move X0, 0xCB3000
	037 Move X0, [X0+2056]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+2225], W8
	041 Move X21, 0xCB3000
	042 Move X21, [X21+2104]
	043 Compare X20, 0
	044 JumpIfEqual {76}
	045 Move X8, [X20]
	046 Move X0, [X21]
	047 Move W10, [X8+304]
	048 Move W9, [X0+304]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X8+200]
	051 Add X8, X8, X9
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X19, 0xCB3000
	055 Move X21, 0xC76000
	056 Move X19, [X19+2296]
	057 Move X21, [X21+3920]
	058 Call 0x1C17F10
	059 Move X1, [X19]
	060 Move X19, X0
	061 Call List`1<Object>..ctor, X0
	062 Move X8, [X20]
	063 Move X1, [X21]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X20
	074 Move W2, W31
	075 Call 0x1C5D788
	076 Move X19, 0xCB3000
	077 Move X19, [X19+2056]
	078 Move X0, [X19]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X19]
	084 Move X8, [X0+184]
	085 Move X19, [X8]
	086 Compare X19, 0
	087 JumpIfEqual {226}
	088 Move X8, [X19]
	089 Move X1, [X21]
	090 Move W10, [X8+304]
	091 Move W9, [X1+304]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X8, [X8+200]
	094 Add X8, X8, X9
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X19
	098 Call 0x1C181E0
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X20
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X20, X0
	107 Compare X0, 0
	108 JumpIfEqual {239}
	109 Move X21, 0xC76000
	110 Move X22, 0xC76000
	111 Move X23, 0xCB3000
	112 Move X24, 0xCB3000
	113 Move X21, [X21+3608]
	114 Move X22, [X22+3928]
	115 Move X23, [X23+2056]
	116 Move X24, [X24+3480]
	117 Move X8, [X20]
	118 Move X1, [X21]
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Compare X9, 0
	121 JumpIfEqual {128}
	122 Move X10, [X8+176]
	123 Add X10, X10, 8
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Subtract X9, X9, 1
	127 Add X10, X10, 16
	128 Move X0, X20
	129 Move W2, W31
	130 Call 0x1C5D788
	131 NotImplemented "Instruction LDRSW not yet implemented."
	132 Add X8, X8, X9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X1, [X0+8]
	136 Move X0, X20
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {197}
	142 Move X8, [X20]
	143 Move X1, [X22]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move X0, X20
	154 Move W2, W31
	155 Call 0x1C5D788
	156 NotImplemented "Instruction LDRSW not yet implemented."
	157 Add X8, X8, X9
	158 Add X0, X8, 312
	159 Move X8, [X0]
	160 Move X1, [X0+8]
	161 Move X0, X20
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X8, X0
	164 Compare X0, 0
	165 JumpIfEqual {175}
	166 Move X9, [X8]
	167 Move X1, [X23]
	168 Move W11, [X9+304]
	169 Move W10, [X1+304]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X9, [X9+200]
	172 Add X9, X9, X10
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Compare X19, 0
	176 JumpIfEqual {237}
	177 Move W11, [X19+28]
	178 Move X9, [X19+16]
	179 Move X10, [X24]
	180 Add W11, W11, 1
	181 Move [X19+28], W11
	182 Compare X9, 0
	183 JumpIfEqual {238}
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 Move W12, [X9+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Add W10, W11, 1
	188 Add X9, X9, X11
	189 Move [X19+24], W10
	190 Move [X9+32], X8
	191 Move X9, [X10+32]
	192 Move X9, [X9+192]
	193 Move X2, [X9+112]
	194 Move X0, X19
	195 Move X1, X8
	196 Call List`1<Object>.AddWithResize, X0, X1
	197 Move X21, X31
	198 Compare X20, 0
	199 JumpIfEqual {224}
	200 Move X10, 0xC76000
	201 Move X8, [X20]
	202 Move X10, [X10+3584]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Move X1, [X10]
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move X0, X20
	214 Move W2, W31
	215 Call 0x1C5D788
	216 Move X19, X20
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Add X8, X8, X9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X1, [X0+8]
	222 Move X0, X20
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Compare X21, 0
	225 JumpIfNotEqual {240}
	226 Move X0, X19
	227 Move X20, [X31+48]
	228 Move X19, [X31+56]
	229 Move X22, [X31+32]
	230 Move X21, [X31+40]
	231 Move X24, [X31+16]
	232 Move X23, [X31+24]
	233 Move X30, [X31+64]
	234 Return X0
	235 Move X0, X8
	236 Call 0x1C181E0
	237 Call 0x1C17F20
	238 Call 0x1C17F20
	239 Call 0x1C17F20
	240 Move X0, X21
	241 Call 0x1C17F18
	242 Move X22, X0
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X0, X22
	245 Call 0x3EB2AD0
	246 Move X21, [X0]
	247 Call 0x3EB2AE0
	248 Move X21, X31
	249 Move X22, X0
	250 Compare X20, 0
	251 JumpIfEqual {275}
	252 Move X10, 0xC76000
	253 Move X8, [X20]
	254 Move X10, [X10+3584]
	255 NotImplemented "Instruction LDRH not yet implemented."
	256 Move X1, [X10]
	257 Compare X9, 0
	258 JumpIfEqual {265}
	259 Move X10, [X8+176]
	260 Add X10, X10, 8
	261 NotImplemented "Instruction LDUR not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Subtract X9, X9, 1
	264 Add X10, X10, 16
	265 Move X0, X20
	266 Move W2, W31
	267 Call 0x1C5D788
	268 NotImplemented "Instruction LDRSW not yet implemented."
	269 Add X8, X8, X9
	270 Add X0, X8, 312
	271 Move X8, [X0]
	272 Move X1, [X0+8]
	273 Move X0, X20
	274 NotImplemented "Instruction BLR not yet implemented."
	275 Compare X21, 0
	276 JumpIfNotEqual {279}
	277 Move X0, X22
	278 Call 0x1D2D690
	279 Move X0, X21
	280 Call 0x1C17F18
	281 Call 0x1991590

Method: System.Void <.ctor>b__75_0()

Disassembly:
	0x03480A14 ADRP X0, 0xCB0000
	0x03480A18 LDR X0, [X0 + 0xEC8]
	0x03480A1C BL 0x1C16D08
	0x03480A20 MOV X2, X0
	0x03480A24 MOV X0, X19
	0x03480A28 MOV X1, X20
	0x03480A2C BL 0x26324C8

ISIL:
	001 Move X8, [X0+32]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void <.ctor>b__75_1()

Disassembly:
	0x03480A30 B 0x3480964
	0x03480A34 MOVZ W0, 0x8
	0x03480A38 BL 0x3EB1AF0
	0x03480A3C LDR X8, [X20]
	0x03480A40 STR X8, [X0]
	0x03480A44 ADRP X1, 0xA34000
	0x03480A48 ADD X1, X1, 0xE58
	0x03480A4C MOV X2, X31
	0x03480A50 BL 0x3EB1B00
	0x03480A54 MOV X20, X0
	0x03480A58 BL 0x3EB1AE0
	0x03480A5C MOV X0, X20
	0x03480A60 BL 0x1D2C690
	0x03480A64 BL 0x1990590
	0x03480A68 STR X30, [X31 - 0x30]!
	0x03480A6C STP X22, X21, [X31 + 0x10]
	0x03480A70 STP X20, X19, [X31 + 0x20]
	0x03480A74 ADRP X22, 0xF5D000
	0x03480A78 ADRP X21, 0xCB0000
	0x03480A7C LDRB W8, [X22 + 0x8BB]
	0x03480A80 LDR X21, [X21 + 0xC18]
	0x03480A84 MOV X19, X1
	0x03480A88 MOV X20, X0
	0x03480A8C TBNZ X8, 0x0, 0x3480AB0
	0x03480A90 ADRP X0, 0xCB0000
	0x03480A94 LDR X0, [X0 + 0xED0]
	0x03480A98 BL 0x1C16CF4
	0x03480A9C ADRP X0, 0xCB0000
	0x03480AA0 LDR X0, [X0 + 0xC18]
	0x03480AA4 BL 0x1C16CF4
	0x03480AA8 MOVZ W8, 0x1
	0x03480AAC STRB W8, [X22 + 0x8BB]
	0x03480AB0 LDR X0, [X21]
	0x03480AB4 ADRP X21, 0xCB0000
	0x03480AB8 LDR W8, [X0 + 0xE0]
	0x03480ABC LDR X21, [X21 + 0xED0]
	0x03480AC0 CBNZ W8, 0x3480AC8
	0x03480AC4 BL 0x1C16DFC
	0x03480AC8 LDR X2, [X21]
	0x03480ACC ADD X0, X20, 0x8
	0x03480AD0 MOV X1, X19
	0x03480AD4 LDP X20, X19, [X31 + 0x20]
	0x03480AD8 LDP X22, X21, [X31 + 0x10]
	0x03480ADC LDR X30, [X31], #0x30
	0x03480AE0 B 0x2632228
	0x03480AE4 SUB X31, X31, 0x40
	0x03480AE8 STP X30, X23, [X31 + 0x10]
	0x03480AEC STP X22, X21, [X31 + 0x20]
	0x03480AF0 STP X20, X19, [X31 + 0x30]
	0x03480AF4 ADRP X20, 0xF5D000
	0x03480AF8 LDRB W8, [X20 + 0x8BC]
	0x03480AFC MOV X19, X0
	0x03480B00 TBNZ X8, 0x0, 0x3480B84
	0x03480B04 ADRP X0, 0xCB0000
	0x03480B08 LDR X0, [X0 + 0xED8]
	0x03480B0C BL 0x1C16CF4
	0x03480B10 ADRP X0, 0xCB0000
	0x03480B14 LDR X0, [X0 + 0xEE0]
	0x03480B18 BL 0x1C16CF4
	0x03480B1C ADRP X0, 0xCB0000
	0x03480B20 LDR X0, [X0 + 0xC50]
	0x03480B24 BL 0x1C16CF4
	0x03480B28 ADRP X0, 0xC73000
	0x03480B2C LDR X0, [X0 + 0x758]
	0x03480B30 BL 0x1C16CF4
	0x03480B34 ADRP X0, 0xCB0000
	0x03480B38 LDR X0, [X0 + 0xEE8]
	0x03480B3C BL 0x1C16CF4
	0x03480B40 ADRP X0, 0xCB0000
	0x03480B44 LDR X0, [X0 + 0xE88]
	0x03480B48 BL 0x1C16CF4
	0x03480B4C ADRP X0, 0xCB0000
	0x03480B50 LDR X0, [X0 + 0xE90]
	0x03480B54 BL 0x1C16CF4
	0x03480B58 ADRP X0, 0xCB0000
	0x03480B5C LDR X0, [X0 + 0xE98]
	0x03480B60 BL 0x1C16CF4
	0x03480B64 ADRP X0, 0xCB0000
	0x03480B68 LDR X0, [X0 + 0xBC8]
	0x03480B6C BL 0x1C16CF4
	0x03480B70 ADRP X0, 0xC77000
	0x03480B74 LDR X0, [X0 + 0x110]
	0x03480B78 BL 0x1C16CF4
	0x03480B7C MOVZ W8, 0x1
	0x03480B80 STRB W8, [X20 + 0x8BC]
	0x03480B84 STR X31, [X31 + 0x8]
	0x03480B88 ADRP X23, 0xCB0000
	0x03480B8C LDR W8, [X19]
	0x03480B90 LDR X23, [X23 + 0xC50]
	0x03480B94 CBZ W8, 0x3480CAC
	0x03480B98 LDR X20, [X19 + 0x20]
	0x03480B9C CBZ X20, 0x3480D24
	0x03480BA0 ADD X0, X20, 0x10
	0x03480BA4 MOV X1, X31
	0x03480BA8 BL 0x33EB14C
	0x03480BAC ADRP X8, 0xCB0000
	0x03480BB0 LDR X8, [X8 + 0xBC8]
	0x03480BB4 MOV W22, W0
	0x03480BB8 LDR X0, [X8]
	0x03480BBC BL 0x1C16F10
	0x03480BC0 MOV X21, X0
	0x03480BC4 MOV X1, X31
	0x03480BC8 BL 0x33BDD8C
	0x03480BCC ADRP X8, 0xC73000
	0x03480BD0 LDR X8, [X8 + 0x758]
	0x03480BD4 STR W22, [X31 + 0x4]
	0x03480BD8 LDR X0, [X8]
	0x03480BDC ADD X1, X31, 0x4
	0x03480BE0 BL 0x1C16E04
	0x03480BE4 MOV X1, X0
	0x03480BE8 ADRP X8, 0xC77000
	0x03480BEC LDR X8, [X8 + 0x110]
	0x03480BF0 LDR X0, [X8]
	0x03480BF4 MOV X2, X31
	0x03480BF8 BL 0x321EFD0
	0x03480BFC CBZ X21, 0x3480D28
	0x03480C00 ADRP X8, 0xCB0000
	0x03480C04 LDR X8, [X8 + 0xEE8]
	0x03480C08 STR X0, [X21 + 0x10]
	0x03480C0C LDR X0, [X8]
	0x03480C10 BL 0x1C16F10
	0x03480C14 MOV X22, X0
	0x03480C18 MOV X1, X31
	0x03480C1C BL 0x3475F64
	0x03480C20 CBZ X22, 0x3480D2C
	0x03480C24 LDR X8, [X19 + 0x28]
	0x03480C28 STR X8, [X22 + 0x10]
	0x03480C2C STR X22, [X21 + 0x90]
	0x03480C30 MOV X0, X20
	0x03480C34 MOV X1, X21
	0x03480C38 MOV X2, X31
	0x03480C3C BL 0x347BA8C
	0x03480C40 CBZ X0, 0x3480D30
	0x03480C44 ADRP X8, 0xCB0000
	0x03480C48 LDR X8, [X8 + 0xE98]
	0x03480C4C LDR X1, [X8]
	0x03480C50 BL 0x269F5D0
	0x03480C54 ADRP X8, 0xCB0000
	0x03480C58 LDR X8, [X8 + 0xE90]
	0x03480C5C STR X0, [X31 + 0x8]
	0x03480C60 LDR X1, [X8]
	0x03480C64 ADD X0, X31, 0x8
	0x03480C68 BL 0x2677430
	0x03480C6C TBNZ X0, 0x0, 0x3480CC0
	0x03480C70 STR W31, [X19]
	0x03480C74 LDR X8, [X31 + 0x8]
	0x03480C78 STR X8, [X19 + 0x30]
	0x03480C7C LDR X0, [X23]
	0x03480C80 LDR W8, [X0 + 0xE0]
	0x03480C84 CBNZ W8, 0x3480C8C
	0x03480C88 BL 0x1C16DFC
	0x03480C8C ADRP X8, 0xCB0000
	0x03480C90 LDR X8, [X8 + 0xED8]
	0x03480C94 ADD X0, X19, 0x8
	0x03480C98 LDR X3, [X8]
	0x03480C9C ADD X1, X31, 0x8
	0x03480CA0 MOV X2, X19
	0x03480CA4 BL 0x1FC1A70
	0x03480CA8 B 0x3480D0C

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X20, 0xF5E000
	011 Move W8, [X20+2226]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xCB1000
	018 Move X0, [X0+3640]
	019 Call 0x1C17CF4
	020 Move X0, 0xCB1000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move X0, 0xCB1000
	024 Move X0, [X0+3656]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB1000
	027 Move X0, [X0+3664]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB1000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move X0, 0xCB1000
	033 Move X0, [X0+3680]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB1000
	036 Move X0, [X0+3688]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2226], W8
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X31+80], X31
	042 Move [X31+48], V0
	043 Move [X31+56], V0
	044 Move X20, [X19+216]
	045 Move [X31+92], W31
	046 Add X1, X31, 92
	047 Move X0, X20
	048 Move X2, X31
	049 Call Monitor.Enter, X0, X1
	050 Move X0, [X19+200]
	051 Compare X0, 0
	052 JumpIfEqual {128}
	053 Move X8, 0xCB1000
	054 Move X8, [X8+3648]
	055 Move X1, [X8]
	056 Add X8, X31, 8
	057 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	058 Move X22, 0xCB1000
	059 Move X24, 0xCB1000
	060 Move X23, 0xCB1000
	061 Move X22, [X22+3664]
	062 Move X24, [X24+3688]
	063 Move X23, [X23+3656]
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X8, [X31+40]
	067 Move X21, 0xCB1000
	068 Move X21, [X21+3640]
	069 Move [X31+48], V0
	070 Move [X31+56], V1
	071 Move [X31+80], X8
	072 Move X1, [X22]
	073 Add X0, X31, 48
	074 Call Enumerator<Object, Object>.MoveNext, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {84}
	079 Move X0, [X31+72]
	080 Compare X0, 0
	081 JumpIfEqual {125}
	082 Move X1, [X24]
	083 Call TaskCompletionSource`1<Object>.TrySetCanceled, X0
	084 Move X22, X31
	085 Move X1, [X23]
	086 Add X0, X31, 48
	087 Call Enumerator<Object, Object>.Dispose, X0
	088 Compare X22, 0
	089 JumpIfNotEqual {129}
	090 Move X0, [X19+200]
	091 Compare X0, 0
	092 JumpIfEqual {131}
	093 Move X1, [X21]
	094 Call Dictionary`2<Object, Object>.Clear, X0
	095 Move X21, X31
	096 Move W22, 5
	097 Move W8, [X31+92]
	098 Compare W8, 0
	099 JumpIfEqual {103}
	100 Move X0, X20
	101 Move X1, X31
	102 Call Monitor.Exit, X0
	103 Compare X21, 0
	104 JumpIfNotEqual {126}
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Compare W22, 0
	107 JumpIfNotEqual {115}
	108 Move X8, [X19+24]
	109 Compare X8, 0
	110 JumpIfEqual {115}
	111 Move X9, [X8+24]
	112 Move X0, [X8+64]
	113 Move X1, [X8+40]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X20, [X31+144]
	116 Move X19, [X31+152]
	117 Move X22, [X31+128]
	118 Move X21, [X31+136]
	119 Move X24, [X31+112]
	120 Move X23, [X31+120]
	121 Move X30, [X31+96]
	122 Move X25, [X31+104]
	123 Add X31, X31, 160
	124 Return 
	125 Call 0x1C17F20
	126 Move X0, X21
	127 Call 0x1C17F18
	128 Call 0x1C17F20
	129 Move X0, X22
	130 Call 0x1C17F18
	131 Call 0x1C17F20
	132 Move X24, X1
	133 Move X25, X0
	134 Move X25, X0
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, X25
	137 Call 0x3EB2AD0
	138 Move X22, [X0]
	139 Call 0x3EB2AE0
	140 Move X24, X1
	141 Move X22, X31
	142 Move X1, [X23]
	143 Add X0, X31, 48
	144 Call Enumerator<Object, Object>.Dispose, X0
	145 Compare X22, 0
	146 JumpIfNotEqual {154}
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X0, X25
	149 Call 0x3EB2AD0
	150 Move X21, [X0]
	151 Call 0x3EB2AE0
	152 Move W22, W31
	153 Move X21, X31
	154 Move X0, X22
	155 Call 0x1C17F18
	156 Move X24, X1
	157 Move X25, X0
	158 Move X25, X0
	159 Move W8, [X31+92]
	160 Compare W8, 0
	161 JumpIfEqual {165}
	162 Move X0, X20
	163 Move X1, X31
	164 Call Monitor.Exit, X0
	165 Compare X21, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X25
	168 Call 0x1D2D690
	169 Move X0, X21
	170 Call 0x1C17F18
	171 Call 0x1991590

Method: System.Void <.ctor>b__75_2(System.Exception e)

Disassembly:
	0x03480CAC LDR X8, [X19 + 0x30]
	0x03480CB0 MOVN W9, 0x0
	0x03480CB4 STR X8, [X31 + 0x8]
	0x03480CB8 STR X31, [X19 + 0x30]
	0x03480CBC STR W9, [X19]
	0x03480CC0 ADRP X8, 0xCB0000
	0x03480CC4 LDR X8, [X8 + 0xE88]
	0x03480CC8 ADD X0, X31, 0x8
	0x03480CCC LDR X1, [X8]
	0x03480CD0 BL 0x2677474
	0x03480CD4 CBZ X0, 0x3480D20
	0x03480CD8 MOVN W8, 0x1
	0x03480CDC LDR X20, [X0 + 0x88]
	0x03480CE0 STR W8, [X19], #0x8
	0x03480CE4 LDR X0, [X23]
	0x03480CE8 ADRP X21, 0xCB0000
	0x03480CEC LDR W8, [X0 + 0xE0]
	0x03480CF0 LDR X21, [X21 + 0xEE0]
	0x03480CF4 CBNZ W8, 0x3480CFC
	0x03480CF8 BL 0x1C16DFC
	0x03480CFC LDR X2, [X21]
	0x03480D00 MOV X0, X19
	0x03480D04 MOV X1, X20
	0x03480D08 BL 0x26322B0
	0x03480D0C LDP X20, X19, [X31 + 0x30]
	0x03480D10 LDP X22, X21, [X31 + 0x20]
	0x03480D14 LDP X30, X23, [X31 + 0x10]
	0x03480D18 ADD X31, X31, 0x40
	0x03480D1C RET
	0x03480D20 BL 0x1C16F20
	0x03480D24 BL 0x1C16F20
	0x03480D28 BL 0x1C16F20
	0x03480D2C BL 0x1C16F20
	0x03480D30 BL 0x1C16F20
	0x03480D34 B 0x3480D60
	0x03480D38 B 0x3480D60
	0x03480D3C B 0x3480D60
	0x03480D40 B 0x3480D60
	0x03480D44 B 0x3480D60
	0x03480D48 B 0x3480D60
	0x03480D4C B 0x3480D60
	0x03480D50 B 0x3480D60
	0x03480D54 B 0x3480D60
	0x03480D58 B 0x3480D60
	0x03480D5C B 0x3480D60
	0x03480D60 MOV X20, X0
	0x03480D64 CMP W1, 0x1
	0x03480D68 B.NE 0x3480E04
	0x03480D6C MOV X0, X20
	0x03480D70 BL 0x3EB1AD0
	0x03480D74 MOV X20, X0
	0x03480D78 ADRP X0, 0xC73000
	0x03480D7C LDR X0, [X0 + 0x7D0]
	0x03480D80 BL 0x1C16D08
	0x03480D84 LDR X8, [X20]
	0x03480D88 LDR X1, [X8]
	0x03480D8C BL 0x1C17270
	0x03480D90 TBZ X0, 0x0, 0x3480DDC
	0x03480D94 LDR X20, [X20]
	0x03480D98 BL 0x3EB1AE0
	0x03480D9C MOVN W8, 0x1
	0x03480DA0 STR W8, [X19], #0x8
	0x03480DA4 ADRP X0, 0xCB0000
	0x03480DA8 LDR X0, [X0 + 0xC50]
	0x03480DAC BL 0x1C16D08
	0x03480DB0 LDR W8, [X0 + 0xE0]
	0x03480DB4 CBNZ W8, 0x3480DBC
	0x03480DB8 BL 0x1C16DFC
	0x03480DBC ADRP X0, 0xCB0000
	0x03480DC0 LDR X0, [X0 + 0xEF0]
	0x03480DC4 BL 0x1C16D08
	0x03480DC8 MOV X2, X0
	0x03480DCC MOV X0, X19
	0x03480DD0 MOV X1, X20
	0x03480DD4 BL 0x26324C8
	0x03480DD8 B 0x3480D0C
	0x03480DDC MOVZ W0, 0x8
	0x03480DE0 BL 0x3EB1AF0
	0x03480DE4 LDR X8, [X20]
	0x03480DE8 STR X8, [X0]
	0x03480DEC ADRP X1, 0xA34000
	0x03480DF0 ADD X1, X1, 0xE58
	0x03480DF4 MOV X2, X31
	0x03480DF8 BL 0x3EB1B00
	0x03480DFC MOV X20, X0
	0x03480E00 BL 0x3EB1AE0
	0x03480E04 MOV X0, X20
	0x03480E08 BL 0x1D2C690
	0x03480E0C BL 0x1990590
	0x03480E10 STR X30, [X31 - 0x30]!
	0x03480E14 STP X22, X21, [X31 + 0x10]
	0x03480E18 STP X20, X19, [X31 + 0x20]
	0x03480E1C ADRP X22, 0xF5D000
	0x03480E20 ADRP X21, 0xCB0000
	0x03480E24 LDRB W8, [X22 + 0x8BD]
	0x03480E28 LDR X21, [X21 + 0xC50]
	0x03480E2C MOV X19, X1
	0x03480E30 MOV X20, X0
	0x03480E34 TBNZ X8, 0x0, 0x3480E58
	0x03480E38 ADRP X0, 0xCB0000
	0x03480E3C LDR X0, [X0 + 0xEF8]
	0x03480E40 BL 0x1C16CF4
	0x03480E44 ADRP X0, 0xCB0000
	0x03480E48 LDR X0, [X0 + 0xC50]
	0x03480E4C BL 0x1C16CF4
	0x03480E50 MOVZ W8, 0x1
	0x03480E54 STRB W8, [X22 + 0x8BD]
	0x03480E58 LDR X0, [X21]
	0x03480E5C ADRP X21, 0xCB0000
	0x03480E60 LDR W8, [X0 + 0xE0]
	0x03480E64 LDR X21, [X21 + 0xEF8]
	0x03480E68 CBNZ W8, 0x3480E70
	0x03480E6C BL 0x1C16DFC
	0x03480E70 LDR X2, [X21]
	0x03480E74 ADD X0, X20, 0x8
	0x03480E78 MOV X1, X19
	0x03480E7C LDP X20, X19, [X31 + 0x20]
	0x03480E80 LDP X22, X21, [X31 + 0x10]
	0x03480E84 LDR X30, [X31], #0x30
	0x03480E88 B 0x2632228
	0x03480E8C SUB X31, X31, 0x40
	0x03480E90 STP X30, X23, [X31 + 0x10]
	0x03480E94 STP X22, X21, [X31 + 0x20]
	0x03480E98 STP X20, X19, [X31 + 0x30]
	0x03480E9C ADRP X20, 0xF5D000
	0x03480EA0 LDRB W8, [X20 + 0x8BE]
	0x03480EA4 MOV X19, X0
	0x03480EA8 TBNZ X8, 0x0, 0x3480F2C
	0x03480EAC ADRP X0, 0xCB0000
	0x03480EB0 LDR X0, [X0 + 0xF00]
	0x03480EB4 BL 0x1C16CF4
	0x03480EB8 ADRP X0, 0xCB0000
	0x03480EBC LDR X0, [X0 + 0xF08]
	0x03480EC0 BL 0x1C16CF4
	0x03480EC4 ADRP X0, 0xCB0000
	0x03480EC8 LDR X0, [X0 + 0xC70]
	0x03480ECC BL 0x1C16CF4
	0x03480ED0 ADRP X0, 0xC73000
	0x03480ED4 LDR X0, [X0 + 0x758]
	0x03480ED8 BL 0x1C16CF4
	0x03480EDC ADRP X0, 0xCB0000
	0x03480EE0 LDR X0, [X0 + 0xF10]
	0x03480EE4 BL 0x1C16CF4
	0x03480EE8 ADRP X0, 0xCB0000
	0x03480EEC LDR X0, [X0 + 0xE88]
	0x03480EF0 BL 0x1C16CF4
	0x03480EF4 ADRP X0, 0xCB0000
	0x03480EF8 LDR X0, [X0 + 0xE90]
	0x03480EFC BL 0x1C16CF4
	0x03480F00 ADRP X0, 0xCB0000
	0x03480F04 LDR X0, [X0 + 0xE98]
	0x03480F08 BL 0x1C16CF4
	0x03480F0C ADRP X0, 0xCB0000
	0x03480F10 LDR X0, [X0 + 0xBC8]
	0x03480F14 BL 0x1C16CF4
	0x03480F18 ADRP X0, 0xC77000
	0x03480F1C LDR X0, [X0 + 0x110]
	0x03480F20 BL 0x1C16CF4
	0x03480F24 MOVZ W8, 0x1
	0x03480F28 STRB W8, [X20 + 0x8BE]
	0x03480F2C STR X31, [X31 + 0x8]
	0x03480F30 ADRP X23, 0xCB0000
	0x03480F34 LDR W8, [X19]
	0x03480F38 LDR X23, [X23 + 0xC70]
	0x03480F3C CBZ W8, 0x348105C
	0x03480F40 LDR X20, [X19 + 0x20]
	0x03480F44 CBZ X20, 0x34810D4
	0x03480F48 ADD X0, X20, 0x10
	0x03480F4C MOV X1, X31
	0x03480F50 BL 0x33EB14C
	0x03480F54 ADRP X8, 0xCB0000
	0x03480F58 LDR X8, [X8 + 0xBC8]
	0x03480F5C MOV W22, W0
	0x03480F60 LDR X0, [X8]
	0x03480F64 BL 0x1C16F10
	0x03480F68 MOV X21, X0
	0x03480F6C MOV X1, X31
	0x03480F70 BL 0x33BDD8C
	0x03480F74 ADRP X8, 0xC73000
	0x03480F78 LDR X8, [X8 + 0x758]
	0x03480F7C STR W22, [X31 + 0x4]
	0x03480F80 LDR X0, [X8]
	0x03480F84 ADD X1, X31, 0x4
	0x03480F88 BL 0x1C16E04
	0x03480F8C MOV X1, X0
	0x03480F90 ADRP X8, 0xC77000
	0x03480F94 LDR X8, [X8 + 0x110]
	0x03480F98 LDR X0, [X8]
	0x03480F9C MOV X2, X31
	0x03480FA0 BL 0x321EFD0
	0x03480FA4 CBZ X21, 0x34810D8
	0x03480FA8 ADRP X8, 0xCB0000
	0x03480FAC LDR X8, [X8 + 0xF10]
	0x03480FB0 STR X0, [X21 + 0x10]
	0x03480FB4 LDR X0, [X8]
	0x03480FB8 BL 0x1C16F10
	0x03480FBC MOV X22, X0
	0x03480FC0 MOV X1, X31
	0x03480FC4 BL 0x3476A48
	0x03480FC8 CBZ X22, 0x34810DC
	0x03480FCC LDRB W8, [X19 + 0x28]
	0x03480FD0 STRB W8, [X22 + 0x10]
	0x03480FD4 LDR W8, [X19 + 0x2C]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X21, 0xF5E000
	010 Move W8, [X21+2227]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0xCB1000
	018 Move X0, [X0+3640]
	019 Call 0x1C17CF4
	020 Move X0, 0xCB1000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move X0, 0xCB1000
	024 Move X0, [X0+3656]
	025 Call 0x1C17CF4
	026 Move X0, 0xCB1000
	027 Move X0, [X0+3664]
	028 Call 0x1C17CF4
	029 Move X0, 0xCB1000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move X0, 0xCAF000
	033 Move X0, [X0+2528]
	034 Call 0x1C17CF4
	035 Move X0, 0xCB1000
	036 Move X0, [X0+3680]
	037 Call 0x1C17CF4
	038 Move X0, 0xCB1000
	039 Move X0, [X0+3688]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+2227], W8
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+108], W31
	045 Move [X31+80], X31
	046 Move [X31+48], V0
	047 Move [X31+56], V0
	048 Move X21, [X20+184]
	049 Compare X21, 0
	050 JumpIfEqual {165}
	051 Move X10, 0xCAF000
	052 Move X8, [X21]
	053 Move X10, [X10+2528]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move W2, 8
	065 Move X0, X21
	066 Call 0x1C5D788
	067 Move W9, [X10]
	068 Add W9, W9, 8
	069 Add X8, X8, W9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X0, X21
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {147}
	079 Move X21, [X20+216]
	080 Move [X31+108], W31
	081 Add X1, X31, 108
	082 Move X0, X21
	083 Move X2, X31
	084 Call Monitor.Enter, X0, X1
	085 Move X0, [X20+200]
	086 Compare X0, 0
	087 JumpIfEqual {168}
	088 Move X8, 0xCB1000
	089 Move X8, [X8+3648]
	090 Move X1, [X8]
	091 Add X8, X31, 8
	092 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 Move X8, [X31+40]
	096 Move X22, 0xCB1000
	097 Move X22, [X22+3664]
	098 Move [X31+48], V0
	099 Move [X31+56], V1
	100 Move [X31+80], X8
	101 Move X23, 0xCB1000
	102 Move X23, [X23+3688]
	103 Move X1, [X22]
	104 Add X0, X31, 48
	105 Call Enumerator<Object, Object>.MoveNext, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {115}
	110 Move X0, [X31+72]
	111 Compare X0, 0
	112 JumpIfEqual {164}
	113 Move X1, [X23]
	114 Call TaskCompletionSource`1<Object>.TrySetCanceled, X0
	115 Move X22, X31
	116 Move W24, 5
	117 Move X8, 0xCB1000
	118 Move X8, [X8+3656]
	119 Move X1, [X8]
	120 Add X0, X31, 48
	121 Call Enumerator<Object, Object>.Dispose, X0
	122 Compare X22, 0
	123 JumpIfNotEqual {169}
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Compare W24, 0
	126 JumpIfNotEqual {136}
	127 Move X0, [X20+200]
	128 Compare X0, 0
	129 JumpIfEqual {171}
	130 Move X8, 0xCB1000
	131 Move X8, [X8+3640]
	132 Move X1, [X8]
	133 Call Dictionary`2<Object, Object>.Clear, X0
	134 Move X23, X31
	135 Move W24, 2
	136 Move X23, X31
	137 Move W8, [X31+108]
	138 Compare W8, 0
	139 JumpIfEqual {143}
	140 Move X0, X21
	141 Move X1, X31
	142 Call Monitor.Exit, X0
	143 Compare X23, 0
	144 JumpIfNotEqual {166}
	145 Or W8, W24, 2
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X8, [X20+56]
	148 Compare X8, 0
	149 JumpIfEqual {155}
	150 Move X9, [X8+24]
	151 Move X0, [X8+64]
	152 Move X2, [X8+40]
	153 Move X1, X19
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X20, [X31+144]
	156 Move X19, [X31+152]
	157 Move X22, [X31+128]
	158 Move X21, [X31+136]
	159 Move X24, [X31+112]
	160 Move X23, [X31+120]
	161 Move X30, [X31+96]
	162 Add X31, X31, 160
	163 Return 
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Move X0, X23
	167 Call 0x1C17F18
	168 Call 0x1C17F20
	169 Move X0, X22
	170 Call 0x1C17F18
	171 Call 0x1C17F20
	172 Move X23, X1
	173 Move X24, X0
	174 Move X23, X1
	175 Move X24, X0
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, X24
	178 Call 0x3EB2AD0
	179 Move X22, [X0]
	180 Call 0x3EB2AE0
	181 Move W24, W31
	182 Move X22, X31
	183 Move X8, 0xCB1000
	184 Move X8, [X8+3656]
	185 Move X1, [X8]
	186 Add X0, X31, 48
	187 Call Enumerator<Object, Object>.Dispose, X0
	188 Compare X22, 0
	189 JumpIfNotEqual {197}
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, X24
	192 Call 0x3EB2AD0
	193 Move X23, [X0]
	194 Call 0x3EB2AE0
	195 Move W24, W31
	196 Move X23, X31
	197 Move X0, X22
	198 Call 0x1C17F18
	199 Move X23, X1
	200 Move X24, X0
	201 Move X24, X0
	202 Move W8, [X31+108]
	203 Compare W8, 0
	204 JumpIfEqual {208}
	205 Move X0, X21
	206 Move X1, X31
	207 Call Monitor.Exit, X0
	208 Compare X23, 0
	209 JumpIfNotEqual {212}
	210 Move X0, X24
	211 Call 0x1D2D690
	212 Move X0, X23
	213 Call 0x1C17F18
	214 Call 0x1991590

