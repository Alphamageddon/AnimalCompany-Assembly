Type: Nakama.ApiClient/<ImportFacebookFriendsAsync>d__45

Method: System.Void MoveNext()

Disassembly:
	0x03425B20 ADD W9, W9, 0x3
	0x03425B24 ADD X8, X8, W9, 0x4, SXTW
	0x03425B28 ADD X0, X8, 0x138
	0x03425B2C LDP X8, X9, [X0]
	0x03425B30 MOV X0, X23
	0x03425B34 MOV X1, X21
	0x03425B38 MOV X2, X20
	0x03425B3C MOV X3, X22
	0x03425B40 MOV X4, X31
	0x03425B44 MOV W5, W25
	0x03425B48 MOV X6, X26
	0x03425B4C MOV X7, X24
	0x03425B50 STR X9, [X31]
	0x03425B54 BLR X8
	0x03425B58 CBZ X0, 0x3425C84
	0x03425B5C ADRP X8, 0xCD1000
	0x03425B60 LDR X8, [X8 + 0x1F8]
	0x03425B64 LDR X1, [X8]
	0x03425B68 BL 0x269F5D0
	0x03425B6C ADRP X8, 0xCD1000
	0x03425B70 LDR X8, [X8 + 0x1F0]
	0x03425B74 STR X0, [X31 + 0x8]
	0x03425B78 LDR X1, [X8]
	0x03425B7C ADD X0, X31, 0x8
	0x03425B80 BL 0x2677430
	0x03425B84 TBZ X0, 0x0, 0x3425BC4
	0x03425B88 ADRP X8, 0xCD1000
	0x03425B8C LDR X8, [X8 + 0x1E0]
	0x03425B90 ADD X0, X31, 0x8
	0x03425B94 LDR X1, [X8]
	0x03425B98 BL 0x2677474
	0x03425B9C MOVN W8, 0x1
	0x03425BA0 STR W8, [X19], #0x8
	0x03425BA4 LDR X0, [X27]
	0x03425BA8 LDR W8, [X0 + 0xE0]
	0x03425BAC CBNZ W8, 0x3425BB4
	0x03425BB0 BL 0x1C16DFC
	0x03425BB4 MOV X0, X19
	0x03425BB8 MOV X1, X31
	0x03425BBC BL 0x32C4864
	0x03425BC0 B 0x3425BFC
	0x03425BC4 STR W31, [X19]
	0x03425BC8 LDR X8, [X31 + 0x8]
	0x03425BCC STR X8, [X19 + 0x48]
	0x03425BD0 LDR X0, [X27]
	0x03425BD4 LDR W8, [X0 + 0xE0]
	0x03425BD8 CBNZ W8, 0x3425BE0
	0x03425BDC BL 0x1C16DFC
	0x03425BE0 ADRP X8, 0xD09000
	0x03425BE4 LDR X8, [X8 + 0xDB0]
	0x03425BE8 ADD X0, X19, 0x8
	0x03425BEC LDR X3, [X8]
	0x03425BF0 ADD X1, X31, 0x8
	0x03425BF4 MOV X2, X19
	0x03425BF8 BL 0x2186560
	0x03425BFC LDP X20, X19, [X31 + 0x50]
	0x03425C00 LDP X22, X21, [X31 + 0x40]
	0x03425C04 LDP X24, X23, [X31 + 0x30]
	0x03425C08 LDP X26, X25, [X31 + 0x20]
	0x03425C0C LDP X30, X27, [X31 + 0x10]
	0x03425C10 ADD X31, X31, 0x60
	0x03425C14 RET
	0x03425C18 ADRP X0, 0xCD6000
	0x03425C1C LDR X0, [X0 + 0x578]
	0x03425C20 BL 0x1C16D08
	0x03425C24 BL 0x1C16F10
	0x03425C28 MOV X20, X0
	0x03425C2C ADRP X0, 0xD09000
	0x03425C30 LDR X0, [X0 + 0x808]
	0x03425C34 BL 0x1C16D08
	0x03425C38 MOV X1, X0
	0x03425C3C MOV X0, X20
	0x03425C40 MOV X2, X31
	0x03425C44 BL 0x3314A68
	0x03425C48 ADRP X0, 0xD09000
	0x03425C4C LDR X0, [X0 + 0xDC0]
	0x03425C50 BL 0x1C16D08
	0x03425C54 MOV X1, X0
	0x03425C58 MOV X0, X20
	0x03425C5C BL 0x1C16DEC
	0x03425C60 BL 0x1C16F20
	0x03425C64 BL 0x1C16F20
	0x03425C68 BL 0x1C16F20
	0x03425C6C BL 0x1C16F20
	0x03425C70 BL 0x1C16F28
	0x03425C74 BL 0x1C16F20
	0x03425C78 BL 0x1C16F20
	0x03425C7C BL 0x1C16F20
	0x03425C80 BL 0x1C16F20
	0x03425C84 BL 0x1C16F20
	0x03425C88 B 0x3425CE4
	0x03425C8C B 0x3425CE4
	0x03425C90 B 0x3425CE4
	0x03425C94 B 0x3425CE4
	0x03425C98 B 0x3425CE4
	0x03425C9C B 0x3425CE4
	0x03425CA0 B 0x3425CE4
	0x03425CA4 B 0x3425CE4
	0x03425CA8 B 0x3425CE4
	0x03425CAC B 0x3425CE4
	0x03425CB0 B 0x3425CE4
	0x03425CB4 B 0x3425CE4
	0x03425CB8 B 0x3425CE4
	0x03425CBC B 0x3425CE4
	0x03425CC0 B 0x3425CE4
	0x03425CC4 B 0x3425CE4
	0x03425CC8 B 0x3425CE4
	0x03425CCC B 0x3425CE4
	0x03425CD0 B 0x3425CE4
	0x03425CD4 B 0x3425CE4
	0x03425CD8 B 0x3425CE4
	0x03425CDC B 0x3425CE4
	0x03425CE0 B 0x3425CE4
	0x03425CE4 MOV X20, X0
	0x03425CE8 CMP W1, 0x1
	0x03425CEC B.NE 0x3425D7C
	0x03425CF0 MOV X0, X20
	0x03425CF4 BL 0x3EB1AD0
	0x03425CF8 MOV X20, X0
	0x03425CFC ADRP X0, 0xCCE000
	0x03425D00 LDR X0, [X0 + 0x7D0]
	0x03425D04 BL 0x1C16D08
	0x03425D08 LDR X8, [X20]
	0x03425D0C LDR X1, [X8]
	0x03425D10 BL 0x1C17270
	0x03425D14 TBZ X0, 0x0, 0x3425D54
	0x03425D18 LDR X20, [X20]
	0x03425D1C BL 0x3EB1AE0
	0x03425D20 MOVN W8, 0x1
	0x03425D24 STR W8, [X19], #0x8
	0x03425D28 ADRP X0, 0xCD1000
	0x03425D2C LDR X0, [X0 + 0x280]
	0x03425D30 BL 0x1C16D08
	0x03425D34 LDR W8, [X0 + 0xE0]
	0x03425D38 CBNZ W8, 0x3425D40
	0x03425D3C BL 0x1C16DFC
	0x03425D40 MOV X0, X19
	0x03425D44 MOV X1, X20
	0x03425D48 MOV X2, X31
	0x03425D4C BL 0x32C4908
	0x03425D50 B 0x3425BFC
	0x03425D54 MOVZ W0, 0x8
	0x03425D58 BL 0x3EB1AF0
	0x03425D5C LDR X8, [X20]
	0x03425D60 STR X8, [X0]
	0x03425D64 ADRP X1, 0xA8F000
	0x03425D68 ADD X1, X1, 0xE58
	0x03425D6C MOV X2, X31
	0x03425D70 BL 0x3EB1B00
	0x03425D74 MOV X20, X0
	0x03425D78 BL 0x3EB1AE0
	0x03425D7C MOV X0, X20
	0x03425D80 BL 0x1D2C690
	0x03425D84 BL 0x1990590
	0x03425D88 STR X30, [X31 - 0x30]!
	0x03425D8C STP X22, X21, [X31 + 0x10]
	0x03425D90 STP X20, X19, [X31 + 0x20]
	0x03425D94 ADRP X21, 0xFB8000
	0x03425D98 ADRP X22, 0xCD1000
	0x03425D9C LDRB W8, [X21 + 0x632]
	0x03425DA0 LDR X22, [X22 + 0x280]
	0x03425DA4 MOV X19, X1
	0x03425DA8 MOV X20, X0
	0x03425DAC TBNZ X8, 0x0, 0x3425DC4
	0x03425DB0 ADRP X0, 0xCD1000
	0x03425DB4 LDR X0, [X0 + 0x280]
	0x03425DB8 BL 0x1C16CF4
	0x03425DBC MOVZ W8, 0x1
	0x03425DC0 STRB W8, [X21 + 0x632]
	0x03425DC4 LDR X0, [X22]
	0x03425DC8 LDR W8, [X0 + 0xE0]
	0x03425DCC CBNZ W8, 0x3425DD4
	0x03425DD0 BL 0x1C16DFC
	0x03425DD4 ADD X0, X20, 0x8
	0x03425DD8 MOV X1, X19
	0x03425DDC LDP X20, X19, [X31 + 0x20]
	0x03425DE0 LDP X22, X21, [X31 + 0x10]
	0x03425DE4 MOV X2, X31
	0x03425DE8 LDR X30, [X31], #0x30
	0x03425DEC B 0x32C477C
	0x03425DF0 SUB X31, X31, 0x60
	0x03425DF4 STP X30, X27, [X31 + 0x10]
	0x03425DF8 STP X26, X25, [X31 + 0x20]
	0x03425DFC STP X24, X23, [X31 + 0x30]
	0x03425E00 STP X22, X21, [X31 + 0x40]
	0x03425E04 STP X20, X19, [X31 + 0x50]
	0x03425E08 ADRP X20, 0xFB8000
	0x03425E0C LDRB W8, [X20 + 0x633]
	0x03425E10 MOV X19, X0
	0x03425E14 TBNZ X8, 0x0, 0x3425EF8
	0x03425E18 ADRP X0, 0xD09000
	0x03425E1C LDR X0, [X0 + 0xDC8]
	0x03425E20 BL 0x1C16CF4
	0x03425E24 ADRP X0, 0xCD1000
	0x03425E28 LDR X0, [X0 + 0x280]
	0x03425E2C BL 0x1C16CF4
	0x03425E30 ADRP X0, 0xCD7000
	0x03425E34 LDR X0, [X0 + 0x8D8]
	0x03425E38 BL 0x1C16CF4
	0x03425E3C ADRP X0, 0xCCF000
	0x03425E40 LDR X0, [X0 + 0x810]
	0x03425E44 BL 0x1C16CF4
	0x03425E48 ADRP X0, 0xCCF000
	0x03425E4C LDR X0, [X0 + 0x6C0]
	0x03425E50 BL 0x1C16CF4
	0x03425E54 ADRP X0, 0xCCF000
	0x03425E58 LDR X0, [X0 + 0x6D0]
	0x03425E5C BL 0x1C16CF4
	0x03425E60 ADRP X0, 0xD09000
	0x03425E64 LDR X0, [X0 + 0x7B8]
	0x03425E68 BL 0x1C16CF4
	0x03425E6C ADRP X0, 0xCD1000
	0x03425E70 LDR X0, [X0 + 0x1E0]
	0x03425E74 BL 0x1C16CF4
	0x03425E78 ADRP X0, 0xCD1000
	0x03425E7C LDR X0, [X0 + 0x1F0]
	0x03425E80 BL 0x1C16CF4
	0x03425E84 ADRP X0, 0xCD1000
	0x03425E88 LDR X0, [X0 + 0x1F8]
	0x03425E8C BL 0x1C16CF4
	0x03425E90 ADRP X0, 0xCD7000
	0x03425E94 LDR X0, [X0 + 0x3A0]
	0x03425E98 BL 0x1C16CF4
	0x03425E9C ADRP X0, 0xCD0000
	0x03425EA0 LDR X0, [X0 + 0xA28]
	0x03425EA4 BL 0x1C16CF4
	0x03425EA8 ADRP X0, 0xCF7000
	0x03425EAC LDR X0, [X0 + 0x4D8]
	0x03425EB0 BL 0x1C16CF4
	0x03425EB4 ADRP X0, 0xD09000
	0x03425EB8 LDR X0, [X0 + 0xDD0]
	0x03425EBC BL 0x1C16CF4
	0x03425EC0 ADRP X0, 0xD09000
	0x03425EC4 LDR X0, [X0 + 0x7D0]
	0x03425EC8 BL 0x1C16CF4
	0x03425ECC ADRP X0, 0xD09000
	0x03425ED0 LDR X0, [X0 + 0x7D8]
	0x03425ED4 BL 0x1C16CF4
	0x03425ED8 ADRP X0, 0xCCE000
	0x03425EDC LDR X0, [X0 + 0x988]
	0x03425EE0 BL 0x1C16CF4
	0x03425EE4 ADRP X0, 0xD09000
	0x03425EE8 LDR X0, [X0 + 0xC78]
	0x03425EEC BL 0x1C16CF4
	0x03425EF0 MOVZ W8, 0x1
	0x03425EF4 STRB W8, [X20 + 0x633]
	0x03425EF8 STR X31, [X31 + 0x8]
	0x03425EFC ADRP X27, 0xCD1000
	0x03425F00 LDR W8, [X19]
	0x03425F04 LDR X27, [X27 + 0x280]
	0x03425F08 CBZ W8, 0x34260FC
	0x03425F0C LDR X21, [X19 + 0x20]
	0x03425F10 CBZ X21, 0x3426210
	0x03425F14 ADRP X8, 0xCD0000
	0x03425F18 LDR X8, [X8 + 0xA28]
	0x03425F1C LDR X0, [X8]
	0x03425F20 ADRP X8, 0xD09000
	0x03425F24 LDR X8, [X8 + 0xDD0]
	0x03425F28 LDR X24, [X19 + 0x28]
	0x03425F2C LDR W9, [X0 + 0xE0]
	0x03425F30 LDR X20, [X8]
	0x03425F34 CBNZ W9, 0x3425F3C
	0x03425F38 BL 0x1C16DFC
	0x03425F3C MOV X0, X21
	0x03425F40 MOV X1, X31
	0x03425F44 BL 0x3624D20
	0x03425F48 CBZ X20, 0x3426258
	0x03425F4C ADRP X8, 0xD09000
	0x03425F50 LDR X8, [X8 + 0xC78]
	0x03425F54 MOV X2, X0
	0x03425F58 LDR X1, [X8]
	0x03425F5C MOV X0, X20
	0x03425F60 MOV X3, X31
	0x03425F64 BL 0x32293BC
	0x03425F68 CBZ X24, 0x342625C
	0x03425F6C MOV X21, X0
	0x03425F70 LDR X0, [X24 + 0x20]
	0x03425F74 CBZ X0, 0x3426260
	0x03425F78 ADRP X8, 0xCCE000
	0x03425F7C LDR X8, [X8 + 0x988]
	0x03425F80 LDR X20, [X8]
	0x03425F84 MOV X1, X31
	0x03425F88 BL 0x361B448
	0x03425F8C ADRP X8, 0xCD7000
	0x03425F90 LDR X8, [X8 + 0x8D8]
	0x03425F94 MOV X22, X0
	0x03425F98 LDR X0, [X8]
	0x03425F9C MOVZ W1, 0x1
	0x03425FA0 BL 0x1C16D6C
	0x03425FA4 MOV X1, X0
	0x03425FA8 CBZ X1, 0x3426264
	0x03425FAC LDR W8, [X1 + 0x18]
	0x03425FB0 CBZ W8, 0x3426268
	0x03425FB4 MOVZ W8, 0x2F
	0x03425FB8 STRH W8, [X1 + 0x20]
	0x03425FBC CBZ X22, 0x342626C
	0x03425FC0 MOV X0, X22
	0x03425FC4 MOV X2, X31
	0x03425FC8 BL 0x322BC58
	0x03425FCC MOV X1, X21
	0x03425FD0 MOV X2, X31
	0x03425FD4 BL 0x321B938
	0x03425FD8 ADRP X8, 0xCD7000
	0x03425FDC LDR X8, [X8 + 0x3A0]
	0x03425FE0 MOV X22, X0
	0x03425FE4 LDR X23, [X24 + 0x20]
	0x03425FE8 LDR X0, [X8]
	0x03425FEC BL 0x1C16F10
	0x03425FF0 MOV X21, X0
	0x03425FF4 MOV X1, X23
	0x03425FF8 MOV X2, X31
	0x03425FFC BL 0x36281F8
	0x03426000 CBZ X21, 0x3426270
	0x03426004 MOV X0, X21
	0x03426008 MOV X1, X22
	0x0342600C MOV X2, X31
	0x03426010 BL 0x36288CC
	0x03426014 MOV X0, X21
	0x03426018 MOV X1, X20
	0x0342601C MOV X2, X31
	0x03426020 BL 0x3628980
	0x03426024 MOV X0, X21
	0x03426028 MOV X1, X31
	0x0342602C BL 0x3628A38
	0x03426030 ADRP X8, 0xCF6000
	0x03426034 ADRP X9, 0xCCE000
	0x03426038 LDR X8, [X8 + 0x4D8]
	0x0342603C LDR X9, [X9 + 0x6D0]
	0x03426040 MOV X20, X0
	0x03426044 LDR X21, [X8]
	0x03426048 LDR X0, [X9]
	0x0342604C BL 0x1C16F10
	0x03426050 ADRP X8, 0xCCE000
	0x03426054 LDR X8, [X8 + 0x6C0]
	0x03426058 MOV X22, X0
	0x0342605C LDR X1, [X8]
	0x03426060 BL 0x2AA4804
	0x03426064 ADRP X8, 0xD08000
	0x03426068 LDR X8, [X8 + 0x7D8]
	0x0342606C LDR X1, [X19 + 0x30]
	0x03426070 LDR X0, [X8]
	0x03426074 MOV X2, X31
	0x03426078 BL 0x321B938
	0x0342607C CBZ X22, 0x3426274
	0x03426080 ADRP X8, 0xD08000
	0x03426084 LDR X8, [X8 + 0x7D0]
	0x03426088 ADRP X9, 0xCCE000
	0x0342608C LDR X9, [X9 + 0x810]
	0x03426090 MOV X2, X0
	0x03426094 LDR X1, [X8]
	0x03426098 LDR X3, [X9]
	0x0342609C MOV X0, X22
	0x034260A0 BL 0x2AA5098
	0x034260A4 LDR X23, [X24 + 0x10]
	0x034260A8 CBZ X23, 0x3426278
	0x034260AC ADRP X10, 0xD08000
	0x034260B0 LDR X10, [X10 + 0x7B8]
	0x034260B4 LDR X8, [X23]
	0x034260B8 LDR W25, [X24 + 0x18]
	0x034260BC LDP X26, X24, [X19 + 0x38]
	0x034260C0 LDR X1, [X10]
	0x034260C4 LDRH W9, [X8 + 0x12E]
	0x034260C8 CBZ X9, 0x34260EC
	0x034260CC LDR X10, [X8 + 0xB0]
	0x034260D0 ADD X10, X10, 0x8
	0x034260D4 LDUR X11, [X10 - 0x8]
	0x034260D8 CMP X11, X1
	0x034260DC B.EQ 0x3426114
	0x034260E0 SUBS X9, X9, 0x1
	0x034260E4 ADD X10, X10, 0x10
	0x034260E8 B.NE 0x34260D4
	0x034260EC MOVZ W2, 0x3
	0x034260F0 MOV X0, X23
	0x034260F4 BL 0x1C5C788
	0x034260F8 B 0x3426124
	0x034260FC LDR X8, [X19 + 0x48]
	0x03426100 MOVN W9, 0x0
	0x03426104 STR X8, [X31 + 0x8]
	0x03426108 STR X31, [X19 + 0x48]
	0x0342610C STR W9, [X19]
	0x03426110 B 0x3426180
	0x03426114 LDR W9, [X10]
	0x03426118 ADD W9, W9, 0x3
	0x0342611C ADD X8, X8, W9, 0x4, SXTW
	0x03426120 ADD X0, X8, 0x138

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB9000
	014 Move W8, [X20+1581]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xD0A000
	021 Move X0, [X0+3448]
	022 Call 0x1C17CF4
	023 Move X0, 0xCD2000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD8000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCD0000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCD0000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCD0000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD0A000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xD0A000
	042 Move X0, [X0+2096]
	043 Call 0x1C17CF4
	044 Move X0, 0xCD3000
	045 Move X0, [X0+3056]
	046 Call 0x1C17CF4
	047 Move X0, 0xCD2000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD2000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD2000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD8000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF8000
	060 Move X0, [X0+1240]
	061 Call 0x1C17CF4
	062 Move X0, 0xD0A000
	063 Move X0, [X0+3456]
	064 Call 0x1C17CF4
	065 Move X0, 0xCD8000
	066 Move X0, [X0+1824]
	067 Call 0x1C17CF4
	068 Move X0, 0xD0A000
	069 Move X0, [X0+2000]
	070 Call 0x1C17CF4
	071 Move X0, 0xD0A000
	072 Move X0, [X0+2008]
	073 Call 0x1C17CF4
	074 Move X0, 0xCCF000
	075 Move X0, [X0+2440]
	076 Call 0x1C17CF4
	077 Move X0, 0xD0A000
	078 Move X0, [X0+3464]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+1581], W8
	082 Move [X31+24], X31
	083 Move X28, 0xCD2000
	084 Move W8, [X19]
	085 Move X28, [X28+640]
	086 Compare W8, 0
	087 JumpIfEqual {240}
	088 Move X8, [X19+32]
	089 Compare X8, 0
	090 JumpIfEqual {324}
	091 Move X8, 0xD0A000
	092 Move X9, 0xCCF000
	093 Move X8, [X8+3464]
	094 Move X9, [X9+2440]
	095 Move X0, X19
	096 Move X25, [X19+48]
	097 Move X21, [X8]
	098 Move X20, [X9]
	099 Add X0, X0, 40
	100 Move W8, [X0]
	101 Compare W8, 0
	102 JumpIfEqual {122}
	103 Move X8, 0xD0A000
	104 Move X8, [X8+2096]
	105 Move X1, [X8]
	106 Call Nullable`1<Boolean>.ToString, X0
	107 Compare X0, 0
	108 JumpIfEqual {352}
	109 Move X1, X31
	110 Call String.ToLower, X0
	111 Move X8, 0xD0A000
	112 Move X8, [X8+3456]
	113 Move X9, 0xCD8000
	114 Move X9, [X9+1824]
	115 Move X2, X0
	116 Move X1, [X8]
	117 Move X3, [X9]
	118 Move X0, X20
	119 Move X4, X31
	120 Call String.Concat, X0, X1, X2, X3
	121 Move X20, X0
	122 Compare X25, 0
	123 JumpIfEqual {342}
	124 Move X0, [X25+32]
	125 Compare X0, 0
	126 JumpIfEqual {343}
	127 Move X1, X31
	128 Call Uri.get_AbsolutePath, X0
	129 Move X8, 0xCD8000
	130 Move X8, [X8+2264]
	131 Move X22, X0
	132 Move X0, [X8]
	133 Move W1, 1
	134 Call 0x1C17D6C
	135 Move X1, X0
	136 Compare X1, 0
	137 JumpIfEqual {344}
	138 Move W8, [X1+24]
	139 Compare W8, 0
	140 JumpIfEqual {345}
	141 Move W8, 47
	142 NotImplemented "Instruction STRH not yet implemented."
	143 Compare X22, 0
	144 JumpIfEqual {346}
	145 Move X0, X22
	146 Move X2, X31
	147 Call String.TrimEnd, X0, X1
	148 Move X1, X21
	149 Move X2, X31
	150 Call String.Concat, X0, X1
	151 Move X8, 0xCD8000
	152 Move X8, [X8+928]
	153 Move X22, X0
	154 Move X23, [X25+32]
	155 Move X0, [X8]
	156 Call 0x1C17F10
	157 Move X21, X0
	158 Move X1, X23
	159 Move X2, X31
	160 Call UriBuilder..ctor, X0, X1
	161 Compare X21, 0
	162 JumpIfEqual {347}
	163 Move X0, X21
	164 Move X1, X22
	165 Move X2, X31
	166 Call UriBuilder.set_Path, X0, X1
	167 Move X0, X21
	168 Move X1, X20
	169 Move X2, X31
	170 Call UriBuilder.set_Query, X0, X1
	171 Move X0, X21
	172 Move X1, X31
	173 Call UriBuilder.get_Uri, X0
	174 Move X8, 0xCF8000
	175 Move X9, 0xCD0000
	176 Move X8, [X8+1240]
	177 Move X9, [X9+1744]
	178 Move X20, X0
	179 Move X21, [X8]
	180 Move X0, [X9]
	181 Call 0x1C17F10
	182 Move X8, 0xCD0000
	183 Move X8, [X8+1728]
	184 Move X22, X0
	185 Move X1, [X8]
	186 Call Dictionary`2<Object, Object>..ctor, X0
	187 Move X8, 0xD0A000
	188 Move X8, [X8+2008]
	189 Move X1, [X19+56]
	190 Move X0, [X8]
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Compare X22, 0
	194 JumpIfEqual {348}
	195 Move X8, 0xD0A000
	196 Move X8, [X8+2000]
	197 Move X9, 0xCD0000
	198 Move X9, [X9+2064]
	199 Move X2, X0
	200 Move X1, [X8]
	201 Move X3, [X9]
	202 Move X0, X22
	203 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	204 Move X0, [X19+32]
	205 Move X1, X31
	206 Call JsonWriter.ToJson, X0
	207 Move X23, X0
	208 Move X0, X31
	209 Call Encoding.get_UTF8
	210 Compare X0, 0
	211 JumpIfEqual {349}
	212 Move X8, [X0]
	213 Move X9, [X8+616]
	214 Move X2, [X8+624]
	215 Move X1, X23
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X24, [X25+16]
	218 Compare X24, 0
	219 JumpIfEqual {350}
	220 Move X10, 0xD0A000
	221 Move X10, [X10+1976]
	222 Move X8, [X24]
	223 Move W26, [X25+24]
	224 Move X27, [X19+64]
	225 Move X25, [X19+72]
	226 Move X1, [X10]
	227 NotImplemented "Instruction LDRH not yet implemented."
	228 Move X23, X0
	229 Compare X9, 0
	230 JumpIfEqual {237}
	231 Move X10, [X8+176]
	232 Add X10, X10, 8
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Subtract X9, X9, 1
	236 Add X10, X10, 16
	237 Move W2, 3
	238 Move X0, X24
	239 Call 0x1C5D788
	240 Move X8, [X19+80]
	241 Move TEMP, 0
	242 Not TEMP
	243 Move W9, TEMP
	244 Move [X31+24], X8
	245 Move [X19+80], X31
	246 Move [X19], W9
	247 Move W9, [X10]
	248 Add W9, W9, 3
	249 Add X8, X8, W9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X9, [X0+8]
	253 Move X0, X24
	254 Move X1, X21
	255 Move X2, X20
	256 Move X3, X22
	257 Move X4, X23
	258 Move W5, W26
	259 Move X6, X27
	260 Move X7, X25
	261 Move [X31], X9
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Compare X0, 0
	264 JumpIfEqual {351}
	265 Move X8, 0xCD2000
	266 Move X8, [X8+504]
	267 Move X1, [X8]
	268 Call Task`1<Object>.GetAwaiter, X0
	269 Move X8, 0xCD2000
	270 Move X8, [X8+496]
	271 Move [X31+24], X0
	272 Move X1, [X8]
	273 Add X0, X31, 24
	274 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {296}
	279 Move X8, 0xCD2000
	280 Move X8, [X8+480]
	281 Add X0, X31, 24
	282 Move X1, [X8]
	283 Call TaskAwaiter`1<Object>.GetResult, X0
	284 Move TEMP, 1
	285 Not TEMP
	286 Move W8, TEMP
	287 Move [X19+8], W8
	288 Move X0, [X28]
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {293}
	292 Call 0x1C17DFC
	293 Move X0, X19
	294 Move X1, X31
	295 Call AsyncTaskMethodBuilder.SetResult, X0
	296 Move [X19], W31
	297 Move X8, [X31+24]
	298 Move [X19+80], X8
	299 Move X0, [X28]
	300 Move W8, [X0+224]
	301 Compare W8, 0
	302 JumpIfNotEqual {304}
	303 Call 0x1C17DFC
	304 Move X8, 0xD0A000
	305 Move X8, [X8+3448]
	306 Add X0, X19, 8
	307 Move X3, [X8]
	308 Add X1, X31, 24
	309 Move X2, X19
	310 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	311 Move X20, [X31+96]
	312 Move X19, [X31+104]
	313 Move X22, [X31+80]
	314 Move X21, [X31+88]
	315 Move X24, [X31+64]
	316 Move X23, [X31+72]
	317 Move X26, [X31+48]
	318 Move X25, [X31+56]
	319 Move X28, [X31+32]
	320 Move X27, [X31+40]
	321 Move X30, [X31+16]
	322 Add X31, X31, 112
	323 Return 
	324 Move X0, 0xCD7000
	325 Move X0, [X0+1400]
	326 Call 0x1C17D08
	327 Call 0x1C17F10
	328 Move X20, X0
	329 Move X0, 0xD0A000
	330 Move X0, [X0+2136]
	331 Call 0x1C17D08
	332 Move X1, X0
	333 Move X0, X20
	334 Move X2, X31
	335 Call ArgumentException..ctor, X0, X1
	336 Move X0, 0xD0A000
	337 Move X0, [X0+3472]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X20
	341 Call 0x1C17DEC
	342 Call 0x1C17F20
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Call 0x1C17F28
	346 Call 0x1C17F20
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Move X20, X0
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X0, X20
	356 Call 0x3EB2AD0
	357 Move X20, X0
	358 Move X0, 0xCCE000
	359 Move X0, [X0+2000]
	360 Call 0x1C17D08
	361 Move X8, [X20]
	362 Move X1, [X8]
	363 Call 0x1C18270
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {385}
	368 Move X20, [X20]
	369 Call 0x3EB2AE0
	370 Move TEMP, 1
	371 Not TEMP
	372 Move W8, TEMP
	373 Move [X19+8], W8
	374 Move X0, 0xCD1000
	375 Move X0, [X0+640]
	376 Call 0x1C17D08
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {381}
	380 Call 0x1C17DFC
	381 Move X0, X19
	382 Move X1, X20
	383 Move X2, X31
	384 Call AsyncTaskMethodBuilder.SetException, X0, X1
	385 Move W0, 8
	386 Call 0x3EB2AF0
	387 Move X8, [X20]
	388 Move [X0], X8
	389 Move X1, 0xA8F000
	390 Add X1, X1, 3672
	391 Move X2, X31
	392 Call 0x3EB2B00
	393 Move X20, X0
	394 Call 0x3EB2AE0
	395 Move X0, X20
	396 Call 0x1D2D690
	397 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03426124 LDP X8, X9, [X0]
	0x03426128 MOV X0, X23
	0x0342612C MOV X1, X21
	0x03426130 MOV X2, X20
	0x03426134 MOV X3, X22
	0x03426138 MOV X4, X31
	0x0342613C MOV W5, W25
	0x03426140 MOV X6, X26
	0x03426144 MOV X7, X24
	0x03426148 STR X9, [X31]
	0x0342614C BLR X8
	0x03426150 CBZ X0, 0x342627C
	0x03426154 ADRP X8, 0xCD0000
	0x03426158 LDR X8, [X8 + 0x1F8]
	0x0342615C LDR X1, [X8]
	0x03426160 BL 0x269F5D0
	0x03426164 ADRP X8, 0xCD0000
	0x03426168 LDR X8, [X8 + 0x1F0]
	0x0342616C STR X0, [X31 + 0x8]
	0x03426170 LDR X1, [X8]
	0x03426174 ADD X0, X31, 0x8
	0x03426178 BL 0x2677430
	0x0342617C TBZ X0, 0x0, 0x34261BC
	0x03426180 ADRP X8, 0xCD0000
	0x03426184 LDR X8, [X8 + 0x1E0]
	0x03426188 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB8000
	007 Move X22, 0xCD1000
	008 Move W8, [X21+1582]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD1000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1582], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

