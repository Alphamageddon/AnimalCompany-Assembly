Type: Nakama.Client/<ReadStorageObjectsAsync>d__100

Method: System.Void MoveNext()

Disassembly:
	0x03466CA8 BL 0x3EB1AF0
	0x03466CAC LDR X8, [X20]
	0x03466CB0 STR X8, [X0]
	0x03466CB4 ADRP X1, 0xA4E000
	0x03466CB8 ADD X1, X1, 0xE58
	0x03466CBC MOV X2, X31
	0x03466CC0 BL 0x3EB1B00
	0x03466CC4 MOV X20, X0
	0x03466CC8 BL 0x3EB1AE0
	0x03466CCC MOV X0, X20
	0x03466CD0 BL 0x1D2C690
	0x03466CD4 BL 0x1990590
	0x03466CD8 STR X30, [X31 - 0x30]!
	0x03466CDC STP X22, X21, [X31 + 0x10]
	0x03466CE0 STP X20, X19, [X31 + 0x20]
	0x03466CE4 ADRP X22, 0xF77000
	0x03466CE8 ADRP X21, 0xCC8000
	0x03466CEC LDRB W8, [X22 + 0x7C4]
	0x03466CF0 LDR X21, [X21 + 0x668]
	0x03466CF4 MOV X19, X1
	0x03466CF8 MOV X20, X0
	0x03466CFC TBNZ X8, 0x0, 0x3466D20
	0x03466D00 ADRP X0, 0xCC9000
	0x03466D04 LDR X0, [X0 + 0x308]
	0x03466D08 BL 0x1C16CF4
	0x03466D0C ADRP X0, 0xCC8000
	0x03466D10 LDR X0, [X0 + 0x668]
	0x03466D14 BL 0x1C16CF4
	0x03466D18 MOVZ W8, 0x1
	0x03466D1C STRB W8, [X22 + 0x7C4]
	0x03466D20 LDR X0, [X21]
	0x03466D24 ADRP X21, 0xCC9000
	0x03466D28 LDR W8, [X0 + 0xE0]
	0x03466D2C LDR X21, [X21 + 0x308]
	0x03466D30 CBNZ W8, 0x3466D38
	0x03466D34 BL 0x1C16DFC
	0x03466D38 LDR X2, [X21]
	0x03466D3C ADD X0, X20, 0x8
	0x03466D40 MOV X1, X19
	0x03466D44 LDP X20, X19, [X31 + 0x20]
	0x03466D48 LDP X22, X21, [X31 + 0x10]
	0x03466D4C LDR X30, [X31], #0x30
	0x03466D50 B 0x2632228
	0x03466D54 SUB X31, X31, 0x70
	0x03466D58 STP X30, X25, [X31 + 0x30]
	0x03466D5C STP X24, X23, [X31 + 0x40]
	0x03466D60 STP X22, X21, [X31 + 0x50]
	0x03466D64 STP X20, X19, [X31 + 0x60]
	0x03466D68 ADRP X20, 0xF77000
	0x03466D6C LDRB W8, [X20 + 0x7C5]
	0x03466D70 MOV X19, X0
	0x03466D74 TBNZ X8, 0x0, 0x3466E64
	0x03466D78 ADRP X0, 0xCCA000
	0x03466D7C LDR X0, [X0 + 0x438]
	0x03466D80 BL 0x1C16CF4
	0x03466D84 ADRP X0, 0xCCA000
	0x03466D88 LDR X0, [X0 + 0x440]
	0x03466D8C BL 0x1C16CF4
	0x03466D90 ADRP X0, 0xCC9000
	0x03466D94 LDR X0, [X0 + 0x2C0]
	0x03466D98 BL 0x1C16CF4
	0x03466D9C ADRP X0, 0xCC8000
	0x03466DA0 LDR X0, [X0 + 0x668]
	0x03466DA4 BL 0x1C16CF4
	0x03466DA8 ADRP X0, 0xC8F000
	0x03466DAC LDR X0, [X0 + 0xA10]
	0x03466DB0 BL 0x1C16CF4
	0x03466DB4 ADRP X0, 0xC8E000
	0x03466DB8 LDR X0, [X0 + 0x9F0]
	0x03466DBC BL 0x1C16CF4
	0x03466DC0 ADRP X0, 0xCC9000
	0x03466DC4 LDR X0, [X0 + 0x848]
	0x03466DC8 BL 0x1C16CF4
	0x03466DCC ADRP X0, 0xC8E000
	0x03466DD0 LDR X0, [X0 + 0x818]
	0x03466DD4 BL 0x1C16CF4
	0x03466DD8 ADRP X0, 0xCC9000
	0x03466DDC LDR X0, [X0 + 0x7C8]
	0x03466DE0 BL 0x1C16CF4
	0x03466DE4 ADRP X0, 0xCC9000
	0x03466DE8 LDR X0, [X0 + 0x7D0]
	0x03466DEC BL 0x1C16CF4
	0x03466DF0 ADRP X0, 0xCC9000
	0x03466DF4 LDR X0, [X0 + 0x850]
	0x03466DF8 BL 0x1C16CF4
	0x03466DFC ADRP X0, 0xCCA000
	0x03466E00 LDR X0, [X0 + 0x410]
	0x03466E04 BL 0x1C16CF4
	0x03466E08 ADRP X0, 0xC8E000
	0x03466E0C LDR X0, [X0 + 0x830]
	0x03466E10 BL 0x1C16CF4
	0x03466E14 ADRP X0, 0xC8E000
	0x03466E18 LDR X0, [X0 + 0x838]
	0x03466E1C BL 0x1C16CF4
	0x03466E20 ADRP X0, 0xCCA000
	0x03466E24 LDR X0, [X0 + 0x418]
	0x03466E28 BL 0x1C16CF4
	0x03466E2C ADRP X0, 0xCCA000
	0x03466E30 LDR X0, [X0 + 0x420]
	0x03466E34 BL 0x1C16CF4
	0x03466E38 ADRP X0, 0xC8E000
	0x03466E3C LDR X0, [X0 + 0x840]
	0x03466E40 BL 0x1C16CF4
	0x03466E44 ADRP X0, 0xCCA000
	0x03466E48 LDR X0, [X0 + 0x448]
	0x03466E4C BL 0x1C16CF4
	0x03466E50 ADRP X0, 0xCCA000
	0x03466E54 LDR X0, [X0 + 0x450]
	0x03466E58 BL 0x1C16CF4
	0x03466E5C MOVZ W8, 0x1
	0x03466E60 STRB W8, [X20 + 0x7C5]
	0x03466E64 STP X31, X31, [X31 + 0x20]
	0x03466E68 STR X31, [X31 + 0x18]
	0x03466E6C ADRP X25, 0xCC8000
	0x03466E70 LDR W8, [X19]
	0x03466E74 LDR X20, [X19 + 0x20]
	0x03466E78 LDR X25, [X25 + 0x668]
	0x03466E7C CBZ W8, 0x3466EA0
	0x03466E80 CMP W8, 0x1
	0x03466E84 B.NE 0x3466ECC
	0x03466E88 LDR X8, [X19 + 0x58]
	0x03466E8C MOVN W9, 0x0
	0x03466E90 STR X8, [X31 + 0x18]
	0x03466E94 STR X31, [X19 + 0x58]
	0x03466E98 STR W9, [X19]
	0x03466E9C B 0x34671DC
	0x03466EA0 LDR X8, [X19 + 0x50]
	0x03466EA4 MOVN W9, 0x0
	0x03466EA8 STR X8, [X31 + 0x20]
	0x03466EAC STR X31, [X19 + 0x50]
	0x03466EB0 STR W9, [X19]
	0x03466EB4 ADRP X8, 0xC8E000
	0x03466EB8 LDR X8, [X8 + 0x830]
	0x03466EBC ADD X0, X31, 0x20
	0x03466EC0 LDR X1, [X8]
	0x03466EC4 BL 0x2677474
	0x03466EC8 B 0x34670FC
	0x03466ECC ADRP X8, 0xCCA000
	0x03466ED0 LDR X8, [X8 + 0x450]
	0x03466ED4 LDR X0, [X8]
	0x03466ED8 BL 0x1C16F10
	0x03466EDC MOV X21, X0
	0x03466EE0 MOV X1, X31
	0x03466EE4 BL 0x3445A9C
	0x03466EE8 STR X21, [X19 + 0x48]
	0x03466EEC CBZ X21, 0x3467294
	0x03466EF0 LDR X8, [X19 + 0x20]
	0x03466EF4 STR X8, [X21 + 0x10]
	0x03466EF8 LDR X8, [X19 + 0x28]
	0x03466EFC STR X8, [X21 + 0x18]
	0x03466F00 LDR X8, [X19 + 0x30]
	0x03466F04 STR X8, [X21 + 0x20]
	0x03466F08 LDR X8, [X19 + 0x38]
	0x03466F0C STR X8, [X21 + 0x28]
	0x03466F10 CBZ X20, 0x3467298
	0x03466F14 LDRB W8, [X20 + 0x10]
	0x03466F18 CBZ W8, 0x3467100
	0x03466F1C LDR X8, [X19 + 0x48]
	0x03466F20 CBZ X8, 0x346729C
	0x03466F24 LDR X21, [X8 + 0x18]
	0x03466F28 CBZ X21, 0x34672A0
	0x03466F2C ADRP X23, 0xC8E000
	0x03466F30 LDR X8, [X21]
	0x03466F34 LDR X23, [X23 + 0x818]
	0x03466F38 LDRH W9, [X8 + 0x12E]
	0x03466F3C LDR X1, [X23]
	0x03466F40 CBZ X9, 0x3466F64
	0x03466F44 LDR X10, [X8 + 0xB0]
	0x03466F48 ADD X10, X10, 0x8
	0x03466F4C LDUR X11, [X10 - 0x8]
	0x03466F50 CMP X11, X1
	0x03466F54 B.EQ 0x3466F74
	0x03466F58 SUBS X9, X9, 0x1
	0x03466F5C ADD X10, X10, 0x10
	0x03466F60 B.NE 0x3466F4C
	0x03466F64 MOVZ W2, 0x7
	0x03466F68 MOV X0, X21
	0x03466F6C BL 0x1C5C788
	0x03466F70 B 0x3466F84
	0x03466F74 LDR W9, [X10]
	0x03466F78 ADD W9, W9, 0x7
	0x03466F7C ADD X8, X8, W9, 0x4, SXTW
	0x03466F80 ADD X0, X8, 0x138
	0x03466F84 LDP X8, X1, [X0]
	0x03466F88 MOV X0, X21
	0x03466F8C BLR X8
	0x03466F90 MOV X1, X31
	0x03466F94 BL 0x32277A8
	0x03466F98 TBNZ X0, 0x0, 0x34670FC
	0x03466F9C LDR X8, [X19 + 0x48]
	0x03466FA0 CBZ X8, 0x34672A4
	0x03466FA4 ADRP X9, 0xC8E000
	0x03466FA8 LDR X9, [X9 + 0x9F0]
	0x03466FAC LDR X21, [X8 + 0x18]
	0x03466FB0 LDR X0, [X9]
	0x03466FB4 LDR W9, [X0 + 0xE0]
	0x03466FB8 CBNZ W9, 0x3466FC0
	0x03466FBC BL 0x1C16DFC
	0x03466FC0 MOV X0, X31
	0x03466FC4 BL 0x33616A4
	0x03466FC8 ADRP X22, 0xC8F000
	0x03466FCC LDR X22, [X22 + 0xA10]
	0x03466FD0 MOV X8, X0
	0x03466FD4 STR X8, [X31 + 0x28]
	0x03466FD8 LDR X0, [X22]
	0x03466FDC LDR W8, [X0 + 0xE0]
	0x03466FE0 CBNZ W8, 0x3466FEC
	0x03466FE4 BL 0x1C16DFC
	0x03466FE8 LDR X0, [X22]
	0x03466FEC LDR X8, [X0 + 0xB8]
	0x03466FF0 LDR X1, [X8]
	0x03466FF4 ADD X0, X31, 0x28
	0x03466FF8 MOV X2, X31
	0x03466FFC BL 0x335FC68
	0x03467000 CBZ X21, 0x34672A8
	0x03467004 LDR X8, [X21]
	0x03467008 LDR X1, [X23]
	0x0346700C MOV X22, X0
	0x03467010 LDRH W9, [X8 + 0x12E]
	0x03467014 CBZ X9, 0x3467038
	0x03467018 LDR X10, [X8 + 0xB0]
	0x0346701C ADD X10, X10, 0x8
	0x03467020 LDUR X11, [X10 - 0x8]
	0x03467024 CMP X11, X1
	0x03467028 B.EQ 0x3467048
	0x0346702C SUBS X9, X9, 0x1
	0x03467030 ADD X10, X10, 0x10
	0x03467034 B.NE 0x3467020
	0x03467038 MOVZ W2, 0xB
	0x0346703C MOV X0, X21
	0x03467040 BL 0x1C5C788
	0x03467044 B 0x3467058
	0x03467048 LDR W9, [X10]
	0x0346704C ADD W9, W9, 0xB
	0x03467050 ADD X8, X8, W9, 0x4, SXTW
	0x03467054 ADD X0, X8, 0x138
	0x03467058 LDP X8, X2, [X0]
	0x0346705C MOV X0, X21
	0x03467060 MOV X1, X22
	0x03467064 BLR X8
	0x03467068 TBZ X0, 0x0, 0x34670FC
	0x0346706C LDR X8, [X19 + 0x48]
	0x03467070 CBZ X8, 0x34672AC
	0x03467074 LDR X1, [X8 + 0x18]
	0x03467078 LDR X3, [X19 + 0x40]
	0x0346707C LDR X4, [X8 + 0x28]
	0x03467080 MOV X0, X20
	0x03467084 MOV X2, X31
	0x03467088 MOV X5, X31
	0x0346708C BL 0x34440A8
	0x03467090 CBZ X0, 0x34672B0
	0x03467094 ADRP X8, 0xC8D000
	0x03467098 LDR X8, [X8 + 0x840]
	0x0346709C LDR X1, [X8]
	0x034670A0 BL 0x269F5D0
	0x034670A4 ADRP X8, 0xC8D000
	0x034670A8 LDR X8, [X8 + 0x838]
	0x034670AC STR X0, [X31 + 0x20]
	0x034670B0 LDR X1, [X8]
	0x034670B4 ADD X0, X31, 0x20
	0x034670B8 BL 0x2677430
	0x034670BC TBNZ X0, 0x0, 0x3466EB4
	0x034670C0 STR W31, [X19]
	0x034670C4 LDR X8, [X31 + 0x20]
	0x034670C8 STR X8, [X19 + 0x50]
	0x034670CC LDR X0, [X25]
	0x034670D0 LDR W8, [X0 + 0xE0]
	0x034670D4 CBNZ W8, 0x34670DC
	0x034670D8 BL 0x1C16DFC
	0x034670DC ADRP X8, 0xCC9000
	0x034670E0 LDR X8, [X8 + 0x440]
	0x034670E4 ADD X0, X19, 0x8
	0x034670E8 LDR X3, [X8]
	0x034670EC ADD X1, X31, 0x20
	0x034670F0 MOV X2, X19
	0x034670F4 BL 0x1FBD58C
	0x034670F8 B 0x346726C
	0x034670FC CBZ X20, 0x3467290
	0x03467100 ADRP X8, 0xCC8000
	0x03467104 LDR X8, [X8 + 0x848]
	0x03467108 LDR X21, [X20 + 0x58]
	0x0346710C LDR X23, [X19 + 0x48]
	0x03467110 LDR X0, [X8]
	0x03467114 BL 0x1C16F10
	0x03467118 ADRP X8, 0xCC9000
	0x0346711C LDR X8, [X8 + 0x448]
	0x03467120 MOV X22, X0
	0x03467124 LDR X2, [X8]
	0x03467128 MOV X1, X23
	0x0346712C MOV X3, X31
	0x03467130 BL 0x2D27AA8
	0x03467134 LDR X8, [X19 + 0x48]
	0x03467138 CBZ X8, 0x3467284
	0x0346713C ADRP X9, 0xCC8000
	0x03467140 LDR X23, [X19 + 0x40]
	0x03467144 LDR X9, [X9 + 0x7C8]
	0x03467148 CBNZ X23, 0x3467150
	0x0346714C LDR X23, [X20 + 0x18]
	0x03467150 LDR X20, [X8 + 0x18]
	0x03467154 LDR X1, [X8 + 0x28]
	0x03467158 LDR X2, [X9]
	0x0346715C STP X31, X31, [X31 + 0x8]
	0x03467160 ADD X0, X31, 0x8
	0x03467164 BL 0x242E368
	0x03467168 ADRP X8, 0xCC8000
	0x0346716C LDR X8, [X8 + 0x7D0]
	0x03467170 LDR X0, [X8]
	0x03467174 BL 0x1C16F10
	0x03467178 LDP X3, X4, [X31 + 0x8]
	0x0346717C MOV X24, X0
	0x03467180 MOV X1, X20
	0x03467184 MOV X2, X23
	0x03467188 BL 0x3465404
	0x0346718C CBZ X21, 0x3467288
	0x03467190 ADRP X8, 0xCC8000
	0x03467194 LDR X8, [X8 + 0x850]
	0x03467198 LDR X3, [X8]
	0x0346719C MOV X0, X21
	0x034671A0 MOV X1, X22
	0x034671A4 MOV X2, X24
	0x034671A8 BL 0x2243230
	0x034671AC CBZ X0, 0x346728C
	0x034671B0 ADRP X8, 0xCC9000
	0x034671B4 LDR X8, [X8 + 0x420]
	0x034671B8 LDR X1, [X8]
	0x034671BC BL 0x269F5D0
	0x034671C0 ADRP X8, 0xCC9000
	0x034671C4 LDR X8, [X8 + 0x418]
	0x034671C8 STR X0, [X31 + 0x18]
	0x034671CC LDR X1, [X8]
	0x034671D0 ADD X0, X31, 0x18
	0x034671D4 BL 0x2677430
	0x034671D8 TBZ X0, 0x0, 0x3467230
	0x034671DC ADRP X8, 0xCC9000
	0x034671E0 LDR X8, [X8 + 0x410]
	0x034671E4 ADD X0, X31, 0x18
	0x034671E8 LDR X1, [X8]
	0x034671EC BL 0x2677474
	0x034671F0 MOVN W8, 0x1
	0x034671F4 STR W8, [X19]
	0x034671F8 STR X31, [X19 + 0x48]
	0x034671FC MOV X20, X0
	0x03467200 LDR X0, [X25]
	0x03467204 ADRP X21, 0xCC8000
	0x03467208 ADD X19, X19, 0x8
	0x0346720C LDR W8, [X0 + 0xE0]
	0x03467210 LDR X21, [X21 + 0x2C0]
	0x03467214 CBNZ W8, 0x346721C
	0x03467218 BL 0x1C16DFC
	0x0346721C LDR X2, [X21]
	0x03467220 MOV X0, X19
	0x03467224 MOV X1, X20
	0x03467228 BL 0x26322B0
	0x0346722C B 0x346726C
	0x03467230 MOVZ W8, 0x1
	0x03467234 STR W8, [X19]
	0x03467238 LDR X8, [X31 + 0x18]
	0x0346723C STR X8, [X19 + 0x58]
	0x03467240 LDR X0, [X25]
	0x03467244 LDR W8, [X0 + 0xE0]
	0x03467248 CBNZ W8, 0x3467250
	0x0346724C BL 0x1C16DFC
	0x03467250 ADRP X8, 0xCC9000
	0x03467254 LDR X8, [X8 + 0x438]
	0x03467258 ADD X0, X19, 0x8
	0x0346725C LDR X3, [X8]
	0x03467260 ADD X1, X31, 0x18
	0x03467264 MOV X2, X19
	0x03467268 BL 0x1FBD58C
	0x0346726C LDP X20, X19, [X31 + 0x60]
	0x03467270 LDP X22, X21, [X31 + 0x50]
	0x03467274 LDP X24, X23, [X31 + 0x40]
	0x03467278 LDP X30, X25, [X31 + 0x30]
	0x0346727C ADD X31, X31, 0x70
	0x03467280 RET
	0x03467284 BL 0x1C16F20
	0x03467288 BL 0x1C16F20
	0x0346728C BL 0x1C16F20
	0x03467290 BL 0x1C16F20
	0x03467294 BL 0x1C16F20
	0x03467298 BL 0x1C16F20
	0x0346729C BL 0x1C16F20
	0x034672A0 BL 0x1C16F20
	0x034672A4 BL 0x1C16F20
	0x034672A8 BL 0x1C16F20
	0x034672AC BL 0x1C16F20
	0x034672B0 BL 0x1C16F20
	0x034672B4 B 0x3467328
	0x034672B8 B 0x3467328
	0x034672BC B 0x3467328
	0x034672C0 B 0x3467328
	0x034672C4 B 0x3467328
	0x034672C8 B 0x3467328
	0x034672CC B 0x3467328
	0x034672D0 B 0x3467328
	0x034672D4 B 0x3467328
	0x034672D8 B 0x3467328
	0x034672DC B 0x3467328
	0x034672E0 B 0x3467328
	0x034672E4 B 0x3467328
	0x034672E8 B 0x3467328
	0x034672EC B 0x3467328
	0x034672F0 B 0x3467328
	0x034672F4 B 0x3467328
	0x034672F8 B 0x3467328
	0x034672FC B 0x3467328
	0x03467300 B 0x3467328
	0x03467304 B 0x3467328
	0x03467308 B 0x3467328
	0x0346730C B 0x3467328
	0x03467310 B 0x3467328
	0x03467314 B 0x3467328
	0x03467318 B 0x3467328
	0x0346731C B 0x3467328
	0x03467320 B 0x3467328
	0x03467324 B 0x3467328
	0x03467328 MOV X20, X0
	0x0346732C CMP W1, 0x1
	0x03467330 B.NE 0x34673D0
	0x03467334 MOV X0, X20
	0x03467338 BL 0x3EB1AD0
	0x0346733C MOV X20, X0
	0x03467340 ADRP X0, 0xC8C000
	0x03467344 LDR X0, [X0 + 0x7D0]
	0x03467348 BL 0x1C16D08
	0x0346734C LDR X8, [X20]
	0x03467350 LDR X1, [X8]
	0x03467354 BL 0x1C17270
	0x03467358 TBZ X0, 0x0, 0x34673A8
	0x0346735C LDR X20, [X20]
	0x03467360 BL 0x3EB1AE0
	0x03467364 MOVN W8, 0x1
	0x03467368 STR X31, [X19 + 0x48]
	0x0346736C STR W8, [X19], #0x8
	0x03467370 ADRP X0, 0xCC7000
	0x03467374 LDR X0, [X0 + 0x668]
	0x03467378 BL 0x1C16D08
	0x0346737C LDR W8, [X0 + 0xE0]
	0x03467380 CBNZ W8, 0x3467388
	0x03467384 BL 0x1C16DFC
	0x03467388 ADRP X0, 0xCC8000
	0x0346738C LDR X0, [X0 + 0x300]
	0x03467390 BL 0x1C16D08
	0x03467394 MOV X2, X0
	0x03467398 MOV X0, X19
	0x0346739C MOV X1, X20
	0x034673A0 BL 0x26324C8
	0x034673A4 B 0x346726C
	0x034673A8 MOVZ W0, 0x8
	0x034673AC BL 0x3EB1AF0
	0x034673B0 LDR X8, [X20]
	0x034673B4 STR X8, [X0]
	0x034673B8 ADRP X1, 0xA4D000
	0x034673BC ADD X1, X1, 0xE58
	0x034673C0 MOV X2, X31
	0x034673C4 BL 0x3EB1B00
	0x034673C8 MOV X20, X0
	0x034673CC BL 0x3EB1AE0
	0x034673D0 MOV X0, X20
	0x034673D4 BL 0x1D2C690
	0x034673D8 BL 0x1990590
	0x034673DC STR X30, [X31 - 0x30]!
	0x034673E0 STP X22, X21, [X31 + 0x10]
	0x034673E4 STP X20, X19, [X31 + 0x20]
	0x034673E8 ADRP X22, 0xF76000
	0x034673EC ADRP X21, 0xCC7000
	0x034673F0 LDRB W8, [X22 + 0x7C6]
	0x034673F4 LDR X21, [X21 + 0x668]
	0x034673F8 MOV X19, X1
	0x034673FC MOV X20, X0
	0x03467400 TBNZ X8, 0x0, 0x3467424
	0x03467404 ADRP X0, 0xCC8000
	0x03467408 LDR X0, [X0 + 0x308]
	0x0346740C BL 0x1C16CF4
	0x03467410 ADRP X0, 0xCC7000
	0x03467414 LDR X0, [X0 + 0x668]
	0x03467418 BL 0x1C16CF4
	0x0346741C MOVZ W8, 0x1
	0x03467420 STRB W8, [X22 + 0x7C6]
	0x03467424 LDR X0, [X21]
	0x03467428 ADRP X21, 0xCC8000
	0x0346742C LDR W8, [X0 + 0xE0]
	0x03467430 LDR X21, [X21 + 0x308]
	0x03467434 CBNZ W8, 0x346743C
	0x03467438 BL 0x1C16DFC
	0x0346743C LDR X2, [X21]
	0x03467440 ADD X0, X20, 0x8
	0x03467444 MOV X1, X19
	0x03467448 LDP X20, X19, [X31 + 0x20]
	0x0346744C LDP X22, X21, [X31 + 0x10]
	0x03467450 LDR X30, [X31], #0x30
	0x03467454 B 0x2632228
	0x03467458 SUB X31, X31, 0x70
	0x0346745C STP X30, X27, [X31 + 0x20]
	0x03467460 STP X26, X25, [X31 + 0x30]
	0x03467464 STP X24, X23, [X31 + 0x40]
	0x03467468 STP X22, X21, [X31 + 0x50]
	0x0346746C STP X20, X19, [X31 + 0x60]
	0x03467470 ADRP X20, 0xF76000
	0x03467474 LDRB W8, [X20 + 0x7C7]
	0x03467478 MOV X19, X0
	0x0346747C TBNZ X8, 0x0, 0x346756C
	0x03467480 ADRP X0, 0xC8C000
	0x03467484 LDR X0, [X0 + 0x9C8]
	0x03467488 BL 0x1C16CF4
	0x0346748C ADRP X0, 0xCC9000
	0x03467490 LDR X0, [X0 + 0x458]
	0x03467494 BL 0x1C16CF4
	0x03467498 ADRP X0, 0xCC8000
	0x0346749C LDR X0, [X0 + 0xA50]
	0x034674A0 BL 0x1C16CF4
	0x034674A4 ADRP X0, 0xCC8000
	0x034674A8 LDR X0, [X0 + 0x630]
	0x034674AC BL 0x1C16CF4
	0x034674B0 ADRP X0, 0xCC8000
	0x034674B4 LDR X0, [X0 + 0xA58]
	0x034674B8 BL 0x1C16CF4
	0x034674BC ADRP X0, 0xCC8000
	0x034674C0 LDR X0, [X0 + 0xA60]
	0x034674C4 BL 0x1C16CF4
	0x034674C8 ADRP X0, 0xC8F000
	0x034674CC LDR X0, [X0 + 0x1A0]
	0x034674D0 BL 0x1C16CF4
	0x034674D4 ADRP X0, 0xC8D000
	0x034674D8 LDR X0, [X0 + 0x818]
	0x034674DC BL 0x1C16CF4
	0x034674E0 ADRP X0, 0xCC8000
	0x034674E4 LDR X0, [X0 + 0x7C8]
	0x034674E8 BL 0x1C16CF4
	0x034674EC ADRP X0, 0xCC8000
	0x034674F0 LDR X0, [X0 + 0x7D0]
	0x034674F4 BL 0x1C16CF4
	0x034674F8 ADRP X0, 0xCC8000
	0x034674FC LDR X0, [X0 + 0xA68]
	0x03467500 BL 0x1C16CF4
	0x03467504 ADRP X0, 0xCC8000
	0x03467508 LDR X0, [X0 + 0xA70]
	0x0346750C BL 0x1C16CF4
	0x03467510 ADRP X0, 0xCC8000
	0x03467514 LDR X0, [X0 + 0xA78]
	0x03467518 BL 0x1C16CF4
	0x0346751C ADRP X0, 0xCC8000
	0x03467520 LDR X0, [X0 + 0xA80]
	0x03467524 BL 0x1C16CF4
	0x03467528 ADRP X0, 0xCC8000
	0x0346752C LDR X0, [X0 + 0xA88]
	0x03467530 BL 0x1C16CF4
	0x03467534 ADRP X0, 0xCC9000
	0x03467538 LDR X0, [X0 + 0x460]
	0x0346753C BL 0x1C16CF4
	0x03467540 ADRP X0, 0xCC9000
	0x03467544 LDR X0, [X0 + 0x468]
	0x03467548 BL 0x1C16CF4
	0x0346754C ADRP X0, 0xCC9000
	0x03467550 LDR X0, [X0 + 0x470]
	0x03467554 BL 0x1C16CF4
	0x03467558 ADRP X0, 0xCC9000
	0x0346755C LDR X0, [X0 + 0x478]
	0x03467560 BL 0x1C16CF4
	0x03467564 MOVZ W8, 0x1
	0x03467568 STRB W8, [X20 + 0x7C7]
	0x0346756C STR X31, [X31 + 0x18]
	0x03467570 ADRP X25, 0xCC8000
	0x03467574 LDR W8, [X19]
	0x03467578 LDR X26, [X19 + 0x20]
	0x0346757C LDR X25, [X25 + 0x630]
	0x03467580 CBZ W8, 0x3467620
	0x03467584 ADRP X8, 0xCC9000
	0x03467588 LDR X8, [X8 + 0x468]
	0x0346758C LDR X0, [X8]
	0x03467590 BL 0x1C16F10
	0x03467594 MOV X20, X0
	0x03467598 MOV X1, X31
	0x0346759C BL 0x3445E3C
	0x034675A0 STR X20, [X19 + 0x48]
	0x034675A4 CBZ X20, 0x3467E78
	0x034675A8 LDR X8, [X19 + 0x20]
	0x034675AC STR X8, [X20 + 0x10]
	0x034675B0 LDR X8, [X19 + 0x28]
	0x034675B4 STR X8, [X20 + 0x18]
	0x034675B8 LDR X8, [X19 + 0x30]
	0x034675BC STR X8, [X20 + 0x20]
	0x034675C0 LDR X8, [X19 + 0x38]
	0x034675C4 STR X8, [X20 + 0x28]
	0x034675C8 LDR X8, [X19 + 0x48]
	0x034675CC CBZ X8, 0x3467E7C
	0x034675D0 LDR X20, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xF78000
	015 Move W8, [X20+1985]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {95}
	021 Move X0, 0xCCB000
	022 Move X0, [X0+944]
	023 Call 0x1C17CF4
	024 Move X0, 0xCCB000
	025 Move X0, [X0+952]
	026 Call 0x1C17CF4
	027 Move X0, 0xCCB000
	028 Move X0, [X0+960]
	029 Call 0x1C17CF4
	030 Move X0, 0xCCA000
	031 Move X0, [X0+648]
	032 Call 0x1C17CF4
	033 Move X0, 0xCC9000
	034 Move X0, [X0+1688]
	035 Call 0x1C17CF4
	036 Move X0, 0xC90000
	037 Move X0, [X0+2576]
	038 Call 0x1C17CF4
	039 Move X0, 0xC8F000
	040 Move X0, [X0+2544]
	041 Call 0x1C17CF4
	042 Move X0, 0xCCB000
	043 Move X0, [X0+968]
	044 Call 0x1C17CF4
	045 Move X0, 0xCCB000
	046 Move X0, [X0+976]
	047 Call 0x1C17CF4
	048 Move X0, 0xC8F000
	049 Move X0, [X0+2072]
	050 Call 0x1C17CF4
	051 Move X0, 0xCCB000
	052 Move X0, [X0+984]
	053 Call 0x1C17CF4
	054 Move X0, 0xCCB000
	055 Move X0, [X0+992]
	056 Call 0x1C17CF4
	057 Move X0, 0xCC9000
	058 Move X0, [X0+64]
	059 Call 0x1C17CF4
	060 Move X0, 0xCCA000
	061 Move X0, [X0+1992]
	062 Call 0x1C17CF4
	063 Move X0, 0xCCA000
	064 Move X0, [X0+2000]
	065 Call 0x1C17CF4
	066 Move X0, 0xCCB000
	067 Move X0, [X0+1000]
	068 Call 0x1C17CF4
	069 Move X0, 0xC90000
	070 Move X0, [X0+3608]
	071 Call 0x1C17CF4
	072 Move X0, 0xC8F000
	073 Move X0, [X0+2096]
	074 Call 0x1C17CF4
	075 Move X0, 0xC90000
	076 Move X0, [X0+3616]
	077 Call 0x1C17CF4
	078 Move X0, 0xC8F000
	079 Move X0, [X0+2104]
	080 Call 0x1C17CF4
	081 Move X0, 0xC90000
	082 Move X0, [X0+3624]
	083 Call 0x1C17CF4
	084 Move X0, 0xC8F000
	085 Move X0, [X0+2112]
	086 Call 0x1C17CF4
	087 Move X0, 0xCCB000
	088 Move X0, [X0+1008]
	089 Call 0x1C17CF4
	090 Move X0, 0xCCB000
	091 Move X0, [X0+1016]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X20+1985], W8
	095 Move [X31+32], X31
	096 Move [X31+40], X31
	097 Move [X31+24], X31
	098 Move X25, 0xCC9000
	099 Move W8, [X19]
	100 Move X20, [X19+32]
	101 Move X25, [X25+1688]
	102 Compare W8, 0
	103 JumpIfEqual {112}
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, [X19+88]
	106 Move TEMP, 0
	107 Not TEMP
	108 Move W9, TEMP
	109 Move [X31+24], X8
	110 Move [X19+88], X31
	111 Move [X19], W9
	112 Move X8, [X19+80]
	113 Move TEMP, 0
	114 Not TEMP
	115 Move W9, TEMP
	116 Move [X31+32], X8
	117 Move [X19+80], X31
	118 Move [X19], W9
	119 Move X8, 0xC8F000
	120 Move X8, [X8+2096]
	121 Add X0, X31, 32
	122 Move X1, [X8]
	123 Call TaskAwaiter`1<Object>.GetResult, X0
	124 Move X8, 0xCCB000
	125 Move X8, [X8+1016]
	126 Move X0, [X8]
	127 Call 0x1C17F10
	128 Move X21, X0
	129 Move X1, X31
	130 Call <>c__DisplayClass100_0..ctor, X0
	131 Move [X19+64], X21
	132 Compare X21, 0
	133 JumpIfEqual {544}
	134 Move X8, [X19+32]
	135 Move [X21+16], X8
	136 Move X8, [X19+40]
	137 Move [X21+24], X8
	138 Move X8, [X19+48]
	139 Move [X21+40], X8
	140 Compare X20, 0
	141 JumpIfEqual {545}
	142 Move W8, [X20+16]
	143 Compare W8, 0
	144 JumpIfEqual {280}
	145 Move X8, [X19+64]
	146 Compare X8, 0
	147 JumpIfEqual {546}
	148 Move X21, [X8+24]
	149 Compare X21, 0
	150 JumpIfEqual {547}
	151 Move X23, 0xC8F000
	152 Move X8, [X21]
	153 Move X23, [X23+2072]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Move X1, [X23]
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move W2, 7
	165 Move X0, X21
	166 Call 0x1C5D788
	167 Move W9, [X10]
	168 Add W9, W9, 7
	169 Add X8, X8, W9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X1, [X0+8]
	173 Move X0, X21
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move X1, X31
	176 Call String.IsNullOrEmpty, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {280}
	181 Move X8, [X19+64]
	182 Compare X8, 0
	183 JumpIfEqual {548}
	184 Move X9, 0xC8F000
	185 Move X9, [X9+2544]
	186 Move X21, [X8+24]
	187 Move X0, [X9]
	188 Move W9, [X0+224]
	189 Compare W9, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X0, X31
	193 Call DateTime.get_UtcNow
	194 Move X22, 0xC90000
	195 Move X22, [X22+2576]
	196 Move X8, X0
	197 Move [X31+40], X8
	198 Move X0, [X22]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {204}
	202 Call 0x1C17DFC
	203 Move X0, [X22]
	204 Move X8, [X0+184]
	205 Move X1, [X8]
	206 Add X0, X31, 40
	207 Move X2, X31
	208 Call DateTime.Add, X0, X1
	209 Compare X21, 0
	210 JumpIfEqual {549}
	211 Move X8, [X21]
	212 Move X1, [X23]
	213 Move X22, X0
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 11
	224 Move X0, X21
	225 Call 0x1C5D788
	226 Move W9, [X10]
	227 Add W9, W9, 11
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X2, [X0+8]
	232 Move X0, X21
	233 Move X1, X22
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {280}
	239 Move X8, [X19+64]
	240 Compare X8, 0
	241 JumpIfEqual {550}
	242 Move X1, [X8+24]
	243 Move X3, [X19+56]
	244 Move X4, [X8+40]
	245 Move X0, X20
	246 Move X2, X31
	247 Move X5, X31
	248 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	249 Compare X0, 0
	250 JumpIfEqual {551}
	251 Move X8, 0xC8E000
	252 Move X8, [X8+2112]
	253 Move X1, [X8]
	254 Call Task`1<Object>.GetAwaiter, X0
	255 Move X8, 0xC8E000
	256 Move X8, [X8+2104]
	257 Move [X31+32], X0
	258 Move X1, [X8]
	259 Add X0, X31, 32
	260 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {119}
	265 Move [X19], W31
	266 Move X8, [X31+32]
	267 Move [X19+80], X8
	268 Move X0, [X25]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X8, 0xCCA000
	274 Move X8, [X8+960]
	275 Add X0, X19, 8
	276 Move X3, [X8]
	277 Add X1, X31, 32
	278 Move X2, X19
	279 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	280 Move X8, 0xCC8000
	281 Move X8, [X8+64]
	282 Move X22, [X19+64]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X8, 0xCCA000
	286 Move X8, [X8+992]
	287 Move X21, X0
	288 Move X1, [X8]
	289 Call List`1<Object>..ctor, X0
	290 Compare X22, 0
	291 JumpIfEqual {539}
	292 Move [X22+32], X21
	293 Move X24, [X19+72]
	294 Compare X24, 0
	295 JumpIfEqual {414}
	296 Move W8, [X24+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X27, 0xCCA000
	299 Move X28, 0xCCA000
	300 Move X29, 0xCCA000
	301 Move X27, [X27+944]
	302 Move X28, [X28+976]
	303 Move X29, [X29+984]
	304 Move W26, W31
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X8, [X19+64]
	307 Compare X8, 0
	308 JumpIfEqual {534}
	309 Add X9, X24, W26
	310 Move X21, [X8+32]
	311 Move X23, [X9+32]
	312 Move X0, [X27]
	313 Call 0x1C17F10
	314 Move X22, X0
	315 Move X1, X31
	316 Call ApiReadStorageObjectId..ctor, X0
	317 Compare X23, 0
	318 JumpIfEqual {535}
	319 Move X8, [X23]
	320 Move X1, [X28]
	321 NotImplemented "Instruction LDRH not yet implemented."
	322 Compare X9, 0
	323 JumpIfEqual {330}
	324 Move X10, [X8+176]
	325 Add X10, X10, 8
	326 NotImplemented "Instruction LDUR not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Subtract X9, X9, 1
	329 Add X10, X10, 16
	330 Move X0, X23
	331 Move W2, W31
	332 Call 0x1C5D788
	333 NotImplemented "Instruction LDRSW not yet implemented."
	334 Add X8, X8, X9
	335 Add X0, X8, 312
	336 Move X8, [X0]
	337 Move X1, [X0+8]
	338 Move X0, X23
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Compare X22, 0
	341 JumpIfEqual {536}
	342 Move [X22+16], X0
	343 Move X8, [X23]
	344 Move X1, [X28]
	345 NotImplemented "Instruction LDRH not yet implemented."
	346 Compare X9, 0
	347 JumpIfEqual {354}
	348 Move X10, [X8+176]
	349 Add X10, X10, 8
	350 NotImplemented "Instruction LDUR not yet implemented."
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Subtract X9, X9, 1
	353 Add X10, X10, 16
	354 Move W2, 1
	355 Move X0, X23
	356 Call 0x1C5D788
	357 Move W9, [X10]
	358 Add W9, W9, 1
	359 Add X8, X8, W9
	360 Add X0, X8, 312
	361 Move X8, [X0]
	362 Move X1, [X0+8]
	363 Move X0, X23
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Move [X22+24], X0
	366 Move X8, [X23]
	367 Move X1, [X28]
	368 NotImplemented "Instruction LDRH not yet implemented."
	369 Compare X9, 0
	370 JumpIfEqual {377}
	371 Move X10, [X8+176]
	372 Add X10, X10, 8
	373 NotImplemented "Instruction LDUR not yet implemented."
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Subtract X9, X9, 1
	376 Add X10, X10, 16
	377 Move W2, 2
	378 Move X0, X23
	379 Call 0x1C5D788
	380 Move W9, [X10]
	381 Add W9, W9, 2
	382 Add X8, X8, W9
	383 Add X0, X8, 312
	384 Move X8, [X0]
	385 Move X1, [X0+8]
	386 Move X0, X23
	387 NotImplemented "Instruction BLR not yet implemented."
	388 Move [X22+32], X0
	389 Compare X21, 0
	390 JumpIfEqual {537}
	391 Move W10, [X21+28]
	392 Move X8, [X21+16]
	393 Move X9, [X29]
	394 Add W10, W10, 1
	395 Move [X21+28], W10
	396 Compare X8, 0
	397 JumpIfEqual {538}
	398 NotImplemented "Instruction LDRSW not yet implemented."
	399 Move W11, [X8+24]
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Add W9, W10, 1
	402 Add X8, X8, X10
	403 Move [X21+24], W9
	404 Move [X8+32], X22
	405 Move X8, [X9+32]
	406 Move X8, [X8+192]
	407 Move X2, [X8+112]
	408 Move X0, X21
	409 Move X1, X22
	410 Call List`1<Object>.AddWithResize, X0, X1
	411 Move W8, [X24+24]
	412 Add W26, W26, 1
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Compare X20, 0
	415 JumpIfEqual {540}
	416 Move X8, 0xCCA000
	417 Move X8, [X8+968]
	418 Move X21, [X20+88]
	419 Move X23, [X19+64]
	420 Move X0, [X8]
	421 Call 0x1C17F10
	422 Move X8, 0xCCA000
	423 Move X8, [X8+1008]
	424 Move X22, X0
	425 Move X2, [X8]
	426 Move X1, X23
	427 Move X3, X31
	428 Call Func`1<Object>..ctor, X0, X1, X2
	429 Move X8, [X19+64]
	430 Compare X8, 0
	431 JumpIfEqual {541}
	432 Move X9, 0xCC9000
	433 Move X23, [X19+56]
	434 Move X9, [X9+1992]
	435 Compare X23, 0
	436 JumpIfNotEqual {438}
	437 Move X23, [X20+24]
	438 Move X20, [X8+24]
	439 Move X1, [X8+40]
	440 Move X2, [X9]
	441 Move [X31+8], X31
	442 Move [X31+16], X31
	443 Add X0, X31, 8
	444 Call Nullable`1<CancellationToken>..ctor, X0, X1
	445 Move X8, 0xCC9000
	446 Move X8, [X8+2000]
	447 Move X0, [X8]
	448 Call 0x1C17F10
	449 Move X3, [X31+8]
	450 Move X4, [X31+16]
	451 Move X24, X0
	452 Move X1, X20
	453 Move X2, X23
	454 Call RetryHistory..ctor, X0, X1, X2, X3
	455 Compare X21, 0
	456 JumpIfEqual {542}
	457 Move X8, 0xCCA000
	458 Move X8, [X8+1000]
	459 Move X3, [X8]
	460 Move X0, X21
	461 Move X1, X22
	462 Move X2, X24
	463 Call 0x2244230, X0, X1, X2
	464 Compare X0, 0
	465 JumpIfEqual {543}
	466 Move X8, 0xC8F000
	467 Move X8, [X8+3624]
	468 Move X1, [X8]
	469 Call Task`1<Object>.GetAwaiter, X0
	470 Move X8, 0xC8F000
	471 Move X8, [X8+3616]
	472 Move [X31+24], X0
	473 Move X1, [X8]
	474 Add X0, X31, 24
	475 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	476 Move TEMP, X0
	477 And TEMP, TEMP, 1
	478 Compare TEMP, 1
	479 JumpIfNotEqual {503}
	480 Move X8, 0xC8F000
	481 Move X8, [X8+3608]
	482 Add X0, X31, 24
	483 Move X1, [X8]
	484 Call TaskAwaiter`1<Object>.GetResult, X0
	485 Move TEMP, 1
	486 Not TEMP
	487 Move W8, TEMP
	488 Move [X19], W8
	489 Move [X19+64], X31
	490 Move X20, X0
	491 Move X0, [X25]
	492 Move X21, 0xCC9000
	493 Add X19, X19, 8
	494 Move W8, [X0+224]
	495 Move X21, [X21+648]
	496 Compare W8, 0
	497 JumpIfNotEqual {499}
	498 Call 0x1C17DFC
	499 Move X2, [X21]
	500 Move X0, X19
	501 Move X1, X20
	502 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	503 Move W8, 1
	504 Move [X19], W8
	505 Move X8, [X31+24]
	506 Move [X19+88], X8
	507 Move X0, [X25]
	508 Move W8, [X0+224]
	509 Compare W8, 0
	510 JumpIfNotEqual {512}
	511 Call 0x1C17DFC
	512 Move X8, 0xCCA000
	513 Move X8, [X8+952]
	514 Add X0, X19, 8
	515 Move X3, [X8]
	516 Add X1, X31, 24
	517 Move X2, X19
	518 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	519 Move X20, [X31+128]
	520 Move X19, [X31+136]
	521 Move X22, [X31+112]
	522 Move X21, [X31+120]
	523 Move X24, [X31+96]
	524 Move X23, [X31+104]
	525 Move X26, [X31+80]
	526 Move X25, [X31+88]
	527 Move X28, [X31+64]
	528 Move X27, [X31+72]
	529 Move X29, [X31+48]
	530 Move X30, [X31+56]
	531 Add X31, X31, 144
	532 Return 
	533 Call 0x1C17F28
	534 Call 0x1C17F20
	535 Call 0x1C17F20
	536 Call 0x1C17F20
	537 Call 0x1C17F20
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Call 0x1C17F20
	541 Call 0x1C17F20
	542 Call 0x1C17F20
	543 Call 0x1C17F20
	544 Call 0x1C17F20
	545 Call 0x1C17F20
	546 Call 0x1C17F20
	547 Call 0x1C17F20
	548 Call 0x1C17F20
	549 Call 0x1C17F20
	550 Call 0x1C17F20
	551 Call 0x1C17F20
	552 Move X20, X0
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Move X0, X20
	555 Call 0x3EB2AD0
	556 Move X20, X0
	557 Move X0, 0xC8D000
	558 Move X0, [X0+2000]
	559 Call 0x1C17D08
	560 Move X8, [X20]
	561 Move X1, [X8]
	562 Call 0x1C18270
	563 Move TEMP, X0
	564 And TEMP, TEMP, 1
	565 Compare TEMP, 1
	566 JumpIfNotEqual {588}
	567 Move X20, [X20]
	568 Call 0x3EB2AE0
	569 Move TEMP, 1
	570 Not TEMP
	571 Move W8, TEMP
	572 Move [X19+64], X31
	573 Move [X19+8], W8
	574 Move X0, 0xCC8000
	575 Move X0, [X0+1688]
	576 Call 0x1C17D08
	577 Move W8, [X0+224]
	578 Compare W8, 0
	579 JumpIfNotEqual {581}
	580 Call 0x1C17DFC
	581 Move X0, 0xCC9000
	582 Move X0, [X0+680]
	583 Call 0x1C17D08
	584 Move X2, X0
	585 Move X0, X19
	586 Move X1, X20
	587 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	588 Move W0, 8
	589 Call 0x3EB2AF0
	590 Move X8, [X20]
	591 Move [X0], X8
	592 Move X1, 0xA4E000
	593 Add X1, X1, 3672
	594 Move X2, X31
	595 Call 0x3EB2B00
	596 Move X20, X0
	597 Call 0x3EB2AE0
	598 Move X0, X20
	599 Call 0x1D2D690
	600 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x034675D4 CBZ X20, 0x3467E80
	0x034675D8 ADRP X23, 0xC8D000
	0x034675DC LDR X8, [X20]
	0x034675E0 LDR X23, [X23 + 0x818]
	0x034675E4 LDRH W9, [X8 + 0x12E]
	0x034675E8 LDR X1, [X23]
	0x034675EC CBZ X9, 0x3467610
	0x034675F0 LDR X10, [X8 + 0xB0]
	0x034675F4 ADD X10, X10, 0x8
	0x034675F8 LDUR X11, [X10 - 0x8]
	0x034675FC CMP X11, X1
	0x03467600 B.EQ 0x3467638
	0x03467604 SUBS X9, X9, 0x1
	0x03467608 ADD X10, X10, 0x10
	0x0346760C B.NE 0x34675F8
	0x03467610 MOVZ W2, 0x1
	0x03467614 MOV X0, X20
	0x03467618 BL 0x1C5C788
	0x0346761C B 0x3467648
	0x03467620 LDR X8, [X19 + 0x50]
	0x03467624 MOVN W9, 0x0
	0x03467628 STR X8, [X31 + 0x18]
	0x0346762C STR X31, [X19 + 0x50]
	0x03467630 STR W9, [X19]
	0x03467634 B 0x3467B30
	0x03467638 LDR W9, [X10]
	0x0346763C ADD W9, W9, 0x1
	0x03467640 ADD X8, X8, W9, 0x4, SXTW
	0x03467644 ADD X0, X8, 0x138
	0x03467648 LDP X8, X1, [X0]
	0x0346764C MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF77000
	007 Move X21, 0xCC8000
	008 Move W8, [X22+1986]
	009 Move X21, [X21+1688]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC9000
	017 Move X0, [X0+688]
	018 Call 0x1C17CF4
	019 Move X0, 0xCC8000
	020 Move X0, [X0+1688]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1986], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC9000
	026 Move W8, [X0+224]
	027 Move X21, [X21+688]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

