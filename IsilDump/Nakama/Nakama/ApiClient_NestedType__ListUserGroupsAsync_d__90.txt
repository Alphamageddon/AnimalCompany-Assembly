Type: Nakama.ApiClient/<ListUserGroupsAsync>d__90

Method: System.Void MoveNext()

Disassembly:
	0x03434254 STR W8, [X19], #0x8
	0x03434258 LDR X0, [X27]
	0x0343425C LDR W8, [X0 + 0xE0]
	0x03434260 CBNZ W8, 0x3434268
	0x03434264 BL 0x1C16DFC
	0x03434268 MOV X0, X19
	0x0343426C MOV X1, X31
	0x03434270 BL 0x32C4864
	0x03434274 B 0x34342B0
	0x03434278 STR W31, [X19]
	0x0343427C LDR X8, [X31 + 0x18]
	0x03434280 STR X8, [X19 + 0x50]
	0x03434284 LDR X0, [X27]
	0x03434288 LDR W8, [X0 + 0xE0]
	0x0343428C CBNZ W8, 0x3434294
	0x03434290 BL 0x1C16DFC
	0x03434294 ADRP X8, 0xCFB000
	0x03434298 LDR X8, [X8 + 0x268]
	0x0343429C ADD X0, X19, 0x8
	0x034342A0 LDR X3, [X8]
	0x034342A4 ADD X1, X31, 0x18
	0x034342A8 MOV X2, X19
	0x034342AC BL 0x2186BAC
	0x034342B0 LDP X20, X19, [X31 + 0x70]
	0x034342B4 LDP X22, X21, [X31 + 0x60]
	0x034342B8 LDP X24, X23, [X31 + 0x50]
	0x034342BC LDP X26, X25, [X31 + 0x40]
	0x034342C0 LDP X28, X27, [X31 + 0x30]
	0x034342C4 LDP X29, X30, [X31 + 0x20]
	0x034342C8 ADD X31, X31, 0x80
	0x034342CC RET
	0x034342D0 BL 0x1C16F20
	0x034342D4 ADRP X0, 0xCC7000
	0x034342D8 LDR X0, [X0 + 0x578]
	0x034342DC BL 0x1C16D08
	0x034342E0 BL 0x1C16F10
	0x034342E4 MOV X20, X0
	0x034342E8 ADRP X0, 0xCFA000
	0x034342EC LDR X0, [X0 + 0x808]
	0x034342F0 BL 0x1C16D08
	0x034342F4 MOV X1, X0
	0x034342F8 MOV X0, X20
	0x034342FC MOV X2, X31
	0x03434300 BL 0x3314A68
	0x03434304 ADRP X0, 0xCFB000
	0x03434308 LDR X0, [X0 + 0x278]
	0x0343430C BL 0x1C16D08
	0x03434310 MOV X1, X0
	0x03434314 MOV X0, X20
	0x03434318 BL 0x1C16DEC
	0x0343431C BL 0x1C16F20
	0x03434320 MOV X0, X23
	0x03434324 BL 0x1C16F18
	0x03434328 BL 0x1C16F20
	0x0343432C BL 0x1C16F20
	0x03434330 BL 0x1C16F20
	0x03434334 BL 0x1C16F28
	0x03434338 BL 0x1C16F20
	0x0343433C BL 0x1C16F20
	0x03434340 BL 0x1C16F20
	0x03434344 BL 0x1C16F20
	0x03434348 BL 0x1C16F20
	0x0343434C BL 0x1C16F20
	0x03434350 B 0x34343BC
	0x03434354 B 0x34343BC
	0x03434358 B 0x34343BC
	0x0343435C B 0x34343BC
	0x03434360 B 0x34343BC
	0x03434364 B 0x34343BC
	0x03434368 B 0x34343BC
	0x0343436C B 0x34343BC
	0x03434370 B 0x34343BC
	0x03434374 B 0x34343BC
	0x03434378 B 0x34343BC
	0x0343437C B 0x34343BC
	0x03434380 B 0x34343BC
	0x03434384 B 0x34343BC
	0x03434388 B 0x34343BC
	0x0343438C B 0x34343BC
	0x03434390 B 0x34343BC
	0x03434394 B 0x34343BC
	0x03434398 B 0x34343BC
	0x0343439C B 0x34343BC
	0x034343A0 B 0x34343BC
	0x034343A4 B 0x34343BC
	0x034343A8 B 0x34343BC
	0x034343AC B 0x34343BC
	0x034343B0 B 0x34343BC
	0x034343B4 B 0x34343BC
	0x034343B8 B 0x34343BC
	0x034343BC MOV X20, X1
	0x034343C0 MOV X21, X0
	0x034343C4 B 0x3434474
	0x034343C8 B 0x34343E0
	0x034343CC B 0x34343E0
	0x034343D0 B 0x34343E0
	0x034343D4 MOV X21, X28
	0x034343D8 B 0x34343E0
	0x034343DC B 0x34343E0
	0x034343E0 CMP W1, 0x1
	0x034343E4 B.NE 0x34343FC
	0x034343E8 BL 0x3EB1AD0
	0x034343EC LDR X23, [X0]
	0x034343F0 BL 0x3EB1AE0
	0x034343F4 MOV W20, W31
	0x034343F8 B 0x3433FC8
	0x034343FC MOV X21, X0
	0x03434400 MOV X20, X1
	0x03434404 MOV X23, X31
	0x03434408 TBZ X24, 0x1F, 0x3434470
	0x0343440C CBZ X22, 0x3434470
	0x03434410 ADRP X10, 0xCBF000
	0x03434414 LDR X8, [X22]
	0x03434418 LDR X10, [X10 + 0xE00]
	0x0343441C LDRH W9, [X8 + 0x12E]
	0x03434420 LDR X1, [X10]
	0x03434424 CBZ X9, 0x3434448
	0x03434428 LDR X10, [X8 + 0xB0]
	0x0343442C ADD X10, X10, 0x8
	0x03434430 LDUR X11, [X10 - 0x8]
	0x03434434 CMP X11, X1
	0x03434438 B.EQ 0x3434458
	0x0343443C SUBS X9, X9, 0x1
	0x03434440 ADD X10, X10, 0x10
	0x03434444 B.NE 0x3434430
	0x03434448 MOV X0, X22
	0x0343444C MOV W2, W31
	0x03434450 BL 0x1C5C788
	0x03434454 B 0x3434464
	0x03434458 LDRSW X9, [X10]
	0x0343445C ADD X8, X8, X9, 0x4, LSL
	0x03434460 ADD X0, X8, 0x138
	0x03434464 LDP X8, X1, [X0]
	0x03434468 MOV X0, X22
	0x0343446C BLR X8
	0x03434470 CBNZ X23, 0x3434500
	0x03434474 CMP W20, 0x1
	0x03434478 B.NE 0x3434520
	0x0343447C MOV X0, X21
	0x03434480 BL 0x3EB1AD0
	0x03434484 MOV X20, X0
	0x03434488 ADRP X0, 0xCBF000
	0x0343448C LDR X0, [X0 + 0x7D0]
	0x03434490 BL 0x1C16D08
	0x03434494 LDR X8, [X20]
	0x03434498 LDR X1, [X8]
	0x0343449C BL 0x1C17270
	0x034344A0 TBZ X0, 0x0, 0x34344E0
	0x034344A4 LDR X20, [X20]
	0x034344A8 BL 0x3EB1AE0
	0x034344AC MOVN W8, 0x1
	0x034344B0 STR W8, [X19], #0x8
	0x034344B4 ADRP X0, 0xCC2000
	0x034344B8 LDR X0, [X0 + 0x280]
	0x034344BC BL 0x1C16D08
	0x034344C0 LDR W8, [X0 + 0xE0]
	0x034344C4 CBNZ W8, 0x34344CC
	0x034344C8 BL 0x1C16DFC
	0x034344CC MOV X0, X19
	0x034344D0 MOV X1, X20
	0x034344D4 MOV X2, X31
	0x034344D8 BL 0x32C4908
	0x034344DC B 0x34342B0
	0x034344E0 MOVZ W0, 0x8
	0x034344E4 BL 0x3EB1AF0
	0x034344E8 LDR X8, [X20]
	0x034344EC STR X8, [X0]
	0x034344F0 ADRP X1, 0xA80000
	0x034344F4 ADD X1, X1, 0xE58
	0x034344F8 MOV X2, X31
	0x034344FC BL 0x3EB1B00
	0x03434500 MOV X0, X23
	0x03434504 BL 0x1C16F18
	0x03434508 MOV X20, X1
	0x0343450C MOV X21, X0
	0x03434510 TBNZ X24, 0x1F, 0x343440C
	0x03434514 B 0x3434470
	0x03434518 MOV X21, X0
	0x0343451C BL 0x3EB1AE0
	0x03434520 MOV X0, X21
	0x03434524 BL 0x1D2C690
	0x03434528 BL 0x1990590
	0x0343452C STR X30, [X31 - 0x30]!
	0x03434530 STP X22, X21, [X31 + 0x10]
	0x03434534 STP X20, X19, [X31 + 0x20]
	0x03434538 ADRP X21, 0xFA9000
	0x0343453C ADRP X22, 0xCC2000
	0x03434540 LDRB W8, [X21 + 0x66A]
	0x03434544 LDR X22, [X22 + 0x280]
	0x03434548 MOV X19, X1
	0x0343454C MOV X20, X0
	0x03434550 TBNZ X8, 0x0, 0x3434568
	0x03434554 ADRP X0, 0xCC2000
	0x03434558 LDR X0, [X0 + 0x280]
	0x0343455C BL 0x1C16CF4
	0x03434560 MOVZ W8, 0x1
	0x03434564 STRB W8, [X21 + 0x66A]
	0x03434568 LDR X0, [X22]
	0x0343456C LDR W8, [X0 + 0xE0]
	0x03434570 CBNZ W8, 0x3434578
	0x03434574 BL 0x1C16DFC
	0x03434578 ADD X0, X20, 0x8
	0x0343457C MOV X1, X19
	0x03434580 LDP X20, X19, [X31 + 0x20]
	0x03434584 LDP X22, X21, [X31 + 0x10]
	0x03434588 MOV X2, X31
	0x0343458C LDR X30, [X31], #0x30
	0x03434590 B 0x32C477C
	0x03434594 SUB X31, X31, 0x70
	0x03434598 STR X30, [X31 + 0x10]
	0x0343459C STP X28, X27, [X31 + 0x20]
	0x034345A0 STP X26, X25, [X31 + 0x30]
	0x034345A4 STP X24, X23, [X31 + 0x40]
	0x034345A8 STP X22, X21, [X31 + 0x50]
	0x034345AC STP X20, X19, [X31 + 0x60]
	0x034345B0 ADRP X20, 0xFA9000
	0x034345B4 LDRB W8, [X20 + 0x66B]
	0x034345B8 MOV X19, X0
	0x034345BC TBNZ X8, 0x0, 0x34346A0
	0x034345C0 ADRP X0, 0xCFB000
	0x034345C4 LDR X0, [X0 + 0x280]
	0x034345C8 BL 0x1C16CF4
	0x034345CC ADRP X0, 0xCFB000
	0x034345D0 LDR X0, [X0 + 0x288]
	0x034345D4 BL 0x1C16CF4
	0x034345D8 ADRP X0, 0xCFA000
	0x034345DC LDR X0, [X0 + 0x698]
	0x034345E0 BL 0x1C16CF4
	0x034345E4 ADRP X0, 0xCC8000
	0x034345E8 LDR X0, [X0 + 0x8D8]
	0x034345EC BL 0x1C16CF4
	0x034345F0 ADRP X0, 0xCC0000
	0x034345F4 LDR X0, [X0 + 0x810]
	0x034345F8 BL 0x1C16CF4
	0x034345FC ADRP X0, 0xCC0000
	0x03434600 LDR X0, [X0 + 0x6C0]
	0x03434604 BL 0x1C16CF4
	0x03434608 ADRP X0, 0xCC0000
	0x0343460C LDR X0, [X0 + 0x6D0]
	0x03434610 BL 0x1C16CF4
	0x03434614 ADRP X0, 0xCFA000
	0x03434618 LDR X0, [X0 + 0x7B8]
	0x0343461C BL 0x1C16CF4
	0x03434620 ADRP X0, 0xCFB000
	0x03434624 LDR X0, [X0 + 0x290]
	0x03434628 BL 0x1C16CF4
	0x0343462C ADRP X0, 0xCC2000
	0x03434630 LDR X0, [X0 + 0x1E0]
	0x03434634 BL 0x1C16CF4
	0x03434638 ADRP X0, 0xCC2000
	0x0343463C LDR X0, [X0 + 0x1F0]
	0x03434640 BL 0x1C16CF4
	0x03434644 ADRP X0, 0xCC2000
	0x03434648 LDR X0, [X0 + 0x1F8]
	0x0343464C BL 0x1C16CF4
	0x03434650 ADRP X0, 0xCC8000
	0x03434654 LDR X0, [X0 + 0x3A0]
	0x03434658 BL 0x1C16CF4
	0x0343465C ADRP X0, 0xCE8000
	0x03434660 LDR X0, [X0 + 0x4D8]
	0x03434664 BL 0x1C16CF4
	0x03434668 ADRP X0, 0xCFA000
	0x0343466C LDR X0, [X0 + 0x7D0]
	0x03434670 BL 0x1C16CF4
	0x03434674 ADRP X0, 0xCFA000
	0x03434678 LDR X0, [X0 + 0x7D8]
	0x0343467C BL 0x1C16CF4
	0x03434680 ADRP X0, 0xCBF000
	0x03434684 LDR X0, [X0 + 0x988]
	0x03434688 BL 0x1C16CF4
	0x0343468C ADRP X0, 0xCFB000
	0x03434690 LDR X0, [X0 + 0x298]
	0x03434694 BL 0x1C16CF4
	0x03434698 MOVZ W8, 0x1
	0x0343469C STRB W8, [X20 + 0x66B]
	0x034346A0 STR X31, [X31 + 0x18]
	0x034346A4 ADRP X28, 0xCFA000
	0x034346A8 LDR W8, [X19]
	0x034346AC LDR X28, [X28 + 0x698]
	0x034346B0 CBZ W8, 0x3434890
	0x034346B4 LDR X8, [X19 + 0x20]
	0x034346B8 CBZ X8, 0x34349C8
	0x034346BC LDR X25, [X19 + 0x28]
	0x034346C0 CBZ X25, 0x3434A10
	0x034346C4 LDR X0, [X25 + 0x20]
	0x034346C8 CBZ X0, 0x3434A14
	0x034346CC ADRP X8, 0xCFB000
	0x034346D0 ADRP X9, 0xCBF000
	0x034346D4 LDR X8, [X8 + 0x298]
	0x034346D8 LDR X9, [X9 + 0x988]
	0x034346DC LDR X21, [X8]
	0x034346E0 LDR X20, [X9]
	0x034346E4 MOV X1, X31
	0x034346E8 BL 0x361B448
	0x034346EC ADRP X8, 0xCC8000
	0x034346F0 LDR X8, [X8 + 0x8D8]
	0x034346F4 MOV X22, X0
	0x034346F8 LDR X0, [X8]
	0x034346FC MOVZ W1, 0x1
	0x03434700 BL 0x1C16D6C
	0x03434704 MOV X1, X0
	0x03434708 CBZ X1, 0x3434A18
	0x0343470C LDR W8, [X1 + 0x18]
	0x03434710 CBZ W8, 0x3434A1C
	0x03434714 MOVZ W8, 0x2F
	0x03434718 STRH W8, [X1 + 0x20]
	0x0343471C CBZ X22, 0x3434A20
	0x03434720 MOV X0, X22
	0x03434724 MOV X2, X31
	0x03434728 BL 0x322BC58
	0x0343472C MOV X1, X21
	0x03434730 MOV X2, X31
	0x03434734 BL 0x321B938
	0x03434738 ADRP X8, 0xCC8000
	0x0343473C LDR X8, [X8 + 0x3A0]
	0x03434740 MOV X22, X0
	0x03434744 LDR X23, [X25 + 0x20]
	0x03434748 LDR X0, [X8]
	0x0343474C BL 0x1C16F10
	0x03434750 MOV X21, X0
	0x03434754 MOV X1, X23
	0x03434758 MOV X2, X31
	0x0343475C BL 0x36281F8
	0x03434760 CBZ X21, 0x3434A24
	0x03434764 MOV X0, X21
	0x03434768 MOV X1, X22
	0x0343476C MOV X2, X31
	0x03434770 BL 0x36288CC
	0x03434774 MOV X0, X21
	0x03434778 MOV X1, X20
	0x0343477C MOV X2, X31
	0x03434780 BL 0x3628980
	0x03434784 MOV X0, X21
	0x03434788 MOV X1, X31
	0x0343478C BL 0x3628A38
	0x03434790 ADRP X8, 0xCE8000
	0x03434794 ADRP X9, 0xCC0000
	0x03434798 LDR X8, [X8 + 0x4D8]
	0x0343479C LDR X9, [X9 + 0x6D0]
	0x034347A0 MOV X20, X0
	0x034347A4 LDR X21, [X8]
	0x034347A8 LDR X0, [X9]
	0x034347AC BL 0x1C16F10
	0x034347B0 ADRP X8, 0xCC0000
	0x034347B4 LDR X8, [X8 + 0x6C0]
	0x034347B8 MOV X22, X0
	0x034347BC LDR X1, [X8]
	0x034347C0 BL 0x2AA4804
	0x034347C4 ADRP X8, 0xCFA000
	0x034347C8 LDR X8, [X8 + 0x7D8]
	0x034347CC LDR X1, [X19 + 0x30]
	0x034347D0 LDR X0, [X8]
	0x034347D4 MOV X2, X31
	0x034347D8 BL 0x321B938
	0x034347DC CBZ X22, 0x3434A28
	0x034347E0 ADRP X8, 0xCFA000
	0x034347E4 LDR X8, [X8 + 0x7D0]
	0x034347E8 ADRP X9, 0xCC0000
	0x034347EC LDR X9, [X9 + 0x810]
	0x034347F0 MOV X2, X0
	0x034347F4 LDR X1, [X8]
	0x034347F8 LDR X3, [X9]
	0x034347FC MOV X0, X22
	0x03434800 BL 0x2AA5098
	0x03434804 LDR X0, [X19 + 0x20]
	0x03434808 MOV X1, X31
	0x0343480C BL 0x3483BE4
	0x03434810 MOV X23, X0
	0x03434814 MOV X0, X31
	0x03434818 BL 0x3241948
	0x0343481C CBZ X0, 0x3434A2C
	0x03434820 LDR X8, [X0]
	0x03434824 LDR X9, [X8 + 0x268]
	0x03434828 LDR X2, [X8 + 0x270]
	0x0343482C MOV X1, X23
	0x03434830 BLR X9
	0x03434834 LDR X24, [X25 + 0x10]
	0x03434838 CBZ X24, 0x3434A30
	0x0343483C ADRP X10, 0xCFA000
	0x03434840 LDR X10, [X10 + 0x7B8]
	0x03434844 LDR X8, [X24]
	0x03434848 LDR W26, [X25 + 0x18]
	0x0343484C LDP X27, X25, [X19 + 0x38]
	0x03434850 LDR X1, [X10]
	0x03434854 LDRH W9, [X8 + 0x12E]
	0x03434858 MOV X23, X0
	0x0343485C CBZ X9, 0x3434880
	0x03434860 LDR X10, [X8 + 0xB0]
	0x03434864 ADD X10, X10, 0x8
	0x03434868 LDUR X11, [X10 - 0x8]
	0x0343486C CMP X11, X1
	0x03434870 B.EQ 0x34348A8
	0x03434874 SUBS X9, X9, 0x1
	0x03434878 ADD X10, X10, 0x10
	0x0343487C B.NE 0x3434868
	0x03434880 MOVZ W2, 0x3
	0x03434884 MOV X0, X24
	0x03434888 BL 0x1C5C788
	0x0343488C B 0x34348B8
	0x03434890 LDR X8, [X19 + 0x48]
	0x03434894 MOVN W9, 0x0
	0x03434898 STR X8, [X31 + 0x18]
	0x0343489C STR X31, [X19 + 0x48]
	0x034348A0 STR W9, [X19]
	0x034348A4 B 0x3434914
	0x034348A8 LDR W9, [X10]
	0x034348AC ADD W9, W9, 0x3
	0x034348B0 ADD X8, X8, W9, 0x4, SXTW
	0x034348B4 ADD X0, X8, 0x138
	0x034348B8 LDP X8, X9, [X0]
	0x034348BC MOV X0, X24
	0x034348C0 MOV X1, X21
	0x034348C4 MOV X2, X20
	0x034348C8 MOV X3, X22
	0x034348CC MOV X4, X23
	0x034348D0 MOV W5, W26
	0x034348D4 MOV X6, X27
	0x034348D8 MOV X7, X25
	0x034348DC STR X9, [X31]
	0x034348E0 BLR X8
	0x034348E4 CBZ X0, 0x3434A34
	0x034348E8 ADRP X8, 0xCC2000
	0x034348EC LDR X8, [X8 + 0x1F8]
	0x034348F0 LDR X1, [X8]
	0x034348F4 BL 0x269F5D0
	0x034348F8 ADRP X8, 0xCC2000
	0x034348FC LDR X8, [X8 + 0x1F0]
	0x03434900 STR X0, [X31 + 0x18]
	0x03434904 LDR X1, [X8]
	0x03434908 ADD X0, X31, 0x18
	0x0343490C BL 0x2677430
	0x03434910 TBZ X0, 0x0, 0x3434970
	0x03434914 ADRP X8, 0xCC2000
	0x03434918 LDR X8, [X8 + 0x1E0]
	0x0343491C ADD X0, X31, 0x18
	0x03434920 LDR X1, [X8]
	0x03434924 BL 0x2677474
	0x03434928 ADRP X8, 0xCFB000
	0x0343492C LDR X8, [X8 + 0x290]
	0x03434930 LDR X1, [X8]
	0x03434934 BL 0x220E6DC
	0x03434938 MOVN W8, 0x1
	0x0343493C STR W8, [X19], #0x8
	0x03434940 MOV X20, X0
	0x03434944 LDR X0, [X28]
	0x03434948 ADRP X21, 0xCFB000
	0x0343494C LDR W8, [X0 + 0xE0]
	0x03434950 LDR X21, [X21 + 0x288]
	0x03434954 CBNZ W8, 0x343495C
	0x03434958 BL 0x1C16DFC
	0x0343495C LDR X2, [X21]
	0x03434960 MOV X0, X19
	0x03434964 MOV X1, X20
	0x03434968 BL 0x26322B0
	0x0343496C B 0x34349A8
	0x03434970 STR W31, [X19]
	0x03434974 LDR X8, [X31 + 0x18]
	0x03434978 STR X8, [X19 + 0x48]
	0x0343497C LDR X0, [X28]
	0x03434980 LDR W8, [X0 + 0xE0]
	0x03434984 CBNZ W8, 0x343498C
	0x03434988 BL 0x1C16DFC
	0x0343498C ADRP X8, 0xCFB000
	0x03434990 LDR X8, [X8 + 0x280]
	0x03434994 ADD X0, X19, 0x8
	0x03434998 LDR X3, [X8]
	0x0343499C ADD X1, X31, 0x18
	0x034349A0 MOV X2, X19
	0x034349A4 BL 0x1FB5288
	0x034349A8 LDP X20, X19, [X31 + 0x60]
	0x034349AC LDP X22, X21, [X31 + 0x50]
	0x034349B0 LDP X24, X23, [X31 + 0x40]
	0x034349B4 LDP X26, X25, [X31 + 0x30]
	0x034349B8 LDP X28, X27, [X31 + 0x20]
	0x034349BC LDR X30, [X31 + 0x10]
	0x034349C0 ADD X31, X31, 0x70
	0x034349C4 RET
	0x034349C8 ADRP X0, 0xCC7000
	0x034349CC LDR X0, [X0 + 0x578]
	0x034349D0 BL 0x1C16D08
	0x034349D4 BL 0x1C16F10
	0x034349D8 MOV X20, X0
	0x034349DC ADRP X0, 0xCFA000
	0x034349E0 LDR X0, [X0 + 0xBC8]
	0x034349E4 BL 0x1C16D08
	0x034349E8 MOV X1, X0
	0x034349EC MOV X0, X20
	0x034349F0 MOV X2, X31
	0x034349F4 BL 0x3314A68
	0x034349F8 ADRP X0, 0xCFB000
	0x034349FC LDR X0, [X0 + 0x2A0]
	0x03434A00 BL 0x1C16D08
	0x03434A04 MOV X1, X0
	0x03434A08 MOV X0, X20
	0x03434A0C BL 0x1C16DEC
	0x03434A10 BL 0x1C16F20
	0x03434A14 BL 0x1C16F20
	0x03434A18 BL 0x1C16F20
	0x03434A1C BL 0x1C16F28
	0x03434A20 BL 0x1C16F20
	0x03434A24 BL 0x1C16F20
	0x03434A28 BL 0x1C16F20
	0x03434A2C BL 0x1C16F20
	0x03434A30 BL 0x1C16F20
	0x03434A34 BL 0x1C16F20
	0x03434A38 B 0x3434A9C
	0x03434A3C B 0x3434A9C
	0x03434A40 B 0x3434A9C
	0x03434A44 B 0x3434A9C
	0x03434A48 B 0x3434A9C
	0x03434A4C B 0x3434A9C
	0x03434A50 B 0x3434A9C
	0x03434A54 B 0x3434A9C
	0x03434A58 B 0x3434A9C
	0x03434A5C B 0x3434A9C
	0x03434A60 B 0x3434A9C
	0x03434A64 B 0x3434A9C
	0x03434A68 B 0x3434A9C
	0x03434A6C B 0x3434A9C
	0x03434A70 B 0x3434A9C
	0x03434A74 B 0x3434A9C
	0x03434A78 B 0x3434A9C
	0x03434A7C B 0x3434A9C
	0x03434A80 B 0x3434A9C
	0x03434A84 B 0x3434A9C
	0x03434A88 B 0x3434A9C
	0x03434A8C B 0x3434A9C
	0x03434A90 B 0x3434A9C
	0x03434A94 B 0x3434A9C
	0x03434A98 B 0x3434A9C
	0x03434A9C MOV X20, X0
	0x03434AA0 CMP W1, 0x1
	0x03434AA4 B.NE 0x3434B40
	0x03434AA8 MOV X0, X20
	0x03434AAC BL 0x3EB1AD0
	0x03434AB0 MOV X20, X0
	0x03434AB4 ADRP X0, 0xCBF000
	0x03434AB8 LDR X0, [X0 + 0x7D0]
	0x03434ABC BL 0x1C16D08
	0x03434AC0 LDR X8, [X20]
	0x03434AC4 LDR X1, [X8]
	0x03434AC8 BL 0x1C17270
	0x03434ACC TBZ X0, 0x0, 0x3434B18
	0x03434AD0 LDR X20, [X20]
	0x03434AD4 BL 0x3EB1AE0
	0x03434AD8 MOVN W8, 0x1
	0x03434ADC STR W8, [X19], #0x8
	0x03434AE0 ADRP X0, 0xCFA000
	0x03434AE4 LDR X0, [X0 + 0x698]
	0x03434AE8 BL 0x1C16D08
	0x03434AEC LDR W8, [X0 + 0xE0]
	0x03434AF0 CBNZ W8, 0x3434AF8
	0x03434AF4 BL 0x1C16DFC
	0x03434AF8 ADRP X0, 0xCFB000
	0x03434AFC LDR X0, [X0 + 0x2A8]
	0x03434B00 BL 0x1C16D08
	0x03434B04 MOV X2, X0
	0x03434B08 MOV X0, X19
	0x03434B0C MOV X1, X20
	0x03434B10 BL 0x26324C8
	0x03434B14 B 0x34349A8
	0x03434B18 MOVZ W0, 0x8
	0x03434B1C BL 0x3EB1AF0
	0x03434B20 LDR X8, [X20]
	0x03434B24 STR X8, [X0]
	0x03434B28 ADRP X1, 0xA80000
	0x03434B2C ADD X1, X1, 0xE58
	0x03434B30 MOV X2, X31
	0x03434B34 BL 0x3EB1B00
	0x03434B38 MOV X20, X0
	0x03434B3C BL 0x3EB1AE0
	0x03434B40 MOV X0, X20
	0x03434B44 BL 0x1D2C690
	0x03434B48 BL 0x1990590
	0x03434B4C STR X30, [X31 - 0x30]!
	0x03434B50 STP X22, X21, [X31 + 0x10]
	0x03434B54 STP X20, X19, [X31 + 0x20]
	0x03434B58 ADRP X22, 0xFA9000
	0x03434B5C ADRP X21, 0xCFA000
	0x03434B60 LDRB W8, [X22 + 0x66C]
	0x03434B64 LDR X21, [X21 + 0x698]
	0x03434B68 MOV X19, X1
	0x03434B6C MOV X20, X0
	0x03434B70 TBNZ X8, 0x0, 0x3434B94
	0x03434B74 ADRP X0, 0xCFB000
	0x03434B78 LDR X0, [X0 + 0x2B0]
	0x03434B7C BL 0x1C16CF4
	0x03434B80 ADRP X0, 0xCFA000
	0x03434B84 LDR X0, [X0 + 0x698]
	0x03434B88 BL 0x1C16CF4
	0x03434B8C MOVZ W8, 0x1
	0x03434B90 STRB W8, [X22 + 0x66C]
	0x03434B94 LDR X0, [X21]
	0x03434B98 ADRP X21, 0xCFB000
	0x03434B9C LDR W8, [X0 + 0xE0]
	0x03434BA0 LDR X21, [X21 + 0x2B0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X20, 0xFAA000
	013 Move W8, [X20+1639]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {102}
	019 Move X0, 0xCFC000
	020 Move X0, [X0+560]
	021 Call 0x1C17CF4
	022 Move X0, 0xCFC000
	023 Move X0, [X0+568]
	024 Call 0x1C17CF4
	025 Move X0, 0xCFB000
	026 Move X0, [X0+1936]
	027 Call 0x1C17CF4
	028 Move X0, 0xCC9000
	029 Move X0, [X0+2264]
	030 Call 0x1C17CF4
	031 Move X0, 0xCC1000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move X0, 0xCC1000
	035 Move X0, [X0+1728]
	036 Call 0x1C17CF4
	037 Move X0, 0xCC1000
	038 Move X0, [X0+1744]
	039 Call 0x1C17CF4
	040 Move X0, 0xCFB000
	041 Move X0, [X0+1976]
	042 Call 0x1C17CF4
	043 Move X0, 0xCFC000
	044 Move X0, [X0+576]
	045 Call 0x1C17CF4
	046 Move X0, 0xCC3000
	047 Move X0, [X0+3832]
	048 Call 0x1C17CF4
	049 Move X0, 0xCC1000
	050 Move X0, [X0+1144]
	051 Call 0x1C17CF4
	052 Move X0, 0xCC0000
	053 Move X0, [X0+2512]
	054 Call 0x1C17CF4
	055 Move X0, 0xCC3000
	056 Move X0, [X0+480]
	057 Call 0x1C17CF4
	058 Move X0, 0xCC3000
	059 Move X0, [X0+496]
	060 Call 0x1C17CF4
	061 Move X0, 0xCC3000
	062 Move X0, [X0+504]
	063 Call 0x1C17CF4
	064 Move X0, 0xCC9000
	065 Move X0, [X0+928]
	066 Call 0x1C17CF4
	067 Move X0, 0xCC2000
	068 Move X0, [X0+2600]
	069 Call 0x1C17CF4
	070 Move X0, 0xCE9000
	071 Move X0, [X0+1232]
	072 Call 0x1C17CF4
	073 Move X0, 0xCFB000
	074 Move X0, [X0+3936]
	075 Call 0x1C17CF4
	076 Move X0, 0xCFC000
	077 Move X0, [X0+584]
	078 Call 0x1C17CF4
	079 Move X0, 0xCC9000
	080 Move X0, [X0+1824]
	081 Call 0x1C17CF4
	082 Move X0, 0xCFB000
	083 Move X0, [X0+2000]
	084 Call 0x1C17CF4
	085 Move X0, 0xCFB000
	086 Move X0, [X0+3864]
	087 Call 0x1C17CF4
	088 Move X0, 0xCFB000
	089 Move X0, [X0+2008]
	090 Call 0x1C17CF4
	091 Move X0, 0xCC0000
	092 Move X0, [X0+2440]
	093 Call 0x1C17CF4
	094 Move X0, 0xCFB000
	095 Move X0, [X0+3872]
	096 Call 0x1C17CF4
	097 Move X0, 0xCFC000
	098 Move X0, [X0+272]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X20+1639], W8
	102 Move [X31+24], X31
	103 Move X27, 0xCFB000
	104 Move W8, [X19]
	105 Move X27, [X27+1936]
	106 Compare W8, 0
	107 JumpIfEqual {412}
	108 Move X21, [X19+32]
	109 Compare X21, 0
	110 JumpIfEqual {503}
	111 Move X23, 0xCC2000
	112 Move X23, [X23+2600]
	113 Move X8, 0xCFC000
	114 Move X0, [X23]
	115 Move X8, [X8+584]
	116 Move X24, [X19+64]
	117 Move W9, [X0+224]
	118 Move X20, [X8]
	119 Compare W9, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X21
	123 Move X1, X31
	124 Call Uri.EscapeDataString, X0
	125 Compare X20, 0
	126 JumpIfEqual {521}
	127 Move X8, 0xCFC000
	128 Move X8, [X8+272]
	129 Move X2, X0
	130 Move X1, [X8]
	131 Move X0, X20
	132 Move X3, X31
	133 Call String.Replace, X0, X1, X2
	134 Move X8, 0xCC0000
	135 Move X8, [X8+2440]
	136 Move W9, [X19+40]
	137 Move X20, X0
	138 Move X21, [X8]
	139 Compare W9, 0
	140 JumpIfEqual {212}
	141 Move X8, 0xCC0000
	142 Move X8, [X8+2512]
	143 Move X0, [X8]
	144 Move W1, 4
	145 Call 0x1C17D6C
	146 Move X22, X0
	147 Compare X0, 0
	148 JumpIfEqual {531}
	149 Compare X21, 0
	150 JumpIfEqual {157}
	151 Move X8, [X22]
	152 Move X1, [X8+64]
	153 Move X0, X21
	154 Call 0x1C17E00
	155 Compare X0, 0
	156 JumpIfEqual {541}
	157 Move W8, [X22+24]
	158 Compare W8, 0
	159 JumpIfEqual {532}
	160 Move [X22+32], X21
	161 Move X21, 0xCFB000
	162 Move X21, [X21+3864]
	163 Move X0, [X21]
	164 Compare X0, 0
	165 JumpIfEqual {172}
	166 Move X8, [X22]
	167 Move X1, [X8+64]
	168 Call 0x1C17E00
	169 Compare X0, 0
	170 JumpIfEqual {544}
	171 Move W8, [X22+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, [X21]
	174 Move X9, 0xCC1000
	175 Move [X22+40], X8
	176 Move X8, [X19+40]
	177 Move X9, [X9+1144]
	178 Move [X31+16], X8
	179 Move X0, [X9]
	180 Add X1, X31, 16
	181 Call 0x1C17E04
	182 Move X21, X0
	183 Compare X0, 0
	184 JumpIfEqual {191}
	185 Move X8, [X22]
	186 Move X1, [X8+64]
	187 Move X0, X21
	188 Call 0x1C17E00
	189 Compare X0, 0
	190 JumpIfEqual {547}
	191 Move W8, [X22+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X22+48], X21
	194 Move X21, 0xCC9000
	195 Move X21, [X21+1824]
	196 Move X0, [X21]
	197 Compare X0, 0
	198 JumpIfEqual {205}
	199 Move X8, [X22]
	200 Move X1, [X8+64]
	201 Call 0x1C17E00
	202 Compare X0, 0
	203 JumpIfEqual {550}
	204 Move W8, [X22+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X8, [X21]
	207 Move [X22+56], X8
	208 Move X0, X22
	209 Move X1, X31
	210 Call String.Concat, X0
	211 Move X21, X0
	212 Move W8, [X19+48]
	213 Compare W8, 0
	214 JumpIfEqual {286}
	215 Move X8, 0xCC0000
	216 Move X8, [X8+2512]
	217 Move X0, [X8]
	218 Move W1, 4
	219 Call 0x1C17D6C
	220 Move X22, X0
	221 Compare X0, 0
	222 JumpIfEqual {535}
	223 Compare X21, 0
	224 JumpIfEqual {231}
	225 Move X8, [X22]
	226 Move X1, [X8+64]
	227 Move X0, X21
	228 Call 0x1C17E00
	229 Compare X0, 0
	230 JumpIfEqual {553}
	231 Move W8, [X22+24]
	232 Compare W8, 0
	233 JumpIfEqual {537}
	234 Move [X22+32], X21
	235 Move X21, 0xCFB000
	236 Move X21, [X21+3936]
	237 Move X0, [X21]
	238 Compare X0, 0
	239 JumpIfEqual {246}
	240 Move X8, [X22]
	241 Move X1, [X8+64]
	242 Call 0x1C17E00
	243 Compare X0, 0
	244 JumpIfEqual {556}
	245 Move W8, [X22+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X8, [X21]
	248 Move X9, 0xCC1000
	249 Move [X22+40], X8
	250 Move X8, [X19+48]
	251 Move X9, [X9+1144]
	252 Move [X31+16], X8
	253 Move X0, [X9]
	254 Add X1, X31, 16
	255 Call 0x1C17E04
	256 Move X21, X0
	257 Compare X0, 0
	258 JumpIfEqual {265}
	259 Move X8, [X22]
	260 Move X1, [X8+64]
	261 Move X0, X21
	262 Call 0x1C17E00
	263 Compare X0, 0
	264 JumpIfEqual {559}
	265 Move W8, [X22+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move [X22+48], X21
	268 Move X21, 0xCC9000
	269 Move X21, [X21+1824]
	270 Move X0, [X21]
	271 Compare X0, 0
	272 JumpIfEqual {279}
	273 Move X8, [X22]
	274 Move X1, [X8+64]
	275 Call 0x1C17E00
	276 Compare X0, 0
	277 JumpIfEqual {562}
	278 Move W8, [X22+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X8, [X21]
	281 Move [X22+56], X8
	282 Move X0, X22
	283 Move X1, X31
	284 Call String.Concat, X0
	285 Move X21, X0
	286 Move X22, [X19+56]
	287 Compare X22, 0
	288 JumpIfEqual {308}
	289 Move X0, [X23]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X0, X22
	295 Move X1, X31
	296 Call Uri.EscapeDataString, X0
	297 Move X8, 0xCFB000
	298 Move X8, [X8+3872]
	299 Move X9, 0xCC9000
	300 Move X9, [X9+1824]
	301 Move X2, X0
	302 Move X1, [X8]
	303 Move X3, [X9]
	304 Move X0, X21
	305 Move X4, X31
	306 Call String.Concat, X0, X1, X2, X3
	307 Move X21, X0
	308 Compare X24, 0
	309 JumpIfEqual {522}
	310 Move X0, [X24+32]
	311 Compare X0, 0
	312 JumpIfEqual {523}
	313 Move X1, X31
	314 Call Uri.get_AbsolutePath, X0
	315 Move X8, 0xCC9000
	316 Move X8, [X8+2264]
	317 Move X22, X0
	318 Move X0, [X8]
	319 Move W1, 1
	320 Call 0x1C17D6C
	321 Move X1, X0
	322 Compare X1, 0
	323 JumpIfEqual {524}
	324 Move W8, [X1+24]
	325 Compare W8, 0
	326 JumpIfEqual {525}
	327 Move W8, 47
	328 NotImplemented "Instruction STRH not yet implemented."
	329 Compare X22, 0
	330 JumpIfEqual {526}
	331 Move X0, X22
	332 Move X2, X31
	333 Call String.TrimEnd, X0, X1
	334 Move X1, X20
	335 Move X2, X31
	336 Call String.Concat, X0, X1
	337 Move X8, 0xCC9000
	338 Move X8, [X8+928]
	339 Move X22, X0
	340 Move X23, [X24+32]
	341 Move X0, [X8]
	342 Call 0x1C17F10
	343 Move X20, X0
	344 Move X1, X23
	345 Move X2, X31
	346 Call UriBuilder..ctor, X0, X1
	347 Compare X20, 0
	348 JumpIfEqual {527}
	349 Move X0, X20
	350 Move X1, X22
	351 Move X2, X31
	352 Call UriBuilder.set_Path, X0, X1
	353 Move X0, X20
	354 Move X1, X21
	355 Move X2, X31
	356 Call UriBuilder.set_Query, X0, X1
	357 Move X0, X20
	358 Move X1, X31
	359 Call UriBuilder.get_Uri, X0
	360 Move X8, 0xCE9000
	361 Move X9, 0xCC1000
	362 Move X8, [X8+1232]
	363 Move X9, [X9+1744]
	364 Move X20, X0
	365 Move X21, [X8]
	366 Move X0, [X9]
	367 Call 0x1C17F10
	368 Move X8, 0xCC1000
	369 Move X8, [X8+1728]
	370 Move X22, X0
	371 Move X1, [X8]
	372 Call Dictionary`2<Object, Object>..ctor, X0
	373 Move X8, 0xCFB000
	374 Move X8, [X8+2008]
	375 Move X1, [X19+72]
	376 Move X0, [X8]
	377 Move X2, X31
	378 Call String.Concat, X0, X1
	379 Compare X22, 0
	380 JumpIfEqual {528}
	381 Move X8, 0xCFB000
	382 Move X8, [X8+2000]
	383 Move X9, 0xCC1000
	384 Move X9, [X9+2064]
	385 Move X2, X0
	386 Move X1, [X8]
	387 Move X3, [X9]
	388 Move X0, X22
	389 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	390 Move X23, [X24+16]
	391 Compare X23, 0
	392 JumpIfEqual {529}
	393 Move X10, 0xCFB000
	394 Move X10, [X10+1976]
	395 Move X8, [X23]
	396 Move W25, [X24+24]
	397 Move X26, [X19+80]
	398 Move X24, [X19+88]
	399 Move X1, [X10]
	400 NotImplemented "Instruction LDRH not yet implemented."
	401 Compare X9, 0
	402 JumpIfEqual {409}
	403 Move X10, [X8+176]
	404 Add X10, X10, 8
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Subtract X9, X9, 1
	408 Add X10, X10, 16
	409 Move W2, 3
	410 Move X0, X23
	411 Call 0x1C5D788
	412 Move X8, [X19+96]
	413 Move TEMP, 0
	414 Not TEMP
	415 Move W9, TEMP
	416 Move [X31+24], X8
	417 Move [X19+96], X31
	418 Move [X19], W9
	419 Move W9, [X10]
	420 Add W9, W9, 3
	421 Add X8, X8, W9
	422 Add X0, X8, 312
	423 Move X8, [X0]
	424 Move X9, [X0+8]
	425 Move X0, X23
	426 Move X1, X21
	427 Move X2, X20
	428 Move X3, X22
	429 Move X4, X31
	430 Move W5, W25
	431 Move X6, X26
	432 Move X7, X24
	433 Move [X31], X9
	434 NotImplemented "Instruction BLR not yet implemented."
	435 Compare X0, 0
	436 JumpIfEqual {530}
	437 Move X8, 0xCC3000
	438 Move X8, [X8+504]
	439 Move X1, [X8]
	440 Call Task`1<Object>.GetAwaiter, X0
	441 Move X8, 0xCC3000
	442 Move X8, [X8+496]
	443 Move [X31+24], X0
	444 Move X1, [X8]
	445 Add X0, X31, 24
	446 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	447 Move TEMP, X0
	448 And TEMP, TEMP, 1
	449 Compare TEMP, 1
	450 JumpIfNotEqual {476}
	451 Move X8, 0xCC3000
	452 Move X8, [X8+480]
	453 Add X0, X31, 24
	454 Move X1, [X8]
	455 Call TaskAwaiter`1<Object>.GetResult, X0
	456 Move X8, 0xCFC000
	457 Move X8, [X8+576]
	458 Move X1, [X8]
	459 Call JsonParser.FromJson, X0
	460 Move TEMP, 1
	461 Not TEMP
	462 Move W8, TEMP
	463 Move [X19+8], W8
	464 Move X20, X0
	465 Move X0, [X27]
	466 Move X21, 0xCFC000
	467 Move W8, [X0+224]
	468 Move X21, [X21+568]
	469 Compare W8, 0
	470 JumpIfNotEqual {472}
	471 Call 0x1C17DFC
	472 Move X2, [X21]
	473 Move X0, X19
	474 Move X1, X20
	475 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	476 Move [X19], W31
	477 Move X8, [X31+24]
	478 Move [X19+96], X8
	479 Move X0, [X27]
	480 Move W8, [X0+224]
	481 Compare W8, 0
	482 JumpIfNotEqual {484}
	483 Call 0x1C17DFC
	484 Move X8, 0xCFC000
	485 Move X8, [X8+560]
	486 Add X0, X19, 8
	487 Move X3, [X8]
	488 Add X1, X31, 24
	489 Move X2, X19
	490 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	491 Move X20, [X31+96]
	492 Move X19, [X31+104]
	493 Move X22, [X31+80]
	494 Move X21, [X31+88]
	495 Move X24, [X31+64]
	496 Move X23, [X31+72]
	497 Move X26, [X31+48]
	498 Move X25, [X31+56]
	499 Move X30, [X31+32]
	500 Move X27, [X31+40]
	501 Add X31, X31, 112
	502 Return 
	503 Move X0, 0xCC8000
	504 Move X0, [X0+1400]
	505 Call 0x1C17D08
	506 Call 0x1C17F10
	507 Move X20, X0
	508 Move X0, 0xCFC000
	509 Move X0, [X0+296]
	510 Call 0x1C17D08
	511 Move X1, X0
	512 Move X0, X20
	513 Move X2, X31
	514 Call ArgumentException..ctor, X0, X1
	515 Move X0, 0xCFC000
	516 Move X0, [X0+592]
	517 Call 0x1C17D08
	518 Move X1, X0
	519 Move X0, X20
	520 Call 0x1C17DEC
	521 Call 0x1C17F20
	522 Call 0x1C17F20
	523 Call 0x1C17F20
	524 Call 0x1C17F20
	525 Call 0x1C17F28
	526 Call 0x1C17F20
	527 Call 0x1C17F20
	528 Call 0x1C17F20
	529 Call 0x1C17F20
	530 Call 0x1C17F20
	531 Call 0x1C17F20
	532 Call 0x1C17F28
	533 Call 0x1C17F28
	534 Call 0x1C17F28
	535 Call 0x1C17F20
	536 Call 0x1C17F28
	537 Call 0x1C17F28
	538 Call 0x1C17F28
	539 Call 0x1C17F28
	540 Call 0x1C17F28
	541 Call 0x1C17F44
	542 Move X1, X31
	543 Call 0x1C17DEC
	544 Call 0x1C17F44
	545 Move X1, X31
	546 Call 0x1C17DEC
	547 Call 0x1C17F44
	548 Move X1, X31
	549 Call 0x1C17DEC
	550 Call 0x1C17F44
	551 Move X1, X31
	552 Call 0x1C17DEC
	553 Call 0x1C17F44
	554 Move X1, X31
	555 Call 0x1C17DEC
	556 Call 0x1C17F44
	557 Move X1, X31
	558 Call 0x1C17DEC
	559 Call 0x1C17F44
	560 Move X1, X31
	561 Call 0x1C17DEC
	562 Call 0x1C17F44
	563 Move X1, X31
	564 Call 0x1C17DEC
	565 Move X20, X0
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Move X0, X20
	568 Call 0x3EB2AD0
	569 Move X20, X0
	570 Move X0, 0xCC0000
	571 Move X0, [X0+2000]
	572 Call 0x1C17D08
	573 Move X8, [X20]
	574 Move X1, [X8]
	575 Call 0x1C18270
	576 Move TEMP, X0
	577 And TEMP, TEMP, 1
	578 Compare TEMP, 1
	579 JumpIfNotEqual {600}
	580 Move X20, [X20]
	581 Call 0x3EB2AE0
	582 Move TEMP, 1
	583 Not TEMP
	584 Move W8, TEMP
	585 Move [X19+8], W8
	586 Move X0, 0xCFB000
	587 Move X0, [X0+1936]
	588 Call 0x1C17D08
	589 Move W8, [X0+224]
	590 Compare W8, 0
	591 JumpIfNotEqual {593}
	592 Call 0x1C17DFC
	593 Move X0, 0xCFC000
	594 Move X0, [X0+600]
	595 Call 0x1C17D08
	596 Move X2, X0
	597 Move X0, X19
	598 Move X1, X20
	599 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	600 Move W0, 8
	601 Call 0x3EB2AF0
	602 Move X8, [X20]
	603 Move [X0], X8
	604 Move X1, 0xA81000
	605 Add X1, X1, 3672
	606 Move X2, X31
	607 Call 0x3EB2B00
	608 Move X20, X0
	609 Call 0x3EB2AE0
	610 Move X0, X20
	611 Call 0x1D2D690
	612 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03434BA4 CBNZ W8, 0x3434BAC
	0x03434BA8 BL 0x1C16DFC
	0x03434BAC LDR X2, [X21]
	0x03434BB0 ADD X0, X20, 0x8
	0x03434BB4 MOV X1, X19
	0x03434BB8 LDP X20, X19, [X31 + 0x20]
	0x03434BBC LDP X22, X21, [X31 + 0x10]
	0x03434BC0 LDR X30, [X31], #0x30
	0x03434BC4 B 0x2632228
	0x03434BC8 SUB X31, X31, 0x60
	0x03434BCC STP X30, X27, [X31 + 0x10]
	0x03434BD0 STP X26, X25, [X31 + 0x20]
	0x03434BD4 STP X24, X23, [X31 + 0x30]
	0x03434BD8 STP X22, X21, [X31 + 0x40]
	0x03434BDC STP X20, X19, [X31 + 0x50]
	0x03434BE0 ADRP X20, 0xFA9000
	0x03434BE4 LDRB W8, [X20 + 0x66D]
	0x03434BE8 MOV X19, X0
	0x03434BEC TBNZ X8, 0x0, 0x3434D30
	0x03434BF0 ADRP X0, 0xCFB000
	0x03434BF4 LDR X0, [X0 + 0x2B8]
	0x03434BF8 BL 0x1C16CF4
	0x03434BFC ADRP X0, 0xCFB000
	0x03434C00 LDR X0, [X0 + 0x2C0]
	0x03434C04 BL 0x1C16CF4
	0x03434C08 ADRP X0, 0xCFA000
	0x03434C0C LDR X0, [X0 + 0x668]
	0x03434C10 BL 0x1C16CF4
	0x03434C14 ADRP X0, 0xCC8000
	0x03434C18 LDR X0, [X0 + 0x8D8]
	0x03434C1C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFAA000
	007 Move X21, 0xCFB000
	008 Move W8, [X22+1640]
	009 Move X21, [X21+1936]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCFC000
	017 Move X0, [X0+608]
	018 Call 0x1C17CF4
	019 Move X0, 0xCFB000
	020 Move X0, [X0+1936]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1640], W8
	024 Move X0, [X21]
	025 Move X21, 0xCFC000
	026 Move W8, [X0+224]
	027 Move X21, [X21+608]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

