Type: Nakama.ApiClient/<AuthenticateDeviceAsync>d__13

Method: System.Void MoveNext()

Disassembly:
	0x0341682C LDRB W8, [X20 + 0x5CD]
	0x03416830 MOV X19, X0
	0x03416834 TBNZ X8, 0x0, 0x3416984
	0x03416838 ADRP X0, 0xD18000
	0x0341683C LDR X0, [X0 + 0x8C0]
	0x03416840 BL 0x1C16CF4
	0x03416844 ADRP X0, 0xD18000
	0x03416848 LDR X0, [X0 + 0x820]
	0x0341684C BL 0x1C16CF4
	0x03416850 ADRP X0, 0xD18000
	0x03416854 LDR X0, [X0 + 0x320]
	0x03416858 BL 0x1C16CF4
	0x0341685C ADRP X0, 0xCE6000
	0x03416860 LDR X0, [X0 + 0x8D8]
	0x03416864 BL 0x1C16CF4
	0x03416868 ADRP X0, 0xCE6000
	0x0341686C LDR X0, [X0 + 0x9E8]
	0x03416870 BL 0x1C16CF4
	0x03416874 ADRP X0, 0xCDE000
	0x03416878 LDR X0, [X0 + 0x810]
	0x0341687C BL 0x1C16CF4
	0x03416880 ADRP X0, 0xCDE000
	0x03416884 LDR X0, [X0 + 0x6C0]
	0x03416888 BL 0x1C16CF4
	0x0341688C ADRP X0, 0xCDE000
	0x03416890 LDR X0, [X0 + 0x6D0]
	0x03416894 BL 0x1C16CF4
	0x03416898 ADRP X0, 0xD18000
	0x0341689C LDR X0, [X0 + 0x7B8]
	0x034168A0 BL 0x1C16CF4
	0x034168A4 ADRP X0, 0xD18000
	0x034168A8 LDR X0, [X0 + 0x828]
	0x034168AC BL 0x1C16CF4
	0x034168B0 ADRP X0, 0xD18000
	0x034168B4 LDR X0, [X0 + 0x830]
	0x034168B8 BL 0x1C16CF4
	0x034168BC ADRP X0, 0xCE1000
	0x034168C0 LDR X0, [X0 + 0xBF0]
	0x034168C4 BL 0x1C16CF4
	0x034168C8 ADRP X0, 0xCE0000
	0x034168CC LDR X0, [X0 + 0x1E0]
	0x034168D0 BL 0x1C16CF4
	0x034168D4 ADRP X0, 0xCE0000
	0x034168D8 LDR X0, [X0 + 0x1F0]
	0x034168DC BL 0x1C16CF4
	0x034168E0 ADRP X0, 0xCE0000
	0x034168E4 LDR X0, [X0 + 0x1F8]
	0x034168E8 BL 0x1C16CF4
	0x034168EC ADRP X0, 0xCE6000
	0x034168F0 LDR X0, [X0 + 0x3A0]
	0x034168F4 BL 0x1C16CF4
	0x034168F8 ADRP X0, 0xCDF000
	0x034168FC LDR X0, [X0 + 0xA28]
	0x03416900 BL 0x1C16CF4
	0x03416904 ADRP X0, 0xD18000
	0x03416908 LDR X0, [X0 + 0x840]
	0x0341690C BL 0x1C16CF4
	0x03416910 ADRP X0, 0xD06000
	0x03416914 LDR X0, [X0 + 0x4D8]
	0x03416918 BL 0x1C16CF4
	0x0341691C ADRP X0, 0xD18000
	0x03416920 LDR X0, [X0 + 0x8C8]
	0x03416924 BL 0x1C16CF4
	0x03416928 ADRP X0, 0xD18000
	0x0341692C LDR X0, [X0 + 0x848]
	0x03416930 BL 0x1C16CF4
	0x03416934 ADRP X0, 0xCE6000
	0x03416938 LDR X0, [X0 + 0x988]
	0x0341693C BL 0x1C16CF4
	0x03416940 ADRP X0, 0xCE6000
	0x03416944 LDR X0, [X0 + 0x720]
	0x03416948 BL 0x1C16CF4
	0x0341694C ADRP X0, 0xD18000
	0x03416950 LDR X0, [X0 + 0x7D0]
	0x03416954 BL 0x1C16CF4
	0x03416958 ADRP X0, 0xD18000
	0x0341695C LDR X0, [X0 + 0x850]
	0x03416960 BL 0x1C16CF4
	0x03416964 ADRP X0, 0xD18000
	0x03416968 LDR X0, [X0 + 0x8D0]
	0x0341696C BL 0x1C16CF4
	0x03416970 ADRP X0, 0xCDD000
	0x03416974 LDR X0, [X0 + 0x988]
	0x03416978 BL 0x1C16CF4
	0x0341697C MOVZ W8, 0x1
	0x03416980 STRB W8, [X20 + 0x5CD]
	0x03416984 STR X31, [X31 + 0x18]
	0x03416988 ADRP X28, 0xD18000
	0x0341698C LDR W8, [X19]
	0x03416990 LDR X28, [X28 + 0x320]
	0x03416994 CBZ W8, 0x3416CEC
	0x03416998 LDR X8, [X19 + 0x20]
	0x0341699C CBZ X8, 0x3416E24
	0x034169A0 ADRP X8, 0xD18000
	0x034169A4 ADRP X9, 0xCDD000
	0x034169A8 LDR X8, [X8 + 0x8D0]
	0x034169AC LDR X9, [X9 + 0x988]
	0x034169B0 MOV X0, X19
	0x034169B4 LDR X25, [X19 + 0x40]
	0x034169B8 LDR X21, [X8]
	0x034169BC LDR X20, [X9]
	0x034169C0 LDRB W8, [X0 + 0x28]!
	0x034169C4 CBZ W8, 0x3416A10
	0x034169C8 ADRP X8, 0xD18000
	0x034169CC LDR X8, [X8 + 0x830]
	0x034169D0 LDR X1, [X8]
	0x034169D4 BL 0x242D714
	0x034169D8 CBZ X0, 0x3416E90
	0x034169DC MOV X1, X31
	0x034169E0 BL 0x322B5E4
	0x034169E4 ADRP X8, 0xD18000
	0x034169E8 LDR X8, [X8 + 0x840]
	0x034169EC ADRP X9, 0xCE6000
	0x034169F0 LDR X9, [X9 + 0x720]
	0x034169F4 MOV X2, X0
	0x034169F8 LDR X1, [X8]
	0x034169FC LDR X3, [X9]
	0x03416A00 MOV X0, X20
	0x03416A04 MOV X4, X31
	0x03416A08 BL 0x32277C4
	0x03416A0C MOV X20, X0
	0x03416A10 LDR X22, [X19 + 0x30]
	0x03416A14 CBZ X22, 0x3416A68
	0x03416A18 ADRP X8, 0xCDF000
	0x03416A1C LDR X8, [X8 + 0xA28]
	0x03416A20 LDR X0, [X8]
	0x03416A24 LDR W8, [X0 + 0xE0]
	0x03416A28 CBNZ W8, 0x3416A30
	0x03416A2C BL 0x1C16DFC
	0x03416A30 MOV X0, X22
	0x03416A34 MOV X1, X31
	0x03416A38 BL 0x3624D20
	0x03416A3C ADRP X8, 0xD18000
	0x03416A40 LDR X8, [X8 + 0x848]
	0x03416A44 ADRP X9, 0xCE6000
	0x03416A48 LDR X9, [X9 + 0x720]
	0x03416A4C MOV X2, X0
	0x03416A50 LDR X1, [X8]
	0x03416A54 LDR X3, [X9]
	0x03416A58 MOV X0, X20
	0x03416A5C MOV X4, X31
	0x03416A60 BL 0x32277C4
	0x03416A64 MOV X20, X0
	0x03416A68 MOV X0, X19
	0x03416A6C LDRB W8, [X0 + 0x38]!
	0x03416A70 CBZ W8, 0x3416ABC
	0x03416A74 ADRP X8, 0xD18000
	0x03416A78 LDR X8, [X8 + 0x830]
	0x03416A7C LDR X1, [X8]
	0x03416A80 BL 0x242D714
	0x03416A84 CBZ X0, 0x3416E94
	0x03416A88 MOV X1, X31
	0x03416A8C BL 0x322B5E4
	0x03416A90 ADRP X8, 0xD18000
	0x03416A94 LDR X8, [X8 + 0x8C8]
	0x03416A98 ADRP X9, 0xCE6000
	0x03416A9C LDR X9, [X9 + 0x720]
	0x03416AA0 MOV X2, X0
	0x03416AA4 LDR X1, [X8]
	0x03416AA8 LDR X3, [X9]
	0x03416AAC MOV X0, X20
	0x03416AB0 MOV X4, X31
	0x03416AB4 BL 0x32277C4
	0x03416AB8 MOV X20, X0
	0x03416ABC CBZ X25, 0x3416E6C
	0x03416AC0 LDR X0, [X25 + 0x20]
	0x03416AC4 CBZ X0, 0x3416E70
	0x03416AC8 MOV X1, X31
	0x03416ACC BL 0x361B448
	0x03416AD0 ADRP X8, 0xCE6000
	0x03416AD4 LDR X8, [X8 + 0x8D8]
	0x03416AD8 MOV X22, X0
	0x03416ADC LDR X0, [X8]
	0x03416AE0 MOVZ W1, 0x1
	0x03416AE4 BL 0x1C16D6C
	0x03416AE8 MOV X1, X0
	0x03416AEC CBZ X1, 0x3416E74
	0x03416AF0 LDR W8, [X1 + 0x18]
	0x03416AF4 CBZ W8, 0x3416E78
	0x03416AF8 MOVZ W8, 0x2F
	0x03416AFC STRH W8, [X1 + 0x20]
	0x03416B00 CBZ X22, 0x3416E7C
	0x03416B04 MOV X0, X22
	0x03416B08 MOV X2, X31
	0x03416B0C BL 0x322BC58
	0x03416B10 MOV X1, X21
	0x03416B14 MOV X2, X31
	0x03416B18 BL 0x321B938
	0x03416B1C ADRP X8, 0xCE6000
	0x03416B20 LDR X8, [X8 + 0x3A0]
	0x03416B24 MOV X22, X0
	0x03416B28 LDR X23, [X25 + 0x20]
	0x03416B2C LDR X0, [X8]
	0x03416B30 BL 0x1C16F10
	0x03416B34 MOV X21, X0
	0x03416B38 MOV X1, X23
	0x03416B3C MOV X2, X31
	0x03416B40 BL 0x36281F8
	0x03416B44 CBZ X21, 0x3416E80
	0x03416B48 MOV X0, X21
	0x03416B4C MOV X1, X22
	0x03416B50 MOV X2, X31
	0x03416B54 BL 0x36288CC
	0x03416B58 MOV X0, X21
	0x03416B5C MOV X1, X20
	0x03416B60 MOV X2, X31
	0x03416B64 BL 0x3628980
	0x03416B68 MOV X0, X21
	0x03416B6C MOV X1, X31
	0x03416B70 BL 0x3628A38
	0x03416B74 ADRP X8, 0xD06000
	0x03416B78 ADRP X9, 0xCDE000
	0x03416B7C LDR X8, [X8 + 0x4D8]
	0x03416B80 LDR X9, [X9 + 0x6D0]
	0x03416B84 MOV X20, X0
	0x03416B88 LDR X21, [X8]
	0x03416B8C LDR X0, [X9]
	0x03416B90 BL 0x1C16F10
	0x03416B94 ADRP X8, 0xCDE000
	0x03416B98 LDR X8, [X8 + 0x6C0]
	0x03416B9C MOV X22, X0
	0x03416BA0 LDR X1, [X8]
	0x03416BA4 BL 0x2AA4804
	0x03416BA8 LDR X0, [X19 + 0x48]
	0x03416BAC MOV X1, X31
	0x03416BB0 BL 0x32277A8
	0x03416BB4 TBNZ X0, 0x0, 0x3416C60
	0x03416BB8 MOV X0, X31
	0x03416BBC BL 0x3241948
	0x03416BC0 ADRP X8, 0xCE6000
	0x03416BC4 MOV X23, X0
	0x03416BC8 LDP X0, X2, [X19 + 0x48]
	0x03416BCC LDR X8, [X8 + 0x988]
	0x03416BD0 LDR X1, [X8]
	0x03416BD4 MOV X3, X31
	0x03416BD8 BL 0x32274B8
	0x03416BDC MOV X1, X0
	0x03416BE0 CBZ X23, 0x3416E98
	0x03416BE4 LDR X8, [X23]
	0x03416BE8 LDR X9, [X8 + 0x268]
	0x03416BEC LDR X2, [X8 + 0x270]
	0x03416BF0 MOV X0, X23
	0x03416BF4 BLR X9
	0x03416BF8 ADRP X8, 0xCE6000
	0x03416BFC LDR X8, [X8 + 0x9E8]
	0x03416C00 MOV X23, X0
	0x03416C04 LDR X0, [X8]
	0x03416C08 LDR W8, [X0 + 0xE0]
	0x03416C0C CBNZ W8, 0x3416C14
	0x03416C10 BL 0x1C16DFC
	0x03416C14 MOV X0, X23
	0x03416C18 MOV X1, X31
	0x03416C1C BL 0x33225A0
	0x03416C20 MOV X1, X0
	0x03416C24 ADRP X8, 0xD18000
	0x03416C28 LDR X8, [X8 + 0x850]
	0x03416C2C LDR X0, [X8]
	0x03416C30 MOV X2, X31
	0x03416C34 BL 0x321B938
	0x03416C38 CBZ X22, 0x3416E9C
	0x03416C3C ADRP X8, 0xD18000
	0x03416C40 LDR X8, [X8 + 0x7D0]
	0x03416C44 ADRP X9, 0xCDE000
	0x03416C48 LDR X9, [X9 + 0x810]
	0x03416C4C MOV X2, X0
	0x03416C50 LDR X1, [X8]
	0x03416C54 LDR X3, [X9]
	0x03416C58 MOV X0, X22
	0x03416C5C BL 0x2AA5098
	0x03416C60 LDR X0, [X19 + 0x20]
	0x03416C64 MOV X1, X31
	0x03416C68 BL 0x3483BE4
	0x03416C6C MOV X23, X0
	0x03416C70 MOV X0, X31
	0x03416C74 BL 0x3241948
	0x03416C78 CBZ X0, 0x3416E84
	0x03416C7C LDR X8, [X0]
	0x03416C80 LDR X9, [X8 + 0x268]
	0x03416C84 LDR X2, [X8 + 0x270]
	0x03416C88 MOV X1, X23
	0x03416C8C BLR X9
	0x03416C90 LDR X24, [X25 + 0x10]
	0x03416C94 CBZ X24, 0x3416E88
	0x03416C98 ADRP X10, 0xD18000
	0x03416C9C LDR X10, [X10 + 0x7B8]
	0x03416CA0 LDR X8, [X24]
	0x03416CA4 LDR W26, [X25 + 0x18]
	0x03416CA8 LDP X27, X25, [X19 + 0x58]
	0x03416CAC LDR X1, [X10]
	0x03416CB0 LDRH W9, [X8 + 0x12E]
	0x03416CB4 MOV X23, X0
	0x03416CB8 CBZ X9, 0x3416CDC
	0x03416CBC LDR X10, [X8 + 0xB0]
	0x03416CC0 ADD X10, X10, 0x8
	0x03416CC4 LDUR X11, [X10 - 0x8]
	0x03416CC8 CMP X11, X1
	0x03416CCC B.EQ 0x3416D04
	0x03416CD0 SUBS X9, X9, 0x1
	0x03416CD4 ADD X10, X10, 0x10
	0x03416CD8 B.NE 0x3416CC4
	0x03416CDC MOVZ W2, 0x3
	0x03416CE0 MOV X0, X24
	0x03416CE4 BL 0x1C5C788
	0x03416CE8 B 0x3416D14
	0x03416CEC LDR X8, [X19 + 0x68]
	0x03416CF0 MOVN W9, 0x0
	0x03416CF4 STR X8, [X31 + 0x18]
	0x03416CF8 STR X31, [X19 + 0x68]
	0x03416CFC STR W9, [X19]
	0x03416D00 B 0x3416D70
	0x03416D04 LDR W9, [X10]
	0x03416D08 ADD W9, W9, 0x3
	0x03416D0C ADD X8, X8, W9, 0x4, SXTW
	0x03416D10 ADD X0, X8, 0x138
	0x03416D14 LDP X8, X9, [X0]
	0x03416D18 MOV X0, X24
	0x03416D1C MOV X1, X21
	0x03416D20 MOV X2, X20
	0x03416D24 MOV X3, X22
	0x03416D28 MOV X4, X23
	0x03416D2C MOV W5, W26
	0x03416D30 MOV X6, X27
	0x03416D34 MOV X7, X25
	0x03416D38 STR X9, [X31]
	0x03416D3C BLR X8
	0x03416D40 CBZ X0, 0x3416E8C
	0x03416D44 ADRP X8, 0xCE0000
	0x03416D48 LDR X8, [X8 + 0x1F8]
	0x03416D4C LDR X1, [X8]
	0x03416D50 BL 0x269F5D0
	0x03416D54 ADRP X8, 0xCE0000
	0x03416D58 LDR X8, [X8 + 0x1F0]
	0x03416D5C STR X0, [X31 + 0x18]
	0x03416D60 LDR X1, [X8]
	0x03416D64 ADD X0, X31, 0x18
	0x03416D68 BL 0x2677430
	0x03416D6C TBZ X0, 0x0, 0x3416DCC
	0x03416D70 ADRP X8, 0xCE0000
	0x03416D74 LDR X8, [X8 + 0x1E0]
	0x03416D78 ADD X0, X31, 0x18
	0x03416D7C LDR X1, [X8]
	0x03416D80 BL 0x2677474
	0x03416D84 ADRP X8, 0xD18000
	0x03416D88 LDR X8, [X8 + 0x828]
	0x03416D8C LDR X1, [X8]
	0x03416D90 BL 0x220E6DC
	0x03416D94 MOVN W8, 0x1
	0x03416D98 STR W8, [X19], #0x8
	0x03416D9C MOV X20, X0
	0x03416DA0 LDR X0, [X28]
	0x03416DA4 ADRP X21, 0xD18000
	0x03416DA8 LDR W8, [X0 + 0xE0]
	0x03416DAC LDR X21, [X21 + 0x820]
	0x03416DB0 CBNZ W8, 0x3416DB8
	0x03416DB4 BL 0x1C16DFC
	0x03416DB8 LDR X2, [X21]
	0x03416DBC MOV X0, X19
	0x03416DC0 MOV X1, X20
	0x03416DC4 BL 0x26322B0
	0x03416DC8 B 0x3416E04
	0x03416DCC STR W31, [X19]
	0x03416DD0 LDR X8, [X31 + 0x18]
	0x03416DD4 STR X8, [X19 + 0x68]
	0x03416DD8 LDR X0, [X28]
	0x03416DDC LDR W8, [X0 + 0xE0]
	0x03416DE0 CBNZ W8, 0x3416DE8
	0x03416DE4 BL 0x1C16DFC
	0x03416DE8 ADRP X8, 0xD18000
	0x03416DEC LDR X8, [X8 + 0x8C0]
	0x03416DF0 ADD X0, X19, 0x8
	0x03416DF4 LDR X3, [X8]
	0x03416DF8 ADD X1, X31, 0x18
	0x03416DFC MOV X2, X19
	0x03416E00 BL 0x1FB20A8
	0x03416E04 LDP X20, X19, [X31 + 0x60]
	0x03416E08 LDP X22, X21, [X31 + 0x50]
	0x03416E0C LDP X24, X23, [X31 + 0x40]
	0x03416E10 LDP X26, X25, [X31 + 0x30]
	0x03416E14 LDP X28, X27, [X31 + 0x20]
	0x03416E18 LDR X30, [X31 + 0x10]
	0x03416E1C ADD X31, X31, 0x70
	0x03416E20 RET
	0x03416E24 ADRP X0, 0xCE5000
	0x03416E28 LDR X0, [X0 + 0x578]
	0x03416E2C BL 0x1C16D08
	0x03416E30 BL 0x1C16F10
	0x03416E34 MOV X20, X0
	0x03416E38 ADRP X0, 0xD18000
	0x03416E3C LDR X0, [X0 + 0x858]
	0x03416E40 BL 0x1C16D08
	0x03416E44 MOV X1, X0
	0x03416E48 MOV X0, X20
	0x03416E4C MOV X2, X31
	0x03416E50 BL 0x3314A68
	0x03416E54 ADRP X0, 0xD18000
	0x03416E58 LDR X0, [X0 + 0x8D8]
	0x03416E5C BL 0x1C16D08
	0x03416E60 MOV X1, X0
	0x03416E64 MOV X0, X20
	0x03416E68 BL 0x1C16DEC
	0x03416E6C BL 0x1C16F20
	0x03416E70 BL 0x1C16F20
	0x03416E74 BL 0x1C16F20
	0x03416E78 BL 0x1C16F28
	0x03416E7C BL 0x1C16F20
	0x03416E80 BL 0x1C16F20
	0x03416E84 BL 0x1C16F20
	0x03416E88 BL 0x1C16F20
	0x03416E8C BL 0x1C16F20
	0x03416E90 BL 0x1C16F20
	0x03416E94 BL 0x1C16F20
	0x03416E98 BL 0x1C16F20
	0x03416E9C BL 0x1C16F20
	0x03416EA0 B 0x3416F40
	0x03416EA4 B 0x3416F40
	0x03416EA8 B 0x3416F40
	0x03416EAC B 0x3416F40
	0x03416EB0 B 0x3416F40
	0x03416EB4 B 0x3416F40
	0x03416EB8 B 0x3416F40
	0x03416EBC B 0x3416F40
	0x03416EC0 B 0x3416F40
	0x03416EC4 B 0x3416F40
	0x03416EC8 B 0x3416F40
	0x03416ECC B 0x3416F40
	0x03416ED0 B 0x3416F40
	0x03416ED4 B 0x3416F40
	0x03416ED8 B 0x3416F40
	0x03416EDC B 0x3416F40
	0x03416EE0 B 0x3416F40
	0x03416EE4 B 0x3416F40
	0x03416EE8 B 0x3416F40
	0x03416EEC B 0x3416F40
	0x03416EF0 B 0x3416F40
	0x03416EF4 B 0x3416F40
	0x03416EF8 B 0x3416F40
	0x03416EFC B 0x3416F40
	0x03416F00 B 0x3416F40
	0x03416F04 B 0x3416F40
	0x03416F08 B 0x3416F40
	0x03416F0C B 0x3416F40
	0x03416F10 B 0x3416F40
	0x03416F14 B 0x3416F40
	0x03416F18 B 0x3416F40
	0x03416F1C B 0x3416F40
	0x03416F20 B 0x3416F40
	0x03416F24 B 0x3416F40
	0x03416F28 B 0x3416F40
	0x03416F2C B 0x3416F40
	0x03416F30 B 0x3416F40
	0x03416F34 B 0x3416F40
	0x03416F38 B 0x3416F40
	0x03416F3C B 0x3416F40
	0x03416F40 MOV X20, X0
	0x03416F44 CMP W1, 0x1
	0x03416F48 B.NE 0x3416FE4
	0x03416F4C MOV X0, X20
	0x03416F50 BL 0x3EB1AD0
	0x03416F54 MOV X20, X0
	0x03416F58 ADRP X0, 0xCDD000
	0x03416F5C LDR X0, [X0 + 0x7D0]
	0x03416F60 BL 0x1C16D08
	0x03416F64 LDR X8, [X20]
	0x03416F68 LDR X1, [X8]
	0x03416F6C BL 0x1C17270
	0x03416F70 TBZ X0, 0x0, 0x3416FBC
	0x03416F74 LDR X20, [X20]
	0x03416F78 BL 0x3EB1AE0
	0x03416F7C MOVN W8, 0x1
	0x03416F80 STR W8, [X19], #0x8
	0x03416F84 ADRP X0, 0xD18000
	0x03416F88 LDR X0, [X0 + 0x320]
	0x03416F8C BL 0x1C16D08
	0x03416F90 LDR W8, [X0 + 0xE0]
	0x03416F94 CBNZ W8, 0x3416F9C
	0x03416F98 BL 0x1C16DFC
	0x03416F9C ADRP X0, 0xD18000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFC8000
	014 Move W8, [X20+1481]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {100}
	020 Move X0, 0xD19000
	021 Move X0, [X0+2192]
	022 Call 0x1C17CF4
	023 Move X0, 0xD19000
	024 Move X0, [X0+2080]
	025 Call 0x1C17CF4
	026 Move X0, 0xD19000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xCE7000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCE7000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0xCDF000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDF000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDF000
	042 Move X0, [X0+1744]
	043 Call 0x1C17CF4
	044 Move X0, 0xD19000
	045 Move X0, [X0+1976]
	046 Call 0x1C17CF4
	047 Move X0, 0xD19000
	048 Move X0, [X0+2088]
	049 Call 0x1C17CF4
	050 Move X0, 0xD19000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE2000
	054 Move X0, [X0+3056]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE1000
	057 Move X0, [X0+480]
	058 Call 0x1C17CF4
	059 Move X0, 0xCE1000
	060 Move X0, [X0+496]
	061 Call 0x1C17CF4
	062 Move X0, 0xCE1000
	063 Move X0, [X0+504]
	064 Call 0x1C17CF4
	065 Move X0, 0xCE7000
	066 Move X0, [X0+928]
	067 Call 0x1C17CF4
	068 Move X0, 0xCE0000
	069 Move X0, [X0+2600]
	070 Call 0x1C17CF4
	071 Move X0, 0xD19000
	072 Move X0, [X0+2112]
	073 Call 0x1C17CF4
	074 Move X0, 0xD07000
	075 Move X0, [X0+1240]
	076 Call 0x1C17CF4
	077 Move X0, 0xD19000
	078 Move X0, [X0+2120]
	079 Call 0x1C17CF4
	080 Move X0, 0xCE7000
	081 Move X0, [X0+2440]
	082 Call 0x1C17CF4
	083 Move X0, 0xCE7000
	084 Move X0, [X0+1824]
	085 Call 0x1C17CF4
	086 Move X0, 0xD19000
	087 Move X0, [X0+2000]
	088 Call 0x1C17CF4
	089 Move X0, 0xD19000
	090 Move X0, [X0+2128]
	091 Call 0x1C17CF4
	092 Move X0, 0xD19000
	093 Move X0, [X0+2200]
	094 Call 0x1C17CF4
	095 Move X0, 0xCDE000
	096 Move X0, [X0+2440]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X20+1481], W8
	100 Move [X31+24], X31
	101 Move X28, 0xD19000
	102 Move W8, [X19]
	103 Move X28, [X28+800]
	104 Compare W8, 0
	105 JumpIfEqual {318}
	106 Move X8, [X19+32]
	107 Compare X8, 0
	108 JumpIfEqual {410}
	109 Move X8, 0xD19000
	110 Move X9, 0xCDE000
	111 Move X8, [X8+2200]
	112 Move X9, [X9+2440]
	113 Move X0, X19
	114 Move X25, [X19+56]
	115 Move X21, [X8]
	116 Move X20, [X9]
	117 Add X0, X0, 40
	118 Move W8, [X0]
	119 Compare W8, 0
	120 JumpIfEqual {140}
	121 Move X8, 0xD19000
	122 Move X8, [X8+2096]
	123 Move X1, [X8]
	124 Call Nullable`1<Boolean>.ToString, X0
	125 Compare X0, 0
	126 JumpIfEqual {437}
	127 Move X1, X31
	128 Call String.ToLower, X0
	129 Move X8, 0xD19000
	130 Move X8, [X8+2112]
	131 Move X9, 0xCE7000
	132 Move X9, [X9+1824]
	133 Move X2, X0
	134 Move X1, [X8]
	135 Move X3, [X9]
	136 Move X0, X20
	137 Move X4, X31
	138 Call String.Concat, X0, X1, X2, X3
	139 Move X20, X0
	140 Move X22, [X19+48]
	141 Compare X22, 0
	142 JumpIfEqual {164}
	143 Move X8, 0xCE0000
	144 Move X8, [X8+2600]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X22
	151 Move X1, X31
	152 Call Uri.EscapeDataString, X0
	153 Move X8, 0xD19000
	154 Move X8, [X8+2120]
	155 Move X9, 0xCE7000
	156 Move X9, [X9+1824]
	157 Move X2, X0
	158 Move X1, [X8]
	159 Move X3, [X9]
	160 Move X0, X20
	161 Move X4, X31
	162 Call String.Concat, X0, X1, X2, X3
	163 Move X20, X0
	164 Compare X25, 0
	165 JumpIfEqual {428}
	166 Move X0, [X25+32]
	167 Compare X0, 0
	168 JumpIfEqual {429}
	169 Move X1, X31
	170 Call Uri.get_AbsolutePath, X0
	171 Move X8, 0xCE7000
	172 Move X8, [X8+2264]
	173 Move X22, X0
	174 Move X0, [X8]
	175 Move W1, 1
	176 Call 0x1C17D6C
	177 Move X1, X0
	178 Compare X1, 0
	179 JumpIfEqual {430}
	180 Move W8, [X1+24]
	181 Compare W8, 0
	182 JumpIfEqual {431}
	183 Move W8, 47
	184 NotImplemented "Instruction STRH not yet implemented."
	185 Compare X22, 0
	186 JumpIfEqual {432}
	187 Move X0, X22
	188 Move X2, X31
	189 Call String.TrimEnd, X0, X1
	190 Move X1, X21
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Move X8, 0xCE7000
	194 Move X8, [X8+928]
	195 Move X22, X0
	196 Move X23, [X25+32]
	197 Move X0, [X8]
	198 Call 0x1C17F10
	199 Move X21, X0
	200 Move X1, X23
	201 Move X2, X31
	202 Call UriBuilder..ctor, X0, X1
	203 Compare X21, 0
	204 JumpIfEqual {433}
	205 Move X0, X21
	206 Move X1, X22
	207 Move X2, X31
	208 Call UriBuilder.set_Path, X0, X1
	209 Move X0, X21
	210 Move X1, X20
	211 Move X2, X31
	212 Call UriBuilder.set_Query, X0, X1
	213 Move X0, X21
	214 Move X1, X31
	215 Call UriBuilder.get_Uri, X0
	216 Move X8, 0xD07000
	217 Move X9, 0xCDF000
	218 Move X8, [X8+1240]
	219 Move X9, [X9+1744]
	220 Move X20, X0
	221 Move X21, [X8]
	222 Move X0, [X9]
	223 Call 0x1C17F10
	224 Move X8, 0xCDF000
	225 Move X8, [X8+1728]
	226 Move X22, X0
	227 Move X1, [X8]
	228 Call Dictionary`2<Object, Object>..ctor, X0
	229 Move X0, [X19+64]
	230 Move X1, X31
	231 Call String.IsNullOrEmpty, X0
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {282}
	236 Move X0, X31
	237 Call Encoding.get_UTF8
	238 Move X8, 0xCE7000
	239 Move X23, X0
	240 Move X0, [X19+64]
	241 Move X2, [X19+72]
	242 Move X8, [X8+2440]
	243 Move X1, [X8]
	244 Move X3, X31
	245 Call String.Concat, X0, X1, X2
	246 Move X1, X0
	247 Compare X23, 0
	248 JumpIfEqual {438}
	249 Move X8, [X23]
	250 Move X9, [X8+616]
	251 Move X2, [X8+624]
	252 Move X0, X23
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Move X8, 0xCE7000
	255 Move X8, [X8+2536]
	256 Move X23, X0
	257 Move X0, [X8]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X0, X23
	263 Move X1, X31
	264 Call Convert.ToBase64String, X0
	265 Move X1, X0
	266 Move X8, 0xD19000
	267 Move X8, [X8+2128]
	268 Move X0, [X8]
	269 Move X2, X31
	270 Call String.Concat, X0, X1
	271 Compare X22, 0
	272 JumpIfEqual {439}
	273 Move X8, 0xD19000
	274 Move X8, [X8+2000]
	275 Move X9, 0xCDF000
	276 Move X9, [X9+2064]
	277 Move X2, X0
	278 Move X1, [X8]
	279 Move X3, [X9]
	280 Move X0, X22
	281 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	282 Move X0, [X19+32]
	283 Move X1, X31
	284 Call JsonWriter.ToJson, X0
	285 Move X23, X0
	286 Move X0, X31
	287 Call Encoding.get_UTF8
	288 Compare X0, 0
	289 JumpIfEqual {434}
	290 Move X8, [X0]
	291 Move X9, [X8+616]
	292 Move X2, [X8+624]
	293 Move X1, X23
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X24, [X25+16]
	296 Compare X24, 0
	297 JumpIfEqual {435}
	298 Move X10, 0xD19000
	299 Move X10, [X10+1976]
	300 Move X8, [X24]
	301 Move W26, [X25+24]
	302 Move X27, [X19+80]
	303 Move X25, [X19+88]
	304 Move X1, [X10]
	305 NotImplemented "Instruction LDRH not yet implemented."
	306 Move X23, X0
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move W2, 3
	316 Move X0, X24
	317 Call 0x1C5D788
	318 Move X8, [X19+96]
	319 Move TEMP, 0
	320 Not TEMP
	321 Move W9, TEMP
	322 Move [X31+24], X8
	323 Move [X19+96], X31
	324 Move [X19], W9
	325 Move W9, [X10]
	326 Add W9, W9, 3
	327 Add X8, X8, W9
	328 Add X0, X8, 312
	329 Move X8, [X0]
	330 Move X9, [X0+8]
	331 Move X0, X24
	332 Move X1, X21
	333 Move X2, X20
	334 Move X3, X22
	335 Move X4, X23
	336 Move W5, W26
	337 Move X6, X27
	338 Move X7, X25
	339 Move [X31], X9
	340 NotImplemented "Instruction BLR not yet implemented."
	341 Compare X0, 0
	342 JumpIfEqual {436}
	343 Move X8, 0xCE1000
	344 Move X8, [X8+504]
	345 Move X1, [X8]
	346 Call Task`1<Object>.GetAwaiter, X0
	347 Move X8, 0xCE1000
	348 Move X8, [X8+496]
	349 Move [X31+24], X0
	350 Move X1, [X8]
	351 Add X0, X31, 24
	352 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {382}
	357 Move X8, 0xCE1000
	358 Move X8, [X8+480]
	359 Add X0, X31, 24
	360 Move X1, [X8]
	361 Call TaskAwaiter`1<Object>.GetResult, X0
	362 Move X8, 0xD19000
	363 Move X8, [X8+2088]
	364 Move X1, [X8]
	365 Call JsonParser.FromJson, X0
	366 Move TEMP, 1
	367 Not TEMP
	368 Move W8, TEMP
	369 Move [X19+8], W8
	370 Move X20, X0
	371 Move X0, [X28]
	372 Move X21, 0xD19000
	373 Move W8, [X0+224]
	374 Move X21, [X21+2080]
	375 Compare W8, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1C17DFC
	378 Move X2, [X21]
	379 Move X0, X19
	380 Move X1, X20
	381 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	382 Move [X19], W31
	383 Move X8, [X31+24]
	384 Move [X19+96], X8
	385 Move X0, [X28]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Move X8, 0xD19000
	391 Move X8, [X8+2192]
	392 Add X0, X19, 8
	393 Move X3, [X8]
	394 Add X1, X31, 24
	395 Move X2, X19
	396 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	397 Move X20, [X31+96]
	398 Move X19, [X31+104]
	399 Move X22, [X31+80]
	400 Move X21, [X31+88]
	401 Move X24, [X31+64]
	402 Move X23, [X31+72]
	403 Move X26, [X31+48]
	404 Move X25, [X31+56]
	405 Move X28, [X31+32]
	406 Move X27, [X31+40]
	407 Move X30, [X31+16]
	408 Add X31, X31, 112
	409 Return 
	410 Move X0, 0xCE6000
	411 Move X0, [X0+1400]
	412 Call 0x1C17D08
	413 Call 0x1C17F10
	414 Move X20, X0
	415 Move X0, 0xD19000
	416 Move X0, [X0+2136]
	417 Call 0x1C17D08
	418 Move X1, X0
	419 Move X0, X20
	420 Move X2, X31
	421 Call ArgumentException..ctor, X0, X1
	422 Move X0, 0xD19000
	423 Move X0, [X0+2208]
	424 Call 0x1C17D08
	425 Move X1, X0
	426 Move X0, X20
	427 Call 0x1C17DEC
	428 Call 0x1C17F20
	429 Call 0x1C17F20
	430 Call 0x1C17F20
	431 Call 0x1C17F28
	432 Call 0x1C17F20
	433 Call 0x1C17F20
	434 Call 0x1C17F20
	435 Call 0x1C17F20
	436 Call 0x1C17F20
	437 Call 0x1C17F20
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Move X20, X0
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X0, X20
	443 Call 0x3EB2AD0
	444 Move X20, X0
	445 Move X0, 0xCDE000
	446 Move X0, [X0+2000]
	447 Call 0x1C17D08
	448 Move X8, [X20]
	449 Move X1, [X8]
	450 Call 0x1C18270
	451 Move TEMP, X0
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfNotEqual {475}
	455 Move X20, [X20]
	456 Call 0x3EB2AE0
	457 Move TEMP, 1
	458 Not TEMP
	459 Move W8, TEMP
	460 Move [X19+8], W8
	461 Move X0, 0xD19000
	462 Move X0, [X0+800]
	463 Call 0x1C17D08
	464 Move W8, [X0+224]
	465 Compare W8, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Move X0, 0xD19000
	469 Move X0, [X0+2152]
	470 Call 0x1C17D08
	471 Move X2, X0
	472 Move X0, X19
	473 Move X1, X20
	474 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	475 Move W0, 8
	476 Call 0x3EB2AF0
	477 Move X8, [X20]
	478 Move [X0], X8
	479 Move X1, 0xA9F000
	480 Add X1, X1, 3672
	481 Move X2, X31
	482 Call 0x3EB2B00
	483 Move X20, X0
	484 Call 0x3EB2AE0
	485 Move X0, X20
	486 Call 0x1D2D690
	487 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03416FA0 LDR X0, [X0 + 0x868]
	0x03416FA4 BL 0x1C16D08
	0x03416FA8 MOV X2, X0
	0x03416FAC MOV X0, X19
	0x03416FB0 MOV X1, X20
	0x03416FB4 BL 0x26324C8
	0x03416FB8 B 0x3416E04
	0x03416FBC MOVZ W0, 0x8
	0x03416FC0 BL 0x3EB1AF0
	0x03416FC4 LDR X8, [X20]
	0x03416FC8 STR X8, [X0]
	0x03416FCC ADRP X1, 0xA9E000
	0x03416FD0 ADD X1, X1, 0xE58
	0x03416FD4 MOV X2, X31
	0x03416FD8 BL 0x3EB1B00
	0x03416FDC MOV X20, X0
	0x03416FE0 BL 0x3EB1AE0
	0x03416FE4 MOV X0, X20
	0x03416FE8 BL 0x1D2C690
	0x03416FEC BL 0x1990590
	0x03416FF0 STR X30, [X31 - 0x30]!
	0x03416FF4 STP X22, X21, [X31 + 0x10]
	0x03416FF8 STP X20, X19, [X31 + 0x20]
	0x03416FFC ADRP X22, 0xFC7000
	0x03417000 ADRP X21, 0xD17000
	0x03417004 LDRB W8, [X22 + 0x5CE]
	0x03417008 B 0x3EB1644
	0x0341700C MOV X19, X1
	0x03417010 MOV X20, X0
	0x03417014 TBNZ X8, 0x0, 0x3417038
	0x03417018 ADRP X0, 0xD17000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFC8000
	007 Move X21, 0xD19000
	008 Move W8, [X22+1482]
	009 Move X21, [X21+800]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xD19000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0xD19000
	020 Move X0, [X0+800]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1482], W8
	024 Move X0, [X21]
	025 Move X21, 0xD19000
	026 Move W8, [X0+224]
	027 Move X21, [X21+2160]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

