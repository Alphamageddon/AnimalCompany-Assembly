Type: Nakama.WebSocketAdapter/<CloseAsync>d__28

Method: System.Void MoveNext()

Disassembly:
	0x034866C4 TBZ X0, 0x0, 0x34866D0
	0x034866C8 MOVZ W21, 0x13
	0x034866CC B 0x3486714
	0x034866D0 ADRP X0, 0xCAB000
	0x034866D4 LDR X0, [X0 + 0xD8]
	0x034866D8 BL 0x1C16D08
	0x034866DC LDR X8, [X20]
	0x034866E0 LDR X1, [X8]
	0x034866E4 BL 0x1C17270
	0x034866E8 TBZ X0, 0x0, 0x34866F4
	0x034866EC MOVZ W21, 0x14
	0x034866F0 B 0x3486714
	0x034866F4 ADRP X0, 0xC6D000
	0x034866F8 LDR X0, [X0 + 0x7D0]
	0x034866FC BL 0x1C16D08
	0x03486700 LDR X8, [X20]
	0x03486704 LDR X1, [X8]
	0x03486708 BL 0x1C17270
	0x0348670C TBZ X0, 0x0, 0x34867B0
	0x03486710 MOVZ W21, 0x15
	0x03486714 LDR X8, [X20]
	0x03486718 LDRSW X9, [X31 + 0x28]
	0x0348671C ADD X10, X31, 0x10
	0x03486720 STR X8, [X10, X9, LSL #3]
	0x03486724 ADD W8, W9, 0x1
	0x03486728 STR W8, [X31 + 0x28]
	0x0348672C BL 0x3EB1AE0
	0x03486730 SUB W8, W21, 0x12
	0x03486734 CMP W8, 0x3
	0x03486738 B.HI 0x34867A4
	0x0348673C ADRP X9, 0xFFFFFFFFFD710000
	0x03486740 ADD X9, X9, 0xA3E
	0x03486744 ADR X10, 0x10
	0x03486748 LDRB W11, [X9, X8, LSL]
	0x0348674C ADD X10, X10, X11, 0x2, LSL
	0x03486750 BR X10
	0x03486754 LDR W8, [X31 + 0x28]
	0x03486758 MOV X20, X31
	0x0348675C SUB W8, W8, 0x1
	0x03486760 B 0x348679C
	0x03486764 CBZ X24, 0x34867AC
	0x03486768 LDR W8, [X31 + 0x28]
	0x0348676C LDR X9, [X24 + 0x20]
	0x03486770 SUB W8, W8, 0x1
	0x03486774 CBZ X9, 0x3486798
	0x03486778 ADD X10, X31, 0x10
	0x0348677C LDR X0, [X9 + 0x40]
	0x03486780 LDR X1, [X10, W8, SXTW]
	0x03486784 LDR X11, [X9 + 0x18]
	0x03486788 LDR X2, [X9 + 0x28]
	0x0348678C BLR X11
	0x03486790 LDR W8, [X31 + 0x28]
	0x03486794 SUB W8, W8, 0x1
	0x03486798 MOV X20, X31
	0x0348679C STR W8, [X31 + 0x28]
	0x034867A0 B 0x3486454
	0x034867A4 MOV X20, X31
	0x034867A8 B 0x3486458
	0x034867AC BL 0x1C16F20
	0x034867B0 MOVZ W0, 0x8
	0x034867B4 BL 0x3EB1AF0
	0x034867B8 LDR X8, [X20]
	0x034867BC STR X8, [X0]
	0x034867C0 ADRP X1, 0xA2E000
	0x034867C4 ADD X1, X1, 0xE58
	0x034867C8 MOV X2, X31
	0x034867CC BL 0x3EB1B00
	0x034867D0 B 0x34868EC
	0x034867D4 B 0x34867DC
	0x034867D8 B 0x34867DC
	0x034867DC MOV X29, X0
	0x034867E0 MOV W21, W1
	0x034867E4 B 0x34867F4
	0x034867E8 MOV X21, X1
	0x034867EC MOV X29, X0
	0x034867F0 BL 0x3EB1AE0
	0x034867F4 MOVZ W8, 0x1
	0x034867F8 CMP W21, W8
	0x034867FC B.NE 0x3486818
	0x03486800 MOV X0, X29
	0x03486804 BL 0x3EB1AD0
	0x03486808 LDR X20, [X0]
	0x0348680C BL 0x3EB1AE0
	0x03486810 MOV W21, W31
	0x03486814 B 0x3486458
	0x03486818 MOV X20, X31
	0x0348681C TBZ X25, 0x1F, 0x348683C
	0x03486820 CBZ X24, 0x34868F4
	0x03486824 LDR X8, [X24 + 0x18]
	0x03486828 CBZ X8, 0x348683C
	0x0348682C LDR X0, [X8 + 0x40]
	0x03486830 LDR X1, [X8 + 0x28]
	0x03486834 LDR X9, [X8 + 0x18]
	0x03486838 BLR X9
	0x0348683C CBNZ X20, 0x34868EC
	0x03486840 CMP W21, 0x1
	0x03486844 B.NE 0x3486910
	0x03486848 MOV X0, X29
	0x0348684C BL 0x3EB1AD0
	0x03486850 MOV X20, X0
	0x03486854 ADRP X0, 0xC6D000
	0x03486858 LDR X0, [X0 + 0x7D0]
	0x0348685C BL 0x1C16D08
	0x03486860 LDR X8, [X20]
	0x03486864 LDR X1, [X8]
	0x03486868 BL 0x1C17270
	0x0348686C TBZ X0, 0x0, 0x34868CC
	0x03486870 LDR X8, [X20]
	0x03486874 LDRSW X20, [X31 + 0x28]
	0x03486878 ADD X21, X31, 0x10
	0x0348687C STR X8, [X21, X20, LSL #3]
	0x03486880 ADD W8, W20, 0x1
	0x03486884 STR W8, [X31 + 0x28]
	0x03486888 BL 0x3EB1AE0
	0x0348688C MOVN W8, 0x1
	0x03486890 LDR X20, [X21, X20, LSL #3]
	0x03486894 STR W8, [X19]
	0x03486898 STR X31, [X19 + 0x38]
	0x0348689C ADRP X0, 0xC70000
	0x034868A0 LDR X0, [X0 + 0x280]
	0x034868A4 ADD X19, X19, 0x8
	0x034868A8 BL 0x1C16D08
	0x034868AC LDR W8, [X0 + 0xE0]
	0x034868B0 CBNZ W8, 0x34868B8
	0x034868B4 BL 0x1C16DFC
	0x034868B8 MOV X0, X19
	0x034868BC MOV X1, X20
	0x034868C0 MOV X2, X31
	0x034868C4 BL 0x32C4908
	0x034868C8 B 0x3486500
	0x034868CC MOVZ W0, 0x8
	0x034868D0 BL 0x3EB1AF0
	0x034868D4 LDR X8, [X20]
	0x034868D8 STR X8, [X0]
	0x034868DC ADRP X1, 0xA2E000
	0x034868E0 ADD X1, X1, 0xE58
	0x034868E4 MOV X2, X31
	0x034868E8 BL 0x3EB1B00
	0x034868EC MOV X0, X20
	0x034868F0 BL 0x1C16F18
	0x034868F4 BL 0x1C16F20
	0x034868F8 MOV X29, X0
	0x034868FC MOV W21, W1
	0x03486900 TBZ X25, 0x1F, 0x348683C
	0x03486904 B 0x3486820
	0x03486908 MOV X29, X0
	0x0348690C BL 0x3EB1AE0
	0x03486910 MOV X0, X29
	0x03486914 BL 0x1D2C690
	0x03486918 BL 0x1990590
	0x0348691C STR X30, [X31 - 0x30]!
	0x03486920 STP X22, X21, [X31 + 0x10]
	0x03486924 STP X20, X19, [X31 + 0x20]
	0x03486928 ADRP X21, 0xF57000
	0x0348692C ADRP X22, 0xC70000
	0x03486930 LDRB W8, [X21 + 0x8EE]
	0x03486934 LDR X22, [X22 + 0x280]
	0x03486938 MOV X19, X1
	0x0348693C MOV X20, X0
	0x03486940 TBNZ X8, 0x0, 0x3486958
	0x03486944 ADRP X0, 0xC70000
	0x03486948 LDR X0, [X0 + 0x280]
	0x0348694C BL 0x1C16CF4
	0x03486950 MOVZ W8, 0x1
	0x03486954 STRB W8, [X21 + 0x8EE]
	0x03486958 LDR X0, [X22]
	0x0348695C LDR W8, [X0 + 0xE0]
	0x03486960 CBNZ W8, 0x3486968
	0x03486964 BL 0x1C16DFC
	0x03486968 ADD X0, X20, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xF58000
	007 Move W8, [X20+2281]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xCAC000
	014 Move X0, [X0+248]
	015 Call 0x1C17CF4
	016 Move X0, 0xC71000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move X0, 0xC76000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0xC6E000
	023 Move X0, [X0+2440]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2281], W8
	027 Move [X31+8], X31
	028 Move X21, 0xC71000
	029 Move W8, [X19]
	030 Move X22, [X19+32]
	031 Move X21, [X21+640]
	032 Compare W8, 0
	033 JumpIfEqual {93}
	034 Compare X22, 0
	035 JumpIfEqual {137}
	036 Move X0, [X22+80]
	037 Compare X0, 0
	038 JumpIfEqual {106}
	039 Move X8, [X0]
	040 Move X9, [X8+440]
	041 Move X1, [X8+448]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X22+80]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0xC76000
	046 Move X8, [X8+2008]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call CancellationToken.get_None
	054 Compare X20, 0
	055 JumpIfEqual {140}
	056 Move X9, 0xC6E000
	057 Move X8, [X20]
	058 Move X9, [X9+2440]
	059 Move X3, X0
	060 Move X2, [X9]
	061 Move X9, [X8+472]
	062 Move X4, [X8+480]
	063 Move W1, 1000
	064 Move X0, X20
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X0, 0
	067 JumpIfEqual {141}
	068 Move X1, X31
	069 Call Task.GetAwaiter, X0
	070 Move [X31+8], X0
	071 Add X0, X31, 8
	072 Move X1, X31
	073 Call TaskAwaiter.get_IsCompleted, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {100}
	078 Move [X19], W31
	079 Move X8, [X31+8]
	080 Move [X19+40], X8
	081 Move X0, [X21]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X8, 0xCAC000
	087 Move X8, [X8+248]
	088 Add X0, X19, 8
	089 Move X3, [X8]
	090 Add X1, X31, 8
	091 Move X2, X19
	092 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	093 Move X8, [X19+40]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+8], X8
	098 Move [X19+40], X31
	099 Move [X19], W9
	100 Add X0, X31, 8
	101 Move X1, X31
	102 Call TaskAwaiter.GetResult, X0
	103 Compare X22, 0
	104 JumpIfEqual {138}
	105 Move [X22+80], X31
	106 Move TEMP, 1
	107 Not TEMP
	108 Move W8, TEMP
	109 Move [X19+8], W8
	110 Move X0, [X21]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X19
	116 Move X1, X31
	117 Call AsyncTaskMethodBuilder.SetResult, X0
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X30, [X31+48]
	123 Return 
	124 Compare X20, 0
	125 JumpIfEqual {139}
	126 Move X8, [X20]
	127 Move X9, [X8+440]
	128 Move X1, [X8+448]
	129 Move X0, X20
	130 NotImplemented "Instruction BLR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, [X22+72]
	133 Compare X0, 0
	134 JumpIfEqual {105}
	135 Move X1, X31
	136 Call CancellationTokenSource.Cancel, X0
	137 Call 0x1C17F20
	138 Call 0x1C17F20
	139 Call 0x1C17F20
	140 Call 0x1C17F20
	141 Call 0x1C17F20
	142 Move X20, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X20
	145 Call 0x3EB2AD0
	146 Move X20, X0
	147 Move X0, 0xC6E000
	148 Move X0, [X0+2000]
	149 Call 0x1C17D08
	150 Move X8, [X20]
	151 Move X1, [X8]
	152 Call 0x1C18270
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {174}
	157 Move X20, [X20]
	158 Call 0x3EB2AE0
	159 Move TEMP, 1
	160 Not TEMP
	161 Move W8, TEMP
	162 Move [X19+8], W8
	163 Move X0, 0xC71000
	164 Move X0, [X0+640]
	165 Call 0x1C17D08
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, X19
	171 Move X1, X20
	172 Move X2, X31
	173 Call AsyncTaskMethodBuilder.SetException, X0, X1
	174 Move W0, 8
	175 Call 0x3EB2AF0
	176 Move X8, [X20]
	177 Move [X0], X8
	178 Move X1, 0xA2F000
	179 Add X1, X1, 3672
	180 Move X2, X31
	181 Call 0x3EB2B00
	182 Move X20, X0
	183 Call 0x3EB2AE0
	184 Move X0, X20
	185 Call 0x1D2D690
	186 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0348696C MOV X1, X19
	0x03486970 LDP X20, X19, [X31 + 0x20]
	0x03486974 LDP X22, X21, [X31 + 0x10]
	0x03486978 MOV X2, X31
	0x0348697C LDR X30, [X31], #0x30
	0x03486980 B 0x32C477C
	0x03486984 LDR W0, [X0 + 0x10]
	0x03486988 RET
	0x0348698C STR W1, [X0 + 0x10]
	0x03486990 RET
	0x03486994 LDR X0, [X0 + 0x18]
	0x03486998 RET
	0x0348699C STR X1, [X0 + 0x18]
	0x034869A0 RET
	0x034869A4 LDR X0, [X0 + 0x20]
	0x034869A8 RET
	0x034869AC STR X1, [X0 + 0x20]
	0x034869B0 RET
	0x034869B4 STR X30, [X31 - 0x30]!
	0x034869B8 STP X22, X21, [X31 + 0x10]
	0x034869BC STP X20, X19, [X31 + 0x20]
	0x034869C0 ADRP X22, 0xF57000
	0x034869C4 ADRP X21, 0xC6D000
	0x034869C8 ADRP X20, 0xCAB000
	0x034869CC LDRB W8, [X22 + 0x8EF]
	0x034869D0 LDR X21, [X21 + 0x758]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF58000
	007 Move X22, 0xC71000
	008 Move W8, [X21+2282]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC71000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2282], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

