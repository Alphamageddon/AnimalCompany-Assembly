Type: Nakama.ApiClient/<KickGroupUsersAsync>d__55

Method: System.Void MoveNext()

Disassembly:
	0x034273E8 BL 0x1C16CF4
	0x034273EC ADRP X0, 0xCCF000
	0x034273F0 LDR X0, [X0 + 0x1F8]
	0x034273F4 BL 0x1C16CF4
	0x034273F8 ADRP X0, 0xCD5000
	0x034273FC LDR X0, [X0 + 0x3A0]
	0x03427400 BL 0x1C16CF4
	0x03427404 ADRP X0, 0xCF5000
	0x03427408 LDR X0, [X0 + 0x4D8]
	0x0342740C BL 0x1C16CF4
	0x03427410 ADRP X0, 0xD07000
	0x03427414 LDR X0, [X0 + 0xE18]
	0x03427418 BL 0x1C16CF4
	0x0342741C ADRP X0, 0xD07000
	0x03427420 LDR X0, [X0 + 0x7D0]
	0x03427424 BL 0x1C16CF4
	0x03427428 ADRP X0, 0xD07000
	0x0342742C LDR X0, [X0 + 0x7D8]
	0x03427430 BL 0x1C16CF4
	0x03427434 ADRP X0, 0xCCC000
	0x03427438 LDR X0, [X0 + 0x988]
	0x0342743C BL 0x1C16CF4
	0x03427440 MOVZ W8, 0x1
	0x03427444 STRB W8, [X20 + 0x639]
	0x03427448 STR X31, [X31 + 0x18]
	0x0342744C ADRP X28, 0xCCF000
	0x03427450 LDR W8, [X19]
	0x03427454 LDR X28, [X28 + 0x280]
	0x03427458 CBZ W8, 0x3427638
	0x0342745C LDR X8, [X19 + 0x20]
	0x03427460 CBZ X8, 0x3427750
	0x03427464 LDR X25, [X19 + 0x28]
	0x03427468 CBZ X25, 0x3427798
	0x0342746C LDR X0, [X25 + 0x20]
	0x03427470 CBZ X0, 0x342779C
	0x03427474 ADRP X8, 0xD07000
	0x03427478 ADRP X9, 0xCCC000
	0x0342747C LDR X8, [X8 + 0xE18]
	0x03427480 LDR X9, [X9 + 0x988]
	0x03427484 LDR X21, [X8]
	0x03427488 LDR X20, [X9]
	0x0342748C MOV X1, X31
	0x03427490 BL 0x361B448
	0x03427494 ADRP X8, 0xCD5000
	0x03427498 LDR X8, [X8 + 0x8D8]
	0x0342749C MOV X22, X0
	0x034274A0 LDR X0, [X8]
	0x034274A4 MOVZ W1, 0x1
	0x034274A8 BL 0x1C16D6C
	0x034274AC MOV X1, X0
	0x034274B0 CBZ X1, 0x34277A0
	0x034274B4 LDR W8, [X1 + 0x18]
	0x034274B8 CBZ W8, 0x34277A4
	0x034274BC MOVZ W8, 0x2F
	0x034274C0 STRH W8, [X1 + 0x20]
	0x034274C4 CBZ X22, 0x34277A8
	0x034274C8 MOV X0, X22
	0x034274CC MOV X2, X31
	0x034274D0 BL 0x322BC58
	0x034274D4 MOV X1, X21
	0x034274D8 MOV X2, X31
	0x034274DC BL 0x321B938
	0x034274E0 ADRP X8, 0xCD5000
	0x034274E4 LDR X8, [X8 + 0x3A0]
	0x034274E8 MOV X22, X0
	0x034274EC LDR X23, [X25 + 0x20]
	0x034274F0 LDR X0, [X8]
	0x034274F4 BL 0x1C16F10
	0x034274F8 MOV X21, X0
	0x034274FC MOV X1, X23
	0x03427500 MOV X2, X31
	0x03427504 BL 0x36281F8
	0x03427508 CBZ X21, 0x34277AC
	0x0342750C MOV X0, X21
	0x03427510 MOV X1, X22
	0x03427514 MOV X2, X31
	0x03427518 BL 0x36288CC
	0x0342751C MOV X0, X21
	0x03427520 MOV X1, X20
	0x03427524 MOV X2, X31
	0x03427528 BL 0x3628980
	0x0342752C MOV X0, X21
	0x03427530 MOV X1, X31
	0x03427534 BL 0x3628A38
	0x03427538 ADRP X8, 0xCF5000
	0x0342753C ADRP X9, 0xCCD000
	0x03427540 LDR X8, [X8 + 0x4D8]
	0x03427544 LDR X9, [X9 + 0x6D0]
	0x03427548 MOV X20, X0
	0x0342754C LDR X21, [X8]
	0x03427550 LDR X0, [X9]
	0x03427554 BL 0x1C16F10
	0x03427558 ADRP X8, 0xCCD000
	0x0342755C LDR X8, [X8 + 0x6C0]
	0x03427560 MOV X22, X0
	0x03427564 LDR X1, [X8]
	0x03427568 BL 0x2AA4804
	0x0342756C ADRP X8, 0xD07000
	0x03427570 LDR X8, [X8 + 0x7D8]
	0x03427574 LDR X1, [X19 + 0x30]
	0x03427578 LDR X0, [X8]
	0x0342757C MOV X2, X31
	0x03427580 BL 0x321B938
	0x03427584 CBZ X22, 0x34277B0
	0x03427588 ADRP X8, 0xD07000
	0x0342758C LDR X8, [X8 + 0x7D0]
	0x03427590 ADRP X9, 0xCCD000
	0x03427594 LDR X9, [X9 + 0x810]
	0x03427598 MOV X2, X0
	0x0342759C LDR X1, [X8]
	0x034275A0 LDR X3, [X9]
	0x034275A4 MOV X0, X22
	0x034275A8 BL 0x2AA5098
	0x034275AC LDR X0, [X19 + 0x20]
	0x034275B0 MOV X1, X31
	0x034275B4 BL 0x3483BE4
	0x034275B8 MOV X23, X0
	0x034275BC MOV X0, X31
	0x034275C0 BL 0x3241948
	0x034275C4 CBZ X0, 0x34277B4
	0x034275C8 LDR X8, [X0]
	0x034275CC LDR X9, [X8 + 0x268]
	0x034275D0 LDR X2, [X8 + 0x270]
	0x034275D4 MOV X1, X23
	0x034275D8 BLR X9
	0x034275DC LDR X24, [X25 + 0x10]
	0x034275E0 CBZ X24, 0x34277B8
	0x034275E4 ADRP X10, 0xD07000
	0x034275E8 LDR X10, [X10 + 0x7B8]
	0x034275EC LDR X8, [X24]
	0x034275F0 LDR W26, [X25 + 0x18]
	0x034275F4 LDP X27, X25, [X19 + 0x38]
	0x034275F8 LDR X1, [X10]
	0x034275FC LDRH W9, [X8 + 0x12E]
	0x03427600 MOV X23, X0
	0x03427604 CBZ X9, 0x3427628
	0x03427608 LDR X10, [X8 + 0xB0]
	0x0342760C ADD X10, X10, 0x8
	0x03427610 LDUR X11, [X10 - 0x8]
	0x03427614 CMP X11, X1
	0x03427618 B.EQ 0x3427650
	0x0342761C SUBS X9, X9, 0x1
	0x03427620 ADD X10, X10, 0x10
	0x03427624 B.NE 0x3427610
	0x03427628 MOVZ W2, 0x3
	0x0342762C MOV X0, X24
	0x03427630 BL 0x1C5C788
	0x03427634 B 0x3427660
	0x03427638 LDR X8, [X19 + 0x48]
	0x0342763C MOVN W9, 0x0
	0x03427640 STR X8, [X31 + 0x18]
	0x03427644 STR X31, [X19 + 0x48]
	0x03427648 STR W9, [X19]
	0x0342764C B 0x34276BC
	0x03427650 LDR W9, [X10]
	0x03427654 ADD W9, W9, 0x3
	0x03427658 ADD X8, X8, W9, 0x4, SXTW
	0x0342765C ADD X0, X8, 0x138
	0x03427660 LDP X8, X9, [X0]
	0x03427664 MOV X0, X24
	0x03427668 MOV X1, X21
	0x0342766C MOV X2, X20
	0x03427670 MOV X3, X22
	0x03427674 MOV X4, X23
	0x03427678 MOV W5, W26
	0x0342767C MOV X6, X27
	0x03427680 MOV X7, X25
	0x03427684 STR X9, [X31]
	0x03427688 BLR X8
	0x0342768C CBZ X0, 0x34277BC
	0x03427690 ADRP X8, 0xCCF000
	0x03427694 LDR X8, [X8 + 0x1F8]
	0x03427698 LDR X1, [X8]
	0x0342769C BL 0x269F5D0
	0x034276A0 ADRP X8, 0xCCF000
	0x034276A4 LDR X8, [X8 + 0x1F0]
	0x034276A8 STR X0, [X31 + 0x18]
	0x034276AC LDR X1, [X8]
	0x034276B0 ADD X0, X31, 0x18
	0x034276B4 BL 0x2677430
	0x034276B8 TBZ X0, 0x0, 0x34276F8
	0x034276BC ADRP X8, 0xCCF000
	0x034276C0 LDR X8, [X8 + 0x1E0]
	0x034276C4 ADD X0, X31, 0x18
	0x034276C8 LDR X1, [X8]
	0x034276CC BL 0x2677474
	0x034276D0 MOVN W8, 0x1
	0x034276D4 STR W8, [X19], #0x8
	0x034276D8 LDR X0, [X28]
	0x034276DC LDR W8, [X0 + 0xE0]
	0x034276E0 CBNZ W8, 0x34276E8
	0x034276E4 BL 0x1C16DFC
	0x034276E8 MOV X0, X19
	0x034276EC MOV X1, X31
	0x034276F0 BL 0x32C4864
	0x034276F4 B 0x3427730
	0x034276F8 STR W31, [X19]
	0x034276FC LDR X8, [X31 + 0x18]
	0x03427700 STR X8, [X19 + 0x48]
	0x03427704 LDR X0, [X28]
	0x03427708 LDR W8, [X0 + 0xE0]
	0x0342770C CBNZ W8, 0x3427714
	0x03427710 BL 0x1C16DFC
	0x03427714 ADRP X8, 0xD07000
	0x03427718 LDR X8, [X8 + 0xE10]
	0x0342771C ADD X0, X19, 0x8
	0x03427720 LDR X3, [X8]
	0x03427724 ADD X1, X31, 0x18
	0x03427728 MOV X2, X19
	0x0342772C BL 0x2186750
	0x03427730 LDP X20, X19, [X31 + 0x60]
	0x03427734 LDP X22, X21, [X31 + 0x50]
	0x03427738 LDP X24, X23, [X31 + 0x40]
	0x0342773C LDP X26, X25, [X31 + 0x30]
	0x03427740 LDP X28, X27, [X31 + 0x20]
	0x03427744 LDR X30, [X31 + 0x10]
	0x03427748 ADD X31, X31, 0x70
	0x0342774C RET
	0x03427750 ADRP X0, 0xCD4000
	0x03427754 LDR X0, [X0 + 0x578]
	0x03427758 BL 0x1C16D08
	0x0342775C BL 0x1C16F10
	0x03427760 MOV X20, X0
	0x03427764 ADRP X0, 0xD07000
	0x03427768 LDR X0, [X0 + 0xBC8]
	0x0342776C BL 0x1C16D08
	0x03427770 MOV X1, X0
	0x03427774 MOV X0, X20
	0x03427778 MOV X2, X31
	0x0342777C BL 0x3314A68
	0x03427780 ADRP X0, 0xD07000
	0x03427784 LDR X0, [X0 + 0xE20]
	0x03427788 BL 0x1C16D08
	0x0342778C MOV X1, X0
	0x03427790 MOV X0, X20
	0x03427794 BL 0x1C16DEC
	0x03427798 BL 0x1C16F20
	0x0342779C BL 0x1C16F20
	0x034277A0 BL 0x1C16F20
	0x034277A4 BL 0x1C16F28
	0x034277A8 BL 0x1C16F20
	0x034277AC BL 0x1C16F20
	0x034277B0 BL 0x1C16F20
	0x034277B4 BL 0x1C16F20
	0x034277B8 BL 0x1C16F20
	0x034277BC BL 0x1C16F20
	0x034277C0 B 0x3427820
	0x034277C4 B 0x3427820
	0x034277C8 B 0x3427820
	0x034277CC B 0x3427820
	0x034277D0 B 0x3427820
	0x034277D4 B 0x3427820
	0x034277D8 B 0x3427820
	0x034277DC B 0x3427820
	0x034277E0 B 0x3427820
	0x034277E4 B 0x3427820
	0x034277E8 B 0x3427820
	0x034277EC B 0x3427820
	0x034277F0 B 0x3427820
	0x034277F4 B 0x3427820
	0x034277F8 B 0x3427820
	0x034277FC B 0x3427820
	0x03427800 B 0x3427820
	0x03427804 B 0x3427820
	0x03427808 B 0x3427820
	0x0342780C B 0x3427820
	0x03427810 B 0x3427820
	0x03427814 B 0x3427820
	0x03427818 B 0x3427820
	0x0342781C B 0x3427820
	0x03427820 MOV X20, X0
	0x03427824 CMP W1, 0x1
	0x03427828 B.NE 0x34278B8
	0x0342782C MOV X0, X20
	0x03427830 BL 0x3EB1AD0
	0x03427834 MOV X20, X0
	0x03427838 ADRP X0, 0xCCC000
	0x0342783C LDR X0, [X0 + 0x7D0]
	0x03427840 BL 0x1C16D08
	0x03427844 LDR X8, [X20]
	0x03427848 LDR X1, [X8]
	0x0342784C BL 0x1C17270
	0x03427850 TBZ X0, 0x0, 0x3427890
	0x03427854 LDR X20, [X20]
	0x03427858 BL 0x3EB1AE0
	0x0342785C MOVN W8, 0x1
	0x03427860 STR W8, [X19], #0x8
	0x03427864 ADRP X0, 0xCCF000
	0x03427868 LDR X0, [X0 + 0x280]
	0x0342786C BL 0x1C16D08
	0x03427870 LDR W8, [X0 + 0xE0]
	0x03427874 CBNZ W8, 0x342787C
	0x03427878 BL 0x1C16DFC
	0x0342787C MOV X0, X19
	0x03427880 MOV X1, X20
	0x03427884 MOV X2, X31
	0x03427888 BL 0x32C4908
	0x0342788C B 0x3427730
	0x03427890 MOVZ W0, 0x8
	0x03427894 BL 0x3EB1AF0
	0x03427898 LDR X8, [X20]
	0x0342789C STR X8, [X0]
	0x034278A0 ADRP X1, 0xA8D000
	0x034278A4 ADD X1, X1, 0xE58
	0x034278A8 MOV X2, X31
	0x034278AC BL 0x3EB1B00
	0x034278B0 MOV X20, X0
	0x034278B4 BL 0x3EB1AE0
	0x034278B8 MOV X0, X20
	0x034278BC BL 0x1D2C690
	0x034278C0 BL 0x1990590
	0x034278C4 STR X30, [X31 - 0x30]!
	0x034278C8 STP X22, X21, [X31 + 0x10]
	0x034278CC STP X20, X19, [X31 + 0x20]
	0x034278D0 ADRP X21, 0xFB6000
	0x034278D4 ADRP X22, 0xCCF000
	0x034278D8 LDRB W8, [X21 + 0x63A]
	0x034278DC LDR X22, [X22 + 0x280]
	0x034278E0 MOV X19, X1
	0x034278E4 MOV X20, X0
	0x034278E8 TBNZ X8, 0x0, 0x3427900
	0x034278EC ADRP X0, 0xCCF000
	0x034278F0 LDR X0, [X0 + 0x280]
	0x034278F4 BL 0x1C16CF4
	0x034278F8 MOVZ W8, 0x1
	0x034278FC STRB W8, [X21 + 0x63A]
	0x03427900 LDR X0, [X22]
	0x03427904 LDR W8, [X0 + 0xE0]
	0x03427908 CBNZ W8, 0x3427910
	0x0342790C BL 0x1C16DFC
	0x03427910 ADD X0, X20, 0x8
	0x03427914 MOV X1, X19
	0x03427918 LDP X20, X19, [X31 + 0x20]
	0x0342791C LDP X22, X21, [X31 + 0x10]
	0x03427920 MOV X2, X31
	0x03427924 LDR X30, [X31], #0x30
	0x03427928 B 0x32C477C
	0x0342792C SUB X31, X31, 0x70
	0x03427930 STR X30, [X31 + 0x10]
	0x03427934 STP X28, X27, [X31 + 0x20]
	0x03427938 STP X26, X25, [X31 + 0x30]
	0x0342793C STP X24, X23, [X31 + 0x40]
	0x03427940 STP X22, X21, [X31 + 0x50]
	0x03427944 STP X20, X19, [X31 + 0x60]
	0x03427948 ADRP X20, 0xFB6000
	0x0342794C LDRB W8, [X20 + 0x63B]
	0x03427950 MOV X19, X0
	0x03427954 TBNZ X8, 0x0, 0x3427A20
	0x03427958 ADRP X0, 0xD07000
	0x0342795C LDR X0, [X0 + 0xE28]
	0x03427960 BL 0x1C16CF4
	0x03427964 ADRP X0, 0xCCF000
	0x03427968 LDR X0, [X0 + 0x280]
	0x0342796C BL 0x1C16CF4
	0x03427970 ADRP X0, 0xCD5000
	0x03427974 LDR X0, [X0 + 0x8D8]
	0x03427978 BL 0x1C16CF4
	0x0342797C ADRP X0, 0xCCD000
	0x03427980 LDR X0, [X0 + 0x810]
	0x03427984 BL 0x1C16CF4
	0x03427988 ADRP X0, 0xCCD000
	0x0342798C LDR X0, [X0 + 0x6C0]
	0x03427990 BL 0x1C16CF4
	0x03427994 ADRP X0, 0xCCD000
	0x03427998 LDR X0, [X0 + 0x6D0]
	0x0342799C BL 0x1C16CF4
	0x034279A0 ADRP X0, 0xD07000
	0x034279A4 LDR X0, [X0 + 0x7B8]
	0x034279A8 BL 0x1C16CF4
	0x034279AC ADRP X0, 0xCCF000
	0x034279B0 LDR X0, [X0 + 0x1E0]
	0x034279B4 BL 0x1C16CF4
	0x034279B8 ADRP X0, 0xCCF000
	0x034279BC LDR X0, [X0 + 0x1F0]
	0x034279C0 BL 0x1C16CF4
	0x034279C4 ADRP X0, 0xCCF000
	0x034279C8 LDR X0, [X0 + 0x1F8]
	0x034279CC BL 0x1C16CF4
	0x034279D0 ADRP X0, 0xCD5000
	0x034279D4 LDR X0, [X0 + 0x3A0]
	0x034279D8 BL 0x1C16CF4
	0x034279DC ADRP X0, 0xCF5000
	0x034279E0 LDR X0, [X0 + 0x4D8]
	0x034279E4 BL 0x1C16CF4
	0x034279E8 ADRP X0, 0xD07000
	0x034279EC LDR X0, [X0 + 0xE30]
	0x034279F0 BL 0x1C16CF4
	0x034279F4 ADRP X0, 0xD07000
	0x034279F8 LDR X0, [X0 + 0x7D0]
	0x034279FC BL 0x1C16CF4
	0x03427A00 ADRP X0, 0xD07000
	0x03427A04 LDR X0, [X0 + 0x7D8]
	0x03427A08 BL 0x1C16CF4
	0x03427A0C ADRP X0, 0xCCC000
	0x03427A10 LDR X0, [X0 + 0x988]
	0x03427A14 BL 0x1C16CF4
	0x03427A18 MOVZ W8, 0x1
	0x03427A1C STRB W8, [X20 + 0x63B]
	0x03427A20 STR X31, [X31 + 0x18]
	0x03427A24 ADRP X28, 0xCCF000
	0x03427A28 LDR W8, [X19]
	0x03427A2C LDR X28, [X28 + 0x280]
	0x03427A30 CBZ W8, 0x3427C10
	0x03427A34 LDR X8, [X19 + 0x20]
	0x03427A38 CBZ X8, 0x3427D28
	0x03427A3C LDR X25, [X19 + 0x28]
	0x03427A40 CBZ X25, 0x3427D70
	0x03427A44 LDR X0, [X25 + 0x20]
	0x03427A48 CBZ X0, 0x3427D74
	0x03427A4C ADRP X8, 0xD07000
	0x03427A50 ADRP X9, 0xCCC000
	0x03427A54 LDR X8, [X8 + 0xE30]
	0x03427A58 LDR X9, [X9 + 0x988]
	0x03427A5C LDR X21, [X8]
	0x03427A60 LDR X20, [X9]
	0x03427A64 MOV X1, X31
	0x03427A68 BL 0x361B448
	0x03427A6C ADRP X8, 0xCD5000
	0x03427A70 LDR X8, [X8 + 0x8D8]
	0x03427A74 MOV X22, X0
	0x03427A78 LDR X0, [X8]
	0x03427A7C MOVZ W1, 0x1
	0x03427A80 BL 0x1C16D6C
	0x03427A84 MOV X1, X0
	0x03427A88 CBZ X1, 0x3427D78
	0x03427A8C LDR W8, [X1 + 0x18]
	0x03427A90 CBZ W8, 0x3427D7C
	0x03427A94 MOVZ W8, 0x2F
	0x03427A98 STRH W8, [X1 + 0x20]
	0x03427A9C CBZ X22, 0x3427D80
	0x03427AA0 MOV X0, X22
	0x03427AA4 MOV X2, X31
	0x03427AA8 BL 0x322BC58
	0x03427AAC MOV X1, X21
	0x03427AB0 MOV X2, X31
	0x03427AB4 BL 0x321B938
	0x03427AB8 ADRP X8, 0xCD5000
	0x03427ABC LDR X8, [X8 + 0x3A0]
	0x03427AC0 MOV X22, X0
	0x03427AC4 LDR X23, [X25 + 0x20]
	0x03427AC8 LDR X0, [X8]
	0x03427ACC BL 0x1C16F10
	0x03427AD0 MOV X21, X0
	0x03427AD4 MOV X1, X23
	0x03427AD8 MOV X2, X31
	0x03427ADC BL 0x36281F8
	0x03427AE0 CBZ X21, 0x3427D84
	0x03427AE4 MOV X0, X21
	0x03427AE8 MOV X1, X22
	0x03427AEC MOV X2, X31
	0x03427AF0 BL 0x36288CC
	0x03427AF4 MOV X0, X21
	0x03427AF8 MOV X1, X20
	0x03427AFC MOV X2, X31
	0x03427B00 BL 0x3628980
	0x03427B04 MOV X0, X21
	0x03427B08 MOV X1, X31
	0x03427B0C BL 0x3628A38
	0x03427B10 ADRP X8, 0xCF5000
	0x03427B14 ADRP X9, 0xCCD000
	0x03427B18 LDR X8, [X8 + 0x4D8]
	0x03427B1C LDR X9, [X9 + 0x6D0]
	0x03427B20 MOV X20, X0
	0x03427B24 LDR X21, [X8]
	0x03427B28 LDR X0, [X9]
	0x03427B2C BL 0x1C16F10
	0x03427B30 ADRP X8, 0xCCD000
	0x03427B34 LDR X8, [X8 + 0x6C0]
	0x03427B38 MOV X22, X0
	0x03427B3C LDR X1, [X8]
	0x03427B40 BL 0x2AA4804
	0x03427B44 ADRP X8, 0xD07000
	0x03427B48 LDR X8, [X8 + 0x7D8]
	0x03427B4C LDR X1, [X19 + 0x30]
	0x03427B50 LDR X0, [X8]
	0x03427B54 MOV X2, X31
	0x03427B58 BL 0x321B938
	0x03427B5C CBZ X22, 0x3427D88
	0x03427B60 ADRP X8, 0xD07000
	0x03427B64 LDR X8, [X8 + 0x7D0]
	0x03427B68 ADRP X9, 0xCCD000
	0x03427B6C LDR X9, [X9 + 0x810]
	0x03427B70 MOV X2, X0
	0x03427B74 LDR X1, [X8]
	0x03427B78 LDR X3, [X9]
	0x03427B7C MOV X0, X22
	0x03427B80 BL 0x2AA5098
	0x03427B84 LDR X0, [X19 + 0x20]
	0x03427B88 MOV X1, X31
	0x03427B8C BL 0x3483BE4
	0x03427B90 MOV X23, X0
	0x03427B94 MOV X0, X31
	0x03427B98 BL 0x3241948
	0x03427B9C CBZ X0, 0x3427D8C
	0x03427BA0 LDR X8, [X0]
	0x03427BA4 LDR X9, [X8 + 0x268]
	0x03427BA8 LDR X2, [X8 + 0x270]
	0x03427BAC MOV X1, X23
	0x03427BB0 BLR X9
	0x03427BB4 LDR X24, [X25 + 0x10]
	0x03427BB8 CBZ X24, 0x3427D90
	0x03427BBC ADRP X10, 0xD07000
	0x03427BC0 LDR X10, [X10 + 0x7B8]
	0x03427BC4 LDR X8, [X24]
	0x03427BC8 LDR W26, [X25 + 0x18]
	0x03427BCC LDP X27, X25, [X19 + 0x38]
	0x03427BD0 LDR X1, [X10]
	0x03427BD4 LDRH W9, [X8 + 0x12E]
	0x03427BD8 MOV X23, X0
	0x03427BDC CBZ X9, 0x3427C00
	0x03427BE0 LDR X10, [X8 + 0xB0]
	0x03427BE4 ADD X10, X10, 0x8
	0x03427BE8 LDUR X11, [X10 - 0x8]
	0x03427BEC CMP X11, X1
	0x03427BF0 B.EQ 0x3427C28
	0x03427BF4 SUBS X9, X9, 0x1
	0x03427BF8 ADD X10, X10, 0x10
	0x03427BFC B.NE 0x3427BE8
	0x03427C00 MOVZ W2, 0x3
	0x03427C04 MOV X0, X24
	0x03427C08 BL 0x1C5C788
	0x03427C0C B 0x3427C38
	0x03427C10 LDR X8, [X19 + 0x48]
	0x03427C14 MOVN W9, 0x0
	0x03427C18 STR X8, [X31 + 0x18]
	0x03427C1C STR X31, [X19 + 0x48]
	0x03427C20 STR W9, [X19]
	0x03427C24 B 0x3427C94
	0x03427C28 LDR W9, [X10]
	0x03427C2C ADD W9, W9, 0x3
	0x03427C30 ADD X8, X8, W9, 0x4, SXTW
	0x03427C34 ADD X0, X8, 0x138
	0x03427C38 LDP X8, X9, [X0]
	0x03427C3C MOV X0, X24
	0x03427C40 MOV X1, X21
	0x03427C44 MOV X2, X20
	0x03427C48 MOV X3, X22
	0x03427C4C MOV X4, X23
	0x03427C50 MOV W5, W26
	0x03427C54 MOV X6, X27
	0x03427C58 MOV X7, X25
	0x03427C5C STR X9, [X31]
	0x03427C60 BLR X8
	0x03427C64 CBZ X0, 0x3427D94
	0x03427C68 ADRP X8, 0xCCF000
	0x03427C6C LDR X8, [X8 + 0x1F8]
	0x03427C70 LDR X1, [X8]
	0x03427C74 BL 0x269F5D0
	0x03427C78 ADRP X8, 0xCCF000
	0x03427C7C LDR X8, [X8 + 0x1F0]
	0x03427C80 STR X0, [X31 + 0x18]
	0x03427C84 LDR X1, [X8]
	0x03427C88 ADD X0, X31, 0x18
	0x03427C8C BL 0x2677430
	0x03427C90 TBZ X0, 0x0, 0x3427CD0
	0x03427C94 ADRP X8, 0xCCF000
	0x03427C98 LDR X8, [X8 + 0x1E0]
	0x03427C9C ADD X0, X31, 0x18
	0x03427CA0 LDR X1, [X8]
	0x03427CA4 BL 0x2677474
	0x03427CA8 MOVN W8, 0x1
	0x03427CAC STR W8, [X19], #0x8
	0x03427CB0 LDR X0, [X28]
	0x03427CB4 LDR W8, [X0 + 0xE0]
	0x03427CB8 CBNZ W8, 0x3427CC0
	0x03427CBC BL 0x1C16DFC
	0x03427CC0 MOV X0, X19
	0x03427CC4 MOV X1, X31
	0x03427CC8 BL 0x32C4864
	0x03427CCC B 0x3427D08
	0x03427CD0 STR W31, [X19]
	0x03427CD4 LDR X8, [X31 + 0x18]
	0x03427CD8 STR X8, [X19 + 0x48]
	0x03427CDC LDR X0, [X28]
	0x03427CE0 LDR W8, [X0 + 0xE0]
	0x03427CE4 CBNZ W8, 0x3427CEC
	0x03427CE8 BL 0x1C16DFC
	0x03427CEC ADRP X8, 0xD07000
	0x03427CF0 LDR X8, [X8 + 0xE28]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0xFB7000
	015 Move W8, [X20+1589]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {98}
	021 Move X0, 0xD08000
	022 Move X0, [X0+3552]
	023 Call 0x1C17CF4
	024 Move X0, 0xCD0000
	025 Move X0, [X0+640]
	026 Call 0x1C17CF4
	027 Move X0, 0xCD6000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0xCCE000
	031 Move X0, [X0+2064]
	032 Call 0x1C17CF4
	033 Move X0, 0xCCE000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0xCCE000
	037 Move X0, [X0+1744]
	038 Call 0x1C17CF4
	039 Move X0, 0xCCD000
	040 Move X0, [X0+3584]
	041 Call 0x1C17CF4
	042 Move X0, 0xCCD000
	043 Move X0, [X0+3952]
	044 Call 0x1C17CF4
	045 Move X0, 0xCCD000
	046 Move X0, [X0+3960]
	047 Call 0x1C17CF4
	048 Move X0, 0xCCD000
	049 Move X0, [X0+3608]
	050 Call 0x1C17CF4
	051 Move X0, 0xD08000
	052 Move X0, [X0+1976]
	053 Call 0x1C17CF4
	054 Move X0, 0xCCD000
	055 Move X0, [X0+2760]
	056 Call 0x1C17CF4
	057 Move X0, 0xCD0000
	058 Move X0, [X0+480]
	059 Call 0x1C17CF4
	060 Move X0, 0xCD0000
	061 Move X0, [X0+496]
	062 Call 0x1C17CF4
	063 Move X0, 0xCD0000
	064 Move X0, [X0+504]
	065 Call 0x1C17CF4
	066 Move X0, 0xCD6000
	067 Move X0, [X0+928]
	068 Call 0x1C17CF4
	069 Move X0, 0xCCF000
	070 Move X0, [X0+2600]
	071 Call 0x1C17CF4
	072 Move X0, 0xCF6000
	073 Move X0, [X0+1240]
	074 Call 0x1C17CF4
	075 Move X0, 0xD08000
	076 Move X0, [X0+2032]
	077 Call 0x1C17CF4
	078 Move X0, 0xD08000
	079 Move X0, [X0+2048]
	080 Call 0x1C17CF4
	081 Move X0, 0xCD6000
	082 Move X0, [X0+1824]
	083 Call 0x1C17CF4
	084 Move X0, 0xD08000
	085 Move X0, [X0+2000]
	086 Call 0x1C17CF4
	087 Move X0, 0xD08000
	088 Move X0, [X0+2008]
	089 Call 0x1C17CF4
	090 Move X0, 0xCCD000
	091 Move X0, [X0+2440]
	092 Call 0x1C17CF4
	093 Move X0, 0xD08000
	094 Move X0, [X0+3560]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X20+1589], W8
	098 Move [X31+24], X31
	099 Move X27, 0xCD0000
	100 Move W24, [X19]
	101 Move X27, [X27+640]
	102 Compare W24, 0
	103 JumpIfEqual {161}
	104 Move X21, [X19+32]
	105 Compare X21, 0
	106 JumpIfEqual {473}
	107 Move X26, 0xCCF000
	108 Move X26, [X26+2600]
	109 Move X8, 0xD08000
	110 Move X0, [X26]
	111 Move X8, [X8+3560]
	112 Move X23, [X19+48]
	113 Move W9, [X0+224]
	114 Move X20, [X8]
	115 Compare W9, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X21
	119 Move X1, X31
	120 Call Uri.EscapeDataString, X0
	121 Compare X20, 0
	122 JumpIfEqual {491}
	123 Move X8, 0xD08000
	124 Move X8, [X8+2048]
	125 Move X2, X0
	126 Move X1, [X8]
	127 Move X0, X20
	128 Move X3, X31
	129 Call String.Replace, X0, X1, X2
	130 Move X8, 0xCCD000
	131 Move X8, [X8+2440]
	132 Move X21, [X19+40]
	133 Move X20, X0
	134 Move X28, [X8]
	135 Compare X21, 0
	136 JumpIfNotEqual {145}
	137 Move X8, 0xCCD000
	138 Move X8, [X8+2760]
	139 Move X0, [X8]
	140 Move W1, W31
	141 Call 0x1C17D6C
	142 Move X21, X0
	143 Compare X0, 0
	144 JumpIfEqual {503}
	145 Move X10, 0xCCD000
	146 Move X8, [X21]
	147 Move X10, [X10+3952]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Move X1, [X10]
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X21
	159 Move W2, W31
	160 Call 0x1C5D788
	161 Move X8, [X19+80]
	162 Move TEMP, 0
	163 Not TEMP
	164 Move W9, TEMP
	165 Move [X31+24], X8
	166 Move [X19+80], X31
	167 Move [X19], W9
	168 NotImplemented "Instruction LDRSW not yet implemented."
	169 Add X8, X8, X9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X1, [X0+8]
	173 Move X0, X21
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move [X31+8], X20
	176 Move [X31+16], X23
	177 Move X29, 0xCCD000
	178 Move X27, 0xCCD000
	179 Move X20, 0xD08000
	180 Move X25, 0xCD6000
	181 Move X29, [X29+3608]
	182 Move X27, [X27+3960]
	183 Move X20, [X20+2032]
	184 Move X25, [X25+1824]
	185 Move X22, X0
	186 Move X0, X28
	187 Compare X22, 0
	188 JumpIfEqual {472}
	189 Move X8, [X22]
	190 Move X1, [X29]
	191 Move X21, X0
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move X0, X22
	202 Move W2, W31
	203 Call 0x1C5D788
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Add X8, X8, X9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X22
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {251}
	215 Move X8, [X22]
	216 Move X1, [X27]
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move X0, X22
	227 Move W2, W31
	228 Call 0x1C5D788
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Add X8, X8, X9
	231 Add X0, X8, 312
	232 Move X8, [X0]
	233 Move X1, [X0+8]
	234 Move X0, X22
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X23, X0
	237 Move X0, [X26]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Move X0, X23
	243 Move X1, X31
	244 Call Uri.EscapeDataString, X0
	245 Move X1, [X20]
	246 Move X3, [X25]
	247 Move X2, X0
	248 Move X0, X21
	249 Move X4, X31
	250 Call String.Concat, X0, X1, X2, X3
	251 Move X23, X31
	252 Move W20, 9
	253 Move X27, 0xCD0000
	254 Move X27, [X27+640]
	255 Move X25, [X31+16]
	256 Move TEMP, X24
	257 And TEMP, TEMP, -2147483648
	258 Compare TEMP, -2147483648
	259 JumpIfNotEqual {285}
	260 Compare X22, 0
	261 JumpIfEqual {285}
	262 Move X10, 0xCCD000
	263 Move X8, [X22]
	264 Move X10, [X10+3584]
	265 NotImplemented "Instruction LDRH not yet implemented."
	266 Move X1, [X10]
	267 Compare X9, 0
	268 JumpIfEqual {275}
	269 Move X10, [X8+176]
	270 Add X10, X10, 8
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract X9, X9, 1
	274 Add X10, X10, 16
	275 Move X0, X22
	276 Move W2, W31
	277 Call 0x1C5D788
	278 NotImplemented "Instruction LDRSW not yet implemented."
	279 Add X8, X8, X9
	280 Add X0, X8, 312
	281 Move X8, [X0]
	282 Move X1, [X0+8]
	283 Move X0, X22
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Compare X23, 0
	286 JumpIfNotEqual {492}
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Compare W20, 0
	289 JumpIfNotEqual {458}
	290 Compare X25, 0
	291 JumpIfEqual {494}
	292 Move X0, [X25+32]
	293 Compare X0, 0
	294 JumpIfEqual {495}
	295 Move X1, X31
	296 Call Uri.get_AbsolutePath, X0
	297 Move X8, 0xCD6000
	298 Move X8, [X8+2264]
	299 Move X22, X0
	300 Move X0, [X8]
	301 Move W1, 1
	302 Call 0x1C17D6C
	303 Move X1, X0
	304 Compare X1, 0
	305 JumpIfEqual {496}
	306 Move W8, [X1+24]
	307 Compare W8, 0
	308 JumpIfEqual {497}
	309 Move W8, 47
	310 NotImplemented "Instruction STRH not yet implemented."
	311 Compare X22, 0
	312 JumpIfEqual {498}
	313 Move X0, X22
	314 Move X2, X31
	315 Call String.TrimEnd, X0, X1
	316 Move X1, [X31+8]
	317 Move X2, X31
	318 Call String.Concat, X0, X1
	319 Move X8, 0xCD6000
	320 Move X23, [X25+32]
	321 Move X8, [X8+928]
	322 Move X22, X0
	323 Move X0, [X8]
	324 Call 0x1C17F10
	325 Move X20, X0
	326 Move X1, X23
	327 Move X2, X31
	328 Call UriBuilder..ctor, X0, X1
	329 Compare X20, 0
	330 JumpIfEqual {499}
	331 Move X0, X20
	332 Move X1, X22
	333 Move X2, X31
	334 Call UriBuilder.set_Path, X0, X1
	335 Move X0, X20
	336 Move X1, X21
	337 Move X2, X31
	338 Call UriBuilder.set_Query, X0, X1
	339 Move X0, X20
	340 Move X1, X31
	341 Call UriBuilder.get_Uri, X0
	342 Move X8, 0xCF6000
	343 Move X9, 0xCCE000
	344 Move X8, [X8+1240]
	345 Move X9, [X9+1744]
	346 Move X20, X0
	347 Move X21, [X8]
	348 Move X0, [X9]
	349 Call 0x1C17F10
	350 Move X8, 0xCCE000
	351 Move X8, [X8+1728]
	352 Move X22, X0
	353 Move X1, [X8]
	354 Call Dictionary`2<Object, Object>..ctor, X0
	355 Move X8, 0xD08000
	356 Move X1, [X19+56]
	357 Move X8, [X8+2008]
	358 Move X0, [X8]
	359 Move X2, X31
	360 Call String.Concat, X0, X1
	361 Compare X22, 0
	362 JumpIfEqual {500}
	363 Move X8, 0xD08000
	364 Move X8, [X8+2000]
	365 Move X9, 0xCCE000
	366 Move X9, [X9+2064]
	367 Move X2, X0
	368 Move X1, [X8]
	369 Move X3, [X9]
	370 Move X0, X22
	371 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	372 Move X24, [X25+16]
	373 Compare X24, 0
	374 JumpIfEqual {501}
	375 Move X10, 0xD08000
	376 Move W23, [X25+24]
	377 Move X8, [X24]
	378 Move X26, [X19+64]
	379 Move X25, [X19+72]
	380 Move X10, [X10+1976]
	381 NotImplemented "Instruction LDRH not yet implemented."
	382 Move X1, [X10]
	383 Compare X9, 0
	384 JumpIfEqual {391}
	385 Move X10, [X8+176]
	386 Add X10, X10, 8
	387 NotImplemented "Instruction LDUR not yet implemented."
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Subtract X9, X9, 1
	390 Add X10, X10, 16
	391 Move W2, 3
	392 Move X0, X24
	393 Call 0x1C5D788
	394 Move W9, [X10]
	395 Add W9, W9, 3
	396 Add X8, X8, W9
	397 Add X0, X8, 312
	398 Move X8, [X0]
	399 Move X9, [X0+8]
	400 Move X0, X24
	401 Move X1, X21
	402 Move X2, X20
	403 Move X3, X22
	404 Move X4, X31
	405 Move W5, W23
	406 Move X6, X26
	407 Move X7, X25
	408 Move [X31], X9
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Compare X0, 0
	411 JumpIfEqual {502}
	412 Move X8, 0xCD0000
	413 Move X8, [X8+504]
	414 Move X1, [X8]
	415 Call Task`1<Object>.GetAwaiter, X0
	416 Move X8, 0xCD0000
	417 Move X8, [X8+496]
	418 Move [X31+24], X0
	419 Move X1, [X8]
	420 Add X0, X31, 24
	421 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	422 Move TEMP, X0
	423 And TEMP, TEMP, 1
	424 Compare TEMP, 1
	425 JumpIfNotEqual {443}
	426 Move X8, 0xCD0000
	427 Move X8, [X8+480]
	428 Add X0, X31, 24
	429 Move X1, [X8]
	430 Call TaskAwaiter`1<Object>.GetResult, X0
	431 Move TEMP, 1
	432 Not TEMP
	433 Move W8, TEMP
	434 Move [X19+8], W8
	435 Move X0, [X27]
	436 Move W8, [X0+224]
	437 Compare W8, 0
	438 JumpIfNotEqual {440}
	439 Call 0x1C17DFC
	440 Move X0, X19
	441 Move X1, X31
	442 Call AsyncTaskMethodBuilder.SetResult, X0
	443 Move [X19], W31
	444 Move X8, [X31+24]
	445 Move [X19+80], X8
	446 Move X0, [X27]
	447 Move W8, [X0+224]
	448 Compare W8, 0
	449 JumpIfNotEqual {451}
	450 Call 0x1C17DFC
	451 Move X8, 0xD08000
	452 Move X8, [X8+3552]
	453 Add X0, X19, 8
	454 Move X3, [X8]
	455 Add X1, X31, 24
	456 Move X2, X19
	457 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	458 Move X20, [X31+112]
	459 Move X19, [X31+120]
	460 Move X22, [X31+96]
	461 Move X21, [X31+104]
	462 Move X24, [X31+80]
	463 Move X23, [X31+88]
	464 Move X26, [X31+64]
	465 Move X25, [X31+72]
	466 Move X28, [X31+48]
	467 Move X27, [X31+56]
	468 Move X29, [X31+32]
	469 Move X30, [X31+40]
	470 Add X31, X31, 128
	471 Return 
	472 Call 0x1C17F20
	473 Move X0, 0xCD5000
	474 Move X0, [X0+1400]
	475 Call 0x1C17D08
	476 Call 0x1C17F10
	477 Move X20, X0
	478 Move X0, 0xD08000
	479 Move X0, [X0+2056]
	480 Call 0x1C17D08
	481 Move X1, X0
	482 Move X0, X20
	483 Move X2, X31
	484 Call ArgumentException..ctor, X0, X1
	485 Move X0, 0xD08000
	486 Move X0, [X0+3568]
	487 Call 0x1C17D08
	488 Move X1, X0
	489 Move X0, X20
	490 Call 0x1C17DEC
	491 Call 0x1C17F20
	492 Move X0, X23
	493 Call 0x1C17F18
	494 Call 0x1C17F20
	495 Call 0x1C17F20
	496 Call 0x1C17F20
	497 Call 0x1C17F28
	498 Call 0x1C17F20
	499 Call 0x1C17F20
	500 Call 0x1C17F20
	501 Call 0x1C17F20
	502 Call 0x1C17F20
	503 Call 0x1C17F20
	504 Move X20, X1
	505 Move X21, X0
	506 Move X21, X28
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Call 0x3EB2AD0
	509 Move X23, [X0]
	510 Call 0x3EB2AE0
	511 Move W20, W31
	512 Move X21, X0
	513 Move X20, X1
	514 Move X23, X31
	515 Move TEMP, X24
	516 And TEMP, TEMP, -2147483648
	517 Compare TEMP, -2147483648
	518 JumpIfNotEqual {544}
	519 Compare X22, 0
	520 JumpIfEqual {544}
	521 Move X10, 0xCCD000
	522 Move X8, [X22]
	523 Move X10, [X10+3584]
	524 NotImplemented "Instruction LDRH not yet implemented."
	525 Move X1, [X10]
	526 Compare X9, 0
	527 JumpIfEqual {534}
	528 Move X10, [X8+176]
	529 Add X10, X10, 8
	530 NotImplemented "Instruction LDUR not yet implemented."
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Subtract X9, X9, 1
	533 Add X10, X10, 16
	534 Move X0, X22
	535 Move W2, W31
	536 Call 0x1C5D788
	537 NotImplemented "Instruction LDRSW not yet implemented."
	538 Add X8, X8, X9
	539 Add X0, X8, 312
	540 Move X8, [X0]
	541 Move X1, [X0+8]
	542 Move X0, X22
	543 NotImplemented "Instruction BLR not yet implemented."
	544 Compare X23, 0
	545 JumpIfNotEqual {585}
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Move X0, X21
	548 Call 0x3EB2AD0
	549 Move X20, X0
	550 Move X0, 0xCCD000
	551 Move X0, [X0+2000]
	552 Call 0x1C17D08
	553 Move X8, [X20]
	554 Move X1, [X8]
	555 Call 0x1C18270
	556 Move TEMP, X0
	557 And TEMP, TEMP, 1
	558 Compare TEMP, 1
	559 JumpIfNotEqual {577}
	560 Move X20, [X20]
	561 Call 0x3EB2AE0
	562 Move TEMP, 1
	563 Not TEMP
	564 Move W8, TEMP
	565 Move [X19+8], W8
	566 Move X0, 0xCD0000
	567 Move X0, [X0+640]
	568 Call 0x1C17D08
	569 Move W8, [X0+224]
	570 Compare W8, 0
	571 JumpIfNotEqual {573}
	572 Call 0x1C17DFC
	573 Move X0, X19
	574 Move X1, X20
	575 Move X2, X31
	576 Call AsyncTaskMethodBuilder.SetException, X0, X1
	577 Move W0, 8
	578 Call 0x3EB2AF0
	579 Move X8, [X20]
	580 Move [X0], X8
	581 Move X1, 0xA8E000
	582 Add X1, X1, 3672
	583 Move X2, X31
	584 Call 0x3EB2B00
	585 Move X0, X23
	586 Call 0x1C17F18
	587 Move X20, X1
	588 Move X21, X0
	589 Move TEMP, X24
	590 And TEMP, TEMP, -2147483648
	591 Compare TEMP, -2147483648
	592 JumpIfEqual {519}
	593 Move X21, X0
	594 Call 0x3EB2AE0
	595 Move X0, X21
	596 Call 0x1D2D690
	597 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03427CF4 ADD X0, X19, 0x8
	0x03427CF8 LDR X3, [X8]
	0x03427CFC ADD X1, X31, 0x18
	0x03427D00 MOV X2, X19
	0x03427D04 BL 0x21867CC
	0x03427D08 LDP X20, X19, [X31 + 0x60]
	0x03427D0C LDP X22, X21, [X31 + 0x50]
	0x03427D10 LDP X24, X23, [X31 + 0x40]
	0x03427D14 LDP X26, X25, [X31 + 0x30]
	0x03427D18 LDP X28, X27, [X31 + 0x20]
	0x03427D1C LDR X30, [X31 + 0x10]
	0x03427D20 ADD X31, X31, 0x70
	0x03427D24 RET
	0x03427D28 ADRP X0, 0xCD4000
	0x03427D2C LDR X0, [X0 + 0x578]
	0x03427D30 BL 0x1C16D08
	0x03427D34 BL 0x1C16F10
	0x03427D38 MOV X20, X0
	0x03427D3C ADRP X0, 0xD07000
	0x03427D40 LDR X0, [X0 + 0xBC8]
	0x03427D44 BL 0x1C16D08
	0x03427D48 MOV X1, X0
	0x03427D4C MOV X0, X20
	0x03427D50 MOV X2, X31
	0x03427D54 BL 0x3314A68
	0x03427D58 ADRP X0, 0xD07000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB7000
	007 Move X22, 0xCD0000
	008 Move W8, [X21+1590]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD0000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1590], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

