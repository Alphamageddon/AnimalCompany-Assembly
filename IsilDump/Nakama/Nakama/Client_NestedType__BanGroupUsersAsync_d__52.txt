Type: Nakama.Client/<BanGroupUsersAsync>d__52

Method: System.Void MoveNext()

Disassembly:
	0x034509D8 MOV X0, X21
	0x034509DC BL 0x1C5C788
	0x034509E0 B 0x34509F4
	0x034509E4 LDR W9, [X10]
	0x034509E8 ADD W9, W9, 0xB
	0x034509EC ADD X8, X8, W9, 0x4, SXTW
	0x034509F0 ADD X0, X8, 0x138
	0x034509F4 LDP X8, X2, [X0]
	0x034509F8 MOV X0, X21
	0x034509FC MOV X1, X22
	0x03450A00 BLR X8
	0x03450A04 TBZ X0, 0x0, 0x3450A98
	0x03450A08 LDR X8, [X19 + 0x68]
	0x03450A0C CBZ X8, 0x3450C4C
	0x03450A10 LDR X1, [X8 + 0x18]
	0x03450A14 LDR X3, [X19 + 0x60]
	0x03450A18 LDR X4, [X8 + 0x48]
	0x03450A1C MOV X0, X20
	0x03450A20 MOV X2, X31
	0x03450A24 MOV X5, X31
	0x03450A28 BL 0x34440A8
	0x03450A2C CBZ X0, 0x3450C50
	0x03450A30 ADRP X8, 0xCA4000
	0x03450A34 LDR X8, [X8 + 0x840]
	0x03450A38 LDR X1, [X8]
	0x03450A3C BL 0x269F5D0
	0x03450A40 ADRP X8, 0xCA4000
	0x03450A44 LDR X8, [X8 + 0x838]
	0x03450A48 STR X0, [X31 + 0x20]
	0x03450A4C LDR X1, [X8]
	0x03450A50 ADD X0, X31, 0x20
	0x03450A54 BL 0x2677430
	0x03450A58 TBNZ X0, 0x0, 0x3450838
	0x03450A5C STR W31, [X19]
	0x03450A60 LDR X8, [X31 + 0x20]
	0x03450A64 STR X8, [X19 + 0x70]
	0x03450A68 LDR X0, [X25]
	0x03450A6C LDR W8, [X0 + 0xE0]
	0x03450A70 CBNZ W8, 0x3450A78
	0x03450A74 BL 0x1C16DFC
	0x03450A78 ADRP X8, 0xCDF000
	0x03450A7C LDR X8, [X8 + 0xBA0]
	0x03450A80 ADD X0, X19, 0x8
	0x03450A84 LDR X3, [X8]
	0x03450A88 ADD X1, X31, 0x20
	0x03450A8C MOV X2, X19
	0x03450A90 BL 0x1FBA9E8
	0x03450A94 B 0x3450C0C
	0x03450A98 CBZ X20, 0x3450C30
	0x03450A9C ADRP X8, 0xCDF000
	0x03450AA0 LDR X8, [X8 + 0xBA8]
	0x03450AA4 LDR X21, [X20 + 0x58]
	0x03450AA8 LDR X23, [X19 + 0x68]
	0x03450AAC LDR X0, [X8]
	0x03450AB0 BL 0x1C16F10
	0x03450AB4 ADRP X8, 0xCDF000
	0x03450AB8 LDR X8, [X8 + 0xBD0]
	0x03450ABC MOV X22, X0
	0x03450AC0 LDR X2, [X8]
	0x03450AC4 MOV X1, X23
	0x03450AC8 MOV X3, X31
	0x03450ACC BL 0x2D27AA8
	0x03450AD0 LDR X8, [X19 + 0x68]
	0x03450AD4 CBZ X8, 0x3450C24
	0x03450AD8 ADRP X9, 0xCDF000
	0x03450ADC LDR X23, [X19 + 0x60]
	0x03450AE0 LDR X9, [X9 + 0x7C8]
	0x03450AE4 CBNZ X23, 0x3450AEC
	0x03450AE8 LDR X23, [X20 + 0x18]
	0x03450AEC LDR X20, [X8 + 0x18]
	0x03450AF0 LDR X1, [X8 + 0x48]
	0x03450AF4 LDR X2, [X9]
	0x03450AF8 STP X31, X31, [X31 + 0x8]
	0x03450AFC ADD X0, X31, 0x8
	0x03450B00 BL 0x242E368
	0x03450B04 ADRP X8, 0xCDF000
	0x03450B08 LDR X8, [X8 + 0x7D0]
	0x03450B0C LDR X0, [X8]
	0x03450B10 BL 0x1C16F10
	0x03450B14 LDP X3, X4, [X31 + 0x8]
	0x03450B18 MOV X24, X0
	0x03450B1C MOV X1, X20
	0x03450B20 MOV X2, X23
	0x03450B24 MOV X5, X31
	0x03450B28 BL 0x3465404
	0x03450B2C CBZ X21, 0x3450C28
	0x03450B30 ADRP X8, 0xCDF000
	0x03450B34 LDR X8, [X8 + 0xBB0]
	0x03450B38 LDR X3, [X8]
	0x03450B3C MOV X0, X21
	0x03450B40 MOV X1, X22
	0x03450B44 MOV X2, X24
	0x03450B48 BL 0x2243230
	0x03450B4C CBZ X0, 0x3450C2C
	0x03450B50 ADRP X8, 0xCDF000
	0x03450B54 LDR X8, [X8 + 0xBC8]
	0x03450B58 LDR X1, [X8]
	0x03450B5C BL 0x269F5D0
	0x03450B60 ADRP X8, 0xCDF000
	0x03450B64 LDR X8, [X8 + 0xBC0]
	0x03450B68 STR X0, [X31 + 0x18]
	0x03450B6C LDR X1, [X8]
	0x03450B70 ADD X0, X31, 0x18
	0x03450B74 BL 0x2677430
	0x03450B78 TBZ X0, 0x0, 0x3450BD0
	0x03450B7C ADRP X8, 0xCDF000
	0x03450B80 LDR X8, [X8 + 0xBB8]
	0x03450B84 ADD X0, X31, 0x18
	0x03450B88 LDR X1, [X8]
	0x03450B8C BL 0x2677474
	0x03450B90 MOVN W8, 0x1
	0x03450B94 STR W8, [X19]
	0x03450B98 STR X31, [X19 + 0x68]
	0x03450B9C MOV X20, X0
	0x03450BA0 LDR X0, [X25]
	0x03450BA4 ADRP X21, 0xCDE000
	0x03450BA8 ADD X19, X19, 0x8
	0x03450BAC LDR W8, [X0 + 0xE0]
	0x03450BB0 LDR X21, [X21 + 0xBB0]
	0x03450BB4 CBNZ W8, 0x3450BBC
	0x03450BB8 BL 0x1C16DFC
	0x03450BBC LDR X2, [X21]
	0x03450BC0 MOV X0, X19
	0x03450BC4 MOV X1, X20
	0x03450BC8 BL 0x26322B0
	0x03450BCC B 0x3450C0C
	0x03450BD0 MOVZ W8, 0x1
	0x03450BD4 STR W8, [X19]
	0x03450BD8 LDR X8, [X31 + 0x18]
	0x03450BDC STR X8, [X19 + 0x78]
	0x03450BE0 LDR X0, [X25]
	0x03450BE4 LDR W8, [X0 + 0xE0]
	0x03450BE8 CBNZ W8, 0x3450BF0
	0x03450BEC BL 0x1C16DFC
	0x03450BF0 ADRP X8, 0xCDF000
	0x03450BF4 LDR X8, [X8 + 0xB98]
	0x03450BF8 ADD X0, X19, 0x8
	0x03450BFC LDR X3, [X8]
	0x03450C00 ADD X1, X31, 0x18
	0x03450C04 MOV X2, X19
	0x03450C08 BL 0x1FBA9E8
	0x03450C0C LDP X20, X19, [X31 + 0x60]
	0x03450C10 LDP X22, X21, [X31 + 0x50]
	0x03450C14 LDP X24, X23, [X31 + 0x40]
	0x03450C18 LDP X30, X25, [X31 + 0x30]
	0x03450C1C ADD X31, X31, 0x70
	0x03450C20 RET
	0x03450C24 BL 0x1C16F20
	0x03450C28 BL 0x1C16F20
	0x03450C2C BL 0x1C16F20
	0x03450C30 BL 0x1C16F20
	0x03450C34 BL 0x1C16F20
	0x03450C38 BL 0x1C16F20
	0x03450C3C BL 0x1C16F20
	0x03450C40 BL 0x1C16F20
	0x03450C44 BL 0x1C16F20
	0x03450C48 BL 0x1C16F20
	0x03450C4C BL 0x1C16F20
	0x03450C50 BL 0x1C16F20
	0x03450C54 B 0x3450CC8
	0x03450C58 B 0x3450CC8
	0x03450C5C B 0x3450CC8
	0x03450C60 B 0x3450CC8
	0x03450C64 B 0x3450CC8
	0x03450C68 B 0x3450CC8
	0x03450C6C B 0x3450CC8
	0x03450C70 B 0x3450CC8
	0x03450C74 B 0x3450CC8
	0x03450C78 B 0x3450CC8
	0x03450C7C B 0x3450CC8
	0x03450C80 B 0x3450CC8
	0x03450C84 B 0x3450CC8
	0x03450C88 B 0x3450CC8
	0x03450C8C B 0x3450CC8
	0x03450C90 B 0x3450CC8
	0x03450C94 B 0x3450CC8
	0x03450C98 B 0x3450CC8
	0x03450C9C B 0x3450CC8
	0x03450CA0 B 0x3450CC8
	0x03450CA4 B 0x3450CC8
	0x03450CA8 B 0x3450CC8
	0x03450CAC B 0x3450CC8
	0x03450CB0 B 0x3450CC8
	0x03450CB4 B 0x3450CC8
	0x03450CB8 B 0x3450CC8
	0x03450CBC B 0x3450CC8
	0x03450CC0 B 0x3450CC8
	0x03450CC4 B 0x3450CC8
	0x03450CC8 MOV X20, X0
	0x03450CCC CMP W1, 0x1
	0x03450CD0 B.NE 0x3450D70
	0x03450CD4 MOV X0, X20
	0x03450CD8 BL 0x3EB1AD0
	0x03450CDC MOV X20, X0
	0x03450CE0 ADRP X0, 0xCA3000
	0x03450CE4 LDR X0, [X0 + 0x7D0]
	0x03450CE8 BL 0x1C16D08
	0x03450CEC LDR X8, [X20]
	0x03450CF0 LDR X1, [X8]
	0x03450CF4 BL 0x1C17270
	0x03450CF8 TBZ X0, 0x0, 0x3450D48
	0x03450CFC LDR X20, [X20]
	0x03450D00 BL 0x3EB1AE0
	0x03450D04 MOVN W8, 0x1
	0x03450D08 STR X31, [X19 + 0x68]
	0x03450D0C STR W8, [X19], #0x8
	0x03450D10 ADRP X0, 0xCDE000
	0x03450D14 LDR X0, [X0 + 0x4A8]
	0x03450D18 BL 0x1C16D08
	0x03450D1C LDR W8, [X0 + 0xE0]
	0x03450D20 CBNZ W8, 0x3450D28
	0x03450D24 BL 0x1C16DFC
	0x03450D28 ADRP X0, 0xCDE000
	0x03450D2C LDR X0, [X0 + 0xBD8]
	0x03450D30 BL 0x1C16D08
	0x03450D34 MOV X2, X0
	0x03450D38 MOV X0, X19
	0x03450D3C MOV X1, X20
	0x03450D40 BL 0x26324C8
	0x03450D44 B 0x3450C0C
	0x03450D48 MOVZ W0, 0x8
	0x03450D4C BL 0x3EB1AF0
	0x03450D50 LDR X8, [X20]
	0x03450D54 STR X8, [X0]
	0x03450D58 ADRP X1, 0xA64000
	0x03450D5C ADD X1, X1, 0xE58
	0x03450D60 MOV X2, X31
	0x03450D64 BL 0x3EB1B00
	0x03450D68 MOV X20, X0
	0x03450D6C BL 0x3EB1AE0
	0x03450D70 MOV X0, X20
	0x03450D74 BL 0x1D2C690
	0x03450D78 BL 0x1990590
	0x03450D7C STR X30, [X31 - 0x30]!
	0x03450D80 STP X22, X21, [X31 + 0x10]
	0x03450D84 STP X20, X19, [X31 + 0x20]
	0x03450D88 ADRP X22, 0xF8D000
	0x03450D8C ADRP X21, 0xCDE000
	0x03450D90 LDRB W8, [X22 + 0x76C]
	0x03450D94 LDR X21, [X21 + 0x4A8]
	0x03450D98 MOV X19, X1
	0x03450D9C MOV X20, X0
	0x03450DA0 TBNZ X8, 0x0, 0x3450DC4
	0x03450DA4 ADRP X0, 0xCDE000
	0x03450DA8 LDR X0, [X0 + 0xBE0]
	0x03450DAC BL 0x1C16CF4
	0x03450DB0 ADRP X0, 0xCDE000
	0x03450DB4 LDR X0, [X0 + 0x4A8]
	0x03450DB8 BL 0x1C16CF4
	0x03450DBC MOVZ W8, 0x1
	0x03450DC0 STRB W8, [X22 + 0x76C]
	0x03450DC4 LDR X0, [X21]
	0x03450DC8 ADRP X21, 0xCDE000
	0x03450DCC LDR W8, [X0 + 0xE0]
	0x03450DD0 LDR X21, [X21 + 0xBE0]
	0x03450DD4 CBNZ W8, 0x3450DDC
	0x03450DD8 BL 0x1C16DFC
	0x03450DDC LDR X2, [X21]
	0x03450DE0 ADD X0, X20, 0x8
	0x03450DE4 MOV X1, X19
	0x03450DE8 LDP X20, X19, [X31 + 0x20]
	0x03450DEC LDP X22, X21, [X31 + 0x10]
	0x03450DF0 LDR X30, [X31], #0x30
	0x03450DF4 B 0x2632228
	0x03450DF8 SUB X31, X31, 0x70
	0x03450DFC STP X30, X25, [X31 + 0x30]
	0x03450E00 STP X24, X23, [X31 + 0x40]
	0x03450E04 STP X22, X21, [X31 + 0x50]
	0x03450E08 STP X20, X19, [X31 + 0x60]
	0x03450E0C ADRP X20, 0xF8D000
	0x03450E10 LDRB W8, [X20 + 0x76D]
	0x03450E14 MOV X19, X0
	0x03450E18 TBNZ X8, 0x0, 0x3450ECC
	0x03450E1C ADRP X0, 0xCDF000
	0x03450E20 LDR X0, [X0 + 0xBE0]
	0x03450E24 BL 0x1C16CF4
	0x03450E28 ADRP X0, 0xCDF000
	0x03450E2C LDR X0, [X0 + 0xBE8]
	0x03450E30 BL 0x1C16CF4
	0x03450E34 ADRP X0, 0xCA6000
	0x03450E38 LDR X0, [X0 + 0x280]
	0x03450E3C BL 0x1C16CF4
	0x03450E40 ADRP X0, 0xCA5000
	0x03450E44 LDR X0, [X0 + 0xA10]
	0x03450E48 BL 0x1C16CF4
	0x03450E4C ADRP X0, 0xCA4000
	0x03450E50 LDR X0, [X0 + 0x9F0]
	0x03450E54 BL 0x1C16CF4
	0x03450E58 ADRP X0, 0xCAB000
	0x03450E5C LDR X0, [X0 + 0x818]
	0x03450E60 BL 0x1C16CF4
	0x03450E64 ADRP X0, 0xCA4000
	0x03450E68 LDR X0, [X0 + 0x818]
	0x03450E6C BL 0x1C16CF4
	0x03450E70 ADRP X0, 0xCDF000
	0x03450E74 LDR X0, [X0 + 0x7C8]
	0x03450E78 BL 0x1C16CF4
	0x03450E7C ADRP X0, 0xCDF000
	0x03450E80 LDR X0, [X0 + 0x7D0]
	0x03450E84 BL 0x1C16CF4
	0x03450E88 ADRP X0, 0xCA4000
	0x03450E8C LDR X0, [X0 + 0x830]
	0x03450E90 BL 0x1C16CF4
	0x03450E94 ADRP X0, 0xCA4000
	0x03450E98 LDR X0, [X0 + 0x838]
	0x03450E9C BL 0x1C16CF4
	0x03450EA0 ADRP X0, 0xCA4000
	0x03450EA4 LDR X0, [X0 + 0x840]
	0x03450EA8 BL 0x1C16CF4
	0x03450EAC ADRP X0, 0xCDF000
	0x03450EB0 LDR X0, [X0 + 0xBF0]
	0x03450EB4 BL 0x1C16CF4
	0x03450EB8 ADRP X0, 0xCDF000
	0x03450EBC LDR X0, [X0 + 0xBF8]
	0x03450EC0 BL 0x1C16CF4
	0x03450EC4 MOVZ W8, 0x1
	0x03450EC8 STRB W8, [X20 + 0x76D]
	0x03450ECC STP X31, X31, [X31 + 0x20]
	0x03450ED0 STR X31, [X31 + 0x18]
	0x03450ED4 ADRP X25, 0xCA6000
	0x03450ED8 LDR W8, [X19]
	0x03450EDC LDR X20, [X19 + 0x20]
	0x03450EE0 LDR X25, [X25 + 0x280]
	0x03450EE4 CBZ W8, 0x3450F08
	0x03450EE8 CMP W8, 0x1
	0x03450EEC B.NE 0x3450F34
	0x03450EF0 LDR X8, [X19 + 0x50]
	0x03450EF4 MOVN W9, 0x0
	0x03450EF8 STR X8, [X31 + 0x18]
	0x03450EFC STR X31, [X19 + 0x50]
	0x03450F00 STR W9, [X19]
	0x03450F04 B 0x3451220
	0x03450F08 LDR X8, [X19 + 0x48]
	0x03450F0C MOVN W9, 0x0
	0x03450F10 STR X8, [X31 + 0x20]
	0x03450F14 STR X31, [X19 + 0x48]
	0x03450F18 STR W9, [X19]
	0x03450F1C ADRP X8, 0xCA4000
	0x03450F20 LDR X8, [X8 + 0x830]
	0x03450F24 ADD X0, X31, 0x20
	0x03450F28 LDR X1, [X8]
	0x03450F2C BL 0x2677474
	0x03450F30 B 0x3451158
	0x03450F34 ADRP X8, 0xCDF000
	0x03450F38 LDR X8, [X8 + 0xBF8]
	0x03450F3C LDR X0, [X8]
	0x03450F40 BL 0x1C16F10
	0x03450F44 MOV X21, X0
	0x03450F48 MOV X1, X31
	0x03450F4C BL 0x34488D8
	0x03450F50 STR X21, [X19 + 0x40]
	0x03450F54 CBZ X21, 0x34512C0
	0x03450F58 LDR X8, [X19 + 0x20]
	0x03450F5C STR X8, [X21 + 0x10]
	0x03450F60 LDR X8, [X19 + 0x28]
	0x03450F64 STR X8, [X21 + 0x18]
	0x03450F68 LDR X8, [X19 + 0x30]
	0x03450F6C STR X8, [X21 + 0x20]
	0x03450F70 CBZ X20, 0x34512C4
	0x03450F74 LDRB W8, [X20 + 0x10]
	0x03450F78 CBZ W8, 0x345115C
	0x03450F7C LDR X8, [X19 + 0x40]
	0x03450F80 CBZ X8, 0x34512C8
	0x03450F84 LDR X21, [X8 + 0x18]
	0x03450F88 CBZ X21, 0x34512CC
	0x03450F8C ADRP X23, 0xCA4000
	0x03450F90 LDR X8, [X21]
	0x03450F94 LDR X23, [X23 + 0x818]
	0x03450F98 LDRH W9, [X8 + 0x12E]
	0x03450F9C LDR X1, [X23]
	0x03450FA0 CBZ X9, 0x3450FC4
	0x03450FA4 LDR X10, [X8 + 0xB0]
	0x03450FA8 ADD X10, X10, 0x8
	0x03450FAC LDUR X11, [X10 - 0x8]
	0x03450FB0 CMP X11, X1
	0x03450FB4 B.EQ 0x3450FD4
	0x03450FB8 SUBS X9, X9, 0x1
	0x03450FBC ADD X10, X10, 0x10
	0x03450FC0 B.NE 0x3450FAC
	0x03450FC4 MOVZ W2, 0x7
	0x03450FC8 MOV X0, X21
	0x03450FCC BL 0x1C5C788
	0x03450FD0 B 0x3450FE4
	0x03450FD4 LDR W9, [X10]
	0x03450FD8 ADD W9, W9, 0x7
	0x03450FDC ADD X8, X8, W9, 0x4, SXTW
	0x03450FE0 ADD X0, X8, 0x138
	0x03450FE4 LDP X8, X1, [X0]
	0x03450FE8 MOV X0, X21
	0x03450FEC BLR X8
	0x03450FF0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF8E000
	011 Move W8, [X20+1895]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCE0000
	018 Move X0, [X0+2904]
	019 Call 0x1C17CF4
	020 Move X0, 0xCE0000
	021 Move X0, [X0+2912]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA7000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA6000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA5000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCAC000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA5000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCE0000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCE0000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA5000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA5000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA5000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE0000
	054 Move X0, [X0+2920]
	055 Call 0x1C17CF4
	056 Move X0, 0xCE0000
	057 Move X0, [X0+2928]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1895], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA7000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xCA5000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCE0000
	091 Move X8, [X8+2928]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass52_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {358}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Move X8, [X19+64]
	109 Move [X21+48], X8
	110 Compare X20, 0
	111 JumpIfEqual {359}
	112 Move W8, [X20+16]
	113 Compare W8, 0
	114 JumpIfEqual {252}
	115 Move X8, [X19+80]
	116 Compare X8, 0
	117 JumpIfEqual {360}
	118 Move X21, [X8+24]
	119 Compare X21, 0
	120 JumpIfEqual {361}
	121 Move X23, 0xCA5000
	122 Move X8, [X21]
	123 Move X23, [X23+2072]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X23]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 7
	135 Move X0, X21
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 7
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X21
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X1, X31
	146 Call String.IsNullOrEmpty, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {250}
	151 Move X8, [X19+80]
	152 Compare X8, 0
	153 JumpIfEqual {362}
	154 Move X9, 0xCA5000
	155 Move X9, [X9+2544]
	156 Move X21, [X8+24]
	157 Move X0, [X9]
	158 Move W9, [X0+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X31
	163 Call DateTime.get_UtcNow
	164 Move X22, 0xCA6000
	165 Move X22, [X22+2576]
	166 Move X8, X0
	167 Move [X31+40], X8
	168 Move X0, [X22]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X22]
	174 Move X8, [X0+184]
	175 Move X1, [X8]
	176 Add X0, X31, 40
	177 Move X2, X31
	178 Call DateTime.Add, X0, X1
	179 Compare X21, 0
	180 JumpIfEqual {363}
	181 Move X8, [X21]
	182 Move X1, [X23]
	183 Move X22, X0
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move W2, 11
	194 Move X0, X21
	195 Call 0x1C5D788
	196 Move W9, [X10]
	197 Add W9, W9, 11
	198 Add X8, X8, W9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X2, [X0+8]
	202 Move X0, X21
	203 Move X1, X22
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {250}
	209 Move X8, [X19+80]
	210 Compare X8, 0
	211 JumpIfEqual {364}
	212 Move X1, [X8+24]
	213 Move X3, [X19+72]
	214 Move X4, [X8+48]
	215 Move X0, X20
	216 Move X2, X31
	217 Move X5, X31
	218 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	219 Compare X0, 0
	220 JumpIfEqual {365}
	221 Move X8, 0xCA5000
	222 Move X8, [X8+2112]
	223 Move X1, [X8]
	224 Call Task`1<Object>.GetAwaiter, X0
	225 Move X8, 0xCA5000
	226 Move X8, [X8+2104]
	227 Move [X31+32], X0
	228 Move X1, [X8]
	229 Add X0, X31, 32
	230 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {85}
	235 Move [X19], W31
	236 Move X8, [X31+32]
	237 Move [X19+88], X8
	238 Move X0, [X25]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, 0xCE0000
	244 Move X8, [X8+2904]
	245 Add X0, X19, 8
	246 Move X3, [X8]
	247 Add X1, X31, 32
	248 Move X2, X19
	249 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	250 Compare X20, 0
	251 JumpIfEqual {357}
	252 Move X8, 0xCAC000
	253 Move X8, [X8+2072]
	254 Move X21, [X20+88]
	255 Move X23, [X19+80]
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X8, 0xCE0000
	259 Move X8, [X8+2920]
	260 Move X22, X0
	261 Move X2, [X8]
	262 Move X1, X23
	263 Move X3, X31
	264 Call Func`1<Object>..ctor, X0, X1, X2
	265 Move X8, [X19+80]
	266 Compare X8, 0
	267 JumpIfEqual {354}
	268 Move X9, 0xCE0000
	269 Move X23, [X19+72]
	270 Move X9, [X9+1992]
	271 Compare X23, 0
	272 JumpIfNotEqual {274}
	273 Move X23, [X20+24]
	274 Move X20, [X8+24]
	275 Move X1, [X8+48]
	276 Move X2, [X9]
	277 Move [X31+8], X31
	278 Move [X31+16], X31
	279 Add X0, X31, 8
	280 Call Nullable`1<CancellationToken>..ctor, X0, X1
	281 Move X8, 0xCE0000
	282 Move X8, [X8+2000]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X3, [X31+8]
	286 Move X4, [X31+16]
	287 Move X24, X0
	288 Move X1, X20
	289 Move X2, X23
	290 Move X5, X31
	291 Call RetryHistory..ctor, X0, X1, X2, X3
	292 Compare X21, 0
	293 JumpIfEqual {355}
	294 Move X0, X21
	295 Move X1, X22
	296 Move X2, X24
	297 Move X3, X31
	298 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	299 Compare X0, 0
	300 JumpIfEqual {356}
	301 Move X1, X31
	302 Call Task.GetAwaiter, X0
	303 Move [X31+24], X0
	304 Add X0, X31, 24
	305 Move X1, X31
	306 Call TaskAwaiter.get_IsCompleted, X0
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {328}
	311 Add X0, X31, 24
	312 Move X1, X31
	313 Call TaskAwaiter.GetResult, X0
	314 Move TEMP, 1
	315 Not TEMP
	316 Move W8, TEMP
	317 Move [X19], W8
	318 Move [X19+80], X31
	319 Move X0, [X25]
	320 Add X19, X19, 8
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X0, X19
	326 Move X1, X31
	327 Call AsyncTaskMethodBuilder.SetResult, X0
	328 Move W8, 1
	329 Move [X19], W8
	330 Move X8, [X31+24]
	331 Move [X19+96], X8
	332 Move X0, [X25]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X8, 0xCE0000
	338 Move X8, [X8+2912]
	339 Add X0, X19, 8
	340 Move X3, [X8]
	341 Add X1, X31, 24
	342 Move X2, X19
	343 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	344 Move X20, [X31+96]
	345 Move X19, [X31+104]
	346 Move X22, [X31+80]
	347 Move X21, [X31+88]
	348 Move X24, [X31+64]
	349 Move X23, [X31+72]
	350 Move X30, [X31+48]
	351 Move X25, [X31+56]
	352 Add X31, X31, 112
	353 Return 
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Move X20, X0
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X0, X20
	369 Call 0x3EB2AD0
	370 Move X20, X0
	371 Move X0, 0xCA4000
	372 Move X0, [X0+2000]
	373 Call 0x1C17D08
	374 Move X8, [X20]
	375 Move X1, [X8]
	376 Call 0x1C18270
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {399}
	381 Move X20, [X20]
	382 Call 0x3EB2AE0
	383 Move TEMP, 1
	384 Not TEMP
	385 Move W8, TEMP
	386 Move [X19+80], X31
	387 Move [X19+8], W8
	388 Move X0, 0xCA7000
	389 Move X0, [X0+640]
	390 Call 0x1C17D08
	391 Move W8, [X0+224]
	392 Compare W8, 0
	393 JumpIfNotEqual {395}
	394 Call 0x1C17DFC
	395 Move X0, X19
	396 Move X1, X20
	397 Move X2, X31
	398 Call AsyncTaskMethodBuilder.SetException, X0, X1
	399 Move W0, 8
	400 Call 0x3EB2AF0
	401 Move X8, [X20]
	402 Move [X0], X8
	403 Move X1, 0xA65000
	404 Add X1, X1, 3672
	405 Move X2, X31
	406 Call 0x3EB2B00
	407 Move X20, X0
	408 Call 0x3EB2AE0
	409 Move X0, X20
	410 Call 0x1D2D690
	411 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03450FF4 BL 0x32277A8
	0x03450FF8 TBNZ X0, 0x0, 0x3451158
	0x03450FFC LDR X8, [X19 + 0x40]
	0x03451000 CBZ X8, 0x34512D0
	0x03451004 ADRP X9, 0xCA3000
	0x03451008 LDR X9, [X9 + 0x9F0]
	0x0345100C LDR X21, [X8 + 0x18]
	0x03451010 LDR X0, [X9]
	0x03451014 LDR W9, [X0 + 0xE0]
	0x03451018 CBNZ W9, 0x3451020
	0x0345101C BL 0x1C16DFC
	0x03451020 MOV X0, X31
	0x03451024 BL 0x33616A4
	0x03451028 ADRP X22, 0xCA4000
	0x0345102C LDR X22, [X22 + 0xA10]
	0x03451030 MOV X8, X0
	0x03451034 STR X8, [X31 + 0x28]
	0x03451038 LDR X0, [X22]
	0x0345103C LDR W8, [X0 + 0xE0]
	0x03451040 CBNZ W8, 0x345104C
	0x03451044 BL 0x1C16DFC
	0x03451048 LDR X0, [X22]
	0x0345104C LDR X8, [X0 + 0xB8]
	0x03451050 LDR X1, [X8]
	0x03451054 ADD X0, X31, 0x28
	0x03451058 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF8D000
	007 Move X22, 0xCA6000
	008 Move W8, [X21+1896]
	009 Call 0x3EB264C
	010 Return 
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xCA6000
	018 Move X0, [X0+640]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1896], W8
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X0, X20, 8
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X2, X31
	034 Move X30, [X31+48]
	035 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	036 Return 

