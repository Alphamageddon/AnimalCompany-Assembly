Type: Nakama.ApiClient/<ImportSteamFriendsAsync>d__46

Method: System.Void MoveNext()

Disassembly:
	0x0342618C LDR X1, [X8]
	0x03426190 BL 0x2677474
	0x03426194 MOVN W8, 0x1
	0x03426198 STR W8, [X19], #0x8
	0x0342619C LDR X0, [X27]
	0x034261A0 LDR W8, [X0 + 0xE0]
	0x034261A4 CBNZ W8, 0x34261AC
	0x034261A8 BL 0x1C16DFC
	0x034261AC MOV X0, X19
	0x034261B0 MOV X1, X31
	0x034261B4 BL 0x32C4864
	0x034261B8 B 0x34261F4
	0x034261BC STR W31, [X19]
	0x034261C0 LDR X8, [X31 + 0x8]
	0x034261C4 STR X8, [X19 + 0x48]
	0x034261C8 LDR X0, [X27]
	0x034261CC LDR W8, [X0 + 0xE0]
	0x034261D0 CBNZ W8, 0x34261D8
	0x034261D4 BL 0x1C16DFC
	0x034261D8 ADRP X8, 0xD08000
	0x034261DC LDR X8, [X8 + 0xDC8]
	0x034261E0 ADD X0, X19, 0x8
	0x034261E4 LDR X3, [X8]
	0x034261E8 ADD X1, X31, 0x8
	0x034261EC MOV X2, X19
	0x034261F0 BL 0x21865DC
	0x034261F4 LDP X20, X19, [X31 + 0x50]
	0x034261F8 LDP X22, X21, [X31 + 0x40]
	0x034261FC LDP X24, X23, [X31 + 0x30]
	0x03426200 LDP X26, X25, [X31 + 0x20]
	0x03426204 LDP X30, X27, [X31 + 0x10]
	0x03426208 ADD X31, X31, 0x60
	0x0342620C RET
	0x03426210 ADRP X0, 0xCD5000
	0x03426214 LDR X0, [X0 + 0x578]
	0x03426218 BL 0x1C16D08
	0x0342621C BL 0x1C16F10
	0x03426220 MOV X20, X0
	0x03426224 ADRP X0, 0xD08000
	0x03426228 LDR X0, [X0 + 0xC80]
	0x0342622C BL 0x1C16D08
	0x03426230 MOV X1, X0
	0x03426234 MOV X0, X20
	0x03426238 MOV X2, X31
	0x0342623C BL 0x3314A68
	0x03426240 ADRP X0, 0xD08000
	0x03426244 LDR X0, [X0 + 0xDD8]
	0x03426248 BL 0x1C16D08
	0x0342624C MOV X1, X0
	0x03426250 MOV X0, X20
	0x03426254 BL 0x1C16DEC
	0x03426258 BL 0x1C16F20
	0x0342625C BL 0x1C16F20
	0x03426260 BL 0x1C16F20
	0x03426264 BL 0x1C16F20
	0x03426268 BL 0x1C16F28
	0x0342626C BL 0x1C16F20
	0x03426270 BL 0x1C16F20
	0x03426274 BL 0x1C16F20
	0x03426278 BL 0x1C16F20
	0x0342627C BL 0x1C16F20
	0x03426280 B 0x34262DC
	0x03426284 B 0x34262DC
	0x03426288 B 0x34262DC
	0x0342628C B 0x34262DC
	0x03426290 B 0x34262DC
	0x03426294 B 0x34262DC
	0x03426298 B 0x34262DC
	0x0342629C B 0x34262DC
	0x034262A0 B 0x34262DC
	0x034262A4 B 0x34262DC
	0x034262A8 B 0x34262DC
	0x034262AC B 0x34262DC
	0x034262B0 B 0x34262DC
	0x034262B4 B 0x34262DC
	0x034262B8 B 0x34262DC
	0x034262BC B 0x34262DC
	0x034262C0 B 0x34262DC
	0x034262C4 B 0x34262DC
	0x034262C8 B 0x34262DC
	0x034262CC B 0x34262DC
	0x034262D0 B 0x34262DC
	0x034262D4 B 0x34262DC
	0x034262D8 B 0x34262DC
	0x034262DC MOV X20, X0
	0x034262E0 CMP W1, 0x1
	0x034262E4 B.NE 0x3426374
	0x034262E8 MOV X0, X20
	0x034262EC BL 0x3EB1AD0
	0x034262F0 MOV X20, X0
	0x034262F4 ADRP X0, 0xCCD000
	0x034262F8 LDR X0, [X0 + 0x7D0]
	0x034262FC BL 0x1C16D08
	0x03426300 LDR X8, [X20]
	0x03426304 LDR X1, [X8]
	0x03426308 BL 0x1C17270
	0x0342630C TBZ X0, 0x0, 0x342634C
	0x03426310 LDR X20, [X20]
	0x03426314 BL 0x3EB1AE0
	0x03426318 MOVN W8, 0x1
	0x0342631C STR W8, [X19], #0x8
	0x03426320 ADRP X0, 0xCD0000
	0x03426324 LDR X0, [X0 + 0x280]
	0x03426328 BL 0x1C16D08
	0x0342632C LDR W8, [X0 + 0xE0]
	0x03426330 CBNZ W8, 0x3426338
	0x03426334 BL 0x1C16DFC
	0x03426338 MOV X0, X19
	0x0342633C MOV X1, X20
	0x03426340 MOV X2, X31
	0x03426344 BL 0x32C4908
	0x03426348 B 0x34261F4
	0x0342634C MOVZ W0, 0x8
	0x03426350 BL 0x3EB1AF0
	0x03426354 LDR X8, [X20]
	0x03426358 STR X8, [X0]
	0x0342635C ADRP X1, 0xA8E000
	0x03426360 ADD X1, X1, 0xE58
	0x03426364 MOV X2, X31
	0x03426368 BL 0x3EB1B00
	0x0342636C MOV X20, X0
	0x03426370 BL 0x3EB1AE0
	0x03426374 MOV X0, X20
	0x03426378 BL 0x1D2C690
	0x0342637C BL 0x1990590
	0x03426380 STR X30, [X31 - 0x30]!
	0x03426384 STP X22, X21, [X31 + 0x10]
	0x03426388 STP X20, X19, [X31 + 0x20]
	0x0342638C ADRP X21, 0xFB7000
	0x03426390 ADRP X22, 0xCD0000
	0x03426394 LDRB W8, [X21 + 0x634]
	0x03426398 LDR X22, [X22 + 0x280]
	0x0342639C MOV X19, X1
	0x034263A0 MOV X20, X0
	0x034263A4 TBNZ X8, 0x0, 0x34263BC
	0x034263A8 ADRP X0, 0xCD0000
	0x034263AC LDR X0, [X0 + 0x280]
	0x034263B0 BL 0x1C16CF4
	0x034263B4 MOVZ W8, 0x1
	0x034263B8 STRB W8, [X21 + 0x634]
	0x034263BC LDR X0, [X22]
	0x034263C0 LDR W8, [X0 + 0xE0]
	0x034263C4 CBNZ W8, 0x34263CC
	0x034263C8 BL 0x1C16DFC
	0x034263CC ADD X0, X20, 0x8
	0x034263D0 MOV X1, X19
	0x034263D4 LDP X20, X19, [X31 + 0x20]
	0x034263D8 LDP X22, X21, [X31 + 0x10]
	0x034263DC MOV X2, X31
	0x034263E0 LDR X30, [X31], #0x30
	0x034263E4 B 0x32C477C
	0x034263E8 SUB X31, X31, 0x80
	0x034263EC STP X29, X30, [X31 + 0x20]
	0x034263F0 STP X28, X27, [X31 + 0x30]
	0x034263F4 STP X26, X25, [X31 + 0x40]
	0x034263F8 STP X24, X23, [X31 + 0x50]
	0x034263FC STP X22, X21, [X31 + 0x60]
	0x03426400 STP X20, X19, [X31 + 0x70]
	0x03426404 ADRP X20, 0xFB7000
	0x03426408 LDRB W8, [X20 + 0x635]
	0x0342640C MOV X19, X0
	0x03426410 TBNZ X8, 0x0, 0x3426548
	0x03426414 ADRP X0, 0xD08000
	0x03426418 LDR X0, [X0 + 0xDE0]
	0x0342641C BL 0x1C16CF4
	0x03426420 ADRP X0, 0xCD0000
	0x03426424 LDR X0, [X0 + 0x280]
	0x03426428 BL 0x1C16CF4
	0x0342642C ADRP X0, 0xCD6000
	0x03426430 LDR X0, [X0 + 0x8D8]
	0x03426434 BL 0x1C16CF4
	0x03426438 ADRP X0, 0xCCE000
	0x0342643C LDR X0, [X0 + 0x810]
	0x03426440 BL 0x1C16CF4
	0x03426444 ADRP X0, 0xCCE000
	0x03426448 LDR X0, [X0 + 0x6C0]
	0x0342644C BL 0x1C16CF4
	0x03426450 ADRP X0, 0xCCE000
	0x03426454 LDR X0, [X0 + 0x6D0]
	0x03426458 BL 0x1C16CF4
	0x0342645C ADRP X0, 0xCCD000
	0x03426460 LDR X0, [X0 + 0xE00]
	0x03426464 BL 0x1C16CF4
	0x03426468 ADRP X0, 0xCCD000
	0x0342646C LDR X0, [X0 + 0xF70]
	0x03426470 BL 0x1C16CF4
	0x03426474 ADRP X0, 0xCCD000
	0x03426478 LDR X0, [X0 + 0xF78]
	0x0342647C BL 0x1C16CF4
	0x03426480 ADRP X0, 0xCCD000
	0x03426484 LDR X0, [X0 + 0xE18]
	0x03426488 BL 0x1C16CF4
	0x0342648C ADRP X0, 0xD08000
	0x03426490 LDR X0, [X0 + 0x7B8]
	0x03426494 BL 0x1C16CF4
	0x03426498 ADRP X0, 0xCCD000
	0x0342649C LDR X0, [X0 + 0xAC8]
	0x034264A0 BL 0x1C16CF4
	0x034264A4 ADRP X0, 0xCD0000
	0x034264A8 LDR X0, [X0 + 0x1E0]
	0x034264AC BL 0x1C16CF4
	0x034264B0 ADRP X0, 0xCD0000
	0x034264B4 LDR X0, [X0 + 0x1F0]
	0x034264B8 BL 0x1C16CF4
	0x034264BC ADRP X0, 0xCD0000
	0x034264C0 LDR X0, [X0 + 0x1F8]
	0x034264C4 BL 0x1C16CF4
	0x034264C8 ADRP X0, 0xCD6000
	0x034264CC LDR X0, [X0 + 0x3A0]
	0x034264D0 BL 0x1C16CF4
	0x034264D4 ADRP X0, 0xCCF000
	0x034264D8 LDR X0, [X0 + 0xA28]
	0x034264DC BL 0x1C16CF4
	0x034264E0 ADRP X0, 0xCF6000
	0x034264E4 LDR X0, [X0 + 0x4D8]
	0x034264E8 BL 0x1C16CF4
	0x034264EC ADRP X0, 0xD08000
	0x034264F0 LDR X0, [X0 + 0x7F0]
	0x034264F4 BL 0x1C16CF4
	0x034264F8 ADRP X0, 0xD08000
	0x034264FC LDR X0, [X0 + 0x800]
	0x03426500 BL 0x1C16CF4
	0x03426504 ADRP X0, 0xCD6000
	0x03426508 LDR X0, [X0 + 0x720]
	0x0342650C BL 0x1C16CF4
	0x03426510 ADRP X0, 0xD08000
	0x03426514 LDR X0, [X0 + 0x7D0]
	0x03426518 BL 0x1C16CF4
	0x0342651C ADRP X0, 0xD08000
	0x03426520 LDR X0, [X0 + 0x7D8]
	0x03426524 BL 0x1C16CF4
	0x03426528 ADRP X0, 0xCCD000
	0x0342652C LDR X0, [X0 + 0x988]
	0x03426530 BL 0x1C16CF4
	0x03426534 ADRP X0, 0xD08000
	0x03426538 LDR X0, [X0 + 0xDE8]
	0x0342653C BL 0x1C16CF4
	0x03426540 MOVZ W8, 0x1
	0x03426544 STRB W8, [X20 + 0x635]
	0x03426548 STR X31, [X31 + 0x18]
	0x0342654C ADRP X27, 0xCD0000
	0x03426550 LDR W24, [X19]
	0x03426554 LDR X27, [X27 + 0x280]
	0x03426558 CBZ W24, 0x3426634
	0x0342655C LDR X21, [X19 + 0x20]
	0x03426560 CBZ X21, 0x3426A9C
	0x03426564 ADRP X26, 0xCCF000
	0x03426568 LDR X26, [X26 + 0xA28]
	0x0342656C ADRP X8, 0xD08000
	0x03426570 LDR X0, [X26]
	0x03426574 LDR X8, [X8 + 0xDE8]
	0x03426578 LDR X23, [X19 + 0x30]
	0x0342657C LDR W9, [X0 + 0xE0]
	0x03426580 LDR X20, [X8]
	0x03426584 CBNZ W9, 0x342658C
	0x03426588 BL 0x1C16DFC
	0x0342658C MOV X0, X21
	0x03426590 MOV X1, X31
	0x03426594 BL 0x3624D20
	0x03426598 CBZ X20, 0x3426AE4
	0x0342659C ADRP X8, 0xD08000
	0x034265A0 LDR X8, [X8 + 0x800]
	0x034265A4 MOV X2, X0
	0x034265A8 LDR X1, [X8]
	0x034265AC MOV X0, X20
	0x034265B0 MOV X3, X31
	0x034265B4 BL 0x32293BC
	0x034265B8 ADRP X8, 0xCCD000
	0x034265BC LDR X8, [X8 + 0x988]
	0x034265C0 LDR X21, [X19 + 0x28]
	0x034265C4 MOV X20, X0
	0x034265C8 LDR X28, [X8]
	0x034265CC CBNZ X21, 0x34265EC
	0x034265D0 ADRP X8, 0xCCD000
	0x034265D4 LDR X8, [X8 + 0xAC8]
	0x034265D8 LDR X0, [X8]
	0x034265DC MOV W1, W31
	0x034265E0 BL 0x1C16D6C
	0x034265E4 MOV X21, X0
	0x034265E8 CBZ X0, 0x3426B14
	0x034265EC ADRP X10, 0xCCD000
	0x034265F0 LDR X8, [X21]
	0x034265F4 LDR X10, [X10 + 0xF70]
	0x034265F8 LDRH W9, [X8 + 0x12E]
	0x034265FC LDR X1, [X10]
	0x03426600 CBZ X9, 0x3426624
	0x03426604 LDR X10, [X8 + 0xB0]
	0x03426608 ADD X10, X10, 0x8
	0x0342660C LDUR X11, [X10 - 0x8]
	0x03426610 CMP X11, X1
	0x03426614 B.EQ 0x342664C
	0x03426618 SUBS X9, X9, 0x1
	0x0342661C ADD X10, X10, 0x10
	0x03426620 B.NE 0x342660C
	0x03426624 MOV X0, X21
	0x03426628 MOV W2, W31
	0x0342662C BL 0x1C5C788
	0x03426630 B 0x3426658
	0x03426634 LDR X8, [X19 + 0x50]
	0x03426638 MOVN W9, 0x0
	0x0342663C STR X8, [X31 + 0x18]
	0x03426640 STR X31, [X19 + 0x50]
	0x03426644 STR W9, [X19]
	0x03426648 B 0x3426A04
	0x0342664C LDRSW X9, [X10]
	0x03426650 ADD X8, X8, X9, 0x4, LSL
	0x03426654 ADD X0, X8, 0x138
	0x03426658 LDP X8, X1, [X0]
	0x0342665C MOV X0, X21
	0x03426660 BLR X8
	0x03426664 STP X20, X23, [X31 + 0x8]
	0x03426668 ADRP X29, 0xCCD000
	0x0342666C ADRP X27, 0xCCD000
	0x03426670 ADRP X20, 0xD08000
	0x03426674 ADRP X25, 0xCD6000
	0x03426678 LDR X29, [X29 + 0xE18]
	0x0342667C LDR X27, [X27 + 0xF78]
	0x03426680 LDR X20, [X20 + 0x7F0]
	0x03426684 LDR X25, [X25 + 0x720]
	0x03426688 MOV X22, X0
	0x0342668C MOV X0, X28
	0x03426690 CBZ X22, 0x3426A98
	0x03426694 LDR X8, [X22]
	0x03426698 LDR X1, [X29]
	0x0342669C MOV X21, X0
	0x034266A0 LDRH W9, [X8 + 0x12E]
	0x034266A4 CBZ X9, 0x34266C8
	0x034266A8 LDR X10, [X8 + 0xB0]
	0x034266AC ADD X10, X10, 0x8
	0x034266B0 LDUR X11, [X10 - 0x8]
	0x034266B4 CMP X11, X1
	0x034266B8 B.EQ 0x34266D8
	0x034266BC SUBS X9, X9, 0x1
	0x034266C0 ADD X10, X10, 0x10
	0x034266C4 B.NE 0x34266B0
	0x034266C8 MOV X0, X22
	0x034266CC MOV W2, W31
	0x034266D0 BL 0x1C5C788
	0x034266D4 B 0x34266E4
	0x034266D8 LDRSW X9, [X10]
	0x034266DC ADD X8, X8, X9, 0x4, LSL
	0x034266E0 ADD X0, X8, 0x138
	0x034266E4 LDP X8, X1, [X0]
	0x034266E8 MOV X0, X22
	0x034266EC BLR X8
	0x034266F0 TBZ X0, 0x0, 0x3426788
	0x034266F4 LDR X8, [X22]
	0x034266F8 LDR X1, [X27]
	0x034266FC LDRH W9, [X8 + 0x12E]
	0x03426700 CBZ X9, 0x3426724
	0x03426704 LDR X10, [X8 + 0xB0]
	0x03426708 ADD X10, X10, 0x8
	0x0342670C LDUR X11, [X10 - 0x8]
	0x03426710 CMP X11, X1
	0x03426714 B.EQ 0x3426734
	0x03426718 SUBS X9, X9, 0x1
	0x0342671C ADD X10, X10, 0x10
	0x03426720 B.NE 0x342670C
	0x03426724 MOV X0, X22
	0x03426728 MOV W2, W31
	0x0342672C BL 0x1C5C788
	0x03426730 B 0x3426740
	0x03426734 LDRSW X9, [X10]
	0x03426738 ADD X8, X8, X9, 0x4, LSL
	0x0342673C ADD X0, X8, 0x138
	0x03426740 LDP X8, X1, [X0]
	0x03426744 MOV X0, X22
	0x03426748 BLR X8
	0x0342674C MOV X23, X0
	0x03426750 LDR X0, [X26]
	0x03426754 LDR W8, [X0 + 0xE0]
	0x03426758 CBNZ W8, 0x3426760
	0x0342675C BL 0x1C16DFC
	0x03426760 MOV X0, X23
	0x03426764 MOV X1, X31
	0x03426768 BL 0x3624D20
	0x0342676C LDR X1, [X20]
	0x03426770 LDR X3, [X25]
	0x03426774 MOV X2, X0
	0x03426778 MOV X0, X21
	0x0342677C MOV X4, X31
	0x03426780 BL 0x32277C4
	0x03426784 B 0x3426690
	0x03426788 MOV X23, X31
	0x0342678C MOVZ W20, 0x9

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFB8000
	014 Move W8, [X20+1583]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {82}
	020 Move X0, 0xD09000
	021 Move X0, [X0+3480]
	022 Call 0x1C17CF4
	023 Move X0, 0xCD1000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCD7000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCF000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCCF000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCCF000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xD09000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xD09000
	042 Move X0, [X0+2096]
	043 Call 0x1C17CF4
	044 Move X0, 0xCD2000
	045 Move X0, [X0+3056]
	046 Call 0x1C17CF4
	047 Move X0, 0xCD1000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCD1000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCD1000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCD7000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xD09000
	060 Move X0, [X0+3488]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF7000
	063 Move X0, [X0+1240]
	064 Call 0x1C17CF4
	065 Move X0, 0xD09000
	066 Move X0, [X0+3456]
	067 Call 0x1C17CF4
	068 Move X0, 0xCD7000
	069 Move X0, [X0+1824]
	070 Call 0x1C17CF4
	071 Move X0, 0xD09000
	072 Move X0, [X0+2000]
	073 Call 0x1C17CF4
	074 Move X0, 0xD09000
	075 Move X0, [X0+2008]
	076 Call 0x1C17CF4
	077 Move X0, 0xCCE000
	078 Move X0, [X0+2440]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X20+1583], W8
	082 Move [X31+24], X31
	083 Move X28, 0xCD1000
	084 Move W8, [X19]
	085 Move X28, [X28+640]
	086 Compare W8, 0
	087 JumpIfEqual {240}
	088 Move X8, [X19+32]
	089 Compare X8, 0
	090 JumpIfEqual {324}
	091 Move X8, 0xD09000
	092 Move X9, 0xCCE000
	093 Move X8, [X8+3488]
	094 Move X9, [X9+2440]
	095 Move X0, X19
	096 Move X25, [X19+48]
	097 Move X21, [X8]
	098 Move X20, [X9]
	099 Add X0, X0, 40
	100 Move W8, [X0]
	101 Compare W8, 0
	102 JumpIfEqual {122}
	103 Move X8, 0xD09000
	104 Move X8, [X8+2096]
	105 Move X1, [X8]
	106 Call Nullable`1<Boolean>.ToString, X0
	107 Compare X0, 0
	108 JumpIfEqual {352}
	109 Move X1, X31
	110 Call String.ToLower, X0
	111 Move X8, 0xD09000
	112 Move X8, [X8+3456]
	113 Move X9, 0xCD7000
	114 Move X9, [X9+1824]
	115 Move X2, X0
	116 Move X1, [X8]
	117 Move X3, [X9]
	118 Move X0, X20
	119 Move X4, X31
	120 Call String.Concat, X0, X1, X2, X3
	121 Move X20, X0
	122 Compare X25, 0
	123 JumpIfEqual {342}
	124 Move X0, [X25+32]
	125 Compare X0, 0
	126 JumpIfEqual {343}
	127 Move X1, X31
	128 Call Uri.get_AbsolutePath, X0
	129 Move X8, 0xCD7000
	130 Move X8, [X8+2264]
	131 Move X22, X0
	132 Move X0, [X8]
	133 Move W1, 1
	134 Call 0x1C17D6C
	135 Move X1, X0
	136 Compare X1, 0
	137 JumpIfEqual {344}
	138 Move W8, [X1+24]
	139 Compare W8, 0
	140 JumpIfEqual {345}
	141 Move W8, 47
	142 NotImplemented "Instruction STRH not yet implemented."
	143 Compare X22, 0
	144 JumpIfEqual {346}
	145 Move X0, X22
	146 Move X2, X31
	147 Call String.TrimEnd, X0, X1
	148 Move X1, X21
	149 Move X2, X31
	150 Call String.Concat, X0, X1
	151 Move X8, 0xCD7000
	152 Move X8, [X8+928]
	153 Move X22, X0
	154 Move X23, [X25+32]
	155 Move X0, [X8]
	156 Call 0x1C17F10
	157 Move X21, X0
	158 Move X1, X23
	159 Move X2, X31
	160 Call UriBuilder..ctor, X0, X1
	161 Compare X21, 0
	162 JumpIfEqual {347}
	163 Move X0, X21
	164 Move X1, X22
	165 Move X2, X31
	166 Call UriBuilder.set_Path, X0, X1
	167 Move X0, X21
	168 Move X1, X20
	169 Move X2, X31
	170 Call UriBuilder.set_Query, X0, X1
	171 Move X0, X21
	172 Move X1, X31
	173 Call UriBuilder.get_Uri, X0
	174 Move X8, 0xCF7000
	175 Move X9, 0xCCF000
	176 Move X8, [X8+1240]
	177 Move X9, [X9+1744]
	178 Move X20, X0
	179 Move X21, [X8]
	180 Move X0, [X9]
	181 Call 0x1C17F10
	182 Move X8, 0xCCF000
	183 Move X8, [X8+1728]
	184 Move X22, X0
	185 Move X1, [X8]
	186 Call Dictionary`2<Object, Object>..ctor, X0
	187 Move X8, 0xD09000
	188 Move X8, [X8+2008]
	189 Move X1, [X19+56]
	190 Move X0, [X8]
	191 Move X2, X31
	192 Call String.Concat, X0, X1
	193 Compare X22, 0
	194 JumpIfEqual {348}
	195 Move X8, 0xD09000
	196 Move X8, [X8+2000]
	197 Move X9, 0xCCF000
	198 Move X9, [X9+2064]
	199 Move X2, X0
	200 Move X1, [X8]
	201 Move X3, [X9]
	202 Move X0, X22
	203 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	204 Move X0, [X19+32]
	205 Move X1, X31
	206 Call JsonWriter.ToJson, X0
	207 Move X23, X0
	208 Move X0, X31
	209 Call Encoding.get_UTF8
	210 Compare X0, 0
	211 JumpIfEqual {349}
	212 Move X8, [X0]
	213 Move X9, [X8+616]
	214 Move X2, [X8+624]
	215 Move X1, X23
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X24, [X25+16]
	218 Compare X24, 0
	219 JumpIfEqual {350}
	220 Move X10, 0xD09000
	221 Move X10, [X10+1976]
	222 Move X8, [X24]
	223 Move W26, [X25+24]
	224 Move X27, [X19+64]
	225 Move X25, [X19+72]
	226 Move X1, [X10]
	227 NotImplemented "Instruction LDRH not yet implemented."
	228 Move X23, X0
	229 Compare X9, 0
	230 JumpIfEqual {237}
	231 Move X10, [X8+176]
	232 Add X10, X10, 8
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Subtract X9, X9, 1
	236 Add X10, X10, 16
	237 Move W2, 3
	238 Move X0, X24
	239 Call 0x1C5D788
	240 Move X8, [X19+80]
	241 Move TEMP, 0
	242 Not TEMP
	243 Move W9, TEMP
	244 Move [X31+24], X8
	245 Move [X19+80], X31
	246 Move [X19], W9
	247 Move W9, [X10]
	248 Add W9, W9, 3
	249 Add X8, X8, W9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X9, [X0+8]
	253 Move X0, X24
	254 Move X1, X21
	255 Move X2, X20
	256 Move X3, X22
	257 Move X4, X23
	258 Move W5, W26
	259 Move X6, X27
	260 Move X7, X25
	261 Move [X31], X9
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Compare X0, 0
	264 JumpIfEqual {351}
	265 Move X8, 0xCD1000
	266 Move X8, [X8+504]
	267 Move X1, [X8]
	268 Call Task`1<Object>.GetAwaiter, X0
	269 Move X8, 0xCD1000
	270 Move X8, [X8+496]
	271 Move [X31+24], X0
	272 Move X1, [X8]
	273 Add X0, X31, 24
	274 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {296}
	279 Move X8, 0xCD1000
	280 Move X8, [X8+480]
	281 Add X0, X31, 24
	282 Move X1, [X8]
	283 Call TaskAwaiter`1<Object>.GetResult, X0
	284 Move TEMP, 1
	285 Not TEMP
	286 Move W8, TEMP
	287 Move [X19+8], W8
	288 Move X0, [X28]
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {293}
	292 Call 0x1C17DFC
	293 Move X0, X19
	294 Move X1, X31
	295 Call AsyncTaskMethodBuilder.SetResult, X0
	296 Move [X19], W31
	297 Move X8, [X31+24]
	298 Move [X19+80], X8
	299 Move X0, [X28]
	300 Move W8, [X0+224]
	301 Compare W8, 0
	302 JumpIfNotEqual {304}
	303 Call 0x1C17DFC
	304 Move X8, 0xD09000
	305 Move X8, [X8+3480]
	306 Add X0, X19, 8
	307 Move X3, [X8]
	308 Add X1, X31, 24
	309 Move X2, X19
	310 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	311 Move X20, [X31+96]
	312 Move X19, [X31+104]
	313 Move X22, [X31+80]
	314 Move X21, [X31+88]
	315 Move X24, [X31+64]
	316 Move X23, [X31+72]
	317 Move X26, [X31+48]
	318 Move X25, [X31+56]
	319 Move X28, [X31+32]
	320 Move X27, [X31+40]
	321 Move X30, [X31+16]
	322 Add X31, X31, 112
	323 Return 
	324 Move X0, 0xCD6000
	325 Move X0, [X0+1400]
	326 Call 0x1C17D08
	327 Call 0x1C17F10
	328 Move X20, X0
	329 Move X0, 0xD09000
	330 Move X0, [X0+2136]
	331 Call 0x1C17D08
	332 Move X1, X0
	333 Move X0, X20
	334 Move X2, X31
	335 Call ArgumentException..ctor, X0, X1
	336 Move X0, 0xD09000
	337 Move X0, [X0+3496]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X20
	341 Call 0x1C17DEC
	342 Call 0x1C17F20
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Call 0x1C17F28
	346 Call 0x1C17F20
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Move X20, X0
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X0, X20
	356 Call 0x3EB2AD0
	357 Move X20, X0
	358 Move X0, 0xCCE000
	359 Move X0, [X0+2000]
	360 Call 0x1C17D08
	361 Move X8, [X20]
	362 Move X1, [X8]
	363 Call 0x1C18270
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {385}
	368 Move X20, [X20]
	369 Call 0x3EB2AE0
	370 Move TEMP, 1
	371 Not TEMP
	372 Move W8, TEMP
	373 Move [X19+8], W8
	374 Move X0, 0xCD1000
	375 Move X0, [X0+640]
	376 Call 0x1C17D08
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {381}
	380 Call 0x1C17DFC
	381 Move X0, X19
	382 Move X1, X20
	383 Move X2, X31
	384 Call AsyncTaskMethodBuilder.SetException, X0, X1
	385 Move W0, 8
	386 Call 0x3EB2AF0
	387 Move X8, [X20]
	388 Move [X0], X8
	389 Move X1, 0xA8F000
	390 Add X1, X1, 3672
	391 Move X2, X31
	392 Call 0x3EB2B00
	393 Move X20, X0
	394 Call 0x3EB2AE0
	395 Move X0, X20
	396 Call 0x1D2D690
	397 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03426790 ADRP X27, 0xCD0000
	0x03426794 LDR X27, [X27 + 0x280]
	0x03426798 LDR X25, [X31 + 0x10]
	0x0342679C TBZ X24, 0x1F, 0x3426804
	0x034267A0 CBZ X22, 0x3426804
	0x034267A4 ADRP X10, 0xCCD000
	0x034267A8 LDR X8, [X22]
	0x034267AC LDR X10, [X10 + 0xE00]
	0x034267B0 LDRH W9, [X8 + 0x12E]
	0x034267B4 LDR X1, [X10]
	0x034267B8 CBZ X9, 0x34267DC
	0x034267BC LDR X10, [X8 + 0xB0]
	0x034267C0 ADD X10, X10, 0x8
	0x034267C4 LDUR X11, [X10 - 0x8]
	0x034267C8 CMP X11, X1
	0x034267CC B.EQ 0x34267EC
	0x034267D0 SUBS X9, X9, 0x1
	0x034267D4 ADD X10, X10, 0x10
	0x034267D8 B.NE 0x34267C4
	0x034267DC MOV X0, X22
	0x034267E0 MOV W2, W31
	0x034267E4 BL 0x1C5C788
	0x034267E8 B 0x34267F8
	0x034267EC LDRSW X9, [X10]
	0x034267F0 ADD X8, X8, X9, 0x4, LSL
	0x034267F4 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFB8000
	007 Move X22, 0xCD1000
	008 Move W8, [X21+1584]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCD1000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1584], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

