Type: Nakama.ApiAccountFacebookInstantGame

Method: System.String get_SignedPlayerInfo()

Disassembly:
	0x03403F8C ADD X31, X31, 0x70
	0x03403F90 B 0x321B938

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_SignedPlayerInfo(System.String value)

Disassembly:
	0x03403F94 BL 0x1C16F20
	0x03403F98 BL 0x1C16F28

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IDictionary`2<System.String, System.String> get_Vars()

Disassembly:
	0x03403F9C BL 0x1C16F20
	0x03403FA0 BL 0x1C16F28
	0x03403FA4 BL 0x1C16F28
	0x03403FA8 BL 0x1C16F28
	0x03403FAC BL 0x1C16F28
	0x03403FB0 BL 0x1C16F20
	0x03403FB4 MOV X0, X22
	0x03403FB8 BL 0x1C16F18
	0x03403FBC B 0x3403FE8
	0x03403FC0 B 0x3403FE8
	0x03403FC4 B 0x3403FE8
	0x03403FC8 B 0x3403FE8
	0x03403FCC B 0x3403FE8
	0x03403FD0 B 0x3403FE8
	0x03403FD4 B 0x3403FE8
	0x03403FD8 MOV X21, X27
	0x03403FDC B 0x3403FE8
	0x03403FE0 B 0x3403FE8
	0x03403FE4 B 0x3403FE8
	0x03403FE8 CMP W1, 0x1
	0x03403FEC B.NE 0x3404000
	0x03403FF0 BL 0x3EB1AD0
	0x03403FF4 LDR X22, [X0]
	0x03403FF8 BL 0x3EB1AE0
	0x03403FFC B 0x3403EDC
	0x03404000 MOV X19, X0
	0x03404004 MOV X22, X31
	0x03404008 B 0x3404010
	0x0340400C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFDB000
	005 Move W8, [X20+1305]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xCF2000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0xCF2000
	015 Move X0, [X0+1744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1305], W8
	019 Move X19, [X19+24]
	020 Compare X19, 0
	021 JumpIfNotEqual {31}
	022 Move X8, 0xCF2000
	023 Move X8, [X8+1744]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xCF2000
	027 Move X8, [X8+1728]
	028 Move X19, X0
	029 Move X1, [X8]
	030 Call Dictionary`2<Object, Object>..ctor, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> get__vars()

Disassembly:
	0x03404010 CBZ X20, 0x3404074
	0x03404014 LDR X8, [X20]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set__vars(System.Collections.Generic.Dictionary`2<System.String, System.String> value)

Disassembly:
	0x03404018 ADRP X10, 0xCEF000
	0x0340401C LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x03404020 LDR X10, [X10 + 0xE00]
	0x03404024 LDR X1, [X10]
	0x03404028 CBZ X9, 0x340404C
	0x0340402C LDR X10, [X8 + 0xB0]
	0x03404030 ADD X10, X10, 0x8
	0x03404034 LDUR X11, [X10 - 0x8]
	0x03404038 CMP X11, X1
	0x0340403C B.EQ 0x340405C
	0x03404040 SUBS X9, X9, 0x1
	0x03404044 ADD X10, X10, 0x10
	0x03404048 B.NE 0x3404034
	0x0340404C MOV X0, X20
	0x03404050 MOV W2, W31
	0x03404054 BL 0x1C5C788
	0x03404058 B 0x3404068
	0x0340405C LDRSW X9, [X10]
	0x03404060 ADD X8, X8, X9, 0x4, LSL
	0x03404064 ADD X0, X8, 0x138
	0x03404068 LDP X8, X1, [X0]
	0x0340406C MOV X0, X20
	0x03404070 BLR X8
	0x03404074 CBNZ X22, 0x3404080
	0x03404078 MOV X0, X19
	0x0340407C BL 0x1D2C690
	0x03404080 MOV X0, X22
	0x03404084 BL 0x1C16F18
	0x03404088 BL 0x1990590
	0x0340408C MOV X1, X31
	0x03404090 B 0x33BDD8C
	0x03404094 LDR X0, [X0 + 0x10]
	0x03404098 RET
	0x0340409C STR X1, [X0 + 0x10]
	0x034040A0 RET
	0x034040A4 STR X30, [X31 - 0x20]!
	0x034040A8 STP X20, X19, [X31 + 0x10]
	0x034040AC ADRP X20, 0xFD9000
	0x034040B0 LDRB W8, [X20 + 0x51F]
	0x034040B4 MOV X19, X0
	0x034040B8 TBNZ X8, 0x0, 0x34040DC
	0x034040BC ADRP X0, 0xCF0000
	0x034040C0 LDR X0, [X0 + 0x6C0]
	0x034040C4 BL 0x1C16CF4
	0x034040C8 ADRP X0, 0xCF0000
	0x034040CC LDR X0, [X0 + 0x6D0]
	0x034040D0 BL 0x1C16CF4
	0x034040D4 MOVZ W8, 0x1
	0x034040D8 STRB W8, [X20 + 0x51F]
	0x034040DC LDR X19, [X19 + 0x18]
	0x034040E0 CBNZ X19, 0x3404108
	0x034040E4 ADRP X8, 0xCF0000
	0x034040E8 LDR X8, [X8 + 0x6D0]
	0x034040EC LDR X0, [X8]
	0x034040F0 BL 0x1C16F10
	0x034040F4 ADRP X8, 0xCF0000
	0x034040F8 LDR X8, [X8 + 0x6C0]
	0x034040FC MOV X19, X0
	0x03404100 LDR X1, [X8]
	0x03404104 BL 0x2AA4804
	0x03404108 MOV X0, X19
	0x0340410C LDP X20, X19, [X31 + 0x10]
	0x03404110 LDR X30, [X31], #0x20
	0x03404114 RET
	0x03404118 LDR X0, [X0 + 0x18]
	0x0340411C RET
	0x03404120 STR X1, [X0 + 0x18]
	0x03404124 RET
	0x03404128 SUB X31, X31, 0x70
	0x0340412C STP X29, X30, [X31 + 0x10]
	0x03404130 STP X28, X27, [X31 + 0x20]
	0x03404134 STP X26, X25, [X31 + 0x30]
	0x03404138 STP X24, X23, [X31 + 0x40]
	0x0340413C STP X22, X21, [X31 + 0x50]
	0x03404140 STP X20, X19, [X31 + 0x60]
	0x03404144 ADRP X23, 0xFD9000
	0x03404148 ADRP X19, 0xCEF000
	0x0340414C ADRP X21, 0xD29000
	0x03404150 ADRP X22, 0xCEF000
	0x03404154 LDRB W8, [X23 + 0x520]
	0x03404158 LDR X19, [X19 + 0x988]
	0x0340415C LDR X21, [X21 + 0xD78]
	0x03404160 LDR X22, [X22 + 0x838]
	0x03404164 MOV X20, X0
	0x03404168 TBNZ X8, 0x0, 0x3404228
	0x0340416C ADRP X0, 0xCEF000
	0x03404170 LDR X0, [X0 + 0xE00]
	0x03404174 BL 0x1C16CF4
	0x03404178 ADRP X0, 0xCF2000
	0x0340417C LDR X0, [X0 + 0x190]
	0x03404180 BL 0x1C16CF4
	0x03404184 ADRP X0, 0xCF2000
	0x03404188 LDR X0, [X0 + 0x198]
	0x0340418C BL 0x1C16CF4
	0x03404190 ADRP X0, 0xCEF000
	0x03404194 LDR X0, [X0 + 0xE18]
	0x03404198 BL 0x1C16CF4
	0x0340419C ADRP X0, 0xCF2000
	0x034041A0 LDR X0, [X0 + 0x1B0]
	0x034041A4 BL 0x1C16CF4
	0x034041A8 ADRP X0, 0xCF2000
	0x034041AC LDR X0, [X0 + 0x1B8]
	0x034041B0 BL 0x1C16CF4
	0x034041B4 ADRP X0, 0xCEF000
	0x034041B8 LDR X0, [X0 + 0xAC8]
	0x034041BC BL 0x1C16CF4
	0x034041C0 ADRP X0, 0xD1C000
	0x034041C4 LDR X0, [X0 + 0x360]
	0x034041C8 BL 0x1C16CF4
	0x034041CC ADRP X0, 0xD1C000
	0x034041D0 LDR X0, [X0 + 0xFB8]
	0x034041D4 BL 0x1C16CF4
	0x034041D8 ADRP X0, 0xCFA000
	0x034041DC LDR X0, [X0 + 0x6D8]
	0x034041E0 BL 0x1C16CF4
	0x034041E4 ADRP X0, 0xD29000
	0x034041E8 LDR X0, [X0 + 0xD80]
	0x034041EC BL 0x1C16CF4
	0x034041F0 ADRP X0, 0xCEF000
	0x034041F4 LDR X0, [X0 + 0x838]
	0x034041F8 BL 0x1C16CF4
	0x034041FC ADRP X0, 0xD29000
	0x03404200 LDR X0, [X0 + 0xD78]
	0x03404204 BL 0x1C16CF4
	0x03404208 ADRP X0, 0xCEF000
	0x0340420C LDR X0, [X0 + 0x988]
	0x03404210 BL 0x1C16CF4
	0x03404214 ADRP X0, 0xCEF000
	0x03404218 LDR X0, [X0 + 0x848]
	0x0340421C BL 0x1C16CF4
	0x03404220 MOVZ W8, 0x1
	0x03404224 STRB W8, [X23 + 0x520]
	0x03404228 LDR X0, [X19]
	0x0340422C LDR X2, [X20 + 0x10]
	0x03404230 LDR X1, [X21]
	0x03404234 LDR X3, [X22]
	0x03404238 MOV X4, X31
	0x0340423C BL 0x32277C4
	0x03404240 LDR X27, [X19]
	0x03404244 STR X0, [X31 + 0x8]
	0x03404248 MOV X0, X20
	0x0340424C BL 0x34040A4
	0x03404250 CBZ X0, 0x3404500
	0x03404254 ADRP X10, 0xCF2000
	0x03404258 LDR X8, [X0]
	0x0340425C LDR X10, [X10 + 0x190]
	0x03404260 MOV X20, X0
	0x03404264 LDRH W9, [X8 + 0x12E]
	0x03404268 LDR X1, [X10]
	0x0340426C CBZ X9, 0x3404290
	0x03404270 LDR X10, [X8 + 0xB0]
	0x03404274 ADD X10, X10, 0x8
	0x03404278 LDUR X11, [X10 - 0x8]
	0x0340427C CMP X11, X1
	0x03404280 B.EQ 0x34042A0
	0x03404284 SUBS X9, X9, 0x1
	0x03404288 ADD X10, X10, 0x10
	0x0340428C B.NE 0x3404278
	0x03404290 MOV X0, X20
	0x03404294 MOV W2, W31
	0x03404298 BL 0x1C5C788
	0x0340429C B 0x34042AC
	0x034042A0 LDRSW X9, [X10]
	0x034042A4 ADD X8, X8, X9, 0x4, LSL
	0x034042A8 ADD X0, X8, 0x138
	0x034042AC ADRP X28, 0xCEF000
	0x034042B0 ADRP X29, 0xCF2000
	0x034042B4 ADRP X26, 0xCEF000
	0x034042B8 ADRP X24, 0xD1C000
	0x034042BC ADRP X25, 0xD1C000
	0x034042C0 ADRP X19, 0xCFA000
	0x034042C4 LDR X28, [X28 + 0xE18]
	0x034042C8 LDR X29, [X29 + 0x198]
	0x034042CC LDR X26, [X26 + 0xAC8]
	0x034042D0 LDR X24, [X24 + 0x360]
	0x034042D4 LDR X25, [X25 + 0xFB8]
	0x034042D8 LDR X19, [X19 + 0x6D8]
	0x034042DC LDP X8, X1, [X0]
	0x034042E0 MOV X0, X20
	0x034042E4 BLR X8
	0x034042E8 MOV X20, X0
	0x034042EC MOV X0, X27
	0x034042F0 CBZ X20, 0x34044E4
	0x034042F4 LDR X8, [X20]
	0x034042F8 LDR X1, [X28]
	0x034042FC MOV X21, X0
	0x03404300 LDRH W9, [X8 + 0x12E]
	0x03404304 CBZ X9, 0x3404328
	0x03404308 LDR X10, [X8 + 0xB0]
	0x0340430C ADD X10, X10, 0x8
	0x03404310 LDUR X11, [X10 - 0x8]
	0x03404314 CMP X11, X1
	0x03404318 B.EQ 0x3404338
	0x0340431C SUBS X9, X9, 0x1
	0x03404320 ADD X10, X10, 0x10
	0x03404324 B.NE 0x3404310
	0x03404328 MOV X0, X20
	0x0340432C MOV W2, W31
	0x03404330 BL 0x1C5C788
	0x03404334 B 0x3404344
	0x03404338 LDRSW X9, [X10]
	0x0340433C ADD X8, X8, X9, 0x4, LSL
	0x03404340 ADD X0, X8, 0x138
	0x03404344 LDP X8, X1, [X0]
	0x03404348 MOV X0, X20
	0x0340434C BLR X8
	0x03404350 TBZ X0, 0x0, 0x3404428
	0x03404354 LDR X8, [X20]
	0x03404358 LDR X1, [X29]
	0x0340435C LDRH W9, [X8 + 0x12E]
	0x03404360 CBZ X9, 0x3404384
	0x03404364 LDR X10, [X8 + 0xB0]
	0x03404368 ADD X10, X10, 0x8
	0x0340436C LDUR X11, [X10 - 0x8]
	0x03404370 CMP X11, X1
	0x03404374 B.EQ 0x3404394
	0x03404378 SUBS X9, X9, 0x1
	0x0340437C ADD X10, X10, 0x10
	0x03404380 B.NE 0x340436C
	0x03404384 MOV X0, X20
	0x03404388 MOV W2, W31
	0x0340438C BL 0x1C5C788
	0x03404390 B 0x34043A0
	0x03404394 LDRSW X9, [X10]
	0x03404398 ADD X8, X8, X9, 0x4, LSL
	0x0340439C ADD X0, X8, 0x138
	0x034043A0 LDP X8, X1, [X0]
	0x034043A4 MOV X0, X20
	0x034043A8 BLR X8
	0x034043AC MOV X23, X0
	0x034043B0 LDR X0, [X26]
	0x034043B4 MOV X22, X1
	0x034043B8 MOVZ W1, 0x5
	0x034043BC BL 0x1C16D6C
	0x034043C0 CBZ X0, 0x34044EC
	0x034043C4 LDR W8, [X0 + 0x18]
	0x034043C8 CBZ W8, 0x34044F4
	0x034043CC LDR X9, [X24]
	0x034043D0 CMP W8, 0x1
	0x034043D4 STR X9, [X0 + 0x20]
	0x034043D8 B.EQ 0x34044E8
	0x034043DC CMP W8, 0x2
	0x034043E0 STR X23, [X0 + 0x28]
	0x034043E4 B.LS 0x34044F8
	0x034043E8 LDR X9, [X25]
	0x034043EC CMP W8, 0x3
	0x034043F0 STR X9, [X0 + 0x30]
	0x034043F4 B.EQ 0x34044FC
	0x034043F8 CMP W8, 0x4
	0x034043FC STR X22, [X0 + 0x38]
	0x03404400 B.LS 0x34044F0
	0x03404404 LDR X8, [X19]
	0x03404408 STR X8, [X0 + 0x40]
	0x0340440C MOV X1, X31
	0x03404410 BL 0x32278CC
	0x03404414 MOV X1, X0
	0x03404418 MOV X0, X21
	0x0340441C MOV X2, X31
	0x03404420 BL 0x321B938
	0x03404424 B 0x34042F0
	0x03404428 MOV X22, X31
	0x0340442C CBZ X20, 0x3404490
	0x03404430 LDR X8, [X20]
	0x03404434 ADRP X10, 0xCEF000
	0x03404438 LDRH W9, [X8 + 0x12E]
	0x0340443C LDR X10, [X10 + 0xE00]
	0x03404440 LDR X1, [X10]
	0x03404444 CBZ X9, 0x3404468
	0x03404448 LDR X10, [X8 + 0xB0]
	0x0340444C ADD X10, X10, 0x8
	0x03404450 LDUR X11, [X10 - 0x8]
	0x03404454 CMP X11, X1
	0x03404458 B.EQ 0x3404478
	0x0340445C SUBS X9, X9, 0x1
	0x03404460 ADD X10, X10, 0x10
	0x03404464 B.NE 0x3404450
	0x03404468 MOV X0, X20
	0x0340446C MOV W2, W31
	0x03404470 BL 0x1C5C788
	0x03404474 B 0x3404484
	0x03404478 LDRSW X9, [X10]
	0x0340447C ADD X8, X8, X9, 0x4, LSL
	0x03404480 ADD X0, X8, 0x138
	0x03404484 LDP X8, X1, [X0]
	0x03404488 MOV X0, X20
	0x0340448C BLR X8
	0x03404490 CBNZ X22, 0x3404504
	0x03404494 ADRP X8, 0xD29000
	0x03404498 LDR X8, [X8 + 0xD80]
	0x0340449C MOV X1, X21
	0x034044A0 MOV X3, X31
	0x034044A4 LDR X0, [X8]
	0x034044A8 ADRP X8, 0xCEF000
	0x034044AC LDR X8, [X8 + 0x848]
	0x034044B0 LDR X2, [X8]
	0x034044B4 BL 0x32274B8
	0x034044B8 MOV X1, X0
	0x034044BC LDR X0, [X31 + 0x8]
	0x034044C0 LDP X20, X19, [X31 + 0x60]
	0x034044C4 LDP X22, X21, [X31 + 0x50]
	0x034044C8 LDP X24, X23, [X31 + 0x40]
	0x034044CC LDP X26, X25, [X31 + 0x30]
	0x034044D0 LDP X28, X27, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xFDA000
	015 Move X19, 0xCF0000
	016 Move X21, 0xD2A000
	017 Move X22, 0xCF0000
	018 Move W8, [X23+1306]
	019 Move X19, [X19+2440]
	020 Move X21, [X21+3480]
	021 Move X22, [X22+2104]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xCF0000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xCF3000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0xCF3000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0xCF0000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0xCF3000
	040 Move X0, [X0+432]
	041 Call 0x1C17CF4
	042 Move X0, 0xCF3000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xCF0000
	046 Move X0, [X0+2760]
	047 Call 0x1C17CF4
	048 Move X0, 0xD1D000
	049 Move X0, [X0+864]
	050 Call 0x1C17CF4
	051 Move X0, 0xD1D000
	052 Move X0, [X0+4024]
	053 Call 0x1C17CF4
	054 Move X0, 0xD2A000
	055 Move X0, [X0+3480]
	056 Call 0x1C17CF4
	057 Move X0, 0xCFB000
	058 Move X0, [X0+1752]
	059 Call 0x1C17CF4
	060 Move X0, 0xD2A000
	061 Move X0, [X0+3456]
	062 Call 0x1C17CF4
	063 Move X0, 0xCF0000
	064 Move X0, [X0+2104]
	065 Call 0x1C17CF4
	066 Move X0, 0xCF0000
	067 Move X0, [X0+2440]
	068 Call 0x1C17CF4
	069 Move X0, 0xCF0000
	070 Move X0, [X0+2120]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+1306], W8
	074 Move X0, [X19]
	075 Move X2, [X20+16]
	076 Move X1, [X21]
	077 Move X3, [X22]
	078 Move X4, X31
	079 Call String.Concat, X0, X1, X2, X3
	080 Move X27, [X19]
	081 Move [X31+8], X0
	082 Move X0, X20
	083 Call ApiAccountFacebookInstantGame.get_Vars, X0
	084 Compare X0, 0
	085 JumpIfEqual {263}
	086 Move X10, 0xCF3000
	087 Move X8, [X0]
	088 Move X10, [X10+400]
	089 Move X20, X0
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X28, 0xCF0000
	107 Move X29, 0xCF3000
	108 Move X26, 0xCF0000
	109 Move X24, 0xD1D000
	110 Move X25, 0xD1D000
	111 Move X19, 0xCFB000
	112 Move X28, [X28+3608]
	113 Move X29, [X29+408]
	114 Move X26, [X26+2760]
	115 Move X24, [X24+864]
	116 Move X25, [X25+4024]
	117 Move X19, [X19+1752]
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X20, X0
	123 Move X0, X27
	124 Compare X20, 0
	125 JumpIfEqual {256}
	126 Move X8, [X20]
	127 Move X1, [X28]
	128 Move X21, X0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {201}
	152 Move X8, [X20]
	153 Move X1, [X29]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X20
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X20
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X23, X0
	174 Move X0, [X26]
	175 Move X22, X1
	176 Move W1, 5
	177 Call 0x1C17D6C
	178 Compare X0, 0
	179 JumpIfEqual {258}
	180 Move W8, [X0+24]
	181 Compare W8, 0
	182 JumpIfEqual {260}
	183 Move X9, [X24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X0+32], X9
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X0+40], X23
	188 Move X9, [X25]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X0+48], X9
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X0+56], X22
	193 Move X8, [X19]
	194 Move [X0+64], X8
	195 Move X1, X31
	196 Call String.Concat, X0
	197 Move X1, X0
	198 Move X0, X21
	199 Move X2, X31
	200 Call String.Concat, X0, X1
	201 Move X22, X31
	202 Compare X20, 0
	203 JumpIfEqual {227}
	204 Move X8, [X20]
	205 Move X10, 0xCF0000
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Move X10, [X10+3584]
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X20
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X22, 0
	228 JumpIfNotEqual {264}
	229 Move X8, 0xD2A000
	230 Move X8, [X8+3456]
	231 Move X1, X21
	232 Move X3, X31
	233 Move X0, [X8]
	234 Move X8, 0xCF0000
	235 Move X8, [X8+2120]
	236 Move X2, [X8]
	237 Call String.Concat, X0, X1, X2
	238 Move X1, X0
	239 Move X0, [X31+8]
	240 Move X20, [X31+96]
	241 Move X19, [X31+104]
	242 Move X22, [X31+80]
	243 Move X21, [X31+88]
	244 Move X24, [X31+64]
	245 Move X23, [X31+72]
	246 Move X26, [X31+48]
	247 Move X25, [X31+56]
	248 Move X28, [X31+32]
	249 Move X27, [X31+40]
	250 Move X29, [X31+16]
	251 Move X30, [X31+24]
	252 Move X2, X31
	253 Add X31, X31, 112
	254 Call String.Concat, X0, X1
	255 Return X0
	256 Call 0x1C17F20
	257 Call 0x1C17F28
	258 Call 0x1C17F20
	259 Call 0x1C17F28
	260 Call 0x1C17F28
	261 Call 0x1C17F28
	262 Call 0x1C17F28
	263 Call 0x1C17F20
	264 Move X0, X22
	265 Call 0x1C17F18
	266 Move X21, X27
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Call 0x3EB2AD0
	269 Move X22, [X0]
	270 Call 0x3EB2AE0
	271 Move X19, X0
	272 Move X22, X31
	273 Move X19, X0
	274 Compare X20, 0
	275 JumpIfEqual {299}
	276 Move X8, [X20]
	277 Move X10, 0xCF0000
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Move X10, [X10+3584]
	280 Move X1, [X10]
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X20
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X20
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X22, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X19
	302 Call 0x1D2D690
	303 Move X0, X22
	304 Call 0x1C17F18
	305 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x034044D4 LDP X29, X30, [X31 + 0x10]
	0x034044D8 MOV X2, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

