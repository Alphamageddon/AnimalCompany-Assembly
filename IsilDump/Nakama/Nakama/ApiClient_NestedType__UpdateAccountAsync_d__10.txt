Type: Nakama.ApiClient/<UpdateAccountAsync>d__10

Method: System.Void MoveNext()

Disassembly:
	0x0343ADE4 LDR X1, [X8]
	0x0343ADE8 BL 0x2677474
	0x0343ADEC ADRP X8, 0xCF5000
	0x0343ADF0 LDR X8, [X8 + 0x460]
	0x0343ADF4 LDR X1, [X8]
	0x0343ADF8 BL 0x220E6DC
	0x0343ADFC MOVN W8, 0x1
	0x0343AE00 STR W8, [X19], #0x8
	0x0343AE04 MOV X20, X0
	0x0343AE08 LDR X0, [X28]
	0x0343AE0C ADRP X21, 0xCF5000
	0x0343AE10 LDR W8, [X0 + 0xE0]
	0x0343AE14 LDR X21, [X21 + 0x458]
	0x0343AE18 CBNZ W8, 0x343AE20
	0x0343AE1C BL 0x1C16DFC
	0x0343AE20 LDR X2, [X21]
	0x0343AE24 MOV X0, X19
	0x0343AE28 MOV X1, X20
	0x0343AE2C BL 0x26322B0
	0x0343AE30 B 0x343AE6C
	0x0343AE34 STR W31, [X19]
	0x0343AE38 LDR X8, [X31 + 0x18]
	0x0343AE3C STR X8, [X19 + 0x48]
	0x0343AE40 LDR X0, [X28]
	0x0343AE44 LDR W8, [X0 + 0xE0]
	0x0343AE48 CBNZ W8, 0x343AE50
	0x0343AE4C BL 0x1C16DFC
	0x0343AE50 ADRP X8, 0xCF5000
	0x0343AE54 LDR X8, [X8 + 0x450]
	0x0343AE58 ADD X0, X19, 0x8
	0x0343AE5C LDR X3, [X8]
	0x0343AE60 ADD X1, X31, 0x18
	0x0343AE64 MOV X2, X19
	0x0343AE68 BL 0x1FB5AD8
	0x0343AE6C LDP X20, X19, [X31 + 0x60]
	0x0343AE70 LDP X22, X21, [X31 + 0x50]
	0x0343AE74 LDP X24, X23, [X31 + 0x40]
	0x0343AE78 LDP X26, X25, [X31 + 0x30]
	0x0343AE7C LDP X28, X27, [X31 + 0x20]
	0x0343AE80 LDR X30, [X31 + 0x10]
	0x0343AE84 ADD X31, X31, 0x70
	0x0343AE88 RET
	0x0343AE8C ADRP X0, 0xCC1000
	0x0343AE90 LDR X0, [X0 + 0x578]
	0x0343AE94 BL 0x1C16D08
	0x0343AE98 BL 0x1C16F10
	0x0343AE9C MOV X20, X0
	0x0343AEA0 ADRP X0, 0xCF4000
	0x0343AEA4 LDR X0, [X0 + 0xBC8]
	0x0343AEA8 BL 0x1C16D08
	0x0343AEAC MOV X1, X0
	0x0343AEB0 MOV X0, X20
	0x0343AEB4 MOV X2, X31
	0x0343AEB8 BL 0x3314A68
	0x0343AEBC ADRP X0, 0xCF5000
	0x0343AEC0 LDR X0, [X0 + 0x470]
	0x0343AEC4 BL 0x1C16D08
	0x0343AEC8 MOV X1, X0
	0x0343AECC MOV X0, X20
	0x0343AED0 BL 0x1C16DEC
	0x0343AED4 BL 0x1C16F20
	0x0343AED8 BL 0x1C16F20
	0x0343AEDC BL 0x1C16F20
	0x0343AEE0 BL 0x1C16F28
	0x0343AEE4 BL 0x1C16F20
	0x0343AEE8 BL 0x1C16F20
	0x0343AEEC BL 0x1C16F20
	0x0343AEF0 BL 0x1C16F20
	0x0343AEF4 BL 0x1C16F20
	0x0343AEF8 BL 0x1C16F20
	0x0343AEFC B 0x343AF60
	0x0343AF00 B 0x343AF60
	0x0343AF04 B 0x343AF60
	0x0343AF08 B 0x343AF60
	0x0343AF0C B 0x343AF60
	0x0343AF10 B 0x343AF60
	0x0343AF14 B 0x343AF60
	0x0343AF18 B 0x343AF60
	0x0343AF1C B 0x343AF60
	0x0343AF20 B 0x343AF60
	0x0343AF24 B 0x343AF60
	0x0343AF28 B 0x343AF60
	0x0343AF2C B 0x343AF60
	0x0343AF30 B 0x343AF60
	0x0343AF34 B 0x343AF60
	0x0343AF38 B 0x343AF60
	0x0343AF3C B 0x343AF60
	0x0343AF40 B 0x343AF60
	0x0343AF44 B 0x343AF60
	0x0343AF48 B 0x343AF60
	0x0343AF4C B 0x343AF60
	0x0343AF50 B 0x343AF60
	0x0343AF54 B 0x343AF60
	0x0343AF58 B 0x343AF60
	0x0343AF5C B 0x343AF60
	0x0343AF60 MOV X20, X0
	0x0343AF64 CMP W1, 0x1
	0x0343AF68 B.NE 0x343B004
	0x0343AF6C MOV X0, X20
	0x0343AF70 BL 0x3EB1AD0
	0x0343AF74 MOV X20, X0
	0x0343AF78 ADRP X0, 0xCB9000
	0x0343AF7C LDR X0, [X0 + 0x7D0]
	0x0343AF80 BL 0x1C16D08
	0x0343AF84 LDR X8, [X20]
	0x0343AF88 LDR X1, [X8]
	0x0343AF8C BL 0x1C17270
	0x0343AF90 TBZ X0, 0x0, 0x343AFDC
	0x0343AF94 LDR X20, [X20]
	0x0343AF98 BL 0x3EB1AE0
	0x0343AF9C MOVN W8, 0x1
	0x0343AFA0 STR W8, [X19], #0x8
	0x0343AFA4 ADRP X0, 0xCF4000
	0x0343AFA8 LDR X0, [X0 + 0x530]
	0x0343AFAC BL 0x1C16D08
	0x0343AFB0 LDR W8, [X0 + 0xE0]
	0x0343AFB4 CBNZ W8, 0x343AFBC
	0x0343AFB8 BL 0x1C16DFC
	0x0343AFBC ADRP X0, 0xCF5000
	0x0343AFC0 LDR X0, [X0 + 0x478]
	0x0343AFC4 BL 0x1C16D08
	0x0343AFC8 MOV X2, X0
	0x0343AFCC MOV X0, X19
	0x0343AFD0 MOV X1, X20
	0x0343AFD4 BL 0x26324C8
	0x0343AFD8 B 0x343AE6C
	0x0343AFDC MOVZ W0, 0x8
	0x0343AFE0 BL 0x3EB1AF0
	0x0343AFE4 LDR X8, [X20]
	0x0343AFE8 STR X8, [X0]
	0x0343AFEC ADRP X1, 0xA7A000
	0x0343AFF0 ADD X1, X1, 0xE58
	0x0343AFF4 MOV X2, X31
	0x0343AFF8 BL 0x3EB1B00
	0x0343AFFC MOV X20, X0
	0x0343B000 BL 0x3EB1AE0
	0x0343B004 MOV X0, X20
	0x0343B008 BL 0x1D2C690
	0x0343B00C BL 0x1990590
	0x0343B010 STR X30, [X31 - 0x30]!
	0x0343B014 STP X22, X21, [X31 + 0x10]
	0x0343B018 STP X20, X19, [X31 + 0x20]
	0x0343B01C ADRP X22, 0xFA2000
	0x0343B020 ADRP X21, 0xCF3000
	0x0343B024 LDRB W8, [X22 + 0x68C]
	0x0343B028 LDR X21, [X21 + 0x530]
	0x0343B02C MOV X19, X1
	0x0343B030 MOV X20, X0
	0x0343B034 TBNZ X8, 0x0, 0x343B058
	0x0343B038 ADRP X0, 0xCF4000
	0x0343B03C LDR X0, [X0 + 0x480]
	0x0343B040 BL 0x1C16CF4
	0x0343B044 ADRP X0, 0xCF3000
	0x0343B048 LDR X0, [X0 + 0x530]
	0x0343B04C BL 0x1C16CF4
	0x0343B050 MOVZ W8, 0x1
	0x0343B054 STRB W8, [X22 + 0x68C]
	0x0343B058 LDR X0, [X21]
	0x0343B05C ADRP X21, 0xCF4000
	0x0343B060 LDR W8, [X0 + 0xE0]
	0x0343B064 LDR X21, [X21 + 0x480]
	0x0343B068 CBNZ W8, 0x343B070
	0x0343B06C BL 0x1C16DFC
	0x0343B070 LDR X2, [X21]
	0x0343B074 ADD X0, X20, 0x8
	0x0343B078 MOV X1, X19
	0x0343B07C LDP X20, X19, [X31 + 0x20]
	0x0343B080 LDP X22, X21, [X31 + 0x10]
	0x0343B084 LDR X30, [X31], #0x30
	0x0343B088 B 0x2632228
	0x0343B08C SUB X31, X31, 0x70
	0x0343B090 STR X30, [X31 + 0x10]
	0x0343B094 STP X28, X27, [X31 + 0x20]
	0x0343B098 STP X26, X25, [X31 + 0x30]
	0x0343B09C STP X24, X23, [X31 + 0x40]
	0x0343B0A0 STP X22, X21, [X31 + 0x50]
	0x0343B0A4 STP X20, X19, [X31 + 0x60]
	0x0343B0A8 ADRP X20, 0xFA2000
	0x0343B0AC LDRB W8, [X20 + 0x68D]
	0x0343B0B0 MOV X19, X0
	0x0343B0B4 TBNZ X8, 0x0, 0x343B198
	0x0343B0B8 ADRP X0, 0xCF4000
	0x0343B0BC LDR X0, [X0 + 0x488]
	0x0343B0C0 BL 0x1C16CF4
	0x0343B0C4 ADRP X0, 0xCF4000
	0x0343B0C8 LDR X0, [X0 + 0x458]
	0x0343B0CC BL 0x1C16CF4
	0x0343B0D0 ADRP X0, 0xCF3000
	0x0343B0D4 LDR X0, [X0 + 0x530]
	0x0343B0D8 BL 0x1C16CF4
	0x0343B0DC ADRP X0, 0xCC1000
	0x0343B0E0 LDR X0, [X0 + 0x8D8]
	0x0343B0E4 BL 0x1C16CF4
	0x0343B0E8 ADRP X0, 0xCB9000
	0x0343B0EC LDR X0, [X0 + 0x810]
	0x0343B0F0 BL 0x1C16CF4
	0x0343B0F4 ADRP X0, 0xCB9000
	0x0343B0F8 LDR X0, [X0 + 0x6C0]
	0x0343B0FC BL 0x1C16CF4
	0x0343B100 ADRP X0, 0xCB9000
	0x0343B104 LDR X0, [X0 + 0x6D0]
	0x0343B108 BL 0x1C16CF4
	0x0343B10C ADRP X0, 0xCF3000
	0x0343B110 LDR X0, [X0 + 0x7B8]
	0x0343B114 BL 0x1C16CF4
	0x0343B118 ADRP X0, 0xCF4000
	0x0343B11C LDR X0, [X0 + 0x460]
	0x0343B120 BL 0x1C16CF4
	0x0343B124 ADRP X0, 0xCBB000
	0x0343B128 LDR X0, [X0 + 0x1E0]
	0x0343B12C BL 0x1C16CF4
	0x0343B130 ADRP X0, 0xCBB000
	0x0343B134 LDR X0, [X0 + 0x1F0]
	0x0343B138 BL 0x1C16CF4
	0x0343B13C ADRP X0, 0xCBB000
	0x0343B140 LDR X0, [X0 + 0x1F8]
	0x0343B144 BL 0x1C16CF4
	0x0343B148 ADRP X0, 0xCC1000
	0x0343B14C LDR X0, [X0 + 0x3A0]
	0x0343B150 BL 0x1C16CF4
	0x0343B154 ADRP X0, 0xCE1000
	0x0343B158 LDR X0, [X0 + 0x4D8]
	0x0343B15C BL 0x1C16CF4
	0x0343B160 ADRP X0, 0xCF3000
	0x0343B164 LDR X0, [X0 + 0x7D0]
	0x0343B168 BL 0x1C16CF4
	0x0343B16C ADRP X0, 0xCF4000
	0x0343B170 LDR X0, [X0 + 0x490]
	0x0343B174 BL 0x1C16CF4
	0x0343B178 ADRP X0, 0xCF3000
	0x0343B17C LDR X0, [X0 + 0x7D8]
	0x0343B180 BL 0x1C16CF4
	0x0343B184 ADRP X0, 0xCB8000
	0x0343B188 LDR X0, [X0 + 0x988]
	0x0343B18C BL 0x1C16CF4
	0x0343B190 MOVZ W8, 0x1
	0x0343B194 STRB W8, [X20 + 0x68D]
	0x0343B198 STR X31, [X31 + 0x18]
	0x0343B19C ADRP X28, 0xCF3000
	0x0343B1A0 LDR W8, [X19]
	0x0343B1A4 LDR X28, [X28 + 0x530]
	0x0343B1A8 CBZ W8, 0x343B388
	0x0343B1AC LDR X8, [X19 + 0x20]
	0x0343B1B0 CBZ X8, 0x343B4C0
	0x0343B1B4 LDR X25, [X19 + 0x28]
	0x0343B1B8 CBZ X25, 0x343B508
	0x0343B1BC LDR X0, [X25 + 0x20]
	0x0343B1C0 CBZ X0, 0x343B50C
	0x0343B1C4 ADRP X8, 0xCF4000
	0x0343B1C8 ADRP X9, 0xCB8000
	0x0343B1CC LDR X8, [X8 + 0x490]
	0x0343B1D0 LDR X9, [X9 + 0x988]
	0x0343B1D4 LDR X21, [X8]
	0x0343B1D8 LDR X20, [X9]
	0x0343B1DC MOV X1, X31
	0x0343B1E0 BL 0x361B448
	0x0343B1E4 ADRP X8, 0xCC1000
	0x0343B1E8 LDR X8, [X8 + 0x8D8]
	0x0343B1EC MOV X22, X0
	0x0343B1F0 LDR X0, [X8]
	0x0343B1F4 MOVZ W1, 0x1
	0x0343B1F8 BL 0x1C16D6C
	0x0343B1FC MOV X1, X0
	0x0343B200 CBZ X1, 0x343B510
	0x0343B204 LDR W8, [X1 + 0x18]
	0x0343B208 CBZ W8, 0x343B514
	0x0343B20C MOVZ W8, 0x2F
	0x0343B210 STRH W8, [X1 + 0x20]
	0x0343B214 CBZ X22, 0x343B518
	0x0343B218 MOV X0, X22
	0x0343B21C MOV X2, X31
	0x0343B220 BL 0x322BC58
	0x0343B224 MOV X1, X21
	0x0343B228 MOV X2, X31
	0x0343B22C BL 0x321B938
	0x0343B230 ADRP X8, 0xCC1000
	0x0343B234 LDR X8, [X8 + 0x3A0]
	0x0343B238 MOV X22, X0
	0x0343B23C LDR X23, [X25 + 0x20]
	0x0343B240 LDR X0, [X8]
	0x0343B244 BL 0x1C16F10
	0x0343B248 MOV X21, X0
	0x0343B24C MOV X1, X23
	0x0343B250 MOV X2, X31
	0x0343B254 BL 0x36281F8
	0x0343B258 CBZ X21, 0x343B51C
	0x0343B25C MOV X0, X21
	0x0343B260 MOV X1, X22
	0x0343B264 MOV X2, X31
	0x0343B268 BL 0x36288CC
	0x0343B26C MOV X0, X21
	0x0343B270 MOV X1, X20
	0x0343B274 MOV X2, X31
	0x0343B278 BL 0x3628980
	0x0343B27C MOV X0, X21
	0x0343B280 MOV X1, X31
	0x0343B284 BL 0x3628A38
	0x0343B288 ADRP X8, 0xCE1000
	0x0343B28C ADRP X9, 0xCB9000
	0x0343B290 LDR X8, [X8 + 0x4D8]
	0x0343B294 LDR X9, [X9 + 0x6D0]
	0x0343B298 MOV X20, X0
	0x0343B29C LDR X21, [X8]
	0x0343B2A0 LDR X0, [X9]
	0x0343B2A4 BL 0x1C16F10
	0x0343B2A8 ADRP X8, 0xCB9000
	0x0343B2AC LDR X8, [X8 + 0x6C0]
	0x0343B2B0 MOV X22, X0
	0x0343B2B4 LDR X1, [X8]
	0x0343B2B8 BL 0x2AA4804
	0x0343B2BC ADRP X8, 0xCF3000
	0x0343B2C0 LDR X8, [X8 + 0x7D8]
	0x0343B2C4 LDR X1, [X19 + 0x30]
	0x0343B2C8 LDR X0, [X8]
	0x0343B2CC MOV X2, X31
	0x0343B2D0 BL 0x321B938
	0x0343B2D4 CBZ X22, 0x343B520
	0x0343B2D8 ADRP X8, 0xCF3000
	0x0343B2DC LDR X8, [X8 + 0x7D0]
	0x0343B2E0 ADRP X9, 0xCB9000
	0x0343B2E4 LDR X9, [X9 + 0x810]
	0x0343B2E8 MOV X2, X0
	0x0343B2EC LDR X1, [X8]
	0x0343B2F0 LDR X3, [X9]
	0x0343B2F4 MOV X0, X22
	0x0343B2F8 BL 0x2AA5098
	0x0343B2FC LDR X0, [X19 + 0x20]
	0x0343B300 MOV X1, X31
	0x0343B304 BL 0x3483BE4
	0x0343B308 MOV X23, X0
	0x0343B30C MOV X0, X31
	0x0343B310 BL 0x3241948
	0x0343B314 CBZ X0, 0x343B524
	0x0343B318 LDR X8, [X0]
	0x0343B31C LDR X9, [X8 + 0x268]
	0x0343B320 LDR X2, [X8 + 0x270]
	0x0343B324 MOV X1, X23
	0x0343B328 BLR X9
	0x0343B32C LDR X24, [X25 + 0x10]
	0x0343B330 CBZ X24, 0x343B528
	0x0343B334 ADRP X10, 0xCF3000
	0x0343B338 LDR X10, [X10 + 0x7B8]
	0x0343B33C LDR X8, [X24]
	0x0343B340 LDR W26, [X25 + 0x18]
	0x0343B344 LDP X27, X25, [X19 + 0x38]
	0x0343B348 LDR X1, [X10]
	0x0343B34C LDRH W9, [X8 + 0x12E]
	0x0343B350 MOV X23, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA4000
	014 Move W8, [X20+1671]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xCF6000
	021 Move X0, [X0+1072]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBD000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC3000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBB000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBB000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBB000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF5000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBD000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCBD000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBD000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC3000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE3000
	054 Move X0, [X0+1248]
	055 Call 0x1C17CF4
	056 Move X0, 0xCF5000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF5000
	060 Move X0, [X0+2008]
	061 Call 0x1C17CF4
	062 Move X0, 0xCF5000
	063 Move X0, [X0+3056]
	064 Call 0x1C17CF4
	065 Move X0, 0xCBA000
	066 Move X0, [X0+2440]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1671], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCBD000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xCF5000
	086 Move X9, 0xCBA000
	087 Move X8, [X8+3056]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCC3000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCC3000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCE3000
	139 Move X9, 0xCBB000
	140 Move X8, [X8+1248]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCBB000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xCF5000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xCF4000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCBA000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xCF4000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCBC000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCBC000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCBC000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xCF5000
	269 Move X8, [X8+1072]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCC1000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xCF4000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xCF5000
	301 Move X0, [X0+1080]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCB9000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCBC000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA7A000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0343B354 CBZ X9, 0x343B378
	0x0343B358 LDR X10, [X8 + 0xB0]
	0x0343B35C ADD X10, X10, 0x8
	0x0343B360 LDUR X11, [X10 - 0x8]
	0x0343B364 CMP X11, X1
	0x0343B368 B.EQ 0x343B3A0
	0x0343B36C SUBS X9, X9, 0x1
	0x0343B370 ADD X10, X10, 0x10
	0x0343B374 B.NE 0x343B360
	0x0343B378 MOVZ W2, 0x3
	0x0343B37C MOV X0, X24
	0x0343B380 BL 0x1C5C788
	0x0343B384 B 0x343B3B0
	0x0343B388 LDR X8, [X19 + 0x48]
	0x0343B38C MOVN W9, 0x0
	0x0343B390 STR X8, [X31 + 0x18]
	0x0343B394 STR X31, [X19 + 0x48]
	0x0343B398 STR W9, [X19]
	0x0343B39C B 0x343B40C
	0x0343B3A0 LDR W9, [X10]
	0x0343B3A4 ADD W9, W9, 0x3
	0x0343B3A8 ADD X8, X8, W9, 0x4, SXTW
	0x0343B3AC ADD X0, X8, 0x138
	0x0343B3B0 LDP X8, X9, [X0]
	0x0343B3B4 MOV X0, X24
	0x0343B3B8 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA3000
	007 Move X22, 0xCBC000
	008 Move W8, [X21+1672]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCBC000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1672], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

