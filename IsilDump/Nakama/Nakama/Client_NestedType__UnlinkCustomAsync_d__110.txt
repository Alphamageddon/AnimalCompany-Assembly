Type: Nakama.Client/<UnlinkCustomAsync>d__110

Method: System.Void MoveNext()

Disassembly:
	0x03469D14 LDR X8, [X8 + 0x838]
	0x03469D18 STR X0, [X31 + 0x20]
	0x03469D1C LDR X1, [X8]
	0x03469D20 ADD X0, X31, 0x20
	0x03469D24 BL 0x2677430
	0x03469D28 TBNZ X0, 0x0, 0x3469B20
	0x03469D2C STR W31, [X19]
	0x03469D30 LDR X8, [X31 + 0x20]
	0x03469D34 STR X8, [X19 + 0x58]
	0x03469D38 LDR X0, [X25]
	0x03469D3C LDR W8, [X0 + 0xE0]
	0x03469D40 CBNZ W8, 0x3469D48
	0x03469D44 BL 0x1C16DFC
	0x03469D48 ADRP X8, 0xCC7000
	0x03469D4C LDR X8, [X8 + 0x500]
	0x03469D50 ADD X0, X19, 0x8
	0x03469D54 LDR X3, [X8]
	0x03469D58 ADD X1, X31, 0x20
	0x03469D5C MOV X2, X19
	0x03469D60 BL 0x2188E10
	0x03469D64 B 0x3469EA4
	0x03469D68 CBZ X20, 0x3469EC8
	0x03469D6C ADRP X8, 0xC92000
	0x03469D70 LDR X8, [X8 + 0x818]
	0x03469D74 LDR X21, [X20 + 0x58]
	0x03469D78 LDR X23, [X19 + 0x50]
	0x03469D7C LDR X0, [X8]
	0x03469D80 BL 0x1C16F10
	0x03469D84 ADRP X8, 0xCC7000
	0x03469D88 LDR X8, [X8 + 0x510]
	0x03469D8C MOV X22, X0
	0x03469D90 LDR X2, [X8]
	0x03469D94 MOV X1, X23
	0x03469D98 MOV X3, X31
	0x03469D9C BL 0x2D27AA8
	0x03469DA0 LDR X8, [X19 + 0x50]
	0x03469DA4 CBZ X8, 0x3469EBC
	0x03469DA8 ADRP X9, 0xCC6000
	0x03469DAC LDR X23, [X19 + 0x48]
	0x03469DB0 LDR X9, [X9 + 0x7C8]
	0x03469DB4 CBNZ X23, 0x3469DBC
	0x03469DB8 LDR X23, [X20 + 0x18]
	0x03469DBC LDR X20, [X8 + 0x18]
	0x03469DC0 LDR X1, [X8 + 0x30]
	0x03469DC4 LDR X2, [X9]
	0x03469DC8 STP X31, X31, [X31 + 0x8]
	0x03469DCC ADD X0, X31, 0x8
	0x03469DD0 BL 0x242E368
	0x03469DD4 ADRP X8, 0xCC6000
	0x03469DD8 LDR X8, [X8 + 0x7D0]
	0x03469DDC LDR X0, [X8]
	0x03469DE0 BL 0x1C16F10
	0x03469DE4 LDP X3, X4, [X31 + 0x8]
	0x03469DE8 MOV X24, X0
	0x03469DEC MOV X1, X20
	0x03469DF0 MOV X2, X23
	0x03469DF4 BL 0x3465404
	0x03469DF8 CBZ X21, 0x3469EC0
	0x03469DFC MOV X0, X21
	0x03469E00 MOV X1, X22
	0x03469E04 MOV X2, X24
	0x03469E08 BL 0x3465B68
	0x03469E0C CBZ X0, 0x3469EC4
	0x03469E10 MOV X1, X31
	0x03469E14 BL 0x33ED394
	0x03469E18 STR X0, [X31 + 0x18]
	0x03469E1C ADD X0, X31, 0x18
	0x03469E20 MOV X1, X31
	0x03469E24 BL 0x32C3A80
	0x03469E28 TBZ X0, 0x0, 0x3469E68
	0x03469E2C ADD X0, X31, 0x18
	0x03469E30 MOV X1, X31
	0x03469E34 BL 0x32C3B4C
	0x03469E38 MOVN W8, 0x1
	0x03469E3C STR W8, [X19]
	0x03469E40 STR X31, [X19 + 0x50]
	0x03469E44 LDR X0, [X25]
	0x03469E48 ADD X19, X19, 0x8
	0x03469E4C LDR W8, [X0 + 0xE0]
	0x03469E50 CBNZ W8, 0x3469E58
	0x03469E54 BL 0x1C16DFC
	0x03469E58 MOV X0, X19
	0x03469E5C MOV X1, X31
	0x03469E60 BL 0x32C4864
	0x03469E64 B 0x3469EA4
	0x03469E68 MOVZ W8, 0x1
	0x03469E6C STR W8, [X19]
	0x03469E70 LDR X8, [X31 + 0x18]
	0x03469E74 STR X8, [X19 + 0x60]
	0x03469E78 LDR X0, [X25]
	0x03469E7C LDR W8, [X0 + 0xE0]
	0x03469E80 CBNZ W8, 0x3469E88
	0x03469E84 BL 0x1C16DFC
	0x03469E88 ADRP X8, 0xCC7000
	0x03469E8C LDR X8, [X8 + 0x508]
	0x03469E90 ADD X0, X19, 0x8
	0x03469E94 LDR X3, [X8]
	0x03469E98 ADD X1, X31, 0x18
	0x03469E9C MOV X2, X19
	0x03469EA0 BL 0x218A4D4
	0x03469EA4 LDP X20, X19, [X31 + 0x60]
	0x03469EA8 LDP X22, X21, [X31 + 0x50]
	0x03469EAC LDP X24, X23, [X31 + 0x40]
	0x03469EB0 LDP X30, X25, [X31 + 0x30]
	0x03469EB4 ADD X31, X31, 0x70
	0x03469EB8 RET
	0x03469EBC BL 0x1C16F20
	0x03469EC0 BL 0x1C16F20
	0x03469EC4 BL 0x1C16F20
	0x03469EC8 BL 0x1C16F20
	0x03469ECC BL 0x1C16F20
	0x03469ED0 BL 0x1C16F20
	0x03469ED4 BL 0x1C16F20
	0x03469ED8 BL 0x1C16F20
	0x03469EDC BL 0x1C16F20
	0x03469EE0 BL 0x1C16F20
	0x03469EE4 BL 0x1C16F20
	0x03469EE8 BL 0x1C16F20
	0x03469EEC B 0x3469F60
	0x03469EF0 B 0x3469F60
	0x03469EF4 B 0x3469F60
	0x03469EF8 B 0x3469F60
	0x03469EFC B 0x3469F60
	0x03469F00 B 0x3469F60
	0x03469F04 B 0x3469F60
	0x03469F08 B 0x3469F60
	0x03469F0C B 0x3469F60
	0x03469F10 B 0x3469F60
	0x03469F14 B 0x3469F60
	0x03469F18 B 0x3469F60
	0x03469F1C B 0x3469F60
	0x03469F20 B 0x3469F60
	0x03469F24 B 0x3469F60
	0x03469F28 B 0x3469F60
	0x03469F2C B 0x3469F60
	0x03469F30 B 0x3469F60
	0x03469F34 B 0x3469F60
	0x03469F38 B 0x3469F60
	0x03469F3C B 0x3469F60
	0x03469F40 B 0x3469F60
	0x03469F44 B 0x3469F60
	0x03469F48 B 0x3469F60
	0x03469F4C B 0x3469F60
	0x03469F50 B 0x3469F60
	0x03469F54 B 0x3469F60
	0x03469F58 B 0x3469F60
	0x03469F5C B 0x3469F60
	0x03469F60 MOV X20, X0
	0x03469F64 CMP W1, 0x1
	0x03469F68 B.NE 0x3469FFC
	0x03469F6C MOV X0, X20
	0x03469F70 BL 0x3EB1AD0
	0x03469F74 MOV X20, X0
	0x03469F78 ADRP X0, 0xC8A000
	0x03469F7C LDR X0, [X0 + 0x7D0]
	0x03469F80 BL 0x1C16D08
	0x03469F84 LDR X8, [X20]
	0x03469F88 LDR X1, [X8]
	0x03469F8C BL 0x1C17270
	0x03469F90 TBZ X0, 0x0, 0x3469FD4
	0x03469F94 LDR X20, [X20]
	0x03469F98 BL 0x3EB1AE0
	0x03469F9C MOVN W8, 0x1
	0x03469FA0 STR X31, [X19 + 0x50]
	0x03469FA4 STR W8, [X19], #0x8
	0x03469FA8 ADRP X0, 0xC8D000
	0x03469FAC LDR X0, [X0 + 0x280]
	0x03469FB0 BL 0x1C16D08
	0x03469FB4 LDR W8, [X0 + 0xE0]
	0x03469FB8 CBNZ W8, 0x3469FC0
	0x03469FBC BL 0x1C16DFC
	0x03469FC0 MOV X0, X19
	0x03469FC4 MOV X1, X20
	0x03469FC8 MOV X2, X31
	0x03469FCC BL 0x32C4908
	0x03469FD0 B 0x3469EA4
	0x03469FD4 MOVZ W0, 0x8
	0x03469FD8 BL 0x3EB1AF0
	0x03469FDC LDR X8, [X20]
	0x03469FE0 STR X8, [X0]
	0x03469FE4 ADRP X1, 0xA4B000
	0x03469FE8 ADD X1, X1, 0xE58
	0x03469FEC MOV X2, X31
	0x03469FF0 BL 0x3EB1B00
	0x03469FF4 MOV X20, X0
	0x03469FF8 BL 0x3EB1AE0
	0x03469FFC MOV X0, X20
	0x0346A000 BL 0x1D2C690
	0x0346A004 BL 0x1990590
	0x0346A008 STR X30, [X31 - 0x30]!
	0x0346A00C STP X22, X21, [X31 + 0x10]
	0x0346A010 STP X20, X19, [X31 + 0x20]
	0x0346A014 ADRP X21, 0xF73000
	0x0346A018 ADRP X22, 0xC8C000
	0x0346A01C LDRB W8, [X21 + 0x7D0]
	0x0346A020 LDR X22, [X22 + 0x280]
	0x0346A024 MOV X19, X1
	0x0346A028 MOV X20, X0
	0x0346A02C TBNZ X8, 0x0, 0x346A044
	0x0346A030 ADRP X0, 0xC8C000
	0x0346A034 LDR X0, [X0 + 0x280]
	0x0346A038 BL 0x1C16CF4
	0x0346A03C MOVZ W8, 0x1
	0x0346A040 STRB W8, [X21 + 0x7D0]
	0x0346A044 LDR X0, [X22]
	0x0346A048 LDR W8, [X0 + 0xE0]
	0x0346A04C CBNZ W8, 0x346A054
	0x0346A050 BL 0x1C16DFC
	0x0346A054 ADD X0, X20, 0x8
	0x0346A058 MOV X1, X19
	0x0346A05C LDP X20, X19, [X31 + 0x20]
	0x0346A060 LDP X22, X21, [X31 + 0x10]
	0x0346A064 MOV X2, X31
	0x0346A068 LDR X30, [X31], #0x30
	0x0346A06C B 0x32C477C
	0x0346A070 SUB X31, X31, 0x70
	0x0346A074 STP X30, X25, [X31 + 0x30]
	0x0346A078 STP X24, X23, [X31 + 0x40]
	0x0346A07C STP X22, X21, [X31 + 0x50]
	0x0346A080 STP X20, X19, [X31 + 0x60]
	0x0346A084 ADRP X20, 0xF73000
	0x0346A088 LDRB W8, [X20 + 0x7D1]
	0x0346A08C MOV X19, X0
	0x0346A090 TBNZ X8, 0x0, 0x346A144
	0x0346A094 ADRP X0, 0xCC6000
	0x0346A098 LDR X0, [X0 + 0x520]
	0x0346A09C BL 0x1C16CF4
	0x0346A0A0 ADRP X0, 0xCC6000
	0x0346A0A4 LDR X0, [X0 + 0x528]
	0x0346A0A8 BL 0x1C16CF4
	0x0346A0AC ADRP X0, 0xC8C000
	0x0346A0B0 LDR X0, [X0 + 0x280]
	0x0346A0B4 BL 0x1C16CF4
	0x0346A0B8 ADRP X0, 0xC8B000
	0x0346A0BC LDR X0, [X0 + 0xA10]
	0x0346A0C0 BL 0x1C16CF4
	0x0346A0C4 ADRP X0, 0xC8A000
	0x0346A0C8 LDR X0, [X0 + 0x9F0]
	0x0346A0CC BL 0x1C16CF4
	0x0346A0D0 ADRP X0, 0xC91000
	0x0346A0D4 LDR X0, [X0 + 0x818]
	0x0346A0D8 BL 0x1C16CF4
	0x0346A0DC ADRP X0, 0xC8A000
	0x0346A0E0 LDR X0, [X0 + 0x818]
	0x0346A0E4 BL 0x1C16CF4
	0x0346A0E8 ADRP X0, 0xCC5000
	0x0346A0EC LDR X0, [X0 + 0x7C8]
	0x0346A0F0 BL 0x1C16CF4
	0x0346A0F4 ADRP X0, 0xCC5000
	0x0346A0F8 LDR X0, [X0 + 0x7D0]
	0x0346A0FC BL 0x1C16CF4
	0x0346A100 ADRP X0, 0xC8A000
	0x0346A104 LDR X0, [X0 + 0x830]
	0x0346A108 BL 0x1C16CF4
	0x0346A10C ADRP X0, 0xC8A000
	0x0346A110 LDR X0, [X0 + 0x838]
	0x0346A114 BL 0x1C16CF4
	0x0346A118 ADRP X0, 0xC8A000
	0x0346A11C LDR X0, [X0 + 0x840]
	0x0346A120 BL 0x1C16CF4
	0x0346A124 ADRP X0, 0xCC6000
	0x0346A128 LDR X0, [X0 + 0x530]
	0x0346A12C BL 0x1C16CF4
	0x0346A130 ADRP X0, 0xCC6000
	0x0346A134 LDR X0, [X0 + 0x538]
	0x0346A138 BL 0x1C16CF4
	0x0346A13C MOVZ W8, 0x1
	0x0346A140 STRB W8, [X20 + 0x7D1]
	0x0346A144 STP X31, X31, [X31 + 0x20]
	0x0346A148 STR X31, [X31 + 0x18]
	0x0346A14C ADRP X25, 0xC8C000
	0x0346A150 LDR W8, [X19]
	0x0346A154 LDR X20, [X19 + 0x20]
	0x0346A158 LDR X25, [X25 + 0x280]
	0x0346A15C CBZ W8, 0x346A180
	0x0346A160 CMP W8, 0x1
	0x0346A164 B.NE 0x346A1AC
	0x0346A168 LDR X8, [X19 + 0x58]
	0x0346A16C MOVN W9, 0x0
	0x0346A170 STR X8, [X31 + 0x18]
	0x0346A174 STR X31, [X19 + 0x58]
	0x0346A178 STR W9, [X19]
	0x0346A17C B 0x346A4A0
	0x0346A180 LDR X8, [X19 + 0x50]
	0x0346A184 MOVN W9, 0x0
	0x0346A188 STR X8, [X31 + 0x20]
	0x0346A18C STR X31, [X19 + 0x50]
	0x0346A190 STR W9, [X19]
	0x0346A194 ADRP X8, 0xC8A000
	0x0346A198 LDR X8, [X8 + 0x830]
	0x0346A19C ADD X0, X31, 0x20
	0x0346A1A0 LDR X1, [X8]
	0x0346A1A4 BL 0x2677474
	0x0346A1A8 B 0x346A3DC
	0x0346A1AC ADRP X8, 0xCC6000
	0x0346A1B0 LDR X8, [X8 + 0x538]
	0x0346A1B4 LDR X0, [X8]
	0x0346A1B8 BL 0x1C16F10
	0x0346A1BC MOV X21, X0
	0x0346A1C0 MOV X1, X31
	0x0346A1C4 BL 0x34464D4
	0x0346A1C8 STR X21, [X19 + 0x48]
	0x0346A1CC CBZ X21, 0x346A540
	0x0346A1D0 LDR X8, [X19 + 0x20]
	0x0346A1D4 STR X8, [X21 + 0x10]
	0x0346A1D8 LDR X8, [X19 + 0x28]
	0x0346A1DC STR X8, [X21 + 0x18]
	0x0346A1E0 LDR X8, [X19 + 0x30]
	0x0346A1E4 STR X8, [X21 + 0x20]
	0x0346A1E8 LDR X8, [X19 + 0x38]
	0x0346A1EC STR X8, [X21 + 0x28]
	0x0346A1F0 CBZ X20, 0x346A544
	0x0346A1F4 LDRB W8, [X20 + 0x10]
	0x0346A1F8 CBZ W8, 0x346A3E0
	0x0346A1FC LDR X8, [X19 + 0x48]
	0x0346A200 CBZ X8, 0x346A548
	0x0346A204 LDR X21, [X8 + 0x18]
	0x0346A208 CBZ X21, 0x346A54C
	0x0346A20C ADRP X23, 0xC8A000
	0x0346A210 LDR X8, [X21]
	0x0346A214 LDR X23, [X23 + 0x818]
	0x0346A218 LDRH W9, [X8 + 0x12E]
	0x0346A21C LDR X1, [X23]
	0x0346A220 CBZ X9, 0x346A244
	0x0346A224 LDR X10, [X8 + 0xB0]
	0x0346A228 ADD X10, X10, 0x8
	0x0346A22C LDUR X11, [X10 - 0x8]
	0x0346A230 CMP X11, X1
	0x0346A234 B.EQ 0x346A254
	0x0346A238 SUBS X9, X9, 0x1
	0x0346A23C ADD X10, X10, 0x10
	0x0346A240 B.NE 0x346A22C
	0x0346A244 MOVZ W2, 0x7
	0x0346A248 MOV X0, X21
	0x0346A24C BL 0x1C5C788
	0x0346A250 B 0x346A264
	0x0346A254 LDR W9, [X10]
	0x0346A258 ADD W9, W9, 0x7
	0x0346A25C ADD X8, X8, W9, 0x4, SXTW
	0x0346A260 ADD X0, X8, 0x138
	0x0346A264 LDP X8, X1, [X0]
	0x0346A268 MOV X0, X21
	0x0346A26C BLR X8
	0x0346A270 MOV X1, X31
	0x0346A274 BL 0x32277A8
	0x0346A278 TBNZ X0, 0x0, 0x346A3DC
	0x0346A27C LDR X8, [X19 + 0x48]
	0x0346A280 CBZ X8, 0x346A550
	0x0346A284 ADRP X9, 0xC8A000
	0x0346A288 LDR X9, [X9 + 0x9F0]
	0x0346A28C LDR X21, [X8 + 0x18]
	0x0346A290 LDR X0, [X9]
	0x0346A294 LDR W9, [X0 + 0xE0]
	0x0346A298 CBNZ W9, 0x346A2A0
	0x0346A29C BL 0x1C16DFC
	0x0346A2A0 MOV X0, X31
	0x0346A2A4 BL 0x33616A4
	0x0346A2A8 ADRP X22, 0xC8B000
	0x0346A2AC LDR X22, [X22 + 0xA10]
	0x0346A2B0 MOV X8, X0
	0x0346A2B4 STR X8, [X31 + 0x28]
	0x0346A2B8 LDR X0, [X22]
	0x0346A2BC LDR W8, [X0 + 0xE0]
	0x0346A2C0 CBNZ W8, 0x346A2CC
	0x0346A2C4 BL 0x1C16DFC
	0x0346A2C8 LDR X0, [X22]
	0x0346A2CC LDR X8, [X0 + 0xB8]
	0x0346A2D0 LDR X1, [X8]
	0x0346A2D4 ADD X0, X31, 0x28
	0x0346A2D8 MOV X2, X31
	0x0346A2DC BL 0x335FC68
	0x0346A2E0 CBZ X21, 0x346A554
	0x0346A2E4 LDR X8, [X21]
	0x0346A2E8 LDR X1, [X23]
	0x0346A2EC MOV X22, X0
	0x0346A2F0 LDRH W9, [X8 + 0x12E]
	0x0346A2F4 CBZ X9, 0x346A318
	0x0346A2F8 LDR X10, [X8 + 0xB0]
	0x0346A2FC ADD X10, X10, 0x8
	0x0346A300 LDUR X11, [X10 - 0x8]
	0x0346A304 CMP X11, X1
	0x0346A308 B.EQ 0x346A328
	0x0346A30C SUBS X9, X9, 0x1
	0x0346A310 ADD X10, X10, 0x10
	0x0346A314 B.NE 0x346A300
	0x0346A318 MOVZ W2, 0xB
	0x0346A31C MOV X0, X21

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF75000
	011 Move W8, [X20+1995]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCC8000
	018 Move X0, [X0+1216]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC8000
	021 Move X0, [X0+1224]
	022 Call 0x1C17CF4
	023 Move X0, 0xC8E000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xC8D000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC8C000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xC93000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xC8C000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCC7000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC7000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xC8C000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xC8C000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xC8C000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC8000
	054 Move X0, [X0+1232]
	055 Call 0x1C17CF4
	056 Move X0, 0xCC8000
	057 Move X0, [X0+1240]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1995], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xC8E000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+88], X31
	077 Move [X19], W9
	078 Move X8, [X19+80]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+80], X31
	084 Move [X19], W9
	085 Move X8, 0xC8C000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCC8000
	091 Move X8, [X8+1240]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass110_0..ctor, X0
	097 Move [X19+72], X21
	098 Compare X21, 0
	099 JumpIfEqual {354}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Compare X20, 0
	109 JumpIfEqual {355}
	110 Move W8, [X20+16]
	111 Compare W8, 0
	112 JumpIfEqual {250}
	113 Move X8, [X19+72]
	114 Compare X8, 0
	115 JumpIfEqual {356}
	116 Move X21, [X8+24]
	117 Compare X21, 0
	118 JumpIfEqual {357}
	119 Move X23, 0xC8C000
	120 Move X8, [X21]
	121 Move X23, [X23+2072]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X23]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 7
	133 Move X0, X21
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 7
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X31
	144 Call String.IsNullOrEmpty, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {248}
	149 Move X8, [X19+72]
	150 Compare X8, 0
	151 JumpIfEqual {358}
	152 Move X9, 0xC8C000
	153 Move X9, [X9+2544]
	154 Move X21, [X8+24]
	155 Move X0, [X9]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call DateTime.get_UtcNow
	162 Move X22, 0xC8D000
	163 Move X22, [X22+2576]
	164 Move X8, X0
	165 Move [X31+40], X8
	166 Move X0, [X22]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X22]
	172 Move X8, [X0+184]
	173 Move X1, [X8]
	174 Add X0, X31, 40
	175 Move X2, X31
	176 Call DateTime.Add, X0, X1
	177 Compare X21, 0
	178 JumpIfEqual {359}
	179 Move X8, [X21]
	180 Move X1, [X23]
	181 Move X22, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 11
	192 Move X0, X21
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 11
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X21
	201 Move X1, X22
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {248}
	207 Move X8, [X19+72]
	208 Compare X8, 0
	209 JumpIfEqual {360}
	210 Move X1, [X8+24]
	211 Move X3, [X19+64]
	212 Move X4, [X8+40]
	213 Move X0, X20
	214 Move X2, X31
	215 Move X5, X31
	216 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	217 Compare X0, 0
	218 JumpIfEqual {361}
	219 Move X8, 0xC8B000
	220 Move X8, [X8+2112]
	221 Move X1, [X8]
	222 Call Task`1<Object>.GetAwaiter, X0
	223 Move X8, 0xC8B000
	224 Move X8, [X8+2104]
	225 Move [X31+32], X0
	226 Move X1, [X8]
	227 Add X0, X31, 32
	228 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {85}
	233 Move [X19], W31
	234 Move X8, [X31+32]
	235 Move [X19+80], X8
	236 Move X0, [X25]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Move X8, 0xCC7000
	242 Move X8, [X8+1216]
	243 Add X0, X19, 8
	244 Move X3, [X8]
	245 Add X1, X31, 32
	246 Move X2, X19
	247 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	248 Compare X20, 0
	249 JumpIfEqual {353}
	250 Move X8, 0xC92000
	251 Move X8, [X8+2072]
	252 Move X21, [X20+88]
	253 Move X23, [X19+72]
	254 Move X0, [X8]
	255 Call 0x1C17F10
	256 Move X8, 0xCC7000
	257 Move X8, [X8+1232]
	258 Move X22, X0
	259 Move X2, [X8]
	260 Move X1, X23
	261 Move X3, X31
	262 Call Func`1<Object>..ctor, X0, X1, X2
	263 Move X8, [X19+72]
	264 Compare X8, 0
	265 JumpIfEqual {350}
	266 Move X9, 0xCC6000
	267 Move X23, [X19+64]
	268 Move X9, [X9+1992]
	269 Compare X23, 0
	270 JumpIfNotEqual {272}
	271 Move X23, [X20+24]
	272 Move X20, [X8+24]
	273 Move X1, [X8+40]
	274 Move X2, [X9]
	275 Move [X31+8], X31
	276 Move [X31+16], X31
	277 Add X0, X31, 8
	278 Call Nullable`1<CancellationToken>..ctor, X0, X1
	279 Move X8, 0xCC6000
	280 Move X8, [X8+2000]
	281 Move X0, [X8]
	282 Call 0x1C17F10
	283 Move X3, [X31+8]
	284 Move X4, [X31+16]
	285 Move X24, X0
	286 Move X1, X20
	287 Move X2, X23
	288 Call RetryHistory..ctor, X0, X1, X2, X3
	289 Compare X21, 0
	290 JumpIfEqual {351}
	291 Move X0, X21
	292 Move X1, X22
	293 Move X2, X24
	294 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	295 Compare X0, 0
	296 JumpIfEqual {352}
	297 Move X1, X31
	298 Call Task.GetAwaiter, X0
	299 Move [X31+24], X0
	300 Add X0, X31, 24
	301 Move X1, X31
	302 Call TaskAwaiter.get_IsCompleted, X0
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {324}
	307 Add X0, X31, 24
	308 Move X1, X31
	309 Call TaskAwaiter.GetResult, X0
	310 Move TEMP, 1
	311 Not TEMP
	312 Move W8, TEMP
	313 Move [X19], W8
	314 Move [X19+72], X31
	315 Move X0, [X25]
	316 Add X19, X19, 8
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call AsyncTaskMethodBuilder.SetResult, X0
	324 Move W8, 1
	325 Move [X19], W8
	326 Move X8, [X31+24]
	327 Move [X19+88], X8
	328 Move X0, [X25]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X8, 0xCC7000
	334 Move X8, [X8+1224]
	335 Add X0, X19, 8
	336 Move X3, [X8]
	337 Add X1, X31, 24
	338 Move X2, X19
	339 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	340 Move X20, [X31+96]
	341 Move X19, [X31+104]
	342 Move X22, [X31+80]
	343 Move X21, [X31+88]
	344 Move X24, [X31+64]
	345 Move X23, [X31+72]
	346 Move X30, [X31+48]
	347 Move X25, [X31+56]
	348 Add X31, X31, 112
	349 Return 
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X20, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X20
	365 Call 0x3EB2AD0
	366 Move X20, X0
	367 Move X0, 0xC8A000
	368 Move X0, [X0+2000]
	369 Call 0x1C17D08
	370 Move X8, [X20]
	371 Move X1, [X8]
	372 Call 0x1C18270
	373 Move TEMP, X0
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {395}
	377 Move X20, [X20]
	378 Call 0x3EB2AE0
	379 Move TEMP, 1
	380 Not TEMP
	381 Move W8, TEMP
	382 Move [X19+72], X31
	383 Move [X19+8], W8
	384 Move X0, 0xC8D000
	385 Move X0, [X0+640]
	386 Call 0x1C17D08
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move X0, X19
	392 Move X1, X20
	393 Move X2, X31
	394 Call AsyncTaskMethodBuilder.SetException, X0, X1
	395 Move W0, 8
	396 Call 0x3EB2AF0
	397 Move X8, [X20]
	398 Move [X0], X8
	399 Move X1, 0xA4B000
	400 Add X1, X1, 3672
	401 Move X2, X31
	402 Call 0x3EB2B00
	403 Move X20, X0
	404 Call 0x3EB2AE0
	405 Move X0, X20
	406 Call 0x1D2D690
	407 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346A320 BL 0x1C5C788
	0x0346A324 B 0x346A338
	0x0346A328 LDR W9, [X10]
	0x0346A32C ADD W9, W9, 0xB
	0x0346A330 ADD X8, X8, W9, 0x4, SXTW
	0x0346A334 ADD X0, X8, 0x138
	0x0346A338 LDP X8, X2, [X0]
	0x0346A33C MOV X0, X21
	0x0346A340 MOV X1, X22
	0x0346A344 BLR X8
	0x0346A348 TBZ X0, 0x0, 0x346A3DC
	0x0346A34C LDR X8, [X19 + 0x48]
	0x0346A350 CBZ X8, 0x346A558
	0x0346A354 LDR X1, [X8 + 0x18]
	0x0346A358 LDR X3, [X19 + 0x40]
	0x0346A35C LDR X4, [X8 + 0x28]
	0x0346A360 MOV X0, X20
	0x0346A364 MOV X2, X31
	0x0346A368 MOV X5, X31
	0x0346A36C BL 0x34440A8
	0x0346A370 CBZ X0, 0x346A55C
	0x0346A374 ADRP X8, 0xC8A000
	0x0346A378 LDR X8, [X8 + 0x840]
	0x0346A37C LDR X1, [X8]
	0x0346A380 BL 0x269F5D0
	0x0346A384 ADRP X8, 0xC8A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF74000
	007 Move X22, 0xC8D000
	008 Move W8, [X21+1996]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC8D000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1996], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

