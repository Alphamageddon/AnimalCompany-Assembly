Type: Nakama.RetryHistory

Method: Nakama.RetryConfiguration get_Configuration()

Disassembly:
	0x0347901C LDR X0, [X0 + 0x9D0]
	0x03479020 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Collections.Generic.List`1<Nakama.Retry> get_Retries()

Disassembly:
	0x03479024 ADRP X0, 0xC7A000
	0x03479028 LDR X0, [X0 + 0xAC8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Nullable`1<System.Threading.CancellationToken> get_UserCancelToken()

Disassembly:
	0x0347902C BL 0x1C16CF4
	0x03479030 ADRP X0, 0xCA7000
	0x03479034 LDR X0, [X0 + 0x360]

ISIL:
	001 Move X8, [X0+32]
	002 Move X1, [X0+40]
	003 Move X0, X8
	004 Return X0

Method: System.Random get_Random()

Disassembly:
	0x03479038 BL 0x1C16CF4
	0x0347903C ADRP X0, 0xCB7000

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void .ctor(Nakama.ISession session, Nakama.RetryConfiguration configuration, System.Nullable`1<System.Threading.CancellationToken> userCancelToken)

Disassembly:
	0x03466404 ADD X0, X19, 0x8
	0x03466408 LDR X3, [X8]
	0x0346640C ADD X1, X31, 0x18
	0x03466410 MOV X2, X19
	0x03466414 BL 0x1FBD164
	0x03466418 LDP X20, X19, [X31 + 0x80]
	0x0346641C LDP X22, X21, [X31 + 0x70]
	0x03466420 LDP X24, X23, [X31 + 0x60]
	0x03466424 LDP X26, X25, [X31 + 0x50]
	0x03466428 LDP X28, X27, [X31 + 0x40]
	0x0346642C LDP X29, X30, [X31 + 0x30]
	0x03466430 ADD X31, X31, 0x90
	0x03466434 RET
	0x03466438 BL 0x1C16F28
	0x0346643C BL 0x1C16F20
	0x03466440 BL 0x1C16F20
	0x03466444 BL 0x1C16F20
	0x03466448 BL 0x1C16F20
	0x0346644C BL 0x1C16F20
	0x03466450 BL 0x1C16F20
	0x03466454 BL 0x1C16F20
	0x03466458 BL 0x1C16F20
	0x0346645C BL 0x1C16F20
	0x03466460 BL 0x1C16F20
	0x03466464 BL 0x1C16F20
	0x03466468 BL 0x1C16F20
	0x0346646C BL 0x1C16F20
	0x03466470 BL 0x1C16F20
	0x03466474 BL 0x1C16F20
	0x03466478 BL 0x1C16F20
	0x0346647C BL 0x1C16F20
	0x03466480 BL 0x1C16F20
	0x03466484 B 0x3466520
	0x03466488 B 0x3466520
	0x0346648C B 0x3466520
	0x03466490 B 0x3466520
	0x03466494 B 0x3466520
	0x03466498 B 0x3466520
	0x0346649C B 0x3466520
	0x034664A0 B 0x3466520
	0x034664A4 B 0x3466520
	0x034664A8 B 0x3466520
	0x034664AC B 0x3466520
	0x034664B0 B 0x3466520
	0x034664B4 B 0x3466520
	0x034664B8 B 0x3466520
	0x034664BC B 0x3466520
	0x034664C0 B 0x3466520
	0x034664C4 B 0x3466520
	0x034664C8 B 0x3466520
	0x034664CC B 0x3466520
	0x034664D0 B 0x3466520
	0x034664D4 B 0x3466520

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xF78000
	009 Move W8, [X24+2117]
	010 Move X19, X4
	011 Move X20, X3
	012 Move X21, X2
	013 Move X23, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xC8F000
	020 Move X0, [X0+2072]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+2117], W8
	024 Compare X23, 0
	025 JumpIfEqual {63}
	026 Move X10, 0xC8F000
	027 Move X8, [X23]
	028 Move X10, [X10+2072]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move X0, X23
	040 Move W2, W31
	041 Call 0x1C5D788
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Add X8, X8, X9
	044 Add X0, X8, 312
	045 Move X8, [X0]
	046 Move X1, [X0+8]
	047 Move X0, X23
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X1, X0
	050 Move X0, X22
	051 Move X2, X21
	052 Move X3, X20
	053 Move X4, X19
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Call RetryHistory..ctor, X0, X1, X2, X3
	062 Return 
	063 Call 0x1C17F20

Method: System.Void .ctor(System.String jitterHashKey, Nakama.RetryConfiguration configuration, System.Nullable`1<System.Threading.CancellationToken> userCancelToken)

Disassembly:
	0x03479040 LDR X0, [X0 + 0xB08]
	0x03479044 BL 0x1C16CF4
	0x03479048 ADRP X0, 0xC85000
	0x0347904C LDR X0, [X0 + 0x6D8]
	0x03479050 BL 0x1C16CF4
	0x03479054 ADRP X0, 0xCB7000
	0x03479058 LDR X0, [X0 + 0xB10]
	0x0347905C BL 0x1C16CF4
	0x03479060 ADRP X0, 0xCB7000
	0x03479064 LDR X0, [X0 + 0xB18]
	0x03479068 BL 0x1C16CF4
	0x0347906C ADRP X0, 0xCB7000
	0x03479070 LDR X0, [X0 + 0xB20]
	0x03479074 BL 0x1C16CF4
	0x03479078 MOVZ W8, 0x1
	0x0347907C STRB W8, [X20 + 0x853]
	0x03479080 LDR X20, [X19 + 0x40]
	0x03479084 CBZ X20, 0x3479558
	0x03479088 ADRP X9, 0xCA7000
	0x0347908C ADRP X10, 0xC7D000
	0x03479090 LDR X8, [X20]
	0x03479094 LDR X9, [X9 + 0x360]
	0x03479098 LDR X10, [X10 + 0x190]
	0x0347909C LDR X21, [X9]
	0x034790A0 LDRH W9, [X8 + 0x12E]
	0x034790A4 LDR X1, [X10]
	0x034790A8 CBZ X9, 0x34790CC
	0x034790AC LDR X10, [X8 + 0xB0]
	0x034790B0 ADD X10, X10, 0x8
	0x034790B4 LDUR X11, [X10 - 0x8]
	0x034790B8 CMP X11, X1
	0x034790BC B.EQ 0x34790DC
	0x034790C0 SUBS X9, X9, 0x1
	0x034790C4 ADD X10, X10, 0x10
	0x034790C8 B.NE 0x34790B4
	0x034790CC MOV X0, X20
	0x034790D0 MOV W2, W31
	0x034790D4 BL 0x1C5C788
	0x034790D8 B 0x34790E8
	0x034790DC LDRSW X9, [X10]
	0x034790E0 ADD X8, X8, X9, 0x4, LSL
	0x034790E4 ADD X0, X8, 0x138
	0x034790E8 ADRP X29, 0xC7A000
	0x034790EC ADRP X26, 0xC7D000
	0x034790F0 ADRP X27, 0xC7A000
	0x034790F4 ADRP X28, 0xCB7000
	0x034790F8 ADRP X25, 0xCB7000
	0x034790FC ADRP X24, 0xCB7000
	0x03479100 LDR X29, [X29 + 0xE18]
	0x03479104 LDR X26, [X26 + 0x198]
	0x03479108 LDR X27, [X27 + 0xAC8]
	0x0347910C LDR X28, [X28 + 0xB08]
	0x03479110 LDR X25, [X25 + 0xB10]
	0x03479114 LDR X24, [X24 + 0xB18]
	0x03479118 LDP X8, X1, [X0]
	0x0347911C MOV X0, X20
	0x03479120 BLR X8
	0x03479124 MOV X20, X0
	0x03479128 STR X21, [X31 + 0x8]
	0x0347912C MOV X0, X21
	0x03479130 CBZ X20, 0x3479528
	0x03479134 LDR X8, [X20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xF65000
	011 Move X25, 0xCB8000
	012 Move X24, 0xCB8000
	013 Move W8, [X26+2118]
	014 Move X25, [X25+2736]
	015 Move X24, [X24+2744]
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xCB8000
	026 Move X0, [X0+2744]
	027 Call 0x1C17CF4
	028 Move X0, 0xCB8000
	029 Move X0, [X0+2736]
	030 Call 0x1C17CF4
	031 Move X0, 0xC82000
	032 Move X0, [X0+744]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X26+2118], W8
	036 Move X0, X19
	037 Move X1, X31
	038 Call Object..ctor, X0
	039 Move [X19+16], X23
	040 Move X0, [X25]
	041 Call 0x1C17F10
	042 Move X1, [X24]
	043 Move X23, X0
	044 Call List`1<Object>..ctor, X0
	045 Move [X19+24], X23
	046 Move [X19+32], X22
	047 Move [X19+40], X21
	048 Compare X20, 0
	049 JumpIfEqual {76}
	050 Move X8, [X20]
	051 Move X21, 0xC82000
	052 Move X0, X20
	053 Move X9, [X8+344]
	054 Move X1, [X8+352]
	055 Move X21, [X21+744]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X21]
	058 Move W20, W0
	059 Move X0, X8
	060 Call 0x1C17F10
	061 Move W1, W20
	062 Move X2, X31
	063 Move X21, X0
	064 Call Random..ctor, X0, X1
	065 Move [X19+48], X21
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X24, [X31+32]
	071 Move X23, [X31+40]
	072 Move X26, [X31+16]
	073 Move X25, [X31+24]
	074 Move X30, [X31+80]
	075 Return 
	076 Call 0x1C17F20

