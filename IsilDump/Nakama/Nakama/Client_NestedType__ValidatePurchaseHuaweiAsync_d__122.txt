Type: Nakama.Client/<ValidatePurchaseHuaweiAsync>d__122

Method: System.Void MoveNext()

Disassembly:
	0x0346EE50 LDR X23, [X23 + 0x818]
	0x0346EE54 LDRH W9, [X8 + 0x12E]
	0x0346EE58 LDR X1, [X23]
	0x0346EE5C CBZ X9, 0x346EE80
	0x0346EE60 LDR X10, [X8 + 0xB0]
	0x0346EE64 ADD X10, X10, 0x8
	0x0346EE68 LDUR X11, [X10 - 0x8]
	0x0346EE6C CMP X11, X1
	0x0346EE70 B.EQ 0x346EE90
	0x0346EE74 SUBS X9, X9, 0x1
	0x0346EE78 ADD X10, X10, 0x10
	0x0346EE7C B.NE 0x346EE68
	0x0346EE80 MOVZ W2, 0x7
	0x0346EE84 MOV X0, X21
	0x0346EE88 BL 0x1C5C788
	0x0346EE8C B 0x346EEA0
	0x0346EE90 LDR W9, [X10]
	0x0346EE94 ADD W9, W9, 0x7
	0x0346EE98 ADD X8, X8, W9, 0x4, SXTW
	0x0346EE9C ADD X0, X8, 0x138
	0x0346EEA0 LDP X8, X1, [X0]
	0x0346EEA4 MOV X0, X21
	0x0346EEA8 BLR X8
	0x0346EEAC MOV X1, X31
	0x0346EEB0 BL 0x32277A8
	0x0346EEB4 TBNZ X0, 0x0, 0x346F018
	0x0346EEB8 LDR X8, [X19 + 0x50]
	0x0346EEBC CBZ X8, 0x346F1C0
	0x0346EEC0 ADRP X9, 0xC86000
	0x0346EEC4 LDR X9, [X9 + 0x9F0]
	0x0346EEC8 LDR X21, [X8 + 0x18]
	0x0346EECC LDR X0, [X9]
	0x0346EED0 LDR W9, [X0 + 0xE0]
	0x0346EED4 CBNZ W9, 0x346EEDC
	0x0346EED8 BL 0x1C16DFC
	0x0346EEDC MOV X0, X31
	0x0346EEE0 BL 0x33616A4
	0x0346EEE4 ADRP X22, 0xC87000
	0x0346EEE8 LDR X22, [X22 + 0xA10]
	0x0346EEEC MOV X8, X0
	0x0346EEF0 STR X8, [X31 + 0x28]
	0x0346EEF4 LDR X0, [X22]
	0x0346EEF8 LDR W8, [X0 + 0xE0]
	0x0346EEFC CBNZ W8, 0x346EF08
	0x0346EF00 BL 0x1C16DFC
	0x0346EF04 LDR X0, [X22]
	0x0346EF08 LDR X8, [X0 + 0xB8]
	0x0346EF0C LDR X1, [X8]
	0x0346EF10 ADD X0, X31, 0x28
	0x0346EF14 MOV X2, X31
	0x0346EF18 BL 0x335FC68
	0x0346EF1C CBZ X21, 0x346F1C4
	0x0346EF20 LDR X8, [X21]
	0x0346EF24 LDR X1, [X23]
	0x0346EF28 MOV X22, X0
	0x0346EF2C LDRH W9, [X8 + 0x12E]
	0x0346EF30 CBZ X9, 0x346EF54
	0x0346EF34 LDR X10, [X8 + 0xB0]
	0x0346EF38 ADD X10, X10, 0x8
	0x0346EF3C LDUR X11, [X10 - 0x8]
	0x0346EF40 CMP X11, X1
	0x0346EF44 B.EQ 0x346EF64
	0x0346EF48 SUBS X9, X9, 0x1
	0x0346EF4C ADD X10, X10, 0x10
	0x0346EF50 B.NE 0x346EF3C
	0x0346EF54 MOVZ W2, 0xB
	0x0346EF58 MOV X0, X21
	0x0346EF5C BL 0x1C5C788
	0x0346EF60 B 0x346EF74
	0x0346EF64 LDR W9, [X10]
	0x0346EF68 ADD W9, W9, 0xB
	0x0346EF6C ADD X8, X8, W9, 0x4, SXTW
	0x0346EF70 ADD X0, X8, 0x138
	0x0346EF74 LDP X8, X2, [X0]
	0x0346EF78 MOV X0, X21
	0x0346EF7C MOV X1, X22
	0x0346EF80 BLR X8
	0x0346EF84 TBZ X0, 0x0, 0x346F018
	0x0346EF88 LDR X8, [X19 + 0x50]
	0x0346EF8C CBZ X8, 0x346F1C8
	0x0346EF90 LDR X1, [X8 + 0x18]
	0x0346EF94 LDR X3, [X19 + 0x48]
	0x0346EF98 LDR X4, [X8 + 0x30]
	0x0346EF9C MOV X0, X20
	0x0346EFA0 MOV X2, X31
	0x0346EFA4 MOV X5, X31
	0x0346EFA8 BL 0x34440A8
	0x0346EFAC CBZ X0, 0x346F1CC
	0x0346EFB0 ADRP X8, 0xC86000
	0x0346EFB4 LDR X8, [X8 + 0x840]
	0x0346EFB8 LDR X1, [X8]
	0x0346EFBC BL 0x269F5D0
	0x0346EFC0 ADRP X8, 0xC86000
	0x0346EFC4 LDR X8, [X8 + 0x838]
	0x0346EFC8 STR X0, [X31 + 0x20]
	0x0346EFCC LDR X1, [X8]
	0x0346EFD0 ADD X0, X31, 0x20
	0x0346EFD4 BL 0x2677430
	0x0346EFD8 TBNZ X0, 0x0, 0x346EDC8
	0x0346EFDC STR W31, [X19]
	0x0346EFE0 LDR X8, [X31 + 0x20]
	0x0346EFE4 STR X8, [X19 + 0x58]
	0x0346EFE8 LDR X0, [X25]
	0x0346EFEC LDR W8, [X0 + 0xE0]
	0x0346EFF0 CBNZ W8, 0x346EFF8
	0x0346EFF4 BL 0x1C16DFC
	0x0346EFF8 ADRP X8, 0xCC2000
	0x0346EFFC LDR X8, [X8 + 0x6D0]
	0x0346F000 ADD X0, X19, 0x8
	0x0346F004 LDR X3, [X8]
	0x0346F008 ADD X1, X31, 0x20
	0x0346F00C MOV X2, X19
	0x0346F010 BL 0x1FBE418
	0x0346F014 B 0x346F188
	0x0346F018 CBZ X20, 0x346F1AC
	0x0346F01C ADRP X8, 0xCC1000
	0x0346F020 LDR X8, [X8 + 0x698]
	0x0346F024 LDR X21, [X20 + 0x58]
	0x0346F028 LDR X23, [X19 + 0x50]
	0x0346F02C LDR X0, [X8]
	0x0346F030 BL 0x1C16F10
	0x0346F034 ADRP X8, 0xCC1000
	0x0346F038 LDR X8, [X8 + 0x6E0]
	0x0346F03C MOV X22, X0
	0x0346F040 LDR X2, [X8]
	0x0346F044 MOV X1, X23
	0x0346F048 MOV X3, X31
	0x0346F04C BL 0x2D27AA8
	0x0346F050 LDR X8, [X19 + 0x50]
	0x0346F054 CBZ X8, 0x346F1A0
	0x0346F058 ADRP X9, 0xCC0000
	0x0346F05C LDR X23, [X19 + 0x48]
	0x0346F060 LDR X9, [X9 + 0x7C8]
	0x0346F064 CBNZ X23, 0x346F06C
	0x0346F068 LDR X23, [X20 + 0x18]
	0x0346F06C LDR X20, [X8 + 0x18]
	0x0346F070 LDR X1, [X8 + 0x30]
	0x0346F074 LDR X2, [X9]
	0x0346F078 STP X31, X31, [X31 + 0x8]
	0x0346F07C ADD X0, X31, 0x8
	0x0346F080 BL 0x242E368
	0x0346F084 ADRP X8, 0xCC0000
	0x0346F088 LDR X8, [X8 + 0x7D0]
	0x0346F08C LDR X0, [X8]
	0x0346F090 BL 0x1C16F10
	0x0346F094 LDP X3, X4, [X31 + 0x8]
	0x0346F098 MOV X24, X0
	0x0346F09C MOV X1, X20
	0x0346F0A0 MOV X2, X23
	0x0346F0A4 BL 0x3465404
	0x0346F0A8 CBZ X21, 0x346F1A4
	0x0346F0AC ADRP X8, 0xCC1000
	0x0346F0B0 LDR X8, [X8 + 0x6A0]
	0x0346F0B4 LDR X3, [X8]
	0x0346F0B8 MOV X0, X21
	0x0346F0BC MOV X1, X22
	0x0346F0C0 MOV X2, X24
	0x0346F0C4 BL 0x2243230
	0x0346F0C8 CBZ X0, 0x346F1A8
	0x0346F0CC ADRP X8, 0xCC1000
	0x0346F0D0 LDR X8, [X8 + 0x6B8]
	0x0346F0D4 LDR X1, [X8]
	0x0346F0D8 BL 0x269F5D0
	0x0346F0DC ADRP X8, 0xCC1000
	0x0346F0E0 LDR X8, [X8 + 0x6B0]
	0x0346F0E4 STR X0, [X31 + 0x18]
	0x0346F0E8 LDR X1, [X8]
	0x0346F0EC ADD X0, X31, 0x18
	0x0346F0F0 BL 0x2677430
	0x0346F0F4 TBZ X0, 0x0, 0x346F14C
	0x0346F0F8 ADRP X8, 0xCC1000
	0x0346F0FC LDR X8, [X8 + 0x6A8]
	0x0346F100 ADD X0, X31, 0x18
	0x0346F104 LDR X1, [X8]
	0x0346F108 BL 0x2677474
	0x0346F10C MOVN W8, 0x1
	0x0346F110 STR W8, [X19]
	0x0346F114 STR X31, [X19 + 0x50]
	0x0346F118 MOV X20, X0
	0x0346F11C LDR X0, [X25]
	0x0346F120 ADRP X21, 0xCC0000
	0x0346F124 ADD X19, X19, 0x8
	0x0346F128 LDR W8, [X0 + 0xE0]
	0x0346F12C LDR X21, [X21 + 0x4D8]
	0x0346F130 CBNZ W8, 0x346F138
	0x0346F134 BL 0x1C16DFC
	0x0346F138 LDR X2, [X21]
	0x0346F13C MOV X0, X19
	0x0346F140 MOV X1, X20
	0x0346F144 BL 0x26322B0
	0x0346F148 B 0x346F188
	0x0346F14C MOVZ W8, 0x1
	0x0346F150 STR W8, [X19]
	0x0346F154 LDR X8, [X31 + 0x18]
	0x0346F158 STR X8, [X19 + 0x60]
	0x0346F15C LDR X0, [X25]
	0x0346F160 LDR W8, [X0 + 0xE0]
	0x0346F164 CBNZ W8, 0x346F16C
	0x0346F168 BL 0x1C16DFC
	0x0346F16C ADRP X8, 0xCC1000
	0x0346F170 LDR X8, [X8 + 0x6D8]
	0x0346F174 ADD X0, X19, 0x8
	0x0346F178 LDR X3, [X8]
	0x0346F17C ADD X1, X31, 0x18
	0x0346F180 MOV X2, X19
	0x0346F184 BL 0x1FBE418
	0x0346F188 LDP X20, X19, [X31 + 0x60]
	0x0346F18C LDP X22, X21, [X31 + 0x50]
	0x0346F190 LDP X24, X23, [X31 + 0x40]
	0x0346F194 LDP X30, X25, [X31 + 0x30]
	0x0346F198 ADD X31, X31, 0x70
	0x0346F19C RET
	0x0346F1A0 BL 0x1C16F20
	0x0346F1A4 BL 0x1C16F20
	0x0346F1A8 BL 0x1C16F20
	0x0346F1AC BL 0x1C16F20
	0x0346F1B0 BL 0x1C16F20
	0x0346F1B4 BL 0x1C16F20
	0x0346F1B8 BL 0x1C16F20
	0x0346F1BC BL 0x1C16F20
	0x0346F1C0 BL 0x1C16F20
	0x0346F1C4 BL 0x1C16F20
	0x0346F1C8 BL 0x1C16F20
	0x0346F1CC BL 0x1C16F20
	0x0346F1D0 B 0x346F244
	0x0346F1D4 B 0x346F244
	0x0346F1D8 B 0x346F244
	0x0346F1DC B 0x346F244
	0x0346F1E0 B 0x346F244
	0x0346F1E4 B 0x346F244
	0x0346F1E8 B 0x346F244
	0x0346F1EC B 0x346F244
	0x0346F1F0 B 0x346F244
	0x0346F1F4 B 0x346F244
	0x0346F1F8 B 0x346F244
	0x0346F1FC B 0x346F244
	0x0346F200 B 0x346F244
	0x0346F204 B 0x346F244
	0x0346F208 B 0x346F244
	0x0346F20C B 0x346F244
	0x0346F210 B 0x346F244
	0x0346F214 B 0x346F244
	0x0346F218 B 0x346F244
	0x0346F21C B 0x346F244
	0x0346F220 B 0x346F244
	0x0346F224 B 0x346F244
	0x0346F228 B 0x346F244
	0x0346F22C B 0x346F244
	0x0346F230 B 0x346F244
	0x0346F234 B 0x346F244
	0x0346F238 B 0x346F244
	0x0346F23C B 0x346F244
	0x0346F240 B 0x346F244
	0x0346F244 MOV X20, X0
	0x0346F248 CMP W1, 0x1
	0x0346F24C B.NE 0x346F2EC
	0x0346F250 MOV X0, X20
	0x0346F254 BL 0x3EB1AD0
	0x0346F258 MOV X20, X0
	0x0346F25C ADRP X0, 0xC84000
	0x0346F260 LDR X0, [X0 + 0x7D0]
	0x0346F264 BL 0x1C16D08
	0x0346F268 LDR X8, [X20]
	0x0346F26C LDR X1, [X8]
	0x0346F270 BL 0x1C17270
	0x0346F274 TBZ X0, 0x0, 0x346F2C4
	0x0346F278 LDR X20, [X20]
	0x0346F27C BL 0x3EB1AE0
	0x0346F280 MOVN W8, 0x1
	0x0346F284 STR X31, [X19 + 0x50]
	0x0346F288 STR W8, [X19], #0x8
	0x0346F28C ADRP X0, 0xCBF000
	0x0346F290 LDR X0, [X0 + 0x588]
	0x0346F294 BL 0x1C16D08
	0x0346F298 LDR W8, [X0 + 0xE0]
	0x0346F29C CBNZ W8, 0x346F2A4
	0x0346F2A0 BL 0x1C16DFC
	0x0346F2A4 ADRP X0, 0xCC0000
	0x0346F2A8 LDR X0, [X0 + 0x4F8]
	0x0346F2AC BL 0x1C16D08
	0x0346F2B0 MOV X2, X0
	0x0346F2B4 MOV X0, X19
	0x0346F2B8 MOV X1, X20
	0x0346F2BC BL 0x26324C8
	0x0346F2C0 B 0x346F188
	0x0346F2C4 MOVZ W0, 0x8
	0x0346F2C8 BL 0x3EB1AF0
	0x0346F2CC LDR X8, [X20]
	0x0346F2D0 STR X8, [X0]
	0x0346F2D4 ADRP X1, 0xA45000
	0x0346F2D8 ADD X1, X1, 0xE58
	0x0346F2DC MOV X2, X31
	0x0346F2E0 BL 0x3EB1B00
	0x0346F2E4 MOV X20, X0
	0x0346F2E8 BL 0x3EB1AE0
	0x0346F2EC MOV X0, X20
	0x0346F2F0 BL 0x1D2C690
	0x0346F2F4 BL 0x1990590
	0x0346F2F8 STR X30, [X31 - 0x30]!
	0x0346F2FC STP X22, X21, [X31 + 0x10]
	0x0346F300 STP X20, X19, [X31 + 0x20]
	0x0346F304 ADRP X22, 0xF6E000
	0x0346F308 ADRP X21, 0xCBF000
	0x0346F30C LDRB W8, [X22 + 0x7E8]
	0x0346F310 LDR X21, [X21 + 0x588]
	0x0346F314 MOV X19, X1
	0x0346F318 MOV X20, X0
	0x0346F31C TBNZ X8, 0x0, 0x346F340
	0x0346F320 ADRP X0, 0xCC0000
	0x0346F324 LDR X0, [X0 + 0x500]
	0x0346F328 BL 0x1C16CF4
	0x0346F32C ADRP X0, 0xCBF000
	0x0346F330 LDR X0, [X0 + 0x588]
	0x0346F334 BL 0x1C16CF4
	0x0346F338 MOVZ W8, 0x1
	0x0346F33C STRB W8, [X22 + 0x7E8]
	0x0346F340 LDR X0, [X21]
	0x0346F344 ADRP X21, 0xCC0000
	0x0346F348 LDR W8, [X0 + 0xE0]
	0x0346F34C LDR X21, [X21 + 0x500]
	0x0346F350 CBNZ W8, 0x346F358
	0x0346F354 BL 0x1C16DFC
	0x0346F358 LDR X2, [X21]
	0x0346F35C ADD X0, X20, 0x8
	0x0346F360 MOV X1, X19
	0x0346F364 LDP X20, X19, [X31 + 0x20]
	0x0346F368 LDP X22, X21, [X31 + 0x10]
	0x0346F36C LDR X30, [X31], #0x30
	0x0346F370 B 0x2632228
	0x0346F374 SUB X31, X31, 0x70
	0x0346F378 STP X30, X25, [X31 + 0x30]
	0x0346F37C STP X24, X23, [X31 + 0x40]
	0x0346F380 STP X22, X21, [X31 + 0x50]
	0x0346F384 STP X20, X19, [X31 + 0x60]
	0x0346F388 ADRP X20, 0xF6E000
	0x0346F38C LDRB W8, [X20 + 0x7E9]
	0x0346F390 MOV X19, X0
	0x0346F394 TBNZ X8, 0x0, 0x346F484
	0x0346F398 ADRP X0, 0xCC1000
	0x0346F39C LDR X0, [X0 + 0x6F0]
	0x0346F3A0 BL 0x1C16CF4
	0x0346F3A4 ADRP X0, 0xCC1000
	0x0346F3A8 LDR X0, [X0 + 0x6F8]
	0x0346F3AC BL 0x1C16CF4
	0x0346F3B0 ADRP X0, 0xCC0000
	0x0346F3B4 LDR X0, [X0 + 0x528]
	0x0346F3B8 BL 0x1C16CF4
	0x0346F3BC ADRP X0, 0xCBF000
	0x0346F3C0 LDR X0, [X0 + 0x5F8]
	0x0346F3C4 BL 0x1C16CF4
	0x0346F3C8 ADRP X0, 0xC86000
	0x0346F3CC LDR X0, [X0 + 0xA10]
	0x0346F3D0 BL 0x1C16CF4
	0x0346F3D4 ADRP X0, 0xC85000
	0x0346F3D8 LDR X0, [X0 + 0x9F0]
	0x0346F3DC BL 0x1C16CF4
	0x0346F3E0 ADRP X0, 0xCC1000
	0x0346F3E4 LDR X0, [X0 + 0x700]
	0x0346F3E8 BL 0x1C16CF4
	0x0346F3EC ADRP X0, 0xC85000
	0x0346F3F0 LDR X0, [X0 + 0x818]
	0x0346F3F4 BL 0x1C16CF4
	0x0346F3F8 ADRP X0, 0xCC0000
	0x0346F3FC LDR X0, [X0 + 0x7C8]
	0x0346F400 BL 0x1C16CF4
	0x0346F404 ADRP X0, 0xCC0000
	0x0346F408 LDR X0, [X0 + 0x7D0]
	0x0346F40C BL 0x1C16CF4
	0x0346F410 ADRP X0, 0xCC1000
	0x0346F414 LDR X0, [X0 + 0x708]
	0x0346F418 BL 0x1C16CF4
	0x0346F41C ADRP X0, 0xCC1000
	0x0346F420 LDR X0, [X0 + 0x710]
	0x0346F424 BL 0x1C16CF4
	0x0346F428 ADRP X0, 0xC85000
	0x0346F42C LDR X0, [X0 + 0x830]
	0x0346F430 BL 0x1C16CF4
	0x0346F434 ADRP X0, 0xC85000
	0x0346F438 LDR X0, [X0 + 0x838]
	0x0346F43C BL 0x1C16CF4
	0x0346F440 ADRP X0, 0xCC1000
	0x0346F444 LDR X0, [X0 + 0x718]
	0x0346F448 BL 0x1C16CF4
	0x0346F44C ADRP X0, 0xC85000
	0x0346F450 LDR X0, [X0 + 0x840]
	0x0346F454 BL 0x1C16CF4
	0x0346F458 ADRP X0, 0xCC1000
	0x0346F45C LDR X0, [X0 + 0x720]
	0x0346F460 BL 0x1C16CF4
	0x0346F464 ADRP X0, 0xCC1000
	0x0346F468 LDR X0, [X0 + 0x728]
	0x0346F46C BL 0x1C16CF4
	0x0346F470 ADRP X0, 0xCC1000
	0x0346F474 LDR X0, [X0 + 0x730]
	0x0346F478 BL 0x1C16CF4
	0x0346F47C MOVZ W8, 0x1
	0x0346F480 STRB W8, [X20 + 0x7E9]
	0x0346F484 STP X31, X31, [X31 + 0x20]
	0x0346F488 STR X31, [X31 + 0x18]
	0x0346F48C ADRP X25, 0xCBF000
	0x0346F490 LDR W8, [X19]
	0x0346F494 LDR X20, [X19 + 0x20]
	0x0346F498 LDR X25, [X25 + 0x5F8]
	0x0346F49C CBZ W8, 0x346F4C0
	0x0346F4A0 CMP W8, 0x1
	0x0346F4A4 B.NE 0x346F4EC
	0x0346F4A8 LDR X8, [X19 + 0x78]
	0x0346F4AC MOVN W9, 0x0
	0x0346F4B0 STR X8, [X31 + 0x18]
	0x0346F4B4 STR X31, [X19 + 0x78]
	0x0346F4B8 STR W9, [X19]
	0x0346F4BC B 0x346F80C
	0x0346F4C0 LDR X8, [X19 + 0x70]
	0x0346F4C4 MOVN W9, 0x0
	0x0346F4C8 STR X8, [X31 + 0x20]
	0x0346F4CC STR X31, [X19 + 0x70]
	0x0346F4D0 STR W9, [X19]
	0x0346F4D4 ADRP X8, 0xC85000
	0x0346F4D8 LDR X8, [X8 + 0x830]
	0x0346F4DC ADD X0, X31, 0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF70000
	011 Move W8, [X20+2019]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {76}
	017 Move X0, 0xCC3000
	018 Move X0, [X0+1640]
	019 Call 0x1C17CF4
	020 Move X0, 0xCC3000
	021 Move X0, [X0+1648]
	022 Call 0x1C17CF4
	023 Move X0, 0xCC2000
	024 Move X0, [X0+1112]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC1000
	027 Move X0, [X0+1328]
	028 Call 0x1C17CF4
	029 Move X0, 0xC88000
	030 Move X0, [X0+2576]
	031 Call 0x1C17CF4
	032 Move X0, 0xC87000
	033 Move X0, [X0+2544]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC3000
	036 Move X0, [X0+1520]
	037 Call 0x1C17CF4
	038 Move X0, 0xC87000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0xCC2000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0xCC2000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC3000
	048 Move X0, [X0+1528]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC3000
	051 Move X0, [X0+1536]
	052 Call 0x1C17CF4
	053 Move X0, 0xC87000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0xC87000
	057 Move X0, [X0+2104]
	058 Call 0x1C17CF4
	059 Move X0, 0xCC3000
	060 Move X0, [X0+1544]
	061 Call 0x1C17CF4
	062 Move X0, 0xC87000
	063 Move X0, [X0+2112]
	064 Call 0x1C17CF4
	065 Move X0, 0xCC3000
	066 Move X0, [X0+1552]
	067 Call 0x1C17CF4
	068 Move X0, 0xCC3000
	069 Move X0, [X0+1656]
	070 Call 0x1C17CF4
	071 Move X0, 0xCC3000
	072 Move X0, [X0+1664]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2019], W8
	076 Move [X31+32], X31
	077 Move [X31+40], X31
	078 Move [X31+24], X31
	079 Move X25, 0xCC1000
	080 Move W8, [X19]
	081 Move X20, [X19+32]
	082 Move X25, [X25+1328]
	083 Compare W8, 0
	084 JumpIfEqual {93}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, [X19+104]
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W9, TEMP
	090 Move [X31+24], X8
	091 Move [X19+104], X31
	092 Move [X19], W9
	093 Move X8, [X19+96]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move [X31+32], X8
	098 Move [X19+96], X31
	099 Move [X19], W9
	100 Move X8, 0xC87000
	101 Move X8, [X8+2096]
	102 Add X0, X31, 32
	103 Move X1, [X8]
	104 Call TaskAwaiter`1<Object>.GetResult, X0
	105 Move X8, 0xCC3000
	106 Move X8, [X8+1664]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X21, X0
	110 Move X1, X31
	111 Call <>c__DisplayClass122_0..ctor, X0
	112 Move [X19+88], X21
	113 Compare X21, 0
	114 JumpIfEqual {384}
	115 Move X8, [X19+32]
	116 Move [X21+16], X8
	117 Move X8, [X19+40]
	118 Move [X21+24], X8
	119 Move V0, [X19+3]
	120 Move [X21+2], V0
	121 Move W8, [X19+64]
	122 Move [X21+48], W8
	123 Move X8, [X19+72]
	124 Move [X21+56], X8
	125 Compare X20, 0
	126 JumpIfEqual {385}
	127 Move W8, [X20+16]
	128 Compare W8, 0
	129 JumpIfEqual {267}
	130 Move X8, [X19+88]
	131 Compare X8, 0
	132 JumpIfEqual {386}
	133 Move X21, [X8+24]
	134 Compare X21, 0
	135 JumpIfEqual {387}
	136 Move X23, 0xC86000
	137 Move X8, [X21]
	138 Move X23, [X23+2072]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X1, [X23]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move W2, 7
	150 Move X0, X21
	151 Call 0x1C5D788
	152 Move W9, [X10]
	153 Add W9, W9, 7
	154 Add X8, X8, W9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {265}
	166 Move X8, [X19+88]
	167 Compare X8, 0
	168 JumpIfEqual {388}
	169 Move X9, 0xC86000
	170 Move X9, [X9+2544]
	171 Move X21, [X8+24]
	172 Move X0, [X9]
	173 Move W9, [X0+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X31
	178 Call DateTime.get_UtcNow
	179 Move X22, 0xC87000
	180 Move X22, [X22+2576]
	181 Move X8, X0
	182 Move [X31+40], X8
	183 Move X0, [X22]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X22]
	189 Move X8, [X0+184]
	190 Move X1, [X8]
	191 Add X0, X31, 40
	192 Move X2, X31
	193 Call DateTime.Add, X0, X1
	194 Compare X21, 0
	195 JumpIfEqual {389}
	196 Move X8, [X21]
	197 Move X1, [X23]
	198 Move X22, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move W2, 11
	209 Move X0, X21
	210 Call 0x1C5D788
	211 Move W9, [X10]
	212 Add W9, W9, 11
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X21
	218 Move X1, X22
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {265}
	224 Move X8, [X19+88]
	225 Compare X8, 0
	226 JumpIfEqual {390}
	227 Move X1, [X8+24]
	228 Move X3, [X19+80]
	229 Move X4, [X8+56]
	230 Move X0, X20
	231 Move X2, X31
	232 Move X5, X31
	233 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	234 Compare X0, 0
	235 JumpIfEqual {391}
	236 Move X8, 0xC86000
	237 Move X8, [X8+2112]
	238 Move X1, [X8]
	239 Call Task`1<Object>.GetAwaiter, X0
	240 Move X8, 0xC86000
	241 Move X8, [X8+2104]
	242 Move [X31+32], X0
	243 Move X1, [X8]
	244 Add X0, X31, 32
	245 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	246 Move TEMP, X0
	247 And TEMP, TEMP, 1
	248 Compare TEMP, 1
	249 JumpIfEqual {100}
	250 Move [X19], W31
	251 Move X8, [X31+32]
	252 Move [X19+96], X8
	253 Move X0, [X25]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X8, 0xCC2000
	259 Move X8, [X8+1648]
	260 Add X0, X19, 8
	261 Move X3, [X8]
	262 Add X1, X31, 32
	263 Move X2, X19
	264 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	265 Compare X20, 0
	266 JumpIfEqual {383}
	267 Move X8, 0xCC2000
	268 Move X8, [X8+1520]
	269 Move X21, [X20+88]
	270 Move X23, [X19+88]
	271 Move X0, [X8]
	272 Call 0x1C17F10
	273 Move X8, 0xCC2000
	274 Move X8, [X8+1656]
	275 Move X22, X0
	276 Move X2, [X8]
	277 Move X1, X23
	278 Move X3, X31
	279 Call Func`1<Object>..ctor, X0, X1, X2
	280 Move X8, [X19+88]
	281 Compare X8, 0
	282 JumpIfEqual {380}
	283 Move X9, 0xCC1000
	284 Move X23, [X19+80]
	285 Move X9, [X9+1992]
	286 Compare X23, 0
	287 JumpIfNotEqual {289}
	288 Move X23, [X20+24]
	289 Move X20, [X8+24]
	290 Move X1, [X8+56]
	291 Move X2, [X9]
	292 Move [X31+8], X31
	293 Move [X31+16], X31
	294 Add X0, X31, 8
	295 Call Nullable`1<CancellationToken>..ctor, X0, X1
	296 Move X8, 0xCC1000
	297 Move X8, [X8+2000]
	298 Move X0, [X8]
	299 Call 0x1C17F10
	300 Move X3, [X31+8]
	301 Move X4, [X31+16]
	302 Move X24, X0
	303 Move X1, X20
	304 Move X2, X23
	305 Call RetryHistory..ctor, X0, X1, X2, X3
	306 Compare X21, 0
	307 JumpIfEqual {381}
	308 Move X8, 0xCC2000
	309 Move X8, [X8+1528]
	310 Move X3, [X8]
	311 Move X0, X21
	312 Move X1, X22
	313 Move X2, X24
	314 Call 0x2244230, X0, X1, X2
	315 Compare X0, 0
	316 JumpIfEqual {382}
	317 Move X8, 0xCC2000
	318 Move X8, [X8+1552]
	319 Move X1, [X8]
	320 Call Task`1<Object>.GetAwaiter, X0
	321 Move X8, 0xCC2000
	322 Move X8, [X8+1544]
	323 Move [X31+24], X0
	324 Move X1, [X8]
	325 Add X0, X31, 24
	326 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {354}
	331 Move X8, 0xCC2000
	332 Move X8, [X8+1536]
	333 Add X0, X31, 24
	334 Move X1, [X8]
	335 Call TaskAwaiter`1<Object>.GetResult, X0
	336 Move TEMP, 1
	337 Not TEMP
	338 Move W8, TEMP
	339 Move [X19], W8
	340 Move [X19+88], X31
	341 Move X20, X0
	342 Move X0, [X25]
	343 Move X21, 0xCC1000
	344 Add X19, X19, 8
	345 Move W8, [X0+224]
	346 Move X21, [X21+1112]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X2, [X21]
	351 Move X0, X19
	352 Move X1, X20
	353 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	354 Move W8, 1
	355 Move [X19], W8
	356 Move X8, [X31+24]
	357 Move [X19+104], X8
	358 Move X0, [X25]
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X8, 0xCC2000
	364 Move X8, [X8+1640]
	365 Add X0, X19, 8
	366 Move X3, [X8]
	367 Add X1, X31, 24
	368 Move X2, X19
	369 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	370 Move X20, [X31+96]
	371 Move X19, [X31+104]
	372 Move X22, [X31+80]
	373 Move X21, [X31+88]
	374 Move X24, [X31+64]
	375 Move X23, [X31+72]
	376 Move X30, [X31+48]
	377 Move X25, [X31+56]
	378 Add X31, X31, 112
	379 Return 
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Move X20, X0
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X0, X20
	395 Call 0x3EB2AD0
	396 Move X20, X0
	397 Move X0, 0xC85000
	398 Move X0, [X0+2000]
	399 Call 0x1C17D08
	400 Move X8, [X20]
	401 Move X1, [X8]
	402 Call 0x1C18270
	403 Move TEMP, X0
	404 And TEMP, TEMP, 1
	405 Compare TEMP, 1
	406 JumpIfNotEqual {428}
	407 Move X20, [X20]
	408 Call 0x3EB2AE0
	409 Move TEMP, 1
	410 Not TEMP
	411 Move W8, TEMP
	412 Move [X19+88], X31
	413 Move [X19+8], W8
	414 Move X0, 0xCC0000
	415 Move X0, [X0+1328]
	416 Call 0x1C17D08
	417 Move W8, [X0+224]
	418 Compare W8, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Move X0, 0xCC1000
	422 Move X0, [X0+1144]
	423 Call 0x1C17D08
	424 Move X2, X0
	425 Move X0, X19
	426 Move X1, X20
	427 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	428 Move W0, 8
	429 Call 0x3EB2AF0
	430 Move X8, [X20]
	431 Move [X0], X8
	432 Move X1, 0xA46000
	433 Add X1, X1, 3672
	434 Move X2, X31
	435 Call 0x3EB2B00
	436 Move X20, X0
	437 Call 0x3EB2AE0
	438 Move X0, X20
	439 Call 0x1D2D690
	440 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x0346F4E0 LDR X1, [X8]
	0x0346F4E4 BL 0x2677474
	0x0346F4E8 B 0x346F72C
	0x0346F4EC ADRP X8, 0xCC1000
	0x0346F4F0 LDR X8, [X8 + 0x730]
	0x0346F4F4 LDR X0, [X8]
	0x0346F4F8 BL 0x1C16F10
	0x0346F4FC MOV X21, X0
	0x0346F500 MOV X1, X31
	0x0346F504 BL 0x34474A4
	0x0346F508 STR X21, [X19 + 0x68]
	0x0346F50C CBZ X21, 0x346F8C4
	0x0346F510 LDR X8, [X19 + 0x20]
	0x0346F514 STR X8, [X21 + 0x10]
	0x0346F518 LDR X8, [X19 + 0x28]
	0x0346F51C STR X8, [X21 + 0x18]
	0x0346F520 LDR V0, [X19 + 0x3]
	0x0346F524 STR V0, [X21 + 0x2]
	0x0346F528 LDR V0, [X19 + 0x4]
	0x0346F52C STR V0, [X21 + 0x3]
	0x0346F530 LDR W8, [X19 + 0x50]
	0x0346F534 STR W8, [X21 + 0x40]
	0x0346F538 LDR X8, [X19 + 0x58]
	0x0346F53C STR X8, [X21 + 0x48]
	0x0346F540 CBZ X20, 0x346F8C8
	0x0346F544 LDRB W8, [X20 + 0x10]
	0x0346F548 CBZ W8, 0x346F730
	0x0346F54C LDR X8, [X19 + 0x68]
	0x0346F550 CBZ X8, 0x346F8CC
	0x0346F554 LDR X21, [X8 + 0x18]
	0x0346F558 CBZ X21, 0x346F8D0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xF6F000
	007 Move X21, 0xCC0000
	008 Move W8, [X22+2020]
	009 Move X21, [X21+1328]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCC1000
	017 Move X0, [X0+1152]
	018 Call 0x1C17CF4
	019 Move X0, 0xCC0000
	020 Move X0, [X0+1328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2020], W8
	024 Move X0, [X21]
	025 Move X21, 0xCC1000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1152]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

