Type: Nakama.ApiClient/<ListSubscriptionsAsync>d__63

Method: System.Void MoveNext()

Disassembly:
	0x03431938 LDR X0, [X0 + 0x6C0]
	0x0343193C BL 0x1C16CF4
	0x03431940 ADRP X0, 0xCC3000
	0x03431944 LDR X0, [X0 + 0x6D0]
	0x03431948 BL 0x1C16CF4
	0x0343194C ADRP X0, 0xCC2000
	0x03431950 LDR X0, [X0 + 0xE00]
	0x03431954 BL 0x1C16CF4
	0x03431958 ADRP X0, 0xCC2000
	0x0343195C LDR X0, [X0 + 0xF70]
	0x03431960 BL 0x1C16CF4
	0x03431964 ADRP X0, 0xCC2000
	0x03431968 LDR X0, [X0 + 0xF78]
	0x0343196C BL 0x1C16CF4
	0x03431970 ADRP X0, 0xCC2000
	0x03431974 LDR X0, [X0 + 0xE18]
	0x03431978 BL 0x1C16CF4
	0x0343197C ADRP X0, 0xCFD000
	0x03431980 LDR X0, [X0 + 0x7B8]
	0x03431984 BL 0x1C16CF4
	0x03431988 ADRP X0, 0xCFE000
	0x0343198C LDR X0, [X0 + 0x1A8]
	0x03431990 BL 0x1C16CF4
	0x03431994 ADRP X0, 0xCC5000
	0x03431998 LDR X0, [X0 + 0xEF8]
	0x0343199C BL 0x1C16CF4
	0x034319A0 ADRP X0, 0xCC3000
	0x034319A4 LDR X0, [X0 + 0x478]
	0x034319A8 BL 0x1C16CF4
	0x034319AC ADRP X0, 0xCC2000
	0x034319B0 LDR X0, [X0 + 0x9D0]
	0x034319B4 BL 0x1C16CF4
	0x034319B8 ADRP X0, 0xCC2000
	0x034319BC LDR X0, [X0 + 0xAC8]
	0x034319C0 BL 0x1C16CF4
	0x034319C4 ADRP X0, 0xCC5000
	0x034319C8 LDR X0, [X0 + 0x1E0]
	0x034319CC BL 0x1C16CF4
	0x034319D0 ADRP X0, 0xCC5000
	0x034319D4 LDR X0, [X0 + 0x1F0]
	0x034319D8 BL 0x1C16CF4
	0x034319DC ADRP X0, 0xCC5000
	0x034319E0 LDR X0, [X0 + 0x1F8]
	0x034319E4 BL 0x1C16CF4
	0x034319E8 ADRP X0, 0xCCB000
	0x034319EC LDR X0, [X0 + 0x3A0]
	0x034319F0 BL 0x1C16CF4
	0x034319F4 ADRP X0, 0xCC4000
	0x034319F8 LDR X0, [X0 + 0xA28]
	0x034319FC BL 0x1C16CF4
	0x03431A00 ADRP X0, 0xCEB000
	0x03431A04 LDR X0, [X0 + 0x4D0]
	0x03431A08 BL 0x1C16CF4
	0x03431A0C ADRP X0, 0xCFE000
	0x03431A10 LDR X0, [X0 + 0x20]
	0x03431A14 BL 0x1C16CF4
	0x03431A18 ADRP X0, 0xCCB000
	0x03431A1C LDR X0, [X0 + 0x720]
	0x03431A20 BL 0x1C16CF4
	0x03431A24 ADRP X0, 0xCFD000
	0x03431A28 LDR X0, [X0 + 0x7D0]
	0x03431A2C BL 0x1C16CF4
	0x03431A30 ADRP X0, 0xCFD000
	0x03431A34 LDR X0, [X0 + 0xF18]
	0x03431A38 BL 0x1C16CF4
	0x03431A3C ADRP X0, 0xCFD000
	0x03431A40 LDR X0, [X0 + 0x7D8]
	0x03431A44 BL 0x1C16CF4
	0x03431A48 ADRP X0, 0xCFD000
	0x03431A4C LDR X0, [X0 + 0xC70]
	0x03431A50 BL 0x1C16CF4
	0x03431A54 ADRP X0, 0xCC2000
	0x03431A58 LDR X0, [X0 + 0x988]
	0x03431A5C BL 0x1C16CF4
	0x03431A60 ADRP X0, 0xCFD000
	0x03431A64 LDR X0, [X0 + 0xC78]
	0x03431A68 BL 0x1C16CF4
	0x03431A6C ADRP X0, 0xCFD000
	0x03431A70 LDR X0, [X0 + 0xF20]
	0x03431A74 BL 0x1C16CF4
	0x03431A78 ADRP X0, 0xCFE000
	0x03431A7C LDR X0, [X0 + 0x50]
	0x03431A80 BL 0x1C16CF4
	0x03431A84 MOVZ W8, 0x1
	0x03431A88 STRB W8, [X20 + 0x663]
	0x03431A8C STR X31, [X31 + 0x28]
	0x03431A90 ADRP X27, 0xCFD000
	0x03431A94 LDR W28, [X19]
	0x03431A98 LDR X27, [X27 + 0x730]
	0x03431A9C CBZ W28, 0x3431B78
	0x03431AA0 LDR X21, [X19 + 0x20]
	0x03431AA4 CBZ X21, 0x3432190
	0x03431AA8 ADRP X24, 0xCC4000
	0x03431AAC LDR X24, [X24 + 0xA28]
	0x03431AB0 ADRP X8, 0xCFD000
	0x03431AB4 LDR X0, [X24]
	0x03431AB8 LDR X8, [X8 + 0xC70]
	0x03431ABC LDR X23, [X19 + 0x48]
	0x03431AC0 LDR W9, [X0 + 0xE0]
	0x03431AC4 LDR X20, [X8]
	0x03431AC8 CBNZ W9, 0x3431AD0
	0x03431ACC BL 0x1C16DFC
	0x03431AD0 MOV X0, X21
	0x03431AD4 MOV X1, X31
	0x03431AD8 BL 0x3624D20
	0x03431ADC CBZ X20, 0x34321D8
	0x03431AE0 ADRP X8, 0xCFD000
	0x03431AE4 LDR X8, [X8 + 0xC78]
	0x03431AE8 MOV X2, X0
	0x03431AEC LDR X1, [X8]
	0x03431AF0 MOV X0, X20
	0x03431AF4 MOV X3, X31
	0x03431AF8 BL 0x32293BC
	0x03431AFC ADRP X8, 0xCC2000
	0x03431B00 LDR X8, [X8 + 0x988]
	0x03431B04 LDR X21, [X19 + 0x28]
	0x03431B08 MOV X20, X0
	0x03431B0C LDR X29, [X8]
	0x03431B10 CBNZ X21, 0x3431B30
	0x03431B14 ADRP X8, 0xCC2000
	0x03431B18 LDR X8, [X8 + 0xAC8]
	0x03431B1C LDR X0, [X8]
	0x03431B20 MOV W1, W31
	0x03431B24 BL 0x1C16D6C
	0x03431B28 MOV X21, X0
	0x03431B2C CBZ X0, 0x343221C
	0x03431B30 ADRP X10, 0xCC2000
	0x03431B34 LDR X8, [X21]
	0x03431B38 LDR X10, [X10 + 0xF70]
	0x03431B3C LDRH W9, [X8 + 0x12E]
	0x03431B40 LDR X1, [X10]
	0x03431B44 CBZ X9, 0x3431B68
	0x03431B48 LDR X10, [X8 + 0xB0]
	0x03431B4C ADD X10, X10, 0x8
	0x03431B50 LDUR X11, [X10 - 0x8]
	0x03431B54 CMP X11, X1
	0x03431B58 B.EQ 0x3431B90
	0x03431B5C SUBS X9, X9, 0x1
	0x03431B60 ADD X10, X10, 0x10
	0x03431B64 B.NE 0x3431B50
	0x03431B68 MOV X0, X21
	0x03431B6C MOV W2, W31
	0x03431B70 BL 0x1C5C788
	0x03431B74 B 0x3431B9C
	0x03431B78 LDR X8, [X19 + 0x68]
	0x03431B7C MOVN W9, 0x0
	0x03431B80 STR X8, [X31 + 0x28]
	0x03431B84 STR X31, [X19 + 0x68]
	0x03431B88 STR W9, [X19]
	0x03431B8C B 0x34320D8
	0x03431B90 LDRSW X9, [X10]
	0x03431B94 ADD X8, X8, X9, 0x4, LSL
	0x03431B98 ADD X0, X8, 0x138
	0x03431B9C LDP X8, X1, [X0]
	0x03431BA0 MOV X0, X21
	0x03431BA4 BLR X8
	0x03431BA8 STP X20, X23, [X31 + 0x10]
	0x03431BAC ADRP X27, 0xCC2000
	0x03431BB0 ADRP X20, 0xCC2000
	0x03431BB4 ADRP X25, 0xCFE000
	0x03431BB8 ADRP X26, 0xCCB000
	0x03431BBC LDR X27, [X27 + 0xE18]
	0x03431BC0 LDR X20, [X20 + 0xF78]
	0x03431BC4 LDR X25, [X25 + 0x50]
	0x03431BC8 LDR X26, [X26 + 0x720]
	0x03431BCC MOV X22, X0
	0x03431BD0 MOV X0, X29
	0x03431BD4 CBZ X22, 0x343218C
	0x03431BD8 LDR X8, [X22]
	0x03431BDC LDR X1, [X27]
	0x03431BE0 MOV X21, X0
	0x03431BE4 LDRH W9, [X8 + 0x12E]
	0x03431BE8 CBZ X9, 0x3431C0C
	0x03431BEC LDR X10, [X8 + 0xB0]
	0x03431BF0 ADD X10, X10, 0x8
	0x03431BF4 LDUR X11, [X10 - 0x8]
	0x03431BF8 CMP X11, X1
	0x03431BFC B.EQ 0x3431C1C
	0x03431C00 SUBS X9, X9, 0x1
	0x03431C04 ADD X10, X10, 0x10
	0x03431C08 B.NE 0x3431BF4
	0x03431C0C MOV X0, X22
	0x03431C10 MOV W2, W31
	0x03431C14 BL 0x1C5C788
	0x03431C18 B 0x3431C28
	0x03431C1C LDRSW X9, [X10]
	0x03431C20 ADD X8, X8, X9, 0x4, LSL
	0x03431C24 ADD X0, X8, 0x138
	0x03431C28 LDP X8, X1, [X0]
	0x03431C2C MOV X0, X22
	0x03431C30 BLR X8
	0x03431C34 TBZ X0, 0x0, 0x3431CCC
	0x03431C38 LDR X8, [X22]
	0x03431C3C LDR X1, [X20]
	0x03431C40 LDRH W9, [X8 + 0x12E]
	0x03431C44 CBZ X9, 0x3431C68
	0x03431C48 LDR X10, [X8 + 0xB0]
	0x03431C4C ADD X10, X10, 0x8
	0x03431C50 LDUR X11, [X10 - 0x8]
	0x03431C54 CMP X11, X1
	0x03431C58 B.EQ 0x3431C78
	0x03431C5C SUBS X9, X9, 0x1
	0x03431C60 ADD X10, X10, 0x10
	0x03431C64 B.NE 0x3431C50
	0x03431C68 MOV X0, X22
	0x03431C6C MOV W2, W31
	0x03431C70 BL 0x1C5C788
	0x03431C74 B 0x3431C84
	0x03431C78 LDRSW X9, [X10]
	0x03431C7C ADD X8, X8, X9, 0x4, LSL
	0x03431C80 ADD X0, X8, 0x138
	0x03431C84 LDP X8, X1, [X0]
	0x03431C88 MOV X0, X22
	0x03431C8C BLR X8
	0x03431C90 MOV X23, X0
	0x03431C94 LDR X0, [X24]
	0x03431C98 LDR W8, [X0 + 0xE0]
	0x03431C9C CBNZ W8, 0x3431CA4
	0x03431CA0 BL 0x1C16DFC
	0x03431CA4 MOV X0, X23
	0x03431CA8 MOV X1, X31
	0x03431CAC BL 0x3624D20
	0x03431CB0 LDR X1, [X25]
	0x03431CB4 LDR X3, [X26]
	0x03431CB8 MOV X2, X0
	0x03431CBC MOV X0, X21
	0x03431CC0 MOV X4, X31
	0x03431CC4 BL 0x32277C4
	0x03431CC8 B 0x3431BD4
	0x03431CCC MOV X23, X31
	0x03431CD0 MOVZ W20, 0x9
	0x03431CD4 ADRP X27, 0xCFD000
	0x03431CD8 LDR X27, [X27 + 0x730]
	0x03431CDC TBZ X28, 0x1F, 0x3431D44
	0x03431CE0 CBZ X22, 0x3431D44
	0x03431CE4 ADRP X10, 0xCC2000
	0x03431CE8 LDR X8, [X22]
	0x03431CEC LDR X10, [X10 + 0xE00]
	0x03431CF0 LDRH W9, [X8 + 0x12E]
	0x03431CF4 LDR X1, [X10]
	0x03431CF8 CBZ X9, 0x3431D1C
	0x03431CFC LDR X10, [X8 + 0xB0]
	0x03431D00 ADD X10, X10, 0x8
	0x03431D04 LDUR X11, [X10 - 0x8]
	0x03431D08 CMP X11, X1
	0x03431D0C B.EQ 0x3431D2C
	0x03431D10 SUBS X9, X9, 0x1
	0x03431D14 ADD X10, X10, 0x10
	0x03431D18 B.NE 0x3431D04
	0x03431D1C MOV X0, X22
	0x03431D20 MOV W2, W31
	0x03431D24 BL 0x1C5C788
	0x03431D28 B 0x3431D38
	0x03431D2C LDRSW X9, [X10]
	0x03431D30 ADD X8, X8, X9, 0x4, LSL
	0x03431D34 ADD X0, X8, 0x138
	0x03431D38 LDP X8, X1, [X0]
	0x03431D3C MOV X0, X22
	0x03431D40 BLR X8
	0x03431D44 CBNZ X23, 0x34321DC
	0x03431D48 CMP W20, 0x9
	0x03431D4C B.EQ 0x3431D54
	0x03431D50 CBNZ W20, 0x343216C
	0x03431D54 LDRB W8, [X19 + 0x30]
	0x03431D58 CBZ W8, 0x3431E54
	0x03431D5C ADRP X8, 0xCC2000
	0x03431D60 LDR X8, [X8 + 0x9D0]
	0x03431D64 LDR X0, [X8]
	0x03431D68 MOVZ W1, 0x4
	0x03431D6C BL 0x1C16D6C
	0x03431D70 MOV X22, X0
	0x03431D74 CBZ X0, 0x3432208
	0x03431D78 CBZ X21, 0x3431D90
	0x03431D7C LDR X8, [X22]
	0x03431D80 LDR X1, [X8 + 0x40]
	0x03431D84 MOV X0, X21
	0x03431D88 BL 0x1C16E00
	0x03431D8C CBZ X0, 0x3432220
	0x03431D90 LDR W8, [X22 + 0x18]
	0x03431D94 CBZ W8, 0x343220C
	0x03431D98 STR X21, [X22 + 0x20]
	0x03431D9C ADRP X20, 0xCFD000
	0x03431DA0 LDR X20, [X20 + 0xF18]
	0x03431DA4 LDR X0, [X20]
	0x03431DA8 CBZ X0, 0x3431DC0
	0x03431DAC LDR X8, [X22]
	0x03431DB0 LDR X1, [X8 + 0x40]
	0x03431DB4 BL 0x1C16E00
	0x03431DB8 CBZ X0, 0x343222C
	0x03431DBC LDR W8, [X22 + 0x18]
	0x03431DC0 CMP W8, 0x1
	0x03431DC4 B.LS 0x3432210
	0x03431DC8 LDR X8, [X20]
	0x03431DCC ADRP X9, 0xCC3000
	0x03431DD0 STR X8, [X22 + 0x28]
	0x03431DD4 LDR X8, [X19 + 0x30]
	0x03431DD8 LDR X9, [X9 + 0x478]
	0x03431DDC STR X8, [X31 + 0x20]
	0x03431DE0 LDR X0, [X9]
	0x03431DE4 ADD X1, X31, 0x20
	0x03431DE8 BL 0x1C16E04
	0x03431DEC MOV X21, X0
	0x03431DF0 CBZ X0, 0x3431E08
	0x03431DF4 LDR X8, [X22]
	0x03431DF8 LDR X1, [X8 + 0x40]
	0x03431DFC MOV X0, X21
	0x03431E00 BL 0x1C16E00
	0x03431E04 CBZ X0, 0x3432238
	0x03431E08 LDR W8, [X22 + 0x18]
	0x03431E0C CMP W8, 0x2
	0x03431E10 B.LS 0x3432214
	0x03431E14 STR X21, [X22 + 0x30]
	0x03431E18 LDR X0, [X26]
	0x03431E1C CBZ X0, 0x3431E34
	0x03431E20 LDR X8, [X22]
	0x03431E24 LDR X1, [X8 + 0x40]
	0x03431E28 BL 0x1C16E00
	0x03431E2C CBZ X0, 0x3432244
	0x03431E30 LDR W8, [X22 + 0x18]
	0x03431E34 CMP W8, 0x3
	0x03431E38 B.LS 0x3432218
	0x03431E3C LDR X8, [X26]
	0x03431E40 STR X8, [X22 + 0x38]
	0x03431E44 MOV X0, X22
	0x03431E48 MOV X1, X31
	0x03431E4C BL 0x3227578
	0x03431E50 MOV X21, X0
	0x03431E54 LDR X22, [X19 + 0x38]
	0x03431E58 CBZ X22, 0x3431E9C
	0x03431E5C LDR X0, [X24]
	0x03431E60 LDR W8, [X0 + 0xE0]
	0x03431E64 CBNZ W8, 0x3431E6C
	0x03431E68 BL 0x1C16DFC
	0x03431E6C MOV X0, X22
	0x03431E70 MOV X1, X31
	0x03431E74 BL 0x3624D20
	0x03431E78 ADRP X8, 0xCFD000
	0x03431E7C LDR X8, [X8 + 0xF20]
	0x03431E80 LDR X3, [X26]
	0x03431E84 MOV X2, X0
	0x03431E88 LDR X1, [X8]
	0x03431E8C MOV X0, X21
	0x03431E90 MOV X4, X31
	0x03431E94 BL 0x32277C4
	0x03431E98 MOV X21, X0
	0x03431E9C LDR X22, [X19 + 0x40]
	0x03431EA0 CBZ X22, 0x3431EE4
	0x03431EA4 LDR X0, [X24]
	0x03431EA8 LDR W8, [X0 + 0xE0]
	0x03431EAC CBNZ W8, 0x3431EB4
	0x03431EB0 BL 0x1C16DFC
	0x03431EB4 MOV X0, X22
	0x03431EB8 MOV X1, X31
	0x03431EBC BL 0x3624D20
	0x03431EC0 ADRP X8, 0xCFE000
	0x03431EC4 LDR X8, [X8 + 0x20]
	0x03431EC8 LDR X3, [X26]
	0x03431ECC MOV X2, X0
	0x03431ED0 LDR X1, [X8]
	0x03431ED4 MOV X0, X21
	0x03431ED8 MOV X4, X31
	0x03431EDC BL 0x32277C4
	0x03431EE0 MOV X21, X0
	0x03431EE4 LDR X25, [X31 + 0x18]
	0x03431EE8 CBZ X25, 0x34321E4
	0x03431EEC LDR X0, [X25 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFAD000
	014 Move W8, [X20+1631]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {76}
	020 Move X0, 0xCFF000
	021 Move X0, [X0+352]
	022 Call 0x1C17CF4
	023 Move X0, 0xCFF000
	024 Move X0, [X0+360]
	025 Call 0x1C17CF4
	026 Move X0, 0xCFE000
	027 Move X0, [X0+1384]
	028 Call 0x1C17CF4
	029 Move X0, 0xCCC000
	030 Move X0, [X0+2264]
	031 Call 0x1C17CF4
	032 Move X0, 0xCC4000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0xCC4000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0xCC4000
	039 Move X0, [X0+1744]
	040 Call 0x1C17CF4
	041 Move X0, 0xCFE000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0xCFF000
	045 Move X0, [X0+368]
	046 Call 0x1C17CF4
	047 Move X0, 0xCC6000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC6000
	051 Move X0, [X0+496]
	052 Call 0x1C17CF4
	053 Move X0, 0xCC6000
	054 Move X0, [X0+504]
	055 Call 0x1C17CF4
	056 Move X0, 0xCCC000
	057 Move X0, [X0+928]
	058 Call 0x1C17CF4
	059 Move X0, 0xCEC000
	060 Move X0, [X0+1240]
	061 Call 0x1C17CF4
	062 Move X0, 0xCFF000
	063 Move X0, [X0+376]
	064 Call 0x1C17CF4
	065 Move X0, 0xCFE000
	066 Move X0, [X0+2000]
	067 Call 0x1C17CF4
	068 Move X0, 0xCFE000
	069 Move X0, [X0+2008]
	070 Call 0x1C17CF4
	071 Move X0, 0xCC3000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+1631], W8
	076 Move [X31+24], X31
	077 Move X28, 0xCFE000
	078 Move W8, [X19]
	079 Move X28, [X28+1384]
	080 Compare W8, 0
	081 JumpIfEqual {210}
	082 Move X8, [X19+32]
	083 Compare X8, 0
	084 JumpIfEqual {302}
	085 Move X25, [X19+40]
	086 Compare X25, 0
	087 JumpIfEqual {320}
	088 Move X0, [X25+32]
	089 Compare X0, 0
	090 JumpIfEqual {321}
	091 Move X8, 0xCFF000
	092 Move X9, 0xCC3000
	093 Move X8, [X8+376]
	094 Move X9, [X9+2440]
	095 Move X21, [X8]
	096 Move X20, [X9]
	097 Move X1, X31
	098 Call Uri.get_AbsolutePath, X0
	099 Move X8, 0xCCC000
	100 Move X8, [X8+2264]
	101 Move X22, X0
	102 Move X0, [X8]
	103 Move W1, 1
	104 Call 0x1C17D6C
	105 Move X1, X0
	106 Compare X1, 0
	107 JumpIfEqual {322}
	108 Move W8, [X1+24]
	109 Compare W8, 0
	110 JumpIfEqual {323}
	111 Move W8, 47
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Compare X22, 0
	114 JumpIfEqual {324}
	115 Move X0, X22
	116 Move X2, X31
	117 Call String.TrimEnd, X0, X1
	118 Move X1, X21
	119 Move X2, X31
	120 Call String.Concat, X0, X1
	121 Move X8, 0xCCC000
	122 Move X8, [X8+928]
	123 Move X22, X0
	124 Move X23, [X25+32]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X21, X0
	128 Move X1, X23
	129 Move X2, X31
	130 Call UriBuilder..ctor, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {325}
	133 Move X0, X21
	134 Move X1, X22
	135 Move X2, X31
	136 Call UriBuilder.set_Path, X0, X1
	137 Move X0, X21
	138 Move X1, X20
	139 Move X2, X31
	140 Call UriBuilder.set_Query, X0, X1
	141 Move X0, X21
	142 Move X1, X31
	143 Call UriBuilder.get_Uri, X0
	144 Move X8, 0xCEC000
	145 Move X9, 0xCC4000
	146 Move X8, [X8+1240]
	147 Move X9, [X9+1744]
	148 Move X20, X0
	149 Move X21, [X8]
	150 Move X0, [X9]
	151 Call 0x1C17F10
	152 Move X8, 0xCC4000
	153 Move X8, [X8+1728]
	154 Move X22, X0
	155 Move X1, [X8]
	156 Call Dictionary`2<Object, Object>..ctor, X0
	157 Move X8, 0xCFE000
	158 Move X8, [X8+2008]
	159 Move X1, [X19+48]
	160 Move X0, [X8]
	161 Move X2, X31
	162 Call String.Concat, X0, X1
	163 Compare X22, 0
	164 JumpIfEqual {326}
	165 Move X8, 0xCFE000
	166 Move X8, [X8+2000]
	167 Move X9, 0xCC4000
	168 Move X9, [X9+2064]
	169 Move X2, X0
	170 Move X1, [X8]
	171 Move X3, [X9]
	172 Move X0, X22
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X19+32]
	175 Move X1, X31
	176 Call JsonWriter.ToJson, X0
	177 Move X23, X0
	178 Move X0, X31
	179 Call Encoding.get_UTF8
	180 Compare X0, 0
	181 JumpIfEqual {327}
	182 Move X8, [X0]
	183 Move X9, [X8+616]
	184 Move X2, [X8+624]
	185 Move X1, X23
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X24, [X25+16]
	188 Compare X24, 0
	189 JumpIfEqual {328}
	190 Move X10, 0xCFE000
	191 Move X10, [X10+1976]
	192 Move X8, [X24]
	193 Move W26, [X25+24]
	194 Move X27, [X19+56]
	195 Move X25, [X19+64]
	196 Move X1, [X10]
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Move X23, X0
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move W2, 3
	208 Move X0, X24
	209 Call 0x1C5D788
	210 Move X8, [X19+72]
	211 Move TEMP, 0
	212 Not TEMP
	213 Move W9, TEMP
	214 Move [X31+24], X8
	215 Move [X19+72], X31
	216 Move [X19], W9
	217 Move W9, [X10]
	218 Add W9, W9, 3
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X9, [X0+8]
	223 Move X0, X24
	224 Move X1, X21
	225 Move X2, X20
	226 Move X3, X22
	227 Move X4, X23
	228 Move W5, W26
	229 Move X6, X27
	230 Move X7, X25
	231 Move [X31], X9
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Compare X0, 0
	234 JumpIfEqual {329}
	235 Move X8, 0xCC6000
	236 Move X8, [X8+504]
	237 Move X1, [X8]
	238 Call Task`1<Object>.GetAwaiter, X0
	239 Move X8, 0xCC6000
	240 Move X8, [X8+496]
	241 Move [X31+24], X0
	242 Move X1, [X8]
	243 Add X0, X31, 24
	244 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {274}
	249 Move X8, 0xCC6000
	250 Move X8, [X8+480]
	251 Add X0, X31, 24
	252 Move X1, [X8]
	253 Call TaskAwaiter`1<Object>.GetResult, X0
	254 Move X8, 0xCFF000
	255 Move X8, [X8+368]
	256 Move X1, [X8]
	257 Call JsonParser.FromJson, X0
	258 Move TEMP, 1
	259 Not TEMP
	260 Move W8, TEMP
	261 Move [X19+8], W8
	262 Move X20, X0
	263 Move X0, [X28]
	264 Move X21, 0xCFF000
	265 Move W8, [X0+224]
	266 Move X21, [X21+360]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X2, [X21]
	271 Move X0, X19
	272 Move X1, X20
	273 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	274 Move [X19], W31
	275 Move X8, [X31+24]
	276 Move [X19+72], X8
	277 Move X0, [X28]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X8, 0xCFF000
	283 Move X8, [X8+352]
	284 Add X0, X19, 8
	285 Move X3, [X8]
	286 Add X1, X31, 24
	287 Move X2, X19
	288 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	289 Move X20, [X31+96]
	290 Move X19, [X31+104]
	291 Move X22, [X31+80]
	292 Move X21, [X31+88]
	293 Move X24, [X31+64]
	294 Move X23, [X31+72]
	295 Move X26, [X31+48]
	296 Move X25, [X31+56]
	297 Move X28, [X31+32]
	298 Move X27, [X31+40]
	299 Move X30, [X31+16]
	300 Add X31, X31, 112
	301 Return 
	302 Move X0, 0xCCB000
	303 Move X0, [X0+1400]
	304 Call 0x1C17D08
	305 Call 0x1C17F10
	306 Move X20, X0
	307 Move X0, 0xCFE000
	308 Move X0, [X0+3016]
	309 Call 0x1C17D08
	310 Move X1, X0
	311 Move X0, X20
	312 Move X2, X31
	313 Call ArgumentException..ctor, X0, X1
	314 Move X0, 0xCFF000
	315 Move X0, [X0+384]
	316 Call 0x1C17D08
	317 Move X1, X0
	318 Move X0, X20
	319 Call 0x1C17DEC
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F28
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Move X20, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X20
	333 Call 0x3EB2AD0
	334 Move X20, X0
	335 Move X0, 0xCC3000
	336 Move X0, [X0+2000]
	337 Call 0x1C17D08
	338 Move X8, [X20]
	339 Move X1, [X8]
	340 Call 0x1C18270
	341 Move TEMP, X0
	342 And TEMP, TEMP, 1
	343 Compare TEMP, 1
	344 JumpIfNotEqual {365}
	345 Move X20, [X20]
	346 Call 0x3EB2AE0
	347 Move TEMP, 1
	348 Not TEMP
	349 Move W8, TEMP
	350 Move [X19+8], W8
	351 Move X0, 0xCFE000
	352 Move X0, [X0+1384]
	353 Call 0x1C17D08
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, 0xCFF000
	359 Move X0, [X0+392]
	360 Call 0x1C17D08
	361 Move X2, X0
	362 Move X0, X19
	363 Move X1, X20
	364 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	365 Move W0, 8
	366 Call 0x3EB2AF0
	367 Move X8, [X20]
	368 Move [X0], X8
	369 Move X1, 0xA84000
	370 Add X1, X1, 3672
	371 Move X2, X31
	372 Call 0x3EB2B00
	373 Move X20, X0
	374 Call 0x3EB2AE0
	375 Move X0, X20
	376 Call 0x1D2D690
	377 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03431EF0 CBZ X0, 0x34321E8
	0x03431EF4 MOV X1, X31
	0x03431EF8 BL 0x361B448
	0x03431EFC ADRP X8, 0xCCB000
	0x03431F00 LDR X8, [X8 + 0x8D8]
	0x03431F04 MOV X22, X0
	0x03431F08 LDR X0, [X8]
	0x03431F0C MOVZ W1, 0x1
	0x03431F10 BL 0x1C16D6C
	0x03431F14 MOV X1, X0
	0x03431F18 CBZ X1, 0x34321EC
	0x03431F1C LDR W8, [X1 + 0x18]
	0x03431F20 CBZ W8, 0x34321F0
	0x03431F24 MOVZ W8, 0x2F
	0x03431F28 STRH W8, [X1 + 0x20]
	0x03431F2C CBZ X22, 0x34321F4
	0x03431F30 MOV X0, X22
	0x03431F34 MOV X2, X31
	0x03431F38 BL 0x322BC58
	0x03431F3C LDR X1, [X31 + 0x10]
	0x03431F40 MOV X2, X31
	0x03431F44 BL 0x321B938
	0x03431F48 ADRP X8, 0xCCB000
	0x03431F4C LDR X23, [X25 + 0x20]
	0x03431F50 LDR X8, [X8 + 0x3A0]
	0x03431F54 MOV X22, X0
	0x03431F58 LDR X0, [X8]
	0x03431F5C BL 0x1C16F10
	0x03431F60 MOV X20, X0
	0x03431F64 MOV X1, X23
	0x03431F68 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFAD000
	007 Move X21, 0xCFE000
	008 Move W8, [X22+1632]
	009 Move X21, [X21+1384]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xCFF000
	017 Move X0, [X0+400]
	018 Call 0x1C17CF4
	019 Move X0, 0xCFE000
	020 Move X0, [X0+1384]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1632], W8
	024 Move X0, [X21]
	025 Move X21, 0xCFF000
	026 Move W8, [X0+224]
	027 Move X21, [X21+400]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

