Type: Nakama.Client/<EventAsync>d__63

Method: System.Void MoveNext()

Disassembly:
	0x03455344 LDR X0, [X22]
	0x03455348 LDR W8, [X0 + 0xE0]
	0x0345534C CBNZ W8, 0x3455358
	0x03455350 BL 0x1C16DFC
	0x03455354 LDR X0, [X22]
	0x03455358 LDR X8, [X0 + 0xB8]
	0x0345535C LDR X1, [X8]
	0x03455360 ADD X0, X31, 0x28
	0x03455364 MOV X2, X31
	0x03455368 BL 0x335FC68
	0x0345536C CBZ X21, 0x3455618
	0x03455370 LDR X8, [X21]
	0x03455374 LDR X1, [X23]
	0x03455378 MOV X22, X0
	0x0345537C LDRH W9, [X8 + 0x12E]
	0x03455380 CBZ X9, 0x34553A4
	0x03455384 LDR X10, [X8 + 0xB0]
	0x03455388 ADD X10, X10, 0x8
	0x0345538C LDUR X11, [X10 - 0x8]
	0x03455390 CMP X11, X1
	0x03455394 B.EQ 0x34553B4
	0x03455398 SUBS X9, X9, 0x1
	0x0345539C ADD X10, X10, 0x10
	0x034553A0 B.NE 0x345538C
	0x034553A4 MOVZ W2, 0xB
	0x034553A8 MOV X0, X21
	0x034553AC BL 0x1C5C788
	0x034553B0 B 0x34553C4
	0x034553B4 LDR W9, [X10]
	0x034553B8 ADD W9, W9, 0xB
	0x034553BC ADD X8, X8, W9, 0x4, SXTW
	0x034553C0 ADD X0, X8, 0x138
	0x034553C4 LDP X8, X2, [X0]
	0x034553C8 MOV X0, X21
	0x034553CC MOV X1, X22
	0x034553D0 BLR X8
	0x034553D4 TBZ X0, 0x0, 0x3455468
	0x034553D8 LDR X8, [X19 + 0x48]
	0x034553DC CBZ X8, 0x345561C
	0x034553E0 LDR X1, [X8 + 0x18]
	0x034553E4 LDR X3, [X19 + 0x40]
	0x034553E8 LDR X4, [X8 + 0x28]
	0x034553EC MOV X0, X20
	0x034553F0 MOV X2, X31
	0x034553F4 MOV X5, X31
	0x034553F8 BL 0x34440A8
	0x034553FC CBZ X0, 0x3455620
	0x03455400 ADRP X8, 0xC9F000
	0x03455404 LDR X8, [X8 + 0x840]
	0x03455408 LDR X1, [X8]
	0x0345540C BL 0x269F5D0
	0x03455410 ADRP X8, 0xC9F000
	0x03455414 LDR X8, [X8 + 0x838]
	0x03455418 STR X0, [X31 + 0x20]
	0x0345541C LDR X1, [X8]
	0x03455420 ADD X0, X31, 0x20
	0x03455424 BL 0x2677430
	0x03455428 TBNZ X0, 0x0, 0x3455220
	0x0345542C STR W31, [X19]
	0x03455430 LDR X8, [X31 + 0x20]
	0x03455434 STR X8, [X19 + 0x50]
	0x03455438 LDR X0, [X25]
	0x0345543C LDR W8, [X0 + 0xE0]
	0x03455440 CBNZ W8, 0x3455448
	0x03455444 BL 0x1C16DFC
	0x03455448 ADRP X8, 0xCDA000
	0x0345544C LDR X8, [X8 + 0xD50]
	0x03455450 ADD X0, X19, 0x8
	0x03455454 LDR X3, [X8]
	0x03455458 ADD X1, X31, 0x20
	0x0345545C MOV X2, X19
	0x03455460 BL 0x1FBAE10
	0x03455464 B 0x34555DC
	0x03455468 CBZ X20, 0x3455600
	0x0345546C ADRP X8, 0xCDA000
	0x03455470 LDR X8, [X8 + 0xD58]
	0x03455474 LDR X21, [X20 + 0x58]
	0x03455478 LDR X23, [X19 + 0x48]
	0x0345547C LDR X0, [X8]
	0x03455480 BL 0x1C16F10
	0x03455484 ADRP X8, 0xCDA000
	0x03455488 LDR X8, [X8 + 0xD80]
	0x0345548C MOV X22, X0
	0x03455490 LDR X2, [X8]
	0x03455494 MOV X1, X23
	0x03455498 MOV X3, X31
	0x0345549C BL 0x2D27AA8
	0x034554A0 LDR X8, [X19 + 0x48]
	0x034554A4 CBZ X8, 0x34555F4
	0x034554A8 ADRP X9, 0xCDA000
	0x034554AC LDR X23, [X19 + 0x40]
	0x034554B0 LDR X9, [X9 + 0x7C8]
	0x034554B4 CBNZ X23, 0x34554BC
	0x034554B8 LDR X23, [X20 + 0x18]
	0x034554BC LDR X20, [X8 + 0x18]
	0x034554C0 LDR X1, [X8 + 0x28]
	0x034554C4 LDR X2, [X9]
	0x034554C8 STP X31, X31, [X31 + 0x8]
	0x034554CC ADD X0, X31, 0x8
	0x034554D0 BL 0x242E368
	0x034554D4 ADRP X8, 0xCDA000
	0x034554D8 LDR X8, [X8 + 0x7D0]
	0x034554DC LDR X0, [X8]
	0x034554E0 BL 0x1C16F10
	0x034554E4 LDP X3, X4, [X31 + 0x8]
	0x034554E8 MOV X24, X0
	0x034554EC MOV X1, X20
	0x034554F0 MOV X2, X23
	0x034554F4 MOV X5, X31
	0x034554F8 BL 0x3465404
	0x034554FC CBZ X21, 0x34555F8
	0x03455500 ADRP X8, 0xCDA000
	0x03455504 LDR X8, [X8 + 0xD60]
	0x03455508 LDR X3, [X8]
	0x0345550C MOV X0, X21
	0x03455510 MOV X1, X22
	0x03455514 MOV X2, X24
	0x03455518 BL 0x2243230
	0x0345551C CBZ X0, 0x34555FC
	0x03455520 ADRP X8, 0xCDA000
	0x03455524 LDR X8, [X8 + 0xD78]
	0x03455528 LDR X1, [X8]
	0x0345552C BL 0x269F5D0
	0x03455530 ADRP X8, 0xCDA000
	0x03455534 LDR X8, [X8 + 0xD70]
	0x03455538 STR X0, [X31 + 0x18]
	0x0345553C LDR X1, [X8]
	0x03455540 ADD X0, X31, 0x18
	0x03455544 BL 0x2677430
	0x03455548 TBZ X0, 0x0, 0x34555A0
	0x0345554C ADRP X8, 0xCDA000
	0x03455550 LDR X8, [X8 + 0xD68]
	0x03455554 ADD X0, X31, 0x18
	0x03455558 LDR X1, [X8]
	0x0345555C BL 0x2677474
	0x03455560 MOVN W8, 0x1
	0x03455564 STR W8, [X19]
	0x03455568 STR X31, [X19 + 0x48]
	0x0345556C MOV X20, X0
	0x03455570 LDR X0, [X25]
	0x03455574 ADRP X21, 0xCD9000
	0x03455578 ADD X19, X19, 0x8
	0x0345557C LDR W8, [X0 + 0xE0]
	0x03455580 LDR X21, [X21 + 0xCF0]
	0x03455584 CBNZ W8, 0x345558C
	0x03455588 BL 0x1C16DFC
	0x0345558C LDR X2, [X21]
	0x03455590 MOV X0, X19
	0x03455594 MOV X1, X20
	0x03455598 BL 0x26322B0
	0x0345559C B 0x34555DC
	0x034555A0 MOVZ W8, 0x1
	0x034555A4 STR W8, [X19]
	0x034555A8 LDR X8, [X31 + 0x18]
	0x034555AC STR X8, [X19 + 0x58]
	0x034555B0 LDR X0, [X25]
	0x034555B4 LDR W8, [X0 + 0xE0]
	0x034555B8 CBNZ W8, 0x34555C0
	0x034555BC BL 0x1C16DFC
	0x034555C0 ADRP X8, 0xCDA000
	0x034555C4 LDR X8, [X8 + 0xD48]
	0x034555C8 ADD X0, X19, 0x8
	0x034555CC LDR X3, [X8]
	0x034555D0 ADD X1, X31, 0x18
	0x034555D4 MOV X2, X19
	0x034555D8 BL 0x1FBAE10
	0x034555DC LDP X20, X19, [X31 + 0x60]
	0x034555E0 LDP X22, X21, [X31 + 0x50]
	0x034555E4 LDP X24, X23, [X31 + 0x40]
	0x034555E8 LDP X30, X25, [X31 + 0x30]
	0x034555EC ADD X31, X31, 0x70
	0x034555F0 RET
	0x034555F4 BL 0x1C16F20
	0x034555F8 BL 0x1C16F20
	0x034555FC BL 0x1C16F20
	0x03455600 BL 0x1C16F20
	0x03455604 BL 0x1C16F20
	0x03455608 BL 0x1C16F20
	0x0345560C BL 0x1C16F20
	0x03455610 BL 0x1C16F20
	0x03455614 BL 0x1C16F20
	0x03455618 BL 0x1C16F20
	0x0345561C BL 0x1C16F20
	0x03455620 BL 0x1C16F20
	0x03455624 B 0x3455698
	0x03455628 B 0x3455698
	0x0345562C B 0x3455698
	0x03455630 B 0x3455698
	0x03455634 B 0x3455698
	0x03455638 B 0x3455698
	0x0345563C B 0x3455698
	0x03455640 B 0x3455698
	0x03455644 B 0x3455698
	0x03455648 B 0x3455698
	0x0345564C B 0x3455698
	0x03455650 B 0x3455698
	0x03455654 B 0x3455698
	0x03455658 B 0x3455698
	0x0345565C B 0x3455698
	0x03455660 B 0x3455698
	0x03455664 B 0x3455698
	0x03455668 B 0x3455698
	0x0345566C B 0x3455698
	0x03455670 B 0x3455698
	0x03455674 B 0x3455698
	0x03455678 B 0x3455698
	0x0345567C B 0x3455698
	0x03455680 B 0x3455698
	0x03455684 B 0x3455698
	0x03455688 B 0x3455698
	0x0345568C B 0x3455698
	0x03455690 B 0x3455698
	0x03455694 B 0x3455698
	0x03455698 MOV X20, X0
	0x0345569C CMP W1, 0x1
	0x034556A0 B.NE 0x3455740
	0x034556A4 MOV X0, X20
	0x034556A8 BL 0x3EB1AD0
	0x034556AC MOV X20, X0
	0x034556B0 ADRP X0, 0xC9E000
	0x034556B4 LDR X0, [X0 + 0x7D0]
	0x034556B8 BL 0x1C16D08
	0x034556BC LDR X8, [X20]
	0x034556C0 LDR X1, [X8]
	0x034556C4 BL 0x1C17270
	0x034556C8 TBZ X0, 0x0, 0x3455718
	0x034556CC LDR X20, [X20]
	0x034556D0 BL 0x3EB1AE0
	0x034556D4 MOVN W8, 0x1
	0x034556D8 STR X31, [X19 + 0x48]
	0x034556DC STR W8, [X19], #0x8
	0x034556E0 ADRP X0, 0xCD9000
	0x034556E4 LDR X0, [X0 + 0x5B0]
	0x034556E8 BL 0x1C16D08
	0x034556EC LDR W8, [X0 + 0xE0]
	0x034556F0 CBNZ W8, 0x34556F8
	0x034556F4 BL 0x1C16DFC
	0x034556F8 ADRP X0, 0xCD9000
	0x034556FC LDR X0, [X0 + 0xD20]
	0x03455700 BL 0x1C16D08
	0x03455704 MOV X2, X0
	0x03455708 MOV X0, X19
	0x0345570C MOV X1, X20
	0x03455710 BL 0x26324C8
	0x03455714 B 0x34555DC
	0x03455718 MOVZ W0, 0x8
	0x0345571C BL 0x3EB1AF0
	0x03455720 LDR X8, [X20]
	0x03455724 STR X8, [X0]
	0x03455728 ADRP X1, 0xA5F000
	0x0345572C ADD X1, X1, 0xE58
	0x03455730 MOV X2, X31
	0x03455734 BL 0x3EB1B00
	0x03455738 MOV X20, X0
	0x0345573C BL 0x3EB1AE0
	0x03455740 MOV X0, X20
	0x03455744 BL 0x1D2C690
	0x03455748 BL 0x1990590
	0x0345574C STR X30, [X31 - 0x30]!
	0x03455750 STP X22, X21, [X31 + 0x10]
	0x03455754 STP X20, X19, [X31 + 0x20]
	0x03455758 ADRP X22, 0xF88000
	0x0345575C ADRP X21, 0xCD9000
	0x03455760 LDRB W8, [X22 + 0x782]
	0x03455764 LDR X21, [X21 + 0x5B0]
	0x03455768 MOV X19, X1
	0x0345576C MOV X20, X0
	0x03455770 TBNZ X8, 0x0, 0x3455794
	0x03455774 ADRP X0, 0xCD9000
	0x03455778 LDR X0, [X0 + 0xD28]
	0x0345577C BL 0x1C16CF4
	0x03455780 ADRP X0, 0xCD9000
	0x03455784 LDR X0, [X0 + 0x5B0]
	0x03455788 BL 0x1C16CF4
	0x0345578C MOVZ W8, 0x1
	0x03455790 STRB W8, [X22 + 0x782]
	0x03455794 LDR X0, [X21]
	0x03455798 ADRP X21, 0xCD9000
	0x0345579C LDR W8, [X0 + 0xE0]
	0x034557A0 LDR X21, [X21 + 0xD28]
	0x034557A4 CBNZ W8, 0x34557AC
	0x034557A8 BL 0x1C16DFC
	0x034557AC LDR X2, [X21]
	0x034557B0 ADD X0, X20, 0x8
	0x034557B4 MOV X1, X19
	0x034557B8 LDP X20, X19, [X31 + 0x20]
	0x034557BC LDP X22, X21, [X31 + 0x10]
	0x034557C0 LDR X30, [X31], #0x30
	0x034557C4 B 0x2632228
	0x034557C8 SUB X31, X31, 0x70
	0x034557CC STP X30, X25, [X31 + 0x30]
	0x034557D0 STP X24, X23, [X31 + 0x40]
	0x034557D4 STP X22, X21, [X31 + 0x50]
	0x034557D8 STP X20, X19, [X31 + 0x60]
	0x034557DC ADRP X20, 0xF88000
	0x034557E0 LDRB W8, [X20 + 0x783]
	0x034557E4 MOV X19, X0
	0x034557E8 TBNZ X8, 0x0, 0x34558D8
	0x034557EC ADRP X0, 0xCDA000
	0x034557F0 LDR X0, [X0 + 0xD90]
	0x034557F4 BL 0x1C16CF4
	0x034557F8 ADRP X0, 0xCDA000
	0x034557FC LDR X0, [X0 + 0xD98]
	0x03455800 BL 0x1C16CF4
	0x03455804 ADRP X0, 0xCD9000
	0x03455808 LDR X0, [X0 + 0xD38]
	0x0345580C BL 0x1C16CF4
	0x03455810 ADRP X0, 0xCD9000
	0x03455814 LDR X0, [X0 + 0x770]
	0x03455818 BL 0x1C16CF4
	0x0345581C ADRP X0, 0xCA0000
	0x03455820 LDR X0, [X0 + 0xA10]
	0x03455824 BL 0x1C16CF4
	0x03455828 ADRP X0, 0xC9F000
	0x0345582C LDR X0, [X0 + 0x9F0]
	0x03455830 BL 0x1C16CF4
	0x03455834 ADRP X0, 0xCDA000
	0x03455838 LDR X0, [X0 + 0xDA0]
	0x0345583C BL 0x1C16CF4
	0x03455840 ADRP X0, 0xC9F000
	0x03455844 LDR X0, [X0 + 0x818]
	0x03455848 BL 0x1C16CF4
	0x0345584C ADRP X0, 0xCDA000
	0x03455850 LDR X0, [X0 + 0x7C8]
	0x03455854 BL 0x1C16CF4
	0x03455858 ADRP X0, 0xCDA000
	0x0345585C LDR X0, [X0 + 0x7D0]
	0x03455860 BL 0x1C16CF4
	0x03455864 ADRP X0, 0xCDA000
	0x03455868 LDR X0, [X0 + 0xDA8]
	0x0345586C BL 0x1C16CF4
	0x03455870 ADRP X0, 0xCDA000
	0x03455874 LDR X0, [X0 + 0xDB0]
	0x03455878 BL 0x1C16CF4
	0x0345587C ADRP X0, 0xC9F000
	0x03455880 LDR X0, [X0 + 0x830]
	0x03455884 BL 0x1C16CF4
	0x03455888 ADRP X0, 0xC9F000
	0x0345588C LDR X0, [X0 + 0x838]
	0x03455890 BL 0x1C16CF4
	0x03455894 ADRP X0, 0xCDA000
	0x03455898 LDR X0, [X0 + 0xDB8]
	0x0345589C BL 0x1C16CF4
	0x034558A0 ADRP X0, 0xC9F000
	0x034558A4 LDR X0, [X0 + 0x840]
	0x034558A8 BL 0x1C16CF4
	0x034558AC ADRP X0, 0xCDA000
	0x034558B0 LDR X0, [X0 + 0xDC0]
	0x034558B4 BL 0x1C16CF4
	0x034558B8 ADRP X0, 0xCDA000
	0x034558BC LDR X0, [X0 + 0xDC8]
	0x034558C0 BL 0x1C16CF4
	0x034558C4 ADRP X0, 0xCDA000
	0x034558C8 LDR X0, [X0 + 0xDD0]
	0x034558CC BL 0x1C16CF4
	0x034558D0 MOVZ W8, 0x1
	0x034558D4 STRB W8, [X20 + 0x783]
	0x034558D8 STP X31, X31, [X31 + 0x20]
	0x034558DC STR X31, [X31 + 0x18]
	0x034558E0 ADRP X25, 0xCD9000
	0x034558E4 LDR W8, [X19]
	0x034558E8 LDR X20, [X19 + 0x20]
	0x034558EC LDR X25, [X25 + 0x770]
	0x034558F0 CBZ W8, 0x3455914
	0x034558F4 CMP W8, 0x1
	0x034558F8 B.NE 0x3455940
	0x034558FC LDR X8, [X19 + 0x68]
	0x03455900 MOVN W9, 0x0
	0x03455904 STR X8, [X31 + 0x18]
	0x03455908 STR X31, [X19 + 0x68]
	0x0345590C STR W9, [X19]
	0x03455910 B 0x3455C54
	0x03455914 LDR X8, [X19 + 0x60]
	0x03455918 MOVN W9, 0x0
	0x0345591C STR X8, [X31 + 0x20]
	0x03455920 STR X31, [X19 + 0x60]
	0x03455924 STR W9, [X19]
	0x03455928 ADRP X8, 0xC9F000
	0x0345592C LDR X8, [X8 + 0x830]
	0x03455930 ADD X0, X31, 0x20
	0x03455934 LDR X1, [X8]
	0x03455938 BL 0x2677474
	0x0345593C B 0x3455B70
	0x03455940 ADRP X8, 0xCDA000
	0x03455944 LDR X8, [X8 + 0xDD0]
	0x03455948 LDR X0, [X8]
	0x0345594C BL 0x1C16F10
	0x03455950 MOV X21, X0
	0x03455954 MOV X1, X31
	0x03455958 BL 0x3449520
	0x0345595C STR X21, [X19 + 0x58]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X20, 0xF89000
	011 Move W8, [X20+1917]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {61}
	017 Move X0, 0xCDB000
	018 Move X0, [X0+3320]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDB000
	021 Move X0, [X0+3328]
	022 Call 0x1C17CF4
	023 Move X0, 0xCA2000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCA1000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0xCA0000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xCA7000
	033 Move X0, [X0+2072]
	034 Call 0x1C17CF4
	035 Move X0, 0xCA0000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0xCDB000
	039 Move X0, [X0+1992]
	040 Call 0x1C17CF4
	041 Move X0, 0xCDB000
	042 Move X0, [X0+2000]
	043 Call 0x1C17CF4
	044 Move X0, 0xCA0000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0xCA0000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0xCA0000
	051 Move X0, [X0+2112]
	052 Call 0x1C17CF4
	053 Move X0, 0xCDB000
	054 Move X0, [X0+3336]
	055 Call 0x1C17CF4
	056 Move X0, 0xCDB000
	057 Move X0, [X0+3344]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+1917], W8
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+24], X31
	064 Move X25, 0xCA2000
	065 Move W8, [X19]
	066 Move X20, [X19+32]
	067 Move X25, [X25+640]
	068 Compare W8, 0
	069 JumpIfEqual {78}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+96]
	072 Move TEMP, 0
	073 Not TEMP
	074 Move W9, TEMP
	075 Move [X31+24], X8
	076 Move [X19+96], X31
	077 Move [X19], W9
	078 Move X8, [X19+88]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+32], X8
	083 Move [X19+88], X31
	084 Move [X19], W9
	085 Move X8, 0xCA0000
	086 Move X8, [X8+2096]
	087 Add X0, X31, 32
	088 Move X1, [X8]
	089 Call TaskAwaiter`1<Object>.GetResult, X0
	090 Move X8, 0xCDB000
	091 Move X8, [X8+3344]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Move X1, X31
	096 Call <>c__DisplayClass63_0..ctor, X0
	097 Move [X19+80], X21
	098 Compare X21, 0
	099 JumpIfEqual {358}
	100 Move X8, [X19+32]
	101 Move [X21+16], X8
	102 Move X8, [X19+40]
	103 Move [X21+24], X8
	104 Move X8, [X19+48]
	105 Move [X21+32], X8
	106 Move X8, [X19+56]
	107 Move [X21+40], X8
	108 Move X8, [X19+64]
	109 Move [X21+48], X8
	110 Compare X20, 0
	111 JumpIfEqual {359}
	112 Move W8, [X20+16]
	113 Compare W8, 0
	114 JumpIfEqual {252}
	115 Move X8, [X19+80]
	116 Compare X8, 0
	117 JumpIfEqual {360}
	118 Move X21, [X8+24]
	119 Compare X21, 0
	120 JumpIfEqual {361}
	121 Move X23, 0xCA0000
	122 Move X8, [X21]
	123 Move X23, [X23+2072]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X23]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 7
	135 Move X0, X21
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 7
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X21
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X1, X31
	146 Call String.IsNullOrEmpty, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {250}
	151 Move X8, [X19+80]
	152 Compare X8, 0
	153 JumpIfEqual {362}
	154 Move X9, 0xCA0000
	155 Move X9, [X9+2544]
	156 Move X21, [X8+24]
	157 Move X0, [X9]
	158 Move W9, [X0+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X31
	163 Call DateTime.get_UtcNow
	164 Move X22, 0xCA1000
	165 Move X22, [X22+2576]
	166 Move X8, X0
	167 Move [X31+40], X8
	168 Move X0, [X22]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X22]
	174 Move X8, [X0+184]
	175 Move X1, [X8]
	176 Add X0, X31, 40
	177 Move X2, X31
	178 Call DateTime.Add, X0, X1
	179 Compare X21, 0
	180 JumpIfEqual {363}
	181 Move X8, [X21]
	182 Move X1, [X23]
	183 Move X22, X0
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move W2, 11
	194 Move X0, X21
	195 Call 0x1C5D788
	196 Move W9, [X10]
	197 Add W9, W9, 11
	198 Add X8, X8, W9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X2, [X0+8]
	202 Move X0, X21
	203 Move X1, X22
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {250}
	209 Move X8, [X19+80]
	210 Compare X8, 0
	211 JumpIfEqual {364}
	212 Move X1, [X8+24]
	213 Move X3, [X19+72]
	214 Move X4, [X8+48]
	215 Move X0, X20
	216 Move X2, X31
	217 Move X5, X31
	218 Call Client.SessionRefreshAsync, X0, X1, X2, X3, X4
	219 Compare X0, 0
	220 JumpIfEqual {365}
	221 Move X8, 0xCA0000
	222 Move X8, [X8+2112]
	223 Move X1, [X8]
	224 Call Task`1<Object>.GetAwaiter, X0
	225 Move X8, 0xCA0000
	226 Move X8, [X8+2104]
	227 Move [X31+32], X0
	228 Move X1, [X8]
	229 Add X0, X31, 32
	230 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {85}
	235 Move [X19], W31
	236 Move X8, [X31+32]
	237 Move [X19+88], X8
	238 Move X0, [X25]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, 0xCDB000
	244 Move X8, [X8+3320]
	245 Add X0, X19, 8
	246 Move X3, [X8]
	247 Add X1, X31, 32
	248 Move X2, X19
	249 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	250 Compare X20, 0
	251 JumpIfEqual {357}
	252 Move X8, 0xCA7000
	253 Move X8, [X8+2072]
	254 Move X21, [X20+88]
	255 Move X23, [X19+80]
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X8, 0xCDB000
	259 Move X8, [X8+3336]
	260 Move X22, X0
	261 Move X2, [X8]
	262 Move X1, X23
	263 Move X3, X31
	264 Call Func`1<Object>..ctor, X0, X1, X2
	265 Move X8, [X19+80]
	266 Compare X8, 0
	267 JumpIfEqual {354}
	268 Move X9, 0xCDB000
	269 Move X23, [X19+72]
	270 Move X9, [X9+1992]
	271 Compare X23, 0
	272 JumpIfNotEqual {274}
	273 Move X23, [X20+24]
	274 Move X20, [X8+24]
	275 Move X1, [X8+48]
	276 Move X2, [X9]
	277 Move [X31+8], X31
	278 Move [X31+16], X31
	279 Add X0, X31, 8
	280 Call Nullable`1<CancellationToken>..ctor, X0, X1
	281 Move X8, 0xCDB000
	282 Move X8, [X8+2000]
	283 Move X0, [X8]
	284 Call 0x1C17F10
	285 Move X3, [X31+8]
	286 Move X4, [X31+16]
	287 Move X24, X0
	288 Move X1, X20
	289 Move X2, X23
	290 Move X5, X31
	291 Call RetryHistory..ctor, X0, X1, X2, X3
	292 Compare X21, 0
	293 JumpIfEqual {355}
	294 Move X0, X21
	295 Move X1, X22
	296 Move X2, X24
	297 Move X3, X31
	298 Call RetryInvoker.InvokeWithRetry, X0, X1, X2
	299 Compare X0, 0
	300 JumpIfEqual {356}
	301 Move X1, X31
	302 Call Task.GetAwaiter, X0
	303 Move [X31+24], X0
	304 Add X0, X31, 24
	305 Move X1, X31
	306 Call TaskAwaiter.get_IsCompleted, X0
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfNotEqual {328}
	311 Add X0, X31, 24
	312 Move X1, X31
	313 Call TaskAwaiter.GetResult, X0
	314 Move TEMP, 1
	315 Not TEMP
	316 Move W8, TEMP
	317 Move [X19], W8
	318 Move [X19+80], X31
	319 Move X0, [X25]
	320 Add X19, X19, 8
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X0, X19
	326 Move X1, X31
	327 Call AsyncTaskMethodBuilder.SetResult, X0
	328 Move W8, 1
	329 Move [X19], W8
	330 Move X8, [X31+24]
	331 Move [X19+96], X8
	332 Move X0, [X25]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X8, 0xCDB000
	338 Move X8, [X8+3328]
	339 Add X0, X19, 8
	340 Move X3, [X8]
	341 Add X1, X31, 24
	342 Move X2, X19
	343 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	344 Move X20, [X31+96]
	345 Move X19, [X31+104]
	346 Move X22, [X31+80]
	347 Move X21, [X31+88]
	348 Move X24, [X31+64]
	349 Move X23, [X31+72]
	350 Move X30, [X31+48]
	351 Move X25, [X31+56]
	352 Add X31, X31, 112
	353 Return 
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Move X20, X0
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X0, X20
	369 Call 0x3EB2AD0
	370 Move X20, X0
	371 Move X0, 0xC9F000
	372 Move X0, [X0+2000]
	373 Call 0x1C17D08
	374 Move X8, [X20]
	375 Move X1, [X8]
	376 Call 0x1C18270
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {399}
	381 Move X20, [X20]
	382 Call 0x3EB2AE0
	383 Move TEMP, 1
	384 Not TEMP
	385 Move W8, TEMP
	386 Move [X19+80], X31
	387 Move [X19+8], W8
	388 Move X0, 0xCA2000
	389 Move X0, [X0+640]
	390 Call 0x1C17D08
	391 Move W8, [X0+224]
	392 Compare W8, 0
	393 JumpIfNotEqual {395}
	394 Call 0x1C17DFC
	395 Move X0, X19
	396 Move X1, X20
	397 Move X2, X31
	398 Call AsyncTaskMethodBuilder.SetException, X0, X1
	399 Move W0, 8
	400 Call 0x3EB2AF0
	401 Move X8, [X20]
	402 Move [X0], X8
	403 Move X1, 0xA60000
	404 Add X1, X1, 3672
	405 Move X2, X31
	406 Call 0x3EB2B00
	407 Move X20, X0
	408 Call 0x3EB2AE0
	409 Move X0, X20
	410 Call 0x1D2D690
	411 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03455960 CBZ X21, 0x3455D0C
	0x03455964 LDR X8, [X19 + 0x20]
	0x03455968 STR X8, [X21 + 0x10]
	0x0345596C LDUR V0, [X19 + 0x28]
	0x03455970 STUR V0, [X21 + 0x18]
	0x03455974 LDUR V0, [X19 + 0x38]
	0x03455978 STUR V0, [X21 + 0x28]
	0x0345597C LDR X8, [X19 + 0x48]
	0x03455980 STR X8, [X21 + 0x38]
	0x03455984 CBZ X20, 0x3455D10
	0x03455988 LDRB W8, [X20 + 0x10]
	0x0345598C CBZ W8, 0x3455B74
	0x03455990 LDR X8, [X19 + 0x58]
	0x03455994 CBZ X8, 0x3455D14
	0x03455998 LDR X21, [X8 + 0x18]
	0x0345599C CBZ X21, 0x3455D18
	0x034559A0 ADRP X23, 0xC9F000
	0x034559A4 LDR X8, [X21]
	0x034559A8 LDR X23, [X23 + 0x818]
	0x034559AC LDRH W9, [X8 + 0x12E]
	0x034559B0 LDR X1, [X23]
	0x034559B4 CBZ X9, 0x34559D8
	0x034559B8 LDR X10, [X8 + 0xB0]
	0x034559BC ADD X10, X10, 0x8
	0x034559C0 LDUR X11, [X10 - 0x8]
	0x034559C4 CMP X11, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xF89000
	007 Move X22, 0xCA2000
	008 Move W8, [X21+1918]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCA2000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1918], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

