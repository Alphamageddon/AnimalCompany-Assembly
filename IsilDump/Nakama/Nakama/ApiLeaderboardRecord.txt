Type: Nakama.ApiLeaderboardRecord

Method: System.String get_CreateTime()

Disassembly:
	0x03407824 CBZ X0, 0x3407924
	0x03407828 MOV X20, X0

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_CreateTime(System.String value)

Disassembly:
	0x0340782C CBZ X21, 0x3407844
	0x03407830 LDR X8, [X20]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_ExpiryTime()

Disassembly:
	0x03407834 MOV X0, X21
	0x03407838 LDR X1, [X8 + 0x40]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_ExpiryTime(System.String value)

Disassembly:
	0x0340783C BL 0x1C16E00
	0x03407840 CBZ X0, 0x3407918

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_LeaderboardId()

Disassembly:
	0x03407844 LDR W8, [X20 + 0x18]
	0x03407848 CBZ W8, 0x3407914

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_LeaderboardId(System.String value)

Disassembly:
	0x0340784C ADRP X22, 0xD26000
	0x03407850 LDR X22, [X22 + 0xFE0]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Int32 get_MaxNumScore()

Disassembly:
	0x03407854 STR X21, [X20 + 0x20]
	0x03407858 LDR X0, [X22]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_MaxNumScore(System.Int32 value)

Disassembly:
	0x0340785C CBZ X0, 0x3407874
	0x03407860 LDR X8, [X20]

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.String get_Metadata()

Disassembly:
	0x03407864 LDR X1, [X8 + 0x40]
	0x03407868 BL 0x1C16E00

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_Metadata(System.String value)

Disassembly:
	0x0340786C CBZ X0, 0x3407918
	0x03407870 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Int32 get_NumScore()

Disassembly:
	0x03407874 CMP W8, 0x1
	0x03407878 B.LS 0x3407914

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_NumScore(System.Int32 value)

Disassembly:
	0x0340787C LDR X8, [X22]
	0x03407880 ADD X1, X31, 0x4

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: System.String get_OwnerId()

Disassembly:
	0x03407884 STR X8, [X20 + 0x28]
	0x03407888 LDR W8, [X19 + 0x34]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_OwnerId(System.String value)

Disassembly:
	0x0340788C LDR X0, [X24]
	0x03407890 STR W8, [X31 + 0x4]

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.String get_Rank()

Disassembly:
	0x03407894 BL 0x1C16E04
	0x03407898 MOV X19, X0

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_Rank(System.String value)

Disassembly:
	0x0340789C CBZ X0, 0x34078B4
	0x034078A0 LDR X8, [X20]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_Score()

Disassembly:
	0x034078A4 MOV X0, X19
	0x034078A8 LDR X1, [X8 + 0x40]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_Score(System.String value)

Disassembly:
	0x034078AC BL 0x1C16E00
	0x034078B0 CBZ X0, 0x3407918

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_Subscore()

Disassembly:
	0x034078B4 LDR W8, [X20 + 0x18]
	0x034078B8 CMP W8, 0x2

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_Subscore(System.String value)

Disassembly:
	0x034078BC B.LS 0x3407914
	0x034078C0 STR X19, [X20 + 0x30]

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: System.String get_UpdateTime()

Disassembly:
	0x034078C4 LDR X0, [X23]
	0x034078C8 CBZ X0, 0x34078E0

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_UpdateTime(System.String value)

Disassembly:
	0x034078CC LDR X8, [X20]
	0x034078D0 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String get_Username()

Disassembly:
	0x034078D4 BL 0x1C16E00
	0x034078D8 CBZ X0, 0x3407918

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_Username(System.String value)

Disassembly:
	0x034078DC LDR W8, [X20 + 0x18]
	0x034078E0 CMP W8, 0x3

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034078E4 B.LS 0x3407914
	0x034078E8 LDR X8, [X23]
	0x034078EC MOV X0, X20
	0x034078F0 MOV X1, X31
	0x034078F4 STR X8, [X20 + 0x38]
	0x034078F8 BL 0x3227578
	0x034078FC LDP X20, X19, [X31 + 0x40]
	0x03407900 LDP X22, X21, [X31 + 0x30]
	0x03407904 LDP X24, X23, [X31 + 0x20]
	0x03407908 LDP X30, X25, [X31 + 0x10]
	0x0340790C ADD X31, X31, 0x50
	0x03407910 RET
	0x03407914 BL 0x1C16F28
	0x03407918 BL 0x1C16F44
	0x0340791C MOV X1, X31
	0x03407920 BL 0x1C16DEC
	0x03407924 BL 0x1C16F20
	0x03407928 MOV X1, X31
	0x0340792C B 0x33BDD8C
	0x03407930 STR X30, [X31 - 0x20]!
	0x03407934 STP X20, X19, [X31 + 0x10]
	0x03407938 ADRP X20, 0xFD6000
	0x0340793C LDRB W8, [X20 + 0x539]
	0x03407940 MOV X19, X0
	0x03407944 TBNZ X8, 0x0, 0x3407968
	0x03407948 ADRP X0, 0xD26000
	0x0340794C LDR X0, [X0 + 0xFE8]
	0x03407950 BL 0x1C16CF4
	0x03407954 ADRP X0, 0xD26000
	0x03407958 LDR X0, [X0 + 0xFF0]
	0x0340795C BL 0x1C16CF4
	0x03407960 MOVZ W8, 0x1
	0x03407964 STRB W8, [X20 + 0x539]
	0x03407968 LDR X19, [X19 + 0x10]
	0x0340796C CBNZ X19, 0x3407998
	0x03407970 ADRP X8, 0xD26000
	0x03407974 LDR X8, [X8 + 0xFF0]
	0x03407978 LDR X0, [X8]
	0x0340797C BL 0x1C16F10
	0x03407980 ADRP X8, 0xD26000
	0x03407984 LDR X8, [X8 + 0xFE8]
	0x03407988 MOV W1, W31
	0x0340798C MOV X19, X0
	0x03407990 LDR X2, [X8]
	0x03407994 BL 0x301B830
	0x03407998 MOV X0, X19
	0x0340799C LDP X20, X19, [X31 + 0x10]
	0x034079A0 LDR X30, [X31], #0x20
	0x034079A4 RET
	0x034079A8 LDR X0, [X0 + 0x10]
	0x034079AC RET
	0x034079B0 STR X1, [X0 + 0x10]
	0x034079B4 RET
	0x034079B8 STP X30, X25, [X31 - 0x40]!
	0x034079BC STP X24, X23, [X31 + 0x10]
	0x034079C0 STP X22, X21, [X31 + 0x20]
	0x034079C4 STP X20, X19, [X31 + 0x30]
	0x034079C8 ADRP X25, 0xFD6000
	0x034079CC ADRP X23, 0xCEC000
	0x034079D0 ADRP X24, 0xD26000
	0x034079D4 ADRP X20, 0xCEC000
	0x034079D8 ADRP X21, 0xD27000
	0x034079DC ADRP X22, 0xD26000
	0x034079E0 LDRB W8, [X25 + 0x53A]
	0x034079E4 LDR X23, [X23 + 0x838]
	0x034079E8 LDR X24, [X24 + 0xFF8]
	0x034079EC LDR X20, [X20 + 0x988]
	0x034079F0 LDR X21, [X21]
	0x034079F4 LDR X22, [X22 + 0xD50]
	0x034079F8 MOV X19, X0
	0x034079FC TBNZ X8, 0x0, 0x3407A44
	0x03407A00 ADRP X0, 0xD26000
	0x03407A04 LDR X0, [X0 + 0xFF8]
	0x03407A08 BL 0x1C16CF4
	0x03407A0C ADRP X0, 0xCEC000
	0x03407A10 LDR X0, [X0 + 0x838]
	0x03407A14 BL 0x1C16CF4
	0x03407A18 ADRP X0, 0xD26000
	0x03407A1C LDR X0, [X0 + 0xD50]
	0x03407A20 BL 0x1C16CF4
	0x03407A24 ADRP X0, 0xD27000
	0x03407A28 LDR X0, [X0]
	0x03407A2C BL 0x1C16CF4
	0x03407A30 ADRP X0, 0xCEC000
	0x03407A34 LDR X0, [X0 + 0x988]
	0x03407A38 BL 0x1C16CF4
	0x03407A3C MOVZ W8, 0x1
	0x03407A40 STRB W8, [X25 + 0x53A]
	0x03407A44 MOV X0, X19
	0x03407A48 BL 0x3407930
	0x03407A4C LDR X8, [X23]
	0x03407A50 LDR X2, [X24]
	0x03407A54 MOV X1, X0
	0x03407A58 MOV X0, X8
	0x03407A5C BL 0x226B7E8
	0x03407A60 LDR X8, [X20]
	0x03407A64 LDR X1, [X21]
	0x03407A68 LDR X3, [X22]
	0x03407A6C LDP X20, X19, [X31 + 0x30]
	0x03407A70 LDP X22, X21, [X31 + 0x20]
	0x03407A74 LDP X24, X23, [X31 + 0x10]
	0x03407A78 MOV X2, X0
	0x03407A7C MOV X0, X8
	0x03407A80 MOV X4, X31
	0x03407A84 LDP X30, X25, [X31], #0x40
	0x03407A88 B 0x32277C4
	0x03407A8C MOV X1, X31
	0x03407A90 B 0x33BDD8C
	0x03407A94 LDR W0, [X0 + 0x10]
	0x03407A98 RET
	0x03407A9C STR W1, [X0 + 0x10]
	0x03407AA0 RET
	0x03407AA4 LDR X0, [X0 + 0x18]
	0x03407AA8 RET
	0x03407AAC STR X1, [X0 + 0x18]
	0x03407AB0 RET
	0x03407AB4 LDR X0, [X0 + 0x20]
	0x03407AB8 RET
	0x03407ABC STR X1, [X0 + 0x20]
	0x03407AC0 RET
	0x03407AC4 LDR X0, [X0 + 0x28]
	0x03407AC8 RET
	0x03407ACC STR X1, [X0 + 0x28]
	0x03407AD0 RET
	0x03407AD4 LDRB W0, [X0 + 0x30]
	0x03407AD8 RET
	0x03407ADC AND W8, W1, 0x1
	0x03407AE0 STRB W8, [X0 + 0x30]
	0x03407AE4 RET
	0x03407AE8 LDR X0, [X0 + 0x38]
	0x03407AEC RET
	0x03407AF0 STR X1, [X0 + 0x38]
	0x03407AF4 RET
	0x03407AF8 LDR X0, [X0 + 0x40]
	0x03407AFC RET
	0x03407B00 STR X1, [X0 + 0x40]
	0x03407B04 RET
	0x03407B08 SUB X31, X31, 0x50
	0x03407B0C STP X30, X25, [X31 + 0x10]
	0x03407B10 STP X24, X23, [X31 + 0x20]
	0x03407B14 STP X22, X21, [X31 + 0x30]
	0x03407B18 STP X20, X19, [X31 + 0x40]
	0x03407B1C ADRP X20, 0xFD6000
	0x03407B20 ADRP X21, 0xCEC000
	0x03407B24 ADRP X22, 0xCEC000
	0x03407B28 LDRB W8, [X20 + 0x53B]
	0x03407B2C LDR X21, [X21 + 0x988]
	0x03407B30 LDR X22, [X22 + 0x9D0]
	0x03407B34 MOV X19, X0
	0x03407B38 TBNZ X8, 0x0, 0x3407BD4
	0x03407B3C ADRP X0, 0xCEC000
	0x03407B40 LDR X0, [X0 + 0xB58]
	0x03407B44 BL 0x1C16CF4
	0x03407B48 ADRP X0, 0xCEC000
	0x03407B4C LDR X0, [X0 + 0x758]
	0x03407B50 BL 0x1C16CF4
	0x03407B54 ADRP X0, 0xCEC000
	0x03407B58 LDR X0, [X0 + 0x9D0]
	0x03407B5C BL 0x1C16CF4
	0x03407B60 ADRP X0, 0xD27000
	0x03407B64 LDR X0, [X0 + 0x8]
	0x03407B68 BL 0x1C16CF4
	0x03407B6C ADRP X0, 0xD26000
	0x03407B70 LDR X0, [X0 + 0xDD8]
	0x03407B74 BL 0x1C16CF4
	0x03407B78 ADRP X0, 0xD26000
	0x03407B7C LDR X0, [X0 + 0xD88]
	0x03407B80 BL 0x1C16CF4
	0x03407B84 ADRP X0, 0xD26000
	0x03407B88 LDR X0, [X0 + 0xDE0]
	0x03407B8C BL 0x1C16CF4
	0x03407B90 ADRP X0, 0xCEC000
	0x03407B94 LDR X0, [X0 + 0x838]
	0x03407B98 BL 0x1C16CF4
	0x03407B9C ADRP X0, 0xCEC000
	0x03407BA0 LDR X0, [X0 + 0x988]
	0x03407BA4 BL 0x1C16CF4
	0x03407BA8 ADRP X0, 0xD26000
	0x03407BAC LDR X0, [X0 + 0xE10]
	0x03407BB0 BL 0x1C16CF4
	0x03407BB4 ADRP X0, 0xD26000
	0x03407BB8 LDR X0, [X0 + 0xE20]
	0x03407BBC BL 0x1C16CF4
	0x03407BC0 ADRP X0, 0xD26000
	0x03407BC4 LDR X0, [X0 + 0xE28]
	0x03407BC8 BL 0x1C16CF4
	0x03407BCC MOVZ W8, 0x1
	0x03407BD0 STRB W8, [X20 + 0x53B]
	0x03407BD4 LDR X0, [X22]
	0x03407BD8 LDR X21, [X21]
	0x03407BDC MOVZ W1, 0x4
	0x03407BE0 BL 0x1C16D6C
	0x03407BE4 CBZ X0, 0x3407E74
	0x03407BE8 MOV X20, X0
	0x03407BEC CBZ X21, 0x3407C04
	0x03407BF0 LDR X8, [X20]
	0x03407BF4 MOV X0, X21
	0x03407BF8 LDR X1, [X8 + 0x40]
	0x03407BFC BL 0x1C16E00
	0x03407C00 CBZ X0, 0x3407E68
	0x03407C04 LDR W8, [X20 + 0x18]
	0x03407C08 CBZ W8, 0x3407E64
	0x03407C0C ADRP X23, 0xD26000
	0x03407C10 LDR X23, [X23 + 0xE20]
	0x03407C14 STR X21, [X20 + 0x20]
	0x03407C18 LDR X0, [X23]
	0x03407C1C CBZ X0, 0x3407C34
	0x03407C20 LDR X8, [X20]
	0x03407C24 LDR X1, [X8 + 0x40]
	0x03407C28 BL 0x1C16E00
	0x03407C2C CBZ X0, 0x3407E68
	0x03407C30 LDR W8, [X20 + 0x18]
	0x03407C34 CMP W8, 0x1
	0x03407C38 B.LS 0x3407E64
	0x03407C3C LDR X8, [X23]
	0x03407C40 ADRP X9, 0xCEC000
	0x03407C44 LDR X9, [X9 + 0x758]
	0x03407C48 ADD X1, X31, 0xC
	0x03407C4C STR X8, [X20 + 0x28]
	0x03407C50 LDR W8, [X19 + 0x10]
	0x03407C54 LDR X0, [X9]
	0x03407C58 STR W8, [X31 + 0xC]
	0x03407C5C BL 0x1C16E04
	0x03407C60 MOV X21, X0
	0x03407C64 CBZ X0, 0x3407C7C
	0x03407C68 LDR X8, [X20]
	0x03407C6C MOV X0, X21
	0x03407C70 LDR X1, [X8 + 0x40]
	0x03407C74 BL 0x1C16E00
	0x03407C78 CBZ X0, 0x3407E68
	0x03407C7C LDR W8, [X20 + 0x18]
	0x03407C80 CMP W8, 0x2
	0x03407C84 B.LS 0x3407E64
	0x03407C88 ADRP X23, 0xCEC000
	0x03407C8C LDR X23, [X23 + 0x838]
	0x03407C90 STR X21, [X20 + 0x30]
	0x03407C94 LDR X0, [X23]
	0x03407C98 CBZ X0, 0x3407CB0
	0x03407C9C LDR X8, [X20]
	0x03407CA0 LDR X1, [X8 + 0x40]
	0x03407CA4 BL 0x1C16E00
	0x03407CA8 CBZ X0, 0x3407E68
	0x03407CAC LDR W8, [X20 + 0x18]
	0x03407CB0 CMP W8, 0x3
	0x03407CB4 B.LS 0x3407E64
	0x03407CB8 LDR X8, [X23]
	0x03407CBC ADRP X21, 0xD26000
	0x03407CC0 ADRP X24, 0xD26000
	0x03407CC4 ADRP X25, 0xD26000
	0x03407CC8 LDR X21, [X21 + 0xDD8]
	0x03407CCC LDR X24, [X24 + 0xDE0]
	0x03407CD0 LDR X25, [X25 + 0xD88]
	0x03407CD4 MOV X0, X20
	0x03407CD8 MOV X1, X31
	0x03407CDC STR X8, [X20 + 0x38]
	0x03407CE0 BL 0x3227578
	0x03407CE4 LDR X2, [X19 + 0x18]
	0x03407CE8 LDR X1, [X21]
	0x03407CEC LDR X3, [X23]
	0x03407CF0 MOV X4, X31
	0x03407CF4 BL 0x32277C4
	0x03407CF8 LDR X2, [X19 + 0x20]
	0x03407CFC LDR X1, [X24]
	0x03407D00 LDR X3, [X23]
	0x03407D04 MOV X4, X31
	0x03407D08 BL 0x32277C4
	0x03407D0C LDR X2, [X19 + 0x28]
	0x03407D10 LDR X1, [X25]
	0x03407D14 LDR X3, [X23]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X25, 0xFD7000
	013 Move X26, 0xCED000
	014 Move X24, 0xD27000
	015 Move X22, 0xCED000
	016 Move X21, 0xD27000
	017 Move X20, 0xD27000
	018 Move X23, 0xCED000
	019 Move X26, [X26+2440]
	020 Move W8, [X25+1330]
	021 Move X24, [X24+3552]
	022 Move X22, [X22+2104]
	023 Move X21, [X21+3904]
	024 Move X20, [X20+3912]
	025 Move X23, [X23+2512]
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {81}
	031 Move X0, 0xCED000
	032 Move X0, [X0+1880]
	033 Call 0x1C17CF4
	034 Move X0, 0xCED000
	035 Move X0, [X0+2512]
	036 Call 0x1C17CF4
	037 Move X0, 0xD27000
	038 Move X0, [X0+3912]
	039 Call 0x1C17CF4
	040 Move X0, 0xD27000
	041 Move X0, [X0+3344]
	042 Call 0x1C17CF4
	043 Move X0, 0xD27000
	044 Move X0, [X0+3352]
	045 Call 0x1C17CF4
	046 Move X0, 0xD27000
	047 Move X0, [X0+3920]
	048 Call 0x1C17CF4
	049 Move X0, 0xD27000
	050 Move X0, [X0+3552]
	051 Call 0x1C17CF4
	052 Move X0, 0xCED000
	053 Move X0, [X0+2104]
	054 Call 0x1C17CF4
	055 Move X0, 0xD27000
	056 Move X0, [X0+3328]
	057 Call 0x1C17CF4
	058 Move X0, 0xD27000
	059 Move X0, [X0+3560]
	060 Call 0x1C17CF4
	061 Move X0, 0xD27000
	062 Move X0, [X0+3928]
	063 Call 0x1C17CF4
	064 Move X0, 0xD27000
	065 Move X0, [X0+3904]
	066 Call 0x1C17CF4
	067 Move X0, 0xCED000
	068 Move X0, [X0+2440]
	069 Call 0x1C17CF4
	070 Move X0, 0xD27000
	071 Move X0, [X0+3936]
	072 Call 0x1C17CF4
	073 Move X0, 0xD27000
	074 Move X0, [X0+3944]
	075 Call 0x1C17CF4
	076 Move X0, 0xD27000
	077 Move X0, [X0+3632]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X25+1330], W8
	081 Move X0, [X26]
	082 Move X2, [X19+16]
	083 Move X1, [X24]
	084 Move X3, [X22]
	085 Move X4, X31
	086 Call String.Concat, X0, X1, X2, X3
	087 Move X2, [X19+24]
	088 Move X1, [X21]
	089 Move X3, [X22]
	090 Move X4, X31
	091 Call String.Concat, X0, X1, X2, X3
	092 Move X2, [X19+32]
	093 Move X1, [X20]
	094 Move X3, [X22]
	095 Move X4, X31
	096 Call String.Concat, X0, X1, X2, X3
	097 Move X8, [X23]
	098 Move X21, X0
	099 Move W1, 4
	100 Move X0, X8
	101 Call 0x1C17D6C
	102 Compare X0, 0
	103 JumpIfEqual {296}
	104 Move X20, X0
	105 Compare X21, 0
	106 JumpIfEqual {113}
	107 Move X8, [X20]
	108 Move X0, X21
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {293}
	113 Move W8, [X20+24]
	114 Compare W8, 0
	115 JumpIfEqual {292}
	116 Move X24, 0xD27000
	117 Move X24, [X24+3936]
	118 Move [X20+32], X21
	119 Move X0, [X24]
	120 Compare X0, 0
	121 JumpIfEqual {128}
	122 Move X8, [X20]
	123 Move X1, [X8+64]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {293}
	127 Move W8, [X20+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, [X24]
	130 Move X24, 0xCED000
	131 Move X24, [X24+1880]
	132 Add X1, X31, 12
	133 Move [X20+40], X8
	134 Move W8, [X19+40]
	135 Move X0, [X24]
	136 Move [X31+12], W8
	137 Call 0x1C17E04
	138 Move X21, X0
	139 Compare X0, 0
	140 JumpIfEqual {147}
	141 Move X8, [X20]
	142 Move X0, X21
	143 Move X1, [X8+64]
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {293}
	147 Move W8, [X20+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move [X20+48], X21
	150 Move X0, [X22]
	151 Compare X0, 0
	152 JumpIfEqual {159}
	153 Move X8, [X20]
	154 Move X1, [X8+64]
	155 Call 0x1C17E00
	156 Compare X0, 0
	157 JumpIfEqual {293}
	158 Move W8, [X20+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X8, [X22]
	161 Move X21, 0xD27000
	162 Move X21, [X21+3328]
	163 Move X0, X20
	164 Move X1, X31
	165 Move [X20+56], X8
	166 Call String.Concat, X0
	167 Move X2, [X19+48]
	168 Move X1, [X21]
	169 Move X3, [X22]
	170 Move X4, X31
	171 Call String.Concat, X0, X1, X2, X3
	172 Move X8, [X23]
	173 Move X21, X0
	174 Move W1, 4
	175 Move X0, X8
	176 Call 0x1C17D6C
	177 Compare X0, 0
	178 JumpIfEqual {296}
	179 Move X20, X0
	180 Compare X21, 0
	181 JumpIfEqual {188}
	182 Move X8, [X20]
	183 Move X0, X21
	184 Move X1, [X8+64]
	185 Call 0x1C17E00
	186 Compare X0, 0
	187 JumpIfEqual {293}
	188 Move W8, [X20+24]
	189 Compare W8, 0
	190 JumpIfEqual {292}
	191 Move X23, 0xD27000
	192 Move X23, [X23+3928]
	193 Move [X20+32], X21
	194 Move X0, [X23]
	195 Compare X0, 0
	196 JumpIfEqual {203}
	197 Move X8, [X20]
	198 Move X1, [X8+64]
	199 Call 0x1C17E00
	200 Compare X0, 0
	201 JumpIfEqual {293}
	202 Move W8, [X20+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X8, [X23]
	205 Add X1, X31, 8
	206 Move [X20+40], X8
	207 Move W8, [X19+56]
	208 Move X0, [X24]
	209 Move [X31+8], W8
	210 Call 0x1C17E04
	211 Move X21, X0
	212 Compare X0, 0
	213 JumpIfEqual {220}
	214 Move X8, [X20]
	215 Move X0, X21
	216 Move X1, [X8+64]
	217 Call 0x1C17E00
	218 Compare X0, 0
	219 JumpIfEqual {293}
	220 Move W8, [X20+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move [X20+48], X21
	223 Move X0, [X22]
	224 Compare X0, 0
	225 JumpIfEqual {232}
	226 Move X8, [X20]
	227 Move X1, [X8+64]
	228 Call 0x1C17E00
	229 Compare X0, 0
	230 JumpIfEqual {293}
	231 Move W8, [X20+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X23, 0xD27000
	234 Move X24, 0xD27000
	235 Move X25, 0xD27000
	236 Move X23, [X23+3944]
	237 Move X24, [X24+3920]
	238 Move X25, [X25+3344]
	239 Move X8, [X22]
	240 Move X26, 0xD27000
	241 Move X27, 0xD27000
	242 Move X21, 0xD27000
	243 Move X26, [X26+3352]
	244 Move X27, [X27+3560]
	245 Move X21, [X21+3632]
	246 Move X0, X20
	247 Move X1, X31
	248 Move [X20+56], X8
	249 Call String.Concat, X0
	250 Move X2, [X19+64]
	251 Move X1, [X23]
	252 Move X3, [X22]
	253 Move X4, X31
	254 Call String.Concat, X0, X1, X2, X3
	255 Move X2, [X19+72]
	256 Move X1, [X24]
	257 Move X3, [X22]
	258 Move X4, X31
	259 Call String.Concat, X0, X1, X2, X3
	260 Move X2, [X19+80]
	261 Move X1, [X25]
	262 Move X3, [X22]
	263 Move X4, X31
	264 Call String.Concat, X0, X1, X2, X3
	265 Move X2, [X19+88]
	266 Move X1, [X26]
	267 Move X3, [X22]
	268 Move X4, X31
	269 Call String.Concat, X0, X1, X2, X3
	270 Move X2, [X19+96]
	271 Move X1, [X27]
	272 Move X3, [X22]
	273 Move X4, X31
	274 Call String.Concat, X0, X1, X2, X3
	275 Move X2, [X19+104]
	276 Move X1, [X21]
	277 Move X3, [X22]
	278 Move X4, X31
	279 Call String.Concat, X0, X1, X2, X3
	280 Move X20, [X31+80]
	281 Move X19, [X31+88]
	282 Move X22, [X31+64]
	283 Move X21, [X31+72]
	284 Move X24, [X31+48]
	285 Move X23, [X31+56]
	286 Move X26, [X31+32]
	287 Move X25, [X31+40]
	288 Move X30, [X31+16]
	289 Move X27, [X31+24]
	290 Add X31, X31, 96
	291 Return X0
	292 Call 0x1C17F28
	293 Call 0x1C17F44
	294 Move X1, X31
	295 Call 0x1C17DEC
	296 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03407D18 MOV X4, X31
	0x03407D1C BL 0x32277C4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

