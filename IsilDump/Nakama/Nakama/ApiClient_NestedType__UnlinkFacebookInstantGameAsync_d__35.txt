Type: Nakama.ApiClient/<UnlinkFacebookInstantGameAsync>d__35

Method: System.Void MoveNext()

Disassembly:
	0x03439684 BL 0x1C16F28
	0x03439688 BL 0x1C16F20
	0x0343968C BL 0x1C16F20
	0x03439690 BL 0x1C16F20
	0x03439694 BL 0x1C16F20
	0x03439698 BL 0x1C16F20
	0x0343969C BL 0x1C16F20
	0x034396A0 B 0x3439700
	0x034396A4 B 0x3439700
	0x034396A8 B 0x3439700
	0x034396AC B 0x3439700
	0x034396B0 B 0x3439700
	0x034396B4 B 0x3439700
	0x034396B8 B 0x3439700
	0x034396BC B 0x3439700
	0x034396C0 B 0x3439700
	0x034396C4 B 0x3439700
	0x034396C8 B 0x3439700
	0x034396CC B 0x3439700
	0x034396D0 B 0x3439700
	0x034396D4 B 0x3439700
	0x034396D8 B 0x3439700
	0x034396DC B 0x3439700
	0x034396E0 B 0x3439700
	0x034396E4 B 0x3439700
	0x034396E8 B 0x3439700
	0x034396EC B 0x3439700
	0x034396F0 B 0x3439700
	0x034396F4 B 0x3439700
	0x034396F8 B 0x3439700
	0x034396FC B 0x3439700
	0x03439700 MOV X20, X0
	0x03439704 CMP W1, 0x1
	0x03439708 B.NE 0x3439798
	0x0343970C MOV X0, X20
	0x03439710 BL 0x3EB1AD0
	0x03439714 MOV X20, X0
	0x03439718 ADRP X0, 0xCBA000
	0x0343971C LDR X0, [X0 + 0x7D0]
	0x03439720 BL 0x1C16D08
	0x03439724 LDR X8, [X20]
	0x03439728 LDR X1, [X8]
	0x0343972C BL 0x1C17270
	0x03439730 TBZ X0, 0x0, 0x3439770
	0x03439734 LDR X20, [X20]
	0x03439738 BL 0x3EB1AE0
	0x0343973C MOVN W8, 0x1
	0x03439740 STR W8, [X19], #0x8
	0x03439744 ADRP X0, 0xCBD000
	0x03439748 LDR X0, [X0 + 0x280]
	0x0343974C BL 0x1C16D08
	0x03439750 LDR W8, [X0 + 0xE0]
	0x03439754 CBNZ W8, 0x343975C
	0x03439758 BL 0x1C16DFC
	0x0343975C MOV X0, X19
	0x03439760 MOV X1, X20
	0x03439764 MOV X2, X31
	0x03439768 BL 0x32C4908
	0x0343976C B 0x3439610
	0x03439770 MOVZ W0, 0x8
	0x03439774 BL 0x3EB1AF0
	0x03439778 LDR X8, [X20]
	0x0343977C STR X8, [X0]
	0x03439780 ADRP X1, 0xA7B000
	0x03439784 ADD X1, X1, 0xE58
	0x03439788 MOV X2, X31
	0x0343978C BL 0x3EB1B00
	0x03439790 MOV X20, X0
	0x03439794 BL 0x3EB1AE0
	0x03439798 MOV X0, X20
	0x0343979C BL 0x1D2C690
	0x034397A0 BL 0x1990590
	0x034397A4 STR X30, [X31 - 0x30]!
	0x034397A8 STP X22, X21, [X31 + 0x10]
	0x034397AC STP X20, X19, [X31 + 0x20]
	0x034397B0 ADRP X21, 0xFA4000
	0x034397B4 ADRP X22, 0xCBD000
	0x034397B8 LDRB W8, [X21 + 0x684]
	0x034397BC LDR X22, [X22 + 0x280]
	0x034397C0 MOV X19, X1
	0x034397C4 MOV X20, X0
	0x034397C8 TBNZ X8, 0x0, 0x34397E0
	0x034397CC ADRP X0, 0xCBD000
	0x034397D0 LDR X0, [X0 + 0x280]
	0x034397D4 BL 0x1C16CF4
	0x034397D8 MOVZ W8, 0x1
	0x034397DC STRB W8, [X21 + 0x684]
	0x034397E0 LDR X0, [X22]
	0x034397E4 LDR W8, [X0 + 0xE0]
	0x034397E8 CBNZ W8, 0x34397F0
	0x034397EC BL 0x1C16DFC
	0x034397F0 ADD X0, X20, 0x8
	0x034397F4 MOV X1, X19
	0x034397F8 LDP X20, X19, [X31 + 0x20]
	0x034397FC LDP X22, X21, [X31 + 0x10]
	0x03439800 MOV X2, X31
	0x03439804 LDR X30, [X31], #0x30
	0x03439808 B 0x32C477C
	0x0343980C SUB X31, X31, 0x70
	0x03439810 STR X30, [X31 + 0x10]
	0x03439814 STP X28, X27, [X31 + 0x20]
	0x03439818 STP X26, X25, [X31 + 0x30]
	0x0343981C STP X24, X23, [X31 + 0x40]
	0x03439820 STP X22, X21, [X31 + 0x50]
	0x03439824 STP X20, X19, [X31 + 0x60]
	0x03439828 ADRP X20, 0xFA4000
	0x0343982C LDRB W8, [X20 + 0x685]
	0x03439830 MOV X19, X0
	0x03439834 TBNZ X8, 0x0, 0x3439900
	0x03439838 ADRP X0, 0xCF6000
	0x0343983C LDR X0, [X0 + 0x418]
	0x03439840 BL 0x1C16CF4
	0x03439844 ADRP X0, 0xCBD000
	0x03439848 LDR X0, [X0 + 0x280]
	0x0343984C BL 0x1C16CF4
	0x03439850 ADRP X0, 0xCC3000
	0x03439854 LDR X0, [X0 + 0x8D8]
	0x03439858 BL 0x1C16CF4
	0x0343985C ADRP X0, 0xCBB000
	0x03439860 LDR X0, [X0 + 0x810]
	0x03439864 BL 0x1C16CF4
	0x03439868 ADRP X0, 0xCBB000
	0x0343986C LDR X0, [X0 + 0x6C0]
	0x03439870 BL 0x1C16CF4
	0x03439874 ADRP X0, 0xCBB000
	0x03439878 LDR X0, [X0 + 0x6D0]
	0x0343987C BL 0x1C16CF4
	0x03439880 ADRP X0, 0xCF5000
	0x03439884 LDR X0, [X0 + 0x7B8]
	0x03439888 BL 0x1C16CF4
	0x0343988C ADRP X0, 0xCBD000
	0x03439890 LDR X0, [X0 + 0x1E0]
	0x03439894 BL 0x1C16CF4
	0x03439898 ADRP X0, 0xCBD000
	0x0343989C LDR X0, [X0 + 0x1F0]
	0x034398A0 BL 0x1C16CF4
	0x034398A4 ADRP X0, 0xCBD000
	0x034398A8 LDR X0, [X0 + 0x1F8]
	0x034398AC BL 0x1C16CF4
	0x034398B0 ADRP X0, 0xCC3000
	0x034398B4 LDR X0, [X0 + 0x3A0]
	0x034398B8 BL 0x1C16CF4
	0x034398BC ADRP X0, 0xCE3000
	0x034398C0 LDR X0, [X0 + 0x4D8]
	0x034398C4 BL 0x1C16CF4
	0x034398C8 ADRP X0, 0xCF6000
	0x034398CC LDR X0, [X0 + 0x420]
	0x034398D0 BL 0x1C16CF4
	0x034398D4 ADRP X0, 0xCF5000
	0x034398D8 LDR X0, [X0 + 0x7D0]
	0x034398DC BL 0x1C16CF4
	0x034398E0 ADRP X0, 0xCF5000
	0x034398E4 LDR X0, [X0 + 0x7D8]
	0x034398E8 BL 0x1C16CF4
	0x034398EC ADRP X0, 0xCBA000
	0x034398F0 LDR X0, [X0 + 0x988]
	0x034398F4 BL 0x1C16CF4
	0x034398F8 MOVZ W8, 0x1
	0x034398FC STRB W8, [X20 + 0x685]
	0x03439900 STR X31, [X31 + 0x18]
	0x03439904 ADRP X28, 0xCBD000
	0x03439908 LDR W8, [X19]
	0x0343990C LDR X28, [X28 + 0x280]
	0x03439910 CBZ W8, 0x3439AF0
	0x03439914 LDR X8, [X19 + 0x20]
	0x03439918 CBZ X8, 0x3439C08
	0x0343991C LDR X25, [X19 + 0x28]
	0x03439920 CBZ X25, 0x3439C50
	0x03439924 LDR X0, [X25 + 0x20]
	0x03439928 CBZ X0, 0x3439C54
	0x0343992C ADRP X8, 0xCF6000
	0x03439930 ADRP X9, 0xCBA000
	0x03439934 LDR X8, [X8 + 0x420]
	0x03439938 LDR X9, [X9 + 0x988]
	0x0343993C LDR X21, [X8]
	0x03439940 LDR X20, [X9]
	0x03439944 MOV X1, X31
	0x03439948 BL 0x361B448
	0x0343994C ADRP X8, 0xCC3000
	0x03439950 LDR X8, [X8 + 0x8D8]
	0x03439954 MOV X22, X0
	0x03439958 LDR X0, [X8]
	0x0343995C MOVZ W1, 0x1
	0x03439960 BL 0x1C16D6C
	0x03439964 MOV X1, X0
	0x03439968 CBZ X1, 0x3439C58
	0x0343996C LDR W8, [X1 + 0x18]
	0x03439970 CBZ W8, 0x3439C5C
	0x03439974 MOVZ W8, 0x2F
	0x03439978 STRH W8, [X1 + 0x20]
	0x0343997C CBZ X22, 0x3439C60
	0x03439980 MOV X0, X22
	0x03439984 MOV X2, X31
	0x03439988 BL 0x322BC58
	0x0343998C MOV X1, X21
	0x03439990 MOV X2, X31
	0x03439994 BL 0x321B938
	0x03439998 ADRP X8, 0xCC3000
	0x0343999C LDR X8, [X8 + 0x3A0]
	0x034399A0 MOV X22, X0
	0x034399A4 LDR X23, [X25 + 0x20]
	0x034399A8 LDR X0, [X8]
	0x034399AC BL 0x1C16F10
	0x034399B0 MOV X21, X0
	0x034399B4 MOV X1, X23
	0x034399B8 MOV X2, X31
	0x034399BC BL 0x36281F8
	0x034399C0 CBZ X21, 0x3439C64
	0x034399C4 MOV X0, X21
	0x034399C8 MOV X1, X22
	0x034399CC MOV X2, X31
	0x034399D0 BL 0x36288CC
	0x034399D4 MOV X0, X21
	0x034399D8 MOV X1, X20
	0x034399DC MOV X2, X31
	0x034399E0 BL 0x3628980
	0x034399E4 MOV X0, X21
	0x034399E8 MOV X1, X31
	0x034399EC BL 0x3628A38
	0x034399F0 ADRP X8, 0xCE3000
	0x034399F4 ADRP X9, 0xCBB000
	0x034399F8 LDR X8, [X8 + 0x4D8]
	0x034399FC LDR X9, [X9 + 0x6D0]
	0x03439A00 MOV X20, X0
	0x03439A04 LDR X21, [X8]
	0x03439A08 LDR X0, [X9]
	0x03439A0C BL 0x1C16F10
	0x03439A10 ADRP X8, 0xCBB000
	0x03439A14 LDR X8, [X8 + 0x6C0]
	0x03439A18 MOV X22, X0
	0x03439A1C LDR X1, [X8]
	0x03439A20 BL 0x2AA4804
	0x03439A24 ADRP X8, 0xCF5000
	0x03439A28 LDR X8, [X8 + 0x7D8]
	0x03439A2C LDR X1, [X19 + 0x30]
	0x03439A30 LDR X0, [X8]
	0x03439A34 MOV X2, X31
	0x03439A38 BL 0x321B938
	0x03439A3C CBZ X22, 0x3439C68
	0x03439A40 ADRP X8, 0xCF5000
	0x03439A44 LDR X8, [X8 + 0x7D0]
	0x03439A48 ADRP X9, 0xCBB000
	0x03439A4C LDR X9, [X9 + 0x810]
	0x03439A50 MOV X2, X0
	0x03439A54 LDR X1, [X8]
	0x03439A58 LDR X3, [X9]
	0x03439A5C MOV X0, X22
	0x03439A60 BL 0x2AA5098
	0x03439A64 LDR X0, [X19 + 0x20]
	0x03439A68 MOV X1, X31
	0x03439A6C BL 0x3483BE4
	0x03439A70 MOV X23, X0
	0x03439A74 MOV X0, X31
	0x03439A78 BL 0x3241948
	0x03439A7C CBZ X0, 0x3439C6C
	0x03439A80 LDR X8, [X0]
	0x03439A84 LDR X9, [X8 + 0x268]
	0x03439A88 LDR X2, [X8 + 0x270]
	0x03439A8C MOV X1, X23
	0x03439A90 BLR X9
	0x03439A94 LDR X24, [X25 + 0x10]
	0x03439A98 CBZ X24, 0x3439C70
	0x03439A9C ADRP X10, 0xCF5000
	0x03439AA0 LDR X10, [X10 + 0x7B8]
	0x03439AA4 LDR X8, [X24]
	0x03439AA8 LDR W26, [X25 + 0x18]
	0x03439AAC LDP X27, X25, [X19 + 0x38]
	0x03439AB0 LDR X1, [X10]
	0x03439AB4 LDRH W9, [X8 + 0x12E]
	0x03439AB8 MOV X23, X0
	0x03439ABC CBZ X9, 0x3439AE0
	0x03439AC0 LDR X10, [X8 + 0xB0]
	0x03439AC4 ADD X10, X10, 0x8
	0x03439AC8 LDUR X11, [X10 - 0x8]
	0x03439ACC CMP X11, X1
	0x03439AD0 B.EQ 0x3439B08
	0x03439AD4 SUBS X9, X9, 0x1
	0x03439AD8 ADD X10, X10, 0x10
	0x03439ADC B.NE 0x3439AC8
	0x03439AE0 MOVZ W2, 0x3
	0x03439AE4 MOV X0, X24
	0x03439AE8 BL 0x1C5C788
	0x03439AEC B 0x3439B18
	0x03439AF0 LDR X8, [X19 + 0x48]
	0x03439AF4 MOVN W9, 0x0
	0x03439AF8 STR X8, [X31 + 0x18]
	0x03439AFC STR X31, [X19 + 0x48]
	0x03439B00 STR W9, [X19]
	0x03439B04 B 0x3439B74
	0x03439B08 LDR W9, [X10]
	0x03439B0C ADD W9, W9, 0x3
	0x03439B10 ADD X8, X8, W9, 0x4, SXTW
	0x03439B14 ADD X0, X8, 0x138
	0x03439B18 LDP X8, X9, [X0]
	0x03439B1C MOV X0, X24
	0x03439B20 MOV X1, X21
	0x03439B24 MOV X2, X20
	0x03439B28 MOV X3, X22
	0x03439B2C MOV X4, X23
	0x03439B30 MOV W5, W26
	0x03439B34 MOV X6, X27
	0x03439B38 MOV X7, X25
	0x03439B3C STR X9, [X31]
	0x03439B40 BLR X8
	0x03439B44 CBZ X0, 0x3439C74
	0x03439B48 ADRP X8, 0xCBD000
	0x03439B4C LDR X8, [X8 + 0x1F8]
	0x03439B50 LDR X1, [X8]
	0x03439B54 BL 0x269F5D0
	0x03439B58 ADRP X8, 0xCBD000
	0x03439B5C LDR X8, [X8 + 0x1F0]
	0x03439B60 STR X0, [X31 + 0x18]
	0x03439B64 LDR X1, [X8]
	0x03439B68 ADD X0, X31, 0x18
	0x03439B6C BL 0x2677430
	0x03439B70 TBZ X0, 0x0, 0x3439BB0
	0x03439B74 ADRP X8, 0xCBD000
	0x03439B78 LDR X8, [X8 + 0x1E0]
	0x03439B7C ADD X0, X31, 0x18
	0x03439B80 LDR X1, [X8]
	0x03439B84 BL 0x2677474
	0x03439B88 MOVN W8, 0x1
	0x03439B8C STR W8, [X19], #0x8
	0x03439B90 LDR X0, [X28]
	0x03439B94 LDR W8, [X0 + 0xE0]
	0x03439B98 CBNZ W8, 0x3439BA0
	0x03439B9C BL 0x1C16DFC
	0x03439BA0 MOV X0, X19
	0x03439BA4 MOV X1, X31
	0x03439BA8 BL 0x32C4864
	0x03439BAC B 0x3439BE8
	0x03439BB0 STR W31, [X19]
	0x03439BB4 LDR X8, [X31 + 0x18]
	0x03439BB8 STR X8, [X19 + 0x48]
	0x03439BBC LDR X0, [X28]
	0x03439BC0 LDR W8, [X0 + 0xE0]
	0x03439BC4 CBNZ W8, 0x3439BCC
	0x03439BC8 BL 0x1C16DFC
	0x03439BCC ADRP X8, 0xCF6000
	0x03439BD0 LDR X8, [X8 + 0x418]
	0x03439BD4 ADD X0, X19, 0x8
	0x03439BD8 LDR X3, [X8]
	0x03439BDC ADD X1, X31, 0x18
	0x03439BE0 MOV X2, X19
	0x03439BE4 BL 0x2187084
	0x03439BE8 LDP X20, X19, [X31 + 0x60]
	0x03439BEC LDP X22, X21, [X31 + 0x50]
	0x03439BF0 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0xFA5000
	014 Move W8, [X20+1663]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {70}
	020 Move X0, 0xCF7000
	021 Move X0, [X0+976]
	022 Call 0x1C17CF4
	023 Move X0, 0xCBE000
	024 Move X0, [X0+640]
	025 Call 0x1C17CF4
	026 Move X0, 0xCC4000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xCBC000
	030 Move X0, [X0+2064]
	031 Call 0x1C17CF4
	032 Move X0, 0xCBC000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move X0, 0xCBC000
	036 Move X0, [X0+1744]
	037 Call 0x1C17CF4
	038 Move X0, 0xCF6000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0xCBE000
	042 Move X0, [X0+480]
	043 Call 0x1C17CF4
	044 Move X0, 0xCBE000
	045 Move X0, [X0+496]
	046 Call 0x1C17CF4
	047 Move X0, 0xCBE000
	048 Move X0, [X0+504]
	049 Call 0x1C17CF4
	050 Move X0, 0xCC4000
	051 Move X0, [X0+928]
	052 Call 0x1C17CF4
	053 Move X0, 0xCE4000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move X0, 0xCF6000
	057 Move X0, [X0+2000]
	058 Call 0x1C17CF4
	059 Move X0, 0xCF6000
	060 Move X0, [X0+2008]
	061 Call 0x1C17CF4
	062 Move X0, 0xCBB000
	063 Move X0, [X0+2440]
	064 Call 0x1C17CF4
	065 Move X0, 0xCF7000
	066 Move X0, [X0+984]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+1663], W8
	070 Move [X31+24], X31
	071 Move X28, 0xCBE000
	072 Move W8, [X19]
	073 Move X28, [X28+640]
	074 Compare W8, 0
	075 JumpIfEqual {204}
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {288}
	079 Move X25, [X19+40]
	080 Compare X25, 0
	081 JumpIfEqual {306}
	082 Move X0, [X25+32]
	083 Compare X0, 0
	084 JumpIfEqual {307}
	085 Move X8, 0xCF7000
	086 Move X9, 0xCBB000
	087 Move X8, [X8+984]
	088 Move X9, [X9+2440]
	089 Move X21, [X8]
	090 Move X20, [X9]
	091 Move X1, X31
	092 Call Uri.get_AbsolutePath, X0
	093 Move X8, 0xCC4000
	094 Move X8, [X8+2264]
	095 Move X22, X0
	096 Move X0, [X8]
	097 Move W1, 1
	098 Call 0x1C17D6C
	099 Move X1, X0
	100 Compare X1, 0
	101 JumpIfEqual {308}
	102 Move W8, [X1+24]
	103 Compare W8, 0
	104 JumpIfEqual {309}
	105 Move W8, 47
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X22, 0
	108 JumpIfEqual {310}
	109 Move X0, X22
	110 Move X2, X31
	111 Call String.TrimEnd, X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call String.Concat, X0, X1
	115 Move X8, 0xCC4000
	116 Move X8, [X8+928]
	117 Move X22, X0
	118 Move X23, [X25+32]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X21, X0
	122 Move X1, X23
	123 Move X2, X31
	124 Call UriBuilder..ctor, X0, X1
	125 Compare X21, 0
	126 JumpIfEqual {311}
	127 Move X0, X21
	128 Move X1, X22
	129 Move X2, X31
	130 Call UriBuilder.set_Path, X0, X1
	131 Move X0, X21
	132 Move X1, X20
	133 Move X2, X31
	134 Call UriBuilder.set_Query, X0, X1
	135 Move X0, X21
	136 Move X1, X31
	137 Call UriBuilder.get_Uri, X0
	138 Move X8, 0xCE4000
	139 Move X9, 0xCBC000
	140 Move X8, [X8+1240]
	141 Move X9, [X9+1744]
	142 Move X20, X0
	143 Move X21, [X8]
	144 Move X0, [X9]
	145 Call 0x1C17F10
	146 Move X8, 0xCBC000
	147 Move X8, [X8+1728]
	148 Move X22, X0
	149 Move X1, [X8]
	150 Call Dictionary`2<Object, Object>..ctor, X0
	151 Move X8, 0xCF6000
	152 Move X8, [X8+2008]
	153 Move X1, [X19+48]
	154 Move X0, [X8]
	155 Move X2, X31
	156 Call String.Concat, X0, X1
	157 Compare X22, 0
	158 JumpIfEqual {312}
	159 Move X8, 0xCF6000
	160 Move X8, [X8+2000]
	161 Move X9, 0xCBC000
	162 Move X9, [X9+2064]
	163 Move X2, X0
	164 Move X1, [X8]
	165 Move X3, [X9]
	166 Move X0, X22
	167 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	168 Move X0, [X19+32]
	169 Move X1, X31
	170 Call JsonWriter.ToJson, X0
	171 Move X23, X0
	172 Move X0, X31
	173 Call Encoding.get_UTF8
	174 Compare X0, 0
	175 JumpIfEqual {313}
	176 Move X8, [X0]
	177 Move X9, [X8+616]
	178 Move X2, [X8+624]
	179 Move X1, X23
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X24, [X25+16]
	182 Compare X24, 0
	183 JumpIfEqual {314}
	184 Move X10, 0xCF6000
	185 Move X10, [X10+1976]
	186 Move X8, [X24]
	187 Move W26, [X25+24]
	188 Move X27, [X19+56]
	189 Move X25, [X19+64]
	190 Move X1, [X10]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X23, X0
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 3
	202 Move X0, X24
	203 Call 0x1C5D788
	204 Move X8, [X19+72]
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W9, TEMP
	208 Move [X31+24], X8
	209 Move [X19+72], X31
	210 Move [X19], W9
	211 Move W9, [X10]
	212 Add W9, W9, 3
	213 Add X8, X8, W9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X9, [X0+8]
	217 Move X0, X24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X22
	221 Move X4, X23
	222 Move W5, W26
	223 Move X6, X27
	224 Move X7, X25
	225 Move [X31], X9
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {315}
	229 Move X8, 0xCBE000
	230 Move X8, [X8+504]
	231 Move X1, [X8]
	232 Call Task`1<Object>.GetAwaiter, X0
	233 Move X8, 0xCBE000
	234 Move X8, [X8+496]
	235 Move [X31+24], X0
	236 Move X1, [X8]
	237 Add X0, X31, 24
	238 Call TaskAwaiter`1<Object>.get_IsCompleted, X0
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {260}
	243 Move X8, 0xCBE000
	244 Move X8, [X8+480]
	245 Add X0, X31, 24
	246 Move X1, [X8]
	247 Call TaskAwaiter`1<Object>.GetResult, X0
	248 Move TEMP, 1
	249 Not TEMP
	250 Move W8, TEMP
	251 Move [X19+8], W8
	252 Move X0, [X28]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X19
	258 Move X1, X31
	259 Call AsyncTaskMethodBuilder.SetResult, X0
	260 Move [X19], W31
	261 Move X8, [X31+24]
	262 Move [X19+72], X8
	263 Move X0, [X28]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X8, 0xCF7000
	269 Move X8, [X8+976]
	270 Add X0, X19, 8
	271 Move X3, [X8]
	272 Add X1, X31, 24
	273 Move X2, X19
	274 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	275 Move X20, [X31+96]
	276 Move X19, [X31+104]
	277 Move X22, [X31+80]
	278 Move X21, [X31+88]
	279 Move X24, [X31+64]
	280 Move X23, [X31+72]
	281 Move X26, [X31+48]
	282 Move X25, [X31+56]
	283 Move X28, [X31+32]
	284 Move X27, [X31+40]
	285 Move X30, [X31+16]
	286 Add X31, X31, 112
	287 Return 
	288 Move X0, 0xCC3000
	289 Move X0, [X0+1400]
	290 Call 0x1C17D08
	291 Call 0x1C17F10
	292 Move X20, X0
	293 Move X0, 0xCF6000
	294 Move X0, [X0+3016]
	295 Call 0x1C17D08
	296 Move X1, X0
	297 Move X0, X20
	298 Move X2, X31
	299 Call ArgumentException..ctor, X0, X1
	300 Move X0, 0xCF7000
	301 Move X0, [X0+992]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Call 0x1C17DEC
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F28
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X20, X0
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, X20
	319 Call 0x3EB2AD0
	320 Move X20, X0
	321 Move X0, 0xCBB000
	322 Move X0, [X0+2000]
	323 Call 0x1C17D08
	324 Move X8, [X20]
	325 Move X1, [X8]
	326 Call 0x1C18270
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {348}
	331 Move X20, [X20]
	332 Call 0x3EB2AE0
	333 Move TEMP, 1
	334 Not TEMP
	335 Move W8, TEMP
	336 Move [X19+8], W8
	337 Move X0, 0xCBE000
	338 Move X0, [X0+640]
	339 Call 0x1C17D08
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X20
	346 Move X2, X31
	347 Call AsyncTaskMethodBuilder.SetException, X0, X1
	348 Move W0, 8
	349 Call 0x3EB2AF0
	350 Move X8, [X20]
	351 Move [X0], X8
	352 Move X1, 0xA7C000
	353 Add X1, X1, 3672
	354 Move X2, X31
	355 Call 0x3EB2B00
	356 Move X20, X0
	357 Call 0x3EB2AE0
	358 Move X0, X20
	359 Call 0x1D2D690
	360 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x03439BF4 LDP X26, X25, [X31 + 0x30]
	0x03439BF8 LDP X28, X27, [X31 + 0x20]
	0x03439BFC LDR X30, [X31 + 0x10]
	0x03439C00 ADD X31, X31, 0x70
	0x03439C04 RET
	0x03439C08 ADRP X0, 0xCC2000
	0x03439C0C LDR X0, [X0 + 0x578]
	0x03439C10 BL 0x1C16D08
	0x03439C14 BL 0x1C16F10
	0x03439C18 MOV X20, X0
	0x03439C1C ADRP X0, 0xCF5000
	0x03439C20 LDR X0, [X0 + 0xBC8]
	0x03439C24 BL 0x1C16D08
	0x03439C28 MOV X1, X0
	0x03439C2C MOV X0, X20
	0x03439C30 MOV X2, X31
	0x03439C34 BL 0x3314A68
	0x03439C38 ADRP X0, 0xCF6000
	0x03439C3C LDR X0, [X0 + 0x428]
	0x03439C40 BL 0x1C16D08
	0x03439C44 MOV X1, X0
	0x03439C48 MOV X0, X20
	0x03439C4C BL 0x1C16DEC
	0x03439C50 BL 0x1C16F20
	0x03439C54 BL 0x1C16F20
	0x03439C58 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xFA5000
	007 Move X22, 0xCBE000
	008 Move W8, [X21+1664]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xCBE000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1664], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

